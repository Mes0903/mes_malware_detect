
e292cbe7ddbc036009d7ef0deaab49d12005c9267e12a338bbba7782925ef1a6.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	push   esp
  402001:	push   ebx
  402002:	add    eax,DWORD PTR [eax]
  402004:	add    BYTE PTR [eax],al
  402006:	add    BYTE PTR [eax],al
  402008:	dec    eax
  402009:	add    BYTE PTR [eax],al
  40200b:	add    BYTE PTR [edx],al
  40200d:	add    BYTE PTR ds:0x30b8400,al
  402013:	add    BYTE PTR [edi+eax*2+0x10000],dl
  40201a:	add    BYTE PTR [eax],al
  40201c:	add    eax,0xc060000
  402021:	test   DWORD PTR [eax],eax
  402023:	add    al,ah
  402025:	test   DWORD PTR [edx],eax
	...
  40204f:	add    BYTE PTR [edx],ah
  402051:	add    BYTE PTR [eax],ch
  402053:	or     eax,DWORD PTR [eax]
  402055:	add    BYTE PTR [esi],al
  402057:	add    BYTE PTR [edx],ch
  402059:	add    BYTE PTR [eax],al
  40205b:	add    BYTE PTR [ebx],al
  40205d:	xor    BYTE PTR [ecx],cl
  40205f:	add    BYTE PTR [eax+eax*1],cl
  402062:	add    BYTE PTR [eax],al
  402064:	add    BYTE PTR [eax],al
  402066:	add    BYTE PTR [eax],al
  402068:	jae    0x402085
  40206a:	add    BYTE PTR [eax],al
  40206c:	or     al,BYTE PTR [eax+0x4000001]
  402072:	add    BYTE PTR [edx],ch
  402074:	add    esi,DWORD PTR [eax]
  402076:	or     DWORD PTR [eax],eax
  402078:	push   eax
	...
  402081:	add    bl,BYTE PTR [edi]
  402083:	sbb    BYTE PTR [eax],ch
  402085:	pusha  
  402086:	add    BYTE PTR [eax],al
  402088:	push   es
  402089:	sub    BYTE PTR [eax+eax*1],bl
  40208c:	add    BYTE PTR [edx],cl
  40208e:	add    BYTE PTR [edx],al
  402090:	sub    BYTE PTR [eax+eax*1],al
  402093:	add    BYTE PTR [esi],al
  402095:	add    BYTE PTR [edx],al
  402097:	pop    ds
  402098:	sbb    al,0x28
  40209a:	pusha  
  40209b:	add    BYTE PTR [eax],al
  40209d:	push   es
  40209e:	outs   dx,DWORD PTR ds:[esi]
  40209f:	sbb    eax,0xa0000
  4020a4:	add    bl,BYTE PTR [edi]
  4020a6:	and    BYTE PTR [eax],ch
  4020a8:	pusha  
  4020a9:	add    BYTE PTR [eax],al
  4020ab:	push   es
  4020ac:	outs   dx,DWORD PTR ds:[esi]
  4020ad:	push   ds
  4020ae:	add    BYTE PTR [eax],al
  4020b0:	or     al,BYTE PTR [eax]
  4020b2:	add    bl,BYTE PTR [edi]
  4020b4:	and    al,0x28
  4020b6:	pusha  
  4020b7:	add    BYTE PTR [eax],al
  4020b9:	push   es
  4020ba:	outs   dx,DWORD PTR ds:[esi]
  4020bb:	pop    ds
  4020bc:	add    BYTE PTR [eax],al
  4020be:	or     al,BYTE PTR [eax]
  4020c0:	add    bl,BYTE PTR [edi]
  4020c2:	sub    BYTE PTR [eax],ch
  4020c4:	pusha  
  4020c5:	add    BYTE PTR [eax],al
  4020c7:	push   es
  4020c8:	outs   dx,DWORD PTR ds:[esi]
  4020c9:	and    BYTE PTR [eax],al
  4020cb:	add    BYTE PTR [edx],cl
  4020cd:	add    BYTE PTR [eax],al
  4020cf:	sub    bl,BYTE PTR [ebx]
  4020d1:	xor    BYTE PTR ds:0x13000,al
  4020d7:	add    BYTE PTR [ecx],al
  4020d9:	add    BYTE PTR [eax],al
  4020db:	adc    DWORD PTR [eax],eax
  4020dd:	jle    0x4020e0
  4020df:	add    BYTE PTR [eax],al
  4020e1:	add    al,0xd
  4020e3:	or     DWORD PTR [eax],ebp
  4020e5:	and    DWORD PTR [eax],eax
  4020e7:	add    BYTE PTR [edx],cl
  4020e9:	add    BYTE PTR [eax],al
  4020eb:	jle    0x4020ee
  4020ed:	add    BYTE PTR [eax],al
  4020ef:	add    al,0x6f
  4020f1:	and    al,BYTE PTR [eax]
  4020f3:	add    BYTE PTR [edx],cl
  4020f5:	and    eax,0x17e26
  4020fa:	add    BYTE PTR [edi+ebp*2],al
  4020fd:	and    eax,DWORD PTR [eax]
  4020ff:	add    BYTE PTR [edx],cl
  402101:	and    eax,0x1301fe26
  402106:	add    eax,0xd7390511
  40210b:	add    BYTE PTR [eax],al
  40210d:	add    BYTE PTR [edi],dl
  40210f:	inc    ebp
  402110:	add    DWORD PTR [eax],eax
  402112:	add    BYTE PTR [eax],al
  402114:	idiv   bh
  402116:	(bad)  
  402117:	call   DWORD PTR [edi]
  402119:	sub    eax,0x4d006
  40211e:	add    BYTE PTR [esi],al
  402120:	es push ss
  402122:	sub    BYTE PTR [eax+0x0],ah
  402125:	add    BYTE PTR [esi],al
  402127:	or     bl,BYTE PTR [edx]
  402129:	sub    BYTE PTR [eax+0x0],ah
  40212c:	add    BYTE PTR [esi],al
  40212e:	jle    0x402131
  402130:	add    BYTE PTR [eax],al
  402132:	add    al,0x6f
  402134:	and    al,BYTE PTR [eax]
  402136:	add    BYTE PTR [edx],cl
  402138:	and    eax,0x60281e26
  40213d:	add    BYTE PTR [eax],al
  40213f:	push   es
  402140:	ficom  DWORD PTR [ebx]
  402142:	add    al,0xb
  402144:	sub    esp,DWORD PTR [ebp+0x7e]
  402147:	add    DWORD PTR [eax],eax
  402149:	add    BYTE PTR [edi+eax*1],al
  40214c:	outs   dx,DWORD PTR ds:[esi]
  40214d:	and    al,0x0
  40214f:	add    BYTE PTR [edx],cl
  402151:	or     al,0x8
  402153:	outs   dx,DWORD PTR ds:[esi]
  402154:	and    eax,0x130a0000
  402159:	add    eax,0x412c0511
  40215e:	pop    es
  40215f:	push   es
  402160:	inc    BYTE PTR [ecx]
  402162:	pop    ds
  402163:	or     al,0x28
  402165:	pusha  
  402166:	add    BYTE PTR [eax],al
  402168:	push   es
  402169:	inc    BYTE PTR [ecx]
  40216b:	adc    eax,DWORD PTR [esi]
  40216d:	adc    DWORD PTR [esi],eax
  40216f:	sub    al,0x23
  402171:	sbb    DWORD PTR [ebp+0x1],eax
  402174:	add    BYTE PTR [eax],al
  402176:	add    dh,dh
  402178:	(bad)  
  402179:	(bad)  
  40217a:	(bad)  
  40217b:	jle    0x40217e
  40217d:	add    BYTE PTR [eax],al
  40217f:	add    al,0x6
  402181:	jle    0x402184
  402183:	add    BYTE PTR [eax],al
  402185:	add    al,0x7
  402187:	outs   dx,DWORD PTR ds:[esi]
  402188:	and    al,0x0
  40218a:	add    BYTE PTR [edx],cl
  40218c:	and    eax,0x266f26
  402191:	add    BYTE PTR [edx],cl
  402193:	add    BYTE PTR [eax],al
  402195:	push   es
  402196:	pop    ds
  402197:	adc    BYTE PTR [eax],ch
  402199:	pusha  
  40219a:	add    BYTE PTR [eax],al
  40219c:	push   es
  40219d:	(bad)  
  40219e:	or     al,BYTE PTR [eax]
  4021a0:	add    BYTE PTR [edi],al
  4021a2:	pop    ds
  4021a3:	adc    al,0x28
  4021a5:	pusha  
  4021a6:	add    BYTE PTR [eax],al
  4021a8:	push   es
  4021a9:	(bad)  
  4021aa:	or     eax,DWORD PTR [edi]
  4021ac:	adc    DWORD PTR [ebx+edx*1],eax
  4021af:	pop    es
  4021b0:	adc    DWORD PTR [edi],eax
  4021b2:	xor    DWORD PTR [edx+0x17e],edx
  4021b8:	add    al,0x6
  4021ba:	jle    0x4021bd
  4021bc:	add    BYTE PTR [eax],al
  4021be:	add    al,0x6f
  4021c0:	and    al,BYTE PTR [eax]
  4021c2:	add    BYTE PTR [edx],cl
  4021c4:	and    eax,0x6fda0626
  4021c9:	daa    
  4021ca:	add    BYTE PTR [eax],al
  4021cc:	or     al,BYTE PTR [eax]
  4021ce:	jle    0x4021d1
  4021d0:	add    BYTE PTR [eax],al
  4021d2:	add    al,0x7e
  4021d4:	add    DWORD PTR [eax],eax
  4021d6:	add    BYTE PTR [edi+ebp*2],al
  4021d9:	and    al,BYTE PTR [eax]
  4021db:	add    BYTE PTR [edx],cl
  4021dd:	and    eax,0x286f26
  4021e2:	add    BYTE PTR [edx],cl
  4021e4:	add    BYTE PTR [eax],al
  4021e6:	jle    0x4021e9
  4021e8:	add    BYTE PTR [eax],al
  4021ea:	add    al,0x2
  4021ec:	sub    BYTE PTR [ecx],ch
  4021ee:	add    BYTE PTR [eax],al
  4021f0:	or     dh,BYTE PTR [ebx+0x2a]
  4021f3:	add    BYTE PTR [eax],al
  4021f5:	or     ch,BYTE PTR [edi+0x2b]
  4021f8:	add    BYTE PTR [eax],al
  4021fa:	or     al,BYTE PTR [eax]
  4021fc:	add    dh,bl
  4021fe:	or     DWORD PTR [eax],eax
  402200:	or     DWORD PTR [eax],ebp
  402202:	sub    al,0x0
  402204:	add    BYTE PTR [edx],cl
  402206:	add    ah,bl
  402208:	add    BYTE PTR [eax],al
  40220a:	add    BYTE PTR [edx],ch
  40220c:	inc    ecx
  40220d:	sbb    al,0x0
  40220f:	add    BYTE PTR [edx],al
  402211:	add    BYTE PTR [eax],al
  402213:	add    BYTE PTR [edi],cl
  402215:	add    BYTE PTR [eax],al
  402217:	add    BYTE PTR [ecx+eax*1],dl
  40221a:	add    BYTE PTR [eax],al
  40221c:	and    eax,DWORD PTR [ecx]
  40221e:	add    BYTE PTR [eax],al
  402220:	or     DWORD PTR [eax],eax
  402222:	add    BYTE PTR [eax],al
  402224:	add    BYTE PTR [eax],al
  402226:	add    BYTE PTR [eax],al
  402228:	sbb    esi,DWORD PTR [eax]
  40222a:	add    eax,DWORD PTR [eax]
  40222c:	and    al,BYTE PTR [eax]
	...
  402236:	sub    BYTE PTR ds:0x280a0000,ch
  40223c:	add    BYTE PTR cs:[eax],al
  40223f:	or     al,BYTE PTR [eax]
  402241:	fiadd  WORD PTR [edx]
  402243:	add    ah,bl
  402245:	add    BYTE PTR [eax],ch
  402247:	adc    DWORD PTR [eax],eax
  402249:	add    BYTE PTR [esi],al
  40224b:	and    eax,0x2f6f0226
  402250:	add    BYTE PTR [eax],al
  402252:	or     al,BYTE PTR [eax]
  402254:	add    BYTE PTR [edx],ch
  402256:	add    BYTE PTR [eax],al
  402258:	add    DWORD PTR [eax],edx
  40225a:	add    BYTE PTR [eax],al
  40225c:	add    al,BYTE PTR [eax]
  40225e:	add    al,BYTE PTR [eax]
  402260:	or     eax,0x2000f
  402265:	add    BYTE PTR [eax],al
  402267:	add    BYTE PTR [ebx],al
  402269:	xor    BYTE PTR [ecx],cl
  40226b:	add    BYTE PTR [esi],dl
	...
  402275:	add    ch,BYTE PTR [eax]
  402277:	adc    eax,DWORD PTR [eax]
  402279:	add    BYTE PTR [esi],al
  40227b:	outs   dx,DWORD PTR ds:[esi]
  40227c:	push   ss
  40227d:	add    BYTE PTR [eax],al
  40227f:	push   es
  402280:	and    eax,0x306f26
  402285:	add    BYTE PTR [edx],cl
  402287:	add    BYTE PTR [eax],al
  402289:	sub    al,BYTE PTR [eax]
  40228b:	add    BYTE PTR [ebx],al
  40228d:	xor    BYTE PTR [ecx],cl
  40228f:	add    BYTE PTR [edi],al
  402291:	add    BYTE PTR [eax],al
  402293:	add    BYTE PTR [eax],al
  402295:	add    BYTE PTR [eax],al
  402297:	add    BYTE PTR [edx],al
  402299:	sub    BYTE PTR [ecx],dh
  40229b:	add    BYTE PTR [eax],al
  40229d:	or     ch,BYTE PTR [edx]
  40229f:	add    BYTE PTR [ebx],al
  4022a1:	xor    BYTE PTR [ecx],cl
  4022a3:	add    BYTE PTR [edx],cl
	...
  4022ad:	add    ch,BYTE PTR [eax]
  4022af:	xor    al,BYTE PTR [eax]
  4022b1:	add    BYTE PTR [edx],cl
  4022b3:	add    BYTE PTR [eax],al
  4022b5:	sub    al,BYTE PTR [eax]
  4022b7:	add    BYTE PTR [ebx],dl
  4022b9:	xor    BYTE PTR ds:0x4f00,al
  4022bf:	add    BYTE PTR [edx],al
  4022c1:	add    BYTE PTR [eax],al
  4022c3:	adc    DWORD PTR [eax],ebp
  4022c5:	xor    eax,DWORD PTR [eax]
  4022c7:	add    BYTE PTR [edx],cl
  4022c9:	and    eax,0x6fe1426
  4022ce:	push   cs
  4022cf:	add    BYTE PTR [eax],al
  4022d1:	push   es
  4022d2:	jae    0x402308
  4022d4:	add    BYTE PTR [eax],al
  4022d6:	or     ch,BYTE PTR [edi+0x35]
  4022d9:	add    BYTE PTR [eax],al
  4022db:	or     ch,BYTE PTR [eax]
  4022dd:	xor    eax,DWORD PTR [eax]
  4022df:	add    BYTE PTR [edx],cl
  4022e1:	and    eax,0x6fe1426
  4022e6:	or     al,0x0
  4022e8:	add    BYTE PTR [esi],al
  4022ea:	jae    0x402320
  4022ec:	add    BYTE PTR [eax],al
  4022ee:	or     ch,BYTE PTR [edi+0x36]
  4022f1:	add    BYTE PTR [eax],al
  4022f3:	or     ch,BYTE PTR [eax]
  4022f5:	aaa    
  4022f6:	add    BYTE PTR [eax],al
  4022f8:	or     ah,BYTE PTR ds:0x28060a26
  4022fe:	or     eax,0x25060000
  402303:	or     eax,DWORD PTR es:[edi]
  402306:	sub    BYTE PTR [eax],bh
  402308:	add    BYTE PTR [eax],al
  40230a:	or     ah,BYTE PTR ds:0x28026
  402310:	add    BYTE PTR [edx+ebp*1],al
  402313:	add    BYTE PTR [ebx],al
  402315:	xor    BYTE PTR [ecx],cl
  402317:	add    BYTE PTR [edi],al
  402319:	add    BYTE PTR [eax],al
  40231b:	add    BYTE PTR [eax],al
  40231d:	add    BYTE PTR [eax],al
  40231f:	add    BYTE PTR [edx],al
  402321:	sub    BYTE PTR [ecx],bh
  402323:	add    BYTE PTR [eax],al
  402325:	or     ch,BYTE PTR [edx]
  402327:	add    BYTE PTR [ebx],al
  402329:	xor    BYTE PTR [ecx],cl
  40232b:	add    BYTE PTR [ecx],al
  40232d:	add    BYTE PTR [eax],al
  40232f:	add    BYTE PTR [eax],al
  402331:	add    BYTE PTR [eax],al
  402333:	add    BYTE PTR [edx],ch
  402335:	add    BYTE PTR [eax],al
  402337:	add    BYTE PTR [ebx],dl
  402339:	xor    BYTE PTR [ebx],al
  40233b:	add    BYTE PTR [ebx+0x0],dl
  40233e:	add    BYTE PTR [eax],al
  402340:	add    eax,DWORD PTR [eax]
  402342:	add    BYTE PTR [ecx],dl
  402344:	sub    BYTE PTR [edi],dh
  402346:	add    BYTE PTR [eax],al
  402348:	or     cl,BYTE PTR [edx]
  40234a:	push   es
  40234b:	sub    BYTE PTR ds:0xb060000,cl
  402351:	add    ebp,DWORD PTR [edi+0x3a]
  402354:	add    BYTE PTR [eax],al
  402356:	or     ah,BYTE PTR ds:0x3b6f0726
  40235c:	add    BYTE PTR [eax],al
  40235e:	or     ah,BYTE PTR ds:0x17322c26
  402364:	inc    ebp
  402365:	add    DWORD PTR [eax],eax
  402367:	add    BYTE PTR [eax],al
  402369:	idiv   bh
  40236b:	(bad)  
  40236c:	call   DWORD PTR [edi]
  40236e:	sub    eax,0xcd006
  402373:	add    BYTE PTR [esi],al
  402375:	es push es
  402377:	pop    es
  402378:	outs   dx,DWORD PTR ds:[esi]
  402379:	cmp    al,0x0
  40237b:	add    BYTE PTR [edx],cl
  40237d:	and    eax,0x611f0c26
  402382:	push   0x8
  402384:	sub    BYTE PTR [esi+0x0],ch
  402387:	add    BYTE PTR [esi],al
  402389:	and    eax,0x28090d26
  40238e:	cmp    eax,0x250a0000
  402393:	sub    dl,BYTE PTR es:[edx+ebp*1]
  402397:	add    BYTE PTR [ebx],dl
  402399:	xor    BYTE PTR [eax+eax*1],al
  40239c:	inc    edx
  40239d:	add    BYTE PTR [eax],al
  40239f:	add    BYTE PTR [eax+eax*1],al
  4023a2:	add    BYTE PTR [ecx],dl
  4023a4:	add    ch,BYTE PTR [edi+0x3e]
  4023a7:	add    BYTE PTR [eax],al
  4023a9:	or     ah,BYTE PTR ds:0x1f060a26
  4023af:	sub    al,0x6f
  4023b1:	aas    
  4023b2:	add    BYTE PTR [eax],al
  4023b4:	or     cl,BYTE PTR [ebx]
  4023b6:	pop    es
  4023b7:	push   ss
  4023b8:	xor    bl,BYTE PTR [edi+edx*1]
  4023bb:	inc    ebp
  4023bc:	add    DWORD PTR [eax],eax
  4023be:	add    BYTE PTR [eax],al
  4023c0:	idiv   bh
  4023c2:	(bad)  
  4023c3:	call   DWORD PTR [edi]
  4023c5:	sub    eax,0xdd006
  4023ca:	add    BYTE PTR [esi],al
  4023cc:	es push es
  4023ce:	push   ss
  4023cf:	pop    es
  4023d0:	outs   dx,DWORD PTR ds:[esi]
  4023d1:	inc    eax
  4023d2:	add    BYTE PTR [eax],al
  4023d4:	or     cl,BYTE PTR [edx]
  4023d6:	push   es
  4023d7:	pop    ds
  4023d8:	mov    WORD PTR es:[edi],ds
  4023db:	add    BYTE PTR [eax],al
  4023dd:	add    DWORD PTR [eax],ebp
  4023df:	inc    ecx
  4023e0:	add    BYTE PTR [eax],al
  4023e2:	or     ah,BYTE PTR ds:0x2a26
  4023e8:	adc    esi,DWORD PTR [eax]
  4023ea:	add    al,0x0
  4023ec:	outs   dx,DWORD PTR ds:[esi]
  4023ed:	add    BYTE PTR [eax],al
  4023ef:	add    BYTE PTR ds:0x7e110000,al
  4023f5:	add    al,BYTE PTR [eax]
  4023f7:	add    BYTE PTR [esp+ebp*1],al
  4023fa:	pusha  
  4023fb:	sbb    DWORD PTR [ebp+0x1],eax
  4023fe:	add    BYTE PTR [eax],al
  402400:	add    dh,dh
  402402:	(bad)  
  402403:	(bad)  
  402404:	call   DWORD PTR [edi]
  402406:	sub    eax,0xed006
  40240b:	add    BYTE PTR [esi],al
  40240d:	es jle 0x402412
  402410:	add    BYTE PTR [eax],al
  402412:	add    al,0x6f
  402414:	inc    edx
  402415:	add    BYTE PTR [eax],al
  402417:	or     ah,BYTE PTR ds:0xd160c26
  40241d:	sub    ebp,DWORD PTR [edx]
  40241f:	or     BYTE PTR [ecx],cl
  402421:	call   0x3a:0x6f03060a
  402428:	add    BYTE PTR [edx],cl
  40242a:	and    eax,0x432826
  40242f:	add    BYTE PTR [edx],cl
  402431:	sub    al,0x12
  402433:	sbb    al,BYTE PTR [ebp+0x1]
  402436:	add    BYTE PTR [eax],al
  402438:	add    dh,dh
  40243a:	(bad)  
  40243b:	(bad)  
  40243c:	(bad)  
  40243d:	jle    0x402441
  40243f:	add    BYTE PTR [eax],al
  402441:	add    al,0xb
  402443:	ficomp WORD PTR [ecx+ecx*1]
  402446:	pop    ss
  402447:	pop    eax
  402448:	or     eax,0x698e0809
  40244d:	xor    dl,al
  40244f:	sbb    BYTE PTR [ebp+0x1],al
  402452:	add    BYTE PTR [eax],al
  402454:	add    dh,dh
  402456:	(bad)  
  402457:	(bad)  
  402458:	call   DWORD PTR [edx+ebp*1]
  40245b:	jle    0x40245f
  40245d:	add    BYTE PTR [eax],al
  40245f:	add    al,0x2a
  402461:	pop    es
  402462:	sub    al,BYTE PTR [eax]
  402464:	add    esi,DWORD PTR [eax]
  402466:	or     DWORD PTR [eax],eax
  402468:	xor    al,0x0
  40246a:	add    BYTE PTR [eax],al
  40246c:	add    BYTE PTR [eax],al
  40246e:	add    BYTE PTR [eax],al
  402470:	jae    0x4024b6
  402472:	add    BYTE PTR [eax],al
  402474:	or     al,BYTE PTR [eax+0x4000003]
  40247a:	jae    0x4024c1
  40247c:	add    BYTE PTR [eax],al
  40247e:	or     al,BYTE PTR [eax+0x4000004]
  402484:	jae    0x4024cc
  402486:	add    BYTE PTR [eax],al
  402488:	or     al,BYTE PTR [eax+0x4000005]
  40248e:	jae    0x4024d7
  402490:	add    BYTE PTR [eax],al
  402492:	or     al,BYTE PTR [eax+0x4000006]
  402498:	jae    0x4024e2
  40249a:	add    BYTE PTR [eax],al
  40249c:	or     al,BYTE PTR [eax+0x4000007]
  4024a2:	add    BYTE PTR [edx],ch
  4024a4:	adc    esi,DWORD PTR [eax]
  4024a6:	add    eax,DWORD PTR [eax]
  4024a8:	adc    al,BYTE PTR [eax]
  4024aa:	add    BYTE PTR [eax],al
  4024ac:	push   es
  4024ad:	add    BYTE PTR [eax],al
  4024af:	adc    DWORD PTR [eax],eax
  4024b1:	jle    0x4024b6
  4024b3:	add    BYTE PTR [eax],al
  4024b5:	add    al,0x6f
  4024b7:	dec    ecx
  4024b8:	add    BYTE PTR [eax],al
  4024ba:	or     ah,BYTE PTR ds:0x2b0a26
  4024c0:	push   es
  4024c1:	sub    al,BYTE PTR [eax]
  4024c3:	add    BYTE PTR [ebx],dl
  4024c5:	xor    BYTE PTR [ebx],al
  4024c7:	add    BYTE PTR [edx],dl
  4024c9:	add    BYTE PTR [eax],al
  4024cb:	add    BYTE PTR [edi],al
  4024cd:	add    BYTE PTR [eax],al
  4024cf:	adc    DWORD PTR [eax],eax
  4024d1:	jle    0x4024d7
  4024d3:	add    BYTE PTR [eax],al
  4024d5:	add    al,0x6f
  4024d7:	dec    edx
  4024d8:	add    BYTE PTR [eax],al
  4024da:	or     ah,BYTE PTR ds:0x2b0a26
  4024e0:	push   es
  4024e1:	sub    al,BYTE PTR [eax]
  4024e3:	add    BYTE PTR [ebx],dl
  4024e5:	xor    BYTE PTR [ebx],al
  4024e7:	add    BYTE PTR [edx],dl
  4024e9:	add    BYTE PTR [eax],al
  4024eb:	add    BYTE PTR [eax],cl
  4024ed:	add    BYTE PTR [eax],al
  4024ef:	adc    DWORD PTR [eax],eax
  4024f1:	jle    0x4024f8
  4024f3:	add    BYTE PTR [eax],al
  4024f5:	add    al,0x6f
  4024f7:	dec    ebx
  4024f8:	add    BYTE PTR [eax],al
  4024fa:	or     ah,BYTE PTR ds:0x2b0a26
  402500:	push   es
  402501:	sub    al,BYTE PTR [eax]
  402503:	add    BYTE PTR [ebx],dl
  402505:	xor    BYTE PTR [ebx],al
  402507:	add    BYTE PTR [edx],dl
  402509:	add    BYTE PTR [eax],al
  40250b:	add    BYTE PTR [ecx],cl
  40250d:	add    BYTE PTR [eax],al
  40250f:	adc    DWORD PTR [eax],eax
  402511:	jle    0x402519
  402513:	add    BYTE PTR [eax],al
  402515:	add    al,0x6f
  402517:	dec    esp
  402518:	add    BYTE PTR [eax],al
  40251a:	or     ah,BYTE PTR ds:0x2b0a26
  402520:	push   es
  402521:	sub    al,BYTE PTR [eax]
  402523:	add    BYTE PTR [ebx],dl
  402525:	xor    BYTE PTR [ebx],al
  402527:	add    BYTE PTR [edx],dl
  402529:	add    BYTE PTR [eax],al
  40252b:	add    BYTE PTR [edx],cl
  40252d:	add    BYTE PTR [eax],al
  40252f:	adc    DWORD PTR [eax],eax
  402531:	jle    0x40253a
  402533:	add    BYTE PTR [eax],al
  402535:	add    al,0x6f
  402537:	dec    ebp
  402538:	add    BYTE PTR [eax],al
  40253a:	or     ah,BYTE PTR ds:0x2b0a26
  402540:	push   es
  402541:	sub    al,BYTE PTR [eax]
  402543:	add    BYTE PTR [ebx],al
  402545:	xor    BYTE PTR [ecx],cl
  402547:	add    BYTE PTR [edx],cl
	...
  402551:	add    ch,BYTE PTR [eax]
  402553:	cmp    DWORD PTR [eax],eax
  402555:	add    BYTE PTR [edx],cl
  402557:	add    BYTE PTR [eax],al
  402559:	sub    al,BYTE PTR [eax]
  40255b:	add    BYTE PTR [ebx],dl
  40255d:	xor    BYTE PTR [eax+eax*1],al
  402560:	push   ds
  402561:	add    BYTE PTR [eax],al
  402563:	add    BYTE PTR [ebx],cl
  402565:	add    BYTE PTR [eax],al
  402567:	adc    DWORD PTR [edx],eax
  402569:	add    bh,BYTE PTR [ebx+0x8]
  40256c:	add    BYTE PTR [eax],al
  40256e:	add    al,0x28
  402570:	add    DWORD PTR [eax],eax
  402572:	add    BYTE PTR [ebx],ch
  402574:	and    eax,0x87d26
  402579:	add    BYTE PTR [edx+eax*1],al
  40257c:	jnp    0x402586
  40257e:	add    BYTE PTR [eax],al
  402580:	add    al,0xa
  402582:	sub    eax,DWORD PTR [eax]
  402584:	push   es
  402585:	sub    al,BYTE PTR [eax]
  402587:	add    BYTE PTR [ebx],dl
  402589:	xor    BYTE PTR [ebx],al
  40258b:	add    BYTE PTR [ebx+0x0],dl
  40258e:	add    BYTE PTR [eax],al
  402590:	or     al,0x0
  402592:	add    BYTE PTR [ecx],dl
  402594:	add    eax,DWORD PTR [edx]
  402596:	jnp    0x4025a0
  402598:	add    BYTE PTR [eax],al
  40259a:	add    al,0xfe
  40259c:	add    DWORD PTR [edx],ecx
  40259e:	push   es
  40259f:	sub    al,0x16
  4025a1:	sbb    al,0x45
  4025a3:	add    DWORD PTR [eax],eax
  4025a5:	add    BYTE PTR [eax],al
  4025a7:	idiv   bh
  4025a9:	(bad)  
  4025aa:	call   DWORD PTR [edi]
  4025ac:	sub    eax,0x17d006
  4025b1:	add    BYTE PTR [esi],al
  4025b3:	add    BYTE PTR es:[ebx],ch
  4025b6:	add    BYTE PTR cs:[ebx],al
  4025b9:	adc    al,0xfe
  4025bb:	add    DWORD PTR [edi],ebx
  4025bd:	sub    al,0x28
  4025bf:	pusha  
  4025c0:	add    BYTE PTR [eax],al
  4025c2:	push   es
  4025c3:	inc    BYTE PTR [ecx]
  4025c5:	or     al,BYTE PTR [esi]
  4025c7:	sub    al,0xe
  4025c9:	pop    ss
  4025ca:	sub    BYTE PTR [eax+0x0],ch
  4025cd:	add    BYTE PTR [esi],al
  4025cf:	and    eax,0x4e7326
  4025d4:	add    BYTE PTR [edx],cl
  4025d6:	jp     0x4025d8
  4025d8:	add    al,BYTE PTR [edx]
  4025da:	jl     0x4025e4
  4025dc:	add    BYTE PTR [eax],al
  4025de:	add    al,0x6f
  4025e0:	add    al,BYTE PTR [eax]
  4025e2:	add    BYTE PTR [ebx],ch
  4025e4:	add    BYTE PTR [eax],al
  4025e6:	sub    al,BYTE PTR [eax]
  4025e8:	sbb    esi,DWORD PTR [eax]
  4025ea:	push   es
  4025eb:	add    BYTE PTR [ecx+eax*1+0xd0000],dl
  4025f2:	add    BYTE PTR [ecx],dl
  4025f4:	add    BYTE PTR [edx],al
  4025f6:	mov    WORD PTR [edi],es
  4025f8:	add    BYTE PTR [eax],al
  4025fa:	sbb    ebp,DWORD PTR [edi+esi*1]
  4025fd:	sbb    DWORD PTR [ebp+0x1],eax
  402600:	add    BYTE PTR [eax],al
  402602:	add    dh,dh
  402604:	(bad)  
  402605:	(bad)  
  402606:	call   DWORD PTR [edi]
  402608:	sub    eax,0x18d006
  40260d:	add    BYTE PTR [esi],al
  40260f:	es (bad) 
  402612:	(bad)  
  402613:	push   ss
  402614:	pop    es
  402615:	add    BYTE PTR [eax],al
  402617:	sbb    ebp,DWORD PTR [edi+0x4f]
  40261a:	add    BYTE PTR [eax],al
  40261c:	or     ah,BYTE PTR ds:0x18132d26
  402622:	inc    ebp
  402623:	add    DWORD PTR [eax],eax
  402625:	add    BYTE PTR [eax],al
  402627:	idiv   bh
  402629:	(bad)  
  40262a:	call   FWORD PTR [edi]
  40262c:	xor    BYTE PTR [eax],ch
  40262e:	pusha  
  40262f:	add    BYTE PTR [eax],al
  402631:	push   es
  402632:	sub    eax,DWORD PTR [edi]
  402634:	pop    ds
  402635:	xor    al,0x28
  402637:	pusha  
  402638:	add    BYTE PTR [eax],al
  40263a:	push   es
  40263b:	add    BYTE PTR [ebx],dl
  40263d:	add    al,0x11
  40263f:	add    al,0x39
  402641:	cmp    eax,DWORD PTR [ecx]
  402643:	add    BYTE PTR [eax],al
  402645:	jle    0x402650
  402647:	add    BYTE PTR [eax],al
  402649:	add    al,0x14
  40264b:	inc    BYTE PTR [ecx]
  40264d:	pop    ds
  40264e:	cmp    BYTE PTR [eax],ch
  402650:	pusha  
  402651:	add    BYTE PTR [eax],al
  402653:	push   es
  402654:	inc    BYTE PTR [ecx]
  402656:	adc    eax,DWORD PTR ds:0x4b2c0511
  40265c:	sbb    BYTE PTR [ebp+0x1],al
  40265f:	add    BYTE PTR [eax],al
  402661:	add    dh,dh
  402663:	(bad)  
  402664:	(bad)  
  402665:	(bad)  
  402666:	jle    0x402671
  402668:	add    BYTE PTR [eax],al
  40266a:	add    al,0xd0
  40266c:	pop    es
  40266d:	add    BYTE PTR [eax],al
  40266f:	sbb    ebp,DWORD PTR [eax]
  402671:	push   eax
  402672:	add    BYTE PTR [eax],al
  402674:	or     ah,BYTE PTR ds:0x516f26
  40267a:	add    BYTE PTR [edx],cl
  40267c:	and    eax,0x11061326
  402681:	push   es
  402682:	sub    al,0x20
  402684:	pop    ds
  402685:	dec    eax
  402686:	sub    BYTE PTR [eax+0x0],ch
  402689:	add    BYTE PTR [esi],al
  40268b:	and    eax,0x283c1f26
  402690:	pusha  
  402691:	add    BYTE PTR [eax],al
  402693:	push   es
  402694:	lea    ebx,[esi+0x28010000]
  40269a:	push   edx
  40269b:	add    BYTE PTR [eax],al
  40269d:	or     dh,BYTE PTR [ebx+0x53]
  4026a0:	add    BYTE PTR [eax],al
  4026a2:	or     bh,BYTE PTR [edx+0x0]
  4026a5:	sub    ecx,DWORD PTR [ebx]
  4026a7:	add    BYTE PTR [ebx+0x54],dh
  4026aa:	add    BYTE PTR [eax],al
  4026ac:	or     al,BYTE PTR [eax+0x4000009]
  4026b2:	add    BYTE PTR [esi+0x9],bh
  4026b5:	add    BYTE PTR [eax],al
  4026b7:	add    al,0xd0
  4026b9:	pop    es
  4026ba:	add    BYTE PTR [eax],al
  4026bc:	sbb    ebp,DWORD PTR [eax]
  4026be:	push   eax
  4026bf:	add    BYTE PTR [eax],al
  4026c1:	or     ah,BYTE PTR ds:0x556f1426
  4026c7:	add    BYTE PTR [eax],al
  4026c9:	or     al,BYTE PTR [eax]
  4026cb:	add    BYTE PTR [eax],ch
  4026cd:	add    eax,DWORD PTR [eax]
  4026cf:	add    BYTE PTR [ebx],ch
  4026d1:	or     bl,ch
  4026d3:	scas   eax,DWORD PTR es:[edi]
  4026d4:	add    BYTE PTR [eax],al
  4026d6:	add    ch,bl
  4026d8:	mov    eax,ds:0x75000000
  4026dd:	test   DWORD PTR [eax],eax
  4026df:	add    BYTE PTR [ecx],al
  4026e1:	and    eax,0x1f260a2d
  4026e6:	inc    eax
  4026e7:	sub    BYTE PTR [eax+0x0],ah
  4026ea:	add    BYTE PTR [esi],al
  4026ec:	sub    esp,DWORD PTR [eiz*1+0x57280c]
  4026f3:	add    BYTE PTR [edx],cl
  4026f5:	or     BYTE PTR [edi+0x58],ch
  4026f8:	add    BYTE PTR [eax],al
  4026fa:	or     ah,BYTE PTR ds:0x1fe1426
  402700:	pop    ds
  402701:	inc    esp
  402702:	sub    BYTE PTR [eax+0x0],ah
  402705:	add    BYTE PTR [esi],al
  402707:	inc    BYTE PTR [ecx]
  402709:	pop    ds
  40270a:	dec    eax
  40270b:	sub    BYTE PTR [eax+0x0],ah
  40270e:	add    BYTE PTR [esi],al
  402710:	inc    BYTE PTR [ebx]
  402712:	(bad)  
  402713:	adc    DWORD PTR [esi],esp
  402715:	and    BYTE PTR [ecx+0x28000000],al
  40271b:	push   0x25060000
  402720:	es pop ds
  402722:	dec    esp
  402723:	sub    BYTE PTR [eax+0x0],ah
  402726:	add    BYTE PTR [esi],al
  402728:	lea    ebx,[esi+0xd010000]
  40272e:	or     DWORD PTR [edi],ebx
  402730:	push   eax
  402731:	sub    BYTE PTR [eax+0x0],ah
  402734:	add    BYTE PTR [esi],al
  402736:	or     BYTE PTR [edi+0x58],ch
  402739:	add    BYTE PTR [eax],al
  40273b:	or     ch,BYTE PTR [edi+0x59]
  40273e:	add    BYTE PTR [eax],al
  402740:	or     ah,BYTE PTR ds:0x900a226
  402746:	sub    BYTE PTR [edx+0x0],dl
  402749:	add    BYTE PTR [edx],cl
  40274b:	and    eax,0x8070b26
  402750:	outs   dx,DWORD PTR ds:[esi]
  402751:	pop    eax
  402752:	add    BYTE PTR [eax],al
  402754:	or     ah,BYTE PTR ds:0x5a7326
  40275a:	add    BYTE PTR [edx],cl
  40275c:	jp     0x402786
  40275e:	pop    ebx
  40275f:	add    BYTE PTR [eax],al
  402761:	or     bl,dh
  402763:	sbb    DWORD PTR [eax],eax
  402765:	jle    0x402770
  402767:	add    BYTE PTR [eax],al
  402769:	add    al,0xd0
  40276b:	pop    es
  40276c:	add    BYTE PTR [eax],al
  40276e:	sbb    ebp,DWORD PTR [eax]
  402770:	push   eax
  402771:	add    BYTE PTR [eax],al
  402773:	or     ah,BYTE PTR ds:0x5c6f26
  402779:	add    BYTE PTR [edx],cl
  40277b:	add    ah,bl
  40277d:	add    BYTE PTR [ebx],ch
  40277f:	add    eax,0x2b0a0200
  402784:	add    DWORD PTR [eax],eax
  402786:	push   es
  402787:	sub    al,BYTE PTR [ecx]
  402789:	sbb    al,0x0
  40278b:	add    BYTE PTR [ecx],al
  40278d:	add    al,bl
  40278f:	add    BYTE PTR [eax],dl
  402791:	and    BYTE PTR [ecx],al
  402793:	push   eax
  402794:	call   0x2402799
  402799:	add    al,bl
  40279b:	add    BYTE PTR [eax+0x190170],bl
  4027a1:	add    BYTE PTR [eax],al
  4027a3:	add    BYTE PTR [ebx],dl
  4027a5:	xor    BYTE PTR [ebx],al
  4027a7:	add    BYTE PTR [edi],bl
  4027a9:	add    BYTE PTR [eax],al
  4027ab:	add    BYTE PTR [esi],cl
  4027ad:	add    BYTE PTR [eax],al
  4027af:	adc    DWORD PTR [eax],eax
  4027b1:	add    edi,esi
  4027b3:	push   ss
  4027b4:	pop    es
  4027b5:	add    BYTE PTR [eax],al
  4027b7:	sbb    ebp,DWORD PTR [edi+0x5d]
  4027ba:	add    BYTE PTR [eax],al
  4027bc:	or     al,BYTE PTR [eax]
  4027be:	add    edx,DWORD PTR [edx]
  4027c0:	add    dh,bh
  4027c2:	adc    eax,0x1b000007
  4027c7:	push   es
  4027c8:	add    DWORD PTR [edi],0x1b0000
  4027ce:	sub    al,BYTE PTR [eax]
  4027d0:	adc    esi,DWORD PTR [eax]
  4027d2:	add    al,0x0
  4027d4:	adc    al,0x0
  4027d6:	add    BYTE PTR [eax],al
  4027d8:	or     al,0x0
  4027da:	add    BYTE PTR [ecx],dl
  4027dc:	add    BYTE PTR [edx],al
  4027de:	add    ebp,DWORD PTR [eax]
  4027e0:	sub    DWORD PTR [eax],eax
  4027e2:	add    BYTE PTR [edx],cl
  4027e4:	and    eax,0x5e2826
  4027e9:	add    BYTE PTR [edx],cl
  4027eb:	or     ch,BYTE PTR [ebx]
  4027ed:	add    BYTE PTR [esi],al
  4027ef:	sub    dl,BYTE PTR [ebx]
  4027f1:	xor    BYTE PTR [ebx],al
  4027f3:	add    BYTE PTR [esi],cl
  4027f5:	add    BYTE PTR [eax],al
  4027f7:	add    BYTE PTR [edi],cl
  4027f9:	add    BYTE PTR [eax],al
  4027fb:	adc    DWORD PTR [eax],eax
  4027fd:	add    ch,BYTE PTR [eax]
  4027ff:	pop    edi
  402800:	add    BYTE PTR [eax],al
  402802:	or     ah,BYTE PTR ds:0x2b0a26
  402808:	push   es
  402809:	sub    al,BYTE PTR [eax]
  40280b:	add    BYTE PTR [ebx],dl
  40280d:	xor    BYTE PTR [edx],al
  40280f:	add    BYTE PTR [eax],dl
  402811:	add    BYTE PTR [eax],al
  402813:	add    BYTE PTR [eax],dl
  402815:	add    BYTE PTR [eax],al
  402817:	adc    DWORD PTR [eax],eax
  402819:	rol    BYTE PTR [edi],1
  40281b:	add    BYTE PTR [eax],al
  40281d:	add    ch,BYTE PTR [eax]
  40281f:	push   eax
  402820:	add    BYTE PTR [eax],al
  402822:	or     cl,BYTE PTR [edx]
  402824:	sub    eax,DWORD PTR [eax]
  402826:	push   es
  402827:	sub    dl,BYTE PTR [ebx]
  402829:	xor    BYTE PTR [ebx],al
  40282b:	add    BYTE PTR [esi],cl
  40282d:	add    BYTE PTR [eax],al
  40282f:	add    BYTE PTR [ecx],dl
  402831:	add    BYTE PTR [eax],al
  402833:	adc    DWORD PTR [eax],eax
  402835:	add    ch,BYTE PTR [eax]
  402837:	pusha  
  402838:	add    BYTE PTR [eax],al
  40283a:	or     ah,BYTE PTR ds:0x2b0a26
  402840:	push   es
  402841:	sub    al,BYTE PTR [eax]
  402843:	add    BYTE PTR [ebx],al
  402845:	xor    BYTE PTR [ecx],cl
  402847:	add    BYTE PTR [edx],cl
	...
  402851:	add    ch,BYTE PTR [eax]
  402853:	cmp    DWORD PTR [eax],eax
  402855:	add    BYTE PTR [edx],cl
  402857:	add    BYTE PTR [eax],al
  402859:	sub    al,BYTE PTR [eax]
  40285b:	add    BYTE PTR [ebx],dl
  40285d:	xor    BYTE PTR [eax+eax*1],al
  402860:	push   ss
  402861:	add    BYTE PTR [eax],al
  402863:	add    BYTE PTR [eax+eax*1],cl
  402866:	add    BYTE PTR [ecx],dl
  402868:	add    BYTE PTR [edx],al
  40286a:	add    ebp,DWORD PTR [eax]
  40286c:	sub    DWORD PTR [eax],eax
  40286e:	add    BYTE PTR [edx],cl
  402870:	and    eax,0x5e2826
  402875:	add    BYTE PTR [edx],cl
  402877:	and    eax,0x2b0a26
  40287c:	push   es
  40287d:	sub    al,BYTE PTR [eax]
  40287f:	add    BYTE PTR [ebx],dl
  402881:	xor    BYTE PTR [ebx],al
  402883:	add    BYTE PTR [esi],cl
  402885:	add    BYTE PTR [eax],al
  402887:	add    BYTE PTR [edi],cl
  402889:	add    BYTE PTR [eax],al
  40288b:	adc    DWORD PTR [eax],eax
  40288d:	add    ch,BYTE PTR [eax]
  40288f:	pop    edi
  402890:	add    BYTE PTR [eax],al
  402892:	or     ah,BYTE PTR ds:0x2b0a26
  402898:	push   es
  402899:	sub    al,BYTE PTR [eax]
  40289b:	add    BYTE PTR [ebx],dl
  40289d:	xor    BYTE PTR [ebx],al
  40289f:	add    BYTE PTR [edx],dl
  4028a1:	add    BYTE PTR [eax],al
  4028a3:	add    BYTE PTR [eax],dl
  4028a5:	add    BYTE PTR [eax],al
  4028a7:	adc    DWORD PTR [eax],eax
  4028a9:	ror    BYTE PTR [eax],1
  4028ab:	add    BYTE PTR [eax],al
  4028ad:	add    ch,BYTE PTR [eax]
  4028af:	push   eax
  4028b0:	add    BYTE PTR [eax],al
  4028b2:	or     ah,BYTE PTR ds:0x2b0a26
  4028b8:	push   es
  4028b9:	sub    al,BYTE PTR [eax]
  4028bb:	add    BYTE PTR [ebx],dl
  4028bd:	xor    BYTE PTR [edx],al
  4028bf:	add    BYTE PTR [eax+eax*1],cl
  4028c2:	add    BYTE PTR [eax],al
  4028c4:	adc    DWORD PTR [eax],eax
  4028c6:	add    BYTE PTR [ecx],dl
  4028c8:	add    BYTE PTR [edx],al
  4028ca:	sub    BYTE PTR [eax+0x0],ah
  4028cd:	add    BYTE PTR [edx],cl
  4028cf:	or     ch,BYTE PTR [ebx]
  4028d1:	add    BYTE PTR [esi],al
  4028d3:	sub    dl,BYTE PTR [ebx]
  4028d5:	xor    BYTE PTR [ebx],al
  4028d7:	add    BYTE PTR [edx],ah
  4028d9:	add    BYTE PTR [eax],al
  4028db:	add    BYTE PTR [edx],dl
  4028dd:	add    BYTE PTR [eax],al
  4028df:	adc    DWORD PTR [eax],eax
  4028e1:	add    cl,BYTE PTR [edi+eax*1+0x141b0000]
  4028e8:	inc    BYTE PTR [ecx]
  4028ea:	or     eax,DWORD PTR [edi]
  4028ec:	sub    al,0xc
  4028ee:	sub    BYTE PTR [ebx],al
  4028f0:	add    BYTE PTR [eax],al
  4028f2:	sub    esp,DWORD PTR ds:0x82b0a26
  4028f8:	sub    eax,DWORD PTR ds:0x2b0a0200
  4028fe:	add    DWORD PTR [eax],eax
  402900:	push   es
  402901:	sub    al,BYTE PTR [eax]
  402903:	add    BYTE PTR [ebx],dl
  402905:	xor    BYTE PTR [ebx],al
  402907:	add    BYTE PTR [edx],dl
  402909:	add    BYTE PTR [eax],al
  40290b:	add    BYTE PTR [esi],cl
  40290d:	add    BYTE PTR [eax],al
  40290f:	adc    DWORD PTR [eax],eax
  402911:	add    edx,DWORD PTR [edx]
  402913:	add    dh,bh
  402915:	adc    eax,0x1b000007
  40291a:	push   es
  40291b:	add    DWORD PTR [edi],0x1b0000
  402921:	sub    al,BYTE PTR [eax]
  402923:	add    BYTE PTR [ebx],al
  402925:	xor    BYTE PTR [ecx],cl
  402927:	add    BYTE PTR [edx],cl
	...
  402931:	add    ch,BYTE PTR [eax]
  402933:	cmp    DWORD PTR [eax],eax
  402935:	add    BYTE PTR [edx],cl
  402937:	add    BYTE PTR [eax],al
  402939:	sub    al,BYTE PTR [eax]
  40293b:	add    BYTE PTR [ebx],dl
  40293d:	xor    BYTE PTR [ebx],al
  40293f:	add    BYTE PTR [ecx],bh
  402941:	add    BYTE PTR [eax],al
  402943:	add    BYTE PTR [ebx],dl
  402945:	add    BYTE PTR [eax],al
  402947:	adc    DWORD PTR [eax],eax
  402949:	jle    0x4029ac
  40294b:	add    BYTE PTR [eax],al
  40294d:	or     cl,BYTE PTR [ecx+ecx*1+0x141b0000]
  402954:	inc    BYTE PTR [ecx]
  402956:	or     eax,DWORD PTR [edi]
  402958:	sub    al,0x1d
  40295a:	sbb    eax,DWORD PTR [ebp+0x1]
  40295d:	add    BYTE PTR [eax],al
  40295f:	add    dh,dh
  402961:	(bad)  
  402962:	(bad)  
  402963:	call   DWORD PTR [edi]
  402965:	sub    eax,0x26d006
  40296a:	add    BYTE PTR [esi],al
  40296c:	sub    BYTE PTR es:[eax+eax*1],al
  402970:	add    BYTE PTR [ebx],ch
  402972:	and    BYTE PTR [ecx+0x0],0x0
  402976:	or     bh,BYTE PTR [esi+0x61]
  402979:	add    BYTE PTR [eax],al
  40297b:	or     cl,BYTE PTR [edx]
  40297d:	sub    eax,DWORD PTR [eax]
  40297f:	push   es
  402980:	sub    al,BYTE PTR [eax]
  402982:	add    BYTE PTR [eax],al
  402984:	add    esi,DWORD PTR [eax]
  402986:	or     DWORD PTR [eax],eax
  402988:	or     al,0x0
  40298a:	add    BYTE PTR [eax],al
  40298c:	add    BYTE PTR [eax],al
  40298e:	add    BYTE PTR [eax],al
  402990:	jae    0x4029ad
  402992:	add    BYTE PTR [eax],al
  402994:	or     al,BYTE PTR [eax+0x400000b]
  40299a:	add    BYTE PTR [edx],ch
  40299c:	add    esi,DWORD PTR [eax]
  40299e:	or     DWORD PTR [eax],eax
  4029a0:	sub    eax,DWORD PTR [eax]
  4029a2:	add    BYTE PTR [eax],al
  4029a4:	add    BYTE PTR [eax],al
  4029a6:	add    BYTE PTR [eax],al
  4029a8:	add    ch,BYTE PTR [eax]
  4029aa:	bound  eax,QWORD PTR [eax]
  4029ac:	add    BYTE PTR [edx],cl
  4029ae:	add    BYTE PTR [edx],al
  4029b0:	add    ah,BYTE PTR ds:0x4407fe
  4029b6:	add    BYTE PTR [esi],al
  4029b8:	jae    0x402a1d
  4029ba:	add    BYTE PTR [eax],al
  4029bc:	or     ch,BYTE PTR [eax]
  4029be:	add    BYTE PTR fs:[eax],al
  4029c1:	or     al,BYTE PTR [eax]
  4029c3:	add    ch,BYTE PTR [eax]
  4029c5:	sub    DWORD PTR [eax],eax
  4029c7:	add    BYTE PTR [esi],al
  4029c9:	add    BYTE PTR [edx],al
  4029cb:	outs   dx,DWORD PTR ds:[esi]
  4029cc:	sub    eax,DWORD PTR [eax]
  4029ce:	add    BYTE PTR [esi],al
  4029d0:	add    BYTE PTR [eax],al
  4029d2:	sub    al,BYTE PTR [eax]
  4029d4:	sbb    esi,DWORD PTR [eax]
  4029d6:	add    eax,0x14700
  4029db:	add    BYTE PTR [ecx],al
  4029dd:	add    BYTE PTR [eax],al
  4029df:	adc    DWORD PTR [eax],eax
  4029e1:	jle    0x4029ee
  4029e3:	add    BYTE PTR [eax],al
  4029e5:	add    al,0xd
  4029e7:	or     DWORD PTR [eax],ebp
  4029e9:	and    DWORD PTR [eax],eax
  4029eb:	add    BYTE PTR [edx],cl
  4029ed:	add    BYTE PTR [eax],al
  4029ef:	jle    0x4029fc
  4029f1:	add    BYTE PTR [eax],al
  4029f3:	add    al,0x6f
  4029f5:	and    al,BYTE PTR [eax]
  4029f7:	add    BYTE PTR [edx],cl
  4029f9:	and    eax,0xb7e26
  4029fe:	add    BYTE PTR [edi+ebp*2],al
  402a01:	and    eax,DWORD PTR [eax]
  402a03:	add    BYTE PTR [edx],cl
  402a05:	and    eax,0x1301fe26
  402a0a:	add    eax,0xec390511
  402a0f:	add    BYTE PTR [eax],al
  402a11:	add    BYTE PTR ds:0x145,bl
  402a17:	add    dh,dh
  402a19:	(bad)  
  402a1a:	(bad)  
  402a1b:	call   DWORD PTR [edi]
  402a1d:	sub    eax,0x29d006
  402a22:	add    BYTE PTR [esi],al
  402a24:	es pop ds
  402a26:	push   esp
  402a27:	sub    BYTE PTR [eax+0x0],ah
  402a2a:	add    BYTE PTR [esi],al
  402a2c:	or     bl,BYTE PTR [edi]
  402a2e:	pop    eax
  402a2f:	sub    BYTE PTR [eax+0x0],ah
  402a32:	add    BYTE PTR [esi],al
  402a34:	jle    0x402a41
  402a36:	add    BYTE PTR [eax],al
  402a38:	add    al,0x6f
  402a3a:	and    al,BYTE PTR [eax]
  402a3c:	add    BYTE PTR [edx],cl
  402a3e:	and    eax,0x285c1f26
  402a43:	pusha  
  402a44:	add    BYTE PTR [eax],al
  402a46:	push   es
  402a47:	ficom  DWORD PTR [ebx]
  402a49:	add    al,0xb
  402a4b:	sub    ebp,DWORD PTR [edi+0x7e]
  402a4e:	or     eax,DWORD PTR [eax]
  402a50:	add    BYTE PTR [edi+eax*1],al
  402a53:	outs   dx,DWORD PTR ds:[esi]
  402a54:	and    al,0x0
  402a56:	add    BYTE PTR [edx],cl
  402a58:	or     al,0x8
  402a5a:	outs   dx,DWORD PTR ds:[esi]
  402a5b:	and    eax,0x130a0000
  402a60:	add    eax,0x4b2c0511
  402a65:	sbb    al,0x45
  402a67:	add    DWORD PTR [eax],eax
  402a69:	add    BYTE PTR [eax],al
  402a6b:	idiv   bh
  402a6d:	(bad)  
  402a6e:	inc    DWORD PTR [edi]
  402a70:	push   es
  402a71:	inc    BYTE PTR [ecx]
  402a73:	pop    ds
  402a74:	pusha  
  402a75:	sub    BYTE PTR [eax+0x0],ah
  402a78:	add    BYTE PTR [esi],al
  402a7a:	inc    BYTE PTR [ecx]
  402a7c:	adc    eax,DWORD PTR [esi]
  402a7e:	adc    DWORD PTR [esi],eax
  402a80:	sub    al,0x23
  402a82:	pop    ss
  402a83:	inc    ebp
  402a84:	add    DWORD PTR [eax],eax
  402a86:	add    BYTE PTR [eax],al
  402a88:	idiv   bh
  402a8a:	(bad)  
  402a8b:	(bad)  
  402a8c:	jle    0x402a99
  402a8e:	add    BYTE PTR [eax],al
  402a90:	add    al,0x6
  402a92:	jle    0x402a9f
  402a94:	add    BYTE PTR [eax],al
  402a96:	add    al,0x7
  402a98:	outs   dx,DWORD PTR ds:[esi]
  402a99:	and    al,0x0
  402a9b:	add    BYTE PTR [edx],cl
  402a9d:	and    eax,0x266f26
  402aa2:	add    BYTE PTR [edx],cl
  402aa4:	add    BYTE PTR [eax],al
  402aa6:	push   es
  402aa7:	pop    ds
  402aa8:	sub    BYTE PTR fs:[eax+0x0],ah
  402aac:	add    BYTE PTR [esi],al
  402aae:	(bad)  
  402aaf:	or     al,BYTE PTR [eax]
  402ab1:	add    BYTE PTR [edi],al
  402ab3:	pop    ds
  402ab4:	push   0x6028
  402ab9:	push   es
  402aba:	(bad)  
  402abb:	or     eax,DWORD PTR [edi]
  402abd:	adc    DWORD PTR [ebx+edx*1],eax
  402ac0:	pop    es
  402ac1:	adc    DWORD PTR [edi],eax
  402ac3:	xor    DWORD PTR [eax+0x14517],ecx
  402ac9:	add    BYTE PTR [eax],al
  402acb:	idiv   bh
  402acd:	(bad)  
  402ace:	(bad)  
  402acf:	jle    0x402adc
  402ad1:	add    BYTE PTR [eax],al
  402ad3:	add    al,0x6
  402ad5:	jle    0x402ae2
  402ad7:	add    BYTE PTR [eax],al
  402ad9:	add    al,0x6f
  402adb:	and    al,BYTE PTR [eax]
  402add:	add    BYTE PTR [edx],cl
  402adf:	push   es
  402ae0:	fisubr DWORD PTR [edi+0x27]
  402ae3:	add    BYTE PTR [eax],al
  402ae5:	or     al,BYTE PTR [eax]
  402ae7:	jle    0x402af4
  402ae9:	add    BYTE PTR [eax],al
  402aeb:	add    al,0x7e
  402aed:	or     eax,DWORD PTR [eax]
  402aef:	add    BYTE PTR [edi+ebp*2],al
  402af2:	and    al,BYTE PTR [eax]
  402af4:	add    BYTE PTR [edx],cl
  402af6:	and    eax,0x286f26
  402afb:	add    BYTE PTR [edx],cl
  402afd:	add    BYTE PTR [eax],al
  402aff:	jle    0x402b0c
  402b01:	add    BYTE PTR [eax],al
  402b03:	add    al,0x2
  402b05:	sub    BYTE PTR [ecx],ch
  402b07:	add    BYTE PTR [eax],al
  402b09:	or     ah,BYTE PTR ds:0x2a7326
  402b0f:	add    BYTE PTR [edx],cl
  402b11:	outs   dx,DWORD PTR ds:[esi]
  402b12:	sub    eax,DWORD PTR [eax]
  402b14:	add    BYTE PTR [edx],cl
  402b16:	add    BYTE PTR [eax],al
  402b18:	fimul  WORD PTR [ecx]
  402b1a:	add    BYTE PTR [ecx],cl
  402b1c:	sub    BYTE PTR [eax+eax*1],ch
  402b1f:	add    BYTE PTR [edx],cl
  402b21:	add    ah,bl
  402b23:	add    BYTE PTR [eax],al
  402b25:	add    BYTE PTR [edx],ch
  402b27:	add    BYTE PTR [ecx+0x1c],al
  402b2a:	add    BYTE PTR [eax],al
  402b2c:	add    al,BYTE PTR [eax]
  402b2e:	add    BYTE PTR [eax],al
  402b30:	sldt   WORD PTR [eax]
  402b33:	add    BYTE PTR [ebx],ch
  402b35:	add    DWORD PTR [eax],eax
  402b37:	add    BYTE PTR [edx],bh
  402b39:	add    DWORD PTR [eax],eax
  402b3b:	add    BYTE PTR [ecx],cl
  402b3d:	add    BYTE PTR [eax],al
  402b3f:	add    BYTE PTR [eax],al
  402b41:	add    BYTE PTR [eax],al
  402b43:	add    BYTE PTR [ebx],bl
  402b45:	xor    BYTE PTR [ebx],al
  402b47:	add    BYTE PTR [ebx+0x0],bl
  402b4a:	add    BYTE PTR [eax],al
  402b4c:	or     al,0x0
  402b4e:	add    BYTE PTR [ecx],dl
  402b50:	add    BYTE PTR [eax],al
  402b52:	add    ebp,DWORD PTR [ebx+ebx*1]
  402b55:	pop    ss
  402b56:	inc    ebp
  402b57:	add    DWORD PTR [eax],eax
  402b59:	add    BYTE PTR [eax],al
  402b5b:	idiv   bh
  402b5d:	(bad)  
  402b5e:	call   DWORD PTR [edi]
  402b60:	sub    eax,0x2ad006
  402b65:	add    BYTE PTR [esi],al
  402b67:	add    bh,BYTE PTR es:[ebx+0xc]
  402b6b:	add    BYTE PTR [eax],al
  402b6d:	add    al,0x2d
  402b6f:	or     DWORD PTR [edi],ebx
  402b71:	ins    BYTE PTR es:[edi],dx
  402b72:	sub    BYTE PTR [eax+0x0],ah
  402b75:	add    BYTE PTR [esi],al
  402b77:	sub    eax,DWORD PTR [edi]
  402b79:	pop    ds
  402b7a:	jo     0x402ba4
  402b7c:	pusha  
  402b7d:	add    BYTE PTR [eax],al
  402b7f:	push   es
  402b80:	add    BYTE PTR [edx],cl
  402b82:	push   es
  402b83:	sub    al,0x16
  402b85:	sbb    al,BYTE PTR [ebp+0x1]
  402b88:	add    BYTE PTR [eax],al
  402b8a:	add    dh,dh
  402b8c:	(bad)  
  402b8d:	(bad)  
  402b8e:	inc    DWORD PTR [edx]
  402b90:	jnp    0x402b9e
  402b92:	add    BYTE PTR [eax],al
  402b94:	add    al,0x6f
  402b96:	add    BYTE PTR gs:[eax],al
  402b99:	or     al,BYTE PTR [eax]
  402b9b:	add    dh,bl
  402b9d:	or     al,BYTE PTR [eax]
  402b9f:	add    al,BYTE PTR [ebx]
  402ba1:	sub    BYTE PTR [esi+0x0],ah
  402ba4:	add    BYTE PTR [edx],cl
  402ba6:	add    ah,bl
  402ba8:	add    BYTE PTR [eax],al
  402baa:	sub    al,BYTE PTR [eax]
  402bac:	add    DWORD PTR [eax],edx
  402bae:	add    BYTE PTR [eax],al
  402bb0:	add    al,BYTE PTR [eax]
  402bb2:	add    al,BYTE PTR [eax]
  402bb4:	dec    esp
  402bb5:	dec    esi
  402bb6:	add    BYTE PTR [edx],cl
  402bb8:	add    BYTE PTR [eax],al
  402bba:	add    BYTE PTR [eax],al
  402bbc:	adc    esi,DWORD PTR [eax]
  402bbe:	pop    es
  402bbf:	add    BYTE PTR [eax],dl
  402bc1:	adc    BYTE PTR [eax],al
  402bc3:	add    BYTE PTR [eax+eax*1],dl
  402bc6:	add    BYTE PTR [ecx],dl
  402bc8:	add    al,dl
  402bca:	or     al,BYTE PTR [eax]
  402bcc:	add    BYTE PTR [edx],al
  402bce:	sub    BYTE PTR [eax+0x0],dl
  402bd1:	add    BYTE PTR [edx],cl
  402bd3:	and    eax,0x677326
  402bd8:	add    BYTE PTR [edx],cl
  402bda:	or     al,BYTE PTR [edx]
  402bdc:	jae    0x402c46
  402bde:	add    BYTE PTR [eax],al
  402be0:	or     ch,BYTE PTR [edi+0x2d]
  402be3:	add    BYTE PTR [eax],al
  402be5:	push   es
  402be6:	add    BYTE PTR [edx],al
  402be8:	jae    0x402c52
  402bea:	add    BYTE PTR [eax],al
  402bec:	or     ch,BYTE PTR [edi+0x2f]
  402bef:	add    BYTE PTR [eax],al
  402bf1:	push   es
  402bf2:	add    BYTE PTR [edx],al
  402bf4:	jae    0x402c5f
  402bf6:	add    BYTE PTR [eax],al
  402bf8:	or     ch,BYTE PTR [edi+0x31]
  402bfb:	add    BYTE PTR [eax],al
  402bfd:	push   es
  402bfe:	add    BYTE PTR [edx],al
  402c00:	jae    0x402c6c
  402c02:	add    BYTE PTR [eax],al
  402c04:	or     ch,BYTE PTR [edi+0x33]
  402c07:	add    BYTE PTR [eax],al
  402c09:	push   es
  402c0a:	add    BYTE PTR [edx],al
  402c0c:	jae    0x402c79
  402c0e:	add    BYTE PTR [eax],al
  402c10:	or     ch,BYTE PTR [edi+0x35]
  402c13:	add    BYTE PTR [eax],al
  402c15:	push   es
  402c16:	add    BYTE PTR [edx],al
  402c18:	jae    0x402c84
  402c1a:	add    BYTE PTR [eax],al
  402c1c:	or     ch,BYTE PTR [edi+0x37]
  402c1f:	add    BYTE PTR [eax],al
  402c21:	push   es
  402c22:	add    BYTE PTR [edx],al
  402c24:	jae    0x402c8f
  402c26:	add    BYTE PTR [eax],al
  402c28:	or     ch,BYTE PTR [edi+0x39]
  402c2b:	add    BYTE PTR [eax],al
  402c2d:	push   es
  402c2e:	add    BYTE PTR [edx],al
  402c30:	jae    0x402c9c
  402c32:	add    BYTE PTR [eax],al
  402c34:	or     ch,BYTE PTR [edi+0x3b]
  402c37:	add    BYTE PTR [eax],al
  402c39:	push   es
  402c3a:	add    BYTE PTR [edx],al
  402c3c:	jae    0x402ca8
  402c3e:	add    BYTE PTR [eax],al
  402c40:	or     ch,BYTE PTR [edi+0x3d]
  402c43:	add    BYTE PTR [eax],al
  402c45:	push   es
  402c46:	add    BYTE PTR [edx],al
  402c48:	jae    0x402cb4
  402c4a:	add    BYTE PTR [eax],al
  402c4c:	or     ch,BYTE PTR [edi+0x3f]
  402c4f:	add    BYTE PTR [eax],al
  402c51:	push   es
  402c52:	add    BYTE PTR [edx],al
  402c54:	jae    0x402cc0
  402c56:	add    BYTE PTR [eax],al
  402c58:	or     ch,BYTE PTR [edi+0x41]
  402c5b:	add    BYTE PTR [eax],al
  402c5d:	push   es
  402c5e:	add    BYTE PTR [edx],al
  402c60:	jae    0x402ccc
  402c62:	add    BYTE PTR [eax],al
  402c64:	or     ch,BYTE PTR [edi+0x43]
  402c67:	add    BYTE PTR [eax],al
  402c69:	push   es
  402c6a:	add    BYTE PTR [edx],al
  402c6c:	outs   dx,DWORD PTR ds:[esi]
  402c6d:	xor    BYTE PTR [eax],al
  402c6f:	add    BYTE PTR [esi],al
  402c71:	outs   dx,DWORD PTR ds:[esi]
  402c72:	ins    BYTE PTR es:[edi],dx
  402c73:	add    BYTE PTR [eax],al
  402c75:	or     al,BYTE PTR [eax]
  402c77:	add    ch,BYTE PTR [edi+0x38]
  402c7a:	add    BYTE PTR [eax],al
  402c7c:	push   es
  402c7d:	and    eax,0x6c6f26
  402c82:	add    BYTE PTR [edx],cl
  402c84:	add    BYTE PTR [edx],al
  402c86:	outs   dx,DWORD PTR ds:[esi]
  402c87:	ins    DWORD PTR es:[edi],dx
  402c88:	add    BYTE PTR [eax],al
  402c8a:	or     al,BYTE PTR [eax]
  402c8c:	add    ch,BYTE PTR [edi+0x2c]
  402c8f:	add    BYTE PTR [eax],al
  402c91:	push   es
  402c92:	and    eax,0x6e2826
  402c97:	add    BYTE PTR [edx],cl
  402c99:	outs   dx,DWORD PTR ds:[esi]
  402c9a:	outs   dx,DWORD PTR ds:[esi]
  402c9b:	add    BYTE PTR [eax],al
  402c9d:	or     al,BYTE PTR [eax]
  402c9f:	add    ch,BYTE PTR [edi+0x2c]
  402ca2:	add    BYTE PTR [eax],al
  402ca4:	push   es
  402ca5:	and    eax,0xb62026
  402caa:	add    BYTE PTR [eax],al
  402cac:	sub    BYTE PTR [eax+0x0],ch
  402caf:	add    BYTE PTR [esi],al
  402cb1:	and    eax,0x28741f26
  402cb6:	bound  eax,QWORD PTR [eax]
  402cb8:	add    BYTE PTR [esi],al
  402cba:	pop    ds
  402cbb:	js     0x402ce5
  402cbd:	pusha  
  402cbe:	add    BYTE PTR [eax],al
  402cc0:	push   es
  402cc1:	pop    ds
  402cc2:	jl     0x402cec
  402cc4:	pusha  
  402cc5:	add    BYTE PTR [eax],al
  402cc7:	push   es
  402cc8:	and    BYTE PTR [eax+0x28000000],al
  402cce:	pusha  
  402ccf:	add    BYTE PTR [eax],al
  402cd1:	push   es
  402cd2:	jae    0x402d44
  402cd4:	add    BYTE PTR [eax],al
  402cd6:	or     ch,BYTE PTR [edi+0x71]
  402cd9:	add    BYTE PTR [eax],al
  402cdb:	or     al,BYTE PTR [eax]
  402cdd:	add    ch,BYTE PTR [edi+0x2c]
  402ce0:	add    BYTE PTR [eax],al
  402ce2:	push   es
  402ce3:	and    eax,0x20031226
  402ce8:	test   BYTE PTR [eax],al
  402cea:	add    BYTE PTR [eax],al
  402cec:	sub    BYTE PTR [eax+0x0],ah
  402cef:	add    BYTE PTR [esi],al
  402cf1:	and    BYTE PTR [eax+0x28000000],cl
  402cf7:	pusha  
  402cf8:	add    BYTE PTR [eax],al
  402cfa:	push   es
  402cfb:	sub    BYTE PTR [edx+0x0],dh
  402cfe:	add    BYTE PTR [edx],cl
  402d00:	add    BYTE PTR [ecx],cl
  402d02:	outs   dx,DWORD PTR ds:[esi]
  402d03:	jae    0x402d05
  402d05:	add    BYTE PTR [edx],cl
  402d07:	add    BYTE PTR [edx],al
  402d09:	outs   dx,DWORD PTR ds:[esi]
  402d0a:	sub    al,0x0
  402d0c:	add    BYTE PTR [esi],al
  402d0e:	and    eax,0xdf2026
  402d13:	add    BYTE PTR [eax],al
  402d15:	sub    BYTE PTR [eax+0x0],ch
  402d18:	add    BYTE PTR [esi],al
  402d1a:	outs   dx,DWORD PTR ds:[esi]
  402d1b:	je     0x402d1d
  402d1d:	add    BYTE PTR [edx],cl
  402d1f:	add    BYTE PTR [edx],al
  402d21:	outs   dx,DWORD PTR ds:[esi]
  402d22:	sub    al,0x0
  402d24:	add    BYTE PTR [esi],al
  402d26:	and    eax,0x20051226
  402d2b:	mov    WORD PTR [eax],es
  402d2d:	add    BYTE PTR [eax],al
  402d2f:	sub    BYTE PTR [eax+0x0],ah
  402d32:	add    BYTE PTR [esi],al
  402d34:	and    BYTE PTR [eax+0x28000000],dl
  402d3a:	pusha  
  402d3b:	add    BYTE PTR [eax],al
  402d3d:	push   es
  402d3e:	sub    BYTE PTR [ebp+0x0],dh
  402d41:	add    BYTE PTR [edx],cl
  402d43:	add    BYTE PTR [ecx],dl
  402d45:	add    eax,0x766f
  402d4a:	or     al,BYTE PTR [eax]
  402d4c:	add    ch,BYTE PTR [edi+0x2c]
  402d4f:	add    BYTE PTR [eax],al
  402d51:	push   es
  402d52:	and    eax,0x942026
  402d57:	add    BYTE PTR [eax],al
  402d59:	sub    BYTE PTR [eax+0x0],ah
  402d5c:	add    BYTE PTR [esi],al
  402d5e:	outs   dx,DWORD PTR ds:[esi]
  402d5f:	ja     0x402d61
  402d61:	add    BYTE PTR [edx],cl
  402d63:	add    BYTE PTR [edx],al
  402d65:	outs   dx,DWORD PTR ds:[esi]
  402d66:	sub    al,0x0
  402d68:	add    BYTE PTR [esi],al
  402d6a:	and    dh,ch
  402d6c:	add    BYTE PTR [eax],al
  402d6e:	add    BYTE PTR [eax],ch
  402d70:	push   0x25060000
  402d75:	outs   dx,DWORD PTR es:[esi]
  402d77:	js     0x402d79
  402d79:	add    BYTE PTR [edx],cl
  402d7b:	add    BYTE PTR [edx],al
  402d7d:	outs   dx,DWORD PTR ds:[esi]
  402d7e:	sub    al,0x0
  402d80:	add    BYTE PTR [esi],al
  402d82:	and    BYTE PTR [eax+0x28000000],bl
  402d88:	pusha  
  402d89:	add    BYTE PTR [eax],al
  402d8b:	push   es
  402d8c:	outs   dx,DWORD PTR ds:[esi]
  402d8d:	jns    0x402d8f
  402d8f:	add    BYTE PTR [edx],cl
  402d91:	add    BYTE PTR [edx],al
  402d93:	outs   dx,DWORD PTR ds:[esi]
  402d94:	add    BYTE PTR cs:[eax],al
  402d97:	push   es
  402d98:	and    eax,0x7a2826
  402d9d:	add    BYTE PTR [edx],cl
  402d9f:	and    eax,0x6f6f26
  402da4:	add    BYTE PTR [edx],cl
  402da6:	add    BYTE PTR [edx],al
  402da8:	outs   dx,DWORD PTR ds:[esi]
  402da9:	add    BYTE PTR cs:[eax],al
  402dac:	push   es
  402dad:	and    eax,0x20031226
  402db2:	pushf  
  402db3:	add    BYTE PTR [eax],al
  402db5:	add    BYTE PTR [eax],ch
  402db7:	pusha  
  402db8:	add    BYTE PTR [eax],al
  402dba:	push   es
  402dbb:	and    BYTE PTR [eax+0x28000000],ah
  402dc1:	pusha  
  402dc2:	add    BYTE PTR [eax],al
  402dc4:	push   es
  402dc5:	sub    BYTE PTR [edx+0x0],dh
  402dc8:	add    BYTE PTR [edx],cl
  402dca:	add    BYTE PTR [ecx],cl
  402dcc:	outs   dx,DWORD PTR ds:[esi]
  402dcd:	jae    0x402dcf
  402dcf:	add    BYTE PTR [edx],cl
  402dd1:	add    BYTE PTR [edx],al
  402dd3:	outs   dx,DWORD PTR ds:[esi]
  402dd4:	add    BYTE PTR cs:[eax],al
  402dd7:	push   es
  402dd8:	and    eax,0x1092026
  402ddd:	add    BYTE PTR [eax],al
  402ddf:	sub    BYTE PTR [eax+0x0],ch
  402de2:	add    BYTE PTR [esi],al
  402de4:	outs   dx,DWORD PTR ds:[esi]
  402de5:	je     0x402de7
  402de7:	add    BYTE PTR [edx],cl
  402de9:	add    BYTE PTR [edx],al
  402deb:	outs   dx,DWORD PTR ds:[esi]
  402dec:	add    BYTE PTR cs:[eax],al
  402def:	push   es
  402df0:	and    eax,0x20051226
  402df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402df6:	add    BYTE PTR [eax],al
  402df8:	add    BYTE PTR [eax],ch
  402dfa:	pusha  
  402dfb:	add    BYTE PTR [eax],al
  402dfd:	push   es
  402dfe:	and    BYTE PTR [eax+0x28000000],ch
  402e04:	pusha  
  402e05:	add    BYTE PTR [eax],al
  402e07:	push   es
  402e08:	sub    BYTE PTR [ebp+0x0],dh
  402e0b:	add    BYTE PTR [edx],cl
  402e0d:	add    BYTE PTR [ecx],dl
  402e0f:	add    eax,0x766f
  402e14:	or     al,BYTE PTR [eax]
  402e16:	add    ch,BYTE PTR [edi+0x2e]
  402e19:	add    BYTE PTR [eax],al
  402e1b:	push   es
  402e1c:	and    eax,0xac2026
  402e21:	add    BYTE PTR [eax],al
  402e23:	sub    BYTE PTR [eax+0x0],ah
  402e26:	add    BYTE PTR [esi],al
  402e28:	outs   dx,DWORD PTR ds:[esi]
  402e29:	ja     0x402e2b
  402e2b:	add    BYTE PTR [edx],cl
  402e2d:	add    BYTE PTR [edx],al
  402e2f:	outs   dx,DWORD PTR ds:[esi]
  402e30:	add    BYTE PTR cs:[eax],al
  402e33:	push   es
  402e34:	and    eax,0x1182026
  402e39:	add    BYTE PTR [eax],al
  402e3b:	sub    BYTE PTR [eax+0x0],ch
  402e3e:	add    BYTE PTR [esi],al
  402e40:	and    eax,0x786f26
  402e45:	add    BYTE PTR [edx],cl
  402e47:	add    BYTE PTR [edx],al
  402e49:	outs   dx,DWORD PTR ds:[esi]
  402e4a:	add    BYTE PTR cs:[eax],al
  402e4d:	push   es
  402e4e:	and    eax,0xb02026
  402e53:	add    BYTE PTR [eax],al
  402e55:	sub    BYTE PTR [eax+0x0],ah
  402e58:	add    BYTE PTR [esi],al
  402e5a:	outs   dx,DWORD PTR ds:[esi]
  402e5b:	jns    0x402e5d
  402e5d:	add    BYTE PTR [edx],cl
  402e5f:	add    BYTE PTR [edx],al
  402e61:	outs   dx,DWORD PTR ds:[esi]
  402e62:	xor    BYTE PTR [eax],al
  402e64:	add    BYTE PTR [esi],al
  402e66:	push   es
  402e67:	and    BYTE PTR [ecx],ah
  402e69:	add    DWORD PTR [eax],eax
  402e6b:	add    BYTE PTR [eax],ch
  402e6d:	push   0x6f060000
  402e72:	jnp    0x402e74
  402e74:	add    BYTE PTR [edx],cl
  402e76:	and    eax,0x417426
  402e7b:	add    BYTE PTR [ecx],al
  402e7d:	outs   dx,DWORD PTR ds:[esi]
  402e7e:	jl     0x402e80
  402e80:	add    BYTE PTR [edx],cl
  402e82:	add    BYTE PTR [edx],al
  402e84:	outs   dx,DWORD PTR ds:[esi]
  402e85:	xor    BYTE PTR [eax],al
  402e87:	add    BYTE PTR [esi],al
  402e89:	and    eax,0x20031226
  402e8e:	mov    ah,0x0
  402e90:	add    BYTE PTR [eax],al
  402e92:	sub    BYTE PTR [eax+0x0],ah
  402e95:	add    BYTE PTR [esi],al
  402e97:	and    BYTE PTR [eax+0x28000000],bh
  402e9d:	pusha  
  402e9e:	add    BYTE PTR [eax],al
  402ea0:	push   es
  402ea1:	sub    BYTE PTR [edx+0x0],dh
  402ea4:	add    BYTE PTR [edx],cl
  402ea6:	add    BYTE PTR [ecx],cl
  402ea8:	outs   dx,DWORD PTR ds:[esi]
  402ea9:	jae    0x402eab
  402eab:	add    BYTE PTR [edx],cl
  402ead:	add    BYTE PTR [edx],al
  402eaf:	outs   dx,DWORD PTR ds:[esi]
  402eb0:	xor    BYTE PTR [eax],al
  402eb2:	add    BYTE PTR [esi],al
  402eb4:	and    eax,0x1442026
  402eb9:	add    BYTE PTR [eax],al
  402ebb:	sub    BYTE PTR [eax+0x0],ch
  402ebe:	add    BYTE PTR [esi],al
  402ec0:	outs   dx,DWORD PTR ds:[esi]
  402ec1:	je     0x402ec3
  402ec3:	add    BYTE PTR [edx],cl
  402ec5:	add    BYTE PTR [edx],al
  402ec7:	outs   dx,DWORD PTR ds:[esi]
  402ec8:	xor    BYTE PTR [eax],al
  402eca:	add    BYTE PTR [esi],al
  402ecc:	and    eax,0x20051226
  402ed1:	mov    esp,0x28000000
  402ed6:	pusha  
  402ed7:	add    BYTE PTR [eax],al
  402ed9:	push   es
  402eda:	and    al,al
  402edc:	add    BYTE PTR [eax],al
  402ede:	add    BYTE PTR [eax],ch
  402ee0:	pusha  
  402ee1:	add    BYTE PTR [eax],al
  402ee3:	push   es
  402ee4:	sub    BYTE PTR [ebp+0x0],dh
  402ee7:	add    BYTE PTR [edx],cl
  402ee9:	add    BYTE PTR [ecx],dl
  402eeb:	add    eax,0x766f
  402ef0:	or     al,BYTE PTR [eax]
  402ef2:	add    ch,BYTE PTR [edi+0x30]
  402ef5:	add    BYTE PTR [eax],al
  402ef7:	push   es
  402ef8:	and    eax,0xc42026
  402efd:	add    BYTE PTR [eax],al
  402eff:	sub    BYTE PTR [eax+0x0],ah
  402f02:	add    BYTE PTR [esi],al
  402f04:	outs   dx,DWORD PTR ds:[esi]
  402f05:	jge    0x402f07
  402f07:	add    BYTE PTR [edx],cl
  402f09:	add    BYTE PTR [edx],al
  402f0b:	outs   dx,DWORD PTR ds:[esi]
  402f0c:	xor    BYTE PTR [eax],al
  402f0e:	add    BYTE PTR [esi],al
  402f10:	and    al,cl
  402f12:	add    BYTE PTR [eax],al
  402f14:	add    BYTE PTR [eax],ch
  402f16:	pusha  
  402f17:	add    BYTE PTR [eax],al
  402f19:	push   es
  402f1a:	outs   dx,DWORD PTR ds:[esi]
  402f1b:	jle    0x402f1d
  402f1d:	add    BYTE PTR [edx],cl
  402f1f:	add    BYTE PTR [edx],al
  402f21:	outs   dx,DWORD PTR ds:[esi]
  402f22:	xor    BYTE PTR [eax],al
  402f24:	add    BYTE PTR [esi],al
  402f26:	and    eax,0xcc2026
  402f2b:	add    BYTE PTR [eax],al
  402f2d:	sub    BYTE PTR [eax+0x0],ah
  402f30:	add    BYTE PTR [esi],al
  402f32:	outs   dx,DWORD PTR ds:[esi]
  402f33:	jg     0x402f35
  402f35:	add    BYTE PTR [edx],cl
  402f37:	add    BYTE PTR [edx],al
  402f39:	outs   dx,DWORD PTR ds:[esi]
  402f3a:	xor    al,BYTE PTR [eax]
  402f3c:	add    BYTE PTR [esi],al
  402f3e:	and    eax,0xb62026
  402f43:	add    BYTE PTR [eax],al
  402f45:	sub    BYTE PTR [eax+0x0],ch
  402f48:	add    BYTE PTR [esi],al
  402f4a:	and    al,dl
  402f4c:	add    BYTE PTR [eax],al
  402f4e:	add    BYTE PTR [eax],ch
  402f50:	bound  eax,QWORD PTR [eax]
  402f52:	add    BYTE PTR [esi],al
  402f54:	and    eax,0xd42026
  402f59:	add    BYTE PTR [eax],al
  402f5b:	sub    BYTE PTR [eax+0x0],ah
  402f5e:	add    BYTE PTR [esi],al
  402f60:	and    al,bl
  402f62:	add    BYTE PTR [eax],al
  402f64:	add    BYTE PTR [eax],ch
  402f66:	pusha  
  402f67:	add    BYTE PTR [eax],al
  402f69:	push   es
  402f6a:	and    ah,bl
  402f6c:	add    BYTE PTR [eax],al
  402f6e:	add    BYTE PTR [eax],ch
  402f70:	pusha  
  402f71:	add    BYTE PTR [eax],al
  402f73:	push   es
  402f74:	jae    0x402fe6
  402f76:	add    BYTE PTR [eax],al
  402f78:	or     ch,BYTE PTR [edi+0x71]
  402f7b:	add    BYTE PTR [eax],al
  402f7d:	or     al,BYTE PTR [eax]
  402f7f:	add    ch,BYTE PTR [edi+0x32]
  402f82:	add    BYTE PTR [eax],al
  402f84:	push   es
  402f85:	and    eax,0x20031226
  402f8a:	loopne 0x402f8c
  402f8c:	add    BYTE PTR [eax],al
  402f8e:	sub    BYTE PTR [eax+0x0],ah
  402f91:	add    BYTE PTR [esi],al
  402f93:	and    ah,ah
  402f95:	add    BYTE PTR [eax],al
  402f97:	add    BYTE PTR [eax],ch
  402f99:	pusha  
  402f9a:	add    BYTE PTR [eax],al
  402f9c:	push   es
  402f9d:	sub    BYTE PTR [edx+0x0],dh
  402fa0:	add    BYTE PTR [edx],cl
  402fa2:	add    BYTE PTR [ecx],cl
  402fa4:	outs   dx,DWORD PTR ds:[esi]
  402fa5:	jae    0x402fa7
  402fa7:	add    BYTE PTR [edx],cl
  402fa9:	add    BYTE PTR [edx],al
  402fab:	outs   dx,DWORD PTR ds:[esi]
  402fac:	xor    al,BYTE PTR [eax]
  402fae:	add    BYTE PTR [esi],al
  402fb0:	and    eax,0x15b2026
  402fb5:	add    BYTE PTR [eax],al
  402fb7:	sub    BYTE PTR [eax+0x0],ch
  402fba:	add    BYTE PTR [esi],al
  402fbc:	outs   dx,DWORD PTR ds:[esi]
  402fbd:	je     0x402fbf
  402fbf:	add    BYTE PTR [edx],cl
  402fc1:	add    BYTE PTR [edx],al
  402fc3:	outs   dx,DWORD PTR ds:[esi]
  402fc4:	xor    al,BYTE PTR [eax]
  402fc6:	add    BYTE PTR [esi],al
  402fc8:	adc    al,BYTE PTR ds:0xe820
  402fce:	add    BYTE PTR [eax],ch
  402fd0:	pusha  
  402fd1:	add    BYTE PTR [eax],al
  402fd3:	push   es
  402fd4:	and    ah,ch
  402fd6:	add    BYTE PTR [eax],al
  402fd8:	add    BYTE PTR [eax],ch
  402fda:	pusha  
  402fdb:	add    BYTE PTR [eax],al
  402fdd:	push   es
  402fde:	sub    BYTE PTR [ebp+0x0],dh
  402fe1:	add    BYTE PTR [edx],cl
  402fe3:	add    BYTE PTR [ecx],dl
  402fe5:	add    eax,0x766f
  402fea:	or     al,BYTE PTR [eax]
  402fec:	add    ch,BYTE PTR [edi+0x32]
  402fef:	add    BYTE PTR [eax],al
  402ff1:	push   es
  402ff2:	and    eax,0xf02026
  402ff7:	add    BYTE PTR [eax],al
  402ff9:	sub    BYTE PTR [eax+0x0],ah
  402ffc:	add    BYTE PTR [esi],al
  402ffe:	outs   dx,DWORD PTR ds:[esi]
  402fff:	ja     0x403001
  403001:	add    BYTE PTR [edx],cl
  403003:	add    BYTE PTR [edx],al
  403005:	outs   dx,DWORD PTR ds:[esi]
  403006:	xor    al,0x0
  403008:	add    BYTE PTR [esi],al
  40300a:	and    ah,dh
  40300c:	add    BYTE PTR [eax],al
  40300e:	add    BYTE PTR [eax],ch
  403010:	pusha  
  403011:	add    BYTE PTR [eax],al
  403013:	push   es
  403014:	outs   dx,DWORD PTR ds:[esi]
  403015:	add    BYTE PTR [eax],0x0
  403018:	or     al,BYTE PTR [eax]
  40301a:	add    ch,BYTE PTR [edi+0x34]
  40301d:	add    BYTE PTR [eax],al
  40301f:	push   es
  403020:	and    eax,0xb62026
  403025:	add    BYTE PTR [eax],al
  403027:	sub    BYTE PTR [eax+0x0],ch
  40302a:	add    BYTE PTR [esi],al
  40302c:	and    eax,0xf82026
  403031:	add    BYTE PTR [eax],al
  403033:	sub    BYTE PTR [edx+0x0],ah
  403036:	add    BYTE PTR [esi],al
  403038:	and    eax,0xfc2026
  40303d:	add    BYTE PTR [eax],al
  40303f:	sub    BYTE PTR [eax+0x0],ah
  403042:	add    BYTE PTR [esi],al
  403044:	and    BYTE PTR [eax],al
  403046:	add    DWORD PTR [eax],eax
  403048:	add    BYTE PTR [eax],ch
  40304a:	pusha  
  40304b:	add    BYTE PTR [eax],al
  40304d:	push   es
  40304e:	and    BYTE PTR [ecx+eax*1],al
  403051:	add    BYTE PTR [eax],al
  403053:	sub    BYTE PTR [eax+0x0],ah
  403056:	add    BYTE PTR [esi],al
  403058:	jae    0x4030ca
  40305a:	add    BYTE PTR [eax],al
  40305c:	or     ch,BYTE PTR [edi+0x71]
  40305f:	add    BYTE PTR [eax],al
  403061:	or     al,BYTE PTR [eax]
  403063:	add    ch,BYTE PTR [edi+0x34]
  403066:	add    BYTE PTR [eax],al
  403068:	push   es
  403069:	sub    BYTE PTR [ecx+0x250a0000],al
  40306f:	outs   dx,DWORD PTR es:[esi]
  403071:	add    BYTE PTR [eax],0x0
  403074:	or     al,BYTE PTR [eax]
  403076:	add    ch,BYTE PTR [edi+0x34]
  403079:	add    BYTE PTR [eax],al
  40307b:	push   es
  40307c:	and    eax,0x20031226
  403081:	or     BYTE PTR [ecx],al
  403083:	add    BYTE PTR [eax],al
  403085:	sub    BYTE PTR [eax+0x0],ah
  403088:	add    BYTE PTR [esi],al
  40308a:	and    BYTE PTR [ecx+eax*1],cl
  40308d:	add    BYTE PTR [eax],al
  40308f:	sub    BYTE PTR [eax+0x0],ah
  403092:	add    BYTE PTR [esi],al
  403094:	sub    BYTE PTR [edx+0x0],dh
  403097:	add    BYTE PTR [edx],cl
  403099:	add    BYTE PTR [ecx],cl
  40309b:	outs   dx,DWORD PTR ds:[esi]
  40309c:	jae    0x40309e
  40309e:	add    BYTE PTR [edx],cl
  4030a0:	add    BYTE PTR [edx],al
  4030a2:	outs   dx,DWORD PTR ds:[esi]
  4030a3:	xor    al,0x0
  4030a5:	add    BYTE PTR [esi],al
  4030a7:	and    eax,0x16c2026
  4030ac:	add    BYTE PTR [eax],al
  4030ae:	sub    BYTE PTR [eax+0x0],ch
  4030b1:	add    BYTE PTR [esi],al
  4030b3:	and    eax,0x746f26
  4030b8:	add    BYTE PTR [edx],cl
  4030ba:	add    BYTE PTR [edx],al
  4030bc:	outs   dx,DWORD PTR ds:[esi]
  4030bd:	xor    al,0x0
  4030bf:	add    BYTE PTR [esi],al
  4030c1:	and    eax,0x20051226
  4030c6:	adc    BYTE PTR [ecx],al
  4030c8:	add    BYTE PTR [eax],al
  4030ca:	sub    BYTE PTR [eax+0x0],ah
  4030cd:	add    BYTE PTR [esi],al
  4030cf:	and    BYTE PTR [ecx+eax*1],dl
  4030d2:	add    BYTE PTR [eax],al
  4030d4:	sub    BYTE PTR [eax+0x0],ah
  4030d7:	add    BYTE PTR [esi],al
  4030d9:	sub    BYTE PTR [ebp+0x0],dh
  4030dc:	add    BYTE PTR [edx],cl
  4030de:	add    BYTE PTR [ecx],dl
  4030e0:	add    eax,0x766f
  4030e5:	or     al,BYTE PTR [eax]
  4030e7:	add    ch,BYTE PTR [edi+0x34]
  4030ea:	add    BYTE PTR [eax],al
  4030ec:	push   es
  4030ed:	and    eax,0x1182026
  4030f2:	add    BYTE PTR [eax],al
  4030f4:	sub    BYTE PTR [eax+0x0],ah
  4030f7:	add    BYTE PTR [esi],al
  4030f9:	outs   dx,DWORD PTR ds:[esi]
  4030fa:	ja     0x4030fc
  4030fc:	add    BYTE PTR [edx],cl
  4030fe:	add    BYTE PTR [edx],al
  403100:	outs   dx,DWORD PTR ds:[esi]
  403101:	xor    al,0x0
  403103:	add    BYTE PTR [esi],al
  403105:	and    eax,0x1792026
  40310a:	add    BYTE PTR [eax],al
  40310c:	sub    BYTE PTR [eax+0x0],ch
  40310f:	add    BYTE PTR [esi],al
  403111:	outs   dx,DWORD PTR ds:[esi]
  403112:	add    DWORD PTR [eax],0x0
  403115:	or     al,BYTE PTR [eax]
  403117:	add    ch,BYTE PTR [edi+0x36]
  40311a:	add    BYTE PTR [eax],al
  40311c:	push   es
  40311d:	and    eax,0x842826
  403122:	add    BYTE PTR [edx],cl
  403124:	and    eax,0x856f26
  403129:	add    BYTE PTR [edx],cl
  40312b:	add    BYTE PTR [edx],al
  40312d:	outs   dx,DWORD PTR ds:[esi]
  40312e:	add    BYTE PTR ss:[eax],al
  403131:	push   es
  403132:	and    eax,0x11c2026
  403137:	add    BYTE PTR [eax],al
  403139:	sub    BYTE PTR [eax+0x0],ah
  40313c:	add    BYTE PTR [esi],al
  40313e:	outs   dx,DWORD PTR ds:[esi]
  40313f:	xchg   BYTE PTR [eax],al
  403141:	add    BYTE PTR [edx],cl
  403143:	add    BYTE PTR [edx],al
  403145:	outs   dx,DWORD PTR ds:[esi]
  403146:	add    BYTE PTR ss:[eax],al
  403149:	push   es
  40314a:	and    eax,0xb62026
  40314f:	add    BYTE PTR [eax],al
  403151:	sub    BYTE PTR [eax+0x0],ch
  403154:	add    BYTE PTR [esi],al
  403156:	and    BYTE PTR [eax],ah
  403158:	add    DWORD PTR [eax],eax
  40315a:	add    BYTE PTR [eax],ch
  40315c:	bound  eax,QWORD PTR [eax]
  40315e:	add    BYTE PTR [esi],al
  403160:	and    eax,0x1242026
  403165:	add    BYTE PTR [eax],al
  403167:	sub    BYTE PTR [eax+0x0],ah
  40316a:	add    BYTE PTR [esi],al
  40316c:	and    BYTE PTR [eax],ch
  40316e:	add    DWORD PTR [eax],eax
  403170:	add    BYTE PTR [eax],ch
  403172:	pusha  
  403173:	add    BYTE PTR [eax],al
  403175:	push   es
  403176:	and    BYTE PTR [ecx+eax*1],ch
  403179:	add    BYTE PTR [eax],al
  40317b:	sub    BYTE PTR [eax+0x0],ah
  40317e:	add    BYTE PTR [esi],al
  403180:	jae    0x4031f2
  403182:	add    BYTE PTR [eax],al
  403184:	or     ch,BYTE PTR [edi+0x71]
  403187:	add    BYTE PTR [eax],al
  403189:	or     al,BYTE PTR [eax]
  40318b:	add    ch,BYTE PTR [edi+0x36]
  40318e:	add    BYTE PTR [eax],al
  403190:	push   es
  403191:	adc    al,BYTE PTR [ebx]
  403193:	and    BYTE PTR [eax],dh
  403195:	add    DWORD PTR [eax],eax
  403197:	add    BYTE PTR [eax],ch
  403199:	pusha  
  40319a:	add    BYTE PTR [eax],al
  40319c:	push   es
  40319d:	and    BYTE PTR [ecx+eax*1],dh
  4031a0:	add    BYTE PTR [eax],al
  4031a2:	sub    BYTE PTR [eax+0x0],ah
  4031a5:	add    BYTE PTR [esi],al
  4031a7:	sub    BYTE PTR [edx+0x0],dh
  4031aa:	add    BYTE PTR [edx],cl
  4031ac:	add    BYTE PTR [ecx],cl
  4031ae:	outs   dx,DWORD PTR ds:[esi]
  4031af:	jae    0x4031b1
  4031b1:	add    BYTE PTR [edx],cl
  4031b3:	add    BYTE PTR [edx],al
  4031b5:	outs   dx,DWORD PTR ds:[esi]
  4031b6:	add    BYTE PTR ss:[eax],al
  4031b9:	push   es
  4031ba:	and    eax,0x1382026
  4031bf:	add    BYTE PTR [eax],al
  4031c1:	sub    BYTE PTR [eax+0x0],ah
  4031c4:	add    BYTE PTR [esi],al
  4031c6:	outs   dx,DWORD PTR ds:[esi]
  4031c7:	xchg   DWORD PTR [eax],eax
  4031c9:	add    BYTE PTR [edx],cl
  4031cb:	add    BYTE PTR [edx],al
  4031cd:	outs   dx,DWORD PTR ds:[esi]
  4031ce:	add    BYTE PTR ss:[eax],al
  4031d1:	push   es
  4031d2:	and    BYTE PTR [edx+0x28000001],ch
  4031d8:	push   0x6f060000
  4031dd:	je     0x4031df
  4031df:	add    BYTE PTR [edx],cl
  4031e1:	add    BYTE PTR [edx],al
  4031e3:	outs   dx,DWORD PTR ds:[esi]
  4031e4:	add    BYTE PTR ss:[eax],al
  4031e7:	push   es
  4031e8:	and    eax,0x13c2026
  4031ed:	add    BYTE PTR [eax],al
  4031ef:	sub    BYTE PTR [eax+0x0],ah
  4031f2:	add    BYTE PTR [esi],al
  4031f4:	outs   dx,DWORD PTR ds:[esi]
  4031f5:	mov    BYTE PTR [eax],al
  4031f7:	add    BYTE PTR [edx],cl
  4031f9:	add    BYTE PTR [edx],al
  4031fb:	outs   dx,DWORD PTR ds:[esi]
  4031fc:	add    BYTE PTR ss:[eax],al
  4031ff:	push   es
  403200:	and    eax,0x20051226
  403205:	inc    eax
  403206:	add    DWORD PTR [eax],eax
  403208:	add    BYTE PTR [eax],ch
  40320a:	pusha  
  40320b:	add    BYTE PTR [eax],al
  40320d:	push   es
  40320e:	and    BYTE PTR [ecx+eax*1+0x0],al
  403212:	add    BYTE PTR [eax],ch
  403214:	pusha  
  403215:	add    BYTE PTR [eax],al
  403217:	push   es
  403218:	sub    BYTE PTR [ebp+0x0],dh
  40321b:	add    BYTE PTR [edx],cl
  40321d:	add    BYTE PTR [ecx],dl
  40321f:	add    eax,0x766f
  403224:	or     al,BYTE PTR [eax]
  403226:	add    ch,BYTE PTR [edi+0x36]
  403229:	add    BYTE PTR [eax],al
  40322b:	push   es
  40322c:	and    BYTE PTR [eax+0x1],cl
  40322f:	add    BYTE PTR [eax],al
  403231:	sub    BYTE PTR [eax+0x0],ah
  403234:	add    BYTE PTR [esi],al
  403236:	outs   dx,DWORD PTR ds:[esi]
  403237:	ja     0x403239
  403239:	add    BYTE PTR [edx],cl
  40323b:	add    BYTE PTR [edx],al
  40323d:	outs   dx,DWORD PTR ds:[esi]
  40323e:	add    BYTE PTR ss:[eax],al
  403241:	push   es
  403242:	and    eax,0xbb200626
  403247:	add    DWORD PTR [eax],eax
  403249:	add    BYTE PTR [eax],ch
  40324b:	push   0x6f060000
  403250:	mov    DWORD PTR [eax],eax
  403252:	add    BYTE PTR [edx],cl
  403254:	and    eax,0x8a6f26
  403259:	add    BYTE PTR [edx],cl
  40325b:	add    BYTE PTR [edx],al
  40325d:	outs   dx,DWORD PTR ds:[esi]
  40325e:	cmp    BYTE PTR [eax],al
  403260:	add    BYTE PTR [esi],al
  403262:	push   es
  403263:	and    dh,dl
  403265:	add    DWORD PTR [eax],eax
  403267:	add    BYTE PTR [eax],ch
  403269:	push   0x6f060000
  40326e:	jnp    0x403270
  403270:	add    BYTE PTR [edx],cl
  403272:	and    eax,0x417426
  403277:	add    BYTE PTR [ecx],al
  403279:	outs   dx,DWORD PTR ds:[esi]
  40327a:	jl     0x40327c
  40327c:	add    BYTE PTR [edx],cl
  40327e:	add    BYTE PTR [edx],al
  403280:	outs   dx,DWORD PTR ds:[esi]
  403281:	cmp    BYTE PTR [eax],al
  403283:	add    BYTE PTR [esi],al
  403285:	and    eax,0x20031226
  40328a:	dec    esp
  40328b:	add    DWORD PTR [eax],eax
  40328d:	add    BYTE PTR [eax],ch
  40328f:	pusha  
  403290:	add    BYTE PTR [eax],al
  403292:	push   es
  403293:	and    BYTE PTR [eax+0x1],dl
  403296:	add    BYTE PTR [eax],al
  403298:	sub    BYTE PTR [eax+0x0],ah
  40329b:	add    BYTE PTR [esi],al
  40329d:	sub    BYTE PTR [edx+0x0],dh
  4032a0:	add    BYTE PTR [edx],cl
  4032a2:	add    BYTE PTR [ecx],cl
  4032a4:	outs   dx,DWORD PTR ds:[esi]
  4032a5:	jae    0x4032a7
  4032a7:	add    BYTE PTR [edx],cl
  4032a9:	add    BYTE PTR [edx],al
  4032ab:	outs   dx,DWORD PTR ds:[esi]
  4032ac:	cmp    BYTE PTR [eax],al
  4032ae:	add    BYTE PTR [esi],al
  4032b0:	and    cl,bh
  4032b2:	add    DWORD PTR [eax],eax
  4032b4:	add    BYTE PTR [eax],ch
  4032b6:	push   0x25060000
  4032bb:	outs   dx,DWORD PTR es:[esi]
  4032bd:	je     0x4032bf
  4032bf:	add    BYTE PTR [edx],cl
  4032c1:	add    BYTE PTR [edx],al
  4032c3:	outs   dx,DWORD PTR ds:[esi]
  4032c4:	cmp    BYTE PTR [eax],al
  4032c6:	add    BYTE PTR [esi],al
  4032c8:	adc    al,BYTE PTR ds:0x15420
  4032ce:	add    BYTE PTR [eax],ch
  4032d0:	pusha  
  4032d1:	add    BYTE PTR [eax],al
  4032d3:	push   es
  4032d4:	and    BYTE PTR [eax+0x1],bl
  4032d7:	add    BYTE PTR [eax],al
  4032d9:	sub    BYTE PTR [eax+0x0],ah
  4032dc:	add    BYTE PTR [esi],al
  4032de:	sub    BYTE PTR [ebp+0x0],dh
  4032e1:	add    BYTE PTR [edx],cl
  4032e3:	add    BYTE PTR [ecx],dl
  4032e5:	add    eax,0x766f
  4032ea:	or     al,BYTE PTR [eax]
  4032ec:	add    ch,BYTE PTR [edi+0x38]
  4032ef:	add    BYTE PTR [eax],al
  4032f1:	push   es
  4032f2:	and    BYTE PTR [ecx+eax*1+0x0],bl
  4032f6:	add    BYTE PTR [eax],ch
  4032f8:	pusha  
  4032f9:	add    BYTE PTR [eax],al
  4032fb:	push   es
  4032fc:	outs   dx,DWORD PTR ds:[esi]
  4032fd:	jge    0x4032ff
  4032ff:	add    BYTE PTR [edx],cl
  403301:	add    BYTE PTR [edx],al
  403303:	outs   dx,DWORD PTR ds:[esi]
  403304:	cmp    BYTE PTR [eax],al
  403306:	add    BYTE PTR [esi],al
  403308:	and    eax,0x1602026
  40330d:	add    BYTE PTR [eax],al
  40330f:	sub    BYTE PTR [eax+0x0],ah
  403312:	add    BYTE PTR [esi],al
  403314:	outs   dx,DWORD PTR ds:[esi]
  403315:	jle    0x403317
  403317:	add    BYTE PTR [edx],cl
  403319:	add    BYTE PTR [edx],al
  40331b:	outs   dx,DWORD PTR ds:[esi]
  40331c:	cmp    BYTE PTR [eax],al
  40331e:	add    BYTE PTR [esi],al
  403320:	and    eax,0x1642026
  403325:	add    BYTE PTR [eax],al
  403327:	sub    BYTE PTR [eax+0x0],ah
  40332a:	add    BYTE PTR [esi],al
  40332c:	outs   dx,DWORD PTR ds:[esi]
  40332d:	jg     0x40332f
  40332f:	add    BYTE PTR [edx],cl
  403331:	add    BYTE PTR [edx],al
  403333:	outs   dx,DWORD PTR ds:[esi]
  403334:	cmp    al,BYTE PTR [eax]
  403336:	add    BYTE PTR [esi],al
  403338:	and    eax,0x842826
  40333d:	add    BYTE PTR [edx],cl
  40333f:	and    eax,0x856f26
  403344:	add    BYTE PTR [edx],cl
  403346:	add    BYTE PTR [edx],al
  403348:	outs   dx,DWORD PTR ds:[esi]
  403349:	cmp    al,BYTE PTR [eax]
  40334b:	add    BYTE PTR [esi],al
  40334d:	and    eax,0x1682026
  403352:	add    BYTE PTR [eax],al
  403354:	sub    BYTE PTR [eax+0x0],ah
  403357:	add    BYTE PTR [esi],al
  403359:	outs   dx,DWORD PTR ds:[esi]
  40335a:	xchg   BYTE PTR [eax],al
  40335c:	add    BYTE PTR [edx],cl
  40335e:	add    BYTE PTR [edx],al
  403360:	outs   dx,DWORD PTR ds:[esi]
  403361:	cmp    al,BYTE PTR [eax]
  403363:	add    BYTE PTR [esi],al
  403365:	and    BYTE PTR [esi+0x28000000],dh
  40336b:	push   0x25060000
  403370:	and    BYTE PTR es:[ecx+eax*1+0x0],ch
  403375:	add    BYTE PTR [eax],ch
  403377:	bound  eax,QWORD PTR [eax]
  403379:	add    BYTE PTR [esi],al
  40337b:	and    eax,0x1702026
  403380:	add    BYTE PTR [eax],al
  403382:	sub    BYTE PTR [eax+0x0],ah
  403385:	add    BYTE PTR [esi],al
  403387:	and    BYTE PTR [ecx+eax*1+0x0],dh
  40338b:	add    BYTE PTR [eax],ch
  40338d:	pusha  
  40338e:	add    BYTE PTR [eax],al
  403390:	push   es
  403391:	and    BYTE PTR [eax+0x1],bh
  403394:	add    BYTE PTR [eax],al
  403396:	sub    BYTE PTR [eax+0x0],ah
  403399:	add    BYTE PTR [esi],al
  40339b:	jae    0x40340d
  40339d:	add    BYTE PTR [eax],al
  40339f:	or     ch,BYTE PTR [edi+0x71]
  4033a2:	add    BYTE PTR [eax],al
  4033a4:	or     al,BYTE PTR [eax]
  4033a6:	add    ch,BYTE PTR [edi+0x3a]
  4033a9:	add    BYTE PTR [eax],al
  4033ab:	push   es
  4033ac:	and    BYTE PTR [ecx+eax*1+0x0],bh
  4033b0:	add    BYTE PTR [eax],ch
  4033b2:	pusha  
  4033b3:	add    BYTE PTR [eax],al
  4033b5:	push   es
  4033b6:	and    BYTE PTR [eax+0x28000001],al
  4033bc:	pusha  
  4033bd:	add    BYTE PTR [eax],al
  4033bf:	push   es
  4033c0:	and    BYTE PTR [ecx+eax*1+0x60280000],al
  4033c7:	add    BYTE PTR [eax],al
  4033c9:	push   es
  4033ca:	sub    BYTE PTR [ebx+0x250a0000],cl
  4033d0:	outs   dx,DWORD PTR es:[esi]
  4033d2:	mov    WORD PTR [eax],es
  4033d4:	add    BYTE PTR [edx],cl
  4033d6:	add    BYTE PTR [edx],al
  4033d8:	outs   dx,DWORD PTR ds:[esi]
  4033d9:	cmp    al,BYTE PTR [eax]
  4033db:	add    BYTE PTR [esi],al
  4033dd:	adc    al,BYTE PTR [ebx]
  4033df:	and    BYTE PTR [eax+0x28000001],cl
  4033e5:	pusha  
  4033e6:	add    BYTE PTR [eax],al
  4033e8:	push   es
  4033e9:	and    BYTE PTR [ecx+eax*1+0x60280000],cl
  4033f0:	add    BYTE PTR [eax],al
  4033f2:	push   es
  4033f3:	sub    BYTE PTR [edx+0x0],dh
  4033f6:	add    BYTE PTR [edx],cl
  4033f8:	add    BYTE PTR [ecx],cl
  4033fa:	outs   dx,DWORD PTR ds:[esi]
  4033fb:	jae    0x4033fd
  4033fd:	add    BYTE PTR [edx],cl
  4033ff:	add    BYTE PTR [edx],al
  403401:	outs   dx,DWORD PTR ds:[esi]
  403402:	cmp    al,BYTE PTR [eax]
  403404:	add    BYTE PTR [esi],al
  403406:	and    BYTE PTR [eax+0x28000001],dl
  40340c:	pusha  
  40340d:	add    BYTE PTR [eax],al
  40340f:	push   es
  403410:	outs   dx,DWORD PTR ds:[esi]
  403411:	xchg   DWORD PTR [eax],eax
  403413:	add    BYTE PTR [edx],cl
  403415:	add    BYTE PTR [edx],al
  403417:	outs   dx,DWORD PTR ds:[esi]
  403418:	cmp    al,BYTE PTR [eax]
  40341a:	add    BYTE PTR [esi],al
  40341c:	and    eax,0x2102026
  403421:	add    BYTE PTR [eax],al
  403423:	sub    BYTE PTR [eax+0x0],ch
  403426:	add    BYTE PTR [esi],al
  403428:	and    eax,0x746f26
  40342d:	add    BYTE PTR [edx],cl
  40342f:	add    BYTE PTR [edx],al
  403431:	outs   dx,DWORD PTR ds:[esi]
  403432:	cmp    al,BYTE PTR [eax]
  403434:	add    BYTE PTR [esi],al
  403436:	and    eax,0x1942026
  40343b:	add    BYTE PTR [eax],al
  40343d:	sub    BYTE PTR [eax+0x0],ah
  403440:	add    BYTE PTR [esi],al
  403442:	outs   dx,DWORD PTR ds:[esi]
  403443:	mov    BYTE PTR [eax],al
  403445:	add    BYTE PTR [edx],cl
  403447:	add    BYTE PTR [edx],al
  403449:	outs   dx,DWORD PTR ds:[esi]
  40344a:	cmp    al,BYTE PTR [eax]
  40344c:	add    BYTE PTR [esi],al
  40344e:	adc    al,BYTE PTR ds:0x19820
  403454:	add    BYTE PTR [eax],ch
  403456:	pusha  
  403457:	add    BYTE PTR [eax],al
  403459:	push   es
  40345a:	and    BYTE PTR [ecx+eax*1+0x60280000],bl
  403461:	add    BYTE PTR [eax],al
  403463:	push   es
  403464:	sub    BYTE PTR [ebp+0x0],dh
  403467:	add    BYTE PTR [edx],cl
  403469:	add    BYTE PTR [ecx],dl
  40346b:	add    eax,0x766f
  403470:	or     al,BYTE PTR [eax]
  403472:	add    ch,BYTE PTR [edi+0x3a]
  403475:	add    BYTE PTR [eax],al
  403477:	push   es
  403478:	and    eax,0x1a02026
  40347d:	add    BYTE PTR [eax],al
  40347f:	sub    BYTE PTR [eax+0x0],ah
  403482:	add    BYTE PTR [esi],al
  403484:	outs   dx,DWORD PTR ds:[esi]
  403485:	ja     0x403487
  403487:	add    BYTE PTR [edx],cl
  403489:	add    BYTE PTR [edx],al
  40348b:	outs   dx,DWORD PTR ds:[esi]
  40348c:	cmp    al,BYTE PTR [eax]
  40348e:	add    BYTE PTR [esi],al
  403490:	and    eax,0x2212026
  403495:	add    BYTE PTR [eax],al
  403497:	sub    BYTE PTR [eax+0x0],ch
  40349a:	add    BYTE PTR [esi],al
  40349c:	outs   dx,DWORD PTR ds:[esi]
  40349d:	mov    al,BYTE PTR [eax]
  40349f:	add    BYTE PTR [edx],cl
  4034a1:	add    BYTE PTR [edx],al
  4034a3:	outs   dx,DWORD PTR ds:[esi]
  4034a4:	cmp    al,0x0
  4034a6:	add    BYTE PTR [esi],al
  4034a8:	and    eax,0x842826
  4034ad:	add    BYTE PTR [edx],cl
  4034af:	and    eax,0x856f26
  4034b4:	add    BYTE PTR [edx],cl
  4034b6:	add    BYTE PTR [edx],al
  4034b8:	outs   dx,DWORD PTR ds:[esi]
  4034b9:	cmp    al,0x0
  4034bb:	add    BYTE PTR [esi],al
  4034bd:	and    eax,0x1a42026
  4034c2:	add    BYTE PTR [eax],al
  4034c4:	sub    BYTE PTR [eax+0x0],ah
  4034c7:	add    BYTE PTR [esi],al
  4034c9:	outs   dx,DWORD PTR ds:[esi]
  4034ca:	xchg   BYTE PTR [eax],al
  4034cc:	add    BYTE PTR [edx],cl
  4034ce:	add    BYTE PTR [edx],al
  4034d0:	outs   dx,DWORD PTR ds:[esi]
  4034d1:	cmp    al,0x0
  4034d3:	add    BYTE PTR [esi],al
  4034d5:	and    eax,0xb62026
  4034da:	add    BYTE PTR [eax],al
  4034dc:	sub    BYTE PTR [eax+0x0],ch
  4034df:	add    BYTE PTR [esi],al
  4034e1:	and    eax,0x1a82026
  4034e6:	add    BYTE PTR [eax],al
  4034e8:	sub    BYTE PTR [edx+0x0],ah
  4034eb:	add    BYTE PTR [esi],al
  4034ed:	and    eax,0x1ac2026
  4034f2:	add    BYTE PTR [eax],al
  4034f4:	sub    BYTE PTR [eax+0x0],ah
  4034f7:	add    BYTE PTR [esi],al
  4034f9:	and    BYTE PTR [eax+0x28000001],dh
  4034ff:	pusha  
  403500:	add    BYTE PTR [eax],al
  403502:	push   es
  403503:	and    BYTE PTR [ecx+eax*1+0x60280000],dh
  40350a:	add    BYTE PTR [eax],al
  40350c:	push   es
  40350d:	jae    0x40357f
  40350f:	add    BYTE PTR [eax],al
  403511:	or     ch,BYTE PTR [edi+0x71]
  403514:	add    BYTE PTR [eax],al
  403516:	or     al,BYTE PTR [eax]
  403518:	add    ch,BYTE PTR [edi+0x3c]
  40351b:	add    BYTE PTR [eax],al
  40351d:	push   es
  40351e:	and    eax,0x20031226
  403523:	mov    eax,0x28000001
  403528:	pusha  
  403529:	add    BYTE PTR [eax],al
  40352b:	push   es
  40352c:	and    BYTE PTR [ecx+eax*1+0x60280000],bh
  403533:	add    BYTE PTR [eax],al
  403535:	push   es
  403536:	sub    BYTE PTR [edx+0x0],dh
  403539:	add    BYTE PTR [edx],cl
  40353b:	add    BYTE PTR [ecx],cl
  40353d:	outs   dx,DWORD PTR ds:[esi]
  40353e:	jae    0x403540
  403540:	add    BYTE PTR [edx],cl
  403542:	add    BYTE PTR [edx],al
  403544:	outs   dx,DWORD PTR ds:[esi]
  403545:	cmp    al,0x0
  403547:	add    BYTE PTR [esi],al
  403549:	and    eax,0x1c02026
  40354e:	add    BYTE PTR [eax],al
  403550:	sub    BYTE PTR [eax+0x0],ah
  403553:	add    BYTE PTR [esi],al
  403555:	outs   dx,DWORD PTR ds:[esi]
  403556:	xchg   DWORD PTR [eax],eax
  403558:	add    BYTE PTR [edx],cl
  40355a:	add    BYTE PTR [edx],al
  40355c:	outs   dx,DWORD PTR ds:[esi]
  40355d:	cmp    al,0x0
  40355f:	add    BYTE PTR [esi],al
  403561:	and    BYTE PTR [ecx],dl
  403563:	add    eax,DWORD PTR [eax]
  403565:	add    BYTE PTR [eax],ch
  403567:	push   0x25060000
  40356c:	outs   dx,DWORD PTR es:[esi]
  40356e:	je     0x403570
  403570:	add    BYTE PTR [edx],cl
  403572:	add    BYTE PTR [edx],al
  403574:	outs   dx,DWORD PTR ds:[esi]
  403575:	cmp    al,0x0
  403577:	add    BYTE PTR [esi],al
  403579:	and    eax,0x1c42026
  40357e:	add    BYTE PTR [eax],al
  403580:	sub    BYTE PTR [eax+0x0],ah
  403583:	add    BYTE PTR [esi],al
  403585:	outs   dx,DWORD PTR ds:[esi]
  403586:	mov    BYTE PTR [eax],al
  403588:	add    BYTE PTR [edx],cl
  40358a:	add    BYTE PTR [edx],al
  40358c:	outs   dx,DWORD PTR ds:[esi]
  40358d:	cmp    al,0x0
  40358f:	add    BYTE PTR [esi],al
  403591:	and    eax,0x20051226
  403596:	enter  0x1,0x0
  40359a:	sub    BYTE PTR [eax+0x0],ah
  40359d:	add    BYTE PTR [esi],al
  40359f:	and    ah,cl
  4035a1:	add    DWORD PTR [eax],eax
  4035a3:	add    BYTE PTR [eax],ch
  4035a5:	pusha  
  4035a6:	add    BYTE PTR [eax],al
  4035a8:	push   es
  4035a9:	sub    BYTE PTR [ebp+0x0],dh
  4035ac:	add    BYTE PTR [edx],cl
  4035ae:	add    BYTE PTR [ecx],dl
  4035b0:	add    eax,0x766f
  4035b5:	or     al,BYTE PTR [eax]
  4035b7:	add    ch,BYTE PTR [edi+0x3c]
  4035ba:	add    BYTE PTR [eax],al
  4035bc:	push   es
  4035bd:	and    eax,0x1d02026
  4035c2:	add    BYTE PTR [eax],al
  4035c4:	sub    BYTE PTR [eax+0x0],ah
  4035c7:	add    BYTE PTR [esi],al
  4035c9:	outs   dx,DWORD PTR ds:[esi]
  4035ca:	ja     0x4035cc
  4035cc:	add    BYTE PTR [edx],cl
  4035ce:	add    BYTE PTR [edx],al
  4035d0:	outs   dx,DWORD PTR ds:[esi]
  4035d1:	cmp    al,0x0
  4035d3:	add    BYTE PTR [esi],al
  4035d5:	and    eax,0x22200626
  4035da:	add    eax,DWORD PTR [eax]
  4035dc:	add    BYTE PTR [eax],ch
  4035de:	push   0x25060000
  4035e3:	outs   dx,DWORD PTR es:[esi]
  4035e5:	mov    DWORD PTR [eax],eax
  4035e7:	add    BYTE PTR [edx],cl
  4035e9:	and    eax,0x8a6f26
  4035ee:	add    BYTE PTR [edx],cl
  4035f0:	add    BYTE PTR [edx],al
  4035f2:	outs   dx,DWORD PTR ds:[esi]
  4035f3:	add    BYTE PTR ds:[eax],al
  4035f6:	push   es
  4035f7:	and    eax,0x842826
  4035fc:	add    BYTE PTR [edx],cl
  4035fe:	and    eax,0x856f26
  403603:	add    BYTE PTR [edx],cl
  403605:	add    BYTE PTR [edx],al
  403607:	outs   dx,DWORD PTR ds:[esi]
  403608:	add    BYTE PTR ds:[eax],al
  40360b:	push   es
  40360c:	and    eax,0x1d42026
  403611:	add    BYTE PTR [eax],al
  403613:	sub    BYTE PTR [eax+0x0],ah
  403616:	add    BYTE PTR [esi],al
  403618:	outs   dx,DWORD PTR ds:[esi]
  403619:	xchg   BYTE PTR [eax],al
  40361b:	add    BYTE PTR [edx],cl
  40361d:	add    BYTE PTR [edx],al
  40361f:	outs   dx,DWORD PTR ds:[esi]
  403620:	add    BYTE PTR ds:[eax],al
  403623:	push   es
  403624:	and    eax,0xb62026
  403629:	add    BYTE PTR [eax],al
  40362b:	sub    BYTE PTR [eax+0x0],ch
  40362e:	add    BYTE PTR [esi],al
  403630:	and    eax,0x1d82026
  403635:	add    BYTE PTR [eax],al
  403637:	sub    BYTE PTR [edx+0x0],ah
  40363a:	add    BYTE PTR [esi],al
  40363c:	and    eax,0x1dc2026
  403641:	add    BYTE PTR [eax],al
  403643:	sub    BYTE PTR [eax+0x0],ah
  403646:	add    BYTE PTR [esi],al
  403648:	and    al,ah
  40364a:	add    DWORD PTR [eax],eax
  40364c:	add    BYTE PTR [eax],ch
  40364e:	pusha  
  40364f:	add    BYTE PTR [eax],al
  403651:	push   es
  403652:	and    ah,ah
  403654:	add    DWORD PTR [eax],eax
  403656:	add    BYTE PTR [eax],ch
  403658:	pusha  
  403659:	add    BYTE PTR [eax],al
  40365b:	push   es
  40365c:	jae    0x4036ce
  40365e:	add    BYTE PTR [eax],al
  403660:	or     ch,BYTE PTR [edi+0x71]
  403663:	add    BYTE PTR [eax],al
  403665:	or     al,BYTE PTR [eax]
  403667:	add    ch,BYTE PTR [edi+0x3e]
  40366a:	add    BYTE PTR [eax],al
  40366c:	push   es
  40366d:	adc    al,BYTE PTR [ebx]
  40366f:	and    al,ch
  403671:	add    DWORD PTR [eax],eax
  403673:	add    BYTE PTR [eax],ch
  403675:	pusha  
  403676:	add    BYTE PTR [eax],al
  403678:	push   es
  403679:	and    ah,ch
  40367b:	add    DWORD PTR [eax],eax
  40367d:	add    BYTE PTR [eax],ch
  40367f:	pusha  
  403680:	add    BYTE PTR [eax],al
  403682:	push   es
  403683:	sub    BYTE PTR [edx+0x0],dh
  403686:	add    BYTE PTR [edx],cl
  403688:	add    BYTE PTR [ecx],cl
  40368a:	outs   dx,DWORD PTR ds:[esi]
  40368b:	jae    0x40368d
  40368d:	add    BYTE PTR [edx],cl
  40368f:	add    BYTE PTR [edx],al
  403691:	outs   dx,DWORD PTR ds:[esi]
  403692:	add    BYTE PTR ds:[eax],al
  403695:	push   es
  403696:	and    eax,0x1f02026
  40369b:	add    BYTE PTR [eax],al
  40369d:	sub    BYTE PTR [eax+0x0],ah
  4036a0:	add    BYTE PTR [esi],al
  4036a2:	outs   dx,DWORD PTR ds:[esi]
  4036a3:	xchg   DWORD PTR [eax],eax
  4036a5:	add    BYTE PTR [edx],cl
  4036a7:	add    BYTE PTR [edx],al
  4036a9:	outs   dx,DWORD PTR ds:[esi]
  4036aa:	add    BYTE PTR ds:[eax],al
  4036ad:	push   es
  4036ae:	and    eax,0x33d2026
  4036b3:	add    BYTE PTR [eax],al
  4036b5:	sub    BYTE PTR [eax+0x0],ch
  4036b8:	add    BYTE PTR [esi],al
  4036ba:	and    eax,0x746f26
  4036bf:	add    BYTE PTR [edx],cl
  4036c1:	add    BYTE PTR [edx],al
  4036c3:	outs   dx,DWORD PTR ds:[esi]
  4036c4:	add    BYTE PTR ds:[eax],al
  4036c7:	push   es
  4036c8:	and    eax,0x1f42026
  4036cd:	add    BYTE PTR [eax],al
  4036cf:	sub    BYTE PTR [eax+0x0],ah
  4036d2:	add    BYTE PTR [esi],al
  4036d4:	outs   dx,DWORD PTR ds:[esi]
  4036d5:	mov    BYTE PTR [eax],al
  4036d7:	add    BYTE PTR [edx],cl
  4036d9:	add    BYTE PTR [edx],al
  4036db:	outs   dx,DWORD PTR ds:[esi]
  4036dc:	add    BYTE PTR ds:[eax],al
  4036df:	push   es
  4036e0:	adc    al,BYTE PTR ds:0x1f820
  4036e6:	add    BYTE PTR [eax],ch
  4036e8:	pusha  
  4036e9:	add    BYTE PTR [eax],al
  4036eb:	push   es
  4036ec:	and    ah,bh
  4036ee:	add    DWORD PTR [eax],eax
  4036f0:	add    BYTE PTR [eax],ch
  4036f2:	pusha  
  4036f3:	add    BYTE PTR [eax],al
  4036f5:	push   es
  4036f6:	sub    BYTE PTR [ebp+0x0],dh
  4036f9:	add    BYTE PTR [edx],cl
  4036fb:	add    BYTE PTR [ecx],dl
  4036fd:	add    eax,0x766f
  403702:	or     al,BYTE PTR [eax]
  403704:	add    ch,BYTE PTR [edi+0x3e]
  403707:	add    BYTE PTR [eax],al
  403709:	push   es
  40370a:	and    eax,0x2002026
  40370f:	add    BYTE PTR [eax],al
  403711:	sub    BYTE PTR [eax+0x0],ah
  403714:	add    BYTE PTR [esi],al
  403716:	outs   dx,DWORD PTR ds:[esi]
  403717:	ja     0x403719
  403719:	add    BYTE PTR [edx],cl
  40371b:	add    BYTE PTR [edx],al
  40371d:	outs   dx,DWORD PTR ds:[esi]
  40371e:	add    BYTE PTR ds:[eax],al
  403721:	push   es
  403722:	and    eax,0x4e200626
  403727:	add    eax,DWORD PTR [eax]
  403729:	add    BYTE PTR [eax],ch
  40372b:	push   0x6f060000
  403730:	mov    DWORD PTR [eax],eax
  403732:	add    BYTE PTR [edx],cl
  403734:	outs   dx,DWORD PTR ds:[esi]
  403735:	mov    al,BYTE PTR [eax]
  403737:	add    BYTE PTR [edx],cl
  403739:	add    BYTE PTR [edx],al
  40373b:	outs   dx,DWORD PTR ds:[esi]
  40373c:	inc    eax
  40373d:	add    BYTE PTR [eax],al
  40373f:	push   es
  403740:	sub    BYTE PTR [eax+eax*1+0x26250a00],al
  403747:	outs   dx,DWORD PTR ds:[esi]
  403748:	test   DWORD PTR [eax],eax
  40374a:	add    BYTE PTR [edx],cl
  40374c:	add    BYTE PTR [edx],al
  40374e:	outs   dx,DWORD PTR ds:[esi]
  40374f:	inc    eax
  403750:	add    BYTE PTR [eax],al
  403752:	push   es
  403753:	and    eax,0x2042026
  403758:	add    BYTE PTR [eax],al
  40375a:	sub    BYTE PTR [eax+0x0],ah
  40375d:	add    BYTE PTR [esi],al
  40375f:	outs   dx,DWORD PTR ds:[esi]
  403760:	xchg   BYTE PTR [eax],al
  403762:	add    BYTE PTR [edx],cl
  403764:	add    BYTE PTR [edx],al
  403766:	outs   dx,DWORD PTR ds:[esi]
  403767:	inc    eax
  403768:	add    BYTE PTR [eax],al
  40376a:	push   es
  40376b:	and    BYTE PTR [esi+0x28000000],dh
  403771:	push   0x25060000
  403776:	and    BYTE PTR es:[eax],cl
  403779:	add    al,BYTE PTR [eax]
  40377b:	add    BYTE PTR [eax],ch
  40377d:	bound  eax,QWORD PTR [eax]
  40377f:	add    BYTE PTR [esi],al
  403781:	and    eax,0x20c2026
  403786:	add    BYTE PTR [eax],al
  403788:	sub    BYTE PTR [eax+0x0],ah
  40378b:	add    BYTE PTR [esi],al
  40378d:	and    BYTE PTR [eax],dl
  40378f:	add    al,BYTE PTR [eax]
  403791:	add    BYTE PTR [eax],ch
  403793:	pusha  
  403794:	add    BYTE PTR [eax],al
  403796:	push   es
  403797:	and    BYTE PTR [edx+eax*1],dl
  40379a:	add    BYTE PTR [eax],al
  40379c:	sub    BYTE PTR [eax+0x0],ah
  40379f:	add    BYTE PTR [esi],al
  4037a1:	jae    0x403813
  4037a3:	add    BYTE PTR [eax],al
  4037a5:	or     ch,BYTE PTR [edi+0x71]
  4037a8:	add    BYTE PTR [eax],al
  4037aa:	or     al,BYTE PTR [eax]
  4037ac:	add    ch,BYTE PTR [edi+0x40]
  4037af:	add    BYTE PTR [eax],al
  4037b1:	push   es
  4037b2:	and    eax,0x8d2826
  4037b7:	add    BYTE PTR [edx],cl
  4037b9:	and    eax,0x8c6f26
  4037be:	add    BYTE PTR [edx],cl
  4037c0:	add    BYTE PTR [edx],al
  4037c2:	outs   dx,DWORD PTR ds:[esi]
  4037c3:	inc    eax
  4037c4:	add    BYTE PTR [eax],al
  4037c6:	push   es
  4037c7:	and    eax,0x20031226
  4037cc:	sbb    BYTE PTR [edx],al
  4037ce:	add    BYTE PTR [eax],al
  4037d0:	sub    BYTE PTR [eax+0x0],ah
  4037d3:	add    BYTE PTR [esi],al
  4037d5:	and    BYTE PTR [edx+eax*1],bl
  4037d8:	add    BYTE PTR [eax],al
  4037da:	sub    BYTE PTR [eax+0x0],ah
  4037dd:	add    BYTE PTR [esi],al
  4037df:	sub    BYTE PTR [edx+0x0],dh
  4037e2:	add    BYTE PTR [edx],cl
  4037e4:	add    BYTE PTR [ecx],cl
  4037e6:	outs   dx,DWORD PTR ds:[esi]
  4037e7:	jae    0x4037e9
  4037e9:	add    BYTE PTR [edx],cl
  4037eb:	add    BYTE PTR [edx],al
  4037ed:	outs   dx,DWORD PTR ds:[esi]
  4037ee:	inc    eax
  4037ef:	add    BYTE PTR [eax],al
  4037f1:	push   es
  4037f2:	and    eax,0x2202026
  4037f7:	add    BYTE PTR [eax],al
  4037f9:	sub    BYTE PTR [eax+0x0],ah
  4037fc:	add    BYTE PTR [esi],al
  4037fe:	outs   dx,DWORD PTR ds:[esi]
  4037ff:	xchg   DWORD PTR [eax],eax
  403801:	add    BYTE PTR [edx],cl
  403803:	add    BYTE PTR [edx],al
  403805:	outs   dx,DWORD PTR ds:[esi]
  403806:	inc    eax
  403807:	add    BYTE PTR [eax],al
  403809:	push   es
  40380a:	and    BYTE PTR [ecx+0x3],ch
  40380d:	add    BYTE PTR [eax],al
  40380f:	sub    BYTE PTR [eax+0x0],ch
  403812:	add    BYTE PTR [esi],al
  403814:	and    eax,0x746f26
  403819:	add    BYTE PTR [edx],cl
  40381b:	add    BYTE PTR [edx],al
  40381d:	outs   dx,DWORD PTR ds:[esi]
  40381e:	inc    eax
  40381f:	add    BYTE PTR [eax],al
  403821:	push   es
  403822:	and    eax,0x2242026
  403827:	add    BYTE PTR [eax],al
  403829:	sub    BYTE PTR [eax+0x0],ah
  40382c:	add    BYTE PTR [esi],al
  40382e:	outs   dx,DWORD PTR ds:[esi]
  40382f:	mov    BYTE PTR [eax],al
  403831:	add    BYTE PTR [edx],cl
  403833:	add    BYTE PTR [edx],al
  403835:	outs   dx,DWORD PTR ds:[esi]
  403836:	inc    eax
  403837:	add    BYTE PTR [eax],al
  403839:	push   es
  40383a:	and    eax,0x20051226
  40383f:	sub    BYTE PTR [edx],al
  403841:	add    BYTE PTR [eax],al
  403843:	sub    BYTE PTR [eax+0x0],ah
  403846:	add    BYTE PTR [esi],al
  403848:	and    BYTE PTR [edx+eax*1],ch
  40384b:	add    BYTE PTR [eax],al
  40384d:	sub    BYTE PTR [eax+0x0],ah
  403850:	add    BYTE PTR [esi],al
  403852:	sub    BYTE PTR [ebp+0x0],dh
  403855:	add    BYTE PTR [edx],cl
  403857:	add    BYTE PTR [ecx],dl
  403859:	add    eax,0x766f
  40385e:	or     al,BYTE PTR [eax]
  403860:	add    ch,BYTE PTR [edi+0x40]
  403863:	add    BYTE PTR [eax],al
  403865:	push   es
  403866:	and    eax,0x2302026
  40386b:	add    BYTE PTR [eax],al
  40386d:	sub    BYTE PTR [eax+0x0],ah
  403870:	add    BYTE PTR [esi],al
  403872:	outs   dx,DWORD PTR ds:[esi]
  403873:	ja     0x403875
  403875:	add    BYTE PTR [edx],cl
  403877:	add    BYTE PTR [edx],al
  403879:	outs   dx,DWORD PTR ds:[esi]
  40387a:	inc    eax
  40387b:	add    BYTE PTR [eax],al
  40387d:	push   es
  40387e:	and    eax,0x37a2026
  403883:	add    BYTE PTR [eax],al
  403885:	sub    BYTE PTR [eax+0x0],ch
  403888:	add    BYTE PTR [esi],al
  40388a:	and    eax,0x8a6f26
  40388f:	add    BYTE PTR [edx],cl
  403891:	add    BYTE PTR [edx],al
  403893:	outs   dx,DWORD PTR ds:[esi]
  403894:	inc    edx
  403895:	add    BYTE PTR [eax],al
  403897:	push   es
  403898:	and    eax,0x842826
  40389d:	add    BYTE PTR [edx],cl
  40389f:	and    eax,0x856f26
  4038a4:	add    BYTE PTR [edx],cl
  4038a6:	add    BYTE PTR [edx],al
  4038a8:	outs   dx,DWORD PTR ds:[esi]
  4038a9:	inc    edx
  4038aa:	add    BYTE PTR [eax],al
  4038ac:	push   es
  4038ad:	and    eax,0x2342026
  4038b2:	add    BYTE PTR [eax],al
  4038b4:	sub    BYTE PTR [eax+0x0],ah
  4038b7:	add    BYTE PTR [esi],al
  4038b9:	outs   dx,DWORD PTR ds:[esi]
  4038ba:	xchg   BYTE PTR [eax],al
  4038bc:	add    BYTE PTR [edx],cl
  4038be:	add    BYTE PTR [edx],al
  4038c0:	outs   dx,DWORD PTR ds:[esi]
  4038c1:	inc    edx
  4038c2:	add    BYTE PTR [eax],al
  4038c4:	push   es
  4038c5:	and    BYTE PTR [esi+0x28000000],dh
  4038cb:	push   0x25060000
  4038d0:	and    BYTE PTR es:[eax],bh
  4038d3:	add    al,BYTE PTR [eax]
  4038d5:	add    BYTE PTR [eax],ch
  4038d7:	bound  eax,QWORD PTR [eax]
  4038d9:	add    BYTE PTR [esi],al
  4038db:	and    BYTE PTR [edx+eax*1],bh
  4038de:	add    BYTE PTR [eax],al
  4038e0:	sub    BYTE PTR [eax+0x0],ah
  4038e3:	add    BYTE PTR [esi],al
  4038e5:	and    BYTE PTR [eax+0x2],al
  4038e8:	add    BYTE PTR [eax],al
  4038ea:	sub    BYTE PTR [eax+0x0],ah
  4038ed:	add    BYTE PTR [esi],al
  4038ef:	and    BYTE PTR [edx+eax*1+0x0],al
  4038f3:	add    BYTE PTR [eax],ch
  4038f5:	pusha  
  4038f6:	add    BYTE PTR [eax],al
  4038f8:	push   es
  4038f9:	jae    0x40396b
  4038fb:	add    BYTE PTR [eax],al
  4038fd:	or     ch,BYTE PTR [edi+0x71]
  403900:	add    BYTE PTR [eax],al
  403902:	or     al,BYTE PTR [eax]
  403904:	add    ch,BYTE PTR [edi+0x42]
  403907:	add    BYTE PTR [eax],al
  403909:	push   es
  40390a:	and    eax,0x8e2826
  40390f:	add    BYTE PTR [edx],cl
  403911:	outs   dx,DWORD PTR ds:[esi]
  403912:	mov    WORD PTR [eax],es
  403914:	add    BYTE PTR [edx],cl
  403916:	add    BYTE PTR [edx],al
  403918:	outs   dx,DWORD PTR ds:[esi]
  403919:	inc    edx
  40391a:	add    BYTE PTR [eax],al
  40391c:	push   es
  40391d:	and    eax,0x20031226
  403922:	dec    eax
  403923:	add    al,BYTE PTR [eax]
  403925:	add    BYTE PTR [eax],ch
  403927:	pusha  
  403928:	add    BYTE PTR [eax],al
  40392a:	push   es
  40392b:	and    BYTE PTR [edx+eax*1+0x0],cl
  40392f:	add    BYTE PTR [eax],ch
  403931:	pusha  
  403932:	add    BYTE PTR [eax],al
  403934:	push   es
  403935:	sub    BYTE PTR [edx+0x0],dh
  403938:	add    BYTE PTR [edx],cl
  40393a:	add    BYTE PTR [ecx],cl
  40393c:	outs   dx,DWORD PTR ds:[esi]
  40393d:	jae    0x40393f
  40393f:	add    BYTE PTR [edx],cl
  403941:	add    BYTE PTR [edx],al
  403943:	outs   dx,DWORD PTR ds:[esi]
  403944:	inc    edx
  403945:	add    BYTE PTR [eax],al
  403947:	push   es
  403948:	and    eax,0x2502026
  40394d:	add    BYTE PTR [eax],al
  40394f:	sub    BYTE PTR [eax+0x0],ah
  403952:	add    BYTE PTR [esi],al
  403954:	outs   dx,DWORD PTR ds:[esi]
  403955:	xchg   DWORD PTR [eax],eax
  403957:	add    BYTE PTR [edx],cl
  403959:	add    BYTE PTR [edx],al
  40395b:	outs   dx,DWORD PTR ds:[esi]
  40395c:	inc    edx
  40395d:	add    BYTE PTR [eax],al
  40395f:	push   es
  403960:	and    eax,0x3c52026
  403965:	add    BYTE PTR [eax],al
  403967:	sub    BYTE PTR [eax+0x0],ch
  40396a:	add    BYTE PTR [esi],al
  40396c:	and    eax,0x746f26
  403971:	add    BYTE PTR [edx],cl
  403973:	add    BYTE PTR [edx],al
  403975:	outs   dx,DWORD PTR ds:[esi]
  403976:	inc    edx
  403977:	add    BYTE PTR [eax],al
  403979:	push   es
  40397a:	and    eax,0x2542026
  40397f:	add    BYTE PTR [eax],al
  403981:	sub    BYTE PTR [eax+0x0],ah
  403984:	add    BYTE PTR [esi],al
  403986:	outs   dx,DWORD PTR ds:[esi]
  403987:	mov    BYTE PTR [eax],al
  403989:	add    BYTE PTR [edx],cl
  40398b:	add    BYTE PTR [edx],al
  40398d:	outs   dx,DWORD PTR ds:[esi]
  40398e:	inc    edx
  40398f:	add    BYTE PTR [eax],al
  403991:	push   es
  403992:	and    eax,0x20051226
  403997:	pop    eax
  403998:	add    al,BYTE PTR [eax]
  40399a:	add    BYTE PTR [eax],ch
  40399c:	pusha  
  40399d:	add    BYTE PTR [eax],al
  40399f:	push   es
  4039a0:	and    BYTE PTR [edx+eax*1+0x0],bl
  4039a4:	add    BYTE PTR [eax],ch
  4039a6:	pusha  
  4039a7:	add    BYTE PTR [eax],al
  4039a9:	push   es
  4039aa:	sub    BYTE PTR [ebp+0x0],dh
  4039ad:	add    BYTE PTR [edx],cl
  4039af:	add    BYTE PTR [ecx],dl
  4039b1:	add    eax,0x766f
  4039b6:	or     al,BYTE PTR [eax]
  4039b8:	add    ch,BYTE PTR [edi+0x42]
  4039bb:	add    BYTE PTR [eax],al
  4039bd:	push   es
  4039be:	and    eax,0x2602026
  4039c3:	add    BYTE PTR [eax],al
  4039c5:	sub    BYTE PTR [eax+0x0],ah
  4039c8:	add    BYTE PTR [esi],al
  4039ca:	outs   dx,DWORD PTR ds:[esi]
  4039cb:	ja     0x4039cd
  4039cd:	add    BYTE PTR [edx],cl
  4039cf:	add    BYTE PTR [edx],al
  4039d1:	outs   dx,DWORD PTR ds:[esi]
  4039d2:	inc    edx
  4039d3:	add    BYTE PTR [eax],al
  4039d5:	push   es
  4039d6:	and    eax,0x3d62026
  4039db:	add    BYTE PTR [eax],al
  4039dd:	sub    BYTE PTR [eax+0x0],ch
  4039e0:	add    BYTE PTR [esi],al
  4039e2:	outs   dx,DWORD PTR ds:[esi]
  4039e3:	mov    al,BYTE PTR [eax]
  4039e5:	add    BYTE PTR [edx],cl
  4039e7:	add    BYTE PTR [edx],al
  4039e9:	adc    al,BYTE PTR [edi]
  4039eb:	and    BYTE PTR [edx+eax*1+0x0],ah
  4039ef:	add    BYTE PTR [eax],ch
  4039f1:	bound  eax,QWORD PTR [eax]
  4039f3:	add    BYTE PTR [esi],al
  4039f5:	and    eax,0x2682026
  4039fa:	add    BYTE PTR [eax],al
  4039fc:	sub    BYTE PTR [edx+0x0],ah
  4039ff:	add    BYTE PTR [esi],al
  403a01:	sub    BYTE PTR [edi+0xa0000],cl
  403a07:	adc    DWORD PTR [edi],eax
  403a09:	outs   dx,DWORD PTR ds:[esi]
  403a0a:	nop
  403a0b:	add    BYTE PTR [eax],al
  403a0d:	or     al,BYTE PTR [eax]
  403a0f:	add    ah,BYTE PTR [eax]
  403a11:	ins    BYTE PTR es:[edi],dx
  403a12:	add    al,BYTE PTR [eax]
  403a14:	add    BYTE PTR [eax],ch
  403a16:	pusha  
  403a17:	add    BYTE PTR [eax],al
  403a19:	push   es
  403a1a:	outs   dx,DWORD PTR ds:[esi]
  403a1b:	xchg   ecx,eax
  403a1c:	add    BYTE PTR [eax],al
  403a1e:	or     al,BYTE PTR [eax]
  403a20:	add    ah,BYTE PTR [eax]
  403a22:	jo     0x403a26
  403a24:	add    BYTE PTR [eax],al
  403a26:	sub    BYTE PTR [eax+0x0],ah
  403a29:	add    BYTE PTR [esi],al
  403a2b:	outs   dx,DWORD PTR ds:[esi]
  403a2c:	xchg   edx,eax
  403a2d:	add    BYTE PTR [eax],al
  403a2f:	or     al,BYTE PTR [eax]
  403a31:	add    ch,BYTE PTR [eax]
  403a33:	test   BYTE PTR [eax],al
  403a35:	add    BYTE PTR [edx],cl
  403a37:	and    eax,0x936f26
  403a3c:	add    BYTE PTR [edx],cl
  403a3e:	add    BYTE PTR [edx],al
  403a40:	adc    al,BYTE PTR ds:0x27420
  403a46:	add    BYTE PTR [eax],ch
  403a48:	pusha  
  403a49:	add    BYTE PTR [eax],al
  403a4b:	push   es
  403a4c:	and    BYTE PTR [eax+0x2],bh
  403a4f:	add    BYTE PTR [eax],al
  403a51:	sub    BYTE PTR [eax+0x0],ah
  403a54:	add    BYTE PTR [esi],al
  403a56:	sub    BYTE PTR [ebp+0x0],dh
  403a59:	add    BYTE PTR [edx],cl
  403a5b:	add    BYTE PTR [ecx],dl
  403a5d:	add    eax,0x946f
  403a62:	or     al,BYTE PTR [eax]
  403a64:	add    ch,BYTE PTR [edi-0x6b]
  403a67:	add    BYTE PTR [eax],al
  403a69:	or     ah,BYTE PTR ds:0x426f0226
  403a6f:	add    BYTE PTR [eax],al
  403a71:	push   es
  403a72:	outs   dx,DWORD PTR ds:[esi]
  403a73:	xchg   esi,eax
  403a74:	add    BYTE PTR [eax],al
  403a76:	or     al,BYTE PTR [eax]
  403a78:	add    ch,BYTE PTR [edi-0x6b]
  403a7b:	add    BYTE PTR [eax],al
  403a7d:	or     ah,BYTE PTR ds:0x386f0226
  403a83:	add    BYTE PTR [eax],al
  403a85:	push   es
  403a86:	and    eax,0x966f26
  403a8b:	add    BYTE PTR [edx],cl
  403a8d:	add    BYTE PTR [edx],al
  403a8f:	outs   dx,DWORD PTR ds:[esi]
  403a90:	xchg   ebp,eax
  403a91:	add    BYTE PTR [eax],al
  403a93:	or     ah,BYTE PTR ds:0x366f0226
  403a99:	add    BYTE PTR [eax],al
  403a9b:	push   es
  403a9c:	and    eax,0x966f26
  403aa1:	add    BYTE PTR [edx],cl
  403aa3:	add    BYTE PTR [edx],al
  403aa5:	outs   dx,DWORD PTR ds:[esi]
  403aa6:	xchg   ebp,eax
  403aa7:	add    BYTE PTR [eax],al
  403aa9:	or     ah,BYTE PTR ds:0x346f0226
  403aaf:	add    BYTE PTR [eax],al
  403ab1:	push   es
  403ab2:	and    eax,0x966f26
  403ab7:	add    BYTE PTR [edx],cl
  403ab9:	add    BYTE PTR [edx],al
  403abb:	outs   dx,DWORD PTR ds:[esi]
  403abc:	xchg   ebp,eax
  403abd:	add    BYTE PTR [eax],al
  403abf:	or     ah,BYTE PTR ds:0x326f0226
  403ac5:	add    BYTE PTR [eax],al
  403ac7:	push   es
  403ac8:	outs   dx,DWORD PTR ds:[esi]
  403ac9:	xchg   esi,eax
  403aca:	add    BYTE PTR [eax],al
  403acc:	or     al,BYTE PTR [eax]
  403ace:	add    ch,BYTE PTR [edi-0x6b]
  403ad1:	add    BYTE PTR [eax],al
  403ad3:	or     ah,BYTE PTR ds:0x306f0226
  403ad9:	add    BYTE PTR [eax],al
  403adb:	push   es
  403adc:	and    eax,0x966f26
  403ae1:	add    BYTE PTR [edx],cl
  403ae3:	add    BYTE PTR [edx],al
  403ae5:	outs   dx,DWORD PTR ds:[esi]
  403ae6:	xchg   ebp,eax
  403ae7:	add    BYTE PTR [eax],al
  403ae9:	or     ah,BYTE PTR ds:0x2e6f0226
  403aef:	add    BYTE PTR [eax],al
  403af1:	push   es
  403af2:	outs   dx,DWORD PTR ds:[esi]
  403af3:	xchg   esi,eax
  403af4:	add    BYTE PTR [eax],al
  403af6:	or     al,BYTE PTR [eax]
  403af8:	add    ch,BYTE PTR [edi-0x6b]
  403afb:	add    BYTE PTR [eax],al
  403afd:	or     ah,BYTE PTR ds:0x2c6f0226
  403b03:	add    BYTE PTR [eax],al
  403b05:	push   es
  403b06:	and    eax,0x966f26
  403b0b:	add    BYTE PTR [edx],cl
  403b0d:	add    BYTE PTR [edx],al
  403b0f:	outs   dx,DWORD PTR ds:[esi]
  403b10:	xchg   ebp,eax
  403b11:	add    BYTE PTR [eax],al
  403b13:	or     al,BYTE PTR [edx]
  403b15:	outs   dx,DWORD PTR ds:[esi]
  403b16:	cmp    al,0x0
  403b18:	add    BYTE PTR [esi],al
  403b1a:	outs   dx,DWORD PTR ds:[esi]
  403b1b:	xchg   esi,eax
  403b1c:	add    BYTE PTR [eax],al
  403b1e:	or     al,BYTE PTR [eax]
  403b20:	add    ch,BYTE PTR [edi-0x6b]
  403b23:	add    BYTE PTR [eax],al
  403b25:	or     al,BYTE PTR [edx]
  403b27:	outs   dx,DWORD PTR ds:[esi]
  403b28:	cmp    al,BYTE PTR [eax]
  403b2a:	add    BYTE PTR [esi],al
  403b2c:	and    eax,0x966f26
  403b31:	add    BYTE PTR [edx],cl
  403b33:	add    BYTE PTR [edx],al
  403b35:	outs   dx,DWORD PTR ds:[esi]
  403b36:	xchg   ebp,eax
  403b37:	add    BYTE PTR [eax],al
  403b39:	or     ah,BYTE PTR ds:0x3e6f0226
  403b3f:	add    BYTE PTR [eax],al
  403b41:	push   es
  403b42:	outs   dx,DWORD PTR ds:[esi]
  403b43:	xchg   esi,eax
  403b44:	add    BYTE PTR [eax],al
  403b46:	or     al,BYTE PTR [eax]
  403b48:	add    ch,BYTE PTR [edi-0x6b]
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	or     ah,BYTE PTR ds:0x406f0226
  403b53:	add    BYTE PTR [eax],al
  403b55:	push   es
  403b56:	and    eax,0x966f26
  403b5b:	add    BYTE PTR [edx],cl
  403b5d:	add    BYTE PTR [edx],al
  403b5f:	push   es
  403b60:	and    dh,dl
  403b62:	add    al,0x0
  403b64:	add    BYTE PTR [eax],ch
  403b66:	push   0x25060000
  403b6b:	outs   dx,DWORD PTR es:[esi]
  403b6d:	jnp    0x403b6f
  403b6f:	add    BYTE PTR [edx],cl
  403b71:	and    eax,0x407426
  403b76:	add    BYTE PTR [ecx],al
  403b78:	outs   dx,DWORD PTR ds:[esi]
  403b79:	xchg   edi,eax
  403b7a:	add    BYTE PTR [eax],al
  403b7c:	or     al,BYTE PTR [eax]
  403b7e:	add    ah,BYTE PTR [eax]
  403b80:	jmp    0x403b86
  403b82:	add    BYTE PTR [eax],al
  403b84:	sub    BYTE PTR [eax+0x0],ch
  403b87:	add    BYTE PTR [esi],al
  403b89:	and    eax,0x746f26
  403b8e:	add    BYTE PTR [edx],cl
  403b90:	add    BYTE PTR [edx],al
  403b92:	and    dh,dh
  403b94:	add    al,0x0
  403b96:	add    BYTE PTR [eax],ch
  403b98:	push   0x25060000
  403b9d:	outs   dx,DWORD PTR es:[esi]
  403b9f:	cwde   
  403ba0:	add    BYTE PTR [eax],al
  403ba2:	or     al,BYTE PTR [eax]
  403ba4:	add    ch,BYTE PTR [edi+0x30]
  403ba7:	add    BYTE PTR [eax],al
  403ba9:	push   es
  403baa:	outs   dx,DWORD PTR ds:[esi]
  403bab:	cdq    
  403bac:	add    BYTE PTR [eax],al
  403bae:	or     al,BYTE PTR [eax]
  403bb0:	add    ch,BYTE PTR [edi+0x38]
  403bb3:	add    BYTE PTR [eax],al
  403bb5:	push   es
  403bb6:	and    eax,0x996f26
  403bbb:	add    BYTE PTR [edx],cl
  403bbd:	add    BYTE PTR [edx],al
  403bbf:	and    BYTE PTR [edx+eax*1+0x0],bh
  403bc3:	add    BYTE PTR [eax],ch
  403bc5:	pusha  
  403bc6:	add    BYTE PTR [eax],al
  403bc8:	push   es
  403bc9:	outs   dx,DWORD PTR ds:[esi]
  403bca:	call   0x6f02:0xa0000
  403bd1:	fwait
  403bd2:	add    BYTE PTR [eax],al
  403bd4:	or     al,BYTE PTR [eax]
  403bd6:	add    BYTE PTR [edx],ch
  403bd8:	adc    esi,DWORD PTR [eax]
  403bda:	add    al,BYTE PTR [eax]
  403bdc:	or     eax,DWORD PTR [eax]
  403bde:	add    BYTE PTR [eax],al
  403be0:	adc    eax,0x2110000
  403be5:	jnp    0x403bf4
  403be7:	add    BYTE PTR [eax],al
  403be9:	add    al,0xa
  403beb:	sub    eax,DWORD PTR [eax]
  403bed:	push   es
  403bee:	sub    al,BYTE PTR [eax]
  403bf0:	adc    esi,DWORD PTR [eax]
  403bf2:	add    eax,DWORD PTR [eax]
  403bf4:	add    BYTE PTR [eax],0x0
  403bf7:	add    BYTE PTR [esi],dl
  403bf9:	add    BYTE PTR [eax],al
  403bfb:	adc    DWORD PTR [edx],eax
  403bfd:	and    eax,0x5107fe
  403c02:	add    BYTE PTR [esi],al
  403c04:	jae    0x403c69
  403c06:	add    BYTE PTR [eax],al
  403c08:	or     cl,BYTE PTR [edx]
  403c0a:	add    bh,BYTE PTR [ebx+0xd]
  403c0d:	add    BYTE PTR [eax],al
  403c0f:	add    al,0x14
  403c11:	inc    BYTE PTR [ecx]
  403c13:	and    BYTE PTR [eax+0x28000002],al
  403c19:	pusha  
  403c1a:	add    BYTE PTR [eax],al
  403c1c:	push   es
  403c1d:	inc    BYTE PTR [ecx]
  403c1f:	or     eax,DWORD PTR [edi]
  403c21:	sub    al,0x20
  403c23:	pop    ss
  403c24:	inc    ebp
  403c25:	add    DWORD PTR [eax],eax
  403c27:	add    BYTE PTR [eax],al
  403c29:	idiv   bh
  403c2b:	(bad)  
  403c2c:	call   DWORD PTR [edi]
  403c2e:	sub    eax,0x2dd006
  403c33:	add    BYTE PTR [esi],al
  403c35:	add    bh,BYTE PTR es:[ebx+0xd]
  403c39:	add    BYTE PTR [eax],al
  403c3b:	add    al,0x6
  403c3d:	outs   dx,DWORD PTR ds:[esi]
  403c3e:	pushf  
  403c3f:	add    BYTE PTR [eax],al
  403c41:	or     al,BYTE PTR [eax]
  403c43:	add    BYTE PTR [edx],al
  403c45:	add    edi,DWORD PTR [ebp+0xd]
  403c48:	add    BYTE PTR [eax],al
  403c4a:	add    al,0x2
  403c4c:	jnp    0x403c5b
  403c4e:	add    BYTE PTR [eax],al
  403c50:	add    al,0x14
  403c52:	inc    BYTE PTR [ecx]
  403c54:	and    BYTE PTR [edx+eax*1+0x60280000],al
  403c5b:	add    BYTE PTR [eax],al
  403c5d:	push   es
  403c5e:	inc    BYTE PTR [ecx]
  403c60:	or     eax,DWORD PTR [edi]
  403c62:	sub    al,0x17
  403c64:	sbb    DWORD PTR [ebp+0x1],eax
  403c67:	add    BYTE PTR [eax],al
  403c69:	add    dh,dh
  403c6b:	(bad)  
  403c6c:	(bad)  
  403c6d:	inc    DWORD PTR [edx]
  403c6f:	jnp    0x403c7e
  403c71:	add    BYTE PTR [eax],al
  403c73:	add    al,0x6
  403c75:	outs   dx,DWORD PTR ds:[esi]
  403c76:	popf   
  403c77:	add    BYTE PTR [eax],al
  403c79:	or     al,BYTE PTR [eax]
  403c7b:	add    BYTE PTR [eax],al
  403c7d:	sub    al,BYTE PTR [eax]
  403c7f:	add    BYTE PTR [ebx],dl
  403c81:	xor    BYTE PTR [edx],al
  403c83:	add    BYTE PTR [ebx],cl
  403c85:	add    BYTE PTR [eax],al
  403c87:	add    BYTE PTR ds:0x2110000,dl
  403c8d:	jnp    0x403c9d
  403c8f:	add    BYTE PTR [eax],al
  403c91:	add    al,0xa
  403c93:	sub    eax,DWORD PTR [eax]
  403c95:	push   es
  403c96:	sub    al,BYTE PTR [eax]
  403c98:	adc    esi,DWORD PTR [eax]
  403c9a:	add    eax,DWORD PTR [eax]
  403c9c:	add    BYTE PTR [eax],0x0
  403c9f:	add    BYTE PTR [esi],dl
  403ca1:	add    BYTE PTR [eax],al
  403ca3:	adc    DWORD PTR [edx],eax
  403ca5:	and    eax,0x5207fe
  403caa:	add    BYTE PTR [esi],al
  403cac:	jae    0x403d11
  403cae:	add    BYTE PTR [eax],al
  403cb0:	or     cl,BYTE PTR [edx]
  403cb2:	add    bh,BYTE PTR [ebx+0xe]
  403cb5:	add    BYTE PTR [eax],al
  403cb7:	add    al,0x14
  403cb9:	inc    BYTE PTR [ecx]
  403cbb:	and    BYTE PTR [eax+0x28000002],cl
  403cc1:	pusha  
  403cc2:	add    BYTE PTR [eax],al
  403cc4:	push   es
  403cc5:	inc    BYTE PTR [ecx]
  403cc7:	or     eax,DWORD PTR [edi]
  403cc9:	sub    al,0x20
  403ccb:	sbb    BYTE PTR [ebp+0x1],al
  403cce:	add    BYTE PTR [eax],al
  403cd0:	add    dh,dh
  403cd2:	(bad)  
  403cd3:	(bad)  
  403cd4:	call   DWORD PTR [edi]
  403cd6:	sub    eax,0x2fd006
  403cdb:	add    BYTE PTR [esi],al
  403cdd:	add    bh,BYTE PTR es:[ebx+0xe]
  403ce1:	add    BYTE PTR [eax],al
  403ce3:	add    al,0x6
  403ce5:	outs   dx,DWORD PTR ds:[esi]
  403ce6:	pushf  
  403ce7:	add    BYTE PTR [eax],al
  403ce9:	or     al,BYTE PTR [eax]
  403ceb:	add    BYTE PTR [edx],al
  403ced:	add    edi,DWORD PTR [ebp+0xe]
  403cf0:	add    BYTE PTR [eax],al
  403cf2:	add    al,0x2
  403cf4:	jnp    0x403d04
  403cf6:	add    BYTE PTR [eax],al
  403cf8:	add    al,0x14
  403cfa:	inc    BYTE PTR [ecx]
  403cfc:	and    BYTE PTR [edx+eax*1+0x60280000],cl
  403d03:	add    BYTE PTR [eax],al
  403d05:	push   es
  403d06:	inc    BYTE PTR [ecx]
  403d08:	or     eax,DWORD PTR [edi]
  403d0a:	sub    al,0x17
  403d0c:	sbb    DWORD PTR [ebp+0x1],eax
  403d0f:	add    BYTE PTR [eax],al
  403d11:	add    dh,dh
  403d13:	(bad)  
  403d14:	(bad)  
  403d15:	inc    DWORD PTR [edx]
  403d17:	jnp    0x403d27
  403d19:	add    BYTE PTR [eax],al
  403d1b:	add    al,0x6
  403d1d:	outs   dx,DWORD PTR ds:[esi]
  403d1e:	popf   
  403d1f:	add    BYTE PTR [eax],al
  403d21:	or     al,BYTE PTR [eax]
  403d23:	add    BYTE PTR [eax],al
  403d25:	sub    al,BYTE PTR [eax]
  403d27:	add    BYTE PTR [ebx],dl
  403d29:	xor    BYTE PTR [edx],al
  403d2b:	add    BYTE PTR [ebx],cl
  403d2d:	add    BYTE PTR [eax],al
  403d2f:	add    BYTE PTR [edi],dl
  403d31:	add    BYTE PTR [eax],al
  403d33:	adc    DWORD PTR [edx],eax
  403d35:	jnp    0x403d46
  403d37:	add    BYTE PTR [eax],al
  403d39:	add    al,0xa
  403d3b:	sub    eax,DWORD PTR [eax]
  403d3d:	push   es
  403d3e:	sub    al,BYTE PTR [eax]
  403d40:	add    esi,DWORD PTR [eax]
  403d42:	or     DWORD PTR [eax],eax
  403d44:	or     DWORD PTR [eax],eax
  403d46:	add    BYTE PTR [eax],al
  403d48:	add    BYTE PTR [eax],al
  403d4a:	add    BYTE PTR [eax],al
  403d4c:	add    al,BYTE PTR [ebx]
  403d4e:	jge    0x403d5f
  403d50:	add    BYTE PTR [eax],al
  403d52:	add    al,0x0
  403d54:	sub    al,BYTE PTR [eax]
  403d56:	add    BYTE PTR [eax],al
  403d58:	adc    esi,DWORD PTR [eax]
  403d5a:	add    al,BYTE PTR [eax]
  403d5c:	or     eax,DWORD PTR [eax]
  403d5e:	add    BYTE PTR [eax],al
  403d60:	sbb    BYTE PTR [eax],al
  403d62:	add    BYTE PTR [ecx],dl
  403d64:	add    bh,BYTE PTR [ebx+0x10]
  403d67:	add    BYTE PTR [eax],al
  403d69:	add    al,0xa
  403d6b:	sub    eax,DWORD PTR [eax]
  403d6d:	push   es
  403d6e:	sub    al,BYTE PTR [eax]
  403d70:	add    esi,DWORD PTR [eax]
  403d72:	or     DWORD PTR [eax],eax
  403d74:	or     DWORD PTR [eax],eax
  403d76:	add    BYTE PTR [eax],al
  403d78:	add    BYTE PTR [eax],al
  403d7a:	add    BYTE PTR [eax],al
  403d7c:	add    al,BYTE PTR [ebx]
  403d7e:	jge    0x403d90
  403d80:	add    BYTE PTR [eax],al
  403d82:	add    al,0x0
  403d84:	sub    al,BYTE PTR [eax]
  403d86:	add    BYTE PTR [eax],al
  403d88:	adc    esi,DWORD PTR [eax]
  403d8a:	add    al,BYTE PTR [eax]
  403d8c:	or     eax,DWORD PTR [eax]
  403d8e:	add    BYTE PTR [eax],al
  403d90:	sbb    DWORD PTR [eax],eax
  403d92:	add    BYTE PTR [ecx],dl
  403d94:	add    bh,BYTE PTR [ebx+0x11]
  403d97:	add    BYTE PTR [eax],al
  403d99:	add    al,0xa
  403d9b:	sub    eax,DWORD PTR [eax]
  403d9d:	push   es
  403d9e:	sub    al,BYTE PTR [eax]
  403da0:	add    esi,DWORD PTR [eax]
  403da2:	or     DWORD PTR [eax],eax
  403da4:	or     DWORD PTR [eax],eax
  403da6:	add    BYTE PTR [eax],al
  403da8:	add    BYTE PTR [eax],al
  403daa:	add    BYTE PTR [eax],al
  403dac:	add    al,BYTE PTR [ebx]
  403dae:	jge    0x403dc1
  403db0:	add    BYTE PTR [eax],al
  403db2:	add    al,0x0
  403db4:	sub    al,BYTE PTR [eax]
  403db6:	add    BYTE PTR [eax],al
  403db8:	adc    esi,DWORD PTR [eax]
  403dba:	add    al,BYTE PTR [eax]
  403dbc:	or     eax,DWORD PTR [eax]
  403dbe:	add    BYTE PTR [eax],al
  403dc0:	sbb    BYTE PTR [eax],al
  403dc2:	add    BYTE PTR [ecx],dl
  403dc4:	add    bh,BYTE PTR [ebx+0x12]
  403dc7:	add    BYTE PTR [eax],al
  403dc9:	add    al,0xa
  403dcb:	sub    eax,DWORD PTR [eax]
  403dcd:	push   es
  403dce:	sub    al,BYTE PTR [eax]
  403dd0:	add    esi,DWORD PTR [eax]
  403dd2:	or     DWORD PTR [eax],eax
  403dd4:	or     DWORD PTR [eax],eax
  403dd6:	add    BYTE PTR [eax],al
  403dd8:	add    BYTE PTR [eax],al
  403dda:	add    BYTE PTR [eax],al
  403ddc:	add    al,BYTE PTR [ebx]
  403dde:	jge    0x403df2
  403de0:	add    BYTE PTR [eax],al
  403de2:	add    al,0x0
  403de4:	sub    al,BYTE PTR [eax]
  403de6:	add    BYTE PTR [eax],al
  403de8:	adc    esi,DWORD PTR [eax]
  403dea:	add    al,BYTE PTR [eax]
  403dec:	or     eax,DWORD PTR [eax]
  403dee:	add    BYTE PTR [eax],al
  403df0:	pop    ss
  403df1:	add    BYTE PTR [eax],al
  403df3:	adc    DWORD PTR [edx],eax
  403df5:	jnp    0x403e0a
  403df7:	add    BYTE PTR [eax],al
  403df9:	add    al,0xa
  403dfb:	sub    eax,DWORD PTR [eax]
  403dfd:	push   es
  403dfe:	sub    al,BYTE PTR [eax]
  403e00:	add    esi,DWORD PTR [eax]
  403e02:	or     DWORD PTR [eax],eax
  403e04:	or     DWORD PTR [eax],eax
  403e06:	add    BYTE PTR [eax],al
  403e08:	add    BYTE PTR [eax],al
  403e0a:	add    BYTE PTR [eax],al
  403e0c:	add    al,BYTE PTR [ebx]
  403e0e:	jge    0x403e23
  403e10:	add    BYTE PTR [eax],al
  403e12:	add    al,0x0
  403e14:	sub    al,BYTE PTR [eax]
  403e16:	add    BYTE PTR [eax],al
  403e18:	adc    esi,DWORD PTR [eax]
  403e1a:	add    al,BYTE PTR [eax]
  403e1c:	or     eax,DWORD PTR [eax]
  403e1e:	add    BYTE PTR [eax],al
  403e20:	sbb    BYTE PTR [eax],al
  403e22:	add    BYTE PTR [ecx],dl
  403e24:	add    bh,BYTE PTR [ebx+0x14]
  403e27:	add    BYTE PTR [eax],al
  403e29:	add    al,0xa
  403e2b:	sub    eax,DWORD PTR [eax]
  403e2d:	push   es
  403e2e:	sub    al,BYTE PTR [eax]
  403e30:	add    esi,DWORD PTR [eax]
  403e32:	or     DWORD PTR [eax],eax
  403e34:	or     DWORD PTR [eax],eax
  403e36:	add    BYTE PTR [eax],al
  403e38:	add    BYTE PTR [eax],al
  403e3a:	add    BYTE PTR [eax],al
  403e3c:	add    al,BYTE PTR [ebx]
  403e3e:	jge    0x403e54
  403e40:	add    BYTE PTR [eax],al
  403e42:	add    al,0x0
  403e44:	sub    al,BYTE PTR [eax]
  403e46:	add    BYTE PTR [eax],al
  403e48:	adc    esi,DWORD PTR [eax]
  403e4a:	add    al,BYTE PTR [eax]
  403e4c:	or     eax,DWORD PTR [eax]
  403e4e:	add    BYTE PTR [eax],al
  403e50:	sbb    BYTE PTR [eax],al
  403e52:	add    BYTE PTR [ecx],dl
  403e54:	add    bh,BYTE PTR [ebx+0x15]
  403e57:	add    BYTE PTR [eax],al
  403e59:	add    al,0xa
  403e5b:	sub    eax,DWORD PTR [eax]
  403e5d:	push   es
  403e5e:	sub    al,BYTE PTR [eax]
  403e60:	add    esi,DWORD PTR [eax]
  403e62:	or     DWORD PTR [eax],eax
  403e64:	or     DWORD PTR [eax],eax
  403e66:	add    BYTE PTR [eax],al
  403e68:	add    BYTE PTR [eax],al
  403e6a:	add    BYTE PTR [eax],al
  403e6c:	add    al,BYTE PTR [ebx]
  403e6e:	jge    0x403e85
  403e70:	add    BYTE PTR [eax],al
  403e72:	add    al,0x0
  403e74:	sub    al,BYTE PTR [eax]
  403e76:	add    BYTE PTR [eax],al
  403e78:	adc    esi,DWORD PTR [eax]
  403e7a:	add    al,BYTE PTR [eax]
  403e7c:	or     eax,DWORD PTR [eax]
  403e7e:	add    BYTE PTR [eax],al
  403e80:	sbb    BYTE PTR [eax],al
  403e82:	add    BYTE PTR [ecx],dl
  403e84:	add    bh,BYTE PTR [ebx+0x16]
  403e87:	add    BYTE PTR [eax],al
  403e89:	add    al,0xa
  403e8b:	sub    eax,DWORD PTR [eax]
  403e8d:	push   es
  403e8e:	sub    al,BYTE PTR [eax]
  403e90:	add    esi,DWORD PTR [eax]
  403e92:	or     DWORD PTR [eax],eax
  403e94:	or     DWORD PTR [eax],eax
  403e96:	add    BYTE PTR [eax],al
  403e98:	add    BYTE PTR [eax],al
  403e9a:	add    BYTE PTR [eax],al
  403e9c:	add    al,BYTE PTR [ebx]
  403e9e:	jge    0x403eb6
  403ea0:	add    BYTE PTR [eax],al
  403ea2:	add    al,0x0
  403ea4:	sub    al,BYTE PTR [eax]
  403ea6:	add    BYTE PTR [eax],al
  403ea8:	adc    esi,DWORD PTR [eax]
  403eaa:	add    al,BYTE PTR [eax]
  403eac:	or     eax,DWORD PTR [eax]
  403eae:	add    BYTE PTR [eax],al
  403eb0:	sbb    BYTE PTR [eax],al
  403eb2:	add    BYTE PTR [ecx],dl
  403eb4:	add    bh,BYTE PTR [ebx+0x17]
  403eb7:	add    BYTE PTR [eax],al
  403eb9:	add    al,0xa
  403ebb:	sub    eax,DWORD PTR [eax]
  403ebd:	push   es
  403ebe:	sub    al,BYTE PTR [eax]
  403ec0:	add    esi,DWORD PTR [eax]
  403ec2:	or     DWORD PTR [eax],eax
  403ec4:	or     DWORD PTR [eax],eax
  403ec6:	add    BYTE PTR [eax],al
  403ec8:	add    BYTE PTR [eax],al
  403eca:	add    BYTE PTR [eax],al
  403ecc:	add    al,BYTE PTR [ebx]
  403ece:	jge    0x403ee7
  403ed0:	add    BYTE PTR [eax],al
  403ed2:	add    al,0x0
  403ed4:	sub    al,BYTE PTR [eax]
  403ed6:	add    BYTE PTR [eax],al
  403ed8:	adc    esi,DWORD PTR [eax]
  403eda:	add    al,BYTE PTR [eax]
  403edc:	or     eax,DWORD PTR [eax]
  403ede:	add    BYTE PTR [eax],al
  403ee0:	sbb    BYTE PTR [eax],al
  403ee2:	add    BYTE PTR [ecx],dl
  403ee4:	add    bh,BYTE PTR [ebx+0x18]
  403ee7:	add    BYTE PTR [eax],al
  403ee9:	add    al,0xa
  403eeb:	sub    eax,DWORD PTR [eax]
  403eed:	push   es
  403eee:	sub    al,BYTE PTR [eax]
  403ef0:	add    esi,DWORD PTR [eax]
  403ef2:	or     DWORD PTR [eax],eax
  403ef4:	or     DWORD PTR [eax],eax
  403ef6:	add    BYTE PTR [eax],al
  403ef8:	add    BYTE PTR [eax],al
  403efa:	add    BYTE PTR [eax],al
  403efc:	add    al,BYTE PTR [ebx]
  403efe:	jge    0x403f18
  403f00:	add    BYTE PTR [eax],al
  403f02:	add    al,0x0
  403f04:	sub    al,BYTE PTR [eax]
  403f06:	add    BYTE PTR [eax],al
  403f08:	sbb    esi,DWORD PTR [eax]
  403f0a:	pop    es
  403f0b:	add    BYTE PTR [ebx],dl
  403f0d:	pop    es
  403f0e:	add    BYTE PTR [eax],al
  403f10:	sbb    al,BYTE PTR [eax]
  403f12:	add    BYTE PTR [ecx],dl
  403f14:	add    BYTE PTR [eax],ch
  403f16:	pop    ebx
  403f17:	add    BYTE PTR [eax],al
  403f19:	or     ah,BYTE PTR [eax]
  403f1b:	nop
  403f1c:	add    al,BYTE PTR [eax]
  403f1e:	add    BYTE PTR [eax],ch
  403f20:	pusha  
  403f21:	add    BYTE PTR [eax],al
  403f23:	push   es
  403f24:	adc    edx,DWORD PTR [eax+eiz*1]
  403f27:	xchg   esp,eax
  403f28:	add    al,BYTE PTR [eax]
  403f2a:	add    BYTE PTR [eax],ch
  403f2c:	pusha  
  403f2d:	add    BYTE PTR [eax],al
  403f2f:	push   es
  403f30:	adc    edx,DWORD PTR [esi]
  403f32:	and    BYTE PTR [edi],cl
  403f34:	add    eax,0x68280000
  403f39:	add    BYTE PTR [eax],al
  403f3b:	push   es
  403f3c:	and    eax,0x9e2826
  403f41:	add    BYTE PTR [edx],cl
  403f43:	and    eax,0x11171326
  403f48:	pop    ss
  403f49:	cmp    DWORD PTR [ecx+eax*1+0x0],ecx
  403f4d:	add    BYTE PTR [eax],bl
  403f4f:	inc    ebp
  403f50:	add    DWORD PTR [eax],eax
  403f52:	add    BYTE PTR [eax],al
  403f54:	idiv   bh
  403f56:	(bad)  
  403f57:	call   DWORD PTR [edi]
  403f59:	sub    eax,0x44d006
  403f5e:	add    BYTE PTR [esi],al
  403f60:	and    BYTE PTR es:[eax+0x28000002],bl
  403f67:	pusha  
  403f68:	add    BYTE PTR [eax],al
  403f6a:	push   es
  403f6b:	adc    edx,DWORD PTR [esi]
  403f6d:	and    BYTE PTR [edx],bh
  403f6f:	add    eax,0x68280000
  403f74:	add    BYTE PTR [eax],al
  403f76:	push   es
  403f77:	and    eax,0x9f7326
  403f7c:	add    BYTE PTR [edx],cl
  403f7e:	or     al,0x20
  403f80:	pushf  
  403f81:	add    al,BYTE PTR [eax]
  403f83:	add    BYTE PTR [eax],ch
  403f85:	pusha  
  403f86:	add    BYTE PTR [eax],al
  403f88:	push   es
  403f89:	adc    edx,DWORD PTR [esi]
  403f8b:	or     BYTE PTR [edi-0x60],ch
  403f8e:	add    BYTE PTR [eax],al
  403f90:	or     ah,BYTE PTR ds:0xa0200a26
  403f96:	add    al,BYTE PTR [eax]
  403f98:	add    BYTE PTR [eax],ch
  403f9a:	pusha  
  403f9b:	add    BYTE PTR [eax],al
  403f9d:	push   es
  403f9e:	adc    edx,DWORD PTR [esi]
  403fa0:	push   es
  403fa1:	and    BYTE PTR [ebp+0x5],ch
  403fa4:	add    BYTE PTR [eax],al
  403fa6:	sub    BYTE PTR [eax+0x0],ch
  403fa9:	add    BYTE PTR [esi],al
  403fab:	and    eax,0x5b7226
  403fb0:	add    BYTE PTR [eax+0x20],dh
  403fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb4:	add    al,BYTE PTR [eax]
  403fb6:	add    BYTE PTR [eax],ch
  403fb8:	pusha  
  403fb9:	add    BYTE PTR [eax],al
  403fbb:	push   es
  403fbc:	and    BYTE PTR [eax+0x28000002],ch
  403fc2:	pusha  
  403fc3:	add    BYTE PTR [eax],al
  403fc5:	push   es
  403fc6:	and    BYTE PTR [edx+eax*1+0x60280000],ch
  403fcd:	add    BYTE PTR [eax],al
  403fcf:	push   es
  403fd0:	sub    BYTE PTR [ecx+0x250a0000],ah
  403fd6:	and    BYTE PTR es:[eax+0x5],dh
  403fda:	add    BYTE PTR [eax],al
  403fdc:	sub    BYTE PTR [eax+0x0],ch
  403fdf:	add    BYTE PTR [esi],al
  403fe1:	and    eax,0x5b7226
  403fe6:	add    BYTE PTR [eax+0x20],dh
  403fe9:	mov    al,0x2
  403feb:	add    BYTE PTR [eax],al
  403fed:	sub    BYTE PTR [eax+0x0],ah
  403ff0:	add    BYTE PTR [esi],al
  403ff2:	and    BYTE PTR [edx+eax*1+0x60280000],dh
  403ff9:	add    BYTE PTR [eax],al
  403ffb:	push   es
  403ffc:	and    BYTE PTR [eax+0x28000002],bh
  404002:	pusha  
  404003:	add    BYTE PTR [eax],al
  404005:	push   es
  404006:	sub    BYTE PTR [ecx+0x250a0000],ah
  40400c:	or     esp,DWORD PTR es:[eax]
  40400f:	mov    esp,0x28000002
  404014:	pusha  
  404015:	add    BYTE PTR [eax],al
  404017:	push   es
  404018:	adc    edx,DWORD PTR [esi]
  40401a:	add    ch,BYTE PTR [edi+0x32]
  40401d:	add    BYTE PTR [eax],al
  40401f:	push   es
  404020:	and    eax,0xa26f0726
  404025:	add    BYTE PTR [eax],al
  404027:	or     ah,BYTE PTR ds:0x8a6f26
  40402d:	add    BYTE PTR [edx],cl
  40402f:	add    BYTE PTR [eax],ah
  404031:	rol    BYTE PTR [edx],0x0
  404034:	add    BYTE PTR [eax],ch
  404036:	pusha  
  404037:	add    BYTE PTR [eax],al
  404039:	push   es
  40403a:	adc    edx,DWORD PTR [esi]
  40403c:	and    ah,al
  40403e:	add    al,BYTE PTR [eax]
  404040:	add    BYTE PTR [eax],ch
  404042:	pusha  
  404043:	add    BYTE PTR [eax],al
  404045:	push   es
  404046:	sub    BYTE PTR [ebx+0x200a0000],ah
  40404c:	jae    0x404053
  40404e:	add    BYTE PTR [eax],al
  404050:	sub    BYTE PTR [eax+0x0],ch
  404053:	add    BYTE PTR [esi],al
  404055:	sub    BYTE PTR [eax+eax*1+0x26250a00],ah
  40405c:	sub    BYTE PTR [esi+0x250a0000],bl
  404062:	es and al,cl
  404065:	add    al,BYTE PTR [eax]
  404067:	add    BYTE PTR [eax],ch
  404069:	pusha  
  40406a:	add    BYTE PTR [eax],al
  40406c:	push   es
  40406d:	inc    BYTE PTR [ecx]
  40406f:	adc    edx,DWORD PTR [edi]
  404071:	adc    DWORD PTR [edi],edx
  404073:	sub    al,0x1f
  404075:	sbb    al,0x45
  404077:	add    DWORD PTR [eax],eax
  404079:	add    BYTE PTR [eax],al
  40407b:	idiv   bh
  40407d:	(bad)  
  40407e:	jmp    DWORD PTR [eax]
  404080:	int3   
  404081:	add    al,BYTE PTR [eax]
  404083:	add    BYTE PTR [eax],ch
  404085:	pusha  
  404086:	add    BYTE PTR [eax],al
  404088:	push   es
  404089:	adc    edx,DWORD PTR [esi]
  40408b:	add    ch,BYTE PTR [edi+0x45]
  40408e:	add    BYTE PTR [eax],al
  404090:	push   es
  404091:	and    eax,0x38002626
  404096:	sbb    eax,0x20000004
  40409b:	rol    BYTE PTR [edx],1
  40409d:	add    BYTE PTR [eax],al
  40409f:	sub    BYTE PTR [eax+0x0],ah
  4040a2:	add    BYTE PTR [esi],al
  4040a4:	adc    edx,DWORD PTR [esi]
  4040a6:	add    BYTE PTR [eax],ah
  4040a8:	aam    0x2
  4040aa:	add    BYTE PTR [eax],al
  4040ac:	sub    BYTE PTR [eax+0x0],ah
  4040af:	add    BYTE PTR [esi],al
  4040b1:	adc    edx,DWORD PTR [esi]
  4040b3:	add    ch,BYTE PTR [edi+0x46]
  4040b6:	add    BYTE PTR [eax],al
  4040b8:	push   es
  4040b9:	and    eax,0xd8202626
  4040be:	add    al,BYTE PTR [eax]
  4040c0:	add    BYTE PTR [eax],ch
  4040c2:	pusha  
  4040c3:	add    BYTE PTR [eax],al
  4040c5:	push   es
  4040c6:	adc    edx,DWORD PTR [esi]
  4040c8:	sub    BYTE PTR [eax],dl
  4040ca:	add    BYTE PTR [eax],al
  4040cc:	push   es
  4040cd:	and    eax,0xa56f26
  4040d2:	add    BYTE PTR [edx],cl
  4040d4:	and    BYTE PTR [eax+0x28000005],ah
  4040da:	push   0x25060000
  4040df:	and    BYTE PTR es:[edi],bl
  4040e2:	push   es
  4040e3:	add    BYTE PTR [eax],al
  4040e5:	sub    BYTE PTR [eax+0x0],ch
  4040e8:	add    BYTE PTR [esi],al
  4040ea:	and    eax,0x6342026
  4040ef:	add    BYTE PTR [eax],al
  4040f1:	sub    BYTE PTR [eax+0x0],ch
  4040f4:	add    BYTE PTR [esi],al
  4040f6:	outs   dx,DWORD PTR ds:[esi]
  4040f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f8:	add    BYTE PTR [eax],al
  4040fa:	or     al,BYTE PTR [eax]
  4040fc:	and    ah,bl
  4040fe:	add    al,BYTE PTR [eax]
  404100:	add    BYTE PTR [eax],ch
  404102:	pusha  
  404103:	add    BYTE PTR [eax],al
  404105:	push   es
  404106:	adc    edx,DWORD PTR [esi]
  404108:	add    ch,BYTE PTR [edi+0x47]
  40410b:	add    BYTE PTR [eax],al
  40410d:	push   es
  40410e:	and    eax,0x200e1326
  404113:	loopne 0x404117
  404115:	add    BYTE PTR [eax],al
  404117:	sub    BYTE PTR [eax+0x0],ah
  40411a:	add    BYTE PTR [esi],al
  40411c:	adc    edx,DWORD PTR [esi]
  40411e:	add    ch,BYTE PTR [edi+0x4a]
  404121:	add    BYTE PTR [eax],al
  404123:	push   es
  404124:	and    eax,0xa72826
  404129:	add    BYTE PTR [edx],cl
  40412b:	and    eax,0x20061326
  404130:	in     al,0x2
  404132:	add    BYTE PTR [eax],al
  404134:	sub    BYTE PTR [eax+0x0],ah
  404137:	add    BYTE PTR [esi],al
  404139:	adc    edx,DWORD PTR [esi]
  40413b:	add    ch,BYTE PTR [edi+0x49]
  40413e:	add    BYTE PTR [eax],al
  404140:	push   es
  404141:	and    eax,0xa72826
  404146:	add    BYTE PTR [edx],cl
  404148:	and    eax,0xe8200d26
  40414d:	add    al,BYTE PTR [eax]
  40414f:	add    BYTE PTR [eax],ch
  404151:	pusha  
  404152:	add    BYTE PTR [eax],al
  404154:	push   es
  404155:	adc    edx,DWORD PTR [esi]
  404157:	and    ah,ch
  404159:	add    al,BYTE PTR [eax]
  40415b:	add    BYTE PTR [eax],ch
  40415d:	pusha  
  40415e:	add    BYTE PTR [eax],al
  404160:	push   es
  404161:	lea    ebx,[esi+0x13010000]
  404167:	adc    edx,DWORD PTR [ecx]
  404169:	adc    esp,DWORD PTR [eax]
  40416b:	lock add al,BYTE PTR [eax]
  40416e:	add    BYTE PTR [eax],ch
  404170:	pusha  
  404171:	add    BYTE PTR [eax],al
  404173:	push   es
  404174:	and    BYTE PTR [ebp+0x6],ch
  404177:	add    BYTE PTR [eax],al
  404179:	sub    BYTE PTR [eax+0x0],ch
  40417c:	add    BYTE PTR [esi],al
  40417e:	and    eax,0x1100a226
  404183:	adc    esp,DWORD PTR [eax]
  404185:	hlt    
  404186:	add    al,BYTE PTR [eax]
  404188:	add    BYTE PTR [eax],ch
  40418a:	pusha  
  40418b:	add    BYTE PTR [eax],al
  40418d:	push   es
  40418e:	adc    DWORD PTR [esi],ecx
  404190:	mov    ds:0x20131100,al
  404195:	clc    
  404196:	add    al,BYTE PTR [eax]
  404198:	add    BYTE PTR [eax],ch
  40419a:	pusha  
  40419b:	add    BYTE PTR [eax],al
  40419d:	push   es
  40419e:	and    BYTE PTR [edx+0x28000006],ch
  4041a4:	push   0x25060000
  4041a9:	mov    es:0x20131100,al
  4041af:	cld    
  4041b0:	add    al,BYTE PTR [eax]
  4041b2:	add    BYTE PTR [eax],ch
  4041b4:	pusha  
  4041b5:	add    BYTE PTR [eax],al
  4041b7:	push   es
  4041b8:	adc    DWORD PTR [esi],eax
  4041ba:	mov    ds:0x20131100,al
  4041bf:	add    BYTE PTR [ebx],al
  4041c1:	add    BYTE PTR [eax],al
  4041c3:	sub    BYTE PTR [eax+0x0],ah
  4041c6:	add    BYTE PTR [esi],al
  4041c8:	and    BYTE PTR [edx+0x28000006],ch
  4041ce:	push   0x25060000
  4041d3:	mov    es:0x20131100,al
  4041d9:	add    al,0x3
  4041db:	add    BYTE PTR [eax],al
  4041dd:	sub    BYTE PTR [eax+0x0],ah
  4041e0:	add    BYTE PTR [esi],al
  4041e2:	or     DWORD PTR [edx+0x28131100],esp
  4041e8:	test   al,0x0
  4041ea:	add    BYTE PTR [edx],cl
  4041ec:	and    eax,0x200d1326
  4041f1:	or     BYTE PTR [ebx],al
  4041f3:	add    BYTE PTR [eax],al
  4041f5:	sub    BYTE PTR [eax+0x0],ah
  4041f8:	add    BYTE PTR [esi],al
  4041fa:	adc    edx,DWORD PTR [esi]
  4041fc:	and    BYTE PTR [ebp+0x28000006],ch
  404202:	push   0x25060000
  404207:	adc    ecx,DWORD PTR es:[edi]
  40420a:	and    BYTE PTR [ebx+eax*1],cl
  40420d:	add    BYTE PTR [eax],al
  40420f:	sub    BYTE PTR [eax+0x0],ah
  404212:	add    BYTE PTR [esi],al
  404214:	adc    edx,DWORD PTR [esi]
  404216:	jae    0x4041c1
  404218:	add    BYTE PTR [eax],al
  40421a:	or     dl,BYTE PTR [ebx]
  40421c:	adc    BYTE PTR [eax],ah
  40421e:	adc    BYTE PTR [ebx],al
  404220:	add    BYTE PTR [eax],al
  404222:	sub    BYTE PTR [eax+0x0],ah
  404225:	add    BYTE PTR [esi],al
  404227:	adc    edx,DWORD PTR [esi]
  404229:	adc    DWORD PTR [eax],edx
  40422b:	adc    DWORD PTR ds:0xaa6f0f11,ecx
  404231:	add    BYTE PTR [eax],al
  404233:	or     al,BYTE PTR [eax]
  404235:	and    BYTE PTR [ebx+eax*1],dl
  404238:	add    BYTE PTR [eax],al
  40423a:	sub    BYTE PTR [eax+0x0],ah
  40423d:	add    BYTE PTR [esi],al
  40423f:	adc    edx,DWORD PTR [esi]
  404241:	and    dl,bl
  404243:	push   es
  404244:	add    BYTE PTR [eax],al
  404246:	sub    BYTE PTR [eax+0x0],ch
  404249:	add    BYTE PTR [esi],al
  40424b:	and    eax,0x20071326
  404250:	sbb    BYTE PTR [ebx],al
  404252:	add    BYTE PTR [eax],al
  404254:	sub    BYTE PTR [eax+0x0],ah
  404257:	add    BYTE PTR [esi],al
  404259:	adc    edx,DWORD PTR [esi]
  40425b:	add    dl,BYTE PTR [ecx]
  40425d:	pop    es
  40425e:	adc    DWORD PTR [esi],eax
  404260:	outs   dx,DWORD PTR ds:[esi]
  404261:	dec    ebx
  404262:	add    BYTE PTR [eax],al
  404264:	push   es
  404265:	and    eax,0x1c202626
  40426a:	add    eax,DWORD PTR [eax]
  40426c:	add    BYTE PTR [eax],ch
  40426e:	pusha  
  40426f:	add    BYTE PTR [eax],al
  404271:	push   es
  404272:	adc    edx,DWORD PTR [esi]
  404274:	and    cl,ah
  404276:	push   es
  404277:	add    BYTE PTR [eax],al
  404279:	sub    BYTE PTR [eax+0x0],ch
  40427c:	add    BYTE PTR [esi],al
  40427e:	and    eax,0x20041326
  404283:	and    BYTE PTR [ebx],al
  404285:	add    BYTE PTR [eax],al
  404287:	sub    BYTE PTR [eax+0x0],ah
  40428a:	add    BYTE PTR [esi],al
  40428c:	adc    edx,DWORD PTR [esi]
  40428e:	and    BYTE PTR [edi],cl
  404290:	add    eax,0x68280000
  404295:	add    BYTE PTR [eax],al
  404297:	push   es
  404298:	and    eax,0x20081326
  40429d:	and    al,0x3
  40429f:	add    BYTE PTR [eax],al
  4042a1:	sub    BYTE PTR [eax+0x0],ah
  4042a4:	add    BYTE PTR [esi],al
  4042a6:	adc    edx,DWORD PTR [esi]
  4042a8:	jae    0x404253
  4042aa:	add    BYTE PTR [eax],al
  4042ac:	or     dl,BYTE PTR [ebx]
  4042ae:	adc    DWORD PTR [eax],esp
  4042b0:	sub    BYTE PTR [ebx],al
  4042b2:	add    BYTE PTR [eax],al
  4042b4:	sub    BYTE PTR [eax+0x0],ah
  4042b7:	add    BYTE PTR [esi],al
  4042b9:	adc    edx,DWORD PTR [esi]
  4042bb:	adc    DWORD PTR [ecx],edx
  4042bd:	adc    DWORD PTR [ecx+edx*1],eax
  4042c0:	or     BYTE PTR [edi-0x56],ch
  4042c3:	add    BYTE PTR [eax],al
  4042c5:	or     al,BYTE PTR [eax]
  4042c7:	and    BYTE PTR [ebx+eax*1],ch
  4042ca:	add    BYTE PTR [eax],al
  4042cc:	sub    BYTE PTR [eax+0x0],ah
  4042cf:	add    BYTE PTR [esi],al
  4042d1:	adc    edx,DWORD PTR [esi]
  4042d3:	jae    0x404280
  4042d5:	add    BYTE PTR [eax],al
  4042d7:	or     dl,BYTE PTR [ebx]
  4042d9:	or     esp,DWORD PTR [eax]
  4042db:	xor    BYTE PTR [ebx],al
  4042dd:	add    BYTE PTR [eax],al
  4042df:	sub    BYTE PTR [eax+0x0],ah
  4042e2:	add    BYTE PTR [esi],al
  4042e4:	adc    edx,DWORD PTR [esi]
  4042e6:	jae    0x404294
  4042e8:	add    BYTE PTR [eax],al
  4042ea:	or     dl,BYTE PTR [ebx]
  4042ec:	or     al,0x20
  4042ee:	xor    al,0x3
  4042f0:	add    BYTE PTR [eax],al
  4042f2:	sub    BYTE PTR [eax+0x0],ah
  4042f5:	add    BYTE PTR [esi],al
  4042f7:	adc    edx,DWORD PTR [esi]
  4042f9:	adc    DWORD PTR [ebx],ecx
  4042fb:	outs   dx,DWORD PTR ds:[esi]
  4042fc:	lods   eax,DWORD PTR ds:[esi]
  4042fd:	add    BYTE PTR [eax],al
  4042ff:	or     ah,BYTE PTR ds:0xae6f26
  404305:	add    BYTE PTR [edx],cl
  404307:	and    eax,0x200a1326
  40430c:	cmp    BYTE PTR [ebx],al
  40430e:	add    BYTE PTR [eax],al
  404310:	sub    BYTE PTR [eax+0x0],ah
  404313:	add    BYTE PTR [esi],al
  404315:	adc    edx,DWORD PTR [esi]
  404317:	adc    DWORD PTR [eax+eiz*1],ecx
  40431a:	adc    al,0x7
  40431c:	add    BYTE PTR [eax],al
  40431e:	sub    BYTE PTR [eax+0x0],ch
  404321:	add    BYTE PTR [esi],al
  404323:	and    eax,0xaf6f26
  404328:	add    BYTE PTR [edx],cl
  40432a:	add    BYTE PTR [eax],ah
  40432c:	cmp    al,0x3
  40432e:	add    BYTE PTR [eax],al
  404330:	sub    BYTE PTR [eax+0x0],ah
  404333:	add    BYTE PTR [esi],al
  404335:	adc    edx,DWORD PTR [esi]
  404337:	adc    DWORD PTR [eax+eiz*1],ecx
  40433a:	and    DWORD PTR [edi],eax
  40433c:	add    BYTE PTR [eax],al
  40433e:	sub    BYTE PTR [eax+0x0],ch
  404341:	add    BYTE PTR [esi],al
  404343:	outs   dx,DWORD PTR ds:[esi]
  404344:	mov    al,0x0
  404346:	add    BYTE PTR [edx],cl
  404348:	add    BYTE PTR [eax],ah
  40434a:	inc    eax
  40434b:	add    eax,DWORD PTR [eax]
  40434d:	add    BYTE PTR [eax],ch
  40434f:	pusha  
  404350:	add    BYTE PTR [eax],al
  404352:	push   es
  404353:	adc    edx,DWORD PTR [esi]
  404355:	adc    DWORD PTR [eax+eiz*1],ecx
  404358:	inc    esp
  404359:	add    eax,DWORD PTR [eax]
  40435b:	add    BYTE PTR [eax],ch
  40435d:	pusha  
  40435e:	add    BYTE PTR [eax],al
  404360:	push   es
  404361:	outs   dx,DWORD PTR ds:[esi]
  404362:	mov    cl,0x0
  404364:	add    BYTE PTR [edx],cl
  404366:	add    BYTE PTR [eax],ah
  404368:	dec    eax
  404369:	add    eax,DWORD PTR [eax]
  40436b:	add    BYTE PTR [eax],ch
  40436d:	pusha  
  40436e:	add    BYTE PTR [eax],al
  404370:	push   es
  404371:	adc    edx,DWORD PTR [esi]
  404373:	adc    DWORD PTR [eax+eiz*1],ecx
  404376:	dec    esp
  404377:	add    eax,DWORD PTR [eax]
  404379:	add    BYTE PTR [eax],ch
  40437b:	pusha  
  40437c:	add    BYTE PTR [eax],al
  40437e:	push   es
  40437f:	outs   dx,DWORD PTR ds:[esi]
  404380:	mov    dl,0x0
  404382:	add    BYTE PTR [edx],cl
  404384:	add    BYTE PTR [eax],ah
  404386:	push   eax
  404387:	add    eax,DWORD PTR [eax]
  404389:	add    BYTE PTR [eax],ch
  40438b:	pusha  
  40438c:	add    BYTE PTR [eax],al
  40438e:	push   es
  40438f:	adc    edx,DWORD PTR [esi]
  404391:	adc    DWORD PTR [eax+eiz*1],ecx
  404394:	push   esp
  404395:	add    eax,DWORD PTR [eax]
  404397:	add    BYTE PTR [eax],ch
  404399:	pusha  
  40439a:	add    BYTE PTR [eax],al
  40439c:	push   es
  40439d:	outs   dx,DWORD PTR ds:[esi]
  40439e:	mov    bl,0x0
  4043a0:	add    BYTE PTR [edx],cl
  4043a2:	add    BYTE PTR [eax],ah
  4043a4:	pop    eax
  4043a5:	add    eax,DWORD PTR [eax]
  4043a7:	add    BYTE PTR [eax],ch
  4043a9:	pusha  
  4043aa:	add    BYTE PTR [eax],al
  4043ac:	push   es
  4043ad:	adc    edx,DWORD PTR [esi]
  4043af:	adc    DWORD PTR [ebx],ecx
  4043b1:	adc    DWORD PTR [edi+ebp*2],ecx
  4043b4:	mov    ah,0x0
  4043b6:	add    BYTE PTR [edx],cl
  4043b8:	add    BYTE PTR [eax],ah
  4043ba:	pop    esp
  4043bb:	add    eax,DWORD PTR [eax]
  4043bd:	add    BYTE PTR [eax],ch
  4043bf:	pusha  
  4043c0:	add    BYTE PTR [eax],al
  4043c2:	push   es
  4043c3:	adc    edx,DWORD PTR [esi]
  4043c5:	adc    DWORD PTR [ebx],ecx
  4043c7:	outs   dx,DWORD PTR ds:[esi]
  4043c8:	mov    ch,0x0
  4043ca:	add    BYTE PTR [edx],cl
  4043cc:	and    eax,0x60202626
  4043d1:	add    eax,DWORD PTR [eax]
  4043d3:	add    BYTE PTR [eax],ch
  4043d5:	pusha  
  4043d6:	add    BYTE PTR [eax],al
  4043d8:	push   es
  4043d9:	adc    edx,DWORD PTR [esi]
  4043db:	adc    DWORD PTR [ebx],ecx
  4043dd:	outs   dx,DWORD PTR ds:[esi]
  4043de:	lods   eax,DWORD PTR ds:[esi]
  4043df:	add    BYTE PTR [eax],al
  4043e1:	or     ah,BYTE PTR ds:0xae6f26
  4043e7:	add    BYTE PTR [edx],cl
  4043e9:	and    eax,0x200a1326
  4043ee:	add    eax,DWORD PTR fs:[eax]
  4043f1:	add    BYTE PTR [eax],ch
  4043f3:	pusha  
  4043f4:	add    BYTE PTR [eax],al
  4043f6:	push   es
  4043f7:	adc    edx,DWORD PTR [esi]
  4043f9:	adc    DWORD PTR [ebx],ecx
  4043fb:	outs   dx,DWORD PTR ds:[esi]
  4043fc:	mov    dh,0x0
  4043fe:	add    BYTE PTR [edx],cl
  404400:	add    BYTE PTR [eax],ah
  404402:	push   0x28000003
  404407:	pusha  
  404408:	add    BYTE PTR [eax],al
  40440a:	push   es
  40440b:	adc    edx,DWORD PTR [esi]
  40440d:	add    ch,BYTE PTR [edi+0x45]
  404410:	add    BYTE PTR [eax],al
  404412:	push   es
  404413:	and    eax,0x6c202626
  404418:	add    eax,DWORD PTR [eax]
  40441a:	add    BYTE PTR [eax],ch
  40441c:	pusha  
  40441d:	add    BYTE PTR [eax],al
  40441f:	push   es
  404420:	adc    edx,DWORD PTR [esi]
  404422:	and    BYTE PTR [esi],dh
  404424:	pop    es
  404425:	add    BYTE PTR [eax],al
  404427:	sub    BYTE PTR [eax+0x0],ch
  40442a:	add    BYTE PTR [esi],al
  40442c:	and    eax,0x20051326
  404431:	jo     0x404436
  404433:	add    BYTE PTR [eax],al
  404435:	sub    BYTE PTR [eax+0x0],ah
  404438:	add    BYTE PTR [esi],al
  40443a:	adc    edx,DWORD PTR [esi]
  40443c:	and    BYTE PTR [ebx+eax*1+0x0],dh
  404440:	add    BYTE PTR [eax],ch
  404442:	pusha  
  404443:	add    BYTE PTR [eax],al
  404445:	push   es
  404446:	sub    BYTE PTR [ebx+0x250a0000],ah
  40444c:	and    BYTE PTR es:[ebx+0x7],ch
  404450:	add    BYTE PTR [eax],al
  404452:	sub    BYTE PTR [eax+0x0],ch
  404455:	add    BYTE PTR [esi],al
  404457:	and    eax,0xa42826
  40445c:	add    BYTE PTR [edx],cl
  40445e:	and    eax,0x20091326
  404463:	js     0x404468
  404465:	add    BYTE PTR [eax],al
  404467:	sub    BYTE PTR [eax+0x0],ah
  40446a:	add    BYTE PTR [esi],al
  40446c:	adc    edx,DWORD PTR [esi]
  40446e:	jae    0x404419
  404470:	add    BYTE PTR [eax],al
  404472:	or     dl,BYTE PTR [ebx]
  404474:	adc    ah,BYTE PTR [eax]
  404476:	jl     0x40447b
  404478:	add    BYTE PTR [eax],al
  40447a:	sub    BYTE PTR [eax+0x0],ah
  40447d:	add    BYTE PTR [esi],al
  40447f:	adc    edx,DWORD PTR [esi]
  404481:	adc    DWORD PTR [edx],edx
  404483:	adc    DWORD PTR ds:0xaa6f0911,eax
  404489:	add    BYTE PTR [eax],al
  40448b:	or     al,BYTE PTR [eax]
  40448d:	and    BYTE PTR [eax+0x28000003],al
  404493:	pusha  
  404494:	add    BYTE PTR [eax],al
  404496:	push   es
  404497:	adc    edx,DWORD PTR [esi]
  404499:	and    BYTE PTR [edi+eax*1+0x0],bh
  40449d:	add    BYTE PTR [eax],ch
  40449f:	push   0x20060000
  4044a4:	lea    eax,[edi]
  4044a6:	add    BYTE PTR [eax],al
  4044a8:	sub    BYTE PTR [eax+0x0],ch
  4044ab:	add    BYTE PTR [esi],al
  4044ad:	and    eax,0xb72826
  4044b2:	add    BYTE PTR [edx],cl
  4044b4:	and    eax,0xdd002626
  4044b9:	pop    edi
  4044ba:	add    DWORD PTR [eax],eax
  4044bc:	add    BYTE PTR [ecx],dl
  4044be:	adc    eax,0x15110d2b
  4044c3:	and    BYTE PTR [ebx+eax*1+0x60280000],al
  4044ca:	add    BYTE PTR [eax],al
  4044cc:	push   es
  4044cd:	pop    eax
  4044ce:	and    BYTE PTR [eax+0x28000003],cl
  4044d4:	pusha  
  4044d5:	add    BYTE PTR [eax],al
  4044d7:	push   es
  4044d8:	adc    edx,DWORD PTR ds:0x2f45
  4044de:	add    BYTE PTR [eax],al
  4044e0:	add    BYTE PTR [eax],al
  4044e2:	add    BYTE PTR [edx-0x7],bh
  4044e5:	(bad)  
  4044e6:	dec    DWORD PTR [ebx-0x39000007]
  4044ec:	stc    
  4044ed:	(bad)  
  4044ee:	jmp    esp
  4044f0:	stc    
  4044f1:	(bad)  
  4044f2:	(bad)  
  4044f3:	stc    
  4044f4:	stc    
  4044f5:	(bad)  
  4044f6:	push   DWORD PTR [ebx-0x6]
  4044f9:	(bad)  
  4044fa:	call   DWORD PTR [ebp-0x1b000006]
  404500:	cli    
  404501:	(bad)  
  404502:	(bad)  
  404503:	stc    
  404504:	cli    
  404505:	(bad)  
  404506:	(bad)  
  404507:	cli    
  404508:	cli    
  404509:	(bad)  
  40450a:	(bad)  
  40450b:	(bad)  
  40450c:	cli    
  40450d:	(bad)  
  40450e:	dec    DWORD PTR [ebx+edi*8]
  404511:	(bad)  
  404512:	jmp    DWORD PTR [ecx]
  404514:	sti    
  404515:	(bad)  
  404516:	jmp    DWORD PTR [ecx-0x5]
  404519:	(bad)  
  40451a:	push   DWORD PTR [edi-0x5]
  40451d:	(bad)  
  40451e:	call   DWORD PTR [ebx+edi*8-0x44f0001]
  404525:	(bad)  
  404526:	call   DWORD PTR [ebp-0x4]
  404529:	(bad)  
  40452a:	jmp    FWORD PTR [edi-0x4]
  40452d:	(bad)  
  40452e:	inc    DWORD PTR [edx-0x65000004]
  404534:	cld    
  404535:	(bad)  
  404536:	push   DWORD PTR [esp+edi*8-0x3320001]
  40453d:	(bad)  
  40453e:	jmp    edi
  404540:	cld    
  404541:	(bad)  
  404542:	inc    DWORD PTR [ecx]
  404544:	std    
  404545:	(bad)  
  404546:	call   DWORD PTR [edi*8-0x2d30001]
  40454d:	(bad)  
  40454e:	(bad)  
  40454f:	aas    
  404550:	std    
  404551:	(bad)  
  404552:	call   DWORD PTR [edx-0x3]
  404555:	(bad)  
  404556:	push   DWORD PTR [eax-0x3]
  404559:	(bad)  
  40455a:	call   DWORD PTR [eax-0x51000003]
  404560:	std    
  404561:	(bad)  
  404562:	dec    esp
  404564:	std    
  404565:	(bad)  
  404566:	(bad)  
  404567:	jmp    0xfffe:0x8fffffd
  40456e:	call   FWORD PTR [esi]
  404570:	(bad)  
  404571:	(bad)  
  404572:	push   DWORD PTR [esi+edi*8]
  404575:	(bad)  
  404576:	call   DWORD PTR [edx-0x2]
  404579:	(bad)  
  40457a:	jmp    DWORD PTR [esi-0x2]
  40457d:	(bad)  
  40457e:	(bad)  
  40457f:	jnp    0x40457f
  404581:	(bad)  
  404582:	call   DWORD PTR [ebp-0x38000002]
  404588:	(bad)  
  404589:	(bad)  
  40458a:	(bad)  
  40458b:	(bad)  
  40458d:	(bad)  
  40458e:	push   edx
  404590:	(bad)  
  404591:	(bad)  
  404592:	call   FWORD PTR [edi+edi*8]
  404595:	(bad)  
  404596:	call   FWORD PTR ds:0xdeffffff
  40459c:	ins    DWORD PTR es:[edi],dx
  40459d:	adc    DWORD PTR [esi],edx
  40459f:	adc    edx,DWORD PTR ds:0x8c201411
  4045a5:	add    eax,DWORD PTR [eax]
  4045a7:	add    BYTE PTR [eax],ch
  4045a9:	pusha  
  4045aa:	add    BYTE PTR [eax],al
  4045ac:	push   es
  4045ad:	xor    BYTE PTR [esi],dl
  4045af:	sbb    eax,DWORD PTR [ebp+0x1]
  4045b2:	add    BYTE PTR [eax],al
  4045b4:	add    dh,dh
  4045b6:	(bad)  
  4045b7:	(bad)  
  4045b8:	jmp    DWORD PTR [eax]
  4045ba:	nop
  4045bb:	add    eax,DWORD PTR [eax]
  4045bd:	add    BYTE PTR [eax],ch
  4045bf:	pusha  
  4045c0:	add    BYTE PTR [eax],al
  4045c2:	push   es
  4045c3:	sub    eax,DWORD PTR [edx]
  4045c5:	adc    DWORD PTR [eax*2+0x2],edx
  4045cc:	add    BYTE PTR [eax],al
  4045ce:	add    BYTE PTR [eax],al
  4045d0:	in     eax,dx
  4045d1:	(bad)  
  4045d2:	(bad)  
  4045d3:	(bad)  
  4045d4:	fidiv  WORD PTR [esi*2+0x100004b]
  4045db:	adc    al,0xfe
  4045dd:	add    edx,DWORD PTR [ecx]
  4045df:	adc    al,0x20
  4045e1:	xchg   esp,eax
  4045e2:	add    eax,DWORD PTR [eax]
  4045e4:	add    BYTE PTR [eax],ch
  4045e6:	pusha  
  4045e7:	add    BYTE PTR [eax],al
  4045e9:	push   es
  4045ea:	inc    BYTE PTR [ebx]
  4045ec:	pop    edi
  4045ed:	adc    DWORD PTR ds:0x39820,edx
  4045f3:	add    BYTE PTR [eax],ch
  4045f5:	pusha  
  4045f6:	add    BYTE PTR [eax],al
  4045f8:	push   es
  4045f9:	inc    BYTE PTR [ecx]
  4045fb:	pop    edi
  4045fc:	(bad)  
  4045fd:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404601:	add    BYTE PTR [ecx],al
  404603:	sub    BYTE PTR [edi+0x0],dl
  404606:	add    BYTE PTR [edx],cl
  404608:	ficom  WORD PTR [ebx+0x39c20]
  40460e:	add    BYTE PTR [eax],ch
  404610:	pusha  
  404611:	add    BYTE PTR [eax],al
  404613:	push   es
  404614:	sub    BYTE PTR [eax+0x250a0000],bh
  40461a:	es jp  0x40461d
  40461d:	adc    DWORD PTR ds:0x5b28052c,edx
  404623:	add    BYTE PTR [eax],al
  404625:	or     ch,BYTE PTR [edx]
  404627:	add    BYTE PTR [ecx+0x1c],al
  40462a:	add    BYTE PTR [eax],al
  40462c:	add    DWORD PTR [eax],eax
  40462e:	add    BYTE PTR [eax],al
  404630:	add    DWORD PTR [eax],eax
  404632:	add    BYTE PTR [eax],al
  404634:	rol    DWORD PTR [esi],0x0
  404637:	add    dl,ch
  404639:	push   es
  40463a:	add    BYTE PTR [eax],al
  40463c:	or     al,0x0
  40463e:	add    BYTE PTR [eax],al
  404640:	ret    0x6
  404643:	add    BYTE PTR [ebx],bl
  404645:	xor    BYTE PTR [eax+eax*1],al
  404648:	inc    edx
  404649:	add    DWORD PTR [eax],eax
  40464b:	add    BYTE PTR [ebx],bl
  40464d:	add    BYTE PTR [eax],al
  40464f:	adc    DWORD PTR [eax],eax
  404651:	sub    BYTE PTR [ebx+0x0],bl
  404654:	add    BYTE PTR [edx],cl
  404656:	and    BYTE PTR [eax+0x28000003],ah
  40465c:	pusha  
  40465d:	add    BYTE PTR [eax],al
  40465f:	push   es
  404660:	adc    eax,DWORD PTR [eax+eiz*1]
  404663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404664:	add    eax,DWORD PTR [eax]
  404666:	add    BYTE PTR [eax],ch
  404668:	pusha  
  404669:	add    BYTE PTR [eax],al
  40466b:	push   es
  40466c:	adc    eax,DWORD PTR [esi]
  40466e:	and    BYTE PTR [edx+0x28000007],ah
  404674:	push   0xb060000
  404679:	and    BYTE PTR [eax+0x28000003],ch
  40467f:	pusha  
  404680:	add    BYTE PTR [eax],al
  404682:	push   es
  404683:	adc    eax,DWORD PTR [esi]
  404685:	and    BYTE PTR [ebx+eax*1+0x60280000],ch
  40468c:	add    BYTE PTR [eax],al
  40468e:	push   es
  40468f:	sub    BYTE PTR [ebx+0x200a0000],ah
  404695:	jae    0x40469c
  404697:	add    BYTE PTR [eax],al
  404699:	sub    BYTE PTR [eax+0x0],ch
  40469c:	add    BYTE PTR [esi],al
  40469e:	and    eax,0xa42826
  4046a3:	add    BYTE PTR [edx],cl
  4046a5:	and    eax,0xb0200c26
  4046aa:	add    eax,DWORD PTR [eax]
  4046ac:	add    BYTE PTR [eax],ch
  4046ae:	pusha  
  4046af:	add    BYTE PTR [eax],al
  4046b1:	push   es
  4046b2:	adc    eax,DWORD PTR [esi]
  4046b4:	jae    0x40465f
  4046b6:	add    BYTE PTR [eax],al
  4046b8:	or     cl,BYTE PTR ds:0x3b420
  4046be:	add    BYTE PTR [eax],ch
  4046c0:	pusha  
  4046c1:	add    BYTE PTR [eax],al
  4046c3:	push   es
  4046c4:	adc    eax,DWORD PTR [esi]
  4046c6:	or     DWORD PTR [edi],eax
  4046c8:	or     BYTE PTR [edi-0x56],ch
  4046cb:	add    BYTE PTR [eax],al
  4046cd:	or     al,BYTE PTR [eax]
  4046cf:	fnsave [ebx+0x11000000]
  4046d5:	add    eax,0x5110d2b
  4046da:	and    BYTE PTR [eax+0x28000003],bh
  4046e0:	pusha  
  4046e1:	add    BYTE PTR [eax],al
  4046e3:	push   es
  4046e4:	pop    eax
  4046e5:	and    BYTE PTR [ebx+eax*1+0x60280000],bh
  4046ec:	add    BYTE PTR [eax],al
  4046ee:	push   es
  4046ef:	adc    eax,DWORD PTR ds:0x745
  4046f5:	add    BYTE PTR [eax],al
  4046f7:	add    BYTE PTR [eax],al
  4046f9:	add    BYTE PTR [edi],bh
  4046fb:	(bad)  
  4046fc:	(bad)  
  4046fd:	call   DWORD PTR [eax-0x1]
  404700:	(bad)  
  404701:	jmp    DWORD PTR [edi-0x1]
  404704:	(bad)  
  404705:	call   DWORD PTR [esi-0x57000001]
  40470b:	(bad)  
  40470c:	(bad)  
  40470d:	(bad)  
  40470e:	mov    ebp,0xdeffffff
  404713:	arpl   WORD PTR [ecx],dx
  404715:	push   es
  404716:	adc    eax,DWORD PTR ds:0xc0200411
  40471c:	add    eax,DWORD PTR [eax]
  40471e:	add    BYTE PTR [eax],ch
  404720:	pusha  
  404721:	add    BYTE PTR [eax],al
  404723:	push   es
  404724:	xor    BYTE PTR [eax+eiz*1],cl
  404727:	les    eax,FWORD PTR [ebx]
  404729:	add    BYTE PTR [eax],al
  40472b:	sub    BYTE PTR [eax+0x0],ah
  40472e:	add    BYTE PTR [esi],al
  404730:	sub    eax,DWORD PTR [edx]
  404732:	adc    DWORD PTR [eax*2+0x2],eax
  404739:	add    BYTE PTR [eax],al
  40473b:	add    BYTE PTR [eax],al
  40473d:	xchg   edi,eax
  40473e:	(bad)  
  40473f:	(bad)  
  404740:	(bad)  
  404741:	fidiv  WORD PTR [esi*2+0x100004b]
  404748:	adc    al,0xfe
  40474a:	add    edx,DWORD PTR [ecx]
  40474c:	add    al,0x20
  40474e:	enter  0x3,0x0
  404752:	sub    BYTE PTR [eax+0x0],ah
  404755:	add    BYTE PTR [esi],al
  404757:	inc    BYTE PTR [ebx]
  404759:	pop    edi
  40475a:	adc    DWORD PTR ds:0x3cc20,eax
  404760:	add    BYTE PTR [eax],ch
  404762:	pusha  
  404763:	add    BYTE PTR [eax],al
  404765:	push   es
  404766:	inc    BYTE PTR [ecx]
  404768:	pop    edi
  404769:	(bad)  
  40476a:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  40476e:	add    BYTE PTR [ecx],al
  404770:	sub    BYTE PTR [edi+0x0],dl
  404773:	add    BYTE PTR [edx],cl
  404775:	ficomp WORD PTR [ebp+0x3d020]
  40477b:	add    BYTE PTR [eax],ch
  40477d:	pusha  
  40477e:	add    BYTE PTR [eax],al
  404780:	push   es
  404781:	sub    BYTE PTR [eax+0x7a0a0000],bh
  404787:	push   es
  404788:	adc    DWORD PTR ds:0x5b28052c,eax
  40478e:	add    BYTE PTR [eax],al
  404790:	or     ch,BYTE PTR [edx]
  404792:	add    BYTE PTR [eax],al
  404794:	add    DWORD PTR [eax],edx
  404796:	add    BYTE PTR [eax],al
  404798:	add    DWORD PTR [eax],eax
  40479a:	add    DWORD PTR [eax],eax
  40479c:	repnz sbb eax,DWORD PTR [ecx]
  40479f:	or     al,0xf3
  4047a1:	add    BYTE PTR [eax],al
  4047a3:	add    BYTE PTR [ebx],bl
  4047a5:	xor    BYTE PTR [eax+eax*1],al
  4047a8:	stos   DWORD PTR es:[edi],eax
  4047a9:	add    DWORD PTR [eax],eax
  4047ab:	add    BYTE PTR [eax+eax*1],bl
  4047ae:	add    BYTE PTR [ecx],dl
  4047b0:	add    BYTE PTR [eax],ch
  4047b2:	pop    ebx
  4047b3:	add    BYTE PTR [eax],al
  4047b5:	or     ah,BYTE PTR [eax]
  4047b7:	aam    0x3
  4047b9:	add    BYTE PTR [eax],al
  4047bb:	sub    BYTE PTR [eax+0x0],ah
  4047be:	add    BYTE PTR [esi],al
  4047c0:	adc    eax,DWORD PTR [eax+eiz*1]
  4047c3:	fadd   DWORD PTR [ebx]
  4047c5:	add    BYTE PTR [eax],al
  4047c7:	sub    BYTE PTR [eax+0x0],ah
  4047ca:	add    BYTE PTR [esi],al
  4047cc:	adc    eax,DWORD PTR [esi]
  4047ce:	and    ch,dh
  4047d0:	pop    es
  4047d1:	add    BYTE PTR [eax],al
  4047d3:	sub    BYTE PTR [eax+0x0],ch
  4047d6:	add    BYTE PTR [esi],al
  4047d8:	and    eax,0xb92826
  4047dd:	add    BYTE PTR [edx],cl
  4047df:	and    eax,0x3dc2026
  4047e4:	add    BYTE PTR [eax],al
  4047e6:	sub    BYTE PTR [eax+0x0],ah
  4047e9:	add    BYTE PTR [esi],al
  4047eb:	inc    BYTE PTR [ecx]
  4047ed:	adc    eax,DWORD PTR [edi]
  4047ef:	adc    DWORD PTR [edi],eax
  4047f1:	sub    al,0x33
  4047f3:	sbb    al,BYTE PTR [ebp+0x1]
  4047f6:	add    BYTE PTR [eax],al
  4047f8:	add    dh,dh
  4047fa:	(bad)  
  4047fb:	(bad)  
  4047fc:	call   DWORD PTR [edi]
  4047fe:	sub    eax,0x46d006
  404803:	add    BYTE PTR [esi],al
  404805:	es and al,ah
  404808:	add    eax,DWORD PTR [eax]
  40480a:	add    BYTE PTR [eax],ch
  40480c:	pusha  
  40480d:	add    BYTE PTR [eax],al
  40480f:	push   es
  404810:	adc    eax,DWORD PTR [esi]
  404812:	and    ch,dh
  404814:	pop    es
  404815:	add    BYTE PTR [eax],al
  404817:	sub    BYTE PTR [eax+0x0],ch
  40481a:	add    BYTE PTR [esi],al
  40481c:	and    eax,0xba2826
  404821:	add    BYTE PTR [edx],cl
  404823:	and    eax,0x20002626
  404828:	in     al,0x3
  40482a:	add    BYTE PTR [eax],al
  40482c:	sub    BYTE PTR [eax+0x0],ah
  40482f:	add    BYTE PTR [esi],al
  404831:	adc    eax,DWORD PTR [esi]
  404833:	and    BYTE PTR [edx+0x28000007],ah
  404839:	push   0x25060000
  40483e:	or     esp,DWORD PTR es:[eax]
  404841:	call   0x28404849
  404846:	pusha  
  404847:	add    BYTE PTR [eax],al
  404849:	push   es
  40484a:	adc    eax,DWORD PTR [esi]
  40484c:	and    BYTE PTR [esi+eax*1],dh
  40484f:	add    BYTE PTR [eax],al
  404851:	sub    BYTE PTR [eax+0x0],ch
  404854:	add    BYTE PTR [esi],al
  404856:	and    eax,0xec200c26
  40485b:	add    eax,DWORD PTR [eax]
  40485d:	add    BYTE PTR [eax],ch
  40485f:	pusha  
  404860:	add    BYTE PTR [eax],al
  404862:	push   es
  404863:	adc    eax,DWORD PTR [esi]
  404865:	jae    0x404810
  404867:	add    BYTE PTR [eax],al
  404869:	or     cl,BYTE PTR ds:0x3f020
  40486f:	add    BYTE PTR [eax],ch
  404871:	pusha  
  404872:	add    BYTE PTR [eax],al
  404874:	push   es
  404875:	adc    eax,DWORD PTR [esi]
  404877:	or     DWORD PTR [edi],eax
  404879:	or     BYTE PTR [edi-0x56],ch
  40487c:	add    BYTE PTR [eax],al
  40487e:	or     al,BYTE PTR [eax]
  404880:	(bad)  
  404882:	add    BYTE PTR [eax],al
  404884:	add    BYTE PTR [ecx],dl
  404886:	add    eax,0x5110d2b
  40488b:	and    ah,dh
  40488d:	add    eax,DWORD PTR [eax]
  40488f:	add    BYTE PTR [eax],ch
  404891:	pusha  
  404892:	add    BYTE PTR [eax],al
  404894:	push   es
  404895:	pop    eax
  404896:	and    al,bh
  404898:	add    eax,DWORD PTR [eax]
  40489a:	add    BYTE PTR [eax],ch
  40489c:	pusha  
  40489d:	add    BYTE PTR [eax],al
  40489f:	push   es
  4048a0:	adc    eax,DWORD PTR ds:0xa45
  4048a6:	add    BYTE PTR [eax],al
  4048a8:	add    BYTE PTR [eax],al
  4048aa:	add    dl,ah
  4048ac:	(bad)  
  4048ad:	(bad)  
  4048ae:	push   ebx
  4048b0:	(bad)  
  4048b1:	(bad)  
  4048b2:	push   DWORD PTR [edi]
  4048b4:	(bad)  
  4048b5:	(bad)  
  4048b6:	call   DWORD PTR [edi-0x1]
  4048b9:	(bad)  
  4048ba:	call   FWORD PTR [eax-0x1]
  4048bd:	(bad)  
  4048be:	push   DWORD PTR [ecx-0x1]
  4048c1:	(bad)  
  4048c2:	dec    DWORD PTR [edx-0x63000001]
  4048c8:	(bad)  
  4048c9:	(bad)  
  4048ca:	push   DWORD PTR [ecx-0x21000001]
  4048d0:	ins    DWORD PTR es:[edi],dx
  4048d1:	adc    DWORD PTR [esi],eax
  4048d3:	adc    eax,DWORD PTR ds:0xfc200411
  4048d9:	add    eax,DWORD PTR [eax]
  4048db:	add    BYTE PTR [eax],ch
  4048dd:	pusha  
  4048de:	add    BYTE PTR [eax],al
  4048e0:	push   es
  4048e1:	xor    BYTE PTR [esi],dl
  4048e3:	sbb    BYTE PTR [ebp+0x1],al
  4048e6:	add    BYTE PTR [eax],al
  4048e8:	add    dh,dh
  4048ea:	(bad)  
  4048eb:	(bad)  
  4048ec:	jmp    DWORD PTR [eax]
  4048ee:	add    BYTE PTR [eax+eax*1],al
  4048f1:	add    BYTE PTR [eax],ch
  4048f3:	pusha  
  4048f4:	add    BYTE PTR [eax],al
  4048f6:	push   es
  4048f7:	sub    eax,DWORD PTR [edx]
  4048f9:	adc    DWORD PTR [eax*2+0x2],eax
  404900:	add    BYTE PTR [eax],al
  404902:	add    BYTE PTR [eax],al
  404904:	cmp    edi,0x34deffff
  40490a:	jne    0x404957
  40490c:	add    BYTE PTR [eax],al
  40490e:	add    DWORD PTR [esi+edi*8],edx
  404911:	add    edx,DWORD PTR [ecx]
  404913:	add    al,0x20
  404915:	add    al,0x4
  404917:	add    BYTE PTR [eax],al
  404919:	sub    BYTE PTR [eax+0x0],ah
  40491c:	add    BYTE PTR [esi],al
  40491e:	inc    BYTE PTR [ebx]
  404920:	pop    edi
  404921:	adc    DWORD PTR ds:0x40820,eax
  404927:	add    BYTE PTR [eax],ch
  404929:	pusha  
  40492a:	add    BYTE PTR [eax],al
  40492c:	push   es
  40492d:	inc    BYTE PTR [ecx]
  40492f:	pop    edi
  404930:	(bad)  
  404931:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404935:	add    BYTE PTR [ecx],al
  404937:	sub    BYTE PTR [edi+0x0],dl
  40493a:	add    BYTE PTR [edx],cl
  40493c:	ficom  WORD PTR [ebx+0x40c20]
  404942:	add    BYTE PTR [eax],ch
  404944:	pusha  
  404945:	add    BYTE PTR [eax],al
  404947:	push   es
  404948:	sub    BYTE PTR [eax+0x250a0000],bh
  40494e:	es jp  0x404957
  404951:	adc    DWORD PTR ds:0x5b28052c,eax
  404957:	add    BYTE PTR [eax],al
  404959:	or     ch,BYTE PTR [edx]
  40495b:	add    BYTE PTR [ecx+0x1c],al
  40495e:	add    BYTE PTR [eax],al
  404960:	add    DWORD PTR [eax],eax
  404962:	add    BYTE PTR [eax],al
  404964:	add    DWORD PTR [eax],eax
  404966:	add    BYTE PTR [eax],al
  404968:	pop    ecx
  404969:	add    DWORD PTR [eax],eax
  40496b:	add    BYTE PTR [edx+0xc000001],al
  404971:	add    BYTE PTR [eax],al
  404973:	add    BYTE PTR [edx+0x1],bl
  404976:	add    BYTE PTR [eax],al
  404978:	sbb    esi,DWORD PTR [eax]
  40497a:	or     BYTE PTR [eax],al
  40497c:	pusha  
  40497d:	add    DWORD PTR [eax],eax
  40497f:	add    BYTE PTR ds:0x110000,bl
  404985:	sub    BYTE PTR [ebx+0x0],bl
  404988:	add    BYTE PTR [edx],cl
  40498a:	and    BYTE PTR [eax],dl
  40498c:	add    al,0x0
  40498e:	add    BYTE PTR [eax],ch
  404990:	pusha  
  404991:	add    BYTE PTR [eax],al
  404993:	push   es
  404994:	or     eax,0x41420
  404999:	add    BYTE PTR [eax],ch
  40499b:	pusha  
  40499c:	add    BYTE PTR [eax],al
  40499e:	push   es
  40499f:	adc    eax,DWORD PTR ds:0xcd014
  4049a5:	add    BYTE PTR [edx],al
  4049a7:	sub    BYTE PTR [eax+0x0],dl
  4049aa:	add    BYTE PTR [edx],cl
  4049ac:	and    eax,0x8102026
  4049b1:	add    BYTE PTR [eax],al
  4049b3:	sub    BYTE PTR [eax+0x0],ch
  4049b6:	add    BYTE PTR [esi],al
  4049b8:	and    eax,0x4182026
  4049bd:	add    BYTE PTR [eax],al
  4049bf:	sub    BYTE PTR [eax+0x0],ah
  4049c2:	add    BYTE PTR [esi],al
  4049c4:	lea    ebp,[ecx+0x0]
  4049c7:	add    BYTE PTR [ecx],al
  4049c9:	or     al,0x8
  4049cb:	and    BYTE PTR [esp+eax*1],bl
  4049ce:	add    BYTE PTR [eax],al
  4049d0:	sub    BYTE PTR [eax+0x0],ah
  4049d3:	add    BYTE PTR [esi],al
  4049d5:	add    ch,BYTE PTR [edi+0x50]
  4049d8:	add    BYTE PTR [eax],al
  4049da:	push   es
  4049db:	and    eax,0x292826
  4049e0:	add    BYTE PTR [edx],cl
  4049e2:	and    eax,0x800a226
  4049e7:	adc    al,0x14
  4049e9:	adc    al,0x28
  4049eb:	mov    ebx,0x250a0000
  4049f0:	sub    BYTE PTR es:[edi+0x250a0000],ah
  4049f7:	or     esp,DWORD PTR es:[eax]
  4049fa:	and    BYTE PTR [eax+eax*1],al
  4049fd:	add    BYTE PTR [eax],ch
  4049ff:	pusha  
  404a00:	add    BYTE PTR [eax],al
  404a02:	push   es
  404a03:	adc    eax,DWORD PTR ds:0xc3dd0a07
  404a09:	add    BYTE PTR [eax],al
  404a0b:	add    ch,bl
  404a0d:	mov    esi,0x11000000
  404a12:	add    al,0x2b
  404a14:	or     eax,0x24200411
  404a19:	add    al,0x0
  404a1b:	add    BYTE PTR [eax],ch
  404a1d:	pusha  
  404a1e:	add    BYTE PTR [eax],al
  404a20:	push   es
  404a21:	pop    eax
  404a22:	and    BYTE PTR [eax],ch
  404a24:	add    al,0x0
  404a26:	add    BYTE PTR [eax],ch
  404a28:	pusha  
  404a29:	add    BYTE PTR [eax],al
  404a2b:	push   es
  404a2c:	adc    eax,DWORD PTR [eax*2+0x5]
  404a33:	add    BYTE PTR [eax],al
  404a35:	add    BYTE PTR [eax],al
  404a37:	ds (bad) 
  404a39:	(bad)  
  404a3a:	dec    DWORD PTR [esi-0x1]
  404a3d:	(bad)  
  404a3e:	push   DWORD PTR [edx-0x3a000001]
  404a44:	(bad)  
  404a45:	(bad)  
  404a46:	(bad)  
  404a47:	fnsave [ebx+0x0]
  404a4a:	add    BYTE PTR [eax],al
  404a4c:	adc    DWORD PTR ds:0x20090413,eax
  404a52:	sub    al,0x4
  404a54:	add    BYTE PTR [eax],al
  404a56:	sub    BYTE PTR [eax+0x0],ah
  404a59:	add    BYTE PTR [esi],al
  404a5b:	xor    BYTE PTR [edi],bl
  404a5d:	sbb    eax,DWORD PTR [ebp+0x1]
  404a60:	add    BYTE PTR [eax],al
  404a62:	add    dh,dh
  404a64:	(bad)  
  404a65:	(bad)  
  404a66:	call   DWORD PTR [edi]
  404a68:	sub    eax,0x47d006
  404a6d:	add    BYTE PTR [esi],al
  404a6f:	and    BYTE PTR es:[eax],dh
  404a72:	add    al,0x0
  404a74:	add    BYTE PTR [eax],ch
  404a76:	pusha  
  404a77:	add    BYTE PTR [eax],al
  404a79:	push   es
  404a7a:	sub    eax,DWORD PTR [ecx]
  404a7c:	or     DWORD PTR [ebp+0x2],eax
  404a7f:	add    BYTE PTR [eax],al
  404a81:	add    BYTE PTR [eax],al
  404a83:	add    BYTE PTR [eax],al
  404a85:	add    BYTE PTR [ebx-0x21000001],cl
  404a8b:	xor    esi,DWORD PTR [ebp+0x4b]
  404a8e:	add    BYTE PTR [eax],al
  404a90:	add    DWORD PTR [esi+edi*8],edx
  404a93:	add    ecx,DWORD PTR [ecx]
  404a95:	and    BYTE PTR [esp+eax*1],dh
  404a98:	add    BYTE PTR [eax],al
  404a9a:	sub    BYTE PTR [eax+0x0],ah
  404a9d:	add    BYTE PTR [esi],al
  404a9f:	inc    BYTE PTR [ebx]
  404aa1:	pop    edi
  404aa2:	adc    DWORD PTR [eax+eiz*1],eax
  404aa5:	cmp    BYTE PTR [eax+eax*1],al
  404aa8:	add    BYTE PTR [eax],ch
  404aaa:	pusha  
  404aab:	add    BYTE PTR [eax],al
  404aad:	push   es
  404aae:	inc    BYTE PTR [ecx]
  404ab0:	pop    edi
  404ab1:	(bad)  
  404ab2:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404ab6:	add    BYTE PTR [ecx],al
  404ab8:	sub    BYTE PTR [edi+0x0],dl
  404abb:	add    BYTE PTR [edx],cl
  404abd:	fimul  WORD PTR [ebp+0x43c20]
  404ac3:	add    BYTE PTR [eax],ch
  404ac5:	pusha  
  404ac6:	add    BYTE PTR [eax],al
  404ac8:	push   es
  404ac9:	sub    BYTE PTR [eax+0x7a0a0000],bh
  404acf:	push   es
  404ad0:	adc    DWORD PTR [esp+ebp*1],eax
  404ad3:	bndldx bnd0,[ebp+0x1]
  404ad7:	add    BYTE PTR [eax],al
  404ad9:	add    dh,dh
  404adb:	(bad)  
  404adc:	(bad)  
  404add:	jmp    FWORD PTR [eax]
  404adf:	pop    ebx
  404ae0:	add    BYTE PTR [eax],al
  404ae2:	or     ch,BYTE PTR [edx]
  404ae4:	inc    ecx
  404ae5:	sbb    al,0x0
  404ae7:	add    BYTE PTR [ecx],al
  404ae9:	add    BYTE PTR [eax],al
  404aeb:	add    BYTE PTR [ecx],al
  404aed:	add    BYTE PTR [eax],al
  404aef:	add    BYTE PTR [edi],al
  404af1:	add    DWORD PTR [eax],eax
  404af3:	add    BYTE PTR [edi],ch
  404af5:	add    DWORD PTR [eax],eax
  404af7:	add    BYTE PTR [eax+eax*1],cl
  404afa:	add    BYTE PTR [eax],al
  404afc:	or     BYTE PTR [ecx],al
  404afe:	add    BYTE PTR [eax],al
  404b00:	sbb    esi,DWORD PTR [eax]
  404b02:	add    eax,0x18d00
  404b07:	add    BYTE PTR [esi],bl
  404b09:	add    BYTE PTR [eax],al
  404b0b:	adc    DWORD PTR [eax],eax
  404b0d:	sub    BYTE PTR [ebx+0x0],bl
  404b10:	add    BYTE PTR [edx],cl
  404b12:	and    BYTE PTR [eax+0x4],al
  404b15:	add    BYTE PTR [eax],al
  404b17:	sub    BYTE PTR [eax+0x0],ah
  404b1a:	add    BYTE PTR [esi],al
  404b1c:	adc    eax,DWORD PTR ds:0x44420
  404b22:	add    BYTE PTR [eax],ch
  404b24:	pusha  
  404b25:	add    BYTE PTR [eax],al
  404b27:	push   es
  404b28:	adc    eax,DWORD PTR [edi]
  404b2a:	jae    0x404ae8
  404b2c:	add    BYTE PTR [eax],al
  404b2e:	or     cl,BYTE PTR ds:0x44820
  404b34:	add    BYTE PTR [eax],ch
  404b36:	pusha  
  404b37:	add    BYTE PTR [eax],al
  404b39:	push   es
  404b3a:	adc    eax,DWORD PTR [edi]
  404b3c:	or     DWORD PTR [eax],esp
  404b3e:	dec    esp
  404b3f:	add    al,0x0
  404b41:	add    BYTE PTR [eax],ch
  404b43:	pusha  
  404b44:	add    BYTE PTR [eax],al
  404b46:	push   es
  404b47:	and    BYTE PTR [eax+0x4],dl
  404b4a:	add    BYTE PTR [eax],al
  404b4c:	sub    BYTE PTR [eax+0x0],ah
  404b4f:	add    BYTE PTR [esi],al
  404b51:	outs   dx,DWORD PTR ds:[esi]
  404b52:	mov    ebp,0x250a0000
  404b57:	adc    eax,DWORD PTR es:[eax+eiz*1]
  404b5b:	push   esp
  404b5c:	add    al,0x0
  404b5e:	add    BYTE PTR [eax],ch
  404b60:	pusha  
  404b61:	add    BYTE PTR [eax],al
  404b63:	push   es
  404b64:	adc    eax,DWORD PTR [edi]
  404b66:	jae    0x404b11
  404b68:	add    BYTE PTR [eax],al
  404b6a:	or     cl,BYTE PTR [eax+eiz*1]
  404b6d:	pop    eax
  404b6e:	add    al,0x0
  404b70:	add    BYTE PTR [eax],ch
  404b72:	pusha  
  404b73:	add    BYTE PTR [eax],al
  404b75:	push   es
  404b76:	adc    eax,DWORD PTR [edi]
  404b78:	or     BYTE PTR [eax],ah
  404b7a:	das    
  404b7b:	or     BYTE PTR [eax],al
  404b7d:	add    BYTE PTR [eax],ch
  404b7f:	push   0x25060000
  404b84:	adc    DWORD PTR es:[eax+ebp*1],eax
  404b88:	mov    esi,0x250a0000
  404b8d:	sub    BYTE PTR es:[eax+eax*1+0x26250a00],ah
  404b95:	outs   dx,DWORD PTR ds:[esi]
  404b96:	mov    edi,0x250a0000
  404b9b:	or     ah,BYTE PTR es:[eax]
  404b9e:	pop    esp
  404b9f:	add    al,0x0
  404ba1:	add    BYTE PTR [eax],ch
  404ba3:	pusha  
  404ba4:	add    BYTE PTR [eax],al
  404ba6:	push   es
  404ba7:	adc    eax,DWORD PTR [edi]
  404ba9:	push   es
  404baa:	or     ebx,ebp
  404bac:	aam    0x0
  404bae:	add    BYTE PTR [eax],al
  404bb0:	(bad)  
  404bb2:	add    BYTE PTR [eax],al
  404bb4:	add    BYTE PTR [ecx],dl
  404bb6:	push   es
  404bb7:	sub    ecx,DWORD PTR ds:0x60200611
  404bbd:	add    al,0x0
  404bbf:	add    BYTE PTR [eax],ch
  404bc1:	pusha  
  404bc2:	add    BYTE PTR [eax],al
  404bc4:	push   es
  404bc5:	pop    eax
  404bc6:	and    BYTE PTR [esp+eax*1+0x0],ah
  404bca:	add    BYTE PTR [eax],ch
  404bcc:	pusha  
  404bcd:	add    BYTE PTR [eax],al
  404bcf:	push   es
  404bd0:	adc    eax,DWORD PTR [esi]
  404bd2:	inc    ebp
  404bd3:	or     BYTE PTR [eax],al
  404bd5:	add    BYTE PTR [eax],al
  404bd7:	add    BYTE PTR [eax],al
  404bd9:	add    BYTE PTR [eax],al
  404bdb:	push   ss
  404bdc:	(bad)  
  404bdd:	(bad)  
  404bde:	jmp    DWORD PTR [edi]
  404be0:	(bad)  
  404be1:	(bad)  
  404be2:	(bad)  
  404be3:	cmp    edi,edi
  404be5:	(bad)  
  404be6:	jmp    DWORD PTR [ebx-0x1]
  404be9:	(bad)  
  404bea:	push   DWORD PTR [ebp-0x1]
  404bed:	(bad)  
  404bee:	jmp    DWORD PTR [esi-0x46000001]
  404bf4:	(bad)  
  404bf5:	(bad)  
  404bf6:	(bad)  
  404bf7:	fnsave [esi+0x0]
  404bfa:	add    BYTE PTR [eax],al
  404bfc:	adc    DWORD PTR [edi],eax
  404bfe:	adc    eax,DWORD PTR [esi]
  404c00:	adc    DWORD PTR ds:0x46820,eax
  404c06:	add    BYTE PTR [eax],ch
  404c08:	pusha  
  404c09:	add    BYTE PTR [eax],al
  404c0b:	push   es
  404c0c:	xor    BYTE PTR [edi],bl
  404c0e:	pop    ss
  404c0f:	inc    ebp
  404c10:	add    DWORD PTR [eax],eax
  404c12:	add    BYTE PTR [eax],al
  404c14:	idiv   bh
  404c16:	(bad)  
  404c17:	call   DWORD PTR [edi]
  404c19:	sub    eax,0x48d006
  404c1e:	add    BYTE PTR [esi],al
  404c20:	and    BYTE PTR es:[esp+eax*1+0x0],ch
  404c25:	add    BYTE PTR [eax],ch
  404c27:	pusha  
  404c28:	add    BYTE PTR [eax],al
  404c2a:	push   es
  404c2b:	sub    eax,DWORD PTR [edx]
  404c2d:	adc    DWORD PTR ds:0x245,eax
  404c33:	add    BYTE PTR [eax],al
  404c35:	add    BYTE PTR [eax],al
  404c37:	add    BYTE PTR [ebp-0x1],bh
  404c3a:	(bad)  
  404c3b:	(bad)  
  404c3c:	fidiv  WORD PTR [esi*2+0x100004b]
  404c43:	adc    al,0xfe
  404c45:	add    edx,DWORD PTR [ecx]
  404c47:	add    eax,0x47020
  404c4c:	add    BYTE PTR [eax],ch
  404c4e:	pusha  
  404c4f:	add    BYTE PTR [eax],al
  404c51:	push   es
  404c52:	inc    BYTE PTR [ebx]
  404c54:	pop    edi
  404c55:	adc    DWORD PTR [esi],eax
  404c57:	and    BYTE PTR [esp+eax*1+0x0],dh
  404c5b:	add    BYTE PTR [eax],ch
  404c5d:	pusha  
  404c5e:	add    BYTE PTR [eax],al
  404c60:	push   es
  404c61:	inc    BYTE PTR [ecx]
  404c63:	pop    edi
  404c64:	(bad)  
  404c65:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404c69:	add    BYTE PTR [ecx],al
  404c6b:	sub    BYTE PTR [edi+0x0],dl
  404c6e:	add    BYTE PTR [edx],cl
  404c70:	fimul  WORD PTR [edx+0x47820]
  404c76:	add    BYTE PTR [eax],ch
  404c78:	pusha  
  404c79:	add    BYTE PTR [eax],al
  404c7b:	push   es
  404c7c:	sub    BYTE PTR [eax+0x250a0000],bh
  404c82:	es jp  0x404c8c
  404c85:	adc    DWORD PTR [esi],eax
  404c87:	sub    al,0xf
  404c89:	sbb    al,BYTE PTR [ebp+0x1]
  404c8c:	add    BYTE PTR [eax],al
  404c8e:	add    dh,dh
  404c90:	(bad)  
  404c91:	(bad)  
  404c92:	jmp    FWORD PTR [eax]
  404c94:	pop    ebx
  404c95:	add    BYTE PTR [eax],al
  404c97:	or     ch,BYTE PTR [edx]
  404c99:	add    BYTE PTR [eax],al
  404c9b:	add    BYTE PTR [ecx+0x1c],al
  404c9e:	add    BYTE PTR [eax],al
  404ca0:	add    DWORD PTR [eax],eax
  404ca2:	add    BYTE PTR [eax],al
  404ca4:	add    DWORD PTR [eax],eax
  404ca6:	add    BYTE PTR [eax],al
  404ca8:	xor    DWORD PTR [ecx],eax
  404caa:	add    BYTE PTR [eax],al
  404cac:	pop    edx
  404cad:	add    DWORD PTR [eax],eax
  404caf:	add    BYTE PTR [eax+eax*1],cl
  404cb2:	add    BYTE PTR [eax],al
  404cb4:	xor    al,BYTE PTR [ecx]
  404cb6:	add    BYTE PTR [eax],al
  404cb8:	sbb    esi,DWORD PTR [eax]
  404cba:	pop    es
  404cbb:	add    BYTE PTR [eax+0x3],al
  404cbe:	add    BYTE PTR [eax],al
  404cc0:	pop    ds
  404cc1:	add    BYTE PTR [eax],al
  404cc3:	adc    DWORD PTR [eax],eax
  404cc5:	sub    BYTE PTR [ebx+0x0],bl
  404cc8:	add    BYTE PTR [edx],cl
  404cca:	and    BYTE PTR [esp+eax*1+0x0],bh
  404cce:	add    BYTE PTR [eax],ch
  404cd0:	pusha  
  404cd1:	add    BYTE PTR [eax],al
  404cd3:	push   es
  404cd4:	adc    eax,DWORD PTR ds:0x48020
  404cda:	add    BYTE PTR [eax],ch
  404cdc:	pusha  
  404cdd:	add    BYTE PTR [eax],al
  404cdf:	push   es
  404ce0:	adc    eax,DWORD PTR [edi]
  404ce2:	and    BYTE PTR [edx],bh
  404ce4:	add    eax,0x68280000
  404ce9:	add    BYTE PTR [eax],al
  404ceb:	push   es
  404cec:	and    eax,0x9e2826
  404cf1:	add    BYTE PTR [edx],cl
  404cf3:	adc    ecx,DWORD PTR [eax]
  404cf5:	adc    DWORD PTR [eax],ecx
  404cf7:	cmp    edi,edx
  404cf9:	add    BYTE PTR [eax],al
  404cfb:	add    BYTE PTR [eax],bl
  404cfd:	inc    ebp
  404cfe:	add    DWORD PTR [eax],eax
  404d00:	add    BYTE PTR [eax],al
  404d02:	idiv   bh
  404d04:	(bad)  
  404d05:	call   DWORD PTR [edi]
  404d07:	sub    eax,0x49d006
  404d0c:	add    BYTE PTR [esi],al
  404d0e:	and    BYTE PTR es:[esp+eax*1+0x60280000],al
  404d16:	add    BYTE PTR [eax],al
  404d18:	push   es
  404d19:	adc    eax,DWORD PTR [edi]
  404d1b:	and    BYTE PTR [edx],bh
  404d1d:	add    eax,0x68280000
  404d22:	add    BYTE PTR [eax],al
  404d24:	push   es
  404d25:	and    eax,0x9f7326
  404d2a:	add    BYTE PTR [edx],cl
  404d2c:	adc    eax,DWORD PTR [eax+eiz*1]
  404d2f:	mov    BYTE PTR [eax+eax*1],al
  404d32:	add    BYTE PTR [eax],ch
  404d34:	pusha  
  404d35:	add    BYTE PTR [eax],al
  404d37:	push   es
  404d38:	adc    eax,DWORD PTR [edi]
  404d3a:	adc    DWORD PTR [edi+ebp*2],eax
  404d3d:	mov    al,ds:0x250a0000
  404d42:	es or  al,0x20
  404d45:	mov    WORD PTR [eax+eax*1],es
  404d48:	add    BYTE PTR [eax],ch
  404d4a:	pusha  
  404d4b:	add    BYTE PTR [eax],al
  404d4d:	push   es
  404d4e:	adc    eax,DWORD PTR [edi]
  404d50:	or     BYTE PTR [eax],ah
  404d52:	ins    DWORD PTR es:[edi],dx
  404d53:	add    eax,0x68280000
  404d58:	add    BYTE PTR [eax],al
  404d5a:	push   es
  404d5b:	and    eax,0x5b7226
  404d60:	add    BYTE PTR [eax+0x20],dh
  404d63:	nop
  404d64:	add    al,0x0
  404d66:	add    BYTE PTR [eax],ch
  404d68:	pusha  
  404d69:	add    BYTE PTR [eax],al
  404d6b:	push   es
  404d6c:	and    BYTE PTR [esp+eax*1+0x60280000],dl
  404d73:	add    BYTE PTR [eax],al
  404d75:	push   es
  404d76:	and    BYTE PTR [eax+0x28000004],bl
  404d7c:	pusha  
  404d7d:	add    BYTE PTR [eax],al
  404d7f:	push   es
  404d80:	sub    BYTE PTR [ecx+0x250a0000],ah
  404d86:	and    BYTE PTR es:[eax+0x5],dh
  404d8a:	add    BYTE PTR [eax],al
  404d8c:	sub    BYTE PTR [eax+0x0],ch
  404d8f:	add    BYTE PTR [esi],al
  404d91:	and    eax,0x5b7226
  404d96:	add    BYTE PTR [eax+0x20],dh
  404d99:	pushf  
  404d9a:	add    al,0x0
  404d9c:	add    BYTE PTR [eax],ch
  404d9e:	pusha  
  404d9f:	add    BYTE PTR [eax],al
  404da1:	push   es
  404da2:	and    BYTE PTR [eax+0x28000004],ah
  404da8:	pusha  
  404da9:	add    BYTE PTR [eax],al
  404dab:	push   es
  404dac:	and    BYTE PTR [esp+eax*1+0x60280000],ah
  404db3:	add    BYTE PTR [eax],al
  404db5:	push   es
  404db6:	sub    BYTE PTR [ecx+0xd0a0000],ah
  404dbc:	and    BYTE PTR [eax+0x28000004],ch
  404dc2:	pusha  
  404dc3:	add    BYTE PTR [eax],al
  404dc5:	push   es
  404dc6:	adc    eax,DWORD PTR [edi]
  404dc8:	or     DWORD PTR [edi-0x5e],ebp
  404dcb:	add    BYTE PTR [eax],al
  404dcd:	or     ah,BYTE PTR ds:0x292b0a26
  404dd3:	and    BYTE PTR [esp+eax*1+0x60280000],ch
  404dda:	add    BYTE PTR [eax],al
  404ddc:	push   es
  404ddd:	adc    eax,DWORD PTR [edi]
  404ddf:	add    BYTE PTR [eax],ah
  404de1:	mov    al,0x4
  404de3:	add    BYTE PTR [eax],al
  404de5:	sub    BYTE PTR [eax+0x0],ah
  404de8:	add    BYTE PTR [esi],al
  404dea:	adc    eax,DWORD PTR [edi]
  404dec:	add    ch,BYTE PTR [edi+0x48]
  404def:	add    BYTE PTR [eax],al
  404df1:	push   es
  404df2:	and    eax,0xa72826
  404df7:	add    BYTE PTR [edx],cl
  404df9:	and    eax,0x20000a26
  404dfe:	mov    ah,0x4
  404e00:	add    BYTE PTR [eax],al
  404e02:	sub    BYTE PTR [eax+0x0],ah
  404e05:	add    BYTE PTR [esi],al
  404e07:	adc    eax,DWORD PTR [edi]
  404e09:	push   es
  404e0a:	and    BYTE PTR [eax+0x8],ch
  404e0d:	add    BYTE PTR [eax],al
  404e0f:	sub    BYTE PTR [eax+0x0],ch
  404e12:	add    BYTE PTR [esi],al
  404e14:	and    eax,0x3b6f26
  404e19:	add    BYTE PTR [edx],cl
  404e1b:	and    eax,0x4b82026
  404e20:	add    BYTE PTR [eax],al
  404e22:	sub    BYTE PTR [eax+0x0],ah
  404e25:	add    BYTE PTR [esi],al
  404e27:	inc    BYTE PTR [ecx]
  404e29:	adc    ecx,DWORD PTR [eax]
  404e2b:	adc    DWORD PTR [eax],ecx
  404e2d:	sub    al,0x23
  404e2f:	sbb    al,0x45
  404e31:	add    DWORD PTR [eax],eax
  404e33:	add    BYTE PTR [eax],al
  404e35:	idiv   bh
  404e37:	(bad)  
  404e38:	jmp    DWORD PTR [eax]
  404e3a:	mov    esp,0x28000004
  404e3f:	pusha  
  404e40:	add    BYTE PTR [eax],al
  404e42:	push   es
  404e43:	adc    eax,DWORD PTR [edi]
  404e45:	and    BYTE PTR [ebx+0x8],ch
  404e48:	add    BYTE PTR [eax],al
  404e4a:	sub    BYTE PTR [eax+0x0],ch
  404e4d:	add    BYTE PTR [esi],al
  404e4f:	and    eax,0x20000a26
  404e54:	rol    BYTE PTR [eax+eax*1],0x0
  404e58:	sub    BYTE PTR [eax+0x0],ah
  404e5b:	add    BYTE PTR [esi],al
  404e5d:	adc    eax,DWORD PTR [edi]
  404e5f:	and    ch,dh
  404e61:	pop    es
  404e62:	add    BYTE PTR [eax],al
  404e64:	sub    BYTE PTR [eax+0x0],ch
  404e67:	add    BYTE PTR [esi],al
  404e69:	and    eax,0xb92826
  404e6e:	add    BYTE PTR [edx],cl
  404e70:	and    eax,0x4c42026
  404e75:	add    BYTE PTR [eax],al
  404e77:	sub    BYTE PTR [eax+0x0],ah
  404e7a:	add    BYTE PTR [esi],al
  404e7c:	inc    BYTE PTR [ecx]
  404e7e:	adc    ecx,DWORD PTR [eax]
  404e80:	adc    DWORD PTR [eax],ecx
  404e82:	sub    al,0x28
  404e84:	pop    ss
  404e85:	inc    ebp
  404e86:	add    DWORD PTR [eax],eax
  404e88:	add    BYTE PTR [eax],al
  404e8a:	idiv   bh
  404e8c:	(bad)  
  404e8d:	jmp    DWORD PTR [eax]
  404e8f:	enter  0x4,0x0
  404e93:	sub    BYTE PTR [eax+0x0],ah
  404e96:	add    BYTE PTR [esi],al
  404e98:	adc    eax,DWORD PTR [edi]
  404e9a:	and    ch,dh
  404e9c:	pop    es
  404e9d:	add    BYTE PTR [eax],al
  404e9f:	sub    BYTE PTR [eax+0x0],ch
  404ea2:	add    BYTE PTR [esi],al
  404ea4:	sub    BYTE PTR [edx+0x250a0000],bh
  404eaa:	es add BYTE PTR es:[eax],ah
  404eae:	int3   
  404eaf:	add    al,0x0
  404eb1:	add    BYTE PTR [eax],ch
  404eb3:	pusha  
  404eb4:	add    BYTE PTR [eax],al
  404eb6:	push   es
  404eb7:	adc    eax,DWORD PTR [edi]
  404eb9:	sub    BYTE PTR [eax],dl
  404ebb:	add    BYTE PTR [eax],al
  404ebd:	push   es
  404ebe:	and    eax,0xc06f26
  404ec3:	add    BYTE PTR [edx],cl
  404ec5:	and    eax,0x53a2026
  404eca:	add    BYTE PTR [eax],al
  404ecc:	sub    BYTE PTR [eax+0x0],ch
  404ecf:	add    BYTE PTR [esi],al
  404ed1:	and    eax,0xd0200626
  404ed6:	add    al,0x0
  404ed8:	add    BYTE PTR [eax],ch
  404eda:	pusha  
  404edb:	add    BYTE PTR [eax],al
  404edd:	push   es
  404ede:	outs   dx,DWORD PTR ds:[esi]
  404edf:	rol    DWORD PTR [eax],0x0
  404ee2:	or     al,BYTE PTR [eax]
  404ee4:	and    ah,dl
  404ee6:	add    al,0x0
  404ee8:	add    BYTE PTR [eax],ch
  404eea:	pusha  
  404eeb:	add    BYTE PTR [eax],al
  404eed:	push   es
  404eee:	adc    eax,DWORD PTR [edi]
  404ef0:	push   es
  404ef1:	or     ebx,ebp
  404ef3:	clc    
  404ef4:	add    BYTE PTR [eax],al
  404ef6:	add    ch,bl
  404ef8:	repz add BYTE PTR [eax],al
  404efb:	add    BYTE PTR [ecx],dl
  404efd:	push   es
  404efe:	sub    ecx,DWORD PTR ds:0xd8200611
  404f04:	add    al,0x0
  404f06:	add    BYTE PTR [eax],ch
  404f08:	pusha  
  404f09:	add    BYTE PTR [eax],al
  404f0b:	push   es
  404f0c:	pop    eax
  404f0d:	and    ah,bl
  404f0f:	add    al,0x0
  404f11:	add    BYTE PTR [eax],ch
  404f13:	pusha  
  404f14:	add    BYTE PTR [eax],al
  404f16:	push   es
  404f17:	adc    eax,DWORD PTR [esi]
  404f19:	inc    ebp
  404f1a:	adc    al,0x0
  404f1c:	add    BYTE PTR [eax],al
  404f1e:	add    BYTE PTR [eax],al
  404f20:	add    BYTE PTR [eax],al
  404f22:	push   edi
  404f23:	std    
  404f24:	(bad)  
  404f25:	jmp    FWORD PTR [eax-0x3]
  404f28:	(bad)  
  404f29:	jmp    DWORD PTR [ecx-0x3f000003]
  404f2f:	std    
  404f30:	(bad)  
  404f31:	call   esi
  404f33:	std    
  404f34:	(bad)  
  404f35:	dec    DWORD PTR [esi-0x2]
  404f38:	(bad)  
  404f39:	jmp    DWORD PTR [ebx-0x2]
  404f3c:	(bad)  
  404f3d:	jmp    DWORD PTR [ebp-0x2]
  404f40:	(bad)  
  404f41:	push   DWORD PTR [edx-0x2]
  404f44:	(bad)  
  404f45:	dec    DWORD PTR [esi-0x70000002]
  404f4b:	(bad)  
  404f4c:	(bad)  
  404f4d:	dec    ebx
  404f4f:	(bad)  
  404f50:	(bad)  
  404f51:	jmp    esp
  404f53:	(bad)  
  404f54:	(bad)  
  404f55:	jmp    ebp
  404f57:	(bad)  
  404f58:	(bad)  
  404f59:	jmp    DWORD PTR [eax]
  404f5b:	(bad)  
  404f5c:	(bad)  
  404f5d:	(bad)  
  404f5e:	ds (bad) 
  404f60:	(bad)  
  404f61:	(bad)  
  404f62:	aas    
  404f63:	(bad)  
  404f64:	(bad)  
  404f65:	push   DWORD PTR [esi-0x1]
  404f68:	(bad)  
  404f69:	dec    DWORD PTR [ecx-0x21000001]
  404f6f:	ins    DWORD PTR es:[edi],dx
  404f70:	adc    DWORD PTR [edi],eax
  404f72:	adc    eax,DWORD PTR [esi]
  404f74:	adc    DWORD PTR ds:0x4e020,eax
  404f7a:	add    BYTE PTR [eax],ch
  404f7c:	pusha  
  404f7d:	add    BYTE PTR [eax],al
  404f7f:	push   es
  404f80:	xor    BYTE PTR [esi],dl
  404f82:	pop    ss
  404f83:	inc    ebp
  404f84:	add    DWORD PTR [eax],eax
  404f86:	add    BYTE PTR [eax],al
  404f88:	idiv   bh
  404f8a:	(bad)  
  404f8b:	jmp    DWORD PTR [eax]
  404f8d:	in     al,0x4
  404f8f:	add    BYTE PTR [eax],al
  404f91:	sub    BYTE PTR [eax+0x0],ah
  404f94:	add    BYTE PTR [esi],al
  404f96:	sub    eax,DWORD PTR [edx]
  404f98:	adc    DWORD PTR ds:0x245,eax
  404f9e:	add    BYTE PTR [eax],al
  404fa0:	add    BYTE PTR [eax],al
  404fa2:	add    BYTE PTR [ecx-0x1],bl
  404fa5:	(bad)  
  404fa6:	(bad)  
  404fa7:	fidiv  WORD PTR [esi*2+0x100004b]
  404fae:	adc    al,0xfe
  404fb0:	add    edx,DWORD PTR [ecx]
  404fb2:	add    eax,0x4e820
  404fb7:	add    BYTE PTR [eax],ch
  404fb9:	pusha  
  404fba:	add    BYTE PTR [eax],al
  404fbc:	push   es
  404fbd:	inc    BYTE PTR [ebx]
  404fbf:	pop    edi
  404fc0:	adc    DWORD PTR [esi],eax
  404fc2:	and    ah,ch
  404fc4:	add    al,0x0
  404fc6:	add    BYTE PTR [eax],ch
  404fc8:	pusha  
  404fc9:	add    BYTE PTR [eax],al
  404fcb:	push   es
  404fcc:	inc    BYTE PTR [ecx]
  404fce:	pop    edi
  404fcf:	(bad)  
  404fd0:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404fd4:	add    BYTE PTR [ecx],al
  404fd6:	sub    BYTE PTR [edi+0x0],dl
  404fd9:	add    BYTE PTR [edx],cl
  404fdb:	ficom  WORD PTR [ebx+0x4f020]
  404fe1:	add    BYTE PTR [eax],ch
  404fe3:	pusha  
  404fe4:	add    BYTE PTR [eax],al
  404fe6:	push   es
  404fe7:	sub    BYTE PTR [eax+0x250a0000],bh
  404fed:	es jp  0x404ff7
  404ff0:	adc    DWORD PTR [esi],eax
  404ff2:	sub    al,0xf
  404ff4:	sbb    eax,DWORD PTR [ebp+0x1]
  404ff7:	add    BYTE PTR [eax],al
  404ff9:	add    dh,dh
  404ffb:	(bad)  
  404ffc:	(bad)  
  404ffd:	jmp    FWORD PTR [eax]
  404fff:	pop    ebx
  405000:	add    BYTE PTR [eax],al
  405002:	or     ch,BYTE PTR [edx]
  405004:	inc    ecx
  405005:	sbb    al,0x0
  405007:	add    BYTE PTR [ecx],al
  405009:	add    BYTE PTR [eax],al
  40500b:	add    BYTE PTR [ecx],al
  40500d:	add    BYTE PTR [eax],al
  40500f:	add    ah,ah
  405011:	add    al,BYTE PTR [eax]
  405013:	add    BYTE PTR ds:0xc000003,cl
  405019:	add    BYTE PTR [eax],al
  40501b:	add    ch,ah
  40501d:	add    al,BYTE PTR [eax]
  40501f:	add    BYTE PTR [ebx],bl
  405021:	xor    BYTE PTR ds:0x1ee00,al
  405027:	add    BYTE PTR [eax],ah
  405029:	add    BYTE PTR [eax],al
  40502b:	adc    DWORD PTR [eax],eax
  40502d:	sub    BYTE PTR [ebx+0x0],bl
  405030:	add    BYTE PTR [edx],cl
  405032:	and    ah,dh
  405034:	add    al,0x0
  405036:	add    BYTE PTR [eax],ch
  405038:	pusha  
  405039:	add    BYTE PTR [eax],al
  40503b:	push   es
  40503c:	adc    eax,DWORD PTR [esi]
  40503e:	and    al,bh
  405040:	add    al,0x0
  405042:	add    BYTE PTR [eax],ch
  405044:	pusha  
  405045:	add    BYTE PTR [eax],al
  405047:	push   es
  405048:	adc    ecx,DWORD PTR [eax]
  40504a:	and    BYTE PTR [eax+0x28000008],dh
  405050:	push   0x25060000
  405055:	es or  al,0x20
  405058:	cld    
  405059:	add    al,0x0
  40505b:	add    BYTE PTR [eax],ch
  40505d:	pusha  
  40505e:	add    BYTE PTR [eax],al
  405060:	push   es
  405061:	adc    ecx,DWORD PTR [eax]
  405063:	jae    0x405021
  405065:	add    BYTE PTR [eax],al
  405067:	or     cl,BYTE PTR [ebx]
  405069:	and    BYTE PTR [eax],al
  40506b:	add    eax,0x60280000
  405070:	add    BYTE PTR [eax],al
  405072:	push   es
  405073:	adc    ecx,DWORD PTR [eax]
  405075:	jae    0x405039
  405077:	add    BYTE PTR [eax],al
  405079:	or     cl,BYTE PTR ds:0x50420
  40507f:	add    BYTE PTR [eax],ch
  405081:	pusha  
  405082:	add    BYTE PTR [eax],al
  405084:	push   es
  405085:	adc    ecx,DWORD PTR [eax]
  405087:	and    BYTE PTR [eax],cl
  405089:	add    eax,0x60280000
  40508e:	add    BYTE PTR [eax],al
  405090:	push   es
  405091:	adc    eax,DWORD PTR [eax+eiz*1]
  405094:	or     al,0x5
  405096:	add    BYTE PTR [eax],al
  405098:	sub    BYTE PTR [eax+0x0],ah
  40509b:	add    BYTE PTR [esi],al
  40509d:	adc    ecx,DWORD PTR [eax]
  40509f:	pop    es
  4050a0:	and    BYTE PTR [eax],dl
  4050a2:	add    eax,0x60280000
  4050a7:	add    BYTE PTR [eax],al
  4050a9:	push   es
  4050aa:	and    BYTE PTR [eax*1+0x60280000],dl
  4050b1:	add    BYTE PTR [eax],al
  4050b3:	push   es
  4050b4:	outs   dx,DWORD PTR ds:[esi]
  4050b5:	mov    ebp,0x250a0000
  4050ba:	adc    eax,DWORD PTR es:0x51820
  4050c1:	add    BYTE PTR [eax],ch
  4050c3:	pusha  
  4050c4:	add    BYTE PTR [eax],al
  4050c6:	push   es
  4050c7:	adc    ecx,DWORD PTR [eax]
  4050c9:	or     DWORD PTR [eax],ecx
  4050cb:	adc    DWORD PTR ds:0x51c20,eax
  4050d1:	add    BYTE PTR [eax],ch
  4050d3:	pusha  
  4050d4:	add    BYTE PTR [eax],al
  4050d6:	push   es
  4050d7:	outs   dx,DWORD PTR ds:[esi]
  4050d8:	inc    eax
  4050d9:	add    BYTE PTR [eax],al
  4050db:	or     ch,BYTE PTR [edi-0x3d]
  4050de:	add    BYTE PTR [eax],al
  4050e0:	or     ah,BYTE PTR [esi]
  4050e2:	and    BYTE PTR [eax],ah
  4050e4:	add    eax,0x60280000
  4050e9:	add    BYTE PTR [eax],al
  4050eb:	push   es
  4050ec:	adc    ecx,DWORD PTR [eax]
  4050ee:	add    BYTE PTR [ecx],dl
  4050f0:	add    al,0x20
  4050f2:	and    al,0x5
  4050f4:	add    BYTE PTR [eax],al
  4050f6:	sub    BYTE PTR [eax+0x0],ah
  4050f9:	add    BYTE PTR [esi],al
  4050fb:	(bad)  
  4050fc:	adc    eax,DWORD PTR [ecx+edx*1]
  4050ff:	add    al,0x20
  405101:	sub    BYTE PTR ds:0x60280000,al
  405107:	add    BYTE PTR [eax],al
  405109:	push   es
  40510a:	adc    ecx,DWORD PTR [ecx]
  40510c:	adc    DWORD PTR [ecx],ecx
  40510e:	xor    DWORD PTR [ebx+0x1451a],eax
  405114:	add    BYTE PTR [eax],al
  405116:	idiv   bh
  405118:	(bad)  
  405119:	call   DWORD PTR [edi]
  40511b:	sub    eax,0x4ad006
  405120:	add    BYTE PTR [esi],al
  405122:	and    BYTE PTR es:[eax*1+0x60280000],ch
  40512a:	add    BYTE PTR [eax],al
  40512c:	push   es
  40512d:	adc    ecx,DWORD PTR [eax]
  40512f:	or     DWORD PTR [edi-0x3c],ebp
  405132:	add    BYTE PTR [eax],al
  405134:	or     cl,BYTE PTR [edx]
  405136:	fst    st(4)
  405138:	add    BYTE PTR [eax],al
  40513a:	add    ch,bl
  40513c:	iret   
  40513d:	add    BYTE PTR [eax],al
  40513f:	add    BYTE PTR [ecx],dl
  405141:	pop    es
  405142:	sub    ecx,DWORD PTR ds:0x30200711
  405148:	add    eax,0x60280000
  40514d:	add    BYTE PTR [eax],al
  40514f:	push   es
  405150:	pop    eax
  405151:	and    BYTE PTR [eax*1+0x60280000],dh
  405158:	add    BYTE PTR [eax],al
  40515a:	push   es
  40515b:	adc    eax,DWORD PTR [edi]
  40515d:	inc    ebp
  40515e:	or     eax,DWORD PTR [eax]
  405160:	add    BYTE PTR [eax],al
  405162:	add    BYTE PTR [eax],al
  405164:	add    BYTE PTR [eax],al
  405166:	lahf   
  405167:	(bad)  
  405168:	(bad)  
  405169:	push   DWORD PTR [eax-0x36000002]
  40516f:	(bad)  
  405170:	(bad)  
  405171:	(bad)  
  405172:	(bad)  
  405174:	(bad)  
  405175:	(bad)  
  405176:	in     eax,dx
  405177:	(bad)  
  405178:	(bad)  
  405179:	inc    DWORD PTR ds:0x2fffffff
  40517f:	(bad)  
  405180:	(bad)  
  405181:	call   DWORD PTR [edi+edi*8-0x1]
  405185:	call   DWORD PTR [ebp-0x52000001]
  40518b:	(bad)  
  40518c:	(bad)  
  40518d:	(bad)  
  40518e:	fisubr WORD PTR [ebp+0x11]
  405191:	or     BYTE PTR [ebx],dl
  405193:	pop    es
  405194:	adc    DWORD PTR [esi],eax
  405196:	and    BYTE PTR [eax],bh
  405198:	add    eax,0x60280000
  40519d:	add    BYTE PTR [eax],al
  40519f:	push   es
  4051a0:	xor    BYTE PTR [esi],dl
  4051a2:	sbb    eax,0x145
  4051a7:	add    dh,dh
  4051a9:	(bad)  
  4051aa:	(bad)  
  4051ab:	jmp    DWORD PTR [eax]
  4051ad:	cmp    al,0x5
  4051af:	add    BYTE PTR [eax],al
  4051b1:	sub    BYTE PTR [eax+0x0],ah
  4051b4:	add    BYTE PTR [esi],al
  4051b6:	sub    eax,DWORD PTR [edx]
  4051b8:	adc    DWORD PTR [esi],eax
  4051ba:	inc    ebp
  4051bb:	add    al,BYTE PTR [eax]
  4051bd:	add    BYTE PTR [eax],al
  4051bf:	add    BYTE PTR [eax],al
  4051c1:	add    BYTE PTR [eax],al
  4051c3:	jge    0x4051c4
  4051c5:	(bad)  
  4051c6:	(bad)  
  4051c7:	fidiv  WORD PTR [esi*2+0x100004b]
  4051ce:	adc    al,0xfe
  4051d0:	add    edx,DWORD PTR [ecx]
  4051d2:	push   es
  4051d3:	and    BYTE PTR [eax+0x5],al
  4051d6:	add    BYTE PTR [eax],al
  4051d8:	sub    BYTE PTR [eax+0x0],ah
  4051db:	add    BYTE PTR [esi],al
  4051dd:	inc    BYTE PTR [ebx]
  4051df:	pop    edi
  4051e0:	adc    DWORD PTR [edi],eax
  4051e2:	and    BYTE PTR [ebp+eax*1+0x0],al
  4051e6:	add    BYTE PTR [eax],ch
  4051e8:	pusha  
  4051e9:	add    BYTE PTR [eax],al
  4051eb:	push   es
  4051ec:	inc    BYTE PTR [ecx]
  4051ee:	pop    edi
  4051ef:	(bad)  
  4051f0:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4051f4:	add    BYTE PTR [ecx],al
  4051f6:	sub    BYTE PTR [edi+0x0],dl
  4051f9:	add    BYTE PTR [edx],cl
  4051fb:	ficom  WORD PTR [ebx+0x54820]
  405201:	add    BYTE PTR [eax],ch
  405203:	pusha  
  405204:	add    BYTE PTR [eax],al
  405206:	push   es
  405207:	sub    BYTE PTR [eax+0x250a0000],bh
  40520d:	es jp  0x405216
  405210:	adc    DWORD PTR [edi],eax
  405212:	sub    al,0x5
  405214:	sub    BYTE PTR [ebx+0x0],bl
  405217:	add    BYTE PTR [edx],cl
  405219:	sub    al,BYTE PTR [eax]
  40521b:	add    BYTE PTR [ecx+0x1c],al
  40521e:	add    BYTE PTR [eax],al
  405220:	add    DWORD PTR [eax],eax
  405222:	add    BYTE PTR [eax],al
  405224:	add    DWORD PTR [eax],eax
  405226:	add    BYTE PTR [eax],al
  405228:	pushf  
  405229:	add    DWORD PTR [eax],eax
  40522b:	add    ch,al
  40522d:	add    DWORD PTR [eax],eax
  40522f:	add    BYTE PTR [eax+eax*1],cl
  405232:	add    BYTE PTR [eax],al
  405234:	popf   
  405235:	add    DWORD PTR [eax],eax
  405237:	add    BYTE PTR [ebx],bl
  405239:	xor    BYTE PTR [edi],al
  40523b:	add    BYTE PTR [esi+0x21000004],al
  405241:	add    BYTE PTR [eax],al
  405243:	adc    DWORD PTR [eax],eax
  405245:	sub    BYTE PTR [ebx+0x0],bl
  405248:	add    BYTE PTR [edx],cl
  40524a:	and    BYTE PTR [ebp+eax*1+0x0],cl
  40524e:	add    BYTE PTR [eax],ch
  405250:	pusha  
  405251:	add    BYTE PTR [eax],al
  405253:	push   es
  405254:	adc    ecx,DWORD PTR [edi]
  405256:	and    BYTE PTR [eax+0x5],dl
  405259:	add    BYTE PTR [eax],al
  40525b:	sub    BYTE PTR [eax+0x0],ah
  40525e:	add    BYTE PTR [esi],al
  405260:	adc    edx,DWORD PTR [ecx]
  405262:	add    esi,DWORD PTR [ebx-0x3b]
  405265:	add    BYTE PTR [eax],al
  405267:	or     cl,BYTE PTR [edx]
  405269:	and    BYTE PTR [ebp+eax*1+0x0],dl
  40526d:	add    BYTE PTR [eax],ch
  40526f:	pusha  
  405270:	add    BYTE PTR [eax],al
  405272:	push   es
  405273:	adc    edx,DWORD PTR [ecx]
  405275:	push   es
  405276:	outs   dx,DWORD PTR ds:[esi]
  405277:	mov    BYTE PTR [eax],0x0
  40527a:	or     dl,BYTE PTR [ebx]
  40527c:	or     al,0x20
  40527e:	pop    eax
  40527f:	add    eax,0x60280000
  405284:	add    BYTE PTR [eax],al
  405286:	push   es
  405287:	adc    ecx,DWORD PTR [ebx]
  405289:	cmp    BYTE PTR [esi],cl
  40528b:	add    eax,DWORD PTR [eax]
  40528d:	add    BYTE PTR [ecx],dl
  40528f:	or     al,0x11
  405291:	or     ebx,DWORD PTR [edx+0x55c200b]
  405297:	add    BYTE PTR [eax],al
  405299:	sub    BYTE PTR [eax+0x0],ah
  40529c:	add    BYTE PTR [esi],al
  40529e:	adc    edx,DWORD PTR [ecx]
  4052a0:	pop    es
  4052a1:	outs   dx,DWORD PTR ds:[esi]
  4052a2:	mov    DWORD PTR [eax],0x26250a00
  4052a8:	adc    ecx,DWORD PTR [esi]
  4052aa:	and    BYTE PTR [eax+0x5],ah
  4052ad:	add    BYTE PTR [eax],al
  4052af:	sub    BYTE PTR [eax+0x0],ah
  4052b2:	add    BYTE PTR [esi],al
  4052b4:	adc    ecx,DWORD PTR ds:0x25b38
  4052ba:	add    BYTE PTR [ecx],dl
  4052bc:	push   cs
  4052bd:	adc    DWORD PTR ds:0x64200d9a,ecx
  4052c3:	add    eax,0x60280000
  4052c8:	add    BYTE PTR [eax],al
  4052ca:	push   es
  4052cb:	adc    edx,DWORD PTR [ecx]
  4052cd:	or     DWORD PTR [edi-0x38],ebp
  4052d0:	add    BYTE PTR [eax],al
  4052d2:	or     dl,BYTE PTR [ebx]
  4052d4:	add    al,0x20
  4052d6:	push   0x28000005
  4052db:	pusha  
  4052dc:	add    BYTE PTR [eax],al
  4052de:	push   es
  4052df:	adc    edx,DWORD PTR [ecx]
  4052e1:	adc    DWORD PTR [eax+eiz*1],eax
  4052e4:	sub    eax,0x28000009
  4052e9:	push   0x25060000
  4052ee:	outs   dx,DWORD PTR es:[esi]
  4052f0:	leave  
  4052f1:	add    BYTE PTR [eax],al
  4052f3:	or     ah,BYTE PTR ds:0x11121326
  4052f9:	adc    ch,BYTE PTR [eax*1+0x1f838]
  405300:	add    BYTE PTR [eax],ah
  405302:	ins    BYTE PTR es:[edi],dx
  405303:	add    eax,0x60280000
  405308:	add    BYTE PTR [eax],al
  40530a:	push   es
  40530b:	adc    edx,DWORD PTR [ecx]
  40530d:	add    BYTE PTR [eax],ah
  40530f:	jo     0x405316
  405311:	add    BYTE PTR [eax],al
  405313:	sub    BYTE PTR [eax+0x0],ah
  405316:	add    BYTE PTR [esi],al
  405318:	adc    edx,DWORD PTR [ecx]
  40531a:	or     DWORD PTR [edi-0x36],ebp
  40531d:	add    BYTE PTR [eax],al
  40531f:	or     ah,BYTE PTR ds:0xcb2826
  405325:	add    BYTE PTR [edx],cl
  405327:	and    eax,0x20051326
  40532c:	je     0x405333
  40532e:	add    BYTE PTR [eax],al
  405330:	sub    BYTE PTR [eax+0x0],ah
  405333:	add    BYTE PTR [esi],al
  405335:	adc    edx,DWORD PTR [ecx]
  405337:	adc    DWORD PTR ds:0xcc28,eax
  40533d:	or     ah,BYTE PTR ds:0x5782026
  405343:	add    BYTE PTR [eax],al
  405345:	sub    BYTE PTR [ebx+0x0],ah
  405348:	add    BYTE PTR [esi],al
  40534a:	xor    BYTE PTR [edx],bh
  40534c:	sbb    al,0x45
  40534e:	add    DWORD PTR [eax],eax
  405350:	add    BYTE PTR [eax],al
  405352:	idiv   bh
  405354:	(bad)  
  405355:	call   DWORD PTR [edi]
  405357:	sub    eax,0x4bd006
  40535c:	add    BYTE PTR [esi],al
  40535e:	or     DWORD PTR es:[edi-0x33],ebp
  405362:	add    BYTE PTR [eax],al
  405364:	or     ah,BYTE PTR ds:0x93c2026
  40536a:	add    BYTE PTR [eax],al
  40536c:	sub    BYTE PTR [eax+0x0],ch
  40536f:	add    BYTE PTR [esi],al
  405371:	and    eax,0xce6f26
  405376:	add    BYTE PTR [edx],cl
  405378:	and    eax,0x190c2c26
  40537d:	inc    ebp
  40537e:	add    DWORD PTR [eax],eax
  405380:	add    BYTE PTR [eax],al
  405382:	idiv   bh
  405384:	(bad)  
  405385:	jmp    FWORD PTR [ebx]
  405387:	daa    
  405388:	or     DWORD PTR [edi-0x33],ebp
  40538b:	add    BYTE PTR [eax],al
  40538d:	or     ah,BYTE PTR ds:0x94b2026
  405393:	add    BYTE PTR [eax],al
  405395:	sub    BYTE PTR [eax+0x0],ch
  405398:	add    BYTE PTR [esi],al
  40539a:	and    eax,0xce6f26
  40539f:	add    BYTE PTR [edx],cl
  4053a1:	and    eax,0x170c2c26
  4053a6:	inc    ebp
  4053a7:	add    DWORD PTR [eax],eax
  4053a9:	add    BYTE PTR [eax],al
  4053ab:	idiv   bh
  4053ad:	(bad)  
  4053ae:	jmp    FWORD PTR [ebx]
  4053b0:	and    ecx,DWORD PTR [ecx]
  4053b2:	outs   dx,DWORD PTR ds:[esi]
  4053b3:	int    0x0
  4053b5:	add    BYTE PTR [edx],cl
  4053b7:	and    BYTE PTR [esi+0x9],ah
  4053ba:	add    BYTE PTR [eax],al
  4053bc:	sub    BYTE PTR [eax+0x0],ch
  4053bf:	add    BYTE PTR [esi],al
  4053c1:	and    eax,0xce6f26
  4053c6:	add    BYTE PTR [edx],cl
  4053c8:	sub    al,0xc
  4053ca:	sbb    BYTE PTR [ebp+0x1],al
  4053cd:	add    BYTE PTR [eax],al
  4053cf:	add    dh,dh
  4053d1:	(bad)  
  4053d2:	(bad)  
  4053d3:	jmp    FWORD PTR [ebx]
  4053d5:	pop    eax
  4053d6:	or     DWORD PTR [edi-0x33],ebp
  4053d9:	add    BYTE PTR [eax],al
  4053db:	or     ah,BYTE PTR [eax]
  4053dd:	jne    0x4053e8
  4053df:	add    BYTE PTR [eax],al
  4053e1:	sub    BYTE PTR [eax+0x0],ch
  4053e4:	add    BYTE PTR [esi],al
  4053e6:	and    eax,0xce6f26
  4053eb:	add    BYTE PTR [edx],cl
  4053ed:	and    eax,0x1b3d2d26
  4053f2:	inc    ebp
  4053f3:	add    DWORD PTR [eax],eax
  4053f5:	add    BYTE PTR [eax],al
  4053f7:	idiv   bh
  4053f9:	(bad)  
  4053fa:	dec    DWORD PTR [ecx]
  4053fc:	outs   dx,DWORD PTR ds:[esi]
  4053fd:	int    0x0
  4053ff:	add    BYTE PTR [edx],cl
  405401:	and    eax,0x98a2026
  405406:	add    BYTE PTR [eax],al
  405408:	sub    BYTE PTR [eax+0x0],ch
  40540b:	add    BYTE PTR [esi],al
  40540d:	and    eax,0xce6f26
  405412:	add    BYTE PTR [edx],cl
  405414:	and    eax,0x1a162d26
  405419:	inc    ebp
  40541a:	add    DWORD PTR [eax],eax
  40541c:	add    BYTE PTR [eax],al
  40541e:	idiv   bh
  405420:	(bad)  
  405421:	jmp    DWORD PTR [eax]
  405423:	add    BYTE PTR ds:0x60280000,0x0
  40542a:	add    BYTE PTR [esi],al
  40542c:	sub    ecx,DWORD PTR [edx]
  40542e:	and    BYTE PTR [ebp+eax*1+0x60280000],al
  405435:	add    BYTE PTR [eax],al
  405437:	push   es
  405438:	add    BYTE PTR [ebx],dl
  40543a:	adc    dl,BYTE PTR [ecx]
  40543c:	adc    ch,BYTE PTR [edi+ecx*1]
  40543f:	sbb    eax,0x145
  405444:	add    dh,dh
  405446:	(bad)  
  405447:	(bad)  
  405448:	(bad)  
  405449:	cmp    BYTE PTR [edx+0x20000000],ch
  40544f:	mov    BYTE PTR ds:0x60280000,al
  405455:	add    BYTE PTR [eax],al
  405457:	push   es
  405458:	adc    edx,DWORD PTR [ecx]
  40545a:	add    BYTE PTR [eax],ah
  40545c:	mov    WORD PTR ds:0x60280000,es
  405462:	add    BYTE PTR [eax],al
  405464:	push   es
  405465:	adc    edx,DWORD PTR [ecx]
  405467:	or     DWORD PTR [edi-0x33],ebp
  40546a:	add    BYTE PTR [eax],al
  40546c:	or     ah,BYTE PTR ds:0x20081326
  405472:	nop
  405473:	add    eax,0x60280000
  405478:	add    BYTE PTR [eax],al
  40547a:	push   es
  40547b:	adc    edx,DWORD PTR [ecx]
  40547d:	or     DWORD PTR [edi-0x33],ebp
  405480:	add    BYTE PTR [eax],al
  405482:	or     ah,BYTE PTR ds:0x9992026
  405488:	add    BYTE PTR [eax],al
  40548a:	sub    BYTE PTR [eax+0x0],ch
  40548d:	add    BYTE PTR [esi],al
  40548f:	and    eax,0xa42826
  405494:	add    BYTE PTR [edx],cl
  405496:	adc    ecx,DWORD PTR [ecx]
  405498:	and    BYTE PTR [ebp+eax*1+0x60280000],dl
  40549f:	add    BYTE PTR [eax],al
  4054a1:	push   es
  4054a2:	adc    edx,DWORD PTR [ecx]
  4054a4:	add    al,0x13
  4054a6:	or     ah,BYTE PTR [eax]
  4054a8:	cwde   
  4054a9:	add    eax,0x60280000
  4054ae:	add    BYTE PTR [eax],al
  4054b0:	push   es
  4054b1:	adc    edx,DWORD PTR [ecx]
  4054b3:	add    dl,BYTE PTR [ecx]
  4054b5:	or     ch,BYTE PTR [edi+0x4d]
  4054b8:	add    BYTE PTR [eax],al
  4054ba:	push   es
  4054bb:	adc    eax,DWORD PTR [edi]
  4054bd:	and    BYTE PTR [ebp+eax*1+0x60280000],bl
  4054c4:	add    BYTE PTR [eax],al
  4054c6:	push   es
  4054c7:	adc    edx,DWORD PTR [ecx]
  4054c9:	add    dl,BYTE PTR [ecx]
  4054cb:	or     ch,BYTE PTR [edi+0x4e]
  4054ce:	add    BYTE PTR [eax],al
  4054d0:	push   es
  4054d1:	adc    eax,DWORD PTR [esi]
  4054d3:	and    BYTE PTR [eax+0x28000005],ah
  4054d9:	pusha  
  4054da:	add    BYTE PTR [eax],al
  4054dc:	push   es
  4054dd:	adc    edx,DWORD PTR [ecx]
  4054df:	add    dl,BYTE PTR [ecx]
  4054e1:	or     BYTE PTR [ecx],dl
  4054e3:	or     DWORD PTR [ecx],edx
  4054e5:	pop    es
  4054e6:	adc    DWORD PTR [esi],eax
  4054e8:	and    BYTE PTR [ebp+eax*1+0x60280000],ah
  4054ef:	add    BYTE PTR [eax],al
  4054f1:	push   es
  4054f2:	outs   dx,DWORD PTR ds:[esi]
  4054f3:	dec    edi
  4054f4:	add    BYTE PTR [eax],al
  4054f6:	push   es
  4054f7:	add    BYTE PTR [eax],al
  4054f9:	add    BYTE PTR [ecx],dl
  4054fb:	or     eax,0x5a820
  405500:	add    BYTE PTR [eax],ch
  405502:	pusha  
  405503:	add    BYTE PTR [eax],al
  405505:	push   es
  405506:	(bad)  
  405507:	adc    ecx,DWORD PTR ds:0x5ac20
  40550d:	add    BYTE PTR [eax],ch
  40550f:	pusha  
  405510:	add    BYTE PTR [eax],al
  405512:	push   es
  405513:	adc    edx,DWORD PTR [ecx]
  405515:	add    BYTE PTR [ecx],dl
  405517:	or     eax,0xb78e0e11
  40551c:	inc    BYTE PTR [ebx+edx*1]
  40551f:	adc    dl,BYTE PTR [ecx]
  405521:	adc    bh,BYTE PTR [edx]
  405523:	xchg   esp,eax
  405524:	std    
  405525:	(bad)  
  405526:	call   FWORD PTR [ecx]
  405528:	inc    ebp
  405529:	add    DWORD PTR [eax],eax
  40552b:	add    BYTE PTR [eax],al
  40552d:	idiv   bh
  40552f:	(bad)  
  405530:	jmp    DWORD PTR [eax]
  405532:	mov    al,0x5
  405534:	add    BYTE PTR [eax],al
  405536:	sub    BYTE PTR [eax+0x0],ah
  405539:	add    BYTE PTR [esi],al
  40553b:	adc    edx,DWORD PTR [ecx]
  40553d:	pop    es
  40553e:	outs   dx,DWORD PTR ds:[esi]
  40553f:	mov    BYTE PTR [eax],0x0
  405542:	or     ah,BYTE PTR ds:0x20b78e26
  405548:	mov    ah,0x5
  40554a:	add    BYTE PTR [eax],al
  40554c:	sub    BYTE PTR [eax+0x0],ah
  40554f:	add    BYTE PTR [esi],al
  405551:	inc    BYTE PTR [edx]
  405553:	adc    edx,DWORD PTR [edx]
  405555:	adc    DWORD PTR [edx],edx
  405557:	sub    al,0x26
  405559:	sbb    BYTE PTR [ebp+0x1],al
  40555c:	add    BYTE PTR [eax],al
  40555e:	add    dh,dh
  405560:	(bad)  
  405561:	(bad)  
  405562:	jmp    DWORD PTR [eax]
  405564:	mov    eax,0x28000005
  405569:	pusha  
  40556a:	add    BYTE PTR [eax],al
  40556c:	push   es
  40556d:	adc    edx,DWORD PTR [ecx]
  40556f:	add    al,BYTE PTR [edi]
  405571:	outs   dx,DWORD PTR ds:[esi]
  405572:	int    0x0
  405574:	add    BYTE PTR [edx],cl
  405576:	add    al,0x6f
  405578:	dec    ebx
  405579:	add    BYTE PTR [eax],al
  40557b:	push   es
  40557c:	and    eax,0x11002626
  405581:	or     esp,DWORD PTR [eax]
  405583:	mov    esp,0x28000005
  405588:	pusha  
  405589:	add    BYTE PTR [eax],al
  40558b:	push   es
  40558c:	(bad)  
  40558d:	adc    ecx,DWORD PTR [ebx]
  40558f:	and    al,al
  405591:	add    eax,0x60280000
  405596:	add    BYTE PTR [eax],al
  405598:	push   es
  405599:	adc    edx,DWORD PTR [ecx]
  40559b:	add    BYTE PTR [ecx],dl
  40559d:	or     edx,DWORD PTR [ecx]
  40559f:	or     al,0x8e
  4055a1:	mov    bh,0xfe
  4055a3:	add    al,0x13
  4055a5:	adc    dl,BYTE PTR [ecx]
  4055a7:	adc    bh,BYTE PTR [edx]
  4055a9:	loope  0x4055a7
  4055ab:	(bad)  
  4055ac:	(bad)  
  4055ad:	fisttp QWORD PTR ds:0x11000001
  4055b3:	adc    BYTE PTR [ebx],ch
  4055b5:	or     eax,0xc4201011
  4055ba:	add    eax,0x60280000
  4055bf:	add    BYTE PTR [eax],al
  4055c1:	push   es
  4055c2:	pop    eax
  4055c3:	and    al,cl
  4055c5:	add    eax,0x60280000
  4055ca:	add    BYTE PTR [eax],al
  4055cc:	push   es
  4055cd:	adc    edx,DWORD PTR [eax]
  4055cf:	inc    ebp
  4055d0:	sbb    eax,DWORD PTR [eax]
  4055d2:	add    BYTE PTR [eax],al
  4055d4:	add    BYTE PTR [eax],al
  4055d6:	add    BYTE PTR [eax],al
  4055d8:	add    eax,0x16fffffc
  4055dd:	cld    
  4055de:	(bad)  
  4055df:	jmp    FWORD PTR [ecx]
  4055e1:	cld    
  4055e2:	(bad)  
  4055e3:	call   DWORD PTR [esp+edi*8-0x1]
  4055e7:	inc    DWORD PTR [ecx-0x6a000004]
  4055ed:	cld    
  4055ee:	(bad)  
  4055ef:	(bad)  
  4055f0:	mov    esp,0xc1fffffc
  4055f5:	cld    
  4055f6:	(bad)  
  4055f7:	dec    esi
  4055f9:	cld    
  4055fa:	(bad)  
  4055fb:	(bad)  
  4055fc:	jmp    0x4055fa
  4055fe:	(bad)  
  4055ff:	dec    DWORD PTR [ecx]
  405601:	(bad)  
  405602:	(bad)  
  405603:	dec    DWORD PTR [esi]
  405605:	(bad)  
  405606:	(bad)  
  405607:	call   FWORD PTR [ebx]
  405609:	(bad)  
  40560a:	(bad)  
  40560b:	push   DWORD PTR [ecx]
  40560d:	(bad)  
  40560e:	(bad)  
  40560f:	call   FWORD PTR [eax-0x2]
  405612:	(bad)  
  405613:	jmp    DWORD PTR [edi-0x2]
  405616:	(bad)  
  405617:	(bad)  
  405618:	jge    0x405618
  40561a:	(bad)  
  40561b:	call   DWORD PTR [ebx-0x47000002]
  405621:	(bad)  
  405622:	(bad)  
  405623:	(bad)  
  405624:	mov    ecx,0xc9fffffe
  405629:	(bad)  
  40562a:	(bad)  
  40562b:	push   ecx
  40562d:	(bad)  
  40562e:	(bad)  
  40562f:	jmp    DWORD PTR [ebx]
  405631:	(bad)  
  405632:	(bad)  
  405633:	(bad)  
  405634:	aas    
  405635:	(bad)  
  405636:	(bad)  
  405637:	dec    DWORD PTR [edi-0x1]
  40563a:	(bad)  
  40563b:	jmp    FWORD PTR [ebp-0x1]
  40563e:	(bad)  
  40563f:	(bad)  
  405640:	fisubr WORD PTR [ebp+0x11]
  405643:	adc    DWORD PTR [ebx],edx
  405645:	adc    BYTE PTR [ecx],dl
  405647:	mov    esp,cr1
  40564a:	add    eax,0x60280000
  40564f:	add    BYTE PTR [eax],al
  405651:	push   es
  405652:	xor    BYTE PTR [esi],dl
  405654:	sbb    eax,0x145
  405659:	add    dh,dh
  40565b:	(bad)  
  40565c:	(bad)  
  40565d:	jmp    DWORD PTR [eax]
  40565f:	rol    BYTE PTR ds:0x60280000,1
  405665:	add    BYTE PTR [eax],al
  405667:	push   es
  405668:	sub    eax,DWORD PTR [edx]
  40566a:	adc    DWORD PTR [edi],ecx
  40566c:	inc    ebp
  40566d:	add    al,BYTE PTR [eax]
  40566f:	add    BYTE PTR [eax],al
  405671:	add    BYTE PTR [eax],al
  405673:	add    BYTE PTR [eax],al
  405675:	cmp    eax,0xdeffffff
  40567a:	xor    al,0x75
  40567c:	dec    ebx
  40567d:	add    BYTE PTR [eax],al
  40567f:	add    DWORD PTR [esi+edi*8],edx
  405682:	add    edx,DWORD PTR [ecx]
  405684:	mov    esp,cr2
  405687:	add    eax,0x60280000
  40568c:	add    BYTE PTR [eax],al
  40568e:	push   es
  40568f:	inc    BYTE PTR [ebx]
  405691:	pop    edi
  405692:	adc    DWORD PTR [eax],edx
  405694:	and    al,bl
  405696:	add    eax,0x60280000
  40569b:	add    BYTE PTR [eax],al
  40569d:	push   es
  40569e:	inc    BYTE PTR [ecx]
  4056a0:	pop    edi
  4056a1:	(bad)  
  4056a2:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4056a6:	add    BYTE PTR [ecx],al
  4056a8:	sub    BYTE PTR [edi+0x0],dl
  4056ab:	add    BYTE PTR [edx],cl
  4056ad:	ficom  WORD PTR [ebx+0x5dc20]
  4056b3:	add    BYTE PTR [eax],ch
  4056b5:	pusha  
  4056b6:	add    BYTE PTR [eax],al
  4056b8:	push   es
  4056b9:	sub    BYTE PTR [eax+0x7a0a0000],bh
  4056bf:	or     BYTE PTR [ecx],dl
  4056c1:	adc    BYTE PTR [eax*1+0x5b28],ch
  4056c8:	or     ch,BYTE PTR [edx]
  4056ca:	add    BYTE PTR [eax],al
  4056cc:	inc    ecx
  4056cd:	sbb    al,0x0
  4056cf:	add    BYTE PTR [ecx],al
  4056d1:	add    BYTE PTR [eax],al
  4056d3:	add    BYTE PTR [ecx],al
  4056d5:	add    BYTE PTR [eax],al
  4056d7:	add    BYTE PTR [esi],dh
  4056d9:	add    al,0x0
  4056db:	add    BYTE PTR [edi+0x4],bl
  4056de:	add    BYTE PTR [eax],al
  4056e0:	or     al,0x0
  4056e2:	add    BYTE PTR [eax],al
  4056e4:	aaa    
  4056e5:	add    al,0x0
  4056e7:	add    BYTE PTR [ebx],bl
  4056e9:	xor    BYTE PTR [edi],al
  4056eb:	add    BYTE PTR [ecx+0x3],dh
  4056ee:	add    BYTE PTR [eax],al
  4056f0:	and    al,BYTE PTR [eax]
  4056f2:	add    BYTE PTR [ecx],dl
  4056f4:	add    BYTE PTR [eax],ch
  4056f6:	pop    ebx
  4056f7:	add    BYTE PTR [eax],al
  4056f9:	or     ah,BYTE PTR [eax]
  4056fb:	loopne 0x405702
  4056fd:	add    BYTE PTR [eax],al
  4056ff:	sub    BYTE PTR [eax+0x0],ah
  405702:	add    BYTE PTR [esi],al
  405704:	adc    edx,DWORD PTR [eax]
  405706:	and    ah,ah
  405708:	add    eax,0x60280000
  40570d:	add    BYTE PTR [eax],al
  40570f:	push   es
  405710:	adc    edx,DWORD PTR [edx]
  405712:	add    esi,DWORD PTR [ebx-0x3b]
  405715:	add    BYTE PTR [eax],al
  405717:	or     cl,BYTE PTR [ebx]
  405719:	and    al,ch
  40571b:	add    eax,0x60280000
  405720:	add    BYTE PTR [eax],al
  405722:	push   es
  405723:	adc    edx,DWORD PTR [edx]
  405725:	pop    es
  405726:	outs   dx,DWORD PTR ds:[esi]
  405727:	mov    BYTE PTR [eax],0x0
  40572a:	or     ah,BYTE PTR ds:0x200d1326
  405730:	in     al,dx
  405731:	add    eax,0x60280000
  405736:	add    BYTE PTR [eax],al
  405738:	push   es
  405739:	adc    ecx,DWORD PTR [eax+edi*1]
  40573c:	inc    DWORD PTR [ecx]
  40573e:	add    BYTE PTR [eax],al
  405740:	adc    DWORD PTR ds:0xc9a0c11,ecx
  405746:	and    al,dh
  405748:	add    eax,0x60280000
  40574d:	add    BYTE PTR [eax],al
  40574f:	push   es
  405750:	adc    edx,DWORD PTR [edx]
  405752:	or     BYTE PTR [edi-0x39],ch
  405755:	add    BYTE PTR [eax],al
  405757:	or     ah,BYTE PTR ds:0x200f1326
  40575d:	hlt    
  40575e:	add    eax,0x60280000
  405763:	add    BYTE PTR [eax],al
  405765:	push   es
  405766:	adc    ecx,DWORD PTR [esi]
  405768:	cmp    BYTE PTR [ebx+0x1],cl
  40576b:	add    BYTE PTR [eax],al
  40576d:	adc    DWORD PTR [edi],ecx
  40576f:	adc    DWORD PTR [esi],ecx
  405771:	call   0x0:0x5f8200d
  405778:	sub    BYTE PTR [eax+0x0],ah
  40577b:	add    BYTE PTR [esi],al
  40577d:	adc    edx,DWORD PTR [edx]
  40577f:	or     DWORD PTR [edi-0x38],ebp
  405782:	add    BYTE PTR [eax],al
  405784:	or     ah,BYTE PTR ds:0x20041326
  40578a:	cld    
  40578b:	add    eax,0x60280000
  405790:	add    BYTE PTR [eax],al
  405792:	push   es
  405793:	adc    edx,DWORD PTR [edx]
  405795:	adc    DWORD PTR [eax+eiz*1],eax
  405798:	sub    eax,0x28000009
  40579d:	push   0x25060000
  4057a2:	outs   dx,DWORD PTR es:[esi]
  4057a4:	leave  
  4057a5:	add    BYTE PTR [eax],al
  4057a7:	or     dl,BYTE PTR [ebx]
  4057a9:	adc    edx,DWORD PTR [ecx]
  4057ab:	adc    edi,DWORD PTR [ecx]
  4057ad:	jmp    0x600:0x20000000
  4057b4:	add    BYTE PTR [eax],al
  4057b6:	sub    BYTE PTR [eax+0x0],ah
  4057b9:	add    BYTE PTR [esi],al
  4057bb:	adc    edx,DWORD PTR [edx]
  4057bd:	or     DWORD PTR [edi-0x33],ebp
  4057c0:	add    BYTE PTR [eax],al
  4057c2:	or     ah,BYTE PTR ds:0x20081326
  4057c8:	add    al,0x6
  4057ca:	add    BYTE PTR [eax],al
  4057cc:	sub    BYTE PTR [eax+0x0],ah
  4057cf:	add    BYTE PTR [esi],al
  4057d1:	adc    edx,DWORD PTR [edx]
  4057d3:	or     DWORD PTR [edi-0x33],ebp
  4057d6:	add    BYTE PTR [eax],al
  4057d8:	or     ah,BYTE PTR ds:0x9992026
  4057de:	add    BYTE PTR [eax],al
  4057e0:	sub    BYTE PTR [eax+0x0],ch
  4057e3:	add    BYTE PTR [esi],al
  4057e5:	and    eax,0xa42826
  4057ea:	add    BYTE PTR [edx],cl
  4057ec:	and    eax,0x200a1326
  4057f1:	or     BYTE PTR [esi],al
  4057f3:	add    BYTE PTR [eax],al
  4057f5:	sub    BYTE PTR [eax+0x0],ah
  4057f8:	add    BYTE PTR [esi],al
  4057fa:	adc    edx,DWORD PTR [edx]
  4057fc:	add    al,0x13
  4057fe:	or     esp,DWORD PTR [eax]
  405800:	or     al,0x6
  405802:	add    BYTE PTR [eax],al
  405804:	sub    BYTE PTR [eax+0x0],ah
  405807:	add    BYTE PTR [esi],al
  405809:	adc    edx,DWORD PTR [edx]
  40580b:	add    dl,BYTE PTR [ecx]
  40580d:	or     ebp,DWORD PTR [edi+0x4d]
  405810:	add    BYTE PTR [eax],al
  405812:	push   es
  405813:	adc    eax,DWORD PTR [esi]
  405815:	and    BYTE PTR [eax],dl
  405817:	push   es
  405818:	add    BYTE PTR [eax],al
  40581a:	sub    BYTE PTR [eax+0x0],ah
  40581d:	add    BYTE PTR [esi],al
  40581f:	adc    edx,DWORD PTR [edx]
  405821:	add    dl,BYTE PTR [ecx]
  405823:	or     ebp,DWORD PTR [edi+0x4e]
  405826:	add    BYTE PTR [eax],al
  405828:	push   es
  405829:	adc    eax,DWORD PTR ds:0x61420
  40582f:	add    BYTE PTR [eax],ch
  405831:	pusha  
  405832:	add    BYTE PTR [eax],al
  405834:	push   es
  405835:	adc    edx,DWORD PTR [edx]
  405837:	or     DWORD PTR [edi-0x33],ebp
  40583a:	add    BYTE PTR [eax],al
  40583c:	or     ah,BYTE PTR ds:0x20071326
  405842:	sbb    BYTE PTR [esi],al
  405844:	add    BYTE PTR [eax],al
  405846:	sub    BYTE PTR [eax+0x0],ah
  405849:	add    BYTE PTR [esi],al
  40584b:	adc    edx,DWORD PTR [edx]
  40584d:	adc    DWORD PTR [edi],eax
  40584f:	and    BYTE PTR [esi+eax*1],bl
  405852:	add    BYTE PTR [eax],al
  405854:	sub    BYTE PTR [eax+0x0],ah
  405857:	add    BYTE PTR [esi],al
  405859:	adc    DWORD PTR [edi],eax
  40585b:	outs   dx,DWORD PTR ds:[esi]
  40585c:	iret   
  40585d:	add    BYTE PTR [eax],al
  40585f:	or     ah,BYTE PTR ds:0x6202026
  405865:	add    BYTE PTR [eax],al
  405867:	sub    BYTE PTR [eax+0x0],ah
  40586a:	add    BYTE PTR [esi],al
  40586c:	fisubr DWORD PTR [edi+0x40]
  40586f:	add    BYTE PTR [eax],al
  405871:	or     ah,BYTE PTR ds:0x20091326
  405877:	and    al,0x6
  405879:	add    BYTE PTR [eax],al
  40587b:	sub    BYTE PTR [eax+0x0],ah
  40587e:	add    BYTE PTR [esi],al
  405880:	adc    edx,DWORD PTR [edx]
  405882:	add    dl,BYTE PTR [ecx]
  405884:	pop    es
  405885:	adc    DWORD PTR [ecx],ecx
  405887:	adc    DWORD PTR [esi],eax
  405889:	adc    DWORD PTR ds:0x62820,eax
  40588f:	add    BYTE PTR [eax],ch
  405891:	pusha  
  405892:	add    BYTE PTR [eax],al
  405894:	push   es
  405895:	outs   dx,DWORD PTR ds:[esi]
  405896:	dec    edi
  405897:	add    BYTE PTR [eax],al
  405899:	push   es
  40589a:	add    BYTE PTR [eax],al
  40589c:	adc    DWORD PTR [esi],ecx
  40589e:	and    BYTE PTR [esi+eax*1],ch
  4058a1:	add    BYTE PTR [eax],al
  4058a3:	sub    BYTE PTR [eax+0x0],ah
  4058a6:	add    BYTE PTR [esi],al
  4058a8:	(bad)  
  4058a9:	adc    ecx,DWORD PTR [esi]
  4058ab:	and    BYTE PTR [eax],dh
  4058ad:	push   es
  4058ae:	add    BYTE PTR [eax],al
  4058b0:	sub    BYTE PTR [eax+0x0],ah
  4058b3:	add    BYTE PTR [esi],al
  4058b5:	adc    edx,DWORD PTR [edx]
  4058b7:	add    BYTE PTR [ecx],dl
  4058b9:	push   cs
  4058ba:	adc    DWORD PTR [edi],ecx
  4058bc:	mov    ?,WORD PTR [edi+0x131304fe]
  4058c2:	adc    DWORD PTR [ebx],edx
  4058c4:	cmp    ah,BYTE PTR [esi+edi*8+0x3420ffff]
  4058cb:	push   es
  4058cc:	add    BYTE PTR [eax],al
  4058ce:	sub    BYTE PTR [eax+0x0],ah
  4058d1:	add    BYTE PTR [esi],al
  4058d3:	adc    edx,DWORD PTR [edx]
  4058d5:	or     BYTE PTR [edi-0x3a],ch
  4058d8:	add    BYTE PTR [eax],al
  4058da:	or     ah,BYTE PTR ds:0x20b78e26
  4058e0:	cmp    BYTE PTR [esi],al
  4058e2:	add    BYTE PTR [eax],al
  4058e4:	sub    BYTE PTR [eax+0x0],ah
  4058e7:	add    BYTE PTR [esi],al
  4058e9:	inc    BYTE PTR [edx]
  4058eb:	adc    edx,DWORD PTR [ebx]
  4058ed:	adc    DWORD PTR [ebx],edx
  4058ef:	sub    al,0x31
  4058f1:	sbb    DWORD PTR [ebp+0x1],eax
  4058f4:	add    BYTE PTR [eax],al
  4058f6:	add    dh,dh
  4058f8:	(bad)  
  4058f9:	(bad)  
  4058fa:	call   DWORD PTR [edi]
  4058fc:	sub    eax,0x4cd006
  405901:	add    BYTE PTR [esi],al
  405903:	and    BYTE PTR es:[esi+eax*1],bh
  405907:	add    BYTE PTR [eax],al
  405909:	sub    BYTE PTR [eax+0x0],ah
  40590c:	add    BYTE PTR [esi],al
  40590e:	adc    edx,DWORD PTR [edx]
  405910:	add    cl,BYTE PTR [eax]
  405912:	outs   dx,DWORD PTR ds:[esi]
  405913:	int    0x0
  405915:	add    BYTE PTR [edx],cl
  405917:	and    eax,0x4c6f0426
  40591c:	add    BYTE PTR [eax],al
  40591e:	push   es
  40591f:	and    eax,0x11002626
  405924:	or     al,0x20
  405926:	inc    eax
  405927:	push   es
  405928:	add    BYTE PTR [eax],al
  40592a:	sub    BYTE PTR [eax+0x0],ah
  40592d:	add    BYTE PTR [esi],al
  40592f:	(bad)  
  405930:	adc    ecx,DWORD PTR [eax+eiz*1]
  405933:	inc    esp
  405934:	push   es
  405935:	add    BYTE PTR [eax],al
  405937:	sub    BYTE PTR [eax+0x0],ah
  40593a:	add    BYTE PTR [esi],al
  40593c:	adc    edx,DWORD PTR [edx]
  40593e:	add    BYTE PTR [ecx],dl
  405940:	or     al,0x11
  405942:	or     eax,0x4feb78e
  405947:	adc    edx,DWORD PTR [ebx]
  405949:	adc    DWORD PTR [ebx],edx
  40594b:	cmp    dh,al
  40594d:	std    
  40594e:	(bad)  
  40594f:	call   FWORD PTR ds:0x145
  405955:	add    dh,dh
  405957:	(bad)  
  405958:	(bad)  
  405959:	(bad)  
  40595a:	(bad)  
  40595c:	add    BYTE PTR [eax],al
  40595e:	add    BYTE PTR [ecx],dl
  405960:	adc    DWORD PTR [ebx],ebp
  405962:	or     eax,0x48201111
  405967:	push   es
  405968:	add    BYTE PTR [eax],al
  40596a:	sub    BYTE PTR [eax+0x0],ah
  40596d:	add    BYTE PTR [esi],al
  40596f:	pop    eax
  405970:	and    BYTE PTR [esi+eax*1+0x0],cl
  405974:	add    BYTE PTR [eax],ch
  405976:	pusha  
  405977:	add    BYTE PTR [eax],al
  405979:	push   es
  40597a:	adc    edx,DWORD PTR [ecx]
  40597c:	inc    ebp
  40597d:	push   ss
  40597e:	add    BYTE PTR [eax],al
  405980:	add    BYTE PTR [eax],al
  405982:	add    BYTE PTR [eax],al
  405984:	add    BYTE PTR [edi*8-0x2d20001],bl
  40598b:	(bad)  
  40598c:	inc    DWORD PTR [eax-0x3]
  40598f:	(bad)  
  405990:	jmp    FWORD PTR [ebp-0x3]
  405993:	(bad)  
  405994:	call   FWORD PTR [edx-0x4f000003]
  40599a:	std    
  40599b:	(bad)  
  40599c:	(bad)  
  40599d:	fdivr  st,st(5)
  40599f:	(bad)  
  4059a0:	(bad)  
  4059a1:	out    dx,al
  4059a2:	std    
  4059a3:	(bad)  
  4059a4:	call   DWORD PTR [edi]
  4059a6:	(bad)  
  4059a7:	(bad)  
  4059a8:	jmp    DWORD PTR [esi]
  4059aa:	(bad)  
  4059ab:	(bad)  
  4059ac:	(bad)  
  4059ad:	cmp    al,0xfe
  4059af:	(bad)  
  4059b0:	call   DWORD PTR [edx-0x2]
  4059b3:	(bad)  
  4059b4:	jmp    FWORD PTR [eax-0x2]
  4059b7:	(bad)  
  4059b8:	call   FWORD PTR [ebp-0x3d000002]
  4059be:	(bad)  
  4059bf:	(bad)  
  4059c0:	call   edx
  4059c2:	(bad)  
  4059c3:	(bad)  
  4059c4:	push   eax
  4059c6:	(bad)  
  4059c7:	(bad)  
  4059c8:	jmp    FWORD PTR [ebx]
  4059ca:	(bad)  
  4059cb:	(bad)  
  4059cc:	dec    DWORD PTR [ecx-0x1]
  4059cf:	(bad)  
  4059d0:	call   FWORD PTR [ecx-0x1]
  4059d3:	(bad)  
  4059d4:	inc    DWORD PTR [ecx-0x21000001]
  4059da:	arpl   WORD PTR [ecx],dx
  4059dc:	adc    dl,BYTE PTR [ebx]
  4059de:	adc    DWORD PTR [ecx],edx
  4059e0:	adc    BYTE PTR [eax],ah
  4059e2:	push   eax
  4059e3:	push   es
  4059e4:	add    BYTE PTR [eax],al
  4059e6:	sub    BYTE PTR [eax+0x0],ah
  4059e9:	add    BYTE PTR [esi],al
  4059eb:	xor    BYTE PTR [eax+eiz*1],cl
  4059ee:	push   esp
  4059ef:	push   es
  4059f0:	add    BYTE PTR [eax],al
  4059f2:	sub    BYTE PTR [eax+0x0],ah
  4059f5:	add    BYTE PTR [esi],al
  4059f7:	sub    eax,DWORD PTR [edx]
  4059f9:	adc    DWORD PTR [eax],edx
  4059fb:	inc    ebp
  4059fc:	add    al,BYTE PTR [eax]
  4059fe:	add    BYTE PTR [eax],al
  405a00:	add    BYTE PTR [eax],al
  405a02:	add    BYTE PTR [eax],al
  405a04:	pop    ebx
  405a05:	(bad)  
  405a06:	(bad)  
  405a07:	(bad)  
  405a08:	fidiv  WORD PTR [esi*2+0x100004b]
  405a0f:	adc    al,0xfe
  405a11:	add    edx,DWORD PTR [ecx]
  405a13:	adc    BYTE PTR [eax],ah
  405a15:	pop    eax
  405a16:	push   es
  405a17:	add    BYTE PTR [eax],al
  405a19:	sub    BYTE PTR [eax+0x0],ah
  405a1c:	add    BYTE PTR [esi],al
  405a1e:	inc    BYTE PTR [ebx]
  405a20:	pop    edi
  405a21:	adc    DWORD PTR [ecx],edx
  405a23:	and    BYTE PTR [esi+eax*1+0x0],bl
  405a27:	add    BYTE PTR [eax],ch
  405a29:	pusha  
  405a2a:	add    BYTE PTR [eax],al
  405a2c:	push   es
  405a2d:	inc    BYTE PTR [ecx]
  405a2f:	pop    edi
  405a30:	(bad)  
  405a31:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405a35:	add    BYTE PTR [ecx],al
  405a37:	sub    BYTE PTR [edi+0x0],dl
  405a3a:	add    BYTE PTR [edx],cl
  405a3c:	ficomp WORD PTR [ebp+0x66020]
  405a42:	add    BYTE PTR [eax],ch
  405a44:	pusha  
  405a45:	add    BYTE PTR [eax],al
  405a47:	push   es
  405a48:	sub    BYTE PTR [eax+0x250a0000],bh
  405a4e:	es jp  0x405a57
  405a51:	adc    DWORD PTR [ecx],edx
  405a53:	sub    al,0xf
  405a55:	sbb    eax,DWORD PTR [ebp+0x1]
  405a58:	add    BYTE PTR [eax],al
  405a5a:	add    dh,dh
  405a5c:	(bad)  
  405a5d:	(bad)  
  405a5e:	jmp    FWORD PTR [eax]
  405a60:	pop    ebx
  405a61:	add    BYTE PTR [eax],al
  405a63:	or     ch,BYTE PTR [edx]
  405a65:	add    BYTE PTR [eax],al
  405a67:	add    BYTE PTR [ecx+0x1c],al
  405a6a:	add    BYTE PTR [eax],al
  405a6c:	add    DWORD PTR [eax],eax
  405a6e:	add    BYTE PTR [eax],al
  405a70:	add    DWORD PTR [eax],eax
  405a72:	add    BYTE PTR [eax],al
  405a74:	adc    eax,0x3e000003
  405a79:	add    eax,DWORD PTR [eax]
  405a7b:	add    BYTE PTR [eax+eax*1],cl
  405a7e:	add    BYTE PTR [eax],al
  405a80:	push   ss
  405a81:	add    eax,DWORD PTR [eax]
  405a83:	add    BYTE PTR [ebx],bl
  405a85:	xor    BYTE PTR ds:0x2a300,al
  405a8b:	add    BYTE PTR [ebx],ah
  405a8d:	add    BYTE PTR [eax],al
  405a8f:	adc    DWORD PTR [eax],eax
  405a91:	sub    BYTE PTR [ebx+0x0],bl
  405a94:	add    BYTE PTR [edx],cl
  405a96:	and    BYTE PTR [esi+eax*1+0x0],ah
  405a9a:	add    BYTE PTR [eax],ch
  405a9c:	pusha  
  405a9d:	add    BYTE PTR [eax],al
  405a9f:	push   es
  405aa0:	adc    ecx,DWORD PTR [edx]
  405aa2:	and    BYTE PTR [eax+0x6],ch
  405aa5:	add    BYTE PTR [eax],al
  405aa7:	sub    BYTE PTR [eax+0x0],ah
  405aaa:	add    BYTE PTR [esi],al
  405aac:	adc    ecx,DWORD PTR [ebx+eax*1]
  405aaf:	outs   dx,DWORD PTR ds:[esi]
  405ab0:	rol    BYTE PTR [eax],1
  405ab2:	add    BYTE PTR [edx],cl
  405ab4:	and    eax,0x6c200d26
  405ab9:	push   es
  405aba:	add    BYTE PTR [eax],al
  405abc:	sub    BYTE PTR [eax+0x0],ah
  405abf:	add    BYTE PTR [esi],al
  405ac1:	adc    ecx,DWORD PTR [ecx+ecx*1]
  405ac4:	and    BYTE PTR [eax+0x6],dh
  405ac7:	add    BYTE PTR [eax],al
  405ac9:	sub    BYTE PTR [eax+0x0],ah
  405acc:	add    BYTE PTR [esi],al
  405ace:	outs   dx,DWORD PTR ds:[esi]
  405acf:	rol    DWORD PTR [eax],1
  405ad1:	add    BYTE PTR [edx],cl
  405ad3:	and    eax,0x20051326
  405ad8:	je     0x405ae0
  405ada:	add    BYTE PTR [eax],al
  405adc:	sub    BYTE PTR [eax+0x0],ah
  405adf:	add    BYTE PTR [esi],al
  405ae1:	adc    ecx,DWORD PTR [ecx+edx*1]
  405ae4:	add    eax,0x67820
  405ae9:	add    BYTE PTR [eax],ch
  405aeb:	pusha  
  405aec:	add    BYTE PTR [eax],al
  405aee:	push   es
  405aef:	(bad)  
  405af0:	lea    ebx,[esi]
  405af2:	add    BYTE PTR [eax],al
  405af4:	add    DWORD PTR [edx],ecx
  405af6:	and    BYTE PTR [esi+eax*1+0x0],bh
  405afa:	add    BYTE PTR [eax],ch
  405afc:	pusha  
  405afd:	add    BYTE PTR [eax],al
  405aff:	push   es
  405b00:	adc    ecx,DWORD PTR [eax+eiz*1]
  405b03:	add    BYTE PTR [esi],0x0
  405b06:	add    BYTE PTR [eax],ch
  405b08:	pusha  
  405b09:	add    BYTE PTR [eax],al
  405b0b:	push   es
  405b0c:	or     DWORD PTR [eax],esp
  405b0e:	test   BYTE PTR [esi],al
  405b10:	add    BYTE PTR [eax],al
  405b12:	sub    BYTE PTR [eax+0x0],ah
  405b15:	add    BYTE PTR [esi],al
  405b17:	outs   dx,DWORD PTR ds:[esi]
  405b18:	rol    DWORD PTR [eax],1
  405b1a:	add    BYTE PTR [edx],cl
  405b1c:	adc    ecx,DWORD PTR [ecx]
  405b1e:	adc    eax,DWORD PTR [edi]
  405b20:	sub    edi,DWORD PTR [eax]
  405b22:	and    BYTE PTR [eax+0x28000006],cl
  405b28:	pusha  
  405b29:	add    BYTE PTR [eax],al
  405b2b:	push   es
  405b2c:	adc    ecx,DWORD PTR [esi+eax*1]
  405b2f:	adc    DWORD PTR [edi],eax
  405b31:	or     DWORD PTR [ecx],edx
  405b33:	pop    es
  405b34:	xchg   ebx,eax
  405b35:	sub    dl,dl
  405b37:	add    BYTE PTR [eax],al
  405b39:	or     ah,BYTE PTR ds:0x209cb426
  405b3f:	mov    WORD PTR [esi],es
  405b41:	add    BYTE PTR [eax],al
  405b43:	sub    BYTE PTR [eax+0x0],ah
  405b46:	add    BYTE PTR [esi],al
  405b48:	adc    ecx,DWORD PTR [eax+eax*1]
  405b4b:	adc    DWORD PTR [edi],eax
  405b4d:	and    BYTE PTR [eax+0x28000006],dl
  405b53:	pusha  
  405b54:	add    BYTE PTR [eax],al
  405b56:	push   es
  405b57:	(bad)  
  405b58:	adc    eax,DWORD PTR [edi]
  405b5a:	adc    DWORD PTR [edi],eax
  405b5c:	adc    DWORD PTR [ecx],ecx
  405b5e:	adc    ecx,DWORD PTR ds:0xbe310d11
  405b64:	sbb    BYTE PTR [ebp+0x1],al
  405b67:	add    BYTE PTR [eax],al
  405b69:	add    dh,dh
  405b6b:	(bad)  
  405b6c:	(bad)  
  405b6d:	call   DWORD PTR [edi]
  405b6f:	sub    eax,0x4dd006
  405b74:	add    BYTE PTR [esi],al
  405b76:	and    BYTE PTR es:[esi+eax*1+0x60280000],dl
  405b7e:	add    BYTE PTR [eax],al
  405b80:	push   es
  405b81:	adc    ecx,DWORD PTR [ebx+esi*2]
  405b84:	rol    DWORD PTR [eax],cl
  405b86:	add    BYTE PTR [edx],cl
  405b88:	adc    eax,DWORD PTR [esi]
  405b8a:	and    BYTE PTR [eax+0x28000006],bl
  405b90:	pusha  
  405b91:	add    BYTE PTR [eax],al
  405b93:	push   es
  405b94:	adc    ecx,DWORD PTR [ecx+edx*1]
  405b97:	push   es
  405b98:	push   es
  405b99:	outs   dx,DWORD PTR ds:[esi]
  405b9a:	aam    0x0
  405b9c:	add    BYTE PTR [edx],cl
  405b9e:	and    eax,0x9c200c26
  405ba3:	push   es
  405ba4:	add    BYTE PTR [eax],al
  405ba6:	sub    BYTE PTR [eax+0x0],ah
  405ba9:	add    BYTE PTR [esi],al
  405bab:	adc    ecx,DWORD PTR [eax+eiz*1]
  405bae:	mov    al,ds:0x28000006
  405bb3:	pusha  
  405bb4:	add    BYTE PTR [eax],al
  405bb6:	push   es
  405bb7:	lea    ebx,[esi]
  405bb9:	add    BYTE PTR [eax],al
  405bbb:	add    DWORD PTR [ebx],ecx
  405bbd:	and    BYTE PTR [esi+eax*1+0x60280000],ah
  405bc4:	add    BYTE PTR [eax],al
  405bc6:	push   es
  405bc7:	adc    ecx,DWORD PTR [eax+eiz*1]
  405bca:	test   al,0x6
  405bcc:	add    BYTE PTR [eax],al
  405bce:	sub    BYTE PTR [eax+0x0],ah
  405bd1:	add    BYTE PTR [esi],al
  405bd3:	adc    ecx,DWORD PTR [eax]
  405bd5:	and    BYTE PTR [esi+eax*1+0x60280000],ch
  405bdc:	add    BYTE PTR [eax],al
  405bde:	push   es
  405bdf:	adc    ecx,DWORD PTR [edi+eax*1]
  405be2:	adc    DWORD PTR [eax],ecx
  405be4:	or     BYTE PTR [ecx],dl
  405be6:	or     BYTE PTR [ecx+0x6b0209c],dl
  405bec:	add    BYTE PTR [eax],al
  405bee:	sub    BYTE PTR [eax+0x0],ah
  405bf1:	add    BYTE PTR [esi],al
  405bf3:	adc    ecx,DWORD PTR [eax+eax*1]
  405bf6:	adc    DWORD PTR [eax],ecx
  405bf8:	and    BYTE PTR [esi+eax*1+0x60280000],dh
  405bff:	add    BYTE PTR [eax],al
  405c01:	push   es
  405c02:	(bad)  
  405c03:	adc    ecx,DWORD PTR [eax]
  405c05:	adc    DWORD PTR [eax],ecx
  405c07:	and    BYTE PTR [eax+0x28000006],bh
  405c0d:	pusha  
  405c0e:	add    BYTE PTR [eax],al
  405c10:	push   es
  405c11:	adc    ecx,DWORD PTR ds:0xbe310d11
  405c17:	pop    ss
  405c18:	inc    ebp
  405c19:	add    DWORD PTR [eax],eax
  405c1b:	add    BYTE PTR [eax],al
  405c1d:	idiv   bh
  405c1f:	(bad)  
  405c20:	jmp    DWORD PTR [eax]
  405c22:	mov    esp,0x28000006
  405c27:	pusha  
  405c28:	add    BYTE PTR [eax],al
  405c2a:	push   es
  405c2b:	adc    ecx,DWORD PTR [edi+eax*1]
  405c2e:	adc    eax,DWORD PTR [ebx*8+0xe8]
  405c35:	fucom  st(3)
  405c37:	add    BYTE PTR [eax],al
  405c39:	add    BYTE PTR [ecx],dl
  405c3b:	or     ebp,DWORD PTR [ebx]
  405c3d:	or     eax,0xc0200b11
  405c42:	push   es
  405c43:	add    BYTE PTR [eax],al
  405c45:	sub    BYTE PTR [eax+0x0],ah
  405c48:	add    BYTE PTR [esi],al
  405c4a:	pop    eax
  405c4b:	and    ah,al
  405c4d:	push   es
  405c4e:	add    BYTE PTR [eax],al
  405c50:	sub    BYTE PTR [eax+0x0],ah
  405c53:	add    BYTE PTR [esi],al
  405c55:	adc    ecx,DWORD PTR [ebx]
  405c57:	inc    ebp
  405c58:	adc    BYTE PTR [eax],al
  405c5a:	add    BYTE PTR [eax],al
  405c5c:	add    BYTE PTR [eax],al
  405c5e:	add    BYTE PTR [eax],al
  405c60:	cmc    
  405c61:	std    
  405c62:	(bad)  
  405c63:	inc    DWORD PTR [esi]
  405c65:	(bad)  
  405c66:	(bad)  
  405c67:	call   FWORD PTR [ebx]
  405c69:	(bad)  
  405c6a:	(bad)  
  405c6b:	(bad)  
  405c6c:	cmp    edi,esi
  405c6e:	(bad)  
  405c6f:	call   FWORD PTR [edx-0x2]
  405c72:	(bad)  
  405c73:	inc    DWORD PTR [esi-0x5d000002]
  405c79:	(bad)  
  405c7a:	(bad)  
  405c7b:	(bad)  
  405c7c:	(bad)  
  405c7e:	(bad)  
  405c7f:	(bad)  
  405c80:	out    dx,al
  405c81:	(bad)  
  405c82:	(bad)  
  405c83:	inc    DWORD PTR ds:0x21ffffff
  405c89:	(bad)  
  405c8a:	(bad)  
  405c8b:	(bad)  
  405c8c:	cmp    edi,edi
  405c8e:	(bad)  
  405c8f:	dec    DWORD PTR [ebp-0x1]
  405c92:	(bad)  
  405c93:	inc    DWORD PTR [ebp-0x66000001]
  405c99:	(bad)  
  405c9a:	(bad)  
  405c9b:	(bad)  
  405c9c:	fisubr WORD PTR [ebp+0x11]
  405c9f:	or     al,0x13
  405ca1:	or     edx,DWORD PTR [ecx]
  405ca3:	or     ah,BYTE PTR [eax]
  405ca5:	enter  0x6,0x0
  405ca9:	sub    BYTE PTR [eax+0x0],ah
  405cac:	add    BYTE PTR [esi],al
  405cae:	xor    BYTE PTR [esi],dl
  405cb0:	sbb    al,0x45
  405cb2:	add    DWORD PTR [eax],eax
  405cb4:	add    BYTE PTR [eax],al
  405cb6:	idiv   bh
  405cb8:	(bad)  
  405cb9:	jmp    DWORD PTR [eax]
  405cbb:	int3   
  405cbc:	push   es
  405cbd:	add    BYTE PTR [eax],al
  405cbf:	sub    BYTE PTR [eax+0x0],ah
  405cc2:	add    BYTE PTR [esi],al
  405cc4:	sub    eax,DWORD PTR [edx]
  405cc6:	adc    DWORD PTR [edx],ecx
  405cc8:	inc    ebp
  405cc9:	add    al,BYTE PTR [eax]
  405ccb:	add    BYTE PTR [eax],al
  405ccd:	add    BYTE PTR [eax],al
  405ccf:	add    BYTE PTR [eax],al
  405cd1:	imul   edi,edi,0x34deffff
  405cd7:	jne    0x405d24
  405cd9:	add    BYTE PTR [eax],al
  405cdb:	add    DWORD PTR [esi+edi*8],edx
  405cde:	add    edx,DWORD PTR [ecx]
  405ce0:	or     ah,BYTE PTR [eax]
  405ce2:	rol    BYTE PTR [esi],1
  405ce4:	add    BYTE PTR [eax],al
  405ce6:	sub    BYTE PTR [eax+0x0],ah
  405ce9:	add    BYTE PTR [esi],al
  405ceb:	inc    BYTE PTR [ebx]
  405ced:	pop    edi
  405cee:	adc    DWORD PTR [ebx],ecx
  405cf0:	and    ah,dl
  405cf2:	push   es
  405cf3:	add    BYTE PTR [eax],al
  405cf5:	sub    BYTE PTR [eax+0x0],ah
  405cf8:	add    BYTE PTR [esi],al
  405cfa:	inc    BYTE PTR [ecx]
  405cfc:	pop    edi
  405cfd:	(bad)  
  405cfe:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405d02:	add    BYTE PTR [ecx],al
  405d04:	sub    BYTE PTR [edi+0x0],dl
  405d07:	add    BYTE PTR [edx],cl
  405d09:	ficom  WORD PTR [ebx+0x6d820]
  405d0f:	add    BYTE PTR [eax],ch
  405d11:	pusha  
  405d12:	add    BYTE PTR [eax],al
  405d14:	push   es
  405d15:	sub    BYTE PTR [eax+0x250a0000],bh
  405d1b:	es jp  0x405d2f
  405d1e:	add    al,0x11
  405d20:	or     ebp,DWORD PTR [edi+ecx*1]
  405d23:	sbb    eax,0x145
  405d28:	add    dh,dh
  405d2a:	(bad)  
  405d2b:	(bad)  
  405d2c:	jmp    FWORD PTR [eax]
  405d2e:	pop    ebx
  405d2f:	add    BYTE PTR [eax],al
  405d31:	or     ch,BYTE PTR [edx]
  405d33:	add    BYTE PTR [ecx+0x1c],al
  405d36:	add    BYTE PTR [eax],al
  405d38:	add    DWORD PTR [eax],eax
  405d3a:	add    BYTE PTR [eax],al
  405d3c:	add    DWORD PTR [eax],eax
  405d3e:	add    BYTE PTR [eax],al
  405d40:	inc    esi
  405d41:	add    al,BYTE PTR [eax]
  405d43:	add    BYTE PTR [edi+0x2],ch
  405d46:	add    BYTE PTR [eax],al
  405d48:	or     al,0x0
  405d4a:	add    BYTE PTR [eax],al
  405d4c:	inc    edi
  405d4d:	add    al,BYTE PTR [eax]
  405d4f:	add    BYTE PTR [ebx],bl
  405d51:	xor    BYTE PTR ds:0x2a600,al
  405d57:	add    BYTE PTR [ebx],ah
  405d59:	add    BYTE PTR [eax],al
  405d5b:	adc    DWORD PTR [eax],eax
  405d5d:	sub    BYTE PTR [ebx+0x0],bl
  405d60:	add    BYTE PTR [edx],cl
  405d62:	and    ah,bl
  405d64:	push   es
  405d65:	add    BYTE PTR [eax],al
  405d67:	sub    BYTE PTR [eax+0x0],ah
  405d6a:	add    BYTE PTR [esi],al
  405d6c:	adc    ecx,DWORD PTR [edx]
  405d6e:	and    al,ah
  405d70:	push   es
  405d71:	add    BYTE PTR [eax],al
  405d73:	sub    BYTE PTR [eax+0x0],ah
  405d76:	add    BYTE PTR [esi],al
  405d78:	adc    ecx,DWORD PTR [ebx+eax*1]
  405d7b:	outs   dx,DWORD PTR ds:[esi]
  405d7c:	rol    BYTE PTR [eax],1
  405d7e:	add    BYTE PTR [edx],cl
  405d80:	and    eax,0xe4200d26
  405d85:	push   es
  405d86:	add    BYTE PTR [eax],al
  405d88:	sub    BYTE PTR [eax+0x0],ah
  405d8b:	add    BYTE PTR [esi],al
  405d8d:	adc    ecx,DWORD PTR [ecx+ecx*1]
  405d90:	and    al,ch
  405d92:	push   es
  405d93:	add    BYTE PTR [eax],al
  405d95:	sub    BYTE PTR [eax+0x0],ah
  405d98:	add    BYTE PTR [esi],al
  405d9a:	outs   dx,DWORD PTR ds:[esi]
  405d9b:	rol    DWORD PTR [eax],1
  405d9d:	add    BYTE PTR [edx],cl
  405d9f:	and    eax,0x20051326
  405da4:	in     al,dx
  405da5:	push   es
  405da6:	add    BYTE PTR [eax],al
  405da8:	sub    BYTE PTR [eax+0x0],ah
  405dab:	add    BYTE PTR [esi],al
  405dad:	adc    ecx,DWORD PTR [ecx+edx*1]
  405db0:	add    eax,0x6f020
  405db5:	add    BYTE PTR [eax],ch
  405db7:	pusha  
  405db8:	add    BYTE PTR [eax],al
  405dba:	push   es
  405dbb:	(bad)  
  405dbc:	lea    ebx,[esi]
  405dbe:	add    BYTE PTR [eax],al
  405dc0:	add    DWORD PTR [edx],ecx
  405dc2:	and    ah,dh
  405dc4:	push   es
  405dc5:	add    BYTE PTR [eax],al
  405dc7:	sub    BYTE PTR [eax+0x0],ah
  405dca:	add    BYTE PTR [esi],al
  405dcc:	adc    ecx,DWORD PTR [eax+eiz*1]
  405dcf:	clc    
  405dd0:	push   es
  405dd1:	add    BYTE PTR [eax],al
  405dd3:	sub    BYTE PTR [eax+0x0],ah
  405dd6:	add    BYTE PTR [esi],al
  405dd8:	or     DWORD PTR [eax],esp
  405dda:	cld    
  405ddb:	push   es
  405ddc:	add    BYTE PTR [eax],al
  405dde:	sub    BYTE PTR [eax+0x0],ah
  405de1:	add    BYTE PTR [esi],al
  405de3:	outs   dx,DWORD PTR ds:[esi]
  405de4:	rol    DWORD PTR [eax],1
  405de6:	add    BYTE PTR [edx],cl
  405de8:	and    eax,0x13091326
  405ded:	pop    es
  405dee:	sub    edi,DWORD PTR [eax]
  405df0:	and    BYTE PTR [eax],al
  405df2:	pop    es
  405df3:	add    BYTE PTR [eax],al
  405df5:	sub    BYTE PTR [eax+0x0],ah
  405df8:	add    BYTE PTR [esi],al
  405dfa:	adc    ecx,DWORD PTR [esi+eax*1]
  405dfd:	adc    DWORD PTR [edi],eax
  405dff:	or     DWORD PTR [ecx],edx
  405e01:	pop    es
  405e02:	xchg   ebx,eax
  405e03:	sub    dl,dl
  405e05:	add    BYTE PTR [eax],al
  405e07:	or     ah,BYTE PTR ds:0x209cb426
  405e0d:	add    al,0x7
  405e0f:	add    BYTE PTR [eax],al
  405e11:	sub    BYTE PTR [eax+0x0],ah
  405e14:	add    BYTE PTR [esi],al
  405e16:	adc    ecx,DWORD PTR [eax+eax*1]
  405e19:	adc    DWORD PTR [edi],eax
  405e1b:	and    BYTE PTR [eax],cl
  405e1d:	pop    es
  405e1e:	add    BYTE PTR [eax],al
  405e20:	sub    BYTE PTR [eax+0x0],ah
  405e23:	add    BYTE PTR [esi],al
  405e25:	(bad)  
  405e26:	adc    eax,DWORD PTR [edi]
  405e28:	adc    DWORD PTR [edi],eax
  405e2a:	adc    DWORD PTR [ecx],ecx
  405e2c:	adc    ecx,DWORD PTR ds:0xbe310d11
  405e32:	pop    ss
  405e33:	inc    ebp
  405e34:	add    DWORD PTR [eax],eax
  405e36:	add    BYTE PTR [eax],al
  405e38:	idiv   bh
  405e3a:	(bad)  
  405e3b:	call   DWORD PTR [edi]
  405e3d:	sub    eax,0x4ed006
  405e42:	add    BYTE PTR [esi],al
  405e44:	and    BYTE PTR es:[edi+eax*1],cl
  405e48:	add    BYTE PTR [eax],al
  405e4a:	sub    BYTE PTR [eax+0x0],ah
  405e4d:	add    BYTE PTR [esi],al
  405e4f:	adc    ecx,DWORD PTR [ebx+esi*2]
  405e52:	rol    DWORD PTR [eax],cl
  405e54:	add    BYTE PTR [edx],cl
  405e56:	adc    eax,DWORD PTR [esi]
  405e58:	and    BYTE PTR [eax],dl
  405e5a:	pop    es
  405e5b:	add    BYTE PTR [eax],al
  405e5d:	sub    BYTE PTR [eax+0x0],ah
  405e60:	add    BYTE PTR [esi],al
  405e62:	adc    ecx,DWORD PTR [ecx+edx*1]
  405e65:	push   es
  405e66:	push   es
  405e67:	outs   dx,DWORD PTR ds:[esi]
  405e68:	aam    0x0
  405e6a:	add    BYTE PTR [edx],cl
  405e6c:	and    eax,0x14200c26
  405e71:	pop    es
  405e72:	add    BYTE PTR [eax],al
  405e74:	sub    BYTE PTR [eax+0x0],ah
  405e77:	add    BYTE PTR [esi],al
  405e79:	adc    ecx,DWORD PTR [eax+eiz*1]
  405e7c:	sbb    BYTE PTR [edi],al
  405e7e:	add    BYTE PTR [eax],al
  405e80:	sub    BYTE PTR [eax+0x0],ah
  405e83:	add    BYTE PTR [esi],al
  405e85:	lea    ebx,[esi]
  405e87:	add    BYTE PTR [eax],al
  405e89:	add    DWORD PTR [ebx],ecx
  405e8b:	and    BYTE PTR [edi+eax*1],bl
  405e8e:	add    BYTE PTR [eax],al
  405e90:	sub    BYTE PTR [eax+0x0],ah
  405e93:	add    BYTE PTR [esi],al
  405e95:	adc    ecx,DWORD PTR [eax+eiz*1]
  405e98:	and    BYTE PTR [edi],al
  405e9a:	add    BYTE PTR [eax],al
  405e9c:	sub    BYTE PTR [eax+0x0],ah
  405e9f:	add    BYTE PTR [esi],al
  405ea1:	adc    ecx,DWORD PTR [eax]
  405ea3:	and    BYTE PTR [edi+eax*1],ah
  405ea6:	add    BYTE PTR [eax],al
  405ea8:	sub    BYTE PTR [eax+0x0],ah
  405eab:	add    BYTE PTR [esi],al
  405ead:	adc    ecx,DWORD PTR [edi+eax*1]
  405eb0:	adc    DWORD PTR [eax],ecx
  405eb2:	and    BYTE PTR [eax],ch
  405eb4:	pop    es
  405eb5:	add    BYTE PTR [eax],al
  405eb7:	sub    BYTE PTR [eax+0x0],ah
  405eba:	add    BYTE PTR [esi],al
  405ebc:	fimul  DWORD PTR [eax]
  405ebe:	adc    DWORD PTR [eax],ecx
  405ec0:	xchg   ecx,eax
  405ec1:	pushf  
  405ec2:	and    BYTE PTR [edi+eax*1],ch
  405ec5:	add    BYTE PTR [eax],al
  405ec7:	sub    BYTE PTR [eax+0x0],ah
  405eca:	add    BYTE PTR [esi],al
  405ecc:	adc    ecx,DWORD PTR [eax+eax*1]
  405ecf:	adc    DWORD PTR [eax],ecx
  405ed1:	and    BYTE PTR [eax],dh
  405ed3:	pop    es
  405ed4:	add    BYTE PTR [eax],al
  405ed6:	sub    BYTE PTR [eax+0x0],ah
  405ed9:	add    BYTE PTR [esi],al
  405edb:	(bad)  
  405edc:	adc    ecx,DWORD PTR [eax]
  405ede:	adc    DWORD PTR [eax],ecx
  405ee0:	and    BYTE PTR [edi+eax*1],dh
  405ee3:	add    BYTE PTR [eax],al
  405ee5:	sub    BYTE PTR [eax+0x0],ah
  405ee8:	add    BYTE PTR [esi],al
  405eea:	adc    ecx,DWORD PTR ds:0xb3310d11
  405ef0:	sbb    eax,0x145
  405ef5:	add    dh,dh
  405ef7:	(bad)  
  405ef8:	(bad)  
  405ef9:	jmp    DWORD PTR [eax]
  405efb:	cmp    BYTE PTR [edi],al
  405efd:	add    BYTE PTR [eax],al
  405eff:	sub    BYTE PTR [eax+0x0],ah
  405f02:	add    BYTE PTR [esi],al
  405f04:	adc    ecx,DWORD PTR [edi+eax*1]
  405f07:	adc    eax,DWORD PTR [ebx*8+0xde]
  405f0e:	fstp   st(1)
  405f10:	add    BYTE PTR [eax],al
  405f12:	add    BYTE PTR [ecx],dl
  405f14:	or     ebp,DWORD PTR [ebx]
  405f16:	or     eax,0x3c200b11
  405f1b:	pop    es
  405f1c:	add    BYTE PTR [eax],al
  405f1e:	sub    BYTE PTR [eax+0x0],ah
  405f21:	add    BYTE PTR [esi],al
  405f23:	pop    eax
  405f24:	and    BYTE PTR [eax+0x7],al
  405f27:	add    BYTE PTR [eax],al
  405f29:	sub    BYTE PTR [eax+0x0],ah
  405f2c:	add    BYTE PTR [esi],al
  405f2e:	adc    ecx,DWORD PTR [ebx]
  405f30:	inc    ebp
  405f31:	adc    BYTE PTR [eax],al
  405f33:	add    BYTE PTR [eax],al
  405f35:	add    BYTE PTR [eax],al
  405f37:	add    BYTE PTR [eax],al
  405f39:	call   0xfa405f3b
  405f3e:	std    
  405f3f:	(bad)  
  405f40:	dec    DWORD PTR [esi]
  405f42:	(bad)  
  405f43:	(bad)  
  405f44:	jmp    FWORD PTR [esi]
  405f46:	(bad)  
  405f47:	(bad)  
  405f48:	dec    DWORD PTR [ebp-0x2]
  405f4b:	(bad)  
  405f4c:	(bad)  
  405f4d:	jnp    0x405f4d
  405f4f:	(bad)  
  405f50:	call   DWORD PTR [edi-0x2f000002]
  405f56:	(bad)  
  405f57:	(bad)  
  405f58:	jmp    ebx
  405f5a:	(bad)  
  405f5b:	(bad)  
  405f5c:	(bad)  
  405f5d:	cli    
  405f5e:	(bad)  
  405f5f:	(bad)  
  405f60:	call   DWORD PTR [esi]
  405f62:	(bad)  
  405f63:	(bad)  
  405f64:	jmp    FWORD PTR [esi]
  405f66:	(bad)  
  405f67:	(bad)  
  405f68:	dec    DWORD PTR [ebp-0x1]
  405f6b:	(bad)  
  405f6c:	inc    DWORD PTR [ebp-0x66000001]
  405f72:	(bad)  
  405f73:	(bad)  
  405f74:	(bad)  
  405f75:	fisub  WORD PTR [ebx+0x11]
  405f78:	or     al,0x13
  405f7a:	or     edx,DWORD PTR [ecx]
  405f7c:	or     ah,BYTE PTR [eax]
  405f7e:	inc    esp
  405f7f:	pop    es
  405f80:	add    BYTE PTR [eax],al
  405f82:	sub    BYTE PTR [eax+0x0],ah
  405f85:	add    BYTE PTR [esi],al
  405f87:	xor    BYTE PTR [eax+eiz*1],cl
  405f8a:	dec    eax
  405f8b:	pop    es
  405f8c:	add    BYTE PTR [eax],al
  405f8e:	sub    BYTE PTR [eax+0x0],ah
  405f91:	add    BYTE PTR [esi],al
  405f93:	sub    eax,DWORD PTR [edx]
  405f95:	adc    DWORD PTR [edx],ecx
  405f97:	inc    ebp
  405f98:	add    al,BYTE PTR [eax]
  405f9a:	add    BYTE PTR [eax],al
  405f9c:	add    BYTE PTR [eax],al
  405f9e:	add    BYTE PTR [eax],al
  405fa0:	jae    0x405fa1
  405fa2:	(bad)  
  405fa3:	(bad)  
  405fa4:	fidiv  WORD PTR [esi*2+0x100004b]
  405fab:	adc    al,0xfe
  405fad:	add    edx,DWORD PTR [ecx]
  405faf:	or     ah,BYTE PTR [eax]
  405fb1:	dec    esp
  405fb2:	pop    es
  405fb3:	add    BYTE PTR [eax],al
  405fb5:	sub    BYTE PTR [eax+0x0],ah
  405fb8:	add    BYTE PTR [esi],al
  405fba:	inc    BYTE PTR [ebx]
  405fbc:	pop    edi
  405fbd:	adc    DWORD PTR [ebx],ecx
  405fbf:	and    BYTE PTR [eax+0x7],dl
  405fc2:	add    BYTE PTR [eax],al
  405fc4:	sub    BYTE PTR [eax+0x0],ah
  405fc7:	add    BYTE PTR [esi],al
  405fc9:	inc    BYTE PTR [ecx]
  405fcb:	pop    edi
  405fcc:	(bad)  
  405fcd:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405fd1:	add    BYTE PTR [ecx],al
  405fd3:	sub    BYTE PTR [edi+0x0],dl
  405fd6:	add    BYTE PTR [edx],cl
  405fd8:	ficomp WORD PTR [ebp+0x75420]
  405fde:	add    BYTE PTR [eax],ch
  405fe0:	pusha  
  405fe1:	add    BYTE PTR [eax],al
  405fe3:	push   es
  405fe4:	sub    BYTE PTR [eax+0x250a0000],bh
  405fea:	es jp  0x405ffe
  405fed:	add    al,0x11
  405fef:	or     ebp,DWORD PTR [edi+ecx*1]
  405ff2:	sbb    DWORD PTR [ebp+0x1],eax
  405ff5:	add    BYTE PTR [eax],al
  405ff7:	add    dh,dh
  405ff9:	(bad)  
  405ffa:	(bad)  
  405ffb:	jmp    FWORD PTR [eax]
  405ffd:	pop    ebx
  405ffe:	add    BYTE PTR [eax],al
  406000:	or     ch,BYTE PTR [edx]
  406002:	add    BYTE PTR [eax],al
  406004:	inc    ecx
  406005:	sbb    al,0x0
  406007:	add    BYTE PTR [ecx],al
  406009:	add    BYTE PTR [eax],al
  40600b:	add    BYTE PTR [ecx],al
  40600d:	add    BYTE PTR [eax],al
  40600f:	add    BYTE PTR [ecx+0x2],cl
  406012:	add    BYTE PTR [eax],al
  406014:	jb     0x406018
  406016:	add    BYTE PTR [eax],al
  406018:	or     al,0x0
  40601a:	add    BYTE PTR [eax],al
  40601c:	dec    edx
  40601d:	add    al,BYTE PTR [eax]
  40601f:	add    BYTE PTR [ebx],bl
  406021:	xor    BYTE PTR ds:0x47200,al
  406027:	add    BYTE PTR [eax+eax*1],ah
  40602a:	add    BYTE PTR [ecx],dl
  40602c:	add    BYTE PTR [eax],ch
  40602e:	pop    ebx
  40602f:	add    BYTE PTR [eax],al
  406031:	or     ah,BYTE PTR [eax]
  406033:	pop    eax
  406034:	pop    es
  406035:	add    BYTE PTR [eax],al
  406037:	sub    BYTE PTR [eax+0x0],ah
  40603a:	add    BYTE PTR [esi],al
  40603c:	adc    ecx,DWORD PTR [ecx]
  40603e:	and    BYTE PTR [edi+eax*1+0x0],bl
  406042:	add    BYTE PTR [eax],ch
  406044:	pusha  
  406045:	add    BYTE PTR [eax],al
  406047:	push   es
  406048:	adc    ecx,DWORD PTR [ebx]
  40604a:	add    al,BYTE PTR [ebx]
  40604c:	and    BYTE PTR [eax+0x7],ah
  40604f:	add    BYTE PTR [eax],al
  406051:	sub    BYTE PTR [eax+0x0],ah
  406054:	add    BYTE PTR [esi],al
  406056:	and    BYTE PTR [edi+eax*1+0x0],ah
  40605a:	add    BYTE PTR [eax],ch
  40605c:	pusha  
  40605d:	add    BYTE PTR [eax],al
  40605f:	push   es
  406060:	jae    0x406037
  406062:	add    BYTE PTR [eax],al
  406064:	or     bh,BYTE PTR [ebp+0x1b]
  406067:	add    BYTE PTR [eax],al
  406069:	add    al,0x20
  40606b:	push   0x28000007
  406070:	pusha  
  406071:	add    BYTE PTR [eax],al
  406073:	push   es
  406074:	adc    ecx,DWORD PTR [ebx]
  406076:	add    al,BYTE PTR [eax+eiz*1]
  406079:	ins    BYTE PTR es:[edi],dx
  40607a:	pop    es
  40607b:	add    BYTE PTR [eax],al
  40607d:	sub    BYTE PTR [eax+0x0],ah
  406080:	add    BYTE PTR [esi],al
  406082:	and    BYTE PTR [eax+0x7],dh
  406085:	add    BYTE PTR [eax],al
  406087:	sub    BYTE PTR [eax+0x0],ah
  40608a:	add    BYTE PTR [esi],al
  40608c:	jae    0x406063
  40608e:	add    BYTE PTR [eax],al
  406090:	or     bh,BYTE PTR [ebp+0x1c]
  406093:	add    BYTE PTR [eax],al
  406095:	add    al,0x20
  406097:	je     0x4060a0
  406099:	add    BYTE PTR [eax],al
  40609b:	sub    BYTE PTR [eax+0x0],ah
  40609e:	add    BYTE PTR [esi],al
  4060a0:	adc    ecx,DWORD PTR [ebx]
  4060a2:	add    bh,BYTE PTR [ebx+0x1c]
  4060a5:	add    BYTE PTR [eax],al
  4060a7:	add    al,0x20
  4060a9:	js     0x4060b2
  4060ab:	add    BYTE PTR [eax],al
  4060ad:	sub    BYTE PTR [eax+0x0],ah
  4060b0:	add    BYTE PTR [esi],al
  4060b2:	push   0x6f
  4060b4:	(bad)  
  4060b5:	add    BYTE PTR [eax],al
  4060b7:	or     al,BYTE PTR [eax]
  4060b9:	and    BYTE PTR [edi+eax*1+0x0],bh
  4060bd:	add    BYTE PTR [eax],ch
  4060bf:	pusha  
  4060c0:	add    BYTE PTR [eax],al
  4060c2:	push   es
  4060c3:	adc    ecx,DWORD PTR [ebx]
  4060c5:	and    BYTE PTR [eax+0x28000007],al
  4060cb:	pusha  
  4060cc:	add    BYTE PTR [eax],al
  4060ce:	push   es
  4060cf:	lea    ebx,[esi]
  4060d1:	add    BYTE PTR [eax],al
  4060d3:	add    DWORD PTR [edx],ecx
  4060d5:	and    BYTE PTR [edi+eax*1+0x60280000],al
  4060dc:	add    BYTE PTR [eax],al
  4060de:	push   es
  4060df:	adc    ecx,DWORD PTR [ebx]
  4060e1:	and    BYTE PTR [eax+0x28000007],cl
  4060e7:	pusha  
  4060e8:	add    BYTE PTR [eax],al
  4060ea:	push   es
  4060eb:	push   0x13
  4060ed:	add    al,0x20
  4060ef:	mov    WORD PTR [edi],es
  4060f1:	add    BYTE PTR [eax],al
  4060f3:	sub    BYTE PTR [eax+0x0],ah
  4060f6:	add    BYTE PTR [esi],al
  4060f8:	adc    ecx,DWORD PTR [ebx]
  4060fa:	add    bh,BYTE PTR [ebx+0x1b]
  4060fd:	add    BYTE PTR [eax],al
  4060ff:	add    al,0x6f
  406101:	xlat   BYTE PTR ds:[ebx]
  406102:	add    BYTE PTR [eax],al
  406104:	or     dl,BYTE PTR [ebx]
  406106:	add    eax,0x79020
  40610b:	add    BYTE PTR [eax],ch
  40610d:	pusha  
  40610e:	add    BYTE PTR [eax],al
  406110:	push   es
  406111:	adc    ecx,DWORD PTR [ebx]
  406113:	jae    0x4060ed
  406115:	add    BYTE PTR [eax],al
  406117:	or     cl,BYTE PTR [eax+eiz*1]
  40611a:	xchg   esp,eax
  40611b:	pop    es
  40611c:	add    BYTE PTR [eax],al
  40611e:	sub    BYTE PTR [eax+0x0],ah
  406121:	add    BYTE PTR [esi],al
  406123:	adc    ecx,DWORD PTR [ebx]
  406125:	add    BYTE PTR [esi],cl
  406127:	add    eax,0x79820
  40612c:	add    BYTE PTR [eax],ch
  40612e:	pusha  
  40612f:	add    BYTE PTR [eax],al
  406131:	push   es
  406132:	pop    ecx
  406133:	adc    ecx,DWORD PTR [ecx+edx*1]
  406136:	or     al,0x45
  406138:	add    al,BYTE PTR [eax]
  40613a:	add    BYTE PTR [eax],al
  40613c:	add    al,BYTE PTR [eax]
  40613e:	add    BYTE PTR [eax],al
  406140:	xor    BYTE PTR [eax],al
  406142:	add    BYTE PTR [eax],al
  406144:	sub    ebx,DWORD PTR [edx+0x0]
  406147:	and    BYTE PTR [edi+eax*1+0x60280000],bl
  40614e:	add    BYTE PTR [eax],al
  406150:	push   es
  406151:	adc    ecx,DWORD PTR [ebx]
  406153:	add    bh,BYTE PTR [ebx+0x1c]
  406156:	add    BYTE PTR [eax],al
  406158:	add    al,0x8
  40615a:	add    eax,0xd96f040e
  40615f:	add    BYTE PTR [eax],al
  406161:	or     ah,BYTE PTR [eax]
  406163:	mov    al,ds:0x28000007
  406168:	pusha  
  406169:	add    BYTE PTR [eax],al
  40616b:	push   es
  40616c:	jae    0x406148
  40616e:	add    BYTE PTR [eax],al
  406170:	or     cl,BYTE PTR [ebx]
  406172:	sub    ebp,DWORD PTR [eax+eax*1]
  406175:	and    BYTE PTR [edi+eax*1+0x60280000],ah
  40617c:	add    BYTE PTR [eax],al
  40617e:	push   es
  40617f:	adc    ecx,DWORD PTR [ebx]
  406181:	add    bh,BYTE PTR [ebx+0x1c]
  406184:	add    BYTE PTR [eax],al
  406186:	add    al,0x8
  406188:	add    eax,0xdb6f040e
  40618d:	add    BYTE PTR [eax],al
  40618f:	or     ah,BYTE PTR [eax]
  406191:	test   al,0x7
  406193:	add    BYTE PTR [eax],al
  406195:	sub    BYTE PTR [eax+0x0],ah
  406198:	add    BYTE PTR [esi],al
  40619a:	jae    0x406176
  40619c:	add    BYTE PTR [eax],al
  40619e:	or     cl,BYTE PTR [ebx]
  4061a0:	add    BYTE PTR [ebx],ch
  4061a2:	bound  esp,QWORD PTR [eax]
  4061a4:	lods   al,BYTE PTR ds:[esi]
  4061a5:	pop    es
  4061a6:	add    BYTE PTR [eax],al
  4061a8:	sub    BYTE PTR [eax+0x0],ah
  4061ab:	add    BYTE PTR [esi],al
  4061ad:	adc    ecx,DWORD PTR [ebx]
  4061af:	add    bh,BYTE PTR [ebx+0x1b]
  4061b2:	add    BYTE PTR [eax],al
  4061b4:	add    al,0x6
  4061b6:	and    BYTE PTR [eax+0x28000007],dh
  4061bc:	pusha  
  4061bd:	add    BYTE PTR [eax],al
  4061bf:	push   es
  4061c0:	and    BYTE PTR [edi+eax*1+0x60280000],dh
  4061c7:	add    BYTE PTR [eax],al
  4061c9:	push   es
  4061ca:	outs   dx,DWORD PTR ds:[esi]
  4061cb:	fadd   QWORD PTR [eax]
  4061cd:	add    BYTE PTR [edx],cl
  4061cf:	and    eax,0xb8200d26
  4061d4:	pop    es
  4061d5:	add    BYTE PTR [eax],al
  4061d7:	sub    BYTE PTR [eax+0x0],ah
  4061da:	add    BYTE PTR [esi],al
  4061dc:	adc    ecx,DWORD PTR [ebx]
  4061de:	pop    es
  4061df:	push   es
  4061e0:	and    BYTE PTR [edi+eax*1+0x60280000],bh
  4061e7:	add    BYTE PTR [eax],al
  4061e9:	push   es
  4061ea:	or     DWORD PTR [edi-0x23],ebp
  4061ed:	add    BYTE PTR [eax],al
  4061ef:	or     al,BYTE PTR [eax]
  4061f1:	and    al,al
  4061f3:	pop    es
  4061f4:	add    BYTE PTR [eax],al
  4061f6:	sub    BYTE PTR [eax+0x0],ah
  4061f9:	add    BYTE PTR [esi],al
  4061fb:	adc    ecx,DWORD PTR [ebx]
  4061fd:	adc    DWORD PTR [ecx+ecx*1],eax
  406200:	push   0xffffffd6
  406202:	adc    eax,DWORD PTR [eax+eax*1]
  406205:	and    ah,al
  406207:	pop    es
  406208:	add    BYTE PTR [eax],al
  40620a:	sub    BYTE PTR [eax+0x0],ah
  40620d:	add    BYTE PTR [esi],al
  40620f:	adc    ecx,DWORD PTR [ebx]
  406211:	adc    DWORD PTR [ecx+edx*1],eax
  406214:	add    eax,0xd1304fe
  406219:	adc    DWORD PTR ds:0x451a862d,ecx
  40621f:	add    DWORD PTR [eax],eax
  406221:	add    BYTE PTR [eax],al
  406223:	idiv   bh
  406225:	(bad)  
  406226:	call   DWORD PTR [edi]
  406228:	sub    eax,0x4fd006
  40622d:	add    BYTE PTR [esi],al
  40622f:	es and al,cl
  406232:	pop    es
  406233:	add    BYTE PTR [eax],al
  406235:	sub    BYTE PTR [eax+0x0],ah
  406238:	add    BYTE PTR [esi],al
  40623a:	adc    ecx,DWORD PTR [ebx]
  40623c:	pop    es
  40623d:	outs   dx,DWORD PTR ds:[esi]
  40623e:	fiadd  WORD PTR [eax]
  406240:	add    BYTE PTR [edx],cl
  406242:	add    BYTE PTR [eax],ah
  406244:	int3   
  406245:	pop    es
  406246:	add    BYTE PTR [eax],al
  406248:	sub    BYTE PTR [eax+0x0],ah
  40624b:	add    BYTE PTR [esi],al
  40624d:	adc    ecx,DWORD PTR [ebx]
  40624f:	add    bh,BYTE PTR [ebx+0x1b]
  406252:	add    BYTE PTR [eax],al
  406254:	add    al,0x6f
  406256:	fiadd  WORD PTR [eax]
  406258:	add    BYTE PTR [edx],cl
  40625a:	add    BYTE PTR [eax],ah
  40625c:	rol    BYTE PTR [edi],1
  40625e:	add    BYTE PTR [eax],al
  406260:	sub    BYTE PTR [eax+0x0],ah
  406263:	add    BYTE PTR [esi],al
  406265:	adc    ecx,DWORD PTR [ebx]
  406267:	add    bh,BYTE PTR [ebx+0x1c]
  40626a:	add    BYTE PTR [eax],al
  40626c:	add    al,0x6f
  40626e:	fiadd  WORD PTR [eax]
  406270:	add    BYTE PTR [edx],cl
  406272:	add    BYTE PTR [eax],ah
  406274:	aam    0x7
  406276:	add    BYTE PTR [eax],al
  406278:	sub    BYTE PTR [eax+0x0],ah
  40627b:	add    BYTE PTR [esi],al
  40627d:	adc    ecx,DWORD PTR [ebx]
  40627f:	push   cs
  406280:	add    eax,0x7d820
  406285:	add    BYTE PTR [eax],ch
  406287:	pusha  
  406288:	add    BYTE PTR [eax],al
  40628a:	push   es
  40628b:	inc    BYTE PTR [ecx]
  40628d:	adc    ecx,DWORD PTR ds:0x322c0d11
  406293:	sbb    eax,0x145
  406298:	add    dh,dh
  40629a:	(bad)  
  40629b:	(bad)  
  40629c:	jmp    DWORD PTR [eax]
  40629e:	fadd   QWORD PTR [edi]
  4062a0:	add    BYTE PTR [eax],al
  4062a2:	sub    BYTE PTR [eax+0x0],ah
  4062a5:	add    BYTE PTR [esi],al
  4062a7:	adc    ecx,DWORD PTR [ebx]
  4062a9:	add    esi,DWORD PTR [ebx-0x21]
  4062ac:	add    BYTE PTR [eax],al
  4062ae:	or     dl,BYTE PTR [ebx]
  4062b0:	push   es
  4062b1:	and    al,ah
  4062b3:	pop    es
  4062b4:	add    BYTE PTR [eax],al
  4062b6:	sub    BYTE PTR [eax+0x0],ah
  4062b9:	add    BYTE PTR [esi],al
  4062bb:	adc    ecx,DWORD PTR [ebx]
  4062bd:	adc    DWORD PTR [esi],eax
  4062bf:	outs   dx,DWORD PTR ds:[esi]
  4062c0:	loopne 0x4062c2
  4062c2:	add    BYTE PTR [edx],cl
  4062c4:	add    BYTE PTR [eax],al
  4062c6:	and    ah,ah
  4062c8:	pop    es
  4062c9:	add    BYTE PTR [eax],al
  4062cb:	sub    BYTE PTR [eax+0x0],ah
  4062ce:	add    BYTE PTR [esi],al
  4062d0:	adc    ecx,DWORD PTR [ebx]
  4062d2:	push   cs
  4062d3:	add    eax,0x7e820
  4062d8:	add    BYTE PTR [eax],ch
  4062da:	pusha  
  4062db:	add    BYTE PTR [eax],al
  4062dd:	push   es
  4062de:	inc    BYTE PTR [ecx]
  4062e0:	adc    ecx,DWORD PTR ds:0x322c0d11
  4062e6:	sbb    eax,DWORD PTR [ebp+0x1]
  4062e9:	add    BYTE PTR [eax],al
  4062eb:	add    dh,dh
  4062ed:	(bad)  
  4062ee:	(bad)  
  4062ef:	jmp    DWORD PTR [eax]
  4062f1:	in     al,dx
  4062f2:	pop    es
  4062f3:	add    BYTE PTR [eax],al
  4062f5:	sub    BYTE PTR [eax+0x0],ah
  4062f8:	add    BYTE PTR [esi],al
  4062fa:	adc    ecx,DWORD PTR [ebx]
  4062fc:	add    esi,DWORD PTR [ebx-0x21]
  4062ff:	add    BYTE PTR [eax],al
  406301:	or     dl,BYTE PTR [ebx]
  406303:	pop    es
  406304:	and    al,dh
  406306:	pop    es
  406307:	add    BYTE PTR [eax],al
  406309:	sub    BYTE PTR [eax+0x0],ah
  40630c:	add    BYTE PTR [esi],al
  40630e:	adc    ecx,DWORD PTR [ebx]
  406310:	adc    DWORD PTR [edi],eax
  406312:	outs   dx,DWORD PTR ds:[esi]
  406313:	loopne 0x406315
  406315:	add    BYTE PTR [edx],cl
  406317:	add    BYTE PTR [eax],al
  406319:	and    ah,dh
  40631b:	pop    es
  40631c:	add    BYTE PTR [eax],al
  40631e:	sub    BYTE PTR [eax+0x0],ah
  406321:	add    BYTE PTR [esi],al
  406323:	adc    ecx,DWORD PTR [ebx]
  406325:	add    bh,BYTE PTR [ebx+0x1b]
  406328:	add    BYTE PTR [eax],al
  40632a:	add    al,0x6f
  40632c:	fiadd  WORD PTR [eax]
  40632e:	add    BYTE PTR [edx],cl
  406330:	add    BYTE PTR [eax],ah
  406332:	clc    
  406333:	pop    es
  406334:	add    BYTE PTR [eax],al
  406336:	sub    BYTE PTR [eax+0x0],ah
  406339:	add    BYTE PTR [esi],al
  40633b:	adc    ecx,DWORD PTR [ebx]
  40633d:	add    bh,BYTE PTR [ebx+0x1c]
  406340:	add    BYTE PTR [eax],al
  406342:	add    al,0x6f
  406344:	fiadd  WORD PTR [eax]
  406346:	add    BYTE PTR [edx],cl
  406348:	add    ch,bl
  40634a:	cmp    eax,DWORD PTR [ecx]
  40634c:	add    BYTE PTR [eax],al
  40634e:	adc    DWORD PTR [edx],ecx
  406350:	sub    ecx,DWORD PTR ds:0xfc200a11
  406356:	pop    es
  406357:	add    BYTE PTR [eax],al
  406359:	sub    BYTE PTR [eax+0x0],ah
  40635c:	add    BYTE PTR [esi],al
  40635e:	pop    eax
  40635f:	and    BYTE PTR [eax],al
  406361:	or     BYTE PTR [eax],al
  406363:	add    BYTE PTR [eax],ch
  406365:	pusha  
  406366:	add    BYTE PTR [eax],al
  406368:	push   es
  406369:	adc    ecx,DWORD PTR [edx]
  40636b:	inc    ebp
  40636c:	add    BYTE PTR es:[eax],al
  40636f:	add    BYTE PTR [eax],al
  406371:	add    BYTE PTR [eax],al
  406373:	add    BYTE PTR ds:0x36fffffc,ah
  406379:	cld    
  40637a:	(bad)  
  40637b:	jmp    DWORD PTR [edx-0x4]
  40637e:	(bad)  
  40637f:	dec    DWORD PTR [esi-0x4e000004]
  406385:	cld    
  406386:	(bad)  
  406387:	dec    ebp
  406389:	cld    
  40638a:	(bad)  
  40638b:	jmp    esi
  40638d:	cld    
  40638e:	(bad)  
  40638f:	(bad)  
  406390:	(bad)  
  406391:	cld    
  406392:	(bad)  
  406393:	call   DWORD PTR [ecx]
  406395:	std    
  406396:	(bad)  
  406397:	call   FWORD PTR [eax+0x3ffffffd]
  40639d:	std    
  40639e:	(bad)  
  40639f:	inc    DWORD PTR [eax]
  4063a1:	add    BYTE PTR [eax],al
  4063a3:	add    BYTE PTR [edi],bh
  4063a5:	std    
  4063a6:	(bad)  
  4063a7:	jmp    FWORD PTR [edx-0x3]
  4063aa:	(bad)  
  4063ab:	jmp    FWORD PTR [ebp-0x3]
  4063ae:	(bad)  
  4063af:	jmp    FWORD PTR [ebp-0x3]
  4063b2:	(bad)  
  4063b3:	call   FWORD PTR [eax-0x66000003]
  4063b9:	std    
  4063ba:	(bad)  
  4063bb:	(bad)  
  4063bc:	std    
  4063bd:	std    
  4063be:	(bad)  
  4063bf:	call   FWORD PTR [ebx-0x35000003]
  4063c5:	std    
  4063c6:	(bad)  
  4063c7:	(bad)  
  4063c8:	jmp    0xfd4063ca
  4063cd:	std    
  4063ce:	(bad)  
  4063cf:	jmp    FWORD PTR [eax]
  4063d1:	(bad)  
  4063d2:	(bad)  
  4063d3:	(bad)  
  4063d4:	cmp    edi,esi
  4063d6:	(bad)  
  4063d7:	call   DWORD PTR [ebx-0x2]
  4063da:	(bad)  
  4063db:	jmp    FWORD PTR [ebx-0x2]
  4063de:	(bad)  
  4063df:	call   DWORD PTR [ebp-0x56000002]
  4063e5:	(bad)  
  4063e6:	(bad)  
  4063e7:	(bad)  
  4063e8:	mov    ebp,0xbefffffe
  4063ed:	(bad)  
  4063ee:	(bad)  
  4063ef:	(bad)  
  4063f0:	call   0xfd4063f3
  4063f5:	(bad)  
  4063f6:	(bad)  
  4063f7:	call   DWORD PTR [eax]
  4063f9:	(bad)  
  4063fa:	(bad)  
  4063fb:	call   DWORD PTR [ecx]
  4063fd:	(bad)  
  4063fe:	(bad)  
  4063ff:	jmp    FWORD PTR [ecx]
  406401:	(bad)  
  406402:	(bad)  
  406403:	inc    DWORD PTR [ecx-0x1]
  406406:	(bad)  
  406407:	(bad)  
  406408:	fisubr WORD PTR [ebp+0x11]
  40640b:	or     edx,DWORD PTR [ebx]
  40640d:	or     dl,BYTE PTR [ecx]
  40640f:	or     DWORD PTR [eax],esp
  406411:	add    al,0x8
  406413:	add    BYTE PTR [eax],al
  406415:	sub    BYTE PTR [eax+0x0],ah
  406418:	add    BYTE PTR [esi],al
  40641a:	xor    BYTE PTR [esi],dl
  40641c:	sbb    DWORD PTR [ebp+0x1],eax
  40641f:	add    BYTE PTR [eax],al
  406421:	add    dh,dh
  406423:	(bad)  
  406424:	(bad)  
  406425:	jmp    DWORD PTR [eax]
  406427:	or     BYTE PTR [eax],cl
  406429:	add    BYTE PTR [eax],al
  40642b:	sub    BYTE PTR [eax+0x0],ah
  40642e:	add    BYTE PTR [esi],al
  406430:	sub    eax,DWORD PTR [edx]
  406432:	adc    DWORD PTR [ecx],ecx
  406434:	inc    ebp
  406435:	add    al,BYTE PTR [eax]
  406437:	add    BYTE PTR [eax],al
  406439:	add    BYTE PTR [eax],al
  40643b:	add    BYTE PTR [eax],al
  40643d:	adc    edi,edi
  40643f:	(bad)  
  406440:	(bad)  
  406441:	fidiv  WORD PTR [esi*2+0x100004b]
  406448:	adc    al,0xfe
  40644a:	add    edx,DWORD PTR [ecx]
  40644c:	or     DWORD PTR [eax],esp
  40644e:	or     al,0x8
  406450:	add    BYTE PTR [eax],al
  406452:	sub    BYTE PTR [eax+0x0],ah
  406455:	add    BYTE PTR [esi],al
  406457:	inc    BYTE PTR [ebx]
  406459:	pop    edi
  40645a:	adc    DWORD PTR [edx],ecx
  40645c:	and    BYTE PTR [eax],dl
  40645e:	or     BYTE PTR [eax],al
  406460:	add    BYTE PTR [eax],ch
  406462:	pusha  
  406463:	add    BYTE PTR [eax],al
  406465:	push   es
  406466:	inc    BYTE PTR [ecx]
  406468:	pop    edi
  406469:	(bad)  
  40646a:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  40646e:	add    BYTE PTR [ecx],al
  406470:	sub    BYTE PTR [edi+0x0],dl
  406473:	add    BYTE PTR [edx],cl
  406475:	ficom  WORD PTR [ebx+0x81420]
  40647b:	add    BYTE PTR [eax],ch
  40647d:	pusha  
  40647e:	add    BYTE PTR [eax],al
  406480:	push   es
  406481:	sub    BYTE PTR [eax+0x250a0000],bh
  406487:	es jp  0x40648a
  40648a:	adc    DWORD PTR [edx],ecx
  40648c:	sub    al,0xf
  40648e:	pop    ss
  40648f:	inc    ebp
  406490:	add    DWORD PTR [eax],eax
  406492:	add    BYTE PTR [eax],al
  406494:	idiv   bh
  406496:	(bad)  
  406497:	jmp    FWORD PTR [eax]
  406499:	pop    ebx
  40649a:	add    BYTE PTR [eax],al
  40649c:	or     ch,BYTE PTR [edx]
  40649e:	add    BYTE PTR [eax],al
  4064a0:	inc    ecx
  4064a1:	sbb    al,0x0
  4064a3:	add    BYTE PTR [ecx],al
  4064a5:	add    BYTE PTR [eax],al
  4064a7:	add    BYTE PTR [ecx],al
  4064a9:	add    BYTE PTR [eax],al
  4064ab:	add    BYTE PTR [esi],dl
  4064ad:	add    al,0x0
  4064af:	add    BYTE PTR [edi],bh
  4064b1:	add    al,0x0
  4064b3:	add    BYTE PTR [eax+eax*1],cl
  4064b6:	add    BYTE PTR [eax],al
  4064b8:	pop    ss
  4064b9:	add    al,0x0
  4064bb:	add    BYTE PTR [ebx],bl
  4064bd:	xor    BYTE PTR [eax+eax*1],al
  4064c0:	and    eax,0x25000001
  4064c5:	add    BYTE PTR [eax],al
  4064c7:	adc    DWORD PTR [eax],eax
  4064c9:	sub    BYTE PTR [ebx+0x0],bl
  4064cc:	add    BYTE PTR [edx],cl
  4064ce:	and    BYTE PTR [eax],bl
  4064d0:	or     BYTE PTR [eax],al
  4064d2:	add    BYTE PTR [eax],ch
  4064d4:	pusha  
  4064d5:	add    BYTE PTR [eax],al
  4064d7:	push   es
  4064d8:	or     al,0x20
  4064da:	sbb    al,0x8
  4064dc:	add    BYTE PTR [eax],al
  4064de:	sub    BYTE PTR [eax+0x0],ah
  4064e1:	add    BYTE PTR [esi],al
  4064e3:	adc    eax,DWORD PTR [eax+ebp*1]
  4064e6:	loope  0x4064e8
  4064e8:	add    BYTE PTR [edx],cl
  4064ea:	and    eax,0x20200b26
  4064ef:	or     BYTE PTR [eax],al
  4064f1:	add    BYTE PTR [eax],ch
  4064f3:	pusha  
  4064f4:	add    BYTE PTR [eax],al
  4064f6:	push   es
  4064f7:	adc    eax,DWORD PTR [edi+eax*1]
  4064fa:	and    BYTE PTR [eax+ecx*1],ah
  4064fd:	add    BYTE PTR [eax],al
  4064ff:	sub    BYTE PTR [eax+0x0],ah
  406502:	add    BYTE PTR [esi],al
  406504:	call   0x250a:0xe26f
  40650b:	outs   dx,DWORD PTR es:[esi]
  40650d:	jecxz  0x40650f
  40650f:	add    BYTE PTR [edx],cl
  406511:	and    eax,0xc0dd0a26
  406516:	add    BYTE PTR [eax],al
  406518:	add    ch,bl
  40651a:	mov    ebx,0x9000000
  40651f:	sub    ecx,DWORD PTR [ecx+ecx*1]
  406522:	and    BYTE PTR [eax],ch
  406524:	or     BYTE PTR [eax],al
  406526:	add    BYTE PTR [eax],ch
  406528:	pusha  
  406529:	add    BYTE PTR [eax],al
  40652b:	push   es
  40652c:	pop    eax
  40652d:	and    BYTE PTR [eax+ecx*1],ch
  406530:	add    BYTE PTR [eax],al
  406532:	sub    BYTE PTR [eax+0x0],ah
  406535:	add    BYTE PTR [esi],al
  406537:	or     eax,0x545
  40653c:	add    BYTE PTR [eax],al
  40653e:	add    BYTE PTR [eax],al
  406540:	add    BYTE PTR [eax-0x1],bh
  406543:	(bad)  
  406544:	dec    DWORD PTR [eax-0x63000001]
  40654a:	(bad)  
  40654b:	(bad)  
  40654c:	dec    eax
  40654e:	(bad)  
  40654f:	(bad)  
  406550:	(bad)  
  406551:	fnsave [ecx+0x0]
  406554:	add    BYTE PTR [eax],al
  406556:	adc    DWORD PTR [ecx*1+0x8302008],eax
  40655d:	add    BYTE PTR [eax],al
  40655f:	sub    BYTE PTR [eax+0x0],ah
  406562:	add    BYTE PTR [esi],al
  406564:	xor    BYTE PTR [edi],bl
  406566:	pop    ss
  406567:	inc    ebp
  406568:	add    DWORD PTR [eax],eax
  40656a:	add    BYTE PTR [eax],al
  40656c:	idiv   bh
  40656e:	(bad)  
  40656f:	call   DWORD PTR [edi]
  406571:	sub    eax,0x50d006
  406576:	add    BYTE PTR [esi],al
  406578:	and    BYTE PTR es:[eax+ecx*1],dh
  40657c:	add    BYTE PTR [eax],al
  40657e:	sub    BYTE PTR [eax+0x0],ah
  406581:	add    BYTE PTR [esi],al
  406583:	sub    eax,DWORD PTR [ecx]
  406585:	or     BYTE PTR [ebp+0x2],al
  406588:	add    BYTE PTR [eax],al
  40658a:	add    BYTE PTR [eax],al
  40658c:	add    BYTE PTR [eax],al
  40658e:	add    BYTE PTR [esi-0x21000001],cl
  406594:	xor    dh,BYTE PTR [ebp+0x4b]
  406597:	add    BYTE PTR [eax],al
  406599:	add    DWORD PTR [esi+edi*8],edx
  40659c:	add    ecx,DWORD PTR [eax]
  40659e:	and    BYTE PTR [eax],bh
  4065a0:	or     BYTE PTR [eax],al
  4065a2:	add    BYTE PTR [eax],ch
  4065a4:	pusha  
  4065a5:	add    BYTE PTR [eax],al
  4065a7:	push   es
  4065a8:	inc    BYTE PTR [ebx]
  4065aa:	pop    edi
  4065ab:	or     DWORD PTR [eax],esp
  4065ad:	cmp    al,0x8
  4065af:	add    BYTE PTR [eax],al
  4065b1:	sub    BYTE PTR [eax+0x0],ah
  4065b4:	add    BYTE PTR [esi],al
  4065b6:	inc    BYTE PTR [ecx]
  4065b8:	pop    edi
  4065b9:	(bad)  
  4065ba:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4065be:	add    BYTE PTR [ecx],al
  4065c0:	sub    BYTE PTR [edi+0x0],dl
  4065c3:	add    BYTE PTR [edx],cl
  4065c5:	fimul  WORD PTR [edi+0x84020]
  4065cb:	add    BYTE PTR [eax],ch
  4065cd:	pusha  
  4065ce:	add    BYTE PTR [eax],al
  4065d0:	push   es
  4065d1:	sub    BYTE PTR [eax+0x250a0000],bh
  4065d7:	es jp  0x4065e0
  4065da:	or     DWORD PTR [edi+ecx*1],ebp
  4065dd:	sbb    al,BYTE PTR [ebp+0x1]
  4065e0:	add    BYTE PTR [eax],al
  4065e2:	add    dh,dh
  4065e4:	(bad)  
  4065e5:	(bad)  
  4065e6:	jmp    FWORD PTR [eax]
  4065e8:	pop    ebx
  4065e9:	add    BYTE PTR [eax],al
  4065eb:	or     ch,BYTE PTR [edx]
  4065ed:	add    BYTE PTR [eax],al
  4065ef:	add    BYTE PTR [ecx],al
  4065f1:	adc    BYTE PTR [eax],al
  4065f3:	add    BYTE PTR [ecx],al
  4065f5:	add    BYTE PTR [ecx],al
  4065f7:	add    ah,cl
  4065f9:	repz add BYTE PTR [ecx*8+0x1b000000],cl
  406601:	xor    BYTE PTR [esi],al
  406603:	add    bh,bh
  406605:	add    DWORD PTR [eax],eax
  406607:	add    BYTE PTR [esi],ah
  406609:	add    BYTE PTR [eax],al
  40660b:	adc    DWORD PTR [eax],eax
  40660d:	sub    BYTE PTR [ebx+0x0],bl
  406610:	add    BYTE PTR [edx],cl
  406612:	and    BYTE PTR [eax+ecx*1+0x0],al
  406616:	add    BYTE PTR [eax],ch
  406618:	pusha  
  406619:	add    BYTE PTR [eax],al
  40661b:	push   es
  40661c:	adc    eax,DWORD PTR [eax+eiz*1]
  40661f:	dec    eax
  406620:	or     BYTE PTR [eax],al
  406622:	add    BYTE PTR [eax],ch
  406624:	pusha  
  406625:	add    BYTE PTR [eax],al
  406627:	push   es
  406628:	adc    eax,DWORD PTR [esi]
  40662a:	jae    0x4065d5
  40662c:	add    BYTE PTR [eax],al
  40662e:	or     cl,BYTE PTR [ebx]
  406630:	and    BYTE PTR [eax+ecx*1+0x0],cl
  406634:	add    BYTE PTR [eax],ch
  406636:	pusha  
  406637:	add    BYTE PTR [eax],al
  406639:	push   es
  40663a:	adc    eax,DWORD PTR [esi]
  40663c:	pop    es
  40663d:	and    BYTE PTR [edx+0x28000009],ch
  406643:	push   0x25060000
  406648:	add    ch,BYTE PTR es:[edi+0x47]
  40664c:	add    BYTE PTR [eax],al
  40664e:	push   es
  40664f:	and    eax,0x9d32026
  406654:	add    BYTE PTR [eax],al
  406656:	sub    BYTE PTR [eax+0x0],ch
  406659:	add    BYTE PTR [esi],al
  40665b:	and    eax,0xe42826
  406660:	add    BYTE PTR [edx],cl
  406662:	and    eax,0xbf6f26
  406667:	add    BYTE PTR [edx],cl
  406669:	and    eax,0x50200a26
  40666e:	or     BYTE PTR [eax],al
  406670:	add    BYTE PTR [eax],ch
  406672:	pusha  
  406673:	add    BYTE PTR [eax],al
  406675:	push   es
  406676:	adc    eax,DWORD PTR [esi]
  406678:	push   es
  406679:	adc    al,0xfe
  40667b:	add    DWORD PTR [ebx],edx
  40667d:	pop    es
  40667e:	adc    DWORD PTR [edi],eax
  406680:	sub    al,0x25
  406682:	and    BYTE PTR [eax+ecx*1+0x0],dl
  406686:	add    BYTE PTR [eax],ch
  406688:	pusha  
  406689:	add    BYTE PTR [eax],al
  40668b:	push   es
  40668c:	adc    eax,DWORD PTR [esi]
  40668e:	and    ah,bl
  406690:	or     DWORD PTR [eax],eax
  406692:	add    BYTE PTR [eax],ch
  406694:	push   0x25060000
  406699:	es sub ch,ah
  40669c:	add    BYTE PTR [eax],al
  40669e:	or     ah,BYTE PTR ds:0x82382626
  4066a4:	add    BYTE PTR [eax],al
  4066a6:	add    BYTE PTR [eax],ah
  4066a8:	pop    eax
  4066a9:	or     BYTE PTR [eax],al
  4066ab:	add    BYTE PTR [eax],ch
  4066ad:	pusha  
  4066ae:	add    BYTE PTR [eax],al
  4066b0:	push   es
  4066b1:	adc    eax,DWORD PTR [esi]
  4066b3:	add    BYTE PTR [eax],ah
  4066b5:	pop    esp
  4066b6:	or     BYTE PTR [eax],al
  4066b8:	add    BYTE PTR [eax],ch
  4066ba:	pusha  
  4066bb:	add    BYTE PTR [eax],al
  4066bd:	push   es
  4066be:	adc    eax,DWORD PTR [esi]
  4066c0:	push   es
  4066c1:	and    BYTE PTR [eax+0x8],ah
  4066c4:	add    BYTE PTR [eax],al
  4066c6:	sub    BYTE PTR [eax+0x0],ah
  4066c9:	add    BYTE PTR [esi],al
  4066cb:	and    BYTE PTR [eax+ecx*1+0x0],ah
  4066cf:	add    BYTE PTR [eax],ch
  4066d1:	pusha  
  4066d2:	add    BYTE PTR [eax],al
  4066d4:	push   es
  4066d5:	outs   dx,DWORD PTR ds:[esi]
  4066d6:	inc    eax
  4066d7:	add    BYTE PTR [eax],al
  4066d9:	or     ah,BYTE PTR ds:0x68200c26
  4066df:	or     BYTE PTR [eax],al
  4066e1:	add    BYTE PTR [eax],ch
  4066e3:	pusha  
  4066e4:	add    BYTE PTR [eax],al
  4066e6:	push   es
  4066e7:	adc    eax,DWORD PTR [esi]
  4066e9:	and    dl,bl
  4066eb:	push   es
  4066ec:	add    BYTE PTR [eax],al
  4066ee:	sub    BYTE PTR [eax+0x0],ch
  4066f1:	add    BYTE PTR [esi],al
  4066f3:	or     eax,0x86c20
  4066f8:	add    BYTE PTR [eax],ch
  4066fa:	pusha  
  4066fb:	add    BYTE PTR [eax],al
  4066fd:	push   es
  4066fe:	adc    eax,DWORD PTR [esi]
  406700:	add    cl,BYTE PTR [ecx]
  406702:	or     BYTE PTR [edi+0x4c],ch
  406705:	add    BYTE PTR [eax],al
  406707:	push   es
  406708:	and    BYTE PTR es:[eax+0x8],dh
  40670c:	add    BYTE PTR [eax],al
  40670e:	sub    BYTE PTR [eax+0x0],ah
  406711:	add    BYTE PTR [esi],al
  406713:	adc    eax,DWORD PTR [esi]
  406715:	and    BYTE PTR [esi+0x2800000b],dl
  40671b:	push   0x25060000
  406720:	es sub ch,ah
  406723:	add    BYTE PTR [eax],al
  406725:	or     ah,BYTE PTR ds:0xdd002626
  40672b:	rol    DWORD PTR [eax],1
  40672d:	add    BYTE PTR [eax],al
  40672f:	adc    DWORD PTR ds:0x5110d2b,eax
  406735:	and    BYTE PTR [eax+ecx*1+0x0],dh
  406739:	add    BYTE PTR [eax],ch
  40673b:	pusha  
  40673c:	add    BYTE PTR [eax],al
  40673e:	push   es
  40673f:	pop    eax
  406740:	and    BYTE PTR [eax+0x8],bh
  406743:	add    BYTE PTR [eax],al
  406745:	sub    BYTE PTR [eax+0x0],ah
  406748:	add    BYTE PTR [esi],al
  40674a:	adc    eax,DWORD PTR ds:0xe45
  406750:	add    BYTE PTR [eax],al
  406752:	add    BYTE PTR [eax],al
  406754:	add    BYTE PTR [esi+edi*8-0x16a0001],al
  40675b:	(bad)  
  40675c:	jmp    DWORD PTR [edi-0x1c000002]
  406762:	(bad)  
  406763:	(bad)  
  406764:	(bad)  
  406765:	stc    
  406766:	(bad)  
  406767:	(bad)  
  406768:	call   FWORD PTR [ecx]
  40676a:	(bad)  
  40676b:	(bad)  
  40676c:	call   FWORD PTR [esi]
  40676e:	(bad)  
  40676f:	(bad)  
  406770:	jmp    FWORD PTR [ebx]
  406772:	(bad)  
  406773:	(bad)  
  406774:	call   DWORD PTR [edi+edi*8-0x1]
  406778:	jmp    FWORD PTR [ebx-0x1]
  40677b:	(bad)  
  40677c:	inc    DWORD PTR [eax-0x5f000001]
  406782:	(bad)  
  406783:	(bad)  
  406784:	jmp    DWORD PTR [ecx-0x21000001]
  40678a:	arpl   WORD PTR [ecx],dx
  40678c:	push   es
  40678d:	adc    eax,DWORD PTR ds:0x7c200411
  406793:	or     BYTE PTR [eax],al
  406795:	add    BYTE PTR [eax],ch
  406797:	pusha  
  406798:	add    BYTE PTR [eax],al
  40679a:	push   es
  40679b:	xor    BYTE PTR [eax+eiz*1],cl
  40679e:	or     BYTE PTR [eax],0x0
  4067a1:	add    BYTE PTR [eax],ch
  4067a3:	pusha  
  4067a4:	add    BYTE PTR [eax],al
  4067a6:	push   es
  4067a7:	sub    eax,DWORD PTR [edx]
  4067a9:	adc    DWORD PTR [eax*2+0x2],eax
  4067b0:	add    BYTE PTR [eax],al
  4067b2:	add    BYTE PTR [eax],al
  4067b4:	jnp    0x4067b5
  4067b6:	(bad)  
  4067b7:	(bad)  
  4067b8:	fidiv  WORD PTR [esi*2+0x100004b]
  4067bf:	adc    al,0xfe
  4067c1:	add    edx,DWORD PTR [ecx]
  4067c3:	add    al,0x20
  4067c5:	test   BYTE PTR [eax],cl
  4067c7:	add    BYTE PTR [eax],al
  4067c9:	sub    BYTE PTR [eax+0x0],ah
  4067cc:	add    BYTE PTR [esi],al
  4067ce:	inc    BYTE PTR [ebx]
  4067d0:	pop    edi
  4067d1:	adc    DWORD PTR ds:0x88820,eax
  4067d7:	add    BYTE PTR [eax],ch
  4067d9:	pusha  
  4067da:	add    BYTE PTR [eax],al
  4067dc:	push   es
  4067dd:	inc    BYTE PTR [ecx]
  4067df:	pop    edi
  4067e0:	(bad)  
  4067e1:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4067e5:	add    BYTE PTR [ecx],al
  4067e7:	sub    BYTE PTR [edi+0x0],dl
  4067ea:	add    BYTE PTR [edx],cl
  4067ec:	ficomp WORD PTR [ebp+0x88c20]
  4067f2:	add    BYTE PTR [eax],ch
  4067f4:	pusha  
  4067f5:	add    BYTE PTR [eax],al
  4067f7:	push   es
  4067f8:	sub    BYTE PTR [eax+0x250a0000],bh
  4067fe:	es jp  0x406801
  406801:	adc    DWORD PTR ds:0x5b28052c,eax
  406807:	add    BYTE PTR [eax],al
  406809:	or     ch,BYTE PTR [edx]
  40680b:	add    BYTE PTR [ecx+0x1c],al
  40680e:	add    BYTE PTR [eax],al
  406810:	add    DWORD PTR [eax],eax
  406812:	add    BYTE PTR [eax],al
  406814:	add    DWORD PTR [eax],eax
  406816:	add    BYTE PTR [eax],al
  406818:	lods   eax,DWORD PTR ds:[esi]
  406819:	add    DWORD PTR [eax],eax
  40681b:	add    dh,dl
  40681d:	add    DWORD PTR [eax],eax
  40681f:	add    BYTE PTR [eax+eax*1],cl
  406822:	add    BYTE PTR [eax],al
  406824:	scas   al,BYTE PTR es:[edi]
  406825:	add    DWORD PTR [eax],eax
  406827:	add    BYTE PTR [ebx],al
  406829:	xor    BYTE PTR [ecx],cl
  40682b:	add    BYTE PTR [ecx],cl
	...
  406835:	sub    dh,ah
  406837:	add    BYTE PTR [eax],al
  406839:	or     al,BYTE PTR [eax]
  40683b:	add    BYTE PTR [edx],ch
  40683d:	add    BYTE PTR [eax],al
  40683f:	add    BYTE PTR [ebx],al
  406841:	xor    BYTE PTR [ecx],cl
  406843:	add    BYTE PTR [ecx],cl
  406845:	add    BYTE PTR [eax],al
  406847:	add    BYTE PTR [eax],al
  406849:	add    BYTE PTR [eax],al
  40684b:	add    BYTE PTR [edx],al
  40684d:	sub    BYTE PTR [ecx],bh
  40684f:	add    BYTE PTR [eax],al
  406851:	or     al,BYTE PTR [eax]
  406853:	add    BYTE PTR [edx],ch
  406855:	add    BYTE PTR [eax],al
  406857:	add    BYTE PTR [ebx],bl
  406859:	xor    BYTE PTR [eax+eax*1],al
  40685c:	mov    dl,0x2
  40685e:	add    BYTE PTR [eax],al
  406860:	daa    
  406861:	add    BYTE PTR [eax],al
  406863:	adc    DWORD PTR [eax],eax
  406865:	sub    BYTE PTR [ebx+0x0],bl
  406868:	add    BYTE PTR [edx],cl
  40686a:	and    BYTE PTR [ecx+ecx*1],dh
  40686d:	add    BYTE PTR [eax],al
  40686f:	sub    BYTE PTR [eax+0x0],ah
  406872:	add    BYTE PTR [esi],al
  406874:	adc    eax,DWORD PTR ds:0x93820
  40687a:	add    BYTE PTR [eax],ch
  40687c:	pusha  
  40687d:	add    BYTE PTR [eax],al
  40687f:	push   es
  406880:	adc    eax,DWORD PTR [edi]
  406882:	and    BYTE PTR [ecx+ecx*1],bh
  406885:	add    BYTE PTR [eax],al
  406887:	sub    BYTE PTR [eax+0x0],ah
  40688a:	add    BYTE PTR [esi],al
  40688c:	or     ah,BYTE PTR [eax]
  40688e:	inc    eax
  40688f:	or     DWORD PTR [eax],eax
  406891:	add    BYTE PTR [eax],ch
  406893:	pusha  
  406894:	add    BYTE PTR [eax],al
  406896:	push   es
  406897:	adc    eax,DWORD PTR [edi]
  406899:	and    BYTE PTR [ecx+ecx*1+0x0],al
  40689d:	add    BYTE PTR [eax],ch
  40689f:	pusha  
  4068a0:	add    BYTE PTR [eax],al
  4068a2:	push   es
  4068a3:	lea    esp,[ebp-0x7fff0000]
  4068a9:	and    BYTE PTR [eax],al
  4068ab:	add    BYTE PTR [eax+eiz*1],al
  4068ae:	dec    eax
  4068af:	or     DWORD PTR [eax],eax
  4068b1:	add    BYTE PTR [eax],ch
  4068b3:	pusha  
  4068b4:	add    BYTE PTR [eax],al
  4068b6:	push   es
  4068b7:	adc    eax,DWORD PTR [edi]
  4068b9:	and    BYTE PTR [ecx+ecx*1+0x0],cl
  4068bd:	add    BYTE PTR [eax],ch
  4068bf:	pusha  
  4068c0:	add    BYTE PTR [eax],al
  4068c2:	push   es
  4068c3:	or     esp,DWORD PTR [eax]
  4068c5:	push   eax
  4068c6:	or     DWORD PTR [eax],eax
  4068c8:	add    BYTE PTR [eax],ch
  4068ca:	pusha  
  4068cb:	add    BYTE PTR [eax],al
  4068cd:	push   es
  4068ce:	adc    eax,DWORD PTR [edi]
  4068d0:	and    BYTE PTR [ecx+ecx*1+0x0],dl
  4068d4:	add    BYTE PTR [eax],ch
  4068d6:	pusha  
  4068d7:	add    BYTE PTR [eax],al
  4068d9:	push   es
  4068da:	jle    0x4068fc
  4068dc:	add    BYTE PTR [eax],al
  4068de:	add    al,0x8e
  4068e0:	mov    bh,0x20
  4068e2:	pop    eax
  4068e3:	or     DWORD PTR [eax],eax
  4068e5:	add    BYTE PTR [eax],ch
  4068e7:	pusha  
  4068e8:	add    BYTE PTR [eax],al
  4068ea:	push   es
  4068eb:	fidivr DWORD PTR [eax+0x380c0413]
  4068f1:	adc    BYTE PTR [ecx],al
  4068f3:	add    BYTE PTR [eax],al
  4068f5:	and    BYTE PTR [ecx+ecx*1+0x0],bl
  4068f9:	add    BYTE PTR [eax],ch
  4068fb:	pusha  
  4068fc:	add    BYTE PTR [eax],al
  4068fe:	push   es
  4068ff:	adc    eax,DWORD PTR [edi]
  406901:	or     BYTE PTR [ebx],cl
  406903:	and    BYTE PTR [eax+0x9],ah
  406906:	add    BYTE PTR [eax],al
  406908:	sub    BYTE PTR [eax+0x0],ah
  40690b:	add    BYTE PTR [esi],al
  40690d:	adc    eax,DWORD PTR [edi]
  40690f:	and    BYTE PTR [ecx+ecx*1+0x0],ah
  406913:	add    BYTE PTR [eax],ch
  406915:	pusha  
  406916:	add    BYTE PTR [eax],al
  406918:	push   es
  406919:	or     eax,0x96820
  40691e:	add    BYTE PTR [eax],ch
  406920:	pusha  
  406921:	add    BYTE PTR [eax],al
  406923:	push   es
  406924:	adc    eax,DWORD PTR [edi]
  406926:	pop    es
  406927:	outs   dx,BYTE PTR ds:[esi]
  406928:	and    BYTE PTR [ecx+ecx*1+0x0],ch
  40692c:	add    BYTE PTR [eax],ch
  40692e:	pusha  
  40692f:	add    BYTE PTR [eax],al
  406931:	push   es
  406932:	push   0x5f
  406934:	and    BYTE PTR [eax+0x9],dh
  406937:	add    BYTE PTR [eax],al
  406939:	sub    BYTE PTR [eax+0x0],ah
  40693c:	add    BYTE PTR [esi],al
  40693e:	push   0xfffffffe
  406940:	add    DWORD PTR [ebx],edx
  406942:	or     BYTE PTR [ecx],dl
  406944:	or     BYTE PTR [eax+esi*1],ch
  406947:	sbb    BYTE PTR [ebp+0x1],al
  40694a:	add    BYTE PTR [eax],al
  40694c:	add    dh,dh
  40694e:	(bad)  
  40694f:	(bad)  
  406950:	call   DWORD PTR [edi]
  406952:	sub    eax,0x54d006
  406957:	add    BYTE PTR [esi],al
  406959:	and    BYTE PTR es:[ecx+ecx*1+0x0],dh
  40695e:	add    BYTE PTR [eax],ch
  406960:	pusha  
  406961:	add    BYTE PTR [eax],al
  406963:	push   es
  406964:	adc    eax,DWORD PTR [edi]
  406966:	pop    es
  406967:	and    BYTE PTR [eax+0x9],bh
  40696a:	add    BYTE PTR [eax],al
  40696c:	sub    BYTE PTR [eax+0x0],ah
  40696f:	add    BYTE PTR [esi],al
  406971:	fs push es
  406973:	popa   
  406974:	or     ebp,DWORD PTR [ebx]
  406976:	and    BYTE PTR es:[ecx+ecx*1+0x0],bh
  40697b:	add    BYTE PTR [eax],ch
  40697d:	pusha  
  40697e:	add    BYTE PTR [eax],al
  406980:	push   es
  406981:	adc    eax,DWORD PTR [edi]
  406983:	add    BYTE PTR [eax],ah
  406985:	or     BYTE PTR [ecx],0x0
  406988:	add    BYTE PTR [eax],ch
  40698a:	pusha  
  40698b:	add    BYTE PTR [eax],al
  40698d:	push   es
  40698e:	adc    eax,DWORD PTR [edi]
  406990:	pop    es
  406991:	and    BYTE PTR [ecx+ecx*1+0x60280000],al
  406998:	add    BYTE PTR [eax],al
  40699a:	push   es
  40699b:	or     eax,DWORD PTR fs:[eax]
  40699e:	and    BYTE PTR [eax+0x28000009],cl
  4069a4:	pusha  
  4069a5:	add    BYTE PTR [eax],al
  4069a7:	push   es
  4069a8:	adc    eax,DWORD PTR [edi]
  4069aa:	add    BYTE PTR [ecx],cl
  4069ac:	and    BYTE PTR [ecx+ecx*1+0x60280000],cl
  4069b3:	add    BYTE PTR [eax],al
  4069b5:	push   es
  4069b6:	(bad)  
  4069b7:	or     eax,0x9902009
  4069bc:	add    BYTE PTR [eax],al
  4069be:	sub    BYTE PTR [eax+0x0],ah
  4069c1:	add    BYTE PTR [esi],al
  4069c3:	adc    ecx,DWORD PTR [ecx]
  4069c5:	adc    DWORD PTR [ecx],ecx
  4069c7:	cmp    al,0x4e
  4069c9:	(bad)  
  4069ca:	(bad)  
  4069cb:	call   DWORD PTR [edi]
  4069cd:	inc    ebp
  4069ce:	add    DWORD PTR [eax],eax
  4069d0:	add    BYTE PTR [eax],al
  4069d2:	idiv   bh
  4069d4:	(bad)  
  4069d5:	jmp    DWORD PTR [eax]
  4069d7:	xchg   esp,eax
  4069d8:	or     DWORD PTR [eax],eax
  4069da:	add    BYTE PTR [eax],ch
  4069dc:	pusha  
  4069dd:	add    BYTE PTR [eax],al
  4069df:	push   es
  4069e0:	adc    eax,DWORD PTR [edi]
  4069e2:	jle    0x406a04
  4069e4:	add    BYTE PTR [eax],al
  4069e6:	add    al,0x8
  4069e8:	test   BYTE PTR [edi],al
  4069ea:	sahf   
  4069eb:	and    BYTE PTR [eax+0x28000009],bl
  4069f1:	pusha  
  4069f2:	add    BYTE PTR [eax],al
  4069f4:	push   es
  4069f5:	adc    eax,DWORD PTR [edi]
  4069f7:	add    BYTE PTR [eax],cl
  4069f9:	and    BYTE PTR [ecx+ecx*1+0x60280000],bl
  406a00:	add    BYTE PTR [eax],al
  406a02:	push   es
  406a03:	xlat   BYTE PTR ds:[ebx]
  406a04:	or     al,0x8
  406a06:	adc    DWORD PTR [ebx+edx*1],eax
  406a09:	or     dl,BYTE PTR [ecx]
  406a0b:	or     al,BYTE PTR [ebx-0x1c]
  406a0e:	(bad)  
  406a0f:	(bad)  
  406a10:	call   FWORD PTR [eax*2+0x1]
  406a17:	idiv   bh
  406a19:	(bad)  
  406a1a:	(bad)  
  406a1b:	fucomp st(3)
  406a1d:	add    BYTE PTR [eax],al
  406a1f:	add    BYTE PTR [ecx],dl
  406a21:	push   es
  406a22:	sub    ecx,DWORD PTR ds:0xa0200611
  406a28:	or     DWORD PTR [eax],eax
  406a2a:	add    BYTE PTR [eax],ch
  406a2c:	pusha  
  406a2d:	add    BYTE PTR [eax],al
  406a2f:	push   es
  406a30:	pop    eax
  406a31:	and    BYTE PTR [ecx+ecx*1+0x60280000],ah
  406a38:	add    BYTE PTR [eax],al
  406a3a:	push   es
  406a3b:	adc    eax,DWORD PTR [esi]
  406a3d:	inc    ebp
  406a3e:	adc    al,BYTE PTR [eax]
  406a40:	add    BYTE PTR [eax],al
  406a42:	add    BYTE PTR [eax],al
  406a44:	add    BYTE PTR [eax],al
  406a46:	(bad)  
  406a48:	(bad)  
  406a49:	(bad)  
  406a4a:	in     al,dx
  406a4b:	std    
  406a4c:	(bad)  
  406a4d:	inc    DWORD PTR [ebx]
  406a4f:	(bad)  
  406a50:	(bad)  
  406a51:	jmp    DWORD PTR [ebx]
  406a53:	(bad)  
  406a54:	(bad)  
  406a55:	(bad)  
  406a56:	cmp    bh,dh
  406a58:	(bad)  
  406a59:	jmp    FWORD PTR [ebx-0x2]
  406a5c:	(bad)  
  406a5d:	(bad)  
  406a5e:	jns    0x406a5e
  406a60:	(bad)  
  406a61:	call   DWORD PTR [eax-0x2f000002]
  406a67:	(bad)  
  406a68:	(bad)  
  406a69:	(bad)  
  406a6a:	jmp    0x406a6a
  406a6c:	(bad)  
  406a6d:	(bad)  
  406a6e:	in     eax,dx
  406a6f:	(bad)  
  406a70:	(bad)  
  406a71:	(bad)  
  406a72:	cli    
  406a73:	(bad)  
  406a74:	(bad)  
  406a75:	call   DWORD PTR [ebx]
  406a77:	(bad)  
  406a78:	(bad)  
  406a79:	call   DWORD PTR [edi+edi*8]
  406a7c:	(bad)  
  406a7d:	dec    DWORD PTR [edi+edi*8-0x1]
  406a81:	jmp    DWORD PTR [ecx-0x1]
  406a84:	(bad)  
  406a85:	call   DWORD PTR [ecx-0x21000001]
  406a8b:	ins    DWORD PTR es:[edi],dx
  406a8c:	adc    DWORD PTR [edi],eax
  406a8e:	adc    eax,DWORD PTR [esi]
  406a90:	adc    DWORD PTR ds:0x9a820,eax
  406a96:	add    BYTE PTR [eax],ch
  406a98:	pusha  
  406a99:	add    BYTE PTR [eax],al
  406a9b:	push   es
  406a9c:	xor    BYTE PTR [esi],dl
  406a9e:	sbb    eax,0x145
  406aa3:	add    dh,dh
  406aa5:	(bad)  
  406aa6:	(bad)  
  406aa7:	jmp    DWORD PTR [eax]
  406aa9:	lods   al,BYTE PTR ds:[esi]
  406aaa:	or     DWORD PTR [eax],eax
  406aac:	add    BYTE PTR [eax],ch
  406aae:	pusha  
  406aaf:	add    BYTE PTR [eax],al
  406ab1:	push   es
  406ab2:	sub    eax,DWORD PTR [edx]
  406ab4:	adc    DWORD PTR ds:0x245,eax
  406aba:	add    BYTE PTR [eax],al
  406abc:	add    BYTE PTR [eax],al
  406abe:	add    BYTE PTR [ecx-0x1],ah
  406ac1:	(bad)  
  406ac2:	(bad)  
  406ac3:	fidiv  WORD PTR [esi*2+0x100004b]
  406aca:	adc    al,0xfe
  406acc:	add    edx,DWORD PTR [ecx]
  406ace:	add    eax,0x9b020
  406ad3:	add    BYTE PTR [eax],ch
  406ad5:	pusha  
  406ad6:	add    BYTE PTR [eax],al
  406ad8:	push   es
  406ad9:	inc    BYTE PTR [ebx]
  406adb:	pop    edi
  406adc:	adc    DWORD PTR [esi],eax
  406ade:	and    BYTE PTR [ecx+ecx*1+0x60280000],dh
  406ae5:	add    BYTE PTR [eax],al
  406ae7:	push   es
  406ae8:	inc    BYTE PTR [ecx]
  406aea:	pop    edi
  406aeb:	(bad)  
  406aec:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406af0:	add    BYTE PTR [ecx],al
  406af2:	sub    BYTE PTR [edi+0x0],dl
  406af5:	add    BYTE PTR [edx],cl
  406af7:	ficom  WORD PTR [ebx+0x9b820]
  406afd:	add    BYTE PTR [eax],ch
  406aff:	pusha  
  406b00:	add    BYTE PTR [eax],al
  406b02:	push   es
  406b03:	sub    BYTE PTR [eax+0x250a0000],bh
  406b09:	es jp  0x406b0c
  406b0c:	adc    DWORD PTR [esi],eax
  406b0e:	sub    al,0x5
  406b10:	sub    BYTE PTR [ebx+0x0],bl
  406b13:	add    BYTE PTR [edx],cl
  406b15:	sub    al,BYTE PTR [eax]
  406b17:	add    BYTE PTR [ecx+0x1c],al
  406b1a:	add    BYTE PTR [eax],al
  406b1c:	add    DWORD PTR [eax],eax
  406b1e:	add    BYTE PTR [eax],al
  406b20:	add    DWORD PTR [eax],eax
  406b22:	add    BYTE PTR [eax],al
  406b24:	pusha  
  406b25:	add    al,BYTE PTR [eax]
  406b27:	add    BYTE PTR [ecx+0xc000002],cl
  406b2d:	add    BYTE PTR [eax],al
  406b2f:	add    BYTE PTR [ecx+0x2],ah
  406b32:	add    BYTE PTR [eax],al
  406b34:	sbb    esi,DWORD PTR [eax]
  406b36:	add    al,0x0
  406b38:	test   eax,0x28000001
  406b3d:	add    BYTE PTR [eax],al
  406b3f:	adc    DWORD PTR [eax],eax
  406b41:	sub    BYTE PTR [ebx+0x0],bl
  406b44:	add    BYTE PTR [edx],cl
  406b46:	and    BYTE PTR [eax+0x28000008],dl
  406b4c:	pusha  
  406b4d:	add    BYTE PTR [eax],al
  406b4f:	push   es
  406b50:	adc    eax,DWORD PTR ds:0x89420
  406b56:	add    BYTE PTR [eax],ch
  406b58:	pusha  
  406b59:	add    BYTE PTR [eax],al
  406b5b:	push   es
  406b5c:	adc    eax,DWORD PTR [edi]
  406b5e:	and    BYTE PTR [eax+0x28000008],bl
  406b64:	pusha  
  406b65:	add    BYTE PTR [eax],al
  406b67:	push   es
  406b68:	or     esp,DWORD PTR [eax]
  406b6a:	pushf  
  406b6b:	or     BYTE PTR [eax],al
  406b6d:	add    BYTE PTR [eax],ch
  406b6f:	pusha  
  406b70:	add    BYTE PTR [eax],al
  406b72:	push   es
  406b73:	adc    eax,DWORD PTR [edi]
  406b75:	and    BYTE PTR [eax+0x28000008],ah
  406b7b:	pusha  
  406b7c:	add    BYTE PTR [eax],al
  406b7e:	push   es
  406b7f:	add    cl,BYTE PTR [esi+0x8a420b7]
  406b85:	add    BYTE PTR [eax],al
  406b87:	sub    BYTE PTR [eax+0x0],ah
  406b8a:	add    BYTE PTR [esi],al
  406b8c:	ficom  DWORD PTR [ebx]
  406b8e:	add    al,0xc
  406b90:	sub    ebx,DWORD PTR [eax+eiz*1-0x58]
  406b94:	or     BYTE PTR [eax],al
  406b96:	add    BYTE PTR [eax],ch
  406b98:	pusha  
  406b99:	add    BYTE PTR [eax],al
  406b9b:	push   es
  406b9c:	adc    eax,DWORD PTR [edi]
  406b9e:	pop    es
  406b9f:	outs   dx,BYTE PTR ds:[esi]
  406ba0:	and    BYTE PTR [eax+ecx*1+0x60280000],ch
  406ba7:	add    BYTE PTR [eax],al
  406ba9:	push   es
  406baa:	push   0x5f
  406bac:	add    cl,BYTE PTR [eax]
  406bae:	xchg   ecx,eax
  406baf:	outs   dx,BYTE PTR ds:[esi]
  406bb0:	popa   
  406bb1:	mov    ah,0xd
  406bb3:	and    BYTE PTR [eax+0x28000008],dh
  406bb9:	pusha  
  406bba:	add    BYTE PTR [eax],al
  406bbc:	push   es
  406bbd:	adc    eax,DWORD PTR [edi]
  406bbf:	pop    es
  406bc0:	and    BYTE PTR [eax+ecx*1+0x60280000],dh
  406bc7:	add    BYTE PTR [eax],al
  406bc9:	push   es
  406bca:	fs jle 0x406bed
  406bcd:	add    BYTE PTR [eax],al
  406bcf:	add    al,0x9
  406bd1:	xchg   ebp,eax
  406bd2:	popa   
  406bd3:	or     esp,DWORD PTR [eax]
  406bd5:	mov    eax,0x28000008
  406bda:	pusha  
  406bdb:	add    BYTE PTR [eax],al
  406bdd:	push   es
  406bde:	adc    eax,DWORD PTR [edi]
  406be0:	add    BYTE PTR [eax],cl
  406be2:	and    BYTE PTR [eax+ecx*1+0x60280000],bh
  406be9:	add    BYTE PTR [eax],al
  406beb:	push   es
  406bec:	(bad)  
  406bed:	or     al,0x8
  406bef:	adc    DWORD PTR [ebx+edx*1],eax
  406bf2:	or     BYTE PTR [ecx],dl
  406bf4:	or     BYTE PTR [ecx],dh
  406bf6:	fwait
  406bf7:	sbb    eax,DWORD PTR [ebp+0x1]
  406bfa:	add    BYTE PTR [eax],al
  406bfc:	add    dh,dh
  406bfe:	(bad)  
  406bff:	(bad)  
  406c00:	call   DWORD PTR [edi]
  406c02:	sub    eax,0x55d006
  406c07:	add    BYTE PTR [esi],al
  406c09:	es and al,al
  406c0c:	or     BYTE PTR [eax],al
  406c0e:	add    BYTE PTR [eax],ch
  406c10:	pusha  
  406c11:	add    BYTE PTR [eax],al
  406c13:	push   es
  406c14:	adc    eax,DWORD PTR [edi]
  406c16:	pop    es
  406c17:	data16 or bl,ch
  406c1a:	rol    BYTE PTR [eax],0x0
  406c1d:	add    ch,bl
  406c1f:	mov    ebx,0x11000000
  406c24:	push   es
  406c25:	sub    ecx,DWORD PTR ds:0xc4200611
  406c2b:	or     BYTE PTR [eax],al
  406c2d:	add    BYTE PTR [eax],ch
  406c2f:	pusha  
  406c30:	add    BYTE PTR [eax],al
  406c32:	push   es
  406c33:	pop    eax
  406c34:	and    al,cl
  406c36:	or     BYTE PTR [eax],al
  406c38:	add    BYTE PTR [eax],ch
  406c3a:	pusha  
  406c3b:	add    BYTE PTR [eax],al
  406c3d:	push   es
  406c3e:	adc    eax,DWORD PTR [esi]
  406c40:	inc    ebp
  406c41:	or     DWORD PTR [eax],eax
  406c43:	add    BYTE PTR [eax],al
  406c45:	add    BYTE PTR [eax],al
  406c47:	add    BYTE PTR [eax],al
  406c49:	fdivr  st,st(6)
  406c4b:	(bad)  
  406c4c:	(bad)  
  406c4d:	jmp    0x1406c50
  406c52:	(bad)  
  406c53:	(bad)  
  406c54:	jmp    FWORD PTR [ecx]
  406c56:	(bad)  
  406c57:	(bad)  
  406c58:	dec    DWORD PTR [edx-0x1]
  406c5b:	(bad)  
  406c5c:	jmp    FWORD PTR [ebx-0x1]
  406c5f:	(bad)  
  406c60:	jmp    DWORD PTR [ecx-0x4a000001]
  406c66:	(bad)  
  406c67:	(bad)  
  406c68:	(bad)  
  406c69:	fisub  WORD PTR [ebx+0x11]
  406c6c:	pop    es
  406c6d:	adc    eax,DWORD PTR [esi]
  406c6f:	adc    DWORD PTR ds:0x8cc20,eax
  406c75:	add    BYTE PTR [eax],ch
  406c77:	pusha  
  406c78:	add    BYTE PTR [eax],al
  406c7a:	push   es
  406c7b:	xor    BYTE PTR [eax+eiz*1],cl
  406c7e:	ror    BYTE PTR [eax],1
  406c80:	add    BYTE PTR [eax],al
  406c82:	sub    BYTE PTR [eax+0x0],ah
  406c85:	add    BYTE PTR [esi],al
  406c87:	sub    eax,DWORD PTR [edx]
  406c89:	adc    DWORD PTR ds:0x245,eax
  406c8f:	add    BYTE PTR [eax],al
  406c91:	add    BYTE PTR [eax],al
  406c93:	add    BYTE PTR [edi-0x21000001],cl
  406c99:	xor    al,0x75
  406c9b:	dec    ebx
  406c9c:	add    BYTE PTR [eax],al
  406c9e:	add    DWORD PTR [esi+edi*8],edx
  406ca1:	add    edx,DWORD PTR [ecx]
  406ca3:	add    eax,0x8d420
  406ca8:	add    BYTE PTR [eax],ch
  406caa:	pusha  
  406cab:	add    BYTE PTR [eax],al
  406cad:	push   es
  406cae:	inc    BYTE PTR [ebx]
  406cb0:	pop    edi
  406cb1:	adc    DWORD PTR [esi],eax
  406cb3:	and    al,bl
  406cb5:	or     BYTE PTR [eax],al
  406cb7:	add    BYTE PTR [eax],ch
  406cb9:	pusha  
  406cba:	add    BYTE PTR [eax],al
  406cbc:	push   es
  406cbd:	inc    BYTE PTR [ecx]
  406cbf:	pop    edi
  406cc0:	(bad)  
  406cc1:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406cc5:	add    BYTE PTR [ecx],al
  406cc7:	sub    BYTE PTR [edi+0x0],dl
  406cca:	add    BYTE PTR [edx],cl
  406ccc:	ficomp WORD PTR [ebp+0x8dc20]
  406cd2:	add    BYTE PTR [eax],ch
  406cd4:	pusha  
  406cd5:	add    BYTE PTR [eax],al
  406cd7:	push   es
  406cd8:	sub    BYTE PTR [eax+0x7a0a0000],bh
  406cde:	push   es
  406cdf:	adc    DWORD PTR [esi],eax
  406ce1:	sub    al,0x5
  406ce3:	sub    BYTE PTR [ebx+0x0],bl
  406ce6:	add    BYTE PTR [edx],cl
  406ce8:	sub    al,BYTE PTR [eax]
  406cea:	add    BYTE PTR [eax],al
  406cec:	inc    ecx
  406ced:	sbb    al,0x0
  406cef:	add    BYTE PTR [ecx],al
  406cf1:	add    BYTE PTR [eax],al
  406cf3:	add    BYTE PTR [ecx],al
  406cf5:	add    BYTE PTR [eax],al
  406cf7:	add    BYTE PTR [ecx+0x1],bl
  406cfa:	add    BYTE PTR [eax],al
  406cfc:	add    BYTE PTR [ecx],0x0
  406cff:	add    BYTE PTR [eax+eax*1],cl
  406d02:	add    BYTE PTR [eax],al
  406d04:	pop    edx
  406d05:	add    DWORD PTR [eax],eax
  406d07:	add    BYTE PTR [ebx],bl
  406d09:	xor    BYTE PTR [eax+eax*1],al
  406d0c:	fild   WORD PTR [ecx]
  406d0e:	add    BYTE PTR [eax],al
  406d10:	sub    DWORD PTR [eax],eax
  406d12:	add    BYTE PTR [ecx],dl
  406d14:	add    BYTE PTR [eax],ch
  406d16:	pop    ebx
  406d17:	add    BYTE PTR [eax],al
  406d19:	or     ah,BYTE PTR [eax]
  406d1b:	loopne 0x406d25
  406d1d:	add    BYTE PTR [eax],al
  406d1f:	sub    BYTE PTR [eax+0x0],ah
  406d22:	add    BYTE PTR [esi],al
  406d24:	adc    eax,DWORD PTR [esi]
  406d26:	and    ah,ah
  406d28:	or     BYTE PTR [eax],al
  406d2a:	add    BYTE PTR [eax],ch
  406d2c:	pusha  
  406d2d:	add    BYTE PTR [eax],al
  406d2f:	push   es
  406d30:	adc    ecx,DWORD PTR [eax]
  406d32:	sub    bh,ah
  406d34:	add    BYTE PTR [eax],al
  406d36:	or     ah,BYTE PTR ds:0xe86f0226
  406d3c:	add    BYTE PTR [eax],al
  406d3e:	or     ah,BYTE PTR ds:0xe8200a26
  406d44:	or     BYTE PTR [eax],al
  406d46:	add    BYTE PTR [eax],ch
  406d48:	pusha  
  406d49:	add    BYTE PTR [eax],al
  406d4b:	push   es
  406d4c:	adc    ecx,DWORD PTR [eax]
  406d4e:	and    ah,ch
  406d50:	or     BYTE PTR [eax],al
  406d52:	add    BYTE PTR [eax],ch
  406d54:	pusha  
  406d55:	add    BYTE PTR [eax],al
  406d57:	push   es
  406d58:	or     al,0x20
  406d5a:	lock or BYTE PTR [eax],al
  406d5d:	add    BYTE PTR [eax],ch
  406d5f:	pusha  
  406d60:	add    BYTE PTR [eax],al
  406d62:	push   es
  406d63:	adc    ecx,DWORD PTR [eax]
  406d65:	and    ah,dh
  406d67:	or     BYTE PTR [eax],al
  406d69:	add    BYTE PTR [eax],ch
  406d6b:	pusha  
  406d6c:	add    BYTE PTR [eax],al
  406d6e:	push   es
  406d6f:	push   es
  406d70:	mov    ?,WORD PTR [edi+0x8f820]
  406d76:	add    BYTE PTR [eax],ch
  406d78:	pusha  
  406d79:	add    BYTE PTR [eax],al
  406d7b:	push   es
  406d7c:	ficom  DWORD PTR [ebx]
  406d7e:	add    eax,0x205e2b0d
  406d83:	cld    
  406d84:	or     BYTE PTR [eax],al
  406d86:	add    BYTE PTR [eax],ch
  406d88:	pusha  
  406d89:	add    BYTE PTR [eax],al
  406d8b:	push   es
  406d8c:	adc    ecx,DWORD PTR [eax]
  406d8e:	or     BYTE PTR [esi+0x20],ch
  406d91:	add    BYTE PTR [ecx],cl
  406d93:	add    BYTE PTR [eax],al
  406d95:	sub    BYTE PTR [eax+0x0],ah
  406d98:	add    BYTE PTR [esi],al
  406d9a:	push   0x5f
  406d9c:	push   es
  406d9d:	or     DWORD PTR [ecx+0x13b4616e],edx
  406da3:	add    al,0x20
  406da5:	add    al,0x9
  406da7:	add    BYTE PTR [eax],al
  406da9:	sub    BYTE PTR [eax+0x0],ah
  406dac:	add    BYTE PTR [esi],al
  406dae:	adc    ecx,DWORD PTR [eax]
  406db0:	or     BYTE PTR [eax],ah
  406db2:	or     BYTE PTR [ecx],cl
  406db4:	add    BYTE PTR [eax],al
  406db6:	sub    BYTE PTR [eax+0x0],ah
  406db9:	add    BYTE PTR [esi],al
  406dbb:	fs jle 0x406dde
  406dbe:	add    BYTE PTR [eax],al
  406dc0:	add    al,0x11
  406dc2:	add    al,0x95
  406dc4:	popa   
  406dc5:	or     al,0x20
  406dc7:	or     al,0x9
  406dc9:	add    BYTE PTR [eax],al
  406dcb:	sub    BYTE PTR [eax+0x0],ah
  406dce:	add    BYTE PTR [esi],al
  406dd0:	adc    ecx,DWORD PTR [eax]
  406dd2:	add    BYTE PTR [ecx],cl
  406dd4:	and    BYTE PTR [eax],dl
  406dd6:	or     DWORD PTR [eax],eax
  406dd8:	add    BYTE PTR [eax],ch
  406dda:	pusha  
  406ddb:	add    BYTE PTR [eax],al
  406ddd:	push   es
  406dde:	(bad)  
  406ddf:	or     eax,0x13051109
  406de4:	or     DWORD PTR [ecx],edx
  406de6:	or     DWORD PTR [ecx],esi
  406de8:	cdq    
  406de9:	pop    ss
  406dea:	inc    ebp
  406deb:	add    DWORD PTR [eax],eax
  406ded:	add    BYTE PTR [eax],al
  406def:	idiv   bh
  406df1:	(bad)  
  406df2:	call   DWORD PTR [edi]
  406df4:	sub    eax,0x56d006
  406df9:	add    BYTE PTR [esi],al
  406dfb:	and    BYTE PTR es:[ecx+ecx*1],dl
  406dff:	add    BYTE PTR [eax],al
  406e01:	sub    BYTE PTR [eax+0x0],ah
  406e04:	add    BYTE PTR [esi],al
  406e06:	adc    ecx,DWORD PTR [eax]
  406e08:	or     BYTE PTR [esi+0xb],ah
  406e0b:	(bad)  
  406e0d:	add    BYTE PTR [eax],al
  406e0f:	add    ch,bl
  406e11:	leave  
  406e12:	add    BYTE PTR [eax],al
  406e14:	add    BYTE PTR [ecx],dl
  406e16:	pop    es
  406e17:	sub    ecx,DWORD PTR ds:0x18200711
  406e1d:	or     DWORD PTR [eax],eax
  406e1f:	add    BYTE PTR [eax],ch
  406e21:	pusha  
  406e22:	add    BYTE PTR [eax],al
  406e24:	push   es
  406e25:	pop    eax
  406e26:	and    BYTE PTR [ecx+ecx*1],bl
  406e29:	add    BYTE PTR [eax],al
  406e2b:	sub    BYTE PTR [eax+0x0],ah
  406e2e:	add    BYTE PTR [esi],al
  406e30:	adc    eax,DWORD PTR [edi]
  406e32:	inc    ebp
  406e33:	or     al,BYTE PTR [eax]
  406e35:	add    BYTE PTR [eax],al
  406e37:	add    BYTE PTR [eax],al
  406e39:	add    BYTE PTR [eax],al
  406e3b:	mov    dh,0xfe
  406e3d:	(bad)  
  406e3e:	inc    edi
  406e40:	(bad)  
  406e41:	(bad)  
  406e42:	jmp    ebx
  406e44:	(bad)  
  406e45:	(bad)  
  406e46:	(bad)  
  406e47:	cli    
  406e48:	(bad)  
  406e49:	(bad)  
  406e4a:	jmp    DWORD PTR [ebx]
  406e4c:	(bad)  
  406e4d:	(bad)  
  406e4e:	inc    DWORD PTR [ebp-0x1]
  406e51:	(bad)  
  406e52:	jmp    DWORD PTR [edi-0x1]
  406e55:	(bad)  
  406e56:	call   FWORD PTR [ebp-0x4e000001]
  406e5c:	(bad)  
  406e5d:	(bad)  
  406e5e:	(bad)  
  406e5f:	fisubr WORD PTR [ebp+0x11]
  406e62:	or     BYTE PTR [ebx],dl
  406e64:	pop    es
  406e65:	adc    DWORD PTR [esi],eax
  406e67:	and    BYTE PTR [eax],ah
  406e69:	or     DWORD PTR [eax],eax
  406e6b:	add    BYTE PTR [eax],ch
  406e6d:	pusha  
  406e6e:	add    BYTE PTR [eax],al
  406e70:	push   es
  406e71:	xor    BYTE PTR [esi],dl
  406e73:	sbb    al,BYTE PTR [ebp+0x1]
  406e76:	add    BYTE PTR [eax],al
  406e78:	add    dh,dh
  406e7a:	(bad)  
  406e7b:	(bad)  
  406e7c:	jmp    DWORD PTR [eax]
  406e7e:	and    al,0x9
  406e80:	add    BYTE PTR [eax],al
  406e82:	sub    BYTE PTR [eax+0x0],ah
  406e85:	add    BYTE PTR [esi],al
  406e87:	sub    eax,DWORD PTR [edx]
  406e89:	adc    DWORD PTR [esi],eax
  406e8b:	inc    ebp
  406e8c:	add    al,BYTE PTR [eax]
  406e8e:	add    BYTE PTR [eax],al
  406e90:	add    BYTE PTR [eax],al
  406e92:	add    BYTE PTR [eax],al
  406e94:	cmp    edi,0x34deffff
  406e9a:	jne    0x406ee7
  406e9c:	add    BYTE PTR [eax],al
  406e9e:	add    DWORD PTR [esi+edi*8],edx
  406ea1:	add    edx,DWORD PTR [ecx]
  406ea3:	push   es
  406ea4:	and    BYTE PTR [eax],ch
  406ea6:	or     DWORD PTR [eax],eax
  406ea8:	add    BYTE PTR [eax],ch
  406eaa:	pusha  
  406eab:	add    BYTE PTR [eax],al
  406ead:	push   es
  406eae:	inc    BYTE PTR [ebx]
  406eb0:	pop    edi
  406eb1:	adc    DWORD PTR [edi],eax
  406eb3:	and    BYTE PTR [ecx+ecx*1],ch
  406eb6:	add    BYTE PTR [eax],al
  406eb8:	sub    BYTE PTR [eax+0x0],ah
  406ebb:	add    BYTE PTR [esi],al
  406ebd:	inc    BYTE PTR [ecx]
  406ebf:	pop    edi
  406ec0:	(bad)  
  406ec1:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406ec5:	add    BYTE PTR [ecx],al
  406ec7:	sub    BYTE PTR [edi+0x0],dl
  406eca:	add    BYTE PTR [edx],cl
  406ecc:	ficom  WORD PTR [ebx+0x93020]
  406ed2:	add    BYTE PTR [eax],ch
  406ed4:	pusha  
  406ed5:	add    BYTE PTR [eax],al
  406ed7:	push   es
  406ed8:	sub    BYTE PTR [eax+0x7a0a0000],bh
  406ede:	pop    es
  406edf:	adc    DWORD PTR [edi],eax
  406ee1:	sub    al,0xf
  406ee3:	sbb    eax,0x145
  406ee8:	add    dh,dh
  406eea:	(bad)  
  406eeb:	(bad)  
  406eec:	jmp    FWORD PTR [eax]
  406eee:	pop    ebx
  406eef:	add    BYTE PTR [eax],al
  406ef1:	or     ch,BYTE PTR [edx]
  406ef3:	add    BYTE PTR [ecx+0x1c],al
  406ef6:	add    BYTE PTR [eax],al
  406ef8:	add    DWORD PTR [eax],eax
  406efa:	add    BYTE PTR [eax],al
  406efc:	add    DWORD PTR [eax],eax
  406efe:	add    BYTE PTR [eax],al
  406f00:	test   DWORD PTR [ecx],eax
  406f02:	add    BYTE PTR [eax],al
  406f04:	scas   al,BYTE PTR es:[edi]
  406f05:	add    DWORD PTR [eax],eax
  406f07:	add    BYTE PTR [eax+eax*1],cl
  406f0a:	add    BYTE PTR [eax],al
  406f0c:	xchg   BYTE PTR [ecx],al
  406f0e:	add    BYTE PTR [eax],al
  406f10:	adc    esi,DWORD PTR [eax]
  406f12:	add    al,0x0
  406f14:	pop    ecx
  406f15:	add    BYTE PTR [eax],al
  406f17:	add    BYTE PTR [edx],ch
  406f19:	add    BYTE PTR [eax],al
  406f1b:	adc    DWORD PTR [eax],eax
  406f1d:	jle    0x406f40
  406f1f:	add    BYTE PTR [eax],al
  406f21:	add    al,0x14
  406f23:	sub    cl,ch
  406f25:	add    BYTE PTR [eax],al
  406f27:	or     cl,BYTE PTR [eax+ecx*1]
  406f2a:	sub    al,0x3e
  406f2c:	pop    ss
  406f2d:	inc    ebp
  406f2e:	add    DWORD PTR [eax],eax
  406f30:	add    BYTE PTR [eax],al
  406f32:	idiv   bh
  406f34:	(bad)  
  406f35:	call   DWORD PTR [edi]
  406f37:	sub    eax,0x57d006
  406f3c:	add    BYTE PTR [esi],al
  406f3e:	es and bh,cl
  406f41:	or     eax,DWORD PTR [eax]
  406f43:	add    BYTE PTR [eax],ch
  406f45:	push   0x25060000
  406f4a:	ror    BYTE PTR es:0x28020000,1
  406f51:	push   eax
  406f52:	add    BYTE PTR [eax],al
  406f54:	or     ah,BYTE PTR ds:0xea6f26
  406f5a:	add    BYTE PTR [edx],cl
  406f5c:	and    eax,0xeb7326
  406f61:	add    BYTE PTR [edx],cl
  406f63:	or     eax,DWORD PTR [edi]
  406f65:	and    BYTE PTR [ecx],0x0
  406f68:	add    BYTE PTR [eax+eax*1],al
  406f6b:	jle    0x406f8e
  406f6d:	add    BYTE PTR [eax],al
  406f6f:	add    al,0xa
  406f71:	sub    eax,DWORD PTR [eax]
  406f73:	push   es
  406f74:	sub    al,BYTE PTR [eax]
  406f76:	add    BYTE PTR [eax],al
  406f78:	adc    esi,DWORD PTR [eax]
  406f7a:	add    al,BYTE PTR [eax]
  406f7c:	or     eax,DWORD PTR [eax]
  406f7e:	add    BYTE PTR [eax],al
  406f80:	sub    eax,DWORD PTR [eax]
  406f82:	add    BYTE PTR [ecx],dl
  406f84:	add    BYTE PTR [esi+0x22],bh
  406f87:	add    BYTE PTR [eax],al
  406f89:	add    al,0xa
  406f8b:	sub    eax,DWORD PTR [eax]
  406f8d:	push   es
  406f8e:	sub    al,BYTE PTR [eax]
  406f90:	add    esi,DWORD PTR [eax]
  406f92:	or     DWORD PTR [eax],eax
  406f94:	or     DWORD PTR [eax],eax
  406f96:	add    BYTE PTR [eax],al
  406f98:	add    BYTE PTR [eax],al
  406f9a:	add    BYTE PTR [eax],al
  406f9c:	add    BYTE PTR [edx],al
  406f9e:	and    BYTE PTR [edx],0x0
  406fa1:	add    BYTE PTR [eax+eax*1],al
  406fa4:	sub    al,BYTE PTR [eax]
  406fa6:	add    BYTE PTR [eax],al
  406fa8:	add    esi,DWORD PTR [eax]
  406faa:	or     DWORD PTR [eax],eax
  406fac:	daa    
  406fad:	add    BYTE PTR [eax],al
  406faf:	add    BYTE PTR [eax],al
  406fb1:	add    BYTE PTR [eax],al
  406fb3:	add    BYTE PTR [ebx+0x5b],dh
  406fb6:	add    BYTE PTR [eax],al
  406fb8:	push   es
  406fb9:	sub    ah,ch
  406fbb:	add    BYTE PTR [eax],al
  406fbd:	or     ah,BYTE PTR ds:0xe7426
  406fc3:	add    BYTE PTR [edx],al
  406fc5:	and    BYTE PTR [ebx],0x0
  406fc8:	add    BYTE PTR [ebx+esi*2],al
  406fcb:	cmp    DWORD PTR [eax],eax
  406fcd:	add    BYTE PTR [edx],cl
  406fcf:	sub    BYTE PTR [ecx],ch
  406fd1:	add    BYTE PTR [eax],al
  406fd3:	or     al,BYTE PTR [eax+0x4000025]
  406fd9:	add    BYTE PTR [edx],ch
  406fdb:	add    BYTE PTR [ebx],al
  406fdd:	xor    BYTE PTR [ecx],cl
  406fdf:	add    BYTE PTR [ecx],cl
  406fe1:	add    BYTE PTR [eax],al
  406fe3:	add    BYTE PTR [eax],al
  406fe5:	add    BYTE PTR [eax],al
  406fe7:	add    BYTE PTR [edx],al
  406fe9:	sub    ch,ch
  406feb:	add    BYTE PTR [eax],al
  406fed:	or     al,BYTE PTR [eax]
  406fef:	add    BYTE PTR [edx],ch
  406ff1:	add    BYTE PTR [eax],al
  406ff3:	add    BYTE PTR [ebx],dl
  406ff5:	xor    BYTE PTR [ebx],al
  406ff7:	add    BYTE PTR [esi],dh
  406ff9:	add    BYTE PTR [eax],al
  406ffb:	add    BYTE PTR [eax+eax*1],cl
  406ffe:	add    BYTE PTR [ecx],dl
  407000:	add    BYTE PTR [eax],ch
  407002:	adc    DWORD PTR [eax],eax
  407004:	add    BYTE PTR [esi],al
  407006:	and    eax,0xee6f26
  40700b:	add    BYTE PTR [edx],cl
  40700d:	and    eax,0x2c060a26
  407012:	and    BYTE PTR [eax*2+0x1],bl
  407019:	idiv   bh
  40701b:	(bad)  
  40701c:	call   DWORD PTR [edi]
  40701e:	sub    eax,0x5cd006
  407023:	add    BYTE PTR [esi],al
  407025:	sub    BYTE PTR es:[ebp+0x0],ah
  407029:	add    BYTE PTR [esi],al
  40702b:	and    eax,0xef6f26
  407030:	add    BYTE PTR [edx],cl
  407032:	add    BYTE PTR [eax],al
  407034:	add    BYTE PTR [edx],ch
  407036:	add    BYTE PTR [eax],al
  407038:	sbb    esi,DWORD PTR [eax]
  40703a:	add    al,0x0
  40703c:	xchg   esp,eax
  40703d:	add    BYTE PTR [eax],al
  40703f:	add    BYTE PTR [eax+eax*1],ch
  407042:	add    BYTE PTR [ecx],dl
  407044:	add    BYTE PTR [esi+0x24],bh
  407047:	add    BYTE PTR [eax],al
  407049:	add    al,0x20
  40704b:	mov    esp,0x28000009
  407050:	pusha  
  407051:	add    BYTE PTR [eax],al
  407053:	push   es
  407054:	inc    BYTE PTR [ecx]
  407056:	or     al,0x8
  407058:	sub    al,0x73
  40705a:	add    BYTE PTR [esi+0x25],bh
  40705d:	add    BYTE PTR [eax],al
  40705f:	add    al,0xb
  407061:	pop    es
  407062:	sub    al,dh
  407064:	add    BYTE PTR [eax],al
  407066:	or     al,BYTE PTR [eax]
  407068:	pop    es
  407069:	sub    BYTE PTR [ecx],ah
  40706b:	add    BYTE PTR [eax],al
  40706d:	or     al,BYTE PTR [eax]
  40706f:	add    BYTE PTR [esi+0x24],bh
  407072:	add    BYTE PTR [eax],al
  407074:	add    al,0x20
  407076:	ror    BYTE PTR [ecx],0x0
  407079:	add    BYTE PTR [eax],ch
  40707b:	pusha  
  40707c:	add    BYTE PTR [eax],al
  40707e:	push   es
  40707f:	inc    BYTE PTR [ecx]
  407081:	or     al,0x8
  407083:	sub    al,0x3b
  407085:	sbb    DWORD PTR [ebp+0x1],eax
  407088:	add    BYTE PTR [eax],al
  40708a:	add    dh,dh
  40708c:	(bad)  
  40708d:	(bad)  
  40708e:	call   DWORD PTR [edi]
  407090:	sub    eax,0x5dd006
  407095:	add    BYTE PTR [esi],al
  407097:	sub    BYTE PTR es:[ecx],dl
  40709a:	add    BYTE PTR [eax],al
  40709c:	push   es
  40709d:	and    eax,0x6fe1426
  4070a2:	pop    esp
  4070a3:	add    BYTE PTR [eax],al
  4070a5:	push   es
  4070a6:	jae    0x407099
  4070a8:	add    BYTE PTR [eax],al
  4070aa:	or     ch,BYTE PTR [edi-0xe]
  4070ad:	add    BYTE PTR [eax],al
  4070af:	or     al,BYTE PTR [eax]
  4070b1:	and    ah,al
  4070b3:	or     DWORD PTR [eax],eax
  4070b5:	add    BYTE PTR [eax],ch
  4070b7:	pusha  
  4070b8:	add    BYTE PTR [eax],al
  4070ba:	push   es
  4070bb:	and    BYTE PTR [eax+eax*1],0x0
  4070bf:	add    al,0x0
  4070c1:	add    dh,bl
  4070c3:	or     BYTE PTR [edi],al
  4070c5:	sub    BYTE PTR [eax+eax*1],ch
  4070c8:	add    BYTE PTR [edx],cl
  4070ca:	add    ah,bl
  4070cc:	add    BYTE PTR [eax],al
  4070ce:	jle    0x4070f3
  4070d0:	add    BYTE PTR [eax],al
  4070d2:	add    al,0xa
  4070d4:	sub    eax,DWORD PTR [eax]
  4070d6:	push   es
  4070d7:	sub    al,BYTE PTR [ecx]
  4070d9:	adc    BYTE PTR [eax],al
  4070db:	add    BYTE PTR [edx],al
  4070dd:	add    BYTE PTR [eax+eax*1],ch
  4070e0:	push   esp
  4070e1:	add    BYTE PTR [eax],0x8
  4070e4:	add    BYTE PTR [eax],al
  4070e6:	add    BYTE PTR [eax],al
  4070e8:	adc    esi,DWORD PTR [eax]
  4070ea:	add    eax,0x5600
  4070ef:	add    BYTE PTR ds:0x7e110000,ch
  4070f5:	add    BYTE PTR es:[eax],al
  4070f8:	add    al,0x2d
  4070fa:	dec    esi
  4070fb:	sbb    al,BYTE PTR [ebp+0x1]
  4070fe:	add    BYTE PTR [eax],al
  407100:	add    dh,dh
  407102:	(bad)  
  407103:	(bad)  
  407104:	call   DWORD PTR [edi]
  407106:	sub    eax,0x5ed006
  40710b:	add    BYTE PTR [esi],al
  40710d:	es jb  0x40716d
  407110:	add    BYTE PTR [eax],al
  407112:	jo     0x40711e
  407114:	push   es
  407115:	sub    bl,dh
  407117:	add    BYTE PTR [eax],al
  407119:	or     ah,BYTE PTR ds:0xe7280b26
  40711f:	add    BYTE PTR [eax],al
  407121:	or     ah,BYTE PTR ds:0x7160726
  407127:	mov    gs,WORD PTR [ecx+0x6f]
  40712a:	hlt    
  40712b:	add    BYTE PTR [eax],al
  40712d:	or     cl,BYTE PTR [edx]
  40712f:	sub    BYTE PTR [edi],dh
  407131:	add    BYTE PTR [eax],al
  407133:	or     al,BYTE PTR [esi]
  407135:	outs   dx,DWORD PTR ds:[esi]
  407136:	cmp    al,0x0
  407138:	add    BYTE PTR [edx],cl
  40713a:	or     al,0x1f
  40713c:	popa   
  40713d:	push   0x8
  40713f:	sub    BYTE PTR [esi+0x0],ch
  407142:	add    BYTE PTR [esi],al
  407144:	and    BYTE PTR [esi],0x0
  407147:	add    BYTE PTR [edx+ebp*1],al
  40714a:	add    BYTE PTR [eax],al
  40714c:	add    esi,DWORD PTR [eax]
  40714e:	or     DWORD PTR [eax],eax
  407150:	pop    es
  407151:	add    BYTE PTR [eax],al
  407153:	add    BYTE PTR [eax],al
  407155:	add    BYTE PTR [eax],al
  407157:	add    BYTE PTR [edx],al
  407159:	sub    BYTE PTR [ecx],bh
  40715b:	add    BYTE PTR [eax],al
  40715d:	or     ch,BYTE PTR [edx]
  40715f:	add    BYTE PTR [ebx],al
  407161:	xor    BYTE PTR [ecx],cl
  407163:	add    BYTE PTR [esi],cl
  407165:	add    BYTE PTR [eax],al
  407167:	add    BYTE PTR [eax],al
  407169:	add    BYTE PTR [eax],al
  40716b:	add    BYTE PTR [esi+0x26],bh
  40716e:	add    BYTE PTR [eax],al
  407170:	add    al,0x2
  407172:	sub    ch,dh
  407174:	add    BYTE PTR [eax],al
  407176:	or     ah,BYTE PTR ds:0x2a26
  40717c:	add    esi,DWORD PTR [eax]
  40717e:	or     DWORD PTR [eax],eax
  407180:	push   cs
  407181:	add    BYTE PTR [eax],al
  407183:	add    BYTE PTR [eax],al
  407185:	add    BYTE PTR [eax],al
  407187:	add    BYTE PTR [esi+0x26],bh
  40718a:	add    BYTE PTR [eax],al
  40718c:	add    al,0x2
  40718e:	sub    dh,dh
  407190:	add    BYTE PTR [eax],al
  407192:	or     ah,BYTE PTR ds:0x2a26
  407198:	add    esi,DWORD PTR [eax]
  40719a:	or     DWORD PTR [eax],eax
  40719c:	push   cs
  40719d:	add    BYTE PTR [eax],al
  40719f:	add    BYTE PTR [eax],al
  4071a1:	add    BYTE PTR [eax],al
  4071a3:	add    BYTE PTR [esi+0x26],bh
  4071a6:	add    BYTE PTR [eax],al
  4071a8:	add    al,0x2
  4071aa:	sub    bh,dh
  4071ac:	add    BYTE PTR [eax],al
  4071ae:	or     ah,BYTE PTR ds:0x2a26
  4071b4:	add    esi,DWORD PTR [eax]
  4071b6:	or     DWORD PTR [eax],eax
  4071b8:	push   cs
  4071b9:	add    BYTE PTR [eax],al
  4071bb:	add    BYTE PTR [eax],al
  4071bd:	add    BYTE PTR [eax],al
  4071bf:	add    BYTE PTR [esi+0x26],bh
  4071c2:	add    BYTE PTR [eax],al
  4071c4:	add    al,0x2
  4071c6:	sub    al,bh
  4071c8:	add    BYTE PTR [eax],al
  4071ca:	or     ah,BYTE PTR ds:0x2a26
  4071d0:	adc    esi,DWORD PTR [eax]
  4071d2:	push   es
  4071d3:	add    dl,dl
  4071d5:	add    BYTE PTR [eax],al
  4071d7:	add    BYTE PTR [edi],cl
  4071d9:	add    BYTE PTR [eax],al
  4071db:	adc    DWORD PTR [esi],edx
  4071dd:	or     bh,BYTE PTR [esi+0x26]
  4071e0:	add    BYTE PTR [eax],al
  4071e2:	add    al,0x3
  4071e4:	xchg   ecx,eax
  4071e5:	and    BYTE PTR [eax+0x5f000000],al
  4071eb:	sub    eax,0x1451c27
  4071f0:	add    BYTE PTR [eax],al
  4071f2:	add    dh,dh
  4071f4:	(bad)  
  4071f5:	(bad)  
  4071f6:	call   DWORD PTR [edi]
  4071f8:	sub    eax,0x64d006
  4071fd:	add    BYTE PTR [esi],al
  4071ff:	es jle 0x407228
  407202:	add    BYTE PTR [eax],al
  407204:	add    al,0x3
  407206:	xchg   ecx,eax
  407207:	or     al,BYTE PTR [ebx]
  407209:	pop    ss
  40720a:	pop    eax
  40720b:	dec    BYTE PTR [ebx]
  40720d:	add    DWORD PTR [eax],eax
  40720f:	cmp    BYTE PTR [eax+eax*1+0x0],bh
  407213:	add    BYTE PTR [esi+0x26],bh
  407216:	add    BYTE PTR [eax],al
  407218:	add    al,0x3
  40721a:	xchg   ecx,eax
  40721b:	pop    ds
  40721c:	inc    eax
  40721d:	pop    edi
  40721e:	sub    eax,0x145182f
  407223:	add    BYTE PTR [eax],al
  407225:	add    dh,dh
  407227:	(bad)  
  407228:	(bad)  
  407229:	(bad)  
  40722a:	jle    0x407252
  40722c:	add    BYTE PTR [eax],al
  40722e:	add    al,0x3
  407230:	xchg   ecx,eax
  407231:	and    BYTE PTR [edi-0x1],bh
  407234:	(bad)  
  407235:	call   FWORD PTR [edi+0x1e]
  407238:	bound  ecx,QWORD PTR [edx]
  40723a:	push   es
  40723b:	jle    0x407263
  40723d:	add    BYTE PTR [eax],al
  40723f:	add    al,0x3
  407241:	pop    ss
  407242:	pop    eax
  407243:	xchg   ecx,eax
  407244:	pusha  
  407245:	or     al,BYTE PTR [ebx]
  407247:	sbb    BYTE PTR [eax-0x2],bl
  40724a:	or     eax,DWORD PTR [ecx]
  40724c:	add    BYTE PTR [ebx],ch
  40724e:	inc    ecx
  40724f:	jle    0x407277
  407251:	add    BYTE PTR [eax],al
  407253:	add    al,0x3
  407255:	xchg   ecx,eax
  407256:	and    BYTE PTR [edi],bh
  407258:	(bad)  
  407259:	(bad)  
  40725a:	call   FWORD PTR [edi+0x1f]
  40725d:	sbb    BYTE PTR [edx+0xa],ah
  407260:	push   es
  407261:	jle    0x407289
  407263:	add    BYTE PTR [eax],al
  407265:	add    al,0x3
  407267:	pop    ss
  407268:	pop    eax
  407269:	xchg   ecx,eax
  40726a:	pop    ds
  40726b:	adc    BYTE PTR [edx+0x60],ah
  40726e:	or     al,BYTE PTR [esi]
  407270:	jle    0x407298
  407272:	add    BYTE PTR [eax],al
  407274:	add    al,0x3
  407276:	sbb    BYTE PTR [eax-0x6f],bl
  407279:	push   ds
  40727a:	bound  esp,QWORD PTR [eax+0xa]
  40727d:	push   es
  40727e:	jle    0x4072a6
  407280:	add    BYTE PTR [eax],al
  407282:	add    al,0x3
  407284:	sbb    DWORD PTR [eax-0x6f],ebx
  407287:	pusha  
  407288:	or     al,BYTE PTR [ebx]
  40728a:	sbb    bl,BYTE PTR [eax-0x2]
  40728d:	or     eax,DWORD PTR [ecx]
  40728f:	add    BYTE PTR [esi],al
  407291:	pop    ss
  407292:	das    
  407293:	or     ebx,DWORD PTR ds:0x145
  407299:	add    dh,dh
  40729b:	(bad)  
  40729c:	(bad)  
  40729d:	jmp    FWORD PTR [edx]
  40729f:	jle    0x4072c7
  4072a1:	add    BYTE PTR [eax],al
  4072a3:	add    al,0x3
  4072a5:	add    dl,BYTE PTR [esi]
  4072a7:	push   es
  4072a8:	sub    cl,bh
  4072aa:	add    BYTE PTR [eax],al
  4072ac:	or     ch,BYTE PTR [edx]
  4072ae:	add    BYTE PTR [eax],al
  4072b0:	adc    esi,DWORD PTR [eax]
  4072b2:	add    eax,DWORD PTR [eax]
  4072b4:	or     eax,0x2e000000
  4072b9:	add    BYTE PTR [eax],al
  4072bb:	adc    DWORD PTR [eax],eax
  4072bd:	sub    BYTE PTR [ebp+0x0],bl
  4072c0:	add    BYTE PTR [esi],al
  4072c2:	and    eax,0x2b0a26
  4072c7:	push   es
  4072c8:	sub    al,BYTE PTR [eax]
  4072ca:	add    BYTE PTR [eax],al
  4072cc:	adc    esi,DWORD PTR [eax]
  4072ce:	add    eax,0x5e00
  4072d3:	add    BYTE PTR ds:0x7e110000,ch
  4072d9:	sub    BYTE PTR [eax],al
  4072db:	add    BYTE PTR [ebp*1+0x1451d56],al
  4072e2:	add    BYTE PTR [eax],al
  4072e4:	add    dh,dh
  4072e6:	(bad)  
  4072e7:	(bad)  
  4072e8:	call   DWORD PTR [edi]
  4072ea:	sub    eax,0x66d006
  4072ef:	add    BYTE PTR [esi],al
  4072f1:	es jb  0x40727b
  4072f4:	add    BYTE PTR [eax],al
  4072f6:	jo     0x407302
  4072f8:	push   es
  4072f9:	sub    bl,dh
  4072fb:	add    BYTE PTR [eax],al
  4072fd:	or     ah,BYTE PTR ds:0xe7280b26
  407303:	add    BYTE PTR [eax],al
  407305:	or     ah,BYTE PTR ds:0x7160726
  40730b:	mov    gs,WORD PTR [ecx+0x6f]
  40730e:	hlt    
  40730f:	add    BYTE PTR [eax],al
  407311:	or     ah,BYTE PTR ds:0x37280a26
  407317:	add    BYTE PTR [eax],al
  407319:	or     ah,BYTE PTR ds:0x3c6f0626
  40731f:	add    BYTE PTR [eax],al
  407321:	or     ah,BYTE PTR ds:0x611f0c26
  407327:	push   0x8
  407329:	sub    BYTE PTR [esi+0x0],ch
  40732c:	add    BYTE PTR [esi],al
  40732e:	and    eax,0x288026
  407333:	add    BYTE PTR [edx+ebp*1],al
  407336:	add    BYTE PTR [eax],al
  407338:	add    esi,DWORD PTR [eax]
  40733a:	or     DWORD PTR [eax],eax
  40733c:	pop    es
  40733d:	add    BYTE PTR [eax],al
  40733f:	add    BYTE PTR [eax],al
  407341:	add    BYTE PTR [eax],al
  407343:	add    BYTE PTR [edx],al
  407345:	sub    BYTE PTR [ecx],bh
  407347:	add    BYTE PTR [eax],al
  407349:	or     ch,BYTE PTR [edx]
  40734b:	add    BYTE PTR [ebx],dl
  40734d:	xor    BYTE PTR ds:0xd000,al
  407353:	add    BYTE PTR [edi],ch
  407355:	add    BYTE PTR [eax],al
  407357:	adc    DWORD PTR [esi],edx
  407359:	or     bh,BYTE PTR [esi+0x28]
  40735c:	add    BYTE PTR [eax],al
  40735e:	add    al,0x2
  407360:	xchg   ecx,eax
  407361:	and    BYTE PTR [eax+0x5f000000],al
  407367:	sub    eax,0x1451d24
  40736c:	add    BYTE PTR [eax],al
  40736e:	add    dh,dh
  407370:	(bad)  
  407371:	(bad)  
  407372:	call   DWORD PTR [edi]
  407374:	sub    eax,0x68d006
  407379:	add    BYTE PTR [esi],al
  40737b:	es jle 0x4073a6
  40737e:	add    BYTE PTR [eax],al
  407380:	add    al,0x2
  407382:	xchg   ecx,eax
  407383:	or     al,BYTE PTR [edx]
  407385:	pop    ss
  407386:	pop    eax
  407387:	dec    BYTE PTR [ebx]
  407389:	add    BYTE PTR [eax],al
  40738b:	sub    esi,DWORD PTR [edx+0x7e]
  40738e:	sub    BYTE PTR [eax],al
  407390:	add    BYTE PTR [edx+eax*1],al
  407393:	xchg   ecx,eax
  407394:	pop    ds
  407395:	inc    eax
  407396:	pop    edi
  407397:	sub    eax,0x287e25
  40739c:	add    BYTE PTR [edx+eax*1],al
  40739f:	xchg   ecx,eax
  4073a0:	and    BYTE PTR [edi-0x1],bh
  4073a3:	(bad)  
  4073a4:	call   FWORD PTR [edi+0x1e]
  4073a7:	bound  ecx,QWORD PTR [edx]
  4073a9:	push   es
  4073aa:	jle    0x4073d4
  4073ac:	add    BYTE PTR [eax],al
  4073ae:	add    al,0x2
  4073b0:	pop    ss
  4073b1:	pop    eax
  4073b2:	xchg   ecx,eax
  4073b3:	pusha  
  4073b4:	or     al,BYTE PTR [edx]
  4073b6:	sbb    BYTE PTR [eax-0x2],bl
  4073b9:	or     eax,DWORD PTR [eax]
  4073bb:	add    BYTE PTR [ebx],ch
  4073bd:	inc    ecx
  4073be:	jle    0x4073e8
  4073c0:	add    BYTE PTR [eax],al
  4073c2:	add    al,0x2
  4073c4:	xchg   ecx,eax
  4073c5:	and    BYTE PTR [edi],bh
  4073c7:	(bad)  
  4073c8:	(bad)  
  4073c9:	call   FWORD PTR [edi+0x1f]
  4073cc:	sbb    BYTE PTR [edx+0xa],ah
  4073cf:	push   es
  4073d0:	jle    0x4073fa
  4073d2:	add    BYTE PTR [eax],al
  4073d4:	add    al,0x2
  4073d6:	pop    ss
  4073d7:	pop    eax
  4073d8:	xchg   ecx,eax
  4073d9:	pop    ds
  4073da:	adc    BYTE PTR [edx+0x60],ah
  4073dd:	or     al,BYTE PTR [esi]
  4073df:	jle    0x407409
  4073e1:	add    BYTE PTR [eax],al
  4073e3:	add    al,0x2
  4073e5:	sbb    BYTE PTR [eax-0x6f],bl
  4073e8:	push   ds
  4073e9:	bound  esp,QWORD PTR [eax+0xa]
  4073ec:	push   es
  4073ed:	jle    0x407417
  4073ef:	add    BYTE PTR [eax],al
  4073f1:	add    al,0x2
  4073f3:	sbb    DWORD PTR [eax-0x6f],ebx
  4073f6:	pusha  
  4073f7:	or     al,BYTE PTR [edx]
  4073f9:	sbb    bl,BYTE PTR [eax-0x2]
  4073fc:	or     eax,DWORD PTR [eax]
  4073fe:	add    BYTE PTR [esi],al
  407400:	pop    ss
  407401:	das    
  407402:	push   es
  407403:	jle    0x4073ff
  407405:	add    BYTE PTR [eax],al
  407407:	or     ch,BYTE PTR [edx]
  407409:	sub    bl,bh
  40740b:	add    BYTE PTR [eax],al
  40740d:	or     ah,BYTE PTR ds:0x287e26
  407413:	add    BYTE PTR [edx+eax*1],al
  407416:	push   es
  407417:	outs   dx,DWORD PTR ds:[esi]
  407418:	hlt    
  407419:	add    BYTE PTR [eax],al
  40741b:	or     ah,BYTE PTR ds:0x28070b26
  407421:	cld    
  407422:	add    BYTE PTR [eax],al
  407424:	or     ah,BYTE PTR ds:0x30032a26
  40742a:	add    eax,DWORD PTR [eax]
  40742c:	inc    ecx
  40742d:	add    BYTE PTR [eax],al
  40742f:	add    BYTE PTR [eax],al
  407431:	add    BYTE PTR [eax],al
  407433:	add    BYTE PTR [eax+eax*4],dl
  407436:	sub    al,0x0
  407438:	add    BYTE PTR [esp+edx*1],al
  40743b:	sub    BYTE PTR ds:0x20040000,0xff
  407442:	(bad)  
  407443:	(bad)  
  407444:	jg     0x4073c6
  407446:	sub    al,BYTE PTR [eax]
  407448:	add    BYTE PTR [eax+eiz*1],al
  40744b:	add    BYTE PTR [eax],al
  40744d:	add    BYTE PTR [eax+0x2b80],al
  407453:	add    al,0x16
  407455:	jae    0x407454
  407457:	add    BYTE PTR [eax],al
  407459:	or     al,BYTE PTR [eax+0x400002c]
  40745f:	push   ss
  407460:	jae    0x40745f
  407462:	add    BYTE PTR [eax],al
  407464:	or     al,BYTE PTR [eax+0x400002d]
  40746a:	jae    0x4074a5
  40746c:	add    BYTE PTR [eax],al
  40746e:	or     al,BYTE PTR [eax+0x4000029]
  407474:	sub    al,BYTE PTR [eax]
  407476:	add    BYTE PTR [eax],al
  407478:	add    esi,DWORD PTR [eax]
  40747a:	or     DWORD PTR [eax],eax
  40747c:	pop    es
  40747d:	add    BYTE PTR [eax],al
  40747f:	add    BYTE PTR [eax],al
  407481:	add    BYTE PTR [eax],al
  407483:	add    BYTE PTR [edx],al
  407485:	sub    BYTE PTR [ecx],bh
  407487:	add    BYTE PTR [eax],al
  407489:	or     ch,BYTE PTR [edx]
  40748b:	add    BYTE PTR [ebx],dl
  40748d:	xor    BYTE PTR [eax+eax*1],al
  407490:	add    BYTE PTR ss:[eax],al
  407493:	add    BYTE PTR [eax+eax*1],al
  407496:	add    BYTE PTR [ecx],dl
  407498:	add    ch,BYTE PTR [edi+0x3e]
  40749b:	add    BYTE PTR [eax],al
  40749d:	or     ah,BYTE PTR ds:0x1f060a26
  4074a3:	sub    al,0x6f
  4074a5:	aas    
  4074a6:	add    BYTE PTR [eax],al
  4074a8:	or     ah,BYTE PTR ds:0x16070b26
  4074ae:	xor    bl,BYTE PTR [ecx+ebx*1]
  4074b1:	inc    ebp
  4074b2:	add    DWORD PTR [eax],eax
  4074b4:	add    BYTE PTR [eax],al
  4074b6:	idiv   bh
  4074b8:	(bad)  
  4074b9:	call   DWORD PTR [edi]
  4074bb:	sub    eax,0x6bd006
  4074c0:	add    BYTE PTR [esi],al
  4074c2:	es push es
  4074c4:	push   ss
  4074c5:	pop    es
  4074c6:	outs   dx,DWORD PTR ds:[esi]
  4074c7:	inc    eax
  4074c8:	add    BYTE PTR [eax],al
  4074ca:	or     cl,BYTE PTR [edx]
  4074cc:	push   es
  4074cd:	sub    al,BYTE PTR [eax]
  4074cf:	add    BYTE PTR [ebx],bl
  4074d1:	xor    BYTE PTR [eax+eax*1],al
  4074d4:	mov    esi,0x30000000
  4074d9:	add    BYTE PTR [eax],al
  4074db:	adc    DWORD PTR [edx],eax
  4074dd:	outs   dx,DWORD PTR ds:[esi]
  4074de:	add    BYTE PTR ds:[eax],al
  4074e1:	or     ah,BYTE PTR ds:0x72060a26
  4074e7:	mov    cl,0x0
  4074e9:	add    BYTE PTR [eax+0x6f],dh
  4074ec:	inc    BYTE PTR [eax]
  4074ee:	add    BYTE PTR [edx],cl
  4074f0:	and    eax,0x16070b26
  4074f5:	das    
  4074f6:	and    DWORD PTR [ecx],ebx
  4074f8:	inc    ebp
  4074f9:	add    DWORD PTR [eax],eax
  4074fb:	add    BYTE PTR [eax],al
  4074fd:	idiv   bh
  4074ff:	(bad)  
  407500:	call   DWORD PTR [edi]
  407502:	sub    eax,0x6cd006
  407507:	add    BYTE PTR [esi],al
  407509:	es push es
  40750b:	jb     0x4074de
  40750d:	add    BYTE PTR [eax],al
  40750f:	jo     0x407580
  407511:	inc    BYTE PTR [eax]
  407513:	add    BYTE PTR [edx],cl
  407515:	and    eax,0x16070b26
  40751a:	das    
  40751b:	movhps QWORD PTR [ebp+0x1],xmm0
  40751f:	add    BYTE PTR [eax],al
  407521:	add    dh,dh
  407523:	(bad)  
  407524:	(bad)  
  407525:	call   DWORD PTR [ebx+edx*1]
  407528:	add    eax,0x1f076cde
  40752d:	addps  xmm1,XMMWORD PTR [ebx]
  407530:	push   es
  407531:	pop    es
  407532:	outs   dx,DWORD PTR ds:[esi]
  407533:	inc    DWORD PTR [eax]
  407535:	add    BYTE PTR [edx],cl
  407537:	and    eax,0x2e6e1f26
  40753c:	pop    ds
  40753d:	sbb    al,BYTE PTR [ebp+0x1]
  407540:	add    BYTE PTR [eax],al
  407542:	add    dh,dh
  407544:	(bad)  
  407545:	(bad)  
  407546:	inc    DWORD PTR [esi]
  407548:	pop    es
  407549:	outs   dx,DWORD PTR ds:[esi]
  40754a:	inc    DWORD PTR [eax]
  40754c:	add    BYTE PTR [edx],cl
  40754e:	pop    ds
  40754f:	dec    esi
  407550:	xor    ecx,DWORD PTR [edi]
  407552:	sbb    al,0x45
  407554:	add    DWORD PTR [eax],eax
  407556:	add    BYTE PTR [eax],al
  407558:	idiv   bh
  40755a:	(bad)  
  40755b:	call   DWORD PTR [ebx+edx*1]
  40755e:	add    eax,0x70636de
  407563:	pop    ds
  407564:	adc    BYTE PTR [edi+0x40],ch
  407567:	add    BYTE PTR [eax],al
  407569:	or     ah,BYTE PTR ds:0x20080c26
  40756f:	add    eax,DWORD PTR [edx]
  407571:	add    BYTE PTR [eax],al
  407573:	sub    BYTE PTR [eax],al
  407575:	add    DWORD PTR [eax],eax
  407577:	or     ah,BYTE PTR ds:0x28090d26
  40757d:	add    DWORD PTR [ecx],eax
  40757f:	add    BYTE PTR [edx],cl
  407581:	and    eax,0x11041326
  407586:	add    al,0x28
  407588:	add    al,BYTE PTR [ecx]
  40758a:	add    BYTE PTR [edx],cl
  40758c:	adc    DWORD PTR [ebx+edx*1],eax
  40758f:	add    eax,0xde2605de
  407594:	add    BYTE PTR [edx+ebp*1],dl
  407597:	adc    DWORD PTR ds:0x100002a,eax
  40759d:	adc    BYTE PTR [eax],al
  40759f:	add    BYTE PTR [eax],al
  4075a1:	add    BYTE PTR [eax],al
  4075a3:	add    BYTE PTR [esi+0x690300b6],dh
  4075a9:	add    BYTE PTR [eax],al
  4075ab:	add    DWORD PTR [ebx],ebx
  4075ad:	xor    BYTE PTR [ebx],al
  4075af:	add    BYTE PTR [ecx],ah
  4075b1:	add    BYTE PTR [eax],al
  4075b3:	add    BYTE PTR [ecx],dh
  4075b5:	add    BYTE PTR [eax],al
  4075b7:	adc    DWORD PTR [esi+0x29],edi
  4075ba:	add    BYTE PTR [eax],al
  4075bc:	add    al,0x25
  4075be:	or     ebp,DWORD PTR [eax]
  4075c0:	and    DWORD PTR [eax],eax
  4075c2:	add    BYTE PTR [edx],cl
  4075c4:	pop    ds
  4075c5:	popa   
  4075c6:	push   0x2
  4075c8:	sub    BYTE PTR [edi+0x0],ch
  4075cb:	add    BYTE PTR [esi],al
  4075cd:	or     bl,dh
  4075cf:	pop    es
  4075d0:	pop    es
  4075d1:	sub    BYTE PTR [eax+eax*1],ch
  4075d4:	add    BYTE PTR [edx],cl
  4075d6:	fadd   QWORD PTR [esi]
  4075d8:	sub    al,BYTE PTR [eax]
  4075da:	add    BYTE PTR [eax],al
  4075dc:	add    DWORD PTR [eax],edx
  4075de:	add    BYTE PTR [eax],al
  4075e0:	add    al,BYTE PTR [eax]
  4075e2:	or     al,0x0
  4075e4:	or     al,0x18
  4075e6:	add    BYTE PTR [edi],al
  4075e8:	add    BYTE PTR [eax],al
  4075ea:	add    BYTE PTR [eax],al
  4075ec:	sbb    esi,DWORD PTR [eax]
  4075ee:	add    eax,DWORD PTR [eax]
  4075f0:	sbb    al,0x0
  4075f2:	add    BYTE PTR [eax],al
  4075f4:	xor    al,BYTE PTR [eax]
  4075f6:	add    BYTE PTR [ecx],dl
  4075f8:	add    ebp,DWORD PTR [eax]
  4075fa:	ins    DWORD PTR es:[edi],dx
  4075fb:	add    BYTE PTR [eax],al
  4075fd:	push   es
  4075fe:	and    eax,0xfde0a26
  407603:	es pop ds
  407605:	popa   
  407606:	push   0x3
  407608:	sub    BYTE PTR [edi+0x0],ch
  40760b:	add    BYTE PTR [esi],al
  40760d:	and    eax,0xde0a26
  407612:	push   es
  407613:	sub    al,BYTE PTR [ecx]
  407615:	adc    BYTE PTR [eax],al
  407617:	add    BYTE PTR [eax],al
  407619:	add    BYTE PTR [eax],al
  40761b:	add    BYTE PTR [ebx],cl
  40761d:	or     eax,DWORD PTR [eax]
  40761f:	setnp  BYTE PTR [eax]
  407622:	add    BYTE PTR [ecx],al
  407624:	sbb    esi,DWORD PTR [eax]
  407626:	pop    es
  407627:	add    BYTE PTR [eax],bl
  407629:	add    eax,DWORD PTR [eax]
  40762b:	add    BYTE PTR [ebx],dh
  40762d:	add    BYTE PTR [eax],al
  40762f:	adc    DWORD PTR [ebx],eax
  407631:	or     dl,BYTE PTR [ebx+ecx*1]
  407634:	add    ebp,DWORD PTR [edi+0x3]
  407637:	add    DWORD PTR [eax],eax
  407639:	or     dl,cl
  40763b:	or     al,0x8
  40763d:	ror    WORD PTR [edi+edx*1],1
  407641:	or     eax,0x6f030d2b
  407646:	add    eax,DWORD PTR [ecx]
  407648:	add    BYTE PTR [edx],cl
  40764a:	and    eax,0x17092626
  40764f:	pop    eax
  407650:	or     eax,0xef321909
  407655:	sbb    DWORD PTR [ebp+0x1],eax
  407658:	add    BYTE PTR [eax],al
  40765a:	add    dh,dh
  40765c:	(bad)  
  40765d:	(bad)  
  40765e:	call   DWORD PTR [edi]
  407660:	sub    eax,0x6fd006
  407665:	add    BYTE PTR [esi],al
  407667:	or     BYTE PTR es:[eax],bl
  40766a:	pop    edi
  40766b:	cmp    edi,edx
  40766d:	add    DWORD PTR [eax],eax
  40766f:	add    BYTE PTR [eax],bl
  407671:	inc    ebp
  407672:	add    DWORD PTR [eax],eax
  407674:	add    BYTE PTR [eax],al
  407676:	idiv   bh
  407678:	(bad)  
  407679:	push   DWORD PTR [ebx+0x4]
  40767c:	add    DWORD PTR [eax],eax
  40767e:	or     dl,BYTE PTR [ebx]
  407680:	add    al,0x1e
  407682:	lea    ebx,[esi]
  407684:	add    BYTE PTR [eax],al
  407686:	add    DWORD PTR [ebx],edx
  407688:	add    eax,0x16051103
  40768d:	push   ds
  40768e:	outs   dx,DWORD PTR ds:[esi]
  40768f:	add    eax,0x260a0001
  407694:	adc    DWORD PTR [ecx+edx*1],eax
  407697:	add    eax,0x1066f
  40769c:	or     bl,BYTE PTR [esi]
  40769e:	lea    ebx,[esi]
  4076a0:	add    BYTE PTR [eax],al
  4076a2:	add    DWORD PTR [ebx],edx
  4076a4:	push   es
  4076a5:	add    edx,DWORD PTR [ecx]
  4076a7:	push   es
  4076a8:	push   ss
  4076a9:	push   ds
  4076aa:	outs   dx,DWORD PTR ds:[esi]
  4076ab:	add    eax,0x250a0001
  4076b0:	es es pop ss
  4076b3:	adc    eax,DWORD PTR [edi]
  4076b5:	adc    DWORD PTR [esi],eax
  4076b7:	adc    edx,DWORD PTR ds:0x2b161316
  4076bd:	push   ss
  4076be:	adc    DWORD PTR ds:0x13911611,edx
  4076c4:	or     BYTE PTR [ecx],dl
  4076c6:	or     BYTE PTR [eax*1+0x2b071316],ch
  4076cd:	sbb    BYTE PTR [ecx],dl
  4076cf:	push   ss
  4076d0:	pop    ss
  4076d1:	pop    eax
  4076d2:	adc    edx,DWORD PTR [esi]
  4076d4:	adc    DWORD PTR [esi],edx
  4076d6:	adc    DWORD PTR ds:0xe232698e,edx
  4076dc:	sbb    al,BYTE PTR [ebp+0x1]
  4076df:	add    BYTE PTR [eax],al
  4076e1:	add    dh,dh
  4076e3:	(bad)  
  4076e4:	(bad)  
  4076e5:	call   DWORD PTR [ecx]
  4076e7:	pop    es
  4076e8:	sub    al,0xe
  4076ea:	sub    BYTE PTR [edi],dh
  4076ec:	add    BYTE PTR [eax],al
  4076ee:	or     ah,BYTE PTR ds:0x6c2826
  4076f4:	add    BYTE PTR [esi],al
  4076f6:	adc    eax,DWORD PTR [esi]
  4076f8:	adc    DWORD PTR [ecx+edx*1],eax
  4076fb:	push   es
  4076fc:	outs   dx,DWORD PTR ds:[esi]
  4076fd:	pop    es
  4076fe:	add    DWORD PTR [eax],eax
  407700:	or     bh,BYTE PTR [esi+0x2c]
  407703:	add    BYTE PTR [eax],al
  407705:	add    al,0x2d
  407707:	inc    esp
  407708:	sbb    al,0x45
  40770a:	add    DWORD PTR [eax],eax
  40770c:	add    BYTE PTR [eax],al
  40770e:	idiv   bh
  407710:	(bad)  
  407711:	(bad)  
  407712:	jle    0x40773e
  407714:	add    BYTE PTR [eax],al
  407716:	add    al,0x20
  407718:	(bad)  
  407719:	(bad)  
  40771a:	(bad)  
  40771b:	jg     0x407750
  40771d:	pop    ds
  40771e:	sbb    al,BYTE PTR [ebp+0x1]
  407721:	add    BYTE PTR [eax],al
  407723:	add    dh,dh
  407725:	(bad)  
  407726:	(bad)  
  407727:	(bad)  
  407728:	jle    0x407756
  40772a:	add    BYTE PTR [eax],al
  40772c:	add    al,0x3
  40772e:	outs   dx,DWORD PTR ds:[esi]
  40772f:	or     BYTE PTR [ecx],al
  407731:	add    BYTE PTR [edx],cl
  407733:	and    eax,0x96f6926
  407738:	add    DWORD PTR [eax],eax
  40773a:	or     ch,BYTE PTR [ebx]
  40773c:	movd   DWORD PTR [eax+eax*1],mm5
  407740:	add    BYTE PTR [esi+edi*2],al
  407743:	sub    al,BYTE PTR [eax]
  407745:	add    BYTE PTR [edi+ebp*2],al
  407748:	or     DWORD PTR [ecx],eax
  40774a:	add    BYTE PTR [edx],cl
  40774c:	jle    0x40777a
  40774e:	add    BYTE PTR [eax],al
  407750:	add    al,0x16
  407752:	push   0x6f
  407754:	or     al,BYTE PTR [ecx]
  407756:	add    BYTE PTR [edx],cl
  407758:	adc    DWORD PTR [edi+ebp*2],eax
  40775b:	or     eax,DWORD PTR [ecx]
  40775d:	add    BYTE PTR [edx],cl
  40775f:	and    eax,0x11091326
  407764:	or     DWORD PTR [edi+0xc],ebp
  407767:	add    DWORD PTR [eax],eax
  407769:	or     ah,BYTE PTR ds:0x110a1326
  40776f:	or     DWORD PTR [edi+0xd],ebp
  407772:	add    DWORD PTR [eax],eax
  407774:	or     ah,BYTE PTR ds:0x9112626
  40777a:	outs   dx,DWORD PTR ds:[esi]
  40777b:	or     eax,0x250a0001
  407780:	lea    ebx,es:[esi]
  407783:	add    BYTE PTR [eax],al
  407785:	add    DWORD PTR [ebx],edx
  407787:	or     edx,DWORD PTR [ecx]
  407789:	or     DWORD PTR [edi+0xc],ebp
  40778c:	add    DWORD PTR [eax],eax
  40778e:	or     ah,BYTE PTR ds:0x1e8d26
  407794:	add    BYTE PTR [ecx],al
  407796:	adc    ecx,DWORD PTR [ebx+eax*1]
  407799:	outs   dx,DWORD PTR ds:[esi]
  40779a:	push   cs
  40779b:	add    DWORD PTR [eax],eax
  40779d:	or     ah,BYTE PTR ds:0xd136926
  4077a3:	sub    esi,DWORD PTR ds:0x160c1103
  4077a9:	adc    DWORD PTR [edx],ecx
  4077ab:	outs   dx,DWORD PTR ds:[esi]
  4077ac:	add    eax,0x250a0001
  4077b1:	es adc DWORD PTR es:[ecx],ecx
  4077b5:	adc    DWORD PTR [esi+edx*1],ecx
  4077b8:	adc    DWORD PTR [edx],ecx
  4077ba:	adc    DWORD PTR [ebx],ecx
  4077bc:	push   ss
  4077bd:	outs   dx,DWORD PTR ds:[esi]
  4077be:	sgdtd  [eax]
  4077c1:	or     dl,BYTE PTR [ebx]
  4077c3:	push   cs
  4077c4:	jle    0x4077f2
  4077c6:	add    BYTE PTR [eax],al
  4077c8:	add    al,0x11
  4077ca:	or     edx,DWORD PTR [esi]
  4077cc:	adc    DWORD PTR [esi],ecx
  4077ce:	outs   dx,DWORD PTR ds:[esi]
  4077cf:	adc    BYTE PTR [ecx],al
  4077d1:	add    BYTE PTR [edx],cl
  4077d3:	adc    DWORD PTR ds:0x13580a11,ecx
  4077d9:	or     eax,0xa110d11
  4077de:	pop    eax
  4077df:	push   0x3
  4077e1:	outs   dx,DWORD PTR ds:[esi]
  4077e2:	or     BYTE PTR [ecx],al
  4077e4:	add    BYTE PTR [edx],cl
  4077e6:	xor    bh,BYTE PTR [ebp+0x14519]
  4077ec:	add    BYTE PTR [eax],al
  4077ee:	idiv   bh
  4077f0:	(bad)  
  4077f1:	inc    DWORD PTR [ebx]
  4077f3:	adc    DWORD PTR [esi+edx*1],ecx
  4077f6:	add    ebp,DWORD PTR [edi+0x8]
  4077f9:	add    DWORD PTR [eax],eax
  4077fb:	or     dl,BYTE PTR [ecx]
  4077fd:	or     eax,0x6f69596a
  407802:	add    eax,0x250a0001
  407807:	es adc DWORD PTR es:[ecx],ecx
  40780b:	adc    DWORD PTR [esi+edx*1],ecx
  40780e:	add    ebp,DWORD PTR [edi+0x8]
  407811:	add    DWORD PTR [eax],eax
  407813:	or     dl,BYTE PTR [ecx]
  407815:	or     eax,0x6f69596a
  40781a:	adc    DWORD PTR [ecx],eax
  40781c:	add    BYTE PTR [edx],cl
  40781e:	and    eax,0x7e0f1326
  407823:	sub    al,0x0
  407825:	add    BYTE PTR [ecx+edx*1],al
  407828:	movhps xmm2,QWORD PTR [ecx]
  40782b:	jle    0x150e79a
  407831:	add    BYTE PTR [edx],cl
  407833:	jle    0x407861
  407835:	add    BYTE PTR [eax],al
  407837:	add    al,0xa
  407839:	push   es
  40783a:	push   ss
  40783b:	push   0x6f
  40783d:	or     al,BYTE PTR [ecx]
  40783f:	add    BYTE PTR [edx],cl
  407841:	jle    0x40786f
  407843:	add    BYTE PTR [eax],al
  407845:	add    al,0xb
  407847:	or     BYTE PTR [esi],bl
  407849:	pop    edi
  40784a:	cmp    DWORD PTR [ecx+0x17000000],edi
  407850:	inc    ebp
  407851:	add    DWORD PTR [eax],eax
  407853:	add    BYTE PTR [eax],al
  407855:	idiv   bh
  407857:	(bad)  
  407858:	(bad)  
  407859:	jle    0x407888
  40785b:	add    BYTE PTR [eax],al
  40785d:	add    al,0x2d
  40785f:	cmp    bl,BYTE PTR ds:0x145
  407865:	add    dh,dh
  407867:	(bad)  
  407868:	(bad)  
  407869:	(bad)  
  40786a:	jle    0x407897
  40786c:	add    BYTE PTR [eax],al
  40786e:	add    al,0x20
  407870:	add    BYTE PTR [eax],al
  407872:	add    BYTE PTR [eax+0x2d7e1533],al
  407878:	add    BYTE PTR [eax],al
  40787a:	add    al,0x6
  40787c:	outs   dx,DWORD PTR ds:[esi]
  40787d:	or     BYTE PTR [ecx],al
  40787f:	add    BYTE PTR [edx],cl
  407881:	imul   ebx,DWORD PTR [eax],0x1096f5a
  407887:	add    BYTE PTR [edx],cl
  407889:	sub    ecx,DWORD PTR [edi]
  40788b:	jle    0x4078ba
  40788d:	add    BYTE PTR [eax],al
  40788f:	add    al,0x7e
  407891:	sub    eax,DWORD PTR [eax]
  407893:	add    BYTE PTR [edi+ebp*2],al
  407896:	or     DWORD PTR [ecx],eax
  407898:	add    BYTE PTR [edx],cl
  40789a:	jle    0x4078c9
  40789c:	add    BYTE PTR [eax],al
  40789e:	add    al,0x16
  4078a0:	push   0x6f
  4078a2:	or     al,BYTE PTR [ecx]
  4078a4:	add    BYTE PTR [edx],cl
  4078a6:	push   es
  4078a7:	push   ss
  4078a8:	jae    0x4078bc
  4078aa:	add    DWORD PTR [eax],eax
  4078ac:	or     dl,BYTE PTR [ebx]
  4078ae:	adc    BYTE PTR [eax],ah
  4078b0:	call   0x134078b8
  4078b5:	adc    DWORD PTR [ecx],edx
  4078b7:	adc    DWORD PTR [ebp+0x100001e],ecx
  4078bd:	adc    edx,DWORD PTR [ebx]
  4078bf:	adc    DWORD PTR [eax],edx
  4078c1:	adc    DWORD PTR [ebx],edx
  4078c3:	push   ss
  4078c4:	adc    DWORD PTR [ecx],edx
  4078c6:	outs   dx,DWORD PTR ds:[esi]
  4078c7:	add    eax,0x250a0001
  4078cc:	adc    edx,DWORD PTR es:[edx]
  4078cf:	adc    DWORD PTR [edx],edx
  4078d1:	push   ss
  4078d2:	xor    DWORD PTR [ecx],ebx
  4078d4:	sbb    BYTE PTR [ebp+0x1],al
  4078d7:	add    BYTE PTR [eax],al
  4078d9:	add    dh,dh
  4078db:	(bad)  
  4078dc:	(bad)  
  4078dd:	(bad)  
  4078de:	jle    0x40790d
  4078e0:	add    BYTE PTR [eax],al
  4078e2:	add    al,0x11
  4078e4:	adc    edx,DWORD PTR [esi]
  4078e6:	adc    DWORD PTR [edx],edx
  4078e8:	outs   dx,DWORD PTR ds:[esi]
  4078e9:	adc    BYTE PTR [ecx],al
  4078eb:	add    BYTE PTR [edx],cl
  4078ed:	adc    DWORD PTR [edx],edx
  4078ef:	adc    DWORD PTR [ecx],edx
  4078f1:	das    
  4078f2:	int3   
  4078f3:	sbb    eax,DWORD PTR [ebp+0x1]
  4078f6:	add    BYTE PTR [eax],al
  4078f8:	add    dh,dh
  4078fa:	(bad)  
  4078fb:	(bad)  
  4078fc:	(bad)  
  4078fd:	jle    0x40792c
  4078ff:	add    BYTE PTR [eax],al
  407901:	add    al,0xb
  407903:	fiadd  WORD PTR [ebx]
  407905:	fiadd  WORD PTR es:[eax]
  407908:	pop    es
  407909:	sub    al,0x13
  40790b:	sbb    eax,DWORD PTR [ebp+0x1]
  40790e:	add    BYTE PTR [eax],al
  407910:	add    dh,dh
  407912:	(bad)  
  407913:	(bad)  
  407914:	inc    DWORD PTR [edi]
  407916:	outs   dx,DWORD PTR ds:[esi]
  407917:	adc    eax,DWORD PTR [ecx]
  407919:	add    BYTE PTR [edx],cl
  40791b:	and    eax,0x6f032a26
  407920:	or     BYTE PTR [ecx],al
  407922:	add    BYTE PTR [edx],cl
  407924:	add    ebp,DWORD PTR [edi+0xe]
  407927:	add    DWORD PTR [eax],eax
  407929:	or     ah,BYTE PTR ds:0x8dd45926
  40792f:	push   ds
  407930:	add    BYTE PTR [eax],al
  407932:	add    DWORD PTR [ebx],edx
  407934:	adc    al,0x3
  407936:	adc    DWORD PTR [esi+edx*1],edx
  407939:	adc    DWORD PTR [esi+ecx*4],edx
  40793c:	imul   ebp,DWORD PTR [edi+0x5],0x250a0001
  407943:	es adc DWORD PTR es:[edx+ebp*1],edx
  407948:	add    DWORD PTR [eax],edx
  40794a:	add    BYTE PTR [eax],al
  40794c:	add    BYTE PTR [eax],al
  40794e:	sub    DWORD PTR [edx],eax
  407950:	lods   al,BYTE PTR ds:[esi]
  407951:	aad    0x2
  407953:	add    ecx,DWORD PTR [ebx+0x0]
  407956:	add    BYTE PTR [ecx],al
  407958:	sbb    esi,DWORD PTR [eax]
  40795a:	add    eax,0x10700
  40795f:	add    BYTE PTR [eax+eax*1],dh
  407962:	add    BYTE PTR [ecx],dl
  407964:	jle    0x407995
  407966:	add    BYTE PTR [eax],al
  407968:	add    al,0x3a
  40796a:	retf   0x0
  40796d:	add    BYTE PTR [ecx],bl
  40796f:	inc    ebp
  407970:	add    DWORD PTR [eax],eax
  407972:	add    BYTE PTR [eax],al
  407974:	idiv   bh
  407976:	(bad)  
  407977:	call   DWORD PTR [edi]
  407979:	sub    eax,0x70d006
  40797e:	add    BYTE PTR [esi],al
  407980:	es jb  0x407974
  407983:	add    BYTE PTR [eax],al
  407985:	jo     0x407991
  407987:	push   es
  407988:	sub    bl,dh
  40798a:	add    BYTE PTR [eax],al
  40798c:	or     ah,BYTE PTR ds:0xe7280b26
  407992:	add    BYTE PTR [eax],al
  407994:	or     ah,BYTE PTR ds:0x7160726
  40799a:	mov    gs,WORD PTR [ecx+0x6f]
  40799d:	hlt    
  40799e:	add    BYTE PTR [eax],al
  4079a0:	or     ah,BYTE PTR ds:0x37280a26
  4079a6:	add    BYTE PTR [eax],al
  4079a8:	or     ah,BYTE PTR ds:0x3c6f0626
  4079ae:	add    BYTE PTR [eax],al
  4079b0:	or     cl,BYTE PTR [edi+ebx*1]
  4079b3:	popa   
  4079b4:	push   0x8
  4079b6:	sub    BYTE PTR [esi+0x0],ch
  4079b9:	add    BYTE PTR [esi],al
  4079bb:	and    eax,0x2f8026
  4079c0:	add    BYTE PTR [ebx+esi*2],al
  4079c3:	adc    al,0x1
  4079c5:	add    BYTE PTR [edx],cl
  4079c7:	xor    BYTE PTR [eax],0x0
  4079ca:	add    BYTE PTR [esi+edi*2],al
  4079cd:	das    
  4079ce:	add    BYTE PTR [eax],al
  4079d0:	add    al,0x16
  4079d2:	jae    0x4079e9
  4079d4:	add    DWORD PTR [eax],eax
  4079d6:	or     dh,BYTE PTR [ebx+0x16]
  4079d9:	add    DWORD PTR [eax],eax
  4079db:	or     cl,BYTE PTR ds:0x1176f09
  4079e1:	add    BYTE PTR [edx],cl
  4079e3:	and    eax,0x16041326
  4079e8:	adc    eax,DWORD PTR ds:0x6f09262b
  4079ee:	pop    ss
  4079ef:	add    DWORD PTR [eax],eax
  4079f1:	or     ah,BYTE PTR ds:0x9061326
  4079f7:	outs   dx,DWORD PTR ds:[esi]
  4079f8:	pop    ss
  4079f9:	add    DWORD PTR [eax],eax
  4079fb:	or     dl,BYTE PTR [ebx]
  4079fd:	pop    es
  4079fe:	jle    0x407a30
  407a00:	add    BYTE PTR [eax],al
  407a02:	add    al,0x11
  407a04:	push   es
  407a05:	adc    DWORD PTR [edi],eax
  407a07:	outs   dx,DWORD PTR ds:[esi]
  407a08:	sbb    BYTE PTR [ecx],al
  407a0a:	add    BYTE PTR [edx],cl
  407a0c:	adc    DWORD PTR ds:0x5135817,eax
  407a12:	adc    DWORD PTR ds:0xd4320411,eax
  407a18:	sbb    al,0x45
  407a1a:	add    DWORD PTR [eax],eax
  407a1c:	add    BYTE PTR [eax],al
  407a1e:	idiv   bh
  407a20:	(bad)  
  407a21:	(bad)  
  407a22:	ficom  WORD PTR [ecx+ecx*1]
  407a25:	sub    al,0x10
  407a27:	sbb    al,0x45
  407a29:	add    DWORD PTR [eax],eax
  407a2b:	add    BYTE PTR [eax],al
  407a2d:	idiv   bh
  407a2f:	(bad)  
  407a30:	dec    DWORD PTR [ecx]
  407a32:	outs   dx,DWORD PTR ds:[esi]
  407a33:	add    BYTE PTR gs:[eax],al
  407a36:	or     bl,ah
  407a38:	shl    BYTE PTR [eax+eax*1+0x0],1
  407a3c:	add    DWORD PTR [eax],ebp
  407a3e:	push   eax
  407a3f:	add    BYTE PTR [eax],al
  407a41:	or     ch,BYTE PTR [esi+eiz*1]
  407a44:	sbb    al,0x45
  407a46:	add    DWORD PTR [eax],eax
  407a48:	add    BYTE PTR [eax],al
  407a4a:	idiv   bh
  407a4c:	(bad)  
  407a4d:	jmp    FWORD PTR [eax]
  407a4f:	aaa    
  407a50:	add    BYTE PTR [eax],al
  407a52:	or     ah,BYTE PTR ds:0x1196f26
  407a58:	add    BYTE PTR [edx],cl
  407a5a:	and    eax,0x6f9a1626
  407a5f:	sbb    al,BYTE PTR [ecx]
  407a61:	add    BYTE PTR [edx],cl
  407a63:	and    eax,0x318026
  407a68:	add    BYTE PTR [edx+ebp*1],al
  407a6b:	add    BYTE PTR [ecx],al
  407a6d:	adc    BYTE PTR [eax],al
  407a6f:	add    BYTE PTR [edx],al
  407a71:	add    BYTE PTR [ecx+0x0],bh
  407a74:	inc    edi
  407a75:	rol    BYTE PTR [eax],0x14
  407a78:	add    BYTE PTR [eax],al
  407a7a:	add    BYTE PTR [eax],al
  407a7c:	add    esi,DWORD PTR [eax]
  407a7e:	or     DWORD PTR [eax],eax
  407a80:	pop    es
  407a81:	add    BYTE PTR [eax],al
  407a83:	add    BYTE PTR [eax],al
  407a85:	add    BYTE PTR [eax],al
  407a87:	add    BYTE PTR [edx],al
  407a89:	sub    BYTE PTR [ecx],bh
  407a8b:	add    BYTE PTR [eax],al
  407a8d:	or     ch,BYTE PTR [edx]
  407a8f:	add    BYTE PTR [ebx],bl
  407a91:	xor    BYTE PTR [edi],al
  407a93:	add    BYTE PTR [edi+0x1],cl
  407a96:	add    BYTE PTR [eax],al
  407a98:	xor    eax,0x7e110000
  407a9d:	xor    DWORD PTR [eax],eax
  407a9f:	add    BYTE PTR [ebx+edx*1],al
  407aa2:	or     dl,BYTE PTR [edx]
  407aa4:	or     al,BYTE PTR [edx]
  407aa6:	sub    BYTE PTR [ebx],bl
  407aa8:	add    DWORD PTR [eax],eax
  407aaa:	or     ah,BYTE PTR ds:0x502826
  407ab0:	add    BYTE PTR [edx],cl
  407ab2:	or     bh,BYTE PTR [esi+0x31]
  407ab5:	add    BYTE PTR [eax],al
  407ab7:	add    al,0x13
  407ab9:	or     edx,DWORD PTR [edx]
  407abb:	or     eax,DWORD PTR [ebx]
  407abd:	sub    BYTE PTR [ecx+eax*1],bl
  407ac0:	add    BYTE PTR [edx],cl
  407ac2:	jle    0x407af5
  407ac4:	add    BYTE PTR [eax],al
  407ac6:	add    al,0x13
  407ac8:	or     al,0x12
  407aca:	or     al,0x4
  407acc:	sub    BYTE PTR [ebx],bl
  407ace:	add    DWORD PTR [eax],eax
  407ad0:	or     ah,BYTE PTR ds:0x11d2826
  407ad6:	add    BYTE PTR [edx],cl
  407ad8:	and    eax,0x74080c26
  407add:	add    BYTE PTR [eax],0x0
  407ae0:	add    DWORD PTR [ebx],ecx
  407ae2:	fiadd  WORD PTR [ebx]
  407ae4:	es (bad) 
  407ae6:	sbb    al,BYTE PTR [esi]
  407ae8:	and    BYTE PTR [eax],ch
  407aea:	add    al,0x0
  407aec:	add    BYTE PTR [edi+0x1e],ch
  407aef:	add    DWORD PTR [eax],eax
  407af1:	or     ah,BYTE PTR ds:0x160d1326
  407af7:	adc    ecx,DWORD PTR [esi]
  407af9:	cmp    bh,dl
  407afb:	add    BYTE PTR [eax],al
  407afd:	add    BYTE PTR [ecx],dl
  407aff:	or     eax,0xd9a0e11
  407b04:	adc    al,0x13
  407b06:	add    eax,0x11f6f07
  407b0b:	add    BYTE PTR [edx],cl
  407b0d:	and    eax,0x7061326
  407b12:	sub    BYTE PTR [edi+0x0],dh
  407b15:	add    BYTE PTR [esi],al
  407b17:	and    eax,0x7071326
  407b1c:	outs   dx,DWORD PTR ds:[esi]
  407b1d:	and    BYTE PTR [ecx],al
  407b1f:	add    BYTE PTR [edx],cl
  407b21:	and    eax,0x1216f26
  407b26:	add    BYTE PTR [edx],cl
  407b28:	and    eax,0x11b7226
  407b2d:	add    BYTE PTR [eax+0x7],dh
  407b30:	outs   dx,DWORD PTR ds:[esi]
  407b31:	and    al,BYTE PTR [ecx]
  407b33:	add    BYTE PTR [edx],cl
  407b35:	and    eax,0x11f7226
  407b3a:	add    BYTE PTR [eax+0x28],dh
  407b3d:	and    eax,DWORD PTR [ecx]
  407b3f:	add    BYTE PTR [edx],cl
  407b41:	and    eax,0x74750726
  407b46:	add    BYTE PTR [eax],al
  407b48:	add    DWORD PTR ds:0x1451b22,ebp
  407b4e:	add    BYTE PTR [eax],al
  407b50:	add    dh,dh
  407b52:	(bad)  
  407b53:	(bad)  
  407b54:	call   DWORD PTR [edi]
  407b56:	sub    eax,0x72d006
  407b5b:	add    BYTE PTR [esi],al
  407b5d:	es pop es
  407b5f:	je     0x407ae3
  407b61:	add    BYTE PTR [eax],al
  407b63:	add    DWORD PTR [edi+0x24],ebp
  407b66:	add    DWORD PTR [eax],eax
  407b68:	or     ah,BYTE PTR ds:0x14012b26
  407b6e:	adc    DWORD PTR [edi],eax
  407b70:	pop    es
  407b71:	outs   dx,DWORD PTR ds:[esi]
  407b72:	and    BYTE PTR [ecx],al
  407b74:	add    BYTE PTR [edx],cl
  407b76:	and    eax,0x25731726
  407b7b:	add    DWORD PTR [eax],eax
  407b7d:	or     dl,BYTE PTR [ebx]
  407b7f:	add    eax,0x307e
  407b84:	add    al,0x2
  407b86:	adc    cl,BYTE PTR [eax]
  407b88:	outs   dx,DWORD PTR ds:[esi]
  407b89:	add    DWORD PTR es:[eax],eax
  407b8c:	or     ah,BYTE PTR ds:0x5112626
  407b92:	outs   dx,DWORD PTR ds:[esi]
  407b93:	daa    
  407b94:	add    DWORD PTR [eax],eax
  407b96:	or     dl,BYTE PTR [ebx]
  407b98:	or     DWORD PTR [ecx],edx
  407b9a:	push   es
  407b9b:	adc    DWORD PTR [ecx],ecx
  407b9d:	sub    BYTE PTR [eax+eax*1+0x0],dh
  407ba1:	push   es
  407ba2:	adc    cl,BYTE PTR [eax]
  407ba4:	pop    es
  407ba5:	adc    DWORD PTR [ecx],ecx
  407ba7:	sub    BYTE PTR [ebx+0x0],dh
  407baa:	add    BYTE PTR [esi],al
  407bac:	adc    cl,BYTE PTR [eax]
  407bae:	adc    DWORD PTR [ecx],ecx
  407bb0:	sub    BYTE PTR [ebp+0x0],dh
  407bb3:	add    BYTE PTR [esi],al
  407bb5:	adc    DWORD PTR ds:0x1286f06,eax
  407bbb:	add    BYTE PTR [edx],cl
  407bbd:	and    eax,0x9041326
  407bc2:	adc    al,0x11
  407bc4:	add    al,0x6f
  407bc6:	sub    DWORD PTR [ecx],eax
  407bc8:	add    BYTE PTR [edx],cl
  407bca:	fiadd  WORD PTR [ebx]
  407bcc:	fiadd  WORD PTR es:[eax]
  407bcf:	adc    DWORD PTR [esi],ecx
  407bd1:	pop    ss
  407bd2:	pop    eax
  407bd3:	adc    ecx,DWORD PTR [esi]
  407bd5:	adc    DWORD PTR [esi],ecx
  407bd7:	adc    DWORD PTR ds:0x1e3f698e,ecx
  407bdd:	(bad)  
  407bde:	(bad)  
  407bdf:	call   DWORD PTR [edi]
  407be1:	inc    ebp
  407be2:	add    DWORD PTR [eax],eax
  407be4:	add    BYTE PTR [eax],al
  407be6:	idiv   bh
  407be8:	(bad)  
  407be9:	jmp    FWORD PTR [edx]
  407beb:	add    BYTE PTR [ecx],al
  407bed:	sbb    al,0x0
  407bef:	add    BYTE PTR [eax],al
  407bf1:	add    BYTE PTR [eax],al
  407bf3:	add    BYTE PTR [eax+0x48],cl
  407bf6:	add    BYTE PTR [ebx],al
  407bf8:	dec    ebx
  407bf9:	add    BYTE PTR [eax],al
  407bfb:	add    DWORD PTR [eax],eax
  407bfd:	add    BYTE PTR [eax+0x0],ch
  407c00:	enter  0x130,0x3
  407c04:	dec    ebx
  407c05:	add    BYTE PTR [eax],al
  407c07:	add    DWORD PTR [ebx],edx
  407c09:	xor    BYTE PTR [esi],al
  407c0b:	add    BYTE PTR [edx+0x0],bl
  407c0e:	add    BYTE PTR [eax],al
  407c10:	add    BYTE PTR ss:[eax],al
  407c13:	adc    DWORD PTR [esi+0x2f],edi
  407c16:	add    BYTE PTR [eax],al
  407c18:	add    al,0x2
  407c1a:	dec    edx
  407c1b:	sub    ch,dh
  407c1d:	add    BYTE PTR [eax],al
  407c1f:	or     cl,BYTE PTR [edx]
  407c21:	add    ah,BYTE PTR ds:0x54581a4a
  407c27:	jle    0x407c58
  407c29:	add    BYTE PTR [eax],al
  407c2b:	add    al,0x2
  407c2d:	dec    edx
  407c2e:	sub    ch,dh
  407c30:	add    BYTE PTR [eax],al
  407c32:	or     cl,BYTE PTR [ebx]
  407c34:	add    ah,BYTE PTR ds:0x54581a4a
  407c3a:	pop    es
  407c3b:	lea    ebx,[esi]
  407c3d:	add    BYTE PTR [eax],al
  407c3f:	add    DWORD PTR [esi+edi*2],ecx
  407c42:	das    
  407c43:	add    BYTE PTR [eax],al
  407c45:	add    al,0x2
  407c47:	dec    edx
  407c48:	or     BYTE PTR [esi],dl
  407c4a:	pop    es
  407c4b:	sub    cl,bh
  407c4d:	add    BYTE PTR [eax],al
  407c4f:	or     al,BYTE PTR [ebx]
  407c51:	or     BYTE PTR [ebx+esi*2],al
  407c54:	jns    0x407c56
  407c56:	add    BYTE PTR [esi],al
  407c58:	or     eax,0x7a6f09
  407c5d:	add    BYTE PTR [esi],al
  407c5f:	add    al,0x8
  407c61:	push   es
  407c62:	outs   dx,DWORD PTR ds:[esi]
  407c63:	sub    al,BYTE PTR [ecx]
  407c65:	add    BYTE PTR [edx],cl
  407c67:	add    ah,BYTE PTR ds:0x5458074a
  407c6d:	sub    al,BYTE PTR [eax]
  407c6f:	add    BYTE PTR [ebx],bl
  407c71:	xor    BYTE PTR [eax+eax*1],al
  407c74:	pop    edx
  407c75:	add    BYTE PTR [eax],al
  407c77:	add    BYTE PTR [edi],dh
  407c79:	add    BYTE PTR [eax],al
  407c7b:	adc    DWORD PTR [eax],ebp
  407c7d:	sub    eax,DWORD PTR [ecx]
  407c7f:	add    BYTE PTR [edx],cl
  407c81:	and    eax,0x6f020a26
  407c86:	sub    al,0x1
  407c88:	add    BYTE PTR [edx],cl
  407c8a:	and    eax,0x12d6f26
  407c8f:	add    BYTE PTR [edx],cl
  407c91:	and    eax,0x1b2b0c26
  407c96:	or     BYTE PTR [edi+0x2e],ch
  407c99:	add    DWORD PTR [eax],eax
  407c9b:	or     cl,BYTE PTR [ebx]
  407c9d:	push   es
  407c9e:	pop    es
  407c9f:	outs   dx,DWORD PTR ds:[esi]
  407ca0:	das    
  407ca1:	add    DWORD PTR [eax],eax
  407ca3:	or     ah,BYTE PTR ds:0x306f0726
  407ca9:	add    DWORD PTR [eax],eax
  407cab:	or     ch,BYTE PTR [edi+0x31]
  407cae:	add    DWORD PTR [eax],eax
  407cb0:	or     cl,BYTE PTR [eax]
  407cb2:	outs   dx,DWORD PTR ds:[esi]
  407cb3:	xor    al,BYTE PTR [ecx]
  407cb5:	add    BYTE PTR [edx],cl
  407cb7:	and    eax,0xdedb2d26
  407cbc:	or     cl,BYTE PTR [eax]
  407cbe:	sub    al,0x6
  407cc0:	or     BYTE PTR [edi+0x65],ch
  407cc3:	add    BYTE PTR [eax],al
  407cc5:	or     bl,ah
  407cc7:	add    eax,DWORD PTR [esi]
  407cc9:	outs   dx,DWORD PTR ds:[esi]
  407cca:	xor    eax,DWORD PTR [ecx]
  407ccc:	add    BYTE PTR [edx],cl
  407cce:	and    eax,0x1346f26
  407cd3:	add    BYTE PTR [edx],cl
  407cd5:	sub    al,BYTE PTR [eax]
  407cd7:	add    BYTE PTR [ecx],al
  407cd9:	adc    BYTE PTR [eax],al
  407cdb:	add    BYTE PTR [edx],al
  407cdd:	add    BYTE PTR [eax],bl
  407cdf:	add    BYTE PTR [ecx],ch
  407ce1:	inc    ecx
  407ce2:	add    BYTE PTR [edx],cl
  407ce4:	add    BYTE PTR [eax],al
  407ce6:	add    BYTE PTR [eax],al
  407ce8:	adc    esi,DWORD PTR [eax]
  407cea:	push   es
  407ceb:	add    cl,bl
  407ced:	add    BYTE PTR [eax],al
  407cef:	add    BYTE PTR [eax],bh
  407cf1:	add    BYTE PTR [eax],al
  407cf3:	adc    DWORD PTR [esi+0x2f],edi
  407cf6:	add    BYTE PTR [eax],al
  407cf8:	add    al,0x2
  407cfa:	dec    edx
  407cfb:	sub    ch,dh
  407cfd:	add    BYTE PTR [eax],al
  407cff:	or     cl,BYTE PTR [edx]
  407d01:	add    ah,BYTE PTR ds:0x54581a4a
  407d07:	push   es
  407d08:	sub    eax,0x1451914
  407d0d:	add    BYTE PTR [eax],al
  407d0f:	add    dh,dh
  407d11:	(bad)  
  407d12:	(bad)  
  407d13:	call   DWORD PTR [edi]
  407d15:	sub    eax,0x75d006
  407d1a:	add    BYTE PTR [esi],al
  407d1c:	sub    al,BYTE PTR es:[esi]
  407d1f:	lea    ebx,[esi]
  407d21:	add    BYTE PTR [eax],al
  407d23:	add    DWORD PTR [ebx],ecx
  407d25:	jle    0x407d56
  407d27:	add    BYTE PTR [eax],al
  407d29:	add    al,0x2
  407d2b:	dec    edx
  407d2c:	pop    es
  407d2d:	push   ss
  407d2e:	push   es
  407d2f:	sub    cl,bh
  407d31:	add    BYTE PTR [eax],al
  407d33:	or     bl,BYTE PTR [edx]
  407d35:	or     al,0x6
  407d37:	sbb    bl,BYTE PTR [ecx+0x1f]
  407d3a:	sbb    BYTE PTR [ebx+0xd],bl
  407d3d:	push   ss
  407d3e:	adc    eax,DWORD PTR [ebx+ebp*1]
  407d41:	je     0x407d4a
  407d43:	or     BYTE PTR [eax],ch
  407d45:	cmc    
  407d46:	add    BYTE PTR [eax],al
  407d48:	or     dl,BYTE PTR [ebx]
  407d4a:	add    eax,0x58141f08
  407d4f:	or     al,0x11
  407d51:	add    eax,0x8110813
  407d56:	inc    ebp
  407d57:	add    eax,0x2000000
  407d5c:	add    BYTE PTR [eax],al
  407d5e:	add    BYTE PTR ds:0x3d000000,bh
  407d64:	add    BYTE PTR [eax],al
  407d66:	add    BYTE PTR ds:0x32000000,bh
  407d6c:	add    BYTE PTR [eax],al
  407d6e:	add    BYTE PTR [ebx],ch
  407d70:	cmp    edi,DWORD PTR [esi+0x31]
  407d73:	add    BYTE PTR [eax],al
  407d75:	add    al,0x13
  407d77:	or     DWORD PTR [edx],edx
  407d79:	or     DWORD PTR [edi],eax
  407d7b:	or     BYTE PTR [eax],ch
  407d7d:	cmc    
  407d7e:	add    BYTE PTR [eax],al
  407d80:	or     ah,BYTE PTR ds:0x11b2826
  407d86:	add    BYTE PTR [edx],cl
  407d88:	and    eax,0x3061326
  407d8d:	adc    DWORD PTR [esi],eax
  407d8f:	outs   dx,DWORD PTR ds:[esi]
  407d90:	xor    eax,0x130a0001
  407d95:	pop    es
  407d96:	adc    DWORD PTR [edi],eax
  407d98:	or     BYTE PTR [edi],al
  407d9a:	sub    BYTE PTR [esi+0x0],dh
  407d9d:	add    BYTE PTR [esi],al
  407d9f:	sub    ecx,DWORD PTR [ebx]
  407da1:	jb     0x407dda
  407da3:	add    DWORD PTR [eax],eax
  407da5:	jo     0x407e1a
  407da7:	add    DWORD PTR ss:[eax],eax
  407daa:	or     bh,BYTE PTR [edx+0x8]
  407dad:	sbb    bl,BYTE PTR [eax+0xc]
  407db0:	adc    DWORD PTR [edi+edx*1],eax
  407db3:	pop    eax
  407db4:	adc    eax,DWORD PTR [ecx+edx*1]
  407db7:	add    al,0x9
  407db9:	xor    al,BYTE PTR [edi+0x14518]
  407dbf:	add    BYTE PTR [eax],al
  407dc1:	idiv   bh
  407dc3:	(bad)  
  407dc4:	inc    DWORD PTR [ebx]
  407dc6:	pop    es
  407dc7:	outs   dx,DWORD PTR ds:[esi]
  407dc8:	aaa    
  407dc9:	add    DWORD PTR [eax],eax
  407dcb:	or     ch,BYTE PTR [edx]
  407dcd:	add    BYTE PTR [eax],al
  407dcf:	add    BYTE PTR [ebx],al
  407dd1:	xor    BYTE PTR [ecx],cl
  407dd3:	add    BYTE PTR [ecx],bh
  407dd5:	add    BYTE PTR [eax],al
  407dd7:	add    BYTE PTR [eax],al
  407dd9:	add    BYTE PTR [eax],al
  407ddb:	add    BYTE PTR [ebx+eax*1],al
  407dde:	and    eax,0xbfe5817
  407de3:	add    DWORD PTR [eax],eax
  407de5:	add    dl,dl
  407de7:	pushf  
  407de8:	add    al,0x3
  407dea:	and    eax,0xbfe5817
  407def:	add    DWORD PTR [eax],eax
  407df1:	add    bl,BYTE PTR [esi]
  407df3:	arpl   dx,dx
  407df5:	pushf  
  407df6:	add    al,0x3
  407df8:	and    eax,0xbfe5817
  407dfd:	add    DWORD PTR [eax],eax
  407dff:	add    bl,BYTE PTR [edi]
  407e01:	adc    BYTE PTR [ebx-0x2e],ah
  407e04:	pushf  
  407e05:	add    al,0x3
  407e07:	and    eax,0xbfe5817
  407e0c:	add    DWORD PTR [eax],eax
  407e0e:	add    bl,BYTE PTR [edi]
  407e10:	sbb    BYTE PTR [ebx-0x2e],ah
  407e13:	pushf  
  407e14:	sub    al,BYTE PTR [eax]
  407e16:	add    BYTE PTR [eax],al
  407e18:	adc    esi,DWORD PTR [eax]
  407e1a:	add    eax,0xad00
  407e1f:	add    BYTE PTR [ecx],bh
  407e21:	add    BYTE PTR [eax],al
  407e23:	adc    DWORD PTR [edx],eax
  407e25:	outs   dx,DWORD PTR ds:[esi]
  407e26:	cmp    BYTE PTR [ecx],al
  407e28:	add    BYTE PTR [edx],cl
  407e2a:	and    eax,0x8e060a26
  407e2f:	imul   ecx,DWORD PTR [ebx],0x1396f02
  407e35:	add    BYTE PTR [edx],cl
  407e37:	and    eax,0x7042d26
  407e3c:	pop    ss
  407e3d:	pop    eax
  407e3e:	or     eax,DWORD PTR [edi]
  407e40:	lea    esp,[ebx+0xc010000]
  407e46:	push   ss
  407e47:	or     eax,0x1396f02
  407e4c:	add    BYTE PTR [edx],cl
  407e4e:	sub    eax,0x1451c51
  407e53:	add    BYTE PTR [eax],al
  407e55:	add    dh,dh
  407e57:	(bad)  
  407e58:	(bad)  
  407e59:	call   DWORD PTR [edi]
  407e5b:	sub    eax,0x77d006
  407e60:	add    BYTE PTR [esi],al
  407e62:	add    ch,BYTE PTR es:[edi+0x20]
  407e66:	add    DWORD PTR [eax],eax
  407e68:	or     ah,BYTE PTR ds:0x13a6f26
  407e6e:	add    BYTE PTR [edx],cl
  407e70:	and    eax,0x171e2c26
  407e75:	inc    ebp
  407e76:	add    DWORD PTR [eax],eax
  407e78:	add    BYTE PTR [eax],al
  407e7a:	idiv   bh
  407e7c:	(bad)  
  407e7d:	dec    DWORD PTR [eax]
  407e7f:	push   ss
  407e80:	add    ch,BYTE PTR [edi+0x20]
  407e83:	add    DWORD PTR [eax],eax
  407e85:	or     ah,BYTE PTR ds:0x13b6f26
  407e8b:	add    BYTE PTR [edx],cl
  407e8d:	and    eax,0xb2ba226
  407e92:	or     BYTE PTR [esi],dl
  407e94:	add    ch,BYTE PTR [edi+0x20]
  407e97:	add    DWORD PTR [eax],eax
  407e99:	or     ah,BYTE PTR ds:0x1709a226
  407e9f:	pop    eax
  407ea0:	or     eax,0x2b041316
  407ea5:	sbb    BYTE PTR [eax],cl
  407ea7:	or     DWORD PTR [esi],eax
  407ea9:	adc    DWORD PTR [edx+ebx*4],eax
  407eac:	outs   dx,DWORD PTR ds:[esi]
  407ead:	cmp    al,0x1
  407eaf:	add    BYTE PTR [edx],cl
  407eb1:	and    eax,0x411a226
  407eb6:	pop    ss
  407eb7:	pop    eax
  407eb8:	adc    eax,DWORD PTR [ecx+ecx*1]
  407ebb:	pop    ss
  407ebc:	pop    eax
  407ebd:	or     eax,0x8e060411
  407ec2:	imul   esi,DWORD PTR [edx],0x1451de1
  407ec8:	add    BYTE PTR [eax],al
  407eca:	add    dh,dh
  407ecc:	(bad)  
  407ecd:	(bad)  
  407ece:	dec    DWORD PTR [eax]
  407ed0:	sub    al,BYTE PTR [eax]
  407ed2:	add    BYTE PTR [eax],al
  407ed4:	adc    esi,DWORD PTR [eax]
  407ed6:	add    al,0x0
  407ed8:	rol    DWORD PTR [eax],1
  407eda:	add    BYTE PTR [eax],al
  407edc:	cmp    al,BYTE PTR [eax]
  407ede:	add    BYTE PTR [ecx],dl
  407ee0:	and    BYTE PTR [eax],al
  407ee2:	add    DWORD PTR [eax],eax
  407ee4:	add    BYTE PTR [ebp+0x1000077],cl
  407eea:	xor    BYTE PTR [edx],0x0
  407eed:	add    BYTE PTR [eax+eiz*1],al
  407ef0:	add    BYTE PTR [ecx],al
  407ef2:	add    BYTE PTR [eax],al
  407ef4:	lea    esi,[edi+0x0]
  407ef7:	add    BYTE PTR [ecx],al
  407ef9:	xor    BYTE PTR [ebx],0x0
  407efc:	add    BYTE PTR [eax+edx*8],al
  407eff:	js     0x407f01
  407f01:	add    BYTE PTR [ecx],al
  407f03:	sub    BYTE PTR [eax+0x0],dl
  407f06:	add    BYTE PTR [edx],cl
  407f08:	pop    ds
  407f09:	sbb    BYTE PTR [edi+0x1e],ch
  407f0c:	add    DWORD PTR [eax],eax
  407f0e:	or     ah,BYTE PTR ds:0x13160d26
  407f14:	add    al,0x38
  407f16:	add    BYTE PTR [eax],0x0
  407f19:	add    BYTE PTR [ecx],cl
  407f1b:	adc    DWORD PTR [edx+ebx*4],eax
  407f1e:	or     al,BYTE PTR [esi]
  407f20:	adc    al,0x6f
  407f22:	cmp    eax,0x250a0001
  407f27:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407f29:	ja     0x407f2b
  407f2b:	add    BYTE PTR [ecx],al
  407f2d:	or     edx,DWORD PTR [edx]
  407f2f:	add    DWORD PTR [eax],ebp
  407f31:	add    DWORD PTR ds:[eax],eax
  407f34:	or     ah,BYTE PTR ds:0x80cd126
  407f3a:	and    BYTE PTR [eax],al
  407f3c:	add    DWORD PTR [eax],eax
  407f3e:	add    BYTE PTR [edi],ch
  407f40:	es sbb al,0x45
  407f43:	add    DWORD PTR [eax],eax
  407f45:	add    BYTE PTR [eax],al
  407f47:	idiv   bh
  407f49:	(bad)  
  407f4a:	call   DWORD PTR [edi]
  407f4c:	sub    eax,0x78d006
  407f51:	add    BYTE PTR [esi],al
  407f53:	es jle 0x407f88
  407f56:	add    BYTE PTR [eax],al
  407f58:	add    al,0x8
  407f5a:	(bad)  
  407f5b:	ja     0x407f5d
  407f5d:	add    BYTE PTR [ecx],al
  407f5f:	pop    es
  407f60:	xor    DWORD PTR [edi+0x0],0x2f2b0100
  407f67:	or     BYTE PTR [eax],ah
  407f69:	add    bh,bh
  407f6b:	add    BYTE PTR [eax],al
  407f6d:	pop    edi
  407f6e:	and    BYTE PTR [eax],al
  407f70:	inc    BYTE PTR [eax]
  407f72:	add    BYTE PTR [ebx],dh
  407f74:	and    DWORD PTR [eax],ebx
  407f76:	inc    ebp
  407f77:	add    DWORD PTR [eax],eax
  407f79:	add    BYTE PTR [eax],al
  407f7b:	idiv   bh
  407f7d:	(bad)  
  407f7e:	(bad)  
  407f7f:	jle    0x407fb4
  407f81:	add    BYTE PTR [eax],al
  407f83:	add    al,0x8
  407f85:	and    bh,bh
  407f87:	add    BYTE PTR [eax],al
  407f89:	add    BYTE PTR [edi-0x71],bl
  407f8c:	ja     0x407f8e
  407f8e:	add    BYTE PTR [ecx],al
  407f90:	pop    es
  407f91:	xor    DWORD PTR [edi+0x0],0x4110100
  407f98:	pop    ss
  407f99:	pop    eax
  407f9a:	adc    eax,DWORD PTR [ecx+edx*1]
  407f9d:	add    al,0x9
  407f9f:	mov    gs,WORD PTR [ecx+0x3f]
  407fa2:	je     0x407fa3
  407fa4:	(bad)  
  407fa5:	call   FWORD PTR [ebx]
  407fa7:	inc    ebp
  407fa8:	add    DWORD PTR [eax],eax
  407faa:	add    BYTE PTR [eax],al
  407fac:	idiv   bh
  407fae:	(bad)  
  407faf:	jmp    FWORD PTR [edx]
  407fb1:	add    BYTE PTR [eax],al
  407fb3:	add    BYTE PTR [ebx],al
  407fb5:	xor    BYTE PTR [eax+eax*1],al
  407fb8:	add    BYTE PTR [eax],0x0
  407fbb:	add    BYTE PTR [eax],al
  407fbd:	add    BYTE PTR [eax],al
  407fbf:	add    BYTE PTR [edx],al
  407fc1:	sub    BYTE PTR [ecx],bh
  407fc3:	add    BYTE PTR [eax],al
  407fc5:	or     al,BYTE PTR [edx]
  407fc7:	add    eax,0x367d
  407fcc:	add    al,0x2
  407fce:	add    al,0x7d
  407fd0:	xor    eax,0x2040000
  407fd5:	push   ss
  407fd6:	jge    0x40800c
  407fd8:	add    BYTE PTR [eax],al
  407fda:	add    al,0x2
  407fdc:	add    ebp,DWORD PTR [edi+0x3f]
  407fdf:	add    DWORD PTR [eax],eax
  407fe1:	or     ah,BYTE PTR ds:0x377d26
  407fe7:	add    BYTE PTR [edx+eax*1],al
  407fea:	add    esi,DWORD PTR [ebp+0x74]
  407fed:	add    BYTE PTR [eax],al
  407fef:	add    DWORD PTR ds:0x1451d1d,ebp
  407ff5:	add    BYTE PTR [eax],al
  407ff7:	add    dh,dh
  407ff9:	(bad)  
  407ffa:	(bad)  
  407ffb:	call   DWORD PTR [edi]
  407ffd:	sub    eax,0x79d006
  408002:	add    BYTE PTR [esi],al
  408004:	add    ebp,DWORD PTR es:[edi+0x40]
  408008:	add    DWORD PTR [eax],eax
  40800a:	or     ah,BYTE PTR ds:0x14012b26
  408010:	jge    0x40804a
  408012:	add    BYTE PTR [eax],al
  408014:	add    al,0x2
  408016:	add    ebp,DWORD PTR [edi+0x20]
  408019:	add    DWORD PTR [eax],eax
  40801b:	or     ah,BYTE PTR ds:0x1a1b2c26
  408021:	inc    ebp
  408022:	add    DWORD PTR [eax],eax
  408024:	add    BYTE PTR [eax],al
  408026:	idiv   bh
  408028:	(bad)  
  408029:	inc    DWORD PTR [ebx]
  40802b:	outs   dx,DWORD PTR ds:[esi]
  40802c:	and    BYTE PTR [ecx],al
  40802e:	add    BYTE PTR [edx],cl
  408030:	and    eax,0x1416f26
  408035:	add    BYTE PTR [edx],cl
  408037:	and    eax,0x14012b26
  40803c:	jge    0x408077
  40803e:	add    BYTE PTR [eax],al
  408040:	add    al,0x2a
  408042:	add    BYTE PTR [eax],al
  408044:	add    esi,DWORD PTR [eax]
  408046:	or     DWORD PTR [eax],eax
  408048:	das    
  408049:	add    BYTE PTR [eax],al
  40804b:	add    BYTE PTR [eax],al
  40804d:	add    BYTE PTR [eax],al
  40804f:	add    BYTE PTR [ebx],ch
  408051:	or     DWORD PTR [edx],eax
  408053:	sub    BYTE PTR [ebx+0x0],bh
  408056:	add    BYTE PTR [esi],al
  408058:	and    eax,0x7b022626
  40805d:	xor    al,0x0
  40805f:	add    BYTE PTR [edx+eax*1],al
  408062:	jnp    0x408099
  408064:	add    BYTE PTR [eax],al
  408066:	add    al,0x8e
  408068:	imul   esi,DWORD PTR [edx],0x1451de7
  40806e:	add    BYTE PTR [eax],al
  408070:	add    dh,dh
  408072:	(bad)  
  408073:	(bad)  
  408074:	call   DWORD PTR [edi]
  408076:	sub    eax,0x7ad006
  40807b:	add    BYTE PTR [esi],al
  40807d:	sub    al,BYTE PTR es:[eax]
  408080:	adc    esi,DWORD PTR [eax]
  408082:	push   es
  408083:	add    BYTE PTR [ebp+0x3b000003],ch
  408089:	add    BYTE PTR [eax],al
  40808b:	adc    DWORD PTR [edx],eax
  40808d:	jnp    0x4080c3
  40808f:	add    BYTE PTR [eax],al
  408091:	add    al,0xa
  408093:	jle    0x4080d7
  408095:	add    DWORD PTR [eax],eax
  408097:	or     cl,BYTE PTR [ebx]
  408099:	push   ss
  40809a:	or     al,0x2
  40809c:	sub    BYTE PTR [ebp+0x0],bh
  40809f:	add    BYTE PTR [esi],al
  4080a1:	and    eax,0x20090d26
  4080a6:	inc    BYTE PTR [eax]
  4080a8:	add    BYTE PTR [eax],al
  4080aa:	adc    edi,DWORD PTR cs:[esi+0x32]
  4080ae:	add    BYTE PTR [eax],al
  4080b0:	add    al,0x9
  4080b2:	(bad)  
  4080b3:	ja     0x4080b5
  4080b5:	add    BYTE PTR [ecx],al
  4080b7:	jno    0x408130
  4080b9:	add    BYTE PTR [eax],al
  4080bb:	add    DWORD PTR [ebx],ecx
  4080bd:	sub    ebx,DWORD PTR [eax]
  4080bf:	add    ch,BYTE PTR [eax]
  4080c1:	jge    0x4080c3
  4080c3:	add    BYTE PTR [esi],al
  4080c5:	or     eax,0x337e
  4080ca:	add    al,0x9
  4080cc:	(bad)  
  4080cd:	ja     0x4080cf
  4080cf:	add    BYTE PTR [ecx],al
  4080d1:	jno    0x40814a
  4080d3:	add    BYTE PTR [eax],al
  4080d5:	add    DWORD PTR [ebx],ecx
  4080d7:	adc    al,BYTE PTR [ecx]
  4080d9:	sub    BYTE PTR [ebx+0x1],al
  4080dc:	add    BYTE PTR [edx],cl
  4080de:	and    eax,0x110c1326
  4080e3:	or     al,0x45
  4080e5:	adc    eax,DWORD PTR [eax]
  4080e7:	add    BYTE PTR [eax],al
  4080e9:	adc    BYTE PTR [eax],al
  4080eb:	add    BYTE PTR [eax],al
  4080ed:	sbb    al,0x1
  4080ef:	add    BYTE PTR [eax],al
  4080f1:	and    al,BYTE PTR [eax]
  4080f3:	add    BYTE PTR [eax],al
  4080f5:	sub    eax,DWORD PTR [eax]
  4080f7:	add    BYTE PTR [eax],al
  4080f9:	les    eax,FWORD PTR [eax]
  4080fb:	add    BYTE PTR [eax],al
  4080fd:	add    eax,0xe6000000
  408102:	add    al,BYTE PTR [eax]
  408104:	add    BYTE PTR ds:0xe6000000,bh
  40810a:	add    al,BYTE PTR [eax]
  40810c:	add    BYTE PTR [ebp+0x58000000],cl
  408112:	add    BYTE PTR [eax],al
  408114:	add    al,dl
  408116:	add    al,BYTE PTR [eax]
  408118:	add    BYTE PTR [eax+0x66000001],dh
  40811e:	add    DWORD PTR [eax],eax
  408120:	add    BYTE PTR [edi+0x0],cl
  408123:	add    BYTE PTR [eax],al
  408125:	pop    es
  408126:	add    BYTE PTR [eax],al
  408128:	add    BYTE PTR [ecx],bl
  40812a:	add    BYTE PTR [eax],al
  40812c:	add    BYTE PTR [eax+eax*1],dh
  40812f:	add    BYTE PTR [eax],al
  408131:	inc    esi
  408132:	add    BYTE PTR [eax],al
  408134:	add    BYTE PTR [eax],bh
  408136:	loope  0x40813a
  408138:	add    BYTE PTR [eax],al
  40813a:	adc    al,0x2a
  40813c:	add    dl,BYTE PTR [edi]
  40813e:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408142:	push   es
  408143:	adc    al,0x2a
  408145:	add    bl,BYTE PTR [edx]
  408147:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40814b:	push   es
  40814c:	adc    al,0x2a
  40814e:	add    dl,BYTE PTR [edi]
  408150:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408154:	push   es
  408155:	adc    al,0x2a
  408157:	add    bl,BYTE PTR [edx]
  408159:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40815d:	push   es
  40815e:	adc    al,0x2a
  408160:	add    bl,BYTE PTR [esi]
  408162:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408166:	push   es
  408167:	adc    al,0x2a
  408169:	add    bl,BYTE PTR [edx]
  40816b:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40816f:	push   es
  408170:	adc    al,0x2a
  408172:	add    bl,BYTE PTR [esi]
  408174:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408178:	push   es
  408179:	adc    al,0x2a
  40817b:	add    dl,BYTE PTR [edi]
  40817d:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408181:	push   es
  408182:	adc    al,0x2a
  408184:	add    bl,BYTE PTR [eax]
  408186:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40818a:	push   es
  40818b:	adc    al,0x2a
  40818d:	add    ch,BYTE PTR [eax]
  40818f:	jle    0x408191
  408191:	add    BYTE PTR [esi],al
  408193:	and    eax,0x2020c26
  408198:	jnp    0x4081d0
  40819a:	add    BYTE PTR [eax],al
  40819c:	add    al,0x2
  40819e:	jnp    0x4081d7
  4081a0:	add    BYTE PTR [eax],al
  4081a2:	add    al,0x8
  4081a4:	outs   dx,DWORD PTR ds:[esi]
  4081a5:	inc    esp
  4081a6:	add    DWORD PTR [eax],eax
  4081a8:	or     ch,BYTE PTR [edi+0x45]
  4081ab:	add    DWORD PTR [eax],eax
  4081ad:	or     ah,BYTE PTR ds:0x1120626
  4081b3:	sub    BYTE PTR [esi+0x1],al
  4081b6:	add    BYTE PTR [edx],cl
  4081b8:	and    eax,0x7f285826
  4081bd:	add    BYTE PTR [eax],al
  4081bf:	push   es
  4081c0:	adc    al,0x2a
  4081c2:	add    ch,BYTE PTR [eax]
  4081c4:	jle    0x4081c6
  4081c6:	add    BYTE PTR [esi],al
  4081c8:	and    eax,0x2020c26
  4081cd:	jnp    0x408205
  4081cf:	add    BYTE PTR [eax],al
  4081d1:	add    al,0x2
  4081d3:	jnp    0x40820c
  4081d5:	add    BYTE PTR [eax],al
  4081d7:	add    al,0x8
  4081d9:	outs   dx,DWORD PTR ds:[esi]
  4081da:	inc    edi
  4081db:	add    DWORD PTR [eax],eax
  4081dd:	or     ah,BYTE PTR ds:0x1486f26
  4081e3:	add    BYTE PTR [edx],cl
  4081e5:	and    eax,0x1120626
  4081ea:	sub    BYTE PTR [esi+0x1],al
  4081ed:	add    BYTE PTR [edx],cl
  4081ef:	and    eax,0x7f285826
  4081f4:	add    BYTE PTR [eax],al
  4081f6:	push   es
  4081f7:	adc    al,0x2a
  4081f9:	add    ch,BYTE PTR [eax]
  4081fb:	jle    0x4081fd
  4081fd:	add    BYTE PTR [esi],al
  4081ff:	and    eax,0x7b020c26
  408204:	aaa    
  408205:	add    BYTE PTR [eax],al
  408207:	add    al,0x8
  408209:	add    bh,BYTE PTR [ebx+0x39]
  40820c:	add    BYTE PTR [eax],al
  40820e:	add    al,0x2
  408210:	jnp    0x40824a
  408212:	add    BYTE PTR [eax],al
  408214:	add    al,0x6f
  408216:	dec    ecx
  408217:	add    DWORD PTR [eax],eax
  408219:	or     dl,BYTE PTR [ebx]
  40821b:	add    al,0x2
  40821d:	add    bh,BYTE PTR [ebx+0x36]
  408220:	add    BYTE PTR [eax],al
  408222:	add    al,0x11
  408224:	add    al,0x6f
  408226:	dec    edx
  408227:	add    DWORD PTR [eax],eax
  408229:	or     dl,BYTE PTR [ecx]
  40822b:	add    al,0x6f
  40822d:	and    BYTE PTR [ecx],al
  40822f:	add    BYTE PTR [edx],cl
  408231:	and    eax,0x14b6f26
  408236:	add    BYTE PTR [edx],cl
  408238:	outs   dx,DWORD PTR ds:[esi]
  408239:	dec    esp
  40823a:	add    DWORD PTR [eax],eax
  40823c:	or     ah,BYTE PTR ds:0x1120626
  408242:	sub    BYTE PTR [esi+0x1],al
  408245:	add    BYTE PTR [edx],cl
  408247:	and    eax,0x7f285826
  40824c:	add    BYTE PTR [eax],al
  40824e:	push   es
  40824f:	adc    al,0x2a
  408251:	add    ch,BYTE PTR [eax]
  408253:	jle    0x408255
  408255:	add    BYTE PTR [esi],al
  408257:	and    eax,0x7b020c26
  40825c:	aaa    
  40825d:	add    BYTE PTR [eax],al
  40825f:	add    al,0x8
  408261:	add    bh,BYTE PTR [ebx+0x39]
  408264:	add    BYTE PTR [eax],al
  408266:	add    al,0x2
  408268:	jnp    0x4082a2
  40826a:	add    BYTE PTR [eax],al
  40826c:	add    al,0x6f
  40826e:	dec    ebp
  40826f:	add    DWORD PTR [eax],eax
  408271:	or     ah,BYTE PTR ds:0x2051326
  408277:	add    bh,BYTE PTR [ebx+0x36]
  40827a:	add    BYTE PTR [eax],al
  40827c:	add    al,0x11
  40827e:	add    eax,0x14e6f
  408283:	or     ah,BYTE PTR ds:0x14f6f26
  408289:	add    BYTE PTR [edx],cl
  40828b:	push   es
  40828c:	adc    al,BYTE PTR [ecx]
  40828e:	sub    BYTE PTR [esi+0x1],al
  408291:	add    BYTE PTR [edx],cl
  408293:	pop    eax
  408294:	sub    BYTE PTR [edi+0x0],bh
  408297:	add    BYTE PTR [esi],al
  408299:	adc    al,0x2a
  40829b:	add    ch,BYTE PTR [eax]
  40829d:	jle    0x40829f
  40829f:	add    BYTE PTR [esi],al
  4082a1:	and    eax,0x7b020c26
  4082a6:	aaa    
  4082a7:	add    BYTE PTR [eax],al
  4082a9:	add    al,0x8
  4082ab:	add    bh,BYTE PTR [ebx+0x39]
  4082ae:	add    BYTE PTR [eax],al
  4082b0:	add    al,0x2
  4082b2:	jnp    0x4082ec
  4082b4:	add    BYTE PTR [eax],al
  4082b6:	add    al,0x6f
  4082b8:	push   eax
  4082b9:	add    DWORD PTR [eax],eax
  4082bb:	or     dl,BYTE PTR [ebx]
  4082bd:	push   es
  4082be:	add    al,BYTE PTR [edx]
  4082c0:	jnp    0x4082f8
  4082c2:	add    BYTE PTR [eax],al
  4082c4:	add    al,0x11
  4082c6:	push   es
  4082c7:	outs   dx,DWORD PTR ds:[esi]
  4082c8:	dec    ebx
  4082c9:	add    DWORD PTR [eax],eax
  4082cb:	or     ah,BYTE PTR ds:0x1356f26
  4082d1:	add    BYTE PTR [edx],cl
  4082d3:	push   es
  4082d4:	adc    al,BYTE PTR [ecx]
  4082d6:	sub    BYTE PTR [esi+0x1],al
  4082d9:	add    BYTE PTR [edx],cl
  4082db:	and    eax,0x7f285826
  4082e0:	add    BYTE PTR [eax],al
  4082e2:	push   es
  4082e3:	adc    al,0x2a
  4082e5:	add    ch,BYTE PTR [eax]
  4082e7:	jle    0x4082e9
  4082e9:	add    BYTE PTR [esi],al
  4082eb:	and    eax,0x7b020c26
  4082f0:	aaa    
  4082f1:	add    BYTE PTR [eax],al
  4082f3:	add    al,0x8
  4082f5:	add    bh,BYTE PTR [ebx+0x39]
  4082f8:	add    BYTE PTR [eax],al
  4082fa:	add    al,0x2
  4082fc:	jnp    0x408336
  4082fe:	add    BYTE PTR [eax],al
  408300:	add    al,0x6f
  408302:	push   ecx
  408303:	add    DWORD PTR [eax],eax
  408305:	or     ah,BYTE PTR ds:0x11071326
  40830b:	pop    es
  40830c:	outs   dx,DWORD PTR ds:[esi]
  40830d:	push   edx
  40830e:	add    DWORD PTR [eax],eax
  408310:	or     bl,BYTE PTR [edi]
  408312:	and    BYTE PTR [esi],ch
  408314:	sub    ebx,DWORD PTR [ebx]
  408316:	inc    ebp
  408317:	add    DWORD PTR [eax],eax
  408319:	add    BYTE PTR [eax],al
  40831b:	idiv   bh
  40831d:	(bad)  
  40831e:	call   DWORD PTR [edi]
  408320:	sub    eax,0x7bd006
  408325:	add    BYTE PTR [esi],al
  408327:	adc    DWORD PTR es:[edi],eax
  40832a:	outs   dx,DWORD PTR ds:[esi]
  40832b:	push   edx
  40832c:	add    DWORD PTR [eax],eax
  40832e:	or     ah,BYTE PTR [eax]
  408330:	add    BYTE PTR [eax],0x0
  408333:	add    BYTE PTR [ebx],dh
  408335:	das    
  408336:	sbb    BYTE PTR [ebp+0x1],al
  408339:	add    BYTE PTR [eax],al
  40833b:	add    dh,dh
  40833d:	(bad)  
  40833e:	(bad)  
  40833f:	call   DWORD PTR [ecx]
  408341:	pop    es
  408342:	jne    0x4082e7
  408344:	add    BYTE PTR [eax],al
  408346:	add    DWORD PTR [ebx],edx
  408348:	or     BYTE PTR [edx],al
  40834a:	jnp    0x408382
  40834c:	add    BYTE PTR [eax],al
  40834e:	add    al,0x11
  408350:	or     BYTE PTR [edi+0x4b],ch
  408353:	add    DWORD PTR [eax],eax
  408355:	or     ah,BYTE PTR ds:0x1356f26
  40835b:	add    BYTE PTR [edx],cl
  40835d:	and    eax,0x8e380c26
  408362:	add    BYTE PTR [eax],al
  408364:	add    BYTE PTR [ecx],dl
  408366:	pop    es
  408367:	outs   dx,DWORD PTR ds:[esi]
  408368:	push   edx
  408369:	add    DWORD PTR [eax],eax
  40836b:	or     bl,BYTE PTR [esi]
  40836d:	and    BYTE PTR cs:[edx],bl
  408370:	inc    ebp
  408371:	add    DWORD PTR [eax],eax
  408373:	add    BYTE PTR [eax],al
  408375:	idiv   bh
  408377:	(bad)  
  408378:	call   DWORD PTR [ecx]
  40837a:	pop    es
  40837b:	outs   dx,DWORD PTR ds:[esi]
  40837c:	push   edx
  40837d:	add    DWORD PTR [eax],eax
  40837f:	or     ah,BYTE PTR ds:0x3a331726
  408385:	sbb    al,0x45
  408387:	add    DWORD PTR [eax],eax
  408389:	add    BYTE PTR [eax],al
  40838b:	idiv   bh
  40838d:	(bad)  
  40838e:	call   DWORD PTR [ecx]
  408390:	pop    es
  408391:	jne    0x408313
  408393:	add    BYTE PTR [eax],al
  408395:	add    DWORD PTR [ebx],edx
  408397:	or     DWORD PTR [edx],eax
  408399:	jnp    0x4083d1
  40839b:	add    BYTE PTR [eax],al
  40839d:	add    al,0x11
  40839f:	or     DWORD PTR [edi+0x4a],ebp
  4083a2:	add    DWORD PTR [eax],eax
  4083a4:	or     dl,BYTE PTR [ecx]
  4083a6:	or     DWORD PTR [edi+0x20],ebp
  4083a9:	add    DWORD PTR [eax],eax
  4083ab:	or     ah,BYTE PTR ds:0x14b6f26
  4083b1:	add    BYTE PTR [edx],cl
  4083b3:	and    eax,0x14c6f26
  4083b8:	add    BYTE PTR [edx],cl
  4083ba:	and    eax,0x342b0c26
  4083bf:	adc    DWORD PTR [edi],eax
  4083c1:	outs   dx,DWORD PTR ds:[esi]
  4083c2:	push   edx
  4083c3:	add    DWORD PTR [eax],eax
  4083c5:	or     ah,BYTE PTR ds:0x28331a26
  4083cb:	sbb    al,BYTE PTR [ebp+0x1]
  4083ce:	add    BYTE PTR [eax],al
  4083d0:	add    dh,dh
  4083d2:	(bad)  
  4083d3:	(bad)  
  4083d4:	call   DWORD PTR [ecx]
  4083d6:	pop    es
  4083d7:	jne    0x408455
  4083d9:	add    BYTE PTR [eax],al
  4083db:	add    DWORD PTR [ebx],edx
  4083dd:	or     al,BYTE PTR [edx]
  4083df:	jnp    0x408417
  4083e1:	add    BYTE PTR [eax],al
  4083e3:	add    al,0x11
  4083e5:	or     ch,BYTE PTR [edi+0x4e]
  4083e8:	add    DWORD PTR [eax],eax
  4083ea:	or     ah,BYTE PTR ds:0x14f6f26
  4083f0:	add    BYTE PTR [edx],cl
  4083f2:	or     al,0x2
  4083f4:	or     BYTE PTR [esi],al
  4083f6:	adc    al,BYTE PTR [ecx]
  4083f8:	sub    BYTE PTR [esi+0x1],al
  4083fb:	add    BYTE PTR [edx],cl
  4083fd:	pop    eax
  4083fe:	sub    BYTE PTR [edi+0x0],bh
  408401:	add    BYTE PTR [esi],al
  408403:	adc    al,0x2a
  408405:	add    ch,BYTE PTR [eax]
  408407:	jle    0x408409
  408409:	add    BYTE PTR [esi],al
  40840b:	and    eax,0x20b1326
  408410:	adc    DWORD PTR [ebx],ecx
  408412:	sbb    bl,BYTE PTR [edx+0x28]
  408415:	jl     0x408417
  408417:	add    BYTE PTR [esi],al
  408419:	adc    al,0x2a
  40841b:	jb     0x4083ae
  40841d:	add    DWORD PTR [eax],eax
  40841f:	jo     0x408433
  408421:	add    DWORD PTR [eax],ebp
  408423:	inc    ebx
  408424:	add    DWORD PTR [eax],eax
  408426:	or     cl,BYTE PTR [ecx+edi*2+0x28010000]
  40842d:	inc    ecx
  40842e:	add    BYTE PTR [eax],al
  408430:	or     ah,BYTE PTR ds:0x1537326
  408436:	add    BYTE PTR [edx],cl
  408438:	jp     0x40843a
  40843a:	add    BYTE PTR [eax],al
  40843c:	add    esi,DWORD PTR [eax]
  40843e:	or     DWORD PTR [eax],eax
  408440:	sldt   WORD PTR [eax]
  408443:	add    BYTE PTR [eax],al
  408445:	add    BYTE PTR [eax],al
  408447:	add    BYTE PTR [edx],al
  408449:	and    eax,0x347b
  40844e:	add    al,0x3
  408450:	pop    eax
  408451:	jge    0x408487
  408453:	add    BYTE PTR [eax],al
  408455:	add    al,0x2a
  408457:	add    BYTE PTR [ebx],dl
  408459:	xor    BYTE PTR ds:0x1900,al
  40845f:	add    BYTE PTR [edi],cl
  408461:	add    BYTE PTR [eax],al
  408463:	adc    DWORD PTR [edx],eax
  408465:	jnp    0x40849c
  408467:	add    BYTE PTR [eax],al
  408469:	add    al,0x2
  40846b:	and    eax,0x347b
  408470:	add    al,0x25
  408472:	or     dl,BYTE PTR [edi]
  408474:	pop    eax
  408475:	jge    0x4084ab
  408477:	add    BYTE PTR [eax],al
  408479:	add    al,0x6
  40847b:	xchg   ecx,eax
  40847c:	sub    al,BYTE PTR [eax]
  40847e:	add    BYTE PTR [eax],al
  408480:	adc    esi,DWORD PTR [eax]
  408482:	add    al,0x0
  408484:	and    al,0x0
  408486:	add    BYTE PTR [eax],al
  408488:	sldt   WORD PTR [eax]
  40848b:	adc    DWORD PTR [edx],eax
  40848d:	jnp    0x4084c3
  40848f:	add    BYTE PTR [eax],al
  408491:	add    al,0xa
  408493:	add    ah,BYTE PTR ds:0x347b
  408499:	add    al,0x1a
  40849b:	pop    eax
  40849c:	jge    0x4084d2
  40849e:	add    BYTE PTR [eax],al
  4084a0:	add    al,0x2
  4084a2:	jnp    0x4084d9
  4084a4:	add    BYTE PTR [eax],al
  4084a6:	add    al,0x6
  4084a8:	sub    ch,dh
  4084aa:	add    BYTE PTR [eax],al
  4084ac:	or     ah,BYTE PTR ds:0x30032a26
  4084b2:	add    eax,0x4d00
  4084b7:	add    BYTE PTR [eax],al
  4084b9:	add    BYTE PTR [eax],al
  4084bb:	add    BYTE PTR [edx],al
  4084bd:	jnp    0x4084f4
  4084bf:	add    BYTE PTR [eax],al
  4084c1:	add    al,0x4
  4084c3:	and    eax,0xbfe5817
  4084c8:	add    al,BYTE PTR [eax]
  4084ca:	add    edx,edx
  4084cc:	pushf  
  4084cd:	add    bh,BYTE PTR [ebx+0x35]
  4084d0:	add    BYTE PTR [eax],al
  4084d2:	add    al,0x4
  4084d4:	and    eax,0xbfe5817
  4084d9:	add    al,BYTE PTR [eax]
  4084db:	add    ebx,DWORD PTR [esi]
  4084dd:	arpl   dx,dx
  4084df:	pushf  
  4084e0:	add    bh,BYTE PTR [ebx+0x35]
  4084e3:	add    BYTE PTR [eax],al
  4084e5:	add    al,0x4
  4084e7:	and    eax,0xbfe5817
  4084ec:	add    al,BYTE PTR [eax]
  4084ee:	add    ebx,DWORD PTR [edi]
  4084f0:	adc    BYTE PTR [ebx-0x2e],ah
  4084f3:	pushf  
  4084f4:	add    bh,BYTE PTR [ebx+0x35]
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	add    al,0x4
  4084fb:	and    eax,0xbfe5817
  408500:	add    al,BYTE PTR [eax]
  408502:	add    ebx,DWORD PTR [edi]
  408504:	sbb    BYTE PTR [ebx-0x2e],ah
  408507:	pushf  
  408508:	sub    al,BYTE PTR [eax]
  40850a:	add    BYTE PTR [eax],al
  40850c:	fild   DWORD PTR [ebp+0xf50002]
  408512:	add    BYTE PTR [edi+0x1a],bh
  408515:	sub    DWORD PTR [ebx],edi
  408517:	jne    0x408509
  408519:	add    ebp,DWORD PTR [esi+eiz*8-0x556af7ea]
  408520:	sti    
  408521:	in     al,dx
  408522:	dec    esi
  408523:	popf   
  408524:	jle    0x408525
  408526:	and    al,0x6b
  408528:	adc    BYTE PTR [edx-0x1],dh
  40852b:	push   edx
  40852c:	push   cs
  40852d:	sub    DWORD PTR [ebx],0xfffffff4
  408530:	out    0xd1,al
  408532:	sbb    DWORD PTR [ebx],ecx
  408534:	pop    edx
  408535:	adc    edx,ebx
  408537:	arpl   WORD PTR [edx-0x29],cx
  40853a:	addr16 jno 0x4084ce
  40853d:	xchg   esp,eax
  40853e:	mov    bh,BYTE PTR [edi]
  408540:	mov    ecx,0x9c428c26
  408545:	cmp    al,0xbb
  408547:	sub    BYTE PTR [edx+0x17],dl
  40854a:	imul   esi,DWORD PTR [ecx+0x3f],0xf3d63845
  408551:	(bad)  
  408552:	jne    0x408582
  408554:	cld    
  408555:	rol    eax,cl
  408557:	ins    WORD PTR es:[edi],dx
  408559:	cld    
  40855a:	(bad)  
  40855b:	js     0x408593
  40855d:	inc    ecx
  40855e:	and    al,0xd1
  408560:	mov    bl,BYTE PTR [esi-0x4a]
  408563:	outs   dx,DWORD PTR ds:[esi]
  408564:	pop    edx
  408565:	sub    eax,0xaa955b4e
  40856a:	js     0x4084fc
  40856c:	mov    ds:0x1cda93a7,eax
  408571:	in     al,0x2f
  408573:	push   ds
  408574:	aam    0xc5
  408576:	test   eax,0x3bf8a448
  40857b:	sub    BYTE PTR [esi],0x2f
  40857e:	jae    0x4085da
  408580:	iret   
  408581:	sahf   
  408582:	add    DWORD PTR [ebp+0x78],0x6d839da4
  408589:	add    eax,0x9d5b5bea
  40858e:	add    eax,0x1c5b2782
  408593:	sahf   
  408594:	xchg   eax,eax
  408596:	iret   
  408597:	mov    bl,0x9b
  408599:	shl    DWORD PTR [eax],1
  40859b:	sub    DWORD PTR [eax+0x5a],0xea958235
  4085a2:	push   0x44328f6e
  4085a7:	mov    ah,al
  4085a9:	mov    WORD PTR [ebx+0x7dabadef],ds
  4085af:	push   ecx
  4085b0:	ds xchg ecx,eax
  4085b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b3:	sub    edi,DWORD PTR [ebx]
  4085b5:	fidivr WORD PTR [esi]
  4085b7:	in     al,dx
  4085b8:	xchg   esp,eax
  4085b9:	mov    edx,0xcf90bbe4
  4085be:	and    BYTE PTR [esi+0x6b],0xd2
  4085c2:	pop    ebp
  4085c3:	xchg   edx,eax
  4085c4:	arpl   dx,bp
  4085c6:	xchg   ebx,eax
  4085c7:	les    ebp,FWORD PTR [ebp+0x669c504f]
  4085cd:	cmp    esi,DWORD PTR [esi-0x42fb7420]
  4085d3:	fsubr  QWORD PTR ds:0xe61e9e3
  4085d9:	cmp    DWORD PTR [esi],eax
  4085db:	pop    esp
  4085dc:	xlat   BYTE PTR ds:[ebx]
  4085dd:	sbb    eax,0x8321bb99
  4085e2:	mov    dh,0x59
  4085e4:	jmp    0xd8ca:0x7ee9b47
  4085eb:	mov    edi,0x142527ed
  4085f0:	add    ebp,DWORD PTR [ecx+eiz*4-0x1400cac1]
  4085f7:	leave  
  4085f8:	and    DWORD PTR [ecx+0x3e],eax
  4085fb:	fstp   QWORD PTR [edi+esi*4]
  4085fe:	xor    BYTE PTR [edx],0x42
  408601:	xchg   edi,eax
  408602:	addr16 jne 0x408639
  408605:	sbb    DWORD PTR [edx-0x6cb23a34],ebp
  40860b:	(bad)  
  40860c:	out    0x29,eax
  40860e:	sbb    edx,edx
  408610:	test   DWORD PTR [edx+0x19],0x35d5e7a7
  408617:	and    al,0x6f
  408619:	jecxz  0x408640
  40861b:	xchg   edx,eax
  40861c:	cmp    DWORD PTR [edi],0x76
  40861f:	mov    esi,0xffe9ddb
  408624:	es jne 0x40869a
  408627:	test   eax,0xbc4490de
  40862c:	(bad)  
  40862d:	sbb    esi,DWORD PTR [edi-0x20]
  408630:	arpl   WORD PTR [ebx-0x4fda8755],ax
  408636:	das    
  408637:	and    DWORD PTR [eax+0x439aab40],ebp
  40863d:	imul   esp,DWORD PTR [eax+0x72],0x685e864b
  408644:	ds push ebx
  408646:	imul   edx,DWORD PTR [ebx-0x2fd18f4d],0x21
  40864d:	scas   al,BYTE PTR es:[edi]
  40864e:	shl    BYTE PTR [edi],cl
  408650:	and    al,0x12
  408652:	adc    dh,bl
  408654:	lods   eax,DWORD PTR ds:[esi]
  408655:	mov    esp,0x1331b055
  40865a:	ss push ecx
  40865c:	jnp    0x408694
  40865e:	cmp    eax,0x37a6e255
  408663:	sbb    DWORD PTR [ebx],ebx
  408665:	jno    0x4086af
  408667:	xchg   ebx,eax
  408668:	lds    esp,FWORD PTR [ebp+0x71101bbb]
  40866e:	mov    ecx,0xfeabb603
  408673:	(bad)  
  408674:	sbb    DWORD PTR [ebx-0x42b4f283],esp
  40867a:	mov    esi,0xe580be5f
  40867f:	or     al,cl
  408681:	lea    esp,[edi-0x15]
  408684:	cmc    
  408685:	or     dl,BYTE PTR [ebp+0x54]
  408688:	les    esi,FWORD PTR [ecx]
  40868a:	push   ds
  40868b:	call   0xf0c0:0x466e2c93
  408692:	es jecxz 0x408661
  408695:	stc    
  408696:	dec    ebx
  408697:	sbb    al,0xa1
  408699:	ins    DWORD PTR es:[edi],dx
  40869a:	shr    BYTE PTR [edi+esi*2+0x4bdf4c6a],1
  4086a1:	jne    0x4086f9
  4086a3:	jmp    0x408704
  4086a5:	dec    esp
  4086a6:	pop    ecx
  4086a7:	mov    ss,WORD PTR [edi+0x69]
  4086aa:	mov    ch,0xde
  4086ac:	pop    esi
  4086ad:	(bad)  
  4086ae:	std    
  4086af:	fsub   st(3),st
  4086b1:	mov    cl,0x3c
  4086b3:	int3   
  4086b4:	sub    eax,0x7eec4a77
  4086b9:	test   eax,0x50c4c8c7
  4086be:	lods   al,BYTE PTR ds:[esi]
  4086bf:	jbe    0x4086b6
  4086c1:	mov    esp,0xf744104f
  4086c6:	mov    esp,0x949d3370
  4086cb:	js     0x408695
  4086cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ce:	jge    0x408712
  4086d0:	(bad)  
  4086d1:	cmp    eax,DWORD PTR [esp+edx*8+0x4f66eb35]
  4086d8:	dec    eax
  4086d9:	pusha  
  4086da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086db:	jno    0x4086ef
  4086dd:	add    eax,DWORD PTR [eax]
  4086df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086e0:	cs out 0x96,al
  4086e3:	lds    ecx,FWORD PTR [ebp+0x279271c2]
  4086e9:	fcomp  QWORD PTR [ebp+edx*2+0x12a3dcca]
  4086f0:	mov    esp,0x371f1eb2
  4086f5:	sti    
  4086f6:	or     al,bl
  4086f8:	jg     0x4086f3
  4086fa:	inc    edi
  4086fb:	jnp    0x408753
  4086fd:	inc    esi
  4086fe:	jecxz  0x4086cb
  408700:	sub    edi,DWORD PTR [esi]
  408702:	pop    edx
  408703:	test   DWORD PTR [ecx-0x376d660c],edi
  408709:	add    bl,BYTE PTR [ebx]
  40870b:	push   ebp
  40870c:	in     eax,dx
  40870d:	sbb    ebx,0xecfa6538
  408713:	dec    eax
  408714:	shr    DWORD PTR [eax-0x1af5cec],0x29
  40871b:	test   al,0x69
  40871d:	mov    edx,0x5dcd545
  408723:	adc    ebp,DWORD PTR [esi+0x40]
  408726:	pop    ss
  408727:	loopne 0x408769
  408729:	or     al,0x1a
  40872b:	(bad)  
  40872c:	(bad)  
  40872d:	jle    0x408778
  40872f:	or     BYTE PTR [ebx+0x3debe45f],dh
  408735:	mov    bh,0xe4
  408737:	pusha  
  408738:	clc    
  408739:	dec    esi
  40873a:	and    ebx,0xfffffffd
  40873d:	and    cl,BYTE PTR [edi-0x1a]
  408740:	and    DWORD PTR [edi+0x223360b8],ebp
  408746:	arpl   WORD PTR [ebp+0x59],bx
  408749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40874a:	jg     0x4086ec
  40874c:	retf   0x754f
  40874f:	jl     0x408752
  408751:	sbb    DWORD PTR [ebp+0x73],edx
  408754:	cs loope 0x4087af
  408757:	push   es
  408758:	(bad)  
  40875a:	push   eax
  40875b:	mov    edx,0x56586450
  408760:	mov    dl,0xb3
  408762:	push   es
  408763:	enter  0xe455,0x1e
  408767:	dec    edx
  408768:	ja     0x40872e
  40876a:	cmp    BYTE PTR [esi],dl
  40876c:	jmp    DWORD PTR [ecx+0xbda551a]
  408772:	add    cl,al
  408774:	mov    ch,0xa5
  408776:	mov    ch,0x8f
  408778:	jmp    0x4dc0:0x57fe63af
  40877f:	popa   
  408780:	mov    ebx,DWORD PTR [eax-0x51]
  408783:	daa    
  408784:	lods   eax,DWORD PTR ds:[esi]
  408785:	(bad)  
  408787:	cmp    DWORD PTR [edi+eax*4+0xfbe2969],0xffffffb7
  40878f:	dec    esp
  408790:	icebp  
  408791:	enter  0xe0fe,0xac
  408795:	out    dx,eax
  408796:	or     eax,0x5c01a383
  40879b:	aas    
  40879c:	int    0xc2
  40879e:	sub    esp,DWORD PTR [esi-0x3148c863]
  4087a4:	push   es
  4087a5:	scas   eax,DWORD PTR es:[edi]
  4087a6:	data16 stc 
  4087a8:	js     0x4087c4
  4087aa:	and    eax,0xecacdb13
  4087af:	or     BYTE PTR [ecx],dh
  4087b1:	and    BYTE PTR ds:0xbe152c96,dh
  4087b7:	ja     0x40881a
  4087b9:	ffreep st(0)
  4087bb:	dec    ecx
  4087bc:	adc    al,0xa9
  4087be:	cdq    
  4087bf:	inc    ecx
  4087c0:	lods   eax,DWORD PTR ds:[esi]
  4087c1:	jo     0x408812
  4087c3:	jmp    0x8d56:0xc3e44f72
  4087ca:	adc    edi,DWORD PTR [ebx+0x24124d79]
  4087d0:	jne    0x4087dd
  4087d2:	and    BYTE PTR ds:[eax],bh
  4087d5:	(bad)  
  4087d6:	ja     0x40875f
  4087d8:	scas   al,BYTE PTR es:[edi]
  4087d9:	ss cdq 
  4087db:	gs mov edi,0xf93655cb
  4087e1:	mov    al,0x87
  4087e3:	rcl    BYTE PTR [edx+0x3e],cl
  4087e6:	push   esi
  4087e7:	push   0xdeea7ddf
  4087ec:	xor    DWORD PTR [edi-0x74],0xd34884b
  4087f3:	mov    ebp,0x337d4474
  4087f8:	loop   0x408802
  4087fa:	sbb    DWORD PTR [edi+0x3bbe2b1e],eax
  408800:	mov    ch,0x44
  408802:	xor    ecx,ecx
  408804:	aam    0xb9
  408806:	fsubp  st(1),st
  408808:	sbb    eax,0x2ffc3950
  40880d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40880e:	mov    cl,0x67
  408810:	stc    
  408811:	mov    ebp,0x92aed845
  408816:	sub    al,0x2f
  408818:	mov    ds:0x59cd99a8,al
  40881d:	mov    WORD PTR [ebp+0x6f],?
  408820:	xchg   edx,eax
  408821:	jns    0x408854
  408823:	mov    dl,0xf7
  408825:	mov    edx,0x7c916a1f
  40882a:	aas    
  40882b:	fisttp QWORD PTR [eax-0x26]
  40882e:	mov    ds:0xd5220fb9,eax
  408833:	xchg   ebp,eax
  408834:	sahf   
  408835:	adc    DWORD PTR [edx],ebp
  408837:	xchg   ebp,eax
  408838:	or     dl,cl
  40883a:	or     edi,DWORD PTR [eax+0x3fa3fb]
  408840:	sbb    ch,dh
  408842:	je     0x408876
  408844:	gs cmc 
  408846:	aad    0x30
  408848:	retf   
  408849:	xchg   ebp,eax
  40884a:	data16 jne 0x408829
  40884d:	cld    
  40884e:	or     bh,BYTE PTR [edi+0x16]
  408851:	fs aaa 
  408853:	adc    eax,0xdb41f691
  408858:	mov    bl,0x1a
  40885a:	das    
  40885b:	jl     0x40885c
  40885d:	mov    esp,0xa5d151c
  408862:	mov    ds:0x10dae5ee,al
  408867:	mov    eax,ds:0xf42701c1
  40886c:	lods   eax,DWORD PTR ds:[esi]
  40886d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886e:	mov    ebp,0x8db832ae
  408873:	(bad)  
  408874:	pushf  
  408875:	leave  
  408876:	jmp    0x66b9:0xc9daef71
  40887d:	adc    dl,BYTE PTR [ebx+0x14]
  408880:	dec    BYTE PTR [eax-0x4deb24d4]
  408886:	scas   eax,DWORD PTR es:[edi]
  408887:	ja     0x4088ed
  408889:	push   edx
  40888a:	pusha  
  40888b:	sbb    DWORD PTR [ebp+0x7c],edi
  40888e:	cmp    ebx,DWORD PTR [esi+0x59c54ce1]
  408894:	pop    esp
  408895:	push   esi
  408896:	mov    bh,0x81
  408898:	push   es
  408899:	(bad)  
  40889a:	in     eax,dx
  40889b:	dec    ecx
  40889c:	mov    ecx,0x40383845
  4088a1:	gs ret 0x4195
  4088a5:	adc    al,0xa2
  4088a7:	push   ebx
  4088a8:	push   cs
  4088a9:	cwde   
  4088aa:	xchg   esi,eax
  4088ab:	idiv   DWORD PTR [esi-0x3a]
  4088ae:	adc    ch,dl
  4088b0:	add    al,0xb9
  4088b2:	mov    bl,0x77
  4088b4:	dec    ecx
  4088b5:	mov    al,ds:0xf2458917
  4088ba:	jle    0x408860
  4088bc:	neg    ecx
  4088be:	imul   esi,DWORD PTR [esi+0x4f4a6f06],0x50
  4088c5:	shr    BYTE PTR [edx+0x53],cl
  4088c8:	shr    BYTE PTR [edi-0x31],1
  4088cb:	pushf  
  4088cc:	mov    dl,0x7e
  4088ce:	clc    
  4088cf:	push   ds
  4088d0:	mov    esp,0xcbd2ff76
  4088d5:	(bad)  
  4088d6:	fldenv [eax-0x526dbcb3]
  4088dc:	loope  0x408924
  4088de:	out    0x2,al
  4088e0:	scas   eax,DWORD PTR es:[edi]
  4088e1:	pop    esp
  4088e2:	retf   
  4088e3:	aaa    
  4088e4:	pop    es
  4088e5:	add    DWORD PTR gs:[ebx+edi*1],edx
  4088e9:	rol    ah,cl
  4088eb:	add    BYTE PTR [edx+0x20],0x37
  4088ef:	out    0xf2,eax
  4088f1:	bound  edi,QWORD PTR [ebp+0x75c75cf8]
  4088f7:	clc    
  4088f8:	iret   
  4088f9:	test   eax,0xd52f105c
  4088fe:	pop    ss
  4088ff:	popa   
  408900:	xor    al,0x2
  408902:	push   edx
  408903:	pop    eax
  408904:	add    edi,DWORD PTR [esi+edx*8+0x39]
  408908:	dec    edi
  408909:	mov    ds:0x4c3fe129,al
  40890e:	daa    
  40890f:	rol    DWORD PTR [ebp+0x79],0x17
  408913:	add    al,0xe1
  408915:	or     eax,0x95937beb
  40891a:	aaa    
  40891b:	shr    DWORD PTR [ecx],1
  40891d:	stos   DWORD PTR es:[edi],eax
  40891e:	(bad)  
  40891f:	cmp    edx,ecx
  408921:	(bad)  
  408922:	cmp    eax,0x5e02aa84
  408927:	sub    ebx,DWORD PTR [ecx-0x36167583]
  40892d:	mov    ds:0x72d740fd,al
  408932:	xlat   BYTE PTR ds:[ebx]
  408933:	aad    0xa8
  408935:	inc    ecx
  408936:	imul   esp,DWORD PTR [eax-0x34dc1dc1],0x41
  40893d:	int    0xe9
  40893f:	jo     0x4088ff
  408941:	pop    ebp
  408942:	push   ebp
  408943:	pop    edx
  408944:	xor    esp,DWORD PTR [edx]
  408946:	mov    bl,0x68
  408948:	daa    
  408949:	(bad)  
  40894a:	fist   WORD PTR [ecx+0x67]
  40894d:	ror    BYTE PTR [eax+0x585c78da],0x11
  408954:	ss mov al,0xb4
  408957:	lock dec ebx
  408959:	idiv   BYTE PTR [esi+edx*4+0x22]
  40895d:	and    eax,0xce588246
  408962:	xor    eax,eax
  408964:	or     ebp,ebx
  408966:	sub    al,0x4
  408968:	sub    DWORD PTR [eax+0x53eee42c],ecx
  40896e:	xor    dl,BYTE PTR [edx-0x30]
  408971:	div    DWORD PTR [ecx-0x7e4038a1]
  408977:	adc    eax,0x97e070a0
  40897c:	mov    ah,0x4e
  40897e:	scas   eax,DWORD PTR es:[edi]
  40897f:	xor    al,0x74
  408981:	push   edi
  408982:	clc    
  408983:	popf   
  408984:	add    edi,DWORD PTR [eax+eax*1]
  408987:	das    
  408988:	ret    0x9e9f
  40898b:	xor    DWORD PTR [edi+0x49e8e79],edi
  408991:	jl     0x408a0a
  408993:	fs clc 
  408995:	xor    bl,cl
  408997:	mov    ah,0xda
  408999:	pop    edx
  40899a:	mov    fs,edi
  40899c:	mov    dl,bh
  40899e:	xlat   BYTE PTR ds:[ebx]
  40899f:	sbb    ebx,DWORD PTR [ebp-0x46]
  4089a2:	mov    ebp,0xebedbf50
  4089a7:	adc    esp,ecx
  4089a9:	rcr    BYTE PTR [di],cl
  4089ac:	in     eax,dx
  4089ad:	mov    ch,0x15
  4089af:	sub    al,0x1a
  4089b1:	cs pop edx
  4089b3:	mov    eax,0xfbbd1e39
  4089b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b9:	out    0x7b,eax
  4089bb:	xchg   ecx,eax
  4089bc:	mov    bl,0xec
  4089be:	sub    ebx,DWORD PTR [esi+0x8]
  4089c1:	loope  0x408945
  4089c3:	mov    ds:0x9a77cfbc,eax
  4089c8:	jns    0x4089a1
  4089ca:	push   ds
  4089cb:	inc    edx
  4089cc:	lock push eax
  4089ce:	add    cl,bl
  4089d0:	mov    ah,0xcb
  4089d2:	pop    ds
  4089d3:	or     edx,ebp
  4089d5:	sbb    eax,0xb73ca6bf
  4089da:	or     BYTE PTR [edx+0x31500c06],0xdf
  4089e1:	pop    es
  4089e2:	sbb    eax,0x353d6df6
  4089e7:	or     dh,BYTE PTR [ecx-0x46]
  4089ea:	shl    BYTE PTR [edi+0x4b0e59be],cl
  4089f0:	jbe    0x4089ea
  4089f2:	pop    edi
  4089f3:	int3   
  4089f4:	mov    ebx,0x1674a81b
  4089f9:	push   esi
  4089fa:	daa    
  4089fb:	(bad)  
  4089fc:	call   0xfe2f1de8
  408a01:	dec    esi
  408a02:	aas    
  408a03:	mov    dh,0xca
  408a05:	jp     0x408991
  408a07:	push   0xffffff8b
  408a09:	push   ebx
  408a0a:	les    esp,FWORD PTR [eax+0xb]
  408a0d:	dec    esi
  408a0e:	jno    0x408a66
  408a10:	cdq    
  408a11:	ds jae 0x4089a9
  408a14:	jbe    0x408a0f
  408a16:	in     al,0x6b
  408a18:	fcomp  DWORD PTR [eax+0x2744cd3f]
  408a1e:	xor    al,0x2f
  408a20:	jg     0x408a8c
  408a22:	sub    eax,0x571074c0
  408a27:	das    
  408a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a29:	cmc    
  408a2a:	arpl   di,di
  408a2c:	dec    ebp
  408a2d:	jmp    DWORD PTR [ebp-0x2f]
  408a30:	mov    bl,BYTE PTR [esi]
  408a32:	imul   ebx,DWORD PTR [esi],0xffffffe9
  408a35:	jmp    0x4089c9
  408a37:	mov    ds:0xabe618ed,eax
  408a3c:	add    eax,0x34035eb5
  408a41:	or     ah,ch
  408a43:	push   ebp
  408a44:	push   ds
  408a45:	push   es
  408a46:	in     al,0x4f
  408a48:	sub    DWORD PTR [esi+eax*2+0x1b835fce],edx
  408a4f:	or     edi,esi
  408a51:	adc    DWORD PTR [esi-0x2e],ebp
  408a54:	ja     0x408a66
  408a56:	mov    cl,bl
  408a58:	aaa    
  408a59:	repz mov edi,0x28687ebf
  408a5f:	cld    
  408a60:	jnp    0x408aaf
  408a62:	(bad)  
  408a63:	cmc    
  408a64:	mov    ebp,0x4c2ad726
  408a69:	inc    ebp
  408a6a:	or     bh,dl
  408a6c:	stc    
  408a6d:	add    al,0xd1
  408a6f:	stc    
  408a70:	and    al,0xbb
  408a72:	jne    0x408ad1
  408a74:	adc    BYTE PTR [eax],al
  408a76:	xchg   ebx,eax
  408a77:	push   0x4a
  408a79:	xor    dh,BYTE PTR [ebx+0x7e]
  408a7c:	scas   al,BYTE PTR es:[edi]
  408a7d:	mov    WORD PTR [ebx],fs
  408a7f:	ins    BYTE PTR es:[edi],dx
  408a80:	xlat   BYTE PTR ds:[ebx]
  408a81:	push   edi
  408a82:	repz mov ah,0x40
  408a85:	or     al,BYTE PTR [ecx]
  408a87:	out    dx,eax
  408a88:	ja     0x408a44
  408a8a:	cdq    
  408a8b:	fdiv   st(2),st
  408a8d:	out    dx,eax
  408a8e:	push   cs
  408a8f:	ret    
  408a90:	pop    esp
  408a91:	shl    BYTE PTR [ebx+0x4c],cl
  408a94:	jmp    0x11e0edc8
  408a99:	das    
  408a9a:	mov    eax,ds:0x53a67ccc
  408a9f:	out    0xfd,eax
  408aa1:	jno    0x212237b0
  408aa7:	es sbb eax,0x590c86e3
  408aad:	movnti DWORD PTR [ecx],esi
  408ab0:	das    
  408ab1:	sub    ebx,eax
  408ab3:	repz jmp 0x408a82
  408ab6:	lods   al,BYTE PTR ds:[esi]
  408ab7:	(bad)  
  408ab8:	fisub  DWORD PTR [ebx+0x149ca67e]
  408abe:	mov    ebx,0x2b6e601d
  408ac3:	jecxz  0x408a8e
  408ac5:	(bad)  
  408ac6:	fwait
  408ac7:	cmp    al,0xbd
  408ac9:	pop    eax
  408aca:	cmp    DWORD PTR [edi+eax*8+0x33],ecx
  408ace:	dec    ecx
  408acf:	pop    ebp
  408ad0:	loope  0x408b00
  408ad2:	mov    edi,0x59b0fd4d
  408ad7:	mul    esp
  408ad9:	aaa    
  408ada:	inc    eax
  408adb:	fst    QWORD PTR [esi-0x7]
  408ade:	dec    esi
  408adf:	jo     0x408b0a
  408ae1:	or     ch,BYTE PTR [ecx-0x34a3cf9a]
  408ae7:	mov    al,0x6d
  408ae9:	fdiv   DWORD PTR [ecx-0x321d7452]
  408aef:	loope  0x408ae1
  408af1:	xor    bl,dl
  408af3:	lock test BYTE PTR [edx-0x39ec01cf],ch
  408afa:	mov    ch,0xf7
  408afc:	neg    DWORD PTR [edi+0x1c]
  408aff:	dec    ecx
  408b00:	data16 jae 0x408aea
  408b03:	mov    BYTE PTR [eax-0x798b1424],0x86
  408b0a:	inc    esi
  408b0b:	call   0xdcc20f
  408b10:	es xchg ecx,eax
  408b12:	mov    BYTE PTR [edx+eax*4],ah
  408b15:	cmp    eax,0x6e9f80c6
  408b1a:	and    DWORD PTR [ebp+ebx*8-0x76],edi
  408b1e:	call   0xe8921ac0
  408b23:	and    DWORD PTR [edi-0x77],edi
  408b26:	ds dec ecx
  408b28:	sub    eax,0x96afaa44
  408b2d:	adc    edx,DWORD PTR [edx-0x2b041d56]
  408b33:	call   0xb309d5b7
  408b38:	push   es
  408b39:	lods   eax,DWORD PTR ds:[esi]
  408b3a:	dec    ebx
  408b3b:	pop    es
  408b3c:	outs   dx,BYTE PTR ds:[esi]
  408b3d:	jp     0x408b7a
  408b3f:	ja     0x408aed
  408b41:	out    dx,al
  408b42:	out    dx,eax
  408b43:	sbb    al,0x76
  408b45:	hlt    
  408b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b47:	js     0x408b9f
  408b49:	jecxz  0x408b97
  408b4b:	(bad)  
  408b4c:	or     BYTE PTR [esp+ebp*2-0x16],dh
  408b50:	cmp    al,0xab
  408b52:	push   esi
  408b53:	jmp    0x349f:0x3a198751
  408b5a:	sbb    DWORD PTR [esi+0x77e75c75],edx
  408b60:	xor    eax,0xf7d61751
  408b65:	mov    edx,0xa00b840e
  408b6a:	xor    DWORD PTR [esi],ebx
  408b6c:	mov    dh,0x59
  408b6e:	into   
  408b6f:	xlat   BYTE PTR ds:[ebx]
  408b70:	mov    cl,0xc0
  408b72:	inc    esp
  408b73:	out    0x32,eax
  408b75:	fcomp  DWORD PTR [edx-0x2c]
  408b78:	push   esi
  408b79:	lds    ebp,FWORD PTR [ebx-0x1390581d]
  408b7f:	cmp    edi,esp
  408b81:	in     eax,0x82
  408b83:	sub    BYTE PTR [ecx],ah
  408b85:	or     ebx,DWORD PTR [eax-0x6b]
  408b88:	xor    eax,0x1bb3e505
  408b8d:	xchg   esp,eax
  408b8e:	xchg   ebx,eax
  408b8f:	jo     0x408bfd
  408b91:	jecxz  0x408ba6
  408b93:	add    dh,BYTE PTR [ebx+0x1]
  408b96:	lahf   
  408b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b98:	cmp    eax,0x17b27434
  408b9d:	sti    
  408b9e:	retf   
  408b9f:	sti    
  408ba0:	cli    
  408ba1:	dec    esp
  408ba2:	sbb    eax,0x80e4cb88
  408ba7:	daa    
  408ba8:	mov    al,ds:0x10f8589c
  408bad:	push   eax
  408bae:	inc    edx
  408baf:	daa    
  408bb0:	nop
  408bb1:	mov    edi,0x118620ae
  408bb6:	repz pop ebp
  408bb8:	or     ebp,edx
  408bba:	test   esp,ebx
  408bbc:	fdivr  DWORD PTR [eax-0x1744df49]
  408bc2:	push   ebp
  408bc3:	pop    edx
  408bc4:	sbb    eax,0x4c261f0
  408bc9:	push   edi
  408bca:	inc    eax
  408bcb:	inc    esp
  408bcc:	xor    al,0x56
  408bce:	stos   BYTE PTR es:[edi],al
  408bcf:	jg     0xfb153ac9
  408bd5:	(bad)  [edi-0x1176a6d0]
  408bdb:	xchg   ecx,eax
  408bdc:	ds mov dh,0x1d
  408bdf:	jae    0x408ba7
  408be1:	fsubr  QWORD PTR [eax-0x38d5c6e6]
  408be7:	icebp  
  408be8:	or     al,0xd4
  408bea:	iret   
  408beb:	add    ecx,DWORD PTR [ebp-0x7a43607c]
  408bf1:	lea    ebp,[eax+ecx*4]
  408bf4:	ss and al,0x8e
  408bf7:	mov    ebp,0x6f31cec7
  408bfc:	inc    edx
  408bfd:	jl     0x408b82
  408bff:	xor    al,0x29
  408c01:	or     BYTE PTR [edi-0x5bd54991],bl
  408c07:	out    dx,al
  408c08:	gs and BYTE PTR cs:[ecx],ah
  408c0c:	jne    0x408bb3
  408c0e:	imul   esp,DWORD PTR [ebp-0x60],0x494caff5
  408c15:	dec    esp
  408c16:	and    dh,BYTE PTR [ebx+eiz*8+0x44770c2a]
  408c1d:	mov    bl,0x72
  408c1f:	mov    bl,0xc4
  408c21:	fistp  DWORD PTR [edi]
  408c23:	push   esi
  408c24:	xor    eax,DWORD PTR [eax+ebp*8+0x21]
  408c28:	inc    ecx
  408c29:	jge    0x408c13
  408c2b:	in     eax,dx
  408c2c:	xchg   edx,eax
  408c2d:	mov    al,dl
  408c2f:	int    0x3e
  408c31:	ja     0x408c50
  408c33:	in     al,dx
  408c34:	cmp    ch,BYTE PTR ds:0xbe97b79b
  408c3a:	push   0x98699b0c
  408c3f:	mov    edi,DWORD PTR [ebp-0x33]
  408c42:	adc    eax,0xb08bd457
  408c47:	add    BYTE PTR [edx-0x552853e0],bh
  408c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4e:	xor    eax,0x260d4057
  408c53:	xchg   esp,eax
  408c54:	das    
  408c55:	push   0xe3275f54
  408c5a:	cmp    esi,edi
  408c5c:	adc    ah,0x17
  408c5f:	inc    esi
  408c60:	xor    eax,0x3544f695
  408c65:	inc    esi
  408c66:	dec    esi
  408c67:	pop    edx
  408c68:	(bad)
  408c6c:	test   al,0x46
  408c6e:	xchg   BYTE PTR [ecx],bl
  408c70:	jno    0x408cb5
  408c72:	pop    ds
  408c73:	mov    dh,0xee
  408c75:	add    ebp,DWORD PTR [edi]
  408c77:	jmp    0xa278:0x986cd4f0
  408c7e:	jne    0x408cc2
  408c80:	iret   
  408c81:	inc    esp
  408c82:	pop    edi
  408c83:	mov    eax,DWORD PTR [ecx-0x3b]
  408c86:	push   ebp
  408c87:	pop    ebp
  408c88:	dec    ebx
  408c89:	jbe    0x408ce8
  408c8b:	push   esi
  408c8c:	int    0x3d
  408c8e:	repnz (bad) 
  408c91:	and    BYTE PTR [esi],bh
  408c93:	fistp  QWORD PTR [ebx+edx*2]
  408c96:	ret    0x3d4a
  408c99:	shl    BYTE PTR [eax-0x7d2cea91],1
  408c9f:	aas    
  408ca0:	push   es
  408ca1:	fstp   st(4)
  408ca3:	mov    al,0x41
  408ca5:	push   0xf62d2904
  408caa:	jmp    0xad6e:0xe4ce4010
  408cb1:	mov    cs,ebx
  408cb3:	xchg   edi,eax
  408cb4:	call   0x7423:0xf92327a
  408cbb:	mov    eax,ds:0xbeff431f
  408cc0:	repnz adc BYTE PTR [esp],0xfc
  408cc5:	icebp  
  408cc6:	enter  0x9c73,0x99
  408cca:	dec    ebx
  408ccb:	loop   0x408d47
  408ccd:	xor    edx,esi
  408ccf:	jnp    0x408c5b
  408cd1:	ins    BYTE PTR es:[edi],dx
  408cd2:	sub    eax,0xce6643a1
  408cd7:	ror    DWORD PTR [ecx+eax*8+0x2b320658],cl
  408cde:	ss leave 
  408ce0:	pop    esi
  408ce1:	gs sub al,0x7c
  408ce4:	dec    ebx
  408ce5:	adc    al,0x61
  408ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce8:	mov    bh,0xf7
  408cea:	imul   ebp,DWORD PTR [ecx+0x27fc2ebb],0xd2fdaadd
  408cf4:	adc    edx,DWORD PTR [ebx+0x31578201]
  408cfa:	sub    DWORD PTR [edi+0x5f],edi
  408cfd:	push   eax
  408cfe:	and    eax,0xcd8b4ce
  408d03:	repz jmp 0xa85183c
  408d09:	jl     0x408cd0
  408d0b:	add    bh,BYTE PTR ds:0xb251a531
  408d11:	sar    ecx,1
  408d13:	xchg   al,bh
  408d15:	inc    ebx
  408d16:	jg     0x408d39
  408d18:	xchg   esi,eax
  408d19:	xor    al,BYTE PTR [eax]
  408d1b:	push   0x2b
  408d1d:	dec    ebx
  408d1e:	mov    ebx,0x4fb8618a
  408d23:	push   ds
  408d24:	jle    0x408d53
  408d26:	adc    ebp,edi
  408d28:	mov    bl,0x44
  408d2a:	xchg   eax,edi
  408d2c:	dec    edx
  408d2d:	jle    0x408cf9
  408d2f:	lock push ebp
  408d31:	push   cs
  408d32:	js     0x408cf7
  408d34:	cmp    BYTE PTR [esi],cl
  408d36:	add    eax,0xbb2f39fe
  408d3b:	jne    0x408d32
  408d3d:	mov    WORD PTR [ebp+0x27],gs
  408d40:	mov    gs,WORD PTR [ecx]
  408d42:	sbb    BYTE PTR [edx],ah
  408d44:	dec    ecx
  408d45:	cmp    DWORD PTR [edx+esi*4-0x7374535e],ebx
  408d4c:	out    0xd4,eax
  408d4e:	loope  0x408cec
  408d50:	ins    DWORD PTR es:[edi],dx
  408d51:	lods   al,BYTE PTR ds:[esi]
  408d52:	dec    eax
  408d53:	mov    bh,0xd1
  408d55:	sbb    ah,BYTE PTR [eax-0x288ed310]
  408d5b:	pusha  
  408d5c:	jmp    0xeff6d5d4
  408d61:	add    BYTE PTR [ecx-0x1],0x48
  408d65:	addr16 hlt 
  408d67:	inc    ebp
  408d68:	rcl    DWORD PTR [eax+0x6f],0xf0
  408d6c:	jmp    FWORD PTR [ebp+0x2865ab72]
  408d72:	dec    ecx
  408d73:	adc    ebp,DWORD PTR [edx+ebp*8+0x7e33956a]
  408d7a:	mov    ah,0x31
  408d7c:	les    ebp,FWORD PTR [eax+edi*2+0x1a]
  408d80:	in     al,dx
  408d81:	adc    eax,0x2f529043
  408d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d87:	inc    ebx
  408d88:	sti    
  408d89:	cmp    DWORD PTR [ecx],esi
  408d8b:	sub    ah,bh
  408d8d:	xchg   ebp,eax
  408d8e:	mov    ah,0x2f
  408d90:	std    
  408d91:	(bad)  
  408d92:	int3   
  408d93:	pop    ss
  408d94:	bound  esi,QWORD PTR [esi+0x78667f22]
  408d9a:	(bad)  
  408d9b:	cmp    al,0xf0
  408d9d:	mov    esi,0x710ec802
  408da2:	pop    ebx
  408da3:	aam    0xcf
  408da5:	dec    eax
  408da6:	(bad)  
  408da7:	iret   
  408da8:	push   0x4bd738f4
  408dad:	jnp    0x408da4
  408daf:	in     eax,dx
  408db0:	push   edi
  408db1:	rol    BYTE PTR [ebp+0x56550502],1
  408db7:	loop   0x408dbe
  408db9:	push   0x712a0347
  408dbe:	aad    0xdd
  408dc0:	adc    eax,DWORD PTR [edi]
  408dc2:	in     eax,dx
  408dc3:	sbb    eax,0x85098908
  408dc8:	das    
  408dc9:	add    edi,DWORD PTR [eax-0x2674a037]
  408dcf:	icebp  
  408dd0:	(bad)  
  408dd1:	clc    
  408dd2:	in     eax,dx
  408dd3:	mov    esp,0x4677917d
  408dd8:	fwait
  408dd9:	ret    
  408dda:	fdivr  DWORD PTR [ecx*1-0x2749bef6]
  408de1:	bound  ebx,QWORD PTR [eax+0x3d]
  408de4:	inc    edi
  408de5:	mov    bl,0xc3
  408de7:	or     eax,0xe439d6e0
  408dec:	xchg   ebx,eax
  408ded:	xor    eax,0x480b501a
  408df2:	push   0x2075de0b
  408df7:	add    al,0xc5
  408df9:	inc    edx
  408dfa:	out    dx,al
  408dfb:	inc    ebp
  408dfc:	ss mov dh,0xd2
  408dff:	lds    edi,FWORD PTR [esi+0x61]
  408e02:	fbstp  TBYTE PTR [edi]
  408e04:	mov    al,0x9b
  408e06:	add    ebx,DWORD PTR [edx+0x78]
  408e09:	popa   
  408e0a:	xchg   ecx,eax
  408e0b:	dec    ebp
  408e0c:	stos   BYTE PTR es:[edi],al
  408e0d:	xor    BYTE PTR [ecx-0x4e8bb8ab],dl
  408e13:	pop    ss
  408e14:	pop    ebx
  408e15:	xor    eax,0x7ee16f2e
  408e1a:	sbb    DWORD PTR [edi],ebx
  408e1c:	jg     0x408df8
  408e1e:	cs jb  0x408e57
  408e21:	mov    ebx,0x5add0007
  408e26:	push   ecx
  408e27:	and    dh,BYTE PTR [edi-0x79]
  408e2a:	(bad)  
  408e2c:	xchg   ebp,eax
  408e2d:	mov    eax,0xf6d1e9c1
  408e32:	pop    edi
  408e33:	push   ecx
  408e34:	push   eax
  408e35:	pop    edx
  408e36:	cld    
  408e37:	pop    esp
  408e38:	inc    edi
  408e39:	popf   
  408e3a:	cmp    BYTE PTR [ecx],ah
  408e3c:	adc    eax,0x2b762deb
  408e41:	cmovnp esi,DWORD PTR [eax+0x12]
  408e45:	out    dx,eax
  408e46:	xchg   esp,eax
  408e47:	sbb    DWORD PTR [esi-0x2f],esi
  408e4a:	jno    0x408dcf
  408e4c:	xchg   edx,eax
  408e4d:	cmp    cl,ah
  408e4f:	retf   
  408e50:	push   ebx
  408e51:	push   es
  408e52:	pop    es
  408e53:	sti    
  408e54:	addr16 xor al,0x9d
  408e57:	icebp  
  408e58:	xchg   ebx,eax
  408e59:	cs push 0xad242998
  408e5f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408e61:	sub    al,BYTE PTR ds:0x298a3665
  408e67:	xor    eax,0xd8146c26
  408e6c:	test   BYTE PTR [ebx+0x100c60a6],ch
  408e72:	pusha  
  408e73:	cmp    ch,cl
  408e75:	xchg   edx,eax
  408e76:	out    dx,eax
  408e77:	jno    0x408e9f
  408e79:	das    
  408e7a:	inc    esp
  408e7b:	call   0xe15ffffa
  408e80:	xchg   edx,eax
  408e81:	jl     0x408efa
  408e83:	add    eax,0x5aec2187
  408e88:	pop    esp
  408e89:	je     0x408e63
  408e8b:	cmp    BYTE PTR [edi+0x38],0x3
  408e8f:	imul   ebx,DWORD PTR [edx-0x72],0x4791ee56
  408e96:	repz jl 0x408e9a
  408e99:	sbb    eax,0xdc29e962
  408e9e:	push   0x6c
  408ea0:	out    0x1d,al
  408ea2:	mov    ebp,0xeefd40ca
  408ea7:	icebp  
  408ea8:	mov    bl,0xb8
  408eaa:	or     al,0x92
  408eac:	lock push edi
  408eae:	xor    ebx,DWORD PTR [esi-0x12]
  408eb1:	sbb    BYTE PTR [edx-0x5108493a],bh
  408eb7:	fcmovb st,st(7)
  408eb9:	ja     0x408e6d
  408ebb:	fisub  WORD PTR [eax-0x243b660f]
  408ec1:	xor    ah,dh
  408ec3:	mov    al,ds:0xddea5405
  408ec8:	imul   esp,ecx,0xeb548828
  408ece:	jb     0x408f2a
  408ed0:	mov    ebx,0xa179f86
  408ed5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408ed7:	mov    eax,0x59fca679
  408edc:	mov    ebx,0x6dc11b3f
  408ee1:	(bad)  
  408ee2:	fstp   DWORD PTR [ecx-0x29dd752c]
  408ee8:	xchg   ebx,eax
  408ee9:	test   al,0xc2
  408eeb:	inc    ebp
  408eec:	add    DWORD PTR ds:0x720510a6,0x5f
  408ef3:	sub    BYTE PTR [ebx+0x7a],0x77
  408ef7:	out    0x30,eax
  408ef9:	fistp  WORD PTR [edx]
  408efb:	and    ebp,DWORD PTR [ebp+0x35e76e8e]
  408f01:	sbb    ebp,esp
  408f03:	fidivr WORD PTR [edx+0x5ebf40f3]
  408f09:	sub    ch,ch
  408f0b:	data16 gs mov dl,0xb7
  408f0f:	xlat   BYTE PTR ds:[ebx]
  408f10:	ds pop esi
  408f12:	lea    ecx,[ebp-0x7]
  408f15:	clc    
  408f16:	test   BYTE PTR [ecx+0x2ac0755a],dl
  408f1c:	adc    edi,edi
  408f1e:	enter  0x4fb9,0x86
  408f22:	gs cdq 
  408f24:	push   ebp
  408f25:	js     0x408f73
  408f27:	or     al,0x3f
  408f29:	sbb    ax,0x36d7
  408f2d:	(bad)  
  408f2e:	mov    DWORD PTR [ebx-0x4a],0xccd97cee
  408f35:	cdq    
  408f36:	push   esi
  408f37:	in     eax,0x7d
  408f39:	les    edi,FWORD PTR ds:0x4252f62d
  408f3f:	pop    ebp
  408f40:	pop    edx
  408f41:	and    dl,BYTE PTR [edi+0x32]
  408f44:	lea    esp,[ecx-0x650c1b2f]
  408f4a:	push   edx
  408f4b:	xchg   esi,eax
  408f4c:	xchg   BYTE PTR [ebx+0x69857451],dl
  408f52:	sub    ebx,ebx
  408f54:	in     al,dx
  408f55:	hlt    
  408f56:	sti    
  408f57:	mov    al,al
  408f59:	adc    al,0x18
  408f5b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  408f5d:	jae    0x408f02
  408f5f:	pop    ebp
  408f60:	xor    dl,BYTE PTR [ebx-0x48]
  408f63:	pop    ss
  408f64:	push   ebp
  408f65:	cmp    ebx,DWORD PTR [edx]
  408f67:	in     al,dx
  408f68:	aam    0xa2
  408f6a:	mov    BYTE PTR [esi-0x153978af],dh
  408f70:	loopne 0x408f60
  408f72:	jnp    0x408f3c
  408f74:	or     esi,edi
  408f76:	dec    esi
  408f77:	inc    ebp
  408f78:	cmp    al,0xf2
  408f7a:	fs jmp 0xbaa6:0x30ec1507
  408f82:	mov    ebx,0xdda89ca9
  408f87:	pop    eax
  408f88:	mov    ss,WORD PTR [edx+ebx*4]
  408f8b:	mov    esp,0xff117e18
  408f90:	sub    cl,BYTE PTR [eax+edx*8]
  408f93:	cmp    ebx,edi
  408f95:	add    eax,0xe7c6803
  408f9a:	icebp  
  408f9b:	(bad)  
  408f9c:	js     0x408fcd
  408f9e:	sub    eax,0xd6e2583b
  408fa3:	push   ss
  408fa4:	clc    
  408fa5:	sbb    DWORD PTR [edx],0xbc81be9f
  408fab:	add    al,0x45
  408fad:	xchg   edi,eax
  408fae:	arpl   sp,bx
  408fb0:	and    BYTE PTR [ebp+0x3],0xb1
  408fb4:	xor    eax,0xc39cfa64
  408fb9:	dec    eax
  408fba:	js     0x408fb5
  408fbc:	aam    0x61
  408fbe:	mov    ebp,0x315d1371
  408fc3:	cmp    al,0x5f
  408fc5:	jg     0x408ff2
  408fc7:	lock jne 0x409036
  408fca:	ds call 0xbdd26cfc
  408fd0:	dec    esi
  408fd1:	(bad)  
  408fd3:	sub    ah,bl
  408fd5:	sbb    dh,BYTE PTR [edi+edi*1]
  408fd8:	jmp    0x7364:0x7653613c
  408fdf:	dec    edi
  408fe0:	sar    BYTE PTR [ebp-0x19],cl
  408fe3:	cmp    al,0x50
  408fe5:	adc    bl,al
  408fe7:	scas   eax,DWORD PTR es:[edi]
  408fe8:	xor    DWORD PTR [esi+0x56baef51],edx
  408fee:	and    eax,DWORD PTR [ecx]
  408ff0:	out    0x3a,al
  408ff2:	pop    eax
  408ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ff4:	(bad)  
  408ff6:	push   0x31
  408ff8:	mov    ds:0x3a01dd24,eax
  408ffd:	pushf  
  408ffe:	and    esp,DWORD PTR [edx+0x51528fc3]
  409004:	add    BYTE PTR [edx-0x2664306f],0xf4
  40900b:	hlt    
  40900c:	(bad)  
  40900d:	sub    ebp,DWORD PTR [ebp+0x22]
  409010:	sbb    al,0xef
  409012:	cmp    bh,dl
  409014:	mov    al,ds:0x72b73439
  409019:	mov    ch,0x52
  40901b:	jne    0x408feb
  40901d:	jle    0x408fe4
  40901f:	arpl   WORD PTR [esi+0x4a22097e],bp
  409025:	mov    ah,0x3d
  409027:	lods   al,BYTE PTR ds:[esi]
  409028:	add    BYTE PTR [esi+0x2befffa2],dl
  40902e:	cs cld 
  409030:	test   BYTE PTR ds:0xfc6182a3,dh
  409036:	add    eax,DWORD PTR [ebx]
  409038:	or     DWORD PTR [ebx-0x35],0x28
  40903c:	call   0x44f3:0x29781f59
  409043:	daa    
  409044:	arpl   WORD PTR ds:0xc42eaf2b,bx
  40904a:	inc    edx
  40904b:	dec    ebp
  40904c:	nop
  40904d:	xchg   esi,eax
  40904e:	pop    esp
  40904f:	sti    
  409050:	inc    ecx
  409051:	(bad)
  409054:	jbe    0x40909c
  409056:	bound  ebp,QWORD PTR ds:0xa403478a
  40905c:	clc    
  40905d:	test   BYTE PTR [ebx-0x50b82181],cl
  409063:	out    dx,eax
  409064:	sbb    DWORD PTR [ebx-0x18],0xa587b3ec
  40906b:	or     DWORD PTR [ecx],eax
  40906d:	mov    ebp,0xc059b2eb
  409072:	ret    
  409073:	xor    BYTE PTR [ebx],dl
  409075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409076:	out    0x46,eax
  409078:	adc    eax,0x2f479d35
  40907d:	add    eax,0xf1310a94
  409082:	fdiv   st(1),st
  409084:	inc    eax
  409085:	add    edx,esi
  409087:	add    BYTE PTR [ebx+0x53],ch
  40908a:	xor    eax,edi
  40908c:	test   dl,bl
  40908e:	lea    ecx,[eax-0x57773dd4]
  409094:	(bad)  
  409095:	pusha  
  409096:	and    esp,DWORD PTR [ecx+0x49d91a07]
  40909c:	retf   
  40909d:	adc    esi,DWORD PTR [esi]
  40909f:	mov    cl,0xf
  4090a1:	mov    ebx,0xbe952646
  4090a6:	and    al,0x37
  4090a8:	push   edi
  4090a9:	mov    bl,0x4a
  4090ab:	xchg   ebx,eax
  4090ac:	arpl   WORD PTR [ebp+0x6d],bx
  4090af:	xchg   edx,eax
  4090b0:	mov    WORD PTR [ebp+0x7e],ss
  4090b3:	add    BYTE PTR [eax-0x46439bfd],dh
  4090b9:	je     0x409086
  4090bb:	outs   dx,DWORD PTR ds:[esi]
  4090bc:	cmp    BYTE PTR ds:0xf31bd54f,cl
  4090c2:	sahf   
  4090c3:	mov    ch,0x7c
  4090c5:	add    bh,BYTE PTR [ecx-0x7f]
  4090c8:	xor    eax,0xa5e383b
  4090cd:	adc    al,0xd5
  4090cf:	inc    edx
  4090d0:	hlt    
  4090d1:	jnp    0x4090de
  4090d3:	jle    0x409146
  4090d5:	in     eax,dx
  4090d6:	dec    ebx
  4090d7:	mov    ds:0xe6cd1423,eax
  4090dc:	jl     0x40915c
  4090de:	sub    al,0xbb
  4090e0:	inc    ecx
  4090e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e2:	jle    0x409065
  4090e4:	lahf   
  4090e5:	xor    eax,DWORD PTR [ebp-0x43bcc1d1]
  4090eb:	cld    
  4090ec:	pop    edi
  4090ed:	xchg   edx,eax
  4090ee:	sub    eax,0x8c3d6c42
  4090f3:	repnz sub ch,BYTE PTR [ecx+0x40d89fb1]
  4090fa:	push   ecx
  4090fb:	sbb    bh,BYTE PTR [edx+0x65]
  4090fe:	aas    
  4090ff:	in     eax,dx
  409100:	xchg   dh,ah
  409102:	xchg   ebx,eax
  409103:	jge    0x409090
  409105:	repz cmp BYTE PTR [ebx+0x60621063],cl
  40910c:	pop    ss
  40910d:	daa    
  40910e:	lahf   
  40910f:	ret    0xe856
  409112:	sti    
  409113:	cmp    edx,DWORD PTR es:[eax-0x50]
  409117:	lods   al,BYTE PTR ds:[esi]
  409118:	retf   
  409119:	jecxz  0x4090e7
  40911b:	mov    ecx,0x879741f3
  409120:	ins    DWORD PTR es:[edi],dx
  409121:	daa    
  409122:	adc    DWORD PTR [esi],esi
  409124:	out    0x7d,eax
  409126:	cmp    esi,DWORD PTR [ebp+0x36a6d0be]
  40912c:	and    ah,BYTE PTR [eax]
  40912e:	inc    ecx
  40912f:	outs   dx,DWORD PTR ds:[esi]
  409130:	in     al,0x21
  409132:	pop    ebp
  409133:	(bad)  
  409134:	cwde   
  409135:	dec    ebx
  409136:	xor    ebx,DWORD PTR [edi+0x842e09b]
  40913c:	adc    dh,cl
  40913e:	cdq    
  40913f:	out    0xf7,al
  409141:	popf   
  409142:	loopne 0x4091c0
  409144:	xor    eax,0xb75a5204
  409149:	aad    0x13
  40914b:	add    edi,ecx
  40914d:	or     al,0x70
  40914f:	cmp    eax,0x375808b1
  409154:	adc    cl,BYTE PTR [ebx+0x23c9a07]
  40915a:	imul   edx,DWORD PTR [ebp-0x64],0x1ee03471
  409161:	xchg   edi,eax
  409162:	and    al,0xfd
  409164:	(bad)  
  409165:	xor    eax,edx
  409167:	(bad)  
  409168:	bnd jl 0x409171
  40916b:	out    dx,al
  40916c:	mov    edi,0x340412ac
  409171:	out    0xfd,al
  409173:	mov    cl,0xd4
  409175:	aad    0x9
  409177:	push   ebp
  409178:	shld   ebx,esp,0x3e
  40917c:	int    0xe1
  40917e:	xchg   edi,eax
  40917f:	dec    esi
  409180:	(bad)  
  409182:	adc    BYTE PTR [esi+ebx*4+0x41],0x5e
  409187:	sar    DWORD PTR [ebx-0x43],1
  40918a:	inc    edx
  40918b:	popf   
  40918c:	push   esi
  40918d:	mov    esi,0x824d9fe
  409192:	ret    0xdce0
  409195:	pop    edi
  409196:	sti    
  409197:	sub    al,0x58
  409199:	(bad)  
  40919a:	sbb    dh,0xc2
  40919d:	push   ds
  40919e:	mov    dl,0xf4
  4091a0:	(bad)  
  4091a1:	xlat   BYTE PTR ds:[ebx]
  4091a2:	adc    DWORD PTR [ebx],esi
  4091a4:	repz inc ebp
  4091a6:	(bad)  
  4091a7:	jl     0x4091b8
  4091a9:	sti    
  4091aa:	and    eax,0x559e81e0
  4091af:	test   al,0x56
  4091b1:	jno    0x409138
  4091b3:	jnp    0x40914c
  4091b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091b6:	and    al,0xa8
  4091b8:	push   edx
  4091b9:	outs   dx,BYTE PTR ds:[esi]
  4091ba:	retf   0xcb96
  4091bd:	sub    DWORD PTR [edx-0x3db1b3a5],eax
  4091c3:	gs mov al,0x31
  4091c6:	xor    al,BYTE PTR [esi+0x1a852c57]
  4091cc:	idiv   BYTE PTR [eax]
  4091ce:	add    DWORD PTR [esi+0x34c5878],0xcf5bec4c
  4091d8:	add    BYTE PTR [ebx+0x461f23cc],0x4
  4091df:	adc    dl,BYTE PTR [eax+edx*2]
  4091e2:	pop    es
  4091e3:	sbb    eax,0x31f41d09
  4091e8:	mov    eax,ds:0x11080c2
  4091ed:	test   cl,bl
  4091ef:	cdq    
  4091f0:	or     esp,DWORD PTR [esi+0x56e79cea]
  4091f6:	mov    esi,0xb9bf7fd1
  4091fb:	mov    ebx,0x131c7a44
  409200:	xor    al,0x2a
  409202:	dec    eax
  409203:	sub    ebx,DWORD PTR [esi+0x44102db1]
  409209:	mov    ch,0x70
  40920b:	xchg   ebx,eax
  40920c:	cli    
  40920d:	cmp    BYTE PTR [ecx-0x55f2e4aa],bh
  409213:	jge    0x4091bc
  409215:	retf   
  409216:	jo     0x4091b9
  409218:	xchg   esp,eax
  409219:	sbb    BYTE PTR [ebp+0x5d],al
  40921c:	mov    BYTE PTR [edi+0x68eaa9d8],0x24
  409223:	repz inc bx
  409226:	push   ebp
  409227:	(bad)  
  409228:	sbb    eax,0xcd0a5518
  40922d:	push   edi
  40922e:	fucomi st,st(4)
  409230:	jnp    0x40925e
  409232:	in     eax,0x74
  409234:	and    eax,0x5703e637
  409239:	and    eax,0x2725d1d6
  40923e:	ror    bl,0x77
  409241:	loope  0x409211
  409243:	call   0xf2527788
  409248:	jmp    0xe7c933c
  40924d:	test   cl,0x92
  409250:	jge    0x4092d0
  409252:	fadd   QWORD PTR [ebx-0x51]
  409255:	jne    0x4092ae
  409257:	(bad)  
  409258:	push   0x16
  40925a:	xor    cl,BYTE PTR [esi+0xa]
  40925d:	addr16 inc esi
  40925f:	mov    dl,0x78
  409261:	in     al,dx
  409262:	push   ecx
  409263:	stos   BYTE PTR es:[edi],al
  409264:	nop
  409265:	pop    ds
  409266:	mov    ?,WORD PTR [ebp-0x7d]
  409269:	sar    DWORD PTR [eax*1+0x535cf63a],0xd7
  409271:	xor    al,0x12
  409273:	pushf  
  409274:	sub    DWORD PTR [eax-0x31],eax
  409277:	push   ecx
  409278:	dec    ebp
  409279:	(bad)  
  40927a:	in     al,0x94
  40927c:	add    BYTE PTR [ebx-0x5d33abe4],bl
  409282:	icebp  
  409283:	fs (bad) 
  409286:	cmp    eax,0x9558b53e
  40928b:	cs (bad) 
  40928d:	nop
  40928e:	div    BYTE PTR [ecx-0x39]
  409291:	sub    eax,DWORD PTR [ebx-0x11]
  409294:	sub    al,0x5b
  409296:	xor    DWORD PTR [ebp+0x634d037a],esp
  40929c:	(bad)  
  40929d:	dec    ecx
  40929e:	fadd   QWORD PTR [edx+0x72]
  4092a1:	adc    ebx,edx
  4092a3:	enter  0x7b0d,0xc9
  4092a7:	mov    ah,0x13
  4092a9:	loope  0x4092ab
  4092ab:	stos   DWORD PTR es:[edi],eax
  4092ac:	fwait
  4092ad:	leave  
  4092ae:	mov    DWORD PTR ds:0xa2afdde3,0x9acc62a6
  4092b8:	jae    0x40930c
  4092ba:	mov    cs,ecx
  4092bc:	mov    edi,0x9e3ea265
  4092c1:	push   edx
  4092c2:	push   ebx
  4092c3:	and    eax,0xa3d034eb
  4092c8:	cmc    
  4092c9:	xchg   ebx,eax
  4092ca:	call   esi
  4092cc:	sbb    edx,ebp
  4092ce:	shl    DWORD PTR [esi],0x6d
  4092d1:	les    esp,FWORD PTR [esi+0x3a2560d7]
  4092d7:	push   esi
  4092d8:	gs (bad) 
  4092da:	enter  0xc93a,0xde
  4092de:	jl     0x4092c0
  4092e0:	xchg   ebp,eax
  4092e1:	or     eax,0xe01ec534
  4092e6:	mov    ah,0x1b
  4092e8:	jb     0x40933c
  4092ea:	adc    ecx,edi
  4092ec:	ret    0x4492
  4092ef:	stc    
  4092f0:	loope  0x4092cf
  4092f2:	push   ds
  4092f3:	int    0xe
  4092f5:	out    0x77,al
  4092f7:	not    BYTE PTR [ecx]
  4092f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fa:	add    DWORD PTR [esi],ebp
  4092fc:	shl    DWORD PTR [eax+edi*8+0x4d3faf1c],0x48
  409304:	xchg   ecx,eax
  409305:	stos   DWORD PTR es:[edi],eax
  409306:	jecxz  0x4092bb
  409308:	es jb  0x4092b2
  40930b:	repz ss cmp al,0x63
  40930f:	stc    
  409310:	inc    ecx
  409311:	xchg   esp,eax
  409312:	call   0x88034187
  409317:	xor    DWORD PTR [ecx+0x5b],ebx
  40931a:	imul   edx,DWORD PTR [ecx-0x6af8a029],0x393855ab
  409324:	dec    ebx
  409325:	jo     0x4092dc
  409327:	mov    ds:0xae604ad,al
  40932c:	or     ch,ch
  40932e:	test   eax,0x6f01cf04
  409333:	xor    esp,ecx
  409335:	call   0xa4f5:0x384ecb50
  40933c:	lock shl cl,cl
  40933f:	test   al,0x25
  409341:	bnd jb 0x40938d
  409344:	test   DWORD PTR [ebp+0x64b8c255],edi
  40934a:	mov    ds:0x3d74a07,eax
  40934f:	arpl   WORD PTR [ebp-0x55],cx
  409352:	les    edx,FWORD PTR [ebx+0x4a]
  409355:	out    dx,al
  409356:	pusha  
  409357:	sbb    ebx,DWORD PTR [eax-0x3d]
  40935a:	push   edx
  40935b:	std    
  40935c:	add    eax,DWORD PTR [ebp+0x57]
  40935f:	in     al,dx
  409360:	pusha  
  409361:	rcr    ecx,cl
  409363:	xor    eax,0x513ee27c
  409368:	xchg   DWORD PTR [edi],ebp
  40936a:	xchg   esi,eax
  40936b:	cmp    BYTE PTR [ebp-0x1e],ah
  40936e:	test   eax,0x44231a9a
  409373:	add    al,0x55
  409375:	ret    
  409376:	mov    al,ds:0x71446fec
  40937b:	ins    DWORD PTR es:[edi],dx
  40937c:	lahf   
  40937d:	sub    eax,0xb8ca9e65
  409382:	dec    eax
  409383:	cmc    
  409384:	not    DWORD PTR [edi]
  409386:	aas    
  409387:	sub    BYTE PTR [eax-0x6c5c4db8],ch
  40938d:	push   0x1c
  40938f:	push   DWORD PTR [ebx]
  409391:	ins    BYTE PTR es:[edi],dx
  409392:	inc    edi
  409393:	pop    es
  409394:	stos   BYTE PTR es:[edi],al
  409395:	stos   DWORD PTR es:[edi],eax
  409396:	ja     0x4093fc
  409398:	arpl   WORD PTR [edi+0xcf60cf1],cx
  40939e:	cld    
  40939f:	xchg   esi,eax
  4093a0:	jg     0x409328
  4093a2:	(bad)  
  4093a3:	sahf   
  4093a4:	scas   eax,DWORD PTR es:[edi]
  4093a5:	aaa    
  4093a6:	dec    eax
  4093a7:	push   0x3a
  4093a9:	xor    edi,0x6dd4998e
  4093af:	in     eax,dx
  4093b0:	pop    ss
  4093b1:	cmp    DWORD PTR [esi+0x47],edx
  4093b4:	jne    0x409354
  4093b6:	mov    dl,0x17
  4093b8:	sbb    eax,0xdb91efb2
  4093bd:	call   0x92fe:0x7aca0bea
  4093c4:	into   
  4093c5:	out    dx,eax
  4093c6:	idiv   DWORD PTR [edx]
  4093c8:	dec    edi
  4093c9:	gs nop
  4093cb:	cdq    
  4093cc:	sbb    ch,ch
  4093ce:	sbb    eax,0x1c0ba7b2
  4093d3:	gs (bad) 
  4093d5:	int    0xc9
  4093d7:	cmp    BYTE PTR [edi-0x2cbbaeec],al
  4093dd:	loop   0x4093dc
  4093df:	sub    eax,0x4712d729
  4093e4:	sbb    eax,0x8f2b9fc5
  4093e9:	push   edx
  4093ea:	jne    0x4093a0
  4093ec:	retf   0xc35c
  4093ef:	fcomp  QWORD PTR [eax]
  4093f1:	mul    BYTE PTR [edx-0x6c]
  4093f4:	outs   dx,BYTE PTR ds:[esi]
  4093f5:	(bad)  
  4093f6:	cmp    al,0xca
  4093f8:	dec    eax
  4093f9:	fwait
  4093fa:	xchg   esi,eax
  4093fb:	jp     0x40945d
  4093fd:	scas   eax,DWORD PTR es:[edi]
  4093fe:	jmp    0x409420
  409400:	mov    esp,0x1c5fadfe
  409405:	es pop es
  409407:	push   esp
  409408:	sbb    esi,esp
  40940a:	fistp  QWORD PTR [ebp-0x67]
  40940d:	call   FWORD PTR [edx-0xc081c90]
  409413:	call   0xb5a5:0x53072822
  40941a:	and    BYTE PTR [esi],0x6b
  40941d:	std    
  40941e:	dec    ebx
  40941f:	out    dx,al
  409420:	cmp    eax,DWORD PTR [ebx]
  409422:	repz push 0x297106f3
  409428:	inc    BYTE PTR [ebp+0x17]
  40942b:	adc    DWORD PTR [ebx+0x57298b47],0x123f0fd7
  409435:	inc    edx
  409436:	or     dl,BYTE PTR [ebp+0x64]
  409439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40943a:	and    al,0xb8
  40943c:	xor    eax,0x45a3b17
  409441:	pop    di
  409443:	jmp    0x4094ab
  409445:	pusha  
  409446:	js     0x409484
  409448:	mov    eax,0x32a978b
  40944d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40944e:	inc    edx
  40944f:	jo     0x40943d
  409451:	out    dx,al
  409452:	shl    DWORD PTR [ecx],1
  409454:	retf   0x8ffe
  409457:	mov    esp,0xc2a05ba1
  40945c:	or     dl,bh
  40945e:	sbb    bl,ch
  409460:	(bad)  
  409462:	pop    esp
  409463:	repz and dl,ch
  409466:	adc    eax,DWORD PTR [esi+0x19251c]
  40946c:	and    BYTE PTR ds:0x1c4b2ae0,cl
  409472:	repz aaa 
  409474:	pop    ebx
  409475:	cmp    al,0x7d
  409477:	and    edi,eax
  409479:	dec    edi
  40947a:	idiv   DWORD PTR [edi]
  40947c:	and    ah,0x42
  40947f:	retf   
  409480:	sti    
  409481:	ja     0x4094d6
  409483:	inc    edi
  409484:	pop    eax
  409485:	out    dx,eax
  409486:	jmp    0x5d7c:0x4baef5ea
  40948d:	cld    
  40948e:	lds    ebx,FWORD PTR [ebx]
  409490:	sbb    al,0x90
  409492:	pusha  
  409493:	dec    esp
  409494:	sub    eax,0x9021afaa
  409499:	test   eax,0x3703ef28
  40949e:	fbld   TBYTE PTR [edi+0x21]
  4094a1:	fwait
  4094a2:	xchg   esp,eax
  4094a3:	add    BYTE PTR [esi],bl
  4094a5:	and    al,0xe4
  4094a8:	repnz repz pop esp
  4094ab:	cs enter 0x8d86,0xfc
  4094b0:	pop    edx
  4094b1:	mov    ebp,DWORD PTR [esp+eax*2]
  4094b4:	dec    eax
  4094b5:	dec    esp
  4094b6:	cmc    
  4094b7:	dec    edi
  4094b8:	je     0x4094e1
  4094ba:	mov    eax,0xbfae2512
  4094bf:	(bad)  
  4094c0:	sub    eax,0x7903ba36
  4094c5:	sbb    DWORD PTR [eax],esi
  4094c7:	ret    0xb07c
  4094ca:	mov    al,0xa5
  4094cc:	lods   al,BYTE PTR ds:[esi]
  4094cd:	enter  0xba9c,0xa2
  4094d1:	scas   al,BYTE PTR es:[edi]
  4094d2:	sar    DWORD PTR [edi+edi*4],1
  4094d5:	loope  0x4094c0
  4094d7:	jb     0x4094b5
  4094d9:	xor    dh,BYTE PTR [edi+0x7a]
  4094dc:	and    BYTE PTR [edx+0x70],cl
  4094df:	add    DWORD PTR [esi+edi*1-0x1c],ecx
  4094e3:	(bad)  
  4094e4:	jl     0x40946a
  4094e6:	es jge 0x40948c
  4094e9:	test   dl,al
  4094eb:	jl     0x409512
  4094ed:	jle    0x40955a
  4094ef:	mov    dh,BYTE PTR [ebp-0x2fd3c180]
  4094f5:	cmp    ebp,DWORD PTR [esi+edi*8-0x47794f6b]
  4094fc:	jnp    0x409523
  4094fe:	push   esi
  4094ff:	sbb    cl,ch
  409501:	scas   al,BYTE PTR es:[edi]
  409502:	pop    edx
  409503:	pop    ds
  409504:	push   ecx
  409505:	ja     0x4094c7
  409507:	inc    edi
  409508:	xor    edx,0xffffffc0
  40950b:	mov    eax,0xde0cfd05
  409510:	xchg   ebp,eax
  409511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409512:	jnp    0x40949b
  409514:	ret    
  409515:	and    bh,cl
  409517:	or     al,0xc7
  409519:	dec    ebx
  40951a:	test   eax,0x8ba17153
  40951f:	hlt    
  409520:	jo     0x409563
  409522:	mov    dh,0xb9
  409524:	push   esp
  409525:	push   0xc894441f
  40952a:	ss and al,0x26
  40952d:	inc    esi
  40952e:	sub    BYTE PTR [ecx+0x45],ch
  409531:	ss out dx,eax
  409533:	sar    BYTE PTR [ebp+0x67],1
  409536:	xchg   esi,eax
  409537:	popa   
  409538:	push   ds
  409539:	adc    ch,cl
  40953b:	mov    edx,0x3aa21a14
  409540:	lidtd  [eax-0x34]
  409544:	stc    
  409545:	(bad)
  409548:	fimul  WORD PTR [esi]
  40954a:	stos   BYTE PTR es:[edi],al
  40954b:	xchg   ebx,eax
  40954c:	data16 fld DWORD PTR [ecx]
  40954f:	nop
  409550:	aad    0xd1
  409552:	mov    ds:0x2eaf3fac,eax
  409557:	add    esi,DWORD PTR [esi-0x498578b4]
  40955d:	and    al,0x51
  40955f:	lock test BYTE PTR [eax-0x19],al
  409563:	jb     0x409519
  409565:	jge    0x4095cf
  409567:	call   0x94cd:0x299622e8
  40956e:	ins    BYTE PTR es:[edi],dx
  40956f:	push   ds
  409570:	clc    
  409571:	enter  0x4e46,0x85
  409575:	adc    ebx,DWORD PTR [eax-0x5b]
  409578:	mov    al,0x13
  40957a:	scas   eax,DWORD PTR es:[edi]
  40957b:	test   BYTE PTR [ecx-0x50da23d9],ah
  409581:	jecxz  0x40955e
  409583:	mov    bl,0xac
  409585:	clc    
  409586:	call   0x79a9:0x2559e92b
  40958d:	xchg   ebp,eax
  40958e:	imul   edi,DWORD PTR [edi],0xffffffcd
  409591:	mov    bl,0xdb
  409593:	and    DWORD PTR [eax+0x1d],esp
  409596:	(bad)  
  409598:	dec    ebp
  409599:	nop
  40959a:	shl    ecx,cl
  40959c:	xchg   ebx,eax
  40959d:	adc    eax,0x5a7c2984
  4095a2:	shr    bh,0xcf
  4095a5:	or     esp,DWORD PTR [eax]
  4095a7:	inc    eax
  4095a8:	pushf  
  4095a9:	cmp    dl,BYTE PTR [eax+ebp*2+0x39ab5dc0]
  4095b0:	mov    al,dl
  4095b2:	or     ch,dl
  4095b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b5:	cmp    eax,0x616bbc22
  4095ba:	xchg   esp,eax
  4095bb:	mov    dh,BYTE PTR [ebx-0x3f418cb8]
  4095c1:	stc    
  4095c2:	es cs push edi
  4095c5:	and    DWORD PTR [eax+0x7a6afd80],ebp
  4095cb:	rol    BYTE PTR [edi+0x15346775],1
  4095d1:	push   esp
  4095d2:	mov    ebp,0xdb2ad94e
  4095d7:	sub    esi,0x54
  4095da:	fidiv  WORD PTR [esi+edx*1]
  4095dd:	retf   
  4095de:	jle    0x40956a
  4095e0:	leave  
  4095e1:	cs xchg esp,eax
  4095e3:	xchg   edx,eax
  4095e4:	jecxz  0x4095d8
  4095e6:	mov    ecx,DWORD PTR [ebx-0x5ef2b533]
  4095ec:	adc    dl,BYTE PTR [esi+0x7]
  4095ef:	outs   dx,BYTE PTR ds:[esi]
  4095f0:	jl     0x4095b2
  4095f2:	ror    BYTE PTR [esi+ebx*1+0x7b49f7a8],1
  4095f9:	rcl    BYTE PTR ds:0xfce06552,0x7c
  409600:	jg     0x409632
  409602:	push   esp
  409603:	iret   
  409604:	or     ebp,0x2d
  409607:	or     bh,BYTE PTR [ecx-0x29d9bb7c]
  40960d:	adc    ebp,DWORD PTR [ecx]
  40960f:	mov    ah,0x3e
  409611:	mov    edx,0x6057b23
  409616:	mov    eax,ds:0xf21e16b5
  40961b:	or     BYTE PTR [edx+0x6a],ah
  40961e:	dec    ecx
  40961f:	jge    0x4095ee
  409621:	cmp    dl,BYTE PTR [esi+0x13]
  409624:	sbb    ebp,DWORD PTR [ebp-0x4b]
  409627:	cwde   
  409628:	inc    eax
  409629:	gs pop esi
  40962b:	jnp    0x409688
  40962d:	mov    esi,0x13580d9a
  409632:	pop    ds
  409633:	lods   al,BYTE PTR ds:[esi]
  409634:	pop    esi
  409635:	data16 sbb al,0x4c
  409638:	push   esi
  409639:	fidiv  WORD PTR [edi]
  40963b:	aaa    
  40963c:	(bad)  
  40963d:	leave  
  40963e:	(bad)  
  40963f:	jp     0x4095d6
  409641:	push   ebp
  409642:	loopne 0x409630
  409644:	and    bl,BYTE PTR [esi]
  409646:	xchg   esp,eax
  409647:	loop   0x4096bc
  409649:	inc    eax
  40964a:	repz (bad) 
  40964c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40964d:	lahf   
  40964e:	add    BYTE PTR [edi],bh
  409650:	xchg   DWORD PTR ds:0xf9918ea5,esp
  409656:	int    0x8e
  409658:	lods   al,BYTE PTR ds:[esi]
  409659:	test   eax,0x56b0914f
  40965e:	jno    0x4096a7
  409660:	sub    al,0xf7
  409662:	repnz fsub QWORD PTR [edi-0x21]
  409666:	mov    edi,0xae46194c
  40966b:	dec    ebp
  40966c:	lock push cs
  40966e:	jae    0x40966b
  409670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409671:	addr16 mov bh,0x17
  409674:	sbb    cl,0xb9
  409677:	or     ecx,ebp
  409679:	mov    ebx,0x78d85948
  40967e:	jbe    0x409691
  409680:	jmp    0x771bedf7
  409685:	stc    
  409686:	iret   
  409687:	into   
  409688:	or     cl,BYTE PTR [ebp-0x3d122b64]
  40968e:	pop    esp
  40968f:	repnz out 0xde,eax
  409692:	push   esi
  409693:	shl    DWORD PTR [edi],1
  409695:	outs   dx,BYTE PTR ds:[esi]
  409696:	adc    dh,BYTE PTR [edx]
  409698:	call   0x28544d49
  40969d:	mov    bl,0x5b
  40969f:	dec    ebp
  4096a0:	dec    ebp
  4096a1:	out    0x2a,eax
  4096a3:	aam    0x5
  4096a5:	jp     0x409630
  4096a7:	fild   QWORD PTR [eax-0x6f]
  4096aa:	hlt    
  4096ab:	sar    BYTE PTR [edx],1
  4096ad:	ds sub dl,0x2b
  4096b1:	daa    
  4096b2:	inc    ecx
  4096b3:	aaa    
  4096b4:	jecxz  0x409710
  4096b6:	add    eax,0x4b4a1f0f
  4096bb:	imul   DWORD PTR [esi]
  4096bd:	addr16 popa 
  4096bf:	div    BYTE PTR [ebp-0x44]
  4096c2:	in     eax,0x67
  4096c4:	mov    edi,0xb5ef62cb
  4096c9:	push   cs
  4096ca:	pop    ds
  4096cb:	mov    ecx,0xe3eac505
  4096d0:	sub    dl,BYTE PTR [edi+0x9ce9525]
  4096d6:	repz iret 
  4096d8:	(bad)  [edx]
  4096da:	jl     0x4096c8
  4096dc:	outs   dx,DWORD PTR ds:[esi]
  4096dd:	int    0xfb
  4096df:	mov    edx,0xf7b9f100
  4096e4:	mov    al,0x57
  4096e6:	sbb    DWORD PTR [ebx-0x4050e245],0xce38d379
  4096f0:	pusha  
  4096f1:	rcl    DWORD PTR [ecx],1
  4096f3:	xchg   esp,eax
  4096f4:	jg     0x40976b
  4096f6:	lahf   
  4096f7:	mov    gs,eax
  4096f9:	mov    cl,0xbf
  4096fb:	fmul   st,st(5)
  4096fd:	add    DWORD PTR [edx],eax
  4096ff:	mov    bh,0x81
  409701:	stc    
  409702:	mov    eax,ds:0xcdb5d55
  409707:	cwde   
  409708:	mov    ecx,DWORD PTR [esi]
  40970a:	mov    bl,0x49
  40970c:	inc    edx
  40970d:	sbb    cl,BYTE PTR [ebp+0x187284d6]
  409713:	cwde   
  409714:	test   al,0xe0
  409716:	sub    al,0x25
  409718:	inc    edi
  409719:	and    eax,0xbc496ed6
  40971e:	mov    dh,0x4b
  409720:	(bad)  
  409721:	jp     0x4096f7
  409723:	jns    0x4096c9
  409725:	popf   
  409726:	sub    esp,DWORD PTR [edi]
  409728:	sub    BYTE PTR [edi+0x6a],dh
  40972b:	inc    esp
  40972c:	mov    ah,0x38
  40972e:	(bad)  
  409730:	in     eax,dx
  409731:	test   DWORD PTR [eax+0xd],edx
  409734:	shr    DWORD PTR [edx],0x13
  409737:	sbb    esi,DWORD PTR [eax]
  409739:	pusha  
  40973a:	xchg   BYTE PTR [ecx+0x1f],al
  40973d:	neg    cl
  40973f:	add    al,BYTE PTR [edx+eax*1]
  409742:	pop    edi
  409743:	add    ebx,DWORD PTR [edx]
  409745:	add    ebx,DWORD PTR [eax]
  409747:	in     al,dx
  409748:	jecxz  0x4096cf
  40974a:	dec    ecx
  40974b:	mov    BYTE PTR [eax+0x77],dh
  40974e:	jne    0x409716
  409750:	lahf   
  409751:	and    eax,DWORD PTR [esi+edx*4-0x7ffceff7]
  409758:	mov    ch,0x4e
  40975a:	jmp    0x24c5b58
  40975f:	mov    al,ds:0xbb87a080
  409764:	jne    0x40970a
  409766:	or     DWORD PTR [edx-0x28],ebx
  409769:	loop   0x409710
  40976b:	and    BYTE PTR [ebx-0x67],ch
  40976e:	or     al,0xe
  409770:	sbb    al,0xd4
  409772:	(bad)  
  409773:	sub    esi,DWORD PTR [ebx-0x51]
  409776:	adc    eax,0x1ba99da5
  40977b:	test   DWORD PTR [esi-0x7c],esi
  40977e:	arpl   WORD PTR [edi+0x1c],dx
  409781:	nop
  409782:	inc    edx
  409783:	xchg   edx,eax
  409784:	add    edi,DWORD PTR [edi-0x6b31daab]
  40978a:	arpl   WORD PTR [eiz*2+0x2bd78d2c],cx
  409791:	add    BYTE PTR [esp+ebx*4-0x23],bh
  409795:	mov    ch,0x73
  409797:	sbb    eax,0x98ccc797
  40979c:	jo     0x4097fb
  40979e:	mov    ds:0x5cb17ad9,al
  4097a3:	lahf   
  4097a4:	pop    es
  4097a5:	xor    edi,edi
  4097a7:	rol    BYTE PTR [ebx],cl
  4097a9:	fsubr  QWORD PTR [edx]
  4097ab:	xchg   edi,eax
  4097ac:	mov    ds:0xa5bed469,eax
  4097b1:	and    al,0xf5
  4097b3:	rcr    dh,1
  4097b5:	shl    esi,cl
  4097b7:	out    dx,eax
  4097b8:	push   eax
  4097b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ba:	push   ebx
  4097bb:	loopne 0x409774
  4097bd:	push   ds
  4097be:	stos   BYTE PTR es:[edi],al
  4097bf:	inc    esi
  4097c0:	lahf   
  4097c1:	clc    
  4097c2:	(bad)  
  4097c3:	sub    eax,0xd8e59103
  4097c8:	lods   al,BYTE PTR ds:[esi]
  4097c9:	xchg   edi,eax
  4097ca:	and    al,0xf3
  4097cc:	popa   
  4097cd:	xor    dh,BYTE PTR [esi+0x64]
  4097d0:	pop    es
  4097d1:	scas   eax,DWORD PTR es:[edi]
  4097d2:	enter  0x2739,0x8c
  4097d6:	or     ah,ah
  4097d8:	xchg   esi,eax
  4097d9:	in     eax,dx
  4097da:	or     al,0x33
  4097dc:	fdiv   QWORD PTR ds:0x88717f80
  4097e2:	aam    0x3f
  4097e4:	xlat   BYTE PTR ds:[ebx]
  4097e5:	popf   
  4097e6:	sub    eax,0x55812b74
  4097eb:	outs   dx,DWORD PTR ds:[esi]
  4097ec:	gs ja  0x40984c
  4097ef:	test   DWORD PTR [ebp+0x10],esp
  4097f2:	das    
  4097f3:	push   es
  4097f4:	mov    bh,0xb9
  4097f6:	imul   esp,DWORD PTR [edi-0x79],0xa2b651df
  4097fd:	call   FWORD PTR ds:0xe0ec9650
  409803:	or     eax,0xc97db953
  409808:	pop    ds
  409809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980a:	lods   eax,DWORD PTR ds:[esi]
  40980b:	jl     0x409795
  40980d:	fwait
  40980e:	adc    bl,ch
  409810:	fisub  WORD PTR [ebp+0x38]
  409813:	(bad)  
  409814:	scas   eax,DWORD PTR es:[edi]
  409815:	int    0xf
  409817:	add    eax,0xf3540634
  40981c:	inc    ebp
  40981d:	lods   eax,DWORD PTR ds:[esi]
  40981e:	add    al,0x25
  409820:	int3   
  409821:	cmp    edx,DWORD PTR [ecx+0x10]
  409824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409825:	rol    DWORD PTR [eax-0x2f69b1e6],cl
  40982b:	stc    
  40982c:	mov    ebp,0x169a45c2
  409831:	loop   0x409810
  409833:	ret    0xa071
  409836:	mov    ?,WORD PTR [esi]
  409838:	popa   
  409839:	cmp    esp,eax
  40983b:	dec    ebx
  40983c:	or     BYTE PTR [ecx],ah
  40983e:	cdq    
  40983f:	cmp    edi,ebx
  409841:	retf   
  409842:	dec    ecx
  409843:	pop    ecx
  409844:	daa    
  409845:	popf   
  409846:	mov    ch,0x4b
  409848:	and    eax,0xa4a51430
  40984d:	adc    eax,0xd932a7c9
  409852:	dec    ecx
  409853:	ins    BYTE PTR es:[edi],dx
  409854:	sub    ecx,edx
  409856:	outs   dx,DWORD PTR ds:[esi]
  409857:	mov    eax,esp
  409859:	(bad)  
  40985a:	scas   eax,DWORD PTR es:[edi]
  40985b:	cmc    
  40985c:	dec    eax
  40985d:	jno    0x40989f
  40985f:	push   ebp
  409860:	iret   
  409861:	jge    0x40983e
  409863:	arpl   WORD PTR [ebp+0x9],si
  409866:	(bad)  
  409867:	jg     0x4097f7
  409869:	mov    WORD PTR [eax],gs
  40986b:	mov    WORD PTR [ecx+0x34f0b757],gs
  409871:	mov    eax,0xbe9acbfb
  409876:	sub    ch,BYTE PTR [eax]
  409878:	sub    DWORD PTR [edx+0x5c],edx
  40987b:	loop   0x4098bb
  40987d:	mov    ds,esp
  40987f:	(bad)  
  409881:	cmp    edi,DWORD PTR [edi+ebp*2-0x1f]
  409885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409886:	jnp    0x4098dd
  409888:	jmp    0x5d31:0xaa04795c
  40988f:	push   ss
  409890:	adc    eax,0xa4d23db4
  409895:	outs   dx,BYTE PTR ds:[esi]
  409896:	popa   
  409897:	mov    BYTE PTR [ebp*8+0x24ee01ee],ah
  40989e:	leave  
  40989f:	cmp    eax,DWORD PTR [edi+ebp*1+0x349abb50]
  4098a6:	sub    al,BYTE PTR [eax]
  4098a8:	bound  esi,QWORD PTR [ecx+ecx*1-0x24780927]
  4098af:	shl    BYTE PTR [esp+eax*4+0xc],cl
  4098b3:	in     al,0x79
  4098b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098b6:	lea    edx,[esi+ebx*8]
  4098b9:	jne    0x409847
  4098bb:	dec    edi
  4098bc:	sub    esp,edi
  4098be:	add    DWORD PTR [esi+edi*8+0x22],eax
  4098c2:	out    dx,al
  4098c3:	sbb    bl,BYTE PTR [esi+eiz*4+0x38]
  4098c7:	out    dx,al
  4098c8:	sbb    al,0x4e
  4098ca:	pop    edi
  4098cb:	inc    ebx
  4098cc:	lods   eax,DWORD PTR ds:[esi]
  4098cd:	sub    al,0xd4
  4098cf:	cmc    
  4098d0:	and    BYTE PTR [esi+0x1a],cl
  4098d3:	inc    esp
  4098d4:	pop    edx
  4098d5:	jl     0x4098b6
  4098d7:	pop    ss
  4098d8:	mov    eax,0x5ed10358
  4098dd:	and    esi,DWORD PTR [edi]
  4098df:	sub    al,bl
  4098e1:	inc    esp
  4098e2:	jge    0x409890
  4098e4:	xchg   esp,eax
  4098e5:	test   eax,0x39fb6a4e
  4098ea:	or     eax,0xa39cd2b5
  4098ef:	popa   
  4098f0:	push   esi
  4098f1:	pop    ebp
  4098f2:	mov    es,WORD PTR [edx]
  4098f4:	xchg   ebp,eax
  4098f5:	ror    edx,0x7b
  4098f8:	sub    esp,DWORD PTR [edx+0x33]
  4098fb:	and    ah,BYTE PTR [edi-0x80]
  4098fe:	dec    ebp
  4098ff:	repnz mov ecx,0xdea41362
  409905:	mov    eax,ds:0xa0b25e1b
  40990a:	mov    ds:0x79487d5c,eax
  40990f:	fisub  DWORD PTR [ecx-0x11]
  409912:	leave  
  409913:	into   
  409914:	(bad)  
  409915:	xchg   ebp,eax
  409916:	and    bh,bh
  409918:	in     al,0xd6
  40991a:	push   ds
  40991b:	mov    edi,ss
  40991d:	mov    al,0x6
  40991f:	jp     0x409972
  409921:	shl    dl,0x1f
  409924:	xchg   esi,eax
  409925:	and    eax,0x38570bf8
  40992a:	push   ebx
  40992b:	fisttp WORD PTR [edx-0x4bfad26]
  409931:	adc    edi,DWORD PTR [ecx]
  409933:	sbb    DWORD PTR [ecx+0x3f],edi
  409936:	cli    
  409937:	out    dx,al
  409938:	shl    BYTE PTR [esi],0x17
  40993b:	ret    0xf982
  40993e:	call   0xbc30:0xaf064274
  409945:	out    dx,al
  409946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409947:	int    0x84
  409949:	(bad)  
  40994b:	push   ds
  40994c:	add    dh,BYTE PTR [ecx+0xe]
  40994f:	mov    esp,0xc701358f
  409954:	rep outs dx,BYTE PTR ds:[esi]
  409956:	xchg   ebp,eax
  409957:	push   esp
  409958:	fimul  WORD PTR [edx+0x75]
  40995b:	mov    ebp,0x2719adcd
  409960:	add    eax,0xe2df792d
  409965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409966:	pop    ecx
  409967:	pop    ss
  409968:	pop    ebp
  409969:	ss out dx,eax
  40996b:	lods   al,BYTE PTR ds:[esi]
  40996c:	mov    dh,0x3e
  40996e:	inc    eax
  40996f:	lds    esp,FWORD PTR [eax-0x4c]
  409972:	mov    bh,0x5e
  409974:	stc    
  409975:	inc    ebx
  409976:	jbe    0x409964
  409978:	aaa    
  409979:	aas    
  40997a:	cli    
  40997b:	xchg   esp,eax
  40997c:	push   ebx
  40997d:	into   
  40997e:	test   BYTE PTR [ecx-0x7c],ch
  409981:	or     al,0xb7
  409983:	pop    es
  409984:	pop    eax
  409985:	jmp    0x4099aa
  409987:	xor    al,0x47
  409989:	jg     0x4099f7
  40998b:	push   0xc88634e9
  409990:	dec    edx
  409991:	fidivr WORD PTR [esi]
  409993:	pusha  
  409994:	inc    esp
  409995:	scas   al,BYTE PTR es:[edi]
  409996:	jge    0x409996
  409998:	cmp    bh,ah
  40999a:	jg     0x409975
  40999c:	mov    ah,0x30
  40999e:	xchg   ebx,eax
  40999f:	sub    al,0x97
  4099a1:	mov    edx,0x8c78f15
  4099a6:	xchg   ebp,eax
  4099a7:	push   eax
  4099a8:	push   cs
  4099a9:	cmp    eax,DWORD PTR [eax+0x3e]
  4099ac:	inc    ebp
  4099ad:	aas    
  4099ae:	ins    BYTE PTR es:[edi],dx
  4099af:	scas   eax,DWORD PTR es:[edi]
  4099b0:	pop    ss
  4099b1:	mov    bh,0xa9
  4099b3:	and    BYTE PTR [edi+edi*8],ch
  4099b6:	and    BYTE PTR [edx+0x6c],bh
  4099b9:	mov    al,BYTE PTR [edi]
  4099bb:	stos   DWORD PTR es:[edi],eax
  4099bc:	repnz mov ecx,0xc4d6bd9a
  4099c2:	xor    bh,BYTE PTR [eax+0x37]
  4099c5:	mov    esp,0x9dc5be51
  4099ca:	inc    esp
  4099cb:	iret   
  4099cc:	add    ebp,DWORD PTR [edx-0x6f]
  4099cf:	sbb    ah,BYTE PTR [ebp-0x39]
  4099d2:	loop   0x409a4c
  4099d4:	gs call 0xf884c191
  4099da:	inc    eax
  4099db:	xchg   BYTE PTR [edx],al
  4099dd:	mov    dl,0xd1
  4099df:	outs   dx,DWORD PTR ds:[esi]
  4099e0:	stc    
  4099e1:	cmp    ecx,DWORD PTR [esi-0x10]
  4099e4:	jp     0x4099ce
  4099e6:	outs   dx,DWORD PTR ds:[esi]
  4099e7:	sti    
  4099e8:	pop    ecx
  4099e9:	sub    dl,bl
  4099eb:	or     ch,cl
  4099ed:	push   edx
  4099ee:	mov    ebp,0xed5295a0
  4099f3:	cmp    esi,DWORD PTR [esi+0x3d]
  4099f6:	sbb    edi,0x42ad6274
  4099fc:	mov    bl,0x4
  4099fe:	pop    ds
  4099ff:	(bad)  
  409a00:	or     ch,BYTE PTR [ebx-0x75d7422c]
  409a06:	jae    0x409993
  409a08:	push   cs
  409a09:	sbb    eax,0xa673dfe3
  409a0e:	sar    dl,cl
  409a10:	inc    ebp
  409a11:	adc    ch,ch
  409a13:	or     BYTE PTR [edi-0x1912e865],dl
  409a19:	gs leave 
  409a1b:	xchg   esp,eax
  409a1c:	push   esp
  409a1d:	leave  
  409a1e:	pop    esi
  409a1f:	lds    ebx,FWORD PTR [edi]
  409a21:	div    DWORD PTR [ebp+esi*1+0x66c61df2]
  409a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a29:	push   edi
  409a2a:	push   ds
  409a2b:	push   ecx
  409a2c:	jle    0x4099fa
  409a2e:	repz xchg edi,eax
  409a30:	jl     0x409aae
  409a32:	sbb    al,0x6e
  409a34:	xchg   DWORD PTR [edx-0x2b],esp
  409a37:	or     DWORD PTR [esi+0x62],edi
  409a3a:	(bad)  
  409a3b:	pop    ebp
  409a3c:	cld    
  409a3d:	push   cs
  409a3e:	pusha  
  409a3f:	stos   DWORD PTR es:[edi],eax
  409a40:	jl     0x409a02
  409a42:	outs   dx,DWORD PTR ds:[esi]
  409a43:	scas   eax,DWORD PTR es:[edi]
  409a44:	sbb    ch,bl
  409a46:	idiv   DWORD PTR [esi]
  409a48:	jbe    0x409a52
  409a4a:	cmp    BYTE PTR [eax-0x9],dl
  409a4d:	dec    ebx
  409a4e:	dec    ecx
  409a4f:	mov    al,0x75
  409a51:	retf   
  409a52:	clc    
  409a53:	sbb    DWORD PTR [edi+0x671e36bd],ebp
  409a59:	pop    esp
  409a5a:	ret    0x1ef3
  409a5d:	xchg   esp,eax
  409a5e:	js     0x409ad8
  409a60:	dec    esi
  409a61:	mov    al,ds:0x8c4e2f86
  409a66:	lock pop ebx
  409a68:	inc    ebp
  409a69:	rcr    BYTE PTR [esi-0x704a5b01],cl
  409a6f:	pop    ebp
  409a70:	mov    ah,0xd7
  409a72:	mov    ebx,0xf0843dcb
  409a77:	and    al,0x24
  409a79:	jnp    0x409a22
  409a7b:	pushf  
  409a7c:	loope  0x409ae7
  409a7e:	inc    ecx
  409a7f:	ins    DWORD PTR es:[edi],dx
  409a80:	mov    cs,edx
  409a82:	xor    bh,dl
  409a84:	mov    ebp,0xc49c3fe1
  409a89:	dec    ebx
  409a8a:	push   esi
  409a8b:	and    al,BYTE PTR [edi+0x76ba552d]
  409a91:	stos   BYTE PTR es:[edi],al
  409a92:	adc    BYTE PTR [ebp+0x30e250eb],dh
  409a98:	ins    BYTE PTR es:[edi],dx
  409a99:	sbb    BYTE PTR [ebx-0x69],bl
  409a9c:	xchg   esp,eax
  409a9d:	adc    esi,0x900e5f02
  409aa3:	repz pop ds
  409aa5:	pop    edi
  409aa6:	add    DWORD PTR [edi+0x7f],ebx
  409aa9:	jl     0x409ac1
  409aab:	push   ecx
  409aac:	test   eax,esi
  409aae:	bnd ret 0x180f
  409ab2:	fidiv  DWORD PTR ds:0x2bc01538
  409ab8:	inc    esp
  409ab9:	push   0x62
  409abb:	jns    0x409a63
  409abd:	outs   dx,BYTE PTR ds:[esi]
  409abe:	cli    
  409abf:	hlt    
  409ac0:	ret    0x99d9
  409ac3:	mov    eax,0x1f60d49a
  409ac8:	fst    DWORD PTR [eax+0x62b3106f]
  409ace:	cld    
  409acf:	inc    edi
  409ad0:	pop    ecx
  409ad1:	in     eax,0x8a
  409ad3:	ret    
  409ad4:	in     al,0xa5
  409ad6:	sub    eax,0x57268d0d
  409adb:	pop    edx
  409adc:	dec    edx
  409add:	push   es
  409ade:	push   esi
  409adf:	mov    esi,0xdc2d5d3f
  409ae4:	add    ah,BYTE PTR [esi+0x4d]
  409ae7:	fst    QWORD PTR [eax]
  409ae9:	lea    esi,[esi-0x3b7f1113]
  409aef:	(bad)  [edi+ebp*2]
  409af2:	dec    ebp
  409af3:	frstor ds:0x11d27b58
  409af9:	and    BYTE PTR [edx-0x53],dh
  409afc:	imul   ebp,DWORD PTR cs:[edi+0x41a962fc],0x1e
  409b04:	jbe    0x409b30
  409b06:	push   esi
  409b07:	dec    esi
  409b08:	lea    edx,[esi]
  409b0a:	lods   eax,DWORD PTR ds:[esi]
  409b0b:	xor    ch,BYTE PTR fs:[ecx+0x6f]
  409b0f:	mov    al,BYTE PTR [esi+0x5fba5eac]
  409b15:	(bad)  
  409b16:	fst    QWORD PTR [esi+eax*2+0x14adb21e]
  409b1d:	repnz push esp
  409b1f:	mov    bh,0x10
  409b21:	jmp    0xe583d233
  409b26:	push   0xc11cc7d0
  409b2b:	dec    esi
  409b2c:	jbe    0x409aed
  409b2e:	mov    eax,ds:0x8816c52c
  409b33:	push   edx
  409b34:	repnz (bad) 
  409b36:	aaa    
  409b37:	js     0x409add
  409b39:	fcmovu st,st(5)
  409b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3c:	sub    eax,0xdcb91348
  409b41:	int    0xc7
  409b43:	test   esp,ebp
  409b45:	push   edx
  409b46:	add    DWORD PTR [ecx-0x4a],esp
  409b49:	sar    BYTE PTR [edx+ebp*4-0x597f63f5],0x38
  409b51:	dec    esp
  409b52:	xchg   ecx,eax
  409b53:	enter  0x427a,0xb0
  409b57:	push   0x4f241bc
  409b5c:	xor    dl,BYTE PTR [edx+ebp*1-0x58]
  409b60:	jo     0x409b1d
  409b62:	inc    ebp
  409b63:	ret    
  409b64:	ret    0xcecb
  409b67:	inc    ecx
  409b68:	aam    0x22
  409b6a:	in     al,0x8e
  409b6c:	push   edx
  409b6d:	cmp    al,0x3e
  409b6f:	and    bl,BYTE PTR [ecx+edx*1]
  409b72:	aaa    
  409b73:	fwait
  409b74:	lods   al,BYTE PTR ds:[esi]
  409b75:	in     eax,dx
  409b76:	sbb    ebp,0xfffffff2
  409b79:	out    dx,al
  409b7a:	dec    esi
  409b7b:	mov    eax,DWORD PTR [edi-0x5af3d8cf]
  409b81:	push   cs
  409b82:	mov    ebp,0x5a93bb2d
  409b87:	(bad)  
  409b88:	mov    esp,0x8bf139e3
  409b8d:	test   DWORD PTR [ebx],ebp
  409b8f:	fist   WORD PTR [edx]
  409b91:	test   eax,0xe35ef15a
  409b96:	(bad)  
  409b98:	and    al,0x72
  409b9a:	imul   ah
  409b9c:	mov    ds:0xa49546e9,eax
  409ba1:	pusha  
  409ba2:	mov    ch,0xb5
  409ba4:	cmp    ebx,ecx
  409ba6:	enter  0xdda3,0x33
  409baa:	pop    es
  409bab:	push   ss
  409bac:	mov    bh,0x8e
  409bae:	or     edi,DWORD PTR ds:0x504643ce
  409bb4:	js     0x409b8c
  409bb6:	loope  0x409bb0
  409bb8:	xor    DWORD PTR [ebx],0xffffffbb
  409bbb:	pop    edx
  409bbc:	in     eax,0xb3
  409bbe:	mov    edi,0x23903dd2
  409bc3:	fs out 0x3b,eax
  409bc6:	stos   DWORD PTR es:[edi],eax
  409bc7:	out    dx,al
  409bc8:	ficom  DWORD PTR [edx]
  409bca:	push   ecx
  409bcb:	into   
  409bcc:	pop    es
  409bcd:	mov    al,0xff
  409bcf:	fidivr DWORD PTR [eax+0x31]
  409bd2:	mov    ds:0x1d556035,al
  409bd7:	lahf   
  409bd8:	cli    
  409bd9:	out    0x86,eax
  409bdb:	sub    DWORD PTR [ecx-0x62461ff8],esi
  409be1:	lods   al,BYTE PTR ds:[esi]
  409be2:	mov    eax,ds:0xffa28b6e
  409be7:	sub    al,0xa4
  409be9:	lea    esi,[edi+0x7635d853]
  409bef:	push   esi
  409bf0:	xor    al,0xdc
  409bf2:	out    0xb1,eax
  409bf4:	push   ebx
  409bf5:	mov    BYTE PTR [edx-0x715baf17],dh
  409bfb:	inc    esp
  409bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bfd:	clc    
  409bfe:	aaa    
  409bff:	sbb    BYTE PTR [ebp+0x8f41ed1],0x60
  409c06:	ins    DWORD PTR es:[edi],dx
  409c07:	cmp    dl,al
  409c09:	shl    ebx,cl
  409c0b:	cli    
  409c0c:	dec    ebp
  409c0d:	mov    ?,WORD PTR [ecx]
  409c0f:	call   0xf4ef:0xad0e6514
  409c16:	push   0xfffffff5
  409c18:	cmp    al,BYTE PTR [esi-0x392edd5d]
  409c1e:	sub    cl,BYTE PTR [ecx+0x16]
  409c21:	loopne 0x409bdd
  409c23:	adc    eax,0x7fbdf931
  409c28:	dec    esi
  409c29:	sbb    dh,bh
  409c2b:	jecxz  0x409c88
  409c2d:	shr    DWORD PTR [ebx-0x480da42a],cl
  409c33:	test   edi,ecx
  409c35:	mov    ds:0xa4331f42,eax
  409c3a:	cld    
  409c3b:	push   ds
  409c3c:	xor    ebp,DWORD PTR es:[edi]
  409c3f:	std    
  409c40:	inc    ebp
  409c41:	or     eax,0x1298e2a4
  409c46:	(bad)
  409c4a:	call   0x74fe2443
  409c4f:	push   eax
  409c50:	cmp    BYTE PTR [esi-0x22],cl
  409c53:	dec    eax
  409c54:	sbb    al,0x5b
  409c56:	sub    ecx,edx
  409c58:	inc    ebp
  409c59:	sub    esp,DWORD PTR [ecx-0x5f]
  409c5c:	or     BYTE PTR [edi+ecx*8-0x1901dc6a],cl
  409c63:	hlt    
  409c64:	retf   
  409c65:	pop    ss
  409c66:	xor    eax,0xb6e33f26
  409c6b:	and    esi,DWORD PTR [ebp+0x799190cf]
  409c71:	lahf   
  409c72:	ins    BYTE PTR es:[edi],dx
  409c73:	adc    dl,BYTE PTR [ebp+0x3ed815b4]
  409c79:	fild   DWORD PTR [edi]
  409c7b:	mov    ebx,0x253a324
  409c80:	cli    
  409c81:	lods   al,BYTE PTR ds:[esi]
  409c82:	dec    ebx
  409c83:	mov    dl,0xc0
  409c85:	fisub  DWORD PTR [eax]
  409c87:	lea    ecx,[eax]
  409c89:	shr    BYTE PTR [edi-0x9],cl
  409c8c:	mov    eax,ds:0xe9c24d09
  409c91:	pop    esi
  409c92:	mov    WORD PTR [edx+eax*8+0x565e45e2],gs
  409c99:	pop    ss
  409c9a:	ret    
  409c9b:	pop    ebp
  409c9c:	out    0x50,eax
  409c9e:	dec    ebx
  409c9f:	pusha  
  409ca0:	aad    0x37
  409ca2:	test   BYTE PTR [ebp+0x4d2dc6d8],ah
  409ca8:	sub    al,0xf5
  409caa:	stc    
  409cab:	pusha  
  409cac:	fld    DWORD PTR [ecx+0x42]
  409caf:	fdiv   QWORD PTR [eax-0x49]
  409cb2:	sub    bl,0x25
  409cb5:	inc    ebp
  409cb6:	xchg   ebx,eax
  409cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb8:	push   es
  409cb9:	dec    eax
  409cba:	pop    esi
  409cbb:	call   0x2bc3:0xd528bbb4
  409cc2:	push   es
  409cc3:	inc    esi
  409cc4:	outs   dx,BYTE PTR ds:[esi]
  409cc5:	or     eax,0xafafbf82
  409cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ccb:	jno    0x409d26
  409ccd:	jno    0x409cd9
  409ccf:	and    al,0x19
  409cd1:	bound  ebp,QWORD PTR [ecx-0x2b8911cc]
  409cd7:	cmp    al,0x9c
  409cd9:	adc    bl,BYTE PTR [ecx]
  409cdb:	fiadd  WORD PTR [eax+0x55]
  409cde:	cli    
  409cdf:	popa   
  409ce0:	fs inc ebp
  409ce2:	out    0x7f,al
  409ce4:	and    eax,esp
  409ce6:	inc    eax
  409ce7:	mov    eax,ds:0xdb05165
  409cec:	out    dx,eax
  409ced:	adc    al,0xdc
  409cef:	push   esi
  409cf0:	fist   DWORD PTR ds:0x542607f7
  409cf6:	adc    dh,dh
  409cf8:	dec    BYTE PTR ds:0xbecf5c5b
  409cfe:	outs   dx,BYTE PTR ds:[esi]
  409cff:	daa    
  409d00:	sub    dl,bh
  409d02:	jb     0x409d26
  409d04:	ficomp WORD PTR [edi+edi*8-0x1a5c4114]
  409d0b:	scas   eax,DWORD PTR es:[edi]
  409d0c:	mov    al,0xd0
  409d0e:	sub    eax,0x87901da5
  409d13:	loope  0x409d50
  409d15:	mov    cl,0x57
  409d17:	adc    bl,bh
  409d19:	js     0x409d77
  409d1b:	adc    BYTE PTR [ebx-0x28],al
  409d1e:	adc    BYTE PTR [esi+0x15b33484],al
  409d24:	adc    al,BYTE PTR [eax+0x2e]
  409d27:	sub    dh,dl
  409d29:	imul   ecx,ebp,0x758b1d05
  409d2f:	or     BYTE PTR [edx],al
  409d31:	lods   eax,DWORD PTR ds:[esi]
  409d32:	cmp    eax,0x4c548958
  409d37:	jo     0x409d4a
  409d39:	pop    edi
  409d3a:	mov    DWORD PTR [ecx-0x5b],edx
  409d3d:	fadd   st(0),st
  409d3f:	leave  
  409d40:	test   al,0xdf
  409d42:	dec    eax
  409d43:	jmp    0x45e7:0x2863a837
  409d4a:	pop    ebx
  409d4b:	repz inc ecx
  409d4d:	add    eax,0xec52fd9b
  409d53:	mov    cl,BYTE PTR [esi]
  409d55:	and    bh,dh
  409d57:	mov    DWORD PTR [ebx+0x134b619d],0x22231bac
  409d61:	cmp    eax,0x1d86947e
  409d66:	push   ecx
  409d67:	imul   edi,ebp,0x72bf4be5
  409d6d:	addr16 fwait
  409d6f:	pop    es
  409d70:	mov    BYTE PTR [eax-0x5b4deb31],bh
  409d76:	cli    
  409d77:	ja     0x409dc5
  409d79:	and    BYTE PTR [eax-0x37476bd0],bh
  409d7f:	inc    ecx
  409d80:	xchg   edi,eax
  409d81:	push   ecx
  409d82:	mov    BYTE PTR [ecx+0xf20d838],dl
  409d88:	in     eax,dx
  409d89:	pusha  
  409d8a:	div    DWORD PTR [edi+0x5626902b]
  409d90:	inc    esp
  409d91:	pop    esp
  409d92:	or     edi,esi
  409d94:	pop    edx
  409d95:	push   esi
  409d96:	jnp    0x409e0d
  409d98:	loopne 0x409e09
  409d9a:	sahf   
  409d9b:	fwait
  409d9c:	inc    ebp
  409d9d:	je     0x409da0
  409d9f:	xchg   DWORD PTR [eax-0x5e],eax
  409da2:	inc    ebx
  409da3:	test   DWORD PTR ds:0xfb628d7d,edx
  409da9:	mov    al,0xac
  409dab:	aam    0xe5
  409dad:	je     0x409de7
  409daf:	jecxz  0x409d88
  409db1:	out    0x4,eax
  409db3:	sbb    ecx,DWORD PTR [ebp*2+0x109d0f34]
  409dba:	fcomi  st,st(6)
  409dbc:	jae    0x409d96
  409dbe:	sbb    al,0xee
  409dc0:	mov    cl,0x45
  409dc2:	add    ah,BYTE PTR [ebx-0x4ac40083]
  409dc8:	or     BYTE PTR [ebx],al
  409dca:	dec    ebp
  409dcb:	cli    
  409dcc:	cmp    cl,ah
  409dce:	loop   0x409e2b
  409dd0:	cld    
  409dd1:	(bad)  
  409dd2:	xchg   esp,eax
  409dd3:	cmp    ah,BYTE PTR [esi+ecx*2-0x5080a4cb]
  409dda:	or     DWORD PTR ds:0x4961f7de,ecx
  409de0:	(bad)  
  409de1:	cmp    esp,ecx
  409de3:	mov    esp,0x15d77156
  409de8:	xchg   esi,eax
  409de9:	ds inc ecx
  409deb:	loop   0x409e54
  409ded:	shl    eax,0xf6
  409df0:	mov    ch,0x75
  409df2:	lods   eax,DWORD PTR ds:[esi]
  409df3:	ret    
  409df4:	dec    eax
  409df5:	ja     0x409dcf
  409df7:	(bad)  
  409df8:	cwde   
  409df9:	popf   
  409dfa:	ret    0x6e67
  409dfd:	adc    DWORD PTR [esi],0x146a65e1
  409e03:	add    eax,0xca8e19db
  409e08:	push   ss
  409e09:	dec    ebx
  409e0a:	leave  
  409e0b:	outs   dx,DWORD PTR ds:[esi]
  409e0c:	outs   dx,BYTE PTR ds:[esi]
  409e0d:	popa   
  409e0e:	pop    es
  409e0f:	or     al,BYTE PTR [edi+ebx*2-0x1d]
  409e13:	mov    WORD PTR [eax],gs
  409e15:	call   0x56a50217
  409e1a:	rol    DWORD PTR [eiz*8+0xcc64d0b],0xb5
  409e22:	test   BYTE PTR [ebx-0x39d45e55],bh
  409e28:	out    dx,eax
  409e29:	sahf   
  409e2a:	imul   ebx,DWORD PTR [eax+0x7b],0xe095aa1b
  409e31:	ins    BYTE PTR es:[edi],dx
  409e32:	push   ebx
  409e33:	add    bh,al
  409e35:	adc    ax,di
  409e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e39:	lahf   
  409e3a:	push   0x9dc3064f
  409e3f:	cwde   
  409e40:	xor    eax,0x241b54ca
  409e45:	aad    0x31
  409e47:	or     ah,BYTE PTR [edi-0x5b]
  409e4a:	call   0xd54a:0xb0d2b434
  409e51:	fsubp  st(2),st
  409e53:	aas    
  409e54:	mov    al,0x52
  409e56:	sub    al,0xad
  409e58:	push   0xffffffcf
  409e5a:	fwait
  409e5b:	jp     0x409e08
  409e5d:	pop    ecx
  409e5e:	add    al,0x63
  409e60:	icebp  
  409e61:	mov    BYTE PTR [edx],dh
  409e63:	ins    BYTE PTR es:[edi],dx
  409e64:	mov    eax,0xcb208a2a
  409e69:	push   0x6050865c
  409e6e:	inc    edx
  409e6f:	addr16 int 0x61
  409e72:	sbb    eax,ecx
  409e74:	aam    0x20
  409e76:	or     esp,eax
  409e78:	lea    edx,[ebp+0x42f99a2a]
  409e7e:	xchg   DWORD PTR [edi-0x1bcbe233],edx
  409e84:	cmp    eax,0x241b4d1c
  409e89:	and    esp,DWORD PTR [edi]
  409e8b:	out    dx,al
  409e8c:	les    eax,FWORD PTR [edi+edi*1+0x62]
  409e90:	cwde   
  409e91:	mov    ecx,0x9ec9ae9d
  409e96:	pop    ss
  409e97:	scas   al,BYTE PTR es:[edi]
  409e98:	pusha  
  409e99:	into   
  409e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e9b:	pop    ss
  409e9c:	and    ecx,DWORD PTR [ebp*8+0x21e7a8ee]
  409ea3:	stc    
  409ea4:	iret   
  409ea5:	xor    al,0xc3
  409ea7:	stos   BYTE PTR es:[edi],al
  409ea8:	or     al,0xd0
  409eaa:	fidivr WORD PTR [ecx-0x1b]
  409ead:	adc    ebx,DWORD PTR [edi+ebp*8+0x2800a862]
  409eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eb5:	cli    
  409eb6:	outs   dx,BYTE PTR ds:[esi]
  409eb7:	mov    eax,ds:0x2dbe78ec
  409ebc:	test   eax,0x1c2b56e2
  409ec1:	or     BYTE PTR [ecx+0xa],dl
  409ec4:	shl    DWORD PTR [esi-0x5059f28c],cl
  409eca:	cmp    BYTE PTR [esp+ebx*8],ah
  409ecd:	mov    esi,ds
  409ecf:	stos   DWORD PTR es:[edi],eax
  409ed0:	clc    
  409ed1:	add    ah,BYTE PTR [ecx+0x60763b7a]
  409ed7:	adc    ch,BYTE PTR [edx+0x22719bcb]
  409edd:	mov    edi,0x2b907d2e
  409ee2:	mov    esp,0x7330347f
  409ee7:	push   ecx
  409ee8:	xchg   ebx,eax
  409ee9:	loopne 0x409f1b
  409eeb:	es pop edi
  409eed:	stos   BYTE PTR es:[edi],al
  409eee:	dec    ebp
  409eef:	sub    cx,WORD PTR [ebx+ebp*1-0x29]
  409ef4:	rcr    BYTE PTR [ecx+0x58],0x6a
  409ef8:	cli    
  409ef9:	jnp    0x409e9b
  409efb:	fstp   TBYTE PTR [esi-0x3861769c]
  409f01:	dec    edx
  409f02:	push   esp
  409f03:	push   ds
  409f04:	std    
  409f05:	mov    dl,0x1
  409f07:	mov    ebx,DWORD PTR [edx-0x34]
  409f0a:	hlt    
  409f0b:	ins    DWORD PTR es:[edi],dx
  409f0c:	jo     0x409eb2
  409f0e:	nop
  409f0f:	jge    0x409f47
  409f11:	mov    dh,0x57
  409f13:	push   eax
  409f14:	xchg   edi,eax
  409f15:	aas    
  409f16:	shl    ebp,0x1f
  409f19:	fstp   st(0)
  409f1b:	loope  0x409f88
  409f1d:	and    BYTE PTR [edx],bh
  409f1f:	push   cs
  409f20:	loop   0x409eed
  409f22:	sub    al,0xf2
  409f24:	xchg   edi,eax
  409f25:	sub    eax,0xa6a45336
  409f2a:	mov    edx,0xe287dd77
  409f2f:	adc    DWORD PTR ds:0xfeaaf68,edi
  409f35:	mov    dl,0x20
  409f37:	fcomp  QWORD PTR [ebp-0x1169be83]
  409f3d:	and    BYTE PTR [esi-0x43],0xf7
  409f41:	pusha  
  409f42:	adc    BYTE PTR [ebx],al
  409f44:	pop    ebp
  409f45:	push   esi
  409f46:	sub    BYTE PTR ds:0xbb41e8e8,ch
  409f4c:	(bad)  
  409f4e:	pusha  
  409f4f:	sbb    eax,edi
  409f51:	pop    ebp
  409f52:	inc    ebp
  409f53:	out    dx,eax
  409f54:	stos   BYTE PTR es:[edi],al
  409f55:	mov    al,ds:0x155d0bac
  409f5a:	inc    edx
  409f5b:	add    BYTE PTR [esi-0x3a848243],0x73
  409f62:	lods   eax,DWORD PTR ds:[esi]
  409f63:	sti    
  409f64:	xor    BYTE PTR [edi],0x1c
  409f67:	inc    ebp
  409f68:	adc    edi,esp
  409f6a:	mov    ds:0x77990e4,eax
  409f6f:	jg     0x409f55
  409f71:	loope  0x409efa
  409f73:	(bad)  
  409f74:	scas   eax,DWORD PTR es:[edi]
  409f75:	dec    edi
  409f76:	mov    ebp,DWORD PTR [ebp+0x24c530aa]
  409f7c:	mul    DWORD PTR [ebx+eiz*4]
  409f7f:	fcom   QWORD PTR [edi]
  409f81:	pop    eax
  409f82:	fxch   st(1)
  409f84:	div    esp
  409f86:	jg     0x409f56
  409f88:	in     eax,0xae
  409f8a:	enter  0x4483,0x6d
  409f8e:	rcl    ah,cl
  409f90:	jb     0x409fca
  409f92:	inc    ebp
  409f93:	call   0xd0d72b53
  409f98:	mov    esp,0x5af4bef6
  409f9d:	test   eax,0xf4dbadeb
  409fa2:	cmp    BYTE PTR [eax+0x79251975],dl
  409fa8:	and    al,BYTE PTR [esi]
  409faa:	cmp    eax,0x39f62fc6
  409faf:	dec    ebp
  409fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fb1:	out    dx,eax
  409fb2:	mov    ch,0xf7
  409fb4:	pusha  
  409fb5:	sbb    dh,BYTE PTR [eax+0x7d6622f0]
  409fbb:	repz das 
  409fbd:	adc    BYTE PTR [ecx],al
  409fbf:	(bad)  
  409fc1:	jb     0x40a02c
  409fc3:	jp     0x409ff1
  409fc5:	rcl    DWORD PTR [ebx-0x6c64bc17],cl
  409fcb:	add    DWORD PTR [edi-0x22],eax
  409fce:	jecxz  0x409fd7
  409fd0:	sti    
  409fd1:	and    eax,0x429c4be8
  409fd6:	cmc    
  409fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd8:	mov    bl,bh
  409fda:	dec    ebp
  409fdb:	jp     0x40a022
  409fdd:	xchg   esp,ecx
  409fdf:	ret    0x76a1
  409fe2:	sub    DWORD PTR [edi+0x1e677385],esp
  409fe8:	adc    edi,ebp
  409fea:	retf   0x414e
  409fed:	mov    bl,BYTE PTR [ebp+0x3f]
  409ff0:	and    BYTE PTR [edx-0x8e34f27],bl
  409ff6:	cmp    dh,al
  409ff8:	adc    al,0x98
  409ffa:	aas    
  409ffb:	popf   
  409ffc:	ins    BYTE PTR es:[edi],dx
  409ffd:	inc    esi
  409ffe:	pop    ss
  409fff:	cmp    BYTE PTR [ebx+0x2],0xa1
  40a003:	xchg   esp,eax
  40a004:	icebp  
  40a005:	aad    0xd0
  40a007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a008:	mov    DWORD PTR [edx+0x53],ebp
  40a00b:	pop    ecx
  40a00c:	call   0xa96b:0x9465c86c
  40a013:	stos   DWORD PTR es:[edi],eax
  40a014:	aas    
  40a015:	xchg   edx,eax
  40a016:	xchg   edx,eax
  40a017:	dec    ecx
  40a018:	pop    edx
  40a019:	ror    BYTE PTR [ecx*8-0x1c34082b],1
  40a020:	clc    
  40a021:	fistp  DWORD PTR [ebx+0x39]
  40a024:	ins    BYTE PTR es:[edi],dx
  40a025:	adc    DWORD PTR [ecx],eax
  40a027:	aas    
  40a028:	(bad)  
  40a029:	repnz mov esi,0xab00f524
  40a02f:	and    al,0x9b
  40a031:	mov    dh,dh
  40a033:	push   edi
  40a034:	mov    bh,0xdd
  40a036:	adc    al,0xb2
  40a038:	inc    ecx
  40a039:	dec    edx
  40a03a:	test   al,0x63
  40a03c:	cmp    al,0xb0
  40a03e:	retf   0x4ce0
  40a041:	daa    
  40a042:	cdq    
  40a043:	dec    edx
  40a044:	push   esi
  40a045:	(bad)  
  40a046:	sti    
  40a047:	mov    cl,ch
  40a049:	in     eax,dx
  40a04a:	xor    BYTE PTR [esp+eax*4-0x28745816],ah
  40a051:	xor    cl,BYTE PTR [edi+0x64]
  40a054:	xor    DWORD PTR [edx+0x443da84],edx
  40a05a:	int3   
  40a05b:	loopne 0x409ff6
  40a05d:	fsubr  QWORD PTR [edx+0x2a]
  40a060:	lods   al,BYTE PTR ds:[esi]
  40a061:	in     al,dx
  40a062:	and    al,0x98
  40a064:	std    
  40a065:	sub    bl,dl
  40a067:	pop    ebx
  40a068:	mov    ebx,0x63123e14
  40a06d:	push   ss
  40a06e:	imul   edi,DWORD PTR [ebx-0x4b],0x6f
  40a072:	outs   dx,DWORD PTR ds:[esi]
  40a073:	out    dx,eax
  40a074:	in     eax,0x15
  40a076:	test   al,0xfc
  40a078:	xchg   esp,eax
  40a079:	push   ds
  40a07a:	and    BYTE PTR [edi+0x1d],dl
  40a07d:	js     0x40a061
  40a07f:	loop   0x40a0ee
  40a081:	imul   eax,DWORD PTR [edx+0x61],0xffffffd5
  40a085:	xor    eax,esi
  40a087:	arpl   cx,si
  40a089:	rcl    BYTE PTR [edx+eiz*8+0x30ccc4be],0x1b
  40a091:	clc    
  40a092:	push   ebx
  40a093:	cmp    edx,DWORD PTR [eax+0x5a6d416]
  40a099:	addr16 std 
  40a09b:	push   ebx
  40a09c:	mov    ebp,0xc5559fe1
  40a0a1:	jno    0x40a0ff
  40a0a3:	inc    ecx
  40a0a4:	xchg   edx,eax
  40a0a5:	or     DWORD PTR [esi-0x21e5dab7],ebp
  40a0ab:	ss dec esp
  40a0ad:	test   cl,cl
  40a0af:	mov    eax,0x34cf30b8
  40a0b4:	sbb    dl,ah
  40a0b6:	sub    al,0x1a
  40a0b8:	(bad)  
  40a0b9:	je     0x40a0d8
  40a0bb:	ins    DWORD PTR es:[edi],dx
  40a0bc:	adc    eax,DWORD PTR [ebx+edi*2+0x6]
  40a0c0:	popf   
  40a0c1:	test   ah,bh
  40a0c3:	mov    ch,0xcb
  40a0c5:	loope  0x40a04b
  40a0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0c8:	repnz pop ebp
  40a0ca:	mov    ds:0x6895c01a,al
  40a0cf:	cmp    bh,BYTE PTR [edx]
  40a0d1:	xchg   edx,eax
  40a0d2:	jge    0x40a129
  40a0d4:	lock fst DWORD PTR [edi-0x75ae6bab]
  40a0db:	lods   al,BYTE PTR ds:[esi]
  40a0dc:	call   0x70ceb0af
  40a0e1:	push   ebx
  40a0e2:	es (bad) 
  40a0e4:	xchg   edi,eax
  40a0e5:	stos   DWORD PTR es:[edi],eax
  40a0e6:	mov    esi,0xe81c38d4
  40a0eb:	mov    ebx,0x9b3775fd
  40a0f0:	jge    0x40a081
  40a0f2:	leave  
  40a0f3:	or     DWORD PTR es:[ebp-0x43a41c0b],eax
  40a0fa:	cmp    eax,0x9a4bd314
  40a0ff:	mov    esi,0x486780c0
  40a104:	leave  
  40a105:	lods   eax,DWORD PTR ds:[esi]
  40a106:	js     0x40a0c9
  40a108:	jge    0x40a175
  40a10a:	cli    
  40a10b:	in     eax,0xe7
  40a10d:	lahf   
  40a10e:	inc    ebx
  40a10f:	sahf   
  40a110:	inc    ebx
  40a111:	cld    
  40a112:	lock xor esp,DWORD PTR [edi+edx*1]
  40a116:	stos   BYTE PTR es:[edi],al
  40a117:	cmp    BYTE PTR ss:[esi+0x9],0xfb
  40a11c:	cmovg  edi,DWORD PTR [edi+0x32]
  40a120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a121:	push   ebp
  40a122:	retf   
  40a123:	and    al,0xd9
  40a125:	xor    al,0xd1
  40a127:	dec    ebp
  40a128:	pop    ebx
  40a129:	inc    edx
  40a12a:	push   ds
  40a12b:	in     al,dx
  40a12c:	(bad)  
  40a12d:	das    
  40a12e:	leave  
  40a12f:	in     al,0xe8
  40a131:	in     al,dx
  40a132:	maskmovq mm5,(bad)
  40a133:	imul   DWORD PTR [edx]
  40a135:	out    dx,eax
  40a136:	lds    esp,FWORD PTR [esi]
  40a138:	ds out dx,al
  40a13a:	and    eax,0xf34eeb37
  40a13f:	mov    cl,ah
  40a141:	hlt    
  40a142:	push   eax
  40a143:	fs mov bl,0xe2
  40a146:	sub    esi,DWORD PTR [edi]
  40a148:	pop    ds
  40a149:	or     ebp,DWORD PTR [edx+0xbd9b309]
  40a14f:	arpl   WORD PTR [edi],sp
  40a151:	push   eax
  40a152:	ret    0x1a66
  40a155:	mov    dl,BYTE PTR [ebx-0x484ee8fc]
  40a15b:	test   al,0xe
  40a15d:	aaa    
  40a15e:	and    eax,0xacdd651
  40a163:	shl    DWORD PTR [edx+0x49],0x2f
  40a167:	(bad)  
  40a168:	cdq    
  40a169:	retf   0xf8f6
  40a16c:	jecxz  0x40a1d0
  40a16e:	adc    ah,al
  40a170:	rcr    DWORD PTR [eax],1
  40a172:	xlat   BYTE PTR ds:[ebx]
  40a173:	cmp    al,0x9d
  40a175:	rcr    DWORD PTR [eax+ebx*4+0x1c47813e],cl
  40a17c:	nop
  40a17d:	push   0x966ee9a3
  40a182:	test   al,dh
  40a184:	test   BYTE PTR [edx+ebx*4],dl
  40a187:	ja     0x40a1b1
  40a189:	or     al,0x20
  40a18b:	scas   al,BYTE PTR es:[edi]
  40a18c:	ja     0x40a1cb
  40a18e:	js     0x40a1a9
  40a190:	jne    0x40a1fd
  40a192:	push   es
  40a193:	xlat   BYTE PTR ds:[ebx]
  40a194:	cmp    eax,0x3c96436
  40a199:	(bad)  [ecx]
  40a19b:	popf   
  40a19c:	retf   
  40a19d:	cmp    eax,0xd968a4fd
  40a1a2:	inc    eax
  40a1a3:	or     al,0xae
  40a1a5:	div    BYTE PTR [ebx-0x6cfec913]
  40a1ab:	cmp    dh,BYTE PTR [edi-0xd6f0208]
  40a1b1:	aad    0xb2
  40a1b3:	rcl    DWORD PTR [esi-0x7fb1e5e7],cl
  40a1b9:	inc    esi
  40a1ba:	fdiv   DWORD PTR [edx+0x7deaa41f]
  40a1c0:	stc    
  40a1c1:	mov    al,al
  40a1c3:	xchg   DWORD PTR [ebx-0x5ddf05ef],ebp
  40a1c9:	mov    dl,0xa0
  40a1cb:	mov    bl,0x19
  40a1cd:	int3   
  40a1ce:	aaa    
  40a1cf:	jg     0x40a1bf
  40a1d1:	dec    edx
  40a1d2:	pop    ecx
  40a1d3:	sub    DWORD PTR [eax+0x60],edi
  40a1d6:	je     0x40a21d
  40a1d8:	call   0xcaa778ed
  40a1dd:	ss mov ecx,0xb23603bd
  40a1e3:	es sahf 
  40a1e5:	xor    ah,BYTE PTR [edi-0x2b6d0f76]
  40a1eb:	(bad)  [ecx-0x66]
  40a1ee:	fnsave [esi+0x4b]
  40a1f1:	ror    DWORD PTR [edi],cl
  40a1f3:	push   ds
  40a1f4:	xor    BYTE PTR [ebx-0x107712d],ah
  40a1fa:	jne    0x40a267
  40a1fc:	mov    edx,DWORD PTR [edi]
  40a1fe:	mov    ecx,0x6615de28
  40a203:	dec    ebp
  40a204:	push   esi
  40a205:	jl     0x40a259
  40a207:	inc    ebp
  40a208:	mov    ebx,0x37c604f
  40a20d:	xor    al,0x32
  40a20f:	jbe    0x40a1e0
  40a211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a213:	or     DWORD PTR [edx-0x6e],edi
  40a216:	loop   0x40a1ec
  40a218:	sbb    dh,BYTE PTR [ebp+edx*4+0x2a1115a]
  40a21f:	jo     0x40a26f
  40a221:	repnz ror DWORD PTR [edx],1
  40a224:	adc    bl,BYTE PTR [esi+0x5208eaeb]
  40a22a:	push   edi
  40a22b:	and    eax,0xa1d98c43
  40a230:	jecxz  0x40a21c
  40a232:	leave  
  40a233:	mov    bh,0x56
  40a235:	push   cs
  40a236:	adc    ch,BYTE PTR [ecx]
  40a238:	mov    dh,0x15
  40a23a:	mov    bh,BYTE PTR [eax-0x31]
  40a23d:	jle    0x40a226
  40a23f:	mov    al,ds:0x67702b
  40a244:	(bad)  
  40a246:	adc    ebx,DWORD PTR [esi+0x3c6fe3d5]
  40a24c:	das    
  40a24d:	outs   dx,DWORD PTR ds:[esi]
  40a24e:	(bad)
  40a252:	jne    0x40a223
  40a254:	sub    DWORD PTR [edx],edx
  40a256:	mov    edx,0x18bb0bb8
  40a25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a25c:	cdq    
  40a25d:	add    BYTE PTR [esi+0x4b],bl
  40a260:	cmp    eax,0x14a6d35b
  40a265:	sub    ecx,DWORD PTR gs:[esi]
  40a268:	jmp    0x40a268
  40a26a:	lods   al,BYTE PTR ds:[esi]
  40a26b:	dec    ecx
  40a26c:	cwde   
  40a26d:	ins    DWORD PTR es:[edi],dx
  40a26e:	out    dx,al
  40a26f:	test   al,0x98
  40a271:	int    0x1c
  40a273:	mov    eax,ds:0xa7bc3476
  40a278:	(bad)  
  40a279:	mov    ch,0x9a
  40a27b:	gs inc edx
  40a27d:	int3   
  40a27e:	lds    ebp,FWORD PTR [ecx+0xb]
  40a281:	or     DWORD PTR [edx+0x1b],0x11a46985
  40a288:	xlat   BYTE PTR ds:[ebx]
  40a289:	xchg   ebx,eax
  40a28a:	xor    BYTE PTR [ecx+0x59],bh
  40a28d:	mov    BYTE PTR [edx+0x389699ee],ah
  40a293:	dec    ebx
  40a294:	ret    
  40a295:	data16 in al,0x6c
  40a298:	pop    edx
  40a299:	add    BYTE PTR [edi],ah
  40a29b:	push   ebx
  40a29c:	xor    al,0x36
  40a29e:	mov    ebx,ecx
  40a2a0:	sub    BYTE PTR [eax-0x3d],ah
  40a2a3:	xchg   BYTE PTR [ebx],dh
  40a2a5:	stos   BYTE PTR es:[edi],al
  40a2a6:	xchg   ebp,eax
  40a2a7:	and    DWORD PTR [ecx],eax
  40a2a9:	test   eax,0xb8602f7e
  40a2ae:	and    al,0x39
  40a2b0:	stos   BYTE PTR es:[edi],al
  40a2b1:	(bad)  
  40a2b2:	jl     0x40a323
  40a2b4:	mov    dh,0xc2
  40a2b6:	rcr    DWORD PTR [esi+0x7b5f21ca],1
  40a2bc:	(bad)  
  40a2bd:	cmp    ebp,ebx
  40a2bf:	push   edi
  40a2c0:	lahf   
  40a2c1:	out    dx,eax
  40a2c2:	pop    es
  40a2c3:	xchg   BYTE PTR [edx+0x68b62189],al
  40a2c9:	pop    ecx
  40a2ca:	fdiv   DWORD PTR [ebx]
  40a2cc:	mov    DWORD PTR [ecx+edx*8+0x118dcbd0],esi
  40a2d3:	cmp    BYTE PTR [ebx-0x6f4aa49a],ah
  40a2d9:	div    BYTE PTR [esi]
  40a2db:	push   esp
  40a2dc:	jg     0x40a2d4
  40a2de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2df:	out    dx,eax
  40a2e0:	das    
  40a2e1:	dec    esi
  40a2e2:	lock xchg ebx,eax
  40a2e4:	(bad)  
  40a2e5:	mov    ah,0x22
  40a2e7:	jp     0x40a287
  40a2e9:	jl     0x40a2ca
  40a2eb:	jbe    0x40a35f
  40a2ed:	das    
  40a2ee:	(bad)  
  40a2ef:	xor    bh,BYTE PTR [edi*2-0x739c04fe]
  40a2f6:	(bad)  [eax]
  40a2f8:	int3   
  40a2f9:	lds    ebp,FWORD PTR [eax-0x55]
  40a2fc:	sub    eax,DWORD PTR [edx]
  40a2fe:	in     al,dx
  40a2ff:	fild   QWORD PTR [ebx-0x38]
  40a302:	ja     0x40a2b8
  40a304:	imul   ecx,DWORD PTR [edi],0x2b
  40a307:	xor    BYTE PTR [edi+0x4f],ch
  40a30a:	in     eax,dx
  40a30b:	adc    al,0xb0
  40a30d:	fsubr  QWORD PTR [edx]
  40a30f:	call   0x5fdc771d
  40a314:	add    DWORD PTR [edi+0x51],esp
  40a317:	dec    esi
  40a318:	ds or  eax,0xdeed9dc3
  40a31e:	pop    eax
  40a31f:	daa    
  40a320:	jmp    0x24a1:0xdbfc53e5
  40a327:	mov    esi,0xacbc8cda
  40a32c:	loop   0x40a2c0
  40a32e:	pop    ds
  40a32f:	sub    al,0x8d
  40a331:	cmc    
  40a332:	adc    ah,ch
  40a334:	fld    QWORD PTR [ebx+edx*8]
  40a337:	sub    DWORD PTR [esi+0x19e19182],esp
  40a33d:	mov    eax,ds:0xf02528db
  40a342:	nop
  40a343:	sahf   
  40a344:	retf   0xe668
  40a347:	adc    DWORD PTR [ebp+0x199d6897],eax
  40a34d:	fsub   DWORD PTR [edi]
  40a34f:	pop    ebp
  40a350:	mov    ah,0xfe
  40a352:	jecxz  0x40a2de
  40a354:	imul   eax,DWORD PTR [ecx+0x5f],0xe0f8514a
  40a35b:	out    dx,al
  40a35c:	dec    ebp
  40a35d:	cmp    cl,BYTE PTR [eax-0x4a]
  40a360:	test   DWORD PTR [esi+eiz*1],ebx
  40a363:	adc    ch,ah
  40a365:	push   ss
  40a366:	jl     0x40a2f4
  40a368:	cli    
  40a369:	xor    al,0x54
  40a36b:	sbb    ebp,DWORD PTR [ebx+0x4cd0116c]
  40a371:	pop    ecx
  40a372:	es or  al,0x7f
  40a375:	jo     0x40a346
  40a377:	pop    eax
  40a378:	in     al,dx
  40a379:	test   eax,0x7d410d30
  40a37e:	push   esi
  40a37f:	pop    es
  40a380:	jb     0x40a3ff
  40a382:	dec    edi
  40a383:	xchg   ecx,eax
  40a384:	mov    esp,0x3323fef5
  40a389:	in     al,0x4c
  40a38b:	iret   
  40a38c:	loope  0x40a315
  40a38e:	and    ebp,DWORD PTR [edx]
  40a390:	jo     0x40a403
  40a392:	jmp    0x40a410
  40a394:	daa    
  40a395:	js     0x40a360
  40a397:	inc    esi
  40a398:	inc    ebp
  40a399:	sub    al,0xd3
  40a39b:	add    bl,BYTE PTR [ebx+esi*2+0x58]
  40a39f:	push   ecx
  40a3a0:	ins    DWORD PTR es:[edi],dx
  40a3a1:	jmp    0xd725:0xdc5dfc26
  40a3a8:	sbb    ecx,0xffffffb8
  40a3ab:	sbb    ecx,DWORD PTR [esi-0x9]
  40a3ae:	bound  ebx,QWORD PTR ss:[ebp-0x52e4dfa]
  40a3b5:	enter  0xa09,0xcc
  40a3b9:	shl    BYTE PTR [ebx],1
  40a3bb:	mov    cl,0x6f
  40a3bd:	mov    ah,0xd1
  40a3bf:	mov    dl,0xb3
  40a3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3c2:	jo     0x40a3c3
  40a3c4:	xchg   edi,eax
  40a3c5:	and    DWORD PTR [edx*2+0x17d75239],eax
  40a3cc:	add    DWORD PTR [ebp-0x35ca10dc],ebp
  40a3d2:	sbb    DWORD PTR [ebp+0x49],0x6f1d6604
  40a3d9:	xchg   DWORD PTR [edx],ebx
  40a3db:	pop    esi
  40a3dc:	xor    eax,0x2a34acfd
  40a3e1:	adc    DWORD PTR ds:0xa902af67,esi
  40a3e7:	cmc    
  40a3e8:	inc    esp
  40a3e9:	mov    ds:0xc1b3f204,al
  40a3ee:	push   edx
  40a3ef:	cmp    dl,ah
  40a3f1:	xor    ch,ah
  40a3f3:	and    edx,eax
  40a3f5:	fwait
  40a3f6:	ja     0x40a390
  40a3f8:	push   cs
  40a3f9:	and    ebp,DWORD PTR [eax]
  40a3fb:	lods   al,BYTE PTR ds:[esi]
  40a3fc:	add    ch,0xf1
  40a3ff:	add    ah,ah
  40a401:	aam    0x69
  40a403:	gs pop ebx
  40a405:	in     al,0xd0
  40a407:	ss sbb al,0xa0
  40a40a:	aam    0x39
  40a40c:	inc    ecx
  40a40d:	sub    edi,DWORD PTR [edx-0x12]
  40a410:	test   al,0xf8
  40a412:	add    dl,bh
  40a414:	(bad)  
  40a415:	jp     0x40a42a
  40a417:	repnz mov cl,0x1c
  40a41a:	ret    
  40a41b:	jno    0x40a3a6
  40a41d:	jbe    0x40a3db
  40a41f:	pop    edx
  40a420:	jmp    0x410b:0x2a2bad9f
  40a427:	add    eax,edi
  40a429:	pop    edx
  40a42a:	test   edx,ebx
  40a42c:	je     0x40a43c
  40a42e:	popf   
  40a42f:	hlt    
  40a430:	pop    edx
  40a431:	rol    BYTE PTR [edi-0x17],1
  40a434:	pop    edx
  40a435:	pop    ebx
  40a436:	out    dx,al
  40a437:	or     al,BYTE PTR [edx+ebx*2-0x46eb096f]
  40a43e:	push   0xffffffc6
  40a440:	ds sbb al,bh
  40a443:	test   eax,0xaa8f2ad3
  40a448:	mov    ecx,0xde63437c
  40a44d:	idiv   eax
  40a44f:	pop    ds
  40a450:	push   0xffffffef
  40a452:	push   esp
  40a453:	pop    esi
  40a454:	es in  eax,dx
  40a456:	jp     0x40a464
  40a458:	add    al,BYTE PTR [eax]
  40a45a:	sahf   
  40a45b:	loope  0x40a3e0
  40a45d:	mov    ebx,DWORD PTR [ebp-0xdca9a74]
  40a463:	dec    esi
  40a464:	lock aad 0x88
  40a467:	es add cl,bh
  40a46a:	jge    0x40a4b3
  40a46c:	mov    al,ds:0xa20644ef
  40a471:	jns    0x40a476
  40a473:	ins    DWORD PTR es:[edi],dx
  40a474:	fwait
  40a475:	inc    edi
  40a476:	mov    dl,0xae
  40a478:	in     eax,dx
  40a479:	sbb    DWORD PTR [eax+0x4ad9be89],0x2f
  40a480:	sbb    ebx,ebp
  40a482:	out    0xce,al
  40a484:	or     al,0xc3
  40a486:	frstor [esi-0x48]
  40a489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a48a:	cli    
  40a48b:	xor    eax,0x38b6d91f
  40a490:	out    dx,al
  40a491:	jle    0x40a4fb
  40a493:	sbb    DWORD PTR [esi+0x1f],edx
  40a496:	mov    ?,WORD PTR [eax+ebx*1+0x12]
  40a49a:	stos   BYTE PTR es:[edi],al
  40a49b:	xchg   edx,eax
  40a49c:	adc    BYTE PTR [edi+ecx*4+0x74],bl
  40a4a0:	dec    ebx
  40a4a1:	push   es
  40a4a2:	cld    
  40a4a3:	push   0x391c7515
  40a4a8:	mov    dl,BYTE PTR [ebx+0x1ab4ef62]
  40a4ae:	ins    BYTE PTR es:[edi],dx
  40a4af:	outs   dx,BYTE PTR ds:[esi]
  40a4b0:	arpl   WORD PTR es:[edi],bx
  40a4b3:	je     0x40a4c6
  40a4b5:	test   eax,0x48b56e8c
  40a4ba:	fsub   st(6),st
  40a4bd:	sub    eax,0xd17d2866
  40a4c2:	xchg   DWORD PTR [edi+0x2d],ecx
  40a4c5:	inc    edx
  40a4c6:	(bad)  
  40a4c7:	popf   
  40a4c8:	or     edi,edi
  40a4ca:	xchg   edi,eax
  40a4cb:	aaa    
  40a4cc:	stc    
  40a4cd:	cli    
  40a4ce:	(bad)  
  40a4cf:	cmp    dl,BYTE PTR [esi+0x4b55aa8e]
  40a4d5:	test   al,0xe9
  40a4d7:	enter  0x419a,0x9b
  40a4db:	mov    dh,0x7
  40a4dd:	push   0x849b22f3
  40a4e2:	(bad)  
  40a4e4:	sbb    DWORD PTR [esp+eiz*4],edi
  40a4e7:	fimul  WORD PTR [eax+0x55]
  40a4ea:	aad    0xf6
  40a4ec:	add    dh,bl
  40a4ee:	cdq    
  40a4ef:	fldcw  WORD PTR [ebx+0x61e99fdf]
  40a4f5:	(bad)  
  40a4f6:	push   ebp
  40a4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f8:	sbb    BYTE PTR [eax+0x271a297f],cl
  40a4fe:	jl     0x40a4a3
  40a500:	ss ret 
  40a502:	fwait
  40a503:	sbb    eax,DWORD PTR [edi-0x41]
  40a506:	push   DWORD PTR [edi]
  40a508:	inc    DWORD PTR [edi-0x44]
  40a50b:	mov    DWORD PTR [ecx+0x43b70cea],ebp
  40a511:	bnd jp 0x40a4e9
  40a514:	stc    
  40a515:	sbb    cl,BYTE PTR [esp+eax*4]
  40a518:	shl    BYTE PTR [ebx+0x11e85774],cl
  40a51e:	cmp    al,BYTE PTR [esi-0x1d20a2ba]
  40a524:	push   edx
  40a525:	out    dx,al
  40a526:	jne    0x40a531
  40a528:	xchg   esp,eax
  40a529:	dec    ebp
  40a52a:	addr16 inc edi
  40a52c:	aad    0x2
  40a52e:	xchg   ecx,eax
  40a52f:	inc    ebp
  40a530:	mov    edi,0xd67deb4f
  40a535:	pop    esp
  40a536:	xchg   ch,dh
  40a538:	xor    DWORD PTR [edi-0x14],esp
  40a53b:	inc    eax
  40a53c:	or     DWORD PTR [edi-0x76],ebp
  40a53f:	lock stos DWORD PTR es:[edi],eax
  40a541:	dec    ecx
  40a542:	inc    edx
  40a543:	or     BYTE PTR [eax-0xb],bh
  40a546:	sbb    DWORD PTR [esi+0x4f],ebx
  40a549:	rol    DWORD PTR [esi+0x2b],cl
  40a54c:	out    dx,al
  40a54d:	cmc    
  40a54e:	dec    esi
  40a54f:	(bad)  
  40a550:	lock mov eax,ds:0x3622f6da
  40a556:	and    eax,0xedd37f8
  40a55b:	dec    eax
  40a55c:	xchg   ebp,eax
  40a55d:	mov    ecx,0xcf94ba6a
  40a562:	jmp    0x6227:0x12721509
  40a569:	mov    gs,ebx
  40a56b:	out    0x2b,eax
  40a56d:	push   eax
  40a56e:	jbe    0x40a55c
  40a570:	ficomp DWORD PTR [ecx-0x45babfe0]
  40a576:	idiv   DWORD PTR [edx]
  40a578:	jnp    0x40a5bc
  40a57a:	and    eax,0xe94c3136
  40a57f:	test   eax,0xf3772c63
  40a584:	push   ebp
  40a585:	jge    0xba22f35d
  40a58b:	inc    ebp
  40a58c:	inc    eax
  40a58d:	push   0x7a61a026
  40a592:	dec    ebp
  40a593:	icebp  
  40a594:	push   ds
  40a595:	cmp    al,0x6
  40a597:	frstor [eax]
  40a599:	(bad)  
  40a59a:	fucomp st(7)
  40a59c:	push   edx
  40a59d:	femms  
  40a59f:	sub    BYTE PTR [esi],0x9e
  40a5a2:	xchg   esi,eax
  40a5a3:	(bad)  
  40a5a4:	nop
  40a5a5:	jbe    0x40a61c
  40a5a7:	rol    BYTE PTR [ecx+edi*2-0x46dd1266],0xbb
  40a5af:	xchg   edi,eax
  40a5b0:	sub    esi,DWORD PTR [eax+ebp*8+0x277ba88f]
  40a5b7:	shl    bl,0xe8
  40a5ba:	dec    ebx
  40a5bb:	leave  
  40a5bc:	fdivr  DWORD PTR [edx+edx*2]
  40a5bf:	jb     0x40a622
  40a5c1:	xor    al,0x62
  40a5c3:	fwait
  40a5c4:	jae    0x40a5fe
  40a5c6:	fwait
  40a5c7:	mov    dh,0xa6
  40a5c9:	mov    edx,0xa141dfb3
  40a5ce:	stos   BYTE PTR es:[edi],al
  40a5cf:	pop    esi
  40a5d0:	push   cs
  40a5d1:	in     eax,0xb
  40a5d3:	jmp    0x40a585
  40a5d5:	shr    BYTE PTR ds:[ebx],1
  40a5d8:	test   BYTE PTR [edx],bl
  40a5da:	scas   al,BYTE PTR es:[edi]
  40a5db:	outs   dx,DWORD PTR ds:[esi]
  40a5dc:	mov    ah,0x87
  40a5de:	sti    
  40a5df:	(bad)  
  40a5e0:	ins    BYTE PTR es:[edi],dx
  40a5e1:	clc    
  40a5e2:	ins    DWORD PTR es:[edi],dx
  40a5e3:	stc    
  40a5e4:	and    edx,edi
  40a5e6:	out    dx,eax
  40a5e7:	mov    edx,0x477fe39d
  40a5ec:	into   
  40a5ed:	or     al,0x32
  40a5ef:	mov    ds:0x9b3ad8c3,eax
  40a5f4:	cmp    BYTE PTR [eax],dh
  40a5f6:	cmp    al,0x73
  40a5f8:	lock mov dl,0xbd
  40a5fb:	or     BYTE PTR [eax-0x5f7c107c],dl
  40a601:	sbb    edx,DWORD PTR [ebx+0x2e42dcc1]
  40a607:	push   0x77ab8cfb
  40a60c:	stos   BYTE PTR es:[edi],al
  40a60d:	jmp    0x40a681
  40a60f:	jge    0x40a5ce
  40a611:	gs and al,0x18
  40a614:	fbld   TBYTE PTR [ebp+0x331e8c54]
  40a61a:	adc    eax,0x3c693970
  40a61f:	(bad)  [edx-0x33]
  40a622:	jmp    0x40a64f
  40a624:	mov    dl,0x59
  40a626:	mov    bh,0xd2
  40a628:	jno    0x40a662
  40a62a:	das    
  40a62b:	jbe    0x40a614
  40a62d:	and    DWORD PTR [ebx+0x1e],0xffffff85
  40a631:	push   0xe4a592b2
  40a636:	pop    ebx
  40a637:	stos   DWORD PTR es:[edi],eax
  40a638:	ins    DWORD PTR es:[edi],dx
  40a639:	cld    
  40a63a:	pop    es
  40a63b:	not    DWORD PTR [esi]
  40a63d:	and    edi,ebp
  40a63f:	fidiv  WORD PTR [ecx+0x249ff6d3]
  40a645:	retf   0x7aca
  40a648:	outs   dx,DWORD PTR ds:[esi]
  40a649:	adc    BYTE PTR [ebx-0x1b],dh
  40a64c:	imul   edx,DWORD PTR [ecx+0x6],0x25
  40a650:	sub    edi,esi
  40a652:	mov    esi,DWORD PTR [ecx+0x2c60633a]
  40a658:	push   ss
  40a659:	pop    ebp
  40a65a:	cmp    al,0xea
  40a65c:	xchg   ebp,eax
  40a65d:	outs   dx,BYTE PTR ds:[esi]
  40a65e:	stos   BYTE PTR es:[edi],al
  40a65f:	dec    edi
  40a660:	js     0x40a5e8
  40a662:	addr16 sub al,0xe6
  40a665:	lahf   
  40a666:	cmp    eax,0xa594722a
  40a66b:	or     DWORD PTR [ebx],0xffffffdb
  40a66e:	or     BYTE PTR [eax-0x3ff9d3e3],ch
  40a674:	jmp    0x40a63c
  40a676:	cmp    eax,0x34e12804
  40a67b:	pop    edi
  40a67c:	jp     0x40a699
  40a67e:	inc    ebp
  40a67f:	ss sub edi,ecx
  40a682:	and    ebx,DWORD PTR [edx-0x4071ccd6]
  40a688:	xor    dl,bh
  40a68a:	jnp    0x40a6ea
  40a68c:	jo     0x40a618
  40a68e:	test   BYTE PTR es:[eax-0x72e40a4d],cl
  40a695:	mov    dh,0x85
  40a697:	in     eax,dx
  40a698:	adc    BYTE PTR [edx],dh
  40a69a:	leave  
  40a69b:	dec    esp
  40a69c:	mov    dl,0x26
  40a69e:	mov    dh,0x33
  40a6a0:	stos   BYTE PTR es:[edi],al
  40a6a1:	and    BYTE PTR [edx-0x5192c34e],ch
  40a6a7:	or     cl,ah
  40a6a9:	jnp    0x40a646
  40a6ab:	inc    eax
  40a6ac:	adc    DWORD PTR [ecx+0x6d],0xffffffe6
  40a6b0:	and    bh,ah
  40a6b2:	jl     0x40a6db
  40a6b4:	xchg   edx,eax
  40a6b5:	(bad)  
  40a6b6:	dec    ecx
  40a6b7:	(bad)  
  40a6b8:	jmp    0xd3224ca3
  40a6bd:	cmp    DWORD PTR [ebx-0x8],edi
  40a6c0:	outs   dx,BYTE PTR ds:[esi]
  40a6c1:	mov    bh,0x44
  40a6c3:	nop
  40a6c4:	sub    dh,ah
  40a6c6:	imul   eax,DWORD PTR gs:[ebx-0x62],0x7bdf8452
  40a6ce:	std    
  40a6cf:	pop    es
  40a6d0:	xchg   ebx,eax
  40a6d1:	and    eax,0x44a7a710
  40a6d6:	sub    bh,BYTE PTR [eax-0x19]
  40a6d9:	cmp    ecx,DWORD PTR [edi-0x37]
  40a6dc:	mov    eax,ds:0xbbb8d963
  40a6e1:	or     cl,bh
  40a6e3:	inc    esp
  40a6e4:	ret    
  40a6e5:	ror    DWORD PTR [edi+0x3a0e7094],0x7e
  40a6ec:	shl    DWORD PTR [eax+0x68],0x4c
  40a6f0:	dec    edx
  40a6f1:	push   ss
  40a6f2:	outs   dx,BYTE PTR ds:[esi]
  40a6f3:	and    DWORD PTR [esi-0x1c89a1ff],ebx
  40a6f9:	pop    edi
  40a6fa:	cs sti 
  40a6fc:	xor    eax,0xe6cbbb2f
  40a701:	jmp    0x3c232ff8
  40a706:	pop    edi
  40a707:	mov    dl,0x5f
  40a709:	fmul   QWORD PTR [ebx-0x1e]
  40a70c:	pop    edx
  40a70d:	adc    eax,0x7de1f6b2
  40a712:	sar    dh,0x40
  40a715:	mov    edx,0xac6f9991
  40a71a:	adc    ah,BYTE PTR [ebx+0x41]
  40a71d:	pop    esi
  40a71e:	in     al,dx
  40a71f:	(bad)  
  40a720:	int    0x3
  40a722:	sbb    bl,BYTE PTR [ecx+0x488e8c91]
  40a728:	or     eax,0xddf88e22
  40a72d:	aaa    
  40a72e:	dec    eax
  40a72f:	data16 gs jbe 0x40a761
  40a733:	cmp    BYTE PTR [ecx+ebp*4-0x5378fbac],dl
  40a73a:	jp     0x40a761
  40a73c:	ins    DWORD PTR es:[edi],dx
  40a73d:	js     0x40a7af
  40a73f:	ins    DWORD PTR es:[edi],dx
  40a740:	xchg   esp,eax
  40a741:	sbb    cl,ah
  40a743:	mov    ds,WORD PTR [edx-0x71350f28]
  40a749:	xchg   ecx,eax
  40a74a:	repz sub bl,BYTE PTR [esi+0x3d]
  40a74e:	sub    eax,0x922407c7
  40a753:	add    eax,0xae924a09
  40a758:	scas   al,BYTE PTR es:[edi]
  40a759:	push   ds
  40a75a:	lds    esi,FWORD PTR [edi+0x5507693b]
  40a760:	mov    ds:0x2266983e,eax
  40a765:	out    dx,al
  40a766:	(bad)  
  40a767:	jg     0x40a790
  40a769:	les    ecx,FWORD PTR [edi]
  40a76b:	jmp    0x40a7be
  40a76d:	imul   ebx,ecx,0xffffffef
  40a770:	test   al,0xef
  40a772:	push   esp
  40a773:	sbb    al,0xed
  40a775:	push   0x76
  40a777:	in     eax,0x81
  40a779:	or     DWORD PTR [edi+0x65],edi
  40a77c:	mov    al,0xeb
  40a77e:	xchg   BYTE PTR [edx],cl
  40a780:	xchg   ebx,eax
  40a781:	sbb    dl,0x7f
  40a784:	leave  
  40a785:	clc    
  40a786:	ret    0xf154
  40a789:	adc    ah,BYTE PTR [edi+0x5138bac8]
  40a78f:	sub    bh,dh
  40a791:	pop    edi
  40a792:	(bad)  
  40a793:	test   al,0x5e
  40a795:	cli    
  40a796:	test   BYTE PTR [eax+0x413cdda3],dh
  40a79c:	fnsave [eax+0x46fb4553]
  40a7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a3:	xor    al,0x46
  40a7a5:	popa   
  40a7a6:	sub    al,0x8
  40a7a8:	mov    edi,0xf7c287ec
  40a7ad:	stos   DWORD PTR es:[edi],eax
  40a7ae:	pusha  
  40a7af:	sbb    al,0xf
  40a7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7b2:	jp     0x40a7fb
  40a7b4:	lods   al,BYTE PTR ds:[esi]
  40a7b5:	or     eax,0x4f06cb75
  40a7ba:	mov    ch,0xe8
  40a7bc:	add    al,0xbb
  40a7be:	data16 ss sbb dl,bh
  40a7c2:	arpl   WORD PTR [ebx],sp
  40a7c4:	enter  0xdd07,0x3
  40a7c8:	jne    0x40a780
  40a7ca:	clc    
  40a7cb:	stos   DWORD PTR es:[edi],eax
  40a7cc:	bound  edx,QWORD PTR [esp+edx*4]
  40a7cf:	das    
  40a7d0:	test   dl,bl
  40a7d2:	cmp    al,BYTE PTR [edi-0x2da4bf5a]
  40a7d8:	push   0xffffff92
  40a7da:	inc    ebp
  40a7db:	jo     0x40a767
  40a7dd:	sbb    eax,0xa8e3f1bb
  40a7e2:	js     0x40a7ff
  40a7e4:	sahf   
  40a7e5:	and    BYTE PTR [ecx],0x85
  40a7e8:	sbb    eax,0x143d568e
  40a7ed:	jns    0x40a7e4
  40a7ef:	clc    
  40a7f0:	cld    
  40a7f1:	in     eax,0xcb
  40a7f3:	xchg   ebx,eax
  40a7f4:	gs ss (bad) 
  40a7f8:	leave  
  40a7f9:	xchg   eax,eax
  40a7fb:	mov    ch,0xe4
  40a7fd:	pop    esp
  40a7fe:	fiadd  WORD PTR cs:[eax-0x191758b5]
  40a805:	lods   al,BYTE PTR ds:[esi]
  40a806:	push   eax
  40a807:	sub    DWORD PTR [edi],0xfffffffc
  40a80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a80b:	adc    BYTE PTR [eax-0x30],dl
  40a80e:	sub    ah,BYTE PTR [edi]
  40a810:	outs   dx,DWORD PTR ds:[esi]
  40a811:	je     0x40a7f5
  40a813:	cld    
  40a814:	cmp    al,ah
  40a816:	push   esi
  40a817:	add    BYTE PTR [edx+ebp*8+0x4c],dh
  40a81b:	cmp    cl,bl
  40a81d:	push   es
  40a81e:	adc    dl,dh
  40a820:	out    dx,al
  40a821:	adc    DWORD PTR [ebx+0x131be9bf],ecx
  40a827:	data16 in al,dx
  40a829:	aam    0xd6
  40a82b:	xchg   DWORD PTR [ebp+0x31ea8b8b],ebx
  40a831:	test   eax,0xc017e0f2
  40a836:	out    dx,eax
  40a837:	jmp    0x181f:0x18ad2585
  40a83e:	jo     0x40a7ef
  40a840:	sti    
  40a841:	mov    dl,0xaf
  40a843:	ins    DWORD PTR es:[edi],dx
  40a844:	hlt    
  40a845:	loop   0x40a8c4
  40a847:	ja     0x40a88a
  40a849:	retf   
  40a84a:	xchg   BYTE PTR [ebx-0x2b],bh
  40a84d:	xchg   ecx,eax
  40a84e:	dec    esp
  40a84f:	push   ss
  40a850:	xor    al,0xe
  40a852:	sbb    dl,BYTE PTR [ebx+0xd]
  40a855:	stc    
  40a856:	mov    ds:0xdefcab9d,al
  40a85b:	mov    ecx,0xff4604a7
  40a860:	iret   
  40a861:	jbe    0x40a811
  40a863:	call   FWORD PTR [ebp+0x69]
  40a866:	(bad)  
  40a867:	mov    bh,0xfc
  40a869:	popa   
  40a86a:	je     0x40a89a
  40a86c:	push   esp
  40a86d:	cmp    al,0xbf
  40a86f:	fild   WORD PTR [ecx]
  40a871:	cmp    esp,esp
  40a873:	pushf  
  40a874:	jl     0x40a897
  40a876:	les    esp,FWORD PTR [edi+0x1309fdf1]
  40a87c:	add    DWORD PTR [eax-0x60],eax
  40a87f:	sub    esp,DWORD PTR [esi+esi*1+0x629c2358]
  40a886:	loop   0x40a8b1
  40a888:	les    ebx,FWORD PTR [edi]
  40a88a:	sub    BYTE PTR [ebx+0x7f],cl
  40a88d:	add    cl,bl
  40a88f:	sbb    cl,BYTE PTR [ebx]
  40a891:	jg     0x40a825
  40a893:	(bad)  
  40a894:	(bad)  
  40a895:	sbb    DWORD PTR [edi+0x74],edi
  40a898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a899:	ret    
  40a89a:	mov    BYTE PTR [ebx],ch
  40a89c:	or     esp,DWORD PTR [ecx-0x10]
  40a89f:	sbb    BYTE PTR [esi],bh
  40a8a1:	(bad)  
  40a8a2:	xor    DWORD PTR [ebp+0x10],0x43
  40a8a6:	jb     0x40a84f
  40a8a8:	dec    edi
  40a8a9:	add    edi,DWORD PTR [edi+eax*1+0x18]
  40a8ad:	and    edi,edi
  40a8af:	mov    esi,0x601f3adf
  40a8b4:	imul   ebx,esp,0x644688d4
  40a8ba:	and    ah,0xe0
  40a8bd:	mov    ah,0x6f
  40a8bf:	repnz sbb al,0x44
  40a8c2:	and    DWORD PTR ds:0x85808e4b,esp
  40a8c8:	loop   0x40a93d
  40a8ca:	ds cdq 
  40a8cc:	push   DWORD PTR [esi]
  40a8ce:	push   ss
  40a8cf:	ins    BYTE PTR es:[edi],dx
  40a8d0:	lods   eax,DWORD PTR ds:[esi]
  40a8d1:	pop    eax
  40a8d2:	push   ecx
  40a8d3:	lock rcr eax,cl
  40a8d6:	repz or DWORD PTR [ecx+esi*2],eax
  40a8da:	pslld  mm5,mm6
  40a8dd:	cmp    dl,BYTE PTR [ecx+0x36]
  40a8e0:	test   al,0xb6
  40a8e2:	sub    esp,DWORD PTR [ebx+0x75]
  40a8e5:	loope  0x40a886
  40a8e7:	fucomi st,st(2)
  40a8e9:	jnp    0x40a88b
  40a8eb:	(bad)  
  40a8ec:	in     eax,dx
  40a8ed:	cmpxchg edi,eax
  40a8f0:	mov    esi,0xd1a378c8
  40a8f5:	dec    ecx
  40a8f6:	(bad)  
  40a8f7:	cs pop ss
  40a8f9:	clc    
  40a8fa:	(bad)  
  40a8fb:	jo     0x40a8fb
  40a8fd:	cmp    BYTE PTR [ecx+esi*8+0x13b907be],cl
  40a904:	lods   eax,DWORD PTR ds:[esi]
  40a905:	nop
  40a906:	push   eax
  40a907:	loope  0x40a88e
  40a909:	push   esi
  40a90a:	or     cl,BYTE PTR [ebp+0xfc1a1b0]
  40a910:	jae    0x40a8b1
  40a912:	dec    esi
  40a913:	xchg   DWORD PTR [edi+eiz*8-0x11],ecx
  40a917:	shl    DWORD PTR [esp+eiz*2-0xc],0xd7
  40a91c:	arpl   bx,sp
  40a91e:	sahf   
  40a91f:	int    0x39
  40a921:	cmp    eax,0xc59087c5
  40a926:	loope  0x40a8dc
  40a928:	inc    edi
  40a929:	movd   mm7,DWORD PTR [ebp-0x33]
  40a92d:	pop    ebp
  40a92e:	jl     0x40a95d
  40a930:	rol    DWORD PTR [edi+ebx*8+0x30],0xd5
  40a935:	mov    edi,0x7663af8b
  40a93a:	and    BYTE PTR [ebx-0x1b8f507e],ah
  40a940:	sub    eax,0x26fb3736
  40a945:	mov    dh,0x63
  40a947:	cld    
  40a948:	adc    al,0xa1
  40a94a:	add    BYTE PTR [ecx-0x1e937bd3],al
  40a950:	stos   BYTE PTR es:[edi],al
  40a951:	dec    ecx
  40a952:	aas    
  40a953:	mov    ah,0xb1
  40a955:	cmp    al,0xba
  40a957:	or     BYTE PTR ds:0x4f8c4989,bl
  40a95d:	scas   eax,DWORD PTR es:[edi]
  40a95e:	jo     0x40a9a7
  40a960:	loop   0x40a9ab
  40a962:	add    BYTE PTR [ebx+0xe],bh
  40a965:	in     al,0xec
  40a967:	addr16 out dx,al
  40a969:	xor    ch,BYTE PTR [eax-0x7446dec7]
  40a96f:	mov    bl,0xe
  40a971:	stos   BYTE PTR es:[edi],al
  40a972:	jnp    0x40a9e9
  40a974:	fs dec esp
  40a976:	adc    BYTE PTR [ecx+0x75],al
  40a979:	dec    ecx
  40a97a:	adc    BYTE PTR [edx],ch
  40a97c:	lock cwde 
  40a97e:	push   esp
  40a97f:	xor    ecx,DWORD PTR [ecx-0x6b]
  40a982:	xchg   ecx,eax
  40a983:	jne    0x40a93a
  40a985:	dec    esp
  40a986:	lea    esp,ds:0xd2cfea91
  40a98c:	xchg   ebx,eax
  40a98d:	mov    edx,0xd009ee3e
  40a992:	mov    fs,esp
  40a994:	int3   
  40a995:	xchg   BYTE PTR [edx+0x1ef83351],dh
  40a99b:	je     0x40a9e8
  40a99d:	jo     0x40a9ae
  40a99f:	push   esp
  40a9a0:	dec    esp
  40a9a1:	push   es
  40a9a2:	lods   al,BYTE PTR ds:[esi]
  40a9a3:	pop    es
  40a9a4:	xor    dl,BYTE PTR [ebx+0x45]
  40a9a7:	test   eax,0xf683bd40
  40a9ac:	ins    DWORD PTR es:[edi],dx
  40a9ad:	(bad)  
  40a9ae:	mov    dh,0xfb
  40a9b0:	push   edx
  40a9b1:	adc    BYTE PTR [ebx-0x38],cl
  40a9b4:	mov    dh,0x7a
  40a9b6:	xchg   ebx,eax
  40a9b7:	clc    
  40a9b8:	arpl   WORD PTR [edi+0x73],sp
  40a9bb:	inc    ebp
  40a9bc:	cwde   
  40a9bd:	and    DWORD PTR [eax],0x26
  40a9c0:	adc    al,0xbe
  40a9c2:	outs   dx,BYTE PTR ds:[esi]
  40a9c3:	xchg   ecx,eax
  40a9c4:	mov    esp,edx
  40a9c6:	pop    esp
  40a9c7:	shr    BYTE PTR [esi+eax*8],1
  40a9ca:	leave  
  40a9cb:	pop    esi
  40a9cc:	push   ebp
  40a9cd:	inc    edx
  40a9ce:	enter  0xf02a,0x76
  40a9d2:	call   0x7470:0xbc1f1b8d
  40a9d9:	push   esp
  40a9da:	fdivr  st,st(6)
  40a9dc:	inc    ebp
  40a9dd:	test   BYTE PTR [edi+0x12],cl
  40a9e0:	mov    ebp,0xad98179d
  40a9e5:	pop    es
  40a9e6:	sub    eax,0xc1632ee7
  40a9eb:	xchg   edx,edx
  40a9ed:	add    eax,0x806eca88
  40a9f2:	push   esp
  40a9f3:	rcl    BYTE PTR [edx+esi*4+0xf],1
  40a9f7:	or     eax,0x60ef11ca
  40a9fc:	hlt    
  40a9fd:	test   eax,0x9295e003
  40aa02:	mov    eax,0x8e90a0c7
  40aa07:	fwait
  40aa08:	add    DWORD PTR [esi+0xf],0xc9a991f9
  40aa0f:	cmp    ebp,DWORD PTR [edi]
  40aa11:	fcomip st,st(2)
  40aa13:	cmp    DWORD PTR [edx+0x40],edi
  40aa16:	jl     0x40a9c7
  40aa18:	jnp    0x40aa6a
  40aa1a:	scas   al,BYTE PTR es:[edi]
  40aa1b:	jecxz  0x40a9d0
  40aa1d:	xor    al,0xc1
  40aa1f:	add    edx,DWORD PTR [esi+ecx*8+0x9]
  40aa23:	xlat   BYTE PTR ds:[ebx]
  40aa24:	enter  0xbcf1,0xe5
  40aa28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa29:	leave  
  40aa2a:	jb     0x40aa09
  40aa2c:	jg     0x40aa98
  40aa2e:	sti    
  40aa2f:	mov    eax,0x9aa3f08b
  40aa34:	loopne 0x40aa8f
  40aa36:	lahf   
  40aa37:	imul   edi,DWORD PTR [edi+0x54],0xffffffef
  40aa3b:	adc    eax,0xfda6d70a
  40aa40:	sub    edi,DWORD PTR [eax-0x27]
  40aa43:	jg     0x40aa04
  40aa45:	dec    esp
  40aa46:	xchg   edx,eax
  40aa47:	adc    dl,al
  40aa49:	cmc    
  40aa4a:	fwait
  40aa4b:	ror    DWORD PTR [ebx+0x135659ed],0x13
  40aa52:	jl     0x40aabd
  40aa54:	mov    cs,WORD PTR [esi+0x6e]
  40aa57:	xor    BYTE PTR [eax+ebx*1],dh
  40aa5a:	jmp    0xad:0x8cb71162
  40aa61:	sub    dl,BYTE PTR [esi-0xf]
  40aa64:	out    dx,eax
  40aa65:	(bad)  
  40aa66:	icebp  
  40aa67:	dec    esp
  40aa68:	sub    DWORD PTR [ebp+0x28527f7d],ecx
  40aa6e:	popf   
  40aa6f:	dec    edi
  40aa70:	jb     0x40aad6
  40aa72:	adc    DWORD PTR [edi],edx
  40aa74:	fdiv   QWORD PTR [edi+0x49]
  40aa77:	out    dx,eax
  40aa78:	push   es
  40aa79:	lea    ecx,[eax-0x1fe8ecf0]
  40aa7f:	mov    cl,0x19
  40aa81:	bound  eax,QWORD PTR [ebx-0x8]
  40aa84:	pop    ds
  40aa85:	dec    eax
  40aa86:	sar    BYTE PTR [eax+eiz*4-0x16],cl
  40aa8a:	cmp    al,ch
  40aa8c:	inc    ebp
  40aa8d:	sub    DWORD PTR [edi+0x6d],ebx
  40aa90:	cmp    esp,DWORD PTR [eax+0x11d48263]
  40aa96:	add    ebx,esi
  40aa98:	ret    0xb337
  40aa9b:	jmp    0xfcd6:0x528b45b0
  40aaa2:	jle    0x40ab01
  40aaa4:	cwde   
  40aaa5:	scas   eax,DWORD PTR es:[edi]
  40aaa6:	ins    DWORD PTR es:[edi],dx
  40aaa7:	add    edx,DWORD PTR [edx-0x22f5309f]
  40aaad:	nop
  40aaae:	lfs    edi,FWORD PTR [ecx]
  40aab1:	stos   BYTE PTR es:[edi],al
  40aab2:	inc    esi
  40aab3:	mov    ds:0xf909f4a1,al
  40aab8:	jl     0x40aab0
  40aaba:	adc    dl,BYTE PTR [edi+ebx*8+0x16]
  40aabe:	arpl   WORD PTR [ebp-0xe],ax
  40aac1:	fadd   QWORD PTR [ecx]
  40aac3:	leave  
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	jne    0x40aa62
  40aac7:	retf   
  40aac8:	push   0xd6da29f2
  40aacd:	dec    ebp
  40aace:	sbb    eax,0x1f0e08f1
  40aad3:	(bad)  
  40aad4:	push   ebx
  40aad5:	call   0x2350:0x61d3c649
  40aadc:	xchg   edx,eax
  40aadd:	add    ch,BYTE PTR [edi]
  40aadf:	iret   
  40aae0:	addr16 jmp 0xdf41:0xdce042fe
  40aae8:	sub    eax,0xb04f0cab
  40aaed:	sbb    eax,0xb3781fd7
  40aaf2:	add    esi,DWORD PTR [ebx]
  40aaf4:	lahf   
  40aaf5:	scas   al,BYTE PTR es:[edi]
  40aaf6:	add    dh,BYTE PTR [esi-0x71164f00]
  40aafc:	sahf   
  40aafd:	popa   
  40aafe:	loope  0x40ab2e
  40ab00:	iret   
  40ab01:	int3   
  40ab02:	cmc    
  40ab03:	sbb    DWORD PTR [edx-0x187cdefa],edi
  40ab09:	rol    bh,1
  40ab0b:	or     bl,dl
  40ab0d:	es or  al,0xad
  40ab10:	mov    cs,WORD PTR [edi-0x54]
  40ab13:	loop   0x40aabb
  40ab15:	xchg   esi,eax
  40ab16:	sbb    ah,BYTE PTR [ecx+0x211e9b17]
  40ab1c:	add    eax,0x703178dc
  40ab21:	rcr    ebx,cl
  40ab23:	mov    BYTE PTR [ebx-0x4a],bl
  40ab26:	mov    bl,ah
  40ab28:	xchg   esp,eax
  40ab29:	sub    al,0x32
  40ab2b:	and    ebx,DWORD PTR [ecx-0x4b62ad7c]
  40ab31:	call   0x5c8f:0x4fbbf8af
  40ab38:	cmp    dh,ah
  40ab3a:	mov    ch,0x3b
  40ab3c:	sub    dl,BYTE PTR [ebx]
  40ab3e:	push   ebp
  40ab3f:	es dec edx
  40ab41:	lods   al,BYTE PTR ds:[esi]
  40ab42:	setl   BYTE PTR [edx+0x355acc6e]
  40ab49:	loopne 0x40ab8a
  40ab4b:	stos   BYTE PTR es:[edi],al
  40ab4c:	ins    BYTE PTR es:[edi],dx
  40ab4d:	fwait
  40ab4e:	push   edi
  40ab4f:	mov    DWORD PTR [ebx-0xb],eax
  40ab52:	or     eax,edx
  40ab54:	shl    BYTE PTR ds:0xb8854393,0x7
  40ab5b:	bound  edi,QWORD PTR [edx+0x6]
  40ab5e:	jge    0x40ab67
  40ab60:	test   DWORD PTR [edx+0x9],edi
  40ab63:	mov    ebp,edx
  40ab65:	sub    BYTE PTR [edx-0x7016337c],bh
  40ab6b:	xor    BYTE PTR [edx-0x74f29f90],0x38
  40ab72:	mov    ebp,0x4348e7e0
  40ab77:	sub    sp,di
  40ab7a:	call   0x4a01:0x1434a078
  40ab81:	xor    al,BYTE PTR [eax]
  40ab83:	ret    0x85f6
  40ab86:	cli    
  40ab87:	cli    
  40ab88:	cld    
  40ab89:	ret    
  40ab8a:	icebp  
  40ab8b:	mov    al,ds:0xbfe4e255
  40ab90:	mov    edi,edx
  40ab92:	pushf  
  40ab93:	cmp    edx,ebx
  40ab95:	repnz dec ebp
  40ab97:	jmp    0x40ab36
  40ab99:	(bad)  
  40ab9a:	js     0x40abad
  40ab9c:	call   0x37a2:0x37d662f1
  40aba3:	daa    
  40aba4:	les    ecx,FWORD PTR [esp+edi*8]
  40aba7:	scas   eax,DWORD PTR es:[edi]
  40aba8:	dec    esi
  40aba9:	add    eax,0x967ee0c
  40abae:	leave  
  40abaf:	add    DWORD PTR [edx+0x927a5e2],esp
  40abb5:	adc    esi,esp
  40abb7:	xor    eax,0x80ff2176
  40abbc:	mov    ah,0x94
  40abbe:	mov    ebx,0xed2aa0d5
  40abc3:	(bad)  
  40abc5:	jbe    0x40ac04
  40abc7:	push   ecx
  40abc8:	adc    al,0xf2
  40abca:	fidiv  DWORD PTR [ecx-0x35]
  40abcd:	push   edx
  40abce:	test   al,0xe2
  40abd0:	test   eax,0x25d98757
  40abd5:	loop   0x40ab85
  40abd7:	scas   eax,DWORD PTR es:[edi]
  40abd8:	nop
  40abd9:	leave  
  40abda:	fst    st(0)
  40abdc:	dec    edi
  40abdd:	retf   0x976b
  40abe0:	xchg   ebp,eax
  40abe1:	(bad)  
  40abe2:	cmp    eax,DWORD PTR [edi+0x24]
  40abe5:	xor    eax,0x7db0dbef
  40abea:	leave  
  40abeb:	mov    dh,0x2b
  40abed:	stos   DWORD PTR es:[edi],eax
  40abee:	sbb    eax,0x16cf812
  40abf3:	or     BYTE PTR [ebx-0x20fcaf65],al
  40abf9:	mov    cl,0xa1
  40abfb:	pop    edx
  40abfc:	add    DWORD PTR [ebp-0xdaff3b8],esp
  40ac02:	pop    ebx
  40ac03:	push   0x402f3770
  40ac08:	jb     0x40abd0
  40ac0a:	push   edi
  40ac0b:	dec    ebp
  40ac0c:	cs leave 
  40ac0e:	or     dl,BYTE PTR [ecx-0x10]
  40ac11:	mov    dl,0x3b
  40ac13:	out    0xf7,al
  40ac15:	adc    ch,cl
  40ac17:	repnz repnz mov ecx,0x37a513f0
  40ac1e:	and    ah,BYTE PTR [ebx]
  40ac20:	pop    eax
  40ac21:	cmp    BYTE PTR [edi-0x466eff14],bh
  40ac27:	vcmpss xmm7,xmm5,DWORD PTR [ecx+0x41247fff],0xdb
  40ac30:	cwde   
  40ac31:	xchg   esi,eax
  40ac32:	add    ah,BYTE PTR [ebp+0x44c85a6c]
  40ac38:	(bad)
  40ac3c:	cmp    eax,0x51c9a7ac
  40ac41:	xchg   BYTE PTR [eax-0x3eab7d04],bl
  40ac47:	jnp    0x40ac72
  40ac49:	outs   dx,DWORD PTR ds:[esi]
  40ac4a:	mov    ebx,0x53c72783
  40ac4f:	fninit 
  40ac51:	in     eax,dx
  40ac52:	jge    0x40ac9c
  40ac54:	neg    esp
  40ac56:	push   0xd3f1d8af
  40ac5b:	sbb    al,0x49
  40ac5d:	add    BYTE PTR [eax],bl
  40ac5f:	sti    
  40ac60:	ds adc dl,ch
  40ac63:	scas   al,BYTE PTR es:[edi]
  40ac64:	push   es
  40ac65:	sbb    al,0x52
  40ac67:	mov    cl,0xeb
  40ac69:	icebp  
  40ac6a:	popa   
  40ac6b:	and    eax,0xffffff86
  40ac6e:	(bad)  
  40ac6f:	mov    eax,ds:0xc2ee53f1
  40ac74:	pop    esp
  40ac75:	fwait
  40ac76:	mov    bl,0xd3
  40ac78:	frstor [esi+0x188bee44]
  40ac7e:	mov    ah,0x1
  40ac80:	pusha  
  40ac81:	push   edi
  40ac82:	or     al,0x2a
  40ac84:	add    BYTE PTR [edx+0x44],dl
  40ac87:	cdq    
  40ac88:	and    bh,ch
  40ac8a:	pop    ss
  40ac8b:	sbb    eax,0xbb2afd8
  40ac90:	arpl   sp,di
  40ac92:	(bad)  
  40ac93:	sub    eax,0x32aadc2b
  40ac98:	les    esi,FWORD PTR [edx]
  40ac9a:	pop    ebp
  40ac9b:	iret   
  40ac9c:	inc    eax
  40ac9d:	xchg   ebx,eax
  40ac9e:	jb     0x40ac83
  40aca0:	das    
  40aca1:	inc    esp
  40aca2:	out    dx,eax
  40aca3:	sbb    BYTE PTR [eax+0x17],bh
  40aca6:	in     al,dx
  40aca7:	bound  eax,QWORD PTR [eax+0x3fd94fc1]
  40acad:	scas   al,BYTE PTR es:[edi]
  40acae:	fucompp 
  40acb0:	mov    esp,0xfc8df093
  40acb5:	and    bh,dh
  40acb7:	jge    0x40ac6e
  40acb9:	cmp    eax,0x980c821c
  40acbe:	jmp    FWORD PTR [eax]
  40acc0:	pop    edx
  40acc1:	outs   dx,BYTE PTR ds:[esi]
  40acc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc3:	push   cs
  40acc4:	xlat   BYTE PTR ds:[ebx]
  40acc5:	icebp  
  40acc6:	les    esi,FWORD PTR [ebp-0x94cf4c8]
  40accc:	inc    edx
  40accd:	stc    
  40acce:	and    DWORD PTR [ecx],edx
  40acd0:	pop    es
  40acd1:	in     eax,dx
  40acd2:	mov    bh,0x36
  40acd4:	(bad)  
  40acd5:	pop    ebp
  40acd6:	repz mov gs,WORD PTR gs:[edi]
  40acda:	daa    
  40acdb:	sahf   
  40acdc:	push   eax
  40acdd:	call   DWORD PTR [edi]
  40acdf:	cwde   
  40ace0:	bound  edx,QWORD PTR [edi]
  40ace2:	lahf   
  40ace3:	fstp   DWORD PTR [ecx+edx*2+0x47cdfac9]
  40acea:	mov    BYTE PTR [ecx],bh
  40acec:	push   ebx
  40aced:	clc    
  40acee:	pop    ebp
  40acef:	rol    BYTE PTR gs:[edi],1
  40acf2:	xor    DWORD PTR [ebx-0x39954a67],ecx
  40acf8:	pop    es
  40acf9:	xor    al,0x10
  40acfb:	dec    ebp
  40acfc:	pop    es
  40acfd:	push   esi
  40acfe:	icebp  
  40acff:	ffreep st(0)
  40ad01:	dec    ebp
  40ad02:	push   cs
  40ad03:	pop    ebx
  40ad04:	mov    eax,ds:0x67f19a51
  40ad09:	test   DWORD PTR [ebp+0x59],eax
  40ad0c:	rcl    BYTE PTR [ebp-0x2c],1
  40ad0f:	cld    
  40ad10:	jmp    0x70bde141
  40ad15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad16:	sub    dl,al
  40ad18:	adc    BYTE PTR [ebx],0xb3
  40ad1b:	push   edi
  40ad1c:	and    al,0x1e
  40ad1e:	das    
  40ad1f:	xchg   ebp,eax
  40ad20:	stc    
  40ad21:	mov    DWORD PTR [edi],esp
  40ad23:	pop    ebx
  40ad24:	xchg   edx,eax
  40ad25:	not    BYTE PTR [edx+esi*8]
  40ad28:	sub    al,0x13
  40ad2a:	add    bl,BYTE PTR [esi+esi*2]
  40ad2d:	ret    0x431f
  40ad30:	add    eax,0x3c134d1c
  40ad35:	mov    edi,edx
  40ad37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad38:	outs   dx,BYTE PTR ds:[esi]
  40ad39:	adc    eax,0xee6836d7
  40ad3e:	je     0x40acd4
  40ad40:	aam    0x61
  40ad42:	add    BYTE PTR [ecx+0x26],dl
  40ad45:	adc    BYTE PTR [edx+0x321605dc],ah
  40ad4b:	aad    0x96
  40ad4d:	call   0x9825:0x3378b5fb
  40ad54:	mov    ch,0x24
  40ad56:	leave  
  40ad57:	mov    BYTE PTR [ebx+ebp*1],0xb9
  40ad5b:	sub    DWORD PTR [ebp+0x44c236e2],0x634e9629
  40ad65:	push   edx
  40ad66:	test   BYTE PTR [ebx+0x2818976e],bh
  40ad6c:	ins    DWORD PTR es:[edi],dx
  40ad6d:	sbb    dh,BYTE PTR [ecx+0x24]
  40ad70:	pop    ebx
  40ad71:	ret    
  40ad72:	push   es
  40ad73:	dec    eax
  40ad74:	stc    
  40ad75:	mov    ds:0xb6350c3c,al
  40ad7a:	out    dx,al
  40ad7b:	jp     0x40ad30
  40ad7d:	or     ch,bl
  40ad7f:	xchg   DWORD PTR [edi],ecx
  40ad81:	jmp    0xc807:0x6da3bfbc
  40ad88:	pop    es
  40ad89:	fwait
  40ad8a:	shr    BYTE PTR [ebx+edi*8+0x4b],1
  40ad8e:	imul   edi,eax,0x2
  40ad91:	mov    edi,0x322fda79
  40ad96:	sahf   
  40ad97:	xchg   DWORD PTR [eax-0xa],edi
  40ad9a:	test   eax,0xa2a4dc49
  40ad9f:	out    dx,eax
  40ada0:	mov    al,0xed
  40ada2:	or     edx,esp
  40ada4:	gs sbb esi,esp
  40ada7:	mov    WORD PTR [ecx+0x73430445],gs
  40adad:	adc    eax,ebp
  40adaf:	mov    ds:0x3692f8ff,al
  40adb4:	add    ch,bl
  40adb6:	sbb    edi,DWORD PTR [eax]
  40adb8:	xchg   edx,eax
  40adb9:	mov    dl,0xb8
  40adbb:	out    dx,al
  40adbc:	mov    dl,0x41
  40adbe:	inc    ecx
  40adbf:	mov    ecx,0x14b3959e
  40adc4:	(bad)  
  40adc5:	jno    0x40ae0a
  40adc7:	mov    cl,0x97
  40adc9:	loop   0x40ae22
  40adcb:	xchg   BYTE PTR [ebx+edi*1+0x549f0f21],dh
  40add2:	enter  0xee84,0x9b
  40add6:	lock je 0x40ade2
  40add9:	add    al,0x7
  40addb:	sub    al,0xe8
  40addd:	adc    ch,BYTE PTR [eax]
  40addf:	or     al,0xc6
  40ade1:	push   esp
  40ade3:	jl     0x40adb5
  40ade5:	call   DWORD PTR [ebx]
  40ade7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade8:	mov    bl,0x63
  40adea:	pop    ds
  40adeb:	dec    eax
  40adec:	imul   edx,eax,0x56
  40adef:	jg     0x40adab
  40adf1:	sbb    DWORD PTR [edi],ebx
  40adf3:	fidiv  DWORD PTR [esi+0x6e]
  40adf6:	cmp    ah,bh
  40adf8:	data16 xchg BYTE PTR [ecx-0x55],cl
  40adfc:	xor    edx,edi
  40adfe:	mov    al,0xf1
  40ae00:	adc    DWORD PTR [edi+0x31d640bb],ebx
  40ae06:	dec    edi
  40ae07:	int    0xbb
  40ae09:	rcl    BYTE PTR [ebp-0x15],0xda
  40ae0d:	test   esi,edx
  40ae0f:	repnz retf 0x9c46
  40ae13:	push   es
  40ae14:	or     BYTE PTR [edi],bl
  40ae16:	aaa    
  40ae17:	inc    esi
  40ae18:	mov    dl,0xa1
  40ae1a:	jns    0x40ae16
  40ae1c:	dec    esp
  40ae1d:	or     eax,0x81cb4ac9
  40ae22:	shl    BYTE PTR [edx],1
  40ae24:	xchg   ebp,eax
  40ae25:	test   al,0x69
  40ae27:	ficomp WORD PTR [ebp+0x13]
  40ae2a:	in     al,0x74
  40ae2c:	jbe    0x40ae01
  40ae2e:	or     eax,0x133819a
  40ae33:	sub    DWORD PTR [esp+edi*8],esp
  40ae36:	jno    0x40ae87
  40ae38:	sub    BYTE PTR [edi],ch
  40ae3a:	stos   DWORD PTR es:[edi],eax
  40ae3b:	mov    DWORD PTR [ebx-0x18],ecx
  40ae3e:	imul   ebp,DWORD PTR [ebx-0x5f],0xeea14104
  40ae45:	mov    esi,0x626f65a9
  40ae4a:	aas    
  40ae4b:	inc    esp
  40ae4c:	sbb    al,0xe7
  40ae4e:	ins    DWORD PTR es:[edi],dx
  40ae4f:	xor    bh,BYTE PTR [ebx+0x66752538]
  40ae55:	jl     0x40aea6
  40ae57:	lock fs jmp 0xa8c2:0xc6bbe28a
  40ae60:	add    BYTE PTR [ebx-0x676e4e09],0xa4
  40ae67:	cmp    al,0x7f
  40ae69:	inc    esi
  40ae6a:	sti    
  40ae6b:	mov    esp,0xab335648
  40ae70:	scas   al,BYTE PTR es:[edi]
  40ae71:	cs shl esp,1
  40ae74:	shl    edi,cl
  40ae76:	pop    eax
  40ae77:	add    edi,esp
  40ae79:	mov    dh,0x71
  40ae7b:	rcl    al,0x4
  40ae7e:	dec    eax
  40ae7f:	jo     0x40aec3
  40ae81:	mov    dl,0x6e
  40ae83:	(bad)
  40ae87:	test   BYTE PTR [ebx],bh
  40ae89:	pop    esi
  40ae8a:	in     al,dx
  40ae8b:	cdq    
  40ae8c:	loopne 0x40ae9c
  40ae8e:	mov    ds:0x5f975415,eax
  40ae93:	xchg   DWORD PTR [edx-0x2a],esp
  40ae96:	or     DWORD PTR [eax-0x1b96944e],0x1f
  40ae9d:	aam    0xd5
  40ae9f:	mov    ds:0x7e3f7bee,al
  40aea4:	outs   dx,BYTE PTR ds:[esi]
  40aea5:	xor    al,0x3
  40aea7:	(bad)  
  40aea8:	int    0x7a
  40aeaa:	jge    0x40af01
  40aeac:	fnstenv [esi+0x39dfb1e0]
  40aeb2:	fidiv  DWORD PTR [esi+edx*1]
  40aeb5:	stc    
  40aeb6:	repz adc eax,0x35ea159d
  40aebc:	xchg   esi,eax
  40aebd:	pop    ss
  40aebe:	add    dl,ah
  40aec0:	(bad)  
  40aec1:	adc    eax,0x58d2639d
  40aec6:	pushf  
  40aec7:	in     eax,0x4d
  40aec9:	sbb    BYTE PTR [eax+0x51],al
  40aecc:	movnti DWORD PTR [edi+0x62],ecx
  40aed0:	sbb    al,0xfc
  40aed2:	adc    DWORD PTR [ebp-0x48ab7c4b],eax
  40aed8:	dec    edi
  40aed9:	xor    al,0x73
  40aedb:	jnp    0x40aeb9
  40aedd:	adc    DWORD PTR [ecx+0x6e6ec4b8],esp
  40aee3:	adc    eax,0xe9886b41
  40aee8:	push   ebx
  40aee9:	pop    eax
  40aeea:	shr    BYTE PTR [edi+ebx*8+0x3544a48d],1
  40aef1:	sbb    eax,0xbeceb042
  40aef6:	and    DWORD PTR [edi-0x50],ebp
  40aef9:	dec    eax
  40aefa:	sub    esi,DWORD PTR [ecx-0x559a4018]
  40af00:	ja     0x40af81
  40af02:	je     0x40af83
  40af04:	or     al,0x63
  40af06:	jp     0x40aef7
  40af08:	stos   DWORD PTR es:[edi],eax
  40af09:	scas   eax,DWORD PTR es:[edi]
  40af0a:	and    al,0xcb
  40af0c:	xchg   edi,eax
  40af0d:	icebp  
  40af0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af0f:	outs   dx,DWORD PTR ds:[esi]
  40af10:	pop    ebp
  40af11:	out    0x81,eax
  40af13:	push   ebp
  40af14:	daa    
  40af15:	push   ebx
  40af16:	popf   
  40af17:	dec    ebx
  40af18:	xor    eax,DWORD PTR [edx]
  40af1a:	imul   edi,ebp,0x74
  40af1d:	and    ah,dh
  40af1f:	fwait
  40af20:	ret    0x43dd
  40af23:	inc    ebx
  40af24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af25:	push   ebx
  40af26:	nop
  40af27:	xchg   ebp,eax
  40af28:	xchg   BYTE PTR [esi+0x6788bf26],bl
  40af2e:	mov    ds:0x475c7cf1,eax
  40af33:	lds    eax,FWORD PTR [esi-0x3d646155]
  40af39:	test   edi,ebx
  40af3b:	stc    
  40af3c:	xchg   edx,eax
  40af3d:	xchg   DWORD PTR [esp+ebx*1],ecx
  40af40:	fisttp WORD PTR [edx-0x5a]
  40af43:	mov    al,cl
  40af45:	push   esi
  40af46:	add    eax,0xfff7190b
  40af4b:	int    0x7d
  40af4d:	lea    edx,[ebx-0x5f]
  40af50:	sub    al,0x75
  40af52:	out    dx,al
  40af53:	(bad)  [eax-0x1970737d]
  40af59:	scas   eax,DWORD PTR es:[edi]
  40af5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5b:	xor    eax,ebx
  40af5d:	imul   edi,eax,0x9850863f
  40af63:	mov    dh,0x1d
  40af65:	cld    
  40af66:	add    BYTE PTR [edi+ebx*4+0x51],bh
  40af6a:	pop    edi
  40af6b:	ret    0x8475
  40af6e:	dec    eax
  40af6f:	in     eax,dx
  40af70:	sar    BYTE PTR [ecx],1
  40af72:	mov    esi,0x5f4695db
  40af77:	mov    WORD PTR [edx+0x4be26cbd],es
  40af7d:	aad    0xc
  40af7f:	push   ecx
  40af80:	pusha  
  40af81:	jb     0x40af46
  40af83:	push   ds
  40af84:	lea    ebp,[ecx-0x974d417]
  40af8a:	outs   dx,DWORD PTR ds:[esi]
  40af8b:	sub    BYTE PTR [esi+edx*8+0x79e519f0],0xb4
  40af93:	aas    
  40af94:	pop    esp
  40af95:	xor    al,0x9a
  40af97:	ret    0x5cf3
  40af9a:	pop    ebp
  40af9b:	and    al,0x66
  40af9d:	gs pop ecx
  40af9f:	mov    dh,BYTE PTR [ebx-0x1e045a85]
  40afa5:	xor    ecx,esp
  40afa7:	and    al,0x3f
  40afa9:	or     al,0x11
  40afab:	jo     0x40afa7
  40afad:	cmc    
  40afae:	fimul  WORD PTR [eax+0x15]
  40afb1:	mov    dh,0xd6
  40afb3:	mov    ecx,0xa954afb9
  40afb8:	mov    al,0x7b
  40afba:	out    0xc1,eax
  40afbc:	or     dl,BYTE PTR [eax-0x2e]
  40afbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc0:	out    0x9c,al
  40afc2:	lds    ebx,FWORD PTR [ebx+0x542fd67c]
  40afc8:	or     eax,0x7f485748
  40afcd:	test   BYTE PTR [eax+0x32],ah
  40afd0:	jge    0x40af7c
  40afd2:	push   eax
  40afd3:	imul   edx,ebp,0x68ac4fc8
  40afd9:	sub    eax,0x75bb05d0
  40afde:	xchg   BYTE PTR [edx+ebx*2+0xd],al
  40afe2:	xor    ecx,ecx
  40afe4:	in     al,dx
  40afe5:	std    
  40afe6:	jl     0x40b056
  40afe8:	dec    edx
  40afe9:	ror    DWORD PTR [edx+0x26],cl
  40afec:	inc    ebp
  40afed:	mov    eax,esi
  40afef:	jmp    0x40afe6
  40aff1:	(bad)  
  40aff2:	aaa    
  40aff3:	cmp    DWORD PTR [edi+0x592602ee],edi
  40aff9:	add    al,0x54
  40affb:	jge    0x40b054
  40affd:	xor    eax,0xb4e19f22
  40b002:	adc    edx,esp
  40b004:	xchg   edi,eax
  40b005:	stos   BYTE PTR es:[edi],al
  40b006:	dec    ecx
  40b007:	stos   BYTE PTR es:[edi],al
  40b008:	cmc    
  40b009:	xor    edx,DWORD PTR [ebx]
  40b00b:	jmp    0x5007:0x5510f9da
  40b012:	mov    bl,0x84
  40b014:	out    0x95,eax
  40b016:	stos   BYTE PTR es:[edi],al
  40b017:	sti    
  40b018:	xchg   ah,ch
  40b01a:	rcr    BYTE PTR [ebx+eax*8-0x33],0x29
  40b01f:	or     al,0xe
  40b021:	or     al,0xcd
  40b023:	gs iret 
  40b025:	cli    
  40b026:	out    0x11,eax
  40b028:	cmp    dl,BYTE PTR ds:0x388dfcf9
  40b02e:	(bad)  
  40b02f:	(bad)  
  40b030:	nop
  40b031:	add    BYTE PTR [edi-0x6c],bh
  40b034:	(bad)  
  40b035:	mov    eax,0xf61b2d8e
  40b03a:	xor    DWORD PTR [ebp-0x744e5885],0xffffffae
  40b041:	mov    WORD PTR [ecx+eax*8+0x12],?
  40b045:	cdq    
  40b046:	jl     0x40b041
  40b048:	sbb    ax,sp
  40b04b:	(bad)  
  40b04c:	out    0x35,eax
  40b04e:	jo     0x40aff1
  40b050:	scas   al,BYTE PTR es:[edi]
  40b051:	(bad)  
  40b052:	push   eax
  40b053:	stos   BYTE PTR es:[edi],al
  40b054:	retf   
  40b055:	push   es
  40b056:	pop    edi
  40b057:	push   ds
  40b058:	enter  0x68d0,0xc2
  40b05c:	mov    ds:0x1f80f5bf,al
  40b061:	push   ebx
  40b062:	add    bl,BYTE PTR [esi+0x63fd63c3]
  40b068:	pop    ecx
  40b069:	cdq    
  40b06a:	sbb    BYTE PTR [ebx+edx*8+0x23d76b41],0xd8
  40b072:	sub    DWORD PTR gs:[edx+0xc],esp
  40b076:	mov    esp,0x54a717a0
  40b07b:	mov    esi,0xa619d82c
  40b080:	test   DWORD PTR [ebx],ecx
  40b082:	push   edx
  40b083:	pushf  
  40b084:	xor    bh,ah
  40b086:	stc    
  40b087:	cmp    esi,edx
  40b089:	cmp    eax,0x2cc1574a
  40b08e:	fsubp  st(5),st
  40b090:	jb     0x40b0c0
  40b092:	mov    WORD PTR [esi*4-0x114d8efa],?
  40b099:	cmp    DWORD PTR [ecx+0xf18cbfc],eax
  40b09f:	inc    edi
  40b0a1:	fsub   QWORD PTR [esp+ecx*8-0x5a069c7a]
  40b0a8:	fldenv [edi+0x5e8f9c06]
  40b0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0af:	push   esi
  40b0b0:	cmp    DWORD PTR [ebx],edi
  40b0b2:	and    al,0xf0
  40b0b4:	popa   
  40b0b5:	cmp    BYTE PTR [edi+0x35],dl
  40b0b8:	or     DWORD PTR [ecx-0x62058169],ebx
  40b0be:	xor    esp,ecx
  40b0c0:	cmp    esp,esp
  40b0c2:	dec    eax
  40b0c3:	sub    DWORD PTR [edi+edi*1-0x10],edx
  40b0c7:	lea    esi,[eax-0x2a]
  40b0ca:	call   0x9e0a:0xf41b6a92
  40b0d1:	push   eax
  40b0d2:	fs fwait
  40b0d4:	je     0x40b137
  40b0d6:	neg    DWORD PTR [ebx+edi*8+0x14388d80]
  40b0dd:	or     al,0x8d
  40b0df:	add    dh,dl
  40b0e1:	dec    esp
  40b0e2:	cs cld 
  40b0e4:	add    al,0xfa
  40b0e6:	mov    WORD PTR [ecx-0x422eff39],ss
  40b0ec:	inc    edx
  40b0ed:	in     eax,0x44
  40b0ef:	push   ebp
  40b0f0:	ins    BYTE PTR es:[edi],dx
  40b0f1:	arpl   dx,cx
  40b0f3:	sbb    bl,bl
  40b0f5:	lods   al,BYTE PTR ds:[esi]
  40b0f6:	push   0xa9bb1377
  40b0fb:	push   ds
  40b0fc:	dec    esi
  40b0fd:	stc    
  40b0fe:	sub    DWORD PTR [ebx],0x6a5d0bdf
  40b104:	enter  0x285f,0xe3
  40b108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b109:	sbb    eax,0x7a93f40f
  40b10e:	(bad)  
  40b10f:	jmp    0xd6772193
  40b114:	cmp    DWORD PTR [ecx+0x2f],eax
  40b117:	cmp    BYTE PTR [ebx],al
  40b119:	fucom  st(1)
  40b11b:	cmp    BYTE PTR [ebp+eiz*8-0x7b],dh
  40b11f:	popa   
  40b120:	and    ah,ah
  40b122:	out    dx,eax
  40b123:	inc    ebp
  40b124:	test   edi,edx
  40b126:	sub    cl,BYTE PTR [ebp-0x4f]
  40b129:	aad    0x2
  40b12b:	jle    0x40b0d7
  40b12d:	adc    dl,bh
  40b12f:	fcom   st(7)
  40b131:	call   0x771d02c
  40b136:	enter  0x8741,0xc3
  40b13a:	icebp  
  40b13b:	sbb    al,0xd3
  40b13d:	or     ebp,ebp
  40b13f:	(bad)  
  40b140:	daa    
  40b141:	rcr    DWORD PTR [ecx+0x7a],cl
  40b144:	xor    al,0x84
  40b146:	pop    ss
  40b147:	outs   dx,DWORD PTR ds:[esi]
  40b148:	mov    bl,0xae
  40b14a:	aam    0x64
  40b14c:	in     al,0x5f
  40b14e:	shl    DWORD PTR [ebx+edx*1+0x1e9c5357],cl
  40b155:	test   al,0x65
  40b157:	icebp  
  40b158:	adc    al,0x99
  40b15a:	mov    ebp,ds
  40b15c:	jl     0x40b116
  40b15e:	int3   
  40b15f:	lods   al,BYTE PTR ds:[esi]
  40b160:	pop    edi
  40b161:	push   ss
  40b162:	setae  BYTE PTR [ecx]
  40b165:	ficomp WORD PTR [edx]
  40b167:	xchg   edx,eax
  40b168:	fnstenv [edi-0x46e874c1]
  40b16e:	test   edx,0x305138d7
  40b174:	mov    dl,0xa3
  40b176:	and    BYTE PTR [ecx+0x6a20ab55],0xa
  40b17d:	mov    bl,0xd8
  40b17f:	scas   al,BYTE PTR es:[edi]
  40b180:	sub    cl,BYTE PTR [ebx-0x26]
  40b183:	push   ss
  40b184:	push   esi
  40b185:	push   es
  40b186:	scas   al,BYTE PTR es:[edi]
  40b187:	call   0xd5e3:0xcfdea9b1
  40b18e:	sbb    dl,al
  40b190:	xchg   esp,eax
  40b191:	push   0x7b5ba3cd
  40b196:	outs   dx,BYTE PTR ds:[esi]
  40b197:	(bad)  
  40b198:	loope  0x40b1c1
  40b19a:	xchg   esi,eax
  40b19b:	sub    DWORD PTR [esi+eax*8-0x563b721d],esp
  40b1a2:	jo     0x40b192
  40b1a4:	sbb    DWORD PTR [eax],edx
  40b1a6:	aaa    
  40b1a7:	add    ch,BYTE PTR ds:0xeaf33c55
  40b1ad:	int    0x6e
  40b1af:	dec    edi
  40b1b0:	cmp    cl,cl
  40b1b2:	imul   eax,edx,0xffffffc1
  40b1b5:	hlt    
  40b1b6:	jmp    0x40b236
  40b1b8:	rcl    BYTE PTR [ecx],0xb3
  40b1bb:	imul   edx,DWORD PTR [edi],0xb0230c8a
  40b1c1:	xchg   ebx,eax
  40b1c2:	push   ds
  40b1c3:	lods   al,BYTE PTR ds:[esi]
  40b1c4:	in     eax,0xc7
  40b1c6:	vpaddusw ymm1,ymm6,YMMWORD PTR [esi+0xf78fbad]
  40b1ce:	aas    
  40b1cf:	sub    edi,DWORD PTR [edi-0x67]
  40b1d2:	cli    
  40b1d3:	and    eax,0x568fc8b6
  40b1d8:	sub    al,0x1b
  40b1da:	xchg   ebp,eax
  40b1db:	add    DWORD PTR [ecx+0x246a1857],ecx
  40b1e1:	pop    ecx
  40b1e2:	data16 or al,0x4b
  40b1e5:	sub    al,0xac
  40b1e7:	push   ss
  40b1e8:	or     edi,DWORD PTR [ebx-0x36]
  40b1eb:	test   bl,0x26
  40b1ee:	mov    eax,0xdaf69ef1
  40b1f3:	push   edi
  40b1f4:	mov    dl,0xf7
  40b1f6:	imul   ecx,ebp,0x26e172a1
  40b1fc:	aaa    
  40b1fd:	pop    edi
  40b1fe:	ja     0x40b1b4
  40b200:	(bad)  
  40b201:	pop    edi
  40b202:	sar    DWORD PTR [eax*4+0x5cdb8e70],cl
  40b209:	fimul  DWORD PTR [ebx]
  40b20b:	or     dh,BYTE PTR [ecx+0x743f6055]
  40b211:	add    eax,0x6f1ab65b
  40b216:	cdq    
  40b217:	repz adc eax,0x24d6b8e0
  40b21d:	test   eax,0x8ca91d63
  40b222:	cmp    al,0x34
  40b224:	sbb    al,0x14
  40b226:	cmc    
  40b227:	adc    DWORD PTR [edi+0x64b2d830],0xffffffd0
  40b22e:	and    esp,DWORD PTR [esi-0x43ad33bb]
  40b234:	sar    ebp,0xe0
  40b237:	xchg   edi,eax
  40b238:	pop    eax
  40b239:	cmp    al,0x50
  40b23b:	pusha  
  40b23c:	cmp    eax,DWORD PTR [ecx+0x1e16a067]
  40b242:	ja     0x40b1ec
  40b244:	(bad)  
  40b245:	or     ebp,0x3444f2e4
  40b24b:	cld    
  40b24c:	add    al,0xf3
  40b24e:	enter  0x7687,0x86
  40b252:	imul   eax,DWORD PTR [ecx-0x3f74cc2c],0x36
  40b259:	fsub   DWORD PTR [edi-0x52c15d5]
  40b25f:	inc    edx
  40b260:	test   DWORD PTR [edi-0x4ad77084],0x63000b80
  40b26a:	mov    ds:0x146b62b9,eax
  40b26f:	cmp    DWORD PTR [ebp+0x733cbd6a],0xc3392ac1
  40b279:	pushf  
  40b27a:	push   edi
  40b27b:	outs   dx,DWORD PTR ds:[esi]
  40b27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b27d:	add    bl,BYTE PTR [esi-0x69]
  40b280:	mov    bl,0x1e
  40b282:	pop    esp
  40b283:	mov    ebp,0x6c208a07
  40b288:	out    0x46,eax
  40b28a:	xchg   ecx,eax
  40b28b:	(bad)  
  40b28c:	enter  0x4f42,0x15
  40b290:	mov    edx,0x21d453b6
  40b295:	cwde   
  40b296:	cs aaa 
  40b298:	(bad)  
  40b299:	es pop esi
  40b29b:	and    DWORD PTR [edi+ecx*2+0x7628d32d],0xfffffffe
  40b2a3:	int    0x41
  40b2a5:	aaa    
  40b2a6:	pop    ebp
  40b2a7:	pushf  
  40b2a8:	mov    ebx,0x1115fad9
  40b2ad:	out    0xf8,al
  40b2af:	test   BYTE PTR [edx+0x7dce0a36],bh
  40b2b5:	scas   eax,DWORD PTR es:[edi]
  40b2b6:	into   
  40b2b7:	mov    ebx,DWORD PTR [ebx]
  40b2b9:	ins    DWORD PTR es:[edi],dx
  40b2ba:	or     DWORD PTR [ecx-0x38],esp
  40b2bd:	push   ebx
  40b2be:	dec    ecx
  40b2bf:	adc    edi,0x47
  40b2c2:	mov    ds,WORD PTR [eax]
  40b2c4:	pusha  
  40b2c5:	push   edx
  40b2c6:	nop
  40b2c7:	push   ss
  40b2c8:	mov    ebp,0x6670fef0
  40b2cd:	push   ds
  40b2ce:	jge    0x40b2f8
  40b2d0:	test   BYTE PTR [ebx+ebx*4],0x6e
  40b2d4:	inc    esp
  40b2d5:	adc    bl,BYTE PTR [ecx]
  40b2d7:	imul   ebp,DWORD PTR [ebp+0x5866dca1],0x40
  40b2de:	and    BYTE PTR [ecx],bh
  40b2e0:	mov    ch,0x17
  40b2e2:	(bad)  [esi+esi*1]
  40b2e5:	sahf   
  40b2e6:	je     0x40b316
  40b2e8:	icebp  
  40b2e9:	push   ecx
  40b2ea:	call   0x2320:0xe277ce8c
  40b2f1:	xchg   edi,eax
  40b2f2:	test   al,0x13
  40b2f4:	daa    
  40b2f5:	xor    eax,DWORD PTR [edx]
  40b2f7:	icebp  
  40b2f8:	mov    ecx,0xee73230d
  40b2fd:	adc    ebp,DWORD PTR [eax]
  40b2ff:	scas   al,BYTE PTR es:[edi]
  40b300:	lods   eax,DWORD PTR ds:[esi]
  40b301:	sbb    al,0x4b
  40b303:	sbb    bh,BYTE PTR [esi-0x65a9eeac]
  40b309:	mov    al,ds:0xd020da9a
  40b30e:	cli    
  40b30f:	popf   
  40b310:	mov    eax,ds:0xf6efb86
  40b315:	ja     0x40b2b0
  40b317:	push   ebp
  40b318:	push   ebx
  40b319:	fisub  WORD PTR [ecx+eiz*1-0x2c70647a]
  40b320:	cmp    BYTE PTR [esi],ch
  40b322:	dec    ebx
  40b323:	add    al,0xf1
  40b325:	or     BYTE PTR cs:[esi-0x557f7429],bh
  40b32c:	xchg   edx,eax
  40b32d:	jno    0x40b34c
  40b32f:	pop    esp
  40b330:	stos   BYTE PTR es:[edi],al
  40b331:	adc    BYTE PTR [edi],bl
  40b333:	mov    dh,ah
  40b335:	pop    ebp
  40b336:	sbb    eax,0x1823de5f
  40b33b:	rcl    DWORD PTR ds:0x7a6b05eb,cl
  40b341:	hlt    
  40b342:	lock adc dl,BYTE PTR [ebp-0x77e59273]
  40b349:	add    dh,BYTE PTR [ebx-0x5b0f61b]
  40b34f:	mov    ds:0x2b1d430d,eax
  40b354:	mov    esp,0xcff5b1e6
  40b359:	fistp  WORD PTR [edx+0x26]
  40b35c:	jns    0x40b3d7
  40b35e:	loop   0x40b323
  40b360:	sar    al,0x6a
  40b363:	call   0xf642:0x57abcdb3
  40b36a:	lods   eax,DWORD PTR ds:[esi]
  40b36b:	push   esi
  40b36c:	lock and BYTE PTR [eax+0x2f],al
  40b370:	mov    dl,0x91
  40b372:	push   esp
  40b373:	xchg   si,ax
  40b375:	shr    BYTE PTR [edi-0x354ef2e],0xf4
  40b37c:	mov    cl,BYTE PTR [edi]
  40b37e:	int    0x3a
  40b380:	pop    ebx
  40b381:	cmc    
  40b382:	or     ebx,DWORD PTR [edx-0x59]
  40b385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b386:	cmp    al,0x1d
  40b388:	or     ecx,edx
  40b38a:	jge    0x40b360
  40b38c:	jno    0x40b3d4
  40b38e:	std    
  40b38f:	push   ebx
  40b390:	stc    
  40b391:	(bad)  
  40b392:	repnz sbb eax,0xe001521b
  40b398:	out    0xc3,al
  40b39a:	mov    DWORD PTR [edi],ebx
  40b39c:	(bad)  
  40b39d:	iret   
  40b39e:	cmp    BYTE PTR [edi-0x28],bh
  40b3a1:	out    dx,al
  40b3a2:	mov    bl,0x1a
  40b3a4:	sub    DWORD PTR ds:[edi],esi
  40b3a7:	retf   
  40b3a8:	and    dl,al
  40b3aa:	outs   dx,DWORD PTR ds:[esi]
  40b3ab:	mov    ebp,0x126e0fa8
  40b3b0:	cwde   
  40b3b1:	xchg   ecx,eax
  40b3b2:	sub    esi,esp
  40b3b4:	mov    ecx,0xc08dbaea
  40b3b9:	jns    0x2dcaa9c2
  40b3bf:	and    DWORD PTR [eax-0x12],eax
  40b3c2:	sub    BYTE PTR [ebp+0x41ba2558],0xad
  40b3c9:	or     eax,0x6a925c31
  40b3ce:	dec    edi
  40b3cf:	mov    cl,0x9f
  40b3d1:	pop    ebp
  40b3d2:	out    0xe9,al
  40b3d4:	(bad)  
  40b3d5:	pop    ebp
  40b3d6:	sub    BYTE PTR [eax+eax*2+0x1f],ah
  40b3da:	fwait
  40b3db:	in     al,dx
  40b3dc:	daa    
  40b3dd:	pop    edi
  40b3de:	cwde   
  40b3df:	mov    esi,0x4767ba57
  40b3e4:	sbb    al,0x1d
  40b3e6:	(bad)  
  40b3e7:	xchg   ecx,eax
  40b3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e9:	and    eax,0x1619fbef
  40b3ee:	jecxz  0x40b3f2
  40b3f0:	sub    DWORD PTR [edi-0x2f],ebx
  40b3f3:	mov    ds:0xe871e43a,eax
  40b3f8:	jl     0x40b385
  40b3fa:	stc    
  40b3fb:	clc    
  40b3fc:	mov    ds:0x67bc4cca,eax
  40b401:	sbb    BYTE PTR [esi],dh
  40b403:	ficom  WORD PTR [ebx+0x6f]
  40b406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b407:	into   
  40b408:	add    eax,edi
  40b40a:	inc    ebx
  40b40b:	scas   al,BYTE PTR es:[edi]
  40b40c:	rcr    edi,cl
  40b40e:	dec    esi
  40b40f:	into   
  40b410:	add    DWORD PTR [eax+0x13456b4f],esp
  40b416:	xchg   ebx,eax
  40b417:	ret    
  40b418:	adc    dl,dl
  40b41a:	add    BYTE PTR [ebp-0x2ae1d809],dl
  40b420:	push   es
  40b421:	dec    ebp
  40b422:	jae    0x40b3aa
  40b424:	fnsave [ebx+0x2c]
  40b427:	and    BYTE PTR [edi],ch
  40b429:	ret    0xc4fc
  40b42c:	sbb    al,0xd5
  40b42e:	inc    ecx
  40b42f:	xchg   esp,eax
  40b430:	(bad)  
  40b431:	dec    edi
  40b432:	ret    0xd2f3
  40b435:	mov    ds:0x8e62b583,eax
  40b43a:	jge    0x40b49d
  40b43c:	jb     0x40b3ef
  40b43e:	pop    ds
  40b43f:	popa   
  40b440:	clc    
  40b441:	mov    dh,0x9c
  40b443:	mov    bh,BYTE PTR [ebp-0x26]
  40b446:	or     eax,DWORD PTR [ebx-0x3bf884d8]
  40b44c:	ret    
  40b44d:	je     0x40b43c
  40b44f:	add    ah,al
  40b451:	ins    BYTE PTR es:[edi],dx
  40b452:	inc    esi
  40b453:	cs sbb eax,0x8d1c166d
  40b459:	or     al,0x0
  40b45b:	mov    ebp,0xce3ced6
  40b460:	rcr    al,1
  40b462:	push   cs
  40b463:	or     ebp,DWORD PTR [ebx+0x37cb5109]
  40b469:	imul   edx,DWORD PTR ds:0x2a888744,0xf
  40b470:	pop    edx
  40b471:	jo     0x40b4e5
  40b473:	stos   BYTE PTR es:[edi],al
  40b474:	mov    WORD PTR [edx+0x7210553b],ds
  40b47a:	push   eax
  40b47b:	mov    ds:0x84bb13ee,al
  40b480:	lds    ebp,FWORD PTR [esp+edi*4+0x10]
  40b484:	mov    ds,edx
  40b486:	imul   ebp,ecx,0x1a
  40b489:	mov    fs,ecx
  40b48b:	dec    ebp
  40b48c:	fisttp WORD PTR [esi+0x30]
  40b48f:	nop
  40b490:	mov    cl,0xfa
  40b492:	sub    BYTE PTR [ecx],dh
  40b494:	inc    esp
  40b495:	pusha  
  40b496:	cmp    BYTE PTR [ebx+eax*8],bh
  40b499:	sbb    BYTE PTR [ecx-0x4560cc2e],dh
  40b49f:	add    bx,sp
  40b4a2:	int3   
  40b4a3:	sbb    esp,DWORD PTR [edi-0x31fe4f1]
  40b4a9:	jbe    0x40b511
  40b4ab:	adc    DWORD PTR [ebx],edi
  40b4ad:	addr16 rol ebp,cl
  40b4b0:	mov    al,0xb1
  40b4b2:	adc    eax,0xbbfa0b9
  40b4b7:	cdq    
  40b4b8:	call   0x7e7ec737
  40b4bd:	lods   al,BYTE PTR ds:[esi]
  40b4be:	add    eax,0x69ca6ae3
  40b4c3:	or     eax,0x8132345a
  40b4c8:	addr16 mov ah,0xe8
  40b4cb:	std    
  40b4cc:	push   ecx
  40b4cd:	setge  BYTE PTR [eax]
  40b4d0:	xchg   esp,eax
  40b4d1:	(bad)  
  40b4d2:	pop    ss
  40b4d3:	stc    
  40b4d4:	(bad)  
  40b4d5:	adc    al,0x83
  40b4d7:	mul    BYTE PTR [esi+0x614213ea]
  40b4dd:	fsubr  QWORD PTR [ebp-0x73dc7abd]
  40b4e3:	add    DWORD PTR [edi+0x33],0x89a1893a
  40b4ea:	dec    BYTE PTR [edx]
  40b4ec:	xor    DWORD PTR [edi-0x66],esp
  40b4ef:	pop    edi
  40b4f1:	push   ss
  40b4f2:	mov    ds:0xc55c3e62,al
  40b4f7:	jae    0x40b53b
  40b4f9:	es push es
  40b4fb:	nop
  40b4fc:	imul   DWORD PTR [ecx+0x688d2c6e]
  40b502:	xchg   DWORD PTR [edx-0x14],esp
  40b505:	jb     0x40b4b0
  40b507:	rcr    DWORD PTR [ebp-0x27],1
  40b50a:	pop    ebp
  40b50b:	enter  0x55eb,0x34
  40b50f:	xor    DWORD PTR [eax-0x69],ecx
  40b512:	mov    ebp,ds
  40b514:	xchg   DWORD PTR [edx-0x7e784b1a],esp
  40b51a:	bound  edx,QWORD PTR [ecx+0x1c7fcd00]
  40b520:	lds    ebx,FWORD PTR [edx+0x7fee83ed]
  40b526:	mov    dl,0x77
  40b528:	mov    eax,0x87dcdeb0
  40b52d:	(bad)  
  40b52e:	fadd   QWORD PTR [edx-0x21]
  40b531:	int    0x7e
  40b533:	inc    esp
  40b534:	sbb    BYTE PTR [ebp-0x1d],bl
  40b537:	shl    BYTE PTR [edi-0x5e17d04],1
  40b53d:	imul   eax,DWORD PTR gs:[ebp+0x51fa50ae],0x32
  40b545:	dec    edx
  40b546:	xchg   edx,eax
  40b547:	repz xor ecx,DWORD PTR [eax-0x80]
  40b54b:	aad    0x2c
  40b54d:	adc    al,0x87
  40b54f:	pop    bp
  40b551:	rcr    BYTE PTR [ecx+0xb],1
  40b554:	cmp    DWORD PTR [edx],ecx
  40b556:	add    bl,BYTE PTR [ebp+ebx*2+0x2abe3e93]
  40b55d:	ins    DWORD PTR es:[edi],dx
  40b55e:	shl    DWORD PTR ds:0x838b4109,1
  40b564:	inc    esi
  40b565:	jne    0x40b5c8
  40b567:	mov    esi,0xa010499c
  40b56c:	mov    eax,0xbf030a41
  40b571:	mov    al,ds:0xee01a1d9
  40b576:	pop    edi
  40b577:	mov    cl,0xd3
  40b579:	sahf   
  40b57a:	xchg   BYTE PTR [eax+eax*4+0x5074dbb5],dl
  40b581:	js     0x40b5a9
  40b583:	mov    ds:0xfacd207f,al
  40b588:	movq   mm3,mm7
  40b58b:	cmp    BYTE PTR [ecx-0x3f],dl
  40b58e:	push   esp
  40b58f:	or     bl,BYTE PTR [ebx-0x73dfbeef]
  40b595:	out    0xf,al
  40b597:	and    al,0xf2
  40b599:	and    eax,0xad73bb91
  40b59e:	mov    ds,WORD PTR [eax+0x4]
  40b5a1:	cdq    
  40b5a2:	fcmovne st,st(3)
  40b5a4:	dec    ebx
  40b5a5:	mov    dl,0x94
  40b5a7:	add    edx,DWORD PTR [ecx]
  40b5a9:	jbe    0x40b622
  40b5ab:	(bad)  
  40b5ac:	test   al,0x3b
  40b5ae:	and    ah,BYTE PTR [eax+0x2cd9870b]
  40b5b4:	call   0xd137:0x2927a758
  40b5bb:	or     eax,0xedbd82d2
  40b5c0:	adc    DWORD PTR [esi+edx*1-0x1fb03351],eax
  40b5c7:	sub    al,0xfc
  40b5c9:	push   esp
  40b5ca:	xchg   edx,eax
  40b5cb:	mov    ds:0xcf5a125c,eax
  40b5d0:	test   BYTE PTR [eax-0x80],cl
  40b5d3:	fs nop
  40b5d5:	mov    ds:0xf5c83e4d,al
  40b5da:	loope  0x40b611
  40b5dc:	cli    
  40b5dd:	std    
  40b5de:	aas    
  40b5df:	call   0x702d:0x38668cce
  40b5e6:	pop    ebx
  40b5e7:	push   ecx
  40b5e8:	and    al,0xce
  40b5ea:	mov    WORD PTR [ecx+0x4180da71],cs
  40b5f0:	adc    DWORD PTR [esi+0x5a7ba347],esp
  40b5f6:	enter  0x254e,0x8e
  40b5fa:	xor    bl,al
  40b5fc:	dec    edx
  40b5fd:	repnz inc edi
  40b5ff:	dec    ebp
  40b600:	stos   DWORD PTR es:[edi],eax
  40b601:	repz and eax,0xc48371fc
  40b607:	lock push ebx
  40b609:	int3   
  40b60a:	sbb    al,0xc0
  40b60c:	hlt    
  40b60d:	pop    ebp
  40b60e:	stos   BYTE PTR es:[edi],al
  40b60f:	je     0x40b61f
  40b611:	push   edx
  40b612:	not    BYTE PTR [ebp-0x289aba0e]
  40b618:	aaa    
  40b619:	jmp    0x579227b2
  40b61e:	mov    cl,0x7b
  40b620:	pop    esi
  40b621:	(bad)  
  40b622:	(bad)  
  40b623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b624:	dec    cl
  40b626:	lock pop edx
  40b628:	cmp    DWORD PTR [esi],0xfc0cf7c4
  40b62e:	mov    dh,0x5e
  40b630:	add    al,0xc1
  40b632:	or     DWORD PTR [ebx-0x4a02f1f3],edx
  40b638:	jne    0x40b661
  40b63a:	call   0xd61d:0xace371f3
  40b641:	cs pusha 
  40b643:	imul   eax,DWORD PTR ds:0x9e1a2c4a,0x4d
  40b64a:	push   0xffffff8d
  40b64c:	and    al,0x80
  40b64e:	ins    BYTE PTR es:[edi],dx
  40b64f:	inc    ebx
  40b650:	popf   
  40b651:	mov    esi,0xafedf445
  40b656:	or     al,0xc4
  40b658:	xor    BYTE PTR [edi],ah
  40b65a:	jl     0x40b6b6
  40b65c:	ror    BYTE PTR [ebx+ebp*4-0x52],1
  40b660:	repnz cmp eax,0x5e010e53
  40b666:	(bad)  [ecx+0x769c0a40]
  40b66c:	xchg   edx,eax
  40b66d:	in     al,dx
  40b66e:	test   edi,eax
  40b670:	xchg   ebp,eax
  40b671:	adc    al,0x24
  40b673:	dec    ecx
  40b674:	pushf  
  40b675:	aad    0x95
  40b677:	test   al,0xf4
  40b679:	cmp    al,0xb
  40b67b:	sti    
  40b67c:	fimul  WORD PTR [ebp-0x64aa3b6b]
  40b682:	in     eax,dx
  40b683:	fild   QWORD PTR [ecx]
  40b685:	je     0x40b637
  40b687:	lahf   
  40b688:	jo     0x40b60f
  40b68a:	push   esi
  40b68b:	fidiv  DWORD PTR [eax+0x13]
  40b68e:	shl    dl,0x92
  40b691:	adc    al,0xfe
  40b693:	fild   WORD PTR [esi]
  40b695:	pusha  
  40b696:	mov    ah,0xa6
  40b698:	(bad)  
  40b69a:	stc    
  40b69b:	and    ah,ch
  40b69d:	pop    ds
  40b69e:	add    al,bl
  40b6a0:	cld    
  40b6a1:	jle    0x40b6c3
  40b6a3:	jbe    0x40b6c1
  40b6a5:	sub    ebp,DWORD PTR [ecx+ebp*2-0x52]
  40b6a9:	dec    ebp
  40b6aa:	aas    
  40b6ab:	in     eax,dx
  40b6ac:	jp     0x40b710
  40b6ae:	stc    
  40b6af:	imul   ebp,DWORD PTR [edi+0x5d],0x58bd18ac
  40b6b6:	add    DWORD PTR [esi-0x152abfb5],eax
  40b6bc:	pop    ds
  40b6bd:	xor    BYTE PTR [edi+eiz*1-0x380bd9f8],al
  40b6c4:	push   ds
  40b6c5:	out    dx,eax
  40b6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c8:	stos   DWORD PTR es:[edi],eax
  40b6c9:	in     eax,0xa8
  40b6cb:	retf   
  40b6cc:	jmp    0x40b6e8
  40b6ce:	(bad)  [eax-0x1d578020]
  40b6d4:	cli    
  40b6d5:	jne    0x40b74e
  40b6d7:	arpl   WORD PTR [eax+0x7e],bp
  40b6da:	mov    dl,0x1a
  40b6dc:	mov    ebp,0x72d78fa9
  40b6e1:	(bad)  
  40b6e2:	xor    DWORD PTR [edi+ebx*4+0x38bff9fe],esi
  40b6e9:	pop    ebp
  40b6ea:	mov    cl,0x26
  40b6ec:	fmul   st(3),st
  40b6ee:	push   edi
  40b6ef:	add    BYTE PTR [ebp-0x713674e7],ah
  40b6f5:	inc    eax
  40b6f6:	dec    ecx
  40b6f7:	and    BYTE PTR [ebp-0x10],dh
  40b6fa:	cli    
  40b6fb:	stc    
  40b6fc:	fs pushf 
  40b6fe:	ret    0x5c92
  40b701:	push   cs
  40b702:	repz repnz pushf 
  40b705:	mov    eax,0xd3e1284c
  40b70a:	and    cl,bh
  40b70c:	adc    ah,BYTE PTR [eax+ebp*1-0x3b0291cc]
  40b713:	inc    ecx
  40b714:	outs   dx,DWORD PTR ds:[esi]
  40b715:	pushf  
  40b716:	or     eax,0xcf9e9497
  40b71b:	xor    BYTE PTR [edi-0x11],ch
  40b71e:	retf   
  40b71f:	mov    edi,0xc67d0d15
  40b724:	sub    al,0x76
  40b726:	gs ret 
  40b728:	inc    ebp
  40b729:	mov    dl,0xd8
  40b72b:	push   cs
  40b72c:	pop    ecx
  40b72d:	xor    DWORD PTR [eax],ecx
  40b72f:	pop    eax
  40b730:	sahf   
  40b731:	xor    DWORD PTR [edi+0x36011bab],eax
  40b737:	sub    BYTE PTR [eax],ah
  40b739:	(bad)  
  40b73a:	test   al,0x94
  40b73c:	cmp    ebx,edi
  40b73e:	scas   eax,DWORD PTR es:[edi]
  40b73f:	adc    esp,DWORD PTR [eax-0x77d056b0]
  40b745:	sar    BYTE PTR [ecx-0x4aedeb60],0xa4
  40b74c:	test   BYTE PTR [ecx],0x4e
  40b74f:	fistp  DWORD PTR [eax-0x4b]
  40b752:	xchg   esi,eax
  40b753:	(bad)  
  40b754:	cmc    
  40b755:	test   DWORD PTR [eax+0x49],edi
  40b758:	jne    0x40b713
  40b75a:	retf   0x6b3a
  40b75d:	test   BYTE PTR [esi-0x44ed1ed5],ch
  40b763:	dec    ecx
  40b764:	data16 sbb bh,BYTE PTR [edx-0x1a182dd2]
  40b76b:	xchg   DWORD PTR [ecx],esp
  40b76d:	mov    eax,0xa66e9ed
  40b772:	stc    
  40b773:	das    
  40b774:	inc    eax
  40b775:	mov    ebx,0xba180c9e
  40b77a:	mov    edi,0x14f7cad
  40b780:	add    BYTE PTR [esi-0x4972464f],dl
  40b786:	xchg   edx,eax
  40b787:	sar    DWORD PTR [esi-0x12],0xf1
  40b78b:	or     DWORD PTR [ebp+0x4d7d8f9b],eax
  40b791:	fwait
  40b792:	stos   BYTE PTR es:[edi],al
  40b793:	xor    eax,DWORD PTR [ebp-0x3b]
  40b796:	fwait
  40b797:	out    0x61,al
  40b799:	push   ecx
  40b79a:	mov    WORD PTR [eax-0x66],es
  40b79d:	add    edi,DWORD PTR [esi+0x75]
  40b7a0:	mov    BYTE PTR [eax+ebx*8-0x17],cl
  40b7a4:	mov    al,ds:0xf9d3aadd
  40b7a9:	sbb    al,0xf9
  40b7ab:	mov    edx,0x1dd841c4
  40b7b0:	and    DWORD PTR [edx-0x7f],ebx
  40b7b3:	xchg   ebp,eax
  40b7b4:	ins    BYTE PTR es:[edi],dx
  40b7b5:	jae    0x40b757
  40b7b7:	mov    bl,0xc1
  40b7b9:	ds lahf 
  40b7bb:	(bad)  
  40b7bc:	jbe    0x40b7ff
  40b7be:	lock in eax,0x22
  40b7c1:	sbb    eax,DWORD PTR [esp+ecx*2+0x131e8336]
  40b7c8:	adc    BYTE PTR [ebp+0x38d8174a],bl
  40b7ce:	xchg   ecx,eax
  40b7cf:	fild   DWORD PTR [ecx-0x5b]
  40b7d2:	push   eax
  40b7d3:	ja     0x40b81a
  40b7d5:	aaa    
  40b7d6:	ficom  WORD PTR [ecx+0x38aca410]
  40b7dc:	fs cmp esp,esp
  40b7df:	out    dx,eax
  40b7e0:	dec    esp
  40b7e1:	pusha  
  40b7e2:	ret    
  40b7e3:	adc    DWORD PTR [ebp-0x6b1a4d1e],ebx
  40b7e9:	mov    cl,0x81
  40b7eb:	repnz (bad) 
  40b7ed:	cli    
  40b7ee:	fs mov eax,0x27c7e5f1
  40b7f4:	mov    WORD PTR [ebx+0x69f17f01],cs
  40b7fa:	jmp    0x4985:0xd73b415d
  40b801:	pop    esp
  40b802:	add    BYTE PTR [esp+esi*2],dl
  40b805:	xor    ah,BYTE PTR [ebx]
  40b807:	push   esi
  40b808:	test   eax,0x28928be6
  40b80d:	int    0x10
  40b80f:	inc    esi
  40b810:	dec    eax
  40b811:	xchg   DWORD PTR [esi-0x5],esp
  40b814:	out    dx,eax
  40b815:	int3   
  40b816:	cdq    
  40b817:	push   cs
  40b818:	ficomp WORD PTR [edi+0x34cd57d1]
  40b81e:	adc    DWORD PTR [esi+0x5998d8f2],0x5555c8d8
  40b828:	stos   BYTE PTR es:[edi],al
  40b829:	cmp    al,0xb4
  40b82b:	stos   BYTE PTR es:[edi],al
  40b82c:	jmp    0x54ef:0x269a6d1
  40b833:	jbe    0x40b80c
  40b835:	jmp    0x965:0x62786494
  40b83c:	jae    0x40b7f4
  40b83e:	mov    al,ds:0x6c6277bd
  40b843:	add    al,0xe3
  40b845:	out    dx,al
  40b846:	sub    DWORD PTR [ebx+edi*4-0x19516dfb],ecx
  40b84d:	and    DWORD PTR [ebx-0x63],edi
  40b850:	or     bh,BYTE PTR [esi-0x595fea42]
  40b856:	cs xchg ebp,eax
  40b858:	mov    esi,0x23ad47ce
  40b85d:	mov    ds:0x4327ce94,al
  40b862:	cmc    
  40b863:	push   cs
  40b864:	mov    eax,ds:0xf29887d5
  40b869:	xchg   edx,eax
  40b86a:	inc    edx
  40b86b:	xor    bh,BYTE PTR [ebx-0x16]
  40b86e:	fs pop ss
  40b870:	not    DWORD PTR [ebp+0x50f765da]
  40b876:	arpl   WORD PTR [esi-0x3f57dc40],di
  40b87c:	push   edi
  40b87d:	cmp    cl,BYTE PTR [esi+eax*4]
  40b880:	pop    es
  40b881:	ds mov edi,0xea9985ca
  40b887:	in     eax,0xaf
  40b889:	aas    
  40b88a:	inc    esp
  40b88b:	sub    dh,BYTE PTR [ecx+0x6fb934fa]
  40b891:	mov    bl,0x72
  40b893:	shr    BYTE PTR [ebp-0x4b],cl
  40b896:	iret   
  40b897:	popf   
  40b898:	out    dx,al
  40b899:	xchg   ebx,eax
  40b89a:	inc    eax
  40b89b:	fs test al,0x7f
  40b89e:	cld    
  40b89f:	adc    DWORD PTR [ecx+0x50],ecx
  40b8a2:	jg     0x40b84a
  40b8a4:	int3   
  40b8a5:	xor    ebp,DWORD PTR [ebp+0x37]
  40b8a8:	or     BYTE PTR [eax-0x29],ah
  40b8ab:	mov    edi,0x83a1d7f9
  40b8b0:	cdq    
  40b8b1:	or     BYTE PTR [eax],bh
  40b8b3:	push   cs
  40b8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8b5:	push   esi
  40b8b6:	xor    al,0xb4
  40b8b8:	jns    0x40b868
  40b8ba:	xlat   BYTE PTR ds:[ebx]
  40b8bb:	and    dl,BYTE PTR [ecx-0x8]
  40b8be:	sbb    eax,0xf9d83f5c
  40b8c3:	xchg   ecx,eax
  40b8c4:	xchg   esi,eax
  40b8c5:	xchg   BYTE PTR [ecx],al
  40b8c7:	lock xlat BYTE PTR ds:[ebx]
  40b8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ca:	mov    dh,0x1b
  40b8cc:	xchg   BYTE PTR [eax+ebx*2-0x73],bh
  40b8d0:	and    BYTE PTR ds:0x4cd0db76,0x5d
  40b8d7:	xor    eax,0x5795e12c
  40b8dc:	pop    ss
  40b8dd:	out    0xac,al
  40b8df:	inc    esi
  40b8e0:	cli    
  40b8e1:	sbb    esi,ecx
  40b8e3:	cs adc dl,dh
  40b8e6:	int    0xd7
  40b8e8:	jo     0x40b963
  40b8ea:	jae    0x40b8b1
  40b8ec:	xor    al,0x6
  40b8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ef:	pop    edx
  40b8f0:	(bad)  
  40b8f1:	pop    esi
  40b8f2:	and    eax,0x412cb7b5
  40b8f7:	dec    ecx
  40b8f8:	repz sbb bl,dh
  40b8fb:	adc    BYTE PTR [ebx-0x45],0xd3
  40b8ff:	popf   
  40b900:	jbe    0x40b939
  40b902:	sbb    eax,0xbdfea48a
  40b907:	or     DWORD PTR [ecx+0x52],eax
  40b90a:	shl    BYTE PTR [ebx],cl
  40b90c:	mov    ah,0xdd
  40b90e:	loopne 0x40b910
  40b910:	mov    bh,0xbc
  40b912:	imul   DWORD PTR [edx+ebp*2-0x2fd1b3e2]
  40b919:	xlat   BYTE PTR ds:[ebx]
  40b91a:	xor    ecx,DWORD PTR [edx+0x10]
  40b91d:	into   
  40b91e:	ds je  0xf8dac957
  40b925:	sub    BYTE PTR [ecx],cl
  40b927:	and    ecx,DWORD PTR [esi]
  40b929:	dec    ebx
  40b92a:	push   edx
  40b92b:	loope  0x40b988
  40b92d:	and    esi,ecx
  40b92f:	xlat   BYTE PTR ds:[ebx]
  40b930:	cmp    ebx,DWORD PTR [esi]
  40b932:	(bad)  
  40b933:	out    0x26,al
  40b935:	sbb    al,0x94
  40b937:	cld    
  40b938:	mov    ebp,0x71f10308
  40b93d:	add    ebp,DWORD PTR [eax]
  40b93f:	cmp    DWORD PTR [ecx+0x7],ecx
  40b942:	jns    0x40b926
  40b944:	adc    BYTE PTR [ecx+0x1f],0xba
  40b948:	xchg   edx,eax
  40b949:	xor    al,0xe7
  40b94b:	fdivr  QWORD PTR [eax+esi*2-0x2cba643a]
  40b952:	jne    0x40b9a1
  40b954:	cwde   
  40b955:	pop    esi
  40b956:	jns    0x40b8f9
  40b958:	pusha  
  40b959:	out    dx,eax
  40b95a:	pop    ecx
  40b95b:	jl     0x40b94a
  40b95d:	inc    esi
  40b95e:	in     al,0x4b
  40b960:	push   ebx
  40b961:	mov    edx,0xa7634803
  40b966:	adc    al,0xb
  40b968:	test   eax,0xcf7defac
  40b96d:	and    al,0x8
  40b96f:	out    dx,eax
  40b970:	mov    ?,eax
  40b972:	retf   0x8f0f
  40b975:	addr16 pop ss
  40b977:	add    edi,DWORD PTR [ecx-0x74]
  40b97a:	inc    esi
  40b97b:	sar    ah,1
  40b97d:	pushf  
  40b97e:	ds push ss
  40b980:	or     al,0x85
  40b982:	daa    
  40b983:	lock sub BYTE PTR [ebx+ebp*1],cl
  40b987:	add    dh,dh
  40b989:	imul   ebx,DWORD PTR [ecx],0xe668c993
  40b98f:	call   0x4403:0xb3315318
  40b996:	xchg   edx,eax
  40b997:	sub    edi,DWORD PTR gs:[edx+0x3cf2ad20]
  40b99e:	mov    ah,0x73
  40b9a0:	xchg   ebp,eax
  40b9a1:	test   eax,0xcf474d55
  40b9a6:	(bad)  
  40b9a7:	cwde   
  40b9a8:	es dec ebx
  40b9aa:	push   cs
  40b9ab:	mov    al,0x22
  40b9ad:	fdivr  QWORD PTR [ecx-0x4a]
  40b9b0:	inc    ebp
  40b9b1:	lods   al,BYTE PTR ds:[esi]
  40b9b2:	lea    esp,[ebp+0x590431af]
  40b9b8:	xchg   ebp,eax
  40b9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ba:	fst    st(4)
  40b9bc:	mov    ecx,0x4bc2b2ed
  40b9c1:	adc    eax,0xc6a1c9ea
  40b9c6:	jmp    0x40ba21
  40b9c8:	aas    
  40b9c9:	adc    ebx,DWORD PTR [eax]
  40b9cb:	push   esp
  40b9cc:	push   es
  40b9cd:	mov    edx,0xcdd88eca
  40b9d2:	or     ah,ah
  40b9d4:	add    al,0x56
  40b9d6:	aas    
  40b9d7:	add    DWORD PTR [ebx-0x5a],edx
  40b9da:	xchg   ebp,eax
  40b9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9dc:	jns    0x40b9aa
  40b9de:	cmc    
  40b9df:	or     al,0x62
  40b9e1:	jge    0x40b9ed
  40b9e3:	sbb    eax,0x9bb73dd0
  40b9e8:	or     al,0xa4
  40b9ea:	jmp    0xc1ca:0x51dd896e
  40b9f1:	pop    ecx
  40b9f2:	cli    
  40b9f3:	scas   eax,DWORD PTR es:[edi]
  40b9f4:	dec    edx
  40b9f5:	addr16 push esp
  40b9f7:	sub    al,BYTE PTR [eax+0x4]
  40b9fa:	fisub  WORD PTR [ecx]
  40b9fc:	jle    0x40b9ab
  40b9fe:	cmp    ch,BYTE PTR [eax-0x6c3ea8e]
  40ba04:	inc    esi
  40ba05:	fbld   TBYTE PTR [edi]
  40ba07:	xchg   ecx,eax
  40ba08:	jns    0x40b99e
  40ba0a:	mul    DWORD PTR [esi-0x3c6b6a4c]
  40ba10:	ja     0x40b9d1
  40ba12:	xor    al,0xc1
  40ba14:	hlt    
  40ba15:	mov    esp,0x93eaca84
  40ba1a:	jne    0x40ba0c
  40ba1c:	in     al,0x45
  40ba1e:	pop    es
  40ba1f:	mov    WORD PTR [eax],es
  40ba21:	and    edi,DWORD PTR [ebx]
  40ba23:	bnd jno 0x40b9c9
  40ba26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba27:	ret    
  40ba28:	faddp  st(2),st
  40ba2a:	call   FWORD PTR ds:0x7a29a35
  40ba30:	ins    BYTE PTR es:[edi],dx
  40ba31:	mov    al,ds:0x4473c777
  40ba36:	cli    
  40ba37:	xchg   esi,eax
  40ba38:	popa   
  40ba39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba3a:	ss out dx,al
  40ba3c:	dec    esi
  40ba3d:	and    eax,0xb8868adb
  40ba42:	int3   
  40ba43:	pusha  
  40ba44:	(bad)  
  40ba45:	xor    eax,0xaec2d1e3
  40ba4a:	fcmovne st,st(7)
  40ba4c:	sub    dh,BYTE PTR [ebx-0x778fe959]
  40ba52:	sbb    BYTE PTR [edx],ch
  40ba54:	mov    dh,0xe1
  40ba56:	dec    ebx
  40ba57:	adc    bh,dh
  40ba59:	jmp    0x6753:0x81daed0
  40ba60:	je     0x40ba35
  40ba62:	adc    BYTE PTR [edx],bl
  40ba64:	gs jmp 0x40ba15
  40ba67:	dec    ebp
  40ba68:	mov    ebx,0x39dfef70
  40ba6d:	and    DWORD PTR [eax+0x60d5dc6e],esi
  40ba73:	add    DWORD PTR [ebx-0x48e85f7a],esp
  40ba79:	mov    eax,0xf7ad410b
  40ba7e:	jge    0x40ba22
  40ba80:	call   0x63d5e20d
  40ba85:	or     dl,0xf1
  40ba88:	(bad)  
  40ba8a:	jne    0x40ba88
  40ba8c:	adc    BYTE PTR [esi-0x2587f94b],dh
  40ba92:	mov    ecx,0x5b969d6
  40ba97:	lock iret 
  40ba99:	aas    
  40ba9a:	sub    DWORD PTR [ecx+0x7145f3fb],edi
  40baa0:	ja     0x40baa9
  40baa2:	or     DWORD PTR [ebx],esp
  40baa4:	mov    esi,0xa2e98a29
  40baa9:	loopne 0x40ba66
  40baab:	xor    al,0xe3
  40baad:	sub    al,0xe0
  40baaf:	or     edx,edi
  40bab1:	sbb    ebp,ebx
  40bab3:	adc    ecx,DWORD PTR [ebx-0x52]
  40bab6:	enter  0xd965,0xa5
  40baba:	add    DWORD PTR [ebx-0x63],ebp
  40babd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40babe:	in     eax,dx
  40babf:	push   eax
  40bac0:	jecxz  0x40bac3
  40bac2:	push   eax
  40bac3:	pop    ds
  40bac4:	dec    ebx
  40bac5:	(bad)  
  40bac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac7:	repnz and BYTE PTR [esi+esi*1+0x33],0xd4
  40bacd:	jmp    0x40ba94
  40bacf:	inc    ecx
  40bad0:	(bad)  
  40bad1:	std    
  40bad2:	cwde   
  40bad3:	adc    dh,BYTE PTR [edx]
  40bad5:	jnp    0x40bb01
  40bad7:	sub    ebx,0x616d8c8c
  40badd:	repnz push edx
  40badf:	sti    
  40bae0:	inc    edi
  40bae1:	adc    bl,BYTE PTR [esp+ebx*8+0x35]
  40bae5:	jne    0x40baef
  40bae7:	mov    eax,ds:0x8751126
  40baec:	pop    esp
  40baed:	cmovae ebp,DWORD PTR [edi-0x1f]
  40baf1:	pop    esi
  40baf2:	popf   
  40baf3:	repnz mov ss:0xbc33ed35,al
  40bafa:	bound  edi,QWORD PTR [eax-0x2d]
  40bafd:	jb     0x40bb35
  40baff:	mov    ds:0x1bbbf8a3,eax
  40bb04:	cld    
  40bb05:	mov    dh,0x2d
  40bb07:	pop    es
  40bb08:	xchg   esp,eax
  40bb09:	addr16 (bad) 
  40bb0b:	ins    BYTE PTR es:[edi],dx
  40bb0c:	popf   
  40bb0d:	xchg   ecx,eax
  40bb0e:	sub    DWORD PTR [ebx-0x54],ebx
  40bb11:	enter  0x1f05,0x19
  40bb15:	stos   BYTE PTR es:[edi],al
  40bb16:	cmp    ebp,DWORD PTR [edx]
  40bb18:	stc    
  40bb19:	fisub  DWORD PTR [ecx+0x5a23f89a]
  40bb1f:	jae    0x40bb19
  40bb21:	and    bh,BYTE PTR [ecx+0x2b94dbe3]
  40bb27:	enter  0x6c20,0x18
  40bb2b:	dec    esi
  40bb2c:	das    
  40bb2d:	pop    DWORD PTR [edi-0x3bec2dd7]
  40bb33:	not    DWORD PTR [ecx]
  40bb35:	pop    esi
  40bb36:	cdq    
  40bb37:	or     ebp,ebx
  40bb39:	xchg   ecx,eax
  40bb3a:	sbb    BYTE PTR [eax-0x38bb768f],al
  40bb40:	xchg   esi,eax
  40bb41:	jbe    0x40bb9c
  40bb43:	dec    edx
  40bb44:	loope  0x40bb6d
  40bb46:	loope  0x40bb39
  40bb48:	xchg   DWORD PTR [ecx+ecx*4-0x44a2d62a],eax
  40bb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb50:	pop    ebx
  40bb51:	push   edx
  40bb52:	jne    0x40bba3
  40bb54:	(bad)  
  40bb55:	sub    eax,edi
  40bb57:	push   ebp
  40bb58:	popf   
  40bb59:	push   ecx
  40bb5a:	adc    BYTE PTR [edi-0x6c],ch
  40bb5d:	inc    edx
  40bb5e:	sub    DWORD PTR [edi+0x30],ebp
  40bb61:	imul   edi,DWORD PTR [eax+ecx*1-0x5c6b80f4],0xffffffcf
  40bb69:	mov    edi,0x62fe76b4
  40bb6e:	inc    esi
  40bb6f:	push   cs
  40bb70:	fld    DWORD PTR [ecx+0x4be8904e]
  40bb76:	dec    ecx
  40bb77:	and    DWORD PTR ds:0x33a96c8e,esp
  40bb7d:	out    0xd,eax
  40bb7f:	adc    al,0x5b
  40bb81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb82:	add    al,al
  40bb84:	mov    edi,0x78b55326
  40bb89:	adc    DWORD PTR [edx],eax
  40bb8b:	ret    
  40bb8c:	jmp    FWORD PTR [esi-0x3]
  40bb8f:	imul   ecx,DWORD PTR [ebx+edi*1],0x13
  40bb93:	out    0x21,eax
  40bb95:	add    DWORD PTR [eax+esi*1-0x6b882fbe],ebx
  40bb9c:	pop    esp
  40bb9d:	or     al,0x2e
  40bb9f:	fmul   QWORD PTR [esi-0x56c4e3b3]
  40bba5:	fistp  WORD PTR [esi]
  40bba7:	add    al,0x80
  40bba9:	xor    DWORD PTR [ebx],esi
  40bbab:	shr    BYTE PTR [esi+edx*8],0x99
  40bbaf:	lods   al,BYTE PTR ds:[esi]
  40bbb0:	push   ds
  40bbb1:	and    BYTE PTR [edi],bl
  40bbb3:	and    bl,BYTE PTR gs:[edx+0x5e7db7f2]
  40bbba:	add    eax,0xb30f6e1e
  40bbbf:	scas   eax,DWORD PTR es:[edi]
  40bbc0:	int    0xd8
  40bbc2:	rcl    DWORD PTR [edi],1
  40bbc4:	pop    edi
  40bbc5:	xor    BYTE PTR [ecx],0xec
  40bbc8:	out    0x88,eax
  40bbca:	inc    edx
  40bbcb:	sbb    al,0x8e
  40bbcd:	adc    ecx,DWORD PTR ds:0xee5eefd4
  40bbd3:	ins    DWORD PTR es:[edi],dx
  40bbd4:	jmp    0x40bc17
  40bbd6:	into   
  40bbd7:	mov    ebp,0xc32a719
  40bbdc:	jecxz  0x40bbe9
  40bbde:	dec    ecx
  40bbdf:	xor    DWORD PTR [ecx],esp
  40bbe1:	repz sub al,0x22
  40bbe4:	cwde   
  40bbe5:	(bad)  
  40bbe6:	xor    BYTE PTR [esi+0x66ea910b],dl
  40bbec:	jns    0x40bb98
  40bbee:	jmp    0x87c7:0xd0c8178
  40bbf5:	mov    ebx,0x14c74c25
  40bbfa:	ja     0x40bbdf
  40bbfc:	xor    dl,bl
  40bbfe:	retf   0x6d09
  40bc01:	pop    edx
  40bc02:	test   eax,0xb9e6c8c1
  40bc07:	sub    eax,esp
  40bc09:	sub    edx,DWORD PTR [ebx]
  40bc0b:	xor    dl,BYTE PTR [edx+0x71]
  40bc0e:	in     al,dx
  40bc0f:	loope  0x40bc2c
  40bc11:	in     al,dx
  40bc12:	xchg   ebp,eax
  40bc13:	jp     0x40bbb0
  40bc15:	dec    edx
  40bc16:	(bad)  
  40bc17:	retf   0x2279
  40bc1a:	sbb    cl,BYTE PTR [ecx+eiz*2]
  40bc1d:	add    DWORD PTR [ecx-0x80],ecx
  40bc20:	inc    esi
  40bc21:	xor    BYTE PTR [edi],ah
  40bc23:	cmp    BYTE PTR [esi+0x2f0d7a7f],al
  40bc29:	repnz fcom DWORD PTR [ebp-0x3b507c24]
  40bc30:	mov    esp,0x3e5c3886
  40bc35:	aas    
  40bc36:	adc    BYTE PTR [edi-0x5],dh
  40bc39:	and    BYTE PTR [edi-0x7a],bh
  40bc3c:	mov    ebp,0xcf910614
  40bc41:	add    edx,DWORD PTR [esi]
  40bc43:	aas    
  40bc44:	push   0xffffffd8
  40bc46:	sbb    BYTE PTR [ebx+eax*2-0x7d],ch
  40bc4a:	test   bl,cl
  40bc4c:	or     dl,bh
  40bc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc4f:	je     0x40bc36
  40bc51:	xor    bh,0xb4
  40bc54:	jmp    0xa763:0xec93a81d
  40bc5b:	jns    0x40bcb8
  40bc5d:	mov    ah,0xed
  40bc5f:	les    ecx,FWORD PTR [ebx]
  40bc61:	or     DWORD PTR [ecx],ebx
  40bc63:	pop    ebx
  40bc64:	or     bh,cl
  40bc66:	jl     0x40bc24
  40bc68:	jge    0x40bc75
  40bc6a:	xor    al,0xab
  40bc6c:	lods   eax,DWORD PTR ds:[esi]
  40bc6d:	mov    BYTE PTR [edx-0x3cd77909],dl
  40bc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc74:	and    al,BYTE PTR [eax+0x3c]
  40bc77:	and    edx,esp
  40bc79:	cmc    
  40bc7a:	sbb    DWORD PTR [edi+0x46d7f51a],edi
  40bc80:	dec    esp
  40bc81:	popa   
  40bc82:	jecxz  0x40bcd8
  40bc84:	xor    eax,0x9de378f5
  40bc89:	xor    al,BYTE PTR [ebx-0x79dc7716]
  40bc8f:	outs   dx,BYTE PTR ds:[esi]
  40bc90:	cli    
  40bc91:	retf   0x7cff
  40bc94:	jmp    0x7c27e966
  40bc99:	jbe    0x40bc53
  40bc9b:	dec    ebp
  40bc9c:	pop    es
  40bc9d:	or     eax,DWORD PTR [edx]
  40bc9f:	jne    0x40bcd6
  40bca1:	test   DWORD PTR [eax-0x65],ebx
  40bca4:	inc    edx
  40bca5:	add    ebx,DWORD PTR [edi+0x61]
  40bca8:	sub    ah,cl
  40bcaa:	lahf   
  40bcab:	xchg   ebx,eax
  40bcac:	ret    0xa9f1
  40bcaf:	adc    DWORD PTR [esi+0x0],0x8c14cb18
  40bcb6:	dec    ebp
  40bcb7:	test   eax,0x4c5cebcf
  40bcbc:	sbb    ch,dh
  40bcbe:	pop    ds
  40bcbf:	mov    cl,0x34
  40bcc1:	dec    eax
  40bcc2:	iret   
  40bcc3:	cwde   
  40bcc4:	ret    
  40bcc5:	mov    esi,fs
  40bcc7:	add    eax,0x6103fb0d
  40bccc:	cmp    BYTE PTR [ebx-0x500bfa39],bl
  40bcd2:	xor    al,BYTE PTR [esp+edx*2]
  40bcd5:	inc    ecx
  40bcd6:	ins    BYTE PTR es:[edi],dx
  40bcd7:	dec    eax
  40bcd8:	daa    
  40bcd9:	jle    0x40bc81
  40bcdb:	push   es
  40bcdc:	add    DWORD PTR [edx+0x6f],ebx
  40bcdf:	or     DWORD PTR [esi-0x67],ebx
  40bce2:	xchg   ecx,eax
  40bce3:	aaa    
  40bce4:	inc    esp
  40bce5:	call   0x4191:0xa549fd8b
  40bcec:	dec    ecx
  40bced:	mov    cl,0x39
  40bcef:	outs   dx,BYTE PTR ds:[esi]
  40bcf0:	ss push ecx
  40bcf2:	and    eax,0xf218e9fd
  40bcf7:	fwait
  40bcf8:	gs push es
  40bcfa:	adc    esi,DWORD PTR [edi-0x73]
  40bcfd:	pop    ecx
  40bcfe:	or     bl,BYTE PTR [esi+0x35]
  40bd01:	add    esp,DWORD PTR [ecx+ebp*2-0x4]
  40bd05:	imul   ebp,DWORD PTR [edx-0x22],0xffffff9f
  40bd09:	mov    WORD PTR [ebx],?
  40bd0b:	mov    ds:0xdc4c77c2,al
  40bd10:	stos   DWORD PTR es:[edi],eax
  40bd11:	mov    ah,0x15
  40bd13:	mov    dh,BYTE PTR [ebp+0xa]
  40bd16:	cmp    al,0x12
  40bd18:	cmovs  edi,DWORD PTR [esi-0x2c3a0d50]
  40bd1f:	stos   DWORD PTR es:[edi],eax
  40bd20:	mov    cl,0xb8
  40bd22:	popa   
  40bd23:	inc    edi
  40bd24:	adc    eax,0xbd11c22a
  40bd29:	cmp    dh,BYTE PTR [eax-0x43b86e99]
  40bd2f:	inc    eax
  40bd30:	push   cs
  40bd31:	inc    ebp
  40bd32:	stos   DWORD PTR es:[edi],eax
  40bd33:	mov    esp,0xfe45d933
  40bd38:	sar    DWORD PTR [eax],0x58
  40bd3b:	pop    eax
  40bd3c:	cmp    DWORD PTR [ecx],esp
  40bd3e:	mov    eax,0xe71e46aa
  40bd43:	out    dx,eax
  40bd44:	stos   BYTE PTR es:[edi],al
  40bd45:	sub    cl,dl
  40bd47:	test   al,0x76
  40bd49:	mov    DWORD PTR [ebx-0x45715a7],ecx
  40bd4f:	ja     0x40bd94
  40bd51:	mov    WORD PTR [ecx],gs
  40bd53:	push   es
  40bd54:	fisttp WORD PTR [ebx]
  40bd56:	data16 jns 0x40bd50
  40bd59:	(bad)  
  40bd5b:	repz fcom QWORD PTR [edi+0x7e4ac7ef]
  40bd62:	push   eax
  40bd63:	dec    ebp
  40bd64:	xor    al,0xa
  40bd66:	push   0x45
  40bd68:	or     eax,0x6d756963
  40bd6d:	shr    eax,0xeb
  40bd70:	fnstsw WORD PTR [edx]
  40bd72:	push   esp
  40bd73:	add    eax,0x5a4232b2
  40bd78:	push   ebp
  40bd79:	outs   dx,BYTE PTR ds:[esi]
  40bd7a:	leave  
  40bd7b:	imul   ecx,DWORD PTR [ebx],0x8302f356
  40bd81:	repnz cs sahf 
  40bd84:	ja     0x40bda0
  40bd86:	div    ah
  40bd88:	cmc    
  40bd89:	test   eax,0x1a011dd0
  40bd8e:	inc    edx
  40bd8f:	ins    DWORD PTR es:[edi],dx
  40bd90:	or     eax,0x3bd62bbc
  40bd95:	popa   
  40bd96:	cmp    DWORD PTR [ebx-0x43f3ce81],esi
  40bd9c:	push   esi
  40bd9d:	(bad)  
  40bd9e:	adc    dl,ch
  40bda0:	ds out 0xd7,eax
  40bda3:	sbb    bl,BYTE PTR [ebx]
  40bda5:	add    edi,DWORD PTR [esi+0x3f]
  40bda8:	(bad)  
  40bda9:	adc    eax,0xb61e2280
  40bdae:	call   0x6af:0x4ec4fee
  40bdb5:	or     bh,ch
  40bdb7:	ficomp DWORD PTR [edx+0x17bd5a6f]
  40bdbd:	xchg   esp,eax
  40bdbe:	dec    ebp
  40bdbf:	mov    bh,0xdf
  40bdc1:	xchg   esp,eax
  40bdc2:	and    edx,DWORD PTR [ebx+0x5c]
  40bdc5:	add    eax,0x294c45c3
  40bdca:	retf   0x4464
  40bdcd:	loopne 0x40bd90
  40bdcf:	rol    BYTE PTR [ebp-0x4c64fe3d],cl
  40bdd5:	adc    ah,BYTE PTR [edi+ebx*4+0x16]
  40bdd9:	ins    DWORD PTR es:[edi],dx
  40bdda:	sbb    BYTE PTR [ecx-0x44ae04db],bl
  40bde0:	sbb    eax,0x2767660f
  40bde5:	push   esp
  40bde6:	popa   
  40bde7:	mov    bh,0xd
  40bde9:	cmp    esi,esp
  40bdeb:	sub    BYTE PTR [esi+edx*8],0xaa
  40bdef:	in     al,dx
  40bdf0:	xchg   BYTE PTR [edi-0x10],cl
  40bdf3:	inc    edi
  40bdf4:	push   esp
  40bdf5:	adc    BYTE PTR [ebx-0x2b06952a],bl
  40bdfb:	xor    DWORD PTR [ecx+0x65e6d7b7],0xf1ee2628
  40be05:	lods   al,BYTE PTR ds:[esi]
  40be06:	stos   DWORD PTR es:[edi],eax
  40be07:	ss mov esi,0x94c03be2
  40be0d:	loope  0x40bdaf
  40be0f:	repnz cmp al,0xee
  40be12:	jmp    0x40be27
  40be14:	xchg   esi,eax
  40be15:	out    0x94,eax
  40be17:	aas    
  40be18:	ins    DWORD PTR es:[edi],dx
  40be19:	js     0x40be7d
  40be1b:	inc    edi
  40be1c:	scas   eax,DWORD PTR es:[edi]
  40be1d:	in     al,dx
  40be1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be1f:	jnp    0x40be9a
  40be21:	push   cs
  40be22:	pop    edi
  40be23:	aaa    
  40be24:	mov    eax,0x62e0e64
  40be29:	jae    0x40be2b
  40be2b:	iret   
  40be2c:	dec    esp
  40be2d:	das    
  40be2e:	pushf  
  40be2f:	arpl   WORD PTR [ebp+0xb],bx
  40be32:	mul    BYTE PTR ds:0x933997eb
  40be38:	mov    bh,0x59
  40be3a:	in     al,dx
  40be3b:	or     eax,0xa81c1cd2
  40be40:	cdq    
  40be41:	xor    BYTE PTR [esi],bh
  40be43:	pop    ds
  40be44:	push   0x2f
  40be46:	mov    cl,BYTE PTR [edi-0x5f]
  40be49:	mov    ds:0x6ed74102,eax
  40be4e:	ss popa 
  40be50:	inc    eax
  40be51:	gs mov dh,0x6e
  40be54:	mov    ch,0x76
  40be56:	rol    BYTE PTR [eax-0x192a4259],cl
  40be5c:	jbe    0x40be98
  40be5e:	or     al,BYTE PTR [eax]
  40be60:	(bad)  
  40be62:	adc    al,0x13
  40be64:	push   DWORD PTR [eax+esi*8+0x23698616]
  40be6b:	sbb    eax,0x10fb7eef
  40be70:	sbb    BYTE PTR [ebp-0x4eab96c2],al
  40be76:	sub    bh,al
  40be78:	mov    cl,0x93
  40be7a:	jnp    0x40be6b
  40be7c:	hlt    
  40be7d:	mov    ch,0x3f
  40be7f:	daa    
  40be80:	mov    ecx,0xbf3c2a8a
  40be85:	cmp    DWORD PTR [ebp-0x3f4f66e0],ecx
  40be8b:	fisub  WORD PTR [edi+0x40]
  40be8e:	xor    al,0x5a
  40be90:	adc    esi,DWORD PTR [ebx]
  40be92:	scas   al,BYTE PTR es:[edi]
  40be93:	in     eax,0xa8
  40be95:	xlat   BYTE PTR ds:[ebx]
  40be96:	dec    edi
  40be97:	and    bh,BYTE PTR [esi+ebp*4+0x3180dff6]
  40be9e:	ds out 0xa1,al
  40bea1:	ficom  DWORD PTR [ecx-0x17]
  40bea4:	(bad)  
  40bea5:	push   ebp
  40bea6:	aam    0x2c
  40bea8:	ins    DWORD PTR es:[edi],dx
  40bea9:	dec    edx
  40beaa:	call   0x505e64a0
  40beaf:	dec    esp
  40beb0:	sub    al,0xc0
  40beb2:	push   ecx
  40beb3:	dec    ebp
  40beb4:	in     al,0x3
  40beb6:	sub    al,0x61
  40beb8:	mov    gs,WORD PTR ds:0x24df436
  40bebe:	pushf  
  40bebf:	(bad)  
  40bec1:	jl     0x40be94
  40bec3:	mov    al,ds:0x15f08c01
  40bec8:	mov    al,0x3a
  40beca:	xchg   esp,eax
  40becb:	sub    DWORD PTR [ecx+0x45339663],ecx
  40bed1:	pop    ebp
  40bed2:	dec    ebx
  40bed3:	push   ds
  40bed4:	dec    ebx
  40bed5:	into   
  40bed6:	(bad)  
  40bed7:	sbb    esp,edx
  40bed9:	imul   esi,DWORD PTR [ebx+ebp*2],0xd5f7865b
  40bee0:	lods   al,BYTE PTR ds:[esi]
  40bee1:	adc    DWORD PTR [edi-0x38172144],ebx
  40bee7:	jle    0x40bebe
  40bee9:	xchg   DWORD PTR [ecx],esi
  40beeb:	retf   
  40beec:	xchg   DWORD PTR ds:0x80365f,ecx
  40bef2:	push   esp
  40bef3:	shl    DWORD PTR [ebx],cl
  40bef5:	das    
  40bef6:	stos   BYTE PTR es:[edi],al
  40bef7:	xchg   esp,eax
  40bef8:	fldenv [esi-0x5a]
  40befb:	test   al,0xa0
  40befd:	arpl   WORD PTR [ebx],cx
  40beff:	xor    cl,0x5a
  40bf02:	dec    esp
  40bf03:	cmp    BYTE PTR [edx+0x2f],dl
  40bf06:	retf   0x1202
  40bf09:	pusha  
  40bf0a:	mul    cl
  40bf0c:	push   cs
  40bf0d:	dec    ebx
  40bf0e:	mov    cl,0xa4
  40bf10:	add    eax,0xfceba80c
  40bf15:	gs je  0x40bf33
  40bf18:	mov    BYTE PTR [esi-0x3bc2fb2f],bh
  40bf1e:	cmc    
  40bf1f:	aaa    
  40bf20:	mov    al,0x9e
  40bf22:	add    al,0x40
  40bf24:	hlt    
  40bf25:	cmp    ah,cl
  40bf27:	xchg   esi,eax
  40bf28:	fwait
  40bf29:	(bad)  
  40bf2a:	in     eax,0xf8
  40bf2c:	mov    ecx,0xba825d17
  40bf31:	mov    cs,WORD PTR [esi]
  40bf33:	xchg   ebx,eax
  40bf34:	out    dx,eax
  40bf35:	leave  
  40bf36:	add    DWORD PTR [ebx],ebx
  40bf38:	xchg   esi,eax
  40bf39:	ins    BYTE PTR es:[edi],dx
  40bf3a:	pop    eax
  40bf3b:	push   esp
  40bf3c:	xlat   BYTE PTR ds:[ebx]
  40bf3d:	call   0x6a61:0x9473239b
  40bf44:	std    
  40bf45:	xor    esi,DWORD PTR [ecx]
  40bf47:	test   dl,dl
  40bf49:	pop    ecx
  40bf4a:	neg    ebx
  40bf4c:	inc    ecx
  40bf4d:	jbe    0x40bfbb
  40bf4f:	cs dec esp
  40bf51:	pop    edx
  40bf52:	jl     0x40bee2
  40bf54:	fnsave [edi-0x43d3eb74]
  40bf5a:	popa   
  40bf5b:	mov    dl,0xd7
  40bf5d:	scas   eax,DWORD PTR es:[edi]
  40bf5e:	or     BYTE PTR [ebp+0x6b],dh
  40bf61:	and    eax,0x66fca2ec
  40bf66:	pop    ebx
  40bf67:	xchg   ebx,eax
  40bf68:	mov    esi,0xc4c9f93d
  40bf6d:	ss inc ebp
  40bf6f:	cwde   
  40bf70:	sbb    al,ch
  40bf72:	out    0xe5,eax
  40bf74:	mov    dh,BYTE PTR [ecx-0x1bba97c8]
  40bf7a:	enter  0x349f,0x3f
  40bf7e:	bswap  ecx
  40bf80:	or     dh,dh
  40bf82:	and    BYTE PTR [ebx+0x3f9480a5],bh
  40bf88:	dec    eax
  40bf89:	pop    ds
  40bf8a:	xor    BYTE PTR [eax],ch
  40bf8c:	out    dx,al
  40bf8d:	dec    edi
  40bf8e:	in     eax,0x24
  40bf90:	(bad)
  40bf94:	mov    ebx,0xbfad1170
  40bf99:	and    bh,BYTE PTR [ebp+ecx*1+0x50711499]
  40bfa0:	pop    esp
  40bfa1:	and    eax,0x9269fe8e
  40bfa6:	ficomp DWORD PTR [edi-0x2ab84370]
  40bfac:	cmc    
  40bfad:	jmp    0xe434:0x978d2850
  40bfb4:	test   eax,0x566046dc
  40bfb9:	lea    ecx,[ecx]
  40bfbb:	push   eax
  40bfbc:	shl    DWORD PTR [ebp-0x7b],1
  40bfbf:	or     ch,BYTE PTR [esi]
  40bfc1:	push   esp
  40bfc2:	in     al,0xac
  40bfc4:	inc    edx
  40bfc5:	cmp    BYTE PTR [edx-0x23],0x44
  40bfc9:	push   esi
  40bfca:	jo     0x40bfc4
  40bfcc:	dec    esi
  40bfcd:	int3   
  40bfce:	dec    edi
  40bfcf:	inc    edx
  40bfd0:	add    al,ah
  40bfd2:	jnp    0x40bfc2
  40bfd4:	fst    QWORD PTR [edx]
  40bfd6:	push   edi
  40bfd7:	fild   DWORD PTR [ecx]
  40bfd9:	ror    eax,0xfc
  40bfdc:	jle    0x40bfb5
  40bfde:	adc    al,0xf2
  40bfe0:	and    bh,BYTE PTR [ecx-0x69]
  40bfe3:	add    bh,BYTE PTR [ecx]
  40bfe5:	out    dx,al
  40bfe6:	int    0xf9
  40bfe8:	hlt    
  40bfe9:	pop    ecx
  40bfea:	add    ebx,DWORD PTR [edx+0xf529726]
  40bff0:	xchg   DWORD PTR [esp+ebp*2+0x30],ebp
  40bff4:	jmp    0x40bf9f
  40bff6:	ins    DWORD PTR es:[edi],dx
  40bff7:	mov    eax,0xcd71efd5
  40bffc:	arpl   WORD PTR [ecx+edx*2-0x2a],sp
  40c000:	ret    
  40c001:	mov    DWORD PTR [ecx],eax
  40c003:	adc    eax,DWORD PTR [esi]
  40c005:	aas    
  40c006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c007:	repz inc ebx
  40c009:	and    eax,0xcc0dfce9
  40c00e:	push   ebp
  40c00f:	push   ss
  40c010:	(bad)  
  40c011:	mov    al,ds:0x487c2e97
  40c016:	jne    0x40c050
  40c018:	psraw  mm1,QWORD PTR [ebx-0x46]
  40c01c:	not    DWORD PTR [ebp-0x5a]
  40c01f:	std    
  40c020:	mov    dl,0x6d
  40c022:	mov    dh,0x47
  40c024:	xchg   edx,eax
  40c025:	push   0x10
  40c027:	pop    ebp
  40c028:	inc    ecx
  40c029:	call   0xbee87563
  40c02e:	dec    esp
  40c02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c030:	outs   dx,DWORD PTR ds:[esi]
  40c031:	mov    BYTE PTR ds:0x9d7b3ded,bl
  40c037:	cdq    
  40c038:	jecxz  0x40bfcb
  40c03a:	jl     0x40bffb
  40c03c:	add    DWORD PTR ds:0x81185573,ebx
  40c042:	sar    DWORD PTR [edx-0x2a],cl
  40c045:	lods   al,BYTE PTR ds:[esi]
  40c046:	inc    ebp
  40c047:	cmp    ebx,DWORD PTR [ebx]
  40c049:	mov    al,0xae
  40c04b:	xchg   ebx,eax
  40c04c:	dec    ebx
  40c04d:	lahf   
  40c04e:	mov    edi,0x4955913e
  40c053:	mov    ebp,?
  40c055:	mov    al,ds:0x9aef5c04
  40c05a:	and    ah,bh
  40c05c:	and    eax,0xef931f51
  40c061:	enter  0xf8fc,0xa4
  40c065:	lds    esp,FWORD PTR [edi-0x2d]
  40c068:	jg     0x40bff8
  40c06a:	cmc    
  40c06b:	push   edx
  40c06c:	xchg   ebp,eax
  40c06d:	out    dx,al
  40c06e:	mov    cl,0x8
  40c070:	and    al,0x9f
  40c072:	test   eax,0x201d3e7b
  40c077:	fxch   st(0)
  40c079:	mov    esi,0x92d834a1
  40c07e:	mov    al,0x36
  40c080:	pop    ebp
  40c081:	push   es
  40c082:	loop   0x40c067
  40c084:	mov    ds:0x71431899,al
  40c089:	ins    BYTE PTR es:[edi],dx
  40c08a:	adc    al,0x6
  40c08c:	mov    eax,edi
  40c08e:	stos   BYTE PTR es:[edi],al
  40c08f:	inc    eax
  40c090:	dec    ecx
  40c091:	mov    eax,ds:0x1d6fd149
  40c096:	jne    0x40c114
  40c098:	test   DWORD PTR [edi-0x6d68abcf],0x19611f54
  40c0a2:	(bad)  
  40c0a3:	fld    st(5)
  40c0a5:	inc    ecx
  40c0a6:	xor    DWORD PTR [ebx+0xd],esp
  40c0a9:	fidiv  WORD PTR [edx+0x22]
  40c0ac:	or     eax,0xf3a8f04d
  40c0b1:	add    al,0x9
  40c0b3:	xchg   edi,eax
  40c0b4:	cmp    dh,cl
  40c0b6:	fstp   DWORD PTR [esi-0x23d96d1c]
  40c0bc:	sbb    al,bh
  40c0be:	mul    cl
  40c0c0:	call   0x48d91af5
  40c0c5:	lea    esp,[eax]
  40c0c7:	cdq    
  40c0c8:	lahf   
  40c0c9:	dec    ebx
  40c0ca:	loopne 0x40c05f
  40c0cc:	mov    WORD PTR [edi+0x4afdc4a3],gs
  40c0d2:	jmp    0x2d9:0xcadc3e5b
  40c0d9:	ret    0xfd13
  40c0dc:	gs loop 0x40c0ee
  40c0df:	(bad)  
  40c0e0:	jns    0x40c0bc
  40c0e2:	ficomp DWORD PTR [eax+ecx*1+0x2916638]
  40c0e9:	mov    ds:0x7f2e0fae,eax
  40c0ee:	jmp    0xfdd4fb78
  40c0f3:	fimul  WORD PTR [edi+eax*4-0x6473f8b]
  40c0fa:	inc    ebp
  40c0fb:	mov    esi,0x86ec0c99
  40c100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c101:	stos   BYTE PTR es:[edi],al
  40c102:	je     0x40c0d4
  40c104:	cli    
  40c105:	sbb    bl,ch
  40c107:	scas   al,BYTE PTR es:[edi]
  40c108:	lahf   
  40c109:	into   
  40c10a:	pop    eax
  40c10b:	mov    ah,0x4
  40c10d:	test   DWORD PTR [eax+0x2a0c7ef8],edi
  40c113:	and    al,0x99
  40c115:	cdq    
  40c116:	mov    cl,0x5e
  40c118:	(bad)  
  40c119:	std    
  40c11a:	lods   al,BYTE PTR ds:[esi]
  40c11b:	or     esp,DWORD PTR [ebp+0xe]
  40c11e:	pushf  
  40c11f:	mov    dl,BYTE PTR [esi-0x44]
  40c122:	and    DWORD PTR [esi+ebp*8-0x313710b7],0x3e
  40c12a:	xchg   ebp,edi
  40c12c:	push   ss
  40c12d:	ins    BYTE PTR es:[edi],dx
  40c12e:	mov    DWORD PTR [ebp+0x5f1a716f],esp
  40c134:	mov    WORD PTR [esi+0x50],cs
  40c137:	dec    eax
  40c138:	mov    ch,BYTE PTR [eax+0x67dee851]
  40c13e:	je     0x40c0d4
  40c140:	shl    ch,1
  40c142:	sub    DWORD PTR [ebx+esi*8+0x3944b8f0],0x7b284605
  40c14d:	add    BYTE PTR [ebx+eax*8-0x65a20ae2],bh
  40c154:	retf   0x1195
  40c157:	int3   
  40c158:	lea    eax,[edi]
  40c15a:	scas   al,BYTE PTR es:[edi]
  40c15b:	pop    ecx
  40c15c:	imul   edx,DWORD PTR [edx+0x2cdd0224],0xffffff90
  40c163:	in     eax,dx
  40c164:	sub    dl,BYTE PTR [eax+0x2ef335f8]
  40c16a:	daa    
  40c16b:	outs   dx,BYTE PTR ds:[esi]
  40c16c:	and    BYTE PTR [edi-0x3db0421e],0x7d
  40c173:	das    
  40c174:	jb     0x40c1f0
  40c176:	adc    bh,BYTE PTR [esi+0x537a008]
  40c17c:	dec    DWORD PTR [edx+0x1abf8938]
  40c182:	jp     0x40c147
  40c184:	sbb    esi,esp
  40c186:	and    al,0xc8
  40c188:	cmp    eax,0xec20585
  40c18d:	pusha  
  40c18e:	(bad)  [esi]
  40c190:	ror    DWORD PTR [esi],0xf
  40c193:	rcr    DWORD PTR [eiz*2-0x1a7ffd30],1
  40c19a:	mov    cs,WORD PTR [esi+0xfe48560]
  40c1a0:	js     0x40c1fe
  40c1a2:	pop    eax
  40c1a3:	ja     0x40c140
  40c1a5:	repnz sbb ebx,DWORD PTR [esi]
  40c1a8:	dec    edi
  40c1a9:	test   ebp,ecx
  40c1ab:	jb     0x40c1af
  40c1ad:	icebp  
  40c1ae:	fs (bad) 
  40c1b0:	sub    BYTE PTR [ecx+eiz*1-0x53],ch
  40c1b4:	ret    
  40c1b5:	jb     0x40c1f8
  40c1b7:	sub    ax,0x90e5
  40c1bb:	mov    esp,0x3189702e
  40c1c0:	add    al,0x6f
  40c1c2:	dec    ebp
  40c1c3:	rcr    BYTE PTR [edi],1
  40c1c5:	xchg   esi,eax
  40c1c6:	mov    dh,0x78
  40c1c8:	pop    es
  40c1c9:	mov    ebx,0xbf1a7552
  40c1ce:	inc    edi
  40c1cf:	push   ds
  40c1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d1:	jmp    0x40c186
  40c1d3:	dec    ebx
  40c1d4:	sbb    al,0xae
  40c1d6:	rcr    ah,1
  40c1d8:	jmp    0x40c16b
  40c1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1db:	fimul  DWORD PTR [ebx]
  40c1dd:	mov    ds:0xab6ca28,eax
  40c1e2:	mov    dl,0x5
  40c1e4:	xchg   DWORD PTR [eiz*8-0x30bafd8f],ecx
  40c1eb:	(bad)  
  40c1ec:	fisub  DWORD PTR [ebx]
  40c1ee:	cmp    ch,BYTE PTR [ebx+0x4c3557f4]
  40c1f4:	stc    
  40c1f5:	pop    ebp
  40c1f6:	or     esi,ebx
  40c1f8:	xchg   ebp,eax
  40c1f9:	xchg   edi,eax
  40c1fa:	popf   
  40c1fb:	mov    fs,ebx
  40c1fd:	retf   
  40c1fe:	fs push edx
  40c200:	or     eax,0xeac3c7b9
  40c205:	mov    ebp,0x7d1f3877
  40c20a:	sbb    ebp,esi
  40c20c:	test   DWORD PTR [ebp+esi*4-0x4f],esp
  40c210:	jmp    0x302c53d6
  40c215:	shr    ah,cl
  40c217:	int3   
  40c218:	xor    eax,esi
  40c21a:	adc    ebx,ebx
  40c21c:	cmp    ecx,ecx
  40c21e:	or     al,0x6c
  40c220:	daa    
  40c221:	or     dl,ch
  40c223:	push   cs
  40c224:	mov    al,0xeb
  40c226:	mov    DWORD PTR cs:[esp+esi*4],eax
  40c22a:	add    al,dh
  40c22c:	inc    ebp
  40c22d:	bound  ecx,QWORD PTR [ebp-0x22]
  40c230:	jb     0x40c248
  40c232:	aaa    
  40c233:	or     al,0xe2
  40c235:	dec    BYTE PTR [ecx+0x80bcaf8]
  40c23b:	or     al,0xe9
  40c23d:	jae    0x40c1e8
  40c23f:	dec    edx
  40c240:	add    al,0xc4
  40c242:	ret    
  40c243:	mov    dh,0x68
  40c245:	fwait
  40c246:	enter  0x9fcd,0x2
  40c24a:	xchg   esi,eax
  40c24b:	pop    esi
  40c24c:	jg     0x40c264
  40c24e:	pop    edi
  40c24f:	or     esp,DWORD PTR [eax]
  40c251:	mov    ah,0xbf
  40c253:	xchg   edi,eax
  40c254:	xchg   edi,eax
  40c255:	rcr    edi,1
  40c257:	in     al,0x48
  40c259:	mov    al,ds:0x9c60277
  40c25e:	adc    ebp,DWORD PTR [ecx+ebp*8-0x65]
  40c262:	push   esp
  40c263:	inc    eax
  40c264:	push   esp
  40c265:	jb     0x40c2c6
  40c267:	loope  0x40c263
  40c269:	mov    edx,0xadfdb9e1
  40c26e:	dec    ebp
  40c26f:	fwait
  40c270:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c272:	pop    ebx
  40c273:	mov    dh,0xe
  40c275:	push   ebx
  40c276:	and    BYTE PTR [ebp-0x7c],dh
  40c279:	inc    esi
  40c27a:	aaa    
  40c27b:	in     al,0x31
  40c27d:	mov    bh,0xa5
  40c27f:	inc    edi
  40c280:	mov    ds:0x23a0196c,eax
  40c285:	leave  
  40c286:	jnp    0x40c2b8
  40c288:	dec    ebx
  40c289:	sub    eax,DWORD PTR [eax+0xe4da190]
  40c28f:	add    ecx,DWORD PTR ds:0x7ce387f2
  40c295:	pop    ss
  40c296:	push   edi
  40c297:	mov    al,0x4c
  40c299:	push   ss
  40c29a:	push   ebx
  40c29b:	fs aaa 
  40c29d:	cmp    DWORD PTR [esi+0x550d4cae],0x4c195c1d
  40c2a7:	sbb    DWORD PTR [edx-0x4df90885],ecx
  40c2ad:	shl    BYTE PTR [ecx+0x47],1
  40c2b0:	ror    DWORD PTR [edx-0x1348144d],cl
  40c2b6:	inc    edx
  40c2b7:	sbb    al,0x56
  40c2b9:	scas   al,BYTE PTR es:[edi]
  40c2ba:	xchg   ecx,eax
  40c2bb:	push   ss
  40c2bc:	sti    
  40c2bd:	aaa    
  40c2be:	sub    al,0x21
  40c2c0:	xor    esi,DWORD PTR [edx+0x412292d6]
  40c2c6:	retf   0xa43
  40c2c9:	mov    ecx,0xe4f92f5b
  40c2ce:	fucom  st(4)
  40c2d0:	loope  0x40c30c
  40c2d2:	mov    ebx,0x5d07bdf5
  40c2d7:	enter  0x3ad0,0x5e
  40c2db:	addr16 cld 
  40c2dd:	jb     0x40c312
  40c2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e0:	rcl    BYTE PTR [edi+0x63],1
  40c2e3:	outs   dx,DWORD PTR ds:[esi]
  40c2e4:	pushf  
  40c2e5:	sbb    eax,0x53afcc
  40c2ea:	jns    0x40c289
  40c2ec:	daa    
  40c2ed:	xchg   ecx,eax
  40c2ee:	neg    cl
  40c2f0:	adc    esi,edi
  40c2f2:	add    al,0x8e
  40c2f4:	adc    ah,BYTE PTR [ecx]
  40c2f6:	in     eax,0xb5
  40c2f8:	test   ebx,esi
  40c2fa:	(bad)
  40c2fe:	es dec ecx
  40c300:	jmp    0x40c33f
  40c302:	aam    0xe6
  40c304:	xchg   ebx,eax
  40c305:	adc    al,0xf2
  40c307:	je     0x40c31a
  40c309:	fstp   TBYTE PTR cs:[ecx]
  40c30c:	icebp  
  40c30d:	xchg   esp,eax
  40c30e:	jp     0x40c37f
  40c310:	fdiv   DWORD PTR [ebx+0x204c4ca2]
  40c316:	in     al,dx
  40c317:	fs push ecx
  40c319:	jnp    0x40c380
  40c31b:	push   ebp
  40c31c:	and    al,0x37
  40c31e:	daa    
  40c31f:	lods   al,BYTE PTR ds:[esi]
  40c320:	inc    eax
  40c321:	mov    eax,ds:0xa044c36e
  40c326:	xor    BYTE PTR [esi-0x6],dh
  40c329:	pop    ss
  40c32a:	push   es
  40c32b:	xor    BYTE PTR [edi],0x6
  40c32e:	cdq    
  40c32f:	mov    esi,0xa92a2d78
  40c334:	fadd   st,st(5)
  40c336:	in     eax,0x6f
  40c338:	pop    ecx
  40c339:	mov    esp,0x3a291b7c
  40c33e:	das    
  40c33f:	imul   esi,DWORD PTR [edx+0xf],0xe91ff3a6
  40c346:	call   0x20f5:0x50ad4826
  40c34d:	jmp    0x40c387
  40c34f:	(bad)  
  40c350:	mov    bl,0x67
  40c352:	xchg   ebx,eax
  40c353:	(bad)  
  40c354:	mov    edx,0xb11c2488
  40c359:	mov    ecx,0x5ff74f32
  40c35e:	je     0x40c2f5
  40c360:	dec    eax
  40c361:	mul    DWORD PTR [edx-0xe]
  40c364:	lods   al,BYTE PTR ds:[esi]
  40c365:	mov    ebx,0x51997f68
  40c36a:	cld    
  40c36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c36c:	scas   eax,DWORD PTR es:[edi]
  40c36d:	lock pop esi
  40c36f:	(bad)  
  40c370:	cdq    
  40c371:	cmp    BYTE PTR [edx],0xdd
  40c374:	aas    
  40c375:	jns    0x40c31c
  40c377:	nop
  40c378:	setne  ah
  40c37b:	lods   eax,DWORD PTR ds:[esi]
  40c37c:	adc    BYTE PTR [ebp-0x52a69083],ch
  40c382:	mov    ecx,0x15044c9c
  40c387:	mov    dh,0x3e
  40c389:	inc    edx
  40c38a:	stc    
  40c38b:	inc    esi
  40c38c:	dec    edx
  40c38d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c38e:	leave  
  40c38f:	bound  edx,QWORD PTR [edx+0x58]
  40c392:	inc    ebp
  40c393:	sbb    edx,ebp
  40c395:	xor    al,0xdb
  40c397:	lock and al,0x76
  40c39a:	sub    al,BYTE PTR [ebx-0x7b]
  40c39d:	ins    DWORD PTR es:[edi],dx
  40c39e:	aam    0xfe
  40c3a0:	pop    es
  40c3a1:	jns    0x40c353
  40c3a3:	test   BYTE PTR [ecx-0x26],dl
  40c3a6:	dec    esp
  40c3a7:	fist   DWORD PTR [edi]
  40c3a9:	inc    ecx
  40c3aa:	xchg   esi,eax
  40c3ab:	and    dh,BYTE PTR [esi+0xa]
  40c3ae:	(bad)  
  40c3af:	out    dx,eax
  40c3b0:	xchg   ebp,eax
  40c3b1:	mov    bh,0x1e
  40c3b3:	enter  0xddf7,0x4f
  40c3b7:	(bad)  
  40c3b9:	call   0x53e3402d
  40c3be:	jecxz  0x40c388
  40c3c0:	ja     0x40c3de
  40c3c2:	imul   ecx,DWORD PTR [ebx+edx*2-0x79bc4fc6],0x525cccb6
  40c3cd:	cmp    ebx,esp
  40c3cf:	lods   al,BYTE PTR ds:[esi]
  40c3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d1:	add    eax,esp
  40c3d3:	loop   0x40c439
  40c3d5:	in     al,0xd4
  40c3d7:	pushf  
  40c3d8:	test   BYTE PTR [ebx],dl
  40c3da:	jg     0x40c39f
  40c3dc:	or     al,0xd3
  40c3de:	nop
  40c3df:	mov    DWORD PTR [ebp-0x458e74a],edx
  40c3e5:	push   esp
  40c3e6:	loop   0x40c3da
  40c3e8:	addr16 pop esi
  40c3ea:	mov    bh,0x58
  40c3ec:	mov    ah,0x6c
  40c3ee:	add    al,0x50
  40c3f0:	adc    eax,0x36f3e20d
  40c3f5:	add    eax,0x470e51cf
  40c3fa:	pop    ecx
  40c3fb:	pop    edx
  40c3fc:	(bad)  
  40c3fd:	mov    ebx,0x9f78fe12
  40c402:	retf   
  40c403:	sbb    DWORD PTR [edx-0x13],ecx
  40c406:	sbb    BYTE PTR [esi+0x130a5eda],0xa8
  40c40d:	in     eax,0x8
  40c40f:	mov    esi,0x23cbe545
  40c414:	sub    al,0x18
  40c416:	push   eax
  40c417:	cmp    al,BYTE PTR [ecx-0x21]
  40c41a:	addr16 add esp,edi
  40c41d:	fbstp  TBYTE PTR [edx]
  40c41f:	and    eax,DWORD PTR [ebx-0x7f]
  40c422:	push   ss
  40c423:	dec    esp
  40c424:	xor    al,0x76
  40c426:	arpl   bp,di
  40c428:	add    eax,0x6dfc9b4f
  40c42d:	pop    eax
  40c42e:	mov    esp,esp
  40c430:	cmp    DWORD PTR [esi],ebx
  40c432:	out    0x87,eax
  40c434:	jb     0x40c45a
  40c436:	sub    al,0x75
  40c438:	cwde   
  40c439:	dec    eax
  40c43a:	dec    edx
  40c43b:	nop
  40c43c:	test   al,0x8e
  40c43e:	adc    eax,ecx
  40c440:	stos   DWORD PTR es:[edi],eax
  40c441:	inc    esi
  40c442:	cmp    al,BYTE PTR [edx+0x66]
  40c445:	and    al,0x90
  40c447:	push   ebp
  40c448:	adc    esi,DWORD PTR [edi+eax*4-0x45945312]
  40c44f:	lods   al,BYTE PTR ds:[esi]
  40c450:	add    edi,edi
  40c452:	imul   esi,DWORD PTR [edx+eax*8-0x635c7822],0xffffff93
  40c45a:	xchg   edx,eax
  40c45b:	jae    0x40c44b
  40c45d:	inc    edx
  40c45e:	push   0xd47a5c0b
  40c463:	xor    ecx,eax
  40c465:	mov    ecx,0xc0e55f97
  40c46a:	dec    ecx
  40c46b:	imul   esp,ebp,0x58
  40c46e:	or     ah,BYTE PTR [ecx+0x66]
  40c471:	iret   
  40c472:	jns    0x40c45e
  40c474:	xchg   dh,bl
  40c476:	(bad)  [esi]
  40c478:	push   0x6
  40c47a:	shl    DWORD PTR [edx+0x23],cl
  40c47d:	add    eax,0x13a6e0dc
  40c482:	and    edx,DWORD PTR [esi-0x6d56ce6e]
  40c488:	pop    edx
  40c489:	cli    
  40c48a:	inc    esp
  40c48b:	sub    al,BYTE PTR [eax-0x74eb3b2f]
  40c491:	jne    0x40c4ff
  40c493:	adc    edx,DWORD PTR [edx-0x43]
  40c496:	aaa    
  40c497:	retf   
  40c498:	inc    eax
  40c499:	ja     0x40c4df
  40c49b:	jns    0x40c432
  40c49d:	mov    dh,dh
  40c49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a0:	jl     0x40c4f8
  40c4a2:	sub    DWORD PTR [eax-0x4cdeb80b],ecx
  40c4a8:	addr16 dec esp
  40c4aa:	sub    al,0xc2
  40c4ac:	(bad)  
  40c4ad:	mov    BYTE PTR ds:0x16b114ed,al
  40c4b3:	mov    BYTE PTR [ebx+0x2c],bh
  40c4b6:	dec    ecx
  40c4b7:	add    al,0x1
  40c4b9:	push   0x97977a30
  40c4be:	sbb    BYTE PTR [eax-0x42],0xe5
  40c4c2:	idiv   BYTE PTR [ecx-0x75]
  40c4c5:	test   al,0x21
  40c4c7:	pop    ebx
  40c4c8:	mov    ecx,0xf885ea98
  40c4cd:	and    eax,0x31174369
  40c4d2:	inc    ebx
  40c4d3:	mov    BYTE PTR [ecx],ch
  40c4d5:	mov    eax,0x3d877d2b
  40c4da:	sbb    al,0x86
  40c4dc:	test   al,0x12
  40c4de:	ins    DWORD PTR es:[edi],dx
  40c4df:	jmp    0x40c504
  40c4e1:	lock sub al,0x94
  40c4e4:	into   
  40c4e5:	mov    cl,BYTE PTR ds:0x2f259b27
  40c4eb:	or     BYTE PTR [esp+ebx*2-0x78],ah
  40c4ef:	outs   dx,BYTE PTR ds:[esi]
  40c4f0:	mov    ecx,edi
  40c4f2:	aaa    
  40c4f3:	bound  esi,QWORD PTR [esi]
  40c4f5:	ins    BYTE PTR es:[edi],dx
  40c4f6:	mov    BYTE PTR [edi-0xc],ch
  40c4f9:	and    DWORD PTR [ebp-0x52b164d0],esi
  40c4ff:	dec    edx
  40c500:	popa   
  40c501:	cwde   
  40c502:	dec    esp
  40c503:	lds    esi,FWORD PTR [ebp-0x71d5e6eb]
  40c509:	mov    bl,bl
  40c50b:	test   eax,0x696822
  40c510:	(bad)  
  40c511:	bound  ebp,QWORD PTR [eax-0x4d]
  40c514:	add    bh,BYTE PTR [esi+0x6ffcc2ab]
  40c51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c51c:	out    0x23,al
  40c51e:	imul   ebx,DWORD PTR [edx],0x54
  40c521:	pop    esp
  40c522:	cmp    BYTE PTR [ecx-0x776b4aa7],dh
  40c528:	out    0x46,eax
  40c52a:	jecxz  0x40c538
  40c52c:	add    eax,0x3a859910
  40c531:	cwde   
  40c532:	adc    eax,0xd3387d63
  40c537:	sbb    ebx,DWORD PTR [ecx+0x38a3a5f2]
  40c53d:	imul   edi,edx,0x35ca136f
  40c543:	popf   
  40c544:	xchg   esi,eax
  40c545:	leave  
  40c546:	popa   
  40c547:	lock or BYTE PTR [bx+0x40],ch
  40c54c:	inc    eax
  40c54d:	test   al,0x1e
  40c54f:	xor    BYTE PTR [esi-0x5c34525d],dh
  40c555:	cdq    
  40c556:	xchg   BYTE PTR [ebx],al
  40c558:	jne    0x40c563
  40c55a:	cmp    al,0xe7
  40c55c:	xor    eax,0x7d673198
  40c561:	into   
  40c562:	fisttp DWORD PTR cs:[ebp-0x15]
  40c566:	sub    ebp,esi
  40c568:	cmc    
  40c569:	inc    edi
  40c56a:	ja     0x40c59c
  40c56c:	inc    BYTE PTR [eax+0x6be8ce52]
  40c572:	test   al,0x90
  40c574:	iret   
  40c575:	popa   
  40c576:	xchg   esp,eax
  40c577:	daa    
  40c578:	ss jo  0x40c5bb
  40c57b:	mov    edi,0xfa8668ec
  40c580:	lock nop
  40c582:	ret    
  40c583:	jmp    0x7bd5:0x214f9069
  40c58a:	sub    dl,BYTE PTR [ebx-0x59]
  40c58d:	sbb    al,0xe
  40c58f:	addr16 dec esp
  40c591:	sub    al,BYTE PTR [ecx]
  40c593:	pop    eax
  40c594:	jp     0x40c60f
  40c596:	shl    ebp,0xfa
  40c599:	pop    ds
  40c59a:	inc    esp
  40c59b:	stc    
  40c59c:	and    esi,DWORD PTR [ecx-0x27b5141]
  40c5a2:	xchg   edx,eax
  40c5a3:	inc    ebx
  40c5a4:	xchg   DWORD PTR [ebx],edi
  40c5a6:	ins    DWORD PTR es:[edi],dx
  40c5a7:	xchg   DWORD PTR fs:[ebp+0x52fe0cd7],ebx
  40c5ae:	xchg   ecx,eax
  40c5af:	adc    eax,0x88571b44
  40c5b4:	test   esp,eax
  40c5b6:	cmp    DWORD PTR [eax+esi*1-0x21d5f597],0x11
  40c5be:	mov    dl,0x2
  40c5c0:	inc    eax
  40c5c1:	aam    0xc8
  40c5c3:	fisub  WORD PTR [ebx+0x18]
  40c5c6:	inc    esp
  40c5c7:	ficom  DWORD PTR [ebx+edx*1+0x76241093]
  40c5ce:	out    dx,al
  40c5cf:	inc    edi
  40c5d0:	leave  
  40c5d1:	xchg   ecx,eax
  40c5d2:	mov    bh,BYTE PTR [ecx+0x73]
  40c5d5:	aam    0x27
  40c5d7:	mov    BYTE PTR [eax],dh
  40c5d9:	outs   dx,DWORD PTR ds:[esi]
  40c5da:	and    eax,0xd5a77708
  40c5df:	jbe    0x40c5d9
  40c5e1:	lods   al,BYTE PTR ds:[esi]
  40c5e2:	(bad)  
  40c5e3:	dec    ecx
  40c5e4:	jl     0x40c652
  40c5e6:	mov    ds:0x43f7c3c1,eax
  40c5eb:	jbe    0x40c639
  40c5ed:	push   ds
  40c5ee:	out    0x3e,eax
  40c5f0:	pusha  
  40c5f1:	push   ds
  40c5f2:	cwde   
  40c5f3:	xor    BYTE PTR [esi-0x24192858],dl
  40c5f9:	rcl    DWORD PTR [ebp+0x53],1
  40c5fc:	mov    dl,0xb4
  40c5fe:	sar    DWORD PTR [eax+0x54],1
  40c601:	cmp    esi,ebx
  40c603:	lods   eax,DWORD PTR ds:[esi]
  40c604:	cmp    eax,DWORD PTR [edi]
  40c606:	mov    cl,bl
  40c608:	push   ds
  40c609:	fsubr  st(5),st
  40c60b:	das    
  40c60c:	aas    
  40c60d:	inc    esi
  40c60e:	cmp    DWORD PTR [ebx],ebx
  40c610:	aam    0x1b
  40c612:	cmp    DWORD PTR [esi],ebx
  40c614:	xlat   BYTE PTR ds:[ebx]
  40c615:	addr16 aad 0x63
  40c618:	out    0x8b,al
  40c61a:	adc    al,0x16
  40c61c:	imul   esi,esp,0x93540632
  40c622:	xchg   esp,eax
  40c623:	(bad)  
  40c624:	div    DWORD PTR [ebp+0x3a09db2]
  40c62a:	out    0x73,al
  40c62c:	ret    
  40c62d:	mov    bh,0x71
  40c62f:	out    dx,al
  40c630:	adc    eax,ebx
  40c632:	test   al,0x15
  40c634:	ins    BYTE PTR es:[edi],dx
  40c635:	cmp    BYTE PTR [ecx+0x76],dl
  40c638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c639:	movq   QWORD PTR [edx],mm1
  40c63c:	loop   0x40c6b3
  40c63e:	imul   edi,esp,0xd50808b6
  40c644:	sar    BYTE PTR [esi],cl
  40c646:	adc    eax,ecx
  40c648:	inc    esi
  40c649:	jae    0x40c62a
  40c64b:	imul   edx,DWORD PTR [esi+0x67],0xa18bcddb
  40c652:	ficom  DWORD PTR [edx]
  40c654:	lea    ecx,[ecx+0x5c]
  40c657:	push   0xffffffd5
  40c659:	shl    DWORD PTR [edi],0x44
  40c65c:	sub    eax,0xe68cce9c
  40c661:	mov    ah,0x97
  40c663:	pusha  
  40c664:	inc    ebp
  40c665:	fwait
  40c666:	add    esi,DWORD PTR [edi+eax*2+0xb]
  40c66a:	cs jl  0x40c6c9
  40c66d:	mov    al,ds:0x2af22d17
  40c672:	inc    esi
  40c673:	jb     0x40c6b8
  40c675:	dec    ecx
  40c676:	dec    eax
  40c677:	add    BYTE PTR [edx-0x1bb30a65],cl
  40c67d:	cmp    DWORD PTR [ecx],0xacfabe46
  40c683:	in     al,0xe8
  40c685:	xchg   ecx,eax
  40c686:	mov    ecx,0x215f96c9
  40c68b:	cli    
  40c68c:	xlat   BYTE PTR ds:[ebx]
  40c68d:	aad    0x42
  40c68f:	les    ebp,FWORD PTR [esi]
  40c691:	xchg   ebp,eax
  40c692:	loopne 0x40c630
  40c694:	pop    ebx
  40c695:	imul   ebx,DWORD PTR [ecx],0x4a9eedaf
  40c69b:	mov    eax,esp
  40c69d:	push   ds
  40c69e:	bnd jo 0x40c63f
  40c6a1:	add    dl,BYTE PTR [esi]
  40c6a3:	cmovl  ecx,DWORD PTR [edi+0x19484f96]
  40c6aa:	jl     0x40c718
  40c6ac:	xchg   esp,eax
  40c6ad:	push   ecx
  40c6ae:	xchg   BYTE PTR [edx+0x6a255199],bl
  40c6b4:	cld    
  40c6b5:	or     ah,BYTE PTR [edi+0x79]
  40c6b8:	or     esi,ecx
  40c6ba:	outs   dx,BYTE PTR ds:[esi]
  40c6bb:	xor    dl,dh
  40c6bd:	std    
  40c6be:	push   0x50
  40c6c0:	dec    esp
  40c6c1:	(bad)  
  40c6c2:	mov    esi,0xea3b8cb2
  40c6c7:	out    0x85,al
  40c6c9:	cmp    eax,0x6baf2c0c
  40c6ce:	push   ecx
  40c6cf:	mov    edx,0xbe4ac779
  40c6d4:	jae    0x40c6f1
  40c6d6:	add    BYTE PTR [edx+eax*1],al
  40c6d9:	aam    0xd1
  40c6db:	aam    0xf4
  40c6dd:	fidivr DWORD PTR [esi]
  40c6df:	enter  0x7ae8,0x3
  40c6e3:	and    DWORD PTR [edx-0x427b25b4],0xffffff8f
  40c6ea:	dec    edx
  40c6eb:	inc    ecx
  40c6ec:	rcl    DWORD PTR [ebx],0x18
  40c6ef:	xor    eax,0x9d04ca2
  40c6f4:	xor    DWORD PTR [edx+0x29fb1e95],esp
  40c6fa:	cs jmp 0x3e18:0x9c390169
  40c702:	pop    ss
  40c703:	cmp    al,0xc9
  40c705:	push   0xffffff83
  40c707:	int    0xcd
  40c709:	xchg   DWORD PTR [esi-0x201af2cc],edi
  40c70f:	sbb    BYTE PTR [ecx-0x5d4d7abc],0x59
  40c716:	xor    eax,0x933f3339
  40c71b:	ins    DWORD PTR es:[edi],dx
  40c71c:	ds mov eax,0xa556e7ba
  40c722:	int3   
  40c723:	adc    DWORD PTR [edx+0x1d],edx
  40c726:	aad    0x74
  40c728:	add    esi,DWORD PTR [esi-0x42d64d77]
  40c72e:	addr16 xchg esi,eax
  40c730:	jle    0x40c6be
  40c732:	or     BYTE PTR ds:0xd3c909d6,al
  40c738:	adc    ch,BYTE PTR [esi+eax*1+0x1bddd277]
  40c73f:	mov    eax,ds:0xbc90014b
  40c744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c745:	daa    
  40c746:	inc    esi
  40c747:	enter  0x5c77,0x41
  40c74b:	cwde   
  40c74c:	mov    BYTE PTR [ebp-0xed18438],bh
  40c752:	scas   eax,DWORD PTR es:[edi]
  40c753:	pop    ds
  40c754:	xor    DWORD PTR [edx+0x132501c1],edx
  40c75a:	in     eax,0x74
  40c75c:	scas   al,BYTE PTR es:[edi]
  40c75d:	mov    es:0xd37c63ed,eax
  40c763:	or     BYTE PTR cs:[esi],cl
  40c766:	cld    
  40c767:	jp     0x40c783
  40c769:	jae    0x40c78c
  40c76b:	pop    ds
  40c76c:	mov    bl,0x43
  40c76e:	or     BYTE PTR [esi-0x75],dh
  40c771:	pusha  
  40c772:	clc    
  40c773:	mov    al,0x54
  40c775:	adc    bh,BYTE PTR [ebp-0x7d65f7e0]
  40c77b:	mov    ah,0x24
  40c77d:	xor    ch,BYTE PTR [ebx-0x39a5a76]
  40c783:	sbb    cl,BYTE PTR [ebp+0x59]
  40c786:	add    al,0x3b
  40c788:	cmc    
  40c789:	mov    WORD PTR [edi+0x7572707b],0x1bd4
  40c792:	pushf  
  40c793:	and    eax,0xe8c2d611
  40c798:	dec    edi
  40c799:	mov    al,BYTE PTR [eax+0xec13588]
  40c79f:	mov    eax,0x556d0a3d
  40c7a4:	outs   dx,BYTE PTR ds:[esi]
  40c7a5:	loop   0x40c7b3
  40c7a7:	pop    ebx
  40c7a8:	xor    eax,esp
  40c7aa:	and    BYTE PTR [edx],bl
  40c7ac:	in     al,dx
  40c7ad:	xor    al,0xe1
  40c7af:	jne    0x40c795
  40c7b1:	sar    DWORD PTR [edx],1
  40c7b3:	adc    BYTE PTR [edi+0x64fbd6e3],0x84
  40c7ba:	aaa    
  40c7bb:	(bad)  
  40c7bc:	mov    cs:0xf900a679,eax
  40c7c2:	(bad)  
  40c7c3:	adc    BYTE PTR [esi],ch
  40c7c5:	ds sbb ah,bh
  40c7c8:	mov    dh,0x88
  40c7ca:	push   0x48049ddd
  40c7cf:	jp     0x40c82d
  40c7d1:	sub    eax,0xf48214c
  40c7d6:	aas    
  40c7d7:	inc    edx
  40c7d8:	les    ebx,FWORD PTR [esi-0x3e2d2c35]
  40c7de:	jae    0x40c7a9
  40c7e0:	ins    DWORD PTR es:[edi],dx
  40c7e1:	dec    edx
  40c7e2:	nop
  40c7e3:	arpl   WORD PTR ds:0xfe901d06,si
  40c7e9:	sbb    cl,bl
  40c7eb:	mov    al,ds:0x54eac47e
  40c7f0:	mov    bl,BYTE PTR [ebp+0x33]
  40c7f3:	mov    ah,0x5b
  40c7f5:	(bad)  
  40c7f7:	dec    ebp
  40c7f8:	imul   ecx,edx,0xffffff87
  40c7fb:	in     al,0x56
  40c7fd:	repz mov ds:0x482668ee,al
  40c803:	rcl    edx,cl
  40c805:	and    DWORD PTR [edi+ebx*1],esp
  40c808:	cdq    
  40c809:	pop    edi
  40c80a:	sbb    ah,cl
  40c80c:	ret    0xc29f
  40c80f:	clc    
  40c810:	or     DWORD PTR [ebx-0x37],0xfaa4dc78
  40c817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c818:	ds sahf 
  40c81a:	sti    
  40c81b:	call   FWORD PTR [eax-0x69636969]
  40c821:	cmp    al,0x8
  40c823:	mov    ds:0x2cffea0c,al
  40c828:	sub    al,BYTE PTR [ebp+0xc7312d6]
  40c82e:	dec    edx
  40c82f:	movlps QWORD PTR [ecx+ebx*8+0x40],xmm1
  40c834:	popa   
  40c835:	loope  0x40c897
  40c837:	fnstcw WORD PTR [esi+eiz*1]
  40c83a:	fnstenv [edi]
  40c83c:	ins    BYTE PTR es:[edi],dx
  40c83d:	mov    ebx,DWORD PTR [ebp-0x2bfb3605]
  40c843:	mov    ch,0x65
  40c845:	and    DWORD PTR [edx+0x16],esi
  40c848:	cmp    edi,DWORD PTR [edi+eiz*2+0x6f]
  40c84c:	fs pop ecx
  40c84e:	add    DWORD PTR [esi],0x19
  40c851:	push   edx
  40c852:	mov    edi,?
  40c854:	cmp    eax,0xac90aa8d
  40c859:	cwde   
  40c85a:	dec    esp
  40c85b:	arpl   WORD PTR [ecx+edi*1],sp
  40c85e:	sbb    eax,0xe249423e
  40c863:	xchg   ecx,eax
  40c864:	add    DWORD PTR [edx+0x6a],edi
  40c867:	clc    
  40c868:	fadd   DWORD PTR [edi-0x197a438c]
  40c86e:	inc    esi
  40c86f:	jae    0x40c874
  40c871:	fimul  DWORD PTR [eax-0x7b38365f]
  40c877:	inc    edx
  40c878:	mov    bl,BYTE PTR [eax+0x6e]
  40c87b:	dec    eax
  40c87c:	je     0x40c86d
  40c87e:	lahf   
  40c87f:	daa    
  40c880:	dec    esi
  40c881:	sbb    ebp,ebp
  40c883:	nop
  40c884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c885:	sub    DWORD PTR [ebx],ebx
  40c887:	cmp    BYTE PTR [ecx+eiz*2],al
  40c88a:	xor    DWORD PTR [edx-0x7c],ebx
  40c88d:	xor    al,0xa9
  40c88f:	push   cs
  40c890:	fiadd  DWORD PTR [esi*8+0x1c262617]
  40c897:	or     DWORD PTR [eax],eax
  40c899:	sbb    eax,DWORD PTR [eax]
  40c89b:	cmp    esi,DWORD PTR [ebp+0x2]
  40c89e:	add    eax,0x7b65bac
  40c8a3:	scas   al,BYTE PTR es:[edi]
  40c8a4:	and    BYTE PTR [edx-0xa],dl
  40c8a7:	cmp    DWORD PTR ds:0x172a6c7,ecx
  40c8ad:	inc    ebp
  40c8ae:	add    BYTE PTR [eax],ch
  40c8b0:	jmp    0x40c8e1
  40c8b2:	dec    ebx
  40c8b3:	out    dx,al
  40c8b4:	add    eax,DWORD PTR [ecx+0x7c37696a]
  40c8ba:	xchg   esi,eax
  40c8bb:	retf   0x8953
  40c8be:	cmp    eax,0xc095204d
  40c8c3:	int3   
  40c8c4:	mov    esp,?
  40c8c6:	sub    bl,0x64
  40c8c9:	sub    eax,0xa7f39fc2
  40c8ce:	cmp    DWORD PTR [ecx+0x39],edi
  40c8d1:	adc    DWORD PTR [esi+0x529212dd],0x9
  40c8d8:	adc    bh,al
  40c8da:	daa    
  40c8db:	push   0x41
  40c8dd:	jo     0x40c898
  40c8df:	push   ebp
  40c8e0:	sub    eax,0x90a17d33
  40c8e5:	pop    ecx
  40c8e6:	data16 cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c8e9:	xchg   edx,eax
  40c8ea:	in     eax,dx
  40c8eb:	test   eax,0x1cbf7ecd
  40c8f0:	mov    eax,edx
  40c8f2:	add    al,0xd8
  40c8f4:	inc    ebx
  40c8f5:	push   ebp
  40c8f6:	mov    dh,0xb0
  40c8f8:	test   ebx,ecx
  40c8fa:	in     al,0x8a
  40c8fc:	xchg   esp,eax
  40c8fd:	adc    DWORD PTR [eax+0x623ddab7],eax
  40c903:	call   0x6f7c:0x92356ed4
  40c90a:	fst    st(6)
  40c90c:	stos   BYTE PTR es:[edi],al
  40c90d:	jno    0x40c8ce
  40c90f:	sub    DWORD PTR [ebx-0x117a5b1b],edx
  40c915:	pop    edx
  40c916:	stc    
  40c917:	inc    esp
  40c918:	sbb    al,0xe5
  40c91a:	int    0x68
  40c91c:	imul   ecx,DWORD PTR [eax+0x5a],0x8eb5d007
  40c923:	and    BYTE PTR ds:0x63703ee7,bl
  40c929:	aaa    
  40c92a:	jne    0x40c92d
  40c92c:	ins    DWORD PTR es:[edi],dx
  40c92d:	mov    esp,0x9d84f70c
  40c932:	inc    esi
  40c933:	pop    ebx
  40c934:	leave  
  40c935:	mov    edi,DWORD PTR ds:0x1e0c8c9b
  40c93b:	cli    
  40c93c:	lods   eax,DWORD PTR ds:[esi]
  40c93d:	clc    
  40c93e:	imul   esi,DWORD PTR [edi+0x5],0x1279ec83
  40c945:	pop    esi
  40c946:	jno    0x40c93b
  40c948:	mov    dh,0xa0
  40c94a:	adc    BYTE PTR [ebx+0x12],dl
  40c94d:	dec    eax
  40c94e:	jmp    0x40c9be
  40c950:	fwait
  40c951:	sub    BYTE PTR [esi],al
  40c953:	ds scas eax,DWORD PTR es:[edi]
  40c955:	cmp    al,0x36
  40c957:	enter  0xe822,0xfd
  40c95b:	pusha  
  40c95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c95d:	xor    edi,DWORD PTR [edx]
  40c95f:	or     DWORD PTR [esi+0x33],esp
  40c962:	cmp    DWORD PTR [edx-0x7c5c2ec4],ebx
  40c968:	adc    BYTE PTR [ebp-0x761e70f6],bl
  40c96e:	adc    al,0xe4
  40c970:	cli    
  40c971:	push   esi
  40c972:	add    esi,DWORD PTR [esi-0x7d]
  40c975:	aaa    
  40c976:	push   ss
  40c977:	mov    ds:0xa32ab4dd,eax
  40c97c:	outs   dx,DWORD PTR ds:[esi]
  40c97d:	adc    eax,0xd88f8ee9
  40c982:	jno    0x40c972
  40c984:	ret    0x722a
  40c987:	and    dh,dl
  40c989:	ret    
  40c98a:	fsub   DWORD PTR [ecx]
  40c98c:	jae    0x40c9b6
  40c98e:	out    dx,eax
  40c98f:	add    eax,0xb9eb13b2
  40c994:	repnz (bad) 
  40c996:	in     al,0x12
  40c998:	jns    0x40c92c
  40c99a:	sbb    ah,dh
  40c99c:	mov    bl,0xde
  40c99e:	sub    bl,BYTE PTR [edx+0x2b]
  40c9a1:	jg     0x40c953
  40c9a3:	mov    ch,0x92
  40c9a5:	mov    cl,0x1a
  40c9a7:	jnp    0x40c99b
  40c9a9:	mov    ecx,0xa2e99820
  40c9ae:	mov    esp,0x382eded4
  40c9b3:	mov    cl,0x91
  40c9b5:	inc    esi
  40c9b6:	jl     0x40c9df
  40c9b8:	ins    DWORD PTR es:[edi],dx
  40c9b9:	jnp    0x40c962
  40c9bb:	jno    0x40c945
  40c9bd:	add    al,0x8c
  40c9bf:	inc    esp
  40c9c0:	dec    esp
  40c9c1:	mov    ebx,0x52a30096
  40c9c6:	mov    eax,ds:0x7468e5cb
  40c9cb:	inc    esp
  40c9cc:	dec    edx
  40c9cd:	inc    edx
  40c9ce:	scas   al,BYTE PTR es:[edi]
  40c9cf:	in     al,0x7
  40c9d1:	pop    ds
  40c9d2:	call   0x2474d404
  40c9d7:	mov    WORD PTR [edx+ebx*2-0x29],?
  40c9db:	sub    dl,BYTE PTR [ebp-0x28d42d5c]
  40c9e1:	sahf   
  40c9e2:	xchg   DWORD PTR [edi+0x51273ac3],esp
  40c9e8:	rcl    DWORD PTR ds:0xcd1e9606,cl
  40c9ee:	into   
  40c9ef:	es inc eax
  40c9f1:	jle    0x40c9fb
  40c9f3:	jge    0x40c97b
  40c9f5:	xchg   ebp,eax
  40c9f6:	sbb    bh,BYTE PTR [edi]
  40c9f8:	and    BYTE PTR [ecx-0xeeb5a7b],ch
  40c9fe:	and    BYTE PTR [ebx-0x63],bl
  40ca01:	ret    0x93ec
  40ca04:	jecxz  0x40c98b
  40ca06:	sbb    eax,0x461df480
  40ca0b:	test   eax,0x579ab962
  40ca10:	rcl    DWORD PTR [ecx-0x78e44fa1],1
  40ca16:	jae    0x2405206a
  40ca1c:	cmp    esi,ebx
  40ca1e:	cmp    al,0xd9
  40ca20:	mov    esi,0xa6f7c3db
  40ca25:	retf   
  40ca26:	xchg   esi,eax
  40ca27:	sub    BYTE PTR [esp+ecx*8+0x3d470528],al
  40ca2e:	std    
  40ca2f:	in     eax,dx
  40ca30:	inc    esp
  40ca31:	sbb    BYTE PTR [esi-0x10],ah
  40ca34:	and    bh,ch
  40ca36:	ds clc 
  40ca38:	mov    eax,ds:0x25696b05
  40ca3d:	xchg   BYTE PTR [edx],bl
  40ca3f:	push   ecx
  40ca40:	sub    eax,0x208a3983
  40ca45:	and    DWORD PTR [edx+esi*4-0x3e45071e],0xffffffee
  40ca4d:	mov    esi,DWORD PTR [ecx]
  40ca4f:	adc    edi,DWORD PTR [edx+0x74b98dec]
  40ca55:	mov    ebp,0x5d879edf
  40ca5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca5c:	retf   
  40ca5d:	push   0x3
  40ca5f:	mov    al,0xc
  40ca61:	iret   
  40ca62:	popa   
  40ca63:	push   esi
  40ca64:	lock add DWORD PTR [ebp-0x7],edx
  40ca68:	push   esi
  40ca69:	and    eax,0x6ac8b5f6
  40ca6e:	push   ebx
  40ca6f:	and    eax,0x9958e6df
  40ca74:	xchg   esp,eax
  40ca75:	mov    dh,0xf6
  40ca77:	sbb    BYTE PTR [esi],ah
  40ca79:	push   ebp
  40ca7a:	rcr    BYTE PTR [ecx-0x7],1
  40ca7d:	adc    BYTE PTR [eax+0x6b3216cd],0x4c
  40ca84:	mov    esi,edx
  40ca86:	pop    eax
  40ca87:	mov    WORD PTR ds:0x692223df,cs
  40ca8d:	push   es
  40ca8e:	sahf   
  40ca8f:	pop    esi
  40ca90:	sub    ecx,esp
  40ca92:	sub    DWORD PTR [ebp-0x33],esi
  40ca95:	push   edi
  40ca96:	push   esp
  40ca97:	setge  dl
  40ca9a:	and    DWORD PTR [edi-0x225aa0b4],ebx
  40caa0:	out    dx,eax
  40caa1:	retf   
  40caa2:	(bad)  
  40caa3:	(bad)  
  40caa4:	mov    ebp,0x78b2a513
  40caa9:	fcom   DWORD PTR [edx+0x16]
  40caac:	in     al,dx
  40caad:	aas    
  40caae:	ret    
  40caaf:	jbe    0x40caff
  40cab1:	jnp    0x40cb31
  40cab3:	xor    edi,edx
  40cab5:	jno    0x40ca90
  40cab7:	imul   ebx,DWORD PTR [edx+0x69],0x30b429df
  40cabe:	stos   BYTE PTR es:[edi],al
  40cabf:	adc    bl,BYTE PTR [edi-0x43]
  40cac2:	out    dx,eax
  40cac3:	cld    
  40cac4:	retf   
  40cac5:	and    BYTE PTR [ebx+0x44023d7f],dl
  40cacb:	icebp  
  40cacc:	std    
  40cacd:	fs retf 
  40cacf:	sbb    al,0xe9
  40cad1:	mov    ah,0x14
  40cad3:	inc    edi
  40cad4:	pop    eax
  40cad5:	fisttp WORD PTR [ebx+0x53]
  40cad8:	mov    eax,0x7aef28d4
  40cadd:	imul   edi,DWORD PTR [edx],0x35
  40cae0:	daa    
  40cae1:	adc    BYTE PTR [ebx],dh
  40cae3:	push   ds
  40cae4:	in     al,dx
  40cae5:	fldenv [ecx+0x4a]
  40cae8:	jo     0x40cb07
  40caea:	adc    bh,BYTE PTR fs:[edx+0x135f6320]
  40caf1:	mov    ds:0xf6e0e35b,al
  40caf6:	aad    0xff
  40caf8:	std    
  40caf9:	sub    al,0xe1
  40cafb:	pusha  
  40cafc:	clc    
  40cafd:	pop    ss
  40cafe:	or     BYTE PTR [ebx+0x623e9019],0x2a
  40cb05:	shl    BYTE PTR [ebx],1
  40cb07:	push   ebp
  40cb08:	inc    ebp
  40cb09:	lea    esi,[edi+0x78]
  40cb0c:	ret    0x4f84
  40cb0f:	pop    eax
  40cb10:	add    DWORD PTR [ebx-0x79],eax
  40cb13:	dec    esi
  40cb14:	scas   al,BYTE PTR es:[edi]
  40cb15:	jecxz  0x40cb02
  40cb17:	pop    esp
  40cb18:	hlt    
  40cb19:	into   
  40cb1a:	push   edx
  40cb1b:	je     0x40cb59
  40cb1d:	xor    BYTE PTR [esi],ch
  40cb1f:	and    DWORD PTR [ebx-0x4a7fbc3],edi
  40cb25:	sub    ch,BYTE PTR [esi+0xf54c3ef]
  40cb2b:	lock adc al,0xda
  40cb2e:	push   ecx
  40cb2f:	in     al,0xa
  40cb31:	sub    DWORD PTR [esi-0x25],0xbcb9101c
  40cb38:	xchg   BYTE PTR [edx-0x5da03d1c],dl
  40cb3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3f:	and    al,0xff
  40cb41:	inc    ebp
  40cb42:	mov    esi,0x17bc8dd6
  40cb47:	popa   
  40cb48:	xchg   ebx,eax
  40cb49:	idiv   DWORD PTR [ecx+0x3b]
  40cb4c:	bound  esi,QWORD PTR [edx-0x11]
  40cb4f:	aam    0xfd
  40cb51:	mov    esp,0x261ea377
  40cb56:	adc    edx,eax
  40cb58:	or     al,0xc1
  40cb5a:	in     eax,dx
  40cb5b:	retf   0x9ed4
  40cb5e:	popa   
  40cb5f:	jbe    0x40cbc0
  40cb61:	pop    ds
  40cb62:	mov    esi,DWORD PTR [edi+edx*2+0x45]
  40cb66:	(bad)  
  40cb67:	rcr    BYTE PTR [edx-0x5f],1
  40cb6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb6b:	int3   
  40cb6c:	xor    eax,0x294b2909
  40cb71:	fcomp  st(4)
  40cb73:	popf   
  40cb74:	xor    al,0x9c
  40cb76:	pop    ds
  40cb77:	popa   
  40cb78:	rep outs dx,DWORD PTR ds:[esi]
  40cb7a:	mov    ecx,ebp
  40cb7c:	sbb    eax,0x92087795
  40cb81:	into   
  40cb82:	fnstcw WORD PTR [ebx]
  40cb84:	es cmp eax,0x9cca476d
  40cb8a:	pop    DWORD PTR [eax+0x15]
  40cb8d:	js     0x40cb58
  40cb8f:	leave  
  40cb90:	pop    edx
  40cb91:	mov    ecx,0x1821f9de
  40cb96:	sub    al,0x7c
  40cb98:	aas    
  40cb99:	ror    ch,0x68
  40cb9c:	mov    ch,0x21
  40cb9e:	sub    al,0xc6
  40cba0:	and    eax,0xe93712d1
  40cba5:	inc    esp
  40cba6:	je     0x40cb6a
  40cba8:	xlat   BYTE PTR ds:[ebx]
  40cba9:	mov    eax,0x3ddf284f
  40cbae:	or     bl,BYTE PTR [edx]
  40cbb0:	pop    es
  40cbb1:	je     0x40cb4b
  40cbb3:	lahf   
  40cbb4:	xor    ch,dh
  40cbb6:	mov    WORD PTR [eax],fs
  40cbb8:	mov    edx,0xae148050
  40cbbd:	inc    esi
  40cbbe:	sub    BYTE PTR [esi+0x6e30f02c],bl
  40cbc4:	cli    
  40cbc5:	sbb    al,dh
  40cbc7:	or     esp,DWORD PTR [ecx+0x2f9e846f]
  40cbcd:	data16 mov cl,0xe6
  40cbd0:	out    dx,eax
  40cbd1:	push   eax
  40cbd2:	cmp    BYTE PTR [ecx-0x44fb4f20],cl
  40cbd8:	cdq    
  40cbd9:	add    ebx,DWORD PTR [edx-0x62f3c038]
  40cbdf:	dec    esp
  40cbe0:	sub    DWORD PTR [esi-0x76101cef],esp
  40cbe6:	mov    dh,0xab
  40cbe8:	leave  
  40cbe9:	int3   
  40cbea:	mov    ebx,0x118b1de4
  40cbef:	ror    BYTE PTR [ebp+0x486ef78a],cl
  40cbf5:	mov    ah,0x74
  40cbf7:	retf   
  40cbf8:	mov    ch,0xce
  40cbfa:	js     0x40cbc8
  40cbfc:	mov    ecx,0xab5e9e32
  40cc01:	pop    ebx
  40cc02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc03:	and    DWORD PTR [eax+0x6d],esp
  40cc06:	adc    DWORD PTR [edx],0xb1aa4a3c
  40cc0c:	ins    DWORD PTR es:[edi],dx
  40cc0d:	(bad)  
  40cc0e:	out    dx,eax
  40cc0f:	mov    bh,0xb6
  40cc11:	ss lahf 
  40cc13:	ins    BYTE PTR es:[edi],dx
  40cc14:	sbb    dh,BYTE PTR [edx+eiz*2+0xf]
  40cc18:	mov    WORD PTR [edi+0x31],?
  40cc1b:	pop    ds
  40cc1c:	mov    cl,0x51
  40cc1e:	mov    bl,0x8f
  40cc20:	popa   
  40cc21:	daa    
  40cc22:	test   DWORD PTR [esi+edi*1+0x4cb503f6],0x8fad88f9
  40cc2d:	dec    eax
  40cc2e:	or     DWORD PTR [ecx+esi*8],edi
  40cc31:	mov    edx,0x63a5b903
  40cc36:	ret    
  40cc37:	mov    WORD PTR [ecx],fs
  40cc39:	or     ebp,DWORD PTR [ebx]
  40cc3b:	(bad)  
  40cc3c:	xor    al,0x44
  40cc3e:	(bad)  
  40cc3f:	pop    esi
  40cc40:	arpl   bp,dx
  40cc42:	out    0x79,eax
  40cc44:	jp     0x40cc68
  40cc46:	jle    0x40cca3
  40cc48:	xchg   ebp,eax
  40cc49:	inc    esi
  40cc4a:	mov    ebx,0xf534d0bc
  40cc4f:	sti    
  40cc50:	pop    ecx
  40cc51:	jmp    0x40cc28
  40cc53:	mov    edx,0xd7f125f8
  40cc58:	clc    
  40cc59:	lahf   
  40cc5a:	and    al,BYTE PTR [esi]
  40cc5c:	and    esp,DWORD PTR [esi+0x798a02b2]
  40cc62:	jo     0x40cc6b
  40cc64:	icebp  
  40cc65:	arpl   WORD PTR ds:0x2e0dfa0c,bx
  40cc6b:	sub    eax,0x2e32b7d5
  40cc70:	push   eax
  40cc71:	cli    
  40cc72:	cmp    eax,0xba9c0b62
  40cc77:	popa   
  40cc78:	lods   al,BYTE PTR ds:[esi]
  40cc79:	fidivr WORD PTR [ecx]
  40cc7b:	jp     0x40ccc0
  40cc7d:	popf   
  40cc7e:	sbb    eax,0x4a42dc6c
  40cc83:	mov    eax,0x5953c738
  40cc88:	shr    DWORD PTR [edx+0x62],1
  40cc8b:	add    eax,esp
  40cc8d:	mov    edi,0x1f90c9aa
  40cc92:	pop    esp
  40cc93:	ins    BYTE PTR es:[edi],dx
  40cc94:	mov    eax,ds:0x8fefe34d
  40cc99:	push   esi
  40cc9a:	xchg   ebp,eax
  40cc9b:	mov    ds:0x12c93a10,eax
  40cca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca1:	loopne 0x40cc63
  40cca3:	shl    BYTE PTR [edi-0x2b],0x3
  40cca7:	pop    eax
  40cca8:	xor    al,0x6
  40ccaa:	mov    al,ds:0xf2a40c4e
  40ccaf:	fimul  WORD PTR [edi-0x766e4bf2]
  40ccb5:	test   BYTE PTR [ebx-0x4a],0x8b
  40ccb9:	add    al,0x1d
  40ccbb:	or     eax,0x41c53b99
  40ccc0:	mov    esp,0x64627c89
  40ccc5:	mov    ds:0xf7cce501,eax
  40ccca:	mov    BYTE PTR [esi],bl
  40cccc:	(bad)  
  40cccd:	jp     0x40cd30
  40cccf:	push   edi
  40ccd0:	pop    eax
  40ccd1:	lods   al,BYTE PTR ds:[esi]
  40ccd2:	push   es
  40ccd3:	fsubp  st(6),st
  40ccd5:	jo     0x40ccfa
  40ccd7:	loope  0x40cc84
  40ccd9:	test   BYTE PTR [edi+0x2f],0x2c
  40ccdd:	jae    0x40ccca
  40ccdf:	mov    bh,0xcc
  40cce1:	call   0x68c6acb1
  40cce6:	add    ch,dl
  40cce8:	jle    0x40cd20
  40ccea:	scas   al,BYTE PTR es:[edi]
  40cceb:	cli    
  40ccec:	jmp    0x40cca3
  40ccee:	ja     0x40cd49
  40ccf0:	inc    esi
  40ccf1:	dec    eax
  40ccf2:	cmp    BYTE PTR [ecx+0x5b],0x51
  40ccf6:	or     al,0x9a
  40ccf8:	push   es
  40ccf9:	add    edx,DWORD PTR [ebx-0x6e7632a8]
  40ccff:	inc    ebp
  40cd00:	sbb    BYTE PTR [esi-0x4],ah
  40cd03:	mov    ecx,0xf214fd27
  40cd08:	arpl   WORD PTR [eax],cx
  40cd0a:	xchg   esi,eax
  40cd0b:	jecxz  0x40ccb5
  40cd0d:	in     eax,dx
  40cd0e:	mov    eax,ds:0xfbde57cf
  40cd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd14:	inc    edx
  40cd15:	enter  0x4356,0x36
  40cd19:	adc    ch,ah
  40cd1b:	mov    ebp,0xf13979a1
  40cd20:	ds or  ecx,DWORD PTR gs:0x46a9e242
  40cd28:	int3   
  40cd29:	jl     0x40cd9c
  40cd2b:	jns    0x40cd35
  40cd2d:	and    DWORD PTR [ecx+0x20fdc71c],ecx
  40cd33:	ffree  st(0)
  40cd35:	push   eax
  40cd36:	js     0x40cdaa
  40cd38:	mov    al,ds:0xa95f10b8
  40cd3d:	mov    ah,0xef
  40cd3f:	pop    ebp
  40cd40:	dec    ebp
  40cd41:	ja     0x40cd13
  40cd43:	arpl   WORD PTR [esi+0x19f6ba8b],si
  40cd49:	inc    esp
  40cd4a:	adc    ch,BYTE PTR [ebp-0x5e]
  40cd4d:	jne    0x40cdad
  40cd4f:	es test eax,0x84f40e06
  40cd55:	push   edi
  40cd56:	hlt    
  40cd57:	ror    BYTE PTR [ebx-0x5a679b42],cl
  40cd5d:	mov    ah,0xde
  40cd5f:	ja     0x40cd81
  40cd61:	call   0x9d:0xabb8a26e
  40cd68:	(bad)  
  40cd69:	in     al,0xb2
  40cd6b:	and    edx,DWORD PTR [esi+0x6d8ebe51]
  40cd71:	adc    ah,BYTE PTR [ebx+0x71]
  40cd74:	mov    bl,0x5c
  40cd76:	mov    dh,0x6
  40cd78:	nop
  40cd79:	or     ah,BYTE PTR ds:0x71dfadf0
  40cd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd80:	mov    ebp,0x1bf10d2d
  40cd85:	sub    ebp,DWORD PTR [ebx]
  40cd87:	imul   DWORD PTR [ebp-0x20]
  40cd8a:	or     edx,DWORD PTR [ecx+0x7d091272]
  40cd90:	lds    esi,FWORD PTR [ebx]
  40cd92:	or     ebp,DWORD PTR [ecx+0x5c]
  40cd95:	into   
  40cd96:	jecxz  0x40cd82
  40cd98:	jp     0x40ce14
  40cd9a:	mov    eax,ds:0x7306fc62
  40cd9f:	dec    ebp
  40cda0:	call   0x1c7f3720
  40cda5:	mov    esp,esp
  40cda7:	ins    BYTE PTR es:[edi],dx
  40cda8:	mov    ds:0x48b8eb9b,eax
  40cdad:	mov    ah,0x12
  40cdaf:	aad    0xd2
  40cdb1:	pop    ds
  40cdb2:	ins    DWORD PTR es:[edi],dx
  40cdb3:	hlt    
  40cdb4:	lea    edx,[edi-0x38]
  40cdb7:	icebp  
  40cdb8:	mov    eax,0x71cdd63d
  40cdbd:	in     eax,dx
  40cdbe:	add    cl,bh
  40cdc0:	inc    ecx
  40cdc1:	push   0xffffffac
  40cdc3:	cmp    eax,0xa423a601
  40cdc8:	sub    al,0x88
  40cdca:	push   ss
  40cdcb:	jnp    0x40cdfd
  40cdcd:	xor    al,0x77
  40cdcf:	nop
  40cdd0:	jg     0x40ce42
  40cdd2:	dec    ebp
  40cdd3:	or     eax,0x8039c440
  40cdd8:	dec    ecx
  40cdd9:	add    BYTE PTR [edx-0x40cdff2],dl
  40cddf:	xchg   edx,eax
  40cde0:	xor    BYTE PTR [eax],al
  40cde2:	cmp    ecx,edx
  40cde4:	imul   edx,DWORD PTR [edx],0x1b
  40cde7:	popa   
  40cde8:	imul   edx,ebp,0xffffffb5
  40cdeb:	fs aaa 
  40cded:	jne    0x40cdcb
  40cdef:	jbe    0x40ce4f
  40cdf1:	push   es
  40cdf2:	in     al,0xe4
  40cdf4:	cli    
  40cdf5:	cmp    eax,0xc1291d0b
  40cdfa:	mov    ah,0x24
  40cdfc:	or     esp,DWORD PTR [esi+ebp*4-0x4d]
  40ce00:	and    eax,0x73c4238c
  40ce05:	sbb    esi,DWORD PTR [ecx-0x6cb6cdaa]
  40ce0b:	mov    esi,0xfcfc974b
  40ce10:	or     edx,DWORD PTR [edx+0x3b]
  40ce13:	(bad)  
  40ce14:	mov    ds:0xca85a914,eax
  40ce19:	dec    ecx
  40ce1a:	es enter 0xf4af,0x67
  40ce1f:	inc    BYTE PTR [eax-0xf]
  40ce22:	sub    dl,BYTE PTR [ebp-0x2dadb364]
  40ce28:	aad    0x4
  40ce2a:	cmp    al,0x7f
  40ce2c:	js     0x40ce71
  40ce2e:	xchg   esi,eax
  40ce2f:	xor    eax,ebx
  40ce31:	aaa    
  40ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce33:	gs adc edx,0xffffffae
  40ce37:	adc    edi,edi
  40ce39:	test   eax,0x2a5acf29
  40ce3e:	mov    bl,0x4f
  40ce40:	daa    
  40ce41:	in     al,0x2b
  40ce43:	inc    esi
  40ce44:	ins    BYTE PTR es:[edi],dx
  40ce45:	xchg   ecx,eax
  40ce46:	mov    ah,0x65
  40ce48:	mov    al,ds:0xc2e3caa4
  40ce4d:	push   0xffffff8c
  40ce4f:	(bad)  
  40ce50:	cmc    
  40ce51:	pusha  
  40ce52:	repz pop ecx
  40ce54:	jl     0x40cdf8
  40ce56:	int    0x94
  40ce58:	cmp    DWORD PTR [ecx-0x4ec478e3],0x506c26bd
  40ce62:	stc    
  40ce63:	and    al,0x7f
  40ce65:	gs pop es
  40ce67:	xor    bl,BYTE PTR [esi-0x4d]
  40ce6a:	repnz inc esi
  40ce6c:	pop    ss
  40ce6d:	dec    ebx
  40ce6e:	mov    ebx,0x2a960209
  40ce73:	or     BYTE PTR [esi+edx*4+0x9],cl
  40ce77:	enter  0x42c1,0xce
  40ce7b:	push   ss
  40ce7c:	and    DWORD PTR [ebp-0xe],ebx
  40ce7f:	retf   
  40ce80:	lds    eax,FWORD PTR [edx+0x62]
  40ce83:	sbb    edi,DWORD PTR [ecx+0x6159a276]
  40ce89:	jo     0x40ce8a
  40ce8b:	popf   
  40ce8c:	ret    0x9866
  40ce8f:	sub    eax,0xbc08ae1a
  40ce94:	jne    0x40ce26
  40ce96:	mov    ss,WORD PTR [edi+0xb]
  40ce99:	jl     0x40ce6a
  40ce9b:	pop    edi
  40ce9c:	cld    
  40ce9d:	sbb    ah,BYTE PTR [edi]
  40ce9f:	cvtps2pd xmm2,xmm5
  40cea2:	shl    DWORD PTR [esi+0xb],0x5b
  40cea6:	add    DWORD PTR ds:0xe4e0324,edx
  40ceac:	inc    edx
  40cead:	add    BYTE PTR [edi-0x4ae1a2e4],dh
  40ceb3:	clc    
  40ceb4:	stc    
  40ceb5:	fwait
  40ceb6:	and    cl,BYTE PTR [edi]
  40ceb8:	cmp    bh,BYTE PTR [ecx]
  40ceba:	fnsave cs:[edi+edx*1+0x5a]
  40cebf:	mov    eax,0x7909c624
  40cec4:	fstp   DWORD PTR [edi]
  40cec6:	in     eax,0xf9
  40cec8:	or     DWORD PTR [eax+0x3c3bc30e],0x1a
  40cecf:	jge    0x40ceb1
  40ced1:	(bad)  
  40ced2:	push   ds
  40ced3:	retf   
  40ced4:	(bad)  
  40ced5:	aad    0x2b
  40ced7:	inc    edi
  40ced8:	cs cmp esi,ecx
  40cedb:	xchg   BYTE PTR [edx-0x2b6de5ad],ah
  40cee1:	mov    DWORD PTR [ebp+esi*2-0x1a2282d2],ecx
  40cee8:	dec    esi
  40cee9:	jecxz  0x40cefb
  40ceeb:	add    edi,ebx
  40ceed:	push   edi
  40ceee:	inc    ecx
  40ceef:	cmp    ebp,ecx
  40cef1:	repnz mov WORD PTR [edi+0x29],fs
  40cef5:	mov    WORD PTR [edx-0xcb7fdcc],cs
  40cefb:	ins    BYTE PTR es:[edi],dx
  40cefc:	(bad)  
  40cefd:	clc    
  40cefe:	or     edi,DWORD PTR [edi-0x46cf940d]
  40cf04:	mov    esp,0x8e2bf57f
  40cf09:	loopne 0x40cf71
  40cf0b:	fst    DWORD PTR [edi+edx*8-0xd]
  40cf0f:	adc    BYTE PTR [esi+0x53],dh
  40cf12:	in     eax,0x6a
  40cf14:	mov    eax,0x536b28c6
  40cf19:	adc    esp,DWORD PTR [ecx-0x3f]
  40cf1c:	repnz push ebp
  40cf1e:	mov    eax,ds:0x55df7077
  40cf23:	and    BYTE PTR [edx-0x660c876b],bl
  40cf29:	mov    ah,0xf8
  40cf2b:	ret    
  40cf2c:	rcl    BYTE PTR ds:0x64ee2a6f,cl
  40cf32:	mov    BYTE PTR [esi-0x4bf0d700],al
  40cf38:	push   esp
  40cf39:	inc    edx
  40cf3a:	lods   eax,DWORD PTR ds:[esi]
  40cf3b:	pop    eax
  40cf3c:	lea    edi,[ecx+0x2a33883a]
  40cf42:	or     DWORD PTR [eax+edx*1+0x24b7db93],ebx
  40cf49:	fdivrp st(3),st
  40cf4b:	jp     0x40cf9e
  40cf4d:	or     eax,0x695c055e
  40cf52:	(bad)  
  40cf53:	jge    0x40cf5a
  40cf55:	jl     0x40cfb8
  40cf57:	jno    0x40cf48
  40cf59:	outs   dx,DWORD PTR ds:[esi]
  40cf5a:	xchg   DWORD PTR [ebp-0xe1140f8],edi
  40cf60:	ins    BYTE PTR es:[edi],dx
  40cf61:	iret   
  40cf62:	mov    ds:0xe57570ff,al
  40cf67:	jge    0x40cf89
  40cf69:	lock shl BYTE PTR [eax-0x51],1
  40cf6d:	and    DWORD PTR [ecx-0x49a44faa],eax
  40cf73:	dec    edi
  40cf74:	dec    edx
  40cf75:	dec    esp
  40cf76:	(bad)  
  40cf77:	jno    0x40cf87
  40cf79:	mov    bl,0x60
  40cf7b:	mov    dl,0xdf
  40cf7d:	(bad)  
  40cf7e:	out    dx,eax
  40cf7f:	jae    0x40cf97
  40cf81:	add    eax,0x2f555e3e
  40cf86:	push   ss
  40cf87:	xor    dh,al
  40cf89:	xchg   DWORD PTR [ebx],ebx
  40cf8b:	and    eax,0x3484cabb
  40cf90:	cmc    
  40cf91:	push   es
  40cf92:	cmp    DWORD PTR [ebp+0x20448705],esp
  40cf98:	mov    edi,0x21e5edae
  40cf9d:	cmp    cl,0x73
  40cfa0:	nop    DWORD PTR [ebx+edx*8]
  40cfa4:	lods   eax,DWORD PTR ds:[esi]
  40cfa5:	or     DWORD PTR fs:[edi-0x581d3ac1],ebp
  40cfac:	dec    eax
  40cfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfae:	pop    esp
  40cfaf:	push   edx
  40cfb0:	in     eax,0xff
  40cfb2:	mov    bh,0x1f
  40cfb4:	and    al,0xec
  40cfb6:	sub    al,0xd2
  40cfb8:	lods   al,BYTE PTR ds:[esi]
  40cfb9:	or     ah,BYTE PTR [ecx-0x56]
  40cfbc:	outs   dx,DWORD PTR ds:[esi]
  40cfbd:	(bad)  
  40cfbe:	jne    0x40cff3
  40cfc0:	jmp    0xb46011e1
  40cfc5:	bound  edi,QWORD PTR [esi-0x3988e7b3]
  40cfcb:	js     0x40cfb9
  40cfcd:	retf   
  40cfce:	call   0x6065:0xac42cc92
  40cfd5:	mov    gs,WORD PTR [esi+edx*1-0x230a67fa]
  40cfdc:	div    DWORD PTR [edi]
  40cfde:	mov    esp,0x87db01e8
  40cfe3:	pop    edi
  40cfe4:	fdivr  QWORD PTR [esi-0xd]
  40cfe7:	(bad)  
  40cfe8:	mov    dl,0x1f
  40cfea:	out    dx,eax
  40cfeb:	push   0xf96fde21
  40cff0:	icebp  
  40cff1:	das    
  40cff2:	mov    ebp,0xcde843c4
  40cff7:	mov    cs,WORD PTR [ecx+0x6da2ab96]
  40cffd:	and    DWORD PTR [ebx-0x4bd964e7],ebp
  40d003:	mov    ebp,0x40e8861c
  40d008:	gs in  al,0xc8
  40d00b:	dec    ebp
  40d00c:	mov    ebx,0xd26b79bd
  40d011:	xchg   ebx,eax
  40d012:	repz and eax,0xa8ee0c10
  40d018:	xchg   BYTE PTR [eax],bh
  40d01a:	push   es
  40d01b:	jnp    0x40d095
  40d01d:	mov    al,0xb4
  40d01f:	js     0x40d00c
  40d021:	icebp  
  40d022:	and    eax,0xf3cc707d
  40d027:	mov    eax,0x999e8109
  40d02c:	mov    ds:0x96a4c4d1,al
  40d031:	mov    ebp,0x1fa3f45c
  40d036:	or     al,0x7f
  40d038:	or     esi,ebx
  40d03a:	inc    eax
  40d03b:	out    dx,eax
  40d03c:	push   ds
  40d03d:	mov    bh,0x50
  40d03f:	hlt    
  40d040:	pop    esp
  40d041:	(bad)  
  40d042:	stc    
  40d043:	aas    
  40d044:	mov    al,ds:0x4abb3e19
  40d049:	xchg   edx,eax
  40d04a:	fisubr DWORD PTR [ebp+0x1d]
  40d04d:	xor    ebp,DWORD PTR [ecx]
  40d04f:	lock inc eax
  40d051:	adc    BYTE PTR [esi+0x70047305],al
  40d057:	lock adc eax,0xb30e6917
  40d05d:	or     ecx,DWORD PTR [ecx+0x6d]
  40d060:	and    ah,BYTE PTR [ecx]
  40d062:	xlat   BYTE PTR ds:[ebx]
  40d063:	mov    cl,0x53
  40d065:	lds    esi,FWORD PTR ds:0x26456915
  40d06b:	aad    0x71
  40d06d:	pusha  
  40d06e:	icebp  
  40d06f:	push   ds
  40d070:	sub    edx,ecx
  40d072:	jmp    0x40d0bc
  40d074:	les    esp,FWORD PTR ds:0x8868c85a
  40d07a:	dec    ebp
  40d07b:	push   es
  40d07c:	mov    ebx,0xe1464d00
  40d081:	xchg   BYTE PTR [ebp-0x12935a34],dl
  40d087:	test   eax,0xea9b647e
  40d08c:	clc    
  40d08d:	ins    DWORD PTR es:[edi],dx
  40d08e:	fldenv [ebp-0x15]
  40d091:	cwde   
  40d092:	jne    0x40d093
  40d094:	pop    ebx
  40d095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d096:	test   DWORD PTR [esi-0x58dc918a],esp
  40d09c:	test   eax,0xd7836b18
  40d0a1:	xor    esp,edx
  40d0a3:	(bad)
  40d0a7:	sub    edi,DWORD PTR [ebp-0x6e]
  40d0aa:	out    0x4d,eax
  40d0ac:	out    dx,al
  40d0ad:	enter  0x2dd5,0x51
  40d0b1:	and    bl,BYTE PTR [ebx+0x3e]
  40d0b4:	jo     0x40d06e
  40d0b6:	out    0xee,eax
  40d0b8:	les    edx,FWORD PTR [esi-0x3b]
  40d0bb:	xchg   edx,eax
  40d0bc:	dec    ecx
  40d0bd:	push   esp
  40d0be:	inc    esi
  40d0bf:	retf   0x2671
  40d0c2:	imul   edx,DWORD PTR [esi],0xffffffd2
  40d0c5:	or     al,0x7d
  40d0c7:	cmp    esi,DWORD PTR cs:[edi]
  40d0ca:	sahf   
  40d0cb:	fadd   QWORD PTR [ebx+ecx*2]
  40d0ce:	push   eax
  40d0cf:	cdq    
  40d0d0:	jmp    DWORD PTR [ebx+0x50]
  40d0d3:	sbb    al,0x1e
  40d0d5:	dec    edi
  40d0d6:	dec    eax
  40d0d7:	push   esp
  40d0d8:	popf   
  40d0d9:	adc    DWORD PTR [edi-0x2f71f50a],ebx
  40d0df:	(bad)  
  40d0e0:	fdiv   DWORD PTR [eax-0x79]
  40d0e3:	dec    esi
  40d0e4:	out    0xfc,al
  40d0e6:	push   ebx
  40d0e7:	mov    dh,0x50
  40d0e9:	sbb    eax,0xc3aa5cf2
  40d0ee:	xchg   BYTE PTR [esp+ebp*4+0x23],ah
  40d0f2:	loopne 0x40d09b
  40d0f4:	clc    
  40d0f5:	jae    0x40d085
  40d0f7:	fsub   st,st(3)
  40d0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0fa:	jge    0x40d0e3
  40d0fc:	dec    ebp
  40d0fd:	xor    ch,BYTE PTR [ecx+0x23cab115]
  40d103:	ins    BYTE PTR es:[edi],dx
  40d104:	test   DWORD PTR [edi-0x6a],edx
  40d107:	sahf   
  40d108:	jno    0x40d14a
  40d10a:	jp     0x40d164
  40d10c:	retf   
  40d10d:	fcomi  st,st(6)
  40d10f:	(bad)  
  40d111:	loopne 0x40d0c5
  40d113:	popf   
  40d114:	xor    ah,al
  40d116:	and    eax,0x3fd4f010
  40d11b:	(bad)  
  40d11c:	push   eax
  40d11d:	out    0xa0,eax
  40d11f:	jle    0x40d10e
  40d121:	in     eax,0x6a
  40d123:	icebp  
  40d124:	mov    edx,0x76437ef0
  40d129:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d12b:	repz les eax,FWORD PTR [edi-0x33d90006]
  40d132:	cmc    
  40d133:	dec    esp
  40d134:	iret   
  40d135:	jmp    0x40d0d6
  40d137:	mov    eax,0x7797f7ea
  40d13c:	scas   al,BYTE PTR es:[edi]
  40d13d:	add    DWORD PTR [ecx+edi*1],ebp
  40d140:	or     al,0x58
  40d142:	lods   eax,DWORD PTR ds:[esi]
  40d143:	push   ebp
  40d144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d145:	in     al,dx
  40d146:	dec    ecx
  40d147:	dec    esi
  40d148:	rcl    DWORD PTR [ecx+0x61],cl
  40d14b:	push   0xb29e933b
  40d150:	ss xchg ebp,eax
  40d152:	mov    al,0x8d
  40d154:	mov    esi,0xcdb347a
  40d159:	cli    
  40d15a:	add    al,ah
  40d15c:	add    eax,0x5a148d85
  40d161:	lahf   
  40d162:	ins    BYTE PTR es:[edi],dx
  40d163:	fisttp QWORD PTR [edx-0x3598c4c5]
  40d169:	jmp    0xb70972d6
  40d16e:	sbb    BYTE PTR [edi],ch
  40d170:	push   ebx
  40d171:	push   edi
  40d172:	push   edx
  40d173:	jnp    0x40d1f2
  40d175:	mov    DWORD PTR [edx+0x23],esi
  40d178:	test   bl,bl
  40d17a:	pop    edx
  40d17b:	sub    bl,al
  40d17d:	add    eax,0x3957f163
  40d182:	xor    eax,0x22b3e948
  40d187:	ficom  WORD PTR [esi+0x1c]
  40d18a:	pop    ebx
  40d18b:	test   eax,0xdddbcfc1
  40d190:	popf   
  40d191:	xchg   esp,eax
  40d192:	xchg   ebx,eax
  40d193:	pop    esp
  40d194:	repz sti 
  40d196:	fwait
  40d197:	call   0xaed4:0x78415661
  40d19e:	les    edi,FWORD PTR [esi+0x79]
  40d1a1:	sar    DWORD PTR [ebp+0x11],cl
  40d1a4:	push   esi
  40d1a5:	stc    
  40d1a6:	xlat   BYTE PTR ds:[ebx]
  40d1a7:	stc    
  40d1a8:	stos   BYTE PTR es:[edi],al
  40d1a9:	fiadd  DWORD PTR [edx-0x788834cb]
  40d1af:	fwait
  40d1b0:	dec    esi
  40d1b1:	call   0xe2a2c8a6
  40d1b6:	push   ebx
  40d1b7:	ds pusha 
  40d1b9:	(bad)  
  40d1bb:	xor    eax,0xe56367ff
  40d1c0:	inc    esp
  40d1c1:	in     al,dx
  40d1c2:	int    0x5f
  40d1c4:	adc    DWORD PTR [edx-0x13],0xc284e758
  40d1cb:	int    0x75
  40d1cd:	js     0x40d185
  40d1cf:	imul   edx,DWORD PTR [esi-0x69],0xe65f6a2a
  40d1d6:	or     ecx,DWORD PTR [ecx+0x2750ab06]
  40d1dc:	and    al,0x81
  40d1de:	mov    esi,0xec465a0c
  40d1e3:	lock adc edi,edx
  40d1e6:	daa    
  40d1e7:	aaa    
  40d1e8:	ss (bad) 
  40d1ea:	cmc    
  40d1eb:	int3   
  40d1ec:	adc    DWORD PTR [edi-0x691d6de6],0x2731a503
  40d1f6:	xor    DWORD PTR [esp+eax*8],edi
  40d1f9:	dec    ecx
  40d1fa:	sub    eax,esi
  40d1fc:	(bad)  
  40d1fd:	(bad)  
  40d1ff:	mov    eax,ds:0x2b6a461b
  40d204:	pop    edx
  40d205:	in     eax,0x95
  40d207:	push   ds
  40d208:	int3   
  40d209:	aad    0xd9
  40d20b:	das    
  40d20c:	mov    ch,0x3b
  40d20e:	jecxz  0x40d1b2
  40d210:	push   cs
  40d211:	aad    0xb5
  40d213:	adc    edi,DWORD PTR [edi+0x2a87fee4]
  40d219:	adc    DWORD PTR [eax-0x73],edi
  40d21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21d:	pop    eax
  40d21e:	repz cmp DWORD PTR [ebp+0x62],edi
  40d222:	fimul  WORD PTR [ecx+0x4e]
  40d225:	push   0xe
  40d227:	cmp    al,0xff
  40d229:	or     edx,ebx
  40d22b:	pop    ds
  40d22c:	daa    
  40d22d:	mov    esp,0x1220ee5a
  40d232:	mov    fs,WORD PTR [esi]
  40d234:	cmp    eax,0x34d67956
  40d239:	mov    ebp,0x2bd36cee
  40d23e:	sbb    BYTE PTR [edx+0x19],0x11
  40d242:	clc    
  40d243:	pop    ss
  40d244:	sbb    eax,0x4f86ed0b
  40d249:	sar    BYTE PTR [eax],1
  40d24b:	imul   edx,DWORD PTR [esi],0x43410378
  40d251:	and    bl,BYTE PTR [eax-0x5a0c413e]
  40d257:	ds inc ebx
  40d259:	xchg   edi,eax
  40d25a:	or     eax,0x5ef44abf
  40d25f:	addr16 addr16 cmp di,si
  40d264:	dec    ebx
  40d265:	mov    esi,0x557e106e
  40d26a:	xchg   DWORD PTR [edi+0x25449d91],ecx
  40d270:	es popf 
  40d272:	xchg   ebp,eax
  40d274:	mov    DWORD PTR [ebp+esi*4-0x5],ecx
  40d278:	cmp    BYTE PTR [edx-0x1ad1ef83],cl
  40d27e:	ins    BYTE PTR es:[edi],dx
  40d27f:	call   0x2e77:0x8ba0d00a
  40d286:	call   0x40a11fe8
  40d28b:	in     eax,0x50
  40d28d:	or     DWORD PTR [ebx+0x20],esp
  40d290:	adc    BYTE PTR [ebx-0x49dd464e],al
  40d296:	ja     0x40d276
  40d298:	push   eax
  40d299:	sub    DWORD PTR [edx+ecx*8+0x9f6f3c6],eax
  40d2a0:	adc    al,0x2d
  40d2a2:	jp     0x40d2c9
  40d2a4:	fild   DWORD PTR [ebx+edi*4-0x71]
  40d2a8:	aam    0x1f
  40d2aa:	or     DWORD PTR [eax+0x3c],0xffffffe3
  40d2ae:	mov    al,ds:0x129ae170
  40d2b3:	sti    
  40d2b4:	mov    es,WORD PTR [esi]
  40d2b6:	mov    edx,0x3031613
  40d2bb:	push   esi
  40d2bc:	pop    edx
  40d2bd:	mov    ds:0x64632f93,al
  40d2c2:	inc    edi
  40d2c3:	fisttp DWORD PTR [edi+0x59cb280a]
  40d2c9:	push   ecx
  40d2ca:	in     eax,dx
  40d2cb:	std    
  40d2cc:	dec    eax
  40d2cd:	mov    ecx,0x7377dfef
  40d2d2:	sbb    DWORD PTR [eax+esi*4-0x2e],ebx
  40d2d6:	ror    esp,1
  40d2d8:	and    ah,BYTE PTR [ecx-0x3b]
  40d2db:	ins    BYTE PTR es:[edi],dx
  40d2dc:	xor    eax,0xb44f9613
  40d2e1:	test   al,0x9e
  40d2e3:	pusha  
  40d2e4:	mov    ds:0xb17f7a4e,al
  40d2e9:	ret    
  40d2ea:	pop    eax
  40d2eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ec:	pop    eax
  40d2ed:	dec    ebx
  40d2ee:	pushf  
  40d2ef:	pop    esi
  40d2f0:	push   ds
  40d2f1:	test   DWORD PTR [esi-0x2c6396f3],esp
  40d2f7:	hlt    
  40d2f8:	js     0x40d2be
  40d2fa:	mov    eax,0x5a54d618
  40d2ff:	inc    eax
  40d300:	loope  0x40d2df
  40d302:	aas    
  40d303:	es (bad) 
  40d305:	jle    0x40d293
  40d307:	inc    edi
  40d308:	stos   BYTE PTR es:[edi],al
  40d309:	jl     0x40d2de
  40d30b:	xor    BYTE PTR [esi+0x65],bh
  40d30e:	xchg   esp,eax
  40d30f:	ins    BYTE PTR es:[edi],dx
  40d310:	daa    
  40d311:	outs   dx,DWORD PTR ds:[esi]
  40d312:	fistp  WORD PTR [eax+0x20]
  40d315:	sub    ebx,DWORD PTR [ebx]
  40d317:	das    
  40d318:	sub    edi,DWORD PTR [edi]
  40d31a:	stos   BYTE PTR es:[edi],al
  40d31b:	pop    edx
  40d31c:	adc    al,0x35
  40d31e:	mov    bl,0x2c
  40d320:	adc    al,BYTE PTR [edi-0x1c]
  40d323:	dec    ecx
  40d324:	cmp    eax,0x33bbe66
  40d329:	pop    es
  40d32a:	xchg   esi,eax
  40d32b:	lods   al,BYTE PTR ds:[esi]
  40d32c:	add    DWORD PTR [esi+0x58],ebp
  40d32f:	mov    edx,0xd734fde2
  40d334:	pop    es
  40d335:	add    eax,0x4ecb849e
  40d33a:	and    esp,DWORD PTR [ebp+0x49]
  40d33d:	pop    ds
  40d33e:	fcomp  QWORD PTR [esi]
  40d340:	gs pusha 
  40d342:	sbb    DWORD PTR [ecx+0x18],edx
  40d345:	inc    esi
  40d346:	imul   edx,esi,0x10
  40d349:	mov    cs,WORD PTR [ecx-0x78]
  40d34c:	and    DWORD PTR [edi-0x2b],eax
  40d34f:	and    ah,BYTE PTR [ebx-0x576c43eb]
  40d355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d356:	jecxz  0x40d3c0
  40d358:	cmc    
  40d359:	add    esp,DWORD PTR [ebx+0x13]
  40d35c:	retf   0x5b41
  40d35f:	call   0x50cc0243
  40d364:	ins    DWORD PTR es:[edi],dx
  40d365:	xor    bh,BYTE PTR [edi+edx*2]
  40d368:	xlat   BYTE PTR ds:[ebx]
  40d369:	cld    
  40d36a:	outs   dx,DWORD PTR ds:[esi]
  40d36b:	bound  esi,QWORD PTR [esi-0x68b1af2d]
  40d371:	inc    esp
  40d372:	ds leave 
  40d374:	and    bh,BYTE PTR [ebx]
  40d376:	cli    
  40d377:	jo     0x40d3df
  40d379:	cwde   
  40d37a:	or     eax,0x2e3ce539
  40d37f:	adc    ebp,DWORD PTR [ecx-0x6c]
  40d382:	out    0xe5,al
  40d384:	jl     0x40d385
  40d386:	jg     0x40d341
  40d388:	rcr    ebp,0x7b
  40d38b:	mov    cl,0x71
  40d38d:	test   DWORD PTR [esi+0x628d929d],esp
  40d393:	push   ecx
  40d394:	cmp    ebp,DWORD PTR [eax+0x1e7bcd18]
  40d39a:	das    
  40d39b:	adc    BYTE PTR [esi-0x1c317c31],bl
  40d3a1:	daa    
  40d3a2:	adc    esp,DWORD PTR [edx+edi*1+0x38]
  40d3a6:	and    DWORD PTR [edx-0x8],ebx
  40d3a9:	cmp    DWORD PTR [esi+0x3d74a989],eax
  40d3af:	xor    eax,0x589afee8
  40d3b4:	fnsetpm(287 only) 
  40d3b6:	cwde   
  40d3b7:	mov    cs,eax
  40d3b9:	(bad)  
  40d3ba:	fisubr WORD PTR [ecx-0x22]
  40d3bd:	adc    dl,al
  40d3bf:	cmc    
  40d3c0:	lds    ebx,FWORD PTR [esi-0x64]
  40d3c3:	cmp    BYTE PTR [ecx-0x3b],ch
  40d3c6:	dec    esi
  40d3c7:	mov    ss,WORD PTR [edx]
  40d3c9:	push   ecx
  40d3ca:	push   edi
  40d3cb:	or     eax,0xca014d7d
  40d3d0:	xor    DWORD PTR [esi-0x19],ebp
  40d3d3:	sbb    BYTE PTR [ebx+0x23d37d3c],0xaa
  40d3da:	mov    cs,WORD PTR [ecx+0x3e]
  40d3dd:	outs   dx,DWORD PTR ds:[esi]
  40d3de:	stos   BYTE PTR es:[edi],al
  40d3df:	inc    esi
  40d3e0:	aaa    
  40d3e1:	fdiv   DWORD PTR [ecx-0x41]
  40d3e4:	stos   BYTE PTR es:[edi],al
  40d3e5:	xchg   esp,eax
  40d3e6:	clc    
  40d3e7:	mov    edi,0x39758fcf
  40d3ec:	and    eax,0xd3a8d932
  40d3f1:	daa    
  40d3f2:	ror    BYTE PTR [edi],0x6d
  40d3f5:	adc    edi,0xe1ac2071
  40d3fb:	icebp  
  40d3fc:	dec    edx
  40d3fd:	sbb    ecx,ecx
  40d3ff:	loop   0x40d3bb
  40d401:	call   0xa0c9:0xb60cc38d
  40d408:	aas    
  40d409:	mov    ch,0x8c
  40d40b:	clc    
  40d40c:	mov    WORD PTR [eax-0x7c497a05],es
  40d412:	ss mov dl,0x6e
  40d415:	pop    ss
  40d416:	and    bh,BYTE PTR [edi]
  40d418:	push   eax
  40d419:	mov    cs,WORD PTR [ebx+ecx*1+0x4e]
  40d41d:	cmc    
  40d41e:	xchg   ecx,eax
  40d41f:	dec    ebx
  40d420:	xchg   ecx,ebx
  40d422:	out    dx,al
  40d423:	outs   dx,BYTE PTR gs:[esi]
  40d425:	mov    eax,ds:0x19a06ba9
  40d42a:	aam    0x27
  40d42c:	cmp    al,0x66
  40d42e:	and    eax,0x9b49765
  40d433:	fs lock stos DWORD PTR es:[edi],eax
  40d436:	pop    edi
  40d437:	jp     0x40d412
  40d439:	mov    esp,0xf58da7a9
  40d43e:	adc    bh,BYTE PTR [esi-0x58dd7277]
  40d444:	push   edx
  40d445:	mov    al,0x58
  40d447:	shl    BYTE PTR [edx],cl
  40d449:	leave  
  40d44a:	popa   
  40d44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44c:	pop    ds
  40d44d:	stos   DWORD PTR es:[edi],eax
  40d44e:	test   eax,0xac2b66a4
  40d453:	sbb    eax,0x61d95554
  40d458:	add    edx,DWORD PTR [eax+0x2ff1cf6c]
  40d45e:	repnz in al,0x88
  40d461:	rcr    bl,0x60
  40d464:	movd   DWORD PTR [ebx+eiz*1+0x3d],mm4
  40d469:	dec    esp
  40d46a:	xchg   ebp,eax
  40d46b:	jle    0x40d4e3
  40d46d:	and    eax,0x29b6e68b
  40d472:	push   0x60
  40d474:	stos   BYTE PTR es:[edi],al
  40d475:	xor    DWORD PTR ds:0x7dfbc021,ecx
  40d47b:	cli    
  40d47c:	mov    edx,0x86a3f619
  40d482:	xlat   BYTE PTR ds:[ebx]
  40d483:	add    esi,DWORD PTR [edi+ebx*8-0x198b098c]
  40d48a:	stc    
  40d48b:	and    BYTE PTR [ebx],bl
  40d48d:	loop   0x40d4cf
  40d48f:	mov    WORD PTR [edi],fs
  40d491:	or     BYTE PTR ss:[edi-0x4e],0xe2
  40d496:	fwait
  40d497:	repz xor DWORD PTR [edi],ebx
  40d49a:	xor    dl,BYTE PTR [edx]
  40d49c:	test   eax,0x90832448
  40d4a1:	sti    
  40d4a2:	ins    BYTE PTR es:[edi],dx
  40d4a3:	rol    BYTE PTR [esi+edi*1-0x6c],cl
  40d4a7:	test   DWORD PTR [edx+0x1],ecx
  40d4aa:	daa    
  40d4ab:	mov    eax,ds:0x4f2c94ec
  40d4b0:	rol    bl,0x76
  40d4b3:	mov    cl,0xe4
  40d4b5:	mov    esi,0xd0d5abf0
  40d4ba:	inc    DWORD PTR [eax]
  40d4bc:	jge    0x40d46f
  40d4be:	pop    ebp
  40d4bf:	(bad)  
  40d4c0:	jle    0x40d501
  40d4c2:	adc    BYTE PTR [eax-0x69],ch
  40d4c5:	pop    ss
  40d4c6:	or     eax,0xeb835b12
  40d4cb:	mov    esi,0xc26577ab
  40d4d0:	jne    0x40d457
  40d4d2:	and    eax,0x2941ae72
  40d4d7:	shl    BYTE PTR [ebx],cl
  40d4d9:	xchg   esi,eax
  40d4da:	test   al,0xa7
  40d4dc:	scas   al,BYTE PTR es:[edi]
  40d4dd:	push   0xdd199d96
  40d4e2:	sbb    BYTE PTR [esi],bl
  40d4e4:	popa   
  40d4e5:	jno    0x40d487
  40d4e7:	pop    eax
  40d4e8:	jg     0x40d51c
  40d4ea:	jmp    0x79c27796
  40d4ef:	sbb    dl,BYTE PTR ds:0xe8880781
  40d4f5:	pop    ds
  40d4f6:	adc    al,0x2
  40d4f8:	pop    edi
  40d4f9:	mov    bh,0xcd
  40d4fb:	repz cmp al,0x30
  40d4ff:	inc    eax
  40d500:	xor    al,0x91
  40d502:	pusha  
  40d503:	inc    edx
  40d504:	out    0x2c,al
  40d506:	lds    ebx,FWORD PTR [ebx-0x6c]
  40d509:	mov    ds:0xf8a04abf,eax
  40d50e:	cmp    eax,0xbc66034f
  40d513:	and    esi,DWORD PTR [edi+0x667a9c1e]
  40d519:	repnz leave 
  40d51b:	push   0x7f
  40d51d:	ret    0x370f
  40d520:	xchg   esp,eax
  40d521:	mov    ah,ah
  40d523:	xor    esi,esi
  40d525:	dec    eax
  40d526:	imul   esi,edx,0xbd20f1d1
  40d52c:	mov    esi,fs
  40d52e:	pop    esp
  40d52f:	div    DWORD PTR [ebx+0x1a71f24e]
  40d535:	int    0xf2
  40d537:	and    cl,BYTE PTR [edx+0x470ad9dd]
  40d53d:	push   0x30
  40d53f:	xor    ebp,ebx
  40d541:	iret   
  40d542:	into   
  40d543:	fwait
  40d544:	in     al,0xb
  40d546:	test   al,0xb
  40d548:	dec    edx
  40d549:	xchg   esi,eax
  40d54a:	xchg   esi,eax
  40d54b:	in     al,0xff
  40d54d:	in     eax,0x8d
  40d54f:	retf   0x10ca
  40d552:	(bad)  
  40d553:	call   0x1fbe877d
  40d558:	push   ebx
  40d559:	add    eax,0x3cde477a
  40d55e:	stos   BYTE PTR es:[edi],al
  40d55f:	mov    dl,0xbe
  40d561:	test   DWORD PTR [ecx],edi
  40d563:	jne    0x40d594
  40d565:	mov    cl,cl
  40d567:	mov    dh,0xc6
  40d569:	adc    DWORD PTR [esi],esi
  40d56b:	xlat   BYTE PTR ds:[ebx]
  40d56c:	into   
  40d56d:	jg     0x40d57e
  40d56f:	jecxz  0x40d5bc
  40d571:	pop    ds
  40d572:	out    0xa8,eax
  40d574:	sbb    dl,BYTE PTR [esi-0x37]
  40d577:	mov    ch,0x52
  40d579:	add    al,0x96
  40d57b:	ss inc edi
  40d57d:	mov    esp,0x94d25d2c
  40d582:	xchg   edi,eax
  40d583:	mov    ds:0x891bb962,al
  40d588:	xlat   BYTE PTR ds:[ebx]
  40d589:	pushf  
  40d58a:	leave  
  40d58b:	push   es
  40d58c:	xor    BYTE PTR [esi+0x6f],dh
  40d58f:	mov    WORD PTR [ecx+ebp*2+0x4587de0a],?
  40d596:	mov    dl,0x71
  40d598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d599:	icebp  
  40d59a:	sub    edx,DWORD PTR [esi-0x31b1d415]
  40d5a0:	out    dx,al
  40d5a1:	(bad)  
  40d5a2:	rcl    esi,1
  40d5a4:	xor    BYTE PTR [edi-0x3a],al
  40d5a7:	jge    0x40d59d
  40d5a9:	aad    0x7f
  40d5ab:	xor    ebp,ebx
  40d5ad:	ds jne 0x40d612
  40d5b0:	mov    bl,0xd
  40d5b2:	shr    BYTE PTR [ebx+ecx*2+0x190e1fec],1
  40d5b9:	(bad)  
  40d5bb:	xchg   ebp,eax
  40d5bc:	sub    ch,BYTE PTR [ecx]
  40d5be:	push   esi
  40d5bf:	xor    dh,ch
  40d5c1:	ficom  DWORD PTR [esi+edx*1+0x64]
  40d5c5:	cmp    eax,0x3593ebf8
  40d5ca:	adc    ebp,DWORD PTR [ecx]
  40d5cc:	icebp  
  40d5cd:	xlat   BYTE PTR ds:[ebx]
  40d5ce:	mov    ds:0xce04ba2c,al
  40d5d3:	pushf  
  40d5d4:	xchg   ecx,eax
  40d5d5:	mov    DWORD PTR [eax],ebx
  40d5d7:	jp     0x40d5a8
  40d5d9:	(bad)  
  40d5da:	retf   
  40d5db:	or     edi,DWORD PTR [esi]
  40d5dd:	and    DWORD PTR ds:0x5fe256d3,edx
  40d5e3:	pop    es
  40d5e4:	mov    esi,DWORD PTR [ecx]
  40d5e6:	sbb    al,0x7c
  40d5e8:	push   es
  40d5e9:	sbb    ch,cl
  40d5eb:	mov    ch,0x34
  40d5ed:	push   es
  40d5ee:	(bad)  
  40d5ef:	add    ah,BYTE PTR [ecx+eiz*2-0x3b25b0d9]
  40d5f6:	lahf   
  40d5f7:	jg     0x40d60f
  40d5f9:	ficomp WORD PTR [edi+0x4bfcdeee]
  40d5ff:	sub    DWORD PTR [eax-0x1],ebx
  40d602:	mov    ebx,0x449def21
  40d607:	mov    ebx,0xdea9b37f
  40d60c:	push   DWORD PTR [esi+0x7f15162]
  40d612:	int    0xf0
  40d614:	mov    al,0x84
  40d616:	cmp    eax,0xa0497076
  40d61b:	jle    0x40d653
  40d61d:	in     al,dx
  40d61e:	jmp    0x61a9ad14
  40d623:	mov    BYTE PTR [ebp+0x205949a0],bh
  40d629:	mov    al,ds:0xaa3576ab
  40d62e:	cmp    ecx,DWORD PTR es:[edx+0x1d65129c]
  40d635:	fisttp WORD PTR [edi+0x8fe7e61]
  40d63b:	jp     0x40d693
  40d63d:	repnz shl DWORD PTR [ebp+0xccf11de],0xa8
  40d645:	daa    
  40d646:	lahf   
  40d647:	jp     0x40d603
  40d649:	mov    ss,WORD PTR [edi-0x29]
  40d64c:	mov    ds:0x125edc83,al
  40d651:	jns    0x40d5dc
  40d653:	lock rcr DWORD PTR [ecx+0x61],1
  40d657:	jb     0x40d5f2
  40d659:	lahf   
  40d65a:	xchg   esp,eax
  40d65b:	scas   eax,DWORD PTR es:[edi]
  40d65c:	repz (bad) 
  40d65e:	xlat   BYTE PTR ds:[ebx]
  40d65f:	int3   
  40d660:	and    ebx,eax
  40d662:	pop    ss
  40d663:	fs jmp 0x2d9b:0x7efd5541
  40d66b:	cld    
  40d66c:	xor    DWORD PTR [eax-0x31],esp
  40d66f:	pop    ecx
  40d670:	in     eax,dx
  40d671:	inc    edx
  40d672:	stos   DWORD PTR es:[edi],eax
  40d673:	div    BYTE PTR ds:0xce77cf34
  40d679:	cli    
  40d67a:	mov    ebx,0x5d22e7bf
  40d67f:	(bad)  [ecx]
  40d681:	sbb    al,0x8
  40d683:	pop    eax
  40d684:	std    
  40d685:	out    dx,al
  40d686:	mov    dh,0x69
  40d688:	push   cs
  40d689:	sbb    DWORD PTR [ebp+ebx*4+0x34],edx
  40d68d:	and    eax,DWORD PTR [ebx-0x10]
  40d690:	arpl   WORD PTR [eax],ax
  40d692:	pop    esp
  40d693:	test   al,0xe2
  40d695:	mov    ecx,0x7bf531bf
  40d69a:	jb     0x40d6e0
  40d69c:	or     DWORD PTR [edi+edi*2+0x43ac0af7],esi
  40d6a3:	push   esi
  40d6a4:	push   ebx
  40d6a5:	sub    eax,0x43980b
  40d6aa:	jne    0x40d68d
  40d6ac:	mov    ch,ch
  40d6ae:	sbb    edi,edx
  40d6b0:	jns    0x40d64d
  40d6b2:	mov    ebx,0xd1bfc0ef
  40d6b7:	aad    0x36
  40d6b9:	lahf   
  40d6ba:	aad    0x2c
  40d6bc:	add    al,0xef
  40d6be:	imul   ecx,DWORD PTR [eax-0x2dab6a09],0x2207551f
  40d6c8:	xor    edi,DWORD PTR [eax+0x15]
  40d6cb:	fcmovu st,st(5)
  40d6cd:	inc    eax
  40d6ce:	jb     0x40d71e
  40d6d0:	gs retf 0x77a5
  40d6d4:	ds mov cl,0xed
  40d6d7:	ret    0xbd50
  40d6da:	mov    ch,0x96
  40d6dc:	sub    cl,ah
  40d6de:	je     0x40d6b7
  40d6e0:	push   eax
  40d6e1:	jl     0x40d69e
  40d6e3:	test   eax,0x95990e5b
  40d6e9:	push   ss
  40d6ea:	stos   DWORD PTR es:[edi],eax
  40d6eb:	jecxz  0x40d67e
  40d6ed:	std    
  40d6ee:	push   ecx
  40d6ef:	lods   al,BYTE PTR ds:[esi]
  40d6f0:	push   esi
  40d6f1:	lahf   
  40d6f2:	mov    al,0xd2
  40d6f4:	ins    DWORD PTR es:[edi],dx
  40d6f5:	mov    ecx,0x46b0daff
  40d6fa:	loope  0x40d712
  40d6fc:	pop    ebx
  40d6fd:	pop    ss
  40d6fe:	rcr    BYTE PTR [ebx-0x3d],1
  40d701:	push   edx
  40d702:	xchg   DWORD PTR [ebp+0x7e],esp
  40d705:	mov    edi,0x5596266c
  40d70a:	daa    
  40d70b:	or     al,0x4e
  40d70d:	add    ebx,0x6c
  40d710:	ror    ecx,0x20
  40d713:	mov    al,0x1a
  40d715:	jmp    0x3ba31cc
  40d71a:	push   ss
  40d71b:	je     0x40d795
  40d71d:	retf   0xb413
  40d720:	push   cs
  40d721:	cwde   
  40d722:	cmp    edx,DWORD PTR [edx]
  40d724:	jo     0x40d6df
  40d726:	aaa    
  40d727:	push   ecx
  40d728:	dec    eax
  40d729:	add    al,0x4b
  40d72b:	xchg   esp,eax
  40d72c:	mov    ebp,0x927d91fa
  40d731:	(bad)  
  40d732:	inc    ebp
  40d733:	test   DWORD PTR [edi+0x7d],eax
  40d736:	adc    dl,al
  40d738:	jno    0x40d762
  40d73a:	or     DWORD PTR [edi+0x65],esp
  40d73d:	xchg   edi,eax
  40d73e:	sub    al,bl
  40d740:	scas   eax,DWORD PTR es:[edi]
  40d741:	stc    
  40d742:	scas   al,BYTE PTR es:[edi]
  40d743:	sbb    al,0xfd
  40d745:	test   al,0x5
  40d747:	jge    0x40d6e1
  40d749:	sub    al,0x2c
  40d74b:	fadd   QWORD PTR [esp+eax*2+0x75]
  40d74f:	pop    es
  40d750:	sbb    BYTE PTR [ebx+esi*4+0x4d],cl
  40d754:	adc    al,0xae
  40d756:	scas   al,BYTE PTR es:[edi]
  40d757:	sbb    edx,DWORD PTR [esi+0x3bdec41e]
  40d75d:	addr16 jmp 0x345b:0x570d9aa
  40d765:	dec    edx
  40d767:	and    dl,BYTE PTR [ebp+edi*1+0x5b]
  40d76b:	mov    ch,0x80
  40d76d:	xor    eax,0xe2034db2
  40d772:	and    BYTE PTR [edx-0x5b3befd],ch
  40d778:	fmul   QWORD PTR [edx*8-0x63306266]
  40d77f:	cmp    ecx,eax
  40d781:	std    
  40d782:	push   cs
  40d783:	cwde   
  40d784:	sub    DWORD PTR [eax-0x37cef65],ebx
  40d78a:	lods   eax,DWORD PTR ds:[esi]
  40d78b:	mov    esp,0xede16401
  40d790:	or     ah,BYTE PTR [edi+0x11]
  40d793:	leave  
  40d794:	ins    DWORD PTR es:[edi],dx
  40d795:	mov    ds:0xd20b8af5,al
  40d79a:	retf   0x5f36
  40d79d:	scas   eax,DWORD PTR es:[edi]
  40d79e:	inc    edx
  40d79f:	or     BYTE PTR [esi],ah
  40d7a1:	pop    esp
  40d7a2:	scas   eax,DWORD PTR es:[edi]
  40d7a3:	mov    ah,0xbe
  40d7a5:	lahf   
  40d7a6:	pop    esp
  40d7a7:	cmp    BYTE PTR [ecx],0x5e
  40d7aa:	pushf  
  40d7ab:	xchg   esi,eax
  40d7ac:	gs jb  0x40d81c
  40d7af:	xchg   edi,eax
  40d7b0:	cmp    DWORD PTR [ebx+eax*1-0x20558f25],edx
  40d7b7:	jbe    0x40d7f3
  40d7b9:	adc    esp,DWORD PTR [ebx-0x33f53de8]
  40d7bf:	pop    ss
  40d7c0:	jle    0x40d751
  40d7c2:	xor    BYTE PTR [ecx+eiz*8],dl
  40d7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c6:	ret    0xa3c4
  40d7c9:	cmp    BYTE PTR [eax],bl
  40d7cb:	test   eax,0xade67536
  40d7d0:	sbb    bl,BYTE PTR [eax+0xe]
  40d7d3:	inc    esi
  40d7d4:	call   0x5764afff
  40d7d9:	das    
  40d7da:	mov    ds:0x1b72c115,eax
  40d7df:	xchg   DWORD PTR [ebx+0x7d9f5cb8],edx
  40d7e5:	inc    edx
  40d7e6:	adc    al,0x48
  40d7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e9:	mov    al,0x94
  40d7eb:	and    BYTE PTR [esi+0xc],bh
  40d7ee:	and    al,0x0
  40d7f0:	mov    esi,0x8da4d563
  40d7f5:	pop    esp
  40d7f6:	fdivr  DWORD PTR [ecx+0x1a]
  40d7f9:	adc    al,0xf2
  40d7fb:	(bad)
  40d7fe:	lahf   
  40d7ff:	and    ah,cl
  40d801:	sbb    bp,bx
  40d804:	sar    BYTE PTR [eax-0x18],1
  40d807:	inc    eax
  40d808:	mov    ah,0xfc
  40d80a:	popf   
  40d80b:	add    ah,BYTE PTR [edi]
  40d80d:	jmp    0x40d7c4
  40d80f:	or     eax,0xff88ef06
  40d814:	jmp    0x4883:0xafa3f10
  40d81b:	xchg   DWORD PTR [ebx-0x18],esp
  40d81e:	jno    0x40d895
  40d820:	cli    
  40d821:	dec    ecx
  40d822:	scas   al,BYTE PTR es:[edi]
  40d823:	outs   dx,BYTE PTR ds:[esi]
  40d824:	test   eax,0x204e1ee0
  40d829:	cs jmp 0x40d7f6
  40d82c:	aaa    
  40d82d:	adc    ebp,DWORD PTR [edx+0x139ee93c]
  40d833:	lds    ecx,FWORD PTR [edi]
  40d835:	pop    ebp
  40d836:	jle    0x40d7c5
  40d838:	mov    bl,0xb1
  40d83a:	icebp  
  40d83b:	ja     0x40d843
  40d83d:	cli    
  40d83e:	push   ebx
  40d83f:	xor    al,0x16
  40d841:	push   ebx
  40d842:	jbe    0x40d81b
  40d844:	mov    ss,edx
  40d846:	push   0xffffffd0
  40d848:	jle    0x40d7d3
  40d84a:	pop    edi
  40d84b:	ss xchg ecx,eax
  40d84d:	xchg   esi,eax
  40d84e:	mov    ebx,?
  40d850:	hlt    
  40d851:	pop    edi
  40d852:	push   eax
  40d853:	jno    0x40d8a7
  40d855:	ins    DWORD PTR es:[edi],dx
  40d856:	mov    esi,DWORD PTR [ebx+0xe73a7b5]
  40d85c:	mov    dh,0xb3
  40d85e:	jne    0x40d83d
  40d860:	inc    edi
  40d861:	mov    ebp,0xbce1babb
  40d866:	setge  BYTE PTR [eax+esi*2+0x77]
  40d86b:	ret    0xd167
  40d86e:	mov    edi,0xb1d62292
  40d873:	fiadd  DWORD PTR [esi-0x1e426bc0]
  40d879:	xor    eax,ecx
  40d87b:	pop    ss
  40d87c:	and    ah,ch
  40d87e:	pop    esi
  40d87f:	ja     0x40d8ec
  40d881:	xchg   esi,eax
  40d882:	pop    ecx
  40d883:	inc    ebx
  40d884:	sub    eax,0x6c3b0578
  40d889:	xchg   edi,eax
  40d88a:	push   edx
  40d88b:	sub    al,bh
  40d88d:	sbb    DWORD PTR [edi-0x55],eax
  40d890:	sub    edx,DWORD PTR [edi-0x79]
  40d893:	pop    esp
  40d894:	xlat   BYTE PTR ds:[ebx]
  40d895:	or     BYTE PTR [ebp-0x6af7d91c],ch
  40d89b:	push   edx
  40d89c:	pop    ebp
  40d89d:	jecxz  0x40d8cc
  40d89f:	ret    
  40d8a0:	xchg   ebx,eax
  40d8a1:	mov    cl,0x8f
  40d8a3:	fmul   QWORD PTR [ecx+0x4b462013]
  40d8a9:	fstp   TBYTE PTR [eax+0x47dda166]
  40d8af:	out    dx,eax
  40d8b0:	xchg   ebx,eax
  40d8b1:	in     eax,dx
  40d8b2:	stos   DWORD PTR es:[edi],eax
  40d8b3:	and    al,0xb0
  40d8b5:	push   0xffffff81
  40d8b7:	sbb    BYTE PTR [edx+0x1ee2c305],ah
  40d8bd:	jne    0x40d87b
  40d8bf:	call   0x97b2ea61
  40d8c4:	xor    al,0xc3
  40d8c6:	jo     0x40d8e8
  40d8c8:	jns    0x40d8ca
  40d8ca:	lds    eax,FWORD PTR [edx-0x63]
  40d8cd:	inc    eax
  40d8ce:	out    0xd4,al
  40d8d0:	sub    eax,0x6f434af1
  40d8d5:	test   al,0x32
  40d8d7:	xchg   esi,eax
  40d8d8:	inc    edx
  40d8d9:	xor    esi,DWORD PTR [edi+0x6c41e9f6]
  40d8df:	dec    esp
  40d8e0:	adc    DWORD PTR [ebx+0x198f1409],edx
  40d8e6:	scas   eax,DWORD PTR es:[edi]
  40d8e7:	jp     0x40d902
  40d8e9:	repz shr BYTE PTR [ebx-0x7f69e63b],0x30
  40d8f1:	push   edi
  40d8f2:	lods   eax,DWORD PTR ds:[esi]
  40d8f3:	daa    
  40d8f4:	(bad)  
  40d8f5:	iret   
  40d8f6:	retf   0x8e09
  40d8f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8fa:	pop    edi
  40d8fb:	cmp    edi,DWORD PTR [ebx+0x5d6c360b]
  40d901:	pop    ds
  40d902:	dec    ebp
  40d903:	cmp    edi,DWORD PTR [eax+0x3e]
  40d906:	stc    
  40d907:	ucomiss xmm3,xmm0
  40d90a:	test   BYTE PTR [ecx-0x42],0x80
  40d90e:	dec    edi
  40d90f:	mov    ch,0x50
  40d911:	sub    DWORD PTR [ecx],ebx
  40d913:	test   eax,0x1d60fcc7
  40d918:	jp     0x40d922
  40d91a:	xchg   ebx,eax
  40d91b:	mov    DWORD PTR [edi+0x762fa09f],eax
  40d921:	mov    ebp,0xb3b8d820
  40d926:	fisub  DWORD PTR [edi]
  40d928:	(bad)
  40d92c:	jl     0x40d92f
  40d92e:	inc    eax
  40d92f:	jecxz  0x40d969
  40d931:	and    al,0x72
  40d933:	pop    esp
  40d934:	out    0xc6,al
  40d936:	(bad)  
  40d938:	jp     0x40d951
  40d93a:	pushf  
  40d93b:	and    eax,DWORD PTR [ecx]
  40d93d:	dec    ebp
  40d93e:	and    BYTE PTR [esi+0x61e9c8f],ch
  40d944:	mov    BYTE PTR [ebp-0x70d7e5de],0xbe
  40d94b:	cs ins DWORD PTR es:[edi],dx
  40d94d:	ins    DWORD PTR es:[edi],dx
  40d94e:	jns    0x40d9c4
  40d950:	stos   DWORD PTR es:[edi],eax
  40d951:	inc    edi
  40d952:	je     0x40d94f
  40d954:	test   eax,0x4e85b15e
  40d959:	in     eax,0x36
  40d95b:	inc    esi
  40d95c:	arpl   ax,dx
  40d95e:	sar    DWORD PTR [esi+ebx*8],cl
  40d961:	(bad)  
  40d962:	aam    0xe9
  40d964:	pop    ds
  40d965:	and    eax,0xe4690765
  40d96a:	in     eax,0x32
  40d96c:	inc    eax
  40d96d:	retf   0x16a3
  40d970:	scas   eax,DWORD PTR es:[edi]
  40d971:	aaa    
  40d972:	je     0x40d94f
  40d974:	hlt    
  40d975:	rcr    esp,cl
  40d977:	lods   al,BYTE PTR ds:[esi]
  40d978:	mov    bl,BYTE PTR [ebx]
  40d97a:	ror    DWORD PTR [eax-0x33],cl
  40d97d:	sub    esi,DWORD PTR [edi+ebx*1+0x125e165e]
  40d984:	pop    edi
  40d985:	out    0x8a,al
  40d987:	pushf  
  40d988:	xchg   ebp,eax
  40d989:	outs   dx,DWORD PTR ds:[esi]
  40d98a:	xor    DWORD PTR [esi+0x26c4e08],0xa901c23
  40d994:	jge    0x40d958
  40d996:	imul   ebx,ecx,0x8013cf65
  40d99c:	push   edi
  40d99d:	ret    
  40d99e:	mov    ds:0x17aec77d,eax
  40d9a3:	sub    DWORD PTR [ebx+0x31],esi
  40d9a6:	(bad)  
  40d9a7:	push   esp
  40d9a8:	mov    edi,0x120c539b
  40d9ad:	adc    BYTE PTR ds:0xe47b76fd,bl
  40d9b3:	sbb    DWORD PTR [edi+eax*4],0xffffff82
  40d9b7:	out    dx,eax
  40d9b8:	pop    esp
  40d9b9:	add    BYTE PTR [edx+0x358628b7],dl
  40d9bf:	outs   dx,BYTE PTR ds:[esi]
  40d9c0:	mov    ch,0xc4
  40d9c2:	inc    ebx
  40d9c3:	adc    cl,bh
  40d9c5:	jge    0x40da1f
  40d9c7:	imul   BYTE PTR [edx]
  40d9c9:	(bad)
  40d9cf:	(bad)  
  40d9d0:	sbb    eax,0xbd6be792
  40d9d5:	push   ecx
  40d9d6:	push   cs
  40d9d7:	addr16 aam 0x15
  40d9da:	lock xor DWORD PTR [eax+eax*1-0x1f09fb3f],ebx
  40d9e2:	xchg   esp,eax
  40d9e3:	add    al,0xac
  40d9e5:	add    al,0x8
  40d9e7:	sahf   
  40d9e8:	cs fwait
  40d9ea:	pop    ebp
  40d9eb:	repz sub ebp,DWORD PTR [esp+ebx*2+0x7a7a3750]
  40d9f3:	sbb    eax,0xf787f5dd
  40d9f8:	xrelease xchg BYTE PTR [ebp+0x4c],ch
  40d9fc:	fst    QWORD PTR [eax+esi*1-0x92cafae]
  40da03:	fdiv   QWORD PTR [esi+0x66]
  40da06:	call   0x3fb9:0xb726ea31
  40da0d:	mov    esi,0xa99c97ab
  40da12:	inc    esi
  40da13:	push   eax
  40da14:	pop    ss
  40da15:	xchg   ebx,eax
  40da16:	pop    edx
  40da17:	or     BYTE PTR es:[ecx],dl
  40da1a:	add    dl,bl
  40da1c:	fiadd  DWORD PTR [esi-0x1815ffe3]
  40da22:	clc    
  40da23:	sbb    al,0x65
  40da25:	loope  0x40da04
  40da27:	mov    ?,ebx
  40da29:	xor    al,cl
  40da2b:	shr    BYTE PTR [esi-0x2ca06466],1
  40da31:	pop    es
  40da32:	into   
  40da33:	jmp    0x74d46cb6
  40da38:	data16 jns 0x40d9ec
  40da3b:	ror    esi,cl
  40da3d:	sar    BYTE PTR [edi],0x8c
  40da40:	fmul   DWORD PTR [esi-0x40]
  40da43:	retf   
  40da44:	fs (bad) 
  40da46:	mov    bh,0x70
  40da48:	les    esi,FWORD PTR [eax+eax*2+0x222239ad]
  40da4f:	cmp    BYTE PTR ds:0x13591bd3,cl
  40da55:	mov    WORD PTR [edx+edx*1-0x3005e4eb],cs
  40da5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da5d:	push   edx
  40da5e:	fst    DWORD PTR [esi]
  40da60:	sub    ebx,0xa9af3df4
  40da66:	mov    ebx,0x36a7b599
  40da6b:	je     0x40dab0
  40da6d:	jne    0x40da7e
  40da6f:	add    DWORD PTR [esi+edi*8-0x2c],0x2bed0e01
  40da77:	mov    bh,0xb7
  40da79:	fsub   QWORD PTR [ebp-0x5a]
  40da7c:	cs inc edx
  40da7e:	sub    ebx,edx
  40da80:	add    BYTE PTR [ebp+0x23],ch
  40da83:	addr16 (bad) 
  40da85:	fisttp DWORD PTR [edi-0x1d]
  40da88:	icebp  
  40da89:	push   ds
  40da8a:	arpl   WORD PTR ds:0x2073ffad,sp
  40da90:	jno    0x40dae4
  40da92:	xor    cl,bh
  40da94:	mov    edx,0xf7843dc8
  40da99:	push   esi
  40da9a:	xor    cl,BYTE PTR [ecx]
  40da9c:	ret    0x2ee4
  40da9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa0:	push   0xc13290ea
  40daa5:	pusha  
  40daa6:	push   0xd
  40daa8:	jnp    0x40da57
  40daaa:	pop    ss
  40daab:	lock mov ebp,DWORD PTR [edx+0x42]
  40daaf:	scas   al,BYTE PTR es:[edi]
  40dab0:	or     ch,BYTE PTR [ebp+ebx*8+0x1c2c7bd0]
  40dab7:	sub    DWORD PTR [edi-0x3fefb86a],esp
  40dabd:	fist   WORD PTR [esi-0x3b3b7897]
  40dac3:	sbb    BYTE PTR [eax],cl
  40dac5:	call   0x6a78:0x50b7ac0e
  40dacc:	mov    cl,0xe2
  40dace:	jo     0x40daff
  40dad0:	sub    ah,BYTE PTR gs:[eax-0x1]
  40dad4:	sub    al,0x62
  40dad6:	cmp    BYTE PTR [esi],ch
  40dad8:	sub    eax,0xc76dad67
  40dadd:	test   al,0x34
  40dadf:	scas   eax,DWORD PTR es:[edi]
  40dae0:	xlat   BYTE PTR ds:[ebx]
  40dae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae2:	enter  0x35a3,0x57
  40dae6:	lods   eax,DWORD PTR ds:[esi]
  40dae7:	adc    edi,edi
  40dae9:	stc    
  40daea:	test   BYTE PTR [edx+0x33d1afca],dl
  40daf0:	cmp    DWORD PTR [ecx],esi
  40daf2:	jnp    0x40dae1
  40daf4:	pop    edi
  40daf5:	test   eax,0xffb9d849
  40dafa:	cdq    
  40dafb:	cmp    eax,0x17be4997
  40db00:	or     al,0xe6
  40db02:	or     al,0x94
  40db04:	sub    al,0x33
  40db06:	xlat   BYTE PTR ds:[ebx]
  40db07:	mov    al,0x20
  40db09:	pop    ebx
  40db0a:	lahf   
  40db0b:	ror    DWORD PTR [ebp+0x15],0xe5
  40db0f:	sub    esi,0xb85b61e3
  40db15:	jo     0x40db16
  40db17:	dec    eax
  40db18:	cmp    eax,0x214c233d
  40db1d:	sbb    DWORD PTR [edi],0x13e21d5c
  40db23:	pop    eax
  40db24:	imul   edx,DWORD PTR [ebp+0x2017309c],0x7f
  40db2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db2c:	rcl    dl,1
  40db2e:	test   BYTE PTR [edi-0x3f0718f3],bh
  40db34:	push   ecx
  40db35:	pushf  
  40db36:	in     al,0x1a
  40db38:	arpl   WORD PTR [edi],dx
  40db3a:	dec    ebx
  40db3b:	xor    BYTE PTR [edx],ch
  40db3d:	nop
  40db3e:	or     ecx,ecx
  40db40:	cmp    DWORD PTR [esi],eax
  40db42:	add    BYTE PTR [ebx+0x5aeb56f4],ch
  40db48:	push   ecx
  40db49:	push   es
  40db4a:	sbb    al,0xba
  40db4c:	(bad)  
  40db4d:	cdq    
  40db4e:	mov    bl,0x26
  40db50:	inc    edx
  40db51:	sub    BYTE PTR [ebx-0x759f3c3d],dl
  40db57:	pop    ebp
  40db58:	mov    edi,0xb3dc7155
  40db5d:	retf   
  40db5e:	mov    dh,0x2a
  40db60:	pop    ebx
  40db61:	pop    esp
  40db62:	mov    esi,0x1aa652e3
  40db67:	jmp    0x40db57
  40db69:	fld    QWORD PTR [esp+ecx*2]
  40db6c:	out    0x24,al
  40db6e:	test   eax,0x8bc2adeb
  40db73:	dec    DWORD PTR [edx-0x78]
  40db76:	fst    DWORD PTR [ebx-0x59]
  40db79:	shr    BYTE PTR [esi],1
  40db7b:	dec    ecx
  40db7c:	mov    BYTE PTR [esp+esi*8+0x6f976e94],bh
  40db83:	cdq    
  40db84:	fist   WORD PTR [esi+0x13]
  40db87:	lock sub edx,DWORD PTR [ebp+0x506b3a76]
  40db8e:	in     eax,dx
  40db8f:	das    
  40db90:	ja     0x40db5d
  40db92:	enter  0x3660,0x53
  40db96:	jns    0x40db7c
  40db98:	dec    esi
  40db99:	scas   eax,DWORD PTR es:[edi]
  40db9a:	sbb    ebp,DWORD PTR [ecx-0x4a]
  40db9d:	lods   eax,DWORD PTR ds:[esi]
  40db9e:	xchg   ebx,eax
  40db9f:	ins    BYTE PTR es:[edi],dx
  40dba0:	push   ebp
  40dba1:	loopne 0x40dbd9
  40dba3:	sub    al,0x4c
  40dba5:	test   BYTE PTR [eax],0xcb
  40dba8:	lahf   
  40dba9:	loopne 0x40dbae
  40dbab:	mov    es,ecx
  40dbad:	adc    al,0x80
  40dbaf:	or     ah,BYTE PTR [eax]
  40dbb1:	push   cs
  40dbb2:	fcom   QWORD PTR [ecx-0x52763b0a]
  40dbb8:	(bad)  
  40dbb9:	adc    ch,BYTE PTR [esi-0x69]
  40dbbc:	xchg   ecx,eax
  40dbbd:	pop    ebx
  40dbbe:	test   eax,0x9f76ec4b
  40dbc3:	mov    edi,0xac8a44e2
  40dbc8:	mov    edi,edi
  40dbca:	and    bh,BYTE PTR [ecx]
  40dbcc:	out    0x24,eax
  40dbce:	push   ebx
  40dbcf:	mov    BYTE PTR [ebx+edi*4+0x14],ch
  40dbd3:	and    dh,BYTE PTR cs:[edi]
  40dbd6:	sub    esi,DWORD PTR [ebx]
  40dbd8:	cmc    
  40dbd9:	push   edi
  40dbda:	je     0x40dc2a
  40dbdc:	push   0xffffffaf
  40dbde:	mov    BYTE PTR [ecx],bh
  40dbe0:	push   ds
  40dbe1:	inc    ebx
  40dbe2:	lahf   
  40dbe3:	scas   al,BYTE PTR es:[edi]
  40dbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe5:	rcr    bl,0x1d
  40dbe8:	fdiv   DWORD PTR [esp+edx*8-0x7056978a]
  40dbef:	push   es
  40dbf0:	adc    bl,bh
  40dbf2:	inc    ebp
  40dbf3:	sub    ebp,DWORD PTR [eax-0x1c86bc96]
  40dbf9:	mov    dh,0xf2
  40dbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbfc:	stos   BYTE PTR es:[edi],al
  40dbfd:	ins    BYTE PTR es:[edi],dx
  40dbfe:	leave  
  40dbff:	iret   
  40dc00:	dec    ebx
  40dc01:	(bad)  
  40dc02:	daa    
  40dc03:	jmp    0x40dbc0
  40dc05:	sbb    bh,dl
  40dc07:	dec    edx
  40dc08:	imul   esp,DWORD PTR [esp+ebx*4+0x5e06e28d],0x5432d982
  40dc13:	es (bad) 
  40dc15:	jg     0x40dc8a
  40dc17:	inc    esp
  40dc18:	fdivr  DWORD PTR fs:[edi+0x1f1e546e]
  40dc1f:	inc    ebp
  40dc20:	dec    ebp
  40dc21:	call   0xea0e7c74
  40dc26:	adc    ah,0x30
  40dc29:	and    bl,BYTE PTR [esi+0x5fb1d80b]
  40dc2f:	les    eax,FWORD PTR [ecx+0x5c]
  40dc32:	int    0x93
  40dc34:	ss hlt 
  40dc36:	sub    al,0xc3
  40dc38:	fistp  DWORD PTR [edi+0x7]
  40dc3b:	adc    eax,0x68b938c0
  40dc40:	lods   eax,DWORD PTR ds:[esi]
  40dc41:	add    BYTE PTR [eax-0xc],ah
  40dc44:	and    eax,ecx
  40dc46:	(bad)  
  40dc47:	cmp    esi,DWORD PTR [esi+0x58]
  40dc4a:	add    eax,0x37162489
  40dc4f:	(bad)  
  40dc50:	data16 sub BYTE PTR [esi+0x50765b0],0x8c
  40dc58:	jo     0x40dbfa
  40dc5a:	mul    DWORD PTR [ecx+0x167ac5dd]
  40dc60:	int    0xca
  40dc62:	mov    ecx,0x9d1c5a23
  40dc67:	jb     0x40dc08
  40dc69:	jo     0x40dc74
  40dc6b:	popa   
  40dc6c:	push   eax
  40dc6d:	(bad)  
  40dc6e:	jmp    0xc6224719
  40dc73:	push   0xffffffbb
  40dc75:	push   es
  40dc76:	repz scas al,BYTE PTR es:[edi]
  40dc78:	dec    eax
  40dc79:	div    BYTE PTR [eax+0x6316a8d9]
  40dc7f:	stos   DWORD PTR es:[edi],eax
  40dc80:	push   edx
  40dc81:	repnz fist WORD PTR [eax+0xa77e023]
  40dc88:	sub    ebp,DWORD PTR ds:0xa6d9c2e0
  40dc8e:	adc    ch,BYTE PTR [esi-0x4d]
  40dc91:	fwait
  40dc92:	jo     0x40dce4
  40dc94:	push   edi
  40dc95:	ins    DWORD PTR es:[edi],dx
  40dc96:	xlat   BYTE PTR ds:[ebx]
  40dc97:	dec    ebx
  40dc98:	aas    
  40dc99:	or     BYTE PTR [edx],0x3a
  40dc9c:	(bad)  
  40dc9d:	fwait
  40dc9e:	ins    BYTE PTR es:[edi],dx
  40dc9f:	inc    edi
  40dca0:	out    0xc6,al
  40dca2:	xchg   esp,eax
  40dca3:	out    0x44,al
  40dca5:	leave  
  40dca6:	test   al,0x42
  40dca8:	bound  edx,QWORD PTR [edi+0x87d9569]
  40dcae:	inc    edi
  40dcaf:	dec    ebx
  40dcb0:	outs   dx,BYTE PTR ds:[esi]
  40dcb1:	cmp    al,0x2d
  40dcb3:	out    dx,al
  40dcb4:	jl     0x40dcd5
  40dcb6:	ror    DWORD PTR [ecx],0x48
  40dcb9:	outs   dx,BYTE PTR ds:[esi]
  40dcba:	dec    edi
  40dcbb:	shr    BYTE PTR [edi+0x65d79ac1],0xd6
  40dcc2:	add    bh,dl
  40dcc4:	and    eax,edx
  40dcc6:	inc    eax
  40dcc7:	mov    edi,0xfad660e3
  40dccc:	mov    ah,0xb2
  40dccf:	in     eax,0x8b
  40dcd1:	call   0x2e6b:0x2f00e104
  40dcd8:	in     al,dx
  40dcd9:	jo     0x40dc89
  40dcdb:	mov    ecx,0xf1444128
  40dce0:	fstp   st(1)
  40dce2:	and    al,0xa3
  40dce4:	mov    esp,0xc470377a
  40dce9:	adc    eax,0x347f0ba8
  40dcee:	mov    WORD PTR [esi-0x28849d13],?
  40dcf4:	xchg   ecx,eax
  40dcf5:	push   ecx
  40dcf6:	mov    ebp,0x86caa391
  40dcfb:	jmp    0x2314:0x7818eee0
  40dd02:	cld    
  40dd03:	push   edx
  40dd04:	sar    BYTE PTR [esi+0x6c],0x9a
  40dd08:	sbb    DWORD PTR [edi-0x2a],ebp
  40dd0b:	xchg   ebx,eax
  40dd0c:	mov    ch,0x85
  40dd0e:	sub    esp,DWORD PTR cs:[edx+0x7ee4685c]
  40dd15:	cmp    DWORD PTR [edi+0xc],esi
  40dd18:	aaa    
  40dd19:	xor    esi,DWORD PTR [ebx-0x7d845d75]
  40dd1f:	bound  di,DWORD PTR gs:[ecx-0x58]
  40dd24:	push   0x976d5d30
  40dd29:	sbb    eax,0xbef46c66
  40dd2e:	sbb    BYTE PTR [ebp-0xc1ee7ae],0xe6
  40dd35:	mov    ecx,0xd9e4141e
  40dd3a:	and    esp,0x6bd0b2fa
  40dd40:	scas   eax,DWORD PTR es:[edi]
  40dd41:	les    ebp,FWORD PTR [eax+0x3ac62b8e]
  40dd47:	imul   esp,esi,0xffffff83
  40dd4a:	and    eax,0xf8139470
  40dd4f:	jbe    0x40dcf2
  40dd51:	gs jp  0x40dd56
  40dd54:	xor    al,0x9a
  40dd56:	xor    BYTE PTR [ebx+0x22],0x9a
  40dd5a:	out    0x91,al
  40dd5c:	xor    DWORD PTR [ebx+0x7ea70358],edx
  40dd62:	gs sbb eax,0x742c0232
  40dd68:	or     al,0x6c
  40dd6a:	jmp    0x5d57:0x5305588b
  40dd71:	mov    al,ds:0x84552dea
  40dd76:	xchg   esp,eax
  40dd77:	sbb    DWORD PTR [esi-0x2a4ea78e],esp
  40dd7d:	retf   0x1275
  40dd80:	fdivr  QWORD PTR [edx]
  40dd82:	hlt    
  40dd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd84:	scas   al,BYTE PTR es:[edi]
  40dd85:	xor    ecx,edi
  40dd87:	ins    BYTE PTR es:[edi],dx
  40dd88:	mov    DWORD PTR [eax+esi*4+0x727f7958],esp
  40dd8f:	inc    ebp
  40dd90:	mov    esp,0xbfbea84c
  40dd95:	loope  0x40dd28
  40dd97:	int3   
  40dd98:	adc    al,0xef
  40dd9a:	xor    eax,0x8886c536
  40dd9f:	sbb    al,dl
  40dda1:	ds adc al,0x52
  40dda4:	adc    al,BYTE PTR ds:0x4e487845
  40ddaa:	jg     0x40ddfc
  40ddac:	adc    esi,esp
  40ddae:	cmp    bh,BYTE PTR [edi+0x3e]
  40ddb1:	dec    esi
  40ddb2:	(bad)  
  40ddb3:	jg     0x40ddf9
  40ddb5:	(bad)  
  40ddb6:	push   0xaf7befc
  40ddbb:	mov    esi,0x5f119f5c
  40ddc0:	add    eax,0x688482dd
  40ddc5:	mov    al,0x85
  40ddc7:	dec    ecx
  40ddc8:	mov    ch,0x96
  40ddca:	sub    DWORD PTR [esi+0x7b889189],esp
  40ddd0:	sbb    al,0xcb
  40ddd2:	icebp  
  40ddd3:	mov    bl,0xb
  40ddd5:	je     0x40dd9e
  40ddd7:	mov    ah,0x98
  40ddd9:	add    eax,0xa1242849
  40ddde:	pop    ss
  40dddf:	(bad)  
  40dde0:	adc    ah,BYTE PTR [esi]
  40dde2:	cmp    cl,dh
  40dde4:	add    eax,0x1386aa6d
  40dde9:	xchg   BYTE PTR [ebx+edi*8+0x4ff00f08],ah
  40ddf0:	xor    eax,DWORD PTR [esi]
  40ddf2:	cmc    
  40ddf3:	mov    esi,0x904856d2
  40ddf8:	xor    BYTE PTR [eax-0xe281228],bl
  40ddfe:	and    eax,0xcc172ebb
  40de03:	jb     0x40de2a
  40de05:	push   ecx
  40de06:	(bad)  
  40de07:	pop    ecx
  40de08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de09:	dec    ecx
  40de0a:	dec    ebx
  40de0b:	aaa    
  40de0c:	xor    al,0xed
  40de0e:	push   esi
  40de0f:	(bad)  
  40de11:	jg     0x40de51
  40de13:	test   al,0x26
  40de16:	jno    0x40de67
  40de18:	sbb    eax,0x3ef1b0fb
  40de1d:	idiv   BYTE PTR [edx-0x2186d17]
  40de23:	and    al,0x82
  40de25:	jne    0x40de5b
  40de27:	ds into 
  40de29:	ja     0x40de5a
  40de2b:	cmp    bh,dh
  40de2d:	mov    al,ds:0x7cf5c6e2
  40de32:	dec    ecx
  40de33:	femms  
  40de35:	sbb    al,BYTE PTR [eax]
  40de37:	pop    edx
  40de38:	xchg   edi,eax
  40de39:	dec    edi
  40de3a:	arpl   WORD PTR [ecx+0x794c97d0],bp
  40de40:	scas   eax,DWORD PTR es:[edi]
  40de41:	imul   esi,DWORD PTR [ecx-0x27],0x92dbdb83
  40de48:	or     esp,DWORD PTR [esi-0x16fded32]
  40de4e:	loop   0x40de93
  40de50:	rol    BYTE PTR [edi+0x4d],1
  40de53:	mov    esp,0x353e0995
  40de58:	sub    BYTE PTR [edi+0x547b6c3a],0x65
  40de5f:	jbe    0x40de39
  40de61:	aad    0x32
  40de63:	dec    esp
  40de64:	dec    ecx
  40de65:	adc    bh,al
  40de67:	out    dx,al
  40de68:	jp     0x40ded6
  40de6a:	push   eax
  40de6b:	icebp  
  40de6c:	jg     0x40deba
  40de6e:	test   eax,0x8eb8de36
  40de73:	dec    eax
  40de74:	mov    fs,edi
  40de76:	xchg   ebp,eax
  40de77:	fucomp st(2)
  40de79:	mov    esi,DWORD PTR [edi-0x5844c69f]
  40de7f:	popf   
  40de80:	pop    ds
  40de81:	sub    edx,DWORD PTR [esi]
  40de83:	sbb    BYTE PTR [ecx-0x50],cl
  40de86:	push   edi
  40de87:	mov    BYTE PTR [edx+0x2df3321b],ch
  40de8d:	fsub   DWORD PTR [ebx-0x5c]
  40de90:	sbb    dh,0xcd
  40de93:	sbb    cl,al
  40de95:	fs (bad) 
  40de97:	das    
  40de98:	std    
  40de99:	mov    ah,0xd8
  40de9b:	dec    eax
  40de9c:	stos   BYTE PTR es:[edi],al
  40de9d:	pop    edi
  40de9e:	jecxz  0x40de60
  40dea0:	jle    0x40de8d
  40dea2:	cmp    DWORD PTR [ecx],eax
  40dea4:	xchg   BYTE PTR [ebx],bl
  40dea6:	jb     0x40de43
  40dea8:	adc    eax,0x3001a0ae
  40dead:	dec    ebx
  40deae:	cmc    
  40deaf:	inc    esp
  40deb0:	mov    eax,0xe9fe4294
  40deb5:	xchg   ebp,eax
  40deb6:	lea    esp,[ecx+0x21d3a810]
  40debc:	mov    ebx,0xd49101fa
  40dec1:	js     0x40de9e
  40dec3:	or     BYTE PTR [eax+0x1d],dh
  40dec6:	push   es
  40dec7:	(bad)  
  40dec8:	mov    ebx,ebx
  40deca:	out    0x76,eax
  40decc:	add    al,bl
  40dece:	ins    BYTE PTR es:[edi],dx
  40decf:	or     ebp,DWORD PTR [ebx]
  40ded1:	jne    0x40df3d
  40ded3:	mov    edx,0x42e63de
  40ded8:	push   eax
  40ded9:	inc    ebp
  40deda:	outs   dx,BYTE PTR ds:[esi]
  40dedb:	pop    ecx
  40dedc:	cmp    eax,0x1b121a21
  40dee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee2:	cmp    BYTE PTR ss:[edi+0x3a],ah
  40dee6:	lahf   
  40dee7:	(bad)  
  40dee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee9:	loope  0x40df4d
  40deeb:	aaa    
  40deec:	jg     0x40df4e
  40deee:	out    0x35,al
  40def0:	sbb    bh,dh
  40def2:	pop    esp
  40def3:	adc    edi,edi
  40def5:	add    ecx,DWORD PTR [edi+0x1264c9ee]
  40defb:	inc    eax
  40defc:	(bad)  
  40defd:	push   eax
  40defe:	pushf  
  40deff:	mov    BYTE PTR [esp+eax*2-0x2d],bh
  40df03:	scas   eax,DWORD PTR es:[edi]
  40df04:	push   ecx
  40df05:	adc    bh,BYTE PTR [ebp-0x74]
  40df08:	(bad)  
  40df09:	lahf   
  40df0a:	mov    bh,0x65
  40df0c:	adc    DWORD PTR [edi-0x62],esp
  40df0f:	dec    ebx
  40df10:	push   edx
  40df11:	mov    ch,0xf0
  40df13:	test   bl,ah
  40df15:	std    
  40df16:	imul   eax
  40df18:	push   edi
  40df19:	adc    BYTE PTR [ecx+0x1c2beb00],0xcc
  40df20:	lods   al,BYTE PTR ds:[esi]
  40df21:	jb     0x40df16
  40df23:	les    edx,FWORD PTR [ecx-0x16cadbb5]
  40df29:	loop   0x40df43
  40df2b:	push   ebp
  40df2c:	mov    ch,0xae
  40df2e:	xchg   ecx,eax
  40df2f:	mov    WORD PTR [edi+0x551b86d0],fs
  40df35:	jno    0x40df28
  40df37:	(bad)  
  40df38:	fdivr  st(4),st
  40df3a:	mov    edx,0xbe373212
  40df3f:	ror    DWORD PTR ds:0x1a5db471,cl
  40df45:	inc    edi
  40df46:	ret    
  40df47:	mov    ebx,0xc0683497
  40df4c:	ss fninit 
  40df4f:	add    dh,BYTE PTR [ebx+eax*1+0x64fa1f40]
  40df56:	arpl   WORD PTR [edx],dx
  40df58:	dec    ebx
  40df59:	cmp    DWORD PTR [ebx+0x50],ebx
  40df5c:	stos   BYTE PTR es:[edi],al
  40df5d:	les    ebx,FWORD PTR [ebp-0x60]
  40df60:	(bad)  
  40df61:	loope  0x40df7c
  40df63:	cmc    
  40df64:	daa    
  40df65:	mov    ds:0x2cf47137,eax
  40df6a:	lds    edx,FWORD PTR [eax]
  40df6c:	and    eax,0x9f1d11ba
  40df71:	test   DWORD PTR [ecx],edi
  40df73:	imul   ebx,edx,0x8f8e9a49
  40df79:	pop    eax
  40df7a:	int3   
  40df7b:	add    al,0xef
  40df7d:	sti    
  40df7e:	sbb    al,0xc2
  40df80:	dec    ebx
  40df81:	retf   0x5131
  40df84:	and    cl,bl
  40df86:	out    dx,eax
  40df87:	prefetch BYTE PTR [ebx+0x64736568]
  40df8e:	push   edi
  40df8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df90:	test   eax,0xbfc1e543
  40df95:	in     eax,0x32
  40df97:	inc    ecx
  40df98:	int    0x13
  40df9a:	in     al,dx
  40df9b:	jb     0x40dfc9
  40df9d:	jno    0x40df85
  40df9f:	mov    dh,0x79
  40dfa2:	aas    
  40dfa3:	pop    esp
  40dfa5:	sbb    BYTE PTR [ecx-0x5bb66e48],bh
  40dfab:	cmp    al,0x9c
  40dfad:	shl    al,cl
  40dfaf:	test   BYTE PTR [esi+edx*4+0x166dce22],bh
  40dfb6:	cmp    DWORD PTR [edx],0x73
  40dfb9:	fisubr WORD PTR [ebx+0xeeaac7f]
  40dfbf:	cmp    dh,BYTE PTR [edx+0x4dcb34eb]
  40dfc5:	adc    al,0x7e
  40dfc7:	inc    esp
  40dfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfc9:	stos   DWORD PTR es:[edi],eax
  40dfca:	ins    BYTE PTR es:[edi],dx
  40dfcb:	mov    al,0x6d
  40dfcd:	push   eax
  40dfce:	adc    bh,BYTE PTR [edx+esi*2+0xc]
  40dfd2:	and    al,0x83
  40dfd4:	mov    al,ds:0x1e8477bb
  40dfd9:	push   ebx
  40dfda:	cmc    
  40dfdb:	xchg   edx,eax
  40dfdc:	aad    0x70
  40dfde:	test   DWORD PTR [edx-0x3d],ecx
  40dfe1:	out    dx,eax
  40dfe2:	push   edx
  40dfe3:	test   ecx,0xab3be791
  40dfe9:	(bad)  
  40dfea:	cli    
  40dfeb:	daa    
  40dfec:	(bad)  
  40dfed:	xchg   esp,eax
  40dfee:	jo     0x40e045
  40dff0:	jbe    0x40e062
  40dff2:	adc    al,0xef
  40dff4:	mov    dl,0x49
  40dff6:	in     eax,dx
  40dff7:	add    bh,BYTE PTR [eax+0x6f]
  40dffa:	stos   BYTE PTR es:[edi],al
  40dffb:	(bad)  
  40dffc:	xchg   ebx,eax
  40dffd:	popf   
  40dffe:	test   al,0x61
  40e000:	add    al,0x56
  40e002:	or     BYTE PTR [edi+0x1d],cl
  40e005:	add    ebp,eax
  40e007:	xchg   esi,eax
  40e008:	xchg   esp,eax
  40e009:	ins    DWORD PTR es:[edi],dx
  40e00a:	sub    eax,0xf494e1de
  40e00f:	aaa    
  40e010:	inc    ecx
  40e011:	mov    dh,0xe2
  40e013:	aad    0x99
  40e015:	lea    eax,[di]
  40e018:	stos   BYTE PTR es:[edi],al
  40e019:	loopne 0x40e06f
  40e01b:	jmp    0x40e06d
  40e01d:	retf   
  40e01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e01f:	push   esi
  40e020:	xor    BYTE PTR [ebp-0x2b6371f3],0x2c
  40e027:	jns    0x40dfdb
  40e029:	in     al,dx
  40e02a:	leave  
  40e02b:	adc    al,0xff
  40e02d:	sbb    eax,0xf59c1152
  40e032:	and    ch,BYTE PTR [ebp-0x46]
  40e035:	jle    0x40e0a4
  40e037:	pop    ecx
  40e038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e039:	add    eax,0x9269b600
  40e03e:	(bad)  
  40e03f:	aaa    
  40e040:	mov    bl,0x43
  40e042:	add    al,0x83
  40e044:	push   es
  40e045:	cmp    ch,BYTE PTR [esi-0x4f]
  40e048:	push   esi
  40e049:	push   0x78
  40e04b:	icebp  
  40e04c:	or     edi,DWORD PTR [eax+0x6c165067]
  40e052:	(bad)  
  40e053:	aam    0xa8
  40e055:	add    DWORD PTR [esp+ebx*1],ebx
  40e058:	push   edi
  40e059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e05a:	add    DWORD PTR [ecx+ecx*8],eax
  40e05d:	outs   dx,DWORD PTR ds:[esi]
  40e05e:	sbb    al,0x0
  40e060:	(bad)  
  40e061:	dec    ebx
  40e062:	das    
  40e063:	jecxz  0x40e047
  40e065:	lea    edx,[ebp+0x46ef843]
  40e06b:	sub    eax,0xf073af22
  40e070:	addr16 mov ebp,0x801e4271
  40e076:	(bad)  
  40e077:	xor    eax,0xda8cc2d4
  40e07c:	mov    dl,0xc2
  40e07e:	xlat   BYTE PTR ds:[ebx]
  40e07f:	imul   eax,DWORD PTR [ebx+0x20713a4d],0x5a
  40e086:	push   ecx
  40e087:	es pusha 
  40e089:	je     0x40e0c1
  40e08b:	inc    edi
  40e08c:	mov    ch,BYTE PTR [ecx-0x1335cc4a]
  40e092:	lea    esp,[esi]
  40e094:	pop    ebx
  40e095:	or     bl,al
  40e097:	inc    edi
  40e098:	aaa    
  40e099:	aad    0xef
  40e09b:	or     eax,0xc6a70c29
  40e0a0:	fisub  WORD PTR [esi+esi*8]
  40e0a3:	je     0x40e09b
  40e0a5:	xchg   ebp,eax
  40e0a6:	xchg   DWORD PTR [ebp+0x32],ebp
  40e0a9:	cmp    bh,BYTE PTR [ecx-0x79]
  40e0ac:	push   ebp
  40e0ad:	cmp    al,0x72
  40e0af:	std    
  40e0b0:	pop    ss
  40e0b1:	icebp  
  40e0b2:	sbb    BYTE PTR [ecx+0x13927c37],ah
  40e0b8:	mov    eax,ds:0x7640437c
  40e0bd:	sub    eax,0x1e26fea2
  40e0c2:	sbb    DWORD PTR [ecx*1+0x240c8c22],ebx
  40e0c9:	cmp    eax,0x26b2a8e5
  40e0ce:	int    0xc5
  40e0d0:	dec    esp
  40e0d1:	mov    eax,0x1dfe717f
  40e0d6:	sar    DWORD PTR [ecx],cl
  40e0d8:	call   0xc7eb:0x80090d6f
  40e0df:	pop    ecx
  40e0e0:	mov    edx,0xbacea419
  40e0e5:	inc    edx
  40e0e6:	jns    0x40e0c0
  40e0e8:	mov    WORD PTR [ecx],ds
  40e0ea:	xor    al,0x12
  40e0ec:	sahf   
  40e0ed:	ror    BYTE PTR [edi+0x6d],cl
  40e0f0:	mov    ebp,ebx
  40e0f2:	lahf   
  40e0f3:	lods   al,BYTE PTR ds:[esi]
  40e0f4:	outs   dx,BYTE PTR ds:[esi]
  40e0f5:	cmp    eax,0xcaca56f8
  40e0fa:	pop    ebx
  40e0fb:	mov    eax,ds:0x1523f58e
  40e100:	xchg   esi,eax
  40e101:	mov    al,cl
  40e103:	ja     0x40e175
  40e105:	cmc    
  40e106:	call   0x5b8d187a
  40e10b:	mov    esi,0x4d108788
  40e110:	mov    eax,0xfcea1f3a
  40e115:	mov    esp,0xf7943efe
  40e11a:	cmp    al,BYTE PTR [ecx+ecx*4-0x78]
  40e11e:	and    al,0xd7
  40e120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e121:	test   ah,ah
  40e123:	pushf  
  40e124:	rcr    BYTE PTR [ecx-0x14],0x9a
  40e128:	je     0x40e1a4
  40e12a:	push   ds
  40e12b:	fcom   DWORD PTR [eax-0x4c]
  40e12e:	test   eax,0x902321fb
  40e133:	and    bh,BYTE PTR [edi+edi*1]
  40e136:	retf   0xbe1c
  40e139:	pop    es
  40e13a:	clc    
  40e13b:	add    cl,al
  40e13d:	adc    esi,DWORD PTR [ebx-0x4b8129e5]
  40e143:	sbb    esp,DWORD PTR [edx-0x2c116d27]
  40e149:	enter  0xe7c6,0xcd
  40e14d:	repnz pop esi
  40e14f:	shl    DWORD PTR [ecx+0x38f72e9f],1
  40e155:	jnp    0x40e138
  40e157:	cld    
  40e158:	mov    ecx,0x97594c9c
  40e15d:	imul   ebp,ebx,0x674e5906
  40e163:	lds    ebp,FWORD PTR [ebp+0x65]
  40e166:	xchg   ebp,eax
  40e167:	jns    0x40e11b
  40e169:	mov    al,0xa8
  40e16b:	out    0x76,al
  40e16d:	and    BYTE PTR [esi],0xf5
  40e170:	add    ch,BYTE PTR [esi+0x6c68b983]
  40e176:	icebp  
  40e177:	fcomp  DWORD PTR [eax+eax*4]
  40e17a:	dec    ebx
  40e17b:	mov    ds:0xb593587d,al
  40e180:	adc    BYTE PTR [edx+0x1d73a4f3],dh
  40e186:	xchg   ecx,eax
  40e187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e188:	fcomip st,st(4)
  40e18a:	xor    al,0xa5
  40e18c:	sti    
  40e18d:	cmp    eax,0x72639363
  40e192:	pop    eax
  40e193:	pop    edx
  40e194:	test   BYTE PTR [eax],ah
  40e196:	lds    eax,FWORD PTR [ebx]
  40e198:	lods   al,BYTE PTR ds:[esi]
  40e199:	add    DWORD PTR [esi+0x39],0xffffff9a
  40e19d:	add    BYTE PTR [ebx],0x99
  40e1a0:	aad    0x3f
  40e1a2:	xlat   BYTE PTR ds:[ebx]
  40e1a3:	es mov dh,0x2f
  40e1a6:	sub    DWORD PTR [eax+0x544e4a56],esi
  40e1ac:	pop    edi
  40e1ad:	(bad)  
  40e1ae:	push   esp
  40e1af:	mov    ds:0xf55751bb,al
  40e1b4:	out    0x5,eax
  40e1b6:	or     BYTE PTR [edx-0xa],0xcd
  40e1ba:	pusha  
  40e1bb:	sub    al,0xe6
  40e1bd:	mov    edx,0x4c14de84
  40e1c2:	lds    edi,FWORD PTR [ecx+ebx*8+0x5e703ee3]
  40e1c9:	std    
  40e1ca:	mov    ds:0x2056516d,al
  40e1cf:	sbb    eax,0x5bc55347
  40e1d4:	imul   edi,DWORD PTR [eax],0x25
  40e1d7:	add    eax,0xb0fd13da
  40e1dc:	and    eax,0x4b27791d
  40e1e1:	adc    eax,DWORD PTR [edi+0x179bc1ac]
  40e1e7:	fcmovbe st,st(0)
  40e1e9:	dec    ecx
  40e1ea:	pop    esp
  40e1eb:	imul   ebx,DWORD PTR [edi-0x2857d51c],0xe1a29423
  40e1f5:	and    DWORD PTR [edx],ecx
  40e1f7:	sub    edx,esp
  40e1f9:	std    
  40e1fa:	jl     0x40e1d1
  40e1fc:	gs cmp eax,0x41b7c92b
  40e202:	push   0x42
  40e204:	fucomp st(0)
  40e206:	hlt    
  40e207:	loopne 0x40e22c
  40e209:	sbb    eax,0xa3bd5cc4
  40e20e:	es scas al,BYTE PTR es:[edi]
  40e210:	mov    al,ch
  40e212:	mov    BYTE PTR [esi],dl
  40e214:	and    DWORD PTR [bx+di-0x40],esi
  40e218:	mov    ch,0xc3
  40e21a:	pop    ss
  40e21b:	pop    ecx
  40e21c:	add    al,0xf9
  40e21e:	ret    0xbff2
  40e221:	or     ah,BYTE PTR [ebx+eax*1-0x6e]
  40e225:	xor    DWORD PTR [edx],esi
  40e227:	ret    
  40e228:	dec    ebx
  40e229:	sub    BYTE PTR [ebp+0x332db92b],bh
  40e22f:	addr16 dec edi
  40e231:	inc    esi
  40e232:	pushf  
  40e233:	cmp    eax,0x7041cbd1
  40e238:	adc    eax,0xb151b12f
  40e23d:	and    al,0x4e
  40e23f:	fild   WORD PTR [edi]
  40e241:	(bad)  
  40e242:	in     al,dx
  40e243:	pushf  
  40e244:	xor    dl,BYTE PTR [esi*4+0x65ad3391]
  40e24b:	xchg   ebp,eax
  40e24c:	adc    eax,0x56afdd3a
  40e251:	dec    ecx
  40e252:	fcmovbe st,st(0)
  40e254:	ins    BYTE PTR es:[edi],dx
  40e255:	push   DWORD PTR [ecx]
  40e257:	push   esp
  40e258:	push   edi
  40e259:	mov    ds:0x9f87ba2,eax
  40e25e:	mov    eax,ds:0x5fe24f03
  40e263:	fs fwait
  40e265:	xchg   ebp,eax
  40e266:	sub    al,0xee
  40e268:	pop    ecx
  40e269:	pusha  
  40e26a:	shl    ch,1
  40e26c:	xor    al,0xa9
  40e26e:	xchg   eax,eax
  40e270:	out    0x64,eax
  40e272:	cmp    DWORD PTR ds:0xa9fb0b92,esp
  40e278:	dec    edx
  40e279:	cmp    al,0x47
  40e27b:	aas    
  40e27c:	aas    
  40e27d:	mov    esi,0xba64be9b
  40e282:	push   ebp
  40e283:	rcr    DWORD PTR [ecx+eiz*4+0x10723232],cl
  40e28a:	imul   ebp,ecx,0xffffffe3
  40e28d:	pushf  
  40e28e:	xchg   DWORD PTR [ebp+0x9cdc298],eax
  40e294:	mov    ebp,0x565b1e4d
  40e299:	mul    al
  40e29b:	push   ebp
  40e29c:	lock loop 0x40e2fb
  40e29f:	ja     0x40e295
  40e2a1:	(bad)  
  40e2a2:	push   ebp
  40e2a3:	rcr    DWORD PTR [edi+ebx*1+0x202436a0],cl
  40e2aa:	lods   al,BYTE PTR ds:[esi]
  40e2ab:	sti    
  40e2ac:	inc    esi
  40e2ad:	(bad)  
  40e2ae:	push   ecx
  40e2af:	enter  0x265e,0xcd
  40e2b3:	sbb    al,0xdd
  40e2b5:	test   DWORD PTR [ebx-0x61],0x633975bb
  40e2bc:	(bad)  
  40e2be:	jae    0x40e27b
  40e2c0:	xchg   edx,eax
  40e2c1:	xor    eax,0xdd3e6ec2
  40e2c6:	mov    ds:0xca548981,eax
  40e2cb:	or     ecx,ebp
  40e2cd:	xchg   ebx,eax
  40e2ce:	(bad)
  40e2d2:	add    al,0xf5
  40e2d4:	repz mov ah,BYTE PTR [edx]
  40e2d7:	repnz xor eax,0x78a5db43
  40e2dd:	test   al,0xfb
  40e2df:	mov    edx,0x54a59ba1
  40e2e4:	mov    al,ds:0xbcb8a807
  40e2e9:	sbb    al,bl
  40e2eb:	iret   
  40e2ec:	jbe    0x40e287
  40e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ef:	fisubr WORD PTR [edx+0x45d9d987]
  40e2f5:	push   ebx
  40e2f6:	outs   dx,BYTE PTR ds:[esi]
  40e2f7:	sbb    esi,ecx
  40e2f9:	(bad)  
  40e2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2fb:	adc    esi,DWORD PTR fs:[edi+0x2e]
  40e2ff:	add    eax,0x7e707a12
  40e304:	(bad)
  40e307:	(bad)  [edx-0x7d]
  40e30a:	lahf   
  40e30b:	scas   eax,DWORD PTR es:[edi]
  40e30c:	sub    DWORD PTR [esi+0x38782894],eax
  40e312:	sub    bh,dh
  40e314:	pop    ss
  40e315:	inc    esp
  40e316:	(bad)  
  40e318:	sbb    BYTE PTR [eax+ecx*2-0x430991a7],0x55
  40e320:	push   esp
  40e321:	adc    BYTE PTR [edx-0x5ed8df2f],dh
  40e327:	out    dx,eax
  40e328:	inc    edx
  40e329:	xchg   ecx,eax
  40e32a:	test   eax,0x99b5e898
  40e32f:	imul   edx,DWORD PTR [ebx+ebx*4+0x41],0x60
  40e334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e335:	dec    esp
  40e336:	xor    al,0x1d
  40e338:	dec    edi
  40e339:	je     0x40e2c7
  40e33b:	rol    BYTE PTR [ecx+0x53169c80],0xfb
  40e342:	cdq    
  40e343:	(bad)  
  40e345:	je     0x40e32a
  40e347:	loopne 0x40e36c
  40e349:	mov    esp,0x3e617e81
  40e34e:	(bad)  
  40e350:	adc    edx,DWORD PTR [esi]
  40e352:	xor    esp,edx
  40e354:	pop    ds
  40e355:	addr16 popf 
  40e357:	xlat   BYTE PTR ds:[ebx]
  40e358:	mov    al,ds:0x420dc7fb
  40e35d:	inc    ecx
  40e35e:	fisttp DWORD PTR [ebp+0x2378e6d2]
  40e364:	xchg   edi,eax
  40e365:	mov    ah,0x6f
  40e367:	add    DWORD PTR [esp+eiz*8-0x2b],esi
  40e36b:	rcl    BYTE PTR [esi-0x282b3958],1
  40e371:	and    BYTE PTR [ebx+0x78],0xe4
  40e375:	retf   0x66c0
  40e378:	test   al,0x6c
  40e37a:	retf   0xef39
  40e37d:	rol    BYTE PTR [ecx-0x572dadcd],cl
  40e383:	cmp    dl,cl
  40e385:	or     eax,0x4e61f647
  40e38a:	mov    eax,0x320012b4
  40e38f:	sub    edx,DWORD PTR [ebx+0x14]
  40e392:	shl    BYTE PTR [ebx+0x5149d341],cl
  40e398:	dec    ebp
  40e399:	sbb    BYTE PTR [eax],0xdb
  40e39c:	fs push ds
  40e39e:	out    0x19,eax
  40e3a0:	or     eax,0x69c4345a
  40e3a5:	loope  0x40e3de
  40e3a7:	mov    edi,0x98d83922
  40e3ac:	jne    0x40e391
  40e3ae:	imul   edi,DWORD PTR [ecx-0x389314e4],0xffffffad
  40e3b5:	shl    dl,1
  40e3b7:	and    al,0x94
  40e3b9:	push   ecx
  40e3ba:	mov    cl,0xa5
  40e3bc:	ins    DWORD PTR es:[edi],dx
  40e3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3be:	xor    esp,DWORD PTR [esi]
  40e3c0:	imul   edi,eax,0xffffffc4
  40e3c3:	or     BYTE PTR [edi],dh
  40e3c5:	or     cl,BYTE PTR [eax+ebx*4]
  40e3c8:	ja     0x40e356
  40e3ca:	arpl   di,si
  40e3cc:	jns    0x40e350
  40e3ce:	ins    BYTE PTR es:[edi],dx
  40e3cf:	sub    bh,bh
  40e3d1:	dec    ecx
  40e3d2:	add    DWORD PTR [ebp+0xd],ecx
  40e3d5:	sbb    edx,esi
  40e3d7:	lods   eax,DWORD PTR ds:[esi]
  40e3d8:	es (bad) 
  40e3da:	mov    ds:0xda22e252,al
  40e3df:	fidiv  WORD PTR [edx+esi*8+0x20]
  40e3e3:	xor    cl,ch
  40e3e5:	int3   
  40e3e6:	xchg   ebp,eax
  40e3e7:	cmc    
  40e3e8:	or     BYTE PTR [esi+0x2],ah
  40e3eb:	mov    al,ds:0x9f98ad85
  40e3f0:	iret   
  40e3f1:	cmp    cl,bh
  40e3f3:	mov    ds:0x35d78727,eax
  40e3f8:	scas   al,BYTE PTR es:[edi]
  40e3f9:	ss jmp 0x40e3b9
  40e3fc:	mov    eax,0x8f225340
  40e401:	cli    
  40e402:	call   0x1cf1:0xe5ef1ff6
  40e409:	jmp    0x40e3f2
  40e40b:	and    DWORD PTR [edx],esp
  40e40d:	out    0xe7,al
  40e40f:	jnp    0x40e3e0
  40e411:	cmp    DWORD PTR [ebp+0x1b0fa585],ecx
  40e417:	mov    es,WORD PTR [ebp+0x6c9f2fb3]
  40e41d:	(bad)  
  40e41e:	sbb    bh,BYTE PTR [edi+0x6fb2d59d]
  40e424:	stc    
  40e425:	mov    ecx,0xe285909
  40e42a:	loop   0x40e3da
  40e42c:	loope  0x40e400
  40e42e:	inc    eax
  40e42f:	mov    al,ds:0xc000f562
  40e434:	or     DWORD PTR ds:0x8b0193a5,ebp
  40e43a:	mov    esi,0x8245ce14
  40e43f:	cwde   
  40e440:	loop   0x40e3d2
  40e442:	xchg   esi,eax
  40e443:	mul    edx
  40e445:	xor    ah,dl
  40e447:	lods   al,BYTE PTR ds:[esi]
  40e448:	mov    ds:0xcf724fe6,eax
  40e44d:	mov    ch,dl
  40e44f:	(bad)  
  40e452:	cmp    dh,dl
  40e454:	xchg   esi,eax
  40e455:	sub    ecx,esi
  40e457:	or     al,0xa3
  40e459:	xor    al,0x1e
  40e45b:	push   edi
  40e45c:	pop    ebp
  40e45d:	mov    DWORD PTR [ebx-0x19f953f7],eax
  40e463:	jmp    0xb7b9eca5
  40e468:	sub    DWORD PTR [esi+0x289f7017],ebp
  40e46e:	stc    
  40e46f:	jp     0x40e441
  40e471:	pop    esp
  40e472:	jns    0x40e400
  40e474:	ror    DWORD PTR [edi+eax*1+0x19],0x37
  40e479:	out    0x62,al
  40e47b:	pop    esi
  40e47c:	inc    esi
  40e47d:	je     0x40e470
  40e47f:	xchg   ebp,eax
  40e480:	xchg   DWORD PTR [edi-0x62],esi
  40e483:	ret    0x44b
  40e486:	loopne 0x40e4b7
  40e488:	and    ecx,ebp
  40e48a:	imul   ecx,esi,0x79
  40e48d:	(bad)  
  40e48e:	sub    DWORD PTR [ebp-0x46baeae6],esi
  40e494:	repz cmp DWORD PTR [ecx],esi
  40e497:	pop    esp
  40e498:	adc    dl,dl
  40e49a:	mov    ecx,0xcd9c7786
  40e49f:	sbb    edi,DWORD PTR ds:0x575c8173
  40e4a5:	fsub   DWORD PTR [ebx+0x75d9f0af]
  40e4ab:	scas   eax,DWORD PTR es:[edi]
  40e4ac:	icebp  
  40e4ad:	dec    eax
  40e4ae:	jp     0x40e46d
  40e4b0:	aad    0xed
  40e4b2:	inc    ebx
  40e4b3:	push   ds
  40e4b4:	pop    esp
  40e4b5:	out    dx,al
  40e4b6:	sbb    DWORD PTR [ebp+0x36],0x54
  40e4ba:	aam    0x5e
  40e4bc:	mov    ebx,0x4be8a8fa
  40e4c1:	push   esp
  40e4c2:	mov    esi,0x77e07353
  40e4c7:	dec    ebp
  40e4c8:	sbb    al,0xae
  40e4ca:	jns    0x40e49a
  40e4cc:	data16 test al,0xcb
  40e4cf:	and    al,0x78
  40e4d1:	and    cl,ch
  40e4d3:	lahf   
  40e4d4:	dec    esi
  40e4d5:	outs   dx,BYTE PTR ds:[esi]
  40e4d6:	inc    ecx
  40e4d7:	out    0xac,eax
  40e4d9:	test   eax,0xceee88fe
  40e4de:	dec    eax
  40e4df:	fcom   DWORD PTR [ecx+0x11]
  40e4e2:	mov    ebx,0x8a4c9622
  40e4e7:	push   esi
  40e4e8:	push   ecx
  40e4e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4ea:	(bad)  
  40e4eb:	bound  edi,QWORD PTR [ecx-0x3112da82]
  40e4f1:	or     esi,esp
  40e4f3:	inc    edi
  40e4f4:	ret    
  40e4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4f6:	xlat   BYTE PTR ds:[ebx]
  40e4f7:	test   eax,0x5d8bd816
  40e4fc:	test   eax,0x8b2e2059
  40e501:	dec    ebp
  40e502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e503:	xchg   edi,eax
  40e505:	pusha  
  40e506:	xor    eax,0xaf7d6297
  40e50b:	mov    gs,WORD PTR [ecx]
  40e50d:	jmp    0xd03e:0x1f6c1287
  40e514:	ret    
  40e515:	out    dx,al
  40e516:	das    
  40e517:	or     DWORD PTR ds:0x3fd24a06,0xc138a939
  40e521:	push   eax
  40e522:	mov    ds,WORD PTR [eax]
  40e524:	ds pop ebp
  40e526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e527:	enter  0x6666,0x13
  40e52b:	or     edi,DWORD PTR [edx+0x18]
  40e52e:	mov    ebx,DWORD PTR [ebp-0x10aaff2e]
  40e534:	fisttp DWORD PTR [esi+eiz*8]
  40e537:	xor    eax,0x4d1961e8
  40e53c:	push   ebx
  40e53d:	cmp    bl,BYTE PTR [ecx+0x5027f1e9]
  40e543:	scas   eax,DWORD PTR es:[edi]
  40e544:	add    DWORD PTR [ebx+0x51a18e33],ebx
  40e54a:	xor    eax,0x44650338
  40e54f:	xchg   esp,eax
  40e550:	jp     0x40e545
  40e552:	mov    BYTE PTR [edx],dh
  40e554:	stc    
  40e555:	mov    ?,WORD PTR [esi-0x61]
  40e558:	add    esi,ebp
  40e55a:	jo     0x40e5c8
  40e55c:	test   al,0x22
  40e55e:	mov    bl,0x75
  40e560:	adc    DWORD PTR [edx+0x12796c77],ebx
  40e566:	inc    ebx
  40e567:	sbb    DWORD PTR [eax],0x5e
  40e56a:	rcr    ecx,1
  40e56c:	nop
  40e56d:	mov    ecx,0xa9b8e889
  40e572:	and    eax,0xff694c35
  40e577:	xor    al,0xf6
  40e579:	retf   0x9baa
  40e57c:	sahf   
  40e57d:	int3   
  40e57e:	inc    ebx
  40e57f:	ss aaa 
  40e581:	dec    esp
  40e582:	lahf   
  40e583:	scas   eax,DWORD PTR es:[edi]
  40e584:	mov    ecx,0x1b1c2a6c
  40e589:	dec    BYTE PTR [esi-0x62]
  40e58c:	fstp   TBYTE PTR [esi]
  40e58e:	imul   eax,DWORD PTR [eax+edi*8+0x4bfd6802],0x1a
  40e596:	and    bl,dh
  40e598:	mov    al,BYTE PTR [ecx]
  40e59a:	or     al,0x10
  40e59c:	inc    ebx
  40e59d:	jb     0x40e587
  40e59f:	sub    BYTE PTR [eax+ebx*8],0xe7
  40e5a3:	test   DWORD PTR [ebx+0x5d],edi
  40e5a6:	mov    eax,ds:0x605472ef
  40e5ab:	mov    ch,0x31
  40e5ad:	lds    esi,FWORD PTR [edx]
  40e5af:	or     BYTE PTR [eax-0x7d],dl
  40e5b2:	sti    
  40e5b3:	xchg   DWORD PTR [eax],edx
  40e5b5:	in     al,0x8c
  40e5b7:	rol    BYTE PTR [eax-0x3aa4fc76],1
  40e5bd:	div    eax
  40e5bf:	jle    0x40e5bf
  40e5c1:	xor    BYTE PTR [edi],dl
  40e5c3:	mov    ebx,0x795a53e2
  40e5c8:	sbb    al,0x5f
  40e5ca:	push   ds
  40e5cb:	gs iret 
  40e5cd:	test   eax,0x5d368331
  40e5d2:	dec    esi
  40e5d3:	mov    ebp,0xc5ae9731
  40e5d8:	scas   al,BYTE PTR es:[edi]
  40e5d9:	mov    ds:0xa29f851,eax
  40e5de:	sbb    BYTE PTR [edi],ch
  40e5e0:	cmp    DWORD PTR [edi],edx
  40e5e2:	adc    eax,0x83e06cca
  40e5e7:	je     0x40e5aa
  40e5e9:	std    
  40e5ea:	cmp    BYTE PTR [edi],al
  40e5ec:	push   esp
  40e5ed:	pushf  
  40e5ee:	xor    ecx,DWORD PTR ds:0x5cd622d7
  40e5f4:	fisub  WORD PTR [ebx+0x579d3506]
  40e5fa:	fbld   TBYTE PTR [esi-0x44]
  40e5fd:	sub    eax,0xcee59deb
  40e602:	scas   al,BYTE PTR es:[edi]
  40e603:	aas    
  40e604:	ret    
  40e605:	ror    DWORD PTR [esi],cl
  40e607:	sbb    DWORD PTR [ebx-0x56],esp
  40e60a:	mov    cl,0x20
  40e60c:	popa   
  40e60d:	push   es
  40e60e:	mov    edx,0xd6ee3bac
  40e613:	pop    esp
  40e614:	lock stos DWORD PTR es:[edi],eax
  40e616:	xchg   esp,eax
  40e617:	daa    
  40e618:	and    eax,0x7d49fa65
  40e61d:	lds    esi,FWORD PTR [edi]
  40e61f:	xchg   BYTE PTR [esi+0x58902e13],dl
  40e625:	int3   
  40e626:	bound  edi,QWORD PTR [edi]
  40e628:	mov    eax,ds:0x666e3469
  40e62d:	jbe    0x40e682
  40e62f:	jp     0x40e636
  40e631:	jp     0x40e61e
  40e633:	nop
  40e634:	in     al,0xf0
  40e636:	fistp  QWORD PTR [eax+0x10]
  40e639:	add    DWORD PTR [ebp-0x1d],edx
  40e63c:	push   ds
  40e63d:	pop    ds
  40e63e:	mov    dh,dl
  40e640:	xor    bh,BYTE PTR [ecx+0x5e7492ac]
  40e646:	rcr    DWORD PTR [ebp+0x67d8d3b],cl
  40e64c:	bts    DWORD PTR [ebx-0x5],edi
  40e650:	into   
  40e651:	mov    dl,BYTE PTR [edx]
  40e653:	ficomp WORD PTR [edx-0x16a32eaa]
  40e659:	sub    eax,0xf8915a9e
  40e65e:	ja     0x40e603
  40e660:	pop    es
  40e661:	jl     0x40e6d9
  40e663:	dec    ebp
  40e664:	das    
  40e665:	test   al,0xf4
  40e667:	push   ds
  40e668:	leave  
  40e669:	hlt    
  40e66a:	jae    0x40e65e
  40e66c:	pop    edi
  40e66d:	fiadd  WORD PTR [esi+0x56be0475]
  40e673:	jns    0x40e63e
  40e675:	mov    DWORD PTR [ecx+0x3d],0x5bc82d72
  40e67c:	mov    bl,0x86
  40e67e:	mov    ah,0x7d
  40e680:	imul   edx,ebx,0x27
  40e683:	or     ah,BYTE PTR [edi]
  40e685:	daa    
  40e686:	cmc    
  40e687:	and    edx,edx
  40e689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68a:	pop    esi
  40e68b:	inc    eax
  40e68c:	inc    edi
  40e68d:	mov    bl,0x69
  40e68f:	in     eax,0xb3
  40e691:	jge    0x40e64c
  40e693:	mov    al,BYTE PTR ds:0xfdc3b426
  40e69a:	ror    BYTE PTR [edi],cl
  40e69c:	mov    al,0xf9
  40e69e:	mov    cs,WORD PTR [esi-0x72e56085]
  40e6a4:	inc    edx
  40e6a5:	xchg   edx,eax
  40e6a6:	pushf  
  40e6a7:	and    BYTE PTR [edi+0x26],dl
  40e6aa:	xlat   BYTE PTR ds:[ebx]
  40e6ab:	mov    es,WORD PTR [edi]
  40e6ad:	mov    ebx,0x7ad923e4
  40e6b2:	les    edi,FWORD PTR [eax+0x18]
  40e6b5:	rcr    BYTE PTR [ebp-0x5f],1
  40e6b8:	stos   DWORD PTR es:[edi],eax
  40e6b9:	xor    ebx,DWORD PTR [edi-0x6069659c]
  40e6bf:	rcr    BYTE PTR [eax-0x74cfdf0d],cl
  40e6c5:	inc    esp
  40e6c6:	shl    DWORD PTR [edi+0x10659254],0x8c
  40e6cd:	in     al,dx
  40e6ce:	sti    
  40e6cf:	dec    edx
  40e6d0:	ss push esi
  40e6d2:	sbb    eax,0x6c2a857c
  40e6d7:	pop    es
  40e6d8:	inc    ebp
  40e6d9:	int    0x88
  40e6db:	scas   eax,DWORD PTR es:[edi]
  40e6dc:	add    esi,esi
  40e6de:	fisttp WORD PTR [esi+0x4a34015d]
  40e6e4:	aaa    
  40e6e5:	ror    DWORD PTR [ebp-0x4ff81534],cl
  40e6eb:	stos   BYTE PTR es:[edi],al
  40e6ec:	xchg   ecx,eax
  40e6ed:	pop    edi
  40e6ee:	add    eax,0x3e1b6185
  40e6f3:	(bad)  
  40e6f4:	bound  esp,QWORD PTR [ecx+0x51]
  40e6f7:	out    dx,eax
  40e6f8:	into   
  40e6f9:	cmp    eax,0x36e0312b
  40e6fe:	test   DWORD PTR [ebp-0x6b71e72f],esp
  40e704:	sub    edi,eax
  40e706:	dec    edx
  40e707:	mov    bl,0x46
  40e709:	cmp    BYTE PTR [esi-0xb],dh
  40e70c:	adc    DWORD PTR [ebx+0x38],edi
  40e70f:	mov    ds:0x1082917f,al
  40e714:	cmp    eax,0xdec193ec
  40e719:	(bad)  
  40e71a:	fild   WORD PTR [edi+0x25]
  40e71d:	cdq    
  40e71e:	sub    esi,DWORD PTR [edx+ebx*8+0x6c4f4dcb]
  40e725:	and    al,0x3a
  40e727:	fs pop ss
  40e729:	or     eax,0x6261c3f6
  40e72e:	rcr    DWORD PTR [edi+eiz*8+0x6eb215e4],0x2c
  40e736:	ins    DWORD PTR es:[edi],dx
  40e737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e738:	and    DWORD PTR [eax],ebp
  40e73a:	cmc    
  40e73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e73c:	add    eax,0xb1194004
  40e741:	ret    
  40e742:	push   ebx
  40e743:	sbb    ebx,esi
  40e745:	inc    ecx
  40e746:	dec    edi
  40e747:	sbb    esi,DWORD PTR [esi+0xf8ef140]
  40e74d:	add    al,0x1d
  40e74f:	sti    
  40e750:	mov    esp,0x8c66c5f5
  40e755:	add    esi,0x70ff2fab
  40e75b:	icebp  
  40e75c:	pop    ebp
  40e75d:	pop    edx
  40e75e:	in     eax,dx
  40e75f:	neg    DWORD PTR [eax+0x5e]
  40e762:	xor    BYTE PTR [esi+0x276c3044],al
  40e768:	je     0x40e7cf
  40e76a:	xor    BYTE PTR [ecx+0x36],dh
  40e76d:	in     al,0x5b
  40e76f:	push   edi
  40e770:	push   ss
  40e771:	ins    BYTE PTR es:[edi],dx
  40e772:	call   0x4f98:0xf0b2b652
  40e779:	add    al,0xfb
  40e77b:	pop    ds
  40e77c:	mov    ebx,0x643c90fd
  40e781:	adc    DWORD PTR [ebx+0x10],esp
  40e784:	aas    
  40e785:	mov    ah,0xc1
  40e787:	je     0x40e74f
  40e789:	sub    DWORD PTR ds:0xdd2da51d,esi
  40e78f:	xchg   edi,eax
  40e790:	cdq    
  40e791:	bound  ecx,QWORD PTR [ebp+0x27183bb9]
  40e797:	arpl   WORD PTR [edi+0x1d],bp
  40e79a:	jne    0x40e75d
  40e79c:	push   ecx
  40e79d:	push   es
  40e79e:	(bad)  
  40e79f:	mov    BYTE PTR [ebx+0x2a],cl
  40e7a2:	jnp    0x40e796
  40e7a4:	mov    eax,0xc4848b82
  40e7a9:	jmp    0x40e822
  40e7ab:	aas    
  40e7ac:	push   0xb037b39e
  40e7b1:	push   esi
  40e7b2:	inc    eax
  40e7b3:	jae    0x40e74d
  40e7b5:	je     0x40e75c
  40e7b7:	call   0x8286:0x9d0b7fee
  40e7be:	stc    
  40e7bf:	mov    eax,ds:0xf8c37c67
  40e7c4:	retf   
  40e7c5:	mov    cl,0xff
  40e7c7:	cmp    eax,0x3bb482ad
  40e7cc:	jg     0x40e836
  40e7ce:	pop    ebp
  40e7cf:	stos   DWORD PTR es:[edi],eax
  40e7d0:	push   es
  40e7d1:	in     eax,0xa5
  40e7d3:	xor    eax,0x30d32001
  40e7d8:	sti    
  40e7d9:	inc    ebx
  40e7da:	stc    
  40e7db:	pop    ecx
  40e7dc:	xor    al,0x0
  40e7de:	mov    dh,BYTE PTR ds:0x33f91eef
  40e7e4:	pop    ds
  40e7e5:	lods   eax,DWORD PTR ds:[esi]
  40e7e6:	inc    esp
  40e7e7:	enter  0x4dc9,0xcd
  40e7eb:	or     eax,DWORD PTR [edx-0x73]
  40e7ee:	rcr    ebp,cl
  40e7f0:	shl    BYTE PTR [esi-0x1d7bb7b9],cl
  40e7f6:	and    al,0xa6
  40e7f8:	aam    0xcc
  40e7fa:	stos   BYTE PTR es:[edi],al
  40e7fb:	aad    0x61
  40e7fd:	rcl    BYTE PTR [eax-0x17],cl
  40e800:	inc    esp
  40e801:	add    ecx,eax
  40e803:	lds    esp,FWORD PTR [edi+0x7c]
  40e806:	xor    al,0x28
  40e808:	xchg   edx,eax
  40e809:	mov    bl,ch
  40e80b:	(bad)  
  40e80c:	iret   
  40e80d:	mov    ds:0xbf39ab74,al
  40e812:	mov    eax,0xb1151574
  40e817:	or     eax,DWORD PTR [edi+0x617f2457]
  40e81d:	psrld  mm2,QWORD PTR [esi]
  40e820:	xchg   ebp,eax
  40e821:	pop    ecx
  40e822:	mov    al,cl
  40e824:	jb     0x40e845
  40e826:	loope  0x40e845
  40e828:	(bad)
  40e82c:	pop    ds
  40e82d:	add    ecx,DWORD PTR [edi]
  40e82f:	xlat   BYTE PTR ds:[ebx]
  40e830:	sbb    eax,0x9d83d2f6
  40e835:	mov    eax,0x315cc023
  40e83a:	shr    DWORD PTR [esi-0x4a],1
  40e83d:	es cs mov al,0xd1
  40e841:	(bad)  
  40e842:	je     0x40e824
  40e844:	inc    edi
  40e845:	pop    edx
  40e846:	ret    0x5b84
  40e849:	adc    ah,BYTE PTR [edi-0x2ba7b654]
  40e84f:	push   0x90eb8b8b
  40e854:	jo     0x40e7ee
  40e856:	xchg   DWORD PTR [eax-0x1a],esi
  40e859:	fld    DWORD PTR [edi+0x494d36ac]
  40e85f:	sbb    al,BYTE PTR [eax+esi*1+0x4f195503]
  40e866:	xor    ah,BYTE PTR [eax+0xeabf3c7]
  40e86c:	cmp    eax,0xd9feacb5
  40e871:	into   
  40e872:	and    al,0x62
  40e874:	dec    edi
  40e875:	inc    ecx
  40e876:	(bad)
  40e879:	daa    
  40e87a:	fld    DWORD PTR [edx-0x48]
  40e87d:	test   DWORD PTR [esi],esp
  40e87f:	mov    edi,0x113dbe15
  40e884:	and    dh,BYTE PTR [ebp-0x14]
  40e887:	jmp    0x40e88d
  40e889:	push   ecx
  40e88a:	jl     0x40e83c
  40e88c:	jbe    0x40e884
  40e88e:	sub    bl,ah
  40e890:	mov    edi,0xbe0de2ca
  40e895:	xchg   ebx,eax
  40e896:	out    0x35,eax
  40e898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e899:	(bad)  [ebp+0x4]
  40e89c:	push   ebp
  40e89d:	push   ss
  40e89e:	dec    ebx
  40e89f:	add    eax,0x4e7ebc92
  40e8a4:	add    BYTE PTR [esi-0x4e6e0079],al
  40e8aa:	jp     0x40e895
  40e8ac:	pusha  
  40e8ad:	mov    bh,0x7
  40e8af:	jnp    0x40e85e
  40e8b1:	mov    ch,0xbc
  40e8b3:	(bad)  
  40e8b4:	jb     0x40e83a
  40e8b6:	mov    cl,0x9d
  40e8b8:	xlat   BYTE PTR ds:[ebx]
  40e8b9:	jnp    0x40e83f
  40e8bb:	cmp    ebx,esp
  40e8bd:	push   edx
  40e8be:	jmp    0xd8ab7d89
  40e8c3:	pop    es
  40e8c4:	push   eax
  40e8c5:	ins    BYTE PTR es:[edi],dx
  40e8c6:	dec    esp
  40e8c7:	jge    0x40e87d
  40e8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ca:	push   es
  40e8cb:	jmp    0x6ea19618
  40e8d0:	test   eax,edi
  40e8d2:	mov    esi,0xc9d344a2
  40e8d7:	or     DWORD PTR [ebp+0x32],ebx
  40e8da:	in     al,0xec
  40e8dc:	cmp    cl,BYTE PTR [edx+0x30]
  40e8df:	int    0x7d
  40e8e1:	and    al,0xfa
  40e8e3:	loope  0x40e947
  40e8e5:	sub    BYTE PTR [edx-0x3c],bl
  40e8e8:	mov    edi,0x1284bb98
  40e8ed:	popf   
  40e8ee:	cmp    BYTE PTR [edx],bl
  40e8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f1:	scas   eax,DWORD PTR es:[edi]
  40e8f2:	mov    al,ds:0xa5351d51
  40e8f7:	mov    edx,0x512be53a
  40e8fc:	xchg   edi,eax
  40e8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8fe:	mov    dh,0x71
  40e900:	push   es
  40e901:	jp     0x40e8a0
  40e903:	dec    edx
  40e904:	jmp    0x40e88c
  40e906:	push   es
  40e907:	or     al,0xe1
  40e909:	imul   ecx,DWORD PTR [edx+0x39],0x74
  40e90d:	(bad)  
  40e90e:	xor    dl,ah
  40e910:	mov    dl,ah
  40e912:	lea    ecx,ds:[esi+0xf2df71c]
  40e919:	popf   
  40e91a:	mov    al,ds:0xd02e766d
  40e91f:	int3   
  40e920:	and    esp,DWORD PTR ds:0x865b50b8
  40e926:	pop    esp
  40e927:	pop    DWORD PTR [eax+0xd]
  40e92a:	xor    BYTE PTR [ecx+0x6],ch
  40e92d:	push   edi
  40e92e:	retf   
  40e92f:	inc    ecx
  40e930:	in     al,0x50
  40e932:	pusha  
  40e933:	clc    
  40e934:	pop    ebp
  40e935:	xor    edi,DWORD PTR [eax+0x3e]
  40e938:	pop    eax
  40e939:	push   esi
  40e93a:	retf   
  40e93b:	sbb    ch,BYTE PTR [ebx]
  40e93d:	test   cl,dh
  40e93f:	jp     0x40e93b
  40e941:	push   eax
  40e942:	test   BYTE PTR [ebp-0x29f90732],ah
  40e948:	push   0x82d3ce3f
  40e94d:	repz pop ebp
  40e94f:	and    al,BYTE PTR [edx+0x12]
  40e952:	imul   edx,DWORD PTR [edx+0x44d9a2bb],0xffffffb8
  40e959:	imul   ecx,esp,0x51
  40e95c:	leave  
  40e95d:	iret   
  40e95e:	(bad)  
  40e95f:	and    dh,BYTE PTR [edx]
  40e961:	sbb    bl,BYTE PTR [eax-0x14]
  40e964:	and    al,bh
  40e966:	std    
  40e967:	jmp    0x40e99c
  40e969:	leave  
  40e96a:	mov    al,BYTE PTR [ecx]
  40e96c:	push   ss
  40e96d:	aam    0x28
  40e96f:	mov    dh,0xc5
  40e971:	addr16 inc eax
  40e973:	int    0x52
  40e975:	fadd   QWORD PTR [edx+0x7d]
  40e978:	ror    BYTE PTR [edx],0x87
  40e97b:	cmp    eax,0x8ae3b430
  40e980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e981:	inc    edi
  40e982:	mov    cl,0xd9
  40e984:	push   esp
  40e985:	arpl   dx,di
  40e987:	(bad)
  40e98a:	mov    bl,0x56
  40e98c:	ja     0x40e973
  40e98e:	xor    ecx,DWORD PTR [esi-0x6e]
  40e991:	xor    cl,BYTE PTR [edi+0x2]
  40e994:	xchg   ebx,eax
  40e995:	add    al,0xca
  40e997:	add    al,BYTE PTR [ebx+ebx*8-0x1e]
  40e99b:	jo     0x40e976
  40e99d:	push   esi
  40e99e:	xlat   BYTE PTR ds:[ebx]
  40e99f:	(bad)  
  40e9a0:	rol    BYTE PTR [ebp+0x709aeb1],cl
  40e9a6:	mov    ebp,0xa36a1106
  40e9ab:	mov    eax,ds:0x6e8828d2
  40e9b0:	cld    
  40e9b1:	cmp    al,BYTE PTR [ecx]
  40e9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b4:	jnp    0x40e9a8
  40e9b6:	or     eax,0x53e30e4c
  40e9bb:	push   edx
  40e9bc:	and    eax,0x5fccc9dd
  40e9c1:	pop    ss
  40e9c2:	mov    ch,0xd9
  40e9c4:	out    0xd,eax
  40e9c6:	pop    esp
  40e9c7:	mov    BYTE PTR [edi-0x3c0c7da3],bl
  40e9cd:	sbb    DWORD PTR [ebx-0x7f],esi
  40e9d0:	rcl    BYTE PTR [ebp-0x72],1
  40e9d3:	int3   
  40e9d4:	je     0x40ea1b
  40e9d6:	aad    0xd6
  40e9d8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40e9da:	dec    edi
  40e9db:	hlt    
  40e9dc:	dec    ebp
  40e9dd:	and    bh,ch
  40e9df:	pop    esi
  40e9e0:	or     BYTE PTR [eax],0xaf
  40e9e3:	mov    dh,0xde
  40e9e5:	into   
  40e9e6:	test   eax,0xc7b142a7
  40e9eb:	or     eax,0x5aa34657
  40e9f0:	xchg   esi,eax
  40e9f1:	mov    ds:0x1e310bbc,eax
  40e9f6:	ficomp DWORD PTR [ebx+0x1040df2e]
  40e9fc:	(bad)  
  40e9fd:	sbb    eax,0xcccaaef8
  40ea02:	mov    edi,DWORD PTR [esi-0x68588f12]
  40ea08:	xchg   edx,eax
  40ea09:	xchg   edi,eax
  40ea0a:	(bad)  
  40ea0b:	xchg   ecx,eax
  40ea0c:	jnp    0x40e9c6
  40ea0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea0f:	push   esi
  40ea10:	sbb    esi,edi
  40ea12:	outs   dx,BYTE PTR ds:[esi]
  40ea13:	jno    0x40ea06
  40ea15:	loopne 0x40ea11
  40ea17:	in     eax,dx
  40ea18:	dec    esi
  40ea19:	sti    
  40ea1a:	mov    ah,0x82
  40ea1c:	mov    ebp,0x32ce32e9
  40ea21:	fiadd  WORD PTR [eax]
  40ea23:	xchg   esp,eax
  40ea24:	adc    eax,ebx
  40ea26:	push   ebx
  40ea27:	jns    0x40e9f1
  40ea29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2a:	mov    dl,0x65
  40ea2c:	daa    
  40ea2d:	xor    eax,0x7bd72191
  40ea32:	fmul   QWORD PTR [eax-0x15]
  40ea35:	push   0xffffffdc
  40ea37:	js     0x40ea1e
  40ea39:	push   edi
  40ea3a:	lock pop es
  40ea3c:	je     0x40ea16
  40ea3e:	jg     0x40ea0c
  40ea40:	into   
  40ea41:	outs   dx,BYTE PTR ds:[esi]
  40ea42:	mov    al,0x84
  40ea44:	mov    dh,0xb0
  40ea46:	inc    ebx
  40ea47:	pushf  
  40ea48:	inc    ebx
  40ea49:	or     eax,0x168c305b
  40ea4e:	mov    ds:0x34d5e851,eax
  40ea53:	daa    
  40ea54:	int    0xf0
  40ea56:	xchg   DWORD PTR [eax+edx*1-0x229e8602],esi
  40ea5d:	xchg   DWORD PTR [edi+edi*2+0x50],ebp
  40ea61:	xchg   ecx,eax
  40ea62:	xor    BYTE PTR [ecx+0x2f],bh
  40ea65:	ss call 0x6b33f66f
  40ea6b:	push   esi
  40ea6c:	jl     0x40e9fd
  40ea6e:	adc    al,0x6e
  40ea70:	adc    al,0xee
  40ea72:	aam    0xdc
  40ea74:	mov    ecx,0xf15fdb95
  40ea79:	push   0x5e
  40ea7b:	sbb    al,0x4c
  40ea7d:	nop
  40ea7e:	sub    BYTE PTR [edi],dl
  40ea80:	arpl   WORD PTR [ebx-0x55817db8],si
  40ea86:	xchg   esp,eax
  40ea87:	push   eax
  40ea88:	sub    DWORD PTR [ebp+0x72],edx
  40ea8b:	loop   0x40eaec
  40ea8d:	mov    edx,0x2aac133f
  40ea92:	mov    BYTE PTR [eax+0x6e43cd0],bh
  40ea98:	loope  0x40eabb
  40ea9a:	mov    al,0x85
  40ea9c:	mov    fs,WORD PTR [ecx]
  40ea9e:	xor    al,cl
  40eaa0:	test   BYTE PTR [esi-0x20],bl
  40eaa3:	mov    dl,0x43
  40eaa5:	push   ebp
  40eaa6:	ret    0x699f
  40eaa9:	adc    dh,BYTE PTR [esi+0x25]
  40eaac:	hlt    
  40eaad:	sbb    BYTE PTR [edi+0x63],cl
  40eab0:	pop    es
  40eab1:	lods   al,BYTE PTR ds:[esi]
  40eab2:	(bad)  
  40eab3:	mov    eax,ds:0x2bf6d787
  40eab8:	fdivr  QWORD PTR [esi-0x57]
  40eabb:	or     ch,0xd6
  40eabe:	jb     0x40eafa
  40eac0:	add    al,0x54
  40eac2:	pushf  
  40eac3:	out    0x96,eax
  40eac5:	sahf   
  40eac6:	leave  
  40eac7:	dec    edx
  40eac8:	or     DWORD PTR [edi-0x6cd0b377],0xb6f375c8
  40ead2:	jecxz  0x40ea82
  40ead4:	iret   
  40ead5:	les    edi,FWORD PTR [edx+0x79d23d30]
  40eadb:	add    eax,0x58d8647f
  40eae0:	ss sbb al,0x79
  40eae3:	add    BYTE PTR [ebx-0x80],al
  40eae6:	shl    DWORD PTR [edx+0x6c16a708],0x25
  40eaed:	dec    ebp
  40eaee:	pop    eax
  40eaef:	inc    ebx
  40eaf1:	sti    
  40eaf2:	push   0x7c773612
  40eaf7:	xor    ebx,0x63
  40eafa:	push   cs
  40eafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafc:	mov    eax,ds:0xa2e49fb
  40eb01:	imul   ebx,eax,0x7c
  40eb04:	lahf   
  40eb05:	hlt    
  40eb06:	jecxz  0x40ea9f
  40eb08:	std    
  40eb09:	fcomip st,st(6)
  40eb0b:	test   DWORD PTR [edx+0xd],0x3c3f8fb3
  40eb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb13:	outs   dx,BYTE PTR ds:[esi]
  40eb14:	call   FWORD PTR [edx-0x66]
  40eb17:	dec    eax
  40eb18:	sbb    DWORD PTR [eax+ebp*8+0x153c777],edi
  40eb1f:	jge    0x40eaf2
  40eb21:	mov    edi,0xc4d53fea
  40eb26:	test   al,ah
  40eb28:	sbb    BYTE PTR [eax-0x35],al
  40eb2b:	(bad)  
  40eb2d:	add    eax,ebp
  40eb2f:	shl    dl,0xe9
  40eb32:	and    BYTE PTR [edx+0x69],al
  40eb35:	aad    0xf9
  40eb37:	or     BYTE PTR [edi],ah
  40eb39:	xchg   ecx,eax
  40eb3a:	pop    ss
  40eb3b:	mov    bl,BYTE PTR [ecx-0x52]
  40eb3e:	outs   dx,BYTE PTR ds:[esi]
  40eb3f:	pop    ebx
  40eb40:	sub    dh,BYTE PTR [ebp+0x8]
  40eb43:	mov    al,bh
  40eb45:	mov    al,0x72
  40eb47:	bound  ecx,QWORD PTR [ecx]
  40eb49:	es lahf 
  40eb4b:	cmp    eax,0xba3dea68
  40eb50:	retf   
  40eb51:	rol    dl,cl
  40eb53:	test   al,0xf8
  40eb55:	and    esi,esp
  40eb57:	adc    esi,esp
  40eb59:	mov    BYTE PTR [ecx-0x8],bl
  40eb5c:	xchg   ebp,eax
  40eb5d:	cs stc 
  40eb5f:	xchg   edi,eax
  40eb60:	out    0xa2,eax
  40eb62:	inc    ebx
  40eb63:	lods   al,BYTE PTR ds:[esi]
  40eb64:	xchg   ecx,eax
  40eb65:	sbb    ebx,esi
  40eb67:	mov    dl,ch
  40eb69:	mov    cl,0xe3
  40eb6b:	scas   al,BYTE PTR es:[edi]
  40eb6c:	pop    esi
  40eb6d:	popa   
  40eb6e:	aam    0x62
  40eb70:	xor    eax,0xa37052fc
  40eb75:	cmc    
  40eb76:	out    dx,eax
  40eb77:	inc    eax
  40eb78:	lods   al,BYTE PTR ds:[esi]
  40eb79:	enter  0xfff7,0x34
  40eb7d:	(bad)  
  40eb7e:	mul    DWORD PTR [esi-0x3d0eab18]
  40eb84:	repnz aad 0x3f
  40eb87:	jnp    0x40eb88
  40eb89:	or     BYTE PTR [eax-0x2c],0x0
  40eb8d:	dec    edx
  40eb8e:	out    0xe8,eax
  40eb90:	or     ah,BYTE PTR [edx-0x18705824]
  40eb96:	xchg   DWORD PTR [ebx-0x6a4ff787],edx
  40eb9c:	adc    BYTE PTR [ebx+0x4d1808a7],0xde
  40eba3:	jns    0x40eb35
  40eba5:	and    al,0x72
  40eba7:	pop    es
  40eba8:	add    ah,ah
  40ebaa:	push   cs
  40ebab:	or     al,0xeb
  40ebad:	xchg   edx,eax
  40ebae:	sub    esi,DWORD PTR [ebp-0x47]
  40ebb1:	inc    ebp
  40ebb2:	in     eax,0x10
  40ebb4:	pop    eax
  40ebb5:	mov    DWORD PTR [ecx],ecx
  40ebb7:	enter  0x83b7,0xfa
  40ebbb:	les    ebx,FWORD PTR [ecx+0x7d]
  40ebbe:	mov    eax,ds:0x7c50874a
  40ebc3:	cmp    DWORD PTR [ebx],edi
  40ebc5:	mov    ds:0xd07cc648,eax
  40ebca:	push   eax
  40ebcb:	mov    esi,0xd492b604
  40ebd0:	(bad)  
  40ebd1:	cmp    al,0xe7
  40ebd3:	test   DWORD PTR [edx+0x13156cf],ebp
  40ebd9:	sbb    ebx,ebx
  40ebdb:	mov    fs,edi
  40ebdd:	nop
  40ebde:	scas   eax,DWORD PTR es:[edi]
  40ebdf:	xor    eax,0x27965db6
  40ebe4:	xchg   DWORD PTR [ebx-0x367b4b64],ebp
  40ebea:	loopne 0x40eb97
  40ebec:	add    eax,0x390be2aa
  40ebf1:	jne    0x40eb98
  40ebf3:	cmp    al,0x2c
  40ebf5:	clc    
  40ebf6:	mov    dh,0xe
  40ebf8:	dec    esi
  40ebf9:	aas    
  40ebfa:	inc    ecx
  40ebfb:	popa   
  40ebfc:	and    esi,ecx
  40ebfe:	stos   BYTE PTR es:[edi],al
  40ebff:	(bad)  
  40ec00:	nop
  40ec01:	or     eax,0xdb753907
  40ec06:	xlat   BYTE PTR ds:[ebx]
  40ec07:	aas    
  40ec08:	pop    esi
  40ec09:	cmp    dh,dl
  40ec0b:	cmp    eax,0x5a6ba9da
  40ec10:	pop    ebx
  40ec11:	fsubrp st(1),st
  40ec13:	(bad)  
  40ec14:	in     eax,dx
  40ec15:	jnp    0x40eba0
  40ec17:	pop    ebp
  40ec18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec19:	shl    edi,cl
  40ec1b:	loop   0x40ec59
  40ec1d:	xchg   esi,eax
  40ec1e:	pop    edx
  40ec1f:	pop    ebx
  40ec20:	dec    edi
  40ec21:	clc    
  40ec22:	lahf   
  40ec23:	out    dx,al
  40ec24:	(bad)  
  40ec26:	xchg   BYTE PTR [esi+0xb],bl
  40ec29:	jb     0x40ec00
  40ec2b:	lea    edi,[esi+0x8]
  40ec2e:	push   edi
  40ec2f:	sha256rnds2 xmm0,xmm4,xmm0
  40ec33:	rcl    DWORD PTR ds:0x30220a32,cl
  40ec39:	addr16 ffreep st(3)
  40ec3c:	add    eax,0x46393667
  40ec41:	pop    eax
  40ec42:	repz cmp BYTE PTR [edi+0x4902abc2],al
  40ec49:	ds retf 0xe1e2
  40ec4d:	ret    
  40ec4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec4f:	gs nop
  40ec51:	cmp    eax,0x153ca5d4
  40ec56:	enter  0x1233,0x57
  40ec5a:	push   ebp
  40ec5b:	ret    0x9751
  40ec5e:	jns    0x40ec51
  40ec60:	push   eax
  40ec61:	arpl   WORD PTR [eax],sp
  40ec63:	adc    BYTE PTR [eax],ah
  40ec65:	daa    
  40ec66:	xor    dl,BYTE PTR [esi]
  40ec68:	sahf   
  40ec69:	mov    edi,0x7e93336a
  40ec6e:	mov    esp,0xbee741d4
  40ec73:	sbb    ecx,DWORD PTR [edx]
  40ec75:	rcl    BYTE PTR [ecx-0x6f],0x45
  40ec79:	push   esp
  40ec7a:	rcr    BYTE PTR [esi],0x13
  40ec7d:	loop   0x40ecd6
  40ec7f:	mov    cl,0xa7
  40ec81:	data16 and bh,BYTE PTR [ebx]
  40ec84:	push   cs
  40ec85:	xor    edi,DWORD PTR [ecx+0x46559fda]
  40ec8b:	jns    0x40ec87
  40ec8d:	or     esi,DWORD PTR [ecx+0x4abac62c]
  40ec93:	mov    dh,0x41
  40ec95:	pop    ss
  40ec96:	imul   edi,esp,0x50
  40ec99:	adc    DWORD PTR [edi+0x121f3b4a],edi
  40ec9f:	adc    BYTE PTR [edx+0x73],ch
  40eca2:	and    edx,DWORD PTR [edi+0x18b95f40]
  40eca8:	cmp    al,0x1f
  40ecaa:	call   DWORD PTR [ecx-0x1e3c6396]
  40ecb0:	fsub   QWORD PTR [ecx+eiz*4+0x57]
  40ecb4:	ret    
  40ecb5:	mov    edi,0x689c0312
  40ecba:	push   ecx
  40ecbb:	pop    ds
  40ecbc:	ins    DWORD PTR es:[edi],dx
  40ecbd:	cmp    edx,DWORD PTR [eax+0x47]
  40ecc0:	push   esp
  40ecc1:	inc    ecx
  40ecc2:	data16 icebp 
  40ecc4:	add    bh,BYTE PTR [ecx-0x75]
  40ecc7:	cld    
  40ecc8:	lock xor DWORD PTR [eax],eax
  40eccb:	dec    eax
  40eccc:	and    BYTE PTR [edx+0x569bd0a],ah
  40ecd2:	mov    ch,0xe3
  40ecd4:	cld    
  40ecd5:	mov    BYTE PTR [esp+edx*2],ah
  40ecd8:	pushf  
  40ecd9:	mov    dl,0x3b
  40ecdb:	fst    st(5)
  40ecdd:	sbb    eax,0xffffff81
  40ece0:	jecxz  0x40ec87
  40ece2:	push   esp
  40ece3:	or     eax,0x5c2a5b77
  40ece8:	xor    BYTE PTR [esi+edx*8+0x3acca283],bh
  40ecef:	jne    0x40ed59
  40ecf1:	push   ecx
  40ecf2:	loope  0x40ed42
  40ecf4:	addr16 add bl,ah
  40ecf7:	xor    al,0xb7
  40ecf9:	pop    ebp
  40ecfa:	popa   
  40ecfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecfc:	push   es
  40ecfd:	jmp    0x86991039
  40ed02:	fsub   QWORD PTR [edx-0x3788f422]
  40ed08:	push   ds
  40ed09:	dec    ecx
  40ed0a:	ins    BYTE PTR es:[edi],dx
  40ed0b:	pop    es
  40ed0c:	xchg   edx,eax
  40ed0d:	adc    eax,ebx
  40ed0f:	sbb    eax,0x5a63b425
  40ed14:	in     eax,dx
  40ed15:	fbstp  TBYTE PTR [ebx-0x78]
  40ed18:	dec    edx
  40ed19:	ret    0xece4
  40ed1c:	cwde   
  40ed1d:	push   ss
  40ed1e:	es jb  0x40ed7b
  40ed21:	fisttp WORD PTR [ebp+0x60]
  40ed24:	fistp  QWORD PTR [ebp-0x71eff648]
  40ed2a:	dec    ebp
  40ed2b:	and    al,0x78
  40ed2d:	pop    esp
  40ed2e:	std    
  40ed2f:	test   eax,0xf67b6f72
  40ed34:	out    0xa6,al
  40ed36:	sub    eax,0x8b101353
  40ed3b:	iret   
  40ed3c:	jg     0x40ed19
  40ed3e:	push   ebp
  40ed3f:	inc    edx
  40ed40:	lods   al,BYTE PTR ds:[esi]
  40ed41:	lahf   
  40ed42:	push   ebp
  40ed43:	fcomp  QWORD PTR [eax-0x56380701]
  40ed49:	inc    ebx
  40ed4a:	add    eax,0x82006ad
  40ed4f:	xchg   edi,eax
  40ed50:	push   ecx
  40ed51:	into   
  40ed52:	retf   0x7197
  40ed55:	or     DWORD PTR [ecx+0x41],0x33
  40ed59:	test   DWORD PTR [eax-0xa6911f8],ebp
  40ed5f:	and    BYTE PTR [edi],dl
  40ed61:	sar    BYTE PTR [ebx],1
  40ed63:	add    eax,0x66227839
  40ed68:	inc    esp
  40ed69:	adc    DWORD PTR [edx],edx
  40ed6b:	xchg   edx,eax
  40ed6c:	push   edi
  40ed6d:	in     al,0xbf
  40ed6f:	cmp    edx,ebp
  40ed71:	ret    
  40ed72:	push   cs
  40ed73:	xchg   esi,eax
  40ed74:	hlt    
  40ed75:	imul   ebx,ebx,0x7c
  40ed78:	in     eax,dx
  40ed79:	jmp    0x3bae9302
  40ed7e:	cwde   
  40ed7f:	pop    es
  40ed80:	pop    es
  40ed81:	add    eax,0x1ccc0636
  40ed86:	xchg   ecx,eax
  40ed87:	mov    eax,ds:0x8729854a
  40ed8c:	jmp    FWORD PTR fs:[eax+0x7c]
  40ed90:	rcr    BYTE PTR [ecx],0x76
  40ed93:	push   esp
  40ed94:	or     dh,cl
  40ed96:	jmp    0xae50:0x5fc3f5a2
  40ed9d:	gs jle 0x40edf4
  40eda0:	adc    al,0x8c
  40eda2:	je     0x40ed50
  40eda4:	sahf   
  40eda5:	sub    eax,0x4bda513d
  40edaa:	push   esp
  40edab:	lahf   
  40edac:	les    eax,FWORD PTR [ebx]
  40edae:	mov    bl,0xfd
  40edb0:	and    DWORD PTR ds:0x5e23874a,ebp
  40edb6:	cmp    DWORD PTR [ebp-0x14fa7d9b],ecx
  40edbc:	stc    
  40edbd:	and    eax,DWORD PTR [eax]
  40edbf:	mov    al,0x58
  40edc1:	sub    al,0xeb
  40edc3:	inc    esp
  40edc4:	mov    ds:0xc2c54fe5,eax
  40edc9:	(bad)  cs:0xb0c1aacb
  40edd0:	out    dx,al
  40edd1:	cmp    eax,0x18a22fef
  40edd6:	or     ch,BYTE PTR [ebp-0x4aeed74d]
  40eddc:	js     0x40ede5
  40edde:	or     BYTE PTR [ebx+0x10],bh
  40ede1:	dec    ecx
  40ede2:	xlat   BYTE PTR ds:[ebx]
  40ede3:	icebp  
  40ede4:	fwait
  40ede5:	or     DWORD PTR [ecx-0x52998124],esp
  40edeb:	ds push ss
  40eded:	stos   DWORD PTR es:[edi],eax
  40edee:	jmp    0x40edc1
  40edf0:	pop    ebp
  40edf1:	test   al,0x32
  40edf3:	addr16 mov ds:0xa1af,eax
  40edf7:	(bad)  
  40edf9:	repz out 0x6f,al
  40edfc:	sub    eax,0x22e84b4b
  40ee01:	sub    eax,0x77469323
  40ee06:	dec    esi
  40ee07:	lock dec edx
  40ee09:	stos   BYTE PTR es:[edi],al
  40ee0a:	jne    0x40ee76
  40ee0c:	mov    al,ds:0xa916677f
  40ee11:	(bad)  
  40ee12:	lock jbe 0x40eda3
  40ee15:	pop    esp
  40ee16:	gs pop es
  40ee18:	mov    dh,0x46
  40ee1a:	stos   BYTE PTR es:[edi],al
  40ee1b:	inc    edx
  40ee1c:	and    cl,dl
  40ee1e:	or     DWORD PTR [edi],0x1400e520
  40ee24:	fdivr  DWORD PTR ds:0xa38d29c0
  40ee2a:	shl    BYTE PTR ds:0x4d5e4b52,0xcc
  40ee31:	shl    DWORD PTR ds:0x3dc40d9e,cl
  40ee37:	test   BYTE PTR [ebp-0x47],ch
  40ee3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee3b:	adc    DWORD PTR [ebp+eax*8+0x18a7f692],ecx
  40ee42:	clc    
  40ee43:	add    DWORD PTR [ecx+ecx*2+0x3d],ecx
  40ee47:	push   esi
  40ee48:	test   eax,0x737c30f7
  40ee4d:	cs xchg ecx,edi
  40ee50:	fucomp st(2)
  40ee52:	cs out 0x25,eax
  40ee55:	sti    
  40ee56:	aam    0xff
  40ee58:	ja     0x40eed0
  40ee5a:	ds pop ds
  40ee5c:	sbb    al,0x55
  40ee5e:	xchg   DWORD PTR [esi+0x4c70d83],ebx
  40ee64:	scas   al,BYTE PTR es:[edi]
  40ee65:	sub    al,0x63
  40ee67:	dec    esp
  40ee68:	dec    esi
  40ee69:	test   BYTE PTR [ecx-0x5],bh
  40ee6c:	aas    
  40ee6d:	pop    es
  40ee6e:	enter  0x9b66,0x12
  40ee72:	add    ah,BYTE PTR [ebx+0x6a]
  40ee75:	mov    ch,0xfb
  40ee77:	fwait
  40ee78:	xlat   BYTE PTR ds:[ebx]
  40ee79:	popa   
  40ee7a:	adc    al,BYTE PTR [edi]
  40ee7c:	shl    BYTE PTR [ebx],cl
  40ee7e:	cmp    eax,ecx
  40ee80:	inc    edi
  40ee81:	mov    ah,0xb5
  40ee83:	mov    dh,0x91
  40ee85:	mov    ecx,DWORD PTR [edi+esi*1-0x50]
  40ee89:	int    0x5
  40ee8b:	cmp    BYTE PTR [ebp+0x1ed8c375],0xa6
  40ee92:	(bad)  
  40ee93:	mov    ebp,0xe2297b9b
  40ee98:	mov    ebp,0x3108d412
  40ee9d:	scas   al,BYTE PTR es:[edi]
  40ee9e:	fdiv   QWORD PTR ss:[edi]
  40eea1:	jne    0x40ee5e
  40eea3:	ins    BYTE PTR es:[edi],dx
  40eea4:	mov    eax,0x57457b9e
  40eea9:	push   0x6
  40eeab:	dec    esp
  40eeac:	std    
  40eead:	shr    DWORD PTR [eax+0x38],cl
  40eeb0:	sub    DWORD PTR [ecx],ebx
  40eeb2:	mov    dl,0x59
  40eeb4:	jge    0x40ee67
  40eeb6:	push   ds
  40eeb7:	rol    BYTE PTR ds:0x3a16f017,cl
  40eebd:	adc    ecx,edx
  40eebf:	lock popf 
  40eec1:	sar    edi,0xf5
  40eec4:	jne    0x40ef00
  40eec6:	mov    ebp,0x160502fc
  40eecb:	mov    dl,0x72
  40eecd:	mov    ebp,0xda54b097
  40eed2:	mov    esi,edx
  40eed4:	inc    esi
  40eed5:	dec    ecx
  40eed6:	test   eax,0xe09039bf
  40eedb:	inc    eax
  40eedc:	call   0x4fdb3112
  40eee1:	stos   DWORD PTR es:[edi],eax
  40eee2:	fcmovnbe st,st(3)
  40eee4:	(bad)  
  40eee5:	mov    WORD PTR [edi+eiz*2+0x4e],cs
  40eee9:	dec    eax
  40eeea:	fldln2 
  40eeec:	jnp    0x40ef12
  40eeee:	in     eax,dx
  40eeef:	in     eax,0x55
  40eef1:	or     eax,0xff3959b8
  40eef6:	push   esp
  40eef7:	loopne 0x40ef54
  40eef9:	push   0xffffff97
  40eefb:	aam    0x28
  40eefd:	ret    0x2996
  40ef00:	dec    esi
  40ef01:	push   ss
  40ef02:	mov    ds:0x5d634591,eax
  40ef07:	push   es
  40ef08:	mov    ebx,es
  40ef0a:	lock data16 sbb al,0xca
  40ef0e:	mov    bh,0xb8
  40ef10:	mov    ch,0x30
  40ef12:	pop    esp
  40ef13:	pop    ecx
  40ef14:	sar    ebx,cl
  40ef16:	or     al,0xc3
  40ef18:	adc    al,0x99
  40ef1a:	sub    bl,0xf0
  40ef1d:	ret    0xd023
  40ef20:	xor    DWORD PTR [esi],esi
  40ef22:	sub    eax,0x5f5b456a
  40ef27:	call   0x55f123f2
  40ef2c:	jne    0x40eec9
  40ef2e:	or     BYTE PTR [edx+0x703c39a2],al
  40ef34:	out    0x6b,eax
  40ef36:	inc    esi
  40ef37:	xlat   BYTE PTR ds:[ebx]
  40ef38:	mov    ecx,DWORD PTR [edx]
  40ef3a:	pushf  
  40ef3b:	fld    DWORD PTR [ebx+0x44]
  40ef3e:	stos   DWORD PTR es:[edi],eax
  40ef3f:	cmp    BYTE PTR [edx-0x58],cl
  40ef42:	push   edx
  40ef43:	les    esp,FWORD PTR ds:0xdf8ec5b
  40ef49:	jle    0x40eeee
  40ef4b:	cmp    BYTE PTR [edi],bh
  40ef4d:	xor    esp,ebx
  40ef4f:	ins    BYTE PTR es:[edi],dx
  40ef50:	ja     0x40ef30
  40ef52:	ins    DWORD PTR es:[edi],dx
  40ef53:	int3   
  40ef54:	ret    
  40ef55:	sbb    BYTE PTR [esi-0x6470dd4a],0xdf
  40ef5c:	int    0x3
  40ef5e:	xchg   DWORD PTR [esi+0x78],ebp
  40ef61:	aas    
  40ef62:	sahf   
  40ef63:	gs xchg edi,eax
  40ef65:	xor    esi,DWORD PTR [esi]
  40ef67:	xor    bh,bl
  40ef69:	jbe    0x40ef43
  40ef6b:	xchg   ecx,eax
  40ef6c:	mov    ecx,0xb2bbbe0a
  40ef71:	pop    edi
  40ef72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef73:	mov    DWORD PTR [edx+0x5992c175],ecx
  40ef79:	call   0xe6e5b640
  40ef7e:	fwait
  40ef7f:	aaa    
  40ef80:	mov    eax,ds:0x303a2330
  40ef85:	jle    0x40ef09
  40ef87:	add    al,0xe
  40ef89:	(bad)  
  40ef8a:	push   esi
  40ef8b:	xor    eax,0x2dee441
  40ef90:	or     cl,dh
  40ef92:	mov    eax,ds:0xf24c6edc
  40ef97:	dec    eax
  40ef98:	sbb    BYTE PTR [esi+ebx*1],bl
  40ef9b:	cmp    edx,ebx
  40ef9d:	or     DWORD PTR [eax+0x6fe93fdf],esi
  40efa3:	repnz mov eax,ds:0x5b5eb396
  40efa9:	xor    ebp,ecx
  40efab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efac:	adc    eax,0x91fb4ca0
  40efb1:	dec    edi
  40efb2:	or     BYTE PTR [esi],cl
  40efb4:	mov    eax,ds:0xd19cca27
  40efb9:	dec    esp
  40efba:	das    
  40efbb:	add    al,0xfe
  40efbd:	test   BYTE PTR [esi+0x1ae6943a],bh
  40efc3:	xor    DWORD PTR [esi+edx*4],ecx
  40efc6:	in     eax,0xee
  40efc8:	inc    eax
  40efc9:	mov    BYTE PTR [ecx],dh
  40efcb:	cmp    ebp,DWORD PTR [ecx-0x77bedc97]
  40efd1:	call   0x7a64ef44
  40efd6:	in     al,dx
  40efd7:	out    dx,eax
  40efd8:	mov    al,ds:0xf6ecb755
  40efdd:	in     eax,0x50
  40efdf:	fild   DWORD PTR [ebp+0x5cbdb7cc]
  40efe5:	aam    0xec
  40efe7:	test   eax,0xf9491b3e
  40efec:	jecxz  0x40f02c
  40efee:	add    bl,BYTE PTR [ecx]
  40eff0:	mov    edi,eax
  40eff2:	std    
  40eff3:	je     0x40f05b
  40eff5:	dec    esi
  40eff6:	cmp    eax,DWORD PTR [edi-0x71]
  40eff9:	fsub   DWORD PTR [ebx]
  40effb:	retf   0x1ddd
  40effe:	sbb    BYTE PTR [ebp+0x20056893],cl
  40f004:	add    DWORD PTR [eax+0x5],eax
  40f007:	mov    bh,0xde
  40f009:	(bad)  
  40f00a:	dec    eax
  40f00b:	jp     0x40efb5
  40f00d:	enter  0xab31,0x80
  40f011:	mov    WORD PTR [esp+esi*8+0x55],fs
  40f015:	mov    esp,0xf00c910
  40f01a:	rol    DWORD PTR [edx],0xad
  40f01d:	gs jb  0x40efde
  40f020:	inc    esi
  40f021:	mov    al,ds:0xfa256a8
  40f026:	iret   
  40f027:	jo     0x40efbf
  40f029:	and    esi,DWORD PTR [ebx]
  40f02b:	nop
  40f02c:	popf   
  40f02d:	in     al,0x78
  40f02f:	daa    
  40f030:	push   ecx
  40f031:	add    cl,BYTE PTR [edi-0x68]
  40f034:	repnz daa 
  40f036:	mov    ebx,0xdef479ac
  40f03b:	push   es
  40f03c:	arpl   WORD PTR [esi-0x4290d395],sp
  40f042:	pop    es
  40f043:	retf   
  40f044:	dec    ecx
  40f045:	inc    esi
  40f046:	fmul   DWORD PTR [edi]
  40f048:	in     al,0x16
  40f04a:	js     0x40eff4
  40f04c:	aad    0x24
  40f04e:	jecxz  0x40f0b3
  40f050:	or     eax,0xbc50dbd6
  40f055:	adc    cl,ch
  40f057:	mov    ds:0x1bbd87e2,al
  40f05c:	jae    0x40f022
  40f05e:	(bad)  
  40f05f:	xchg   ebp,eax
  40f060:	(bad)  
  40f061:	xchg   ecx,eax
  40f062:	mov    bl,0x2d
  40f064:	inc    ecx
  40f065:	inc    ecx
  40f066:	call   0xafa50a06
  40f06b:	push   ebx
  40f06c:	ins    BYTE PTR es:[edi],dx
  40f06d:	pop    edi
  40f06e:	push   edx
  40f06f:	lahf   
  40f070:	outs   dx,DWORD PTR ds:[esi]
  40f071:	jge    0x40f064
  40f073:	push   edx
  40f074:	and    eax,0xe4182c29
  40f079:	idiv   ecx
  40f07b:	psadbw mm4,QWORD PTR [esi]
  40f07e:	cwde   
  40f07f:	pop    ebx
  40f080:	in     eax,dx
  40f081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f082:	imul   edx,DWORD PTR [eax+0x3a0e48b7],0x4a
  40f089:	in     eax,dx
  40f08a:	dec    ecx
  40f08b:	out    0x7f,eax
  40f08d:	cli    
  40f08e:	jg     0x40f072
  40f090:	mov    bl,0xf9
  40f092:	stos   DWORD PTR es:[edi],eax
  40f093:	cmp    eax,0xe4e177c8
  40f098:	inc    eax
  40f099:	hlt    
  40f09a:	hlt    
  40f09b:	scas   eax,DWORD PTR es:[edi]
  40f09c:	or     dl,BYTE PTR [edi-0x59b3678a]
  40f0a2:	xchg   edx,eax
  40f0a3:	popa   
  40f0a4:	shl    BYTE PTR [edx-0x74],cl
  40f0a7:	pusha  
  40f0a8:	xor    BYTE PTR [ebp-0x6a],al
  40f0ab:	arpl   WORD PTR [ebx-0x1e],bp
  40f0ae:	jbe    0x40f059
  40f0b0:	mov    ebx,0xfc1fcd09
  40f0b5:	jmp    0xecd9d0dd
  40f0ba:	and    BYTE PTR [esi],ch
  40f0bc:	inc    eax
  40f0bd:	adc    esi,edi
  40f0bf:	sub    eax,0xcf3bcba1
  40f0c4:	or     DWORD PTR [ebx+0x1cc6ff5],ebp
  40f0ca:	test   eax,0xcc26f51f
  40f0cf:	jne    0x40f06a
  40f0d1:	jbe    0x40f073
  40f0d3:	and    ebp,DWORD PTR [edi]
  40f0d5:	or     eax,esi
  40f0d7:	loope  0x40f0d6
  40f0d9:	jno    0x40f099
  40f0db:	lds    esp,FWORD PTR [esi]
  40f0dd:	loope  0x40f147
  40f0df:	mov    ds:0xad5c21cf,eax
  40f0e4:	mov    ch,0x2d
  40f0e6:	mov    ah,0xb4
  40f0e8:	fcmovnb st,st(7)
  40f0ea:	nop
  40f0eb:	idiv   BYTE PTR [edx+0xb3db9ea]
  40f0f1:	or     esp,DWORD PTR [esi]
  40f0f3:	or     ebx,DWORD PTR [esi]
  40f0f5:	mov    eax,ds:0x2d9d2676
  40f0fa:	xchg   edi,eax
  40f0fb:	mov    WORD PTR [esi],?
  40f0fd:	adc    ebp,DWORD PTR [eax]
  40f0ff:	inc    ecx
  40f100:	enter  0x7aef,0xc0
  40f104:	push   es
  40f105:	push   es
  40f106:	pop    ecx
  40f107:	sbb    ebx,edx
  40f109:	jp     0x40f111
  40f10b:	pop    es
  40f10c:	push   ecx
  40f10d:	int    0xf
  40f10f:	pop    eax
  40f110:	ret    0x574d
  40f113:	stc    
  40f114:	test   esp,edx
  40f116:	gs xchg esp,eax
  40f118:	sub    dl,dh
  40f11a:	inc    edx
  40f11b:	fwait
  40f11c:	add    eax,0x97175a3a
  40f121:	les    ecx,FWORD PTR [ebx-0x55]
  40f124:	and    al,0xb7
  40f126:	push   0xaf64a18a
  40f12b:	jg     0x40f113
  40f12d:	test   BYTE PTR [edi+edx*1],bl
  40f130:	aas    
  40f131:	pop    ecx
  40f132:	mov    esi,DWORD PTR [ecx]
  40f134:	loopne 0x40f167
  40f136:	pop    esp
  40f137:	out    0x67,al
  40f139:	mov    esp,0xa3de7cd2
  40f13e:	cld    
  40f13f:	jmp    FWORD PTR [ecx+0x78]
  40f142:	mov    ch,0x23
  40f144:	cmp    BYTE PTR [edi],dl
  40f146:	daa    
  40f147:	pinsrw mm5,WORD PTR [esi+0x1b79684d],0x66
  40f14f:	scas   al,BYTE PTR es:[edi]
  40f150:	pop    eax
  40f151:	das    
  40f152:	sub    ah,ch
  40f154:	je     0x40f0da
  40f156:	fsubr  QWORD PTR [edx-0x1ab5a7e4]
  40f15c:	addr16 je 0x40f0fd
  40f15f:	pop    esi
  40f160:	out    dx,eax
  40f161:	inc    edi
  40f162:	aam    0xea
  40f164:	sti    
  40f165:	mov    esi,0xed1c35b0
  40f16a:	dec    edi
  40f16b:	jo     0x40f144
  40f16d:	push   es
  40f16e:	mov    eax,0x2bacf4e5
  40f173:	push   0x58
  40f175:	sbb    ecx,edi
  40f177:	dec    edx
  40f179:	into   
  40f17a:	imul   esi,edx,0xffffffab
  40f17d:	in     al,0xfd
  40f17f:	inc    ebx
  40f180:	add    al,0x66
  40f182:	dec    esp
  40f183:	ret    
  40f184:	outs   dx,BYTE PTR ds:[esi]
  40f185:	punpckldq mm4,mm0
  40f188:	xchg   ebx,eax
  40f189:	mov    eax,ds:0xc0899ea2
  40f18e:	xchg   edx,eax
  40f18f:	pop    es
  40f190:	sub    DWORD PTR [ebp+0x67fb3136],edx
  40f196:	ins    DWORD PTR es:[edi],dx
  40f197:	mov    bh,0xaa
  40f199:	(bad)  
  40f19a:	hlt    
  40f19b:	(bad)  
  40f19c:	xchg   ebx,eax
  40f19d:	xor    esp,eax
  40f19f:	je     0x40f121
  40f1a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1a2:	shl    BYTE PTR [ebp+esi*1-0x2b6d27ce],cl
  40f1a9:	loop   0x40f1c2
  40f1ab:	sbb    BYTE PTR [esi+ecx*2-0x56159bbf],0x6d
  40f1b3:	or     DWORD PTR [edx],edx
  40f1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b6:	add    BYTE PTR ds:0xeb298169,0x9e
  40f1bd:	pop    ecx
  40f1be:	test   al,0x1e
  40f1c0:	in     al,0x17
  40f1c2:	aam    0x9c
  40f1c4:	div    ecx
  40f1c6:	mov    BYTE PTR [ebp-0x19a94afe],al
  40f1cc:	cdq    
  40f1cd:	test   eax,0x74e76185
  40f1d2:	das    
  40f1d3:	inc    esi
  40f1d4:	jo     0x40f16d
  40f1d6:	jp     0x40f171
  40f1d8:	xchg   BYTE PTR [edx+0x7f4926fa],dl
  40f1de:	repz cmp al,0x9a
  40f1e1:	xor    ebx,DWORD PTR [edi-0x17]
  40f1e4:	adc    DWORD PTR [ecx+edx*2],edx
  40f1e7:	and    cl,dh
  40f1e9:	or     eax,DWORD PTR [edi-0x796b8c33]
  40f1ef:	mov    al,ds:0xc698dbd
  40f1f4:	shl    BYTE PTR [ecx+ebx*2],0x44
  40f1f8:	lock pushf 
  40f1fa:	pop    esi
  40f1fb:	push   ss
  40f1fc:	retf   0xd1ac
  40f1ff:	inc    edx
  40f200:	loope  0x40f19b
  40f202:	into   
  40f203:	adc    al,0xa
  40f205:	dec    ebx
  40f206:	jnp    0x40f1ef
  40f208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f209:	lea    ebp,[edi]
  40f20b:	push   ecx
  40f20c:	jmp    0x40f1b3
  40f20e:	pop    eax
  40f20f:	xor    ch,0x8e
  40f212:	fwait
  40f213:	mov    al,ds:0x9a1a1b86
  40f218:	jmp    0x40f19c
  40f21a:	js     0x40f1a9
  40f21c:	mov    edx,0xcd0b3c7
  40f221:	ins    DWORD PTR es:[edi],dx
  40f222:	push   edx
  40f223:	push   eax
  40f224:	push   esp
  40f225:	les    edi,FWORD PTR [esi-0x2be0ca02]
  40f22b:	xchg   al,ah
  40f22d:	std    
  40f22e:	jg     0x40f2ac
  40f230:	xchg   DWORD PTR [ecx+0x1828fc0a],ebx
  40f236:	mov    edx,0xd7d389bc
  40f23b:	sub    esi,DWORD PTR [esi+ebp*8+0x4c9bc708]
  40f242:	sbb    eax,0xea6fbe4f
  40f247:	add    DWORD PTR [esi-0x43d8ea9a],ebp
  40f24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f24e:	(bad)  
  40f24f:	adc    edx,DWORD PTR [edi+esi*2]
  40f252:	inc    edx
  40f253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f254:	xor    DWORD PTR [edx+0x71dad263],0xffffffb7
  40f25b:	mov    WORD PTR [esi+0x20],?
  40f25e:	in     eax,dx
  40f25f:	lock mov WORD PTR [ebx+0x5c87010a],ds
  40f266:	unpcklps xmm0,XMMWORD PTR [ebp-0x9]
  40f26a:	and    DWORD PTR [ebx],esp
  40f26c:	inc    eax
  40f26d:	or     eax,0x22d22cdf
  40f272:	inc    ebx
  40f273:	std    
  40f274:	js     0x40f1f8
  40f276:	out    0x34,eax
  40f278:	ins    DWORD PTR es:[edi],dx
  40f279:	inc    esi
  40f27a:	call   0xecc9:0x1dd9acbb
  40f281:	aas    
  40f282:	cmc    
  40f283:	dec    ebp
  40f284:	sub    edx,ebp
  40f286:	adc    al,0x2a
  40f288:	sub    BYTE PTR [esi+0x6334ff91],bl
  40f28e:	(bad)  
  40f28f:	cmp    al,0x2d
  40f291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f292:	xor    bh,BYTE PTR [esi+0x6e]
  40f295:	std    
  40f296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f298:	xchg   BYTE PTR [esi-0x12],ah
  40f29b:	(bad)  
  40f29c:	lds    eax,FWORD PTR [edx-0x68]
  40f29f:	div    DWORD PTR [ecx+0x49d58c9a]
  40f2a5:	leave  
  40f2a6:	push   cs
  40f2a7:	pop    es
  40f2a8:	xor    esi,ebx
  40f2aa:	gs gs in eax,0xbb
  40f2ae:	cwde   
  40f2af:	adc    ah,cl
  40f2b1:	rcr    BYTE PTR ss:[ebx-0x2964ee63],cl
  40f2b8:	daa    
  40f2b9:	outs   dx,BYTE PTR ds:[esi]
  40f2ba:	inc    ecx
  40f2bb:	neg    ebp
  40f2bd:	or     al,0xfa
  40f2bf:	mov    ds:0x35785422,eax
  40f2c4:	je     0x40f2e1
  40f2c6:	add    eax,0x41837389
  40f2cb:	pop    ds
  40f2cc:	and    al,0x4f
  40f2ce:	lahf   
  40f2cf:	js     0x40f298
  40f2d1:	cmp    edi,DWORD PTR [edx]
  40f2d3:	dec    esp
  40f2d4:	loopne 0x40f278
  40f2d6:	ror    BYTE PTR [ecx],1
  40f2d8:	popf   
  40f2d9:	add    ch,BYTE PTR [edx-0x8]
  40f2dc:	xor    bh,dl
  40f2de:	cmp    BYTE PTR [ebx],dl
  40f2e0:	(bad)  
  40f2e1:	retf   0xa8a
  40f2e4:	nop
  40f2e5:	sbb    eax,DWORD PTR [ebp*8+0x73cfc609]
  40f2ec:	test   DWORD PTR [esi],ebx
  40f2ee:	jg     0x40f277
  40f2f0:	cmp    edi,eax
  40f2f2:	dec    ecx
  40f2f3:	inc    edx
  40f2f4:	fidiv  WORD PTR [ebx-0x12c65104]
  40f2fa:	xor    BYTE PTR [ecx+edi*1+0x34aee683],ah
  40f301:	mov    dh,0xc7
  40f303:	mov    esp,0xc45f9639
  40f308:	pusha  
  40f309:	fcomi  st,st(4)
  40f30b:	pcmpeqb mm0,QWORD PTR [ebp-0x6f]
  40f30f:	add    DWORD PTR [eax+0xa5748dc],esi
  40f315:	mov    ah,bl
  40f317:	xor    ebp,edi
  40f319:	fucom  st(1)
  40f31b:	sbb    ebp,DWORD PTR [ebp+0x76b84ab3]
  40f321:	(bad)  
  40f323:	pop    ebx
  40f324:	or     eax,0x8374b6cf
  40f329:	imul   eax,DWORD PTR [eax+0xef614ea],0xf77755ba
  40f333:	jmp    0xbab22e7b
  40f338:	test   BYTE PTR [edx+0x783cda7b],ah
  40f33e:	pop    edx
  40f33f:	call   0xc14931ae
  40f344:	(bad)  [ecx+ebx*2+0x31f4a36b]
  40f34b:	mov    ds:0x38ef831b,eax
  40f350:	xlat   BYTE PTR ds:[ebx]
  40f351:	lea    edx,[ecx]
  40f353:	mov    dl,0x7f
  40f355:	repz and ebp,DWORD PTR [esi-0x55]
  40f359:	test   BYTE PTR [esi],0x35
  40f35c:	dec    ebx
  40f35d:	lods   eax,DWORD PTR ds:[esi]
  40f35e:	jl     0x40f39e
  40f360:	inc    esi
  40f361:	std    
  40f362:	shl    dl,1
  40f364:	xchg   BYTE PTR [ecx-0x2c],al
  40f367:	mov    dl,0xf0
  40f369:	xor    al,dl
  40f36b:	or     BYTE PTR [edx],dh
  40f36d:	mov    dh,0x54
  40f36f:	or     eax,0x323a87c3
  40f374:	inc    esp
  40f375:	adc    ecx,DWORD PTR [edi-0x5d98e3db]
  40f37b:	sub    eax,0xa8fdc716
  40f380:	loopne 0x40f3e2
  40f382:	mov    ?,WORD PTR [ebp+0x1a703350]
  40f388:	rcr    edx,1
  40f38a:	and    edx,DWORD PTR [ebx-0x37]
  40f38d:	or     al,0xc3
  40f38f:	mov    dh,0xc1
  40f391:	ins    DWORD PTR es:[edi],dx
  40f392:	fmul   st(1),st
  40f394:	hlt    
  40f395:	or     dh,BYTE PTR [edx]
  40f397:	mov    ah,0x1e
  40f399:	ror    ch,1
  40f39b:	mov    ah,0x46
  40f39d:	cs inc esp
  40f39f:	pop    edi
  40f3a0:	ins    BYTE PTR es:[edi],dx
  40f3a1:	xor    eax,0x59be03b3
  40f3a6:	arpl   WORD PTR [ebp+0x59],cx
  40f3a9:	shr    ebp,0x69
  40f3ac:	pop    eax
  40f3ad:	add    eax,0xe7618afa
  40f3b2:	jae    0x40f3f9
  40f3b4:	push   ebx
  40f3b5:	int3   
  40f3b6:	inc    ecx
  40f3b7:	popf   
  40f3b8:	pop    ebx
  40f3b9:	aad    0x51
  40f3bb:	pop    ebx
  40f3bc:	cdq    
  40f3bd:	aaa    
  40f3be:	mov    ds:0xc2b6393b,al
  40f3c3:	(bad)  
  40f3c4:	jb     0x40f392
  40f3c6:	or     cl,bl
  40f3c8:	ss mov ah,0xc2
  40f3cb:	loope  0x40f3a4
  40f3cd:	mov    ss:0xb734067a,eax
  40f3d3:	test   BYTE PTR [ebx-0x7885f7e8],cl
  40f3d9:	or     bl,ch
  40f3db:	scas   eax,DWORD PTR es:[edi]
  40f3dc:	mov    esp,0x54654885
  40f3e1:	fisubr DWORD PTR [ecx+eiz*2+0x74]
  40f3e5:	jnp    0x40f37d
  40f3e7:	push   edi
  40f3e8:	inc    ecx
  40f3e9:	lock lods eax,DWORD PTR ds:[esi]
  40f3eb:	ret    0x7698
  40f3ee:	in     al,0xcf
  40f3f0:	aam    0x61
  40f3f2:	dec    ebx
  40f3f3:	outs   dx,DWORD PTR ds:[esi]
  40f3f4:	lods   eax,DWORD PTR ds:[esi]
  40f3f5:	idiv   DWORD PTR [esi-0x14a973c3]
  40f3fb:	cs mov al,0x2a
  40f3fe:	fidivr DWORD PTR [ebp+esi*2-0xd19d646]
  40f405:	jmp    0xa6a4359d
  40f40a:	pop    edi
  40f40b:	out    0x6,al
  40f40d:	cmp    eax,DWORD PTR [eax]
  40f40f:	cmp    ecx,DWORD PTR ds:0x976ec44a
  40f415:	pop    es
  40f416:	mov    ah,0x9a
  40f418:	xchg   ecx,eax
  40f419:	lea    edx,[edx]
  40f41b:	xchg   DWORD PTR [eax],ecx
  40f41d:	pop    ds
  40f41e:	(bad)  
  40f41f:	mov    esi,0xb1fb408d
  40f424:	dec    ebp
  40f425:	enter  0xa19b,0x9d
  40f429:	call   0xb581:0x2fa13996
  40f430:	jbe    0x40f435
  40f432:	jge    0x40f422
  40f434:	mov    ch,0xbd
  40f436:	cmp    cl,dh
  40f438:	xchg   edx,eax
  40f439:	cmp    BYTE PTR [ebp-0x6d],dl
  40f43c:	loop   0x40f435
  40f43e:	pop    ss
  40f43f:	and    edx,DWORD PTR [ecx]
  40f441:	repz inc edi
  40f443:	inc    ecx
  40f444:	xchg   esp,eax
  40f445:	add    DWORD PTR [eax+0x35d1241d],0x46b9bcfc
  40f44f:	and    ebp,eax
  40f451:	push   0xc0a7bbd1
  40f456:	push   ecx
  40f457:	dec    edx
  40f458:	not    BYTE PTR ss:[ebx]
  40f45b:	test   al,0xf
  40f45d:	les    edx,FWORD PTR [ebx+0x1a]
  40f460:	add    ebx,DWORD PTR [edi-0x69]
  40f463:	mov    BYTE PTR [ebp-0x73],dl
  40f466:	add    al,0x94
  40f468:	cmp    cl,cl
  40f46a:	push   esp
  40f46b:	mov    ah,BYTE PTR [edx-0x79edabb9]
  40f471:	or     DWORD PTR [ecx+0x54572816],0xffffffb4
  40f478:	out    dx,al
  40f479:	int3   
  40f47a:	leave  
  40f47b:	arpl   WORD PTR [ecx-0x538d478c],ax
  40f481:	leave  
  40f482:	pop    eax
  40f483:	add    al,0x2
  40f485:	mov    eax,ds:0x8e7fb375
  40f48a:	sti    
  40f48b:	mov    bh,0x63
  40f48d:	nop
  40f48e:	jmp    0x40f415
  40f490:	cli    
  40f491:	stc    
  40f492:	mov    eax,0x8e050408
  40f497:	mov    al,0x1a
  40f499:	into   
  40f49a:	icebp  
  40f49b:	test   dl,0xd4
  40f49e:	imul   eax,DWORD PTR [ebx],0x6ba1b2ea
  40f4a4:	pusha  
  40f4a5:	loopne 0x40f523
  40f4a7:	cmp    al,0x8a
  40f4a9:	aad    0x5b
  40f4ab:	sbb    eax,0x45aaeead
  40f4b0:	dec    ecx
  40f4b1:	(bad)  
  40f4b3:	xchg   esp,eax
  40f4b4:	pop    edx
  40f4b5:	int3   
  40f4b6:	aas    
  40f4b7:	dec    ebx
  40f4b8:	test   DWORD PTR [eax+eiz*4],ebx
  40f4bb:	outs   dx,DWORD PTR ds:[esi]
  40f4bc:	adc    al,0x25
  40f4be:	or     eax,0x9f142b70
  40f4c3:	imul   eax,esp,0x2f1983b5
  40f4c9:	aam    0x0
  40f4cb:	daa    
  40f4cc:	or     DWORD PTR [ebx-0x4d],ebx
  40f4cf:	pop    esi
  40f4d0:	outs   dx,BYTE PTR ds:[esi]
  40f4d1:	je     0x40f547
  40f4d3:	popa   
  40f4d4:	push   0xcea87fe5
  40f4d9:	inc    ecx
  40f4da:	sbb    BYTE PTR [ecx],al
  40f4dc:	add    al,0xd0
  40f4de:	mov    edi,0x8e6dde3d
  40f4e3:	sub    DWORD PTR [ecx-0x58],esp
  40f4e6:	out    0x36,eax
  40f4e8:	and    BYTE PTR [ebx+eax*1+0x1a93a2e6],bh
  40f4ef:	scas   al,BYTE PTR es:[edi]
  40f4f0:	sbb    ch,BYTE PTR [ebx+0x44]
  40f4f3:	pusha  
  40f4f4:	sub    ebp,DWORD PTR [esi-0x695c5fb9]
  40f4fa:	push   ds
  40f4fb:	add    eax,0xe631e059
  40f500:	mov    edx,0x6c719633
  40f505:	pop    ebx
  40f506:	outs   dx,DWORD PTR ds:[esi]
  40f507:	adc    esp,ebp
  40f509:	inc    edi
  40f50a:	cmp    BYTE PTR [ebp+0x42],ch
  40f50d:	mov    edx,0x399e1bd1
  40f512:	push   edx
  40f513:	or     al,0xe
  40f515:	iret   
  40f516:	fs pop ebp
  40f518:	jmp    0xbdfe016a
  40f51d:	and    edi,DWORD PTR [edi+0x34]
  40f520:	push   ebx
  40f521:	push   esi
  40f522:	fistp  WORD PTR [esi-0x769f914e]
  40f528:	mov    ecx,0x54eb87b4
  40f52d:	or     BYTE PTR [eax+0x23b5ea35],bl
  40f533:	jmp    0x40f4f2
  40f535:	push   0x258a08c0
  40f53a:	sti    
  40f53b:	dec    ebp
  40f53c:	arpl   WORD PTR [eax-0x7fdde9ee],si
  40f542:	(bad)
  40f546:	fstp   TBYTE PTR [edx+0x46]
  40f549:	add    ebp,DWORD PTR [edi-0x71]
  40f54c:	outs   dx,BYTE PTR ds:[esi]
  40f54d:	out    0x4e,eax
  40f54f:	aam    0x1d
  40f551:	sahf   
  40f552:	cmp    eax,0xcf0fff05
  40f557:	test   al,0xa
  40f559:	push   ds
  40f55a:	movsx  esp,WORD PTR [esi-0x20006896]
  40f561:	mov    al,0x0
  40f563:	add    ebp,ecx
  40f565:	and    BYTE PTR [esi+0x7f],0x49
  40f569:	into   
  40f56a:	das    
  40f56b:	pinsrw mm4,WORD PTR [edx+0x5054a65c],0x44
  40f573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f574:	and    ch,BYTE PTR ds:0x8dd219a9
  40f57a:	mov    bh,0x3a
  40f57c:	les    ebp,FWORD PTR [edx+ebx*1]
  40f57f:	pop    esp
  40f580:	int3   
  40f581:	scas   eax,DWORD PTR es:[edi]
  40f582:	sub    ah,BYTE PTR [edx+eax*8-0x4e4dccfe]
  40f589:	daa    
  40f58a:	mov    ecx,0xfd1c8c04
  40f58f:	in     al,dx
  40f590:	xchg   BYTE PTR [ebx+0x10],bh
  40f593:	push   edi
  40f594:	lods   eax,DWORD PTR ds:[esi]
  40f595:	ror    BYTE PTR [esi-0x51],1
  40f598:	sahf   
  40f599:	mov    WORD PTR [esi],?
  40f59b:	push   esi
  40f59c:	lods   eax,DWORD PTR ds:[esi]
  40f59d:	mov    esp,0x278989d4
  40f5a2:	rol    BYTE PTR [ecx-0x63],cl
  40f5a5:	xchg   BYTE PTR [edx+ecx*4-0x76fab966],ah
  40f5ac:	inc    ebp
  40f5ad:	into   
  40f5ae:	scas   eax,DWORD PTR es:[edi]
  40f5af:	mov    al,ds:0xbc9161db
  40f5b4:	nop
  40f5b5:	mov    ch,ch
  40f5b7:	or     DWORD PTR [eax-0x54],0x3632ef3
  40f5be:	mov    ecx,0x4d1b8da0
  40f5c3:	je     0x40f5d3
  40f5c5:	mov    ebx,0x2f4be602
  40f5ca:	sub    DWORD PTR [ecx-0x43],eax
  40f5cd:	lds    esp,FWORD PTR [ecx-0x7fcbc7bc]
  40f5d3:	leave  
  40f5d4:	adc    edx,DWORD PTR [esi]
  40f5d6:	test   DWORD PTR [edi],eax
  40f5d8:	cmc    
  40f5d9:	ds pop edx
  40f5db:	cmp    BYTE PTR [esp+eax*4+0x1d],ah
  40f5df:	icebp  
  40f5e0:	std    
  40f5e1:	call   0x6d9841a9
  40f5e6:	(bad)  
  40f5e7:	mov    ebp,0xc8201814
  40f5ec:	sub    BYTE PTR [edi],dh
  40f5ee:	(bad)  
  40f5ef:	jp     0x40f64f
  40f5f1:	mov    DWORD PTR [ecx-0x52180e02],esp
  40f5f7:	hlt    
  40f5f8:	popf   
  40f5f9:	out    dx,eax
  40f5fa:	dec    edi
  40f5fb:	imul   ebx,DWORD PTR [esp+ebx*8+0x2610af8a],0x1c
  40f603:	fisttp DWORD PTR cs:[eax-0xec6115b]
  40f60a:	mov    dh,cl
  40f60c:	mov    esi,0xac57b17
  40f611:	les    edi,FWORD PTR [esi-0x136611a5]
  40f617:	sbb    cl,BYTE PTR [eax-0x51]
  40f61a:	icebp  
  40f61b:	out    dx,al
  40f61c:	stc    
  40f61d:	adc    BYTE PTR [ecx],0x8
  40f620:	push   edx
  40f621:	xchg   esp,eax
  40f622:	add    bh,BYTE PTR [ebp-0x51]
  40f625:	lea    eax,[esi-0x3c950a9d]
  40f62b:	sbb    bh,ch
  40f62d:	nop
  40f62e:	cmp    DWORD PTR [ebp+0x6ffd43ce],0x3d49d8f8
  40f638:	pop    ebp
  40f639:	xchg   ebp,eax
  40f63a:	pop    eax
  40f63b:	inc    esp
  40f63c:	ret    0x379d
  40f63f:	cmp    BYTE PTR [eax+0x7a],ah
  40f642:	repz lds ebx,FWORD PTR [ebx-0x59]
  40f646:	imul   esi,DWORD PTR [edi+0x249d5615],0x1c
  40f64d:	rcl    DWORD PTR [edx+0x5b],cl
  40f650:	and    DWORD PTR [ecx],ebp
  40f652:	xchg   ebx,eax
  40f653:	and    BYTE PTR [edx+edi*4+0x70],al
  40f657:	dec    eax
  40f658:	enter  0xd00,0x70
  40f65c:	int3   
  40f65d:	and    dh,BYTE PTR fs:[ecx-0x36]
  40f661:	stos   DWORD PTR es:[edi],eax
  40f662:	les    esi,FWORD PTR [ebx-0x6d]
  40f665:	addr16 iret 
  40f667:	adc    al,0x9e
  40f669:	enter  0xf37b,0x71
  40f66d:	(bad)  
  40f66e:	dec    edi
  40f66f:	out    0x3c,al
  40f671:	push   ds
  40f672:	push   esp
  40f673:	loopne 0x40f661
  40f675:	fidivr DWORD PTR [ebx+eiz*8-0x67054c1]
  40f67c:	daa    
  40f67d:	adc    eax,0xbe4c6b04
  40f682:	pop    es
  40f683:	(bad)  
  40f685:	push   edx
  40f686:	ins    BYTE PTR es:[edi],dx
  40f687:	inc    ecx
  40f688:	cmp    al,BYTE PTR [edi]
  40f68a:	or     eax,0x77da00ae
  40f68f:	xor    ebp,DWORD PTR [esi-0x30fe86ec]
  40f695:	fs xor eax,0x15b892a5
  40f69b:	xor    al,0xa2
  40f69d:	(bad)  
  40f69e:	bound  esp,QWORD PTR [eax]
  40f6a0:	pop    edi
  40f6a1:	clc    
  40f6a2:	adc    dl,ah
  40f6a4:	push   esi
  40f6a5:	xor    DWORD PTR [esi],0x6e3e4d38
  40f6ab:	push   ebx
  40f6ac:	and    DWORD PTR [edx-0x2a2aeabd],eax
  40f6b2:	jns    0x40f725
  40f6b4:	(bad)  
  40f6b5:	xlat   BYTE PTR ds:[ebx]
  40f6b6:	popf   
  40f6b7:	cmp    ebx,DWORD PTR [eax]
  40f6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ba:	mov    edi,0xe933c560
  40f6bf:	jg     0x40f728
  40f6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6c2:	icebp  
  40f6c3:	jae    0x40f6c2
  40f6c5:	and    ah,BYTE PTR [ecx]
  40f6c7:	mov    edi,ebx
  40f6c9:	rcr    DWORD PTR [ebp-0x3d22cc42],0xf2
  40f6d0:	lods   eax,DWORD PTR ds:[esi]
  40f6d1:	and    BYTE PTR [ebx+0x75c388ef],bl
  40f6d7:	dec    ecx
  40f6d8:	push   edi
  40f6d9:	out    0xd8,al
  40f6db:	xor    ah,BYTE PTR [ebx-0x7b]
  40f6de:	jp     0x40f670
  40f6e0:	adc    eax,0x611d1c9e
  40f6e5:	mul    BYTE PTR [eax]
  40f6e7:	fs add al,0xe
  40f6ea:	push   ebx
  40f6eb:	hlt    
  40f6ec:	mov    ecx,0x784444ba
  40f6f1:	scas   al,BYTE PTR es:[edi]
  40f6f2:	lods   eax,DWORD PTR ds:[esi]
  40f6f3:	retf   
  40f6f4:	out    dx,eax
  40f6f5:	pop    DWORD PTR [ebx]
  40f6f7:	ror    BYTE PTR [edi],1
  40f6f9:	mov    dl,0xaf
  40f6fb:	pop    eax
  40f6fc:	pop    esp
  40f6fd:	cdq    
  40f6fe:	xchg   ebx,eax
  40f6ff:	xchg   ebp,eax
  40f701:	mov    ebx,0xf1501622
  40f706:	mov    bl,0x8f
  40f708:	les    ebp,FWORD PTR ds:0x9e4afa24
  40f70e:	jge    0x40f6ea
  40f710:	cld    
  40f711:	sub    eax,0x7f8c2471
  40f716:	mov    esi,DWORD PTR [eax+0x58]
  40f719:	shr    DWORD PTR [edx],0x39
  40f71c:	pushf  
  40f71d:	mov    dh,0x6c
  40f71f:	xchg   esp,eax
  40f720:	out    0x5d,eax
  40f722:	or     al,0x1
  40f724:	rcr    esp,1
  40f726:	(bad)  
  40f728:	fild   DWORD PTR ds:0x71b0ff6a
  40f72e:	leave  
  40f72f:	or     eax,eax
  40f731:	data16 shl BYTE PTR ss:[ebx-0x76],cl
  40f736:	or     DWORD PTR [eax+0x38],edx
  40f739:	in     al,dx
  40f73a:	adc    BYTE PTR [edx-0x4bdb117c],ah
  40f740:	mov    ebp,DWORD PTR [ebx-0x11d74244]
  40f746:	fisub  WORD PTR ds:0x2e40eaaf
  40f74c:	daa    
  40f74d:	shr    dl,0x4a
  40f750:	dec    esi
  40f751:	and    BYTE PTR [edx-0x3f6da6fd],cl
  40f757:	or     bl,0xca
  40f75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f75b:	fadd   DWORD PTR [ebp+0x3ac7c43d]
  40f761:	daa    
  40f762:	cmp    BYTE PTR [esi+eiz*1-0x2c76e01b],bh
  40f769:	call   0x25b7:0x36e0b858
  40f770:	rcr    BYTE PTR [edx+0x47],0x61
  40f774:	loope  0x40f71e
  40f776:	aad    0x62
  40f778:	sub    eax,0x937d2d89
  40f77d:	jbe    0x40f7a6
  40f77f:	lahf   
  40f780:	dec    esp
  40f781:	int    0x3
  40f783:	push   ds
  40f784:	mov    ebx,DWORD PTR [esi-0x16728fb8]
  40f78a:	aas    
  40f78b:	sahf   
  40f78c:	es adc eax,0x70f095e5
  40f792:	sub    BYTE PTR [ecx+0xe],bl
  40f795:	inc    ebx
  40f796:	mov    ds:0x60cc6a07,al
  40f79b:	enter  0xdaf1,0x19
  40f79f:	push   esp
  40f7a0:	mov    bl,0xdf
  40f7a2:	push   es
  40f7a3:	fld    QWORD PTR [eax]
  40f7a5:	or     al,0x0
  40f7a7:	jbe    0x40f7e7
  40f7a9:	pop    ebp
  40f7aa:	ja     0x40f735
  40f7ac:	inc    edi
  40f7ad:	jmp    0x40f789
  40f7af:	cmp    edi,DWORD PTR [ecx+edi*4+0xa21e84b]
  40f7b6:	mov    ecx,DWORD PTR [ebp+0x3e39d6e2]
  40f7bc:	(bad)  [esi+ecx*2]
  40f7bf:	inc    edi
  40f7c0:	js     0x40f80f
  40f7c2:	sbb    DWORD PTR [ebx],edx
  40f7c4:	inc    ebp
  40f7c6:	and    bl,ch
  40f7c8:	jl     0x40f7cd
  40f7ca:	mov    al,0x3e
  40f7cc:	leave  
  40f7cd:	aaa    
  40f7ce:	ror    DWORD PTR [ebx+0x22c65a8],cl
  40f7d4:	cwde   
  40f7d5:	jmp    0xce7792e4
  40f7da:	jno    0x40f849
  40f7dc:	jmp    0xac37:0x1e3d2ab3
  40f7e3:	ja     0x40f77c
  40f7e5:	dec    esp
  40f7e6:	(bad)  
  40f7e7:	xlat   BYTE PTR ds:[ebx]
  40f7e8:	or     ax,0xd044
  40f7ec:	icebp  
  40f7ed:	lahf   
  40f7ee:	pop    ds
  40f7ef:	inc    edx
  40f7f0:	mov    eax,ds:0xbbe4198a
  40f7f5:	xchg   edi,eax
  40f7f6:	out    dx,eax
  40f7f7:	(bad)  
  40f7f8:	lea    ebx,[eax]
  40f7fa:	in     eax,dx
  40f7fb:	outs   dx,DWORD PTR ds:[esi]
  40f7fc:	pop    ecx
  40f7fd:	test   DWORD PTR [ebp+0x11],0xda7a5e16
  40f804:	pop    edi
  40f805:	and    DWORD PTR [edi-0x36631cb6],eax
  40f80b:	sub    bl,al
  40f80d:	std    
  40f80e:	xchg   BYTE PTR [ebp-0x3f0e9ebb],dl
  40f814:	or     DWORD PTR [esi-0x61ebcca7],ebp
  40f81a:	adc    BYTE PTR [ecx+0x6d],dh
  40f81d:	adc    al,0x16
  40f81f:	push   es
  40f820:	sbb    bl,BYTE PTR [ecx+0x45]
  40f823:	jbe    0x40f80e
  40f825:	nop
  40f826:	xchg   BYTE PTR [eax],ah
  40f828:	aaa    
  40f829:	(bad)  
  40f82a:	repz rcl BYTE PTR [ebx+0x79],1
  40f82e:	sbb    BYTE PTR [ecx+0x3665a91f],cl
  40f834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f836:	jle    0x40f873
  40f838:	cli    
  40f839:	retf   0x3504
  40f83c:	jne    0x40f84b
  40f83e:	test   BYTE PTR [edi+0x5f],0x43
  40f842:	sub    eax,0xa6053626
  40f847:	daa    
  40f848:	repz mov al,ds:0x13aa44a9
  40f84e:	inc    edi
  40f84f:	or     al,0x8b
  40f851:	loope  0x40f81d
  40f853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f854:	test   esi,0x1b03be67
  40f85a:	sbb    esi,ecx
  40f85c:	je     0x40f87e
  40f85e:	in     al,dx
  40f85f:	xor    eax,0xb3baaca6
  40f864:	inc    eax
  40f865:	or     ah,BYTE PTR [esi]
  40f867:	xor    eax,0xb58c9382
  40f86c:	mov    edx,0xe4de013a
  40f871:	sbb    edx,DWORD PTR [ebx+0x5506977d]
  40f877:	shl    dh,cl
  40f879:	xchg   DWORD PTR ds:0x235c68cf,ecx
  40f87f:	jecxz  0x40f810
  40f881:	inc    ebp
  40f882:	jnp    0x40f8e9
  40f884:	loope  0x40f84c
  40f886:	or     BYTE PTR [edi],bh
  40f888:	retf   0xfff9
  40f88b:	sbb    bl,BYTE PTR [ebx]
  40f88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f88e:	out    dx,eax
  40f88f:	mov    ds:0x8b116b13,al
  40f894:	seta   BYTE PTR [eax]
  40f897:	push   cs
  40f898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f899:	push   eax
  40f89a:	add    edi,DWORD PTR [eax]
  40f89c:	xchg   BYTE PTR [ecx+0x5b71042e],dh
  40f8a2:	aad    0xcb
  40f8a4:	iret   
  40f8a5:	dec    eax
  40f8a6:	cmp    esp,DWORD PTR cs:[edi-0x3f]
  40f8aa:	imul   ecx,DWORD PTR [eax+edx*1-0x3dbfab1],0x90aeea18
  40f8b5:	ins    DWORD PTR es:[edi],dx
  40f8b6:	iret   
  40f8b7:	jb     0x40f91e
  40f8b9:	mov    ds:0xaf99e449,eax
  40f8be:	jp     0x40f891
  40f8c0:	mov    eax,0xac62fb39
  40f8c5:	dec    eax
  40f8c6:	jmp    0x40f903
  40f8c8:	test   BYTE PTR [edi+0x753e7fdc],bh
  40f8ce:	inc    ebx
  40f8cf:	jns    0x40f935
  40f8d1:	xchg   ecx,eax
  40f8d2:	addr16 pop ss
  40f8d4:	aaa    
  40f8d5:	xchg   ebx,eax
  40f8d6:	(bad)  
  40f8d7:	jns    0x40f85d
  40f8d9:	(bad)  
  40f8da:	push   esp
  40f8db:	and    al,0xf
  40f8dd:	aad    0x64
  40f8df:	cli    
  40f8e0:	pop    eax
  40f8e1:	adc    BYTE PTR [esp+eiz*2+0x584d1e82],0x29
  40f8e9:	add    al,0xa6
  40f8eb:	lea    edi,[esi+0x56a37886]
  40f8f1:	xchg   esp,eax
  40f8f2:	not    BYTE PTR [esi+edx*2]
  40f8f5:	xor    edx,DWORD PTR [edx]
  40f8f7:	lea    esi,[esp+ebx*2]
  40f8fa:	int    0xb0
  40f8fc:	call   DWORD PTR [ebp+edx*8-0x59129dd6]
  40f903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f904:	adc    DWORD PTR [eax+0x6b7efbaf],ebx
  40f90a:	or     ah,BYTE PTR [esi-0x3fa55871]
  40f910:	sub    al,0x1b
  40f912:	icebp  
  40f913:	mov    ds:0x7fefb872,eax
  40f918:	pop    esp
  40f919:	mov    ecx,0xf2f047e0
  40f91e:	dec    esp
  40f91f:	mov    ecx,0x2f874bb0
  40f924:	adc    eax,0x4c758f95
  40f929:	scas   al,BYTE PTR es:[edi]
  40f92a:	je     0x40f8c4
  40f92c:	gs out dx,eax
  40f92e:	sbb    eax,0x37b40af6
  40f933:	outs   dx,BYTE PTR ds:[esi]
  40f934:	lods   eax,DWORD PTR ds:[esi]
  40f935:	lock pushf 
  40f937:	dec    esp
  40f938:	xchg   edi,eax
  40f939:	cmp    edi,DWORD PTR [esi]
  40f93b:	sahf   
  40f93c:	pop    es
  40f93d:	sahf   
  40f93e:	or     DWORD PTR [edx+0x2112e09e],edi
  40f944:	dec    edx
  40f945:	shl    bh,cl
  40f947:	fwait
  40f948:	test   eax,0x53fc2e09
  40f94d:	int    0x5b
  40f94f:	add    eax,0x19cc9881
  40f954:	out    0x5a,eax
  40f956:	or     al,0x80
  40f958:	fs xchg ebx,eax
  40f95a:	mov    ds,edx
  40f95c:	mov    ecx,0xd174dad
  40f961:	out    dx,eax
  40f962:	rol    DWORD PTR [edi+0x6de48fbe],cl
  40f968:	jp     0x40f9c1
  40f96a:	inc    ebx
  40f96b:	je     0x40f9ad
  40f96d:	sub    DWORD PTR [edi+0x5b],ecx
  40f970:	arpl   WORD PTR [edx],sp
  40f972:	aaa    
  40f973:	cdq    
  40f974:	pop    ebp
  40f975:	mov    al,ds:0x27466ca9
  40f97a:	mov    edi,0xd985e755
  40f97f:	js     0x40f9ad
  40f981:	fsub   DWORD PTR [ecx]
  40f983:	imul   ecx,DWORD PTR [esi+esi*1+0x7e03113d],0x0
  40f98b:	xchg   esi,eax
  40f98c:	sbb    eax,0x27db2136
  40f991:	out    0xe2,eax
  40f993:	xor    eax,0xa806afc
  40f998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f999:	mov    bl,BYTE PTR [ecx]
  40f99b:	rol    dh,0x84
  40f99e:	stc    
  40f99f:	push   edi
  40f9a0:	inc    esp
  40f9a1:	pusha  
  40f9a2:	gs int 0xc7
  40f9a5:	cmp    DWORD PTR ds:0xaf8b1b27,edi
  40f9ab:	push   eax
  40f9ac:	pushf  
  40f9ad:	pop    edi
  40f9ae:	push   ebp
  40f9af:	mov    es,eax
  40f9b1:	xor    esp,DWORD PTR [ebx]
  40f9b3:	rcl    BYTE PTR [bx+di-0x415b],cl
  40f9b8:	lods   eax,DWORD PTR ds:[esi]
  40f9b9:	fnstsw WORD PTR [eax+ebx*1-0x75b34422]
  40f9c0:	and    eax,0x7ec2617b
  40f9c5:	inc    BYTE PTR [esi-0x3a19a85e]
  40f9cb:	cmp    DWORD PTR ds:0x8810785a,edi
  40f9d1:	call   0xdf2a1b3d
  40f9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9d7:	leave  
  40f9d8:	leave  
  40f9d9:	xchg   ecx,eax
  40f9da:	sub    DWORD PTR [ecx+ebx*8],0xffffffc4
  40f9de:	lahf   
  40f9df:	xchg   esp,eax
  40f9e0:	cwde   
  40f9e1:	das    
  40f9e2:	xor    DWORD PTR [ebp+0x3653a63c],0xffffffbe
  40f9e9:	xchg   ebp,eax
  40f9ea:	xor    DWORD PTR [ebx],edx
  40f9ec:	aad    0xef
  40f9ee:	xchg   edx,esp
  40f9f0:	sti    
  40f9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f2:	jecxz  0x40f9bc
  40f9f4:	push   0x493591c1
  40f9f9:	cli    
  40f9fa:	test   al,0x82
  40f9fc:	jns    0x40f98a
  40f9fe:	mov    cl,0xf8
  40fa00:	mov    eax,0x20eee8cd
  40fa05:	bound  ecx,QWORD PTR [edi+eax*4+0x42af7f9]
  40fa0c:	pop    ss
  40fa0d:	push   0xffffff84
  40fa0f:	xchg   edx,eax
  40fa10:	int3   
  40fa11:	jbe    0x40f99e
  40fa13:	mov    WORD PTR [edi+0x7da78a1c],?
  40fa19:	(bad)
  40fa1c:	outs   dx,DWORD PTR ds:[esi]
  40fa1d:	jo     0x40fa1d
  40fa1f:	test   DWORD PTR [ecx+0x7a],ebp
  40fa22:	dec    eax
  40fa23:	xor    al,0xbe
  40fa25:	mov    bl,0xa3
  40fa27:	adc    BYTE PTR [edi+eax*4],dl
  40fa2a:	scas   eax,DWORD PTR es:[edi]
  40fa2b:	inc    esp
  40fa2c:	cld    
  40fa2d:	pop    esp
  40fa2e:	fcom   QWORD PTR [esi-0x7bc3574]
  40fa34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa35:	out    dx,eax
  40fa36:	call   0xf0f9:0xa6b0a6a9
  40fa3d:	pop    esi
  40fa3e:	in     eax,0x55
  40fa40:	sbb    eax,0x701865ce
  40fa45:	mov    DWORD PTR [edx+edx*4-0x6373958c],eax
  40fa4c:	mov    ebx,0xa3a3636d
  40fa51:	scas   al,BYTE PTR es:[edi]
  40fa52:	push   ebx
  40fa53:	test   DWORD PTR [ebx],esi
  40fa55:	pop    esp
  40fa56:	and    edi,0x6f9213de
  40fa5c:	xchg   edx,eax
  40fa5d:	adc    al,0x1d
  40fa5f:	add    eax,0x586569c6
  40fa64:	aas    
  40fa65:	mov    al,ds:0xc1b5d7df
  40fa6a:	scas   eax,DWORD PTR es:[edi]
  40fa6b:	out    dx,eax
  40fa6c:	adc    esp,DWORD PTR [esi-0x1c]
  40fa6f:	dec    esi
  40fa70:	mov    al,ds:0x94f7373c
  40fa75:	sub    BYTE PTR [ebx+ebp*2+0x31496fe8],ah
  40fa7c:	shufps xmm6,XMMWORD PTR [ebx+0x77abd63a],0x94
  40fa84:	data16 int 0x78
  40fa87:	sub    eax,0x36ea82cd
  40fa8c:	xchg   ecx,eax
  40fa8d:	adc    cl,bh
  40fa8f:	sar    dh,cl
  40fa91:	sub    eax,0xd698af7c
  40fa96:	mov    dh,0x2e
  40fa98:	push   eax
  40fa99:	retf   
  40fa9a:	dec    ebx
  40fa9b:	enter  0x357,0xb2
  40fa9f:	sbb    al,0xbc
  40faa1:	sub    eax,0x5954eaab
  40faa6:	dec    ebx
  40faa7:	cmp    ecx,DWORD PTR [edi+edx*1+0x64c517f0]
  40faae:	loopne 0x40face
  40fab0:	push   ecx
  40fab1:	mov    ah,0x98
  40fab3:	rol    DWORD PTR [ebx-0x6c],cl
  40fab6:	out    0x7a,eax
  40fab8:	stc    
  40fab9:	fdiv   QWORD PTR [ebx-0x45]
  40fabc:	xchg   BYTE PTR [esi],dh
  40fabe:	sub    ebx,0xfffffff8
  40fac1:	pop    ebp
  40fac2:	push   0xffffff9e
  40fac4:	mov    WORD PTR [esp+ebx*4+0x1b60465a],?
  40facb:	scas   eax,DWORD PTR es:[edi]
  40facc:	inc    edx
  40facd:	xchg   DWORD PTR [ecx+ecx*4],ecx
  40fad0:	add    ecx,esp
  40fad2:	pop    ebx
  40fad3:	hlt    
  40fad4:	mov    esp,0x7d8c065e
  40fad9:	or     ecx,DWORD PTR cs:[eax+0x11]
  40fadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fade:	xchg   ecx,eax
  40fadf:	and    esi,DWORD PTR [ecx+0x77]
  40fae2:	push   es
  40fae3:	xchg   esi,eax
  40fae4:	repz test eax,0x9d45ae4b
  40faea:	test   DWORD PTR [ebx],0x71354e9c
  40faf0:	rcl    bl,0x15
  40faf3:	lock cmp ecx,DWORD PTR [esi+0x6f6ad47b]
  40fafa:	imul   edi,DWORD PTR [ecx-0x7f969a27],0xffffffba
  40fb01:	(bad)  
  40fb02:	xchg   edi,eax
  40fb03:	ins    BYTE PTR es:[edi],dx
  40fb04:	mov    edx,0x1026b293
  40fb09:	xor    BYTE PTR [ebx-0x5d],ah
  40fb0c:	mov    eax,0x47031cd1
  40fb11:	pusha  
  40fb12:	and    esi,esp
  40fb14:	xchg   cx,ax
  40fb16:	add    DWORD PTR [edx+0x655c46d7],0xffffffef
  40fb1d:	cmp    ah,al
  40fb1f:	fistp  QWORD PTR [ecx]
  40fb21:	mov    esi,0x6b5446a7
  40fb26:	add    eax,0xe211a35d
  40fb2b:	shl    BYTE PTR [ecx+esi*4],cl
  40fb2e:	dec    BYTE PTR [ebx+0x57]
  40fb31:	call   0xc91ec33a
  40fb36:	lock dec esp
  40fb38:	push   ecx
  40fb39:	repnz pop edi
  40fb3b:	inc    esp
  40fb3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb3d:	pop    ss
  40fb3e:	gs mov edx,0xba93d6b1
  40fb44:	cmp    BYTE PTR [ebp+0x7e652907],0xce
  40fb4b:	les    edi,FWORD PTR es:[edi+0x16f6fc44]
  40fb52:	pop    edx
  40fb53:	or     al,0x54
  40fb55:	lock adc DWORD PTR [edi+0x6b],esp
  40fb59:	in     al,0x8d
  40fb5b:	pop    es
  40fb5c:	pop    esi
  40fb5d:	xchg   ebx,eax
  40fb5e:	das    
  40fb5f:	shl    BYTE PTR [esi],0x90
  40fb62:	imul   ecx,DWORD PTR [eax],0xbccdf528
  40fb68:	enter  0xa5f4,0x96
  40fb6c:	inc    edi
  40fb6d:	push   esp
  40fb6e:	(bad)  
  40fb70:	scas   eax,DWORD PTR es:[edi]
  40fb71:	test   al,0x4f
  40fb73:	(bad)  
  40fb74:	jg     0x40fba2
  40fb76:	jmp    0x67734c29
  40fb7b:	ins    BYTE PTR es:[edi],dx
  40fb7c:	push   esp
  40fb7d:	push   ebx
  40fb7e:	inc    ebx
  40fb7f:	mov    dh,0x4
  40fb81:	adc    eax,DWORD PTR [esi]
  40fb83:	cmp    ch,BYTE PTR [eax]
  40fb85:	std    
  40fb86:	mov    eax,ds:0xa6d4550f
  40fb8b:	jne    0x40fb8c
  40fb8d:	daa    
  40fb8e:	xchg   ecx,eax
  40fb8f:	push   cs
  40fb90:	popa   
  40fb91:	popa   
  40fb92:	call   0x9e2e:0x5fa2134a
  40fb99:	and    ebp,DWORD PTR [eax+0x339e2b8d]
  40fb9f:	(bad)  
  40fba0:	retf   
  40fba1:	mov    cl,0xa8
  40fba3:	aad    0x1b
  40fba5:	sbb    al,0x82
  40fba7:	sbb    al,0x2b
  40fba9:	fcomp  QWORD PTR [esi+edx*8]
  40fbac:	add    al,0xc
  40fbae:	fimul  DWORD PTR [esi+0x6289df81]
  40fbb4:	aam    0x59
  40fbb6:	pop    edx
  40fbb7:	ds mov cl,0xe6
  40fbba:	(bad)  
  40fbbb:	pushf  
  40fbbc:	sahf   
  40fbbd:	sub    ah,0x8f
  40fbc0:	es imul edx,eax,0xffffff88
  40fbc4:	mov    dh,0xe
  40fbc6:	xor    BYTE PTR [edi-0x59],ah
  40fbc9:	std    
  40fbca:	dec    esi
  40fbcb:	gs pushf 
  40fbcd:	repnz push ds
  40fbcf:	mov    ecx,0x83c94dbe
  40fbd4:	push   eax
  40fbd5:	xchg   edx,eax
  40fbd6:	aam    0xc7
  40fbd8:	pop    ss
  40fbd9:	test   eax,esp
  40fbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbdc:	bound  eax,QWORD PTR [ecx+esi*1+0x5f]
  40fbe0:	add    DWORD PTR [esi+0x5804c449],eax
  40fbe6:	pushf  
  40fbe7:	mov    al,0x1c
  40fbe9:	xor    DWORD PTR ds:0xec5ff936,edx
  40fbef:	dec    esp
  40fbf0:	mov    edi,0xf0de1f50
  40fbf5:	jp     0x40fbae
  40fbf7:	push   esp
  40fbf8:	cmp    eax,0x7d8dc6bf
  40fbfd:	enter  0x4e2d,0xf5
  40fc01:	mov    dh,0x30
  40fc03:	imul   edi,edi,0x47
  40fc06:	aad    0x66
  40fc08:	gs (bad) 
  40fc0a:	stos   BYTE PTR es:[edi],al
  40fc0b:	stos   DWORD PTR es:[edi],eax
  40fc0c:	jne    0x40fc7c
  40fc0e:	dec    edx
  40fc0f:	add    BYTE PTR [ecx],cl
  40fc11:	(bad)  
  40fc12:	sbb    BYTE PTR [esi+0x60],al
  40fc15:	ret    
  40fc16:	inc    esi
  40fc17:	cmp    dh,ch
  40fc19:	stos   BYTE PTR es:[edi],al
  40fc1a:	ins    BYTE PTR es:[edi],dx
  40fc1b:	cmc    
  40fc1c:	or     eax,0x678d08bf
  40fc21:	(bad)  
  40fc22:	cld    
  40fc23:	sub    BYTE PTR [eax+0x78],al
  40fc26:	xor    DWORD PTR [esi],ebp
  40fc28:	dec    eax
  40fc29:	add    dh,BYTE PTR [edi]
  40fc2b:	sbb    al,0x6c
  40fc2d:	adc    bl,dl
  40fc2f:	pusha  
  40fc30:	mov    ecx,0xf6be93fc
  40fc35:	fild   WORD PTR [ecx]
  40fc37:	jnp    0x40fcab
  40fc39:	nop
  40fc3a:	mov    esi,0x4bb00029
  40fc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc40:	pop    eax
  40fc41:	xchg   DWORD PTR [ebp+0x67],edi
  40fc44:	mov    esi,0x48983695
  40fc49:	ror    BYTE PTR [ecx],1
  40fc4b:	bound  eax,QWORD PTR [esi+0x56459f5]
  40fc51:	ja     0x40fbec
  40fc53:	xchg   edi,eax
  40fc54:	sub    DWORD PTR [ecx-0x460f37ab],esi
  40fc5a:	ret    0x2979
  40fc5d:	adc    ebp,esi
  40fc5f:	jecxz  0x40fca8
  40fc61:	push   ss
  40fc62:	and    esp,DWORD PTR [ebp-0x5601a779]
  40fc68:	jne    0x40fc28
  40fc6a:	aaa    
  40fc6b:	out    0x74,al
  40fc6d:	jne    0x40fca6
  40fc6f:	in     eax,dx
  40fc70:	xchg   ebp,eax
  40fc71:	ds ja  0x40fcd2
  40fc74:	cli    
  40fc75:	or     edx,DWORD PTR [edi]
  40fc77:	ror    BYTE PTR [ebx],0xe0
  40fc7a:	pop    ds
  40fc7b:	xchg   edx,eax
  40fc7c:	(bad)  
  40fc7d:	add    si,WORD PTR [eax-0xa75bb89]
  40fc84:	ins    DWORD PTR es:[edi],dx
  40fc85:	arpl   WORD PTR [eax],di
  40fc87:	xchg   ecx,eax
  40fc88:	(bad)  
  40fc89:	xchg   ebx,eax
  40fc8a:	xchg   ebp,eax
  40fc8b:	stos   BYTE PTR es:[edi],al
  40fc8c:	sbb    DWORD PTR [eax],0x7c
  40fc8f:	loop   0x40fc6f
  40fc91:	pusha  
  40fc92:	sbb    ah,BYTE PTR [esi+ecx*4-0x67d9742c]
  40fc99:	daa    
  40fc9a:	mov    ebx,0x45eeda8e
  40fc9f:	mov    bl,0xff
  40fca1:	sahf   
  40fca2:	popf   
  40fca3:	jg     0x40fcb7
  40fca5:	popf   
  40fca6:	jbe    0x40fcd2
  40fca8:	cmp    DWORD PTR [ebp+ebx*8+0x1b818a4a],ebx
  40fcaf:	xchg   DWORD PTR [eax+0x19],ebp
  40fcb2:	push   ebx
  40fcb3:	int    0x5
  40fcb5:	xchg   DWORD PTR [esp+ecx*4],eax
  40fcb8:	push   es
  40fcb9:	adc    al,0x36
  40fcbb:	call   0x844ab66b
  40fcc0:	inc    edx
  40fcc1:	pop    esp
  40fcc2:	lods   eax,DWORD PTR ds:[esi]
  40fcc3:	loopne 0x40fd04
  40fcc5:	inc    esi
  40fcc6:	call   0xe0bd6bdf
  40fccb:	cmp    ebx,DWORD PTR [edi]
  40fccd:	pop    ss
  40fcce:	nop
  40fccf:	push   0xffffffd8
  40fcd1:	loop   0x40fcb1
  40fcd3:	je     0x40fcb7
  40fcd5:	std    
  40fcd6:	mov    bl,0x6
  40fcd8:	jp     0x40fcc3
  40fcda:	shl    dl,0xff
  40fcdd:	test   DWORD PTR [edx+esi*2],eax
  40fce0:	xor    al,0x63
  40fce2:	cmp    eax,0x481e5b3f
  40fce7:	sti    
  40fce8:	(bad)  
  40fce9:	not    bl
  40fceb:	adc    bl,BYTE PTR [edx]
  40fced:	ja     0x40fd2b
  40fcef:	push   edi
  40fcf0:	inc    ecx
  40fcf1:	test   eax,0x334d9a42
  40fcf6:	not    BYTE PTR [edx+0x4b]
  40fcf9:	or     DWORD PTR [eax-0x24789ad8],esp
  40fcff:	imul   esi,DWORD PTR [esi-0x38],0xfa2f588f
  40fd06:	xchg   edx,eax
  40fd07:	test   DWORD PTR [eax],ecx
  40fd09:	mov    DWORD PTR [ebp+0x172c11c6],ebx
  40fd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd10:	arpl   WORD PTR ds:0xd184036c,dx
  40fd16:	leave  
  40fd17:	push   eax
  40fd18:	xor    al,0x5d
  40fd1a:	xchg   ebx,eax
  40fd1b:	adc    edi,DWORD PTR [ecx+0x3]
  40fd1e:	inc    eax
  40fd1f:	int3   
  40fd20:	fbld   TBYTE PTR [ecx]
  40fd22:	adc    DWORD PTR [esi+0x5ee9c3a1],ebp
  40fd28:	or     al,0x65
  40fd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd2b:	and    BYTE PTR [edx+ebx*1+0x50],cl
  40fd2f:	(bad)  
  40fd30:	fwait
  40fd31:	mov    esi,0xf2afb6bc
  40fd36:	xchg   DWORD PTR [esp+0x12],eax
  40fd3a:	push   eax
  40fd3b:	mov    ch,0x43
  40fd3d:	lahf   
  40fd3e:	pop    es
  40fd3f:	xor    ecx,ebp
  40fd41:	daa    
  40fd42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd43:	and    dl,cl
  40fd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd46:	cli    
  40fd47:	int3   
  40fd48:	push   es
  40fd49:	xchg   ebx,eax
  40fd4a:	jge    0x40fd8a
  40fd4c:	call   0xdcccac16
  40fd51:	or     cl,BYTE PTR [esi-0x7e]
  40fd54:	cmc    
  40fd55:	pop    edx
  40fd56:	inc    ecx
  40fd57:	pushf  
  40fd58:	dec    esi
  40fd59:	dec    ecx
  40fd5a:	pushf  
  40fd5b:	dec    ebp
  40fd5c:	fucom  st(7)
  40fd5e:	push   cs
  40fd5f:	inc    esp
  40fd60:	loope  0x40fd56
  40fd62:	mov    dl,0xb1
  40fd64:	inc    BYTE PTR [esi]
  40fd66:	loopne 0x40fd1b
  40fd68:	(bad)  
  40fd69:	gs push es
  40fd6b:	dec    esp
  40fd6c:	jne    0x40fdea
  40fd6e:	retf   0x3d53
  40fd71:	sbb    al,0xef
  40fd73:	sbb    edx,DWORD PTR ds:0xefefa0a9
  40fd79:	xchg   ecx,eax
  40fd7a:	bound  ecx,QWORD PTR [esi-0x31]
  40fd7d:	or     al,0x55
  40fd7f:	loop   0x40fde7
  40fd81:	add    ah,BYTE PTR [ebp-0x60]
  40fd84:	xor    edx,DWORD PTR [esi-0x597319fd]
  40fd8a:	lds    esp,FWORD PTR [esi-0x21]
  40fd8d:	pop    ds
  40fd8e:	loope  0x40fdc9
  40fd90:	loop   0x40fdc1
  40fd92:	lods   al,BYTE PTR ds:[esi]
  40fd93:	cmp    DWORD PTR [eax+0x36d84d0e],ebx
  40fd99:	add    ecx,DWORD PTR [edx+0x4e00b7c4]
  40fd9f:	stc    
  40fda0:	dec    esp
  40fda1:	out    dx,al
  40fda2:	sub    ah,0x4b
  40fda5:	test   al,0x71
  40fda7:	shl    DWORD PTR [ecx-0x21fdab51],cl
  40fdad:	out    dx,eax
  40fdae:	ss stos BYTE PTR es:[edi],al
  40fdb0:	jno    0x40fda9
  40fdb2:	push   0x43
  40fdb4:	shr    DWORD PTR [ecx+0x201afda3],1
  40fdba:	pop    esp
  40fdbb:	pop    esi
  40fdbc:	dec    ebp
  40fdbd:	stos   BYTE PTR es:[edi],al
  40fdbe:	ror    DWORD PTR [ebp+0x1d],0x1b
  40fdc2:	adc    al,BYTE PTR [edi+0x13]
  40fdc5:	and    al,0x37
  40fdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdc8:	fst    DWORD PTR [edi+0x7446d663]
  40fdce:	stc    
  40fdcf:	iret   
  40fdd0:	add    BYTE PTR [ecx],0xc9
  40fdd3:	je     0x40fda3
  40fdd5:	jnp    0x40fdd4
  40fdd7:	daa    
  40fdd8:	idiv   DWORD PTR [edi]
  40fdda:	popf   
  40fddb:	out    dx,al
  40fddc:	mov    al,BYTE PTR [esi-0x70]
  40fddf:	mov    dl,0xbc
  40fde1:	sar    BYTE PTR [ebx],0xc8
  40fde4:	xor    esi,DWORD PTR [ebx-0xb4efb6e]
  40fdea:	or     al,0x0
  40fdec:	int3   
  40fded:	outs   dx,DWORD PTR ds:[esi]
  40fdee:	repnz retf 
  40fdf0:	int    0xd3
  40fdf2:	mov    ebp,0xb4a64fd4
  40fdf7:	xor    al,0x31
  40fdf9:	fcom   DWORD PTR [edi-0x6a95433e]
  40fdff:	fidiv  DWORD PTR [esi-0x75]
  40fe02:	fldz   
  40fe04:	lods   eax,DWORD PTR ds:[esi]
  40fe05:	retf   
  40fe06:	sbb    al,0x99
  40fe08:	cmp    al,0x40
  40fe0a:	mov    bl,0x3c
  40fe0c:	mul    BYTE PTR [esi]
  40fe0e:	repnz in eax,dx
  40fe10:	mov    edi,0xb73a13f0
  40fe15:	scas   eax,DWORD PTR es:[edi]
  40fe16:	(bad)  
  40fe17:	adc    BYTE PTR [ecx+ecx*1],dl
  40fe1a:	outs   dx,BYTE PTR ds:[esi]
  40fe1b:	ins    BYTE PTR es:[edi],dx
  40fe1c:	dec    edx
  40fe1d:	nop
  40fe1e:	mov    bh,0xcf
  40fe20:	imul   edx,DWORD PTR [edx],0xffffffa3
  40fe23:	cmp    eax,0x45fb9acc
  40fe28:	push   edx
  40fe29:	test   BYTE PTR [ebx-0x1b],cl
  40fe2c:	or     edx,ecx
  40fe2e:	jle    0x40fe10
  40fe30:	sbb    eax,0xd8104386
  40fe35:	push   cs
  40fe36:	repnz hlt 
  40fe38:	fidiv  DWORD PTR [eax+0x283840db]
  40fe3e:	pop    esp
  40fe3f:	jae    0x40fe74
  40fe41:	rol    BYTE PTR [edi+0x4a],cl
  40fe44:	mov    fs,ecx
  40fe46:	jo     0x40fe91
  40fe48:	push   esi
  40fe49:	and    bh,cl
  40fe4b:	mov    WORD PTR [ebx-0x28],?
  40fe4e:	add    DWORD PTR [ecx+0x32],ecx
  40fe51:	retf   
  40fe52:	sub    ah,bh
  40fe54:	xchg   ebx,eax
  40fe55:	jl     0x40fe70
  40fe57:	mov    edi,0x9e8c600c
  40fe5c:	and    DWORD PTR [ecx+ecx*2-0x19],ecx
  40fe60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe61:	sbb    BYTE PTR [eax],0x45
  40fe64:	and    DWORD PTR [ecx+0x35e5a41b],0x68
  40fe6b:	jle    0x40fe6e
  40fe6d:	add    eax,0x44c784c5
  40fe72:	push   esi
  40fe73:	les    esp,FWORD PTR [esi-0x6d]
  40fe76:	fmul   QWORD PTR [esi-0x1bcb919]
  40fe7c:	inc    eax
  40fe7d:	add    edx,esi
  40fe7f:	ds pop ss
  40fe81:	outs   dx,DWORD PTR ds:[esi]
  40fe82:	sbb    edx,ecx
  40fe84:	pop    eax
  40fe85:	mov    edx,DWORD PTR [edi-0x337d6b33]
  40fe8b:	inc    edi
  40fe8c:	or     DWORD PTR [eax],ebx
  40fe8e:	test   al,0xba
  40fe90:	jp     0x40fedf
  40fe92:	mov    ecx,0x99973450
  40fe97:	jg     0x40fea0
  40fe99:	shl    DWORD PTR [edi],0x9
  40fe9c:	sbb    bh,BYTE PTR [eax]
  40fe9e:	cmp    al,0xbd
  40fea0:	call   0x3cee:0xea4c6f8d
  40fea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea8:	xchg   esi,eax
  40fea9:	(bad)  
  40feaa:	sub    cl,BYTE PTR [ecx+0x72]
  40fead:	sub    eax,0xeb07bcbe
  40feb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb3:	xchg   ebx,eax
  40feb4:	jp     0x40fe43
  40feb6:	rcr    BYTE PTR [esi],1
  40feb8:	mov    ?,esp
  40feba:	in     al,0xe4
  40febc:	inc    edi
  40febd:	cmp    dh,BYTE PTR [ebx+0x68098990]
  40fec3:	into   
  40fec4:	inc    esp
  40fec5:	iret   
  40fec6:	fucomip st,st(6)
  40fec8:	pop    ss
  40fec9:	push   0x4c660a1f
  40fece:	inc    edx
  40fecf:	gs stos BYTE PTR es:[edi],al
  40fed1:	outs   dx,BYTE PTR ds:[esi]
  40fed2:	jmp    0x40fee4
  40fed4:	mov    WORD PTR [eax],fs
  40fed6:	push   ecx
  40fed7:	retf   
  40fed8:	mov    BYTE PTR [edi-0x30],bl
  40fedb:	lahf   
  40fedc:	int3   
  40fedd:	xor    BYTE PTR [ebx+0x54d9f1b4],cl
  40fee3:	in     eax,0xfb
  40fee5:	dec    edx
  40fee6:	jle    0x40ff5e
  40fee8:	call   0xec881b8a
  40feed:	pop    es
  40feee:	and    edx,edx
  40fef0:	push   ebp
  40fef1:	out    0xf3,eax
  40fef3:	xchg   DWORD PTR [ecx-0x2],ebx
  40fef6:	fisttp WORD PTR [ebx-0x6c8999af]
  40fefc:	cmp    ah,BYTE PTR [ecx]
  40fefe:	(bad)  [edx]
  40ff00:	mov    esp,0xf13abca5
  40ff05:	jle    0x40ff4c
  40ff07:	mov    edx,DWORD PTR [eax+0x62]
  40ff0a:	es jmp 0xb061f1f7
  40ff10:	dec    ebp
  40ff11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff12:	mov    al,0x92
  40ff14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff15:	int    0x86
  40ff17:	aaa    
  40ff18:	es jo  0x40ff68
  40ff1b:	(bad)  
  40ff1c:	icebp  
  40ff1d:	fidivr DWORD PTR [edx-0xe]
  40ff20:	adc    eax,0x5b8f2a79
  40ff25:	loop   0x40ff33
  40ff27:	or     DWORD PTR [edi-0x32f565c4],edx
  40ff2d:	sbb    edi,ebx
  40ff2f:	mov    al,0xd2
  40ff31:	ror    BYTE PTR [edi],cl
  40ff33:	sub    eax,0xb783757e
  40ff38:	xor    BYTE PTR [ecx+edi*8],al
  40ff3b:	inc    esi
  40ff3c:	push   ds
  40ff3d:	(bad)  
  40ff3e:	mov    esp,0x84dbea23
  40ff43:	xchg   edx,eax
  40ff44:	or     al,BYTE PTR [edx+eax*4+0x47]
  40ff48:	test   BYTE PTR [edx-0x49],bl
  40ff4b:	xor    BYTE PTR [edx+0x2c],al
  40ff4e:	dec    esi
  40ff4f:	repz int3 
  40ff51:	inc    eax
  40ff52:	cmc    
  40ff53:	imul   esp,DWORD PTR [eax+ecx*1],0xe6b3cb1a
  40ff5a:	lea    eax,[edi+0x63]
  40ff5d:	push   ebx
  40ff5e:	lahf   
  40ff5f:	es cmp esi,esi
  40ff62:	pop    edi
  40ff63:	mov    al,0x46
  40ff65:	stos   BYTE PTR es:[edi],al
  40ff66:	push   edx
  40ff67:	xchg   DWORD PTR [edx],esi
  40ff69:	jg     0x40ff7a
  40ff6b:	mov    dh,0x5
  40ff6d:	fcomp  QWORD PTR [edi+0x46]
  40ff70:	out    dx,al
  40ff71:	adc    bl,al
  40ff73:	sti    
  40ff74:	aam    0xb
  40ff76:	imul   ebp,DWORD PTR [edx-0x403566eb],0x60
  40ff7d:	push   ss
  40ff7e:	dec    BYTE PTR [eax-0x65]
  40ff81:	sar    edx,0xa4
  40ff84:	lahf   
  40ff85:	cs jne 0x40ff38
  40ff88:	mov    edx,0x8ce12212
  40ff8d:	jno    0x40fff3
  40ff8f:	or     ebp,ecx
  40ff91:	icebp  
  40ff92:	in     al,dx
  40ff93:	xchg   esi,eax
  40ff94:	adc    al,0xc
  40ff96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff97:	xchg   esp,eax
  40ff98:	cmp    eax,0xc2823152
  40ff9d:	into   
  40ff9e:	xchg   ebp,eax
  40ff9f:	pop    ebx
  40ffa0:	push   0x4459fb1c
  40ffa5:	cld    
  40ffa6:	out    0xcb,eax
  40ffa8:	mov    dl,0x5
  40ffaa:	jae    0x40ffc1
  40ffac:	pop    ss
  40ffad:	lock cmp al,bl
  40ffb0:	int3   
  40ffb1:	and    edx,DWORD PTR ds:0x912688bf
  40ffb7:	das    
  40ffb8:	mov    al,0xad
  40ffba:	and    eax,0x291a722e
  40ffbf:	ret    0x52c5
  40ffc2:	mov    edx,0x18e6ce36
  40ffc7:	or     dh,bh
  40ffc9:	retf   0xbafa
  40ffcc:	push   ebp
  40ffcd:	jb     0x40ff8c
  40ffcf:	hlt    
  40ffd0:	outs   dx,BYTE PTR ds:[esi]
  40ffd1:	dec    ebp
  40ffd2:	cli    
  40ffd3:	loop   0x40ff8a
  40ffd5:	jnp    0x410011
  40ffd7:	in     eax,dx
  40ffd8:	push   0xffffffdf
  40ffda:	xor    ax,0xf499
  40ffde:	mov    ch,0x65
  40ffe0:	xor    BYTE PTR [ebx],cl
  40ffe2:	mov    ebp,0x79128be3
  40ffe7:	hlt    
  40ffe8:	fsubr  st(4),st
  40ffea:	cmp    BYTE PTR [eax],0x99
  40ffed:	xlat   BYTE PTR ds:[ebx]
  40ffee:	inc    edx
  40ffef:	imul   ebx,DWORD PTR [esi+0x7d],0x2a509f77
  40fff6:	jns    0x40fff5
  40fff8:	xchg   bl,bh
  40fffa:	fs aas 
  40fffc:	(bad)  [ebx-0x3053260b]
  410002:	enter  0xb2,0x91
  410006:	adc    eax,DWORD PTR [edx+0x79]
  410009:	dec    esp
  41000a:	jp     0x40ffd7
  41000c:	stos   BYTE PTR es:[edi],al
  41000d:	aaa    
  41000e:	into   
  41000f:	out    0x55,eax
  410011:	out    0xea,eax
  410013:	ror    DWORD PTR [eax],0x47
  410016:	outs   dx,BYTE PTR ds:[esi]
  410017:	sub    esp,ebp
  410019:	pop    esp
  41001a:	xchg   edx,eax
  41001b:	mov    ds:0x4b95e49d,eax
  410020:	fst    DWORD PTR [ecx+edi*1]
  410023:	push   esp
  410024:	repz jmp 0x4437:0x3455fa03
  41002c:	je     0x41002b
  41002e:	(bad)  
  41002f:	jno    0x410042
  410031:	(bad)  
  410032:	mov    ds:0x883e2042,eax
  410037:	pinsrw mm5,WORD PTR [ebx+0x11cf3c25],0x41
  41003f:	loope  0x40ffc3
  410041:	inc    ecx
  410042:	mov    ah,BYTE PTR ds:0x7f41cb1f
  410048:	mov    DWORD PTR [esi],esi
  41004a:	mov    eax,ds:0xf6d8a154
  41004f:	inc    ecx
  410050:	cmp    al,0x37
  410052:	cmc    
  410053:	sub    BYTE PTR [ebp-0xe],bh
  410056:	fcomp  QWORD PTR [ebx+ebx*2]
  410059:	adc    al,0xe1
  41005b:	scas   eax,DWORD PTR es:[edi]
  41005c:	xlat   BYTE PTR ds:[ebx]
  41005d:	adc    eax,0x7d845495
  410062:	dec    eax
  410063:	inc    eax
  410064:	push   ebp
  410065:	inc    edx
  410066:	stos   DWORD PTR es:[edi],eax
  410067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410068:	fnstenv ds:0xa51b505
  41006e:	push   es
  41006f:	pop    esi
  410070:	jg     0x410011
  410072:	sbb    eax,0x6ba432ca
  410077:	pop    esi
  410078:	ins    DWORD PTR es:[edi],dx
  410079:	xor    al,0x59
  41007b:	(bad)  [ebx]
  41007d:	mov    ecx,0xbdb59fc0
  410082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410084:	mov    ds:0x35d81686,eax
  410089:	jmp    0x410051
  41008b:	cmp    al,0x40
  41008d:	cwde   
  41008e:	or     eax,0x63e0e8ef
  410093:	add    eax,0x4ffe9a78
  410098:	pop    esp
  410099:	sar    BYTE PTR [eax],0x43
  41009c:	repz cmp al,0x64
  41009f:	xor    cl,cl
  4100a1:	sub    BYTE PTR [edx-0xd],bh
  4100a4:	scas   eax,DWORD PTR es:[edi]
  4100a5:	test   BYTE PTR [ebx],bl
  4100a7:	cmp    esp,DWORD PTR [esi-0x4b90ac31]
  4100ad:	call   0x45874ce2
  4100b2:	xchg   BYTE PTR ds:0xf3c709d2,dh
  4100b8:	pop    edx
  4100b9:	jmp    0x41005a
  4100bb:	aad    0xa5
  4100bd:	mov    edi,0x707b00a4
  4100c2:	push   0x70c5f163
  4100c7:	sbb    ebx,edi
  4100c9:	lea    esi,[edx-0x10acc75b]
  4100cf:	mov    al,ds:0xceb6511c
  4100d4:	sbb    ah,BYTE PTR [eax+0xfa7b69f]
  4100da:	push   esp
  4100db:	cmp    DWORD PTR [edi-0x76],ebx
  4100de:	jle    0x410158
  4100e0:	test   BYTE PTR [edx+0x17047738],cl
  4100e6:	jns    0x410113
  4100e8:	inc    BYTE PTR [esi]
  4100ea:	js     0x410106
  4100ec:	push   esi
  4100ed:	mov    DWORD PTR ds:0x331ac6e4,ecx
  4100f3:	push   ebx
  4100f4:	jne    0x4100fd
  4100f6:	fdivr  st,st(6)
  4100f8:	fs inc edx
  4100fa:	(bad)  
  4100fc:	dec    eax
  4100fd:	sub    eax,0xfaaa7d4f
  410102:	jmp    0x410156
  410104:	cmp    BYTE PTR [edx+ebx*8],cl
  410107:	or     bh,BYTE PTR [edx]
  410109:	adc    edx,DWORD PTR [ecx+0x1837d28d]
  41010f:	jno    0x4100a8
  410111:	xchg   DWORD PTR [edi+0x555690af],esp
  410117:	out    0x49,eax
  410119:	mov    eax,gs
  41011b:	push   es
  41011c:	(bad)  
  41011d:	es xchg esi,eax
  41011f:	fwait
  410120:	push   0x9e29aead
  410125:	aam    0x36
  410127:	xchg   ebp,eax
  410128:	mov    eax,0xc7d03476
  41012d:	jecxz  0x410143
  41012f:	stos   BYTE PTR es:[edi],al
  410130:	xchg   edx,eax
  410131:	xchg   ecx,eax
  410132:	xor    DWORD PTR [ebp-0x4ad14378],0xf109fa34
  41013c:	frstor [edi-0x70]
  41013f:	and    ebx,DWORD PTR [edi]
  410141:	rcr    BYTE PTR [edi-0x13],0x52
  410145:	ret    
  410146:	iret   
  410147:	mov    al,ds:0x3d2326f4
  41014c:	into   
  41014d:	push   edi
  41014e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41014f:	ds rcl edx,1
  410152:	test   ebx,0x1969fbd1
  410158:	ret    0x9cde
  41015b:	sbb    ecx,DWORD PTR [ebx]
  41015d:	das    
  41015e:	mov    eax,ds:0x2da3045b
  410163:	dec    esp
  410164:	mov    BYTE PTR [ecx*1-0x74bc0379],cl
  41016b:	sbb    ebx,DWORD PTR [eax-0x13]
  41016e:	into   
  41016f:	mov    cl,0xfe
  410171:	and    BYTE PTR [ecx+0x57f7d3fb],bl
  410177:	pop    ecx
  410178:	stos   DWORD PTR es:[edi],eax
  410179:	push   edi
  41017a:	fistp  QWORD PTR [edi]
  41017c:	add    eax,0xa8ff226e
  410181:	pusha  
  410182:	js     0x4101ca
  410184:	out    0xa2,al
  410186:	stc    
  410187:	inc    esi
  410188:	das    
  410189:	push   ss
  41018a:	xor    DWORD PTR [edx+0x6],edi
  41018d:	add    BYTE PTR [esi],bl
  41018f:	call   0x9cd2ef96
  410194:	adc    al,0x59
  410196:	push   edi
  410197:	push   eax
  410198:	xor    BYTE PTR [esi+ecx*2+0x4f],bh
  41019c:	lds    ebp,FWORD PTR [edi]
  41019e:	jmp    0x5d9f0593
  4101a3:	sbb    BYTE PTR [ecx+0x16],0xb9
  4101a7:	clc    
  4101a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101a9:	add    cl,BYTE PTR [ebp+0x30]
  4101ac:	test   al,0x9c
  4101ae:	mov    BYTE PTR [ebx],0x6
  4101b1:	push   esp
  4101b2:	int3   
  4101b3:	pop    ebx
  4101b4:	ins    DWORD PTR es:[edi],dx
  4101b5:	lea    eax,[eax-0x4c]
  4101b8:	push   ss
  4101b9:	or     eax,0x29a3b683
  4101be:	repnz lods al,BYTE PTR ds:[esi]
  4101c0:	xor    BYTE PTR [edx+0x1718c2db],dl
  4101c6:	nop
  4101c7:	fs jae 0x410220
  4101ca:	(bad)  
  4101cb:	jno    0x4101bf
  4101cd:	dec    ecx
  4101ce:	xchg   esp,eax
  4101cf:	jl     0x410233
  4101d1:	cmp    esp,esi
  4101d3:	iret   
  4101d4:	les    edi,FWORD PTR [ebp-0x6da418f0]
  4101da:	hlt    
  4101db:	imul   ebx,DWORD PTR [eax],0x58
  4101de:	aad    0x2d
  4101e0:	out    0xc8,al
  4101e2:	clc    
  4101e3:	aad    0x1b
  4101e5:	out    0xde,al
  4101e7:	xchg   dh,bl
  4101e9:	repz inc ecx
  4101eb:	shl    DWORD PTR [esp+eiz*2-0x2e15d1c9],cl
  4101f2:	mov    edx,0xbe6aed44
  4101f7:	push   ss
  4101f8:	aas    
  4101f9:	ret    0x25ea
  4101fc:	mov    al,ds:0x6545ac2c
  410201:	int    0x2a
  410203:	idiv   eax
  410205:	sbb    al,0x10
  410207:	jmp    0x4101b0
  410209:	xor    esp,DWORD PTR [ebp-0x11]
  41020c:	lds    esp,FWORD PTR [ecx-0x6]
  41020f:	sar    DWORD PTR [esi],0x7b
  410212:	lods   eax,DWORD PTR ds:[esi]
  410213:	cs mov bl,0x4c
  410216:	inc    ebp
  410217:	pop    esp
  410218:	shr    BYTE PTR ss:[ebp+0x36],0x80
  41021d:	or     ch,BYTE PTR [edi-0x76]
  410220:	inc    esp
  410221:	fild   DWORD PTR [esi+edx*2+0x2b]
  410225:	arpl   si,si
  410227:	adc    dl,ch
  410229:	loop   0x410231
  41022b:	mov    ecx,0xd70639dc
  410230:	adc    DWORD PTR [esi],esi
  410232:	sub    BYTE PTR [edi+0x2b],al
  410235:	(bad)  
  410236:	int3   
  410237:	mov    ecx,0x811de204
  41023c:	cli    
  41023d:	fcomi  st,st(3)
  41023f:	jb     0x41025c
  410241:	call   0x55a2:0x6a4872a
  410248:	mov    dh,0x78
  41024a:	cli    
  41024b:	stos   DWORD PTR es:[edi],eax
  41024c:	jno    0x41022f
  41024e:	and    BYTE PTR es:[edx+0x65897541],al
  410255:	dec    edx
  410256:	push   0xe
  410258:	or     DWORD PTR [ebp-0x43],edx
  41025b:	aaa    
  41025c:	jl     0x4102da
  41025e:	jecxz  0x4102ad
  410260:	clc    
  410261:	call   0xa6a6:0x3afebe3b
  410268:	jmp    0x3d8bf526
  41026d:	jmp    0x41021c
  41026f:	jno    0x4102dc
  410271:	jae    0x410266
  410273:	jb     0x4102f2
  410275:	fwait
  410276:	add    BYTE PTR [ecx+edi*8+0x78],0x34
  41027b:	mov    edi,0xdffe74af
  410280:	cmp    edi,DWORD PTR [edx+edx*8+0x7]
  410284:	mov    ebp,0xdc2574ce
  410289:	push   edi
  41028a:	and    DWORD PTR [edx+0x6409df59],eax
  410290:	adc    edi,DWORD PTR [esi+0x5d]
  410293:	popa   
  410294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410295:	jae    0x41030d
  410297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410298:	not    BYTE PTR cs:[esi+0x56]
  41029c:	out    dx,eax
  41029d:	dec    esi
  41029e:	and    eax,0x721df2cb
  4102a3:	aad    0x1
  4102a5:	jae    0x410264
  4102a7:	push   edx
  4102a8:	add    ebp,ebx
  4102aa:	add    eax,0x6e253809
  4102af:	fnstenv [ebp+0x933dbbb]
  4102b5:	jle    0x41031b
  4102b7:	retf   
  4102b8:	sbb    eax,0x56ba02d1
  4102bd:	ror    BYTE PTR [ebx+0x5d],1
  4102c0:	mov    edi,0xe88f4bd7
  4102c5:	test   eax,0xfa696a35
  4102ca:	sub    WORD PTR [ebp-0x20],0x58
  4102cf:	push   ebx
  4102d0:	push   0xffffffe3
  4102d2:	sbb    eax,0x48a91ad8
  4102d7:	test   DWORD PTR [edi+0x16],0xe1b8a2b7
  4102de:	add    al,0x5c
  4102e0:	mov    edi,0xa00ecb51
  4102e5:	sub    al,0x52
  4102e7:	mov    eax,0xe649389d
  4102ec:	imul   ebp,DWORD PTR [eax+0x8],0x86e069d2
  4102f3:	leave  
  4102f4:	jne    0x410351
  4102f6:	xchg   esi,eax
  4102f7:	dec    ecx
  4102f8:	and    eax,0x4f023796
  4102fd:	jecxz  0x410318
  4102ff:	push   cs
  410300:	and    eax,0x9a4a0688
  410305:	add    eax,0xcb79338f
  41030a:	sti    
  41030b:	cli    
  41030c:	ins    BYTE PTR es:[edi],dx
  41030d:	or     dh,ch
  41030f:	fcom   QWORD PTR [eax]
  410311:	mov    ds:0x454914a4,eax
  410316:	sbb    al,0x9e
  410318:	inc    eax
  410319:	mov    ecx,0xf4b97b35
  41031e:	lahf   
  41031f:	and    al,0xb2
  410321:	in     al,dx
  410322:	push   ebx
  410323:	(bad)  
  410324:	xchg   edx,eax
  410325:	adc    ecx,esi
  410327:	adc    al,0x8b
  410329:	retf   0x4cda
  41032c:	push   es
  41032d:	dec    ebx
  41032e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032f:	push   es
  410330:	(bad)  
  410331:	jmp    0xd3665ce5
  410336:	jb     0x410390
  410338:	idiv   DWORD PTR [ecx-0x64c1c8a2]
  41033e:	mov    dl,0x41
  410340:	inc    eax
  410341:	mov    eax,ds:0x4985b5ff
  410346:	popa   
  410347:	dec    edx
  410348:	xor    DWORD PTR [edx+0x4b],esp
  41034b:	jo     0x41037f
  41034d:	cmp    esi,ebx
  41034f:	pop    ecx
  410350:	mov    ch,0x60
  410352:	xor    dl,BYTE PTR ds:0x8d7cab2c
  410358:	push   ecx
  410359:	enter  0xbed5,0x0
  41035d:	shl    DWORD PTR [ecx+eax*8],1
  410360:	(bad)  
  410361:	int3   
  410362:	xchg   edi,eax
  410363:	and    ch,BYTE PTR [esi+ebp*1+0xc]
  410367:	fcmovb st,st(1)
  410369:	xchg   edx,eax
  41036a:	lds    ecx,FWORD PTR [esi]
  41036c:	xchg   ebx,eax
  41036d:	arpl   WORD PTR [edx-0x384d5022],bp
  410373:	mov    gs,WORD PTR [eax+0x25b94342]
  410379:	jle    0x410327
  41037b:	jbe    0x410385
  41037d:	lds    esi,FWORD PTR [ecx+eiz*1+0x22e7df6d]
  410384:	repnz sti 
  410386:	jmp    0x76e3:0x36b495b6
  41038d:	sbb    BYTE PTR [edx],cl
  41038f:	mov    ebp,0xef41b59e
  410394:	mov    ds:0x8dbd09da,al
  41039a:	or     BYTE PTR [ecx-0x53ca426b],bl
  4103a0:	sub    DWORD PTR [ecx-0x32ea1ae7],esp
  4103a6:	ins    DWORD PTR es:[edi],dx
  4103a7:	dec    ebx
  4103a8:	popa   
  4103a9:	out    0x1b,eax
  4103ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ac:	inc    ecx
  4103ad:	jge    0x41036b
  4103af:	popa   
  4103b0:	xor    eax,0xdcc39a58
  4103b5:	xor    eax,DWORD PTR [ecx]
  4103b7:	fwait
  4103b8:	mov    ah,BYTE PTR [edx+0x79f0168a]
  4103be:	xchg   BYTE PTR [eax+0xecee975],al
  4103c4:	dec    esi
  4103c5:	popf   
  4103c6:	push   ss
  4103c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103c8:	jmp    0x410403
  4103ca:	cld    
  4103cb:	or     DWORD PTR [ebx],ebp
  4103cd:	inc    ebx
  4103ce:	pop    eax
  4103cf:	loop   0x4103f9
  4103d1:	pop    ds
  4103d2:	sbb    DWORD PTR [ebx-0x676e77a6],ecx
  4103d8:	pushf  
  4103d9:	xchg   edi,eax
  4103da:	and    al,0x57
  4103dc:	inc    ebp
  4103dd:	sbb    ebp,DWORD PTR [edx]
  4103df:	xor    DWORD PTR [ebx+0x75],ecx
  4103e2:	test   eax,0xcc8ee9fe
  4103e7:	mov    ah,0xc5
  4103e9:	out    0xa6,eax
  4103eb:	mov    dh,0x6d
  4103ed:	cdq    
  4103ee:	imul   bl
  4103f0:	ss jg  0x4103e2
  4103f3:	imul   esi,DWORD PTR cs:[eax-0x4],0x169803f2
  4103fb:	push   edi
  4103fc:	test   BYTE PTR es:[edi-0x3bfc582a],cl
  410403:	(bad)  
  410405:	xor    eax,0x69c44cf2
  41040a:	fbstp  TBYTE PTR [ebx]
  41040c:	imul   esp,eax,0x2
  41040f:	test   eax,0x39dccc29
  410414:	jae    0x4103ea
  410416:	inc    ebx
  410417:	cmp    DWORD PTR [ecx-0x5042526a],esi
  41041d:	lahf   
  41041e:	inc    ecx
  41041f:	dec    esp
  410420:	jge    0x410465
  410422:	xor    eax,0xd583a9f2
  410427:	stos   BYTE PTR es:[edi],al
  410428:	jo     0x410421
  41042a:	dec    edi
  41042b:	dec    edi
  41042c:	mov    ecx,0x1c0dd58b
  410431:	dec    edx
  410432:	jmp    DWORD PTR [ebx+ecx*2+0x3b]
  410436:	sbb    esp,DWORD PTR [esi+0x2495f694]
  41043c:	and    eax,0x6619bbc2
  410441:	ret    0xb096
  410444:	sbb    ah,0x2c
  410447:	ficom  DWORD PTR [ebx]
  410449:	(bad)  
  41044a:	mov    BYTE PTR [ebp-0x7b],al
  41044d:	gs es mov dl,0xd0
  410451:	int3   
  410452:	push   eax
  410453:	retf   0x189d
  410456:	dec    esi
  410457:	xchg   esp,esp
  410459:	and    DWORD PTR [esp+edx*1],0xffffffe2
  41045d:	and    al,ch
  41045f:	mov    ds,WORD PTR gs:[eax-0x57]
  410463:	les    eax,FWORD PTR [ebx]
  410465:	mov    ah,0x9b
  410467:	sub    ah,BYTE PTR [ebx]
  410469:	mov    ch,0x4a
  41046b:	xor    al,0x64
  41046d:	and    BYTE PTR [edi],ch
  41046f:	fdivr  DWORD PTR ds:0xf841986a
  410475:	cld    
  410476:	and    al,0xc7
  410478:	lods   eax,DWORD PTR ds:[esi]
  410479:	scas   al,BYTE PTR es:[di]
  41047b:	and    al,ch
  41047d:	sbb    esp,DWORD PTR [ebp-0x43]
  410480:	cmp    BYTE PTR [esp+edi*1-0x4350532b],dh
  410487:	mov    esi,0xf7210504
  41048c:	sti    
  41048d:	dec    ebx
  41048e:	jne    0x410436
  410490:	and    eax,0xb7185c8f
  410495:	jle    0x4104bc
  410497:	push   esi
  410498:	int    0x6e
  41049a:	cmp    ecx,0xc75a458e
  4104a0:	and    DWORD PTR [ecx+0x199a4a31],esi
  4104a6:	inc    si
  4104a8:	cmp    al,0x7
  4104aa:	sbb    al,0x14
  4104ac:	outs   dx,BYTE PTR ds:[esi]
  4104ad:	pop    ebp
  4104ae:	mov    dl,0x18
  4104b0:	cdq    
  4104b1:	aas    
  4104b2:	sbb    DWORD PTR [edx+0x131d681a],edx
  4104b8:	setg   BYTE PTR [ecx+0x5ae0ed99]
  4104bf:	sub    ch,BYTE PTR [esp+edx*4+0x517e4769]
  4104c6:	outs   dx,BYTE PTR ds:[esi]
  4104c7:	shl    BYTE PTR [ecx+0x45],cl
  4104ca:	and    BYTE PTR [esi],dl
  4104cc:	clc    
  4104cd:	rcr    DWORD PTR [eax],0x88
  4104d0:	retf   
  4104d1:	dec    ebx
  4104d2:	(bad)  [edx]
  4104d4:	test   eax,0x380f5750
  4104d9:	cmp    BYTE PTR [ecx],bl
  4104db:	mov    WORD PTR [eax+0xfacc9d4],fs
  4104e1:	outs   dx,BYTE PTR ds:[esi]
  4104e2:	or     dl,0xc3
  4104e5:	int    0xa
  4104e7:	sub    ch,BYTE PTR [ebp-0x71]
  4104ea:	xchg   edx,eax
  4104eb:	inc    esp
  4104ec:	jb     0x410473
  4104ee:	sub    al,0x12
  4104f0:	dec    eax
  4104f1:	adc    esi,ecx
  4104f3:	sub    edx,DWORD PTR [ebx]
  4104f5:	adc    DWORD PTR [esi+esi*2-0x27450a41],ebx
  4104fc:	fcomp  st(1)
  4104fe:	jnp    0x4104fb
  410500:	push   ss
  410501:	fs leave 
  410503:	xor    dh,bh
  410505:	(bad)  
  410506:	nop
  410507:	cmc    
  410508:	cdq    
  410509:	add    esp,0x1eabc8c0
  41050f:	and    DWORD PTR [esi+0x4f0ee6ac],esp
  410515:	ds jbe 0x4104a3
  410518:	adc    eax,0x33e2d207
  41051d:	mov    dl,0x76
  41051f:	pop    esi
  410520:	cmp    edi,DWORD PTR [ebx+0x32]
  410523:	inc    DWORD PTR [esi]
  410525:	hlt    
  410526:	cli    
  410527:	push   eax
  410528:	jmp    0x195a135e
  41052d:	cmp    bh,cl
  41052f:	adc    edx,DWORD PTR [eax+0x216059a1]
  410535:	and    eax,0x3aeb2cea
  41053a:	and    ebx,DWORD PTR [esi]
  41053c:	pop    es
  41053d:	dec    ebx
  41053e:	lods   al,BYTE PTR ds:[esi]
  41053f:	add    ecx,DWORD PTR [esi-0x1b6e8d9a]
  410545:	sbb    ecx,ebx
  410547:	imul   esp,DWORD PTR [edx+0x66],0x28
  41054b:	cmp    DWORD PTR [eax+0x57f55040],esi
  410551:	shr    DWORD PTR [ecx-0x5c],0xfd
  410555:	mov    ds,WORD PTR [edx]
  410557:	loope  0x4105d3
  410559:	xchg   edx,eax
  41055a:	les    eax,FWORD PTR [edx+0x7d0d4ad3]
  410560:	and    al,BYTE PTR [edi-0x4fe2ed34]
  410566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410567:	mov    bp,0xe97
  41056b:	mov    esi,0x9c71ffac
  410570:	ss mov esi,0xb6c5aa5b
  410576:	sahf   
  410577:	out    dx,al
  410578:	push   0x52
  41057a:	jg     0x4105e8
  41057c:	sub    eax,0x540cd438
  410581:	jo     0x4105e9
  410583:	fstp   DWORD PTR [edi+eax*4-0x17e9735d]
  41058a:	sub    al,0x72
  41058c:	inc    ebp
  41058d:	and    bl,BYTE PTR [ebx-0x7]
  410590:	jbe    0x41056a
  410592:	cmp    ebx,edx
  410594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410595:	test   al,0x88
  410597:	xchg   ecx,eax
  410598:	push   ss
  410599:	fadd   DWORD PTR [eax*4+0x7f47275e]
  4105a0:	mov    dl,0x99
  4105a2:	pop    esp
  4105a3:	leave  
  4105a4:	ret    0xaf9e
  4105a7:	nop
  4105a8:	ret    0x73e2
  4105ab:	mov    al,ds:0xcee74348
  4105b0:	cmp    dh,BYTE PTR [edx+0x621c33cc]
  4105b6:	xchg   DWORD PTR [ecx],ebp
  4105b8:	scas   al,BYTE PTR es:[edi]
  4105b9:	add    eax,0x9983ebcf
  4105be:	ins    BYTE PTR es:[edi],dx
  4105bf:	push   esp
  4105c0:	test   eax,0xb708b09e
  4105c5:	add    ebp,DWORD PTR [edi+0x19]
  4105c8:	inc    esi
  4105c9:	sub    bh,bh
  4105cb:	push   ebp
  4105cc:	mov    bh,0xf5
  4105ce:	xlat   BYTE PTR ds:[ebx]
  4105cf:	rol    DWORD PTR [edx],1
  4105d1:	scas   al,BYTE PTR es:[edi]
  4105d2:	out    dx,eax
  4105d3:	repnz add eax,0x9797d433
  4105d9:	push   0xb4510741
  4105de:	loope  0x4105fe
  4105e0:	mov    eax,0x6b4753c7
  4105e5:	cmp    al,0xf5
  4105e7:	fwait
  4105e8:	add    esp,0xb08e7e17
  4105ee:	(bad)  
  4105ef:	arpl   WORD PTR [ecx+0x50019d14],sp
  4105f5:	jecxz  0x4105ec
  4105f7:	mov    esi,0x145d9011
  4105fc:	cmp    al,0x4b
  4105fe:	mov    ?,WORD PTR [ebp+0x12]
  410601:	add    bl,BYTE PTR [esi+0x6a568491]
  410607:	popa   
  410608:	jecxz  0x4105d2
  41060a:	add    esi,ebp
  41060c:	pop    eax
  41060d:	push   ds
  41060e:	jp     0x4105ca
  410610:	mov    cl,0x49
  410612:	daa    
  410613:	test   al,0xfd
  410615:	aaa    
  410616:	ror    BYTE PTR [edi+0x31],0x92
  41061a:	das    
  41061b:	icebp  
  41061c:	add    DWORD PTR [ecx],ebx
  41061e:	imul   ecx,DWORD PTR [ebx-0x3b281c8],0x4c8bda75
  410628:	test   BYTE PTR [edx+0x31],ah
  41062b:	pop    esi
  41062c:	jb     0x410652
  41062e:	sub    eax,0xb0e1ac86
  410633:	or     BYTE PTR [esi+0x2b],0x6f
  410637:	mov    cs,WORD PTR [eax+0x72]
  41063a:	repnz sar dl,1
  41063d:	mov    esp,gs
  41063f:	sbb    eax,0xade9f9b1
  410644:	leave  
  410645:	adc    DWORD PTR [esi],esp
  410647:	adc    al,0x4b
  410649:	or     eax,0x516e3040
  41064e:	push   ebx
  41064f:	popa   
  410650:	mov    bh,0xea
  410652:	je     0x4106a5
  410654:	call   0xfaff:0xe1e39550
  41065b:	in     al,0xfb
  41065d:	mov    fs,esp
  41065f:	dec    esp
  410660:	jb     0x410641
  410662:	xchg   esp,eax
  410663:	ja     0x410632
  410665:	out    dx,eax
  410666:	out    0xd,al
  410668:	jge    0x4106e1
  41066a:	and    ah,BYTE PTR [ebp+0x77393e7]
  410670:	imul   ecx,ecx,0xe75affe6
  410676:	sub    BYTE PTR [eax+0x4350c51f],dh
  41067c:	push   esi
  41067d:	sti    
  41067e:	(bad)  
  410680:	inc    eax
  410681:	lahf   
  410682:	mov    al,0x45
  410684:	shl    cl,cl
  410686:	je     0x41063b
  410688:	aam    0x64
  41068a:	loope  0x4106c2
  41068c:	cwde   
  41068d:	inc    esp
  41068e:	popa   
  41068f:	sti    
  410690:	repz test al,0x16
  410693:	stos   BYTE PTR es:[edi],al
  410694:	xchg   ecx,eax
  410695:	sar    BYTE PTR [ebx+0x43ac961d],1
  41069b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069c:	ds call 0x60378f36
  4106a2:	out    0x52,eax
  4106a4:	data16 adc al,0xad
  4106a7:	adc    esi,DWORD PTR [edi-0x1e6ee1b0]
  4106ad:	mov    al,0x8e
  4106af:	mov    ch,0x62
  4106b1:	mov    ds:0x25428dfb,al
  4106b6:	jnp    0x4106bb
  4106b8:	push   0xffffffbe
  4106ba:	gs jmp 0xf293:0xd2ae4b35
  4106c2:	mov    ds:0x9a87d663,al
  4106c7:	inc    ebx
  4106c8:	inc    ebx
  4106c9:	xchg   esi,eax
  4106ca:	repz hlt 
  4106cc:	xor    eax,0x54701f8b
  4106d1:	push   edi
  4106d2:	push   eax
  4106d3:	jl     0x410720
  4106d5:	js     0x4106a0
  4106d7:	mov    ebp,0x21fe0404
  4106dc:	dec    edi
  4106dd:	(bad)  [esi-0x71026e09]
  4106e3:	ds adc cl,ch
  4106e6:	mov    ah,0xee
  4106e8:	loopne 0x410714
  4106ea:	mov    eax,0xff3539b1
  4106ef:	loop   0x4106b6
  4106f1:	jmp    0x41067d
  4106f3:	sti    
  4106f4:	pop    edx
  4106f5:	jne    0x410764
  4106f7:	rol    BYTE PTR [ebp+0x4d282ceb],0x38
  4106fe:	add    BYTE PTR [edi+ebp*4],ch
  410701:	cmp    al,0xd5
  410703:	inc    edi
  410704:	sbb    ebp,edi
  410706:	pop    es
  410707:	jmp    0x4dcd66b0
  41070c:	bound  edx,QWORD PTR [edi+0x71ffd7c4]
  410712:	mov    edx,0xfcb4d045
  410717:	add    ecx,ecx
  410719:	xchg   edi,eax
  41071a:	xor    al,0x63
  41071c:	add    al,0xa5
  41071e:	jp     0x410778
  410720:	xor    dl,bh
  410722:	cmp    esi,DWORD PTR [ebx+ecx*1-0x73]
  410726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410727:	out    dx,al
  410728:	pop    ss
  410729:	mov    esi,0x1a58b7e9
  41072e:	out    dx,al
  41072f:	rol    DWORD PTR [ebx-0x47],0x96
  410733:	xchg   esi,eax
  410734:	imul   edi,ecx,0xffffff80
  410737:	or     BYTE PTR [ebp-0x3c],ch
  41073a:	(bad)  
  41073b:	sti    
  41073c:	jbe    0x410794
  41073e:	das    
  41073f:	mov    ss,WORD PTR [ebp+0x4f6e02ae]
  410745:	out    dx,al
  410746:	inc    ecx
  410747:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  410749:	clc    
  41074a:	adc    al,0x56
  41074c:	mov    eax,ds:0xe3307533
  410751:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  410753:	sub    al,0x13
  410755:	dec    ebp
  410756:	sar    DWORD PTR [eax],0xd3
  410759:	shr    DWORD PTR [edi],0xcc
  41075c:	call   0x2b98:0xf2a19ee6
  410763:	fs fwait
  410765:	xchg   edx,eax
  410766:	pop    ss
  410767:	jle    0x410775
  410769:	mov    al,ds:0xaae05eef
  41076e:	nop
  41076f:	mov    ecx,0x16f60857
  410774:	sbb    eax,0xe113ef39
  410779:	js     0x410712
  41077b:	add    BYTE PTR [eax+0x72dbc82b],ah
  410781:	cmc    
  410782:	rcr    BYTE PTR ds:0xccf55e93,cl
  410788:	and    edi,eax
  41078a:	stc    
  41078b:	or     cl,al
  41078d:	test   al,0xe4
  41078f:	scas   al,BYTE PTR es:[edi]
  410790:	repnz mov ds:0xc4b1a18e,eax
  410796:	scas   al,BYTE PTR es:[edi]
  410797:	xchg   ebx,eax
  410798:	pop    ss
  410799:	fs jecxz 0x4107a7
  41079c:	push   esp
  41079d:	clc    
  41079e:	(bad)  
  41079f:	sti    
  4107a0:	mov    ah,0xb5
  4107a2:	lea    eax,[esi-0x14]
  4107a5:	mov    cl,0xa7
  4107a7:	xchg   edx,eax
  4107a8:	mov    eax,0xf1730e3b
  4107ad:	pop    edi
  4107ae:	add    eax,0x749834fe
  4107b3:	jge    0x410827
  4107b5:	jb     0x41080d
  4107b7:	push   ds
  4107b8:	or     BYTE PTR [ebp-0x4f],bh
  4107bb:	sahf   
  4107bc:	out    0x21,eax
  4107be:	scas   al,BYTE PTR es:[edi]
  4107bf:	mov    ch,0x18
  4107c1:	and    al,BYTE PTR ds:0x35dff34b
  4107c7:	clc    
  4107c8:	popa   
  4107c9:	push   ebx
  4107ca:	adc    ah,BYTE PTR [ecx+0xe]
  4107cd:	inc    ecx
  4107ce:	repnz add dl,bl
  4107d1:	jle    0x41075c
  4107d3:	inc    ebx
  4107d4:	cdq    
  4107d5:	or     DWORD PTR [esi],esi
  4107d7:	push   eax
  4107d8:	mov    ds:0xcab11604,eax
  4107dd:	rol    BYTE PTR [edx+edx*2-0x6d8911fe],cl
  4107e4:	lods   al,BYTE PTR ds:[esi]
  4107e5:	shl    BYTE PTR [edx+0x6b408a8d],1
  4107eb:	push   esi
  4107ec:	push   cs
  4107ed:	cmp    eax,0xd1339cf0
  4107f2:	mov    ebp,0x89641912
  4107f7:	in     al,0x35
  4107f9:	aam    0x4f
  4107fb:	jns    0x410877
  4107fd:	cs jno 0x4107b3
  410800:	punpckhbw mm6,QWORD PTR [esi+eax*2+0x70]
  410805:	inc    ebx
  410806:	mov    esi,0x8ce06214
  41080b:	mov    esi,0xb53371e
  410810:	push   ebp
  410811:	retf   
  410812:	enter  0x4f5b,0xbb
  410816:	retf   0x8901
  410819:	mov    dh,0x95
  41081b:	ins    DWORD PTR es:[edi],dx
  41081c:	jnp    0x41083a
  41081e:	cwde   
  41081f:	jo     0x410897
  410821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410822:	enter  0x8d52,0x7c
  410826:	pusha  
  410827:	mov    ebx,0x124b37e5
  41082c:	add    BYTE PTR [ebp+0x58b85995],ch
  410832:	jl     0x4108b3
  410834:	or     BYTE PTR [edi],dl
  410836:	fiadd  DWORD PTR [edx-0xc86a176]
  41083c:	mov    DWORD PTR ds:0x497dbb60,ebp
  410842:	mov    bh,0x1
  410844:	cwde   
  410845:	imul   eax,DWORD PTR [ebx+0x43],0xfffffffd
  410849:	cmp    al,BYTE PTR [ecx]
  41084b:	sbb    BYTE PTR [ebx-0x62],dl
  41084e:	cmp    esp,DWORD PTR [ebx-0xb510d32]
  410854:	dec    edi
  410855:	or     eax,0xfbaa95bd
  41085a:	cmp    DWORD PTR [ebp+0x4bfdd80e],esp
  410860:	xchg   ecx,eax
  410861:	xchg   esi,eax
  410862:	test   ebp,esi
  410864:	into   
  410865:	jne    0x4107ee
  410867:	sbb    ecx,DWORD PTR [edi+0x4f]
  41086a:	sub    DWORD PTR [ebx+0x43],esp
  41086d:	pop    esi
  41086e:	push   0xa89702f0
  410873:	pop    ebp
  410874:	dec    ebx
  410875:	xchg   dl,dl
  410877:	mov    ch,0x10
  410879:	loopne 0x410873
  41087b:	pushf  
  41087c:	cli    
  41087d:	push   edi
  41087e:	add    al,0x1e
  410880:	les    edx,FWORD PTR [ebx-0x3fc9974]
  410886:	fisttp DWORD PTR [ecx+esi*2-0x21]
  41088a:	add    DWORD PTR [ecx+ebp*1-0x7cd338fd],ebx
  410891:	sbb    al,al
  410893:	call   0xae274cc6
  410898:	sbb    BYTE PTR [ecx],ah
  41089a:	lods   al,BYTE PTR ds:[esi]
  41089b:	jns    0x4108e9
  41089d:	hlt    
  41089e:	iret   
  41089f:	add    cl,dl
  4108a1:	xor    bh,BYTE PTR [ebp-0x32]
  4108a4:	cwde   
  4108a5:	test   DWORD PTR [eax],esi
  4108a7:	add    esi,edi
  4108a9:	xchg   edi,eax
  4108aa:	call   0x322b:0xacf9ee8b
  4108b1:	add    al,0xde
  4108b3:	dec    ebp
  4108b4:	jno    0x410904
  4108b6:	inc    BYTE PTR [edx+0x6c087c9d]
  4108bc:	inc    edx
  4108bd:	or     al,0xf
  4108bf:	xchg   ebp,eax
  4108c0:	jmp    0x940c:0x864b3dca
  4108c7:	std    
  4108c8:	in     eax,0xbb
  4108ca:	jl     0x41093e
  4108cc:	push   0x7f
  4108ce:	sbb    al,0xab
  4108d0:	and    DWORD PTR [ebp+0x28],ecx
  4108d3:	lds    ebx,FWORD PTR [esi+0x118c916b]
  4108d9:	(bad)  
  4108db:	cmc    
  4108dc:	mov    dh,0x2e
  4108de:	loopne 0x410881
  4108e0:	lods   eax,DWORD PTR fs:[esi]
  4108e2:	or     ah,BYTE PTR [edx-0x746c8589]
  4108e8:	or     BYTE PTR [edi],dh
  4108ea:	int    0xad
  4108ec:	stos   BYTE PTR es:[edi],al
  4108ed:	stc    
  4108ee:	mov    edx,0xa037be07
  4108f3:	mov    ebp,0xc51680
  4108f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f9:	jo     0x4108df
  4108fb:	push   cs
  4108fc:	mov    WORD PTR [eax-0x43],cs
  4108ff:	icebp  
  410900:	(bad)  
  410901:	pop    edx
  410902:	mov    dl,0x27
  410904:	fisubr DWORD PTR [edx+0x37fa0456]
  41090a:	hlt    
  41090b:	xchg   esp,eax
  41090c:	je     0x410947
  41090e:	inc    ecx
  41090f:	scas   al,BYTE PTR es:[edi]
  410910:	rol    BYTE PTR [ebp+ebp*8-0x4f],0x76
  410915:	stc    
  410916:	rol    BYTE PTR [ebp+0x43],1
  410919:	clc    
  41091a:	xchg   ebp,eax
  41091b:	pop    esi
  41091c:	aad    0xb5
  41091e:	sbb    BYTE PTR [ebp+0x59],0xe4
  410922:	push   edi
  410923:	ins    BYTE PTR es:[edi],dx
  410924:	pop    edi
  410925:	xchg   edi,eax
  410926:	loope  0x410926
  410928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410929:	dec    edx
  41092a:	outs   dx,DWORD PTR ds:[esi]
  41092b:	cmc    
  41092c:	xchg   esi,eax
  41092d:	mov    WORD PTR [edx+0x41],cs
  410930:	jmp    0x6e9c27d0
  410935:	ins    BYTE PTR es:[edi],dx
  410936:	pop    ss
  410937:	xlat   BYTE PTR ds:[ebx]
  410938:	xchg   esp,eax
  410939:	xchg   DWORD PTR [eax-0x14],ebx
  41093c:	mov    WORD PTR [edi],ds
  41093e:	(bad)  
  41093f:	pop    esi
  410940:	enter  0x9745,0x27
  410944:	xor    BYTE PTR [edi],bh
  410946:	cdq    
  410947:	call   0x3a5b9b29
  41094c:	aad    0x45
  41094e:	(bad)  
  41094f:	imul   esp,DWORD PTR [eax],0xffffffc3
  410952:	pop    edx
  410953:	in     al,dx
  410954:	retf   
  410955:	loope  0x4108f5
  410957:	lods   al,BYTE PTR ds:[esi]
  410958:	jo     0x41090b
  41095a:	cli    
  41095b:	dec    ebp
  41095c:	xchg   esp,eax
  41095d:	push   0xf13df1f2
  410962:	out    0x74,al
  410964:	jbe    0x410954
  410966:	jns    0x410966
  410968:	lds    esi,FWORD PTR [eax+0x454c9936]
  41096e:	push   eax
  41096f:	scas   eax,DWORD PTR es:[edi]
  410970:	aaa    
  410971:	jmp    0x96c02956
  410976:	fs stos DWORD PTR es:[edi],eax
  410978:	or     ch,ch
  41097a:	sub    DWORD PTR [esi+0x1d14ccf1],ecx
  410980:	js     0x410934
  410982:	imul   ebp,DWORD PTR gs:[bp+si],0xfffffff8
  410987:	mul    BYTE PTR [edx+0x77ada4e8]
  41098d:	outs   dx,DWORD PTR cs:[esi]
  41098f:	(bad)  
  410990:	scas   al,BYTE PTR es:[edi]
  410991:	add    eax,0xdd3c9992
  410996:	stos   DWORD PTR es:[edi],eax
  410997:	test   eax,0x62c49096
  41099c:	out    0x6a,al
  41099e:	js     0x410983
  4109a0:	test   dl,0xb8
  4109a3:	int3   
  4109a4:	and    BYTE PTR [edx-0x2e16df4a],0xf7
  4109ab:	dec    esi
  4109ac:	jp     0x4109d6
  4109ae:	jl     0x41094d
  4109b0:	or     al,0x68
  4109b2:	leave  
  4109b3:	push   edx
  4109b4:	out    dx,al
  4109b5:	push   ecx
  4109b6:	jge    0x410950
  4109b8:	mul    dh
  4109ba:	sti    
  4109bb:	fisubr DWORD PTR [esi]
  4109bd:	lea    esp,[ebp+0x612b3e8]
  4109c3:	mov    ebp,cs
  4109c5:	shl    DWORD PTR [edi+0x16a0aa97],0x9c
  4109cc:	push   ss
  4109cd:	or     al,0x0
  4109cf:	hlt    
  4109d0:	pop    es
  4109d1:	push   ebp
  4109d2:	(bad)  
  4109d3:	loop   0x41098c
  4109d5:	cmp    esp,DWORD PTR [eax-0x2e]
  4109d8:	cmp    ebx,DWORD PTR [ebx+0x46b6638d]
  4109de:	stos   BYTE PTR es:[edi],al
  4109df:	js     0x410a40
  4109e1:	or     BYTE PTR [ebp+0x7bf48f51],al
  4109e7:	nop
  4109e8:	dec    eax
  4109e9:	cmp    ch,BYTE PTR [esi-0x7]
  4109ec:	fisub  DWORD PTR [ebx]
  4109ee:	mov    al,ds:0x5bcd4290
  4109f3:	fmul   QWORD PTR [ecx-0x1059fe9b]
  4109f9:	das    
  4109fa:	mov    BYTE PTR [ebp+0x34aeb79f],0xe0
  410a01:	fisttp DWORD PTR [ebp-0x68]
  410a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a05:	fwait
  410a06:	jp     0x410a87
  410a08:	pop    edx
  410a09:	add    eax,0xebea8b8b
  410a0e:	test   al,0xea
  410a10:	pop    es
  410a11:	lea    ebp,[ebx-0x18]
  410a14:	es mov esp,0x442317a4
  410a1a:	sbb    BYTE PTR [eax-0x2faac209],dl
  410a20:	mov    ebp,esp
  410a22:	xchg   edi,eax
  410a23:	mov    bl,0xf7
  410a25:	add    al,0xc4
  410a27:	cmp    cl,BYTE PTR [eax-0x18]
  410a2a:	pop    esp
  410a2b:	inc    eax
  410a2c:	test   BYTE PTR [esp+edi*1+0x613313fb],dl
  410a33:	pusha  
  410a34:	test   DWORD PTR [ecx+edi*8],ebp
  410a37:	dec    eax
  410a38:	or     al,0xfc
  410a3a:	mov    edx,0x9ebe9452
  410a3f:	rcr    BYTE PTR [edx],0xb3
  410a42:	ins    DWORD PTR es:[edi],dx
  410a43:	hlt    
  410a44:	enter  0xbecf,0x64
  410a48:	jbe    0x4109d0
  410a4a:	jnp    0x410a4d
  410a4c:	outs   dx,BYTE PTR es:[esi]
  410a4e:	jo     0x410a7c
  410a50:	repnz popa 
  410a52:	pop    eax
  410a53:	or     eax,0xd05c20b9
  410a58:	and    edx,ebp
  410a5a:	outs   dx,DWORD PTR ds:[esi]
  410a5b:	fnsave [edx-0x59]
  410a5e:	test   BYTE PTR [edx],0x28
  410a61:	call   0x1e217
  410a66:	or     ecx,DWORD PTR [ebp-0x11]
  410a69:	mul    DWORD PTR [ebx-0x5a]
  410a6c:	lods   eax,DWORD PTR ds:[esi]
  410a6d:	jbe    0x410a60
  410a6f:	sbb    DWORD PTR [esi+0x61d304ab],esp
  410a75:	push   ecx
  410a76:	xchg   ebp,eax
  410a77:	xor    DWORD PTR [ebx-0x34],esp
  410a7a:	jmp    0x410a68
  410a7c:	nop
  410a7d:	dec    edx
  410a7e:	daa    
  410a7f:	mov    edx,0xa43a9e9f
  410a84:	pusha  
  410a85:	push   ecx
  410a86:	inc    ebx
  410a87:	test   eax,0x8e3b72b1
  410a8c:	push   0x9b8e2b0c
  410a91:	sbb    al,0x98
  410a93:	lods   al,BYTE PTR ds:[esi]
  410a94:	sbb    BYTE PTR [ebx+0x5d174c75],dl
  410a9a:	cs out 0x75,al
  410a9d:	ficomp DWORD PTR [ecx]
  410a9f:	push   esi
  410aa0:	popf   
  410aa1:	pop    ss
  410aa2:	loope  0x410ab9
  410aa4:	mov    al,BYTE PTR [edx+edi*2]
  410aa7:	pop    ebx
  410aa8:	loope  0x410a5b
  410aaa:	and    al,0x23
  410aac:	fidivr WORD PTR [edi-0x1b]
  410aaf:	out    0x8,al
  410ab1:	pop    edx
  410ab2:	into   
  410ab3:	iret   
  410ab4:	je     0x410b0b
  410ab6:	xlat   BYTE PTR ds:[ebx]
  410ab7:	hlt    
  410ab8:	and    eax,0xe303aadb
  410abd:	mul    DWORD PTR [edx]
  410abf:	jmp    0xd792:0xa754a609
  410ac6:	ja     0x410b20
  410ac8:	(bad)  
  410ac9:	jg     0x410af9
  410acb:	inc    ebx
  410acc:	mov    dl,0xc9
  410ace:	rcl    BYTE PTR [esi*1-0x10ed9c4f],cl
  410ad5:	je     0x410af9
  410ad7:	int3   
  410ad8:	into   
  410ad9:	test   al,0x8e
  410adb:	rol    DWORD PTR [edi+0x5e],1
  410ade:	push   eax
  410adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ae0:	add    eax,ebx
  410ae2:	lahf   
  410ae3:	xor    DWORD PTR [edi],esi
  410ae5:	idiv   DWORD PTR [ebx-0x80]
  410ae8:	pushf  
  410ae9:	mov    ds:0x5fa27a48,al
  410aee:	dec    esi
  410aef:	or     eax,0x8ad592d6
  410af4:	adc    DWORD PTR [ecx],esi
  410af6:	adc    esi,DWORD PTR [esp+esi*8-0x3f96609f]
  410afd:	push   0x18d3aabd
  410b02:	shl    BYTE PTR [eax-0x28e1cd61],cl
  410b08:	or     edx,0xd52bbe73
  410b0e:	test   eax,0x2fa8a9b7
  410b13:	icebp  
  410b14:	shl    DWORD PTR [edi],0x90
  410b17:	out    dx,eax
  410b18:	jge    0x410b1d
  410b1a:	mov    ebx,0xdda61d06
  410b1f:	(bad)
  410b23:	mov    DWORD PTR [eax],ecx
  410b25:	test   eax,0x1d10f753
  410b2a:	xchg   ecx,eax
  410b2b:	jmp    0xc9c7:0xe666fbc6
  410b32:	lds    ebx,FWORD PTR [edi-0x3f]
  410b35:	jmp    0xcb87:0x3f38b448
  410b3c:	(bad)  [ebp+0x73]
  410b3f:	and    eax,0xd9ab7236
  410b44:	mov    bh,0x8b
  410b46:	add    bl,BYTE PTR [ecx]
  410b48:	mov    edi,eax
  410b4a:	gs pop esi
  410b4c:	retf   
  410b4d:	ucomiss xmm6,DWORD PTR [ecx-0x4ec93209]
  410b54:	sbb    bl,dh
  410b56:	mul    BYTE PTR [edi+0x15]
  410b59:	xchg   esp,eax
  410b5a:	faddp  st(0),st
  410b5c:	lods   al,BYTE PTR ds:[esi]
  410b5d:	loop   0x410bdb
  410b5f:	mov    bl,0x79
  410b61:	push   eax
  410b62:	pop    esi
  410b63:	pop    ebx
  410b64:	dec    edx
  410b65:	mov    dl,bh
  410b67:	adc    BYTE PTR [ebp+0x3c255ddf],dh
  410b6d:	push   ebx
  410b6e:	push   edi
  410b6f:	xor    esi,DWORD PTR [edx]
  410b71:	adc    DWORD PTR [esi+0x68e2a8b1],0xffffffd3
  410b78:	push   ebp
  410b79:	stos   BYTE PTR es:[edi],al
  410b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b7b:	fmul   QWORD PTR [ebx+0x69]
  410b7e:	push   edi
  410b7f:	js     0x410bac
  410b81:	inc    edi
  410b82:	mov    BYTE PTR [edx-0x38537cbd],dl
  410b88:	neg    DWORD PTR [esi]
  410b8a:	and    BYTE PTR [edx+0x496273ee],bl
  410b90:	arpl   WORD PTR [ebp-0x53d9fda4],sp
  410b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b97:	clc    
  410b98:	cmp    edi,esp
  410b9a:	in     al,dx
  410b9b:	sar    DWORD PTR [ecx+0x68],cl
  410b9e:	dec    edx
  410b9f:	pop    edx
  410ba0:	mov    gs,edx
  410ba2:	mov    ds:0x2cc29bc9,eax
  410ba7:	and    bl,BYTE PTR [eax]
  410ba9:	mov    ecx,DWORD PTR [edx-0x6c1a23f2]
  410baf:	es pop esp
  410bb1:	(bad)  
  410bb2:	popa   
  410bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb4:	adc    al,BYTE PTR [ecx+0x20]
  410bb7:	or     BYTE PTR ds:0x148b84c,0x17
  410bbe:	pop    edx
  410bbf:	pop    ecx
  410bc0:	xchg   DWORD PTR [edx-0x2f022d1c],edi
  410bc6:	cmc    
  410bc7:	icebp  
  410bc8:	mov    cl,bh
  410bca:	mov    bh,0xb4
  410bcc:	jmp    0xf368fea2
  410bd1:	push   ebx
  410bd2:	sbb    DWORD PTR [edx+0x16],ebp
  410bd5:	xor    BYTE PTR [esi],ch
  410bd7:	call   0x4e5f:0x26e0f8ef
  410bde:	test   BYTE PTR [esi+ebx*8-0x15],0x49
  410be3:	cmc    
  410be4:	adc    eax,0x6c572d5e
  410be9:	lahf   
  410bea:	aad    0x64
  410bec:	jge    0x410b73
  410bee:	je     0x410bab
  410bf0:	pop    ecx
  410bf1:	arpl   WORD PTR [esi+0x45e8688],bp
  410bf7:	sub    DWORD PTR [ebp-0x7043b949],ebp
  410bfd:	(bad)  
  410bfe:	stc    
  410bff:	cmp    DWORD PTR [edi-0x7a6dbc64],eax
  410c05:	nop
  410c06:	(bad)  
  410c07:	adc    al,0xf2
  410c09:	jmp    0x4e42:0xa943ff0d
  410c10:	xor    edi,DWORD PTR [ebx+0x55]
  410c13:	ficomp WORD PTR [edi-0x5d]
  410c16:	cli    
  410c17:	adc    dl,al
  410c19:	lock lahf 
  410c1b:	jbe    0x410c68
  410c1d:	lahf   
  410c1e:	ins    DWORD PTR es:[edi],dx
  410c1f:	arpl   di,ax
  410c21:	push   ebx
  410c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c23:	or     dl,dh
  410c25:	ja     0x410c58
  410c27:	or     al,0x6d
  410c29:	mov    ah,0xc
  410c2b:	jl     0x410c05
  410c2d:	in     al,dx
  410c2e:	iret   
  410c2f:	xor    BYTE PTR [esi+0x2],al
  410c32:	jae    0x410c94
  410c34:	jmp    0x410c41
  410c36:	fdiv   DWORD PTR [eax-0x3d]
  410c39:	retf   
  410c3a:	mov    ecx,DWORD PTR [edi+0x7520aeb7]
  410c40:	test   eax,0x1d1ad068
  410c45:	add    dh,BYTE PTR [ebx+0x59]
  410c48:	mov    esp,0xc16db67f
  410c4d:	xchg   edi,eax
  410c4e:	mov    ds:0xd7bbe50f,al
  410c53:	lods   al,BYTE PTR ds:[esi]
  410c54:	xor    ecx,DWORD PTR [esi]
  410c56:	jmp    0xbc18:0xdb328342
  410c5d:	(bad)  
  410c5e:	jo     0x410c5e
  410c60:	mov    al,0x24
  410c62:	cmp    DWORD PTR [edx-0x54905f2e],edi
  410c68:	add    al,0xfa
  410c6a:	stos   BYTE PTR es:[edi],al
  410c6b:	(bad)  
  410c6c:	cmp    dh,BYTE PTR ds:0xc1ea3b29
  410c72:	xchg   DWORD PTR [edx],esi
  410c74:	outs   dx,DWORD PTR ds:[esi]
  410c75:	or     ah,BYTE PTR [eax-0x3f58b8d2]
  410c7b:	ja     0x410cfb
  410c7d:	pop    ss
  410c7e:	idiv   ebp
  410c80:	fisubr DWORD PTR [ebx]
  410c82:	push   0x60e0225f
  410c87:	mov    cl,0x44
  410c89:	push   edx
  410c8a:	adc    edi,DWORD PTR [esi]
  410c8c:	retf   
  410c8d:	in     al,dx
  410c8e:	sub    esi,DWORD PTR ds:0xc8d249a4
  410c94:	(bad)  
  410c95:	mov    ah,0x48
  410c97:	push   0x3cc76208
  410c9c:	xlat   BYTE PTR ds:[ebx]
  410c9d:	xchg   esp,eax
  410c9e:	inc    edx
  410c9f:	push   0xffffffa3
  410ca1:	imul   edi,DWORD PTR [eax],0x2020a95c
  410ca7:	jl     0x410cb9
  410ca9:	ds inc ecx
  410cab:	cmp    BYTE PTR ds:0x597724a1,cl
  410cb1:	jmp    0x410cfe
  410cb3:	sub    BYTE PTR ds:0x3f229eeb,dl
  410cb9:	dec    edx
  410cba:	pop    ebp
  410cbb:	test   al,0x69
  410cbd:	pop    ebp
  410cbe:	mov    ds:0x65afbf8d,al
  410cc3:	cmp    bl,BYTE PTR [ebp+0x1dc004a1]
  410cc9:	or     eax,0xe2bcf8fc
  410cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ccf:	cs cmp eax,0xb2dabaec
  410cd5:	call   0xefc495bc
  410cda:	cmp    bl,BYTE PTR gs:[esi-0x67caa5d6]
  410ce1:	test   eax,0x5897c954
  410ce6:	jp     0x410d36
  410ce8:	adc    BYTE PTR [ecx+0x1e],ah
  410ceb:	retf   0x2108
  410cee:	gs cmp al,0xce
  410cf1:	clc    
  410cf2:	imul   edi,DWORD PTR [eax],0xffffff9a
  410cf5:	sbb    al,0x2a
  410cf7:	pop    eax
  410cf8:	xchg   edx,eax
  410cf9:	adc    edi,DWORD PTR [edx-0x2c94a058]
  410cff:	stos   DWORD PTR es:[edi],eax
  410d00:	push   ebp
  410d01:	ret    
  410d02:	cmc    
  410d03:	mov    bl,ch
  410d05:	add    DWORD PTR [esi],0xbf8e2b87
  410d0b:	and    BYTE PTR [eax+0x3f877da3],cl
  410d11:	loope  0x410d46
  410d13:	imul   esi,DWORD PTR [ecx-0x6044ae80],0x6a
  410d1a:	mov    ds:0x80c88d94,al
  410d1f:	cmp    al,0x3e
  410d21:	outs   dx,BYTE PTR ds:[esi]
  410d22:	ds pusha 
  410d24:	or     ah,bh
  410d26:	cmp    BYTE PTR [ecx+0x1694f72],dl
  410d2c:	push   ebx
  410d2d:	in     eax,0x45
  410d2f:	push   cs
  410d30:	pop    esp
  410d31:	sbb    edx,edx
  410d33:	pop    edx
  410d34:	xor    bh,BYTE PTR [edi+0x75]
  410d37:	test   al,0x8d
  410d39:	mov    al,0x2a
  410d3b:	sub    BYTE PTR [eax+0x69],cl
  410d3e:	pop    ecx
  410d3f:	popa   
  410d40:	pop    eax
  410d41:	or     al,0xa8
  410d43:	ins    DWORD PTR es:[edi],dx
  410d44:	cli    
  410d45:	fmul   st(3),st
  410d47:	les    ebp,FWORD PTR [esi+0x4e]
  410d4a:	daa    
  410d4b:	in     al,0x7
  410d4d:	fisubr DWORD PTR [ebx+ebx*1-0x38800297]
  410d54:	and    BYTE PTR [ebx+0x7091a591],bh
  410d5a:	ins    DWORD PTR es:[edi],dx
  410d5b:	inc    edi
  410d5c:	inc    esi
  410d5d:	xchg   ebp,eax
  410d5e:	and    al,0x8e
  410d60:	dec    edi
  410d61:	cmp    DWORD PTR [ebx-0x5941c57d],ebx
  410d67:	sub    al,0x40
  410d69:	xchg   ebx,eax
  410d6a:	out    0xf3,al
  410d6c:	pop    edx
  410d6d:	in     eax,0xfa
  410d6f:	fs push 0xebac9887
  410d75:	or     al,0x89
  410d77:	add    al,0xa
  410d79:	xor    BYTE PTR ds:0xcd4a5445,bh
  410d7f:	dec    ebx
  410d80:	je     0x410d75
  410d82:	(bad)  
  410d83:	sub    al,0x4a
  410d85:	sar    DWORD PTR [ebp+0x13a75298],cl
  410d8b:	inc    edx
  410d8c:	pop    ss
  410d8d:	or     ebp,DWORD PTR [ecx-0x2188483a]
  410d93:	sub    al,0x3b
  410d95:	mov    ecx,0x48efc71d
  410d9a:	ds loopne 0x410dc7
  410d9d:	add    al,0x7e
  410d9f:	mov    al,0x17
  410da1:	lods   al,BYTE PTR ds:[esi]
  410da2:	(bad)  
  410da3:	jecxz  0x410dda
  410da5:	mov    eax,ds:0x91fdaa77
  410daa:	push   ecx
  410dab:	sub    al,0xeb
  410dad:	mov    bh,BYTE PTR [esi-0x4cd33fdd]
  410db3:	and    al,0xf
  410db5:	out    0x7b,al
  410db7:	mov    bl,0x18
  410db9:	mov    esp,0xb140eaf9
  410dbe:	and    bh,BYTE PTR [esi]
  410dc0:	push   0x93a3d6a8
  410dc5:	mov    ss,WORD PTR [edx+eax*1-0x10b55f4f]
  410dcc:	dec    ecx
  410dcd:	jecxz  0x410da5
  410dcf:	mov    al,0xd
  410dd1:	aam    0xeb
  410dd3:	jbe    0x410e4c
  410dd5:	xor    cl,BYTE PTR ds:0xcc12be40
  410ddb:	lods   eax,DWORD PTR ds:[esi]
  410ddc:	adc    BYTE PTR [edx],bl
  410dde:	add    eax,0xe10458c2
  410de3:	dec    eax
  410de4:	dec    ebx
  410de5:	out    0x4e,al
  410de7:	inc    ah
  410de9:	(bad)  
  410deb:	pop    ecx
  410dec:	fdivr  DWORD PTR [esi+0xbba1dcb]
  410df2:	xlat   BYTE PTR ds:[ebx]
  410df3:	addr16 push 0x7df7f0ff
  410df9:	stos   BYTE PTR es:[edi],al
  410dfa:	jecxz  0x410df4
  410dfc:	cmc    
  410dfd:	dec    ecx
  410dfe:	iret   
  410dff:	xor    BYTE PTR [esp+esi*4],cl
  410e02:	aaa    
  410e03:	sbb    eax,0x9f12196a
  410e08:	adc    DWORD PTR [edx+0x3cd5c290],esi
  410e0e:	adc    eax,0x497c6ca4
  410e13:	inc    ecx
  410e14:	sub    dl,BYTE PTR ds:0xa3184721
  410e1a:	push   0xffffffe2
  410e1c:	jge    0x410de6
  410e1e:	sti    
  410e1f:	int    0x57
  410e21:	test   al,0xec
  410e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e24:	lea    esp,[ebx-0x6ff5e974]
  410e2a:	loop   0x410e6b
  410e2c:	scas   al,BYTE PTR es:[edi]
  410e2d:	push   ebp
  410e2e:	or     bl,ch
  410e30:	icebp  
  410e31:	pop    edi
  410e32:	mov    BYTE PTR [ebx+eiz*8],ch
  410e35:	fnstcw WORD PTR [ecx+ebx*4-0x52]
  410e39:	sbb    ch,ah
  410e3b:	mov    ch,ch
  410e3d:	mov    WORD PTR [eax],?
  410e3f:	xchg   edi,eax
  410e40:	adc    al,BYTE PTR [esi+0x65]
  410e43:	mov    al,0x7a
  410e45:	jmp    0x7439:0x94487b7c
  410e4c:	push   ss
  410e4d:	pop    esi
  410e4e:	call   0xfcee26b3
  410e53:	(bad)  
  410e54:	inc    edx
  410e55:	aaa    
  410e56:	retf   
  410e57:	push   0xffffffb6
  410e59:	pandn  mm5,mm5
  410e5c:	bound  esp,QWORD PTR [ebp-0x28]
  410e5f:	or     al,0x27
  410e61:	jb     0x410df9
  410e63:	add    ecx,DWORD PTR [edi+0x22aa4a72]
  410e69:	pop    esp
  410e6a:	cmc    
  410e6b:	dec    ecx
  410e6c:	dec    ebx
  410e6d:	mov    eax,ds:0xbc43cac0
  410e72:	cmp    al,0x6e
  410e74:	jmp    0x98228e71
  410e79:	and    al,0xc1
  410e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7c:	dec    ecx
  410e7d:	inc    ebp
  410e7e:	mov    eax,0x1d8b6828
  410e83:	loop   0x410e14
  410e85:	sub    dh,ch
  410e87:	fnsave [edi-0x3a]
  410e8a:	xor    DWORD PTR [ebx],edx
  410e8c:	push   cs
  410e8d:	jp     0x410e69
  410e8f:	stc    
  410e90:	aam    0x90
  410e92:	jb     0x410ec1
  410e94:	add    eax,0x4e46113e
  410e99:	(bad)  
  410e9a:	(bad)  
  410e9c:	sbb    esp,DWORD PTR [edx-0x50]
  410e9f:	xor    eax,0x79494b41
  410ea4:	mov    ds:0x2f9dc2c1,al
  410ea9:	stc    
  410eaa:	sub    eax,0xc222d3a6
  410eaf:	dec    esp
  410eb0:	push   ss
  410eb1:	(bad)  
  410eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb3:	mov    ds:0x75bfda1b,al
  410eb8:	test   al,0x6e
  410eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ebb:	cld    
  410ebc:	jo     0x410efa
  410ebe:	mov    DWORD PTR [edx],0x16228706
  410ec4:	adc    BYTE PTR [ebx],cl
  410ec6:	addr16 mov esp,0x9eda3d61
  410ecc:	rcr    BYTE PTR [edi+0x5a],1
  410ecf:	icebp  
  410ed0:	xchg   edx,eax
  410ed1:	jnp    0x410f42
  410ed3:	sbb    DWORD PTR [edi],0xfffffff7
  410ed6:	scas   al,BYTE PTR es:[edi]
  410ed7:	mov    ch,0x4a
  410ed9:	inc    esp
  410eda:	cmp    al,0x78
  410edc:	and    dh,0x34
  410edf:	shl    BYTE PTR [ebx+0x46],1
  410ee2:	int3   
  410ee3:	add    DWORD PTR [esi+0xab3c520],esp
  410ee9:	jno    0x410f00
  410eeb:	push   eax
  410eec:	cmp    eax,0x49daae40
  410ef1:	(bad)  
  410ef2:	mov    ecx,0x63e65986
  410ef7:	outs   dx,BYTE PTR ds:[esi]
  410ef8:	jmp    0xb96e:0xf24f352d
  410eff:	fwait
  410f00:	xchg   esi,esp
  410f02:	mov    bh,0x15
  410f04:	xor    eax,0xbf806ba9
  410f09:	add    eax,0xc79dad81
  410f0e:	outs   dx,BYTE PTR ds:[esi]
  410f0f:	ins    BYTE PTR es:[edi],dx
  410f10:	cwde   
  410f11:	popa   
  410f12:	push   es
  410f13:	add    al,0x91
  410f15:	xchg   edx,eax
  410f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f17:	jle    0x410f90
  410f19:	xchg   edx,eax
  410f1a:	jg     0x410f68
  410f1c:	jg     0x410ef3
  410f1e:	sbb    DWORD PTR [esi+edi*4-0x32],ebx
  410f22:	je     0x410f60
  410f24:	aad    0xcf
  410f26:	das    
  410f27:	in     al,dx
  410f28:	or     ecx,ecx
  410f2a:	hlt    
  410f2b:	enter  0x40ae,0x88
  410f2f:	in     al,dx
  410f30:	arpl   WORD PTR [ebp-0x5324697c],sp
  410f36:	fcom   QWORD PTR [ecx-0x4]
  410f39:	cs xor al,0x89
  410f3c:	out    0xa5,al
  410f3e:	jb     0x410f35
  410f40:	mov    edx,0xe835752f
  410f45:	clc    
  410f46:	sahf   
  410f47:	mov    edi,DWORD PTR [esi-0xdf9c791]
  410f4d:	lods   eax,DWORD PTR ds:[esi]
  410f4e:	test   eax,0x4982709a
  410f53:	xchg   edx,eax
  410f54:	das    
  410f55:	out    dx,eax
  410f56:	push   0xa2efac33
  410f5b:	pop    esp
  410f5c:	rcl    DWORD PTR [edi],cl
  410f5e:	lahf   
  410f5f:	xor    cl,BYTE PTR [edx]
  410f61:	sbb    edx,DWORD PTR [edx+0x63]
  410f64:	mov    dh,0xc1
  410f66:	cmp    ah,ch
  410f68:	sahf   
  410f69:	push   ebp
  410f6a:	ret    0xc8e0
  410f6d:	shr    BYTE PTR [edx+0x2b],1
  410f70:	inc    ebp
  410f71:	sub    DWORD PTR [ebp+0x33],0xffffff99
  410f75:	repnz mov ebp,0x3ec58315
  410f7b:	cmp    eax,0x1de8ce3
  410f80:	push   cs
  410f81:	dec    ebx
  410f82:	sbb    eax,0xe54c4e96
  410f87:	ds imul ebx,ebx,0x1b88d000
  410f8e:	nop
  410f8f:	inc    esp
  410f90:	dec    esp
  410f91:	inc    ebp
  410f92:	aad    0x80
  410f94:	mov    bh,0x80
  410f96:	push   esi
  410f97:	mov    ebx,0x347f3775
  410f9c:	pop    esp
  410f9d:	xchg   edi,eax
  410f9e:	shr    BYTE PTR [edi+0x6e1277df],1
  410fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa5:	sub    edx,edi
  410fa7:	out    0x31,eax
  410fa9:	loopne 0x410f31
  410fab:	xlat   BYTE PTR ds:[ebx]
  410fac:	ret    
  410fad:	rcr    DWORD PTR [eax-0x3af69ace],1
  410fb3:	mov    eax,ds:0xcd382893
  410fb8:	inc    esi
  410fb9:	push   ebx
  410fba:	dec    eax
  410fbb:	jecxz  0x410f59
  410fbd:	dec    esp
  410fbe:	es push eax
  410fc0:	(bad)  
  410fc1:	out    0x6e,eax
  410fc3:	int    0x7c
  410fc5:	int3   
  410fc6:	dec    ebp
  410fc7:	(bad)  
  410fc8:	mov    ebx,ss
  410fca:	outs   dx,BYTE PTR ds:[esi]
  410fcb:	jmp    0x8a6501f2
  410fd0:	push   0x59b811ca
  410fd5:	stos   DWORD PTR es:[edi],eax
  410fd6:	xor    BYTE PTR [edx+eax*4+0x60],dl
  410fda:	adc    ch,BYTE PTR [eax+0x975cd5f]
  410fe0:	cmp    al,0xdb
  410fe2:	stos   DWORD PTR es:[edi],eax
  410fe3:	jp     0x410f6d
  410fe5:	xchg   esi,eax
  410fe6:	add    edi,DWORD PTR [ebx+esi*1+0x4feed2ac]
  410fed:	test   al,0x7e
  410fef:	push   esi
  410ff0:	push   0xe7a4834a
  410ff5:	sbb    eax,DWORD PTR [ebx]
  410ff7:	sbb    BYTE PTR [eax+0x4da16fea],bh
  410ffd:	scas   eax,DWORD PTR es:[edi]
  410ffe:	and    esp,DWORD PTR [ebx]
  411000:	xor    eax,0xa2107b96
  411005:	mov    BYTE PTR [ebx-0x307016ce],0xe
  41100c:	push   0x878ce002
  411011:	hlt    
  411012:	push   esp
  411013:	jno    0x411041
  411015:	inc    eax
  411016:	cs or  eax,0x34c2a1ee
  41101c:	sub    DWORD PTR [ebp-0x5486972a],edi
  411022:	sti    
  411023:	lods   al,BYTE PTR ds:[esi]
  411024:	or     al,0x1b
  411026:	gs jl  0x41106a
  411029:	ror    DWORD PTR [ebx+0x7f6fcef],cl
  41102f:	push   ebp
  411030:	outs   dx,DWORD PTR ds:[esi]
  411031:	gs pop ecx
  411033:	inc    ebx
  411034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411035:	ret    
  411036:	(bad)  
  411038:	into   
  411039:	pop    ebx
  41103a:	leave  
  41103b:	sar    BYTE PTR [esi-0x7],1
  41103e:	es mov edi,0xf51dd01f
  411044:	or     BYTE PTR [edx],bh
  411046:	ins    DWORD PTR es:[edi],dx
  411047:	pusha  
  411048:	xchg   DWORD PTR [eax-0x697a361c],edi
  41104e:	(bad)  
  41104f:	mov    dl,0xbd
  411051:	xor    ebx,DWORD PTR [ecx]
  411053:	in     al,dx
  411054:	push   ebp
  411055:	(bad)  
  411056:	fisttp DWORD PTR ss:[edx+0x2f]
  41105a:	fld    DWORD PTR [edi+0x3e]
  41105d:	push   esp
  41105e:	push   esi
  41105f:	jnp    0x4110cd
  411061:	lock dec esp
  411063:	(bad)  
  411064:	xchg   sp,ax
  411066:	xor    DWORD PTR [eax],esi
  411068:	mov    ch,0x86
  41106a:	imul   esi,esp,0x325f0116
  411070:	adc    esp,esp
  411072:	clc    
  411073:	dec    ebp
  411074:	jno    0x411073
  411076:	retf   0x195b
  411079:	call   0xf131fa94
  41107e:	xchg   edi,eax
  41107f:	and    DWORD PTR [esi],edi
  411081:	cmp    dl,dh
  411083:	aad    0xfa
  411085:	imul   edx,DWORD PTR [ebx-0x71],0xfffffffb
  411089:	repz cmp cl,BYTE PTR ds:[ebx+0x66]
  41108e:	adc    ch,dl
  411090:	pop    es
  411091:	gs xchg esi,eax
  411093:	mov    cl,0x85
  411095:	add    eax,0xe4579b24
  41109a:	mov    bl,0x1f
  41109c:	(bad)  
  41109d:	cmp    cl,0x9
  4110a0:	or     BYTE PTR [eax+0x4d4632d7],dl
  4110a6:	mov    cl,0xf3
  4110a8:	scas   eax,DWORD PTR es:[edi]
  4110a9:	add    ah,al
  4110ab:	fs enter 0x60d6,0xc
  4110b0:	fwait
  4110b1:	cmp    dh,dl
  4110b3:	pop    edx
  4110b4:	pop    esp
  4110b5:	xor    eax,0x363bc587
  4110ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110bb:	jb     0x4110cc
  4110bd:	sub    dl,ah
  4110bf:	and    DWORD PTR [edx+0x5b1e247b],edi
  4110c5:	mov    WORD PTR [ebx+eiz*8-0x39],ss
  4110c9:	into   
  4110ca:	cmp    BYTE PTR [ecx+0x319aa067],ah
  4110d0:	cmc    
  4110d1:	std    
  4110d2:	jmp    0x1ed:0x8f7bd5c0
  4110d9:	mov    dl,0x3d
  4110db:	outs   dx,BYTE PTR ds:[esi]
  4110dc:	or     al,0xdf
  4110de:	ret    
  4110df:	inc    esi
  4110e0:	mov    dh,0xe1
  4110e2:	arpl   WORD PTR [esi],di
  4110e4:	or     ch,BYTE PTR [ebp+0xc42bae1]
  4110ea:	mov    BYTE PTR gs:0x9692daf3,ch
  4110f1:	imul   esi,DWORD PTR [edi],0xffffffd2
  4110f4:	lods   eax,DWORD PTR fs:[esi]
  4110f6:	stc    
  4110f7:	push   edi
  4110f8:	daa    
  4110f9:	fild   WORD PTR [ecx+0x71813784]
  4110ff:	push   eax
  411100:	cmp    esp,edx
  411102:	add    BYTE PTR [esp+eiz*8],0x33
  411106:	mov    ebx,0x98031c1b
  41110b:	sti    
  41110c:	jge    0x411173
  41110e:	pop    esp
  41110f:	and    bh,BYTE PTR [ecx-0x1f59d7bb]
  411115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411116:	cmp    BYTE PTR [esi],ch
  411118:	pusha  
  411119:	imul   ecx,DWORD PTR [edi+0x7fb8caed],0x7d
  411120:	ins    BYTE PTR es:[edi],dx
  411121:	and    ch,bh
  411123:	sti    
  411124:	sub    al,BYTE PTR [edi+ebx*4+0x56]
  411128:	ret    0x8d02
  41112b:	idiv   cl
  41112d:	jo     0x41111f
  41112f:	in     al,0xf9
  411131:	xchg   edi,eax
  411132:	add    bl,BYTE PTR [ecx+0x5cfbec61]
  411138:	and    eax,0xd5897962
  41113d:	pop    esp
  41113e:	ret    
  41113f:	cmp    al,BYTE PTR [edx+0x7720fdb]
  411145:	icebp  
  411146:	fninit 
  411148:	xor    BYTE PTR [esi],ah
  41114a:	dec    edx
  41114b:	mov    edx,0xc5fee41b
  411150:	mov    al,0xa4
  411152:	add    DWORD PTR [ecx],ecx
  411154:	popf   
  411155:	xor    DWORD PTR [esi],edx
  411157:	call   0x2beb:0x76f939e0
  41115e:	add    DWORD PTR ss:[esp+edx*8-0x6d],ebp
  411163:	push   0x90a13299
  411168:	push   esp
  411169:	push   eax
  41116a:	imul   eax,DWORD PTR [ebp+0x37b9a1aa],0x17
  411171:	mov    edx,0x24a3d426
  411176:	fwait
  411177:	sub    eax,DWORD PTR [ecx-0x5d0ef7fd]
  41117d:	xor    dh,dh
  41117f:	push   edx
  411180:	(bad)  
  411181:	and    al,0x5b
  411183:	dec    edx
  411184:	sub    al,BYTE PTR [esp+edx*1]
  411187:	mov    dl,0xe5
  411189:	jns    0x4111d5
  41118b:	dec    edx
  41118c:	xchg   ecx,eax
  41118d:	or     BYTE PTR [esi-0x7c072ea8],bh
  411193:	add    ecx,DWORD PTR fs:[ebx]
  411196:	xlat   BYTE PTR ds:[ebx]
  411197:	(bad)  
  411198:	cmc    
  411199:	pop    ds
  41119a:	out    0x95,eax
  41119c:	adc    al,0x94
  41119e:	popa   
  41119f:	jno    0x4111d2
  4111a1:	aam    0xd1
  4111a3:	stc    
  4111a4:	fcom   DWORD PTR [eax+0x44]
  4111a7:	shl    DWORD PTR ds:0x478d4218,0xca
  4111ae:	xchg   ebx,eax
  4111af:	push   ds
  4111b0:	sahf   
  4111b1:	mov    ebx,0xb089035
  4111b6:	out    0x6c,al
  4111b8:	stos   DWORD PTR es:[edi],eax
  4111b9:	or     al,0x6f
  4111bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111bc:	ret    
  4111bd:	ins    BYTE PTR es:[edi],dx
  4111be:	jl     0x4111ba
  4111c0:	adc    al,0x6c
  4111c2:	pop    ebp
  4111c3:	xadd   esi,esi
  4111c6:	shr    BYTE PTR [ecx],cl
  4111c8:	aas    
  4111c9:	pop    ecx
  4111ca:	push   ds
  4111cb:	and    DWORD PTR [edi-0x69],edi
  4111ce:	sub    BYTE PTR [esi],bl
  4111d0:	jle    0x411195
  4111d2:	(bad)  
  4111d3:	xor    bl,dh
  4111d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d6:	fisub  WORD PTR [eax+edi*2]
  4111d9:	adc    ch,dl
  4111db:	int    0xf0
  4111dd:	mov    ebx,ds
  4111df:	jmp    0xeef6:0xd915680c
  4111e6:	and    al,0xa7
  4111e8:	xchg   ecx,eax
  4111e9:	retf   
  4111ea:	or     al,0x81
  4111ec:	(bad)  
  4111ed:	leave  
  4111ee:	sub    eax,0x1fb1a4e9
  4111f3:	xor    bh,BYTE PTR [ecx]
  4111f5:	jmp    0x4111f3
  4111f7:	pop    ecx
  4111f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f9:	rol    DWORD PTR [ebp-0x67],0xf2
  4111fd:	outs   dx,BYTE PTR ds:[esi]
  4111fe:	into   
  4111ff:	mov    ah,dl
  411201:	xor    al,0x39
  411203:	adc    DWORD PTR [eax+0x5a],ecx
  411206:	pop    ecx
  411207:	mov    ds:0xcffd3f4b,al
  41120c:	lahf   
  41120d:	xchg   ebp,eax
  41120e:	ror    DWORD PTR [esi-0x522bd8aa],1
  411214:	inc    edx
  411215:	ins    DWORD PTR es:[edi],dx
  411216:	and    DWORD PTR [ecx-0x1a5e9216],0xe5ac0dba
  411220:	out    0x4d,al
  411222:	mov    ds:0xd789abb9,al
  411227:	cmp    eax,0xd74bfe0c
  41122c:	data16 out 0xe0,al
  41122f:	sbb    BYTE PTR [esi-0x28],dl
  411232:	add    DWORD PTR [ebp-0x4a9cad62],0xd844ac08
  41123c:	repnz inc ebx
  41123e:	push   0xbf0ea15d
  411243:	push   ebx
  411244:	sbb    eax,0x8f79e319
  411249:	adc    eax,0x41014895
  41124e:	mov    ecx,0x3ec63b60
  411253:	int3   
  411254:	enter  0xd0c0,0xcf
  411258:	dec    esp
  411259:	mov    ah,0x48
  41125b:	push   esp
  41125c:	jp     0x411284
  41125e:	test   eax,0xed6eab50
  411263:	les    esi,FWORD PTR [esi+0x223bf15a]
  411269:	add    eax,0xcae8bc99
  41126e:	fstp   TBYTE PTR [esp+ecx*2]
  411271:	jns    0x41120a
  411273:	test   al,0xc3
  411275:	outs   dx,BYTE PTR ds:[esi]
  411276:	call   0x585c9f06
  41127b:	inc    esi
  41127c:	xlat   BYTE PTR ds:[ebx]
  41127d:	mov    esp,0x6183231f
  411282:	mov    cl,0x67
  411284:	push   ds
  411285:	cwde   
  411286:	mov    ds,WORD PTR [edx+0x3a]
  411289:	mov    ds:0x20e68cb2,eax
  41128e:	test   BYTE PTR [ebx],ch
  411290:	inc    esp
  411291:	aas    
  411292:	rol    BYTE PTR [ebx+eax*4+0x6b83d697],cl
  411299:	mov    ds:0xfa2178bd,al
  41129e:	pushf  
  41129f:	mov    edx,eax
  4112a1:	test   BYTE PTR [ecx],0xac
  4112a4:	add    eax,0xf7f1c278
  4112a9:	loope  0x4112f2
  4112ab:	push   eax
  4112ac:	or     DWORD PTR [eax],ebx
  4112ae:	jmp    0x4112ee
  4112b0:	in     al,0xb
  4112b2:	xor    eax,0xff41f30b
  4112b7:	and    eax,0xce732a09
  4112bc:	push   0x4bc009d2
  4112c1:	pop    es
  4112c2:	scas   eax,DWORD PTR es:[edi]
  4112c3:	sbb    DWORD PTR [ebx-0x7c79ca0],edi
  4112c9:	mov    esp,0xb16d9582
  4112ce:	mov    edx,0x223a08ce
  4112d3:	aad    0xcd
  4112d5:	mov    edx,0x6301d529
  4112da:	pop    ebp
  4112db:	jnp    0x4112e5
  4112dd:	add    dh,ah
  4112df:	add    ebp,ecx
  4112e1:	xchg   DWORD PTR [edi*8-0x7475338d],eax
  4112e8:	push   0x99f32f81
  4112ed:	rol    BYTE PTR [edx-0x7c984e6a],1
  4112f3:	ja     0x411327
  4112f5:	arpl   WORD PTR [ecx-0x35873b21],dx
  4112fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fd:	push   ebp
  4112fe:	xchg   esp,eax
  4112ff:	aam    0x87
  411301:	adc    BYTE PTR [ecx],0xcd
  411304:	jmp    0x5e24ff8a
  411309:	jne    0x4112da
  41130b:	jle    0x41132f
  41130d:	sbb    dl,BYTE PTR [edx-0x798023d9]
  411313:	xor    BYTE PTR [ecx+0x67],bh
  411316:	idiv   DWORD PTR [edi]
  411318:	mov    WORD PTR [esi+edx*8-0x5d],?
  41131c:	shr    DWORD PTR [edi-0x43f7329f],1
  411322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411323:	xchg   esp,eax
  411324:	aad    0xb6
  411326:	test   eax,0xacbbc9a3
  41132b:	mov    bh,dl
  41132d:	stos   DWORD PTR es:[edi],eax
  41132e:	std    
  41132f:	dec    ebx
  411330:	clc    
  411331:	mov    BYTE PTR [ecx-0x78bb7bd1],al
  411337:	ins    DWORD PTR es:[edi],dx
  411338:	jg     0x411373
  41133a:	jnp    0x411395
  41133c:	retf   0x6a38
  41133f:	out    0x7,al
  411341:	call   0xc3af22fd
  411346:	jle    0x411326
  411348:	cmp    esp,ebx
  41134a:	mov    eax,ds:0x279d2935
  41134f:	add    dh,dl
  411351:	push   esi
  411352:	outs   dx,DWORD PTR ds:[esi]
  411353:	ds pop es
  411355:	or     eax,0x81febeb3
  41135a:	in     eax,dx
  41135b:	sbb    DWORD PTR [edx-0x4af7a294],edx
  411361:	dec    edx
  411362:	aam    0xd8
  411364:	mov    edi,0xf66bf9bd
  411369:	jmp    0x857d:0xb4c50d2a
  411370:	retf   
  411371:	push   ds
  411372:	xor    al,0x79
  411374:	fyl2x  
  411376:	das    
  411377:	xchg   ebx,eax
  411378:	inc    ebp
  411379:	imul   eax,DWORD PTR [edi-0x2d],0xffffffb2
  41137d:	jbe    0x411321
  41137f:	repnz rcl DWORD PTR ds:0x4e657bf4,0x5c
  411388:	and    DWORD PTR [ebp-0x71],0x24
  41138c:	push   eax
  41138d:	mov    BYTE PTR [ebp+0x7ce77894],dh
  411393:	xor    eax,0xa6290ac3
  411398:	xchg   ecx,eax
  411399:	out    0x39,eax
  41139b:	(bad)  
  41139d:	xchg   DWORD PTR [eax],eax
  41139f:	sub    ch,BYTE PTR [edi-0x14]
  4113a2:	cmp    BYTE PTR [ebp+0x5708767f],ah
  4113a8:	add    BYTE PTR [ecx],ah
  4113aa:	adc    DWORD PTR [ecx],ecx
  4113ac:	sbb    BYTE PTR [esi-0x49bbde45],0x10
  4113b3:	dec    esi
  4113b4:	mov    ecx,DWORD PTR [edi-0x35]
  4113b7:	daa    
  4113b8:	push   es
  4113b9:	cmc    
  4113ba:	xchg   sp,ax
  4113bc:	dec    esp
  4113bd:	push   eax
  4113be:	pop    eax
  4113bf:	mov    bh,0xc9
  4113c1:	xor    al,0xa8
  4113c3:	xchg   ebx,eax
  4113c4:	push   ebx
  4113c5:	into   
  4113c6:	adc    eax,DWORD PTR ds:0x2b547e40
  4113cc:	pop    edi
  4113cd:	fucomp st(3)
  4113cf:	popf   
  4113d0:	daa    
  4113d1:	mov    dh,0x7a
  4113d3:	punpckhdq mm3,mm5
  4113d6:	add    dl,BYTE PTR [eax+0x6d197632]
  4113dc:	cli    
  4113dd:	xlat   BYTE PTR ds:[ebx]
  4113de:	loope  0x4113c1
  4113e0:	js     0x411369
  4113e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e3:	jg     0x4113c6
  4113e5:	mov    cl,0xae
  4113e7:	sub    DWORD PTR [edi+0x2f],0xe3d549
  4113ee:	cmp    edx,eax
  4113f0:	je     0x4113b4
  4113f2:	and    ebp,DWORD PTR [edi+0x6974d057]
  4113f8:	imul   ecx,edi,0x12
  4113fb:	retf   
  4113fc:	xchg   DWORD PTR [eax+esi*4+0x2dfc5788],eax
  411403:	xchg   ebx,eax
  411404:	retf   0xd527
  411407:	jecxz  0x41138e
  411409:	ret    
  41140a:	xchg   esp,eax
  41140b:	cmp    dl,BYTE PTR [edi-0x3d59395c]
  411411:	test   BYTE PTR [ecx+ebx*8+0x7],0x5e
  411416:	push   0xffffff82
  411418:	rol    BYTE PTR [edx],0xdf
  41141b:	(bad)  
  41141c:	jno    0x41146d
  41141e:	inc    ebx
  41141f:	adc    al,BYTE PTR [edi+0x704e584b]
  411425:	shr    DWORD PTR [edx+0x10],1
  411428:	sbb    edi,DWORD PTR [eax]
  41142a:	stos   BYTE PTR es:[edi],al
  41142b:	add    BYTE PTR [edx+0xc],ch
  41142e:	call   DWORD PTR [eax+0x19c364be]
  411434:	xor    BYTE PTR [ecx+0x14b4e144],dl
  41143a:	repnz aas 
  41143c:	mov    ch,0xfd
  41143e:	(bad)  [edi]
  411440:	jno    0x411498
  411442:	int    0x8d
  411444:	pop    edi
  411445:	add    dh,BYTE PTR [ecx+0x6e7a739d]
  41144b:	mov    eax,ds:0xb53f6b7
  411450:	cmp    bl,BYTE PTR [edi+0x6c]
  411453:	push   0xffffffdf
  411455:	push   edi
  411456:	(bad)  
  411457:	dec    ebp
  411458:	xor    DWORD PTR [eax+0x54],ebp
  41145b:	mov    eax,ds:0x38f25d18
  411460:	push   eax
  411461:	fnstcw WORD PTR [edi-0x647e7881]
  411467:	sbb    eax,0xdf12cf4d
  41146c:	je     0x411493
  41146e:	arpl   bp,bx
  411470:	and    DWORD PTR [eax-0x4b],edi
  411473:	out    0xd3,eax
  411475:	cld    
  411476:	out    dx,al
  411477:	mov    ebp,DWORD PTR [edx]
  411479:	jmp    0x505a:0xeb0b338
  411480:	xor    BYTE PTR [eax-0x3ed50b9b],0xbc
  411487:	xchg   DWORD PTR [bx-0x4d],esp
  41148b:	dec    ecx
  41148c:	push   ss
  41148d:	xor    ecx,DWORD PTR es:[ebp+0x24fad296]
  411494:	jno    0x41144c
  411496:	mov    esi,esp
  411498:	add    BYTE PTR [edx+ecx*8-0x610039ae],al
  41149f:	(bad)  
  4114a0:	scas   eax,DWORD PTR es:[edi]
  4114a1:	nop
  4114a2:	stos   BYTE PTR es:[edi],al
  4114a3:	mov    eax,0x62e3b77e
  4114a8:	pop    ebx
  4114a9:	out    0xd4,eax
  4114ab:	scas   eax,DWORD PTR es:[edi]
  4114ac:	retf   
  4114ad:	test   DWORD PTR [ebp+0x761b1897],edi
  4114b3:	ret    
  4114b4:	stos   DWORD PTR es:[edi],eax
  4114b5:	sub    ebp,DWORD PTR [edi-0x77aa1bfc]
  4114bb:	aam    0x6f
  4114bd:	repnz push ds
  4114bf:	shl    BYTE PTR [ebp+0x19],1
  4114c2:	pop    edx
  4114c3:	loopne 0x4114b6
  4114c5:	adc    ecx,DWORD PTR [ecx+0x30]
  4114c8:	std    
  4114c9:	xor    BYTE PTR [edi-0x7cf9ab2d],bl
  4114cf:	aaa    
  4114d0:	aaa    
  4114d1:	pop    esi
  4114d2:	inc    esi
  4114d3:	pop    eax
  4114d4:	sbb    eax,0xee409a5e
  4114d9:	sub    al,0xe1
  4114db:	mov    DWORD PTR [edx-0x3],0x9511d4cc
  4114e2:	arpl   WORD PTR [ebx],dx
  4114e4:	call   0xef3e:0x4713a3e4
  4114eb:	inc    ebx
  4114ec:	sbb    eax,0x2a2d87e9
  4114f1:	and    ebp,DWORD PTR [edx-0x1adf4076]
  4114f7:	fnsave [esi]
  4114f9:	sub    BYTE PTR [eax+0x56],0x86
  4114fd:	push   es
  4114fe:	sahf   
  4114ff:	cld    
  411500:	shl    BYTE PTR [eax],cl
  411502:	mov    al,ds:0x5e282044
  411507:	lods   eax,DWORD PTR ds:[esi]
  411508:	jmp    0x81ef9ba1
  41150d:	ja     0x411579
  41150f:	sub    edx,esi
  411511:	and    ecx,ebp
  411513:	popf   
  411514:	int3   
  411515:	fs jb  0x4114f5
  411518:	sbb    al,0xe4
  41151a:	lods   eax,DWORD PTR ds:[esi]
  41151b:	mov    ecx,0x9ee306a5
  411520:	out    0xba,al
  411522:	push   0xffffff90
  411524:	jnp    0x4114c3
  411526:	addr16 int 0x54
  411529:	addr16 and eax,0x8b7ecad0
  41152f:	and    eax,0x3c677606
  411534:	enter  0xc508,0x7c
  411538:	(bad)  
  411539:	dec    eax
  41153a:	test   eax,0xacd0429c
  41153f:	sar    BYTE PTR [ecx-0x139cba28],0x2f
  411546:	adc    eax,0xfab8d29e
  41154b:	enter  0xface,0xee
  41154f:	iret   
  411550:	jnp    0x411571
  411552:	push   ecx
  411553:	dec    esi
  411554:	pop    ebp
  411555:	add    eax,0x283cec50
  41155a:	dec    eax
  41155b:	dec    edi
  41155c:	push   0x6f
  41155e:	cmp    eax,0x23042c86
  411563:	inc    eax
  411564:	inc    ebp
  411565:	xlat   BYTE PTR ds:[ebx]
  411566:	arpl   WORD PTR gs:[ebx],di
  411569:	sahf   
  41156a:	mov    eax,0x550d94dc
  41156f:	xchg   DWORD PTR [edx-0x394923a8],eax
  411575:	(bad)  
  411576:	fcomp  DWORD PTR [edx+0x58]
  411579:	ror    BYTE PTR [edx+0x77bb275d],0xd4
  411580:	cmp    ebx,ebx
  411582:	in     al,dx
  411583:	repz inc edi
  411585:	lahf   
  411586:	dec    ebx
  411587:	mov    ds:0x10b36db7,al
  41158c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158d:	rol    BYTE PTR [edi+ebp*2+0x5a],1
  411591:	ja     0x41156c
  411593:	bound  eax,QWORD PTR [esp+ecx*8]
  411596:	aaa    
  411597:	push   ebp
  411598:	retf   
  411599:	int3   
  41159a:	retf   0xac41
  41159d:	mov    ch,0xa3
  41159f:	fcomp  DWORD PTR [eax+0x41]
  4115a2:	cmp    DWORD PTR [edx+0x28],esi
  4115a5:	push   es
  4115a6:	adc    dl,al
  4115a8:	imul   ebx,DWORD PTR [ebx],0x18
  4115ab:	dec    ebx
  4115ac:	push   0xfffffffd
  4115ae:	ss xchg esi,edx
  4115b1:	scas   eax,DWORD PTR es:[edi]
  4115b2:	dec    eax
  4115b3:	lea    ecx,[bx+si]
  4115b6:	push   edi
  4115b7:	repz xchg esp,eax
  4115b9:	es stos BYTE PTR es:[edi],al
  4115bb:	bound  ebp,QWORD PTR [ecx-0x70]
  4115be:	pop    ecx
  4115bf:	sub    eax,0xdfdcd674
  4115c4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4115c6:	cmp    ebx,DWORD PTR [ebp+0x4c1e4177]
  4115cc:	ds xchg esi,eax
  4115ce:	aas    
  4115cf:	stos   BYTE PTR es:[edi],al
  4115d0:	push   cs
  4115d1:	int3   
  4115d2:	fild   QWORD PTR [edi+0x6af1d953]
  4115d8:	cmp    BYTE PTR [edi-0x49],0x16
  4115dc:	adc    al,0xad
  4115de:	xlat   BYTE PTR ds:[ebx]
  4115df:	mov    bl,0x8a
  4115e1:	es mov esp,0xdc37d059
  4115e7:	(bad)  
  4115e8:	pop    ss
  4115e9:	sti    
  4115ea:	adc    DWORD PTR [edi+ebp*2-0x5ddd5c69],ecx
  4115f1:	(bad)  
  4115f2:	pop    esp
  4115f3:	daa    
  4115f4:	clc    
  4115f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f6:	pop    ss
  4115f7:	fdiv   QWORD PTR [ebx+0x10a28a8d]
  4115fd:	xchg   DWORD PTR [esi+0x7c5f4645],esp
  411603:	mov    ds,WORD PTR [ebx-0x23]
  411606:	adc    eax,0x887d1c88
  41160b:	or     edx,DWORD PTR [ecx-0x25]
  41160e:	iret   
  41160f:	sbb    eax,0x984e6dcb
  411614:	loopne 0x411640
  411616:	call   0xbbc452cf
  41161b:	call   0x8a45e217
  411620:	push   cs
  411621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411622:	sub    eax,0x9f3f7f7c
  411627:	xor    BYTE PTR [edi+0x252b9c74],cl
  41162d:	push   edx
  41162e:	push   ss
  41162f:	fiadd  DWORD PTR [ecx+0x22]
  411632:	push   ecx
  411633:	sahf   
  411634:	imul   eax,DWORD PTR [edx-0x3b],0x58
  411638:	cmp    DWORD PTR [edi],ebp
  41163a:	xchg   esi,eax
  41163b:	sub    BYTE PTR [eax],al
  41163d:	test   ebp,0x6b27f0a6
  411643:	ret    
  411644:	ins    BYTE PTR es:[edi],dx
  411645:	dec    ecx
  411646:	or     edi,eax
  411648:	fdivr  DWORD PTR [edi-0x3a]
  41164b:	push   0x5644b12e
  411650:	div    BYTE PTR [bx+di-0x71]
  411654:	int3   
  411655:	rol    BYTE PTR [eax+0x3],1
  411658:	and    BYTE PTR ds:0x775b1671,cl
  41165e:	popf   
  41165f:	fst    QWORD PTR [eax-0x9]
  411662:	add    DWORD PTR [edi+0x129f9e89],0x9d3f43a4
  41166c:	fwait
  41166d:	ret    
  41166e:	lea    ebp,[ebp+0x50]
  411671:	jnp    0x411667
  411673:	xlat   BYTE PTR ds:[ebx]
  411674:	cld    
  411675:	icebp  
  411676:	dec    ebp
  411677:	pop    ss
  411678:	inc    edx
  411679:	aaa    
  41167a:	fadd   DWORD PTR [ecx]
  41167c:	popa   
  41167d:	call   0xc859:0x721ad05c
  411684:	out    dx,eax
  411685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411686:	test   DWORD PTR es:[edx+0x4b],edx
  41168a:	mov    cs,WORD PTR ds:0xad5012d6
  411690:	inc    ebp
  411691:	test   eax,0x725557e8
  411696:	int3   
  411697:	jb     0x411692
  411699:	mov    WORD PTR [edx],cs
  41169b:	and    edx,0xfffffffb
  41169e:	out    0xc,eax
  4116a0:	loope  0x4116f8
  4116a2:	add    DWORD PTR [ebx],esp
  4116a4:	add    DWORD PTR [esi+0x7e02afa0],ecx
  4116aa:	mov    ch,0x30
  4116ac:	inc    eax
  4116ad:	mov    eax,0x29ea35b2
  4116b2:	cmp    eax,0x8199a32a
  4116b7:	fwait
  4116b8:	jnp    0x41165f
  4116ba:	cmp    eax,0x83116b87
  4116bf:	fwait
  4116c0:	and    ch,BYTE PTR [eax+ebx*2-0x38]
  4116c4:	inc    ebx
  4116c5:	dec    ecx
  4116c6:	js     0x41164f
  4116c8:	inc    edx
  4116c9:	jae    0x411676
  4116cb:	push   esp
  4116cc:	mov    esp,0x547907a8
  4116d1:	aaa    
  4116d2:	stos   BYTE PTR es:[edi],al
  4116d3:	jo     0x4116fe
  4116d5:	sbb    ah,ah
  4116d7:	outs   dx,BYTE PTR ds:[esi]
  4116d8:	cdq    
  4116d9:	nop
  4116da:	(bad)  
  4116db:	pop    ebx
  4116dc:	rcr    edx,1
  4116de:	jmp    0x4c48:0xee2f7f94
  4116e5:	and    ah,BYTE PTR [ebx-0x69]
  4116e8:	jae    0x411698
  4116ea:	fnstcw WORD PTR [esi+0x29]
  4116ed:	cmp    al,BYTE PTR [eax]
  4116ef:	out    dx,eax
  4116f0:	shl    BYTE PTR [edi+edx*1+0x78],cl
  4116f4:	xor    ecx,ecx
  4116f6:	outs   dx,DWORD PTR ds:[esi]
  4116f7:	lahf   
  4116f8:	adc    BYTE PTR [eax-0x1f],dl
  4116fb:	cwde   
  4116fc:	jg     0x411742
  4116fe:	cmp    BYTE PTR [edi+0x9],al
  411701:	lahf   
  411702:	xchg   ebp,eax
  411703:	jle    0x5fa847
  411709:	and    al,0x57
  41170b:	pop    esp
  41170c:	lods   al,BYTE PTR ds:[esi]
  41170d:	fild   QWORD PTR [ebx+edi*1+0x1f]
  411711:	ret    0x9b9
  411714:	push   esi
  411715:	xchg   edx,eax
  411716:	and    esi,ecx
  411718:	sub    esi,DWORD PTR [ebx]
  41171a:	dec    eax
  41171b:	lds    esp,FWORD PTR [edi]
  41171d:	ja     0x41173d
  41171f:	hlt    
  411720:	out    dx,eax
  411721:	out    0x11,al
  411723:	adc    cl,BYTE PTR [ebx-0x661991ef]
  411729:	out    0x53,al
  41172b:	push   0x928bd309
  411730:	shr    dl,cl
  411732:	fld    QWORD PTR [esi+0x8c16c56]
  411738:	iret   
  411739:	inc    ebx
  41173a:	adc    DWORD PTR [edi],0xffffff90
  41173d:	in     al,dx
  41173e:	cli    
  41173f:	adc    al,0x2d
  411741:	iret   
  411742:	mov    esp,0x8ca84c65
  411747:	out    dx,eax
  411748:	popa   
  411749:	or     dl,al
  41174b:	addr16 mov esi,0xf1f6e35f
  411751:	adc    ch,BYTE PTR [ebx+0x54]
  411754:	test   BYTE PTR [edx-0x3],0x8
  411758:	sbb    DWORD PTR [ebp-0x64],eax
  41175b:	xor    DWORD PTR [edx-0x2f],eax
  41175e:	aaa    
  41175f:	addr16 mov ah,0x33
  411762:	into   
  411763:	mov    bh,0xbe
  411765:	push   edx
  411766:	mov    ds:0x7df2f99b,eax
  41176b:	cs leave 
  41176d:	inc    esp
  41176e:	cmc    
  41176f:	and    ebx,DWORD PTR [esi-0x44122689]
  411775:	xlat   BYTE PTR ds:[ebx]
  411776:	ss adc eax,0xbbf1af72
  41177c:	dec    eax
  41177d:	nop
  41177e:	xor    al,BYTE PTR [ecx+ecx*8+0x2b]
  411782:	repnz pop edx
  411784:	adc    DWORD PTR [ecx+0x34],0xc
  411788:	jl     0x4117f9
  41178a:	push   esp
  41178b:	ins    BYTE PTR es:[edi],dx
  41178c:	out    0x4b,al
  41178e:	test   eax,0xe09e74fd
  411793:	jnp    0x41179a
  411795:	push   ss
  411796:	xchg   ecx,eax
  411797:	pop    es
  411798:	(bad)  
  411799:	das    
  41179a:	or     al,0x13
  41179c:	adc    DWORD PTR [ebp-0x80],esi
  41179f:	dec    ecx
  4117a0:	add    eax,eax
  4117a2:	arpl   dx,dx
  4117a4:	jb     0x411809
  4117a6:	ror    BYTE PTR [eax],cl
  4117a8:	mov    cl,0x3b
  4117aa:	xchg   edi,eax
  4117ab:	cmp    ebx,DWORD PTR [ecx+0x71]
  4117ae:	cmp    ch,dh
  4117b0:	adc    DWORD PTR [esi+0x6002960c],edx
  4117b6:	add    eax,0xa0b8cedb
  4117bb:	fs pop ds
  4117bd:	lahf   
  4117be:	data16 jb 0x4117f8
  4117c1:	cmc    
  4117c2:	xor    eax,0x453c69
  4117c7:	push   ecx
  4117c8:	pusha  
  4117c9:	xor    al,0x24
  4117cb:	xlat   BYTE PTR ds:[ebx]
  4117cc:	imul   eax,DWORD PTR [eax-0x3c],0x314eec27
  4117d3:	or     DWORD PTR [ecx-0x62d6a511],ebp
  4117d9:	dec    edx
  4117da:	cmc    
  4117db:	sub    BYTE PTR [eax],bl
  4117dd:	jo     0x4117f4
  4117df:	dec    edi
  4117e0:	push   ecx
  4117e1:	test   DWORD PTR [ecx],ebx
  4117e3:	(bad)  
  4117e4:	rcl    edx,cl
  4117e6:	cdq    
  4117e7:	fs stc 
  4117e9:	or     bh,BYTE PTR [edi]
  4117eb:	inc    edx
  4117ec:	rcl    dh,cl
  4117ee:	popa   
  4117ef:	adc    DWORD PTR ds:0x508956a5,ebp
  4117f5:	and    al,0xb
  4117f7:	adc    DWORD PTR [eax+0x41e467a],eax
  4117fd:	cmp    esp,edi
  4117ff:	mov    dl,0x62
  411801:	in     al,0x5b
  411803:	test   al,0x0
  411805:	std    
  411806:	xchg   ebx,eax
  411807:	xchg   esi,eax
  411808:	dec    DWORD PTR [eax]
  41180a:	out    dx,al
  41180b:	retf   0xf21c
  41180e:	jmp    0x6766:0x28a8c481
  411815:	pop    es
  411816:	dec    esi
  411817:	mov    ds:0xf5fc01ce,al
  41181c:	clc    
  41181d:	imul   esp,DWORD PTR [edx-0x59],0xe2d93223
  411824:	int    0x48
  411826:	jge    0x4117dc
  411828:	mov    ds:0x729d3668,eax
  41182d:	(bad)  
  41182f:	push   cs
  411830:	ins    BYTE PTR es:[edi],dx
  411831:	cmp    BYTE PTR [esi-0x711f692],al
  411837:	mov    dl,0x79
  411839:	mov    dh,0xc5
  41183b:	jo     0x4117c1
  41183d:	pop    es
  41183e:	ja     0x41180d
  411840:	or     al,0x89
  411842:	or     cl,cl
  411844:	xchg   esp,eax
  411845:	mov    eax,ds:0xafbf7148
  41184a:	adc    ah,al
  41184c:	sub    bh,BYTE PTR [eax+0x10]
  41184f:	sbb    al,dl
  411851:	inc    edx
  411852:	into   
  411853:	(bad)  
  411855:	test   al,0xc3
  411857:	pop    ebx
  411858:	jp     0x4118ab
  41185a:	add    BYTE PTR [eax],cl
  41185c:	call   0xf727:0x7200376f
  411863:	idiv   DWORD PTR [edi-0x3d85a036]
  411869:	xor    edi,ecx
  41186b:	je     0x4118b1
  41186d:	jno    0x411858
  41186f:	icebp  
  411870:	push   esp
  411871:	ret    
  411872:	pop    ebp
  411873:	sbb    edx,eax
  411875:	retf   
  411876:	sbb    BYTE PTR [edi],0x0
  411879:	inc    ebp
  41187a:	add    DWORD PTR [edi-0x22],0xcc891247
  411881:	(bad)  
  411882:	pop    esi
  411883:	sub    DWORD PTR [esi+ebx*8],0x72
  411887:	mov    esi,0xc182dd32
  41188c:	fisubr DWORD PTR [ecx+ebp*1-0x7e7d0e8c]
  411894:	cs jmp 0xbf9203f5
  41189a:	or     ch,BYTE PTR [ebp+esi*8+0x2582a0f3]
  4118a1:	das    
  4118a2:	push   DWORD PTR [eax]
  4118a4:	mov    esp,0xe054869e
  4118a9:	add    eax,0xfb794e2
  4118ae:	sub    DWORD PTR [ecx],ecx
  4118b0:	cmp    BYTE PTR [eax],0x37
  4118b3:	or     BYTE PTR [eax],ah
  4118b5:	stos   BYTE PTR es:[edi],al
  4118b6:	mov    dh,0x2a
  4118b8:	push   eax
  4118b9:	cmp    eax,0xc48ccde4
  4118be:	adc    bl,bl
  4118c0:	call   0x5111ff8b
  4118c5:	scas   al,BYTE PTR es:[edi]
  4118c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c7:	mov    al,0xb8
  4118c9:	scas   eax,DWORD PTR es:[edi]
  4118ca:	stos   DWORD PTR es:[edi],eax
  4118cb:	xor    ecx,ebx
  4118cd:	cdq    
  4118ce:	xor    eax,0x93e13d0e
  4118d3:	lods   al,BYTE PTR ds:[esi]
  4118d4:	sahf   
  4118d5:	shl    BYTE PTR [ecx-0x5db464e8],0x9
  4118dc:	xchg   DWORD PTR [ebp-0x4c0193ff],edi
  4118e2:	les    edx,FWORD PTR ds:0x16c2e34
  4118e8:	push   eax
  4118e9:	cwde   
  4118ea:	das    
  4118eb:	sar    DWORD PTR [ebx-0x5d64e792],0xa
  4118f2:	je     0x41196d
  4118f4:	dec    ebx
  4118f5:	and    BYTE PTR [edx-0x21a8af3b],0xd8
  4118fc:	pop    esp
  4118fd:	mov    bl,BYTE PTR [edx+0x24]
  411900:	in     eax,dx
  411901:	fld    TBYTE PTR [edx+0x3039ad6a]
  411907:	lea    ebx,[eax]
  411909:	adc    ebx,DWORD PTR [edi+edi*1]
  41190c:	frstor [eax+0x571f8273]
  411912:	sti    
  411913:	mov    WORD PTR [ebp+0x42],?
  411916:	ja     0x4118ed
  411918:	push   cs
  411919:	mov    ds:0x83cb0614,al
  41191e:	std    
  41191f:	in     al,0x34
  411921:	ds mov ch,0xfd
  411924:	jmp    0x8758:0x3aecc75e
  41192b:	int    0x96
  41192d:	adc    edi,edx
  41192f:	leave  
  411930:	in     eax,0x58
  411932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411933:	inc    ebp
  411934:	dec    ecx
  411935:	mov    ebx,DWORD PTR [esi+0x64]
  411938:	push   eax
  411939:	pop    es
  41193a:	jo     0x411997
  41193c:	push   esp
  41193d:	and    DWORD PTR [ebp+0x18c3a928],edi
  411943:	sbb    edx,DWORD PTR [eax-0x1b]
  411946:	pusha  
  411947:	push   0xe1c66976
  41194c:	fisubr DWORD PTR [edx]
  41194e:	std    
  41194f:	mov    edi,edx
  411951:	into   
  411952:	fs ins DWORD PTR es:[edi],dx
  411954:	shr    bl,cl
  411956:	mov    edi,0xfa3b15c3
  41195b:	mov    eax,DWORD PTR [esi-0x5a]
  41195e:	stos   BYTE PTR es:[edi],al
  41195f:	adc    ah,BYTE PTR gs:[edx+0x2aa31a68]
  411966:	es jmp 0x411951
  411969:	stc    
  41196a:	push   ss
  41196b:	in     eax,0xe
  41196d:	mov    ds:0x3c1edbee,eax
  411972:	rol    DWORD PTR [ebp-0x4617e169],1
  411978:	xchg   esp,eax
  411979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41197a:	popa   
  41197b:	mov    eax,ds:0x36af58b0
  411980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411981:	test   BYTE PTR [ecx+0x13],bh
  411984:	lods   eax,DWORD PTR ds:[esi]
  411985:	cwde   
  411986:	push   0x7120083a
  41198b:	jp     0x41196b
  41198d:	imul   ecx,DWORD PTR [edi+ebp*8],0x3d
  411991:	push   ecx
  411992:	jbe    0x411946
  411994:	shl    esi,1
  411996:	retf   0x258f
  411999:	sub    esp,DWORD PTR [ecx]
  41199b:	daa    
  41199c:	mov    esi,0x178fc7b1
  4119a1:	popf   
  4119a2:	pop    esp
  4119a3:	sar    DWORD PTR [edi-0x5071fde6],0xe2
  4119aa:	inc    esi
  4119ab:	sbb    DWORD PTR [esi-0x9],esp
  4119ae:	test   dh,dh
  4119b0:	push   edi
  4119b1:	mov    ss,WORD PTR [edx-0x7c]
  4119b4:	xor    al,dl
  4119b6:	xor    al,0x78
  4119b8:	imul   ebx,DWORD PTR [ebx+ebx*1-0x9],0xc1cf50e4
  4119c0:	fisubr DWORD PTR [esi]
  4119c2:	and    al,0xee
  4119c4:	rol    DWORD PTR [edi+ecx*2],0x4f
  4119c8:	mov    eax,0x12d4e651
  4119cd:	test   DWORD PTR [ebp-0x3eaddcab],edi
  4119d3:	sub    eax,0xd257e057
  4119d8:	push   cs
  4119d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119da:	cmc    
  4119db:	fsub   st,st(2)
  4119dd:	sub    eax,0xc9d35f10
  4119e2:	out    dx,al
  4119e3:	leave  
  4119e4:	gs data16 sbb dl,bl
  4119e8:	and    ch,BYTE PTR [edx]
  4119ea:	not    dh
  4119ec:	and    BYTE PTR [esi+0x344cfb07],al
  4119f2:	addr16 loopne 0x4119c4
  4119f5:	test   BYTE PTR [esi+0x46],ch
  4119f8:	and    ch,dl
  4119fa:	shl    BYTE PTR [ebx],cl
  4119fc:	stc    
  4119fd:	je     0x411a65
  4119ff:	fadd   DWORD PTR [edi-0x58]
  411a02:	fdiv   QWORD PTR [esi]
  411a04:	cs push 0xa3c6c72c
  411a0a:	or     DWORD PTR [eax-0x72abebd],eax
  411a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a11:	into   
  411a12:	push   esp
  411a13:	daa    
  411a14:	jg     0x411a6c
  411a16:	pop    ecx
  411a17:	jbe    0x411a37
  411a19:	fisubr DWORD PTR [ecx-0x4e]
  411a1c:	aad    0xa1
  411a1e:	push   0x33
  411a20:	xchg   esp,eax
  411a21:	mov    edx,0x15d898ec
  411a26:	mov    bh,bh
  411a28:	je     0x411a29
  411a2a:	jl     0x411a87
  411a2c:	mov    dl,BYTE PTR [edi+0x3]
  411a2f:	push   edx
  411a30:	cmp    dl,BYTE PTR [ebx-0x4c]
  411a33:	mov    ebp,0x3d63ccc0
  411a38:	je     0x411a19
  411a3a:	push   ss
  411a3b:	push   edx
  411a3c:	jl     0x411a85
  411a3e:	add    ch,ah
  411a40:	mov    ebp,0x60bb8907
  411a45:	ficomp WORD PTR [ecx+0xd]
  411a48:	inc    BYTE PTR [ebp-0x33]
  411a4b:	dec    DWORD PTR [ecx]
  411a4d:	fimul  DWORD PTR ds:0x834ed02
  411a53:	fisub  DWORD PTR [eax]
  411a55:	pop    edx
  411a56:	xor    al,0xb8
  411a58:	xchg   edi,eax
  411a59:	push   es
  411a5a:	pop    edx
  411a5b:	push   edx
  411a5c:	fmul   st,st(1)
  411a5e:	inc    esi
  411a5f:	dec    ecx
  411a60:	push   esi
  411a61:	cli    
  411a62:	arpl   si,bp
  411a64:	frstor [esi+0x66c2429e]
  411a6a:	adc    cl,BYTE PTR [edx+0x112f4e7e]
  411a70:	rol    BYTE PTR [ebp-0x7d],0x6a
  411a74:	loope  0x411a2c
  411a76:	mov    cl,0x36
  411a78:	jae    0x411ab3
  411a7a:	sbb    ebp,DWORD PTR [eax+ebx*2-0x511aad3c]
  411a81:	das    
  411a82:	retf   0x3b3e
  411a85:	xchg   edi,eax
  411a86:	sbb    dl,cl
  411a88:	test   BYTE PTR [esi-0x48df1e9c],cl
  411a8e:	shl    DWORD PTR [ebx+edi*2+0x4882cf59],1
  411a95:	dec    ebp
  411a96:	cld    
  411a97:	xor    al,0x89
  411a99:	(bad)  
  411a9a:	dec    edx
  411a9b:	or     edi,DWORD PTR [ebx-0x61e17682]
  411aa1:	in     al,dx
  411aa2:	sub    ebp,DWORD PTR [ebx-0x63]
  411aa5:	shr    edx,cl
  411aa7:	loope  0x411a43
  411aa9:	cmc    
  411aaa:	sbb    ebp,DWORD PTR [eax+0x22]
  411aad:	sahf   
  411aae:	lods   eax,DWORD PTR ds:[esi]
  411aaf:	leave  
  411ab0:	xchg   edi,eax
  411ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ab2:	xor    al,BYTE PTR [edx-0x7de67b03]
  411ab8:	cld    
  411ab9:	sbb    dh,BYTE PTR [ebx]
  411abb:	mov    esp,0xd7b8ac98
  411ac0:	xchg   esi,eax
  411ac1:	sub    eax,0x7814ce8e
  411ac6:	fwait
  411ac7:	(bad)  
  411ac8:	out    0xc8,al
  411aca:	aas    
  411acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411acc:	shl    BYTE PTR [edx],1
  411ace:	(bad)  [edi+0x61]
  411ad1:	sub    ebx,DWORD PTR [ebx+0x3d]
  411ad4:	or     eax,0xd7bdb99d
  411ad9:	jle    0x411ae8
  411adb:	mov    ecx,0xc97de617
  411ae0:	cmc    
  411ae1:	mov    dh,0x1f
  411ae3:	add    eax,0x148e0bcd
  411ae8:	int    0xb1
  411aea:	mov    ah,BYTE PTR [eax-0x62]
  411aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aee:	(bad)  
  411aef:	pop    ss
  411af0:	push   edx
  411af1:	cmp    al,0x58
  411af3:	mov    edi,0x121094da
  411af8:	cli    
  411af9:	xchg   BYTE PTR [edx],bl
  411afb:	ret    0x9a9f
  411afe:	adc    cl,dh
  411b00:	pop    ebx
  411b01:	fcomp  QWORD PTR [ecx]
  411b03:	in     al,dx
  411b04:	cmp    BYTE PTR [esp+eax*1-0x7bcc04f0],0xbf
  411b0c:	jbe    0x411ae8
  411b0e:	pushf  
  411b0f:	ret    
  411b10:	nop
  411b11:	aaa    
  411b12:	sub    esp,edi
  411b14:	pop    ecx
  411b15:	test   BYTE PTR [eax],al
  411b17:	pusha  
  411b18:	dec    esp
  411b19:	test   BYTE PTR [ecx+0x2d8f8876],0x8c
  411b20:	sbb    BYTE PTR [ebx+0x39],0xd0
  411b24:	mov    al,ds:0xf889d228
  411b29:	mov    bh,0xb4
  411b2b:	outs   dx,BYTE PTR ds:[esi]
  411b2c:	and    eax,0xa88fe935
  411b31:	in     al,dx
  411b32:	fcomp  st(1)
  411b34:	ins    DWORD PTR es:[edi],dx
  411b35:	or     eax,DWORD PTR [ebx]
  411b37:	retf   0xb5e0
  411b3a:	hlt    
  411b3b:	popf   
  411b3c:	out    0x30,eax
  411b3e:	rcr    DWORD PTR [esi-0x2092651a],0xc0
  411b45:	imul   edi,ecx,0x5c
  411b48:	cmc    
  411b49:	dec    edx
  411b4a:	or     cl,ch
  411b4c:	outs   dx,BYTE PTR ds:[esi]
  411b4d:	loopne 0x411bb9
  411b4f:	xor    BYTE PTR [ebp+0x40ddc63d],0x1f
  411b56:	enter  0x2831,0xd3
  411b5a:	xor    esp,DWORD PTR [esp+edi*2+0x2744fbaa]
  411b61:	add    BYTE PTR [ecx+ecx*8+0xc],bh
  411b65:	ds aaa 
  411b67:	mov    edx,0xa2d548e8
  411b6c:	ja     0x411b2b
  411b6e:	cld    
  411b6f:	push   eax
  411b70:	cwde   
  411b71:	dec    ecx
  411b72:	xchg   ebx,eax
  411b73:	dec    esp
  411b74:	out    dx,al
  411b75:	fist   DWORD PTR [ebp+0x5c]
  411b78:	outs   dx,BYTE PTR ds:[esi]
  411b79:	repz loop 0x411bcb
  411b7c:	retf   
  411b7d:	sar    ebp,1
  411b7f:	pop    es
  411b80:	test   eax,0x89b106da
  411b85:	je     0x411b10
  411b87:	inc    esi
  411b88:	ror    BYTE PTR [ecx],0xfb
  411b8b:	mov    bh,0x8f
  411b8d:	imul   edx,DWORD PTR [ecx-0x1c69042],0x429c8677
  411b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b98:	dec    eax
  411b99:	or     ebx,DWORD PTR [edi]
  411b9b:	sub    BYTE PTR [edi-0x44],0xb1
  411b9f:	cmc    
  411ba0:	int3   
  411ba1:	pop    ebp
  411ba2:	sub    ecx,edx
  411ba4:	and    al,0x63
  411ba6:	fsub   DWORD PTR [ecx-0x22668cae]
  411bac:	mov    ch,0xd0
  411bae:	stc    
  411baf:	cmp    DWORD PTR [esi+0x1d],ebp
  411bb2:	push   ss
  411bb3:	jp     0x411b67
  411bb5:	and    BYTE PTR [esi-0x2d],ah
  411bb8:	xor    al,0xf5
  411bba:	cmp    ebx,DWORD PTR [ecx]
  411bbc:	ror    BYTE PTR ds:0xac2ef8fd,cl
  411bc2:	daa    
  411bc3:	mov    BYTE PTR [ebp+esi*1-0x14],0x78
  411bc8:	push   edx
  411bc9:	std    
  411bca:	jmp    0x411c1a
  411bcc:	add    cx,bp
  411bcf:	pop    edi
  411bd0:	pushf  
  411bd1:	ss jp  0x411bd9
  411bd4:	nop
  411bd5:	(bad)
  411bd9:	mov    gs,WORD PTR [esi+0x2c]
  411bdc:	retf   
  411bdd:	mov    ecx,0xef843459
  411be2:	inc    edi
  411be3:	int    0x6d
  411be5:	push   0x6
  411be7:	jnp    0x411c0b
  411be9:	adc    BYTE PTR [edx-0x1f],al
  411bec:	sub    eax,0xd2e58283
  411bf1:	pushf  
  411bf2:	cdq    
  411bf3:	lock arpl WORD PTR [eax+ebp*1+0x8e73fa1],ax
  411bfb:	jg     0x411b8b
  411bfd:	fmul   QWORD PTR ds:0x42530312
  411c03:	mov    edx,es
  411c05:	ret    0x13d7
  411c08:	sub    DWORD PTR [eax],edi
  411c0a:	push   0xffffffae
  411c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c0d:	test   al,0xac
  411c0f:	add    dl,BYTE PTR [ecx+0x34]
  411c12:	(bad)  
  411c13:	(bad)  
  411c14:	pop    edi
  411c15:	ds adc eax,0x65fbcb51
  411c1b:	sub    edx,DWORD PTR [esi+0x3f]
  411c1e:	pop    es
  411c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c20:	push   esp
  411c21:	sub    al,0xb5
  411c23:	rcr    BYTE PTR [edi+edx*2-0x7b16b119],1
  411c2a:	xor    al,0x2b
  411c2c:	ins    DWORD PTR es:[edi],dx
  411c2d:	repnz or BYTE PTR [eax+0xc],0x66
  411c32:	fild   QWORD PTR [esp+edi*2+0x4dcf5f61]
  411c39:	xchg   ebx,eax
  411c3a:	dec    ecx
  411c3b:	sahf   
  411c3c:	in     al,dx
  411c3d:	mov    ecx,DWORD PTR [ecx+0x25]
  411c40:	fimul  WORD PTR [ebp+0x5e761116]
  411c46:	mov    WORD PTR [ecx+0x6a],es
  411c49:	in     eax,dx
  411c4a:	ja     0x411c5e
  411c4c:	cwde   
  411c4d:	pusha  
  411c4e:	sbb    eax,0xf00f948d
  411c53:	call   0x71d1:0x367e2dbc
  411c5a:	cmc    
  411c5b:	add    BYTE PTR [eax-0x37b14018],ah
  411c61:	and    dh,BYTE PTR [ebp+0x39]
  411c64:	mov    DWORD PTR [ebp+eax*1+0x13],edi
  411c68:	jns    0x411c70
  411c6a:	scas   al,BYTE PTR es:[di]
  411c6c:	es inc ebp
  411c6e:	add    edi,esp
  411c70:	scas   al,BYTE PTR es:[edi]
  411c71:	pop    ebx
  411c72:	push   edx
  411c73:	mov    ch,0x3b
  411c75:	xchg   edi,eax
  411c76:	sub    edi,DWORD PTR [ebx-0x41]
  411c79:	pop    esi
  411c7a:	lods   al,BYTE PTR ds:[esi]
  411c7b:	mov    DWORD PTR [ebx],eax
  411c7d:	pop    ebx
  411c7e:	dec    esp
  411c7f:	leave  
  411c80:	imul   ecx,DWORD PTR [ebp+0x77f7c5f2],0x3e
  411c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c88:	pop    edi
  411c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c8a:	add    cl,BYTE PTR [ecx]
  411c8c:	xchg   ecx,eax
  411c8d:	shl    BYTE PTR [eax-0x28d08aa9],1
  411c93:	ja     0x411c2e
  411c95:	popa   
  411c96:	mov    ebx,0x60342d3e
  411c9b:	push   0xffffffaa
  411c9d:	push   cs
  411c9e:	push   ecx
  411c9f:	out    dx,al
  411ca0:	dec    edx
  411ca1:	mov    edx,0xf78bba6f
  411ca6:	and    DWORD PTR [edi-0x46],eax
  411ca9:	es inc ebx
  411cab:	hlt    
  411cac:	xchg   ecx,eax
  411cad:	aaa    
  411cae:	imul   edx,ebp,0xe40b166
  411cb4:	or     dl,bl
  411cb6:	and    DWORD PTR [ebp-0x5],edx
  411cb9:	test   DWORD PTR ds:0x4eea6223,ecx
  411cbf:	xchg   edx,eax
  411cc0:	jae    0x411c76
  411cc2:	push   0xc7090041
  411cc7:	(bad)  
  411cc8:	in     eax,0xa5
  411cca:	ds out dx,al
  411ccc:	rcr    DWORD PTR [ebx+0x27d0a39f],0xfe
  411cd3:	dec    ebx
  411cd4:	mov    dh,0xc5
  411cd6:	ja     0x411ca7
  411cd8:	cdq    
  411cd9:	and    dh,bh
  411cdb:	push   edi
  411cdc:	cmp    dl,ah
  411cde:	js     0x411d21
  411ce0:	repz push edi
  411ce2:	neg    ah
  411ce4:	mov    DWORD PTR [edi+0x4e76b363],ebp
  411cea:	sti    
  411ceb:	xchg   esp,eax
  411cec:	in     al,dx
  411ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cee:	mov    dl,BYTE PTR [edx-0x7bddd480]
  411cf4:	enter  0x6078,0x95
  411cf8:	out    0xb2,eax
  411cfa:	xchg   edx,eax
  411cfb:	pop    ebx
  411cfc:	arpl   dx,si
  411cfe:	test   bl,bl
  411d00:	into   
  411d01:	and    ch,BYTE PTR [edi-0x65711c91]
  411d07:	pop    es
  411d08:	and    al,0xf2
  411d0a:	push   di
  411d0c:	add    BYTE PTR [edi-0x61],0x8
  411d10:	mov    cl,BYTE PTR [edx]
  411d12:	mov    esp,0xdbc33465
  411d17:	push   ebx
  411d18:	enter  0x825f,0x72
  411d1c:	mul    DWORD PTR [ebx+0x3ace66cf]
  411d22:	into   
  411d23:	xor    edi,DWORD PTR [ecx-0x33cc2720]
  411d29:	iret   
  411d2a:	sbb    BYTE PTR [edx+0x7ab4c9cd],ah
  411d30:	ret    
  411d31:	daa    
  411d32:	(bad)  
  411d33:	push   esi
  411d34:	jmp    0x32f01a54
  411d39:	loop   0x411d62
  411d3b:	pop    edx
  411d3c:	mov    al,0xf0
  411d3e:	test   eax,0xb3910c98
  411d43:	lods   al,BYTE PTR ds:[esi]
  411d44:	ror    BYTE PTR [edi+ecx*4],1
  411d47:	add    BYTE PTR [ecx],bh
  411d49:	mov    al,ds:0x8d46a64a
  411d4e:	out    0x86,al
  411d50:	out    dx,al
  411d51:	cmp    esi,DWORD PTR [ebx+0x17]
  411d54:	ins    BYTE PTR es:[edi],dx
  411d55:	shl    ecx,cl
  411d57:	out    0xda,al
  411d59:	mov    DWORD PTR [eiz*8-0x562b99f8],edi
  411d60:	clc    
  411d61:	ffreep st(2)
  411d63:	push   eax
  411d64:	or     BYTE PTR [eax-0x35],al
  411d67:	(bad)  
  411d68:	out    dx,al
  411d69:	push   DWORD PTR [ebx+0x2b]
  411d6c:	retf   0x1c04
  411d6f:	adc    al,0xe3
  411d71:	jle    0x411d93
  411d73:	fdiv   DWORD PTR [ebp-0x71825473]
  411d79:	imul   ecx,ecx,0xffffffc0
  411d7c:	dec    esi
  411d7d:	dec    ecx
  411d7e:	std    
  411d7f:	dec    eax
  411d80:	sub    DWORD PTR [edi-0x6ef0a7b6],ebp
  411d86:	sbb    ebx,DWORD PTR [ecx+0x118168d8]
  411d8c:	inc    ecx
  411d8d:	clc    
  411d8e:	cmp    eax,0x741255ee
  411d93:	xor    DWORD PTR [ecx],0xfffffffa
  411d96:	(bad)  
  411d97:	out    dx,eax
  411d98:	cdq    
  411d99:	mov    ch,ch
  411d9b:	mov    eax,ds:0x2a218060
  411da0:	mov    DWORD PTR [ebp+0x41],edx
  411da3:	sub    al,0x31
  411da5:	inc    ebp
  411da6:	out    dx,eax
  411da7:	mov    cl,0x60
  411da9:	xchg   ebp,eax
  411daa:	cdq    
  411dab:	loope  0x411d9e
  411dad:	sbb    al,0xb4
  411daf:	pop    edx
  411db0:	push   edi
  411db1:	and    al,0x13
  411db3:	jmp    0x9b7ece55
  411db8:	sub    DWORD PTR [esi+ecx*4],edi
  411dbb:	call   0x77a41102
  411dc0:	lods   eax,DWORD PTR ds:[esi]
  411dc1:	dec    ebp
  411dc2:	test   edi,eax
  411dc4:	fstp   DWORD PTR [ebp+0x3cd9862f]
  411dca:	dec    ebp
  411dcb:	bound  edi,QWORD PTR [ebx-0x57e3dfae]
  411dd1:	mov    ah,0xae
  411dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd4:	lds    edi,FWORD PTR [eax+ecx*4+0x691137f1]
  411ddb:	into   
  411ddc:	ja     0x411e0b
  411dde:	adc    dh,BYTE PTR [edi+0x1f]
  411de1:	into   
  411de2:	mov    dl,0xb
  411de4:	repnz sbb ah,ch
  411de7:	xor    ax,0xb529
  411deb:	ds ds pop es
  411dee:	outs   dx,BYTE PTR ds:[esi]
  411def:	shr    DWORD PTR [ebp-0x55882cf0],0xec
  411df6:	clc    
  411df7:	sub    BYTE PTR [eax],al
  411df9:	ja     0x411d86
  411dfb:	xchg   esi,eax
  411dfc:	ret    
  411dfd:	dec    edi
  411dfe:	sub    DWORD PTR [ecx],esi
  411e00:	sar    dh,1
  411e02:	ror    BYTE PTR [esp+eiz*2-0x2a],1
  411e06:	sub    eax,0xca29ef42
  411e0b:	xchg   edi,eax
  411e0c:	mov    DWORD PTR [ebp+0x7556e84b],esp
  411e12:	sahf   
  411e13:	ins    DWORD PTR es:[edi],dx
  411e14:	(bad)
  411e18:	ret    
  411e19:	add    DWORD PTR [ecx-0x1800aad4],0x726e5df1
  411e23:	aad    0x64
  411e25:	xor    BYTE PTR [eax+edi*4+0x1c73de07],0xa4
  411e2d:	adc    eax,0xbb13cdd
  411e32:	cld    
  411e33:	cdq    
  411e34:	sub    ebx,DWORD PTR [edx]
  411e36:	xor    ah,dl
  411e38:	dec    edx
  411e39:	cmp    DWORD PTR [edi+0x6a],0xe7e2af1c
  411e40:	jge    0x411e2d
  411e42:	sar    BYTE PTR [esi+ebp*2],cl
  411e45:	(bad)  
  411e46:	inc    edi
  411e47:	(bad)  
  411e49:	xor    esi,DWORD PTR [ecx-0x25]
  411e4c:	sbb    DWORD PTR [edi+0x22],eax
  411e4f:	pop    esp
  411e50:	arpl   WORD PTR [edi],sp
  411e52:	xchg   esi,eax
  411e53:	xchg   ecx,eax
  411e54:	mov    ah,0x4
  411e56:	test   BYTE PTR [ecx-0x46],cl
  411e59:	das    
  411e5a:	lods   eax,DWORD PTR ds:[esi]
  411e5b:	shl    dh,1
  411e5d:	sbb    eax,ebx
  411e5f:	xchg   ebp,eax
  411e60:	inc    edi
  411e61:	cmp    al,0xac
  411e63:	scas   al,BYTE PTR es:[edi]
  411e64:	inc    eax
  411e65:	jb     0x411e8f
  411e67:	pusha  
  411e68:	push   edi
  411e69:	pusha  
  411e6a:	adc    eax,0x170764d0
  411e6f:	sbb    al,BYTE PTR [esi-0x56]
  411e72:	push   edi
  411e73:	lock mov ds:0x71f7f064,eax
  411e79:	daa    
  411e7a:	int    0xc0
  411e7c:	mov    al,ds:0xd8c31910
  411e81:	jns    0x411e18
  411e83:	rol    esp,cl
  411e85:	cmp    edi,DWORD PTR [ebp-0x7636ea0]
  411e8b:	jno    0x411e43
  411e8d:	pop    esi
  411e8e:	out    dx,eax
  411e8f:	pop    edi
  411e90:	pop    edi
  411e91:	dec    ebx
  411e92:	(bad)  
  411e93:	outs   dx,DWORD PTR ds:[esi]
  411e94:	jns    0x411e7c
  411e96:	rcl    BYTE PTR ds:0x8b39fea,1
  411e9c:	cmp    DWORD PTR [ebx+0x293cafeb],ecx
  411ea2:	addr16 mov ds:0xea9c,eax
  411ea6:	in     al,0x8f
  411ea8:	mov    ah,0x1
  411eaa:	inc    ebp
  411eab:	fnsave [edx+0x56]
  411eae:	int3   
  411eaf:	retf   0xfb2c
  411eb2:	(bad)  
  411eb3:	int3   
  411eb4:	ret    0x408a
  411eb7:	or     DWORD PTR [eax+ebp*2-0x59b4ea06],0x6c
  411ebf:	es dec ebx
  411ec1:	and    BYTE PTR [edi],0xda
  411ec4:	jmp    0x473cb4f7
  411ec9:	dec    edx
  411eca:	ret    
  411ecb:	ret    0x5f0
  411ece:	jecxz  0x411ef8
  411ed0:	shl    BYTE PTR [ebp+0x2fdcdf7b],0x51
  411ed7:	mov    esp,esi
  411ed9:	cdq    
  411eda:	dec    eax
  411edb:	add    dl,cl
  411edd:	inc    eax
  411ede:	mov    al,0xd7
  411ee0:	adc    BYTE PTR [esi],dh
  411ee2:	cs (bad) 
  411ee4:	or     DWORD PTR [edx+ecx*1-0x420603de],0x8bea87d1
  411eef:	mov    eax,ds:0x96e378cb
  411ef4:	rol    DWORD PTR [esi],cl
  411ef6:	imul   BYTE PTR gs:[edi]
  411ef9:	lea    ebx,[esi-0x5]
  411efc:	add    DWORD PTR [ebx+ebp*1-0x80],esi
  411f00:	xlat   BYTE PTR ds:[ebx]
  411f01:	mov    ebx,0xdb665fd2
  411f06:	jns    0x411edc
  411f08:	stos   BYTE PTR es:[edi],al
  411f09:	sbb    eax,0xe4fa5672
  411f0e:	ret    
  411f0f:	daa    
  411f10:	xor    al,0xeb
  411f12:	stos   DWORD PTR es:[edi],eax
  411f13:	mov    ds:0x1a55eb80,eax
  411f18:	xor    bh,dl
  411f1a:	jo     0x411e9e
  411f1c:	sti    
  411f1d:	loope  0x411ee7
  411f1f:	dec    ebp
  411f20:	jbe    0x411f29
  411f22:	and    cl,BYTE PTR [ecx+0x2788dcfa]
  411f28:	xchg   esi,eax
  411f29:	push   ecx
  411f2a:	jmp    0x8d80cfb3
  411f2f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411f31:	inc    BYTE PTR [ecx+esi*1-0x57f1a55e]
  411f38:	es inc ebx
  411f3a:	cdq    
  411f3b:	jecxz  0x411f94
  411f3d:	(bad)  
  411f3e:	std    
  411f3f:	cmc    
  411f40:	add    edx,DWORD PTR [ecx]
  411f42:	repnz cmp ebp,esp
  411f45:	dec    ecx
  411f46:	cwde   
  411f47:	imul   edx,DWORD PTR [ebx+ebx*1+0x20],0x6e92400c
  411f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f50:	js     0x411f7c
  411f52:	sbb    esp,DWORD PTR [ecx-0x7906c7f3]
  411f58:	sub    BYTE PTR [ecx-0x7705955],bl
  411f5e:	dec    eax
  411f5f:	push   0xffffff86
  411f61:	out    0x5d,eax
  411f63:	inc    esp
  411f64:	(bad)
  411f67:	in     eax,0x59
  411f69:	mov    al,ds:0x892817d0
  411f6e:	test   dl,dl
  411f70:	inc    eax
  411f71:	mov    dh,0x86
  411f73:	ficomp DWORD PTR [edi-0x65]
  411f76:	sar    DWORD PTR [eax+0x15],1
  411f79:	pop    ds
  411f7a:	loop   0x411fdb
  411f7c:	mov    al,0xe7
  411f7e:	pop    es
  411f7f:	jmp    0xb88a:0x3f731194
  411f86:	in     al,0x11
  411f88:	cmp    al,0x16
  411f8a:	jo     0x411f2e
  411f8c:	(bad)  
  411f8d:	add    al,BYTE PTR [ecx-0x7ef3ae36]
  411f93:	out    dx,eax
  411f94:	stos   DWORD PTR es:[edi],eax
  411f95:	mov    edx,0xbcf422f4
  411f9a:	adc    BYTE PTR [esi-0x1c],ah
  411f9d:	jge    0x411f52
  411f9f:	push   cs
  411fa0:	fisub  DWORD PTR [eax-0x64d605a1]
  411fa6:	xchg   ebp,eax
  411fa7:	and    ah,BYTE PTR [ebp+0x4b]
  411faa:	jp     0x411fc8
  411fac:	cmp    BYTE PTR [edi+0x2c1e95ee],dl
  411fb2:	mov    esi,0xdf5b342
  411fb7:	mov    BYTE PTR [esi-0x4f0090a1],dl
  411fbd:	stos   BYTE PTR es:[edi],al
  411fbe:	sbb    ah,BYTE PTR [ebx-0x3a]
  411fc1:	das    
  411fc2:	sti    
  411fc3:	test   BYTE PTR [ebp-0x706eb0fb],0x2c
  411fca:	push   esp
  411fcb:	dec    eax
  411fcc:	add    dl,BYTE PTR [esi-0x1dc041b3]
  411fd2:	arpl   WORD PTR [edi+0x132174b1],dx
  411fd8:	(bad)  
  411fd9:	es into 
  411fdb:	out    0x7d,al
  411fdd:	arpl   ax,ax
  411fdf:	push   0x1f
  411fe1:	jecxz  0x411f63
  411fe3:	ins    BYTE PTR es:[edi],dx
  411fe4:	mov    dl,0x9
  411fe6:	mov    esp,0xddc6b067
  411feb:	imul   ebp,DWORD PTR [ebx+0x242ef11e],0xffffff92
  411ff2:	retf   
  411ff3:	mov    esp,DWORD PTR [esi-0x230e7c78]
  411ff9:	ror    BYTE PTR [edx+0x6b776a95],1
  411fff:	jns    0x411fe2
  412001:	int3   
  412002:	inc    esi
  412003:	idiv   BYTE PTR [edi+0x47a739da]
  412009:	sbb    DWORD PTR ds:0x85682a97,eax
  41200f:	jmp    0x412029
  412011:	(bad)  
  412012:	stc    
  412013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412014:	and    al,0x3c
  412016:	jmp    0x3ba6c5ce
  41201b:	repz sbb ebp,ecx
  41201e:	jp     0x411fd1
  412020:	mov    BYTE PTR [eax+0x3c],cl
  412023:	mov    ecx,0x7f2111ba
  412028:	pop    ebp
  412029:	imul   esp,DWORD PTR [ebx-0x2196b4b5],0x2f
  412030:	xlat   BYTE PTR ds:[ebx]
  412031:	jae    0x4120b1
  412033:	cmp    al,0xe3
  412035:	push   eax
  412036:	fwait
  412037:	mov    ecx,0x7b177487
  41203c:	aas    
  41203d:	dec    edi
  41203e:	and    BYTE PTR [ebp+0x68],ah
  412041:	mov    DWORD PTR [ebx-0x89723c9],ebx
  412047:	mov    bh,0xe2
  412049:	adc    BYTE PTR [eax-0x50b36825],dh
  41204f:	stos   BYTE PTR es:[edi],al
  412050:	out    dx,eax
  412051:	jge    0x412099
  412053:	sub    DWORD PTR [ecx],ebp
  412055:	xchg   BYTE PTR [esi-0x3a847748],dl
  41205b:	outs   dx,BYTE PTR ds:[esi]
  41205c:	push   ebx
  41205d:	clc    
  41205e:	cmp    BYTE PTR [ebx-0x196acdbd],al
  412064:	xor    al,0x61
  412066:	sahf   
  412067:	(bad)  
  412068:	fdivr  DWORD PTR cs:[edi]
  41206b:	add    al,0xac
  41206d:	sbb    esi,ebx
  41206f:	ret    
  412070:	cmp    ebx,DWORD PTR [esi+0x5ab000f8]
  412076:	or     ebx,DWORD PTR [edx+0x73cd7f28]
  41207c:	imul   ebx,DWORD PTR [ebx+0x498e5c86],0x9f75985d
  412086:	rcr    BYTE PTR [eax],cl
  412088:	and    edi,DWORD PTR [edx+0xa]
  41208b:	test   DWORD PTR ds:0x83f83fb4,0xa417c650
  412095:	clc    
  412096:	scas   al,BYTE PTR es:[edi]
  412097:	xchg   DWORD PTR [ebx-0x1b],esp
  41209a:	add    DWORD PTR [eax],esi
  41209c:	stc    
  41209d:	cmc    
  41209e:	push   ebx
  41209f:	fsubr  QWORD PTR [esi+0x57]
  4120a2:	fadd   QWORD PTR [ebp+0x39]
  4120a5:	mov    ebx,0xd3e09752
  4120aa:	xchg   cl,al
  4120ac:	dec    esp
  4120ad:	sub    eax,DWORD PTR [ebx]
  4120af:	test   BYTE PTR [edx],bh
  4120b1:	ud0    edx,DWORD PTR [ebx-0x55a276b0]
  4120b8:	mov    bh,0xb1
  4120ba:	sub    DWORD PTR [esi-0x68],0xffffffa1
  4120be:	test   eax,0x7e77b249
  4120c3:	add    al,0x7b
  4120c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c6:	out    dx,al
  4120c7:	mov    esp,0x34e4144b
  4120cc:	retf   
  4120cd:	or     ecx,DWORD PTR [eax-0x534f9a17]
  4120d3:	dec    edi
  4120d4:	addr16 pop eax
  4120d6:	mov    edi,0x24c5a662
  4120db:	jg     0x412132
  4120dd:	test   BYTE PTR [edi+eax*8],0x94
  4120e1:	and    BYTE PTR [ebp+0x4092d911],bl
  4120e7:	pop    ebp
  4120e8:	inc    edi
  4120e9:	push   0xffffff86
  4120eb:	or     ebp,DWORD PTR [ecx+edx*2-0x80]
  4120ef:	(bad)  
  4120f0:	mov    ebx,0x5c142f12
  4120f5:	(bad)  
  4120f6:	stc    
  4120f7:	retf   0xeed6
  4120fa:	mov    edi,0xb50e4eb6
  4120ff:	bound  ebp,QWORD PTR [ebx]
  412101:	inc    eax
  412102:	cs into 
  412104:	mov    al,0x8c
  412106:	and    bl,ah
  412108:	jecxz  0x41209f
  41210a:	xchg   ebp,eax
  41210b:	add    DWORD PTR [edi],esi
  41210d:	pusha  
  41210e:	push   DWORD PTR [edi]
  412110:	fcomp  QWORD PTR [edi+0x445f0e9e]
  412116:	mov    ds:0xdf45d3cf,eax
  41211b:	xchg   edi,eax
  41211c:	push   ebx
  41211d:	fld    st(7)
  41211f:	mov    ds:0x3464f154,eax
  412124:	loop   0x4120f6
  412126:	adc    DWORD PTR [esi],ecx
  412128:	in     al,0xca
  41212a:	or     eax,0xe990617e
  41212f:	dec    edi
  412130:	add    edi,DWORD PTR [ecx-0x1f]
  412133:	das    
  412134:	and    dh,ch
  412136:	xlat   BYTE PTR ds:[ebx]
  412137:	(bad)  
  412138:	in     al,0x58
  41213a:	scas   eax,DWORD PTR es:[edi]
  41213b:	dec    ebp
  41213c:	or     BYTE PTR [eax],0x17
  41213f:	(bad)  
  412140:	ret    
  412141:	lock sub al,0x1d
  412144:	retf   
  412145:	fcomi  st,st(0)
  412147:	(bad)  [ebx]
  412149:	scas   eax,DWORD PTR es:[edi]
  41214a:	stos   BYTE PTR es:[edi],al
  41214b:	pop    es
  41214c:	push   0xf24379c9
  412151:	dec    edi
  412152:	pushf  
  412153:	cmc    
  412154:	dec    ebp
  412155:	sub    ch,BYTE PTR [esi+ebp*1]
  412158:	popf   
  412159:	(bad)  
  41215a:	sbb    eax,0x548213ac
  41215f:	cli    
  412160:	mov    ecx,DWORD PTR [ecx+ebp*8-0x6b33f6c]
  412167:	das    
  412168:	cmp    cl,BYTE PTR [eax+ebp*8+0x6b65a490]
  41216f:	and    DWORD PTR [ebx+0x2376e521],0xffffff92
  412176:	xor    edi,esp
  412178:	mov    ds:0x194324f8,eax
  41217e:	jns    0x412141
  412180:	add    BYTE PTR [ebx],dh
  412182:	mov    eax,ds:0xd030ac3c
  412187:	in     eax,0xe9
  412189:	jns    0x412115
  41218b:	lods   eax,DWORD PTR ds:[esi]
  41218c:	lahf   
  41218d:	or     ch,ch
  41218f:	test   BYTE PTR [ecx],ch
  412191:	cmp    edx,DWORD PTR [edx-0x2bd83fa]
  412197:	or     BYTE PTR ds:0xc053b595,bh
  41219d:	xor    DWORD PTR cs:[ecx+0x373c4738],ebp
  4121a4:	xor    ecx,ebx
  4121a6:	pop    esi
  4121a7:	pop    esi
  4121a8:	repnz push es
  4121aa:	cmp    DWORD PTR [eax],0x448985c8
  4121b0:	push   ss
  4121b1:	daa    
  4121b2:	dec    edi
  4121b3:	mov    ds:0xd679dc9a,al
  4121b8:	inc    ebp
  4121b9:	sub    cl,BYTE PTR [ecx+esi*2]
  4121bc:	sbb    esi,DWORD PTR ds:0xa773e839
  4121c2:	push   esi
  4121c3:	push   es
  4121c4:	mov    DWORD PTR ss:[ebx+0x469541ad],ecx
  4121cb:	stc    
  4121cc:	xchg   BYTE PTR [ecx+0x7ea6cf9b],cl
  4121d2:	xchg   ebx,eax
  4121d3:	fadd   QWORD PTR [esi]
  4121d5:	pop    es
  4121d6:	hlt    
  4121d7:	xchg   esp,eax
  4121d8:	sbb    ebp,esi
  4121da:	sub    ebx,esi
  4121dc:	add    DWORD PTR [edi-0x14],eax
  4121df:	and    ebx,DWORD PTR [edi-0x7b45ec5]
  4121e5:	in     al,0xea
  4121e7:	sbb    eax,0x193a7756
  4121ec:	mov    esp,0x93204e61
  4121f1:	sbb    esp,0x5d45877
  4121f7:	mov    edx,0x5988f662
  4121fc:	test   eax,0xcc12e774
  412201:	and    eax,0xa9d1bd2c
  412206:	das    
  412207:	sub    eax,DWORD PTR [esi+0x36]
  41220a:	jecxz  0x412265
  41220c:	dec    esp
  41220d:	jne    0x41224b
  41220f:	pop    esi
  412210:	pop    esp
  412211:	sub    ebx,DWORD PTR [edi]
  412213:	test   eax,0x3f0c7734
  412218:	lahf   
  412219:	out    0x5a,eax
  41221b:	fisubr WORD PTR ds:0xa8d3c598
  412221:	mov    dl,0x40
  412223:	mov    ds:0x7b808c39,eax
  412228:	not    BYTE PTR [ecx-0x6aea711d]
  41222e:	push   ebx
  41222f:	inc    esp
  412230:	scas   eax,DWORD PTR es:[edi]
  412231:	dec    ebp
  412232:	cmp    BYTE PTR ds:0xe29a921a,dh
  412238:	cmp    al,0x95
  41223a:	scas   eax,DWORD PTR es:[edi]
  41223b:	pop    edi
  41223c:	cdq    
  41223d:	mov    ebp,0x651d9a85
  412242:	push   0xdb888ec7
  412247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412248:	mov    cl,0x3e
  41224a:	(bad)  
  41224b:	push   0xffffffd4
  41224d:	add    eax,0x92bcf2
  412252:	(bad)  
  412253:	ja     0x41229c
  412255:	(bad)  
  412256:	xor    al,0x19
  412258:	(bad)  
  412259:	fidivr WORD PTR [ebp-0x76]
  41225c:	lds    esp,FWORD PTR [esi+0x701d3e62]
  412262:	jns    0x412211
  412264:	mov    ch,0x70
  412266:	shl    BYTE PTR [eax],1
  412268:	nop
  412269:	mov    eax,0x7cf7f41a
  41226e:	inc    edx
  41226f:	shr    BYTE PTR [ebx],cl
  412271:	jne    0x412297
  412273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412274:	cs pushf 
  412276:	in     al,0x23
  412278:	dec    DWORD PTR [edi-0x62]
  41227b:	sub    eax,0x864b0a4c
  412280:	adc    BYTE PTR [ecx-0x662b0b73],0x99
  412287:	scas   eax,DWORD PTR es:[edi]
  412288:	imul   ecx,ecx,0x7be93ac2
  41228e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41228f:	outs   dx,DWORD PTR ds:[esi]
  412290:	leave  
  412291:	and    ebp,eax
  412293:	shr    BYTE PTR [ebx-0x13],0xc9
  412297:	in     eax,0xd
  412299:	and    ebp,esi
  41229b:	sub    BYTE PTR [edi-0x642f1337],ah
  4122a1:	in     eax,0x49
  4122a3:	iret   
  4122a4:	call   0x8e5be873
  4122a9:	sub    ecx,DWORD PTR [esi]
  4122ab:	leave  
  4122ac:	mov    ebp,0x2c093a2b
  4122b1:	aad    0x8e
  4122b3:	sub    eax,0x801dd4b0
  4122b8:	pop    ecx
  4122b9:	iret   
  4122ba:	in     eax,0x3d
  4122bc:	mov    eax,0x220fc31b
  4122c1:	addr16 jl 0x412271
  4122c4:	stos   BYTE PTR es:[edi],al
  4122c5:	cmc    
  4122c6:	fs repnz xor al,0x88
  4122ca:	pop    edi
  4122cb:	mov    bl,0x94
  4122cd:	cwde   
  4122ce:	and    DWORD PTR [edi-0x40],eax
  4122d1:	cmp    eax,0x6a58b987
  4122d6:	pop    ebp
  4122d7:	aas    
  4122d8:	and    DWORD PTR [ebx],edx
  4122da:	dec    edx
  4122db:	xlat   BYTE PTR ds:[ebx]
  4122dc:	retf   0xb1
  4122df:	scas   eax,DWORD PTR es:[edi]
  4122e0:	xor    esp,DWORD PTR [ebp+0x5]
  4122e3:	repz mov bh,0x9d
  4122e6:	cld    
  4122e7:	sub    eax,0x644ddc58
  4122ec:	and    eax,0x985d7cf0
  4122f1:	mov    cl,BYTE PTR [esi]
  4122f3:	into   
  4122f4:	pop    edx
  4122f5:	(bad)  
  4122f6:	sbb    ah,BYTE PTR [esi]
  4122f8:	shl    edx,0x81
  4122fb:	popf   
  4122fc:	in     al,0xdf
  4122fe:	and    edx,DWORD PTR [esi-0x2a]
  412301:	fistp  QWORD PTR [esi]
  412303:	(bad)  
  412305:	fucomp st(3)
  412307:	dec    edi
  412308:	dec    edx
  412309:	in     al,0x89
  41230b:	cli    
  41230c:	jmp    0x9de5:0xe7819ef2
  412313:	jl     0x412393
  412315:	mov    bh,0x24
  412317:	add    BYTE PTR [edx-0x35],dl
  41231a:	mov    bl,0x5c
  41231c:	rol    esp,0x2e
  41231f:	push   edi
  412320:	adc    DWORD PTR ds:0x110777f4,edi
  412326:	inc    ecx
  412327:	in     eax,dx
  412328:	test   eax,0xb2591be3
  41232d:	es mov ebx,0x4916e213
  412333:	fcmovne st,st(7)
  412335:	xor    esp,DWORD PTR [ebx-0x6f]
  412338:	xchg   ebp,eax
  412339:	inc    eax
  41233a:	mov    ah,0xc0
  41233c:	ds mov dl,0x4
  41233f:	aaa    
  412340:	sub    DWORD PTR [edx+0x5a],edi
  412343:	retf   
  412344:	xor    ecx,DWORD PTR [edx]
  412346:	add    esp,edx
  412348:	xchg   esp,eax
  412349:	adc    DWORD PTR [ebp+0x14bcb137],edi
  41234f:	adc    al,0xd8
  412351:	jle    0x412342
  412353:	mov    es,WORD PTR ds:0x319794ac
  412359:	push   edx
  41235a:	inc    ebp
  41235b:	jle    0x4123d9
  41235d:	inc    esi
  41235e:	and    eax,0x5d5199a2
  412363:	dec    esi
  412364:	mov    ebx,0xc2d6ba37
  412369:	addr16 jl 0x412382
  41236c:	mov    eax,0x736f035b
  412371:	sbb    dh,ch
  412373:	inc    edi
  412374:	bound  ecx,QWORD PTR [ecx-0x2]
  412377:	dec    esp
  412378:	mov    eax,ds:0xeaef6b
  41237d:	jno    0x4123b9
  41237f:	loope  0x41236f
  412381:	adc    esp,edi
  412383:	popa   
  412384:	fidiv  DWORD PTR [edx]
  412386:	outs   dx,DWORD PTR ds:[esi]
  412387:	iret   
  412388:	adc    eax,0xb083912a
  41238d:	xchg   DWORD PTR [edx],esi
  41238f:	mov    dh,BYTE PTR [ecx]
  412391:	cli    
  412392:	and    DWORD PTR [esi+0x1efeb0e5],ebx
  412398:	call   0x401809b5
  41239d:	and    al,0x71
  41239f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123a0:	retf   
  4123a1:	mov    edi,edi
  4123a3:	push   cs
  4123a4:	imul   ecx,DWORD PTR [edx-0x1a],0xffffffd9
  4123a8:	sub    eax,0x839c99b
  4123ad:	jmp    0x4123ad
  4123af:	idiv   al
  4123b1:	es mov ebp,0x94d468f0
  4123b7:	mov    BYTE PTR [esi+0x7b],ch
  4123ba:	scas   al,BYTE PTR es:[edi]
  4123bb:	ja     0x41235f
  4123bd:	ins    DWORD PTR es:[edi],dx
  4123be:	and    ecx,DWORD PTR [edx]
  4123c0:	cdq    
  4123c1:	push   cs
  4123c2:	inc    edx
  4123c3:	sbb    BYTE PTR [ecx],cl
  4123c5:	mov    ebx,0x40690c2f
  4123ca:	dec    ebx
  4123cb:	mov    esp,0x97fe3d85
  4123d0:	retf   
  4123d1:	jnp    0x412395
  4123d3:	out    dx,eax
  4123d4:	call   0xe2bb3a66
  4123d9:	sbb    DWORD PTR [edx+0x3a],0x7b456e44
  4123e0:	jb     0x41238f
  4123e2:	stos   BYTE PTR es:[di],al
  4123e4:	stc    
  4123e5:	mov    ds:0xfa13ab68,al
  4123ea:	dec    ecx
  4123eb:	pop    ebx
  4123ec:	stc    
  4123ed:	ror    ah,1
  4123ef:	call   DWORD PTR [edx]
  4123f1:	pop    esp
  4123f2:	sub    eax,DWORD PTR [ebp+0x23435fe6]
  4123f8:	ret    
  4123f9:	stos   DWORD PTR es:[edi],eax
  4123fa:	fldcw  WORD PTR [ebp+0x4e5266eb]
  412400:	cmp    bh,BYTE PTR [ecx-0x4cb3589f]
  412406:	mov    ch,0x3f
  412408:	sbb    bl,dl
  41240a:	jae    0x41245f
  41240c:	mov    esi,0x1e08024d
  412411:	fnop   
  412413:	xchg   esp,eax
  412414:	jmp    0x41239f
  412416:	sbb    al,dl
  412418:	fidiv  DWORD PTR [edx-0xcf03d0b]
  41241e:	clc    
  41241f:	iret   
  412420:	test   BYTE PTR [edi],al
  412422:	dec    esp
  412423:	scas   eax,DWORD PTR es:[edi]
  412424:	mov    al,ds:0xe0459d5d
  412429:	loop   0x4123e3
  41242b:	push   ecx
  41242c:	mov    edx,0x28e316db
  412431:	cmp    BYTE PTR [ecx],ah
  412433:	outs   dx,BYTE PTR ds:[esi]
  412434:	jno    0x4123cd
  412436:	scas   eax,DWORD PTR es:[edi]
  412437:	or     DWORD PTR [edx+0x3d],eax
  41243a:	or     bl,BYTE PTR [ecx-0x58]
  41243d:	cli    
  41243e:	mov    ecx,ebp
  412440:	adc    eax,0xa8fb5fc
  412445:	shl    eax,cl
  412447:	pop    ebx
  412448:	add    DWORD PTR [ebx],esi
  41244a:	(bad)  
  41244b:	xchg   edi,eax
  41244c:	push   eax
  41244d:	cmp    DWORD PTR [eax+edx*8+0x72],esi
  412451:	mov    ds:0xe499a10c,eax
  412456:	xor    eax,0x8d6e8aa8
  41245b:	scas   al,BYTE PTR es:[edi]
  41245c:	jecxz  0x41248d
  41245e:	xchg   edx,eax
  41245f:	fs sbb ebx,ecx
  412462:	inc    ebx
  412463:	mov    bh,BYTE PTR [esi]
  412465:	pop    ds
  412466:	xchg   BYTE PTR [esi],dh
  412468:	mov    esi,0xd42f1c3b
  41246d:	popf   
  41246e:	adc    DWORD PTR [edi],eax
  412470:	add    cl,BYTE PTR [ebx-0x4a309fef]
  412476:	adc    BYTE PTR es:[eax-0x6eb6bc6d],dh
  41247d:	xor    esi,0x70
  412480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412481:	pop    esp
  412482:	push   0x456c890
  412487:	popa   
  412488:	leave  
  412489:	retf   0x7e25
  41248c:	arpl   WORD PTR [esi+eax*8+0x53e83658],si
  412493:	jae    0x4124ec
  412495:	daa    
  412496:	outs   dx,BYTE PTR ds:[esi]
  412497:	and    DWORD PTR [ebx+0x11],esp
  41249a:	(bad)
  41249e:	test   eax,0x59e853ed
  4124a3:	test   al,0xc7
  4124a5:	xchg   edi,eax
  4124a6:	adc    dh,cl
  4124a8:	fmul   st,st(5)
  4124aa:	lock mov dh,0xf2
  4124ad:	jp     0x412471
  4124af:	bnd js 0x41245e
  4124b2:	daa    
  4124b3:	jb     0x41252d
  4124b5:	cmp    bl,BYTE PTR [ebx+ebx*2-0x22]
  4124b9:	cli    
  4124ba:	inc    ebp
  4124bb:	xchg   ebx,eax
  4124bc:	je     0x41250c
  4124be:	or     DWORD PTR [edx+edx*4],esi
  4124c1:	inc    DWORD PTR [edi-0x4e3e1f9d]
  4124c7:	add    DWORD PTR [ecx],edi
  4124c9:	sbb    DWORD PTR [ebp+esi*2+0x72],ebp
  4124cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ce:	xchg   ebx,eax
  4124cf:	enter  0xec43,0x36
  4124d3:	pop    ds
  4124d4:	pop    esp
  4124d5:	test   BYTE PTR [esi+0xf],ah
  4124d8:	ja     0x412493
  4124da:	cmp    esp,ebp
  4124dc:	xchg   esp,eax
  4124dd:	enter  0x7e38,0xa5
  4124e1:	jge    0x41251d
  4124e3:	inc    edi
  4124e4:	adc    al,0x3e
  4124e6:	sbb    al,0x2d
  4124e8:	sbb    DWORD PTR ds:0x433e4565,eax
  4124ee:	stc    
  4124ef:	sbb    esp,ecx
  4124f1:	out    0xdf,eax
  4124f3:	loope  0x41254e
  4124f5:	enter  0xf56e,0x59
  4124f9:	sbb    ecx,edx
  4124fb:	sub    al,0xe3
  4124fd:	outs   dx,DWORD PTR ds:[esi]
  4124fe:	das    
  4124ff:	sub    cl,cl
  412501:	arpl   WORD PTR [di+0x105a],dx
  412506:	mov    bl,0xc9
  412508:	pop    ss
  412509:	mov    al,ds:0x5aee7223
  41250e:	test   al,0xa
  412510:	xchg   esp,eax
  412511:	ror    BYTE PTR [edi],1
  412513:	or     eax,0xbbc9d26c
  412518:	and    ecx,DWORD PTR [ebp+0x5ed61c91]
  41251e:	ds in  eax,0x45
  412521:	inc    ebp
  412522:	add    edx,DWORD PTR [edx-0x5b]
  412525:	call   0xa5ec:0x89c86173
  41252c:	out    dx,eax
  41252d:	sbb    esp,edi
  41252f:	pop    es
  412530:	jbe    0x412520
  412532:	jno    0x41255f
  412534:	gs jnp 0x41256b
  412537:	ins    BYTE PTR es:[edi],dx
  412538:	into   
  412539:	and    DWORD PTR [edx-0x5a487a0],ecx
  41253f:	into   
  412540:	sbb    al,0xcf
  412542:	cmp    DWORD PTR [edi+ebx*4],edx
  412545:	jnp    0x412506
  412547:	les    eax,FWORD PTR [edi-0x3f93453d]
  41254d:	xor    BYTE PTR [ebx+0x795783aa],bh
  412553:	dec    ebp
  412554:	sub    esp,DWORD PTR [esi+0x64528f21]
  41255a:	stc    
  41255b:	xchg   ebx,eax
  41255c:	ret    0x23ab
  41255f:	or     DWORD PTR [eax+ecx*8+0x40],0x55ee3064
  412567:	and    ebp,edi
  412569:	cmp    dh,bh
  41256b:	mov    cl,0xd9
  41256d:	test   bl,bl
  41256f:	lods   al,BYTE PTR ds:[esi]
  412570:	xor    esi,esp
  412572:	add    BYTE PTR [esi+esi*4+0xe7f29d4],dl
  412579:	pop    esp
  41257a:	sbb    al,0x25
  41257c:	mov    WORD PTR [esi+0x34820a86],es
  412582:	std    
  412583:	or     ebx,esi
  412585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412586:	fist   WORD PTR [ebx-0x2990fae6]
  41258c:	jecxz  0x412514
  41258e:	popa   
  41258f:	jb     0x41255b
  412591:	xor    ecx,esp
  412593:	mov    ds:0x2b35394e,eax
  412598:	jnp    0x412529
  41259a:	and    edx,DWORD PTR [ecx+ecx*1-0x2f]
  41259e:	xchg   ebp,eax
  41259f:	aam    0xd
  4125a1:	out    dx,eax
  4125a2:	mov    eax,0x1752357f
  4125a7:	scas   eax,DWORD PTR es:[edi]
  4125a8:	and    ebx,eax
  4125aa:	inc    eax
  4125ab:	rcl    DWORD PTR [edi+0x7a],1
  4125ae:	pop    ecx
  4125af:	rcr    DWORD PTR [ecx+0x15],1
  4125b2:	cs mov bl,0xaf
  4125b5:	sub    BYTE PTR ds:0x9477c0f8,0x96
  4125bc:	inc    esi
  4125bd:	ins    DWORD PTR es:[edi],dx
  4125be:	ins    DWORD PTR es:[edi],dx
  4125bf:	lock imul eax,DWORD PTR [ebx],0x47
  4125c3:	push   edx
  4125c4:	fldenv [ebp-0x427e7bd7]
  4125ca:	scas   al,BYTE PTR es:[edi]
  4125cb:	(bad)  
  4125cc:	sbb    esi,DWORD PTR [edx]
  4125ce:	xchg   BYTE PTR [edi-0x8],al
  4125d1:	add    dl,BYTE PTR [ecx+0x57622e42]
  4125d7:	mov    DWORD PTR [ebx+0x44],edx
  4125da:	call   0x3c74e905
  4125df:	jmp    0x4125a9
  4125e1:	lock dec esp
  4125e3:	bound  eax,QWORD PTR [edi+0x7fc74fab]
  4125e9:	inc    esi
  4125ea:	ret    
  4125eb:	int3   
  4125ec:	cmp    BYTE PTR [ebp+ebp*8+0x6eff2d26],cl
  4125f3:	and    ebp,eax
  4125f5:	push   ebp
  4125f6:	xlat   BYTE PTR ds:[ebx]
  4125f7:	retf   
  4125f8:	sub    eax,0xcafb9d51
  4125fd:	sub    eax,0x1a0a8eaf
  412602:	ret    
  412603:	jge    0x41263f
  412605:	xchg   esp,eax
  412606:	pop    eax
  412607:	iret   
  412608:	or     dh,BYTE PTR [eax]
  41260a:	inc    ecx
  41260b:	mov    ebp,0x97d9367d
  412610:	or     DWORD PTR [edi+0x30729526],ecx
  412616:	ror    DWORD PTR [eax],1
  412618:	idiv   DWORD PTR [edi+edi*8]
  41261b:	(bad)  
  41261c:	es and al,0x77
  41261f:	jge    0x4125ae
  412621:	pushf  
  412622:	xor    DWORD PTR ds:0xe156453,esp
  412628:	add    al,0xbe
  41262a:	das    
  41262b:	mov    ebx,0xf569e384
  412630:	mov    bl,0x90
  412632:	mov    DWORD PTR ds:0x9a6c1ad4,esi
  412638:	mov    esp,0x70477c2e
  41263d:	stos   DWORD PTR es:[edi],eax
  41263e:	pusha  
  41263f:	test   BYTE PTR [eax+0x1b],cl
  412642:	push   esi
  412643:	or     al,0x1c
  412645:	sub    al,0x12
  412647:	(bad)  
  412648:	sub    DWORD PTR [ebx],0x62c6edb3
  41264e:	push   0x2a01f972
  412653:	popf   
  412654:	jl     0x412611
  412656:	mov    WORD PTR [edx],ds
  412658:	js     0x412624
  41265a:	mov    bh,BYTE PTR [edi-0x3641ed1a]
  412660:	test   DWORD PTR [eax-0x42f9203e],0x69022922
  41266a:	outs   dx,DWORD PTR ds:[esi]
  41266b:	iret   
  41266c:	clc    
  41266d:	sti    
  41266e:	fild   DWORD PTR [edx+eiz*8-0x7a]
  412672:	fs pop edx
  412674:	mov    cl,BYTE PTR [edx+eiz*8-0x4f5d1226]
  41267b:	xchg   edi,eax
  41267c:	popa   
  41267d:	fdivp  st(3),st
  41267f:	sub    eax,0xf4d0c8b3
  412684:	inc    esi
  412685:	shl    BYTE PTR [edi+0x44],cl
  412688:	xchg   ebx,eax
  412689:	jge    0x41265a
  41268b:	mov    ?,WORD PTR [esi]
  41268d:	shl    BYTE PTR [edx+0x2b],0xad
  412691:	inc    ebp
  412692:	push   ecx
  412693:	mov    WORD PTR [eax-0x18becede],fs
  412699:	mov    eax,ds:0xae16ad6d
  41269e:	push   0x86ac1ad6
  4126a3:	loop   0x41271c
  4126a5:	loop   0x412677
  4126a7:	in     eax,dx
  4126a8:	retf   0x5eb8
  4126ab:	popa   
  4126ac:	xor    eax,0x2bd28932
  4126b1:	dec    edx
  4126b2:	add    BYTE PTR [ebx-0x24ea469b],ah
  4126b8:	dec    edi
  4126b9:	adc    DWORD PTR [ebx-0x51],ebx
  4126bc:	jnp    0x4126a8
  4126be:	sbb    al,0x7d
  4126c0:	jno    0x4126b5
  4126c2:	pop    es
  4126c3:	out    0xb5,eax
  4126c5:	xor    ecx,ebp
  4126c7:	mov    ebp,0x6fcabf17
  4126cc:	jmp    0xa491944
  4126d1:	scas   al,BYTE PTR es:[edi]
  4126d2:	mov    dl,0xe
  4126d4:	cmp    DWORD PTR [esi-0x7f4b1f10],ecx
  4126da:	pop    ds
  4126db:	imul   esp,DWORD PTR [ecx+0x5b64a281],0x9082c4b9
  4126e5:	inc    eax
  4126e6:	mov    WORD PTR [edx-0x42],?
  4126e9:	nop
  4126ea:	mov    DWORD PTR [edx],edi
  4126ec:	iret   
  4126ed:	mov    eax,ds:0xcc2ca631
  4126f2:	cdq    
  4126f3:	les    ecx,FWORD PTR [eax+0x1adbadd8]
  4126f9:	enter  0x5d30,0xfd
  4126fd:	sub    ebp,DWORD PTR [eax-0x2464b650]
  412703:	push   ebx
  412704:	mov    esi,0x2cbe7eb8
  412709:	mov    ebp,0xd2de98b3
  41270e:	pushf  
  41270f:	inc    esp
  412710:	mov    cl,0x16
  412712:	ret    0x42ed
  412715:	fld    TBYTE PTR [esi]
  412717:	xor    eax,0x8488f829
  41271c:	add    dh,BYTE PTR [eax-0x35528ad8]
  412722:	jecxz  0x41273c
  412724:	pop    ebx
  412725:	mov    ebp,0xc94120be
  41272a:	fsub   QWORD PTR [si]
  41272d:	push   0x77
  41272f:	aam    0x7d
  412731:	xchg   ecx,eax
  412732:	sahf   
  412733:	and    ecx,DWORD PTR [esi+0x42]
  412736:	cmp    eax,DWORD PTR [eax]
  412738:	sar    BYTE PTR [ecx],0x88
  41273b:	retf   0x7ddd
  41273e:	into   
  41273f:	popa   
  412740:	xchg   esp,eax
  412741:	es pop es
  412743:	dec    ebp
  412744:	jnp    0x41270a
  412746:	mov    ebx,0x94b3a3c2
  41274b:	push   cs
  41274c:	push   0x2a87955c
  412751:	outs   dx,DWORD PTR ds:[esi]
  412752:	stc    
  412753:	(bad)  
  412754:	mov    ecx,0x417ce6c0
  412759:	or     ecx,edi
  41275b:	dec    esi
  41275c:	or     eax,0x95c4aec0
  412762:	add    bl,BYTE PTR [ebx-0x51720cc8]
  412768:	fwait
  412769:	and    eax,0x49f866b0
  41276e:	aad    0x30
  412770:	pop    ebx
  412771:	push   0x7a3dcf
  412776:	dec    ebp
  412777:	gs hlt 
  412779:	mov    edx,0x45338d62
  41277e:	in     al,dx
  41277f:	outs   dx,DWORD PTR ds:[esi]
  412780:	xchg   edi,eax
  412781:	xchg   edx,eax
  412782:	jp     0x41279c
  412784:	xlat   BYTE PTR ds:[ebx]
  412785:	(bad)  
  412786:	push   ds
  412787:	jp     0x41272b
  412789:	cs sub eax,0xe55749c6
  41278f:	sbb    ah,dl
  412791:	sub    bl,BYTE PTR [ebx-0x60]
  412794:	push   ecx
  412795:	or     BYTE PTR [esi+ebp*1-0x1b],cl
  412799:	neg    DWORD PTR [esi]
  41279b:	sub    al,0xb
  41279d:	gs call 0x3ac2:0x406749f1
  4127a5:	hlt    
  4127a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127a7:	iret   
  4127a8:	add    al,BYTE PTR [esi-0x5282f927]
  4127ae:	fstp   DWORD PTR [eax]
  4127b0:	add    eax,0x891a2c49
  4127b5:	or     eax,0xbfb02291
  4127ba:	in     eax,dx
  4127bb:	popf   
  4127bc:	imul   edx,DWORD PTR [ebx-0x577b3e4c],0xf7896ffe
  4127c6:	or     eax,0xdb98093b
  4127cb:	aas    
  4127cc:	mov    edi,0xd2291193
  4127d1:	dec    edx
  4127d2:	push   eax
  4127d3:	mov    edx,0x3ea3dc9e
  4127d8:	and    DWORD PTR [ebx],ecx
  4127da:	xchg   ebp,eax
  4127db:	dec    esp
  4127dc:	rol    DWORD PTR [ebx],cl
  4127de:	not    BYTE PTR [ebp-0x25e850a3]
  4127e4:	fmul   DWORD PTR [edi-0x3a3f00f1]
  4127ea:	loopne 0x412850
  4127ec:	jecxz  0x4127dc
  4127ee:	retf   
  4127ef:	and    DWORD PTR [esi+ebx*8+0x3d12b15],edx
  4127f6:	out    0x16,eax
  4127f8:	and    cl,ah
  4127fa:	aam    0x48
  4127fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127fd:	fist   WORD PTR [ebp+0x72]
  412800:	xchg   ebx,eax
  412801:	add    al,0x49
  412803:	popa   
  412804:	shl    dh,1
  412806:	push   0xffffffac
  412808:	ins    DWORD PTR es:[edi],dx
  412809:	mov    ecx,0xfc33fad1
  41280e:	ja     0x412833
  412810:	and    eax,0xcf9df1b5
  412815:	xor    eax,0xf0563b0c
  41281a:	rcr    DWORD PTR [ebx],0x19
  41281d:	rcr    eax,1
  41281f:	sbb    dh,bh
  412821:	fwait
  412822:	adc    ecx,DWORD PTR [bp+di]
  412825:	or     BYTE PTR [ecx+0x5d6219d6],al
  41282b:	dec    ebp
  41282c:	dec    ebp
  41282d:	xchg   ebx,eax
  41282e:	or     eax,0xa35a0cf4
  412833:	stos   DWORD PTR es:[edi],eax
  412834:	test   DWORD PTR [eax+0x3ab298a4],esi
  41283a:	pop    ds
  41283b:	test   BYTE PTR [edi+0x3f],bh
  41283e:	adc    BYTE PTR [eax-0x1d044b43],dl
  412844:	ins    BYTE PTR es:[edi],dx
  412845:	popf   
  412846:	lods   al,BYTE PTR ds:[esi]
  412847:	ins    DWORD PTR es:[edi],dx
  412848:	sbb    ah,BYTE PTR [ebx-0x1cd749b6]
  41284e:	cld    
  41284f:	mov    esp,0x170238ca
  412854:	out    dx,al
  412855:	or     al,0x99
  412857:	push   es
  412858:	xor    eax,0x844c6a16
  41285d:	rcr    BYTE PTR ds:[edx],0xde
  412861:	push   ebp
  412862:	in     al,dx
  412863:	xchg   edx,eax
  412864:	jmp    0x356a:0xff1809c8
  41286b:	push   eax
  41286c:	cmp    edi,esi
  41286e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286f:	aad    0xa4
  412871:	ret    0xecbc
  412874:	test   al,0x1
  412876:	je     0x412813
  412878:	shl    DWORD PTR [esi],0x5
  41287b:	cs jb  0x412847
  41287e:	sub    BYTE PTR [eax],bl
  412880:	fiadd  DWORD PTR [edi+0x2df63e31]
  412886:	cld    
  412887:	(bad)  
  412888:	push   edx
  412889:	(bad)  
  41288a:	data16 sar bl,0xc
  41288e:	dec    ebx
  41288f:	add    al,0xd6
  412891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412892:	mov    edi,0x2c182adc
  412897:	sub    ch,ch
  412899:	pop    ss
  41289a:	not    DWORD PTR [esi+0x10]
  41289d:	push   esi
  41289e:	mov    al,0x65
  4128a0:	out    dx,eax
  4128a1:	dec    ebp
  4128a2:	jecxz  0x41285c
  4128a4:	mov    dh,0x8c
  4128a6:	(bad)  
  4128a7:	(bad)  
  4128a8:	mov    esi,0xdffc6e48
  4128ad:	add    BYTE PTR [ebx-0x80],dl
  4128b0:	(bad)  [ebx+ebx*2]
  4128b3:	cdq    
  4128b4:	and    eax,0xb71916af
  4128b9:	sub    al,0x18
  4128bb:	adc    WORD PTR ss:[edi+0x51],0x10
  4128c1:	add    cl,cl
  4128c3:	or     ch,ah
  4128c5:	test   BYTE PTR [ebx],dl
  4128c7:	push   es
  4128c8:	jge    0x412881
  4128ca:	retf   
  4128cb:	or     BYTE PTR [eax-0x21201d7e],0x1b
  4128d2:	je     0x412888
  4128d4:	or     dl,BYTE PTR [ebx+0x4c248df3]
  4128da:	or     ecx,ecx
  4128dc:	xchg   edi,eax
  4128dd:	cs or  ebx,ebp
  4128e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128e1:	mov    cl,0x5c
  4128e3:	inc    ebx
  4128e4:	data16 mov al,0x8a
  4128e7:	push   es
  4128e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e9:	frstor [ecx-0x558d242c]
  4128ef:	das    
  4128f0:	push   ss
  4128f1:	jmp    0x7199:0x89f6d0d5
  4128f8:	arpl   WORD PTR [edi+edx*1+0x60],cx
  4128fc:	jge    0x412955
  4128fe:	sbb    ah,BYTE PTR [ecx-0x7e]
  412901:	mov    ds:0xa5ed3ca2,al
  412906:	mov    ch,0x92
  412908:	rcr    BYTE PTR [ebx],1
  41290a:	mov    esi,DWORD PTR [esi+0x5e845e82]
  412910:	test   DWORD PTR [edi+0x79],0x7ffef518
  412917:	dec    edx
  412918:	or     ecx,DWORD PTR [edi+0x1d2f75bf]
  41291e:	xchg   esp,eax
  41291f:	imul   ecx,DWORD PTR [ebx-0x53],0x27
  412923:	jmp    0x35bc4e7d
  412928:	inc    ebx
  412929:	pusha  
  41292a:	ret    
  41292b:	sub    eax,0x10ca6eb7
  412930:	or     edi,DWORD PTR [edi+edi*1]
  412933:	ret    0x6c46
  412936:	stos   DWORD PTR es:[edi],eax
  412937:	sub    al,0x47
  412939:	repnz outs dx,BYTE PTR ds:[esi]
  41293b:	mov    DWORD PTR [edi],esp
  41293d:	ins    DWORD PTR es:[edi],dx
  41293e:	adc    eax,0x33b3e995
  412943:	xlat   BYTE PTR ds:[ebx]
  412944:	xor    edx,DWORD PTR ss:[edi]
  412947:	xchg   esp,eax
  412948:	les    edx,FWORD PTR [ebp-0x31]
  41294b:	repz bswap esp
  41294e:	int    0x15
  412950:	fcomp  QWORD PTR [ebx]
  412952:	popa   
  412953:	data16 sub al,BYTE PTR [eax+ebx*2]
  412957:	push   0x25
  412959:	out    0xc2,eax
  41295b:	pop    edi
  41295c:	mov    ebp,0x29748012
  412961:	in     eax,0x12
  412963:	aam    0x71
  412965:	inc    esp
  412966:	mov    dh,0xec
  412968:	pop    esi
  412969:	leave  
  41296a:	test   DWORD PTR [edi-0x153e4c16],ecx
  412970:	test   BYTE PTR [esi],cl
  412972:	js     0x41299d
  412974:	add    edx,ecx
  412976:	hlt    
  412977:	add    al,0x49
  412979:	adc    BYTE PTR [edx+esi*4+0x27094d21],bh
  412980:	out    dx,eax
  412981:	and    eax,0xad93897e
  412986:	mov    ah,0xa2
  412988:	cs (bad) 
  41298a:	int    0xcb
  41298c:	aam    0x88
  41298e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41298f:	fidiv  DWORD PTR [edx+0x5b83861]
  412995:	mov    al,0x5a
  412997:	pcmpgtb mm1,QWORD PTR [edx+edi*8-0x3d1a3d2f]
  41299f:	pushf  
  4129a0:	ret    0x1792
  4129a3:	mov    al,ds:0x8983530
  4129a8:	mov    ds:0xcb5c4104,eax
  4129ad:	hlt    
  4129ae:	call   0xc193f46c
  4129b3:	or     al,bl
  4129b5:	sub    DWORD PTR [ebp+0x18994c04],esp
  4129bb:	dec    ebx
  4129bc:	pop    edi
  4129bd:	or     al,0x3
  4129bf:	(bad)  
  4129c0:	in     al,0x22
  4129c2:	iret   
  4129c3:	push   esi
  4129c4:	push   edx
  4129c5:	dec    ebx
  4129c6:	arpl   WORD PTR [ecx],bx
  4129c8:	dec    esi
  4129c9:	ror    BYTE PTR [edi-0x8],0x2d
  4129cd:	sub    al,0x8e
  4129cf:	out    0x6a,eax
  4129d1:	cmp    BYTE PTR [edx],bh
  4129d3:	push   es
  4129d4:	jo     0x412a2b
  4129d6:	push   esp
  4129d7:	mov    edi,0x3de5af1d
  4129dc:	cli    
  4129dd:	ss je  0x4129e6
  4129e0:	(bad)  
  4129e1:	mov    ebx,0xd1845be9
  4129e6:	jo     0x4129a1
  4129e8:	mov    ebx,0x5dce7f49
  4129ed:	ss xchg edi,eax
  4129ef:	aad    0x6d
  4129f1:	std    
  4129f2:	out    dx,eax
  4129f3:	pop    esp
  4129f4:	fsub   DWORD PTR [esi-0x13]
  4129f7:	jge    0x412a54
  4129f9:	bnd jmp 0x579c2627
  4129ff:	xchg   ecx,eax
  412a00:	test   al,0x4b
  412a03:	dec    ebx
  412a04:	jo     0x412a7f
  412a06:	fld    TBYTE PTR [ebp+0x16]
  412a09:	idiv   BYTE PTR [eax+0xa64854f]
  412a0f:	mov    ah,0x63
  412a11:	cmp    edx,DWORD PTR [eax-0x20]
  412a14:	repnz sub ch,BYTE PTR [eax+ecx*1-0x65]
  412a19:	adc    eax,0x5bc8f675
  412a1e:	dec    esp
  412a1f:	jmp    0x3a1:0x49912100
  412a26:	out    dx,al
  412a27:	mov    ah,0xf7
  412a29:	and    DWORD PTR [edx],esi
  412a2b:	mov    ss,WORD PTR [ecx]
  412a2d:	imul   ecx,DWORD PTR [ebx+ebx*2+0x22],0x82e2e00e
  412a35:	ja     0x412a11
  412a37:	rcr    BYTE PTR [ebx+0x731a494a],1
  412a3d:	and    BYTE PTR [ebx+0x70],dl
  412a40:	xchg   edx,eax
  412a41:	cmp    eax,0x76b5803c
  412a46:	jle    0x412a33
  412a48:	(bad)  
  412a49:	push   edi
  412a4a:	imul   ecx,DWORD PTR [ebp+0x2b],0x7033fad
  412a51:	inc    esi
  412a52:	push   esp
  412a53:	fwait
  412a54:	das    
  412a55:	(bad)  
  412a56:	loope  0x412a80
  412a58:	in     al,dx
  412a59:	and    eax,0x1ee34e7b
  412a5e:	dec    esp
  412a5f:	dec    esp
  412a60:	enter  0x50c5,0xb4
  412a64:	leave  
  412a65:	pop    esi
  412a66:	outs   dx,DWORD PTR ds:[esi]
  412a67:	add    eax,0x96596e35
  412a6c:	jmp    0x412a1a
  412a6e:	add    DWORD PTR ds:[esi-0x6c],eax
  412a72:	sar    eax,1
  412a74:	cmp    eax,0x5070a7a9
  412a79:	imul   esp,DWORD PTR [eax-0x31c6b202],0x78
  412a80:	lods   al,BYTE PTR ds:[esi]
  412a81:	xchg   ebx,eax
  412a82:	mov    ebp,0xdb6c6004
  412a87:	mov    WORD PTR [ecx],gs
  412a89:	sbb    BYTE PTR [esi+eax*8+0x73],dh
  412a8d:	fbstp  TBYTE PTR [edx]
  412a8f:	xchg   BYTE PTR [ebp+0x69],bh
  412a92:	adc    BYTE PTR [esi-0x52],ch
  412a95:	stos   DWORD PTR es:[edi],eax
  412a96:	xchg   si,ax
  412a98:	jae    0x412a87
  412a9a:	enter  0x5acd,0x75
  412a9e:	scas   eax,DWORD PTR es:[edi]
  412a9f:	ss inc eax
  412aa1:	inc    esp
  412aa2:	adc    ch,bh
  412aa4:	cmp    DWORD PTR [esi-0x63],ebp
  412aa7:	inc    esp
  412aa8:	(bad)  
  412aa9:	jmp    0x412a83
  412aab:	pop    edx
  412aac:	(bad)  
  412aad:	jp     0x412b18
  412aaf:	xor    al,BYTE PTR cs:[ecx-0x605678c5]
  412ab6:	dec    edx
  412ab7:	add    DWORD PTR [ecx],ebp
  412ab9:	leave  
  412aba:	push   0xffffffd5
  412abc:	(bad)  
  412abd:	mov    dh,0x40
  412abf:	sbb    al,0x8c
  412ac1:	stos   BYTE PTR es:[edi],al
  412ac2:	fild   DWORD PTR [ebx+0x2fbd0db]
  412ac8:	mov    ecx,0x4db632f8
  412acd:	dec    esp
  412ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412acf:	lock xor BYTE PTR [ebp-0x41e4d859],dl
  412ad6:	sbb    bh,dl
  412ad8:	xchg   edx,eax
  412ad9:	(bad)  
  412ada:	fst    QWORD PTR [ebp+0x63]
  412add:	test   BYTE PTR [edi],ch
  412adf:	cmp    esi,edi
  412ae1:	dec    esp
  412ae2:	jno    0x412aed
  412ae4:	out    0xe9,eax
  412ae6:	jb     0x412b0e
  412ae8:	js     0x412b4f
  412aea:	aas    
  412aeb:	mov    ebp,0x4ade3da2
  412af0:	jbe    0x412acf
  412af2:	fistp  WORD PTR [edi]
  412af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af5:	int    0x3e
  412af7:	retf   0x3a60
  412afa:	loope  0x412b1c
  412afc:	adc    al,0x1c
  412afe:	xor    DWORD PTR [edi],esi
  412b00:	bound  edx,QWORD PTR [ecx+ecx*1+0x2f]
  412b04:	int3   
  412b05:	xor    al,0xae
  412b07:	and    DWORD PTR [ecx+eiz*2],ebp
  412b0a:	adc    dh,BYTE PTR [ebx]
  412b0c:	xor    DWORD PTR [ebx-0x2b],0x94d29384
  412b13:	int    0xff
  412b15:	push   ds
  412b16:	stos   BYTE PTR es:[edi],al
  412b17:	push   esp
  412b18:	aam    0xc3
  412b1a:	jno    0x412b4c
  412b1c:	cmp    BYTE PTR [ecx-0x34],dh
  412b1f:	(bad)  
  412b21:	or     al,0xd3
  412b23:	add    dh,ah
  412b25:	cmp    al,0x14
  412b27:	sbb    DWORD PTR [ebp+0xd],esp
  412b2a:	inc    ebx
  412b2b:	cs sub cl,dh
  412b2e:	mov    cl,0x1d
  412b30:	jbe    0x412b0e
  412b32:	inc    esp
  412b33:	xchg   edx,eax
  412b34:	sbb    DWORD PTR [edi+eax*1+0x8],esp
  412b38:	mov    ecx,0xffc6f8a6
  412b3d:	rcr    BYTE PTR [ebp+0x24dcb55b],1
  412b43:	pop    eax
  412b44:	jmp    0x704f:0x53861141
  412b4b:	sbb    WORD PTR [esp+eax*2-0x34],di
  412b50:	pushf  
  412b51:	add    DWORD PTR [eax+0x21],ebp
  412b54:	mov    dh,0x83
  412b56:	fnstcw WORD PTR [ebx-0x1c56f999]
  412b5c:	test   DWORD PTR [esi+0x66],eax
  412b5f:	or     BYTE PTR [bp+si-0x4b],0x5c
  412b64:	aaa    
  412b65:	imul   eax,DWORD PTR [ebp-0x39],0x505c9c33
  412b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6e:	sbb    ah,BYTE PTR [ebp-0x48]
  412b71:	cmp    esp,DWORD PTR [edx-0x74]
  412b74:	popf   
  412b75:	add    ebx,DWORD PTR ds:0x9187c714
  412b7b:	adc    al,0x55
  412b7d:	or     DWORD PTR [ebp-0x17],esp
  412b80:	retf   0x5012
  412b83:	fldl2t 
  412b85:	leave  
  412b86:	fcom   DWORD PTR [edx+eax*8+0x27b4df51]
  412b8d:	sbb    al,0x66
  412b8f:	(bad)  
  412b91:	sbb    ecx,eax
  412b93:	sub    edi,DWORD PTR [eax+edi*8]
  412b96:	sbb    eax,0x8b39fcdd
  412b9b:	cmp    al,0xba
  412b9d:	inc    eax
  412b9e:	ret    0xb17f
  412ba1:	inc    esp
  412ba2:	push   si
  412ba4:	inc    eax
  412ba5:	xchg   esp,eax
  412ba6:	and    DWORD PTR [esi+edx*4-0x4a],ebp
  412baa:	mov    eax,DWORD PTR [eax-0x9f2b556]
  412bb0:	inc    ebx
  412bb1:	cmp    DWORD PTR [edx+0x285b5589],esp
  412bb7:	inc    edx
  412bb8:	add    edx,DWORD PTR [ecx-0x72410d7]
  412bbe:	neg    DWORD PTR ds:0xdad93d96
  412bc4:	(bad)  
  412bc5:	repz imul esp,DWORD PTR [edi],0xbeb65447
  412bcc:	fnstsw WORD PTR [ebx]
  412bce:	xor    ebx,ecx
  412bd0:	nop
  412bd1:	or     al,0xa9
  412bd3:	sub    BYTE PTR [edx],0xc3
  412bd6:	and    ch,bh
  412bd8:	pop    eax
  412bd9:	push   dx
  412bdb:	push   esp
  412bdc:	les    ebx,FWORD PTR [edi-0x10]
  412bdf:	in     eax,0xa7
  412be1:	and    BYTE PTR [edx+0x3a],bh
  412be4:	in     eax,dx
  412be5:	sub    ebp,DWORD PTR [eax-0x5a]
  412be8:	aad    0x4f
  412bea:	outs   dx,DWORD PTR ds:[esi]
  412beb:	addr16 dec edi
  412bed:	imul   BYTE PTR [edi+0x6e]
  412bf0:	retf   0xdfb1
  412bf3:	mov    esp,ebx
  412bf5:	(bad)  
  412bf6:	lahf   
  412bf7:	sti    
  412bf8:	pop    edx
  412bf9:	dec    ecx
  412bfa:	pop    ebx
  412bfb:	jo     0x412c3c
  412bfd:	jo     0x412c43
  412bff:	test   BYTE PTR [edi-0x45],ch
  412c02:	jnp    0x412beb
  412c04:	imul   ebp,DWORD PTR [esi+0xa738483],0x5058bc18
  412c0e:	leave  
  412c0f:	fwait
  412c10:	jge    0x412c6e
  412c12:	mov    ecx,0xa47c5d71
  412c17:	mov    eax,ds:0x3f42d6b6
  412c1c:	add    eax,0xbd043bef
  412c21:	push   ds
  412c22:	and    edx,esp
  412c24:	cmp    eax,0xc74f948
  412c29:	mov    ebx,0xd1599655
  412c2e:	out    dx,eax
  412c2f:	jle    0x412cae
  412c31:	fs sub eax,0xeb542041
  412c37:	pop    edx
  412c38:	imul   DWORD PTR [ebx]
  412c3a:	fidivr DWORD PTR [esi-0x4cec27e4]
  412c40:	mov    al,0x77
  412c42:	or     eax,0x4294ca73
  412c47:	push   es
  412c48:	mov    ch,0x6
  412c4a:	cli    
  412c4b:	(bad)  [edx+0xf1a70f]
  412c51:	mov    edi,0xfb976d7c
  412c56:	addr16 mov eax,ds:0xdd1e
  412c5a:	adc    al,0xc7
  412c5c:	dec    ebp
  412c5d:	xchg   edx,eax
  412c5e:	pusha  
  412c5f:	gs aas 
  412c61:	xchg   ebx,eax
  412c62:	aam    0xb1
  412c64:	call   0x679c:0x311adbd5
  412c6b:	cmp    BYTE PTR [edi+0xb4eb4de],cl
  412c71:	sbb    eax,0xf51a441b
  412c76:	out    dx,al
  412c77:	xor    BYTE PTR [eax],ah
  412c79:	sub    eax,DWORD PTR [edx]
  412c7b:	jne    0x412c4d
  412c7d:	sahf   
  412c7e:	neg    BYTE PTR [ecx-0x30]
  412c81:	adc    al,0xd6
  412c83:	outs   dx,BYTE PTR es:[esi]
  412c85:	shl    DWORD PTR [esi-0x1c],0xd5
  412c89:	cdq    
  412c8a:	mul    BYTE PTR [esi+0xe]
  412c8d:	mov    edx,edi
  412c8f:	inc    ecx
  412c90:	aaa    
  412c91:	mov    edi,0x7e551078
  412c96:	ds retf 0x6c8a
  412c9a:	js     0x412c9a
  412c9c:	push   ebp
  412c9d:	not    DWORD PTR [ebp+0x4a]
  412ca0:	test   BYTE PTR es:[edi+0x5a6c72b7],0x4e
  412ca8:	shl    esp,cl
  412caa:	(bad)  
  412cab:	push   esp
  412cac:	icebp  
  412cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cae:	addr16 cmp ah,bl
  412cb1:	push   0x29
  412cb3:	mov    ebx,0x2abebb0d
  412cb8:	push   esi
  412cb9:	push   ebx
  412cba:	fist   WORD PTR [esi-0x865ecff]
  412cc0:	and    ebp,DWORD PTR [ebp+0xfbde2db]
  412cc6:	xor    eax,0x487a50c
  412ccb:	pop    ss
  412ccc:	or     cl,0xfa
  412ccf:	imul   esi,DWORD PTR [ecx+0x75415f95],0xfffffff2
  412cd6:	dec    ebx
  412cd7:	mov    ds:0xdc738c11,al
  412cdc:	xlat   BYTE PTR ds:[ebx]
  412cdd:	and    BYTE PTR [eax-0x4b],0x14
  412ce1:	pop    ebp
  412ce2:	fwait
  412ce3:	sub    eax,DWORD PTR [eax]
  412ce5:	out    dx,eax
  412ce6:	call   0x9f9d:0x331ab345
  412ced:	and    DWORD PTR [eax],edx
  412cef:	in     al,dx
  412cf0:	lock push ss
  412cf2:	cmp    eax,0xb070124d
  412cf7:	xchg   ecx,eax
  412cf8:	ss mov ah,0xcd
  412cfb:	and    DWORD PTR [eax+edx*2],esi
  412cfe:	ja     0x412d74
  412d00:	fs shl bl,1
  412d03:	add    eax,0xb1d246c6
  412d08:	test   DWORD PTR ds:0x8008e59c,edi
  412d0e:	dec    esi
  412d0f:	sbb    DWORD PTR [edx+0x2b],ebx
  412d12:	ret    0xd6a2
  412d15:	shl    DWORD PTR [edi+edi*4],1
  412d18:	fstp   TBYTE PTR [ebx+0x50]
  412d1b:	mov    ds:0x785f1a5f,eax
  412d20:	push   es
  412d21:	cmc    
  412d22:	repnz add esi,DWORD PTR [edx+0x44]
  412d26:	inc    esi
  412d27:	neg    cl
  412d29:	fimul  DWORD PTR [eax-0x26]
  412d2c:	mov    edx,0x628388d7
  412d31:	test   al,0x4
  412d33:	clc    
  412d34:	mov    eax,ds:0x90e6a792
  412d39:	jns    0x412d0d
  412d3b:	adc    BYTE PTR [eax],ch
  412d3d:	xchg   ch,ch
  412d3f:	adc    edi,DWORD PTR [eax+0x5f1ad97]
  412d45:	mov    eax,ds:0x74da938b
  412d4a:	pop    eax
  412d4b:	or     eax,0x690708c
  412d50:	mov    ch,0xc0
  412d52:	mov    DWORD PTR [ecx-0x7a],eax
  412d55:	inc    edi
  412d56:	inc    ebp
  412d57:	adc    esp,esi
  412d59:	sbb    DWORD PTR [ecx],ebx
  412d5b:	and    al,0x5b
  412d5d:	imul   ebp,eax,0x246f8986
  412d63:	and    ch,BYTE PTR [ebp+0x38]
  412d66:	xor    eax,0x1c7c8e1e
  412d6b:	(bad)  
  412d6c:	cld    
  412d6d:	std    
  412d6e:	clc    
  412d6f:	or     al,0x5f
  412d71:	iret   
  412d72:	mov    dl,0xf3
  412d74:	push   ebx
  412d75:	lds    esi,FWORD PTR [edi+0x5]
  412d78:	imul   esp,esp,0x908e0d03
  412d7e:	sbb    eax,0xf64eb10d
  412d83:	or     bl,BYTE PTR [edx+ebp*8+0x0]
  412d87:	test   al,0x0
  412d89:	mov    DWORD PTR ss:[ebx+0x287ec41d],edx
  412d90:	(bad)  
  412d91:	retf   0xcecc
  412d94:	inc    edx
  412d95:	and    al,0xda
  412d97:	and    BYTE PTR [esi-0x22],ch
  412d9a:	mov    ebx,DWORD PTR [esi+0xb]
  412d9d:	enter  0x5cf7,0xf5
  412da1:	jmp    0x67d1:0x8392ddd2
  412da8:	(bad)  
  412daa:	inc    ecx
  412dab:	clc    
  412dac:	adc    ebx,esi
  412dae:	inc    eax
  412daf:	mov    ebp,0xc37f7a3a
  412db4:	fdivr  QWORD PTR [ebp-0x6becf9bd]
  412dba:	mov    esp,0x21481727
  412dbf:	xlat   BYTE PTR ds:[ebx]
  412dc0:	sub    eax,0xb2243cf2
  412dc5:	pop    esp
  412dc6:	add    dh,BYTE PTR [ebp-0x4719df60]
  412dcc:	mov    BYTE PTR [edx],bl
  412dce:	enter  0x7706,0x2a
  412dd2:	xchg   esp,eax
  412dd3:	xchg   edi,eax
  412dd4:	xor    ebx,DWORD PTR [edx]
  412dd6:	dec    esi
  412dd7:	jp     0x412d9a
  412dd9:	lock pop esp
  412ddb:	adc    ebx,DWORD PTR [eax-0x26]
  412dde:	test   edi,ebp
  412de0:	mov    dh,0x33
  412de2:	mov    edi,0x5f2bf0e4
  412de7:	jmp    0x412df8
  412de9:	and    cl,dl
  412deb:	add    al,BYTE PTR [ebp+0x4f]
  412dee:	mov    cl,0x78
  412df0:	jns    0x412e58
  412df2:	sub    cl,BYTE PTR [esi]
  412df4:	scas   eax,DWORD PTR es:[edi]
  412df5:	test   al,0x40
  412df7:	adc    DWORD PTR [esi-0x77c2e455],edx
  412dfd:	pop    es
  412dfe:	push   0x4b01d7ef
  412e03:	mov    cl,0x3e
  412e05:	retf   
  412e06:	sbb    eax,0xb1fb31e3
  412e0b:	test   al,0x20
  412e0d:	jge    0x412e52
  412e0f:	jg     0x412e2e
  412e11:	sub    eax,edi
  412e13:	xor    BYTE PTR ds:0x86d6f8a2,dh
  412e19:	je     0x412e10
  412e1b:	cmp    ebx,DWORD PTR [edx-0x46]
  412e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e1f:	jle    0x412e63
  412e21:	sbb    DWORD PTR [edi+0x54],edx
  412e24:	pop    ds
  412e25:	aad    0xf3
  412e27:	push   ebx
  412e28:	xchg   DWORD PTR [ebx+ebp*2+0x4f],ebx
  412e2c:	adc    al,0xc4
  412e2e:	xchg   edx,eax
  412e2f:	add    eax,0xd2afb5b6
  412e34:	sahf   
  412e35:	sub    ebp,DWORD PTR [ecx]
  412e37:	popa   
  412e38:	int3   
  412e39:	and    DWORD PTR [edx+0x20],0x21
  412e3d:	gs inc edx
  412e3f:	adc    eax,0x9075d626
  412e44:	cmc    
  412e45:	clc    
  412e46:	pop    ebp
  412e47:	xchg   esp,eax
  412e48:	pop    edx
  412e49:	mov    edx,0x977f0f7e
  412e4e:	add    al,0x5e
  412e50:	retf   
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	sbb    al,0x8f
  412e54:	ja     0x412e8a
  412e56:	mov    edi,0x22e44d1a
  412e5b:	outs   dx,DWORD PTR ds:[esi]
  412e5c:	mov    bh,0x83
  412e5e:	out    dx,al
  412e5f:	jecxz  0x412e8e
  412e61:	sbb    eax,0x776e80e7
  412e66:	ja     0x412ec4
  412e68:	sub    dl,ch
  412e6a:	rcl    BYTE PTR [ebp-0x2c86fd34],1
  412e70:	mov    ah,0x45
  412e72:	outs   dx,DWORD PTR ds:[esi]
  412e73:	jecxz  0x412e49
  412e75:	es push esp
  412e77:	outs   dx,BYTE PTR ds:[esi]
  412e78:	sbb    ebx,DWORD PTR [eax]
  412e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7b:	mov    al,al
  412e7d:	adc    DWORD PTR ss:[edi-0x7e9a91ee],edi
  412e84:	leave  
  412e85:	and    bh,BYTE PTR [ecx]
  412e87:	or     al,BYTE PTR [ecx+0x4074a65]
  412e8d:	(bad)  
  412e8e:	lods   eax,DWORD PTR ds:[esi]
  412e8f:	aaa    
  412e90:	or     eax,0x1fbbc332
  412e95:	sbb    al,0x6f
  412e97:	push   ecx
  412e98:	sbb    DWORD PTR [eax+eax*1+0x6aac34e2],edi
  412e9f:	icebp  
  412ea0:	(bad)  
  412ea1:	pusha  
  412ea2:	sub    al,0xea
  412ea4:	out    0xd6,eax
  412ea6:	ds mov dl,0x58
  412ea9:	lds    esp,FWORD PTR [ecx]
  412eab:	jmp    0xd217:0x4bf3bac4
  412eb2:	fcomp  DWORD PTR [ecx+0x17da1889]
  412eb8:	out    0xf0,eax
  412eba:	loope  0x412f39
  412ebc:	lods   eax,DWORD PTR ds:[esi]
  412ebd:	das    
  412ebe:	sar    BYTE PTR [eax+0x3caea88f],0x94
  412ec5:	adc    BYTE PTR [esi+ecx*4],0x5f
  412ec9:	inc    ecx
  412eca:	inc    sp
  412ecc:	shr    DWORD PTR [ecx+0xa],cl
  412ecf:	push   edx
  412ed0:	stc    
  412ed1:	inc    esi
  412ed2:	dec    edx
  412ed3:	mov    ecx,0x47218c31
  412ed8:	outs   dx,DWORD PTR ds:[esi]
  412ed9:	addr16 add esi,edx
  412edc:	mov    ds:0x54e0be21,eax
  412ee1:	or     BYTE PTR [esi+0x7c2ce48],0xb2
  412ee8:	cs xchg esp,eax
  412eea:	je     0x412f5e
  412eec:	pop    ds
  412eed:	je     0x412f1f
  412eef:	int    0x8
  412ef1:	mov    ebp,DWORD PTR [eax-0x6c]
  412ef4:	and    DWORD PTR [eax],esi
  412ef6:	ja     0x412f0c
  412ef8:	mov    al,BYTE PTR [eax]
  412efa:	push   cs
  412efb:	repz bound esp,QWORD PTR [ecx]
  412efe:	out    dx,eax
  412eff:	or     BYTE PTR [ebx+0x76],al
  412f02:	ds add al,0xfa
  412f05:	iret   
  412f06:	xlat   BYTE PTR ds:[ebx]
  412f07:	sub    BYTE PTR [edi-0x500b2d8],bl
  412f0d:	mov    ecx,0x1094047
  412f12:	dec    edi
  412f13:	push   esp
  412f14:	cdq    
  412f15:	iret   
  412f16:	mov    eax,cs:0x518075b0
  412f1c:	sub    BYTE PTR [ebp-0x74cf2f4e],cl
  412f22:	or     al,0x50
  412f24:	nop
  412f25:	or     eax,0x80c1b572
  412f2a:	fmul   QWORD PTR [esi+0x17]
  412f2d:	sub    DWORD PTR [esi],ebp
  412f2f:	inc    eax
  412f30:	sar    DWORD PTR [eax],0x7c
  412f33:	mov    edx,0xd0eac5c5
  412f38:	ret    0xfd84
  412f3b:	push   ebp
  412f3c:	pop    edi
  412f3d:	jae    0x412f44
  412f3f:	icebp  
  412f40:	js     0x412fad
  412f42:	cli    
  412f43:	lds    esi,FWORD PTR [ebx+0x2c]
  412f46:	and    eax,0xe20d5a34
  412f4b:	dec    ebp
  412f4c:	push   0x49
  412f4e:	cld    
  412f4f:	out    0x4f,eax
  412f51:	cmp    BYTE PTR [ecx+0x30],ch
  412f54:	push   esi
  412f55:	mov    edx,0x594e99e2
  412f5a:	cld    
  412f5b:	rcl    DWORD PTR [edi],cl
  412f5d:	add    DWORD PTR [edi],esp
  412f5f:	jl     0x412fdd
  412f61:	adc    eax,0x1e88be5c
  412f66:	ret    0x45c4
  412f69:	inc    edx
  412f6a:	popa   
  412f6b:	mov    ecx,0x29d33bd
  412f70:	shl    DWORD PTR [ebx-0x7f],0x82
  412f74:	jl     0x412fb0
  412f76:	xor    al,0x40
  412f78:	and    al,0x97
  412f7a:	mov    al,0x2f
  412f7c:	repnz mov ch,BYTE PTR [eax-0x54]
  412f80:	fimul  DWORD PTR ds:0x650f5932
  412f86:	shr    esp,1
  412f88:	inc    esp
  412f89:	xchg   ecx,eax
  412f8a:	xor    eax,0x60fd7df7
  412f8f:	aaa    
  412f90:	inc    eax
  412f91:	pop    ecx
  412f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f93:	ins    BYTE PTR es:[edi],dx
  412f94:	mov    ebp,0xe549879e
  412f99:	adc    BYTE PTR [ecx],bl
  412f9b:	cs mov cl,0x1
  412f9e:	xchg   edi,eax
  412f9f:	out    0x6b,al
  412fa1:	and    esi,0x5e
  412fa4:	xchg   eax,edi
  412fa6:	pop    ebx
  412fa7:	shl    BYTE PTR [edi+0x28],cl
  412faa:	retf   0xedd2
  412fad:	adc    cl,cl
  412faf:	call   0x4961:0x198b5a90
  412fb6:	push   eax
  412fb7:	int    0xb9
  412fb9:	js     0x413030
  412fbb:	mov    edx,DWORD PTR [ebp+0x32bafde3]
  412fc1:	ins    DWORD PTR es:[edi],dx
  412fc2:	cmp    eax,0xc2e4f3f7
  412fc7:	sbb    eax,0xa1d0b3f7
  412fcc:	sahf   
  412fcd:	sbb    DWORD PTR [edi+0x1133b5c1],0xffffffb8
  412fd4:	mov    esp,esp
  412fd6:	mov    dl,BYTE PTR [edx]
  412fd8:	fiadd  WORD PTR [esi-0x5c]
  412fdb:	icebp  
  412fdc:	mov    ah,0x4
  412fde:	dec    edx
  412fdf:	add    DWORD PTR [esi+0x7a2677ef],0xffffffd0
  412fe6:	in     al,dx
  412fe7:	push   ebp
  412fe8:	cwde   
  412fe9:	lds    edx,FWORD PTR [edx+ebx*4+0x780df3e5]
  412ff0:	les    edx,FWORD PTR ds:0xc9ebefe3
  412ff6:	add    al,0x34
  412ff8:	aad    0x1a
  412ffa:	pop    ecx
  412ffb:	jns    0x412f95
  412ffd:	retf   0x922d
  413000:	sbb    al,0xff
  413002:	jno    0x413019
  413004:	cmc    
  413005:	mov    esp,0x3ee830c
  41300a:	pop    es
  41300b:	xchg   esi,eax
  41300c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41300d:	xchg   edx,eax
  41300e:	cli    
  41300f:	push   ecx
  413010:	inc    esi
  413011:	in     eax,0x3a
  413013:	jmp    0x24b6:0x1a4e5066
  41301a:	jae    0x413063
  41301c:	cmp    cl,BYTE PTR [edi+eiz*2]
  41301f:	mov    dh,0x62
  413021:	popf   
  413022:	add    ebp,ebx
  413024:	in     al,dx
  413025:	pop    edi
  413026:	mov    ds:0xe77b65a2,eax
  41302b:	inc    eax
  41302c:	inc    ebp
  41302d:	leave  
  41302e:	xchg   DWORD PTR [eax+0xc3897ec],eax
  413034:	mov    bh,0x16
  413036:	and    BYTE PTR [eax-0x59],dh
  413039:	stc    
  41303a:	pop    esp
  41303b:	push   ss
  41303c:	in     al,dx
  41303d:	mov    ah,0x1e
  41303f:	ss sbb al,0x1
  413042:	xlat   BYTE PTR ds:[ebx]
  413043:	aam    0x49
  413045:	mov    bl,0xf4
  413047:	imul   esp,DWORD PTR [ebp+0x50],0x1b911417
  41304e:	stc    
  41304f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413050:	jae    0x412fff
  413052:	jle    0x413095
  413054:	push   eax
  413055:	sbb    DWORD PTR [eax+ebx*2+0x54f2e48],0x2d
  41305d:	jl     0x413042
  41305f:	xchg   edi,eax
  413060:	sub    edi,esp
  413062:	push   0x90a4a990
  413067:	out    0xb0,al
  413069:	lods   eax,DWORD PTR ds:[esi]
  41306a:	dec    ebx
  41306b:	into   
  41306c:	cwde   
  41306d:	or     eax,0x26b0bbbc
  413072:	pop    ecx
  413073:	jnp    0x413093
  413075:	xchg   ecx,eax
  413076:	loop   0x4130ad
  413078:	lahf   
  413079:	xchg   esp,eax
  41307a:	xchg   esp,eax
  41307b:	pop    ss
  41307c:	cmc    
  41307d:	popa   
  41307e:	and    BYTE PTR [edi+0x5d0168d],cl
  413084:	cmp    BYTE PTR [esi],0x5a
  413087:	jg     0x413055
  413089:	cmp    esi,DWORD PTR [ecx]
  41308b:	ror    DWORD PTR [ecx-0x4a],1
  41308e:	fsubp  st(1),st
  413090:	aad    0xeb
  413092:	jl     0x413112
  413094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413095:	loop   0x41306b
  413097:	lods   eax,DWORD PTR ds:[esi]
  413098:	mov    BYTE PTR [ecx],0xff
  41309b:	adc    esi,DWORD PTR [edi+0x1c8abab6]
  4130a1:	xor    DWORD PTR [ebp-0x2489630e],eax
  4130a7:	pop    esi
  4130a8:	sub    esi,eax
  4130aa:	push   ecx
  4130ab:	js     0x413033
  4130ad:	inc    ecx
  4130ae:	aam    0xc6
  4130b0:	fistp  WORD PTR [ebp-0x592c1295]
  4130b6:	adc    DWORD PTR [ecx-0x4b],esp
  4130b9:	outs   dx,BYTE PTR ds:[esi]
  4130ba:	adc    al,BYTE PTR [eax-0x67c66845]
  4130c0:	out    0x9c,al
  4130c2:	aam    0x21
  4130c4:	fdivr  QWORD PTR [edi-0x4b42793d]
  4130ca:	and    al,BYTE PTR [ebp+0x7a]
  4130cd:	cmp    ecx,DWORD PTR [ebx-0x5f]
  4130d0:	ds jo  0x4130be
  4130d3:	or     eax,0x257eb06a
  4130d8:	repz mov dl,0xc6
  4130db:	(bad)  [ebx+0x75]
  4130de:	sbb    esp,DWORD PTR [ebx-0x6d59aa18]
  4130e4:	push   es
  4130e5:	xchg   esi,eax
  4130e6:	es cmc 
  4130e8:	push   edi
  4130e9:	mov    edx,0xadaa827b
  4130ee:	adc    al,0x21
  4130f0:	xchg   ebx,esi
  4130f2:	ret    0xb7de
  4130f5:	arpl   ax,dx
  4130f7:	arpl   WORD PTR gs:[edx],bx
  4130fa:	shl    BYTE PTR [edi+ecx*2-0x6c7a5c11],cl
  413101:	fcom   QWORD PTR [ebx+0x5d5bacdd]
  413107:	rol    DWORD PTR [edx+esi*2],0xd3
  41310b:	dec    edi
  41310c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41310d:	sub    eax,0xc9585c8f
  413112:	xor    eax,0xf48f854d
  413117:	aad    0x1d
  413119:	pop    edx
  41311a:	std    
  41311b:	jne    0x4130ea
  41311d:	jge    0x4130f7
  41311f:	add    ah,BYTE PTR [eax+0x9f8e13d]
  413125:	lods   eax,DWORD PTR ds:[esi]
  413126:	(bad)  [esi]
  413128:	mov    ?,WORD PTR [ebp-0x38]
  41312b:	mov    dh,0x48
  41312d:	je     0x413154
  41312f:	(bad)  
  413130:	lods   al,BYTE PTR ds:[esi]
  413131:	popa   
  413132:	pop    es
  413133:	push   0x50150f4f
  413138:	cwde   
  413139:	sar    DWORD PTR [edi-0x6c],1
  41313c:	loopne 0x4131bb
  41313e:	cld    
  41313f:	cmp    ch,BYTE PTR [edi]
  413141:	mov    bh,0xda
  413143:	lods   al,BYTE PTR ds:[esi]
  413144:	popf   
  413145:	fild   DWORD PTR ds:0x3c1279e8
  41314b:	sub    eax,0xf1f70e4
  413150:	add    eax,0x42c9f66b
  413155:	pop    edx
  413156:	sahf   
  413157:	rcr    BYTE PTR [ebx],cl
  413159:	(bad)  
  41315a:	shl    BYTE PTR [esp+esi*2],1
  41315d:	jecxz  0x413166
  41315f:	inc    edx
  413160:	add    eax,0x3c51e422
  413165:	xor    eax,ebp
  413167:	sub    ebp,DWORD PTR [ebx-0x29]
  41316a:	inc    esi
  41316b:	inc    ebx
  41316c:	out    dx,al
  41316d:	sub    ecx,esp
  41316f:	xlat   BYTE PTR ds:[ebx]
  413170:	jo     0x4131c0
  413172:	inc    ebp
  413173:	pop    ss
  413174:	cmc    
  413175:	inc    edx
  413176:	fadd   st,st(3)
  413178:	daa    
  413179:	push   eax
  41317a:	call   0xfaedb9c7
  41317f:	add    bh,BYTE PTR [edx-0x3030ec15]
  413185:	jns    0x4131ff
  413187:	rcl    BYTE PTR [edi+eiz*4],cl
  41318a:	rol    BYTE PTR [ebp-0x37],1
  41318d:	mov    ds:0x9d5a9b75,al
  413192:	xor    BYTE PTR [esi],ah
  413194:	push   ss
  413195:	jmp    0x413152
  413197:	mov    cl,0x92
  413199:	or     DWORD PTR [ecx],eax
  41319b:	test   DWORD PTR [eax+0x3b],esi
  41319e:	cmp    DWORD PTR [esi-0x18afa730],edi
  4131a4:	(bad)  
  4131a5:	sbb    edi,esi
  4131a7:	inc    esi
  4131a8:	fwait
  4131a9:	mov    ds:0x49ef7b03,al
  4131ae:	out    dx,al
  4131af:	and    BYTE PTR [ebx-0x5],dh
  4131b2:	out    dx,eax
  4131b3:	lea    ebp,[esp+ebx*2+0x3c]
  4131b7:	dec    ebx
  4131b8:	inc    ebx
  4131b9:	retf   
  4131ba:	push   esi
  4131bb:	push   ebx
  4131bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131bd:	popf   
  4131be:	scas   eax,DWORD PTR es:[edi]
  4131bf:	lds    ecx,FWORD PTR [ebp-0x61a2daf8]
  4131c5:	cmp    BYTE PTR ds:0x72a648b0,ch
  4131cb:	xor    eax,0xb8f610f1
  4131d0:	stc    
  4131d1:	gs stos BYTE PTR es:[edi],al
  4131d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d4:	xchg   ecx,eax
  4131d5:	pop    ds
  4131d6:	in     al,0x1
  4131d8:	daa    
  4131d9:	popa   
  4131da:	xor    ah,al
  4131dc:	jo     0x4131c8
  4131de:	fnsave ds:0x87297f8a
  4131e4:	ja     0x4131c1
  4131e6:	cmp    eax,0xd019f51a
  4131eb:	test   BYTE PTR [ecx+0x1570c3f1],bl
  4131f1:	dec    edi
  4131f2:	sti    
  4131f3:	neg    ch
  4131f5:	js     0x413255
  4131f7:	jae    0x413221
  4131f9:	jbe    0x413209
  4131fb:	and    BYTE PTR [ecx+0x2a],0xa9
  4131ff:	and    DWORD PTR [ecx],ebp
  413201:	jl     0x41321c
  413203:	and    eax,0x68d39a95
  413208:	into   
  413209:	jge    0x413216
  41320b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41320c:	push   edx
  41320d:	test   eax,0xaaafb1a3
  413212:	cmp    BYTE PTR [ecx],ch
  413214:	outs   dx,BYTE PTR ds:[esi]
  413215:	int    0xce
  413217:	pop    esp
  413218:	add    eax,0x74a387d6
  41321d:	pusha  
  41321e:	(bad)  
  41321f:	aad    0xa
  413221:	stos   BYTE PTR es:[edi],al
  413222:	pusha  
  413223:	(bad)  [edx+0x7e]
  413226:	mov    dl,0x76
  413228:	test   BYTE PTR [edi+0x66099978],0x6b
  41322f:	jns    0x413214
  413231:	push   0x26d542b0
  413236:	add    ecx,DWORD PTR [edx-0x3c5e8689]
  41323c:	inc    eax
  41323d:	xor    al,0x70
  41323f:	shl    DWORD PTR [ebp-0x2e],0xb2
  413243:	cmp    BYTE PTR [edi+0x51708cc1],cl
  413249:	(bad)  
  41324a:	cmp    eax,0x95a14359
  41324f:	and    eax,DWORD PTR [eax]
  413251:	rol    cl,cl
  413253:	cmp    al,0xd9
  413255:	int3   
  413256:	mov    al,0x14
  413258:	rcl    BYTE PTR [ebx],1
  41325a:	dec    ebp
  41325b:	loop   0x413238
  41325d:	mov    dl,0xa4
  41325f:	pop    ecx
  413260:	or     eax,DWORD PTR [ebx]
  413262:	add    eax,0x7e2794c
  413267:	add    eax,0x703251ae
  41326c:	sub    esp,edi
  41326e:	dec    esi
  41326f:	(bad)  
  413270:	jnp    0x4132f1
  413272:	sub    eax,0x8c0fc3da
  413277:	and    esp,DWORD PTR [esi+edx*4+0x3f5e597e]
  41327e:	mov    al,0x89
  413280:	xor    dl,BYTE PTR [edi]
  413282:	mov    fs,WORD PTR [ecx+0x5d]
  413285:	data16 cli 
  413287:	dec    eax
  413288:	retf   
  413289:	scas   eax,DWORD PTR es:[edi]
  41328a:	add    al,0x8b
  41328c:	mov    esi,0xba538da8
  413291:	jecxz  0x41325d
  413293:	xchg   al,bl
  413295:	and    eax,0x49c298df
  41329a:	mov    dl,0x5f
  41329c:	add    esp,eax
  41329e:	clc    
  41329f:	fild   QWORD PTR [eax]
  4132a1:	loope  0x413240
  4132a3:	jbe    0x4132a9
  4132a5:	out    0x17,eax
  4132a7:	loopne 0x41326f
  4132a9:	inc    esi
  4132aa:	mov    ch,0x97
  4132ac:	cld    
  4132ad:	cmp    dh,BYTE PTR [ebx]
  4132af:	dec    ecx
  4132b0:	push   ds
  4132b1:	dec    ecx
  4132b2:	and    al,0xf7
  4132b4:	int    0x13
  4132b6:	sub    DWORD PTR [esi],esp
  4132b8:	std    
  4132b9:	or     al,0x25
  4132bb:	mov    ecx,0xa132a380
  4132c0:	push   ds
  4132c1:	div    esi
  4132c3:	lea    ebp,[edi-0x67]
  4132c6:	mov    ch,0xee
  4132c8:	mov    ebp,0xc081a7be
  4132cd:	lahf   
  4132ce:	jmp    0x3ce2:0x6317bd3d
  4132d5:	lods   eax,DWORD PTR ds:[esi]
  4132d6:	rcl    DWORD PTR [esi+0x37],1
  4132d9:	out    0xa9,al
  4132db:	sbb    al,BYTE PTR [edi]
  4132dd:	das    
  4132de:	retf   
  4132df:	pop    edx
  4132e0:	cmp    DWORD PTR [edi-0x50c3928],edi
  4132e6:	push   esi
  4132e7:	mov    bl,0x9d
  4132e9:	mov    al,0x91
  4132eb:	push   ss
  4132ec:	xor    edi,ecx
  4132ee:	popa   
  4132ef:	rcr    DWORD PTR [edx-0x70],1
  4132f2:	jge    0x413333
  4132f4:	dec    BYTE PTR [edi-0x56]
  4132f7:	rcr    DWORD PTR [edi-0x74],cl
  4132fa:	outs   dx,BYTE PTR ds:[esi]
  4132fb:	mov    ecx,0x536d5aa9
  413300:	inc    edi
  413301:	push   dx
  413303:	pushf  
  413304:	ret    
  413305:	int3   
  413306:	call   0x3d0568d1
  41330b:	mov    cl,0x68
  41330d:	xor    BYTE PTR [ebx-0x6b05eb3b],0x19
  413314:	lds    edx,FWORD PTR [ecx]
  413316:	add    esi,ebx
  413318:	pop    edi
  413319:	xchg   edx,eax
  41331a:	lahf   
  41331b:	xchg   edi,eax
  41331c:	add    DWORD PTR [ecx-0x18],ebx
  41331f:	sub    al,0x6
  413321:	push   esi
  413322:	(bad)  
  413323:	mov    ebp,0xf4168d78
  413328:	push   ebp
  413329:	je     0x4132e6
  41332b:	or     al,0xe7
  41332d:	xchg   ebx,eax
  41332e:	xor    al,0xb3
  413330:	test   eax,0x8f2a0532
  413335:	loopne 0x41339e
  413337:	shl    ebp,cl
  413339:	cmc    
  41333a:	das    
  41333b:	xor    ch,BYTE PTR ds:0x4633cc72
  413341:	loope  0x4132d2
  413343:	aad    0x66
  413345:	jno    0x4132c7
  413347:	add    dh,BYTE PTR [edi]
  413349:	dec    eax
  41334a:	and    BYTE PTR [ebp+0x38],dh
  41334d:	jns    0x41338a
  41334f:	(bad)  
  413351:	fidiv  DWORD PTR [ecx+0x756ffef4]
  413357:	ret    
  413358:	mov    bh,BYTE PTR [ecx]
  41335a:	inc    ecx
  41335b:	sub    esi,DWORD PTR [ecx+ecx*1-0xb834e45]
  413362:	push   eax
  413363:	mov    dl,0x4b
  413365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413366:	add    DWORD PTR [ebp+0x144a6851],edx
  41336c:	mov    BYTE PTR [esi-0x3ded113],bl
  413372:	mov    BYTE PTR [eax],0xa2
  413375:	lahf   
  413376:	fcom   DWORD PTR [esi]
  413378:	or     eax,0xda0e30fb
  41337d:	fist   DWORD PTR [edx-0x3fb77ab9]
  413383:	sar    DWORD PTR [edx+0x29c8dff5],0xa5
  41338a:	mov    eax,0xe58ee646
  41338f:	pop    ebp
  413390:	fs cdq 
  413392:	fsub   DWORD PTR [edx]
  413394:	addr16 sbb ebx,ecx
  413397:	jl     0x4133dc
  413399:	stos   DWORD PTR es:[edi],eax
  41339a:	cmp    ecx,esp
  41339c:	popa   
  41339d:	stos   DWORD PTR es:[edi],eax
  41339e:	fs xchg esi,eax
  4133a0:	pop    eax
  4133a1:	ficom  DWORD PTR [ebx]
  4133a3:	popa   
  4133a4:	test   BYTE PTR [eax-0x25],dh
  4133a7:	leave  
  4133a8:	jne    0x41339e
  4133aa:	loopne 0x413429
  4133ac:	call   DWORD PTR [eax]
  4133ae:	push   cs
  4133af:	or     bh,BYTE PTR ss:0xe9af2318
  4133b6:	xchg   esi,eax
  4133b7:	xor    dh,BYTE PTR ds:0xd705a54c
  4133bd:	aad    0x99
  4133bf:	scas   eax,DWORD PTR es:[edi]
  4133c0:	jmp    0xc462:0x69067b18
  4133c7:	sar    BYTE PTR [edx+ecx*4-0x7b8a2cb2],cl
  4133ce:	idiv   BYTE PTR [ebp+0x2d]
  4133d1:	push   cs
  4133d2:	arpl   WORD PTR [ecx-0xea6763b],cx
  4133d8:	test   DWORD PTR [eax],ecx
  4133da:	xchg   edx,eax
  4133db:	rcr    BYTE PTR [edi+0xb],cl
  4133de:	(bad)  
  4133df:	fistp  WORD PTR [esi-0x50612f5f]
  4133e5:	jmp    0x15ad:0x1bf591cd
  4133ec:	scas   al,BYTE PTR es:[edi]
  4133ed:	mov    ah,BYTE PTR cs:[ecx+0xb9317f9]
  4133f4:	xor    al,0x11
  4133f6:	and    ecx,DWORD PTR [ebx+edx*8]
  4133f9:	adc    DWORD PTR [edx+0x61],edi
  4133fc:	pop    ds
  4133fd:	bound  eax,QWORD PTR [edi+0x7d]
  413400:	xor    eax,0xedd911ae
  413405:	call   DWORD PTR [edi+0x6d]
  413408:	xor    eax,0x481e996d
  41340d:	stc    
  41340e:	xor    esi,DWORD PTR [edi+0x22bfac36]
  413414:	sub    eax,0xd8e10435
  413419:	jbe    0x4133d7
  41341b:	cmc    
  41341c:	cli    
  41341d:	call   0x85ef67cd
  413422:	aad    0xf7
  413424:	push   0xffffffc9
  413426:	(bad)  
  413427:	in     al,dx
  413428:	inc    ebx
  413429:	mov    DWORD PTR [esi+0x40],esi
  41342c:	out    0x92,eax
  41342e:	or     BYTE PTR [ecx+0x66a88281],0x92
  413435:	cmp    al,0x74
  413437:	stos   BYTE PTR es:[edi],al
  413438:	push   ebp
  413439:	mov    ds:0x9f8b6b9a,al
  41343e:	outs   dx,DWORD PTR ds:[esi]
  41343f:	loopne 0x413476
  413441:	(bad)  
  413442:	ret    0xf5ae
  413445:	dec    eax
  413446:	neg    esi
  413448:	mov    ebx,0x45141902
  41344d:	sub    eax,0x5fb3435a
  413452:	or     eax,0x54d9c42a
  413457:	xor    ebx,DWORD PTR [edx-0x20c368f6]
  41345d:	lar    esi,bp
  413460:	adc    BYTE PTR [ebx],ch
  413462:	cld    
  413463:	es and eax,0x3c9ac4ee
  413469:	xlat   BYTE PTR ds:[ebx]
  41346a:	ss pop ebx
  41346c:	clc    
  41346d:	sub    ebp,DWORD PTR [edx]
  41346f:	lock shl eax,cl
  413472:	jno    0x413431
  413474:	add    eax,0x85014a23
  413479:	out    dx,al
  41347a:	iret   
  41347b:	fisub  DWORD PTR [edx+0x77d0e4e3]
  413481:	idiv   DWORD PTR [edi]
  413483:	out    0xe8,eax
  413485:	mov    esp,0xdf9f3538
  41348a:	mov    al,ds:0xd635cd0c
  41348f:	(bad)  
  413491:	mov    BYTE PTR [ebp-0x359644cf],bh
  413497:	test   DWORD PTR [edi-0x4ab15cdc],esi
  41349d:	aam    0xa6
  41349f:	mov    bh,0xec
  4134a1:	pop    ebx
  4134a2:	lock adc eax,0x2bb790b0
  4134a8:	push   es
  4134a9:	frstor [ebx+eax*2-0x4f]
  4134ad:	dec    edx
  4134ae:	sbb    DWORD PTR [edx+0x7df8b0de],0xffffff9a
  4134b5:	inc    esp
  4134b6:	xchg   ecx,eax
  4134b7:	mov    eax,0xd8d6d2c1
  4134bc:	mov    WORD PTR [edx+edx*8],ss
  4134bf:	data16 cli 
  4134c1:	mov    ss:0x34fa1d3c,eax
  4134c7:	retf   0xe2ea
  4134ca:	mov    bl,BYTE PTR [esi+esi*2]
  4134cd:	xor    al,0x11
  4134cf:	stos   DWORD PTR es:[edi],eax
  4134d0:	rcl    DWORD PTR [ebp+0x17],1
  4134d3:	dec    edi
  4134d4:	test   eax,0xe8fba57d
  4134d9:	std    
  4134da:	sbb    BYTE PTR [ebx],bl
  4134dc:	outs   dx,DWORD PTR ds:[esi]
  4134dd:	adc    al,0xad
  4134df:	xchg   ebx,eax
  4134e0:	mov    ds:0xe780a217,al
  4134e5:	mov    ds:0xda414c6c,eax
  4134ea:	jmp    0x41349a
  4134ec:	xor    ebp,DWORD PTR [eax]
  4134ee:	es lock fucomp st(7)
  4134f2:	dec    ecx
  4134f3:	mov    ch,0x31
  4134f5:	xchg   edx,eax
  4134f6:	sti    
  4134f7:	outs   dx,BYTE PTR ds:[esi]
  4134f8:	call   0xfd00:0xa6132b7b
  4134ff:	dec    edx
  413500:	push   edi
  413501:	pop    es
  413502:	jnp    0x4134c8
  413504:	adc    edx,DWORD PTR [esi*4+0x4bf93170]
  41350b:	pushf  
  41350c:	lea    esp,[edi-0x38c153b1]
  413512:	daa    
  413513:	fs repnz pop ds
  413516:	shr    esp,0xb6
  413519:	jno    0x41350d
  41351b:	(bad)  
  41351c:	icebp  
  41351d:	xchg   esp,eax
  41351e:	mov    dl,0xab
  413520:	nop
  413521:	sahf   
  413522:	in     al,dx
  413523:	adc    DWORD PTR [edx-0x8d1ab4c],eax
  413529:	and    esp,eax
  41352b:	inc    esp
  41352c:	int3   
  41352d:	scas   al,BYTE PTR es:[edi]
  41352e:	call   0xe76d:0x1f4ded40
  413535:	push   esp
  413536:	xchg   esp,eax
  413537:	fsub   DWORD PTR [edx+0x35e9615d]
  41353d:	sub    DWORD PTR [edx],ecx
  41353f:	scas   al,BYTE PTR es:[edi]
  413540:	jno    0x4134de
  413542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413543:	lock mov eax,ds:0x5692cae3
  413549:	shl    esp,1
  41354b:	loop   0x413575
  41354d:	jnp    0x41358b
  41354f:	loopne 0x413503
  413551:	iret   
  413552:	repz in eax,0x67
  413555:	icebp  
  413556:	(bad)  
  413557:	push   eax
  413558:	(bad)  
  413559:	sub    al,0x1c
  41355b:	aad    0xa2
  41355d:	pop    edi
  41355e:	pusha  
  41355f:	push   ecx
  413560:	pop    ebp
  413561:	pop    ds
  413562:	xor    bh,BYTE PTR [ebp-0x53]
  413565:	push   es
  413566:	pop    ebp
  413567:	or     ebp,edi
  413569:	dec    edx
  41356a:	mov    eax,0xcb0f3c28
  41356f:	cmp    eax,0x3597961d
  413574:	add    DWORD PTR ds:0x3f2cb8b9,ecx
  41357a:	and    eax,0x2a7cf710
  41357f:	sub    DWORD PTR [ecx+eax*4-0x74],eax
  413583:	dec    esp
  413584:	outs   dx,BYTE PTR ds:[esi]
  413585:	enter  0x7387,0x75
  413589:	fld    QWORD PTR [esi+0xc0e026e]
  41358f:	add    BYTE PTR [ecx+0x5664c7e4],bl
  413595:	mov    eax,0xb14b075a
  41359a:	jmp    0x413532
  41359c:	stc    
  41359d:	aad    0x5f
  41359f:	adc    al,0xdf
  4135a1:	pop    ecx
  4135a2:	scas   eax,DWORD PTR es:[edi]
  4135a3:	jmp    0xcc44:0xbbed0f6d
  4135aa:	jb     0x4135a3
  4135ac:	test   eax,0xe337927f
  4135b1:	(bad)  
  4135b2:	pop    ds
  4135b3:	or     al,0x44
  4135b5:	mov    ds:0xd930ff2,al
  4135ba:	test   eax,0x94552b07
  4135bf:	fmul   QWORD PTR [ebp-0x5e62791f]
  4135c5:	retf   0xb9db
  4135c8:	das    
  4135c9:	adc    eax,0x6c6235ec
  4135ce:	sbb    dh,BYTE PTR [ebp-0xe022bc6]
  4135d4:	int    0x2c
  4135d6:	test   DWORD PTR fs:[edx-0x36145337],esi
  4135dd:	stos   BYTE PTR es:[edi],al
  4135de:	fmul   st,st(7)
  4135e0:	jbe    0x41356d
  4135e2:	add    BYTE PTR [edi],bl
  4135e4:	xchg   DWORD PTR [edi+0x66fddd0e],ecx
  4135ea:	(bad)  
  4135eb:	cli    
  4135ec:	mov    edx,0xa6e94663
  4135f1:	or     DWORD PTR [esi],esp
  4135f3:	lds    edi,FWORD PTR [ebp-0xfcb3253]
  4135f9:	nop
  4135fa:	cmp    ebx,DWORD PTR [edx-0x22]
  4135fd:	icebp  
  4135fe:	arpl   WORD PTR es:[ebx+0x4d1d7f94],ax
  413605:	in     eax,dx
  413606:	add    BYTE PTR [ebp-0x7763e2e1],cl
  41360c:	stos   BYTE PTR es:[edi],al
  41360d:	mov    dl,0xa2
  41360f:	rcr    DWORD PTR [ecx+0x5],1
  413612:	dec    edi
  413613:	pop    esi
  413614:	sbb    edx,ebx
  413616:	sbb    dl,BYTE PTR [esi+0x1f74b62]
  41361c:	(bad)  [eax+0x69e049ac]
  413622:	sub    ch,dh
  413624:	sub    BYTE PTR [ebx+edx*8-0x2ae599c9],dh
  41362b:	stos   DWORD PTR es:[edi],eax
  41362c:	jno    0x413633
  41362e:	nop
  41362f:	jb     0x413626
  413631:	addr16 mov ebp,0x13afaa6c
  413637:	test   eax,0x85faee11
  41363c:	cwde   
  41363d:	sub    al,0x23
  41363f:	dec    esi
  413640:	repnz mov cl,0x96
  413643:	sti    
  413644:	mov    eax,ds:0xec278bd3
  413649:	inc    ebx
  41364a:	sti    
  41364b:	out    dx,al
  41364c:	les    esi,FWORD PTR [ebx]
  41364e:	add    BYTE PTR [ecx],dl
  413650:	cs pop edi
  413652:	cmc    
  413653:	mov    eax,0xf5d21322
  413658:	push   ebx
  413659:	or     dh,BYTE PTR [ebp+0x1441c31f]
  41365f:	cs jo  0x4136dd
  413662:	xor    al,BYTE PTR [edi-0x6a4955df]
  413668:	fwait
  413669:	sbb    bh,BYTE PTR [ecx]
  41366b:	loopne 0x413623
  41366d:	pushf  
  41366e:	test   DWORD PTR [ebx+0x70],ebp
  413671:	arpl   WORD PTR [esi+edi*4],dx
  413674:	xor    cl,BYTE PTR [ebx-0x49]
  413677:	mov    al,ds:0x144a264a
  41367c:	mov    WORD PTR [eax+0x635c293b],?
  413682:	sti    
  413683:	or     BYTE PTR [ebx+0x74435e04],bl
  413689:	retf   
  41368a:	dec    eax
  41368b:	xor    esp,DWORD PTR [edx]
  41368d:	push   esi
  41368e:	sub    ch,bh
  413690:	test   DWORD PTR [edi-0x16],edx
  413693:	jo     0x4136f0
  413695:	adc    DWORD PTR [eax],ecx
  413697:	add    esp,DWORD PTR [esi+0x2a]
  41369a:	xchg   ebx,eax
  41369b:	scas   eax,DWORD PTR es:[edi]
  41369c:	dec    esi
  41369d:	imul   edi,edx,0xd4f0aa0
  4136a3:	mov    ds:0x79e27633,al
  4136a8:	in     al,0xe5
  4136aa:	(bad)  [ebx]
  4136ac:	cmp    al,0xf2
  4136ae:	push   edx
  4136af:	sar    BYTE PTR [eax],cl
  4136b1:	arpl   WORD PTR [ecx],si
  4136b3:	adc    eax,0x908eb4dc
  4136b8:	mov    ah,BYTE PTR [esi+0x56]
  4136bb:	not    DWORD PTR [edx+ecx*4-0x74]
  4136bf:	jmp    0xcbf87aa9
  4136c4:	shl    BYTE PTR [edx+0x7f],0x20
  4136c8:	mov    bh,0xfe
  4136ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136cb:	xchg   esp,eax
  4136cc:	mov    bh,0x2b
  4136ce:	retf   0xcc1
  4136d1:	adc    DWORD PTR [eax-0x16151088],edx
  4136d7:	cmp    ecx,DWORD PTR [edi-0x3f90a611]
  4136dd:	test   eax,0xc2f55a5d
  4136e2:	xchg   ebp,eax
  4136e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e4:	pop    ecx
  4136e5:	fld    QWORD PTR [ecx]
  4136e7:	inc    eax
  4136e8:	cmc    
  4136e9:	ror    DWORD PTR [ebx+ebx*4],0xf
  4136ed:	add    esi,DWORD PTR [edi+0x30cd4129]
  4136f3:	pushf  
  4136f4:	xor    eax,0x7aa74a1e
  4136f9:	cmp    dh,bh
  4136fb:	jp     0x413717
  4136fd:	xchg   esp,eax
  4136fe:	push   0xfffffff6
  413700:	sub    DWORD PTR [ecx],edx
  413702:	in     eax,dx
  413703:	jns    0x413734
  413705:	and    BYTE PTR [eax+eax*1-0x57],dl
  413709:	les    esi,FWORD PTR [ecx+0x21bfa5d9]
  41370f:	sub    esp,esp
  413711:	pop    esi
  413712:	out    0xea,al
  413714:	mov    bl,0xa1
  413716:	mov    ah,bl
  413718:	push   0xffffffc5
  41371a:	aam    0xdf
  41371c:	(bad)  
  41371e:	mov    esp,0xff17a
  413723:	xor    BYTE PTR [ebx-0x252e0147],ch
  413729:	sahf   
  41372a:	ins    DWORD PTR es:[edi],dx
  41372b:	iret   
  41372c:	lods   al,BYTE PTR ds:[esi]
  41372d:	adc    BYTE PTR [ebp-0x4431aac0],al
  413733:	or     dh,BYTE PTR [ecx+eiz*2]
  413736:	mov    ecx,0xf1670b6
  41373b:	sub    ah,cl
  41373d:	mov    ds:0x3fb4c96f,al
  413742:	sti    
  413743:	pop    ebp
  413744:	out    0xa3,eax
  413746:	pop    ebp
  413747:	ret    
  413748:	fistp  QWORD PTR [ebx+0x44]
  41374b:	mov    bh,ch
  41374d:	jno    0x41372c
  41374f:	retf   
  413750:	test   BYTE PTR [esi+esi*1],cl
  413753:	jbe    0x413700
  413755:	iret   
  413756:	mov    ecx,0xae725f0e
  41375b:	fisttp WORD PTR [edi]
  41375d:	(bad)  
  41375e:	js     0x413774
  413760:	shl    BYTE PTR [ecx-0x1555842e],1
  413766:	test   BYTE PTR [edi-0x60316de2],al
  41376c:	es push 0x8f833ed0
  413772:	mov    ch,0x5f
  413774:	mov    dh,0x7b
  413776:	push   esi
  413777:	test   eax,0xd1127efa
  41377c:	inc    esp
  41377d:	pusha  
  41377e:	lods   al,BYTE PTR ds:[esi]
  41377f:	mov    ah,0x7e
  413781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413782:	and    eax,0xaba49956
  413787:	jnp    0x413737
  413789:	out    dx,al
  41378a:	dec    edx
  41378b:	xor    al,0xa1
  41378d:	cmp    DWORD PTR [ebx+eax*4],esp
  413790:	jp     0x413769
  413792:	xor    BYTE PTR [ebx+eax*1],bl
  413795:	pop    edx
  413796:	sbb    cl,cl
  413798:	int    0xe2
  41379a:	xor    ecx,DWORD PTR [ebx]
  41379c:	outs   dx,BYTE PTR ds:[esi]
  41379d:	mov    es,WORD PTR [edi-0x7e5c257f]
  4137a3:	cmp    BYTE PTR [edi+eiz*1],ah
  4137a6:	cli    
  4137a7:	imul   edi,edi,0x8de01f0a
  4137ad:	stc    
  4137ae:	xchg   edx,eax
  4137af:	test   al,0x11
  4137b1:	shl    DWORD PTR ds:0xb06cfd43,0xfd
  4137b8:	imul   ecx,DWORD PTR [ecx],0xd2df4391
  4137be:	shr    BYTE PTR [ebp+ebp*4-0x48],1
  4137c2:	mov    dh,0x5d
  4137c4:	in     eax,dx
  4137c5:	pop    ebx
  4137c6:	adc    eax,0xbdd91d35
  4137cb:	fdivr  DWORD PTR [ebx+0x32b3f489]
  4137d1:	pusha  
  4137d2:	es jo  0x4137a1
  4137d5:	iret   
  4137d6:	les    ebx,FWORD PTR [ebx+esi*2]
  4137d9:	dec    edx
  4137da:	enter  0x6873,0x4d
  4137de:	imul   edx,ecx,0xe4577c7c
  4137e4:	jbe    0x4137f7
  4137e6:	fnstenv [edx]
  4137e8:	int3   
  4137e9:	enter  0x7cb8,0x21
  4137ed:	cmp    al,BYTE PTR [esi-0x5d]
  4137f0:	fistp  WORD PTR [esi]
  4137f2:	push   es
  4137f3:	adc    BYTE PTR [ecx+0x6f6e895a],ch
  4137f9:	rcr    BYTE PTR [ebx-0x714a4590],cl
  4137ff:	loope  0x41383d
  413801:	fmul   st,st(1)
  413803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413804:	sub    BYTE PTR [ebp-0x2722401b],bh
  41380a:	div    BYTE PTR [edi-0x29]
  41380d:	sub    BYTE PTR [ebp-0x2e],ch
  413810:	sar    BYTE PTR ds:0xc5a8f10,0xda
  413817:	stos   DWORD PTR es:[edi],eax
  413818:	xchg   edi,eax
  413819:	sub    BYTE PTR [edx],ch
  41381b:	mov    ebx,0x5ac4360e
  413820:	push   0xff871041
  413825:	(bad)  
  413826:	mov    ecx,0x2582710c
  41382b:	xor    BYTE PTR [edi+ebx*8],0x27
  41382f:	xor    al,0x3c
  413831:	jmp    0x670d22e8
  413836:	popf   
  413837:	pop    eax
  413838:	scas   eax,DWORD PTR es:[edi]
  413839:	neg    DWORD PTR [ebp-0x50]
  41383c:	mov    dl,0x1c
  41383e:	(bad)  
  413841:	fadd   DWORD PTR [edi+0xe0fcf82]
  413847:	pushf  
  413848:	repz sbb dl,BYTE PTR [ebx+0x77]
  41384c:	mov    al,ds:0x37913e59
  413851:	leave  
  413852:	and    eax,0xa4eb0c10
  413857:	xchg   esp,eax
  413858:	(bad)  [eax-0x34]
  41385b:	int    0x25
  41385d:	repnz push eax
  41385f:	pushf  
  413860:	push   esi
  413861:	fistp  DWORD PTR [ebx]
  413863:	push   ebp
  413864:	and    DWORD PTR [esp+edx*8],ebp
  413867:	gs ss ins DWORD PTR es:[edi],dx
  41386a:	inc    ebp
  41386b:	sbb    eax,0x8103d38
  413870:	popa   
  413871:	out    0x69,al
  413873:	sub    DWORD PTR [edi],0x198ee836
  413879:	mov    ebp,0xc4b86a3e
  41387e:	sub    DWORD PTR [ebp+esi*1-0x661ee5f9],ebx
  413885:	add    eax,0xa7377863
  41388a:	cdq    
  41388b:	push   ebp
  41388c:	cld    
  41388d:	pop    ebp
  41388e:	mov    ecx,0x3d5c5213
  413893:	mov    esi,0x7fe30311
  413898:	jp     0x413852
  41389a:	es pop edx
  41389c:	push   cs
  41389d:	pop    edx
  41389e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41389f:	imul   esp,DWORD PTR [edx],0xa0a872c1
  4138a5:	push   esp
  4138a6:	cmp    al,0x14
  4138a8:	pop    ebx
  4138a9:	push   eax
  4138aa:	mov    al,0x44
  4138ac:	pusha  
  4138ad:	push   es
  4138ae:	pop    ebx
  4138af:	mov    esi,0x4ab48521
  4138b4:	stos   DWORD PTR es:[edi],eax
  4138b5:	imul   edx,edi,0x59
  4138b8:	push   ebp
  4138b9:	sahf   
  4138ba:	cli    
  4138bb:	xchg   esi,eax
  4138bc:	aas    
  4138bd:	popf   
  4138be:	sbb    DWORD PTR [edx-0x7f3f204f],edi
  4138c4:	sbb    BYTE PTR [edx+0x4a566266],ch
  4138ca:	jns    0x41385c
  4138cc:	cmp    ah,cl
  4138ce:	aaa    
  4138cf:	inc    esp
  4138d0:	call   0xfd4b:0x2090dce8
  4138d7:	cwde   
  4138d8:	or     al,0xc7
  4138da:	xchg   esp,eax
  4138db:	xlat   BYTE PTR ds:[ebx]
  4138dc:	adc    al,0x66
  4138de:	pop    ecx
  4138e0:	push   ss
  4138e1:	nop
  4138e2:	or     eax,0x91408bea
  4138e7:	div    ebx
  4138e9:	xchg   ebp,eax
  4138ea:	ficom  DWORD PTR [eax-0x258e09ae]
  4138f0:	ja     0x4138dd
  4138f2:	jecxz  0x413892
  4138f4:	xchg   ebp,eax
  4138f5:	dec    esi
  4138f6:	invd   
  4138f8:	cs in  al,0xe2
  4138fb:	test   al,0xe1
  4138fd:	mov    ds:0x96a47670,al
  413902:	mov    esp,0xa2a0c9da
  413908:	arpl   WORD PTR [ebp-0x7ae90774],bp
  41390e:	jge    0x41389e
  413910:	aas    
  413911:	int    0xc0
  413913:	popa   
  413914:	clc    
  413915:	xlat   BYTE PTR ds:[ebx]
  413916:	xlat   BYTE PTR ds:[ebx]
  413917:	jne    0x4138f2
  413919:	retf   
  41391a:	mov    dl,0x51
  41391c:	std    
  41391d:	fisub  DWORD PTR [ebp+0x22c13815]
  413923:	hlt    
  413924:	push   ds
  413925:	xchg   BYTE PTR [ecx],dh
  413927:	ins    DWORD PTR es:[edi],dx
  413928:	pop    ebp
  413929:	or     dh,BYTE PTR [eax+0x4fa63761]
  41392f:	or     eax,0x41c68182
  413934:	dec    ecx
  413935:	pushf  
  413936:	ins    DWORD PTR es:[edi],dx
  413937:	pushf  
  413938:	push   0xe84427f6
  41393d:	out    0x3a,al
  41393f:	fst    DWORD PTR [ebx+eiz*4]
  413942:	jno    0x413963
  413944:	test   BYTE PTR [edi],cl
  413946:	xor    BYTE PTR [eax-0x41f62200],bh
  41394c:	addr16 inc eax
  41394e:	fadd   QWORD PTR [ecx+0x5fce8df9]
  413954:	imul   ecx,DWORD PTR [ecx-0x4b],0xbfa76546
  41395b:	or     eax,0x679fae2f
  413960:	mov    al,0xb0
  413962:	adc    DWORD PTR [ebx-0x53],0x7c
  413966:	push   ebx
  413967:	mov    ds:0x3670d641,eax
  41396c:	sbb    eax,0x71730fd1
  413971:	sbb    bh,BYTE PTR [edx-0x76113aae]
  413977:	(bad)  
  413978:	mov    bl,0x6c
  41397a:	das    
  41397b:	xchg   ebx,eax
  41397c:	xchg   esi,eax
  41397d:	ficomp DWORD PTR [ebp-0x38ca4c8c]
  413983:	xchg   DWORD PTR [ebx-0x55],ecx
  413986:	xchg   BYTE PTR gs:0xc966e876,dl
  41398d:	ins    DWORD PTR es:[edi],dx
  41398e:	jg     0x4139b5
  413990:	cwde   
  413991:	outs   dx,DWORD PTR ds:[esi]
  413992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413993:	das    
  413994:	or     eax,0x23e2df55
  413999:	loopne 0x4139ad
  41399b:	fdiv   DWORD PTR [edi+0x6d493168]
  4139a1:	test   al,0x6d
  4139a3:	adc    BYTE PTR [edi],0xb8
  4139a6:	dec    esi
  4139a7:	es dec esi
  4139a9:	or     BYTE PTR ds:0x9c6bc5e4,bl
  4139af:	jl     0x413931
  4139b1:	jnp    0x4139e5
  4139b3:	or     DWORD PTR [edi+0x3b],esp
  4139b6:	call   0xa555:0x2c705e0f
  4139bd:	push   0x7b
  4139bf:	rcr    BYTE PTR [eax+0x75],0x4e
  4139c3:	mov    bh,0x9e
  4139c5:	aaa    
  4139c6:	mov    edx,0xfd0351c7
  4139cb:	pop    eax
  4139cc:	cmp    DWORD PTR [edi],0x62cda930
  4139d2:	cs das 
  4139d4:	popf   
  4139d5:	xchg   esi,eax
  4139d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d7:	and    eax,ecx
  4139d9:	test   al,0x8b
  4139db:	jp     0x4139b5
  4139dd:	or     ah,BYTE PTR [eax]
  4139df:	retf   
  4139e0:	sub    DWORD PTR [edi+0x6b39946e],ecx
  4139e6:	lods   eax,DWORD PTR ds:[esi]
  4139e7:	jno    0x413979
  4139e9:	das    
  4139ea:	pop    ebx
  4139eb:	cli    
  4139ec:	mov    WORD PTR [ecx-0x7901dda],fs
  4139f2:	add    bh,BYTE PTR [edi]
  4139f4:	aam    0x6a
  4139f6:	or     BYTE PTR [ecx],bh
  4139f8:	push   es
  4139f9:	sbb    al,0xa3
  4139fb:	mov    al,ds:0x5d09d61f
  413a00:	mov    al,ds:0xab1736f9
  413a05:	rol    ah,0xf8
  413a08:	das    
  413a09:	cmp    BYTE PTR [ecx+0x57e7052b],dl
  413a0f:	dec    ebx
  413a10:	sub    eax,0xbbaacdf2
  413a15:	mov    ecx,0xfafcf1b9
  413a1a:	mov    esp,DWORD PTR [edx+eiz*1+0x4517a1ab]
  413a21:	xchg   edi,eax
  413a22:	outs   dx,BYTE PTR ds:[esi]
  413a23:	cmc    
  413a24:	lods   al,BYTE PTR ds:[esi]
  413a25:	pusha  
  413a26:	cmp    dl,BYTE PTR [ebx]
  413a28:	retf   0x35b8
  413a2b:	cmp    DWORD PTR [esi+0x53cfd8d2],ecx
  413a31:	jbe    0x4139be
  413a33:	div    BYTE PTR [edi+0x43]
  413a36:	popf   
  413a37:	addr16 sahf 
  413a39:	retf   0x1b75
  413a3c:	mov    ebx,0xcd9e6d9b
  413a41:	push   esi
  413a42:	std    
  413a43:	int3   
  413a44:	sahf   
  413a45:	rcr    BYTE PTR [ebp-0x1f8617e7],1
  413a4b:	int    0x93
  413a4d:	sub    ecx,esp
  413a4f:	xchg   DWORD PTR [ebp+0x77],ecx
  413a52:	mov    edx,0x99ab0446
  413a57:	xor    dh,al
  413a59:	or     BYTE PTR [edi-0x11b24b8b],0x4f
  413a60:	stos   DWORD PTR es:[edi],eax
  413a61:	scas   al,BYTE PTR es:[edi]
  413a62:	fisubr DWORD PTR [eax-0x747ca84e]
  413a68:	mov    ebx,0x8ab22f8c
  413a6d:	ds mov eax,0x145cef33
  413a73:	cld    
  413a74:	cmp    eax,0x15e94312
  413a79:	popa   
  413a7a:	(bad)  
  413a7b:	cmp    al,0xe9
  413a7d:	cmp    eax,0x5032bfa9
  413a82:	aam    0x7f
  413a84:	enter  0xefbe,0x65
  413a88:	and    eax,0xf8586c6b
  413a8d:	sub    eax,DWORD PTR [eax-0x76]
  413a90:	inc    esp
  413a91:	ins    DWORD PTR es:[edi],dx
  413a92:	in     al,0x84
  413a94:	mov    bl,0xed
  413a96:	clc    
  413a97:	retf   
  413a98:	cmc    
  413a99:	mov    esi,0xc3c614a
  413a9e:	mov    dl,0x20
  413aa0:	cmp    BYTE PTR [esp+esi*8+0x2eabdd04],0x95
  413aa8:	cmp    dl,bl
  413aaa:	call   0xe91c:0x31981de6
  413ab1:	mov    ebx,ss
  413ab3:	mov    ds:0xe8cbd863,eax
  413ab8:	arpl   WORD PTR [ebx],ax
  413aba:	jge    0x413a88
  413abc:	fsubr  QWORD PTR [esi]
  413abe:	rcr    BYTE PTR cs:[edx],cl
  413ac1:	inc    ebp
  413ac2:	bound  esp,QWORD PTR [edi]
  413ac4:	mov    ecx,DWORD PTR [eax-0x28474d18]
  413aca:	test   cl,0x5c
  413acd:	mov    eax,0x4a3a73bf
  413ad2:	jecxz  0x413aeb
  413ad4:	fsub   st,st(3)
  413ad6:	push   eax
  413ad7:	clc    
  413ad8:	fcmovnu st,st(6)
  413ada:	push   ebp
  413adb:	js     0x413af9
  413add:	fimul  DWORD PTR [ebx+0x75b1c6cd]
  413ae3:	inc    ebp
  413ae4:	or     esi,esi
  413ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae7:	pushf  
  413ae8:	icebp  
  413ae9:	jmp    0x413a9f
  413aeb:	jg     0x413b41
  413aed:	inc    ecx
  413aee:	mov    ch,BYTE PTR [eax+edi*2+0x3f7b7b48]
  413af5:	shl    ch,0x5c
  413af8:	lock (bad) 
  413afb:	pop    edx
  413afc:	lock mov cl,0xed
  413aff:	mov    WORD PTR [esi+0x6bae5aef],?
  413b05:	mov    ds:0xb3ba383b,eax
  413b0a:	fnstsw WORD PTR [ebp-0x69f1229b]
  413b10:	leave  
  413b11:	mov    dl,0xe5
  413b13:	stos   DWORD PTR es:[edi],eax
  413b14:	dec    ebp
  413b15:	inc    ebx
  413b16:	mov    esi,0xd872356b
  413b1b:	ja     0x413b52
  413b1d:	clc    
  413b1e:	push   0x31
  413b20:	mov    eax,0x54e7c16
  413b25:	mov    eax,0xc0c86725
  413b2a:	jne    0x413b3a
  413b2c:	and    eax,0x99c3eaf6
  413b31:	and    BYTE PTR [esp+eax*4+0x37174a06],bl
  413b38:	add    dl,BYTE PTR [edi+0x24]
  413b3b:	or     dh,BYTE PTR [eax-0x18]
  413b3e:	test   al,0x4a
  413b40:	cwde   
  413b41:	ret    0x2a8e
  413b44:	fisttp QWORD PTR [ebx-0x42]
  413b47:	inc    ebp
  413b48:	xchg   ecx,eax
  413b49:	jno    0x413aec
  413b4b:	xor    ah,BYTE PTR [ecx+0x5]
  413b4e:	mov    ecx,DWORD PTR [edi+eax*4+0x4d91a9b2]
  413b55:	aad    0xa
  413b57:	sar    dl,1
  413b59:	cmc    
  413b5a:	imul   ebp,DWORD PTR [ecx],0xffffffaf
  413b5d:	ss dec eax
  413b5f:	xchg   esi,eax
  413b60:	js     0x413bb5
  413b62:	xchg   BYTE PTR [edx-0x42],bh
  413b65:	pushf  
  413b66:	xchg   ebp,eax
  413b67:	mov    dl,0x9c
  413b69:	das    
  413b6a:	cmp    al,0x16
  413b6c:	pop    ebx
  413b6d:	stos   BYTE PTR es:[edi],al
  413b6e:	dec    edx
  413b6f:	mov    ds:0x19b66b7b,eax
  413b74:	das    
  413b75:	in     eax,dx
  413b76:	sahf   
  413b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b78:	inc    edi
  413b79:	(bad)  
  413b7a:	cli    
  413b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b7c:	mov    DWORD PTR [edi+0x1a],0x3ed710d
  413b83:	pop    ebx
  413b84:	(bad)  
  413b85:	out    0x6a,al
  413b87:	test   eax,0x1246cf4d
  413b8c:	pop    ecx
  413b8d:	retf   
  413b8e:	mov    ebx,0x1f5a7dec
  413b93:	rcr    DWORD PTR ds:0x294fca32,0x9d
  413b9a:	stc    
  413b9b:	mov    ebp,0xfce657b4
  413ba0:	in     al,0xf3
  413ba2:	into   
  413ba3:	fsubr  DWORD PTR cs:[eax]
  413ba6:	(bad)  
  413ba8:	xor    eax,0x95c355ff
  413bad:	pop    ds
  413bae:	sub    al,0x15
  413bb0:	adc    eax,DWORD PTR ds:0xf6958138
  413bb6:	in     al,0x88
  413bb8:	add    ecx,0x1d68e1a7
  413bbe:	lods   al,BYTE PTR ds:[esi]
  413bbf:	adc    esi,DWORD PTR [edx]
  413bc1:	add    al,BYTE PTR [esi-0x4c]
  413bc4:	gs push ecx
  413bc6:	jge    0x413bde
  413bc8:	popa   
  413bc9:	clc    
  413bca:	rol    DWORD PTR [ebx],1
  413bcc:	jns    0x413bb5
  413bce:	or     eax,DWORD PTR [eax+esi*2]
  413bd1:	test   ebp,esi
  413bd3:	or     al,0x77
  413bd5:	xor    eax,0x87956846
  413bda:	fiadd  WORD PTR [esi]
  413bdc:	mov    bh,0x90
  413bde:	xchg   edi,eax
  413bdf:	mov    edx,0xc9257f0e
  413be4:	cdq    
  413be5:	xchg   dh,cl
  413be7:	shr    ch,1
  413be9:	pop    ebp
  413bea:	and    ah,BYTE PTR [ecx-0x20146f95]
  413bf0:	inc    BYTE PTR [edi-0x1b95a130]
  413bf6:	ins    DWORD PTR es:[edi],dx
  413bf7:	mov    eax,0x31a501a9
  413bfc:	xchg   ebp,esi
  413bfe:	pop    es
  413bff:	mov    edi,0x3153c405
  413c04:	inc    ebp
  413c05:	inc    esp
  413c06:	mov    cl,0x59
  413c08:	ins    DWORD PTR es:[edi],dx
  413c09:	mov    al,0x98
  413c0b:	jne    0x413bcb
  413c0d:	xor    eax,0x9c7092d6
  413c12:	das    
  413c13:	aam    0xc7
  413c15:	sbb    al,0xa3
  413c17:	mov    ebp,0x93c18f8a
  413c1c:	jns    0x413c38
  413c1e:	enter  0x9c70,0xad
  413c22:	push   eax
  413c23:	ror    ebp,0x7
  413c26:	dec    ebx
  413c27:	addr16 dec esi
  413c29:	addr16 das 
  413c2b:	fisubr DWORD PTR [edi]
  413c2d:	sahf   
  413c2e:	mov    esi,0x4a95c552
  413c33:	add    eax,0x31734bde
  413c38:	add    BYTE PTR [ebx-0x14],dh
  413c3b:	inc    edx
  413c3c:	fistp  DWORD PTR [esp+edx*1]
  413c3f:	xchg   ebx,eax
  413c40:	ds leave 
  413c42:	sub    BYTE PTR [edx+0x74],ch
  413c45:	mov    ds:0x4bf9cc47,eax
  413c4a:	in     eax,0xc0
  413c4c:	or     bh,al
  413c4e:	sbb    eax,0xdeadc0ad
  413c53:	(bad)  
  413c54:	sbb    dh,al
  413c56:	data16 into 
  413c58:	ds dec ecx
  413c5a:	jns    0x413bef
  413c5c:	popf   
  413c5d:	lock jmp 0x1350863a
  413c63:	sub    DWORD PTR [ebp+0x2a54df54],esp
  413c69:	mov    BYTE PTR [eax+edx*2-0x2bf5317d],cl
  413c70:	vmaxsd xmm0,xmm4,xmm5
  413c74:	mov    esi,0x2fdba884
  413c79:	in     al,0x5c
  413c7b:	mov    ch,0xcd
  413c7d:	mov    al,BYTE PTR [ebp+0x62e97e6d]
  413c83:	fnstenv [ebp+0x25]
  413c86:	call   0xaf232b1d
  413c8b:	xchg   edi,eax
  413c8c:	call   0x2290:0xda01f999
  413c93:	pop    ebx
  413c94:	sbb    edx,edi
  413c96:	adc    BYTE PTR [ecx-0x1683e65e],0xa3
  413c9d:	shr    ah,0xe3
  413ca0:	in     al,0xe1
  413ca2:	cmp    eax,0x998e0643
  413ca7:	ret    
  413ca8:	rcr    ebp,1
  413caa:	hlt    
  413cab:	push   es
  413cac:	dec    edx
  413cad:	fidivr WORD PTR [esi]
  413caf:	adc    DWORD PTR [edx-0x62],ebx
  413cb2:	loopne 0x413c88
  413cb4:	inc    ebp
  413cb5:	pusha  
  413cb6:	mov    esi,0xcf79ce72
  413cbb:	sti    
  413cbc:	arpl   WORD PTR [esi-0x2b],dx
  413cbf:	out    dx,eax
  413cc0:	push   ecx
  413cc1:	add    eax,0x28cc2267
  413cc6:	push   ss
  413cc7:	xor    BYTE PTR [esp+eax*1-0x2f7e6106],al
  413cce:	mov    eax,ds:0xed6af66f
  413cd3:	jb     0x413c76
  413cd5:	and    DWORD PTR [eax-0x4],ebp
  413cd8:	lahf   
  413cd9:	cld    
  413cda:	sbb    BYTE PTR [ebx-0x53],bh
  413cdd:	push   esp
  413cde:	dec    BYTE PTR [esi]
  413ce0:	out    0xca,eax
  413ce2:	xor    al,0x66
  413ce4:	test   eax,0xdd457a94
  413ce9:	rcl    BYTE PTR [ebx+ebp*2],cl
  413cec:	enter  0xd3bd,0x1
  413cf0:	cmp    DWORD PTR [edx+0x1127ebd9],esp
  413cf6:	sahf   
  413cf7:	gs sti 
  413cf9:	stos   BYTE PTR es:[edi],al
  413cfa:	lods   eax,DWORD PTR ds:[esi]
  413cfb:	mov    edx,0xa3333f57
  413d00:	or     BYTE PTR [edx],cl
  413d02:	pusha  
  413d03:	inc    esp
  413d04:	jp     0x413d6c
  413d06:	int    0x2d
  413d08:	cwde   
  413d09:	sub    DWORD PTR [ecx+0x7f],0xffffffeb
  413d0d:	inc    ebx
  413d0e:	js     0x413ce9
  413d10:	jbe    0x413cc4
  413d12:	or     eax,ecx
  413d14:	cld    
  413d15:	or     dl,0x1d
  413d18:	mov    bl,0x2f
  413d1a:	fisubr WORD PTR ds:0x4a632e1e
  413d20:	fnstenv [edx-0x4]
  413d23:	sahf   
  413d24:	add    al,0x2b
  413d26:	pop    ds
  413d27:	shl    BYTE PTR [ecx-0x24],cl
  413d2a:	sub    BYTE PTR [esi-0x69],0xee
  413d2e:	jmp    0x413d0c
  413d30:	inc    edx
  413d31:	mov    ds:0x90909d41,al
  413d36:	popa   
  413d37:	(bad)  
  413d38:	mov    esi,ebx
  413d3a:	pop    esp
  413d3b:	out    dx,al
  413d3c:	popfw  
  413d3e:	clc    
  413d3f:	xchg   ecx,eax
  413d40:	into   
  413d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d42:	pushf  
  413d43:	es fcmovne st,st(7)
  413d46:	fdivr  QWORD PTR [ebx-0x1b]
  413d49:	or     eax,0xd30cbe52
  413d4e:	push   0xffffffb8
  413d50:	jp     0x413d23
  413d52:	aam    0xe9
  413d54:	retf   0x816e
  413d57:	std    
  413d58:	int    0x99
  413d5a:	daa    
  413d5b:	mov    dh,0x16
  413d5d:	fdiv   st,st(5)
  413d5f:	cmp    eax,0xbe3682bc
  413d64:	or     eax,0x6afec80f
  413d69:	ins    BYTE PTR es:[edi],dx
  413d6a:	add    eax,0xf0a9bca4
  413d6f:	in     al,dx
  413d70:	xlat   BYTE PTR ds:[ebx]
  413d71:	xchg   esi,eax
  413d72:	imul   eax,eax,0xffffff92
  413d75:	sub    BYTE PTR [ecx],0xce
  413d78:	rcr    DWORD PTR [edi],0x73
  413d7b:	xchg   DWORD PTR [ecx],esi
  413d7d:	repnz nop
  413d7f:	lock xchg ebp,eax
  413d81:	add    BYTE PTR [eax+0x12],0x92
  413d85:	pop    ss
  413d86:	dec    ecx
  413d87:	jae    0x413d47
  413d89:	mov    WORD PTR [eax+0x4f],gs
  413d8c:	sahf   
  413d8d:	xor    DWORD PTR [eax],0xffffffea
  413d90:	pop    edx
  413d91:	jns    0x413d61
  413d93:	daa    
  413d94:	arpl   WORD PTR [ebx-0x36c17fd6],bp
  413d9a:	push   ds
  413d9b:	mov    BYTE PTR [eax+ebp*1],al
  413d9e:	jbe    0x413dae
  413da0:	lock mul DWORD PTR [ebp-0x5e]
  413da4:	(bad)  
  413da5:	(bad)  
  413da6:	dec    eax
  413da7:	mov    esi,0x98cc1f8b
  413dac:	mov    ecx,0x21de3365
  413db1:	aaa    
  413db2:	sbb    eax,0xcc4c1536
  413db7:	inc    ecx
  413db8:	popa   
  413db9:	jo     0x413db7
  413dbb:	cmp    edx,esi
  413dbd:	std    
  413dbe:	sahf   
  413dbf:	jae    0x413e30
  413dc1:	in     eax,0x2c
  413dc3:	addr16 cmc 
  413dc5:	(bad)  
  413dc7:	ret    0x4afc
  413dca:	cmp    DWORD PTR fs:[esi+0x4],eax
  413dce:	fimul  WORD PTR ds:0xfd32b4e9
  413dd4:	push   ecx
  413dd5:	repz cli 
  413dd7:	or     DWORD PTR [ecx+0x7d6b8f74],ecx
  413ddd:	enter  0x678e,0xc9
  413de1:	rcr    al,cl
  413de3:	sbb    eax,0xbdb8ff6d
  413de8:	hlt    
  413de9:	jmp    0x289ca8d7
  413dee:	jle    0x413e0c
  413df0:	call   0xe90895bb
  413df5:	ds bnd jl 0x413dbd
  413df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dfa:	aas    
  413dfb:	fsub   DWORD PTR [ebx-0x12e8ddd]
  413e01:	in     al,0x8a
  413e03:	stc    
  413e04:	xchg   ebp,eax
  413e05:	pop    esi
  413e06:	mov    edx,DWORD PTR [edi]
  413e08:	cmp    ebp,edi
  413e0a:	inc    esp
  413e0b:	loop   0x413dcf
  413e0d:	mov    ebp,es
  413e0f:	dec    edi
  413e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e11:	jno    0x413da2
  413e13:	cwde   
  413e14:	jle    0x413dd7
  413e16:	inc    ebp
  413e17:	cmp    edx,DWORD PTR [ebp+ebx*2+0x21]
  413e1b:	adc    ch,BYTE PTR [bp+0x5]
  413e1f:	and    al,0x31
  413e21:	sbb    eax,0x5258551b
  413e26:	add    ah,bl
  413e28:	dec    esi
  413e29:	dec    ebp
  413e2a:	int    0x31
  413e2c:	ja     0x413e42
  413e2e:	sub    esi,ecx
  413e30:	and    ebp,esi
  413e32:	inc    ebp
  413e33:	jbe    0x413e91
  413e35:	sub    eax,0x87716e85
  413e3a:	ss add bl,ch
  413e3d:	add    BYTE PTR [ebx+0x90fedd2],dh
  413e43:	pop    edi
  413e44:	std    
  413e45:	xor    al,0x89
  413e47:	mov    al,0x18
  413e49:	add    eax,0x27aab503
  413e4e:	push   ebx
  413e4f:	sbb    DWORD PTR [edx],ebx
  413e51:	add    eax,DWORD PTR [ebx-0x77]
  413e54:	(bad)  
  413e55:	mov    fs,WORD PTR [ebp-0x5eca64fb]
  413e5b:	add    esp,DWORD PTR [esi]
  413e5d:	out    dx,eax
  413e5e:	mov    ds:0x16c4482f,al
  413e63:	sub    DWORD PTR [ecx],ebp
  413e65:	jge    0x413ee5
  413e67:	in     al,dx
  413e68:	jb     0x413ee6
  413e6a:	(bad)  
  413e6b:	sub    ah,cl
  413e6d:	adc    eax,0x32f931d3
  413e72:	mov    ecx,edx
  413e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e75:	pop    ds
  413e76:	add    BYTE PTR ds:0xaf4802e6,dl
  413e7c:	es push 0x665f158b
  413e82:	rcr    DWORD PTR [ecx+edi*1+0x38],0xd1
  413e87:	pop    edx
  413e88:	cmc    
  413e89:	popa   
  413e8a:	cmp    ecx,ebp
  413e8c:	xor    al,0x30
  413e8e:	enter  0xc7ed,0x8f
  413e92:	rcl    DWORD PTR [edx],0xb1
  413e95:	add    eax,0xf208cc0d
  413e9a:	pop    esi
  413e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9c:	stos   BYTE PTR es:[edi],al
  413e9d:	bound  ebx,QWORD PTR [ebp+0x11]
  413ea0:	jnp    0x413e5e
  413ea2:	leave  
  413ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea4:	push   ss
  413ea5:	hlt    
  413ea6:	aaa    
  413ea7:	push   ebp
  413ea8:	div    DWORD PTR [ecx]
  413eaa:	stos   DWORD PTR es:[edi],eax
  413eab:	das    
  413eac:	div    DWORD PTR [esp]
  413eaf:	idiv   BYTE PTR [esp+eax*8-0x72ff320d]
  413eb6:	jg     0x413e52
  413eb8:	mov    ?,WORD PTR [edi]
  413eba:	ror    BYTE PTR [edi-0x7a502af7],cl
  413ec0:	inc    ebx
  413ec1:	sub    BYTE PTR [edi+0x3e],al
  413ec4:	not    DWORD PTR [edi]
  413ec6:	mov    BYTE PTR [esi+0x519a3f2d],0x5
  413ecd:	nop
  413ece:	mov    bh,0xc8
  413ed0:	fisub  DWORD PTR [ecx-0x7b]
  413ed3:	in     eax,0x6e
  413ed5:	cmp    eax,0x2bd1fdec
  413eda:	sbb    DWORD PTR [ecx],0xd307e6a8
  413ee0:	or     bl,BYTE PTR [ecx-0x54]
  413ee3:	inc    edx
  413ee4:	arpl   WORD PTR [ebx+0x69],ax
  413ee7:	fcom   DWORD PTR [edi+0x407ebc9d]
  413eed:	xchg   ebx,eax
  413eee:	mov    bl,0x99
  413ef0:	xchg   esi,eax
  413ef1:	and    bl,BYTE PTR [ebp-0x3a]
  413ef4:	loopne 0x413f18
  413ef6:	push   0xffffffe6
  413ef8:	sub    DWORD PTR [ebp-0x7b],eax
  413efb:	test   eax,0x884f0469
  413f00:	ret    
  413f01:	inc    ebp
  413f02:	mul    DWORD PTR [eax]
  413f04:	push   esi
  413f05:	push   esp
  413f06:	addr16 aas 
  413f08:	lods   eax,DWORD PTR ds:[esi]
  413f09:	retf   0x449d
  413f0c:	dec    esp
  413f0d:	jb     0x413f16
  413f0f:	sbb    eax,0xf730a487
  413f14:	cmp    DWORD PTR [edx+0x71b96c3b],eax
  413f1a:	outs   dx,BYTE PTR ds:[esi]
  413f1b:	jne    0x413f80
  413f1d:	jp     0x413f05
  413f1f:	sbb    BYTE PTR [edx+0x31],bl
  413f22:	pop    es
  413f23:	mov    ah,0x9f
  413f25:	cmp    eax,0xe4cf7f
  413f2a:	loop   0x413f2f
  413f2c:	add    eax,DWORD PTR [ecx-0x213879d7]
  413f32:	je     0x413f73
  413f34:	inc    eax
  413f35:	retf   
  413f36:	(bad)  
  413f37:	and    esi,esi
  413f39:	mov    ebx,0xd8c280fd
  413f3e:	or     DWORD PTR [ebp-0x1dc7a9c4],esi
  413f44:	pmulhuw mm4,QWORD PTR [ecx-0x48]
  413f48:	push   0xcc13763a
  413f4d:	iret   
  413f4e:	adc    al,0x10
  413f50:	fld    QWORD PTR [ecx]
  413f52:	sbb    DWORD PTR [ebx],0x15b928e0
  413f58:	out    0x73,eax
  413f5a:	mov    ds,ebp
  413f5c:	xor    DWORD PTR [edx-0x56],esi
  413f5f:	mov    cl,al
  413f61:	sub    BYTE PTR [ebp-0x4f2277fc],dl
  413f67:	adc    DWORD PTR [eax+edx*2-0x4d3e2f84],edx
  413f6e:	jmp    0x413f7a
  413f70:	stc    
  413f71:	mov    esi,0xe8e51166
  413f76:	jp     0x413f24
  413f78:	inc    esi
  413f79:	(bad)  
  413f7a:	int3   
  413f7b:	sti    
  413f7c:	pop    ss
  413f7d:	xor    al,0xd9
  413f7f:	in     eax,0xa6
  413f81:	scas   al,BYTE PTR es:[edi]
  413f82:	shl    DWORD PTR [ebx+0x6c],1
  413f85:	dec    edx
  413f86:	sub    ebp,DWORD PTR [ebx]
  413f88:	ins    DWORD PTR es:[edi],dx
  413f89:	jb     0x413f75
  413f8b:	out    dx,eax
  413f8c:	test   DWORD PTR [edx+eax*1-0x75],edx
  413f90:	sbb    al,0x64
  413f92:	outs   dx,DWORD PTR ds:[esi]
  413f93:	retf   0x2d9e
  413f96:	cdq    
  413f97:	xor    eax,0xa4bdb34a
  413f9c:	cmp    eax,DWORD PTR [esi+0x6574eb3f]
  413fa2:	leave  
  413fa3:	jae    0x413fe4
  413fa5:	pop    ecx
  413fa6:	cmp    DWORD PTR [edi+0x49],ebx
  413fa9:	(bad)  
  413faa:	cs ret 0x2eb8
  413fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413faf:	das    
  413fb0:	pop    ebp
  413fb1:	rcl    BYTE PTR [ebp+0x9],cl
  413fb4:	pop    ebx
  413fb5:	(bad)  
  413fb6:	aad    0xa8
  413fb8:	les    edx,FWORD PTR [eax]
  413fba:	mov    ecx,0xaf0884c0
  413fbf:	popf   
  413fc0:	pop    es
  413fc1:	loop   0x414015
  413fc3:	jns    0x413ff1
  413fc5:	adc    eax,0x54edcd50
  413fca:	jl     0x413ffe
  413fcc:	daa    
  413fcd:	inc    eax
  413fce:	mov    ch,0xf9
  413fd0:	(bad)  
  413fd1:	dec    edx
  413fd2:	mov    ss:0x43bff87b,eax
  413fd8:	mov    al,0xf7
  413fda:	in     al,dx
  413fdb:	xchg   ebx,eax
  413fdc:	pop    edi
  413fdd:	stc    
  413fde:	pop    edx
  413fdf:	xor    ebp,ecx
  413fe1:	adc    ebx,DWORD PTR [ecx-0x6017bed1]
  413fe7:	sub    eax,0x677aeee0
  413fec:	or     DWORD PTR [ebx+0x43],ebp
  413fef:	jp     0x414007
  413ff1:	call   0xc032b925
  413ff6:	mov    DWORD PTR ds:0x67a42492,edi
  413ffc:	jle    0x41407c
  413ffe:	fsub   DWORD PTR [eax+0x12]
  414001:	daa    
  414002:	pop    esp
  414003:	xchg   ecx,eax
  414004:	pop    ecx
  414005:	icebp  
  414006:	scas   eax,DWORD PTR es:[edi]
  414007:	mov    edi,0xf0a74568
  41400c:	sti    
  41400d:	ins    BYTE PTR es:[edi],dx
  41400e:	jns    0x413f9a
  414010:	repz sti 
  414012:	mov    BYTE PTR [edi+0x1591b8bb],al
  414018:	and    bl,BYTE PTR [ecx]
  41401a:	test   BYTE PTR ds:0xb57aa368,ch
  414020:	stc    
  414021:	mov    dl,BYTE PTR [ebx-0x28]
  414024:	mov    cl,0x6a
  414026:	push   0xffffffc0
  414028:	sbb    BYTE PTR [ebp-0x7024520d],ah
  41402e:	or     DWORD PTR [esi],eax
  414030:	aaa    
  414031:	jns    0x414026
  414033:	sbb    esp,DWORD PTR [ecx-0x11]
  414036:	lds    esp,FWORD PTR [ebp-0x4fbda4b1]
  41403c:	mov    esp,0x950d7f8e
  414041:	int    0xfd
  414043:	mov    edx,DWORD PTR [esi+0xa]
  414046:	push   cs
  414047:	(bad)  
  414048:	cmp    edx,esi
  41404a:	test   eax,0x79d4358b
  41404f:	jmp    0x413ff7
  414051:	fwait
  414052:	mov    ds:0xb99f807d,al
  414057:	(bad)  
  414058:	in     al,dx
  414059:	call   0x1d4089de
  41405e:	out    0x37,al
  414060:	xor    BYTE PTR [ebx-0x76a7487a],ah
  414066:	cdq    
  414067:	xchg   edx,eax
  414068:	cmp    DWORD PTR [ecx],0xffffffea
  41406b:	clc    
  41406c:	idiv   BYTE PTR [ecx-0x60]
  41406f:	jle    0x414037
  414071:	xor    BYTE PTR [esp+eax*2-0x77],cl
  414075:	mov    eax,0x898bf3ea
  41407a:	jmp    0x414068
  41407c:	lods   eax,DWORD PTR ds:[esi]
  41407d:	xor    esi,esp
  41407f:	(bad)  
  414080:	js     0x4140db
  414082:	mov    ecx,0x9d0ce9fb
  414087:	in     eax,0x49
  414089:	pop    ebp
  41408a:	xchg   ebx,eax
  41408b:	cs mov dl,0xf2
  41408e:	or     al,ch
  414090:	and    ch,BYTE PTR [eax+edx*4+0xe1299fa]
  414097:	adc    BYTE PTR [ecx-0x17],dh
  41409a:	sahf   
  41409b:	mov    eax,0x112febc7
  4140a0:	inc    ebx
  4140a1:	and    eax,0xb0687a1b
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	add    BYTE PTR [ebx-0x40747071],bh
  4140ad:	xor    dl,0xe7
  4140b0:	pusha  
  4140b1:	dec    ebp
  4140b2:	popf   
  4140b3:	xor    al,0x9b
  4140b5:	jo     0x4140aa
  4140b7:	pushf  
  4140b8:	xor    BYTE PTR [ebx-0x51],0x9
  4140bc:	out    dx,eax
  4140bd:	xchg   esi,eax
  4140be:	mov    bl,0xcd
  4140c0:	in     al,0x8
  4140c2:	neg    BYTE PTR [ebx-0x3e9bf65a]
  4140c8:	pop    ds
  4140c9:	in     eax,0x4c
  4140cb:	mov    ecx,0x7437c3f4
  4140d0:	push   0x5f
  4140d2:	lods   al,BYTE PTR ds:[esi]
  4140d3:	ret    
  4140d4:	mov    edx,0x73f28ff2
  4140d9:	pop    ss
  4140da:	cli    
  4140db:	mov    ds:0xe60b80fe,al
  4140e0:	push   ss
  4140e1:	cmp    cl,BYTE PTR [edi-0x21d949c2]
  4140e7:	sahf   
  4140e8:	test   BYTE PTR [ebp+0x5b],dl
  4140eb:	clc    
  4140ec:	div    ecx
  4140ee:	out    0x72,eax
  4140f0:	mov    al,0x9d
  4140f2:	nop
  4140f3:	test   dl,0xd7
  4140f6:	lea    esp,[esi-0x6bda1657]
  4140fc:	xchg   eax,esp
  4140fe:	mov    edi,0x4477f57
  414103:	sbb    cl,BYTE PTR [ecx+0x63683abf]
  414109:	imul   ebx,DWORD PTR [esi+0x3a7db1c2],0xffffffc1
  414110:	inc    ebp
  414111:	xchg   ebx,eax
  414112:	bound  esi,QWORD PTR [edi-0x615ccf4f]
  414118:	jae    0x414134
  41411a:	mov    esp,esi
  41411c:	test   ah,al
  41411e:	aad    0x57
  414120:	pushf  
  414121:	daa    
  414122:	call   0x2009:0xba75b2fa
  414129:	stos   DWORD PTR es:[edi],eax
  41412a:	clc    
  41412b:	dec    eax
  41412c:	outs   dx,BYTE PTR ds:[esi]
  41412d:	in     eax,0xe7
  41412f:	and    eax,0x602c4b0d
  414134:	rcr    DWORD PTR [edx+0x4293a893],1
  41413a:	loope  0x41419c
  41413c:	not    BYTE PTR [eax+0x74]
  41413f:	jmp    0x9485bf1e
  414144:	jmp    0x9c8f8d95
  414149:	(bad)  
  41414a:	adc    al,0xa7
  41414c:	push   esi
  41414d:	push   cs
  41414e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41414f:	xchg   BYTE PTR [ecx+0x6dd02c5a],al
  414155:	mov    edx,0xf317b589
  41415a:	inc    ebp
  41415b:	sub    ecx,DWORD PTR [edi+0xcb97ad0]
  414161:	dec    esi
  414162:	jmp    0xa637:0xfc75ffed
  414169:	sbb    eax,0xc8a0b22
  41416e:	sub    dh,cl
  414170:	sbb    ecx,ebx
  414172:	jmp    0x79f37aef
  414177:	mov    al,ds:0x2fbec986
  41417c:	mov    bl,0xed
  41417e:	adc    BYTE PTR [ecx+0x7a],cl
  414181:	pop    esi
  414182:	popf   
  414183:	ja     0x414182
  414185:	cmp    edi,DWORD PTR [ebp-0x583512cb]
  41418b:	ins    BYTE PTR es:[edi],dx
  41418c:	xor    esp,DWORD PTR [esi]
  41418e:	and    al,0x71
  414190:	ret    0x388c
  414193:	adc    ebx,esi
  414195:	hlt    
  414196:	add    edx,DWORD PTR [esi-0x51c9e70]
  41419c:	pop    esp
  41419d:	pop    edi
  41419e:	fs inc esp
  4141a0:	das    
  4141a1:	das    
  4141a2:	mov    eax,ds:0xabfd63ab
  4141a7:	loopne 0x41421f
  4141a9:	fild   WORD PTR [ecx]
  4141ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ac:	dec    esp
  4141ad:	and    DWORD PTR [edi],eax
  4141af:	in     eax,0x30
  4141b1:	mov    WORD PTR [ebp+0x0],es
  4141b4:	xchg   ebx,eax
  4141b5:	leave  
  4141b6:	repnz retf 
  4141b8:	inc    esi
  4141b9:	jl     0x4141ee
  4141bb:	aam    0xb6
  4141bd:	xor    dl,cl
  4141bf:	ja     0x4141cf
  4141c1:	ja     0x4141c2
  4141c3:	(bad)  
  4141c4:	ret    0x31e5
  4141c7:	jne    0x4141ca
  4141c9:	mov    ecx,0xc49fa900
  4141ce:	test   BYTE PTR [esi+0x4761053c],ch
  4141d4:	mov    al,0x4a
  4141d6:	dec    edi
  4141d7:	mov    bh,0x3f
  4141d9:	push   ebx
  4141da:	push   eax
  4141db:	bound  ebp,QWORD PTR [edx-0x64]
  4141de:	repnz scas eax,DWORD PTR es:[edi]
  4141e0:	ins    BYTE PTR es:[edi],dx
  4141e1:	retf   
  4141e2:	push   0x816797ab
  4141e7:	or     eax,0x278a3b99
  4141ec:	scas   al,BYTE PTR es:[edi]
  4141ed:	push   ds
  4141ee:	lods   eax,DWORD PTR ds:[esi]
  4141ef:	mov    ch,0xa0
  4141f1:	inc    esi
  4141f2:	jb     0x414205
  4141f4:	add    al,0xe2
  4141f6:	lods   al,BYTE PTR ds:[esi]
  4141f7:	pop    esp
  4141f8:	and    esi,DWORD PTR [edi+0x7e]
  4141fb:	je     0x414188
  4141fd:	cdq    
  4141fe:	pusha  
  4141ff:	cmc    
  414200:	pop    ebp
  414201:	ficom  WORD PTR [edx+0x72]
  414204:	neg    DWORD PTR [edx+0x6a]
  414207:	adc    al,0x61
  414209:	inc    esp
  41420a:	hlt    
  41420b:	add    ax,ax
  41420e:	mov    ch,0xb7
  414210:	push   edi
  414211:	mov    eax,0x597f741c
  414216:	dec    ebx
  414217:	mov    WORD PTR [eax-0x61],es
  41421a:	xchg   ebx,eax
  41421b:	push   ebp
  41421c:	sub    cl,al
  41421e:	ds mov dh,0x86
  414221:	push   0xaa521f7f
  414226:	into   
  414227:	in     eax,dx
  414228:	inc    edx
  414229:	out    0xb7,eax
  41422b:	cmp    eax,0x9721c0b4
  414230:	pop    es
  414231:	pop    esi
  414232:	pop    ebp
  414233:	or     BYTE PTR [ebx],ah
  414235:	sbb    al,0xd
  414237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414238:	leave  
  414239:	daa    
  41423a:	xor    eax,DWORD PTR [edi]
  41423c:	add    ch,BYTE PTR [edi+ebx*4-0x5528c76b]
  414243:	loop   0x4141f8
  414245:	js     0x41423b
  414247:	sbb    al,al
  414249:	inc    ebp
  41424a:	vxorpd xmm0,xmm3,XMMWORD PTR [esi]
  41424e:	cmp    eax,0x13e05ac6
  414253:	fs jae 0x4142ae
  414256:	pusha  
  414257:	call   0x4a5c:0x692efc32
  41425e:	and    al,0x6d
  414260:	push   ebp
  414261:	daa    
  414262:	cmp    eax,0x9e37b5cf
  414267:	js     0x41426e
  414269:	and    BYTE PTR [esi],bl
  41426b:	cs retf 
  41426d:	push   ecx
  41426e:	xchg   esi,eax
  41426f:	pop    ebp
  414270:	nop
  414271:	cmp    eax,0x65a763cd
  414276:	sbb    esi,ebp
  414278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414279:	ss stos DWORD PTR es:[edi],eax
  41427b:	popf   
  41427c:	in     al,dx
  41427d:	push   esp
  41427e:	add    cl,BYTE PTR [ebx]
  414280:	mov    ecx,0xf125792
  414285:	jecxz  0x4142d7
  414287:	pop    esp
  414288:	sub    edi,ebx
  41428a:	fdiv   DWORD PTR [edi+0x4a]
  41428d:	xchg   esp,eax
  41428e:	retf   0x8224
  414291:	nop
  414292:	mov    fs,WORD PTR ds:0xb0dc2628
  414298:	push   edi
  414299:	push   edi
  41429a:	cmc    
  41429b:	mov    dh,0x4a
  41429d:	jp     0x41422f
  41429f:	fld    TBYTE PTR [ebp+0x144a7c66]
  4142a5:	out    dx,al
  4142a6:	or     DWORD PTR fs:[eax-0x28],0x72
  4142ab:	adc    DWORD PTR [ebx+0x76],0xffffffe2
  4142af:	inc    edx
  4142b0:	fnstcw WORD PTR [edx-0x7b]
  4142b3:	mov    al,ds:0x8d0437
  4142b8:	sub    esp,0x22dddcb2
  4142be:	arpl   WORD PTR [edi-0x7a],sp
  4142c1:	enter  0x67be,0xa3
  4142c5:	adc    al,0x5d
  4142c7:	pushf  
  4142c8:	aas    
  4142c9:	mov    ds:0xdee8b078,al
  4142ce:	hlt    
  4142cf:	inc    ebp
  4142d0:	push   ebp
  4142d1:	jge    0x4142d4
  4142d3:	pop    eax
  4142d4:	rcl    BYTE PTR [ecx],cl
  4142d6:	or     ch,BYTE PTR [esi+ebx*4]
  4142d9:	retf   0xc081
  4142dc:	out    dx,eax
  4142dd:	fist   DWORD PTR [ecx-0x4593cc5]
  4142e3:	fist   DWORD PTR [ebx+0x183ca251]
  4142e9:	or     edx,edi
  4142eb:	dec    edx
  4142ec:	mov    al,ds:0x35266ecd
  4142f1:	adc    esi,DWORD PTR [esi-0x20]
  4142f4:	jae    0x41427a
  4142f6:	fist   WORD PTR [eax-0x62]
  4142f9:	pushf  
  4142fa:	shl    DWORD PTR [ebp+edx*2-0x13],1
  4142fe:	daa    
  4142ff:	js     0x41429b
  414301:	mov    eax,0x24ef4e25
  414306:	cmp    DWORD PTR [ecx-0x1e9f70de],esi
  41430c:	aam    0xc1
  41430e:	aad    0x2a
  414310:	xor    dl,BYTE PTR [eax+0x4b]
  414313:	jbe    0x4142ac
  414315:	fdivr  QWORD PTR [eax]
  414317:	push   edi
  414318:	je     0x414303
  41431a:	xchg   edx,eax
  41431b:	cmp    bl,BYTE PTR ds:0x7a85c34
  414321:	push   esi
  414322:	setge  BYTE PTR [ebx]
  414325:	test   BYTE PTR [eax-0x73c0efe9],dh
  41432b:	sbb    eax,0x4100c234
  414330:	es cmp bh,dh
  414333:	dec    esi
  414334:	pop    ebx
  414335:	or     DWORD PTR [edx+0x2c],esp
  414338:	(bad)  
  41433a:	pop    esp
  41433b:	bound  esp,QWORD PTR [edi+edx*4-0x78141327]
  414342:	jmp    0xc8b1:0xfa63d187
  414349:	in     eax,dx
  41434a:	jecxz  0x414365
  41434c:	je     0x414336
  41434e:	out    0x8d,al
  414350:	add    DWORD PTR [edx],esp
  414352:	pushf  
  414353:	es inc ebp
  414355:	int    0x96
  414357:	mov    DWORD PTR [edi-0x4e14f55e],0x4aaa0428
  414361:	jae    0x414380
  414363:	xlat   BYTE PTR ds:[ebx]
  414364:	sbb    ebp,DWORD PTR [ebx+esi*4-0x34]
  414368:	inc    edi
  414369:	mov    al,ds:0xb0c72865
  41436e:	inc    ebx
  41436f:	pop    ebp
  414370:	or     ecx,DWORD PTR [esi]
  414372:	retf   0xd666
  414375:	jbe    0x414368
  414377:	push   es
  414378:	sbb    ah,dh
  41437a:	pop    ds
  41437b:	fsub   DWORD PTR [eax-0x70]
  41437e:	frndint 
  414380:	or     edx,DWORD PTR ds:0xb2825efc
  414386:	inc    esp
  414387:	enter  0xe2ed,0x41
  41438b:	dec    ebp
  41438c:	call   0xcb06:0x93f4818
  414393:	pop    ecx
  414394:	fisttp DWORD PTR [edi+0x1f]
  414397:	retf   
  414398:	cmc    
  414399:	xchg   esp,eax
  41439a:	xor    bh,cl
  41439c:	scas   al,BYTE PTR es:[edi]
  41439d:	push   es
  41439e:	jg     0x414388
  4143a0:	jne    0x4143d1
  4143a2:	das    
  4143a3:	mov    bh,0x7
  4143a5:	inc    ebp
  4143a6:	dec    esp
  4143a7:	sub    BYTE PTR [edi-0x37298186],dh
  4143ad:	dec    ecx
  4143ae:	mov    dh,dl
  4143b0:	mov    eax,0x73f01ca3
  4143b5:	sub    al,0xb
  4143b7:	lea    edx,[ebp+ecx*8-0x25]
  4143bb:	jae    0x414385
  4143bd:	and    BYTE PTR [ebp+0x3409560a],dl
  4143c3:	gs jo  0x414445
  4143c6:	cmp    BYTE PTR [ebp-0x58],bh
  4143c9:	and    DWORD PTR [edi],edi
  4143cb:	mov    fs,WORD PTR [ecx-0x650f01a1]
  4143d1:	hlt    
  4143d2:	test   DWORD PTR [edi+0x18527ceb],esi
  4143d8:	mov    eax,0xbdb22f01
  4143dd:	push   edx
  4143de:	cwde   
  4143df:	jae    0x414420
  4143e1:	popf   
  4143e2:	and    BYTE PTR [ecx-0x56],0xca
  4143e6:	push   ebx
  4143e7:	jmp    0x95c7b5ec
  4143ec:	pop    es
  4143ed:	mov    ds:0x50f9e245,al
  4143f2:	adc    al,0x87
  4143f4:	test   al,0xdf
  4143f6:	mov    eax,ds:0xb7f57cc9
  4143fb:	sbb    DWORD PTR [esi+0x20ff89e],edi
  414401:	aaa    
  414402:	adc    DWORD PTR [esp+eiz*8],0x2c3f73cb
  414409:	mov    eax,0x24acc4fa
  41440e:	mov    BYTE PTR [ebx-0x7],al
  414411:	ret    
  414412:	test   BYTE PTR [ecx-0x7d],dl
  414415:	pop    esi
  414416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414417:	outs   dx,BYTE PTR ds:[esi]
  414418:	in     eax,dx
  414419:	jmp    0x92a7b8f1
  41441e:	xchg   DWORD PTR [edi],ebp
  414420:	mov    eax,ds:0xe21545f8
  414425:	inc    ebp
  414426:	cmp    DWORD PTR [ecx+eax*2+0x3a],ebx
  41442a:	cs inc eax
  41442c:	jb     0x414410
  41442e:	mov    eax,ds:0xb998e097
  414433:	xor    DWORD PTR [ebp-0x2d96243a],0xc5a40a84
  41443d:	(bad)  
  41443e:	out    dx,eax
  41443f:	mov    ds:0xc8ef3654,al
  414444:	mov    BYTE PTR [ecx-0x73],bl
  414447:	push   edi
  414448:	cmp    DWORD PTR [esi],ebx
  41444a:	test   eax,0x58a7e28f
  41444f:	dec    ah
  414451:	inc    ebp
  414452:	pop    ecx
  414453:	or     al,0x94
  414455:	mov    al,ds:0x2d0f316b
  41445a:	pusha  
  41445b:	rcr    DWORD PTR ds:0xb7dca112,1
  414461:	xchg   edx,eax
  414462:	xlat   BYTE PTR ds:[ebx]
  414463:	jle    0x4144d8
  414465:	inc    esi
  414466:	push   ds
  414467:	loopne 0x4144d3
  414469:	pop    ebp
  41446a:	push   ebp
  41446b:	jge    0x4144e8
  41446d:	inc    edi
  41446e:	pop    ds
  41446f:	dec    edx
  414470:	and    DWORD PTR [eax],esp
  414472:	jo     0x4144b2
  414474:	ficomp WORD PTR [esi-0x3c2bb73c]
  41447a:	mov    cl,0xea
  41447c:	push   ss
  41447d:	push   eax
  41447e:	pop    esp
  41447f:	push   edx
  414480:	sub    ebp,DWORD PTR [esi+0x7]
  414483:	loop   0x4144af
  414485:	dec    esp
  414486:	mov    bl,0x89
  414488:	(bad)  
  414489:	(bad)  
  41448a:	loopne 0x4144d9
  41448c:	test   BYTE PTR [ebx-0x39df4b4b],cl
  414492:	push   ebp
  414493:	mov    ebx,0xb4729d03
  414498:	xor    al,0xf4
  41449a:	ror    DWORD PTR ds:0xc450295a,1
  4144a0:	sti    
  4144a1:	mov    dh,0x1c
  4144a3:	ret    0xb4c9
  4144a6:	retf   0xf348
  4144a9:	sub    al,0x3
  4144ab:	rcl    BYTE PTR [ebp+0x46],0x78
  4144af:	jecxz  0x41451e
  4144b1:	add    cl,ah
  4144b3:	jmp    0x5415:0x7b6731e4
  4144ba:	stos   BYTE PTR es:[edi],al
  4144bb:	aas    
  4144bc:	dec    eax
  4144bd:	das    
  4144be:	or     edx,ecx
  4144c0:	mov    ds:0xe78f2104,eax
  4144c5:	gs pop ds
  4144c7:	xor    eax,0x1b0b6ae6
  4144cc:	test   al,0x9
  4144ce:	cmc    
  4144cf:	mov    dl,BYTE PTR ds:[eax]
  4144d2:	sbb    dl,ch
  4144d4:	dec    esp
  4144d5:	sub    bl,BYTE PTR [eax-0x58]
  4144d8:	mov    edx,0x67ad712d
  4144dd:	imul   DWORD PTR [edi-0x52]
  4144e0:	leave  
  4144e1:	xchg   edi,eax
  4144e2:	adc    BYTE PTR [edi],bh
  4144e4:	ret    0x4e8f
  4144e7:	xchg   DWORD PTR [esi],ebx
  4144e9:	add    eax,0xa9cc93df
  4144ee:	std    
  4144ef:	cmc    
  4144f0:	iret   
  4144f1:	mov    bl,0x17
  4144f3:	nop
  4144f4:	and    esp,esi
  4144f6:	jp     0x414529
  4144f8:	push   es
  4144f9:	stc    
  4144fa:	jecxz  0x41454e
  4144fc:	mov    ch,BYTE PTR [edi+0x39]
  4144ff:	fadd   QWORD PTR ds:0x2d705c61
  414505:	push   ds
  414506:	pop    esp
  414507:	loope  0x4144e6
  414509:	out    dx,al
  41450a:	popa   
  41450b:	mov    ds:0xf7a22597,al
  414510:	or     eax,0x7367924f
  414515:	and    bl,ah
  414517:	repnz lods al,BYTE PTR ds:[esi]
  414519:	and    al,0xb9
  41451b:	addr16 mov bh,0xce
  41451e:	out    0xd,eax
  414520:	fadd   DWORD PTR [esi-0x57]
  414523:	pop    esi
  414524:	mov    dh,0x5d
  414526:	fild   QWORD PTR [edx-0x5bf18667]
  41452c:	(bad)  [ecx+0x77]
  41452f:	stc    
  414530:	cwde   
  414531:	dec    esp
  414532:	add    eax,0x9b317c75
  414537:	(bad)  
  414538:	sti    
  414539:	test   al,0xcb
  41453b:	fdivr  DWORD PTR [ebx]
  41453d:	cld    
  41453e:	enter  0xb2ed,0x48
  414542:	je     0x4145ab
  414544:	out    dx,eax
  414545:	lahf   
  414546:	int3   
  414547:	dec    ebp
  414548:	add    ebp,DWORD PTR [edx+0x157478f7]
  41454e:	pop    ebp
  41454f:	mov    bh,0xf5
  414551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414552:	jg     0x414560
  414554:	scas   eax,DWORD PTR es:[edi]
  414555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414556:	or     edx,DWORD PTR [ecx-0x6a]
  414559:	xchg   ebx,eax
  41455a:	aas    
  41455b:	and    bl,BYTE PTR [edi]
  41455d:	pop    esp
  41455e:	dec    edi
  41455f:	push   cs
  414560:	or     ah,ch
  414562:	dec    eax
  414563:	add    eax,0xf955c985
  414568:	out    dx,eax
  414569:	outs   dx,DWORD PTR ds:[esi]
  41456a:	mov    bl,0x23
  41456c:	inc    esp
  41456d:	xchg   ecx,eax
  41456e:	nop
  41456f:	mov    edx,0xe0890ea
  414574:	add    edx,DWORD PTR [ebp-0x6c]
  414577:	push   edx
  414578:	mov    ecx,0xb5e6cc02
  41457d:	fisubr WORD PTR [edi-0x18d67604]
  414583:	mov    al,ds:0x74e526d8
  414588:	in     al,dx
  414589:	adc    DWORD PTR [eax+edi*8+0x224de0d0],ecx
  414590:	xchg   ebx,eax
  414591:	or     dh,dl
  414593:	xchg   esi,eax
  414594:	test   al,0xf6
  414596:	mov    bl,0xf2
  414598:	mov    esp,0x3310ffb2
  41459d:	push   es
  41459e:	jnp    0x4145b1
  4145a0:	jns    0x414540
  4145a2:	lahf   
  4145a3:	clc    
  4145a4:	into   
  4145a5:	sub    eax,0x3905d83c
  4145aa:	cli    
  4145ab:	in     eax,0xdc
  4145ad:	or     DWORD PTR [esi-0x8],0x2aabcb52
  4145b4:	leave  
  4145b5:	mov    bl,0x30
  4145b7:	(bad)  [edx+0x1057f1cb]
  4145bd:	stos   DWORD PTR es:[edi],eax
  4145be:	xchg   DWORD PTR [edx+ecx*8],esp
  4145c1:	mov    edi,0x3c6fa04f
  4145c6:	xchg   esi,eax
  4145c7:	jle    0x4145b0
  4145c9:	popa   
  4145ca:	and    cl,BYTE PTR [edx]
  4145cc:	inc    ebp
  4145cd:	rcr    DWORD PTR [edx],0x42
  4145d0:	icebp  
  4145d1:	mov    ds:0xffd8eb9a,al
  4145d6:	cwde   
  4145d7:	add    BYTE PTR [ecx],bl
  4145d9:	enter  0xd00e,0xea
  4145dd:	sahf   
  4145de:	test   DWORD PTR [ecx+0x63],eax
  4145e1:	push   esp
  4145e2:	sub    edx,edi
  4145e4:	fisttp QWORD PTR [eax-0x3a391118]
  4145ea:	mov    al,ds:0xcd8d6b9a
  4145ef:	or     al,0xb2
  4145f1:	fld    QWORD PTR [eax]
  4145f3:	rcr    DWORD PTR [edi+0x6e87a95e],1
  4145f9:	std    
  4145fa:	mov    WORD PTR ds:0x2b605ef7,ds
  414600:	js     0x4145f7
  414602:	call   0x4eb9:0xa04895c9
  414609:	enter  0xe01f,0xb4
  41460d:	mov    edx,0xb1188433
  414612:	or     eax,0x7afe9f48
  414617:	mov    gs,edi
  414619:	aam    0x9e
  41461b:	js     0x414690
  41461d:	fimul  WORD PTR [edi+0x53]
  414620:	add    DWORD PTR [ebp+0x678b44ec],ecx
  414626:	lea    edx,[ecx+0x3e]
  414629:	pop    ds
  41462a:	shl    al,0x6e
  41462d:	daa    
  41462e:	sub    al,0x72
  414630:	ret    0xa3f3
  414633:	pop    esi
  414634:	sub    ah,BYTE PTR [ebx]
  414636:	jp     0x414686
  414638:	push   esp
  414639:	sub    al,0x42
  41463b:	sub    ebx,DWORD PTR [ebx+0x71]
  41463e:	mov    bl,0xa4
  414640:	dec    ebx
  414641:	dec    eax
  414642:	enter  0x7115,0x77
  414646:	not    BYTE PTR [ecx-0x36]
  414649:	xchg   esi,eax
  41464a:	inc    ebp
  41464b:	sahf   
  41464c:	xchg   ebx,eax
  41464d:	clc    
  41464e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41464f:	jg     0x41460a
  414651:	xor    eax,0x2eaf7150
  414656:	sub    BYTE PTR [eax+0x5cb6b661],0x82
  41465d:	sbb    DWORD PTR [esi-0x6f],edi
  414660:	sbb    bl,ch
  414662:	dec    edi
  414663:	mov    edi,0x4fc4850b
  414668:	and    dh,BYTE PTR [esi+0xe0e2b00]
  41466e:	ss jge 0x4146ea
  414671:	push   ecx
  414672:	pop    esp
  414673:	jl     0x414649
  414675:	(bad)  
  414676:	jmp    0x6bbf:0x67e7c59b
  41467d:	inc    ebp
  41467e:	and    al,0xec
  414680:	jb     0x4146a1
  414682:	pop    esi
  414683:	dec    ebx
  414684:	sub    dl,BYTE PTR [eax-0x52]
  414687:	mov    ?,edi
  414689:	sbb    edi,esi
  41468b:	inc    esp
  41468c:	dec    esp
  41468d:	retf   
  41468e:	in     al,0xf5
  414690:	out    dx,eax
  414691:	dec    ecx
  414692:	and    eax,0x36af1b0a
  414697:	and    BYTE PTR [ebp-0x66810651],bl
  41469d:	daa    
  41469e:	(bad)  
  41469f:	jp     0x4146c5
  4146a1:	scas   eax,DWORD PTR es:[edi]
  4146a2:	cmp    DWORD PTR [ecx],0x825280cc
  4146a8:	add    DWORD PTR [eax+0x4d],ebx
  4146ab:	or     BYTE PTR [esi],bl
  4146ad:	dec    ebx
  4146ae:	jmp    0x4146e2
  4146b0:	xor    BYTE PTR [ecx+edi*1+0x27ecf1fa],dh
  4146b7:	and    dh,BYTE PTR ds:0xcdfe1f2f
  4146bd:	sar    BYTE PTR [edx],cl
  4146bf:	mov    esp,0xbf301a6
  4146c4:	mov    ds:0x239d85a0,al
  4146c9:	lods   al,BYTE PTR ds:[esi]
  4146ca:	sub    ebx,DWORD PTR [edx+0x2a76f7ff]
  4146d0:	mov    cl,0x53
  4146d2:	cld    
  4146d3:	push   esp
  4146d4:	test   eax,0xef55d12f
  4146d9:	push   ds
  4146da:	mov    bl,0x58
  4146dc:	fisubr DWORD PTR [edx]
  4146de:	sub    BYTE PTR [edi+edx*4-0x61],cl
  4146e2:	fdiv   DWORD PTR ds:[ebp+0x10294048]
  4146e9:	pop    ebx
  4146ea:	inc    ebp
  4146eb:	arpl   WORD PTR [edi-0x60],si
  4146ee:	xchg   BYTE PTR [ebx+0x3],dl
  4146f1:	popa   
  4146f2:	pop    ecx
  4146f3:	cli    
  4146f4:	mov    ah,0xc7
  4146f6:	(bad)  
  4146f7:	xor    eax,0x31eaac72
  4146fc:	test   eax,0x179305b1
  414701:	mov    ebp,0x79f00140
  414706:	loopne 0x41477f
  414708:	hlt    
  414709:	xchg   cx,ax
  41470b:	mov    edx,0x5a6b1ff
  414710:	cmp    BYTE PTR [ebx-0x750e1505],dh
  414716:	rcr    ah,cl
  414718:	pop    ds
  414719:	(bad)  
  41471a:	push   cs
  41471b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471c:	sbb    eax,0xe5027d2a
  414721:	leave  
  414722:	js     0x41477c
  414724:	add    BYTE PTR [esi],ch
  414726:	scas   al,BYTE PTR es:[edi]
  414727:	mov    ds:0xd77308bc,eax
  41472c:	not    BYTE PTR [eax-0x44524b98]
  414732:	xor    dl,BYTE PTR [ebp-0x5c48c7fb]
  414738:	jno    0x4146df
  41473a:	mov    bl,0x6f
  41473c:	pop    ecx
  41473d:	add    BYTE PTR [ecx-0x57],ah
  414740:	xchg   ecx,eax
  414741:	mov    BYTE PTR [ecx+0x49],cl
  414744:	std    
  414745:	mov    ebp,0x565a58ab
  41474a:	xchg   edi,eax
  41474b:	sub    ch,BYTE PTR [ecx-0x4]
  41474e:	jge    0x414774
  414750:	scas   eax,DWORD PTR es:[edi]
  414751:	jle    0x414787
  414753:	push   0xe8047c42
  414758:	adc    al,0xda
  41475a:	ret    0x4630
  41475d:	push   0x52
  41475f:	fs cli 
  414761:	gs jmp 0x8ad1be4b
  414767:	or     al,0x4f
  414769:	sbb    al,0x6
  41476b:	jl     0x4146f1
  41476d:	inc    ebp
  41476e:	scas   eax,DWORD PTR es:[edi]
  41476f:	dec    ebx
  414770:	fs inc ebx
  414772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414773:	(bad)  
  414774:	leave  
  414775:	mov    edx,0x821a8ab5
  41477a:	sub    edx,DWORD PTR [ecx]
  41477c:	mov    esi,0xe827e8ed
  414781:	mov    BYTE PTR [ebp-0x168b341a],dh
  414787:	jae    0x41474a
  414789:	mov    ebx,DWORD PTR [edi+0x693d02a1]
  41478f:	sbb    ebx,DWORD PTR [eax+0x17]
  414792:	mov    ebp,0x294b64b8
  414797:	adc    DWORD PTR [edx],esp
  414799:	xchg   edi,eax
  41479a:	mov    esi,0x5f59b74a
  41479f:	mov    fs,WORD PTR [edx]
  4147a1:	es cli 
  4147a3:	mov    dh,0xcb
  4147a5:	je     0x4147d1
  4147a7:	xor    al,0x23
  4147a9:	cld    
  4147aa:	aaa    
  4147ab:	jbe    0x4147d3
  4147ad:	retf   0x38ac
  4147b0:	lock loopne 0x41479b
  4147b3:	or     BYTE PTR [ebx-0x32],ah
  4147b6:	dec    BYTE PTR [esi]
  4147b8:	cmc    
  4147b9:	add    edi,DWORD PTR [esi-0x73]
  4147bc:	mov    ebp,DWORD PTR [edx+0xd]
  4147bf:	out    0xfb,al
  4147c1:	push   ds
  4147c2:	or     al,dl
  4147c4:	mov    ch,0x5c
  4147c6:	jns    0x41482c
  4147c8:	fsubr  DWORD PTR [ebp+0x47]
  4147cb:	call   0x2d5b:0x6d0b9130
  4147d2:	lods   al,BYTE PTR ds:[esi]
  4147d3:	jp     0x41483f
  4147d5:	jnp    0x414823
  4147d7:	mov    esi,?
  4147d9:	in     eax,dx
  4147da:	or     al,0xf8
  4147dc:	cs mov dh,al
  4147df:	add    al,0xae
  4147e1:	in     al,0x83
  4147e3:	or     ecx,DWORD PTR [esi+0xf]
  4147e6:	cmp    BYTE PTR [esi+0x61],bl
  4147e9:	imul   ebx,esi,0x59aa905
  4147ef:	inc    edi
  4147f0:	aaa    
  4147f1:	sbb    edi,DWORD PTR [ecx+0x34313071]
  4147f7:	jmp    0x4147c7
  4147f9:	dec    ebx
  4147fa:	setp   BYTE PTR [ebp+0x3460323c]
  414801:	and    ebp,DWORD PTR [ecx]
  414803:	dec    ebx
  414804:	inc    ebx
  414805:	enter  0x9225,0xcf
  414809:	pop    ecx
  41480a:	call   0x832b:0x103c2671
  414811:	pop    ecx
  414812:	mov    BYTE PTR [eax+0x9e2ea10],bl
  414818:	shl    BYTE PTR [eax+0x29894dc1],cl
  41481e:	adc    ah,al
  414820:	sbb    ecx,DWORD PTR [ecx]
  414822:	mov    eax,ds:0xaa806fbe
  414827:	mov    al,0x92
  414829:	ror    ah,cl
  41482b:	arpl   dx,bx
  41482d:	test   eax,0x4533a299
  414832:	outs   dx,DWORD PTR ds:[esi]
  414833:	jmp    0x414839
  414835:	sbb    ebx,ecx
  414837:	adc    DWORD PTR [edx-0x12],esp
  41483a:	mov    ebx,0xf22e2632
  41483f:	dec    esi
  414840:	es std 
  414842:	js     0x414813
  414844:	inc    edi
  414845:	in     eax,dx
  414846:	push   0xe382c5f7
  41484b:	push   ecx
  41484c:	das    
  41484d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484e:	inc    esp
  41484f:	dec    esi
  414850:	pop    ss
  414851:	xor    ecx,DWORD PTR [edi]
  414853:	mov    eax,ds:0x631dfa4d
  414858:	push   ebx
  414859:	jle    0x41481d
  41485b:	or     eax,0xcd606e3
  414860:	ret    
  414861:	jle    0x414815
  414863:	inc    ebx
  414864:	jmp    0x41484a
  414866:	mov    ebp,0x55fee995
  41486b:	scas   al,BYTE PTR es:[edi]
  41486c:	mov    ds:0x4d3160e4,eax
  414871:	or     eax,0x5361c39c
  414876:	sar    BYTE PTR [ebp-0x3a],1
  414879:	pop    esi
  41487a:	mov    dh,0xc9
  41487c:	cmp    eax,0x7af0281f
  414881:	data16 mov ch,0xc6
  414884:	push   eax
  414885:	xchg   edx,eax
  414886:	in     eax,dx
  414887:	xchg   ch,bh
  414889:	leave  
  41488a:	lods   al,BYTE PTR ds:[esi]
  41488b:	mov    esi,DWORD PTR [edi+0x53434e3c]
  414891:	cmp    dl,BYTE PTR [ecx]
  414893:	or     eax,0xcc91b8a7
  414898:	scas   al,BYTE PTR es:[edi]
  414899:	rcl    DWORD PTR [ecx+0x23],1
  41489c:	imul   esi,edi,0x2b
  41489f:	rol    BYTE PTR ds:0x10120193,1
  4148a5:	in     eax,0xab
  4148a7:	fnstsw ax
  4148a9:	(bad)  
  4148aa:	out    dx,al
  4148ab:	or     edi,DWORD PTR [esi-0x7cbf3f4]
  4148b1:	sbb    al,0x5c
  4148b3:	hlt    
  4148b4:	sar    BYTE PTR [esi],cl
  4148b6:	pop    ecx
  4148b7:	adc    al,0xea
  4148b9:	adc    eax,0xe18f76b5
  4148be:	dec    ebx
  4148bf:	retf   
  4148c0:	(bad)  
  4148c1:	stc    
  4148c2:	ror    DWORD PTR [esi],1
  4148c4:	inc    ecx
  4148c5:	(bad)  
  4148c6:	fs jns 0x414918
  4148c9:	loop   0x4148f7
  4148cb:	arpl   WORD PTR [eax],di
  4148cd:	aas    
  4148ce:	jnp    0x4148a9
  4148d0:	mov    cl,0x72
  4148d2:	pop    edx
  4148d3:	into   
  4148d4:	cld    
  4148d5:	jns    0x414864
  4148d7:	xchg   edi,eax
  4148d8:	jnp    0x414927
  4148da:	mov    ebx,ecx
  4148dc:	loope  0x414861
  4148de:	xor    DWORD PTR ss:[edi+ecx*8-0x5f],edi
  4148e3:	mov    eax,0x50d1448f
  4148e8:	pop    ecx
  4148e9:	pop    es
  4148ea:	scas   al,BYTE PTR es:[edi]
  4148eb:	mov    al,ds:0x7078973e
  4148f0:	add    eax,0x3172a388
  4148f5:	es jmp 0x4148eb
  4148f8:	xor    DWORD PTR [edi-0x343331cd],esi
  4148fe:	outs   dx,DWORD PTR ds:[esi]
  4148ff:	sahf   
  414900:	in     eax,0x8
  414902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414903:	in     eax,0xcc
  414905:	add    al,0x18
  414907:	fs cwde 
  414909:	adc    esp,DWORD PTR [ecx+0x5d]
  41490c:	jb     0x41494d
  41490e:	mov    WORD PTR [edi],?
  414910:	sbb    DWORD PTR [esi],eax
  414912:	cld    
  414913:	push   edi
  414914:	dec    edi
  414915:	stos   BYTE PTR es:[edi],al
  414916:	sbb    ebx,DWORD PTR [edx-0x3e]
  414919:	or     eax,0xd4e08e03
  41491e:	lods   al,BYTE PTR ds:[esi]
  41491f:	enter  0x5aee,0xed
  414923:	(bad)  
  414924:	fidiv  WORD PTR [eax+0x427feb84]
  41492a:	cdq    
  41492b:	inc    eax
  41492c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41492d:	fisubr DWORD PTR [esp+edx*1]
  414930:	dec    ebp
  414931:	jp     0x414957
  414933:	(bad)  
  414934:	xor    esp,ebp
  414936:	push   esi
  414937:	mov    BYTE PTR [eax-0x12],ch
  41493a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41493b:	push   0xe420a736
  414940:	jecxz  0x414928
  414942:	les    eax,FWORD PTR [ebx-0xc05b462]
  414948:	test   eax,0xad49c88e
  41494d:	push   ebx
  41494e:	aas    
  41494f:	adc    bl,BYTE PTR [ecx+0x4fc291ef]
  414955:	pop    ss
  414956:	fs push eax
  414958:	data16 lods al,BYTE PTR ds:[esi]
  41495a:	mov    BYTE PTR [eax],dl
  41495c:	or     al,0x24
  41495e:	xchg   esi,eax
  41495f:	cdq    
  414960:	fs xchg esi,esi
  414963:	pcmpgtb mm6,mm2
  414966:	in     al,dx
  414967:	push   0xf
  414969:	xor    BYTE PTR [eax-0x1dd9929a],ah
  41496f:	ret    0xa87b
  414972:	loope  0x414908
  414974:	stos   BYTE PTR es:[edi],al
  414975:	jne    0x414961
  414977:	inc    esi
  414978:	test   al,0xe7
  41497a:	sub    DWORD PTR [ecx-0x6e],ebp
  41497d:	pop    esp
  41497e:	stc    
  41497f:	test   al,0xd5
  414981:	dec    ebp
  414982:	jb     0x41492f
  414984:	xor    eax,0xfcd68057
  414989:	sbb    al,0xd1
  41498b:	lods   al,BYTE PTR ds:[esi]
  41498c:	cmp    al,0xfc
  41498e:	push   esi
  41498f:	test   edx,ebx
  414991:	dec    ebx
  414992:	add    eax,0xf5278a9b
  414997:	icebp  
  414998:	mov    al,ds:0x134bf804
  41499d:	(bad)  
  41499e:	std    
  41499f:	inc    ebp
  4149a0:	xchg   edx,eax
  4149a1:	jno    0x41493f
  4149a3:	mov    bl,0xab
  4149a5:	push   ss
  4149a6:	mov    esp,0x594f1111
  4149ab:	popf   
  4149ac:	sub    al,0xf8
  4149ae:	les    ecx,FWORD PTR [ebx+0x12]
  4149b1:	test   DWORD PTR [esi],eax
  4149b3:	test   eax,0xf66d4502
  4149b8:	fwait
  4149b9:	cmc    
  4149ba:	imul   ebp,eax,0xcc27beff
  4149c0:	bswap  ebp
  4149c2:	mov    dh,0x76
  4149c4:	mov    esp,0xda31b67f
  4149c9:	adc    edi,ecx
  4149cb:	mov    esp,0x7188a129
  4149d0:	loope  0x414a38
  4149d2:	adc    al,0x30
  4149d4:	jp     0x4149b1
  4149d6:	push   esp
  4149d7:	jp     0x414a1c
  4149d9:	into   
  4149da:	test   al,0x97
  4149dc:	jns    0x4149bb
  4149de:	jl     0x414978
  4149e0:	imul   ebp,ebx,0xffffff87
  4149e3:	ss loope 0x4149bc
  4149e6:	xchg   esi,eax
  4149e7:	dec    esp
  4149e8:	aas    
  4149e9:	or     DWORD PTR ds:0x3edcb2a3,0xffffffda
  4149f0:	gs xor eax,0x368c96a4
  4149f6:	and    eax,0x7a48443d
  4149fb:	and    BYTE PTR [esi-0x1eecac79],dh
  414a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a02:	mov    dh,0x7f
  414a04:	dec    esi
  414a05:	push   esi
  414a06:	daa    
  414a07:	mov    ecx,esp
  414a09:	enter  0xb7de,0x48
  414a0d:	pop    eax
  414a0e:	and    DWORD PTR [ecx-0x70],ebp
  414a11:	cwde   
  414a12:	imul   ecx,DWORD PTR [esi-0x22],0xdef7735
  414a19:	jne    0x414a1e
  414a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1c:	ins    BYTE PTR es:[edi],dx
  414a1d:	push   esp
  414a1e:	or     dl,bl
  414a20:	inc    esp
  414a21:	das    
  414a22:	adc    dh,cl
  414a24:	push   ds
  414a25:	pop    es
  414a26:	add    bh,BYTE PTR [eax+0x78]
  414a29:	push   edx
  414a2a:	sbb    edx,DWORD PTR [ecx-0x5a59864b]
  414a30:	pop    edi
  414a31:	jecxz  0x4149b6
  414a33:	std    
  414a34:	cwde   
  414a35:	call   0x9e35360b
  414a3a:	adc    ecx,DWORD PTR [esi]
  414a3c:	sub    al,0xd
  414a3e:	cmp    BYTE PTR [edx],bl
  414a40:	mov    ecx,0xd0b2dc87
  414a45:	xchg   esp,eax
  414a46:	je     0x414a06
  414a48:	int    0xc8
  414a4a:	repz dec edx
  414a4c:	or     eax,0x896886e9
  414a51:	mov    bl,0x93
  414a53:	mov    ebx,0x83e056ba
  414a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a59:	push   esp
  414a5a:	std    
  414a5b:	pop    edx
  414a5c:	dec    edx
  414a5d:	xchg   ebp,eax
  414a5e:	lds    edi,FWORD PTR [ebx+0x44778f13]
  414a64:	jb     0x414a1b
  414a66:	sahf   
  414a67:	inc    esi
  414a68:	inc    edx
  414a69:	inc    ebx
  414a6a:	sbb    DWORD PTR [edx-0x45],esi
  414a6d:	add    eax,0xa87bffe9
  414a72:	mov    al,ds:0xcb713b93
  414a77:	int3   
  414a78:	lahf   
  414a79:	aaa    
  414a7a:	dec    ebp
  414a7b:	scas   al,BYTE PTR es:[edi]
  414a7c:	mov    al,0x7f
  414a7e:	adc    dl,BYTE PTR [esi]
  414a80:	bound  edx,QWORD PTR [ebx]
  414a82:	mov    bh,0xb6
  414a84:	mov    al,ds:0x35dd88c4
  414a89:	jge    0x414b02
  414a8b:	adc    al,0xe7
  414a8d:	fiadd  WORD PTR [esi]
  414a8f:	les    ecx,FWORD PTR [esi+ecx*4+0x32edd7a]
  414a96:	add    eax,0xd8fe6c7c
  414a9b:	in     al,dx
  414a9c:	adc    BYTE PTR ds:0xfda7f24b,dh
  414aa2:	retf   
  414aa3:	retf   0x5b25
  414aa6:	mov    bh,0xbd
  414aa8:	mov    ebp,0xf594582d
  414aad:	mov    BYTE PTR [edi],bh
  414aaf:	(bad)  [esp+eiz*4+0x77634175]
  414ab6:	(bad)  
  414ab7:	jge    0x414a98
  414ab9:	mov    ds:0xabb8914b,al
  414abe:	ror    DWORD PTR [edi+0x25563616],cl
  414ac4:	fcmovb st,st(7)
  414ac6:	xchg   ebx,eax
  414ac7:	adc    ch,BYTE PTR ds:[ecx]
  414aca:	idiv   DWORD PTR [ebp-0x5e]
  414acd:	xor    eax,ebp
  414acf:	nop
  414ad0:	cli    
  414ad1:	push   esp
  414ad2:	or     eax,0xa07390ba
  414ad7:	(bad)  
  414ad9:	fisub  WORD PTR [esi+0x51f2b2df]
  414ae0:	xchg   edi,eax
  414ae1:	mov    bh,0x14
  414ae3:	jns    0x414af6
  414ae5:	stos   DWORD PTR es:[edi],eax
  414ae6:	jnp    0x414a90
  414ae8:	cmp    bl,ah
  414aea:	push   edx
  414aeb:	inc    edi
  414aec:	mov    dl,0x9f
  414aee:	in     al,dx
  414aef:	fsub   DWORD PTR [eax+ebx*4]
  414af2:	call   0x4bd2386d
  414af7:	(bad)  
  414af8:	inc    edx
  414af9:	dec    esi
  414afa:	mov    ah,0x99
  414afc:	xchg   ebp,eax
  414afd:	stos   DWORD PTR es:[edi],eax
  414afe:	or     ebx,ebx
  414b00:	(bad)  [ecx-0x1dcbed2b]
  414b06:	mov    edx,0x4b285131
  414b0b:	adc    BYTE PTR [eax+0x42],ah
  414b0e:	and    eax,0xaa2af742
  414b13:	jge    0x414a99
  414b15:	cli    
  414b16:	or     BYTE PTR [ebp*8+0x7ea5946d],0x24
  414b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1f:	cmp    eax,0xf0a54bfa
  414b24:	(bad)  
  414b25:	in     al,dx
  414b26:	repnz data16 loop 0x414b59
  414b2a:	scas   eax,DWORD PTR es:[edi]
  414b2b:	imul   edi,DWORD PTR [ebx],0xffffffb0
  414b2e:	(bad)  
  414b2f:	int3   
  414b30:	dec    ecx
  414b31:	popa   
  414b32:	test   ax,0x491f
  414b36:	mov    al,0x56
  414b38:	ds retf 
  414b3a:	mov    esp,0xfe6ec24d
  414b3f:	or     al,0x13
  414b41:	push   ss
  414b42:	(bad)  
  414b43:	xor    BYTE PTR [edx],ch
  414b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b46:	dec    ebp
  414b47:	iret   
  414b48:	pop    es
  414b49:	gs mov ebp,0x6f52d7cd
  414b4f:	jbe    0x414b40
  414b51:	and    bl,dl
  414b53:	pop    ebx
  414b54:	sub    DWORD PTR [edi+ecx*2+0x9],0x4d315b2e
  414b5c:	cld    
  414b5d:	leave  
  414b5e:	push   ds
  414b5f:	sti    
  414b60:	add    ecx,DWORD PTR [esp+ecx*1]
  414b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b64:	or     eax,DWORD PTR [ebx+0x21a16734]
  414b6a:	inc    ecx
  414b6b:	enter  0x7165,0xb4
  414b6f:	or     BYTE PTR [edi],bl
  414b71:	sbb    al,0xef
  414b73:	xchg   esi,eax
  414b74:	lods   eax,DWORD PTR ds:[esi]
  414b75:	cmp    eax,DWORD PTR [edx-0x36]
  414b78:	mov    ebx,0x67a2bd85
  414b7d:	mov    eax,ds:0xc311a700
  414b82:	int3   
  414b83:	jno    0x414be5
  414b85:	mov    ecx,0x19561527
  414b8a:	(bad)  
  414b8b:	in     eax,dx
  414b8c:	cmp    eax,0xb8beeb41
  414b91:	pop    ebp
  414b92:	dec    eax
  414b93:	xchg   ebx,eax
  414b94:	fwait
  414b95:	pop    edi
  414b96:	jmp    0x6965:0x370c948f
  414b9d:	pop    ecx
  414b9e:	push   edi
  414b9f:	and    ebp,DWORD PTR [ecx+0x27c59df6]
  414ba5:	add    eax,0x2d8eb591
  414baa:	push   eax
  414bab:	cmp    dh,ch
  414bad:	lods   al,BYTE PTR ds:[esi]
  414bae:	jb     0x414b4c
  414bb0:	test   BYTE PTR [esi+0x8],al
  414bb3:	les    edi,FWORD PTR [eax-0x70b04807]
  414bb9:	fnstenv [edi-0x3b]
  414bbc:	push   ebx
  414bbd:	mov    al,ds:0x6f5a6e83
  414bc2:	xchg   edx,eax
  414bc3:	jmp    0x414ba1
  414bc5:	cmp    DWORD PTR [ecx],esp
  414bc7:	jno    0x414b5a
  414bc9:	dec    eax
  414bca:	sub    al,0x4e
  414bcc:	popf   
  414bcd:	xor    DWORD PTR [ecx],edi
  414bcf:	inc    esp
  414bd0:	jne    0x414bde
  414bd2:	dec    esi
  414bd3:	(bad)  
  414bd4:	js     0x414c32
  414bd6:	std    
  414bd7:	adc    DWORD PTR [edi],ebx
  414bd9:	mov    eax,0xbf7b65bf
  414bde:	adc    al,0x74
  414be0:	xchg   dl,bh
  414be2:	push   ecx
  414be3:	sub    al,0xc0
  414be5:	and    esp,DWORD PTR [ebx+0x32]
  414be8:	push   eax
  414be9:	mov    eax,?
  414beb:	mov    bl,0x1c
  414bed:	and    bh,al
  414bef:	ds sbb al,BYTE PTR es:[ecx+0x20]
  414bf4:	sbb    eax,0xc48c43ba
  414bf9:	jno    0x414bf7
  414bfb:	dec    edx
  414bfc:	push   esp
  414bfd:	mov    ah,BYTE PTR [ebp+0x5d]
  414c00:	sub    BYTE PTR [edx+0x42],ah
  414c03:	stc    
  414c04:	push   eax
  414c05:	popa   
  414c06:	dec    ebp
  414c07:	mov    esi,0x68c27657
  414c0c:	cmp    ebx,esi
  414c0e:	jo     0x414bfc
  414c10:	mov    DWORD PTR [esi+0x59636c03],ecx
  414c16:	fisubr DWORD PTR [ecx]
  414c18:	divps  xmm6,XMMWORD PTR [ebp+0x60]
  414c1c:	pop    esi
  414c1d:	fld    QWORD PTR ds:[edi]
  414c20:	jns    0x414c3f
  414c22:	sub    al,0x4f
  414c24:	jb     0x414c35
  414c26:	jg     0x414c4e
  414c28:	xchg   ebx,eax
  414c29:	repz xchg si,ax
  414c2c:	add    bh,BYTE PTR [ebp+0x13]
  414c2f:	call   0x7512e904
  414c34:	nop
  414c35:	inc    esi
  414c36:	and    ecx,DWORD PTR [eax]
  414c38:	iret   
  414c39:	in     al,dx
  414c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3b:	sahf   
  414c3c:	inc    edi
  414c3d:	jno    0x414bc6
  414c3f:	xor    DWORD PTR gs:[esi+0x21],ebx
  414c43:	and    dh,BYTE PTR [ecx-0x4e]
  414c46:	sub    al,0xc6
  414c48:	call   0x687bfbbc
  414c4d:	retf   0xc4a3
  414c50:	mov    ah,0xde
  414c52:	xor    dl,BYTE PTR [eax]
  414c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c55:	arpl   WORD PTR [esi+0x6578b339],sp
  414c5b:	stos   BYTE PTR es:[edi],al
  414c5c:	xor    DWORD PTR [ebx+0x52],ecx
  414c5f:	jae    0x414cb7
  414c61:	mov    ch,0xa3
  414c63:	sub    DWORD PTR [edi+esi*8-0x16d19baa],0x119c27ed
  414c6e:	mov    edx,0x1b1ef1ec
  414c73:	clc    
  414c74:	adc    DWORD PTR [edx+eax*1-0x729a31a8],0x5a071bc2
  414c7f:	cmp    dl,BYTE PTR [ecx]
  414c81:	jno    0x414c95
  414c83:	dec    ebp
  414c84:	mov    esp,0xf9cca73b
  414c89:	in     eax,0xf8
  414c8b:	xor    esp,esi
  414c8d:	in     eax,0xc4
  414c8f:	dec    edi
  414c90:	icebp  
  414c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c92:	mov    al,ds:0x74d6ca5e
  414c97:	mov    ds:0x71649e1,al
  414c9c:	popa   
  414c9d:	pushf  
  414c9e:	push   ss
  414c9f:	xchg   ecx,eax
  414ca0:	mov    esi,0xf23f3a78
  414ca5:	stc    
  414ca6:	shr    DWORD PTR [ebx],1
  414ca8:	pop    eax
  414ca9:	xor    ch,BYTE PTR ds:0xb2caa027
  414cb0:	adc    al,0xcf
  414cb2:	pusha  
  414cb3:	cld    
  414cb4:	or     cl,BYTE PTR [ebp+0x3b]
  414cb7:	adc    BYTE PTR [edx],ch
  414cb9:	and    ebx,DWORD PTR ds:0x3524d2d0
  414cbf:	clc    
  414cc0:	push   esi
  414cc1:	(bad)
  414cc6:	cs int 0x6f
  414cc9:	ja     0x414cad
  414ccb:	(bad)  
  414ccc:	imul   BYTE PTR [esi]
  414cce:	mov    ds:0xe19a56f8,eax
  414cd3:	adc    eax,0x6e1be0da
  414cd8:	or     eax,0x89d0436b
  414cdd:	dec    esi
  414cde:	pop    eax
  414cdf:	daa    
  414ce0:	mov    dh,0x5c
  414ce2:	xchg   DWORD PTR [eax-0x6b],edx
  414ce5:	fisubr DWORD PTR [eax+0x228cb42]
  414ceb:	jg     0x414d1b
  414ced:	(bad)  
  414cee:	sahf   
  414cef:	xor    al,0x26
  414cf1:	and    edi,DWORD PTR [ecx-0x4d]
  414cf4:	iret   
  414cf5:	sub    eax,esp
  414cf7:	xor    esi,DWORD PTR [edx-0x22]
  414cfa:	mov    dh,0xae
  414cfc:	xchg   ebx,eax
  414cfd:	ja     0x414d6e
  414cff:	adc    esp,DWORD PTR [ebx]
  414d01:	icebp  
  414d02:	sbb    DWORD PTR [ecx+0x73],edi
  414d05:	mov    esp,0xae146c76
  414d0a:	scas   al,BYTE PTR es:[edi]
  414d0b:	cmp    DWORD PTR [edi+0x333ec6d4],ebp
  414d11:	xor    al,0xbe
  414d13:	iret   
  414d14:	add    al,0xc6
  414d16:	icebp  
  414d17:	mov    eax,0xc35e7cf3
  414d1c:	mov    ecx,ecx
  414d1e:	jmp    0x10c:0x5f9b5c15
  414d25:	cmp    edi,DWORD PTR [edx+0xe]
  414d28:	sub    dh,BYTE PTR [edi-0x79688bd0]
  414d2e:	adc    DWORD PTR [ebp-0x2b],edi
  414d31:	ret    
  414d32:	push   ds
  414d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d34:	xor    DWORD PTR [eax],0xffffffdb
  414d37:	mov    dh,0x28
  414d39:	adc    eax,DWORD PTR [ebp-0x35]
  414d3c:	jo     0x414cde
  414d3e:	sahf   
  414d3f:	pop    ebx
  414d40:	push   esi
  414d41:	ins    DWORD PTR es:[edi],dx
  414d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d44:	dec    esp
  414d45:	mov    al,0xe8
  414d47:	arpl   WORD PTR [ecx+0x580a90d6],dx
  414d4d:	lods   eax,DWORD PTR ds:[esi]
  414d4e:	(bad)  
  414d4f:	xor    eax,0x295f919c
  414d54:	les    eax,FWORD PTR [edx+0x57a0b6aa]
  414d5a:	pop    ds
  414d5b:	sub    bh,dl
  414d5d:	and    BYTE PTR [ecx],0x9e
  414d60:	out    0xf5,eax
  414d62:	sub    DWORD PTR [ebx+ebp*4+0x74],esi
  414d66:	clc    
  414d67:	sar    DWORD PTR [eax*4-0x215337ae],0xfc
  414d6f:	jecxz  0x414d3b
  414d71:	jl     0x414d01
  414d73:	ret    0x66d8
  414d76:	add    bl,BYTE PTR [edx+0x6581a75a]
  414d7c:	add    ch,ch
  414d7e:	(bad)  
  414d80:	stos   BYTE PTR es:[edi],al
  414d81:	leave  
  414d82:	out    dx,eax
  414d83:	jge    0x414dc7
  414d85:	mov    ah,0xd5
  414d87:	nop
  414d88:	scas   al,BYTE PTR es:[edi]
  414d89:	dec    ecx
  414d8a:	mov    BYTE PTR [edi+eax*2],ah
  414d8d:	std    
  414d8e:	ja     0x414d5e
  414d90:	cmp    eax,0x1677be26
  414d95:	jns    0x414d2b
  414d97:	fisubr WORD PTR [edi+ebp*2+0x3fcf711e]
  414d9e:	fcomp  QWORD PTR [eax-0x57f5e8de]
  414da5:	mov    edx,0x74e21c90
  414daa:	mov    esi,0x3dfe0add
  414daf:	pop    ds
  414db0:	es fs jmp 0xbc30:0xe1b95708
  414db9:	and    al,0x7
  414dbb:	out    0xf5,al
  414dbd:	xor    ebp,DWORD PTR [ecx-0x1c4507bd]
  414dc3:	js     0x414dba
  414dc5:	pushf  
  414dc6:	cmp    DWORD PTR [ebp-0x452eca7f],esi
  414dcc:	sahf   
  414dcd:	inc    ebp
  414dce:	outs   dx,DWORD PTR ds:[esi]
  414dcf:	fwait
  414dd0:	pop    esi
  414dd1:	mov    ah,0x19
  414dd3:	imul   esi,ebx,0x22
  414dd6:	pop    esp
  414dd7:	dec    DWORD PTR [ebp-0x2994c30d]
  414ddd:	dec    edx
  414dde:	dec    eax
  414ddf:	mov    ?,WORD PTR [edx+0xbf16615]
  414de5:	aam    0x5d
  414de7:	retf   0x8e72
  414dea:	dec    esp
  414deb:	test   al,0x40
  414ded:	cmp    edx,ecx
  414def:	dec    ebp
  414df0:	inc    edx
  414df1:	imul   edi,DWORD PTR [edx+ecx*2-0x1ed5d264],0xbdeb877a
  414dfc:	fwait
  414dfd:	add    edi,DWORD PTR [esi-0x6]
  414e00:	jno    0x414e20
  414e02:	or     DWORD PTR [edi+0x5703e048],ebx
  414e08:	stos   DWORD PTR es:[edi],eax
  414e09:	(bad)  
  414e0a:	shl    BYTE PTR [ebx],cl
  414e0c:	jg     0x414e6b
  414e0e:	mov    ebp,0xde7d3f41
  414e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e14:	out    dx,eax
  414e15:	dec    esp
  414e16:	in     al,0x88
  414e18:	cmc    
  414e19:	in     al,dx
  414e1a:	jae    0x414dcf
  414e1c:	rcr    ecx,1
  414e1e:	rol    BYTE PTR [ecx],0xd3
  414e21:	mov    ds:0x5ab75092,eax
  414e26:	push   DWORD PTR ds:0xbfe25174
  414e2c:	retf   
  414e2d:	(bad)  
  414e2e:	rol    DWORD PTR [esi-0x4bfb366f],1
  414e34:	jae    0x414ddd
  414e36:	into   
  414e37:	cmp    al,0x13
  414e39:	popf   
  414e3a:	les    eax,FWORD PTR [ebx-0xa]
  414e3d:	sti    
  414e3e:	lods   al,BYTE PTR ds:[esi]
  414e3f:	mov    ecx,0x8d8db0c8
  414e44:	push   0x719f24ad
  414e49:	adc    eax,0xf2768b43
  414e4e:	xor    eax,esi
  414e50:	xchg   BYTE PTR [esi+eiz*8],dh
  414e53:	inc    DWORD PTR [ecx-0x14]
  414e56:	xor    BYTE PTR [esi+0x258d0e01],al
  414e5c:	test   DWORD PTR [edi-0x744f5d1b],0x7f0673c0
  414e66:	fistp  DWORD PTR [ecx]
  414e68:	push   ebx
  414e69:	leave  
  414e6a:	fcom   QWORD PTR [ecx+ecx*2+0x487f5af2]
  414e71:	icebp  
  414e72:	sbb    eax,0x686e86ce
  414e77:	pop    esp
  414e78:	mov    dh,0x4b
  414e7a:	push   cs
  414e7b:	push   0x661c1c49
  414e80:	imul   ebp,DWORD PTR [ebp+0x1b],0xdd7d0d39
  414e87:	ret    0x4151
  414e8a:	mov    eax,0x9105454b
  414e8f:	adc    BYTE PTR [edi],0x3c
  414e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e93:	sub    ebx,eax
  414e95:	(bad)  
  414e96:	fnstsw WORD PTR [ebx]
  414e98:	add    BYTE PTR [eax],bh
  414e9a:	push   es
  414e9b:	xchg   ebp,eax
  414e9c:	jmp    0xab1dbc74
  414ea1:	mov    dl,0x18
  414ea3:	pusha  
  414ea4:	je     0x414f1f
  414ea6:	or     BYTE PTR [ecx],al
  414ea8:	mov    DWORD PTR [ebx],ebx
  414eaa:	mov    cs,edx
  414eac:	adc    eax,esp
  414eae:	cmc    
  414eaf:	cwde   
  414eb0:	add    al,BYTE PTR [ebp+eiz*2-0x53]
  414eb4:	cs push ebx
  414eb6:	(bad)  
  414eb7:	(bad)  
  414eb8:	out    dx,al
  414eb9:	bound  ebx,QWORD PTR [ecx]
  414ebb:	mov    eax,DWORD PTR [eax-0x72]
  414ebe:	mov    ebp,0x3ddd1518
  414ec3:	mov    BYTE PTR [ebx],bh
  414ec5:	push   ds
  414ec6:	cld    
  414ec7:	sbb    eax,0x4022a784
  414ecc:	xor    al,0xde
  414ece:	dec    esi
  414ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed0:	(bad)  
  414ed1:	enter  0x7617,0xd0
  414ed5:	xchg   edx,ebp
  414ed7:	mov    WORD PTR [edi],ss
  414ed9:	adc    cl,BYTE PTR [esi+0x682c1146]
  414edf:	je     0x414ead
  414ee1:	mov    WORD PTR [edx-0x4],cs
  414ee4:	sbb    edi,ebx
  414ee6:	test   eax,0x72b1672d
  414eeb:	cmp    edi,DWORD PTR [edx]
  414eed:	in     al,0x3a
  414eef:	outs   dx,DWORD PTR ds:[esi]
  414ef0:	mov    WORD PTR [ecx-0x51557ebe],?
  414ef6:	out    dx,eax
  414ef7:	xchg   DWORD PTR [edx],esi
  414ef9:	inc    edi
  414efa:	jp     0x414ec2
  414efc:	jecxz  0x414f34
  414efe:	xchg   ebp,eax
  414eff:	shl    BYTE PTR [esp+esi*2-0x28],cl
  414f03:	les    eax,FWORD PTR [eax+0x6f3fabd8]
  414f09:	add    ecx,DWORD PTR [eax+0x4eafa96b]
  414f0f:	add    al,0x2b
  414f11:	cmc    
  414f12:	and    eax,0x60dea6ae
  414f17:	sub    BYTE PTR [bx+0xa92],bl
  414f1c:	retf   
  414f1d:	call   0x5fc4:0xc7ab5fc3
  414f24:	xchg   esi,eax
  414f25:	call   0x9e8f:0x9a83174f
  414f2c:	ins    BYTE PTR es:[edi],dx
  414f2d:	div    BYTE PTR [esi-0x18ebaf01]
  414f33:	fwait
  414f34:	mov    bh,BYTE PTR [ebp-0x5e3a184b]
  414f3a:	dec    ebp
  414f3b:	jae    0x414ec1
  414f3d:	push   esp
  414f3e:	imul   ebx,DWORD PTR [edx-0x30],0xffffff9e
  414f42:	dec    eax
  414f43:	popa   
  414f44:	js     0x414fb3
  414f46:	cmp    esi,DWORD PTR [ebx+0x2a]
  414f49:	data16 ins BYTE PTR es:[edi],dx
  414f4b:	sub    edx,DWORD PTR [ecx]
  414f4d:	gs xor esp,esp
  414f50:	outs   dx,DWORD PTR ds:[esi]
  414f51:	add    al,cl
  414f53:	pop    ds
  414f54:	pop    ecx
  414f55:	xchg   edi,eax
  414f56:	push   eax
  414f57:	mov    BYTE PTR [edi+0x613f981f],al
  414f5d:	xchg   ebp,eax
  414f5e:	outs   dx,DWORD PTR ds:[esi]
  414f5f:	lds    eax,FWORD PTR [esi-0x2f807]
  414f65:	int3   
  414f66:	int    0xcc
  414f68:	je     0x414f65
  414f6a:	jne    0x414f5d
  414f6c:	mov    ds:0x9bdeb3f2,eax
  414f71:	and    eax,0x5d5dd802
  414f76:	out    dx,al
  414f77:	push   es
  414f78:	int    0x68
  414f7a:	cmp    al,0x39
  414f7c:	jae    0x414f52
  414f7e:	inc    eax
  414f7f:	sbb    al,0x5c
  414f81:	rcl    BYTE PTR [ecx+0x6a],0x29
  414f85:	and    BYTE PTR [ebx],bh
  414f87:	lahf   
  414f88:	jb     0x414f65
  414f8a:	adc    eax,0xf1c892d6
  414f8f:	mov    cl,0x3d
  414f91:	mov    ecx,eax
  414f93:	sub    dh,dh
  414f95:	es ja  0x414f6b
  414f98:	mov    esp,0xa521b9ea
  414f9d:	xchg   esi,eax
  414f9e:	and    DWORD PTR [edi+edi*8+0x607c8ceb],esi
  414fa5:	push   edx
  414fa6:	call   0x949de0e1
  414fab:	jecxz  0x414fd8
  414fad:	or     bl,BYTE PTR [edx-0x16336f7]
  414fb3:	xchg   DWORD PTR [ebx+esi*4-0x65e6c5cc],edx
  414fba:	mov    ebp,0xec0ab012
  414fbf:	out    0xea,al
  414fc1:	dec    esi
  414fc2:	mov    esi,0xf77e11d2
  414fc7:	mov    edx,0xb82996de
  414fcc:	jae    0x414fa0
  414fce:	pop    ebx
  414fcf:	adc    edi,DWORD PTR [esi+0x7c]
  414fd2:	xor    DWORD PTR [ebp+0x23],esp
  414fd5:	sub    BYTE PTR ds:0xdc0572fe,bh
  414fdb:	adc    eax,0x6c6b7065
  414fe0:	mov    dl,0x59
  414fe2:	dec    edx
  414fe3:	push   0x42aa2edf
  414fe8:	jns    0x414fb2
  414fea:	out    dx,al
  414feb:	mov    eax,ds:0x10dfa169
  414ff0:	sar    DWORD PTR [eax+0x4],0xa0
  414ff4:	sub    ch,BYTE PTR [edx+0x71]
  414ff7:	loop   0x414fa3
  414ff9:	call   0x8f5be61a
  414ffe:	inc    esi
  414fff:	pop    edx
  415000:	xchg   ebx,eax
  415001:	mov    ebx,0x6de4349e
  415006:	cld    
  415007:	adc    ch,BYTE PTR [ebp-0x3ee3ba39]
  41500d:	mov    ?,ebp
  41500f:	mov    DWORD PTR [ebx],esi
  415011:	cwde   
  415012:	adc    DWORD PTR [edx-0x58ab5a43],edi
  415018:	cmp    al,0x60
  41501a:	xchg   edi,eax
  41501b:	arpl   WORD PTR [edi+0x27d1d4bf],sp
  415021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415022:	jecxz  0x41507c
  415024:	retf   
  415025:	and    al,BYTE PTR [esi+0x46]
  415028:	jno    0x415023
  41502a:	jge    0x415082
  41502c:	ins    DWORD PTR es:[edi],dx
  41502d:	cmp    BYTE PTR [ecx+esi*4],0xc2
  415031:	or     eax,0xc950517
  415036:	mov    dl,BYTE PTR [ecx-0x37ae4331]
  41503c:	in     al,0xf5
  41503e:	rcr    BYTE PTR ds:0x8530fbd5,cl
  415044:	int    0x88
  415046:	mov    ecx,0x1c6318ed
  41504b:	clc    
  41504c:	fwait
  41504d:	adc    DWORD PTR [eax+0x3a],ebx
  415050:	rcl    BYTE PTR [ebx+0x717550cc],cl
  415056:	fstp   TBYTE PTR [esi-0x21a1930b]
  41505c:	sub    al,0xde
  41505e:	push   ebp
  41505f:	xor    dh,BYTE PTR [edi]
  415061:	xchg   edi,eax
  415062:	sub    bh,BYTE PTR [ebx]
  415064:	test   eax,0xb779c3a7
  41506a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506b:	or     esp,DWORD PTR ds:0x2d3dc27e
  415071:	xchg   esp,eax
  415072:	(bad)  
  415073:	loop   0x41507d
  415075:	mov    WORD PTR [ebx+0x584d53f2],cs
  41507b:	mov    ecx,0x4612212c
  415080:	inc    ebp
  415081:	dec    edi
  415082:	push   esi
  415083:	jno    0x4150e1
  415085:	dec    eax
  415086:	ins    DWORD PTR es:[edi],dx
  415087:	or     al,0xa1
  415089:	push   0xffffff9b
  41508b:	pop    edi
  41508c:	test   BYTE PTR [edi+ecx*8-0x7],dh
  415090:	hlt    
  415091:	sbb    DWORD PTR [edi-0x62],eax
  415094:	or     eax,0x945a8d9a
  415099:	xor    BYTE PTR [ebx],bl
  41509b:	gs (bad) 
  41509d:	sar    BYTE PTR [edi-0x4d3bc9d8],cl
  4150a3:	sub    al,0xd8
  4150a5:	fdivp  st(4),st
  4150a7:	imul   eax,DWORD PTR [esi+0x78a6549],0x43
  4150ae:	les    ebx,FWORD PTR [ebx]
  4150b0:	adc    ebx,DWORD PTR [edx+0x55]
  4150b3:	cmp    BYTE PTR [ebx-0x72b023d5],al
  4150b9:	aam    0x53
  4150bb:	ret    
  4150bc:	sub    eax,0xeadfa3ae
  4150c1:	dec    eax
  4150c2:	pop    edx
  4150c3:	pushf  
  4150c4:	xchg   BYTE PTR [esi+0x23f0997a],dl
  4150ca:	push   esi
  4150cb:	jg     0x415131
  4150cd:	push   edx
  4150ce:	xchg   edi,eax
  4150cf:	fisttp DWORD PTR [edx-0x4984c6b1]
  4150d5:	scas   eax,DWORD PTR es:[edi]
  4150d6:	in     al,dx
  4150d7:	mov    eax,DWORD PTR [ecx]
  4150d9:	ins    BYTE PTR es:[edi],dx
  4150da:	cmc    
  4150db:	sahf   
  4150dc:	lock pop edx
  4150de:	lods   eax,DWORD PTR ds:[esi]
  4150df:	dec    ecx
  4150e0:	and    DWORD PTR [ebx-0x26],edi
  4150e3:	jp     0x415127
  4150e5:	mov    al,ds:0xd6225e9b
  4150ea:	int3   
  4150eb:	in     eax,0xdf
  4150ed:	out    dx,al
  4150ee:	loope  0x4150eb
  4150f0:	ja     0x415158
  4150f2:	ss retf 
  4150f4:	and    DWORD PTR [ecx+0x22],ebp
  4150f7:	shl    DWORD PTR [edx],cl
  4150f9:	mov    bh,0x3
  4150fb:	out    0x85,eax
  4150fd:	xchg   DWORD PTR [edx-0x7230d60c],ebx
  415103:	inc    ebp
  415104:	pusha  
  415105:	hlt    
  415106:	rcl    DWORD PTR [esi],0xf
  415109:	jg     0x415170
  41510b:	mul    DWORD PTR [esi+0x14ab59a4]
  415111:	clc    
  415112:	(bad)  
  415113:	jbe    0x415118
  415115:	int3   
  415116:	dec    edi
  415117:	lods   al,BYTE PTR ds:[esi]
  415118:	dec    ecx
  415119:	popf   
  41511a:	pushf  
  41511b:	jl     0x415195
  41511d:	and    al,cl
  41511f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415120:	jmp    0x4150d3
  415122:	push   ebx
  415123:	and    al,0x5
  415125:	mov    ds:0x8ec24e32,al
  41512a:	jae    0x415134
  41512c:	lods   eax,DWORD PTR ds:[esi]
  41512d:	lock dec ecx
  41512f:	(bad)  [ebx-0x18]
  415132:	scas   al,BYTE PTR es:[edi]
  415133:	xor    eax,0x8320dfe0
  415138:	xchg   ebx,eax
  415139:	xor    esp,DWORD PTR [esi-0x80]
  41513c:	int    0x43
  41513e:	push   edi
  41513f:	push   edi
  415140:	dec    edx
  415141:	push   edx
  415142:	inc    edi
  415143:	in     al,dx
  415144:	icebp  
  415145:	jmp    0x415102
  415147:	xor    eax,0x2de47cb5
  41514c:	jne    0x41519c
  41514e:	scas   al,BYTE PTR es:[edi]
  41514f:	sbb    DWORD PTR [ebp-0x72e30a88],ecx
  415155:	and    DWORD PTR [edi],0xfffffffb
  415158:	rcl    BYTE PTR [edi-0xe21e738],cl
  41515e:	add    DWORD PTR [edx],ecx
  415160:	jl     0x41519f
  415162:	inc    ebp
  415163:	sub    al,0xda
  415165:	xor    ch,BYTE PTR ds:0x109d55c0
  41516b:	in     al,0xe5
  41516d:	adc    eax,0x719d4e5c
  415172:	xor    ebp,DWORD PTR ds:0x9bb9621e
  415178:	push   edi
  415179:	imul   DWORD PTR [edi+0x31c46eb9]
  41517f:	sub    eax,0x92ebde06
  415184:	jmp    0x4151aa
  415186:	add    eax,0xc0cef9a8
  41518b:	not    DWORD PTR [ebp+ebp*4+0x3959a03c]
  415192:	dec    esp
  415193:	(bad)  
  415194:	ret    
  415195:	and    BYTE PTR [ebp+0x212949b5],bh
  41519b:	xlat   BYTE PTR ds:[ebx]
  41519c:	push   es
  41519d:	test   DWORD PTR [eax+0x6e2be3e5],ecx
  4151a3:	jmp    0x488644a5
  4151a8:	add    DWORD PTR [esi+0x7fea08d6],ebx
  4151ae:	mov    edi,0x3b39a971
  4151b3:	push   0xffffffe3
  4151b5:	pop    ecx
  4151b6:	cld    
  4151b7:	jmp    0x415157
  4151b9:	lds    eax,FWORD PTR [ebx+0x4a31f40b]
  4151bf:	mov    ebp,0xa6c4c4af
  4151c4:	addr16 out dx,eax
  4151c6:	enter  0xc916,0x3
  4151ca:	out    dx,al
  4151cb:	xor    DWORD PTR [edx+0x3d],esi
  4151ce:	push   0x43
  4151d0:	arpl   dx,si
  4151d2:	jo     0x415173
  4151d4:	mov    ah,0xb2
  4151d6:	cmp    edi,DWORD PTR [ebx]
  4151d8:	dec    edx
  4151d9:	xchg   ecx,eax
  4151da:	push   ds
  4151db:	or     eax,0xa5201cf
  4151e0:	ror    DWORD PTR [ebx+0x9],0x79
  4151e4:	pop    ecx
  4151e5:	jg     0x415240
  4151e7:	sub    eax,0xda879f4f
  4151ec:	aam    0x84
  4151ee:	sbb    edx,DWORD PTR [ebx+0x4]
  4151f1:	iret   
  4151f2:	pushf  
  4151f3:	mov    ebx,0x9e200e55
  4151f8:	push   es
  4151f9:	xchg   ecx,eax
  4151fa:	fcmove st,st(3)
  4151fc:	je     0x4151e5
  4151fe:	add    ebp,DWORD PTR [ebp+0x27585d35]
  415204:	sbb    al,0xcd
  415206:	aam    0x9c
  415208:	rcr    dl,0x97
  41520b:	into   
  41520c:	dec    ebp
  41520d:	xor    esp,DWORD PTR [ebp+0x79ad28d5]
  415213:	shl    dh,0xd6
  415216:	jle    0x41524d
  415218:	(bad)  
  415219:	xlat   BYTE PTR ds:[ebx]
  41521a:	push   ecx
  41521b:	sbb    eax,0xacf70ca0
  415220:	inc    edi
  415221:	call   0x901f:0xe1b319f0
  415228:	test   BYTE PTR [edx+0x278f84a],ch
  41522e:	xchg   BYTE PTR [ebp-0x74],bh
  415231:	mov    ebp,0x7ccee7bc
  415236:	mov    ebp,0x15887967
  41523b:	and    al,0x57
  41523d:	mov    bl,0xc7
  41523f:	jnp    0x415258
  415241:	fldenv [eax-0x3fb5e66d]
  415247:	ja     0x41525a
  415249:	pusha  
  41524a:	scas   eax,DWORD PTR es:[edi]
  41524b:	inc    edi
  41524c:	nop
  41524d:	xchg   edi,eax
  41524e:	pop    edx
  41524f:	cmp    DWORD PTR [esi],edi
  415251:	jae    0x415293
  415253:	cmp    ah,BYTE PTR [edx-0x5ba945fb]
  415259:	(bad)  
  41525a:	retf   
  41525b:	jmp    0xbb75:0x650ff7f8
  415262:	sub    ch,BYTE PTR [esi+ebp*2+0x68]
  415266:	or     al,0xb6
  415268:	push   ss
  415269:	sub    BYTE PTR [ecx],dl
  41526b:	sub    eax,0x95a80f0c
  415270:	mov    cl,0xf1
  415272:	cmp    ch,bl
  415274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415275:	jne    0x41522f
  415277:	sub    al,bh
  415279:	into   
  41527a:	xchg   edx,eax
  41527b:	inc    ebx
  41527c:	pusha  
  41527d:	sub    ah,BYTE PTR [edi+0x26]
  415280:	pop    eax
  415281:	mov    dh,dl
  415283:	and    BYTE PTR [ebp-0x737dc277],al
  415289:	push   esi
  41528a:	sar    DWORD PTR [eax+0x1af8e355],1
  415290:	pop    ecx
  415291:	xchg   edi,eax
  415292:	les    ecx,FWORD PTR [edi+0x7]
  415295:	pusha  
  415296:	sub    eax,0xd79c9210
  41529b:	cmp    dh,bh
  41529d:	aaa    
  41529e:	aas    
  41529f:	lock ds jno 0x4152b2
  4152a3:	out    dx,al
  4152a4:	fmul   DWORD PTR [esi]
  4152a6:	sub    al,0xf5
  4152a8:	clc    
  4152a9:	sub    dh,cl
  4152ab:	jp     0x4152f3
  4152ad:	inc    esi
  4152ae:	stos   DWORD PTR es:[edi],eax
  4152af:	mov    eax,0xbb12259b
  4152b4:	push   ebx
  4152b5:	int3   
  4152b6:	pop    ds
  4152b7:	mov    ebx,0xc9513b67
  4152bc:	pop    edi
  4152bd:	sar    BYTE PTR [ebx+0x35e6f832],1
  4152c3:	icebp  
  4152c4:	or     BYTE PTR [ebx-0x1c],ch
  4152c7:	pop    es
  4152c8:	popf   
  4152c9:	cmp    BYTE PTR [ebp-0x5],dh
  4152cc:	jmp    0x4152c9
  4152ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152cf:	dec    esp
  4152d0:	push   0x62a636f1
  4152d5:	push   cs
  4152d6:	xor    dl,BYTE PTR [edx+0x3a5c06df]
  4152dc:	ror    BYTE PTR [ebx],1
  4152de:	push   ds
  4152df:	(bad)  
  4152e0:	pop    ebp
  4152e1:	and    BYTE PTR [ebp+eax*2-0x3fd28f7a],al
  4152e8:	jge    0x415292
  4152ea:	popf   
  4152eb:	loopne 0x4152e7
  4152ed:	loop   0x4152b2
  4152ef:	fnstenv ds:0x9588a6f0
  4152f5:	cmp    BYTE PTR [eax+ecx*4-0x1d],ch
  4152f9:	loopne 0x4152de
  4152fb:	push   es
  4152fc:	push   edi
  4152fd:	dec    esp
  4152fe:	xchg   ebp,eax
  4152ff:	dec    ebx
  415300:	jae    0x41529a
  415302:	retf   0x45ab
  415305:	push   edx
  415306:	lods   eax,DWORD PTR ds:[esi]
  415307:	neg    ecx
  415309:	add    eax,0x4b15881d
  41530e:	popa   
  41530f:	das    
  415310:	ins    BYTE PTR es:[edi],dx
  415311:	jns    0x4152d2
  415313:	xor    DWORD PTR [eax],eax
  415315:	imul   ebx,ecx,0xb68f8ba9
  41531b:	(bad)  
  41531c:	enter  0xf428,0xa5
  415320:	jno    0x4152aa
  415322:	clc    
  415323:	dec    ebp
  415324:	in     al,0xb4
  415326:	repnz (bad) 
  415328:	dec    edx
  415329:	push   es
  41532a:	stos   BYTE PTR es:[edi],al
  41532b:	xchg   DWORD PTR [ebp-0xe],esp
  41532e:	push   ss
  41532f:	push   ebx
  415330:	xor    edx,ebp
  415332:	sbb    eax,0x8d1b5aa
  415337:	in     al,0x4
  415339:	xchg   edi,eax
  41533a:	push   edi
  41533b:	pop    ecx
  41533c:	xchg   ebx,eax
  41533d:	jno    0x4153b7
  41533f:	test   esi,esi
  415341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415342:	js     0x415354
  415344:	push   es
  415345:	cmp    BYTE PTR [edx-0x2e],dl
  415348:	mov    al,ds:0xf9e8fd6f
  41534d:	adc    al,0xef
  41534f:	frstor [ebp-0x3e]
  415352:	mov    ds:0x779b5f8e,al
  415357:	and    bl,BYTE PTR [ebx]
  415359:	cmp    BYTE PTR fs:[edx+0x3],ah
  41535d:	pop    ss
  41535e:	sbb    ch,BYTE PTR [esi]
  415360:	pusha  
  415361:	outs   dx,BYTE PTR ds:[esi]
  415362:	retf   0xe123
  415365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415366:	out    0xc,eax
  415368:	test   cl,ch
  41536a:	sub    cl,BYTE PTR ds:[edi+ebx*1-0x278e98bc]
  415372:	cvtps2pi mm1,xmm3
  415375:	shl    esi,cl
  415377:	add    edx,0x45
  41537a:	mov    ds:0x748b228f,eax
  41537f:	lahf   
  415380:	out    dx,eax
  415381:	mov    cl,0xf7
  415383:	cld    
  415384:	imul   eax,ecx,0xfffffffb
  415387:	mov    edx,0x5c819caa
  41538c:	dec    ebp
  41538d:	dec    ebp
  41538e:	jle    0x415325
  415390:	mov    cl,0x3
  415392:	cs dec ecx
  415394:	pushf  
  415395:	out    0xb9,al
  415397:	mov    esp,0x85f3d7bd
  41539c:	loop   0x41534c
  41539e:	test   dh,dh
  4153a0:	fs (bad) 
  4153a2:	xchg   esi,eax
  4153a3:	mov    ch,0x95
  4153a5:	inc    esp
  4153a6:	(bad)  
  4153a7:	jmp    0x78145159
  4153ac:	sbb    al,BYTE PTR [ebx+0x1349be33]
  4153b2:	ja     0x41540b
  4153b4:	iret   
  4153b5:	and    BYTE PTR [esi+0x44],0xe
  4153b9:	scas   al,BYTE PTR es:[edi]
  4153ba:	daa    
  4153bb:	bnd jge 0x4153ee
  4153be:	hlt    
  4153bf:	mov    WORD PTR [ecx-0x3934ca3e],?
  4153c5:	out    0xd4,al
  4153c7:	scas   al,BYTE PTR es:[edi]
  4153c8:	data16 hlt 
  4153ca:	inc    eax
  4153cb:	mov    edi,0x69282561
  4153d0:	rcr    DWORD PTR [eax+0x56],1
  4153d3:	addr16 push eax
  4153d5:	mov    al,ds:0x7834aa0d
  4153da:	int    0xf2
  4153dc:	es pop esp
  4153de:	lods   eax,DWORD PTR ds:[esi]
  4153df:	aas    
  4153e0:	imul   edi,DWORD PTR [edi+edx*2-0x3],0x30c770ec
  4153e8:	bound  ecx,QWORD PTR [edx]
  4153ea:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4153ec:	stos   DWORD PTR es:[edi],eax
  4153ed:	jge    0x415432
  4153ef:	ret    0xb67
  4153f2:	lock jmp 0x6126:0x3ee4452e
  4153fa:	cli    
  4153fb:	pop    edx
  4153fc:	xchg   al,ah
  4153fe:	push   ds
  4153ff:	enter  0x401c,0xf1
  415403:	push   eax
  415404:	inc    ebx
  415405:	jmp    0x838c:0x58590fd3
  41540c:	jge    0x415485
  41540e:	inc    esp
  41540f:	add    ebp,DWORD PTR [ebp+edx*2-0x5c]
  415413:	out    dx,eax
  415414:	lods   eax,DWORD PTR ds:[esi]
  415415:	stc    
  415416:	lds    esi,FWORD PTR [eax-0x47]
  415419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541a:	inc    ecx
  41541b:	call   0xb0d74247
  415420:	mov    al,0xc2
  415422:	or     DWORD PTR [edx],esi
  415424:	cs jle 0x4153c4
  415427:	imul   esp,edx,0xea90b0b3
  41542d:	mov    al,ds:0x2f39aa1f
  415432:	gs (bad) 
  415434:	mov    cl,0x5f
  415436:	xor    esi,ebx
  415438:	arpl   WORD PTR [eax+0x6e],sp
  41543b:	push   0xffffffc6
  41543d:	pop    eax
  41543e:	cmp    bh,BYTE PTR [edx-0x68ea9652]
  415444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415445:	aam    0x24
  415447:	in     eax,0x6f
  415449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41544a:	mov    esp,0xea34a3cf
  41544f:	push   eax
  415450:	repnz popa 
  415452:	add    al,0x51
  415454:	in     al,0x6e
  415456:	imul   BYTE PTR [ecx+0x3f8dd929]
  41545c:	sbb    eax,0x5ca89848
  415461:	or     BYTE PTR [edx],dh
  415463:	rcr    esp,0x23
  415466:	cld    
  415467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415468:	dec    edx
  415469:	shr    BYTE PTR [ecx+ebp*2-0x504871f1],cl
  415470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415471:	test   edx,edi
  415473:	xchg   esi,eax
  415474:	das    
  415475:	pop    ss
  415476:	pop    edi
  415477:	pop    ss
  415478:	in     eax,0x5f
  41547a:	iret   
  41547b:	icebp  
  41547c:	das    
  41547d:	or     dh,bl
  41547f:	ret    
  415480:	sbb    dl,dh
  415482:	xchg   esp,eax
  415483:	push   ecx
  415484:	push   esp
  415485:	or     edx,esi
  415487:	fmul   QWORD PTR [ecx-0x72]
  41548a:	dec    eax
  41548b:	push   ebp
  41548c:	stos   DWORD PTR es:[edi],eax
  41548d:	jo     0x415423
  41548f:	and    al,0x78
  415491:	int3   
  415492:	call   0xbcaae08
  415497:	cmp    DWORD PTR [esi],0xffffffd2
  41549a:	jns    0x4154ea
  41549c:	or     ch,bh
  41549e:	and    ch,BYTE PTR [ecx+0x72da55c5]
  4154a4:	sbb    ecx,edx
  4154a6:	and    ebx,edx
  4154a8:	int    0x37
  4154aa:	add    eax,0xf61261aa
  4154af:	or     esp,edi
  4154b1:	into   
  4154b2:	cmp    DWORD PTR ds:0x85b86468,0xe749255d
  4154bc:	or     DWORD PTR [eax+0x19d3145d],0x2a
  4154c3:	out    0x6c,eax
  4154c5:	push   edx
  4154c6:	loope  0x415468
  4154c8:	push   0x196058fc
  4154cd:	fld    DWORD PTR [ebp+0x7c]
  4154d0:	(bad)  
  4154d2:	into   
  4154d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d4:	lahf   
  4154d5:	lock loopne 0x4154e5
  4154d8:	sbb    al,0x27
  4154da:	stc    
  4154db:	push   ecx
  4154dc:	pop    edx
  4154dd:	outs   dx,BYTE PTR ds:[esi]
  4154de:	xchg   DWORD PTR [eax],edx
  4154e0:	call   0xe104ed02
  4154e5:	or     bl,ch
  4154e7:	(bad)  
  4154e8:	call   0x433a:0xcda2ed85
  4154ef:	sbb    esp,ecx
  4154f1:	ret    
  4154f2:	and    edi,0xdbeea806
  4154f8:	xlat   BYTE PTR ds:[ebx]
  4154f9:	jae    0x4154d7
  4154fb:	cwde   
  4154fc:	fdivr  DWORD PTR [edi-0x38]
  4154ff:	pop    eax
  415500:	(bad)  
  415501:	js     0x41556d
  415503:	ins    DWORD PTR es:[edi],dx
  415504:	mov    esi,0x606ccbcc
  415509:	mov    bl,0x93
  41550b:	dec    edx
  41550c:	pop    DWORD PTR [esi-0x79b4f44f]
  415512:	ja     0x415496
  415514:	xor    al,0x19
  415516:	add    BYTE PTR [edx+0x75bf9d03],dl
  41551c:	(bad)  
  41551d:	cmp    ah,BYTE PTR ds:0x5930d22e
  415523:	mov    edi,0x7793cfa4
  415528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415529:	stc    
  41552a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41552b:	sub    ch,ah
  41552d:	adc    al,0xe5
  41552f:	cli    
  415530:	sub    DWORD PTR [ebx-0x56],ecx
  415533:	or     dl,ch
  415535:	xchg   edi,eax
  415536:	in     al,dx
  415537:	leave  
  415538:	les    ecx,FWORD PTR [ebp-0x67b2437c]
  41553e:	cmp    al,0x87
  415540:	xchg   edx,eax
  415541:	pop    ss
  415542:	repnz fild WORD PTR ds:[edx-0x1b1556a6]
  41554a:	dec    BYTE PTR [ebp+0x3708e5f1]
  415550:	jb     0x41552b
  415552:	aaa    
  415553:	or     eax,0xb6bf4b42
  415558:	jns    0x41553f
  41555a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555b:	mov    ecx,0xac8d2ab1
  415560:	clc    
  415561:	(bad)  
  415562:	xchg   ecx,eax
  415563:	scas   al,BYTE PTR es:[edi]
  415564:	popa   
  415565:	retf   
  415566:	dec    esi
  415567:	mov    ah,0x76
  415569:	jecxz  0x4155a7
  41556b:	or     BYTE PTR [ebp+0x52],dh
  41556e:	jp     0x4155ba
  415570:	add    BYTE PTR [edx],0x57
  415573:	push   0xd1c2989
  415578:	inc    ebp
  415579:	(bad)  
  41557a:	fs push edx
  41557c:	lahf   
  41557d:	add    cl,BYTE PTR [edx+ecx*1]
  415580:	inc    ecx
  415581:	jmp    0x41551f
  415583:	pop    es
  415584:	add    dl,al
  415586:	inc    eax
  415587:	cmp    DWORD PTR [edi+0x42],ebp
  41558a:	(bad)  
  41558c:	or     bl,BYTE PTR [ebp-0x555b2918]
  415592:	push   ecx
  415593:	out    0x4c,al
  415595:	scas   al,BYTE PTR es:[edi]
  415596:	bound  edx,QWORD PTR [esi-0x4b]
  415599:	xlat   BYTE PTR ds:[ebx]
  41559a:	jmp    0x41561b
  41559c:	fisubr DWORD PTR [eax+0x38]
  41559f:	mov    edx,0xa249d3ed
  4155a4:	fadd   QWORD PTR [edi-0x54f8c810]
  4155aa:	popf   
  4155ab:	iret   
  4155ac:	popf   
  4155ad:	imul   eax,esi,0x8
  4155b0:	loopne 0x415548
  4155b2:	xchg   edi,ebx
  4155b4:	pop    ecx
  4155b5:	push   esp
  4155b6:	ror    eax,1
  4155b8:	loope  0x4155ef
  4155ba:	jmp    DWORD PTR [edi+0x1b38761e]
  4155c0:	inc    esi
  4155c1:	out    0xf1,al
  4155c3:	mov    eax,ds:0xaf3d896a
  4155c8:	(bad)  
  4155c9:	lods   al,BYTE PTR ds:[esi]
  4155ca:	mov    dh,BYTE PTR fs:[ebx*2+0x1f37e982]
  4155d2:	mov    esi,DWORD PTR [ebp+0x60564744]
  4155d8:	outs   dx,BYTE PTR ds:[esi]
  4155d9:	cmp    cl,BYTE PTR [esi]
  4155db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155dc:	cli    
  4155dd:	lea    ebx,[ecx+eax*4+0x5bd38bc4]
  4155e4:	xchg   ecx,eax
  4155e5:	xor    ebp,DWORD PTR [edx-0x27]
  4155e8:	push   0xffffffa3
  4155ea:	repz (bad) 
  4155ec:	push   eax
  4155ed:	push   edi
  4155ee:	xor    cl,BYTE PTR [edi+0xe]
  4155f1:	into   
  4155f2:	cli    
  4155f3:	and    al,0x80
  4155f5:	into   
  4155f6:	cmp    ecx,DWORD PTR [ecx-0x746b2fe8]
  4155fc:	std    
  4155fd:	jecxz  0x41559e
  4155ff:	mov    DWORD PTR [edi+0x5c0cfd83],ebp
  415605:	jg     0x415685
  415607:	adc    DWORD PTR [esi-0xc],esp
  41560a:	mov    BYTE PTR [ecx-0x48],ah
  41560d:	inc    ecx
  41560e:	ja     0x41564d
  415610:	pop    edx
  415611:	push   esp
  415612:	pop    ss
  415613:	mov    ebp,0xd7a61a9c
  415618:	or     eax,0xded7449a
  41561d:	jp     0x41566a
  41561f:	pop    edx
  415620:	adc    dl,BYTE PTR [edx+0x18]
  415623:	dec    ecx
  415624:	or     ebp,eax
  415626:	out    0xa4,eax
  415628:	sub    al,0x7c
  41562a:	fstp   st(1)
  41562c:	imul   esp,edx,0xa76d78af
  415632:	jmp    0x4156b3
  415634:	shl    BYTE PTR [ecx+eax*1],1
  415637:	aaa    
  415638:	shl    BYTE PTR [ebx],0xad
  41563b:	push   esi
  41563c:	dec    edi
  41563d:	push   es
  41563e:	es jns 0x415604
  415641:	push   ecx
  415642:	add    edi,DWORD PTR [eax+0x75828e22]
  415648:	mov    BYTE PTR [ecx],ah
  41564a:	das    
  41564b:	cmp    BYTE PTR [esi],al
  41564d:	add    dh,0x23
  415650:	mov    cl,0xb
  415652:	push   ebp
  415653:	cmp    eax,0x7be67e44
  415658:	jle    0x415630
  41565a:	jb     0x41563d
  41565c:	mov    ds:0xa8af573c,eax
  415661:	xchg   DWORD PTR [eax+0x61],edi
  415664:	sub    ebx,DWORD PTR ds:0x1f9d8ee9
  41566a:	stos   BYTE PTR es:[edi],al
  41566b:	out    dx,al
  41566c:	stc    
  41566d:	pop    ss
  41566e:	mov    eax,ds:0x9d82177f
  415673:	add    al,0x66
  415675:	jle    0x4156ed
  415677:	mov    ebx,esp
  415679:	and    eax,DWORD PTR [eax-0x2322887d]
  41567f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415680:	les    ecx,FWORD PTR [ebx+ebx*4+0x38]
  415684:	aas    
  415685:	ins    DWORD PTR es:[edi],dx
  415686:	pop    esp
  415687:	enter  0xed17,0x86
  41568b:	xlat   BYTE PTR ds:[ebx]
  41568c:	xchg   esp,eax
  41568d:	imul   edx,DWORD PTR ds:0x4978a7f8,0x6d
  415694:	(bad)  
  415695:	mov    eax,0x7e9c49a4
  41569a:	inc    ecx
  41569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41569c:	mov    dh,ah
  41569e:	push   edi
  41569f:	jg     0x415627
  4156a1:	inc    ecx
  4156a2:	xor    eax,0x4992ecc8
  4156a7:	imul   ecx,esi,0x73b76eb2
  4156ad:	xor    DWORD PTR [ebp-0x5a],edx
  4156b0:	pushf  
  4156b1:	pop    esp
  4156b2:	gs mov cl,0x6b
  4156b5:	push   ecx
  4156b6:	ss jge 0x415705
  4156b9:	mov    eax,0x833042a3
  4156be:	jle    0x41565c
  4156c0:	mov    DWORD PTR [ebp-0xc],esi
  4156c3:	sahf   
  4156c4:	daa    
  4156c5:	fsub   DWORD PTR [edx-0x6bc0796e]
  4156cb:	sub    BYTE PTR [eax-0x30a37d7e],0x7d
  4156d2:	fisttp QWORD PTR [esi]
  4156d4:	ss cs sub eax,0x7d6d04a4
  4156db:	push   ss
  4156dc:	sbb    ebx,DWORD PTR [ebx-0x10]
  4156df:	jecxz  0x4156b6
  4156e1:	cdq    
  4156e2:	mov    cl,0xbb
  4156e4:	mov    al,0x19
  4156e6:	xor    DWORD PTR [ecx-0x61a4e002],0x19
  4156ed:	popf   
  4156ee:	mov    WORD PTR [eax-0x5c],cs
  4156f1:	xor    DWORD PTR [edi],edx
  4156f3:	fadd   QWORD PTR [ecx+0xe]
  4156f6:	(bad)  
  4156f7:	addr16 inc esi
  4156f9:	inc    edx
  4156fa:	in     eax,0x91
  4156fc:	cmp    al,0x98
  4156fe:	(bad)  
  4156ff:	jno    0x41575b
  415701:	push   es
  415702:	fnstsw WORD PTR [ebx+0x7d2e63c6]
  415708:	xchg   DWORD PTR [edi-0x6e],eax
  41570b:	stos   BYTE PTR es:[edi],al
  41570c:	das    
  41570d:	ret    0xaa75
  415710:	push   esi
  415711:	mov    eax,ds:0x518b9b8e
  415716:	ret    
  415717:	and    al,BYTE PTR [ebp+0x66]
  41571a:	dec    BYTE PTR [esi]
  41571c:	gs mov esi,0xea3e4ba0
  415722:	das    
  415723:	lock mov eax,ds:0x72769b7d
  415729:	cmp    esi,DWORD PTR [ebp+0x18fe180d]
  41572f:	out    dx,al
  415730:	jmp    0x41570e
  415732:	scas   al,BYTE PTR es:[edi]
  415733:	cmp    eax,0x33b2b1be
  415738:	icebp  
  415739:	dec    ecx
  41573a:	xchg   edx,eax
  41573b:	inc    edi
  41573c:	mov    cl,0xa3
  41573e:	test   DWORD PTR [edi],eax
  415740:	loopne 0x4157aa
  415742:	mov    dl,0xc4
  415744:	fld    DWORD PTR [ebp+0x1f3b5fdb]
  41574a:	lods   al,BYTE PTR ds:[si]
  41574c:	(bad)  
  41574d:	xchg   edx,eax
  41574e:	inc    esp
  41574f:	xor    eax,DWORD PTR ss:[ebp+0x11]
  415753:	(bad)  [edi+0x555c878e]
  415759:	sub    bl,BYTE PTR ds:0x22ec289c
  41575f:	(bad)  
  415760:	push   ds
  415761:	test   DWORD PTR [eax],0x61404168
  415767:	ja     0x41573c
  415769:	xor    ecx,ecx
  41576b:	fsub   DWORD PTR [ebx+0x22162b8d]
  415771:	pop    es
  415772:	sub    al,0x8c
  415774:	call   0x2ffac071
  415779:	mov    ch,0xa
  41577b:	sub    DWORD PTR [edx],0xffffffe3
  41577e:	dec    ebp
  41577f:	ins    DWORD PTR es:[edi],dx
  415780:	out    0xea,eax
  415782:	stos   DWORD PTR es:[edi],eax
  415783:	push   eax
  415784:	and    cl,BYTE PTR [edi*2-0x2b6fac9e]
  41578b:	cmp    eax,0xd200519a
  415790:	jp     0x41573d
  415792:	xchg   ebp,eax
  415793:	sahf   
  415794:	or     bh,BYTE PTR [eax]
  415796:	xchg   ebp,eax
  415797:	inc    edi
  415798:	bound  ebp,QWORD PTR [ecx-0x5360bd23]
  41579e:	retf   0x4327
  4157a1:	sbb    BYTE PTR [edx-0x35],cl
  4157a4:	jne    0x41574c
  4157a6:	je     0x4157ec
  4157a8:	and    edi,esp
  4157aa:	sahf   
  4157ab:	(bad)  
  4157ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ad:	and    al,0xa1
  4157af:	and    ebx,DWORD PTR [ecx+0xa07e07]
  4157b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b6:	mov    ecx,0xba9f15e8
  4157bb:	jbe    0x415775
  4157bd:	ret    0x2b09
  4157c0:	rol    bl,cl
  4157c2:	push   cs
  4157c3:	mov    bl,0x38
  4157c5:	imul   eax,DWORD PTR [esi],0x1cdac867
  4157cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157cc:	push   esp
  4157cd:	daa    
  4157ce:	push   0x46305950
  4157d3:	mov    edi,0x59c046d3
  4157d8:	add    eax,edx
  4157da:	test   BYTE PTR [ebp+0x60],dl
  4157dd:	push   eax
  4157de:	and    edx,0xfffc5952
  4157e4:	iret   
  4157e5:	mov    dl,0xec
  4157e7:	das    
  4157e8:	or     al,BYTE PTR [ecx]
  4157ea:	jecxz  0x415789
  4157ec:	dec    edi
  4157ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ee:	cmp    DWORD PTR ds:0xa5926711,ebx
  4157f4:	test   al,0x68
  4157f6:	lock xchg ebx,eax
  4157f8:	mov    edx,0xb568c427
  4157fd:	call   0x6e62:0xe0421c0b
  415804:	retf   
  415805:	hlt    
  415806:	jp     0x4157fb
  415808:	aas    
  415809:	shl    DWORD PTR [esi-0x6d22696f],cl
  41580f:	cmp    eax,0x6fa3076a
  415814:	cld    
  415815:	nop
  415816:	mov    ah,0xa8
  415818:	ret    0xc252
  41581b:	mov    edx,DWORD PTR [ebx-0x5d7d2138]
  415821:	shl    BYTE PTR [edx+0x6d042596],1
  415827:	adc    ah,BYTE PTR [ecx-0x65]
  41582a:	xor    edx,DWORD PTR ds:0x47877fdf
  415830:	pop    ebp
  415831:	dec    edi
  415832:	popa   
  415833:	inc    edx
  415834:	mov    BYTE PTR [ebx-0xf],ah
  415837:	mov    ecx,0xeabb1621
  41583c:	cmp    eax,0xb9cb5a7a
  415841:	cli    
  415842:	jbe    0x41581b
  415844:	push   0xffffffba
  415846:	pop    ecx
  415847:	ja     0x415829
  415849:	int    0x1f
  41584b:	jnp    0x4158be
  41584d:	sub    ch,BYTE PTR cs:[edx]
  415850:	mov    al,ds:0x74f66973
  415855:	icebp  
  415856:	ja     0x415843
  415858:	pop    esp
  415859:	pop    ebp
  41585a:	sbb    eax,0xe851d823
  41585f:	test   dh,cl
  415861:	dec    esi
  415862:	push   edi
  415863:	jmp    0x4158b8
  415865:	inc    ecx
  415866:	mov    cl,0x8
  415868:	scas   eax,DWORD PTR es:[edi]
  415869:	(bad)  
  41586a:	jmp    0x6040000d
  41586f:	or     eax,0x48456c14
  415874:	hlt    
  415875:	xchg   DWORD PTR [edx-0x7b],esp
  415878:	mov    esp,0x8ca21899
  41587d:	inc    eax
  41587e:	or     dl,ch
  415880:	or     bl,bl
  415882:	xor    eax,0x3a345289
  415887:	mov    edx,0xff45854f
  41588c:	xor    BYTE PTR [eax-0xb7e1a15],ah
  415892:	gs pop edx
  415894:	movaps xmm2,xmm5
  415897:	pop    edx
  415898:	mov    ebx,0x97f0474b
  41589d:	pop    eax
  41589e:	test   edx,edi
  4158a0:	shl    BYTE PTR [ebp-0x3f],0xee
  4158a4:	cmp    dh,cl
  4158a6:	mov    dh,0x46
  4158a8:	inc    ecx
  4158a9:	in     al,dx
  4158aa:	mov    al,0x6b
  4158ac:	hlt    
  4158ad:	inc    edx
  4158ae:	sahf   
  4158af:	popf   
  4158b0:	inc    edx
  4158b1:	jg     0x4158ae
  4158b3:	jmp    0x41586b
  4158b5:	shr    BYTE PTR [eax+0x72],cl
  4158b8:	lahf   
  4158b9:	loopne 0x415863
  4158bb:	jbe    0x415851
  4158bd:	dec    ecx
  4158be:	lea    ebx,[bp+0x7]
  4158c2:	fistp  DWORD PTR ss:[edx+0x51e78b3a]
  4158c9:	loope  0x415939
  4158cb:	push   ecx
  4158cc:	mov    esi,ds
  4158ce:	xchg   esp,eax
  4158cf:	mov    ebx,0xa139d2a
  4158d4:	iret   
  4158d5:	dec    ebx
  4158d6:	and    BYTE PTR [edi-0xb],0x5d
  4158da:	test   eax,0xb9d08145
  4158df:	in     al,dx
  4158e0:	stos   DWORD PTR es:[edi],eax
  4158e1:	outs   dx,BYTE PTR ds:[esi]
  4158e2:	out    dx,eax
  4158e3:	aam    0xa7
  4158e5:	mov    WORD PTR [eax],gs
  4158e7:	jae    0x41593f
  4158e9:	ret    0xc574
  4158ec:	cld    
  4158ed:	cmp    ch,ch
  4158ef:	retf   0x44c6
  4158f2:	mov    esp,0x8d87896c
  4158f7:	into   
  4158f8:	mov    ds:0xf572379a,al
  4158fd:	xor    eax,0x5469f205
  415902:	ror    DWORD PTR [ebp-0x50],cl
  415905:	data16 ins BYTE PTR es:[edi],dx
  415907:	pop    ebx
  415908:	repz add esp,DWORD PTR [esi]
  41590b:	les    ecx,FWORD PTR [eax]
  41590d:	xor    eax,0x2b32c3d6
  415912:	ins    DWORD PTR es:[edi],dx
  415913:	push   0xfffffffa
  415915:	popf   
  415916:	pop    edx
  415917:	or     edi,0xa5b7a8a4
  41591d:	inc    eax
  41591e:	(bad)  
  41591f:	repz pop eax
  415921:	loopne 0x415975
  415923:	adc    ch,al
  415925:	std    
  415926:	add    cl,BYTE PTR [esi]
  415928:	(bad)  
  415929:	(bad)  
  41592a:	xor    al,0x5f
  41592c:	in     eax,dx
  41592d:	ficom  DWORD PTR [edi+0xc313949]
  415933:	ins    BYTE PTR es:[edi],dx
  415934:	pop    esp
  415935:	out    dx,eax
  415936:	mov    edx,0x6fce7ac8
  41593b:	add    bl,BYTE PTR ss:[edx]
  41593e:	ins    DWORD PTR es:[edi],dx
  41593f:	jle    0x4158d0
  415941:	cli    
  415942:	sub    eax,0xba126222
  415947:	or     bl,ch
  415949:	in     eax,dx
  41594a:	sbb    dh,ah
  41594c:	pop    es
  41594d:	scas   al,BYTE PTR es:[edi]
  41594e:	sbb    al,0x73
  415950:	add    al,0x47
  415952:	ds pop ds
  415954:	mov    ebx,0xac8f9ada
  415959:	jmp    0xd47c:0x4d9bcc16
  415960:	out    dx,eax
  415961:	loop   0x415987
  415963:	bound  esp,QWORD PTR [esi]
  415965:	fwait
  415966:	push   esi
  415967:	xchg   ebp,eax
  415968:	vpcmpgtw xmm7,xmm7,xmm5
  41596c:	arpl   WORD PTR ds:[esi-0xdccc8dc],ax
  415973:	push   esp
  415974:	xchg   ebx,eax
  415975:	je     0x415935
  415977:	sub    eax,0xddc24408
  41597c:	cmc    
  41597d:	xchg   esi,eax
  41597e:	fisttp DWORD PTR [ebp+0x2a]
  415981:	or     eax,0x84c92420
  415986:	retf   
  415987:	mov    cl,0xc
  415989:	bound  ebx,QWORD PTR [edi+0x1c]
  41598c:	mov    edi,0xa32d8e6b
  415991:	test   DWORD PTR [edi+0x4f35e154],0x77f1dadb
  41599b:	scas   eax,DWORD PTR es:[edi]
  41599c:	xchg   edx,ebp
  41599e:	les    eax,FWORD PTR [ecx+ebx*2-0x8]
  4159a2:	cld    
  4159a3:	fsub   DWORD PTR cs:[edx+0x3cdcd67e]
  4159aa:	fimul  DWORD PTR [ecx-0x73c69731]
  4159b0:	xor    esi,DWORD PTR [edi-0x7e64fb66]
  4159b6:	inc    eax
  4159b7:	fist   WORD PTR [ecx+0x1e]
  4159ba:	or     eax,0x7334f5d3
  4159bf:	pop    ebp
  4159c0:	mov    esi,0x30238f3e
  4159c5:	cmc    
  4159c6:	mov    ebx,DWORD PTR [ebx]
  4159c8:	shl    BYTE PTR [esi-0x3d],cl
  4159cb:	mov    bl,0x50
  4159cd:	mov    esp,0xe2f3769f
  4159d2:	iret   
  4159d3:	jmp    0x415957
  4159d5:	retf   
  4159d6:	adc    ebx,DWORD PTR [edx-0x16]
  4159d9:	xchg   ebp,esi
  4159db:	inc    esp
  4159dc:	or     esi,esi
  4159de:	cdq    
  4159df:	stc    
  4159e0:	mov    al,ds:0x2d4de2f3
  4159e5:	fldenv [esi+eax*1-0x5]
  4159e9:	xor    ecx,DWORD PTR [edi-0x3e]
  4159ec:	aam    0x5e
  4159ee:	cmp    eax,0xa07f5bbc
  4159f3:	aad    0x3c
  4159f5:	or     BYTE PTR [eax],al
  4159f7:	cld    
  4159f8:	jmp    0x4159af
  4159fa:	outs   dx,DWORD PTR ds:[esi]
  4159fb:	inc    edi
  4159fc:	and    esp,esp
  4159fe:	add    eax,0x32273f7d
  415a03:	or     al,0x7b
  415a05:	add    ebp,ebx
  415a07:	push   ds
  415a08:	test   DWORD PTR [ebx+0x17],edi
  415a0b:	inc    ebx
  415a0c:	pop    ebp
  415a0d:	call   0x84b3:0x4275018c
  415a14:	ss in  al,dx
  415a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a17:	jge    0x415a25
  415a19:	popa   
  415a1a:	or     ecx,DWORD PTR [edi+0x47d0b088]
  415a20:	test   eax,0xc46ef533
  415a25:	xor    DWORD PTR [esi],ebp
  415a27:	and    eax,0x7938502b
  415a2c:	sub    BYTE PTR ds:0xa410b1f5,dl
  415a32:	add    ecx,edx
  415a34:	mov    BYTE PTR [ebp-0x257ae19],dl
  415a3a:	push   ecx
  415a3b:	sbb    esp,DWORD PTR [eax-0x257bcfa6]
  415a41:	dec    ebp
  415a42:	ffreep st(3)
  415a44:	gs and eax,0x7b9ff90b
  415a4a:	adc    ah,0x5
  415a4d:	icebp  
  415a4e:	rcl    BYTE PTR [ebp+edx*1+0x495e7aa8],0x2a
  415a56:	daa    
  415a57:	jl     0x415a67
  415a59:	and    eax,0x3f579aeb
  415a5e:	in     eax,dx
  415a5f:	mov    ecx,0xab3a3cd5
  415a64:	pop    es
  415a65:	mov    esp,0xb898032d
  415a6a:	(bad)  [ecx-0x57178fb4]
  415a70:	or     dh,cl
  415a72:	addr16 loopne 0x415a7f
  415a75:	arpl   WORD PTR [edx+0x7a],cx
  415a78:	or     DWORD PTR [edi-0x15],edx
  415a7b:	cmc    
  415a7c:	dec    esi
  415a7d:	xchg   BYTE PTR [edx-0x45],bl
  415a80:	sub    dh,bl
  415a82:	mov    ebp,0x2a44d0da
  415a87:	je     0x415adb
  415a89:	ss scas eax,DWORD PTR es:[edi]
  415a8b:	arpl   sp,bp
  415a8d:	clc    
  415a8e:	daa    
  415a8f:	ror    ebp,1
  415a91:	ret    
  415a92:	sub    esi,DWORD PTR [ebp-0x3a]
  415a95:	ins    DWORD PTR es:[edi],dx
  415a96:	inc    esp
  415a97:	dec    edi
  415a98:	sbb    ebx,edx
  415a9a:	or     al,0xda
  415a9c:	mov    edx,0x84dcbffa
  415aa1:	hlt    
  415aa2:	out    0x1b,al
  415aa4:	xchg   esp,eax
  415aa5:	inc    esp
  415aa6:	push   edx
  415aa7:	outs   dx,BYTE PTR ds:[esi]
  415aa8:	jno    0x415a6f
  415aaa:	dec    eax
  415aab:	ret    0x7b72
  415aae:	add    dh,bl
  415ab0:	sub    eax,0xdf097e83
  415ab5:	jne    0x415aec
  415ab7:	cld    
  415ab8:	jl     0x415a4a
  415aba:	fmul   DWORD PTR [edi+ecx*4-0x3e]
  415abe:	sar    bl,0xd7
  415ac1:	mov    cl,0x79
  415ac3:	sahf   
  415ac4:	cmp    al,0x9b
  415ac6:	cmc    
  415ac7:	repz pusha 
  415ac9:	out    dx,eax
  415aca:	inc    eax
  415acb:	in     eax,dx
  415acc:	dec    ebp
  415acd:	mov    eax,ds:0x24bf58ae
  415ad2:	(bad)  
  415ad3:	push   esp
  415ad4:	sub    bh,BYTE PTR [edi]
  415ad6:	enter  0xcdcb,0x30
  415ada:	(bad)  
  415adb:	arpl   dx,dx
  415add:	loopne 0x415b56
  415adf:	or     dl,BYTE PTR [eax]
  415ae1:	int3   
  415ae2:	dec    esp
  415ae3:	mov    ds:0x39a02529,al
  415ae8:	sub    dh,al
  415aea:	ins    DWORD PTR es:[edi],dx
  415aeb:	mov    al,ds:0xd2783cca
  415af0:	mov    ecx,0x39256513
  415af5:	push   eax
  415af6:	inc    eax
  415af7:	xchg   edi,eax
  415af8:	cmp    eax,0xec508680
  415afd:	pop    esi
  415afe:	add    eax,0x90c243d0
  415b03:	out    0x6e,al
  415b05:	mov    bl,0x19
  415b07:	or     DWORD PTR [edi+0xff6f5bb],edx
  415b0d:	jb     0x415b8c
  415b0f:	repz or DWORD PTR [ecx+0x12],edi
  415b13:	jg     0x415acc
  415b15:	mov    WORD PTR [edx-0x396458c8],ds
  415b1b:	lahf   
  415b1c:	lds    ebx,FWORD PTR [esi+0x3434c062]
  415b22:	retf   
  415b23:	xchg   ebx,eax
  415b24:	fsub   QWORD PTR [ebp*4-0x781edbc4]
  415b2b:	outs   dx,DWORD PTR ds:[esi]
  415b2c:	jbe    0x415b43
  415b2e:	inc    ebx
  415b2f:	sbb    dh,bh
  415b31:	fistp  WORD PTR [eax-0x3cebbfc]
  415b37:	je     0x415af3
  415b39:	and    ebx,DWORD PTR [edi+0x31f9d604]
  415b3f:	mov    dh,BYTE PTR [ebp-0x4]
  415b42:	(bad)  
  415b43:	mov    edi,0x6159d533
  415b48:	xor    eax,0x3510fb97
  415b4d:	add    eax,0xe69a67b2
  415b52:	add    al,0xf8
  415b55:	cmc    
  415b56:	jne    0x415bc9
  415b58:	mov    ch,0xa5
  415b5a:	cs (bad) 
  415b5c:	dec    ebp
  415b5d:	mov    es,WORD PTR ds:0x357a571
  415b63:	jae    0x415b95
  415b65:	out    0xdb,al
  415b67:	int    0xd3
  415b69:	mov    dl,0x2a
  415b6b:	test   al,0x48
  415b6d:	cmc    
  415b6e:	xchg   ebp,eax
  415b6f:	xor    esi,DWORD PTR [ebx]
  415b71:	jmp    0xd2c5:0x33178fe3
  415b78:	(bad)  
  415b79:	fisubr WORD PTR [edx+0x3d]
  415b7c:	fild   WORD PTR [edi-0x78]
  415b7f:	aaa    
  415b80:	mov    ah,0x8
  415b82:	iret   
  415b83:	ins    BYTE PTR es:[edi],dx
  415b84:	(bad)  
  415b85:	in     al,dx
  415b86:	test   cl,0x7c
  415b89:	cmp    eax,0x98284a9
  415b8e:	inc    edx
  415b8f:	ret    
  415b90:	shl    edi,cl
  415b92:	xor    al,0x9f
  415b94:	imul   ebx,DWORD PTR ds:0x6ca7ca53,0x8
  415b9b:	stos   DWORD PTR es:[edi],eax
  415b9c:	(bad)  
  415b9d:	pop    ecx
  415b9e:	mov    edi,DWORD PTR [esi-0x450c5318]
  415ba4:	test   BYTE PTR [ecx-0x3beafc7],0x8e
  415bab:	or     DWORD PTR [edi-0x247efff1],edx
  415bb1:	xchg   ebp,eax
  415bb2:	in     al,dx
  415bb3:	xor    DWORD PTR [ebx+0x6c],ebx
  415bb6:	iret   
  415bb7:	sti    
  415bb8:	cmp    ecx,DWORD PTR [edi-0x6a5e4cde]
  415bbe:	dec    edx
  415bbf:	inc    esi
  415bc0:	sub    ch,BYTE PTR [eax-0x5e]
  415bc3:	xchg   ebx,eax
  415bc4:	mov    al,ds:0x3fc68b18
  415bc9:	pop    ebx
  415bca:	inc    DWORD PTR [eax]
  415bcc:	jns    0x415b53
  415bce:	call   0x3f60ce37
  415bd3:	dec    esi
  415bd4:	fimul  WORD PTR [ebx+eiz*1+0x26]
  415bd8:	int3   
  415bd9:	cdq    
  415bda:	xchg   esp,eax
  415bdb:	mov    ebp,0xadea5c76
  415be0:	jl     0x415bbc
  415be2:	les    ebx,FWORD PTR [edx+0x26]
  415be5:	push   cs
  415be6:	shl    DWORD PTR [esi],1
  415be8:	jns    0x415c47
  415bea:	ins    DWORD PTR es:[edi],dx
  415beb:	aas    
  415bec:	loop   0x415b82
  415bee:	dec    ecx
  415bef:	jmp    0xb2104c
  415bf4:	bound  esp,QWORD PTR ds:0xd5da359d
  415bfa:	stc    
  415bfb:	mov    bl,0x2
  415bfd:	jl     0x415b8d
  415bff:	adc    ch,BYTE PTR [edi+eiz*1-0x5d]
  415c03:	push   0x21
  415c05:	retf   0x4648
  415c08:	aad    0xc9
  415c0a:	or     BYTE PTR [edi+0x3794cb53],dh
  415c10:	outs   dx,BYTE PTR ds:[esi]
  415c11:	add    eax,DWORD PTR [edx]
  415c13:	push   ecx
  415c14:	ret    
  415c15:	test   eax,0xd2f06016
  415c1a:	dec    eax
  415c1b:	fwait
  415c1c:	adc    ebx,0xffffffe4
  415c1f:	pop    ebp
  415c20:	adc    ebp,DWORD PTR [ebx+0x563f8c57]
  415c26:	stc    
  415c27:	dec    esp
  415c28:	pop    es
  415c29:	add    bh,cl
  415c2b:	cmp    al,0xaf
  415c2d:	ins    BYTE PTR es:[edi],dx
  415c2e:	das    
  415c2f:	mov    ds:0x166ae592,eax
  415c34:	xor    esp,esp
  415c36:	mov    ds:0x8a1a16cc,al
  415c3b:	rcr    DWORD PTR [esi-0x3a6be301],1
  415c41:	fwait
  415c42:	push   ss
  415c43:	inc    edi
  415c44:	ins    DWORD PTR es:[edi],dx
  415c45:	arpl   WORD PTR [edi],ax
  415c47:	stos   BYTE PTR es:[edi],al
  415c48:	stos   DWORD PTR es:[edi],eax
  415c49:	inc    esp
  415c4a:	jmp    0x415bf5
  415c4c:	pop    es
  415c4d:	in     eax,dx
  415c4e:	in     eax,dx
  415c4f:	fs mov ah,0xd5
  415c52:	cmp    ecx,ecx
  415c54:	lods   eax,DWORD PTR ds:[esi]
  415c55:	jle    0x415cab
  415c57:	pop    edx
  415c58:	adc    BYTE PTR [edx],dh
  415c5a:	out    dx,eax
  415c5b:	jno    0x415c22
  415c5d:	mov    eax,0x3fd4199f
  415c62:	movups xmm0,xmm7
  415c65:	inc    ebp
  415c66:	pop    ecx
  415c67:	mov    edi,0xa68521aa
  415c6c:	adc    ecx,DWORD PTR [esi+eiz*2+0x34]
  415c70:	mov    DWORD PTR [esi+0x3],edi
  415c73:	sub    ecx,edi
  415c75:	dec    esi
  415c76:	jle    0x415c18
  415c78:	retf   
  415c79:	neg    DWORD PTR [ebx]
  415c7b:	mov    BYTE PTR [eax+0x65],ch
  415c7e:	out    dx,al
  415c7f:	in     al,dx
  415c80:	and    DWORD PTR [edi+ebx*2],ebx
  415c83:	sub    al,BYTE PTR [ebx+0x7e108376]
  415c89:	mov    esp,0xeff06696
  415c8e:	(bad)  
  415c8f:	mov    es:0x779a926c,al
  415c95:	sahf   
  415c96:	outs   dx,BYTE PTR ds:[esi]
  415c97:	or     BYTE PTR [ebx-0x60],bh
  415c9a:	add    DWORD PTR [eax+0x4a],esi
  415c9d:	fld    TBYTE PTR [esi]
  415c9f:	loope  0x415c4e
  415ca1:	inc    edi
  415ca2:	jp     0x415cb4
  415ca4:	mov    eax,ds:0xe6360e5
  415ca9:	sbb    eax,0xbe1746cd
  415cae:	cli    
  415caf:	xchg   ecx,eax
  415cb0:	icebp  
  415cb1:	cdq    
  415cb2:	shl    BYTE PTR [eax-0x61],1
  415cb5:	ficomp DWORD PTR [esi+0x39e2c528]
  415cbb:	xchg   ebp,eax
  415cbc:	in     al,0xdb
  415cbe:	sbb    al,0x79
  415cc0:	in     eax,dx
  415cc1:	cmp    BYTE PTR [eax+0x60],dl
  415cc4:	vfmaddsubpd ymm2,ymm6,ymm3,YMMWORD PTR [edi]
  415cca:	pop    esp
  415ccb:	sbb    bl,dl
  415ccd:	inc    eax
  415cce:	aam    0x80
  415cd0:	xor    al,0x14
  415cd2:	daa    
  415cd3:	jge    0x415cef
  415cd5:	sub    edx,DWORD PTR [esi]
  415cd7:	popa   
  415cd8:	mov    WORD PTR [eax+0x50b9ccbd],cs
  415cde:	sub    DWORD PTR [edi],esp
  415ce0:	or     eax,0xfa941f3f
  415ce5:	sub    bl,cl
  415ce7:	xchg   edi,eax
  415ce8:	sbb    dh,BYTE PTR [edi+edx*8]
  415ceb:	out    0x37,eax
  415ced:	int    0x27
  415cef:	(bad)  
  415cf0:	fisubr DWORD PTR [edi+0x1d]
  415cf3:	(bad)  
  415cf4:	out    0x3b,al
  415cf6:	arpl   si,sp
  415cf8:	fdivr  QWORD PTR [eax]
  415cfa:	daa    
  415cfb:	in     eax,dx
  415cfc:	xchg   edx,eax
  415cfd:	adc    bl,BYTE PTR [esi-0x1d]
  415d00:	sbb    al,BYTE PTR [edx]
  415d02:	ja     0x415d7f
  415d04:	std    
  415d05:	out    dx,eax
  415d06:	arpl   sp,sp
  415d08:	fdivr  QWORD PTR [ecx+edi*8-0x5f7249b0]
  415d0f:	jmp    0x415c94
  415d11:	add    ebp,ebx
  415d13:	jae    0x415d27
  415d15:	push   ebp
  415d16:	pop    ecx
  415d17:	out    0x1e,al
  415d19:	mov    esp,0x6e7a374e
  415d1e:	adc    eax,0x37094e05
  415d23:	ret    0xa427
  415d26:	jnp    0x415d88
  415d28:	sub    al,0xf1
  415d2a:	sbb    dl,0x1d
  415d2d:	test   BYTE PTR ds:0x9facd5a6,dl
  415d33:	lea    esp,[edi+0x7d]
  415d36:	clc    
  415d37:	push   esi
  415d38:	clc    
  415d39:	bound  ecx,QWORD PTR [edx-0x24]
  415d3c:	lahf   
  415d3d:	mov    BYTE PTR [edi-0x3f],cl
  415d40:	add    eax,0x53df21a6
  415d45:	xlat   BYTE PTR ds:[ebx]
  415d46:	mov    ebp,0x4dbacc9a
  415d4b:	imul   edx,DWORD PTR [edi-0xd],0xbb56e6e0
  415d52:	scas   eax,DWORD PTR es:[edi]
  415d53:	cmp    al,0x68
  415d55:	sbb    DWORD PTR [edx],esp
  415d57:	lods   eax,DWORD PTR ds:[esi]
  415d58:	ret    0xb05b
  415d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5c:	add    ecx,eax
  415d5e:	not    DWORD PTR [ebx+0x31]
  415d61:	push   es
  415d62:	aam    0x26
  415d64:	cmp    edi,ebx
  415d66:	dec    ebx
  415d67:	dec    edx
  415d68:	(bad)  
  415d69:	jmp    0x415cfe
  415d6b:	sub    esp,DWORD PTR [ecx]
  415d6d:	jbe    0x415d71
  415d6f:	daa    
  415d70:	adc    eax,DWORD PTR [ebx+0x935bace]
  415d76:	ror    BYTE PTR [edx+0x2a0090ac],1
  415d7c:	jbe    0x415df6
  415d7e:	mov    ch,0x1b
  415d80:	in     eax,dx
  415d81:	sbb    al,BYTE PTR [ebx-0xe057710]
  415d87:	inc    esi
  415d88:	test   BYTE PTR [ebx],dh
  415d8a:	or     dh,BYTE PTR [esi+0xf]
  415d8d:	lahf   
  415d8e:	fs add dh,cl
  415d91:	pop    ss
  415d92:	dec    edi
  415d93:	sub    DWORD PTR [edi],esp
  415d95:	mov    ch,0x8f
  415d97:	sbb    eax,0x83db01b5
  415d9c:	loope  0x415d2e
  415d9e:	out    dx,al
  415d9f:	jmp    0x415d22
  415da1:	retf   
  415da2:	inc    ecx
  415da3:	leave  
  415da4:	outs   dx,DWORD PTR ds:[esi]
  415da5:	(bad)  
  415da6:	pop    esp
  415da7:	dec    BYTE PTR [eax-0x26835b72]
  415dad:	or     BYTE PTR [edx+0xe9c2756],0xf1
  415db4:	xchg   edx,eax
  415db5:	es loopne 0x415dbc
  415db8:	push   edi
  415db9:	pusha  
  415dba:	and    cl,BYTE PTR [eax+ecx*1-0x762f9857]
  415dc1:	outs   dx,BYTE PTR ds:[esi]
  415dc2:	jne    0x2636e126
  415dc8:	scas   eax,DWORD PTR es:[edi]
  415dc9:	fs (bad) 
  415dcb:	int3   
  415dcc:	pop    esp
  415dcd:	(bad)  
  415dcf:	inc    edx
  415dd0:	push   edx
  415dd1:	pop    ds
  415dd2:	into   
  415dd3:	dec    eax
  415dd4:	outs   dx,BYTE PTR ds:[esi]
  415dd5:	(bad)  
  415dd6:	out    dx,eax
  415dd7:	push   esi
  415dd8:	pop    ebx
  415dd9:	aaa    
  415dda:	call   0xbb7:0x6321d537
  415de1:	pop    ebx
  415de2:	sub    esi,DWORD PTR [edx+0x3c]
  415de5:	test   DWORD PTR [eax-0x47],0x139cf334
  415dec:	pop    esi
  415ded:	in     al,dx
  415dee:	enter  0xfb89,0xd3
  415df2:	shr    bl,0x2d
  415df5:	mov    ah,0xb7
  415df7:	mov    dh,BYTE PTR [ebp-0x14]
  415dfa:	mov    edx,0x7e9de6bf
  415dff:	addr16 (bad) 
  415e01:	sbb    eax,0xe0ff7d2f
  415e06:	xchg   ebx,eax
  415e07:	inc    ebx
  415e08:	loope  0x415dbf
  415e0a:	or     DWORD PTR [ebx+0x44],esi
  415e0d:	xchg   esi,eax
  415e0e:	or     esp,DWORD PTR [edx+0x4a]
  415e11:	xlat   BYTE PTR ds:[ebx]
  415e12:	mov    ds:0xc975b76e,eax
  415e17:	cs stos DWORD PTR es:[edi],eax
  415e19:	(bad)  
  415e1a:	jb     0x415e16
  415e1c:	inc    edx
  415e1d:	scas   al,BYTE PTR es:[edi]
  415e1e:	les    esi,FWORD PTR [eax-0x9]
  415e21:	or     esi,DWORD PTR [edi]
  415e23:	sub    al,0xb6
  415e25:	mov    eax,0xe8f83e18
  415e2a:	daa    
  415e2b:	jo     0x415e8e
  415e2d:	jle    0x415e67
  415e2f:	push   0x4
  415e31:	pop    ebp
  415e32:	repnz sub ebp,DWORD PTR [ebx-0x3c97ebd6]
  415e39:	sub    BYTE PTR [edi-0x1355ee8e],ah
  415e3f:	mov    bl,0xd0
  415e41:	inc    ecx
  415e42:	push   es
  415e43:	push   0x3c
  415e45:	inc    ebp
  415e46:	jae    0x415e37
  415e48:	push   esp
  415e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4a:	shl    DWORD PTR [eax+0x762adf06],cl
  415e50:	int    0x1
  415e52:	ret    
  415e53:	dec    esi
  415e54:	fdivr  DWORD PTR [ecx+0x5c]
  415e57:	(bad)  
  415e58:	jo     0x415de0
  415e5a:	imul   ebx,esi,0x86282b63
  415e60:	push   edx
  415e61:	xor    bl,al
  415e63:	pop    eax
  415e64:	stos   BYTE PTR es:[edi],al
  415e65:	push   esi
  415e66:	ror    BYTE PTR [ecx-0x59988b81],1
  415e6c:	mov    bh,0xcd
  415e6e:	mov    ecx,0x9b7e6cb5
  415e73:	aas    
  415e74:	and    ah,BYTE PTR [esp+ebp*4]
  415e77:	mov    eax,0xa594e5cf
  415e7c:	call   0x3cd2:0x4002c72
  415e83:	mov    esi,DWORD PTR [eax+ebp*4]
  415e86:	xlat   BYTE PTR ds:[ebx]
  415e87:	pop    es
  415e88:	retfw  0xa78f
  415e8c:	jmp    0x415e27
  415e8e:	jp     0x415e10
  415e90:	fistp  WORD PTR [eax+0x638b1bb9]
  415e96:	jecxz  0x415ef7
  415e98:	jle    0x415ec4
  415e9a:	jg     0x415e91
  415e9c:	jb     0x415ede
  415e9e:	jne    0x415efe
  415ea0:	(bad)  
  415ea1:	retf   
  415ea2:	repnz pop eax
  415ea4:	stos   BYTE PTR es:[edi],al
  415ea5:	pop    es
  415ea6:	leave  
  415ea7:	lea    ebp,[eax+0x2901179e]
  415ead:	hlt    
  415eae:	xor    dh,0x7b
  415eb1:	mov    eax,0xb8ccb896
  415eb6:	and    DWORD PTR [ebx+eax*4],eax
  415eb9:	sahf   
  415eba:	jne    0x415e7a
  415ebc:	push   ds
  415ebd:	test   eax,0x42409bb8
  415ec2:	cli    
  415ec3:	or     eax,0x4218ae4c
  415ec8:	je     0x415f0c
  415eca:	retf   
  415ecb:	lock ds int3 
  415ece:	pop    edx
  415ecf:	inc    ebx
  415ed0:	pop    ds
  415ed1:	test   DWORD PTR [ebx-0x3601a6a9],edx
  415ed7:	popa   
  415ed8:	mov    al,ds:0x7b5dba66
  415edd:	mov    ah,0xab
  415edf:	loope  0x415f40
  415ee1:	fild   QWORD PTR [ebp+ebx*4+0xa]
  415ee5:	or     eax,0x6df58561
  415eea:	retf   0xdba3
  415eed:	rcr    DWORD PTR [ebx],0x4b
  415ef0:	dec    ecx
  415ef1:	or     dl,bh
  415ef3:	adc    esi,eax
  415ef5:	inc    eax
  415ef6:	mov    ah,0x9b
  415ef8:	iret   
  415ef9:	pop    esi
  415efa:	and    ebx,ebp
  415efc:	(bad)  
  415efe:	or     ecx,DWORD PTR cs:[ecx]
  415f01:	inc    eax
  415f02:	mov    al,0x69
  415f04:	fisttp DWORD PTR [eax+ebp*1]
  415f07:	or     BYTE PTR [eax+0x69820aa2],0xf2
  415f0e:	adc    BYTE PTR [ebp+0x2599cc26],bl
  415f14:	mov    dl,0x29
  415f16:	and    esp,DWORD PTR [ebx+0x70]
  415f19:	jecxz  0x415ebc
  415f1b:	sub    esp,edx
  415f1d:	add    BYTE PTR [ebp+0x25c20808],ah
  415f23:	dec    ebx
  415f24:	sub    ebp,DWORD PTR ds:0xdf322153
  415f2a:	ins    DWORD PTR es:[edi],dx
  415f2b:	sar    ch,0xb8
  415f2e:	sbb    al,0xdf
  415f30:	in     eax,0xb1
  415f32:	icebp  
  415f33:	xchg   BYTE PTR [ebx],ah
  415f35:	add    BYTE PTR [ebp-0x3946298],dh
  415f3b:	mov    esp,eax
  415f3d:	cmp    DWORD PTR ds:0x30bf4a0f,0x69
  415f44:	rcl    DWORD PTR [eax-0x4c],0xcf
  415f48:	or     eax,0x262d3e5f
  415f4d:	mov    al,ds:0x2a0f35b3
  415f52:	push   esp
  415f53:	not    BYTE PTR [edx-0x51e44137]
  415f59:	aad    0x72
  415f5b:	hlt    
  415f5c:	fld    DWORD PTR [edi]
  415f5e:	add    eax,0xdb08d488
  415f63:	sar    BYTE PTR [ebp+0x45],0x9c
  415f67:	out    0xd,eax
  415f69:	mov    WORD PTR [eax+0x4],fs
  415f6c:	mov    ebp,ecx
  415f6e:	add    esi,esp
  415f70:	jne    0x415f5d
  415f72:	dec    ebx
  415f73:	gs mov edi,0x1a5837c9
  415f79:	dec    esi
  415f7a:	(bad)  
  415f7b:	mov    bh,0xb1
  415f7d:	(bad)  
  415f7e:	sbb    bl,0xe8
  415f81:	int    0xd6
  415f83:	pop    ebx
  415f84:	mov    eax,ds:0xd550dab9
  415f89:	or     al,0x37
  415f8b:	push   0x46
  415f8d:	lods   al,BYTE PTR ds:[esi]
  415f8e:	call   0xa3e508ce
  415f93:	push   cs
  415f94:	xchg   DWORD PTR [ecx+ebx*8],esi
  415f97:	and    dh,0x76
  415f9a:	and    BYTE PTR [ebx],bh
  415f9c:	xchg   ebp,eax
  415f9d:	add    al,0x71
  415f9f:	mov    esp,0x2545c569
  415fa4:	mov    esi,0x195057d5
  415fa9:	sub    al,BYTE PTR [edi+0xa]
  415fac:	(bad)  
  415fad:	dec    esi
  415fae:	int    0xd6
  415fb0:	xor    ebx,ebp
  415fb2:	and    eax,0xb4eeb373
  415fb7:	mov    eax,ds:0x4de3bb15
  415fbc:	fadd   st(3),st
  415fbe:	push   0x6e163ff3
  415fc3:	fwait
  415fc4:	(bad)  
  415fc5:	push   ds
  415fc6:	(bad)  
  415fc7:	cmp    al,dh
  415fc9:	mov    ds:0x8f1c218e,eax
  415fce:	aam    0xd5
  415fd0:	call   0x8a50:0x1d6ecd85
  415fd7:	rcl    DWORD PTR ds:0x51940c1c,cl
  415fdd:	imul   edx,DWORD PTR [edi-0x1e],0x1f7e6613
  415fe4:	push   ebp
  415fe5:	push   edi
  415fe6:	push   ebx
  415fe7:	mov    DWORD PTR [edi+0x38924135],esp
  415fed:	push   0x62
  415fef:	stos   BYTE PTR es:[edi],al
  415ff0:	mov    ds:0xc269c9f5,al
  415ff5:	mov    eax,0x53bd11b9
  415ffa:	ins    BYTE PTR es:[edi],dx
  415ffb:	jo     0x415f8d
  415ffd:	ds ja  0x415fb0
  416000:	cmp    BYTE PTR [ebx],0x14
  416003:	fbld   TBYTE PTR es:[ebp+0x70a794b2]
  41600a:	scas   eax,DWORD PTR es:[edi]
  41600b:	pushf  
  41600c:	jbe    0x416009
  41600e:	pop    ss
  41600f:	enter  0xce97,0xfe
  416013:	es out dx,eax
  416015:	pop    ds
  416016:	(bad)  
  416017:	fbld   TBYTE PTR [esi]
  416019:	jp     0x415fc4
  41601b:	shl    BYTE PTR [ebx-0x20b2e5ff],0xc7
  416022:	xchg   esp,eax
  416023:	jg     0x416008
  416025:	mov    ebx,0x3c17d9c4
  41602a:	push   edx
  41602b:	nop
  41602c:	scas   eax,DWORD PTR es:[edi]
  41602d:	loopne 0x416036
  41602f:	or     ebp,DWORD PTR [ecx-0x8b71dfe]
  416035:	int    0x1f
  416037:	xchg   ebx,eax
  416038:	dec    ebp
  416039:	mov    BYTE PTR [esi],ah
  41603b:	adc    al,al
  41603d:	mov    al,bl
  41603f:	push   edi
  416040:	sub    DWORD PTR [edi+0x415720f6],esi
  416046:	hlt    
  416047:	jb     0x415fcf
  416049:	aam    0x26
  41604b:	or     edx,DWORD PTR [edx-0x43]
  41604e:	cli    
  41604f:	fiadd  DWORD PTR [eax+0x47060f99]
  416055:	jae    0x4160b8
  416057:	pop    ds
  416058:	iret   
  416059:	fisubr DWORD PTR [ecx+0x25]
  41605c:	dec    ecx
  41605d:	add    BYTE PTR [ebx+ebp*2-0x5d166b20],al
  416064:	aad    0xa8
  416066:	imul   edi,DWORD PTR [edi-0x55],0xffffff8c
  41606a:	leave  
  41606b:	int    0xbf
  41606d:	mov    ch,ah
  41606f:	ds dec esp
  416071:	into   
  416072:	sete   BYTE PTR [ebp+0x50f6a691]
  416079:	fs jle 0x416001
  41607c:	icebp  
  41607d:	cmp    ebp,DWORD PTR [esi-0x5dca9c35]
  416083:	jmp    0x7e1a:0xbd2a64b4
  41608a:	xchg   esi,eax
  41608b:	pop    eax
  41608c:	mov    dl,0xcb
  41608e:	stos   BYTE PTR es:[edi],al
  41608f:	leave  
  416090:	je     0x416064
  416092:	mov    ds:0xcdecf3f7,al
  416097:	and    BYTE PTR [esi-0x53eed76b],ah
  41609d:	pop    edi
  41609e:	push   ebx
  41609f:	push   esp
  4160a0:	retf   0x2da7
  4160a3:	outs   dx,DWORD PTR ds:[esi]
  4160a4:	jo     0x4160a3
  4160a6:	sbb    DWORD PTR [edi+0x214a1042],esi
  4160ac:	idiv   ebp
  4160ae:	mov    ebp,0x59a469b0
  4160b3:	and    al,0xf3
  4160b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160b6:	mov    ch,0x1b
  4160b8:	fwait
  4160b9:	cmc    
  4160ba:	in     eax,dx
  4160bb:	adc    cl,dh
  4160bd:	or     esp,esp
  4160bf:	push   ebp
  4160c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160c1:	loopne 0x416091
  4160c3:	inc    ebp
  4160c4:	push   eax
  4160c5:	xor    al,0xb
  4160c7:	cmp    eax,0x8953eae1
  4160cc:	pop    esi
  4160cd:	push   DWORD PTR [ecx-0x46]
  4160d0:	sbb    cl,al
  4160d2:	popa   
  4160d3:	xchg   edx,eax
  4160d4:	pop    esp
  4160d5:	fiadd  WORD PTR [edi+ebx*4+0x48dde851]
  4160dc:	call   FWORD PTR [edx+0x22]
  4160df:	loop   0x41613d
  4160e1:	xchg   ebp,eax
  4160e2:	popf   
  4160e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e4:	fnstenv [esp+edx*8]
  4160e7:	mov    WORD PTR [ecx+ecx*8+0xc],ds
  4160eb:	daa    
  4160ec:	aas    
  4160ed:	shl    ch,cl
  4160ef:	push   ds
  4160f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f2:	or     ch,dl
  4160f4:	push   esp
  4160f5:	xchg   esp,eax
  4160f6:	mov    ch,0x2e
  4160f8:	leave  
  4160f9:	test   dl,ch
  4160fb:	sbb    edi,DWORD PTR [esi]
  4160fd:	and    eax,0x4ffa66dc
  416102:	repnz add BYTE PTR [edx+0x6],ch
  416106:	sti    
  416107:	lahf   
  416108:	or     dl,BYTE PTR [ebp-0x2c9eba90]
  41610e:	cmp    DWORD PTR [esi-0x72cd061f],0x1f
  416115:	sub    eax,0x8d262b86
  41611a:	push   ecx
  41611b:	push   eax
  41611c:	jle    0x41613f
  41611e:	pop    ds
  41611f:	sbb    eax,0xfc288173
  416124:	fst    st(4)
  416126:	sahf   
  416127:	dec    edx
  416128:	fstp   st(1)
  41612a:	test   BYTE PTR [eax-0x5a16ac87],dh
  416130:	loope  0x4161a1
  416132:	aad    0x37
  416134:	sub    bh,BYTE PTR ds:0x7b691dca
  41613a:	loop   0x416103
  41613c:	popa   
  41613d:	call   0x1d6e01d5
  416142:	push   cs
  416143:	xor    DWORD PTR [esi-0x22b2d7e9],0xc3a03b2
  41614d:	adc    BYTE PTR [eax-0x38],bh
  416150:	sub    eax,0xfcc66d25
  416155:	ins    BYTE PTR es:[edi],dx
  416156:	in     eax,0x4f
  416158:	add    eax,0x8c23c417
  41615d:	call   FWORD PTR [esp+ebx*4]
  416160:	not    BYTE PTR [edx]
  416162:	adc    dh,bl
  416164:	xchg   ecx,eax
  416165:	ror    DWORD PTR [edx+0x1fde7564],cl
  41616b:	repz cld 
  41616d:	add    ebx,DWORD PTR [ebx-0xeaf599a]
  416173:	not    BYTE PTR [ebx]
  416175:	fnstcw WORD PTR [edx+0x4c]
  416178:	xchg   BYTE PTR [eax-0x3065ab06],cl
  41617e:	or     edi,ebx
  416180:	and    BYTE PTR [edx],al
  416182:	adc    DWORD PTR [edi-0x59a3d2df],esi
  416188:	mov    al,ds:0x33781a6c
  41618d:	stos   DWORD PTR es:[edi],eax
  41618e:	cmp    al,0x48
  416190:	stos   BYTE PTR es:[edi],al
  416191:	push   edx
  416192:	sub    cl,BYTE PTR [eax+0x50]
  416195:	clc    
  416196:	bound  ebp,QWORD PTR [esi]
  416198:	cmp    BYTE PTR [eax-0x301b32d],0xdf
  41619f:	push   0xffffffc3
  4161a1:	fdivr  st(2),st
  4161a3:	mov    bh,0xaf
  4161a5:	adc    esp,DWORD PTR [esi]
  4161a7:	dec    edi
  4161a8:	dec    edx
  4161a9:	popa   
  4161aa:	aaa    
  4161ab:	xchg   ebp,eax
  4161ac:	loop   0x4161c3
  4161ae:	cmp    eax,0xa2e11abe
  4161b3:	cld    
  4161b4:	scas   eax,DWORD PTR es:[edi]
  4161b5:	into   
  4161b6:	jb     0x4161a0
  4161b8:	pop    ds
  4161b9:	inc    esi
  4161ba:	add    eax,0x3938e297
  4161bf:	jecxz  0x41618b
  4161c1:	repz push edx
  4161c3:	ret    
  4161c4:	add    eax,0x2d5e084f
  4161c9:	xor    esp,DWORD PTR [edi+0x37]
  4161cc:	mov    esi,0x988c3615
  4161d1:	aad    0xcb
  4161d3:	adc    al,0xf0
  4161d5:	fwait
  4161d6:	int3   
  4161d7:	dec    esi
  4161d8:	loope  0x416166
  4161da:	jbe    0x4161f9
  4161dc:	pusha  
  4161dd:	inc    ebx
  4161de:	push   edx
  4161df:	inc    ebx
  4161e0:	xor    ecx,edx
  4161e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e3:	mov    ebx,0x8f17d85a
  4161e8:	xchg   DWORD PTR [ebx-0x17ed1d34],esi
  4161ee:	xchg   edx,eax
  4161ef:	cmp    bl,cl
  4161f1:	hlt    
  4161f2:	add    BYTE PTR [ebp+0x5577635],dh
  4161f8:	out    dx,al
  4161f9:	pop    ecx
  4161fa:	mov    cl,0xf1
  4161fc:	(bad)  
  4161fd:	(bad)  
  4161fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ff:	inc    esi
  416200:	int3   
  416201:	dec    edi
  416202:	push   edi
  416203:	(bad)  [eax-0x69e320a9]
  416209:	(bad)  
  41620a:	xchg   ebx,eax
  41620b:	jno    0x416257
  41620d:	sbb    al,0xcd
  41620f:	push   edi
  416210:	mov    WORD PTR [ecx+ebp*2],fs
  416213:	(bad)  
  416214:	fbstp  TBYTE PTR [ebp+0xa]
  416217:	inc    esi
  416218:	add    eax,0xb84db05b
  41621d:	stc    
  41621e:	adc    BYTE PTR [ebx],0x3b
  416221:	sub    eax,0xcf331981
  416226:	dec    edi
  416227:	fld    QWORD PTR [eax]
  416229:	daa    
  41622a:	jmp    0x8226:0x69f12864
  416231:	sub    eax,0x790ae9a2
  416236:	out    dx,al
  416237:	jbe    0x41625f
  416239:	inc    edi
  41623a:	dec    eax
  41623b:	retf   
  41623c:	xchg   esp,eax
  41623d:	inc    edi
  41623e:	inc    esi
  41623f:	pop    ebp
  416240:	rcl    DWORD PTR [edx-0x80],cl
  416243:	or     dh,BYTE PTR [esp+esi*2+0x32]
  416247:	jb     0x4162c1
  416249:	jb     0x416228
  41624b:	sbb    ch,dl
  41624d:	jmp    DWORD PTR [ebx]
  41624f:	inc    ebp
  416250:	sub    edx,DWORD PTR [ebx]
  416252:	xor    BYTE PTR [esi-0x6192983c],0xe0
  416259:	mov    ebx,0xabe46f96
  41625e:	shl    DWORD PTR [esi+ebx*2],1
  416261:	pop    esi
  416262:	fld    QWORD PTR [eax+0x22ce2ccb]
  416268:	lods   al,BYTE PTR ds:[esi]
  416269:	add    BYTE PTR [edx],bl
  41626b:	stos   DWORD PTR es:[edi],eax
  41626c:	sub    bh,bh
  41626e:	mov    cl,0xe2
  416270:	mov    bl,0xa4
  416272:	ror    DWORD PTR [ebp+eax*2-0x71],1
  416276:	cdq    
  416277:	sub    esp,DWORD PTR ds:0x6dc971f
  41627d:	popa   
  41627e:	in     eax,0xf3
  416280:	xchg   BYTE PTR [ebp-0x2d],dh
  416283:	ins    DWORD PTR es:[edi],dx
  416284:	outs   dx,DWORD PTR ds:[esi]
  416285:	(bad)  
  416286:	js     0x416212
  416288:	gs push cs
  41628a:	inc    ebp
  41628b:	mul    BYTE PTR [eax-0x46452f23]
  416291:	mov    esi,0xfaa6822a
  416296:	lock dec esi
  416298:	pop    ss
  416299:	cs xor ecx,ebx
  41629c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41629d:	lahf   
  41629e:	cmp    al,BYTE PTR [eax+0x29]
  4162a1:	ds push ss
  4162a3:	push   0x4
  4162a5:	mov    ebx,0x5260681c
  4162aa:	stc    
  4162ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ac:	cmp    DWORD PTR [eax],edx
  4162ae:	ror    DWORD PTR [ebx],0x2d
  4162b1:	add    DWORD PTR [ecx+0x417857e5],edx
  4162b7:	xor    eax,0xe43b9e5e
  4162bc:	js     0x41625b
  4162be:	pop    edx
  4162bf:	mov    esp,0x661a33d2
  4162c4:	pop    es
  4162c5:	aam    0x76
  4162c7:	out    dx,al
  4162c8:	pop    ebx
  4162c9:	add    DWORD PTR [edi],0x7f
  4162cc:	xchg   DWORD PTR [ecx+0x7e],ebx
  4162cf:	sub    BYTE PTR [edx+0x78467],al
  4162d5:	and    ebp,DWORD PTR [ebx+0x4a]
  4162d8:	out    0x61,eax
  4162da:	push   edi
  4162db:	pop    ss
  4162dc:	pop    eax
  4162dd:	lahf   
  4162de:	fs mov eax,0x867ce471
  4162e4:	sub    dh,BYTE PTR [edx]
  4162e6:	shl    DWORD PTR ds:0x2b77203,0x6b
  4162ed:	fdiv   DWORD PTR [ebp+ecx*8+0x71b56d54]
  4162f4:	sbb    eax,0xe932e7ad
  4162f9:	fdiv   st,st(0)
  4162fb:	push   ds
  4162fc:	ja     0x416365
  4162fe:	out    0x4e,eax
  416300:	daa    
  416301:	int3   
  416302:	cdq    
  416303:	dec    BYTE PTR [ebx-0x43]
  416306:	sahf   
  416307:	push   cs
  416308:	outs   dx,DWORD PTR ds:[esi]
  416309:	inc    ebx
  41630a:	push   es
  41630b:	and    al,BYTE PTR ds:0xbfa3f835
  416311:	loope  0x4162ba
  416313:	js     0x4162f1
  416315:	mov    ebp,0xd01265f7
  41631a:	cli    
  41631b:	mov    bl,0x1
  41631d:	jmp    0x8ab6:0xf61d4e22
  416324:	add    dl,ah
  416326:	sti    
  416327:	jmp    0xddf2:0xb700cd6f
  41632e:	fstp   DWORD PTR [edi-0x8b89645]
  416334:	sar    DWORD PTR [esi],1
  416336:	into   
  416337:	add    BYTE PTR [ebx-0x30],al
  41633a:	outs   dx,DWORD PTR cs:[esi]
  41633c:	pop    ds
  41633d:	mov    edx,DWORD PTR gs:[ebx]
  416340:	push   esp
  416341:	jge    0x4163b7
  416343:	add    BYTE PTR [eax],0xe4
  416346:	xor    BYTE PTR [edx],al
  416348:	enter  0x8184,0xeb
  41634c:	repnz mov bh,cl
  41634f:	sub    eax,DWORD PTR [eax+0x50]
  416352:	jg     0x41630d
  416354:	inc    esi
  416355:	dec    ecx
  416356:	stc    
  416357:	jmp    0x720c:0xa77ac920
  41635e:	sub    ecx,esi
  416360:	cmp    BYTE PTR [ecx+0x12428b96],dh
  416366:	mov    bh,0x49
  416368:	rcl    BYTE PTR [ebp-0x3d],0x63
  41636c:	cmp    BYTE PTR [edx-0x2c],0x93
  416370:	test   al,0x30
  416372:	xor    DWORD PTR [bx],ebp
  416375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416376:	icebp  
  416377:	test   BYTE PTR [esi],ah
  416379:	ret    
  41637a:	sub    DWORD PTR [esi-0xa2f2320],0x1a
  416381:	ret    0x1ec
  416384:	xor    al,0xe4
  416386:	mov    ecx,0x173eb1f9
  41638b:	sub    eax,0xcfb4cde4
  416390:	push   0x6c
  416392:	dec    ebp
  416393:	ret    0x81e3
  416396:	call   0xe30e:0xc932f73e
  41639d:	add    ebp,DWORD PTR es:0xe52e6510
  4163a4:	add    al,0xc8
  4163a6:	mov    eax,ds:0x7b392b15
  4163ab:	mov    ebp,0xec90b3a8
  4163b0:	mov    cl,0x32
  4163b2:	pop    edx
  4163b3:	fistp  DWORD PTR ds:[esp+ebx*8-0x3a3494cf]
  4163bb:	daa    
  4163bc:	les    edx,FWORD PTR [ecx-0x64]
  4163bf:	rcr    DWORD PTR [eax-0x2f],1
  4163c2:	xor    eax,0xc7c4ff5b
  4163c7:	mul    BYTE PTR [esp+eiz*4+0x3f9c747a]
  4163ce:	add    eax,0xafe731b1
  4163d3:	stos   DWORD PTR es:[edi],eax
  4163d4:	ficom  WORD PTR gs:[edx+0x2e]
  4163d8:	push   ds
  4163d9:	push   cs
  4163da:	fisttp QWORD PTR [ecx]
  4163dc:	outs   dx,BYTE PTR ds:[esi]
  4163dd:	retf   0x1900
  4163e0:	jno    0x41644a
  4163e2:	call   0x2f2f:0x43da71fe
  4163e9:	(bad)  
  4163ea:	xchg   edx,eax
  4163eb:	pop    ecx
  4163ec:	and    eax,DWORD PTR [edx-0x4b]
  4163ef:	repnz cs lock int3 
  4163f3:	mov    esi,0xa10a114c
  4163f8:	xchg   ebx,eax
  4163f9:	shl    ebx,cl
  4163fb:	xor    edi,DWORD PTR [ebp-0x2c]
  4163fe:	fcomp  QWORD PTR [edx-0x525a3b76]
  416404:	les    eax,FWORD PTR [eax-0x6f]
  416407:	je     0x4163b5
  416409:	add    al,0xa
  41640b:	cld    
  41640c:	out    dx,eax
  41640d:	dec    ebp
  41640e:	out    0x7b,al
  416410:	adc    al,0x8c
  416412:	inc    eax
  416413:	pushf  
  416414:	out    0xb3,al
  416416:	lahf   
  416417:	jnp    0x416408
  416419:	inc    edi
  41641a:	aaa    
  41641b:	cmp    eax,0xabf49747
  416420:	fcomp  st(4)
  416422:	inc    ebp
  416423:	fucompp 
  416425:	sbb    DWORD PTR [esi-0x4d394b3c],ebp
  41642b:	push   ss
  41642c:	adc    al,0xa3
  41642e:	adc    BYTE PTR [esi],dl
  416430:	les    ebp,FWORD PTR [ebp+0x75bfbc16]
  416436:	mov    esp,0x21eb5042
  41643b:	adc    ebx,DWORD PTR [esi+0x7b0837a5]
  416441:	jo     0x4164b4
  416443:	mov    eax,ds:0x6e6c0e74
  416448:	shl    BYTE PTR [edx+esi*2+0x1d],0xc5
  41644d:	jne    0x416443
  41644f:	dec    edi
  416450:	sahf   
  416451:	out    dx,al
  416452:	inc    ebp
  416453:	inc    ebx
  416454:	xchg   edx,eax
  416455:	leave  
  416456:	cwde   
  416457:	(bad)  
  416459:	sbb    dh,dh
  41645b:	push   ecx
  41645c:	cmp    al,0x61
  41645e:	add    eax,0x5f55e5e8
  416463:	call   0x1e11094d
  416468:	(bad)  [ebx]
  41646a:	xlat   BYTE PTR ds:[ebx]
  41646b:	cs push ds
  41646d:	jo     0x416445
  41646f:	sub    al,0x39
  416471:	adc    esp,DWORD PTR [edx+0x1f]
  416474:	jb     0x416487
  416476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416477:	adc    BYTE PTR [ebp+0x480f64e3],0xaf
  41647e:	aas    
  41647f:	mov    al,0xc2
  416481:	mov    BYTE PTR [esi+0x1e9eb45],al
  416487:	and    DWORD PTR [esi-0x25bdafa4],esi
  41648d:	inc    esp
  41648e:	cs (bad) 
  416490:	outs   dx,DWORD PTR ds:[esi]
  416491:	push   ebp
  416492:	dec    ebx
  416493:	iret   
  416494:	mov    ebp,0xbed8618a
  416499:	cld    
  41649a:	inc    esp
  41649b:	dec    esi
  41649c:	jne    0x416443
  41649e:	xor    eax,0xe37d0725
  4164a3:	inc    ebx
  4164a4:	retf   
  4164a5:	test   eax,0x9a1d5552
  4164aa:	test   ebx,ecx
  4164ac:	inc    ebx
  4164ad:	fnstsw WORD PTR [ebx-0x5a0fa93]
  4164b3:	imul   BYTE PTR [ecx+0x30]
  4164b6:	and    DWORD PTR [eax+ebx*2],edx
  4164b9:	fstp   DWORD PTR [esi]
  4164bb:	stos   BYTE PTR es:[edi],al
  4164bc:	rcl    BYTE PTR ds:0x7eef2c40,0x9b
  4164c3:	inc    edx
  4164c4:	jmpw   0xf0b8
  4164c8:	jge    0x4164fa
  4164ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164cb:	cdq    
  4164cc:	test   BYTE PTR [edx+eiz*2],bh
  4164cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d0:	lds    esi,FWORD PTR [esp+ebx*8]
  4164d3:	(bad)  
  4164d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d6:	cwde   
  4164d7:	dec    ebp
  4164d8:	sub    al,0x6e
  4164da:	data16 mov al,ds:0x3f8d754
  4164e0:	pop    edx
  4164e1:	jne    0x41647d
  4164e3:	sbb    al,BYTE PTR [ecx+0x28]
  4164e6:	sti    
  4164e7:	xchg   edi,eax
  4164e8:	or     al,0xf6
  4164ea:	mov    cl,0x48
  4164ec:	mov    ?,WORD PTR [ecx-0x10]
  4164ef:	jge    0x4164b3
  4164f1:	mov    DWORD PTR [ebp+eax*4-0x1f],ebp
  4164f5:	popa   
  4164f6:	jecxz  0x416545
  4164f8:	jmp    FWORD PTR [edi-0x5a]
  4164fb:	and    al,BYTE PTR [esi+ebp*8+0x3aa7d68d]
  416502:	sub    BYTE PTR [esi-0x42],dl
  416505:	lods   eax,DWORD PTR ds:[esi]
  416506:	push   ecx
  416507:	push   ecx
  416508:	scas   eax,DWORD PTR es:[edi]
  416509:	fldenv [eax+0x7d]
  41650c:	jp     0x4164f4
  41650e:	and    BYTE PTR ds:0x968b658f,dl
  416514:	add    dl,BYTE PTR [eiz*1+0x611ec70f]
  41651b:	scas   al,BYTE PTR es:[edi]
  41651c:	pop    ebx
  41651d:	push   edx
  41651e:	cmp    dh,BYTE PTR [eax]
  416520:	dec    edi
  416521:	mov    eax,ds:0x12cf6dce
  416526:	push   ebp
  416527:	das    
  416528:	pop    ebx
  416529:	dec    edx
  41652a:	push   0xffffffd9
  41652c:	jge    0x41651b
  41652e:	mov    BYTE PTR [ebp-0x6c],al
  416531:	mov    es,WORD PTR [edx]
  416533:	jg     0x41653d
  416535:	or     al,0x4c
  416537:	ror    DWORD PTR [eax-0x768fd38d],1
  41653d:	xchg   edx,eax
  41653e:	pop    ds
  41653f:	in     eax,0x8c
  416541:	sub    BYTE PTR [eax+edi*8-0x57b4e3f7],ah
  416548:	(bad)  
  416549:	imul   BYTE PTR [esi+esi*2+0x3]
  41654d:	dec    esi
  41654e:	xchg   esi,eax
  41654f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416550:	int    0x74
  416552:	adc    ebp,esp
  416554:	adc    dh,0x12
  416557:	iret   
  416558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416559:	jge    0x41651b
  41655b:	loope  0x416570
  41655d:	pop    eax
  41655e:	push   es
  41655f:	inc    ebx
  416560:	jmpw   0xf4ea
  416564:	inc    BYTE PTR [edi-0xc]
  416567:	push   edi
  416568:	pop    es
  416569:	or     al,0x75
  41656b:	push   DWORD PTR [esi+0x0]
  41656e:	dec    ebp
  41656f:	ss mov dh,ch
  416572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416573:	jmp    0xc9d24941
  416578:	jae    0x416523
  41657a:	addr16 or eax,0xc02b2ce6
  416580:	retf   
  416581:	xchg   ecx,eax
  416582:	and    BYTE PTR [edx+0x18],bl
  416585:	scas   eax,DWORD PTR es:[edi]
  416586:	push   esp
  416587:	jb     0x4165db
  416589:	ret    0xde7f
  41658c:	sub    bh,ah
  41658e:	mov    ecx,0x40247f2d
  416593:	jp     0x416605
  416595:	data16 adc ax,0x1a05
  41659a:	mov    ecx,0x26e36dbe
  41659f:	or     eax,0x625907be
  4165a4:	aad    0x0
  4165a6:	and    DWORD PTR [esp+edi*2+0x64],edi
  4165aa:	es jae 0x416555
  4165ad:	in     al,0xf7
  4165af:	sbb    BYTE PTR [esi+0x564792f6],ah
  4165b5:	push   0xffffff93
  4165b7:	jecxz  0x416589
  4165b9:	push   0x86f1f28b
  4165be:	test   DWORD PTR [ebp+0x414611ad],ebx
  4165c4:	push   0xffffffb3
  4165c6:	ror    DWORD PTR [esi+0x6595c3d0],cl
  4165cc:	add    al,0x88
  4165ce:	jbe    0x4165b8
  4165d0:	out    0x88,al
  4165d2:	mov    ebx,0xa9fee5eb
  4165d7:	jle    0x41659e
  4165d9:	in     eax,0x9e
  4165db:	idiv   BYTE PTR [edi+0x31]
  4165de:	mov    al,0x35
  4165e0:	push   cs
  4165e1:	imul   esi,DWORD PTR [edi-0x351a9488],0x30ddfa8c
  4165eb:	pusha  
  4165ec:	push   ebp
  4165ed:	mov    dh,0xb2
  4165ef:	mov    esi,0xf7a9bf1a
  4165f4:	out    0xf1,eax
  4165f6:	lahf   
  4165f7:	test   DWORD PTR [esi+ecx*2],0xbf12d45c
  4165fe:	lahf   
  4165ff:	fwait
  416600:	hlt    
  416601:	stc    
  416602:	test   ah,bh
  416604:	pop    ebx
  416605:	push   ecx
  416606:	inc    esi
  416607:	mov    dh,0x6e
  416609:	sbb    BYTE PTR [ecx],dh
  41660b:	in     eax,0xa9
  41660d:	sbb    esp,DWORD PTR [esi-0x775a31fb]
  416613:	outs   dx,BYTE PTR ds:[esi]
  416614:	or     DWORD PTR [edx-0x152168e],0xffffff89
  41661b:	int    0xe8
  41661d:	jb     0x4165f9
  41661f:	cmp    BYTE PTR [ecx-0x78],dl
  416622:	mov    esi,esi
  416624:	rcl    DWORD PTR [eax-0x52523c45],cl
  41662a:	loop   0x4165f2
  41662c:	mov    eax,0xf57bf8a0
  416631:	push   ebp
  416632:	xor    esp,DWORD PTR [ecx]
  416634:	or     al,0xd4
  416636:	fs in  al,0xb1
  416639:	pop    ss
  41663a:	scas   eax,DWORD PTR es:[edi]
  41663b:	inc    ecx
  41663c:	loop   0x4166ad
  41663e:	or     al,0x9e
  416640:	sub    BYTE PTR [edi],dh
  416642:	out    0xcf,al
  416644:	dec    esp
  416645:	jmp    0x9e0a466d
  41664a:	adc    al,0xf5
  41664c:	lahf   
  41664d:	pop    edx
  41664e:	leave  
  41664f:	lds    ecx,FWORD PTR ds:[ecx+0x70]
  416653:	in     al,0x62
  416655:	(bad)  
  416656:	jmp    0x416619
  416658:	or     bh,BYTE PTR [esp+ebx*8]
  41665b:	scas   eax,DWORD PTR es:[edi]
  41665c:	or     DWORD PTR [eax-0x24b806e6],edi
  416662:	push   ebx
  416663:	xchg   esp,eax
  416664:	mov    bl,0xea
  416666:	test   DWORD PTR [eax+edi*8],0x480f223
  41666d:	dec    edi
  41666e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41666f:	add    DWORD PTR [esi-0x78],esp
  416672:	(bad)  [ebx]
  416674:	js     0x4166e6
  416676:	in     eax,dx
  416677:	sub    ecx,ecx
  416679:	push   0x17ba7cb3
  41667e:	sbb    eax,0x2fe0720d
  416683:	mov    ds:0x41bd8929,al
  416688:	outs   dx,BYTE PTR ds:[esi]
  416689:	xlat   BYTE PTR ds:[ebx]
  41668a:	repnz lods eax,DWORD PTR ds:[esi]
  41668c:	sbb    ecx,DWORD PTR [eax-0x6228c023]
  416692:	outs   dx,BYTE PTR ds:[esi]
  416693:	fadd   QWORD PTR [esi-0x76b81d01]
  416699:	mov    ebp,0xb2a79896
  41669e:	xor    al,BYTE PTR [edx-0x18]
  4166a1:	xchg   ebp,eax
  4166a2:	mov    ds:0xf8e314d0,eax
  4166a7:	iret   
  4166a8:	call   FWORD PTR [ebp+0x32]
  4166ab:	add    DWORD PTR [ebx-0x30bbbacb],edx
  4166b1:	push   ebp
  4166b2:	jmp    0x6540d2b2
  4166b7:	sub    al,BYTE PTR [edi+0x5dd74c43]
  4166bd:	sub    DWORD PTR [ecx-0x11],edx
  4166c0:	pop    ds
  4166c1:	into   
  4166c2:	dec    ebp
  4166c3:	xchg   DWORD PTR [ebp+0x2ecf25be],esi
  4166c9:	mov    esi,0xf0653168
  4166ce:	mov    ebx,0xcac022ac
  4166d3:	dec    eax
  4166d4:	jle    0x416663
  4166d6:	ret    
  4166d7:	xchg   esi,eax
  4166d8:	and    al,0x49
  4166da:	jg     0x4166f8
  4166dc:	or     BYTE PTR [ecx+0xc],0x72
  4166e0:	jg     0x416746
  4166e2:	lahf   
  4166e3:	adc    BYTE PTR [edi+0x52dc2257],0x55
  4166ea:	dec    ebx
  4166eb:	mov    eax,0xf3a4a2a7
  4166f0:	icebp  
  4166f1:	and    ebx,DWORD PTR ds:0xf8fc5858
  4166f7:	xor    dl,BYTE PTR [eiz*1+0x388169f2]
  4166fe:	bnd jo 0x4166d9
  416701:	or     DWORD PTR [edx],edi
  416703:	jp     0x416709
  416705:	mov    edx,0x50e6b7f8
  41670a:	sub    ch,BYTE PTR ds:0xb44978b9
  416710:	test   eax,0x5f097e78
  416715:	cmp    ecx,esi
  416717:	mov    ds:0x55e0e248,al
  41671c:	fadd   QWORD PTR [ecx]
  41671e:	push   cs
  41671f:	mov    esp,0xc37a65b9
  416724:	mov    eax,ds:0xf9acd52b
  416729:	push   cs
  41672a:	fs or  ah,dl
  41672d:	mov    al,0x23
  41672f:	dec    esi
  416730:	sbb    dl,ch
  416732:	into   
  416733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416734:	add    BYTE PTR [ebp-0x59],ah
  416737:	or     ecx,DWORD PTR [eax]
  416739:	div    BYTE PTR [eax]
  41673b:	pop    esi
  41673c:	ret    0xe474
  41673f:	fs pushf 
  416741:	push   ds
  416742:	pop    esi
  416743:	jmp    0x416771
  416745:	mov    edx,0x66170ee9
  41674a:	mov    ebp,0x24ceb797
  41674f:	inc    esp
  416750:	xchg   ebp,eax
  416751:	adc    DWORD PTR [ebx],eax
  416753:	loope  0x41678b
  416755:	mov    ah,0x79
  416757:	jmp    0x4167b1
  416759:	inc    ecx
  41675a:	jl     0x416724
  41675c:	dec    ebx
  41675d:	jne    0x4167cd
  41675f:	int3   
  416760:	xchg   edi,eax
  416761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416762:	(bad)  
  416763:	imul   ecx,DWORD PTR [ebx],0x43
  416766:	cmp    edi,DWORD PTR [edi]
  416768:	sub    al,0xef
  41676a:	xchg   ebx,eax
  41676b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41676c:	jp     0x416754
  41676e:	add    cl,BYTE PTR [edi+edi*4-0x7e]
  416772:	mov    esp,0x26059955
  416777:	inc    esi
  416778:	push   es
  416779:	nop
  41677a:	jae    0x416716
  41677c:	(bad)  
  41677d:	shr    BYTE PTR [ebx-0x7c559dc2],1
  416783:	int    0x9b
  416785:	or     dl,BYTE PTR [ebx+0xf2f64d4]
  41678b:	imul   esp,DWORD PTR [edx-0x54],0xffffffec
  41678f:	out    0xb1,eax
  416791:	scas   al,BYTE PTR es:[edi]
  416792:	add    eax,0xafe241c8
  416797:	pop    ecx
  416798:	push   edi
  416799:	sar    BYTE PTR [edx],0x41
  41679c:	stos   DWORD PTR es:[edi],eax
  41679d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41679e:	pop    ebp
  41679f:	int    0x2e
  4167a1:	dec    esi
  4167a2:	arpl   cx,ax
  4167a4:	or     al,0x54
  4167a6:	movaps XMMWORD PTR [eax-0x6d],xmm0
  4167aa:	pop    ss
  4167ab:	std    
  4167ac:	ins    BYTE PTR es:[edi],dx
  4167ad:	mov    ds:0xb6f9c733,al
  4167b2:	ds sti 
  4167b4:	adc    ch,BYTE PTR [esi]
  4167b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b7:	mov    dl,BYTE PTR [eax]
  4167b9:	push   ecx
  4167ba:	popa   
  4167bb:	rcl    DWORD PTR [edx+ecx*4+0xc],1
  4167bf:	ja     0x4167cf
  4167c1:	pusha  
  4167c2:	sbb    ah,bl
  4167c4:	hlt    
  4167c5:	add    ch,cl
  4167c7:	dec    BYTE PTR [esp+ecx*1-0x6304785f]
  4167ce:	stos   BYTE PTR es:[edi],al
  4167cf:	or     eax,0xbff02a35
  4167d4:	or     dh,BYTE PTR [ecx]
  4167d6:	js     0x4167fc
  4167d8:	inc    ebp
  4167d9:	mov    cl,bl
  4167db:	mov    BYTE PTR [bp+di],bl
  4167de:	das    
  4167df:	pop    ds
  4167e0:	mov    bh,al
  4167e2:	je     0x4167d6
  4167e4:	mul    BYTE PTR ds:[edi]
  4167e7:	(bad)  
  4167e8:	dec    ecx
  4167e9:	jmp    0x416811
  4167eb:	and    eax,0x7315e158
  4167f0:	sbb    eax,0x7cb50311
  4167f5:	push   ebx
  4167f6:	or     eax,0x81fba742
  4167fb:	mov    ds:0x2d17a18f,eax
  416800:	sbb    ch,BYTE PTR [eax]
  416802:	mov    dl,0xfc
  416804:	in     eax,0x7e
  416806:	aaa    
  416807:	inc    edx
  416808:	ins    BYTE PTR es:[edi],dx
  416809:	jmp    0x416828
  41680b:	stos   DWORD PTR es:[edi],eax
  41680c:	and    BYTE PTR [ebp+0x45],bh
  41680f:	aad    0xcd
  416811:	ins    BYTE PTR es:[edi],dx
  416812:	mov    dh,0xe1
  416814:	mov    esi,0x8b95b0d2
  416819:	lods   al,BYTE PTR ds:[esi]
  41681a:	test   al,0x75
  41681c:	jmp    0x8d110921
  416821:	sub    BYTE PTR [edx-0x57],cl
  416824:	rol    eax,0x3
  416827:	sbb    eax,0xe1606951
  41682c:	adc    al,BYTE PTR [ecx]
  41682e:	push   eax
  41682f:	popa   
  416830:	jp     0x4167bd
  416832:	adc    DWORD PTR [eax-0x11],0xce307709
  416839:	dec    ebp
  41683a:	loope  0x41680c
  41683c:	arpl   WORD PTR [edx-0x6f9d8d19],dx
  416842:	cwde   
  416843:	jl     0x416865
  416845:	int3   
  416846:	xchg   edx,eax
  416847:	fwait
  416848:	xor    DWORD PTR [eax+0x643e3e27],ebp
  41684e:	leave  
  41684f:	cmp    al,BYTE PTR [ebx-0x3e1032d3]
  416855:	adc    al,0xe3
  416857:	pusha  
  416858:	push   ecx
  416859:	cli    
  41685a:	shl    ch,cl
  41685c:	out    0xa1,al
  41685e:	imul   esp,DWORD PTR [ebx-0x5d5d3e5b],0x1ecf31f6
  416868:	xchg   esp,eax
  416869:	jbe    0x416864
  41686b:	iret   
  41686c:	std    
  41686d:	(bad)  
  41686e:	push   esi
  41686f:	sbb    bl,bh
  416871:	scas   al,BYTE PTR es:[edi]
  416872:	out    0x26,al
  416874:	jo     0x416868
  416876:	rcr    ebp,cl
  416878:	js     0x416892
  41687a:	loopne 0x4168fb
  41687c:	or     ebp,DWORD PTR [ebp-0x57176785]
  416882:	dec    ebx
  416883:	dec    eax
  416884:	enter  0xa6e5,0x29
  416888:	sbb    al,0x78
  41688a:	mov    ds:0xb8538485,eax
  41688f:	ins    BYTE PTR es:[edi],dx
  416890:	out    dx,eax
  416891:	pop    ds
  416892:	ja     0x41689c
  416894:	in     eax,dx
  416895:	add    al,0x49
  416897:	loop   0x4168db
  416899:	push   ebp
  41689a:	mov    ebx,0xf2f6fd15
  41689f:	enter  0x80f9,0x85
  4168a3:	mov    BYTE PTR [ecx],0xc4
  4168a6:	data16 sbb BYTE PTR [ebx+0xf],cl
  4168aa:	inc    ecx
  4168ab:	data16 jnp 0x41687d
  4168ae:	ds mov gs:0xbd2eb6b6,al
  4168b5:	daa    
  4168b6:	test   BYTE PTR [esi+esi*4],0xa8
  4168ba:	fldenv [ecx]
  4168bc:	mov    dl,0x48
  4168be:	adc    al,0xac
  4168c0:	push   eax
  4168c1:	add    bh,BYTE PTR ds:0x3aeafeb9
  4168c7:	mov    eax,ds:0x72f6c357
  4168cc:	bound  edi,QWORD PTR [esp+ebx*1+0x43b7548f]
  4168d3:	push   ebx
  4168d4:	ds sub eax,0xf6084984
  4168da:	inc    ecx
  4168db:	push   ecx
  4168dc:	and    ah,BYTE PTR [ebx+0x78fdd768]
  4168e2:	fiadd  WORD PTR [edi+0x1649b1c1]
  4168e8:	test   eax,0x2340c430
  4168ed:	dec    ecx
  4168ee:	push   ds
  4168ef:	mov    BYTE PTR [edi-0x50],dh
  4168f2:	add    al,0xbf
  4168f4:	cmp    al,0x38
  4168f6:	in     al,dx
  4168f7:	fsubrp st(3),st
  4168f9:	mov    eax,0xd92cc675
  4168fe:	mov    bh,0x95
  416900:	adc    bh,BYTE PTR [edi-0x6fe0d805]
  416906:	push   edi
  416907:	inc    ebp
  416908:	out    0x63,al
  41690a:	repz cdq 
  41690c:	mov    al,ds:0xccd45b26
  416911:	call   0xdf1a900b
  416916:	sbb    al,0x46
  416918:	fld    TBYTE PTR [ebp-0x25]
  41691b:	in     al,dx
  41691c:	or     esp,edx
  41691e:	imul   edx,DWORD PTR [eax],0x4cbae924
  416924:	pop    ebp
  416925:	std    
  416926:	lahf   
  416927:	mov    edx,fs
  416929:	jne    0x416972
  41692b:	adc    cl,BYTE PTR [esi]
  41692d:	int    0x26
  41692f:	xchg   dh,dl
  416931:	push   cs
  416932:	add    eax,0xa92a7ff9
  416937:	(bad)  
  416938:	cld    
  416939:	adc    edx,DWORD PTR [edi-0x2f]
  41693c:	mov    ds:0xf4254916,al
  416941:	retf   
  416942:	sub    cl,ch
  416944:	lods   al,BYTE PTR ds:[esi]
  416945:	sbb    eax,0x32781fa5
  41694a:	adc    bh,cl
  41694c:	fist   DWORD PTR [edx]
  41694e:	jp     0x4169c3
  416950:	dec    ebx
  416951:	sti    
  416952:	xchg   esp,eax
  416953:	pop    esi
  416954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416955:	stc    
  416956:	xchg   ebp,eax
  416957:	push   edi
  416958:	mov    ebp,0x8ba504db
  41695d:	loop   0x41690b
  41695f:	dec    esi
  416960:	mov    dh,0xb0
  416962:	add    al,0xb1
  416964:	cmp    eax,0xd54e8ecf
  416969:	icebp  
  41696a:	push   0xbc0f1b3
  41696f:	loope  0x416991
  416971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416972:	cmp    DWORD PTR [esi-0x2fd6e46c],ebp
  416978:	or     BYTE PTR [esp+esi*8],bh
  41697b:	and    dl,BYTE PTR [ebp-0x25]
  41697e:	addr16 cmc 
  416980:	jno    0x416962
  416982:	pop    ebp
  416983:	std    
  416984:	or     DWORD PTR [edi-0x77],eax
  416987:	jne    0x41693b
  416989:	in     al,0x32
  41698b:	mov    dh,0xc3
  41698d:	mov    edi,0xbe370c04
  416992:	xor    BYTE PTR [edi-0x61419db5],dl
  416998:	jecxz  0x4169a1
  41699a:	cmp    esp,DWORD PTR [esi+ebx*1]
  41699d:	aad    0x16
  41699f:	ja     0x4169d2
  4169a1:	imul   edx,DWORD PTR [eax+0x24],0xa15b989b
  4169a8:	adc    bh,BYTE PTR [esi]
  4169aa:	inc    edx
  4169ab:	or     DWORD PTR [eiz*2-0x1c5d9e4f],0xffffffda
  4169b3:	ss popa 
  4169b5:	cld    
  4169b6:	in     al,0xb6
  4169b8:	out    dx,eax
  4169b9:	lock mov dl,0xf4
  4169bc:	scas   eax,DWORD PTR es:[edi]
  4169bd:	stc    
  4169be:	sub    DWORD PTR [eax+edx*2-0x54],ecx
  4169c2:	daa    
  4169c3:	and    BYTE PTR [eax+0x35cfb407],cl
  4169c9:	xchg   ebp,eax
  4169ca:	or     eax,ebp
  4169cc:	les    eax,FWORD PTR [ecx-0x31]
  4169cf:	pusha  
  4169d0:	push   0x76a5e7ca
  4169d5:	mov    edi,0xf03fdb01
  4169da:	fcomp  DWORD PTR [esi+edx*2]
  4169dd:	or     dl,BYTE PTR [esp+ecx*1+0x3735cf47]
  4169e4:	jb     0x4169f7
  4169e6:	pop    es
  4169e7:	adc    eax,0x291cdf2f
  4169ec:	adc    dl,0xfa
  4169ef:	push   edi
  4169f0:	push   ss
  4169f1:	xor    al,0x88
  4169f3:	ret    0xc6ac
  4169f6:	sbb    eax,0x85fe21e8
  4169fb:	mov    esi,0x532c2688
  416a00:	jnp    0x416a5c
  416a02:	xchg   edx,eax
  416a03:	xchg   esi,eax
  416a04:	arpl   sp,bx
  416a06:	jo     0x4169c6
  416a08:	fisubr WORD PTR [edi+0x53e60cef]
  416a0e:	pushf  
  416a0f:	out    0xe7,al
  416a11:	and    al,0xa1
  416a13:	leave  
  416a14:	mov    ah,0xdb
  416a16:	push   ebp
  416a17:	int    0x75
  416a19:	xchg   ecx,eax
  416a1a:	stos   BYTE PTR es:[edi],al
  416a1b:	pop    edx
  416a1c:	add    al,0xe2
  416a1e:	push   edx
  416a1f:	inc    esp
  416a20:	dec    esi
  416a21:	fs jnp 0x4169ff
  416a24:	test   eax,0x702a4aec
  416a29:	jmp    0x47af334
  416a2e:	lea    esp,[eax-0x1251583c]
  416a34:	and    BYTE PTR [ecx-0x1d2e9804],ch
  416a3a:	js     0x416a79
  416a3c:	mov    ebx,0x5ad54581
  416a41:	cmp    dh,BYTE PTR [edi+edi*2-0x2]
  416a45:	jae    0x4169ce
  416a47:	cmp    ebx,eax
  416a49:	add    dl,BYTE PTR [edx-0x6d]
  416a4c:	mov    dh,0x39
  416a4e:	cmp    DWORD PTR [eax],edx
  416a50:	xor    edx,DWORD PTR ds:0x84d5f6a7
  416a56:	ror    BYTE PTR [edx+0x4c],0x13
  416a5a:	sub    cl,BYTE PTR [edi-0x408f8a6b]
  416a60:	cs aaa 
  416a62:	or     ch,bl
  416a64:	fiadd  DWORD PTR [edx-0x7f6da3cf]
  416a6a:	and    ebp,DWORD PTR [ecx+ecx*1-0x7e]
  416a6e:	add    al,bh
  416a70:	stc    
  416a71:	jno    0x416a15
  416a73:	jl     0x416a7e
  416a75:	and    BYTE PTR [ebx],0x6
  416a78:	jcxz   0x416a17
  416a7b:	sbb    BYTE PTR [ecx],bl
  416a7d:	lahf   
  416a7e:	inc    ebp
  416a7f:	mov    BYTE PTR [eax+ebp*2+0x2a],bl
  416a83:	unpckhps xmm2,xmm7
  416a86:	popa   
  416a87:	(bad)  
  416a88:	enter  0xee6,0x6a
  416a8c:	sbb    BYTE PTR [eax],0x7
  416a8f:	pop    ds
  416a90:	mov    esp,0x16181162
  416a95:	inc    ecx
  416a96:	daa    
  416a97:	mov    eax,0x8c60cf80
  416a9c:	jmp    0xce2b361d
  416aa1:	cmc    
  416aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aa3:	push   ds
  416aa4:	dec    esi
  416aa5:	mov    DWORD PTR ds:0xee2d99f2,0xa43f0c99
  416aaf:	imul   edi,ebp,0xffffffa3
  416ab2:	mov    eax,DWORD PTR [ebx+0xb]
  416ab5:	push   edx
  416ab6:	sahf   
  416ab7:	js     0x416ab7
  416ab9:	mov    eax,0x98355057
  416abe:	mov    ecx,es
  416ac0:	push   edx
  416ac1:	inc    ebx
  416ac2:	push   cs
  416ac3:	sub    al,0xd5
  416ac5:	push   ebp
  416ac6:	push   0xa9f768fd
  416acb:	fsubr  QWORD PTR [edx+0x19]
  416ace:	rol    BYTE PTR [edx-0x3b],0x99
  416ad2:	stos   DWORD PTR es:[edi],eax
  416ad3:	dec    BYTE PTR [ebx]
  416ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad6:	lods   al,BYTE PTR ds:[esi]
  416ad7:	daa    
  416ad8:	nop
  416ad9:	mov    bl,0x2f
  416adb:	adc    eax,0x8d9b4480
  416ae0:	jecxz  0x416ad7
  416ae2:	pop    es
  416ae3:	adc    DWORD PTR [esi],esp
  416ae5:	pop    eax
  416ae6:	mov    al,0x3e
  416ae8:	mov    WORD PTR [ebx-0x56bd07a0],ss
  416aee:	sbb    al,0x47
  416af0:	aad    0x30
  416af2:	sub    ch,BYTE PTR [ebp+0xba08d90]
  416af8:	lea    edx,[ebx+eax*8-0x1b]
  416afc:	enter  0xe43f,0x9d
  416b00:	mov    bl,0x9e
  416b02:	rcl    BYTE PTR [esi],0xd7
  416b05:	sbb    dl,BYTE PTR ds:0xcd16a700
  416b0b:	pop    ecx
  416b0c:	pushw  0xffb7
  416b0f:	fcmovnbe st,st(4)
  416b11:	repz sub al,0xae
  416b14:	jb     0x416acd
  416b16:	or     esp,DWORD PTR [esi+0x79]
  416b19:	mov    ?,WORD PTR [eax-0x377237bf]
  416b1f:	retf   
  416b20:	push   edx
  416b21:	jl     0x416b62
  416b23:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416b25:	inc    ebp
  416b26:	pop    eax
  416b27:	pop    es
  416b28:	add    eax,0xa9ab5485
  416b2d:	sahf   
  416b2e:	out    0x8c,eax
  416b30:	mov    ecx,0x3ce69aa3
  416b35:	add    ecx,DWORD PTR [eax-0x1c406ec0]
  416b3b:	adc    BYTE PTR [eax+0x57a5a982],dh
  416b41:	cld    
  416b42:	loope  0x416bc0
  416b44:	mov    esi,0x54bcdb48
  416b49:	repz std 
  416b4b:	push   ds
  416b4c:	aaa    
  416b4d:	lds    edx,FWORD PTR [esi-0x1c]
  416b50:	popf   
  416b51:	cmp    BYTE PTR [edx-0x3e],ah
  416b54:	lods   eax,DWORD PTR ds:[esi]
  416b55:	idiv   DWORD PTR ds:0x128bcbcc
  416b5b:	inc    ecx
  416b5c:	lock das 
  416b5e:	sbb    DWORD PTR [esi],eax
  416b60:	in     eax,0x9c
  416b62:	mul    BYTE PTR [esi-0x5168b150]
  416b68:	addr16 ret 
  416b6a:	dec    ebx
  416b6b:	test   eax,0x8bcf18c9
  416b70:	leave  
  416b71:	iret   
  416b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b73:	retf   0x489b
  416b76:	outs   dx,BYTE PTR ds:[esi]
  416b77:	mov    ah,BYTE PTR [ecx]
  416b79:	fwait
  416b7a:	or     DWORD PTR [eax+edi*1-0x6b],edi
  416b7e:	jge    0x416b34
  416b80:	cdq    
  416b81:	sbb    edx,DWORD PTR [edi*2-0x46a63cda]
  416b88:	fndisi(8087 only) 
  416b8a:	out    dx,al
  416b8b:	cmp    al,0x8f
  416b8d:	retf   
  416b8e:	lods   eax,DWORD PTR ds:[esi]
  416b8f:	push   ds
  416b90:	adc    al,0x11
  416b92:	push   edx
  416b93:	xchg   ecx,eax
  416b94:	and    eax,0xdb64cf39
  416b99:	sahf   
  416b9a:	jmp    0xf70d257d
  416b9f:	ja     0x416b5f
  416ba1:	jl     0x416be0
  416ba3:	sbb    eax,0x8d9f0ecc
  416ba8:	push   esp
  416ba9:	in     al,0x6c
  416bab:	mov    esp,es
  416bad:	loop   0x416bfa
  416baf:	pusha  
  416bb0:	js     0x416b70
  416bb2:	pop    ds
  416bb3:	adc    ah,BYTE PTR ds:0x7e77c937
  416bb9:	mov    al,ds:0x29eca8c
  416bbe:	(bad)  
  416bbf:	lahf   
  416bc0:	pop    edi
  416bc1:	leave  
  416bc2:	mov    edx,DWORD PTR [ecx]
  416bc4:	test   BYTE PTR ds:0xde1539b4,ah
  416bca:	push   ecx
  416bcb:	das    
  416bcc:	dec    BYTE PTR [ebx-0x2950ec24]
  416bd2:	inc    ebp
  416bd3:	cdq    
  416bd4:	and    DWORD PTR [ecx+ebx*4],0x6b3ef100
  416bdb:	jb     0x416bd3
  416bdd:	pop    eax
  416bde:	test   eax,0x566a8c3
  416be3:	xchg   ebx,eax
  416be4:	mov    bl,BYTE PTR [ecx-0x78]
  416be7:	ins    BYTE PTR es:[edi],dx
  416be8:	push   edi
  416be9:	xchg   ecx,eax
  416bea:	es push edx
  416bec:	fadd   QWORD PTR [esi]
  416bee:	dec    edi
  416bef:	mov    eax,ds:0x1367e64e
  416bf4:	ins    DWORD PTR es:[edi],dx
  416bf5:	in     eax,0xb1
  416bf7:	sub    eax,0xdd97b804
  416bfc:	daa    
  416bfd:	xor    BYTE PTR [ebx-0x77],cl
  416c00:	xchg   edx,eax
  416c01:	mov    ?,WORD PTR ds:0x71b2d925
  416c07:	push   esp
  416c08:	repnz add dh,BYTE PTR [eax+0x4090cb4e]
  416c0f:	cmp    eax,0x16e4b38e
  416c14:	aad    0xad
  416c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c17:	in     al,dx
  416c18:	add    BYTE PTR [eax],bh
  416c1a:	xor    ebx,DWORD PTR [ebx-0x28]
  416c1d:	mov    al,0x7f
  416c1f:	jle    0x416c4b
  416c21:	in     eax,dx
  416c22:	out    dx,eax
  416c23:	aad    0x98
  416c25:	ins    BYTE PTR es:[edi],dx
  416c26:	jle    0x416c08
  416c28:	mov    ebx,0x83608e90
  416c2d:	aaa    
  416c2e:	or     eax,0x55e13942
  416c33:	jo     0x416c21
  416c35:	pop    ecx
  416c36:	(bad)  
  416c37:	shl    bh,0xfc
  416c3a:	push   es
  416c3b:	dec    esi
  416c3c:	mov    cl,0x9f
  416c3e:	adc    al,0x91
  416c40:	scas   eax,DWORD PTR es:[edi]
  416c41:	stos   DWORD PTR es:[edi],eax
  416c42:	push   0xffffffc0
  416c44:	mov    cl,0xcf
  416c46:	sbb    eax,0xd96d9193
  416c4b:	and    ch,BYTE PTR [ebp+0x2c]
  416c4e:	add    DWORD PTR [edi],0xffffffce
  416c51:	mov    cl,0x82
  416c53:	add    dh,BYTE PTR [eax]
  416c55:	xor    ch,BYTE PTR ds:0x7fdf8905
  416c5b:	repz push esi
  416c5d:	lahf   
  416c5e:	mov    ah,0x6a
  416c60:	push   edi
  416c61:	pop    edi
  416c62:	call   0xdad0:0x315ceefe
  416c69:	xchg   ecx,eax
  416c6a:	push   cs
  416c6b:	xlat   BYTE PTR ds:[ebx]
  416c6c:	pop    es
  416c6d:	mov    eax,0xfc5c83cf
  416c72:	cdq    
  416c73:	mov    WORD PTR ds:0xd807293f,ss
  416c79:	and    DWORD PTR [esi+ebp*2],esi
  416c7c:	jle    0x416cbc
  416c7e:	pop    esi
  416c7f:	xlat   BYTE PTR ds:[ebx]
  416c80:	fldenv [eax-0x7d002dc6]
  416c86:	cmp    dl,BYTE PTR [esi]
  416c88:	or     DWORD PTR [edi],0xffffffa8
  416c8b:	sti    
  416c8c:	ss loopne 0x416c20
  416c8f:	cmp    eax,DWORD PTR [esi-0x2ef0b5df]
  416c95:	jg     0x416c3a
  416c97:	sbb    al,0x36
  416c99:	pop    ds
  416c9a:	repnz mov al,ds:0xf9e4632b
  416ca0:	jnp    0x416cd8
  416ca2:	cdq    
  416ca3:	add    al,0xb4
  416ca5:	stos   WORD PTR es:[edi],ax
  416ca7:	add    DWORD PTR [edx+0x38],0xffffffb3
  416cab:	fisubr WORD PTR [edx+0x45]
  416cae:	mov    eax,0x890969b3
  416cb3:	sbb    DWORD PTR [esi-0x54],esi
  416cb6:	pop    ss
  416cb7:	fisubr WORD PTR [edi-0x651bab8d]
  416cbd:	imul   edi,ecx,0xffffff8b
  416cc0:	inc    edi
  416cc1:	or     ah,ah
  416cc3:	jne    0x416cdb
  416cc5:	and    DWORD PTR [ebx+0x71],esi
  416cc8:	push   esi
  416cc9:	dec    edi
  416cca:	jo     0x416d05
  416ccc:	sahf   
  416ccd:	inc    ecx
  416cce:	push   ebp
  416ccf:	mov    eax,ds:0x38a71ade
  416cd4:	test   BYTE PTR [edx],0x27
  416cd7:	ror    DWORD PTR gs:[ebx+ecx*2],0xd
  416cdc:	sub    eax,0xcd89006f
  416ce1:	push   ebp
  416ce2:	mov    bl,0x72
  416ce4:	getsec 
  416ce6:	push   esp
  416ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ce8:	(bad)  
  416ce9:	and    eax,DWORD PTR [edx+0x6fd8bba4]
  416cef:	and    ah,BYTE PTR [ebx]
  416cf1:	cmp    BYTE PTR [esi],bl
  416cf3:	je     0x416c96
  416cf5:	dec    eax
  416cf6:	jmp    0x739f8dd4
  416cfb:	icebp  
  416cfc:	add    eax,0x9d2821a5
  416d01:	inc    ebx
  416d02:	daa    
  416d03:	popf   
  416d04:	mov    ebx,0x515ad98b
  416d09:	mov    cl,0x89
  416d0b:	push   ds
  416d0c:	pop    edi
  416d0d:	test   DWORD PTR [ecx-0x6125c1aa],ebp
  416d13:	push   esp
  416d14:	loope  0x416d77
  416d16:	stos   DWORD PTR es:[edi],eax
  416d17:	sar    cl,cl
  416d19:	pop    eax
  416d1a:	sbb    BYTE PTR [ebx+0x374e72dc],0xde
  416d21:	loop   0x416cda
  416d23:	sub    al,0xf8
  416d25:	push   0x35
  416d27:	and    cl,dl
  416d29:	mov    cs,esi
  416d2b:	push   ebx
  416d2c:	out    dx,eax
  416d2d:	xchg   ebp,eax
  416d2e:	hlt    
  416d2f:	fld    QWORD PTR [esi+0x70a74f47]
  416d35:	push   esi
  416d36:	jbe    0x416d4c
  416d38:	dec    edi
  416d39:	stos   BYTE PTR es:[edi],al
  416d3a:	iret   
  416d3b:	pop    eax
  416d3c:	xor    edi,DWORD PTR [edi+eiz*1+0x5a]
  416d40:	and    ebp,DWORD PTR [esi-0x7d]
  416d43:	ret    
  416d44:	jae    0x416d70
  416d46:	mov    ds:0x5a9ab04e,al
  416d4b:	mov    bl,0x71
  416d4d:	jge    0x416dac
  416d4f:	mov    eax,0xf6ea3da7
  416d54:	sub    dl,BYTE PTR [eax-0x3f8a190d]
  416d5a:	gs daa 
  416d5c:	out    dx,al
  416d5d:	add    BYTE PTR [ebx+0x3caed643],ch
  416d63:	iret   
  416d64:	mov    cl,0x17
  416d66:	(bad)  
  416d67:	mov    esi,DWORD PTR [ebx+0xb]
  416d6a:	retf   0x5c7f
  416d6d:	cmp    ebx,DWORD PTR [edi-0x520dc89a]
  416d73:	adc    esi,DWORD PTR [esi-0x80]
  416d76:	das    
  416d77:	pop    ebp
  416d78:	ins    DWORD PTR es:[edi],dx
  416d79:	gs scas al,BYTE PTR es:[edi]
  416d7b:	jno    0x416dbc
  416d7d:	cwde   
  416d7e:	test   eax,0x5f238107
  416d83:	sbb    al,0xda
  416d85:	aas    
  416d86:	jnp    0x416d96
  416d88:	pushf  
  416d89:	mov    dh,0x5f
  416d8b:	jae    0x416d1a
  416d8d:	cmp    bl,cl
  416d8f:	inc    ebx
  416d90:	test   bl,0x8b
  416d93:	xchg   esi,eax
  416d94:	pop    esi
  416d95:	pop    eax
  416d96:	into   
  416d97:	std    
  416d98:	mov    esp,0x11db7ccd
  416d9d:	cwde   
  416d9e:	adc    eax,0x16e444b4
  416da3:	sub    eax,0x27e2c06a
  416da8:	mov    ds:0xf1c3d1d2,al
  416dad:	pushf  
  416dae:	nop
  416daf:	and    al,0x5e
  416db1:	popa   
  416db2:	sbb    dl,BYTE PTR ds:0xdc8e0dab
  416db8:	mov    esp,0x50e7127d
  416dbd:	dec    eax
  416dbe:	ins    BYTE PTR es:[edi],dx
  416dbf:	mov    ah,0x2b
  416dc1:	fldcw  WORD PTR [edi+0x94a552a]
  416dc7:	pop    edi
  416dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dc9:	sbb    ch,bh
  416dcb:	iret   
  416dcc:	stos   DWORD PTR es:[edi],eax
  416dcd:	pop    eax
  416dce:	dec    ebx
  416dcf:	je     0x416dc8
  416dd1:	mov    al,ds:0x9151605a
  416dd6:	mov    cl,BYTE PTR [ebx-0x575867ec]
  416ddc:	push   ebp
  416ddd:	stc    
  416dde:	imul   ecx,DWORD PTR [eax+0x4d],0xffffffd8
  416de2:	sbb    al,0x6b
  416de4:	loop   0x416e43
  416de6:	pop    edx
  416de7:	or     BYTE PTR [ecx],dl
  416de9:	push   ebx
  416dea:	push   esi
  416deb:	daa    
  416dec:	xchg   ebp,eax
  416ded:	add    DWORD PTR [edx],ecx
  416def:	push   ebp
  416df0:	loop   0x416dd2
  416df2:	dec    edi
  416df3:	arpl   WORD PTR [edx-0x1fcb716],dx
  416df9:	jge    0x416e24
  416dfb:	adc    eax,0xca52c53
  416e00:	inc    edi
  416e01:	dec    esi
  416e02:	mov    dl,0x22
  416e04:	sbb    ch,dh
  416e06:	push   es
  416e07:	in     eax,0x9b
  416e09:	jle    0x416e75
  416e0b:	push   ss
  416e0c:	jbe    0x416e0f
  416e0e:	shl    DWORD PTR ds:0xb47a114b,0xb7
  416e15:	adc    al,0x26
  416e17:	retf   0xeb75
  416e1a:	adc    eax,0x4ad84bf9
  416e1f:	mov    ebx,0xd25ab8dc
  416e24:	es jge 0x416e26
  416e27:	test   eax,0x1d858def
  416e2c:	jmp    0x416dd3
  416e2e:	sar    DWORD PTR [ecx+ecx*4-0x74c6d0fc],cl
  416e35:	mov    ah,0x2a
  416e37:	mov    al,ds:0x83cc9b59
  416e3c:	mov    ch,0x1b
  416e3e:	xchg   edx,eax
  416e3f:	cmp    eax,0xa9eba613
  416e44:	xchg   edx,ebp
  416e46:	std    
  416e47:	jl     0x416ebd
  416e49:	add    eax,0x45ea0115
  416e4e:	adc    DWORD PTR ds:0x9b385bea,edi
  416e54:	ret    0x3b0a
  416e57:	ds jns 0x416e63
  416e5a:	sahf   
  416e5b:	(bad)  
  416e5c:	ins    DWORD PTR es:[edi],dx
  416e5d:	jg     0x416de0
  416e5f:	and    DWORD PTR [ebp+0x1e58a3bf],esi
  416e65:	(bad)  
  416e66:	neg    edx
  416e68:	cwde   
  416e69:	dec    eax
  416e6a:	mov    al,BYTE PTR [ebx+ecx*8+0x7babd52f]
  416e71:	sbb    ebp,ecx
  416e73:	add    ebp,DWORD PTR [eax+0x6636c1ce]
  416e79:	sbb    eax,0x4ea3a608
  416e7e:	inc    ebx
  416e7f:	popa   
  416e80:	adc    al,0x45
  416e82:	aaa    
  416e83:	(bad)  
  416e84:	sbb    al,dh
  416e86:	jmp    0xbc0b:0xd57eec38
  416e8d:	jmp    0x79b1:0x1c58f95d
  416e94:	mov    ecx,0xcdb45f5a
  416e99:	ss pusha 
  416e9b:	fsub   QWORD PTR [ebx+edx*4+0x1a]
  416e9f:	inc    ebx
  416ea0:	mov    ss,ecx
  416ea2:	pop    ecx
  416ea3:	sbb    esp,DWORD PTR [eax-0x7c]
  416ea6:	or     BYTE PTR [ecx],bh
  416ea8:	popf   
  416ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eaa:	mov    eax,0xbca45eeb
  416eaf:	sbb    ebp,DWORD PTR [esi]
  416eb1:	adc    ebx,DWORD PTR [ebx-0x22]
  416eb4:	mov    eax,ds:0x323dafa3
  416eb9:	dec    edi
  416eba:	pop    ds
  416ebb:	adc    ch,cl
  416ebd:	jge    0x416e73
  416ebf:	icebp  
  416ec0:	mov    eax,ds:0x2db5688b
  416ec5:	xchg   edi,eax
  416ec6:	shr    BYTE PTR [edx-0x127fc55d],0x3d
  416ecd:	mov    ch,0x9c
  416ecf:	push   edi
  416ed0:	mov    dh,0xb8
  416ed2:	cmp    ch,BYTE PTR [edx-0x7fe9a4dc]
  416ed8:	aad    0x48
  416eda:	dec    ebp
  416edb:	outs   dx,BYTE PTR ds:[esi]
  416edc:	int    0x2e
  416ede:	(bad)  [edx+0x476d4b7b]
  416ee4:	jbe    0x416f0a
  416ee6:	das    
  416ee7:	lahf   
  416ee8:	div    DWORD PTR [esi+0x3e8c0964]
  416eee:	shr    DWORD PTR [edx+0x77dd5ae1],cl
  416ef4:	mov    dh,0x6b
  416ef6:	jg     0x416f5b
  416ef8:	mov    edi,0xb06e0354
  416efd:	repz xor al,0x3f
  416f00:	xchg   ecx,eax
  416f01:	inc    esp
  416f02:	add    al,bl
  416f04:	fild   WORD PTR [ebx]
  416f06:	addr16 gs cdq 
  416f09:	xor    eax,0xcc58fef2
  416f0e:	aas    
  416f0f:	scas   al,BYTE PTR es:[edi]
  416f10:	in     al,0x1d
  416f12:	dec    ebx
  416f13:	jnp    0x416f4c
  416f15:	sbb    ebp,DWORD PTR [eax+0x5bd4f5d9]
  416f1b:	xor    BYTE PTR [ecx],dh
  416f1d:	stos   BYTE PTR es:[edi],al
  416f1e:	pop    eax
  416f1f:	mov    bl,0x72
  416f21:	dec    esp
  416f22:	mov    bl,0x6c
  416f24:	fdiv   st(2),st
  416f26:	sbb    eax,0x7c676d88
  416f2b:	add    al,0x6f
  416f2d:	adc    dh,BYTE PTR ds:0x5e62c2bb
  416f33:	mov    ah,0xb
  416f35:	jbe    0x416f7c
  416f37:	mov    ch,0x53
  416f39:	or     eax,0x374134d2
  416f3e:	sbb    al,BYTE PTR [esi+ecx*1]
  416f41:	dec    edx
  416f42:	xchg   BYTE PTR [edi-0x8],bh
  416f45:	repz addr16 fwait
  416f48:	inc    eax
  416f49:	bound  esp,QWORD PTR [edx]
  416f4b:	jmp    0x416f86
  416f4d:	mov    ebx,DWORD PTR [esi-0x75]
  416f50:	mov    BYTE PTR [edi+0x28ffd5ca],ch
  416f56:	daa    
  416f57:	clc    
  416f58:	test   al,0xad
  416f5a:	inc    esi
  416f5b:	sahf   
  416f5c:	cli    
  416f5d:	js     0x416f74
  416f5f:	add    esp,DWORD PTR [edi]
  416f61:	out    0x62,al
  416f63:	fild   QWORD PTR [esi]
  416f65:	push   ds
  416f66:	or     al,0xfb
  416f68:	aas    
  416f69:	add    al,0x5d
  416f6b:	add    al,0xa1
  416f6d:	pop    ecx
  416f6e:	stc    
  416f6f:	sar    DWORD PTR [ebp+0x68],0x23
  416f73:	mov    bh,0xd2
  416f75:	test   DWORD PTR [esp+ecx*4-0x9058129],edx
  416f7c:	dec    eax
  416f7d:	mov    eax,ds:0xa323a43c
  416f82:	jmp    0x416f18
  416f84:	pop    edx
  416f85:	add    eax,0x9f3b6103
  416f8a:	mov    WORD PTR [edx+0x33],es
  416f8d:	inc    edx
  416f8e:	xor    DWORD PTR [eax],0x58
  416f91:	jnp    0x416ff8
  416f93:	pop    edi
  416f94:	pop    ecx
  416f95:	dec    esi
  416f96:	test   al,0x8b
  416f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f99:	inc    ebx
  416f9a:	jb     0x417003
  416f9c:	jg     0x416fb4
  416f9e:	dec    esi
  416f9f:	fwait
  416fa0:	icebp  
  416fa1:	frstor [ebx+0x78fd7135]
  416fa7:	dec    DWORD PTR [ecx]
  416fa9:	outs   dx,DWORD PTR ds:[esi]
  416faa:	or     eax,0xa69440e5
  416faf:	push   ds
  416fb0:	fwait
  416fb1:	mov    DWORD PTR [ebx+0xa1ed157],0xef728a57
  416fbb:	stc    
  416fbc:	pushf  
  416fbd:	xchg   esp,eax
  416fbe:	mov    cs:0x11b2a4eb,eax
  416fc4:	sub    DWORD PTR [esi-0x7d],0x1656bd22
  416fcb:	xchg   ebp,eax
  416fcc:	inc    eax
  416fcd:	outs   dx,BYTE PTR ds:[esi]
  416fce:	(bad)  
  416fcf:	fdiv   QWORD PTR [eax-0x29]
  416fd2:	sbb    al,0xb2
  416fd4:	cmc    
  416fd5:	(bad)  
  416fd6:	sbb    al,0x2
  416fd8:	or     BYTE PTR [ecx+0x18bf5bb4],dh
  416fde:	pop    ebp
  416fdf:	out    dx,eax
  416fe0:	fdiv   QWORD PTR [eax]
  416fe2:	push   ecx
  416fe3:	addr16 cli 
  416fe5:	sti    
  416fe6:	lods   al,BYTE PTR ds:[esi]
  416fe7:	stos   BYTE PTR es:[edi],al
  416fe8:	gs nop
  416fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fec:	cmp    eax,0xb8826f2a
  416ff1:	jb     0x417029
  416ff3:	or     eax,0x6917778b
  416ff9:	add    ebx,DWORD PTR [ecx]
  416ffb:	add    edx,DWORD PTR [eax+0x74d8fd0d]
  417001:	and    DWORD PTR [ecx+0x33c73613],edx
  417007:	mov    edi,0xa3a42ee1
  41700c:	mov    ebx,0x4522f27d
  417011:	cli    
  417012:	adc    eax,0xa3f093bc
  417017:	pop    esp
  417018:	push   ds
  417019:	fstp   TBYTE PTR [esi-0x498ccdd9]
  41701f:	das    
  417020:	xchg   edi,eax
  417021:	hlt    
  417022:	pop    ecx
  417023:	sbb    al,BYTE PTR [ebp+0x30598ed6]
  417029:	out    0xd0,eax
  41702b:	xchg   ebx,eax
  41702c:	shl    DWORD PTR [ecx-0x33],0xcb
  417030:	xchg   esi,eax
  417031:	mov    gs,WORD PTR [edx+0x5bb277d3]
  417037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417038:	dec    ebp
  417039:	mov    edi,0xcf7b0512
  41703e:	les    edi,FWORD PTR [eax-0x40]
  417041:	inc    ebx
  417042:	push   edi
  417043:	lods   al,BYTE PTR ds:[esi]
  417044:	jb     0x4170ac
  417046:	sti    
  417047:	inc    ecx
  417048:	call   0x7730:0x172b38ec
  41704f:	sub    al,0x47
  417051:	xchg   edx,eax
  417052:	add    esp,edi
  417054:	jnp    0x416fdc
  417056:	pop    ebx
  417057:	in     eax,dx
  417058:	(bad)  
  417059:	iret   
  41705a:	(bad)
  41705d:	sti    
  41705e:	inc    edx
  41705f:	xchg   esp,eax
  417060:	mov    dl,0x4b
  417062:	adc    eax,0xd23f08f
  417067:	mov    eax,ds:0xd48d72e6
  41706c:	jbe    0x4170a1
  41706e:	mov    BYTE PTR [edi-0x7975c8dc],dl
  417074:	dec    esp
  417075:	fxch   st(7)
  417077:	jnp    0x41702b
  417079:	push   ds
  41707a:	sbb    BYTE PTR [ebp+0x151fa4de],ch
  417080:	out    0xff,al
  417082:	push   edx
  417083:	call   0xabe43e89
  417088:	or     eax,0x8780a78d
  41708d:	pop    edi
  41708e:	xor    DWORD PTR [ebx],ebp
  417090:	dec    ecx
  417091:	sbb    dl,ch
  417093:	mov    edi,DWORD PTR [edi-0x16fa52ed]
  417099:	mov    al,ds:0xe4f750b
  41709e:	xchg   esp,eax
  41709f:	push   ebx
  4170a0:	retf   
  4170a1:	jp     0x4170ec
  4170a3:	or     al,0x69
  4170a5:	mov    edi,0x262a66a3
  4170aa:	sbb    bl,BYTE PTR [edx]
  4170ac:	and    DWORD PTR [edi+0x10],esp
  4170af:	ja     0x417104
  4170b1:	jmp    0x41705a
  4170b3:	int    0x11
  4170b5:	js     0x41709e
  4170b7:	cld    
  4170b8:	hlt    
  4170b9:	xchg   BYTE PTR [ecx+0x51f87901],dh
  4170bf:	mov    bl,0x61
  4170c1:	loope  0x4170e6
  4170c3:	ins    DWORD PTR es:[edi],dx
  4170c4:	mov    al,0xd0
  4170c6:	pop    es
  4170c7:	xor    ebx,DWORD PTR [ebx]
  4170c9:	stos   DWORD PTR es:[edi],eax
  4170ca:	pop    edi
  4170cb:	mov    WORD PTR [ecx+eax*1-0x2b],es
  4170cf:	mov    eax,0x6ab2571e
  4170d4:	sub    dh,al
  4170d6:	pushf  
  4170d7:	ds retf 0xc2a
  4170db:	(bad)  
  4170dc:	sub    DWORD PTR [esi-0x1ad2b099],esi
  4170e2:	xor    esp,DWORD PTR [esi-0xfb6a6b3]
  4170e8:	mov    eax,DWORD PTR [eax]
  4170ea:	jnp    0x41708f
  4170ec:	push   eax
  4170ed:	scas   al,BYTE PTR es:[edi]
  4170ee:	xchg   edx,eax
  4170ef:	sub    BYTE PTR ds:0xd59b705d,dh
  4170f5:	mov    DWORD PTR [ebp-0x72],ebp
  4170f8:	xchg   ebp,eax
  4170f9:	icebp  
  4170fa:	sbb    eax,0x9d1a99fb
  4170ff:	mov    eax,ds:0x2bbf7d2c
  417104:	sub    dh,BYTE PTR [ecx-0x47536e92]
  41710a:	stos   BYTE PTR es:[edi],al
  41710b:	add    edi,DWORD PTR [edi]
  41710d:	sti    
  41710e:	int    0x30
  417110:	test   DWORD PTR [edi],ecx
  417112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417113:	mov    ebx,0x7a996572
  417118:	popf   
  417119:	scas   eax,DWORD PTR es:[edi]
  41711a:	iret   
  41711b:	lds    ebx,FWORD PTR [edx+0x63]
  41711e:	cli    
  41711f:	ficomp DWORD PTR [edi+0x53]
  417122:	mov    BYTE PTR [esi-0x59b32a7f],ch
  417128:	add    al,0xd4
  41712a:	add    DWORD PTR [ebx+0x29],ebx
  41712d:	jmp    0x40fc7cd9
  417132:	xchg   ebp,eax
  417133:	or     al,0xe2
  417135:	call   0x5bfd90f0
  41713a:	mov    DWORD PTR [ecx+eiz*8-0x56],eax
  41713e:	fadd   DWORD PTR [ecx]
  417140:	inc    ebx
  417141:	sub    al,0xa8
  417143:	mov    esp,0xb5f04f32
  417148:	xchg   edx,eax
  417149:	daa    
  41714a:	(bad)  
  41714b:	pop    edx
  41714c:	shrd   DWORD PTR [edi],ecx,0x65
  417150:	or     esi,DWORD PTR [ebx-0x7e220c0d]
  417156:	sahf   
  417157:	rcr    BYTE PTR [eax-0x97fb264],0x3a
  41715e:	pop    ecx
  41715f:	imul   ebx,DWORD PTR [ebp-0x13],0xffffff8e
  417163:	mov    ds:0x579daae8,eax
  417168:	pop    edi
  417169:	aam    0xf
  41716b:	div    BYTE PTR [edx+eiz*1]
  41716e:	daa    
  41716f:	cmp    DWORD PTR ds:0xddc5dfe2,ebp
  417175:	dec    esi
  417176:	push   0x41
  417178:	push   esi
  417179:	leave  
  41717a:	add    eax,edi
  41717c:	jns    0x4171cf
  41717e:	pcmpgtw mm6,mm5
  417181:	dec    esp
  417182:	jg     0x417181
  417184:	loope  0x4171e4
  417186:	adc    DWORD PTR ds:0x1ed41fed,0x3f067554
  417190:	rcr    BYTE PTR [esi+0x3e],cl
  417193:	mov    eax,ds:0x66f6e557
  417198:	pop    esi
  417199:	fsub   DWORD PTR [ebp-0x533c540d]
  41719f:	fs mov esi,0x25f4b26b
  4171a5:	fist   WORD PTR [ebx+0x28]
  4171a8:	cs jp  0x417156
  4171ab:	xor    DWORD PTR [ebp+eax*2-0x2ddac189],edx
  4171b2:	sahf   
  4171b3:	cld    
  4171b4:	cmp    DWORD PTR [edx+0x5527cfac],edx
  4171ba:	pop    ds
  4171bb:	adc    eax,DWORD PTR [edx-0x42]
  4171be:	loop   0x4171fe
  4171c0:	ds push ebp
  4171c2:	in     eax,0x35
  4171c4:	or     eax,0x7067f0bb
  4171c9:	cmc    
  4171ca:	outs   dx,DWORD PTR ds:[esi]
  4171cb:	jmp    0x41722b
  4171cd:	sbb    al,0x63
  4171cf:	dec    eax
  4171d0:	push   ss
  4171d1:	in     al,0x91
  4171d3:	push   ecx
  4171d4:	rol    DWORD PTR [ebx+0x199d0ebd],0xdb
  4171db:	idiv   DWORD PTR [eax+0x47]
  4171de:	rcr    DWORD PTR [edi+0x6bf813f3],0xec
  4171e5:	dec    eax
  4171e6:	out    dx,eax
  4171e7:	and    esi,0xffffff87
  4171ea:	in     al,0x8c
  4171ec:	sub    esi,0x4f
  4171ef:	jp     0x41724f
  4171f1:	pop    ds
  4171f2:	adc    DWORD PTR [ebp-0x74],ecx
  4171f5:	fmulp  st(3),st
  4171f7:	out    0x1a,al
  4171f9:	sub    BYTE PTR [ecx+0x18aff567],0x22
  417200:	sbb    al,0x1f
  417202:	or     cl,BYTE PTR [esi-0x39]
  417205:	adc    al,0x94
  417207:	xchg   edx,eax
  417208:	pop    ebx
  417209:	jmp    0xd57b08a6
  41720e:	add    al,0x68
  417210:	or     BYTE PTR [edi+edi*4-0x53],ch
  417214:	lods   al,BYTE PTR ds:[esi]
  417215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417216:	mov    eax,DWORD PTR [esi+0x6f]
  417219:	aad    0xb6
  41721b:	inc    eax
  41721c:	outs   dx,BYTE PTR ds:[esi]
  41721d:	stos   DWORD PTR es:[edi],eax
  41721e:	cmp    eax,ebx
  417220:	push   0xa6e42a8b
  417225:	cwde   
  417226:	aaa    
  417227:	stc    
  417228:	dec    ebx
  417229:	push   eax
  41722a:	adc    DWORD PTR [edx-0x3e],ecx
  41722d:	pop    eax
  41722e:	sbb    DWORD PTR [ebx],esi
  417230:	push   0x94f3cc07
  417235:	neg    BYTE PTR [ebx+0x40977ed0]
  41723b:	repnz jmp 0xcc3f:0xcf93f4fc
  417243:	adc    eax,esp
  417245:	aad    0x7c
  417247:	into   
  417248:	rcl    BYTE PTR [esi+0x6742a49a],1
  41724e:	inc    esp
  41724f:	mov    dl,0x7f
  417251:	inc    ecx
  417252:	mov    eax,0xa220eff4
  417257:	inc    eax
  417258:	inc    edi
  417259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725a:	jno    0x4171ea
  41725c:	ficomp WORD PTR [edx+0x7f]
  41725f:	out    dx,eax
  417260:	bound  edi,QWORD PTR [edi-0x53b9871d]
  417266:	push   eax
  417267:	mov    esp,0xde714beb
  41726c:	push   cs
  41726d:	test   DWORD PTR [edi-0x71],0x600bb89a
  417274:	xchg   ebp,eax
  417275:	jmp    0xc8449337
  41727a:	xchg   ebp,eax
  41727b:	cmp    eax,DWORD PTR [ebx-0x60]
  41727e:	or     bh,dh
  417280:	dec    ebp
  417281:	jbe    0x4172e8
  417283:	cld    
  417284:	xor    BYTE PTR [ecx*2+0x2c6cbf0a],ch
  41728b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41728c:	dec    edi
  41728d:	(bad)  
  41728e:	aad    0x46
  417290:	aad    0x94
  417292:	push   ebx
  417293:	lahf   
  417294:	lahf   
  417295:	sbb    al,0xa1
  417297:	cmp    al,0x90
  417299:	icebp  
  41729a:	fwait
  41729b:	xor    eax,0xd050a11b
  4172a0:	ins    DWORD PTR es:[edi],dx
  4172a1:	out    0xbb,eax
  4172a3:	cdq    
  4172a4:	sbb    al,0x7c
  4172a6:	(bad)  
  4172a7:	adc    DWORD PTR [ecx+ebx*8],esi
  4172aa:	pop    esi
  4172ab:	mov    eax,?
  4172ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ae:	loop   0x41725a
  4172b0:	cmp    al,0xb7
  4172b2:	int    0x1a
  4172b4:	pushf  
  4172b5:	leave  
  4172b6:	push   ds
  4172b7:	mov    bh,0x5e
  4172b9:	fst    DWORD PTR ds:0xb8d22a41
  4172bf:	call   0x8aea54b0
  4172c4:	and    ch,BYTE PTR [edx+0x678bb3b9]
  4172ca:	push   eax
  4172cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172cc:	and    bh,BYTE PTR [edx]
  4172ce:	repnz lahf 
  4172d0:	or     eax,DWORD PTR [esi+0x34]
  4172d3:	cmp    BYTE PTR [edx],cl
  4172d5:	xchg   esp,eax
  4172d6:	adc    eax,edx
  4172d8:	pushf  
  4172d9:	xchg   ebp,eax
  4172da:	(bad)  
  4172db:	sub    ah,BYTE PTR [esi]
  4172dd:	xor    ebx,0xd91106d4
  4172e3:	mov    WORD PTR [ebx],es
  4172e5:	or     edi,DWORD PTR [ecx-0x37eeda46]
  4172eb:	ret    
  4172ec:	clc    
  4172ed:	(bad)  
  4172ee:	fucomp st(5)
  4172f0:	cmp    eax,ecx
  4172f2:	or     DWORD PTR es:[ecx+0x6e],0x6758cd69
  4172fa:	xchg   esp,eax
  4172fb:	int    0xf4
  4172fd:	sub    DWORD PTR [edi+esi*8],edx
  417300:	fst    QWORD PTR [ebx+0x262b6812]
  417306:	les    esi,FWORD PTR [edx+eax*1]
  417309:	leave  
  41730a:	or     ebp,DWORD PTR [edx+0x1b]
  41730d:	xchg   esi,eax
  41730e:	popa   
  41730f:	dec    eax
  417310:	xchg   ebx,eax
  417311:	stos   BYTE PTR es:[edi],al
  417312:	jmp    0x417342
  417314:	cmp    ecx,DWORD PTR [ebp+0x52]
  417317:	in     eax,dx
  417318:	fidiv  DWORD PTR [esi-0x6adfe9b5]
  41731e:	sbb    edx,ecx
  417320:	pop    ebx
  417321:	lods   eax,DWORD PTR ds:[esi]
  417322:	dec    esp
  417323:	out    dx,eax
  417324:	inc    edx
  417325:	jno    0x417398
  417327:	cs or  DWORD PTR cs:[ebx+0x4895bbb2],ecx
  41732f:	sub    dl,ah
  417331:	jb     0x4172f7
  417333:	enter  0x1f3d,0x26
  417337:	cmc    
  417338:	inc    DWORD PTR [edi]
  41733a:	mov    ah,0xaf
  41733c:	addr16 clc 
  41733e:	sub    DWORD PTR [ecx-0x5e0bf4ab],eax
  417344:	lock and esp,ebx
  417347:	xchg   edi,eax
  417348:	mov    ebp,DWORD PTR [esi]
  41734a:	push   0xffffffff
  41734c:	mov    ebx,0x3ca5c00
  417351:	or     esp,edx
  417353:	push   esi
  417354:	(bad)  
  417355:	fimul  DWORD PTR [eax-0x6af67ef9]
  41735b:	loop   0x4173a8
  41735d:	mov    ch,0x47
  41735f:	sub    DWORD PTR [edx],eax
  417361:	push   cs
  417362:	mov    dl,0xa2
  417364:	adc    ah,bh
  417366:	dec    esi
  417367:	xchg   DWORD PTR [ecx],ecx
  417369:	sahf   
  41736a:	aam    0x80
  41736c:	mov    edx,0xcfa6b22
  417371:	xor    eax,0x3afee137
  417376:	inc    edi
  417377:	daa    
  417378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417379:	jle    0x417324
  41737b:	ds ins BYTE PTR es:[edi],dx
  41737d:	cmp    ebp,edx
  41737f:	(bad)  [ecx-0x20]
  417382:	in     eax,dx
  417383:	imul   ebx,DWORD PTR ds:0x7956659e,0x39f0517d
  41738d:	adc    bh,BYTE PTR [ebp-0x5821dd18]
  417393:	xor    edx,DWORD PTR [bp+si-0x10]
  417397:	mov    dl,0x46
  417399:	pusha  
  41739a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41739b:	push   esp
  41739c:	(bad)  
  41739d:	xor    edi,esp
  41739f:	xchg   ebx,eax
  4173a0:	sub    ah,BYTE PTR [ecx]
  4173a2:	add    DWORD PTR [esi+edi*8-0x49],ebp
  4173a6:	das    
  4173a7:	fcmove st,st(1)
  4173a9:	add    eax,0x99d57bf8
  4173ae:	into   
  4173af:	jmp    0x417332
  4173b1:	loope  0x417335
  4173b3:	lea    ecx,[esi-0x1c]
  4173b6:	xor    DWORD PTR [ebp+eax*2-0x337c9377],ecx
  4173bd:	test   eax,0x8e92c86f
  4173c2:	test   al,al
  4173c4:	inc    ebp
  4173c5:	int    0xaf
  4173c7:	or     bl,BYTE PTR [eax]
  4173c9:	or     al,0xaa
  4173cb:	inc    esi
  4173cc:	(bad)
  4173cf:	adc    bh,0x53
  4173d2:	pop    eax
  4173d3:	xor    ah,al
  4173d5:	ds (bad) 
  4173d7:	mov    eax,ds:0x880f7565
  4173dc:	push   eax
  4173dd:	inc    ebx
  4173de:	retf   0xf592
  4173e1:	pop    ecx
  4173e2:	cmp    DWORD PTR ds:0xd166b885,0x7f
  4173e9:	and    al,0x87
  4173eb:	cld    
  4173ec:	cmp    ah,dh
  4173ee:	ret    0x50de
  4173f1:	dec    edi
  4173f2:	imul   eax,DWORD PTR [ecx+0x5e],0x3a
  4173f6:	jmp    0xce04a13a
  4173fb:	cs add dh,bl
  4173fe:	fsubr  DWORD PTR [edx-0x1ce1f6e4]
  417404:	retf   0xb823
  417407:	fwait
  417408:	jnp    0x4173ac
  41740a:	sahf   
  41740b:	enter  0x8c72,0xae
  41740f:	bt     eax,esp
  417412:	retf   
  417413:	inc    edi
  417414:	arpl   WORD PTR [eax],cx
  417416:	je     0x41739c
  417418:	mov    ds:0x8bd835b4,eax
  41741d:	dec    esi
  41741e:	scas   al,BYTE PTR es:[edi]
  41741f:	mov    bl,0x6
  417421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417422:	rcr    DWORD PTR [ecx-0x5e],cl
  417425:	mov    ds:0xf860c506,eax
  41742a:	in     eax,0x62
  41742c:	ins    BYTE PTR es:[edi],dx
  41742d:	sbb    cl,ah
  41742f:	push   esi
  417430:	das    
  417431:	(bad)  
  417433:	dec    eax
  417434:	ret    
  417435:	lock in eax,0x3f
  417438:	aam    0xec
  41743a:	mov    WORD PTR [ebp+ecx*8-0x553e55f4],es
  417441:	imul   ebx,DWORD PTR [eax-0x499b0ef3],0xceb0876a
  41744b:	fdivr  QWORD PTR [ebx-0x70]
  41744e:	or     cl,BYTE PTR [edx]
  417450:	pop    ebx
  417451:	nop
  417452:	adc    DWORD PTR [ebx-0x30],ebp
  417455:	into   
  417456:	aad    0x5c
  417458:	push   ss
  417459:	addr16 pop edx
  41745b:	fisub  DWORD PTR ds:0xdd706f13
  417461:	and    BYTE PTR [eax+ebx*8-0x478afb66],bl
  417468:	test   DWORD PTR cs:[ebx-0x2d054597],edi
  41746f:	jb     0x417407
  417471:	or     esp,DWORD PTR [ecx+0x3a]
  417474:	xor    eax,0xe18505a3
  417479:	fwait
  41747a:	test   al,0xc
  41747c:	cmp    eax,DWORD PTR ds:0x4222f9d2
  417482:	pushf  
  417483:	jne    0x417468
  417485:	xor    DWORD PTR [edi],edx
  417487:	nop
  417488:	fdiv   DWORD PTR [esi*8+0x23dd5750]
  41748f:	sub    al,0x4f
  417491:	scas   eax,DWORD PTR es:[edi]
  417492:	push   cs
  417493:	pop    ecx
  417494:	sub    dl,dl
  417496:	add    eax,0x7bb89e1b
  41749b:	mov    edi,0xa9c87d3b
  4174a0:	xchg   ecx,eax
  4174a1:	push   edx
  4174a2:	cmp    eax,DWORD PTR [eax]
  4174a4:	ror    ebx,1
  4174a6:	or     al,0x58
  4174a8:	arpl   si,dx
  4174aa:	dec    esp
  4174ab:	test   eax,0x866a9118
  4174b0:	aad    0x46
  4174b2:	(bad)  
  4174b3:	or     bl,BYTE PTR [edi]
  4174b5:	xchg   edx,eax
  4174b6:	xor    eax,0x5b72822b
  4174bb:	daa    
  4174bc:	daa    
  4174bd:	jbe    0x4174ab
  4174bf:	std    
  4174c0:	adc    eax,0x512eb93b
  4174c5:	pusha  
  4174c6:	iret   
  4174c7:	push   es
  4174c8:	push   0x49a89815
  4174cd:	std    
  4174ce:	cdq    
  4174cf:	dec    ebx
  4174d0:	dec    ebp
  4174d1:	int    0x77
  4174d3:	mov    ecx,0x3e2aec7d
  4174d8:	jns    0x417466
  4174da:	js     0x4174e3
  4174dc:	xchg   edi,eax
  4174dd:	sbb    al,0x8f
  4174df:	push   ebx
  4174e0:	mov    eax,0xa304e8ed
  4174e5:	out    dx,eax
  4174e6:	hlt    
  4174e7:	xor    BYTE PTR [ebx+0x41],ch
  4174ea:	jmp    0xcfe1a795
  4174ef:	in     eax,0x86
  4174f1:	pusha  
  4174f2:	jl     0x417503
  4174f4:	mov    ds:0x1eea5fae,eax
  4174f9:	mov    al,ds:0xcaff380
  4174fe:	sbb    DWORD PTR [esp+edx*8],esp
  417501:	push   edx
  417502:	fdivr  st,st(4)
  417504:	mov    ch,0x85
  417506:	mov    ds:0xdd028888,al
  41750b:	push   0x6205bf59
  417510:	fcomi  st,st(2)
  417512:	mov    BYTE PTR [esp+eax*2+0x4a],dl
  417516:	inc    edi
  417517:	mov    eax,0x1033c08
  41751c:	mov    ds:0x9e142218,al
  417521:	sbb    dl,cl
  417523:	mov    ebp,0x9fa9732b
  417529:	sbb    dl,BYTE PTR [ebp+edi*8+0x640c44e4]
  417530:	and    dl,BYTE PTR [eax-0xb281d]
  417536:	pop    ebx
  417537:	jecxz  0x417569
  417539:	xchg   DWORD PTR [ecx+0x41],eax
  41753c:	xor    eax,0xb14d27ae
  417541:	inc    esp
  417542:	sub    DWORD PTR [ebx-0x43922174],edx
  417548:	pop    ebx
  417549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41754a:	pusha  
  41754b:	and    al,0x42
  41754d:	jnp    0x4175a1
  41754f:	popa   
  417550:	mov    ebp,0x2987cbb8
  417555:	lea    ecx,[edx-0x4bb577eb]
  41755b:	xor    ah,BYTE PTR [edi]
  41755d:	aad    0x50
  41755f:	and    eax,0x7ddc71c8
  417564:	imul   BYTE PTR [ebp+0x65]
  417567:	xchg   edi,eax
  417568:	les    edx,FWORD PTR [eax+0x26]
  41756b:	out    dx,eax
  41756c:	pop    eax
  41756d:	mov    esi,0x840fc450
  417572:	sahf   
  417573:	ds xor cl,cl
  417576:	pushf  
  417577:	in     al,0x5f
  417579:	inc    ecx
  41757a:	dec    ebp
  41757b:	pop    edx
  41757c:	jno    0x41758c
  41757e:	mov    eax,ds:0xa1df5eb6
  417583:	sub    al,0xec
  417585:	hlt    
  417586:	je     0x417588
  417588:	or     al,0xbf
  41758a:	out    0x91,al
  41758c:	jl     0x417588
  41758e:	enter  0x6100,0xda
  417592:	cmp    BYTE PTR [esi],0x4f
  417595:	aas    
  417596:	ins    DWORD PTR es:[edi],dx
  417597:	inc    edx
  417598:	jp     0x41752f
  41759a:	outs   dx,BYTE PTR ds:[esi]
  41759b:	xor    al,al
  41759d:	pusha  
  41759e:	(bad)  
  41759f:	jle    0x417595
  4175a1:	imul   ebp,edx,0xffffffba
  4175a4:	add    dh,bh
  4175a6:	mov    ecx,0xd5b6ef07
  4175ab:	mov    ebx,0x2b3bd38b
  4175b0:	mov    ah,0x43
  4175b2:	fs pop ebp
  4175b4:	(bad)  
  4175b7:	mov    DWORD PTR [esi+0x5b8e964],ecx
  4175bd:	mov    cl,0xed
  4175bf:	adc    eax,0xc015e3ab
  4175c4:	cmp    dh,BYTE PTR [esi+0x2e2375b]
  4175ca:	inc    ecx
  4175cb:	lock cmc 
  4175cd:	iret   
  4175ce:	stos   DWORD PTR es:[edi],eax
  4175cf:	push   edi
  4175d0:	push   ecx
  4175d1:	mov    esp,0x2ff83d63
  4175d6:	push   es
  4175d7:	pop    esi
  4175d8:	sbb    ecx,edx
  4175da:	(bad)  
  4175db:	pusha  
  4175dc:	jmp    DWORD PTR ds:0x7ce88957
  4175e2:	mov    ch,0x7
  4175e4:	popa   
  4175e5:	fisttp DWORD PTR [esi]
  4175e7:	inc    esp
  4175e8:	cmc    
  4175e9:	push   0x69
  4175eb:	xor    ecx,eax
  4175ed:	mov    edx,0x685ade82
  4175f2:	aad    0xab
  4175f4:	xor    dh,BYTE PTR [esi-0x7727d8bd]
  4175fa:	adc    al,0xc1
  4175fc:	xor    BYTE PTR ds:0x53720524,0x0
  417603:	retf   0x6767
  417606:	xor    dh,dh
  417608:	mov    edi,0xc2aa6de7
  41760d:	or     al,0xa0
  41760f:	(bad)  
  417611:	pusha  
  417612:	imul   esi,DWORD PTR [ecx-0x37],0x49
  417616:	in     eax,dx
  417617:	in     eax,0xe6
  417619:	push   edx
  41761a:	das    
  41761b:	dec    eax
  41761c:	mov    WORD PTR [edx+0x35],?
  41761f:	inc    edi
  417620:	adc    dh,BYTE PTR [ecx+eax*4+0x779ad573]
  417627:	xchg   ecx,eax
  417628:	xor    DWORD PTR [ecx+0x2f4df92b],esi
  41762e:	mov    al,ds:0x50030414
  417633:	das    
  417634:	in     eax,dx
  417635:	push   ss
  417636:	aaa    
  417637:	pop    ecx
  417638:	retf   
  417639:	out    0xa6,eax
  41763b:	push   esp
  41763c:	popa   
  41763d:	mov    bh,BYTE PTR [edx]
  41763f:	add    al,0xc3
  417641:	gs addr16 test al,0x21
  417645:	cld    
  417646:	mov    edi,0x2c61c0b4
  41764b:	popf   
  41764c:	dec    edx
  41764d:	(bad)  
  41764e:	out    0xe7,eax
  417650:	sub    eax,0x3515c8c9
  417655:	call   DWORD PTR [edi]
  417657:	jmp    0x46ce711f
  41765c:	mov    WORD PTR [ecx],ds
  41765e:	scas   al,BYTE PTR es:[edi]
  41765f:	ins    BYTE PTR es:[edi],dx
  417660:	cwde   
  417661:	xchg   ebx,eax
  417662:	or     DWORD PTR [edi+0x3e],ecx
  417665:	aas    
  417666:	mov    dh,0x4c
  417668:	fwait
  417669:	add    eax,0x83aa6f71
  41766e:	xchg   esp,eax
  41766f:	push   eax
  417670:	jno    0x417602
  417672:	scas   eax,DWORD PTR es:[edi]
  417673:	data16 mov ch,0xd1
  417676:	pop    ecx
  417677:	sub    al,0x54
  417679:	and    al,0xfd
  41767b:	push   0xc
  41767d:	mov    ch,0x47
  41767f:	dec    edi
  417680:	mov    esp,0xe3310f6a
  417685:	mov    ecx,0xe7123e30
  41768a:	jle    0x417632
  41768c:	adc    al,0xc6
  41768e:	jecxz  0x417639
  417690:	jb     0x417664
  417692:	dec    esp
  417693:	mov    ch,0x68
  417695:	test   al,0xb1
  417697:	das    
  417698:	push   ds
  417699:	cmp    ah,BYTE PTR [edx-0xa]
  41769c:	dec    edx
  41769d:	mov    esp,0xbc49507d
  4176a2:	out    dx,al
  4176a3:	pop    esi
  4176a4:	jmp    0x6b92:0x227d7b70
  4176ab:	or     ch,BYTE PTR es:[eax-0x2fef4125]
  4176b2:	pop    ds
  4176b3:	cwde   
  4176b4:	or     ah,BYTE PTR ds:0xb7fcee78
  4176ba:	xor    ah,dl
  4176bc:	or     eax,0x9c83e113
  4176c1:	out    0xbc,al
  4176c3:	fldl2t 
  4176c5:	push   esi
  4176c6:	stc    
  4176c7:	out    dx,eax
  4176c8:	sar    DWORD PTR [ebp+0x64],1
  4176cb:	xor    edi,DWORD PTR [ebx-0x5815a4f9]
  4176d1:	and    BYTE PTR [eax-0x56179a9c],ah
  4176d7:	dec    ebp
  4176d8:	(bad)  
  4176d9:	loope  0x4176e1
  4176db:	call   0x2156:0x356aa244
  4176e2:	pushf  
  4176e3:	fwait
  4176e4:	in     eax,dx
  4176e5:	retf   0xc305
  4176e8:	daa    
  4176e9:	mov    ebp,0xd5e68fac
  4176ee:	retf   
  4176ef:	arpl   WORD PTR [esi],sp
  4176f1:	dec    esi
  4176f2:	fist   WORD PTR [esi-0xe]
  4176f5:	mov    al,ds:0x5fb7ca83
  4176fa:	xor    eax,ebx
  4176fc:	std    
  4176fd:	psubsb mm4,QWORD PTR [edi+ebx*4]
  417701:	pusha  
  417702:	xchg   esi,eax
  417703:	xor    al,0xcf
  417705:	or     al,0x42
  417707:	int    0xd4
  417709:	mov    esp,0xf244757b
  41770e:	xlat   BYTE PTR ds:[ebx]
  41770f:	rcl    BYTE PTR [ecx+ecx*1+0x66],cl
  417713:	test   dl,dl
  417715:	adc    dh,BYTE PTR [edi]
  417717:	cmp    al,0x24
  417719:	dec    eax
  41771a:	xchg   ebp,eax
  41771b:	and    bh,bl
  41771d:	xchg   BYTE PTR [esi+edi*4+0x66],bh
  417721:	loop   0x41773c
  417723:	mov    al,0xfa
  417725:	push   esi
  417726:	pushf  
  417727:	sar    DWORD PTR [esi+0xb],0x88
  41772b:	mov    WORD PTR [ebx+edx*4+0x6c],?
  41772f:	or     BYTE PTR es:[bp+si+0x2a82],bh
  417735:	es popa 
  417737:	cmp    eax,0xb03e8863
  41773c:	or     al,0x31
  41773e:	cdq    
  41773f:	sbb    BYTE PTR [esi+0x562f8438],bh
  417745:	cmp    eax,DWORD PTR [eax+0x774fa535]
  41774b:	ins    DWORD PTR es:[edi],dx
  41774c:	loopne 0x417795
  41774e:	xchg   esp,eax
  41774f:	jns    0x417706
  417751:	test   al,0x25
  417753:	dec    edi
  417754:	iret   
  417755:	lea    eax,[eax+0xf]
  417758:	jle    0x417730
  41775a:	sbb    al,0x8b
  41775c:	ja     0x417787
  41775e:	mov    esp,0xba53e7ff
  417763:	push   esi
  417764:	cmp    BYTE PTR [esi],dh
  417766:	mov    esp,gs
  417768:	xor    DWORD PTR [edi+0x64],eax
  41776b:	stos   BYTE PTR es:[edi],al
  41776c:	ins    BYTE PTR es:[edi],dx
  41776d:	or     dh,bh
  41776f:	dec    edx
  417770:	leave  
  417771:	xlat   BYTE PTR ds:[ebx]
  417772:	or     ch,BYTE PTR [ebx]
  417774:	pop    es
  417775:	ss pop ds
  417777:	imul   BYTE PTR [ebp-0x2d]
  41777a:	dec    esp
  41777b:	sub    ecx,DWORD PTR [esi-0x73d66cef]
  417781:	rcr    DWORD PTR [edx-0x74],0x91
  417785:	jge    0x41776d
  417787:	cli    
  417788:	cmp    bh,al
  41778a:	cmp    eax,0xcec9aa41
  41778f:	mov    ecx,0x83b75ee9
  417794:	pxor   mm7,QWORD PTR [ecx+0x283cebb5]
  41779b:	(bad)  
  41779c:	pop    ds
  41779d:	ins    WORD PTR es:[edi],dx
  41779f:	lahf   
  4177a0:	pavgb  mm7,mm2
  4177a3:	add    BYTE PTR [ebp+0x54],0x26
  4177a7:	inc    edi
  4177a8:	dec    ebp
  4177a9:	mov    ss,WORD PTR [esi]
  4177ab:	add    eax,0xef198c3
  4177b0:	mov    ch,0xfa
  4177b2:	add    al,0xc9
  4177b4:	jmp    0xf3c98ec9
  4177b9:	es and eax,0x6cdd10b9
  4177bf:	test   BYTE PTR [ebp-0x63],dl
  4177c2:	in     eax,dx
  4177c3:	lea    ebx,[ecx+0x4d]
  4177c6:	pushf  
  4177c7:	adc    ch,al
  4177c9:	fst    DWORD PTR ds:0xc7e64171
  4177cf:	(bad)
  4177d2:	imul   edi,DWORD PTR [ecx+0x2c],0x2fbadff4
  4177d9:	ja     0x417775
  4177db:	mov    dl,0xc9
  4177dd:	fldenv [edx-0x66beaae7]
  4177e3:	fwait
  4177e4:	popa   
  4177e5:	add    DWORD PTR [ebp-0x56],eax
  4177e8:	leave  
  4177e9:	fild   QWORD PTR [ebx-0x252fa7c6]
  4177ef:	pop    ss
  4177f0:	cwde   
  4177f1:	popf   
  4177f2:	xor    eax,0x23cad787
  4177f7:	and    DWORD PTR [edi+0x4b],eax
  4177fa:	pop    esp
  4177fb:	(bad)  
  4177fc:	fistp  QWORD PTR [edi-0x46]
  4177ff:	aam    0x21
  417801:	(bad)  
  417803:	rol    DWORD PTR [ecx],cl
  417805:	cmp    al,0x81
  417807:	sbb    esp,edx
  417809:	lock push ecx
  41780b:	retf   0xe5e3
  41780e:	mov    bl,BYTE PTR [ebx-0x167cbd13]
  417814:	das    
  417815:	mov    esi,0x54bc2c5b
  41781a:	cdq    
  41781b:	sub    bl,BYTE PTR [ebx-0x1298c398]
  417821:	jle    0x417844
  417823:	dec    edx
  417824:	jns    0x417834
  417826:	stos   BYTE PTR es:[edi],al
  417827:	mov    al,0xc7
  417829:	lahf   
  41782a:	or     BYTE PTR [edx-0x16],0xeb
  41782e:	inc    ecx
  41782f:	clc    
  417830:	addr16 mov al,ds:0x5b8a
  417834:	jb     0x417866
  417836:	xchg   esp,eax
  417837:	adc    ch,BYTE PTR [ebp+0x31c13403]
  41783d:	bsr    ebx,edx
  417840:	mov    edi,0x25cca1f7
  417845:	mov    bl,0x8f
  417847:	push   edx
  417848:	inc    edi
  417849:	dec    edx
  41784a:	enter  0xa2fb,0xad
  41784e:	mov    edi,0x15a401cb
  417853:	leave  
  417854:	xchg   BYTE PTR [edi*2+0xec3bb08],ch
  41785b:	fisub  DWORD PTR [edx+0x1721840a]
  417861:	out    0xe5,eax
  417863:	cld    
  417864:	mov    edi,0x8650f5bb
  417869:	or     al,0x25
  41786b:	jbe    0x417819
  41786d:	dec    edi
  41786e:	dec    ebx
  41786f:	sub    ebp,DWORD PTR [ebx-0x50]
  417872:	mov    eax,ds:0x1eadf61e
  417877:	fiadd  DWORD PTR [edi+0x1c44e065]
  41787d:	test   eax,0xae5a3b82
  417882:	test   eax,0xa1a34b41
  417887:	jmp    0x749f:0xef8af6d7
  41788e:	out    dx,al
  41788f:	mov    edx,DWORD PTR [eax-0x38b9f16e]
  417895:	cdq    
  417896:	fnstcw WORD PTR [edx+0x1c730a21]
  41789c:	mov    DWORD PTR [edi],ebp
  41789e:	lock imul ebp,DWORD PTR [ecx-0x14860f56],0x48
  4178a6:	ins    DWORD PTR es:[edi],dx
  4178a7:	int3   
  4178a8:	nop
  4178a9:	outs   dx,DWORD PTR ds:[esi]
  4178aa:	push   esp
  4178ab:	aam    0x45
  4178ad:	xchg   ebp,eax
  4178ae:	jmp    0x41789e
  4178b0:	mov    edi,0x21d150cb
  4178b5:	pop    ecx
  4178b6:	sbb    eax,0xd0b3be0a
  4178bb:	(bad)  
  4178bc:	adc    DWORD PTR [eax-0x72],ecx
  4178bf:	fs adc eax,0x491dcebb
  4178c5:	jb     0x4178d1
  4178c7:	and    ch,0xf8
  4178ca:	adc    eax,0x3536436e
  4178cf:	mov    ebx,0x2fe78007
  4178d4:	test   DWORD PTR [edi-0x19bd810b],edi
  4178da:	adc    esp,eax
  4178dc:	outs   dx,BYTE PTR ds:[esi]
  4178dd:	sbb    eax,0xdc5f1cf2
  4178e2:	pop    es
  4178e3:	or     edi,DWORD PTR [edx-0x5c4b1fe4]
  4178e9:	adc    dl,ah
  4178eb:	xchg   ebx,eax
  4178ec:	dec    edi
  4178ed:	inc    esi
  4178ee:	xlat   BYTE PTR ds:[ebx]
  4178ef:	dec    eax
  4178f0:	lock xor ch,BYTE PTR [ebp+0x30f8ce7f]
  4178f7:	xor    dl,BYTE PTR [esi-0x15]
  4178fa:	les    ecx,FWORD PTR [ecx+0x183fab7]
  417900:	add    ebp,DWORD PTR [ecx]
  417902:	(bad)  
  417903:	jmp    0x1ebcf12c
  417908:	repz jns 0x4178d2
  41790b:	sbb    ch,BYTE PTR [ebx]
  41790d:	dec    edx
  41790e:	jmp    0x8842:0xb0098fd1
  417915:	adc    BYTE PTR [esi+0x74],bl
  417918:	jno    0x417941
  41791a:	push   ebx
  41791b:	test   BYTE PTR ds:0x68d8b629,ah
  417921:	iret   
  417922:	test   BYTE PTR [edi],0x2
  417925:	loop   0x41794c
  417927:	int3   
  417928:	cmp    edx,DWORD PTR [edi-0x3a]
  41792b:	(bad)  
  41792c:	sbb    ebp,esp
  41792e:	dec    ebp
  41792f:	jg     0x41794e
  417931:	jo     0x417954
  417933:	pop    esp
  417934:	jl     0x8fd83357
  41793a:	(bad)  
  41793b:	mov    esp,0x447316ca
  417940:	sub    DWORD PTR [ebp+0x1e],ebx
  417943:	xchg   esp,eax
  417944:	xor    ecx,0x8556be3d
  41794a:	jnp    0x417984
  41794c:	ja     0x417995
  41794e:	jmp    FWORD PTR [ebx]
  417950:	mov    cl,0xbd
  417952:	pop    ecx
  417953:	adc    eax,0xfe7b85bb
  417958:	test   ebp,0x51b0091f
  41795e:	sub    eax,0x73b51820
  417963:	jno    0x4179e4
  417965:	adc    ebx,edi
  417967:	mov    ds:0x6a1d3373,eax
  41796c:	jmp    ecx
  41796e:	xchg   BYTE PTR [edx],dl
  417970:	call   0x65d3:0xf08a1a25
  417977:	add    cl,BYTE PTR [eax]
  417979:	adc    bl,0xa
  41797c:	imul   ecx,DWORD PTR [edi-0x23],0x47bb6b3f
  417983:	xlat   BYTE PTR ds:[ebx]
  417984:	jbe    0x41797c
  417986:	mov    eax,0xff4475d0
  41798b:	shl    DWORD PTR [ebp+0xea2ad58],0xb3
  417992:	adc    BYTE PTR [ebp+0x2a609535],dl
  417998:	mov    edi,0xa85d45d3
  41799d:	dec    edx
  41799e:	shl    dh,cl
  4179a0:	or     si,WORD PTR fs:0xc9e843fe
  4179a8:	ffreep st(7)
  4179aa:	out    0x5e,eax
  4179ac:	out    0xb7,al
  4179ae:	pop    es
  4179af:	hlt    
  4179b0:	enter  0xb8dc,0x9a
  4179b4:	(bad)  
  4179b5:	jmp    0x6318a8c7
  4179ba:	jnp    0x4179ff
  4179bc:	xchg   ebx,eax
  4179bd:	mov    ah,0x2e
  4179bf:	call   0xab34:0x1113e7d4
  4179c6:	popa   
  4179c7:	mov    al,ds:0x72118f9
  4179cc:	mov    ebp,edx
  4179ce:	or     ah,BYTE PTR ss:[edx+0x2a]
  4179d2:	dec    esp
  4179d3:	stos   DWORD PTR es:[edi],eax
  4179d4:	lds    esp,FWORD PTR [ecx]
  4179d6:	cmp    DWORD PTR [ebp+0x44],ecx
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	xchg   ebx,eax
  4179db:	adc    eax,0x9f8e1602
  4179e0:	jne    0x4179c0
  4179e2:	out    dx,eax
  4179e3:	out    dx,eax
  4179e4:	retf   
  4179e5:	int3   
  4179e6:	stc    
  4179e7:	fs inc ecx
  4179e9:	mov    ds:0x9d6a5444,al
  4179ee:	push   0xb
  4179f0:	xor    eax,0xac1cdede
  4179f5:	aam    0xb5
  4179f7:	fcomi  st,st(2)
  4179f9:	and    esp,0xffffffc2
  4179fc:	pop    esi
  4179fd:	xchg   esi,eax
  4179fe:	cmp    esp,DWORD PTR [ebx]
  417a00:	ret    
  417a01:	call   0xbee3:0x7f05d882
  417a08:	loop   0x417a1a
  417a0a:	popf   
  417a0b:	pop    eax
  417a0c:	or     cl,ah
  417a0e:	push   edi
  417a0f:	mov    eax,ds:0x17911ec5
  417a14:	aas    
  417a15:	sbb    BYTE PTR [ebx-0x49],dh
  417a18:	mov    al,ds:0x9ecbbf02
  417a1d:	pop    esi
  417a1e:	inc    eax
  417a1f:	sub    edx,DWORD PTR [edx]
  417a21:	mov    ecx,0xddf4f02b
  417a26:	cwde   
  417a27:	xor    eax,0xfb6ac692
  417a2c:	call   FWORD PTR [edx]
  417a2e:	lock inc esi
  417a30:	or     al,0xe4
  417a32:	mov    ds:0x78ecce1c,al
  417a37:	sub    eax,0x656e30b2
  417a3c:	xchg   esp,eax
  417a3d:	dec    edx
  417a3e:	fldcw  WORD PTR [ebx]
  417a40:	adc    eax,0x76410e75
  417a45:	or     al,0xe7
  417a47:	cmp    DWORD PTR [ebp*2-0x7048611c],ebx
  417a4e:	or     eax,DWORD PTR [ecx+0x28]
  417a51:	aad    0xd6
  417a53:	xor    al,0x54
  417a55:	inc    esp
  417a56:	xchg   eax,esi
  417a58:	sub    al,0xc
  417a5a:	xlat   BYTE PTR ds:[ebx]
  417a5b:	out    0x79,eax
  417a5d:	pop    eax
  417a5e:	scas   al,BYTE PTR es:[edi]
  417a5f:	rol    dl,cl
  417a61:	out    dx,al
  417a62:	test   DWORD PTR [eax+0x30e4dcae],ecx
  417a68:	fcmove st,st(4)
  417a6a:	pop    ss
  417a6b:	out    dx,eax
  417a6c:	adc    al,0xda
  417a6e:	jae    0x4179fe
  417a70:	aam    0x86
  417a72:	je     0x417a36
  417a74:	mov    dl,0xb0
  417a76:	ret    0x6c44
  417a79:	rcl    DWORD PTR [esi],cl
  417a7b:	je     0x417a1c
  417a7d:	outs   dx,BYTE PTR ds:[esi]
  417a7e:	cdq    
  417a7f:	(bad)  
  417a80:	jmp    0x417a57
  417a82:	lock inc eax
  417a84:	and    DWORD PTR [ecx],esi
  417a86:	jge    0x417a55
  417a88:	push   ds
  417a89:	add    DWORD PTR [eax],ecx
  417a8b:	adc    DWORD PTR [ecx-0x7c130305],ecx
  417a91:	repnz pop esi
  417a93:	mov    bh,0x84
  417a95:	out    0x65,eax
  417a97:	and    ch,BYTE PTR [esp+ebx*2]
  417a9a:	jmp    0x3f615a23
  417a9f:	or     DWORD PTR [edx+0x6b47114],eax
  417aa5:	shl    BYTE PTR [eax-0x47],cl
  417aa8:	sub    eax,0x61a66980
  417aad:	mov    cl,0xad
  417aaf:	cld    
  417ab0:	ja     0x417aa8
  417ab2:	dec    ebp
  417ab3:	lock lahf 
  417ab5:	call   0xe630:0xa4ac5e09
  417abc:	push   ebp
  417abd:	(bad)  
  417abe:	push   edi
  417abf:	jnp    0x417a8d
  417ac1:	test   al,0x6c
  417ac3:	sbb    BYTE PTR [ebp+0x49],cl
  417ac6:	scas   eax,DWORD PTR es:[edi]
  417ac7:	(bad)  
  417ac8:	cmp    dl,dh
  417aca:	or     BYTE PTR [ecx],0x2a
  417acd:	stos   DWORD PTR es:[edi],eax
  417ace:	int3   
  417acf:	int3   
  417ad0:	sti    
  417ad1:	mov    dh,0x3d
  417ad3:	adc    bl,dh
  417ad5:	fist   WORD PTR [eax]
  417ad7:	sti    
  417ad8:	add    ecx,DWORD PTR [edx+0x6b302dfa]
  417ade:	push   ecx
  417adf:	xor    eax,0x8242ad5e
  417ae4:	mov    al,0x55
  417ae6:	(bad)  
  417ae7:	fdivr  DWORD PTR [ebx+0x12]
  417aea:	out    0xc6,eax
  417aec:	lds    ecx,FWORD PTR [ecx+ecx*4+0x1d]
  417af0:	jbe    0x417aa0
  417af2:	xor    cl,BYTE PTR [si-0x34a0]
  417af7:	fs jne 0x417b22
  417afa:	aaa    
  417afb:	pop    ds
  417afc:	xor    DWORD PTR [ebx+0x12],eax
  417aff:	and    ebp,eax
  417b01:	mov    eax,ds:0xd671ab7
  417b06:	and    bl,BYTE PTR [esi+eax*2+0x13]
  417b0a:	in     eax,dx
  417b0b:	(bad)  
  417b0c:	jne    0x417b76
  417b0e:	push   es
  417b0f:	leave  
  417b10:	dec    ecx
  417b11:	adc    eax,0xe986022d
  417b16:	data16 adc cl,BYTE PTR [esi-0x79bf3684]
  417b1d:	sets   BYTE PTR [edx-0x6f]
  417b21:	js     0x417b6f
  417b23:	int    0x4e
  417b25:	adc    dh,bh
  417b27:	popa   
  417b28:	xchg   dl,dl
  417b2a:	push   esp
  417b2b:	retf   
  417b2c:	adc    ch,BYTE PTR [esi]
  417b2e:	xchg   DWORD PTR [ebp+0x37],esp
  417b31:	fisttp QWORD PTR [edx]
  417b33:	and    eax,0x6321f27e
  417b38:	out    0x93,eax
  417b3a:	jp     0x417b57
  417b3c:	adc    edx,DWORD PTR [eax]
  417b3e:	xor    al,BYTE PTR [eax-0x1085cc3]
  417b44:	xor    al,al
  417b46:	jne    0x417b67
  417b48:	push   es
  417b49:	add    ebp,DWORD PTR [edi]
  417b4b:	mov    edx,0xcc5ec081
  417b50:	in     eax,0x18
  417b52:	pop    ss
  417b53:	leave  
  417b54:	pop    eax
  417b55:	scas   al,BYTE PTR es:[edi]
  417b56:	outs   dx,DWORD PTR ds:[esi]
  417b57:	sub    dh,ch
  417b59:	jl     0x417ae1
  417b5b:	lock adc eax,0xf1d87945
  417b61:	mov    al,cl
  417b63:	int3   
  417b64:	adc    BYTE PTR [edx-0x57833130],0xf3
  417b6b:	fcom   DWORD PTR [ebx-0x20]
  417b6e:	fs mov edx,fs
  417b71:	retf   0xe0d3
  417b74:	xchg   ecx,eax
  417b75:	push   0xffffffff
  417b77:	push   es
  417b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b79:	fcom   QWORD PTR [eax+0x5d]
  417b7c:	push   ecx
  417b7d:	out    dx,al
  417b7e:	add    DWORD PTR [eax+0x4a],esp
  417b81:	out    0x7c,eax
  417b83:	fldenv [ecx+0x2f]
  417b86:	les    esp,FWORD PTR ds:0xfba3925c
  417b8c:	mov    BYTE PTR [eax+0x12df20bd],bl
  417b92:	pop    esi
  417b93:	test   eax,0x5d045b07
  417b98:	mov    edi,0x84e333bc
  417b9d:	mov    bl,al
  417b9f:	test   ebx,ebp
  417ba1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417ba3:	adc    ah,bh
  417ba5:	mov    edi,0xc324288d
  417baa:	hlt    
  417bab:	push   ebp
  417bac:	sub    eax,0x7545e526
  417bb1:	(bad)  
  417bb2:	cmc    
  417bb3:	and    al,0x7a
  417bb5:	add    dl,dl
  417bb7:	push   esi
  417bb8:	mov    esp,0xd28d4929
  417bbd:	mov    esi,0xffc51c44
  417bc2:	push   edx
  417bc3:	imul   ebp,DWORD PTR [edx+0x6a2bdbf9],0x4df3d992
  417bcd:	popf   
  417bce:	dec    ebx
  417bcf:	xchg   di,ax
  417bd1:	and    eax,0x52543d0e
  417bd6:	bound  edi,QWORD PTR [ebx]
  417bd8:	jnp    0x417ba5
  417bda:	xchg   ebx,ecx
  417bdc:	sbb    ebx,DWORD PTR [edx+0x4bb3a303]
  417be2:	test   DWORD PTR [ebp+0x50],ebx
  417be5:	pop    ecx
  417be6:	clc    
  417be7:	add    al,0xd6
  417be9:	sub    al,0xc8
  417beb:	xchg   edx,eax
  417bec:	outs   dx,DWORD PTR ds:[esi]
  417bed:	fist   WORD PTR [edx-0x3f]
  417bf0:	push   eax
  417bf1:	jo     0x417c3a
  417bf3:	lahf   
  417bf4:	push   0xc1866e43
  417bf9:	and    al,0x77
  417bfb:	mov    ah,0xf1
  417bfd:	enter  0x987e,0xb2
  417c01:	mov    ecx,0xf0669815
  417c06:	popa   
  417c07:	imul   ebx,DWORD PTR [edi+edi*4],0x2c953210
  417c0e:	push   esp
  417c0f:	add    al,0x2d
  417c11:	push   edx
  417c12:	mov    ebx,0x9745e864
  417c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c18:	push   ebp
  417c19:	rcr    DWORD PTR [eax+0x33],cl
  417c1c:	mov    edi,0x52e8b04b
  417c21:	or     DWORD PTR [edi-0x3a99f6b9],ebp
  417c27:	jmp    0x3fec3883
  417c2c:	loope  0x417c93
  417c2e:	add    DWORD PTR [ecx-0x51],esi
  417c31:	mov    cl,0x77
  417c33:	jp     0x417c98
  417c35:	daa    
  417c36:	and    BYTE PTR [eax+0x5500300c],bh
  417c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3d:	xchg   esi,eax
  417c3e:	push   0x8be928e8
  417c43:	pop    ebx
  417c44:	pop    DWORD PTR [ebx-0x5140cb19]
  417c4a:	adc    eax,0x1636b19
  417c4f:	xchg   edi,eax
  417c50:	call   0x79275de7
  417c55:	stc    
  417c56:	daa    
  417c57:	(bad)  
  417c58:	sahf   
  417c59:	pusha  
  417c5a:	sub    BYTE PTR [ebx+0x75],ah
  417c5d:	cmp    esp,DWORD PTR [ebp-0xa]
  417c60:	add    ebp,0xcd213603
  417c66:	add    al,0x4b
  417c68:	(bad)  
  417c69:	aad    0xb6
  417c6b:	enter  0xbee5,0x98
  417c6f:	jmp    0xfbafbf4a
  417c74:	out    0x6a,al
  417c76:	sub    DWORD PTR [edx+ebp*4],edx
  417c79:	sbb    bh,BYTE PTR [eax+0x7fbbcee1]
  417c7f:	lods   eax,DWORD PTR ds:[esi]
  417c80:	adc    DWORD PTR [edi+0x33f053af],ebx
  417c86:	mov    al,ds:0xb34ccab9
  417c8b:	push   ss
  417c8c:	adc    DWORD PTR [eax],0x6ef1d044
  417c92:	mov    ds:0xd5333a9f,eax
  417c97:	push   esi
  417c98:	sbb    eax,0x99adea3d
  417c9d:	mov    eax,0x8de7d31f
  417ca2:	fiadd  WORD PTR [ebx]
  417ca4:	out    dx,eax
  417ca5:	and    ch,BYTE PTR [ecx+0x79eb361e]
  417cab:	jle    0x417d28
  417cad:	adc    bh,BYTE PTR [eax]
  417caf:	les    esi,FWORD PTR [ebx+0x38]
  417cb2:	mov    edx,0x5e5aacf4
  417cb7:	adc    eax,0x9db0ff38
  417cbc:	stc    
  417cbd:	cmp    dl,BYTE PTR [ebx-0x61a8dc55]
  417cc3:	nop
  417cc4:	inc    ecx
  417cc5:	rcr    BYTE PTR [ebx],cl
  417cc7:	and    DWORD PTR [edi-0x279c81e0],ebx
  417ccd:	fsub   QWORD PTR [ebx]
  417ccf:	pop    ecx
  417cd0:	push   ds
  417cd1:	or     ebx,eax
  417cd3:	addr16 nop
  417cd5:	aaa    
  417cd6:	sbb    ah,BYTE PTR [eax-0x3b31f96f]
  417cdc:	inc    esp
  417cdd:	push   0x76e90dc3
  417ce2:	mov    bh,0x31
  417ce4:	adc    ah,al
  417ce6:	sbb    eax,0xa1ed7641
  417ceb:	pushf  
  417cec:	xor    al,0x3e
  417cee:	jmp    0x417d42
  417cf0:	lahf   
  417cf1:	sub    BYTE PTR [esp+ebx*8],al
  417cf4:	fwait
  417cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf6:	(bad)  
  417cf7:	ds ins BYTE PTR es:[edi],dx
  417cf9:	xchg   esp,eax
  417cfa:	sbb    ebx,esi
  417cfc:	leave  
  417cfd:	sahf   
  417cfe:	jp     0x417d09
  417d00:	cwde   
  417d01:	push   ebx
  417d02:	das    
  417d03:	push   DWORD PTR [ebx]
  417d05:	inc    ecx
  417d06:	(bad)  
  417d07:	sbb    edi,ebx
  417d09:	push   ebx
  417d0a:	jno    0x417d7c
  417d0c:	ins    DWORD PTR es:[edi],dx
  417d0d:	mov    ecx,0xafebf975
  417d12:	mov    al,ds:0xcb465edc
  417d17:	push   edi
  417d18:	xor    ch,dl
  417d1a:	(bad)  
  417d1b:	frndint 
  417d1d:	out    0x6c,al
  417d1f:	push   edi
  417d20:	mov    ecx,0x48290b4b
  417d25:	outs   dx,BYTE PTR ds:[esi]
  417d26:	xor    esi,ecx
  417d28:	jnp    0x417d0f
  417d2a:	dec    ebx
  417d2b:	inc    esp
  417d2c:	push   esi
  417d2d:	pop    esp
  417d2e:	pop    esp
  417d2f:	fldz   
  417d31:	sti    
  417d32:	adc    ch,cl
  417d34:	inc    ebp
  417d35:	arpl   WORD PTR [ebp+0x75],bp
  417d38:	rol    bh,0xe0
  417d3b:	aaa    
  417d3c:	sub    dh,BYTE PTR [edi]
  417d3e:	leave  
  417d3f:	jne    0x417d7f
  417d41:	enter  0x4792,0xc4
  417d45:	push   edi
  417d46:	(bad)  [ebx]
  417d48:	cwde   
  417d49:	inc    ebx
  417d4a:	les    esp,FWORD PTR [edi-0x2c]
  417d4d:	add    eax,0x8851b7fa
  417d52:	xchg   ebp,eax
  417d53:	daa    
  417d54:	push   es
  417d55:	cmp    edi,eax
  417d57:	loopne 0x417d2d
  417d59:	repnz (bad) 
  417d5b:	aam    0xb2
  417d5d:	ret    0x5d91
  417d60:	jle    0x417dc5
  417d62:	mov    al,0x57
  417d64:	clc    
  417d65:	mov    esp,0xd8f55d68
  417d6a:	test   al,0xbd
  417d6c:	in     al,dx
  417d6d:	push   eax
  417d6e:	es or  eax,0xed287866
  417d74:	sub    al,0x42
  417d76:	xchg   edi,eax
  417d77:	fild   DWORD PTR [esi]
  417d79:	icebp  
  417d7a:	(bad)  
  417d7b:	xchg   ebx,eax
  417d7c:	cld    
  417d7d:	fisubr DWORD PTR [edx-0x7a]
  417d80:	out    dx,al
  417d81:	rcl    BYTE PTR [edi],1
  417d83:	add    BYTE PTR [esi],bh
  417d85:	and    esp,0x91485067
  417d8b:	scas   eax,DWORD PTR es:[edi]
  417d8c:	xchg   BYTE PTR [ebx+0x5ea71662],bh
  417d92:	shrd   edi,esp,cl
  417d95:	sbb    ebx,ebp
  417d97:	mov    ah,0x6a
  417d99:	cwde   
  417d9a:	and    al,0xdb
  417d9c:	popf   
  417d9d:	popf   
  417d9e:	jno    0x417dfd
  417da0:	mov    esi,0xdc7f2bc6
  417da5:	push   0x22
  417da7:	test   al,0xf
  417da9:	aad    0x67
  417dab:	xchg   esp,eax
  417dac:	xor    al,0x11
  417dae:	cmp    edi,edx
  417db0:	es cs test al,0xbb
  417db4:	and    eax,0x2b7dc298
  417db9:	cmp    eax,0xd9536890
  417dbe:	in     eax,0x85
  417dc0:	icebp  
  417dc1:	or     DWORD PTR [ebx+0xa5b3a6e],eax
  417dc7:	ret    0xa13a
  417dca:	add    al,0x3
  417dcc:	xor    eax,0x31e10e0d
  417dd1:	pop    ss
  417dd2:	xor    DWORD PTR [ecx+0x73],ecx
  417dd5:	sahf   
  417dd6:	(bad)  
  417dd8:	(bad)  
  417dd9:	in     al,dx
  417dda:	sub    eax,0xab4e26c1
  417ddf:	ds adc eax,0x207cad59
  417de5:	push   cs
  417de6:	test   eax,0x2066ea7c
  417deb:	aad    0xf1
  417ded:	pusha  
  417dee:	mov    bh,al
  417df0:	lea    ecx,[edi+0x3]
  417df3:	xchg   ecx,eax
  417df4:	cmp    al,0xec
  417df6:	outs   dx,BYTE PTR ds:[si]
  417df8:	push   ebx
  417df9:	pop    eax
  417dfa:	(bad)  
  417dfb:	xlat   BYTE PTR ds:[ebx]
  417dfc:	mov    DWORD PTR [esi+0x5a],0x13f13dc5
  417e03:	jle    0x417e67
  417e05:	jmp    0x417e55
  417e07:	adc    al,0xda
  417e09:	and    al,0x29
  417e0b:	sti    
  417e0c:	jbe    0x417dd6
  417e0e:	fadd   DWORD PTR [ebp-0x5]
  417e11:	sar    DWORD PTR [edx-0x62],0x8e
  417e15:	push   ds
  417e16:	dec    ebp
  417e17:	arpl   WORD PTR [edi-0x3d],ax
  417e1a:	mov    BYTE PTR [esi],bh
  417e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e1d:	inc    ecx
  417e1e:	fs popa 
  417e20:	int3   
  417e21:	pop    edi
  417e22:	jno    0x417db8
  417e24:	fisub  DWORD PTR [eax]
  417e26:	dec    edx
  417e27:	call   0x2b4c1b7e
  417e2c:	or     DWORD PTR [edi],ecx
  417e2e:	aad    0xbe
  417e30:	jp     0x417e54
  417e32:	retf   
  417e33:	stc    
  417e34:	add    DWORD PTR [ebp-0x25],0xcd53f7fd
  417e3b:	pop    edx
  417e3c:	push   eax
  417e3d:	sti    
  417e3e:	or     DWORD PTR [ecx-0x1f2d0c3],ebx
  417e44:	and    BYTE PTR [ebp+edx*8+0x26],dl
  417e48:	test   al,0x3f
  417e4a:	dec    ebx
  417e4b:	xor    al,BYTE PTR [edi]
  417e4d:	push   ecx
  417e4e:	out    0xe7,al
  417e50:	mov    dl,0xb7
  417e52:	les    ebp,FWORD PTR [esi]
  417e54:	jmp    0xe5447e81
  417e59:	into   
  417e5a:	mov    dh,0xde
  417e5c:	or     BYTE PTR [edi],0x5c
  417e5f:	adc    BYTE PTR [edx],dl
  417e61:	cmp    BYTE PTR [ecx],ch
  417e63:	loop   0x417eb8
  417e65:	mov    cl,0xac
  417e67:	fild   QWORD PTR [edx+0x7d2c02e0]
  417e6d:	jle    0x417e43
  417e6f:	fstp   QWORD PTR [edx+0x19]
  417e72:	ins    DWORD PTR es:[edi],dx
  417e73:	dec    eax
  417e74:	pop    ebx
  417e75:	fs je  0x417e1a
  417e78:	jo     0x417ef6
  417e7a:	hlt    
  417e7b:	jne    0x417e57
  417e7d:	mov    eax,ds:0x2421d0c1
  417e82:	outs   dx,BYTE PTR ds:[esi]
  417e83:	mov    DWORD PTR [eax+esi*1-0x40],ebx
  417e87:	call   DWORD PTR [eax]
  417e89:	cmp    al,0xa1
  417e8b:	sbb    BYTE PTR [edi],cl
  417e8d:	stc    
  417e8e:	jb     0x417e2c
  417e90:	push   0x997e2ef7
  417e95:	fwait
  417e96:	(bad)  
  417e97:	mov    ebp,DWORD PTR [edi+edx*8]
  417e9a:	bound  ebx,QWORD PTR [edx+edx*8]
  417e9d:	stos   BYTE PTR es:[edi],al
  417e9e:	ja     0x417e26
  417ea0:	pusha  
  417ea1:	fnstenv [edi+0x21]
  417ea4:	or     eax,0xe93c5127
  417ea9:	push   ss
  417eaa:	xchg   esp,eax
  417eab:	scas   eax,DWORD PTR es:[edi]
  417eac:	popa   
  417ead:	xchg   ecx,eax
  417eae:	loop   0x417f0f
  417eb0:	pop    esp
  417eb1:	pop    ecx
  417eb2:	mov    ds:0x116bd060,eax
  417eb8:	ja     0x417e9f
  417eba:	inc    edx
  417ebb:	int    0xcf
  417ebd:	gs mov edx,0x1fee6aae
  417ec3:	in     al,dx
  417ec4:	dec    ebx
  417ec5:	fmul   st(2),st
  417ec7:	shl    DWORD PTR [eax-0x1daf5f9e],1
  417ecd:	mov    ecx,esp
  417ecf:	jo     0x417f3c
  417ed1:	or     BYTE PTR [ecx+edi*1],0x44
  417ed5:	imul   esi,DWORD PTR [ecx+0x75],0x3cb936b8
  417edc:	jmp    0x417e75
  417ede:	inc    ebx
  417edf:	mov    ebx,0x52bc0997
  417ee4:	in     eax,dx
  417ee5:	cmp    DWORD PTR [ecx+0x5d],esp
  417ee8:	pushf  
  417ee9:	inc    edi
  417eea:	sbb    esp,DWORD PTR [ecx]
  417eec:	mov    ds:0xcd149ce6,al
  417ef1:	cs jo  0x417e92
  417ef4:	inc    ebx
  417ef5:	fwait
  417ef6:	jne    0x417f00
  417ef8:	div    DWORD PTR [ebp+0x78bcdc9]
  417efe:	adc    DWORD PTR [ecx],ebx
  417f00:	push   edx
  417f01:	inc    esi
  417f02:	sub    bl,BYTE PTR [edi-0x6e432cb2]
  417f08:	add    DWORD PTR [ebp-0x56d10da6],eax
  417f0e:	sbb    BYTE PTR [esi],dl
  417f10:	dec    esi
  417f11:	(bad)  
  417f12:	sbb    bh,al
  417f14:	adc    esp,0xdfe9c70
  417f1a:	jne    0x417f39
  417f1c:	adc    BYTE PTR [ebx+0x2a946f3e],ch
  417f22:	gs int3 
  417f24:	repz ret 
  417f26:	aas    
  417f27:	das    
  417f28:	sti    
  417f29:	xchg   edx,eax
  417f2a:	pop    edi
  417f2b:	xchg   edx,eax
  417f2c:	(bad)  
  417f2e:	aad    0xba
  417f30:	dec    eax
  417f31:	call   0xd6bc75e4
  417f36:	daa    
  417f37:	dec    ebx
  417f38:	jne    0x417ee3
  417f3a:	inc    ebp
  417f3b:	rcr    DWORD PTR [ecx+0x10b4762a],1
  417f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f42:	rcl    BYTE PTR [ebp+ebx*1-0x2dbda717],cl
  417f49:	(bad)  
  417f4b:	(bad)  [ebp+0x7017e903]
  417f51:	add    al,0x3e
  417f53:	jns    0x417f92
  417f55:	cmp    al,0x13
  417f57:	ja     0x417f2d
  417f59:	aaa    
  417f5a:	mov    eax,ds:0xcfb6797b
  417f5f:	rcr    DWORD PTR [ebx-0x37],cl
  417f62:	add    eax,0xa8aaf880
  417f67:	sbb    al,0xac
  417f69:	jns    0x417f24
  417f6b:	pop    ebp
  417f6c:	jp     0x417f98
  417f6e:	(bad)  
  417f6f:	sub    DWORD PTR [eax],ebx
  417f71:	fcmovu st,st(4)
  417f73:	fisub  DWORD PTR [ecx+0x4b]
  417f76:	sbb    al,0x3c
  417f78:	dec    eax
  417f79:	add    al,0xe9
  417f7b:	sahf   
  417f7c:	cmp    DWORD PTR [esi+0x3f27b5fb],0x3ba5b540
  417f86:	mov    ebp,0x400c18e8
  417f8b:	icebp  
  417f8c:	in     eax,dx
  417f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f8e:	sbb    BYTE PTR [esp+edi*4],bl
  417f91:	lock and dh,BYTE PTR [ebx+0x51]
  417f95:	fsub   st(2),st
  417f97:	cdq    
  417f98:	or     edx,ebx
  417f9a:	(bad)  
  417f9c:	ds repnz fwait
  417f9f:	or     ah,BYTE PTR [edi]
  417fa1:	jno    0x417f3b
  417fa3:	pop    edx
  417fa4:	in     al,0x90
  417fa6:	xor    BYTE PTR [ebx],al
  417fa8:	test   BYTE PTR [edx],0xa6
  417fab:	dec    ebp
  417fac:	mov    al,0xac
  417fae:	popf   
  417faf:	idiv   BYTE PTR [ecx]
  417fb1:	fiadd  DWORD PTR [esp+eax*1-0x7c]
  417fb5:	mov    WORD PTR [ecx-0x49],?
  417fb8:	push   ebx
  417fb9:	outs   dx,DWORD PTR ds:[esi]
  417fba:	fs leave 
  417fbc:	sbb    BYTE PTR [ebx+edx*4+0x67],dh
  417fc0:	and    BYTE PTR [edx],bl
  417fc2:	push   0xffffffe0
  417fc4:	cmp    eax,DWORD PTR [edx]
  417fc6:	rol    DWORD PTR [ecx-0x59],0x56
  417fca:	jnp    0x41802e
  417fcc:	popf   
  417fcd:	pop    edi
  417fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fcf:	into   
  417fd0:	mov    ecx,0xe339d172
  417fd5:	mov    dh,0xdf
  417fd7:	lds    edx,FWORD PTR ds:0x7da66ea8
  417fdd:	lahf   
  417fde:	retf   
  417fdf:	pop    ecx
  417fe0:	dec    ebp
  417fe1:	test   eax,0xfe4db251
  417fe6:	mov    eax,ds:0xca4780e7
  417feb:	jp     0x417fe3
  417fed:	push   es
  417fee:	dec    eax
  417fef:	mov    ecx,0x15e7bc80
  417ff4:	lods   al,BYTE PTR ds:[esi]
  417ff5:	ds jns 0x418037
  417ff8:	add    dh,BYTE PTR [ebx]
  417ffa:	and    BYTE PTR [ecx+0x1734d313],bh
  418000:	test   al,0x30
  418002:	sub    al,0x7e
  418004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418005:	mov    ecx,0x8469f2d0
  41800a:	dec    esp
  41800b:	jno    0x417fde
  41800d:	jmp    0x6134:0xd317258c
  418014:	jg     0x417fb5
  418016:	js     0x41801b
  418018:	or     eax,0xb649b633
  41801d:	cld    
  41801e:	gs push ebx
  418020:	mov    edi,0x328b027c
  418025:	fsub   DWORD PTR [edx+0x74]
  418028:	push   ss
  418029:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41802b:	in     al,0x88
  41802d:	out    dx,eax
  41802e:	sub    DWORD PTR [esi-0x73],esp
  418031:	jmp    0xbfc079cb
  418036:	ret    
  418037:	adc    edi,DWORD PTR [edx+0xdc8138f]
  41803d:	cmp    cl,0x98
  418040:	enter  0x7dca,0xd
  418044:	out    0x67,al
  418046:	aaa    
  418047:	xlat   BYTE PTR ds:[ebx]
  418048:	daa    
  418049:	int    0xdf
  41804b:	mov    bh,0x5f
  41804d:	enter  0xb56d,0xe6
  418051:	and    cl,BYTE PTR [edx-0x7a8d6ad8]
  418057:	aam    0x4d
  418059:	ja     0x418056
  41805b:	xor    dl,BYTE PTR [edi+0x78ef3319]
  418061:	call   0x588d:0x3184d404
  418068:	sar    esi,1
  41806a:	push   0xffffffa2
  41806c:	cmp    al,ch
  41806e:	and    ebp,DWORD PTR [ebp-0x6f]
  418071:	arpl   WORD PTR [ebx-0x64c1d7fc],si
  418077:	xor    edi,ebp
  418079:	in     al,dx
  41807a:	ja     0x4180b9
  41807c:	mov    esp,0x504f1e85
  418081:	fisubr DWORD PTR [ebx-0x6]
  418084:	push   ebx
  418085:	and    edx,ebp
  418087:	mov    esi,0x3d279d82
  41808c:	pusha  
  41808d:	xchg   esp,eax
  41808e:	jge    0x4180d3
  418090:	sbb    esi,ecx
  418092:	inc    eax
  418093:	pushf  
  418094:	mov    al,ds:0x48f6dad4
  418099:	xchg   ecx,eax
  41809a:	fild   QWORD PTR [ebx+0x6f774114]
  4180a0:	jg     0x418069
  4180a2:	sbb    BYTE PTR [edi-0x74],cl
  4180a5:	add    BYTE PTR ds:0x74f65df9,ch
  4180ab:	and    cl,BYTE PTR [esi+ebx*1]
  4180ae:	jo     0x4180fb
  4180b0:	aam    0xba
  4180b2:	das    
  4180b3:	cmp    edx,DWORD PTR [esi*4-0x4237c6d1]
  4180ba:	into   
  4180bb:	fdiv   DWORD PTR [esp+ebp*1-0x6d]
  4180bf:	mov    ds:0xbce712ea,eax
  4180c4:	dec    eax
  4180c5:	push   es
  4180c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c7:	inc    edi
  4180c8:	sbb    DWORD PTR [ecx+edx*4],ecx
  4180cb:	or     BYTE PTR [edi],0xdd
  4180ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cf:	add    dl,BYTE PTR [edx+ebx*1+0x57]
  4180d3:	pop    ebx
  4180d4:	jne    0x418140
  4180d6:	das    
  4180d7:	lahf   
  4180d8:	mov    ds:0xcd118b9e,eax
  4180dd:	inc    ebx
  4180de:	xchg   DWORD PTR [ebp-0x7e],eax
  4180e1:	dec    ecx
  4180e2:	out    dx,al
  4180e3:	(bad)  
  4180e4:	jae    0x4180ba
  4180e6:	or     BYTE PTR [esi+0x7d],ch
  4180e9:	rcl    BYTE PTR [ebx+0x7f2adcf],0x78
  4180f0:	daa    
  4180f1:	sbb    cl,BYTE PTR [eax+0x5cc6b273]
  4180f7:	mov    esi,0xa5b5cd97
  4180fc:	sub    esi,0xffffffc8
  4180ff:	jno    0x418121
  418101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418102:	adc    ebx,DWORD PTR [edx+0x6c]
  418105:	mov    cl,0xeb
  418107:	cmp    dl,ah
  418109:	mov    edi,0x3f36100e
  41810e:	lock fidivr WORD PTR [edi+0x16]
  418112:	mov    ah,0x6e
  418114:	and    BYTE PTR [ecx-0x6d],0xf6
  418118:	cmp    bl,BYTE PTR [esi]
  41811a:	sbb    ecx,DWORD PTR [edx-0x5c51ea8d]
  418120:	pop    ebx
  418121:	sub    eax,0x3b5f00b7
  418126:	mov    edx,0x9de72604
  41812b:	mov    ds:0x4ba47936,eax
  418130:	sahf   
  418131:	(bad)
  418134:	aas    
  418135:	sub    BYTE PTR ds:0xa34ef63f,bh
  41813b:	jle    0x418156
  41813d:	pop    esi
  41813e:	fnstcw WORD PTR [esi]
  418140:	mov    dh,0x91
  418142:	out    0xe3,eax
  418144:	xor    DWORD PTR [esi],ecx
  418146:	xchg   esi,eax
  418147:	test   DWORD PTR ds:0x60e881f6,eax
  41814d:	jno    0x4180f7
  41814f:	xor    eax,ecx
  418151:	pop    eax
  418152:	mov    al,ds:0xe8dc1fd
  418157:	or     DWORD PTR [esi-0x12],eax
  41815a:	test   al,0xe8
  41815c:	neg    BYTE PTR [esp+eiz*4+0x2dec0fd]
  418163:	imul   eax,DWORD PTR [esi-0x3a],0x9b9bcd37
  41816a:	jg     0x41817d
  41816c:	jne    0x4180f4
  41816e:	icebp  
  41816f:	jge    0x418124
  418171:	es dec esi
  418173:	test   BYTE PTR ds:0xa7befb90,al
  418179:	pop    ds
  41817a:	imul   edi,ebp,0xffffffa9
  41817d:	(bad)  
  41817f:	aad    0x4e
  418181:	out    dx,eax
  418182:	loop   0x4181e8
  418184:	xchg   edi,eax
  418185:	sahf   
  418186:	pop    esp
  418187:	stos   BYTE PTR es:[edi],al
  418188:	popa   
  418189:	mov    esp,0x8dca169b
  41818e:	mov    WORD PTR [ecx+esi*8],es
  418191:	dec    esp
  418192:	addr16 mov dh,0xb1
  418195:	sbb    ebp,DWORD PTR [edx]
  418197:	sbb    ecx,DWORD PTR [esi+0x56b5193d]
  41819d:	xor    DWORD PTR [ebx],ecx
  41819f:	adc    DWORD PTR [bx+si],eax
  4181a2:	test   DWORD PTR [edi],esi
  4181a4:	xchg   ebx,eax
  4181a5:	out    dx,eax
  4181a6:	sbb    DWORD PTR ds:0x8c06eb51,edi
  4181ac:	push   0x32348645
  4181b1:	pop    ss
  4181b2:	mov    dl,0xcf
  4181b4:	sti    
  4181b5:	mov    ebx,0x4bd22736
  4181ba:	int    0x37
  4181bc:	ret    
  4181bd:	add    BYTE PTR [edi-0x168ddf42],ch
  4181c3:	adc    BYTE PTR ds:0xb52a73cc,dh
  4181c9:	aaa    
  4181ca:	cld    
  4181cb:	into   
  4181cc:	mov    ah,0x38
  4181ce:	inc    ecx
  4181cf:	jp     0x41817e
  4181d1:	mov    dh,0x72
  4181d3:	push   ss
  4181d4:	mov    dh,0x9
  4181d6:	mov    bh,0x88
  4181d8:	inc    ebx
  4181d9:	inc    esi
  4181da:	jae    0x4181c4
  4181dc:	adc    BYTE PTR [edi+ebp*1-0x4a94838f],bh
  4181e3:	enter  0xefbc,0xa3
  4181e7:	call   0x3e39:0x66b283cd
  4181ee:	push   ebx
  4181ef:	ret    0xe956
  4181f2:	out    0x92,eax
  4181f4:	lods   eax,DWORD PTR ds:[esi]
  4181f5:	das    
  4181f6:	inc    ebx
  4181f7:	cmp    ebp,ebp
  4181f9:	ds jns 0x418227
  4181fc:	push   esp
  4181fd:	or     dh,BYTE PTR [ecx]
  4181ff:	mov    eax,0x28e16fa9
  418204:	stos   DWORD PTR es:[edi],eax
  418205:	in     eax,0x5c
  418207:	stc    
  418208:	sbb    dl,ah
  41820a:	and    eax,0x5679db08
  41820f:	retf   
  418210:	sbb    esi,ecx
  418212:	pop    edx
  418213:	adc    DWORD PTR [esi+0x7e444226],ebx
  418219:	retf   0xee83
  41821c:	popa   
  41821d:	hlt    
  41821e:	xchg   ebx,eax
  41821f:	ss cmp al,0x86
  418222:	cmp    edi,DWORD PTR [edi]
  418224:	das    
  418225:	scas   eax,DWORD PTR es:[edi]
  418226:	leave  
  418227:	xor    DWORD PTR [ebp-0x36],ecx
  41822a:	das    
  41822b:	dec    ebx
  41822c:	xchg   ebx,eax
  41822d:	push   ecx
  41822e:	mov    edi,0x6cc2f947
  418233:	sbb    BYTE PTR [ecx],bl
  418235:	push   0xffffff85
  418237:	xor    al,0x95
  418239:	adc    BYTE PTR [esi-0x1],cl
  41823c:	mov    cl,0xdc
  41823e:	std    
  41823f:	lea    ebp,[ebx-0x42bf1c1a]
  418245:	daa    
  418246:	or     BYTE PTR [ebp-0x592ac505],ah
  41824c:	enter  0x67d8,0x7b
  418250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418251:	not    DWORD PTR [ecx+ebp*1]
  418254:	adc    ecx,DWORD PTR [ecx-0x16]
  418257:	iret   
  418258:	or     esi,ecx
  41825a:	dec    esp
  41825b:	jnp    0x4182bc
  41825d:	stc    
  41825e:	fwait
  41825f:	(bad)  
  418260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418261:	out    dx,eax
  418262:	jmp    0x418252
  418264:	pop    ds
  418265:	or     DWORD PTR [ebx-0x24],ebp
  418268:	scas   eax,DWORD PTR es:[edi]
  418269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41826a:	stc    
  41826b:	data16 fisubr DWORD PTR [ebx-0x1e]
  41826f:	add    BYTE PTR [ecx],al
  418271:	(bad)  
  418272:	scas   al,BYTE PTR es:[edi]
  418273:	ja     0x4181fc
  418275:	call   0x4351efd5
  41827a:	stos   BYTE PTR es:[edi],al
  41827b:	fadd   st,st(5)
  41827d:	add    al,0xe8
  41827f:	inc    ecx
  418280:	adc    eax,0x8efc9a9f
  418285:	jle    0x4182e7
  418287:	push   esi
  418288:	pop    ecx
  418289:	adc    al,0xc2
  41828b:	outs   dx,DWORD PTR ds:[esi]
  41828c:	add    eax,0x266d4886
  418291:	imul   esp,esi,0xbf90b706
  418297:	iret   
  418298:	push   esi
  418299:	jns    0x4182a5
  41829b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41829c:	mov    dh,0x4d
  41829e:	mov    al,ds:0x1652fd78
  4182a3:	mov    edi,0x27b20aa5
  4182a8:	jbe    0x418307
  4182aa:	cmc    
  4182ab:	dec    esp
  4182ac:	mov    ah,0xc0
  4182ae:	sub    eax,0x3d58390
  4182b3:	hlt    
  4182b4:	jle    0x418299
  4182b6:	test   BYTE PTR fs:[eax+0x70],al
  4182ba:	loop   0x4182d3
  4182bc:	in     eax,0xd4
  4182be:	jno    0x41833f
  4182c0:	stos   BYTE PTR es:[edi],al
  4182c1:	adc    eax,0xd5957c1c
  4182c6:	add    eax,0x16685c80
  4182cb:	add    DWORD PTR [edi+0x1],esi
  4182ce:	test   BYTE PTR [edx*4+0x25523b2d],0x16
  4182d6:	jg     0x418277
  4182d8:	cdq    
  4182d9:	jns    0x4182d9
  4182db:	add    DWORD PTR [eax+0x3e],edx
  4182de:	repz pop edx
  4182e0:	mov    ecx,0x87d20034
  4182e5:	scas   eax,DWORD PTR es:[edi]
  4182e6:	pop    ebp
  4182e7:	pop    ss
  4182e8:	mov    esp,0x5665c03b
  4182ed:	rol    BYTE PTR [ebx-0x68],cl
  4182f0:	test   eax,0x5f862edf
  4182f5:	mov    al,ds:0x38723db6
  4182fa:	mov    ds:0xf155a1b0,al
  4182ff:	je     0x4182c3
  418301:	hlt    
  418302:	mov    eax,?
  418304:	fcom   QWORD PTR [edi]
  418306:	inc    ebx
  418307:	enter  0x2c57,0xf3
  41830b:	xchg   esi,eax
  41830c:	mov    ds:0x5bb8fc4f,al
  418311:	jge    0x4182d7
  418313:	mov    ebx,0xa06d7869
  418318:	inc    esi
  418319:	xchg   ecx,eax
  41831a:	test   eax,0xc529d15
  41831f:	ror    BYTE PTR [eax+0xe],1
  418322:	data16 and BYTE PTR [esi-0x61],0x15
  418327:	xor    eax,0x7fbd7446
  41832c:	cmp    eax,0xa997ee8a
  418331:	dec    esp
  418332:	adc    BYTE PTR [esi],cl
  418334:	mov    ds:0xc7b311c1,eax
  418339:	and    cl,ch
  41833b:	and    cl,ah
  41833d:	xchg   ebx,eax
  41833e:	pop    eax
  41833f:	pop    ebp
  418340:	js     0x418304
  418342:	aaa    
  418343:	test   DWORD PTR [edx+0x64ad6e63],edi
  418349:	call   FWORD PTR [ecx-0x30]
  41834c:	or     al,0x6e
  41834e:	mov    DWORD PTR [esi+0x59],edx
  418351:	ret    
  418352:	add    al,BYTE PTR [ebp-0x428aaf14]
  418358:	mov    al,ds:0x2e55803
  41835d:	mov    ecx,0x2ba42f23
  418362:	in     al,0x56
  418364:	ds aam 0x68
  418367:	ret    
  418368:	xor    esi,DWORD PTR [edx+ebx*8+0x16]
  41836c:	mov    DWORD PTR [esp+eax*8-0x307da6f4],0x60af4b73
  418377:	jns    0x418372
  418379:	sbb    cl,ah
  41837b:	fisub  WORD PTR [esi-0x2d]
  41837e:	pop    es
  41837f:	push   edi
  418380:	sub    al,0xb0
  418382:	test   DWORD PTR [esi+0x1d3d4255],eax
  418388:	push   ebx
  418389:	add    al,0x31
  41838b:	addr16 pop esi
  41838d:	(bad)  
  41838e:	retf   
  41838f:	mov    cl,0x8
  418391:	mov    dl,0x5
  418393:	mov    ch,0x8c
  418395:	push   0xfd80b3b5
  41839a:	push   ds
  41839b:	inc    edx
  41839c:	and    eax,0x27579d26
  4183a1:	add    DWORD PTR [ebp-0x6a],edx
  4183a4:	add    ah,BYTE PTR [ebp+0x62]
  4183a7:	mov    esp,0xcc4da7d1
  4183ac:	sbb    BYTE PTR [edi+0x72],bh
  4183af:	icebp  
  4183b0:	sub    al,0x8b
  4183b2:	repnz aad 0xf1
  4183b5:	push   cs
  4183b6:	adc    cl,BYTE PTR [edi+ebp*2]
  4183b9:	dec    eax
  4183ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183bb:	fs ds ja 0x4183df
  4183bf:	push   0x4e5d031
  4183c4:	fcom   DWORD PTR [ecx]
  4183c6:	ret    0x190e
  4183c9:	jne    0x418356
  4183cb:	cld    
  4183cc:	(bad)  
  4183cd:	in     al,dx
  4183ce:	dec    edx
  4183cf:	xchg   ecx,eax
  4183d0:	sbb    BYTE PTR [esi-0x71],ah
  4183d3:	sbb    al,BYTE PTR [ebx]
  4183d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d6:	retf   
  4183d7:	pop    edi
  4183d8:	outs   dx,BYTE PTR ds:[esi]
  4183d9:	pop    edx
  4183da:	mov    ebx,0xbe359946
  4183df:	xor    bh,BYTE PTR [ecx*1-0x770d145f]
  4183e6:	ja     0x41843e
  4183e8:	mov    ebp,0xccc5c7a8
  4183ed:	pop    ecx
  4183ee:	push   eax
  4183ef:	lods   al,BYTE PTR ds:[esi]
  4183f0:	outs   dx,DWORD PTR ds:[esi]
  4183f1:	push   edx
  4183f2:	push   edx
  4183f3:	cmp    eax,0x93c9f5f9
  4183f8:	ret    0xd463
  4183fb:	enter  0x8fdd,0xad
  4183ff:	adc    cl,BYTE PTR [ebx+0x1d24d2e8]
  418405:	mov    eax,ds:0x29ce665b
  41840a:	lock setg dh
  41840e:	rcr    DWORD PTR [esi-0x18049533],0x5
  418415:	mov    WORD PTR [ecx+0x4c73a053],ss
  41841b:	inc    ecx
  41841c:	push   ebp
  41841d:	mov    edi,0x258c2b04
  418422:	push   edx
  418423:	imul   esi,ebx,0x247a992c
  418429:	sbb    ecx,DWORD PTR [ecx]
  41842b:	sbb    eax,0xa191683e
  418430:	cmp    dl,BYTE PTR [esi]
  418432:	xchg   DWORD PTR [ecx],eax
  418434:	mov    eax,0x38ff575c
  418439:	jp     0x418438
  41843b:	ret    0xb07f
  41843e:	dec    esi
  41843f:	std    
  418440:	cli    
  418441:	adc    cl,BYTE PTR [esi-0xf]
  418444:	jle    0x418429
  418446:	push   edi
  418447:	fs xchg edx,eax
  418449:	hlt    
  41844a:	or     al,0x5c
  41844c:	out    0x8b,eax
  41844e:	retf   0xe525
  418451:	jge    0x4183f4
  418453:	fwait
  418454:	xchg   esi,eax
  418455:	aam    0x15
  418457:	inc    esi
  418458:	fbld   TBYTE PTR [edx]
  41845a:	jne    0x418430
  41845c:	xchg   BYTE PTR [ecx-0x62],cl
  41845f:	ror    DWORD PTR [ecx-0x2d3643d2],cl
  418465:	sub    edi,DWORD PTR [ecx]
  418467:	jno    0x4184da
  418469:	adc    eax,0x4e4979cb
  41846e:	test   al,0xc6
  418470:	cmp    DWORD PTR [ecx],edi
  418472:	int    0xaa
  418474:	repnz ins DWORD PTR es:[edi],dx
  418476:	cli    
  418477:	shl    DWORD PTR [ebp+0x22],cl
  41847a:	mov    edx,?
  41847c:	xor    BYTE PTR [edx+0x5c4bde86],bh
  418482:	iret   
  418483:	mov    esi,0x2c4e896a
  418488:	adc    ebp,edi
  41848a:	mov    ds:0xe45a8165,al
  41848f:	push   eax
  418490:	pop    ebx
  418491:	in     eax,0x38
  418493:	idiv   BYTE PTR [eax+eax*4+0x1efcc11]
  41849a:	ror    DWORD PTR [ebp-0x1aaf7c7d],1
  4184a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a2:	push   ecx
  4184a3:	loope  0x418462
  4184a5:	dec    ecx
  4184a6:	(bad)  
  4184a7:	mov    edx,0x329d2d77
  4184ac:	aad    0x9d
  4184ae:	mov    edx,0x8521264f
  4184b3:	js     0x41852b
  4184b5:	dec    ebp
  4184b6:	xor    DWORD PTR [ebp-0x6141fe5a],esi
  4184bc:	adc    eax,0x67452421
  4184c1:	test   ebp,esp
  4184c3:	push   0x22794ee
  4184c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c9:	data16 jle 0x418468
  4184cc:	push   cs
  4184cd:	sbb    eax,0x71b41e92
  4184d2:	fisub  WORD PTR [esi-0x74]
  4184d5:	ret    
  4184d6:	xor    eax,0xab20964e
  4184db:	sub    eax,DWORD PTR [eax]
  4184dd:	fisttp QWORD PTR [esi]
  4184df:	shr    DWORD PTR [edi+0x1e],0x13
  4184e3:	jp     0x4184a9
  4184e5:	pop    ecx
  4184e6:	or     al,BYTE PTR [edx-0x536d99f0]
  4184ec:	inc    esi
  4184ed:	ja     0x4184a5
  4184ef:	aas    
  4184f0:	push   ds
  4184f1:	dec    eax
  4184f2:	jbe    0x418516
  4184f4:	mul    BYTE PTR [eax+0x4b0de27e]
  4184fa:	adc    bl,BYTE PTR [ebp-0x76302f14]
  418500:	mov    WORD PTR [eax],?
  418502:	jno    0x418542
  418504:	popa   
  418505:	clc    
  418506:	fwait
  418507:	into   
  418508:	add    BYTE PTR [ecx+0x7d],ah
  41850b:	mov    esi,0x6f6dcff2
  418510:	xchg   esp,eax
  418511:	lea    eax,[ebp-0x1b0524c6]
  418517:	dec    ebp
  418518:	add    BYTE PTR [edx],0xe5
  41851b:	jns    0x41850e
  41851d:	sti    
  41851e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41851f:	mov    bh,0x5e
  418521:	not    DWORD PTR [esi]
  418523:	sbb    al,0x87
  418525:	shl    BYTE PTR [ecx+0x3ec4d0d7],1
  41852b:	push   0xffffff86
  41852d:	sub    al,BYTE PTR [edi+0x1c3fc8e3]
  418533:	sbb    dh,al
  418535:	ss pop ebp
  418537:	jl     0x418569
  418539:	sbb    esp,DWORD PTR [ebx-0x3f9e2b5b]
  41853f:	fstp   TBYTE PTR [ebx+0x3cf7f207]
  418545:	into   
  418546:	jb     0x418537
  418548:	xchg   ecx,eax
  418549:	jmp    0x41856c
  41854b:	xlat   BYTE PTR ds:[ebx]
  41854c:	(bad)  
  41854d:	jle    0x418565
  41854f:	add    edx,DWORD PTR es:[edi+0x40]
  418553:	enter  0x8ea9,0x73
  418557:	inc    esi
  418558:	fistp  QWORD PTR [edx-0x5c98020f]
  41855e:	fidivr DWORD PTR [ecx]
  418560:	pop    es
  418561:	retf   
  418562:	(bad)  
  418563:	adc    DWORD PTR [edi],ebp
  418565:	add    al,0x8e
  418567:	in     eax,dx
  418568:	call   0x4da95d8b
  41856d:	js     0x41851f
  41856f:	pop    ss
  418570:	psubsb mm7,QWORD PTR [esi]
  418573:	not    BYTE PTR [ebx+0x1]
  418576:	mov    dh,ch
  418578:	mov    dl,0xca
  41857a:	mov    ds:0xc7fd9514,eax
  41857f:	loope  0x4185fd
  418581:	fsubr  DWORD PTR [edi+ebp*1-0x70f7d6]
  418588:	cwde   
  418589:	test   eax,0x3bc6ad09
  41858e:	loopne 0x418604
  418590:	push   esp
  418591:	dec    eax
  418592:	pop    es
  418593:	loope  0x41858c
  418595:	rcr    ebx,0xf3
  418598:	xor    al,0xab
  41859a:	mov    bh,0x9a
  41859c:	xchg   BYTE PTR [edi-0x66ab0678],cl
  4185a2:	xor    BYTE PTR [esi+0x58],ah
  4185a5:	repnz mov edx,0x880b20b6
  4185ab:	adc    DWORD PTR [ebx-0x3007e33f],ebx
  4185b1:	mov    BYTE PTR [edx],al
  4185b3:	fdivr  QWORD PTR [eax+0x2b]
  4185b6:	xor    edx,edi
  4185b8:	inc    ebp
  4185b9:	jecxz  0x418636
  4185bb:	pop    edx
  4185bc:	jbe    0x4185c8
  4185be:	cdq    
  4185bf:	hlt    
  4185c0:	pop    edi
  4185c1:	out    dx,eax
  4185c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c3:	and    ebp,edi
  4185c5:	sbb    DWORD PTR [ebp-0x2081d996],edx
  4185cb:	sar    DWORD PTR [edi-0x78dbcf98],0x85
  4185d2:	mov    eax,0x9c0c0261
  4185d7:	add    esp,DWORD PTR [esp+eiz*8-0x80]
  4185db:	dec    esp
  4185dc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4185de:	and    al,BYTE PTR [edx+0x5d]
  4185e1:	cmp    BYTE PTR [ecx-0x5c],0xd3
  4185e5:	or     edx,DWORD PTR [edx+0x57]
  4185e8:	in     eax,dx
  4185e9:	or     ch,al
  4185eb:	inc    ebx
  4185ec:	fdiv   QWORD PTR [ebx]
  4185ee:	mov    ecx,0x93d0f70a
  4185f3:	and    al,0x1f
  4185f5:	adc    eax,0x7b53bd9d
  4185fa:	cmove  ecx,DWORD PTR [ebx+0x78]
  4185fe:	mov    esp,ebx
  418600:	mov    ecx,0x152d715a
  418605:	pop    eax
  418606:	push   ecx
  418607:	fild   DWORD PTR [ecx-0x46]
  41860a:	push   eax
  41860b:	push   es
  41860c:	call   DWORD PTR [ebp+0x74f16fe9]
  418612:	mov    ds:0xe54b21e6,eax
  418617:	adc    al,0x0
  418619:	jb     0x4185d8
  41861b:	xchg   DWORD PTR ds:0x45f2eac5,esi
  418621:	nop
  418622:	or     ch,ch
  418624:	dec    esi
  418625:	xchg   esi,eax
  418626:	cmc    
  418627:	in     al,dx
  418628:	pusha  
  418629:	enter  0x942,0xdc
  41862d:	xchg   edi,eax
  41862e:	test   BYTE PTR [ecx+0x2f],dl
  418631:	js     0x41869f
  418633:	imul   ebx,DWORD PTR [edi],0x35
  418636:	mov    edi,0xe072a0aa
  41863b:	(bad)  
  41863c:	xchg   ecx,eax
  41863d:	or     cl,BYTE PTR [edi]
  41863f:	sbb    BYTE PTR [edi+edi*2+0x2f],bh
  418643:	pop    edx
  418644:	add    al,0x7c
  418646:	cmp    DWORD PTR [edi],edx
  418648:	sbb    esi,DWORD PTR [edx+ebp*4+0x4e]
  41864c:	or     ebx,edi
  41864e:	cld    
  41864f:	xchg   edx,eax
  418650:	cmp    bh,0xaf
  418653:	sbb    eax,0xa0266ac
  418658:	shl    BYTE PTR [ebp+0x5ee985d6],0x5c
  41865f:	xchg   esi,eax
  418660:	pop    DWORD PTR ds:[ecx]
  418663:	fimul  WORD PTR [eax]
  418665:	pusha  
  418666:	mov    ecx,0x92a10fb4
  41866b:	inc    edx
  41866c:	dec    ebp
  41866d:	out    0x4,al
  41866f:	cmp    edi,DWORD PTR [edi+0x51]
  418672:	loop   0x4186f2
  418674:	fwait
  418675:	js     0x418643
  418677:	shl    BYTE PTR [ecx+0xa469d4d],1
  41867d:	enter  0x873,0x32
  418681:	xchg   eax,ebp
  418683:	mov    DWORD PTR [ecx+0x60],ebp
  418686:	jno    0x4186d5
  418688:	arpl   WORD PTR ds:0x668477fe,si
  41868e:	stos   DWORD PTR es:[edi],eax
  41868f:	fwait
  418690:	sbb    dh,BYTE PTR [ebp+0x70837b47]
  418696:	xchg   esp,eax
  418697:	retf   
  418698:	jae    0x41861e
  41869a:	jns    0x4186e7
  41869c:	ins    BYTE PTR es:[edi],dx
  41869d:	xchg   esi,eax
  41869e:	sub    esp,DWORD PTR [edx-0x433a775a]
  4186a4:	or     edx,esi
  4186a6:	inc    eax
  4186a7:	dec    ebp
  4186a8:	jecxz  0x418671
  4186aa:	push   ss
  4186ab:	rcl    edx,cl
  4186ad:	je     0x418701
  4186af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186b0:	jo     0x41865c
  4186b2:	jle    0x418657
  4186b4:	pop    es
  4186b5:	push   ebp
  4186b6:	cmc    
  4186b7:	pop    esi
  4186b8:	adc    BYTE PTR [ecx],0x53
  4186bb:	sbb    eax,0x64994e27
  4186c0:	jae    0x4186fa
  4186c2:	fisub  WORD PTR [edx+0x102800e7]
  4186c8:	adc    dh,BYTE PTR [ebx+0x41]
  4186cb:	je     0x41871e
  4186cd:	mov    ebp,DWORD PTR [eax-0x54]
  4186d0:	pop    ecx
  4186d1:	(bad)  
  4186d2:	jne    0x418713
  4186d4:	std    
  4186d5:	sbb    DWORD PTR [esi],esp
  4186d7:	mov    dl,cl
  4186d9:	repnz xor eax,DWORD PTR [esi+0x6d]
  4186dd:	inc    ecx
  4186de:	cs pop ebx
  4186e0:	push   ds
  4186e1:	add    eax,ebx
  4186e3:	addr16 push esi
  4186e5:	rcl    DWORD PTR gs:[ebp+0x0],0x50
  4186ea:	lods   eax,DWORD PTR ds:[esi]
  4186eb:	aas    
  4186ec:	jge    0x41874c
  4186ee:	pop    ss
  4186ef:	add    DWORD PTR ds:[esi+0x63],esp
  4186f3:	pop    edi
  4186f4:	in     al,0x75
  4186f6:	fwait
  4186f7:	push   esi
  4186f8:	int3   
  4186f9:	or     eax,0xc7781c3a
  4186fe:	or     DWORD PTR [ebp-0x5ea7f09],esp
  418704:	dec    eax
  418705:	jno    0x41875f
  418707:	cld    
  418708:	mov    bh,0xe5
  41870a:	ins    BYTE PTR es:[edi],dx
  41870b:	aaa    
  41870c:	sub    al,0x2a
  41870e:	call   0x5c85:0xc706728d
  418715:	in     eax,0x65
  418717:	(bad)  
  418718:	shl    BYTE PTR [edi-0x951d79d],1
  41871e:	or     BYTE PTR [edx-0x6d],ah
  418721:	lock jle 0x41876e
  418724:	xor    ebp,DWORD PTR [ebp+0x533b9c60]
  41872a:	(bad)  
  41872b:	data16 je 0x4187ab
  41872e:	sbb    edx,DWORD PTR [edi-0x26106f4b]
  418734:	mov    ds:0xbfcf0549,al
  418739:	or     ebp,edi
  41873b:	(bad)  
  41873c:	(bad)  
  41873d:	nop
  41873e:	pop    eax
  41873f:	fs clc 
  418741:	(bad)  
  418742:	bound  edx,QWORD PTR [eax]
  418744:	mov    esp,0x29482329
  418749:	jae    0x41877b
  41874b:	mov    cl,0x27
  41874d:	nop
  41874e:	jnp    0x41877a
  418750:	push   0x7c
  418752:	jecxz  0x41874c
  418754:	ret    
  418755:	fucomp st(2)
  418757:	aam    0xf
  418759:	and    al,0xd5
  41875b:	je     0x4186f3
  41875d:	out    0x46,eax
  41875f:	inc    eax
  418760:	(bad)  
  418761:	fistp  WORD PTR [eax-0x3092a654]
  418767:	mov    ds:0x7136075a,al
  41876c:	mov    dl,0x43
  41876e:	sub    DWORD PTR [edx+esi*4-0x73],esi
  418772:	mov    edi,0xfc19d116
  418777:	and    edx,DWORD PTR [ecx+0x26e7eb3a]
  41877d:	xor    BYTE PTR [eax-0x2455a287],bh
  418783:	add    DWORD PTR [eax+eiz*4+0x2b],eax
  418787:	xchg   edi,eax
  418788:	sahf   
  418789:	popf   
  41878a:	fwait
  41878b:	(bad)  
  41878c:	popa   
  41878d:	int3   
  41878e:	(bad)  
  41878f:	adc    eax,0xaa05e6b3
  418794:	jecxz  0x4187ff
  418796:	mov    eax,0xcb057fba
  41879b:	outs   dx,DWORD PTR ds:[esi]
  41879c:	scas   al,BYTE PTR es:[edi]
  41879d:	jno    0x418766
  41879f:	jae    0x41880c
  4187a1:	(bad)
  4187a5:	xchg   DWORD PTR [edx],esi
  4187a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a8:	pushf  
  4187a9:	loop   0x418748
  4187ab:	retf   0x7a9e
  4187ae:	sbb    eax,0xd2e202a9
  4187b3:	call   0x19a1:0x48b9fbae
  4187ba:	enter  0x3b25,0x3a
  4187be:	scas   eax,DWORD PTR es:[edi]
  4187bf:	retf   
  4187c0:	sbb    DWORD PTR [esi+0x443824ee],ecx
  4187c6:	lds    edi,FWORD PTR [esi-0x697d874]
  4187cc:	push   ebx
  4187cd:	mov    bl,0xdd
  4187cf:	inc    esp
  4187d0:	call   0xde29:0x6511ac19
  4187d7:	pop    esp
  4187d8:	add    al,0xda
  4187db:	pop    ds
  4187dc:	xchg   esi,eax
  4187dd:	stc    
  4187de:	js     0x4187b3
  4187e0:	mov    cl,0x98
  4187e2:	sub    dh,dl
  4187e4:	mov    eax,0x9d29489
  4187e9:	and    al,0xe0
  4187eb:	mov    al,ds:0xb2d7f1a
  4187f0:	or     edx,DWORD PTR [edi+0x74eb8a57]
  4187f6:	adc    DWORD PTR [edi+eax*4-0x72],edx
  4187fa:	loop   0x418862
  4187fc:	xchg   edx,eax
  4187fd:	and    DWORD PTR [eax+0x74663721],edi
  418803:	and    ebx,ebx
  418805:	loopne 0x4187c1
  418807:	lods   eax,DWORD PTR ds:[esi]
  418808:	(bad)  
  418809:	hlt    
  41880a:	dec    esi
  41880b:	jge    0x41882d
  41880d:	dec    edi
  41880e:	mov    al,0x6b
  418810:	jb     0x418817
  418812:	gs push cs
  418814:	nop
  418815:	sub    BYTE PTR [ecx-0x14605822],ch
  41881b:	scas   eax,DWORD PTR es:[edi]
  41881c:	in     eax,dx
  41881d:	loop   0x418839
  41881f:	fdivr  DWORD PTR [ebp+0x7e8946c2]
  418825:	outs   dx,DWORD PTR ds:[esi]
  418826:	lods   eax,DWORD PTR ds:[esi]
  418827:	popf   
  418828:	adc    dh,BYTE PTR [edi+0x22]
  41882b:	inc    ecx
  41882c:	jo     0x41883f
  41882e:	(bad)
  418831:	xchg   edi,eax
  418832:	dec    esp
  418833:	leave  
  418834:	xchg   esi,eax
  418835:	sbb    dl,BYTE PTR [esi-0x13]
  418838:	jg     0x4187d0
  41883a:	sub    ebx,DWORD PTR [esi+0x69624550]
  418840:	aad    0x7b
  418842:	cld    
  418843:	test   dl,al
  418845:	pusha  
  418846:	add    bl,bl
  418848:	test   BYTE PTR [edx],bl
  41884a:	rcl    BYTE PTR [edi+0x387ddc12],0x0
  418851:	push   0x963d4cf6
  418856:	jl     0x418823
  418858:	pop    edx
  418859:	aam    0x16
  41885b:	repnz push edi
  41885d:	jmp    0x41885c
  41885f:	in     al,dx
  418860:	mov    edi,0xcb7ec0d
  418865:	and    edx,DWORD PTR [edi+0x5a848fc]
  41886b:	jno    0x4188cb
  41886d:	clc    
  41886e:	mov    cs,WORD PTR [esi]
  418870:	jmp    0x418875
  418872:	sbb    esp,eax
  418874:	mov    al,ds:0x76395ab
  418879:	inc    esi
  41887a:	jl     0x418898
  41887c:	pop    edx
  41887d:	lahf   
  41887e:	mov    al,ds:0xb9d20351
  418883:	adc    DWORD PTR [ecx-0x29],edx
  418886:	push   0x59
  418888:	daa    
  418889:	cdq    
  41888a:	pusha  
  41888b:	fild   WORD PTR [edx]
  41888d:	inc    edi
  41888e:	aam    0xcf
  418890:	mov    edi,0xef70cd8a
  418895:	pop    esi
  418896:	lahf   
  418897:	add    cl,0x6e
  41889a:	idiv   al
  41889c:	mov    BYTE PTR [eax-0x68],cl
  41889f:	push   eax
  4188a0:	mov    esp,edi
  4188a2:	sbb    dh,dl
  4188a4:	xor    ah,BYTE PTR [edi+eiz*4+0x1a]
  4188a8:	mov    ebp,edi
  4188aa:	push   edi
  4188ab:	cwde   
  4188ac:	or     DWORD PTR [ebx+ebp*1],edx
  4188af:	iret   
  4188b0:	mov    ah,0x43
  4188b2:	add    BYTE PTR [ecx-0x73249e9b],ah
  4188b8:	shl    DWORD PTR [ecx+0x64],cl
  4188bb:	jg     0x4188e4
  4188bd:	jb     0x4188e6
  4188bf:	cmp    eax,0xc980f647
  4188c4:	dec    eax
  4188c5:	ja     0x41887e
  4188c7:	mov    esp,0x32dbaef5
  4188cc:	push   eax
  4188cd:	mov    edx,0x7dc767ac
  4188d2:	xor    al,0x4e
  4188d4:	ror    edx,1
  4188d6:	dec    edx
  4188d7:	mov    esp,0x38670e42
  4188dc:	out    0x53,al
  4188de:	mov    bh,0x2d
  4188e0:	pop    es
  4188e1:	aad    0x38
  4188e3:	push   ecx
  4188e4:	arpl   WORD PTR [ecx-0x2b77263d],ax
  4188ea:	out    dx,eax
  4188eb:	test   DWORD PTR [esi+ebp*4+0x32],0x1b399a2c
  4188f3:	sub    al,0xea
  4188f5:	mov    eax,ds:0x9baf4192
  4188fa:	fsqrt  
  4188fc:	lods   al,BYTE PTR ds:[esi]
  4188fd:	lds    eax,FWORD PTR [esi+0x34]
  418900:	mov    bl,BYTE PTR [ebx+0x2d]
  418903:	aas    
  418904:	jecxz  0x41897c
  418906:	jecxz  0x41891e
  418908:	cmp    BYTE PTR [edx-0x5e],ch
  41890b:	mov    ebp,edx
  41890d:	mul    bh
  41890f:	xor    eax,0xa4a6e01a
  418914:	mov    gs,WORD PTR [edi+0x18]
  418917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418918:	push   ebp
  418919:	inc    ebx
  41891a:	xor    al,0x7c
  41891c:	sub    dh,BYTE PTR [ebp-0x7d039314]
  418922:	addr16 push cs
  418924:	xchg   edi,eax
  418925:	mov    bl,0xec
  418927:	leave  
  418928:	stos   DWORD PTR es:[edi],eax
  418929:	imul   edx,edx,0xffffffcc
  41892c:	shr    DWORD PTR [ecx],cl
  41892e:	aam    0xfd
  418930:	outs   dx,DWORD PTR ds:[esi]
  418931:	ins    BYTE PTR es:[edi],dx
  418932:	mov    DWORD PTR [edi+eax*1],0x543460f0
  418939:	xor    al,0x1
  41893b:	pop    edx
  41893c:	pop    edx
  41893d:	pop    esp
  41893e:	dec    ebp
  41893f:	sub    ecx,DWORD PTR [ebp+0x5f]
  418942:	iret   
  418943:	push   esp
  418944:	mov    eax,0x30e64cc1
  418949:	and    BYTE PTR [si+0x43],ch
  41894d:	into   
  41894e:	and    DWORD PTR [ebx-0x57],esp
  418951:	or     eax,0x60b52a47
  418956:	loop   0x418990
  418958:	inc    ebx
  418959:	or     esi,esp
  41895b:	dec    esp
  41895c:	hlt    
  41895d:	scas   eax,DWORD PTR es:[edi]
  41895e:	mov    ds:0xdc9dd81c,eax
  418963:	mov    BYTE PTR [eax],bl
  418965:	push   ebx
  418966:	test   DWORD PTR [ebp-0x3d],edx
  418969:	dec    edi
  41896a:	jb     0x41899f
  41896c:	inc    ebp
  41896d:	mov    esp,0xe3b1815e
  418972:	outs   dx,DWORD PTR ds:[esi]
  418973:	nop
  418974:	and    dh,BYTE PTR [ebx+0x1c]
  418977:	ror    BYTE PTR [edx],1
  418979:	cmp    al,0x6b
  41897b:	jo     0x4189c4
  41897d:	loop   0x41893b
  41897f:	clc    
  418980:	(bad)  
  418981:	and    al,0x8c
  418983:	and    BYTE PTR [edx-0x30],dh
  418986:	(bad)  
  418987:	dec    ecx
  418988:	jbe    0x41898f
  41898a:	aad    0xf8
  41898c:	cli    
  41898d:	mov    WORD PTR [ebx+edi*2],cs
  418990:	(bad)  
  418991:	mov    esp,0x43615d7a
  418996:	xor    DWORD PTR [ebp-0x5b],ebx
  418999:	rol    DWORD PTR [esi+ecx*4],cl
  41899c:	pop    ecx
  41899d:	mov    ds,WORD PTR [esi]
  41899f:	hlt    
  4189a0:	fucomi st,st(4)
  4189a2:	rcl    esp,cl
  4189a4:	fcmovne st,st(0)
  4189a6:	das    
  4189a7:	aas    
  4189a8:	add    edi,DWORD PTR [edi+0x4e]
  4189ab:	sub    ebx,ecx
  4189ad:	call   0x578540ed
  4189b2:	or     eax,0xcefa23de
  4189b7:	in     al,0xc8
  4189b9:	mov    ch,0x6c
  4189bb:	sbb    cl,BYTE PTR gs:[ebp-0x44]
  4189bf:	add    eax,0xf1de09c1
  4189c4:	js     0x418962
  4189c6:	cmp    bl,dh
  4189c8:	mov    ds:0x931b5dd5,eax
  4189cd:	cmp    ebp,DWORD PTR ds:0x721984c4
  4189d3:	prefetch BYTE PTR [edi+edx*4]
  4189d7:	cmp    eax,0x953a35c3
  4189dc:	pop    ecx
  4189dd:	outs   dx,DWORD PTR ds:[esi]
  4189de:	pop    esp
  4189df:	loopne 0x418976
  4189e1:	imul   ecx,eax,0x71
  4189e4:	push   0xffffffe9
  4189e6:	and    al,0xe8
  4189e8:	in     al,0xe0
  4189ea:	jge    0x418976
  4189ec:	stc    
  4189ed:	push   0x6910a8e1
  4189f2:	fst    DWORD PTR [ebx-0x7345164]
  4189f8:	add    dh,BYTE PTR [esi]
  4189fa:	in     al,0x8e
  4189fc:	inc    edi
  4189fd:	ins    BYTE PTR es:[edi],dx
  4189fe:	pop    ebx
  4189ff:	xor    al,0x0
  418a01:	inc    edx
  418a02:	ins    BYTE PTR es:[edi],dx
  418a03:	dec    ebp
  418a04:	stos   BYTE PTR es:[edi],al
  418a05:	repnz into 
  418a07:	mov    edx,DWORD PTR ds:0x33f9ce5d
  418a0d:	inc    eax
  418a0e:	push   ecx
  418a0f:	sbb    dh,ch
  418a11:	call   0xca7038c9
  418a16:	cmp    DWORD PTR cs:[ebx-0x18],0xffffff90
  418a1b:	or     DWORD PTR [esi+0x61],0x34
  418a1f:	data16 fiadd DWORD PTR [edx+0x49]
  418a23:	or     eax,0x9e336b45
  418a28:	sahf   
  418a29:	xor    bl,0x61
  418a2c:	add    ebx,DWORD PTR ds:0x66134206
  418a32:	dec    eax
  418a33:	add    BYTE PTR [ebx-0x4d],0x22
  418a37:	mov    edx,0xcdf19d85
  418a3c:	scas   eax,DWORD PTR es:[edi]
  418a3d:	imul   eax,esi,0xb047b96
  418a43:	scas   eax,DWORD PTR es:[edi]
  418a44:	add    BYTE PTR [ebp+0x7cb08704],ch
  418a4a:	and    eax,0xb1bac39f
  418a4f:	mov    bh,BYTE PTR [eax-0x26976b7]
  418a55:	sti    
  418a56:	ins    DWORD PTR es:[edi],dx
  418a57:	leave  
  418a58:	pop    ds
  418a59:	mov    cl,0xbd
  418a5b:	xor    eax,0xff6a978b
  418a60:	inc    edx
  418a61:	xor    al,0x6b
  418a63:	or     al,0xe
  418a65:	mov    al,ds:0x17c48beb
  418a6a:	leave  
  418a6b:	in     eax,0x85
  418a6d:	inc    esp
  418a6e:	add    bl,BYTE PTR [ecx]
  418a70:	xchg   cl,dh
  418a72:	and    cl,BYTE PTR [esi]
  418a74:	inc    edx
  418a75:	xchg   DWORD PTR [esi+0x61cc8fe3],ecx
  418a7b:	mov    eax,0x3c286cd7
  418a80:	in     eax,dx
  418a81:	jge    0x418a54
  418a83:	sub    edi,edi
  418a85:	pop    ebx
  418a86:	fsub   DWORD PTR [ebp+0x6f]
  418a89:	pop    ebp
  418a8a:	out    dx,eax
  418a8b:	call   0x1b0ffaba
  418a90:	cmp    ch,BYTE PTR [ebp+0x5aeafb47]
  418a96:	mov    eax,ds:0xb055d079
  418a9b:	sbb    DWORD PTR [edx-0x27],edi
  418a9e:	sti    
  418a9f:	test   al,0xd0
  418aa1:	mov    ch,0xac
  418aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa4:	(bad)
  418aa9:	ins    BYTE PTR es:[edi],dx
  418aaa:	mov    bh,0xd4
  418aac:	xlat   BYTE PTR ds:[ebx]
  418aad:	mov    dh,bh
  418aaf:	add    eax,0x535a4da2
  418ab4:	outs   dx,BYTE PTR ds:[esi]
  418ab5:	xchg   BYTE PTR [esi],al
  418ab7:	lods   al,BYTE PTR ds:[esi]
  418ab8:	and    esp,DWORD PTR [esi]
  418aba:	ficomp WORD PTR [ebx-0x3c]
  418abd:	sti    
  418abe:	and    al,0xd1
  418ac0:	sti    
  418ac1:	les    eax,FWORD PTR [ebx]
  418ac3:	or     bl,BYTE PTR [eax+ecx*2+0x4e78e601]
  418aca:	jmp    0x418a78
  418acc:	inc    eax
  418acd:	dec    edx
  418ace:	aas    
  418acf:	and    BYTE PTR [edx+0x15],al
  418ad2:	mov    ah,0x9c
  418ad4:	sub    al,0xc9
  418ad6:	fstp   DWORD PTR [edi-0x6b]
  418ad9:	pop    ebx
  418ada:	mov    edi,0xf9404aca
  418adf:	push   ecx
  418ae0:	jge    0x418b55
  418ae2:	sub    BYTE PTR ds:0xdc890b28,0xc1
  418ae9:	jnp    0x418a97
  418aeb:	and    BYTE PTR [ebp+ebp*4+0x70],bh
  418aef:	(bad)  
  418af0:	gs mov ah,0x5d
  418af3:	(bad)  
  418af4:	(bad)  
  418af5:	jmp    0xb034afb6
  418afa:	div    DWORD PTR [edi+0x0]
  418afd:	rol    DWORD PTR [ecx+0x3331a260],0xed
  418b04:	add    al,0x79
  418b06:	mov    BYTE PTR [edx+0x8590c6a],bh
  418b0c:	jmp    0x418aea
  418b0e:	fcomip st,st(7)
  418b10:	repz jbe 0x418b66
  418b13:	sbb    BYTE PTR [eax],0x43
  418b16:	jle    0x418adc
  418b18:	fistp  QWORD PTR [edx]
  418b1a:	(bad)  
  418b1b:	(bad)  [edi+0x6]
  418b1e:	in     al,0xf
  418b20:	mov    al,0xe9
  418b22:	loop   0x418b69
  418b24:	jae    0x418b46
  418b26:	shr    ebp,0x88
  418b29:	inc    bp
  418b2b:	outs   dx,BYTE PTR ds:[esi]
  418b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b2d:	mov    DWORD PTR [ebp-0x1b868976],ebp
  418b33:	lahf   
  418b34:	stos   DWORD PTR es:[edi],eax
  418b35:	imul   eax,DWORD PTR [esi],0x65e7179d
  418b3b:	cmp    ebx,edx
  418b3d:	jbe    0x418b4b
  418b3f:	sbb    eax,0x339c1d24
  418b44:	lahf   
  418b45:	mov    al,ds:0x2ce8475c
  418b4a:	pop    ds
  418b4b:	mov    bl,0xd1
  418b4d:	psubsb mm0,QWORD PTR [ebp+edi*1+0x31]
  418b52:	fiadd  DWORD PTR [eax+0x7d284ad]
  418b58:	mov    eax,0x91b61689
  418b5d:	push   0xffffff90
  418b5f:	jp     0x418b5d
  418b61:	push   0xffffff9a
  418b63:	fnstcw WORD PTR ds:0x22955a52
  418b69:	daa    
  418b6a:	pop    edi
  418b6b:	mov    bh,0x55
  418b6d:	cmp    al,0xd1
  418b6f:	das    
  418b70:	cwde   
  418b71:	sahf   
  418b72:	push   0xffffffdc
  418b74:	pop    ecx
  418b75:	inc    edi
  418b76:	(bad)  
  418b78:	cs push es
  418b7a:	shl    BYTE PTR [ebx-0x5d],1
  418b7d:	pop    edi
  418b7e:	sbb    BYTE PTR [ebx-0x42f174e6],bh
  418b84:	push   eax
  418b85:	sahf   
  418b86:	mov    ebp,0x604eecd9
  418b8b:	mov    eax,0x330afd45
  418b90:	and    ah,0xa2
  418b93:	mov    ecx,0x8f3581f8
  418b98:	loopne 0x418bf5
  418b9a:	mov    DWORD PTR [esi],edx
  418b9c:	adc    dh,bl
  418b9e:	addr16 lock mov esp,0x4798cff6
  418ba5:	add    DWORD PTR [esi+ebx*8+0x3b8f3485],edx
  418bac:	out    0x85,al
  418bae:	push   cs
  418baf:	push   ebp
  418bb0:	sub    eax,0x1111770e
  418bb5:	stos   DWORD PTR es:[edi],eax
  418bb6:	sbb    DWORD PTR [ebx+0x20],ebx
  418bb9:	outs   dx,DWORD PTR ds:[esi]
  418bba:	pop    eax
  418bbb:	stos   BYTE PTR es:[edi],al
  418bbc:	stos   BYTE PTR es:[edi],al
  418bbd:	cs out 0x4a,eax
  418bc0:	sbb    ch,BYTE PTR [esi]
  418bc2:	out    0x41,eax
  418bc4:	ins    DWORD PTR es:[edi],dx
  418bc5:	push   0x62
  418bc7:	xor    eax,0x70b40100
  418bcc:	adc    eax,0xf00df9b0
  418bd1:	mov    ebx,0xc5c3a498
  418bd6:	pop    ecx
  418bd7:	fwait
  418bd8:	add    dl,al
  418bda:	int3   
  418bdb:	dec    eax
  418bdc:	cdq    
  418bdd:	out    0x31,al
  418bdf:	cmp    BYTE PTR ds:0x786c6d53,ch
  418be5:	and    al,BYTE PTR [ebp+0xab0390b]
  418beb:	mov    edx,0x6efb259
  418bf0:	jns    0x418c31
  418bf2:	xchg   edi,eax
  418bf3:	dec    ecx
  418bf4:	jne    0x418c24
  418bf6:	inc    ebp
  418bf7:	xor    ah,BYTE PTR [edx+0x1e]
  418bfa:	and    BYTE PTR [edi+ebx*8-0x2],al
  418bfe:	and    edx,DWORD PTR [edx-0x1c85934b]
  418c04:	out    0x2d,eax
  418c06:	stc    
  418c07:	nop    ecx
  418c0a:	into   
  418c0b:	in     eax,0x64
  418c0d:	ins    BYTE PTR es:[edi],dx
  418c0e:	xchg   ebx,ebp
  418c10:	inc    edx
  418c11:	js     0x418bcf
  418c13:	daa    
  418c14:	inc    esp
  418c15:	or     esi,edi
  418c17:	add    DWORD PTR [ecx-0xe],eax
  418c1a:	test   DWORD PTR ds:0x68d89aba,0x96735c20
  418c24:	int3   
  418c25:	dec    ebx
  418c26:	pop    edx
  418c27:	mov    edx,esp
  418c29:	cdq    
  418c2a:	aas    
  418c2b:	sbb    al,0x6f
  418c2d:	sub    al,0xd8
  418c2f:	(bad)  
  418c30:	aas    
  418c31:	push   ebx
  418c32:	mov    bh,BYTE PTR [ecx+0x48]
  418c35:	out    0x3f,eax
  418c37:	or     dh,bh
  418c39:	out    0x2b,al
  418c3b:	pop    es
  418c3c:	outs   dx,BYTE PTR ds:[esi]
  418c3d:	out    dx,eax
  418c3e:	adc    ah,ah
  418c40:	mov    edx,0xd3e3298d
  418c45:	out    dx,eax
  418c46:	imul   esi,ecx,0x56569bdc
  418c4c:	xor    edx,0xffffffac
  418c4f:	adc    BYTE PTR [ecx],al
  418c51:	fwait
  418c52:	sbb    eax,0xa5de3247
  418c57:	xchg   ebp,eax
  418c58:	add    ebp,DWORD PTR [ebx+0x2a]
  418c5b:	pushf  
  418c5c:	fild   DWORD PTR [eax]
  418c5e:	shl    DWORD PTR [esp+ebx*1-0x63],cl
  418c62:	sbb    ch,BYTE PTR [edx+ebx*2]
  418c65:	jae    0x418c24
  418c67:	imul   edi,esp,0x71
  418c6a:	dec    eax
  418c6b:	popa   
  418c6c:	push   esi
  418c6d:	lea    esi,[edi]
  418c6f:	mov    ecx,0xc202652c
  418c74:	inc    edx
  418c75:	aaa    
  418c76:	stos   DWORD PTR es:[edi],eax
  418c77:	xor    eax,0x2993ad38
  418c7c:	and    al,0x2
  418c7e:	lahf   
  418c7f:	leave  
  418c80:	loopne 0x418cce
  418c82:	stos   DWORD PTR es:[edi],eax
  418c83:	imul   ecx,ebx,0x9345eda7
  418c89:	stos   BYTE PTR es:[edi],al
  418c8a:	ror    BYTE PTR [edx+0x2d],1
  418c8d:	sbb    eax,0xe05dfc7c
  418c92:	sbb    ecx,DWORD PTR [esi-0x70]
  418c95:	adc    edi,DWORD PTR [edx-0x4f105853]
  418c9b:	(bad)  
  418c9c:	ins    BYTE PTR es:[edi],dx
  418c9d:	in     al,0x46
  418c9f:	and    dl,BYTE PTR [ecx+0x2e]
  418ca2:	add    eax,0x2d85b8e3
  418ca7:	and    ah,al
  418ca9:	inc    ecx
  418caa:	jp     0x418cf8
  418cac:	jg     0x418c39
  418cae:	mov    eax,0x70e74a1d
  418cb3:	stos   DWORD PTR es:[edi],eax
  418cb4:	sbb    ch,ah
  418cb6:	ss std 
  418cb8:	cs pop edx
  418cba:	xchg   sp,ax
  418cbc:	jp     0x418cc0
  418cbe:	or     BYTE PTR [edx],ah
  418cc0:	and    eax,0xcdde83f9
  418cc5:	pavgb  mm3,QWORD PTR [eax-0x36]
  418cc9:	pop    edi
  418cca:	aas    
  418ccb:	push   ebp
  418ccc:	jns    0x418cd5
  418cce:	mov    al,0x98
  418cd0:	test   DWORD PTR [esi+0x7f],eax
  418cd3:	imul   esi,DWORD PTR [ebp+0x76],0x67
  418cd7:	aad    0x78
  418cd9:	adc    eax,edx
  418cdb:	sbb    esi,DWORD PTR [ebx-0x51]
  418cde:	fisub  WORD PTR [edi+ebx*8-0xfea3cd7]
  418ce5:	add    bl,BYTE PTR [esi+ebx*1]
  418ce8:	pop    eax
  418ce9:	or     BYTE PTR [eax],cl
  418ceb:	push   ss
  418cec:	(bad)  
  418cee:	cdq    
  418cef:	lea    esi,[edi+0x5e659abe]
  418cf5:	push   edi
  418cf6:	fidiv  WORD PTR [edx-0x49938baf]
  418cfc:	fwait
  418cfd:	cmp    DWORD PTR [ebx],ebp
  418cff:	sbb    edx,eax
  418d01:	aaa    
  418d02:	xor    al,0x4b
  418d04:	jge    0x418cb4
  418d06:	pop    edx
  418d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d08:	mov    ebx,0xb514b332
  418d0d:	dec    DWORD PTR [edi-0x8153268]
  418d13:	stos   BYTE PTR es:[edi],al
  418d14:	sub    bl,BYTE PTR [esi]
  418d16:	sar    DWORD PTR [ecx],0x50
  418d19:	popa   
  418d1a:	icebp  
  418d1b:	aam    0x68
  418d1d:	stos   DWORD PTR es:[edi],eax
  418d1e:	add    eax,0x15f785bb
  418d23:	add    al,0xb9
  418d25:	jne    0x418cc5
  418d27:	sar    DWORD PTR [edx+0x29e0d93c],0xf0
  418d2e:	xchg   ebx,eax
  418d2f:	mov    edi,0xd371096f
  418d34:	or     bp,WORD PTR [edi]
  418d37:	fidiv  DWORD PTR [ebp+0x7]
  418d3a:	fld    st(0)
  418d3c:	ret    0xf125
  418d3f:	in     eax,0x94
  418d41:	cs xchg edi,eax
  418d43:	pop    ecx
  418d44:	push   0xd5bbe8d6
  418d49:	jno    0x418d98
  418d4b:	jg     0x418d15
  418d4d:	pop    es
  418d4e:	adc    DWORD PTR [eax],ecx
  418d50:	je     0x418d60
  418d52:	xor    ecx,DWORD PTR [esi]
  418d54:	inc    ebx
  418d55:	dec    ecx
  418d56:	fisubr DWORD PTR [eax+edx*8]
  418d59:	sbb    esp,DWORD PTR [esi+0x44]
  418d5c:	icebp  
  418d5d:	xor    dl,BYTE PTR ds:0xef9727c7
  418d63:	not    BYTE PTR [edx+0x38]
  418d66:	jno    0x418d36
  418d68:	cli    
  418d69:	arpl   WORD PTR [eax+eiz*2-0x54],bp
  418d6d:	fst    DWORD PTR [ebx]
  418d6f:	dec    eax
  418d70:	and    eax,0xaaf3e393
  418d75:	push   0xfe3b7d9a
  418d7a:	lds    esp,FWORD PTR [edx+0x76f39eb7]
  418d80:	pop    ss
  418d81:	cwde   
  418d82:	push   0x7f
  418d84:	sub    DWORD PTR [ebx+0x29],ebx
  418d87:	and    DWORD PTR [ebp-0x5],0xffffffec
  418d8b:	and    BYTE PTR [edx-0x722cb6af],bl
  418d91:	inc    esi
  418d92:	adc    esp,ecx
  418d94:	rcr    BYTE PTR [edx],0xf8
  418d97:	fadd   QWORD PTR [ecx]
  418d99:	adc    al,0xe7
  418d9b:	(bad)  
  418d9c:	mov    ds:0xecdb2b81,al
  418da1:	pop    es
  418da2:	gs sbb al,0x34
  418da5:	repz int 0x82
  418da8:	call   0x4d79069f
  418dad:	mov    eax,0x1f2e6144
  418db2:	mov    ebx,fs
  418db4:	pop    edi
  418db5:	into   
  418db6:	xor    BYTE PTR [edx],al
  418db8:	fsub   DWORD PTR [eax]
  418dba:	or     esi,edx
  418dbc:	xchg   DWORD PTR cs:[edx+edx*2+0x66d0244f],edi
  418dc4:	jecxz  0x418d57
  418dc6:	or     al,0xc3
  418dc8:	cmp    eax,0x8baa9199
  418dcd:	movlps QWORD PTR [eax],xmm1
  418dd0:	pusha  
  418dd1:	cwde   
  418dd2:	dec    ecx
  418dd3:	xchg   BYTE PTR [ecx+0x7c],al
  418dd6:	aad    0xf
  418dd8:	mov    ?,WORD PTR [esi]
  418dda:	stos   DWORD PTR es:[edi],eax
  418ddb:	pushf  
  418ddc:	mov    esi,0xde40e8ba
  418de1:	dec    edi
  418de2:	rcl    BYTE PTR [eax-0x3c],cl
  418de5:	jecxz  0x418d6a
  418de7:	js     0x418e20
  418de9:	lea    ecx,[ebp-0x361eb1b5]
  418def:	pop    es
  418df0:	ret    
  418df1:	call   0xcf594c4c
  418df6:	outs   dx,BYTE PTR ds:[esi]
  418df7:	out    dx,al
  418df8:	xor    dl,bl
  418dfa:	ret    0x7a74
  418dfd:	adc    ecx,DWORD PTR [ebp-0x4a04307d]
  418e03:	sbb    BYTE PTR [ebx-0x4],ch
  418e06:	pop    es
  418e07:	mov    bh,0xb8
  418e09:	cmp    al,0xb1
  418e0b:	sub    eax,0x8947688
  418e10:	fdivr  DWORD PTR ds:0xa6053b6f
  418e16:	and    DWORD PTR [eax-0x77],esp
  418e19:	std    
  418e1a:	in     al,dx
  418e1b:	int    0x89
  418e1d:	inc    ebp
  418e1e:	ins    BYTE PTR es:[edi],dx
  418e1f:	and    BYTE PTR [ecx+ebp*2+0x5f],bl
  418e23:	call   0xab3263d2
  418e28:	aas    
  418e29:	xchg   ebx,eax
  418e2a:	cmp    dh,BYTE PTR [ebx-0x7ad7707]
  418e30:	xchg   ecx,eax
  418e31:	imul   esp,DWORD PTR [esi-0x3420f5e4],0x21
  418e38:	mov    eax,0xfd178364
  418e3d:	cdq    
  418e3e:	jb     0x418ea2
  418e40:	into   
  418e41:	add    BYTE PTR [ecx-0x3c],al
  418e44:	fdiv   DWORD PTR [esi]
  418e46:	sbb    eax,0x1f048ad8
  418e4b:	clc    
  418e4c:	add    ecx,DWORD PTR ds:0x2dea0a1c
  418e52:	mov    WORD PTR [ecx],cs
  418e54:	add    esi,esi
  418e56:	sub    al,0x64
  418e58:	mov    al,ds:0x7d09935d
  418e5d:	inc    ebp
  418e5e:	retf   
  418e5f:	je     0x418dfd
  418e61:	push   eax
  418e62:	mov    bh,0x59
  418e64:	ds pop edx
  418e66:	mov    dh,BYTE PTR [edx+0x7fe1c951]
  418e6c:	popf   
  418e6d:	sub    eax,0xb194201b
  418e72:	int3   
  418e73:	hlt    
  418e74:	inc    edx
  418e75:	shr    DWORD PTR [esi+ebx*2],0x5c
  418e79:	pop    eax
  418e7a:	mov    ebx,0xdc7960c1
  418e7f:	xor    eax,0x629769cc
  418e84:	inc    eax
  418e85:	pop    esp
  418e86:	cmp    ch,BYTE PTR [ebx+0x7aba0cff]
  418e8c:	sbb    bl,BYTE PTR [ebp-0x5e]
  418e8f:	adc    DWORD PTR [ecx-0x1c],ecx
  418e92:	mov    edx,DWORD PTR [eax]
  418e94:	mov    al,ds:0xa789bd21
  418e99:	xchg   ebp,eax
  418e9a:	add    BYTE PTR [ecx+0x6c6ceec5],0x9f
  418ea1:	sahf   
  418ea2:	nop
  418ea3:	dec    ecx
  418ea4:	je     0x418eb2
  418ea6:	aas    
  418ea7:	test   eax,0xe28fae85
  418eac:	clc    
  418ead:	mov    WORD PTR [ebx],fs
  418eaf:	push   ecx
  418eb0:	add    DWORD PTR [ecx+0x626b31c3],esi
  418eb6:	dec    esp
  418eb7:	aam    0xa0
  418eb9:	lods   al,BYTE PTR ds:[esi]
  418eba:	jg     0x418e85
  418ebc:	int3   
  418ebd:	clc    
  418ebe:	es sub ch,dh
  418ec1:	mov    ebp,0x34ecb018
  418ec6:	inc    esi
  418ec7:	shl    BYTE PTR [ebp+0x7b],cl
  418eca:	xchg   esp,esi
  418ecc:	or     al,0xde
  418ece:	imul   eax,eax,0x9c5921ed
  418ed4:	scas   al,BYTE PTR es:[edi]
  418ed5:	push   edx
  418ed6:	cld    
  418ed7:	fwait
  418ed8:	out    0x78,al
  418eda:	mov    edx,0xa04f6e2d
  418edf:	outs   dx,BYTE PTR ds:[esi]
  418ee0:	dec    edi
  418ee1:	sbb    BYTE PTR [ecx+0x6985a20c],ch
  418ee7:	imul   edx,DWORD PTR [esi],0xffffffd4
  418eea:	mov    eax,0xc7fd5ef2
  418eef:	add    al,0x4e
  418ef1:	pop    ebp
  418ef2:	sbb    al,0x98
  418ef4:	dec    edx
  418ef5:	dec    esp
  418ef6:	xor    ebp,DWORD PTR [edx+0x1df0aec1]
  418efc:	mov    ds:0x177abdb9,al
  418f01:	mul    cl
  418f03:	call   0x984589b5
  418f08:	jmp    0x6809dfa7
  418f0d:	jmp    DWORD PTR [edx]
  418f0f:	fldcw  WORD PTR [ecx+edi*8-0x12]
  418f13:	xor    esi,DWORD PTR [ebx]
  418f15:	or     esi,edx
  418f17:	push   esp
  418f18:	jmp    0x7d33bea3
  418f1d:	(bad)  
  418f1e:	in     eax,0x33
  418f20:	adc    ebp,0x36
  418f23:	pushf  
  418f24:	dec    edx
  418f25:	mov    bh,0xef
  418f27:	xor    ah,ah
  418f29:	push   esi
  418f2a:	push   ecx
  418f2b:	add    eax,0x51e023ea
  418f30:	inc    esp
  418f31:	pop    edx
  418f32:	dec    ebp
  418f33:	cli    
  418f34:	pushf  
  418f35:	jb     0x418f00
  418f37:	(bad)  
  418f39:	gs jnp 0x418f9b
  418f3c:	xor    al,0x8d
  418f3e:	das    
  418f3f:	xor    eax,DWORD PTR ds:0xf8f34b0c
  418f45:	jns    0x418ed3
  418f47:	icebp  
  418f48:	mov    al,ds:0x17a86796
  418f4d:	mov    DWORD PTR [ebx+0x2d],ebp
  418f50:	or     eax,0x2092599c
  418f55:	xor    eax,0x2f2e2103
  418f5a:	xchg   edx,eax
  418f5b:	xor    BYTE PTR [edx],bl
  418f5d:	test   eax,0x898b3ecf
  418f62:	xor    ch,BYTE PTR [edi]
  418f64:	imul   ecx,DWORD PTR [ebp-0x7d857d5d],0xffffffa6
  418f6b:	inc    edi
  418f6c:	out    dx,eax
  418f6d:	icebp  
  418f6e:	mov    bl,0x7a
  418f70:	stc    
  418f71:	ret    
  418f72:	and    DWORD PTR [eax+eax*1+0x2cbce79b],0x5d
  418f7a:	into   
  418f7b:	popa   
  418f7c:	jbe    0x418fb3
  418f7e:	xlat   BYTE PTR ds:[ebx]
  418f7f:	add    al,0x28
  418f81:	test   DWORD PTR [ecx+0x70427456],ebp
  418f87:	mov    fs,WORD PTR [edi+0x6e]
  418f8a:	popf   
  418f8b:	ins    DWORD PTR es:[edi],dx
  418f8c:	gs jns 0x419002
  418f8f:	out    dx,al
  418f90:	add    esp,DWORD PTR [eax-0x2]
  418f93:	or     eax,0xf84625e3
  418f98:	sub    bh,ah
  418f9a:	push   ecx
  418f9b:	and    ecx,DWORD PTR [eax]
  418f9d:	mov    ebx,0xa1d8ef77
  418fa2:	jnp    0x418f25
  418fa4:	cdq    
  418fa5:	xor    BYTE PTR [esi],ah
  418fa7:	push   ds
  418fa8:	mov    cs,WORD PTR [eax+0x20]
  418fab:	xor    eax,0x3d283c2d
  418fb0:	adc    eax,0xac0a25b9
  418fb5:	jns    0x418ffd
  418fb7:	xchg   ecx,eax
  418fb8:	stos   BYTE PTR es:[edi],al
  418fb9:	(bad)  
  418fba:	(bad)  
  418fbb:	pushf  
  418fbc:	and    ebp,DWORD PTR [ebp-0xfb481b3]
  418fc2:	pop    ds
  418fc3:	dec    eax
  418fc4:	pop    ebx
  418fc5:	test   eax,0x538d1b14
  418fca:	sti    
  418fcb:	ror    BYTE PTR [ebx-0x73],cl
  418fce:	xchg   edi,eax
  418fcf:	out    dx,al
  418fd0:	and    DWORD PTR [edx-0x5a],ebx
  418fd3:	xchg   edx,eax
  418fd4:	push   edi
  418fd5:	cmp    bh,bh
  418fd7:	adc    BYTE PTR [ecx-0x5c],al
  418fda:	into   
  418fdb:	sub    DWORD PTR [edi+0x4a5409e9],edi
  418fe1:	xchg   ebx,edi
  418fe3:	out    0x9d,al
  418fe5:	add    al,0x85
  418fe7:	es aaa 
  418fe9:	arpl   dx,si
  418feb:	push   ss
  418fec:	pop    ss
  418fed:	repnz stos DWORD PTR es:[edi],eax
  418fef:	adc    ch,BYTE PTR [ebx]
  418ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff2:	xor    DWORD PTR [esi-0x3e],esi
  418ff5:	iret   
  418ff6:	aas    
  418ff7:	lea    esp,[ebp-0x4a]
  418ffa:	sbb    eax,0x36afa6eb
  418fff:	imul   DWORD PTR [eax]
  419001:	xchg   DWORD PTR [ebx+0x3d0143a5],edx
  419007:	and    al,0x7d
  419009:	push   ebx
  41900a:	inc    edi
  41900b:	cmc    
  41900c:	ret    
  41900d:	pop    ebx
  41900e:	adc    esi,DWORD PTR [ebx]
  419010:	fild   WORD PTR [esp+edi*8+0x5368f3c0]
  419017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419018:	and    BYTE PTR [ecx+eiz*8],bh
  41901b:	leave  
  41901c:	outs   dx,DWORD PTR ds:[esi]
  41901d:	mov    ebx,0xdd837cd
  419022:	mov    ds:0x1bc8c1bf,al
  419027:	pop    ss
  419028:	stos   DWORD PTR es:[edi],eax
  419029:	jle    0x41901e
  41902b:	dec    edi
  41902c:	mov    bl,0xfb
  41902e:	lds    edi,FWORD PTR [ebx-0x3d]
  419031:	jno    0x41904b
  419033:	mov    WORD PTR [edi+0xf],gs
  419036:	push   eax
  419037:	outs   dx,BYTE PTR ds:[esi]
  419038:	sub    eax,0x7f7c28d5
  41903d:	out    dx,eax
  41903e:	sar    DWORD PTR [edx-0x7],1
  419041:	arpl   WORD PTR [esi+0x18d6c894],sp
  419047:	pop    ecx
  419048:	and    dh,cl
  41904a:	pop    ebp
  41904b:	xchg   edx,eax
  41904c:	je     0x41903f
  41904e:	push   edi
  41904f:	lahf   
  419050:	add    al,0x20
  419052:	lock mov esi,0xb58e061f
  419059:	sub    DWORD PTR [eax],esi
  41905b:	adc    ah,bl
  41905d:	xchg   esi,eax
  41905e:	dec    ebp
  41905f:	mov    bh,0x81
  419061:	sti    
  419062:	pop    edx
  419063:	aad    0x5a
  419065:	add    bl,BYTE PTR [ecx]
  419067:	and    DWORD PTR [edi],esi
  419069:	adc    eax,0xaade91b3
  41906e:	gs adc al,0x10
  419071:	loop   0x4190d2
  419073:	aad    0x1a
  419075:	sub    dh,BYTE PTR [edx+0x2885d808]
  41907b:	test   DWORD PTR [esi+edx*1],edi
  41907e:	int3   
  41907f:	jmp    0x4190f8
  419081:	and    BYTE PTR [edx+0x10768870],0x73
  419088:	jg     0x419045
  41908a:	push   eax
  41908b:	jmp    0x39ed:0x42272c03
  419092:	cmp    eax,0x3121864a
  419097:	cwde   
  419098:	dec    esp
  419099:	cmp    bl,0x71
  41909c:	push   edx
  41909d:	xor    BYTE PTR [ebx],cl
  41909f:	or     ch,BYTE PTR [ecx+0xe1bac95]
  4190a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a6:	mov    ch,0xe9
  4190a8:	dec    ebx
  4190a9:	xchg   eax,esp
  4190ab:	sbb    eax,0xc6c8456b
  4190b0:	dec    esp
  4190b1:	std    
  4190b2:	push   edx
  4190b3:	fldcw  WORD PTR [ecx]
  4190b5:	nop
  4190b6:	sub    DWORD PTR ds:0x295571c,0xffffff93
  4190bd:	jb     0x419119
  4190bf:	and    DWORD PTR [esi-0x484fee26],edx
  4190c5:	cdq    
  4190c6:	xchg   esi,eax
  4190c7:	gs std 
  4190c9:	shl    BYTE PTR [esi],cl
  4190cb:	fistp  DWORD PTR [eiz*8+0x6d4d7638]
  4190d2:	and    ebp,DWORD PTR [ebx+0x49]
  4190d5:	dec    DWORD PTR [edi+0x4edb0a0e]
  4190db:	mov    edx,0x2034fa67
  4190e0:	inc    esi
  4190e1:	retf   0x7b0e
  4190e4:	and    ecx,DWORD PTR [edx-0x3f]
  4190e7:	xchg   ebx,eax
  4190e8:	aaa    
  4190e9:	xor    BYTE PTR [bp+si],ah
  4190ec:	xchg   ch,al
  4190ee:	mov    dl,0x3d
  4190f0:	dec    edx
  4190f1:	mov    dh,BYTE PTR [edx+0x461949bf]
  4190f7:	(bad)  
  4190f9:	pop    ds
  4190fa:	cmp    DWORD PTR [ecx],ebx
  4190fc:	out    dx,eax
  4190fd:	sub    DWORD PTR [eax],ecx
  4190ff:	mov    eax,ds:0x85499808
  419104:	jns    0x419118
  419106:	add    eax,0x8fc527d
  41910b:	inc    ebp
  41910c:	pop    ds
  41910d:	shr    DWORD PTR [ebp-0x80],1
  419110:	(bad)  
  419111:	shl    BYTE PTR [eax+0x2b9a1a45],0x3d
  419118:	clc    
  419119:	sub    al,BYTE PTR [ebp-0x53]
  41911c:	cwde   
  41911d:	mov    edx,0xbc00b90e
  419122:	adc    DWORD PTR [ebx],edx
  419124:	push   ebp
  419125:	mov    al,al
  419127:	dec    eax
  419128:	sub    al,0xc4
  41912a:	sbb    dh,BYTE PTR [ebp+0x49b5199d]
  419130:	pop    ss
  419131:	xor    eax,0xb74cf340
  419136:	pop    ecx
  419137:	mov    ds:0x5bfa143d,al
  41913c:	inc    edi
  41913d:	rcl    DWORD PTR [esi-0x1d],1
  419140:	and    esi,eax
  419142:	xor    al,0x2b
  419144:	and    bh,BYTE PTR gs:0xcf2a8936
  41914b:	push   ebx
  41914c:	pushf  
  41914d:	loope  0x419174
  41914f:	int3   
  419150:	lods   eax,DWORD PTR ds:[esi]
  419151:	sub    BYTE PTR [ebp-0x55],dl
  419154:	dec    ecx
  419155:	in     eax,dx
  419156:	add    edx,DWORD PTR [eax-0x2de74578]
  41915c:	popf   
  41915d:	sub    al,0x12
  41915f:	fdivr  st(5),st
  419161:	jbe    0x419171
  419163:	cmp    bl,bh
  419165:	mov    eax,ds:0x2d4d609b
  41916a:	xlat   BYTE PTR ss:[ebx]
  41916c:	aas    
  41916d:	adc    DWORD PTR [edx-0x63],ecx
  419170:	les    ecx,FWORD PTR [ebx-0x30]
  419173:	jno    0x419166
  419175:	jnp    0x419113
  419177:	adc    eax,0x144ea052
  41917c:	out    0x53,eax
  41917e:	cmp    bh,BYTE PTR [ebx]
  419180:	mov    WORD PTR [edx+edx*2],fs
  419183:	mov    bl,0x97
  419185:	fsub   QWORD PTR [edx+edx*1-0x6c]
  419189:	loop   0x4191a0
  41918b:	in     eax,dx
  41918c:	pop    ds
  41918d:	psrld  mm6,mm4
  419190:	pushf  
  419191:	push   ebp
  419192:	inc    edx
  419193:	sub    edx,DWORD PTR [esi]
  419195:	(bad)  
  419196:	sar    DWORD PTR [ebp-0x3d],0x8d
  41919a:	sar    esp,1
  41919c:	push   ebx
  41919d:	xor    bh,BYTE PTR [esi+0x1fec16f3]
  4191a3:	mov    ds:0x7e06766a,al
  4191a8:	jnp    0x4191cf
  4191aa:	jecxz  0x419147
  4191ac:	pushf  
  4191ad:	es popf 
  4191af:	push   0xffffff86
  4191b1:	aaa    
  4191b2:	or     ebx,esi
  4191b4:	jbe    0x4191da
  4191b6:	enter  0x1ae6,0xe4
  4191ba:	cmp    eax,DWORD PTR [edx-0x12]
  4191bd:	mov    edx,0xd5ab4c8d
  4191c2:	aad    0x4f
  4191c4:	imul   DWORD PTR ds:0x1ea3b86e
  4191ca:	jecxz  0x419193
  4191cc:	add    dl,bh
  4191ce:	push   ss
  4191cf:	mov    cl,0xdd
  4191d1:	in     al,dx
  4191d2:	sbb    ebp,ebx
  4191d4:	in     al,dx
  4191d5:	into   
  4191d6:	pop    ss
  4191d7:	mov    ah,0xde
  4191d9:	mov    eax,ds:0x38982ac5
  4191de:	jne    0x41916d
  4191e0:	sbb    DWORD PTR [edi-0x59],ebx
  4191e3:	call   0xbbd81ac5
  4191e8:	mov    ?,WORD PTR [ecx+eiz*8]
  4191eb:	ret    0x77d
  4191ee:	jns    0x419264
  4191f0:	repnz mov DWORD PTR [eax-0x51f3f53e],ecx
  4191f7:	(bad)  
  4191f9:	jge    0x41926e
  4191fb:	mov    bh,0x0
  4191fd:	pop    ecx
  4191fe:	lock out dx,eax
  419200:	leave  
  419201:	pop    ecx
  419202:	jo     0x4191bd
  419204:	test   BYTE PTR [ebx+0x79],al
  419207:	sub    bh,BYTE PTR [edi+0x6d9fa512]
  41920d:	cld    
  41920e:	pop    ss
  41920f:	aam    0x13
  419211:	cmc    
  419212:	rcr    ch,0xdb
  419215:	mov    edi,0x42124548
  41921a:	out    0x75,eax
  41921c:	mov    esi,0xd13906f5
  419221:	je     0x4191d6
  419223:	sub    edi,DWORD PTR [ecx+0x64]
  419226:	lods   eax,DWORD PTR ds:[esi]
  419227:	into   
  419228:	cld    
  419229:	test   BYTE PTR [eax-0x1d5e07e9],cl
  41922f:	pop    edi
  419230:	lds    ebx,FWORD PTR [esi+0x1b8411fc]
  419236:	retf   
  419237:	jg     0x419207
  419239:	mov    bh,0xed
  41923b:	xchg   esp,eax
  41923c:	sbb    DWORD PTR ds:0x7400588e,edi
  419242:	out    0x16,eax
  419244:	xor    dh,BYTE PTR [edi+0x4a2096e1]
  41924a:	add    DWORD PTR [ecx],ebx
  41924c:	cmp    edx,esi
  41924e:	loope  0x4192a3
  419250:	sbb    ebx,ebx
  419252:	push   ecx
  419253:	xor    al,0x67
  419255:	jl     0x41923c
  419257:	or     BYTE PTR [ebx+0x53a03b73],0x38
  41925e:	repz and bh,BYTE PTR [edi+0x6d]
  419262:	jmp    0x419204
  419264:	call   0xcee1:0xd6191f52
  41926b:	mov    esi,0x9a523ccc
  419270:	cmp    esi,DWORD PTR [ecx+0x46]
  419273:	sahf   
  419274:	push   ss
  419275:	mov    ah,ah
  419277:	scas   al,BYTE PTR es:[edi]
  419278:	inc    ebx
  419279:	ficomp DWORD PTR [eax-0x6fc25118]
  41927f:	push   ebx
  419280:	push   esp
  419281:	dec    ecx
  419282:	add    BYTE PTR [edi+0x75439fdf],bl
  419288:	adc    al,0x8f
  41928a:	cli    
  41928b:	sbb    BYTE PTR [ecx+0x48],cl
  41928e:	inc    si
  419290:	and    ah,BYTE PTR [ebx+0x159d6dc2]
  419296:	or     esi,DWORD PTR [ebp-0x72]
  419299:	sbb    esp,edi
  41929b:	sub    al,cl
  41929d:	inc    ebx
  41929e:	inc    BYTE PTR [eax]
  4192a0:	jb     0x41929c
  4192a2:	ror    DWORD PTR [ebp+0x5],cl
  4192a5:	jecxz  0x419235
  4192a7:	mov    ebx,0xd9cc11d3
  4192ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192ad:	fcom   QWORD PTR [eax]
  4192af:	push   0x74
  4192b1:	mov    bl,BYTE PTR [esi-0x6a9ea6c0]
  4192b7:	pop    edi
  4192b8:	jle    0x4192c7
  4192ba:	(bad)  
  4192bb:	call   0x8752:0x957ecba0
  4192c2:	fist   DWORD PTR [ecx+0x2559ccf4]
  4192c8:	loope  0x4192d5
  4192ca:	int3   
  4192cb:	pushf  
  4192cc:	call   DWORD PTR [ecx+0xa8977e]
  4192d2:	xor    al,0x9
  4192d4:	lahf   
  4192d5:	nop
  4192d6:	mov    ch,0xef
  4192d8:	out    dx,eax
  4192d9:	mov    esp,0x58e40b2e
  4192de:	aaa    
  4192df:	inc    ebx
  4192e0:	mov    cs,ebx
  4192e2:	cli    
  4192e3:	push   edi
  4192e4:	or     eax,0x8af38852
  4192e9:	mov    ds:0x3496503e,eax
  4192ee:	xchg   esi,eax
  4192ef:	add    ebp,DWORD PTR [esi+0x5c]
  4192f2:	add    DWORD PTR [ebp+0x18d39d40],ebp
  4192f8:	out    0x1f,al
  4192fa:	ret    
  4192fb:	add    ch,BYTE PTR [eax+0x23556ce1]
  419301:	in     al,dx
  419302:	loopne 0x419375
  419304:	and    eax,DWORD PTR [eax-0x3bd98694]
  41930a:	cmp    BYTE PTR [edx-0x7e40b1ee],0x4e
  419311:	push   cs
  419312:	popa   
  419313:	ss hlt 
  419315:	jno    0x4192e6
  419317:	leave  
  419318:	jge    0x41938b
  41931a:	fisttp WORD PTR [ebx+edi*1+0x5908471c]
  419321:	loope  0x4192d0
  419323:	lahf   
  419324:	pop    ds
  419325:	retf   0xff98
  419328:	rcr    BYTE PTR [ecx+0x3d],1
  41932b:	dec    ecx
  41932c:	pop    ss
  41932d:	xchg   ebx,eax
  41932e:	push   eax
  41932f:	loopne 0x41931e
  419331:	push   edx
  419332:	pop    esi
  419333:	mov    es,WORD PTR [ebx]
  419335:	cwde   
  419336:	sti    
  419337:	and    eax,edi
  419339:	loop   0x41931b
  41933b:	inc    ecx
  41933c:	aas    
  41933d:	js     0x419372
  41933f:	add    ch,0x80
  419342:	outs   dx,DWORD PTR ds:[esi]
  419343:	mov    esi,0x48215c81
  419348:	sub    esi,DWORD PTR [ebx+0x75]
  41934b:	(bad)  
  41934c:	jmp    0x41936d
  41934e:	sbb    al,BYTE PTR [ecx-0x77]
  419351:	je     0x419385
  419353:	jp     0x41938a
  419355:	pop    edx
  419356:	out    0x69,eax
  419358:	and    DWORD PTR [ebp+0x5c],ebp
  41935b:	pop    eax
  41935c:	push   ebx
  41935d:	mov    edx,DWORD PTR [ebp+0x3f01e151]
  419363:	fmul   DWORD PTR [edx+0x1cb78cbe]
  419369:	loope  0x419347
  41936b:	sub    eax,0x5b7089d4
  419370:	aad    0x67
  419372:	mov    bl,0xd4
  419375:	daa    
  419376:	fld    QWORD PTR [eax-0x59]
  419379:	or     eax,0x30e729a6
  41937e:	or     edi,0x24939c5c
  419384:	xchg   esp,esi
  419386:	or     DWORD PTR [edx-0x5c],ecx
  419389:	in     eax,0xae
  41938b:	mov    eax,0xff89eff
  419390:	dec    ecx
  419391:	xor    BYTE PTR [esi+0x72],bh
  419394:	sub    al,0x5d
  419396:	cmc    
  419397:	add    DWORD PTR [ebp+0x18be5372],0xca89502e
  4193a1:	push   ebx
  4193a2:	(bad)  
  4193a3:	pop    edi
  4193a4:	jle    0x419399
  4193a6:	cmp    BYTE PTR [esi-0x3a],ch
  4193a9:	add    DWORD PTR [ebx*1-0x2d0d9a5e],ebp
  4193b0:	sbb    eax,DWORD PTR [ebx+0xa16c661]
  4193b6:	push   0x336fcecb
  4193bb:	outs   dx,DWORD PTR ds:[esi]
  4193bc:	dec    ecx
  4193bd:	dec    eax
  4193be:	(bad)  
  4193bf:	add    al,0x44
  4193c1:	or     al,BYTE PTR [edi+eiz*8]
  4193c4:	fucomp st(7)
  4193c6:	sbb    DWORD PTR [ebx+0x562d1657],ebx
  4193cc:	lea    ebx,[edx]
  4193ce:	nop
  4193cf:	ret    0x946a
  4193d2:	lea    ecx,[esi+0x1d631a95]
  4193d8:	lods   eax,DWORD PTR ds:[esi]
  4193d9:	lock jne 0x419382
  4193dc:	inc    eax
  4193dd:	shr    DWORD PTR [esi+0x26],cl
  4193e0:	sub    al,0x4a
  4193e2:	adc    al,0xbe
  4193e4:	or     edi,DWORD PTR [ecx]
  4193e6:	inc    esi
  4193e7:	xor    al,0x88
  4193e9:	stos   DWORD PTR es:[edi],eax
  4193ea:	aaa    
  4193eb:	icebp  
  4193ec:	mov    ds:0xf2eca771,eax
  4193f1:	test   al,0x7f
  4193f3:	xchg   ecx,eax
  4193f4:	ja     0x4193b7
  4193f6:	stc    
  4193f7:	neg    DWORD PTR [eax+esi*4+0x54]
  4193fb:	sub    BYTE PTR [eax-0x1c],cl
  4193fe:	into   
  4193ff:	leave  
  419400:	push   esp
  419401:	mov    edi,0x929aaf37
  419406:	fwait
  419407:	jb     0x419406
  419409:	mov    edi,0x45c92867
  41940e:	jbe    0x41942c
  419410:	shl    DWORD PTR [ebp-0x77310d2f],cl
  419416:	jnp    0x4193a0
  419418:	inc    esp
  419419:	das    
  41941a:	mov    edi,0xa72ff323
  41941f:	dec    ebp
  419420:	arpl   WORD PTR [edi+eax*1],cx
  419423:	ror    bh,0x9e
  419426:	dec    esp
  419427:	push   eax
  419428:	shr    BYTE PTR es:[esp+edi*4-0x1b],0x55
  41942e:	dec    esp
  419430:	sub    DWORD PTR [edi],eax
  419432:	scas   al,BYTE PTR es:[edi]
  419433:	aas    
  419434:	mov    ecx,0xb919657c
  419439:	adc    al,BYTE PTR [edi+ebp*4-0x38]
  41943d:	lods   al,BYTE PTR ds:[esi]
  41943e:	scas   eax,DWORD PTR es:[edi]
  41943f:	inc    eax
  419440:	cwde   
  419441:	xchg   edx,eax
  419442:	sbb    BYTE PTR [ebp+0x13],al
  419445:	pop    ebx
  419446:	in     al,dx
  419447:	push   es
  419448:	mov    eax,0x5f1b302e
  41944d:	mov    dl,0x6b
  41944f:	sbb    BYTE PTR [esp+ebx*8],dh
  419452:	es dec esp
  419454:	test   bh,dl
  419456:	aam    0xc6
  419458:	inc    ebx
  419459:	push   ebp
  41945a:	mov    eax,ds:0x21da8ccb
  41945f:	mov    edx,0xf67e02d6
  419464:	inc    esi
  419465:	popf   
  419466:	inc    ecx
  419467:	in     eax,0x27
  419469:	jge    0x4193f6
  41946b:	push   0xffffff83
  41946d:	(bad)  
  41946e:	lea    esp,[esp+ebp*8+0x5]
  419472:	aaa    
  419473:	fstp   DWORD PTR [ebp-0x2f]
  419476:	pop    esi
  419477:	in     eax,0x4
  419479:	(bad)  
  41947a:	jp     0x419413
  41947c:	cmp    ah,BYTE PTR ds:0xf94355c8
  419482:	mov    esi,0x8508e9d
  419488:	sbb    al,0xd1
  41948a:	test   al,0x7e
  41948c:	lods   eax,DWORD PTR ds:[esi]
  41948d:	in     al,dx
  41948e:	xor    eax,0xcb87a757
  419493:	push   ebp
  419494:	pop    eax
  419495:	pop    es
  419496:	(bad)  
  419497:	into   
  419498:	sub    eax,0x8af96f6d
  41949d:	xor    al,0xe
  41949f:	inc    ecx
  4194a0:	sub    al,0x75
  4194a2:	sbb    DWORD PTR [eax-0x38],edi
  4194a5:	test   ecx,edi
  4194a7:	ins    BYTE PTR es:[edi],dx
  4194a8:	cli    
  4194a9:	int3   
  4194aa:	popa   
  4194ab:	push   eax
  4194ac:	mov    esi,0x79f9bb33
  4194b1:	pop    ecx
  4194b2:	sahf   
  4194b3:	push   cs
  4194b4:	sbb    ch,BYTE PTR [ebx]
  4194b6:	or     edi,DWORD PTR [edi-0x39]
  4194b9:	ret    
  4194ba:	retf   0x64b5
  4194bd:	push   edi
  4194be:	std    
  4194bf:	(bad)  
  4194c0:	jne    0x419525
  4194c2:	in     al,dx
  4194c3:	sar    BYTE PTR [eax+0x5c2d5e8b],1
  4194c9:	pop    edx
  4194ca:	sbb    al,0x24
  4194cc:	push   0x75
  4194ce:	cmp    eax,0x8f564995
  4194d3:	das    
  4194d4:	adc    dh,BYTE PTR [esi-0x25b2b08e]
  4194da:	(bad)  
  4194db:	and    bh,BYTE PTR [eax+0x7fe7de4d]
  4194e1:	dec    edx
  4194e2:	imul   ebp,eax,0xfc676227
  4194e8:	rol    DWORD PTR [eax],1
  4194ea:	je     0x4194d6
  4194ec:	or     eax,0xe365d397
  4194f1:	dec    edx
  4194f2:	mov    BYTE PTR [ebx],dl
  4194f4:	lock xchg esi,ebp
  4194f7:	shl    esi,1
  4194f9:	stc    
  4194fa:	or     edi,DWORD PTR [ebp+edi*2+0x46]
  4194fe:	xchg   esp,eax
  4194ff:	or     eax,0xd1b91f74
  419504:	xor    ch,BYTE PTR [esi-0x5f5692d]
  41950a:	mov    DWORD PTR [esi-0x2c],esp
  41950d:	out    dx,al
  41950e:	jnp    0x419523
  419510:	cld    
  419511:	scas   eax,DWORD PTR es:[edi]
  419512:	pop    ecx
  419513:	or     DWORD PTR [edi],ecx
  419515:	push   ss
  419516:	push   0xb8eb81e5
  41951b:	retf   0x4a5f
  41951e:	es mov al,al
  419521:	cld    
  419522:	pop    esi
  419523:	mov    ebp,0x4981f01d
  419528:	jno    0x419562
  41952a:	dec    eax
  41952b:	push   es
  41952c:	cmp    bl,BYTE PTR [edx+ecx*1+0x4f]
  419530:	(bad)  
  419531:	lock pusha 
  419533:	xchg   al,dl
  419535:	push   0x73ba1461
  41953a:	xlat   BYTE PTR ds:[ebx]
  41953b:	and    DWORD PTR [ecx-0x7927f212],edi
  419541:	push   edx
  419542:	xchg   esi,eax
  419543:	mov    ch,0xe7
  419545:	and    al,0xdc
  419547:	(bad)  
  419549:	push   DWORD PTR [edx+esi*8-0x5aa5441b]
  419550:	push   ebx
  419551:	cmp    BYTE PTR [eax-0x9],bh
  419554:	mov    eax,ds:0xd9962a9f
  419559:	sbb    cl,ch
  41955b:	jmp    0xbbe2c5d
  419560:	stos   DWORD PTR es:[edi],eax
  419561:	fst    DWORD PTR [edi-0x566e148]
  419567:	pop    ecx
  419568:	mov    eax,ds:0x1a64a830
  41956d:	xchg   esi,eax
  41956e:	adc    eax,0xefe68aeb
  419573:	ss call 0xcea4df86
  419579:	push   edi
  41957a:	rcl    DWORD PTR [esi+edx*1],1
  41957d:	sahf   
  41957e:	jae    0x419581
  419580:	and    ebp,ebp
  419582:	xchg   esp,eax
  419583:	dec    ebp
  419584:	cmp    al,0x38
  419586:	dec    ebp
  419587:	sub    eax,0xc11afda9
  41958c:	add    BYTE PTR ds:0x77f920d7,0x41
  419593:	dec    ebp
  419594:	fst    DWORD PTR [ebx]
  419596:	xor    edi,DWORD PTR ds:0x52853bc8
  41959c:	push   edx
  41959d:	cdq    
  41959e:	daa    
  41959f:	jecxz  0x41959e
  4195a1:	mov    esi,0xd38c6a35
  4195a6:	cmc    
  4195a7:	bound  ebx,QWORD PTR [ebx-0x10]
  4195aa:	cs and esi,eax
  4195ad:	aam    0x63
  4195af:	mov    ds:0x7e913421,eax
  4195b4:	(bad)  
  4195b5:	mov    cl,0xac
  4195b7:	cmp    eax,0xd2bc9197
  4195bc:	lea    esp,[esi-0x45]
  4195bf:	mov    esi,0xa5a3c33e
  4195c4:	rol    bh,1
  4195c6:	cli    
  4195c7:	adc    DWORD PTR [eax+0x30],0x29
  4195cb:	shr    DWORD PTR [edx],0xc
  4195ce:	js     0x419578
  4195d0:	int3   
  4195d1:	pop    ecx
  4195d2:	fwait
  4195d3:	jo     0x4195af
  4195d5:	outs   dx,DWORD PTR ds:[esi]
  4195d6:	xor    al,0xe1
  4195d8:	aam    0x8b
  4195da:	dec    esi
  4195db:	xlat   BYTE PTR ds:[ebx]
  4195dc:	pop    esp
  4195dd:	and    BYTE PTR [ebx-0x51],al
  4195e0:	dec    esi
  4195e1:	loopne 0x419632
  4195e3:	lods   eax,DWORD PTR ds:[esi]
  4195e4:	imul   esp,ecx,0x46
  4195e7:	push   ecx
  4195e8:	xchg   esi,eax
  4195e9:	jp     0x419624
  4195eb:	scas   al,BYTE PTR es:[edi]
  4195ec:	test   eax,0x1245939
  4195f1:	fdiv   st,st(7)
  4195f3:	mov    ds:0x39867da2,eax
  4195f8:	je     0x419646
  4195fa:	fisubr DWORD PTR [ecx+esi*2-0x2cbcb163]
  419601:	push   eax
  419602:	mov    ch,BYTE PTR [ecx]
  419604:	pop    edi
  419605:	sar    DWORD PTR [edi+esi*8-0x5b205d0e],0x51
  41960d:	dec    ebp
  41960e:	cdq    
  41960f:	xor    cl,BYTE PTR [ebx]
  419611:	cmp    al,BYTE PTR [ebp-0x76]
  419614:	clc    
  419615:	sub    ch,BYTE PTR [ecx+0xe26beb2]
  41961b:	mov    ah,0x3d
  41961d:	shr    DWORD PTR [ecx+0x4d],0x7e
  419621:	push   ebp
  419622:	iret   
  419623:	push   ebx
  419624:	push   ds
  419625:	into   
  419626:	mov    ebx,0x78036282
  41962b:	push   ebx
  41962c:	ficom  DWORD PTR gs:[ebx]
  41962f:	add    BYTE PTR [edx],dl
  419631:	sub    DWORD PTR [esi+ebx*4],0xfffffff6
  419635:	mov    ebp,0x3127418c
  41963a:	out    0x34,eax
  41963c:	enter  0x6419,0xdc
  419640:	fdiv   DWORD PTR [edi+0x71]
  419643:	call   DWORD PTR [ebp+ecx*1+0x71e4faa5]
  41964a:	sahf   
  41964b:	push   ebx
  41964c:	fild   DWORD PTR [esi+0x16]
  41964f:	mov    ch,0x28
  419652:	dec    esp
  419654:	push   esi
  419655:	push   ebp
  419656:	cmp    al,0x64
  419658:	fiadd  WORD PTR [eax+edi*2+0x50]
  41965c:	xchg   edx,eax
  41965d:	test   BYTE PTR [eax],ch
  41965f:	mov    ds:0xe47902af,eax
  419664:	push   esp
  419665:	mov    dl,0x94
  419667:	pop    ecx
  419668:	cmc    
  419669:	sbb    eax,0x2c5e6489
  41966e:	lock add BYTE PTR [edi-0x3ab554f1],dh
  419675:	xchg   ebp,eax
  419676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419677:	pop    eax
  419678:	xchg   esp,eax
  419679:	adc    DWORD PTR [esp+edx*4-0xc9fee19],0xe460472f
  419684:	cld    
  419685:	xchg   ebx,eax
  419686:	inc    edi
  419687:	and    esp,edi
  419689:	cld    
  41968a:	and    cl,0xac
  41968d:	fldcw  WORD PTR [ecx-0x4f1ad2ef]
  419693:	mov    al,0xbb
  419695:	iret   
  419696:	(bad)  
  419697:	push   ebx
  419698:	jecxz  0x41964d
  41969a:	mov    ebp,DWORD PTR [esi+0x9]
  41969d:	stos   BYTE PTR es:[edi],al
  41969e:	out    dx,eax
  41969f:	iret   
  4196a0:	clc    
  4196a1:	adc    al,0x87
  4196a3:	cmp    ch,cl
  4196a5:	out    dx,eax
  4196a6:	mov    edi,DWORD PTR [ecx+0xdb0e124]
  4196ac:	out    0xd3,eax
  4196ae:	fs xchg ecx,eax
  4196b0:	inc    esi
  4196b1:	and    al,0x67
  4196b3:	mov    ds:0x4945c03e,eax
  4196b8:	jne    0x419722
  4196ba:	pushf  
  4196bb:	bound  esp,QWORD PTR [ebx]
  4196bd:	dec    esi
  4196be:	loope  0x4196d9
  4196c0:	in     al,0xdf
  4196c2:	or     BYTE PTR [esi],bl
  4196c4:	out    0xf9,al
  4196c6:	and    eax,0x1c7129e5
  4196cb:	addr16 js 0x4196d3
  4196ce:	mov    eax,ds:0x9546737d
  4196d3:	push   edx
  4196d4:	repnz sub ah,BYTE PTR ss:[ecx]
  4196d8:	call   eax
  4196da:	mov    esi,0xe809b5e
  4196df:	out    dx,al
  4196e0:	je     0x4196fa
  4196e2:	pop    esi
  4196e3:	inc    esi
  4196e4:	sbb    DWORD PTR [ebx],ecx
  4196e6:	pop    ss
  4196e7:	or     eax,0x1b
  4196ea:	add    DWORD PTR [ecx],ecx
  4196ec:	leave  
  4196ed:	xchg   edi,eax
  4196ee:	mov    ds:0xa3c3693a,eax
  4196f3:	out    0x1c,al
  4196f5:	add    al,0x17
  4196f7:	xchg   ah,dh
  4196f9:	add    al,0xee
  4196fb:	hlt    
  4196fc:	xor    eax,0x4d4d41fe
  419701:	xchg   ecx,eax
  419702:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419704:	and    al,0x9e
  419706:	mov    edi,0x99ffdff1
  41970b:	mov    dh,0x43
  41970d:	xor    BYTE PTR [ebx-0x40],al
  419710:	nop
  419711:	sahf   
  419712:	out    0x13,al
  419714:	sub    ecx,DWORD PTR [edx-0x7325a5f]
  41971a:	mov    cl,0xcb
  41971c:	lods   al,BYTE PTR ds:[esi]
  41971d:	or     cl,BYTE PTR [edi-0x6a]
  419720:	mov    WORD PTR [eax+0x2fd2b764],es
  419726:	loope  0x41975b
  419728:	in     eax,0xae
  41972a:	jg     0x419732
  41972c:	retf   0xddc6
  41972f:	or     eax,0x5e203a18
  419734:	test   DWORD PTR ds:0xb3fb8723,ebp
  41973a:	adc    ah,BYTE PTR [ecx]
  41973c:	mov    ?,ebp
  41973e:	and    al,0x65
  419740:	hlt    
  419741:	and    al,0x10
  419743:	jbe    0x419742
  419745:	or     ebp,DWORD PTR [eax+0x2a69b1b3]
  41974b:	jp     0x419770
  41974d:	icebp  
  41974e:	xor    ebp,ecx
  419750:	rcr    esp,1
  419752:	pop    ds
  419753:	sbb    DWORD PTR [esi+ebp*2+0x27],edx
  419757:	mov    edx,0x9573e88
  41975c:	pop    esi
  41975d:	mov    cs,WORD PTR [eax]
  41975f:	in     al,dx
  419760:	add    ax,0xcdf1
  419764:	push   cs
  419765:	push   cs
  419766:	pop    ebp
  419767:	mov    ds:0x1ece1459,eax
  41976c:	mov    WORD PTR [ebx-0x75634ab8],gs
  419772:	jl     0x4197e8
  419774:	outs   dx,BYTE PTR ds:[esi]
  419775:	xor    edi,edx
  419777:	cmp    dl,ch
  419779:	(bad)
  41977d:	jmp    0x6e88f111
  419782:	or     al,0x89
  419784:	iret   
  419785:	or     eax,0x775ba311
  41978a:	sbb    ebp,ecx
  41978c:	push   ss
  41978d:	mov    dh,0xe4
  41978f:	retf   0xc0b
  419792:	loop   0x4197ee
  419794:	int3   
  419795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419796:	jge    0x419797
  419798:	repnz clc 
  41979a:	aam    0x58
  41979c:	enter  0x40a0,0x23
  4197a0:	jmp    0xf1e61174
  4197a5:	adc    DWORD PTR [edx-0x498b970d],edx
  4197ab:	sub    ecx,DWORD PTR [eax]
  4197ad:	mov    ah,0x75
  4197af:	push   ebx
  4197b0:	push   edx
  4197b1:	xchg   edi,eax
  4197b2:	adc    ebp,DWORD PTR [eax]
  4197b4:	stos   DWORD PTR es:[edi],eax
  4197b5:	or     DWORD PTR [eax+0x38],eax
  4197b8:	imul   DWORD PTR [edi]
  4197ba:	jne    0x419800
  4197bc:	fadd   st,st(3)
  4197be:	xor    edi,esi
  4197c0:	xor    edx,DWORD PTR [ebp+0x1683567]
  4197c6:	and    eax,0xd687937
  4197cb:	test   esp,edi
  4197cd:	sbb    al,0x2f
  4197cf:	arpl   sp,sp
  4197d1:	dec    edx
  4197d2:	js     0x419763
  4197d4:	add    al,0x43
  4197d6:	retf   0xa101
  4197d9:	sbb    esi,ecx
  4197db:	lods   al,BYTE PTR ds:[esi]
  4197dc:	ds aas 
  4197de:	push   cs
  4197df:	jl     0x41978a
  4197e1:	jg     0x41976a
  4197e3:	pop    ecx
  4197e4:	sbb    BYTE PTR [ecx+0x19],bh
  4197e7:	mul    bh
  4197e9:	loop   0x419866
  4197eb:	ret    0x4dbd
  4197ee:	mov    edi,0x9b8b82d3
  4197f3:	mov    WORD PTR [edx+edi*8],cs
  4197f6:	stc    
  4197f7:	and    al,0x23
  4197f9:	mov    al,ds:0xd62a5b9a
  4197fe:	or     bl,ch
  419800:	ins    DWORD PTR es:[edi],dx
  419801:	or     dh,al
  419803:	jne    0x41985d
  419805:	mov    eax,ds:0x6cad99e4
  41980a:	dec    ebx
  41980b:	inc    ecx
  41980c:	popf   
  41980d:	sar    BYTE PTR es:[edi+0x60],1
  419811:	xor    edi,DWORD PTR ds:0x2be56c5c
  419817:	mov    WORD PTR [esi],cs
  419819:	aaa    
  41981a:	pop    ds
  41981b:	ret    0x906a
  41981e:	push   0xffffffa3
  419820:	dec    ecx
  419821:	pusha  
  419822:	jae    0x41984a
  419824:	inc    edi
  419825:	mov    dh,0x6
  419827:	xchg   edi,eax
  419828:	outs   dx,DWORD PTR ds:[esi]
  419829:	lahf   
  41982a:	das    
  41982b:	mov    edi,0x1d5c6001
  419830:	add    bl,BYTE PTR [eax]
  419832:	sahf   
  419833:	mov    eax,ds:0x6a13d5bc
  419838:	mov    edx,0x8c3ee362
  41983d:	push   eax
  41983e:	retf   
  41983f:	pop    ecx
  419840:	or     eax,0x8ffd423c
  419845:	not    al
  419847:	pop    ebx
  419848:	xor    edi,DWORD PTR [ecx-0x76]
  41984b:	ds daa 
  41984d:	jbe    0x419803
  41984f:	dec    eax
  419850:	repnz pusha 
  419852:	xchg   esi,eax
  419853:	mov    ds,WORD PTR [ecx+0xa]
  419856:	xor    ebx,edi
  419858:	mov    DWORD PTR [ecx+0x7e],ecx
  41985b:	fdiv   DWORD PTR [edx]
  41985d:	push   es
  41985e:	mov    bh,0xbd
  419860:	jmp    0x354f0ccb
  419865:	and    bh,BYTE PTR ds:[edx]
  419868:	out    0x6d,al
  41986a:	mov    ebp,DWORD PTR [ebp-0x7f54fb78]
  419870:	inc    eax
  419871:	mov    ecx,0xe67cb52a
  419876:	dec    eax
  419877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419878:	sbb    ch,dl
  41987a:	add    ebp,DWORD PTR [edx+0x288938c7]
  419880:	inc    ecx
  419881:	int    0x28
  419883:	mov    al,0x97
  419885:	pop    edi
  419886:	fld    QWORD PTR ds:0x2db1d973
  41988c:	and    BYTE PTR [esi],ch
  41988e:	lods   al,BYTE PTR ds:[esi]
  41988f:	ins    DWORD PTR es:[edi],dx
  419890:	out    0x80,eax
  419892:	jnp    0x41985f
  419894:	push   edx
  419895:	(bad)  
  419896:	ds pop ss
  419898:	pusha  
  419899:	xor    eax,0x97ba18c2
  41989e:	xor    BYTE PTR [esi-0x3bc3a27e],0x5e
  4198a5:	cmove  esp,DWORD PTR [ebx-0x17]
  4198a9:	sub    DWORD PTR [edi-0x2a31a8f4],eax
  4198af:	imul   esi,DWORD PTR [esi],0xaa4b06f1
  4198b5:	popf   
  4198b6:	cmp    cl,BYTE PTR es:[edx]
  4198b9:	dec    esi
  4198ba:	dec    esi
  4198bb:	fistp  WORD PTR [ebx+0xb]
  4198be:	or     DWORD PTR [ebp-0x7220316c],esi
  4198c4:	xlat   BYTE PTR ds:[ebx]
  4198c5:	fucomip st,st(1)
  4198c7:	and    ebp,DWORD PTR [ecx-0x5a1a0198]
  4198cd:	dec    ebx
  4198ce:	jo     0x41992e
  4198d0:	sub    BYTE PTR [edx-0x7642e417],dh
  4198d6:	inc    ecx
  4198d7:	aas    
  4198d8:	das    
  4198d9:	in     eax,dx
  4198da:	(bad)  
  4198db:	push   esp
  4198dc:	push   ebx
  4198dd:	ret    
  4198de:	cmp    BYTE PTR [ebp-0x6e],dl
  4198e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e2:	push   ebp
  4198e3:	mul    BYTE PTR [edi]
  4198e5:	ret    
  4198e6:	lods   eax,DWORD PTR ds:[esi]
  4198e7:	inc    edi
  4198e8:	aad    0x96
  4198ea:	dec    ebx
  4198eb:	mov    eax,ds:0x75ae41d7
  4198f0:	mov    ecx,DWORD PTR [edi-0x53]
  4198f3:	pushf  
  4198f4:	test   BYTE PTR [ebp-0x79b2252c],ch
  4198fa:	dec    edx
  4198fb:	inc    edx
  4198fc:	mov    edx,0x671512ef
  419901:	jle    0x4198e5
  419903:	or     DWORD PTR [esi-0x1b],edx
  419906:	adc    eax,0x4e6c54ed
  41990b:	in     al,dx
  41990c:	xchg   ebx,eax
  41990d:	daa    
  41990e:	addr16 stc 
  419910:	jg     0x419952
  419912:	dec    ebp
  419913:	jne    0x4198c0
  419915:	dec    ebp
  419916:	sbb    edx,0xf3b03253
  41991c:	sub    al,0x97
  41991e:	pop    edi
  41991f:	ins    BYTE PTR es:[edi],dx
  419920:	jle    0x419964
  419922:	mov    bl,0x81
  419924:	push   esi
  419925:	in     eax,dx
  419926:	out    dx,eax
  419927:	mov    edx,0x535b5a15
  41992c:	popa   
  41992d:	pop    esi
  41992e:	test   bh,ah
  419930:	(bad)  
  419931:	loope  0x419929
  419933:	add    al,0xd4
  419935:	xchg   ebx,eax
  419936:	mov    dl,0x9d
  419938:	pusha  
  419939:	mov    DWORD PTR [ebx+0x48d19b42],ebx
  41993f:	outs   dx,DWORD PTR ds:[esi]
  419940:	push   0xdd26d65a
  419945:	mov    ecx,DWORD PTR [edx-0x49]
  419948:	and    BYTE PTR [esi-0x7c],ch
  41994b:	nop
  41994c:	sahf   
  41994d:	jns    0x419946
  41994f:	xor    eax,0x79ce08eb
  419954:	pop    ecx
  419955:	cwde   
  419956:	cmp    ch,BYTE PTR [ebx-0x5f]
  419959:	jae    0x4199cc
  41995b:	je     0x41990d
  41995d:	fsubr  st,st(4)
  41995f:	dec    DWORD PTR [ebx]
  419961:	ins    DWORD PTR es:[edi],dx
  419962:	icebp  
  419963:	xor    al,bh
  419965:	push   ebx
  419966:	ds jle 0x4199ce
  419969:	inc    esp
  41996a:	push   eax
  41996b:	jle    0x419964
  41996d:	adc    al,0xf8
  41996f:	jle    0x419970
  419971:	sbb    al,0x72
  419973:	push   esi
  419974:	icebp  
  419975:	pop    ebp
  419976:	or     eax,0xb0d21cc3
  41997b:	mov    ds:0x3f7bd374,al
  419980:	push   ebp
  419981:	(bad)  
  419982:	ds pop edx
  419984:	call   0x99de:0xffc13d21
  41998b:	into   
  41998c:	and    al,0xcc
  41998e:	nop
  41998f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419990:	fwait
  419991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419992:	in     eax,dx
  419993:	jb     0x4199d0
  419995:	iret   
  419996:	stc    
  419997:	and    eax,0x4625e6f0
  41999c:	stos   BYTE PTR es:[edi],al
  41999d:	mov    ebp,0x5c18f7fd
  4199a2:	repnz stc 
  4199a4:	mov    ah,0x25
  4199a6:	std    
  4199a7:	xor    al,0xa6
  4199a9:	fwait
  4199aa:	ds jb  0x4199a2
  4199ad:	jmp    0x2b19:0x3bc8d1f4
  4199b4:	punpckhdq mm0,QWORD PTR [ebx+0x5813b7f5]
  4199bb:	in     eax,dx
  4199bc:	test   al,0x61
  4199be:	leave  
  4199bf:	jns    0x41995b
  4199c1:	mov    dl,0xc2
  4199c3:	sahf   
  4199c4:	jo     0x4199ef
  4199c6:	xchg   edi,eax
  4199c7:	and    dh,BYTE PTR [ecx+ecx*4-0x5e412ef8]
  4199ce:	retf   0x5c7d
  4199d1:	add    eax,0xb024b31e
  4199d6:	dec    esi
  4199d7:	inc    ebx
  4199d8:	adc    eax,0x80639371
  4199dd:	out    dx,al
  4199de:	shl    cl,cl
  4199e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e1:	pop    edi
  4199e2:	push   edx
  4199e3:	repz xor esp,DWORD PTR [ebx]
  4199e6:	sbb    al,0x2
  4199e8:	fisub  WORD PTR [eax]
  4199ea:	(bad)
  4199ed:	xor    DWORD PTR [esi-0x6a129da9],edi
  4199f3:	adc    BYTE PTR [edi+0x18],ah
  4199f6:	das    
  4199f7:	jnp    0x419a19
  4199f9:	(bad)  
  4199fa:	jmp    0x4199c4
  4199fc:	stos   BYTE PTR es:[edi],al
  4199fd:	pusha  
  4199fe:	stc    
  4199ff:	mov    edx,0x9e4dce78
  419a04:	ja     0x41999b
  419a06:	mov    ?,WORD PTR [eax]
  419a08:	add    al,BYTE PTR [esi-0x38]
  419a0b:	xchg   ch,ch
  419a0d:	push   eax
  419a0e:	fist   DWORD PTR [esi+0x1bfe4497]
  419a14:	mov    bh,0x2
  419a16:	mov    ebx,DWORD PTR [esi-0x7f]
  419a19:	int    0x51
  419a1b:	jmp    0x79ab418e
  419a20:	mov    bl,0xf2
  419a22:	dec    ebx
  419a23:	and    ah,cl
  419a25:	(bad)  
  419a27:	imul   ecx,DWORD PTR [edx],0x69
  419a2a:	mov    ecx,ebp
  419a2c:	ja     0x4199d1
  419a2e:	lahf   
  419a2f:	(bad)  
  419a30:	out    0xef,al
  419a32:	leave  
  419a33:	fldenv [edx]
  419a35:	sub    edx,DWORD PTR [edi+ebx*2]
  419a38:	outs   dx,DWORD PTR ds:[esi]
  419a39:	sub    DWORD PTR [esi+0x4],ebx
  419a3c:	arpl   ax,di
  419a3e:	mov    bh,0x96
  419a40:	(bad)  
  419a41:	sahf   
  419a42:	push   ss
  419a43:	cwde   
  419a44:	aam    0xf6
  419a46:	inc    esp
  419a47:	shl    esi,cl
  419a49:	sahf   
  419a4a:	scas   eax,DWORD PTR es:[edi]
  419a4b:	pop    edx
  419a4c:	xor    BYTE PTR [eax-0x1750e905],bl
  419a52:	loopne 0x419a4d
  419a54:	add    edi,ebx
  419a56:	or     eax,0xd97e69be
  419a5b:	xchg   esi,eax
  419a5c:	aam    0xab
  419a5e:	xlat   BYTE PTR ds:[ebx]
  419a5f:	icebp  
  419a60:	(bad)  
  419a61:	sub    dl,dl
  419a63:	dec    eax
  419a64:	test   DWORD PTR [ecx+edi*1+0x20],edx
  419a68:	fcom   st(0)
  419a6a:	je     0x419a58
  419a6c:	or     ecx,edi
  419a6e:	enter  0x7758,0x7a
  419a72:	fsubr  DWORD PTR [eax-0x40]
  419a75:	xor    eax,0x2943510f
  419a7a:	call   FWORD PTR [eax]
  419a7c:	loop   0x419af0
  419a7e:	(bad)  
  419a7f:	xchg   edx,eax
  419a80:	sub    ecx,DWORD PTR [eax+0x41aef913]
  419a86:	shl    BYTE PTR [edx-0x699c08bd],cl
  419a8c:	jne    0x419b04
  419a8e:	fidiv  DWORD PTR [edx-0x18b48f7d]
  419a94:	xchg   ecx,eax
  419a95:	mov    ds:0x4a0725f1,al
  419a9a:	js     0x419aef
  419a9c:	ins    DWORD PTR es:[edi],dx
  419a9d:	jle    0x419a61
  419a9f:	(bad)  
  419aa0:	jnp    0x419add
  419aa2:	jb     0x419b12
  419aa4:	int    0x0
  419aa6:	stos   BYTE PTR es:[edi],al
  419aa7:	aad    0xa6
  419aa9:	add    esp,DWORD PTR [ebp+0x3195cdaa]
  419aaf:	iret   
  419ab0:	jle    0x419a36
  419ab2:	test   DWORD PTR [ecx],0x9ca559ba
  419ab8:	xchg   ecx,eax
  419ab9:	mov    ds:0x87e4ed48,eax
  419abe:	fisubr WORD PTR [edi]
  419ac0:	in     al,dx
  419ac1:	push   edi
  419ac2:	pop    edx
  419ac3:	fld    QWORD PTR [edi]
  419ac5:	stos   DWORD PTR es:[edi],eax
  419ac6:	fild   DWORD PTR [ecx]
  419ac8:	add    al,0x8a
  419aca:	mov    cl,BYTE PTR [ebp+edx*4+0x29]
  419ace:	or     al,BYTE PTR [ebx-0x41]
  419ad1:	clc    
  419ad2:	ja     0x419b46
  419ad4:	jecxz  0x419a99
  419ad6:	aas    
  419ad7:	jecxz  0x419b05
  419ad9:	cli    
  419ada:	leave  
  419adb:	push   cs
  419adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419add:	mov    eax,0x67e948bd
  419ae2:	cs ss jo 0x419b29
  419ae6:	push   ebp
  419ae7:	aam    0xf
  419ae9:	dec    eax
  419aea:	inc    eax
  419aeb:	fdivr  DWORD PTR [edi]
  419aed:	les    eax,FWORD PTR [esi+edx*2]
  419af0:	popf   
  419af1:	push   ds
  419af2:	pusha  
  419af3:	fst    DWORD PTR ds:0xa8a2ea47
  419af9:	and    dh,BYTE PTR [eax+0x75]
  419afc:	in     eax,dx
  419afd:	sbb    al,0x9a
  419aff:	add    WORD PTR [edi-0x18],0x25
  419b04:	mov    edi,0xcecb4445
  419b09:	pop    ebp
  419b0a:	test   DWORD PTR [ebx],esi
  419b0c:	sub    ah,dl
  419b0e:	sbb    dl,BYTE PTR [edi+0x6466ab9]
  419b14:	jecxz  0x419b02
  419b16:	or     eax,0xac1553f0
  419b1c:	cmp    al,0xdf
  419b1e:	sub    al,0xd7
  419b20:	je     0x419b9d
  419b22:	bound  esi,QWORD PTR [esi]
  419b24:	rol    BYTE PTR [ebx+ebx*2],1
  419b27:	xor    DWORD PTR [edi+0x142a211c],0x8bde0f60
  419b31:	adc    BYTE PTR [ebx],dh
  419b33:	pop    esi
  419b34:	push   esi
  419b35:	in     al,dx
  419b36:	int    0x14
  419b38:	stos   BYTE PTR es:[edi],al
  419b39:	jns    0x419ad7
  419b3b:	pop    esi
  419b3c:	jg     0x419b8a
  419b3e:	or     DWORD PTR [ecx+0x3e8a98f],eax
  419b44:	nop
  419b45:	je     0x419b9e
  419b47:	pop    ds
  419b48:	inc    esp
  419b49:	dec    ebx
  419b4a:	xchg   esi,eax
  419b4b:	xchg   ebp,eax
  419b4c:	inc    BYTE PTR [esi+0x41]
  419b4f:	jae    0x419b73
  419b51:	shl    bl,0xb0
  419b54:	mov    ch,0xf5
  419b56:	sbb    dl,BYTE PTR [ecx]
  419b58:	mov    dh,0x41
  419b5a:	pop    edx
  419b5b:	les    ebp,FWORD PTR [esi]
  419b5d:	cmp    al,0x3f
  419b5f:	rcl    BYTE PTR [ebp-0x3a],cl
  419b62:	push   esi
  419b63:	scas   eax,DWORD PTR es:[edi]
  419b64:	add    ch,BYTE PTR ds:0xed6af991
  419b6a:	push   cs
  419b6b:	add    DWORD PTR [edx+edi*1+0x2c72387c],0xffffffeb
  419b73:	mov    ecx,0xc45c1a7a
  419b78:	gs ror ebx,cl
  419b7b:	out    dx,eax
  419b7c:	loop   0x419b1d
  419b7e:	cmp    eax,0xadcc9a
  419b83:	leave  
  419b84:	or     DWORD PTR [edi-0x40],eax
  419b87:	fstp   TBYTE PTR [eax-0x9]
  419b8a:	xchg   BYTE PTR [ebp-0x3a],ch
  419b8d:	and    DWORD PTR [ebp+0x6f],0xc55a196b
  419b94:	dec    edx
  419b95:	add    al,0xc1
  419b97:	outs   dx,BYTE PTR ds:[esi]
  419b98:	ja     0x419b6d
  419b9a:	daa    
  419b9b:	inc    esi
  419b9c:	cmc    
  419b9d:	(bad)  
  419b9e:	scas   al,BYTE PTR es:[edi]
  419b9f:	cmp    eax,0x8a6a53fb
  419ba4:	cwde   
  419ba5:	aaa    
  419ba6:	mov    eax,gs
  419ba8:	gs dec edx
  419baa:	pop    edx
  419bab:	aad    0x40
  419bad:	jno    0x419bd7
  419baf:	iret   
  419bb0:	xchg   BYTE PTR [edi],ah
  419bb2:	pop    edi
  419bb3:	inc    BYTE PTR [edx]
  419bb5:	sar    dl,0xf2
  419bb8:	stos   BYTE PTR es:[edi],al
  419bb9:	addr16 jnp 0x419bab
  419bbc:	push   ebp
  419bbd:	(bad)  
  419bbe:	fs lock inc ebx
  419bc1:	stos   DWORD PTR es:[edi],eax
  419bc2:	jb     0x419bcb
  419bc4:	fidiv  DWORD PTR [ecx]
  419bc6:	or     DWORD PTR [edx-0xb],esi
  419bc9:	mov    ebx,0x2c3dc100
  419bce:	or     ah,BYTE PTR [esi]
  419bd0:	pop    ebx
  419bd1:	push   ebp
  419bd2:	rcl    BYTE PTR [esi],0xf
  419bd5:	jne    0x419bec
  419bd7:	mov    esp,0xaceea5d7
  419bdc:	add    eax,0x43489a29
  419be1:	das    
  419be2:	test   eax,0xfb20dc69
  419be7:	imul   esi,eax,0xe6ee7eee
  419bed:	mov    bh,0x8
  419bef:	arpl   WORD PTR [ecx-0x8baf35d],bp
  419bf5:	mov    cs,WORD PTR [esi+0x2f]
  419bf8:	push   es
  419bf9:	ficom  DWORD PTR [ecx-0x1c79d86a]
  419bff:	mov    esi,0xce9433e
  419c04:	aaa    
  419c05:	retf   
  419c06:	pop    ecx
  419c07:	arpl   cx,bx
  419c09:	inc    eax
  419c0a:	cmp    ebx,0x8b1bc918
  419c10:	xor    esp,DWORD PTR [edi]
  419c12:	add    eax,0x6f925ddc
  419c17:	cli    
  419c18:	add    esp,esi
  419c1a:	xchg   esp,eax
  419c1b:	mov    ch,0xf7
  419c1d:	pop    ss
  419c1e:	test   BYTE PTR [esi-0x1055155c],al
  419c24:	push   edi
  419c25:	cwde   
  419c26:	add    edx,DWORD PTR [ebp+0x5fabe2d0]
  419c2c:	shr    DWORD PTR ds:0x422c7bb7,cl
  419c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c33:	addr16 cmp esp,edi
  419c36:	fsubr  st,st(4)
  419c38:	pop    edi
  419c39:	dec    ebx
  419c3a:	mov    al,0x1c
  419c3c:	call   0xd3dc7106
  419c41:	sbb    bl,0xaf
  419c44:	gs dec ebx
  419c46:	cmc    
  419c47:	lods   al,BYTE PTR ds:[esi]
  419c48:	mov    bl,0x19
  419c4a:	dec    ecx
  419c4b:	popa   
  419c4c:	fistp  WORD PTR [ebp+eax*8-0x31]
  419c50:	cld    
  419c51:	ror    DWORD PTR [ecx-0x3a],1
  419c54:	sti    
  419c55:	(bad)  
  419c56:	xor    eax,0xbfead47a
  419c5b:	ja     0x419c41
  419c5d:	loope  0x419c7a
  419c5f:	in     al,dx
  419c60:	mov    bl,BYTE PTR [ecx-0x5dcc22da]
  419c66:	pop    ecx
  419c67:	stc    
  419c68:	sub    BYTE PTR [edi+0x67145aed],0xb0
  419c6f:	mov    ah,0x46
  419c71:	in     eax,dx
  419c72:	jns    0x419c36
  419c74:	push   ss
  419c75:	xor    al,0xbc
  419c77:	dec    edi
  419c78:	mov    ds:0xb29e5e8a,al
  419c7d:	and    eax,0xdbe328f8
  419c82:	push   ss
  419c83:	rcr    BYTE PTR [ebx+0x42],cl
  419c86:	sbb    edx,DWORD PTR [edx+ebp*4-0x6a1071ea]
  419c8d:	jb     0x419c33
  419c8f:	out    dx,al
  419c90:	pop    esp
  419c91:	cmp    DWORD PTR [ebx],edi
  419c93:	xlat   BYTE PTR ds:[ebx]
  419c94:	hlt    
  419c95:	in     eax,dx
  419c96:	ja     0x419cb5
  419c98:	fs lock loopne 0x419c4a
  419c9c:	xchg   esp,eax
  419c9d:	arpl   WORD PTR [ecx-0x291ebd5d],ax
  419ca3:	call   0xaf41:0xa1cf08b
  419caa:	jmp    0x419c30
  419cac:	ret    
  419cad:	fwait
  419cae:	jbe    0x419d25
  419cb0:	fwait
  419cb1:	mov    edi,0xed06da39
  419cb6:	loop   0x419ce2
  419cb8:	mov    esi,0x125f13fb
  419cbd:	cwde   
  419cbe:	inc    ecx
  419cbf:	out    dx,al
  419cc0:	adc    ch,0x3f
  419cc3:	mov    eax,ds:0xe8a337a8
  419cc8:	sub    BYTE PTR [ebx-0x1b],0xbc
  419ccc:	pop    esi
  419ccd:	ins    BYTE PTR es:[edi],dx
  419cce:	aaa    
  419ccf:	or     DWORD PTR [ebx+0x5e],esp
  419cd2:	mov    WORD PTR [edx-0x4e],cs
  419cd5:	retf   0x7b7d
  419cd8:	ss inc edx
  419cda:	mov    dl,0x40
  419cdc:	push   ebp
  419cdd:	out    dx,eax
  419cde:	adc    dl,BYTE PTR [ebx+0x48]
  419ce1:	repz jmp 0x212661d5
  419ce7:	popa   
  419ce8:	lods   al,BYTE PTR ds:[esi]
  419ce9:	stos   BYTE PTR es:[edi],al
  419cea:	or     eax,0xf5397d1a
  419cef:	jp     0x419cdd
  419cf1:	push   ecx
  419cf2:	and    BYTE PTR [edx+0x53],bl
  419cf5:	ret    
  419cf6:	sar    DWORD PTR [edi-0x1d359c86],cl
  419cfc:	adc    BYTE PTR [ebp-0x30fb06c9],bl
  419d02:	add    al,0x32
  419d04:	xchg   esi,eax
  419d05:	call   0xb796ec11
  419d0a:	or     ebx,DWORD PTR [edx+0x49]
  419d0d:	cmp    dl,BYTE PTR [eax]
  419d0f:	mov    edx,0xd7dc8fd3
  419d14:	mov    al,ds:0x5c40de23
  419d19:	jno    0x419d29
  419d1b:	sar    BYTE PTR [edx-0x6e],1
  419d1e:	or     edi,edx
  419d20:	jo     0x419d9b
  419d22:	mov    eax,ds:0x3c4a5c18
  419d27:	cmp    BYTE PTR [ebx],dl
  419d29:	sub    cl,bl
  419d2b:	test   al,0xfe
  419d2d:	jmp    0x419d68
  419d2f:	jmp    0x8018405c
  419d34:	pusha  
  419d35:	mov    ah,0x62
  419d37:	es aaa 
  419d39:	sub    DWORD PTR [edi-0x35],esi
  419d3c:	(bad)  
  419d3d:	adc    eax,0x25b37e55
  419d42:	mov    eax,0xb1563d5a
  419d47:	sub    al,0xa2
  419d49:	push   ds
  419d4a:	ror    DWORD PTR [edi+0x62],0x45
  419d4e:	ins    BYTE PTR es:[edi],dx
  419d4f:	jmp    0x419d10
  419d51:	sub    eax,0xbb155e42
  419d56:	and    bl,BYTE PTR [ebx]
  419d58:	aas    
  419d59:	shr    DWORD PTR [edi-0x24],1
  419d5c:	sbb    eax,0x92b151da
  419d61:	and    al,BYTE PTR [ecx-0x7d9f1e28]
  419d67:	out    dx,al
  419d68:	fdiv   DWORD PTR [esp+esi*2]
  419d6b:	cmp    ax,0xe66a
  419d6f:	or     DWORD PTR [ecx],0x34
  419d72:	ret    
  419d73:	add    al,0xa6
  419d75:	mov    eax,0xfb6af72b
  419d7a:	add    cl,bl
  419d7c:	iret   
  419d7d:	sub    esi,eax
  419d7f:	inc    ecx
  419d80:	mov    ecx,0x28b5ce7f
  419d85:	mov    bh,0x55
  419d87:	push   ecx
  419d88:	push   ecx
  419d89:	sub    esi,ecx
  419d8b:	jnp    0x419d13
  419d8d:	dec    ecx
  419d8e:	inc    edi
  419d8f:	aas    
  419d90:	dec    edi
  419d91:	mov    DWORD PTR [eax-0x39],esi
  419d94:	rcl    BYTE PTR [eax+edi*1-0x7b6f1300],1
  419d9b:	shl    BYTE PTR [ebx],cl
  419d9d:	jno    0x419da1
  419d9f:	jge    0x419d50
  419da1:	push   esi
  419da2:	js     0x419d68
  419da4:	test   DWORD PTR [ebx],edi
  419da6:	retf   0xfe9a
  419da9:	jmp    0xcfbc7fb3
  419dae:	pop    ecx
  419daf:	dec    ebx
  419db0:	xor    BYTE PTR [bx+si-0x16],cl
  419db4:	iret   
  419db5:	xchg   esp,eax
  419db6:	dec    edx
  419db7:	push   esp
  419db8:	ja     0x419de4
  419dba:	cld    
  419dbb:	pop    ebp
  419dbc:	adc    eax,0x87aa10
  419dc1:	dec    edi
  419dc2:	jns    0x419e2b
  419dc4:	ja     0x419de6
  419dc6:	mov    WORD PTR [edx-0x1f00c0d2],?
  419dcc:	aam    0x61
  419dce:	or     DWORD PTR [edx-0x7b977199],ebp
  419dd4:	push   edi
  419dd5:	idiv   esp
  419dd7:	sbb    BYTE PTR [ebp+0x26],dl
  419dda:	adc    DWORD PTR [esp+esi*4-0x5d2f639b],edi
  419de1:	sub    al,cl
  419de3:	outs   dx,DWORD PTR ds:[esi]
  419de4:	out    0x80,eax
  419de6:	and    ebx,DWORD PTR [esi+ecx*4]
  419de9:	dec    edi
  419dea:	or     eax,0x53095021
  419def:	cmp    DWORD PTR [edi-0x6f],edx
  419df2:	mov    ch,0x2f
  419df4:	mov    ch,0x66
  419df6:	clc    
  419df7:	ds jecxz 0x419db1
  419dfa:	add    dh,BYTE PTR [ebp-0x15]
  419dfd:	jae    0x419e4b
  419dff:	loop   0x419d9a
  419e01:	cmc    
  419e02:	sbb    BYTE PTR [ecx],cl
  419e04:	adc    BYTE PTR [ebx-0x7632ed37],dh
  419e0a:	retf   
  419e0b:	xchg   edx,eax
  419e0c:	mov    al,ds:0x3c8e0750
  419e11:	push   ebx
  419e12:	dec    edi
  419e13:	shl    al,1
  419e15:	dec    BYTE PTR [ecx-0x124180b7]
  419e1b:	ja     0x419e76
  419e1d:	sahf   
  419e1e:	je     0x419e67
  419e20:	xor    eax,0x91133ddb
  419e25:	popa   
  419e26:	jno    0x419df6
  419e28:	or     edx,0xfba906ed
  419e2e:	mov    es,WORD PTR [eax-0x6b42f32f]
  419e34:	mov    bh,0x91
  419e36:	leave  
  419e37:	fs and al,0xfc
  419e3a:	cmp    al,0xd
  419e3c:	fild   QWORD PTR [eax-0x34]
  419e3f:	(bad)  [esi-0x31]
  419e42:	cmp    BYTE PTR [eax],dl
  419e44:	mov    edi,ecx
  419e46:	lock xchg esi,eax
  419e48:	and    eax,0xdab838f5
  419e4d:	mov    ch,0xc6
  419e4f:	arpl   WORD PTR [ebx-0x47],si
  419e52:	(bad)  
  419e53:	out    0x37,al
  419e55:	sub    ecx,DWORD PTR [eax]
  419e57:	mov    ah,0x0
  419e59:	leave  
  419e5a:	mov    ch,0x46
  419e5c:	sbb    DWORD PTR ds:[ebx-0x79516fd2],edi
  419e63:	data16 mov dh,0xe7
  419e66:	xchg   ebp,eax
  419e67:	xchg   BYTE PTR [esi],bl
  419e69:	mov    ss,WORD PTR [ecx]
  419e6b:	mov    eax,ds:0x2528adfa
  419e70:	dec    ebp
  419e71:	jmp    0x74ee:0xf453fa63
  419e78:	jns    0x419ef3
  419e7a:	cmp    DWORD PTR [ebx+0x1b],0xffffff89
  419e7e:	idiv   DWORD PTR [ecx+0x569b35a5]
  419e84:	sub    DWORD PTR [ebx+edi*4-0x6ba878f0],0xca5f6bb0
  419e8f:	notrack call DWORD PTR [edi+0x5bab063]
  419e96:	addr16 pop ebp
  419e98:	aad    0x7c
  419e9a:	adc    cl,0xf3
  419e9d:	xchg   edx,eax
  419e9e:	in     al,0x2b
  419ea0:	mov    gs,edx
  419ea2:	or     edi,DWORD PTR [edi+0x11]
  419ea5:	jmp    0x419e71
  419ea7:	pop    edx
  419ea8:	xchg   esi,eax
  419ea9:	pop    eax
  419eaa:	xlat   BYTE PTR ds:[ebx]
  419eab:	mov    dl,0x61
  419ead:	div    BYTE PTR [edi+edi*8]
  419eb0:	pushf  
  419eb1:	adc    DWORD PTR [ebx],edi
  419eb3:	dec    esp
  419eb4:	adc    al,0x75
  419eb6:	and    DWORD PTR [ecx+0x24],ecx
  419eb9:	stos   DWORD PTR es:[edi],eax
  419eba:	jmp    0xdcf3d82d
  419ebf:	add    cl,bl
  419ec1:	cmp    eax,0x3f7edd0e
  419ec6:	push   edi
  419ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ec8:	jge    0x419ec0
  419eca:	pop    ecx
  419ecb:	repnz stos DWORD PTR es:[edi],eax
  419ecd:	cmp    BYTE PTR [esi+0x6832812a],ah
  419ed3:	popf   
  419ed4:	ret    0x1107
  419ed7:	mov    al,cl
  419ed9:	inc    edx
  419eda:	in     eax,0xe8
  419edc:	test   al,0x56
  419ede:	mov    ch,0x5
  419ee0:	fwait
  419ee1:	(bad)  
  419ee2:	jg     0x419f4c
  419ee4:	cmp    esp,edi
  419ee6:	pop    es
  419ee7:	mov    es,WORD PTR [edx-0x1d126471]
  419eed:	test   BYTE PTR [eax-0x7a2f24a6],dl
  419ef3:	or     DWORD PTR [ecx-0x4d],edx
  419ef6:	lods   al,BYTE PTR ds:[esi]
  419ef7:	cmc    
  419ef8:	into   
  419ef9:	dec    edi
  419efa:	loope  0x419f15
  419efc:	out    dx,al
  419efd:	nop
  419efe:	or     cl,BYTE PTR [edx]
  419f00:	mov    al,ds:0x1ef173d5
  419f05:	add    esi,0xf7a9fe5f
  419f0b:	cld    
  419f0c:	push   eax
  419f0d:	pop    eax
  419f0e:	inc    esi
  419f0f:	std    
  419f10:	imul   esi,DWORD PTR [eax-0x4c],0x24dfe199
  419f17:	ins    DWORD PTR es:[edi],dx
  419f18:	popa   
  419f19:	in     eax,dx
  419f1a:	(bad)  
  419f1b:	loope  0x419ed3
  419f1d:	out    0x9f,eax
  419f1f:	inc    ebx
  419f20:	add    al,0x56
  419f22:	gs in  eax,0xde
  419f25:	js     0x419ee8
  419f27:	add    cl,BYTE PTR [ebx+eiz*8]
  419f2a:	sbb    al,0x74
  419f2c:	mov    al,0xdd
  419f2e:	rcr    BYTE PTR [ebp+0x1e],0xaf
  419f32:	jo     0x419eef
  419f34:	xlat   BYTE PTR ds:[ebx]
  419f35:	test   eax,0x9e356a93
  419f3a:	cmc    
  419f3b:	ret    
  419f3c:	ret    
  419f3d:	daa    
  419f3e:	push   ecx
  419f3f:	arpl   WORD PTR [esi-0x5fdeb39f],bx
  419f45:	xchg   BYTE PTR [edx+0x78],bl
  419f48:	sbb    al,0xf1
  419f4a:	aaa    
  419f4b:	mul    DWORD PTR [ecx-0x61]
  419f4e:	bound  ebx,QWORD PTR [eax+0x45]
  419f51:	jae    0x419f91
  419f53:	add    edi,DWORD PTR [eax-0x6eb360c5]
  419f59:	mov    ecx,0xba2512a6
  419f5e:	sti    
  419f5f:	mov    edi,0x7661e3e4
  419f64:	test   DWORD PTR [ebp-0x57],eax
  419f67:	out    0xb2,eax
  419f69:	dec    ebx
  419f6a:	arpl   si,di
  419f6c:	and    al,0x9
  419f6e:	or     eax,0x3599c9c3
  419f73:	mov    esp,0x10c88a81
  419f78:	xchg   edx,eax
  419f79:	lods   al,BYTE PTR ds:[esi]
  419f7a:	xchg   esi,eax
  419f7b:	loop   0x419f5b
  419f7d:	(bad)  
  419f7e:	fnstcw WORD PTR ds:0xe4cc35a8
  419f84:	mov    cl,0x8f
  419f86:	jle    0x419f2d
  419f88:	add    DWORD PTR [edx+0x51633f5d],edi
  419f8e:	cmp    ecx,0x3e82160f
  419f94:	ror    DWORD PTR [edx+0x3f],1
  419f97:	je     0x419f4b
  419f99:	icebp  
  419f9a:	(bad)  
  419f9b:	adc    cl,ah
  419f9d:	xchg   esi,eax
  419f9e:	enter  0x9d97,0x4c
  419fa2:	loop   0x419fbc
  419fa4:	or     al,0x5d
  419fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fa7:	(bad)  
  419fa8:	lock push 0xffffff96
  419fab:	pop    eax
  419fac:	popa   
  419fad:	pop    edi
  419fae:	jns    0x419f66
  419fb0:	mov    esi,0x2cb7d404
  419fb5:	jnp    0x419f63
  419fb7:	push   0x1e
  419fb9:	cdq    
  419fba:	mov    eax,ds:0x6906f5cf
  419fbf:	popf   
  419fc0:	jbe    0x41a00a
  419fc2:	push   esp
  419fc3:	cmp    DWORD PTR [edx+0x7],edx
  419fc6:	push   0xab814786
  419fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fcc:	inc    ebx
  419fcd:	mul    BYTE PTR [edi+0x6ada5f93]
  419fd3:	inc    esp
  419fd4:	pop    esi
  419fd5:	bound  esi,QWORD PTR [ebx-0x731d8b41]
  419fdb:	das    
  419fdc:	repnz cmc 
  419fde:	shl    bl,1
  419fe0:	ds popf 
  419fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe3:	cmp    edx,esp
  419fe5:	add    al,0x9b
  419fe7:	xlat   BYTE PTR ds:[ebx]
  419fe8:	test   al,0x9f
  419fea:	mov    dh,0x10
  419fec:	and    al,0xd7
  419fee:	fimul  WORD PTR [edx+ecx*4]
  419ff1:	fld    QWORD PTR [esi-0x1ab4cf6c]
  419ff7:	mov    ebx,0x18ae8ad8
  419ffc:	imul   eax,DWORD PTR [ecx+0x22fa37de],0xfea36037
  41a006:	push   esi
  41a007:	xor    dh,BYTE PTR [edx+0x68]
  41a00a:	arpl   WORD PTR [edi-0x6f3c1d3a],cx
  41a010:	call   FWORD PTR [esp+esi*1-0xdb31e02]
  41a017:	scas   al,BYTE PTR es:[edi]
  41a018:	add    al,0xac
  41a01a:	imul   ecx,DWORD PTR [esi],0xffffffdd
  41a01d:	cmc    
  41a01e:	leave  
  41a01f:	pop    esp
  41a020:	in     eax,dx
  41a021:	cmp    al,0x24
  41a023:	push   DWORD PTR [esi-0x29e19d0f]
  41a029:	push   0x63f94696
  41a02e:	aas    
  41a02f:	pushf  
  41a030:	xchg   ebp,eax
  41a031:	lods   eax,DWORD PTR ds:[esi]
  41a032:	pop    esp
  41a033:	mov    eax,ds:0xf49fc4db
  41a038:	sahf   
  41a039:	fmul   st(7),st
  41a03b:	xor    eax,0x8a7e1990
  41a040:	inc    esi
  41a041:	pop    esp
  41a042:	mov    eax,0x2fcb301d
  41a047:	mov    esp,0x1b9a6757
  41a04c:	sbb    al,0xf3
  41a04e:	jnp    0x419fdf
  41a050:	jns    0x41a0ab
  41a052:	stos   DWORD PTR es:[edi],eax
  41a053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a054:	stos   BYTE PTR es:[edi],al
  41a055:	dec    edx
  41a056:	or     al,0x43
  41a058:	mov    al,0xde
  41a05a:	add    esp,0x1d
  41a05d:	call   0xeef3:0xe42638e0
  41a064:	jo     0x6857c5bc
  41a06a:	pop    esi
  41a06b:	add    dh,al
  41a06d:	lods   eax,DWORD PTR ds:[esi]
  41a06e:	int    0xfe
  41a070:	adc    eax,DWORD PTR [ebx-0x3a]
  41a073:	xor    esi,DWORD PTR [ebx-0x17]
  41a076:	call   0xe377d66e
  41a07b:	inc    edi
  41a07c:	pusha  
  41a07d:	inc    esi
  41a07e:	neg    BYTE PTR [ecx+0x55f5a31f]
  41a084:	dec    edx
  41a085:	and    ebp,DWORD PTR [ecx+ebp*1+0x8]
  41a089:	mov    edx,0xd98af844
  41a08e:	dec    ebx
  41a08f:	ds and eax,0x44f82a2e
  41a095:	sbb    ebp,DWORD PTR [ebx-0x4709a29f]
  41a09b:	in     al,dx
  41a09c:	jne    0x41a07a
  41a09e:	lahf   
  41a09f:	pop    ecx
  41a0a0:	rcl    DWORD PTR [edx-0x797899ba],cl
  41a0a6:	mov    bh,0x4b
  41a0a8:	int3   
  41a0a9:	rdpmc  
  41a0ab:	add    edx,ecx
  41a0ad:	cmp    esp,edx
  41a0af:	adc    ebx,edx
  41a0b1:	test   DWORD PTR [eax-0x59c76cd7],edx
  41a0b7:	add    al,0xf9
  41a0b9:	sbb    BYTE PTR [edi-0x37547b8b],0x2c
  41a0c0:	sub    bl,BYTE PTR [ecx+0x1b]
  41a0c3:	pop    ds
  41a0c4:	mov    cl,0x87
  41a0c6:	rcl    DWORD PTR [ecx-0x4c],cl
  41a0c9:	push   edi
  41a0ca:	stos   DWORD PTR es:[edi],eax
  41a0cb:	daa    
  41a0cc:	fsubrp st(2),st
  41a0ce:	xor    DWORD PTR [ebp+0x40],esp
  41a0d1:	std    
  41a0d2:	xchg   edi,eax
  41a0d3:	sbb    BYTE PTR [edx],0x53
  41a0d6:	sbb    al,0x97
  41a0d8:	cmp    eax,0x283249ab
  41a0dd:	dec    DWORD PTR [edi+0x3a3999dc]
  41a0e3:	xor    DWORD PTR [edx+ebp*2+0x0],0x33
  41a0e8:	xchg   ebp,eax
  41a0e9:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41a0eb:	lods   eax,DWORD PTR ds:[esi]
  41a0ec:	dec    ebx
  41a0ed:	cdq    
  41a0ee:	loop   0x41a14c
  41a0f0:	adc    cl,ch
  41a0f2:	inc    esp
  41a0f3:	(bad)  
  41a0f4:	pop    esp
  41a0f5:	xor    al,0x6e
  41a0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0f8:	jbe    0x41a0ab
  41a0fa:	aam    0x9f
  41a0fc:	cmp    BYTE PTR [edi+0x9],dl
  41a0ff:	les    ebp,FWORD PTR [ecx-0x7d4edf0e]
  41a105:	gs mov edx,0xb14ac5f2
  41a10b:	jno    0x41a0ad
  41a10d:	jae    0x41a0c8
  41a10f:	imul   DWORD PTR ds:0xe6e3ce39
  41a115:	outs   dx,DWORD PTR ds:[esi]
  41a116:	xchg   ebp,eax
  41a117:	and    BYTE PTR [ecx+0x8],al
  41a11a:	lds    esi,FWORD PTR [edx+0x7badf4ea]
  41a120:	mov    DWORD PTR [edi],ecx
  41a122:	push   0x75
  41a124:	ror    DWORD PTR [ecx+0x56],cl
  41a127:	std    
  41a128:	xchg   edx,eax
  41a129:	adc    BYTE PTR [ebp-0x56],0x69
  41a12d:	cmp    bl,bh
  41a12f:	shl    BYTE PTR [ebx-0xf126827],cl
  41a135:	mov    dh,0xa3
  41a137:	adc    BYTE PTR [edi-0x5c96d8ba],dl
  41a13d:	sar    BYTE PTR fs:[ecx-0x2bd758e2],0xb3
  41a145:	call   0xd3c1e035
  41a14a:	or     DWORD PTR [esi+eax*8],0x70
  41a14e:	int    0xbe
  41a150:	(bad)  
  41a151:	loope  0x41a117
  41a153:	pop    esp
  41a154:	mov    esp,0x841c30ae
  41a159:	inc    esp
  41a15a:	dec    ebx
  41a15b:	pusha  
  41a15c:	adc    al,0x45
  41a15e:	mov    bl,0x27
  41a160:	push   ebp
  41a161:	mov    dh,0xd8
  41a163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a164:	js     0x41a1c5
  41a166:	sti    
  41a167:	ret    
  41a168:	gs dec esp
  41a16a:	mov    ds:0xc238cfb9,al
  41a16f:	out    dx,eax
  41a170:	pop    ecx
  41a171:	in     al,0x71
  41a173:	sub    al,0x30
  41a175:	pop    ds
  41a176:	adc    edx,DWORD PTR [edi]
  41a178:	xchg   esp,eax
  41a179:	mov    al,0xef
  41a17b:	xor    eax,0xd84ce92a
  41a180:	outs   dx,BYTE PTR ds:[esi]
  41a181:	out    dx,eax
  41a182:	jbe    0x41a175
  41a184:	fild   DWORD PTR [edi+0x17]
  41a187:	and    DWORD PTR [esi-0x789bd493],esp
  41a18d:	imul   eax,DWORD PTR [ebx+0x61df6269],0x874e2fb2
  41a197:	push   ds
  41a198:	imul   ecx,DWORD PTR [ebp+eax*1+0x1237c115],0xf
  41a1a0:	xchg   DWORD PTR ds:0x6765be63,ebx
  41a1a6:	xor    al,0x9c
  41a1a8:	push   edx
  41a1a9:	adc    cl,BYTE PTR [ecx+esi*4+0x50]
  41a1ad:	lea    eax,[ebp+0x51bcaefa]
  41a1b3:	push   eax
  41a1b4:	mov    ecx,0x6930f240
  41a1b9:	or     DWORD PTR [ecx],edx
  41a1bb:	shr    bh,1
  41a1bd:	jg     0x41a1b7
  41a1bf:	or     ch,bl
  41a1c1:	(bad)  
  41a1c2:	pop    ebp
  41a1c3:	inc    edx
  41a1c4:	sub    DWORD PTR [ebx],edx
  41a1c6:	hlt    
  41a1c7:	fwait
  41a1c8:	(bad)  
  41a1c9:	cld    
  41a1ca:	cdq    
  41a1cb:	lahf   
  41a1cc:	jge    0x41a151
  41a1ce:	(bad)  
  41a1cf:	lock leave 
  41a1d1:	ds push ss
  41a1d3:	xor    eax,0x589df0be
  41a1d8:	es loopne 0x41a1ca
  41a1db:	fisub  WORD PTR [ebx]
  41a1dd:	jne    0x41a221
  41a1df:	jae    0x41a1d8
  41a1e1:	and    ch,BYTE PTR [ecx+0x32]
  41a1e4:	cmp    al,0x48
  41a1e6:	or     esp,ebx
  41a1e8:	jns    0x41a1b2
  41a1ea:	mov    dl,0x49
  41a1ec:	pop    ds
  41a1ed:	push   0xd6c14e21
  41a1f2:	sub    WORD PTR ds:0xa6cfe075,cx
  41a1f9:	data16 xlat BYTE PTR ds:[ebx]
  41a1fb:	sbb    DWORD PTR [ebx+edx*4-0x7da10ccc],0x43d282e3
  41a206:	mov    al,0xc5
  41a208:	mov    eax,0x741c3028
  41a20d:	das    
  41a20e:	or     eax,0x8c518788
  41a213:	(bad)  
  41a214:	stc    
  41a215:	sub    BYTE PTR [edi+0x74e8583],bl
  41a21b:	pushf  
  41a21c:	adc    BYTE PTR [ebx],dh
  41a21e:	es mov al,0x13
  41a221:	cmp    eax,0x27bab512
  41a226:	mov    edx,0xb46f9283
  41a22b:	test   DWORD PTR [edi+0x58dcd965],esp
  41a231:	test   BYTE PTR [esi+0x65b2d46c],bh
  41a237:	push   cs
  41a238:	xchg   dl,dl
  41a23a:	iret   
  41a23b:	jne    0x41a1d4
  41a23d:	pop    es
  41a23e:	jle    0x41a28b
  41a240:	fwait
  41a241:	inc    ebp
  41a242:	pop    ds
  41a243:	inc    ecx
  41a244:	fidiv  DWORD PTR [ebx+0x69]
  41a247:	imul   eax,DWORD PTR [eax+0x58d5368c],0x248aaeec
  41a251:	(bad)  
  41a252:	fsub   DWORD PTR [ecx+0x401c4d31]
  41a258:	inc    eax
  41a259:	cmp    al,0xdf
  41a25b:	inc    esp
  41a25c:	jb     0x41a263
  41a25e:	(bad)  
  41a25f:	cmp    BYTE PTR [esi],cl
  41a261:	jecxz  0x41a266
  41a263:	adc    eax,0x12131167
  41a268:	cmp    ah,cl
  41a26a:	loopne 0x41a2c1
  41a26c:	push   edi
  41a26d:	mov    BYTE PTR [eax],al
  41a26f:	int3   
  41a270:	shr    BYTE PTR [esi],cl
  41a272:	cmp    esi,esp
  41a274:	gs dec ecx
  41a276:	pop    ebx
  41a277:	loope  0x41a2c9
  41a279:	mov    bh,0x29
  41a27b:	inc    ebp
  41a27c:	sbb    al,0x7f
  41a27e:	imul   ebp,edx,0x1bb3448c
  41a284:	mov    eax,ds:0x3d0f9768
  41a289:	adc    eax,0xfdd65bdd
  41a28e:	ja     0x41a269
  41a290:	mov    cs,WORD PTR [edx]
  41a292:	shl    ebp,0xe0
  41a295:	dec    eax
  41a296:	icebp  
  41a297:	imul   edx,DWORD PTR [ecx],0xffffff86
  41a29a:	ret    0x97fd
  41a29d:	dec    edi
  41a29e:	mov    esp,0xae2112ed
  41a2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a4:	push   ss
  41a2a5:	push   ds
  41a2a6:	hlt    
  41a2a7:	dec    edx
  41a2a8:	mov    ds:0x1bf9d7c7,al
  41a2ad:	and    eax,0x4f7efc91
  41a2b2:	adc    dl,BYTE PTR [ecx]
  41a2b4:	cwde   
  41a2b5:	shr    BYTE PTR [eax-0x45],1
  41a2b8:	inc    eax
  41a2b9:	test   eax,0x61af05a8
  41a2be:	es dec esp
  41a2c0:	sti    
  41a2c1:	fidiv  DWORD PTR [esi-0x122f8552]
  41a2c7:	cmc    
  41a2c8:	or     BYTE PTR [ebx-0x4],ah
  41a2cb:	inc    edx
  41a2cc:	pop    edi
  41a2cd:	xchg   ebp,eax
  41a2ce:	mov    fs,WORD PTR [edx]
  41a2d0:	sbb    edi,edi
  41a2d2:	fnsave [edi]
  41a2d4:	xchg   esi,eax
  41a2d5:	retf   
  41a2d6:	mov    esp,0x54caf9dd
  41a2db:	mov    cl,BYTE PTR [eax-0x166409b9]
  41a2e1:	pop    eax
  41a2e2:	fst    QWORD PTR [ebx-0x17]
  41a2e5:	add    eax,0x359fb49f
  41a2ea:	pushf  
  41a2eb:	jp     0x41a29a
  41a2ed:	dec    BYTE PTR [esi-0x46155fb6]
  41a2f3:	jb     0x41a363
  41a2f5:	je     0x41a34c
  41a2f7:	test   al,0x56
  41a2f9:	mov    fs,WORD PTR [edx+0x3f08588a]
  41a2ff:	(bad)  [ecx-0x6c54b645]
  41a305:	mov    al,0x5
  41a307:	add    BYTE PTR [eax],0x1f
  41a30a:	and    ch,al
  41a30c:	push   edx
  41a30d:	stos   DWORD PTR es:[edi],eax
  41a30e:	sar    DWORD PTR [ebx+0x53651abb],0xf
  41a315:	imul   esp,DWORD PTR [ebx-0x66513d99],0x5ad7a292
  41a31f:	xlat   BYTE PTR ds:[ebx]
  41a320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a321:	pop    ds
  41a322:	push   ss
  41a323:	aas    
  41a324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a325:	out    0x4f,al
  41a327:	jl     0x41a31f
  41a329:	sub    al,0x1a
  41a32b:	sbb    eax,DWORD PTR [eax-0xa]
  41a32e:	jge    0x41a324
  41a330:	jle    0x41a322
  41a332:	repz scas al,BYTE PTR es:[edi]
  41a334:	mov    ebx,0x27568630
  41a339:	lahf   
  41a33a:	mov    eax,ds:0xd5d1f937
  41a33f:	lods   al,BYTE PTR ds:[esi]
  41a340:	cs je  0x41a319
  41a343:	cmp    DWORD PTR [ecx+eax*2+0x1fe15412],ecx
  41a34a:	push   0x10737ad
  41a34f:	fidiv  DWORD PTR [edi]
  41a351:	sub    dh,ah
  41a353:	inc    esi
  41a354:	scas   al,BYTE PTR es:[edi]
  41a355:	shl    DWORD PTR [ebx-0x386c5aa4],1
  41a35b:	aas    
  41a35c:	mov    eax,ds:0x39c1ff1b
  41a361:	cmp    edi,DWORD PTR [eax-0x3d]
  41a364:	push   eax
  41a365:	popf   
  41a366:	lods   eax,DWORD PTR ds:[esi]
  41a367:	cmc    
  41a368:	(bad)  
  41a369:	and    ebx,ecx
  41a36b:	imul   edx,DWORD PTR [edx],0x1c0913ab
  41a371:	jge    0x41a394
  41a373:	fsubr  st(3),st
  41a375:	mov    dl,0xd
  41a377:	add    eax,0x7aa125a7
  41a37c:	add    al,BYTE PTR ds:0x463e9451
  41a382:	jge    0x41a3c2
  41a384:	(bad)  
  41a385:	sbb    dh,cl
  41a387:	fwait
  41a388:	xchg   edi,eax
  41a389:	jnp    0x41a3d5
  41a38b:	and    ah,cl
  41a38d:	dec    ebx
  41a38e:	lea    eax,[edi]
  41a390:	sub    eax,0x3bbd8afb
  41a395:	fimul  WORD PTR [ebx-0x107bfb81]
  41a39b:	xchg   esi,eax
  41a39c:	mov    BYTE PTR [ecx-0x13],bl
  41a39f:	xchg   edx,eax
  41a3a0:	push   ebx
  41a3a1:	(bad)  
  41a3a2:	imul   ebp,DWORD PTR [ebp-0x63e3a18d],0x5801d8f2
  41a3ac:	jae    0x41a37b
  41a3ae:	cmp    ebp,DWORD PTR [edx+0x3b388010]
  41a3b4:	sbb    BYTE PTR [edx],dh
  41a3b6:	push   0x61b5f27b
  41a3bb:	and    DWORD PTR [edx+0x3f],edi
  41a3be:	dec    edx
  41a3bf:	jb     0x41a3ab
  41a3c1:	or     al,0x6c
  41a3c3:	cmp    DWORD PTR [edi],ebx
  41a3c5:	xchg   ecx,eax
  41a3c6:	mov    bh,BYTE PTR [ebx]
  41a3c8:	das    
  41a3c9:	fist   DWORD PTR [ecx+0x41f98048]
  41a3cf:	fst    QWORD PTR [edx-0x27cb6e37]
  41a3d5:	lea    edi,[edx-0xd]
  41a3d8:	lock and DWORD PTR [eax+0x2],edx
  41a3dc:	jno    0x41a36e
  41a3de:	sahf   
  41a3df:	adc    DWORD PTR [edi+0x47a5201c],ebp
  41a3e5:	inc    esp
  41a3e6:	popa   
  41a3e7:	out    dx,eax
  41a3e8:	jbe    0x41a3bd
  41a3ea:	pop    esp
  41a3eb:	cdq    
  41a3ec:	popa   
  41a3ed:	mov    DWORD PTR [ecx],eax
  41a3ef:	das    
  41a3f0:	dec    ecx
  41a3f1:	ror    BYTE PTR [esi+0x33],1
  41a3f4:	ficomp DWORD PTR [esi]
  41a3f6:	mov    bl,0x1b
  41a3f8:	jmp    FWORD PTR [eax-0x6f]
  41a3fb:	jb     0x41a3cb
  41a3fd:	xchg   esp,eax
  41a3fe:	xor    edi,ecx
  41a400:	not    edi
  41a402:	shl    esp,cl
  41a404:	(bad)  
  41a405:	pop    esi
  41a406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a407:	and    eax,0x7a86246b
  41a40c:	fld    QWORD PTR [ebx]
  41a40e:	loope  0x41a3de
  41a410:	add    dh,BYTE PTR [esi-0x26]
  41a413:	pop    ebp
  41a414:	mov    dl,0x69
  41a416:	jo     0x41a440
  41a418:	leave  
  41a419:	loop   0x41a479
  41a41b:	dec    edi
  41a41c:	xchg   edx,eax
  41a41d:	mov    edi,0x3153eaff
  41a422:	sbb    BYTE PTR [edi+0x6dec96d7],cl
  41a428:	mov    eax,fs:0x9646f085
  41a42e:	fidivr WORD PTR [ebx]
  41a430:	imul   esp,DWORD PTR [edi-0x4b],0x33
  41a434:	xor    DWORD PTR [ebp+0x22b87b55],0xca19847a
  41a43e:	repz aas 
  41a440:	push   0x26
  41a442:	sub    BYTE PTR [esi+0x33],0xf9
  41a446:	jl     0x41a488
  41a448:	jbe    0x41a3ed
  41a44a:	add    ebp,ebx
  41a44c:	push   esp
  41a44d:	retf   
  41a44e:	lahf   
  41a44f:	xchg   ebp,eax
  41a450:	inc    esp
  41a451:	cld    
  41a452:	fbld   TBYTE PTR [esi-0xd4305e0]
  41a458:	fist   WORD PTR [eax]
  41a45a:	test   eax,0x7f6141df
  41a45f:	inc    edi
  41a460:	push   edi
  41a461:	lahf   
  41a462:	test   DWORD PTR [ecx+0x438d24ec],edx
  41a468:	pop    eax
  41a469:	jge    0x41a42c
  41a46b:	repz adc ch,0x28
  41a46f:	(bad)  
  41a470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a471:	or     cl,ah
  41a473:	push   ebx
  41a474:	xchg   ebx,eax
  41a475:	aas    
  41a476:	(bad)  
  41a479:	daa    
  41a47a:	jge    0x41a47a
  41a47c:	pop    esi
  41a47d:	sub    eax,0x82cc1973
  41a482:	jb     0x41a496
  41a484:	rol    BYTE PTR [ecx-0x549551c4],1
  41a48a:	inc    edx
  41a48b:	inc    eax
  41a48c:	fs sub eax,0x7c1daf4
  41a492:	pop    ds
  41a493:	scas   al,BYTE PTR es:[edi]
  41a494:	inc    BYTE PTR [ecx+esi*1]
  41a497:	jno    0x41a4fa
  41a499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49a:	ins    DWORD PTR es:[edi],dx
  41a49b:	frndint 
  41a49d:	cmp    al,0x2c
  41a49f:	inc    esi
  41a4a0:	scas   al,BYTE PTR es:[edi]
  41a4a1:	test   DWORD PTR [ebx-0x7a],edx
  41a4a4:	sbb    ecx,esi
  41a4a6:	aam    0x38
  41a4a8:	stos   DWORD PTR es:[edi],eax
  41a4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4aa:	mov    al,ds:0x30874258
  41a4af:	pushf  
  41a4b0:	ins    BYTE PTR es:[edi],dx
  41a4b1:	and    ecx,0x6b
  41a4b4:	mov    ds:0x3619814e,al
  41a4b9:	loopne 0x41a4cc
  41a4bb:	iret   
  41a4bc:	mov    ds:0xab8110a5,al
  41a4c1:	sar    DWORD PTR [ebp+edx*8+0x719f9958],0xd7
  41a4c9:	outs   dx,BYTE PTR ds:[esi]
  41a4ca:	xchg   esi,eax
  41a4cb:	xor    al,0x1c
  41a4cd:	bound  ebp,QWORD PTR [ecx-0x2c]
  41a4d0:	out    0x62,al
  41a4d2:	jmp    FWORD PTR [ecx+0x46]
  41a4d5:	mov    dh,0xdb
  41a4d7:	popa   
  41a4d8:	xor    al,0xcf
  41a4da:	(bad)  
  41a4db:	sub    BYTE PTR [edi],0x3e
  41a4de:	inc    ebx
  41a4df:	xchg   ecx,eax
  41a4e0:	sub    BYTE PTR [ebx],dh
  41a4e2:	mov    al,0xda
  41a4e4:	dec    esi
  41a4e5:	sbb    ch,dl
  41a4e7:	repz scas eax,DWORD PTR es:[edi]
  41a4e9:	mov    eax,ds:0xd500955c
  41a4ee:	jg     0x41a4c2
  41a4f0:	out    dx,al
  41a4f1:	lock jb 0x41a481
  41a4f4:	dec    ebp
  41a4f5:	enter  0x943,0xcc
  41a4f9:	loopne 0x41a501
  41a4fb:	xor    edi,DWORD PTR [ebp+0x7b]
  41a4fe:	sub    al,0xa
  41a500:	or     DWORD PTR [edx+0x37],ebp
  41a503:	pop    edi
  41a504:	scas   eax,DWORD PTR es:[edi]
  41a505:	das    
  41a506:	push   ebp
  41a507:	xor    al,0x73
  41a509:	cwde   
  41a50a:	adc    DWORD PTR [edx+ebx*1],eax
  41a50d:	sub    bl,BYTE PTR [ebp-0x7d]
  41a510:	inc    ebx
  41a511:	(bad)  
  41a512:	lock rcl DWORD PTR [ebx],cl
  41a515:	dec    ebx
  41a516:	cmp    DWORD PTR [eax-0x1e],ebx
  41a519:	(bad)  
  41a51a:	call   FWORD PTR [edi]
  41a51c:	pop    esi
  41a51d:	mov    ch,0x30
  41a51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a520:	(bad)  
  41a521:	jnp    0x41a4f6
  41a523:	fsubr  DWORD PTR [edx-0x78d04141]
  41a529:	mov    ch,0x8b
  41a52b:	dec    esi
  41a52c:	imul   ebp,ebp,0xdcc3833d
  41a532:	xchg   ebx,eax
  41a533:	sub    BYTE PTR [edx-0x5],al
  41a536:	pop    edx
  41a537:	pop    edi
  41a538:	jns    0x41a521
  41a53a:	retf   
  41a53b:	inc    ebp
  41a53c:	xlat   BYTE PTR ds:[ebx]
  41a53d:	push   esp
  41a53e:	(bad)  
  41a540:	clc    
  41a541:	or     ecx,DWORD PTR [esi-0x1d]
  41a544:	cmp    BYTE PTR [edi],cl
  41a546:	adc    DWORD PTR ds:0xd6f19e39,ecx
  41a54c:	jae    0x41a4ff
  41a54e:	mov    ebx,ebx
  41a550:	dec    ecx
  41a551:	lds    edi,FWORD PTR [edi+edi*1+0x6b8ff14c]
  41a558:	and    ecx,esp
  41a55a:	mov    dl,0xf5
  41a55c:	sub    dh,BYTE PTR [esi]
  41a55e:	adc    al,0x3f
  41a560:	mov    cl,0xae
  41a562:	and    al,0x3c
  41a564:	sar    DWORD PTR cs:[edi+0x42f04613],0x42
  41a56c:	jmp    0x41a58b
  41a56e:	dec    ecx
  41a56f:	mov    ds:0xb14d9fbc,eax
  41a574:	sar    BYTE PTR [ebp-0x7b36734],cl
  41a57a:	cs fwait
  41a57c:	and    BYTE PTR [ecx+0x32],dl
  41a57f:	xchg   DWORD PTR [esi-0x2],edx
  41a582:	dec    ebp
  41a583:	stc    
  41a584:	test   DWORD PTR [edi+0x66],eax
  41a587:	mov    cl,0x6d
  41a589:	jl     0x41a525
  41a58b:	and    eax,0x69a06a41
  41a590:	cmp    DWORD PTR [ecx+0x3b9ba3a7],0x9920fad6
  41a59a:	jbe    0x41a5f5
  41a59c:	shl    DWORD PTR [ebp+0xfbe6daa],1
  41a5a2:	call   0x53603f46
  41a5a7:	sbb    eax,0xcc1f34be
  41a5ac:	test   ecx,ebx
  41a5ae:	test   edx,edx
  41a5b0:	mov    eax,0x6ae47ccc
  41a5b5:	mov    dl,0xf8
  41a5b7:	cmp    edi,DWORD PTR [ebp-0x19fede05]
  41a5bd:	sbb    BYTE PTR [edi],al
  41a5bf:	retf   
  41a5c0:	dec    ebp
  41a5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c2:	out    0xb,al
  41a5c4:	or     al,0x73
  41a5c6:	(bad)  
  41a5c7:	js     0x41a559
  41a5c9:	push   es
  41a5ca:	jne    0x41a5d7
  41a5cc:	xchg   ebx,eax
  41a5cd:	sub    BYTE PTR [esi+0x67cc9eb1],al
  41a5d3:	xchg   edi,eax
  41a5d4:	stos   BYTE PTR es:[edi],al
  41a5d5:	enter  0x4640,0x9b
  41a5d9:	mov    BYTE PTR [esi],bh
  41a5db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5dc:	aad    0x56
  41a5de:	loopne 0x41a615
  41a5e0:	mov    edi,0x13b04db5
  41a5e5:	fadd   QWORD PTR [esi]
  41a5e7:	test   al,0xa4
  41a5e9:	fsubr  QWORD PTR [ebp-0x73]
  41a5ec:	add    DWORD PTR [ebp-0x8],ebp
  41a5ef:	cdq    
  41a5f0:	clc    
  41a5f1:	jbe    0x41a620
  41a5f3:	leave  
  41a5f4:	lds    esi,FWORD PTR [edx+0x58]
  41a5f7:	sub    BYTE PTR [ebx-0x76],dl
  41a5fa:	data16 xor ch,BYTE PTR [eax+0x494a1cba]
  41a601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a602:	ja     0x41a5db
  41a604:	imul   esp,edx,0x73
  41a607:	xchg   esi,eax
  41a608:	xchg   ebx,eax
  41a609:	mov    BYTE PTR [ebx-0x4b],al
  41a60c:	jmp    edx
  41a60e:	rol    DWORD PTR [esi-0x1b],0x50
  41a612:	sbb    ecx,DWORD PTR [ebp+esi*2+0x52597fc8]
  41a619:	pop    ecx
  41a61a:	adc    ch,BYTE PTR [eax]
  41a61c:	out    dx,eax
  41a61d:	ror    ebx,1
  41a61f:	sbb    BYTE PTR [ebx+0x26d85e33],dl
  41a625:	scas   al,BYTE PTR es:[edi]
  41a626:	popf   
  41a627:	data16 cmp bl,bl
  41a62a:	mov    ebp,0x87deedc1
  41a62f:	inc    edi
  41a630:	loopne 0x41a5ed
  41a632:	hlt    
  41a633:	jecxz  0x41a602
  41a635:	mov    WORD PTR [edi],?
  41a637:	repnz push edx
  41a639:	pusha  
  41a63a:	cs add eax,0xc24b9b4
  41a640:	jnp    0x41a69c
  41a642:	loopne 0x41a684
  41a644:	push   edi
  41a645:	xchg   ebx,eax
  41a646:	stos   DWORD PTR es:[edi],eax
  41a647:	wbinvd 
  41a649:	push   cs
  41a64a:	ror    BYTE PTR [ebp-0x29],0xb3
  41a64e:	mov    ebp,0xfd0a5e38
  41a653:	jne    0x41a64d
  41a655:	stc    
  41a656:	sub    DWORD PTR [esi-0x33],0x5f7923b0
  41a65d:	lar    edi,WORD PTR [edx-0x5c584a36]
  41a664:	inc    ecx
  41a665:	jmp    0x41a607
  41a667:	cdq    
  41a668:	cmc    
  41a669:	sbb    eax,0x7cda3fe3
  41a66e:	jns    0x41a6ec
  41a670:	stos   DWORD PTR es:[edi],eax
  41a671:	push   es
  41a672:	fsub   DWORD PTR [eax-0x7d]
  41a675:	cs jp  0x41a6b7
  41a678:	mov    ds:0xe2eaff71,al
  41a67d:	and    ecx,ecx
  41a67f:	mov    esi,0x56c778f7
  41a684:	mov    esp,0xb4359989
  41a689:	retf   
  41a68a:	xchg   edi,eax
  41a68b:	adc    al,0x7b
  41a68d:	mov    edi,0x32627d07
  41a692:	adc    DWORD PTR [ecx+0x1a],ebp
  41a695:	cli    
  41a696:	mov    esp,0x4f054ad2
  41a69b:	inc    eax
  41a69c:	pop    esp
  41a69d:	jae    0x41a694
  41a69f:	lock imul esi,DWORD PTR [edx-0x771fcb73],0xffffffae
  41a6a7:	adc    DWORD PTR [edi],edx
  41a6a9:	add    bl,BYTE PTR [eax]
  41a6ab:	or     BYTE PTR [edi],ch
  41a6ad:	imul   ebx,DWORD PTR [edx],0xfffffff4
  41a6b0:	in     al,dx
  41a6b1:	sub    al,0x3
  41a6b4:	(bad)  
  41a6b5:	sbb    ebx,esi
  41a6b7:	lods   eax,DWORD PTR ds:[esi]
  41a6b8:	test   bl,ah
  41a6ba:	fs jbe 0x41a6a7
  41a6bd:	imul   esp
  41a6bf:	or     BYTE PTR [eax],cl
  41a6c1:	shl    BYTE PTR [esi+0x2b524e33],cl
  41a6c7:	cmp    BYTE PTR ds:0x447369fe,0xaa
  41a6ce:	pop    ecx
  41a6cf:	jno    0x41a656
  41a6d1:	jne    0x41a682
  41a6d3:	jp     0x41a6c0
  41a6d5:	xor    eax,0xa8c00892
  41a6da:	fdiv   st,st(1)
  41a6dc:	add    cl,BYTE PTR [ecx+0x2d]
  41a6df:	and    al,0xa8
  41a6e1:	shr    BYTE PTR [esp+ecx*2],0x6
  41a6e5:	(bad)  
  41a6e6:	pop    ecx
  41a6e7:	push   esp
  41a6e8:	xor    al,0x6f
  41a6ea:	loop   0x41a735
  41a6ec:	xor    BYTE PTR [esp+ebx*8],dh
  41a6ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6f0:	or     bh,BYTE PTR [ebp+0x1]
  41a6f3:	fisttp QWORD PTR ds:0x6a3f182
  41a6f9:	cs sub al,0x49
  41a6fc:	mov    ebx,0x9727d7f9
  41a701:	and    BYTE PTR [eax-0x3e],0xe9
  41a705:	sbb    al,0x8
  41a707:	mov    ebp,0xe966f7eb
  41a70c:	pop    esi
  41a70d:	push   ebp
  41a70e:	in     eax,0xe5
  41a710:	std    
  41a711:	xchg   ebx,eax
  41a712:	aam    0xa3
  41a714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a715:	inc    ecx
  41a716:	mov    dh,0xaf
  41a718:	push   ebp
  41a719:	aam    0xb3
  41a71b:	pop    ecx
  41a71c:	cli    
  41a71d:	jmp    0x960770a3
  41a722:	xor    BYTE PTR [esi-0x21],0x7f
  41a726:	mov    ebp,0x225a263e
  41a72b:	and    ebp,DWORD PTR [eax-0x47d281e8]
  41a731:	pop    edx
  41a732:	adc    BYTE PTR [esi+0x778f0f60],al
  41a738:	es int 0xef
  41a73b:	or     DWORD PTR [ecx-0x34],edx
  41a73e:	jno    0x41a709
  41a740:	jecxz  0x41a74f
  41a742:	push   ebx
  41a743:	mov    bh,0xa
  41a745:	data16 ja 0x41a6cd
  41a748:	dec    esp
  41a749:	jmp    0x886e7bdc
  41a74e:	jmp    0x41a735
  41a750:	pop    ds
  41a751:	sar    DWORD PTR [edi-0x2c],cl
  41a754:	scas   al,BYTE PTR es:[edi]
  41a755:	sti    
  41a756:	scas   eax,DWORD PTR es:[edi]
  41a757:	mov    ebp,0x8143f4c9
  41a75c:	and    DWORD PTR [ebx],edi
  41a75e:	inc    eax
  41a75f:	div    bl
  41a761:	imul   ecx,DWORD PTR [ecx],0x154cc0a4
  41a767:	js     0x41a72b
  41a769:	push   ecx
  41a76a:	sbb    al,0x4c
  41a76c:	fistp  WORD PTR [edi]
  41a76e:	out    dx,eax
  41a76f:	sahf   
  41a770:	or     DWORD PTR [ecx],0xf69cf7bc
  41a776:	(bad)  
  41a777:	(bad)  
  41a778:	mov    DWORD PTR [ecx+0x4],edi
  41a77b:	rol    BYTE PTR [esi],1
  41a77d:	mov    al,0x71
  41a77f:	push   edx
  41a780:	int3   
  41a781:	sub    BYTE PTR [edx+ebp*4-0x5a],ah
  41a785:	fisttp WORD PTR [ecx+edi*4-0x60]
  41a789:	and    edi,DWORD PTR [ebp+0x403b8c03]
  41a78f:	into   
  41a790:	jo     0x41a79d
  41a792:	fld    TBYTE PTR [eax]
  41a794:	fsubr  st,st(6)
  41a796:	cmp    ecx,DWORD PTR [ebp+0x412f9bb0]
  41a79c:	sti    
  41a79d:	or     al,0x13
  41a79f:	sbb    DWORD PTR ds:0x1e86a130,edx
  41a7a5:	test   DWORD PTR [esi-0x15],0xb84a9b6a
  41a7ac:	lods   al,BYTE PTR ds:[esi]
  41a7ad:	jae    0x41a757
  41a7af:	push   es
  41a7b0:	xor    dl,BYTE PTR [eax-0x55]
  41a7b3:	dec    esp
  41a7b4:	add    al,0x2c
  41a7b6:	js     0x41a7cd
  41a7b8:	cmp    BYTE PTR [ebx+0x73230201],ch
  41a7be:	daa    
  41a7bf:	adc    BYTE PTR [ebx],0x12
  41a7c2:	cwde   
  41a7c3:	jb     0x41a7cb
  41a7c5:	push   ss
  41a7c6:	cli    
  41a7c7:	pushf  
  41a7c8:	inc    ebp
  41a7c9:	dec    esi
  41a7ca:	jno    0x41a826
  41a7cc:	mov    dl,0xbb
  41a7ce:	mov    ah,0xbf
  41a7d0:	out    0xfa,al
  41a7d2:	shl    BYTE PTR [eax+0x328cb746],1
  41a7d8:	icebp  
  41a7d9:	inc    eax
  41a7da:	in     al,0x67
  41a7dc:	fdiv   DWORD PTR ds:0x770cff96
  41a7e2:	push   edi
  41a7e3:	les    ebx,FWORD PTR [edx-0x4ca943b0]
  41a7e9:	addr16 jp 0x41a83e
  41a7ec:	mov    ebp,esp
  41a7ee:	xchg   ebp,eax
  41a7ef:	out    0x15,al
  41a7f1:	push   cs
  41a7f2:	or     ecx,edi
  41a7f4:	cmp    BYTE PTR [edx+0x62ed143],ch
  41a7fa:	mov    al,0x89
  41a7fc:	into   
  41a7fd:	(bad)  
  41a7fe:	mov    ds:0xd94b9f31,eax
  41a803:	push   esp
  41a804:	adc    BYTE PTR [edx-0x44a47b16],bl
  41a80a:	rcl    BYTE PTR [esi-0x5d34794],cl
  41a810:	std    
  41a811:	pop    es
  41a812:	in     eax,dx
  41a813:	jle    0x41a7fd
  41a815:	cmp    BYTE PTR [edx],al
  41a817:	mov    ebx,0xe9d60737
  41a81c:	push   ebx
  41a81d:	mov    eax,DWORD PTR [ebx]
  41a81f:	dec    ebp
  41a820:	dec    esp
  41a821:	out    dx,al
  41a822:	aas    
  41a823:	sub    eax,DWORD PTR [esi+0x6dcaf6f5]
  41a829:	cmp    eax,0x7779c5b0
  41a82e:	dec    edi
  41a82f:	xchg   DWORD PTR [edx-0x30],esi
  41a832:	retf   0x2ee7
  41a835:	cmp    al,0x34
  41a837:	and    ah,ch
  41a839:	nop
  41a83a:	in     eax,dx
  41a83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a83c:	rcl    DWORD PTR [ebp+0x166f7aae],cl
  41a842:	out    0x3f,al
  41a844:	pop    ebp
  41a845:	cwde   
  41a846:	mov    fs,edx
  41a848:	pop    ds
  41a849:	mov    edi,DWORD PTR ds:0xdfdb8cf9
  41a84f:	inc    edx
  41a850:	push   esp
  41a852:	push   esp
  41a853:	xchg   ch,ch
  41a855:	(bad)  
  41a856:	in     eax,dx
  41a857:	xor    BYTE PTR [ebx-0x3394957],bl
  41a85d:	jmp    0x2c86:0x24f5d973
  41a864:	pop    eax
  41a865:	cmp    edx,DWORD PTR [esi-0x13acf0f8]
  41a86b:	mov    ecx,0x10c19719
  41a870:	cdq    
  41a871:	rcr    ah,cl
  41a873:	call   0xccf3d46b
  41a878:	in     al,0x8e
  41a87a:	mov    BYTE PTR [ecx-0x854f6fc],ch
  41a880:	sahf   
  41a881:	jp     0x41a8fc
  41a883:	xor    al,BYTE PTR [edx]
  41a885:	push   eax
  41a886:	jle    0x41a896
  41a888:	in     al,dx
  41a889:	or     dl,ch
  41a88b:	xor    esi,0xffffffac
  41a88e:	ss or  al,0x55
  41a891:	(bad)  
  41a892:	in     al,0xd9
  41a894:	leave  
  41a895:	jae    0x41a904
  41a897:	dec    edi
  41a898:	cmp    eax,0xf582a72d
  41a89d:	mov    ebx,DWORD PTR [ebx+edx*8+0x5f8e5074]
  41a8a4:	add    ecx,edi
  41a8a6:	fstp   TBYTE PTR [ebx]
  41a8a8:	xchg   ecx,eax
  41a8a9:	leave  
  41a8aa:	xchg   ebp,eax
  41a8ab:	outs   dx,DWORD PTR ds:[esi]
  41a8ac:	push   0x609e3d4e
  41a8b1:	(bad)  
  41a8b2:	mov    esp,0x7c8963ea
  41a8b7:	fmulp  st(6),st
  41a8b9:	pop    edi
  41a8ba:	sti    
  41a8bb:	xchg   BYTE PTR [edi-0x36f548e0],cl
  41a8c1:	int    0x23
  41a8c3:	cs in  eax,dx
  41a8c5:	loope  0x41a901
  41a8c7:	inc    ecx
  41a8c8:	call   0x36e0a640
  41a8cd:	shl    BYTE PTR [ebp+esi*2-0x6448b7f5],0x17
  41a8d5:	ds or  al,cl
  41a8d8:	fwait
  41a8d9:	push   cs
  41a8da:	mov    BYTE PTR [ecx-0x2de4cac1],dl
  41a8e0:	mov    ecx,0xf73f092e
  41a8e5:	iret   
  41a8e6:	xchg   ecx,eax
  41a8e7:	sub    ah,BYTE PTR [edi]
  41a8e9:	or     DWORD PTR [edi-0x79],esi
  41a8ec:	adc    DWORD PTR [esi-0x3c],0xbcb8807c
  41a8f3:	lock retf 0x26d5
  41a8f7:	add    eax,0xcdbde619
  41a8fc:	pushf  
  41a8fd:	leave  
  41a8fe:	mov    cl,dh
  41a900:	pop    ecx
  41a901:	adc    eax,0x95897b3e
  41a906:	pop    eax
  41a907:	data16 ins BYTE PTR es:[edi],dx
  41a909:	and    ecx,edx
  41a90b:	(bad)  
  41a90c:	(bad)  [ebx]
  41a90e:	push   edx
  41a90f:	push   eax
  41a910:	frstor [ecx-0x2f]
  41a913:	out    dx,al
  41a914:	loope  0x41a8f7
  41a916:	xchg   edi,eax
  41a917:	dec    esi
  41a918:	mov    ebp,0xd0e7b057
  41a91d:	pusha  
  41a91e:	mov    bl,0x72
  41a920:	arpl   sp,cx
  41a922:	xchg   DWORD PTR [esi-0x2dd5c046],edx
  41a928:	mov    al,0x0
  41a92a:	sbb    ebp,ebx
  41a92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a92d:	xchg   edx,eax
  41a92e:	repz mov ebp,0x6019bd86
  41a934:	lock ror BYTE PTR [eax+0x31],0xee
  41a939:	mov    al,0xf1
  41a93b:	loopne 0x41a913
  41a93d:	or     esp,DWORD PTR [esi]
  41a93f:	jmp    0x41a953
  41a941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a942:	rcr    DWORD PTR [ebx-0x4ce7ae33],cl
  41a948:	jbe    0x41a904
  41a94a:	fisttp DWORD PTR [ebx-0x39bddc74]
  41a950:	or     ecx,DWORD PTR [edx]
  41a952:	dec    eax
  41a953:	sub    eax,0x2e7639a3
  41a958:	push   0x11
  41a95a:	mov    cl,0x23
  41a95c:	or     al,0xd
  41a95e:	lar    ebp,bp
  41a961:	jg     0x41a8f8
  41a963:	mov    cl,0x13
  41a965:	lds    edx,FWORD PTR [ebx-0x2a63d8]
  41a96b:	popa   
  41a96c:	pop    ebx
  41a96d:	sbb    DWORD PTR [ecx+eax*2],esp
  41a970:	fs sub al,0x14
  41a973:	mov    ds:0x5673c190,al
  41a978:	neg    BYTE PTR [edi]
  41a97a:	or     al,0xe6
  41a97c:	test   eax,0x68470d48
  41a981:	pop    edi
  41a982:	fs push 0x4e257d00
  41a988:	or     ah,0x84
  41a98b:	addr16 jmp 0x41a954
  41a98e:	mov    bh,0x54
  41a990:	adc    edi,DWORD PTR [eax-0x6d5af1e0]
  41a996:	and    al,0x73
  41a998:	inc    eax
  41a999:	mov    ebp,0x705c9e90
  41a99e:	into   
  41a99f:	cdq    
  41a9a0:	data16 and al,0xdb
  41a9a3:	(bad)  
  41a9a4:	sti    
  41a9a5:	push   ss
  41a9a6:	retf   
  41a9a7:	sub    cl,BYTE PTR [ebx+eiz*1-0x78]
  41a9ab:	jmp    0xac2b:0x605ecbc9
  41a9b2:	imul   edx,DWORD PTR ds:0x41015b65,0x4b
  41a9b9:	sbb    eax,0xd846d259
  41a9be:	bound  edi,QWORD PTR [ebx]
  41a9c0:	xor    DWORD PTR [eax-0x14],esp
  41a9c3:	int    0x86
  41a9c5:	sbb    al,0x1c
  41a9c7:	call   0xfe85:0xa632976a
  41a9ce:	mov    al,0x80
  41a9d0:	shl    DWORD PTR [eax+0x14b8bf0d],0xd
  41a9d7:	adc    eax,0x9397bc92
  41a9dc:	mov    ds:0xaca2b31a,eax
  41a9e1:	sahf   
  41a9e2:	dec    esi
  41a9e3:	cmp    esi,DWORD PTR [edx+ebx*2]
  41a9e6:	in     eax,0x1b
  41a9e8:	add    DWORD PTR [edi-0x6f],ebp
  41a9eb:	outs   dx,BYTE PTR ds:[esi]
  41a9ec:	js     0x41aa10
  41a9ee:	jnp    0x41aa03
  41a9f0:	add    ch,dh
  41a9f2:	cmp    BYTE PTR [esp+esi*1-0x350b5d75],0x82
  41a9fa:	sahf   
  41a9fb:	inc    edx
  41a9fc:	mov    cl,0x7b
  41a9fe:	repz push es
  41aa00:	arpl   si,cx
  41aa02:	jmp    0x41aa70
  41aa04:	mov    dh,0x3
  41aa06:	and    ebp,DWORD PTR [ecx]
  41aa08:	std    
  41aa09:	ret    
  41aa0a:	xor    ch,bl
  41aa0c:	call   0x539a0033
  41aa11:	mov    fs,WORD PTR [eax]
  41aa13:	daa    
  41aa14:	js     0x41a9ae
  41aa16:	dec    esp
  41aa17:	or     BYTE PTR [ebp+0x69],bh
  41aa1a:	test   DWORD PTR [eax+0x33],edi
  41aa1d:	in     eax,dx
  41aa1e:	outs   dx,BYTE PTR ds:[esi]
  41aa1f:	mov    al,0x9a
  41aa21:	and    DWORD PTR [edx+ecx*4-0x50],ecx
  41aa25:	pop    eax
  41aa26:	rol    BYTE PTR [edi+0x65],0x3f
  41aa2a:	frstor [esi-0x7cabfac8]
  41aa30:	rcl    ebp,0x36
  41aa33:	mov    ebx,0x2f02d13e
  41aa38:	loopne 0x41aa85
  41aa3a:	cmp    al,0x38
  41aa3c:	(bad)  
  41aa3d:	and    ch,BYTE PTR [ecx]
  41aa3f:	addr16 push ecx
  41aa41:	or     eax,0x6bf4c9d7
  41aa46:	inc    esi
  41aa47:	mov    dl,0x33
  41aa49:	push   edx
  41aa4a:	push   0xd3658bc7
  41aa4f:	jl     0x41a9f6
  41aa51:	add    BYTE PTR [ecx-0x7449e314],al
  41aa57:	jecxz  0x41aa0a
  41aa59:	rcl    BYTE PTR [esp+eiz*4+0x609bbf92],1
  41aa60:	inc    ebp
  41aa61:	pushf  
  41aa62:	pushf  
  41aa63:	cmp    DWORD PTR [esp+ebx*1],esi
  41aa66:	rcl    BYTE PTR [ecx+0x71],1
  41aa69:	mov    bl,0x66
  41aa6b:	scas   al,BYTE PTR es:[edi]
  41aa6c:	dec    eax
  41aa6d:	inc    ebx
  41aa6e:	xchg   ebp,eax
  41aa6f:	xor    BYTE PTR [esi-0x24],bh
  41aa72:	pop    es
  41aa73:	mov    ch,BYTE PTR [ebp-0x20]
  41aa76:	mov    DWORD PTR [edi+0x51594f72],esp
  41aa7c:	pop    ebx
  41aa7d:	scas   al,BYTE PTR es:[edi]
  41aa7e:	jae    0x41aacc
  41aa80:	(bad)  
  41aa81:	jmp    0x41aad8
  41aa83:	mov    esp,0x95d3cc5e
  41aa88:	sub    eax,0x864f2e92
  41aa8d:	mov    edi,0x50488e13
  41aa92:	rol    ch,0xf0
  41aa95:	sbb    al,0x77
  41aa97:	pop    esp
  41aa98:	pop    esp
  41aa99:	cmp    ch,ch
  41aa9b:	mov    ebp,?
  41aa9d:	adc    al,0x54
  41aa9f:	jae    0x41aa88
  41aaa1:	mov    esi,0x7a4222d6
  41aaa6:	popf   
  41aaa7:	daa    
  41aaa8:	cld    
  41aaa9:	mov    cl,0x60
  41aaab:	call   0x2bad:0xf7ebad47
  41aab2:	inc    DWORD PTR [ebp-0x22]
  41aab5:	cld    
  41aab6:	inc    edx
  41aab7:	sub    dl,BYTE PTR [edx-0x24]
  41aaba:	repz jle 0x41ab14
  41aabd:	xor    BYTE PTR [eax+ebx*2-0x35],al
  41aac1:	clc    
  41aac2:	mov    ah,0xfc
  41aac4:	inc    ebp
  41aac5:	(bad)  
  41aac6:	mov    ds:0x370f1e6e,al
  41aacb:	js     0x41aad9
  41aacd:	adc    esi,DWORD PTR [ebx-0x4d]
  41aad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad1:	jg     0xe3ac0356
  41aad7:	test   al,0xd1
  41aad9:	jno    0x41ab5a
  41aadb:	hlt    
  41aadc:	push   edx
  41aadd:	xchg   ebp,eax
  41aade:	add    eax,0xffb2e174
  41aae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae4:	lahf   
  41aae5:	push   edx
  41aae6:	cwde   
  41aae7:	loop   0x41ab19
  41aae9:	dec    ebx
  41aaea:	cmp    edx,esp
  41aaec:	fbld   TBYTE PTR [esp+eiz*4]
  41aaef:	mov    BYTE PTR [ebx+ebp*1+0x63f712c9],dl
  41aaf6:	add    eax,0x5aa5853b
  41aafb:	or     eax,0xb7027bb7
  41ab00:	imul   esi,DWORD PTR ds:0x88522107,0x60
  41ab07:	retf   
  41ab08:	ja     0x41ab54
  41ab0a:	add    al,0x85
  41ab0c:	add    bh,BYTE PTR [si+0x299]
  41ab11:	mov    gs,esi
  41ab13:	int3   
  41ab14:	retf   0x524b
  41ab17:	cmp    DWORD PTR [ebx-0x6fb94aa9],eax
  41ab1d:	into   
  41ab1e:	fiadd  WORD PTR [ecx-0x45]
  41ab21:	mov    ebp,0x9a21e8b1
  41ab26:	mov    esi,0xff316ffb
  41ab2b:	sub    BYTE PTR [ebx],ch
  41ab2d:	sub    DWORD PTR [ebp+0x1c],esi
  41ab30:	pop    es
  41ab31:	jb     0x41ab99
  41ab33:	push   ebp
  41ab34:	(bad)  
  41ab35:	mov    bh,BYTE PTR [eax]
  41ab37:	and    esp,DWORD PTR [ebp-0x2036ca60]
  41ab3d:	push   esp
  41ab3e:	and    DWORD PTR [ebp-0x6c],ebx
  41ab41:	(bad)  
  41ab42:	inc    BYTE PTR [esp+ebp*1]
  41ab45:	push   es
  41ab46:	lods   eax,DWORD PTR ds:[esi]
  41ab47:	ins    DWORD PTR es:[edi],dx
  41ab48:	jae    0x41ab3b
  41ab4a:	push   edi
  41ab4b:	sub    al,0x10
  41ab4d:	jne    0x41aada
  41ab4f:	xor    DWORD PTR [edi+eax*4+0x15],esi
  41ab53:	adc    ebp,DWORD PTR [eax-0x13820d87]
  41ab59:	fcom   DWORD PTR [edx+0x45]
  41ab5c:	mov    esi,0x992f136f
  41ab61:	fbld   TBYTE PTR [ebp-0x69a724c2]
  41ab67:	cli    
  41ab68:	fcom   QWORD PTR [edx-0x28]
  41ab6b:	dec    ebx
  41ab6c:	jg     0x41ab73
  41ab6e:	retf   
  41ab6f:	sar    cl,cl
  41ab71:	je     0x41aaf6
  41ab73:	and    ecx,DWORD PTR [edi]
  41ab75:	idiv   BYTE PTR [esi-0x226e63c5]
  41ab7b:	ins    DWORD PTR es:[edi],dx
  41ab7c:	mov    eax,0xa3b7a409
  41ab81:	pushf  
  41ab82:	pop    esp
  41ab83:	add    ebp,eax
  41ab85:	shr    BYTE PTR [ecx-0x31d2414d],1
  41ab8b:	xchg   ecx,eax
  41ab8c:	mov    BYTE PTR [ebx+0x70],ch
  41ab8f:	lods   al,BYTE PTR ds:[esi]
  41ab90:	fldcw  WORD PTR [edi-0x10960801]
  41ab96:	pop    es
  41ab97:	xchg   edi,eax
  41ab98:	mov    ah,0xd4
  41ab9a:	xor    edi,esp
  41ab9c:	push   esp
  41ab9d:	pop    edi
  41ab9e:	inc    edi
  41ab9f:	pop    ecx
  41aba0:	inc    esp
  41aba1:	push   0xffffff97
  41aba3:	push   0x4ca179f0
  41aba8:	je     0x41abd2
  41abaa:	inc    edi
  41abab:	test   eax,0x46191f88
  41abb0:	fdivr  DWORD PTR [ecx]
  41abb2:	cwde   
  41abb3:	ret    
  41abb4:	test   ah,dl
  41abb6:	ds leave 
  41abb8:	ds pop eax
  41abba:	pop    eax
  41abbb:	pmaxsw mm5,QWORD PTR [ebx-0x1292ef86]
  41abc2:	mov    ecx,0x1b151851
  41abc7:	adc    ebx,edx
  41abc9:	fimul  WORD PTR [ebx+0x9286462]
  41abcf:	cmp    eax,0xa11f0701
  41abd4:	cmp    BYTE PTR [esi],0x9
  41abd7:	sti    
  41abd8:	mov    dh,0x1a
  41abda:	shl    edx,1
  41abdc:	fwait
  41abdd:	jecxz  0x41ac32
  41abdf:	mov    ecx,DWORD PTR [ebp-0x2b]
  41abe2:	je     0x41abea
  41abe4:	pop    eax
  41abe5:	scas   eax,DWORD PTR es:[edi]
  41abe6:	xor    BYTE PTR [eax-0x5894bb64],dl
  41abec:	mov    bl,0x41
  41abee:	cli    
  41abef:	hlt    
  41abf0:	pop    edi
  41abf1:	pop    ss
  41abf2:	or     DWORD PTR [esi+0x51d74a5d],esp
  41abf8:	push   esi
  41abf9:	push   esp
  41abfa:	jns    0x41abcc
  41abfc:	ins    DWORD PTR es:[edi],dx
  41abfd:	sar    DWORD PTR [esi+0x55495b6a],1
  41ac03:	shr    BYTE PTR [esp+esi*4],cl
  41ac06:	xchg   edx,eax
  41ac07:	sti    
  41ac08:	push   ss
  41ac09:	aaa    
  41ac0a:	fwait
  41ac0b:	rcr    BYTE PTR [ebp+0x24e023ed],cl
  41ac11:	hlt    
  41ac12:	sub    eax,0x45730ea6
  41ac17:	bound  esi,QWORD PTR [ecx-0x784ea27a]
  41ac1d:	out    dx,eax
  41ac1e:	mov    DWORD PTR [esi-0x31c1c105],ebx
  41ac24:	mov    eax,ds:0x986535a2
  41ac29:	inc    esp
  41ac2a:	retf   
  41ac2b:	mov    eax,0x7e0210ff
  41ac30:	lods   eax,DWORD PTR ds:[esi]
  41ac31:	iret   
  41ac32:	sti    
  41ac33:	pop    ebx
  41ac34:	cdq    
  41ac35:	mov    ecx,ecx
  41ac37:	mov    bl,ah
  41ac39:	adc    eax,0xd767edf7
  41ac3e:	icebp  
  41ac3f:	(bad)  
  41ac40:	test   al,0x58
  41ac42:	bound  ebx,QWORD PTR [ebp+0x7d422d5a]
  41ac48:	xchg   ebp,ebx
  41ac4a:	sti    
  41ac4b:	or     esp,DWORD PTR [ecx+0x2f]
  41ac4e:	je     0x41ac26
  41ac50:	pusha  
  41ac51:	outs   dx,BYTE PTR ds:[esi]
  41ac52:	loope  0x41ac93
  41ac54:	test   edi,ecx
  41ac56:	fs push ds
  41ac58:	cld    
  41ac59:	mov    eax,0xc3b5fdc4
  41ac5e:	push   esp
  41ac5f:	mov    esp,es
  41ac61:	int    0xd1
  41ac63:	pop    eax
  41ac64:	add    esp,DWORD PTR [esi-0x2409bf1e]
  41ac6a:	mov    ds:0x37e6456b,al
  41ac6f:	xchg   esi,eax
  41ac70:	popf   
  41ac71:	push   ss
  41ac72:	shl    DWORD PTR fs:[ecx],0xe9
  41ac76:	mov    esp,ebp
  41ac78:	loop   0x41acc4
  41ac7a:	scas   al,BYTE PTR es:[edi]
  41ac7b:	mov    gs,WORD PTR [eax-0xd6c33c7]
  41ac81:	mov    al,0x5d
  41ac83:	push   ds
  41ac84:	int    0x95
  41ac86:	add    eax,0x6b0269ef
  41ac8b:	fistp  DWORD PTR [ecx+ecx*4]
  41ac8e:	(bad)  
  41ac8f:	in     al,dx
  41ac90:	mov    cl,0x9a
  41ac92:	xchg   esp,eax
  41ac93:	adc    DWORD PTR [ebx+edx*4-0x17],ebx
  41ac97:	imul   edx,DWORD PTR [edi],0x5a982a4b
  41ac9d:	sbb    eax,0x1347f5fc
  41aca2:	sub    al,0xfa
  41aca4:	ret    
  41aca5:	rcr    DWORD PTR [edi+esi*4+0x10],1
  41aca9:	adc    al,BYTE PTR [ebp+0x5a54334b]
  41acaf:	jp     0x41acde
  41acb1:	xor    al,0x98
  41acb3:	mov    eax,ds:0xa8626856
  41acb8:	add    esi,ebp
  41acba:	addr16 push cs
  41acbc:	mul    DWORD PTR [edi]
  41acbe:	dec    ecx
  41acbf:	nop
  41acc0:	xchg   ecx,eax
  41acc1:	jns    0x41ac73
  41acc3:	arpl   WORD PTR [ecx],dx
  41acc5:	stos   BYTE PTR es:[edi],al
  41acc6:	daa    
  41acc7:	jmp    FWORD PTR [edx]
  41acc9:	mov    edx,esp
  41accb:	lock outs dx,BYTE PTR ds:[esi]
  41accd:	jmp    0xd5ac259e
  41acd2:	sbb    DWORD PTR [edi],0x14b3a144
  41acd8:	aaa    
  41acd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acda:	or     BYTE PTR [edi],bh
  41acdc:	and    dl,0x7
  41acdf:	pop    edi
  41ace0:	push   cs
  41ace1:	int    0x0
  41ace3:	pop    esi
  41ace4:	cmp    dh,bl
  41ace6:	xchg   esp,eax
  41ace7:	xchg   esp,eax
  41ace8:	sbb    dh,BYTE PTR [ebx+0x1c]
  41aceb:	jo     0x41acf1
  41aced:	and    DWORD PTR [edi+esi*8],ebp
  41acf0:	fisttp WORD PTR [edx+0x5724f4dc]
  41acf6:	outs   dx,BYTE PTR ds:[esi]
  41acf7:	add    ch,0xd9
  41acfa:	test   DWORD PTR [bx+di],ebp
  41acfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acfe:	(bad)  
  41acff:	popf   
  41ad00:	out    dx,eax
  41ad01:	jmp    FWORD PTR [eax-0x4d]
  41ad04:	sbb    esp,DWORD PTR [ebx+0x5be6864a]
  41ad0a:	jle    0x41ad31
  41ad0c:	repz pop ss
  41ad0e:	xor    BYTE PTR [edx-0x7],bh
  41ad11:	or     DWORD PTR [ebx],edi
  41ad13:	out    dx,al
  41ad14:	mov    cl,0x24
  41ad16:	mov    DWORD PTR [edi],ebx
  41ad18:	and    DWORD PTR [ebx],0xffffffa1
  41ad1b:	mov    al,ds:0x2f3f5f01
  41ad20:	xchg   ecx,eax
  41ad21:	aas    
  41ad22:	mov    eax,0xbd0f7528
  41ad27:	or     bl,BYTE PTR [eax+0xfc76f77]
  41ad2d:	(bad)  
  41ad2e:	xor    DWORD PTR [eax-0x65],ebx
  41ad31:	enter  0x4e06,0x5d
  41ad35:	sbb    al,0xee
  41ad37:	addr16 inc eax
  41ad39:	sbb    eax,0x830c5b81
  41ad3e:	cdq    
  41ad3f:	cmp    eax,0xae939a6a
  41ad44:	jge    0x41acef
  41ad46:	push   ebp
  41ad47:	jbe    0x41ada4
  41ad49:	xchg   ecx,eax
  41ad4a:	or     bl,dh
  41ad4c:	jbe    0x41ad7f
  41ad4e:	test   esi,esp
  41ad50:	fistp  WORD PTR [edi+0x1437d680]
  41ad56:	sahf   
  41ad57:	push   ebx
  41ad58:	imul   eax,edx,0x6
  41ad5b:	(bad)  
  41ad5c:	and    cl,BYTE PTR [ecx]
  41ad5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad5f:	mov    WORD PTR [eax-0x4c0dd99d],ds
  41ad65:	popa   
  41ad66:	jp     0x41adb1
  41ad68:	test   DWORD PTR [ebx-0x5fda39fb],esp
  41ad6e:	shr    cl,0xf3
  41ad71:	pop    esi
  41ad72:	iret   
  41ad73:	popf   
  41ad74:	pop    es
  41ad75:	fcomp  DWORD PTR [esi+0x3f85529]
  41ad7b:	inc    edx
  41ad7c:	lods   eax,DWORD PTR ds:[esi]
  41ad7d:	jmp    DWORD PTR [edx]
  41ad7f:	sbb    eax,0xec33d1ce
  41ad84:	icebp  
  41ad85:	shl    BYTE PTR [ecx-0x77],1
  41ad88:	xor    bl,BYTE PTR [ecx-0x65]
  41ad8b:	push   es
  41ad8c:	(bad)  
  41ad8d:	retf   0xafa0
  41ad90:	add    esp,DWORD PTR cs:[ebp+0x7f]
  41ad94:	inc    eax
  41ad95:	mov    eax,0x2fdf04dd
  41ad9a:	adc    BYTE PTR [ebx+ebp*1+0x662539df],dl
  41ada1:	mov    BYTE PTR [esi+eax*4],0x8b
  41ada5:	sar    ebp,1
  41ada7:	inc    ebp
  41ada8:	call   0x4b44606
  41adad:	std    
  41adae:	cmp    edx,DWORD PTR [ebx]
  41adb0:	loopne 0x41ae22
  41adb2:	mov    al,0xb1
  41adb4:	neg    BYTE PTR [esi]
  41adb6:	mov    eax,0xb10d49c3
  41adbb:	scas   eax,DWORD PTR es:[edi]
  41adbc:	scas   eax,DWORD PTR es:[edi]
  41adbd:	retf   
  41adbe:	push   eax
  41adbf:	pop    ebp
  41adc0:	mov    esp,0xcbe4ab3e
  41adc5:	int    0x7c
  41adc7:	(bad)  
  41adc9:	popf   
  41adca:	xchg   edi,eax
  41adcb:	mov    dh,0x1a
  41adcd:	or     BYTE PTR [ecx],bl
  41adcf:	pusha  
  41add0:	dec    esi
  41add1:	or     DWORD PTR [ebp-0xbad0969],esp
  41add7:	aas    
  41add8:	dec    ecx
  41add9:	xor    ebx,DWORD PTR [edx+0x42]
  41addc:	push   edx
  41addd:	(bad)  
  41adde:	push   edx
  41addf:	outs   dx,BYTE PTR ds:[esi]
  41ade0:	sub    BYTE PTR [ebp+0x43],dh
  41ade3:	jg     0x41adaa
  41ade5:	xchg   esp,esp
  41ade7:	jnp    0x41adf1
  41ade9:	jbe    0x41ae16
  41adeb:	mov    esi,0x34c1ec7
  41adf0:	enter  0x3ee0,0xb2
  41adf4:	addr16 mov dl,0x7e
  41adf7:	inc    ecx
  41adf8:	push   eax
  41adf9:	sub    eax,0xefd53553
  41adfe:	or     esp,DWORD PTR [ebp+0xcf758b4]
  41ae04:	aaa    
  41ae05:	imul   esp,DWORD PTR [esi-0x21aa1214],0xffffffc4
  41ae0c:	cmp    DWORD PTR [edx],edi
  41ae0e:	ror    DWORD PTR [edx],0x9
  41ae11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae12:	inc    ebx
  41ae13:	hlt    
  41ae14:	ss gs mov eax,0x70e39351
  41ae1b:	scas   al,BYTE PTR es:[edi]
  41ae1c:	nop
  41ae1d:	les    ebp,FWORD PTR [edi+0x224d82f1]
  41ae23:	enter  0x599d,0xdc
  41ae27:	inc    esp
  41ae28:	mov    edx,0x643a59f3
  41ae2d:	clc    
  41ae2e:	jmp    0x41adfd
  41ae30:	ret    
  41ae31:	xor    al,0x76
  41ae33:	jmp    0xbf5a1e95
  41ae38:	pop    ecx
  41ae39:	mov    edi,0x2568a0eb
  41ae3e:	loop   0x41ae72
  41ae40:	(bad)  
  41ae41:	cmp    al,0x84
  41ae43:	add    BYTE PTR [edi],al
  41ae45:	dec    edx
  41ae46:	lahf   
  41ae47:	pop    esp
  41ae48:	jo     0x41ae38
  41ae4a:	pop    edi
  41ae4b:	xor    BYTE PTR [ecx+0x58],dl
  41ae4e:	or     eax,0x489088b3
  41ae53:	call   0x4e1f:0xeadf712
  41ae5a:	jl     0x41aea9
  41ae5c:	repnz aam 0x9e
  41ae5f:	xadd   BYTE PTR [edx+0x4d9c87ec],al
  41ae66:	xchg   esp,eax
  41ae67:	jge    0x41ae95
  41ae69:	cs inc edx
  41ae6b:	push   es
  41ae6c:	or     eax,ecx
  41ae6e:	test   DWORD PTR [ebx],ebp
  41ae70:	call   0x6dc17bf5
  41ae75:	into   
  41ae76:	jmp    0x41aedf
  41ae78:	mov    ch,0x94
  41ae7a:	cmp    BYTE PTR [eax-0x30cccee6],dh
  41ae80:	cmp    ebx,DWORD PTR [ebx-0x6e0ce05d]
  41ae86:	cdq    
  41ae87:	cs aas 
  41ae89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae8a:	(bad)  
  41ae8c:	inc    ecx
  41ae8d:	adc    BYTE PTR [ebx],ch
  41ae8f:	jno    0x41ae50
  41ae91:	pop    ds
  41ae92:	jbe    0x41ae9b
  41ae94:	fldcw  WORD PTR [ebp-0x55532903]
  41ae9a:	ficomp WORD PTR [ebx-0x19]
  41ae9d:	call   0x7998c8a2
  41aea2:	sbb    BYTE PTR [edx],cl
  41aea4:	sbb    ecx,DWORD PTR ds:0x4d32ee4
  41aeaa:	(bad)  
  41aeab:	paddd  mm1,QWORD PTR [edi+0x1e9b7421]
  41aeb2:	and    edx,esi
  41aeb4:	cld    
  41aeb5:	fucomip st,st(3)
  41aeb7:	loopne 0x41ae72
  41aeb9:	ret    0x3b59
  41aebc:	fnstsw WORD PTR [ebx+esi*8+0x3ac78f9d]
  41aec3:	or     BYTE PTR [ebx+0x563e930e],dh
  41aec9:	ficom  DWORD PTR fs:[ebp-0x366e32b3]
  41aed0:	jp     0x41aeb4
  41aed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aed3:	jmp    0xc77b:0x6ec89598
  41aeda:	pop    es
  41aedb:	xchg   esi,eax
  41aedc:	xchg   ebx,eax
  41aedd:	push   esp
  41aede:	lahf   
  41aedf:	jo     0x41aee2
  41aee1:	xchg   edi,eax
  41aee2:	addr16 dec edi
  41aee4:	jbe    0x41ae67
  41aee6:	in     eax,0x53
  41aee8:	out    0xce,al
  41aeea:	into   
  41aeeb:	sbb    DWORD PTR [edx],esp
  41aeed:	icebp  
  41aeee:	dec    edi
  41aeef:	sub    edi,ebp
  41aef1:	cmp    al,0x6c
  41aef3:	jns    0x41aeba
  41aef5:	jnp    0x41af3a
  41aef7:	push   eax
  41aef8:	jb     0x41af15
  41aefa:	xor    ch,BYTE PTR [edi]
  41aefc:	xacquire xchg BYTE PTR [eax+0xd2e5c35],al
  41af03:	jp     0x41af3c
  41af05:	(bad)  
  41af06:	push   ss
  41af07:	iret   
  41af08:	cmp    BYTE PTR [edx+0x73],dh
  41af0b:	jecxz  0x41af3d
  41af0d:	jle    0x41af70
  41af0f:	in     eax,dx
  41af10:	jecxz  0x41af3b
  41af12:	int3   
  41af13:	jl     0x41af83
  41af15:	into   
  41af16:	dec    edi
  41af17:	xor    eax,0x3a3f5328
  41af1c:	fst    st(0)
  41af1e:	mov    ebx,0xd2e454a8
  41af23:	push   edx
  41af24:	sub    BYTE PTR [edi-0x3c6ee300],ch
  41af2a:	jno    0x41af22
  41af2c:	sub    eax,0x292bb9ad
  41af31:	cs adc ebx,esp
  41af34:	mov    dl,0xdc
  41af36:	sub    al,BYTE PTR [edx-0x52]
  41af39:	cmp    eax,0xf020b0d3
  41af3e:	push   edx
  41af3f:	je     0x41afb3
  41af41:	(bad)  [ecx]
  41af43:	adc    dl,BYTE PTR [ebx+0x4a244d9f]
  41af49:	mov    esp,0xb2ebf336
  41af4e:	test   al,0xaa
  41af50:	pop    ebx
  41af51:	jmp    0xdbf637af
  41af56:	fsubr  QWORD PTR [edx+esi*2]
  41af59:	ret    
  41af5a:	repnz add al,0x9b
  41af5d:	pusha  
  41af5e:	dec    edx
  41af5f:	push   ecx
  41af60:	mov    BYTE PTR [ebp-0x5498680c],bl
  41af66:	imul   ebx,ecx,0x13
  41af69:	add    eax,0x4bdde717
  41af6e:	push   ecx
  41af6f:	or     dh,BYTE PTR [ecx+0x2]
  41af72:	aam    0x44
  41af74:	add    ah,BYTE PTR [esp+ecx*1-0x143d9c21]
  41af7b:	outs   dx,BYTE PTR ds:[esi]
  41af7c:	lods   al,BYTE PTR ds:[esi]
  41af7d:	pop    eax
  41af7e:	or     eax,0xf448ff4d
  41af83:	stos   DWORD PTR es:[edi],eax
  41af84:	call   0x9514:0x8c02157e
  41af8b:	rcr    BYTE PTR [ebx+esi*1-0x294c374],0xe0
  41af93:	mov    al,0x4c
  41af95:	adc    BYTE PTR [edx],cl
  41af97:	push   esi
  41af98:	cmp    DWORD PTR [ecx],edx
  41af9a:	mov    DWORD PTR [esi-0x74],0xc9cdb7f
  41afa1:	pop    esi
  41afa2:	loope  0x41af2d
  41afa4:	fsub   DWORD PTR ds:0xec3fdd65
  41afaa:	xor    DWORD PTR [eax+0x4fabbd4b],edx
  41afb0:	sbb    al,0xbd
  41afb2:	dec    edx
  41afb3:	int    0x7e
  41afb5:	xchg   esi,eax
  41afb6:	jo     0x41b00f
  41afb8:	cdq    
  41afb9:	mov    cl,0x18
  41afbb:	pop    es
  41afbc:	daa    
  41afbd:	fcmovb st,st(6)
  41afbf:	sbb    al,0xa3
  41afc1:	add    bh,bh
  41afc3:	sub    BYTE PTR [ebp-0x6e],ah
  41afc6:	dec    esi
  41afc7:	stc    
  41afc8:	call   0x53919872
  41afcd:	xchg   edi,eax
  41afce:	mov    ah,0xc8
  41afd0:	sbb    bl,BYTE PTR [esi-0x41]
  41afd3:	enter  0x3e82,0x67
  41afd7:	call   0xd1f28596
  41afdc:	or     al,0xc7
  41afde:	dec    DWORD PTR [esi-0x1a0e82ac]
  41afe4:	(bad)  
  41afe5:	fs xchg ebx,eax
  41afe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afe8:	inc    edx
  41afe9:	loopne 0x41af8a
  41afeb:	add    eax,0x461c01b9
  41aff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aff1:	and    eax,DWORD PTR [esi]
  41aff3:	push   esi
  41aff4:	dec    edi
  41aff5:	loop   0x41af8b
  41aff7:	outs   dx,BYTE PTR ds:[esi]
  41aff8:	cmp    eax,DWORD PTR [ebx]
  41affa:	xchg   ebp,eax
  41affb:	inc    eax
  41affc:	pop    ecx
  41affd:	out    dx,al
  41affe:	repz and ebx,DWORD PTR [eax-0x7009b864]
  41b005:	cmp    al,0x4b
  41b007:	(bad)  
  41b008:	adc    bl,BYTE PTR [esi+eax*1-0x1c]
  41b00c:	fdiv   QWORD PTR gs:[edx+0x17]
  41b010:	test   cl,ch
  41b012:	add    edi,esi
  41b014:	fmulp  st(6),st
  41b016:	ds mov ah,BYTE PTR fs:[ebp+0x4d]
  41b01b:	push   ss
  41b01c:	push   ebx
  41b01d:	ficomp WORD PTR [edi+0x25dcee7e]
  41b023:	cdq    
  41b024:	lds    ebp,FWORD PTR [edx+0x3a58ca17]
  41b02a:	mov    ds:0xf7798040,eax
  41b02f:	test   eax,0x5dde6a37
  41b034:	cmp    ebp,esp
  41b036:	cli    
  41b037:	popa   
  41b038:	or     DWORD PTR [ecx],eax
  41b03a:	dec    edi
  41b03b:	out    0x2f,al
  41b03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b03e:	adc    DWORD PTR [ecx-0x15415157],esp
  41b044:	jb     0x41afef
  41b046:	adc    BYTE PTR [ebx],dh
  41b048:	push   eax
  41b049:	loope  0x41b01f
  41b04b:	adc    cl,bh
  41b04d:	stc    
  41b04e:	loopne 0x41b02f
  41b050:	or     dl,0x2b
  41b053:	push   edx
  41b054:	or     al,0xab
  41b056:	mov    ecx,0xb9833da5
  41b05b:	adc    DWORD PTR [esi-0x71],0xd
  41b05f:	cmc    
  41b060:	es inc ebp
  41b062:	jbe    0x41b04b
  41b064:	add    eax,0x1bb7085f
  41b069:	cmp    DWORD PTR [ecx+0x9576ed6],ebx
  41b06f:	sbb    DWORD PTR [ebx+eiz*4-0x17],eax
  41b073:	xchg   edi,eax
  41b074:	xchg   BYTE PTR [ebx],dl
  41b076:	mov    dh,0xc7
  41b078:	add    eax,0xda133b0a
  41b07d:	mov    esp,0xb8bdcd6c
  41b082:	and    edx,DWORD PTR [ecx]
  41b084:	shl    BYTE PTR [eax],cl
  41b086:	in     eax,dx
  41b087:	push   esp
  41b088:	jmp    0x41b00d
  41b08a:	and    esp,DWORD PTR [ecx-0x6032ad86]
  41b090:	jae    0x41b020
  41b092:	aam    0xe
  41b094:	test   al,0xb3
  41b096:	imul   ebp,DWORD PTR [ebx+esi*4+0x26],0xc82953a2
  41b09e:	pop    eax
  41b09f:	jp     0x41b0cb
  41b0a1:	mov    ch,0xfb
  41b0a3:	icebp  
  41b0a4:	in     eax,0x28
  41b0a6:	ret    
  41b0a7:	mov    bl,0x19
  41b0a9:	dec    edi
  41b0aa:	mov    esp,0x3f2ad44b
  41b0af:	pushf  
  41b0b0:	jne    0x41b107
  41b0b2:	and    al,0x80
  41b0b4:	adc    bl,ah
  41b0b6:	add    BYTE PTR [edx+0x25b1303a],al
  41b0bc:	and    BYTE PTR [ebx-0x1],ch
  41b0bf:	mov    cl,0x59
  41b0c1:	popa   
  41b0c2:	fdivrp st(6),st
  41b0c4:	aas    
  41b0c5:	(bad)  
  41b0c6:	jmp    0x41b092
  41b0c8:	(bad)  
  41b0c9:	out    0x24,eax
  41b0cb:	bound  ebx,QWORD PTR [ecx-0x2463c052]
  41b0d1:	sbb    al,0x61
  41b0d3:	adc    eax,0xb04efcce
  41b0d8:	xor    DWORD PTR [edi],ecx
  41b0da:	lods   eax,DWORD PTR ds:[esi]
  41b0db:	mov    ecx,0xc49cd48e
  41b0e0:	mov    ah,0x43
  41b0e2:	inc    ebx
  41b0e3:	mov    ecx,0xfd2016d
  41b0e8:	outs   dx,BYTE PTR ds:[esi]
  41b0e9:	rol    BYTE PTR [edi-0x4c],cl
  41b0ec:	aaa    
  41b0ed:	dec    edi
  41b0ee:	sub    DWORD PTR [edi-0x51fb999a],0x7f
  41b0f5:	dec    ecx
  41b0f6:	sar    BYTE PTR [edi],1
  41b0f8:	test   ah,bh
  41b0fa:	dec    esp
  41b0fb:	je     0x41b173
  41b0fd:	mov    dh,0xb1
  41b0ff:	cmp    BYTE PTR [ebx+0x698c0b97],0x43
  41b106:	fisubr WORD PTR [ebx]
  41b108:	shr    DWORD PTR [eax],0xb1
  41b10b:	sbb    eax,0x6d8948e2
  41b110:	sub    eax,0xa83c46ec
  41b115:	mov    WORD PTR [esi-0x74],?
  41b118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b119:	jecxz  0x41b131
  41b11b:	in     al,dx
  41b11c:	xor    DWORD PTR [ecx-0x15],0x5c7179c
  41b123:	sub    ecx,DWORD PTR [esi]
  41b125:	ffreep st(7)
  41b127:	sbb    dh,bl
  41b129:	popf   
  41b12a:	and    DWORD PTR [ebx+ecx*4],0x98680f3f
  41b131:	ss mov dh,0xbc
  41b135:	xchg   edx,eax
  41b136:	push   0xffffffa5
  41b138:	jecxz  0x41b0c5
  41b13a:	cmp    eax,0x3e21c6b8
  41b13f:	adc    DWORD PTR [ebx-0x17],edi
  41b142:	repz dec esp
  41b144:	cmp    al,0xaa
  41b146:	sti    
  41b147:	mov    bl,0xbe
  41b149:	(bad)  
  41b14b:	or     DWORD PTR [ebp-0x4cd75d7b],esp
  41b151:	xor    al,0xf6
  41b153:	ins    DWORD PTR es:[edi],dx
  41b154:	bound  esi,QWORD PTR [edx+0x427d471d]
  41b15a:	arpl   WORD PTR [esi-0x14],dx
  41b15d:	pop    edx
  41b15e:	jo     0x41b136
  41b160:	aam    0x58
  41b162:	jne    0x41b1c3
  41b164:	push   0xde1ce7fc
  41b169:	int3   
  41b16a:	inc    edi
  41b16b:	cmp    BYTE PTR [eax+0xe],al
  41b16e:	jg     0x41b172
  41b170:	mov    ebp,DWORD PTR [edx+0x2d]
  41b173:	mov    BYTE PTR [edi+eax*1],al
  41b176:	aam    0x6d
  41b178:	sub    eax,0xbb9c8621
  41b17d:	loope  0x41b134
  41b17f:	lahf   
  41b180:	jne    0x41b174
  41b182:	xlat   BYTE PTR ds:[ebx]
  41b183:	je     0x41b15d
  41b185:	and    eax,0x703375a9
  41b18a:	test   al,0x96
  41b18c:	xchg   edx,eax
  41b18d:	fild   QWORD PTR ds:0xf830e174
  41b193:	jge    0x41b11d
  41b195:	call   0xc9031171
  41b19a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b19b:	int3   
  41b19c:	call   0x270e7c7b
  41b1a1:	jle    0x41b199
  41b1a3:	push   ecx
  41b1a4:	adc    cl,0xd7
  41b1a7:	push   edx
  41b1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a9:	ret    0x1352
  41b1ac:	mov    esi,0xbe33821c
  41b1b1:	mov    dl,0xf5
  41b1b3:	scas   eax,DWORD PTR es:[edi]
  41b1b4:	sub    BYTE PTR ds:0xc5adfd60,dl
  41b1ba:	xchg   edi,eax
  41b1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1bc:	cmp    DWORD PTR [edi],eax
  41b1be:	mov    esi,0x1f434fa8
  41b1c3:	mov    edi,0x1dc9cf2c
  41b1c8:	add    al,0x6
  41b1ca:	jae    0x41b163
  41b1cc:	cmp    ch,al
  41b1ce:	das    
  41b1cf:	out    0xa4,eax
  41b1d1:	ss mov ah,0x68
  41b1d4:	cli    
  41b1d5:	daa    
  41b1d6:	lods   eax,DWORD PTR ds:[esi]
  41b1d7:	push   0x71c0187d
  41b1dc:	out    0xb,al
  41b1de:	leave  
  41b1df:	test   BYTE PTR [ecx+eiz*8-0x78d1efa6],bl
  41b1e6:	js     0x41b174
  41b1e8:	push   esp
  41b1e9:	mov    ds:0xd1672afe,eax
  41b1ee:	inc    ecx
  41b1ef:	mov    edi,edi
  41b1f1:	mov    ds:0xe9169145,eax
  41b1f6:	cs fwait
  41b1f8:	pop    ss
  41b1f9:	mov    edi,0x2be9976a
  41b1fe:	fnstenv [eax+0x690b57cc]
  41b204:	hlt    
  41b205:	(bad)  
  41b207:	adc    edi,DWORD PTR [esi-0x3e]
  41b20a:	fst    QWORD PTR [esi-0x5c337780]
  41b210:	mov    al,ds:0x1ed66653
  41b215:	icebp  
  41b216:	or     BYTE PTR [ebx+0x4bdfc8e0],al
  41b21c:	xchg   cl,bh
  41b21e:	(bad)  
  41b21f:	push   esp
  41b220:	or     eax,0xb84d75ad
  41b226:	mov    ecx,0xa91559db
  41b22b:	or     DWORD PTR [eax+0x34],ecx
  41b22e:	or     BYTE PTR ds:0xa2a2ad89,0xe3
  41b235:	aad    0xb
  41b237:	mov    ds,WORD PTR cs:[ebx]
  41b23a:	jb     0x41b24d
  41b23c:	push   0xffffff94
  41b23e:	and    DWORD PTR [eax-0x42],ebx
  41b241:	jne    0x41b1c7
  41b243:	or     al,0x88
  41b245:	xor    DWORD PTR [esi],ebp
  41b247:	popf   
  41b248:	fst    DWORD PTR [edi]
  41b24a:	add    al,0xa8
  41b24c:	cli    
  41b24d:	in     al,0x1b
  41b24f:	inc    esi
  41b250:	(bad)  
  41b251:	fisttp QWORD PTR [ecx+ecx*1-0x2e]
  41b255:	xchg   ecx,eax
  41b256:	stos   BYTE PTR es:[edi],al
  41b257:	popf   
  41b258:	xchg   ebx,eax
  41b259:	fisubr DWORD PTR [esi+0x55]
  41b25c:	mov    ch,0xf3
  41b25e:	xchg   esi,eax
  41b25f:	sbb    ax,0x68de
  41b263:	dec    eax
  41b264:	mov    DWORD PTR [ebx],esp
  41b266:	pushf  
  41b267:	or     ah,BYTE PTR [edi+0x18]
  41b26a:	fldenv [eax-0x2f]
  41b26d:	pop    esp
  41b26e:	sbb    al,0x19
  41b270:	xor    eax,DWORD PTR [edx]
  41b272:	xchg   edi,eax
  41b273:	xor    eax,0x3c53dbdb
  41b278:	adc    eax,DWORD PTR [esi+0xc56f535]
  41b27e:	pusha  
  41b27f:	int3   
  41b280:	cld    
  41b281:	or     eax,0xb3cbc409
  41b286:	int    0xd4
  41b288:	and    DWORD PTR ds:0x6dcd880a,ebp
  41b28e:	repnz sbb eax,0x1a52d910
  41b294:	imul   ecx,edi,0xed0792fe
  41b29a:	and    DWORD PTR [ecx+0x21],esi
  41b29d:	jns    0x41b27e
  41b29f:	lock lahf 
  41b2a1:	enter  0x15a2,0x2d
  41b2a5:	rcr    ecx,1
  41b2a7:	mov    ebx,0x43d20837
  41b2ac:	lods   eax,DWORD PTR ds:[esi]
  41b2ad:	mov    ecx,0x570e2653
  41b2b2:	pop    ebp
  41b2b3:	sbb    DWORD PTR [edi],ebx
  41b2b5:	push   ebp
  41b2b6:	inc    esp
  41b2b7:	mov    eax,ds:0xb768230e
  41b2bc:	mov    gs,WORD PTR [ebx+edx*8]
  41b2bf:	mov    ebx,0xc84346c9
  41b2c4:	push   ss
  41b2c5:	sub    al,0x20
  41b2c7:	inc    edi
  41b2c8:	int    0xca
  41b2ca:	jl     0x41b27f
  41b2cc:	sbb    BYTE PTR [ebx-0x5c87ff54],dl
  41b2d2:	gs mov ebp,0x8a412afb
  41b2d8:	(bad)  
  41b2d9:	mov    eax,0xb8970829
  41b2de:	xchg   esp,eax
  41b2df:	dec    ecx
  41b2e0:	in     al,0xda
  41b2e2:	add    al,0x3b
  41b2e4:	loop   0x41b2d2
  41b2e6:	loope  0x41b294
  41b2e8:	and    edx,esp
  41b2ea:	jp     0x41b359
  41b2ec:	cmp    esp,DWORD PTR [eax-0x6ba4cbf8]
  41b2f2:	or     ebx,eax
  41b2f4:	jbe    0x41b2e4
  41b2f6:	clc    
  41b2f7:	inc    ah
  41b2f9:	mov    edx,0x7946db55
  41b2fe:	and    DWORD PTR [ebp+0x308bfdc2],eax
  41b304:	repz adc eax,DWORD PTR [edi+eiz*8+0x5e324b2c]
  41b30c:	mov    ah,0xee
  41b30e:	sbb    DWORD PTR [esi-0x2f],ecx
  41b311:	fdivr  QWORD PTR [ebx+0x49]
  41b314:	(bad)  [edx+0x2f]
  41b317:	pop    es
  41b318:	stc    
  41b319:	enter  0xdf65,0x7a
  41b31d:	ror    DWORD PTR [edx],0x84
  41b320:	xchg   BYTE PTR [ebp-0x55ec2a8d],bl
  41b326:	xor    dl,bl
  41b328:	ins    BYTE PTR es:[edi],dx
  41b329:	leave  
  41b32a:	test   BYTE PTR [ecx],ah
  41b32c:	test   eax,0xdfd7c8d9
  41b331:	or     DWORD PTR [ebx+0x269488c2],ebp
  41b337:	adc    cl,bl
  41b339:	mov    ebx,0x843c63b3
  41b33e:	inc    ebp
  41b33f:	fidiv  WORD PTR [eax]
  41b341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b342:	test   DWORD PTR [eax+0x60832d16],ebp
  41b348:	cmp    eax,0x27327dca
  41b34d:	mov    ch,0xa2
  41b34f:	sub    eax,0xa4fefcbf
  41b354:	jne    0x41b303
  41b356:	in     al,dx
  41b357:	loopne 0x41b2db
  41b359:	dec    ebx
  41b35a:	cld    
  41b35b:	jmp    0x22bf4ba2
  41b360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b361:	add    BYTE PTR [ebx+edi*1],dh
  41b364:	xchg   eax,ebp
  41b366:	adc    bh,BYTE PTR [esi+esi*8-0x53]
  41b36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b36b:	test   al,0x2e
  41b36d:	je     0x41b3ba
  41b36f:	dec    esi
  41b370:	sahf   
  41b371:	and    eax,0x36c1199d
  41b376:	inc    esi
  41b377:	and    eax,DWORD PTR [eax-0x6281fe45]
  41b37d:	add    DWORD PTR ds:0xa5dc9fb4,eax
  41b383:	std    
  41b384:	mov    esp,0x26186b98
  41b389:	loop   0x41b3fa
  41b38b:	or     DWORD PTR [ebp+0x6640a37f],ebp
  41b391:	shl    dh,cl
  41b393:	push   edi
  41b394:	pop    edx
  41b395:	adc    al,ah
  41b397:	icebp  
  41b398:	ja     0x41b353
  41b39a:	sti    
  41b39b:	cld    
  41b39c:	or     edx,ebx
  41b39e:	sbb    ah,BYTE PTR [ebp-0x6f]
  41b3a1:	mov    ecx,0x53c5d105
  41b3a6:	pop    ebx
  41b3a7:	mov    al,ds:0x37ca1c1b
  41b3ac:	jmp    0xe0781b4c
  41b3b1:	das    
  41b3b2:	push   ds
  41b3b3:	pop    ds
  41b3b4:	inc    esi
  41b3b5:	aad    0x39
  41b3b7:	mov    al,al
  41b3b9:	icebp  
  41b3ba:	daa    
  41b3bb:	int    0x37
  41b3bd:	repnz mov dh,0xa5
  41b3c0:	sub    eax,0xcda4586b
  41b3c5:	xchg   ebx,eax
  41b3c6:	add    bh,bl
  41b3c8:	jmp    0xd3b4:0x2b344b9f
  41b3cf:	dec    edi
  41b3d0:	mov    eax,ds:0xda2c75e9
  41b3d5:	pop    edx
  41b3d6:	jle    0x41b3b3
  41b3d8:	jmp    0xbbc15829
  41b3dd:	adc    eax,DWORD PTR [esi+0x60626b78]
  41b3e3:	in     eax,0xb8
  41b3e5:	cs xchg ebp,eax
  41b3e7:	ins    BYTE PTR es:[edi],dx
  41b3e8:	leave  
  41b3e9:	sub    al,al
  41b3eb:	cmc    
  41b3ec:	xchg   BYTE PTR [ecx+ebp*2],dl
  41b3ef:	sub    esi,DWORD PTR [edx-0x28d08af7]
  41b3f5:	(bad)  
  41b3f6:	cmp    cl,cl
  41b3f8:	xchg   ebx,eax
  41b3f9:	fistp  WORD PTR [ebp+0x604423e4]
  41b3ff:	and    al,0x83
  41b401:	daa    
  41b402:	loope  0x41b458
  41b404:	mov    DWORD PTR [ecx-0x3b0af9fc],edi
  41b40a:	mov    edi,fs
  41b40c:	je     0x41b41d
  41b40e:	sub    al,0x34
  41b410:	mov    cl,0x8d
  41b412:	imul   ecx,DWORD PTR [ebx+esi*8],0x23
  41b416:	add    eax,0x4456913
  41b41b:	call   FWORD PTR [esi+0x4e1fae0b]
  41b421:	out    dx,eax
  41b422:	jmp    0x41b3f2
  41b424:	bound  edi,QWORD PTR ds:0x3a37b4cf
  41b42a:	xor    al,0xaa
  41b42c:	push   edx
  41b42d:	push   ebp
  41b42e:	call   0xc97c129a
  41b433:	bswap  ecx
  41b435:	pop    ebp
  41b436:	js     0x41b3fd
  41b438:	dec    esp
  41b439:	cwde   
  41b43a:	into   
  41b43b:	add    esp,ebx
  41b43d:	mov    esp,0x666baaa
  41b442:	or     BYTE PTR [ecx-0xf66a9f3],cl
  41b448:	ins    DWORD PTR es:[edi],dx
  41b449:	scas   al,BYTE PTR es:[edi]
  41b44a:	mov    edx,DWORD PTR [edx-0x27]
  41b44d:	cmp    eax,0xf90977f2
  41b452:	xlat   BYTE PTR ds:[ebx]
  41b453:	lea    esi,[esi]
  41b455:	popa   
  41b456:	dec    ecx
  41b457:	test   ebx,0x65a25df8
  41b45d:	icebp  
  41b45e:	test   BYTE PTR [esi-0x117de5e0],ch
  41b464:	mov    edi,0x5a4cc190
  41b469:	leave  
  41b46a:	imul   BYTE PTR [edx]
  41b46c:	push   ss
  41b46d:	retf   0x6f32
  41b470:	or     eax,0xf3389e84
  41b475:	fidivr DWORD PTR [eax+0xabb005]
  41b47b:	mov    eax,ds:0x76f485dc
  41b480:	ret    0x68a5
  41b483:	adc    eax,0x736cbe6c
  41b488:	xchg   esi,eax
  41b489:	mov    dh,0xf5
  41b48b:	mov    cl,0xd9
  41b48d:	xor    al,0xd0
  41b48f:	jmp    DWORD PTR [edx-0x7a3dde89]
  41b495:	fcmovb st,st(2)
  41b497:	mov    al,0x1d
  41b499:	adc    al,0xf7
  41b49b:	int    0x9e
  41b49d:	js     0x41b4ed
  41b49f:	pop    edx
  41b4a0:	(bad)  
  41b4a1:	jmp    0x41b4e5
  41b4a3:	xor    eax,esi
  41b4a5:	in     eax,0xe4
  41b4a7:	mov    dl,0x1a
  41b4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4aa:	or     eax,0x4e8fe7b4
  41b4af:	mov    eax,DWORD PTR [eax+0x17]
  41b4b2:	pusha  
  41b4b3:	sub    al,0xac
  41b4b5:	mul    BYTE PTR [edx+0x76]
  41b4b8:	push   eax
  41b4b9:	pop    ss
  41b4ba:	inc    ebx
  41b4bb:	stos   BYTE PTR es:[edi],al
  41b4bc:	sbb    ch,ah
  41b4be:	jns    0x41b53e
  41b4c0:	cmp    al,0x6
  41b4c2:	mov    ds:0x89c8589c,eax
  41b4c7:	xchg   ebp,esp
  41b4c9:	imul   edi,DWORD PTR [ebp+ebx*2+0x6f],0xae1e0f18
  41b4d1:	ror    esp,0x3d
  41b4d4:	inc    edi
  41b4d5:	in     al,dx
  41b4d6:	daa    
  41b4d7:	out    0x3b,eax
  41b4d9:	repnz popa 
  41b4db:	push   esi
  41b4dc:	pop    esi
  41b4dd:	xlat   BYTE PTR ds:[ebx]
  41b4de:	and    eax,0x5aae4b38
  41b4e3:	push   esp
  41b4e4:	adc    bl,BYTE PTR [esi-0x5aff9371]
  41b4ea:	pavgb  mm0,QWORD PTR [edi+0x23760d2c]
  41b4f1:	repnz cli 
  41b4f3:	scas   al,BYTE PTR es:[edi]
  41b4f4:	mov    bh,0x5e
  41b4f6:	jmp    0xc3ef494
  41b4fb:	pop    ebx
  41b4fc:	popf   
  41b4fd:	xchg   ecx,eax
  41b4fe:	outs   dx,DWORD PTR ds:[esi]
  41b4ff:	sbb    DWORD PTR ds:0xa6482389,esi
  41b505:	sub    BYTE PTR [eax],ch
  41b507:	and    DWORD PTR [ebx+edi*1-0x31],0x60
  41b50c:	xchg   DWORD PTR [edi-0x75],ebp
  41b50f:	ins    BYTE PTR es:[edi],dx
  41b510:	xchg   al,bl
  41b512:	adc    al,0x18
  41b514:	mov    eax,0x9567f571
  41b519:	sub    dl,ch
  41b51b:	loop   0x41b4c4
  41b51d:	inc    esp
  41b51e:	test   eax,0x7b479b29
  41b523:	mov    cl,0x93
  41b525:	push   ebx
  41b526:	ins    DWORD PTR es:[edi],dx
  41b527:	ret    0xd822
  41b52a:	cmp    edx,0x2928480d
  41b530:	mov    ch,0x9d
  41b532:	push   ebx
  41b533:	rcl    BYTE PTR [edi+eax*8-0x3c3454a4],cl
  41b53a:	in     al,dx
  41b53b:	mov    ch,0x81
  41b53d:	test   edx,esp
  41b53f:	aaa    
  41b540:	jbe    0x41b53b
  41b542:	mov    esi,0x20303172
  41b547:	retf   
  41b548:	mov    bh,0x7a
  41b54a:	add    DWORD PTR [edx-0x351d018e],0x6e
  41b551:	pop    ecx
  41b552:	jo     0x41b57a
  41b554:	out    dx,eax
  41b555:	out    dx,al
  41b556:	(bad)  
  41b557:	jg     0x41b54f
  41b559:	imul   bl
  41b55b:	(bad)  
  41b55c:	pop    ss
  41b55d:	and    al,cl
  41b55f:	mov    dh,0x76
  41b561:	jmp    0x6ea7e3fe
  41b566:	out    dx,al
  41b567:	pop    eax
  41b568:	popa   
  41b569:	(bad)  
  41b56a:	adc    BYTE PTR [edi-0x628d83cf],dl
  41b570:	mov    ebp,0x924ff4ce
  41b575:	bound  edx,QWORD PTR [esi+0x28]
  41b578:	lahf   
  41b579:	les    esp,FWORD PTR [edx]
  41b57b:	ficom  WORD PTR [ebx-0x57]
  41b57e:	jae    0x41b570
  41b580:	popa   
  41b581:	adc    al,dh
  41b583:	inc    edx
  41b584:	push   edi
  41b585:	xchg   ebx,eax
  41b586:	je     0x41b5fb
  41b588:	(bad)
  41b58b:	xor    al,0xea
  41b58d:	nop
  41b58e:	push   cs
  41b58f:	and    DWORD PTR [ecx+0x46f10283],0x21892111
  41b599:	ss mov bh,0xa2
  41b59c:	test   al,0x42
  41b59e:	les    edi,FWORD PTR [edi-0x4f047832]
  41b5a4:	lds    edx,FWORD PTR [edi]
  41b5a6:	js     0x41b591
  41b5a8:	fwait
  41b5a9:	cld    
  41b5aa:	stc    
  41b5ab:	aam    0x3b
  41b5ad:	adc    edi,edi
  41b5af:	retf   0x5220
  41b5b2:	xchg   esp,eax
  41b5b3:	repnz into 
  41b5b5:	push   es
  41b5b6:	xchg   ebp,eax
  41b5b7:	inc    esp
  41b5b8:	lds    ecx,FWORD PTR [esi]
  41b5ba:	addr16 std 
  41b5bc:	cld    
  41b5bd:	mov    esi,0xcde6bdef
  41b5c2:	xchg   esi,eax
  41b5c3:	push   esi
  41b5c4:	(bad)  
  41b5c5:	aam    0xee
  41b5c7:	dec    eax
  41b5c8:	mov    edi,0x32f84010
  41b5cd:	inc    edx
  41b5ce:	ret    0x3d89
  41b5d1:	ret    
  41b5d2:	(bad)  
  41b5d3:	fsub   QWORD PTR [eax+0x37]
  41b5d6:	retf   0xea4f
  41b5d9:	cdq    
  41b5da:	fsub   DWORD PTR [edi-0x14]
  41b5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5de:	aad    0xca
  41b5e0:	xchg   edi,eax
  41b5e1:	or     eax,0x64344a07
  41b5e6:	push   ebx
  41b5e7:	jp     0x41b5fe
  41b5e9:	adc    dh,BYTE PTR [ebp-0x42]
  41b5ec:	nop
  41b5ed:	mov    DWORD PTR [ebx],esi
  41b5ef:	test   bl,dh
  41b5f1:	push   0xc7849299
  41b5f6:	xchg   ebp,eax
  41b5f7:	sub    BYTE PTR [esi],cl
  41b5f9:	cwde   
  41b5fa:	inc    ebx
  41b5fb:	inc    esi
  41b5fc:	push   ebp
  41b5fd:	cmp    cl,BYTE PTR [ebp-0x34]
  41b600:	in     al,dx
  41b601:	or     BYTE PTR [edi+ebx*2+0x7f],ah
  41b605:	xor    dl,BYTE PTR [eax+0x5]
  41b608:	ds test al,0x20
  41b60b:	dec    BYTE PTR [edx+0x14]
  41b60e:	cmp    DWORD PTR [ecx+edx*8],eax
  41b611:	clc    
  41b612:	mov    esi,0x926c2e9
  41b617:	loopne 0x41b611
  41b619:	nop
  41b61a:	xchg   ebp,eax
  41b61b:	inc    ebp
  41b61c:	add    BYTE PTR [edx-0x1f3d1574],bh
  41b622:	adc    al,0x35
  41b624:	xchg   ebx,eax
  41b625:	mov    ebp,esp
  41b627:	stos   BYTE PTR es:[edi],al
  41b628:	adc    ecx,DWORD PTR [ecx]
  41b62a:	jl     0x41b696
  41b62c:	jle    0x41b615
  41b62e:	loope  0x41b5fc
  41b630:	test   BYTE PTR [esi],dl
  41b632:	pop    ds
  41b633:	scas   eax,DWORD PTR es:[edi]
  41b634:	and    al,0x33
  41b636:	lds    edx,FWORD PTR [ebx-0x3c4e70fc]
  41b63c:	das    
  41b63d:	add    eax,DWORD PTR [edx+0x6c]
  41b640:	pop    eax
  41b641:	ret    0x8f72
  41b644:	adc    BYTE PTR [ebx+0x6d],ch
  41b647:	pop    ebx
  41b648:	es push ss
  41b64a:	sbb    cl,dl
  41b64c:	icebp  
  41b64d:	js     0x41b6a2
  41b64f:	mov    bl,0xf4
  41b651:	aam    0xa3
  41b653:	jecxz  0x41b62d
  41b655:	jg     0x41b65d
  41b657:	pop    esp
  41b658:	push   ds
  41b659:	out    dx,al
  41b65a:	lds    eax,FWORD PTR [esi-0x2d]
  41b65d:	fiadd  DWORD PTR [edi-0x417b4a57]
  41b663:	es (bad) 
  41b665:	repnz mov edi,0x4e86cddb
  41b66b:	sahf   
  41b66c:	xchg   ebp,ecx
  41b66e:	js     0x41b679
  41b670:	cmp    eax,0x7b31e58d
  41b675:	xchg   ecx,eax
  41b676:	in     eax,0x31
  41b678:	hlt    
  41b679:	pusha  
  41b67a:	std    
  41b67b:	cs pop ecx
  41b67d:	leave  
  41b67e:	mov    ah,0xf9
  41b680:	lahf   
  41b681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b682:	nop
  41b683:	sti    
  41b684:	xor    al,0xcb
  41b686:	shl    BYTE PTR [edx+0x3a04d11],cl
  41b68c:	sahf   
  41b68d:	cwde   
  41b68e:	fild   DWORD PTR [ebx]
  41b690:	add    BYTE PTR [ebx-0x2d80454a],ch
  41b696:	and    BYTE PTR [edi],al
  41b698:	mov    ecx,0x4306dc32
  41b69d:	in     al,0xb7
  41b69f:	adc    edx,0x56
  41b6a2:	addr16 nop
  41b6a4:	stc    
  41b6a5:	or     al,0x1e
  41b6a7:	jns    0x41b65d
  41b6a9:	adc    al,bh
  41b6ab:	fistp  DWORD PTR [eax-0x49]
  41b6ae:	aas    
  41b6af:	push   DWORD PTR [ebx+0x491e5dc7]
  41b6b5:	cmp    BYTE PTR [edi+0x77b0565],0x91
  41b6bc:	je     0x41b702
  41b6be:	inc    esi
  41b6bf:	adc    BYTE PTR [edx-0x49f2eacf],ch
  41b6c5:	mov    BYTE PTR [eax-0x6ea259c2],ah
  41b6cb:	shr    BYTE PTR [ebp+0x7247e82b],1
  41b6d1:	into   
  41b6d2:	(bad)  
  41b6d3:	pop    ebp
  41b6d4:	jae    0x41b731
  41b6d6:	scas   eax,DWORD PTR es:[edi]
  41b6d7:	int    0x34
  41b6d9:	iret   
  41b6da:	and    eax,0xfb05665
  41b6df:	xchg   esp,eax
  41b6e0:	pop    ebp
  41b6e1:	ins    DWORD PTR es:[edi],dx
  41b6e2:	pop    edx
  41b6e3:	repnz adc bl,BYTE PTR [edx-0x78201cef]
  41b6ea:	ds or  al,0xcb
  41b6ed:	jae    0x41b73a
  41b6ef:	jae    0x41b726
  41b6f1:	mov    eax,0x600557e1
  41b6f6:	jp     0x41b72b
  41b6f8:	push   ecx
  41b6f9:	jb     0x41b75c
  41b6fb:	mov    esi,0xea248e54
  41b700:	fmul   QWORD PTR [edi+0x59]
  41b703:	xchg   ebp,eax
  41b704:	adc    cl,BYTE PTR [edi+0x5fc705f3]
  41b70a:	lods   al,BYTE PTR ds:[esi]
  41b70b:	mov    dh,0x50
  41b70d:	popf   
  41b70e:	popa   
  41b70f:	dec    esi
  41b710:	test   BYTE PTR [edx+0x731c1f8b],ch
  41b716:	lea    esi,[eax+0x18fbd227]
  41b71c:	pop    ebx
  41b71d:	pop    esp
  41b71e:	jg     0xf1531e4f
  41b724:	or     al,0x70
  41b726:	shr    BYTE PTR [ebx-0x62954d89],0xcd
  41b72d:	and    ebx,0xffffff96
  41b730:	dec    esi
  41b731:	loope  0x41b718
  41b733:	test   al,0x5c
  41b735:	xchg   ebx,eax
  41b736:	ins    DWORD PTR es:[edi],dx
  41b737:	xor    eax,edx
  41b739:	push   0xeb1b9792
  41b73e:	stos   BYTE PTR es:[edi],al
  41b73f:	daa    
  41b740:	mov    eax,0xeeb9f294
  41b745:	mov    edi,DWORD PTR ss:[esi]
  41b748:	pop    eax
  41b749:	fdiv   QWORD PTR [eax]
  41b74b:	mov    esp,DWORD PTR [edi]
  41b74d:	fild   DWORD PTR [eax+0x3721dc20]
  41b753:	fwait
  41b754:	je     0x41b7ba
  41b756:	fidivr DWORD PTR cs:[ebx]
  41b759:	jb     0x41b7d0
  41b75b:	mov    WORD PTR [esi-0x3b4c3a0f],ds
  41b761:	jle    0x41b7d5
  41b763:	fld    TBYTE PTR ss:[edx-0x2e]
  41b767:	jnp    0x41b78b
  41b769:	xchg   edi,eax
  41b76a:	inc    edi
  41b76b:	xor    bh,BYTE PTR [eax-0x11b4aa40]
  41b771:	fwait
  41b772:	and    esp,DWORD PTR [ebx]
  41b774:	push   cs
  41b775:	mov    ebx,0x4c19b742
  41b77a:	adc    BYTE PTR [eax-0x7e252dd4],cl
  41b780:	lds    ebp,FWORD PTR [esi+0x43]
  41b783:	ins    DWORD PTR es:[edi],dx
  41b784:	test   BYTE PTR [esi+0x5d],bl
  41b787:	mov    al,0x8b
  41b789:	in     eax,0x1d
  41b78b:	repz not DWORD PTR [eax]
  41b78e:	and    ah,0x4d
  41b791:	pop    edi
  41b792:	jno    0x41b7c3
  41b794:	cwde   
  41b795:	addr16 jge 0x41b811
  41b798:	in     eax,0xea
  41b79a:	lods   eax,DWORD PTR ds:[esi]
  41b79b:	mov    esi,0x7de9661f
  41b7a0:	jle    0x41b72e
  41b7a2:	add    BYTE PTR [esi+0x50057be1],0x32
  41b7a9:	call   FWORD PTR [esi*4+0x407b04a]
  41b7b0:	rcr    BYTE PTR [edi-0x19],0x94
  41b7b4:	jmp    0xa0c5:0xdbf9d7b5
  41b7bb:	dec    edx
  41b7bc:	popf   
  41b7bd:	ins    DWORD PTR es:[edi],dx
  41b7be:	xchg   edi,eax
  41b7bf:	mov    edx,0x9b45b65c
  41b7c4:	std    
  41b7c5:	shl    ebp,0x8f
  41b7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7c9:	ss fucomi st,st(1)
  41b7cc:	test   ebx,0xca3998ba
  41b7d2:	sbb    eax,esi
  41b7d4:	inc    edx
  41b7d5:	push   esp
  41b7d6:	js     0x41b774
  41b7d8:	add    eax,0xb3404f7f
  41b7dd:	addr16 hlt 
  41b7df:	mov    es,WORD PTR [ebp-0x2e3dafa7]
  41b7e5:	inc    ebx
  41b7e6:	jecxz  0x41b837
  41b7e8:	fisub  DWORD PTR [eax-0x6]
  41b7eb:	xor    esp,DWORD PTR [ebp+0xaea59f9]
  41b7f1:	fcom   QWORD PTR ds:0xffa0e57e
  41b7f7:	sbb    al,0x2c
  41b7f9:	cli    
  41b7fa:	enter  0x62e3,0x6d
  41b7fe:	push   ds
  41b7ff:	ds jg  0x41b870
  41b802:	les    ebx,FWORD PTR [ebx-0x36]
  41b805:	pop    esp
  41b806:	inc    ecx
  41b807:	nop
  41b808:	mov    ds:0xf0b37bde,eax
  41b80d:	push   0x65478804
  41b812:	rcl    BYTE PTR [ebp+0x57],cl
  41b815:	mov    DWORD PTR [esi-0x1d],ebp
  41b818:	dec    ebx
  41b819:	jge    0x41b7b0
  41b81b:	mov    ecx,0x13fa4fa4
  41b820:	inc    ebp
  41b821:	jl     0x41b814
  41b823:	push   ebx
  41b824:	fst    DWORD PTR [edx-0x23]
  41b827:	lds    edi,FWORD PTR [edx-0x1eb6aa30]
  41b82d:	daa    
  41b82e:	inc    eax
  41b82f:	ds (bad) 
  41b831:	or     bh,BYTE PTR [ebx]
  41b833:	pop    ebx
  41b834:	in     al,0xde
  41b836:	sahf   
  41b837:	and    ebp,edx
  41b839:	sub    cl,BYTE PTR [esi]
  41b83b:	in     eax,0x9c
  41b83d:	fiadd  WORD PTR [edx+0x4c]
  41b840:	adc    bh,BYTE PTR [edi-0x5c907be4]
  41b846:	dec    ebp
  41b847:	xor    al,BYTE PTR [edi]
  41b849:	mov    eax,esp
  41b84b:	or     al,0xf0
  41b84d:	pop    esp
  41b84e:	xor    bl,BYTE PTR [edi+edi*8+0x71]
  41b852:	dec    eax
  41b853:	mov    al,BYTE PTR [esi+0x48]
  41b856:	rep lods al,BYTE PTR ds:[esi]
  41b858:	out    dx,al
  41b859:	dec    edx
  41b85a:	fwait
  41b85b:	(bad)  
  41b85c:	das    
  41b85d:	ror    DWORD PTR cs:[ecx-0x619194dc],0xef
  41b865:	push   esp
  41b866:	and    al,0x90
  41b868:	cmp    eax,0xc6f735ac
  41b86d:	(bad)  
  41b86e:	les    esi,FWORD PTR [ecx]
  41b870:	call   0xd287:0x710ec527
  41b877:	loop   0x41b8d8
  41b879:	fs scas al,BYTE PTR es:[edi]
  41b87b:	or     bl,BYTE PTR [edx-0x17]
  41b87e:	into   
  41b87f:	mov    BYTE PTR [edx],cl
  41b881:	mov    bl,0xf1
  41b883:	mov    bh,0xd
  41b885:	outs   dx,BYTE PTR ds:[esi]
  41b886:	push   ds
  41b887:	rcr    ch,0x3d
  41b88a:	das    
  41b88b:	mov    dh,BYTE PTR [ecx-0x7e]
  41b88e:	fisttp WORD PTR ds:0x6d18a468
  41b894:	xor    ebx,edi
  41b896:	jno    0x41b8a6
  41b898:	leave  
  41b899:	sbb    DWORD PTR [edi+0x438e30a6],ecx
  41b89f:	(bad)  
  41b8a0:	iret   
  41b8a1:	out    0xa2,al
  41b8a3:	jbe    0x41b90d
  41b8a5:	mov    ds:0xb2c3cd17,al
  41b8aa:	mov    eax,0x2fec68b0
  41b8af:	jmp    0x41b921
  41b8b1:	pop    ebp
  41b8b2:	outs   dx,BYTE PTR ds:[esi]
  41b8b3:	retf   
  41b8b4:	iret   
  41b8b5:	xor    bl,BYTE PTR [ebp+0x3667c638]
  41b8bb:	sbb    eax,0x33f4a2b4
  41b8c0:	adc    dh,ch
  41b8c2:	fdivrp st(5),st
  41b8c4:	mov    DWORD PTR ds:0xd53b6884,ebx
  41b8ca:	aas    
  41b8cb:	sbb    al,0xd0
  41b8cd:	pop    es
  41b8ce:	and    cl,BYTE PTR ds:0x2693f90d
  41b8d4:	xchg   ebp,eax
  41b8d5:	(bad)  
  41b8d6:	mov    ah,0xd3
  41b8d8:	repnz cwde 
  41b8da:	cdq    
  41b8db:	fisub  DWORD PTR [esi]
  41b8dd:	rol    ecx,cl
  41b8df:	lahf   
  41b8e0:	xor    al,0xce
  41b8e2:	and    BYTE PTR [ebp-0x1c],bh
  41b8e5:	mov    bl,0x5b
  41b8e7:	aaa    
  41b8e8:	arpl   cx,dx
  41b8ea:	ds inc ecx
  41b8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ed:	mov    dl,0x8a
  41b8ef:	xchg   BYTE PTR [eax+edi*1],ch
  41b8f2:	pop    ax
  41b8f4:	loopne 0x41b891
  41b8f6:	test   BYTE PTR [bp+di],ah
  41b8f9:	scas   eax,DWORD PTR es:[edi]
  41b8fa:	ds sub al,0xc1
  41b8fd:	icebp  
  41b8fe:	lods   eax,DWORD PTR ds:[esi]
  41b8ff:	sub    DWORD PTR [esi],eax
  41b901:	loopne 0x41b958
  41b903:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b905:	ret    0xe169
  41b908:	shr    DWORD PTR [eax],0x5c
  41b90b:	mov    al,0x72
  41b90d:	ds mov bh,0xf9
  41b910:	jmp    0x81e369ff
  41b915:	lods   al,BYTE PTR ds:[esi]
  41b916:	push   edi
  41b917:	sbb    ecx,esi
  41b919:	loope  0x41b8a3
  41b91b:	mov    dh,0xdc
  41b91d:	ins    BYTE PTR es:[edi],dx
  41b91e:	test   BYTE PTR [ebx+esi*1-0x56],0x26
  41b923:	sbb    ah,BYTE PTR [edi+0x5fdc3b2]
  41b929:	push   ds
  41b92a:	sbb    esp,0xffffff97
  41b92d:	add    BYTE PTR [ebp+0x47d0abf0],0x8e
  41b934:	test   al,0x72
  41b936:	sahf   
  41b937:	loope  0x41b991
  41b939:	or     ebp,esi
  41b93b:	xchg   edi,eax
  41b93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b93d:	add    esp,DWORD PTR [esi+0x60ff17d0]
  41b943:	sub    edx,DWORD PTR [eax-0x697cc0a7]
  41b949:	xchg   DWORD PTR [eax],edx
  41b94b:	fidiv  WORD PTR [eax]
  41b94d:	mov    esp,0xd4fb15f8
  41b952:	or     BYTE PTR [esi],bl
  41b954:	adc    bl,BYTE PTR [ecx-0x1272844c]
  41b95a:	rol    BYTE PTR [ebx+ebp*4],1
  41b95d:	adc    BYTE PTR [eax-0x7d],al
  41b960:	push   eax
  41b961:	ror    BYTE PTR [edx-0x73567b6c],1
  41b967:	inc    esp
  41b968:	stos   BYTE PTR es:[edi],al
  41b969:	cmc    
  41b96a:	test   edi,edi
  41b96c:	mov    al,0xd5
  41b96e:	add    bl,0x5c
  41b971:	fst    QWORD PTR [ebx]
  41b973:	and    BYTE PTR [eax+0x3b],dh
  41b976:	pop    eax
  41b978:	in     eax,dx
  41b979:	adc    DWORD PTR [ebp+0x2a],edx
  41b97c:	add    ch,dl
  41b97e:	jo     0x41b907
  41b980:	out    dx,al
  41b981:	cwde   
  41b982:	dec    ecx
  41b983:	bound  edi,QWORD PTR [eax-0x322a355f]
  41b989:	mov    dl,0x90
  41b98b:	sub    edi,DWORD PTR [edi+0x51]
  41b98e:	shr    DWORD PTR [ebx+0x53506ff0],1
  41b994:	test   DWORD PTR [edi],0x31da6017
  41b99a:	mov    eax,ds:0x4e14fd42
  41b99f:	add    al,0xfc
  41b9a1:	pop    eax
  41b9a2:	retfw  0x6070
  41b9a6:	xor    dh,cl
  41b9a8:	mov    ebx,0x4867b6c4
  41b9ad:	dec    edx
  41b9ae:	rcr    BYTE PTR [eax],1
  41b9b0:	and    al,dl
  41b9b2:	sub    esp,ecx
  41b9b4:	sub    BYTE PTR [edi+0x1c],dh
  41b9b7:	and    ecx,DWORD PTR ds:[ebp+0x7708c0ca]
  41b9be:	gs jbe 0x41b94f
  41b9c1:	sbb    al,0xbf
  41b9c3:	es inc esp
  41b9c5:	pop    ebp
  41b9c6:	in     al,0x8c
  41b9c8:	dec    ecx
  41b9c9:	mov    eax,0x2cf73ee
  41b9ce:	ret    0x78c
  41b9d1:	into   
  41b9d2:	pop    edx
  41b9d3:	mov    edx,0x70cdc107
  41b9d8:	mov    ds:0x709df3ee,eax
  41b9dd:	inc    edx
  41b9de:	dec    edi
  41b9df:	xchg   edx,eax
  41b9e0:	fwait
  41b9e1:	(bad)  
  41b9e2:	ror    DWORD PTR [esi+eax*8-0x52],1
  41b9e6:	inc    eax
  41b9e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e8:	mov    al,ds:0x7f33ec60
  41b9ed:	mov    BYTE PTR [ebp+0x55af90a1],dl
  41b9f3:	xor    al,0x63
  41b9f5:	clc    
  41b9f6:	or     ch,BYTE PTR [esi]
  41b9f8:	popa   
  41b9f9:	fs push ebp
  41b9fb:	aad    0x18
  41b9fd:	add    bh,dh
  41b9ff:	xlat   BYTE PTR ds:[ebx]
  41ba00:	(bad)  
  41ba02:	dec    eax
  41ba03:	scas   eax,DWORD PTR es:[edi]
  41ba04:	ret    
  41ba05:	cld    
  41ba06:	sbb    bh,BYTE PTR [edi+0x6482a2de]
  41ba0c:	loopne 0x41b9fb
  41ba0e:	test   dl,dh
  41ba10:	xabort 0x60
  41ba13:	add    ebp,0xeb30c95b
  41ba19:	rep ss stos BYTE PTR es:[edi],al
  41ba1c:	xchg   ecx,eax
  41ba1d:	cwde   
  41ba1e:	or     BYTE PTR [ebx],ch
  41ba20:	aas    
  41ba21:	mov    edx,0x2b48ec0e
  41ba26:	dec    ecx
  41ba27:	mov    bl,0xb3
  41ba29:	lods   al,BYTE PTR ds:[esi]
  41ba2a:	inc    BYTE PTR [edx+ecx*2-0x33c2cdfc]
  41ba31:	and    bh,BYTE PTR [eax-0xb]
  41ba34:	add    DWORD PTR [esp+eax*1-0x5d],ebp
  41ba38:	adc    DWORD PTR [ecx+0x754c5504],eax
  41ba3e:	xor    edi,esi
  41ba40:	sub    ebp,DWORD PTR [eax+0x3e]
  41ba43:	sub    BYTE PTR [eax+0xe8673c3],bh
  41ba49:	xor    dl,BYTE PTR [eax+0x5fb83929]
  41ba4f:	jns    0x41bac1
  41ba51:	(bad)  
  41ba52:	fnstcw WORD PTR [edx+ebx*2+0x5c]
  41ba56:	sahf   
  41ba57:	les    edi,FWORD PTR [edi+0x26038b7f]
  41ba5d:	out    dx,eax
  41ba5e:	jg     0x41b9ea
  41ba60:	sbb    DWORD PTR [eax],ebx
  41ba62:	sub    esi,esi
  41ba64:	push   eax
  41ba65:	adc    dl,BYTE PTR [edx]
  41ba67:	push   ebp
  41ba68:	pop    edi
  41ba69:	or     eax,DWORD PTR [ebx-0x652a9027]
  41ba6f:	xchg   ebp,eax
  41ba70:	push   ecx
  41ba71:	repnz mov esp,0xa3c114a7
  41ba77:	out    0xa1,al
  41ba79:	mov    ecx,0x97379774
  41ba7e:	fldcw  WORD PTR [edi-0x1e73e79b]
  41ba84:	cmp    esi,esi
  41ba86:	test   DWORD PTR [edx-0x581a982],ecx
  41ba8c:	ins    DWORD PTR es:[edi],dx
  41ba8d:	in     al,dx
  41ba8e:	in     eax,0xd1
  41ba90:	popf   
  41ba91:	mov    ah,0xa6
  41ba93:	sahf   
  41ba94:	mov    ss,ebx
  41ba96:	xchg   BYTE PTR [esi+eax*4],ah
  41ba99:	mov    bh,0x18
  41ba9b:	pop    edx
  41ba9c:	lahf   
  41ba9d:	out    dx,eax
  41ba9e:	popa   
  41ba9f:	or     BYTE PTR [ebp+0x541c66a9],ah
  41baa5:	mov    eax,0x4b0a3ae1
  41baaa:	mov    eax,ds:0x8c8b5ec8
  41baaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab0:	xchg   esp,eax
  41bab1:	adc    edx,ecx
  41bab3:	jecxz  0x41bab6
  41bab5:	and    BYTE PTR [edx+0x78239cb3],bl
  41babb:	clc    
  41babc:	jp     0x41ba66
  41babe:	xor    eax,0x89c07606
  41bac3:	push   ss
  41bac4:	xor    al,0x4f
  41bac6:	cmp    esp,DWORD PTR [edx]
  41bac8:	push   es
  41bac9:	(bad)
  41bacd:	push   cs
  41bace:	push   edx
  41bacf:	in     eax,dx
  41bad0:	imul   ebp,esi,0xffffffb6
  41bad3:	cwde   
  41bad4:	int    0xd2
  41bad6:	mov    eax,ds:0x46397f48
  41badb:	retf   
  41badc:	mov    dl,0xad
  41bade:	fidiv  DWORD PTR [ecx-0x6ea0bd99]
  41bae4:	and    al,0x7a
  41bae6:	pop    ds
  41bae7:	push   ds
  41bae8:	adc    ah,ch
  41baea:	das    
  41baeb:	aad    0x97
  41baed:	inc    ebx
  41baee:	sub    DWORD PTR ds:0x1db0c215,eax
  41baf4:	in     al,dx
  41baf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baf6:	retf   0x298d
  41baf9:	or     al,0xfa
  41bafb:	sub    edi,esi
  41bafd:	scas   eax,DWORD PTR es:[edi]
  41bafe:	lea    ecx,[esi-0x45]
  41bb01:	mov    eax,0x574c9a4d
  41bb06:	and    al,0x57
  41bb08:	pushf  
  41bb09:	adc    eax,0x2d63ca55
  41bb0e:	mov    dl,0x9c
  41bb10:	push   edi
  41bb11:	or     DWORD PTR [ebx],0x1fbb9234
  41bb17:	xchg   esp,eax
  41bb18:	fwait
  41bb19:	xchg   ecx,eax
  41bb1a:	sahf   
  41bb1b:	dec    esi
  41bb1c:	jno    0x41bb06
  41bb1e:	cmp    bl,bh
  41bb20:	clc    
  41bb21:	test   eax,0xcdab6d68
  41bb26:	xlat   BYTE PTR ds:[ebx]
  41bb27:	aad    0xb2
  41bb29:	sar    esp,1
  41bb2b:	fstp   TBYTE PTR [eax+0x27467ff4]
  41bb31:	fldcw  WORD PTR [ecx+edi*4-0x27e244bc]
  41bb38:	mov    DWORD PTR [ecx],ecx
  41bb3a:	ss add eax,0xd3c290e0
  41bb40:	mov    eax,0x612eb1c9
  41bb45:	push   esp
  41bb46:	inc    ebx
  41bb47:	or     eax,0x441c5afc
  41bb4c:	mov    ah,0xbe
  41bb4e:	and    bh,BYTE PTR [eax+0x35cdbaab]
  41bb54:	or     DWORD PTR [esi-0x64f2d18],ebp
  41bb5a:	or     al,0x47
  41bb5c:	sbb    eax,0xacdc4fcf
  41bb61:	jno    0x41bba7
  41bb63:	out    0xed,eax
  41bb65:	or     DWORD PTR [ebx+0x40c3e385],esp
  41bb6b:	out    dx,al
  41bb6c:	dec    edx
  41bb6d:	xchg   esp,eax
  41bb6e:	pop    es
  41bb6f:	pushf  
  41bb70:	fcmovu st,st(1)
  41bb72:	lea    edi,[ecx]
  41bb74:	dec    ecx
  41bb75:	mov    WORD PTR [esp+edi*8],ds
  41bb78:	pop    ebp
  41bb79:	and    ecx,edi
  41bb7b:	mov    ah,0xa0
  41bb7d:	imul   esi,ebp,0xb5fb6a51
  41bb83:	scas   al,BYTE PTR es:[edi]
  41bb84:	call   0xd6d6:0x6845b70b
  41bb8b:	ins    BYTE PTR es:[edi],dx
  41bb8c:	dec    eax
  41bb8d:	jae    0x41bb86
  41bb8f:	cdq    
  41bb90:	(bad)  
  41bb91:	bound  esi,QWORD PTR [ebx]
  41bb93:	or     cl,0x94
  41bb96:	adc    dx,WORD PTR [esi]
  41bb99:	xchg   ebp,eax
  41bb9a:	add    al,BYTE PTR [edx+0x3d]
  41bb9d:	dec    ebx
  41bb9e:	cwde   
  41bb9f:	lock jmp 0xe94b:0x7d53d1aa
  41bba7:	mov    al,ds:0x3a2e9659
  41bbac:	dec    esp
  41bbad:	and    ebx,DWORD PTR [ecx+eiz*2]
  41bbb0:	xchg   esp,eax
  41bbb1:	call   0xaecd:0x93f04ea4
  41bbb8:	or     BYTE PTR [ebp-0x1b790ea1],0xac
  41bbbf:	test   al,0x25
  41bbc1:	sar    BYTE PTR [ecx+ecx*1+0x2eee8422],cl
  41bbc8:	and    eax,0x18797412
  41bbcd:	inc    edx
  41bbce:	sbb    dh,BYTE PTR [esi+0x13]
  41bbd1:	jne    0x41bc23
  41bbd3:	shl    BYTE PTR [esi],cl
  41bbd5:	pop    eax
  41bbd6:	pop    ds
  41bbd7:	xchg   DWORD PTR [ecx],ecx
  41bbd9:	inc    ebp
  41bbda:	arpl   WORD PTR [ebx-0x10],si
  41bbdd:	inc    edx
  41bbde:	dec    esp
  41bbdf:	sahf   
  41bbe0:	pop    esi
  41bbe1:	outs   dx,DWORD PTR ds:[esi]
  41bbe2:	xchg   ebp,eax
  41bbe3:	popf   
  41bbe4:	and    al,0xc0
  41bbe6:	fcom   st(0)
  41bbe8:	xor    al,0xb1
  41bbea:	stos   BYTE PTR es:[edi],al
  41bbeb:	sub    al,0x59
  41bbed:	in     eax,0x8e
  41bbef:	dec    ecx
  41bbf0:	std    
  41bbf1:	add    edi,esi
  41bbf3:	lea    edx,[edx]
  41bbf5:	shl    dh,1
  41bbf7:	cmp    BYTE PTR [edi+ecx*8-0x1c],dl
  41bbfb:	and    eax,0x6a5526bf
  41bc00:	dec    esi
  41bc01:	mov    ah,0x5b
  41bc03:	cmp    edx,DWORD PTR ds:0xe0be17f2
  41bc09:	jle    0x41bc01
  41bc0b:	xchg   ebx,eax
  41bc0c:	es xchg esp,eax
  41bc0e:	aaa    
  41bc0f:	xchg   esp,eax
  41bc10:	mov    BYTE PTR [edi-0x75294928],dl
  41bc16:	fld    TBYTE PTR [ebp-0x78]
  41bc19:	or     al,0xd8
  41bc1b:	mov    BYTE PTR [esi+0x26],0xfe
  41bc1f:	ja     0x41bc8f
  41bc21:	iret   
  41bc22:	mov    al,ds:0xda936706
  41bc27:	xlat   BYTE PTR ds:[ebx]
  41bc28:	das    
  41bc29:	xor    ah,BYTE PTR [ebp-0x3f]
  41bc2c:	stos   DWORD PTR es:[edi],eax
  41bc2d:	dec    ebp
  41bc2e:	lods   eax,DWORD PTR ds:[esi]
  41bc2f:	rcl    al,0x92
  41bc32:	pop    ebx
  41bc33:	and    ah,BYTE PTR cs:[edi+edi*1]
  41bc37:	jns    0x41bcaa
  41bc39:	in     al,0x88
  41bc3b:	ret    0xc62f
  41bc3e:	mov    esi,0x3dd86a39
  41bc43:	(bad)  
  41bc44:	cmp    al,0xa4
  41bc46:	sbb    eax,0x78617645
  41bc4b:	cwde   
  41bc4c:	aas    
  41bc4d:	fstp   DWORD PTR [edi]
  41bc4f:	adc    ebx,DWORD PTR [ebp+0x32205497]
  41bc55:	dec    ebp
  41bc56:	mov    cl,0x34
  41bc58:	xchg   DWORD PTR [ebx-0x2f],ecx
  41bc5b:	jecxz  0x41bc3b
  41bc5d:	ja     0x41bc2c
  41bc5f:	je     0x41bc5e
  41bc61:	fcmovb st,st(1)
  41bc63:	inc    edx
  41bc64:	mov    bh,0x26
  41bc66:	test   DWORD PTR ds:[edx],esp
  41bc69:	xor    ah,BYTE PTR [eax+0x4c]
  41bc6c:	mov    ss,WORD PTR [edi]
  41bc6e:	lds    ecx,FWORD PTR [edx]
  41bc70:	cmp    BYTE PTR ds:0x15da8265,0xec
  41bc77:	outs   dx,DWORD PTR ds:[esi]
  41bc78:	dec    edx
  41bc79:	out    0x1a,al
  41bc7b:	xchg   si,ax
  41bc7d:	loopne 0x41bc4f
  41bc7f:	xor    DWORD PTR [ebx+0x18],edx
  41bc82:	imul   ecx,edx,0xffffffbb
  41bc85:	stc    
  41bc86:	mov    ds:0x9a35d66e,eax
  41bc8b:	pop    esp
  41bc8c:	add    edi,DWORD PTR [edx-0x14a8f80a]
  41bc92:	mov    ah,0x89
  41bc94:	aas    
  41bc95:	xchg   edx,eax
  41bc96:	add    edx,DWORD PTR [esi]
  41bc98:	arpl   WORD PTR [ecx],bx
  41bc9a:	jg     0x41bc79
  41bc9c:	shl    BYTE PTR [ebx],0xf8
  41bc9f:	repnz cmp esi,DWORD PTR [edx+edi*8]
  41bca3:	or     BYTE PTR [ebx+eax*2-0x7a],cl
  41bca7:	jno    0x41bc5b
  41bca9:	retf   
  41bcaa:	repnz sahf 
  41bcac:	sub    al,0xf5
  41bcae:	jmp    0x41bd10
  41bcb0:	sub    eax,0xcc85d9a5
  41bcb5:	push   edi
  41bcb6:	enter  0xbf57,0x37
  41bcba:	sub    eax,0x70ccda4d
  41bcbf:	sahf   
  41bcc0:	int3   
  41bcc1:	(bad)  
  41bcc3:	(bad)  
  41bcc4:	lods   al,BYTE PTR ds:[si]
  41bcc6:	cdq    
  41bcc7:	add    bh,BYTE PTR [edi]
  41bcc9:	adc    esi,ebx
  41bccb:	add    eax,0xf8245c5a
  41bcd0:	mov    ah,0x41
  41bcd2:	or     BYTE PTR ds:[edx],ch
  41bcd5:	lds    esi,FWORD PTR [ecx+0x1fd797ec]
  41bcdb:	cmp    eax,0x77f1a461
  41bce0:	repz jmp 0x41bd01
  41bce3:	xor    DWORD PTR [eax+0x31],esi
  41bce6:	jge    0x41bd24
  41bce8:	shl    DWORD PTR [edx+0x1b3fee7b],0x26
  41bcef:	sti    
  41bcf0:	imul   edx,eax,0xef0892c
  41bcf6:	repnz aas 
  41bcf8:	jno    0x41bd52
  41bcfa:	push   cs
  41bcfb:	adc    eax,0x5474e164
  41bd00:	xor    DWORD PTR [edi+esi*8+0x35],0x5eabab19
  41bd08:	out    dx,al
  41bd09:	shl    DWORD PTR [esi],1
  41bd0b:	xor    eax,0x83427980
  41bd10:	push   ebx
  41bd11:	cmovl  eax,DWORD PTR [ecx]
  41bd14:	sub    bh,dl
  41bd16:	icebp  
  41bd17:	scas   al,BYTE PTR es:[edi]
  41bd18:	dec    eax
  41bd19:	sbb    al,0x34
  41bd1b:	mov    dl,0x6f
  41bd1d:	out    dx,eax
  41bd1e:	pop    esi
  41bd1f:	jnp    0x41bcb8
  41bd21:	cli    
  41bd22:	pop    ds
  41bd23:	sbb    DWORD PTR [ebx-0x7a],0x6e4b9510
  41bd2a:	xor    ecx,DWORD PTR [eax+0x677a2215]
  41bd30:	dec    edi
  41bd31:	pop    ebp
  41bd32:	sub    DWORD PTR [edx+0x59],eax
  41bd35:	cld    
  41bd36:	add    DWORD PTR [ebp+0x4d],esi
  41bd39:	sub    dh,BYTE PTR [ebp+edi*1-0x4d]
  41bd3d:	imul   esp,DWORD PTR ds:[ecx+edi*2-0x431002ca],0x63098309
  41bd49:	repz bound esp,QWORD PTR [edx]
  41bd4c:	cli    
  41bd4d:	mov    bh,0xf9
  41bd4f:	out    dx,eax
  41bd50:	dec    eax
  41bd51:	and    BYTE PTR [ebx-0x5e],ch
  41bd54:	sbb    DWORD PTR [ecx-0x47e9dac7],ebp
  41bd5a:	stos   DWORD PTR es:[edi],eax
  41bd5b:	fxch   st(6)
  41bd5d:	add    ch,BYTE PTR [edi+ecx*4-0x29ca952c]
  41bd64:	xchg   edx,eax
  41bd65:	xlat   BYTE PTR ds:[ebx]
  41bd66:	int3   
  41bd67:	retf   
  41bd68:	xlat   BYTE PTR ds:[ebx]
  41bd69:	nop
  41bd6a:	inc    esp
  41bd6b:	and    BYTE PTR [edi-0x7d],dh
  41bd6e:	add    al,0x4e
  41bd70:	fnop   
  41bd72:	push   ecx
  41bd73:	je     0x41bd8a
  41bd75:	out    dx,eax
  41bd76:	call   0x51f8:0xfc211cf0
  41bd7d:	mov    bh,0x3d
  41bd7f:	or     eax,0x3cbb4d9e
  41bd84:	loop   0x41bdd7
  41bd86:	inc    ebp
  41bd87:	sahf   
  41bd88:	das    
  41bd89:	jmp    0xddeb:0x347eb945
  41bd90:	imul   ebp,DWORD PTR [ecx+edx*1],0xc8fbe9c0
  41bd97:	push   ecx
  41bd98:	xchg   BYTE PTR [ebx-0x60c9b037],al
  41bd9e:	sahf   
  41bd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda0:	mov    ds:0x8b2cb5a2,eax
  41bda5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda6:	lahf   
  41bda7:	jo     0x41bd4e
  41bda9:	out    dx,al
  41bdaa:	out    0xc5,eax
  41bdac:	mov    ebx,?
  41bdae:	call   0xe7134c52
  41bdb3:	inc    esi
  41bdb4:	fstp   TBYTE PTR [ebp-0x27b54a9a]
  41bdba:	mov    gs,WORD PTR [edx]
  41bdbc:	sahf   
  41bdbd:	pop    ebp
  41bdbe:	ins    DWORD PTR es:[edi],dx
  41bdbf:	outs   dx,BYTE PTR ds:[esi]
  41bdc0:	shl    DWORD PTR [ebp+0x539a6501],cl
  41bdc6:	loopne 0x41bd95
  41bdc8:	idiv   BYTE PTR [esi+0x65]
  41bdcb:	pop    edi
  41bdcc:	add    al,0x4b
  41bdce:	or     al,0x42
  41bdd0:	mov    esp,edi
  41bdd2:	sub    eax,0xaca02b9f
  41bdd7:	jg     0x41bdde
  41bdd9:	jne    0x41bdfc
  41bddb:	cmp    esp,DWORD PTR [edx]
  41bddd:	push   es
  41bdde:	ins    BYTE PTR es:[edi],dx
  41bddf:	xchg   ebx,eax
  41bde0:	ror    BYTE PTR [esi-0x43],cl
  41bde3:	or     BYTE PTR [ecx+0x5967143e],0xbb
  41bdea:	call   0x7899:0x3ea759ce
  41bdf1:	icebp  
  41bdf2:	mov    ah,0x9b
  41bdf4:	jnp    0x41be39
  41bdf6:	fistp  DWORD PTR [eax+eax*1+0x18]
  41bdfa:	out    dx,eax
  41bdfb:	adc    BYTE PTR [edx+0x13],dl
  41bdfe:	add    eax,0x5acc56b1
  41be03:	mov    al,ds:0xa4aa9266
  41be08:	inc    ecx
  41be09:	sub    esp,ebp
  41be0b:	mov    ds,WORD PTR ds:0x47f0e6cc
  41be11:	add    al,0xf6
  41be13:	sub    al,0xa1
  41be15:	(bad)  [eax+ebx*2-0x77]
  41be19:	mov    ah,0x6
  41be1b:	and    eax,0x8ef69e23
  41be20:	mov    esp,0xe77e4e50
  41be25:	out    0xc7,eax
  41be27:	out    dx,al
  41be28:	ret    0x3535
  41be2b:	mov    ebx,0xec670521
  41be30:	outs   dx,BYTE PTR ds:[esi]
  41be31:	xchg   esp,eax
  41be32:	adc    eax,0x49035869
  41be37:	jmp    0x7cf8:0xbfa2423d
  41be3e:	or     ch,dh
  41be40:	mov    cl,0x5b
  41be42:	mov    al,ds:0xa45c4596
  41be47:	cmp    DWORD PTR [esi],esi
  41be49:	xlat   BYTE PTR ds:[ebx]
  41be4a:	cmp    ebx,DWORD PTR [ecx+0x46]
  41be4d:	fs push 0x8214bbbe
  41be53:	fld    TBYTE PTR [ebx+0x2c185924]
  41be59:	shr    BYTE PTR [eax+0x52],1
  41be5c:	mov    ebp,0xcb618994
  41be61:	rol    BYTE PTR [edi-0xc3da27a],1
  41be67:	sbb    dl,ah
  41be69:	pop    edi
  41be6a:	stos   DWORD PTR es:[edi],eax
  41be6b:	and    DWORD PTR [ecx-0x1377562],0x5b
  41be72:	lock xlat BYTE PTR ds:[ebx]
  41be74:	pop    ebp
  41be75:	ret    0x56e1
  41be78:	jo     0x41bebf
  41be7a:	push   edi
  41be7b:	jno    0x41be1e
  41be7d:	jp     0x41bedb
  41be7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be80:	je     0x41be99
  41be82:	push   0x2777d9e4
  41be87:	stc    
  41be88:	sbb    dh,BYTE PTR [edx]
  41be8a:	mov    ecx,0x714e618f
  41be8f:	and    eax,0x7f765541
  41be94:	enter  0x9e60,0xc3
  41be98:	rcr    BYTE PTR [ebx-0x63],cl
  41be9b:	imul   eax,esp,0x2de64e1
  41bea1:	fcom   QWORD PTR [ecx+0x15]
  41bea4:	hlt    
  41bea5:	push   es
  41bea6:	xor    al,0xf1
  41bea8:	and    cl,bh
  41beaa:	mov    ds:0x8a899347,eax
  41beaf:	pop    ebx
  41beb0:	into   
  41beb1:	xchg   edi,eax
  41beb2:	shl    cl,cl
  41beb4:	sahf   
  41beb5:	mov    ch,0x27
  41beb7:	and    al,0x49
  41beb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beba:	(bad)  
  41bebb:	push   esi
  41bebc:	gs push 0x60542c5d
  41bec2:	inc    ebp
  41bec3:	cmp    DWORD PTR [ebx-0x45c1819a],eax
  41bec9:	imul   ebp,DWORD PTR [edi-0x28],0x1434d9e7
  41bed0:	jmp    0x41bf4d
  41bed2:	pop    esi
  41bed3:	xor    ah,bh
  41bed5:	stc    
  41bed6:	inc    esp
  41bed7:	or     esp,DWORD PTR [ecx+0x16d6b89b]
  41bedd:	or     ch,BYTE PTR [edx-0x6206f4d6]
  41bee3:	mov    WORD PTR [edx+ebp*4],ds
  41bee6:	lods   al,BYTE PTR ds:[esi]
  41bee7:	fisttp DWORD PTR [esi+0x6b5880c1]
  41beed:	cmc    
  41beee:	das    
  41beef:	pop    esp
  41bef0:	adc    al,0xed
  41bef2:	daa    
  41bef3:	daa    
  41bef4:	das    
  41bef5:	aaa    
  41bef6:	jbe    0x41bec5
  41bef8:	ror    dh,0x1
  41befb:	inc    ecx
  41befc:	sbb    edi,DWORD PTR [esi*2-0x15d64590]
  41bf03:	js     0x41bf4f
  41bf05:	and    ebp,DWORD PTR [ecx-0x3f]
  41bf08:	seta   BYTE PTR [ebx-0x44ee62d5]
  41bf0f:	or     al,0xb5
  41bf11:	outs   dx,BYTE PTR ds:[esi]
  41bf12:	push   ebx
  41bf13:	push   edi
  41bf14:	ss xor cx,si
  41bf18:	rcr    BYTE PTR [ebx],1
  41bf1a:	test   eax,0xe5d6313c
  41bf1f:	xor    DWORD PTR [edx],esi
  41bf21:	je     0x41bedd
  41bf23:	out    0xa,al
  41bf25:	mov    al,0x91
  41bf27:	push   ebp
  41bf28:	les    edi,FWORD PTR [si-0x61]
  41bf2c:	inc    esi
  41bf2d:	and    bl,BYTE PTR [esi-0x3b]
  41bf30:	das    
  41bf31:	push   0xc205b0a0
  41bf36:	sub    ecx,DWORD PTR [ecx-0x3f05a528]
  41bf3c:	xchg   esi,eax
  41bf3d:	pop    es
  41bf3e:	xchg   ecx,eax
  41bf3f:	data16 cmp BYTE PTR [ecx+0x4a],cl
  41bf43:	aam    0xb5
  41bf45:	test   al,0xaa
  41bf47:	mov    gs,WORD PTR [ebp+0x1f]
  41bf4a:	mov    al,0x1b
  41bf4c:	xor    esp,edx
  41bf4e:	mov    dh,0x93
  41bf50:	test   eax,0x736e0344
  41bf55:	mov    dh,0xe
  41bf57:	test   al,0x18
  41bf59:	imul   ecx,DWORD PTR [esi-0x53],0x19f39a0e
  41bf60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf61:	popa   
  41bf62:	lock stos BYTE PTR es:[edi],al
  41bf64:	mov    bh,0x47
  41bf66:	bound  ebp,QWORD PTR [ebx]
  41bf68:	mov    esi,DWORD PTR [ebx]
  41bf6a:	pop    es
  41bf6b:	frstor [ebx+0x58]
  41bf6e:	das    
  41bf6f:	mov    ds:0x76fae532,al
  41bf74:	pop    esi
  41bf75:	scas   eax,DWORD PTR es:[edi]
  41bf76:	inc    ebp
  41bf77:	sub    edx,DWORD PTR [ebx-0x1]
  41bf7a:	or     ah,BYTE PTR [ecx+edi*4-0x56]
  41bf7e:	inc    ebx
  41bf7f:	cs sbb eax,0x7d
  41bf83:	pop    ebp
  41bf84:	xchg   ebp,eax
  41bf85:	jcxz   0x41bf0e
  41bf88:	and    edi,eax
  41bf8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf8b:	adc    dh,ah
  41bf8d:	jnp    0x41bfda
  41bf8f:	(bad)  
  41bf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf91:	test   al,0xd9
  41bf93:	xlat   BYTE PTR ds:[ebx]
  41bf94:	add    eax,0x8d7cd3e4
  41bf99:	sti    
  41bf9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf9b:	push   esp
  41bf9c:	das    
  41bf9d:	dec    ecx
  41bf9e:	add    ch,BYTE PTR [esi]
  41bfa0:	ins    DWORD PTR es:[edi],dx
  41bfa1:	cmp    esi,DWORD PTR [ebx]
  41bfa3:	shl    DWORD PTR [edi-0x3136103d],cl
  41bfa9:	inc    esp
  41bfaa:	rcr    BYTE PTR [esi+0x6c],1
  41bfad:	inc    ebp
  41bfae:	ss mov esp,0x72addf6b
  41bfb4:	repz jp 0x41c019
  41bfb7:	sti    
  41bfb8:	gs sub al,bh
  41bfbb:	in     eax,0x32
  41bfbd:	xor    edi,DWORD PTR [edi]
  41bfbf:	add    BYTE PTR [edx+0x7eaf3cbc],0x70
  41bfc6:	enter  0x584d,0xcd
  41bfca:	addr16 pop ds
  41bfcc:	cmc    
  41bfcd:	xchg   esi,eax
  41bfce:	loope  0x41c023
  41bfd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd1:	sar    DWORD PTR [eax],1
  41bfd3:	add    eax,0x1044f28c
  41bfd8:	push   esp
  41bfd9:	fiadd  DWORD PTR [edi+ecx*1-0x484a1640]
  41bfe0:	dec    eax
  41bfe1:	dec    ebp
  41bfe2:	loopne 0x41c05b
  41bfe4:	push   0xffffff9b
  41bfe6:	sahf   
  41bfe7:	and    eax,0xb2746259
  41bfec:	cld    
  41bfed:	(bad)  
  41bfee:	lods   al,BYTE PTR ds:[esi]
  41bfef:	rcl    DWORD PTR [eax-0x7a],cl
  41bff2:	inc    edi
  41bff3:	add    esp,DWORD PTR [edx-0x22]
  41bff6:	sbb    dh,cl
  41bff8:	mov    ebx,0x696be420
  41bffd:	jbe    0x41c056
  41bfff:	shl    BYTE PTR [ebx+ebp*1],0x26
  41c003:	sub    BYTE PTR [edi+eiz*1-0x71921b56],cl
  41c00a:	repz dec ebp
  41c00c:	push   ecx
  41c00d:	ret    
  41c00e:	jns    0x41bff5
  41c010:	xchg   esp,eax
  41c011:	jb     0x41c04d
  41c013:	jb     0x41bfd0
  41c015:	mov    ds:0x9fdcf41b,eax
  41c01a:	leave  
  41c01b:	pop    eax
  41c01c:	call   0x8984:0x6ae7254b
  41c023:	call   0xdd50:0xf3377b1e
  41c02a:	sub    esp,DWORD PTR [eax]
  41c02c:	sbb    dh,bl
  41c02e:	in     eax,0x6d
  41c030:	mov    esi,0x606959c8
  41c035:	int3   
  41c036:	cmp    eax,0xf151b06f
  41c03b:	lods   al,BYTE PTR ds:[esi]
  41c03c:	iret   
  41c03d:	call   0x484e:0x1e56bbde
  41c044:	aam    0xfe
  41c046:	push   0xfffffff5
  41c048:	aam    0xe5
  41c04a:	arpl   WORD PTR [edx-0x5a],bp
  41c04d:	adc    DWORD PTR [edi],ebx
  41c04f:	push   edi
  41c050:	dec    esp
  41c051:	out    dx,al
  41c052:	outs   dx,BYTE PTR ds:[esi]
  41c053:	dec    ecx
  41c054:	push   ebp
  41c055:	lahf   
  41c056:	pop    edi
  41c057:	loope  0x41c06a
  41c059:	mov    ds:0xc88c9279,al
  41c05e:	leave  
  41c05f:	xchg   esi,eax
  41c060:	mov    cl,0xce
  41c062:	je     0x41c05d
  41c064:	jle    0x41c023
  41c066:	cmc    
  41c067:	xor    ecx,DWORD PTR [edx+ebx*2]
  41c06a:	aam    0x34
  41c06c:	mov    ebp,0x571a8b7a
  41c071:	and    DWORD PTR [ebx-0x33107831],esp
  41c077:	in     al,dx
  41c078:	pop    ds
  41c079:	jo     0x41c004
  41c07b:	or     sp,dx
  41c07e:	adc    DWORD PTR [edx+esi*1+0x20f649bd],eax
  41c085:	sub    BYTE PTR [edi],cl
  41c087:	adc    eax,0x27d2875b
  41c08c:	jb     0x41c041
  41c08e:	mov    eax,0xc415f
  41c093:	hlt    
  41c094:	repnz push ebp
  41c096:	sbb    BYTE PTR [esi+0x2bc61b7d],dl
  41c09c:	test   DWORD PTR [edx+ebp*1],esp
  41c09f:	rcl    ecx,1
  41c0a1:	jb     0x41c024
  41c0a3:	das    
  41c0a4:	in     al,0xb9
  41c0a6:	fs cmc 
  41c0a8:	push   es
  41c0a9:	ror    BYTE PTR [esi-0x26],cl
  41c0ac:	or     BYTE PTR [ebp+0x46],cl
  41c0af:	or     ebx,DWORD PTR [edi+0x61]
  41c0b2:	enter  0xa529,0x50
  41c0b6:	repnz ins BYTE PTR es:[edi],dx
  41c0b8:	xchg   edi,eax
  41c0b9:	loope  0x41c135
  41c0bb:	mov    ds:0xebd22226,al
  41c0c0:	mov    edx,0xd64eab45
  41c0c5:	jp     0x41c0ea
  41c0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c8:	mov    WORD PTR [eax-0x29e812aa],?
  41c0ce:	js     0x41c079
  41c0d0:	jne    0x41c13c
  41c0d2:	repnz inc edx
  41c0d4:	lock shr BYTE PTR [eax-0x26],1
  41c0d8:	push   es
  41c0d9:	mov    al,ds:0xa5a6647f
  41c0de:	mov    al,ds:0xac1160b5
  41c0e3:	sahf   
  41c0e4:	inc    esp
  41c0e5:	inc    edx
  41c0e6:	push   esp
  41c0e7:	sbb    cl,BYTE PTR [eax-0x64f30c48]
  41c0ed:	mov    esp,0x9ff1c6d2
  41c0f2:	in     eax,dx
  41c0f3:	call   0xbb164cb
  41c0f8:	jmp    0xab0f:0x551ca57d
  41c0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c100:	cmp    cl,BYTE PTR [ecx]
  41c102:	adc    eax,0xa89cae35
  41c107:	cdq    
  41c108:	lahf   
  41c109:	jb     0x41c08c
  41c10b:	inc    eax
  41c10c:	xchg   ebx,eax
  41c10d:	test   al,0x27
  41c10f:	repnz pushf 
  41c111:	xor    al,BYTE PTR ds:0xcf6acdc1
  41c117:	mov    esi,0xb9e608ad
  41c11c:	jge    0x41c17f
  41c11e:	hlt    
  41c11f:	inc    ebx
  41c120:	jo     0x41c127
  41c122:	sbb    DWORD PTR [ebx+0x349afaf1],ecx
  41c128:	inc    ecx
  41c129:	mov    eax,0x782cae5a
  41c12e:	mov    ecx,0x5b75881b
  41c133:	arpl   WORD PTR [eax],sp
  41c135:	mov    ebp,ebp
  41c137:	jecxz  0x41c159
  41c139:	leave  
  41c13a:	fwait
  41c13b:	mov    eax,0x11b41b6d
  41c140:	add    eax,0x5bd8eace
  41c145:	sub    al,0xc5
  41c147:	sub    DWORD PTR [eax-0x44e8a21a],edi
  41c14d:	push   ds
  41c14e:	and    BYTE PTR [edi-0x765a88a2],dl
  41c154:	pushf  
  41c155:	push   esp
  41c156:	mov    DWORD PTR [edx],ecx
  41c158:	or     BYTE PTR [ecx-0x4d],cl
  41c15b:	add    DWORD PTR [edx+0x52],edx
  41c15e:	popa   
  41c15f:	jmp    0x12e8c7df
  41c164:	sbb    eax,DWORD PTR [ebx]
  41c166:	popa   
  41c167:	sbb    eax,0xc43aa329
  41c16c:	add    eax,0x5a36aa67
  41c171:	jge    0x41c152
  41c173:	adc    BYTE PTR [esi-0x40],al
  41c176:	dec    ecx
  41c177:	dec    esp
  41c178:	push   esi
  41c179:	cmp    eax,eax
  41c17b:	sti    
  41c17c:	sub    eax,0xcaf6131b
  41c181:	test   DWORD PTR [esi+0x48],eax
  41c184:	dec    ecx
  41c185:	jno    0x41c164
  41c187:	lahf   
  41c188:	or     al,0xef
  41c18a:	(bad)  
  41c18b:	dec    edx
  41c18c:	pop    esi
  41c18d:	dec    esp
  41c18e:	and    esp,DWORD PTR [edi+edx*4-0x75009fea]
  41c195:	xchg   esi,eax
  41c196:	pop    ss
  41c197:	sbb    al,0x1
  41c199:	sahf   
  41c19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c19b:	lods   ax,WORD PTR ds:[esi]
  41c19d:	mov    ?,WORD PTR [edi+0xc]
  41c1a0:	fimul  WORD PTR [eax-0x28b0ca7]
  41c1a6:	jecxz  0x41c1eb
  41c1a8:	ret    
  41c1a9:	xchg   esi,ebx
  41c1ab:	sub    BYTE PTR [ebx+0x5c],bl
  41c1ae:	in     eax,0x3a
  41c1b0:	ins    DWORD PTR es:[edi],dx
  41c1b1:	mov    ecx,0xb02fea90
  41c1b6:	mov    eax,ds:0xcff66f3e
  41c1bb:	hlt    
  41c1bc:	adc    bh,ah
  41c1be:	mov    ds,WORD PTR [ebx]
  41c1c0:	jb     0x41c1be
  41c1c2:	fcomp  DWORD PTR [ecx-0x4a]
  41c1c5:	push   edi
  41c1c6:	out    dx,al
  41c1c7:	xor    DWORD PTR [edi+edi*4],ecx
  41c1ca:	adc    al,BYTE PTR [edx]
  41c1cc:	push   ebx
  41c1cd:	jbe    0x41c1c0
  41c1cf:	add    DWORD PTR [edi+0x79],esi
  41c1d2:	sbb    DWORD PTR [edi+0x3d],0xffffffa5
  41c1d6:	ror    DWORD PTR [edx+edx*1+0x50],cl
  41c1da:	imul   ecx,DWORD PTR [eax+ecx*1+0xcfb72c5],0xe290b1f6
  41c1e5:	mov    ah,0x85
  41c1e7:	or     esp,edi
  41c1e9:	ja     0x41c243
  41c1eb:	or     ebp,DWORD PTR [esi]
  41c1ed:	sbb    esp,DWORD PTR [ecx]
  41c1ef:	mov    dl,0xf2
  41c1f1:	sbb    DWORD PTR [edx],esi
  41c1f3:	cwd    
  41c1f5:	(bad)  
  41c1f6:	cli    
  41c1f7:	in     al,dx
  41c1f8:	or     BYTE PTR [ebx+0xa],0x1f
  41c1fc:	loopne 0x41c18e
  41c1fe:	sub    BYTE PTR [eax],0xbc
  41c201:	adc    dh,BYTE PTR [edi+0x4929d46f]
  41c207:	inc    ebp
  41c208:	test   al,0xa4
  41c20a:	and    al,0x14
  41c20c:	fucomi st,st(6)
  41c20e:	mov    bh,0x89
  41c210:	das    
  41c211:	jns    0x41c27c
  41c213:	jmp    0x41c26f
  41c215:	xor    eax,0xc9f87daa
  41c21a:	loope  0x41c203
  41c21c:	dec    esp
  41c21d:	push   ebx
  41c21e:	scas   al,BYTE PTR es:[edi]
  41c21f:	stc    
  41c220:	jmp    0x41c1f4
  41c222:	outs   dx,DWORD PTR ds:[esi]
  41c223:	pop    ebp
  41c224:	dec    eax
  41c225:	jmp    0xed2b:0x8f78970f
  41c22c:	xor    eax,0xc67ac4e6
  41c231:	fidiv  DWORD PTR [ebx-0x537fc67f]
  41c237:	dec    edx
  41c238:	bound  esi,QWORD PTR [edi+0x3d]
  41c23b:	adc    ah,BYTE PTR [eax]
  41c23d:	sub    DWORD PTR [ecx+0x1f6f263f],edi
  41c243:	arpl   WORD PTR [ebx],si
  41c245:	mul    BYTE PTR [edx]
  41c247:	cwde   
  41c248:	dec    esp
  41c249:	mov    ecx,0x46604c1c
  41c24e:	out    dx,al
  41c24f:	pop    edx
  41c250:	in     eax,dx
  41c251:	and    al,0x6c
  41c254:	in     al,dx
  41c255:	iret   
  41c256:	leave  
  41c257:	cli    
  41c258:	mov    eax,ds:0x16eb9b48
  41c25d:	push   es
  41c25e:	and    BYTE PTR [ebx-0x44b341e9],cl
  41c264:	mov    ds:0xc888f799,al
  41c269:	ret    
  41c26a:	xchg   edx,eax
  41c26b:	push   esp
  41c26c:	repnz popa 
  41c26e:	xchg   esp,eax
  41c26f:	mov    ebp,?
  41c271:	jge    0x41c227
  41c273:	js     0x41c27d
  41c275:	jnp    0x41c288
  41c277:	xchg   edi,eax
  41c278:	and    BYTE PTR [ebx-0x6e],0x8e
  41c27c:	add    ebx,edi
  41c27e:	and    BYTE PTR [ecx],dl
  41c280:	xchg   edi,eax
  41c281:	adc    ecx,eax
  41c283:	(bad)  
  41c284:	(bad)  
  41c285:	test   eax,0x813f6f1d
  41c28a:	cmp    bh,BYTE PTR [eax+0x64]
  41c28d:	jne    0x41c27c
  41c28f:	test   BYTE PTR [eax],0xa
  41c292:	jne    0x41c30c
  41c294:	dec    ebx
  41c295:	test   DWORD PTR [ebx+0x3f688d2d],ebx
  41c29b:	lods   eax,DWORD PTR ds:[esi]
  41c29c:	(bad)  
  41c29d:	mov    ebx,0xe1e7bd02
  41c2a2:	fsub   DWORD PTR [ebx+edi*1-0x41598a7d]
  41c2a9:	sub    DWORD PTR [edx],ebp
  41c2ab:	fnsave [eax+0x70cae053]
  41c2b1:	and    eax,0x38c71f97
  41c2b6:	int    0x11
  41c2b8:	mov    bl,0xf3
  41c2ba:	xor    dl,ah
  41c2bc:	sbb    BYTE PTR [ecx+0xc],al
  41c2bf:	je     0x41c279
  41c2c1:	lods   al,BYTE PTR ds:[esi]
  41c2c2:	or     al,0xc3
  41c2c4:	or     ebx,ebp
  41c2c6:	and    esp,DWORD PTR [esi]
  41c2c8:	and    DWORD PTR [ecx],esi
  41c2ca:	iret   
  41c2cb:	jnp    0x41c287
  41c2cd:	out    dx,al
  41c2ce:	and    eax,DWORD PTR [edx]
  41c2d0:	sbb    al,dl
  41c2d2:	inc    ebx
  41c2d3:	dec    esp
  41c2d4:	push   eax
  41c2d5:	loop   0x41c307
  41c2d7:	not    DWORD PTR [ebp+0x30]
  41c2da:	imul   eax,DWORD PTR [eax],0xfffffffb
  41c2dd:	pop    esp
  41c2de:	adc    ah,BYTE PTR [esi]
  41c2e0:	popf   
  41c2e1:	mov    ?,WORD PTR [edi-0x37]
  41c2e4:	pushf  
  41c2e5:	xchg   edx,eax
  41c2e6:	(bad)  
  41c2e7:	sbb    BYTE PTR [eax+0x56aa2e4e],ah
  41c2ed:	push   esi
  41c2ee:	fst    DWORD PTR [ebx+0x3]
  41c2f1:	push   eax
  41c2f2:	es jl  0x41c311
  41c2f5:	jle    0x41c2dc
  41c2f7:	mov    edi,ebp
  41c2f9:	add    ecx,ebx
  41c2fb:	xchg   ecx,eax
  41c2fc:	push   edx
  41c2fd:	imul   esp,esi,0xffffffea
  41c300:	ret    0xe910
  41c303:	sub    eax,esp
  41c305:	cmp    BYTE PTR [edx-0x38543b88],dh
  41c30b:	aas    
  41c30c:	mov    bl,0x1b
  41c30e:	mov    ds:0xcf459b80,al
  41c313:	xor    eax,0x6a1474ff
  41c318:	hlt    
  41c319:	cli    
  41c31a:	push   ss
  41c31b:	adc    cl,BYTE PTR [ebp+0x60]
  41c31e:	shl    dh,cl
  41c320:	call   0xe9e1:0x2a9f697c
  41c327:	retf   0x821d
  41c32a:	dec    eax
  41c32b:	pop    eax
  41c32c:	dec    ebp
  41c32d:	pop    esi
  41c32e:	mov    ah,0x7
  41c330:	mov    edi,0xdf80f930
  41c335:	ja     0x41c31f
  41c337:	fstp   TBYTE PTR [ebx+0x425c0525]
  41c33d:	stos   BYTE PTR es:[edi],al
  41c33e:	lea    edx,[edx-0x73]
  41c341:	cmp    BYTE PTR [esi+0x494ef5a9],0xe
  41c348:	ss fs dec eax
  41c34b:	mov    ebx,DWORD PTR [eax]
  41c34d:	or     dl,BYTE PTR [eax]
  41c34f:	pushf  
  41c350:	and    ecx,0x52410d8f
  41c356:	sbb    eax,0x86c32d7b
  41c35b:	popa   
  41c35c:	add    ch,BYTE PTR [ecx+0x42b33039]
  41c362:	or     BYTE PTR [edx-0x5e2291ca],ch
  41c368:	hlt    
  41c369:	add    esp,0x7ee84667
  41c36f:	lock mov eax,ds:0x7820d5ee
  41c375:	cld    
  41c376:	sbb    edi,DWORD PTR [eax+ebp*1-0x68]
  41c37a:	xor    al,al
  41c37c:	je     0x41c3bf
  41c37e:	push   eax
  41c37f:	pop    ebp
  41c380:	mov    BYTE PTR [edi],dl
  41c382:	pop    edi
  41c383:	sbb    DWORD PTR [ecx],edi
  41c385:	jge    0x41c3ee
  41c387:	sub    DWORD PTR [ebp+0x761bb736],ecx
  41c38d:	dec    ecx
  41c38e:	lods   al,BYTE PTR ds:[esi]
  41c38f:	ret    0x7706
  41c392:	xchg   edi,eax
  41c393:	jp     0x41c33b
  41c395:	nop
  41c396:	add    al,0x32
  41c398:	imul   eax,DWORD PTR ds:0x472ec03b,0xffffffa8
  41c39f:	pop    gs
  41c3a1:	and    DWORD PTR ds:0x21ea8fb4,esp
  41c3a7:	out    dx,al
  41c3a8:	mov    BYTE PTR [edi-0x1a],0xcf
  41c3ac:	sbb    eax,0x61ddfb64
  41c3b1:	out    0x2e,al
  41c3b3:	dec    edx
  41c3b4:	std    
  41c3b5:	cs inc ebx
  41c3b7:	cs mov ebx,0xb015683
  41c3bd:	push   esi
  41c3be:	loop   0x41c340
  41c3c0:	dec    esp
  41c3c1:	cmc    
  41c3c2:	adc    eax,eax
  41c3c4:	sub    BYTE PTR [edi+0x35c4f28d],0xc1
  41c3cb:	jl     0x41c421
  41c3cd:	and    esi,esp
  41c3cf:	lods   eax,DWORD PTR ds:[esi]
  41c3d0:	or     DWORD PTR [edx],0x3c
  41c3d3:	aad    0x7b
  41c3d5:	push   ss
  41c3d6:	and    BYTE PTR [edx],0x93
  41c3d9:	icebp  
  41c3da:	into   
  41c3db:	data16 xor al,dl
  41c3de:	inc    eax
  41c3df:	sub    bh,BYTE PTR [ebx+ebx*1-0x48]
  41c3e3:	cmp    DWORD PTR [ebx+0x64],0x275ed1a8
  41c3ea:	call   0x5300:0xebbf7227
  41c3f1:	sub    esi,edi
  41c3f3:	push   ebp
  41c3f4:	dec    eax
  41c3f5:	ins    DWORD PTR es:[edi],dx
  41c3f6:	dec    ebx
  41c3f7:	xchg   esp,eax
  41c3f8:	inc    ecx
  41c3f9:	loopne 0x41c46d
  41c3fb:	and    BYTE PTR [ecx-0x10],0x2e
  41c3ff:	inc    edx
  41c400:	inc    ebp
  41c401:	lods   al,BYTE PTR ds:[esi]
  41c402:	scas   al,BYTE PTR es:[edi]
  41c403:	jecxz  0x41c474
  41c405:	push   0xffffffa8
  41c407:	push   ss
  41c408:	push   ebx
  41c409:	into   
  41c40a:	das    
  41c40b:	(bad)  
  41c40c:	fstp   st(2)
  41c40e:	pop    ecx
  41c40f:	xchg   BYTE PTR [esp+eax*8+0x4f8e34ea],dh
  41c416:	mov    bh,0x1
  41c418:	lock xor BYTE PTR [ebp-0x510b6ed7],ah
  41c41f:	lea    ecx,[ebx+0x79]
  41c422:	mov    ebx,0xa690a37b
  41c427:	and    bh,ah
  41c429:	into   
  41c42a:	pop    edi
  41c42b:	shl    BYTE PTR [ecx+edx*8+0xa],cl
  41c42f:	fild   QWORD PTR [ecx-0x50e4063a]
  41c435:	pop    ss
  41c436:	and    DWORD PTR [ebx-0x6aaf1f9f],esi
  41c43c:	outs   dx,DWORD PTR ds:[esi]
  41c43d:	gs xchg esp,eax
  41c43f:	jl     0x41c3cd
  41c441:	xor    eax,0x905ecba0
  41c446:	sbb    dh,dh
  41c448:	pushf  
  41c449:	and    dh,BYTE PTR [eax]
  41c44b:	das    
  41c44c:	pop    ss
  41c44d:	dec    edx
  41c44e:	pop    ecx
  41c44f:	test   eax,0xe453327
  41c454:	out    0x14,eax
  41c456:	out    0xc4,eax
  41c458:	fidivr DWORD PTR [ebx-0x4d]
  41c45b:	scas   al,BYTE PTR es:[edi]
  41c45c:	add    esi,DWORD PTR [ecx-0x176fc829]
  41c462:	and    BYTE PTR [ecx],bh
  41c464:	pusha  
  41c465:	daa    
  41c466:	add    al,BYTE PTR [ebx-0x51]
  41c469:	adc    DWORD PTR [ebp-0x57],eax
  41c46c:	ret    
  41c46d:	test   BYTE PTR [eax-0x5803f059],0x17
  41c474:	mov    bh,0xc2
  41c476:	mov    WORD PTR [ecx],ds
  41c478:	pop    es
  41c479:	mov    bl,0x58
  41c47b:	fdivp  st(3),st
  41c47d:	xor    eax,DWORD PTR [ebp+ebp*4-0x7ed2ddef]
  41c484:	push   ebp
  41c485:	jnp    0x41c471
  41c487:	sbb    al,0x53
  41c489:	jge    0x41c463
  41c48b:	stc    
  41c48c:	add    ebp,esi
  41c48e:	push   ds
  41c48f:	mov    ebp,0x16b8943d
  41c494:	pop    es
  41c495:	call   0x2fb:0x469bd332
  41c49c:	jne    0x41c4f0
  41c49e:	sbb    al,cl
  41c4a0:	xchg   ebx,eax
  41c4a1:	cmc    
  41c4a2:	jmp    0xa6400768
  41c4a7:	hlt    
  41c4a8:	cmp    al,0xc3
  41c4aa:	cmp    edi,edx
  41c4ac:	stos   DWORD PTR es:[edi],eax
  41c4ad:	clc    
  41c4ae:	or     ah,al
  41c4b0:	call   0x75cf:0x553e82ed
  41c4b7:	popf   
  41c4b8:	xor    al,0x33
  41c4ba:	mov    ds:0x181a3cd2,al
  41c4bf:	jbe    0x41c4fc
  41c4c1:	shl    DWORD PTR [edi],0xe4
  41c4c4:	ror    bl,0x48
  41c4c7:	div    BYTE PTR [eax-0x7fd7049a]
  41c4cd:	les    edi,FWORD PTR [eax+0x1c753775]
  41c4d3:	inc    esp
  41c4d4:	inc    ebx
  41c4d5:	mov    cl,0x5a
  41c4d7:	jae    0x41c4bc
  41c4d9:	lock add dh,al
  41c4dc:	xchg   DWORD PTR [eax-0x19],ecx
  41c4df:	mov    DWORD PTR [ebx],edi
  41c4e1:	jne    0x41c534
  41c4e3:	dec    ecx
  41c4e4:	mov    esp,0x8c7ecacf
  41c4e9:	lea    eax,[ebp-0x58a30864]
  41c4ef:	fadd   st,st(4)
  41c4f1:	xchg   BYTE PTR [ecx],bh
  41c4f3:	cmp    eax,0x23a59657
  41c4f8:	sbb    DWORD PTR ds:0x86f0d2ef,edi
  41c4fe:	(bad)  
  41c4ff:	pushf  
  41c500:	jo     0x41c4c0
  41c502:	hlt    
  41c503:	push   esi
  41c504:	(bad)  
  41c505:	fsqrt  
  41c507:	ss dec edx
  41c509:	adc    dh,bh
  41c50b:	cmp    bl,dh
  41c50d:	mov    bh,0x57
  41c50f:	std    
  41c510:	mov    ecx,0x52d781cc
  41c515:	mov    ds:0xb39f8903,al
  41c51a:	jb     0x41c4ab
  41c51c:	push   eax
  41c51d:	mov    ebp,esi
  41c51f:	dec    edx
  41c520:	mov    ds:0x84ecfc9b,eax
  41c525:	push   0x679ef5b1
  41c52a:	call   FWORD PTR [edi]
  41c52c:	and    edx,DWORD PTR [esi-0x5b]
  41c52f:	push   ecx
  41c530:	lea    edx,[ecx+esi*8]
  41c533:	jmp    0x29ab2b48
  41c538:	sub    ah,bh
  41c53a:	das    
  41c53b:	pop    ss
  41c53c:	xor    al,0x77
  41c53e:	repz adc al,BYTE PTR [eax+eax*2]
  41c542:	pop    ds
  41c543:	ins    BYTE PTR es:[edi],dx
  41c544:	pop    ebx
  41c545:	je     0x41c537
  41c547:	pusha  
  41c548:	mov    ecx,0xf88851d3
  41c54d:	xchg   ebx,eax
  41c54e:	or     BYTE PTR [ebx+0x4e7dfaf5],bl
  41c554:	xchg   ecx,eax
  41c555:	xchg   ecx,eax
  41c556:	cdq    
  41c557:	stos   BYTE PTR es:[edi],al
  41c558:	dec    eax
  41c559:	sub    eax,0x34abdf29
  41c55e:	jecxz  0x41c5b6
  41c560:	mov    ds,ebp
  41c562:	xor    eax,0xe9cb89b3
  41c567:	dec    esi
  41c568:	mov    cl,0x30
  41c56a:	ins    DWORD PTR es:[edi],dx
  41c56b:	xchg   esp,eax
  41c56c:	lock imul esp,eax,0x71
  41c570:	mov    ds:0xecfbfaac,eax
  41c575:	jbe    0x41c590
  41c577:	cmp    eax,DWORD PTR [eax]
  41c579:	jns    0x41c57e
  41c57b:	dec    ebp
  41c57c:	mov    ch,0xca
  41c57e:	add    BYTE PTR [ecx-0xea4fe23],al
  41c584:	dec    ebp
  41c585:	aam    0x40
  41c587:	rcr    DWORD PTR [ebp-0x62],0x23
  41c58b:	sub    ebx,DWORD PTR [ecx+0x2b3d4550]
  41c591:	jb     0x41c566
  41c593:	jno    0x41c533
  41c595:	xlat   BYTE PTR ds:[ebx]
  41c596:	add    al,0xbf
  41c598:	sub    ecx,DWORD PTR [ebp-0x2226ba38]
  41c59e:	lods   eax,DWORD PTR ds:[esi]
  41c59f:	cmp    DWORD PTR [edi],ebx
  41c5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5a2:	mov    cl,0x81
  41c5a4:	push   edi
  41c5a5:	xor    eax,0x57210e08
  41c5aa:	sbb    ch,BYTE PTR [edi+0x45a36e79]
  41c5b0:	xor    al,0x63
  41c5b2:	xchg   ebp,eax
  41c5b3:	inc    esi
  41c5b4:	push   eax
  41c5b5:	bound  eax,QWORD PTR ds:[edi]
  41c5b8:	(bad)  
  41c5b9:	js     0x41c59e
  41c5bb:	pop    esi
  41c5bc:	pusha  
  41c5bd:	add    al,0x5
  41c5bf:	stos   BYTE PTR es:[edi],al
  41c5c0:	es inc cx
  41c5c3:	add    eax,DWORD PTR gs:[edx-0x18]
  41c5c7:	and    ebp,DWORD PTR [eax+edx*8]
  41c5ca:	scas   al,BYTE PTR es:[edi]
  41c5cb:	ret    0x3ec7
  41c5ce:	adc    BYTE PTR [edi+ecx*2],dh
  41c5d1:	ja     0x41c586
  41c5d3:	jle    0x41c623
  41c5d5:	xchg   DWORD PTR [ecx-0x3a15732b],ebx
  41c5db:	pop    ss
  41c5dc:	dec    esi
  41c5dd:	push   esp
  41c5de:	push   0x4
  41c5e0:	pop    edi
  41c5e1:	mov    esi,0xad3e910c
  41c5e6:	out    0x9e,eax
  41c5e8:	push   edx
  41c5e9:	sar    DWORD PTR [eax],0x53
  41c5ec:	jns    0x41c5fd
  41c5ee:	xlat   BYTE PTR ds:[ebx]
  41c5ef:	mov    al,0x9e
  41c5f1:	inc    ecx
  41c5f2:	xchg   ecx,eax
  41c5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5f4:	jmp    0x41c579
  41c5f6:	push   ss
  41c5f7:	add    al,0x80
  41c5f9:	stos   DWORD PTR es:[edi],eax
  41c5fa:	es and eax,0x6cb72d9c
  41c600:	icebp  
  41c601:	push   ebp
  41c602:	int3   
  41c603:	sub    eax,0xa7d37905
  41c608:	idiv   DWORD PTR [eax]
  41c60a:	jle    0x41c67e
  41c60c:	cli    
  41c60d:	mov    dl,0xf3
  41c60f:	push   esp
  41c610:	dec    edx
  41c611:	rol    DWORD PTR [esi],1
  41c613:	and    al,0x5
  41c615:	ret    0xd0fa
  41c618:	xor    edi,DWORD PTR [ebx]
  41c61a:	fild   WORD PTR [esi+0x57]
  41c61d:	call   0xa4f925cd
  41c622:	(bad)  
  41c623:	adc    ah,ah
  41c625:	dec    ebx
  41c626:	mov    al,ds:0xf784e9fd
  41c62b:	fs out 0xd9,al
  41c62e:	pusha  
  41c62f:	es pop eax
  41c631:	sahf   
  41c632:	arpl   sp,dx
  41c634:	xchg   ebx,eax
  41c635:	and    esi,DWORD PTR [edx+ebx*4-0x2d]
  41c639:	call   0x86a0:0x34bd0fe2
  41c640:	scas   eax,DWORD PTR es:[edi]
  41c641:	sbb    DWORD PTR [ebx],edi
  41c643:	add    esp,DWORD PTR [ebp-0x73]
  41c646:	out    dx,eax
  41c647:	jle    0x41c6b3
  41c649:	sbb    cl,BYTE PTR [esp+eiz*2+0x7aa66564]
  41c650:	mov    esp,esp
  41c652:	mov    cl,0x12
  41c654:	mov    eax,ds:0x142be122
  41c659:	lods   eax,DWORD PTR ds:[esi]
  41c65a:	push   ebx
  41c65b:	mov    BYTE PTR ds:0x2028a7af,al
  41c661:	mov    ds:0x192248b9,al
  41c666:	mov    bl,bh
  41c668:	fdivrp st(5),st
  41c66a:	inc    edx
  41c66b:	lods   al,BYTE PTR ds:[esi]
  41c66c:	(bad)  
  41c66d:	mov    dl,0xbd
  41c66f:	add    ebp,esi
  41c671:	ins    DWORD PTR es:[edi],dx
  41c672:	add    eax,0xb023d99f
  41c677:	mov    eax,ds:0xb198dc84
  41c67c:	stc    
  41c67d:	adc    eax,0xe1f71732
  41c682:	pop    esp
  41c683:	ret    
  41c684:	jmp    0xbef39950
  41c689:	dec    esi
  41c68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c68b:	fild   QWORD PTR [ebx+0xe]
  41c68e:	or     bh,BYTE PTR [ebx-0x27]
  41c691:	jge    0x41c61d
  41c693:	mov    eax,ds:0x516701b9
  41c698:	xchg   esp,eax
  41c699:	adc    eax,0xf1d1a9e9
  41c69e:	retf   
  41c69f:	push   0x8177f661
  41c6a4:	jo     0x41c713
  41c6a6:	jl     0x41c6e8
  41c6a8:	mov    eax,0x41736f83
  41c6ad:	stos   DWORD PTR es:[edi],eax
  41c6ae:	xchg   edi,eax
  41c6af:	xor    al,0x16
  41c6b1:	lahf   
  41c6b2:	xor    DWORD PTR [ebx],ebx
  41c6b4:	icebp  
  41c6b5:	xor    DWORD PTR [ebx+0x20944f35],edi
  41c6bb:	test   eax,0x338e5f6b
  41c6c0:	into   
  41c6c1:	ja     0x41c6ad
  41c6c3:	test   bh,dh
  41c6c5:	push   edx
  41c6c6:	stc    
  41c6c7:	xor    bh,al
  41c6c9:	ja     0x41c6a8
  41c6cb:	bound  ecx,QWORD PTR [esi]
  41c6cd:	test   BYTE PTR [edi-0x69],0xac
  41c6d1:	or     ecx,edi
  41c6d3:	ds (bad) 
  41c6d5:	sbb    ah,BYTE PTR [edx-0x5440580a]
  41c6db:	mov    ebx,DWORD PTR [esi+ecx*2]
  41c6de:	lods   al,BYTE PTR ds:[esi]
  41c6df:	adc    eax,0x197ca233
  41c6e4:	outs   dx,BYTE PTR ds:[esi]
  41c6e5:	int    0x96
  41c6e7:	int    0x7d
  41c6e9:	inc    ebp
  41c6ea:	push   ds
  41c6eb:	and    al,BYTE PTR [ecx]
  41c6ed:	fidivr WORD PTR [edi+eax*8+0x27]
  41c6f1:	mov    esi,0x3e643ff6
  41c6f6:	out    dx,al
  41c6f7:	inc    esp
  41c6f8:	mov    al,ds:0xffc4fda8
  41c6fd:	loop   0x41c770
  41c6ff:	ins    DWORD PTR es:[edi],dx
  41c700:	pop    ecx
  41c701:	push   edi
  41c702:	mov    ds:0x9ca1243a,eax
  41c707:	das    
  41c708:	mov    bh,0xbb
  41c70a:	repnz and al,0x42
  41c70d:	sub    DWORD PTR [esi+0x2a],edi
  41c710:	in     al,dx
  41c711:	dec    edi
  41c712:	add    eax,0x6c74e87f
  41c717:	dec    edi
  41c718:	test   al,0xdd
  41c71a:	push   ecx
  41c71b:	dec    esp
  41c71c:	lock out 0xae,al
  41c71f:	cld    
  41c720:	sbb    eax,0x860be915
  41c725:	out    dx,eax
  41c726:	pop    ss
  41c727:	repnz pushf 
  41c729:	repz sar DWORD PTR [ebx],cl
  41c72c:	adc    eax,0x92f34277
  41c731:	rcr    BYTE PTR [edx+esi*2+0x5a],cl
  41c735:	int    0x9
  41c737:	or     al,0xeb
  41c739:	xor    ah,BYTE PTR [ebp+0x34]
  41c73c:	das    
  41c73d:	jb     0x41c6e9
  41c73f:	test   BYTE PTR ds:0x480894d4,bl
  41c745:	sub    DWORD PTR [ecx+edi*1+0x6d],edi
  41c749:	shl    DWORD PTR [esi-0x6e5dac50],cl
  41c74f:	jge    0x41c758
  41c751:	ror    BYTE PTR [edi+0x23cae2ef],1
  41c757:	js     0x41c75e
  41c759:	sahf   
  41c75a:	lods   al,BYTE PTR ds:[esi]
  41c75b:	ins    DWORD PTR es:[edi],dx
  41c75c:	mov    dh,0xd0
  41c75f:	sbb    dh,BYTE PTR [ebx+0x15f6eba7]
  41c765:	sub    al,0x78
  41c767:	and    BYTE PTR [ebx],ch
  41c769:	out    0xe,al
  41c76b:	add    al,0x47
  41c76d:	popf   
  41c76e:	scas   eax,DWORD PTR es:[edi]
  41c76f:	fadd   DWORD PTR [edx-0x651765be]
  41c775:	retf   0xb49a
  41c778:	sahf   
  41c779:	sub    eax,0x9e73c078
  41c77e:	es mov bl,0xfc
  41c781:	mov    DWORD PTR [edx-0x2f],0xfd35906c
  41c788:	pop    ds
  41c789:	into   
  41c78a:	jae    0x41c788
  41c78c:	cmc    
  41c78d:	lods   eax,DWORD PTR ds:[esi]
  41c78e:	dec    esi
  41c78f:	mov    ds:0x1389a5b8,eax
  41c794:	pop    ebx
  41c795:	inc    DWORD PTR [edx+0x57708ab4]
  41c79b:	cmp    eax,0x167ca6db
  41c7a0:	bound  ebp,QWORD PTR [ebx+0x41e81bcd]
  41c7a6:	stos   BYTE PTR es:[edi],al
  41c7a7:	jmp    0x53aa8f52
  41c7ac:	mov    ebp,0x5d8dc4e0
  41c7b1:	in     eax,dx
  41c7b2:	mov    edi,0x50009ee7
  41c7b8:	mov    edi,0x763228ba
  41c7bd:	fld    TBYTE PTR fs:[esi-0x6e957a41]
  41c7c4:	jbe    0x41c7ef
  41c7c6:	stc    
  41c7c7:	sar    BYTE PTR ds:0x8c495d46,1
  41c7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ce:	scas   eax,DWORD PTR es:[edi]
  41c7cf:	loopne 0x41c772
  41c7d1:	ins    DWORD PTR es:[edi],dx
  41c7d2:	or     BYTE PTR [edi-0x62],bh
  41c7d5:	dec    edi
  41c7d6:	shl    DWORD PTR [eax+0x19ff8691],0x6a
  41c7dd:	hlt    
  41c7de:	not    dl
  41c7e0:	add    al,0x2b
  41c7e2:	sub    ah,dl
  41c7e4:	fdivr  DWORD PTR [edx+0x51043a6f]
  41c7ea:	bound  esp,QWORD PTR [edx*8-0x13a3e9d6]
  41c7f1:	cmp    eax,0x7b7d00bf
  41c7f6:	dec    esp
  41c7f7:	xchg   ebp,eax
  41c7f8:	fisttp WORD PTR [ecx-0x6cba114b]
  41c7fe:	pop    ds
  41c7ff:	xchg   edx,eax
  41c800:	inc    BYTE PTR [ebp-0xd]
  41c803:	(bad)  
  41c804:	retf   
  41c805:	es dec ebp
  41c807:	in     eax,dx
  41c808:	xor    eax,0xbf037b46
  41c80d:	je     0x41c88a
  41c80f:	fimul  DWORD PTR ss:[eax-0x2f]
  41c813:	sbb    bl,BYTE PTR [ecx]
  41c815:	xchg   ecx,eax
  41c816:	mov    edi,0xdc7e7294
  41c81b:	mov    cl,0xff
  41c81d:	dec    edi
  41c81e:	mov    esi,0xe071540f
  41c823:	mov    al,0x4c
  41c825:	sbb    edi,ecx
  41c827:	les    edx,FWORD PTR [edx]
  41c829:	retf   
  41c82a:	js     0x41c802
  41c82c:	mov    esp,0x47b36d6c
  41c831:	sbb    eax,0xfb83ae67
  41c836:	mov    ds:0xd3b466d,al
  41c83b:	bound  ebp,QWORD PTR [esi]
  41c83d:	fld    QWORD PTR [esp+eax*1+0xd]
  41c841:	aaa    
  41c842:	mov    BYTE PTR [edi-0x42],dl
  41c845:	and    BYTE PTR [ebx],bh
  41c847:	jns    0x41c803
  41c849:	int3   
  41c84a:	outs   dx,DWORD PTR ds:[esi]
  41c84b:	mov    al,0x8c
  41c84d:	jo     0x41c7de
  41c84f:	ds sbb dh,ch
  41c852:	fsubp  st(6),st
  41c854:	popa   
  41c855:	test   al,0x2
  41c857:	jo     0x41c830
  41c859:	aam    0xa9
  41c85b:	fisub  DWORD PTR [ecx-0x48]
  41c85e:	scas   eax,DWORD PTR es:[edi]
  41c85f:	push   edi
  41c860:	shr    esi,cl
  41c862:	cmp    esi,DWORD PTR [eax+esi*2-0x2ee1eec2]
  41c869:	mov    esp,0x53275b83
  41c86e:	add    al,0x7d
  41c870:	bsf    edi,DWORD PTR [esi-0x8]
  41c874:	jnp    0x41c8c7
  41c876:	dec    eax
  41c877:	inc    edx
  41c878:	xchg   ecx,eax
  41c879:	sub    DWORD PTR ds:0x4f04cfa8,edi
  41c87f:	sub    eax,0x689b6052
  41c884:	popa   
  41c885:	xor    BYTE PTR [ebx],dh
  41c887:	(bad)  
  41c888:	xor    al,BYTE PTR [ebp-0x58112a19]
  41c88e:	in     eax,0x77
  41c890:	mov    ch,0xa2
  41c892:	xor    al,0xb7
  41c894:	add    dh,BYTE PTR [edi-0x41827d83]
  41c89a:	ret    
  41c89b:	sub    DWORD PTR [ecx+0x5a],ebx
  41c89e:	je     0x41c918
  41c8a0:	mov    dh,0xe7
  41c8a2:	and    al,0x34
  41c8a4:	mov    WORD PTR [ebx+0x2ce08d07],cs
  41c8aa:	xor    ebp,DWORD PTR [edi+0x22]
  41c8ad:	and    cl,cl
  41c8af:	loope  0x41c860
  41c8b1:	lds    ebp,FWORD PTR [esi+0x612a1bfd]
  41c8b7:	xor    al,0xb2
  41c8b9:	in     eax,0x66
  41c8bb:	loopne 0x41c8d4
  41c8bd:	fistp  WORD PTR [esi+0x23]
  41c8c0:	mov    cl,BYTE PTR [edx+edx*8]
  41c8c3:	add    BYTE PTR [ebx+0x4aeff633],bl
  41c8c9:	aaa    
  41c8ca:	inc    eax
  41c8cb:	jl     0x41c8fd
  41c8cd:	test   al,0x8d
  41c8cf:	or     cl,BYTE PTR [esi+ecx*8]
  41c8d2:	inc    edx
  41c8d3:	pop    es
  41c8d4:	popf   
  41c8d5:	popa   
  41c8d6:	pop    ecx
  41c8d7:	scas   al,BYTE PTR es:[edi]
  41c8d8:	int3   
  41c8d9:	iret   
  41c8da:	pop    esi
  41c8db:	xor    ch,BYTE PTR [edi+0x6d]
  41c8de:	enter  0x1ad4,0x22
  41c8e2:	pop    ebp
  41c8e3:	push   edx
  41c8e4:	dec    esp
  41c8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e6:	push   ss
  41c8e7:	sub    ecx,DWORD PTR [ebx-0xb1ec31a]
  41c8ed:	sub    ebx,edi
  41c8ef:	mov    eax,ds:0xf02fab00
  41c8f4:	mov    ebx,0xeeaa9abf
  41c8f9:	push   esp
  41c8fa:	mov    BYTE PTR [eax-0x40],bl
  41c8fd:	dec    ecx
  41c8fe:	push   edi
  41c8ff:	xchg   DWORD PTR [edi-0xd],esp
  41c902:	fild   DWORD PTR [ebp+0x52]
  41c905:	push   ss
  41c906:	push   esi
  41c907:	add    esi,DWORD PTR [edx-0x27]
  41c90a:	pop    ecx
  41c90b:	das    
  41c90c:	mov    BYTE PTR [esi],ah
  41c90e:	jmp    0x41c966
  41c910:	cmp    edi,DWORD PTR [eax]
  41c912:	mov    cl,0xea
  41c914:	lea    ecx,[ebx-0x4]
  41c917:	arpl   WORD PTR [ecx+0x7d],di
  41c91a:	add    DWORD PTR [ebx+0x32],0x3ba57e0e
  41c921:	mov    eax,ds:0x764770a2
  41c926:	adc    edx,DWORD PTR [ebx+edx*1]
  41c929:	xlat   BYTE PTR ds:[ebx]
  41c92a:	cmp    DWORD PTR [edi],ebx
  41c92c:	xor    al,0x89
  41c92e:	in     al,0xa
  41c930:	mov    bh,0x80
  41c932:	cmp    al,BYTE PTR [edi-0x11c2fb2d]
  41c938:	jg     0x41c996
  41c93a:	and    BYTE PTR [ecx-0x1c],dh
  41c93d:	xchg   ecx,eax
  41c93e:	mov    al,0xe6
  41c940:	mov    ds:0xd44a1a7d,eax
  41c945:	loop   0x41c8fa
  41c947:	pop    ebp
  41c948:	mul    DWORD PTR [ebx+0x4107949b]
  41c94e:	mov    eax,0xa2ef8ecd
  41c953:	js     0x41c9ce
  41c955:	jo     0x41c9c7
  41c957:	cmp    BYTE PTR [ecx-0x38],ah
  41c95a:	or     esp,edi
  41c95c:	add    eax,0x5c05168f
  41c961:	fldz   
  41c963:	setge  BYTE PTR [esi]
  41c966:	fs in  eax,0x73
  41c969:	icebp  
  41c96a:	inc    ebp
  41c96b:	ins    DWORD PTR es:[edi],dx
  41c96c:	inc    esi
  41c96d:	int3   
  41c96e:	cmp    ecx,DWORD PTR [eax-0x1b]
  41c971:	and    edx,DWORD PTR [esi]
  41c973:	repnz sbb ah,dh
  41c976:	cmp    eax,DWORD PTR [esi+0x22]
  41c979:	std    
  41c97a:	rcl    DWORD PTR [ebx],cl
  41c97c:	ret    
  41c97d:	mov    ds:0x7cc60409,eax
  41c982:	pop    ebx
  41c983:	pushf  
  41c984:	or     eax,0x57b0b771
  41c989:	xor    dl,ch
  41c98b:	fiadd  WORD PTR [eax+0x3e233c37]
  41c991:	out    dx,eax
  41c992:	mov    WORD PTR [ebp+edi*4-0x64],es
  41c996:	fs aaa 
  41c998:	xchg   dh,dh
  41c99a:	pop    ebp
  41c99b:	test   al,0x4a
  41c99d:	lahf   
  41c99e:	add    BYTE PTR [eax+0xc],dl
  41c9a1:	adc    DWORD PTR [edi],0xffffffde
  41c9a4:	push   ebp
  41c9a5:	call   0x4634aa79
  41c9aa:	sub    edx,DWORD PTR [ecx-0x6d24429b]
  41c9b0:	daa    
  41c9b1:	mov    al,BYTE PTR [ecx+0x7ce88e88]
  41c9b7:	jecxz  0x41c94e
  41c9b9:	sub    ebx,ebp
  41c9bb:	inc    esp
  41c9bc:	cmc    
  41c9bd:	shl    DWORD PTR [edx+0x45],1
  41c9c0:	js     0x41c9b2
  41c9c2:	pop    esi
  41c9c3:	std    
  41c9c4:	push   ds
  41c9c5:	xchg   DWORD PTR [edx],esi
  41c9c7:	inc    esp
  41c9c8:	xchg   ebx,eax
  41c9c9:	xor    edx,ecx
  41c9cb:	sbb    al,0x43
  41c9cd:	mov    cl,0x96
  41c9cf:	(bad)  
  41c9d0:	mov    esp,0x458f0312
  41c9d5:	in     al,0xb1
  41c9d7:	xchg   ebx,eax
  41c9d8:	xor    ch,BYTE PTR [ecx]
  41c9da:	adc    ch,dl
  41c9dc:	arpl   WORD PTR [esp+ebp*8+0x5a],bx
  41c9e0:	loop   0x41c9a1
  41c9e2:	stos   BYTE PTR es:[edi],al
  41c9e3:	jl     0x41ca28
  41c9e5:	je     0x41c967
  41c9e7:	jp     0x41c9e0
  41c9e9:	inc    esp
  41c9ea:	push   ebx
  41c9eb:	sbb    al,0xc3
  41c9ed:	sbb    al,0xfa
  41c9ef:	xlat   BYTE PTR ds:[ebx]
  41c9f0:	(bad)  
  41c9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9f3:	xor    dh,ch
  41c9f5:	sti    
  41c9f6:	retf   
  41c9f7:	iret   
  41c9f8:	bound  esp,QWORD PTR cs:[esi]
  41c9fb:	js     0x41c98c
  41c9fd:	(bad)  
  41c9fe:	out    dx,al
  41c9ff:	xor    eax,0xb3f1f72a
  41ca05:	xchg   BYTE PTR [ebp-0x5b],bl
  41ca08:	mov    bl,ah
  41ca0a:	lea    esi,[eax+0x5b625107]
  41ca10:	inc    esi
  41ca11:	jg     0x41ca41
  41ca13:	mov    ah,0x99
  41ca15:	aas    
  41ca16:	jne    0x41ca2c
  41ca18:	mov    esi,0x84084a9b
  41ca1d:	mov    al,ds:0x2fe1de2a
  41ca22:	inc    eax
  41ca23:	ret    0xded0
  41ca26:	and    BYTE PTR [edx-0x7f],0xec
  41ca2a:	popf   
  41ca2b:	sub    al,0x4b
  41ca2d:	arpl   cx,bx
  41ca2f:	add    BYTE PTR [edi+0x24b52b58],0x11
  41ca36:	xor    ebx,DWORD PTR [ebx+0x2b]
  41ca39:	scas   al,BYTE PTR es:[edi]
  41ca3a:	add    ebp,DWORD PTR [edx-0x37]
  41ca3d:	add    esi,esp
  41ca3f:	add    eax,0xe3f31099
  41ca44:	test   al,0xe3
  41ca46:	imul   edi,edi,0x9279e3f3
  41ca4c:	inc    edi
  41ca4d:	pop    esp
  41ca4e:	data16 ja 0x41c9f4
  41ca51:	lock xacquire and BYTE PTR ds:[ecx+edi*1+0x7e546d3a],0x7d
  41ca5c:	mov    ds:0xbef8c462,al
  41ca61:	inc    eax
  41ca62:	fucomi st,st(6)
  41ca64:	jns    0x41ca54
  41ca66:	lock sub eax,0x9ff1678e
  41ca6c:	pop    ds
  41ca6d:	imul   ecx,edx,0xffffffc5
  41ca70:	cmp    ebx,eax
  41ca72:	lds    ebx,FWORD PTR [edi+0x7e087875]
  41ca78:	inc    eax
  41ca79:	sub    DWORD PTR [edi+0xadc6c88],eax
  41ca7f:	cmp    BYTE PTR [ebp+0x6],bl
  41ca82:	sub    ch,cl
  41ca84:	mov    esi,0x32198605
  41ca89:	push   ds
  41ca8a:	mov    ebp,0xe084663
  41ca8f:	mov    WORD PTR [ebx+ecx*8-0x3a0a9482],gs
  41ca96:	dec    eax
  41ca97:	or     DWORD PTR [edi+0x3],ecx
  41ca9a:	into   
  41ca9b:	mov    esi,0x77b3b01f
  41caa0:	push   ds
  41caa1:	sbb    eax,0xcd34a2dd
  41caa6:	mov    ch,0xc2
  41caa8:	or     cl,cl
  41caaa:	sub    BYTE PTR [edx+0x40],bh
  41caad:	je     0x41ca8c
  41caaf:	retf   
  41cab0:	test   eax,0x9958f9c4
  41cab5:	aaa    
  41cab6:	jno    0x41ca49
  41cab8:	pusha  
  41cab9:	or     DWORD PTR [esi],edx
  41cabb:	dec    esp
  41cabc:	xor    bh,BYTE PTR [ecx-0x7]
  41cabf:	jae    0x41caf4
  41cac1:	dec    BYTE PTR [eax-0x33]
  41cac4:	add    esp,ecx
  41cac6:	push   ss
  41cac7:	xor    al,0x8e
  41cac9:	adc    al,0xe0
  41cacb:	pop    ebp
  41cacc:	xor    al,al
  41cace:	cmp    ebp,DWORD PTR [ebp-0x1b7ac04d]
  41cad4:	xor    ebp,DWORD PTR [ebp+0x535caa66]
  41cada:	add    BYTE PTR [edi],0x58
  41cadd:	cld    
  41cade:	pop    esp
  41cadf:	jmp    0x4bd400f6
  41cae4:	push   ss
  41cae5:	jg     0x41caa1
  41cae7:	or     eax,0xfae46442
  41caec:	cmp    eax,0xfe17c11a
  41caf1:	inc    ecx
  41caf2:	cdq    
  41caf3:	mov    ?,WORD PTR [edi-0x6e2d4d97]
  41caf9:	inc    ebp
  41cafa:	out    dx,eax
  41cafb:	test   al,0xa1
  41cafd:	xor    DWORD PTR [ecx-0x1fb7537b],edx
  41cb03:	cmp    ecx,DWORD PTR [esi+0x29]
  41cb06:	push   esi
  41cb07:	lahf   
  41cb08:	jmp    0x91d9:0xec92b4c
  41cb0f:	js     0x41caec
  41cb11:	mov    ebx,0xb8889412
  41cb16:	sahf   
  41cb17:	fsubr  QWORD PTR [edx+ebp*8-0x29]
  41cb1b:	(bad)  
  41cb1c:	(bad)  
  41cb1d:	or     al,0xa1
  41cb1f:	ins    BYTE PTR es:[edi],dx
  41cb20:	add    edi,edi
  41cb22:	mov    ah,BYTE PTR [eax+0x3e8ec75c]
  41cb28:	mov    bl,0xde
  41cb2a:	or     al,0x7e
  41cb2c:	mov    esi,0x72c83197
  41cb31:	mov    cl,BYTE PTR [ebx+0x1245e4d0]
  41cb37:	mov    al,ah
  41cb39:	jne    0x41cba5
  41cb3b:	jle    0x41cadf
  41cb3d:	dec    esp
  41cb3e:	xlat   BYTE PTR ds:[ebx]
  41cb3f:	pop    es
  41cb40:	xchg   edi,eax
  41cb41:	xchg   DWORD PTR [edx-0x24607d54],esp
  41cb47:	(bad)  
  41cb48:	test   DWORD PTR [ecx-0x339bd16],0x10bc5ae
  41cb52:	jns    0x41cb76
  41cb54:	inc    edi
  41cb55:	sub    cl,ch
  41cb57:	xor    al,0x21
  41cb59:	mov    eax,DWORD PTR [edx]
  41cb5b:	ja     0x41cbd2
  41cb5d:	fdivrp st(0),st
  41cb5f:	pop    ecx
  41cb60:	shr    BYTE PTR [eax+0x10a7d90f],0x79
  41cb67:	(bad)  
  41cb68:	adc    dl,BYTE PTR [eax-0x77]
  41cb6b:	fs add edi,ebx
  41cb6e:	jl     0x41cb87
  41cb70:	call   0x6b4f:0x34158658
  41cb77:	lea    edi,[ecx-0x64a3fa94]
  41cb7d:	mov    al,0x71
  41cb7f:	mov    eax,0x2805ed01
  41cb84:	and    DWORD PTR [eax],esi
  41cb86:	loope  0x41cb46
  41cb88:	mov    ds:0xb5895e58,eax
  41cb8d:	dec    edx
  41cb8e:	jne    0x41cb62
  41cb90:	jge    0x41cba6
  41cb92:	addr16 pop edi
  41cb94:	jmp    0xa2dd9c8a
  41cb99:	cmp    cl,BYTE PTR [edi]
  41cb9b:	xchg   ebx,esi
  41cb9d:	sahf   
  41cb9e:	mov    ch,0xb5
  41cba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba1:	mov    al,ds:0x9e380c2e
  41cba6:	xor    al,0x9b
  41cba8:	retf   0x8b44
  41cbab:	pop    eax
  41cbac:	sbb    ecx,DWORD PTR [edx]
  41cbae:	or     dh,al
  41cbb0:	test   BYTE PTR [eax+0x3eac3dd4],cl
  41cbb6:	loopne 0x41cb69
  41cbb8:	test   BYTE PTR [ebp+0xa],cl
  41cbbb:	pusha  
  41cbbc:	shl    eax,0x1e
  41cbbf:	aas    
  41cbc0:	repnz call 0x823e:0x49d0055d
  41cbc8:	jb     0x41cbfc
  41cbca:	push   esp
  41cbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbcc:	cs push esp
  41cbce:	into   
  41cbcf:	nop
  41cbd0:	add    ebp,DWORD PTR [edi]
  41cbd2:	xchg   esi,eax
  41cbd3:	mov    edx,0xe2d68f66
  41cbd8:	jae    0x41cb91
  41cbda:	jbe    0x41cc42
  41cbdc:	sti    
  41cbdd:	cmp    DWORD PTR fs:[ecx],ebp
  41cbe0:	pop    ecx
  41cbe1:	aaa    
  41cbe2:	jne    0x41cc52
  41cbe4:	and    BYTE PTR [ebx-0x18],cl
  41cbe7:	adc    BYTE PTR [ecx-0x6a590031],bl
  41cbed:	jns    0x41cbb2
  41cbef:	pop    edi
  41cbf0:	mov    bh,0x82
  41cbf2:	pop    edx
  41cbf3:	lea    edx,[eax]
  41cbf5:	add    BYTE PTR ds:0x9e94d2d5,0x56
  41cbfc:	inc    eax
  41cbfd:	loop   0x41cbaf
  41cbff:	idiv   BYTE PTR [esi-0x23]
  41cc02:	xor    BYTE PTR [ebp+0xeb11730],ah
  41cc08:	jne    0x41cc48
  41cc0a:	xlat   BYTE PTR ds:[ebx]
  41cc0b:	jmp    0x41cc89
  41cc0d:	scas   eax,DWORD PTR es:[edi]
  41cc0e:	mov    fs,WORD PTR [ecx]
  41cc10:	jge    0x41cbaa
  41cc12:	and    eax,0x8de5bfcd
  41cc17:	jg     0x41cbca
  41cc19:	imul   eax,DWORD PTR [ebp+0x9fe2a35],0x20a4fe9f
  41cc23:	pop    eax
  41cc24:	push   edx
  41cc25:	inc    edx
  41cc26:	outs   dx,DWORD PTR ds:[esi]
  41cc27:	mov    dh,0x6f
  41cc29:	fwait
  41cc2a:	xchg   esp,eax
  41cc2b:	bound  edi,QWORD PTR [ebx-0x6e]
  41cc2e:	popa   
  41cc2f:	ins    DWORD PTR es:[edi],dx
  41cc30:	imul   ebx,DWORD PTR [edi+0x5],0xb30ace69
  41cc37:	mov    cl,0x4d
  41cc39:	enter  0xf214,0xe9
  41cc3d:	addr16 pop es
  41cc3f:	rcl    BYTE PTR [ecx-0x25],cl
  41cc42:	cmp    eax,0x1f1d32ee
  41cc47:	dec    esi
  41cc48:	cwde   
  41cc49:	jecxz  0x41ccad
  41cc4b:	ret    0xf20
  41cc4e:	bndldx bnd0,[ecx]
  41cc51:	jmp    DWORD PTR [ecx-0x685fd97f]
  41cc57:	inc    ecx
  41cc58:	jnp    0x41cc18
  41cc5a:	and    DWORD PTR [ecx+0x49f7ccee],ecx
  41cc60:	repz jp 0x41cc36
  41cc63:	lods   al,BYTE PTR ds:[esi]
  41cc64:	push   ebx
  41cc65:	fidiv  DWORD PTR [ebp+0x7]
  41cc68:	mov    ds:0x792821a9,eax
  41cc6d:	or     DWORD PTR [eax+0x3e6f349e],ebp
  41cc73:	loopne 0x41cc7d
  41cc75:	xor    al,0x47
  41cc77:	nop
  41cc78:	inc    ebx
  41cc79:	fdivr  st(5),st
  41cc7b:	add    BYTE PTR [esi+0x3d],al
  41cc7e:	bound  edi,QWORD PTR [ecx-0x3d]
  41cc81:	pop    ds
  41cc82:	int    0xce
  41cc84:	fcomp  DWORD PTR [ebx+0x1d2d9b74]
  41cc8a:	push   ds
  41cc8b:	aaa    
  41cc8c:	leave  
  41cc8d:	and    al,0x7e
  41cc8f:	ds cs hlt 
  41cc92:	jmp    0xc948947a
  41cc97:	call   0x34f0e910
  41cc9c:	mov    eax,ebx
  41cc9e:	(bad)  
  41cc9f:	dec    esi
  41cca0:	fcomi  st,st(6)
  41cca2:	jecxz  0x41cc64
  41cca4:	dec    esi
  41cca5:	in     al,0x0
  41cca7:	add    DWORD PTR [edi],ecx
  41cca9:	fistp  QWORD PTR [eax-0x7f]
  41ccac:	sub    al,0xae
  41ccaf:	push   es
  41ccb0:	sub    eax,0xe58a64c3
  41ccb5:	xchg   DWORD PTR [edi-0x350fdb34],ebx
  41ccbb:	mov    WORD PTR [eax+0x26772d9c],gs
  41ccc1:	xor    dl,BYTE PTR [ebx]
  41ccc3:	mov    al,ds:0x35d66fab
  41ccc8:	sbb    ebp,0xbb379597
  41ccce:	hlt    
  41cccf:	out    dx,al
  41ccd0:	jmp    0x41ccdc
  41ccd2:	pop    eax
  41ccd3:	cmc    
  41ccd4:	add    al,0x75
  41ccd6:	sahf   
  41ccd7:	mov    esp,0x83d0c585
  41ccdc:	and    eax,0xb47a1f8
  41cce1:	sub    ebx,0x7a
  41cce4:	xchg   esp,eax
  41cce5:	mov    ds:0x89402d3f,al
  41ccea:	and    ebp,DWORD PTR [edi+ebx*8]
  41cced:	out    0x5,eax
  41ccef:	mov    ebp,0xa140cfc3
  41ccf4:	mov    dl,cl
  41ccf6:	sub    esp,ecx
  41ccf8:	mov    ds:0x8749fb5b,eax
  41ccfd:	add    al,0xac
  41ccff:	and    DWORD PTR [esi-0x18],esi
  41cd02:	sub    cl,BYTE PTR [ecx+esi*2+0x4ac52cf8]
  41cd09:	cmp    bh,bl
  41cd0b:	aas    
  41cd0c:	xchg   dl,dl
  41cd0e:	and    eax,0xdeb40100
  41cd13:	adc    BYTE PTR [ebx-0x43],0x1f
  41cd17:	mov    dl,0x81
  41cd19:	add    ch,cl
  41cd1b:	sar    BYTE PTR [ebx],cl
  41cd1d:	aad    0x28
  41cd1f:	pop    eax
  41cd20:	imul   BYTE PTR [edx-0x39]
  41cd23:	fdiv   st(1),st
  41cd25:	inc    eax
  41cd26:	arpl   WORD PTR [eax-0x25c0deef],si
  41cd2c:	pop    edx
  41cd2d:	mov    es,edi
  41cd2f:	mov    WORD PTR [eax],?
  41cd31:	ds int 0xf2
  41cd34:	outs   dx,BYTE PTR ds:[esi]
  41cd35:	dec    edi
  41cd36:	jns    0x41cd20
  41cd38:	mov    ds:0x4a04c23c,al
  41cd3d:	mov    eax,DWORD PTR [esi-0x7a]
  41cd40:	rol    DWORD PTR [esi-0x71],cl
  41cd43:	(bad)  
  41cd45:	jb     0x41cccd
  41cd47:	test   DWORD PTR [eax+0x6a],ebp
  41cd4a:	(bad)  
  41cd4b:	test   eax,0xb2589c13
  41cd50:	xor    esi,DWORD PTR [eax-0x16]
  41cd53:	popa   
  41cd54:	sbb    ebx,DWORD PTR [esi]
  41cd56:	loopne 0x41cd5b
  41cd58:	adc    al,BYTE PTR [ebp+0x160f8b4d]
  41cd5e:	pop    edx
  41cd5f:	mov    ecx,0x5bc1324c
  41cd64:	dec    esp
  41cd65:	dec    edi
  41cd66:	fsubr  DWORD PTR [ecx-0x19]
  41cd69:	and    BYTE PTR [eax+0x32],dh
  41cd6c:	stc    
  41cd6d:	push   ecx
  41cd6e:	outs   dx,BYTE PTR ds:[esi]
  41cd6f:	jns    0x41cd08
  41cd71:	and    eax,0x78110497
  41cd76:	nop
  41cd77:	and    bh,bh
  41cd79:	aad    0xc6
  41cd7b:	xchg   edi,eax
  41cd7c:	call   0xc4f9edcb
  41cd81:	sbb    eax,0x4feb3a45
  41cd86:	mov    edi,0x60e56038
  41cd8b:	adc    edi,DWORD PTR [eax]
  41cd8d:	imul   ebx,esi,0x7b2d02ef
  41cd93:	(bad)
  41cd97:	add    eax,0xbd6f0ec0
  41cd9c:	test   al,0x86
  41cd9e:	frstor [edi]
  41cda0:	test   BYTE PTR [ebp+0x4],al
  41cda3:	mov    bl,0xfa
  41cda5:	in     al,dx
  41cda6:	cwde   
  41cda7:	fld    TBYTE PTR [eax+0x1e]
  41cdaa:	stos   BYTE PTR es:[edi],al
  41cdab:	jmp    0x3547:0xf1165886
  41cdb2:	aaa    
  41cdb3:	imul   eax,DWORD PTR [edi+ebx*2],0x9a830a5c
  41cdba:	sub    BYTE PTR [edx+0x31a97d6e],al
  41cdc0:	scas   al,BYTE PTR es:[edi]
  41cdc1:	dec    ebp
  41cdc2:	repnz popa 
  41cdc4:	in     eax,0xf1
  41cdc6:	push   ds
  41cdc7:	das    
  41cdc8:	ss pop es
  41cdca:	mov    al,0x61
  41cdcc:	pop    esp
  41cdcd:	sub    BYTE PTR [ecx],0x31
  41cdd0:	xor    esp,DWORD PTR [ebx-0x34a453a1]
  41cdd6:	sbb    DWORD PTR [ebp+0x524a0e3d],eax
  41cddc:	jl     0x41cda0
  41cdde:	les    ecx,FWORD PTR [edx]
  41cde0:	sbb    al,0x81
  41cde2:	add    edx,DWORD PTR [edx]
  41cde4:	mov    ds,WORD PTR [edx+0x58]
  41cde7:	gs push esp
  41cde9:	leave  
  41cdea:	sub    ebx,ebp
  41cdec:	mov    bh,0xcb
  41cdee:	fcmove st,st(2)
  41cdf0:	push   ebx
  41cdf1:	dec    ecx
  41cdf2:	lods   al,BYTE PTR ds:[esi]
  41cdf3:	jmp    0x5562e19e
  41cdf8:	cmova  eax,DWORD PTR [eax+eiz*4+0x716e1ea5]
  41ce00:	fs rdtsc 
  41ce03:	rol    bl,1
  41ce05:	ins    BYTE PTR es:[edi],dx
  41ce06:	mov    WORD PTR [ebx+0x481fa1b8],?
  41ce0c:	push   ss
  41ce0d:	popa   
  41ce0e:	jle    0x41ce86
  41ce10:	and    BYTE PTR [ebx-0x16],0xba
  41ce14:	lea    ebp,[eax+0x6d302a93]
  41ce1a:	or     BYTE PTR [esi],al
  41ce1c:	or     eax,0xe1948d6a
  41ce21:	jo     0x41ce4f
  41ce23:	aam    0xc6
  41ce25:	stos   DWORD PTR es:[edi],eax
  41ce26:	rcr    BYTE PTR [edi-0x664e363],1
  41ce2c:	push   eax
  41ce2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce2e:	xchg   ecx,eax
  41ce2f:	fcomp  QWORD PTR [esi]
  41ce31:	pop    ebp
  41ce32:	stc    
  41ce33:	xchg   BYTE PTR [edi+0x34],ah
  41ce36:	fild   WORD PTR ds:0x4a77d730
  41ce3c:	xchg   BYTE PTR [ebx],bh
  41ce3e:	sub    esi,DWORD PTR [ebx+ebp*1]
  41ce41:	cld    
  41ce42:	and    ecx,ecx
  41ce44:	jecxz  0x41ceaa
  41ce46:	mov    dl,0xe5
  41ce48:	retf   
  41ce49:	jbe    0x41ce8d
  41ce4b:	lahf   
  41ce4c:	nop
  41ce4d:	in     al,dx
  41ce4e:	lods   eax,DWORD PTR ds:[esi]
  41ce4f:	cld    
  41ce50:	call   0x90f38c45
  41ce55:	loope  0x41cddf
  41ce57:	jmp    0xd59321e
  41ce5c:	(bad)  
  41ce5d:	out    0x8c,eax
  41ce5f:	jne    0x41cea0
  41ce61:	das    
  41ce62:	inc    ebx
  41ce63:	imul   eax,eax,0x5
  41ce66:	loope  0x41cec8
  41ce68:	jle    0x41ce35
  41ce6a:	repnz sub al,0xbb
  41ce6d:	push   ds
  41ce6e:	xor    DWORD PTR [ebp+0x35126df9],0xffffff8c
  41ce75:	mov    BYTE PTR [ebx+0x2a91c831],ch
  41ce7b:	(bad)  [eax]
  41ce7d:	mov    cl,dh
  41ce7f:	rcl    DWORD PTR [ebp-0x25],0x92
  41ce83:	pminsw mm2,mm0
  41ce86:	out    dx,eax
  41ce87:	fild   QWORD PTR [eax-0x14d06f14]
  41ce8d:	lock std 
  41ce8f:	push   0x9c6f34ee
  41ce94:	mov    ah,BYTE PTR [esi]
  41ce96:	imul   dl
  41ce98:	rol    dl,1
  41ce9a:	pop    ecx
  41ce9b:	scas   eax,DWORD PTR es:[edi]
  41ce9c:	mov    ah,0xb9
  41ce9e:	shl    BYTE PTR [ebx],0x11
  41cea1:	sbb    dh,BYTE PTR [ebx-0x1ca121ab]
  41cea7:	mov    eax,ds:0x3560d374
  41ceac:	out    0xd4,eax
  41ceae:	(bad)  
  41ceaf:	xchg   edi,eax
  41ceb0:	dec    esp
  41ceb1:	push   ss
  41ceb2:	xchg   ebp,eax
  41ceb3:	retf   
  41ceb4:	pop    esp
  41ceb5:	out    0x99,al
  41ceb7:	sbb    al,0x7e
  41ceb9:	mov    al,ds:0x5b46aba2
  41cebe:	daa    
  41cebf:	push   cs
  41cec0:	fcomip st,st(7)
  41cec2:	jo     0x41cf01
  41cec4:	xor    edx,DWORD PTR [eax+0x6ac8d749]
  41ceca:	xchg   esi,eax
  41cecb:	xchg   ebx,eax
  41cecc:	in     eax,0xed
  41cece:	fild   QWORD PTR [ebx+0x43b9286f]
  41ced4:	(bad)  
  41ced5:	jb     0x41ce81
  41ced7:	mov    ah,0xd4
  41ced9:	mov    dl,0x8e
  41cedb:	(bad)  
  41cedd:	jle    0x41ceb4
  41cedf:	jmp    0x9864:0xf9ae07f1
  41cee6:	adc    al,cl
  41cee8:	imul   esi,DWORD PTR [ebp+eiz*4+0x44],0x3ae0e836
  41cef0:	jecxz  0x41cf6d
  41cef2:	rcl    DWORD PTR [ebx+0x50],0xa5
  41cef6:	xor    eax,0x322f09ee
  41cefb:	fdivr  st,st(4)
  41cefd:	iret   
  41cefe:	in     al,0x7
  41cf00:	jb     0x41ce99
  41cf02:	xor    DWORD PTR [edi],esp
  41cf04:	sbb    dh,dl
  41cf06:	jecxz  0x41cf28
  41cf08:	adc    DWORD PTR ds:0x5c53316e,esp
  41cf0e:	xor    eax,0xb743be23
  41cf13:	and    BYTE PTR [esi+0x54],0x31
  41cf17:	add    DWORD PTR [ebx],eax
  41cf19:	and    al,0x2f
  41cf1b:	mov    BYTE PTR [ecx],al
  41cf1d:	not    eax
  41cf1f:	(bad)  [ecx-0x45dbd8d3]
  41cf25:	mov    dl,0x1b
  41cf27:	dec    ebp
  41cf28:	and    edi,DWORD PTR [edx]
  41cf2a:	sub    eax,0x958bbf60
  41cf2f:	sub    DWORD PTR [edx],edx
  41cf31:	arpl   WORD PTR [eax-0x353a2e72],dx
  41cf37:	xor    DWORD PTR [ecx-0x22bbd59b],edi
  41cf3d:	stc    
  41cf3e:	jns    0x41cefc
  41cf40:	push   eax
  41cf41:	add    dh,0x28
  41cf44:	lods   al,BYTE PTR ds:[esi]
  41cf45:	mov    edi,0x5a578c9b
  41cf4a:	dec    eax
  41cf4b:	push   cs
  41cf4c:	or     ebp,DWORD PTR [edx-0x101a4af2]
  41cf52:	std    
  41cf53:	in     al,0x2e
  41cf55:	jmp    0x20e83b71
  41cf5a:	pop    es
  41cf5b:	sub    DWORD PTR [edi],ebp
  41cf5d:	pushf  
  41cf5e:	or     bh,BYTE PTR [ebp-0xb554b3f]
  41cf64:	mov    bl,0x31
  41cf66:	inc    esi
  41cf67:	jmp    0x6fc306e6
  41cf6c:	mov    edi,0x4ffbc1da
  41cf71:	mov    DWORD PTR [ebx-0x24],esp
  41cf74:	mov    esp,0x3035f8b9
  41cf79:	inc    esp
  41cf7a:	mov    esp,0x1b3488df
  41cf7f:	or     al,0x91
  41cf81:	jmp    0x53a2:0x8ce77655
  41cf88:	test   ebx,ebp
  41cf8a:	push   edi
  41cf8b:	lock std 
  41cf8d:	sbb    BYTE PTR [esi+edx*1-0x3b768738],0xfe
  41cf95:	cwde   
  41cf96:	and    al,0x6
  41cf98:	into   
  41cf99:	ret    0x7523
  41cf9c:	jns    0x41cfe1
  41cf9e:	outs   dx,DWORD PTR ds:[esi]
  41cf9f:	lods   al,BYTE PTR ds:[esi]
  41cfa0:	scas   eax,DWORD PTR es:[edi]
  41cfa1:	xor    ebp,0x2a
  41cfa4:	jl     0x41cfa7
  41cfa6:	xchg   ebx,eax
  41cfa7:	out    dx,eax
  41cfa8:	call   edx
  41cfaa:	shl    DWORD PTR [ecx+0x38],cl
  41cfad:	jnp    0x41d01c
  41cfaf:	aam    0x6b
  41cfb1:	cwde   
  41cfb2:	(bad)  
  41cfb3:	(bad)  
  41cfb4:	test   al,0x5
  41cfb6:	jne    0x41cf4b
  41cfb8:	daa    
  41cfb9:	pop    edi
  41cfba:	add    esp,DWORD PTR [eax-0x48]
  41cfbd:	add    DWORD PTR [eax-0x12057c44],ebp
  41cfc3:	xchg   edi,eax
  41cfc4:	jne    0x41cfa4
  41cfc6:	or     eax,0xec559c46
  41cfcb:	mov    dh,0xb7
  41cfcd:	add    eax,0xe8432a2b
  41cfd2:	jl     0x41cf90
  41cfd4:	lahf   
  41cfd5:	jne    0x41cfe0
  41cfd7:	lods   al,BYTE PTR ds:[esi]
  41cfd8:	push   0xf0834e2
  41cfdd:	lods   al,BYTE PTR ds:[esi]
  41cfde:	fcom   DWORD PTR [edi-0x53edca1d]
  41cfe4:	pusha  
  41cfe5:	es xchg edi,eax
  41cfe7:	out    0x48,eax
  41cfe9:	jmp    0x17a5:0x1cd179cc
  41cff0:	pop    esi
  41cff1:	enter  0x9621,0x98
  41cff5:	push   ecx
  41cff6:	mov    al,0x18
  41cff8:	xlat   BYTE PTR ds:[ebx]
  41cff9:	ret    
  41cffa:	inc    ebx
  41cffb:	add    ecx,DWORD PTR [edx+0x38]
  41cffe:	and    eax,DWORD PTR [edi+0x3de9dbcb]
  41d004:	jbe    0x41cfb7
  41d006:	nop
  41d007:	lods   eax,DWORD PTR ds:[esi]
  41d008:	sbb    edx,esp
  41d00a:	cmp    al,BYTE PTR gs:[edx]
  41d00d:	sub    DWORD PTR es:[ecx+0x14],ebp
  41d011:	mov    ecx,0xb711cdbd
  41d016:	xchg   ebp,eax
  41d017:	add    dl,BYTE PTR [ecx+0x4e]
  41d01a:	dec    edi
  41d01b:	push   ebp
  41d01c:	lds    ecx,FWORD PTR [edi-0x40f85baf]
  41d022:	(bad)  
  41d023:	iret   
  41d024:	popf   
  41d025:	aad    0xc9
  41d027:	es push ebp
  41d029:	dec    ecx
  41d02a:	(bad)  
  41d02c:	xchg   edi,eax
  41d02d:	enter  0x2d6d,0x20
  41d031:	adc    DWORD PTR [esi+0x4a],0x5f5c260d
  41d038:	xchg   ebp,eax
  41d039:	les    esi,FWORD PTR [ecx-0x58]
  41d03c:	adc    BYTE PTR [edx+0x23],cl
  41d03f:	add    bl,BYTE PTR [ebx]
  41d041:	sti    
  41d042:	leave  
  41d043:	mov    ebx,0x1254f927
  41d048:	xchg   esi,eax
  41d049:	inc    ebx
  41d04a:	fwait
  41d04b:	xlat   BYTE PTR ds:[ebx]
  41d04c:	popa   
  41d04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d04e:	dec    ebp
  41d04f:	fadd   DWORD PTR [eax+0x12]
  41d052:	mov    esp,DWORD PTR [edi]
  41d054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d055:	cli    
  41d056:	dec    edi
  41d057:	int3   
  41d058:	out    dx,al
  41d059:	outs   dx,BYTE PTR ds:[esi]
  41d05a:	xor    bl,BYTE PTR [ecx]
  41d05c:	inc    eax
  41d05d:	sub    BYTE PTR [ebp+0x5cec26f9],ah
  41d063:	dec    esp
  41d064:	cmc    
  41d065:	call   0xb7e9:0x6f7a9f79
  41d06c:	div    BYTE PTR [ebx-0x71f524df]
  41d072:	outs   dx,DWORD PTR ds:[esi]
  41d073:	loope  0x41d096
  41d075:	jne    0x41d033
  41d077:	cdq    
  41d078:	sbb    BYTE PTR ds:0x6ed65270,dl
  41d07e:	jne    0x41d04b
  41d080:	sbb    ebp,ebx
  41d082:	or     bh,cl
  41d084:	inc    esp
  41d085:	test   BYTE PTR ss:0xbd5cd344,ah
  41d08c:	pop    ds
  41d08d:	cmp    dl,BYTE PTR [edi+0x5b901bab]
  41d093:	mov    BYTE PTR [edx],bl
  41d095:	loopne 0x41d031
  41d097:	xchg   ebp,eax
  41d098:	push   edx
  41d099:	jae    0x41d0a5
  41d09b:	popa   
  41d09c:	and    edx,DWORD PTR [esp+ecx*1+0x53]
  41d0a0:	ja     0x41d0bc
  41d0a2:	cmp    eax,0xc2c0a905
  41d0a7:	idiv   cl
  41d0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0aa:	int    0x41
  41d0ac:	daa    
  41d0ad:	mov    ebp,0x821c7a45
  41d0b2:	ftst   
  41d0b4:	inc    ecx
  41d0b5:	mov    esi,0xdeb1b8df
  41d0ba:	test   BYTE PTR [edi],0x4c
  41d0bd:	(bad)  
  41d0bf:	mov    edx,eax
  41d0c1:	dec    eax
  41d0c2:	clc    
  41d0c3:	mov    eax,0xd4fcc939
  41d0c8:	repnz dec ebp
  41d0ca:	push   esi
  41d0cb:	icebp  
  41d0cc:	cmp    al,0x8c
  41d0ce:	test   al,0x9b
  41d0d0:	ret    0x41fd
  41d0d3:	add    eax,0x49c4992d
  41d0d8:	sub    eax,0x8424dd96
  41d0dd:	fwait
  41d0de:	inc    ecx
  41d0df:	fucomp st(5)
  41d0e1:	jg     0x41d0c4
  41d0e3:	cmp    eax,0xb9980314
  41d0e8:	imul   ebx,DWORD PTR [esi+ecx*8-0x29],0xffffffc0
  41d0ed:	mov    dh,0x80
  41d0ef:	out    0x4,al
  41d0f1:	in     eax,dx
  41d0f2:	rcr    DWORD PTR [esi],cl
  41d0f4:	or     DWORD PTR [esi+0x7d9ec773],esi
  41d0fa:	lahf   
  41d0fb:	jp     0x41d124
  41d0fd:	inc    ecx
  41d0fe:	pop    esp
  41d0ff:	out    dx,al
  41d100:	aas    
  41d101:	mov    al,ds:0xec4572ca
  41d106:	cmp    DWORD PTR ds:0x2b690611,edi
  41d10c:	mov    dl,0x2a
  41d10e:	sbb    eax,0x29e8c940
  41d113:	inc    esi
  41d114:	out    0x1a,eax
  41d116:	sub    ebp,DWORD PTR [ebx-0x72]
  41d119:	dec    edx
  41d11a:	adc    cl,BYTE PTR [esi]
  41d11c:	fadd   QWORD PTR [esi+0x77]
  41d11f:	sbb    al,0xd6
  41d121:	repz scas eax,DWORD PTR es:[edi]
  41d123:	xchg   DWORD PTR [edi],ebx
  41d125:	(bad)  
  41d127:	xchg   ebp,eax
  41d128:	cmc    
  41d129:	inc    edx
  41d12a:	mov    dl,0x64
  41d12c:	mov    bl,0xbe
  41d12e:	xchg   esi,eax
  41d12f:	pushf  
  41d130:	sbb    DWORD PTR [esi+0x7ff6ee96],0xdfa0e886
  41d13a:	sbb    eax,0x97e0efc0
  41d13f:	mov    eax,ds:0xe4a43adf
  41d144:	(bad)  
  41d145:	cmp    edx,DWORD PTR [eax]
  41d147:	or     al,0x32
  41d149:	jno    0x41d12e
  41d14b:	pop    ebp
  41d14c:	jp     0x41d11d
  41d14e:	loop   0x41d11e
  41d150:	pop    esi
  41d151:	call   0x398010ed
  41d156:	adc    al,0x2f
  41d158:	xor    BYTE PTR [esi],cl
  41d15a:	(bad)  
  41d15b:	pop    esp
  41d15c:	out    0xec,al
  41d15e:	out    dx,al
  41d15f:	mov    edi,DWORD PTR [edi+0x7e89c616]
  41d165:	adc    eax,0x84753ac7
  41d16a:	push   cs
  41d16b:	mov    esi,0x414ca820
  41d170:	jp     0x41d101
  41d172:	or     BYTE PTR [edx],ah
  41d174:	sti    
  41d175:	fucomp st(3)
  41d177:	arpl   WORD PTR [edx-0x79],si
  41d17a:	out    dx,al
  41d17b:	fidiv  WORD PTR [edi]
  41d17d:	xor    eax,0xbcb183a1
  41d182:	adc    cl,BYTE PTR [esi+0x5d]
  41d185:	pop    esp
  41d186:	adc    si,si
  41d189:	or     al,0x74
  41d18b:	push   cs
  41d18c:	adc    esi,DWORD PTR [esi-0x45]
  41d18f:	ss mov esi,0x7c437ff8
  41d196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d197:	clc    
  41d198:	popa   
  41d199:	add    al,0x7a
  41d19b:	mov    bh,0xd1
  41d19d:	fwait
  41d19e:	sub    eax,0xcfa2cfa6
  41d1a3:	cmc    
  41d1a4:	sub    bh,BYTE PTR [eax-0x3a07ccf2]
  41d1aa:	frstor [edi]
  41d1ac:	ret    
  41d1ad:	(bad)  
  41d1af:	or     BYTE PTR [edi+0x5406bb65],bh
  41d1b5:	sub    eax,0xd459a76d
  41d1ba:	add    ch,BYTE PTR [esi+edi*1]
  41d1bd:	dec    edi
  41d1be:	jle    0x41d14f
  41d1c0:	jbe    0x41d1d6
  41d1c2:	inc    ebx
  41d1c3:	mov    dl,0x6d
  41d1c5:	mov    cs,WORD PTR [ecx+0x76]
  41d1c8:	sub    DWORD PTR [ecx+edx*2-0x76038254],ebx
  41d1cf:	mov    gs,edx
  41d1d1:	test   eax,0xa46e0ec8
  41d1d6:	cmp    ebx,DWORD PTR [ecx+0x3b9b2eef]
  41d1dc:	mov    cl,BYTE PTR ds:0x59d92e63
  41d1e2:	rcl    DWORD PTR [eax+0x1ed3e8fa],cl
  41d1e8:	push   esp
  41d1e9:	add    esp,DWORD PTR [edi+edx*4+0x60]
  41d1ed:	in     al,dx
  41d1ee:	xchg   esi,eax
  41d1ef:	les    ecx,FWORD PTR [esi-0x18]
  41d1f2:	popa   
  41d1f3:	adc    dl,BYTE PTR [ebp+0x73aa224a]
  41d1f9:	cmp    eax,eax
  41d1fb:	dec    ebp
  41d1fc:	sbb    DWORD PTR [edi-0x71ef4009],edx
  41d202:	push   ds
  41d203:	xchg   ebx,eax
  41d204:	loope  0x41d1da
  41d206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d207:	push   0x9b8e9845
  41d20c:	xor    DWORD PTR ds:0xa5a12d94,0xa78959c2
  41d216:	popa   
  41d217:	fbld   TBYTE PTR [eax-0x2f22eacd]
  41d21d:	popa   
  41d21e:	sub    DWORD PTR [edi+0x140d283a],ebx
  41d224:	mov    eax,ds:0xf636c8cb
  41d229:	and    DWORD PTR [ecx-0x43],ebx
  41d22c:	jno    0x41d1cc
  41d22e:	enter  0xc0af,0xfe
  41d232:	inc    eax
  41d233:	or     DWORD PTR [ecx-0x4ced1c8],ebx
  41d239:	mov    bl,0x9d
  41d23b:	sub    DWORD PTR [edx],edi
  41d23d:	sub    DWORD PTR [edi+0x3b],ebp
  41d240:	lea    ecx,[eax]
  41d242:	pop    eax
  41d243:	pop    edi
  41d244:	leave  
  41d245:	jmp    0x819b0fec
  41d24a:	pop    edx
  41d24c:	push   esp
  41d24d:	mov    bl,0x10
  41d24f:	mov    edx,0x7e6b9e15
  41d254:	sti    
  41d255:	stos   BYTE PTR es:[edi],al
  41d256:	ficom  DWORD PTR [edi-0x2f]
  41d259:	cmp    eax,edi
  41d25b:	or     ch,0x47
  41d25e:	push   0x567a733a
  41d263:	dec    edx
  41d264:	jns    0x41d21b
  41d266:	pusha  
  41d267:	rcr    DWORD PTR [ebp+0x53aeecf7],cl
  41d26d:	sub    DWORD PTR [ecx+0x33],edx
  41d270:	mov    ebx,0x95e60da7
  41d275:	mov    BYTE PTR [ebp-0x80],bl
  41d278:	sub    edx,esi
  41d27a:	push   ebp
  41d27b:	push   eax
  41d27c:	xlat   BYTE PTR cs:[ebx]
  41d27e:	mov    dl,0xc5
  41d280:	(bad)  
  41d281:	mov    edx,0xc1862f46
  41d286:	add    DWORD PTR ds:0x5731d293,eax
  41d28c:	jne    0x41d276
  41d28e:	in     al,dx
  41d28f:	cmp    ebx,DWORD PTR [esi+0x25]
  41d292:	xor    eax,0xf892a6c3
  41d297:	xlat   BYTE PTR ds:[ebx]
  41d298:	clc    
  41d299:	es loope 0x41d28a
  41d29c:	adc    BYTE PTR gs:[ebx+ecx*2+0x55],0x6
  41d2a2:	xor    DWORD PTR ds:[ebx],ecx
  41d2a5:	out    dx,al
  41d2a6:	xchg   BYTE PTR [edi],dl
  41d2a8:	mov    ecx,0x585de9e6
  41d2ad:	imul   edx,DWORD PTR [esi+ecx*8+0x3e0a8e82],0x43
  41d2b5:	mov    al,ds:0xe562449f
  41d2ba:	mov    DWORD PTR [esi-0x1f252e7b],0x7c9023f9
  41d2c4:	mov    edi,0xf76d5e7d
  41d2c9:	push   ebp
  41d2ca:	or     al,BYTE PTR [edx+0x427384c6]
  41d2d0:	inc    edi
  41d2d1:	aas    
  41d2d2:	cmp    eax,0x586d2c7e
  41d2d7:	push   esi
  41d2d8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d2da:	retf   
  41d2db:	test   eax,0x14ffad54
  41d2e0:	push   ss
  41d2e1:	jmp    0x41d2cd
  41d2e3:	add    BYTE PTR [ebx*4-0x57016c32],dh
  41d2ea:	sbb    ecx,DWORD PTR [eax+0x3e25af74]
  41d2f0:	stos   BYTE PTR es:[edi],al
  41d2f1:	mov    dh,0x1
  41d2f3:	loop   0x41d297
  41d2f5:	and    BYTE PTR ds:0xe70c5264,0x84
  41d2fc:	mov    al,0x61
  41d2fe:	test   al,0xc3
  41d300:	imul   edi,DWORD PTR [ebx+0x63b0f623],0xdceaa38
  41d30a:	fisubr WORD PTR [ebx]
  41d30c:	ins    DWORD PTR es:[edi],dx
  41d30d:	sbb    esi,DWORD PTR [esi-0x28501929]
  41d313:	retf   0xe641
  41d316:	add    eax,0x5ac11b65
  41d31b:	add    BYTE PTR [edx],0x68
  41d31e:	jns    0x41d362
  41d320:	push   0xffffff9c
  41d322:	jmp    0xfc4602e6
  41d327:	mov    ds:0x486aaf6a,eax
  41d32c:	shl    DWORD PTR [ebp+0x66],1
  41d32f:	jecxz  0x41d2fa
  41d331:	mul    DWORD PTR [ecx-0x5d]
  41d334:	in     al,dx
  41d335:	or     DWORD PTR [edx],ecx
  41d337:	xchg   esi,eax
  41d338:	(bad)  
  41d339:	das    
  41d33a:	jl     0x41d2f5
  41d33c:	jo     0x41d31a
  41d33e:	jns    0x41d356
  41d340:	xor    eax,0x1a0c26f3
  41d345:	outs   dx,BYTE PTR ds:[esi]
  41d346:	lods   al,BYTE PTR ds:[esi]
  41d347:	out    dx,eax
  41d348:	ins    BYTE PTR es:[edi],dx
  41d349:	js     0x41d369
  41d34b:	xchg   edi,eax
  41d34c:	imul   ebx,DWORD PTR [esi*8+0x6f6668c3],0x57e4e240
  41d357:	cld    
  41d358:	dec    edx
  41d359:	clc    
  41d35a:	dec    dx
  41d35c:	add    DWORD PTR [edi],esp
  41d35e:	clc    
  41d35f:	cdq    
  41d360:	pop    ebx
  41d361:	bound  edx,QWORD PTR [ebp+edi*1+0x70039447]
  41d368:	xor    eax,0x48054ffb
  41d36d:	sbb    BYTE PTR [ebp-0x8eb9917],0x57
  41d374:	jg     0x41d3a2
  41d376:	leave  
  41d377:	sbb    al,dh
  41d379:	pushf  
  41d37a:	bound  ecx,QWORD PTR [esi]
  41d37c:	jb     0x41d321
  41d37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37f:	in     al,dx
  41d380:	mov    bl,0x72
  41d382:	inc    ebp
  41d383:	mov    ds:0x74ec52cd,eax
  41d388:	int    0x25
  41d38a:	les    esi,FWORD PTR [esi-0x6dc153fa]
  41d390:	je     0x41d3b2
  41d392:	adc    DWORD PTR [ebx+eax*2],0xffffffe1
  41d396:	xor    DWORD PTR [edi-0x5cde7ff4],ebp
  41d39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d39d:	cwde   
  41d39e:	enter  0xf0d6,0x57
  41d3a2:	call   0x3ffed21d
  41d3a7:	xor    edi,esp
  41d3a9:	inc    ebp
  41d3aa:	jnp    0x41d356
  41d3ac:	mov    bl,0x5a
  41d3ae:	add    eax,esi
  41d3b0:	jge    0x41d3f5
  41d3b2:	sbb    eax,0x56cbd240
  41d3b8:	aam    0xbc
  41d3ba:	(bad)  [ebx-0x69]
  41d3bd:	xchg   ebp,eax
  41d3be:	or     edx,ecx
  41d3c0:	cmp    DWORD PTR [eax+ebp*2-0x360a6574],esi
  41d3c7:	pop    edx
  41d3c8:	pop    ebp
  41d3c9:	std    
  41d3ca:	pop    es
  41d3cb:	inc    ebp
  41d3cc:	dec    edx
  41d3cd:	cmp    DWORD PTR ds:0x4d2b2e38,edx
  41d3d3:	add    eax,0xb0dbf11a
  41d3d8:	cmp    eax,0x2bfe39a3
  41d3dd:	(bad)  
  41d3de:	and    ebp,DWORD PTR [edx+eiz*8-0x1506ae73]
  41d3e5:	imul   ebp,ebp,0xe71205f2
  41d3eb:	into   
  41d3ec:	mov    WORD PTR [edi],?
  41d3ee:	sub    eax,0x252a94ea
  41d3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f4:	sub    ecx,esp
  41d3f6:	fwait
  41d3f7:	xlat   BYTE PTR ds:[ebx]
  41d3f8:	jbe    0x41d383
  41d3fa:	pop    ds
  41d3fb:	mov    dx,0xdc88
  41d3ff:	mov    cl,0xfb
  41d401:	xchg   DWORD PTR [edi-0x54878e79],ebx
  41d407:	fadd   QWORD PTR [eax+0x3d]
  41d40a:	repnz mov eax,0xfa2f6a9f
  41d410:	enter  0x6e6b,0x25
  41d414:	gs xchg ebx,eax
  41d416:	push   ds
  41d417:	xor    DWORD PTR [edi+edi*2+0x39663aa4],edi
  41d41e:	cld    
  41d41f:	imul   ebp,DWORD PTR [edi-0xd],0x28
  41d423:	das    
  41d424:	sbb    BYTE PTR [edx-0x1b2b958e],0x88
  41d42b:	pop    eax
  41d42c:	mov    bl,0xc2
  41d42e:	mov    bh,0x5a
  41d430:	cld    
  41d431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d432:	js     0x41d473
  41d434:	or     DWORD PTR [edi],eax
  41d436:	xchg   bh,bl
  41d438:	aad    0xb9
  41d43a:	add    esp,edx
  41d43c:	retf   
  41d43d:	pop    ds
  41d43e:	loope  0x41d4a7
  41d440:	xchg   esp,eax
  41d441:	call   0xcac38630
  41d446:	or     BYTE PTR [eax-0x5c],al
  41d449:	lods   al,BYTE PTR ds:[esi]
  41d44a:	pushf  
  41d44b:	(bad)  
  41d44c:	jge    0x41d464
  41d44e:	sbb    BYTE PTR [esi],0x56
  41d451:	shl    BYTE PTR [ecx+0x2f707e51],0xbb
  41d458:	push   ds
  41d459:	xchg   edi,eax
  41d45a:	test   eax,0xa3e6cc8b
  41d45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d460:	xor    BYTE PTR [ecx+0x18464e43],ch
  41d466:	inc    edi
  41d467:	jmp    0x41d4ad
  41d469:	out    dx,eax
  41d46a:	call   0xae44d878
  41d46f:	and    BYTE PTR ds:0xaf57a56d,bh
  41d475:	pop    edx
  41d476:	sbb    BYTE PTR [esi+0x7f44f186],bl
  41d47c:	or     eax,0x6742132c
  41d481:	pop    es
  41d482:	mov    dl,0xf
  41d484:	call   0x37a2576e
  41d489:	out    dx,eax
  41d48a:	xor    eax,0x46c99aaf
  41d48f:	pop    ss
  41d490:	cmp    al,0xf0
  41d492:	pop    ebx
  41d493:	adc    DWORD PTR [ebx],edi
  41d495:	jmp    0x6478:0x6774dfc0
  41d49c:	mov    al,BYTE PTR [edx]
  41d49e:	sbb    esi,DWORD PTR [eax+0x1e0dd2e6]
  41d4a4:	ret    
  41d4a5:	push   ss
  41d4a6:	in     al,0x24
  41d4a8:	jg     0x41d4ab
  41d4aa:	dec    esp
  41d4ab:	ffreep st(6)
  41d4ad:	push   esp
  41d4ae:	nop
  41d4af:	jmp    0xb959:0x208c60eb
  41d4b6:	jmp    0x41d537
  41d4b8:	cmp    BYTE PTR [ecx-0x748a43b0],0xc2
  41d4bf:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41d4c1:	aad    0x9a
  41d4c3:	test   eax,0x6798db6d
  41d4c8:	out    dx,al
  41d4c9:	loope  0x41d4b8
  41d4cb:	mov    esp,0x27702d8a
  41d4d0:	cmc    
  41d4d1:	xchg   ebx,eax
  41d4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d3:	push   0x6c
  41d4d5:	xor    ecx,ebx
  41d4d7:	cdq    
  41d4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d9:	push   esi
  41d4da:	cld    
  41d4db:	(bad)  
  41d4dc:	fistp  QWORD PTR [esi]
  41d4de:	loope  0x41d4da
  41d4e0:	(bad)  
  41d4e1:	cmp    eax,0xf90d5046
  41d4e6:	mov    dh,0x4b
  41d4e8:	inc    esp
  41d4e9:	xchg   ebp,eax
  41d4ea:	xor    esp,DWORD PTR [edx+0x9]
  41d4ed:	push   es
  41d4ee:	adc    BYTE PTR [esi-0x59],bl
  41d4f1:	jp     0x41d531
  41d4f3:	imul   ecx,DWORD PTR [ebp+0x35],0xffffff97
  41d4f7:	aad    0x75
  41d4f9:	out    dx,al
  41d4fa:	pop    esi
  41d4fb:	lds    eax,FWORD PTR [ebx+ecx*1]
  41d4fe:	jmp    0x41d499
  41d500:	add    al,BYTE PTR [edi+0x5f]
  41d503:	mov    edx,0x1d7e5b47
  41d508:	inc    esi
  41d509:	ret    0xacc3
  41d50c:	pop    ebx
  41d50d:	pop    ebp
  41d50e:	sub    al,BYTE PTR [ebp-0x55]
  41d511:	jb     0x41d58c
  41d513:	push   ss
  41d514:	mov    esp,0xe4a910ae
  41d519:	adc    eax,0x12b0b51b
  41d51e:	pop    esi
  41d51f:	xchg   DWORD PTR [eax+esi*8+0x728ebd99],edi
  41d526:	stc    
  41d527:	stc    
  41d528:	xor    al,0x85
  41d52a:	sub    dl,al
  41d52c:	push   ecx
  41d52d:	cmp    BYTE PTR [ebx+0x15],0x87
  41d531:	shl    DWORD PTR [edx+0xe],0x8a
  41d535:	and    dl,al
  41d537:	ffree  st(0)
  41d539:	mov    al,0xa5
  41d53b:	arpl   WORD PTR [ebp+0x92e36df],bx
  41d541:	dec    ebp
  41d542:	cdq    
  41d543:	dec    esi
  41d544:	xor    BYTE PTR [edx-0x44],bh
  41d547:	push   edx
  41d548:	pop    es
  41d549:	pop    ds
  41d54a:	daa    
  41d54b:	(bad)  
  41d54d:	dec    ecx
  41d54e:	jl     0x41d560
  41d550:	jp     0x41d5be
  41d552:	xor    edi,edx
  41d554:	(bad)  
  41d555:	not    BYTE PTR [eax+esi*4-0x3d]
  41d559:	out    dx,eax
  41d55a:	retf   0x3119
  41d55d:	or     BYTE PTR [esi+ebx*4-0x63],0xee
  41d562:	mov    DWORD PTR [edx+0x6add3bfe],ecx
  41d568:	outs   dx,DWORD PTR cs:[esi]
  41d56a:	and    DWORD PTR [ebp-0x1],0x8065f361
  41d571:	das    
  41d572:	inc    esp
  41d573:	repnz pop ecx
  41d575:	or     eax,0x6993e178
  41d57a:	neg    DWORD PTR [edx-0x3a484dfc]
  41d580:	cmp    ch,BYTE PTR [ebx-0x7d95816a]
  41d586:	mov    al,0x86
  41d588:	pop    ebx
  41d589:	nop
  41d58a:	aad    0x39
  41d58c:	pop    esi
  41d58d:	pop    es
  41d58e:	mov    eax,ds:0x8781ab47
  41d593:	loopne 0x41d558
  41d595:	or     eax,0x7df167a5
  41d59a:	dec    esp
  41d59b:	adc    dl,bh
  41d59d:	sbb    cl,dh
  41d59f:	gs jg  0x41d611
  41d5a2:	push   ss
  41d5a3:	cmp    ecx,DWORD PTR [ebp-0x2b]
  41d5a6:	arpl   WORD PTR [edi],di
  41d5a8:	ret    0x853a
  41d5ab:	push   esi
  41d5ac:	icebp  
  41d5ad:	out    dx,al
  41d5ae:	pop    eax
  41d5af:	xchg   ecx,eax
  41d5b0:	adc    al,0x73
  41d5b2:	mov    bh,0xed
  41d5b4:	or     bh,BYTE PTR es:[edi+0x23]
  41d5b8:	inc    ebx
  41d5b9:	in     al,dx
  41d5ba:	and    ah,0x6e
  41d5bd:	clc    
  41d5be:	cmp    DWORD PTR [esi+0x3a],0x10
  41d5c2:	mov    cl,0xa0
  41d5c4:	sahf   
  41d5c5:	pop    edx
  41d5c6:	push   esp
  41d5c7:	jno    0x41d5c2
  41d5c9:	add    eax,0x97be8b7f
  41d5ce:	lods   eax,DWORD PTR ds:[esi]
  41d5cf:	add    eax,0xb8113ac4
  41d5d4:	cmp    eax,DWORD PTR [ebx-0x508a2fac]
  41d5da:	mov    bl,bh
  41d5dc:	sbb    ebp,DWORD PTR [ebx]
  41d5de:	shl    BYTE PTR [ecx],cl
  41d5e0:	dec    ebp
  41d5e1:	lock xchg DWORD PTR [eax+ebx*1+0x6311056d],ebp
  41d5e9:	fld    QWORD PTR [edx+0x34]
  41d5ec:	mov    eax,0x4f2441f9
  41d5f1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f3:	aad    0xfa
  41d5f5:	jnp    0x41d5a1
  41d5f7:	lahf   
  41d5f8:	cwde   
  41d5f9:	test   DWORD PTR [ebp+edi*8+0x77],edx
  41d5fd:	std    
  41d5fe:	xor    eax,0x49379ac1
  41d603:	jmp    0x41d606
  41d605:	xchg   ecx,eax
  41d606:	jns    0x41d5aa
  41d608:	ins    BYTE PTR es:[edi],dx
  41d609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d60a:	aam    0x5d
  41d60c:	rcr    di,1
  41d60f:	lock inc eax
  41d611:	fidiv  WORD PTR [edi+0x78f95e88]
  41d617:	fdiv   st(5),st
  41d619:	sahf   
  41d61a:	sub    dh,dl
  41d61c:	adc    cl,BYTE PTR [edi-0x6]
  41d61f:	jecxz  0x41d5d1
  41d621:	(bad)  
  41d622:	adc    edx,DWORD PTR [ecx]
  41d624:	add    al,0x45
  41d626:	xor    dl,BYTE PTR [esi+esi*2+0x2c]
  41d62a:	cld    
  41d62b:	fs mov ch,0x85
  41d62e:	ret    
  41d62f:	adc    al,0xe3
  41d631:	mov    al,ds:0x6ab4c4de
  41d636:	jne    0x41d65e
  41d638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d639:	mov    dl,0xa
  41d63b:	outs   dx,DWORD PTR ds:[esi]
  41d63c:	lds    edx,FWORD PTR [ecx-0x742200f0]
  41d642:	xor    ebx,esp
  41d644:	lea    esi,[eax+0x68]
  41d647:	mov    WORD PTR [edx+eiz*8],fs
  41d64a:	test   ah,bl
  41d64c:	push   es
  41d64d:	push   ecx
  41d64e:	dec    edi
  41d64f:	pop    es
  41d650:	rcr    BYTE PTR [esi+0x7e883780],cl
  41d656:	adc    edi,DWORD PTR [ebx+0x5f6a74c4]
  41d65c:	fst    QWORD PTR [ebx+0x60cfbaee]
  41d662:	shl    BYTE PTR [esi+0x46c02498],1
  41d668:	hlt    
  41d669:	jg     0x41d698
  41d66b:	jmp    0xea05:0x57702424
  41d672:	mov    ch,0x88
  41d674:	and    ch,dl
  41d676:	push   cs
  41d677:	mov    bh,0xec
  41d679:	leave  
  41d67a:	scas   eax,DWORD PTR es:[edi]
  41d67b:	xchg   ebx,eax
  41d67c:	sbb    al,BYTE PTR [edx-0x46]
  41d67f:	mov    eax,0x4f5c55f7
  41d684:	popf   
  41d685:	inc    edi
  41d686:	mov    esi,0xfea979d2
  41d68b:	sti    
  41d68c:	fist   DWORD PTR [esi+0x6cf1cc91]
  41d692:	shl    BYTE PTR [eax],1
  41d694:	pop    esi
  41d695:	test   ebp,edx
  41d697:	cwde   
  41d698:	fild   DWORD PTR [edx+edi*4]
  41d69b:	sbb    BYTE PTR [ecx-0x78],dl
  41d69e:	dec    edi
  41d69f:	hlt    
  41d6a0:	scas   al,BYTE PTR es:[edi]
  41d6a1:	inc    esp
  41d6a2:	hlt    
  41d6a3:	fadd   DWORD PTR [ebp+0x78c07ad1]
  41d6a9:	push   ss
  41d6aa:	adc    al,0xb9
  41d6ac:	stos   DWORD PTR es:[edi],eax
  41d6ad:	mov    edx,0x60d4935d
  41d6b2:	pushw  ds
  41d6b4:	sbb    al,0x5d
  41d6b6:	adc    ch,BYTE PTR [ebp+0x12]
  41d6b9:	inc    edi
  41d6ba:	hlt    
  41d6bb:	mov    ebp,0x5d2a45c3
  41d6c0:	push   ecx
  41d6c1:	xor    al,0x88
  41d6c3:	sbb    dl,BYTE PTR [ebx]
  41d6c5:	lahf   
  41d6c6:	or     eax,0x667278e
  41d6cb:	pop    edi
  41d6cc:	in     eax,0xc0
  41d6ce:	adc    cl,BYTE PTR [edx-0x36]
  41d6d1:	xchg   ecx,eax
  41d6d2:	mov    dl,0x31
  41d6d4:	das    
  41d6d5:	js     0x41d695
  41d6d7:	mov    ebx,0xb1b9e704
  41d6dc:	and    esp,DWORD PTR [edx]
  41d6de:	js     0x41d6b2
  41d6e0:	mov    WORD PTR [ebp-0x6e],ds
  41d6e3:	push   esi
  41d6e4:	inc    esp
  41d6e5:	shl    BYTE PTR [edx-0x1a69c6a1],1
  41d6eb:	push   cs
  41d6ec:	jnp    0x41d72d
  41d6ee:	add    edi,DWORD PTR [ebx]
  41d6f0:	cmc    
  41d6f1:	cwde   
  41d6f2:	outs   dx,BYTE PTR ds:[esi]
  41d6f3:	repnz mov ds:0xf24c04fd,al
  41d6f9:	inc    edi
  41d6fa:	loope  0x41d70e
  41d6fc:	mov    gs,WORD PTR [edx]
  41d6fe:	mov    esi,0x5a7cf81c
  41d703:	out    dx,eax
  41d704:	sbb    ebp,DWORD PTR [ebx+0x6f1bf113]
  41d70a:	(bad)  
  41d70b:	mov    dl,0x34
  41d70d:	mov    ecx,DWORD PTR [ecx]
  41d70f:	sub    cl,BYTE PTR [edi+edx*2]
  41d712:	jg     0x41d69a
  41d714:	scas   al,BYTE PTR es:[edi]
  41d715:	mov    ebx,0xf75b7829
  41d71a:	call   0x37ac:0x225e916c
  41d721:	pop    es
  41d722:	mov    DWORD PTR [ebp+0x3463cebb],edx
  41d728:	xor    dh,BYTE PTR [esi+0x38028687]
  41d72e:	pop    ecx
  41d72f:	push   cs
  41d730:	inc    edi
  41d731:	pusha  
  41d732:	into   
  41d733:	(bad)  
  41d734:	out    dx,al
  41d735:	mov    ah,0xed
  41d737:	call   0x54aeb844
  41d73c:	ror    BYTE PTR [esi+0x29],cl
  41d73f:	retf   0xf853
  41d742:	push   0x778f1cd2
  41d747:	jl     0x41d7ad
  41d749:	(bad)
  41d74c:	cmc    
  41d74d:	push   ds
  41d74e:	pop    DWORD PTR [eax]
  41d750:	adc    bh,bl
  41d752:	xchg   ah,cl
  41d754:	jo     0x41d789
  41d756:	push   edi
  41d757:	out    dx,al
  41d758:	or     DWORD PTR cs:[esi+0x6a914d54],esi
  41d75f:	and    al,0x46
  41d761:	std    
  41d762:	jb     0x41d6e4
  41d764:	xchg   ebp,eax
  41d765:	in     eax,0xc3
  41d767:	in     al,0x12
  41d769:	xchg   ebx,eax
  41d76a:	outs   dx,BYTE PTR ds:[esi]
  41d76b:	loop   0x41d749
  41d76d:	inc    edx
  41d76e:	and    eax,DWORD PTR [esi-0x2a98bb53]
  41d774:	stc    
  41d775:	int    0x54
  41d777:	dec    ebp
  41d778:	ja     0x41d7a3
  41d77a:	fst    DWORD PTR [ecx+0x69]
  41d77d:	xchg   ebx,eax
  41d77e:	mov    ecx,0xba62ca4f
  41d783:	dec    esi
  41d784:	neg    ecx
  41d786:	(bad)
  41d78a:	xor    eax,ebp
  41d78c:	add    al,0x4f
  41d78e:	jb     0x41d7a2
  41d790:	xchg   edx,eax
  41d791:	xchg   ebx,eax
  41d792:	cmp    al,ah
  41d794:	jecxz  0x41d7dc
  41d796:	xchg   edi,eax
  41d797:	ficom  WORD PTR [edi]
  41d799:	sub    eax,0x77531d45
  41d79e:	mov    DWORD PTR [ebx-0x1880200c],esi
  41d7a4:	push   0x23
  41d7a6:	outs   dx,BYTE PTR ds:[esi]
  41d7a7:	mov    ecx,0xdb345b3b
  41d7ac:	dec    ebx
  41d7ad:	mov    eax,ds:0x73020fed
  41d7b2:	pop    ecx
  41d7b3:	aaa    
  41d7b4:	inc    ecx
  41d7b5:	and    al,0x3d
  41d7b7:	ret    0x7a5f
  41d7ba:	retf   
  41d7bb:	cmp    al,0x89
  41d7bd:	or     al,0xa0
  41d7bf:	out    0x23,al
  41d7c1:	dec    edi
  41d7c2:	dec    ebx
  41d7c3:	mov    dl,0x71
  41d7c5:	fsqrt  
  41d7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c8:	cmc    
  41d7c9:	in     al,dx
  41d7ca:	dec    edi
  41d7cb:	and    ah,BYTE PTR [edi-0x6c]
  41d7ce:	out    dx,al
  41d7cf:	push   esi
  41d7d0:	loop   0x41d758
  41d7d2:	shl    DWORD PTR [ebp+0x1b],cl
  41d7d5:	adc    eax,0xe5588722
  41d7da:	push   cs
  41d7db:	popf   
  41d7dc:	or     eax,0x631ff2b7
  41d7e1:	sub    eax,0x22a67116
  41d7e6:	adc    al,0x8c
  41d7e8:	adc    dh,BYTE PTR [eax+0x60]
  41d7eb:	or     bh,BYTE PTR [ecx]
  41d7ed:	xchg   esi,eax
  41d7ee:	pop    ebp
  41d7ef:	ret    
  41d7f0:	aam    0xbe
  41d7f2:	push   es
  41d7f3:	out    dx,al
  41d7f4:	(bad)  
  41d7f5:	pop    ecx
  41d7f6:	jbe    0x41d825
  41d7f8:	iret   
  41d7f9:	ds ret 0x4dd1
  41d7fd:	sub    DWORD PTR [ebp-0x6198867c],esi
  41d803:	jecxz  0x41d82a
  41d805:	or     eax,0xfd8607fc
  41d80a:	xor    bl,BYTE PTR [esi+ebx*2-0x14716812]
  41d811:	out    dx,al
  41d812:	inc    ecx
  41d813:	leave  
  41d814:	jnp    0x41d825
  41d816:	(bad)  
  41d817:	pop    edx
  41d818:	adc    eax,esi
  41d81a:	sahf   
  41d81b:	or     bh,BYTE PTR [edi+ebp*8-0x588b776b]
  41d822:	int    0xe0
  41d824:	dec    eax
  41d825:	out    dx,al
  41d826:	inc    eax
  41d827:	dec    edi
  41d828:	xchg   esi,eax
  41d829:	sub    BYTE PTR [ebp-0x25],0x4a
  41d82d:	xor    esi,DWORD PTR [edi+ecx*4+0x74]
  41d831:	jecxz  0x41d811
  41d833:	pop    ds
  41d834:	or     edi,DWORD PTR [esi+0x18]
  41d837:	add    DWORD PTR [eax],edx
  41d839:	sbb    esp,DWORD PTR [ebx+0x34]
  41d83c:	out    dx,eax
  41d83d:	(bad)  
  41d83e:	jne    0x41d89f
  41d840:	out    0x8,al
  41d842:	jg     0x41d818
  41d844:	add    DWORD PTR [ebp-0xa],esp
  41d847:	hlt    
  41d848:	push   cs
  41d849:	(bad)
  41d84e:	aad    0xf1
  41d850:	lods   al,BYTE PTR ds:[esi]
  41d851:	call   DWORD PTR [eax]
  41d853:	inc    ecx
  41d854:	in     eax,dx
  41d855:	imul   eax,ebp,0x10587ad
  41d85b:	mov    cl,0xbd
  41d85d:	sbb    dl,ah
  41d85f:	adc    bl,bl
  41d861:	cmp    DWORD PTR [edi+0x5e3f97ec],0x9cc1930a
  41d86b:	or     ecx,DWORD PTR [eax]
  41d86d:	sahf   
  41d86e:	stos   DWORD PTR es:[edi],eax
  41d86f:	pop    eax
  41d870:	mov    ecx,0x6928f590
  41d875:	lods   al,BYTE PTR ds:[esi]
  41d876:	sub    ebp,DWORD PTR [edx-0x2422bdd2]
  41d87c:	adc    eax,0x909780b1
  41d881:	in     al,dx
  41d882:	add    dh,dl
  41d884:	retf   
  41d885:	test   eax,0x839b2662
  41d88a:	mov    ds:0x64f854e3,al
  41d88f:	xlat   BYTE PTR ds:[ebx]
  41d890:	inc    esi
  41d891:	sub    dl,dh
  41d893:	pushw  es
  41d895:	cdq    
  41d896:	(bad)  
  41d897:	jmp    0x41d90c
  41d899:	cld    
  41d89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d89b:	mov    ecx,0xe41ec874
  41d8a0:	push   esp
  41d8a1:	jns    0x41d836
  41d8a3:	cmp    eax,esi
  41d8a5:	(bad)  
  41d8a6:	cmp    eax,0x53f8ffe1
  41d8ab:	dec    eax
  41d8ac:	scas   al,BYTE PTR es:[edi]
  41d8ad:	pop    ecx
  41d8ae:	dec    eax
  41d8af:	in     al,dx
  41d8b0:	mov    ds:0x734a11f5,eax
  41d8b5:	push   ebp
  41d8b6:	cmp    DWORD PTR [ecx-0x4a],esp
  41d8b9:	jmp    0x41d8f5
  41d8bb:	mov    ds:0x3a240efd,al
  41d8c0:	jl     0x41d85f
  41d8c2:	pop    ebx
  41d8c3:	ret    
  41d8c4:	add    al,BYTE PTR [ebx+0x63]
  41d8c7:	or     BYTE PTR [esi-0x63ef6809],ah
  41d8cd:	fimul  DWORD PTR [ebx]
  41d8cf:	mov    esp,0xf6abcf27
  41d8d4:	sbb    DWORD PTR [edi],0x99521c9e
  41d8da:	push   edi
  41d8db:	mov    ecx,0x22d92161
  41d8e0:	(bad)  
  41d8e1:	es hlt 
  41d8e3:	lock (bad) 
  41d8e6:	in     al,0xf4
  41d8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e9:	(bad)  
  41d8ea:	rcr    BYTE PTR [edi-0x268332fc],1
  41d8f0:	mov    ecx,0xa285e426
  41d8f5:	mov    DWORD PTR [ebp-0x6fdc2e4a],esp
  41d8fb:	cmp    DWORD PTR [ebx+0x5f98e0b2],edi
  41d901:	shr    edi,cl
  41d903:	test   BYTE PTR [edi+edi*8+0x3e48445],cl
  41d90a:	call   0x5b48:0xce4f2caf
  41d911:	xchg   ebx,eax
  41d912:	mov    WORD PTR [ebp+0x4e],?
  41d915:	rol    edx,cl
  41d917:	jge    0x41d8fe
  41d919:	push   esp
  41d91a:	(bad)  
  41d91b:	out    dx,al
  41d91c:	pop    ds
  41d91d:	mov    bh,0xfb
  41d91f:	iret   
  41d920:	sub    al,0xca
  41d922:	pop    ecx
  41d923:	into   
  41d924:	add    al,0x75
  41d926:	es dec esp
  41d928:	jp     0x41d8e0
  41d92a:	jmp    0x41d966
  41d92c:	xchg   esp,eax
  41d92d:	popf   
  41d92e:	push   ss
  41d92f:	mov    ds:0xbe751194,eax
  41d934:	stos   BYTE PTR es:[edi],al
  41d935:	retf   0xc3bf
  41d938:	xchg   ecx,eax
  41d939:	rcl    dl,0x3c
  41d93c:	cmp    ah,BYTE PTR [esp+ebp*2]
  41d93f:	scas   al,BYTE PTR es:[edi]
  41d940:	pop    eax
  41d941:	mov    dl,0x7e
  41d943:	or     DWORD PTR [esi+0x3e],ebp
  41d946:	pop    es
  41d947:	in     eax,dx
  41d948:	add    DWORD PTR [ebp+0x15],0x46
  41d94c:	cli    
  41d94d:	sar    BYTE PTR [edi],cl
  41d94f:	mov    ds:0x19980828,eax
  41d954:	(bad)  
  41d955:	mov    ebp,0x90275c6
  41d95b:	sbb    al,0xa1
  41d95d:	push   ebx
  41d95e:	mov    ebx,0xff6be678
  41d963:	inc    eax
  41d964:	outs   dx,BYTE PTR ds:[esi]
  41d965:	sub    ch,BYTE PTR ds:0x3d5304dc
  41d96b:	pop    ebx
  41d96c:	add    edx,ebx
  41d96e:	or     BYTE PTR [edx-0x72],bh
  41d971:	and    DWORD PTR [edi-0x7ff4d561],edi
  41d977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d978:	into   
  41d979:	arpl   WORD PTR [ecx+0x377a7a65],di
  41d97f:	shr    esp,1
  41d981:	adc    esi,edi
  41d983:	ins    DWORD PTR es:[edi],dx
  41d984:	lahf   
  41d985:	lds    edx,FWORD PTR gs:[ebp-0x7a]
  41d989:	sbb    BYTE PTR [ebp-0x4d],ch
  41d98c:	jno    0x41d9d9
  41d98e:	arpl   WORD PTR ds:0x9feb3780,cx
  41d994:	cdq    
  41d995:	pushf  
  41d996:	inc    edi
  41d997:	add    DWORD PTR [esi+0x0],ebp
  41d99a:	out    dx,eax
  41d99b:	jne    0x41d9da
  41d99d:	add    BYTE PTR [ebx+eax*1+0x66],bl
  41d9a1:	out    0xfd,al
  41d9a3:	jl     0x41d9ef
  41d9a5:	loope  0x41d973
  41d9a7:	(bad)  
  41d9a8:	push   ss
  41d9a9:	sahf   
  41d9aa:	in     al,dx
  41d9ab:	(bad)  
  41d9ac:	push   edx
  41d9ad:	sti    
  41d9ae:	cmp    bh,0x45
  41d9b1:	repnz adc esp,eax
  41d9b4:	iret   
  41d9b5:	in     eax,0x90
  41d9b7:	retf   0x9018
  41d9ba:	aas    
  41d9bb:	or     al,cl
  41d9bd:	adc    eax,0x3a790714
  41d9c2:	push   ebp
  41d9c3:	xlat   BYTE PTR ds:[ebx]
  41d9c4:	mov    dh,0x16
  41d9c6:	out    0x95,eax
  41d9c8:	sub    ecx,DWORD PTR [edi]
  41d9ca:	jmp    0xbd8f:0xa581003b
  41d9d1:	mov    ebp,0xdeec3382
  41d9d6:	jp     0x41d97d
  41d9d8:	dec    edi
  41d9d9:	and    al,0x20
  41d9db:	repnz xchg edi,eax
  41d9dd:	mov    eax,ds:0x98a3cc10
  41d9e2:	(bad)  
  41d9e3:	xor    DWORD PTR [ecx],eax
  41d9e5:	mov    ah,ah
  41d9e7:	push   edi
  41d9e8:	sbb    esp,DWORD PTR [edi+0x1b691783]
  41d9ee:	mov    edx,0x712adee0
  41d9f3:	hlt    
  41d9f4:	test   BYTE PTR [edi+0x1ea11efa],dh
  41d9fa:	xchg   ebx,eax
  41d9fb:	dec    ebx
  41d9fc:	ror    BYTE PTR [edi+0xc31dcf5],0xfb
  41da03:	sub    BYTE PTR [eax-0x9dd15c6],bl
  41da09:	sbb    eax,0xd746a955
  41da0e:	sub    al,0xf3
  41da10:	pusha  
  41da11:	std    
  41da12:	ds mov cl,0x3d
  41da15:	mov    fs,WORD PTR [ebx+0x1c095dd]
  41da1b:	rol    BYTE PTR [eax],1
  41da1d:	in     eax,0x44
  41da1f:	lods   al,BYTE PTR ds:[esi]
  41da20:	sbb    al,0xc1
  41da22:	add    al,0x59
  41da24:	jno    0x41da9a
  41da26:	(bad)  
  41da27:	sbb    bl,BYTE PTR [edi+0xd]
  41da2a:	ret    
  41da2b:	aas    
  41da2c:	push   0x7c
  41da2e:	mov    cl,0xf3
  41da30:	pop    ebp
  41da31:	cmp    BYTE PTR [ecx],dl
  41da33:	mov    esi,?
  41da35:	xchg   esp,eax
  41da36:	sbb    al,0xa3
  41da38:	push   esi
  41da39:	pusha  
  41da3a:	loope  0x41da24
  41da3c:	imul   DWORD PTR [ebp-0x19]
  41da3f:	iret   
  41da40:	fxrstor ds:0x71183b0b
  41da47:	out    dx,al
  41da48:	inc    esp
  41da49:	pop    ss
  41da4a:	lahf   
  41da4b:	xor    BYTE PTR [edx-0x13daf44e],al
  41da51:	mov    dl,0x8
  41da53:	out    dx,eax
  41da54:	dec    ecx
  41da55:	xor    DWORD PTR [edi],0x46
  41da58:	stc    
  41da59:	dec    ebp
  41da5a:	ds ins DWORD PTR es:[edi],dx
  41da5c:	adc    eax,0x4751f9c5
  41da61:	retf   0x1301
  41da64:	jne    0x41da72
  41da66:	pop    edi
  41da67:	jmp    0x5070:0x152d78e5
  41da6e:	mov    dl,0x54
  41da70:	mov    esi,0xebd3f5ab
  41da75:	arpl   WORD PTR [edi+0x1eaad7ca],sp
  41da7b:	add    eax,0xbdafc300
  41da80:	cdq    
  41da81:	les    eax,FWORD PTR [ebp-0x5d]
  41da84:	in     eax,0x60
  41da86:	inc    esi
  41da87:	dec    edi
  41da88:	ins    BYTE PTR es:[edi],dx
  41da89:	int3   
  41da8a:	dec    eax
  41da8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8c:	dec    eax
  41da8d:	jmp    0x41da3e
  41da8f:	sub    al,0x6b
  41da91:	iret   
  41da92:	and    DWORD PTR ds:0x96ff581e,eax
  41da98:	dec    eax
  41da99:	mov    al,0x1b
  41da9b:	sti    
  41da9c:	jge    0x41da45
  41da9e:	out    0x5a,al
  41daa0:	mov    al,BYTE PTR [esi+0x583219bd]
  41daa6:	cwde   
  41daa7:	xor    DWORD PTR [edi-0x1d],edx
  41daaa:	pop    ebp
  41daab:	push   ss
  41daac:	sti    
  41daad:	cwde   
  41daae:	xchg   ebp,eax
  41daaf:	adc    al,0x57
  41dab1:	xchg   ebx,eax
  41dab2:	and    al,BYTE PTR [ebx-0x215decf]
  41dab8:	ins    BYTE PTR es:[edi],dx
  41dab9:	fnsave [edx+0x474f85bd]
  41dabf:	jmp    0x41da46
  41dac1:	ret    0xd08a
  41dac4:	and    esp,DWORD PTR [esi+0xb]
  41dac7:	js     0x41daed
  41dac9:	jnp    0x41da83
  41dacb:	mov    esp,0x4668641c
  41dad0:	repz hlt 
  41dad2:	sar    BYTE PTR [esi],0xe0
  41dad5:	pop    ebp
  41dad6:	pop    ds
  41dad7:	and    al,0xcf
  41dad9:	xor    DWORD PTR [esi],edx
  41dadb:	inc    esp
  41dadc:	or     eax,DWORD PTR [ebx+0x2c]
  41dadf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae0:	or     BYTE PTR [eax],ah
  41dae2:	inc    edx
  41dae3:	xchg   esi,eax
  41dae4:	sub    ebp,DWORD PTR [edi+0x67]
  41dae7:	aad    0xf8
  41dae9:	popf   
  41daea:	dec    eax
  41daeb:	mov    ch,0x2a
  41daed:	push   0xffffffc8
  41daef:	out    dx,eax
  41daf0:	out    0x2b,al
  41daf2:	push   0x19
  41daf4:	addr16 dec edx
  41daf6:	jns    0x41db2c
  41daf8:	out    dx,al
  41daf9:	push   ss
  41dafa:	jb     0x41dacb
  41dafc:	inc    ebx
  41dafd:	(bad)  
  41dafe:	lock mov ds:0x1665bc5a,eax
  41db04:	jne    0x41daa2
  41db06:	and    al,0x4d
  41db08:	and    eax,0x21ac1b64
  41db0d:	je     0x41da94
  41db0f:	pop    ss
  41db10:	inc    ebp
  41db11:	jb     0x41dad7
  41db13:	xchg   edi,eax
  41db14:	or     edi,DWORD PTR [eax]
  41db16:	cli    
  41db17:	sbb    al,0x63
  41db19:	dec    esp
  41db1a:	ins    DWORD PTR es:[edi],dx
  41db1b:	fld    QWORD PTR [ebp-0x35]
  41db1e:	out    0x1,eax
  41db20:	stc    
  41db21:	dec    ecx
  41db22:	add    ebp,DWORD PTR [esi+0x4e]
  41db25:	cmp    BYTE PTR [ecx-0x4e6b4680],dh
  41db2b:	jbe    0x41daf2
  41db2d:	dec    edx
  41db2e:	aas    
  41db2f:	(bad)  
  41db32:	hlt    
  41db33:	push   0xffffffcb
  41db35:	jne    0x41db32
  41db37:	cmp    BYTE PTR [ebx],ah
  41db39:	jle    0x41db31
  41db3b:	add    al,0xf8
  41db3d:	sub    eax,0xf5fece70
  41db42:	out    dx,eax
  41db43:	mov    edi,DWORD PTR [edi+0x4bf3dc54]
  41db49:	in     eax,0xe2
  41db4b:	pop    edx
  41db4c:	pop    ss
  41db4d:	mov    WORD PTR [ebx],ss
  41db4f:	mov    ecx,0x734dbeaa
  41db54:	push   ecx
  41db55:	int    0xc0
  41db57:	gs out dx,eax
  41db59:	sar    DWORD PTR [ecx-0x3],0x8d
  41db5d:	ds jp  0x41db84
  41db60:	inc    ebx
  41db61:	pop    esp
  41db62:	xor    DWORD PTR [edx+0x2f],esp
  41db65:	mov    ah,0x43
  41db67:	xchg   BYTE PTR [ecx-0x5078d78a],bh
  41db6d:	stos   DWORD PTR es:[edi],eax
  41db6e:	out    dx,eax
  41db6f:	jmp    0xf7c4332c
  41db74:	sahf   
  41db75:	mov    BYTE PTR [edx],0xc4
  41db78:	pushf  
  41db79:	scas   eax,DWORD PTR es:[edi]
  41db7a:	imul   DWORD PTR [eax-0x9]
  41db7d:	loopne 0x41db8c
  41db7f:	loope  0x41db80
  41db81:	repz fsubr DWORD PTR ds:0x68f807ed
  41db88:	rcr    DWORD PTR [ebx+0x66],0x51
  41db8c:	mov    al,ds:0x38dade88
  41db91:	iret   
  41db92:	ds js  0x41db4d
  41db95:	iret   
  41db96:	test   eax,0x69d9db40
  41db9b:	lea    eax,[edi]
  41db9d:	test   BYTE PTR [edx-0x72ca540c],0xeb
  41dba4:	inc    edx
  41dba5:	retf   0xb88b
  41dba8:	fidivr WORD PTR [edx-0x3f]
  41dbab:	or     eax,0xb4558aee
  41dbb0:	inc    edi
  41dbb1:	stos   DWORD PTR es:[edi],eax
  41dbb2:	mov    dl,0xfe
  41dbb4:	mov    ecx,0x85462ef
  41dbb9:	fucomi st,st(0)
  41dbbb:	mov    al,0xa6
  41dbbd:	sbb    BYTE PTR [edi+edi*4],bl
  41dbc0:	repnz mov es,WORD PTR [ebx]
  41dbc3:	and    al,0x5c
  41dbc5:	aaa    
  41dbc6:	imul   BYTE PTR [esi+0x4e2dc24f]
  41dbcc:	jae    0x41db9a
  41dbce:	mov    ds:0x2e73eb5f,al
  41dbd3:	fisub  WORD PTR [ebp-0x3b]
  41dbd6:	adc    DWORD PTR [ebp+0x0],esp
  41dbd9:	fdiv   DWORD PTR [edi+ecx*4]
  41dbdc:	pop    ecx
  41dbdd:	cmp    BYTE PTR [ebp-0x33],cl
  41dbe0:	call   0x864a:0x51b52dbd
  41dbe7:	inc    ebx
  41dbe8:	mov    ecx,0x7bc01e68
  41dbed:	cmp    cl,BYTE PTR [ebp-0x26]
  41dbf0:	add    al,0x1a
  41dbf2:	test   BYTE PTR [ebx+0x3e],bl
  41dbf5:	popf   
  41dbf6:	cdq    
  41dbf7:	adc    DWORD PTR [ebx+0x35],ebp
  41dbfa:	fwait
  41dbfb:	ins    DWORD PTR es:[edi],dx
  41dbfc:	pop    esp
  41dbfd:	fdiv   DWORD PTR [ecx]
  41dbff:	or     edx,DWORD PTR [ebx]
  41dc01:	xchg   esp,eax
  41dc02:	fild   QWORD PTR [eax-0x38a5e70b]
  41dc08:	jnp    0x41dbac
  41dc0a:	sbb    eax,0xfd399514
  41dc0f:	retf   
  41dc10:	in     al,0x98
  41dc12:	and    eax,0x59407cbf
  41dc17:	or     DWORD PTR [eax],ebp
  41dc19:	jge    0x41dc16
  41dc1b:	sar    DWORD PTR [ecx+0x24],1
  41dc1e:	imul   ecx,edx,0xfffffff7
  41dc21:	data16 mov dh,0x2d
  41dc24:	push   esi
  41dc25:	jecxz  0x41dc2f
  41dc27:	sti    
  41dc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc29:	test   eax,esp
  41dc2b:	bts    DWORD PTR [edi-0x753c368c],edx
  41dc32:	jge    0x41dc08
  41dc34:	sbb    BYTE PTR ds:0x67cf902a,dl
  41dc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc3b:	(bad)  
  41dc3c:	fnstsw WORD PTR [ebx-0x44]
  41dc3f:	adc    BYTE PTR [esi],0xab
  41dc42:	aaa    
  41dc43:	(bad)  
  41dc44:	mov    edi,0x8b716c68
  41dc49:	inc    edi
  41dc4a:	inc    ebp
  41dc4b:	mov    ds:0x337cf95a,eax
  41dc50:	push   esp
  41dc51:	lods   al,BYTE PTR ds:[esi]
  41dc52:	loope  0x41dcc8
  41dc54:	mov    esp,0x2503d3f2
  41dc59:	xor    eax,0x98165ebd
  41dc5e:	leave  
  41dc5f:	pop    edi
  41dc60:	leave  
  41dc61:	aad    0xb6
  41dc63:	cmp    eax,0xa5b86970
  41dc68:	xchg   BYTE PTR [ecx+esi*4+0x3306ab5d],bh
  41dc6f:	mov    bh,0x9
  41dc71:	xlat   BYTE PTR ds:[ebx]
  41dc72:	shr    BYTE PTR [edx-0x70],0xe
  41dc76:	daa    
  41dc77:	xor    ah,BYTE PTR [ebx+0x5c]
  41dc7a:	sub    DWORD PTR [eax-0x2a29c1c],0x49e738ae
  41dc84:	(bad)  
  41dc85:	jmp    0x5a2873be
  41dc8a:	push   ebp
  41dc8b:	mov    DWORD PTR [ecx+0x15de2e9d],edi
  41dc91:	jne    0x41dccf
  41dc93:	xor    dh,BYTE PTR [esp+esi*1-0x16]
  41dc97:	aad    0x18
  41dc99:	fwait
  41dc9a:	dec    edi
  41dc9b:	fdiv   QWORD PTR [edx]
  41dc9d:	int    0xb2
  41dc9f:	je     0x41dc3d
  41dca1:	push   ds
  41dca2:	std    
  41dca3:	mov    eax,0x1d49ebdd
  41dca8:	add    BYTE PTR [edi+edi*2+0x7d],bh
  41dcac:	sub    dl,BYTE PTR [eax+0x34]
  41dcaf:	enter  0xf1af,0x73
  41dcb3:	out    0x74,eax
  41dcb5:	outs   dx,DWORD PTR ds:[esi]
  41dcb6:	sbb    al,0x5
  41dcb8:	stos   DWORD PTR es:[edi],eax
  41dcb9:	sbb    eax,0xf9d1fe48
  41dcbe:	fidivr WORD PTR [ecx]
  41dcc0:	xor    eax,0x59c6f9bc
  41dcc5:	(bad)  
  41dcc6:	and    al,0x95
  41dcc8:	jmp    0xb3e55f87
  41dccd:	stos   BYTE PTR es:[edi],al
  41dcce:	popa   
  41dccf:	mov    BYTE PTR [ebp+0x61],cl
  41dcd2:	mov    ecx,0xd5ce97a1
  41dcd7:	std    
  41dcd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcd9:	sbb    ecx,DWORD PTR [ebx-0x39]
  41dcdc:	dec    esp
  41dcdd:	mov    ch,0xba
  41dcdf:	ret    
  41dce0:	mov    bx,0xf7c8
  41dce4:	ins    BYTE PTR es:[edi],dx
  41dce5:	dec    eax
  41dce6:	addr16 ret 0x5eb2
  41dcea:	jbe    0x41dd07
  41dcec:	daa    
  41dced:	or     al,0xdf
  41dcef:	inc    edi
  41dcf0:	lods   al,BYTE PTR ds:[esi]
  41dcf1:	pop    edi
  41dcf2:	adc    BYTE PTR [edi+0x70],dh
  41dcf5:	add    bh,BYTE PTR [edi+0x17]
  41dcf8:	stc    
  41dcf9:	arpl   bp,ax
  41dcfb:	dec    esi
  41dcfc:	cmp    esp,ebp
  41dcfe:	stc    
  41dcff:	aad    0x1
  41dd01:	popf   
  41dd02:	sub    eax,0x8796fc86
  41dd07:	xacquire xchg DWORD PTR [esi+ebp*1+0x6ed141b8],ecx
  41dd0f:	cmp    esp,DWORD PTR [eax+0x7ea1a932]
  41dd15:	mov    esp,0x7a558a98
  41dd1a:	cmova  edi,DWORD PTR [edi-0x3a092ff8]
  41dd21:	push   esp
  41dd22:	ret    0x3c1
  41dd25:	cli    
  41dd26:	cdq    
  41dd27:	bound  edi,QWORD PTR [esi-0x3aaf1de9]
  41dd2d:	sub    al,0x92
  41dd2f:	hlt    
  41dd30:	pop    edi
  41dd31:	fsubr  st,st(3)
  41dd33:	add    al,0xb0
  41dd35:	ja     0x41dd5d
  41dd37:	test   al,0xd
  41dd39:	ffree  st(3)
  41dd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd3c:	and    ecx,DWORD PTR [ebp+ecx*4-0x679b4cf6]
  41dd43:	sahf   
  41dd44:	or     dl,BYTE PTR ds:0x7189ade7
  41dd4a:	push   cs
  41dd4b:	mov    al,ds:0x52449964
  41dd50:	fimul  DWORD PTR [edi]
  41dd52:	jb     0x41dce1
  41dd54:	adc    BYTE PTR [eax+0x4805bba3],0x15
  41dd5b:	push   ebx
  41dd5c:	rcl    DWORD PTR [ebx-0x7c],cl
  41dd5f:	push   esi
  41dd60:	pop    ds
  41dd61:	sub    al,0x3e
  41dd63:	mov    ?,ebx
  41dd65:	xchg   ebp,esp
  41dd67:	inc    ebx
  41dd68:	ror    BYTE PTR [edi+0x38be9863],1
  41dd6e:	lahf   
  41dd6f:	push   ebp
  41dd70:	lods   al,BYTE PTR ds:[esi]
  41dd71:	test   BYTE PTR [ebx+0x670b31b6],bh
  41dd77:	add    al,0x37
  41dd79:	sub    edi,DWORD PTR [ebx+0x7c]
  41dd7c:	dec    edi
  41dd7d:	call   0x5b8b:0x30bebbe3
  41dd84:	loopne 0x41ddb7
  41dd86:	(bad)
  41dd89:	jmp    0x86bb:0x9decffcb
  41dd90:	cmp    BYTE PTR [edx+0x22],bl
  41dd93:	fldenv [ecx-0x9c0b0f4]
  41dd99:	loope  0x41dd68
  41dd9b:	in     al,0x2d
  41dd9d:	xor    dh,BYTE PTR [ebx-0x53cefa72]
  41dda3:	add    DWORD PTR [esi+0x761970a8],esp
  41dda9:	in     al,dx
  41ddaa:	jmp    0x41de03
  41ddac:	(bad)  
  41ddae:	mul    ah
  41ddb0:	in     eax,0x7a
  41ddb2:	fs xchg edi,eax
  41ddb4:	stc    
  41ddb5:	ss cmc 
  41ddb7:	mov    bl,0x9e
  41ddb9:	mov    dl,0x3a
  41ddbb:	adc    BYTE PTR [ecx],cl
  41ddbd:	ins    DWORD PTR es:[edi],dx
  41ddbe:	mov    al,ds:0x19e73daf
  41ddc3:	cmp    BYTE PTR [esi],ch
  41ddc5:	test   al,0x57
  41ddc7:	sub    BYTE PTR [edx],ah
  41ddc9:	mov    dl,0x55
  41ddcb:	push   eax
  41ddcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddcd:	inc    edx
  41ddce:	in     al,dx
  41ddcf:	mov    ebx,cs
  41ddd1:	jecxz  0x41dd86
  41ddd3:	adc    al,0xf2
  41ddd5:	pop    eax
  41ddd6:	pushf  
  41ddd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd8:	adc    esi,DWORD PTR [ebp-0x5a2b4663]
  41ddde:	jg     0x41dd65
  41dde0:	into   
  41dde1:	dec    esi
  41dde2:	cli    
  41dde3:	cdq    
  41dde4:	fdivr  DWORD PTR [ebx]
  41dde6:	mov    bl,0xf4
  41dde8:	fmul   DWORD PTR [edi]
  41ddea:	fsubr  DWORD PTR [ebp+0x69]
  41dded:	clc    
  41ddee:	fmul   DWORD PTR [esi+ebx*8]
  41ddf1:	(bad)
  41ddf4:	adc    esp,DWORD PTR [eax]
  41ddf6:	fucomi st,st(7)
  41ddf8:	adc    al,0x6c
  41ddfa:	(bad)  
  41ddfb:	cmp    al,0xdf
  41ddfd:	aam    0xa3
  41ddff:	inc    eax
  41de00:	dec    al
  41de02:	xchg   edx,eax
  41de03:	push   eax
  41de04:	sub    ah,BYTE PTR [esi+0x627da069]
  41de0a:	ja     0x41dde7
  41de0c:	jnp    0x41ddfe
  41de0e:	mov    esi,0x46bc5632
  41de13:	jbe    0x41de4f
  41de15:	xor    DWORD PTR [edi],0x1d2dc771
  41de1b:	(bad)  
  41de1c:	xor    BYTE PTR [ebp-0x36],0x57
  41de20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de21:	ret    0x4efe
  41de24:	cwde   
  41de25:	shl    DWORD PTR [eax+0x5c00667c],cl
  41de2b:	pop    esp
  41de2c:	inc    ecx
  41de2d:	arpl   WORD PTR [ebp+0x62],ax
  41de30:	jmp    0x41dde0
  41de32:	xchg   BYTE PTR [edi],cl
  41de34:	cmp    ebp,DWORD PTR [edi+0x39483424]
  41de3a:	xor    edx,DWORD PTR [edi-0x7]
  41de3d:	push   ebx
  41de3e:	rol    DWORD PTR [edi+edi*2],0xdc
  41de42:	xor    dl,BYTE PTR [edi-0x36]
  41de45:	sti    
  41de46:	push   0xffffffbb
  41de48:	in     al,dx
  41de49:	call   0x28033ca7
  41de4e:	test   eax,0xbfe82f8b
  41de53:	and    cl,BYTE PTR [ecx]
  41de55:	pushf  
  41de56:	clc    
  41de57:	sar    DWORD PTR [eax-0x6d],cl
  41de5a:	push   esp
  41de5b:	in     eax,0xbe
  41de5d:	(bad)
  41de60:	dec    edi
  41de61:	stos   BYTE PTR es:[edi],al
  41de62:	retf   0xddc6
  41de65:	cmp    al,0xdd
  41de67:	pop    ss
  41de68:	dec    esi
  41de69:	mov    al,ds:0x2f97d6e3
  41de6e:	repnz mov eax,0x71f65bf0
  41de74:	mov    esi,ebx
  41de76:	outs   dx,BYTE PTR ds:[esi]
  41de77:	gs add al,0x1
  41de7a:	push   0x468bb6c5
  41de7f:	pop    ss
  41de80:	or     BYTE PTR [eax+eiz*4-0x7b6721d5],dl
  41de87:	inc    edi
  41de88:	aad    0xe7
  41de8a:	add    eax,0xce7414b5
  41de8f:	pop    ecx
  41de90:	int    0xc6
  41de92:	ficomp DWORD PTR [ecx+0x68b41f30]
  41de98:	les    esi,FWORD PTR [ebp+0x73]
  41de9b:	adc    ah,ah
  41de9d:	mov    ds:0x70770378,al
  41dea2:	sbb    BYTE PTR [ebp-0x58db8c5b],ch
  41dea8:	sbb    al,BYTE PTR [edi+eax*1-0x9]
  41deac:	mov    dl,0xf
  41deae:	cmp    al,0x42
  41deb0:	adc    eax,0x18f82b11
  41deb5:	icebp  
  41deb6:	ret    0x750b
  41deb9:	adc    edi,DWORD PTR [ecx-0x1]
  41debc:	mov    ch,0x49
  41debe:	mov    edx,DWORD PTR [ebx]
  41dec0:	and    eax,0x3b6c490
  41dec5:	repz fld QWORD PTR [edx+edi*1+0x5a76a102]
  41decd:	sar    DWORD PTR [ebx+0x7d],0xa2
  41ded1:	cs inc ecx
  41ded3:	in     eax,dx
  41ded4:	ins    DWORD PTR es:[edi],dx
  41ded5:	leave  
  41ded6:	gs jae 0x41df03
  41ded9:	push   eax
  41deda:	fcom   DWORD PTR [ebp-0x18d9fef]
  41dee0:	cli    
  41dee1:	pop    ss
  41dee2:	xchg   esi,eax
  41dee3:	push   edi
  41dee4:	mov    al,0x35
  41dee6:	lods   eax,DWORD PTR ds:[esi]
  41dee8:	(bad)  
  41dee9:	popf   
  41deea:	nop
  41deeb:	add    eax,DWORD PTR [edi-0x1]
  41deee:	xor    ebp,DWORD PTR [eax+eax*2]
  41def1:	aam    0xb9
  41def3:	ins    BYTE PTR es:[edi],dx
  41def4:	sti    
  41def5:	sbb    dl,cl
  41def7:	loopne 0x41df6d
  41def9:	xchg   edx,eax
  41defa:	shr    al,0x62
  41defd:	xor    al,dh
  41deff:	and    al,0xe0
  41df01:	popf   
  41df02:	lock lahf 
  41df04:	pop    edi
  41df05:	lods   eax,DWORD PTR ds:[esi]
  41df06:	mov    WORD PTR [esi+0x9ba22f7],cs
  41df0c:	scas   al,BYTE PTR es:[edi]
  41df0d:	imul   esp,DWORD PTR [eax+0x3305849f],0x44
  41df14:	mov    esp,0x8992b037
  41df19:	cld    
  41df1a:	loopne 0x41df63
  41df1c:	inc    ebx
  41df1d:	mov    ebx,0x7a957dac
  41df22:	or     BYTE PTR [edx-0x62],bh
  41df25:	push   ebx
  41df26:	imul   edi,eax,0xbda3e420
  41df2c:	repnz retf 
  41df2e:	in     eax,0xa5
  41df30:	dec    edx
  41df31:	pop    esi
  41df32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df33:	pop    edx
  41df34:	jae    0x41df7b
  41df36:	fsubr  QWORD PTR ds:0x232b6b50
  41df3c:	pop    eax
  41df3d:	pop    edi
  41df3e:	pop    ecx
  41df3f:	cs pop es
  41df41:	std    
  41df42:	das    
  41df43:	jb     0x41df3b
  41df45:	scas   al,BYTE PTR es:[edi]
  41df46:	retf   
  41df47:	add    BYTE PTR [ebp-0x30de3525],dh
  41df4d:	adc    ecx,DWORD PTR [ecx+0x34273bf2]
  41df53:	test   ebx,edi
  41df55:	ins    BYTE PTR es:[edi],dx
  41df56:	(bad)  
  41df57:	in     al,0xeb
  41df59:	sub    esi,DWORD PTR [edx+0x77]
  41df5c:	mov    ds:0x876c5780,eax
  41df61:	jnp    0x41dfc2
  41df63:	fidiv  DWORD PTR [edx+0x59]
  41df66:	int3   
  41df67:	push   esp
  41df68:	dec    ebx
  41df69:	or     BYTE PTR [edi+esi*1+0x6d2d8d07],cl
  41df70:	out    0x84,eax
  41df72:	pop    esp
  41df73:	fisttp WORD PTR [esi]
  41df75:	mov    WORD PTR [ecx+0x4a],fs
  41df78:	mov    bl,0xf3
  41df7a:	add    dh,dh
  41df7c:	lods   eax,DWORD PTR ds:[esi]
  41df7d:	pushf  
  41df7e:	out    0x40,al
  41df80:	add    DWORD PTR [ecx+eiz*8-0x6125ccb9],ebx
  41df87:	sbb    DWORD PTR [esi+ebp*8+0x26],ebp
  41df8b:	je     0x41df88
  41df8d:	inc    edi
  41df8e:	icebp  
  41df8f:	bound  esp,QWORD PTR [ecx+0x7e915076]
  41df95:	cmp    dh,BYTE PTR [ebx]
  41df97:	sbb    edi,DWORD PTR [esi+0x43]
  41df9a:	enter  0xf130,0x16
  41df9e:	mov    al,ds:0xad1509c3
  41dfa3:	mov    al,ds:0x4557f7aa
  41dfa8:	jg     0x41df77
  41dfaa:	dec    ecx
  41dfab:	and    edi,ecx
  41dfad:	xchg   ebx,eax
  41dfae:	jae    0x41e000
  41dfb0:	ror    DWORD PTR [eax],1
  41dfb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfb3:	hlt    
  41dfb4:	stos   BYTE PTR es:[edi],al
  41dfb5:	(bad)  
  41dfb7:	add    eax,0x93e820fd
  41dfbc:	dec    ebx
  41dfbd:	jg     0x41dfda
  41dfbf:	sar    DWORD PTR [ecx],0x1f
  41dfc2:	bound  edi,QWORD PTR [ebx+ecx*4+0x6b]
  41dfc6:	ja     0x41dfa4
  41dfc8:	je     0x41e017
  41dfca:	stc    
  41dfcb:	xchg   esp,eax
  41dfcc:	inc    ebp
  41dfcd:	sbb    edx,ebx
  41dfcf:	jbe    0x41df69
  41dfd1:	jge    0x41e009
  41dfd3:	fst    QWORD PTR [eax]
  41dfd5:	jmp    0x41dffe
  41dfd7:	fwait
  41dfd8:	jle    0x41dfae
  41dfda:	sub    eax,0x968193aa
  41dfdf:	mov    ecx,DWORD PTR [esi+0x659a1bda]
  41dfe5:	sbb    eax,0x4db805c7
  41dfea:	inc    edx
  41dfeb:	push   eax
  41dfec:	mov    ah,cl
  41dfee:	mov    eax,0xa3ab1460
  41dff3:	dec    ebx
  41dff4:	ds jno 0x41e027
  41dff7:	sahf   
  41dff8:	dec    esp
  41dff9:	pop    ds
  41dffa:	popf   
  41dffb:	mov    DWORD PTR [esp+edi*4+0x1a4dcbf1],ebx
  41e002:	mov    al,0xb5
  41e004:	sbb    eax,0x7b5f40eb
  41e009:	bound  esp,QWORD PTR [edx+eax*8]
  41e00c:	push   eax
  41e00d:	clc    
  41e00e:	stos   BYTE PTR es:[edi],al
  41e00f:	sar    DWORD PTR [esi],1
  41e011:	xchg   edx,eax
  41e012:	fmul   DWORD PTR [ebp+0xa3e1160]
  41e018:	test   BYTE PTR es:[ebx-0x12],bh
  41e01c:	mov    ds:0x4d671898,al
  41e021:	push   0xffffffeb
  41e023:	push   esi
  41e024:	test   eax,0x9fc38583
  41e029:	imul   ch
  41e02b:	daa    
  41e02c:	shl    ecx,1
  41e02e:	jmp    0xedfc:0x3f43bcf2
  41e035:	cs das 
  41e037:	mov    edi,0x2ddcd2df
  41e03c:	out    0x12,eax
  41e03e:	lock sub bl,bh
  41e041:	addr16 sub eax,0xe595fab3
  41e047:	push   ss
  41e048:	in     al,dx
  41e049:	adc    ah,BYTE PTR [ecx]
  41e04b:	xchg   esp,eax
  41e04c:	pop    eax
  41e04d:	pop    ss
  41e04e:	xchg   edx,eax
  41e04f:	xchg   esi,eax
  41e050:	xchg   DWORD PTR [ebp+ebp*8+0x24b9a6f],edx
  41e057:	jl     0x41e08a
  41e059:	xor    al,0xfe
  41e05b:	mov    DWORD PTR [edx],esp
  41e05d:	sub    eax,0x8d594e8c
  41e062:	outs   dx,BYTE PTR ds:[esi]
  41e063:	pop    esp
  41e064:	mov    dl,0x72
  41e066:	mov    al,0x3e
  41e068:	stc    
  41e069:	inc    eax
  41e06a:	gs sbb cl,bl
  41e06d:	mov    esp,0x25e99715
  41e072:	not    dh
  41e074:	pop    eax
  41e075:	mov    esp,0x5a12fa9b
  41e07a:	mov    DWORD PTR [ebp-0x20],edx
  41e07d:	inc    eax
  41e07e:	pop    ecx
  41e07f:	add    al,0x16
  41e081:	pop    ss
  41e082:	bound  ebp,QWORD PTR [ecx+0x41]
  41e085:	mov    BYTE PTR ss:[ebx+0x21400824],al
  41e08c:	cmp    BYTE PTR [eax+0x498c1cb4],ah
  41e092:	(bad)  
  41e093:	adc    BYTE PTR [ebp-0x3bdda620],al
  41e099:	push   esp
  41e09a:	(bad)  
  41e09b:	mov    eax,0x2cca848a
  41e0a0:	pop    ds
  41e0a1:	dec    eax
  41e0a2:	push   esi
  41e0a3:	dec    eax
  41e0a4:	ss inc ebp
  41e0a6:	inc    eax
  41e0a7:	or     DWORD PTR [ecx-0x18],edx
  41e0aa:	test   eax,0xb1ff1b56
  41e0af:	rol    ebp,1
  41e0b1:	mov    bh,0x54
  41e0b3:	dec    edi
  41e0b4:	mov    edi,0x3b8f35af
  41e0b9:	loopne 0x41e062
  41e0bb:	pop    ecx
  41e0bc:	cmp    BYTE PTR [esi+0x5b4ba758],cl
  41e0c2:	dec    edx
  41e0c3:	xchg   edi,eax
  41e0c4:	dec    esp
  41e0c5:	repz das 
  41e0c7:	push   eax
  41e0c8:	inc    ecx
  41e0c9:	xor    ah,bl
  41e0cb:	pop    ebx
  41e0cc:	ficomp WORD PTR [eax-0x72005e83]
  41e0d2:	cdq    
  41e0d3:	imul   ebx,DWORD PTR [ebx+ebp*1],0x36
  41e0d7:	and    bh,0xd4
  41e0da:	std    
  41e0db:	psubb  mm5,QWORD PTR [eax+edi*1]
  41e0df:	dec    edi
  41e0e0:	dec    edx
  41e0e1:	mov    ds:0xa04814e5,al
  41e0e6:	arpl   WORD PTR [esi],bx
  41e0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0e9:	mov    BYTE PTR [eax-0x39b1ded5],ah
  41e0ef:	ja     0x41e11d
  41e0f1:	or     esi,ebp
  41e0f3:	retf   
  41e0f4:	ss and al,0x31
  41e0f7:	push   ds
  41e0f8:	fcomi  st,st(3)
  41e0fa:	xor    BYTE PTR [esi-0x2a0e3833],0x8c
  41e101:	pushf  
  41e102:	ins    BYTE PTR es:[edi],dx
  41e103:	push   ss
  41e104:	das    
  41e105:	imul   ebp,DWORD PTR ds:0xfe6c5e8c,0x68c1be9f
  41e10f:	sbb    al,0xc4
  41e111:	push   ecx
  41e112:	dec    edi
  41e113:	or     eax,edi
  41e115:	push   0x1cf31e78
  41e11a:	repnz stos DWORD PTR es:[edi],eax
  41e11c:	lods   eax,DWORD PTR ds:[esi]
  41e11d:	scas   eax,DWORD PTR es:[edi]
  41e11e:	loopne 0x41e15f
  41e120:	mov    al,ds:0x6c8f5454
  41e125:	pushf  
  41e126:	or     bl,BYTE PTR cs:[eax+ebp*4+0x75097c6f]
  41e12e:	xchg   ebp,eax
  41e12f:	mov    BYTE PTR [ebp+0x8e2483d],dl
  41e135:	jo     0x41e183
  41e137:	mov    ebp,DWORD PTR [ebp+0x1d]
  41e13a:	and    edx,0x49eae04e
  41e140:	xor    al,al
  41e142:	xchg   edx,eax
  41e143:	cdq    
  41e144:	jg     0x41e141
  41e146:	xor    eax,0xdb69f4f5
  41e14b:	stc    
  41e14c:	bound  esp,QWORD PTR ss:[bp+si-0x1f]
  41e151:	stc    
  41e152:	in     eax,0x50
  41e154:	popf   
  41e155:	xor    BYTE PTR [ecx-0x22],dh
  41e158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e159:	cmp    DWORD PTR [ebx],edi
  41e15b:	pop    es
  41e15c:	inc    edi
  41e15d:	into   
  41e15e:	mov    DWORD PTR [edi-0x2e],esp
  41e161:	int    0x5c
  41e163:	out    dx,eax
  41e164:	std    
  41e165:	scas   eax,DWORD PTR es:[edi]
  41e166:	lods   al,BYTE PTR ds:[esi]
  41e167:	push   0x28
  41e169:	out    0x49,al
  41e16b:	imul   ebx,DWORD PTR [esi-0x4c],0x13568431
  41e172:	adc    bh,BYTE PTR [ebp+0x4d759adb]
  41e178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e179:	jbe    0x41e179
  41e17b:	fidivr WORD PTR [esi+0xc]
  41e17e:	jl     0x41e133
  41e180:	mov    ebx,0x4c448b9e
  41e185:	sbb    BYTE PTR [edx-0x71c32193],ch
  41e18b:	xor    al,0x7f
  41e18d:	popf   
  41e18e:	les    ecx,FWORD PTR [esi+0x6b5b59ae]
  41e194:	jmp    DWORD PTR [edx+0x6a]
  41e197:	mov    ecx,0x1c6e79bf
  41e19c:	imul   dl
  41e19e:	cli    
  41e19f:	or     dh,BYTE PTR [ecx+edi*2-0x395f1141]
  41e1a6:	loope  0x41e1cd
  41e1a8:	dec    ecx
  41e1a9:	inc    esi
  41e1aa:	seto   bl
  41e1ad:	mov    esp,0x7b6e9074
  41e1b2:	fsub   DWORD PTR ds:0x7902295
  41e1b8:	sub    bh,BYTE PTR [edx-0x1a]
  41e1bb:	xchg   ecx,eax
  41e1bc:	gs test eax,0xaa1f022b
  41e1c2:	pop    ecx
  41e1c3:	in     eax,dx
  41e1c4:	jae    0x41e224
  41e1c6:	sub    al,0x34
  41e1c8:	mov    edi,0xd69771dd
  41e1cd:	add    eax,0xe8fd90b3
  41e1d2:	xchg   BYTE PTR [eax-0xdc20c5f],dh
  41e1d8:	popf   
  41e1d9:	and    bh,BYTE PTR [eax-0x5fbca68]
  41e1df:	push   esi
  41e1e0:	mov    esi,0xb2ca0935
  41e1e5:	jge    0x41e1dc
  41e1e7:	add    ecx,DWORD PTR [edx+0x67a8b25d]
  41e1ed:	inc    ecx
  41e1ee:	xchg   DWORD PTR [ecx+0x29],eax
  41e1f1:	or     al,BYTE PTR [ebp-0x7d]
  41e1f4:	mov    ch,0x2a
  41e1f6:	pop    edi
  41e1f7:	mov    ebx,0xeac9846c
  41e1fc:	xchg   esi,eax
  41e1fd:	push   ecx
  41e1fe:	sbb    eax,0xe9fac80c
  41e203:	aas    
  41e204:	and    BYTE PTR [ebx],dl
  41e206:	sub    eax,0x69af7e1b
  41e20b:	ins    DWORD PTR es:[edi],dx
  41e20c:	mov    ebp,0x4fbe6d2
  41e211:	inc    esi
  41e212:	xchg   esp,esi
  41e214:	stos   DWORD PTR es:[edi],eax
  41e215:	xor    ebp,DWORD PTR ds:0x4f30ec59
  41e21b:	or     DWORD PTR [edx-0x49],0x75c65439
  41e222:	cmp    eax,0xc6d53132
  41e227:	aas    
  41e228:	hlt    
  41e229:	pop    esp
  41e22a:	pushf  
  41e22b:	add    eax,0xf5a685e2
  41e230:	outs   dx,BYTE PTR ds:[esi]
  41e231:	stos   DWORD PTR es:[edi],eax
  41e232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e233:	jno    0x41e1ff
  41e235:	sbb    ch,ch
  41e237:	shr    bl,0x1
  41e23a:	hlt    
  41e23b:	push   ebp
  41e23c:	sahf   
  41e23d:	fsubr  DWORD PTR [eax]
  41e23f:	and    al,0x81
  41e241:	add    al,BYTE PTR [esi-0x3e]
  41e244:	jo     0x41e2ab
  41e246:	adc    al,0x20
  41e248:	mov    al,cl
  41e24a:	mov    esp,0x1c13daf1
  41e24f:	es retf 0xebc5
  41e253:	aas    
  41e254:	rcr    BYTE PTR [edi],cl
  41e256:	test   al,0xd5
  41e258:	jle    0x41e24e
  41e25a:	out    dx,eax
  41e25b:	lahf   
  41e25c:	clc    
  41e25d:	xor    ah,0x37
  41e260:	xchg   edx,eax
  41e261:	or     eax,0xe427c6b7
  41e266:	pop    edi
  41e267:	pop    edx
  41e268:	cmp    BYTE PTR [edi+0x5c741410],0xeb
  41e26f:	dec    esp
  41e270:	fisttp QWORD PTR [edi+0x44]
  41e273:	retf   
  41e274:	or     edx,edx
  41e276:	inc    esp
  41e277:	sub    edi,esi
  41e279:	inc    eax
  41e27a:	push   ebp
  41e27b:	or     esi,DWORD PTR ds:0x36f53402
  41e281:	xor    eax,DWORD PTR [ebx+esi*1+0x3a04e888]
  41e288:	daa    
  41e289:	or     edi,ecx
  41e28b:	std    
  41e28c:	xchg   ebx,esi
  41e28e:	push   ebp
  41e28f:	jle    0x41e282
  41e291:	out    dx,al
  41e292:	sti    
  41e293:	fnstenv [esp+ebp*4-0x6f]
  41e297:	inc    ebp
  41e298:	mov    eax,0xaba8803
  41e29d:	mov    bl,0x17
  41e29f:	pop    esi
  41e2a0:	mov    ebp,0x3da7cc2a
  41e2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a6:	push   0x3e65192
  41e2ab:	out    dx,al
  41e2ac:	rol    BYTE PTR [edi+0x31643412],0x1b
  41e2b3:	lods   eax,DWORD PTR ds:[esi]
  41e2b4:	push   eax
  41e2b5:	test   al,0x5c
  41e2b7:	fdiv   st,st(0)
  41e2b9:	ins    DWORD PTR es:[edi],dx
  41e2ba:	pop    edx
  41e2bb:	in     al,0xa3
  41e2bd:	adc    BYTE PTR [edx-0x18],0xf5
  41e2c1:	shr    BYTE PTR [esi+0x70],cl
  41e2c4:	jno    0x41e2e0
  41e2c6:	aas    
  41e2c7:	jb     0x41e302
  41e2c9:	push   ebx
  41e2ca:	xchg   edi,eax
  41e2cb:	shl    DWORD PTR [eax],cl
  41e2cd:	dec    edx
  41e2ce:	sbb    eax,0xb207dca9
  41e2d3:	inc    ecx
  41e2d4:	dec    ebp
  41e2d5:	push   ds
  41e2d6:	adc    ah,BYTE PTR [ebx+0x5861b99e]
  41e2dc:	dec    esp
  41e2dd:	push   edx
  41e2de:	mov    ebp,DWORD PTR [esi-0x77639080]
  41e2e4:	xchg   esi,eax
  41e2e5:	nop
  41e2e6:	out    0x9d,al
  41e2e8:	lea    ebp,[edx-0x1f]
  41e2eb:	sbb    al,BYTE PTR [edx+0x52]
  41e2ee:	xchg   edi,eax
  41e2ef:	sbb    eax,esi
  41e2f1:	pop    ds
  41e2f2:	mov    dh,0x36
  41e2f4:	pop    ebx
  41e2f5:	xchg   edi,eax
  41e2f6:	retf   0x9975
  41e2f9:	test   DWORD PTR [ebp-0x54a39ecb],eax
  41e2ff:	cmp    al,0x5
  41e301:	(bad)  
  41e302:	mov    cl,0x22
  41e304:	add    al,0x58
  41e306:	push   ecx
  41e307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e308:	add    ecx,DWORD PTR [ebx+ebp*4+0x70acde3c]
  41e30f:	push   edi
  41e310:	xor    al,0x0
  41e312:	rol    DWORD PTR [edx-0x1a72b00],1
  41e318:	jg     0x41e2ef
  41e31a:	mov    bl,bh
  41e31c:	xchg   ebp,eax
  41e31d:	cmp    edx,edx
  41e31f:	or     BYTE PTR [ebp+0x3f43c617],bh
  41e325:	call   0xfeeb3dd
  41e32a:	mov    DWORD PTR [eax+0x64a5196b],0x159f558a
  41e334:	stc    
  41e335:	repnz sbb dh,dl
  41e338:	jl     0x41e302
  41e33a:	test   al,0xf7
  41e33c:	dec    ebx
  41e33d:	dec    ebx
  41e33e:	aaa    
  41e33f:	test   eax,0x518a6c79
  41e344:	push   es
  41e345:	in     eax,dx
  41e346:	pop    esi
  41e347:	xor    BYTE PTR [esi],al
  41e349:	dec    ecx
  41e34a:	ins    DWORD PTR es:[edi],dx
  41e34b:	sbb    ebp,ebx
  41e34d:	xchg   BYTE PTR [eax+0x74094e55],ah
  41e353:	int    0x2
  41e355:	scas   eax,DWORD PTR es:[edi]
  41e356:	jmp    0xc23e:0xd318393a
  41e35d:	mov    ah,0xa3
  41e35f:	sbb    al,0xa6
  41e361:	xchg   DWORD PTR [edi],eax
  41e363:	ss loope 0x41e322
  41e366:	jg     0x41e3b6
  41e368:	cli    
  41e369:	jle    0x41e331
  41e36b:	adc    eax,0x9bbb741e
  41e370:	(bad)  
  41e371:	in     al,dx
  41e372:	and    al,0x74
  41e374:	sar    BYTE PTR [eax],1
  41e376:	out    0xc9,al
  41e378:	sub    al,0x50
  41e37a:	repnz retf 
  41e37c:	mov    ds:0x7649513a,eax
  41e381:	push   0xffffffa3
  41e383:	sar    eax,0x77
  41e386:	inc    edx
  41e387:	daa    
  41e388:	jae    0x41e322
  41e38a:	mul    BYTE PTR [edi-0x5]
  41e38d:	ror    BYTE PTR [ebx+0x5837141d],cl
  41e393:	retf   
  41e394:	sar    DWORD PTR [edi+0x39ef96c9],cl
  41e39a:	sbb    al,0x35
  41e39c:	call   FWORD PTR [edi+0x29f1c136]
  41e3a2:	rcl    bl,0x28
  41e3a5:	xchg   BYTE PTR [edx],ch
  41e3a7:	in     eax,0xea
  41e3a9:	mov    esi,0xf99a167a
  41e3ae:	adc    DWORD PTR [eax],edi
  41e3b0:	mov    dl,BYTE PTR [ebp+0x1fb1739c]
  41e3b6:	push   esp
  41e3b7:	sub    eax,0xd6dd775a
  41e3bc:	push   0xffffffa8
  41e3be:	dec    edi
  41e3bf:	cmp    dh,ch
  41e3c1:	mov    esi,0x37f3bd57
  41e3c6:	les    ebp,FWORD PTR [ebx-0x4e]
  41e3c9:	shl    DWORD PTR [eax+esi*2-0x6c23c68d],0x85
  41e3d1:	addr16 dec edx
  41e3d3:	jne    0x41e410
  41e3d5:	xchg   ecx,eax
  41e3d6:	pop    ds
  41e3d7:	xchg   edi,eax
  41e3d8:	out    0xf4,al
  41e3da:	add    BYTE PTR [esi],al
  41e3dc:	out    0x86,al
  41e3de:	sbb    BYTE PTR [eax],0x92
  41e3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e2:	cdq    
  41e3e3:	pop    es
  41e3e4:	or     ch,BYTE PTR ds:0xa83390f3
  41e3ea:	inc    ebp
  41e3eb:	cdq    
  41e3ec:	dec    esi
  41e3ed:	add    DWORD PTR [ecx],0xf2472de0
  41e3f3:	sub    al,0x21
  41e3f5:	fucom  st(3)
  41e3f7:	enter  0xaf83,0x45
  41e3fb:	in     al,dx
  41e3fc:	xchg   esi,eax
  41e3fd:	in     al,0xd7
  41e3ff:	mov    ds:0x411ecc21,eax
  41e404:	test   dl,0xd2
  41e407:	add    eax,0xa3faa2b7
  41e40c:	add    DWORD PTR [esi+0xb],edx
  41e40f:	hlt    
  41e410:	mov    ebp,0xcf2aed8a
  41e415:	in     eax,0x38
  41e417:	mul    eax
  41e419:	sub    BYTE PTR [eax+0x4f],dh
  41e41c:	or     esi,DWORD PTR [ecx-0x5e987172]
  41e422:	ins    BYTE PTR es:[edi],dx
  41e423:	mul    DWORD PTR [esi-0x6c]
  41e426:	dec    eax
  41e427:	inc    ecx
  41e428:	loop   0x41e451
  41e42a:	cmp    ecx,edx
  41e42c:	mov    bh,0xc5
  41e42e:	sbb    eax,0x90c0469b
  41e433:	leave  
  41e434:	test   BYTE PTR [edx],0x50
  41e437:	pop    eax
  41e438:	xchg   ebx,eax
  41e439:	inc    ebx
  41e43a:	fcmovb st,st(3)
  41e43c:	(bad)  
  41e43d:	pop    ebp
  41e43e:	dec    esi
  41e43f:	or     DWORD PTR [eax],ebp
  41e441:	sbb    eax,0xc6518e59
  41e446:	push   0xc30240c2
  41e44b:	fs test ah,bh
  41e44e:	mov    DWORD PTR es:[edi-0x72d596d0],esi
  41e455:	nop
  41e456:	test   al,0xfd
  41e458:	mov    ch,0xeb
  41e45a:	xchg   ecx,eax
  41e45b:	sub    ecx,ecx
  41e45d:	mov    ah,0xa2
  41e45f:	xchg   edx,eax
  41e460:	jl     0x41e41d
  41e462:	xchg   edi,eax
  41e463:	xor    cl,BYTE PTR [ecx+0x1]
  41e466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e467:	xlat   BYTE PTR ds:[ebx]
  41e468:	mov    ecx,0x7a9b714c
  41e46d:	das    
  41e46e:	std    
  41e46f:	fiadd  WORD PTR ds:0xc1c59248
  41e475:	js     0x41e3fe
  41e477:	pop    esp
  41e478:	cwde   
  41e479:	cmp    ebp,DWORD PTR [ebx+0x56]
  41e47c:	jno    0x41e4a6
  41e47e:	into   
  41e47f:	dec    esp
  41e480:	out    dx,al
  41e481:	in     eax,0x77
  41e483:	(bad)  es:[edx]
  41e486:	call   0xd916e98d
  41e48b:	test   ebp,0x7a19a5fb
  41e491:	leave  
  41e492:	push   0xffffffd2
  41e494:	push   edx
  41e495:	xor    ebp,DWORD PTR [ebx]
  41e497:	inc    esi
  41e498:	push   edi
  41e499:	sub    DWORD PTR ds:0x7d726b9,ecx
  41e49f:	jns    0x41e494
  41e4a1:	shl    DWORD PTR [ebp-0x4ff8be68],1
  41e4a7:	out    dx,eax
  41e4a8:	pop    edi
  41e4a9:	sub    eax,0x8c5208e7
  41e4ae:	cld    
  41e4af:	jmp    0xfaa6:0x8a42ff0e
  41e4b6:	xor    BYTE PTR [esi],ah
  41e4b8:	mov    edx,0x27a0b06a
  41e4bd:	sub    esi,DWORD PTR [ebx-0x45119f0]
  41e4c3:	mov    dl,0x7e
  41e4c5:	in     eax,0x2b
  41e4c7:	cwde   
  41e4c8:	ja     0x41e4eb
  41e4ca:	(bad)  
  41e4cb:	and    edi,DWORD PTR [edx-0x3a25f897]
  41e4d1:	int    0x1c
  41e4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d4:	and    DWORD PTR [eax-0x232a470f],ebp
  41e4da:	je     0x41e558
  41e4dc:	ss jno 0x41e4e4
  41e4df:	iret   
  41e4e0:	data16 jmp 0x41e4d2
  41e4e3:	scas   eax,DWORD PTR es:[edi]
  41e4e4:	cmp    BYTE PTR [ebx-0x3be1cf73],dh
  41e4ea:	es arpl cx,cx
  41e4ed:	pop    esp
  41e4ee:	mov    ds:0xd9099549,al
  41e4f3:	retf   0xee8e
  41e4f6:	fld    DWORD PTR [ecx-0x42c89a9b]
  41e4fc:	pop    esp
  41e4fd:	or     ch,ah
  41e4ff:	cmp    edi,edx
  41e501:	add    al,0x3e
  41e503:	cdq    
  41e504:	jmp    0x41e572
  41e506:	jg     0x41e4a9
  41e508:	mov    DWORD PTR [ecx-0x67e616d],edi
  41e50e:	fnsave [esi]
  41e510:	push   es
  41e511:	push   ebx
  41e512:	fisubr WORD PTR [esi+0x497b187c]
  41e518:	scas   eax,DWORD PTR es:[edi]
  41e519:	ja     0x41e4c1
  41e51b:	jne    0x41e4cf
  41e51d:	xor    bh,cl
  41e51f:	sbb    dl,BYTE PTR [edi]
  41e521:	scas   al,BYTE PTR es:[edi]
  41e522:	adc    edx,DWORD PTR [eax+0x36]
  41e525:	lea    eax,[edi+0xf]
  41e528:	idiv   DWORD PTR [esi-0x32ff2e1d]
  41e52e:	shr    cl,1
  41e530:	or     edi,DWORD PTR [ebp-0x1]
  41e533:	mov    al,0x4d
  41e535:	mov    cl,BYTE PTR [ebx]
  41e537:	loopne 0x41e5af
  41e539:	push   es
  41e53a:	xor    dl,BYTE PTR [ebp+0x3d8f23ca]
  41e540:	add    al,0x3d
  41e542:	repz jge 0x41e52a
  41e545:	push   cs
  41e546:	add    eax,0xef4ef76c
  41e54b:	fnsave [ebp-0x3]
  41e54e:	hlt    
  41e54f:	int3   
  41e550:	dec    ebp
  41e551:	scas   al,BYTE PTR es:[edi]
  41e552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e553:	adc    BYTE PTR [eax],bh
  41e555:	ds dec ebx
  41e557:	jp     0x41e4ee
  41e559:	outs   dx,BYTE PTR ds:[esi]
  41e55a:	(bad)  
  41e55b:	repz sti 
  41e55d:	sub    edx,DWORD PTR [ecx]
  41e55f:	and    BYTE PTR [edi-0x1c],ah
  41e562:	jns    0x41e54f
  41e564:	push   ecx
  41e565:	adc    ebp,DWORD PTR [eax]
  41e567:	adc    eax,0xcbfc52bf
  41e56c:	push   ebp
  41e56d:	test   eax,0x74a0090c
  41e572:	enter  0x731e,0x1a
  41e576:	jle    0x41e595
  41e578:	rcr    al,cl
  41e57a:	leave  
  41e57b:	pop    esi
  41e57c:	mov    bh,0x8c
  41e57e:	mov    bl,0x39
  41e580:	adc    ecx,ebp
  41e582:	into   
  41e583:	ficomp WORD PTR [ecx]
  41e585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e586:	mov    eax,ds:0xbdeb76ad
  41e58b:	stc    
  41e58c:	sub    eax,0x792e42b9
  41e591:	mov    ch,0x9e
  41e593:	hlt    
  41e594:	das    
  41e595:	push   esi
  41e596:	xlat   BYTE PTR ds:[ebx]
  41e597:	js     0x41e5d9
  41e599:	push   eax
  41e59a:	nop
  41e59b:	jbe    0x41e560
  41e59d:	pushf  
  41e59e:	mov    bh,ch
  41e5a0:	out    dx,eax
  41e5a1:	(bad)  [ebp+eiz*4+0x464f8b4d]
  41e5a8:	sbb    DWORD PTR [ebp-0x1],ebp
  41e5ab:	es test dh,cl
  41e5ae:	out    0xdc,eax
  41e5b0:	outs   dx,DWORD PTR ds:[esi]
  41e5b1:	jo     0x41e59c
  41e5b3:	pop    ss
  41e5b4:	cmc    
  41e5b5:	(bad)  
  41e5b7:	mov    esp,fs
  41e5b9:	pusha  
  41e5ba:	xor    cl,ch
  41e5bc:	das    
  41e5bd:	add    bh,bl
  41e5bf:	dec    ecx
  41e5c0:	int3   
  41e5c1:	nop
  41e5c2:	sub    al,0xf
  41e5c4:	arpl   WORD PTR [edi],cx
  41e5c6:	pop    edx
  41e5c7:	pop    esp
  41e5c8:	jae    0x41e594
  41e5ca:	mov    BYTE PTR [eax],bl
  41e5cc:	mov    eax,0x7a295f67
  41e5d1:	cld    
  41e5d2:	daa    
  41e5d3:	das    
  41e5d4:	adc    BYTE PTR [edx],0x82
  41e5d7:	jle    0x41e5ff
  41e5d9:	fidivr WORD PTR [esi-0x6a]
  41e5dc:	imul   edi,eax,0x6a
  41e5df:	test   DWORD PTR cs:[edi+0x2f],0x37d2341
  41e5e7:	orps   xmm5,xmm7
  41e5ea:	cmc    
  41e5eb:	ret    0x4e5f
  41e5ee:	dec    esi
  41e5ef:	pop    esp
  41e5f0:	cwde   
  41e5f1:	push   ds
  41e5f2:	dec    edx
  41e5f3:	jle    0x41e59b
  41e5f5:	dec    esi
  41e5f6:	clc    
  41e5f7:	out    0x53,eax
  41e5f9:	fst    QWORD PTR [eax]
  41e5fb:	mov    esi,0xdc04a45a
  41e600:	adc    eax,0x69999dcb
  41e605:	xchg   edx,eax
  41e606:	add    esp,ecx
  41e608:	test   BYTE PTR [esi],bh
  41e60a:	jmp    FWORD PTR [eax-0x11]
  41e60d:	or     BYTE PTR ds:0x58700e08,bh
  41e613:	ficomp WORD PTR [eax]
  41e615:	jmp    0xe0a7:0x5d217c74
  41e61c:	pop    ds
  41e61d:	and    ebx,edi
  41e61f:	pushf  
  41e620:	int3   
  41e621:	or     BYTE PTR [edx],bl
  41e623:	mov    ds:0xa463836a,eax
  41e628:	dec    esi
  41e629:	ds mov eax,0x7f152e52
  41e62f:	popa   
  41e630:	dec    esp
  41e631:	int3   
  41e632:	sbb    BYTE PTR [ebx+0x18548add],dl
  41e638:	jnp    0x41e5cb
  41e63a:	daa    
  41e63b:	sub    al,BYTE PTR [edi+edx*2]
  41e63e:	and    esp,DWORD PTR ds:[edi-0x67]
  41e642:	push   0xda6b78c2
  41e647:	popf   
  41e648:	jg     0x41e683
  41e64a:	and    ch,BYTE PTR ds:0x8a2abb76
  41e650:	pushf  
  41e651:	and    al,0x43
  41e653:	test   eax,ebx
  41e655:	adc    DWORD PTR [edx],ecx
  41e657:	jle    0x41e6bb
  41e659:	mov    bh,0xce
  41e65b:	adc    DWORD PTR [esi+edi*1],ebp
  41e65e:	add    eax,0x698226db
  41e663:	jbe    0x41e679
  41e665:	inc    ecx
  41e666:	add    ecx,eax
  41e668:	rcl    BYTE PTR [edx-0x4c],0x66
  41e66c:	(bad)  
  41e66d:	pop    ds
  41e66e:	ret    
  41e66f:	mul    BYTE PTR [esi-0x6b82aa9b]
  41e675:	loope  0x41e6bb
  41e677:	sub    eax,0x50c84a3c
  41e67c:	aam    0x26
  41e67e:	addr16 jmp 0xa145:0x171f2d7b
  41e686:	push   eax
  41e687:	outs   dx,DWORD PTR ds:[esi]
  41e688:	push   esp
  41e689:	adc    BYTE PTR [eax-0x16],ah
  41e68c:	call   0x5e8d61a7
  41e691:	push   sp
  41e693:	adc    ecx,DWORD PTR [ebx+eiz*8-0x1212cc48]
  41e69a:	adc    ebx,ebp
  41e69c:	loop   0x41e688
  41e69e:	mov    al,0x31
  41e6a0:	in     al,dx
  41e6a1:	leave  
  41e6a2:	push   es
  41e6a3:	pop    esi
  41e6a4:	jecxz  0x41e6f1
  41e6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6a7:	inc    edi
  41e6a8:	mov    ch,0x7c
  41e6aa:	dec    eax
  41e6ab:	adc    edi,DWORD PTR [ebp+0x7de49acc]
  41e6b1:	aaa    
  41e6b2:	mov    WORD PTR [ebx+0x31],fs
  41e6b5:	sub    BYTE PTR [ecx+0x75],0xa
  41e6b9:	fnsave [edi-0x61d11409]
  41e6bf:	adc    DWORD PTR [esi],0x910cd6df
  41e6c5:	lahf   
  41e6c6:	xor    al,BYTE PTR ss:[eax-0x4a2bec16]
  41e6cd:	imul   ebx,DWORD PTR [ebx-0x24],0x61
  41e6d1:	pop    DWORD PTR [esi-0x657942dc]
  41e6d7:	push   ecx
  41e6d8:	mov    ecx,0x72e44cb9
  41e6dd:	cmc    
  41e6de:	(bad)  
  41e6df:	xchg   esi,eax
  41e6e0:	pusha  
  41e6e1:	push   eax
  41e6e2:	mov    ds:0x44f254f7,eax
  41e6e7:	gs nop
  41e6e9:	cmp    al,0x97
  41e6eb:	sbb    ecx,DWORD PTR [edi]
  41e6ed:	loope  0x41e70b
  41e6ef:	arpl   WORD PTR [ecx],ax
  41e6f1:	push   ebx
  41e6f2:	dec    eax
  41e6f3:	push   esp
  41e6f4:	pushf  
  41e6f5:	mov    ecx,0x2a805b98
  41e6fa:	mov    ds:0x3a781b7,eax
  41e6ff:	mov    ebx,0x5b3c33e2
  41e704:	xor    eax,esi
  41e706:	inc    ecx
  41e707:	cmp    al,0x90
  41e709:	es mov edx,edx
  41e70c:	js     0x41e766
  41e70e:	aas    
  41e70f:	xchg   ecx,eax
  41e710:	aaa    
  41e711:	xchg   esi,eax
  41e712:	adc    BYTE PTR [edi],bl
  41e714:	inc    esi
  41e715:	dec    ebp
  41e716:	add    bl,bh
  41e718:	int3   
  41e719:	mov    DWORD PTR [edi+0x69],edx
  41e71c:	neg    BYTE PTR [edx]
  41e71e:	xor    bl,BYTE PTR [ecx]
  41e720:	mov    edi,0x85ef4c9d
  41e725:	cmp    al,0x17
  41e727:	jmp    0x41e71a
  41e729:	retf   
  41e72a:	push   ebx
  41e72b:	in     eax,dx
  41e72c:	outs   dx,BYTE PTR ds:[esi]
  41e72d:	and    cl,0xb3
  41e730:	test   eax,0xc5f500f0
  41e735:	out    0x48,al
  41e737:	pusha  
  41e738:	adc    al,bh
  41e73a:	retfw  
  41e73c:	jmp    FWORD PTR [edi+0x3826ae22]
  41e742:	adc    al,0xca
  41e744:	sar    DWORD PTR [ebx],1
  41e746:	outs   dx,DWORD PTR ds:[esi]
  41e747:	adc    BYTE PTR [ebx-0x3d],al
  41e74a:	cmp    al,0xd0
  41e74c:	dec    eax
  41e74d:	sbb    DWORD PTR ds:0xd5dd87f9,ebx
  41e753:	(bad)  
  41e754:	fld    DWORD PTR [edi]
  41e756:	fs xchg ecx,eax
  41e758:	cmp    BYTE PTR [esi],0xf7
  41e75b:	cmp    dl,BYTE PTR [esi-0x17]
  41e75e:	sub    BYTE PTR [edx+0x6cbfb995],dl
  41e764:	push   es
  41e765:	dec    edx
  41e766:	push   es
  41e767:	into   
  41e768:	pusha  
  41e769:	shl    esi,1
  41e76b:	sub    bl,BYTE PTR [esi-0x17]
  41e76e:	fimul  DWORD PTR [edx]
  41e770:	push   ds
  41e771:	call   0x82171f0c
  41e776:	xchg   BYTE PTR [esi+ecx*8+0x14bfec62],al
  41e77d:	and    al,0x4e
  41e77f:	mov    dl,0xcd
  41e781:	push   cs
  41e782:	loop   0x41e7d7
  41e784:	(bad)  
  41e785:	push   ds
  41e786:	and    bl,BYTE PTR [eax-0x56e137d5]
  41e78c:	sti    
  41e78d:	jno    0x41e7ae
  41e78f:	xchg   esp,eax
  41e790:	(bad)  
  41e791:	add    DWORD PTR [esi-0x5c890cb8],edi
  41e797:	sbb    DWORD PTR [ebx+0x4f5ce7a],ecx
  41e79d:	adc    ch,bh
  41e79f:	gs inc esp
  41e7a1:	repnz in eax,dx
  41e7a3:	xchg   DWORD PTR [edi-0x50],ebp
  41e7a6:	lods   al,BYTE PTR ds:[esi]
  41e7a7:	push   esi
  41e7a8:	ja     0x41e803
  41e7aa:	pop    es
  41e7ab:	outs   dx,BYTE PTR ds:[esi]
  41e7ac:	mov    bl,0x16
  41e7ae:	loopne 0x41e73d
  41e7b0:	jbe    0x41e7f0
  41e7b2:	pop    ds
  41e7b3:	or     ebx,0x69d95960
  41e7b9:	clc    
  41e7ba:	aam    0x4c
  41e7bc:	lds    eax,FWORD PTR [eax+ebx*4-0x332ebb8]
  41e7c3:	push   esp
  41e7c4:	push   ecx
  41e7c5:	mov    DWORD PTR ss:[esi],edi
  41e7c8:	push   ebp
  41e7c9:	jnp    0x41e7a4
  41e7cb:	or     BYTE PTR [esp+eax*2-0x4f],dh
  41e7cf:	cmp    eax,0xf604fd73
  41e7d4:	push   es
  41e7d5:	pusha  
  41e7d6:	(bad)  
  41e7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7da:	pop    eax
  41e7db:	aas    
  41e7dc:	mov    ds:0x732cb17,al
  41e7e1:	mov    esi,0x49bbd3
  41e7e6:	neg    BYTE PTR [edx-0x43931ab7]
  41e7ec:	leave  
  41e7ed:	fstp   DWORD PTR [edx-0x11]
  41e7f0:	push   ds
  41e7f1:	js     0x41e83a
  41e7f3:	xor    ebp,ecx
  41e7f5:	cmc    
  41e7f6:	retf   0xd199
  41e7f9:	xchg   ebp,eax
  41e7fa:	push   esp
  41e7fb:	xor    ebx,DWORD PTR ds:0x77918a5b
  41e801:	mov    al,fs:0x80329f8e
  41e807:	mov    edi,DWORD PTR [eax-0x52fb732d]
  41e80d:	dec    eax
  41e80e:	inc    eax
  41e80f:	or     ch,BYTE PTR [bx+di-0x33ab]
  41e814:	les    eax,FWORD PTR [esi-0x69]
  41e817:	pop    es
  41e818:	jp     0x41e79d
  41e81a:	push   eax
  41e81b:	pop    edx
  41e81c:	in     al,0xe1
  41e81e:	jb     0x41e87d
  41e820:	fsub   st(3),st
  41e822:	shr    DWORD PTR [ebx],0x94
  41e825:	push   ebp
  41e826:	out    dx,eax
  41e827:	add    eax,ebp
  41e829:	push   ss
  41e82a:	mov    cl,0x3f
  41e82c:	fsubr  DWORD PTR [edx-0x2c]
  41e82f:	iret   
  41e830:	mov    DWORD PTR [edx+0x10],ebx
  41e833:	dec    edi
  41e834:	out    dx,al
  41e835:	mov    ds:0xb5f6fa32,eax
  41e83a:	ror    DWORD PTR [eax+ebx*2],0xab
  41e83e:	ins    BYTE PTR es:[edi],dx
  41e83f:	push   es
  41e840:	mov    al,0x63
  41e842:	adc    eax,0xd9360b40
  41e847:	cmc    
  41e848:	or     dl,dh
  41e84a:	jge    0x41e824
  41e84c:	xchg   ebp,eax
  41e84d:	lahf   
  41e84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84f:	out    0xc6,eax
  41e851:	dec    esp
  41e852:	push   ebx
  41e853:	xchg   edx,eax
  41e854:	mov    esi,0xd4ceaaff
  41e859:	arpl   WORD PTR [esi-0x30e6b89a],sp
  41e85f:	outs   dx,BYTE PTR ds:[esi]
  41e860:	sar    dh,cl
  41e862:	add    esp,DWORD PTR [ebx]
  41e864:	adc    dh,BYTE PTR [ebx]
  41e866:	sbb    esi,eax
  41e868:	lds    edi,FWORD PTR [ebx-0x70]
  41e86b:	push   esi
  41e86c:	mov    esp,0x6be88b06
  41e871:	bound  esp,QWORD PTR [edx]
  41e873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e874:	out    dx,al
  41e875:	into   
  41e876:	mov    esp,0x2792c906
  41e87b:	stc    
  41e87c:	loopne 0x41e827
  41e87e:	popa   
  41e87f:	mov    eax,ds:0x59596778
  41e884:	sti    
  41e885:	cmp    ch,BYTE PTR [ebx+0x294481e3]
  41e88b:	cld    
  41e88c:	push   ebp
  41e88d:	add    DWORD PTR [eax-0x2aa7dcd0],edx
  41e893:	shl    dl,cl
  41e895:	cmp    BYTE PTR [ecx-0x1281a381],0xc4
  41e89c:	inc    esp
  41e89d:	js     0x41e881
  41e89f:	scas   al,BYTE PTR es:[edi]
  41e8a0:	mov    al,0x80
  41e8a2:	sub    ecx,DWORD PTR [edx+0x60339fa1]
  41e8a8:	sbb    BYTE PTR [ebx+0x330b7774],ah
  41e8ae:	xchg   esi,eax
  41e8af:	cmp    BYTE PTR [ecx],bl
  41e8b1:	js     0x41e8b7
  41e8b3:	retf   
  41e8b4:	lea    ebp,[edi]
  41e8b6:	retf   0xa629
  41e8b9:	arpl   ax,di
  41e8bb:	mov    esi,0x22c37b30
  41e8c0:	scas   eax,DWORD PTR es:[edi]
  41e8c1:	pop    edi
  41e8c2:	ret    
  41e8c3:	jmp    esp
  41e8c5:	push   esi
  41e8c6:	sub    eax,0xb88ef893
  41e8cb:	call   0xe7ef68f4
  41e8d0:	jmp    0x41e869
  41e8d2:	xchg   esi,ebx
  41e8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d5:	inc    edx
  41e8d6:	push   ecx
  41e8d7:	and    eax,0x50651f1f
  41e8dc:	xor    al,BYTE PTR [edx+0x66]
  41e8df:	adc    BYTE PTR [edi-0x76cbf07e],bl
  41e8e5:	xor    DWORD PTR [edi],esi
  41e8e7:	sbb    al,0x33
  41e8e9:	or     BYTE PTR [edi-0x79ebb00],dl
  41e8ef:	xchg   ebp,eax
  41e8f0:	jbe    0x41e8cd
  41e8f2:	fdiv   st(5),st
  41e8f4:	cs (bad) 
  41e8f6:	dec    edi
  41e8f7:	fld    TBYTE PTR [eax-0x6b]
  41e8fa:	loop   0x41e925
  41e8fc:	div    DWORD PTR ds:0xf0ce8a2b
  41e902:	xor    dh,BYTE PTR [edx-0x49]
  41e905:	call   DWORD PTR [edi-0xdd50905]
  41e90b:	pusha  
  41e90c:	push   edi
  41e90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e90e:	stos   DWORD PTR es:[edi],eax
  41e90f:	and    al,0x85
  41e911:	cmp    ah,BYTE PTR [edx]
  41e913:	mov    DWORD PTR [ebx-0x16],ecx
  41e916:	call   FWORD PTR ds:0x2bc8341b
  41e91c:	leave  
  41e91d:	mov    edx,0xad0674fc
  41e922:	pop    ds
  41e923:	mov    edx,0x87a3f437
  41e928:	sti    
  41e929:	ds in  al,dx
  41e92b:	pop    esi
  41e92c:	cwde   
  41e92d:	fcmovnb st,st(5)
  41e92f:	mov    ebx,0xb6d02c99
  41e934:	in     eax,0xc9
  41e936:	push   esi
  41e937:	hlt    
  41e938:	pop    ebx
  41e939:	jbe    0x41e938
  41e93b:	xor    DWORD PTR [ebp+0x52b6debf],esp
  41e941:	push   eax
  41e942:	sub    BYTE PTR [eax-0x1d965699],dl
  41e948:	inc    ecx
  41e949:	(bad)  
  41e94a:	aam    0x65
  41e94c:	xchg   BYTE PTR ds:0x7ab0bda6,bh
  41e952:	icebp  
  41e953:	in     eax,0x41
  41e955:	jnp    0x41e930
  41e957:	cmp    dl,BYTE PTR [edi+0x36]
  41e95a:	cmc    
  41e95b:	enter  0x5ada,0x58
  41e95f:	adc    ebx,DWORD PTR [ecx-0x5e]
  41e962:	pop    esp
  41e963:	daa    
  41e964:	fs je  0x41e96f
  41e967:	sub    bh,dl
  41e969:	ins    DWORD PTR es:[edi],dx
  41e96a:	mov    ebx,cs
  41e96c:	mov    esi,0xf5b122ed
  41e971:	dec    eax
  41e972:	loop   0x41e907
  41e974:	xor    eax,0xfc02cc55
  41e979:	inc    edi
  41e97a:	pop    ecx
  41e97b:	and    al,0xaa
  41e97d:	mov    eax,0x23d34419
  41e982:	popf   
  41e983:	cli    
  41e984:	sub    BYTE PTR [ecx+0x26c28eb3],dl
  41e98a:	jp     0x41ea02
  41e98c:	call   edi
  41e98e:	or     al,0xd8
  41e990:	popa   
  41e991:	outs   dx,BYTE PTR ds:[esi]
  41e992:	xor    cl,ah
  41e994:	cmp    DWORD PTR [edx+0x4df83c27],0xb3b84661
  41e99e:	cld    
  41e99f:	mov    dl,0x5b
  41e9a1:	cmc    
  41e9a2:	dec    edi
  41e9a3:	mov    DWORD PTR [esi+0x35],edx
  41e9a6:	pop    edx
  41e9a7:	vpsrlq xmm5,xmm1,XMMWORD PTR [edi+0x36]
  41e9ac:	repnz dec esi
  41e9ae:	test   eax,0xd6f7160b
  41e9b3:	(bad)  
  41e9b5:	xchg   edx,eax
  41e9b6:	arpl   WORD PTR [ebx+0x705c2502],bp
  41e9bc:	push   edx
  41e9bd:	ins    BYTE PTR es:[edi],dx
  41e9be:	cmp    eax,0x95b075f2
  41e9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9c4:	in     eax,dx
  41e9c5:	dec    eax
  41e9c6:	in     eax,dx
  41e9c7:	retf   
  41e9c8:	fisttp WORD PTR [edi-0x43]
  41e9cb:	add    BYTE PTR [eax+eax*1+0x3b],ah
  41e9cf:	pop    esp
  41e9d0:	cmp    BYTE PTR [ebx],0xf0
  41e9d3:	and    eax,0xab18af49
  41e9d8:	cmp    DWORD PTR [edi-0x58],edi
  41e9db:	mov    al,ds:0xc9a7e343
  41e9e0:	cmp    eax,0xce3437bb
  41e9e5:	fadd   DWORD PTR ds:0xdd040027
  41e9eb:	pop    ss
  41e9ec:	mov    ds:0x3f75ec20,eax
  41e9f1:	shl    DWORD PTR [ebx-0x1d],1
  41e9f4:	loope  0x41ea6c
  41e9f6:	out    0x75,eax
  41e9f8:	inc    esi
  41e9f9:	js     0x41e9c5
  41e9fb:	jne    0x41e9ae
  41e9fd:	lods   eax,DWORD PTR ds:[esi]
  41e9fe:	push   edx
  41e9ff:	pusha  
  41ea00:	inc    ecx
  41ea01:	bound  ebp,QWORD PTR [eax]
  41ea03:	cmp    al,0x5a
  41ea05:	retf   
  41ea06:	aam    0xd2
  41ea08:	lods   al,BYTE PTR ds:[esi]
  41ea09:	xchg   edi,eax
  41ea0a:	icebp  
  41ea0b:	shl    dl,1
  41ea0d:	cmp    eax,0x43ef2c1e
  41ea12:	ret    
  41ea13:	cwde   
  41ea14:	int3   
  41ea15:	sbb    eax,0x40cc363d
  41ea1a:	les    ecx,FWORD PTR [esi-0x20]
  41ea1d:	stc    
  41ea1e:	(bad)  
  41ea1f:	fisub  WORD PTR [edi+0x2c3e9b17]
  41ea25:	popf   
  41ea26:	pusha  
  41ea27:	(bad)  
  41ea28:	sti    
  41ea29:	call   0xdea9:0x82c74a9b
  41ea30:	jp     0x41ea9a
  41ea32:	inc    ecx
  41ea33:	dec    ebx
  41ea34:	aas    
  41ea35:	adc    al,0xf6
  41ea37:	es pop esp
  41ea39:	dec    eax
  41ea3a:	mov    bh,0xa6
  41ea3c:	mov    esp,0x2504e6b5
  41ea41:	es xchg ecx,eax
  41ea43:	cld    
  41ea44:	adc    BYTE PTR [esi+0x35],bl
  41ea47:	mov    WORD PTR [esi-0x75],cs
  41ea4a:	xor    dh,BYTE PTR [ebp-0x69]
  41ea4d:	hlt    
  41ea4e:	ins    BYTE PTR es:[edi],dx
  41ea4f:	xor    eax,0xb4e42a60
  41ea54:	mov    dh,BYTE PTR es:[ebp-0x5fd5801a]
  41ea5b:	cmp    al,0x1c
  41ea5d:	mov    dl,0x35
  41ea5f:	fs jl  0x41e9f2
  41ea62:	xchg   ecx,eax
  41ea63:	xchg   ebp,eax
  41ea64:	scas   eax,DWORD PTR es:[edi]
  41ea65:	stos   DWORD PTR es:[edi],eax
  41ea66:	sub    ecx,DWORD PTR [ebx+0x2d]
  41ea69:	push   eax
  41ea6a:	imul   ebp,DWORD PTR [ecx],0x5
  41ea6d:	inc    esi
  41ea6e:	test   DWORD PTR [esi+0x7124609d],ebx
  41ea74:	dec    edi
  41ea75:	mov    bl,0x83
  41ea77:	je     0x41ea64
  41ea79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea7a:	mov    BYTE PTR [esi],al
  41ea7c:	mov    al,dl
  41ea7e:	pop    edx
  41ea7f:	test   al,0x71
  41ea81:	jp     0x41eac6
  41ea83:	push   ds
  41ea84:	aas    
  41ea85:	lock dec edi
  41ea87:	mov    ebp,0xc96f0eca
  41ea8c:	jno    0x41eace
  41ea8e:	inc    esi
  41ea8f:	test   eax,0x13a4e459
  41ea94:	fisub  DWORD PTR [edx]
  41ea96:	cmp    BYTE PTR [ebp+edi*8-0x5cd3ada8],0x68
  41ea9e:	pop    esp
  41ea9f:	int3   
  41eaa0:	sar    DWORD PTR [edx+0x7156d569],1
  41eaa6:	mov    ecx,0xdfb18e25
  41eaab:	xor    BYTE PTR [ebx+0x18dbdb0c],0x53
  41eab2:	jle    0x41eb33
  41eab4:	setne  BYTE PTR [eax-0x2d]
  41eab8:	mov    dh,0xa3
  41eaba:	add    DWORD PTR [edx],ebx
  41eabc:	fisub  WORD PTR [ecx]
  41eabe:	retf   
  41eabf:	xor    al,0xbd
  41eac1:	cmp    ebx,edi
  41eac3:	test   BYTE PTR [ebp-0x33],al
  41eac6:	mov    dh,0x2e
  41eac8:	xchg   edx,eax
  41eac9:	cs push 0x41
  41eacc:	pop    ecx
  41eacd:	cmp    edi,DWORD PTR ds:0xa6353ed4
  41ead3:	dec    edi
  41ead4:	loop   0x41ead0
  41ead6:	loope  0x41eb56
  41ead8:	mov    ss,WORD PTR [eax-0x2e9ab0fb]
  41eade:	pop    ebx
  41eadf:	sub    DWORD PTR [ecx-0x76],ebp
  41eae2:	or     esp,esp
  41eae4:	xlat   BYTE PTR ds:[ebx]
  41eae5:	or     al,0x40
  41eae7:	mov    ?,WORD PTR [ebx]
  41eae9:	jmp    0x41eb2b
  41eaeb:	int3   
  41eaec:	fnstcw WORD PTR [edx+0x62]
  41eaef:	sbb    cl,0x73
  41eaf2:	sbb    al,0x26
  41eaf4:	sub    BYTE PTR [eax],dl
  41eaf6:	mov    cl,0xe2
  41eaf8:	sub    bl,bl
  41eafa:	mov    esp,0xa326732b
  41eaff:	std    
  41eb00:	inc    ecx
  41eb01:	aam    0xa5
  41eb03:	jne    0x41eb66
  41eb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb06:	lods   eax,DWORD PTR ds:[esi]
  41eb07:	add    BYTE PTR [esi],dl
  41eb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb0a:	xor    esi,DWORD PTR [edi]
  41eb0c:	ret    0xaaa5
  41eb0f:	(bad)  
  41eb10:	aaa    
  41eb11:	(bad)  
  41eb12:	jle    0x41eb41
  41eb14:	rcl    BYTE PTR [ecx-0x3a7a61ee],1
  41eb1a:	out    dx,eax
  41eb1b:	mov    eax,ebx
  41eb1d:	and    DWORD PTR [esi+eax*8-0xb],ebp
  41eb21:	bound  edx,QWORD PTR [edi-0x37]
  41eb24:	xchg   ecx,eax
  41eb25:	enter  0x525a,0x26
  41eb29:	dec    ecx
  41eb2a:	outs   dx,DWORD PTR ds:[esi]
  41eb2b:	mov    eax,0x42a016
  41eb30:	push   ebx
  41eb31:	neg    dl
  41eb33:	(bad)  
  41eb34:	xchg   ebp,eax
  41eb35:	sub    eax,0xbe1207b3
  41eb3a:	loopne 0x41eb46
  41eb3c:	gs ret 
  41eb3e:	xor    DWORD PTR [ebp-0x422f8c68],esi
  41eb44:	sub    eax,0x3c19bb0f
  41eb49:	mov    bl,0xb7
  41eb4b:	mul    DWORD PTR [ebx]
  41eb4d:	loop   0x41eba9
  41eb4f:	shr    BYTE PTR [ebx],cl
  41eb51:	pop    edi
  41eb52:	push   ss
  41eb53:	xchg   BYTE PTR [eax-0x5f],cl
  41eb56:	inc    ebx
  41eb57:	mov    al,ds:0x2217ab5c
  41eb5c:	dec    esi
  41eb5d:	div    esp
  41eb5f:	nop
  41eb60:	ds pop ds
  41eb62:	fiadd  WORD PTR [ecx+0x2187efd9]
  41eb68:	int3   
  41eb69:	loop   0x41eb71
  41eb6b:	xor    al,0x34
  41eb6d:	out    0xad,al
  41eb6f:	adc    eax,0x9a46877
  41eb74:	or     bl,bl
  41eb76:	mov    cl,0x7e
  41eb78:	lds    edx,FWORD PTR [edi+0x1e32f1eb]
  41eb7e:	inc    edi
  41eb7f:	or     cl,BYTE PTR [esi-0x59]
  41eb82:	ss mov edx,0xc8fc274f
  41eb88:	imul   BYTE PTR [edx]
  41eb8a:	mov    ds:0x10c75a49,eax
  41eb8f:	mov    al,ds:0x5d6f96a4
  41eb94:	out    dx,eax
  41eb95:	daa    
  41eb96:	cmp    ebx,DWORD PTR [edx+0x419e7e77]
  41eb9c:	mov    ds:0x9cb05f60,eax
  41eba1:	sub    BYTE PTR [esi],ah
  41eba3:	in     eax,0x2f
  41eba5:	and    edi,DWORD PTR [edi+edi*8+0x156971cd]
  41ebac:	fisttp DWORD PTR [esi]
  41ebae:	inc    ebx
  41ebaf:	lds    edi,FWORD PTR [eax+0x2b]
  41ebb2:	mov    ah,0x70
  41ebb4:	mov    al,BYTE PTR [ebx-0x7d2cfc17]
  41ebba:	push   esi
  41ebbb:	mov    dh,0x62
  41ebbd:	hlt    
  41ebbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbf:	imul   eax,DWORD PTR [ebx+esi*1-0xd3d2327],0xd69f2eb1
  41ebca:	push   ss
  41ebcb:	xor    cl,cl
  41ebcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebce:	aas    
  41ebcf:	loopne 0x41ec00
  41ebd1:	jp     0x41ec37
  41ebd3:	add    eax,0x633327b5
  41ebd8:	je     0x41ebc6
  41ebda:	dec    ebp
  41ebdb:	mov    ebp,0xbce74917
  41ebe0:	aas    
  41ebe1:	loopne 0x41ec38
  41ebe3:	and    DWORD PTR ds:0x1a033be3,esp
  41ebe9:	xor    DWORD PTR [eax],ebp
  41ebeb:	les    ebp,FWORD PTR [edx]
  41ebed:	iret   
  41ebee:	fisub  DWORD PTR [ebp-0x23]
  41ebf1:	aad    0xf6
  41ebf3:	adc    ebp,edi
  41ebf5:	push   esp
  41ebf6:	sub    esp,eax
  41ebf8:	adc    DWORD PTR [esi],esi
  41ebfa:	add    eax,0xb91e865a
  41ebff:	dec    ebx
  41ec00:	popf   
  41ec01:	inc    edi
  41ec02:	mov    ds:0x3f4ae035,al
  41ec07:	jle    0x41ebc4
  41ec09:	adc    bh,0xd0
  41ec0c:	push   ebx
  41ec0d:	sar    DWORD PTR [edx-0x3c],0xc3
  41ec11:	sub    DWORD PTR [eax-0x35],ecx
  41ec14:	mov    cl,0x4f
  41ec16:	ss xchg esp,eax
  41ec18:	mov    edi,?
  41ec1a:	mov    es,ebx
  41ec1c:	jae    0x41ec40
  41ec1e:	int3   
  41ec1f:	or     BYTE PTR [edi-0x71],bh
  41ec22:	leave  
  41ec23:	stos   DWORD PTR es:[edi],eax
  41ec24:	dec    ebx
  41ec25:	aas    
  41ec26:	jbe    0x41ec92
  41ec28:	xor    BYTE PTR [edi+0x42],0x6c
  41ec2c:	loopne 0x41ec16
  41ec2e:	mov    ch,0xde
  41ec30:	adc    DWORD PTR gs:[eax+edx*1],0x6a9d5142
  41ec38:	add    ebp,edx
  41ec3a:	pop    edx
  41ec3b:	xor    dl,BYTE PTR cs:[esi-0x7eab0e8e]
  41ec42:	ss sub eax,0x36544eb4
  41ec48:	add    eax,0x805034fd
  41ec4d:	(bad)  
  41ec4f:	mov    al,0x77
  41ec51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec52:	out    0x8e,eax
  41ec54:	mov    ah,0x92
  41ec56:	sbb    al,0x2f
  41ec58:	std    
  41ec59:	loop   0x41ec25
  41ec5b:	scas   al,BYTE PTR es:[edi]
  41ec5c:	mov    dh,0x2
  41ec5e:	cld    
  41ec5f:	jecxz  0x41ec92
  41ec61:	arpl   WORD PTR [edi],si
  41ec63:	push   eax
  41ec64:	inc    esi
  41ec65:	jle    0x41ec14
  41ec67:	push   ebx
  41ec68:	xor    al,0x50
  41ec6a:	dec    esp
  41ec6b:	shl    bl,1
  41ec6d:	mov    ss,edx
  41ec6f:	lods   al,BYTE PTR ds:[esi]
  41ec70:	mov    ds:0x2e854cce,al
  41ec75:	xor    DWORD PTR [esi-0xd71dbe3],esp
  41ec7b:	nop
  41ec7c:	fwait
  41ec7d:	dec    ebx
  41ec7e:	sub    BYTE PTR [ebx-0x313f2326],bl
  41ec84:	jmp    0x41ec2f
  41ec86:	pop    es
  41ec87:	(bad)  
  41ec88:	lock cmp dl,BYTE PTR [esi+0x1b2d96b1]
  41ec8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec90:	xor    ebp,edx
  41ec92:	out    0x6a,al
  41ec94:	dec    bl
  41ec96:	dec    esi
  41ec97:	(bad)  
  41ec98:	popa   
  41ec99:	jne    0x41ece9
  41ec9b:	adc    dh,BYTE PTR [ecx]
  41ec9d:	sbb    DWORD PTR [ecx-0x7c],0x67
  41eca1:	add    BYTE PTR [esi-0x53],dh
  41eca4:	stos   BYTE PTR es:[edi],al
  41eca5:	sahf   
  41eca6:	sub    BYTE PTR [ecx-0x5a9da5bd],dl
  41ecac:	adc    dl,BYTE PTR [ebp+0x56b13394]
  41ecb2:	scas   al,BYTE PTR es:[edi]
  41ecb3:	int    0xdc
  41ecb5:	xor    cl,bl
  41ecb7:	fs jp  0x41eca8
  41ecba:	out    0xd6,al
  41ecbc:	stc    
  41ecbd:	mov    dl,BYTE PTR [edx-0x45f7ef03]
  41ecc3:	fstp   DWORD PTR [esi]
  41ecc5:	fadd   st,st(3)
  41ecc7:	pop    es
  41ecc8:	push   ecx
  41ecc9:	cmp    dh,dh
  41eccb:	or     ah,cl
  41eccd:	leave  
  41ecce:	pop    ebp
  41eccf:	in     al,0xd
  41ecd1:	jne    0x41ece2
  41ecd3:	sub    eax,0xb28b0825
  41ecd8:	jae    0x41ecfc
  41ecda:	mov    bh,0x29
  41ecdc:	jmp    0x984f:0x49ddf02c
  41ece3:	mov    edi,0xe08809cd
  41ece8:	out    dx,al
  41ece9:	mov    eax,ds:0x8e7724e8
  41ecee:	jmp    0x41eccf
  41ecf0:	add    edx,ecx
  41ecf2:	adc    eax,0x24843579
  41ecf7:	dec    esp
  41ecf8:	rcr    DWORD PTR [edx],1
  41ecfa:	retf   0x5fc7
  41ecfd:	ret    0x5c9d
  41ed00:	les    edi,FWORD PTR [edx]
  41ed02:	nop
  41ed03:	or     esp,DWORD PTR [bp+di-0x72]
  41ed07:	(bad)  
  41ed08:	jae    0x41ecfb
  41ed0a:	jo     0x41ecaf
  41ed0c:	outs   dx,BYTE PTR ds:[esi]
  41ed0d:	push   ecx
  41ed0e:	sub    al,0xc1
  41ed10:	test   DWORD PTR [edx-0x57],eax
  41ed13:	call   0x706c:0xd30d9c42
  41ed1a:	sbb    ebp,DWORD PTR [esp+esi*2-0x7994da1]
  41ed21:	arpl   WORD PTR [ecx],sp
  41ed23:	push   esi
  41ed24:	int    0x39
  41ed26:	dec    ecx
  41ed27:	push   esp
  41ed28:	mov    edx,0x4ce29877
  41ed2d:	xor    al,0xaa
  41ed2f:	xchg   ebx,eax
  41ed30:	mov    ch,0x78
  41ed32:	int3   
  41ed33:	sar    BYTE PTR [ebx],cl
  41ed35:	shl    BYTE PTR [edx],cl
  41ed37:	int3   
  41ed38:	push   ss
  41ed39:	pop    ss
  41ed3a:	dec    ebx
  41ed3b:	pop    edi
  41ed3c:	cmc    
  41ed3d:	push   esp
  41ed3e:	cwde   
  41ed3f:	pop    ebx
  41ed40:	repz inc edi
  41ed42:	iret   
  41ed43:	mov    BYTE PTR [edi],0x8f
  41ed46:	xlat   BYTE PTR ds:[ebx]
  41ed47:	call   0x7008:0x6897344b
  41ed4e:	mov    BYTE PTR [ecx-0x65],al
  41ed51:	clc    
  41ed52:	arpl   sp,bp
  41ed54:	ret    0x70b8
  41ed57:	mov    dl,BYTE PTR [edx+ebx*2+0x31e44ce9]
  41ed5e:	repnz inc edx
  41ed60:	sar    BYTE PTR [ebp+0x23],1
  41ed63:	or     eax,0xbbcce321
  41ed68:	inc    ebp
  41ed69:	scas   eax,DWORD PTR es:[edi]
  41ed6a:	pop    esp
  41ed6b:	jmp    0xc1a96e32
  41ed70:	jmp    0x8241e0fa
  41ed75:	pushf  
  41ed76:	lahf   
  41ed77:	dec    esi
  41ed78:	and    dh,BYTE PTR [ebx]
  41ed7a:	cmp    eax,0x44085c9b
  41ed7f:	pop    esp
  41ed80:	mov    eax,0xae1639dc
  41ed85:	jbe    0x41edfb
  41ed87:	(bad)  
  41ed88:	aam    0x8a
  41ed8a:	jnp    0x41ed16
  41ed8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed8d:	cmp    DWORD PTR [edi-0x5a],0x79
  41ed91:	mov    eax,ds:0xdea7ea01
  41ed96:	jp     0x41ed1f
  41ed98:	gs or  al,0xb
  41ed9b:	in     eax,0x44
  41ed9d:	cmp    ebx,edi
  41ed9f:	cmp    ch,ch
  41eda1:	add    BYTE PTR [esi-0x75d9e314],ah
  41eda7:	mov    dh,0x6b
  41eda9:	mov    bl,0xa
  41edab:	cmp    edi,DWORD PTR [edi+0x4c837705]
  41edb1:	xchg   ecx,eax
  41edb2:	data16 je 0x41ede6
  41edb5:	iret   
  41edb6:	mov    BYTE PTR ds:0x277cb86,dh
  41edbc:	mov    ecx,0xf1e59925
  41edc1:	pop    ss
  41edc2:	mov    ah,0x74
  41edc4:	iret   
  41edc5:	and    al,0xd7
  41edc7:	sti    
  41edc8:	adc    eax,0x5bf10b67
  41edcd:	jmp    0xf969aaac
  41edd2:	not    edx
  41edd4:	add    ebp,eax
  41edd6:	and    BYTE PTR [ecx+0x6fe78f6d],cl
  41eddc:	leave  
  41eddd:	sahf   
  41edde:	or     DWORD PTR [ecx+edi*1-0x16],0xef50f593
  41ede6:	stos   DWORD PTR es:[edi],eax
  41ede7:	dec    esi
  41ede8:	js     0x41ed7e
  41edea:	cmp    bh,ah
  41edec:	push   esp
  41eded:	and    DWORD PTR [edi+eax*2-0x17],esp
  41edf1:	pop    es
  41edf2:	jl     0x41ede7
  41edf4:	fist   WORD PTR [ecx]
  41edf6:	adc    ebx,DWORD PTR [esi-0x49]
  41edf9:	mov    eax,0xebe5b627
  41edfe:	jns    0x41ee4c
  41ee00:	push   0x450462b7
  41ee05:	dec    ecx
  41ee06:	lock xchg ah,ah
  41ee09:	add    eax,0xc1eb13a
  41ee0e:	xchg   edx,eax
  41ee0f:	div    DWORD PTR [edx]
  41ee11:	fsubr  st(0),st
  41ee13:	es loop 0x41ee57
  41ee16:	scas   eax,DWORD PTR es:[edi]
  41ee17:	sub    edi,DWORD PTR [edx]
  41ee19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee1a:	xchg   DWORD PTR [ebx+ebp*1+0x7e],ebx
  41ee1e:	cmp    esi,edx
  41ee20:	and    esi,DWORD PTR [esi+0x6f]
  41ee23:	gs pusha 
  41ee25:	push   esp
  41ee26:	sbb    DWORD PTR [ecx+0x44],esp
  41ee29:	mov    cs,WORD PTR [ebx-0x79e4b376]
  41ee2f:	sahf   
  41ee30:	cld    
  41ee31:	jo     0x41eea7
  41ee33:	out    0xc5,eax
  41ee35:	push   ds
  41ee36:	neg    DWORD PTR [ebx]
  41ee38:	adc    al,0x77
  41ee3a:	pop    ecx
  41ee3b:	in     eax,dx
  41ee3c:	mov    al,ds:0xec1ddc20
  41ee41:	push   ebx
  41ee42:	mov    ebx,0xf9f7567c
  41ee47:	push   eax
  41ee48:	scas   eax,DWORD PTR es:[edi]
  41ee49:	sar    BYTE PTR [eax],cl
  41ee4b:	xor    BYTE PTR cs:[ebp+0x7e1abdac],ah
  41ee52:	pop    ss
  41ee53:	pusha  
  41ee54:	jno    0x41eec8
  41ee56:	das    
  41ee57:	into   
  41ee58:	mov    eax,cs:0xeca9d95d
  41ee5e:	inc    ecx
  41ee5f:	xor    BYTE PTR [eax+0x3b],dl
  41ee62:	jns    0x41ee89
  41ee64:	adc    BYTE PTR [ebp-0x34a3c86f],dh
  41ee6a:	sub    al,0x83
  41ee6c:	jg     0x41eee7
  41ee6e:	cdq    
  41ee6f:	ret    
  41ee70:	aas    
  41ee71:	test   BYTE PTR [edi-0x29],al
  41ee74:	out    0xd0,eax
  41ee76:	ins    BYTE PTR es:[edi],dx
  41ee77:	mov    al,0xa3
  41ee79:	add    dh,BYTE PTR [edx-0x4]
  41ee7c:	pusha  
  41ee7d:	mov    al,0x4
  41ee7f:	push   esp
  41ee80:	test   edx,0x270015a0
  41ee86:	adc    al,0x7e
  41ee88:	aaa    
  41ee89:	dec    ebx
  41ee8a:	mov    ds:0x7a9628d8,eax
  41ee8f:	mov    edx,0x6e04391
  41ee94:	mov    ecx,0x4e866043
  41ee99:	enter  0x98da,0x6
  41ee9d:	add    bh,BYTE PTR [eax+0x66a87f28]
  41eea3:	push   edi
  41eea4:	retf   0xdffc
  41eea7:	aaa    
  41eea8:	cmp    bh,dh
  41eeaa:	mov    ah,0x81
  41eeac:	cmc    
  41eead:	out    0xf0,eax
  41eeaf:	adc    al,0x2
  41eeb1:	gs mov ebx,0xfd40f10f
  41eeb7:	daa    
  41eeb8:	mov    ebp,0xb69a1d3e
  41eebd:	adc    eax,0xb6f61750
  41eec2:	scas   al,BYTE PTR es:[edi]
  41eec3:	xor    DWORD PTR [ebp+0x63],eax
  41eec6:	sbb    ecx,DWORD PTR [esi]
  41eec8:	rol    BYTE PTR [eax],0x51
  41eecb:	xchg   edx,eax
  41eecc:	popa   
  41eecd:	cmp    al,0x55
  41eecf:	mov    ebx,0x98e3ff6
  41eed4:	cmc    
  41eed5:	dec    edx
  41eed6:	inc    edi
  41eed7:	cwde   
  41eed8:	rdpmc  
  41eeda:	push   ebp
  41eedb:	sbb    eax,0x6b5ab0d6
  41eee0:	fcom   QWORD PTR [ebx-0x28]
  41eee3:	std    
  41eee4:	or     ch,dl
  41eee6:	mov    bl,0x49
  41eee8:	jo     0x41eeea
  41eeea:	aad    0x9a
  41eeec:	retf   0xaf5e
  41eeef:	mov    BYTE PTR ds:0xfdf6e28d,al
  41eef5:	imul   edx,esi,0xfffffff2
  41eef8:	ja     0x41ee8e
  41eefa:	cmp    al,0xdd
  41eefc:	test   DWORD PTR [eax-0x79],edi
  41eeff:	mov    dh,ch
  41ef01:	dec    esi
  41ef02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef03:	xor    esp,ebx
  41ef05:	xchg   ebx,eax
  41ef06:	in     eax,0x65
  41ef08:	mov    al,dh
  41ef0a:	mov    ebx,0x69907985
  41ef0f:	inc    ecx
  41ef10:	popf   
  41ef11:	xchg   ebx,eax
  41ef12:	jge    0x41ef19
  41ef14:	sbb    BYTE PTR [edi+ebp*8-0x7d],al
  41ef18:	jo     0x41eefc
  41ef1a:	add    ch,cl
  41ef1c:	loop   0x41ef98
  41ef1e:	popf   
  41ef1f:	call   0xfc65b0b5
  41ef24:	mov    bl,BYTE PTR [edx+ebp*1+0x498fc312]
  41ef2b:	xor    BYTE PTR ds:0x38d7f079,al
  41ef31:	sbb    eax,0x885229c6
  41ef36:	inc    ebx
  41ef37:	lds    edx,FWORD PTR [ecx+edi*8+0x1c]
  41ef3b:	ret    0x4bbe
  41ef3e:	mov    cl,0x2f
  41ef40:	aam    0x2a
  41ef42:	push   0xffffff94
  41ef44:	jae    0x41efae
  41ef46:	out    dx,eax
  41ef47:	fisttp WORD PTR [eax]
  41ef49:	retf   0x9493
  41ef4c:	pop    edx
  41ef4d:	push   eax
  41ef4e:	dec    edi
  41ef4f:	test   DWORD PTR [edx+0xf],edx
  41ef52:	dec    edi
  41ef53:	push   es
  41ef54:	sbb    DWORD PTR [ebp-0x79ea5bee],0x52
  41ef5b:	outs   dx,BYTE PTR ds:[esi]
  41ef5c:	iret   
  41ef5d:	sbb    ch,al
  41ef5f:	and    eax,DWORD PTR [edi]
  41ef61:	les    ecx,FWORD PTR [ebp-0x48]
  41ef64:	aam    0x8a
  41ef66:	loopne 0x41ef49
  41ef68:	fistp  QWORD PTR [esi+ebp*1-0x4b259ab3]
  41ef6f:	in     eax,dx
  41ef70:	dec    ebp
  41ef71:	fadd   QWORD PTR [edx+esi*1]
  41ef74:	mov    WORD PTR [ecx+0x316671cf],ss
  41ef7a:	aad    0x4e
  41ef7c:	mov    DWORD PTR [ecx+ecx*1+0x25],eax
  41ef80:	fcom   DWORD PTR [ebp+0xc]
  41ef83:	xchg   edi,eax
  41ef84:	repnz cmp ah,BYTE PTR [edi]
  41ef87:	and    edx,DWORD PTR [ecx+edx*8-0x16]
  41ef8b:	gs jmp 0xcd87:0x69b19a8c
  41ef93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef94:	imul   ebx,esi,0xffffffb8
  41ef97:	inc    edi
  41ef98:	test   al,0x24
  41ef9a:	adc    DWORD PTR [edi-0x547e4599],esp
  41efa0:	cmp    ebx,DWORD PTR [eax+0x1588d56d]
  41efa6:	adc    cl,BYTE PTR [ecx-0x1a]
  41efa9:	jle    0x41ef8a
  41efab:	rcl    esp,1
  41efad:	(bad)  
  41efae:	(bad)  
  41efaf:	xchg   edx,eax
  41efb0:	pop    edx
  41efb1:	cs out dx,al
  41efb3:	test   DWORD PTR [ebx+0x52],edi
  41efb6:	loope  0x41f02b
  41efb8:	mov    ebp,DWORD PTR [edi]
  41efba:	pop    es
  41efbb:	cwde   
  41efbc:	enter  0xd3a1,0x58
  41efc0:	repnz neg BYTE PTR [esp+eiz*8+0x6ab98f18]
  41efc8:	xchg   esp,eax
  41efc9:	in     eax,0x45
  41efcb:	out    dx,eax
  41efcc:	mov    WORD PTR [eax-0x11bc6484],?
  41efd2:	mov    esp,edi
  41efd4:	jecxz  0x41efff
  41efd6:	sahf   
  41efd7:	aaa    
  41efd8:	dec    esi
  41efd9:	xchg   edi,eax
  41efda:	mov    edi,0x879e2605
  41efdf:	gs or  ah,bh
  41efe2:	out    0x13,al
  41efe4:	inc    BYTE PTR [edi-0x291fd2a6]
  41efea:	adc    bh,al
  41efec:	stos   BYTE PTR es:[edi],al
  41efed:	pop    esi
  41efee:	push   es
  41efef:	dec    ebx
  41eff0:	scas   eax,DWORD PTR es:[edi]
  41eff1:	pop    esi
  41eff2:	(bad)  
  41eff3:	(bad)  
  41eff4:	cld    
  41eff5:	call   0x3ae3a86d
  41effa:	div    DWORD PTR [ebx+0x42]
  41effd:	push   edi
  41effe:	out    dx,al
  41efff:	dec    ebx
  41f000:	clc    
  41f001:	mov    dh,bh
  41f003:	test   eax,0xb201da52
  41f008:	ja     0x41f081
  41f00a:	push   esp
  41f00b:	dec    eax
  41f00c:	inc    edi
  41f00d:	xchg   ecx,eax
  41f00e:	pop    edx
  41f00f:	into   
  41f010:	inc    ebx
  41f011:	stos   DWORD PTR es:[edi],eax
  41f012:	pop    ecx
  41f013:	inc    edx
  41f014:	test   eax,0xa38c354d
  41f019:	jg     0x41f096
  41f01b:	sahf   
  41f01c:	mov    cl,0xb5
  41f01e:	les    ebp,FWORD PTR [ebx]
  41f020:	ja     0x41f05d
  41f022:	or     eax,0x531950d8
  41f027:	sar    DWORD PTR [edx+0x6f8c2631],1
  41f02d:	mov    ah,0x7
  41f02f:	add    DWORD PTR [ebp-0x4],esp
  41f032:	pushf  
  41f033:	popf   
  41f034:	fistp  DWORD PTR [ecx]
  41f036:	xchg   edx,eax
  41f037:	add    BYTE PTR ds:0x6ed0b571,bh
  41f03d:	imul   ebx,DWORD PTR [eax-0xa68e47d],0x5f
  41f044:	fmul   QWORD PTR [edi+0x14]
  41f047:	mul    bl
  41f049:	gs xchg esp,eax
  41f04b:	and    bl,al
  41f04d:	push   ebp
  41f04e:	js     0x41efdb
  41f050:	mov    dl,0xbf
  41f052:	ds out dx,eax
  41f054:	mov    al,ds:0x97a9dcef
  41f059:	or     al,0x39
  41f05b:	inc    eax
  41f05c:	xchg   DWORD PTR [eax],ebp
  41f05e:	stos   DWORD PTR es:[edi],eax
  41f05f:	xor    BYTE PTR [bx+0x5c7b],0x23
  41f065:	cmp    eax,DWORD PTR [esi]
  41f067:	jne    0x41f017
  41f069:	outs   dx,DWORD PTR ds:[esi]
  41f06a:	pop    ebx
  41f06b:	pop    ss
  41f06c:	push   0x7a
  41f06e:	mov    ah,0x55
  41f070:	aad    0x61
  41f072:	loop   0x41f025
  41f074:	jne    0x41f0a6
  41f076:	mov    al,BYTE PTR [edx-0x53a9d7b3]
  41f07c:	imul   ebp,DWORD PTR [ecx-0x12],0xf7290e0a
  41f083:	les    ebx,FWORD PTR [edi-0x5f3f49a6]
  41f089:	mov    ch,0x75
  41f08b:	adc    BYTE PTR [esi+0x63],al
  41f08e:	jmp    0x41f0d8
  41f090:	xchg   ecx,eax
  41f091:	hlt    
  41f092:	add    ch,BYTE PTR [ebx]
  41f094:	or     al,0x8d
  41f096:	leave  
  41f097:	add    DWORD PTR [eax+0x2e],esp
  41f09a:	xchg   ebx,eax
  41f09b:	enter  0xc0a0,0x2
  41f09f:	jae    0x41f062
  41f0a1:	adc    eax,0x8a9e077e
  41f0a6:	sbb    al,0xc9
  41f0a8:	add    al,0x80
  41f0aa:	add    eax,0xa5abedbf
  41f0af:	(bad)
  41f0b3:	cmc    
  41f0b4:	or     ebx,DWORD PTR [esi]
  41f0b6:	push   edx
  41f0b7:	retf   0x1277
  41f0ba:	pmaxub mm6,QWORD PTR [ebx-0x6f7a2a96]
  41f0c1:	mov    ds,WORD PTR [edi-0x2fac64dc]
  41f0c7:	pop    eax
  41f0c8:	pop    DWORD PTR [eax]
  41f0ca:	aam    0x6a
  41f0cc:	adc    edi,DWORD PTR [esi-0x662dc1b]
  41f0d2:	mov    bl,0x9a
  41f0d4:	mov    BYTE PTR ds:0xe722b02d,dh
  41f0da:	mov    eax,0xd625fcb8
  41f0df:	xchg   edi,eax
  41f0e0:	rcl    BYTE PTR [edx-0x7b],cl
  41f0e3:	mov    esp,DWORD PTR [edx]
  41f0e5:	push   eax
  41f0e6:	repz icebp 
  41f0e8:	and    eax,0x96401557
  41f0ed:	fild   DWORD PTR ds:0x116a7c5a
  41f0f3:	(bad)  
  41f0f4:	mov    dl,0xa3
  41f0f6:	push   edi
  41f0f7:	cmp    ebx,DWORD PTR [ecx-0x5f]
  41f0fa:	test   eax,0x5d9f4f54
  41f0ff:	sbb    eax,0xa4c1dbff
  41f104:	or     edi,edi
  41f106:	test   eax,0x565fe345
  41f10b:	ja     0x41f130
  41f10d:	dec    ecx
  41f10e:	xchg   BYTE PTR [edx+ecx*1+0x1bc8b2fc],bh
  41f115:	add    eax,0xd43ebc20
  41f11a:	cmc    
  41f11b:	popa   
  41f11c:	add    ecx,DWORD PTR [edi+ebx*8-0x48367f94]
  41f123:	aaa    
  41f124:	pop    edx
  41f125:	frstor [edx-0x3e8b2f64]
  41f12b:	or     al,0x75
  41f12d:	jno    0x41f19b
  41f12f:	shl    BYTE PTR [edi+0x72ab2e31],1
  41f135:	sbb    ch,cl
  41f137:	add    al,dl
  41f139:	xor    ecx,DWORD PTR [edi+0x63]
  41f13c:	mov    edi,0xc8a2f3ef
  41f141:	repz in al,dx
  41f143:	cmp    bl,BYTE PTR [edi+0x6219b7f6]
  41f149:	pop    ecx
  41f14a:	in     eax,dx
  41f14b:	xor    al,bl
  41f14d:	xchg   esi,eax
  41f14e:	inc    edx
  41f14f:	retf   
  41f150:	push   0xffffffca
  41f152:	ss enter 0x3db6,0x4d
  41f157:	ja     0x41f150
  41f159:	int    0xc
  41f15b:	stos   BYTE PTR es:[edi],al
  41f15c:	test   BYTE PTR [eax+eiz*4-0x24c693a],dl
  41f163:	jmp    0x1cfc:0xee3bf13b
  41f16a:	xor    ebx,DWORD PTR [ecx+0x76]
  41f16d:	push   0x29
  41f16f:	(bad)  [ebp-0x64f202a6]
  41f175:	fdiv   QWORD PTR [eax+0xb04542f]
  41f17b:	pop    es
  41f17c:	js     0x41f104
  41f17e:	loop   0x41f197
  41f180:	pushf  
  41f181:	shr    dl,cl
  41f183:	sub    al,0x92
  41f185:	lock inc edx
  41f187:	mov    dl,0x14
  41f189:	jmp    0x41f180
  41f18b:	(bad)  
  41f18c:	sar    esi,1
  41f18e:	cmc    
  41f18f:	sti    
  41f190:	mov    ds:0xda0e116b,eax
  41f195:	ret    0x1e87
  41f198:	and    al,BYTE PTR [esi+0x14]
  41f19b:	pop    esi
  41f19c:	dec    ecx
  41f19d:	(bad)  
  41f19f:	cmp    eax,0x39a495dc
  41f1a4:	dec    ecx
  41f1a5:	and    eax,0x23abd2d2
  41f1aa:	mov    fs,esi
  41f1ac:	pushf  
  41f1ad:	and    ebx,0xc11623f6
  41f1b3:	gs sti 
  41f1b5:	sub    esp,ebp
  41f1b7:	jg     0x41f179
  41f1b9:	out    0x11,eax
  41f1bb:	je     0x41f1d2
  41f1bd:	inc    ebp
  41f1be:	in     eax,0xe6
  41f1c0:	jge    0x41f172
  41f1c2:	in     eax,0xdd
  41f1c4:	test   DWORD PTR [esi+0x6e],0x1c536d45
  41f1cb:	mov    BYTE PTR [ebp-0x439709a4],ch
  41f1d1:	fidivr WORD PTR [edi-0x5d]
  41f1d4:	and    BYTE PTR [edx+0x3f],ah
  41f1d7:	sub    bh,BYTE PTR [esi-0x29948a67]
  41f1dd:	lods   eax,DWORD PTR ds:[esi]
  41f1de:	retf   0x1be7
  41f1e1:	mov    dl,0x5
  41f1e3:	pop    ebp
  41f1e4:	jne    0x41f254
  41f1e6:	mov    ebp,0x9426364c
  41f1eb:	push   es
  41f1ec:	mov    edi,DWORD PTR [esi+0x3b04bb77]
  41f1f2:	iret   
  41f1f3:	xor    esp,DWORD PTR [ebp-0x10]
  41f1f6:	sub    cl,BYTE PTR [ecx+0x3d]
  41f1f9:	(bad)  
  41f1fa:	push   esp
  41f1fb:	mov    ds:0xc8ebc8c5,al
  41f200:	test   al,0x7e
  41f202:	ror    BYTE PTR [edx-0x2b],cl
  41f205:	push   edx
  41f206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f207:	xor    eax,0x64c2e113
  41f20c:	add    BYTE PTR [ebp+edi*2-0xf],0x2
  41f211:	sahf   
  41f212:	mov    ebp,0x645d4be1
  41f217:	aaa    
  41f218:	fcmovne st,st(4)
  41f21a:	mov    dl,0x70
  41f21c:	(bad)  
  41f21d:	into   
  41f21e:	shr    BYTE PTR [ebx],0xd0
  41f221:	ret    0x5049
  41f224:	and    al,0x7a
  41f226:	call   0xef4e:0xd6587bbd
  41f22d:	lods   al,BYTE PTR ds:[esi]
  41f22e:	stos   DWORD PTR es:[edi],eax
  41f22f:	cmp    edx,DWORD PTR [eax]
  41f231:	xchg   esi,eax
  41f232:	out    0xa,eax
  41f234:	jle    0x41f298
  41f236:	adc    dh,al
  41f238:	pusha  
  41f239:	pop    esp
  41f23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23b:	jb     0x41f1f7
  41f23d:	and    dh,BYTE PTR [eax]
  41f23f:	out    0x4,eax
  41f241:	or     eax,0x41b88ea9
  41f246:	(bad)  
  41f247:	call   0x6a6b7a82
  41f24c:	into   
  41f24d:	adc    eax,0xf0e840e7
  41f252:	mov    DWORD PTR [esi+0x17],ecx
  41f255:	gs int 0x70
  41f258:	inc    esi
  41f259:	xor    eax,0xb6178391
  41f25e:	outs   dx,DWORD PTR ds:[esi]
  41f25f:	int3   
  41f260:	pop    edx
  41f261:	cmp    eax,0xac5bfbd9
  41f266:	addr16 loop 0x41f216
  41f269:	test   al,0x9d
  41f26b:	sbb    DWORD PTR [edi],eax
  41f26d:	inc    edx
  41f26e:	std    
  41f26f:	sbb    ah,BYTE PTR [ebx+0x40]
  41f272:	dec    eax
  41f273:	sbb    BYTE PTR [ecx],0x8d
  41f276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f277:	or     ah,bl
  41f279:	aad    0xa3
  41f27b:	fild   WORD PTR [edi+0x46]
  41f27e:	scas   eax,DWORD PTR es:[edi]
  41f27f:	pop    ss
  41f280:	dec    ebp
  41f281:	dec    ecx
  41f282:	call   0x47d90f3e
  41f287:	cld    
  41f288:	pop    es
  41f289:	mov    ebp,0x87a6b19a
  41f28e:	daa    
  41f28f:	fild   WORD PTR [edi-0x30]
  41f292:	pop    ecx
  41f293:	jne    0x41f2de
  41f295:	sar    DWORD PTR [ecx+eax*2-0x75ec5658],cl
  41f29c:	(bad)  
  41f29d:	inc    ecx
  41f29e:	fidiv  WORD PTR [ecx+0x74]
  41f2a1:	mov    ah,0xa7
  41f2a3:	retf   
  41f2a4:	outs   dx,DWORD PTR ds:[esi]
  41f2a5:	mov    bl,0xde
  41f2a7:	inc    edi
  41f2a8:	repz add DWORD PTR [ebx+0x4c7dfad0],ebp
  41f2af:	or     ch,BYTE PTR [ecx+ebp*2-0x956fec8]
  41f2b6:	sub    ah,BYTE PTR [edi+0x6ac5859e]
  41f2bc:	xor    eax,0x17295103
  41f2c1:	jne    0x41f2b3
  41f2c3:	dec    ebp
  41f2c4:	cmp    eax,0xad9c66d9
  41f2c9:	mov    dl,0x48
  41f2cb:	mov    DWORD PTR [eax+0x34c2d8c1],eax
  41f2d1:	or     eax,0xd3922810
  41f2d6:	pop    es
  41f2d7:	cwde   
  41f2d8:	mov    dh,0x2c
  41f2da:	mov    DWORD PTR [edx-0x78],0xbafac643
  41f2e1:	pop    ebp
  41f2e2:	jbe    0x41f292
  41f2e4:	pop    ecx
  41f2e5:	dec    ecx
  41f2e6:	add    DWORD PTR [esi-0x5c],ebp
  41f2e9:	jecxz  0x41f2ae
  41f2eb:	pop    esi
  41f2ec:	and    edx,DWORD PTR [ecx-0x3de0983b]
  41f2f2:	mov    ds:0xa5a11fe4,al
  41f2f7:	and    ebx,DWORD PTR [eax+0x172c8e69]
  41f2fd:	mov    cl,0x4b
  41f2ff:	mov    ecx,0xe7df87e
  41f304:	and    eax,0x2e9d99d
  41f309:	dec    edx
  41f30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f30b:	jecxz  0x41f33e
  41f30d:	dec    ebx
  41f30e:	push   ss
  41f30f:	jno    0x41f364
  41f311:	inc    edi
  41f312:	sub    dl,BYTE PTR [ecx]
  41f314:	mov    dh,BYTE PTR [ecx+0x65]
  41f317:	jle    0x41f2ef
  41f319:	jge    0x41f381
  41f31b:	lods   eax,DWORD PTR ds:[esi]
  41f31c:	arpl   WORD PTR [eax+0x2e99cf77],sp
  41f322:	dec    edx
  41f323:	mov    ah,0x12
  41f325:	add    bh,BYTE PTR [esi]
  41f327:	sbb    edx,edx
  41f329:	mov    ecx,DWORD PTR [eax+0x482f66cc]
  41f32f:	push   0x25ad5d34
  41f334:	(bad)  
  41f335:	xlat   BYTE PTR cs:[ebx]
  41f337:	fisub  WORD PTR [ebx+0x25ee2fbd]
  41f33d:	push   es
  41f33e:	add    BYTE PTR [eax+0x29274413],ah
  41f344:	pushf  
  41f345:	lds    ebx,FWORD PTR [edi+0x23a74d69]
  41f34b:	rcr    DWORD PTR [edx+edx*2],cl
  41f34e:	fstp   QWORD PTR [ebx]
  41f350:	jl     0x41f2e9
  41f352:	jne    0x41f2f8
  41f354:	sbb    al,0x1
  41f356:	jg     0x41f302
  41f358:	jecxz  0x41f32d
  41f35a:	test   al,0x4e
  41f35c:	mov    ah,0x5b
  41f35e:	out    dx,eax
  41f35f:	call   0xaa43:0x647255ef
  41f366:	xor    ecx,DWORD PTR [esi]
  41f368:	mov    ch,0x2a
  41f36a:	enter  0xb80e,0xde
  41f36e:	mov    al,ds:0xe654eae4
  41f373:	mov    ch,0xf3
  41f375:	mov    edi,0x4299bd84
  41f37a:	imul   esp,DWORD PTR [eax],0xffffffeb
  41f37d:	fnstcw WORD PTR [ecx+0x6e5a4c74]
  41f383:	stos   DWORD PTR es:[edi],eax
  41f384:	lahf   
  41f385:	lea    esi,[edi]
  41f387:	sti    
  41f388:	mov    bh,0x49
  41f38a:	out    0x4f,eax
  41f38c:	cdq    
  41f38d:	jnp    0x41f33a
  41f38f:	idiv   BYTE PTR [ebx+0x7a]
  41f392:	repnz loop 0x41f3d9
  41f395:	push   es
  41f396:	xchg   edx,eax
  41f397:	out    dx,al
  41f398:	sub    edi,DWORD PTR [ecx]
  41f39a:	push   ds
  41f39b:	mov    WORD PTR [ebp+0x38],fs
  41f39e:	mov    bl,0xe
  41f3a0:	sub    ecx,esi
  41f3a2:	scas   eax,DWORD PTR es:[edi]
  41f3a3:	(bad)  
  41f3a4:	cmp    edi,ebp
  41f3a6:	mov    edx,0xb372b551
  41f3ab:	repnz lods eax,DWORD PTR ds:[esi]
  41f3ad:	ror    BYTE PTR [esi],cl
  41f3af:	stos   DWORD PTR es:[edi],eax
  41f3b0:	jnp    0x41f395
  41f3b2:	(bad)  
  41f3b3:	push   ds
  41f3b4:	or     BYTE PTR [ebx+edi*4],bh
  41f3b7:	pop    edx
  41f3b8:	adc    dh,BYTE PTR [ecx]
  41f3ba:	push   0xffffffab
  41f3bc:	push   0x2e
  41f3be:	or     BYTE PTR ds:0x85a0bd87,ch
  41f3c5:	dec    ecx
  41f3c6:	inc    ebx
  41f3c7:	pop    esp
  41f3c8:	jecxz  0x41f376
  41f3ca:	pop    ebx
  41f3cb:	loopne 0x41f414
  41f3cd:	lods   eax,DWORD PTR ds:[esi]
  41f3ce:	mov    ch,0x5a
  41f3d0:	test   BYTE PTR [edx+ecx*1+0x43],bh
  41f3d4:	xchg   DWORD PTR [eax+ebx*1],edi
  41f3d7:	ins    BYTE PTR es:[edi],dx
  41f3d8:	pop    ebx
  41f3d9:	add    eax,0x80e234b1
  41f3de:	pop    ebx
  41f3df:	dec    esp
  41f3e0:	out    dx,eax
  41f3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3e2:	int3   
  41f3e3:	pop    edx
  41f3e4:	jmp    FWORD PTR [edx+0x7d]
  41f3e7:	add    edx,DWORD PTR [esp+edx*8-0x3cca6480]
  41f3ee:	sub    al,0xf2
  41f3f0:	jne    0x41f3c5
  41f3f2:	or     eax,DWORD PTR [ecx]
  41f3f4:	inc    ebp
  41f3f5:	lock push ecx
  41f3f7:	push   ebx
  41f3f8:	stc    
  41f3f9:	sub    BYTE PTR [ebx],bl
  41f3fb:	repz inc ebp
  41f3fd:	clc    
  41f3fe:	mov    dh,0x35
  41f400:	jg     0x41f3d4
  41f402:	mov    BYTE PTR [ecx+0x3af0991],dl
  41f408:	jb     0x41f485
  41f40a:	enter  0x887,0xf6
  41f40e:	es mov ebx,0x1cc03b88
  41f414:	fwait
  41f415:	mov    ebx,DWORD PTR [esi]
  41f417:	cld    
  41f418:	xchg   esp,eax
  41f419:	rcr    DWORD PTR [eax+ecx*2],0x6c
  41f41d:	adc    dl,ch
  41f41f:	mov    ecx,DWORD PTR [edi-0x6e2da6d]
  41f425:	lods   eax,DWORD PTR ds:[esi]
  41f426:	sub    edi,DWORD PTR [ecx+0x192682bf]
  41f42c:	test   eax,0x4a7383d7
  41f431:	fdivr  QWORD PTR [edi]
  41f433:	ins    BYTE PTR es:[edi],dx
  41f434:	sbb    ebp,DWORD PTR [ebp+0x1e]
  41f437:	or     al,0x26
  41f439:	lea    eax,[edi+ebx*2+0x32]
  41f43d:	retf   
  41f43e:	mov    gs,WORD PTR [ecx]
  41f440:	add    DWORD PTR [ecx],esi
  41f442:	ds xchg ecx,eax
  41f444:	lds    ebp,FWORD PTR [edx-0x39636e5]
  41f44a:	pop    es
  41f44b:	add    DWORD PTR [eax],esi
  41f44d:	mov    ds:0x2d75ee4d,al
  41f452:	dec    ebp
  41f453:	cld    
  41f454:	mov    DWORD PTR [esi],esp
  41f456:	in     eax,dx
  41f457:	push   es
  41f458:	aas    
  41f459:	mov    ebp,0xc7b7ea98
  41f45e:	jecxz  0x41f3e5
  41f460:	fnstcw WORD PTR [eax]
  41f462:	retf   0xdbf1
  41f465:	mov    gs,WORD PTR [ebp+ebp*8-0x155996e1]
  41f46c:	inc    esp
  41f46d:	mov    eax,ds:0x396ad758
  41f472:	push   ebx
  41f473:	packsswb mm3,QWORD PTR [ebp+0x3ce49edd]
  41f47a:	inc    edx
  41f47b:	lods   al,BYTE PTR ds:[esi]
  41f47c:	pop    edi
  41f47d:	sub    ecx,DWORD PTR [ecx+0x7d338870]
  41f483:	inc    edi
  41f484:	inc    esp
  41f485:	mov    eax,ds:0x3e8355ea
  41f48a:	out    0x14,eax
  41f48c:	sahf   
  41f48d:	adc    DWORD PTR [edx],eax
  41f48f:	sub    al,0x31
  41f491:	sbb    DWORD PTR [ecx-0x21aaa705],ecx
  41f497:	sbb    eax,esi
  41f499:	cmp    BYTE PTR [ebx],cl
  41f49b:	outs   dx,DWORD PTR ds:[esi]
  41f49c:	out    dx,eax
  41f49d:	outs   dx,BYTE PTR fs:[esi]
  41f49f:	sbb    eax,0x78482f3
  41f4a4:	xchg   ebp,eax
  41f4a5:	mov    ah,0x2b
  41f4a7:	mov    ds:0x8830f065,al
  41f4ac:	add    ecx,ebx
  41f4ae:	push   edx
  41f4af:	xor    al,0x59
  41f4b1:	retf   
  41f4b2:	faddp  st(6),st
  41f4b4:	dec    esi
  41f4b5:	les    ecx,FWORD PTR [edi+edx*2-0x77fd9ff3]
  41f4bc:	out    dx,eax
  41f4bd:	stos   BYTE PTR es:[edi],al
  41f4be:	ds inc edi
  41f4c0:	hlt    
  41f4c1:	(bad)  
  41f4c2:	cmp    edx,DWORD PTR [edx+ecx*2]
  41f4c5:	adc    esi,0xc1830e4a
  41f4cb:	add    edi,DWORD PTR [esi+eiz*8]
  41f4ce:	pusha  
  41f4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d0:	inc    ebx
  41f4d1:	cmp    eax,0x511f6fa0
  41f4d6:	in     al,dx
  41f4d7:	dec    esp
  41f4d8:	ins    BYTE PTR es:[edi],dx
  41f4d9:	in     eax,0xb
  41f4db:	mov    dl,0x67
  41f4dd:	adc    ebx,DWORD PTR [esp+ebx*2-0x6c]
  41f4e1:	mov    ecx,?
  41f4e3:	pushf  
  41f4e4:	pop    edi
  41f4e5:	pop    edx
  41f4e6:	repz push edi
  41f4e8:	call   0x311e:0x3c061366
  41f4ef:	mov    ebp,0xcf81cbf9
  41f4f4:	pop    eax
  41f4f5:	stos   BYTE PTR es:[edi],al
  41f4f6:	fisub  WORD PTR [ebx]
  41f4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4f9:	retf   
  41f4fa:	mov    bh,0xf8
  41f4fc:	ins    DWORD PTR es:[edi],dx
  41f4fd:	arpl   WORD PTR [eax+0xd],bx
  41f500:	pop    ds
  41f501:	pop    es
  41f502:	ins    BYTE PTR es:[edi],dx
  41f503:	mov    WORD PTR ds:0x192da0ee,gs
  41f509:	pop    esi
  41f50a:	xchg   esp,eax
  41f50b:	adc    BYTE PTR [ebp+edi*2-0x37],al
  41f50f:	jl     0x41f566
  41f511:	repnz add ebp,DWORD PTR [ebx-0x638a5d60]
  41f518:	push   ss
  41f519:	imul   esi,DWORD PTR [ecx-0xcecf2f8],0x25fa2aec
  41f523:	mov    al,ds:0x8dc11dcc
  41f528:	add    esp,DWORD PTR [ecx]
  41f52a:	jae    0x41f4d3
  41f52c:	inc    ebp
  41f52d:	push   esp
  41f52e:	lods   eax,DWORD PTR ds:[esi]
  41f52f:	xor    BYTE PTR [eax+0x837a0e],bl
  41f535:	jg     0x41f4d8
  41f537:	ss nop
  41f539:	mov    dl,0x81
  41f53b:	add    dh,BYTE PTR ds:0x836d8e91
  41f541:	mov    ebx,eax
  41f543:	mov    esp,0x3a529f01
  41f548:	push   ss
  41f549:	sbb    ecx,DWORD PTR [esi]
  41f54b:	test   eax,0x2c5746af
  41f550:	arpl   WORD PTR [ecx+0x12aafbec],cx
  41f556:	inc    esp
  41f557:	pop    esi
  41f558:	retf   
  41f559:	pop    esp
  41f55a:	mov    ds:0x7197c801,al
  41f55f:	inc    esi
  41f560:	and    BYTE PTR [ebx-0x2386c545],ah
  41f566:	push   cs
  41f567:	lock mov ecx,0xdeafddf6
  41f56d:	not    BYTE PTR [edi-0x4e]
  41f570:	test   DWORD PTR [esi+ecx*8-0x3c],0xd452a72f
  41f578:	dec    esp
  41f579:	inc    ebx
  41f57a:	pop    ds
  41f57b:	xchg   ebx,eax
  41f57c:	jecxz  0x41f55e
  41f57e:	test   BYTE PTR [ecx],dh
  41f580:	xchg   DWORD PTR [eax+0x5d],esi
  41f583:	outs   dx,BYTE PTR ds:[esi]
  41f584:	push   0x356ab540
  41f589:	popf   
  41f58a:	fldcw  WORD PTR [edi+esi*8+0x7f]
  41f58e:	fs jge 0x41f5d3
  41f591:	and    edx,DWORD PTR cs:[edx-0x6abfd959]
  41f598:	das    
  41f599:	inc    ecx
  41f59a:	in     al,0x2e
  41f59c:	cld    
  41f59d:	mov    al,cs:0x2c6b21ca
  41f5a3:	mov    edi,0xdbe72ef2
  41f5a8:	scas   al,BYTE PTR es:[edi]
  41f5a9:	jmp    0xa35d9f6b
  41f5ae:	(bad)  
  41f5af:	mov    ecx,0xf5f84361
  41f5b4:	jns    0x41f624
  41f5b6:	pop    edi
  41f5b7:	pusha  
  41f5b8:	xor    eax,0x1f87649d
  41f5bd:	push   ecx
  41f5be:	ror    BYTE PTR [ebx+0x62],1
  41f5c1:	sub    dl,BYTE PTR [edx+eax*2+0x46]
  41f5c5:	pop    esp
  41f5c6:	js     0x41f5a4
  41f5c8:	fisubr WORD PTR [edi+0x2a1abc1]
  41f5ce:	stos   DWORD PTR es:[edi],eax
  41f5cf:	scas   eax,DWORD PTR es:[edi]
  41f5d0:	push   esi
  41f5d1:	int3   
  41f5d2:	repnz mul al
  41f5d5:	int    0x11
  41f5d7:	pop    ss
  41f5d8:	test   DWORD PTR [edx+0x53474abf],0x6d928788
  41f5e2:	push   edx
  41f5e3:	push   0x79461a69
  41f5e8:	push   es
  41f5e9:	stc    
  41f5ea:	ss aaa 
  41f5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ed:	mov    esi,0xbd6c8ddf
  41f5f2:	cmp    al,0xdc
  41f5f4:	mov    cl,0xe5
  41f5f6:	add    DWORD PTR [ebp-0x55],ebx
  41f5f9:	or     ebx,DWORD PTR [edi+eiz*2+0x7e071fce]
  41f600:	in     eax,0xe2
  41f602:	nop
  41f603:	mov    edi,0xc60908bd
  41f608:	hlt    
  41f609:	jo     0x41f681
  41f60b:	pop    ebp
  41f60c:	add    eax,0x53f7a07d
  41f611:	push   esi
  41f612:	jecxz  0x41f631
  41f614:	jecxz  0x41f655
  41f616:	(bad)  
  41f617:	loope  0x41f628
  41f619:	jmp    0x96f1:0xb6f39581
  41f620:	outs   dx,BYTE PTR ds:[esi]
  41f621:	ins    BYTE PTR es:[edi],dx
  41f622:	(bad)  
  41f623:	cmp    al,0x6a
  41f625:	loope  0x41f698
  41f627:	retf   
  41f628:	mov    al,0x35
  41f62a:	repz les ebp,FWORD PTR [eax+0x62ff5024]
  41f631:	xor    DWORD PTR [ebp+0x6],edi
  41f634:	or     edx,DWORD PTR [esi]
  41f636:	sub    bl,BYTE PTR [ecx+0x725e793f]
  41f63c:	ror    BYTE PTR [edx],0x38
  41f63f:	(bad)  
  41f640:	mov    ecx,0xd55ab255
  41f645:	and    al,0xe4
  41f647:	dec    ebp
  41f648:	cmp    dh,BYTE PTR [ebx-0x712e013a]
  41f64e:	xor    DWORD PTR [eax+eiz*8+0x596c0a5f],0xffffff9f
  41f656:	(bad)  
  41f657:	cli    
  41f658:	sub    eax,0xe3924dbc
  41f65d:	dec    ebx
  41f65e:	arpl   WORD PTR [esi+0x38ef27cc],cx
  41f664:	test   esi,edx
  41f666:	xchg   edx,ebp
  41f668:	push   edi
  41f669:	jo     0x41f605
  41f66b:	retf   
  41f66c:	jae    0x41f622
  41f66e:	shl    esi,cl
  41f670:	retf   
  41f671:	push   DWORD PTR [esp+ebx*2]
  41f674:	jl     0x41f6b3
  41f676:	popf   
  41f677:	jmp    0xe1c8:0xbe074ea1
  41f67e:	(bad)  
  41f67f:	pop    edi
  41f680:	loope  0x41f6c9
  41f682:	dec    ebx
  41f683:	mov    ebx,0x836cc6c7
  41f688:	lods   al,BYTE PTR ds:[esi]
  41f689:	lea    ebx,[edi]
  41f68b:	lahf   
  41f68c:	sbb    DWORD PTR [ebp-0x3b9b3528],ebp
  41f692:	xlat   BYTE PTR ds:[ebx]
  41f693:	adc    esp,DWORD PTR [edi-0x30c26208]
  41f699:	icebp  
  41f69a:	fsub   QWORD PTR [ebx-0x3f]
  41f69d:	sti    
  41f69e:	adc    ecx,DWORD PTR [edx]
  41f6a0:	dec    ebp
  41f6a1:	ins    DWORD PTR es:[edi],dx
  41f6a2:	rcr    BYTE PTR [ebp+eiz*4+0x4ed8a911],1
  41f6a9:	cmp    cl,bl
  41f6ab:	imul   ecx,ebx,0x1cb501a6
  41f6b1:	int3   
  41f6b2:	xor    al,0x59
  41f6b4:	mov    edi,0xad7ab3bf
  41f6b9:	pusha  
  41f6ba:	inc    edx
  41f6bb:	xor    eax,0xb1550300
  41f6c0:	dec    edx
  41f6c1:	mov    al,0x59
  41f6c3:	jne    0x41f6e0
  41f6c5:	(bad)  
  41f6c6:	mov    ebx,esi
  41f6c8:	sub    al,0x31
  41f6ca:	out    dx,al
  41f6cb:	scas   eax,DWORD PTR es:[edi]
  41f6cc:	aam    0x80
  41f6ce:	cld    
  41f6cf:	pop    eax
  41f6d0:	jecxz  0x41f733
  41f6d2:	or     ebx,DWORD PTR [ebp-0x32]
  41f6d5:	xchg   ebp,eax
  41f6d6:	and    al,0x36
  41f6d8:	add    eax,0xa6a039a7
  41f6dd:	adc    DWORD PTR [eax-0x22],edx
  41f6e0:	sub    al,0x7
  41f6e2:	inc    ebx
  41f6e3:	mov    ds:0x830b85b9,al
  41f6e8:	adc    esp,DWORD PTR [ecx]
  41f6ea:	repz pop es
  41f6ec:	jae    0x41f765
  41f6ee:	fidiv  DWORD PTR [esi+0x8]
  41f6f1:	pop    ecx
  41f6f2:	imul   esp,DWORD PTR [ebx+ebp*8-0x1dcd4ac1],0x98e5ca1e
  41f6fd:	sub    ebx,ecx
  41f6ff:	cwde   
  41f700:	sub    DWORD PTR [edx-0x7c],0x3d308d1
  41f707:	cli    
  41f708:	inc    esp
  41f709:	push   ss
  41f70a:	xchg   edi,eax
  41f70b:	lods   eax,DWORD PTR ds:[esi]
  41f70c:	xchg   DWORD PTR [ecx+0x3],eax
  41f70f:	call   0xb1e:0x1dbd3b3a
  41f716:	sub    DWORD PTR [ecx-0x37],ebp
  41f719:	repnz xchg edi,eax
  41f71b:	xor    DWORD PTR [ecx],esp
  41f71d:	push   esp
  41f71e:	mov    ds:0x10ffa4e0,al
  41f723:	sub    eax,0x1221399a
  41f728:	mov    dl,0xc6
  41f72a:	inc    eax
  41f72b:	test   al,0x99
  41f72d:	test   DWORD PTR ds:[ecx-0x100dc0cc],0x420753df
  41f738:	dec    ecx
  41f739:	out    dx,eax
  41f73a:	popf   
  41f73b:	cmp    eax,0xc03d678a
  41f740:	adc    eax,0xccadf90d
  41f745:	ja     0x41f6d0
  41f747:	xchg   edx,esi
  41f749:	js     0x41f742
  41f74b:	adc    DWORD PTR [esi+0x62735c7a],esp
  41f751:	arpl   WORD PTR [ebp-0x60],bp
  41f754:	loope  0x41f7b7
  41f756:	mov    esi,0x322c2de1
  41f75b:	and    eax,0x59970a7f
  41f760:	call   0x4bad:0x63bc9fd3
  41f767:	mov    ebx,0x8bba4fc
  41f76c:	xchg   dl,bl
  41f76e:	adc    edi,esi
  41f770:	xchg   esi,eax
  41f771:	xchg   edx,eax
  41f772:	shr    BYTE PTR [edi-0x36],1
  41f775:	mov    bh,0x20
  41f777:	(bad)  
  41f778:	(bad)  
  41f77a:	push   ss
  41f77b:	dec    edx
  41f77c:	(bad)  
  41f77d:	out    dx,al
  41f77e:	sbb    al,0x57
  41f780:	xlat   BYTE PTR ds:[ebx]
  41f781:	sub    edx,edi
  41f783:	(bad)  
  41f784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f785:	jbe    0x41f7f3
  41f787:	dec    ebp
  41f788:	push   0x80525b1c
  41f78d:	stos   DWORD PTR es:[edi],eax
  41f78e:	mov    bh,0x55
  41f790:	imul   DWORD PTR [esi+0x420b75e9]
  41f796:	lea    edi,[edx-0x1d]
  41f799:	pop    es
  41f79a:	xchg   esi,eax
  41f79b:	and    BYTE PTR [edx+0x5ba5758a],bl
  41f7a1:	xchg   edi,eax
  41f7a2:	cmp    al,0x7c
  41f7a4:	push   edi
  41f7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7a6:	dec    ecx
  41f7a7:	add    esi,DWORD PTR [esi+ebp*1]
  41f7aa:	and    eax,0x5d2dc42c
  41f7af:	and    DWORD PTR [ebp-0x69e647c9],ecx
  41f7b5:	sbb    DWORD PTR [edx-0x3f5d59a9],esp
  41f7bb:	pusha  
  41f7bc:	les    ecx,FWORD PTR [edx+0x13e9da39]
  41f7c2:	js     0x41f789
  41f7c4:	data16 aad 0x97
  41f7c7:	ins    BYTE PTR es:[edi],dx
  41f7c8:	dec    eax
  41f7c9:	out    0x6b,al
  41f7cb:	push   esi
  41f7cc:	cdq    
  41f7cd:	fidiv  WORD PTR [eax-0x20]
  41f7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d1:	aad    0x57
  41f7d3:	shl    BYTE PTR [edi+0x6c],0xdf
  41f7d7:	or     eax,DWORD PTR [ecx]
  41f7d9:	jbe    0x41f761
  41f7db:	int3   
  41f7dc:	(bad)  
  41f7dd:	inc    ecx
  41f7de:	or     eax,0xfd9ad185
  41f7e3:	in     al,0x83
  41f7e5:	jmp    0xaf8dc66c
  41f7ea:	popa   
  41f7eb:	sub    al,BYTE PTR [eax+ecx*2]
  41f7ee:	adc    ah,BYTE PTR [esi+0x36]
  41f7f1:	and    DWORD PTR [edi-0x2f999117],esi
  41f7f7:	adc    DWORD PTR [ebx-0x5f],ebp
  41f7fa:	sub    al,0x4
  41f7fc:	dec    ebp
  41f7fd:	enter  0x1732,0x4f
  41f801:	shl    ebx,0xf
  41f804:	xchg   esi,eax
  41f805:	jbe    0x41f7b5
  41f807:	sub    BYTE PTR [eax+ecx*8+0x10],bh
  41f80b:	and    BYTE PTR [ecx],bh
  41f80d:	xor    DWORD PTR [esi-0x76d06a7],ebx
  41f813:	aam    0xe9
  41f815:	je     0x41f827
  41f817:	jle    0x41f87b
  41f819:	int    0x5e
  41f81b:	shl    BYTE PTR [esi],cl
  41f81d:	or     ecx,0xfa8a9e05
  41f823:	bound  esp,QWORD PTR [edi+0x5e01fc1d]
  41f829:	add    al,0x82
  41f82b:	cmp    cl,bh
  41f82d:	repz mov ecx,ds
  41f830:	push   ds
  41f831:	out    0xb1,eax
  41f833:	(bad)  
  41f834:	in     al,dx
  41f835:	jno    0x41f899
  41f837:	pop    edx
  41f838:	mov    al,ds:0x144138e5
  41f83d:	scas   al,BYTE PTR es:[edi]
  41f83e:	jmp    0x16ffe35c
  41f843:	scas   eax,DWORD PTR es:[edi]
  41f844:	sub    DWORD PTR [eax-0xa],0x9565eaa6
  41f84b:	stos   DWORD PTR es:[edi],eax
  41f84c:	(bad)  
  41f84d:	fnsave [edx+0x7fc8f85c]
  41f853:	out    dx,al
  41f854:	test   eax,0x44f19659
  41f859:	je     0x41f8bf
  41f85b:	mov    cl,0x3b
  41f85d:	aas    
  41f85e:	jmp    0x9ccf:0x7add1e9
  41f865:	sbb    BYTE PTR [ebx],ch
  41f867:	sub    BYTE PTR [esi],al
  41f869:	cmp    DWORD PTR ds:0x6bf584d3,esp
  41f86f:	scas   eax,DWORD PTR es:[edi]
  41f870:	cs cwde 
  41f872:	lods   eax,DWORD PTR ds:[esi]
  41f873:	adc    BYTE PTR [eax],ah
  41f875:	test   al,0x2a
  41f877:	in     eax,0x62
  41f879:	push   0x59
  41f87b:	daa    
  41f87c:	gs mov eax,0x5dc8f18f
  41f882:	in     al,dx
  41f883:	data16 lahf 
  41f885:	cmp    esp,DWORD PTR [edi-0x7c]
  41f888:	ret    0xfad
  41f88b:	mov    cl,dl
  41f88d:	sbb    al,0x5b
  41f88f:	icebp  
  41f890:	in     al,0x52
  41f892:	ror    BYTE PTR [edx+0x7418465e],1
  41f898:	cmp    bl,BYTE PTR [edi+0x780595bb]
  41f89e:	dec    ebp
  41f89f:	or     DWORD PTR [eax],edx
  41f8a1:	call   0x1e6f222f
  41f8a6:	jge    0x41f8c0
  41f8a8:	fst    DWORD PTR [ebx]
  41f8aa:	and    DWORD PTR [edi-0xcb29a49],0xd7693a70
  41f8b4:	or     eax,0xf7514b33
  41f8b9:	lahf   
  41f8ba:	and    edi,0xffffffc9
  41f8bd:	push   ds
  41f8be:	mov    cl,0x32
  41f8c0:	lea    edi,[esi-0x2b]
  41f8c3:	in     al,0x60
  41f8c5:	sub    DWORD PTR [esi],eax
  41f8c7:	aas    
  41f8c8:	mov    ds:0xa345e,eax
  41f8cd:	adc    dh,BYTE PTR [ebx+0x4e]
  41f8d0:	sub    ecx,DWORD PTR [ebp-0x7f29809d]
  41f8d6:	imul   ecx,eax,0x134a054d
  41f8dc:	inc    edi
  41f8dd:	mov    al,ds:0x96dca0b2
  41f8e2:	mov    al,ds:0xae394eff
  41f8e7:	popf   
  41f8e8:	xchg   esp,eax
  41f8e9:	daa    
  41f8ea:	xor    al,0x97
  41f8ec:	sub    eax,0x49bb8489
  41f8f1:	imul   ebx,DWORD PTR [edi],0xffffff99
  41f8f4:	jecxz  0x41f956
  41f8f6:	push   0xffffffab
  41f8f8:	or     BYTE PTR [eax-0x2f0846a4],bh
  41f8fe:	retf   
  41f8ff:	mov    DWORD PTR fs:[ecx],eax
  41f902:	test   ch,bl
  41f904:	ficom  WORD PTR [edx+0x5d047483]
  41f90a:	push   ds
  41f90b:	out    dx,eax
  41f90c:	jp     0x41f8f9
  41f90e:	push   es
  41f90f:	aad    0x71
  41f911:	mov    bh,0x76
  41f913:	stos   DWORD PTR es:[edi],eax
  41f914:	or     esp,eax
  41f916:	dec    ecx
  41f917:	jbe    0x41f93f
  41f919:	aas    
  41f91a:	sub    eax,0xb218742d
  41f91f:	mov    eax,ds:0x47c50cb2
  41f924:	cmp    ch,BYTE PTR [ebp-0x73]
  41f927:	dec    edx
  41f928:	ins    DWORD PTR es:[edi],dx
  41f929:	aad    0x8
  41f92b:	inc    ebx
  41f92c:	popa   
  41f92d:	stc    
  41f92e:	and    DWORD PTR [edi+0x16bbced0],0xffffffd7
  41f935:	xchg   ebp,eax
  41f936:	(bad)  
  41f937:	mov    WORD PTR [esi-0x2a18a374],?
  41f93d:	nop
  41f93e:	xchg   ecx,eax
  41f93f:	test   ebx,ebp
  41f941:	add    DWORD PTR [esi+0xe],edx
  41f944:	cmp    esi,esi
  41f946:	jmp    0x81dea15e
  41f94b:	adc    al,dl
  41f94d:	in     eax,0xe7
  41f94f:	mov    ecx,0x7bf99c9e
  41f954:	and    esp,DWORD PTR [edi+0x7a]
  41f957:	xor    al,BYTE PTR ds:0x516d93cc
  41f95d:	or     edi,DWORD PTR [ecx-0x64]
  41f960:	mov    edi,DWORD PTR [edx+0x64]
  41f963:	jecxz  0x41f8e7
  41f965:	mov    ?,WORD PTR [ebx+0x10bdb986]
  41f96b:	fstp   DWORD PTR [ebx+0x22]
  41f96e:	mov    edx,0xf0c0ee6
  41f973:	or     eax,0x43d8e765
  41f978:	shl    BYTE PTR [eax],cl
  41f97a:	or     al,0xec
  41f97c:	sub    ebx,ebp
  41f97e:	outs   dx,BYTE PTR ds:[esi]
  41f97f:	loop   0x41f9ef
  41f981:	repnz rcr DWORD PTR [esi],1
  41f984:	out    dx,eax
  41f985:	or     dh,BYTE PTR ds:0x253c9869
  41f98b:	push   cs
  41f98c:	mov    ch,BYTE PTR [eax+0x2e1ca776]
  41f992:	sub    BYTE PTR [edx],cl
  41f994:	inc    esp
  41f995:	mov    eax,ds:0x27b0eef8
  41f99a:	push   eax
  41f99b:	pop    ecx
  41f99c:	mov    ecx,DWORD PTR [edx]
  41f99e:	das    
  41f99f:	cmp    DWORD PTR [ecx+ecx*4],ebp
  41f9a2:	inc    ebx
  41f9a3:	int    0x2
  41f9a5:	sbb    BYTE PTR [esi+0x179f725d],0x66
  41f9ac:	push   esp
  41f9ad:	cmp    al,0x2e
  41f9af:	sub    ah,0xc
  41f9b2:	and    ch,BYTE PTR [ebp-0x74220f7f]
  41f9b8:	dec    ecx
  41f9b9:	xchg   bl,ch
  41f9bb:	adc    al,0x6b
  41f9bd:	js     0x41fa3c
  41f9bf:	icebp  
  41f9c0:	ins    BYTE PTR es:[edi],dx
  41f9c1:	jle    0x41f97e
  41f9c3:	ja     0x41f9c1
  41f9c5:	repz aas 
  41f9c7:	jg     0x41f958
  41f9c9:	ins    BYTE PTR es:[edi],dx
  41f9ca:	mov    eax,0x412a27cc
  41f9cf:	and    dl,ch
  41f9d1:	ror    BYTE PTR [edx],cl
  41f9d3:	nop
  41f9d4:	in     al,0xc9
  41f9d6:	pop    ss
  41f9d7:	add    BYTE PTR [ebp-0x2e],0xde
  41f9db:	sub    eax,0x3b2c504a
  41f9e0:	pushf  
  41f9e1:	outs   dx,DWORD PTR ds:[esi]
  41f9e2:	mov    esp,0x2e8fb93
  41f9e7:	mov    eax,ds:0xf8a3a9a3
  41f9ec:	(bad)  
  41f9ed:	test   eax,0x74111764
  41f9f2:	jno    0x41f982
  41f9f4:	push   esp
  41f9f5:	outs   dx,DWORD PTR ds:[esi]
  41f9f6:	xchg   edx,eax
  41f9f7:	sub    bh,BYTE PTR [esi+0x7d]
  41f9fa:	or     DWORD PTR [edi],edx
  41f9fc:	pop    esp
  41f9fd:	fcomp  DWORD PTR [ecx]
  41f9ff:	cwde   
  41fa00:	xor    eax,0xb7d1e869
  41fa05:	cmp    bh,ah
  41fa07:	icebp  
  41fa08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa09:	ds jnp 0x41f9e4
  41fa0c:	jnp    0x41fa36
  41fa0e:	das    
  41fa0f:	retf   
  41fa10:	push   cs
  41fa11:	fiadd  WORD PTR [esi-0x356b804b]
  41fa17:	jne    0x41f9be
  41fa19:	inc    eax
  41fa1a:	xlat   BYTE PTR ds:[ebx]
  41fa1b:	dec    esp
  41fa1c:	sub    eax,0xd5ef57bb
  41fa21:	push   edi
  41fa22:	scas   eax,DWORD PTR es:[edi]
  41fa23:	out    dx,al
  41fa24:	pop    ss
  41fa25:	(bad)  
  41fa26:	fistp  QWORD PTR ds:0xda599789
  41fa2c:	popa   
  41fa2d:	sbb    BYTE PTR [ebp-0xd3e5d0d],0x57
  41fa34:	test   eax,0x90b4c80c
  41fa39:	lds    ecx,FWORD PTR [esi-0x47]
  41fa3c:	retf   
  41fa3d:	es pop edi
  41fa3f:	das    
  41fa40:	sar    DWORD PTR [edx+eax*8-0x38],cl
  41fa44:	add    ebx,edi
  41fa46:	mov    al,0xc1
  41fa48:	in     al,0x4c
  41fa4a:	pushf  
  41fa4b:	push   es
  41fa4c:	in     eax,dx
  41fa4d:	movd   DWORD PTR [eax+0x210765df],mm1
  41fa54:	jbe    0x41fa46
  41fa56:	cmp    eax,0x84d87a
  41fa5b:	xor    DWORD PTR [edi-0x4251f665],esp
  41fa61:	and    DWORD PTR [ecx],edx
  41fa63:	sub    eax,0x157ffb44
  41fa68:	pop    es
  41fa69:	xlat   BYTE PTR ds:[ebx]
  41fa6a:	mov    esp,0x4ae0abf3
  41fa6f:	popf   
  41fa70:	adc    eax,DWORD PTR [ebp+0x455c0a0e]
  41fa76:	ret    0x5738
  41fa79:	outs   dx,BYTE PTR ds:[esi]
  41fa7a:	push   ss
  41fa7b:	mov    dl,0x38
  41fa7d:	xor    eax,0x70c8bbac
  41fa82:	and    al,0x58
  41fa84:	or     DWORD PTR [esi-0x6d],edi
  41fa87:	dec    ebp
  41fa88:	or     al,0xb8
  41fa8a:	inc    eax
  41fa8b:	mov    cl,BYTE PTR [eax]
  41fa8d:	pusha  
  41fa8e:	sti    
  41fa8f:	mov    bh,0x50
  41fa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa92:	ffreep st(0)
  41fa94:	pop    edx
  41fa95:	add    BYTE PTR [edx],cl
  41fa97:	push   edx
  41fa98:	repz jle 0x41fa82
  41fa9b:	shl    bh,cl
  41fa9d:	loop   0x41fb0e
  41fa9f:	push   0xdecf4a94
  41faa4:	xor    dl,BYTE PTR [ebx]
  41faa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa7:	aad    0xba
  41faa9:	cld    
  41faaa:	cld    
  41faab:	xchg   al,dl
  41faad:	test   al,0x79
  41faaf:	pop    eax
  41fab0:	inc    ecx
  41fab1:	sub    BYTE PTR [edx+0x1e1f8730],bh
  41fab7:	(bad)  
  41fab8:	jl     0x41fac6
  41faba:	mov    esp,0xf52abaef
  41fabf:	mov    DWORD PTR [ebx+0x76f3bd02],edx
  41fac5:	xchg   edi,eax
  41fac6:	cs dec eax
  41fac8:	out    dx,eax
  41fac9:	lahf   
  41faca:	mov    BYTE PTR [eax],cl
  41facc:	pop    ebp
  41facd:	mov    ds:0x34b6b4e,eax
  41fad2:	ds loop 0x41fb06
  41fad5:	out    dx,al
  41fad6:	push   cs
  41fad7:	addr16 ja 0x41fad6
  41fada:	or     dl,BYTE PTR [ebx]
  41fadc:	push   ss
  41fadd:	(bad)  
  41fade:	and    DWORD PTR [eax],edx
  41fae0:	jmp    0xfaede84
  41fae5:	retf   0x740e
  41fae8:	in     al,0xb8
  41faea:	fimul  WORD PTR ds:0x1efe5040
  41faf0:	adc    eax,0xf73d631c
  41faf5:	popf   
  41faf6:	pop    edx
  41faf7:	cmp    DWORD PTR [ecx-0x69],0x2c
  41fafb:	int    0x15
  41fafd:	aam    0xfc
  41faff:	pusha  
  41fb00:	push   es
  41fb01:	jg     0x41fb0c
  41fb03:	sbb    eax,0x164a6243
  41fb08:	rol    DWORD PTR [ecx-0x627fbe55],0x93
  41fb0f:	jo     0x41fb3e
  41fb11:	mov    bl,0x33
  41fb13:	push   ss
  41fb14:	jo     0x41fb8d
  41fb16:	push   ds
  41fb17:	std    
  41fb18:	mov    ds:0xf46fe33f,al
  41fb1d:	cmc    
  41fb1e:	out    dx,al
  41fb1f:	dec    ebx
  41fb20:	(bad)  
  41fb21:	retf   0x4cc3
  41fb24:	into   
  41fb25:	push   esp
  41fb26:	dec    esp
  41fb27:	jae    0x41fb05
  41fb29:	add    BYTE PTR [edi-0x40e1c43d],dh
  41fb2f:	push   0xaba23444
  41fb34:	sbb    BYTE PTR [edx+0x16],dh
  41fb37:	push   es
  41fb38:	cdq    
  41fb39:	ss mov ecx,0x264c4f68
  41fb3f:	das    
  41fb40:	or     al,0x1
  41fb42:	retf   0x621e
  41fb45:	es jne 0x41fadc
  41fb48:	in     eax,dx
  41fb49:	push   ebx
  41fb4a:	xchg   ebp,esi
  41fb4c:	iret   
  41fb4d:	dec    ecx
  41fb4e:	outs   dx,BYTE PTR ds:[esi]
  41fb4f:	add    ah,ch
  41fb51:	outs   dx,DWORD PTR ds:[esi]
  41fb52:	sub    esi,esp
  41fb54:	sub    al,0x1a
  41fb56:	call   0xe447bb8b
  41fb5b:	dec    ebx
  41fb5c:	rcl    BYTE PTR [ecx],cl
  41fb5e:	jne    0x41fb1d
  41fb60:	jg     0x41fb04
  41fb62:	(bad)
  41fb65:	sbb    BYTE PTR [ecx],al
  41fb67:	in     eax,0x29
  41fb69:	xor    al,0xee
  41fb6b:	mov    esp,0x17f5d4cf
  41fb70:	dec    edx
  41fb71:	mov    BYTE PTR [eax+esi*8],ah
  41fb74:	push   ebp
  41fb75:	xchg   DWORD PTR [eax+ebp*2],ebx
  41fb78:	dec    edi
  41fb79:	cmc    
  41fb7a:	mov    ds,WORD PTR [eax+ecx*8]
  41fb7d:	and    BYTE PTR [ecx-0x7434d099],dh
  41fb83:	inc    ebp
  41fb84:	mov    dh,bl
  41fb86:	pushf  
  41fb87:	pop    ebp
  41fb88:	or     BYTE PTR [esi+0x4c68bcd9],bh
  41fb8e:	lods   eax,DWORD PTR ds:[esi]
  41fb8f:	xchg   ah,bh
  41fb91:	jae    0x41fb7f
  41fb93:	mov    ds:0x6c8fc0a5,eax
  41fb98:	mov    esp,ds
  41fb9a:	sbb    BYTE PTR [ebx+0x11bd66b3],cl
  41fba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fba1:	inc    BYTE PTR [esi-0x13b412b2]
  41fba7:	sbb    esi,DWORD PTR [eax]
  41fba9:	xchg   ebp,eax
  41fbaa:	jbe    0x41fbf0
  41fbac:	pop    ebx
  41fbad:	or     edx,DWORD PTR [edi]
  41fbaf:	sbb    ah,BYTE PTR [edx-0x3a]
  41fbb2:	inc    edi
  41fbb3:	and    al,BYTE PTR [edi-0x101d0fcd]
  41fbb9:	sub    eax,0xb5c670b2
  41fbbe:	sbb    BYTE PTR [ebx-0x7a059525],0x89
  41fbc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbc6:	mov    dl,ah
  41fbc8:	ins    BYTE PTR es:[edi],dx
  41fbc9:	addr16 mov ah,0x2e
  41fbcc:	add    BYTE PTR [edi],dl
  41fbce:	fiadd  DWORD PTR [edx-0x46]
  41fbd1:	stos   BYTE PTR es:[edi],al
  41fbd2:	imul   edi,DWORD PTR [edx+0x6b],0x786bfce0
  41fbd9:	daa    
  41fbda:	add    DWORD PTR [ecx+edx*8],0x8bc8bb79
  41fbe1:	dec    edi
  41fbe2:	inc    esp
  41fbe3:	add    al,0x63
  41fbe5:	mov    edi,0x14783b4a
  41fbea:	or     ebx,DWORD PTR [edi]
  41fbec:	mov    edx,DWORD PTR [edx-0x48cf3acb]
  41fbf2:	mov    bl,0x83
  41fbf4:	sub    eax,0x927948f2
  41fbf9:	dec    edx
  41fbfa:	mov    edi,0x2f5b4105
  41fbff:	adc    DWORD PTR [ebp-0x59],esp
  41fc02:	loope  0x41fc02
  41fc04:	jno    0x41fbf5
  41fc06:	fisubr DWORD PTR [ecx+0x4b938707]
  41fc0c:	int    0xe5
  41fc0e:	push   es
  41fc0f:	add    BYTE PTR [ebp+0x12],dh
  41fc12:	loope  0x41fc05
  41fc14:	cmp    edx,DWORD PTR [eax+0x604d68a8]
  41fc1a:	fisttp DWORD PTR [edx]
  41fc1c:	adc    edx,DWORD PTR [edx]
  41fc1e:	pop    DWORD PTR [ebx+0x3d]
  41fc21:	sbb    ah,BYTE PTR [ecx+edx*1-0x2b]
  41fc25:	in     eax,0x59
  41fc27:	mov    bl,0x17
  41fc29:	les    eax,FWORD PTR [esi+0x64]
  41fc2c:	out    0x9b,al
  41fc2e:	jbe    0x41fc9f
  41fc30:	jle    0x41fbe1
  41fc32:	test   BYTE PTR [ebx+0x25],dh
  41fc35:	add    eax,0xf20871ab
  41fc3a:	dec    esi
  41fc3b:	sub    BYTE PTR [edi+0x789cae0d],al
  41fc41:	sub    DWORD PTR [eax],esi
  41fc43:	lahf   
  41fc44:	jno    0x41fcbe
  41fc46:	xchg   DWORD PTR [edx+eax*8],eax
  41fc49:	les    edi,FWORD PTR [eax]
  41fc4b:	iret   
  41fc4c:	xor    dl,al
  41fc4e:	xchg   edi,eax
  41fc4f:	xchg   edi,eax
  41fc50:	cs das 
  41fc52:	out    dx,al
  41fc53:	jp     0x41fc71
  41fc55:	dec    edx
  41fc56:	jp     0x41fc30
  41fc58:	dec    DWORD PTR es:[ebx]
  41fc5b:	mov    al,0x68
  41fc5d:	(bad)  
  41fc5e:	fnstenv [ebp-0x5a]
  41fc61:	inc    edi
  41fc62:	call   0x1834:0x5ba45d1a
  41fc69:	js     0x41fc3d
  41fc6b:	sub    eax,0x4b622688
  41fc70:	jmp    0x41fccf
  41fc72:	mov    edx,0xb99db252
  41fc77:	shl    ecx,cl
  41fc79:	cli    
  41fc7a:	and    eax,0x19cbd58c
  41fc7f:	ss sbb esi,eax
  41fc82:	sbb    eax,DWORD PTR [esi-0x5deb82a8]
  41fc88:	dec    ebx
  41fc89:	jge    0x41fc95
  41fc8b:	xchg   cl,dh
  41fc8d:	mov    dl,0x21
  41fc8f:	cmp    BYTE PTR [esi-0x63a77027],al
  41fc95:	xchg   ebx,eax
  41fc96:	mov    gs,ecx
  41fc98:	shl    DWORD PTR [eax+0x12],1
  41fc9b:	call   0xb468:0x13f2ca9f
  41fca2:	cmp    dh,cl
  41fca4:	mov    edi,0x62d1659
  41fca9:	mov    esp,0x145299b6
  41fcae:	(bad)  
  41fcaf:	retf   
  41fcb0:	stos   DWORD PTR es:[edi],eax
  41fcb1:	loope  0x41fcd5
  41fcb3:	test   al,0xc2
  41fcb5:	test   edi,eax
  41fcb7:	lods   al,BYTE PTR ds:[esi]
  41fcb8:	mov    ecx,0x58b6133e
  41fcbd:	mov    dl,0xce
  41fcbf:	dec    esp
  41fcc0:	lds    esp,FWORD PTR [esi-0x4a]
  41fcc3:	in     eax,dx
  41fcc4:	adc    al,0xf6
  41fcc6:	aaa    
  41fcc7:	ja     0x41fcf7
  41fcc9:	imul   edi,DWORD PTR [edi-0x4bf6d050],0x53
  41fcd0:	retf   
  41fcd1:	sahf   
  41fcd2:	sub    eax,0xa9d107c8
  41fcd7:	jl     0x41fd0a
  41fcd9:	into   
  41fcda:	inc    ecx
  41fcdb:	mov    edi,ecx
  41fcdd:	popa   
  41fcde:	adc    eax,0xcd3ab758
  41fce3:	pop    ebx
  41fce4:	enter  0x3eb4,0xad
  41fce8:	mov    cl,0xc
  41fcea:	int    0xf3
  41fcec:	fsub   QWORD PTR [edi+0x7c]
  41fcef:	fsubr  DWORD PTR [ebp+ebp*4-0x7d]
  41fcf3:	dec    edx
  41fcf4:	es dec edi
  41fcf6:	mov    cl,dh
  41fcf8:	ds push edx
  41fcfa:	or     ecx,esp
  41fcfc:	cmp    BYTE PTR [edi+esi*1-0x2bce8b7],cl
  41fd03:	ins    BYTE PTR es:[edi],dx
  41fd04:	inc    esi
  41fd05:	dec    ebx
  41fd06:	aam    0x3d
  41fd08:	pop    ebp
  41fd09:	stos   DWORD PTR es:[edi],eax
  41fd0a:	shl    DWORD PTR [ebp+0x579cec9c],cl
  41fd10:	data16 stos BYTE PTR es:[edi],al
  41fd12:	mov    ch,0x88
  41fd14:	xchg   ecx,eax
  41fd15:	shl    DWORD PTR [ebp+edx*1+0x6e],1
  41fd19:	adc    DWORD PTR [edi-0x4e24496f],ebx
  41fd1f:	push   ebp
  41fd20:	(bad)  
  41fd21:	out    dx,eax
  41fd22:	fs pushf 
  41fd24:	add    dh,BYTE PTR [bp+si+0x76]
  41fd28:	mov    ebx,0x5a0c05a0
  41fd2d:	imul   esi,DWORD PTR [edi],0xfffffffe
  41fd30:	add    eax,0xd196fd82
  41fd35:	inc    ebx
  41fd37:	or     ebp,ebx
  41fd39:	push   ds
  41fd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd3b:	mov    edx,DWORD PTR [eax-0x7df484b9]
  41fd41:	mov    esp,0xe922fbd3
  41fd46:	stos   DWORD PTR es:[edi],eax
  41fd47:	ins    DWORD PTR es:[edi],dx
  41fd48:	sub    bh,bh
  41fd4a:	ret    
  41fd4b:	mov    edx,DWORD PTR [edi+0x13eb00e2]
  41fd51:	cld    
  41fd52:	call   0x4f84b1a6
  41fd57:	push   ecx
  41fd58:	inc    ecx
  41fd59:	dec    esp
  41fd5a:	retf   0xa186
  41fd5d:	mov    ah,0x50
  41fd5f:	sub    bh,BYTE PTR [ebp-0x48927d93]
  41fd65:	popf   
  41fd66:	or     eax,0xee4f9789
  41fd6b:	mov    BYTE PTR [eax-0xaf1f5e3],dh
  41fd71:	pop    eax
  41fd72:	pushf  
  41fd73:	push   cs
  41fd74:	sahf   
  41fd75:	xchg   edx,eax
  41fd76:	mov    ds:0x1f48b8d8,al
  41fd7b:	and    BYTE PTR ds:0x170d325b,0x3d
  41fd82:	pop    ecx
  41fd83:	mov    esi,0xd5452ceb
  41fd88:	popa   
  41fd89:	pop    edx
  41fd8a:	scas   eax,DWORD PTR es:[edi]
  41fd8b:	out    dx,al
  41fd8c:	retf   
  41fd8d:	fstp   TBYTE PTR [edi+0x50]
  41fd90:	mov    edx,DWORD PTR [edx-0x6c]
  41fd93:	adc    bh,BYTE PTR [ebp-0x2e3aad02]
  41fd99:	xchg   esi,eax
  41fd9a:	outs   dx,DWORD PTR ds:[esi]
  41fd9b:	gs pop esp
  41fd9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd9e:	ret    
  41fd9f:	or     BYTE PTR [edi+0x2c14e627],0x8d
  41fda6:	loop   0x41fe0e
  41fda8:	nop
  41fda9:	or     eax,0x88c00049
  41fdae:	adc    ecx,0x7274bd91
  41fdb4:	cmp    ecx,ecx
  41fdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdb7:	push   eax
  41fdb8:	and    ebx,DWORD PTR [esi]
  41fdba:	in     eax,dx
  41fdbb:	gs js  0x41fe18
  41fdbe:	push   esp
  41fdbf:	cmp    eax,0x80ede1c8
  41fdc4:	cmp    al,0xcb
  41fdc6:	inc    ebx
  41fdc7:	inc    edx
  41fdc8:	(bad)  
  41fdca:	lock aas 
  41fdcc:	mov    eax,0x99695a81
  41fdd1:	pop    ebp
  41fdd2:	jecxz  0x41fe35
  41fdd4:	and    DWORD PTR [esi+0x45],eax
  41fdd7:	enter  0x5d1,0x59
  41fddb:	lea    ebp,[edx-0x4190a3be]
  41fde1:	xchg   BYTE PTR [eax+0x6d],dh
  41fde4:	pop    ds
  41fde5:	mov    cl,0x13
  41fde7:	mov    dh,0x35
  41fde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdea:	push   0x4f
  41fdec:	popf   
  41fded:	(bad)  
  41fdef:	verr   WORD PTR [esp+ecx*2]
  41fdf3:	hlt    
  41fdf4:	aad    0xe6
  41fdf6:	dec    ebx
  41fdf7:	adc    ah,cl
  41fdf9:	mov    ch,0xbd
  41fdfb:	mov    dl,0x4d
  41fdfd:	mov    ecx,DWORD PTR [ebx+0x23]
  41fe00:	hlt    
  41fe01:	jp     0x41fd95
  41fe03:	inc    esp
  41fe04:	pop    ebp
  41fe05:	dec    eax
  41fe06:	fmul   st(5),st
  41fe08:	(bad)  [ebx+esi*4-0x4fab8667]
  41fe0f:	(bad)  
  41fe10:	loopne 0x41fe0a
  41fe12:	gs ins DWORD PTR es:[edi],dx
  41fe14:	xor    al,0x22
  41fe16:	stc    
  41fe17:	mov    al,0xf7
  41fe19:	inc    ebp
  41fe1a:	cmp    eax,0xd56e49aa
  41fe1f:	push   ebp
  41fe20:	lods   eax,DWORD PTR ds:[esi]
  41fe21:	lahf   
  41fe22:	lds    edx,FWORD PTR [edi+0x44]
  41fe25:	inc    edi
  41fe26:	sub    DWORD PTR [edi],esi
  41fe28:	adc    DWORD PTR [ecx+0x23],esp
  41fe2b:	in     al,dx
  41fe2c:	jno    0x41fddd
  41fe2e:	cmp    eax,0x5166441b
  41fe33:	call   0x7732:0x2cb51565
  41fe3a:	adc    ebp,eax
  41fe3c:	push   ebp
  41fe3d:	inc    edx
  41fe3e:	sbb    BYTE PTR [eax-0x63],al
  41fe41:	pushf  
  41fe42:	cli    
  41fe43:	test   al,0xc0
  41fe45:	call   0xc50b47f0
  41fe4a:	fisttp QWORD PTR ds:[eax+eax*1-0x5e]
  41fe4f:	sbb    eax,0x7bccfb18
  41fe54:	ds jp  0x41fe2c
  41fe57:	jnp    0x41fece
  41fe59:	stos   BYTE PTR es:[edi],al
  41fe5a:	and    eax,0x8acadc5a
  41fe5f:	or     eax,0xa1230814
  41fe64:	rol    DWORD PTR [ebx+ecx*1-0x25],cl
  41fe68:	sub    esp,DWORD PTR [ecx+0x65]
  41fe6b:	jge    0x41fe98
  41fe6d:	push   0x31fa0512
  41fe72:	add    eax,0xad775f8e
  41fe77:	xlat   BYTE PTR ds:[ebx]
  41fe78:	sbb    BYTE PTR [edx-0x7f],bh
  41fe7b:	mov    DWORD PTR [eax+eax*8+0x2778621e],eax
  41fe82:	add    BYTE PTR [esi],ch
  41fe84:	cld    
  41fe85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe86:	call   0x9d6abeb6
  41fe8b:	lea    esp,[eax+0x7b2a84e8]
  41fe91:	ja     0x41fe70
  41fe93:	pop    esi
  41fe94:	jns    0x41fee6
  41fe96:	bound  ebp,QWORD PTR gs:0xf48951ab
  41fe9d:	sub    esi,DWORD PTR [esp+ebp*1+0x42]
  41fea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea2:	rcl    DWORD PTR [ebx-0xab14b16],cl
  41fea8:	(bad)  
  41fea9:	xor    dl,BYTE PTR ds:0xcc00de1d
  41feaf:	test   al,0xc6
  41feb1:	daa    
  41feb2:	test   edi,0x4fb635b1
  41feb8:	push   ebp
  41feb9:	and    DWORD PTR ds:[eax-0x72f7229f],ebp
  41fec0:	dec    esi
  41fec1:	fcomp  QWORD PTR [ebx-0x22cadb54]
  41fec7:	std    
  41fec8:	sbb    ebp,DWORD PTR [ecx+edx*1-0x6]
  41fecc:	inc    ebx
  41fecd:	inc    edx
  41fece:	das    
  41fecf:	adc    al,0x89
  41fed1:	add    eax,0x3bbd2b4b
  41fed6:	add    eax,0xadf4f44e
  41fedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fedc:	and    BYTE PTR [ebp-0x78],bh
  41fedf:	pop    ecx
  41fee0:	lods   eax,DWORD PTR ds:[esi]
  41fee1:	xchg   DWORD PTR [esi],ecx
  41fee3:	sub    ebx,DWORD PTR [edi+0x38]
  41fee6:	imul   ebp,DWORD PTR [edx],0xbd749eeb
  41feec:	dec    esp
  41feed:	mov    BYTE PTR [ebp-0x106e852f],al
  41fef3:	daa    
  41fef4:	lock sub BYTE PTR [ebx],ch
  41fef7:	mov    edi,0x81eec946
  41fefc:	sahf   
  41fefd:	retf   0xde97
  41ff00:	out    0xf4,eax
  41ff02:	test   eax,0x43eeffb
  41ff07:	arpl   WORD PTR [eax],sp
  41ff09:	arpl   WORD PTR [esi],dx
  41ff0b:	loope  0x41ff82
  41ff0d:	fs inc eax
  41ff0f:	push   ebx
  41ff10:	mov    bh,0x89
  41ff12:	data16 lods al,BYTE PTR ds:[esi]
  41ff14:	popa   
  41ff15:	adc    eax,0x40470a0e
  41ff1a:	cs sti 
  41ff1c:	test   edi,ebx
  41ff1e:	imul   ecx,DWORD PTR [ebp-0x14],0xcdd9293e
  41ff25:	jg     0x41ff9a
  41ff27:	iret   
  41ff28:	clc    
  41ff29:	xor    ecx,edi
  41ff2b:	or     ebx,DWORD PTR [edx+0x28]
  41ff2e:	pop    edi
  41ff2f:	pop    ebp
  41ff30:	(bad)  
  41ff31:	jg     0x41ff0f
  41ff33:	repz push cs
  41ff35:	and    eax,0xd4ea9552
  41ff3a:	scas   al,BYTE PTR es:[edi]
  41ff3b:	cmp    al,0x60
  41ff3d:	lds    esi,FWORD PTR [ecx-0x6c1eec27]
  41ff43:	or     eax,0x4783645d
  41ff48:	add    DWORD PTR [ebx+edi*8],ecx
  41ff4b:	ins    BYTE PTR es:[edi],dx
  41ff4c:	xor    al,0xe3
  41ff4e:	cwde   
  41ff4f:	sub    al,0xfc
  41ff51:	adc    eax,0x293cf25c
  41ff56:	xchg   ebp,eax
  41ff57:	fild   DWORD PTR [eax]
  41ff59:	inc    ebx
  41ff5a:	mov    ebx,ds
  41ff5c:	cli    
  41ff5d:	test   BYTE PTR [edx+0x5b],ah
  41ff60:	repnz fstp st(5)
  41ff63:	adc    esi,ecx
  41ff65:	cmp    esi,0xb
  41ff68:	adc    al,0x1b
  41ff6a:	jmp    0xa57e7366
  41ff6f:	jmp    0xd56df2f9
  41ff74:	cmp    ebp,DWORD PTR [ebx]
  41ff76:	loop   0x41ff18
  41ff78:	pop    ss
  41ff79:	popf   
  41ff7a:	mov    bh,0x2
  41ff7c:	jne    0x41ffbf
  41ff7e:	mov    bh,0x84
  41ff80:	addr16 call 0x9916:0x1014c1ea
  41ff88:	popf   
  41ff89:	jne    0x41ff85
  41ff8b:	or     BYTE PTR [edx+0x562b6e78],ah
  41ff91:	xor    eax,DWORD PTR [ebx*4-0x4458f208]
  41ff98:	out    0x8e,eax
  41ff9a:	ds jo  0x41ff40
  41ff9d:	cmp    dl,BYTE PTR [edx+0x8]
  41ffa0:	push   ecx
  41ffa1:	xchg   edi,eax
  41ffa2:	js     0x41ffdb
  41ffa4:	mov    ecx,0x6265f61a
  41ffa9:	and    eax,0xd1f50117
  41ffae:	jnp    0x41ff64
  41ffb0:	adc    al,BYTE PTR [edi-0x41166ee5]
  41ffb6:	(bad)  
  41ffb7:	jns    0x420020
  41ffb9:	arpl   WORD PTR [eax-0x3c501252],sp
  41ffbf:	ja     0x41ffd4
  41ffc1:	pop    ss
  41ffc2:	loopne 0x420036
  41ffc4:	int3   
  41ffc5:	pushf  
  41ffc6:	dec    edi
  41ffc7:	inc    edx
  41ffc8:	fcomp  DWORD PTR [esi+0x30]
  41ffcb:	rcr    DWORD PTR [ecx-0x44],0x25
  41ffcf:	sbb    DWORD PTR [eax+0x3acafb45],ebx
  41ffd5:	ror    DWORD PTR [edx+0xb],1
  41ffd8:	inc    edi
  41ffd9:	inc    ebx
  41ffda:	inc    ebp
  41ffdb:	jnp    0x42004f
  41ffdd:	mov    edx,DWORD PTR [eax-0x5073caf5]
  41ffe3:	hlt    
  41ffe4:	loopne 0x41ff8a
  41ffe6:	lea    edi,[ecx+0x1f23f0f5]
  41ffec:	mov    esp,0xa0f98ea6
  41fff1:	out    0x17,al
  41fff3:	clc    
  41fff4:	push   esi
  41fff5:	and    al,0xf6
  41fff7:	xor    DWORD PTR [edi],edx
  41fff9:	lea    ebx,fs:[esi+0x7b70eb2c]
  420000:	int    0x28
  420002:	rol    BYTE PTR ss:[eax-0x4b305084],0x87
  42000a:	push   ecx
  42000b:	xor    al,0x3e
  42000d:	(bad)  
  42000e:	in     al,dx
  42000f:	pop    es
  420010:	inc    ecx
  420011:	mov    eax,0x206f8ae5
  420016:	aaa    
  420017:	arpl   WORD PTR [edi-0x6f31c0d2],ax
  42001d:	in     eax,0x9
  42001f:	add    dh,BYTE PTR [edi+0x38a837e2]
  420025:	xor    ax,0x9620
  420029:	add    BYTE PTR [esi+esi*4],dl
  42002c:	xor    eax,0xcc855fa4
  420031:	or     al,0x3d
  420033:	mov    ds:0x14634c13,al
  420038:	retf   0x727c
  42003b:	push   ebp
  42003c:	lods   al,BYTE PTR ds:[esi]
  42003d:	test   DWORD PTR [esi-0x26],0x20737bd5
  420044:	and    DWORD PTR [edi],eax
  420046:	cmp    esi,eax
  420048:	sub    ah,BYTE PTR [eax]
  42004a:	fsub   QWORD PTR [esi+0x6f]
  42004d:	pop    ebx
  42004e:	mov    ecx,0x47d97d78
  420053:	cmp    eax,0xfe139cdd
  420058:	push   cs
  420059:	mov    BYTE PTR [esp+edi*4-0x1d],cl
  42005d:	std    
  42005e:	sar    BYTE PTR [edx+0x34],1
  420061:	repnz push ecx
  420063:	pop    edi
  420064:	add    eax,0x53014212
  420069:	imul   edx,DWORD PTR [ecx+ebp*2-0x4ca1bc5a],0xc38f8ae9
  420074:	popf   
  420075:	cld    
  420076:	out    0x6d,eax
  420078:	mov    cl,0x1c
  42007a:	repz das 
  42007c:	lds    edx,FWORD PTR [ecx]
  42007e:	push   ds
  42007f:	fst    QWORD PTR es:[ebx+0x52bb8eeb]
  420086:	jle    0x4200bf
  420088:	adc    ebx,DWORD PTR [ebx]
  42008a:	das    
  42008b:	mov    cl,0x9a
  42008d:	int    0x6f
  42008f:	push   cs
  420090:	popf   
  420091:	xor    al,dh
  420093:	addr16 and eax,0x60
  420097:	pushf  
  420098:	pop    ds
  420099:	adc    eax,0x97479efb
  42009e:	mov    eax,0xe2c492d7
  4200a3:	cmc    
  4200a4:	sub    ebp,DWORD PTR [edi+edi*4]
  4200a7:	sbb    al,0x67
  4200a9:	aaa    
  4200aa:	jmp    0x4200e0
  4200ac:	cmp    ebp,DWORD PTR [edi-0x5ff486cb]
  4200b2:	push   esp
  4200b3:	xchg   ebx,eax
  4200b4:	imul   edi,DWORD PTR [ecx-0x20cdb2d6],0xbce75f8f
  4200be:	mov    ah,0xb7
  4200c0:	push   eax
  4200c1:	mov    al,ds:0x7be6b7b2
  4200c6:	mov    cl,0x40
  4200c8:	inc    ebx
  4200c9:	rcl    ebx,0x99
  4200cc:	sub    al,0x4c
  4200ce:	bnd jl 0x4200a7
  4200d1:	and    eax,0x2c8f0a11
  4200d6:	mov    ebp,0x661f8fa7
  4200db:	scas   al,BYTE PTR es:[edi]
  4200dc:	and    edx,DWORD PTR [eax]
  4200de:	pusha  
  4200df:	xor    ch,0x39
  4200e2:	sbb    cl,0x20
  4200e5:	ins    DWORD PTR es:[edi],dx
  4200e6:	or     DWORD PTR [eax],edx
  4200e8:	outs   dx,BYTE PTR ds:[esi]
  4200e9:	and    al,0x5f
  4200eb:	stos   DWORD PTR es:[edi],eax
  4200ec:	mov    edi,ebp
  4200ee:	lock add BYTE PTR [eax],ah
  4200f1:	mov    ?,WORD PTR [ebp-0x259f4508]
  4200f7:	add    BYTE PTR ds:0xbd7b5ad0,bh
  4200fd:	dec    edx
  4200fe:	cwde   
  4200ff:	xor    BYTE PTR [edi-0x6b80b6eb],ch
  420105:	mov    ah,bh
  420107:	jns    0x4200fc
  420109:	adc    DWORD PTR ds:0x9cab9dc,ebx
  42010f:	add    ebp,ebx
  420111:	out    dx,eax
  420112:	dec    edx
  420113:	adc    al,0x73
  420115:	push   ebp
  420116:	ds jae 0x420110
  420119:	add    BYTE PTR [esi],al
  42011b:	cmp    al,0x78
  42011d:	dec    esi
  42011e:	or     al,0x4e
  420120:	fist   DWORD PTR [ebx]
  420122:	xchg   ebx,eax
  420123:	push   es
  420124:	call   eax
  420126:	inc    edi
  420127:	push   ds
  420128:	sbb    esi,DWORD PTR [edi+0x5fbf150f]
  42012e:	jp     0x4200e3
  420130:	and    al,0xb6
  420132:	das    
  420133:	mov    WORD PTR [eax+0x2c],?
  420136:	mov    bx,0xf680
  42013b:	push   es
  42013c:	or     eax,0x21904022
  420141:	mov    cs,WORD PTR [esp+ebp*4]
  420144:	clc    
  420145:	mov    ebx,0x36f513cb
  42014a:	enter  0x5ec1,0x66
  42014e:	push   ecx
  42014f:	xchg   bl,bh
  420151:	jbe    0x420186
  420153:	xor    edx,DWORD PTR [esi-0x1cb503dc]
  420159:	lahf   
  42015a:	sti    
  42015b:	sbb    BYTE PTR [ebx-0x33],0x6c
  42015f:	ror    BYTE PTR [eax+0x15],0xe0
  420163:	mov    ebp,0xa29e6deb
  420168:	and    DWORD PTR [edx-0x10450b25],ebx
  42016e:	sbb    DWORD PTR [eax-0x77919580],0xcd2c7126
  420178:	xchg   edx,eax
  420179:	sub    BYTE PTR [ebp-0x4b9f135],bh
  42017f:	aas    
  420180:	ds jbe 0x420154
  420183:	jbe    0x42010d
  420185:	push   ss
  420186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420187:	and    al,BYTE PTR [edx+0x2739c7da]
  42018d:	jne    0x4201ad
  42018f:	pop    esp
  420190:	shl    DWORD PTR [edi],1
  420192:	idiv   DWORD PTR [edi-0x2e7f2018]
  420198:	ins    DWORD PTR es:[edi],dx
  420199:	and    BYTE PTR [ecx-0x2bc46f84],dh
  42019f:	in     al,0x6e
  4201a1:	inc    ecx
  4201a2:	xor    cl,dh
  4201a4:	neg    DWORD PTR [ecx-0x7f23a686]
  4201aa:	lock jb 0x4201e8
  4201ad:	loopne 0x420196
  4201af:	jge    0x420223
  4201b1:	repz dec ebx
  4201b3:	xchg   ecx,eax
  4201b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4201b7:	out    dx,al
  4201b8:	push   0xfffffffd
  4201ba:	cmp    al,al
  4201bc:	fsub   DWORD PTR [edx-0x56b145e4]
  4201c2:	mov    ah,0x23
  4201c4:	and    eax,0x8c107a59
  4201c9:	jecxz  0x420236
  4201cb:	push   0x1f
  4201cd:	and    edi,DWORD PTR [ebp-0x1921e35a]
  4201d3:	mov    ecx,0xf06bd98b
  4201d8:	mov    bl,0x82
  4201da:	fcmovnu st,st(6)
  4201dc:	push   0xffffffce
  4201de:	xchg   ebx,eax
  4201df:	inc    eax
  4201e0:	push   0x6b
  4201e2:	ficom  WORD PTR [edx-0x54]
  4201e5:	xchg   edi,eax
  4201e6:	not    BYTE PTR [ecx-0x7427a8e5]
  4201ec:	jno    0x4201a4
  4201ee:	xchg   esi,eax
  4201ef:	lods   al,BYTE PTR ds:[esi]
  4201f0:	scas   eax,DWORD PTR es:[edi]
  4201f1:	mov    ecx,0xa6fa0
  4201f6:	jo     0x42025d
  4201f8:	adc    BYTE PTR [edx+esi*1-0x58],dl
  4201fc:	mov    ecx,DWORD PTR [edx-0xca36fa3]
  420202:	sub    eax,0x47eadf93
  420207:	call   0xd9853720
  42020c:	icebp  
  42020d:	xor    BYTE PTR [ecx-0xcff3285],dh
  420213:	push   edi
  420214:	test   eax,0x2deaff33
  420219:	xor    BYTE PTR [edi-0x496152bd],cl
  42021f:	push   0xfffffffa
  420221:	lahf   
  420222:	hlt    
  420223:	dec    ebx
  420224:	sbb    eax,0x92eb3449
  420229:	rol    DWORD PTR [edi*2+0x432ac010],1
  420230:	mov    bh,BYTE PTR [esi+esi*8+0x485e282d]
  420237:	pop    esi
  420238:	jmp    0xb6817b94
  42023d:	jno    0x42024b
  42023f:	jne    0x420284
  420241:	ins    DWORD PTR es:[edi],dx
  420242:	dec    ebx
  420243:	jg     0x4202b0
  420245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420246:	jns    0x4202ae
  420248:	test   eax,0xa4f36556
  42024d:	das    
  42024e:	cmc    
  42024f:	pop    ebx
  420250:	out    dx,eax
  420251:	pop    ss
  420252:	xor    eax,DWORD PTR [esi]
  420254:	ds push edi
  420256:	leave  
  420257:	jo     0x4202c5
  420259:	inc    sp
  42025b:	fwait
  42025c:	jmp    0x4201ec
  42025e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42025f:	and    ah,al
  420261:	dec    ecx
  420262:	int    0x3e
  420264:	dec    edx
  420265:	fdivr  QWORD PTR [ebp+0x37f634d9]
  42026b:	jg     0x420243
  42026d:	lahf   
  42026e:	hlt    
  42026f:	test   DWORD PTR [esi-0x60bc1905],ebx
  420275:	push   esp
  420276:	xchg   al,al
  420278:	test   DWORD PTR [esi],edx
  42027a:	dec    esp
  42027b:	shl    DWORD PTR [edx+0x26],0xe7
  42027f:	test   eax,0x9967950f
  420284:	fnstenv [ebp-0x10]
  420287:	jge    0x420227
  420289:	clc    
  42028a:	out    0xb7,al
  42028c:	inc    esi
  42028d:	adc    eax,DWORD PTR [eax]
  42028f:	sti    
  420290:	pushf  
  420291:	shl    BYTE PTR [ebp+0x68a3f261],0xde
  420298:	mov    al,0x2a
  42029a:	jns    0x4202df
  42029c:	xchg   edi,eax
  42029d:	retf   
  42029e:	stos   BYTE PTR es:[edi],al
  42029f:	adc    eax,edx
  4202a1:	je     0x4202dc
  4202a3:	ss int3 
  4202a5:	mov    esi,0x2e1ba647
  4202aa:	mov    edx,0x89881ca8
  4202af:	repnz ror BYTE PTR [ebx-0x6c],0x63
  4202b4:	pop    esp
  4202b5:	cdq    
  4202b6:	push   ecx
  4202b7:	add    bl,al
  4202b9:	xchg   esi,eax
  4202ba:	jmp    0xe9257c3b
  4202bf:	aas    
  4202c0:	xchg   edx,eax
  4202c1:	dec    esp
  4202c2:	jmp    0xc7e2:0x50a531e3
  4202c9:	mov    bh,BYTE PTR [ecx+0x56]
  4202cc:	xchg   edi,eax
  4202cd:	out    dx,al
  4202ce:	sbb    DWORD PTR [ebx],esi
  4202d0:	shl    ebx,1
  4202d2:	mov    eax,ds:0xdf6fa6f9
  4202d7:	enter  0x9335,0x28
  4202db:	pop    ebp
  4202dc:	add    esp,DWORD PTR [edx+0x15]
  4202df:	mov    cl,0xe3
  4202e1:	mov    DWORD PTR [edi+0x6b],0xe64aa00
  4202e8:	(bad)  
  4202e9:	pushf  
  4202ea:	inc    edx
  4202eb:	inc    eax
  4202ec:	(bad)  
  4202ed:	mov    ebp,0xefcda0ff
  4202f2:	bound  ebp,QWORD PTR [eax+0x1e]
  4202f5:	cmp    al,0xfe
  4202f7:	mov    WORD PTR [edi+0xc6f1feb],ss
  4202fd:	sbb    ebx,ecx
  4202ff:	lahf   
  420300:	jo     0x42033f
  420302:	dec    ecx
  420303:	clc    
  420304:	clc    
  420305:	jmp    0x42033f
  420307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420308:	aaa    
  420309:	sbb    ebx,DWORD PTR ds:[eax+0x2d]
  42030d:	or     al,BYTE PTR [ecx-0x68]
  420310:	out    dx,eax
  420311:	inc    eax
  420312:	jle    0x4202df
  420314:	mov    cl,0x5b
  420316:	and    ebx,DWORD PTR [esi-0x457cf472]
  42031c:	xchg   ecx,eax
  42031d:	cdq    
  42031e:	out    dx,eax
  42031f:	and    bh,BYTE PTR [edx]
  420321:	adc    BYTE PTR [ebx-0x21],dh
  420324:	xchg   BYTE PTR [esi+0x69],al
  420327:	jg     0x42033c
  420329:	sbb    edx,0xffffffba
  42032c:	rcr    BYTE PTR [edi-0x76b10854],cl
  420332:	in     eax,dx
  420333:	je     0x420362
  420335:	addr16 retf 
  420337:	aaa    
  420338:	popf   
  420339:	jne    0x420310
  42033b:	cdq    
  42033c:	dec    esp
  42033d:	outs   dx,DWORD PTR ds:[esi]
  42033e:	jecxz  0x42034a
  420340:	popf   
  420341:	mov    bh,0xcd
  420343:	inc    ebx
  420344:	jae    0x42039d
  420346:	mov    dl,0x31
  420348:	(bad)  
  420349:	mov    ch,0x33
  42034b:	add    eax,0x4b11bedd
  420350:	jg     0x42039e
  420352:	sar    DWORD PTR [ebx+0x37089bdd],0x88
  420359:	sahf   
  42035a:	std    
  42035b:	mov    DWORD PTR [ecx+edi*2],esi
  42035e:	fild   DWORD PTR [eax]
  420360:	hlt    
  420361:	push   ebx
  420362:	mov    bh,0xf8
  420364:	lods   al,BYTE PTR ds:[esi]
  420365:	sub    ah,BYTE PTR [ecx+0x6e]
  420368:	in     al,dx
  420369:	or     DWORD PTR [ebp-0x3c93210a],0xffffff97
  420370:	ret    0x8c0f
  420373:	mov    WORD PTR [edx-0x33d6c08c],cs
  420379:	xchg   DWORD PTR [edi-0x27e56411],esp
  42037f:	push   0x4c
  420381:	mov    ecx,DWORD PTR [eax]
  420383:	push   es
  420384:	add    al,0x39
  420386:	into   
  420387:	rol    BYTE PTR [edi+0x6a],1
  42038a:	out    dx,eax
  42038b:	sti    
  42038c:	pop    ss
  42038d:	test   al,0x33
  42038f:	inc    edx
  420390:	ret    0x311c
  420393:	mov    BYTE PTR [ebp+0xd3bff92],ah
  420399:	fsubp  st(0),st
  42039b:	test   DWORD PTR [edx],ebp
  42039d:	push   edi
  42039e:	dec    ecx
  42039f:	in     eax,dx
  4203a0:	stos   BYTE PTR es:[edi],al
  4203a1:	pop    esp
  4203a2:	outs   dx,DWORD PTR ds:[esi]
  4203a3:	mov    ebx,0x5bc2237c
  4203a8:	add    DWORD PTR [eax-0x187a2c1e],0x46
  4203af:	call   0xb031:0x54d6cf33
  4203b6:	aad    0xa5
  4203b8:	jne    0x42038f
  4203ba:	jecxz  0x4203c7
  4203bc:	jae    0x42033f
  4203be:	outs   dx,BYTE PTR ds:[esi]
  4203bf:	or     bh,BYTE PTR [ebx-0x10]
  4203c2:	nop
  4203c3:	fadd   QWORD PTR [edx+0x7b]
  4203c6:	inc    esp
  4203c7:	adc    bh,BYTE PTR [edi+0x22]
  4203ca:	(bad)  
  4203cb:	(bad)  
  4203cc:	call   0xeb50dfd3
  4203d1:	jecxz  0x42042d
  4203d3:	dec    edx
  4203d4:	pop    ds
  4203d5:	sahf   
  4203d6:	pop    esi
  4203d7:	ins    DWORD PTR es:[edi],dx
  4203d8:	adc    BYTE PTR [edx+0x7f],dl
  4203db:	pop    esi
  4203dc:	add    BYTE PTR [esi],ah
  4203de:	jp     0x4203c8
  4203e0:	pop    ebx
  4203e1:	and    DWORD PTR [esi],eax
  4203e3:	cwde   
  4203e4:	hlt    
  4203e5:	add    ch,BYTE PTR [edi]
  4203e7:	and    eax,0xc38ed3b
  4203ec:	xchg   edi,eax
  4203ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ef:	in     eax,0x6
  4203f1:	xor    esp,DWORD PTR [esp+edi*1]
  4203f4:	adc    BYTE PTR [esi],bh
  4203f6:	inc    edx
  4203f7:	mov    bl,0x34
  4203f9:	lods   eax,DWORD PTR ds:[esi]
  4203fa:	enter  0x13c9,0x45
  4203fe:	adc    al,0x11
  420400:	aam    0x41
  420402:	mov    bh,0xcc
  420404:	mov    al,ds:0x56b87d7
  420409:	addr16 cmc 
  42040b:	pusha  
  42040c:	ja     0x420407
  42040e:	sbb    BYTE PTR [edi+edi*1+0x2d9d2b5a],bh
  420415:	outs   dx,BYTE PTR ds:[esi]
  420416:	ds cdq 
  420418:	xchg   edx,eax
  420419:	dec    ebp
  42041a:	popa   
  42041b:	add    BYTE PTR [ecx+esi*8],0x1e
  42041f:	xor    esp,DWORD PTR [esi-0x7c672d5e]
  420425:	jbe    0x4203dd
  420427:	lea    ebx,[ecx+0x280bec57]
  42042d:	push   ds
  42042e:	jmp    0x42049b
  420430:	test   DWORD PTR [ecx-0x6c],edi
  420433:	cli    
  420434:	and    eax,0xa2cacb36
  420439:	mov    BYTE PTR [eax-0x61],ch
  42043c:	clc    
  42043d:	mov    eax,0x7fe8030e
  420442:	or     esi,DWORD PTR [edi-0x70]
  420445:	mov    db5,esp
  420448:	rcl    bl,0xe3
  42044b:	call   0x133d2c3a
  420450:	push   0x9f85ca15
  420455:	xchg   ecx,eax
  420456:	push   ds
  420457:	fisttp DWORD PTR [ebx+0x10]
  42045a:	int    0xcc
  42045c:	ror    BYTE PTR [eax-0x37],1
  42045f:	push   eax
  420460:	sub    bl,bl
  420462:	bndstx [esi+0x5f],(bad)
  420466:	add    al,0x1f
  420468:	dec    ecx
  420469:	mul    DWORD PTR [esp]
  42046c:	test   dl,dl
  42046e:	jmp    0xd803:0x246834f9
  420475:	dec    edx
  420476:	shl    DWORD PTR ds:0x2cd68829,1
  42047c:	cmp    al,0x3c
  42047e:	and    BYTE PTR [ecx+edi*1+0x3145f0cd],ah
  420485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420486:	mov    esi,ebx
  420488:	push   edi
  420489:	pop    ebp
  42048a:	das    
  42048b:	cmc    
  42048c:	add    esi,ecx
  42048e:	(bad)  
  420490:	dec    ebp
  420491:	inc    edi
  420492:	js     0x420427
  420494:	add    dl,BYTE PTR ss:[ecx+0x73]
  420498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420499:	mov    edi,0x7f2290cc
  42049e:	in     al,0xab
  4204a0:	fwait
  4204a1:	iret   
  4204a2:	pushf  
  4204a3:	call   0xa31d7677
  4204a8:	shl    DWORD PTR [edi],0x1c
  4204ab:	jle    0x420476
  4204ad:	mov    ebp,0x10f3405c
  4204b2:	inc    eax
  4204b3:	sub    DWORD PTR [edi-0x5f1b9d6e],ecx
  4204b9:	or     eax,0x7b014354
  4204be:	into   
  4204bf:	pop    esi
  4204c0:	xchg   ecx,eax
  4204c1:	push   ecx
  4204c2:	pop    ebp
  4204c3:	mov    ds:0xc78710b5,al
  4204c8:	xor    esi,edi
  4204ca:	jne    0x420488
  4204cc:	mov    DWORD PTR [eax],edx
  4204ce:	jmp    0x42052d
  4204d0:	sub    BYTE PTR [edi-0x7f981701],bh
  4204d6:	ja     0x420459
  4204d8:	mov    al,ds:0x64456e0b
  4204dd:	dec    edx
  4204de:	sub    esi,ebp
  4204e0:	xchg   ecx,eax
  4204e1:	into   
  4204e2:	mov    al,ah
  4204e4:	fiadd  WORD PTR [eax+0x453e7f3a]
  4204ea:	jne    0x420509
  4204ec:	ret    0xf2cd
  4204ef:	aaa    
  4204f0:	cs aas 
  4204f2:	out    dx,al
  4204f3:	or     al,0x8
  4204f5:	xchg   ebp,eax
  4204f6:	clc    
  4204f7:	sub    esp,DWORD PTR [edi+0x4e764f4a]
  4204fd:	fisttp WORD PTR [eax]
  4204ff:	and    dl,BYTE PTR [ebx]
  420501:	ins    DWORD PTR es:[edi],dx
  420502:	jo     0x420551
  420504:	cmp    BYTE PTR [ebx+edx*4+0x6d19e57a],al
  42050b:	cmp    dh,BYTE PTR [edi-0x38]
  42050e:	repz test DWORD PTR [ecx],0x67c8bbfc
  420515:	test   edx,edi
  420517:	imul   DWORD PTR [eax]
  420519:	(bad)  
  42051a:	or     eax,0xb978d322
  42051f:	fdiv   DWORD PTR [esi+0x1825ec31]
  420525:	es or  al,0x2b
  420528:	and    ecx,DWORD PTR ds:0xb4291643
  42052e:	jle    0x42051e
  420530:	adc    bl,bl
  420532:	ins    BYTE PTR es:[edi],dx
  420533:	or     al,BYTE PTR [ebx-0x7b]
  420536:	repz push ecx
  420538:	cmc    
  420539:	test   BYTE PTR [esi+0xaa4047b],al
  42053f:	into   
  420540:	ror    BYTE PTR [esi+ecx*4],cl
  420543:	out    0x29,eax
  420545:	cmp    DWORD PTR cs:[ebp+0x3],ecx
  420549:	int    0x3e
  42054b:	test   eax,0x98b22d92
  420550:	in     eax,dx
  420551:	test   eax,0x7ef293cb
  420556:	inc    esp
  420557:	mov    edx,ds
  420559:	daa    
  42055a:	stc    
  42055b:	dec    edx
  42055c:	ror    DWORD PTR [ecx],cl
  42055e:	mov    ebx,0xbd8f5b46
  420563:	out    dx,al
  420564:	add    DWORD PTR ds:0xe3d1a7c4,0x25
  42056b:	fsubr  QWORD PTR [edx-0x2a]
  42056e:	gs test eax,0xcf0fa4b8
  420574:	bound  ebp,QWORD PTR [edi-0x41]
  420577:	xor    BYTE PTR [edx+0x77ed149],al
  42057d:	push   0xffffffb5
  42057f:	jns    0x420506
  420581:	cs faddp st(5),st
  420584:	mov    dh,0x23
  420586:	adc    BYTE PTR [ebx+0x3aae6d1a],bh
  42058c:	inc    eax
  42058d:	push   cs
  42058e:	aad    0x83
  420590:	and    al,0x57
  420592:	xchg   DWORD PTR [ebx+0x1d654f51],esi
  420598:	test   DWORD PTR [esi],esi
  42059a:	jge    0x42052a
  42059c:	loopne 0x420571
  42059e:	test   al,0x4a
  4205a0:	(bad)  [edx]
  4205a2:	jb     0x4205b8
  4205a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a5:	imul   ebp,DWORD PTR ss:[eax+0x75577f83],0xffffff95
  4205ad:	call   0xc9f94ca6
  4205b2:	add    ch,BYTE PTR [ebx+0x6fb522c9]
  4205b8:	pop    ss
  4205b9:	pop    esp
  4205ba:	(bad)  
  4205bb:	and    dh,BYTE PTR [edx+0x313baf84]
  4205c1:	mov    esi,0xfffe3e57
  4205c6:	ret    
  4205c7:	test   cl,0x93
  4205ca:	sbb    DWORD PTR [eax+0x4d],ecx
  4205cd:	rcr    BYTE PTR [ecx-0x66],0xfa
  4205d1:	leave  
  4205d2:	and    DWORD PTR [ebx+ebp*8],ebx
  4205d5:	jl     0x42058e
  4205d7:	mov    ecx,0x1434672d
  4205dc:	imul   ebp,DWORD PTR [esp+eax*2],0xffffffba
  4205e0:	fdiv   QWORD PTR [ecx+eax*2]
  4205e3:	popf   
  4205e4:	dec    esi
  4205e5:	cmp    eax,0xccfa7f95
  4205ea:	mov    bh,0x54
  4205ec:	xchg   esp,eax
  4205ed:	outs   dx,DWORD PTR ds:[esi]
  4205ee:	sbb    BYTE PTR [edi-0xc27bb88],0x5e
  4205f5:	mov    al,BYTE PTR [ebp+0x195b8398]
  4205fb:	icebp  
  4205fc:	xchg   esp,eax
  4205fd:	sub    dh,bh
  4205ff:	pop    esp
  420600:	jl     0x420664
  420602:	xchg   ecx,eax
  420603:	or     eax,0x595ddb4d
  420608:	fld    QWORD PTR [eax+0xf6d4f61]
  42060e:	or     DWORD PTR [eax+0x4c437428],0xf35d8a9d
  420618:	or     al,0x87
  42061a:	stc    
  42061b:	jecxz  0x420699
  42061d:	nop
  42061e:	push   ss
  42061f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420620:	jo     0x42060c
  420622:	or     edi,edx
  420624:	pop    edi
  420625:	add    esi,DWORD PTR [eax]
  420627:	scas   eax,DWORD PTR es:[edi]
  420628:	xor    DWORD PTR [edx+0x4bd49eba],eax
  42062e:	lods   al,BYTE PTR ds:[esi]
  42062f:	cld    
  420630:	dec    eax
  420631:	cmp    eax,0xcf5913ad
  420636:	retf   0xf118
  420639:	fisttp WORD PTR [edi+eax*2+0x28]
  42063d:	adc    ecx,esi
  42063f:	xor    DWORD PTR [esi],edx
  420641:	icebp  
  420642:	pop    esp
  420643:	pop    ebp
  420644:	into   
  420645:	outs   dx,DWORD PTR ds:[esi]
  420646:	xor    ebp,ebp
  420648:	pop    ebp
  42064a:	dec    ebp
  42064b:	xchg   ebp,eax
  42064c:	sub    ebx,DWORD PTR [ebx+0x21b92967]
  420652:	fnsave [ebx+0x6a]
  420655:	add    BYTE PTR [edi+0x34],al
  420658:	clc    
  420659:	and    ebp,DWORD PTR [esi+ecx*2-0x1a6f0f2]
  420660:	xchg   ebx,eax
  420661:	shl    BYTE PTR [esi],1
  420663:	or     DWORD PTR [ecx],ecx
  420665:	cmp    eax,0x3925108e
  42066a:	das    
  42066b:	cwde   
  42066c:	dec    edi
  42066d:	std    
  42066e:	push   0xee98acaa
  420673:	jl     0x420671
  420675:	int    0xf5
  420677:	dec    esp
  420678:	inc    ebp
  420679:	and    eax,0x5ceba54b
  42067e:	jb     0x4206c1
  420680:	stos   DWORD PTR es:[edi],eax
  420681:	adc    esp,ebx
  420683:	inc    ecx
  420684:	retf   
  420685:	sbb    BYTE PTR [esi+eax*2-0x3a],cl
  420689:	cmc    
  42068a:	call   0x3b56:0xc63ea140
  420691:	xchg   esi,eax
  420692:	test   DWORD PTR [edi-0x5beb5f78],esp
  420698:	dec    ecx
  420699:	xchg   esp,eax
  42069a:	aas    
  42069b:	adc    DWORD PTR [ecx-0x6811ee45],esi
  4206a1:	ret    
  4206a2:	aad    0x5c
  4206a4:	lahf   
  4206a5:	pusha  
  4206a6:	mov    ebx,0x6c4a1a97
  4206ab:	mov    al,ds:0x30f2c611
  4206b0:	imul   eax,DWORD PTR [edx],0xfffffff9
  4206b3:	call   0x2147:0xd3a8de73
  4206ba:	xor    al,0x31
  4206bc:	dec    eax
  4206bd:	sbb    DWORD PTR [edi],ebx
  4206bf:	scas   eax,DWORD PTR es:[edi]
  4206c0:	push   0x138d7041
  4206c5:	pop    ds
  4206c6:	xchg   DWORD PTR [edi+0x1c],esi
  4206c9:	clc    
  4206ca:	je     0x4206d3
  4206cc:	(bad)  
  4206cd:	pop    edx
  4206ce:	rcr    BYTE PTR [edi],cl
  4206d0:	xchg   ebp,eax
  4206d1:	jg     0x420656
  4206d3:	xor    eax,0x8dd1751f
  4206d8:	adc    al,0xa8
  4206da:	jge    0x420706
  4206dc:	or     eax,0xe6871407
  4206e1:	lods   eax,DWORD PTR ds:[esi]
  4206e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206e3:	xchg   esi,eax
  4206e4:	(bad)  
  4206e5:	aaa    
  4206e6:	aaa    
  4206e7:	pusha  
  4206e8:	jne    0x420742
  4206ea:	inc    esp
  4206eb:	shl    BYTE PTR [ebx],cl
  4206ed:	shl    esp,cl
  4206ef:	shr    DWORD PTR [edx-0x29],0x61
  4206f3:	es mov ebx,0x84af9244
  4206f9:	scas   al,BYTE PTR es:[edi]
  4206fa:	fld    DWORD PTR [ecx]
  4206fc:	sbb    esi,DWORD PTR [esi-0x5d]
  4206ff:	mov    ecx,0x2e7f9c85
  420704:	or     ah,BYTE PTR [esp+ecx*2+0x4f]
  420708:	push   esp
  420709:	call   0xac92483a
  42070e:	ret    
  42070f:	lods   eax,DWORD PTR ds:[esi]
  420710:	(bad)  
  420712:	mov    dl,0x26
  420714:	push   0xffffffdf
  420716:	lock ins DWORD PTR es:[edi],dx
  420718:	sbb    DWORD PTR [ebx-0x63],esi
  42071b:	cwde   
  42071c:	inc    edi
  42071d:	jae    0x42073c
  42071f:	scas   al,BYTE PTR es:[edi]
  420720:	xchg   DWORD PTR [eax+0x5e],ebx
  420723:	call   0x44ed:0xcae32295
  42072a:	jge    0x4207a7
  42072c:	fdivrp st(1),st
  42072e:	add    al,0xde
  420730:	adc    DWORD PTR [esi+0x1dd6ed6],esi
  420736:	imul   DWORD PTR [edx]
  420738:	xor    DWORD PTR [ecx-0x15],ebx
  42073b:	in     eax,dx
  42073c:	sbb    BYTE PTR [edx-0x35],cl
  42073f:	loopne 0x42076f
  420741:	neg    DWORD PTR [ebp+esi*1-0x440478d4]
  420748:	mov    BYTE PTR [esi+0x41b692ae],bl
  42074e:	(bad)  
  42074f:	loopne 0x420748
  420751:	fxch   st(4)
  420753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420754:	cdq    
  420755:	cmp    esi,DWORD PTR [eax-0x2b1e1a06]
  42075b:	in     al,dx
  42075c:	push   ds
  42075d:	gs (bad) 
  42075f:	sub    eax,0x132a48f
  420764:	cld    
  420765:	jmp    0x75630642
  42076a:	mov    dl,0x2
  42076c:	xlat   BYTE PTR ds:[ebx]
  42076d:	pop    eax
  42076e:	imul   ebp,DWORD PTR [edi],0xffffffa4
  420771:	or     BYTE PTR [bp+di-0x43],ch
  420775:	mov    edx,0x95c73ad6
  42077a:	xchg   BYTE PTR [edi],ah
  42077c:	xor    al,0x5a
  42077e:	stos   BYTE PTR es:[edi],al
  42077f:	jmp    0x4207f6
  420781:	in     al,dx
  420782:	adc    ah,BYTE PTR [esp+ecx*2-0x2f1dbfc2]
  420789:	xchg   edx,eax
  42078a:	jae    0x420790
  42078c:	clc    
  42078d:	sub    eax,0x8cbb774a
  420792:	pop    ebx
  420793:	in     eax,0x7c
  420795:	cmp    DWORD PTR [ebx+0x18],eax
  420798:	push   0xffffff8a
  42079a:	cld    
  42079b:	inc    ebx
  42079c:	inc    cl
  42079e:	in     al,0x80
  4207a0:	and    DWORD PTR [esi],eax
  4207a2:	push   esi
  4207a3:	sar    BYTE PTR [ecx],cl
  4207a5:	(bad)  
  4207a6:	(bad)  
  4207a7:	mov    eax,ds:0xae4cd45c
  4207ac:	mov    dh,0x63
  4207ae:	adc    eax,0x5b50f61
  4207b3:	inc    esi
  4207b4:	popa   
  4207b5:	dec    edi
  4207b6:	hlt    
  4207b7:	dec    esi
  4207b8:	xchg   BYTE PTR [ebx+0x512a6ea8],bl
  4207be:	dec    ebx
  4207bf:	int    0x34
  4207c1:	mov    dl,0xd1
  4207c3:	lods   al,BYTE PTR ds:[esi]
  4207c4:	aam    0x20
  4207c6:	mov    ah,0xd2
  4207c8:	lods   al,BYTE PTR ds:[esi]
  4207c9:	xchg   edi,eax
  4207ca:	push   ds
  4207cb:	xchg   DWORD PTR [ebx-0x57d489aa],eax
  4207d1:	and    dl,BYTE PTR [ecx+0x6]
  4207d4:	lds    edi,FWORD PTR [eax+esi*2-0x5bb967ec]
  4207db:	aaa    
  4207dc:	mov    BYTE PTR [edx],cl
  4207de:	dec    ebp
  4207df:	pop    DWORD PTR [ecx+0x4d818734]
  4207e5:	repz fwait
  4207e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e8:	mov    bl,0x61
  4207ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207eb:	ror    eax,cl
  4207ed:	(bad)  
  4207ee:	adc    al,0x62
  4207f0:	xor    eax,0x9120a87c
  4207f5:	xchg   ecx,eax
  4207f6:	mov    dl,0xe0
  4207f8:	stc    
  4207f9:	jg     0x4207a8
  4207fb:	dec    edx
  4207fc:	push   eax
  4207fd:	call   0xcea4:0x4b6db380
  420804:	and    bh,BYTE PTR [edi]
  420806:	mov    ds:0x5ee60904,eax
  42080b:	pop    ss
  42080c:	pop    ebp
  42080d:	repnz call 0xda86:0x104c0192
  420815:	inc    ebx
  420816:	cld    
  420817:	fisttp QWORD PTR [esi+0x6c943585]
  42081d:	xlat   BYTE PTR ds:[ebx]
  42081e:	xor    BYTE PTR [eax],bh
  420820:	pop    ecx
  420821:	pop    ebp
  420822:	rol    DWORD PTR [edi-0x1],cl
  420825:	xor    al,0x1f
  420827:	cdq    
  420828:	jmp    0x5d45d2d1
  42082d:	rcr    DWORD PTR [ebp-0x4b],1
  420830:	hlt    
  420831:	push   edx
  420832:	nop
  420833:	cmp    esp,DWORD PTR [ebx+0x13]
  420836:	sbb    BYTE PTR [edx-0x1c14c33c],cl
  42083c:	jnp    0x42082a
  42083e:	(bad)  
  42083f:	cli    
  420840:	dec    edi
  420841:	mov    esi,0xf981c6e8
  420846:	mov    ch,ch
  420848:	retf   
  420849:	or     DWORD PTR [esi-0x3f2700e8],edx
  42084f:	(bad)  
  420850:	icebp  
  420851:	cmp    BYTE PTR [ebx+0x60e7bb39],dh
  420857:	clc    
  420858:	hlt    
  420859:	test   al,0x56
  42085b:	aas    
  42085c:	xchg   DWORD PTR [esi-0x6e],edi
  42085f:	pop    ds
  420860:	out    0x38,eax
  420862:	adc    ebp,ecx
  420864:	sbb    ebx,ebp
  420866:	rol    DWORD PTR [ecx-0x59cc5a55],0x25
  42086d:	not    ch
  42086f:	cmp    esp,DWORD PTR cs:[ecx-0x4f62a770]
  420876:	or     bh,BYTE PTR [ebx+0x3574f214]
  42087c:	mov    eax,ds:0xa3680397
  420881:	call   0x273b:0x227bf54f
  420888:	jp     0x420826
  42088a:	ja     0x4208c7
  42088c:	into   
  42088d:	fimul  WORD PTR [ebp-0x1eb49d9f]
  420893:	push   ss
  420894:	pop    edi
  420895:	jmp    0x5511efcd
  42089a:	pop    ecx
  42089b:	lods   al,BYTE PTR ds:[esi]
  42089c:	mov    DWORD PTR [ecx],edx
  42089e:	mov    bh,0xe4
  4208a0:	sub    BYTE PTR [ecx-0x6b7649b7],al
  4208a6:	dec    ecx
  4208a7:	or     DWORD PTR [esi],0xdac9e677
  4208ad:	enter  0x9289,0x38
  4208b1:	fidivr DWORD PTR [ebp+0x28e5c130]
  4208b7:	shl    DWORD PTR [edx+0x7217820a],0x19
  4208be:	or     cl,dh
  4208c0:	or     DWORD PTR gs:[ecx+eax*8-0xb999032],ebp
  4208c8:	bound  ecx,QWORD PTR [ebp+0x25e053c2]
  4208ce:	and    bl,BYTE PTR [esi+ebp*1+0x56]
  4208d2:	mov    esp,eax
  4208d4:	imul   edx,DWORD PTR [esi],0xc3745d57
  4208da:	cmc    
  4208db:	int3   
  4208dc:	add    BYTE PTR [esp+eax*1],dl
  4208df:	ret    
  4208e0:	adc    cl,ah
  4208e2:	out    dx,al
  4208e3:	mov    ch,0x62
  4208e5:	mov    bh,BYTE PTR [eax]
  4208e7:	fist   WORD PTR [edi]
  4208e9:	test   dl,al
  4208eb:	sub    eax,0x269ff857
  4208f0:	xlat   BYTE PTR ds:[ebx]
  4208f1:	retf   0x28a
  4208f4:	sahf   
  4208f5:	or     DWORD PTR [edi],edi
  4208f7:	sub    DWORD PTR [esi+edi*1],eax
  4208fa:	daa    
  4208fb:	or     eax,0xadcab369
  420900:	mov    eax,0x5cc3ff49
  420905:	or     al,0x3f
  420907:	adc    eax,0x65f47e21
  42090c:	cmp    DWORD PTR [esi],ebp
  42090e:	cdq    
  42090f:	std    
  420910:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420912:	adc    BYTE PTR [ebx*8-0x1695f0d4],ch
  420919:	dec    ebp
  42091a:	pop    ecx
  42091b:	push   esi
  42091c:	stc    
  42091d:	mov    bh,0x6f
  42091f:	loopne 0x4208b9
  420921:	xor    esp,DWORD PTR [edx+0xd]
  420924:	dec    esp
  420925:	push   edx
  420926:	es add al,0xa9
  420929:	pop    esp
  42092a:	push   ss
  42092b:	jle    0x420961
  42092d:	icebp  
  42092e:	(bad)  
  42092f:	mov    al,0x29
  420931:	inc    eax
  420932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420933:	pop    edx
  420934:	data16 jge 0x420966
  420937:	(bad)  
  420938:	mov    es,WORD PTR [ecx]
  42093a:	sbb    ebp,esi
  42093c:	sub    DWORD PTR [ecx],ebp
  42093e:	mov    edx,0x7ff75b40
  420943:	pop    esi
  420944:	push   esp
  420945:	and    ebp,DWORD PTR [eax+0xb7bd0d9]
  42094b:	adc    ebx,DWORD PTR [edi-0x6]
  42094e:	imul   ebp,DWORD PTR [edx],0xffffffbb
  420951:	sbb    cl,bl
  420953:	push   ebp
  420954:	hlt    
  420955:	pop    ebx
  420956:	lea    eax,[edx]
  420958:	out    0xe2,al
  42095a:	cdq    
  42095b:	xchg   edi,eax
  42095c:	push   0x7ee3f83e
  420961:	add    al,0x93
  420963:	in     al,dx
  420964:	jmp    0x4208f9
  420966:	adc    eax,0x69d55bab
  42096b:	jno    0x4208ef
  42096d:	sbb    edx,esp
  42096f:	sbb    al,0x8e
  420971:	jmp    0x4209d9
  420973:	mov    WORD PTR [ecx+edi*4],ds
  420976:	sar    DWORD PTR [edx],1
  420978:	xchg   esp,eax
  420979:	push   ds
  42097a:	adc    BYTE PTR [edx+0x6],dh
  42097d:	ret    
  42097e:	or     eax,0x3591ba75
  420983:	mov    ch,0xe5
  420985:	push   0x7e
  420987:	jmp    0xcdc5:0x90b68cea
  42098e:	and    bh,BYTE PTR [ebx+edi*4+0x7b54e157]
  420995:	imul   esi,eax,0x95445563
  42099b:	imul   edx,DWORD PTR [esp+eax*2+0xb],0xdb5c1d4b
  4209a3:	outs   dx,DWORD PTR ds:[esi]
  4209a4:	dec    ecx
  4209a5:	pushf  
  4209a6:	pop    esi
  4209a7:	and    bh,BYTE PTR [esi]
  4209a9:	nop    ebx
  4209ac:	mov    edx,0x1d9e0865
  4209b1:	xlat   BYTE PTR ds:[ebx]
  4209b2:	jmp    0x2f01f116
  4209b7:	and    ecx,DWORD PTR [ecx+edx*8-0x5af96af2]
  4209be:	daa    
  4209bf:	add    bh,al
  4209c1:	mov    BYTE PTR [edi],ah
  4209c3:	pop    es
  4209c4:	push   eax
  4209c5:	inc    esp
  4209c6:	js     0x4209d3
  4209c8:	mov    WORD PTR [edx],ss
  4209ca:	in     eax,dx
  4209cb:	dec    edx
  4209cc:	mov    ah,0xfe
  4209ce:	imul   edx,ebx,0x9f4acd71
  4209d4:	(bad)  
  4209d5:	mov    al,ds:0x1811dd5e
  4209da:	enter  0x50c3,0xaf
  4209de:	(bad)  
  4209df:	repnz nop
  4209e1:	rcl    DWORD PTR [eax+0x14b7b850],cl
  4209e7:	and    eax,0xba6d6adf
  4209ec:	les    edi,FWORD PTR [eax+0x6df93986]
  4209f2:	pop    esp
  4209f3:	and    eax,DWORD PTR [ebx+eax*4-0x1a]
  4209f7:	gs loope 0x420a54
  4209fa:	add    dl,BYTE PTR [ebx-0x2fb30817]
  420a00:	mov    bl,0xf3
  420a02:	pop    esp
  420a03:	retf   
  420a04:	enter  0x903d,0x8d
  420a08:	loopne 0x42099c
  420a0a:	mov    al,0x6e
  420a0c:	aaa    
  420a0d:	push   esi
  420a0e:	int    0x87
  420a10:	mov    ds:0x72e4d89f,al
  420a15:	test   BYTE PTR [eax-0x5b],bl
  420a18:	jo     0x420a08
  420a1a:	ds retf 
  420a1c:	bound  esi,QWORD PTR [edi-0x519f00aa]
  420a22:	pushf  
  420a23:	mov    dl,0x2c
  420a25:	pop    esp
  420a26:	rcl    ch,0x3a
  420a29:	cmp    BYTE PTR [edi+0x21],0xe
  420a2d:	cmp    al,BYTE PTR [eax-0x86ca31]
  420a33:	in     eax,dx
  420a34:	or     BYTE PTR [esi],cl
  420a36:	mov    bh,0xf9
  420a38:	xchg   ebx,eax
  420a39:	mov    dh,0x30
  420a3b:	cmp    al,0x57
  420a3d:	adc    dh,ch
  420a3f:	lea    esi,[ecx+eiz*1]
  420a42:	repnz push edi
  420a44:	mov    ecx,0x5d5d66c2
  420a49:	and    dh,BYTE PTR ds:0x2c994107
  420a4f:	jmp    0xee1af5b5
  420a54:	pop    eax
  420a55:	jle    0x420a52
  420a57:	repz dec ebx
  420a59:	xchg   ecx,eax
  420a5a:	sti    
  420a5b:	repnz mov ecx,0xe2cb039c
  420a61:	call   0x631a532e
  420a66:	add    al,0x3e
  420a68:	loopne 0x4209f0
  420a6a:	test   BYTE PTR [esp+esi*8-0x59],bl
  420a6e:	rcr    DWORD PTR [ecx+0x3f],1
  420a71:	inc    edi
  420a72:	adc    al,0x44
  420a74:	stos   BYTE PTR es:[edi],al
  420a75:	sbb    al,0x1c
  420a77:	adc    ch,al
  420a79:	adc    ah,ch
  420a7b:	push   ss
  420a7c:	mov    esi,0x5477a537
  420a81:	je     0x420a35
  420a83:	push   0x6
  420a85:	xlat   BYTE PTR ds:[ebx]
  420a86:	adc    DWORD PTR ds:0xef2e4af8,0xf7c56a05
  420a90:	push   ecx
  420a91:	or     DWORD PTR [ebx],esi
  420a93:	sar    DWORD PTR [edi+0x50d7b15f],0x59
  420a9a:	pop    es
  420a9b:	xchg   edx,eax
  420a9d:	mov    esp,0x5ef925ad
  420aa2:	lahf   
  420aa3:	out    0xe5,al
  420aa5:	sti    
  420aa6:	jl     0x420ab5
  420aa8:	cmp    eax,0xe986e8c8
  420aad:	arpl   WORD PTR [eax-0x265b11ec],bx
  420ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab4:	out    0x15,eax
  420ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab7:	xor    eax,0x56ec88d3
  420abc:	or     BYTE PTR [eax-0x3265039],ah
  420ac2:	or     al,0xc8
  420ac4:	ret    
  420ac5:	dec    edx
  420ac6:	ret    
  420ac7:	dec    ebp
  420ac8:	xchg   BYTE PTR [eax+0x4d6eae12],cl
  420ace:	mov    eax,ds:0xde19710c
  420ad3:	into   
  420ad4:	cmp    edi,DWORD PTR [eax+0x376198e8]
  420ada:	out    0x21,eax
  420adc:	push   ebx
  420add:	je     0x420a71
  420adf:	arpl   si,dx
  420ae1:	or     DWORD PTR [edx+0x3c],esp
  420ae4:	arpl   di,di
  420ae6:	stos   DWORD PTR es:[edi],eax
  420ae7:	fcomp  DWORD PTR cs:[ebx-0x13]
  420aeb:	adc    ecx,DWORD PTR [edx+0x79]
  420aee:	jmp    0xd06d:0x2f9678bb
  420af5:	sub    BYTE PTR [edx-0x170c7959],0x33
  420afc:	js     0x420b46
  420afe:	ror    DWORD PTR [ebx+0x1f],1
  420b01:	push   ss
  420b02:	rcl    BYTE PTR [eax-0x5c],1
  420b05:	sbb    al,0x63
  420b07:	and    DWORD PTR [edx-0x2df422c6],ebx
  420b0d:	lahf   
  420b0e:	mov    ds:0x9f4139cb,eax
  420b13:	mov    WORD PTR [ebp+0x4f],cs
  420b16:	out    dx,eax
  420b17:	out    dx,al
  420b18:	xor    BYTE PTR [ebx+0x5b42f09d],bh
  420b1e:	pop    ss
  420b1f:	(bad)  
  420b20:	cs mov ch,0x87
  420b23:	into   
  420b24:	ret    0x7bd5
  420b27:	icebp  
  420b28:	push   esp
  420b29:	jmp    0x1aeba8a9
  420b2e:	shl    DWORD PTR [eax-0x44],1
  420b31:	lods   al,BYTE PTR ds:[esi]
  420b32:	jle    0x420b62
  420b34:	xor    eax,0x83edca7
  420b39:	lods   eax,DWORD PTR ds:[esi]
  420b3a:	xchg   ecx,eax
  420b3b:	adc    DWORD PTR [edi-0x51c76dad],edi
  420b41:	mov    WORD PTR [edi+0x1e],?
  420b44:	lods   eax,DWORD PTR ds:[esi]
  420b45:	push   0x1b2338ea
  420b4a:	iret   
  420b4b:	adc    eax,0xf54bb320
  420b50:	and    bh,BYTE PTR [ecx+0x5d15b684]
  420b56:	jecxz  0x420b65
  420b58:	xchg   edi,eax
  420b59:	xchg   edx,eax
  420b5a:	pusha  
  420b5b:	mov    esi,0xe19b5837
  420b60:	rol    eax,0xc4
  420b63:	mov    eax,0x94093cc7
  420b68:	(bad)  
  420b69:	push   esi
  420b6a:	int    0x9
  420b6c:	push   ebx
  420b6d:	fsubrp st(3),st
  420b6f:	mov    esi,0xf09852a9
  420b74:	retf   0x43d4
  420b77:	ja     0x420bb8
  420b79:	gs jmp 0x609aaf1b
  420b7f:	or     eax,0x6c4604d
  420b84:	shl    DWORD PTR [edx+0x7febb296],cl
  420b8a:	push   ebx
  420b8b:	(bad)  
  420b8c:	in     al,dx
  420b8d:	or     BYTE PTR [esi-0x36],al
  420b90:	fstp   TBYTE PTR [ecx+0x5ae9e738]
  420b96:	sbb    DWORD PTR [edi-0x3cb14bbb],esp
  420b9c:	sbb    al,0x91
  420b9e:	js     0x420b5c
  420ba0:	aaa    
  420ba1:	jno    0x420b29
  420ba3:	adc    ebp,esp
  420ba5:	sbb    BYTE PTR [ebx-0x78],bh
  420ba8:	adc    DWORD PTR [ecx-0x78],edx
  420bab:	push   cs
  420bac:	push   eax
  420bad:	pop    ss
  420bae:	das    
  420baf:	pushf  
  420bb0:	je     0x420b63
  420bb2:	loopne 0x420bf5
  420bb4:	ss stos BYTE PTR es:[edi],al
  420bb6:	push   edi
  420bb7:	mov    edi,0xd40a0ccd
  420bbc:	jo     0x420b55
  420bbe:	(bad)  
  420bbf:	push   ds
  420bc0:	or     al,0xc4
  420bc2:	add    BYTE PTR [esi],0xc5
  420bc5:	or     DWORD PTR [edx],ecx
  420bc7:	icebp  
  420bc8:	lods   eax,DWORD PTR ds:[esi]
  420bc9:	out    0x33,al
  420bcb:	jnp    0x420b83
  420bcd:	pop    esp
  420bce:	xchg   edi,eax
  420bcf:	jne    0x420be9
  420bd1:	pop    esp
  420bd2:	jmp    0x833ae4fb
  420bd7:	jp     0x420ba2
  420bd9:	out    dx,eax
  420bda:	add    ebx,DWORD PTR [esp+ebx*4-0x22]
  420bde:	int    0x5b
  420be0:	xor    al,0x33
  420be2:	sbb    al,0x0
  420be4:	outs   dx,DWORD PTR ds:[esi]
  420be5:	push   ss
  420be6:	imul   esp,DWORD PTR [ecx-0x33e48977],0x803baf55
  420bf0:	loope  0x420bd6
  420bf2:	dec    edi
  420bf3:	push   ebp
  420bf4:	push   es
  420bf5:	jmp    0x420bc9
  420bf7:	enter  0xd3e1,0x88
  420bfb:	push   ebx
  420bfc:	popf   
  420bfd:	(bad)  
  420bfe:	sahf   
  420bff:	ror    bl,0x52
  420c02:	jae    0x420be4
  420c04:	jnp    0x420bd2
  420c06:	push   edi
  420c08:	cmp    bl,dl
  420c0a:	fmul   QWORD PTR [ebx]
  420c0c:	mov    eax,ds:0x8b529fa4
  420c11:	cs pop ecx
  420c13:	add    eax,0x47e8845d
  420c18:	adc    al,0xc9
  420c1a:	jmp    0x420c4f
  420c1c:	xchg   ecx,eax
  420c1d:	imul   ebx,ebp,0xfb448eb1
  420c23:	mov    edx,0xa1f17599
  420c28:	add    dh,cl
  420c2a:	gs push esi
  420c2c:	xlat   BYTE PTR ds:[ebx]
  420c2d:	xor    DWORD PTR [ecx],ecx
  420c2f:	mov    ebx,0x8b5da2d8
  420c34:	adc    edi,DWORD PTR [edx+0x41]
  420c37:	in     al,0x47
  420c39:	loopne 0x420ca8
  420c3b:	mov    al,ds:0xd2c8a252
  420c40:	test   al,0xfd
  420c42:	sbb    ebx,esp
  420c44:	iret   
  420c45:	inc    ebp
  420c46:	push   0x49
  420c48:	cmp    bl,BYTE PTR [ebx-0x72]
  420c4b:	mov    ebp,0x25901d7a
  420c50:	shl    BYTE PTR [edi+eiz*2-0x6],1
  420c54:	pop    es
  420c55:	repz inc ecx
  420c57:	test   al,0x10
  420c59:	dec    ebp
  420c5a:	mov    BYTE PTR [esi+ecx*2],ch
  420c5d:	sub    ebp,DWORD PTR [edi-0x64]
  420c60:	enter  0x80c,0x3
  420c64:	xor    DWORD PTR [edx],ebp
  420c66:	push   esp
  420c67:	fdiv   st(1),st
  420c69:	add    ebx,DWORD PTR [esi-0x3aa8fb2f]
  420c6f:	test   al,0xe2
  420c71:	jbe    0x420cee
  420c73:	pop    esp
  420c74:	sbb    ebx,DWORD PTR [edx+0x56e47913]
  420c7a:	int    0x59
  420c7c:	inc    edi
  420c7d:	(bad)  
  420c7e:	pop    ebx
  420c7f:	outs   dx,BYTE PTR ds:[esi]
  420c80:	int3   
  420c81:	repz add eax,0x14bb8087
  420c87:	idiv   cl
  420c89:	cmc    
  420c8a:	ja     0x420c46
  420c8c:	mov    ebx,0x97b8091e
  420c91:	or     esp,ecx
  420c93:	push   cs
  420c94:	mov    dh,0x16
  420c96:	mov    edx,ebp
  420c98:	cmp    DWORD PTR [eax],eax
  420c9a:	lods   al,BYTE PTR ds:[esi]
  420c9b:	retf   
  420c9c:	xchg   BYTE PTR [ecx-0x23],dh
  420c9f:	cdq    
  420ca0:	and    eax,0x9d941a48
  420ca5:	or     DWORD PTR [ebx+0x76],0xffffffcf
  420ca9:	test   DWORD PTR [ecx-0x67338986],esi
  420caf:	loopne 0x420cc6
  420cb1:	xchg   ebx,eax
  420cb2:	scas   al,BYTE PTR es:[edi]
  420cb3:	cli    
  420cb4:	dec    ebp
  420cb5:	hlt    
  420cb6:	cmp    ebp,ebx
  420cb8:	inc    ebx
  420cb9:	mov    bh,0x49
  420cbb:	add    eax,0x4a2056c5
  420cc0:	retf   
  420cc1:	jo     0x420c50
  420cc3:	sti    
  420cc4:	mov    ebx,0xbae7a33c
  420cc9:	jnp    0x420d10
  420ccb:	ins    BYTE PTR es:[edi],dx
  420ccc:	push   ecx
  420ccd:	xchg   edx,esp
  420ccf:	mov    cl,0x98
  420cd1:	xchg   ebx,eax
  420cd2:	mov    dl,0x26
  420cd4:	loopne 0x420c8c
  420cd6:	mov    ds,WORD PTR [eax]
  420cd8:	inc    esp
  420cd9:	fadd   DWORD PTR [ebx]
  420cdb:	mov    esp,0x596bff4a
  420ce0:	adc    DWORD PTR [esp+ebx*4],edx
  420ce3:	mov    ds:0x6e042614,eax
  420ce8:	imul   ebp,DWORD PTR [ecx],0xfffffff7
  420ceb:	mov    WORD PTR [eax-0x42],cs
  420cee:	fistp  DWORD PTR [ecx-0x54]
  420cf1:	sahf   
  420cf2:	loope  0x420c97
  420cf4:	mov    ebp,0xc62c0fab
  420cf9:	inc    eax
  420cfa:	adc    DWORD PTR [edx+esi*2],esi
  420cfd:	mov    dh,0x28
  420cff:	ret    
  420d00:	adc    BYTE PTR [edx-0x3cbaa978],ah
  420d06:	je     0x420d67
  420d08:	out    dx,al
  420d09:	dec    esp
  420d0a:	enter  0x793a,0xd3
  420d0e:	cs mov ecx,0x857627b8
  420d14:	test   al,0x3f
  420d16:	fistp  DWORD PTR ds:0xa6d0b47e
  420d1c:	jg     0x420d14
  420d1e:	fsub   st,st(3)
  420d20:	xchg   ebp,eax
  420d21:	mov    dl,0xf7
  420d23:	sub    al,0xdd
  420d25:	lahf   
  420d26:	add    al,BYTE PTR [bp+si-0x534a]
  420d2b:	inc    edx
  420d2c:	mov    bl,0x98
  420d2e:	pop    esi
  420d2f:	xchg   edx,eax
  420d30:	adc    edi,DWORD PTR [esi]
  420d32:	xchg   BYTE PTR [ecx],ah
  420d34:	mov    al,ds:0x144f2be5
  420d39:	shl    ebx,0xbc
  420d3c:	in     al,0x8
  420d3e:	dec    ecx
  420d3f:	fst    DWORD PTR [ecx]
  420d41:	arpl   WORD PTR ds:0x5bd8054,sp
  420d47:	add    cl,BYTE PTR [ecx]
  420d49:	inc    esi
  420d4a:	inc    BYTE PTR [eax+0x24]
  420d4d:	test   al,0x7a
  420d4f:	jge    0x420d80
  420d51:	fcomi  st,st(2)
  420d53:	lds    ebx,FWORD PTR [ebp+edi*4+0x738c1282]
  420d5a:	cs push 0x8f95ce9b
  420d60:	adc    al,0x92
  420d62:	push   edx
  420d63:	mov    al,0xfa
  420d65:	fild   QWORD PTR [edx+ebx*1+0x7d]
  420d69:	out    dx,al
  420d6a:	rol    bh,1
  420d6c:	sub    DWORD PTR [edi-0x36ea39c1],ebx
  420d72:	cld    
  420d73:	js     0x420d26
  420d75:	adc    BYTE PTR [ebp-0x80],cl
  420d78:	aas    
  420d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d7a:	pop    DWORD PTR [ebp-0x5515cd0d]
  420d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d81:	sub    al,0x76
  420d83:	outs   dx,DWORD PTR ds:[esi]
  420d84:	push   ss
  420d85:	les    edi,FWORD PTR [ebp+0x7d]
  420d88:	xor    al,0x89
  420d8a:	push   edx
  420d8b:	pop    ecx
  420d8c:	push   ebp
  420d8d:	sbb    DWORD PTR [eax+0x34],edi
  420d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d91:	add    bl,BYTE PTR [ebp+0x71]
  420d94:	adc    eax,0x224ac25d
  420d99:	ds mov esi,0x90775940
  420d9f:	daa    
  420da0:	aas    
  420da1:	aam    0x26
  420da3:	ja     0x420d87
  420da5:	pop    esi
  420da6:	in     eax,dx
  420da7:	stc    
  420da8:	pusha  
  420da9:	jo     0x420ded
  420dab:	inc    DWORD PTR [esi]
  420dad:	push   eax
  420dae:	(bad)  
  420daf:	cld    
  420db0:	push   es
  420db1:	cli    
  420db2:	rcl    DWORD PTR [esi+0x28],cl
  420db5:	sub    BYTE PTR [ebp+0x5b],0x8f
  420db9:	sub    al,ch
  420dbb:	rcl    BYTE PTR [edx-0x51bbfc00],0x2d
  420dc2:	das    
  420dc3:	xor    al,ah
  420dc5:	enter  0xc7c,0x41
  420dc9:	imul   ecx,DWORD PTR [ecx-0x3a394a8],0xbe2c55a2
  420dd3:	aam    0xf1
  420dd5:	mov    ebx,0xa49ed2c6
  420dda:	push   esi
  420ddb:	and    ebp,edx
  420ddd:	test   BYTE PTR [eax+esi*2-0x5b6cd564],al
  420de4:	outs   dx,DWORD PTR ds:[esi]
  420de5:	leave  
  420de6:	sbb    DWORD PTR [ebx-0x5ff7bea0],0x2454b2e5
  420df0:	out    dx,eax
  420df1:	popa   
  420df2:	jb     0x420e26
  420df4:	xlat   BYTE PTR ds:[ebx]
  420df5:	jmp    FWORD PTR [eax]
  420df7:	imul   esp,edx,0x48b70054
  420dfd:	mov    al,0x32
  420dff:	test   bh,cl
  420e01:	in     eax,0xf1
  420e03:	cwde   
  420e04:	jl     0x420e55
  420e06:	test   eax,0x38e8a5e7
  420e0b:	out    dx,al
  420e0c:	xor    esp,DWORD PTR [eax+ebx*8+0x75]
  420e10:	out    dx,al
  420e11:	fcom   DWORD PTR [eax-0x75]
  420e14:	jmp    0xcd101a70
  420e19:	mov    bl,0x33
  420e1b:	xchg   edx,eax
  420e1c:	outs   dx,DWORD PTR ds:[esi]
  420e1d:	jne    0x420e0d
  420e1f:	gs shr dh,cl
  420e22:	push   ecx
  420e23:	out    0xc4,eax
  420e25:	shl    DWORD PTR [edi-0x5e1f1a4b],0x8
  420e2c:	int    0x14
  420e2e:	mov    al,ds:0x4fad7f70
  420e33:	dec    esi
  420e34:	sub    eax,0x47d53591
  420e39:	mov    ch,0x42
  420e3b:	iret   
  420e3c:	lods   al,BYTE PTR ds:[esi]
  420e3d:	push   ss
  420e3e:	adc    al,0xf
  420e40:	repnz call 0x1f6:0x20dbef5d
  420e48:	enter  0x3cfd,0xb7
  420e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e4d:	ja     0x420df7
  420e4f:	sbb    DWORD PTR [ecx],ebp
  420e51:	pop    edx
  420e52:	inc    eax
  420e53:	sub    eax,0xdc8384c8
  420e58:	dec    ebp
  420e59:	out    0x53,al
  420e5b:	pop    edx
  420e5c:	and    BYTE PTR [eax],ah
  420e5e:	or     DWORD PTR [ebx-0x6b],esi
  420e61:	stc    
  420e62:	aaa    
  420e63:	fs sub al,0x33
  420e66:	(bad)  
  420e67:	sbb    eax,0x1adb6e97
  420e6c:	mov    dh,0x6d
  420e6e:	mov    dh,0xb2
  420e70:	pop    esp
  420e71:	pop    ebx
  420e72:	bswap  eax
  420e74:	test   al,0x2c
  420e76:	cmp    BYTE PTR [esi+0x19],bh
  420e79:	jne    0x420e95
  420e7b:	ror    DWORD PTR [ebx-0x28],0x78
  420e7f:	shl    BYTE PTR [esi-0x703d25c3],cl
  420e85:	or     BYTE PTR [esi],dh
  420e87:	inc    edx
  420e88:	(bad)  
  420e89:	repz mov ah,0x5a
  420e8c:	mov    ch,0xf6
  420e8e:	popf   
  420e8f:	sub    edx,DWORD PTR [edx]
  420e91:	inc    edi
  420e92:	xchg   esi,eax
  420e93:	test   ah,ch
  420e95:	addr16 push edi
  420e97:	(bad)  
  420e98:	aas    
  420e99:	outs   dx,BYTE PTR ds:[esi]
  420e9a:	pop    edx
  420e9b:	popf   
  420e9c:	mov    esp,0x2391f787
  420ea1:	xchg   esi,eax
  420ea2:	jl     0x420ed1
  420ea4:	into   
  420ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ea6:	je     0x420f00
  420ea8:	jl     0x420ee7
  420eaa:	imul   edi,DWORD PTR [edx],0xffffffaf
  420ead:	xchg   esi,eax
  420eae:	cld    
  420eaf:	test   DWORD PTR [ebp-0x22de8d52],edi
  420eb5:	and    eax,0xc571f33e
  420eba:	ds in  al,dx
  420ebc:	je     0x420f3b
  420ebe:	aaa    
  420ebf:	pusha  
  420ec0:	gs scas eax,DWORD PTR es:[edi]
  420ec2:	mov    ch,dl
  420ec4:	jecxz  0x420e91
  420ec6:	aas    
  420ec7:	into   
  420ec8:	ins    BYTE PTR es:[edi],dx
  420ec9:	jmp    0x420e9e
  420ecb:	or     BYTE PTR [esi+0x71],bl
  420ece:	fcomp  st(1)
  420ed0:	(bad)  
  420ed1:	sti    
  420ed2:	iret   
  420ed3:	mov    bl,0xde
  420ed5:	dec    ecx
  420ed6:	cmc    
  420ed7:	cmp    al,0x9
  420ed9:	pop    ss
  420eda:	pop    edx
  420edb:	jb     0x420f4d
  420edd:	test   DWORD PTR [eax-0x3306cd1],ebp
  420ee3:	pop    ecx
  420ee4:	inc    esi
  420ee5:	mov    eax,0x4df1c164
  420eea:	les    ebx,FWORD PTR [ecx+eax*4-0x349483c3]
  420ef1:	jb     0x420ed4
  420ef3:	mov    dh,BYTE PTR [esi-0x33]
  420ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef7:	add    eax,0xde06807f
  420efc:	sar    BYTE PTR [esi+ebp*4-0x75db8a5f],0xe8
  420f04:	std    
  420f05:	push   cs
  420f06:	scas   al,BYTE PTR es:[edi]
  420f07:	fsubr  QWORD PTR [edx-0x1db4f447]
  420f0d:	jle    0x420ec5
  420f0f:	jle    0x420eab
  420f11:	or     DWORD PTR [esp+eiz*2+0x25d609fe],esi
  420f18:	jge    0x420f66
  420f1a:	outs   dx,DWORD PTR es:[esi]
  420f1c:	jnp    0x420f4b
  420f1e:	fnstcw WORD PTR [esi+0x9]
  420f21:	mov    DWORD PTR [edx-0x52a449d7],esi
  420f27:	mov    edi,0xb9723794
  420f2c:	xchg   ebp,eax
  420f2d:	fsubr  DWORD PTR ds:0xa3e63c5b
  420f33:	lea    edi,[ecx-0x61]
  420f36:	jb     0x420f3d
  420f38:	enter  0x7532,0x1b
  420f3c:	sbb    BYTE PTR [ecx-0x46],ch
  420f3f:	(bad)  
  420f41:	dec    ebp
  420f42:	mov    ds:0xfef24717,eax
  420f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f48:	loopne 0x420f99
  420f4a:	lock dec ebp
  420f4c:	nop
  420f4d:	or     bh,BYTE PTR [edx+edi*4-0x56181d42]
  420f54:	or     DWORD PTR [ebx+0x74],esi
  420f57:	popf   
  420f58:	ret    
  420f59:	shl    BYTE PTR [ebp+0x2cbf3f02],1
  420f5f:	leave  
  420f60:	sub    ebx,DWORD PTR [ebp+ebp*1-0x17]
  420f64:	adc    DWORD PTR [ebp-0x54],ecx
  420f67:	mov    cl,BYTE PTR [ecx+0x55]
  420f6a:	pop    esi
  420f6b:	ret    0x4ef3
  420f6e:	mov    ch,0x12
  420f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f71:	pop    ebp
  420f72:	mov    dl,0x67
  420f74:	cli    
  420f75:	lods   eax,DWORD PTR fs:[esi]
  420f77:	repnz fmul QWORD PTR [esi+0x11]
  420f7b:	sbb    ebp,DWORD PTR [esi+0x3a]
  420f7e:	push   esp
  420f7f:	sub    cl,dl
  420f81:	mov    dh,0x8c
  420f83:	not    DWORD PTR [ebx]
  420f85:	inc    ebp
  420f86:	push   cs
  420f87:	pop    ds
  420f88:	pop    esp
  420f89:	addr16 pop edi
  420f8b:	faddp  st(5),st
  420f8d:	fidiv  DWORD PTR [ebp-0x42]
  420f90:	fcomp  DWORD PTR [ecx+0x68]
  420f93:	add    DWORD PTR [edi-0x30],edi
  420f96:	fwait
  420f97:	push   ss
  420f98:	inc    ebp
  420f99:	jmp    0x7dacae39
  420f9e:	jmp    DWORD PTR [ecx]
  420fa0:	adc    dl,BYTE PTR [ecx]
  420fa2:	inc    edx
  420fa3:	mov    ch,BYTE PTR [esi+0x51]
  420fa6:	test   BYTE PTR [edi+0x71],al
  420fa9:	or     ebx,edx
  420fab:	jbe    0x420f73
  420fad:	(bad)  
  420fae:	rcr    BYTE PTR [esi-0x11],cl
  420fb1:	in     al,dx
  420fb2:	push   ebp
  420fb3:	jmp    0x7b87fcc9
  420fb8:	xchg   ebp,eax
  420fb9:	aad    0xc0
  420fbb:	int3   
  420fbc:	sub    edi,edx
  420fbe:	jb     0x42103c
  420fc0:	nop
  420fc1:	cmc    
  420fc2:	lods   al,BYTE PTR ss:[esi]
  420fc4:	loope  0x421022
  420fc6:	es jnp 0x420ff0
  420fc9:	cmp    al,BYTE PTR [ebx-0x66b21ab0]
  420fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fd0:	cmp    eax,0x7dc05aab
  420fd5:	fiadd  DWORD PTR [ecx-0x3d]
  420fd8:	mov    BYTE PTR [edx-0xfb182a9],bh
  420fde:	inc    eax
  420fdf:	dec    ebp
  420fe0:	aaa    
  420fe1:	or     DWORD PTR [edi-0x79],0x7109ef59
  420fe8:	pop    edi
  420fe9:	pop    ecx
  420fea:	ja     0x421056
  420fec:	and    DWORD PTR [ecx-0x21adbaaa],ebx
  420ff2:	retf   0x4ded
  420ff5:	ins    BYTE PTR es:[edi],dx
  420ff6:	dec    edx
  420ff7:	and    dl,BYTE PTR [ebx-0x5a]
  420ffa:	popf   
  420ffb:	retf   
  420ffc:	shr    ah,1
  420ffe:	xchg   ecx,eax
  420fff:	sbb    DWORD PTR [esi-0x63],edi
  421002:	xor    al,0x5a
  421004:	dec    eax
  421005:	sub    bh,BYTE PTR ds:0x9333a4e9
  42100b:	xlat   BYTE PTR ds:[ebx]
  42100c:	or     BYTE PTR [ebp+0x1a],0x1d
  421010:	(bad)  
  421011:	pop    es
  421012:	inc    ebx
  421013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421014:	aad    0xe4
  421016:	stos   DWORD PTR es:[edi],eax
  421017:	adc    BYTE PTR [ebx],0x22
  42101a:	icebp  
  42101b:	or     eax,0x6e5d0a03
  421020:	loopne 0x421026
  421022:	or     DWORD PTR ds:0xce8149a1,ebx
  421028:	mov    ch,BYTE PTR [edx-0x721a581a]
  42102e:	dec    esp
  42102f:	fcomp  QWORD PTR [eax-0x7f]
  421032:	adc    al,0x5f
  421034:	es out 0x28,eax
  421037:	inc    ebx
  421038:	push   0x7e
  42103a:	dec    ebp
  42103b:	or     DWORD PTR [ecx+0x390c68c5],esp
  421041:	jo     0x420fdb
  421043:	pop    esi
  421044:	jecxz  0x4210a9
  421046:	not    al
  421048:	lds    edi,FWORD PTR [ebx]
  42104a:	push   edi
  42104b:	ins    BYTE PTR es:[edi],dx
  42104c:	call   0x2801694f
  421051:	jmp    0x42102f
  421053:	mov    ah,0xcb
  421055:	cwde   
  421056:	xchg   BYTE PTR [ecx+edx*8],bl
  421059:	pop    esp
  42105a:	iret   
  42105b:	scas   al,BYTE PTR es:[edi]
  42105c:	adc    BYTE PTR [edx+0x33],0xe0
  421060:	cmp    eax,0x740e2840
  421065:	mov    ebx,0x352fb5e4
  42106a:	pop    ebp
  42106b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42106c:	adc    dl,cl
  42106e:	mov    ch,0x6
  421070:	and    ecx,ebx
  421072:	cmp    al,0xc1
  421074:	or     eax,ebp
  421076:	pop    edi
  421077:	sbb    ah,dh
  421079:	je     0x4210b2
  42107b:	cmp    al,0x5b
  42107d:	hlt    
  42107e:	outs   dx,BYTE PTR ds:[esi]
  42107f:	push   edx
  421080:	inc    edx
  421081:	jae    0x42108a
  421083:	adc    bh,al
  421085:	jmp    0x5f4c19f5
  42108a:	adc    eax,0x1f79190b
  42108f:	dec    ebx
  421090:	call   DWORD PTR [ecx]
  421092:	iret   
  421093:	jecxz  0x4210e4
  421095:	cdq    
  421096:	mov    al,0xc4
  421098:	aad    0xe0
  42109a:	mov    dl,0xd0
  42109c:	jmp    0x82e5a4b3
  4210a1:	je     0x42108f
  4210a3:	or     al,0x65
  4210a5:	mov    ch,0x63
  4210a7:	fild   QWORD PTR [edx]
  4210a9:	jmp    0x1d0a1979
  4210ae:	ficom  WORD PTR [edx+0x7309c1f3]
  4210b4:	aas    
  4210b5:	les    esp,FWORD PTR [edi+ebp*2-0x7d129919]
  4210bc:	ret    0xf101
  4210bf:	push   0x49b16f7a
  4210c4:	mov    cl,0x63
  4210c6:	and    esp,DWORD PTR [ebx+0x6ed99e21]
  4210cc:	out    dx,eax
  4210cd:	mul    edi
  4210cf:	sub    BYTE PTR [ebp+0x51871d2f],dl
  4210d5:	xchg   ecx,eax
  4210d6:	pop    ecx
  4210d7:	retf   
  4210d8:	arpl   dx,bp
  4210da:	mov    esi,0xa3b73975
  4210df:	in     al,0x22
  4210e1:	in     eax,dx
  4210e2:	retf   
  4210e3:	mov    ch,0x57
  4210e5:	lods   al,BYTE PTR ds:[esi]
  4210e6:	cmp    al,0x52
  4210e8:	sub    eax,0x88b858f4
  4210ed:	pop    esi
  4210ee:	pop    edi
  4210ef:	fwait
  4210f0:	(bad)
  4210f3:	xchg   edx,eax
  4210f4:	scas   eax,DWORD PTR es:[edi]
  4210f5:	in     al,0xe8
  4210f7:	pop    ebp
  4210f8:	ins    BYTE PTR es:[edi],dx
  4210f9:	arpl   WORD PTR [eax-0x37],dx
  4210fc:	(bad)  
  4210fd:	call   0xc3d21890
  421102:	(bad)  
  421103:	sub    eax,0xbad3fe9b
  421108:	sahf   
  421109:	sahf   
  42110a:	mov    eax,0x6ef00bbd
  42110f:	ds push edi
  421111:	int    0x94
  421113:	lods   al,BYTE PTR ds:[esi]
  421114:	(bad)  
  421115:	shr    ebx,1
  421117:	add    ecx,ebx
  421119:	test   DWORD PTR [esi],ebx
  42111b:	or     al,0x68
  42111d:	ret    
  42111e:	cwde   
  42111f:	and    bh,ah
  421121:	add    BYTE PTR [edi],cl
  421123:	stos   DWORD PTR es:[edi],eax
  421124:	dec    esp
  421125:	mov    al,ds:0x8c323462
  42112a:	(bad)  
  42112b:	pop    ebx
  42112c:	hlt    
  42112d:	mov    ebp,?
  42112f:	inc    esi
  421130:	jge    0x4210d1
  421132:	shr    BYTE PTR [ebx+0x43],1
  421135:	pop    edx
  421136:	xchg   esp,eax
  421137:	dec    ebx
  421138:	pusha  
  421139:	sti    
  42113a:	pop    ebp
  42113b:	or     al,BYTE PTR [edx-0x60b7edcf]
  421141:	add    DWORD PTR [edi+0x6c],ebp
  421144:	jnp    0x4211a2
  421146:	add    ebx,esi
  421148:	jbe    0x4210d2
  42114a:	in     eax,0xe4
  42114c:	(bad)  
  42114d:	mov    cs,WORD PTR [esi-0x64]
  421150:	add    eax,0xdc8423b8
  421155:	das    
  421156:	xlat   BYTE PTR ds:[ebx]
  421157:	sbb    BYTE PTR [edi+0x37],0xe7
  42115b:	mov    ebp,0x2e0e2c9c
  421160:	sub    eax,0x697d3574
  421165:	fucomp st(6)
  421167:	lds    eax,FWORD PTR [esi-0x14]
  42116a:	repz push esi
  42116c:	clc    
  42116d:	fwait
  42116e:	sub    edi,DWORD PTR ds:0x348e2917
  421174:	mov    bh,0x81
  421176:	fisttp DWORD PTR [ebp+0x5a]
  421179:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42117b:	ret    0x87c6
  42117e:	sub    BYTE PTR [eax+0x29],ah
  421181:	aas    
  421182:	adc    edx,DWORD PTR cs:[eax-0x11503e48]
  421189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118a:	std    
  42118b:	xchg   esi,eax
  42118c:	or     bh,BYTE PTR [ecx+esi*4+0x0]
  421190:	cmp    BYTE PTR [edx+0x77b7f40a],bl
  421196:	mov    esp,0xc4eab0cc
  42119b:	push   ss
  42119c:	sub    esi,DWORD PTR ds:0xe13e2180
  4211a2:	in     eax,dx
  4211a3:	shl    BYTE PTR [ebp+0x6],1
  4211a6:	mov    esi,0x7fb6d120
  4211ab:	mov    edx,DWORD PTR [edx+0x78]
  4211ae:	and    al,0xfb
  4211b0:	or     eax,eax
  4211b2:	shl    BYTE PTR [eax],0x21
  4211b5:	dec    ecx
  4211b6:	adc    al,0x27
  4211b8:	mov    ds:0xbb067d0d,al
  4211bd:	loop   0x421222
  4211bf:	jno    0x421149
  4211c1:	jbe    0x42120f
  4211c3:	stos   DWORD PTR es:[edi],eax
  4211c4:	data16 ja 0x4211df
  4211c7:	xlat   BYTE PTR ds:[ebx]
  4211c8:	outs   dx,DWORD PTR ds:[esi]
  4211c9:	ins    BYTE PTR es:[edi],dx
  4211ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211cb:	nop
  4211cc:	adc    eax,DWORD PTR ds:0x28e4e986
  4211d2:	lea    ebp,[ecx-0x6]
  4211d5:	sbb    eax,0xf3c9ad17
  4211da:	jmp    FWORD PTR [eax]
  4211dc:	adc    al,0xd1
  4211de:	cmp    BYTE PTR [edi],bh
  4211e0:	mov    al,ds:0xa2bd6ac8
  4211e5:	jb     0x4211bf
  4211e7:	lea    edx,[edx-0xf251d59]
  4211ed:	inc    edx
  4211ee:	das    
  4211ef:	or     ah,BYTE PTR [edx-0xa3084a4]
  4211f5:	dec    edx
  4211f6:	pop    esp
  4211f7:	rol    BYTE PTR [eax-0x5693e602],0x3e
  4211fe:	push   cs
  4211ff:	test   eax,0x837657f8
  421204:	fwait
  421205:	ret    0xbdc2
  421208:	add    eax,0x1385e68b
  42120d:	push   eax
  42120e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42120f:	das    
  421210:	jb     0x4211d1
  421212:	dec    ecx
  421213:	mov    ebp,0x81d46910
  421218:	add    eax,0x67bcd2be
  42121d:	(bad)  
  42121e:	stc    
  42121f:	or     BYTE PTR [esi+0x3f332b3e],0xa
  421226:	mov    eax,ds:0xc0cbf199
  42122b:	push   0x8f0eb93c
  421230:	out    dx,eax
  421231:	retf   0x332c
  421234:	into   
  421235:	(bad)  
  421236:	int    0x5f
  421238:	sbb    al,0x44
  42123a:	out    0x42,al
  42123c:	and    eax,0xd570ce34
  421241:	push   cs
  421242:	adc    DWORD PTR [esi+0x346023d8],ebp
  421248:	xor    eax,edi
  42124a:	lds    eax,FWORD PTR [edi]
  42124c:	aaa    
  42124d:	sbb    eax,0x6abde960
  421252:	lods   eax,DWORD PTR ds:[esi]
  421253:	jg     0x421281
  421255:	lds    edi,FWORD PTR [edi-0x62]
  421258:	mov    ds:0x468719e1,eax
  42125d:	inc    ecx
  42125e:	loopne 0x421243
  421260:	and    eax,0xbf54be82
  421265:	and    ebp,ebp
  421267:	or     DWORD PTR [ebx],esp
  421269:	jp     0x4211f5
  42126b:	ror    dh,cl
  42126d:	mov    al,0xea
  42126f:	ret    
  421270:	sahf   
  421271:	std    
  421272:	mov    ch,0x5d
  421274:	mov    ch,0xb
  421276:	mov    ebp,0xbe1afb06
  42127b:	push   0xf3e8ffdf
  421280:	stc    
  421281:	push   ecx
  421282:	xchg   edx,eax
  421283:	(bad)  
  421285:	cmp    al,0x5
  421287:	test   eax,0xb900704
  42128c:	jnp    0x421279
  42128e:	sub    cl,cl
  421290:	test   DWORD PTR [ebp+0x5c],edi
  421293:	jp     0x42129a
  421295:	pop    ebp
  421296:	pop    ebp
  421297:	es (bad) 
  421299:	repnz jecxz 0x421306
  42129c:	pushf  
  42129d:	xor    dh,dh
  42129f:	lahf   
  4212a0:	or     BYTE PTR [esp+edi*1+0x6bd4b63b],cl
  4212a7:	pushf  
  4212a8:	ret    
  4212a9:	dec    ebx
  4212aa:	sar    BYTE PTR [eax],1
  4212ac:	jp     0x421318
  4212ae:	fild   QWORD PTR [esp+ebp*1]
  4212b1:	es sub al,0xd5
  4212b4:	iret   
  4212b5:	iret   
  4212b6:	and    eax,0x1f071dbd
  4212bb:	jno    0x4212ee
  4212bd:	ficomp DWORD PTR [eax+0x6e]
  4212c0:	test   DWORD PTR [ebx],esp
  4212c2:	pop    ebp
  4212c3:	in     al,dx
  4212c4:	xor    eax,0xef531d0
  4212c9:	mov    ds:0x4b567ac0,al
  4212ce:	add    edx,eax
  4212d0:	arpl   sp,dx
  4212d2:	in     eax,0x75
  4212d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212d5:	cwde   
  4212d6:	xchg   BYTE PTR [edx+0x6db41ed3],al
  4212dc:	sbb    al,0x19
  4212de:	sti    
  4212df:	xor    al,0x3e
  4212e1:	mov    ebp,0x6e28a475
  4212e6:	inc    ebx
  4212e7:	mov    BYTE PTR [edi+eiz*2-0x1b8f3c19],dh
  4212ee:	loopne 0x4212c1
  4212f0:	jge    0x4212f6
  4212f2:	push   ebx
  4212f3:	hlt    
  4212f4:	sar    BYTE PTR [eax+edx*8-0x80],1
  4212f8:	cmp    ebx,DWORD PTR [esi]
  4212fa:	jmp    0x421281
  4212fc:	or     dh,dh
  4212fe:	test   ecx,ebp
  421300:	jecxz  0x42135f
  421302:	cs xchg ebx,eax
  421305:	xor    eax,0x279852f
  42130a:	cmp    ecx,eax
  42130c:	inc    esi
  42130d:	popf   
  42130e:	xchg   ebx,eax
  42130f:	jge    0x42132e
  421311:	scas   al,BYTE PTR es:[edi]
  421312:	loope  0x4212d1
  421314:	and    al,BYTE PTR [eax+eax*4+0x39]
  421318:	jo     0x421319
  42131a:	jle    0x42134e
  42131c:	lahf   
  42131d:	in     al,0x14
  42131f:	mov    cl,0x6f
  421321:	jge    0x42130d
  421323:	pop    esp
  421324:	pushf  
  421325:	fild   QWORD PTR ds:0xdc12840f
  42132b:	jbe    0x4212fd
  42132d:	scas   eax,DWORD PTR es:[edi]
  42132e:	inc    eax
  42132f:	cmc    
  421330:	mov    edx,0x24249aa1
  421335:	pusha  
  421336:	xchg   bl,dl
  421338:	sub    BYTE PTR [edi+0x34],ah
  42133b:	cmp    al,0xbe
  42133d:	inc    ebp
  42133e:	test   eax,0x829e0ed8
  421343:	pop    ecx
  421344:	scas   eax,DWORD PTR es:[edi]
  421345:	add    esp,ecx
  421347:	add    DWORD PTR [edx-0x6683a254],edi
  42134d:	jle    0x42137f
  42134f:	stos   BYTE PTR es:[edi],al
  421350:	(bad)  [ebx]
  421352:	cmp    edi,esi
  421354:	mov    esi,0x7a4a6635
  421359:	stc    
  42135a:	test   eax,0x89d9e61e
  42135f:	loop   0x4212f8
  421361:	out    0xaa,eax
  421363:	sbb    al,0x1e
  421365:	retf   
  421366:	aam    0xb0
  421368:	jno    0x42131c
  42136a:	xchg   ebx,eax
  42136b:	and    esi,esi
  42136d:	out    0xa9,al
  42136f:	loop   0x421305
  421371:	shl    bh,0xfe
  421374:	je     0x42138e
  421376:	sbb    al,0x9e
  421378:	int3   
  421379:	and    eax,0x1034dabc
  42137e:	and    BYTE PTR [ebx],dh
  421380:	sbb    eax,0xebd1d573
  421385:	hlt    
  421386:	iret   
  421387:	or     al,0x72
  421389:	xchg   esi,eax
  42138a:	cmp    edx,DWORD PTR [edi+0x2c21ddb1]
  421390:	or     DWORD PTR [ebx-0x34],ebx
  421393:	pop    es
  421394:	mov    edi,0x8bf08d29
  421399:	sbb    al,0x5c
  42139b:	arpl   WORD PTR [edx-0x49],di
  42139e:	mov    esp,0x96364264
  4213a3:	xor    al,0x62
  4213a5:	pop    edx
  4213a6:	in     al,dx
  4213a7:	add    BYTE PTR [ebp+0x751cf815],ah
  4213ad:	es sub eax,0x37c6cbca
  4213b3:	lahf   
  4213b4:	inc    eax
  4213b5:	cdq    
  4213b6:	and    ch,dh
  4213b8:	loop   0x4213b3
  4213ba:	pushf  
  4213bb:	mov    dh,0x93
  4213bd:	add    al,0xaa
  4213bf:	in     al,dx
  4213c0:	dec    edx
  4213c1:	xchg   BYTE PTR [edi-0x1dafaf9e],ah
  4213c7:	out    0xac,al
  4213c9:	dec    edi
  4213ca:	fst    QWORD PTR ss:[edi]
  4213cd:	in     eax,0xd0
  4213cf:	pop    eax
  4213d0:	jle    0x421355
  4213d2:	stos   BYTE PTR es:[edi],al
  4213d3:	call   0x6e13:0xcfeff66c
  4213da:	mov    al,0xc0
  4213dc:	aaa    
  4213dd:	adc    BYTE PTR [ecx+0x73],bl
  4213e0:	jg     0x421409
  4213e2:	mov    bl,0xcf
  4213e4:	pop    ds
  4213e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e6:	adc    dl,BYTE PTR [edx+0x387bb0e]
  4213ec:	lea    ebp,[ebx+0x37]
  4213ef:	fcmovnbe st,st(1)
  4213f1:	loope  0x421468
  4213f3:	adc    BYTE PTR [eax+0x3a],ah
  4213f6:	retf   
  4213f7:	loopne 0x42137a
  4213f9:	push   ebx
  4213fa:	imul   esp,esp,0xe5fc6540
  421400:	xor    eax,0xcad77c6f
  421405:	pushf  
  421406:	shl    DWORD PTR [eax],1
  421408:	test   BYTE PTR [ebx-0x5360e14e],al
  42140e:	dec    eax
  42140f:	shr    bl,1
  421411:	out    dx,al
  421412:	fist   DWORD PTR [ecx-0xf394e7a]
  421418:	or     al,0x4a
  42141a:	pop    ss
  42141b:	pop    esp
  42141c:	loopne 0x421480
  42141e:	outs   dx,DWORD PTR ds:[esi]
  42141f:	mov    ecx,0x14bfd3ff
  421424:	xchg   esi,eax
  421425:	popa   
  421426:	fbld   TBYTE PTR [ebp+0x1]
  421429:	ja     0x4213e8
  42142b:	ins    DWORD PTR es:[edi],dx
  42142c:	jge    0x421478
  42142e:	loop   0x421443
  421430:	test   dl,0xfc
  421433:	call   0x2bbbf59d
  421438:	and    al,BYTE PTR [esi+0x7258bb25]
  42143e:	sti    
  42143f:	jnp    0x421435
  421441:	jbe    0x421493
  421443:	les    edi,FWORD PTR [edi+0x54f1bfdd]
  421449:	ds jl  0x4214ab
  42144c:	dec    esi
  42144d:	push   0xffffffd9
  42144f:	push   ds
  421450:	push   ecx
  421451:	add    esp,DWORD PTR [edi]
  421453:	mov    esp,0x286885d9
  421458:	dec    edx
  421459:	addr16 leave 
  42145b:	adc    dl,0x25
  42145e:	ret    0xdcc7
  421461:	ds cs cdq 
  421464:	lahf   
  421465:	stos   BYTE PTR es:[edi],al
  421466:	xor    DWORD PTR [ecx-0x397b2ebb],ebp
  42146c:	daa    
  42146d:	pop    ecx
  42146e:	cwde   
  42146f:	out    0x22,eax
  421471:	daa    
  421472:	(bad)  
  421473:	jge    0x42140a
  421475:	outs   dx,BYTE PTR ds:[esi]
  421476:	push   ebp
  421477:	push   es
  421478:	adc    bh,al
  42147a:	push   ebx
  42147b:	test   BYTE PTR ds:0x6cf8b94f,dl
  421481:	push   es
  421482:	jmp    0x56112931
  421487:	push   edx
  421488:	push   ecx
  421489:	mov    eax,ds:0xc6f1fa5f
  42148e:	mov    bl,0xef
  421490:	add    DWORD PTR ds:0x2b8580c6,edi
  421496:	test   al,0x6d
  421498:	fcmovu st,st(1)
  42149a:	mov    dh,0x1a
  42149c:	push   es
  42149d:	sub    eax,0x390d5e91
  4214a2:	stos   BYTE PTR es:[edi],al
  4214a3:	or     DWORD PTR [eax-0x7cf95f52],edx
  4214a9:	test   DWORD PTR [esi+edi*8+0x48],edx
  4214ad:	sbb    eax,0x9a12b370
  4214b2:	iret   
  4214b3:	xchg   esi,eax
  4214b4:	ds gs in al,0x9e
  4214b8:	jp     0x4214a3
  4214ba:	inc    ebx
  4214bb:	xchg   ecx,eax
  4214bc:	mov    ?,WORD PTR [edx-0x427f75ea]
  4214c2:	loopne 0x42152c
  4214c4:	xor    eax,0xa3d4c26
  4214c9:	mov    al,BYTE PTR [edx-0x76]
  4214cc:	lea    ebp,[ecx-0x5b]
  4214cf:	or     al,0xc
  4214d1:	frstor [edi-0xe254470]
  4214d7:	(bad)  
  4214d8:	cdq    
  4214d9:	pop    ecx
  4214da:	sbb    eax,0xac4996bb
  4214df:	sub    cl,BYTE PTR cs:[eax]
  4214e2:	sbb    BYTE PTR [ebx],dl
  4214e4:	(bad)  
  4214e5:	adc    eax,0xb933d46
  4214ea:	pop    ss
  4214eb:	xchg   edx,eax
  4214ec:	xchg   ecx,eax
  4214ed:	cdq    
  4214ee:	mov    ebp,0xe5a50150
  4214f3:	mov    ds:0x8fca6c6c,al
  4214f8:	fdivr  QWORD PTR [ebp+0x2113cb15]
  4214fe:	jb     0x42152e
  421500:	ror    BYTE PTR [edx],cl
  421502:	mov    ds,esp
  421504:	mov    eax,ds:0x57d76370
  421509:	push   edi
  42150a:	jne    0x4214cd
  42150c:	xchg   BYTE PTR [eax],ah
  42150e:	mov    dh,0xf3
  421510:	mov    dh,0x66
  421512:	ins    DWORD PTR es:[edi],dx
  421513:	(bad)  
  421514:	fbstp  TBYTE PTR [edi]
  421516:	icebp  
  421517:	cld    
  421518:	mov    ds:0xe211dd4c,al
  42151d:	push   ebx
  42151e:	test   eax,0xd7818d2b
  421523:	xor    al,0x58
  421525:	inc    ecx
  421526:	inc    esp
  421527:	dec    ebp
  421528:	loope  0x4214c1
  42152a:	les    edx,FWORD PTR [edi-0x3096ad55]
  421530:	das    
  421531:	jmp    0x6483a8ba
  421536:	div    BYTE PTR [eax]
  421538:	popf   
  421539:	clc    
  42153a:	popa   
  42153b:	imul   ebp,ecx,0xffffffd2
  42153e:	mov    bh,0x49
  421540:	popa   
  421541:	fcomp  QWORD PTR [ecx]
  421543:	bnd jl 0x4214f2
  421546:	jge    0x421528
  421548:	fidivr DWORD PTR [ebx-0x30]
  42154b:	ret    0x7aa5
  42154e:	adc    BYTE PTR [ecx-0xe],cl
  421551:	xor    bl,BYTE PTR [ebp-0x44]
  421554:	pop    ebp
  421555:	nop
  421556:	scas   eax,DWORD PTR es:[edi]
  421557:	fnstcw WORD PTR [edx-0x42]
  42155a:	std    
  42155b:	dec    ebp
  42155c:	lods   eax,DWORD PTR ds:[esi]
  42155d:	rcr    BYTE PTR [ecx-0x653bf9cf],0x4
  421564:	inc    edi
  421565:	sub    BYTE PTR [ebp+0x4c],0x57
  421569:	std    
  42156a:	dec    ebp
  42156b:	lea    edx,[edx]
  42156d:	(bad)  
  42156e:	repnz mov esi,0xe91f945c
  421574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421575:	or     bl,0xd4
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	out    dx,eax
  42157a:	xor    al,0x3f
  42157c:	inc    eax
  42157d:	xchg   edx,eax
  42157e:	jmp    0x38df:0x9d523636
  421585:	rcl    edi,1
  421587:	pop    ebp
  421588:	mov    ds:0xd286c20,al
  42158d:	aaa    
  42158e:	rol    BYTE PTR [edx+0x19],cl
  421591:	ficom  DWORD PTR [ebx+0x78]
  421594:	ja     0x4215de
  421596:	aad    0x91
  421598:	or     edx,esp
  42159a:	mov    esp,0x7175126d
  42159f:	sub    al,0xc
  4215a1:	add    al,0x25
  4215a3:	aas    
  4215a4:	push   0x37
  4215a6:	arpl   WORD PTR [edx],sp
  4215a8:	shl    BYTE PTR [ecx+0x3d],0xf0
  4215ac:	lods   al,BYTE PTR ds:[esi]
  4215ad:	push   es
  4215ae:	adc    BYTE PTR [ebx-0x3f],ch
  4215b1:	call   0x8aa96354
  4215b6:	mov    bh,0x74
  4215b8:	gs pop esi
  4215ba:	dec    edi
  4215bb:	into   
  4215bc:	sar    BYTE PTR [esi-0x70],0xb8
  4215c0:	jns    0x4215a2
  4215c2:	push   ss
  4215c3:	cld    
  4215c4:	jnp    0x421636
  4215c6:	pop    ebp
  4215c7:	stos   DWORD PTR es:[edi],eax
  4215c8:	ins    DWORD PTR es:[edi],dx
  4215c9:	pop    es
  4215ca:	call   0x49b4:0x5147379a
  4215d1:	leave  
  4215d2:	mov    ebp,0x9466f9f7
  4215d7:	fisub  DWORD PTR [eax+0x53]
  4215da:	hlt    
  4215db:	push   ecx
  4215dc:	jo     0x4215dd
  4215de:	sub    al,0x71
  4215e0:	add    DWORD PTR [edi-0x46ff5fd6],0xffffffc1
  4215e7:	hlt    
  4215e8:	push   ds
  4215e9:	sahf   
  4215ea:	add    eax,0xac610e1d
  4215ef:	pop    esp
  4215f0:	ret    0x5809
  4215f3:	mov    dh,0xbc
  4215f5:	mov    ebp,?
  4215f7:	sbb    eax,0xffffff81
  4215fa:	in     eax,0x8d
  4215fc:	jle    0x4215bf
  4215fe:	jo     0x42161a
  421600:	mov    ss,WORD PTR ds:0xd20228a4
  421606:	dec    ecx
  421607:	test   DWORD PTR [esi],edi
  421609:	scas   eax,DWORD PTR es:[edi]
  42160a:	mov    ecx,0xa2d619fe
  42160f:	jmp    0x42166c
  421611:	mov    eax,ds:0x3edfe15c
  421616:	inc    ebp
  421617:	jg     0x4215ff
  421619:	(bad)  
  42161a:	jge    0x42168d
  42161c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42161d:	cmc    
  42161e:	ret    
  42161f:	pop    ss
  421620:	es repz sbb al,0x62
  421624:	and    BYTE PTR [esi-0x1a5179c3],dl
  42162a:	out    0xe2,eax
  42162c:	inc    esi
  42162d:	pop    ecx
  42162e:	pop    es
  42162f:	adc    DWORD PTR [edx-0x5],ecx
  421632:	call   0x542c:0x58aa9d1e
  421639:	jl     0x42165a
  42163b:	daa    
  42163c:	stos   BYTE PTR es:[edi],al
  42163d:	add    BYTE PTR [esp+ecx*8-0x5761b629],ch
  421644:	stos   DWORD PTR es:[edi],eax
  421645:	out    dx,al
  421646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421647:	retf   
  421648:	and    edx,DWORD PTR [esi+0x2b4404aa]
  42164e:	loope  0x4215d8
  421650:	and    BYTE PTR [edi],bh
  421652:	pop    edi
  421653:	inc    ecx
  421654:	daa    
  421655:	mov    dl,0x3b
  421657:	xchg   BYTE PTR [eax+0x4dacc75d],bh
  42165d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42165e:	(bad)  
  42165f:	leave  
  421660:	ja     0x4216d9
  421662:	push   esi
  421663:	or     ah,bl
  421665:	sbb    eax,0xf5e8a31a
  42166a:	int    0x7e
  42166c:	lds    esi,FWORD PTR [ebp+ecx*8+0x6151d6f3]
  421673:	push   eax
  421674:	fistp  DWORD PTR ds:0xecb4
  421679:	fild   WORD PTR [eax]
  42167b:	mov    ch,0x7c
  42167d:	mov    ?,WORD PTR [ebp+0x7fef533b]
  421683:	rcr    BYTE PTR [edx],cl
  421685:	lock or eax,0x96435dfe
  42168b:	jae    0x42168d
  42168d:	ins    DWORD PTR es:[edi],dx
  42168e:	push   ecx
  42168f:	idiv   DWORD PTR [esi-0x3c]
  421692:	and    ebp,edi
  421694:	mov    dh,0xb2
  421696:	(bad)  
  421697:	dec    ecx
  421698:	and    bl,BYTE PTR [eax+0x1f]
  42169b:	daa    
  42169c:	and    al,0x2f
  42169e:	leave  
  42169f:	les    ebp,FWORD PTR [eax]
  4216a1:	jbe    0x42169f
  4216a3:	xor    BYTE PTR ds:0x4ad91157,0xae
  4216aa:	sahf   
  4216ab:	adc    ah,BYTE PTR [ecx]
  4216ad:	int    0xc1
  4216af:	xchg   esi,eax
  4216b0:	xchg   ebx,eax
  4216b1:	jno    0x4216c4
  4216b3:	cmp    ch,BYTE PTR [esi]
  4216b5:	mov    ebp,0x35632fd0
  4216ba:	shl    dl,0xab
  4216bd:	jo     0x42168f
  4216bf:	mov    bl,0x8
  4216c1:	pop    ss
  4216c2:	and    eax,0xe0a1e011
  4216c7:	(bad)  
  4216c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216c9:	ins    DWORD PTR es:[edi],dx
  4216ca:	and    ebp,DWORD PTR [ebx-0x1440360c]
  4216d0:	mov    ebx,DWORD PTR [ebx]
  4216d2:	add    DWORD PTR [ebp-0x34],ebx
  4216d5:	imul   edi,DWORD PTR [eax-0xe],0x4f
  4216d9:	shl    BYTE PTR [ecx-0x4d16aa79],0x5b
  4216e0:	mov    ch,0xd8
  4216e2:	mov    BYTE PTR [eax+eax*1+0x70],dh
  4216e6:	cmp    DWORD PTR [ebx+0x7421b16d],edx
  4216ec:	inc    eax
  4216ed:	xor    ah,BYTE PTR [esi]
  4216ef:	cmp    eax,0xe275af65
  4216f4:	push   ss
  4216f5:	and    BYTE PTR gs:[ebx-0x1ebd4f9a],dh
  4216fc:	ja     0x421746
  4216fe:	mov    dh,0x4f
  421700:	sbb    DWORD PTR [edi],eax
  421702:	adc    al,ch
  421704:	jnp    0x421775
  421706:	and    eax,0x453af7f2
  42170b:	push   0x91ec8242
  421710:	fist   WORD PTR [ebx-0x271bb9bb]
  421716:	adc    edi,ecx
  421718:	or     BYTE PTR [esi],al
  42171a:	repz into 
  42171c:	jecxz  0x42171c
  42171e:	sub    eax,0xce8dd280
  421723:	loope  0x421759
  421725:	retf   0x9ce7
  421728:	pusha  
  421729:	je     0x42176d
  42172b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42172c:	in     al,0xe2
  42172e:	or     al,0xe1
  421730:	push   esi
  421731:	and    al,0x60
  421733:	and    BYTE PTR [edx],al
  421735:	jae    0x421788
  421737:	adc    ecx,DWORD PTR [ebx]
  421739:	mov    cl,0x85
  42173b:	in     eax,dx
  42173c:	mov    eax,0xbcdc96b
  421741:	ja     0x421750
  421743:	or     ecx,ebp
  421745:	loopne 0x4217c0
  421747:	data16 fwait
  421749:	inc    ebx
  42174a:	xchg   edi,eax
  42174b:	and    al,0xa4
  42174d:	push   edi
  42174e:	call   0x4e466a7c
  421753:	and    BYTE PTR [eax+0x3c],ah
  421756:	mov    esp,0x5788c144
  42175b:	stos   BYTE PTR es:[edi],al
  42175c:	xlat   BYTE PTR ds:[ebx]
  42175d:	jcxz   0x42176c
  421760:	or     ebx,DWORD PTR [edx+0x70]
  421763:	cli    
  421764:	jge    0x421721
  421766:	cwde   
  421767:	sbb    DWORD PTR [eax-0x6474b82e],esi
  42176d:	jnp    0x4216ff
  42176f:	sbb    BYTE PTR [esi+0x687a45b6],ah
  421775:	adc    dh,BYTE PTR [edi+0x31]
  421778:	sbb    ch,dh
  42177a:	outs   dx,BYTE PTR ds:[esi]
  42177b:	addr16 push 0x23
  42177e:	dec    ecx
  42177f:	out    dx,eax
  421780:	ins    BYTE PTR es:[edi],dx
  421781:	cmp    BYTE PTR [edi-0x32],0xcd
  421785:	push   ebx
  421786:	push   esi
  421787:	int3   
  421788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421789:	jmp    0xe9dbe20a
  42178e:	shl    BYTE PTR [edi+0x4e],cl
  421791:	xor    cl,bl
  421793:	retf   0xe9ed
  421796:	test   esp,edx
  421798:	xor    bl,bh
  42179a:	jecxz  0x421808
  42179c:	ret    0xb5c4
  42179f:	mov    ebx,0x7e4ba6af
  4217a4:	adc    edx,DWORD PTR [ebx-0x9696cd9]
  4217aa:	dec    ebx
  4217ab:	ins    DWORD PTR es:[edi],dx
  4217ac:	addr16 icebp 
  4217ae:	jno    0x4217ee
  4217b0:	pop    edx
  4217b1:	jmp    0xd387:0x22b0b0f3
  4217b8:	inc    edx
  4217b9:	mov    edx,DWORD PTR [ecx-0x20]
  4217bc:	out    dx,al
  4217bd:	jae    0x421789
  4217bf:	cmp    dh,BYTE PTR [esi]
  4217c1:	(bad)  
  4217c2:	cdq    
  4217c3:	push   es
  4217c4:	dec    edx
  4217c5:	xchg   esp,eax
  4217c6:	je     0x4217f1
  4217c8:	jb     0x4217ce
  4217ca:	in     al,0x32
  4217cc:	mov    al,ds:0xd9681139
  4217d1:	rcr    DWORD PTR [eax-0x455904aa],0x0
  4217d8:	lds    ecx,FWORD PTR [eax-0x31185165]
  4217de:	lods   eax,DWORD PTR ds:[esi]
  4217df:	cmp    bh,BYTE PTR [edx+0x37]
  4217e2:	and    BYTE PTR ds:[ebx-0x76f49a84],bl
  4217e9:	test   DWORD PTR [eax+0x2de3e0b3],esp
  4217ef:	lahf   
  4217f0:	ja     0x421854
  4217f2:	cmp    BYTE PTR ds:[ebx+esi*1],cl
  4217f6:	inc    ebp
  4217f7:	add    ecx,edi
  4217f9:	sbb    bh,bl
  4217fb:	add    dl,dh
  4217fd:	jb     0x421852
  4217ff:	inc    edx
  421800:	imul   esi,DWORD PTR [esi+0x56],0xbee40f3c
  421807:	stc    
  421808:	xchg   BYTE PTR [eax],ah
  42180a:	mov    esi,0xe2350dbd
  42180f:	lods   al,BYTE PTR ds:[esi]
  421810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421811:	inc    edx
  421812:	bnd ja 0x4217f8
  421815:	test   dh,ch
  421817:	jp     0x421889
  421819:	pushf  
  42181a:	or     eax,0x17c280c9
  42181f:	xor    esi,ecx
  421821:	pop    es
  421822:	test   eax,0xd61010f4
  421827:	lods   eax,DWORD PTR ds:[esi]
  421828:	sbb    dl,BYTE PTR [eax+edx*4]
  42182b:	sti    
  42182c:	jmp    0x451:0xc02c9edb
  421833:	jne    0x4217d1
  421835:	inc    edx
  421836:	gs adc al,0x1f
  421839:	outs   dx,BYTE PTR ds:[esi]
  42183a:	ret    0x776f
  42183d:	retf   
  42183e:	xor    eax,0x58861099
  421843:	xchg   esp,eax
  421844:	fsub   QWORD PTR [edi]
  421846:	sbb    eax,0x60c545f0
  42184b:	push   ds
  42184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42184d:	mov    DWORD PTR [ecx-0x16ae845f],0x19b5f1a
  421857:	cmp    DWORD PTR [eax+0x64],ebp
  42185a:	jo     0x4218ca
  42185c:	test   DWORD PTR [edx+0x7b],ecx
  42185f:	test   BYTE PTR [ebp-0x79b9791],bl
  421865:	ja     0x4217eb
  421867:	dec    ebx
  421868:	(bad)  
  42186a:	cdq    
  42186b:	add    BYTE PTR [ebx+0x3d4e4e32],bh
  421871:	dec    esp
  421872:	adc    eax,0xa1baa99d
  421877:	inc    esi
  421878:	xor    ebx,eax
  42187a:	sbb    al,0xff
  42187c:	mov    al,ds:0x563d0cd8
  421881:	fisttp WORD PTR [edx+eax*1+0x76]
  421885:	retf   0x9553
  421888:	sub    ebx,esp
  42188a:	outs   dx,BYTE PTR ds:[esi]
  42188b:	data16 xor dl,BYTE PTR [ecx+0x108f4ef7]
  421892:	mov    dh,0x47
  421894:	scas   al,BYTE PTR es:[edi]
  421895:	sbb    esi,DWORD PTR ds:0x9b629d2d
  42189b:	inc    esp
  42189c:	dec    edi
  42189d:	fdiv   st(0),st
  42189f:	add    BYTE PTR [esi],dl
  4218a1:	lods   al,BYTE PTR ds:[esi]
  4218a2:	stc    
  4218a3:	ret    0x49f1
  4218a6:	test   BYTE PTR [ebx],dl
  4218a8:	pusha  
  4218a9:	add    al,0x1
  4218ab:	or     ecx,DWORD PTR [edx-0x73473ce6]
  4218b1:	add    ch,BYTE PTR [ecx-0x5e]
  4218b4:	call   0x26b9cab5
  4218b9:	or     al,BYTE PTR [ecx+0x8ed6c30]
  4218bf:	add    al,0xa1
  4218c1:	mov    bl,0xca
  4218c3:	jo     0x4218c2
  4218c5:	add    DWORD PTR [edx+0x4d],ebx
  4218c8:	clc    
  4218c9:	retf   0x1de9
  4218cc:	xchg   BYTE PTR [eax-0x2b],dl
  4218cf:	mov    ds:0x6c477613,al
  4218d4:	repnz out 0xad,eax
  4218d7:	push   0xffffffaf
  4218d9:	imul   esi,esi,0x56
  4218dc:	aaa    
  4218dd:	pop    ecx
  4218de:	xchg   ecx,eax
  4218df:	cmp    eax,0xacbea5c6
  4218e4:	(bad)  
  4218e5:	adc    eax,0x7c336df8
  4218ea:	repz pop ebx
  4218ec:	mov    ebp,0x9575e5ff
  4218f1:	fwait
  4218f2:	push   ebp
  4218f3:	fisttp QWORD PTR [ebp+0x36]
  4218f6:	adc    al,0x1e
  4218f8:	cmp    DWORD PTR [ebx],edx
  4218fa:	scas   eax,DWORD PTR es:[edi]
  4218fb:	in     eax,dx
  4218fc:	xor    dl,BYTE PTR [ebx]
  4218fe:	js     0x4218bf
  421900:	int    0x8f
  421902:	pop    ebp
  421903:	lahf   
  421904:	cmp    dh,dh
  421906:	pop    edi
  421907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421908:	or     cl,BYTE PTR [edx-0x6c6897d8]
  42190e:	scas   al,BYTE PTR es:[edi]
  42190f:	dec    ebx
  421910:	jmp    0x42195d
  421912:	mov    esi,0xa8a80b20
  421917:	add    al,0x5
  421919:	fwait
  42191a:	dec    edx
  42191b:	inc    ecx
  42191c:	pop    ebp
  42191d:	adc    BYTE PTR [ebx-0x67],dl
  421920:	dec    ecx
  421921:	outs   dx,BYTE PTR ds:[esi]
  421922:	daa    
  421923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421924:	mov    al,ds:0x844f6bc3
  421929:	pusha  
  42192a:	xchg   DWORD PTR [eax+0x3efb35ac],ecx
  421930:	lahf   
  421931:	add    al,0xf1
  421933:	cmp    dh,al
  421935:	mov    ss,WORD PTR ds:0x4f8071ce
  42193b:	mov    cl,al
  42193d:	adc    cl,BYTE PTR [ecx+0x60]
  421940:	mov    esp,0xdea1c60b
  421945:	fmul   QWORD PTR ds:0xa0d1fbda
  42194b:	int    0x73
  42194d:	stos   DWORD PTR es:[edi],eax
  42194e:	jle    0x421922
  421950:	push   edx
  421952:	mov    eax,0x7569ee88
  421957:	ins    BYTE PTR es:[edi],dx
  421958:	xchg   esp,esp
  42195a:	push   esp
  42195b:	push   ss
  42195c:	mov    bh,0xc4
  42195e:	not    cl
  421960:	mov    ds:0x3d3e4c35,eax
  421965:	in     eax,dx
  421966:	pop    ss
  421967:	data16 test BYTE PTR [ecx-0x7b],dh
  42196b:	stc    
  42196c:	cld    
  42196d:	popa   
  42196e:	mov    ebx,0xb87dcc74
  421973:	pusha  
  421974:	pop    ebp
  421975:	or     ecx,DWORD PTR [edi+0x31]
  421978:	outs   dx,DWORD PTR ds:[esi]
  421979:	fucomi st,st(0)
  42197b:	sbb    al,0xac
  42197d:	sahf   
  42197e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42197f:	imul   edx,DWORD PTR [edx],0x18
  421982:	addr16 mov esp,0xe94b29b1
  421988:	pop    esp
  421989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42198a:	mov    ?,WORD PTR [ebp-0x21]
  42198d:	fdiv   QWORD PTR [edi-0x5e]
  421990:	sar    BYTE PTR [eax+0x24],cl
  421993:	jle    0x4219af
  421995:	jmp    0xb1d8db73
  42199a:	inc    ecx
  42199b:	sqrtps xmm4,XMMWORD PTR [esi-0x5a]
  42199f:	idiv   ecx
  4219a1:	je     0x421934
  4219a3:	dec    ebp
  4219a4:	in     al,dx
  4219a5:	ins    BYTE PTR es:[edi],dx
  4219a6:	xlat   BYTE PTR ds:[ebx]
  4219a7:	jmp    0xb5a0355c
  4219ac:	mov    ecx,ebp
  4219ae:	test   eax,0x6de4ce0d
  4219b3:	xlat   BYTE PTR ds:[ebx]
  4219b4:	and    dh,ah
  4219b6:	popf   
  4219b7:	(bad)  
  4219b8:	scas   al,BYTE PTR es:[edi]
  4219b9:	in     eax,0xb3
  4219bb:	das    
  4219bc:	push   es
  4219bd:	(bad)  
  4219be:	mov    ds,WORD PTR [ebx]
  4219c0:	mov    ebp,0x3936be1b
  4219c5:	cdq    
  4219c6:	cmp    bh,BYTE PTR [edx-0x27]
  4219c9:	in     eax,0x36
  4219cb:	dec    ebx
  4219cc:	jp     0x4219c0
  4219ce:	mov    dl,0x8e
  4219d0:	push   0xffffffcc
  4219d2:	push   ebx
  4219d3:	int3   
  4219d4:	je     0x421a21
  4219d6:	fwait
  4219d7:	cmp    BYTE PTR [edx-0x218d20b2],0x2d
  4219de:	and    DWORD PTR [esi+0x388e4262],ebp
  4219e4:	shl    esp,1
  4219e6:	xchg   BYTE PTR [ecx+0x3b],dl
  4219e9:	or     ebp,DWORD PTR [ebx-0x2300a28b]
  4219ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f0:	je     0x421a62
  4219f2:	pop    esi
  4219f3:	loope  0x4219d5
  4219f5:	cmp    DWORD PTR [edi+edi*8+0x2f],0x3d
  4219fa:	jl     0x421a0c
  4219fc:	jmp    0x4219ab
  4219fe:	mov    ah,BYTE PTR [ebp-0x345d0b55]
  421a04:	and    esi,DWORD PTR [edx-0x565c3010]
  421a0a:	(bad)  [edx]
  421a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a0d:	sahf   
  421a0e:	pop    esp
  421a0f:	js     0x4219e7
  421a11:	ret    0xe6d1
  421a14:	data16 clc 
  421a16:	mov    cl,BYTE PTR [ebx+0x3829b69c]
  421a1c:	pop    eax
  421a1d:	push   cs
  421a1e:	ins    DWORD PTR es:[edi],dx
  421a1f:	cmp    cl,BYTE PTR [ebx-0x68]
  421a22:	lahf   
  421a23:	std    
  421a24:	fidivr WORD PTR [ebx]
  421a26:	pop    ss
  421a27:	jb     0x421a38
  421a29:	inc    eax
  421a2a:	mov    edi,0xb118943d
  421a2f:	adc    DWORD PTR [edx+0x7e3069d9],ecx
  421a35:	xchg   BYTE PTR [eax-0x5b95d09a],bl
  421a3b:	dec    ebp
  421a3c:	and    ch,BYTE PTR [ecx-0x7090040f]
  421a42:	jle    0x421a62
  421a44:	les    ebx,FWORD PTR [eax-0x8d44f17]
  421a4a:	mov    BYTE PTR [ebx-0x4e0bdd0f],dl
  421a50:	sar    DWORD PTR [esi-0x4d],cl
  421a53:	mov    esi,0xfcc296fc
  421a58:	shl    BYTE PTR [ebx-0x58],1
  421a5b:	call   0x3379188a
  421a60:	(bad)  [ebx+0x799d7828]
  421a66:	rep lods eax,DWORD PTR ds:[esi]
  421a68:	dec    ebp
  421a69:	into   
  421a6a:	and    al,0x29
  421a6c:	jecxz  0x421a40
  421a6e:	mov    edi,0xadf934e2
  421a73:	call   0x75ce3831
  421a78:	mov    ecx,0xabae1a2
  421a7d:	pop    ds
  421a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a7f:	idiv   DWORD PTR [edx+0x533c585e]
  421a85:	add    al,0xf4
  421a87:	pop    DWORD PTR [ecx+0x4dabf8b7]
  421a8d:	add    ebx,eax
  421a8f:	mov    edx,0x9e548dd0
  421a94:	pop    ss
  421a95:	xchg   esi,eax
  421a96:	aad    0x8f
  421a98:	fisub  DWORD PTR [ebx-0x3b]
  421a9b:	int    0x61
  421a9d:	neg    DWORD PTR [edx]
  421a9f:	retf   
  421aa0:	out    dx,eax
  421aa1:	fnstsw WORD PTR [ebx+0x157c734d]
  421aa7:	outs   dx,BYTE PTR ds:[esi]
  421aa8:	loop   0x421a3a
  421aaa:	inc    ecx
  421aab:	jl     0x421ad0
  421aad:	pop    edx
  421aae:	jg     0x421b2a
  421ab0:	test   BYTE PTR [ebp+0x4c],ch
  421ab3:	retf   
  421ab4:	adc    bh,BYTE PTR [ebx-0x71]
  421ab7:	les    esi,FWORD PTR [eax]
  421ab9:	fisub  WORD PTR [eax]
  421abb:	in     al,0x56
  421abd:	cs aam 0xd2
  421ac0:	rcl    DWORD PTR [ebp+0x35bebb43],1
  421ac6:	mov    eax,0xb48daccb
  421acb:	popf   
  421acc:	sbb    al,0xa3
  421ace:	mul    DWORD PTR [edi+0x74]
  421ad1:	xor    ebx,DWORD PTR [edx+ebp*2+0x55]
  421ad5:	(bad)  
  421ad6:	retf   0xc2fc
  421ad9:	cmp    al,0xd0
  421adb:	cli    
  421adc:	loope  0x421ab3
  421ade:	pop    ss
  421adf:	push   ebx
  421ae0:	(bad)  
  421ae1:	mov    ebp,0x860f5f18
  421ae6:	pop    ebx
  421ae7:	mov    ebp,0xf1670197
  421aec:	push   edi
  421aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aee:	jmp    0x421a8b
  421af0:	mov    bh,0xf
  421af2:	add    BYTE PTR [esi+eiz*1],ch
  421af5:	pop    esi
  421af6:	push   ecx
  421af7:	inc    edx
  421af8:	adc    eax,0x82106508
  421afd:	sub    ebp,DWORD PTR [edx+0x27]
  421b00:	repz sbb eax,0xe3cbc92d
  421b06:	dec    eax
  421b07:	and    ah,0x53
  421b0a:	arpl   WORD PTR [ebp+0x4afa418e],dx
  421b10:	mov    eax,0xcc737e94
  421b15:	imul   ecx,DWORD PTR [eax-0x4f],0xffffffa8
  421b19:	nop
  421b1a:	pop    edi
  421b1b:	outs   dx,BYTE PTR ds:[esi]
  421b1c:	mov    BYTE PTR gs:[ebp-0x52aeb61e],0x28
  421b24:	push   esi
  421b25:	out    dx,eax
  421b26:	jmp    0xc97f:0x5d771893
  421b2d:	pop    es
  421b2e:	mov    dh,bl
  421b30:	sub    al,0x77
  421b32:	jmp    0x421ac2
  421b34:	pop    edx
  421b35:	push   0x687cafb9
  421b3a:	cmp    BYTE PTR [esi],bl
  421b3c:	sbb    al,0xc
  421b3e:	add    BYTE PTR [esi+esi*8-0x557accf2],bl
  421b45:	inc    ebp
  421b46:	sbb    BYTE PTR [esi-0xbe3d667],0xb7
  421b4d:	mov    dl,0x19
  421b4f:	and    eax,0xad96a7c9
  421b54:	sti    
  421b55:	test   al,0x19
  421b57:	in     eax,dx
  421b58:	or     al,0x4c
  421b5a:	sbb    eax,0xb7b39024
  421b5f:	sbb    BYTE PTR [ebp+0xebf84a0],cl
  421b65:	lods   al,BYTE PTR ds:[esi]
  421b66:	push   esi
  421b67:	ins    DWORD PTR es:[edi],dx
  421b68:	rol    BYTE PTR [esi],1
  421b6a:	mov    edi,0x49c9287c
  421b6f:	out    dx,al
  421b70:	mov    ecx,0xbe5a9524
  421b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b76:	out    0x7c,al
  421b78:	les    ecx,FWORD PTR [edx-0x30f6ae52]
  421b7e:	mov    bh,0x1
  421b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b81:	mov    ds:0x24b04fb0,eax
  421b86:	jmp    0xc626:0x6806499f
  421b8d:	dec    ecx
  421b8e:	mov    al,0x31
  421b90:	jbe    0x421b2b
  421b92:	aad    0xbb
  421b94:	not    DWORD PTR [edx-0x13]
  421b97:	hlt    
  421b98:	mov    dl,0xbc
  421b9a:	das    
  421b9b:	in     al,0xfc
  421b9d:	out    dx,eax
  421b9e:	pop    esi
  421b9f:	jae    0x421b61
  421ba1:	xchg   ebx,eax
  421ba2:	js     0x421b58
  421ba4:	jno    0x421b9b
  421ba6:	push   esp
  421ba7:	xchg   edx,eax
  421ba8:	test   BYTE PTR [eax],bh
  421baa:	test   eax,0xa0da5c
  421baf:	push   ds
  421bb0:	or     bh,BYTE PTR [ebx+0x78984f3e]
  421bb6:	test   DWORD PTR [edx-0x2b],esp
  421bb9:	aam    0x7c
  421bbb:	lock mov ch,dh
  421bbe:	push   cs
  421bbf:	or     eax,0xde499f2
  421bc4:	test   al,0x9d
  421bc6:	or     BYTE PTR [ebx+0x47b8233a],bl
  421bcc:	dec    edx
  421bce:	jbe    0x421b86
  421bd0:	das    
  421bd1:	dec    edx
  421bd2:	adc    edx,DWORD PTR [ecx+0x1fd89e69]
  421bd8:	mov    al,ds:0xcd2d6892
  421bdd:	syscall 
  421bdf:	fiadd  DWORD PTR [ebx-0x72]
  421be2:	pusha  
  421be3:	mov    al,0x5
  421be5:	jmp    0x421c40
  421be7:	mov    esi,0x533b55d8
  421bec:	sub    bl,0xb4
  421bef:	sub    DWORD PTR [esi-0x67],esi
  421bf2:	push   cs
  421bf3:	sub    BYTE PTR [edx-0x29b58c51],ch
  421bf9:	mov    WORD PTR [edx],cs
  421bfb:	xor    bh,BYTE PTR [ecx]
  421bfd:	rcr    cl,0x8c
  421c00:	cmp    ch,BYTE PTR [edi]
  421c02:	jecxz  0x421bfc
  421c04:	adc    esi,ecx
  421c06:	pop    ebp
  421c07:	adc    eax,0x3abdad4e
  421c0c:	or     ebx,edx
  421c0e:	test   ah,bh
  421c10:	sub    dl,ah
  421c12:	sub    DWORD PTR [ecx-0x381d473f],ebx
  421c18:	sbb    BYTE PTR [ebp+0x43],ch
  421c1b:	mov    dl,0xe2
  421c1d:	sbb    DWORD PTR [esi+0x10],edi
  421c20:	mov    bl,0x83
  421c22:	and    eax,0xb0bc90b2
  421c27:	out    dx,eax
  421c28:	cld    
  421c29:	leave  
  421c2a:	jmp    0x421bfb
  421c2c:	stos   BYTE PTR es:[edi],al
  421c2d:	sbb    DWORD PTR [ebp+esi*4+0x59],edx
  421c31:	into   
  421c32:	mov    eax,0x85a70fa5
  421c37:	or     ebx,ecx
  421c39:	mov    eax,0x65bfa9aa
  421c3e:	mov    ebx,esi
  421c40:	sbb    ecx,edx
  421c42:	xor    esp,DWORD PTR ds:0xcd64c79d
  421c48:	mov    ds:0x1b9f9cd5,al
  421c4d:	iret   
  421c4e:	sbb    al,BYTE PTR [ecx]
  421c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c51:	ins    DWORD PTR es:[edi],dx
  421c52:	(bad)  
  421c53:	cmp    al,0x38
  421c55:	aam    0x45
  421c57:	shr    BYTE PTR [esi+esi*2-0x293289f0],1
  421c5e:	sub    al,0x12
  421c60:	mov    ds:0xb89c0020,al
  421c65:	pop    edx
  421c66:	ret    0xf508
  421c69:	mov    ds:0x2dde0772,al
  421c6e:	inc    esi
  421c6f:	jg     0x421ced
  421c71:	iret   
  421c72:	mov    ds:0x3b59c2d,al
  421c77:	mov    bh,0xe2
  421c79:	cwde   
  421c7a:	mov    bh,0xe7
  421c7c:	int3   
  421c7d:	stos   BYTE PTR es:[edi],al
  421c7e:	dec    eax
  421c7f:	fidivr WORD PTR [ebp+0x57d6e1e4]
  421c85:	in     al,0xb0
  421c87:	shl    DWORD PTR [edx+ebp*8-0x51ccef86],0x1c
  421c8f:	sub    dh,BYTE PTR [eax]
  421c91:	mov    BYTE PTR [ebx+0x7d9a7c1d],al
  421c97:	clc    
  421c98:	in     eax,0x2a
  421c9a:	jmp    0xc679f574
  421c9f:	inc    esp
  421ca0:	add    al,0x5d
  421ca2:	out    0xbb,eax
  421ca4:	xor    al,0xc5
  421ca6:	and    DWORD PTR [edi+0x7135af5b],ecx
  421cac:	push   es
  421cad:	popa   
  421cae:	mov    ebp,0x8995526b
  421cb3:	jmp    0x7af3c8e7
  421cb8:	enter  0xcc57,0x1d
  421cbc:	rcl    BYTE PTR [esi],0x2f
  421cbf:	mov    DWORD PTR [edx+0x4ae325e5],ecx
  421cc5:	dec    esp
  421cc6:	pop    edi
  421cc7:	dec    esp
  421cc8:	ins    BYTE PTR es:[edi],dx
  421cc9:	sar    BYTE PTR [eax],0x56
  421ccc:	sub    eax,0xbc3f7611
  421cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cd2:	pop    edi
  421cd3:	and    al,0x49
  421cd5:	mov    ds:0x1c245756,eax
  421cda:	js     0x421ccf
  421cdc:	in     eax,dx
  421cdd:	out    dx,eax
  421cde:	mov    WORD PTR [esi],fs
  421ce0:	retf   
  421ce1:	test   eax,0x2d524e08
  421ce6:	inc    ebp
  421ce7:	dec    ecx
  421ce8:	int3   
  421ce9:	xchg   ecx,eax
  421cea:	xchg   edx,eax
  421ceb:	dec    edi
  421cec:	mov    esi,DWORD PTR [edi-0x8b1dd24]
  421cf2:	mov    al,ds:0x5052909b
  421cf7:	int    0xec
  421cf9:	dec    ebx
  421cfa:	fld    DWORD PTR [eax]
  421cfc:	lea    eax,[edx+0x95d59b9]
  421d02:	mov    edx,0xe0a0a49e
  421d07:	push   ebp
  421d08:	adc    BYTE PTR [esi-0x56],al
  421d0b:	loopne 0x421d56
  421d0d:	jp     0x421cc2
  421d0f:	pop    eax
  421d10:	js     0x421d81
  421d12:	jb     0x421cc9
  421d14:	fisttp QWORD PTR [ecx+0x44]
  421d17:	es adc al,0x3a
  421d1a:	mov    bl,0x4e
  421d1c:	fs xchg ecx,ebx
  421d1f:	dec    ecx
  421d20:	out    0x79,al
  421d22:	mov    ch,0x42
  421d24:	jg     0x421d8f
  421d26:	adc    DWORD PTR [ebx-0x4080c68],0xffffffb7
  421d2d:	(bad)  
  421d2e:	fldenv [esi-0x54474117]
  421d34:	(bad)  
  421d35:	fcom   st(2)
  421d37:	xchg   esp,eax
  421d38:	mov    al,0xc5
  421d3a:	stos   DWORD PTR es:[edi],eax
  421d3b:	fist   WORD PTR [ecx+ebx*2+0x7fdc6eb]
  421d42:	fidivr DWORD PTR [esi]
  421d44:	push   cs
  421d45:	jo     0x421d15
  421d47:	retf   
  421d48:	sub    DWORD PTR [ebx-0xcc52e71],edx
  421d4e:	or     BYTE PTR [ebp+0x5ef590ce],al
  421d54:	jg     0x421d74
  421d56:	xchg   esi,eax
  421d57:	cmp    eax,0x1c1e0e84
  421d5c:	sub    edi,DWORD PTR [ebx-0x2026712c]
  421d62:	nop
  421d63:	jbe    0x421d49
  421d65:	dec    ecx
  421d66:	data16 adc BYTE PTR [edi+0x3de7721],al
  421d6d:	test   al,0x1f
  421d6f:	xor    al,al
  421d71:	pop    ds
  421d72:	push   edx
  421d73:	lahf   
  421d74:	jmp    0x1bab:0x631723fb
  421d7b:	mov    ah,0x90
  421d7d:	xor    bl,BYTE PTR [ecx+0x4bb8e17f]
  421d83:	data16 outs dx,BYTE PTR ds:[esi]
  421d85:	mov    ebx,0x244a1ef8
  421d8a:	sbb    ah,BYTE PTR [esi+0x225c9b10]
  421d90:	pushf  
  421d91:	cmp    eax,0x888553ca
  421d96:	lods   al,BYTE PTR ds:[esi]
  421d97:	loope  0x421d88
  421d99:	pop    ecx
  421d9a:	fild   WORD PTR [esi+0x7f]
  421d9d:	push   ds
  421d9e:	or     al,0x40
  421da0:	jmp    0xc363f3b2
  421da5:	(bad)  [edx+0x35ff70bb]
  421dab:	mov    cl,0xac
  421dad:	jno    0x421d90
  421daf:	cmp    eax,0x65be8704
  421db4:	out    0xf6,eax
  421db6:	mov    WORD PTR [esi],?
  421db8:	adc    BYTE PTR [eax-0x19],bl
  421dbb:	ja     0x421e0a
  421dbd:	inc    edi
  421dbe:	lahf   
  421dbf:	push   ds
  421dc0:	test   al,0x94
  421dc2:	push   es
  421dc3:	pushf  
  421dc4:	xchg   edi,eax
  421dc5:	mov    ebx,0xb56c4127
  421dca:	push   cs
  421dcb:	mov    DWORD PTR [edx-0x24d9983f],ecx
  421dd1:	mov    edx,0x61488ddc
  421dd6:	repnz out dx,al
  421dd8:	clc    
  421dd9:	jge    0x421e56
  421ddb:	mov    ebp,0x18cd97b6
  421de0:	adc    edi,DWORD PTR [ebp-0x70]
  421de3:	adc    dh,BYTE PTR [edx-0x767268ae]
  421de9:	lahf   
  421dea:	pusha  
  421deb:	cli    
  421dec:	add    dl,BYTE PTR [edx+0x6a]
  421def:	dec    BYTE PTR [eax]
  421df1:	add    al,0x15
  421df3:	inc    edi
  421df4:	cwde   
  421df5:	adc    ah,bl
  421df7:	mov    eax,0xa7e3deac
  421dfc:	push   ebx
  421dfd:	enter  0xb593,0xdd
  421e01:	int    0x77
  421e03:	mov    esi,0x94731b38
  421e08:	int3   
  421e09:	cmp    dl,BYTE PTR [ecx]
  421e0b:	dec    esi
  421e0c:	aam    0x87
  421e0e:	sti    
  421e0f:	ins    DWORD PTR es:[edi],dx
  421e10:	mov    bl,0x4b
  421e12:	ins    BYTE PTR es:[edi],dx
  421e13:	test   BYTE PTR [ebx-0x25],dh
  421e16:	or     al,ch
  421e18:	xchg   esp,eax
  421e1a:	xchg   esp,eax
  421e1b:	(bad)  
  421e1c:	push   eax
  421e1d:	push   ebp
  421e1e:	ret    
  421e1f:	mov    ch,0xf1
  421e21:	add    al,0x78
  421e23:	add    al,0x37
  421e25:	mov    ecx,0x22c772f2
  421e2a:	cdq    
  421e2b:	and    esp,DWORD PTR ds:0x49a5cff0
  421e31:	iret   
  421e32:	push   0xd109aff2
  421e37:	jg     0x421ea9
  421e39:	mov    BYTE PTR [esi],ch
  421e3b:	icebp  
  421e3c:	xchg   ebp,eax
  421e3d:	not    DWORD PTR [ecx+0x4d4595a0]
  421e43:	sub    al,0xc
  421e45:	xchg   esp,eax
  421e46:	int3   
  421e47:	dec    esi
  421e48:	daa    
  421e49:	not    DWORD PTR [edx+0x4031d292]
  421e4f:	xchg   ecx,eax
  421e50:	pushf  
  421e51:	cwde   
  421e52:	enter  0x180,0x2e
  421e56:	int3   
  421e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e58:	cmp    ebx,DWORD PTR [eax+0x794d9c54]
  421e5e:	(bad)  
  421e5f:	fidiv  DWORD PTR ds:0xb0c336f1
  421e65:	out    dx,al
  421e66:	and    eax,DWORD PTR [edx-0x6]
  421e69:	and    dl,0x27
  421e6c:	test   al,0xe7
  421e6e:	or     al,0x3d
  421e70:	fcmovbe st,st(4)
  421e72:	inc    ebx
  421e73:	into   
  421e74:	mov    BYTE PTR [edi+0x6e30a0ef],bl
  421e7a:	icebp  
  421e7b:	and    dh,al
  421e7d:	mov    esp,0x57a08f0b
  421e82:	fsubr  st(1),st
  421e84:	repz scas eax,DWORD PTR es:[edi]
  421e86:	pop    edx
  421e87:	mov    bl,0x54
  421e89:	jmp    0x83d6:0x22f6f02
  421e90:	push   ebx
  421e91:	adc    BYTE PTR [ebx-0x34],bh
  421e94:	cmp    al,0x82
  421e96:	in     al,0xb0
  421e98:	jb     0x421e76
  421e9a:	jb     0x421ecb
  421e9c:	mov    bh,0x93
  421e9e:	hlt    
  421e9f:	mov    bh,0x9f
  421ea1:	repnz or ch,BYTE PTR [edi+0x6fe3b791]
  421ea8:	xor    edi,edi
  421eaa:	sub    dl,al
  421eac:	and    DWORD PTR [esi],esi
  421eae:	shr    BYTE PTR [eax+0x41],0x9a
  421eb2:	ins    DWORD PTR es:[edi],dx
  421eb3:	cli    
  421eb4:	addr16 iret 
  421eb6:	bound  ebx,QWORD PTR [ecx]
  421eb8:	jne    0x421e65
  421eba:	cmp    esp,esi
  421ebc:	jecxz  0x421ead
  421ebe:	xchg   DWORD PTR [eax+0x78],ebp
  421ec1:	xchg   ecx,eax
  421ec2:	push   ebx
  421ec3:	cmp    dh,BYTE PTR [eax+0x1e98e142]
  421ec9:	xor    BYTE PTR [edi],bl
  421ecb:	inc    esp
  421ecc:	sbb    BYTE PTR [ebp+0x4f],bh
  421ecf:	ret    
  421ed0:	pusha  
  421ed1:	sbb    ch,BYTE PTR [edi-0x60f120f1]
  421ed7:	js     0x421e81
  421ed9:	call   0x8fffe58d
  421ede:	inc    ebx
  421edf:	sahf   
  421ee0:	stos   DWORD PTR es:[edi],eax
  421ee1:	pushf  
  421ee2:	push   ds
  421ee3:	cs inc edi
  421ee5:	lods   al,BYTE PTR ds:[esi]
  421ee6:	sbb    BYTE PTR [ebp+0x23f33a5a],cl
  421eec:	outs   dx,BYTE PTR ds:[esi]
  421eed:	sbb    eax,0x19e9348b
  421ef2:	div    bh
  421ef4:	dec    edi
  421ef5:	mul    DWORD PTR [ebx+eax*4-0x7a0f69b8]
  421efc:	jae    0x421e97
  421efe:	mov    DWORD PTR [eax],eax
  421f00:	bound  esp,QWORD PTR [esp+edi*2]
  421f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f04:	xor    BYTE PTR [ebp-0x56],0xf7
  421f08:	ja     0x421f10
  421f0a:	mov    ah,0xa8
  421f0c:	sti    
  421f0d:	mov    esp,0x3d8ed3dd
  421f12:	mov    al,al
  421f14:	sub    al,0xa0
  421f16:	sbb    bl,bl
  421f18:	pusha  
  421f19:	pop    eax
  421f1a:	pop    edx
  421f1b:	xchg   DWORD PTR [edi],eax
  421f1d:	shl    edi,1
  421f1f:	xor    bl,ch
  421f21:	iret   
  421f22:	(bad)  
  421f23:	cmp    eax,0xb962b803
  421f28:	inc    edx
  421f29:	inc    ecx
  421f2a:	in     al,0x5c
  421f2c:	adc    BYTE PTR [edx-0x3e],dl
  421f2f:	dec    ecx
  421f30:	dec    esi
  421f31:	adc    ah,bh
  421f33:	push   cs
  421f34:	sar    BYTE PTR [edi-0xce59063],0xc2
  421f3b:	sbb    al,0xab
  421f3d:	fld    DWORD PTR [edx+ecx*4-0x6f161f52]
  421f44:	mov    dh,0x17
  421f46:	add    al,BYTE PTR [edi]
  421f48:	cld    
  421f49:	or     al,0xa9
  421f4b:	test   BYTE PTR [edx-0x1e6877f5],ch
  421f51:	scas   al,BYTE PTR es:[edi]
  421f52:	repz mov ah,0xe8
  421f55:	push   esi
  421f56:	js     0x421f3a
  421f58:	push   edi
  421f59:	mov    BYTE PTR [eax],ah
  421f5b:	push   esp
  421f5c:	(bad)  
  421f5d:	retf   
  421f5e:	ret    0x1de1
  421f61:	cld    
  421f62:	sbb    bh,bl
  421f64:	nop
  421f65:	sub    eax,0x4f9a265d
  421f6a:	xor    esi,esp
  421f6c:	test   eax,0x9e331c16
  421f71:	ds cmp eax,0x46be15bd
  421f77:	or     ebp,DWORD PTR [edx-0x33]
  421f7a:	pop    ebx
  421f7b:	je     0x421f26
  421f7d:	pop    ebx
  421f7e:	inc    ebx
  421f7f:	mov    bh,0x4f
  421f81:	push   cs
  421f82:	jmp    DWORD PTR [esi]
  421f84:	enter  0xac69,0xde
  421f88:	fisttp DWORD PTR [ecx-0x59]
  421f8b:	mov    ah,0x18
  421f8d:	or     dl,al
  421f8f:	jmp    0x153b38af
  421f94:	setbe  BYTE PTR [esi]
  421f97:	test   DWORD PTR [esp+eax*8-0x4acca103],eax
  421f9e:	jp     0x421f4c
  421fa0:	mov    dl,0xcc
  421fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fa3:	mov    edi,0xeac111c2
  421fa8:	mov    edi,0x3d6740c0
  421fad:	inc    ebx
  421fae:	test   BYTE PTR [edi-0x12],0x8e
  421fb2:	mov    esi,0x650ecc2a
  421fb7:	sti    
  421fb8:	jecxz  0x421fb4
  421fba:	in     al,dx
  421fbb:	lods   eax,DWORD PTR ds:[esi]
  421fbc:	dec    ecx
  421fbd:	mov    ds:0x21df0377,eax
  421fc2:	sub    DWORD PTR [edi],esi
  421fc4:	repnz test eax,0xe42a1e91
  421fca:	clc    
  421fcb:	cs ja  0x421f59
  421fce:	(bad)
  421fd1:	push   ecx
  421fd2:	jb     0x421fb0
  421fd4:	jmp    0xd3f7a504
  421fd9:	out    dx,eax
  421fda:	pop    es
  421fdb:	mov    ch,0xf9
  421fdd:	mov    bl,0xe8
  421fdf:	and    ebx,DWORD PTR [edx-0x13c78926]
  421fe5:	or     dl,al
  421fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe8:	pop    esi
  421fe9:	mov    fs,WORD PTR gs:[edx]
  421fec:	xor    esi,DWORD PTR [ebp+0x517213ac]
  421ff2:	gs xchg ebp,eax
  421ff4:	fisubr WORD PTR [edi+edx*2-0x76]
  421ff8:	adc    DWORD PTR [edi+0x55],edx
  421ffb:	jbe    0x421f8d
  421ffd:	pop    esp
  421ffe:	adc    al,0x57
  422000:	cmp    ah,BYTE PTR ds:0xe518
  422005:	mov    dh,0x14
  422007:	cdq    
  422008:	stc    
  422009:	into   
  42200a:	dec    esi
  42200b:	dec    edi
  42200c:	jge    0x42200e
  42200e:	sbb    al,0xa0
  422010:	int    0x8a
  422012:	pop    ebx
  422013:	(bad)  
  422015:	adc    eax,0x1e67cbf3
  42201a:	jmp    edx
  42201c:	test   eax,ebx
  42201e:	pop    esp
  42201f:	imul   eax,edx,0xffffffee
  422022:	pop    esi
  422023:	or     DWORD PTR [esp+edi*2+0x55],eax
  422027:	cmp    al,0xc7
  422029:	and    al,BYTE PTR [ebx]
  42202b:	and    dl,BYTE PTR [eax-0x5d39e98a]
  422031:	fs pop ss
  422033:	mov    dl,0x8f
  422035:	jmp    0x1b7138b
  42203a:	push   0xffffff86
  42203c:	dec    esi
  42203d:	lahf   
  42203e:	fstp   TBYTE PTR [ebx+eiz*1]
  422041:	sbb    BYTE PTR [ebp-0x7a],bh
  422044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422045:	in     al,dx
  422046:	aaa    
  422047:	or     BYTE PTR [ecx],ah
  422049:	inc    eax
  42204a:	rcr    BYTE PTR [ecx+0x3a],1
  42204d:	dec    esi
  42204e:	xchg   ebp,eax
  42204f:	and    BYTE PTR [ebx-0x7],dh
  422052:	cdq    
  422053:	lods   al,BYTE PTR ds:[esi]
  422054:	ror    DWORD PTR [eax+0x2c],cl
  422057:	cmp    ah,BYTE PTR [eax]
  422059:	jg     0x422053
  42205b:	jo     0x4220b9
  42205d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205e:	mov    ebp,0x3fa1fcdb
  422063:	mov    esp,0x6f51b53d
  422068:	mov    ss,WORD PTR [esi-0x7c]
  42206b:	jne    0x422016
  42206d:	jns    0x422085
  42206f:	das    
  422070:	loope  0x422047
  422072:	fnstcw WORD PTR [edx]
  422074:	mov    dl,0xab
  422076:	add    ah,BYTE PTR [esi]
  422078:	pop    ss
  422079:	adc    BYTE PTR [ebp+0x64816d84],ah
  42207f:	or     BYTE PTR [ebx-0x2e],ah
  422082:	jle    0x422069
  422084:	rcr    DWORD PTR [ebx-0x31],1
  422087:	pop    ss
  422088:	dec    edi
  422089:	dec    ebp
  42208a:	pop    esi
  42208b:	in     eax,0x1b
  42208d:	shl    ebp,0xf0
  422090:	out    0x23,eax
  422092:	push   ds
  422093:	sub    DWORD PTR [edx-0x59],esi
  422096:	enter  0xc61b,0x9a
  42209a:	in     eax,dx
  42209b:	(bad)  
  42209d:	call   0x9ec1:0x385ecf1f
  4220a4:	loop   0x4220cc
  4220a6:	test   BYTE PTR [edx],0xa6
  4220a9:	push   ds
  4220aa:	shl    DWORD PTR [ecx-0xcd969ff],1
  4220b0:	pop    edx
  4220b1:	cli    
  4220b2:	stos   BYTE PTR es:[edi],al
  4220b3:	stc    
  4220b4:	std    
  4220b5:	push   esi
  4220b6:	stos   BYTE PTR es:[edi],al
  4220b7:	ja     0x4220a3
  4220b9:	and    eax,0x79131a08
  4220be:	out    0x90,eax
  4220c0:	mov    ecx,0x6713a058
  4220c5:	ins    BYTE PTR es:[edi],dx
  4220c6:	xbegin 0xe2407ff7
  4220cc:	pop    ebx
  4220cd:	jp     0x42207e
  4220cf:	loope  0x422086
  4220d1:	stc    
  4220d2:	push   cs
  4220d3:	and    al,0xeb
  4220d5:	adc    al,dl
  4220d7:	test   ah,ah
  4220d9:	mov    cl,0x1d
  4220db:	mov    ch,0xee
  4220dd:	out    dx,al
  4220de:	cmp    BYTE PTR [ecx+0x33],al
  4220e1:	pop    eax
  4220e2:	mov    edi,esp
  4220e4:	(bad)  
  4220e5:	shl    DWORD PTR [ecx+ebx*4],cl
  4220e8:	(bad)  
  4220e9:	cli    
  4220ea:	sbb    edi,DWORD PTR [ebp+edx*4-0x13]
  4220ee:	sub    eax,0x4e1d6d3c
  4220f3:	pusha  
  4220f4:	cmp    BYTE PTR fs:[ebp+0x10],bh
  4220f8:	rcr    BYTE PTR [eax],cl
  4220fa:	div    BYTE PTR [edx-0x53]
  4220fd:	data16 je 0x422097
  422100:	jae    0x422093
  422102:	fbstp  TBYTE PTR [ebx]
  422104:	out    dx,eax
  422105:	mov    eax,0xc0afb639
  42210a:	cdq    
  42210b:	push   edi
  42210c:	in     al,dx
  42210d:	scas   eax,DWORD PTR es:[edi]
  42210e:	jo     0x42215f
  422110:	or     eax,0x2038d438
  422115:	push   cs
  422116:	xor    al,0x84
  422118:	mov    dl,BYTE PTR [ecx]
  42211a:	xor    eax,0x9ac0eaf9
  42211f:	mov    dh,0xd7
  422121:	loopne 0x422180
  422123:	mov    ch,0x5e
  422125:	popa   
  422126:	ret    0x33a1
  422129:	mov    DWORD PTR [esi+0xb],edi
  42212c:	test   eax,0xd1a38f52
  422131:	lock mov ebx,0xb7a35cf8
  422137:	ss ja  0x4221a4
  42213a:	jnp    0x422152
  42213c:	mov    edx,0x56a35dab
  422141:	pop    edx
  422142:	adc    DWORD PTR [eax+0x51],ebx
  422145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422146:	lds    eax,FWORD PTR [esp+edi*4-0x21]
  42214a:	add    DWORD PTR [esi],esi
  42214c:	pop    ds
  42214d:	cmp    esi,esi
  42214f:	cmp    DWORD PTR [edi+0x6d],0x78e58042
  422156:	jge    0x422121
  422158:	pcmpeqb mm1,QWORD PTR [ebx-0x444b2cd7]
  42215f:	dec    edi
  422160:	(bad)
  422163:	retf   0x4dca
  422166:	(bad)  [eax]
  422168:	dec    ebx
  422169:	cmp    dh,BYTE PTR [eax-0x6459ac1d]
  42216f:	loopne 0x422131
  422171:	xchg   DWORD PTR [ecx],esp
  422173:	jne    0x42218f
  422175:	loope  0x4221a5
  422177:	mov    edi,0xffb955a3
  42217c:	ror    BYTE PTR [ebx],cl
  42217e:	inc    eax
  42217f:	jbe    0x4221a8
  422181:	push   ebp
  422182:	adc    BYTE PTR [edx-0x3e],ch
  422185:	jmp    0x808760bb
  42218a:	rol    DWORD PTR [edi+0x0],0x35
  42218e:	mov    ebp,0x6597db56
  422193:	mov    eax,ds:0x8099e7a6
  422198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422199:	sbb    DWORD PTR [edi+eiz*1-0x9],eax
  42219d:	lock sbb ch,BYTE PTR [edx-0x2f]
  4221a1:	rcl    BYTE PTR [edi],cl
  4221a3:	mov    esi,0xd64a397b
  4221a8:	jbe    0x422192
  4221aa:	pop    ecx
  4221ab:	popa   
  4221ac:	(bad)  
  4221ae:	adc    BYTE PTR [edi+0x53c9d03a],al
  4221b4:	lods   al,BYTE PTR ds:[esi]
  4221b5:	add    eax,0x2b169bc7
  4221ba:	aad    0x3a
  4221bc:	inc    esp
  4221bd:	xor    al,0xf4
  4221bf:	push   ds
  4221c0:	sub    cl,bl
  4221c2:	clc    
  4221c3:	xchg   dl,ah
  4221c5:	dec    eax
  4221c6:	mov    al,ds:0x980fc766
  4221cb:	(bad)  
  4221cc:	push   eax
  4221cd:	mov    edi,eax
  4221cf:	push   ds
  4221d0:	and    ecx,ebp
  4221d2:	push   edx
  4221d4:	mov    esi,0x5c69da48
  4221d9:	push   cs
  4221da:	pop    ebp
  4221db:	inc    ecx
  4221dc:	adc    ch,ah
  4221de:	mov    ecx,DWORD PTR [edx+0x62]
  4221e1:	inc    ebx
  4221e2:	inc    edi
  4221e3:	pop    ebx
  4221e4:	test   BYTE PTR [edi+eax*2],ch
  4221e7:	inc    edi
  4221e8:	adc    DWORD PTR [edi],ecx
  4221ea:	(bad)  
  4221ec:	xchg   dl,al
  4221ee:	sub    DWORD PTR ds:0x1386cb9f,edi
  4221f4:	rcl    DWORD PTR [esi-0x74f3bbd],1
  4221fa:	jge    0x4221e7
  4221fc:	jl     0x422231
  4221fe:	inc    esp
  4221ff:	int    0x7c
  422201:	push   esp
  422202:	mov    eax,ss
  422204:	adc    DWORD PTR [ebx-0x3d],edi
  422207:	push   cs
  422208:	div    dl
  42220a:	cmp    DWORD PTR [ebp+eax*2-0x3f],eax
  42220e:	pop    ds
  42220f:	push   esi
  422210:	lods   eax,DWORD PTR ds:[esi]
  422211:	loope  0x42222e
  422213:	ret    0x60f5
  422216:	loope  0x422282
  422218:	sub    ecx,DWORD PTR [esi-0x47]
  42221b:	mov    ah,0xba
  42221d:	sbb    al,0x79
  42221f:	das    
  422220:	push   cs
  422221:	into   
  422222:	ins    BYTE PTR es:[edi],dx
  422223:	inc    edi
  422224:	int    0xf2
  422226:	or     eax,0xc92d2feb
  42222b:	pop    eax
  42222c:	rcl    dh,cl
  42222e:	in     eax,0xd5
  422230:	cmp    BYTE PTR [edx],0x8a
  422233:	jae    0x422283
  422235:	pop    esi
  422236:	into   
  422237:	mov    esi,0x4c5df2ab
  42223c:	out    0x88,eax
  42223e:	and    DWORD PTR [esi],ecx
  422240:	pop    edx
  422241:	cwde   
  422242:	adc    eax,0xc6f00b8d
  422247:	cs je  0x4221f0
  42224a:	(bad)  
  42224b:	iret   
  42224c:	outs   dx,BYTE PTR ds:[esi]
  42224d:	imul   ebx,esi,0xffffff90
  422250:	cs out 0xcf,eax
  422253:	iret   
  422254:	dec    edi
  422255:	test   edi,ebx
  422257:	add    al,0xcd
  422259:	xor    al,0xd3
  42225b:	sbb    al,0xdf
  42225d:	pop    esi
  42225e:	cmp    DWORD PTR [ebp-0x75],esi
  422261:	jecxz  0x42229b
  422263:	jle    0x4222b4
  422265:	int3   
  422266:	loope  0x4221ee
  422268:	mov    edi,0x2c5498ed
  42226d:	mov    DWORD PTR [ebp+0x10],ecx
  422270:	pusha  
  422271:	test   DWORD PTR [ecx+ebx*8],0x6240c8df
  422278:	ins    BYTE PTR es:[edi],dx
  422279:	mov    al,0xd0
  42227b:	sub    BYTE PTR [esi+0x5d],al
  42227e:	sahf   
  42227f:	aam    0x7c
  422281:	test   al,0x10
  422283:	int    0x1f
  422285:	mov    WORD PTR [ecx-0x7e],?
  422288:	rol    BYTE PTR [edx+0x3e70aa4d],0x9
  42228f:	and    eax,0xd49f7277
  422294:	xor    al,0x8e
  422296:	inc    eax
  422297:	es out dx,al
  422299:	das    
  42229a:	lahf   
  42229b:	mov    eax,ecx
  42229d:	adc    edx,edi
  42229f:	xchg   DWORD PTR [esp+edx*1+0x4e],edi
  4222a3:	inc    edx
  4222a4:	ss pop ss
  4222a6:	pop    ds
  4222a7:	jp     0x4222f7
  4222a9:	popf   
  4222aa:	sub    al,0x77
  4222ac:	scas   eax,DWORD PTR es:[edi]
  4222ad:	test   eax,0x3bed18d0
  4222b2:	ret    
  4222b3:	xchg   edi,eax
  4222b4:	push   ss
  4222b5:	adc    eax,0x8f6b537f
  4222ba:	ret    
  4222bb:	fwait
  4222bc:	jge    0x422282
  4222be:	cli    
  4222bf:	loope  0x422307
  4222c1:	test   eax,0x5021ad3a
  4222c6:	mov    cl,0xdd
  4222c8:	adc    ebp,DWORD PTR [ecx-0x520aa533]
  4222ce:	bound  edi,QWORD PTR [ecx]
  4222d0:	repz dec eax
  4222d2:	and    al,0x24
  4222d4:	xchg   ecx,eax
  4222d5:	mov    esi,0x80feedf8
  4222da:	mov    eax,ds:0x19d7cda2
  4222df:	and    esi,edi
  4222e1:	(bad)  
  4222e2:	data16 mov bh,0x77
  4222e5:	aaa    
  4222e6:	(bad)  
  4222e7:	lods   eax,DWORD PTR ds:[esi]
  4222e8:	sub    ch,BYTE PTR [eax-0x7]
  4222eb:	cmc    
  4222ec:	push   edx
  4222ed:	rcl    BYTE PTR [ecx+0x27],0xf8
  4222f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f2:	adc    esp,eax
  4222f4:	call   0x7740dad5
  4222f9:	xchg   ebp,eax
  4222fa:	inc    eax
  4222fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222fc:	(bad)  
  4222fd:	in     al,0x20
  4222ff:	jae    0x422358
  422301:	or     ebp,DWORD PTR [edx+edx*1+0x4a]
  422305:	sub    ebp,ebp
  422307:	popa   
  422308:	arpl   WORD PTR [ecx+edx*8+0x71],bx
  42230c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42230e:	out    0xb9,eax
  422310:	jle    0x4222a5
  422312:	add    BYTE PTR [ebp+0xa],dh
  422315:	ret    
  422316:	dec    esi
  422317:	adc    BYTE PTR [edi-0x3f],bh
  42231a:	fstp   TBYTE PTR [esi]
  42231c:	or     al,0xd7
  42231e:	push   edx
  42231f:	lahf   
  422320:	int3   
  422321:	mov    ds:0x195fecd8,eax
  422326:	repnz sbb eax,0xe5561ac8
  42232c:	lock add bl,bl
  42232f:	sbb    al,0x67
  422331:	mov    al,ds:0x94abdca7
  422336:	call   0x7167:0x2c89ef4
  42233d:	jae    0x422358
  42233f:	xor    eax,0xe5bc675
  422344:	xor    eax,ebx
  422346:	aas    
  422347:	test   BYTE PTR [esi+0x4fd8c13c],0x4a
  42234e:	loopne 0x4223b1
  422350:	call   0x8adb5529
  422355:	addr16 pop ebx
  422357:	fwait
  422358:	lock scas eax,DWORD PTR es:[edi]
  42235a:	test   BYTE PTR [edi],al
  42235c:	test   DWORD PTR [ecx+0xb06d64b],esi
  422362:	(bad)  
  422363:	ja     0x422355
  422365:	(bad)  
  422366:	and    al,dh
  422368:	pushf  
  422369:	inc    edx
  42236a:	adc    esp,DWORD PTR [eax]
  42236c:	bound  ebx,QWORD PTR [esi+esi*8]
  42236f:	(bad)
  422372:	es stos BYTE PTR es:[edi],al
  422374:	ss or  eax,0x8a547227
  42237a:	(bad)  
  42237b:	call   0x99376ae9
  422380:	test   DWORD PTR [ecx+0x4c],esp
  422383:	sub    BYTE PTR [esi-0x3b],cl
  422386:	mov    bh,0xf6
  422388:	imul   ebx,DWORD PTR [eax],0x38
  42238b:	xor    eax,0xc4b12701
  422390:	outs   dx,BYTE PTR ds:[esi]
  422391:	cli    
  422392:	adc    BYTE PTR [eax],0xe0
  422395:	imul   esi,edx,0xffffffd4
  422398:	or     bl,BYTE PTR [ebp-0x39]
  42239b:	or     DWORD PTR [ebp+edi*4+0x9],ebx
  42239f:	jl     0x422348
  4223a1:	xchg   esp,eax
  4223a2:	loopne 0x422397
  4223a4:	xor    DWORD PTR [eax],0xb
  4223a7:	mov    WORD PTR [edi+0x37],?
  4223aa:	enter  0xfec,0xde
  4223ae:	aad    0xce
  4223b0:	popa   
  4223b1:	or     esi,DWORD PTR es:[edi-0x3151b26e]
  4223b8:	jle    0x4223c5
  4223ba:	test   eax,0x4f561f05
  4223bf:	sbb    DWORD PTR [edx],edi
  4223c1:	sti    
  4223c2:	and    ebx,DWORD PTR [edx+0x799c63db]
  4223c8:	fucomi st,st(3)
  4223ca:	xchg   DWORD PTR [ebp+0x530dafec],esi
  4223d0:	push   edx
  4223d1:	mov    ebx,esp
  4223d3:	pop    ebp
  4223d4:	lock inc edi
  4223d6:	jne    0x422424
  4223d8:	xor    bl,BYTE PTR [edx+0x29a1c687]
  4223de:	push   edi
  4223df:	sbb    dl,dl
  4223e1:	gs xchg esp,eax
  4223e3:	pop    ebp
  4223e4:	mov    dh,0x84
  4223e6:	push   cs
  4223e7:	mov    eax,ds:0x1517e439
  4223ec:	nop
  4223ed:	inc    eax
  4223ee:	bound  edi,QWORD PTR ds:0x68f667d7
  4223f4:	sub    al,0x70
  4223f6:	jecxz  0x4223c8
  4223f8:	stc    
  4223f9:	xor    BYTE PTR [esi-0x1e],0xf0
  4223fd:	mov    dl,0xbf
  4223ff:	sbb    edi,0x23
  422402:	jge    0x4223d9
  422404:	mov    dh,0x41
  422406:	stos   BYTE PTR es:[edi],al
  422407:	xor    ebp,ebx
  422409:	mov    DWORD PTR [ecx],ecx
  42240b:	loope  0x422480
  42240d:	or     ch,BYTE PTR [ecx+0x282224bf]
  422413:	push   0x2c20d8b6
  422418:	fld    TBYTE PTR [edi]
  42241a:	adc    al,BYTE PTR [ebx+ecx*8+0x22]
  42241e:	push   eax
  42241f:	mov    bh,0xd1
  422421:	xchg   esi,eax
  422422:	outs   dx,DWORD PTR ds:[esi]
  422423:	pop    ecx
  422424:	nop
  422425:	jmp    0x2cd7bafc
  42242a:	(bad)  
  42242c:	clc    
  42242d:	inc    ecx
  42242e:	adc    BYTE PTR [edi-0x70],ch
  422431:	push   ds
  422432:	je     0x42242a
  422434:	mov    ah,0x99
  422436:	and    ah,BYTE PTR [esi-0x18d9f974]
  42243c:	xchg   edi,eax
  42243d:	mov    ?,WORD PTR [esi]
  42243f:	xor    al,0x17
  422441:	pop    edi
  422442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422443:	in     al,0xba
  422445:	popf   
  422446:	adc    DWORD PTR [ebp-0x6c],edi
  422449:	aam    0xf9
  42244b:	sbb    al,0x2a
  42244d:	arpl   WORD PTR [ebp-0x2a5395bf],dx
  422453:	int    0xed
  422455:	jl     0x4223dc
  422457:	push   edx
  422458:	imul   esi,edi,0x8ae10d0f
  42245e:	jne    0x422488
  422460:	jp     0x422425
  422462:	scas   eax,DWORD PTR es:[edi]
  422463:	mov    ch,0x5d
  422465:	shl    BYTE PTR [edx],1
  422467:	mov    ebp,0xe7363950
  42246c:	inc    ebx
  42246d:	stc    
  42246e:	loope  0x422473
  422470:	loope  0x4224a1
  422472:	shr    BYTE PTR ds:0xadf81154,1
  422478:	imul   edx,DWORD PTR [esi],0xba60cce2
  42247e:	cwde   
  42247f:	add    DWORD PTR [esi-0x7],edx
  422482:	sbb    al,BYTE PTR [edi]
  422484:	sar    dh,1
  422486:	retf   0x537f
  422489:	cs mov dl,0xe6
  42248c:	mov    DWORD PTR fs:[edi+eax*8],edx
  422490:	ds int3 
  422492:	outs   dx,BYTE PTR ds:[esi]
  422493:	push   esi
  422494:	js     0x42244f
  422496:	stos   BYTE PTR es:[edi],al
  422497:	rol    esi,0x0
  42249a:	or     eax,0xfc4aca2b
  42249f:	scas   al,BYTE PTR es:[edi]
  4224a0:	leave  
  4224a1:	jge    0x422493
  4224a3:	sub    BYTE PTR [edx],bh
  4224a5:	mov    al,bh
  4224a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a8:	add    BYTE PTR [esi],0xda
  4224ab:	xchg   edx,eax
  4224ac:	pushf  
  4224ad:	cmp    eax,0x9008dd22
  4224b2:	xor    BYTE PTR [edi+0x72245abd],bl
  4224b8:	jg     0x42244b
  4224ba:	pop    esi
  4224bb:	fimul  DWORD PTR [ebx+0x0]
  4224be:	adc    al,0xf5
  4224c0:	jmp    0xf024:0x71fa11ae
  4224c7:	int    0xf0
  4224c9:	(bad)  
  4224ca:	mov    esi,0x97b691ab
  4224cf:	pop    ebx
  4224d0:	sub    eax,0x1ce3c2db
  4224d5:	cmp    al,BYTE PTR [edx-0x33376e89]
  4224db:	lods   al,BYTE PTR ds:[esi]
  4224dc:	aam    0x19
  4224de:	fwait
  4224df:	add    DWORD PTR [ebx-0x6232df8c],ebp
  4224e5:	and    DWORD PTR [ecx-0x6f],edx
  4224e8:	jg     0x422493
  4224ea:	sbb    DWORD PTR [edi],edi
  4224ec:	aad    0x1
  4224ee:	add    cl,BYTE PTR [ebp-0x17a3ada0]
  4224f4:	jmp    0x4224c0
  4224f6:	cmp    al,0xbc
  4224f8:	(bad)  
  4224f9:	jg     0x422578
  4224fb:	or     eax,0x99c97f9f
  422500:	jmp    0x42251a
  422502:	int3   
  422503:	adc    dl,BYTE PTR [esi]
  422505:	packssdw mm0,QWORD PTR [edx]
  422508:	mov    ebp,0xb5ec7301
  42250d:	fadd   DWORD PTR [edi-0x27e3cfa6]
  422513:	int3   
  422514:	out    0x96,al
  422516:	gs jns 0x42255c
  422519:	xchg   edi,eax
  42251a:	push   0xcf662fb5
  42251f:	adc    eax,0xbeb0e37f
  422524:	mov    bh,0x16
  422526:	fldcw  WORD PTR [ebx]
  422528:	sbb    DWORD PTR [ecx-0x4b17dce0],ecx
  42252e:	add    al,dh
  422530:	rcl    BYTE PTR [ebx],cl
  422532:	push   0xffffffda
  422534:	test   BYTE PTR [edx],dl
  422536:	aaa    
  422537:	in     eax,dx
  422538:	push   ecx
  422539:	fcomp  QWORD PTR [ebp+esi*8-0x5]
  42253d:	sub    al,0x1e
  42253f:	xchg   edx,eax
  422540:	jmp    0xfa2:0x9b06e58c
  422547:	push   edx
  422548:	retf   
  422549:	mov    cl,0xbc
  42254b:	pusha  
  42254c:	inc    edi
  42254d:	ja     0x4225c4
  42254f:	lods   eax,DWORD PTR ds:[esi]
  422550:	and    al,0xf8
  422552:	mov    ds:0xc56a1d68,eax
  422557:	jne    0x422588
  422559:	push   0x7f
  42255b:	push   cs
  42255c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42255d:	mov    ah,0xbb
  42255f:	mov    edx,0x1166cf8a
  422564:	or     BYTE PTR [edx],ah
  422566:	test   DWORD PTR [edi-0x7a],0xfcc2732a
  42256d:	and    ebx,DWORD PTR [eax-0x72f7594e]
  422573:	jl     0x42253c
  422575:	adc    al,0xab
  422577:	fisttp WORD PTR [ebp+eiz*4-0x59]
  42257b:	mov    ah,0x3e
  42257d:	fdivr  DWORD PTR [ebx-0x2e]
  422580:	jb     0x4225c9
  422582:	outs   dx,BYTE PTR ds:[esi]
  422583:	test   BYTE PTR [esi+0x35],al
  422586:	sbb    al,0xa0
  422588:	pop    esi
  422589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42258a:	push   ebp
  42258b:	lahf   
  42258c:	add    eax,0x53c64d50
  422591:	outs   dx,DWORD PTR ds:[esi]
  422592:	fidiv  DWORD PTR ds:0xe2d0449a
  422598:	(bad)  
  422599:	(bad)  
  42259a:	ror    bl,1
  42259c:	pop    ebp
  42259d:	push   0xffffffc8
  42259f:	rol    BYTE PTR [esi],1
  4225a1:	(bad)  
  4225a2:	imul   eax,DWORD PTR [esi+0x73ce9a6f],0x443d3f79
  4225ac:	mov    edi,0x348fed20
  4225b1:	je     0x422557
  4225b3:	dec    ebx
  4225b4:	ror    ebp,1
  4225b6:	lahf   
  4225b7:	fld    TBYTE PTR [eax+0x6e]
  4225ba:	jbe    0x4225a5
  4225bc:	jnp    0x4225b9
  4225be:	and    eax,0x324463de
  4225c3:	xchg   ebp,eax
  4225c4:	arpl   WORD PTR [esi-0x40],cx
  4225c7:	mov    esp,0xccd7c8e0
  4225cc:	jp     0x4225ab
  4225ce:	pop    esi
  4225cf:	out    0xa6,al
  4225d1:	xchg   ebp,eax
  4225d2:	mov    edi,0xa162de46
  4225d7:	div    BYTE PTR [eax+ebx*8-0x511c23eb]
  4225de:	mov    gs,WORD PTR [ebp+0x26be5440]
  4225e4:	fst    QWORD PTR [ecx+0x6cc42798]
  4225ea:	add    esp,DWORD PTR [ebx+eax*2]
  4225ed:	out    0x98,al
  4225ef:	push   ds
  4225f0:	pop    ss
  4225f1:	ss jmp 0x422575
  4225f4:	sub    eax,0xd2a95827
  4225f9:	jmp    FWORD PTR [eax-0x4c]
  4225fc:	push   cs
  4225fd:	push   eax
  4225fe:	inc    ecx
  4225ff:	aaa    
  422600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422601:	jl     0x4225d6
  422603:	aas    
  422604:	jae    0x422636
  422606:	push   es
  422607:	jae    0x4225d0
  422609:	fcmove st,st(0)
  42260b:	fld    DWORD PTR [ebx-0x3f]
  42260e:	add    eax,0x377f319d
  422613:	int3   
  422614:	jae    0x4225ab
  422616:	mov    dh,0x6a
  422618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422619:	mov    WORD PTR [esi+edi*2-0xa],fs
  42261d:	mov    dh,0x29
  42261f:	or     al,0xe6
  422621:	test   DWORD PTR [edi+eax*8],esi
  422624:	inc    ebx
  422625:	jo     0x422690
  422627:	push   esp
  422628:	xchg   esi,eax
  422629:	xchg   edx,eax
  42262a:	loopne 0x42267a
  42262c:	or     eax,0x5598a386
  422631:	fsubp  st(0),st
  422633:	(bad)  
  422634:	add    DWORD PTR [esi],esp
  422636:	not    dl
  422638:	aaa    
  422639:	and    ebx,ebp
  42263b:	sbb    bh,BYTE PTR [ebx]
  42263d:	std    
  42263e:	ins    DWORD PTR es:[edi],dx
  42263f:	in     eax,dx
  422640:	loope  0x4225fb
  422642:	mov    bl,0x39
  422644:	data16 arpl WORD PTR [ebx],dx
  422647:	adc    ecx,DWORD PTR [edi+0x7f]
  42264a:	loopne 0x422654
  42264c:	mov    ecx,0x8c5fb788
  422651:	xor    bh,bh
  422653:	lods   al,BYTE PTR ds:[esi]
  422654:	xchg   DWORD PTR [ebx-0x22],ecx
  422657:	imul   esi,DWORD PTR [eax+0x657c95f8],0xffffff8c
  42265e:	mov    esp,0xd4b346a9
  422663:	ins    BYTE PTR es:[edi],dx
  422664:	in     eax,dx
  422665:	jae    0x4226dd
  422667:	popa   
  422668:	fcmovb st,st(5)
  42266a:	adc    eax,DWORD PTR [edi-0x59d1541c]
  422670:	and    edi,DWORD PTR [edx]
  422672:	sbb    al,0x65
  422674:	mov    ?,WORD PTR cs:[ecx+0x2a55c248]
  42267b:	inc    DWORD PTR [edx+0x5b8c0f8e]
  422681:	stos   DWORD PTR es:[edi],eax
  422682:	arpl   WORD PTR [edi],bx
  422684:	cmp    al,0xac
  422686:	bound  esi,QWORD PTR [eax]
  422688:	inc    eax
  422689:	repnz clc 
  42268b:	or     al,0x2e
  42268d:	mov    DWORD PTR [eax+0x5c],0xc2b32986
  422694:	pop    edx
  422695:	push   ebp
  422696:	jno    0x4226cb
  422698:	nop
  422699:	dec    eax
  42269a:	sbb    ecx,ebp
  42269c:	clc    
  42269d:	adc    dh,dl
  42269f:	lea    edx,[ecx+0x4a]
  4226a2:	out    0x2,al
  4226a4:	cdq    
  4226a5:	js     0x4226d7
  4226a7:	push   eax
  4226a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a9:	push   esp
  4226aa:	mov    ds:0xeeca91f5,eax
  4226af:	outs   dx,BYTE PTR ds:[esi]
  4226b0:	mov    dl,0x43
  4226b2:	gs jmp 0x9f86:0xfd9631c6
  4226ba:	out    0x21,al
  4226bc:	jmp    DWORD PTR [edx]
  4226be:	jmp    0x422717
  4226c0:	in     al,dx
  4226c1:	xchg   ebx,eax
  4226c2:	jb     0x4226e3
  4226c4:	(bad)  
  4226c5:	jo     0x422689
  4226c7:	xchg   edx,eax
  4226c8:	cmp    DWORD PTR [esi-0x5233b593],esp
  4226ce:	pop    es
  4226cf:	sbb    DWORD PTR [eax+0x27896ce],edi
  4226d5:	icebp  
  4226d6:	pop    es
  4226d7:	lock lea ecx,[ebp-0x22]
  4226db:	jle    0x422748
  4226dd:	xchg   esp,eax
  4226de:	(bad)  
  4226df:	ficom  WORD PTR [esi+0x7ee113fc]
  4226e5:	mov    ecx,0x662482e0
  4226ea:	dec    esp
  4226eb:	sbb    ebp,DWORD PTR [eax+0x240e5e41]
  4226f1:	fstp   DWORD PTR [ebx+0x75]
  4226f4:	xchg   esi,eax
  4226f5:	loope  0x4226f9
  4226f7:	frndint 
  4226f9:	or     eax,DWORD PTR [edi+ebp*1+0x66]
  4226fd:	(bad)  
  4226fe:	jae    0x4226eb
  422700:	jp     0x422751
  422702:	stos   DWORD PTR es:[edi],eax
  422703:	cmp    edi,DWORD PTR [ecx+0xae86681]
  422709:	push   es
  42270a:	xor    BYTE PTR [edi],ch
  42270c:	pop    ebx
  42270d:	adc    cl,BYTE PTR [edx+0x3e]
  422710:	add    dh,cl
  422712:	cmp    DWORD PTR [eax-0x80],0xc3fb7859
  422719:	adc    al,0x5d
  42271b:	mov    ebx,0xbdcc3253
  422720:	jo     0x422784
  422722:	repz xor eax,0xeceeaa42
  422728:	pop    eax
  422729:	std    
  42272a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42272b:	jne    0x4226d2
  42272d:	mov    bh,ah
  42272f:	cmp    ch,ah
  422731:	fadd   DWORD PTR [edi+edi*8+0x22]
  422735:	nop
  422736:	int3   
  422737:	outs   dx,DWORD PTR ds:[esi]
  422738:	aaa    
  422739:	adc    eax,0x99444d03
  42273e:	push   0xffffff82
  422740:	pop    ebp
  422741:	rol    BYTE PTR [edx+0x36],1
  422744:	and    cl,al
  422746:	adc    eax,ebx
  422748:	out    0x60,eax
  42274a:	pusha  
  42274b:	addr16 mov ch,0xea
  42274e:	xor    DWORD PTR [esi+0x7e],ebx
  422751:	xor    BYTE PTR [esi+eax*8+0x2a],bl
  422755:	xchg   cl,dh
  422757:	pop    eax
  422758:	lahf   
  422759:	fcom   QWORD PTR [esi]
  42275b:	jnp    0x4227ba
  42275d:	push   ebx
  42275e:	int    0x2c
  422760:	mov    DWORD PTR [ecx],ebx
  422762:	out    dx,al
  422763:	scas   eax,DWORD PTR es:[edi]
  422764:	nop
  422765:	mov    ebx,DWORD PTR [edi+0x6e]
  422768:	(bad)  
  422769:	and    ecx,DWORD PTR [ebx]
  42276b:	(bad)  
  42276c:	push   esp
  42276d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276e:	mov    BYTE PTR ds:0x3464c9fa,dh
  422774:	add    BYTE PTR [ebp+0x4],cl
  422777:	xchg   edx,eax
  422778:	ins    DWORD PTR es:[edi],dx
  422779:	call   0x1af4e56
  42277e:	push   0xb3c4ab04
  422783:	into   
  422784:	push   edx
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	jo     0x42274c
  422788:	xchg   esp,eax
  422789:	xchg   edi,eax
  42278a:	daa    
  42278b:	pop    edx
  42278c:	mov    dh,0x6c
  42278e:	lds    esi,FWORD PTR [eax-0x9c55074]
  422794:	mov    dl,0x8e
  422796:	and    eax,0x9aa9ce8e
  42279b:	xor    BYTE PTR [eax+edx*8-0xeb33d80],0x11
  4227a3:	(bad)  
  4227a4:	clc    
  4227a5:	dec    esp
  4227a6:	jo     0x4227e8
  4227a8:	xlat   BYTE PTR ds:[ebx]
  4227a9:	call   0x761d:0xd686ded3
  4227b0:	xor    DWORD PTR ds:0xd10abaf9,ecx
  4227b6:	dec    ebp
  4227b8:	xor    dh,0x97
  4227bb:	icebp  
  4227bc:	add    ecx,DWORD PTR [edi]
  4227be:	cmp    DWORD PTR [esi],esi
  4227c0:	cmp    BYTE PTR [edx],cl
  4227c2:	mov    ebp,DWORD PTR [ecx+edi*2]
  4227c5:	pop    esp
  4227c6:	mov    edx,0xd3c75ff6
  4227cb:	cwde   
  4227cc:	std    
  4227cd:	aad    0xd2
  4227cf:	inc    edi
  4227d0:	xor    al,0x6a
  4227d2:	cdq    
  4227d3:	sti    
  4227d4:	test   BYTE PTR [ebx+0x7f2dee8f],bl
  4227da:	enter  0x0,0x15
  4227de:	cmp    eax,edi
  4227e0:	jne    0x422789
  4227e2:	jg     0x422764
  4227e4:	(bad)  
  4227e6:	ins    DWORD PTR es:[edi],dx
  4227e7:	add    al,0x11
  4227e9:	jge    0x422797
  4227eb:	ret    0xe52a
  4227ee:	xchg   esp,eax
  4227ef:	ror    DWORD PTR [ebx],cl
  4227f1:	dec    ebp
  4227f2:	push   edx
  4227f3:	jmp    0x4e6d42d7
  4227f8:	jo     0x42278b
  4227fa:	sbb    eax,0x106d7222
  4227ff:	rcl    dl,1
  422801:	(bad)  
  422802:	xchg   edi,eax
  422803:	sub    al,0x19
  422805:	jp     0x422792
  422807:	push   esi
  422808:	mov    DWORD PTR [eax+0x39],ebx
  42280b:	mov    ds:0xdd595f18,al
  422810:	add    al,0xd8
  422812:	stos   DWORD PTR es:[edi],eax
  422813:	mov    dh,BYTE PTR [edx]
  422815:	aaa    
  422816:	lahf   
  422817:	or     ebp,DWORD PTR ds:0x10a30d8
  42281d:	sbb    DWORD PTR [eax+0x4e],edx
  422820:	popa   
  422821:	loope  0x4227a5
  422823:	stos   BYTE PTR es:[edi],al
  422824:	mul    BYTE PTR [eax]
  422826:	cmc    
  422827:	and    DWORD PTR [edi-0x4cd48506],esp
  42282d:	cwde   
  42282e:	out    dx,eax
  42282f:	jl     0x42286e
  422831:	loopne 0x42282b
  422833:	jns    0x42281d
  422835:	inc    ebx
  422836:	loop   0x4227f4
  422838:	jmp    0xd231:0x28420499
  42283f:	mov    al,ds:0xbaa09d69
  422844:	push   ecx
  422845:	jo     0x422831
  422847:	dec    ecx
  422848:	jmp    0x42281d
  42284a:	sahf   
  42284b:	and    ecx,DWORD PTR [ebx-0x2a]
  42284e:	add    dh,BYTE PTR [edx+0x35]
  422851:	int    0xa7
  422853:	leave  
  422854:	dec    ecx
  422855:	pop    ebx
  422856:	pop    esi
  422857:	rcl    BYTE PTR [edi+0x5f0683c2],cl
  42285d:	bound  ecx,QWORD PTR [ecx-0x53]
  422860:	call   DWORD PTR [edi-0x5b]
  422863:	aaa    
  422864:	mov    bh,0x60
  422866:	jl     0x4228bd
  422868:	popa   
  422869:	adc    dl,BYTE PTR fs:[edx+0x54]
  42286d:	or     edi,DWORD PTR [ecx-0x7c3ab36]
  422873:	mov    ds:0x78ddc5d3,al
  422878:	and    al,BYTE PTR [ecx]
  42287a:	fsub   st,st(1)
  42287c:	jae    0x4228a9
  42287e:	add    DWORD PTR [edi-0x6a],ebp
  422881:	add    edx,edx
  422883:	pop    ss
  422884:	mov    ch,0xe0
  422886:	jno    0x4228c8
  422888:	cmp    DWORD PTR [eax+0x2d],0xcffda8d6
  42288f:	arpl   di,cx
  422891:	pop    eax
  422892:	xor    esi,0xd2ba346a
  422898:	xor    eax,0x55949f6a
  42289d:	enter  0xe864,0xf8
  4228a1:	pop    ebx
  4228a2:	dec    esp
  4228a3:	mov    ds:0x2f13be10,eax
  4228a8:	jmp    0x42291c
  4228aa:	ret    
  4228ab:	mov    eax,0x9c111fc4
  4228b0:	pop    esp
  4228b1:	inc    esi
  4228b2:	pushf  
  4228b3:	int3   
  4228b4:	popa   
  4228b5:	cmp    BYTE PTR [ecx-0x7c04ed0e],bl
  4228bb:	cdq    
  4228bc:	sub    al,0x41
  4228be:	pop    ebx
  4228bf:	or     BYTE PTR [esi-0x7f6a48d9],dh
  4228c5:	test   eax,0xb7a774d1
  4228ca:	leave  
  4228cb:	and    edi,DWORD PTR [ecx]
  4228cd:	int3   
  4228ce:	aas    
  4228cf:	(bad)  
  4228d0:	bound  edx,QWORD PTR [edi+0x70]
  4228d3:	cwde   
  4228d4:	in     eax,0xbd
  4228d6:	mov    esi,0xfddf17eb
  4228db:	ret    0xc946
  4228de:	ins    BYTE PTR es:[edi],dx
  4228df:	xor    eax,DWORD PTR [esi-0x45]
  4228e2:	push   ds
  4228e3:	mov    eax,ds:0x4b2a1251
  4228e8:	stos   DWORD PTR es:[edi],eax
  4228e9:	dec    eax
  4228ea:	out    0xd0,al
  4228ec:	rcl    DWORD PTR [esi+0xdf3acc5],cl
  4228f2:	mov    bh,0x5
  4228f4:	je     0x42289c
  4228f6:	xchg   ebx,eax
  4228f7:	aam    0xf6
  4228f9:	test   DWORD PTR [eax-0x1],ebx
  4228fc:	ja     0x4228f5
  4228fe:	outs   dx,DWORD PTR ds:[esi]
  4228ff:	lea    esp,[ebx]
  422901:	mov    bl,0x5b
  422903:	push   0xffffffe9
  422905:	and    BYTE PTR [edx],ch
  422907:	icebp  
  422908:	mov    ebx,0xe112e9a2
  42290d:	sbb    al,0x88
  42290f:	xchg   ebx,eax
  422910:	nop
  422911:	mov    ch,0x28
  422913:	imul   esi,DWORD PTR [edi-0x9c4ec1a],0x3d
  42291a:	pop    edx
  42291b:	outs   dx,DWORD PTR ds:[esi]
  42291c:	cs cs sbb ah,cl
  422920:	sbb    eax,DWORD PTR [edx+edi*4-0x4e362e17]
  422927:	fwait
  422928:	sbb    DWORD PTR [eax-0x202c6d3e],edx
  42292e:	pop    eax
  42292f:	test   BYTE PTR [ecx-0x7e272552],0x99
  422936:	div    bh
  422938:	retf   0x4112
  42293b:	jb     0x4228eb
  42293d:	xor    al,0xce
  42293f:	jnp    0x42295b
  422941:	outs   dx,DWORD PTR ds:[esi]
  422942:	stos   BYTE PTR es:[edi],al
  422943:	jo     0x422920
  422945:	sub    ch,bl
  422947:	loop   0x422958
  422949:	mov    dl,0x3a
  42294b:	mov    edi,0x4fcb108e
  422950:	xchg   ebp,eax
  422951:	mov    dl,0xa0
  422953:	test   DWORD PTR [esi-0x49],edx
  422956:	nop
  422957:	ret    0xca87
  42295a:	cmp    esp,ebx
  42295c:	jge    0x42292a
  42295e:	xchg   DWORD PTR [edi+0x25675a83],ebp
  422964:	inc    edx
  422965:	mov    ebp,DWORD PTR [ecx-0x11129662]
  42296b:	stos   BYTE PTR es:[edi],al
  42296c:	cdq    
  42296d:	jmp    0x5b87bbc
  422972:	dec    esp
  422973:	push   ss
  422974:	lods   eax,DWORD PTR ds:[esi]
  422975:	mov    BYTE PTR [eax+0x2b245b1b],dl
  42297b:	pop    DWORD PTR [ecx+eax*8+0x5be7a71c]
  422982:	or     esp,DWORD PTR [edi]
  422984:	loope  0x422987
  422986:	and    DWORD PTR [edx-0x4c],0x3f
  42298a:	popf   
  42298b:	aas    
  42298c:	inc    ebp
  42298d:	out    0xa9,al
  42298f:	mov    DWORD PTR [esi-0x1],edx
  422992:	loop   0x42292e
  422994:	sbb    edi,DWORD PTR [edx+edi*8]
  422997:	or     eax,0xbbd5c919
  42299c:	stc    
  42299d:	fnsave [eax+ecx*8+0x61f5cff7]
  4229a4:	pop    ebp
  4229a5:	mov    eax,0xc687c0e2
  4229aa:	mov    esi,0x64b863d2
  4229af:	leave  
  4229b0:	adc    esi,DWORD PTR [edi+0x4c]
  4229b3:	mov    ds:0x569df414,eax
  4229b8:	popf   
  4229b9:	mov    dl,0xf5
  4229bb:	mov    al,0x67
  4229bd:	mov    esp,DWORD PTR [ecx+0x2983fead]
  4229c3:	add    dh,BYTE PTR [ecx+0xff2be93]
  4229c9:	jb     0x4229a6
  4229cb:	pop    esp
  4229cc:	retf   0x5656
  4229cf:	pop    edi
  4229d0:	into   
  4229d1:	movhps QWORD PTR [esi-0x1b8062f2],xmm0
  4229d8:	xlat   BYTE PTR cs:[ebx]
  4229da:	or     eax,0x2bc34ee3
  4229df:	jbe    0x422978
  4229e1:	and    DWORD PTR [ebp-0x9],ebx
  4229e4:	sub    eax,0xb21de8f8
  4229e9:	adc    eax,0x9d0fbbc5
  4229ee:	ret    0x7e82
  4229f1:	mov    dl,0xa5
  4229f3:	mov    ecx,0xbb4bb17d
  4229f8:	stos   DWORD PTR es:[edi],eax
  4229f9:	ds (bad) 
  4229fb:	fidivr WORD PTR [ecx-0xa72b4f6]
  422a01:	ins    DWORD PTR es:[edi],dx
  422a02:	mov    esp,0x7652f244
  422a07:	daa    
  422a08:	imul   edi
  422a0a:	and    eax,DWORD PTR [ecx]
  422a0c:	fisubr DWORD PTR [ecx+0x17]
  422a0f:	adc    al,0xbb
  422a11:	stos   BYTE PTR es:[edi],al
  422a12:	ret    0x7951
  422a15:	aad    0x7d
  422a17:	repnz sub esi,DWORD PTR [ecx+0x1e]
  422a1b:	sub    BYTE PTR [esi],ah
  422a1d:	xor    ebx,eax
  422a1f:	test   eax,0x49b737a1
  422a24:	push   edx
  422a25:	cmp    ebp,edx
  422a27:	sbb    ch,BYTE PTR [edi-0x66]
  422a2a:	sub    al,0xac
  422a2c:	mov    edx,cs
  422a2e:	cmp    dh,BYTE PTR [edi-0x3e]
  422a31:	ss jno 0x4229cf
  422a34:	je     0x4229fd
  422a36:	pop    ds
  422a37:	pop    es
  422a38:	ja     0x422a80
  422a3a:	int3   
  422a3b:	(bad)  
  422a3c:	pop    ebx
  422a3d:	mov    ecx,0x7bf5f9a0
  422a42:	jg     0x4229eb
  422a44:	sti    
  422a45:	pushf  
  422a46:	fdivr  QWORD PTR [eax+0x18a83ed1]
  422a4c:	(bad)  
  422a4d:	cmp    BYTE PTR [eax-0x5f],bl
  422a50:	gs xchg esp,eax
  422a52:	inc    esi
  422a53:	sbb    ch,BYTE PTR [eax+0x46]
  422a56:	(bad)  
  422a57:	fcmovbe st,st(5)
  422a59:	push   es
  422a5a:	fild   QWORD PTR [ecx+0x2d]
  422a5d:	enter  0xb1ec,0xfb
  422a61:	scas   eax,DWORD PTR es:[edi]
  422a62:	ja     0x422a63
  422a64:	repnz cmp bh,BYTE PTR [ecx+ebp*8-0x2a]
  422a69:	dec    edi
  422a6a:	aaa    
  422a6b:	repz and DWORD PTR ds:0x3073e035,eax
  422a72:	push   edi
  422a73:	shl    DWORD PTR ds:0x86e59b92,cl
  422a79:	and    DWORD PTR [esi],ecx
  422a7b:	adc    BYTE PTR [eax+0x307057d1],dh
  422a81:	add    dh,bh
  422a83:	xor    ebx,DWORD PTR [ebx]
  422a85:	add    al,0x50
  422a87:	jno    0x422a85
  422a89:	imul   ebp,DWORD PTR [ebx],0xdb7cc4cd
  422a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a90:	outs   dx,BYTE PTR ds:[esi]
  422a91:	mov    ds:0xa0db680a,al
  422a96:	lock push cs
  422a98:	add    dl,BYTE PTR [ebx+0x82a7d87]
  422a9e:	cmp    ebx,DWORD PTR [ebx]
  422aa0:	sbb    esp,0x24ae504a
  422aa6:	outs   dx,BYTE PTR ds:[esi]
  422aa7:	in     eax,0x2f
  422aa9:	adc    eax,DWORD PTR [ecx+0x58bf4425]
  422aaf:	push   edx
  422ab0:	iret   
  422ab1:	ds je  0x422a77
  422ab4:	retf   0x8609
  422ab7:	aad    0xbf
  422ab9:	push   ebx
  422aba:	fnsave [eax]
  422abc:	cmp    esp,DWORD PTR [ebx+0x17cbc92e]
  422ac2:	ror    DWORD PTR ds:0x36e4e46c,0xe5
  422ac9:	sahf   
  422aca:	mov    edi,0x4ebfb89b
  422acf:	adc    ch,BYTE PTR [edi+0x270cf765]
  422ad5:	pop    ds
  422ad6:	leave  
  422ad7:	mov    dl,0xdc
  422ad9:	pop    es
  422ada:	and    BYTE PTR [eax],cl
  422adc:	cld    
  422add:	ds inc edi
  422adf:	fcom   st(6)
  422ae1:	jnp    0x422ae6
  422ae3:	mov    WORD PTR [ebp+0x1b5a64d1],gs
  422ae9:	sub    DWORD PTR [ecx+0x3cd98063],ecx
  422aef:	sub    al,0x60
  422af1:	sbb    BYTE PTR [edi-0x51],al
  422af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af5:	ficomp DWORD PTR [ebp+0x3e]
  422af8:	cmp    edi,DWORD PTR [ecx-0x56cc208a]
  422afe:	repnz push esi
  422b00:	pop    ebx
  422b01:	test   al,0x9
  422b03:	push   edx
  422b04:	je     0x422b06
  422b06:	lods   eax,DWORD PTR ds:[esi]
  422b07:	push   ebp
  422b08:	cmp    esp,DWORD PTR cs:[ecx]
  422b0b:	and    edx,DWORD PTR [edi-0x670d2b26]
  422b11:	mov    ah,0xe5
  422b13:	aaa    
  422b14:	lahf   
  422b15:	pop    esi
  422b16:	sti    
  422b17:	mov    dh,0x5d
  422b19:	push   esp
  422b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b1b:	fcomi  st,st(7)
  422b1d:	mov    esi,0x5f14a7a8
  422b22:	cmp    esi,DWORD PTR [ecx+0x32]
  422b25:	push   edx
  422b26:	pushf  
  422b27:	or     ecx,esi
  422b29:	cmp    cl,BYTE PTR [ebp+ecx*1+0x7841d3c1]
  422b30:	sub    ebx,DWORD PTR [ecx+edi*1-0x64]
  422b34:	mov    eax,0x81254a3c
  422b39:	inc    edi
  422b3a:	imul   ecx,DWORD PTR [edx],0xdd3410a
  422b40:	dec    esp
  422b41:	pop    esi
  422b42:	push   esp
  422b43:	jne    0x422aee
  422b45:	cwde   
  422b46:	imul   ebx,DWORD PTR [eax+0x63303798],0xb37a19f0
  422b50:	imul   edx,DWORD PTR [ebx+0x7d],0xffffffe5
  422b54:	jae    0x422b74
  422b56:	(bad)  
  422b57:	dec    ebp
  422b58:	pop    ss
  422b59:	daa    
  422b5a:	cmp    dl,BYTE PTR [esi+esi*4]
  422b5d:	repnz daa 
  422b5f:	fld    DWORD PTR [edi-0x1f]
  422b62:	pusha  
  422b63:	xor    BYTE PTR [ebx-0x62],al
  422b66:	sbb    BYTE PTR [ecx],bl
  422b68:	xchg   al,dh
  422b6a:	(bad)  
  422b6b:	lock or al,0x1d
  422b6e:	push   0x79e3c606
  422b73:	push   esp
  422b74:	xor    edi,DWORD PTR [ecx+ecx*4-0x79]
  422b78:	cmp    edi,DWORD PTR [edi+eiz*8+0x4c]
  422b7c:	or     al,0x67
  422b7e:	in     eax,0xd6
  422b80:	push   ds
  422b81:	fadd   QWORD PTR [edi-0x6b]
  422b84:	rcl    DWORD PTR [esi],0xfe
  422b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b88:	xor    ch,BYTE PTR [eax+0x3a172dc2]
  422b8e:	push   ss
  422b8f:	inc    edx
  422b90:	push   esp
  422b91:	cdq    
  422b92:	js     0x422b32
  422b94:	pop    esi
  422b95:	fsub   DWORD PTR [ebx+0x52]
  422b98:	mov    eax,ds:0xc67de6a8
  422b9d:	add    eax,0xb7077f5a
  422ba2:	jge    0x422bb4
  422ba4:	out    0x19,al
  422ba6:	pusha  
  422ba7:	push   es
  422ba8:	add    BYTE PTR [esp+edi*4],dh
  422bab:	mov    BYTE PTR [ebx-0x3bfac42c],bh
  422bb1:	mov    cl,0x71
  422bb3:	(bad)  
  422bb4:	out    0x2c,al
  422bb6:	loopne 0x422b6c
  422bb8:	push   edx
  422bb9:	out    dx,al
  422bba:	dec    ecx
  422bbb:	ins    BYTE PTR es:[edi],dx
  422bbc:	pushf  
  422bbd:	xchg   DWORD PTR [esi],edi
  422bbf:	sub    ecx,DWORD PTR [ebp+ebp*2-0x5a]
  422bc3:	jae    0x422bd1
  422bc5:	in     eax,dx
  422bc6:	or     eax,0x1b31800
  422bcb:	hlt    
  422bcc:	out    0x38,eax
  422bce:	jae    0x422bc3
  422bd0:	add    edi,esi
  422bd2:	mov    al,ds:0xf30dd2b1
  422bd7:	cmp    al,0xa0
  422bd9:	repnz cs dec ecx
  422bdc:	push   ebp
  422bdd:	mov    ds:0x9200e475,al
  422be2:	ret    0x96ec
  422be5:	rcl    BYTE PTR [ebx],cl
  422be7:	into   
  422be8:	adc    ch,BYTE PTR [ebp-0x43299acb]
  422bee:	aas    
  422bef:	push   esp
  422bf0:	test   BYTE PTR [esi],ah
  422bf2:	in     eax,0xe4
  422bf4:	mov    esi,0xb41b8257
  422bf9:	leave  
  422bfa:	out    dx,al
  422bfb:	mov    eax,ds:0x9e183c55
  422c00:	call   0xf924ab94
  422c05:	mov    eax,0x616dd273
  422c0a:	push   esi
  422c0b:	pop    es
  422c0c:	stos   BYTE PTR es:[edi],al
  422c0d:	xchg   BYTE PTR [eax+0x7a],ch
  422c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c11:	jo     0x422ba5
  422c13:	ror    DWORD PTR [edx+ebp*1+0x38],0xb2
  422c18:	add    al,al
  422c1a:	ins    BYTE PTR es:[edi],dx
  422c1b:	loope  0x422c45
  422c1d:	inc    ebp
  422c1e:	sahf   
  422c1f:	ret    
  422c20:	xchg   ebx,eax
  422c21:	sub    BYTE PTR [ebp+0xb],0xae
  422c25:	aad    0xb6
  422c27:	ds fwait
  422c29:	not    DWORD PTR [ebx-0x2f]
  422c2c:	repz (bad) 
  422c2e:	int3   
  422c2f:	inc    esp
  422c30:	ss (bad) 
  422c32:	mov    esi,0xc55dd567
  422c37:	inc    ecx
  422c38:	mov    esi,0xecc20ab9
  422c3d:	push   edi
  422c3e:	mov    ebp,0xddbaf0b6
  422c43:	mov    bl,0xb6
  422c45:	fwait
  422c46:	jle    0x422cb2
  422c48:	ret    
  422c49:	fcmovu st,st(1)
  422c4b:	fwait
  422c4c:	stos   BYTE PTR es:[edi],al
  422c4d:	(bad)  
  422c4e:	sub    cl,BYTE PTR [ebp+0x51]
  422c51:	inc    esi
  422c52:	(bad)  
  422c53:	mov    ah,0xab
  422c55:	stos   DWORD PTR es:[edi],eax
  422c56:	addr16 pop edi
  422c58:	loope  0x422bfa
  422c5a:	sti    
  422c5b:	dec    ebx
  422c5c:	xchg   ebx,eax
  422c5d:	icebp  
  422c5e:	lock into 
  422c60:	fucomi st,st(7)
  422c62:	lds    edi,FWORD PTR [ecx-0x1d]
  422c65:	jg     0x422c8b
  422c67:	xor    al,0xb1
  422c69:	jne    0x422bef
  422c6b:	and    al,0xf1
  422c6d:	cli    
  422c6e:	fistp  QWORD PTR [ebx]
  422c70:	xchg   esi,eax
  422c71:	repnz mov ds:0x7eb12a1,al
  422c77:	jmp    0xa10b:0x9134bb4f
  422c7e:	sub    BYTE PTR [esi-0xff1191c],bh
  422c84:	sub    ebx,eax
  422c86:	lock into 
  422c88:	out    dx,al
  422c89:	fld    TBYTE PTR ds:0x1578e674
  422c8f:	mov    ah,0x73
  422c91:	lea    edx,[ebx+0x18]
  422c94:	dec    eax
  422c95:	fistp  WORD PTR [eax+0x2bb42d45]
  422c9b:	popa   
  422c9c:	ss cmc 
  422c9e:	or     esp,ecx
  422ca0:	and    DWORD PTR [esi+edx*4-0x4e6b847f],esi
  422ca7:	push   ds
  422ca8:	dec    ecx
  422ca9:	call   0xfd8f60d4
  422cae:	mov    al,ds:0xc62e6218
  422cb3:	jmp    0x422cef
  422cb5:	pop    es
  422cb6:	je     0x422d13
  422cb8:	dec    esp
  422cb9:	dec    edx
  422cba:	xchg   eax,esp
  422cbc:	fst    QWORD PTR [eax+edi*8+0x7b]
  422cc0:	add    dh,BYTE PTR [ecx+ecx*8-0x4c]
  422cc4:	fwait
  422cc5:	mov    dl,0xdc
  422cc7:	push   es
  422cc8:	adc    eax,0x770e33e5
  422cce:	std    
  422ccf:	loopne 0x422d08
  422cd1:	sar    DWORD PTR [edi+0x675019d8],cl
  422cd7:	mov    edx,0x8a0f1a37
  422cdc:	jmp    0xf4ca257d
  422ce1:	mov    edi,ebp
  422ce3:	int    0x6f
  422ce5:	xor    esi,DWORD PTR [ecx+0x5e]
  422ce8:	sbb    eax,0x845102aa
  422ced:	repnz stos DWORD PTR es:[edi],eax
  422cef:	neg    BYTE PTR cs:[edx-0xa]
  422cf3:	sbb    esp,DWORD PTR [edi]
  422cf5:	xor    ah,BYTE PTR [eax+ebx*4-0x38]
  422cf9:	and    DWORD PTR [ebp-0x1e],ecx
  422cfc:	xor    BYTE PTR [ebp+eiz*1+0x32],dh
  422d00:	sar    DWORD PTR [edi],0x2
  422d03:	fwait
  422d04:	in     eax,dx
  422d05:	cwde   
  422d06:	push   edi
  422d07:	mov    ch,0xb0
  422d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d0a:	jno    0x422ca3
  422d0c:	fbstp  TBYTE PTR [ebx+0x686abd12]
  422d12:	xchg   ecx,eax
  422d13:	mov    eax,fs
  422d15:	div    DWORD PTR [ebp+esi*2-0x6b90da42]
  422d1c:	fldcw  WORD PTR [eax]
  422d1e:	pop    edx
  422d1f:	jl     0x422cfb
  422d21:	inc    edx
  422d22:	lea    ebp,[ebp+0x2d]
  422d25:	cmp    DWORD PTR [edi],0x1df130f4
  422d2b:	ror    DWORD PTR [edi+0x7951e0b4],0xd6
  422d32:	test   BYTE PTR [ebx],cl
  422d34:	pusha  
  422d35:	fs ins DWORD PTR es:[edi],dx
  422d37:	daa    
  422d38:	ds js  0x422d1e
  422d3b:	push   0xffffffbd
  422d3d:	call   0x6b74:0x9489c164
  422d44:	cmp    eax,0xfa94e09b
  422d49:	nop
  422d4a:	mov    cl,0xa
  422d4c:	jno    0x422d1f
  422d4e:	add    dh,BYTE PTR [edi+eiz*2-0x358601cc]
  422d55:	pop    ebp
  422d56:	mov    ebx,0xeac14cbc
  422d5b:	cwde   
  422d5c:	mov    WORD PTR [ebx-0x60],ss
  422d5f:	or     DWORD PTR [ebx],esp
  422d61:	ret    0xaf61
  422d64:	mov    bh,0x49
  422d66:	aaa    
  422d67:	sbb    esp,DWORD PTR [edx]
  422d69:	mov    dl,BYTE PTR gs:[esi]
  422d6c:	adc    ebx,esi
  422d6e:	mov    ch,0x30
  422d70:	cld    
  422d71:	dec    edx
  422d72:	mov    bh,0x37
  422d74:	mov    ecx,DWORD PTR [ebx+0x36]
  422d77:	adc    al,0xe2
  422d79:	and    esi,DWORD PTR [edx-0x1c7bc2d2]
  422d7f:	sub    eax,0x408efbfe
  422d84:	inc    ebp
  422d85:	mov    ebp,0x6429d140
  422d8a:	add    eax,0x126b61d9
  422d8f:	ins    DWORD PTR es:[edi],dx
  422d90:	pop    edi
  422d91:	hlt    
  422d92:	mov    bh,0xd8
  422d94:	add    ah,BYTE PTR [ecx+0x78cbbc8d]
  422d9a:	dec    edx
  422d9b:	pop    eax
  422d9c:	or     BYTE PTR [ebp+0x25],dl
  422d9f:	sahf   
  422da0:	or     dl,BYTE PTR [ebp-0x5bf3e285]
  422da6:	mov    al,ds:0x4343686
  422dab:	xchg   DWORD PTR [eax+0x52c83da9],edi
  422db1:	popa   
  422db2:	pop    ss
  422db3:	das    
  422db4:	jno    0x422e24
  422db6:	dec    ecx
  422db7:	test   DWORD PTR [edi+0x1bb3c0be],esp
  422dbd:	mov    eax,ds:0x9676c8bd
  422dc2:	(bad)  
  422dc4:	mov    dl,0x1c
  422dc6:	lods   al,BYTE PTR ds:[esi]
  422dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dc9:	jae    0x422db2
  422dcb:	add    eax,0x7b2f707a
  422dd0:	lea    edi,[edi]
  422dd2:	inc    edx
  422dd3:	add    DWORD PTR [ecx+0x4b],0xc7a8b1fa
  422dda:	jne    0x422e52
  422ddc:	xchg   ebp,eax
  422ddd:	pusha  
  422dde:	or     DWORD PTR [eax-0x23],eax
  422de1:	and    edx,0x3b
  422de4:	fldcw  WORD PTR [ebp-0x55]
  422de7:	iret   
  422de8:	mov    esi,0x8d0e7158
  422ded:	dec    ecx
  422dee:	mov    esp,0x123755c1
  422df3:	repnz mov ds:0x98d78826,al
  422df9:	push   ecx
  422dfa:	arpl   dx,di
  422dfc:	imul   edi
  422dfe:	aaa    
  422dff:	add    BYTE PTR [edx-0x38c087b2],dl
  422e05:	pusha  
  422e06:	push   esp
  422e07:	dec    ebx
  422e08:	dec    edi
  422e09:	mov    esi,0x453f985
  422e0e:	lods   eax,DWORD PTR ds:[esi]
  422e0f:	arpl   sp,di
  422e11:	or     dl,BYTE PTR [ebp+0x6a]
  422e14:	repz push ebx
  422e16:	push   ebp
  422e17:	lahf   
  422e18:	(bad)  
  422e19:	sti    
  422e1a:	dec    edx
  422e1b:	push   esi
  422e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e1d:	fucomi st,st(4)
  422e1f:	adc    esp,DWORD PTR [edx-0x5f]
  422e22:	test   ebp,0x288f9e14
  422e28:	sti    
  422e29:	or     al,0xd6
  422e2b:	push   ebx
  422e2c:	mov    ds:0x9a72ff90,eax
  422e31:	and    al,0x5
  422e33:	xchg   ebx,eax
  422e34:	push   esi
  422e35:	xor    eax,0xac3e2bdc
  422e3a:	(bad)  
  422e3b:	js     0x422e2e
  422e3d:	xor    dh,BYTE PTR [eax]
  422e3f:	aas    
  422e40:	out    0x79,al
  422e42:	jne    0x422e54
  422e44:	scas   eax,DWORD PTR es:[edi]
  422e45:	lea    edx,fs:[edx]
  422e48:	cmp    al,0xf0
  422e4a:	push   cs
  422e4b:	push   ds
  422e4c:	lods   al,BYTE PTR ds:[esi]
  422e4d:	test   al,0xd2
  422e4f:	or     BYTE PTR [ebp+edi*8-0x4e],ch
  422e53:	test   al,0x2
  422e55:	setle  dh
  422e58:	fdivr  st,st(1)
  422e5a:	loop   0x422ec9
  422e5c:	lock in al,dx
  422e5e:	cwde   
  422e5f:	loopne 0x422e2d
  422e61:	fwait
  422e62:	inc    ebx
  422e63:	pop    esi
  422e64:	sub    DWORD PTR [edi+0x797a0cbf],0xffffffd7
  422e6b:	pop    ds
  422e6c:	mov    esi,0xaaa13ccf
  422e71:	dec    edi
  422e72:	dec    esp
  422e73:	scas   al,BYTE PTR es:[edi]
  422e74:	ret    
  422e75:	lods   eax,DWORD PTR ds:[esi]
  422e76:	rol    BYTE PTR [eax-0x55],cl
  422e79:	mov    eax,ds:0x3c696fa0
  422e7e:	ret    0x1ae5
  422e81:	or     al,0x2b
  422e83:	mov    BYTE PTR [edx+ebp*8],al
  422e86:	ins    DWORD PTR es:[edi],dx
  422e87:	pusha  
  422e88:	sbb    BYTE PTR [ecx-0x62],0x4f
  422e8c:	out    0xfa,eax
  422e8e:	imul   eax,DWORD PTR [ebp*1-0x70f766b2],0x93f64a83
  422e99:	jp     0x422e51
  422e9b:	fcomp  QWORD PTR [edi+ebp*2]
  422e9e:	rol    cl,0x28
  422ea1:	call   0xf52c:0xaecab0c5
  422ea8:	popf   
  422ea9:	or     BYTE PTR [eax+edx*8-0x78],0x80
  422eae:	fisubr DWORD PTR [esi-0xe5d278f]
  422eb4:	mov    ch,0xd8
  422eb6:	xor    eax,0x98fd379b
  422ebb:	pop    ebp
  422ebc:	adc    DWORD PTR [eax+0x7e0d9f88],esp
  422ec2:	mov    ebx,0xc36ebd08
  422ec7:	add    ch,BYTE PTR [edi+0x2c6dff87]
  422ecd:	and    edx,DWORD PTR [edx-0x19a53ded]
  422ed3:	jb     0x422f51
  422ed5:	and    edx,edx
  422ed7:	es sahf 
  422ed9:	cld    
  422eda:	lods   al,BYTE PTR ds:[esi]
  422edb:	jl     0x422f36
  422edd:	ja     0x422e69
  422edf:	mov    DWORD PTR [edi+0x251f0a7c],ebp
  422ee5:	ror    DWORD PTR [edx],cl
  422ee7:	sbb    BYTE PTR [esi+0x5ca8d816],dl
  422eed:	mov    ah,0xed
  422eef:	jl     0x422f26
  422ef1:	fbstp  TBYTE PTR [ebx+ecx*8-0x75]
  422ef5:	out    0x3b,al
  422ef7:	cmp    eax,0x1da81ece
  422efc:	aad    0xc1
  422efe:	lock cld 
  422f00:	mov    WORD PTR [eax-0x31cc6569],cs
  422f06:	sub    al,0xaa
  422f08:	data16 sahf 
  422f0a:	lods   eax,DWORD PTR ds:[esi]
  422f0b:	push   ds
  422f0c:	shr    DWORD PTR [esi-0x2a],1
  422f0f:	vaddsubps ymm3,ymm4,YMMWORD PTR [ecx+0x2d]
  422f14:	jb     0x422f15
  422f16:	dec    ebx
  422f17:	jg     0x422eee
  422f19:	adc    al,0xf3
  422f1b:	or     eax,0xfe64c5a7
  422f20:	icebp  
  422f21:	pop    esp
  422f22:	lahf   
  422f23:	jne    0x422ea6
  422f25:	loope  0x422f52
  422f27:	add    edi,DWORD PTR [edi]
  422f29:	ror    DWORD PTR [edx+0x7dfc9d71],cl
  422f2f:	out    dx,al
  422f30:	pslld  mm7,QWORD PTR [ebp-0x5dd4df27]
  422f37:	jp     0x422fb2
  422f39:	es pusha 
  422f3b:	fdiv   QWORD PTR [esi+0x61]
  422f3e:	cmp    DWORD PTR [eax+0x63],eax
  422f41:	cmp    BYTE PTR ds:0x52adbb05,al
  422f47:	xor    DWORD PTR [esi-0x61],eax
  422f4a:	leave  
  422f4b:	popa   
  422f4c:	pop    edi
  422f4d:	push   ecx
  422f4e:	setnp  BYTE PTR [ebx-0x75]
  422f52:	or     BYTE PTR [esi],bh
  422f54:	sbb    eax,0xa9f73e65
  422f59:	sub    BYTE PTR [eax+edx*8],bl
  422f5c:	or     ah,bl
  422f5e:	or     al,dl
  422f60:	add    esi,ebx
  422f62:	popf   
  422f63:	sti    
  422f64:	or     al,0xb8
  422f66:	iret   
  422f67:	mov    ch,al
  422f69:	ins    DWORD PTR es:[edi],dx
  422f6a:	in     eax,0xd
  422f6c:	cdq    
  422f6d:	int    0xd4
  422f6f:	add    edi,0x99fb4288
  422f75:	xlat   BYTE PTR ds:[ebx]
  422f76:	in     al,0xba
  422f78:	mov    ds:0xac2dff3c,al
  422f7d:	ds ds cmp edx,ebp
  422f81:	aam    0x4
  422f83:	dec    edx
  422f84:	inc    esi
  422f85:	push   0x19
  422f87:	ret    0xe450
  422f8a:	stc    
  422f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8c:	shr    BYTE PTR [edx+0x54df71ea],cl
  422f92:	inc    esp
  422f93:	mov    ah,0xfc
  422f95:	into   
  422f96:	mov    edx,gs
  422f98:	sbb    ch,al
  422f9a:	adc    DWORD PTR [eax+esi*2-0x446dab73],ecx
  422fa1:	iret   
  422fa2:	push   DWORD PTR [esi]
  422fa4:	loop   0x422fdb
  422fa6:	push   ss
  422fa7:	dec    ebp
  422fa8:	shl    DWORD PTR ds:0x1b02ca7b,0x58
  422faf:	cmp    ebx,DWORD PTR [esi-0x266bdcfc]
  422fb5:	mov    bh,0xf3
  422fb7:	rcr    BYTE PTR [ebx+ecx*1-0x73],cl
  422fbb:	pusha  
  422fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbd:	ins    BYTE PTR es:[edi],dx
  422fbe:	imul   esi,DWORD PTR [edx+0x43],0xffffffca
  422fc2:	sbb    BYTE PTR [ebx+0x7a1803a0],0xf
  422fc9:	mov    al,ds:0xc76165a2
  422fce:	in     al,0x31
  422fd0:	xchg   ah,ah
  422fd2:	fs mov cl,0x16
  422fd5:	cmc    
  422fd6:	(bad)  
  422fd8:	sar    BYTE PTR cs:[esi],cl
  422fdb:	rcl    esp,1
  422fdd:	ins    BYTE PTR es:[edi],dx
  422fde:	stos   DWORD PTR es:[edi],eax
  422fdf:	jo     0x423052
  422fe1:	nop
  422fe2:	popf   
  422fe3:	je     0x423059
  422fe5:	mov    dl,0xaf
  422fe7:	fwait
  422fe8:	out    0xc6,al
  422fea:	pop    ecx
  422feb:	nop
  422fec:	loop   0x422fd6
  422fee:	push   cs
  422fef:	or     al,0xab
  422ff1:	mov    esp,0xdc9c630
  422ff6:	push   edi
  422ff7:	jge    0x42303f
  422ff9:	push   cs
  422ffa:	pop    es
  422ffb:	mov    eax,0x1b540db8
  423000:	push   0xffffff88
  423002:	mov    ?,edi
  423004:	sub    BYTE PTR [ebx-0x4e],ch
  423007:	pop    ecx
  423008:	outs   dx,DWORD PTR ds:[esi]
  423009:	add    al,0x32
  42300b:	lods   al,BYTE PTR ds:[esi]
  42300c:	imul   eax,eax,0xffffffc6
  42300f:	sti    
  423010:	pop    ebx
  423011:	enter  0xae93,0x53
  423015:	or     DWORD PTR [esi+0x60],esi
  423018:	ret    
  423019:	outs   dx,BYTE PTR ds:[si]
  42301b:	int3   
  42301c:	popf   
  42301d:	dec    edi
  42301e:	adc    BYTE PTR [ecx+edx*1+0x6e8632e5],dh
  423025:	dec    edx
  423026:	mov    DWORD PTR [eax+eax*8-0x75],esp
  42302a:	aas    
  42302b:	pop    edi
  42302c:	jne    0x422feb
  42302e:	xchg   ebp,eax
  42302f:	ret    0xb824
  423032:	aas    
  423033:	mov    DWORD PTR [edx+eax*2+0x76],edi
  423037:	repz dec ebp
  423039:	aad    0xb0
  42303b:	cdq    
  42303c:	in     eax,dx
  42303d:	push   ecx
  42303e:	repz sbb al,0xa3
  423041:	retf   0x4870
  423044:	out    dx,al
  423045:	out    0x3a,al
  423047:	adc    BYTE PTR [ebp+0x71ceab7e],cl
  42304d:	inc    esi
  42304e:	lahf   
  42304f:	int3   
  423050:	lods   al,BYTE PTR ds:[esi]
  423051:	xchg   esp,eax
  423052:	hlt    
  423053:	dec    ecx
  423054:	xchg   ecx,eax
  423055:	enter  0xdbdb,0x6b
  423059:	push   edi
  42305a:	scas   al,BYTE PTR es:[edi]
  42305b:	lods   al,BYTE PTR ds:[esi]
  42305c:	push   ecx
  42305d:	adc    ebp,edi
  42305f:	cld    
  423060:	mov    ecx,0xe589f11
  423065:	sub    BYTE PTR [ebx+0x20],dl
  423068:	sbb    eax,0xccf406c
  42306d:	and    ebp,DWORD PTR gs:[edx]
  423070:	pushf  
  423071:	mov    dl,0xb8
  423073:	xlat   BYTE PTR ds:[ebx]
  423074:	in     eax,0x40
  423076:	and    al,0xd9
  423078:	in     al,dx
  423079:	jne    0x423096
  42307b:	sbb    bl,bh
  42307d:	sar    bl,0x46
  423080:	(bad)  
  423081:	pop    ss
  423082:	sbb    BYTE PTR [ebp+0x2e377174],al
  423088:	jae    0x423044
  42308a:	jo     0x423095
  42308c:	leave  
  42308d:	and    eax,0x94b78514
  423092:	jp     0x42306c
  423094:	icebp  
  423095:	hlt    
  423096:	fbld   TBYTE PTR [eax-0x37]
  423099:	add    al,0x73
  42309b:	icebp  
  42309c:	push   ds
  42309d:	push   ds
  42309e:	sbb    ebx,DWORD PTR [esi+0x5107ee8f]
  4230a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a5:	xor    al,0x83
  4230a7:	sub    DWORD PTR [ebx],edx
  4230a9:	test   al,0x99
  4230ab:	popf   
  4230ac:	pop    ss
  4230ad:	(bad)  
  4230ae:	test   al,0x7f
  4230b0:	lock pop edi
  4230b2:	fisttp DWORD PTR [ebx]
  4230b4:	in     eax,dx
  4230b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b6:	pop    ecx
  4230b7:	adc    ah,dl
  4230b9:	(bad)  
  4230ba:	hlt    
  4230bb:	call   0x7c97:0x9e85533
  4230c2:	(bad)  
  4230c3:	mov    cl,0x67
  4230c5:	mov    WORD PTR es:[ecx-0x76],es
  4230c9:	pop    esp
  4230ca:	loopne 0x4230a4
  4230cc:	xor    eax,0x1cb6b419
  4230d1:	pop    ebp
  4230d2:	xchg   edi,eax
  4230d3:	out    0x28,eax
  4230d5:	loop   0x4230fd
  4230d7:	xor    al,0x8a
  4230d9:	xchg   BYTE PTR [ebx+0x3f6f7a2c],cl
  4230df:	sbb    dl,BYTE PTR [eax+0x60]
  4230e2:	xor    DWORD PTR [eax-0x4a],edx
  4230e5:	and    al,0xfc
  4230e7:	xor    eax,0x3b484079
  4230ec:	sub    eax,0x5e9a7728
  4230f1:	mov    ebp,0xbf1d5841
  4230f6:	js     0x4230c9
  4230f8:	outs   dx,DWORD PTR ds:[esi]
  4230f9:	inc    edx
  4230fa:	(bad)  
  4230fb:	jmp    0x4230cb
  4230fd:	mov    dl,0x14
  4230ff:	push   eax
  423100:	xchg   esi,eax
  423101:	mov    edx,gs
  423103:	mov    dh,0x29
  423105:	push   es
  423106:	call   0x7993:0xb2e8749d
  42310d:	jns    0x423146
  42310f:	in     al,0xae
  423111:	sub    ah,BYTE PTR [esi]
  423113:	or     DWORD PTR [eax-0x34],eax
  423116:	cmp    al,0x2d
  423118:	xchg   esi,eax
  423119:	dec    edx
  42311a:	mov    al,0x56
  42311c:	(bad)  
  42311d:	fcmovbe st,st(6)
  42311f:	and    DWORD PTR [edi-0x16842f2b],ebp
  423125:	cmp    eax,0x18167940
  42312a:	pop    ecx
  42312b:	dec    eax
  42312c:	jmp    0x82fc:0x819c0680
  423133:	leave  
  423134:	add    edx,DWORD PTR [ecx+0x1306f3da]
  42313a:	or     BYTE PTR [edx-0x56ee5e0a],bh
  423140:	lds    ebp,FWORD PTR [esi]
  423142:	rcl    DWORD PTR [edx-0x7],cl
  423145:	cld    
  423146:	addr16 jl 0x42316c
  423149:	cmp    edx,DWORD PTR [ebp+edi*8-0x7e]
  42314d:	addr16 mov edi,0x354a1186
  423153:	cmp    bh,BYTE PTR [ebx+eax*2]
  423156:	pop    ss
  423157:	mov    edx,0xe45f7c5b
  42315c:	aas    
  42315d:	add    DWORD PTR [edx+ecx*4],ebp
  423160:	(bad)  
  423161:	adc    al,0x83
  423163:	push   edi
  423164:	mov    esi,0x3bb22980
  423169:	xchg   ebp,eax
  42316a:	add    eax,0x234bc650
  42316f:	(bad)
  423172:	inc    ecx
  423173:	gs jns 0x4231b6
  423176:	cmp    eax,0x67563e3d
  42317b:	push   esp
  42317c:	and    DWORD PTR [esi+0x1352a82],ebx
  423182:	jne    0x423110
  423184:	and    cl,BYTE PTR [esi]
  423186:	cmp    ch,BYTE PTR [ecx+0x1ab8b9ca]
  42318c:	stc    
  42318d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42318e:	dec    eax
  42318f:	mov    eax,ds:0x1da56dde
  423194:	xor    DWORD PTR fs:0x7579b975,ecx
  42319b:	leave  
  42319c:	pop    edi
  42319d:	push   ebp
  42319e:	add    DWORD PTR [ecx-0x55fbdd40],ebp
  4231a4:	popa   
  4231a5:	mov    ebp,0x2670d22b
  4231aa:	imul   eax,DWORD PTR [ebx],0xa5a5e4e8
  4231b0:	add    bh,dh
  4231b2:	jae    0x42316f
  4231b4:	(bad)  
  4231b5:	xor    eax,0xfa7d1fbc
  4231ba:	xchg   ecx,eax
  4231bb:	jle    0x42320f
  4231bd:	pop    ecx
  4231be:	and    esp,DWORD PTR [ecx]
  4231c0:	mov    ds:0x158a526f,al
  4231c5:	push   es
  4231c6:	je     0x4231b1
  4231c8:	adc    ebx,DWORD PTR [edx-0x22]
  4231cb:	aas    
  4231cc:	jge    0x423242
  4231ce:	sub    eax,DWORD PTR [edi-0x6f]
  4231d1:	and    DWORD PTR [esi-0x31],edx
  4231d4:	dec    ebx
  4231d5:	mov    dl,0xc9
  4231d7:	pusha  
  4231d8:	inc    edx
  4231d9:	jns    0x4231eb
  4231db:	mov    BYTE PTR [edi-0x2adc471f],bl
  4231e1:	cmc    
  4231e2:	dec    edx
  4231e3:	inc    edx
  4231e4:	in     eax,0x3f
  4231e6:	mov    ds:0x11298080,eax
  4231eb:	sub    ah,dh
  4231ed:	shr    BYTE PTR [eax],1
  4231ef:	inc    ebx
  4231f0:	stc    
  4231f1:	aas    
  4231f2:	jnp    0x4231d6
  4231f4:	jle    0x4231ec
  4231f6:	(bad)  [eax]
  4231f8:	(bad)  
  4231f9:	out    dx,eax
  4231fa:	or     al,0x30
  4231fc:	loopne 0x4231df
  4231fe:	sbb    DWORD PTR [edx],edx
  423200:	cmc    
  423201:	push   ss
  423202:	in     eax,0x30
  423204:	loopne 0x4231e8
  423206:	xor    eax,0x337ba8cb
  42320b:	inc    ebp
  42320c:	cmp    DWORD PTR [eax+0x629c0d7c],ebp
  423212:	jmp    0x423292
  423214:	jle    0x42320d
  423216:	pop    ecx
  423217:	cmp    ecx,DWORD PTR [ebx]
  423219:	(bad)  
  42321a:	mov    al,0xb7
  42321c:	in     al,0xbc
  42321e:	xchg   ecx,eax
  42321f:	data16 stos BYTE PTR es:[edi],al
  423221:	daa    
  423222:	call   0xd041:0x4ef403de
  423229:	xor    bh,BYTE PTR ds:0x3ddf31e
  42322f:	push   esp
  423230:	call   0x7a9:0x5497a8a1
  423237:	sbb    DWORD PTR [ebp+0x26],edx
  42323a:	and    cl,BYTE PTR [ebx]
  42323c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42323d:	dec    edi
  42323e:	call   FWORD PTR [ebx+0x540eb444]
  423244:	push   ecx
  423245:	pop    eax
  423246:	test   eax,0xdf146c65
  42324b:	leave  
  42324c:	mov    ch,0x73
  42324e:	cmp    BYTE PTR [ecx+0x17940797],dl
  423254:	pop    esp
  423255:	clc    
  423256:	pushf  
  423257:	in     eax,0x3e
  423259:	mov    ebx,0xf1953e13
  42325e:	adc    eax,0x8870cc1e
  423263:	fidiv  DWORD PTR [ebp+0x52]
  423266:	aam    0xcd
  423268:	icebp  
  423269:	pushf  
  42326a:	add    DWORD PTR [ecx+0x617e20f9],edi
  423270:	fadd   QWORD PTR [edx+0x52]
  423273:	lea    ebp,[ecx]
  423275:	fwait
  423276:	leave  
  423277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423278:	lock push edx
  42327a:	add    edi,0xffffffa9
  42327d:	out    dx,eax
  42327e:	cmp    DWORD PTR [ebx+0x1],ebp
  423281:	aas    
  423282:	in     al,dx
  423283:	lods   ax,WORD PTR ds:[esi]
  423285:	je     0x4232f9
  423287:	pop    ss
  423288:	(bad)  
  423289:	mov    ah,BYTE PTR [ebx]
  42328b:	(bad)  
  42328c:	cld    
  42328d:	jae    0x423257
  42328f:	shl    BYTE PTR [ebx+0x1a],1
  423292:	out    dx,eax
  423293:	int    0x80
  423295:	(bad)  
  423296:	mov    ds:0x3be9c897,eax
  42329b:	cdq    
  42329c:	test   BYTE PTR [ebx],ah
  42329e:	(bad)  
  42329f:	push   0x3d822361
  4232a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232a5:	pop    esi
  4232a6:	int    0x9d
  4232a8:	xchg   DWORD PTR [ecx+edx*4+0x741bf982],esi
  4232af:	out    dx,al
  4232b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232b1:	xor    ebx,DWORD PTR [esi+0x6a1733f3]
  4232b7:	jo     0x4232ca
  4232b9:	xor    eax,0x6f48e8a7
  4232be:	iret   
  4232bf:	out    dx,eax
  4232c0:	pusha  
  4232c1:	nop
  4232c2:	push   eax
  4232c3:	xor    al,0x81
  4232c5:	(bad)  
  4232c6:	mov    edx,0xcf97a385
  4232cb:	(bad)  
  4232cd:	lock add ebp,DWORD PTR [eax]
  4232d0:	imul   eax,ecx,0xfffffff6
  4232d3:	push   ebp
  4232d4:	pop    edi
  4232d5:	sbb    ebp,DWORD PTR [esi+eax*1-0x6be40e61]
  4232dc:	popf   
  4232dd:	(bad)  
  4232de:	out    0xf5,eax
  4232e0:	sbb    edx,esi
  4232e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232e3:	mov    ch,0xf6
  4232e5:	out    0x1b,al
  4232e7:	cmp    cl,ch
  4232e9:	cmp    bl,dl
  4232eb:	dec    edi
  4232ec:	mov    edx,DWORD PTR [edi+0x5cedecf0]
  4232f2:	cdq    
  4232f3:	jae    0x423364
  4232f5:	cli    
  4232f6:	sbb    BYTE PTR [edx],ah
  4232f8:	ror    DWORD PTR [esi-0x5],cl
  4232fb:	addr16 sbb esi,0x2d
  4232ff:	cs fsubp st(1),st
  423302:	pop    es
  423303:	pop    ebx
  423304:	dec    ecx
  423305:	push   DWORD PTR [edi-0x3c61a392]
  42330b:	lds    edx,FWORD PTR fs:[edi+ecx*1]
  42330f:	sbb    bl,BYTE PTR [eax]
  423311:	xchg   esp,eax
  423312:	push   edx
  423313:	cmp    eax,0xfe374ab1
  423318:	fild   WORD PTR [edx]
  42331a:	mov    ebx,0xae18b74d
  42331f:	inc    esi
  423320:	ret    0xfc3c
  423323:	xchg   edx,eax
  423324:	push   ds
  423325:	cli    
  423326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423327:	inc    ebx
  423328:	xor    esi,DWORD PTR [edi-0x484e35d8]
  42332e:	push   0x61
  423330:	int    0x4f
  423332:	xchg   edx,eax
  423333:	repnz cmp eax,0x86bbc337
  423339:	sub    eax,0xca0ec23f
  42333e:	adc    esi,ebx
  423340:	loope  0x423354
  423342:	add    BYTE PTR [ecx+0x3acba16e],ch
  423348:	fdivr  QWORD PTR [edx]
  42334a:	pop    ebx
  42334b:	call   0x66a0de1e
  423350:	hlt    
  423351:	add    eax,0x4945ed21
  423356:	mov    eax,0x6441e965
  42335b:	lds    ebp,FWORD PTR [bx-0x1bca]
  423360:	mov    WORD PTR [edi+0x3ce9bad3],cs
  423366:	ret    0xc25
  423369:	scas   al,BYTE PTR es:[edi]
  42336a:	repnz and DWORD PTR [si+0x4b],0x23
  423370:	sbb    ah,BYTE PTR [ecx+0x49]
  423373:	mov    dl,0x16
  423375:	jae    0x423326
  423377:	jo     0x42337c
  423379:	mov    ebp,0x6b19fbd3
  42337e:	fdivr  st(2),st
  423380:	pop    eax
  423381:	add    DWORD PTR [ebp-0x64],eax
  423384:	imul   ecx,DWORD PTR [esp+edx*2],0x5b43d64
  42338b:	scas   eax,DWORD PTR es:[edi]
  42338c:	jmp    0x4cab522
  423391:	xchg   esi,eax
  423392:	sbb    eax,0xd9dfdf9b
  423397:	push   ecx
  423398:	in     al,0x13
  42339a:	add    al,0x66
  42339c:	inc    BYTE PTR [ecx]
  42339e:	bound  eax,QWORD PTR [edi-0x7f]
  4233a1:	(bad)  
  4233a2:	aas    
  4233a3:	dec    ebp
  4233a4:	cmp    DWORD PTR [eax+0x66],eax
  4233a7:	out    0x56,eax
  4233a9:	daa    
  4233aa:	shl    BYTE PTR [edx-0x4798dd8d],1
  4233b0:	xor    BYTE PTR [ebp+eiz*2+0x4638bf9e],bh
  4233b7:	cmp    DWORD PTR [eax+0x205c46a9],edi
  4233bd:	addr16 jne 0x423406
  4233c0:	push   0xffffffee
  4233c2:	cli    
  4233c3:	sbb    edx,DWORD PTR [edx]
  4233c5:	inc    esi
  4233c6:	mov    ebx,0xa906dc1e
  4233cb:	xchg   ebx,esi
  4233cd:	mov    bh,0x5
  4233cf:	les    ecx,FWORD PTR [eax-0x3aac8cd8]
  4233d5:	sahf   
  4233d6:	add    eax,0xe289134e
  4233db:	loop   0x42344a
  4233dd:	xchg   esp,eax
  4233de:	mov    ch,0x1b
  4233e0:	and    ch,BYTE PTR [ecx-0x2177f316]
  4233e6:	adc    cl,dl
  4233e8:	aaa    
  4233e9:	xchg   esp,esi
  4233eb:	mov    ah,0x93
  4233ed:	cli    
  4233ee:	dec    ebx
  4233ef:	mov    al,0x48
  4233f1:	outs   dx,BYTE PTR ds:[esi]
  4233f2:	sub    ch,BYTE PTR [esi-0x2642a641]
  4233f8:	sub    al,0x68
  4233fa:	mov    cl,0x28
  4233fc:	arpl   WORD PTR [edx],bx
  4233fe:	std    
  4233ff:	ins    DWORD PTR es:[edi],dx
  423400:	jp     0x4233b1
  423402:	loopne 0x4233f4
  423404:	xchg   ebp,eax
  423405:	scas   eax,DWORD PTR es:[edi]
  423406:	mov    dh,0x57
  423408:	hlt    
  423409:	ret    0x3422
  42340c:	test   eax,0xc4b9e2ff
  423411:	(bad)  
  423412:	pop    esi
  423413:	lds    edi,FWORD PTR [esi+0x6c]
  423416:	std    
  423417:	and    al,0x23
  423419:	pop    esi
  42341a:	aam    0x7
  42341c:	mov    bl,0xa0
  42341e:	outs   dx,DWORD PTR ds:[esi]
  42341f:	add    BYTE PTR [ebx-0x661c95f2],dl
  423425:	test   BYTE PTR [ecx+0x56],bh
  423428:	mov    esi,0xaa5aec70
  42342d:	add    al,0xc2
  42342f:	stc    
  423430:	fwait
  423431:	xchg   edx,eax
  423432:	cwde   
  423433:	ret    0x9c99
  423436:	loopne 0x42341a
  423438:	call   0x3a8d:0xf32ab465
  42343f:	jo     0x423429
  423441:	sub    esp,0xffffffcc
  423444:	add    DWORD PTR [edi],ecx
  423446:	sub    al,0x78
  423448:	xchg   ebx,eax
  423449:	pop    eax
  42344a:	fisttp DWORD PTR [ebx+ebp*2-0x4d67997d]
  423451:	adc    al,0xe6
  423453:	test   ch,dh
  423455:	add    ecx,ecx
  423457:	and    eax,0x4f7e824a
  42345c:	jno    0x4234cc
  42345e:	xor    al,BYTE PTR [ebx+0x33]
  423461:	or     ecx,ecx
  423463:	lea    esp,[edx+0x0]
  423466:	and    BYTE PTR [eax-0x559468ba],dl
  42346c:	jmp    0x423461
  42346e:	sub    edi,DWORD PTR [edx+0x6d]
  423471:	adc    BYTE PTR [ecx-0x1c],ch
  423474:	test   al,0x5e
  423476:	lds    eax,FWORD PTR [ecx-0x1d]
  423479:	stos   DWORD PTR es:[edi],eax
  42347a:	jmp    0xd62a:0x32529be
  423481:	mov    ch,0x37
  423483:	add    eax,0xfb44bcbb
  423488:	call   0x56adeac3
  42348d:	sbb    eax,0xef55c807
  423492:	xchg   ebx,eax
  423493:	dec    edx
  423494:	addr16 test eax,0x934896d9
  42349a:	xor    BYTE PTR [ecx+0x469cd080],cl
  4234a0:	cwde   
  4234a1:	push   ebp
  4234a2:	neg    edi
  4234a4:	lock es push es
  4234a7:	mov    dl,0xae
  4234a9:	jb     0x42343b
  4234ab:	dec    ecx
  4234ac:	pop    ss
  4234ad:	push   edx
  4234ae:	loopne 0x42343f
  4234b0:	jecxz  0x42345a
  4234b2:	xchg   esp,eax
  4234b3:	rcl    DWORD PTR [edx],cl
  4234b5:	mov    edx,0x8fbb56ec
  4234ba:	and    al,0xc1
  4234bc:	add    dh,BYTE PTR [ebx+0x73]
  4234bf:	retf   
  4234c0:	pop    esi
  4234c1:	mov    edx,0xfb0a4921
  4234c6:	adc    eax,0x53d76736
  4234cb:	aaa    
  4234cc:	inc    ebx
  4234cd:	mov    ?,ebp
  4234cf:	sub    BYTE PTR [esi-0x214f8f27],al
  4234d5:	sbb    DWORD PTR [edx+0x1d422157],ebx
  4234db:	mov    DWORD PTR [ecx],eax
  4234dd:	loop   0x42353d
  4234df:	xor    al,0x1f
  4234e1:	aas    
  4234e2:	sub    eax,0xa629e6fe
  4234e7:	jle    0x423563
  4234e9:	sub    BYTE PTR [ecx],0x7
  4234ec:	xor    al,0xd4
  4234ee:	mov    ebx,0xa4247414
  4234f3:	stos   BYTE PTR es:[edi],al
  4234f4:	mov    BYTE PTR [ebp+edx*1-0x7f5a4af9],ah
  4234fb:	push   ebx
  4234fc:	adc    edx,eax
  4234fe:	or     BYTE PTR [edx-0x2c],ch
  423501:	addr16 adc al,0x66
  423504:	xchg   DWORD PTR [edx],esi
  423506:	and    eax,0x2d36bfb4
  42350b:	jno    0x4234ca
  42350d:	out    dx,al
  42350e:	mov    ds:0xc49e9234,eax
  423513:	shl    BYTE PTR [ecx+edi*8-0x27],0xf8
  423518:	add    al,0x3c
  42351a:	rol    BYTE PTR [edi+0x615554b7],cl
  423520:	(bad)  
  423521:	test   BYTE PTR ds:0x97375650,0x5b
  423528:	les    eax,FWORD PTR [edx]
  42352a:	jb     0x423549
  42352c:	es jmp 0xe921:0xb3e600d6
  423534:	and    eax,0xa135cfde
  423539:	jg     0x42353a
  42353b:	dec    edx
  42353c:	or     eax,0x44514613
  423541:	shl    ebx,0xaf
  423544:	cmp    bh,BYTE PTR [ebp+ebp*2+0xd]
  423548:	pop    edx
  423549:	or     al,0x48
  42354b:	add    BYTE PTR [ebx],ch
  42354d:	aam    0x25
  42354f:	sub    edx,esi
  423551:	mov    edi,0xbfa5a469
  423556:	jge    0x423581
  423558:	in     eax,0xc3
  42355a:	mov    cl,0xf
  42355c:	repnz outs dx,DWORD PTR ds:[esi]
  42355e:	icebp  
  42355f:	mov    ah,0xc
  423561:	int3   
  423562:	push   DWORD PTR [ecx+0x38]
  423565:	jae    0x423506
  423567:	rol    DWORD PTR [ecx-0x56],1
  42356a:	mov    dl,0xb3
  42356c:	or     ebp,DWORD PTR [ebx]
  42356e:	and    al,0x30
  423570:	mov    bh,0xc
  423572:	test   DWORD PTR [ebx-0x64],edx
  423575:	push   edi
  423576:	xchg   esi,eax
  423577:	xchg   BYTE PTR [eax],dh
  423579:	xchg   esi,eax
  42357a:	int3   
  42357b:	hlt    
  42357c:	sub    esi,ecx
  42357e:	sub    DWORD PTR [edx-0x47],esp
  423581:	std    
  423582:	xor    ch,BYTE PTR [esi+eax*8]
  423585:	test   eax,0x4af4b0ee
  42358a:	aam    0xfc
  42358c:	retf   
  42358d:	or     al,0x93
  42358f:	in     al,0x54
  423591:	cs pop esp
  423593:	cmp    DWORD PTR [esi-0x5230b5e0],ebx
  423599:	scas   eax,DWORD PTR es:[edi]
  42359a:	ja     0x42359f
  42359c:	lods   eax,DWORD PTR ds:[esi]
  42359d:	add    esp,DWORD PTR [ecx]
  42359f:	test   BYTE PTR [ecx-0x3e],dh
  4235a2:	mov    edx,0xbfe04888
  4235a7:	mov    ds:0xb66e9afe,eax
  4235ac:	daa    
  4235ad:	add    al,0x37
  4235af:	(bad)  
  4235b0:	enter  0xe2ad,0xf9
  4235b4:	shl    DWORD PTR [eax-0x457f56ae],1
  4235ba:	retf   
  4235bb:	mov    dh,0x48
  4235bd:	xchg   edi,eax
  4235be:	or     cl,0xee
  4235c1:	test   eax,0x24f8863f
  4235c6:	jo     0x4235cf
  4235c8:	in     eax,0xfc
  4235ca:	cld    
  4235cb:	lahf   
  4235cc:	stos   DWORD PTR es:[edi],eax
  4235cd:	inc    edi
  4235ce:	add    ch,bh
  4235d0:	fmul   DWORD PTR [ebx]
  4235d2:	mov    dh,0x8
  4235d4:	add    esp,ebx
  4235d6:	pusha  
  4235d7:	pop    ebx
  4235d8:	int3   
  4235d9:	sbb    al,0xd5
  4235db:	adc    bl,BYTE PTR [esi-0xf94c586]
  4235e1:	scas   eax,DWORD PTR es:[edi]
  4235e2:	pop    edi
  4235e3:	icebp  
  4235e4:	ror    BYTE PTR [eax-0x4dad4eb0],0xa2
  4235eb:	mov    ds:0x2313145,al
  4235f0:	and    esi,DWORD PTR [edi]
  4235f2:	jmp    0xd75608a3
  4235f7:	popa   
  4235f8:	xor    al,0x3b
  4235fa:	xchg   esp,eax
  4235fb:	jnp    0x42358c
  4235fd:	jp     0x423650
  4235ff:	mov    ecx,0x6b8093c8
  423604:	sbb    bh,BYTE PTR [esp+eiz*2+0x70a8d775]
  42360b:	mov    esi,cs
  42360d:	ud1    esi,esp
  423610:	daa    
  423611:	or     ebx,esp
  423613:	sbb    BYTE PTR [ebx-0x76],0xaa
  423617:	adc    edx,ecx
  423619:	aad    0xf9
  42361b:	mov    esi,0xd835c1be
  423620:	add    BYTE PTR [edx+ebx*8-0x38],cl
  423624:	adc    DWORD PTR [eax-0x47e730d6],ebp
  42362a:	ins    BYTE PTR es:[edi],dx
  42362b:	push   DWORD PTR [eax+0x29fe52f5]
  423631:	gs pop es
  423633:	fisubr WORD PTR [edi]
  423635:	in     eax,dx
  423636:	mov    esi,0x8d296e2d
  42363b:	mov    ah,BYTE PTR [ebp+0x4aa91e2c]
  423641:	test   eax,ebp
  423643:	lods   al,BYTE PTR ds:[esi]
  423644:	push   ecx
  423645:	outs   dx,DWORD PTR ds:[esi]
  423646:	test   al,0xca
  423648:	nop
  423649:	push   eax
  42364a:	mov    ebx,0x60d41a45
  42364f:	ds adc ah,BYTE PTR gs:[eax]
  423653:	cdq    
  423654:	bound  ebp,QWORD PTR [edi]
  423656:	rcr    BYTE PTR [ecx+0x78b1b80c],1
  42365c:	dec    esp
  42365d:	or     al,0xc7
  42365f:	xchg   ebp,eax
  423660:	stos   BYTE PTR es:[edi],al
  423661:	in     eax,dx
  423662:	or     al,0x26
  423664:	xor    al,0x64
  423666:	repnz aad 0x97
  423669:	inc    si
  42366b:	jecxz  0x423680
  42366d:	push   esp
  42366e:	jo     0x4236bb
  423670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423671:	xchg   esp,eax
  423672:	sbb    BYTE PTR [edi],0x31
  423675:	mov    eax,ds:0x4447a77b
  42367a:	bound  eax,QWORD PTR [ebx+0x5c38b2f]
  423680:	pop    ebx
  423681:	mov    ebp,0x97bfcf75
  423686:	mov    DWORD PTR [edi+0x4caf6ef8],esp
  42368c:	mov    dh,BYTE PTR [esi+edi*2]
  42368f:	sti    
  423690:	in     eax,0xd1
  423692:	(bad)  
  423693:	in     eax,0xa0
  423695:	adc    esp,DWORD PTR [ecx]
  423697:	aas    
  423698:	jno    0x42363c
  42369a:	add    esp,edi
  42369c:	xchg   dl,bh
  42369e:	call   0x7853:0x133018e8
  4236a5:	cmp    cl,cl
  4236a7:	int    0x9f
  4236a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236aa:	xor    bl,BYTE PTR [ebx+0x8c164d2]
  4236b0:	into   
  4236b1:	fwait
  4236b2:	cmp    edi,eax
  4236b4:	fs dec eax
  4236b6:	leave  
  4236b7:	scas   al,BYTE PTR es:[edi]
  4236b8:	sub    ch,BYTE PTR [ebx-0x49]
  4236bb:	inc    eax
  4236bc:	out    dx,al
  4236bd:	nop
  4236be:	loop   0x4236cc
  4236c0:	jl     0x4236f0
  4236c2:	jp     0x42371e
  4236c4:	mov    bl,0x6c
  4236c6:	fwait
  4236c7:	push   ecx
  4236c8:	sti    
  4236c9:	inc    ebx
  4236ca:	mul    ecx
  4236cc:	in     eax,0xab
  4236ce:	ret    
  4236cf:	sbb    ch,dl
  4236d1:	clc    
  4236d2:	and    ecx,DWORD PTR [edx+0x7]
  4236d5:	clc    
  4236d6:	cdq    
  4236d7:	push   0x9
  4236d9:	es sti 
  4236db:	and    BYTE PTR [edi+0x45bf01d],0x31
  4236e2:	div    BYTE PTR [ebx+eiz*1-0x3797b077]
  4236e9:	fdivrp st(3),st
  4236eb:	or     al,0xcd
  4236ed:	inc    ecx
  4236ee:	xor    ch,cl
  4236f0:	jl     0x4236db
  4236f2:	push   ecx
  4236f3:	jne    0x423750
  4236f5:	mov    bh,0xf
  4236f7:	or     ch,cl
  4236f9:	pop    ecx
  4236fa:	cmp    eax,0x316c31a6
  4236ff:	mov    ch,0xcd
  423701:	or     ecx,0x7
  423704:	repnz repnz adc al,0xae
  423708:	mov    ecx,esp
  42370a:	xor    esi,0xffffffcf
  42370d:	fxch   st(3)
  42370f:	sbb    al,0x9f
  423711:	inc    eax
  423712:	test   DWORD PTR [ecx+0x2a25bb35],ebx
  423718:	stc    
  423719:	sahf   
  42371a:	rcl    ah,cl
  42371c:	repz out dx,al
  42371e:	or     al,0x6d
  423720:	cli    
  423721:	fwait
  423722:	sbb    al,0x6c
  423724:	inc    esi
  423725:	rcr    edi,cl
  423727:	popf   
  423728:	fidiv  WORD PTR [edi+edi*1+0x6c2c9293]
  42372f:	dec    ecx
  423730:	ds ins DWORD PTR es:[edi],dx
  423732:	icebp  
  423733:	or     ecx,edx
  423735:	mov    esp,0x67718a13
  42373a:	jp     0x4236cf
  42373c:	sub    DWORD PTR [ebx],ebx
  42373e:	sub    eax,0x747bb5a4
  423743:	and    ebx,DWORD PTR [eax]
  423745:	fcmovnbe st,st(3)
  423747:	dec    edx
  423748:	jge    0x423736
  42374a:	cmp    eax,0x3d1a828d
  42374f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423750:	fwait
  423751:	push   0xffffffc0
  423753:	xchg   ecx,eax
  423754:	or     eax,0x385486ec
  423759:	repnz dec esi
  42375b:	sar    DWORD PTR [ecx-0x3238d07a],1
  423761:	lahf   
  423762:	je     0x42377c
  423764:	in     eax,0x1
  423766:	call   0x61fa:0xb652b342
  42376d:	sub    al,0x3b
  42376f:	and    DWORD PTR [ecx+0x54],esp
  423772:	retf   
  423773:	jg     0x423736
  423775:	jmp    0x423798
  423777:	and    ecx,DWORD PTR [esp+edx*1-0x7ce04d5c]
  42377e:	inc    ebp
  42377f:	mov    esi,0xe42b7f35
  423784:	outs   dx,BYTE PTR ds:[esi]
  423785:	jecxz  0x4237c9
  423787:	cld    
  423788:	jne    0x423792
  42378a:	int    0x82
  42378c:	in     eax,0x1e
  42378e:	repz add al,0xfa
  423791:	cmp    al,0x59
  423793:	(bad)  
  423794:	pop    eax
  423795:	das    
  423796:	mov    BYTE PTR [edi+0x5d0a20bb],ch
  42379c:	mov    edi,0x2d97af32
  4237a2:	bound  eax,QWORD PTR ds:[esi-0x32]
  4237a6:	push   es
  4237a7:	push   0x7
  4237a9:	int    0x26
  4237ab:	(bad)  
  4237ac:	gs jae 0x42382a
  4237af:	mov    ebp,0x3b3bda3b
  4237b4:	adc    esp,DWORD PTR [ebp+0x2cc81359]
  4237ba:	sub    dl,BYTE PTR [eax+eax*2-0x4c]
  4237be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237bf:	and    ecx,DWORD PTR [edx+0x1e975eef]
  4237c5:	sub    eax,0xe049532a
  4237ca:	sub    al,0xea
  4237cc:	fs js  0x423787
  4237cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d0:	ins    DWORD PTR es:[edi],dx
  4237d1:	mov    ebx,0x4b0eb391
  4237d6:	hlt    
  4237d7:	stos   BYTE PTR es:[edi],al
  4237d8:	test   eax,0x1293ec51
  4237dd:	push   edx
  4237de:	push   ds
  4237df:	or     eax,0x445e5dd2
  4237e4:	jnp    0x42379f
  4237e6:	sub    BYTE PTR [ebx+ebx*2-0x164977c9],dh
  4237ed:	mov    ?,WORD PTR [ecx]
  4237ef:	js     0x4237f5
  4237f1:	in     eax,dx
  4237f2:	ror    BYTE PTR es:0xbddf616a,cl
  4237f9:	pop    eax
  4237fa:	jae    0x4237f8
  4237fc:	xchg   esi,eax
  4237fd:	aaa    
  4237fe:	inc    edi
  4237ff:	pushf  
  423800:	mov    ah,0x24
  423802:	iret   
  423803:	adc    ebp,DWORD PTR [ebx+0x42b97020]
  423809:	push   es
  42380a:	jae    0x42384a
  42380c:	test   al,0x3f
  42380e:	jl     0x4237fa
  423810:	fcom   DWORD PTR [eax-0x36]
  423813:	jb     0x423864
  423815:	xor    esp,edx
  423817:	sub    eax,DWORD PTR [ebp-0x58be3dce]
  42381d:	xchg   ebx,eax
  42381e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42381f:	add    BYTE PTR [ebp+0x9038cb1],cl
  423825:	adc    dh,dl
  423827:	xchg   ebx,eax
  423828:	xchg   esi,eax
  423829:	iret   
  42382a:	loope  0x423854
  42382c:	xchg   edx,eax
  42382d:	xor    eax,0x247ffd55
  423832:	rcl    DWORD PTR [ebp+0x158ef912],1
  423838:	aam    0x41
  42383a:	dec    esi
  42383b:	fcomp  QWORD PTR [ecx]
  42383d:	loopne 0x4237db
  42383f:	push   0xb5bd1179
  423844:	pusha  
  423845:	fldenv [esi+0x2de7c764]
  42384b:	ins    DWORD PTR es:[edi],dx
  42384c:	ret    0xb190
  42384f:	add    eax,0x2516e11e
  423854:	mov    edi,0xb0b81be2
  423859:	add    al,0x2b
  42385b:	scas   al,BYTE PTR es:[edi]
  42385c:	mov    al,0x11
  42385e:	fdivr  DWORD PTR [esi]
  423860:	sub    BYTE PTR [ecx+0x7909355a],bh
  423866:	sbb    bl,BYTE PTR [edx+0x4ecfbb22]
  42386c:	inc    eax
  42386d:	lea    edi,[eax-0x9]
  423870:	and    BYTE PTR [eax],al
  423872:	mov    dl,0xf3
  423874:	sub    ecx,ecx
  423876:	cld    
  423877:	clc    
  423878:	and    DWORD PTR [ebx-0x67],edx
  42387b:	ret    0x3420
  42387e:	jmp    0x7bcfb2f4
  423883:	jecxz  0x4238f8
  423885:	loop   0x423832
  423887:	scas   al,BYTE PTR es:[edi]
  423888:	ret    0x6294
  42388b:	pusha  
  42388c:	retf   
  42388d:	shr    BYTE PTR [edi],1
  42388f:	mov    al,ds:0xc3ef0715
  423894:	(bad)  
  423895:	dec    esi
  423896:	push   ss
  423897:	jl     0x42390d
  423899:	ret    0x2c42
  42389c:	push   edx
  42389d:	data16 fimul DWORD PTR [eax-0x22bd5987]
  4238a4:	clc    
  4238a5:	xor    al,0xa1
  4238a8:	and    DWORD PTR [edx-0x22],0xffffffed
  4238ac:	lahf   
  4238ad:	shl    DWORD PTR [ebp+0x284c82b7],cl
  4238b3:	fbstp  TBYTE PTR [esi+eiz*2+0x24]
  4238b7:	inc    eax
  4238b8:	std    
  4238b9:	pop    ds
  4238ba:	dec    edi
  4238bb:	(bad)  
  4238bc:	es clc 
  4238be:	shr    DWORD PTR [esi+ebp*1+0xb],1
  4238c2:	ss popf 
  4238c4:	or     eax,edi
  4238c6:	outs   dx,DWORD PTR ds:[esi]
  4238c7:	or     dl,bh
  4238c9:	mov    ebx,0xa4bc1aca
  4238ce:	jle    0x423920
  4238d0:	pop    edx
  4238d1:	dec    eax
  4238d2:	mov    ?,WORD PTR [edx+0x16cc4ff8]
  4238d8:	pop    es
  4238d9:	mov    BYTE PTR [ecx],dl
  4238db:	mov    dh,0x9d
  4238dd:	mov    eax,0xff00699f
  4238e2:	pop    ebp
  4238e3:	pop    eax
  4238e4:	inc    eax
  4238e5:	cmp    al,bl
  4238e7:	pop    ebp
  4238e8:	adc    DWORD PTR [edx],esi
  4238ea:	loope  0x423911
  4238ec:	fistp  QWORD PTR [eax+0x36]
  4238ef:	iret   
  4238f0:	or     edx,0x5b
  4238f3:	mov    dl,0x60
  4238f5:	push   0x1a
  4238f7:	xor    dl,BYTE PTR [edi+edx*8]
  4238fa:	mov    dh,0x57
  4238fc:	jp     0x4238f2
  4238fe:	pop    ebp
  4238ff:	sbb    BYTE PTR [ebx],dl
  423901:	xlat   BYTE PTR ds:[ebx]
  423902:	ret    0xda42
  423905:	hlt    
  423906:	sub    esi,DWORD PTR [ecx]
  423908:	gs (bad) 
  42390a:	mov    ecx,0x9e5feb41
  42390f:	loope  0x4238e0
  423911:	shl    DWORD PTR [esi-0x39],cl
  423914:	cmp    DWORD PTR [edi+0x61],ebp
  423917:	cmp    DWORD PTR ds:0x4907dbf,edi
  42391d:	or     al,BYTE PTR [esi-0x70]
  423920:	inc    edx
  423921:	sub    bl,BYTE PTR [edi-0x6c20f788]
  423927:	nop
  423928:	call   0x9a4a08d0
  42392d:	add    ebp,esi
  42392f:	inc    ebx
  423930:	pop    eax
  423931:	or     BYTE PTR [esi-0xa],0x9a
  423935:	push   cs
  423936:	fidiv  DWORD PTR [eax]
  423938:	pop    edi
  423939:	cmp    esp,DWORD PTR [eax+0x2933cc17]
  42393f:	addr16 pop ds
  423941:	add    dh,BYTE PTR gs:[ebx+0x4a]
  423945:	and    DWORD PTR [esp+edx*8+0x63ba21ff],eax
  42394c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42394d:	sub    BYTE PTR [eax+0x5],cl
  423950:	mov    esi,0x58c18061
  423955:	(bad)  [eax+0x2187591b]
  42395b:	dec    eax
  42395c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42395d:	xchg   esi,eax
  42395e:	push   ecx
  42395f:	inc    ebx
  423960:	scas   al,BYTE PTR es:[edi]
  423961:	xchg   DWORD PTR [edx+ebp*1],ebp
  423964:	and    DWORD PTR [esi+0x533eba32],esp
  42396a:	int    0x8b
  42396c:	aaa    
  42396d:	dec    esp
  42396e:	(bad)  [edi+0xa]
  423971:	out    0xf0,eax
  423973:	cmc    
  423974:	pop    ebx
  423975:	popa   
  423976:	sbb    BYTE PTR [ebx-0xb],al
  423979:	sub    eax,0xeb118f76
  42397e:	and    eax,0x82154ab1
  423983:	and    cl,dl
  423985:	and    eax,0xf5d50f31
  42398a:	sbb    ecx,edx
  42398c:	jae    0x42396d
  42398e:	mov    ebx,0xd39699c1
  423993:	sub    BYTE PTR [ebx+eiz*2+0x7f7693f7],ah
  42399a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42399b:	mov    bh,0xc9
  42399d:	imul   esp,DWORD PTR [edi],0xd0dbf84b
  4239a3:	mov    edx,0x9edd961
  4239a8:	pop    ebx
  4239a9:	jo     0x423a24
  4239ab:	mov    esi,0x7f4e377c
  4239b0:	icebp  
  4239b1:	xchg   esp,eax
  4239b2:	lea    ebx,[esi-0x72d38f06]
  4239b8:	xor    bl,al
  4239ba:	loop   0x4239fe
  4239bc:	popa   
  4239bd:	adc    eax,0xd9843f9f
  4239c2:	and    BYTE PTR [ebx+0x186f8617],ah
  4239c8:	xchg   DWORD PTR [edx],eax
  4239ca:	loop   0x4239ee
  4239cc:	push   ecx
  4239cd:	dec    edi
  4239ce:	cs jae 0x423974
  4239d1:	repnz push 0xe4ae0352
  4239d7:	(bad)  
  4239d8:	shl    DWORD PTR ds:0x40252001,cl
  4239de:	pop    ecx
  4239df:	not    BYTE PTR [ecx+0x6e]
  4239e2:	add    BYTE PTR [ebx+0x2e771fa6],dh
  4239e8:	sbb    eax,0x6e54fc25
  4239ed:	mov    dl,dh
  4239ef:	jg     0x423a22
  4239f1:	pop    es
  4239f2:	xchg   ebx,eax
  4239f3:	fldenv [ebp-0x7ad89a7e]
  4239f9:	inc    edi
  4239fa:	mov    esi,0xb8d6da88
  4239ff:	nop
  423a00:	jo     0x423a51
  423a02:	in     al,dx
  423a03:	in     al,0x25
  423a05:	mov    al,ds:0x833afc5d
  423a0a:	and    DWORD PTR [ebx+0x57600d66],edx
  423a10:	sub    BYTE PTR [ebp-0x5],dh
  423a13:	lock sbb eax,DWORD PTR [ebx+edi*8-0x10]
  423a18:	mov    ebp,0x952e6260
  423a1d:	add    eax,0x257f8e9a
  423a22:	imul   esp,DWORD PTR [ebp+0x31904d97],0x43
  423a29:	pop    ss
  423a2a:	sbb    esp,eax
  423a2c:	stc    
  423a2d:	(bad)  
  423a2e:	mov    ch,0x2f
  423a30:	mov    ah,0xce
  423a32:	ins    DWORD PTR es:[edi],dx
  423a33:	pop    ds
  423a34:	xchg   esi,eax
  423a35:	add    DWORD PTR [edi],edx
  423a37:	aam    0x5c
  423a39:	mov    ds:0x54e4a7df,al
  423a3e:	sar    DWORD PTR [ecx+0x61],1
  423a41:	mov    ecx,0x39f8aa0b
  423a46:	test   eax,0xbf216f11
  423a4b:	out    dx,al
  423a4c:	(bad)  
  423a4d:	jmp    0x4239f5
  423a4f:	and    DWORD PTR [ecx-0x1c],eax
  423a52:	shl    dl,cl
  423a54:	push   edi
  423a55:	mov    DWORD PTR ds:0xa28b78cf,esi
  423a5b:	aam    0x10
  423a5d:	mov    DWORD PTR [ebx-0x5d],edx
  423a60:	retf   
  423a61:	push   ss
  423a62:	xchg   ecx,eax
  423a63:	xchg   DWORD PTR [ebx+0x15],eax
  423a66:	push   esp
  423a67:	rcl    DWORD PTR [edi-0x25],1
  423a6a:	adc    eax,0xda25ec79
  423a6f:	shl    DWORD PTR [ebx-0x10],cl
  423a72:	xchg   ebx,eax
  423a73:	test   eax,0xd071a442
  423a78:	lock or eax,DWORD PTR [esp+ebp*1-0x2]
  423a7d:	(bad)  
  423a7e:	mov    edx,0x290b5ebd
  423a83:	gs daa 
  423a85:	ret    0x6772
  423a88:	addr16 dec ebp
  423a8a:	mov    al,0xa
  423a8c:	push   ecx
  423a8d:	jg     0x423a26
  423a8f:	or     BYTE PTR [esi-0xfc3a2e3],al
  423a95:	pop    ecx
  423a96:	sbb    ah,BYTE PTR [ebp-0xb]
  423a99:	sub    DWORD PTR ds:0xa3fd4732,edx
  423a9f:	cmp    cl,BYTE PTR [ebp-0x551603b2]
  423aa5:	pushf  
  423aa6:	imul   edi,esp,0xffffffc3
  423aa9:	mov    ebp,DWORD PTR [eax-0x229cfb1]
  423aaf:	scas   eax,DWORD PTR es:[edi]
  423ab0:	mov    edx,0x79231ac3
  423ab5:	xchg   ecx,eax
  423ab6:	hlt    
  423ab7:	test   al,0xc5
  423ab9:	and    eax,0x99297df2
  423abe:	mov    bh,0x67
  423ac0:	jmp    0x4182ddb2
  423ac5:	aaa    
  423ac6:	push   eax
  423ac7:	jg     0x423a6d
  423ac9:	dec    esi
  423aca:	aam    0xe5
  423acc:	sub    cl,ah
  423ace:	shl    BYTE PTR [ebp-0x58f3dfb7],0x5e
  423ad5:	fisttp QWORD PTR [ebp-0x317fc8bf]
  423adb:	iret   
  423adc:	call   0xcb895d36
  423ae1:	xor    BYTE PTR [ebx],bl
  423ae3:	inc    ecx
  423ae4:	lods   eax,DWORD PTR ds:[esi]
  423ae5:	sbb    BYTE PTR [ebp-0x3a],ah
  423ae8:	sbb    esi,DWORD PTR [ecx-0x3b]
  423aeb:	and    al,0x9d
  423aed:	outs   dx,BYTE PTR ds:[esi]
  423aee:	pop    esi
  423aef:	mov    al,ds:0x6e48772f
  423af4:	jne    0x423b32
  423af6:	inc    esi
  423af7:	add    eax,0xfb6d48bd
  423afc:	je     0x423ae3
  423afe:	push   ss
  423aff:	jmp    0x3d5daf1f
  423b04:	xchg   ebp,eax
  423b05:	dec    ecx
  423b06:	inc    ecx
  423b07:	add    eax,0x66d151ee
  423b0c:	sub    al,0xb4
  423b0e:	or     edi,ebp
  423b10:	and    BYTE PTR [edi-0x6e7242db],dh
  423b16:	mov    ebx,0x8214b326
  423b1b:	call   0x1e2374d2
  423b20:	sahf   
  423b21:	pop    esp
  423b22:	mov    eax,0xf85d1fb0
  423b27:	sti    
  423b28:	aaa    
  423b29:	das    
  423b2a:	inc    ebp
  423b2b:	xchg   DWORD PTR [ecx-0x473a337e],edx
  423b31:	in     eax,0x20
  423b33:	add    eax,0x37cd6969
  423b38:	sar    DWORD PTR [edx+0x4b],0xf0
  423b3c:	test   BYTE PTR [eax],al
  423b3e:	inc    eax
  423b3f:	pop    esp
  423b40:	(bad)  
  423b41:	mov    esp,0xe1f0849a
  423b46:	hlt    
  423b47:	cs popf 
  423b49:	adc    eax,0xb9c77c58
  423b4e:	push   esp
  423b4f:	mov    bl,0xa
  423b51:	jmp    0x4f084142
  423b56:	(bad)  
  423b57:	or     eax,0x3dabf008
  423b5c:	sub    BYTE PTR [ebx-0x1103f644],ah
  423b62:	das    
  423b63:	sti    
  423b64:	pop    ss
  423b65:	pop    edx
  423b66:	push   es
  423b67:	jp     0x423bbc
  423b69:	mov    dl,0xc5
  423b6b:	inc    ebp
  423b6c:	(bad)  [edx]
  423b6e:	mov    ds:0x74e63dc7,al
  423b73:	xor    esi,eax
  423b75:	das    
  423b76:	das    
  423b77:	cmp    eax,0xdb642744
  423b7c:	(bad)  
  423b7d:	loop   0x423bf9
  423b7f:	imul   eax,DWORD PTR [eax+0x36],0x35783e99
  423b86:	addr16 test eax,0xe1a20d4
  423b8c:	int3   
  423b8d:	fstp   TBYTE PTR [esp+edi*1]
  423b90:	repz sar DWORD PTR [edx-0x67],1
  423b94:	xor    DWORD PTR [eax-0x6f9456cc],esi
  423b9a:	fwait
  423b9b:	shl    DWORD PTR [edi],0x1f
  423b9e:	loop   0x423bfd
  423ba0:	pusha  
  423ba1:	mov    ds:0xaf8d3654,eax
  423ba6:	jno    0x423ba8
  423ba8:	xlat   BYTE PTR ds:[ebx]
  423ba9:	xchg   ebp,eax
  423baa:	or     cl,cl
  423bac:	mov    ch,0xc9
  423bae:	aam    0x55
  423bb0:	daa    
  423bb1:	mov    eax,ds:0x1daa7d43
  423bb6:	add    dh,cl
  423bb8:	push   eax
  423bb9:	push   cs
  423bba:	xchg   esi,eax
  423bbb:	push   eax
  423bbc:	add    dl,0x70
  423bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bc0:	xor    BYTE PTR [ebx],ah
  423bc2:	cdq    
  423bc3:	adc    al,ch
  423bc5:	mov    eax,0x3c471927
  423bca:	jmp    0xb124e8b5
  423bcf:	pop    edi
  423bd0:	sti    
  423bd1:	push   ebp
  423bd2:	inc    esi
  423bd3:	mov    bh,0xb0
  423bd5:	mov    bh,0x38
  423bd7:	fild   DWORD PTR [esi-0x2f]
  423bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bdb:	(bad)
  423bde:	and    eax,0x539c190e
  423be3:	jae    0x423c30
  423be5:	push   ebx
  423be6:	adc    edx,DWORD PTR [edi+0x7fd8b514]
  423bec:	out    dx,eax
  423bed:	adc    DWORD PTR [ecx],eax
  423bef:	push   ebx
  423bf0:	stos   BYTE PTR es:[edi],al
  423bf1:	int    0x36
  423bf3:	outs   dx,DWORD PTR ds:[esi]
  423bf4:	xor    eax,0x24dce931
  423bf9:	scas   eax,DWORD PTR es:[edi]
  423bfa:	mov    dl,0xb2
  423bfc:	jg     0x423c67
  423bfe:	cli    
  423bff:	jle    0x423bc3
  423c01:	or     eax,0xa2602bf4
  423c06:	adc    eax,0x5bef94c4
  423c0b:	lds    ebp,FWORD PTR [ebp-0xd]
  423c0e:	sub    al,0x7b
  423c10:	inc    ecx
  423c11:	stos   DWORD PTR es:[edi],eax
  423c12:	addr16 es daa 
  423c15:	aaa    
  423c16:	and    dh,BYTE PTR [ecx]
  423c18:	mov    bl,0x82
  423c1a:	mov    eax,0x34dc4646
  423c1f:	pop    esi
  423c20:	xchg   ebx,eax
  423c21:	js     0x423c2c
  423c23:	push   edi
  423c24:	call   FWORD PTR [edx]
  423c26:	push   es
  423c27:	xchg   edi,eax
  423c28:	test   DWORD PTR [esi],edx
  423c2a:	ror    DWORD PTR [edi-0x62],1
  423c2d:	cmc    
  423c2e:	and    ecx,edx
  423c30:	addr16 jmp 0x768c3966
  423c36:	cmp    eax,0x1ca2dd5d
  423c3b:	out    dx,al
  423c3c:	jmp    0xdab276a7
  423c41:	jge    0x423c67
  423c43:	rcr    BYTE PTR [ebx-0x80],1
  423c46:	aam    0xa4
  423c48:	pop    eax
  423c49:	aaa    
  423c4a:	leave  
  423c4b:	mov    al,ds:0x2da1e77b
  423c50:	sbb    al,0xb
  423c52:	jecxz  0x423c3a
  423c54:	add    al,0x2d
  423c56:	pop    es
  423c57:	and    al,0xdb
  423c59:	adc    al,0x38
  423c5b:	les    edx,FWORD PTR [ecx-0x80]
  423c5e:	das    
  423c5f:	sub    ah,BYTE PTR [esi-0x16]
  423c62:	mov    ebp,0xb93364d8
  423c67:	inc    ecx
  423c68:	es push ebx
  423c6a:	jmp    0x1c1b378a
  423c6f:	push   ecx
  423c70:	sbb    al,0xfc
  423c72:	mov    ds:0xa8c9733b,eax
  423c77:	pop    eax
  423c78:	dec    esp
  423c79:	dec    edx
  423c7a:	mov    esi,0xe03cdbc8
  423c80:	pushf  
  423c81:	sar    BYTE PTR [eax+0x7180e761],1
  423c87:	cld    
  423c88:	retf   
  423c89:	mov    eax,0x92cbd4f0
  423c8e:	dec    esp
  423c8f:	sbb    BYTE PTR [esi+edx*4],al
  423c92:	or     edx,DWORD PTR [ebx+0x74c96bb4]
  423c98:	push   0xffffffd2
  423c9a:	retf   0xc1b6
  423c9d:	add    al,0x47
  423c9f:	cmp    ecx,esp
  423ca1:	pop    edi
  423ca2:	jp     0x423c68
  423ca4:	jge    0x423d11
  423ca6:	xchg   esi,eax
  423ca7:	pusha  
  423ca8:	sbb    BYTE PTR [edi-0x2e3059da],0x44
  423caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb0:	and    edi,DWORD PTR [eax-0x6f273c9a]
  423cb6:	das    
  423cb7:	mov    bl,0x7b
  423cb9:	xor    ah,BYTE PTR [edi]
  423cbb:	fsubr  DWORD PTR [ecx]
  423cbd:	(bad)
  423cc0:	pop    ds
  423cc1:	jne    0x423c5f
  423cc3:	daa    
  423cc4:	jb     0x423cbe
  423cc6:	mov    edi,eax
  423cc8:	rol    BYTE PTR [esi],0xc3
  423ccb:	pop    es
  423ccc:	cli    
  423ccd:	mov    ecx,0xa0ddd1c3
  423cd2:	call   0xc529:0xb6603227
  423cd9:	cmp    al,BYTE PTR [edx+0x7245f755]
  423cdf:	sub    eax,0xc300d8d3
  423ce4:	or     DWORD PTR [esi+ebp*2+0x66],ebp
  423ce8:	ret    
  423ce9:	aad    0x57
  423ceb:	push   cs
  423cec:	mov    ch,0x93
  423cee:	sbb    DWORD PTR [ebp+0x4a905ff8],eax
  423cf4:	int    0x1c
  423cf6:	into   
  423cf7:	dec    edi
  423cf8:	adc    al,0x89
  423cfa:	aaa    
  423cfb:	push   edx
  423cfc:	mov    edx,0xc02840e9
  423d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d02:	les    eax,FWORD PTR [edx-0x394f51b7]
  423d08:	ja     0x423cbc
  423d0a:	jne    0x423cc1
  423d0c:	jp     0x423cf5
  423d0e:	dec    edi
  423d0f:	mov    ds:0x940a682d,eax
  423d14:	sub    edx,ebp
  423d16:	sbb    eax,0xb68201e8
  423d1b:	inc    ecx
  423d1c:	mov    ah,0xc5
  423d1e:	dec    eax
  423d1f:	cmp    ebx,DWORD PTR [eax]
  423d21:	xor    bl,BYTE PTR [edx-0xd65218d]
  423d27:	push   ebx
  423d28:	iret   
  423d29:	push   edi
  423d2a:	cmc    
  423d2b:	call   0x43da:0xba86fba7
  423d32:	pushf  
  423d33:	push   es
  423d34:	lea    esi,[ebp+0x391fba44]
  423d3a:	xor    BYTE PTR [ebx],bl
  423d3c:	retf   0x75e6
  423d3f:	retf   0x8545
  423d42:	push   ebx
  423d43:	mov    esp,ebx
  423d45:	fmul   QWORD PTR [edx+eax*8+0x59]
  423d49:	mov    bl,0xb
  423d4b:	imul   eax,DWORD PTR [ebx],0x22
  423d4e:	mov    BYTE PTR [eax],cl
  423d50:	mov    edi,DWORD PTR [esi-0x5bdba26e]
  423d56:	mov    eax,ds:0xda71fe6a
  423d5b:	add    ecx,DWORD PTR [esi+eax*1-0x66]
  423d5f:	xchg   edx,eax
  423d60:	addr16 sub al,0xe5
  423d63:	add    ah,BYTE PTR [ebp-0x56]
  423d66:	das    
  423d67:	mov    fs,WORD PTR [edx+0x29]
  423d6a:	dec    ecx
  423d6b:	or     DWORD PTR [esi],ebp
  423d6d:	sub    ebp,DWORD PTR [edx+0x17c91049]
  423d73:	repz pusha 
  423d75:	inc    ebx
  423d76:	cmp    DWORD PTR [edi-0x7de48e6a],edx
  423d7c:	es or  al,0x98
  423d7f:	mov    dh,0xde
  423d81:	test   BYTE PTR [edx],cl
  423d83:	cmp    al,0xf7
  423d85:	pusha  
  423d86:	mov    dl,0x90
  423d88:	shl    DWORD PTR [eax-0x1305fc9a],cl
  423d8e:	mov    eax,ds:0x2a785fe1
  423d93:	outs   dx,WORD PTR ds:[esi]
  423d95:	xchg   esi,eax
  423d96:	jo     0x423d7b
  423d98:	mov    bl,0xe4
  423d9a:	fsubp  st(6),st
  423d9c:	mov    eax,eax
  423d9e:	mov    bh,0xb7
  423da0:	(bad)  
  423da1:	fstp   TBYTE PTR [ebp+0x18b199a1]
  423da7:	loopne 0x423de5
  423da9:	mov    dl,0xb6
  423dab:	test   DWORD PTR [ebx-0x20],edx
  423dae:	adc    eax,0x562a5de5
  423db3:	jge    0x423dea
  423db5:	les    esi,FWORD PTR [eax+eax*4]
  423db8:	jne    0x423dc8
  423dba:	adc    eax,0x759c79be
  423dbf:	xchg   esi,eax
  423dc0:	out    dx,eax
  423dc1:	ret    0xfa8
  423dc4:	loope  0x423ded
  423dc6:	inc    ebx
  423dc7:	pop    ds
  423dc8:	push   ss
  423dc9:	push   ss
  423dca:	stos   DWORD PTR es:[edi],eax
  423dcb:	push   esp
  423dcc:	shl    dl,0xd4
  423dcf:	push   ecx
  423dd0:	and    dl,BYTE PTR [esi+0x25]
  423dd3:	pop    edi
  423dd4:	mov    DWORD PTR [ebx+eiz*2+0x7f],edi
  423dd8:	gs in  al,0x20
  423ddb:	stc    
  423ddc:	ss cdq 
  423dde:	inc    ebp
  423ddf:	xor    al,0x1
  423de1:	std    
  423de2:	int3   
  423de3:	or     ecx,DWORD PTR [edi+0x51]
  423de6:	jno    0x423dc6
  423de8:	rcr    DWORD PTR [edi],0xc5
  423deb:	lods   al,BYTE PTR ds:[esi]
  423dec:	shr    BYTE PTR [edx-0x66],cl
  423def:	adc    BYTE PTR [edx+0x762747f6],cl
  423df5:	or     eax,0x94820a9f
  423dfa:	lock mov ebx,DWORD PTR [ebx+edi*1+0x3e59cd63]
  423e02:	dec    edx
  423e03:	rcr    BYTE PTR [eax],0x19
  423e06:	jo     0x423dbe
  423e08:	dec    eax
  423e09:	cwde   
  423e0a:	fild   DWORD PTR [edi]
  423e0c:	lods   eax,DWORD PTR ds:[esi]
  423e0d:	jecxz  0x423dcb
  423e0f:	mov    dl,0xc7
  423e11:	frstorw [edi+0x16ec1098]
  423e18:	push   ebx
  423e19:	loope  0x423e9a
  423e1b:	out    dx,al
  423e1c:	repnz dec eax
  423e1e:	jbe    0x423e5b
  423e20:	enter  0xf22c,0x94
  423e24:	xor    al,0x6f
  423e26:	xchg   esp,eax
  423e27:	fisttp DWORD PTR [ebx-0x3512645d]
  423e2d:	jbe    0x423e74
  423e2f:	mov    ds:0x7898bf68,al
  423e34:	(bad)  
  423e35:	pop    ds
  423e36:	data16 jns 0x423e4f
  423e39:	inc    edx
  423e3a:	jno    0x423dd3
  423e3c:	jle    0x423e35
  423e3e:	or     DWORD PTR [edi+edi*2-0xee1c7b3],ebx
  423e45:	dec    edx
  423e46:	jg     0x423e4f
  423e48:	es pushf 
  423e4a:	jle    0x423e3a
  423e4c:	jbe    0x423e57
  423e4e:	inc    ebp
  423e4f:	mov    cl,0x4f
  423e51:	sbb    eax,0x3a0e3d7b
  423e56:	sbb    eax,0x4d910868
  423e5b:	adc    esp,DWORD PTR [ebp+edi*4-0x9]
  423e5f:	cld    
  423e60:	ins    DWORD PTR es:[edi],dx
  423e61:	ficom  WORD PTR [edx-0x2ebf72cc]
  423e67:	call   0xa9293516
  423e6c:	repz dec ebp
  423e6e:	xor    ebp,DWORD PTR [edx]
  423e70:	mov    ds:0x7ec761df,eax
  423e75:	and    ebx,DWORD PTR [eax+0x10]
  423e78:	test   BYTE PTR [ebp-0x4a],bl
  423e7b:	pushw  0x3c
  423e7e:	int    0x16
  423e80:	lods   eax,DWORD PTR ds:[esi]
  423e81:	and    DWORD PTR [ebp+0x15169f26],ebx
  423e87:	jnp    0x423e38
  423e89:	push   edi
  423e8a:	xchg   edx,eax
  423e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e8c:	push   ds
  423e8d:	hlt    
  423e8e:	ret    
  423e8f:	test   al,0x3f
  423e91:	mov    edi,0xc768682c
  423e96:	jge    0x423e2b
  423e98:	xor    ch,al
  423e9a:	hlt    
  423e9b:	mov    al,0x3f
  423e9d:	fcmovne st,st(1)
  423e9f:	xor    eax,0x8b887792
  423ea4:	call   0x870ce177
  423ea9:	xor    BYTE PTR [ebx+0xc6b75ca],ah
  423eaf:	out    0x97,al
  423eb1:	adc    ch,BYTE PTR [edi]
  423eb3:	dec    edx
  423eb4:	fistp  WORD PTR [edx]
  423eb6:	push   edi
  423eb7:	pop    ss
  423eb8:	add    eax,0x8f6d752c
  423ebd:	cs retf 
  423ebf:	inc    eax
  423ec0:	leave  
  423ec1:	push   ebx
  423ec2:	das    
  423ec3:	xchg   edi,esi
  423ec5:	das    
  423ec6:	ja     0x423e49
  423ec8:	cwde   
  423ec9:	sbb    al,0x4
  423ecb:	(bad)  
  423ecc:	jge    0x423f1d
  423ece:	xor    edi,DWORD PTR [edi+esi*1+0xe]
  423ed2:	int    0x95
  423ed4:	jmp    0x1778:0xccc2c044
  423edb:	mov    bh,bh
  423edd:	daa    
  423ede:	push   ds
  423edf:	xchg   ecx,eax
  423ee0:	repz fucomi st,st(5)
  423ee3:	ror    BYTE PTR [ebp+0x5acf4e63],0x1e
  423eea:	xchg   BYTE PTR [eax+0x26a0975d],bh
  423ef0:	pushf  
  423ef1:	jb     0x423ee1
  423ef3:	adc    DWORD PTR [esi+0x73],eax
  423ef6:	dec    eax
  423ef7:	pop    es
  423ef8:	mov    esi,0x8afbb7fe
  423efd:	sub    ebx,DWORD PTR [ecx+esi*1+0x7ed0d149]
  423f04:	jmp    0x433ff77c
  423f09:	push   0x1e
  423f0b:	data16 or BYTE PTR [ebx],ch
  423f0e:	mov    edi,0xa53323b6
  423f13:	mov    DWORD PTR [ebx-0x57],edi
  423f16:	mov    eax,ds:0xcd1a79cb
  423f1b:	inc    eax
  423f1c:	and    al,0x2d
  423f1e:	lds    edx,FWORD PTR [edx]
  423f20:	add    esi,edx
  423f22:	outs   dx,DWORD PTR ds:[esi]
  423f23:	adc    ah,BYTE PTR [esi-0x7a]
  423f26:	sub    dl,dl
  423f28:	mov    esp,0x9faddead
  423f2d:	fucomp st(2)
  423f2f:	pop    edx
  423f30:	icebp  
  423f31:	test   DWORD PTR [eax],ebx
  423f33:	js     0x423ebf
  423f35:	or     DWORD PTR [eax+0x1f277b02],ecx
  423f3b:	jl     0x423f41
  423f3d:	retf   0x3dd3
  423f40:	and    BYTE PTR [esi+0x78],dh
  423f43:	pop    edi
  423f44:	pop    es
  423f45:	data16 repz in al,0x9
  423f49:	es jnp 0x423f03
  423f4c:	mov    al,0xab
  423f4e:	shr    DWORD PTR [ebp-0x50],cl
  423f51:	mov    DWORD PTR [ecx+edx*1-0x48759bb7],ebx
  423f58:	mov    eax,ds:0xe282a5d9
  423f5d:	es stos BYTE PTR es:[edi],al
  423f5f:	jecxz  0x423f93
  423f61:	pop    edx
  423f62:	and    al,0xde
  423f64:	fwait
  423f65:	and    ebx,DWORD PTR [esp+edx*4]
  423f68:	enter  0x4abe,0x25
  423f6c:	pop    ebx
  423f6d:	sti    
  423f6e:	mov    esp,0xd7819f30
  423f73:	and    BYTE PTR [edi-0x8],0xd1
  423f77:	pop    es
  423f78:	jne    0x423ff3
  423f7a:	push   eax
  423f7b:	adc    eax,DWORD PTR ds:0x9037c143
  423f81:	mov    al,0xa3
  423f83:	sub    BYTE PTR [edx+ebx*2],ch
  423f86:	lahf   
  423f87:	mov    edx,0x6b7cbf75
  423f8c:	xor    cl,0xce
  423f8f:	lods   al,BYTE PTR ds:[esi]
  423f90:	cmp    DWORD PTR [edx+edx*1-0x53],edi
  423f94:	ret    
  423f95:	nop
  423f96:	sbb    BYTE PTR [edx],0x55
  423f99:	jnp    0x423fdf
  423f9b:	cwde   
  423f9c:	ja     0x423f7a
  423f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f9f:	push   0xffffffce
  423fa1:	retf   0x8ba9
  423fa4:	mov    ds:0xc1088d21,eax
  423fa9:	dec    eax
  423faa:	stc    
  423fab:	fst    DWORD PTR [edi-0x28e1271c]
  423fb1:	shl    BYTE PTR [edx+0x11d65eec],0x19
  423fb8:	mov    ebx,ebp
  423fba:	jmp    0xc67c:0x8c7414d9
  423fc1:	cmp    edx,esi
  423fc3:	adc    bl,al
  423fc5:	add    cl,ch
  423fc7:	pop    ss
  423fc8:	fidiv  DWORD PTR [eax+0x3c]
  423fcb:	mov    cl,0x5a
  423fcd:	test   eax,0x3f60f454
  423fd2:	addr16 push esi
  423fd4:	add    DWORD PTR [ecx-0x3291f052],0x0
  423fdb:	xchg   edx,eax
  423fdc:	sub    al,0xee
  423fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fdf:	sub    eax,0x4213d81
  423fe4:	mov    ebp,0x378beeb1
  423fe9:	sbb    BYTE PTR [ebp+0x48],dh
  423fec:	lahf   
  423fed:	loopne 0x423f7b
  423fef:	test   al,0x2a
  423ff1:	gs push ebx
  423ff3:	xchg   BYTE PTR [edx+edx*1+0x16],ah
  423ff7:	push   ebp
  423ff8:	dec    esi
  423ff9:	mov    ebp,0x484e588b
  423ffe:	dec    ebx
  423fff:	dec    ebx
  424000:	std    
  424001:	iret   
  424002:	fisttp QWORD PTR [ebp-0x33]
  424005:	dec    ecx
  424006:	mov    ah,0xa3
  424008:	fs (bad) 
  42400a:	mov    eax,ds:0xd47a48e4
  42400f:	iret   
  424010:	pop    ebp
  424011:	mov    esi,0x6679a9df
  424016:	jge    0x423fe7
  424018:	sbb    bl,0xa2
  42401b:	jl     0x42404d
  42401d:	gs pop ebp
  42401f:	sub    ecx,DWORD PTR [ecx-0x7be77487]
  424025:	jo     0x42408b
  424027:	cld    
  424028:	push   ss
  424029:	mov    dh,0x85
  42402b:	fs out dx,eax
  42402d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42402e:	test   al,0xf4
  424030:	mov    ecx,0x9c58fe6e
  424035:	pop    ecx
  424036:	jp     0x423ffd
  424038:	retf   0xf165
  42403b:	push   ds
  42403c:	paddq  mm7,QWORD PTR [eax]
  42403f:	mov    ch,BYTE PTR [edi]
  424041:	push   0xffffffbd
  424043:	scas   al,BYTE PTR es:[edi]
  424044:	ins    BYTE PTR es:[edi],dx
  424045:	push   ebp
  424046:	(bad)  
  424047:	jg     0x424037
  424049:	icebp  
  42404a:	add    eax,0x69d3d3ad
  42404f:	sub    al,0x72
  424051:	rol    DWORD PTR [esi+0x21a954f2],cl
  424057:	cli    
  424058:	inc    ecx
  424059:	cmc    
  42405a:	push   ss
  42405b:	js     0x42400b
  42405d:	xor    DWORD PTR [ecx-0x21533278],ebp
  424063:	cmp    bx,di
  424066:	mov    al,ds:0x33f8f3b2
  42406b:	lock jne 0x4240bf
  42406e:	popa   
  42406f:	dec    ebx
  424070:	fst    DWORD PTR [edx]
  424072:	and    eax,0x9c4dfb54
  424077:	pushf  
  424078:	jnp    0x42400a
  42407a:	aad    0x57
  42407c:	xchg   esp,eax
  42407d:	dec    esi
  42407e:	push   esi
  42407f:	scas   eax,DWORD PTR es:[edi]
  424080:	nop
  424081:	enter  0x4b8d,0xb2
  424085:	xchg   ebx,eax
  424086:	in     eax,dx
  424087:	inc    esi
  424088:	stos   BYTE PTR es:[edi],al
  424089:	and    eax,0x32804c9b
  42408e:	hlt    
  42408f:	mov    eax,0x44d627a5
  424094:	inc    eax
  424095:	mov    bl,0xbd
  424097:	jo     0x4240b5
  424099:	stc    
  42409a:	mov    edx,0x13ec5599
  42409f:	mov    ?,WORD PTR [edx]
  4240a1:	sbb    edi,ecx
  4240a3:	inc    ebx
  4240a4:	xchg   ecx,eax
  4240a5:	mov    dh,0x36
  4240a7:	xchg   esp,eax
  4240a8:	xchg   DWORD PTR ds:0x32c30b2e,esi
  4240ae:	std    
  4240af:	jmp    0xbfef45ae
  4240b4:	jmp    0x4240f3
  4240b6:	loope  0x4240d0
  4240b8:	dec    esp
  4240b9:	js     0x424092
  4240bb:	retf   
  4240bc:	out    0x7b,al
  4240be:	sbb    BYTE PTR [ebx],al
  4240c0:	cdq    
  4240c1:	add    ah,BYTE PTR [ebx]
  4240c3:	and    al,BYTE PTR [ebx+0x21]
  4240c6:	arpl   WORD PTR [eax-0x7f],bp
  4240c9:	xchg   ebp,eax
  4240ca:	jno    0x424056
  4240cc:	imul   edx,DWORD PTR [ebp-0x3f9bc76b],0x65
  4240d3:	mov    edi,0x22906159
  4240d8:	movlps xmm6,QWORD PTR [ebx]
  4240db:	xchg   esp,eax
  4240dc:	sub    bl,BYTE PTR [edx]
  4240de:	out    dx,al
  4240df:	xchg   edx,eax
  4240e0:	std    
  4240e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e2:	fdivrp st(3),st
  4240e4:	sahf   
  4240e5:	pop    edx
  4240e6:	add    eax,0x962c2bd1
  4240eb:	cli    
  4240ec:	jns    0x424132
  4240ee:	les    edi,FWORD PTR [ebp-0x28739ebf]
  4240f4:	jg     0x4240ad
  4240f6:	(bad)  
  4240f7:	fidivr DWORD PTR [eax]
  4240f9:	cmp    BYTE PTR [edi+0x33],dl
  4240fc:	mov    dl,0x68
  4240fe:	or     ecx,ecx
  424100:	add    al,BYTE PTR [esi]
  424102:	sub    DWORD PTR [eax+0x6b],ebp
  424105:	mov    BYTE PTR [edi+esi*8+0x224f3a54],al
  42410c:	jge    0x4240ec
  42410e:	in     eax,0xe1
  424110:	rcl    BYTE PTR [eax],cl
  424112:	je     0x42409a
  424114:	out    0xe5,eax
  424116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424117:	mov    al,ds:0x2fce04c1
  42411c:	cld    
  42411d:	sbb    edx,DWORD PTR [esp+ecx*4+0x3d]
  424121:	cmp    eax,0xfaa65383
  424126:	ficom  DWORD PTR [edi-0x7c]
  424129:	or     al,0xf4
  42412b:	pop    esp
  42412c:	pop    ss
  42412d:	sbb    BYTE PTR [esp+eiz*8-0x393aa5ce],bh
  424134:	pushf  
  424135:	mov    ds:0xe1475949,al
  42413a:	push   0x1af3177e
  42413f:	fs test al,0xc6
  424142:	pop    eax
  424143:	and    cl,BYTE PTR [edi-0x1d]
  424146:	repz call 0x8c4c:0x310b56aa
  42414e:	and    DWORD PTR [ebx-0x227ef16c],edx
  424154:	ds call 0x4f30:0x1c4987ce
  42415c:	mov    ecx,0x80934db7
  424161:	pushf  
  424162:	and    edx,edx
  424164:	cmp    bh,BYTE PTR [eax-0x6a]
  424167:	xor    DWORD PTR [esp+ebx*2+0x767e1b91],edx
  42416e:	ins    BYTE PTR es:[edi],dx
  42416f:	jne    0x4241de
  424171:	xor    DWORD PTR [ebx-0x7b320364],eax
  424177:	sub    al,BYTE PTR [esi-0x4b877d2d]
  42417d:	scas   al,BYTE PTR es:[edi]
  42417e:	mov    BYTE PTR [ebx],cl
  424180:	(bad)  
  424181:	and    edx,ebx
  424183:	popa   
  424184:	aad    0x2c
  424186:	stc    
  424187:	js     0x424125
  424189:	mov    dl,0x52
  42418b:	xor    dh,BYTE PTR [esi]
  42418d:	xor    al,ah
  42418f:	mov    cl,0x7f
  424191:	mov    ebx,0xab4d8463
  424196:	mov    bh,ch
  424198:	mov    edi,0x897ea826
  42419d:	cld    
  42419e:	sub    BYTE PTR [edx+0x2e],bh
  4241a1:	push   ss
  4241a2:	xor    DWORD PTR [esi-0x196bd671],eax
  4241a8:	sub    al,bh
  4241aa:	jmp    0x4241fb
  4241ac:	mov    dl,0xfa
  4241ae:	mov    cl,0xae
  4241b0:	xlat   BYTE PTR ds:[ebx]
  4241b1:	xchg   edi,eax
  4241b2:	(bad)  
  4241b3:	cdq    
  4241b4:	or     eax,0xec848875
  4241b9:	mov    WORD PTR [eax+0x5ff0ef9a],gs
  4241bf:	pop    esp
  4241c0:	or     BYTE PTR ss:[ebx-0x35a97873],dh
  4241c7:	div    DWORD PTR [ecx-0x6c]
  4241ca:	pop    ebp
  4241cb:	sbb    dl,BYTE PTR [edx]
  4241cd:	sub    eax,0xb0e8e1b
  4241d2:	cli    
  4241d3:	stos   BYTE PTR es:[edi],al
  4241d4:	fcom   QWORD PTR [eax+0x59]
  4241d7:	dec    ebp
  4241d8:	aad    0xd0
  4241da:	pop    esp
  4241db:	push   edi
  4241dc:	lods   eax,DWORD PTR ds:[esi]
  4241dd:	test   eax,0xe3a409d6
  4241e2:	mov    DWORD PTR [edi+eax*8+0x26],ebp
  4241e6:	xlat   BYTE PTR ds:[ebx]
  4241e7:	out    0xe8,eax
  4241e9:	and    ch,ch
  4241eb:	pop    edx
  4241ec:	mov    eax,0x87b12875
  4241f1:	(bad)  
  4241f2:	rcl    esi,1
  4241f4:	adc    BYTE PTR [ebp-0x445de695],0xe3
  4241fb:	cwde   
  4241fc:	sbb    BYTE PTR [eax],0x7f
  4241ff:	pop    ecx
  424200:	mov    bh,BYTE PTR [eax+0x78a33233]
  424206:	and    ebp,0xa7efce78
  42420c:	aad    0x38
  42420e:	stc    
  42420f:	adc    dl,al
  424211:	shl    BYTE PTR [esi+0x2fd73dde],0x6e
  424218:	jo     0x4241cc
  42421a:	xchg   edx,eax
  42421b:	cwde   
  42421c:	mov    ebx,0xc79600da
  424221:	daa    
  424222:	mov    ebp,0x884283c6
  424227:	mov    cl,0x4b
  424229:	in     al,dx
  42422a:	hlt    
  42422b:	push   edi
  42422c:	sete   BYTE PTR [esi]
  42422f:	pop    eax
  424230:	icebp  
  424231:	mov    edi,0x3d1a68a6
  424236:	das    
  424237:	cmc    
  424238:	fldcw  WORD PTR [ebx]
  42423a:	sub    ebx,edx
  42423c:	add    ecx,DWORD PTR [eax]
  42423e:	fbstp  TBYTE PTR ds:0x68d29aec
  424244:	scas   al,BYTE PTR es:[edi]
  424245:	cld    
  424246:	retf   0xd8f6
  424249:	add    BYTE PTR [edi+ebx*2+0x3f],ah
  42424d:	retf   0x4ac6
  424250:	je     0x4242c8
  424252:	ret    0xefa1
  424255:	stos   DWORD PTR es:[edi],eax
  424256:	mov    ah,BYTE PTR [esi]
  424258:	repz mov ah,0x30
  42425b:	push   es
  42425c:	adc    DWORD PTR [edi+0x23cc058e],0x874c375
  424266:	add    esp,esi
  424268:	je     0x4242bf
  42426a:	mov    ecx,0xe478824d
  42426f:	cmp    eax,0xa293ee1b
  424274:	lea    ebp,[eax-0x56d12c6c]
  42427a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42427b:	sbb    eax,DWORD PTR [edx]
  42427d:	(bad)
  424281:	iret   
  424282:	ret    
  424283:	jno    0x424230
  424285:	and    DWORD PTR ds:0xbc30182b,edi
  42428b:	or     eax,0xa0a4da40
  424290:	je     0x424227
  424292:	outs   dx,BYTE PTR ds:[esi]
  424293:	rcr    edx,1
  424295:	jo     0x4242a9
  424297:	jle    0x424253
  424299:	xor    al,0x15
  42429b:	push   ebx
  42429c:	icebp  
  42429d:	dec    esp
  42429e:	jge    0x4242d7
  4242a0:	push   esp
  4242a1:	rcr    BYTE PTR [edi-0x71680add],cl
  4242a7:	and    eax,0xf210172d
  4242ac:	mov    dl,0xe9
  4242ae:	ss sub dh,ch
  4242b1:	mov    edx,0x896401ec
  4242b6:	push   0xf06bd370
  4242bb:	add    bl,ah
  4242bd:	sar    DWORD PTR [ebp-0x1f],0x74
  4242c1:	cwde   
  4242c2:	and    ch,BYTE PTR [edi-0x23]
  4242c5:	adc    BYTE PTR ds:0xf252d364,ah
  4242cb:	lock cmp al,0xb
  4242ce:	int    0xe0
  4242d0:	mov    esi,0xa1562093
  4242d5:	pop    ebp
  4242d6:	(bad)  
  4242d7:	cwde   
  4242d8:	xchg   DWORD PTR [ecx+0x7e],ecx
  4242db:	xor    cl,dh
  4242dd:	add    BYTE PTR [edx],dl
  4242df:	in     al,0xaf
  4242e1:	fcmove st,st(3)
  4242e3:	jae    0x424331
  4242e5:	dec    esp
  4242e6:	xchg   esp,esp
  4242e8:	mov    esi,0x741394dd
  4242ed:	jbe    0x42430c
  4242ef:	push   ss
  4242f0:	inc    BYTE PTR [ecx+0xb]
  4242f3:	jnp    0x4242c0
  4242f5:	(bad)  
  4242f6:	pop    esi
  4242f7:	clc    
  4242f8:	gs push ebx
  4242fa:	pop    es
  4242fb:	or     edi,DWORD PTR [ecx+edi*2-0x7ddf6b5]
  424302:	jg     0x424289
  424304:	mov    fs,WORD PTR [eax-0x55]
  424307:	pop    esp
  424308:	ins    DWORD PTR es:[edi],dx
  424309:	xchg   ebx,eax
  42430a:	sbb    ecx,DWORD PTR [edx+eiz*4-0x74]
  42430e:	push   ecx
  42430f:	cli    
  424310:	outs   dx,BYTE PTR ds:[esi]
  424311:	(bad)  
  424312:	mov    BYTE PTR [esi+edi*8],cl
  424315:	sbb    ch,BYTE PTR [ecx+esi*2]
  424318:	icebp  
  424319:	xchg   ecx,eax
  42431a:	xor    BYTE PTR [ecx+0x16e295fb],cl
  424320:	in     eax,0x92
  424322:	fcmovb st,st(6)
  424324:	arpl   WORD PTR [eax+0x7b],bx
  424327:	xor    eax,0xed90bb2a
  42432c:	stos   DWORD PTR es:[edi],eax
  42432d:	mov    edx,0xc65a3c30
  424332:	and    BYTE PTR [edi-0x60],bl
  424335:	cmp    eax,DWORD PTR [esi+0x4ca4ccd6]
  42433b:	(bad)  
  42433c:	aam    0xb6
  42433e:	and    DWORD PTR [ebx+0x2b8d1686],ecx
  424344:	addr16 je 0x42433d
  424347:	push   edi
  424348:	(bad)  
  424349:	mov    edx,0x67320cdb
  42434e:	push   ebx
  42434f:	fs aam 0x51
  424352:	adc    eax,0x107bfbc6
  424357:	pop    ebx
  424358:	ror    DWORD PTR [edx+0x11],cl
  42435b:	and    DWORD PTR [edx+edx*2],0x0
  42435f:	retf   0xf265
  424362:	xchg   esi,eax
  424363:	add    DWORD PTR [edx-0x67685d3a],edi
  424369:	jl     0x4243a4
  42436b:	cmp    DWORD PTR [eax+0x31],edi
  42436e:	mov    esi,0xca2230b4
  424373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424374:	hlt    
  424375:	(bad)  
  424376:	fcomp  QWORD PTR [esp+eiz*8+0x38263068]
  42437d:	cmp    eax,0x22bf7ccc
  424382:	mov    eax,ds:0xb6c7664e
  424387:	mov    ebx,0xd811f2cd
  42438c:	fs mov ecx,0x6d467703
  424392:	adc    BYTE PTR [eax+0x247ef238],dl
  424398:	mov    dl,0x77
  42439a:	aad    0xbc
  42439c:	es xchg ebp,eax
  42439e:	aaa    
  42439f:	push   ds
  4243a0:	aas    
  4243a1:	mov    al,0xda
  4243a3:	and    DWORD PTR [esi+0x7b],0x7e
  4243a7:	imul   esi,DWORD PTR [ebp+0x24],0xd3556bcd
  4243ae:	sbb    BYTE PTR [ecx],bl
  4243b0:	sbb    ch,bh
  4243b2:	cmp    esp,ebx
  4243b4:	test   eax,0x11dc4ddc
  4243b9:	outs   dx,DWORD PTR ds:[esi]
  4243ba:	xor    dh,BYTE PTR [ebp-0x14]
  4243bd:	mov    ds:0x781d3378,eax
  4243c2:	mov    ds:0x47818b78,al
  4243c7:	rcr    BYTE PTR [ecx],0x89
  4243ca:	jmp    0x42438a
  4243cc:	leave  
  4243cd:	in     al,0xac
  4243cf:	pop    ebp
  4243d0:	sbb    BYTE PTR [eax+0x27],cl
  4243d3:	js     0x424388
  4243d5:	pusha  
  4243d6:	xchg   ebp,eax
  4243d7:	dec    ecx
  4243d8:	fchs   
  4243da:	xchg   edi,eax
  4243db:	sub    al,0xc0
  4243dd:	jne    0x424399
  4243df:	popa   
  4243e0:	jmp    0x1e2774b2
  4243e5:	lods   al,BYTE PTR ds:[esi]
  4243e6:	test   al,0xec
  4243e8:	jb     0x424398
  4243ea:	mov    edx,0x8172b8a5
  4243ef:	jnp    0x424453
  4243f1:	dec    ebx
  4243f2:	popa   
  4243f3:	and    al,0x74
  4243f5:	pop    eax
  4243f6:	push   eax
  4243f7:	mov    ecx,0xb95778bc
  4243fc:	cmp    ebp,DWORD PTR [si+0x21]
  424400:	cmp    eax,0xc8fe08a9
  424405:	popw   ss
  424407:	inc    esp
  424408:	aam    0xec
  42440a:	mov    ah,0xc2
  42440c:	cli    
  42440d:	das    
  42440e:	cli    
  42440f:	xchg   esp,eax
  424410:	add    esp,esi
  424412:	mov    esp,0x35d33a8e
  424417:	add    dl,BYTE PTR [esi]
  424419:	das    
  42441a:	int    0x27
  42441c:	js     0x424475
  42441e:	push   ds
  42441f:	inc    ecx
  424420:	adc    eax,0xbd7c24d8
  424425:	pop    edx
  424426:	jl     0x42442b
  424428:	mov    bh,0x20
  42442a:	cmc    
  42442b:	adc    al,BYTE PTR [ecx+0xe010cb2]
  424431:	jo     0x424434
  424433:	xchg   DWORD PTR [ebx+0x79834efa],edx
  424439:	adc    DWORD PTR [ecx+0x20],eax
  42443c:	das    
  42443d:	test   BYTE PTR [ecx],dl
  42443f:	push   edi
  424440:	sbb    esi,ecx
  424442:	or     DWORD PTR [esi-0x1730f4e4],ecx
  424448:	mov    es,WORD PTR [edi-0x52d797d]
  42444e:	out    0x3f,eax
  424450:	mov    edx,0x7de8b2b1
  424455:	xchg   edi,eax
  424456:	clc    
  424457:	rol    DWORD PTR [esi+0x4a2ed0af],0x2
  42445e:	les    esp,FWORD PTR [ecx+0x2e]
  424461:	xor    edx,eax
  424463:	push   ecx
  424464:	inc    esp
  424465:	push   0x20
  424467:	(bad)  
  424468:	and    ah,BYTE PTR [ebx+edx*2+0x51]
  42446c:	xchg   ebp,ecx
  42446e:	push   edi
  42446f:	adc    ebp,eax
  424471:	in     eax,dx
  424472:	jb     0x4244d3
  424474:	push   edx
  424475:	gs stos BYTE PTR es:[edi],al
  424477:	enter  0x31d4,0xb
  42447b:	cdq    
  42447c:	xchg   ebp,eax
  42447d:	mov    esp,DWORD PTR ss:[esi-0x3a]
  424481:	or     BYTE PTR [edi],bh
  424483:	je     0x4244f4
  424485:	repnz in al,dx
  424487:	std    
  424488:	dec    edi
  424489:	push   esp
  42448a:	aad    0x53
  42448c:	ins    BYTE PTR es:[edi],dx
  42448d:	push   edi
  42448e:	push   0x3a01041a
  424493:	cmp    esi,DWORD PTR [eax+eax*4-0x70]
  424497:	xor    DWORD PTR [esi],ebx
  424499:	or     BYTE PTR [edx+eiz*1+0x181cacc5],bh
  4244a0:	stc    
  4244a1:	in     eax,dx
  4244a2:	or     BYTE PTR [edx-0x1a844328],0x2c
  4244a9:	xor    DWORD PTR [ebx],edx
  4244ab:	arpl   WORD PTR [esi+0x7],ax
  4244ae:	out    0x4d,eax
  4244b0:	cmp    eax,0xe51d97ec
  4244b5:	call   0x6dc0:0xd4001206
  4244bc:	repz jle 0x4244b8
  4244bf:	pop    ebx
  4244c0:	pop    ss
  4244c1:	pop    eax
  4244c2:	outs   dx,DWORD PTR ds:[esi]
  4244c3:	jg     0x424513
  4244c5:	sbb    ebp,DWORD PTR [eax+0x68]
  4244c8:	les    edi,FWORD PTR [ebx-0x72b81a82]
  4244ce:	nop    DWORD PTR [ebp-0x7a8afbd8]
  4244d5:	add    BYTE PTR [esi+eax*1+0x54],dl
  4244d9:	sub    al,0xa0
  4244db:	pop    esi
  4244dc:	fnsave [ebx]
  4244de:	popa   
  4244df:	inc    DWORD PTR [edi]
  4244e1:	push   esi
  4244e2:	inc    eax
  4244e3:	mov    al,ds:0x8cc4a97a
  4244e8:	enter  0xd5f7,0x3e
  4244ec:	retf   
  4244ed:	mov    ds,WORD PTR [edi+0x4f]
  4244f0:	xor    al,BYTE PTR [ecx+0x6f]
  4244f3:	or     DWORD PTR [ebx],esp
  4244f5:	dec    ebx
  4244f6:	imul   BYTE PTR ds:0xcaafb36
  4244fc:	mov    BYTE PTR [edi+eiz*1],dh
  4244ff:	jge    0x424554
  424501:	aaa    
  424502:	stos   BYTE PTR es:[edi],al
  424503:	neg    BYTE PTR [edx+edx*1]
  424506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424507:	inc    esp
  424508:	stos   BYTE PTR es:[edi],al
  424509:	pop    ebx
  42450a:	imul   ebp,DWORD PTR [esi],0x5be43c02
  424510:	jg     0x42455a
  424512:	xchg   ebp,eax
  424513:	adc    ebp,edi
  424515:	mov    ecx,0x98e582a5
  42451a:	imul   edi,DWORD PTR ds:0xeef1e447,0x78
  424521:	mov    dl,0x9a
  424523:	loopne 0x4244b2
  424525:	sahf   
  424526:	push   ecx
  424527:	inc    esp
  424528:	push   cs
  424529:	cld    
  42452a:	inc    esi
  42452b:	pop    es
  42452c:	pop    edx
  42452d:	rcl    BYTE PTR ds:0x23f8ceca,1
  424533:	mov    esi,ebx
  424535:	ins    BYTE PTR es:[edi],dx
  424536:	xchg   ecx,eax
  424537:	dec    ecx
  424538:	bsf    ebx,DWORD PTR [eax+0xc]
  42453c:	(bad)  
  42453d:	in     eax,dx
  42453e:	stos   DWORD PTR es:[edi],eax
  42453f:	xchg   edx,eax
  424540:	adc    BYTE PTR [edi-0x422c224e],dl
  424546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424547:	and    ah,BYTE PTR [edi]
  424549:	fcomp  QWORD PTR [ebp+0x309faa38]
  42454f:	cs xchg esp,eax
  424551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424552:	push   eax
  424553:	push   ecx
  424554:	call   0xa328:0x3531de2f
  42455b:	jns    0x42459f
  42455d:	xchg   DWORD PTR [ebx+0x7e7564b7],esp
  424563:	xchg   ecx,eax
  424564:	sahf   
  424565:	int    0x88
  424567:	push   0xffffffe2
  424569:	enter  0x4b,0xe8
  42456d:	mov    al,0xf7
  42456f:	sub    cl,ah
  424571:	xlat   BYTE PTR ds:[ebx]
  424572:	out    dx,eax
  424573:	fmul   DWORD PTR [eax-0x6f]
  424576:	sbb    ebx,DWORD PTR [esi+0xd]
  424579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42457a:	xchg   esp,eax
  42457b:	or     eax,0x1cee862e
  424580:	pusha  
  424581:	pop    ds
  424582:	mov    ebp,0x5e3a1eb9
  424587:	loopne 0x4245c2
  424589:	sti    
  42458a:	xchg   ecx,eax
  42458b:	pop    ds
  42458c:	sub    DWORD PTR [eax-0x32d164ec],edi
  424592:	inc    edi
  424593:	repnz es pusha 
  424596:	xor    dh,bh
  424598:	inc    ecx
  424599:	test   BYTE PTR ds:0x751536e7,bl
  42459f:	shl    BYTE PTR [ebx],0x29
  4245a2:	jno    0x4245ea
  4245a4:	xchg   ebx,eax
  4245a5:	(bad)  
  4245a6:	xor    al,0x46
  4245a8:	add    eax,0xcc5539a
  4245ad:	adc    DWORD PTR [ecx+0x306d0444],esp
  4245b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245b4:	adc    edi,0xffffffae
  4245b7:	jmp    FWORD PTR [edi-0x2cf636ac]
  4245bd:	cdq    
  4245be:	adc    al,0x16
  4245c0:	xlat   BYTE PTR ds:[ebx]
  4245c1:	shr    al,1
  4245c3:	call   0x15ce:0x26cbd90c
  4245ca:	inc    edi
  4245cb:	mov    ecx,0x4ee0c985
  4245d0:	cli    
  4245d1:	jb     0x4245be
  4245d3:	inc    eax
  4245d4:	(bad)  
  4245d5:	frstor gs:[esp+eax*1]
  4245d9:	inc    edi
  4245da:	add    BYTE PTR [edi],dh
  4245dc:	test   al,0xdb
  4245de:	ficom  WORD PTR [ebx+0x32192c62]
  4245e4:	jl     0x4245ff
  4245e6:	rcl    BYTE PTR [edi+ecx*4+0xd],1
  4245ea:	fidiv  WORD PTR [eax+edi*4+0x6f]
  4245ee:	fdivr  st(5),st
  4245f0:	out    dx,al
  4245f1:	or     eax,0xbe70205
  4245f6:	imul   ebp,DWORD PTR [edx],0x28
  4245f9:	(bad)  
  4245fa:	jmp    FWORD PTR [eax+0x6fed1f48]
  424600:	ret    
  424601:	or     bh,bh
  424603:	cmc    
  424604:	(bad)  
  424605:	mov    eax,ds:0x56bdb8ed
  42460b:	pop    eax
  42460c:	scas   al,BYTE PTR es:[edi]
  42460d:	ins    BYTE PTR es:[edi],dx
  42460e:	pop    ds
  42460f:	sbb    ah,BYTE PTR [ecx]
  424611:	mov    dl,0x9b
  424613:	popf   
  424614:	sbb    BYTE PTR [ebp+ebx*2+0x3e0f8e6d],bh
  42461b:	jecxz  0x4245e0
  42461d:	scas   al,BYTE PTR es:[edi]
  42461e:	or     DWORD PTR [esi-0x51ce06fd],esp
  424624:	add    DWORD PTR [ecx-0x63],esp
  424627:	ja     0x4245df
  424629:	iret   
  42462a:	aad    0x2a
  42462c:	imul   ebp,esp,0xdb72066f
  424632:	mov    WORD PTR [ecx+0xe],gs
  424635:	xlat   BYTE PTR ds:[ebx]
  424636:	out    dx,al
  424637:	retf   
  424638:	jl     0x424681
  42463a:	fmulp  st(4),st
  42463c:	aam    0xcc
  42463e:	daa    
  42463f:	fisub  DWORD PTR [ecx-0x69497097]
  424645:	mov    ecx,0xa58f7352
  42464a:	out    0x37,eax
  42464c:	jle    0x4245d9
  42464e:	and    al,0xeb
  424650:	jmp    0x1010815
  424655:	rol    BYTE PTR [ebx],0x9e
  424658:	pop    eax
  424659:	shr    BYTE PTR ds:0x73d87d76,cl
  42465f:	jnp    0x4246c8
  424661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424662:	and    eax,0x62e337e3
  424667:	mov    dh,0xc
  424669:	js     0x4245f2
  42466b:	xor    bl,BYTE PTR [esi-0x31]
  42466e:	leave  
  42466f:	fdiv   QWORD PTR [esi+0x45116254]
  424675:	js     0x4246de
  424677:	popa   
  424678:	pusha  
  424679:	(bad)  
  42467a:	cmc    
  42467b:	add    ebx,esp
  42467d:	xor    eax,0x89c2a83c
  424682:	xor    al,0xd7
  424684:	dec    esi
  424685:	jnp    0x4246b1
  424687:	fwait
  424688:	pop    edx
  424689:	mov    esp,0xeb715d77
  42468e:	f2xm1  
  424690:	cmp    al,0x75
  424692:	push   ds
  424693:	cmc    
  424694:	xor    BYTE PTR [ebp-0x773fdb82],cl
  42469a:	(bad)  
  42469c:	jl     0x424631
  42469e:	xor    eax,0x59eb1c15
  4246a3:	loope  0x4246d4
  4246a5:	sbb    eax,0x7a1d206c
  4246aa:	mov    bl,0xb2
  4246ac:	popa   
  4246ad:	fsub   QWORD PTR [edi-0x3f]
  4246b0:	fwait
  4246b1:	out    0xfe,al
  4246b3:	push   0x71a048f4
  4246b8:	xor    al,0xa6
  4246ba:	fld    QWORD PTR [edx+0x1a1cd221]
  4246c0:	test   DWORD PTR [ecx],0xf7f137e8
  4246c6:	jg     0x42473c
  4246c8:	mov    esi,0xa6231d91
  4246cd:	retf   0x8228
  4246d0:	in     eax,dx
  4246d1:	and    BYTE PTR [ebp-0x1b],dl
  4246d4:	(bad)  
  4246d5:	shl    BYTE PTR [ebx+0x78],cl
  4246d8:	(bad)  
  4246d9:	jno    0x424747
  4246db:	push   ds
  4246dc:	dec    BYTE PTR [edx+0x64]
  4246df:	inc    esp
  4246e0:	cmp    al,0xc6
  4246e2:	jmp    0x4246c2
  4246e4:	in     al,0xab
  4246e6:	cld    
  4246e7:	lock mov eax,0xefed2d1e
  4246ed:	jg     0x4246c9
  4246ef:	aas    
  4246f0:	jle    0x42471e
  4246f2:	out    dx,al
  4246f3:	jmp    0x9bc7:0xa87ede3d
  4246fa:	outs   dx,BYTE PTR ds:[esi]
  4246fb:	mov    edx,0x8e609b2e
  424700:	mov    ch,0xff
  424702:	aad    0x5f
  424704:	out    dx,eax
  424705:	mov    esi,0x629f9076
  42470a:	jle    0x4246b4
  42470c:	xor    eax,0x469001d2
  424711:	xchg   DWORD PTR [esp+edi*8],esp
  424714:	fwait
  424715:	xchg   DWORD PTR fs:[esi+ecx*8],edx
  424719:	out    dx,eax
  42471a:	ficomp DWORD PTR [ebx]
  42471c:	jg     0x424750
  42471e:	or     BYTE PTR [esi],ch
  424720:	xor    BYTE PTR [eax+ecx*4+0x364ab425],dl
  424727:	mov    bl,0x76
  424729:	jae    0x42473a
  42472b:	test   eax,0x6b2c8978
  424730:	inc    ebp
  424731:	mov    dh,0x1e
  424733:	scas   eax,DWORD PTR es:[edi]
  424734:	shr    DWORD PTR [esi],0xf4
  424737:	jae    0x424732
  424739:	jge    0x4246bb
  42473b:	mov    gs,esp
  42473d:	jnp    0x4247b7
  42473f:	cmp    al,0xaa
  424741:	gs out 0xe0,eax
  424744:	popf   
  424745:	leave  
  424746:	jne    0x4247a7
  424748:	(bad)  
  424749:	int    0x62
  42474b:	data16 mov ds:0xc9090fdd,al
  424751:	retf   0x8950
  424754:	jge    0x4246d8
  424756:	adc    BYTE PTR [ebp+0x69],0xfa
  42475a:	jp     0x4246e7
  42475c:	xchg   edi,eax
  42475d:	lea    ecx,[edx]
  42475f:	(bad)  [edi]
  424761:	xchg   esi,eax
  424762:	dec    esi
  424763:	push   ebp
  424764:	pop    edi
  424765:	test   eax,0x2c500872
  42476a:	cmp    dl,0xdb
  42476d:	in     eax,0x87
  42476f:	mov    ah,0xee
  424771:	and    BYTE PTR [edi],bh
  424773:	xchg   ebp,eax
  424774:	dec    esp
  424775:	test   eax,0x25d02189
  42477a:	and    DWORD PTR [edx-0x24],ebp
  42477d:	sub    DWORD PTR [ebx],esi
  42477f:	mov    esi,0x40eefd1c
  424784:	xchg   esi,eax
  424785:	ret    
  424786:	imul   ebx,ebx,0x7b
  424789:	ret    0x38e7
  42478c:	sar    DWORD PTR [edx+0x5379c2cb],cl
  424792:	xor    edx,DWORD PTR [ebp+0x6c5f4e96]
  424798:	out    dx,al
  424799:	aas    
  42479a:	push   eax
  42479b:	ds pop ecx
  42479d:	dec    eax
  42479e:	adc    eax,0xf27ec485
  4247a3:	xchg   esp,eax
  4247a4:	dec    edi
  4247a5:	ret    
  4247a6:	pushf  
  4247a7:	aam    0x3f
  4247a9:	pop    edi
  4247aa:	pop    esi
  4247ab:	mov    al,0x6c
  4247ad:	call   0x70e8:0x4bbf23ff
  4247b4:	(bad)  
  4247b5:	mov    BYTE PTR [si],al
  4247b8:	and    DWORD PTR [ebx-0x38b66c9f],ecx
  4247be:	xchg   esp,eax
  4247bf:	bound  esi,QWORD PTR [edi+eiz*4]
  4247c2:	or     eax,DWORD PTR [edi-0x196fabaf]
  4247c8:	call   0xd3f80938
  4247cd:	repnz lds esp,FWORD PTR [eax-0xba9888]
  4247d4:	pop    eax
  4247d5:	(bad)  [eax+0x3]
  4247d8:	push   ebx
  4247d9:	jbe    0x424765
  4247db:	ror    BYTE PTR [ecx-0x27],1
  4247de:	jl     0x4247c7
  4247e0:	and    esp,eax
  4247e2:	sbb    eax,0x1ceee94d
  4247e7:	and    bl,al
  4247e9:	out    dx,al
  4247ea:	dec    esi
  4247eb:	dec    ecx
  4247ec:	adc    ebp,DWORD PTR [ebp-0x5001b6cd]
  4247f2:	mov    eax,ds:0xb108505b
  4247f7:	test   dh,ah
  4247f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247fa:	outs   dx,BYTE PTR ds:[esi]
  4247fb:	rcl    ebx,1
  4247fd:	daa    
  4247fe:	xchg   esp,eax
  4247ff:	or     al,0x25
  424801:	or     ch,BYTE PTR [edx]
  424803:	ret    
  424804:	mov    bh,BYTE PTR [edi]
  424806:	adc    BYTE PTR [ebp+esi*8-0x7b16ac9f],dl
  42480d:	sbb    bh,cl
  42480f:	int    0xde
  424811:	test   al,0xfc
  424813:	mov    dh,0xfa
  424815:	fdivr  DWORD PTR [edx+0x3d36a12a]
  42481b:	dec    eax
  42481c:	ins    BYTE PTR es:[edi],dx
  42481d:	xchg   ebp,eax
  42481e:	scas   ax,WORD PTR es:[edi]
  424820:	pop    esi
  424821:	(bad)  
  424822:	in     al,0x7d
  424824:	lahf   
  424825:	push   ds
  424826:	dec    esi
  424827:	scas   eax,DWORD PTR es:[edi]
  424828:	es fs sti 
  42482b:	nop
  42482c:	loop   0x424893
  42482e:	imul   edx,DWORD PTR [ebx+0x57],0x763fdfd4
  424835:	dec    esp
  424836:	xor    ch,BYTE PTR [eax+0x51]
  424839:	outs   dx,DWORD PTR ds:[esi]
  42483a:	shl    BYTE PTR ds:0xe6e16138,0x33
  424841:	loope  0x42488a
  424843:	sahf   
  424844:	jecxz  0x4248c4
  424846:	repz pop ss
  424848:	es sbb al,0x3
  42484b:	add    eax,0x3774e96c
  424850:	(bad)  
  424851:	int3   
  424852:	mov    BYTE PTR [eax],cl
  424854:	lods   al,BYTE PTR ds:[esi]
  424855:	mov    edi,0xcc6fa627
  42485a:	repnz jecxz 0x424866
  42485d:	stos   DWORD PTR es:[edi],eax
  42485e:	pusha  
  42485f:	in     al,dx
  424860:	xchg   edx,eax
  424861:	sub    ah,BYTE PTR [eax+0x19d980b2]
  424867:	aam    0x9a
  424869:	es pop edx
  42486b:	cmc    
  42486c:	(bad)
  42486f:	dec    edi
  424870:	xchg   edx,eax
  424871:	add    ebp,edi
  424873:	ja     0x4248a4
  424875:	sar    ch,0x7c
  424878:	(bad)  
  424879:	aad    0xce
  42487b:	cmp    BYTE PTR [edx],cl
  42487d:	cs int3 
  42487f:	cs push ss
  424881:	jae    0x42482e
  424883:	and    bh,BYTE PTR cs:[eax+0x6f]
  424887:	loopne 0x42485b
  424889:	dec    eax
  42488a:	ss xchg edi,eax
  42488c:	hlt    
  42488d:	shr    DWORD PTR ds:0x4241cdde,cl
  424893:	sbb    al,0x47
  424895:	dec    esp
  424896:	idiv   DWORD PTR [edi+0x794a694]
  42489c:	pop    ss
  42489d:	aam    0xcd
  42489f:	test   DWORD PTR [ebx-0x222c4566],0xe627b0fb
  4248a9:	sub    ebx,0x10b4b33b
  4248af:	lock test al,0xf2
  4248b2:	sti    
  4248b3:	loopne 0x42490c
  4248b5:	sbb    cl,bh
  4248b7:	push   ds
  4248b8:	out    dx,eax
  4248b9:	pop    ds
  4248ba:	popf   
  4248bb:	inc    eax
  4248bc:	repz test al,0xf1
  4248bf:	mov    ebx,0xbfc6550c
  4248c4:	inc    esp
  4248c5:	bound  ebp,QWORD PTR [ebp+0x10]
  4248c8:	dec    esi
  4248c9:	sbb    DWORD PTR [ecx],0x7902565f
  4248cf:	pop    ss
  4248d0:	(bad)
  4248d3:	repz mov esi,0xa4a08055
  4248d9:	(bad)  es:[edx-0x57]
  4248dd:	out    dx,al
  4248de:	repnz mov edx,0x3f95e267
  4248e4:	mov    ecx,0x4f91f928
  4248e9:	jb     0x424895
  4248eb:	pop    eax
  4248ec:	jmp    0xee287f86
  4248f1:	lods   eax,DWORD PTR ds:[esi]
  4248f2:	pop    ss
  4248f3:	and    DWORD PTR [ebx-0x51a5ccb5],edi
  4248f9:	pop    esi
  4248fa:	cmp    BYTE PTR [esi-0x7f568d27],0x5
  424901:	ficom  WORD PTR [ecx]
  424903:	jmp    0x3ab02d1b
  424908:	rcl    DWORD PTR [eax+eax*4],0x63
  42490c:	sub    DWORD PTR [edi-0xa586657],edx
  424912:	lods   eax,DWORD PTR ds:[esi]
  424913:	out    0x74,al
  424915:	lods   al,BYTE PTR ds:[esi]
  424916:	not    BYTE PTR ds:0x399a680a
  42491c:	enter  0xf97a,0x5f
  424920:	fwait
  424921:	xor    ebp,DWORD PTR [ecx+0x1aba9bee]
  424927:	mov    ebx,0xbb44fe98
  42492c:	adc    al,0xc0
  42492e:	call   0xab1e51f6
  424933:	pop    es
  424934:	push   esp
  424935:	push   edx
  424936:	cs dec edx
  424938:	js     0x4248fb
  42493a:	mov    edx,0xd0507bdf
  42493f:	scas   eax,DWORD PTR es:[edi]
  424940:	add    eax,0x73294b4d
  424945:	hlt    
  424946:	sysexit 
  424948:	inc    ecx
  424949:	jge    0x424994
  42494b:	ret    
  42494c:	sub    ch,dh
  42494e:	dec    ebp
  42494f:	jnp    0x424986
  424951:	mov    DWORD PTR [esi+edx*4],edi
  424954:	lods   al,BYTE PTR ds:[esi]
  424955:	fstp   QWORD PTR [ecx]
  424957:	add    bh,al
  424959:	aam    0xd5
  42495b:	addr16 int3 
  42495d:	stos   BYTE PTR es:[edi],al
  42495e:	iret   
  42495f:	or     DWORD PTR [ebx+0x68],0xfffffff0
  424963:	push   ss
  424964:	pusha  
  424965:	retf   0x934b
  424968:	dec    edi
  424969:	and    al,0xe7
  42496b:	lods   eax,DWORD PTR ds:[esi]
  42496c:	ss push eax
  42496e:	mov    bh,0x42
  424970:	push   esp
  424971:	pop    es
  424972:	in     eax,dx
  424973:	ja     0x4249f1
  424975:	xchg   ebp,eax
  424976:	or     BYTE PTR [edx],bh
  424978:	in     eax,dx
  424979:	outs   dx,DWORD PTR ds:[esi]
  42497a:	js     0x424911
  42497c:	or     BYTE PTR [ecx-0x7c],al
  42497f:	sub    DWORD PTR [ebp+0x3d],0x26f5c318
  424986:	outs   dx,DWORD PTR ds:[esi]
  424987:	xchg   edi,eax
  424988:	sbb    ch,BYTE PTR [eax+0x42]
  42498b:	in     al,0xdf
  42498d:	das    
  42498e:	(bad)  
  424990:	rcl    DWORD PTR [edi+0x3e],0xd9
  424994:	fisub  WORD PTR [esi-0x2413bb47]
  42499a:	xchg   esp,eax
  42499b:	push   DWORD PTR [esi]
  42499d:	imul   eax,DWORD PTR [edi-0x31a38d8],0xffffffd5
  4249a4:	imul   esi,DWORD PTR [esi],0xf0f42d0b
  4249aa:	fcomp  QWORD PTR [eax+0x36eb47c6]
  4249b0:	and    edi,DWORD PTR ds:0x89813b20
  4249b6:	xchg   ebp,eax
  4249b7:	repnz lods eax,DWORD PTR ds:[esi]
  4249b9:	test   al,0x5
  4249bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249bc:	jl     0x424972
  4249be:	mov    dh,0x74
  4249c0:	jno    0x424a06
  4249c2:	test   al,0x2a
  4249c4:	shl    BYTE PTR [ecx],0xca
  4249c7:	pop    edi
  4249c8:	in     al,0xdd
  4249ca:	repz jo 0x424965
  4249cd:	xchg   ebp,eax
  4249ce:	stos   DWORD PTR es:[edi],eax
  4249cf:	pop    ss
  4249d0:	shr    bl,1
  4249d2:	inc    ecx
  4249d3:	mov    bh,0xfa
  4249d5:	iret   
  4249d6:	push   cs
  4249d7:	hlt    
  4249d8:	ja     0x4249d5
  4249da:	(bad)  
  4249db:	pop    ebx
  4249dc:	mov    edi,0x17756197
  4249e1:	inc    ecx
  4249e2:	mov    cl,0x27
  4249e4:	jecxz  0x424a44
  4249e6:	sti    
  4249e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249e8:	mov    ch,0xe4
  4249ea:	add    DWORD PTR [ebx],0x69911f68
  4249f0:	xchg   ebp,eax
  4249f1:	jge    0x424a2d
  4249f3:	call   0x623c:0x8b22f648
  4249fa:	arpl   WORD PTR [ebx],bx
  4249fc:	add    DWORD PTR [ecx-0x8acc1b3],edi
  424a02:	shr    BYTE PTR [ebp+0x4622ef0a],1
  424a08:	push   ebp
  424a09:	add    dl,bh
  424a0b:	xor    cl,bl
  424a0d:	mov    ebx,0x7032955
  424a12:	imul   BYTE PTR [ecx-0x14]
  424a15:	pusha  
  424a16:	push   edi
  424a17:	in     al,dx
  424a18:	out    0x26,al
  424a1a:	mov    eax,0xcf3ac026
  424a1f:	push   edx
  424a20:	fadd   st(5),st
  424a22:	mov    bl,0x41
  424a24:	mov    BYTE PTR [edx+0x7a],bh
  424a27:	jne    0x424a49
  424a29:	repnz mov edx,0x4d177010
  424a2f:	xchg   DWORD PTR [edi+0x8],esi
  424a32:	sub    eax,0x7ed70b9c
  424a37:	in     al,dx
  424a38:	inc    edx
  424a39:	push   ds
  424a3a:	enter  0xc989,0x46
  424a3e:	mov    eax,0x28ccfab
  424a43:	repz (bad) 
  424a45:	rcl    BYTE PTR [ebx-0x66],cl
  424a48:	mov    bl,0xda
  424a4a:	(bad)  
  424a4b:	bound  edi,QWORD PTR [esi-0x47]
  424a4e:	bound  edx,QWORD PTR [ebp+0x30]
  424a51:	lea    edx,[ebx+0x6a]
  424a54:	mov    ebx,0x91a5684c
  424a59:	repnz shr DWORD PTR [ecx+0x89bd38d],1
  424a60:	inc    ebx
  424a61:	sar    BYTE PTR [edi-0x2cd1743b],0xfd
  424a68:	das    
  424a69:	mov    gs,ebx
  424a6b:	pop    esp
  424a6c:	shl    BYTE PTR [ecx-0x319a1834],cl
  424a72:	sti    
  424a73:	pop    eax
  424a74:	jno    0x424a99
  424a76:	ins    DWORD PTR es:[edi],dx
  424a77:	sub    eax,ebp
  424a79:	fstp   TBYTE PTR [ebp+0x6132a4bb]
  424a7f:	pushf  
  424a80:	push   edx
  424a81:	adc    al,0x3d
  424a83:	retf   0x978b
  424a86:	push   edx
  424a87:	mov    al,es:0x74535692
  424a8d:	mov    ax,ds:0x4e1159d2
  424a93:	xchg   edx,eax
  424a94:	out    0xc4,eax
  424a96:	into   
  424a97:	std    
  424a98:	mov    ebp,DWORD PTR [esi-0xb]
  424a9b:	xor    BYTE PTR [eax-0x3607992d],cl
  424aa1:	adc    eax,0x940a8e83
  424aa6:	(bad)  [edi-0x1e]
  424aa9:	dec    ebp
  424aab:	dec    edi
  424aac:	(bad)  
  424aad:	cli    
  424aae:	pop    esi
  424aaf:	mov    edx,0xd7d90ec4
  424ab4:	in     al,0xc4
  424ab6:	jb     0x424a85
  424ab8:	pop    es
  424ab9:	(bad)  
  424aba:	dec    ebx
  424abb:	inc    ecx
  424abc:	pop    ecx
  424abd:	mov    bh,0xa9
  424abf:	and    eax,0x6394ac96
  424ac4:	in     al,0x58
  424ac6:	push   esi
  424ac7:	stos   DWORD PTR es:[edi],eax
  424ac8:	sub    BYTE PTR [esi-0x58],ah
  424acb:	jg     0x424a6b
  424acd:	mov    bh,0x2f
  424acf:	and    eax,DWORD PTR [eax]
  424ad1:	push   0xffffffcf
  424ad3:	mov    bl,BYTE PTR [edi]
  424ad5:	inc    esi
  424ad6:	dec    ebp
  424ad7:	xor    al,dh
  424ad9:	dec    edx
  424ada:	xor    edx,esi
  424adc:	mov    DWORD PTR [ebx],0xaec0218b
  424ae2:	add    DWORD PTR [eax-0x494e7bc8],edx
  424ae8:	adc    eax,0x8bcac69f
  424aed:	pop    edi
  424aee:	(bad)  
  424af0:	jp     0x424ab5
  424af2:	inc    eax
  424af3:	jecxz  0x424b3a
  424af5:	call   0x6973:0x902b7abc
  424afc:	les    eax,FWORD PTR [edi-0x475e8338]
  424b02:	dec    edi
  424b03:	fstp   QWORD PTR [esi+0xc2addb0]
  424b09:	repnz inc esp
  424b0b:	js     0x424acc
  424b0d:	out    0x57,al
  424b0f:	push   edx
  424b10:	xor    al,0xeb
  424b12:	rol    DWORD PTR [eax],0xef
  424b15:	jmp    0xa267:0xae8a4817
  424b1c:	cli    
  424b1d:	or     dl,BYTE PTR [eax]
  424b1f:	loope  0x424aba
  424b21:	mov    edi,0xdf092092
  424b26:	aas    
  424b27:	sub    DWORD PTR [edx-0xd],0x9
  424b2b:	arpl   WORD PTR [ebx+ebx*2+0x25071df1],sp
  424b32:	mov    ecx,0x2ce73eec
  424b37:	pop    edx
  424b38:	add    eax,DWORD PTR [eax-0x3c]
  424b3b:	mov    eax,0xc9e4bf5a
  424b40:	xchg   DWORD PTR [ebx+eiz*1],esp
  424b43:	fidivr DWORD PTR [edi+0x58b9d659]
  424b49:	xchg   BYTE PTR [edx-0x1bd0a0c2],bh
  424b4f:	sbb    edi,DWORD PTR [edi]
  424b51:	pop    edx
  424b52:	xor    DWORD PTR [edi],esi
  424b54:	inc    ebp
  424b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b56:	int3   
  424b57:	jno    0x424b01
  424b59:	in     eax,0x55
  424b5b:	cvttps2pi mm3,QWORD PTR [eax-0x333dcbed]
  424b62:	scas   al,BYTE PTR es:[edi]
  424b63:	je     0x424bd9
  424b65:	test   bl,0x16
  424b68:	jmp    0x824eae6d
  424b6d:	inc    ecx
  424b6e:	push   ebp
  424b6f:	lods   eax,DWORD PTR ds:[esi]
  424b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b71:	jnp    0x424b80
  424b73:	pushf  
  424b74:	jg     0x424b49
  424b76:	add    eax,0x5befede2
  424b7b:	add    eax,ecx
  424b7d:	mov    eax,ds:0x43c14766
  424b82:	hlt    
  424b83:	pop    edi
  424b84:	cli    
  424b85:	mov    ebx,0x5cc1b1af
  424b8a:	sbb    al,cl
  424b8c:	and    eax,0x1ad64a68
  424b91:	rcl    BYTE PTR [eax+0x66],0x4b
  424b95:	or     BYTE PTR [esi+esi*2+0x49],cl
  424b99:	xchg   esp,eax
  424b9a:	mov    ds:0xcb834c3,al
  424b9f:	pop    ds
  424ba0:	inc    ebx
  424ba1:	and    ecx,DWORD PTR [edx]
  424ba3:	xchg   ebx,esi
  424ba5:	test   DWORD PTR [esi],eax
  424ba7:	es pop edx
  424ba9:	cdq    
  424baa:	and    al,0xb3
  424bac:	xchg   DWORD PTR [eax-0x58],esp
  424baf:	sub    BYTE PTR [edx-0x37d6065a],ah
  424bb5:	pop    esp
  424bb6:	mov    ebp,0xd65a36cd
  424bbb:	adc    eax,0x6b2e2a39
  424bc0:	and    esp,DWORD PTR [eax-0xafac91f]
  424bc6:	jae    0x424bbb
  424bc8:	out    dx,al
  424bc9:	arpl   WORD PTR [eax+0x23],cx
  424bcc:	mov    ecx,0xffb162f7
  424bd1:	addps  xmm7,XMMWORD PTR [ebx]
  424bd4:	add    edi,DWORD PTR [ebx+0x43ab53c9]
  424bda:	add    BYTE PTR [ecx-0x71],0x41
  424bde:	sub    DWORD PTR [ecx-0x6e],esi
  424be1:	mov    edi,0xa100797e
  424be6:	mov    ds:0x8e0fad11,eax
  424beb:	(bad)  
  424bec:	iret   
  424bed:	ret    0x1f19
  424bf0:	pusha  
  424bf1:	repnz sahf 
  424bf3:	push   ebx
  424bf4:	add    eax,ecx
  424bf6:	jle    0x424bc9
  424bf8:	jne    0x424b7d
  424bfa:	scas   al,BYTE PTR es:[edi]
  424bfb:	in     eax,dx
  424bfc:	in     al,0x45
  424bfe:	add    BYTE PTR [edx-0x58f776e0],ah
  424c04:	xor    ebx,DWORD PTR [eax-0x4f6fd671]
  424c0a:	pushf  
  424c0b:	mov    edx,0xd6457592
  424c10:	push   0xffffff86
  424c12:	popf   
  424c13:	sub    eax,0xdf94804e
  424c18:	jecxz  0x424c3d
  424c1a:	dec    ecx
  424c1b:	sub    ah,BYTE PTR [eax+eiz*8+0x21]
  424c1f:	pop    ss
  424c20:	inc    edx
  424c21:	push   ebp
  424c22:	mov    dh,0x21
  424c24:	push   ebp
  424c25:	out    0xa9,eax
  424c27:	std    
  424c28:	adc    cl,BYTE PTR [ebx-0x3f2b3c63]
  424c2e:	fild   DWORD PTR [edx+0x72b094f1]
  424c34:	bsr    ebp,DWORD PTR [eax+eax*4+0x28]
  424c39:	and    ah,BYTE PTR [edx+ecx*4+0x41]
  424c3d:	and    DWORD PTR [ebx-0x1bdb844a],ecx
  424c43:	and    BYTE PTR [edi+0x58],bh
  424c46:	fmul   DWORD PTR [eax+0x26]
  424c49:	sbb    BYTE PTR ds:0xbc5a037a,bh
  424c4f:	xchg   esp,eax
  424c50:	stc    
  424c51:	xor    edx,DWORD PTR [edi]
  424c53:	test   al,0x19
  424c55:	pop    ecx
  424c56:	into   
  424c57:	sbb    al,0x6e
  424c59:	cld    
  424c5a:	out    0x8d,eax
  424c5c:	pop    ebp
  424c5d:	and    eax,0x44856cea
  424c62:	(bad)
  424c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c66:	xor    eax,0xe421155e
  424c6b:	xchg   esi,eax
  424c6c:	jge    0x424cea
  424c6e:	loopne 0x424c54
  424c70:	test   bh,ch
  424c72:	adc    al,0x69
  424c74:	gs retf 0x402c
  424c78:	push   cs
  424c79:	dec    ebp
  424c7a:	xor    eax,DWORD PTR [ebp+ebx*1+0x6b]
  424c7e:	add    al,0x70
  424c80:	adc    DWORD PTR [ecx+0x5634d93d],0xebb6bd51
  424c8a:	dec    eax
  424c8b:	clc    
  424c8c:	xchg   esp,eax
  424c8d:	dec    ebx
  424c8e:	mov    ebx,0xe33a1dcf
  424c93:	xlat   BYTE PTR ds:[ebx]
  424c94:	fstp   TBYTE PTR [ecx+0x27]
  424c97:	cld    
  424c98:	dec    ebp
  424c99:	fidivr DWORD PTR [eax+ebx*4+0x457ce1cd]
  424ca0:	repnz cmp ebx,DWORD PTR [edi+0x10664b3b]
  424ca7:	xor    al,0xba
  424ca9:	inc    esp
  424caa:	cmp    al,0x1f
  424cac:	clc    
  424cad:	dec    esi
  424cae:	mov    esi,0x3403065a
  424cb3:	add    edi,DWORD PTR [ecx+0x73f9f264]
  424cb9:	xor    ah,ch
  424cbb:	jmp    DWORD PTR [ebx+0x70]
  424cbe:	mov    esp,?
  424cc0:	adc    eax,DWORD PTR [ebx]
  424cc2:	sbb    al,0x13
  424cc4:	mov    edi,0xfd2fa03
  424cc9:	sbb    dl,ch
  424ccb:	mov    edi,0x98ac73a
  424cd0:	call   0x44427b41
  424cd5:	(bad)  [esi+ecx*4+0x78]
  424cd9:	and    edx,esi
  424cdb:	jp     0x424cf8
  424cdd:	mov    dh,0xaa
  424cdf:	or     DWORD PTR [ebx-0x4d91f2a4],ebx
  424ce5:	call   0x20e6:0xd3beaa56
  424cec:	stos   BYTE PTR es:[edi],al
  424ced:	mov    al,ds:0xdd0c8659
  424cf2:	and    ebx,DWORD PTR [edx-0x7b]
  424cf5:	push   eax
  424cf6:	retf   
  424cf7:	fdiv   DWORD PTR [edx+0x7e]
  424cfa:	in     al,0xd3
  424cfc:	mov    esi,0x2a685c6f
  424d01:	mov    al,0x23
  424d03:	pop    edi
  424d04:	repnz cmp DWORD PTR [esi+ecx*4-0x7c],esi
  424d09:	xor    ebx,esi
  424d0b:	mov    ch,cl
  424d0d:	hlt    
  424d0e:	ret    
  424d0f:	hlt    
  424d10:	inc    edi
  424d11:	mov    esp,0xf02465a7
  424d16:	push   cs
  424d17:	xchg   BYTE PTR [ecx],ch
  424d19:	and    ecx,DWORD PTR [ebx+0x58]
  424d1c:	adc    eax,0xa125bf5b
  424d21:	sbb    al,0xd2
  424d23:	aaa    
  424d24:	pop    es
  424d25:	and    cl,BYTE PTR [ebx+0x7a91cdc8]
  424d2b:	out    0xcc,eax
  424d2d:	mov    ds:0x45de6be0,eax
  424d32:	mov    edx,0x55761439
  424d37:	mov    eax,0xedb34ebd
  424d3c:	cmp    esi,DWORD PTR [ebx]
  424d3e:	stc    
  424d3f:	jno    0x424cf6
  424d41:	mov    bl,0x61
  424d43:	bnd jae 0x424d59
  424d46:	mov    DWORD PTR [eax-0x74],0x467473af
  424d4d:	jae    0x424d53
  424d4f:	test   al,0x8e
  424d51:	jmp    0x424d8a
  424d53:	mov    WORD PTR [eax+0x5179db9e],cs
  424d59:	sbb    DWORD PTR [esi-0x5c198a49],edi
  424d5f:	dec    ebx
  424d60:	mov    esi,0xe58f699c
  424d65:	mov    esi,0x13de8017
  424d6a:	loop   0x424dae
  424d6c:	jne    0x424db4
  424d6e:	daa    
  424d6f:	sbb    DWORD PTR [esi+0x3944a687],eax
  424d75:	dec    edi
  424d76:	push   edi
  424d77:	and    BYTE PTR [edi+eax*4-0x36],ch
  424d7b:	enter  0x7d94,0x9d
  424d7f:	inc    edi
  424d80:	out    dx,al
  424d81:	cwde   
  424d82:	lea    edx,[edi+0x3699e7dc]
  424d88:	inc    esi
  424d89:	into   
  424d8a:	add    al,0xab
  424d8c:	cmc    
  424d8d:	cdq    
  424d8e:	ja     0x424dee
  424d90:	dec    esp
  424d91:	sar    BYTE PTR [edx],1
  424d93:	adc    edi,edx
  424d95:	mov    ds:0x343d6c13,eax
  424d9a:	clc    
  424d9b:	jb     0x5c4b3dc8
  424da1:	and    al,0x7
  424da3:	out    dx,al
  424da4:	loope  0x424e08
  424da6:	push   0xfdc17a53
  424dab:	mov    al,ds:0xd8685bae
  424db0:	sbb    eax,esp
  424db2:	push   edi
  424db3:	fimul  DWORD PTR [esp+ebx*1+0x36]
  424db7:	mov    esp,0x1385bbe8
  424dbc:	or     eax,ecx
  424dbe:	xor    ecx,DWORD PTR [edx-0x49ac8e6b]
  424dc4:	mov    ebx,0x3db13f96
  424dc9:	into   
  424dca:	push   ebx
  424dcb:	xor    BYTE PTR [eax-0x5a376998],bh
  424dd1:	lods   al,BYTE PTR ds:[esi]
  424dd2:	das    
  424dd3:	xor    al,0x4c
  424dd5:	inc    esi
  424dd6:	outs   dx,DWORD PTR ds:[esi]
  424dd7:	stos   DWORD PTR es:[edi],eax
  424dd8:	icebp  
  424dd9:	add    al,0x18
  424ddb:	adc    al,BYTE PTR [ecx-0x6c079a9d]
  424de1:	jo     0x424d97
  424de3:	jl     0x424e3a
  424de5:	test   al,0x7d
  424de7:	in     eax,0xca
  424de9:	xchg   esp,eax
  424dea:	and    BYTE PTR [ebx+0x9f8d69e],ch
  424df0:	cmp    eax,0xa1526937
  424df5:	ins    BYTE PTR es:[edi],dx
  424df6:	fwait
  424df7:	mov    ebx,0xaab770a4
  424dfc:	jmp    0xc4c6:0x9018b910
  424e03:	pop    es
  424e04:	(bad)  
  424e05:	sbb    ecx,DWORD PTR [ebp+0x35]
  424e08:	push   edx
  424e09:	in     eax,0xf3
  424e0b:	mov    dh,0x7b
  424e0d:	cs fs mov dh,0x5c
  424e11:	nop
  424e12:	int    0xb6
  424e14:	(bad)  
  424e15:	fsubp  st(5),st
  424e17:	stc    
  424e18:	sub    BYTE PTR [esi-0x75],ch
  424e1b:	mov    edi,0x56dd597d
  424e20:	pop    esi
  424e21:	add    esp,DWORD PTR [edi-0x54]
  424e24:	lods   al,BYTE PTR ds:[esi]
  424e25:	arpl   WORD PTR [edi-0x50],cx
  424e28:	lods   al,BYTE PTR ds:[esi]
  424e29:	inc    ebp
  424e2a:	(bad)  
  424e2c:	mov    edx,0xea1c8f7a
  424e31:	pop    ecx
  424e32:	addr16 cs or cl,ch
  424e36:	daa    
  424e37:	test   al,0xf8
  424e39:	sbb    BYTE PTR [edi-0x29],ah
  424e3c:	pop    eax
  424e3d:	xor    ebx,eax
  424e3f:	mov    cs,WORD PTR [esi]
  424e41:	daa    
  424e42:	and    ebp,DWORD PTR [ecx+0x6d]
  424e45:	outs   dx,BYTE PTR ds:[esi]
  424e46:	sbb    edx,DWORD PTR [ebx+0x34]
  424e49:	jb     0x424e38
  424e4b:	ja     0x424de8
  424e4d:	dec    ebp
  424e4e:	pushf  
  424e4f:	mov    WORD PTR [edx+0x60],fs
  424e52:	hlt    
  424e53:	clc    
  424e54:	pop    edi
  424e55:	out    0xd5,eax
  424e57:	dec    ecx
  424e58:	adc    DWORD PTR [eax+edx*4+0x59],edi
  424e5c:	ds popf 
  424e5e:	retf   
  424e5f:	ins    BYTE PTR es:[edi],dx
  424e60:	xchg   esp,eax
  424e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e62:	fwait
  424e63:	(bad)  
  424e64:	add    al,0x18
  424e66:	pop    ds
  424e67:	mov    ecx,0x21224052
  424e6c:	xchg   edx,eax
  424e6d:	lea    esp,[ebp-0x58535f57]
  424e73:	jne    0x424e87
  424e75:	sbb    BYTE PTR [eax+0x78],ch
  424e78:	jg     0x424e9a
  424e7a:	aaa    
  424e7b:	jl     0x424efc
  424e7d:	pop    ebp
  424e7e:	in     eax,dx
  424e7f:	mov    ebp,0x60fdead1
  424e84:	and    eax,0x71edc9ac
  424e89:	clc    
  424e8a:	add    eax,0x619d0d61
  424e8f:	outs   dx,BYTE PTR ds:[esi]
  424e90:	inc    esi
  424e91:	cmc    
  424e92:	push   edi
  424e93:	or     DWORD PTR [eax+0x14b22af3],ebx
  424e99:	imul   ecx,ebx,0x4d60d55b
  424e9f:	enter  0xa67f,0x6f
  424ea3:	jp     0x424e4e
  424ea5:	add    ch,BYTE PTR [edx+0x1dca73c3]
  424eab:	cmc    
  424eac:	(bad)  
  424ead:	popf   
  424eae:	fcomp  QWORD PTR [edx-0x62fa2484]
  424eb4:	push   0xc
  424eb6:	dec    edi
  424eb7:	jb     0x424ea5
  424eb9:	dec    esi
  424eba:	sar    BYTE PTR [esi+0xd630282],cl
  424ec0:	xor    ebx,edi
  424ec2:	mov    eax,ds:0xef29b713
  424ec7:	repnz fisubr DWORD PTR ds:[ecx+0x339b63ca]
  424ecf:	adc    ch,BYTE PTR [ebx+ebp*8-0x7622f641]
  424ed6:	(bad)  
  424ed7:	lods   eax,DWORD PTR ds:[esi]
  424ed8:	repz addr16 xor al,0xf6
  424edc:	jno    0x424ef2
  424ede:	pop    eax
  424edf:	rcl    DWORD PTR [ebx],cl
  424ee1:	(bad)  
  424ee2:	fdivr  DWORD PTR [esi]
  424ee4:	push   ds
  424ee5:	ficom  DWORD PTR [ebp+ebx*1-0x36bb97ae]
  424eec:	mov    al,0xd4
  424eee:	mov    ebp,0x3b46bbb3
  424ef3:	adc    BYTE PTR ss:[ebx-0x1d],cl
  424ef7:	imul   esp,DWORD PTR [edx],0x9b143bd7
  424efd:	retf   0xb7c
  424f00:	shr    DWORD PTR [edi-0x65],cl
  424f03:	cmc    
  424f04:	loop   0x424ea7
  424f06:	ret    0x3b5f
  424f09:	shr    cl,cl
  424f0b:	lds    esi,FWORD PTR [ebp+0x3]
  424f0e:	jo     0x424f1a
  424f10:	pop    edi
  424f11:	mov    BYTE PTR [ebx],bl
  424f13:	or     DWORD PTR [ebx],ebx
  424f15:	jg     0x424f81
  424f17:	inc    ebp
  424f18:	push   ebx
  424f19:	lods   al,BYTE PTR ds:[esi]
  424f1a:	mov    ds:0x10d02ea,eax
  424f1f:	cmc    
  424f20:	mov    eax,0x5c94bae2
  424f25:	and    ebp,0xfffffffe
  424f28:	xchg   edx,eax
  424f29:	data16 jbe 0x424f2b
  424f2c:	inc    esi
  424f2d:	pop    eax
  424f2e:	pushf  
  424f2f:	out    0x7,al
  424f31:	inc    esp
  424f32:	pop    es
  424f33:	mov    BYTE PTR [ebx],ch
  424f35:	ja     0x424ef6
  424f37:	pushf  
  424f38:	imul   esp,edi,0xdf0d20ed
  424f3e:	xor    dl,BYTE PTR [edi]
  424f40:	out    dx,eax
  424f41:	call   0x7697509c
  424f46:	mov    ebp,gs
  424f48:	mov    edx,0x8f33e40d
  424f4d:	jnp    0x424f4f
  424f4f:	imul   edi,DWORD PTR [edi+ebx*8+0x74186e85],0x7e1fcfa7
  424f5a:	mov    al,ds:0xd92684ed
  424f5f:	fist   WORD PTR [edx-0x26]
  424f62:	mov    ebx,0x494cebf7
  424f67:	mov    al,ds:0xf4ba96e4
  424f6c:	jle    0x424f2c
  424f6e:	inc    ebp
  424f6f:	mov    WORD PTR [ebp+0x39],?
  424f72:	pop    esp
  424f73:	add    BYTE PTR [esi+0x1591d48b],ah
  424f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f7a:	inc    esi
  424f7b:	cmovae ecx,DWORD PTR [esi]
  424f7e:	jg     0x424f58
  424f80:	push   ss
  424f81:	aad    0xa3
  424f83:	cmp    eax,0x8e1af6d6
  424f88:	add    ah,bh
  424f8a:	rcr    BYTE PTR [esp+esi*4+0x7e],1
  424f8e:	or     edi,DWORD PTR [edi-0x43]
  424f91:	aad    0x5c
  424f93:	ror    esp,cl
  424f95:	pop    edi
  424f96:	frstor [esi-0x18]
  424f99:	mov    ch,0x56
  424f9b:	js     0x424fbb
  424f9d:	cmc    
  424f9e:	or     al,0x5d
  424fa0:	and    DWORD PTR [ebx],ebx
  424fa2:	std    
  424fa3:	jbe    0x424fb4
  424fa5:	cli    
  424fa6:	inc    eax
  424fa7:	in     al,dx
  424fa8:	add    DWORD PTR [edx],edi
  424faa:	inc    edi
  424fab:	stos   DWORD PTR es:[edi],eax
  424fac:	sub    eax,0x39f8a50d
  424fb1:	nop
  424fb2:	dec    esp
  424fb3:	jle    0x425011
  424fb5:	das    
  424fb6:	gs fmul st,st(1)
  424fb9:	dec    ebp
  424fba:	ror    DWORD PTR [eax],0xb6
  424fbd:	push   ecx
  424fbe:	loope  0x425013
  424fc0:	das    
  424fc1:	sub    DWORD PTR [ebp+0x55],0xfffffff0
  424fc5:	pop    eax
  424fc6:	stos   DWORD PTR es:[edi],eax
  424fc7:	adc    al,0x2c
  424fc9:	aas    
  424fca:	jns    0x424fac
  424fcc:	inc    esp
  424fcd:	xchg   ebp,eax
  424fce:	adc    BYTE PTR [eax-0x3853bd1b],0x69
  424fd5:	add    eax,0xa9abf8ac
  424fda:	and    bl,0xa3
  424fdd:	mov    ah,0x2b
  424fdf:	(bad)  
  424fe0:	out    dx,eax
  424fe1:	rol    ebx,0x67
  424fe4:	or     al,dl
  424fe6:	push   cs
  424fe7:	lods   eax,DWORD PTR ds:[esi]
  424fe8:	add    al,0xf6
  424fea:	xor    esi,esi
  424fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fed:	push   0xffffffcc
  424fef:	loopne 0x424fd8
  424ff1:	stos   BYTE PTR es:[edi],al
  424ff2:	shl    cl,0xd1
  424ff5:	retf   
  424ff6:	dec    ecx
  424ff7:	xlat   BYTE PTR ds:[ebx]
  424ff8:	data16 mov BYTE PTR [eax-0x5],0xad
  424ffd:	adc    ebp,DWORD PTR [eax-0x5a]
  425000:	dec    esp
  425001:	xlat   BYTE PTR ds:[ebx]
  425002:	pop    edi
  425003:	jae    0x424fd0
  425005:	pop    esp
  425006:	out    0xfa,al
  425008:	push   ebx
  425009:	xchg   ebp,eax
  42500a:	and    dl,BYTE PTR [esi-0x55]
  42500d:	adc    BYTE PTR [edi+0x580e93d6],ah
  425013:	fwait
  425014:	xchg   ebx,eax
  425015:	fnstenv [eax-0x77ed3e02]
  42501b:	sbb    eax,0x8ccaa768
  425020:	sar    DWORD PTR [esi+0x55fdbb2a],cl
  425026:	jne    0x425098
  425028:	test   BYTE PTR [ecx],bh
  42502a:	nop
  42502b:	jb     0x425050
  42502d:	xor    DWORD PTR [edi],ebp
  42502f:	inc    ebp
  425030:	mov    edx,0x7b0e5311
  425035:	add    DWORD PTR [ebx-0x6e427134],edi
  42503b:	icebp  
  42503c:	test   eax,0xb09c341d
  425041:	or     DWORD PTR [esi-0x64],0xffffffb0
  425045:	sbb    edi,edx
  425047:	icebp  
  425048:	lds    esp,FWORD PTR [edx-0x6b]
  42504b:	dec    edi
  42504c:	jle    0x42501b
  42504e:	sahf   
  42504f:	dec    edx
  425050:	inc    ebp
  425051:	pop    es
  425052:	add    eax,0xda3724c7
  425057:	mov    esp,0xcd1371cf
  42505c:	push   ss
  42505d:	dec    eax
  42505e:	pop    es
  42505f:	add    ebp,DWORD PTR cs:[eax]
  425062:	push   es
  425063:	ja     0x4250b7
  425065:	mov    dh,0x87
  425067:	inc    esi
  425068:	lahf   
  425069:	push   es
  42506a:	ins    BYTE PTR es:[edi],dx
  42506b:	xlat   BYTE PTR ds:[ebx]
  42506c:	mov    edi,0xad0069ed
  425071:	mov    bl,0x93
  425073:	clc    
  425074:	mov    esi,0xd19f3c05
  425079:	test   eax,0x4756ac91
  42507e:	repz mov bl,0x8b
  425081:	test   al,0xe3
  425083:	pop    esi
  425084:	cmp    bh,BYTE PTR [edi]
  425086:	push   es
  425087:	inc    edx
  425088:	out    dx,eax
  425089:	scas   al,BYTE PTR es:[edi]
  42508a:	cmp    eax,0x2c20bf93
  42508f:	jbe    0x42507a
  425091:	gs sbb eax,0x722b7197
  425097:	sbb    al,BYTE PTR [ecx-0x72e7c716]
  42509d:	mov    DWORD PTR [ebx-0x13],0x77a69c98
  4250a4:	cli    
  4250a5:	test   DWORD PTR [edx-0x54],0x4ecaaa9d
  4250ac:	or     ch,ah
  4250ae:	push   ebp
  4250af:	bound  eax,QWORD PTR [edi+0x41]
  4250b2:	mov    ebx,0x7e61a34
  4250b7:	loopne 0x425070
  4250b9:	mov    eax,ds:0xa94f5858
  4250be:	fist   WORD PTR ds:0xce9b6ee8
  4250c4:	jl     0x4250af
  4250c6:	lock repz push edx
  4250c9:	outs   dx,DWORD PTR ds:[esi]
  4250ca:	and    BYTE PTR [eax+0x10],ch
  4250cd:	dec    esi
  4250ce:	push   0x5f
  4250d0:	cmp    DWORD PTR ds:0xb2f6f5c4,edx
  4250d6:	cmc    
  4250d7:	fstp   DWORD PTR [ebx]
  4250d9:	push   es
  4250da:	mov    ss,ecx
  4250dc:	pop    edx
  4250dd:	jb     0x42512e
  4250df:	push   ds
  4250e0:	es lahf 
  4250e2:	jb     0x42515b
  4250e4:	mov    bh,0xa0
  4250e6:	and    bh,bh
  4250e8:	bswap  esi
  4250ea:	mov    eax,DWORD PTR [eax-0x189e3615]
  4250f0:	lods   al,BYTE PTR ds:[esi]
  4250f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250f2:	pop    ecx
  4250f3:	push   eax
  4250f4:	clc    
  4250f5:	fisttp WORD PTR [ecx+esi*8]
  4250f8:	das    
  4250f9:	ror    ah,1
  4250fb:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4250fd:	hlt    
  4250fe:	adc    bh,ah
  425100:	pop    esi
  425101:	add    BYTE PTR [ebx-0x130eed1],dh
  425107:	in     al,0xbb
  425109:	add    bh,BYTE PTR [edi+0x5]
  42510c:	jmp    0xb961:0xae87f0a5
  425113:	mov    eax,0xa15bce1a
  425118:	sbb    esi,DWORD PTR [ebx-0x40f80d79]
  42511e:	jp     0x4250b1
  425120:	jge    0x42518f
  425122:	mov    ds:0xab17afdb,eax
  425127:	inc    esp
  425128:	div    ch
  42512a:	xchg   ebp,eax
  42512b:	inc    DWORD PTR [edi+0x2f]
  42512e:	ja     0x425129
  425130:	pop    edx
  425131:	sbb    edx,DWORD PTR [edx]
  425133:	(bad)  
  425134:	xor    dh,dl
  425136:	pusha  
  425137:	jns    0x425111
  425139:	lock in eax,0x78
  42513c:	nop
  42513d:	inc    edi
  42513e:	jb     0x425182
  425140:	jbe    0x4250f6
  425142:	dec    esi
  425143:	and    al,0x47
  425145:	repz loopne 0x4251c1
  425148:	lods   al,BYTE PTR ds:[esi]
  425149:	repz test DWORD PTR [ebx+0x3],0xc571cca4
  425151:	dec    ebp
  425152:	data16 xor bl,BYTE PTR [ebx+eax*4-0x6b49cdd3]
  42515a:	jb     0x42514e
  42515c:	sahf   
  42515d:	and    BYTE PTR [edx+eax*4],dh
  425160:	mov    al,ds:0xea01a4c8
  425165:	icebp  
  425166:	das    
  425167:	rol    al,cl
  425169:	adc    BYTE PTR [ebx+0x3c054040],ah
  42516f:	mov    esi,0x74d28193
  425174:	mov    WORD PTR [ecx+0x41],es
  425177:	mov    ebp,0x5528f4fb
  42517c:	stos   DWORD PTR es:[edi],eax
  42517d:	ss std 
  42517f:	(bad)  
  425180:	fidivr WORD PTR [edi-0x76c55250]
  425186:	or     esi,ecx
  425188:	loope  0x425154
  42518a:	xor    eax,ebp
  42518c:	and    BYTE PTR [edx-0x328e46b3],0x7f
  425193:	aam    0x25
  425195:	push   cs
  425196:	pop    edi
  425197:	sbb    BYTE PTR [ebx],ch
  425199:	test   al,0x67
  42519b:	jmp    0x42519e
  42519d:	and    dl,BYTE PTR [eax]
  42519f:	or     edx,DWORD PTR [esi-0x3cbc86c3]
  4251a5:	repnz sub esp,DWORD PTR [eax+eax*4]
  4251a9:	popa   
  4251aa:	pop    ss
  4251ab:	xor    esi,edx
  4251ad:	ror    DWORD PTR [esp+edx*2],cl
  4251b0:	xchg   ebx,eax
  4251b1:	jo     0x42521a
  4251b3:	or     bh,BYTE PTR [edx-0x7]
  4251b6:	fyl2xp1 
  4251b8:	rcr    BYTE PTR [ecx-0x10],1
  4251bb:	sbb    ax,0x8cd4
  4251bf:	jg     0x4251de
  4251c1:	xor    al,0xaf
  4251c3:	cdq    
  4251c4:	mov    ds:0xbec06235,al
  4251c9:	sub    al,0x7e
  4251cb:	jp     0x42516b
  4251cd:	loope  0x42522a
  4251cf:	loope  0x42520d
  4251d1:	ins    BYTE PTR es:[edi],dx
  4251d2:	mov    cl,0x8d
  4251d4:	jecxz  0x4251a8
  4251d6:	fs adc eax,0xa43a978c
  4251dc:	and    ebx,eax
  4251de:	pushf  
  4251df:	or     eax,0x814f22ff
  4251e4:	mov    gs,edx
  4251e6:	cmp    eax,0x5654887b
  4251eb:	int3   
  4251ec:	mov    dl,0x9
  4251ee:	cmc    
  4251ef:	fwait
  4251f0:	test   al,0x40
  4251f2:	push   0xffffff9d
  4251f4:	cs xor esi,edi
  4251f7:	push   ss
  4251f8:	out    0x4d,al
  4251fa:	push   cs
  4251fb:	mul    DWORD PTR [edi+0x1f18bec7]
  425201:	push   esp
  425202:	loop   0x4251e7
  425204:	jmp    0xed89:0x2af2567a
  42520b:	add    DWORD PTR [ebx],ebx
  42520d:	fadd   DWORD PTR [esi]
  42520f:	dec    ebp
  425210:	lds    ecx,FWORD PTR [esi]
  425212:	das    
  425213:	mov    es,WORD PTR [ebx-0x10]
  425216:	repnz mov al,ds:0x952e9d4c
  42521c:	outs   dx,DWORD PTR ds:[esi]
  42521d:	fidiv  WORD PTR [eax-0x28]
  425220:	sbb    eax,DWORD PTR [edi-0x76]
  425223:	xchg   ebp,eax
  425224:	mov    edi,0x12ee2c90
  425229:	cli    
  42522a:	jle    0x4251fd
  42522c:	and    BYTE PTR [edx+0x3a],cl
  42522f:	(bad)  
  425230:	xor    DWORD PTR [edi+0x4f99bb5d],ebp
  425236:	adc    ecx,edx
  425238:	test   al,0x29
  42523a:	adc    edx,esp
  42523c:	fist   WORD PTR [edx]
  42523e:	add    bh,ch
  425240:	scas   eax,DWORD PTR es:[edi]
  425241:	bound  esp,QWORD PTR [edx]
  425243:	pop    eax
  425244:	pop    ebx
  425245:	and    eax,0x5f62ab05
  42524a:	mov    ?,WORD PTR [edx]
  42524c:	mov    bh,0xb4
  42524e:	idiv   BYTE PTR [edi+0x42]
  425251:	adc    ah,BYTE PTR [eax+0x42]
  425254:	add    BYTE PTR [ecx+0x37],0xf6
  425258:	inc    ebx
  425259:	outs   dx,BYTE PTR ds:[esi]
  42525a:	adc    DWORD PTR [ebx],0x44
  42525d:	dec    ecx
  42525e:	xchg   ebx,eax
  42525f:	ret    
  425260:	inc    eax
  425261:	pop    ds
  425262:	adc    BYTE PTR ds:0x4b8e34,bl
  425268:	sbb    ecx,DWORD PTR [esi-0x10]
  42526b:	or     edi,ebp
  42526d:	ds pusha 
  42526f:	test   DWORD PTR [esi+0x7e549c61],0x63d8bb2c
  425279:	jl     0x425202
  42527b:	add    ah,BYTE PTR [esi-0x24]
  42527e:	pop    ebp
  42527f:	jle    0x4252ef
  425281:	push   eax
  425282:	mov    eax,ds:0x697ee13b
  425287:	sub    eax,0x8b9258ee
  42528c:	jmp    0x322f:0xfd3fd699
  425293:	cdq    
  425294:	push   0xebafb1d5
  425299:	(bad)  [edx+0x4c]
  42529c:	sub    al,0xaa
  42529e:	lock sar DWORD PTR [edx],0x8d
  4252a2:	icebp  
  4252a3:	xor    BYTE PTR [ecx-0x60],ah
  4252a6:	sahf   
  4252a7:	ret    
  4252a8:	jg     0x425241
  4252aa:	adc    eax,esp
  4252ac:	lods   eax,DWORD PTR ds:[esi]
  4252ad:	hlt    
  4252ae:	in     eax,dx
  4252af:	sbb    ah,BYTE PTR [eax+esi*4-0x68]
  4252b3:	retf   
  4252b4:	bound  ecx,QWORD PTR [ebx+edx*1+0x4d]
  4252b8:	xor    edx,DWORD PTR [esi-0x46b5f7ba]
  4252be:	imul   edx,ebp,0x2c
  4252c1:	lock cmp BYTE PTR [ecx+0x479440c6],dh
  4252c8:	xchg   edi,eax
  4252c9:	jle    0x425263
  4252cb:	pop    ecx
  4252cc:	enter  0xf190,0xed
  4252d0:	xchg   edi,eax
  4252d1:	mov    gs,WORD PTR [ecx]
  4252d3:	in     eax,dx
  4252d4:	lock icebp 
  4252d6:	pushf  
  4252d7:	out    0x79,al
  4252d9:	jno    0x42529a
  4252db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252dc:	sbb    ebx,DWORD PTR [edi+0x7f]
  4252df:	repnz test esp,0x3e1d351c
  4252e6:	cmp    ecx,DWORD PTR [edx+0x3f04e1a4]
  4252ec:	mov    ds:0xef218ddd,al
  4252f1:	dec    edx
  4252f2:	dec    edx
  4252f3:	hlt    
  4252f4:	jne    0x4252f9
  4252f6:	(bad)  
  4252f7:	sti    
  4252f8:	mov    esp,cs
  4252fa:	xor    DWORD PTR [ebp+0x34],esp
  4252fd:	or     esi,edx
  4252ff:	into   
  425300:	loope  0x425331
  425302:	xor    bh,BYTE PTR [esi]
  425304:	push   eax
  425305:	xchg   edi,eax
  425306:	inc    edx
  425307:	pop    edx
  425308:	add    ah,dl
  42530a:	lds    edx,FWORD PTR [ecx-0x125d997a]
  425310:	les    esp,FWORD PTR [eax+0x65]
  425313:	fidiv  DWORD PTR [ecx+0x2e63d1ea]
  425319:	mov    ah,dh
  42531b:	add    eax,0xef7be9e8
  425320:	inc    ecx
  425321:	fwait
  425322:	or     DWORD PTR [edx-0x2a4c3c67],esp
  425328:	dec    edi
  425329:	sub    DWORD PTR [edx+0x7bd7b736],ebx
  42532f:	push   ds
  425330:	xlat   BYTE PTR ds:[ebx]
  425331:	aam    0x24
  425333:	jno    0x4252c4
  425335:	neg    DWORD PTR [ebp+0x25]
  425338:	cld    
  425339:	add    eax,0xbab63e85
  42533e:	fwait
  42533f:	call   edi
  425341:	(bad)  
  425342:	fisubr DWORD PTR ds:0x279745ef
  425348:	imul   ebx,DWORD PTR [edi],0xc93f70a5
  42534e:	sub    eax,0x2320476e
  425353:	or     bl,BYTE PTR [eax]
  425355:	mov    esi,0x9eae62d9
  42535a:	clc    
  42535b:	rcr    esp,cl
  42535d:	xor    eax,0xcde503aa
  425362:	jge    0x4253bc
  425364:	jb     0x425305
  425366:	jecxz  0x425384
  425368:	clc    
  425369:	nop
  42536a:	inc    ecx
  42536b:	inc    ebp
  42536c:	xor    esi,DWORD PTR ds:0xfb18eb94
  425372:	jmp    0x5579:0xc5593b33
  425379:	jmp    0x4253a8
  42537b:	xchg   esp,eax
  42537c:	ja     0x4253f2
  42537e:	or     DWORD PTR [ebp+edi*2+0x7d9c0262],edx
  425385:	mov    dh,0xf5
  425387:	push   edx
  425388:	pop    es
  425389:	ins    BYTE PTR es:[edi],dx
  42538a:	push   ds
  42538b:	or     al,0x68
  42538d:	(bad)  
  42538e:	cmp    DWORD PTR ss:[esi-0x3],esi
  425392:	imul   edi,DWORD PTR [edx+0x4e898071],0xa5f66bd
  42539c:	fisubr DWORD PTR [ecx-0x68eeeb9e]
  4253a2:	push   edi
  4253a3:	mov    ch,BYTE PTR [ecx+0xdca62a1]
  4253a9:	pop    esi
  4253ab:	and    cl,BYTE PTR [eax+0x40]
  4253ae:	faddp  st(3),st
  4253b0:	shr    eax,1
  4253b2:	and    al,0xcf
  4253b4:	int    0xf5
  4253b6:	and    dh,BYTE PTR [ebp+edi*1+0x56ad5f64]
  4253bd:	push   0x72
  4253bf:	outs   dx,BYTE PTR ds:[esi]
  4253c0:	add    eax,0x17162da
  4253c5:	je     0x4253ff
  4253c7:	jle    0x425429
  4253c9:	mov    bl,BYTE PTR [esi+0x6cbbc2f8]
  4253cf:	or     esi,ebx
  4253d1:	jmp    0xb89209b7
  4253d6:	and    eax,edi
  4253d8:	cmp    DWORD PTR [eax],0x59
  4253db:	ret    
  4253dc:	sub    DWORD PTR [edi+ebx*8-0x26bc79ce],edi
  4253e3:	sbb    BYTE PTR [edi],cl
  4253e5:	(bad)  
  4253e6:	std    
  4253e7:	pop    edx
  4253e8:	sub    DWORD PTR [eax],eax
  4253ea:	das    
  4253eb:	mov    bl,0x32
  4253ed:	pop    ds
  4253ee:	mov    ?,edx
  4253f0:	popa   
  4253f1:	cld    
  4253f2:	test   al,0xdf
  4253f4:	aaa    
  4253f5:	adc    BYTE PTR ds:0xd76bb7e9,0xfd
  4253fc:	rol    BYTE PTR [edi-0x38],cl
  4253ff:	or     eax,0xcc9a7e09
  425404:	xor    al,dl
  425406:	and    eax,0x875c4b26
  42540b:	mov    bl,0x3
  42540d:	add    dh,BYTE PTR [ebp-0x35311501]
  425413:	popa   
  425414:	jbe    0x4253ed
  425416:	shl    bh,cl
  425418:	jb     0x425412
  42541a:	sti    
  42541b:	pop    ebp
  42541c:	(bad)  [ecx]
  42541e:	lods   eax,DWORD PTR ds:[esi]
  42541f:	shl    edx,0x56
  425422:	sub    ecx,DWORD PTR [edx+ebp*4-0x22897cad]
  425429:	bound  edx,QWORD PTR [ebp+0x6fec2506]
  42542f:	push   esp
  425430:	xchg   ebx,eax
  425431:	jecxz  0x42542f
  425433:	xor    ebx,esi
  425435:	pusha  
  425436:	(bad)  
  425437:	loop   0x42547b
  425439:	out    dx,al
  42543a:	sub    BYTE PTR [esi+0x6cebdf07],cl
  425440:	icebp  
  425441:	es call 0xb2d9dd40
  425447:	or     edi,edx
  425449:	push   ebx
  42544a:	pop    ds
  42544b:	(bad)  
  42544c:	loopne 0x425414
  42544e:	mov    ds:0x5cb0856e,al
  425453:	pop    edi
  425454:	xchg   esi,eax
  425455:	nop    edi
  425458:	lods   al,BYTE PTR ds:[esi]
  425459:	ins    BYTE PTR es:[edi],dx
  42545a:	cld    
  42545b:	mov    dl,0xa5
  42545d:	shl    DWORD PTR [ecx],0x4f
  425460:	jmp    0x4254a8
  425462:	cmc    
  425463:	sahf   
  425464:	dec    edi
  425465:	shl    ebp,cl
  425467:	jmp    0x428572e5
  42546c:	mov    cl,0xb3
  42546e:	lahf   
  42546f:	mov    ds:0x5c2170cd,al
  425474:	inc    ecx
  425475:	fist   DWORD PTR [ecx-0x3b4aba48]
  42547b:	int3   
  42547c:	icebp  
  42547d:	pop    edi
  42547e:	iret   
  42547f:	aam    0x4
  425481:	test   DWORD PTR ds:0xd1edbdf4,0x5d3754ab
  42548b:	lock push ebx
  42548d:	jno    0x4254a0
  42548f:	pusha  
  425490:	stc    
  425491:	xchg   DWORD PTR [ebx+0x74],eax
  425494:	push   0x8
  425496:	imul   esp,DWORD PTR [ecx],0xbf728fc4
  42549c:	adc    eax,0x59251c77
  4254a1:	jbe    0x425469
  4254a3:	adc    bp,si
  4254a6:	test   BYTE PTR [edi+eiz*4],bh
  4254a9:	js     0x4254e6
  4254ab:	jp     0x4254e0
  4254ad:	ss mov ecx,0x8a75eb40
  4254b3:	outs   dx,BYTE PTR ds:[esi]
  4254b4:	mov    esi,0xb9918798
  4254b9:	push   ds
  4254ba:	(bad)  
  4254bb:	pop    ecx
  4254bc:	das    
  4254bd:	xor    ebp,DWORD PTR ds:0x9126b6db
  4254c3:	xchg   DWORD PTR [esi-0x71],ebx
  4254c6:	sbb    al,0xc0
  4254c8:	sbb    eax,0x1871262
  4254cd:	xor    BYTE PTR [ebx-0x74556d37],ah
  4254d3:	scas   al,BYTE PTR es:[edi]
  4254d4:	cwde   
  4254d5:	or     BYTE PTR [ebx-0x4d07f3ad],cl
  4254db:	mov    ah,0x76
  4254dd:	shl    DWORD PTR [edx-0x39],0x70
  4254e1:	cdq    
  4254e2:	sub    DWORD PTR [edi+0x3e],esp
  4254e5:	adc    eax,0xd4a3068a
  4254ea:	jecxz  0x4254f3
  4254ec:	mov    ds,WORD PTR [eax]
  4254ee:	sti    
  4254ef:	js     0x425553
  4254f1:	xor    BYTE PTR [eax+eiz*4],dl
  4254f4:	daa    
  4254f5:	adc    al,0xd2
  4254f7:	add    ch,0xac
  4254fa:	imul   ebx,DWORD PTR [ebx-0x7553d041],0xffffffef
  425501:	push   ebx
  425502:	add    ebp,DWORD PTR [ecx-0x17]
  425505:	in     al,0x28
  425507:	scas   al,BYTE PTR es:[edi]
  425508:	or     al,0x4
  42550a:	cli    
  42550b:	cmp    ebp,DWORD PTR [edi-0x9fdc925]
  425511:	jo     0x425513
  425513:	xor    DWORD PTR [ebx],edx
  425515:	ss inc ebx
  425517:	mov    BYTE PTR [ecx+0x3d],al
  42551a:	(bad)  
  42551c:	hlt    
  42551d:	call   0x939b:0x3a4db32f
  425524:	or     BYTE PTR [ebx],dl
  425526:	mov    ebx,0x22cf56d1
  42552b:	dec    edx
  42552c:	leave  
  42552d:	das    
  42552e:	xor    BYTE PTR [ebx+0x3e21640c],bl
  425534:	js     0x425543
  425536:	pop    ss
  425537:	cwde   
  425538:	xchg   esp,eax
  425539:	imul   ebp,edi,0xffffffae
  42553c:	sbb    dl,dl
  42553e:	out    dx,al
  42553f:	xchg   BYTE PTR [esi-0x46d00fdf],bh
  425545:	adc    BYTE PTR [eax+0x5f608e0a],dh
  42554b:	or     eax,0xee02e2a1
  425550:	fdiv   DWORD PTR [edx-0x17]
  425553:	out    dx,al
  425554:	jo     0x425576
  425556:	xor    dh,BYTE PTR [ecx+edx*1]
  425559:	call   0x7a6b36f6
  42555e:	(bad)  
  42555f:	xchg   ebp,eax
  425560:	pop    ebp
  425561:	rcr    edi,cl
  425563:	mov    ebx,0x42c6e25d
  425568:	cmp    ebx,esi
  42556a:	or     BYTE PTR [edi+eax*1-0x6f789a6b],ch
  425571:	daa    
  425572:	imul   BYTE PTR [esi+0x7e]
  425575:	jbe    0x42555a
  425577:	xchg   edx,eax
  425578:	mov    bh,0xc7
  42557a:	jne    0x425587
  42557c:	cmp    BYTE PTR ds:0x11a75226,dh
  425582:	pop    eax
  425583:	add    dh,al
  425585:	(bad)  
  425586:	mov    cs,edi
  425588:	cmp    edx,DWORD PTR [eax+0x29]
  42558b:	scas   eax,DWORD PTR es:[edi]
  42558c:	js     0x425548
  42558e:	jge    0x4255a0
  425590:	inc    ebp
  425591:	cmp    al,0x1e
  425593:	bound  edx,QWORD PTR [edi-0x30]
  425596:	xchg   esi,eax
  425597:	rcr    DWORD PTR [edi-0x32c9ba93],cl
  42559d:	loop   0x425583
  42559f:	shl    BYTE PTR [ecx],cl
  4255a1:	mov    ecx,0x44d5aa42
  4255a6:	xchg   edi,eax
  4255a7:	mov    al,0xe3
  4255a9:	mov    cl,0x5d
  4255ab:	xor    eax,0xd66b66a0
  4255b0:	pop    eax
  4255b1:	pop    es
  4255b2:	jmp    0x4255a1
  4255b4:	or     edx,DWORD PTR [ecx-0x54f7d217]
  4255ba:	leave  
  4255bb:	in     eax,dx
  4255bc:	imul   edx,DWORD PTR [ebx],0x687da580
  4255c2:	test   DWORD PTR [eax+0x42185fd7],esi
  4255c8:	mov    eax,0x7484cafe
  4255cd:	repz cld 
  4255cf:	loop   0x4255d9
  4255d1:	xor    esp,ebp
  4255d3:	jnp    0x42556d
  4255d5:	hlt    
  4255d6:	out    dx,al
  4255d7:	(bad)
  4255da:	in     eax,dx
  4255db:	mov    ecx,0xfde3c4c6
  4255e0:	sbb    ecx,DWORD PTR ds:0x770e0b1c
  4255e6:	add    eax,esi
  4255e8:	loope  0x425648
  4255ea:	pop    ecx
  4255eb:	mov    esp,ss
  4255ed:	jae    0x4255cc
  4255ef:	pop    ss
  4255f0:	or     ch,BYTE PTR [edx-0x782f8489]
  4255f6:	jae    0x425634
  4255f8:	shl    DWORD PTR ds:0xb34f4073,0x56
  4255ff:	jbe    0x42565d
  425601:	leave  
  425602:	sub    al,0x72
  425604:	call   0x3459106f
  425609:	dec    esp
  42560a:	dec    ebx
  42560b:	sub    ah,BYTE PTR [ebp-0x7de2e2b8]
  425611:	mov    esi,DWORD PTR [edi+0x6c]
  425614:	int    0xb1
  425616:	xchg   edi,eax
  425617:	add    eax,0xb3238c30
  42561c:	rcr    BYTE PTR [edx],1
  42561e:	aad    0x38
  425620:	in     eax,dx
  425621:	push   ds
  425622:	inc    esp
  425623:	add    cl,BYTE PTR [eax]
  425625:	fnsave [ecx]
  425627:	dec    esp
  425628:	push   esp
  425629:	mov    dl,0x79
  42562b:	dec    ecx
  42562c:	push   edi
  42562d:	stc    
  42562e:	div    BYTE PTR [edi-0x22]
  425631:	outs   dx,BYTE PTR ds:[esi]
  425632:	aaa    
  425633:	jg     0x4255d0
  425635:	fld    QWORD PTR [ebp-0x36c6c67d]
  42563b:	fstp   DWORD PTR [edx]
  42563d:	mov    edx,0xe81a33cd
  425642:	sub    al,cl
  425644:	cwde   
  425645:	shr    BYTE PTR ds:0xa5918499,0xcb
  42564c:	iret   
  42564d:	jle    0x42564b
  42564f:	out    0xdb,al
  425651:	jmp    0x9cb:0x1666c50
  425658:	pusha  
  425659:	inc    ebp
  42565a:	xchg   BYTE PTR [ebx-0x685d9524],bl
  425660:	inc    esi
  425661:	add    al,0x7c
  425663:	faddp  st(7),st
  425665:	adc    edi,eax
  425667:	pusha  
  425668:	jmp    0x425609
  42566a:	jmp    0x948a:0xbd1da12e
  425671:	cs jae 0x425633
  425674:	mov    al,ds:0xa40375d6
  425679:	std    
  42567a:	inc    ebp
  42567b:	or     bh,0x9b
  42567e:	and    DWORD PTR [ebp+0x944ad5f],ecx
  425684:	pop    ss
  425685:	sub    eax,0xea3c921b
  42568a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42568b:	dec    eax
  42568c:	out    0x68,al
  42568e:	pop    eax
  42568f:	stos   DWORD PTR es:[edi],eax
  425690:	retf   
  425691:	cld    
  425692:	adc    dh,cl
  425694:	add    eax,DWORD PTR [edx]
  425696:	loopne 0x425673
  425698:	cmc    
  425699:	cmp    esi,DWORD PTR [eax+0x42b45308]
  42569f:	in     eax,dx
  4256a0:	sahf   
  4256a1:	lds    ebp,FWORD PTR [edi-0x51a5642f]
  4256a7:	gs mov bl,0x26
  4256aa:	div    ah
  4256ac:	add    ecx,DWORD PTR [edx-0xccd3dfd]
  4256b2:	jno    0x42564a
  4256b4:	stc    
  4256b5:	pop    ebp
  4256b6:	in     eax,dx
  4256b7:	add    al,BYTE PTR [edi+0x12296700]
  4256bd:	xchg   esi,eax
  4256be:	add    BYTE PTR [edx+0x1c],ah
  4256c1:	popf   
  4256c2:	mov    bh,0xd8
  4256c4:	cdq    
  4256c5:	retf   
  4256c6:	nop
  4256c7:	xor    dl,bl
  4256c9:	jnp    0x4256b2
  4256cb:	push   ds
  4256cc:	popa   
  4256cd:	push   0xf4a82121
  4256d2:	loope  0x4256ff
  4256d4:	sub    DWORD PTR [edi],0x13
  4256d7:	dec    edx
  4256d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256d9:	inc    eax
  4256da:	jns    0x425681
  4256dc:	aam    0xb4
  4256de:	(bad)  
  4256df:	icebp  
  4256e0:	cmp    DWORD PTR [ecx-0xf],ebp
  4256e3:	repz xor eax,0xe5786bfe
  4256e9:	jmp    0x11a5ebdb
  4256ee:	dec    esi
  4256ef:	or     DWORD PTR [ebx+0x716487d2],ebx
  4256f5:	hlt    
  4256f6:	inc    esi
  4256f7:	std    
  4256f8:	sbb    edi,ebp
  4256fa:	imul   DWORD PTR [ecx-0x65]
  4256fd:	jp     0x4256a9
  4256ff:	ins    DWORD PTR es:[edi],dx
  425700:	xor    ecx,esp
  425702:	out    0xe8,al
  425704:	aaa    
  425705:	jl     0x425740
  425707:	loop   0x425772
  425709:	aam    0xca
  42570b:	cmc    
  42570c:	pop    ss
  42570d:	pop    edi
  42570e:	add    al,0xc6
  425710:	and    DWORD PTR [ecx+0x56d4d4f5],0xffffffd1
  425717:	mov    ds:0x6cd46e45,eax
  42571c:	(bad)  
  42571e:	adc    BYTE PTR [ebp+0x10],ah
  425721:	push   edx
  425722:	pop    eax
  425723:	jg     0x4256b4
  425725:	xlat   BYTE PTR ds:[ebx]
  425726:	or     edi,esp
  425728:	mov    ds:0x170529e5,eax
  42572d:	lock and DWORD PTR [ebp-0xc],esi
  425731:	call   0x902e58e7
  425736:	push   eax
  425737:	mov    WORD PTR [edi+0x6dc481f9],?
  42573d:	xchg   BYTE PTR [esi-0x5e],dh
  425740:	pushf  
  425741:	cwde   
  425742:	inc    esp
  425743:	adc    al,0x2d
  425745:	ror    DWORD PTR [eax-0x42],0x63
  425749:	adc    BYTE PTR [edx],bl
  42574b:	sbb    eax,DWORD PTR [edi+esi*2-0x2d591e6a]
  425752:	aas    
  425753:	cmovo  esi,eax
  425756:	add    edi,DWORD PTR [ecx-0x1c9bfc5]
  42575c:	pop    esp
  42575d:	xchg   ebp,eax
  42575e:	and    eax,0xa2ae4a9e
  425763:	fsub   QWORD PTR [esi-0x66]
  425766:	aad    0x62
  425768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425769:	popf   
  42576a:	test   dl,bh
  42576c:	and    ch,bl
  42576e:	or     ecx,DWORD PTR [ebx-0x205e7d26]
  425774:	xchg   DWORD PTR cs:[ecx],esi
  425777:	xchg   esi,eax
  425778:	add    DWORD PTR [ebx],0xa9993937
  42577e:	pop    ds
  42577f:	mov    esp,0x59cd0389
  425784:	test   BYTE PTR [eax+ecx*1],bh
  425787:	inc    ebx
  425788:	inc    edx
  425789:	ins    DWORD PTR es:[edi],dx
  42578a:	sub    eax,DWORD PTR [eax-0x4b6ba43b]
  425790:	cmp    ah,BYTE PTR [ebx-0x34]
  425793:	mov    eax,ds:0x474754f7
  425798:	retf   
  425799:	cmp    al,0x5f
  42579b:	fstp   QWORD PTR [edi-0x62ffec5e]
  4257a1:	outs   dx,BYTE PTR ds:[esi]
  4257a2:	mov    esi,esp
  4257a4:	and    bh,dl
  4257a6:	ins    BYTE PTR es:[edi],dx
  4257a7:	(bad)  
  4257a8:	outs   dx,DWORD PTR ds:[esi]
  4257a9:	xor    DWORD PTR cs:[ebp+0x11],0x8c20c3e2
  4257b1:	addr16 pop esi
  4257b3:	push   es
  4257b4:	pop    ebp
  4257b5:	and    esi,eax
  4257b7:	mov    ds:0x5f1ae9af,eax
  4257bc:	or     DWORD PTR [ebp-0x1501d71],esp
  4257c2:	sub    ebx,DWORD PTR [edi+0x2f]
  4257c5:	mov    eax,0xfccd5613
  4257ca:	loopne 0x425774
  4257cc:	stc    
  4257cd:	ja     0x425762
  4257cf:	daa    
  4257d0:	enter  0xbfe6,0x76
  4257d4:	xchg   esp,eax
  4257d5:	adc    ecx,DWORD PTR [edi]
  4257d7:	les    esp,FWORD PTR [eax-0x50]
  4257da:	or     cl,cl
  4257dc:	mul    al
  4257de:	mov    eax,ds:0x3189dd44
  4257e3:	out    0x52,al
  4257e5:	adc    ebx,ecx
  4257e7:	mov    dl,bl
  4257e9:	sti    
  4257ea:	ins    DWORD PTR es:[edi],dx
  4257eb:	lea    edi,[eax]
  4257ed:	and    esp,DWORD PTR [ebx-0x403b35c3]
  4257f3:	pop    ebx
  4257f4:	or     al,BYTE PTR [esi+0x40]
  4257f7:	jnp    0x4257b3
  4257f9:	int    0x33
  4257fb:	cmc    
  4257fc:	shl    cl,cl
  4257fe:	aaa    
  4257ff:	je     0x425845
  425801:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  425803:	mov    cl,0x8f
  425805:	lods   al,BYTE PTR ds:[esi]
  425806:	cmc    
  425807:	jne    0x4257ac
  425809:	pop    ebp
  42580a:	and    eax,0xc7ef9092
  42580f:	aam    0x3c
  425811:	loope  0x425803
  425813:	fidiv  WORD PTR [esi]
  425815:	push   edx
  425816:	in     al,dx
  425817:	inc    edx
  425818:	dec    eax
  425819:	in     al,0x9c
  42581b:	div    BYTE PTR [esp+eiz*2+0x64]
  42581f:	push   cs
  425820:	je     0x42587a
  425822:	mov    ch,0xc9
  425824:	loop   0x425861
  425826:	adc    al,0x58
  425828:	clc    
  425829:	cmp    DWORD PTR [ecx+eax*2-0x59],ebx
  42582d:	aas    
  42582e:	pop    ebx
  42582f:	cwde   
  425830:	jmp    0xe058:0xdba5aecc
  425837:	leave  
  425838:	imul   esi,DWORD PTR [bp+di-0x64],0x66599a46
  425840:	xchg   esp,eax
  425841:	retf   0x7231
  425844:	cwde   
  425845:	mov    ah,cl
  425847:	sbb    bh,BYTE PTR ds:0x33079bdd
  42584d:	jne    0x425863
  42584f:	out    dx,eax
  425850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425851:	cwde   
  425852:	(bad)  
  425853:	xchg   esp,eax
  425854:	xchg   edx,eax
  425855:	into   
  425856:	dec    edx
  425857:	stos   DWORD PTR es:[edi],eax
  425858:	mov    ds:0xc65f7fc3,eax
  42585d:	imul   edx,DWORD PTR [eax+0x57],0x59f97519
  425864:	adc    al,0xfd
  425866:	xchg   edx,eax
  425867:	xor    BYTE PTR [edx],ch
  425869:	pop    es
  42586a:	std    
  42586b:	aas    
  42586c:	dec    edx
  42586d:	or     ecx,DWORD PTR [ebx]
  42586f:	inc    esp
  425870:	mov    dl,0x28
  425872:	das    
  425873:	into   
  425874:	inc    edi
  425875:	cli    
  425876:	cmp    edx,DWORD PTR [edx+0x26]
  425879:	js     0x4258e4
  42587b:	push   esp
  42587c:	pop    es
  42587d:	mov    bl,0xa1
  42587f:	add    eax,0xf2a15747
  425884:	mov    ch,0x50
  425886:	pop    edx
  425887:	xlat   BYTE PTR ds:[ebx]
  425888:	ror    bh,cl
  42588a:	jae    0x4258d6
  42588c:	bnd jns 0x42587f
  42588f:	add    ebx,DWORD PTR [edx-0x7c3c5380]
  425895:	popa   
  425896:	fwait
  425897:	sub    bl,BYTE PTR [edx]
  425899:	mov    gs,WORD PTR [ecx+ecx*4]
  42589c:	mov    edi,0xb9e66f9a
  4258a1:	sbb    DWORD PTR [ecx],edx
  4258a3:	cmp    ax,0x159c
  4258a7:	cs pop ecx
  4258a9:	cmp    BYTE PTR [edi-0x14],ah
  4258ac:	(bad)  
  4258ad:	and    eax,0x675c18b2
  4258b2:	and    ecx,edx
  4258b4:	cs mov ah,0x5c
  4258b7:	stos   BYTE PTR es:[edi],al
  4258b8:	sub    bl,dl
  4258ba:	out    dx,al
  4258bb:	xor    al,0x35
  4258bd:	cmp    bl,al
  4258bf:	xchg   esi,eax
  4258c0:	xchg   esi,eax
  4258c1:	mov    esi,ebx
  4258c3:	fmul   DWORD PTR [edx-0x8]
  4258c6:	jge    0x42584f
  4258c8:	inc    esi
  4258c9:	xchg   esp,eax
  4258ca:	lods   al,BYTE PTR ds:[esi]
  4258cb:	jae    0x425938
  4258cd:	mov    dl,BYTE PTR ds:0x72f20e6a
  4258d3:	or     eax,0x9307dce4
  4258d8:	mov    esi,DWORD PTR [edi]
  4258da:	loop   0x4258d3
  4258dc:	mov    BYTE PTR [ebp+0x12],ch
  4258df:	(bad)  
  4258e0:	fidiv  WORD PTR [edx]
  4258e2:	cmp    al,0x5d
  4258e4:	sbb    bl,BYTE PTR [esi-0x4381b4b2]
  4258ea:	out    0x61,eax
  4258ec:	add    eax,0x7eb585c4
  4258f1:	out    dx,eax
  4258f2:	not    al
  4258f4:	cli    
  4258f5:	xchg   DWORD PTR [esi],esp
  4258f7:	jmp    0x425962
  4258f9:	cmc    
  4258fa:	jp     0x4258ed
  4258fc:	jne    0x425884
  4258fe:	push   es
  4258ff:	bound  esi,QWORD PTR [ecx]
  425901:	xor    eax,0x7c23a4f5
  425906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425907:	or     cl,BYTE PTR [ebp-0x10]
  42590a:	mov    ebx,0x9f3a9288
  42590f:	(bad)  
  425910:	xchg   ebp,eax
  425911:	retf   0xd11
  425914:	cmc    
  425915:	rcr    BYTE PTR [edi+0x20be465f],0x41
  42591c:	push   0x9ef76ded
  425921:	push   ebp
  425922:	fnsave [esi]
  425924:	into   
  425925:	cmp    dh,cl
  425927:	sbb    eax,ebp
  425929:	sbb    eax,DWORD PTR [edx-0x1b4ab278]
  42592f:	mov    eax,ds:0x4442bee3
  425934:	rol    BYTE PTR [ebx],1
  425936:	std    
  425937:	fdiv   QWORD PTR [ebp-0x12c0ca0d]
  42593d:	frstor [ebx]
  42593f:	pop    eax
  425940:	leave  
  425941:	mul    bl
  425943:	icebp  
  425944:	ror    BYTE PTR [edi-0x5c],1
  425947:	mov    edx,0xda04dd9e
  42594c:	mov    al,BYTE PTR ds:0x69f5e85
  425952:	fdiv   DWORD PTR [edx+0x28a5c7a2]
  425958:	test   eax,0xbe40334d
  42595d:	sbb    al,0xc1
  42595f:	mov    cs,WORD PTR [ecx+0x32cee127]
  425965:	int3   
  425966:	(bad)  
  425967:	adc    DWORD PTR [eax-0x10f24f86],esp
  42596d:	bound  ebx,QWORD PTR [eax]
  42596f:	add    DWORD PTR [edi-0x1a446e98],0x42
  425976:	stos   BYTE PTR es:[edi],al
  425977:	pop    eax
  425978:	or     al,0xb9
  42597a:	push   esi
  42597b:	outs   dx,BYTE PTR ds:[esi]
  42597c:	cmp    eax,0x752bafbc
  425981:	sbb    BYTE PTR [ebx],bl
  425983:	paddq  mm7,QWORD PTR [ecx-0x43]
  425987:	(bad)  [ebx-0x46]
  42598a:	popf   
  42598b:	add    BYTE PTR [edx],bh
  42598d:	aas    
  42598e:	ds ret 0xaf82
  425992:	push   ebx
  425993:	xchg   ecx,eax
  425994:	jne    0x4259fb
  425996:	inc    ecx
  425997:	mov    ecx,ebp
  425999:	hlt    
  42599a:	mul    BYTE PTR [ebx]
  42599c:	into   
  42599d:	cmp    eax,0x991645a2
  4259a2:	inc    esi
  4259a3:	mov    esp,0x17c7f3e5
  4259a8:	je     0x4259f4
  4259aa:	imul   eax,DWORD PTR [ebp+0x7c],0xffffff96
  4259ae:	inc    edi
  4259af:	mov    eax,0x7630d6c8
  4259b4:	adc    cl,BYTE PTR [edx-0x6f6248f5]
  4259ba:	aaa    
  4259bb:	lods   al,BYTE PTR ds:[esi]
  4259bc:	fdiv   DWORD PTR [esi+0x3]
  4259bf:	sub    eax,0x2abe4011
  4259c4:	cmc    
  4259c5:	fiadd  DWORD PTR ds:0x927c9983
  4259cb:	pusha  
  4259cc:	pop    ebx
  4259cd:	scas   eax,DWORD PTR es:[edi]
  4259ce:	call   0x8cfd:0x33f262b3
  4259d5:	push   0xffffffe9
  4259d7:	mov    ebp,gs
  4259d9:	push   ebp
  4259da:	and    al,0x58
  4259dc:	in     eax,0xfd
  4259de:	inc    ebx
  4259df:	pop    ecx
  4259e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259e1:	push   es
  4259e2:	fs jg  0x4259ab
  4259e5:	jnp    0x425a11
  4259e7:	addr16 nop
  4259e9:	sahf   
  4259ea:	lahf   
  4259eb:	inc    ch
  4259ed:	jo     0x4259b8
  4259ef:	stc    
  4259f0:	aad    0x31
  4259f2:	das    
  4259f3:	sbb    al,0x56
  4259f5:	shr    ebx,1
  4259f7:	popf   
  4259f8:	xchg   BYTE PTR ds:0x9a3bc719,cl
  4259fe:	inc    esp
  4259ff:	test   eax,0x1dd965cf
  425a04:	in     eax,0x4a
  425a06:	jmp    0xefb1:0xf72f64fe
  425a0d:	fcmovu st,st(5)
  425a0f:	adc    eax,0xa588620d
  425a14:	sbb    ah,BYTE PTR [ecx]
  425a16:	jnp    0x425a3b
  425a18:	jnp    0x4259eb
  425a1a:	and    cl,BYTE PTR [edi+0x2e2fd5ff]
  425a20:	add    DWORD PTR [esi],ebp
  425a22:	mov    BYTE PTR [esi],dl
  425a24:	fistp  DWORD PTR [ebp+0x9]
  425a27:	es jmp 0x4259d5
  425a2a:	mov    dh,0xba
  425a2c:	addr16 mov edx,0xc9fb113e
  425a32:	sub    eax,0x281b0a33
  425a37:	mul    cl
  425a39:	iret   
  425a3a:	loop   0x4259ec
  425a3c:	sti    
  425a3d:	loope  0x425a7f
  425a3f:	test   al,0x40
  425a41:	sub    al,0x58
  425a43:	jnp    0x425a95
  425a45:	les    edx,FWORD PTR [esi+0x6]
  425a48:	or     eax,0x5a945dbd
  425a4d:	ss xchg esi,eax
  425a4f:	inc    edx
  425a50:	out    0x2c,eax
  425a52:	out    dx,eax
  425a53:	or     DWORD PTR [ebx-0xbb38303],edi
  425a59:	arpl   WORD PTR [edx],si
  425a5b:	arpl   WORD PTR [edx+0x72],di
  425a5e:	nop
  425a5f:	(bad)  
  425a61:	das    
  425a62:	push   eax
  425a63:	mov    ch,0xf2
  425a65:	dec    edx
  425a66:	pop    eax
  425a67:	inc    edx
  425a68:	aad    0x45
  425a6a:	hlt    
  425a6b:	ss and ah,al
  425a6e:	mov    bl,0x84
  425a70:	outs   dx,DWORD PTR ds:[esi]
  425a71:	pop    eax
  425a72:	ret    
  425a73:	jnp    0x425a8e
  425a75:	shl    BYTE PTR [ebx-0x5d716ef4],1
  425a7b:	xor    al,0x7b
  425a7d:	lds    edi,FWORD PTR [eax+ecx*2+0x7531a7b2]
  425a84:	pop    ebp
  425a85:	or     ecx,ebp
  425a87:	std    
  425a88:	out    0x50,eax
  425a8a:	into   
  425a8b:	mov    cl,BYTE PTR [ebx+0x32]
  425a8e:	test   BYTE PTR [eax+0x47],bh
  425a91:	stos   BYTE PTR es:[edi],al
  425a92:	cmp    edi,DWORD PTR [di]
  425a95:	jl     0x425a2b
  425a97:	sbb    esp,DWORD PTR [edi+0x46]
  425a9a:	stc    
  425a9b:	and    esp,DWORD PTR [eax-0x22]
  425a9e:	outs   dx,DWORD PTR ds:[esi]
  425a9f:	cmp    edi,DWORD PTR ds:0xe3fdf7a
  425aa5:	or     al,0xac
  425aa7:	and    eax,0xd0f4973c
  425aac:	jns    0x425b1c
  425aae:	jb     0x425b16
  425ab0:	shr    BYTE PTR [edi],1
  425ab2:	and    al,0x3f
  425ab4:	gs nop
  425ab6:	je     0x425b1f
  425ab8:	int    0x8d
  425aba:	mov    eax,0xb8df42dc
  425abf:	add    DWORD PTR [ecx],ebp
  425ac1:	es sub al,0x68
  425ac4:	ret    
  425ac5:	jno    0x425a71
  425ac7:	test   eax,0x5d6860b6
  425acc:	pushf  
  425acd:	lahf   
  425ace:	xchg   esp,eax
  425acf:	push   ecx
  425ad0:	jp     0x425b21
  425ad2:	push   edx
  425ad3:	xchg   edx,eax
  425ad4:	push   es
  425ad5:	enter  0xfc5b,0x19
  425ad9:	je     0x425b3f
  425adb:	cmp    dh,bh
  425add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ade:	in     al,0xa1
  425ae0:	push   0xffffffc2
  425ae2:	mov    al,0xef
  425ae5:	ror    BYTE PTR [edi+0x47066b9b],1
  425aeb:	sbb    eax,0x43f46088
  425af0:	mov    edi,0x1a5c78f5
  425af5:	rol    BYTE PTR [ecx+0x8],cl
  425af8:	nop
  425af9:	cmp    BYTE PTR [eax],0xdb
  425afc:	loopne 0x425b31
  425afe:	cld    
  425aff:	clc    
  425b00:	je     0x425b2e
  425b02:	dec    DWORD PTR [ecx-0x1e]
  425b05:	and    BYTE PTR [eax-0x13fe9cd9],0xa2
  425b0c:	lods   eax,DWORD PTR ds:[esi]
  425b0d:	pop    ebp
  425b0e:	mov    ds:0xdc098301,eax
  425b13:	sub    cl,cl
  425b15:	jecxz  0x425b6b
  425b17:	inc    ecx
  425b18:	stos   DWORD PTR es:[edi],eax
  425b19:	hlt    
  425b1a:	mov    WORD PTR [esp+eiz*2],es
  425b1d:	cli    
  425b1e:	sub    eax,0x81d87bba
  425b23:	xchg   BYTE PTR [edx+eax*2-0x4740d1a5],ch
  425b2a:	in     al,dx
  425b2b:	mov    dl,0x4f
  425b2d:	sub    eax,0xc45ace16
  425b32:	push   es
  425b33:	rcr    edi,cl
  425b35:	call   0xa97f:0x28d1f837
  425b3c:	ss ja  0x425b4c
  425b3f:	es ret 0x5284
  425b43:	mov    DWORD PTR [edx+0x3c],eax
  425b46:	xchg   ebp,eax
  425b47:	mov    WORD PTR [ecx+0x60],es
  425b4a:	fld    TBYTE PTR [ebx]
  425b4c:	and    al,BYTE PTR [edx]
  425b4e:	sahf   
  425b4f:	out    0xb0,al
  425b51:	push   esp
  425b52:	pop    ds
  425b53:	out    0x90,eax
  425b55:	inc    ebp
  425b56:	dec    esi
  425b57:	sbb    al,0xa4
  425b59:	mov    ch,0xf4
  425b5b:	jle    0x425ba5
  425b5d:	add    ecx,DWORD PTR [ecx]
  425b5f:	fdivr  st,st(2)
  425b61:	push   cs
  425b62:	cmp    eax,DWORD PTR [ebx+0x3f]
  425b65:	enter  0xeb78,0x26
  425b69:	xchg   esi,eax
  425b6a:	inc    eax
  425b6b:	inc    edi
  425b6c:	mov    BYTE PTR [edx+0x80afd8],ch
  425b72:	test   eax,0xa120debc
  425b77:	sub    al,0x51
  425b79:	enter  0xe248,0x95
  425b7d:	stos   DWORD PTR es:[edi],eax
  425b7e:	jp     0x425bcf
  425b80:	pop    edx
  425b81:	cmp    al,0xf1
  425b83:	inc    ebp
  425b84:	add    ebx,DWORD PTR [eax+0x7]
  425b87:	sub    ch,0x58
  425b8a:	cmc    
  425b8b:	data16 and bh,BYTE PTR [ecx+ebp*4-0x44]
  425b90:	or     ah,bl
  425b92:	sti    
  425b93:	loope  0x425b73
  425b95:	xor    ah,bl
  425b97:	adc    DWORD PTR [ecx+eiz*8-0x1a0dfe18],0xffffffc1
  425b9f:	inc    esi
  425ba0:	fmul   QWORD PTR [edx-0x5c]
  425ba3:	push   ecx
  425ba4:	(bad)  
  425ba5:	clc    
  425ba6:	push   edi
  425ba7:	push   ecx
  425ba8:	push   0xffffffac
  425baa:	lods   al,BYTE PTR ds:[esi]
  425bab:	xor    esi,DWORD PTR [edx-0x3f80f3cd]
  425bb1:	jmp    0x50e785b7
  425bb6:	adc    DWORD PTR [ebp+0x4],esi
  425bb9:	cwde   
  425bba:	cmc    
  425bbb:	mov    WORD PTR [esi-0x7d339070],?
  425bc1:	jp     0x425b75
  425bc3:	pushf  
  425bc4:	push   edi
  425bc5:	pop    es
  425bc6:	fxch   st(7)
  425bc8:	div    DWORD PTR [ebx]
  425bca:	in     eax,0x81
  425bcc:	sub    DWORD PTR [eax+esi*1],ebp
  425bcf:	retf   
  425bd0:	mov    bh,0xf1
  425bd2:	cmp    ebp,DWORD PTR [ebx+0xe]
  425bd5:	dec    edx
  425bd6:	in     eax,dx
  425bd7:	cdq    
  425bd8:	test   DWORD PTR [edx-0x1c],0xa2807a22
  425bdf:	dec    edx
  425be0:	retf   0x859e
  425be3:	jns    0x425c0c
  425be5:	and    esp,DWORD PTR [eax+0x33]
  425be8:	mov    eax,ds:0xc90e06c9
  425bed:	(bad)  
  425bee:	pop    edi
  425bef:	sub    al,0xd9
  425bf1:	cli    
  425bf2:	inc    edx
  425bf3:	jmp    0xf61a:0x2b330f02
  425bfa:	sbb    al,0x30
  425bfc:	jmp    0x425c23
  425bfe:	cmp    eax,0x8c9ac472
  425c03:	loop   0x425bcd
  425c05:	mov    ebx,0xc90d14d5
  425c0a:	hlt    
  425c0b:	test   DWORD PTR [edx+0x4b9c926e],eax
  425c11:	sub    DWORD PTR [esi-0x60f6576e],ebx
  425c17:	inc    eax
  425c18:	in     al,dx
  425c19:	or     ecx,ebp
  425c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c1c:	scas   al,BYTE PTR es:[edi]
  425c1d:	retf   0xbab9
  425c20:	push   esp
  425c21:	int3   
  425c22:	adc    esp,DWORD PTR [ebp-0x53]
  425c25:	dec    edx
  425c26:	std    
  425c27:	(bad)  
  425c29:	stos   DWORD PTR es:[edi],eax
  425c2a:	fidivr WORD PTR [ebx+ebp*1]
  425c2d:	(bad)  
  425c2e:	outs   dx,DWORD PTR ds:[esi]
  425c2f:	jp     0x425c13
  425c31:	mov    ah,0xe7
  425c33:	aam    0xec
  425c35:	retf   
  425c36:	das    
  425c37:	jb     0x425c38
  425c39:	dec    ecx
  425c3a:	and    ah,ah
  425c3c:	sub    al,0xe
  425c3e:	and    dh,al
  425c40:	rol    BYTE PTR [ecx-0x7cabe751],1
  425c46:	cli    
  425c47:	loopne 0x425bc9
  425c49:	xchg   al,dl
  425c4b:	mov    al,0xe6
  425c4d:	nop
  425c4e:	lea    ebx,[edx+0x5c]
  425c51:	ins    DWORD PTR es:[edi],dx
  425c52:	mov    esi,0xff00f260
  425c57:	mov    ss:0x357eb372,eax
  425c5d:	pop    edi
  425c5e:	mov    eax,0x33447292
  425c63:	outs   dx,DWORD PTR ds:[esi]
  425c64:	push   edx
  425c65:	mov    edi,0x2325ab29
  425c6a:	fnsave [esi]
  425c6c:	adc    DWORD PTR [eax+0x69],0x6d
  425c70:	mov    cl,0xc5
  425c72:	sub    dl,BYTE PTR [edi-0x63]
  425c75:	jno    0x425bf7
  425c77:	fwait
  425c78:	test   al,0x70
  425c7a:	lods   eax,DWORD PTR ds:[esi]
  425c7b:	sbb    al,0xfd
  425c7d:	(bad)  ds:[ebp+edi*2-0x39]
  425c82:	and    eax,0xb8f02f1a
  425c87:	mov    ds:0x56ee3a66,eax
  425c8c:	mov    eax,0x48180369
  425c91:	push   es
  425c92:	or     ebp,eax
  425c94:	mov    dl,0xe3
  425c96:	(bad)  
  425c97:	jecxz  0x425ccf
  425c99:	loope  0x425cc2
  425c9b:	jp     0x425c6e
  425c9d:	dec    ebx
  425c9e:	inc    esi
  425c9f:	enter  0x3053,0x48
  425ca3:	or     al,0xd8
  425ca5:	sbb    dh,dl
  425ca7:	pop    esp
  425ca8:	xlat   BYTE PTR ds:[ebx]
  425ca9:	mov    ds:0xc8b4de85,eax
  425cae:	pop    ss
  425caf:	xor    DWORD PTR ds:[ecx+eiz*4-0x7c],ebp
  425cb4:	add    DWORD PTR [ebp-0x3c],edi
  425cb7:	in     eax,dx
  425cb8:	aaa    
  425cb9:	int3   
  425cba:	cdq    
  425cbb:	test   BYTE PTR [esi-0x6],bh
  425cbe:	lods   eax,DWORD PTR ds:[esi]
  425cbf:	int    0xd
  425cc1:	(bad)  
  425cc2:	aam    0xdf
  425cc4:	pop    esp
  425cc5:	ret    
  425cc6:	test   DWORD PTR [edi+0x1d],0x40a96ce1
  425ccd:	inc    esp
  425cce:	fidivr WORD PTR [edi+0x44afb014]
  425cd4:	icebp  
  425cd5:	addr16 xor eax,0x1f5bfc3b
  425cdb:	push   DWORD PTR ds:0x29ebb25
  425ce1:	mov    edi,0xb3eed3e6
  425ce6:	or     al,0xb1
  425ce8:	cmp    BYTE PTR [ecx+0x4c85eb10],bl
  425cee:	xlat   BYTE PTR ds:[ebx]
  425cef:	mov    cl,0xe7
  425cf1:	add    eax,ebx
  425cf3:	jbe    0x425d66
  425cf5:	sar    cl,0x48
  425cf8:	popa   
  425cf9:	mov    ds:0xdb7c45f4,eax
  425cfe:	and    BYTE PTR [esi-0x4bdbd90d],dh
  425d04:	test   al,0x50
  425d06:	add    DWORD PTR [eax+0x6f2f6654],esi
  425d0c:	or     al,0x6e
  425d0e:	mov    ds:0xd70ab6f0,al
  425d13:	mov    esi,0x19f537c
  425d18:	repz cmp dh,BYTE PTR [edi+0x6c]
  425d1c:	xchg   DWORD PTR [esi*2+0x3de28818],ecx
  425d23:	das    
  425d24:	lea    ecx,[eax]
  425d26:	out    dx,eax
  425d27:	(bad)  
  425d28:	fld    DWORD PTR [ebx-0x38fe502c]
  425d2e:	mov    ebp,eax
  425d30:	or     eax,0xc6ee6e54
  425d35:	or     eax,0x9a1ccc3c
  425d3a:	add    ebp,DWORD PTR [ecx]
  425d3c:	imul   ecx,DWORD PTR [ecx-0x4d0129b6],0x1a
  425d43:	mov    bl,0x89
  425d45:	jnp    0x425d7e
  425d47:	xor    eax,0xfe046931
  425d4c:	stc    
  425d4d:	hlt    
  425d4e:	push   edx
  425d4f:	aad    0x48
  425d51:	aaa    
  425d52:	jmp    0xe670ef09
  425d57:	dec    eax
  425d58:	ds cmp al,0xd7
  425d5b:	mov    al,0xdf
  425d5d:	call   0x92edce72
  425d62:	dec    DWORD PTR [edx-0xdb0cde5]
  425d68:	adc    ah,cl
  425d6a:	int    0x13
  425d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d6d:	dec    esp
  425d6e:	pop    es
  425d6f:	push   ss
  425d70:	jo     0x425db9
  425d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d73:	ror    ebx,cl
  425d75:	lods   eax,DWORD PTR ds:[esi]
  425d76:	jmp    0xb88c74ba
  425d7b:	jno    0x425db6
  425d7d:	jecxz  0x425d98
  425d7f:	xchg   ecx,eax
  425d80:	mov    bl,0x73
  425d82:	xor    DWORD PTR [ebx+0x4c1779a2],ecx
  425d88:	scas   al,BYTE PTR es:[edi]
  425d89:	cmp    esp,edx
  425d8b:	mov    edx,0x2e833dc2
  425d90:	jb     0x425d46
  425d92:	xor    DWORD PTR [edi+ebp*2],esp
  425d95:	jg     0x425d2b
  425d97:	sbb    eax,DWORD PTR [ebx+ecx*1]
  425d9a:	test   al,0xd6
  425d9c:	(bad)  [esi]
  425d9e:	std    
  425d9f:	cdq    
  425da0:	pop    es
  425da1:	or     al,0x79
  425da3:	retf   0x7315
  425da6:	jecxz  0x425d42
  425da8:	push   eax
  425da9:	test   eax,0xd90a7514
  425dae:	repz aaa 
  425db0:	add    DWORD PTR [ebx+0x3b],edx
  425db3:	stos   BYTE PTR es:[edi],al
  425db4:	das    
  425db5:	lods   al,BYTE PTR ds:[esi]
  425db6:	cmp    edx,DWORD PTR [ebx]
  425db8:	mov    ch,0x93
  425dba:	fiadd  WORD PTR [ebx+0x34]
  425dbd:	push   ebx
  425dbe:	out    0x2b,eax
  425dc0:	or     al,0x42
  425dc2:	cmp    BYTE PTR [eax-0x50b1effa],bl
  425dc8:	sbb    al,0x28
  425dca:	and    bh,bh
  425dcc:	mov    al,0xbd
  425dce:	jecxz  0x425db8
  425dd0:	jno    0x425d68
  425dd2:	dec    edi
  425dd3:	dec    edi
  425dd4:	sub    cl,dl
  425dd6:	lods   al,BYTE PTR ds:[esi]
  425dd7:	retf   0x68d9
  425dda:	outs   dx,BYTE PTR ds:[esi]
  425ddb:	dec    edx
  425ddc:	aas    
  425ddd:	jae    0xea0c2d0a
  425de3:	push   ss
  425de4:	(bad)  
  425de5:	dec    ebp
  425de6:	(bad)  
  425de7:	es ret 0xce99
  425deb:	push   0x603df2f7
  425df0:	jp     0x425e02
  425df2:	ss mov edi,0x32678cf
  425df8:	imul   ebp,DWORD PTR [edi],0xb97ffc53
  425dfe:	imul   edi,DWORD PTR [ebp+eiz*8-0x33bb805a],0x73f26d1b
  425e09:	jge    0x425e51
  425e0b:	push   ebp
  425e0c:	sbb    cl,BYTE PTR [edi+ecx*8+0x4bfaedf6]
  425e13:	cmc    
  425e14:	outs   dx,DWORD PTR ds:[esi]
  425e15:	retf   
  425e16:	iret   
  425e17:	or     al,BYTE PTR [ecx+0x3d]
  425e1a:	nop
  425e1b:	loop   0x425da9
  425e1d:	bnd js 0x425e42
  425e20:	lock or DWORD PTR [ebx-0x37],ecx
  425e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e25:	jl     0x425e50
  425e27:	fcomp  st(1)
  425e29:	js     0x425de9
  425e2b:	inc    ecx
  425e2c:	stos   BYTE PTR es:[edi],al
  425e2d:	(bad)  
  425e2e:	in     eax,dx
  425e2f:	pop    ebx
  425e30:	jecxz  0x425e87
  425e32:	add    DWORD PTR [esi],ebp
  425e34:	cld    
  425e35:	xchg   edx,eax
  425e36:	fnstcw WORD PTR [ecx+0x13]
  425e39:	in     al,dx
  425e3a:	xor    BYTE PTR [edx+0x4639c817],0xb4
  425e41:	mov    eax,0x18529ab6
  425e46:	mov    eax,ds:0xbb985863
  425e4b:	mov    ebx,DWORD PTR [esi-0x5dcda19a]
  425e51:	inc    ebp
  425e52:	fnsave [edx]
  425e54:	(bad)  
  425e55:	ins    DWORD PTR es:[edi],dx
  425e56:	jae    0x425e30
  425e58:	sub    ebx,ebp
  425e5a:	sbb    DWORD PTR [eax-0x1],esp
  425e5d:	js     0x425e59
  425e5f:	pusha  
  425e60:	enter  0xa407,0xc5
  425e64:	mov    esi,0xfa6fcf79
  425e69:	xchg   esi,eax
  425e6a:	fstp   st(7)
  425e6c:	ret    
  425e6d:	fbld   TBYTE PTR [edi]
  425e6f:	fisub  WORD PTR [edx]
  425e71:	fidiv  WORD PTR [ebx+0x3a]
  425e74:	sub    al,0x4d
  425e76:	mov    dh,0x32
  425e78:	sbb    ebp,DWORD PTR [edx-0xd]
  425e7b:	mov    dl,0x38
  425e7d:	jnp    0x425e0c
  425e7f:	fucom  st(5)
  425e81:	mov    ebx,0x3872cca8
  425e86:	mov    bh,0x3a
  425e88:	call   0xd494:0xd27a9c55
  425e8f:	dec    ebx
  425e90:	and    BYTE PTR [edx],bh
  425e92:	adc    BYTE PTR [edi-0x6940e1ba],bh
  425e98:	xor    BYTE PTR [ecx],0x78
  425e9b:	pushf  
  425e9c:	ss pop ebx
  425e9e:	loope  0x425e80
  425ea0:	xchg   esp,edx
  425ea2:	or     ebp,DWORD PTR [ecx-0x308e129e]
  425ea8:	mov    al,ds:0x1be4b47c
  425ead:	fimul  WORD PTR [esi]
  425eaf:	ficomp WORD PTR [edx]
  425eb1:	(bad)  
  425eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eb3:	pusha  
  425eb4:	lds    ebx,FWORD PTR [edi+0x46]
  425eb7:	ins    DWORD PTR es:[edi],dx
  425eb8:	out    0xce,al
  425eba:	sub    DWORD PTR [edi-0x58c8e338],ecx
  425ec0:	sbb    eax,0xfeb2309a
  425ec5:	fdivr  DWORD PTR [esi+0x7eee472c]
  425ecb:	dec    esi
  425ecc:	jne    0x425e58
  425ece:	push   0xafb665f3
  425ed3:	jno    0x425e61
  425ed5:	mov    al,0xd3
  425ed7:	add    dl,ch
  425ed9:	xlat   BYTE PTR ds:[ebx]
  425eda:	xchg   edi,eax
  425edb:	inc    esp
  425edc:	inc    edi
  425edd:	add    bl,BYTE PTR [ebx]
  425edf:	aaa    
  425ee0:	sti    
  425ee1:	jp     0x425e9e
  425ee3:	test   BYTE PTR [ebx+ecx*2-0x71],ah
  425ee7:	dec    ebp
  425ee8:	jl     0x425f27
  425eea:	xchg   DWORD PTR [esi],eax
  425eec:	push   ebp
  425eed:	mov    ds:0x9f5f4613,al
  425ef2:	je     0x425e9f
  425ef4:	or     ecx,DWORD PTR ds:0x179245c
  425efa:	xchg   ebx,eax
  425efb:	outs   dx,BYTE PTR ds:[esi]
  425efc:	and    al,0xf3
  425efe:	cmp    eax,0x8dd27ae7
  425f03:	inc    BYTE PTR [ebx]
  425f05:	aad    0x2f
  425f07:	in     al,0x1
  425f09:	in     eax,dx
  425f0a:	sbb    DWORD PTR [esi-0x69cd8e43],ebx
  425f10:	inc    eax
  425f11:	iret   
  425f12:	into   
  425f13:	mov    ch,0xbe
  425f15:	inc    eax
  425f16:	pop    ss
  425f17:	ds jo  0x425f07
  425f1a:	test   al,0xb
  425f1c:	inc    edi
  425f1d:	jbe    0x425f39
  425f1f:	push   edx
  425f20:	cmp    cl,BYTE PTR [ebx+0x7190c6b1]
  425f26:	ret    0xe630
  425f29:	aaa    
  425f2a:	adc    eax,0x205eef5c
  425f2f:	int    0x5b
  425f31:	adc    BYTE PTR [esp+esi*4+0x60b8ded8],al
  425f38:	je     0x425f0d
  425f3a:	mov    ebx,0xbb977019
  425f3f:	inc    ebx
  425f40:	stos   DWORD PTR es:[edi],eax
  425f41:	push   ebp
  425f43:	mov    ds,WORD PTR [ecx+0x70f07379]
  425f49:	inc    ecx
  425f4a:	loopne 0x425ed4
  425f4c:	and    al,0xd2
  425f4e:	call   0xa64e3e6f
  425f53:	xor    eax,0x61851187
  425f58:	and    eax,DWORD PTR [eax-0x2c]
  425f5b:	mov    ebx,0x15de014a
  425f60:	dec    edi
  425f61:	imul   ebx,DWORD PTR [esi],0x8df46a38
  425f67:	inc    esi
  425f68:	fiadd  DWORD PTR [edi]
  425f6a:	dec    ebx
  425f6b:	jmp    0x425f3f
  425f6d:	sbb    ecx,DWORD PTR [ecx+0x5c91f9ae]
  425f73:	jle    0x425ef7
  425f75:	fistp  DWORD PTR [edi+0x693dab7f]
  425f7b:	icebp  
  425f7c:	mov    ch,BYTE PTR [ebp+0x4a]
  425f7f:	out    dx,eax
  425f80:	sbb    eax,0x3276e3f3
  425f85:	pushf  
  425f86:	fisubr DWORD PTR [edi+edi*8-0x39e1259f]
  425f8d:	in     al,dx
  425f8e:	dec    ebx
  425f8f:	adc    al,0x9f
  425f91:	es nop
  425f93:	leave  
  425f94:	loopne 0x425f37
  425f96:	pop    esp
  425f97:	lods   eax,DWORD PTR ds:[esi]
  425f98:	push   ebp
  425f99:	pop    edi
  425f9a:	push   esp
  425f9b:	add    al,0x80
  425f9d:	sahf   
  425f9e:	shl    DWORD PTR ds:[ebp+0x58d47ff4],cl
  425fa5:	call   0x37e9:0x272ccc63
  425fac:	addr16 imul ebp,ebp,0x7a
  425fb0:	push   0xab498696
  425fb5:	inc    ebp
  425fb6:	test   eax,0xb716c177
  425fbb:	test   eax,0xa45884ca
  425fc0:	push   ebx
  425fc1:	mov    bl,0xe7
  425fc3:	or     ch,BYTE PTR [esi-0x1ac87d73]
  425fc9:	mov    dl,0xe6
  425fcb:	(bad)  
  425fcc:	call   0x92db0163
  425fd1:	cmp    edi,DWORD PTR [esi]
  425fd3:	adc    DWORD PTR [edi],0xfffffff8
  425fd6:	mov    DWORD PTR [ebp-0x53],eax
  425fd9:	sbb    BYTE PTR gs:[ecx],ah
  425fdc:	pop    ds
  425fdd:	add    BYTE PTR ds:0xf84b4b59,bh
  425fe3:	(bad)  
  425fe4:	out    dx,al
  425fe5:	push   ds
  425fe6:	mov    ecx,0xdcc7fd50
  425feb:	test   al,0x93
  425fed:	sahf   
  425fee:	sbb    BYTE PTR [esp+edi*2+0x33f0a5ee],0xee
  425ff6:	retf   0x84cb
  425ff9:	xchg   ecx,eax
  425ffa:	ins    DWORD PTR es:[edi],dx
  425ffb:	mov    al,ds:0xf1157e0b
  426000:	and    esi,DWORD PTR [edi+0x6d]
  426003:	popa   
  426004:	retf   0x3014
  426007:	shl    dh,1
  426009:	mov    ebp,0xdb0c86b3
  42600e:	xchg   ecx,eax
  42600f:	fs sbb al,0xbb
  426012:	or     eax,0xca2c2647
  426017:	cmp    esi,edx
  426019:	aam    0x32
  42601b:	imul   esi,DWORD PTR [ebp-0x57],0x32
  42601f:	and    eax,0xdd44173c
  426024:	sub    dl,BYTE PTR [esi]
  426026:	xor    DWORD PTR [ebp+0x226405e5],ebx
  42602c:	stos   DWORD PTR es:[edi],eax
  42602d:	les    ebx,FWORD PTR [edi-0x49d7179a]
  426033:	dec    ecx
  426034:	add    BYTE PTR [ebx+0xd],ch
  426037:	mov    esp,0xa113a0c8
  42603c:	test   DWORD PTR [eax+0xe76e73c],ebp
  426042:	pop    edi
  426043:	jmp    0x7884:0xd1c5191a
  42604a:	scas   eax,DWORD PTR es:[edi]
  42604b:	jns    0x425ff9
  42604d:	lahf   
  42604e:	pop    ebx
  42604f:	mov    edi,0x821ebccf
  426054:	popf   
  426055:	enter  0x3034,0x2b
  426059:	mov    ebp,0x7bf5cc2d
  42605e:	mov    ecx,0xba3e0de4
  426063:	lock dec esp
  426065:	scas   eax,DWORD PTR es:[edi]
  426066:	or     ecx,DWORD PTR [edi+0x3d89f44d]
  42606c:	int3   
  42606d:	ins    DWORD PTR es:[edi],dx
  42606e:	push   cs
  42606f:	sub    BYTE PTR [eax+0x68],0x6d
  426073:	dec    edi
  426074:	pop    ebx
  426075:	mov    ds:0xd999bb36,al
  42607a:	imul   ebp,DWORD PTR [eax],0xfb556196
  426080:	add    edi,esp
  426082:	es or  dh,bh
  426085:	fisubr DWORD PTR ds:0x48e1d450
  42608b:	pop    edi
  42608c:	xor    eax,0x24a4707b
  426091:	ins    DWORD PTR es:[edi],dx
  426092:	adc    al,0x65
  426094:	sbb    BYTE PTR [esi],0xc
  426097:	mov    eax,ds:0xb3412f74
  42609d:	mov    BYTE PTR [edx],dh
  42609f:	and    DWORD PTR [ebp-0xe],ebp
  4260a2:	sub    eax,0x7c7006d4
  4260a7:	dec    edx
  4260a8:	dec    ebx
  4260a9:	pop    ebx
  4260aa:	lods   al,BYTE PTR ds:[esi]
  4260ab:	lahf   
  4260ac:	call   0x6a9d:0xb2d1a7c1
  4260b3:	add    edx,esi
  4260b5:	fld    DWORD PTR [esi+edx*8-0x38]
  4260b9:	stos   DWORD PTR es:[edi],eax
  4260ba:	call   0x63ff58c5
  4260bf:	fcmove st,st(6)
  4260c1:	mov    al,0x2d
  4260c3:	scas   al,BYTE PTR es:[edi]
  4260c4:	sahf   
  4260c5:	sti    
  4260c6:	or     DWORD PTR [eax+edi*2],0x5c
  4260ca:	push   ebp
  4260cb:	out    0x3d,al
  4260cd:	repnz mov ebx,0x80f6ae25
  4260d3:	rcl    BYTE PTR [esi],cl
  4260d5:	test   BYTE PTR [esi*1-0x4cfeeb16],al
  4260dc:	mov    DWORD PTR [esi+0x37],ecx
  4260df:	and    DWORD PTR [ebx-0x1b371e99],esp
  4260e5:	cli    
  4260e6:	add    esp,DWORD PTR [eax]
  4260e8:	out    dx,eax
  4260e9:	repnz push ebx
  4260eb:	pop    esi
  4260ec:	cmp    DWORD PTR [ecx-0x64],edi
  4260ef:	jo     0x426103
  4260f1:	sub    DWORD PTR [edx],0xffffffe6
  4260f4:	ficom  WORD PTR ds:0x7770410b
  4260fa:	jp     0x4260fa
  4260fc:	imul   edx,DWORD PTR [edi],0x78
  4260ff:	outs   dx,DWORD PTR ds:[esi]
  426100:	mov    dl,0xf9
  426102:	sub    al,0xe9
  426104:	lahf   
  426105:	sahf   
  426106:	pop    si
  426108:	ror    BYTE PTR [edx-0x274b4244],cl
  42610e:	mul    ah
  426110:	adc    dh,BYTE PTR [eax]
  426112:	jnp    0x426177
  426114:	xchg   edi,eax
  426115:	xchg   edi,eax
  426116:	push   ebp
  426117:	test   DWORD PTR [ebx],esi
  426119:	sbb    al,0xe6
  42611b:	xchg   esi,eax
  42611c:	sub    al,0x4c
  42611e:	xor    esi,DWORD PTR es:[esi+0x56b0ba6c]
  426125:	add    al,0x8
  426127:	outs   dx,BYTE PTR ds:[esi]
  426128:	mov    edx,?
  42612a:	dec    ebp
  42612b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42612c:	and    ch,BYTE PTR [esi-0x78]
  42612f:	(bad)  
  426130:	dec    esp
  426131:	sub    esp,DWORD PTR [eax+0x18af1d88]
  426137:	jg     0x4260d7
  426139:	pop    edx
  42613a:	pop    esi
  42613b:	jb     0x4260e4
  42613d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42613e:	pop    edx
  42613f:	test   al,0x27
  426141:	pop    edx
  426142:	sub    DWORD PTR [eax],esi
  426144:	shl    DWORD PTR [ecx],0x28
  426147:	mov    esp,0xf26b586e
  42614c:	faddp  st(4),st
  42614e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  426150:	cdq    
  426151:	adc    BYTE PTR [ebx],0x24
  426154:	xchg   ebx,eax
  426155:	sbb    eax,0xf75d70ee
  42615a:	sahf   
  42615b:	adc    bh,BYTE PTR [eax+0x2f]
  42615e:	jns    0x426151
  426160:	pop    edx
  426161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426162:	push   edx
  426163:	push   es
  426164:	pusha  
  426165:	fwait
  426166:	hlt    
  426167:	and    edi,DWORD PTR [edi]
  426169:	sbb    eax,0x588ef370
  42616e:	cld    
  42616f:	mov    ebx,0x7ba83016
  426174:	xchg   edx,eax
  426175:	add    bh,BYTE PTR [edx-0x4654e21c]
  42617b:	mov    eax,ds
  42617d:	push   eax
  42617e:	js     0x4261a0
  426180:	retf   0xff23
  426183:	mov    cl,0x84
  426185:	jle    0x42618c
  426187:	mov    ah,0xdb
  426189:	jl     0x426121
  42618b:	adc    eax,0x5cdbd1b7
  426190:	scas   eax,DWORD PTR es:[edi]
  426191:	bound  ebx,QWORD PTR [esi-0x4e87590c]
  426197:	mov    eax,ds:0x83a585a4
  42619c:	xor    BYTE PTR [ecx+eax*4],ah
  42619f:	mov    bh,0xf6
  4261a1:	mov    al,ds:0x201813a6
  4261a6:	inc    esp
  4261a7:	jp     0x42615e
  4261a9:	xor    BYTE PTR ds:0xeb69bedc,bl
  4261af:	loop   0x426200
  4261b1:	in     eax,dx
  4261b2:	mov    edx,0x48540f99
  4261b7:	pop    edi
  4261b8:	and    dh,cl
  4261ba:	bound  esp,QWORD PTR [eax+0x3d2f7ee8]
  4261c0:	mov    ds:0x75d55879,eax
  4261c5:	ficomp WORD PTR [ebx]
  4261c7:	leave  
  4261c8:	xor    al,0xdd
  4261ca:	(bad)  
  4261cb:	lock pop ebx
  4261cd:	pop    ds
  4261ce:	sbb    BYTE PTR [esi],ch
  4261d0:	fist   DWORD PTR [eax-0x2aa478f5]
  4261d6:	mov    ebp,0x2a64f83b
  4261db:	mov    BYTE PTR [edi+0x7e],ah
  4261de:	loope  0x426234
  4261e0:	jmp    0x426220
  4261e2:	or     ah,BYTE PTR [edi-0x10]
  4261e5:	ins    BYTE PTR es:[edi],dx
  4261e6:	pusha  
  4261e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e8:	cmc    
  4261e9:	inc    BYTE PTR [esi]
  4261eb:	pusha  
  4261ec:	cmp    esp,esp
  4261ee:	adc    edx,DWORD PTR [ebp-0x1e]
  4261f1:	add    bl,ah
  4261f3:	call   0x3785d7b5
  4261f8:	(bad)  
  4261f9:	inc    edx
  4261fa:	fiadd  DWORD PTR [edi-0x6c6cc589]
  426200:	outs   dx,BYTE PTR ds:[esi]
  426201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	ins    BYTE PTR es:[edi],dx
  426203:	xor    al,dh
  426205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426206:	rol    BYTE PTR [ebp+0x412f4572],1
  42620c:	or     al,0x8d
  42620e:	sub    DWORD PTR [edi+0x1f],esp
  426211:	aad    0xd8
  426213:	or     eax,0xe4516003
  426218:	mov    eax,0xc344b9b5
  42621d:	lahf   
  42621e:	and    BYTE PTR [eax-0x4088fd70],dh
  426224:	cli    
  426225:	dec    eax
  426226:	adc    ebx,DWORD PTR [ebx]
  426228:	jae    0x4261c7
  42622a:	mov    DWORD PTR [edi],ebp
  42622c:	sub    DWORD PTR [edi+edx*8],ebp
  42622f:	ret    0x6e30
  426232:	fldcw  WORD PTR [ebp+0x54]
  426235:	test   eax,0xac056bdd
  42623a:	xchg   esp,eax
  42623b:	pop    edx
  42623c:	xor    al,0x16
  42623e:	lds    ecx,FWORD PTR [ebp-0x5]
  426241:	inc    ebp
  426242:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  426244:	popf   
  426245:	lea    ebp,[eax+eiz*4+0x53]
  426249:	leave  
  42624a:	enter  0x13ba,0x8e
  42624e:	jns    0x4262c3
  426250:	pop    ds
  426251:	mov    ecx,0xf7abcbbf
  426256:	xor    DWORD PTR [edx+0x641e6215],edi
  42625c:	sbb    DWORD PTR [edx-0x4e2fd13f],esp
  426262:	or     eax,0x3611e29d
  426267:	(bad)  
  426268:	ss push esp
  42626a:	cwde   
  42626b:	sub    ebx,ebp
  42626d:	or     edi,DWORD PTR [edx]
  42626f:	nop
  426270:	das    
  426271:	in     eax,0xe3
  426273:	mov    cl,0x17
  426275:	sbb    eax,0x19e310a6
  42627a:	repz push edx
  42627c:	aaa    
  42627d:	mov    ebp,esp
  42627f:	xor    ah,BYTE PTR [esi+eax*8+0x14]
  426283:	es cmp cl,ch
  426286:	sbb    al,0x6d
  426288:	jo     0x4262ad
  42628a:	sub    BYTE PTR [esi+0x470ad048],al
  426290:	es cmc 
  426292:	bound  ebp,QWORD PTR cs:[ecx+0xd1533a5]
  426299:	outs   dx,DWORD PTR ds:[esi]
  42629a:	call   0x221:0x3df05e33
  4262a1:	inc    ebx
  4262a2:	addr16 retf 
  4262a4:	cmp    BYTE PTR [edi],bh
  4262a6:	dec    esi
  4262a7:	pop    edx
  4262a8:	cmc    
  4262a9:	gs loop 0x42628d
  4262ac:	(bad)  
  4262ad:	push   ss
  4262ae:	push   edx
  4262af:	mov    edx,0x5f57707
  4262b4:	xchg   ecx,eax
  4262b5:	rol    BYTE PTR [ebx+0x48e59697],cl
  4262bb:	enter  0xf4b6,0xe6
  4262bf:	push   eax
  4262c0:	iret   
  4262c1:	add    ebp,DWORD PTR [ebp+0x5]
  4262c4:	push   cs
  4262c5:	mov    esi,0xebaf8573
  4262ca:	sub    eax,0x33211427
  4262cf:	fs mov dh,0xc8
  4262d2:	or     eax,DWORD PTR [eax+edx*2+0x7d]
  4262d6:	(bad)  
  4262d7:	sub    cl,BYTE PTR [ecx]
  4262d9:	jnp    0x42629d
  4262db:	ror    BYTE PTR [esi+0x51],1
  4262de:	repz inc ebp
  4262e0:	cmc    
  4262e1:	sbb    dh,BYTE PTR [edx-0x40751c8]
  4262e7:	and    ebp,edx
  4262e9:	push   es
  4262ea:	jl     0x426314
  4262ec:	xchg   ebx,eax
  4262ed:	mov    ecx,0x4556d4e0
  4262f2:	je     0x426365
  4262f4:	(bad)  
  4262f5:	shr    ecx,1
  4262f7:	xchg   DWORD PTR [edx],ecx
  4262f9:	cld    
  4262fa:	mov    esp,0x418235fe
  4262ff:	jle    0x426292
  426301:	das    
  426302:	xor    bl,BYTE PTR [ebx+ecx*1-0x6eeff4a5]
  426309:	in     al,0x2a
  42630b:	pop    ecx
  42630c:	xchg   DWORD PTR ds:0x60c0cda3,edi
  426312:	or     bl,al
  426314:	dec    ecx
  426315:	fstp   DWORD PTR [ebx-0x4b9d3745]
  42631b:	enter  0xa74e,0xc5
  42631f:	inc    edi
  426320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426321:	dec    edi
  426322:	pop    edi
  426323:	test   DWORD PTR [ebx],ecx
  426325:	jns    0x4262af
  426327:	aaa    
  426328:	xor    bl,BYTE PTR [eax-0x61]
  42632b:	or     dl,BYTE PTR [edx+0x2c]
  42632e:	mov    al,ds:0xfe326f89
  426333:	fcmovbe st,st(6)
  426335:	int3   
  426336:	push   cs
  426337:	cs scas al,BYTE PTR es:[edi]
  426339:	xchg   ebp,eax
  42633a:	les    eax,FWORD PTR [ebp+0x131bd0f3]
  426340:	pop    edx
  426341:	sub    DWORD PTR [ecx+esi*4+0x79485c79],ebx
  426348:	int    0x79
  42634a:	(bad)  
  42634b:	adc    bh,BYTE PTR [esi]
  42634d:	jle    0x426311
  42634f:	(bad)  
  426350:	sub    al,0xca
  426352:	cmp    al,0x9c
  426354:	fist   WORD PTR [ebx-0x48039598]
  42635a:	cld    
  42635b:	out    dx,eax
  42635c:	add    edx,DWORD PTR [ecx+0x50b791a7]
  426362:	out    dx,al
  426363:	iret   
  426364:	xchg   esp,eax
  426365:	cmp    eax,ebp
  426367:	stos   DWORD PTR es:[edi],eax
  426368:	xchg   ebp,eax
  426369:	mov    dh,dl
  42636b:	mov    eax,ds:0x546b9770
  426370:	adc    dh,bh
  426372:	outs   dx,BYTE PTR ds:[esi]
  426373:	scas   eax,DWORD PTR es:[edi]
  426374:	iret   
  426375:	test   al,0x84
  426377:	cli    
  426378:	mov    edx,0x84034871
  42637d:	rol    ah,1
  42637f:	sub    al,0xb6
  426381:	sub    al,0xc2
  426383:	in     eax,0x6b
  426385:	add    BYTE PTR [ebp+0x68],bh
  426388:	add    al,0xc
  42638a:	cwde   
  42638b:	das    
  42638c:	mov    dh,0xb6
  42638e:	int    0xfb
  426390:	popf   
  426391:	push   cs
  426392:	aaa    
  426393:	mov    dh,0x7
  426395:	int3   
  426396:	cmp    eax,0xe814de73
  42639b:	xchg   ebp,eax
  42639c:	outs   dx,BYTE PTR ds:[esi]
  42639d:	adc    dl,BYTE PTR [ebp+ecx*8-0x9efba64]
  4263a4:	push   0x20
  4263a6:	mov    esp,0x87c8c551
  4263ab:	loope  0x42642c
  4263ad:	ret    
  4263ae:	retf   
  4263af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263b0:	mov    ebp,0xd79d77f5
  4263b5:	test   al,0x51
  4263b7:	mov    al,BYTE PTR [ebp+0xdc13d58]
  4263bd:	cmc    
  4263be:	jmp    0xf24367cf
  4263c3:	je     0x426356
  4263c5:	dec    edx
  4263c6:	cmp    edi,DWORD PTR [edi]
  4263c8:	sbb    ebx,DWORD PTR [esi+0x6b]
  4263cb:	cld    
  4263cc:	pop    esi
  4263cd:	cdq    
  4263ce:	add    bh,BYTE PTR [edx+esi*8+0x2]
  4263d2:	xor    eax,eax
  4263d4:	push   cs
  4263d5:	adc    al,0xf9
  4263d7:	pop    edi
  4263d8:	adc    cl,BYTE PTR [ebp-0x6b]
  4263db:	lds    esp,FWORD PTR [esi-0xe1b223e]
  4263e1:	mov    dl,0x9d
  4263e3:	and    eax,0x3e7f9416
  4263e8:	mov    ds:0xec7efefa,eax
  4263ed:	leave  
  4263ee:	hlt    
  4263ef:	stos   BYTE PTR es:[edi],al
  4263f0:	sbb    eax,0x76b49e94
  4263f5:	shl    dh,1
  4263f7:	xor    BYTE PTR [ebx+0x7a],al
  4263fa:	mov    ch,0xd5
  4263fc:	hlt    
  4263fd:	mov    ebp,0x1344a7dd
  426402:	jmp    0x4263c1
  426404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426405:	or     DWORD PTR [esi+edi*2+0xa],esi
  426409:	inc    ecx
  42640a:	test   eax,0x3390d931
  42640f:	fwait
  426410:	pop    ebp
  426411:	ret    0xe972
  426414:	push   cs
  426415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426416:	cli    
  426417:	pop    ecx
  426418:	icebp  
  426419:	iret   
  42641a:	popf   
  42641b:	imul   edi,DWORD PTR [ecx+0x11],0xffffffe7
  42641f:	pop    esi
  426420:	pop    ebp
  426421:	jp     0x4263d9
  426423:	jae    0x426405
  426425:	lahf   
  426426:	outs   dx,DWORD PTR ds:[esi]
  426427:	outs   dx,BYTE PTR ds:[esi]
  426428:	and    dl,BYTE PTR [esi]
  42642a:	sbb    DWORD PTR [esi-0x5831d512],esp
  426430:	jmp    0x14bd9043
  426435:	rcl    ebx,cl
  426437:	mov    ebx,0x7ee9a3ed
  42643c:	retf   0xeda7
  42643f:	test   al,0xe7
  426441:	out    dx,eax
  426442:	cmp    DWORD PTR [eax-0x7d260a4b],esi
  426448:	xchg   edx,eax
  426449:	mov    ebx,eax
  42644b:	shl    DWORD PTR [ebx+0x72c756f2],cl
  426451:	retf   0x346f
  426454:	sti    
  426455:	arpl   WORD PTR [edx+0x74b4037a],cx
  42645b:	mov    ebx,0x5108ecc9
  426460:	dec    eax
  426461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426462:	sbb    al,0x19
  426464:	or     esi,esi
  426466:	loopne 0x4264d5
  426468:	outs   dx,BYTE PTR ds:[esi]
  426469:	jp     0x42646d
  42646b:	int3   
  42646c:	fld    QWORD PTR [eax-0x3d]
  42646f:	test   eax,0x2c1c9e42
  426474:	loopne 0x42649b
  426476:	test   al,0xb8
  426478:	mov    dl,0x29
  42647a:	inc    ebx
  42647b:	test   DWORD PTR [ecx+0x3d69bee3],0xf2bd46e4
  426485:	jg     0x42648b
  426487:	nop
  426488:	retf   
  426489:	xchg   edx,eax
  42648a:	js     0x4264b6
  42648c:	pand   mm2,QWORD PTR [edx+0x53]
  426490:	pop    esp
  426491:	xchg   ebx,eax
  426492:	stos   BYTE PTR es:[edi],al
  426493:	jge    0x4264a6
  426495:	adc    eax,0xf673d2c6
  42649a:	adc    DWORD PTR [edx+0x5454f400],eax
  4264a0:	xchg   ebx,eax
  4264a1:	aad    0xe2
  4264a3:	outs   dx,DWORD PTR ds:[esi]
  4264a4:	rol    DWORD PTR [eax-0x69],0x72
  4264a8:	bound  esi,QWORD PTR [eax+ebp*2+0x75]
  4264ac:	jo     0x4264f3
  4264ae:	jbe    0x4264ed
  4264b0:	mov    dh,0x9f
  4264b2:	fstp   QWORD PTR [edi]
  4264b4:	mov    BYTE PTR [ebx-0x5faa525f],bh
  4264ba:	xchg   DWORD PTR [ebx],eax
  4264bc:	imul   eax,DWORD PTR [ebp-0x62],0x8ab36cb7
  4264c3:	mov    ebx,eax
  4264c5:	sti    
  4264c6:	dec    ecx
  4264c7:	rcr    ecx,1
  4264c9:	xor    edx,edx
  4264cb:	cmp    ecx,ebx
  4264cd:	int    0x4b
  4264cf:	mov    edx,0xb5074c90
  4264d4:	pop    eax
  4264d5:	sahf   
  4264d6:	or     al,0x54
  4264d8:	stos   DWORD PTR es:[edi],eax
  4264d9:	and    ebx,DWORD PTR [ecx-0x2d51749c]
  4264df:	inc    edx
  4264e0:	and    esp,DWORD PTR [ecx]
  4264e2:	jmp    FWORD PTR [edx+0x57d037c]
  4264e8:	scas   eax,DWORD PTR es:[edi]
  4264e9:	mov    eax,0xb62a2ae9
  4264ee:	dec    ebp
  4264ef:	xor    edx,DWORD PTR [edx+0x4d4cfa7a]
  4264f5:	mov    eax,ds:0x1d815b04
  4264fa:	int    0xf9
  4264fc:	aad    0x59
  4264fe:	adc    cl,BYTE PTR [ecx-0x49]
  426501:	xchg   cl,ah
  426503:	push   esp
  426504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426505:	outs   dx,BYTE PTR ds:[esi]
  426506:	mov    DWORD PTR [edi-0x60],esp
  426509:	and    eax,0x82b842c2
  42650e:	mov    edi,0x11debcb
  426513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426514:	push   0x55
  426516:	push   ecx
  426517:	ficomp WORD PTR [eax-0xf066569]
  42651d:	mov    DWORD PTR [ecx-0x6afbf02e],eax
  426523:	xor    al,0xbe
  426525:	jb     0x426566
  426527:	shl    DWORD PTR [esi-0x75],0x35
  42652b:	pop    ecx
  42652c:	jnp    0x4264ed
  42652e:	xor    BYTE PTR [edi+0xf],ah
  426531:	jno    0x42656b
  426533:	das    
  426534:	loopne 0x4264e3
  426536:	cs jecxz 0x4264bd
  426539:	loopne 0x426552
  42653b:	add    al,0x5e
  42653d:	xor    ebp,eax
  42653f:	ror    bh,1
  426541:	mov    ch,0x5e
  426543:	nop    DWORD PTR [ebp-0x13905b48]
  42654a:	mov    BYTE PTR [edx+0x11],bh
  42654d:	jnp    0x426532
  42654f:	pop    esp
  426550:	leave  
  426551:	mov    ebx,0xeebfe96d
  426556:	clc    
  426557:	mov    WORD PTR [ebx-0x24e70a1b],fs
  42655d:	mov    bh,0xc2
  42655f:	dec    ecx
  426560:	dec    esp
  426561:	addr16 mov al,ds:0xcffb
  426565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426566:	in     eax,dx
  426567:	lock jle 0x4265ad
  42656a:	out    dx,al
  42656b:	popa   
  42656c:	ficom  DWORD PTR [ebx+0x7112f0a]
  426572:	(bad)  
  426574:	xor    BYTE PTR [ebp+0x60bf3f34],0x9f
  42657b:	clc    
  42657c:	add    dl,BYTE PTR [edx]
  42657e:	dec    edi
  42657f:	aad    0x62
  426581:	push   0xe2461bdc
  426586:	cmp    al,0x74
  426588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426589:	add    esi,DWORD PTR ds:0xd1481dcd
  42658f:	in     al,dx
  426590:	into   
  426591:	dec    eax
  426592:	xor    esi,edx
  426594:	add    BYTE PTR [esi-0x3a],bh
  426597:	mov    dl,0xcc
  426599:	aas    
  42659a:	fadd   DWORD PTR [eax]
  42659c:	jbe    0x426563
  42659e:	shl    DWORD PTR [ecx-0x21],1
  4265a1:	mov    esi,0xe6db8dc8
  4265a6:	cmp    ah,cl
  4265a8:	jo     0x426577
  4265aa:	dec    esp
  4265ab:	sub    esi,DWORD PTR [ebx-0x1c]
  4265ae:	dec    ecx
  4265af:	and    BYTE PTR [esi+0x629bd6b0],ch
  4265b5:	push   eax
  4265b6:	pop    ecx
  4265b7:	les    esi,FWORD PTR [ebx-0x2ad36f99]
  4265bd:	mov    edi,0xa6dc59fa
  4265c2:	jmp    0x4265c7
  4265c4:	mov    al,0xf0
  4265c6:	daa    
  4265c7:	fild   QWORD PTR [ebx]
  4265c9:	fs adc al,0xbc
  4265cc:	clc    
  4265cd:	and    DWORD PTR [esi+0x6226deeb],esp
  4265d3:	push   cs
  4265d4:	pop    ecx
  4265d5:	mov    bh,0xc1
  4265d7:	pop    ebx
  4265d8:	xor    esi,DWORD PTR [ebx+0x1b]
  4265db:	xchg   edi,eax
  4265dc:	sbb    BYTE PTR fs:[eax],bl
  4265df:	test   BYTE PTR [esi+0x6482a2cb],ah
  4265e5:	cwde   
  4265e6:	and    DWORD PTR [edx+0x3eabd98b],ebx
  4265ec:	das    
  4265ed:	scas   al,BYTE PTR es:[edi]
  4265ee:	push   esp
  4265ef:	jg     0x426574
  4265f1:	mov    ds:0x3ed8dc83,eax
  4265f6:	jmp    0x3f3f:0xb646f6fd
  4265fd:	sbb    al,0xaa
  4265ff:	pop    ds
  426600:	mov    ah,0x66
  426602:	aad    0x20
  426604:	ret    0x6ffe
  426607:	adc    DWORD PTR [edi],0xffffffdb
  42660a:	shl    BYTE PTR [edx+0xa7dd1ad],0xac
  426611:	mov    esi,DWORD PTR es:[edi-0x52]
  426615:	push   ebx
  426616:	loope  0x4265bd
  426618:	adc    dh,bl
  42661a:	or     esp,DWORD PTR [edi+0x6bf5e457]
  426620:	add    eax,0x9679b356
  426625:	xor    ebp,DWORD PTR [edi+ebp*4-0x80]
  426629:	cmp    edx,DWORD PTR [edx+0x2c80fad9]
  42662f:	sub    ecx,ebx
  426631:	je     0x4265f8
  426633:	fcom   DWORD PTR [ecx]
  426635:	cmp    dl,BYTE PTR [eax+0x7e1f539a]
  42663b:	ss xor eax,0xf73e3a30
  426641:	sub    esi,DWORD PTR [ebp-0x738094c6]
  426647:	cmp    eax,0x36928d48
  42664c:	lods   eax,DWORD PTR ds:[esi]
  42664d:	shl    dh,cl
  42664f:	dec    ebp
  426650:	mov    ds:0xa4b96d97,eax
  426656:	clc    
  426657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426658:	inc    ebx
  426659:	retf   
  42665a:	pop    es
  42665b:	adc    DWORD PTR [esi-0x40e51336],0x98648c20
  426665:	and    eax,0x420f26c6
  42666a:	mov    ecx,0xbe863851
  42666f:	int    0x68
  426671:	mov    ecx,0x7f2de425
  426676:	lds    esi,FWORD PTR [esi-0x6310dc45]
  42667c:	or     esp,DWORD PTR ds:0x7d64fa0f
  426682:	inc    esp
  426683:	cmc    
  426684:	enter  0x2e27,0xa5
  426688:	div    DWORD PTR [edi+0x5a]
  42668b:	call   0xb67c:0x31a14d43
  426692:	clc    
  426693:	(bad)  [edi-0x23]
  426696:	sub    al,0x3e
  426698:	pop    ds
  426699:	xor    al,0x2
  42669b:	jbe    0x4266c6
  42669d:	shl    BYTE PTR [ecx-0x303725cd],1
  4266a3:	xchg   edx,eax
  4266a4:	mov    ds:0x7eb58a90,eax
  4266a9:	dec    ebx
  4266aa:	mov    esi,0x88d8be9d
  4266af:	mov    eax,0xb080bb0
  4266b4:	das    
  4266b5:	test   al,0x4e
  4266b7:	in     al,0x23
  4266b9:	jge    0x4266e8
  4266bb:	sahf   
  4266bc:	iret   
  4266bd:	int    0xdd
  4266bf:	pop    ss
  4266c0:	xlat   BYTE PTR ds:[ebx]
  4266c1:	mov    ebp,0x44139cc0
  4266c6:	bound  esp,QWORD PTR [ecx-0x3ca4e39c]
  4266cc:	push   ss
  4266cd:	inc    ebx
  4266ce:	out    0x1f,eax
  4266d0:	inc    edx
  4266d1:	cld    
  4266d2:	pop    ebp
  4266d3:	jns    0x42672c
  4266d5:	lock leave 
  4266d7:	ins    DWORD PTR es:[edi],dx
  4266d8:	inc    ebx
  4266d9:	and    dh,ch
  4266db:	push   ebx
  4266dc:	sub    al,dh
  4266de:	cs inc ebx
  4266e0:	icebp  
  4266e1:	dec    esp
  4266e2:	ror    edi,1
  4266e4:	mov    cl,0x66
  4266e6:	inc    esi
  4266e7:	ds xchg DWORD PTR ss:[ebx],edx
  4266eb:	sbb    al,0x6c
  4266ed:	inc    edi
  4266ee:	nop
  4266ef:	bound  esi,QWORD PTR [eax+ecx*2]
  4266f2:	jg     0x42669f
  4266f4:	js     0x4266aa
  4266f6:	pop    ebx
  4266f7:	js     0x4266f4
  4266f9:	push   esi
  4266fa:	sbb    esp,edi
  4266fc:	push   ss
  4266fd:	std    
  4266fe:	out    dx,al
  4266ff:	out    0x9a,al
  426701:	arpl   WORD PTR [edi-0x5aa3a671],ax
  426707:	sub    DWORD PTR [ebx],0x77
  42670a:	sbb    bl,cl
  42670c:	test   BYTE PTR [ecx-0x6fd15182],cl
  426712:	mov    ah,0x9b
  426714:	inc    ecx
  426715:	cs mov WORD PTR fs:[esi-0x36],fs
  42671a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42671b:	add    ecx,DWORD PTR [edx+ecx*1+0x41]
  42671f:	gs shl edx,cl
  426722:	pop    edi
  426723:	xchg   edx,eax
  426724:	adc    ecx,DWORD PTR [edi]
  426726:	sub    edx,ecx
  426728:	adc    dh,al
  42672a:	sbb    al,0x3d
  42672c:	repz or ebp,DWORD PTR [eax-0x55dbb98a]
  426733:	ins    BYTE PTR es:[edi],dx
  426734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426736:	cli    
  426737:	fdivr  st(6),st
  426739:	lods   eax,DWORD PTR ds:[esi]
  42673a:	pop    esi
  42673b:	daa    
  42673c:	fidiv  WORD PTR [ecx]
  42673e:	test   al,0x20
  426740:	imul   ecx,esp,0x4c
  426743:	dec    eax
  426744:	hlt    
  426745:	icebp  
  426746:	jb     0x4266cb
  426748:	sbb    DWORD PTR [edi+ecx*1],esi
  42674b:	les    edi,FWORD PTR [ebp+0x71160154]
  426751:	ja     0x42679f
  426753:	retf   0x3167
  426756:	in     eax,dx
  426757:	dec    edx
  426758:	dec    DWORD PTR [edi]
  42675a:	cmp    ebp,esi
  42675c:	cmp    esp,DWORD PTR [ecx+esi*2-0x3b5f0098]
  426763:	mul    eax
  426765:	xchg   edx,eax
  426766:	lds    ebx,FWORD PTR [eax-0x35]
  426769:	inc    edx
  42676a:	bswap  ebp
  42676c:	sbb    BYTE PTR [eax],dh
  42676e:	or     bh,BYTE PTR [edx-0x41403be9]
  426774:	push   edi
  426775:	pop    ebp
  426776:	jno    0x426753
  426778:	dec    ecx
  426779:	ins    BYTE PTR es:[edi],dx
  42677a:	xor    eax,0x303d1cfd
  42677f:	pop    ecx
  426780:	and    DWORD PTR [edi+0x582665e0],ebp
  426786:	hlt    
  426787:	adc    al,0xa6
  426789:	adc    al,0xc4
  42678b:	pop    ebx
  42678c:	je     0x426749
  42678e:	in     al,0x31
  426790:	addr16 xchg ebx,eax
  426792:	mov    edx,DWORD PTR [eax-0x73]
  426795:	ins    DWORD PTR es:[edi],dx
  426796:	cwde   
  426797:	out    0x4,al
  426799:	enter  0x367b,0x70
  42679d:	enter  0xa1cc,0x9d
  4267a1:	retf   0xf60c
  4267a4:	sbb    edx,0x4c28bb09
  4267aa:	daa    
  4267ab:	test   edx,edx
  4267ad:	pop    ecx
  4267ae:	(bad)  
  4267af:	pop    ss
  4267b0:	xor    DWORD PTR [esi+0x28],edi
  4267b3:	push   es
  4267b4:	imul   ecx,DWORD PTR ds:0x1482dda3,0xe04037bb
  4267be:	jbe    0x4267ed
  4267c0:	jge    0x4267d5
  4267c2:	dec    esp
  4267c3:	sti    
  4267c4:	sub    al,0x55
  4267c6:	cmc    
  4267c7:	push   ebx
  4267c8:	not    BYTE PTR [edx-0x7867bb76]
  4267ce:	pop    es
  4267cf:	inc    esp
  4267d0:	pop    ds
  4267d1:	mov    WORD PTR [esi-0x5275457f],ds
  4267d7:	pop    eax
  4267d8:	dec    edi
  4267d9:	mov    eax,ds:0x2a49e93c
  4267de:	fisubr WORD PTR [ecx-0x775a740e]
  4267e4:	lods   al,BYTE PTR ds:[esi]
  4267e5:	mov    eax,0x107ead50
  4267ea:	loope  0x426820
  4267ec:	mov    ebp,0xe6a75808
  4267f1:	mov    cl,0x43
  4267f3:	push   esi
  4267f4:	out    0x29,al
  4267f6:	loop   0x426793
  4267f8:	adc    eax,0xf0c52205
  4267fd:	psrlw  mm6,QWORD PTR [ebp-0x7eb89137]
  426804:	loopne 0x4267df
  426806:	add    al,0xf8
  426808:	mov    dl,0x2a
  42680a:	(bad)  
  42680b:	mov    ebp,0xe9bf07e0
  426810:	mov    ah,0x78
  426812:	inc    ebx
  426813:	retf   
  426814:	(bad)  
  426815:	outs   dx,BYTE PTR ds:[esi]
  426816:	mov    ds:0xd52acb0b,al
  42681b:	and    bl,BYTE PTR [edi+0x609c6f09]
  426821:	xor    ch,BYTE PTR [eax]
  426823:	xor    eax,0x340c988e
  426828:	and    BYTE PTR [ebp-0xc],dh
  42682b:	scas   eax,DWORD PTR es:[edi]
  42682c:	dec    esi
  42682d:	retf   
  42682e:	test   eax,0xb271e3fb
  426833:	rcl    BYTE PTR [eax],cl
  426835:	mov    ds:0x841aa11d,eax
  42683a:	mov    cl,0xe0
  42683c:	sub    ah,ch
  42683e:	cmp    al,BYTE PTR [ebx+eax*4-0x149f7e56]
  426845:	jge    0x426866
  426847:	mov    esp,0x7508f187
  42684c:	jne    0x4267d9
  42684e:	jg     0x4268b4
  426850:	fisttp DWORD PTR [ebp+eiz*2+0x6a]
  426854:	lock and eax,0xee0ca086
  42685a:	jg     0x426847
  42685c:	pop    ebp
  42685d:	jmp    0x42681d
  42685f:	push   ecx
  426860:	or     esp,0x8a08d7d5
  426866:	pop    ecx
  426867:	pop    eax
  426868:	or     BYTE PTR [ecx],bh
  42686a:	ds aam 0x39
  42686d:	mov    esp,0xea8e49e0
  426872:	add    BYTE PTR [ebx+0x4d],bh
  426875:	add    al,0xf8
  426877:	in     eax,0xcf
  426879:	fimul  WORD PTR [ecx]
  42687b:	repz das 
  42687d:	int    0x1b
  42687f:	dec    esp
  426880:	adc    ebx,ebp
  426882:	cmp    al,0xe9
  426884:	pop    edx
  426885:	fs jge 0x426875
  426888:	mov    bl,BYTE PTR [edi+0x10]
  42688b:	fimul  DWORD PTR ds:[edx-0x74]
  426890:	xlat   BYTE PTR ds:[ebx]
  426891:	cwde   
  426892:	call   0x4065:0xe78417e3
  426899:	rol    DWORD PTR [eax-0x278a4ef2],0x2
  4268a0:	sub    BYTE PTR [esi-0xe2e9ce2],0x14
  4268a7:	cld    
  4268a8:	pop    ss
  4268a9:	stos   BYTE PTR es:[edi],al
  4268aa:	mov    ch,0x8
  4268ac:	test   DWORD PTR [edx-0x7393b75d],ebx
  4268b2:	cmp    edi,ecx
  4268b4:	ror    dl,0x2b
  4268b7:	sub    DWORD PTR [esi-0x2c],esi
  4268ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268bb:	xor    esp,esp
  4268bd:	jnp    0x4268b1
  4268bf:	repz clc 
  4268c1:	(bad)  
  4268c2:	cmp    cl,ch
  4268c4:	out    dx,al
  4268c5:	(bad)  
  4268c7:	jle    0x4268a9
  4268c9:	jmp    0xb4db4eec
  4268ce:	rol    BYTE PTR [edx],0x68
  4268d1:	lds    edx,FWORD PTR [edi-0x68]
  4268d4:	inc    edi
  4268d5:	fs xchg ebx,eax
  4268d7:	mov    esi,0x825cbe3b
  4268dc:	or     bh,BYTE PTR [ebx+ebp*2]
  4268df:	add    ebp,DWORD PTR [ecx+0x6362de4f]
  4268e5:	aas    
  4268e6:	mov    ebp,DWORD PTR [ecx-0x648b7877]
  4268ec:	enter  0xb929,0xed
  4268f0:	das    
  4268f1:	ret    
  4268f2:	dec    esi
  4268f3:	adc    DWORD PTR [ecx],edi
  4268f5:	or     eax,0xfa026cd8
  4268fa:	out    dx,eax
  4268fb:	dec    esi
  4268fc:	cld    
  4268fd:	out    dx,eax
  4268fe:	mov    esi,0xf77ac0ff
  426904:	mov    bh,0x7
  426906:	xchg   ecx,eax
  426907:	cmp    eax,0xd34a1027
  42690c:	xor    cl,dl
  42690e:	aas    
  42690f:	lea    eax,[eax]
  426911:	adc    BYTE PTR [edx-0x4f],bl
  426914:	jo     0x426932
  426916:	out    0xe4,al
  426918:	test   BYTE PTR [ecx+eax*2],dl
  42691b:	adc    BYTE PTR [eax-0x1b60ee5f],0x85
  426922:	push   ss
  426923:	jne    0x4268c2
  426925:	les    edi,FWORD PTR [ecx+0x1d9365a1]
  42692b:	pop    ss
  42692c:	and    eax,0x4bd1e970
  426931:	int    0xcb
  426933:	bound  edi,QWORD PTR [eax+0x26]
  426936:	pop    ebx
  426937:	inc    BYTE PTR [ebx+0x1f49ce54]
  42693d:	std    
  42693e:	mov    esp,0x99aa0282
  426943:	ins    DWORD PTR es:[edi],dx
  426944:	imul   esi,edx,0x70e4e7cb
  42694a:	mov    eax,0x2f533cd6
  42694f:	cmp    ch,BYTE PTR [edx+0x13]
  426952:	cmp    al,0x88
  426954:	pop    ss
  426955:	jmp    0x17d3:0x3c2a7ffb
  42695c:	clc    
  42695d:	pop    esp
  42695e:	pop    ecx
  42695f:	sub    al,BYTE PTR [edx+0x5c1454c7]
  426965:	push   ebx
  426966:	sahf   
  426967:	dec    ebp
  426968:	cwde   
  426969:	mov    esi,0x842c001f
  42696e:	sbb    ebp,esp
  426970:	push   eax
  426971:	adc    BYTE PTR [ecx],dh
  426973:	adc    DWORD PTR [eax],0x9c5bd319
  426979:	jmp    0x42699b
  42697b:	out    dx,eax
  42697c:	inc    ebp
  42697d:	dec    esi
  42697e:	pop    esp
  42697f:	icebp  
  426980:	(bad)
  426983:	mov    ebx,0xd48f10ca
  426988:	cmp    BYTE PTR [edi],0x2a
  42698b:	xchg   ebx,eax
  42698c:	pop    ebx
  42698d:	inc    esp
  42698e:	test   DWORD PTR [eax+0x5f0dd163],eax
  426994:	adc    BYTE PTR [eax+eax*1-0x3ca5803b],ch
  42699b:	int    0x9e
  42699d:	mov    ecx,0x37326c3c
  4269a2:	mov    al,ds:0x42e5d459
  4269a7:	dec    ebx
  4269a8:	call   0x78f44f19
  4269ad:	xchg   eax,esp
  4269af:	mov    al,ds:0x8d718822
  4269b4:	lods   eax,DWORD PTR ds:[esi]
  4269b5:	mov    dl,0x34
  4269b7:	jecxz  0x426a05
  4269b9:	call   0xe06f:0x21468d9f
  4269c0:	jp     0x426994
  4269c2:	fs jae 0x426a0b
  4269c5:	pop    ss
  4269c6:	adc    al,0x27
  4269c8:	adc    DWORD PTR [esi-0x42],esp
  4269cb:	lods   al,BYTE PTR ds:[esi]
  4269cc:	sub    al,0x24
  4269ce:	xchg   esi,eax
  4269cf:	inc    ebx
  4269d0:	push   ebx
  4269d1:	sbb    ah,ch
  4269d3:	mov    ds:0x9240b1e,eax
  4269d8:	retf   
  4269d9:	dec    edx
  4269da:	push   esi
  4269db:	imul   edi,DWORD PTR [eax+ecx*8+0x51dc5cf3],0x1e
  4269e3:	idiv   BYTE PTR [esi+0x31]
  4269e6:	push   edx
  4269e7:	das    
  4269e8:	and    BYTE PTR [eax],al
  4269ea:	in     eax,0x2e
  4269ec:	sbb    ecx,DWORD PTR ds:0xa23659d3
  4269f2:	and    ebp,DWORD PTR [esi+0x10]
  4269f5:	jl     0x426a6a
  4269f7:	xchg   edi,eax
  4269f8:	push   ds
  4269f9:	test   al,0x32
  4269fb:	mov    WORD PTR [edi-0x98ed213],?
  426a01:	mov    esi,DWORD PTR [edx-0x4c]
  426a04:	mov    ds:0x1770ff86,eax
  426a09:	imul   esp
  426a0b:	js     0x426a0b
  426a0d:	popf   
  426a0e:	lds    eax,FWORD PTR [ecx+0x162dcccc]
  426a14:	stos   BYTE PTR es:[edi],al
  426a15:	loopne 0x426a8b
  426a17:	jle    0x426a68
  426a19:	jle    0x426a1d
  426a1b:	jle    0x426a48
  426a1d:	add    BYTE PTR [eax+0x5e6170b3],bl
  426a23:	repz dec eax
  426a25:	lods   al,BYTE PTR ds:[esi]
  426a26:	aas    
  426a27:	sub    esp,DWORD PTR [ebp+0x70e1399]
  426a2d:	push   ds
  426a2e:	mov    dl,0xa1
  426a30:	jne    0x426aae
  426a32:	mov    ch,0x28
  426a34:	xlat   BYTE PTR ds:[ebx]
  426a35:	mul    BYTE PTR [ecx-0x2]
  426a38:	sti    
  426a39:	jle    0x426a6f
  426a3b:	stc    
  426a3c:	mov    WORD PTR [esi+0x0],?
  426a3f:	mov    eax,0xa4a70138
  426a44:	dec    ebp
  426a45:	or     DWORD PTR [edx],edi
  426a47:	mov    al,0xba
  426a49:	xor    al,0x99
  426a4b:	(bad)  
  426a4c:	jmp    0xcfbd:0x16dab0b1
  426a53:	(bad)  
  426a54:	xor    al,0x26
  426a56:	mov    edx,0x72912fff
  426a5b:	nop
  426a5c:	ins    DWORD PTR es:[edi],dx
  426a5d:	mov    BYTE PTR [edx+0x3ecc6145],cl
  426a63:	test   al,0xb4
  426a65:	mov    ds:0x4dda0e03,al
  426a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a6b:	pop    eax
  426a6c:	lods   eax,DWORD PTR ds:[esi]
  426a6d:	jno    0x426a15
  426a6f:	lock imul esi,DWORD PTR [edi-0x71a0d9cb],0xffffff98
  426a77:	jecxz  0x426a83
  426a79:	jmp    0x868d72e
  426a7e:	cs jne 0x426a3b
  426a81:	mov    dh,BYTE PTR [esi-0x645fc99a]
  426a87:	add    bh,ah
  426a89:	and    DWORD PTR [edi+0x5c9f15e6],esi
  426a8f:	bound  edi,QWORD PTR [ebx]
  426a91:	inc    ebp
  426a92:	cmp    DWORD PTR [edx-0x5723590d],eax
  426a98:	xchg   ebp,eax
  426a99:	cmp    BYTE PTR [edx],dl
  426a9b:	inc    ebx
  426a9c:	fdivrp st(6),st
  426a9e:	fsub   QWORD PTR [ebx+eax*8+0x4ed2a561]
  426aa5:	xor    eax,0xbd5ebed0
  426aaa:	ins    BYTE PTR es:[edi],dx
  426aab:	sbb    BYTE PTR [eax],dl
  426aad:	repnz gs out dx,al
  426ab0:	cmp    bl,BYTE PTR [ebp+ebp*8+0x5ffa637d]
  426ab7:	adc    eax,0x1cc9b9c7
  426abc:	jnp    0x426a7c
  426abe:	dec    ecx
  426abf:	xchg   esi,edi
  426ac1:	dec    ebp
  426ac2:	adc    DWORD PTR [ebx+0x2e3ebfc1],ecx
  426ac8:	mov    ds:0xa767a47a,eax
  426acd:	in     eax,0xf
  426acf:	or     al,0xa3
  426ad1:	loopne 0x426aa7
  426ad3:	dec    edi
  426ad4:	jb     0x426a7f
  426ad6:	icebp  
  426ad7:	jns    0x426acb
  426ad9:	add    al,BYTE PTR ds:0xcc159717
  426adf:	mov    WORD PTR [ebp-0xe38dc8],?
  426ae5:	jg     0x426b42
  426ae7:	inc    esp
  426ae8:	push   eax
  426ae9:	jmp    0x426b0f
  426aeb:	add    esp,DWORD PTR [ecx]
  426aed:	mov    ebx,0x85862660
  426af2:	pop    esp
  426af3:	daa    
  426af4:	add    esi,DWORD PTR [edx+0x50459f47]
  426afa:	lods   eax,DWORD PTR ds:[esi]
  426afb:	mov    dl,0x5f
  426afd:	(bad)  
  426afe:	cdq    
  426aff:	nop
  426b00:	in     al,dx
  426b01:	imul   ecx,DWORD PTR [edi],0xf40936e6
  426b07:	icebp  
  426b08:	scas   al,BYTE PTR es:[edi]
  426b09:	pop    ds
  426b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b0b:	sub    eax,0xda51751a
  426b10:	jmp    0x426b5a
  426b12:	fst    DWORD PTR [eax+0xfc5b80a]
  426b18:	mov    WORD PTR [edi-0x78],?
  426b1b:	xor    eax,0x3bef096f
  426b20:	dec    edx
  426b21:	mov    ecx,0xda2666dc
  426b26:	xchg   ebx,eax
  426b27:	sub    eax,0x3d525de9
  426b2c:	xchg   BYTE PTR [edx+eiz*1-0xc],dh
  426b30:	push   edx
  426b31:	or     al,bl
  426b33:	inc    esi
  426b34:	cld    
  426b35:	cmp    ebp,0xffffffda
  426b38:	dec    edx
  426b39:	lahf   
  426b3a:	mov    dl,0xc3
  426b3c:	inc    esp
  426b3d:	cmp    edi,DWORD PTR [eax-0x6b]
  426b40:	fstp   DWORD PTR [eax]
  426b42:	mov    ecx,edi
  426b44:	push   ebx
  426b45:	cld    
  426b46:	call   0xbb6f:0x9b4740be
  426b4d:	cmp    eax,0xb2a90640
  426b52:	pop    ss
  426b53:	retf   
  426b54:	mov    al,ds:0x77e3b484
  426b59:	xchg   ebp,eax
  426b5a:	push   ebx
  426b5b:	jne    0x426baf
  426b5d:	mov    ebp,0xa3f12596
  426b62:	cmp    BYTE PTR [edx-0x7c],dl
  426b65:	fisubr WORD PTR [ebx+0x131f3545]
  426b6b:	inc    esp
  426b6c:	inc    esi
  426b6d:	retf   
  426b6e:	or     bh,BYTE PTR [edx+0x244e514a]
  426b74:	outs   dx,BYTE PTR ds:[esi]
  426b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b76:	cli    
  426b77:	in     eax,0x4f
  426b79:	es push ss
  426b7b:	loope  0x426b02
  426b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b7e:	fldcw  WORD PTR [esi]
  426b80:	cdq    
  426b81:	jmp    0x4453:0xc1009cd7
  426b88:	sbb    bh,BYTE PTR [edi-0x65]
  426b8b:	ja     0x426b22
  426b8d:	into   
  426b8e:	mov    ebx,0xf0bed6ef
  426b93:	out    dx,eax
  426b94:	push   ebx
  426b95:	in     al,0xc2
  426b97:	ds mov dh,0xbb
  426b9a:	adc    BYTE PTR [edx+0x6f11ab4],dh
  426ba0:	push   esp
  426ba1:	push   0x15
  426ba3:	in     eax,dx
  426ba4:	and    DWORD PTR [esi-0x2],esi
  426ba7:	in     al,0x53
  426ba9:	mov    ds:0xe72bbf51,eax
  426bae:	mov    esp,0xd2c04ada
  426bb3:	rol    BYTE PTR [edi],1
  426bb5:	mov    ah,0x4c
  426bb7:	adc    DWORD PTR [edx],esi
  426bb9:	inc    esp
  426bba:	imul   bl
  426bbc:	jle    0x426c2f
  426bbe:	ror    edx,cl
  426bc0:	das    
  426bc1:	inc    esi
  426bc2:	addr16 test al,0xb7
  426bc5:	add    eax,0x6298552c
  426bca:	jb     0x426c37
  426bcc:	aam    0x92
  426bce:	sar    BYTE PTR [ecx+ebx*8],1
  426bd1:	mov    ds:0xd6f1592f,al
  426bd6:	sub    edi,DWORD PTR [edi]
  426bd8:	inc    esp
  426bd9:	adc    esp,DWORD PTR [edx+edi*4+0x7]
  426bdd:	nop
  426bde:	fwait
  426bdf:	and    BYTE PTR [ecx+0x2],cl
  426be2:	mov    esi,esi
  426be4:	adc    edi,DWORD PTR [ebp+0x37]
  426be7:	mov    gs,WORD PTR [eax-0x2a]
  426bea:	push   0x686b01ee
  426bef:	mov    dl,cl
  426bf1:	jmp    0x16ae4910
  426bf6:	inc    ebp
  426bf7:	scas   al,BYTE PTR es:[edi]
  426bf8:	mov    ebp,0x6c0584fb
  426bfd:	cdq    
  426bfe:	pop    esp
  426bff:	cdq    
  426c00:	inc    BYTE PTR [ecx]
  426c02:	pop    edx
  426c03:	xchg   esi,eax
  426c04:	frstor [ecx-0xb]
  426c07:	or     edi,eax
  426c09:	xchg   edx,eax
  426c0a:	or     BYTE PTR [esi+0x36cbec05],dl
  426c10:	cmp    ah,BYTE PTR [ebp+0x5f]
  426c13:	inc    eax
  426c14:	and    eax,0xbc417564
  426c19:	add    eax,0x81e37098
  426c1e:	pop    ebx
  426c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c20:	dec    edx
  426c21:	jge    0x426bd6
  426c23:	shr    esi,0x8b
  426c26:	adc    DWORD PTR [edx-0x230b326],edi
  426c2c:	mov    dh,0x8d
  426c2e:	pop    ecx
  426c2f:	add    cl,BYTE PTR [edi+0x4]
  426c32:	test   DWORD PTR [edi+0x14],esi
  426c35:	and    DWORD PTR [ecx-0x22],0x10
  426c39:	mov    bl,BYTE PTR [edx-0x3]
  426c3c:	push   ecx
  426c3d:	or     eax,0x462e7972
  426c42:	add    dl,BYTE PTR [ebx]
  426c44:	cmp    DWORD PTR [esi+ebp*4+0x3e28e4b4],edi
  426c4b:	pop    ds
  426c4c:	fs daa 
  426c4e:	adc    ebp,DWORD PTR [eax-0x11]
  426c51:	adc    al,bl
  426c53:	jno    0x426cce
  426c55:	test   al,0x1e
  426c57:	mov    dh,0x69
  426c59:	fcomp  QWORD PTR [esi]
  426c5b:	sbb    bh,al
  426c5d:	pop    edi
  426c5e:	inc    ebx
  426c5f:	pmullw mm7,QWORD PTR [bx+si+0x353a]
  426c65:	dec    ecx
  426c66:	jmp    0x3e9b4dbe
  426c6b:	mov    al,0x3c
  426c6d:	mov    ecx,0xbe01ec15
  426c72:	sbb    eax,0x949c36a4
  426c77:	and    dh,BYTE PTR [edx-0x7135cd18]
  426c7d:	push   cs
  426c7e:	test   BYTE PTR [ebx],ah
  426c80:	mov    edx,0xda3f5461
  426c85:	push   edi
  426c86:	pop    eax
  426c87:	retf   
  426c88:	push   esi
  426c89:	repz les esi,FWORD PTR [edx+0x75]
  426c8d:	adc    DWORD PTR [esi+0x72],0x22a30d9d
  426c94:	aad    0xa9
  426c96:	jo     0x426cdc
  426c98:	mov    esp,0xd940c98
  426c9d:	mov    bl,0x7e
  426c9f:	shl    BYTE PTR [ecx],0x54
  426ca2:	out    0xd7,al
  426ca4:	imul   edi,DWORD PTR [esi],0x3a6368fe
  426caa:	icebp  
  426cab:	mov    edi,0x7600dcff
  426cb0:	cmp    eax,DWORD PTR [ebp-0xe]
  426cb3:	mov    ecx,0xe1ae0375
  426cb8:	clc    
  426cb9:	daa    
  426cba:	rcl    DWORD PTR [ebx-0x690659fd],0xd
  426cc1:	hlt    
  426cc2:	into   
  426cc3:	dec    esp
  426cc4:	loope  0x426c91
  426cc6:	or     DWORD PTR [ebp+0x5dc0142d],ebx
  426ccc:	push   ds
  426ccd:	cmc    
  426cce:	and    al,0xce
  426cd0:	jb     0x426c65
  426cd2:	jle    0x426cfb
  426cd4:	and    eax,0xe20ae42
  426cd9:	stos   BYTE PTR es:[edi],al
  426cda:	add    DWORD PTR [edx-0x6],0xffffff9c
  426cde:	adc    DWORD PTR [ebx+0x54],0x32a61403
  426ce5:	sub    ah,BYTE PTR [edi+0x3d]
  426ce8:	out    0xcd,eax
  426cea:	int    0xf1
  426cec:	jecxz  0x426d4f
  426cee:	out    dx,eax
  426cef:	pusha  
  426cf0:	in     al,dx
  426cf1:	or     al,0x81
  426cf3:	fisttp QWORD PTR [ebx+0xf69e0f5]
  426cf9:	arpl   di,ax
  426cfb:	jmp    0x426d5f
  426cfd:	push   edx
  426cfe:	repz sub BYTE PTR [eax],bh
  426d01:	adc    BYTE PTR [edx+0x56bce156],al
  426d07:	mov    ecx,ecx
  426d09:	and    DWORD PTR [ecx+0x6],ecx
  426d0c:	aad    0xb8
  426d0e:	mov    eax,ds:0xfca43058
  426d13:	mov    dh,0x8d
  426d15:	addr16 into 
  426d17:	leave  
  426d18:	addr16 js 0x426caf
  426d1b:	adc    BYTE PTR [eax-0x64],ah
  426d1e:	and    al,0x29
  426d20:	cmp    BYTE PTR [ebp+0xe],0x5
  426d24:	cwde   
  426d25:	ins    DWORD PTR es:[edi],dx
  426d26:	scas   al,BYTE PTR es:[edi]
  426d27:	test   BYTE PTR [ecx-0x37],0xa3
  426d2b:	xchg   esi,eax
  426d2c:	cmc    
  426d2d:	mov    ds:0x86e776c3,eax
  426d32:	cwde   
  426d33:	push   esp
  426d34:	daa    
  426d35:	push   edx
  426d36:	loope  0x426d75
  426d38:	mov    al,0x8c
  426d3a:	out    dx,eax
  426d3b:	inc    edx
  426d3c:	mov    esi,0xb96986ec
  426d41:	cmp    al,0x5f
  426d43:	mov    edi,0x22ec33ec
  426d48:	and    ebx,ebx
  426d4a:	xor    al,0x7d
  426d4c:	push   esi
  426d4d:	ret    
  426d4e:	mov    dh,0xea
  426d50:	repz or al,0x97
  426d53:	mov    al,ds:0xef17db7b
  426d58:	mov    bh,0xe0
  426d5a:	or     DWORD PTR [eax-0x5742ae4e],0xffffff9e
  426d61:	xchg   ebx,eax
  426d62:	out    0xae,al
  426d64:	scas   eax,DWORD PTR es:[edi]
  426d65:	inc    ebx
  426d66:	ss dec esi
  426d68:	sbb    eax,0xd33ee8c4
  426d6d:	or     eax,0xb2392097
  426d72:	addr16 dec ebp
  426d74:	xor    BYTE PTR [edx],bh
  426d76:	pushf  
  426d77:	fidiv  DWORD PTR [ebx]
  426d79:	push   0x2fb18cea
  426d7e:	pop    ecx
  426d7f:	mov    edi,0x85af7669
  426d84:	push   edx
  426d85:	sar    DWORD PTR [ecx+0x1e],cl
  426d88:	push   0xf
  426d8a:	shl    DWORD PTR [edx+ebp*4-0x51],cl
  426d8e:	cmp    eax,0x1c0bb9bf
  426d93:	nop
  426d94:	or     al,0x3a
  426d96:	pushf  
  426d97:	mov    ah,0x2a
  426d99:	inc    edi
  426d9a:	push   edx
  426d9b:	cmc    
  426d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d9d:	inc    edx
  426d9e:	inc    esp
  426d9f:	in     al,dx
  426da0:	fs and dh,dh
  426da3:	cmp    BYTE PTR [esi+0x39c03b52],al
  426da9:	sub    al,0xe5
  426dab:	(bad)  
  426dac:	sahf   
  426dad:	loopne 0x426de5
  426daf:	sbb    ch,dl
  426db1:	rol    DWORD PTR [edi-0x45214b1c],1
  426db7:	xchg   edx,eax
  426db8:	lahf   
  426db9:	adc    BYTE PTR [ebp-0xdee2455],cl
  426dbf:	push   esp
  426dc0:	idiv   BYTE PTR [eax+edx*8]
  426dc3:	stos   BYTE PTR es:[edi],al
  426dc4:	outs   dx,BYTE PTR ds:[esi]
  426dc5:	xor    eax,0x6d40e00e
  426dca:	mov    ch,0xe8
  426dcc:	dec    ebp
  426dcd:	mov    ds:0x5c6a0c00,eax
  426dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dd3:	int3   
  426dd4:	lods   al,BYTE PTR ds:[esi]
  426dd5:	es pop esi
  426dd7:	sbb    ebp,DWORD PTR [edi-0x621b2683]
  426ddd:	mov    cs,WORD PTR [eax-0x2b]
  426de0:	inc    ebp
  426de1:	ja     0x426e21
  426de3:	dec    esi
  426de4:	(bad)  
  426de6:	hlt    
  426de7:	sbb    BYTE PTR [ebx-0x1],ch
  426dea:	add    al,dl
  426dec:	sar    BYTE PTR [edi+0x6bcd1340],1
  426df2:	xor    dl,al
  426df4:	sbb    eax,0x1d2d99cc
  426df9:	jle    0x426e3c
  426dfb:	cdq    
  426dfc:	jp     0x426df3
  426dfe:	xchg   esi,eax
  426dff:	jge    0x426dcb
  426e01:	lods   al,BYTE PTR ds:[esi]
  426e02:	push   ss
  426e03:	mov    esp,0xc56c9073
  426e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e09:	rcr    BYTE PTR [ebp+0x19],1
  426e0c:	aad    0xfa
  426e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e0f:	out    0x46,eax
  426e11:	lahf   
  426e12:	xchg   edi,eax
  426e13:	mov    bl,0x96
  426e15:	pop    esi
  426e16:	cmp    esp,esp
  426e18:	adc    cl,0xbe
  426e1b:	xor    ch,bl
  426e1d:	or     eax,0xc7c186dc
  426e22:	mov    DWORD PTR [ebp-0x1],esi
  426e25:	lods   eax,DWORD PTR ds:[esi]
  426e26:	dec    edi
  426e27:	jno    0x426e50
  426e29:	add    DWORD PTR [esi-0x44],0xffffffe5
  426e2d:	or     BYTE PTR [ebx+0x6c],bl
  426e30:	push   ss
  426e31:	dec    eax
  426e32:	adc    BYTE PTR [ebx-0x7cf68565],ch
  426e38:	ins    BYTE PTR es:[edi],dx
  426e39:	jge    0x426e17
  426e3b:	cwde   
  426e3c:	jo     0x426e9f
  426e3e:	enter  0xdb19,0xfc
  426e42:	iret   
  426e43:	inc    eax
  426e45:	cmc    
  426e46:	mov    al,0x13
  426e48:	pop    esi
  426e49:	leave  
  426e4a:	stos   DWORD PTR es:[edi],eax
  426e4b:	jl     0x426ddb
  426e4d:	inc    ebx
  426e4e:	not    DWORD PTR [esi+ebx*8-0x24087cf0]
  426e55:	cwde   
  426e56:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  426e58:	jae    0x426df6
  426e5a:	xor    eax,DWORD PTR [ecx+0x69]
  426e5d:	mov    al,0x48
  426e5f:	inc    edi
  426e60:	in     al,0x6f
  426e62:	shl    DWORD PTR [eax+0x47f2ffe8],0x30
  426e69:	stc    
  426e6a:	leave  
  426e6b:	not    dl
  426e6d:	pop    ds
  426e6e:	stc    
  426e6f:	je     0x426e63
  426e71:	out    0xb0,eax
  426e73:	icebp  
  426e74:	out    0xab,eax
  426e76:	mov    esp,0xd9c261bb
  426e7b:	out    0x45,eax
  426e7d:	push   ss
  426e7e:	(bad)  
  426e7f:	adc    edi,DWORD PTR [ecx+0x74ed9bf3]
  426e85:	push   0x74a241fd
  426e8a:	xor    eax,ecx
  426e8c:	inc    esp
  426e8d:	push   cs
  426e8e:	jg     0x426ec8
  426e90:	push   ds
  426e91:	mov    esp,0x27025c82
  426e96:	push   ecx
  426e97:	in     eax,0x25
  426e99:	gs inc edi
  426e9b:	retf   
  426e9c:	fsub   DWORD PTR [esi-0x46]
  426e9f:	mov    ebp,0xc7972406
  426ea4:	ja     0x426e5b
  426ea6:	in     eax,0xb
  426ea8:	or     al,0xde
  426eaa:	pop    ebp
  426eab:	jne    0x426f04
  426ead:	mov    bl,0x8d
  426eaf:	mov    al,ds:0x83ecf695
  426eb4:	shl    BYTE PTR [ebx+ecx*8+0x72],1
  426eb8:	push   ebp
  426eb9:	jmp    0xeb47:0xad65afb7
  426ec0:	div    eax
  426ec2:	add    DWORD PTR [eax+0x1badd968],eax
  426ec8:	outs   dx,DWORD PTR ds:[esi]
  426ec9:	enter  0x71fd,0xa0
  426ecd:	push   0xdf7cda92
  426ed2:	lahf   
  426ed3:	pop    esi
  426ed4:	ins    BYTE PTR es:[edi],dx
  426ed5:	sub    BYTE PTR [esi+ecx*4],bl
  426ed8:	sub    al,0x86
  426eda:	sub    al,0xd5
  426edc:	pop    ss
  426edd:	dec    ebx
  426ede:	or     esp,DWORD PTR [ebp+0x66]
  426ee1:	push   eax
  426ee2:	cmp    al,0x76
  426ee4:	adc    edx,eax
  426ee6:	stos   BYTE PTR es:[edi],al
  426ee7:	inc    BYTE PTR [esp+ebp*8+0x73e66c4d]
  426eee:	icebp  
  426eef:	sbb    BYTE PTR [ecx],dh
  426ef1:	add    esi,DWORD PTR [edx]
  426ef3:	sub    DWORD PTR [esi],edi
  426ef5:	aas    
  426ef6:	(bad)  
  426ef7:	xor    al,0xd2
  426ef9:	push   ds
  426efa:	imul   ebp,DWORD PTR [ebx+0x5],0x91e1d1dc
  426f01:	inc    esi
  426f02:	repz adc BYTE PTR [ecx-0x34],cl
  426f06:	xor    eax,0x258a873c
  426f0b:	jecxz  0x426eea
  426f0d:	pop    ss
  426f0e:	stos   BYTE PTR es:[edi],al
  426f0f:	fisub  WORD PTR [ebp-0x4e]
  426f12:	ds jne 0x426efe
  426f15:	sub    al,0x21
  426f17:	cmp    al,0x22
  426f19:	loop   0x426eb2
  426f1b:	int    0x86
  426f1d:	mov    esi,0x2651065f
  426f22:	cli    
  426f23:	push   0x644b2dd3
  426f28:	sub    DWORD PTR [eax-0x29b381b9],edi
  426f2e:	push   ecx
  426f2f:	jecxz  0x426ede
  426f31:	inc    edi
  426f32:	inc    edx
  426f33:	and    esi,eax
  426f35:	fcmovne st,st(0)
  426f37:	ret    0xe8dc
  426f3a:	xor    al,0x29
  426f3c:	aam    0x95
  426f3e:	jnp    0x426f0e
  426f40:	cmp    DWORD PTR [edi],esp
  426f42:	fcomp  QWORD PTR [esi-0x1d45a0d4]
  426f48:	retf   0xdfbb
  426f4b:	loope  0x426f2b
  426f4d:	add    DWORD PTR [ecx-0xf247436],esp
  426f53:	sub    cl,BYTE PTR ds:0xdd10db8c
  426f59:	test   eax,0x119f74
  426f5e:	jg     0x426f5b
  426f60:	xor    edx,DWORD PTR [ecx]
  426f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f63:	push   ds
  426f64:	ficom  DWORD PTR [edi+0x72b7fd30]
  426f6a:	push   ebx
  426f6b:	pusha  
  426f6c:	int    0x44
  426f6e:	and    al,0xab
  426f70:	pop    ecx
  426f71:	in     eax,0x1f
  426f73:	daa    
  426f74:	cmp    eax,0x9e91fee0
  426f79:	retf   
  426f7a:	mov    WORD PTR es:[ebx-0x6033a36c],ds
  426f81:	xchg   ebp,eax
  426f82:	ja     0x426f81
  426f84:	inc    ebx
  426f85:	xchg   edx,eax
  426f86:	mov    bl,cl
  426f88:	or     edx,esp
  426f8a:	(bad)  
  426f8b:	imul   edi,DWORD PTR [ebx],0xffffffb6
  426f8e:	add    ebp,ecx
  426f90:	sub    DWORD PTR [edi-0x1a],ebx
  426f93:	push   ss
  426f94:	pop    esi
  426f95:	pop    esi
  426f96:	test   DWORD PTR [edi+0x1ed81b81],edi
  426f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f9d:	push   0x6b9bfd0c
  426fa2:	or     al,0xb7
  426fa4:	cmp    BYTE PTR [ecx+eiz*8-0x6e],cl
  426fa8:	pushf  
  426fa9:	mov    esp,0x3b055853
  426fae:	cdq    
  426faf:	dec    esp
  426fb0:	aaa    
  426fb1:	js     0x427000
  426fb3:	or     dh,BYTE PTR [esi+ebx*2+0x3d]
  426fb7:	add    bl,BYTE PTR [edx-0x3e3fef39]
  426fbd:	xchg   ebp,eax
  426fbe:	push   es
  426fbf:	sar    DWORD PTR [esi+0x43],0x9c
  426fc3:	mov    ebx,0x6071eb08
  426fc8:	sub    BYTE PTR [ecx*1+0x57b4dc4a],dl
  426fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fd0:	pop    edx
  426fd1:	ja     0x426fa1
  426fd3:	ficom  WORD PTR [eax]
  426fd5:	repz adc DWORD PTR [ecx+0x649ac46a],esp
  426fdc:	cli    
  426fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fde:	je     0x426fe8
  426fe0:	test   al,0x15
  426fe2:	cmc    
  426fe3:	fwait
  426fe4:	cdq    
  426fe5:	in     al,dx
  426fe6:	cmp    cl,BYTE PTR [esi+ebx*2+0x15]
  426fea:	sub    eax,0x8ed50de5
  426fef:	adc    WORD PTR [ecx+0x6089e825],ax
  426ff6:	shl    dl,cl
  426ff8:	cwd    
  426ffa:	or     al,0x65
  426ffc:	xchg   esi,eax
  426ffd:	pop    ebx
  426ffe:	aaa    
  426fff:	jg     0x426ff1
  427001:	daa    
  427002:	cdq    
  427003:	mov    dh,0x49
  427005:	sbb    BYTE PTR [esi+0x7087a274],0x9a
  42700c:	push   0xea325e7b
  427011:	pop    ecx
  427012:	fadd   QWORD PTR [ecx+ebx*1+0x364f9f80]
  427019:	dec    ecx
  42701a:	rol    DWORD PTR [edi-0x1d],cl
  42701d:	xor    ch,BYTE PTR [ecx+edx*1-0x75]
  427021:	cmp    eax,0x8e9eea30
  427026:	xlat   BYTE PTR ds:[ebx]
  427027:	lds    edi,FWORD PTR [ebx-0x59]
  42702a:	mov    esp,ds
  42702c:	bound  edi,QWORD PTR [edx+0x14]
  42702f:	loope  0x427019
  427031:	cmc    
  427032:	jne    0x427030
  427034:	jmp    0x427093
  427036:	and    BYTE PTR [edx+0x2ee4bb1f],bl
  42703c:	mov    al,dh
  42703e:	icebp  
  42703f:	pmaxsw mm2,QWORD PTR [edx+0x5e]
  427043:	icebp  
  427044:	dec    edi
  427045:	mov    ebp,0xa8f56240
  42704a:	add    al,0x1e
  42704c:	aad    0x3
  42704e:	je     0x427076
  427050:	fidiv  WORD PTR ds:0x87d2567b
  427056:	retf   0xad16
  427059:	and    DWORD PTR [ecx],edi
  42705b:	adc    ah,BYTE PTR [ebp+0x53be8c1d]
  427061:	jb     0x427083
  427063:	mov    al,ds:0x39dbd15f
  427068:	push   ebx
  427069:	pop    ss
  42706a:	xor    BYTE PTR [eax+0x41],ah
  42706d:	xchg   edx,ecx
  42706f:	sbb    bh,BYTE PTR [edx]
  427071:	bound  ecx,QWORD PTR [esi+0x6a]
  427074:	dec    eax
  427075:	es retf 0x60ec
  427079:	and    BYTE PTR [esp+edi*4+0xe000de6],ah
  427080:	fmul   DWORD PTR [edi+0x6493a19]
  427086:	fisttp WORD PTR [ebx]
  427088:	push   eax
  427089:	cmc    
  42708a:	scas   eax,DWORD PTR es:[edi]
  42708b:	aad    0xa5
  42708d:	or     bl,dl
  42708f:	ja     0x427102
  427091:	das    
  427092:	(bad)  
  427094:	adc    al,0x62
  427096:	data16 (bad) 
  427098:	ds jmp 0xdc8b674d
  42709e:	cmp    bl,BYTE PTR [edx-0x28]
  4270a1:	retf   
  4270a2:	ins    DWORD PTR es:[edi],dx
  4270a3:	popf   
  4270a4:	sbb    al,0x31
  4270a6:	jge    0x42706f
  4270a8:	mov    ss,edx
  4270aa:	jge    0x4270e3
  4270ac:	mov    esp,0xb9e1b8ff
  4270b1:	mul    BYTE PTR [ecx-0x54]
  4270b4:	sbb    BYTE PTR [esi-0x68],dl
  4270b7:	daa    
  4270b8:	cmp    eax,0xa01338fb
  4270bd:	xchg   esi,ebp
  4270bf:	mov    ds:0x56ded775,al
  4270c4:	outs   dx,BYTE PTR ds:[esi]
  4270c5:	cmp    bl,BYTE PTR [edi+0x5a16678d]
  4270cb:	imul   ecx,DWORD PTR [ecx],0xd6ceff80
  4270d1:	xchg   ecx,eax
  4270d2:	sar    ecx,0xec
  4270d5:	gs mov bh,0x98
  4270d8:	xchg   edx,eax
  4270d9:	lods   eax,DWORD PTR ds:[esi]
  4270da:	xor    ecx,esi
  4270dc:	out    dx,al
  4270dd:	fsub   QWORD PTR [edx]
  4270df:	dec    edx
  4270e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270e1:	push   0x2b1b8bc1
  4270e6:	(bad)  
  4270e7:	xchg   esi,eax
  4270e8:	or     DWORD PTR [ecx],edi
  4270ea:	mov    edx,0xc3da3fd
  4270ef:	imul   DWORD PTR [ecx+ebp*8-0x6cdc2527]
  4270f6:	sbb    dh,BYTE PTR [ebx+ecx*1+0x68]
  4270fa:	nop
  4270fb:	sbb    BYTE PTR [ebp-0x22107947],dh
  427101:	jp     0x427090
  427103:	test   BYTE PTR [edi],dh
  427105:	aad    0xa5
  427107:	call   0x8f00a0d5
  42710c:	sbb    ebp,edi
  42710e:	fs pop eax
  427110:	test   DWORD PTR [ebx-0x6e06aff1],ebp
  427116:	int3   
  427117:	mov    al,0xfa
  427119:	nop
  42711a:	pop    es
  42711b:	fistp  QWORD PTR [esi+0x75]
  42711e:	mov    es,WORD PTR [eax+0x8]
  427121:	push   0x2f706a9d
  427126:	jns    0x427105
  427128:	outs   dx,BYTE PTR ds:[esi]
  427129:	mov    esi,0x265725bf
  42712e:	in     eax,dx
  42712f:	test   BYTE PTR [edi+edx*8],dl
  427132:	stos   DWORD PTR es:[edi],eax
  427133:	add    BYTE PTR [ebx+0x68],ah
  427136:	xor    bl,0x3d
  427139:	out    dx,eax
  42713a:	out    0xb4,eax
  42713c:	xor    ah,BYTE PTR [ebx-0xca13882]
  427142:	push   ss
  427143:	or     eax,0x97773aaf
  427148:	scas   al,BYTE PTR es:[edi]
  427149:	adc    al,0xf2
  42714b:	cmp    cl,BYTE PTR [ebp+edx*1-0x46dc79a7]
  427152:	xchg   ebx,edi
  427154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427155:	or     edi,DWORD PTR [ebp+0x7b]
  427158:	out    dx,al
  427159:	mov    edi,0x1b75df55
  42715e:	dec    eax
  42715f:	mov    dh,0x45
  427161:	mov    edx,0x524973b4
  427166:	mov    dh,0x58
  427168:	inc    edx
  427169:	add    dh,0x90
  42716c:	mov    edi,DWORD PTR [ebx]
  42716e:	les    cx,DWORD PTR cs:[ebx]
  427172:	push   cs
  427173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427174:	sbb    eax,0x4f86ca53
  427179:	jecxz  0x427164
  42717b:	daa    
  42717c:	je     0x427114
  42717e:	call   0xb6c400f2
  427183:	add    BYTE PTR [ebx+eiz*8+0x65922425],ch
  42718a:	das    
  42718b:	pop    ecx
  42718c:	xchg   ebx,eax
  42718d:	bound  ecx,QWORD PTR [edi-0x13f52250]
  427193:	enter  0xc891,0x4b
  427197:	ds inc esi
  427199:	and    al,cl
  42719b:	imul   edx,DWORD PTR ds:0xcb671628,0xffffffc6
  4271a2:	test   al,0x81
  4271a4:	stos   BYTE PTR es:[edi],al
  4271a5:	mov    ecx,0xc6d28a20
  4271aa:	adc    al,0xc0
  4271ac:	lods   al,BYTE PTR ds:[esi]
  4271ad:	or     eax,0x8a0ce78d
  4271b2:	rcl    BYTE PTR [edx-0x2b318bb0],1
  4271b8:	cmp    ecx,DWORD PTR [ebx+0x7f949c00]
  4271be:	add    BYTE PTR [ecx+0xc4a8687],bh
  4271c4:	sbb    DWORD PTR [ebp-0x35f3cdf5],0x624dd0c9
  4271ce:	(bad)  ds:0x7695ddf7
  4271d4:	pop    ebp
  4271d5:	popf   
  4271d6:	or     esp,eax
  4271d8:	retf   
  4271d9:	(bad)  
  4271da:	sub    eax,0xc0424bc8
  4271df:	ror    ch,0x83
  4271e2:	add    al,0x21
  4271e4:	imul   ebp,DWORD PTR [ecx-0x7a13a9e1],0xd4806fa8
  4271ee:	cmp    ah,BYTE PTR [ecx]
  4271f0:	fsub   QWORD PTR [edx-0x5108a7ce]
  4271f6:	mov    ebx,0xe9d784a6
  4271fb:	xchg   edx,eax
  4271fc:	dec    edx
  4271fd:	lock pop ss
  4271ff:	push   0x44
  427201:	arpl   bx,cx
  427203:	test   BYTE PTR [esi],0x9b
  427206:	loopne 0x4271b7
  427208:	pop    ss
  427209:	pushf  
  42720a:	popf   
  42720b:	popa   
  42720c:	aam    0x9d
  42720e:	les    ecx,FWORD PTR [eax-0x1d]
  427211:	mov    edi,0xc5464b24
  427216:	bound  ebx,QWORD PTR ds:0xf9136593
  42721c:	mov    ebp,0x386e60a2
  427221:	inc    edx
  427222:	sub    eax,0x3723c7e6
  427227:	mov    ah,bh
  427229:	aad    0x19
  42722b:	and    al,0xdb
  42722d:	rcr    BYTE PTR [edx-0x584f20],cl
  427233:	imul   esi,DWORD PTR [edi],0x387a3c4c
  427239:	xlat   BYTE PTR ds:[ebx]
  42723a:	mov    DWORD PTR [edx+0x4c],ebx
  42723d:	aaa    
  42723e:	cvtps2pi mm2,QWORD PTR [ebx+0x4c14c832]
  427245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427246:	lods   eax,DWORD PTR ds:[esi]
  427247:	scas   al,BYTE PTR es:[edi]
  427248:	jno    0x42725d
  42724a:	mov    edx,0x1e6a2930
  42724f:	std    
  427250:	adc    cl,BYTE PTR [edi+0x65]
  427253:	mov    ds:0x3a01a845,eax
  427258:	sub    edx,DWORD PTR [ecx]
  42725a:	pop    ebx
  42725b:	dec    ebx
  42725c:	pop    ecx
  42725d:	imul   BYTE PTR [esi+0x53]
  427260:	mov    esp,0xc468b0f6
  427265:	scas   eax,DWORD PTR es:[edi]
  427266:	lahf   
  427267:	jmp    0x427218
  427269:	sti    
  42726a:	data16 mov ah,0x10
  42726d:	mov    al,0x4a
  42726f:	adc    dl,BYTE PTR [ebx-0x7]
  427272:	cvttps2pi mm3,QWORD PTR [edi-0x6d6c8450]
  427279:	pop    ebp
  42727a:	sbb    al,0x5c
  42727c:	jecxz  0x42723f
  42727e:	fidivr WORD PTR [ecx]
  427280:	mov    WORD PTR [esp+eiz*2+0x3b],fs
  427284:	sub    esi,ecx
  427286:	int3   
  427287:	sub    ebp,DWORD PTR [edi-0x51]
  42728a:	test   eax,0xaba2aa17
  42728f:	imul   eax,DWORD PTR [edx],0xffffffad
  427292:	xor    eax,0xc104772d
  427297:	pusha  
  427298:	dec    esi
  427299:	add    eax,0xbf518251
  42729e:	xchg   ebp,eax
  42729f:	popa   
  4272a0:	sahf   
  4272a1:	(bad)  
  4272a2:	out    0xea,al
  4272a4:	lea    esi,[eax+0x27]
  4272a7:	mov    al,0xfe
  4272a9:	mov    al,0xe4
  4272ab:	sub    DWORD PTR [ebp+0x2f],edi
  4272ae:	dec    esi
  4272af:	push   0xfac751a4
  4272b4:	jne    0x4272bf
  4272b6:	jl     0x42730f
  4272b8:	stc    
  4272b9:	mov    ebp,0x6ee38b87
  4272be:	pop    ss
  4272bf:	out    dx,eax
  4272c0:	sub    DWORD PTR [ecx+0x35],esi
  4272c3:	pusha  
  4272c4:	and    al,bl
  4272c6:	xchg   ebp,eax
  4272c7:	add    eax,0xf786153c
  4272cc:	add    esp,DWORD PTR [edi-0x20]
  4272cf:	inc    eax
  4272d0:	or     esp,DWORD PTR [ebx-0x78]
  4272d3:	outs   dx,DWORD PTR ds:[esi]
  4272d4:	or     dh,al
  4272d6:	adc    dh,0x10
  4272d9:	fcomi  st,st(0)
  4272db:	les    edx,FWORD PTR [esi+0x6809a6bf]
  4272e1:	inc    esp
  4272e2:	mov    bh,0x5c
  4272e4:	sti    
  4272e5:	jno    0x427302
  4272e7:	inc    ecx
  4272e8:	sbb    BYTE PTR [ebp-0x415b0209],dl
  4272ee:	stos   BYTE PTR es:[edi],al
  4272ef:	push   0x7e
  4272f1:	mov    al,0x1
  4272f3:	dec    ebp
  4272f4:	lock test DWORD PTR [ecx-0x12],edx
  4272f8:	or     al,0x96
  4272fa:	push   esi
  4272fb:	mov    bh,0x53
  4272fd:	es mov ebp,0xc7d38840
  427303:	rcr    bl,cl
  427305:	div    DWORD PTR [ebp+0x5ab1e804]
  42730b:	adc    al,0x56
  42730d:	mov    edx,0x131a3703
  427312:	cli    
  427313:	sahf   
  427314:	sar    DWORD PTR [ecx+esi*4],cl
  427317:	mov    ss,WORD PTR [ecx+0x44]
  42731a:	lods   al,BYTE PTR ds:[esi]
  42731b:	mov    eax,ds:0x9ebafead
  427320:	sub    edi,DWORD PTR [ebp-0x5d]
  427323:	push   0x4fc96e6e
  427328:	add    eax,0xf6975e55
  42732d:	data16 xchg bh,al
  427330:	fst    st(4)
  427332:	mov    eax,ds:0xcd398180
  427337:	push   edi
  427338:	push   ebx
  427339:	loopne 0x42731c
  42733b:	cmp    esp,DWORD PTR [ebx+0x54]
  42733e:	das    
  42733f:	inc    esp
  427340:	mov    ah,BYTE PTR [edx]
  427342:	ficom  DWORD PTR [esi+esi*2+0x40]
  427346:	mov    bh,0x5c
  427348:	in     eax,dx
  427349:	fisubr DWORD PTR [eax-0x64d219da]
  42734f:	jne    0x427398
  427351:	test   al,0xb
  427353:	popf   
  427354:	or     BYTE PTR fs:[ecx-0x50d547e8],0xd2
  42735c:	xor    DWORD PTR fs:[ebx+0x48],ecx
  427360:	add    BYTE PTR [ecx-0x7f4aa23d],ah
  427366:	(bad)  
  427368:	stos   BYTE PTR es:[edi],al
  427369:	mov    al,BYTE PTR [eax+0x1b]
  42736c:	mov    ss,esp
  42736e:	or     BYTE PTR ds:0x277ed255,bl
  427374:	rcl    DWORD PTR [ebx+0x22],0x32
  427378:	stos   DWORD PTR es:[edi],eax
  427379:	xchg   ebx,eax
  42737a:	xchg   edi,eax
  42737b:	addr16 mov ds:0xecd1,al
  42737f:	push   esp
  427380:	push   0x78
  427382:	jmp    0x42734e
  427384:	test   eax,0x619ae159
  427389:	xchg   esp,eax
  42738a:	add    edx,ebp
  42738c:	outs   dx,DWORD PTR ds:[esi]
  42738d:	pop    ss
  42738e:	in     al,dx
  42738f:	mov    eax,0xe564fd00
  427394:	push   0xed0ba4a2
  427399:	mov    dh,ah
  42739b:	cmc    
  42739c:	xor    dl,dl
  42739e:	and    eax,0xf30f720e
  4273a3:	push   esp
  4273a4:	dec    edx
  4273a5:	xchg   esp,eax
  4273a7:	js     0x42733e
  4273a9:	mov    eax,ds:0x55f0e857
  4273ae:	mov    ah,BYTE PTR [ebx-0x3e]
  4273b1:	test   al,0x93
  4273b3:	xchg   esp,eax
  4273b4:	psadbw mm2,QWORD PTR [ecx]
  4273b7:	ins    DWORD PTR es:[edi],dx
  4273b8:	xchg   ecx,eax
  4273b9:	fsub   DWORD PTR [ecx-0x4b07396]
  4273bf:	xchg   DWORD PTR ds:0x4e892b21,ebx
  4273c5:	(bad)  
  4273c6:	cmc    
  4273c7:	pop    ebx
  4273c8:	mov    esp,0x6a288082
  4273cd:	add    eax,0x53165217
  4273d2:	adc    eax,0x11868b9
  4273d7:	addr16 loopne 0x427458
  4273da:	repnz and ch,BYTE PTR [ebx]
  4273dd:	mov    eax,0x11ffc3e6
  4273e2:	pop    esp
  4273e3:	inc    esp
  4273e4:	mov    ecx,0x756b86ae
  4273e9:	out    dx,eax
  4273ea:	fs mov edi,0x11ef37c7
  4273f0:	dec    ebx
  4273f1:	xchg   ah,dh
  4273f3:	test   al,0x5b
  4273f5:	sub    ecx,edi
  4273f7:	xchg   DWORD PTR [ebx],ebp
  4273f9:	xchg   edx,eax
  4273fa:	mov    eax,ds:0xcc7b8799
  4273ff:	adc    al,BYTE PTR [esi-0x19]
  427402:	jne    0x427421
  427404:	adc    al,0x9c
  427406:	cmp    BYTE PTR [ebp-0x3cab9888],bl
  42740c:	outs   dx,DWORD PTR ds:[esi]
  42740d:	ret    
  42740e:	push   edi
  42740f:	cmc    
  427410:	das    
  427411:	test   al,0xe6
  427413:	and    eax,0xc9d167ba
  427418:	hlt    
  427419:	or     BYTE PTR [ebp-0x14],0xb2
  42741d:	or     al,0xe6
  42741f:	sub    DWORD PTR [eax-0x23d13fc3],esp
  427425:	push   ss
  427426:	shr    DWORD PTR fs:[ebx+ecx*2-0x59],0x73
  42742c:	xchg   edx,eax
  42742d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42742e:	xchg   ebp,eax
  42742f:	jo     0x4273b7
  427431:	not    DWORD PTR cs:[ebx+0x468881fd]
  427438:	into   
  427439:	test   BYTE PTR [ecx+esi*4-0x23],ch
  42743d:	outs   dx,BYTE PTR ds:[esi]
  42743e:	dec    ebp
  42743f:	pop    eax
  427440:	inc    edx
  427441:	dec    ecx
  427442:	das    
  427443:	outs   dx,BYTE PTR ds:[esi]
  427444:	mov    ah,0xe1
  427446:	cmp    al,BYTE PTR [edx+eax*4-0x4bfb0877]
  42744d:	sub    eax,0xe2b8a12b
  427452:	pop    ecx
  427453:	std    
  427454:	xchg   DWORD PTR [esp+ebp*8],ebx
  427457:	mov    eax,ebp
  427459:	inc    esi
  42745a:	pop    esi
  42745b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42745c:	dec    ebx
  42745d:	adc    cl,ah
  42745f:	call   0x75d4:0xb7bffdd0
  427466:	xchg   edx,eax
  427467:	cmp    edx,DWORD PTR [eax-0x719fd576]
  42746d:	add    bl,BYTE PTR [ebp-0x47]
  427470:	test   eax,0x2b1ea7f
  427475:	or     esi,DWORD PTR [edi]
  427477:	xor    edi,DWORD PTR [eax+ebp*4]
  42747a:	xor    DWORD PTR [edi+esi*2+0x7d0bb754],ebx
  427481:	mov    ebp,0x10f6944c
  427486:	xchg   BYTE PTR [edi-0x40],cl
  427489:	repz inc esi
  42748b:	xor    esi,esp
  42748d:	xchg   ecx,eax
  42748e:	pop    esp
  42748f:	aam    0x13
  427491:	test   al,0xfe
  427493:	gs loopne 0x427470
  427496:	pop    ebx
  427497:	push   cs
  427498:	sub    bh,BYTE PTR ds:0xe7ed8e73
  42749e:	cmp    eax,0x916b17e9
  4274a3:	pop    ss
  4274a4:	out    dx,al
  4274a5:	mov    al,ds:0xf5507c44
  4274aa:	jl     0x4274ee
  4274ac:	adc    BYTE PTR [ebp+ecx*8-0xf3682ba],ch
  4274b3:	xor    BYTE PTR [esi+0x4d],cl
  4274b6:	jl     0x4274f5
  4274b8:	push   ecx
  4274b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274ba:	pop    eax
  4274bb:	fcom   QWORD PTR [eax+0x27]
  4274be:	ins    BYTE PTR es:[edi],dx
  4274bf:	sbb    edi,eax
  4274c1:	pop    ds
  4274c2:	call   0xa5092b91
  4274c7:	pop    esp
  4274c8:	push   ebp
  4274c9:	sbb    edi,esp
  4274cb:	outs   dx,BYTE PTR ds:[esi]
  4274cc:	fwait
  4274cd:	pop    ebx
  4274ce:	sbb    ecx,esp
  4274d0:	dec    ebp
  4274d1:	push   ecx
  4274d2:	xchg   edi,eax
  4274d3:	add    eax,0x82a821a5
  4274d8:	xor    ah,dh
  4274da:	mov    dl,0xd4
  4274dc:	mov    ah,0x9e
  4274de:	mov    al,BYTE PTR [eax-0x16980717]
  4274e4:	cmp    al,0x30
  4274e6:	mov    bh,0x63
  4274e8:	(bad)  
  4274e9:	fmulp  st(6),st
  4274eb:	(bad)  
  4274ec:	xor    cl,bl
  4274ee:	nop
  4274ef:	(bad)  [ebx-0x4]
  4274f2:	add    al,0x6f
  4274f4:	adc    DWORD PTR [edi+0x69],ebp
  4274f7:	cli    
  4274f8:	mov    al,0x6c
  4274fa:	mov    esp,0xaa158478
  4274ff:	retf   
  427500:	loop   0x4274c6
  427502:	(bad)  
  427503:	push   esi
  427504:	icebp  
  427505:	scas   eax,DWORD PTR es:[edi]
  427506:	xchg   DWORD PTR [edx],esp
  427508:	xor    ch,dh
  42750a:	popa   
  42750b:	xchg   DWORD PTR [eax+0x3e],ecx
  42750e:	call   0xbdd427b7
  427513:	arpl   WORD PTR [ebx+0x3765c591],si
  427519:	data16 (bad) 
  42751b:	adc    edi,DWORD PTR [eax-0x7705de71]
  427521:	(bad)  
  427523:	outs   dx,BYTE PTR ds:[esi]
  427524:	not    DWORD PTR [ecx-0x3ef64af5]
  42752a:	je     0x42752b
  42752c:	and    edx,DWORD PTR [edx+ecx*1-0x154cc3d8]
  427533:	push   eax
  427534:	jnp    0x4274ff
  427536:	addr16 mov bh,dl
  427539:	fcmovnu st,st(2)
  42753b:	sub    esi,DWORD PTR [edx-0x4a3646c8]
  427541:	jmp    0xc632:0xa3dd1b0b
  427548:	pop    eax
  427549:	xor    eax,0xca71812b
  42754e:	out    dx,eax
  42754f:	pop    ebp
  427550:	mov    edx,0x120438ae
  427555:	push   edi
  427556:	mov    ds:0x60ef9657,al
  42755b:	mov    BYTE PTR [esi+0x2913180f],bh
  427561:	pop    edi
  427562:	fstp   TBYTE PTR [ecx-0x8ac8147]
  427568:	mov    dl,0xc9
  42756a:	loopne 0x4275c3
  42756c:	lods   al,BYTE PTR ds:[esi]
  42756d:	stos   DWORD PTR es:[edi],eax
  42756e:	js     0x4275eb
  427570:	mov    ds:0xc63c69d5,al
  427575:	popa   
  427576:	sbb    al,0xa1
  427578:	sbb    al,0x5f
  42757a:	mov    ds:0xd2ec679,eax
  42757f:	outs   dx,BYTE PTR ds:[esi]
  427580:	outs   dx,BYTE PTR ds:[esi]
  427581:	mov    DWORD PTR [edx-0x71],esi
  427584:	adc    ch,BYTE PTR [edi-0x49a23ae]
  42758a:	icebp  
  42758b:	test   BYTE PTR [edx],0xa2
  42758e:	fisttp DWORD PTR [ebp+ebp*8-0x397fffe2]
  427595:	into   
  427596:	jecxz  0x4275a2
  427598:	pusha  
  427599:	add    BYTE PTR [eax+0x3737b060],bl
  42759f:	inc    esi
  4275a0:	sub    esp,DWORD PTR [ebx]
  4275a2:	or     ecx,DWORD PTR [ecx+edi*4+0xe]
  4275a6:	inc    ebx
  4275a7:	ins    BYTE PTR es:[edi],dx
  4275a8:	sub    dh,BYTE PTR [ecx+0x17]
  4275ab:	add    al,0xbf
  4275ad:	push   ebx
  4275ae:	xchg   ecx,eax
  4275af:	addr16 xchg ebp,eax
  4275b1:	xchg   DWORD PTR [esi-0x32],edx
  4275b4:	test   eax,0xfcef4424
  4275b9:	jb     0x427580
  4275bb:	add    dh,BYTE PTR [edx+0x75]
  4275be:	aas    
  4275bf:	in     eax,dx
  4275c0:	and    ch,ch
  4275c2:	dec    ebx
  4275c3:	mov    ebx,0x24b86126
  4275c8:	out    0x32,al
  4275ca:	cmp    al,BYTE PTR [ebp-0x52f0e7c]
  4275d0:	cmp    al,0x46
  4275d2:	call   0x7ccea7a4
  4275d7:	call   0xd1bfd1f
  4275dc:	and    eax,0x6b9c1967
  4275e1:	sub    al,ah
  4275e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275e4:	imul   ebp,DWORD PTR [eax-0x4d],0x7
  4275e8:	mov    edx,0xd7528da
  4275ed:	shr    esi,0x41
  4275f0:	fwait
  4275f1:	push   esp
  4275f2:	push   edi
  4275f3:	sbb    edx,ecx
  4275f5:	xor    DWORD PTR [ebp+ecx*4+0x1b023336],ecx
  4275fc:	push   ecx
  4275fd:	jnp    0x42761b
  4275ff:	popa   
  427600:	pusha  
  427601:	aas    
  427602:	add    bl,al
  427604:	fwait
  427605:	or     dl,ah
  427607:	add    al,0xf4
  427609:	retf   0x9183
  42760c:	jp     0x427683
  42760e:	xchg   ebx,eax
  42760f:	sahf   
  427610:	ret    
  427611:	push   esp
  427612:	mov    ss,WORD PTR [ecx+0x64]
  427615:	aad    0x28
  427617:	mov    ?,WORD PTR [edx]
  427619:	jae    0x427686
  42761b:	sbb    BYTE PTR ds:0x1f9baa27,bl
  427621:	mov    ah,0x2
  427623:	test   DWORD PTR [edx],ebp
  427625:	icebp  
  427626:	out    0xf5,eax
  427628:	lods   eax,DWORD PTR ds:[esi]
  427629:	jns    0x4275c5
  42762b:	js     0x42761d
  42762d:	repnz stos DWORD PTR es:[edi],eax
  42762f:	cdq    
  427630:	jp     0x4275b5
  427632:	jecxz  0x427648
  427634:	add    eax,esp
  427636:	(bad)  
  427637:	cs xchg edx,eax
  427639:	cmp    BYTE PTR [edx+edx*4-0x1],dl
  42763d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42763e:	popa   
  42763f:	and    BYTE PTR [ebx],cl
  427641:	in     eax,0xad
  427643:	xchg   edx,eax
  427644:	add    esi,DWORD PTR gs:[ebp-0x6281a7dd]
  42764b:	daa    
  42764c:	in     al,dx
  42764d:	inc    edi
  42764e:	sub    cl,dh
  427650:	mov    edi,0x54fb5096
  427655:	lds    ecx,FWORD PTR [ecx-0x745f7c8b]
  42765b:	fldcw  WORD PTR [ecx+0x4c97ca52]
  427661:	out    dx,al
  427662:	scas   eax,DWORD PTR es:[edi]
  427663:	aaa    
  427664:	inc    edi
  427665:	pushf  
  427666:	pop    ds
  427667:	push   ds
  427668:	daa    
  427669:	imul   BYTE PTR [esi+0x47]
  42766c:	lods   eax,DWORD PTR ds:[esi]
  42766d:	scas   al,BYTE PTR es:[edi]
  42766e:	pop    ds
  42766f:	push   ecx
  427670:	sbb    esi,0x5f
  427673:	fdiv   DWORD PTR [ebp+0x16]
  427676:	push   eax
  427677:	pop    edi
  427678:	pop    esp
  427679:	mov    bh,0xe6
  42767b:	jno    0x427653
  42767d:	icebp  
  42767e:	je     0x4276bd
  427680:	shr    BYTE PTR [ecx+eiz*2+0xc8c607e],1
  427687:	jcxz   0x4276c5
  42768a:	cmp    eax,0xcdc3864c
  42768f:	mov    esi,0xcbf331b
  427694:	cmp    DWORD PTR [edx+0x73],edi
  427697:	in     al,0x8e
  427699:	inc    esi
  42769a:	mov    ch,0x84
  42769c:	pushf  
  42769d:	sub    cl,bl
  42769f:	push   ss
  4276a0:	sti    
  4276a1:	ret    0xe577
  4276a4:	les    edx,FWORD PTR [esi]
  4276a6:	in     eax,0xde
  4276a8:	push   es
  4276a9:	and    DWORD PTR [esi-0x30e600f3],esp
  4276af:	ror    BYTE PTR [ecx+0x41ef718f],0xb8
  4276b6:	js     0x42767f
  4276b8:	inc    eax
  4276b9:	test   al,0x9
  4276bb:	(bad)  
  4276bc:	(bad)  [esi+ebx*8+0x1a]
  4276c0:	and    eax,0x85031b2
  4276c5:	inc    esi
  4276c6:	and    eax,0xdfa34dbc
  4276cb:	psllw  mm7,QWORD PTR [edi+0x30001baf]
  4276d2:	and    BYTE PTR [eax],bl
  4276d4:	loope  0x427740
  4276d6:	sbb    esp,esp
  4276d8:	stc    
  4276d9:	ror    BYTE PTR [edi-0x6d76b33f],cl
  4276df:	dec    ecx
  4276e0:	dec    esi
  4276e1:	leave  
  4276e2:	imul   eax,DWORD PTR [ecx+0x28],0xffffffff
  4276e6:	repz not bh
  4276e9:	enter  0x579,0xb6
  4276ed:	cmp    cl,BYTE PTR [ebp+0x444e529a]
  4276f3:	sti    
  4276f4:	jmp    0x42775e
  4276f6:	data16 ja 0x427712
  4276f9:	les    edx,FWORD PTR [si]
  4276fc:	jno    0x42767e
  4276fe:	push   ebp
  4276ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427700:	xlat   BYTE PTR ds:[ebx]
  427701:	xchg   edi,eax
  427702:	mov    eax,ds:0x4deba9f
  427707:	jmp    0x80c8:0x2441e858
  42770e:	adc    ecx,DWORD PTR [ecx+esi*4+0x30]
  427712:	dec    ebp
  427713:	loope  0x4276c4
  427715:	out    0x32,al
  427717:	and    eax,ebp
  427719:	nop
  42771a:	add    DWORD PTR [eax+esi*2],ebx
  42771d:	sar    DWORD PTR [esi],1
  42771f:	pop    es
  427720:	add    BYTE PTR [ebx],ch
  427722:	in     al,0x91
  427724:	out    0xd0,al
  427726:	arpl   WORD PTR [edi-0x43],di
  427729:	retf   0x853f
  42772c:	mov    cl,0x4c
  42772e:	jge    0x4276bd
  427730:	push   esi
  427731:	adc    esp,ebp
  427733:	cmc    
  427734:	stos   BYTE PTR es:[edi],al
  427735:	mov    cl,0xa3
  427737:	stos   BYTE PTR es:[edi],al
  427738:	inc    edi
  427739:	dec    esp
  42773a:	adc    al,0x8c
  42773c:	test   DWORD PTR [edx+eax*1],edx
  42773f:	cmp    dh,BYTE PTR [ecx-0x563f6a30]
  427745:	repz mov cl,0x5c
  427748:	cmc    
  427749:	cwde   
  42774a:	or     eax,0xcccdf1b2
  42774f:	loopne 0x4277ba
  427751:	mov    al,0x1a
  427753:	jp     0x4276df
  427755:	adc    BYTE PTR ds:[edi],0x5
  427759:	xchg   DWORD PTR [esi-0x206cede2],edi
  42775f:	cmp    ebx,edi
  427761:	jmp    0x42778d
  427763:	cs jle 0x4277d9
  427766:	cmc    
  427767:	sbb    bh,cl
  427769:	test   BYTE PTR [edi+0x3bff0614],dl
  42776f:	mov    esi,eax
  427771:	rcr    ecx,cl
  427773:	pop    eax
  427774:	data16 outs dx,WORD PTR ds:[esi]
  427777:	push   es
  427778:	test   ch,al
  42777a:	cmp    eax,0x8efa650e
  42777f:	sbb    eax,0x40ecb3d2
  427784:	jge    0x4277cb
  427786:	jb     0x4277d4
  427788:	loop   0x4277b8
  42778a:	or     DWORD PTR [eax],esi
  42778c:	clc    
  42778d:	call   FWORD PTR [eax]
  42778f:	adc    dl,BYTE PTR [eax+0x7c]
  427792:	mov    eax,ds:0xcc6de1fd
  427797:	adc    DWORD PTR [ebp+eiz*1+0x3a],ebp
  42779b:	stos   BYTE PTR es:[edi],al
  42779c:	fild   QWORD PTR [ebp+0x4226dee]
  4277a2:	push   eax
  4277a3:	loope  0x4277cd
  4277a5:	sub    eax,0xefcfd25
  4277aa:	fistp  DWORD PTR ds:0x7c2c0622
  4277b0:	jmp    FWORD PTR [ecx+edx*4+0x5e6f0448]
  4277b7:	jmp    0xe6976418
  4277bc:	lods   eax,DWORD PTR ds:[esi]
  4277bd:	xor    BYTE PTR [ebx],0x61
  4277c0:	cmp    DWORD PTR [ebx+0x2c543898],0x38c1d3ed
  4277ca:	mov    ebx,DWORD PTR [ebp-0x48826ca8]
  4277d0:	gs cld 
  4277d2:	loop   0x42775f
  4277d4:	jb     0x4277f7
  4277d6:	jne    0x427828
  4277d8:	(bad)  
  4277d9:	mov    esp,0xff8f1d23
  4277de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277df:	or     DWORD PTR [ecx+0x3b],eax
  4277e2:	pop    es
  4277e3:	loopne 0x427852
  4277e5:	iret   
  4277e6:	mov    al,0x79
  4277e8:	imul   ebp,DWORD PTR [ebp-0x23],0x6c
  4277ec:	aam    0x8b
  4277ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277ef:	inc    esi
  4277f0:	jecxz  0x42780d
  4277f2:	std    
  4277f3:	jle    0x427810
  4277f5:	popf   
  4277f6:	inc    ebp
  4277f7:	jge    0x42782b
  4277f9:	pushf  
  4277fa:	fsub   QWORD PTR [esi]
  4277fc:	add    dl,BYTE PTR [edi]
  4277fe:	xchg   ebx,eax
  4277ff:	(bad)  
  427800:	pop    edi
  427801:	test   ecx,ecx
  427803:	push   ebx
  427804:	sub    BYTE PTR [edx+0x7c],ah
  427807:	sahf   
  427808:	mov    dl,0x73
  42780a:	cmp    bh,dl
  42780c:	xor    eax,0x9690d379
  427811:	sbb    al,dh
  427813:	xchg   ebp,eax
  427814:	xchg   ebx,eax
  427815:	loop   0x427831
  427817:	xchg   edi,eax
  427818:	scas   al,BYTE PTR es:[edi]
  427819:	div    DWORD PTR [ecx*4+0x50cd58ff]
  427820:	add    BYTE PTR [eax+0x57],0xd9
  427824:	pusha  
  427825:	mov    DWORD PTR [edi],esp
  427827:	es jp  0x4277dc
  42782a:	xchg   esp,eax
  42782b:	mov    DWORD PTR [ecx],ebx
  42782d:	pop    edi
  42782e:	mov    DWORD PTR [esp+ecx*8-0x2d],edx
  427832:	cli    
  427833:	cdq    
  427834:	dec    ebp
  427835:	or     eax,0x4151dbfe
  42783a:	mov    ?,WORD PTR [ecx+eiz*1]
  42783d:	ins    BYTE PTR es:[edi],dx
  42783e:	test   al,0x82
  427840:	push   ebx
  427841:	mov    ecx,0x4364f6a
  427846:	or     eax,0xd295a5b8
  42784b:	lock push ebx
  42784d:	loop   0x427894
  42784f:	mov    ch,0xbf
  427852:	sub    al,0xf7
  427854:	sar    al,0x67
  427857:	fimul  WORD PTR [ecx+0x777a88eb]
  42785d:	inc    ebx
  42785e:	rcr    al,cl
  427860:	retf   0x1cf3
  427863:	pop    ecx
  427864:	sub    BYTE PTR [ecx],ah
  427866:	pushf  
  427867:	push   edx
  427868:	in     al,dx
  427869:	pop    edx
  42786a:	daa    
  42786b:	ds xor al,bh
  42786e:	out    dx,eax
  42786f:	jle    0x42785a
  427871:	mov    esp,0xd94ccc13
  427876:	jle    0x427819
  427878:	jmp    0xebe9c4
  42787d:	fidiv  DWORD PTR [eax-0x47ad4bbf]
  427883:	(bad)  [ecx+ebx*1+0x8]
  427887:	push   ebp
  427888:	(bad)  
  427889:	jbe    0x4278ec
  42788b:	adc    DWORD PTR [edx+eiz*2+0x11681011],esp
  427892:	aad    0x3c
  427894:	xchg   edx,eax
  427895:	dec    esi
  427896:	xor    al,0xdc
  427898:	outs   dx,BYTE PTR ds:[esi]
  427899:	cwde   
  42789a:	mov    edi,0x10f85dc3
  42789f:	dec    eax
  4278a0:	inc    edx
  4278a1:	repz dec edi
  4278a3:	test   al,0xbe
  4278a5:	rol    BYTE PTR [edx-0x4e],0x7d
  4278a9:	dec    ebx
  4278aa:	daa    
  4278ab:	and    al,0x2
  4278ad:	dec    ebx
  4278ae:	and    DWORD PTR [ecx+ecx*4+0xa7802ba],0x54f78811
  4278b9:	push   ss
  4278ba:	add    dh,cl
  4278bc:	dec    esp
  4278bd:	pusha  
  4278be:	xor    eax,0x185b6a35
  4278c3:	or     dh,BYTE PTR [ebx+0x1f11c552]
  4278c9:	in     eax,dx
  4278ca:	jns    0x4278c6
  4278cc:	push   0xffffffb0
  4278ce:	mov    bl,BYTE PTR [edx+eiz*4-0x13dc87a8]
  4278d5:	jnp    0x427859
  4278d7:	push   esi
  4278d8:	sbb    cl,BYTE PTR [ebp-0x3f]
  4278db:	jecxz  0x4278d9
  4278dd:	mov    eax,ds:0x1355bc2a
  4278e2:	lods   al,BYTE PTR ds:[esi]
  4278e3:	pop    ebp
  4278e4:	aam    0xd8
  4278e6:	cmp    eax,0xc0b040fd
  4278eb:	mov    bl,0xab
  4278ed:	fs gs xchg ebp,eax
  4278f0:	xor    BYTE PTR [edi],0xdb
  4278f3:	xchg   edi,eax
  4278f4:	xchg   edi,eax
  4278f5:	or     ch,BYTE PTR [edx-0x63]
  4278f8:	fisubr DWORD PTR [ecx-0x42db64b8]
  4278fe:	pop    ss
  4278ff:	dec    eax
  427900:	xchg   edi,eax
  427901:	inc    ebx
  427902:	xor    eax,edi
  427904:	pop    eax
  427905:	mov    BYTE PTR [eax+edx*2-0x62],ch
  427909:	jecxz  0x42794d
  42790b:	dec    ebp
  42790c:	xlat   BYTE PTR ds:[bx]
  42790e:	add    DWORD PTR [ebp+0x50de37b8],ebx
  427914:	adc    BYTE PTR [edx],bh
  427916:	(bad)  
  427917:	sbb    DWORD PTR [ecx],eax
  427919:	or     BYTE PTR [ebp-0x2e],0xdc
  42791d:	hlt    
  42791e:	ret    0xd882
  427921:	mov    esi,0x71d46a43
  427926:	mov    ch,0x72
  427928:	retw   0xb5da
  42792c:	outs   dx,BYTE PTR ds:[esi]
  42792d:	fstp   st(5)
  42792f:	dec    esi
  427930:	hlt    
  427931:	xchg   esi,eax
  427932:	jae    0x427963
  427934:	mov    ?,ecx
  427936:	lods   al,BYTE PTR ss:[esi]
  427938:	(bad)  
  427939:	sub    dl,BYTE PTR [ecx]
  42793b:	adc    eax,0x2d52ba03
  427940:	push   esi
  427941:	pop    edi
  427942:	sub    al,ch
  427944:	mov    esi,0x1a7b1ccd
  427949:	cmp    ch,BYTE PTR [ebp-0x5e9e0eb7]
  42794f:	test   DWORD PTR [ebx+0x7a],ebp
  427952:	stos   BYTE PTR es:[edi],al
  427953:	xchg   edi,eax
  427954:	or     al,0x36
  427956:	and    al,0xd2
  427958:	push   eax
  427959:	jns    0x427965
  42795b:	(bad)  
  42795c:	mov    ds:0xb527901b,eax
  427961:	inc    ecx
  427962:	(bad)  
  427963:	fdivr  QWORD PTR [ebx]
  427965:	mov    DWORD PTR [esi],edi
  427967:	push   ss
  427968:	pop    ebp
  427969:	fs je  0x42797b
  42796c:	adc    eax,edi
  42796e:	das    
  42796f:	lds    eax,FWORD PTR [ecx+0x76]
  427972:	jp     0x4279c5
  427974:	sbb    eax,0xb631516b
  427979:	fist   DWORD PTR [ebp-0x2d200c78]
  42797f:	inc    esp
  427980:	in     al,0xa6
  427982:	jge    0x427982
  427984:	or     esi,ebx
  427986:	or     al,0xd7
  427988:	push   edx
  427989:	fmulp  st(2),st
  42798b:	mov    ds:0xd1d3f278,eax
  427990:	aad    0x85
  427992:	jbe    0x4279f2
  427994:	jno    0x42795f
  427996:	sbb    eax,0xce7a9f15
  42799b:	fld    QWORD PTR [edi-0x1f5c3cf2]
  4279a1:	fdivr  DWORD PTR [edi+0x479c40c]
  4279a7:	pop    ebx
  4279a8:	add    dl,al
  4279aa:	sub    BYTE PTR [esi+0x18f09d2a],0x1a
  4279b1:	out    0xd6,eax
  4279b3:	ja     0x42797e
  4279b5:	ret    
  4279b6:	dec    ecx
  4279b7:	xlat   BYTE PTR ds:[ebx]
  4279b8:	push   ebx
  4279b9:	dec    ebx
  4279ba:	push   edi
  4279bb:	jecxz  0x427945
  4279bd:	add    BYTE PTR [ecx+0x2ff3e2e2],bh
  4279c3:	aas    
  4279c4:	sbb    ecx,edi
  4279c6:	mov    bl,0xa6
  4279c8:	or     DWORD PTR [esp+edx*8+0x59],edi
  4279cc:	je     0x427954
  4279ce:	mov    esi,0x75de9a5
  4279d3:	ret    
  4279d4:	inc    edi
  4279d5:	push   esi
  4279d6:	test   BYTE PTR [eax-0x10],dl
  4279d9:	leave  
  4279da:	sub    ecx,ebx
  4279dc:	(bad)  
  4279dd:	inc    BYTE PTR [eax-0x52]
  4279e0:	push   esi
  4279e1:	mov    esi,0xf460d17d
  4279e6:	out    0x3c,eax
  4279e8:	(bad)  
  4279e9:	test   al,0x6d
  4279eb:	mov    ebp,0xf0a6f2b0
  4279f0:	lds    esi,FWORD PTR [edx+0x16e1a3c3]
  4279f6:	jge    0x427a5e
  4279f8:	add    al,0x27
  4279fa:	stos   DWORD PTR es:[edi],eax
  4279fb:	aam    0xa8
  4279fd:	mov    dl,0xb
  4279ff:	mov    eax,0x985ae9a4
  427a04:	aaa    
  427a05:	jmp    0x4279e1
  427a07:	xlat   BYTE PTR ds:[ebx]
  427a08:	inc    eax
  427a09:	aam    0xc7
  427a0b:	xlat   BYTE PTR ds:[ebx]
  427a0c:	push   ss
  427a0d:	dec    edx
  427a0e:	arpl   WORD PTR [ebx],cx
  427a10:	imul   edi,edx,0x34
  427a13:	out    0xf9,eax
  427a15:	popa   
  427a16:	add    al,0xaa
  427a18:	dec    eax
  427a19:	and    edi,eax
  427a1b:	mov    bl,0xcb
  427a1d:	xor    DWORD PTR [edx],0xe2fae2b1
  427a23:	test   BYTE PTR [ebp-0xd937583],dh
  427a29:	xchg   ebp,eax
  427a2a:	std    
  427a2b:	adc    bl,al
  427a2d:	ret    0x52db
  427a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a31:	aad    0x4f
  427a33:	outs   dx,BYTE PTR ds:[esi]
  427a34:	and    ecx,ebp
  427a36:	push   edx
  427a37:	popf   
  427a38:	fild   DWORD PTR [edi+ecx*2-0x45]
  427a3c:	hlt    
  427a3d:	loop   0x427a9b
  427a3f:	mov    esp,0xb69ccf38
  427a44:	cs mov ebx,0xf08bd1dd
  427a4a:	xchg   ebp,eax
  427a4b:	xchg   esp,eax
  427a4c:	pop    esp
  427a4d:	cmc    
  427a4e:	mov    ah,0x8e
  427a50:	addr16 (bad) 
  427a52:	cmp    BYTE PTR [ebp+0x4d],dl
  427a55:	push   ecx
  427a56:	jmp    0xa64f7c7e
  427a5b:	xor    dh,BYTE PTR [eax-0x5a]
  427a5e:	(bad)  
  427a5f:	outs   dx,BYTE PTR ds:[esi]
  427a60:	push   edx
  427a61:	call   0xf7e94aed
  427a66:	fcmove st,st(6)
  427a68:	out    dx,eax
  427a69:	adc    eax,0xa2c1a95f
  427a6e:	mov    ecx,DWORD PTR [esp+ecx*8]
  427a71:	cmp    DWORD PTR [ebx-0x50691ae4],esi
  427a77:	mov    ecx,0x305d186b
  427a7c:	dec    eax
  427a7d:	lahf   
  427a7e:	into   
  427a7f:	xchg   esp,eax
  427a80:	add    BYTE PTR [eax-0x54bc99b5],dl
  427a86:	outs   dx,DWORD PTR ds:[esi]
  427a87:	test   BYTE PTR [eax+esi*2-0x48],bl
  427a8b:	scas   al,BYTE PTR es:[edi]
  427a8c:	cmp    BYTE PTR [edx+0x1f],dh
  427a8f:	rcl    esi,1
  427a91:	push   esp
  427a92:	nop
  427a93:	out    dx,eax
  427a94:	mov    WORD PTR [eax-0x76111b1d],cs
  427a9a:	inc    edx
  427a9b:	adc    dl,BYTE PTR [eax+0x2931e0b8]
  427aa1:	gs dec ecx
  427aa3:	dec    esi
  427aa4:	xchg   DWORD PTR [ebx],esp
  427aa6:	mov    dh,0xe5
  427aa8:	fdiv   DWORD PTR [edx-0x5595a7df]
  427aae:	das    
  427aaf:	sub    eax,0x70fc81c
  427ab4:	mov    bh,0x3e
  427ab6:	frstor [ebx*4-0x5d020c6f]
  427abd:	dec    edi
  427abe:	xlat   BYTE PTR ds:[ebx]
  427abf:	hlt    
  427ac0:	inc    eax
  427ac1:	nop
  427ac2:	pop    ds
  427ac3:	stos   BYTE PTR es:[edi],al
  427ac4:	in     al,0xbe
  427ac6:	stc    
  427ac7:	sub    ecx,DWORD PTR [edx]
  427ac9:	stos   DWORD PTR es:[edi],eax
  427aca:	out    0xab,eax
  427acc:	stos   BYTE PTR es:[edi],al
  427acd:	cld    
  427ace:	cmp    ch,BYTE PTR [ebp-0x6c]
  427ad1:	mov    bh,0x3b
  427ad3:	gs xchg ebp,eax
  427ad5:	pop    ebx
  427ad6:	push   ecx
  427ad7:	pop    eax
  427ad8:	inc    esp
  427ad9:	and    DWORD PTR [ecx-0x2ab94140],0xffffffd5
  427ae0:	cmp    eax,0x153f25f5
  427ae5:	cmp    BYTE PTR [ebx-0x7c47833f],0x54
  427aec:	rcr    DWORD PTR [ebp-0x15d859ca],1
  427af2:	dec    edi
  427af3:	add    eax,ebp
  427af5:	inc    ebx
  427af6:	inc    ecx
  427af7:	xchg   esi,eax
  427af8:	aam    0xd
  427afa:	(bad)  
  427afb:	scas   al,BYTE PTR es:[edi]
  427afc:	(bad)  
  427afd:	push   esi
  427afe:	gs retf 0xcb3
  427b02:	adc    BYTE PTR [esi+ecx*2-0x20f99075],al
  427b09:	mov    WORD PTR [eax-0x59],?
  427b0c:	in     al,dx
  427b0d:	dec    ecx
  427b0e:	mov    cl,0x53
  427b10:	das    
  427b11:	(bad)  
  427b12:	pop    es
  427b13:	or     BYTE PTR [edx],dl
  427b15:	fs inc edi
  427b17:	push   0x7f470f97
  427b1c:	mov    al,ds:0x4ed900a7
  427b21:	(bad)  
  427b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b23:	jecxz  0x427aad
  427b25:	mov    ds:0x57aca8bc,eax
  427b2a:	cmp    eax,0x27dac888
  427b2f:	jae    0x427ade
  427b31:	mov    ebx,0x94ea6f7c
  427b36:	fcomp  QWORD PTR [ebx-0x51746964]
  427b3c:	ss out 0x8a,eax
  427b3f:	outs   dx,DWORD PTR ds:[esi]
  427b40:	xor    eax,0xf775aa93
  427b45:	cwde   
  427b46:	add    DWORD PTR [eax+0x64],edi
  427b49:	fmul   QWORD PTR [ebx+ecx*4]
  427b4c:	mov    dl,0xac
  427b4e:	lock popw ss
  427b51:	dec    esi
  427b52:	scas   eax,DWORD PTR es:[edi]
  427b53:	call   0x3377f677
  427b58:	mov    eax,0x91e8b2fc
  427b5d:	pushf  
  427b5e:	in     eax,dx
  427b5f:	jbe    0x427bb7
  427b61:	cld    
  427b62:	loopne 0x427bce
  427b64:	cdq    
  427b65:	sbb    esp,eax
  427b67:	loope  0x427b7c
  427b69:	dec    ebp
  427b6a:	and    ch,BYTE PTR [edx+0x5f32180d]
  427b70:	aam    0x2d
  427b72:	xor    esp,esp
  427b74:	push   cs
  427b75:	aad    0x7
  427b77:	in     al,0x2b
  427b79:	lahf   
  427b7a:	div    esp
  427b7c:	rcr    esp,0x64
  427b7f:	das    
  427b80:	ss hlt 
  427b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b83:	jb     0x427bd1
  427b85:	shr    DWORD PTR [ebp-0x5e8783f8],0xb0
  427b8c:	push   ds
  427b8d:	inc    eax
  427b8e:	sar    BYTE PTR [edx+0x18c5ccb7],0x76
  427b95:	fdiv   DWORD PTR [eax]
  427b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b98:	std    
  427b99:	dec    eax
  427b9a:	test   edx,0x6cab912d
  427ba0:	cld    
  427ba1:	dec    ebx
  427ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ba3:	or     eax,ebx
  427ba5:	and    ebx,DWORD PTR [eax+0x1d740260]
  427bab:	int    0x87
  427bad:	in     eax,0x5d
  427baf:	xchg   esp,eax
  427bb0:	adc    eax,0x368d3501
  427bb5:	cli    
  427bb6:	cwde   
  427bb7:	xchg   ebp,eax
  427bb8:	(bad)  
  427bb9:	mov    dl,0xb8
  427bbb:	repz retf 
  427bbd:	or     DWORD PTR [eax],esi
  427bbf:	shl    DWORD PTR [eax],1
  427bc1:	xor    eax,0xeef486fe
  427bc6:	adc    edi,ecx
  427bc8:	popf   
  427bc9:	push   ss
  427bca:	mov    eax,ds:0xee062f36
  427bcf:	mov    cl,0xaa
  427bd1:	xor    dh,BYTE PTR [esi]
  427bd3:	sbb    DWORD PTR [edi],eax
  427bd5:	ret    
  427bd6:	jbe    0x427bb1
  427bd8:	and    esp,0xadd7d63a
  427bde:	pop    esp
  427bdf:	inc    ecx
  427be0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  427be2:	pop    ds
  427be3:	stos   DWORD PTR es:[edi],eax
  427be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427be5:	mov    ebp,0x7fedd5be
  427bea:	int    0x81
  427bec:	shl    BYTE PTR [ebp+0x25],cl
  427bef:	mov    bh,0x9a
  427bf1:	mov    esi,0xaf5ef041
  427bf6:	inc    ebp
  427bf7:	add    ebp,DWORD PTR [edi-0x6b]
  427bfa:	cmp    DWORD PTR [esi],0x9977ef6c
  427c00:	test   DWORD PTR [edx-0x14],eax
  427c03:	iret   
  427c04:	pop    ebp
  427c05:	lods   al,BYTE PTR ds:[esi]
  427c06:	leave  
  427c07:	fwait
  427c08:	test   BYTE PTR [ebp-0x75],ah
  427c0b:	cmp    eax,0xbe7e7c81
  427c10:	xchg   edx,eax
  427c11:	out    dx,al
  427c12:	lds    edx,FWORD PTR ds:0x340bf40d
  427c18:	popf   
  427c19:	xor    eax,0xd0079d0f
  427c1e:	or     dh,dh
  427c20:	hlt    
  427c21:	mov    es,edx
  427c23:	adc    eax,0x8a6fc551
  427c28:	push   0x46f7df06
  427c2d:	push   ebp
  427c2e:	dec    ecx
  427c2f:	sub    ecx,edi
  427c31:	mov    ebp,0xb47bfec
  427c36:	into   
  427c37:	jg     0x427c7c
  427c39:	cs or  eax,0x4e9fd88e
  427c3f:	jge    0x427c13
  427c41:	adc    esi,DWORD PTR [ebx]
  427c43:	scas   eax,DWORD PTR es:[edi]
  427c44:	xchg   ecx,eax
  427c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c46:	clc    
  427c47:	sbb    DWORD PTR [ebx+0x3c],esi
  427c4a:	mov    dh,0xfb
  427c4c:	and    edi,eax
  427c4e:	fistp  DWORD PTR [edx+0x3f]
  427c51:	dec    esi
  427c52:	add    bl,al
  427c54:	xchg   edx,eax
  427c55:	jmp    0x427c01
  427c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c58:	loop   0x427c72
  427c5a:	mov    bl,BYTE PTR [ebp+ecx*4-0x5ebf552b]
  427c61:	test   al,0xf9
  427c63:	or     eax,esp
  427c65:	and    dl,ch
  427c67:	jle    0x427bf0
  427c69:	imul   ebp,ebp,0xffffffe1
  427c6c:	(bad)  
  427c6d:	mov    ebp,0xabe84d28
  427c72:	pop    esp
  427c73:	enter  0x401c,0xa3
  427c77:	fwait
  427c78:	xor    DWORD PTR [ebx-0x74dde82b],0x65e939a9
  427c82:	rep ins DWORD PTR es:[edi],dx
  427c84:	lock sub DWORD PTR [ebp-0xc76ff5],ecx
  427c8b:	mov    eax,DWORD PTR [ecx]
  427c8d:	adc    DWORD PTR [ecx+0x68],edi
  427c90:	jne    0x427c65
  427c92:	pop    eax
  427c93:	pushf  
  427c94:	push   esp
  427c95:	adc    DWORD PTR [ebx],edx
  427c97:	and    al,BYTE PTR [esi+0x1283b9d4]
  427c9d:	mov    esi,0x46998d2a
  427ca2:	retf   
  427ca3:	and    dl,ch
  427ca5:	repz xor al,0xe0
  427ca8:	ret    0x7783
  427cab:	add    DWORD PTR [ebx-0x4192baca],esi
  427cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cb2:	aad    0x19
  427cb4:	and    eax,0x20cceee4
  427cb9:	adc    eax,0xc3cf0f81
  427cbe:	pop    ds
  427cbf:	or     BYTE PTR ds:0x9b322f14,0x43
  427cc6:	in     al,0x1b
  427cc8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  427cca:	push   es
  427ccb:	or     esi,esi
  427ccd:	mov    al,ds:0x84d5be7
  427cd2:	adc    al,0x25
  427cd4:	repz push ebx
  427cd6:	call   0xf2ef:0x44b2b640
  427cdd:	mov    eax,0xb485ab2c
  427ce2:	xor    ah,0x55
  427ce5:	(bad)  
  427ce6:	pop    ds
  427ce7:	xor    bl,BYTE PTR [eax]
  427ce9:	enter  0x4c86,0xf1
  427ced:	inc    edx
  427cee:	leave  
  427cef:	icebp  
  427cf0:	mov    ds:0xaf57a6ac,al
  427cf5:	mov    WORD PTR [edi+edx*2-0x5b],es
  427cf9:	mov    BYTE PTR [ebx-0x4b39d50c],0xf3
  427d00:	adc    BYTE PTR [eax+0x66],ch
  427d03:	cmp    BYTE PTR [eax+0x22],0x88
  427d07:	jge    0x427d48
  427d09:	mov    edx,DWORD PTR [eax]
  427d0b:	scas   al,BYTE PTR es:[edi]
  427d0c:	or     esp,DWORD PTR [esi]
  427d0e:	dec    ebp
  427d0f:	nop
  427d10:	adc    al,0x38
  427d12:	data16 pushw 0x55df
  427d17:	or     al,BYTE PTR [eax+0x208eb738]
  427d1d:	adc    ebp,edi
  427d1f:	sub    BYTE PTR [ecx+esi*8],ah
  427d22:	fwait
  427d23:	call   0x2f64dfbd
  427d28:	sub    esp,edi
  427d2a:	mov    bh,0xf9
  427d2c:	sub    ebx,DWORD PTR [edi+ebp*4+0x45]
  427d30:	cmp    BYTE PTR [ebx-0x7fef255b],bl
  427d36:	ret    0x4076
  427d39:	inc    esi
  427d3a:	pop    eax
  427d3b:	jl     0x427d1c
  427d3d:	pop    edi
  427d3e:	adc    al,0xb9
  427d40:	div    ch
  427d42:	cmp    bl,dh
  427d44:	adc    esi,esp
  427d46:	cld    
  427d47:	stc    
  427d48:	add    DWORD PTR [ecx+0x5e77a072],0xffffffe8
  427d4f:	setns  BYTE PTR [edi-0x5623140f]
  427d56:	sbb    ebp,ebp
  427d58:	idiv   BYTE PTR [ecx+0xb]
  427d5b:	cwde   
  427d5c:	sti    
  427d5d:	pop    ds
  427d5e:	repz shl BYTE PTR [ebx+0x42],0xb6
  427d63:	fmul   DWORD PTR [eax-0x5ff16bad]
  427d69:	jmp    0x427d7a
  427d6b:	mov    ds:0xe1ad2113,eax
  427d70:	mov    edi,0xcaebdc6
  427d75:	stc    
  427d76:	sub    dh,BYTE PTR [ebx+0x2f]
  427d79:	test   DWORD PTR [eax-0x21284996],eax
  427d7f:	cld    
  427d80:	mov    WORD PTR [eax+0x29],?
  427d83:	iret   
  427d84:	out    dx,al
  427d85:	cmp    edi,DWORD PTR [edi+esi*1]
  427d88:	ror    BYTE PTR [edx+edx*4+0x7c],1
  427d8c:	or     eax,0x1d01a5d6
  427d91:	fidivr DWORD PTR [ecx-0x2f0f6f77]
  427d97:	fst    st(4)
  427d99:	cmp    eax,0xcee1e709
  427d9e:	cwde   
  427d9f:	into   
  427da0:	push   DWORD PTR [edi+0x68]
  427da3:	xchg   edi,eax
  427da4:	adc    al,0xb5
  427da6:	das    
  427da7:	cmc    
  427da8:	pop    ss
  427da9:	pop    ss
  427daa:	ror    bh,cl
  427dac:	xor    al,0xcc
  427dae:	ins    DWORD PTR es:[edi],dx
  427daf:	jae    0x427df0
  427db1:	xchg   ebx,eax
  427db2:	mov    eax,0x9a561728
  427db7:	cld    
  427db8:	add    al,0xfa
  427dba:	add    ebx,DWORD PTR [ebx]
  427dbc:	mov    edi,DWORD PTR ds:[edx+0x14]
  427dc0:	adc    al,0x10
  427dc2:	or     DWORD PTR [edx],ebp
  427dc4:	cs xchg ebx,eax
  427dc6:	jb     0x427db1
  427dc8:	pmaddwd mm6,mm5
  427dcb:	bnd jbe 0x427dd2
  427dce:	jmp    0x3ec1:0x15f11853
  427dd5:	add    eax,0xc0526150
  427dda:	mov    bl,0x44
  427ddc:	pusha  
  427ddd:	xchg   ebp,eax
  427dde:	sbb    DWORD PTR [ebx-0x7fbe7573],esp
  427de4:	xchg   edi,eax
  427de5:	or     eax,0x4a86014c
  427dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427deb:	xchg   BYTE PTR [ebx-0x4c584d38],al
  427df1:	pop    ecx
  427df2:	push   edi
  427df3:	rcl    BYTE PTR [ebp-0x1657d1ec],cl
  427df9:	addr16 xor al,0x8f
  427dfc:	cld    
  427dfd:	inc    esi
  427dfe:	in     al,0x75
  427e00:	data16 mul BYTE PTR [ebx]
  427e03:	int    0x1
  427e05:	push   esi
  427e06:	shl    BYTE PTR ds:0xe0ed4e09,1
  427e0c:	add    DWORD PTR [ebx],esi
  427e0e:	enter  0x217e,0xc8
  427e12:	mov    al,0x9f
  427e14:	mov    bh,0x41
  427e16:	ss xchg ebp,eax
  427e18:	test   al,0xb7
  427e1a:	push   0x5d
  427e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e1d:	sti    
  427e1e:	add    BYTE PTR [esi+esi*2+0x27],dh
  427e22:	sub    BYTE PTR [esi+0x3457523d],0x74
  427e29:	loopne 0x427e59
  427e2b:	fld    QWORD PTR [ecx-0x7aa81885]
  427e31:	les    eax,FWORD PTR [edi-0xd]
  427e34:	out    dx,eax
  427e35:	sbb    eax,DWORD PTR [edx-0x51]
  427e38:	xchg   ecx,eax
  427e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e3a:	inc    edi
  427e3b:	cli    
  427e3c:	jecxz  0x427e78
  427e3e:	mov    ah,0xad
  427e40:	mov    ecx,0x57f757c3
  427e45:	fistp  QWORD PTR [esi-0x40]
  427e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e49:	inc    edx
  427e4a:	jns    0x427e60
  427e4c:	in     eax,0xaa
  427e4e:	outs   dx,BYTE PTR ds:[esi]
  427e4f:	retf   
  427e50:	mov    ds:0x45ef4091,al
  427e55:	push   ecx
  427e56:	mov    ah,0xc0
  427e58:	add    edx,DWORD PTR [edx-0x58a0671b]
  427e5e:	in     al,0xf4
  427e60:	mov    esp,0xefe759a0
  427e65:	adc    dh,bl
  427e67:	mov    esi,0x7a3fceeb
  427e6c:	stos   BYTE PTR es:[edi],al
  427e6d:	pop    edi
  427e6e:	cwde   
  427e6f:	cmp    al,BYTE PTR [eax-0x59]
  427e72:	xor    BYTE PTR ds:0xfe14221f,al
  427e78:	add    DWORD PTR [ebp+eax*8-0x6f02b10c],edi
  427e7f:	repnz dec ebp
  427e81:	mov    BYTE PTR ds:0xefcbe315,cl
  427e87:	(bad)  
  427e88:	sti    
  427e89:	push   cs
  427e8a:	or     al,0x54
  427e8c:	xchg   esi,eax
  427e8d:	cmp    BYTE PTR [edi+edx*2],al
  427e90:	pushf  
  427e91:	push   0xfffffffd
  427e93:	out    0x63,eax
  427e95:	pop    esp
  427e96:	ja     0x427e9f
  427e98:	push   es
  427e99:	loop   0x427e22
  427e9b:	fidiv  WORD PTR [edi]
  427e9d:	ja     0x427e20
  427e9f:	sub    al,0x60
  427ea1:	cmp    eax,0xc4a3db04
  427ea6:	mov    ds:0xdc3f8fe7,eax
  427eab:	or     ebp,DWORD PTR [esi]
  427ead:	pop    ebx
  427eae:	xchg   ebx,eax
  427eaf:	mov    al,ds:0x30a1e0bc
  427eb4:	pop    ss
  427eb5:	push   ebp
  427eb6:	mov    eax,0x6fc71030
  427ebb:	pop    edx
  427ebc:	mov    BYTE PTR [ebx+0x62896761],bh
  427ec2:	or     DWORD PTR [ebx+0x65e71e17],edx
  427ec8:	retf   0x2842
  427ecb:	and    edi,DWORD PTR [edx]
  427ecd:	cmp    al,0x48
  427ecf:	cwde   
  427ed0:	std    
  427ed1:	add    BYTE PTR [ecx+0x202829ef],bh
  427ed7:	rcr    BYTE PTR ds:0x680a0850,1
  427edd:	dec    ebx
  427ede:	div    dh
  427ee0:	stc    
  427ee1:	not    DWORD PTR [edx]
  427ee3:	xor    BYTE PTR [edi],al
  427ee5:	test   eax,0xec89ef2e
  427eea:	pop    edi
  427eeb:	add    BYTE PTR [ebx],cl
  427eed:	in     al,dx
  427eee:	nop
  427eef:	jmp    0x9b75d222
  427ef4:	inc    esp
  427ef5:	retf   0x3e3b
  427ef8:	in     al,0x36
  427efa:	mov    edi,0x16977cbd
  427eff:	leave  
  427f00:	xor    esp,DWORD PTR [edi]
  427f02:	scas   al,BYTE PTR es:[edi]
  427f03:	pop    edi
  427f04:	(bad)  
  427f05:	retf   
  427f06:	mov    esi,0x7f81184b
  427f0b:	push   esi
  427f0c:	xor    BYTE PTR [ebx-0x3],ch
  427f0f:	lahf   
  427f10:	and    BYTE PTR [eax-0x2ce595a4],0x34
  427f17:	cs jle 0x427eec
  427f1a:	test   dh,cl
  427f1c:	out    0xd3,al
  427f1e:	mov    ebp,0x251066f4
  427f23:	jmp    0x427f9a
  427f25:	add    al,0x34
  427f27:	inc    ebx
  427f29:	or     DWORD PTR [ebp+0x1b],edx
  427f2c:	shl    DWORD PTR [edx],0xd3
  427f2f:	mov    eax,0x4bd0c01c
  427f34:	test   al,0xb
  427f36:	test   DWORD PTR ds:0x2e22723,0x4312c356
  427f40:	rcl    DWORD PTR [edi+0x7f],cl
  427f43:	xchg   edx,eax
  427f44:	rcl    BYTE PTR [edi+0x6b],cl
  427f47:	gs data16 aam 0xfa
  427f4b:	prefetchwt1 BYTE PTR ds:[ebp-0x6d]
  427f50:	sahf   
  427f51:	(bad)  
  427f52:	or     eax,ebp
  427f54:	(bad)  
  427f55:	dec    edi
  427f56:	call   0x1881:0x8f671d91
  427f5d:	scas   al,BYTE PTR es:[edi]
  427f5e:	in     eax,dx
  427f5f:	stos   BYTE PTR es:[edi],al
  427f60:	pop    esp
  427f61:	xchg   edx,eax
  427f62:	fadd   DWORD PTR [edi+edx*4]
  427f65:	xchg   ebp,eax
  427f66:	jmp    0xc8b2:0xd09f9666
  427f6d:	bound  esp,QWORD PTR [eax+0x17]
  427f70:	lds    edx,FWORD PTR [edx-0x7]
  427f73:	fistp  DWORD PTR ss:[eax-0x8f59515]
  427f7a:	ret    0xa6b8
  427f7d:	loop   0x427ff4
  427f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f80:	das    
  427f81:	loope  0x427f4b
  427f83:	loopne 0x427fd9
  427f85:	mov    eax,DWORD PTR [ebx+eiz*2-0x55bcf61]
  427f8c:	(bad)  
  427f8d:	cwde   
  427f8e:	call   0x8b97:0xb626248b
  427f95:	iret   
  427f96:	mov    ds:0x28e95fac,eax
  427f9b:	jb     0x428014
  427f9d:	aaa    
  427f9e:	jmp    0x609407f7
  427fa3:	int    0x4e
  427fa5:	ds pop es
  427fa7:	mov    DWORD PTR [ecx-0x36],edx
  427faa:	or     DWORD PTR [eax],ebp
  427fac:	loop   0x427f97
  427fae:	iret   
  427faf:	mov    ch,0xc5
  427fb1:	add    esp,DWORD PTR [ebx-0x1346ec43]
  427fb7:	(bad)  
  427fb8:	into   
  427fb9:	inc    ecx
  427fba:	cdq    
  427fbb:	mov    ah,0x3f
  427fbd:	aam    0xda
  427fbf:	pop    esp
  427fc0:	outs   dx,BYTE PTR ds:[esi]
  427fc1:	mov    bl,0xae
  427fc3:	jmp    0x427f8b
  427fc5:	xchg   DWORD PTR [edi-0x1851c36],ebx
  427fcb:	mov    esp,0x4114e7e
  427fd0:	jnp    0x427fa8
  427fd2:	inc    ebp
  427fd3:	loope  0x427fd2
  427fd5:	ss mov esi,0x52ff280c
  427fdc:	pop    eax
  427fdd:	mov    esp,0x64cae2c6
  427fe2:	and    DWORD PTR [esi-0x64],ebp
  427fe5:	push   ecx
  427fe6:	jp     0x428004
  427fe8:	xlat   BYTE PTR ds:[ebx]
  427fe9:	or     eax,0xae654514
  427fee:	cli    
  427fef:	stos   BYTE PTR es:[edi],al
  427ff0:	leave  
  427ff1:	xchg   esp,eax
  427ff2:	retf   
  427ff3:	das    
  427ff4:	jle    0x427fe1
  427ff6:	jns    0x427fe8
  427ff8:	push   edi
  427ffa:	ds fwait
  427ffc:	fs (bad) 
  427ffe:	and    eax,0xb4b3b651
  428003:	fs bnd ret 
  428006:	stos   BYTE PTR es:[edi],al
  428007:	and    esp,DWORD PTR [ebx+0x11]
  42800a:	mov    edx,0xf7ea0eba
  42800f:	scas   al,BYTE PTR es:[edi]
  428010:	sub    al,0x3d
  428012:	scas   al,BYTE PTR es:[edi]
  428013:	xor    DWORD PTR [ebp+0x806b83f],0x7911ab1d
  42801d:	jae    0x428092
  42801f:	add    ecx,DWORD PTR [edi+0x4c]
  428022:	popf   
  428023:	pop    esi
  428024:	xor    DWORD PTR [ecx+0x27],eax
  428027:	bound  eax,QWORD PTR [eax]
  428029:	ret    0x9aec
  42802c:	mov    ds:0x11b3e169,eax
  428031:	mov    ecx,0xcd613517
  428036:	mov    al,ds:0x956ab48d
  42803b:	loop   0x42800d
  42803d:	arpl   WORD PTR [esi],dx
  42803f:	hlt    
  428040:	call   0xbc92:0x92cdfba9
  428047:	jmp    DWORD PTR [ebx-0x4e]
  42804a:	cs mov cl,0x2d
  42804d:	ret    
  42804e:	jno    0x428099
  428050:	push   esp
  428051:	adc    DWORD PTR ds:0xe0131f2e,0x86f8aa4
  42805b:	sbb    esi,DWORD PTR [ebx]
  42805d:	adc    eax,0xd1f89504
  428062:	push   ds
  428063:	aad    0x93
  428065:	xor    al,0x46
  428067:	(bad)  
  428068:	pop    ecx
  428069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42806a:	adc    DWORD PTR [ebx-0x672cc5df],ebp
  428070:	fisttp QWORD PTR [esi]
  428072:	lds    ebp,FWORD PTR [eax+0x28]
  428075:	or     al,0x9e
  428077:	fst    QWORD PTR [ecx+0x25]
  42807a:	aam    0x58
  42807c:	loopne 0x428035
  42807e:	cmp    edi,DWORD PTR [esi+0x39]
  428081:	mov    ds,WORD PTR [edx]
  428083:	pop    esp
  428084:	aam    0x50
  428086:	push   edx
  428087:	cmp    eax,0xdf052ffd
  42808c:	outs   dx,BYTE PTR ds:[esi]
  42808d:	lods   eax,DWORD PTR ds:[esi]
  42808e:	xchg   ebp,eax
  42808f:	inc    ebp
  428090:	popf   
  428091:	adc    ebp,esi
  428093:	adc    ecx,DWORD PTR [ebp+ecx*2-0x55]
  428097:	inc    eax
  428098:	jl     0x428099
  42809a:	enter  0xeda,0x5c
  42809e:	push   ss
  42809f:	mov    esi,0xfc6ebd1b
  4280a4:	dec    esi
  4280a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280a6:	popa   
  4280a7:	retf   0x8ee8
  4280aa:	inc    ebp
  4280ab:	sub    al,0xc8
  4280ad:	push   ss
  4280ae:	dec    ebx
  4280af:	neg    BYTE PTR [ebx+0x43be6741]
  4280b5:	mov    al,al
  4280b7:	adc    eax,0xbf89d199
  4280bc:	push   es
  4280bd:	sbb    dh,BYTE PTR [ecx-0x7fe274f1]
  4280c3:	mul    DWORD PTR [ebp+0xc]
  4280c6:	dec    edi
  4280c7:	mov    eax,ds:0x288fbb2b
  4280cc:	jbe    0x42806b
  4280ce:	sub    BYTE PTR [esi],dl
  4280d0:	cmp    dl,0x4c
  4280d3:	pop    es
  4280d4:	mov    bl,0xb6
  4280d6:	sbb    DWORD PTR [eax],0xffffffec
  4280d9:	ss dec esi
  4280db:	rcl    BYTE PTR [ebp-0x56],cl
  4280de:	sar    BYTE PTR [ecx+edx*1-0x76199e9c],1
  4280e5:	les    ecx,FWORD PTR [esi+0x3ab72461]
  4280eb:	jmp    0x428088
  4280ed:	mov    ah,0x24
  4280ef:	mov    dh,0xf2
  4280f1:	sub    al,0xb7
  4280f3:	mov    dh,0x6b
  4280f5:	nop
  4280f6:	cmc    
  4280f7:	pop    esi
  4280f8:	xor    esp,eax
  4280fa:	mov    dl,0x76
  4280fc:	jns    0x428156
  4280fe:	mov    eax,0xdee5ed37
  428103:	jns    0x42817f
  428105:	and    al,BYTE PTR [eax+0x3bb83808]
  42810b:	stc    
  42810c:	push   ebx
  42810d:	cwde   
  42810e:	xor    bh,BYTE PTR [edi+0xcf29a22]
  428114:	mov    ds:0x27abce8,eax
  428119:	mov    es,ecx
  42811b:	or     eax,0xf929182
  428120:	pop    es
  428121:	xor    bl,dh
  428123:	cli    
  428124:	dec    edx
  428125:	mov    DWORD PTR ds:0x384546a1,edi
  42812b:	mov    dh,0xa2
  42812d:	inc    esp
  42812e:	sbb    BYTE PTR [eax-0x2d],al
  428131:	gs dec esi
  428133:	sbb    eax,DWORD PTR [ebp+edi*2-0x13]
  428137:	adc    al,0x23
  428139:	shl    BYTE PTR [ecx+0x6a],cl
  42813c:	loop   0x428178
  42813e:	dec    esi
  42813f:	out    dx,al
  428140:	scas   al,BYTE PTR es:[edi]
  428141:	retf   
  428142:	mov    ah,0x16
  428144:	inc    eax
  428145:	adc    al,0xf7
  428147:	push   0x360a1864
  42814c:	push   edi
  42814d:	cdq    
  42814e:	in     eax,dx
  42814f:	scas   al,BYTE PTR es:[edi]
  428150:	call   0xf7a2:0x6ebc949b
  428157:	retf   0x5f3
  42815a:	and    bl,BYTE PTR [eax-0x1ddd0fd6]
  428160:	cmp    al,0x84
  428162:	pop    ebx
  428163:	ins    DWORD PTR es:[edi],dx
  428164:	push   eax
  428165:	mov    dl,0x3d
  428167:	push   esp
  428168:	ret    0x1e92
  42816b:	xor    WORD PTR [ebx-0x4b095c9f],0xd56b
  428174:	stos   BYTE PTR es:[edi],al
  428175:	jb     0x4280f8
  428177:	adc    DWORD PTR [ebx+0x21],esi
  42817a:	mov    ch,0xfe
  42817c:	xchg   edx,eax
  42817d:	xor    DWORD PTR [edx+0x6a],esi
  428180:	mov    ebx,0x6046dc47
  428185:	dec    eax
  428186:	test   al,0x24
  428188:	bound  esi,QWORD PTR [edi+0x360e5c99]
  42818e:	sbb    esi,DWORD PTR [ecx+0x2c]
  428191:	ds daa 
  428193:	xchg   esi,eax
  428194:	dec    edi
  428195:	pop    ss
  428196:	div    BYTE PTR [ebx-0x4c385007]
  42819c:	cmp    cl,BYTE PTR ds:0xab29df8a
  4281a2:	stos   BYTE PTR es:[edi],al
  4281a3:	jecxz  0x4281f3
  4281a5:	or     DWORD PTR [ebp+0x3b],esi
  4281a8:	into   
  4281a9:	and    eax,0x47ecdf6e
  4281ae:	dec    esi
  4281af:	jge    0x42820f
  4281b1:	stos   BYTE PTR es:[edi],al
  4281b2:	xor    edi,DWORD PTR [edx+0x55]
  4281b5:	sub    dh,al
  4281b7:	ins    BYTE PTR es:[edi],dx
  4281b8:	add    BYTE PTR [ecx],0x2b
  4281bb:	scas   al,BYTE PTR es:[edi]
  4281bc:	aad    0x29
  4281be:	push   edx
  4281bf:	aad    0x97
  4281c1:	or     eax,DWORD PTR [ebx+eax*2+0x51235ea8]
  4281c8:	rol    DWORD PTR [edi],0xc9
  4281cb:	arpl   WORD PTR [esp+edi*4+0x1db39053],di
  4281d2:	mov    ebp,0xc2f60af2
  4281d7:	mov    ah,0x46
  4281d9:	inc    eax
  4281da:	dec    edx
  4281db:	cli    
  4281dc:	add    al,0xd4
  4281de:	pop    esi
  4281df:	mov    ch,0x1b
  4281e1:	stos   DWORD PTR es:[edi],eax
  4281e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281e3:	lahf   
  4281e4:	ins    DWORD PTR es:[edi],dx
  4281e5:	ret    
  4281e6:	pop    ebx
  4281e7:	(bad)  
  4281e9:	xchg   esp,eax
  4281ea:	in     eax,dx
  4281eb:	jae    0x4281a6
  4281ed:	mov    cl,ah
  4281ef:	push   ebx
  4281f0:	jle    0x4281db
  4281f2:	loope  0x4281e3
  4281f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281f5:	or     BYTE PTR [esi],cl
  4281f7:	sub    al,0xe1
  4281f9:	ja     0x4281b4
  4281fb:	push   ecx
  4281fc:	and    al,0x4d
  4281fe:	mov    ebp,ebx
  428200:	leave  
  428201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428202:	aad    0x79
  428204:	jg     0x428232
  428206:	sub    bh,bh
  428208:	cmp    bl,BYTE PTR [bp+0x5b]
  42820c:	jp     0x428199
  42820e:	(bad)  
  42820f:	(bad)  
  428210:	xor    al,0x85
  428212:	cmp    BYTE PTR [esi+0x5853b1f5],al
  428218:	fistp  WORD PTR es:[ebp+0x144d64b3]
  42821f:	and    DWORD PTR [ebx+esi*4-0x3],esi
  428223:	ret    0x6e07
  428226:	stos   DWORD PTR es:[edi],eax
  428227:	cdq    
  428228:	je     0x4281fd
  42822a:	xchg   esp,eax
  42822b:	int3   
  42822c:	xor    DWORD PTR [eax],0x48763895
  428232:	sub    ah,bh
  428234:	push   es
  428235:	rcl    BYTE PTR [esi],cl
  428237:	fxch   st(1)
  428239:	adc    ebp,edx
  42823b:	pop    ss
  42823c:	setg   BYTE PTR [ebx-0x6f92403b]
  428243:	cmp    edx,DWORD PTR [edx-0x28]
  428246:	adc    ebp,esi
  428248:	dec    ebp
  428249:	cmp    bh,bl
  42824b:	adc    ch,0x5
  42824e:	(bad)
  428251:	fwait
  428252:	and    eax,0xb4c1b83
  428257:	pop    ebx
  428258:	lods   eax,DWORD PTR ds:[esi]
  428259:	adc    al,0xcc
  42825b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42825c:	pop    esi
  42825d:	jae    0x42827b
  42825f:	out    0x17,eax
  428261:	mov    es,WORD PTR [esi-0x54ddd4f2]
  428267:	push   esp
  428268:	dec    esp
  428269:	int    0x29
  42826b:	cli    
  42826c:	pop    sp
  42826e:	rcl    ebp,0x26
  428271:	jno    0x4282cb
  428273:	test   edi,edx
  428275:	nop
  428276:	sahf   
  428277:	jns    0x4282d3
  428279:	inc    edi
  42827a:	das    
  42827b:	shl    BYTE PTR [edi-0x4b],1
  42827e:	xor    eax,0x32acebe6
  428283:	jb     0x42822f
  428285:	xchg   edx,eax
  428286:	outs   dx,BYTE PTR ds:[esi]
  428287:	into   
  428288:	xor    eax,0x56ece065
  42828d:	adc    edx,DWORD PTR [edx+0x5f]
  428290:	popa   
  428291:	imul   DWORD PTR [esi+eax*4+0x54]
  428295:	aaa    
  428296:	scas   al,BYTE PTR es:[edi]
  428297:	mov    dh,0xab
  428299:	test   al,0xd
  42829b:	dec    ebx
  42829c:	std    
  42829d:	and    eax,0xdee9feba
  4282a2:	das    
  4282a3:	pop    es
  4282a4:	mov    al,ds:0x9a042b48
  4282a9:	jecxz  0x428296
  4282ab:	sub    DWORD PTR [ecx+ebx*2+0x19],ebx
  4282af:	xchg   edx,eax
  4282b0:	cmp    dh,bh
  4282b2:	outs   dx,DWORD PTR ds:[esi]
  4282b3:	jg     0x428318
  4282b5:	jno    0x428254
  4282b7:	inc    esp
  4282b8:	adc    ch,BYTE PTR [esi-0x32f91285]
  4282be:	pop    edi
  4282bf:	dec    eax
  4282c0:	jecxz  0x4282bd
  4282c2:	lods   al,BYTE PTR ds:[esi]
  4282c3:	and    DWORD PTR [ebp-0x49],0x8e68899c
  4282ca:	xchg   ebp,eax
  4282cb:	ret    0xdc1
  4282ce:	scas   al,BYTE PTR es:[edi]
  4282cf:	cdq    
  4282d0:	jne    0x428261
  4282d2:	call   0x4469dbda
  4282d7:	retf   
  4282d8:	xchg   ebx,eax
  4282d9:	jge    0x42825b
  4282db:	dec    edi
  4282dc:	mov    esi,0xa209572
  4282e1:	fldenv [ebp+0x1b87d5d4]
  4282e7:	mov    dh,0x2
  4282e9:	add    al,0x54
  4282eb:	pop    ss
  4282ec:	mov    cl,0x4e
  4282ee:	inc    eax
  4282ef:	mov    ch,0x9c
  4282f1:	lss    edx,FWORD PTR [eax-0x64]
  4282f5:	stc    
  4282f6:	test   BYTE PTR [ebp+0x6c4844cf],dh
  4282fc:	push   ebp
  4282fd:	lock inc esi
  4282ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428300:	jb     0x42834e
  428302:	cmp    DWORD PTR ss:[edx+0x67],ebx
  428306:	in     al,dx
  428307:	cmp    bh,dh
  428309:	rol    bl,1
  42830b:	out    dx,al
  42830c:	out    0x47,al
  42830e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42830f:	or     al,0xe5
  428311:	and    al,0xa3
  428313:	mov    dl,0x1f
  428315:	out    0x17,eax
  428317:	ss xchg esi,eax
  428319:	pop    esp
  42831a:	shl    BYTE PTR [eax-0x35],cl
  42831d:	mov    dh,0x67
  42831f:	sub    eax,0x929967f3
  428324:	fldcw  WORD PTR ds:0x88d207cf
  42832a:	mov    ebx,0x5a6a335d
  42832f:	push   eax
  428330:	mov    al,ds:0x8d90b566
  428335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428336:	addr16 pop ebx
  428338:	add    bl,BYTE PTR [edx+0x59262951]
  42833e:	outs   dx,BYTE PTR ds:[esi]
  42833f:	xchg   edi,eax
  428340:	mov    DWORD PTR [esi],esi
  428342:	rol    al,cl
  428344:	aam    0xb1
  428346:	ja     0x428370
  428348:	adc    al,0xf4
  42834a:	dec    esi
  42834b:	adc    BYTE PTR [eax-0x2e99cf8a],0x80
  428352:	xchg   bp,ax
  428354:	sti    
  428355:	(bad)  
  428356:	mov    ebx,0x28574f03
  42835b:	add    DWORD PTR [ebp-0x55],ecx
  42835e:	or     BYTE PTR [ecx-0x11],dl
  428361:	inc    esi
  428362:	sub    DWORD PTR [ebx+0x75],ecx
  428365:	add    DWORD PTR [eax+esi*4+0xa],esp
  428369:	shl    DWORD PTR [edi-0x80],0x97
  42836d:	inc    ecx
  42836e:	fmul   QWORD PTR [esp+esi*2-0x1a]
  428372:	sti    
  428373:	daa    
  428374:	cs jl  0x42833e
  428377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428378:	ja     0x428316
  42837a:	rcr    esi,cl
  42837c:	sub    al,0xb0
  42837e:	ins    DWORD PTR es:[edi],dx
  42837f:	xor    eax,ebx
  428381:	mov    al,0xd5
  428383:	mov    WORD PTR ds:0x6f880a21,cs
  428389:	or     esi,eax
  42838b:	lock cld 
  42838d:	(bad)  
  42838f:	adc    esp,DWORD PTR ds:0xe05d847b
  428395:	adc    BYTE PTR [ebx],bl
  428397:	xchg   ecx,eax
  428398:	out    dx,eax
  428399:	data16 fidivr WORD PTR [edx+0x46ba980c]
  4283a0:	lods   al,BYTE PTR ds:[esi]
  4283a1:	mov    ds:0xd19962e9,al
  4283a6:	rdtsc  
  4283a8:	adc    BYTE PTR [edx+0x25f866d0],0xb7
  4283af:	mov    BYTE PTR [edi-0x27befc91],dl
  4283b5:	cmp    eax,0x9e7642d2
  4283ba:	adc    eax,eax
  4283bc:	scas   eax,DWORD PTR es:[edi]
  4283bd:	add    eax,0x1637ebd9
  4283c2:	fidiv  DWORD PTR [esi-0x54]
  4283c5:	and    eax,0xf7df4959
  4283ca:	test   edx,0xc6e9b394
  4283d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283d1:	sbb    DWORD PTR [eax-0x73b4b4f4],edi
  4283d7:	popf   
  4283d8:	xchg   ecx,eax
  4283d9:	xchg   BYTE PTR [ecx-0x43],dl
  4283dc:	adc    DWORD PTR [ebx+0x5a5761c4],edi
  4283e2:	mov    ebx,0x46a5974a
  4283e7:	jno    0x42844e
  4283e9:	into   
  4283ea:	push   ebp
  4283eb:	leave  
  4283ec:	mov    ch,0xd7
  4283ee:	pop    ebx
  4283ef:	scas   al,BYTE PTR es:[edi]
  4283f0:	push   ebx
  4283f1:	and    eax,0x72216038
  4283f6:	cwde   
  4283f7:	shr    BYTE PTR [edx-0x6b],cl
  4283fa:	jle    0x428394
  4283fc:	lods   al,BYTE PTR ds:[esi]
  4283fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283fe:	mov    esi,0x68e6420a
  428403:	pop    ebx
  428404:	or     BYTE PTR [ecx],al
  428406:	(bad)  [edi]
  428408:	in     al,0x4c
  42840a:	or     al,0x33
  42840c:	xchg   edi,eax
  42840d:	and    DWORD PTR [edx+0x5f],0xffffff9e
  428411:	enter  0xb982,0x8e
  428415:	stc    
  428416:	int    0xf5
  428418:	mov    edx,0xe34339f0
  42841d:	xor    ebx,DWORD PTR [esi-0x3999eb28]
  428423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428424:	jns    0x4283ff
  428426:	cdq    
  428427:	test   DWORD PTR [ebx],esi
  428429:	aam    0x68
  42842b:	test   ebx,esi
  42842d:	and    esp,DWORD PTR [ebx]
  42842f:	(bad)
  428432:	or     cl,BYTE PTR [edi-0x49]
  428435:	cmp    bh,BYTE PTR [edi+ecx*8]
  428438:	mov    dl,0xd8
  42843a:	call   0x40d1:0xbdb0ca51
  428441:	imul   ebx,DWORD PTR [ecx-0x16],0x15
  428445:	mov    eax,ds:0xae17efaf
  42844a:	(bad)  
  42844b:	call   0x835fdc88
  428450:	fucom  st(7)
  428452:	mov    ds:0xeb37b3d7,eax
  428457:	loopne 0x4283f9
  428459:	jb     0x42843d
  42845b:	add    DWORD PTR [ebx+0x74c4092a],ebx
  428461:	js     0x4284d1
  428463:	out    0x35,al
  428465:	adc    eax,0xcd92ad84
  42846a:	xchg   edi,eax
  42846b:	pop    ds
  42846c:	jl     0x4284be
  42846e:	repnz sahf 
  428470:	in     al,0xfb
  428472:	xchg   BYTE PTR [eax-0x19104a16],cl
  428478:	loope  0x428417
  42847a:	fimul  WORD PTR [edx+0x5b]
  42847d:	adc    al,0x99
  42847f:	inc    eax
  428480:	or     al,0x73
  428482:	aas    
  428483:	and    al,0x7b
  428485:	sub    dh,0xa
  428488:	mov    al,0x5b
  42848a:	add    DWORD PTR fs:[edx],esp
  42848d:	fistp  DWORD PTR [ecx+edx*4+0x25]
  428491:	mov    dh,0xe7
  428493:	cwde   
  428494:	(bad)  
  428495:	fsub   DWORD PTR [esi-0x2d]
  428498:	xchg   edx,eax
  428499:	ja     0x4284af
  42849b:	jp     0x428473
  42849d:	sub    eax,0x6f38c609
  4284a2:	dec    ecx
  4284a3:	push   esp
  4284a4:	fs cmp cl,ah
  4284a7:	and    esi,DWORD PTR [ecx+0x34]
  4284aa:	or     BYTE PTR ds:0x36c06a70,bh
  4284b0:	jb     0x4284ce
  4284b2:	fmul   st,st(1)
  4284b4:	pop    eax
  4284b5:	pusha  
  4284b6:	mov    eax,ds:0xc37bf939
  4284bb:	jmp    0x4284e2
  4284bd:	mov    edi,0xc9730387
  4284c2:	mov    esi,ds
  4284c4:	leave  
  4284c5:	jg     0x42851e
  4284c7:	adc    BYTE PTR [ebx],ch
  4284c9:	xchg   ecx,eax
  4284ca:	mul    DWORD PTR [ebx]
  4284cc:	cmp    BYTE PTR [bx+di],dh
  4284cf:	sub    al,0x68
  4284d1:	and    eax,DWORD PTR [esi-0x687f1892]
  4284d7:	scas   eax,DWORD PTR es:[edi]
  4284d8:	shl    DWORD PTR [edx+0x6e2f9ce0],1
  4284de:	mov    WORD PTR [edi-0x23],?
  4284e1:	iret   
  4284e2:	std    
  4284e3:	jb     0x42854d
  4284e5:	push   edi
  4284e6:	mov    ss,WORD PTR [ebp-0x4c]
  4284e9:	push   es
  4284ea:	add    al,0xd0
  4284ec:	jle    0x42850e
  4284ee:	mov    dl,0x21
  4284f0:	fs push ss
  4284f2:	inc    ecx
  4284f3:	out    0x3a,eax
  4284f5:	loope  0x4284e4
  4284f7:	xchg   esi,eax
  4284f8:	jo     0x428505
  4284fa:	inc    ebp
  4284fb:	stc    
  4284fc:	mov    esp,0x801eed0f
  428501:	dec    edx
  428502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428503:	sub    bh,dh
  428505:	push   0xffffffe4
  428507:	xor    eax,0xff829707
  42850c:	es imul esp,edx,0x51c74711
  428513:	mov    ebp,0xcb3d6788
  428518:	out    0xf9,al
  42851a:	mov    esi,0x5f39ba34
  42851f:	sbb    DWORD PTR [edx-0x77823c65],ebp
  428525:	inc    ecx
  428526:	mov    cl,0x3f
  428528:	mov    eax,0x40275522
  42852d:	push   ecx
  42852e:	icebp  
  42852f:	outs   dx,DWORD PTR ds:[esi]
  428530:	dec    esp
  428531:	mov    ch,0xcd
  428533:	xor    cl,ah
  428535:	or     eax,0x50b7f103
  42853a:	fadd   st,st(3)
  42853c:	jae    0x42857c
  42853e:	inc    ecx
  42853f:	inc    ecx
  428540:	aas    
  428541:	cld    
  428542:	lds    eax,FWORD PTR [ecx]
  428544:	or     eax,0x4bd3cc72
  428549:	pop    ecx
  42854a:	jae    0x4285b8
  42854c:	mov    edi,0x5e7de68b
  428551:	stc    
  428552:	pop    es
  428553:	daa    
  428554:	push   0x730b4c64
  428559:	fdivr  DWORD PTR [esi+ebp*2+0x1c]
  42855d:	lea    esp,[ebx]
  42855f:	int3   
  428560:	push   esp
  428561:	fwait
  428562:	dec    ebx
  428563:	inc    ebx
  428564:	ret    
  428565:	(bad)  
  428566:	and    eax,0x97d1ab3
  42856b:	jle    0x4285c6
  42856d:	iret   
  42856e:	(bad)  
  42856f:	pop    ecx
  428570:	mov    al,ds:0xfe5554db
  428575:	dec    ebp
  428576:	mov    al,0xb8
  428578:	cmp    ecx,eax
  42857a:	push   es
  42857b:	and    al,0x75
  42857d:	jecxz  0x428594
  42857f:	sbb    ah,BYTE PTR [esi]
  428581:	(bad)  
  428583:	loope  0x428539
  428585:	fldenv [ebp+0x5b]
  428588:	pop    es
  428589:	clc    
  42858a:	jp     0x4285c9
  42858c:	xor    eax,0xb7e02aad
  428591:	push   0x561d8fe2
  428596:	imul   ebx,ebp,0xffffffd4
  428599:	(bad)  
  42859a:	scas   al,BYTE PTR es:[edi]
  42859b:	xor    al,0xbb
  42859d:	(bad)  
  42859e:	jmp    0x7fbcbca0
  4285a3:	add    eax,0xc68daaca
  4285a8:	sub    esi,DWORD PTR [ebx+0x77401744]
  4285ae:	retf   
  4285af:	cmp    esp,esp
  4285b1:	gs push cs
  4285b3:	xor    al,0xd6
  4285b5:	test   DWORD PTR [edx-0x5ac1528a],esi
  4285bb:	in     al,0x1
  4285bd:	adc    esp,DWORD PTR [ebx]
  4285bf:	xor    DWORD PTR ds:0xbb80c8b5,edi
  4285c5:	(bad)  
  4285c6:	arpl   dx,sp
  4285c8:	iret   
  4285c9:	mov    bh,0xed
  4285cb:	outs   dx,BYTE PTR ds:[esi]
  4285cc:	scas   eax,DWORD PTR es:[edi]
  4285cd:	data16 ins BYTE PTR es:[edi],dx
  4285cf:	int3   
  4285d0:	jmp    0x4285bb
  4285d2:	jo     0x428572
  4285d4:	pushf  
  4285d5:	imul   ecx,DWORD PTR [ecx-0x270d44e3],0x46f2f33b
  4285df:	test   al,0xb1
  4285e1:	jo     0x42859b
  4285e3:	dec    ebx
  4285e4:	mov    ?,WORD PTR [edx-0x8dc74bb]
  4285ea:	fsub   st,st(7)
  4285ec:	hlt    
  4285ed:	pop    ds
  4285ee:	jo     0x4285bb
  4285f0:	dec    edi
  4285f1:	inc    eax
  4285f2:	es jp  0x4285da
  4285f5:	aas    
  4285f6:	adc    dh,BYTE PTR [eax+edi*1+0x2e]
  4285fa:	out    dx,eax
  4285fb:	or     dh,ch
  4285fd:	call   0x42d:0x4346e6eb
  428604:	inc    ecx
  428605:	sbb    DWORD PTR [ecx+0x76],ecx
  428608:	addr16 jns 0x4285e5
  42860b:	sub    ebp,DWORD PTR [ebx]
  42860d:	outs   dx,BYTE PTR ds:[esi]
  42860e:	and    DWORD PTR [edi+0x9227bb],ebx
  428614:	inc    esp
  428615:	stc    
  428616:	imul   ebx,DWORD PTR [eax],0x35a4d016
  42861c:	adc    eax,0xfa3e094e
  428621:	aad    0x62
  428623:	imul   DWORD PTR [esp+eiz*8]
  428626:	cld    
  428627:	imul   ebx,DWORD PTR ss:[esi+ecx*1],0xffffffc9
  42862c:	xchg   DWORD PTR [edx+eax*8],ebp
  42862f:	add    DWORD PTR [edi],0xffffffe3
  428632:	mov    ch,0x5f
  428634:	mov    dl,0xa8
  428636:	fs pop edi
  428638:	mov    eax,0xe8574e4
  42863d:	add    dl,dh
  42863f:	outs   dx,DWORD PTR ds:[esi]
  428640:	jns    0x428619
  428642:	and    al,0x8f
  428644:	dec    eax
  428645:	ins    BYTE PTR es:[edi],dx
  428646:	jb     0x428687
  428648:	jae    0x428674
  42864a:	cmp    DWORD PTR ds:0xed6f8aa3,ecx
  428650:	jbe    0x428641
  428652:	ss dec edi
  428654:	mov    ds:0x899db7ac,al
  428659:	sbb    eax,0x8cebecf7
  42865e:	rol    DWORD PTR [ebx+0x38],1
  428661:	(bad)  
  428662:	push   edi
  428663:	push   cs
  428664:	outs   dx,DWORD PTR ds:[esi]
  428665:	or     al,0xe0
  428667:	stc    
  428668:	test   BYTE PTR [ebx],bl
  42866a:	js     0x428618
  42866c:	and    bl,BYTE PTR [esi]
  42866e:	cld    
  42866f:	xchg   esi,eax
  428670:	aam    0xf
  428672:	add    al,0x6b
  428674:	std    
  428675:	fwait
  428676:	(bad)  
  428677:	lahf   
  428678:	in     al,0x7
  42867a:	bswap  esi
  42867c:	stos   BYTE PTR es:[edi],al
  42867d:	out    0x53,al
  42867f:	(bad)  
  428680:	mov    dh,0xc0
  428682:	adc    ah,0x59
  428685:	add    ecx,DWORD PTR [edx-0x4e]
  428688:	mov    ds:0x933909a4,eax
  42868d:	xchg   DWORD PTR [ebp-0x2ebe25b3],eax
  428693:	loopne 0x428703
  428695:	push   DWORD PTR [esi+0x45301274]
  42869b:	xchg   edi,eax
  42869c:	push   0xfffffff9
  42869e:	cs cwde 
  4286a0:	jbe    0x4286e9
  4286a2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286a4:	ret    0x491
  4286a7:	xor    eax,0x567827b8
  4286ac:	push   ds
  4286ad:	jge    0x428723
  4286af:	dec    esi
  4286b0:	mov    al,ds:0x3383851a
  4286b5:	add    eax,0x961fc3ef
  4286ba:	pop    ebx
  4286bb:	enter  0x72ce,0x41
  4286bf:	push   ss
  4286c0:	rcl    BYTE PTR [ebp+0x4a],1
  4286c3:	arpl   WORD PTR ds:[edx],dx
  4286c6:	adc    eax,0xed387785
  4286cb:	jb     0x4286d2
  4286cd:	in     eax,0x4d
  4286cf:	cmp    ah,BYTE PTR [ebx+0x2d]
  4286d2:	fimul  WORD PTR [ebp+0x2ed38f7d]
  4286d8:	jmp    0x92e0:0xc43a7d9b
  4286df:	xor    dh,dl
  4286e1:	(bad)
  4286e4:	fidivr DWORD PTR [ebx]
  4286e6:	inc    eax
  4286e7:	jmp    0x1179:0xdbce7cf3
  4286ee:	xchg   edx,eax
  4286ef:	pop    es
  4286f0:	inc    ecx
  4286f1:	shl    BYTE PTR [edi],1
  4286f3:	shr    DWORD PTR [ebx+0x38e2e07d],cl
  4286f9:	mov    ds:0x9d3e8d,eax
  4286fe:	xchg   esp,eax
  4286ff:	or     dl,dl
  428701:	mov    eax,ds:0x62909568
  428706:	test   esp,ebx
  428708:	out    0xb2,eax
  42870a:	imul   edx,DWORD PTR [esi-0x4ffe722e],0x9
  428711:	call   0xae39025c
  428716:	xchg   edi,eax
  428717:	dec    ebp
  428718:	xchg   BYTE PTR [edx+ebx*2-0x4fd94ca9],cl
  42871f:	push   esi
  428720:	pop    ecx
  428721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428722:	inc    edi
  428723:	jb     0x42879e
  428725:	inc    BYTE PTR [edx-0x6d8e0882]
  42872b:	xor    DWORD PTR [edi],ecx
  42872d:	arpl   si,bp
  42872f:	repz in al,dx
  428731:	in     al,0xd3
  428733:	imul   esi,DWORD PTR [ecx+0x53],0xa2788b20
  42873a:	scas   eax,DWORD PTR es:[edi]
  42873b:	xor    BYTE PTR [edi-0x3f],ah
  42873e:	stos   DWORD PTR es:[edi],eax
  42873f:	mov    WORD PTR [ebx+0x16821de3],fs
  428745:	enter  0xf888,0x4a
  428749:	out    dx,al
  42874a:	(bad)  
  42874b:	out    dx,al
  42874c:	scas   eax,DWORD PTR es:[edi]
  42874d:	push   0x25d889a0
  428752:	jmp    0xa64:0xc6f0e537
  428759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42875a:	xchg   BYTE PTR [ebp+0x5a],al
  42875d:	xchg   ecx,eax
  42875e:	mov    eax,ds:0x8c1444f6
  428763:	fdivr  QWORD PTR [ebx+ecx*2]
  428766:	inc    ebp
  428767:	xchg   edx,eax
  428768:	pop    edi
  428769:	or     BYTE PTR [edi+esi*1],0x74
  42876d:	jmp    0x3b9a:0x2afd9928
  428774:	(bad)  
  428775:	ds retf 0xe940
  428779:	or     eax,0x269f4c3b
  42877e:	mov    bh,0xa5
  428780:	adc    eax,0xc68b7fc9
  428785:	call   0x2588:0xed10a3d7
  42878c:	dec    edi
  42878d:	out    dx,al
  42878e:	jae    0x428734
  428790:	mov    cl,0x3
  428792:	mov    esp,0x796f1695
  428797:	addr16 loope 0x4287d0
  42879a:	mov    ebx,0xe8a87d6d
  42879f:	aas    
  4287a0:	dec    esi
  4287a1:	and    BYTE PTR [edx-0x78],ah
  4287a4:	xchg   edi,eax
  4287a5:	aaa    
  4287a6:	fadd   st(7),st
  4287a8:	shl    DWORD PTR gs:[ecx],1
  4287ab:	pop    ds
  4287ac:	fcmovu st,st(4)
  4287ae:	add    eax,DWORD PTR [eax-0x80]
  4287b1:	xor    bh,dl
  4287b3:	gs push ecx
  4287b5:	pop    ebx
  4287b6:	or     cl,BYTE PTR [ecx-0x761e2863]
  4287bc:	push   eax
  4287bd:	push   ss
  4287be:	add    al,BYTE PTR [ebp+0x75]
  4287c1:	mov    edx,0x959931e
  4287c6:	jns    0x4287a4
  4287c8:	jb     0x428818
  4287ca:	xor    DWORD PTR [esp+ecx*2+0x36],edx
  4287ce:	push   ecx
  4287cf:	sbb    eax,0xd834c87b
  4287d4:	sbb    al,0xd3
  4287d6:	mov    DWORD PTR [bp+di-0xaab],ebx
  4287db:	shl    BYTE PTR [esi],1
  4287dd:	xchg   ecx,eax
  4287de:	mov    ebx,0x6e0fea5
  4287e3:	(bad)  
  4287e4:	rcr    DWORD PTR [edi*1-0x4babafc0],1
  4287eb:	test   al,0xcb
  4287ed:	mov    esi,0xbb253f34
  4287f2:	jb     0x428802
  4287f4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287f6:	aas    
  4287f7:	pop    ebx
  4287f8:	push   es
  4287f9:	clc    
  4287fa:	push   ecx
  4287fb:	imul   eax,edx,0xffffffc8
  4287fe:	cmp    BYTE PTR [ecx+0x7],cl
  428801:	sbb    DWORD PTR [ecx+0x64],ebx
  428804:	push   ebp
  428805:	pop    eax
  428806:	mov    bl,0xd6
  428808:	dec    esp
  428809:	mov    ebp,0x3ad7a64f
  42880e:	xchg   ebx,eax
  42880f:	lds    ebx,FWORD PTR [ecx-0x4a]
  428812:	sub    BYTE PTR [edi*2-0x4e84d849],bl
  428819:	xchg   BYTE PTR [ebp+0x72fdf018],cl
  42881f:	push   0x552ac55
  428824:	xor    eax,0x18ac3818
  428829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42882a:	psrlw  mm3,mm7
  42882d:	int3   
  42882e:	daa    
  42882f:	mov    ah,0x57
  428831:	ss jg  0x428894
  428834:	jno    0x428870
  428836:	and    edi,DWORD PTR [eax+0x47]
  428839:	add    eax,0x208a36cd
  42883e:	(bad)  
  428840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428841:	push   ecx
  428842:	enter  0x8c18,0x7
  428846:	and    cl,al
  428848:	xor    dh,BYTE PTR [esi]
  42884a:	inc    esi
  42884b:	repz mov esi,0x3a4616b
  428851:	push   0xee2a59c4
  428856:	jecxz  0x4287f2
  428858:	or     dh,BYTE PTR [edx]
  42885a:	cmp    al,0x1a
  42885c:	aas    
  42885d:	fdiv   QWORD PTR [edi]
  42885f:	or     ah,BYTE PTR [edi]
  428861:	mov    eax,0xa73ad8a9
  428866:	push   es
  428867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428868:	pop    edx
  428869:	fcom   QWORD PTR [ebp-0x53]
  42886c:	dec    esp
  42886d:	fdiv   DWORD PTR [ebx+0xd]
  428870:	or     DWORD PTR [edx],0xd18cdc8e
  428876:	shr    DWORD PTR [ebx-0xa],0x33
  42887a:	xor    eax,DWORD PTR [ecx+0x3eb450e9]
  428880:	xchg   ecx,eax
  428881:	sbb    BYTE PTR [edx],dh
  428883:	lods   eax,DWORD PTR ds:[esi]
  428884:	dec    ebx
  428885:	das    
  428886:	fcmovu st,st(0)
  428888:	push   ss
  428889:	inc    esp
  42888a:	out    0xc0,al
  42888c:	lock adc DWORD PTR ss:[edi+0x13c148c0],eax
  428894:	shl    dl,cl
  428896:	pop    ss
  428897:	xchg   ebx,eax
  428898:	add    DWORD PTR [ebp-0x70],esp
  42889b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42889d:	(bad)  
  42889e:	jmp    DWORD PTR [ebx]
  4288a0:	out    0x2f,al
  4288a2:	jo     0x428917
  4288a4:	xor    al,0x3b
  4288a6:	inc    esi
  4288a7:	pop    ebp
  4288a8:	dec    ebx
  4288a9:	ficom  WORD PTR [esi+0x3938c3b3]
  4288af:	or     dl,dh
  4288b1:	imul   eax,esp,0x2f58bf51
  4288b7:	and    eax,0x335373d0
  4288bc:	jmp    0xa2c:0x171f3f8f
  4288c3:	inc    eax
  4288c4:	mov    cl,0xef
  4288c6:	xchg   esp,eax
  4288c7:	sbb    DWORD PTR [ebp-0x7],esp
  4288ca:	lock data16 or dl,BYTE PTR [ecx+0x1f]
  4288cf:	jmp    0x42893a
  4288d1:	loope  0x428934
  4288d3:	pop    edx
  4288d4:	call   0xc921:0x1554ebba
  4288db:	push   edx
  4288dc:	sbb    al,0x98
  4288de:	inc    edi
  4288df:	aas    
  4288e0:	fmulp  st(3),st
  4288e2:	scas   eax,DWORD PTR es:[edi]
  4288e3:	ret    
  4288e4:	rcl    BYTE PTR [edx+0x48269c9d],cl
  4288ea:	jae    0x4288db
  4288ec:	ret    0x2cd9
  4288ef:	pushf  
  4288f0:	mov    ch,BYTE PTR [ebx-0x301da355]
  4288f6:	mov    ecx,0x8b936c08
  4288fb:	adc    al,0x8b
  4288fd:	cmp    BYTE PTR [ebp+esi*2+0x6f],dl
  428901:	lahf   
  428902:	or     eax,0xdb90bd40
  428907:	xor    ecx,DWORD PTR [edx]
  428909:	jbe    0x4288bc
  42890b:	xor    BYTE PTR [edx+0x5b],0x77
  42890f:	pop    eax
  428910:	push   eax
  428911:	ins    DWORD PTR es:[edi],dx
  428912:	fld    QWORD PTR [ebx-0x11]
  428915:	adc    DWORD PTR [edx-0x5d],esi
  428918:	jae    0x4288f9
  42891a:	daa    
  42891b:	mov    eax,0xa695fe7c
  428920:	mov    fs:0x56ea319c,eax
  428926:	pop    ecx
  428927:	sub    al,0xbc
  428929:	pusha  
  42892a:	pop    edx
  42892b:	in     al,0xf4
  42892d:	xor    al,0x86
  42892f:	loopne 0x4288b3
  428931:	mov    eax,ds:0x6c9c5b17
  428936:	inc    esi
  428937:	push   edx
  428938:	test   BYTE PTR [edi-0x7c],bl
  42893b:	into   
  42893c:	jge    0x42891a
  42893e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42893f:	scas   al,BYTE PTR es:[edi]
  428940:	sbb    eax,0xe86cc4e6
  428945:	sbb    eax,DWORD PTR [esi-0x6d7cadd8]
  42894b:	inc    esi
  42894c:	scas   al,BYTE PTR es:[edi]
  42894d:	adc    DWORD PTR [ebp-0xbe469e5],ebp
  428953:	inc    ebx
  428954:	or     DWORD PTR ds:0x43641f02,ebp
  42895a:	or     bl,0xbb
  42895d:	inc    bh
  42895f:	mov    ah,0xd1
  428961:	in     eax,dx
  428962:	jecxz  0x428948
  428964:	test   al,0x84
  428966:	gs add ch,bh
  428969:	mov    cl,0x6b
  42896b:	ins    BYTE PTR es:[edi],dx
  42896c:	sbb    al,0x3
  42896e:	ins    DWORD PTR es:[edi],dx
  42896f:	and    esi,DWORD PTR [ecx]
  428971:	retf   0x6168
  428974:	pop    ds
  428975:	push   edx
  428976:	sbb    DWORD PTR [edx],esi
  428978:	hlt    
  428979:	cmp    esi,ebp
  42897b:	inc    edx
  42897c:	sar    DWORD PTR [esi],cl
  42897e:	xchg   ecx,eax
  42897f:	mov    eax,0x7afe2d95
  428984:	retf   0xb6cf
  428987:	call   0x7ccf:0x3bd2704e
  42898e:	pushf  
  42898f:	pop    ds
  428990:	xor    eax,0x33b12f47
  428995:	lea    ebx,[edx+0x171881f5]
  42899b:	cmp    BYTE PTR [ecx+ecx*4-0x50eb83c0],0xe8
  4289a3:	jg     0x428982
  4289a5:	cmp    eax,0x5d1d0cf2
  4289aa:	jle    0x428958
  4289ac:	sub    bh,BYTE PTR fs:0x3e895806
  4289b3:	out    0x8d,eax
  4289b5:	stc    
  4289b6:	js     0x428949
  4289b8:	iret   
  4289b9:	mov    gs,edi
  4289bb:	xchg   si,ax
  4289bd:	xchg   BYTE PTR [edi-0xc199085],cl
  4289c3:	test   eax,0x1fba5054
  4289c8:	sub    DWORD PTR [esi+esi*1-0xb94785c],ebp
  4289cf:	or     eax,DWORD PTR [edi+0x2c]
  4289d2:	mov    ah,0xff
  4289d4:	add    eax,0xad3b6cde
  4289d9:	repz fstp DWORD PTR [ebx+eiz*1]
  4289de:	jmp    0x52ee:0xa6dcaf1b
  4289e5:	retf   
  4289e6:	jb     0x428a4d
  4289e8:	sub    al,0xb9
  4289ea:	add    ebp,ebp
  4289ec:	shl    BYTE PTR [eax+0x548ef2e2],1
  4289f2:	es out dx,al
  4289f4:	pop    ss
  4289f5:	mov    ecx,DWORD PTR [ebp-0x319a2818]
  4289fb:	mov    eax,0xcbf8c90b
  428a00:	loop   0x428a6c
  428a02:	shl    DWORD PTR [ebx],0x86
  428a05:	push   ecx
  428a06:	xor    BYTE PTR [edx-0x20],bl
  428a09:	dec    ebx
  428a0a:	(bad)  
  428a0c:	or     bl,BYTE PTR [ebp-0x6]
  428a0f:	push   eax
  428a10:	cmp    bh,BYTE PTR [esi+0x33c3b513]
  428a16:	mov    WORD PTR [ecx+0x15],gs
  428a19:	xor    eax,0x9a0e3d2b
  428a1e:	test   BYTE PTR ds:0x30b69213,0x94
  428a25:	cli    
  428a26:	inc    edi
  428a27:	stc    
  428a28:	push   0xc364f710
  428a2d:	sub    cl,al
  428a2f:	mov    esp,0xed97c41b
  428a34:	jno    0x428a0a
  428a36:	xchg   ecx,eax
  428a37:	and    al,BYTE PTR [esp+esi*4]
  428a3a:	cmp    DWORD PTR [edx],eax
  428a3c:	jbe    0x428ab5
  428a3e:	loop   0x428aa4
  428a40:	xchg   ecx,eax
  428a41:	mov    ch,0x12
  428a43:	sbb    eax,0x50807511
  428a48:	cwde   
  428a49:	es gs mov eax,eax
  428a4d:	cdq    
  428a4e:	(bad)
  428a51:	mov    al,0xf4
  428a53:	rcr    BYTE PTR [ebp+0x32],1
  428a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a57:	xchg   esp,eax
  428a58:	mov    esp,0x85bf8064
  428a5d:	shr    DWORD PTR [ebp+0x23193ec7],0x5f
  428a64:	mov    ebx,0xb7d75fd5
  428a69:	dec    ecx
  428a6a:	xor    DWORD PTR [ebx],ebx
  428a6c:	sub    BYTE PTR [eax-0x5de51a64],bh
  428a72:	sub    ebp,eax
  428a74:	add    eax,edx
  428a76:	mov    al,BYTE PTR [esi]
  428a78:	pop    edx
  428a79:	aam    0xf8
  428a7b:	xchg   bl,dh
  428a7d:	out    dx,al
  428a7e:	sbb    DWORD PTR [ebp+0x2f],ebx
  428a81:	pop    edx
  428a82:	(bad)  
  428a83:	leave  
  428a84:	mov    eax,ds:0xdc794821
  428a89:	stc    
  428a8a:	jmp    0x37bf4c6
  428a8f:	inc    eax
  428a90:	sahf   
  428a91:	mov    al,0x93
  428a93:	test   BYTE PTR [edx],cl
  428a95:	inc    ecx
  428a96:	call   0x5d16:0xb7f25dab
  428a9d:	mov    esp,DWORD PTR [ebx]
  428a9f:	js     0x428ab5
  428aa1:	add    al,0x80
  428aa3:	outs   dx,BYTE PTR ds:[esi]
  428aa4:	ss jecxz 0x428af0
  428aa7:	int    0xe6
  428aa9:	push   esp
  428aaa:	add    BYTE PTR [ebx+0x583a42f1],ch
  428ab0:	clc    
  428ab1:	or     DWORD PTR [ebp-0x7e],eax
  428ab4:	cld    
  428ab5:	pop    esp
  428ab6:	mov    bl,0xbb
  428ab8:	or     al,0x99
  428aba:	or     al,0x6b
  428abc:	jns    0x428acd
  428abe:	dec    esi
  428abf:	aam    0x0
  428ac1:	fild   QWORD PTR [edx]
  428ac3:	sub    BYTE PTR gs:[eax-0x49],ch
  428ac7:	imul   ecx,DWORD PTR [ebp-0x53],0x78486790
  428ace:	repnz sbb esi,esi
  428ad1:	shr    BYTE PTR [edi+0xa600d4b],0xbd
  428ad8:	lea    eax,[ecx]
  428ada:	xor    eax,0x2559c135
  428adf:	jne    0x428acc
  428ae1:	mov    eax,ds:0x796cf89f
  428ae6:	dec    esp
  428ae7:	or     al,0xcb
  428ae9:	das    
  428aea:	push   esi
  428aeb:	cmp    DWORD PTR [ecx-0x3b980ae7],0xfffffffd
  428af2:	and    DWORD PTR [edi],ecx
  428af4:	ja     0x428a8c
  428af6:	(bad)  
  428af7:	sbb    DWORD PTR [edx+0x58],edx
  428afa:	mov    edx,0x24a2b85f
  428aff:	pop    ds
  428b00:	cmp    BYTE PTR [edx+0x55],dl
  428b03:	enter  0xca6f,0x8b
  428b07:	jp     0x428a8c
  428b09:	int    0xb6
  428b0b:	int3   
  428b0c:	shl    eax,0x2a
  428b0f:	imul   ebp,DWORD PTR [eax-0x56],0x27
  428b13:	xchg   ax,ax
  428b15:	repnz rcl BYTE PTR [ebp+0xa7fb75b],0xad
  428b1d:	push   ecx
  428b1e:	repz mov al,0x5a
  428b21:	lock test eax,0xb779ae23
  428b27:	leave  
  428b28:	aaa    
  428b29:	lock mov ah,0xc4
  428b2c:	inc    eax
  428b2d:	loop   0x428b2c
  428b2f:	sub    cl,0x57
  428b32:	push   es
  428b33:	outs   dx,BYTE PTR ds:[esi]
  428b34:	dec    esi
  428b35:	push   ebp
  428b36:	pop    esp
  428b37:	nop
  428b38:	inc    ebp
  428b39:	mov    cl,0xf5
  428b3b:	(bad)  
  428b3c:	out    0x7b,al
  428b3e:	dec    eax
  428b3f:	das    
  428b40:	and    DWORD PTR [ebp+0x9d7a23d],eax
  428b46:	pop    ebx
  428b47:	bound  esi,QWORD PTR [edi-0x5f]
  428b4a:	cld    
  428b4b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  428b4d:	fwait
  428b4e:	gs aas 
  428b50:	outs   dx,DWORD PTR ds:[esi]
  428b51:	in     al,dx
  428b52:	jmp    0x50682e81
  428b57:	or     al,0x51
  428b59:	push   ss
  428b5a:	sub    eax,0x7dc85a4c
  428b5f:	xchg   ebp,eax
  428b60:	and    ebx,DWORD PTR [esi]
  428b62:	mov    al,gs:0x42ec4953
  428b68:	out    dx,eax
  428b69:	jl     0x428b58
  428b6b:	inc    ebx
  428b6c:	dec    ebx
  428b6d:	dec    edi
  428b6e:	(bad)  
  428b6f:	std    
  428b70:	jo     0x428b31
  428b72:	nop
  428b73:	stc    
  428b74:	xchg   esp,eax
  428b75:	lds    edi,FWORD PTR [edx+ecx*1]
  428b78:	ds xchg edi,eax
  428b7a:	pop    ebp
  428b7b:	xor    ch,BYTE PTR [ebp+eiz*2+0x27]
  428b7f:	scas   al,BYTE PTR es:[edi]
  428b80:	cmp    dh,0x44
  428b83:	test   BYTE PTR ds:0x46554a65,bh
  428b89:	out    0x41,eax
  428b8b:	mov    cl,0xfb
  428b8d:	loop   0x428b2a
  428b8f:	mov    ah,0xbb
  428b91:	fadd   QWORD PTR [edx-0x433e0c4d]
  428b97:	push   es
  428b98:	add    DWORD PTR [ebp+0x27],0x56
  428b9c:	xor    eax,DWORD PTR ds:0xab45dae7
  428ba2:	(bad)  
  428ba3:	jmp    0x428b9d
  428ba5:	fdiv   DWORD PTR [esi+0x66faa25e]
  428bab:	iret   
  428bac:	push   0xffffffae
  428bae:	cld    
  428baf:	mov    cl,0x68
  428bb1:	out    0x72,eax
  428bb3:	push   0x55e4c755
  428bb8:	repz fnstsw WORD PTR [esi+0x2f]
  428bbc:	xchg   esp,eax
  428bbd:	in     eax,0xec
  428bbf:	lahf   
  428bc0:	push   0xcc364a1c
  428bc5:	mov    ebp,0x806b2fec
  428bca:	sub    esp,edx
  428bcc:	pop    ds
  428bcd:	xlat   BYTE PTR ds:[ebx]
  428bce:	ja     0x428c24
  428bd0:	sar    BYTE PTR [edx+0x61],cl
  428bd3:	xchg   esi,eax
  428bd4:	cwde   
  428bd5:	lods   al,BYTE PTR ds:[esi]
  428bd6:	in     al,0xc4
  428bd8:	fcomip st,st(7)
  428bda:	sub    eax,ebp
  428bdc:	sti    
  428bdd:	and    eax,DWORD PTR [esp+edx*4-0x54]
  428be1:	fst    DWORD PTR [edx]
  428be3:	leave  
  428be4:	in     eax,dx
  428be5:	int    0x66
  428be7:	inc    esi
  428be8:	mov    BYTE PTR [eax],0x36
  428beb:	nop
  428bec:	mov    al,0xf5
  428bee:	retf   0xc55e
  428bf1:	sar    DWORD PTR [ecx+0x68],cl
  428bf4:	cmp    ebx,DWORD PTR [edx-0x280b8ced]
  428bfa:	push   ds
  428bfb:	stc    
  428bfc:	or     ah,dl
  428bfe:	(bad)  
  428bff:	push   0x747d9035
  428c04:	mov    bl,0x55
  428c06:	and    al,0xc
  428c08:	stos   DWORD PTR es:[edi],eax
  428c09:	add    al,0x2b
  428c0b:	adc    esi,ebp
  428c0d:	mov    ch,0x8c
  428c0f:	add    ah,BYTE PTR [eax-0x24015a11]
  428c15:	and    eax,0x38cfc971
  428c1a:	iret   
  428c1b:	loopne 0x428c1c
  428c1d:	stos   BYTE PTR es:[edi],al
  428c1e:	shr    ecx,1
  428c20:	inc    esp
  428c21:	mov    DWORD PTR [ebp-0x5bfc0041],esp
  428c27:	ins    DWORD PTR es:[edi],dx
  428c28:	out    dx,al
  428c29:	inc    esi
  428c2a:	push   0xdd003925
  428c2f:	and    eax,0x8811eb22
  428c34:	imul   edi,edx,0x79
  428c37:	jg     0x428be3
  428c39:	sub    bh,BYTE PTR [edx-0x77]
  428c3c:	in     eax,0x8
  428c3e:	fwait
  428c3f:	dec    esp
  428c40:	pop    ebx
  428c41:	jmp    0x5a67a4c
  428c46:	pushf  
  428c47:	or     cl,al
  428c49:	pop    ss
  428c4a:	lods   eax,DWORD PTR ds:[esi]
  428c4b:	adc    edi,DWORD PTR [ebx+ebp*8-0x6b8ab6ba]
  428c52:	loope  0x428c48
  428c54:	dec    ecx
  428c55:	inc    edx
  428c56:	xchg   edi,eax
  428c57:	mov    ?,WORD PTR [edi]
  428c59:	xchg   esp,eax
  428c5a:	(bad)  
  428c5b:	mov    al,0x89
  428c5d:	std    
  428c5e:	ja     0x428c38
  428c60:	hlt    
  428c61:	inc    esi
  428c62:	and    al,0x34
  428c64:	add    BYTE PTR [ebx+edx*1],ch
  428c67:	mov    ecx,DWORD PTR [esp+edi*4+0x69]
  428c6b:	jb     0x428c2c
  428c6d:	jnp    0x428c84
  428c6f:	sub    bl,ch
  428c71:	inc    edx
  428c72:	mov    bh,0x53
  428c74:	call   0x44bb9391
  428c79:	pusha  
  428c7a:	fnsave [ebx]
  428c7c:	and    eax,0x9a5525c7
  428c81:	scas   eax,DWORD PTR es:[edi]
  428c82:	pop    esp
  428c83:	mov    ebp,0x79798f8d
  428c88:	popa   
  428c89:	sub    eax,0xff88a683
  428c8e:	jmp    0x79fed342
  428c93:	das    
  428c94:	mov    esp,eax
  428c96:	push   0x8
  428c98:	fdiv   QWORD PTR [ebx]
  428c9a:	adc    dh,BYTE PTR [esi]
  428c9c:	ret    
  428c9d:	and    al,0x6c
  428c9f:	adc    bl,ch
  428ca1:	mul    edi
  428ca3:	jge    0x428cee
  428ca5:	mov    dh,0x4a
  428ca7:	(bad)  
  428ca8:	fisub  WORD PTR [esi]
  428caa:	cmc    
  428cab:	(bad)  
  428cac:	(bad)  
  428cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cae:	(bad)  
  428caf:	imul   BYTE PTR es:0xf1453464
  428cb6:	xchg   esi,eax
  428cb7:	sub    BYTE PTR [eax+edx*8+0x71],0x7
  428cbc:	shl    BYTE PTR [ebp+0x587bd78d],1
  428cc2:	std    
  428cc3:	int3   
  428cc4:	mov    ch,0xea
  428cc6:	test   eax,0xcd9256b3
  428ccb:	aam    0x5b
  428ccd:	inc    edi
  428cce:	inc    ecx
  428ccf:	ds adc bh,bh
  428cd2:	popf   
  428cd3:	ret    0x5875
  428cd6:	cs dec ebx
  428cd8:	shl    DWORD PTR [ebx+0x5774e225],0x55
  428cdf:	dec    esi
  428ce0:	push   0xffffffb7
  428ce2:	loopne 0x428cfe
  428ce4:	retf   0xed54
  428ce7:	sahf   
  428ce8:	pop    edi
  428ce9:	sti    
  428cea:	gs pop edi
  428cec:	or     eax,0x64285839
  428cf1:	fidiv  DWORD PTR [eax]
  428cf3:	fidivr DWORD PTR [ecx+0x517a923e]
  428cf9:	out    0x84,eax
  428cfb:	pusha  
  428cfc:	sar    DWORD PTR [edx+0x8],cl
  428cff:	mov    eax,ds:0x4dacf25f
  428d04:	jne    0x428d0a
  428d06:	pop    ss
  428d07:	xor    al,0x8d
  428d09:	jnp    0x428d88
  428d0b:	pop    ecx
  428d0c:	jo     0x428cd1
  428d0e:	fs test esi,ebx
  428d11:	and    edi,0xffffffa6
  428d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d15:	inc    edi
  428d16:	sub    bl,BYTE PTR [edi+0x261f93a4]
  428d1c:	sahf   
  428d1d:	pusha  
  428d1e:	lods   al,BYTE PTR ds:[esi]
  428d1f:	and    ah,0x18
  428d22:	mul    DWORD PTR [esi+0x40b09e82]
  428d28:	jo     0x428d97
  428d2a:	mov    dl,0x8
  428d2c:	xor    al,0x6b
  428d2e:	(bad)  
  428d2f:	aam    0x1c
  428d31:	jmp    0x742f67ae
  428d36:	fsub   DWORD PTR [ebx-0x3f]
  428d39:	push   es
  428d3a:	dec    esp
  428d3b:	imul   esi,DWORD PTR [ecx-0xc],0x56b483d6
  428d42:	mov    bh,0x49
  428d44:	mov    bh,0x42
  428d46:	ins    DWORD PTR es:[edi],dx
  428d47:	or     eax,0x641e1781
  428d4c:	xchg   esp,eax
  428d4d:	lods   al,BYTE PTR ds:[esi]
  428d4e:	in     eax,dx
  428d4f:	xor    esp,eax
  428d51:	mov    ebx,0x2f27a189
  428d56:	xchg   esi,eax
  428d57:	dec    ecx
  428d58:	ds jge 0x428cf9
  428d5b:	add    eax,0x7e58de69
  428d60:	ret    0x51fc
  428d63:	test   BYTE PTR [esi],al
  428d65:	and    BYTE PTR [ebx],al
  428d67:	popf   
  428d68:	rcr    ebp,cl
  428d6a:	cmp    al,BYTE PTR [ebx-0xac3eb6]
  428d70:	popf   
  428d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d72:	mov    ah,0xa4
  428d74:	mov    dh,bl
  428d76:	mov    al,ds:0x76749838
  428d7b:	aas    
  428d7c:	sub    DWORD PTR [eax+0x11],edi
  428d7f:	leave  
  428d80:	or     al,0xa1
  428d82:	push   0xfffffff5
  428d84:	and    BYTE PTR ds:0xc0da3081,dh
  428d8a:	sbb    bh,bh
  428d8c:	inc    edx
  428d8d:	pop    ecx
  428d8e:	cmp    DWORD PTR [edx],eax
  428d90:	arpl   WORD PTR [esi-0x3e],si
  428d93:	inc    ebp
  428d94:	test   eax,0x64042e4a
  428d99:	ins    BYTE PTR es:[edi],dx
  428d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d9b:	mov    ah,0xcb
  428d9d:	sub    DWORD PTR [edx],eax
  428d9f:	call   0x782374e0
  428da4:	cwde   
  428da5:	cmp    bl,BYTE PTR [ebp+0xbbcade6]
  428dab:	fstp   st(1)
  428dad:	jp     0x428d8f
  428daf:	ss out 0xae,eax
  428db2:	test   dh,0x50
  428db5:	sbb    DWORD PTR [ecx-0x4e9be23a],edi
  428dbb:	mov    eax,0xa8d36d96
  428dc0:	dec    ecx
  428dc1:	lea    esp,es:[eax-0x30]
  428dc5:	rdmsr  
  428dc7:	scas   eax,DWORD PTR es:[edi]
  428dc8:	jmp    0x428d8a
  428dca:	ds int3 
  428dcc:	call   0xd2ad:0xaec259f9
  428dd3:	xor    al,0x4
  428dd5:	mov    al,0xfa
  428dd7:	jno    0x428dde
  428dd9:	leave  
  428dda:	ret    
  428ddb:	jg     0x428d66
  428ddd:	fadd   QWORD PTR [esi+edi*4-0xbf22490]
  428de4:	cdq    
  428de5:	or     bl,BYTE PTR [eax-0x30]
  428de8:	pusha  
  428de9:	fisttp QWORD PTR [ecx+0xd6d0cf9]
  428def:	in     al,0x1d
  428df1:	mov    eax,0x3be52f9b
  428df6:	iret   
  428df7:	leave  
  428df8:	cmc    
  428df9:	aam    0xbc
  428dfb:	cwde   
  428dfc:	xor    al,0xcd
  428dfe:	jle    0x428e5f
  428e00:	mov    eax,0x826dfb78
  428e05:	(bad)  
  428e06:	idiv   DWORD PTR [edx-0x3aafcf2f]
  428e0c:	xchg   BYTE PTR ds:0x39ed4578,ah
  428e12:	pop    ecx
  428e13:	xor    DWORD PTR [edx],eax
  428e15:	cmc    
  428e16:	jno    0x428e46
  428e18:	mul    DWORD PTR [ebx+0x4b3721da]
  428e1e:	ins    DWORD PTR es:[edi],dx
  428e1f:	push   esp
  428e20:	add    edx,DWORD PTR [ebx]
  428e22:	test   al,0x7
  428e24:	xchg   ebp,eax
  428e25:	test   eax,0x233f3477
  428e2a:	jecxz  0x428e68
  428e2c:	leave  
  428e2d:	(bad)  
  428e2f:	iret   
  428e30:	es xchg cx,ax
  428e33:	add    dl,dl
  428e35:	retf   
  428e36:	mov    WORD PTR [edx-0x6b038036],?
  428e3c:	clc    
  428e3d:	cmp    al,0xe1
  428e3f:	(bad)
  428e43:	cs addr16 pop edi
  428e46:	fidiv  DWORD PTR [ecx]
  428e48:	scas   eax,DWORD PTR es:[edi]
  428e49:	lods   eax,DWORD PTR ds:[esi]
  428e4a:	pop    ebp
  428e4b:	std    
  428e4c:	fadd   DWORD PTR [edi+0x35]
  428e4f:	xor    eax,0x413a5389
  428e54:	or     ch,BYTE PTR [esi+0x544518c5]
  428e5a:	test   eax,0xa15d1238
  428e5f:	imul   ebp,ebx,0x1cedcbbe
  428e65:	and    BYTE PTR [ebp+0x28574d9c],bh
  428e6b:	xlat   BYTE PTR ds:[ebx]
  428e6c:	fxam   
  428e6e:	mov    bl,0x28
  428e70:	pop    esi
  428e71:	ins    BYTE PTR es:[edi],dx
  428e72:	or     ecx,edx
  428e74:	out    dx,al
  428e75:	mov    bl,BYTE PTR [esi+0x8]
  428e78:	retf   
  428e79:	mov    ecx,0x3011f4d1
  428e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e7f:	rcr    BYTE PTR [esi-0x19fb6291],cl
  428e85:	scas   eax,DWORD PTR es:[edi]
  428e86:	dec    ecx
  428e87:	(bad)  
  428e88:	in     eax,dx
  428e89:	in     eax,0x95
  428e8b:	pushf  
  428e8c:	scas   eax,DWORD PTR es:[edi]
  428e8d:	fstp   DWORD PTR ds:[ebx]
  428e90:	push   esp
  428e91:	pop    esp
  428e92:	fst    QWORD PTR es:[ebp+0x59d1d65f]
  428e99:	sbb    DWORD PTR [edx],0xffffffde
  428e9c:	mov    ebx,0xf39a61e7
  428ea1:	push   ds
  428ea2:	push   esi
  428ea3:	xchg   ecx,eax
  428ea4:	jo     0x428e8f
  428ea6:	sbb    edi,0x14
  428ea9:	inc    ebp
  428eaa:	jo     0x428eaa
  428eac:	jb     0x428e9f
  428eae:	test   DWORD PTR [ebx+edx*4-0x380a1207],ebp
  428eb5:	loop   0x428eb6
  428eb7:	mov    edx,0xedfc0599
  428ebc:	xchg   DWORD PTR [edx-0x2e],edi
  428ebf:	and    BYTE PTR [edi-0x67],ch
  428ec2:	jbe    0x428ea0
  428ec4:	(bad)  
  428ec5:	sbb    bh,BYTE PTR [edi+0x14]
  428ec8:	sub    edi,DWORD PTR cs:[edx]
  428ecb:	mov    ds:0xf357c37e,eax
  428ed0:	clc    
  428ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ed2:	shl    BYTE PTR [eax+0x48f331],0x8a
  428ed9:	inc    esi
  428eda:	xlat   BYTE PTR ds:[ebx]
  428edb:	test   eax,0x8aba8477
  428ee0:	(bad)  [ebp+0x6f]
  428ee3:	lock or al,0x51
  428ee6:	out    dx,eax
  428ee7:	jbe    0x428ef1
  428ee9:	mov    ds,eax
  428eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428eec:	mov    bl,0x4f
  428eee:	push   edx
  428eef:	cmp    DWORD PTR [edx+0x33dfc366],esi
  428ef5:	push   es
  428ef6:	add    ah,BYTE PTR [ebx]
  428ef8:	loope  0x428f4e
  428efa:	push   ecx
  428efb:	(bad)  
  428efc:	in     al,dx
  428efd:	xor    eax,0x27afae94
  428f02:	es adc eax,0x54877bb8
  428f08:	adc    al,0xd
  428f0a:	xchg   ebx,eax
  428f0b:	lods   al,BYTE PTR ds:[esi]
  428f0c:	int3   
  428f0d:	sbb    al,0x5a
  428f0f:	cmp    dh,dh
  428f11:	shl    DWORD PTR [ecx+eiz*2-0x7f471345],cl
  428f18:	xchg   esi,eax
  428f19:	ret    
  428f1a:	stc    
  428f1b:	mov    WORD PTR [ecx+esi*8-0x5b],fs
  428f1f:	sbb    eax,0xc1724edf
  428f24:	leave  
  428f25:	or     eax,0x747d805c
  428f2a:	jne    0x428eaf
  428f2c:	bound  ebp,QWORD PTR [ebx]
  428f2e:	fsub   st(5),st
  428f30:	popf   
  428f31:	loop   0x428ed5
  428f33:	rcr    BYTE PTR [edx-0x47ac17bb],cl
  428f39:	loop   0x428f7f
  428f3b:	(bad)  
  428f3c:	rcr    BYTE PTR [ebx],cl
  428f3e:	test   esi,esi
  428f40:	pop    ecx
  428f41:	adc    dl,dl
  428f43:	sbb    esp,DWORD PTR [ebp-0x5b3e7b6a]
  428f49:	shl    DWORD PTR [edi-0x3e],1
  428f4c:	fwait
  428f4d:	cmp    al,BYTE PTR [ebx]
  428f4f:	test   DWORD PTR [ebx+0x1c942c18],ebp
  428f55:	out    dx,al
  428f56:	call   0xa3b02998
  428f5b:	in     eax,0xba
  428f5d:	(bad)  
  428f60:	mov    ds:0xc1dcc0d5,al
  428f65:	and    ebp,DWORD PTR [esi+0x61]
  428f68:	mov    DWORD PTR [eax-0x40],0x5305285b
  428f6f:	jb     0x428f59
  428f71:	int3   
  428f72:	sub    bl,bl
  428f74:	dec    ebp
  428f75:	inc    esp
  428f76:	dec    ebp
  428f77:	ja     0x428f96
  428f79:	ss aaa 
  428f7b:	sub    esi,ebp
  428f7d:	cli    
  428f7e:	imul   ebp,DWORD PTR [edx-0xb],0x32444c5c
  428f85:	popf   
  428f86:	pop    ebp
  428f87:	fwait
  428f88:	mov    eax,0x4b3f7d0b
  428f8d:	jge    0x429008
  428f8f:	mov    ah,0xc4
  428f91:	out    0x7,eax
  428f93:	add    al,0x4d
  428f95:	aas    
  428f96:	or     DWORD PTR [ebx-0xf9c9748],edx
  428f9c:	aad    0xb0
  428f9e:	cmc    
  428f9f:	mov    al,0x6f
  428fa1:	or     al,BYTE PTR [esp+eax*2]
  428fa4:	pop    es
  428fa5:	dec    edx
  428fa6:	xchg   ebp,eax
  428fa7:	loopne 0x428fd7
  428fa9:	rcl    bh,0x14
  428fac:	adc    eax,0x6292d7d7
  428fb1:	mov    cl,0x4
  428fb3:	test   eax,0xe71089fc
  428fb8:	aaa    
  428fb9:	fstp   TBYTE PTR [edx+0x56]
  428fbc:	loop   0x428fcc
  428fbe:	shl    BYTE PTR [eax-0x6fb1e941],0xe3
  428fc5:	adc    edx,DWORD PTR [edx-0x79]
  428fc8:	adc    BYTE PTR [ebx-0x65bfdc6c],dl
  428fce:	xchg   ebp,eax
  428fcf:	mov    bh,0x7
  428fd1:	cmp    al,0xaa
  428fd3:	mov    WORD PTR cs:[edx+0x2b313b9a],cs
  428fda:	sbb    eax,0xe1be4d02
  428fdf:	popa   
  428fe0:	add    eax,0xe7a7097e
  428fe5:	data16 aaa 
  428fe7:	mov    bl,0xe2
  428fe9:	push   ecx
  428fea:	std    
  428feb:	(bad)  
  428fec:	neg    BYTE PTR [edx]
  428fee:	test   al,0x6c
  428ff0:	adc    BYTE PTR [ecx+0x53],ch
  428ff3:	lea    ecx,[eax-0x52]
  428ff6:	xchg   ebx,edx
  428ff8:	mov    bh,0x2d
  428ffa:	icebp  
  428ffb:	mov    al,0x5d
  428ffd:	dec    edx
  428ffe:	pop    es
  428fff:	cmp    edx,edx
  429001:	add    edx,edi
  429003:	inc    ebp
  429004:	lahf   
  429005:	mov    al,0x86
  429007:	dec    esi
  429008:	fcmovbe st,st(1)
  42900a:	pushf  
  42900b:	iret   
  42900c:	cmp    eax,0x56854e18
  429011:	ins    BYTE PTR es:[edi],dx
  429012:	leave  
  429013:	scas   al,BYTE PTR es:[edi]
  429014:	mov    ebx,0x26fb15c9
  429019:	sbb    DWORD PTR [ebp+ecx*2-0xbcd349c],eax
  429020:	scas   al,BYTE PTR es:[edi]
  429021:	fs call 0x82c5a063
  429027:	pop    ds
  429028:	mov    cl,al
  42902a:	dec    edx
  42902c:	stos   DWORD PTR es:[edi],eax
  42902d:	inc    ecx
  42902e:	scas   al,BYTE PTR es:[edi]
  42902f:	lock js 0x42903c
  429032:	addr16 jmp 0x23c5fc08
  429038:	pop    ebx
  429039:	mov    esi,0xde1cb25d
  42903e:	fst    st(3)
  429040:	dec    edi
  429041:	test   eax,0x6ff9c558
  429046:	ret    
  429047:	loope  0x428fe1
  429049:	imul   esi,DWORD PTR [edx-0x48e642da],0x9be466e5
  429053:	(bad)  
  429054:	arpl   WORD PTR [eax+0x73],bx
  429057:	xor    BYTE PTR [edi-0x79],bh
  42905a:	fstp   TBYTE PTR [ebx]
  42905c:	sub    esi,DWORD PTR [edx]
  42905e:	inc    ecx
  42905f:	cwde   
  429060:	adc    dl,dl
  429062:	sub    cl,ah
  429064:	jne    0x429085
  429066:	in     eax,dx
  429067:	into   
  429068:	pop    ebx
  429069:	mov    ?,WORD PTR [edx]
  42906b:	mov    DWORD PTR [edx],esp
  42906d:	dec    esi
  42906e:	loop   0x4290d0
  429070:	cwde   
  429071:	xor    BYTE PTR [esi+ebx*2+0xc302ce5],dl
  429078:	and    esp,DWORD PTR [ecx+0x276f6097]
  42907e:	jmp    0x2d0c871c
  429083:	or     BYTE PTR [ebp-0x67fa44d5],dh
  429089:	(bad)  
  42908a:	mov    ebx,0x668c74db
  42908f:	repnz mov edi,0xf4c1160b
  429095:	dec    ebp
  429096:	inc    ecx
  429097:	(bad)  
  429098:	stos   BYTE PTR es:[edi],al
  429099:	fwait
  42909a:	push   cs
  42909b:	jge    0x429071
  42909d:	xlat   BYTE PTR ds:[ebx]
  42909e:	xchg   esi,eax
  42909f:	popa   
  4290a0:	in     al,0x90
  4290a2:	repz scas al,BYTE PTR es:[edi]
  4290a4:	pop    es
  4290a5:	pusha  
  4290a6:	sub    eax,DWORD PTR [edi]
  4290a8:	mov    edi,0xc520b7c7
  4290ad:	bound  esp,QWORD PTR [esi-0x1169d86]
  4290b3:	ins    DWORD PTR es:[edi],dx
  4290b4:	repz (bad) [esi+esi*8]
  4290b8:	jns    0x429079
  4290ba:	sbb    bh,BYTE PTR [edx+0x56]
  4290bd:	jl     0x429049
  4290bf:	push   DWORD PTR [esi-0x71329186]
  4290c5:	(bad)  
  4290c6:	outs   dx,BYTE PTR ds:[esi]
  4290c7:	add    al,0x28
  4290c9:	dec    ebp
  4290ca:	adc    DWORD PTR [edx-0x54],0xe8f79f4e
  4290d1:	mov    edi,0xf6915240
  4290d6:	push   0xf764f65
  4290db:	jecxz  0x429067
  4290dd:	ret    0x3322
  4290e0:	mov    ah,0x37
  4290e2:	stos   BYTE PTR es:[edi],al
  4290e3:	outs   dx,BYTE PTR ds:[esi]
  4290e4:	mov    al,ds:0xd46efa05
  4290e9:	dec    eax
  4290ea:	std    
  4290eb:	adc    esi,esp
  4290ed:	gs out 0x51,eax
  4290f0:	xchg   ebx,eax
  4290f1:	xor    BYTE PTR [ebp-0x5c],0x99
  4290f5:	std    
  4290f6:	call   0xec949371
  4290fb:	mov    cl,BYTE PTR [edx-0x7e]
  4290fe:	add    BYTE PTR [esp+eiz*4-0x2e9492b3],ch
  429105:	adc    dl,BYTE PTR [edi+esi*8-0x51]
  429109:	sub    edi,esi
  42910b:	fadd   QWORD PTR [eax+edi*2-0x53d7bd96]
  429112:	stc    
  429113:	test   al,0xb3
  429115:	and    al,ch
  429117:	add    BYTE PTR [esi-0x1b],dh
  42911a:	cmc    
  42911b:	push   esp
  42911c:	xchg   edi,eax
  42911d:	push   eax
  42911e:	js     0x429167
  429120:	jmp    FWORD PTR [eax-0x29b3ead]
  429126:	mov    ch,0x91
  429128:	enter  0xb4bb,0xf4
  42912c:	loopne 0x429179
  42912e:	push   ds
  42912f:	(bad)  
  429130:	lods   eax,DWORD PTR ds:[esi]
  429131:	ja     0x429121
  429133:	lock add al,BYTE PTR [esi+0x63a00782]
  42913a:	dec    eax
  42913b:	sahf   
  42913c:	scas   al,BYTE PTR es:[edi]
  42913d:	and    ebp,DWORD PTR [eax+0x22]
  429140:	in     al,dx
  429141:	test   eax,0x4b165d81
  429146:	mov    al,ds:0x29d6e21a
  42914b:	mov    bh,0x29
  42914d:	shl    DWORD PTR [edx*1+0x3cf26a7],0x5d
  429155:	mov    esi,0x8f4c4e25
  42915a:	dec    edi
  42915b:	arpl   WORD PTR [edi],sp
  42915d:	test   DWORD PTR [esi+0x7d126c13],esi
  429163:	dec    ebx
  429164:	fnstenv [eax]
  429166:	push   esi
  429167:	loopne 0x42918f
  429169:	aad    0x31
  42916b:	(bad)  
  42916c:	in     eax,dx
  42916d:	data16 in al,0xcb
  429170:	xor    DWORD PTR [ebx-0x3aebb928],esi
  429176:	cmp    eax,0x1fb91109
  42917b:	std    
  42917c:	and    al,0x19
  42917e:	sub    ch,BYTE PTR [ebx-0x2b]
  429181:	xchg   BYTE PTR [edi-0x3b3c4cac],bh
  429187:	shl    DWORD PTR [eax-0x66],1
  42918a:	(bad)
  42918d:	ret    
  42918e:	dec    ebx
  42918f:	pop    ss
  429190:	shr    BYTE PTR fs:[ebx-0x4a9c506e],1
  429197:	xchg   esi,eax
  429198:	ja     0x42911c
  42919a:	mov    ds:0x33021d04,eax
  42919f:	mov    BYTE PTR [esi],0xc3
  4291a2:	pushf  
  4291a3:	mov    dl,0x6d
  4291a5:	pop    ds
  4291a6:	(bad)  
  4291a7:	dec    edx
  4291a8:	(bad)  
  4291a9:	stos   BYTE PTR es:[edi],al
  4291aa:	pop    ecx
  4291ab:	addr16 pop ebp
  4291ad:	pusha  
  4291ae:	dec    edi
  4291af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291b0:	push   ebp
  4291b1:	in     al,0xe2
  4291b3:	pop    esi
  4291b4:	idiv   DWORD PTR [ecx]
  4291b6:	scas   eax,DWORD PTR es:[edi]
  4291b7:	std    
  4291b8:	or     BYTE PTR [eax+0xa2fb5fe],al
  4291be:	jo     0x429142
  4291c0:	test   BYTE PTR [eax-0xc6b0e05],bh
  4291c6:	push   ds
  4291c7:	fs out dx,eax
  4291c9:	bound  edi,QWORD PTR [ecx]
  4291cb:	aas    
  4291cc:	xlat   BYTE PTR ds:[ebx]
  4291cd:	jmp    0x9589:0xc52fe034
  4291d4:	pop    esp
  4291d5:	push   ds
  4291d6:	inc    edx
  4291d7:	bound  ebx,QWORD PTR [edi+eax*4+0x27]
  4291db:	mov    esi,DWORD PTR [ebp+0xe60709f]
  4291e1:	mov    bh,0x6f
  4291e3:	out    0xbf,al
  4291e5:	xchg   ecx,eax
  4291e6:	retf   
  4291e7:	sbb    eax,0x964cde9b
  4291ec:	shl    DWORD PTR [ecx],0xa9
  4291ef:	pop    ebx
  4291f0:	push   ss
  4291f1:	pop    ecx
  4291f2:	sbb    ch,BYTE PTR [edx]
  4291f4:	mul    BYTE PTR [edx-0x2ca8e7bb]
  4291fa:	inc    esi
  4291fb:	fmul   QWORD PTR [edi-0x6334e9ff]
  429201:	lahf   
  429202:	cmc    
  429203:	lds    eax,FWORD PTR [ecx]
  429205:	add    esi,ebx
  429207:	push   ds
  429208:	sbb    eax,0x6f5414dd
  42920d:	dec    ebp
  42920e:	xchg   DWORD PTR [ebx],ecx
  429210:	mov    edx,DWORD PTR ds:0x5445043
  429216:	mov    bh,0x7d
  429218:	dec    edi
  429219:	neg    DWORD PTR [edx]
  42921b:	mov    ch,0xdc
  42921d:	ret    
  42921e:	ss in  eax,0x48
  429221:	push   eax
  429222:	lods   al,BYTE PTR ds:[esi]
  429223:	inc    ebp
  429224:	aaa    
  429225:	syscall 
  429227:	mov    ch,0xdd
  429229:	ins    BYTE PTR es:[edi],dx
  42922a:	mov    edx,0xd49404c9
  42922f:	xor    eax,0x78549fde
  429234:	fdiv   QWORD PTR [edi]
  429236:	lea    esi,[ecx+0x13462da0]
  42923c:	adc    cl,BYTE PTR [ebx+ebx*4]
  42923f:	xor    al,0xa8
  429241:	or     DWORD PTR [eax],ebx
  429243:	aam    0x40
  429245:	aad    0x9d
  429247:	mov    bl,0xf2
  429249:	test   DWORD PTR [eax],ebp
  42924b:	inc    ebx
  42924c:	sbb    eax,0x685a266d
  429251:	ror    edx,cl
  429253:	lods   al,BYTE PTR ds:[si]
  429255:	jbe    0x4291df
  429257:	out    0xfc,eax
  429259:	mov    DWORD PTR gs:[edx],esi
  42925c:	add    edx,DWORD PTR [ebx]
  42925e:	data16 std 
  429260:	ins    DWORD PTR es:[edi],dx
  429261:	jmp    0x74830680
  429266:	pusha  
  429267:	xlat   BYTE PTR ds:[ebx]
  429268:	jmp    0x4292a2
  42926a:	icebp  
  42926b:	sub    DWORD PTR [ecx],ecx
  42926d:	outs   dx,BYTE PTR ds:[esi]
  42926e:	fcomp  QWORD PTR [edx+ebx*4-0x69f8e10]
  429275:	push   esp
  429276:	pop    edx
  429277:	add    DWORD PTR [ebx-0x77],0xe4b57474
  42927e:	inc    eax
  42927f:	add    al,0x86
  429281:	or     DWORD PTR [ebx],ecx
  429283:	mov    bl,bh
  429285:	inc    ebp
  429286:	pop    ss
  429287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429288:	mov    al,0xff
  42928a:	dec    eax
  42928b:	fisttp QWORD PTR [edi+0x62]
  42928e:	mov    esi,0x74499623
  429293:	or     eax,0x3ec87f0c
  429298:	jbe    0x42925d
  42929a:	retf   
  42929b:	mov    ds:0xb4d05c81,al
  4292a0:	and    al,0x97
  4292a2:	aas    
  4292a3:	les    esi,FWORD PTR [ecx]
  4292a5:	add    ah,bl
  4292a7:	mov    ah,0xcb
  4292a9:	div    BYTE PTR [esi-0x4f6defd3]
  4292af:	call   0xbec3:0xfbbfe774
  4292b6:	repz add BYTE PTR [edx-0x47673142],0xaa
  4292be:	aam    0xe6
  4292c0:	fdivp  st(0),st
  4292c2:	aas    
  4292c3:	fidiv  DWORD PTR [eax]
  4292c5:	pop    es
  4292c6:	cmp    edi,DWORD PTR [ebp+0x6]
  4292c9:	mov    ah,0x69
  4292cb:	adc    al,0xe
  4292cd:	push   eax
  4292ce:	push   0x5e40f65e
  4292d3:	into   
  4292d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4292d5:	outs   dx,DWORD PTR ds:[esi]
  4292d6:	mov    cl,0x96
  4292d8:	test   BYTE PTR [edi+ebx*4-0x59],cl
  4292dc:	or     al,0xd4
  4292de:	test   al,0xec
  4292e0:	(bad)  
  4292e1:	das    
  4292e2:	retf   0x97db
  4292e5:	push   esp
  4292e6:	push   ds
  4292e7:	in     al,dx
  4292e8:	jae    0x4292eb
  4292ea:	pop    ebx
  4292eb:	jo     0x42928c
  4292ed:	mov    ch,0xf2
  4292ef:	jbe    0x429326
  4292f1:	lods   eax,DWORD PTR ds:[esi]
  4292f2:	stos   BYTE PTR es:[edi],al
  4292f3:	pop    eax
  4292f4:	daa    
  4292f5:	mov    ebp,ecx
  4292f7:	test   DWORD PTR [ebp+0x77fb832a],edx
  4292fd:	sar    BYTE PTR [ebx],0x5e
  429300:	ss repnz xchg esi,eax
  429303:	ds out dx,al
  429305:	jp     0x429375
  429307:	pop    ds
  429308:	push   es
  429309:	xchg   esi,eax
  42930a:	cdq    
  42930b:	mov    dh,0x94
  42930d:	jle    0x42935d
  42930f:	(bad)  
  429310:	xor    eax,0xf1873f8a
  429315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429316:	xor    ch,BYTE PTR [ebp+0x50]
  429319:	fisttp QWORD PTR [eax]
  42931b:	int3   
  42931c:	mov    eax,ds:0x717e7f45
  429321:	aam    0x92
  429323:	hlt    
  429324:	ins    DWORD PTR es:[edi],dx
  429325:	in     eax,0x70
  429327:	in     eax,0xda
  429329:	jmp    0x5bdb:0x649c3e1f
  429330:	push   es
  429331:	jge    0x4292e2
  429333:	add    al,0xf7
  429335:	or     ebx,DWORD PTR [ebx+0x43]
  429338:	sub    esp,DWORD PTR [edi]
  42933a:	in     al,dx
  42933b:	test   eax,0x5d53194e
  429340:	or     bl,BYTE PTR [ebx]
  429342:	es in  al,dx
  429344:	retf   
  429345:	xchg   esi,eax
  429346:	jge    0x429309
  429348:	xchg   DWORD PTR [ecx],ebp
  42934a:	lods   al,BYTE PTR ds:[esi]
  42934b:	push   ecx
  42934c:	dec    ebx
  42934d:	add    BYTE PTR ds:0xf0c922a0,al
  429353:	(bad)  
  429354:	repnz mov dl,0xf
  429357:	cmc    
  429358:	and    DWORD PTR [edi],eax
  42935a:	add    BYTE PTR [edx+ecx*1],ah
  42935d:	cwde   
  42935e:	pop    esi
  42935f:	mov    esp,0xa1042c1d
  429364:	(bad)  [eax-0x5b210333]
  42936a:	xchg   edi,eax
  42936b:	inc    edx
  42936c:	or     eax,0xf6b87837
  429371:	xor    BYTE PTR [ebx-0x1e],bh
  429374:	iret   
  429375:	mov    eax,DWORD PTR [ebx+0x4774b4da]
  42937b:	mov    ebx,0x2f5b1719
  429380:	and    eax,0x2db29a4e
  429385:	mov    ds:0xbe1f07a,eax
  42938a:	repz dec ecx
  42938c:	call   0x985314e1
  429391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429392:	mov    ecx,0xe02897b
  429397:	dec    esi
  429398:	scas   al,BYTE PTR es:[edi]
  429399:	jb     0x429393
  42939b:	sbb    eax,0x3418828e
  4293a0:	push   0x67
  4293a2:	test   al,0x6e
  4293a4:	call   0xea1c:0x2ba8ca37
  4293ab:	jp     0x4293ae
  4293ad:	nop
  4293ae:	xchg   ecx,eax
  4293af:	pop    ss
  4293b0:	xchg   sp,ax
  4293b2:	jb     0x429341
  4293b4:	dec    eax
  4293b5:	pop    ecx
  4293b6:	or     BYTE PTR [eax-0x573f9586],ah
  4293bc:	and    dl,BYTE PTR [edi+edx*4]
  4293bf:	push   esp
  4293c0:	scas   eax,DWORD PTR es:[edi]
  4293c1:	ss push ss
  4293c3:	mov    ebp,0xee1d7445
  4293c8:	pop    ecx
  4293c9:	neg    ch
  4293cb:	xchg   ch,bl
  4293cd:	loopne 0x429443
  4293cf:	xchg   ebp,eax
  4293d0:	sahf   
  4293d1:	leave  
  4293d2:	dec    ebp
  4293d3:	ret    0xbe0a
  4293d6:	or     DWORD PTR [esi+0x5ed03845],edi
  4293dc:	daa    
  4293dd:	or     eax,0xc0545c3c
  4293e2:	mov    eax,0xac544ce1
  4293e7:	loopne 0x42937d
  4293e9:	mov    al,0xaa
  4293eb:	xchg   BYTE PTR [ebp+edx*8+0x740fcadb],dl
  4293f2:	call   0xee36cb1
  4293f7:	fwait
  4293f8:	outs   dx,DWORD PTR ds:[esi]
  4293f9:	mov    ah,0xa7
  4293fb:	fbld   TBYTE PTR [edx-0x48]
  4293fe:	pop    ds
  4293ff:	inc    ebp
  429400:	or     BYTE PTR [eax-0xabb0795],bl
  429406:	adc    DWORD PTR [edi],0xffffff87
  429409:	add    eax,0x6925d616
  42940f:	je     0x42939b
  429411:	in     eax,0xe7
  429413:	sub    dh,dl
  429415:	ds clc 
  429417:	pop    es
  429418:	in     al,dx
  429419:	jle    0x429456
  42941b:	xchg   ebp,eax
  42941c:	into   
  42941d:	pop    esi
  42941e:	push   ebx
  42941f:	fcomi  st,st(1)
  429421:	dec    edx
  429422:	cli    
  429423:	(bad)  
  429424:	cs faddp st(5),st
  429427:	loope  0x429413
  429429:	js     0x4293ba
  42942b:	in     al,dx
  42942c:	(bad)  
  42942d:	jmp    0x429448
  42942f:	push   0x10d36481
  429434:	or     DWORD PTR [eax],esp
  429436:	inc    edi
  429437:	idiv   esp
  429439:	mov    dl,0x6f
  42943b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42943c:	cmp    eax,0xd9ebe2c
  429441:	out    0x40,eax
  429443:	clc    
  429444:	push   eax
  429445:	std    
  429446:	and    eax,0x8b8b9f60
  42944b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42944c:	mov    bh,0xa6
  42944e:	mov    esp,0x6b655509
  429453:	out    dx,al
  429454:	and    al,0x9e
  429456:	test   ebx,edx
  429458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429459:	std    
  42945a:	xchg   DWORD PTR [edx],edi
  42945c:	or     BYTE PTR [edx+0x5b],ah
  42945f:	and    eax,0x2b24634e
  429464:	bound  edi,QWORD PTR [ebp-0x6c]
  429467:	sub    ecx,DWORD PTR [edi]
  429469:	adc    DWORD PTR [ebx-0x24],ebx
  42946c:	repz gs cmp al,0x5a
  429470:	repz (bad) 
  429472:	or     ecx,edx
  429474:	ds cld 
  429476:	mov    ?,ebp
  429478:	retf   0x182a
  42947b:	and    ebx,edx
  42947d:	mov    edx,0x7bcc5ff0
  429482:	adc    al,0x8
  429484:	ret    
  429485:	push   eax
  429486:	fistp  DWORD PTR [ebx+0x2dbb437e]
  42948c:	push   edx
  42948d:	pop    ss
  42948e:	or     dh,BYTE PTR [eax]
  429490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429491:	imul   esp,ebp,0x33d7e65f
  429497:	xchg   ebx,eax
  429498:	xor    al,0x3a
  42949a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42949b:	cmp    eax,0x925f3235
  4294a0:	pop    edi
  4294a1:	add    BYTE PTR [esi+esi*2],dh
  4294a4:	ret    0x31c9
  4294a7:	dec    edx
  4294a8:	jecxz  0x42949e
  4294aa:	inc    ecx
  4294ab:	xor    eax,0x3ff3ccc4
  4294b0:	pop    ebx
  4294b1:	jbe    0x42951c
  4294b3:	sti    
  4294b4:	mov    bl,cl
  4294b6:	retf   0xe199
  4294b9:	jns    0x429528
  4294bb:	inc    edx
  4294bc:	sub    eax,eax
  4294be:	xor    cl,BYTE PTR [ecx-0x7d]
  4294c1:	sbb    ah,BYTE PTR [edx]
  4294c3:	push   edx
  4294c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294c5:	fcomp  DWORD PTR [ebp+0xc0dc259]
  4294cb:	pop    ebx
  4294cc:	inc    edi
  4294cd:	cmp    edx,edi
  4294cf:	mov    ecx,0x5a8cf320
  4294d4:	xor    al,0x55
  4294d6:	jmp    0xb6a33399
  4294db:	pop    es
  4294dc:	test   BYTE PTR [ecx+0x5960fdc7],bh
  4294e2:	loop   0x429491
  4294e4:	repnz nop
  4294e6:	pop    ebx
  4294e7:	xchg   BYTE PTR [edi+0x2c13d71c],bh
  4294ed:	mov    dl,BYTE PTR [ebp+ebp*4+0x11817f01]
  4294f4:	sub    eax,0xc8783257
  4294f9:	mov    ds:0xc8b3e6a7,al
  4294fe:	(bad)  
  4294ff:	mov    bh,BYTE PTR [ebx-0x1c]
  429502:	push   esi
  429503:	fadd   QWORD PTR [edi]
  429505:	jp     0x429583
  429507:	jo     0x429535
  429509:	cli    
  42950a:	xchg   BYTE PTR [eax-0xba00c7c],bh
  429510:	dec    esp
  429511:	push   esi
  429512:	sub    BYTE PTR [eax],dl
  429514:	test   BYTE PTR [esi+0xf],ah
  429517:	shl    BYTE PTR [esi-0x6075cbd8],1
  42951d:	push   esi
  42951e:	imul   BYTE PTR [ebp+0x4b]
  429521:	cmp    DWORD PTR [edx-0x56],ebx
  429524:	out    0x46,al
  429526:	outs   dx,DWORD PTR ds:[esi]
  429527:	in     al,dx
  429528:	jae    0x4294f5
  42952a:	jmp    0xd166:0x95a065ea
  429531:	ins    DWORD PTR es:[edi],dx
  429532:	leave  
  429533:	outs   dx,BYTE PTR ds:[esi]
  429534:	sahf   
  429535:	scas   al,BYTE PTR es:[edi]
  429536:	jb     0x42952f
  429538:	sbb    cl,BYTE PTR [ebp+ecx*4+0x7]
  42953c:	cli    
  42953d:	push   cs
  42953e:	mov    edx,0x9c71d343
  429543:	cmp    ecx,esp
  429545:	push   0x62
  429547:	inc    edi
  429548:	pop    ebp
  429549:	ja     0x4294e6
  42954b:	or     al,0x19
  42954d:	inc    esi
  42954e:	push   0xe03c66f9
  429553:	sahf   
  429554:	adc    dl,ch
  429556:	or     al,0x39
  429558:	hlt    
  429559:	iret   
  42955a:	imul   ebp,DWORD PTR [esi+0x246aacf1],0x1bb7ad8f
  429564:	sub    eax,0x68221a17
  429569:	xor    DWORD PTR [esi],ecx
  42956b:	nop
  42956c:	push   0xf1081d22
  429571:	xchg   ch,ah
  429573:	in     eax,dx
  429574:	mov    ecx,0x6ff73ef0
  429579:	adc    eax,0xda2146a2
  42957f:	fs sti 
  429581:	sub    ch,BYTE PTR [ebx]
  429583:	out    dx,eax
  429584:	push   eax
  429585:	dec    ebx
  429586:	das    
  429587:	jne    0x4295dc
  429589:	mov    ds:0xeebf52ee,al
  42958e:	lahf   
  42958f:	xor    ebx,0x50b0d750
  429595:	(bad)  
  429596:	test   DWORD PTR [ebx],0xd45b8587
  42959c:	mov    dl,0xea
  42959e:	mov    esi,0x88da68aa
  4295a3:	adc    DWORD PTR es:[ecx-0x23f229d5],0xb50c7a9d
  4295ae:	add    DWORD PTR [eax+esi*4],0xffffffd5
  4295b2:	in     al,dx
  4295b3:	mov    ebp,0x374e1ddd
  4295b8:	adc    bh,bh
  4295ba:	cld    
  4295bb:	sar    BYTE PTR [edi],0xac
  4295be:	(bad)  
  4295c0:	and    ebp,DWORD PTR [eax-0x8]
  4295c3:	mov    al,0xb4
  4295c5:	dec    esp
  4295c6:	and    eax,0x433f5f6a
  4295cb:	and    dh,ah
  4295cd:	(bad)
  4295d0:	jmp    0xbea3:0xeefd198d
  4295d7:	fldenv ds:[ecx+0x58a1fbd0]
  4295de:	dec    ecx
  4295df:	push   ss
  4295e0:	popa   
  4295e1:	sub    cl,ch
  4295e3:	mov    dl,0xc6
  4295e5:	inc    ebx
  4295e6:	(bad)  
  4295e8:	bound  ebx,QWORD PTR [ebp+0x5c]
  4295eb:	adc    eax,0x8183e444
  4295f0:	cmp    al,0x7b
  4295f2:	jg     0x4295ef
  4295f4:	push   esp
  4295f5:	jmp    0x4295b3
  4295f7:	push   ebp
  4295f8:	test   DWORD PTR [esi],esp
  4295fa:	icebp  
  4295fb:	xchg   ebx,eax
  4295fc:	or     edi,DWORD PTR [edi]
  4295fe:	sbb    bh,BYTE PTR [edi+0x7b]
  429601:	cli    
  429602:	out    dx,eax
  429603:	loope  0x429646
  429605:	adc    eax,0x60763ce
  42960a:	jmp    0xc454fcda
  42960f:	or     BYTE PTR es:[ebx+ebp*4-0x55896a61],ah
  429617:	mov    al,0xb5
  429619:	pop    ds
  42961a:	retf   0xef49
  42961d:	adc    esi,DWORD PTR [esi-0x517e976e]
  429623:	adc    DWORD PTR [esi+0x24fe9e15],0xffffff90
  42962a:	dec    ebx
  42962b:	fwait
  42962c:	retf   0xbdc4
  42962f:	sub    eax,0xc83606cb
  429634:	mov    al,ds:0xe36317e5
  429639:	cli    
  42963a:	lods   al,BYTE PTR ds:[esi]
  42963b:	push   esi
  42963c:	cmp    esi,DWORD PTR [ebx-0x1616cf9]
  429642:	cdq    
  429643:	sti    
  429644:	push   ecx
  429645:	dec    ebx
  429646:	repnz fcom QWORD PTR [ebx]
  429649:	pop    ds
  42964a:	rcl    BYTE PTR [ebp+0x499ce3cb],0x47
  429651:	mov    edx,0x56cc06d3
  429656:	mov    dl,0x3a
  429658:	setnp  BYTE PTR [edi]
  42965b:	nop
  42965c:	test   BYTE PTR [edx+0x27e6b68c],bl
  429662:	outs   dx,DWORD PTR ds:[esi]
  429663:	jecxz  0x429629
  429665:	jle    0x42968f
  429667:	mov    edi,0x726856eb
  42966c:	mov    eax,ds:0x6f69590e
  429671:	adc    ecx,DWORD PTR [edx-0x8]
  429674:	xchg   esi,eax
  429675:	fistp  WORD PTR [eax+0x2092664f]
  42967b:	and    DWORD PTR [edx+edi*4+0xe7466dc],edx
  429682:	stos   BYTE PTR es:[edi],al
  429683:	sbb    cl,BYTE PTR [ecx-0x7]
  429686:	popa   
  429687:	mov    dh,0xe0
  429689:	mov    ds:0x5b4bfd62,eax
  42968e:	loope  0x4296c3
  429690:	cmp    BYTE PTR [edi],bl
  429692:	aad    0x3
  429694:	push   eax
  429695:	add    eax,0xd381a8d7
  42969a:	mov    ch,0xba
  42969c:	call   0x28f5:0xa44e7c8c
  4296a3:	jbe    0x4296b5
  4296a5:	in     eax,0x7
  4296a7:	mov    esp,0xc80ac19b
  4296ac:	xchg   bh,cl
  4296ae:	xchg   esp,eax
  4296af:	xor    BYTE PTR [eax+0x593180ef],ah
  4296b5:	rcl    dh,0xba
  4296b8:	scas   al,BYTE PTR es:[edi]
  4296b9:	pop    ds
  4296ba:	jmp    0xc636:0x3af3465b
  4296c1:	cmp    al,0x20
  4296c3:	xchg   DWORD PTR [eax+0x31],ecx
  4296c6:	sub    al,0x45
  4296c8:	ror    DWORD PTR [edx],0xcd
  4296cb:	mov    ebp,0xeaa8a107
  4296d0:	(bad)  
  4296d1:	imul   cl
  4296d3:	inc    ecx
  4296d4:	out    0x8,eax
  4296d6:	or     dh,BYTE PTR [eax+0x4f541944]
  4296dc:	push   edi
  4296dd:	cld    
  4296de:	scas   al,BYTE PTR es:[edi]
  4296df:	jge    0x4296ca
  4296e1:	jb     0x4296e2
  4296e3:	in     al,dx
  4296e4:	pop    ebp
  4296e5:	sub    edi,DWORD PTR [edx+0x4a]
  4296e8:	sbb    DWORD PTR [ebx+0x573ce171],edx
  4296ee:	jno    0x4296fc
  4296f0:	pushf  
  4296f1:	mov    DWORD PTR [ecx],ecx
  4296f3:	mov    eax,DWORD PTR [edi-0x7a98ef85]
  4296f9:	push   0x5665f6a2
  4296fe:	fsubr  DWORD PTR [edi+ecx*8-0x200ac021]
  429705:	mov    dl,0xa3
  429707:	sub    ch,BYTE PTR [eax-0x3916ab6d]
  42970d:	arpl   WORD PTR [eax+eiz*8-0x6a],dx
  429711:	mov    edx,0xa0dc084f
  429716:	scas   al,BYTE PTR es:[edi]
  429717:	jb     0x4296a9
  429719:	and    al,0x89
  42971b:	jg     0x429792
  42971d:	jbe    0x4296bb
  42971f:	mov    edi,0xa1e91c8e
  429724:	stos   DWORD PTR es:[edi],eax
  429725:	retf   
  429726:	mov    ch,0x57
  429728:	xchg   ecx,eax
  429729:	xchg   sp,ax
  42972b:	aaa    
  42972c:	ret    0xeb05
  42972f:	jae    0x42973d
  429731:	xchg   esi,eax
  429732:	or     ebx,DWORD PTR [eax+0x7eb3bae6]
  429738:	add    ebp,DWORD PTR [ecx+0x41]
  42973b:	and    DWORD PTR [edi-0x2132daf3],0xffffffd6
  429742:	mov    ecx,0x789e2a2b
  429747:	in     eax,0x5c
  429749:	inc    edi
  42974a:	dec    eax
  42974b:	xchg   DWORD PTR ds:0x5abfed0b,esi
  429751:	ret    0xace5
  429754:	mov    DWORD PTR [ecx+0x4433456c],edi
  42975a:	cmp    ebx,ecx
  42975c:	fsub   st(6),st
  42975e:	ret    
  42975f:	stos   DWORD PTR es:[edi],eax
  429760:	loopne 0x429796
  429762:	pusha  
  429763:	sub    eax,edi
  429765:	bound  ebx,QWORD PTR ds:0xc26930fc
  42976b:	sub    DWORD PTR [ecx-0x38],edi
  42976e:	mov    edx,0xfd8d63df
  429773:	mov    edi,0x3bfe4187
  429778:	mov    dh,0x5e
  42977a:	xor    dl,bh
  42977c:	xchg   DWORD PTR [ebx+0x2f40d7f6],eax
  429782:	sub    al,0xe8
  429785:	jmp    0x29403de4
  42978a:	test   eax,0xc92f030a
  42978f:	push   0x47ce90cf
  429794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429795:	stos   DWORD PTR es:[edi],eax
  429796:	mov    ecx,0x6a25a938
  42979b:	mov    dh,0x35
  42979d:	jle    0x42978d
  42979f:	fdivr  DWORD PTR [edx-0x38]
  4297a2:	fisubr DWORD PTR [eax]
  4297a4:	repnz lock cmp DWORD PTR [esi],edx
  4297a8:	jnp    0x429792
  4297aa:	xchg   bl,dh
  4297ac:	xchg   ebx,eax
  4297ad:	jl     0x4297e5
  4297af:	mov    ds:0xcc598c25,al
  4297b4:	int    0x93
  4297b6:	retf   0x175d
  4297b9:	arpl   WORD PTR [edi],si
  4297bb:	jns    0x4297d7
  4297bd:	add    BYTE PTR [eax-0x9],bh
  4297c0:	dec    ebx
  4297c1:	xchg   ebp,eax
  4297c2:	add    dh,bl
  4297c4:	js     0x42977e
  4297c6:	jae    0x4297d1
  4297c8:	test   DWORD PTR [edx+0x15feac85],ebx
  4297ce:	test   eax,0x80ea73ad
  4297d3:	mov    al,ds:0x797f377e
  4297d8:	or     al,0xb4
  4297da:	aas    
  4297db:	jmp    0x4297b5
  4297dd:	jl     0x42977b
  4297df:	sar    ch,0x71
  4297e2:	jo     0x42984c
  4297e4:	lea    ecx,[ebx]
  4297e6:	test   DWORD PTR [esi-0x7c4f2d82],edi
  4297ec:	call   0x9f54dffb
  4297f1:	gs enter 0x42e2,0x15
  4297f6:	inc    esi
  4297f7:	aad    0x11
  4297f9:	push   cs
  4297fa:	sub    bl,BYTE PTR [esi+0x33a4cfa]
  429800:	mov    edx,0xc1bc666b
  429805:	fldenv [eax-0x17a4b763]
  42980b:	mov    edi,DWORD PTR [edx-0x7]
  42980e:	data16 int 0x9f
  429811:	xor    DWORD PTR [edi+ecx*4+0x4cea3e52],ecx
  429818:	adc    BYTE PTR [edi],bh
  42981a:	pop    edi
  42981b:	push   ds
  42981c:	add    DWORD PTR [eax],0xffffffdd
  42981f:	mov    ecx,0x8f4fce44
  429824:	jo     0x429803
  429826:	sbb    ecx,esi
  429828:	aad    0xf2
  42982a:	cmp    DWORD PTR [ebp+0x559270f2],0x32523d8c
  429834:	cmp    al,0xd7
  429837:	jno    0x4298a3
  429839:	jae    0x429844
  42983b:	push   DWORD PTR ds:0xce8b308
  429841:	fisttp QWORD PTR [eax+0x37]
  429844:	(bad)  
  429845:	out    dx,al
  429846:	xchg   ebp,eax
  429847:	sub    al,0x35
  429849:	bound  esi,QWORD PTR [esi]
  42984b:	xlat   BYTE PTR ds:[ebx]
  42984c:	mov    ah,0xa8
  42984e:	mov    bl,0xdc
  429850:	push   ss
  429851:	call   0xf6aed116
  429856:	cmp    DWORD PTR [esi],edi
  429858:	ja     0x4297eb
  42985a:	lahf   
  42985b:	fs dec ecx
  42985d:	jnp    0x429828
  42985f:	cli    
  429860:	lds    ebx,FWORD PTR [esi-0x6d]
  429863:	fild   DWORD PTR ds:0x2b837549
  429869:	push   ds
  42986a:	outs   dx,DWORD PTR es:[esi]
  42986c:	xchg   esi,eax
  42986d:	dec    ecx
  42986e:	xchg   esp,eax
  42986f:	or     DWORD PTR [esi-0x73],0x70
  429873:	fcomp  DWORD PTR [ecx-0x4014062b]
  429879:	int    0xe4
  42987b:	jo     0x429837
  42987d:	adc    eax,0x29c272c2
  429882:	or     eax,0xfc52af70
  429887:	out    dx,eax
  429888:	push   esi
  429889:	dec    ebx
  42988a:	popa   
  42988b:	in     al,dx
  42988c:	mov    WORD PTR [ebp+0x37],es
  42988f:	mov    bl,0x31
  429891:	mov    ecx,0xaf8ddb9d
  429896:	sbb    BYTE PTR [ebp+0x32],dh
  429899:	add    esi,DWORD PTR [eax-0xa342848]
  42989f:	dec    ebp
  4298a0:	(bad)  
  4298a1:	sti    
  4298a2:	jo     0x4298f4
  4298a4:	pop    ds
  4298a5:	pop    ds
  4298a6:	iret   
  4298a7:	mov    dh,0xda
  4298a9:	cmp    ecx,eax
  4298ab:	test   eax,0xb0b7ee8b
  4298b0:	xchg   edi,eax
  4298b1:	fbstp  TBYTE PTR [edx+0x5c]
  4298b4:	pop    ss
  4298b5:	pop    esp
  4298b6:	jae    0x429896
  4298b8:	push   edi
  4298b9:	xor    al,0xbf
  4298bb:	mov    al,0x8c
  4298bd:	and    DWORD PTR [esi+0x74],eax
  4298c0:	mov    ah,0x4a
  4298c2:	inc    edx
  4298c3:	xchg   edi,eax
  4298c4:	pop    ecx
  4298c5:	cld    
  4298c6:	lds    edx,FWORD PTR [ecx]
  4298c8:	jno    0x429862
  4298ca:	pop    ebx
  4298cb:	mov    ebx,0x39b61be6
  4298d0:	scas   eax,DWORD PTR es:[edi]
  4298d1:	mov    DWORD PTR [ebx-0x4b],esi
  4298d4:	scas   al,BYTE PTR es:[edi]
  4298d5:	sub    eax,0xa37bed25
  4298da:	call   DWORD PTR [esi]
  4298dc:	aas    
  4298dd:	ins    BYTE PTR es:[edi],dx
  4298de:	pushf  
  4298df:	clc    
  4298e0:	push   es
  4298e1:	iret   
  4298e2:	mov    ebp,0xcaffa929
  4298e7:	sub    eax,0x34717012
  4298ec:	jmp    DWORD PTR [eax-0x73393156]
  4298f2:	popf   
  4298f3:	shr    DWORD PTR [edi-0x3aaedbfe],1
  4298f9:	idiv   BYTE PTR [ebx-0x5f378280]
  4298ff:	push   ebp
  429900:	dec    ebx
  429901:	cmp    eax,0xd4a81345
  429906:	xchg   ebp,eax
  429907:	loop   0x4298c7
  429909:	sub    BYTE PTR [ecx],bh
  42990b:	test   BYTE PTR [edx+0x2c],dl
  42990e:	push   0xffffffb9
  429910:	jge    0x42995f
  429912:	xor    ecx,ebp
  429914:	inc    edx
  429915:	aad    0x76
  429917:	xchg   esi,eax
  429918:	add    eax,DWORD PTR [esi-0x54]
  42991b:	mov    ebx,0x9020a847
  429920:	scas   al,BYTE PTR es:[edi]
  429921:	arpl   bx,dx
  429923:	pusha  
  429924:	adc    BYTE PTR [ebp+0x61],bh
  429927:	add    al,0xa1
  429929:	imul   edi,DWORD PTR [ecx+ecx*1+0x1c],0xffffffd5
  42992e:	cli    
  42992f:	sti    
  429930:	loop   0x429959
  429932:	(bad)  
  429933:	ret    
  429934:	stc    
  429935:	jmp    0x1e0708a6
  42993a:	mov    BYTE PTR [ebx+0xb],0x5e
  42993e:	push   esi
  42993f:	xchg   ebp,eax
  429940:	dec    edi
  429941:	inc    esi
  429942:	dec    ebp
  429943:	inc    ecx
  429944:	mov    eax,ds:0x40f51a91
  429949:	mov    eax,ds:0xb031f9e6
  42994e:	mov    al,0x4b
  429950:	xchg   edx,eax
  429951:	mov    cl,0xfd
  429953:	xchg   edi,eax
  429954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429955:	push   edx
  429956:	jnp    0x4299a4
  429958:	in     al,0xb8
  42995a:	cmp    eax,0x43795874
  42995f:	lock iret 
  429961:	mov    cl,0x7b
  429963:	and    DWORD PTR [ebx-0x3f],edx
  429966:	leave  
  429967:	jmp    0x42994d
  429969:	hlt    
  42996a:	pop    esp
  42996b:	dec    eax
  42996c:	or     edi,ebp
  42996e:	or     al,0xd7
  429970:	adc    al,0x97
  429972:	ds inc esp
  429974:	push   edx
  429975:	outs   dx,DWORD PTR ds:[esi]
  429976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429977:	xchg   ecx,eax
  429978:	dec    eax
  429979:	ror    DWORD PTR [eax-0x628a63b5],1
  42997f:	fwait
  429980:	sbb    DWORD PTR [ebx-0x72],eax
  429983:	daa    
  429984:	jge    0x4299e4
  429986:	inc    edi
  429987:	lods   al,BYTE PTR ds:[esi]
  429988:	jge    0x429965
  42998a:	xchg   esp,eax
  42998b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42998c:	push   es
  42998d:	in     eax,dx
  42998e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42998f:	fmul   st,st(5)
  429991:	lods   al,BYTE PTR ds:[esi]
  429992:	sub    BYTE PTR [ecx+0x0],0x37
  429996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429997:	mov    cx,0x1886
  42999b:	fnstcw WORD PTR [edx]
  42999d:	gs popf 
  42999f:	dec    ebx
  4299a0:	jae    0x4299e4
  4299a2:	js     0x429958
  4299a4:	in     al,0xc0
  4299a6:	jbe    0x42995e
  4299a8:	mov    cl,0x55
  4299aa:	jp     0x42999d
  4299ac:	cwde   
  4299ad:	in     eax,0x8b
  4299af:	xor    esi,ebp
  4299b1:	xor    al,0xb1
  4299b3:	mov    DWORD PTR [ebx-0x1e],edi
  4299b6:	std    
  4299b7:	dec    esp
  4299b8:	jle    0x429956
  4299ba:	sub    bh,BYTE PTR [ebx-0x3e]
  4299bd:	dec    ebp
  4299be:	daa    
  4299bf:	fwait
  4299c0:	popf   
  4299c1:	xchg   edi,eax
  4299c2:	mov    ebx,0xdcb3a34c
  4299c7:	call   0xfa00:0xb607a2df
  4299ce:	push   esi
  4299cf:	or     esi,esp
  4299d1:	add    DWORD PTR gs:[edx+0x1d569af7],eax
  4299d8:	mov    bl,dh
  4299da:	cs dec ebx
  4299dc:	jne    0x4299dd
  4299de:	and    cl,dh
  4299e0:	repnz mov dl,0xfd
  4299e3:	mov    cl,0xda
  4299e5:	mov    ch,0x1c
  4299e7:	jmp    0x36c3ebf1
  4299ec:	or     al,BYTE PTR [ecx+0x78]
  4299ef:	test   eax,0x4b452532
  4299f4:	push   ss
  4299f5:	push   cs
  4299f6:	xchg   ebx,eax
  4299f7:	dec    esi
  4299f8:	mov    ebp,0x91d7f74
  4299fd:	pop    ebp
  4299fe:	dec    ecx
  4299ff:	cs xchg edi,eax
  429a01:	repnz cmp eax,0xb0a46743
  429a07:	and    DWORD PTR [eax-0x13],edi
  429a0a:	mov    ebx,DWORD PTR [edi]
  429a0c:	sub    al,0xd2
  429a0e:	add    cl,ah
  429a10:	ss pop esi
  429a12:	jp     0x4299b5
  429a14:	imul   edx,DWORD PTR [ebx],0xffffffc8
  429a17:	jno    0x429a71
  429a19:	xor    bl,BYTE PTR [esi-0x3810f6d]
  429a1f:	mov    dh,0x68
  429a21:	and    al,0x63
  429a23:	ins    DWORD PTR es:[edi],dx
  429a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a25:	push   ss
  429a26:	xchg   eax,esi
  429a28:	hlt    
  429a29:	iret   
  429a2a:	mov    dl,0xf6
  429a2c:	cwde   
  429a2d:	xchg   esi,eax
  429a2e:	sbb    al,0x3a
  429a30:	mov    cl,0xd3
  429a32:	cmp    BYTE PTR [edi+eiz*8+0x1f],cl
  429a36:	gs jb  0x429a6d
  429a39:	sahf   
  429a3a:	mov    WORD PTR [edx+0x7c2b3930],ds
  429a40:	inc    esi
  429a41:	cmp    bl,dh
  429a43:	(bad)  
  429a44:	xor    cl,ch
  429a46:	lods   eax,DWORD PTR ds:[esi]
  429a47:	fwait
  429a48:	xor    al,0xec
  429a4a:	inc    edi
  429a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a4c:	push   ebx
  429a4d:	push   edi
  429a4e:	popf   
  429a4f:	dec    esi
  429a50:	xchg   edi,eax
  429a51:	in     eax,0x33
  429a53:	xchg   edx,eax
  429a54:	ds jbe 0x429a35
  429a57:	ins    BYTE PTR es:[edi],dx
  429a58:	fld    TBYTE PTR [edi]
  429a5a:	adc    eax,DWORD PTR [edx]
  429a5c:	cmp    edx,DWORD PTR [ebp+0x12]
  429a5f:	jge    0x429a2a
  429a61:	mov    edi,edx
  429a63:	xor    BYTE PTR [edx+0x74dedf2c],ch
  429a69:	fbld   TBYTE PTR [esi+0x1a3ad67e]
  429a6f:	xchg   esi,eax
  429a70:	adc    ch,BYTE PTR es:[ecx+0x6be96a8b]
  429a77:	fidiv  DWORD PTR ds:0x72b3e7ef
  429a7d:	loop   0x429ab9
  429a7f:	pop    ebp
  429a80:	adc    esp,DWORD PTR [esi-0x4cc4329b]
  429a86:	mov    ah,0xc
  429a88:	mov    al,0x49
  429a8a:	cmp    bl,cl
  429a8c:	cmp    BYTE PTR [edx-0x1b8c9906],dh
  429a92:	(bad)  
  429a93:	pop    ecx
  429a94:	adc    DWORD PTR [ecx-0x2abd2818],edx
  429a9a:	mov    ah,0x36
  429a9c:	in     eax,dx
  429a9d:	push   ss
  429a9e:	ret    0x5e1f
  429aa1:	add    BYTE PTR [ebp-0x3c4a4d0b],0xef
  429aa8:	and    ecx,DWORD PTR [ecx+ebp*2]
  429aab:	daa    
  429aac:	adc    al,0xb8
  429aae:	adc    DWORD PTR [esi],eax
  429ab0:	add    BYTE PTR [ebx+0x4d999d6b],bl
  429ab6:	push   ebp
  429ab7:	mov    esp,0x14d229ca
  429abc:	xor    cl,al
  429abe:	dec    edx
  429abf:	push   ebp
  429ac0:	adc    al,BYTE PTR [eax]
  429ac2:	out    dx,al
  429ac3:	mov    bl,0xf2
  429ac5:	sbb    al,0xdb
  429ac7:	pop    ss
  429ac8:	inc    esp
  429ac9:	mov    ecx,0x1d4b9d0f
  429ace:	fist   WORD PTR [edx+0x75]
  429ad1:	xchg   esp,eax
  429ad2:	ins    BYTE PTR es:[edi],dx
  429ad3:	shl    DWORD PTR [edi+0x14],0x2b
  429ad7:	mov    al,0x2f
  429ad9:	imul   edi,edi,0xcc6f7109
  429adf:	add    DWORD PTR [esi],ebp
  429ae1:	mov    ebp,0x5e9a4e47
  429ae6:	fld    TBYTE PTR [eax-0x3]
  429ae9:	stos   DWORD PTR es:[edi],eax
  429aea:	and    bl,BYTE PTR [edi-0x73081b0e]
  429af0:	pop    ds
  429af1:	mov    cl,0x51
  429af3:	xchg   ecx,eax
  429af4:	hlt    
  429af5:	push   esi
  429af6:	stos   BYTE PTR es:[di],al
  429af8:	pop    ss
  429af9:	mov    eax,DWORD PTR [ebx+0x6c]
  429afc:	sti    
  429afd:	gs jo  0x429aaa
  429b00:	push   eax
  429b01:	fsub   QWORD PTR [ebp-0x6cbb8cbb]
  429b07:	jp     0x429ac5
  429b09:	cmp    eax,0xe5f9cce4
  429b0e:	add    edi,ecx
  429b10:	push   eax
  429b11:	sub    ch,BYTE PTR [eax-0x6a]
  429b14:	xchg   ebx,eax
  429b15:	xor    edx,DWORD PTR [esi]
  429b17:	adc    DWORD PTR [eax+0x58],eax
  429b1a:	fild   DWORD PTR [ebx+0x12cd5525]
  429b20:	jle    0x429b45
  429b22:	sub    al,0x4
  429b24:	jl     0x429b9e
  429b26:	into   
  429b27:	inc    edx
  429b28:	test   DWORD PTR [esi+0xf336472],ebp
  429b2e:	xchg   ecx,eax
  429b2f:	popa   
  429b30:	in     al,0x7f
  429b32:	fld    TBYTE PTR [ebp+0x66219f82]
  429b38:	inc    esi
  429b39:	add    eax,0x1462a4bc
  429b3e:	mov    eax,0xefa869ce
  429b43:	sbb    BYTE PTR [edx],0xa0
  429b46:	call   0x6a58:0xac51cfe4
  429b4d:	xchg   ecx,eax
  429b4e:	adc    eax,0x8a6fa595
  429b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b54:	call   0x267f1a80
  429b59:	xor    DWORD PTR [ebx],ebp
  429b5b:	mov    bh,0x6c
  429b5d:	mov    esi,0x9d319fa6
  429b62:	pop    ecx
  429b63:	fnsave [ecx+0x4d]
  429b66:	outs   dx,BYTE PTR ds:[esi]
  429b67:	inc    eax
  429b68:	sub    ch,BYTE PTR [ebx]
  429b6a:	push   0xffffffcb
  429b6c:	xchg   esp,eax
  429b6d:	ins    DWORD PTR es:[edi],dx
  429b6e:	mov    bl,0xe4
  429b70:	push   ds
  429b71:	(bad)  
  429b72:	adc    eax,0x191bf52c
  429b77:	push   ebx
  429b78:	mov    esi,0x4303d03f
  429b7d:	pop    ds
  429b7e:	fstp   TBYTE PTR [ecx]
  429b80:	jl     0x429baf
  429b82:	jbe    0x429b83
  429b84:	sub    edx,ebp
  429b86:	add    al,0xe1
  429b88:	leave  
  429b89:	aad    0xf
  429b8b:	push   ds
  429b8c:	sbb    ch,dh
  429b8e:	xchg   bp,ax
  429b90:	mov    bl,0x39
  429b92:	sbb    dh,bl
  429b94:	xchg   ecx,eax
  429b95:	fadd   st(2),st
  429b97:	or     al,0xc4
  429b99:	icebp  
  429b9a:	test   al,0xa4
  429b9c:	out    0x2c,eax
  429b9e:	(bad)  [ebx+esi*8]
  429ba1:	or     al,0xd3
  429ba3:	cld    
  429ba4:	scas   al,BYTE PTR es:[edi]
  429ba5:	fcomp  DWORD PTR [esi-0x59]
  429ba8:	sub    al,0x33
  429baa:	jb     0x429b9c
  429bac:	xor    bl,BYTE PTR [ecx+ebp*2-0x7ab343c2]
  429bb3:	xchg   esp,eax
  429bb4:	sbb    cl,al
  429bb6:	sbb    al,0x32
  429bb8:	mov    WORD PTR [ebx+0x76a4d396],?
  429bbe:	out    dx,eax
  429bbf:	stc    
  429bc0:	repz clc 
  429bc2:	push   ebp
  429bc3:	pop    ebx
  429bc4:	sbb    ah,BYTE PTR [ebp+0x11255ec1]
  429bca:	jmp    0x7ada:0x121533bf
  429bd1:	scas   al,BYTE PTR es:[edi]
  429bd2:	add    BYTE PTR [esi+0x5b],dh
  429bd5:	xchg   DWORD PTR [edi],ebx
  429bd7:	ins    BYTE PTR es:[edi],dx
  429bd8:	cmp    al,0x16
  429bda:	add    ebp,ebx
  429bdc:	and    bh,dh
  429bde:	jnp    0x429c01
  429be0:	sahf   
  429be1:	xor    al,0xa6
  429be3:	and    dh,al
  429be5:	cmp    BYTE PTR [edx+edx*1+0x7e],ch
  429be9:	add    al,0xc8
  429beb:	test   ah,ch
  429bed:	packssdw mm0,QWORD PTR [ebx-0x29]
  429bf1:	and    BYTE PTR [eax+ebp*4+0x73fa9f5d],0x1d
  429bf9:	jle    0x429c45
  429bfb:	jmp    0xc9f92cf3
  429c00:	shl    dl,cl
  429c02:	inc    ebp
  429c03:	arpl   WORD PTR [esi],di
  429c05:	or     ecx,DWORD PTR [ebp-0x1c]
  429c08:	es cmp al,bh
  429c0b:	out    0x38,al
  429c0d:	fs cmp eax,0x4123f114
  429c13:	and    ebp,ecx
  429c15:	sbb    BYTE PTR [ecx+0x72],ah
  429c18:	cmp    DWORD PTR [esi-0x78],edi
  429c1b:	fs or  eax,0x80e5fdea
  429c21:	sub    eax,0x9c4dea0f
  429c26:	inc    edi
  429c27:	sub    BYTE PTR [esi],ch
  429c29:	jb     0x429c2f
  429c2b:	out    dx,al
  429c2c:	pushf  
  429c2d:	xchg   esp,eax
  429c2e:	inc    ebp
  429c2f:	push   cs
  429c30:	fist   DWORD PTR [ecx]
  429c32:	xchg   esp,eax
  429c33:	lock push ebx
  429c35:	js     0x429c7e
  429c37:	popf   
  429c38:	nop
  429c39:	lods   al,BYTE PTR ds:[esi]
  429c3a:	pushf  
  429c3b:	loopne 0x429c85
  429c3d:	fst    DWORD PTR [esi-0x7]
  429c40:	sbb    bh,dl
  429c42:	outs   dx,DWORD PTR ds:[esi]
  429c43:	test   DWORD PTR [edi+eax*2],esp
  429c46:	or     al,0x97
  429c48:	sub    DWORD PTR [eax],esp
  429c4a:	jg     0x429be6
  429c4c:	hlt    
  429c4d:	mov    edi,0x1781ad34
  429c52:	clc    
  429c53:	cs ds pop eax
  429c56:	cli    
  429c57:	mov    dh,0x63
  429c59:	add    DWORD PTR [esi-0xe85be2a],eax
  429c5f:	mov    bl,0x5a
  429c61:	sub    DWORD PTR [esi+0x50],ecx
  429c64:	add    ebx,DWORD PTR [esi-0x42]
  429c67:	mov    eax,0xa8f557eb
  429c6c:	push   eax
  429c6d:	stos   BYTE PTR es:[edi],al
  429c6e:	fbstp  TBYTE PTR ds:0x8d685f5a
  429c74:	retf   
  429c75:	(bad)  
  429c76:	lea    eax,[edx+0x43]
  429c79:	cwde   
  429c7a:	mov    eax,ds:0x67279ad2
  429c7f:	sub    BYTE PTR [edi-0x38],0x2e
  429c83:	push   es
  429c84:	dec    esp
  429c85:	(bad)  
  429c86:	call   0xd9c7:0xaac22852
  429c8d:	push   cs
  429c8e:	xor    ah,BYTE PTR [esi]
  429c90:	repnz pop ebx
  429c92:	fs add eax,0x29c9eecc
  429c98:	sub    al,0xa8
  429c9a:	cmp    eax,DWORD PTR [edx-0x29335db8]
  429ca0:	mov    ecx,0x1f5a544c
  429ca5:	add    ah,BYTE PTR [ecx]
  429ca7:	ss xor eax,0xc7be9f1e
  429cad:	pop    ecx
  429cae:	(bad)  
  429caf:	lods   eax,DWORD PTR ds:[esi]
  429cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429cb1:	leave  
  429cb2:	(bad)  
  429cb3:	retf   0x7934
  429cb6:	jae    0x429cde
  429cb8:	(bad)  
  429cb9:	ret    
  429cba:	stc    
  429cbb:	xchg   DWORD PTR [edx-0x2a5da426],ebp
  429cc1:	adc    DWORD PTR [edx],esp
  429cc3:	sub    BYTE PTR [edi-0x18a61e51],dh
  429cc9:	fiadd  WORD PTR [eax-0x1a]
  429ccc:	sub    dl,BYTE PTR [ebx+0x3b]
  429ccf:	add    eax,0xfe149e33
  429cd4:	inc    edx
  429cd5:	cmp    DWORD PTR [esi],edi
  429cd7:	lahf   
  429cd8:	jmp    0x429c70
  429cda:	aaa    
  429cdb:	test   DWORD PTR [edi+edx*8+0x5e],ecx
  429cdf:	cmp    dh,BYTE PTR [edx+0x455434a6]
  429ce5:	arpl   WORD PTR [ecx-0x77],sp
  429ce8:	cli    
  429ce9:	dec    esi
  429cea:	add    al,0xae
  429cec:	jge    0x429d61
  429cee:	adc    al,0x2
  429cf0:	retf   0x3ba5
  429cf3:	jl     0x429cbb
  429cf5:	fisub  WORD PTR [eax+0x1b]
  429cf8:	pushf  
  429cf9:	aaa    
  429cfa:	and    esp,0x6b
  429cfd:	cmc    
  429cfe:	push   eax
  429cff:	add    DWORD PTR [edx+0x635413fc],ecx
  429d05:	jne    0x429ccf
  429d07:	mov    ds:0xc94a0011,al
  429d0c:	xchg   ebp,eax
  429d0d:	push   cs
  429d0e:	jle    0x429cc4
  429d10:	xchg   edx,eax
  429d11:	pop    esp
  429d12:	push   ebx
  429d13:	ror    DWORD PTR [eax],cl
  429d15:	adc    eax,0x1ce925e5
  429d1a:	sbb    bl,ch
  429d1c:	and    al,0xd1
  429d1e:	adc    DWORD PTR ds:[edx+0x26],esp
  429d22:	add    DWORD PTR [ebp+0x50],esp
  429d25:	and    BYTE PTR [edi],dl
  429d27:	jnp    0x429ce4
  429d29:	push   0xf
  429d2b:	inc    esi
  429d2c:	push   0x566909b
  429d31:	fimul  WORD PTR [esi+0x5b75fee1]
  429d37:	ja     0x429d13
  429d39:	mov    ch,0x45
  429d3b:	fdivr  DWORD PTR [eax]
  429d3d:	mov    DWORD PTR [ecx],ecx
  429d3f:	stos   BYTE PTR es:[edi],al
  429d40:	and    eax,esi
  429d42:	(bad)  
  429d43:	lea    ecx,[edi]
  429d45:	(bad)
  429d49:	gs std 
  429d4b:	mov    ds:0x98ff259a,eax
  429d50:	jmp    0x429cdb
  429d52:	icebp  
  429d53:	shl    BYTE PTR [ebx-0x7f6daa56],cl
  429d59:	loop   0x429d7b
  429d5b:	jns    0x429ce4
  429d5d:	pop    es
  429d5e:	out    0x9e,eax
  429d60:	jg     0x429d06
  429d62:	and    DWORD PTR [eax],esi
  429d64:	xor    BYTE PTR [ebx+0x2906c628],ch
  429d6a:	jae    0x429d61
  429d6c:	neg    DWORD PTR ds:0x740ef0cd
  429d72:	and    eax,edi
  429d74:	push   edx
  429d75:	adc    DWORD PTR [edi-0x78114555],0xd5cdcf0b
  429d7f:	inc    ebp
  429d80:	sbb    eax,0x39a61425
  429d85:	stos   BYTE PTR es:[edi],al
  429d86:	add    eax,0xe066435b
  429d8b:	cld    
  429d8c:	imul   ebp,edx,0xffffffd4
  429d8f:	shr    DWORD PTR [esi-0x6a9c78fc],cl
  429d95:	cld    
  429d96:	ins    BYTE PTR es:[edi],dx
  429d97:	mov    esi,0xda1cbdbb
  429d9c:	push   0xffffff9b
  429d9e:	inc    esi
  429d9f:	std    
  429da0:	imul   edi,ebp,0xfffffffd
  429da3:	test   al,0xdd
  429da5:	shr    BYTE PTR es:[edx],cl
  429da8:	cmc    
  429da9:	daa    
  429daa:	out    dx,al
  429dab:	add    ecx,ebp
  429dad:	sub    cl,BYTE PTR [edx]
  429daf:	mov    ds:0x68a4c688,eax
  429db4:	push   0x72
  429db6:	sbb    bl,BYTE PTR [esp+esi*8]
  429db9:	daa    
  429dba:	call   0x1fdb:0x9d8c0dd5
  429dc1:	xchg   BYTE PTR [esi-0x60],al
  429dc4:	jl     0x429d9f
  429dc6:	and    DWORD PTR [edx],ebx
  429dc8:	xor    edx,DWORD PTR [ebp-0x7d]
  429dcb:	scas   eax,DWORD PTR es:[edi]
  429dcc:	and    bh,BYTE PTR [edx]
  429dce:	inc    eax
  429dcf:	ds nop
  429dd1:	stc    
  429dd2:	mov    dh,0x4a
  429dd4:	test   al,0xfe
  429dd6:	or     eax,0x860f1f71
  429ddb:	aad    0x58
  429ddd:	cmp    eax,0x29d47db9
  429de2:	pop    ebx
  429de3:	cmc    
  429de4:	mov    dl,0x43
  429de6:	shr    BYTE PTR [edi],0x52
  429de9:	jl     0x429e5d
  429deb:	inc    ebp
  429dec:	dec    esi
  429ded:	push   cs
  429dee:	cs cmc 
  429df0:	adc    BYTE PTR [ecx],dh
  429df2:	adc    DWORD PTR [edx-0x7155e83],edi
  429df8:	out    dx,eax
  429df9:	mov    al,cs:0x557be287
  429dff:	mov    dh,0x38
  429e01:	push   ebx
  429e02:	adc    BYTE PTR [ecx],0xd9
  429e05:	neg    BYTE PTR [eax]
  429e07:	xor    eax,ebx
  429e09:	xchg   esp,ebx
  429e0b:	inc    ebx
  429e0c:	lock adc al,bl
  429e0f:	out    0x76,al
  429e11:	call   0xb99d:0x97f02ebf
  429e18:	xor    esp,esi
  429e1a:	icebp  
  429e1b:	(bad)  
  429e1c:	cmp    eax,0xc89c646b
  429e21:	jle    0x429de8
  429e23:	dec    esp
  429e25:	loop   0x429dab
  429e27:	mov    ds:0xe6184e11,al
  429e2c:	mov    dl,0x63
  429e2e:	adc    bh,0xcf
  429e31:	adc    DWORD PTR [esi-0x31],edx
  429e34:	dec    esi
  429e35:	daa    
  429e36:	leave  
  429e37:	enter  0xe3f4,0x70
  429e3b:	(bad)  
  429e3c:	fcomip st,st(3)
  429e3e:	in     al,0xa0
  429e40:	mov    eax,0xe0e1b7f
  429e45:	cmp    esp,esp
  429e47:	js     0x429e04
  429e49:	lahf   
  429e4a:	push   esp
  429e4b:	xor    al,0x8f
  429e4d:	stos   DWORD PTR es:[edi],eax
  429e4e:	add    edi,0x9c5ca9a4
  429e54:	jmp    0x429de4
  429e56:	sbb    BYTE PTR [eax],cl
  429e58:	xchg   edi,eax
  429e59:	daa    
  429e5a:	adc    BYTE PTR ds:0x4214da3a,dl
  429e60:	jecxz  0x429e55
  429e62:	idiv   BYTE PTR [edi]
  429e64:	xchg   ecx,eax
  429e65:	push   es
  429e66:	arpl   sp,dx
  429e68:	xchg   esp,eax
  429e69:	leave  
  429e6a:	mov    fs,WORD PTR [bp+0x6172]
  429e6f:	push   esp
  429e70:	and    eax,DWORD PTR [ecx+0x14]
  429e73:	outs   dx,DWORD PTR ds:[esi]
  429e74:	test   edx,eax
  429e76:	sar    DWORD PTR [edx+0x70],cl
  429e79:	or     esi,DWORD PTR [edx-0x49a83d5]
  429e7f:	fbstp  TBYTE PTR [esi+0xe5a6764]
  429e85:	(bad)  
  429e86:	push   esi
  429e87:	lods   al,BYTE PTR ds:[esi]
  429e88:	mov    ch,0x3
  429e8a:	loopne 0x429ee7
  429e8c:	addr16 hlt 
  429e8e:	mov    al,ds:0x12ca2dd6
  429e93:	and    eax,0xb7c5ddb3
  429e98:	pop    ss
  429e99:	jmp    0x352f:0x70af6d07
  429ea0:	rcl    DWORD PTR [ecx-0x21],0xba
  429ea4:	not    DWORD PTR [edi+eax*2-0x57ecbe50]
  429eab:	(bad)
  429eae:	ins    DWORD PTR es:[edi],dx
  429eaf:	adc    eax,0x12243303
  429eb4:	add    al,0x80
  429eb6:	add    DWORD PTR [esi],0xffffffe5
  429eb9:	fsub   st,st(1)
  429ebb:	push   cs
  429ebc:	cdq    
  429ebd:	mov    ?,WORD PTR cs:[ecx+eax*8]
  429ec1:	sub    eax,0xdeb4f94f
  429ec6:	push   0x7002009f
  429ecb:	dec    edx
  429ecc:	scas   eax,DWORD PTR es:[edi]
  429ecd:	bnd jne 0x429e5d
  429ed0:	xchg   ebx,eax
  429ed1:	in     al,dx
  429ed2:	cli    
  429ed3:	inc    ebp
  429ed4:	pop    eax
  429ed5:	push   ds
  429ed6:	scas   al,BYTE PTR es:[edi]
  429ed7:	test   al,0x74
  429ed9:	mov    bh,0x29
  429edb:	sbb    BYTE PTR [ecx-0x2c25432a],al
  429ee1:	sub    DWORD PTR fs:[edx+0x49f48dcb],ebp
  429ee8:	sub    eax,0x8a6bab0c
  429eed:	pop    eax
  429eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eef:	and    al,0x99
  429ef1:	push   ss
  429ef2:	loopne 0x429f34
  429ef4:	adc    eax,0xf4200e23
  429ef9:	lods   eax,DWORD PTR ds:[esi]
  429efa:	icebp  
  429efb:	adc    eax,DWORD PTR [edx+0x6e]
  429efe:	cdq    
  429eff:	xchg   BYTE PTR [ebp-0x45e42c9d],al
  429f05:	fist   WORD PTR [ebp-0x2da53df2]
  429f0b:	ins    BYTE PTR es:[edi],dx
  429f0c:	pop    eax
  429f0d:	mov    DWORD PTR [ebx+0x30],ecx
  429f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f11:	rcr    edx,cl
  429f13:	jmp    0x429f71
  429f15:	xlat   BYTE PTR ds:[ebx]
  429f16:	nop
  429f17:	sbb    al,0x14
  429f19:	neg    DWORD PTR [eax]
  429f1b:	sahf   
  429f1c:	addr16 repnz stc 
  429f1f:	scas   al,BYTE PTR es:[edi]
  429f20:	push   eax
  429f21:	mov    esi,0xf34b1f5e
  429f26:	test   al,0x60
  429f28:	iret   
  429f29:	xor    DWORD PTR ds:0x4a843e18,esi
  429f2f:	fs push cs
  429f31:	lock push eax
  429f33:	xor    dl,BYTE PTR [edi+0x35a8de11]
  429f39:	or     eax,0x972a991f
  429f3e:	ret    0xa3ae
  429f41:	pop    es
  429f42:	stos   DWORD PTR es:[edi],eax
  429f43:	ds enter 0x873f,0x44
  429f48:	jmp    0xdef8:0x8dd934c6
  429f4f:	mov    esi,0x8ad10996
  429f54:	imul   esi,ebx,0x7dcf5c71
  429f5a:	xor    BYTE PTR fs:[edi],al
  429f5d:	jl     0x429f31
  429f5f:	cmp    eax,0xe6045dc0
  429f64:	dec    esp
  429f65:	xchg   ebx,eax
  429f66:	dec    edx
  429f67:	adc    dh,dh
  429f69:	imul   esp,DWORD PTR [edx-0x49],0xe405954a
  429f70:	pop    ebx
  429f71:	sub    ebx,DWORD PTR [ecx-0x30]
  429f74:	test   BYTE PTR [edx],dh
  429f76:	jecxz  0x429fc2
  429f78:	pop    ecx
  429f79:	ins    DWORD PTR es:[edi],dx
  429f7a:	sbb    edx,DWORD PTR [ecx-0x6c]
  429f7d:	adc    ebx,DWORD PTR [eax+0x36]
  429f80:	sub    esp,DWORD PTR [esi]
  429f82:	(bad)  
  429f83:	iret   
  429f84:	lods   al,BYTE PTR ss:[esi]
  429f86:	ds sahf 
  429f88:	inc    esp
  429f89:	ja     0x429fc9
  429f8b:	cld    
  429f8c:	dec    esi
  429f8d:	or     ecx,ecx
  429f8f:	(bad)  
  429f90:	das    
  429f91:	pop    ss
  429f92:	xchg   ebp,eax
  429f93:	outs   dx,DWORD PTR ds:[esi]
  429f94:	sbb    ah,BYTE PTR [edi]
  429f96:	sub    DWORD PTR [edx],edx
  429f98:	mov    al,0xb0
  429f9a:	mov    dl,0xac
  429f9c:	mov    ds:0xa763c04,eax
  429fa1:	add    DWORD PTR [ebx],esi
  429fa3:	and    ecx,0x74
  429fa6:	pushf  
  429fa7:	les    edx,FWORD PTR [ecx+0x16]
  429faa:	jl     0x429fc1
  429fac:	mov    eax,0x9cbc028d
  429fb1:	mov    dl,0xcb
  429fb3:	jnp    0x429f81
  429fb5:	sub    ebp,DWORD PTR [eax+0x45]
  429fb8:	jno    0x429fcc
  429fba:	sbb    cl,BYTE PTR ds:0x8ade6c38
  429fc1:	cmp    al,0xe2
  429fc3:	dec    edx
  429fc4:	clc    
  429fc5:	adc    BYTE PTR [esi],ah
  429fc7:	fdivp  st(2),st
  429fc9:	out    0x51,eax
  429fcb:	jg     0x429f9c
  429fcd:	inc    esp
  429fce:	or     eax,edi
  429fd0:	outs   dx,BYTE PTR ds:[esi]
  429fd1:	jbe    0x429f8c
  429fd3:	xor    BYTE PTR [esi+0x34cc8060],ah
  429fd9:	cmp    BYTE PTR [esi+0x5b],cl
  429fdc:	ss mov esp,0xeb7abba6
  429fe2:	and    eax,0x3f2d98c7
  429fe7:	sub    eax,0xa19cb44b
  429fec:	fidiv  WORD PTR [ecx-0x75]
  429fef:	add    DWORD PTR [eax+0x32bd0c9c],0x3d
  429ff6:	bound  esp,QWORD PTR [eax]
  429ff8:	dec    edx
  429ff9:	fstp   DWORD PTR [edi-0x5a]
  429ffc:	sbb    eax,edi
  429ffe:	pop    es
  429fff:	pop    ebp
  42a000:	sub    al,0x70
  42a002:	add    ebp,DWORD PTR [eax-0x5b]
  42a005:	cmp    ah,BYTE PTR [ecx+ebx*1]
  42a008:	(bad)  
  42a009:	mov    dh,0xb3
  42a00b:	in     eax,0x98
  42a00d:	jbe    0x429f98
  42a00f:	jmp    0xd3ce:0xbb9be58e
  42a016:	or     eax,0xffffffd7
  42a019:	or     BYTE PTR [ebx+eax*1-0x69485912],bl
  42a020:	das    
  42a021:	cmp    ebp,ebx
  42a023:	in     eax,dx
  42a024:	inc    ebp
  42a025:	mov    ah,0x56
  42a027:	lods   eax,DWORD PTR ds:[esi]
  42a028:	cmp    ebx,ebx
  42a02a:	inc    esp
  42a02b:	mov    ds:0xecf00d14,eax
  42a030:	hlt    
  42a031:	and    dl,ah
  42a033:	imul   ch
  42a035:	add    BYTE PTR [ecx+eax*1+0x7a348aa0],ah
  42a03c:	aam    0xb4
  42a03e:	mov    WORD PTR [esp+edx*1],cs
  42a041:	test   BYTE PTR [ecx],ch
  42a043:	add    DWORD PTR [eax+0x21000688],esp
  42a049:	mov    bh,BYTE PTR [edi+0x271380d6]
  42a04f:	pop    esp
  42a050:	inc    ebp
  42a051:	frstor [edx+0x95bc1d5]
  42a057:	inc    edi
  42a058:	pop    esi
  42a059:	pop    esi
  42a05a:	sbb    dh,BYTE PTR [ebp-0x7e]
  42a05d:	idiv   ebx
  42a05f:	mov    es,esp
  42a061:	stos   BYTE PTR es:[edi],al
  42a062:	pop    esp
  42a063:	ins    DWORD PTR es:[edi],dx
  42a064:	sub    BYTE PTR [esi],dl
  42a066:	jne    0x42a0ab
  42a068:	jns    0x42a0a3
  42a06a:	lahf   
  42a06b:	xor    al,0xa7
  42a06d:	sub    dl,BYTE PTR [esi]
  42a06f:	adc    esp,DWORD PTR [edi-0x40]
  42a072:	pop    ebx
  42a073:	mov    eax,0xd1c5f65e
  42a078:	push   edx
  42a079:	sub    dl,BYTE PTR [eax-0xeb332c7]
  42a07f:	retf   0xb510
  42a082:	add    al,0xe4
  42a084:	jmp    FWORD PTR [eax+0x57a62e86]
  42a08a:	add    BYTE PTR [ecx+eiz*2],al
  42a08d:	mov    esi,0x7fa4ad37
  42a092:	icebp  
  42a093:	mov    ds:0x85652103,eax
  42a098:	imul   eax,DWORD PTR [esi+0x3560eb0d],0xffffffc7
  42a09f:	test   eax,0xcb765c10
  42a0a4:	clc    
  42a0a5:	lea    esp,[edi]
  42a0a7:	fsubrp st(5),st
  42a0a9:	mov    edi,0xbb1613c0
  42a0ae:	sahf   
  42a0af:	push   0xffffffa7
  42a0b1:	int    0x3b
  42a0b3:	or     eax,0xcc5da6f1
  42a0b8:	ins    DWORD PTR es:[edi],dx
  42a0b9:	pusha  
  42a0ba:	into   
  42a0bb:	mov    al,0x7c
  42a0bd:	push   es
  42a0be:	and    DWORD PTR [edi+0x30],0x6c
  42a0c2:	retf   0xecf5
  42a0c5:	lods   eax,DWORD PTR ds:[esi]
  42a0c6:	out    0xe5,al
  42a0c8:	scas   eax,DWORD PTR es:[edi]
  42a0c9:	pop    edx
  42a0ca:	dec    edx
  42a0cb:	(bad)  
  42a0cc:	leave  
  42a0cd:	fadd   QWORD PTR [edx+0x42]
  42a0d0:	cli    
  42a0d1:	fmul   QWORD PTR ds:[edx+ecx*8-0x65]
  42a0d6:	jnp    0x42a088
  42a0d8:	les    ebx,FWORD PTR [esi+0x273da8c3]
  42a0de:	adc    dl,BYTE PTR [ebp+0x34]
  42a0e1:	loopne 0x42a07e
  42a0e3:	shr    DWORD PTR [ebx],1
  42a0e5:	fcom   DWORD PTR [ebp-0x6b]
  42a0e8:	xor    BYTE PTR [ebp+0x8815f0d],bl
  42a0ee:	or     DWORD PTR [ebx+0x4a],ebx
  42a0f1:	jno    0x42a137
  42a0f3:	loopne 0x42a148
  42a0f5:	int3   
  42a0f6:	cmp    BYTE PTR [ecx-0x45],bh
  42a0f9:	push   ds
  42a0fa:	jle    0x42a087
  42a0fc:	jno    0x42a084
  42a0fe:	imul   ebp,DWORD PTR ds:0xd46f75b5,0x21
  42a105:	or     al,0xed
  42a107:	adc    ah,dl
  42a109:	pop    ds
  42a10a:	cs push ebx
  42a10c:	call   0xf9f9:0xb44be8c5
  42a113:	cdq    
  42a114:	or     eax,0xfeb2b534
  42a119:	or     al,0x8
  42a11b:	jns    0x42a128
  42a11d:	test   DWORD PTR [ecx-0x27],ecx
  42a120:	mov    fs:0xb1eff6f6,eax
  42a126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a127:	dec    eax
  42a128:	pop    ebx
  42a129:	push   ebp
  42a12a:	out    dx,eax
  42a12b:	or     BYTE PTR [ebp+0x6568f064],0x68
  42a132:	lahf   
  42a133:	pmaddwd mm5,QWORD PTR [esi+0x209535e6]
  42a13a:	fs addr16 cli 
  42a13d:	jg     0x42a16a
  42a13f:	pop    esp
  42a140:	ret    
  42a141:	das    
  42a142:	mov    bl,bh
  42a144:	sti    
  42a145:	sbb    DWORD PTR [edi],edx
  42a147:	and    al,0x15
  42a149:	sub    esp,DWORD PTR [ebx-0x75fc0537]
  42a14f:	out    0xa1,eax
  42a151:	lods   al,BYTE PTR ds:[esi]
  42a152:	(bad)  
  42a153:	idiv   BYTE PTR [edx]
  42a155:	call   0x1dab:0x561e536f
  42a15c:	fs out 0x27,eax
  42a15f:	sbb    DWORD PTR [esi+0x478b3264],edi
  42a165:	cmp    bl,BYTE PTR [eax+0x758c489d]
  42a16b:	rcr    eax,cl
  42a16d:	call   0xb186a088
  42a172:	sub    al,0x47
  42a174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a175:	and    DWORD PTR [edi+0x2b977b96],ebx
  42a17b:	jns    0x42a1cc
  42a17d:	jge    0x42a12f
  42a17f:	or     esp,ebp
  42a181:	out    dx,al
  42a182:	xor    eax,0xf0b74b36
  42a187:	push   ebx
  42a188:	fstp   DWORD PTR [edx+eiz*4+0x42]
  42a18c:	mov    ecx,0xe03b82a9
  42a191:	in     eax,0xf1
  42a193:	faddp  st(2),st
  42a195:	iret   
  42a196:	setnp  BYTE PTR [esi]
  42a199:	lds    eax,FWORD PTR [edx]
  42a19b:	push   ebx
  42a19c:	push   ebp
  42a19d:	mov    BYTE PTR [edx+0x786ea7cd],0xd3
  42a1a4:	mov    WORD PTR [edx],?
  42a1a6:	sti    
  42a1a7:	jbe    0x42a1b3
  42a1a9:	loopne 0x42a215
  42a1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1ac:	sbb    al,BYTE PTR [esi+ebp*8+0x7d04e54d]
  42a1b3:	mov    bh,0xf0
  42a1b5:	cmp    ebx,DWORD PTR [ecx-0x53]
  42a1b8:	cmp    ebp,ecx
  42a1ba:	jle    0x42a1e3
  42a1bc:	dec    esp
  42a1bd:	addr16 mov edx,0xf6f9702f
  42a1c3:	shr    BYTE PTR [ecx+eax*4+0x2e2c0849],1
  42a1ca:	sub    al,0x83
  42a1cc:	imul   edi,DWORD PTR [ecx+0x2a],0xffffffae
  42a1d0:	and    al,0x4c
  42a1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1d3:	dec    esi
  42a1d4:	ins    BYTE PTR es:[edi],dx
  42a1d5:	mov    edi,0x4a70a52f
  42a1da:	mov    cl,0x12
  42a1dc:	ret    0x287c
  42a1df:	out    dx,eax
  42a1e0:	pop    esi
  42a1e1:	pop    ecx
  42a1e2:	inc    esi
  42a1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1e4:	enter  0x8642,0x76
  42a1e8:	sbb    dl,BYTE PTR [ecx+0x1b5d6922]
  42a1ee:	ins    BYTE PTR es:[edi],dx
  42a1ef:	das    
  42a1f0:	ss pop edx
  42a1f2:	pop    esp
  42a1f3:	bound  ebx,QWORD PTR [esi-0x66]
  42a1f6:	sbb    cl,0xca
  42a1f9:	mov    edx,0x43297bbb
  42a1fe:	push   esi
  42a1ff:	add    BYTE PTR [ecx-0x43b755a1],cl
  42a205:	or     cl,BYTE PTR [ecx+eiz*1+0x6c]
  42a209:	sbb    ecx,eax
  42a20b:	fprem1 
  42a20d:	sub    esi,DWORD PTR ds:0x25e3f155
  42a213:	add    DWORD PTR [esi+eiz*8-0x1f],0xb4c00635
  42a21b:	adc    al,0xde
  42a21d:	js     0x42a1c3
  42a21f:	mov    ebx,0x3f0bf997
  42a224:	mov    al,0xb7
  42a226:	mov    dh,0x44
  42a228:	xchg   ebp,eax
  42a229:	mov    ds:0x5f0d8b98,eax
  42a22e:	mov    cl,0xa1
  42a230:	dec    ebx
  42a231:	stc    
  42a232:	or     BYTE PTR [edi+0x75c0ef09],ah
  42a238:	lds    ebx,FWORD PTR [eax+0x7f50d8a4]
  42a23e:	js     0x42a25f
  42a240:	mov    ebp,0x360e7547
  42a245:	dec    ebp
  42a246:	mov    dl,0x4e
  42a248:	(bad)
  42a24c:	mov    al,BYTE PTR [edi-0x1d]
  42a24f:	dec    ecx
  42a250:	xlat   BYTE PTR ds:[ebx]
  42a251:	daa    
  42a252:	lock mov edx,0x5fbf57af
  42a258:	jae    0x42a298
  42a25a:	mov    eax,ds:0xe1f6bdda
  42a25f:	iret   
  42a260:	jno    0x42a2be
  42a262:	xchg   ebp,eax
  42a263:	mov    esp,DWORD PTR [ecx]
  42a265:	test   DWORD PTR [edi+0x70],esi
  42a268:	outs   dx,DWORD PTR ds:[esi]
  42a269:	aad    0x87
  42a26b:	fwait
  42a26c:	mov    ah,0x2b
  42a26e:	jno    0x42a2e6
  42a270:	sub    ebp,DWORD PTR [edi+0x5b8c64ea]
  42a276:	add    DWORD PTR [edi-0x611aca28],ebp
  42a27c:	cmp    bp,WORD PTR [edi]
  42a27f:	or     eax,0xc026a08d
  42a284:	pusha  
  42a285:	sbb    eax,0xdc60a60c
  42a28a:	sub    eax,0x3cdaef93
  42a28f:	in     eax,0x2a
  42a291:	jecxz  0x42a281
  42a293:	push   ecx
  42a294:	int3   
  42a295:	mov    ecx,0x72bf22ee
  42a29a:	int3   
  42a29b:	push   esi
  42a29c:	mov    esi,0x6914da96
  42a2a1:	test   DWORD PTR [ebp-0x5090b646],ecx
  42a2a7:	cmp    DWORD PTR [ecx],esi
  42a2a9:	adc    edi,ebp
  42a2ab:	idiv   ah
  42a2ad:	outs   dx,BYTE PTR ds:[esi]
  42a2ae:	dec    ebx
  42a2af:	sbb    BYTE PTR [ecx],0x6c
  42a2b2:	shr    BYTE PTR [esi+0x11e8578b],1
  42a2b8:	fst    st(6)
  42a2ba:	mov    ds:0xbf17f7b8,eax
  42a2bf:	jmp    0x42a2e4
  42a2c1:	dec    edi
  42a2c2:	cmp    bh,BYTE PTR [esi+ebp*1]
  42a2c5:	fcom   QWORD PTR [ebx+0x15aa1158]
  42a2cb:	push   ebp
  42a2cc:	jno    0x42a33e
  42a2ce:	popf   
  42a2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2d0:	adc    al,0x7c
  42a2d2:	push   esi
  42a2d3:	mov    edi,DWORD PTR [esi+ebp*2+0x51]
  42a2d7:	pop    ss
  42a2d8:	or     al,0x30
  42a2da:	adc    al,0x1e
  42a2dc:	mov    ch,0x16
  42a2de:	sbb    al,0xa2
  42a2e1:	aad    0x27
  42a2e3:	mov    BYTE PTR [ecx+eax*8-0x3f],ch
  42a2e7:	mov    al,0xff
  42a2e9:	adc    eax,0xec5e8c57
  42a2ef:	sub    eax,0x89dc8fef
  42a2f4:	xor    edi,DWORD PTR [ecx-0x3b]
  42a2f7:	xchg   ch,ah
  42a2f9:	pop    es
  42a2fa:	iret   
  42a2fb:	pop    ebx
  42a2fc:	jae    0x42a284
  42a2fe:	jl     0x42a308
  42a300:	repz mov ds:0xc0f9effb,eax
  42a306:	(bad)  
  42a307:	sbb    al,BYTE PTR [edi+0x703b8242]
  42a30d:	popf   
  42a30e:	jno    0x42a2ab
  42a310:	(bad)  
  42a311:	ja     0x42a392
  42a313:	add    BYTE PTR [eax+0x60],0x94
  42a317:	mov    dh,0x97
  42a319:	jmp    0xbf5a:0xd4fb60cc
  42a320:	sbb    al,0xa1
  42a322:	test   esi,esi
  42a324:	nop
  42a325:	mov    esi,0x48a90e13
  42a32a:	outs   dx,BYTE PTR ds:[esi]
  42a32b:	jno    0x42a314
  42a32d:	xor    dh,BYTE PTR [ecx-0x34]
  42a330:	mov    cl,0x42
  42a332:	addr16 dec ecx
  42a334:	xor    cx,ax
  42a337:	jno    0x42a32d
  42a339:	(bad)  
  42a33a:	sbb    DWORD PTR [edi],esp
  42a33c:	aad    0x71
  42a33e:	xor    al,0xd9
  42a340:	xchg   edx,eax
  42a341:	and    al,ah
  42a343:	shr    ah,cl
  42a345:	call   0xb5213203
  42a34a:	daa    
  42a34b:	or     dh,BYTE PTR [eax+0x2fc2845]
  42a351:	jnp    0x42a33e
  42a353:	cwde   
  42a354:	mov    bh,0xb7
  42a356:	lods   al,BYTE PTR ds:[esi]
  42a357:	xor    BYTE PTR [ebp-0x20f41656],ah
  42a35d:	fs fs dec edx
  42a360:	fdivr  DWORD PTR [eax+ebp*2-0x7c]
  42a364:	cld    
  42a365:	push   0x2b4a5ce1
  42a36a:	pop    ebx
  42a36b:	sbb    eax,0xaf014e7a
  42a370:	cmp    DWORD PTR [edi+0x56],esp
  42a373:	imul   esp,edi,0x4e6f357a
  42a379:	xchg   edx,eax
  42a37a:	cld    
  42a37b:	gs jecxz 0x42a35c
  42a37e:	int    0xde
  42a380:	xor    eax,0x8f4013f8
  42a385:	fld    TBYTE PTR [edi]
  42a387:	jno    0x42a3d7
  42a389:	shl    dl,0x4a
  42a38c:	repz dec edx
  42a38e:	or     cl,cl
  42a390:	cli    
  42a391:	(bad)  
  42a392:	stc    
  42a393:	loope  0x42a329
  42a395:	cmc    
  42a396:	sbb    edi,esi
  42a398:	loope  0x42a327
  42a39a:	lea    ebp,[ecx-0x21]
  42a39d:	fcomp  QWORD PTR [ecx]
  42a39f:	or     edi,edi
  42a3a1:	call   DWORD PTR [edi]
  42a3a3:	cmp    bh,0xa6
  42a3a6:	push   ebx
  42a3a7:	out    0xbd,eax
  42a3a9:	imul   ecx,DWORD PTR [edx+0x4b72d37b],0x417d4d17
  42a3b3:	cli    
  42a3b4:	and    esp,0xa1f6186b
  42a3ba:	ret    
  42a3bb:	pop    edi
  42a3bc:	dec    BYTE PTR [edi+0x75]
  42a3bf:	sub    bl,BYTE PTR [edx-0x4c]
  42a3c2:	and    eax,0xa2acc86c
  42a3c7:	push   0x4614166e
  42a3cc:	pop    edx
  42a3cd:	sub    al,0x1e
  42a3cf:	fsub   DWORD PTR [ecx+0x3e]
  42a3d2:	inc    ecx
  42a3d3:	inc    esp
  42a3d4:	pop    ebx
  42a3d5:	cmp    al,0x94
  42a3d7:	call   0x2b8b:0x172e1277
  42a3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3df:	sbb    DWORD PTR [edi+0x4a],ecx
  42a3e2:	xchg   ebp,eax
  42a3e4:	jne    0x42a453
  42a3e6:	add    eax,0xdba50da8
  42a3eb:	mov    dl,0x30
  42a3ed:	jmp    0x92a4:0x29c8ca81
  42a3f4:	push   ds
  42a3f5:	and    DWORD PTR [ebx+0x33],esp
  42a3f8:	aam    0x18
  42a3fa:	jne    0x42a39c
  42a3fc:	jge    0x42a473
  42a3fe:	jl     0x42a3b9
  42a400:	pop    eax
  42a401:	and    BYTE PTR [ebx-0x7b],cl
  42a404:	mov    ah,0xd8
  42a406:	pop    es
  42a407:	fcomi  st,st(3)
  42a409:	jb     0x42a415
  42a40b:	inc    esi
  42a40c:	aas    
  42a40d:	sar    BYTE PTR [eax-0x480bd36e],0xa5
  42a414:	lock jecxz 0x42a3cf
  42a417:	mov    bl,0x6c
  42a419:	push   edi
  42a41a:	or     edi,ebx
  42a41c:	loope  0x42a3a6
  42a41e:	xchg   ebx,eax
  42a41f:	(bad)  
  42a420:	fldcw  WORD PTR [ecx+0x3]
  42a423:	popf   
  42a424:	repz sbb DWORD PTR [esi],0x38cc684a
  42a42b:	into   
  42a42c:	sti    
  42a42d:	gs push ebp
  42a42f:	out    0x2d,al
  42a431:	(bad)  
  42a432:	int3   
  42a433:	xor    eax,0x87a43de5
  42a438:	push   ecx
  42a439:	cli    
  42a43a:	ja     0x42a484
  42a43c:	test   DWORD PTR [ebp+0x75],edi
  42a43f:	dec    edx
  42a440:	rcl    dl,1
  42a442:	aas    
  42a443:	jo     0x42a408
  42a445:	mov    ds:0x3b6f3c3b,al
  42a44a:	mov    eax,gs
  42a44c:	adc    ch,BYTE PTR [edx+ebp*2+0x16760083]
  42a453:	rcr    BYTE PTR [ebx-0x3ba97ca9],cl
  42a459:	sub    al,0xa7
  42a45b:	cmp    eax,0xd87941a6
  42a460:	adc    esp,edi
  42a462:	bound  esi,QWORD PTR [ecx-0x38a32112]
  42a468:	jecxz  0x42a4a5
  42a46a:	cmp    eax,esp
  42a46c:	bound  esi,QWORD PTR [edi+0x2908fbfc]
  42a472:	dec    edi
  42a473:	out    dx,al
  42a474:	jge    0x42a4a0
  42a476:	mov    edx,0x93cb49c1
  42a47b:	clc    
  42a47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a47d:	mov    edi,0xe688da77
  42a482:	jge    0x42a468
  42a484:	or     eax,0xcfc16cce
  42a489:	xchg   ecx,eax
  42a48a:	inc    edi
  42a48b:	jmp    0x8a2e14d7
  42a490:	mov    ah,0xa7
  42a492:	push   edx
  42a493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a494:	pop    ebp
  42a495:	outs   dx,BYTE PTR ds:[esi]
  42a496:	add    eax,0xcb1eb8d7
  42a49b:	arpl   WORD PTR [edi],di
  42a49d:	mov    ebp,0x3f76503f
  42a4a2:	ds fcomp st(4)
  42a4a5:	imul   ebx,DWORD PTR [ebp-0x3d],0x28
  42a4a9:	push   DWORD PTR [eax+0x4e]
  42a4ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4ad:	xlat   BYTE PTR ds:[ebx]
  42a4ae:	jp     0x42a4df
  42a4b0:	sub    edx,0xe
  42a4b3:	jns    0x42a478
  42a4b5:	xchg   edi,eax
  42a4b6:	mov    edi,0xc915f9e
  42a4bb:	cmp    edx,DWORD PTR [ebx]
  42a4bd:	mov    edi,0x102524be
  42a4c2:	pop    ebp
  42a4c3:	or     ah,0x5e
  42a4c6:	ins    DWORD PTR es:[edi],dx
  42a4c7:	mov    eax,eax
  42a4c9:	mov    bl,0x19
  42a4cb:	xor    DWORD PTR [ebx],ebp
  42a4cd:	push   ebp
  42a4ce:	ins    BYTE PTR es:[edi],dx
  42a4cf:	xchg   edi,eax
  42a4d0:	adc    al,0x32
  42a4d2:	dec    esp
  42a4d3:	xor    BYTE PTR [edx+0x65],cl
  42a4d6:	add    DWORD PTR [ebp+0x7d5b9d51],0x1b9f9449
  42a4e0:	shl    al,0x21
  42a4e3:	push   esp
  42a4e4:	pop    edx
  42a4e5:	push   esi
  42a4e6:	adc    DWORD PTR [edx-0x7bed009a],ebp
  42a4ec:	push   DWORD PTR [ebx-0x2f1aeb71]
  42a4f2:	push   edi
  42a4f3:	lahf   
  42a4f4:	jo     0x42a4ba
  42a4f6:	push   ds
  42a4f7:	clc    
  42a4f8:	hlt    
  42a4f9:	test   eax,0xc3a2b59e
  42a4fe:	stos   BYTE PTR es:[edi],al
  42a4ff:	adc    ebp,DWORD PTR [edi-0x75]
  42a502:	or     BYTE PTR ds:0xa6d82439,dh
  42a508:	mov    ah,BYTE PTR [esp+ebp*1-0x778594f9]
  42a50f:	mov    ebx,0xa157a916
  42a514:	stc    
  42a515:	sbb    DWORD PTR [ebp-0x454fe913],edi
  42a51b:	sbb    DWORD PTR [edi],0x654d7ee6
  42a521:	mov    ebp,0x6c2bcbe0
  42a526:	inc    ecx
  42a527:	add    al,0xb8
  42a529:	mov    DWORD PTR [ebx],edi
  42a52b:	fld    TBYTE PTR ds:0x5c3c5bbd
  42a531:	stos   DWORD PTR es:[edi],eax
  42a532:	addr16 call 0xba878d3
  42a538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a53a:	sbb    edi,ebx
  42a53c:	dec    ebx
  42a53d:	test   DWORD PTR [ebp+0x2a],edx
  42a540:	push   edi
  42a541:	popa   
  42a542:	shl    ecx,1
  42a544:	imul   edx,ebx,0x48
  42a547:	enter  0xa32c,0x5f
  42a54b:	jb     0x42a50e
  42a54d:	psrlq  mm1,QWORD PTR [ebx]
  42a550:	and    ch,al
  42a552:	std    
  42a553:	mov    edi,0x84dbd7cb
  42a558:	xchg   edx,eax
  42a559:	pop    esi
  42a55a:	aaa    
  42a55b:	xchg   BYTE PTR [eax],dl
  42a55d:	retf   0xc3e5
  42a560:	sahf   
  42a561:	fidivr WORD PTR [eax+0x36]
  42a564:	shl    cl,cl
  42a566:	push   edx
  42a567:	loope  0x42a5b5
  42a569:	popf   
  42a56a:	test   BYTE PTR [eax],0x67
  42a56d:	fs out 0x49,eax
  42a570:	sbb    DWORD PTR ds:0x77c92141,eax
  42a576:	xchg   ecx,eax
  42a577:	push   esp
  42a578:	push   eax
  42a579:	and    bh,BYTE PTR [ebx-0x13]
  42a57c:	mov    al,0xc1
  42a57e:	lds    ebx,FWORD PTR [edi]
  42a580:	sar    esp,cl
  42a582:	fstp   DWORD PTR [ebx+0x26898fe0]
  42a588:	daa    
  42a589:	push   ss
  42a58a:	test   ebx,0x387d582f
  42a590:	sub    al,0xfd
  42a592:	loopne 0x42a5d0
  42a594:	cmp    al,0x91
  42a596:	pop    esi
  42a597:	adc    al,0x3c
  42a599:	aad    0xd
  42a59b:	(bad)  
  42a59c:	in     al,dx
  42a59d:	iret   
  42a59e:	icebp  
  42a59f:	outs   dx,BYTE PTR ds:[esi]
  42a5a0:	mov    ecx,0xf8958d89
  42a5a5:	adc    cl,bl
  42a5a7:	dec    eax
  42a5a8:	xor    al,0xfc
  42a5ab:	pushf  
  42a5ac:	mov    DWORD PTR [edi],edx
  42a5ae:	jo     0x42a5f2
  42a5b0:	pusha  
  42a5b1:	mov    dl,0xd0
  42a5b3:	mov    esp,0x221e1242
  42a5b8:	das    
  42a5b9:	enter  0xdb87,0x17
  42a5bd:	pop    edi
  42a5be:	inc    edi
  42a5c0:	sub    cl,BYTE PTR [ecx]
  42a5c2:	sub    ebp,ebp
  42a5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5c5:	sbb    BYTE PTR [esi+0x50],ch
  42a5c8:	push   edi
  42a5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5ca:	leave  
  42a5cb:	lods   eax,DWORD PTR ds:[esi]
  42a5cc:	aaa    
  42a5cd:	aaa    
  42a5ce:	hlt    
  42a5cf:	pop    esp
  42a5d0:	sbb    al,0x7c
  42a5d2:	(bad)  
  42a5d3:	inc    eax
  42a5d4:	cmp    BYTE PTR [edi],0xd6
  42a5d7:	cs test eax,0x8955fba0
  42a5dd:	xor    al,0x0
  42a5df:	and    al,dh
  42a5e1:	xchg   esp,eax
  42a5e2:	xchg   DWORD PTR [esi+eiz*8],esp
  42a5e5:	jns    0x42a571
  42a5e7:	pop    ss
  42a5e8:	imul   edx,DWORD PTR [edx+0xb],0x10
  42a5ec:	fstp   TBYTE PTR [esi-0x7b2f08a0]
  42a5f2:	mov    WORD PTR [edi+0x4f],es
  42a5f5:	mov    esi,0xb6c2dd04
  42a5fa:	das    
  42a5fb:	sub    BYTE PTR [edx],dh
  42a5fd:	jl     0x42a5ea
  42a5ff:	inc    ecx
  42a600:	inc    edx
  42a601:	mov    cl,0x74
  42a603:	adc    dh,0x2b
  42a606:	mov    DWORD PTR [esi-0x40],eax
  42a609:	mov    dh,0x45
  42a60b:	mov    al,ds:0xe6c5502
  42a610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a611:	enter  0x1bd8,0x54
  42a615:	popa   
  42a616:	cmp    al,0xf4
  42a618:	pop    eax
  42a619:	(bad)  
  42a61a:	in     al,dx
  42a61b:	bnd jno 0x42a617
  42a61e:	(bad)  [ebp+eax*4-0xd]
  42a622:	clc    
  42a623:	nop
  42a624:	inc    esi
  42a625:	das    
  42a626:	(bad)  
  42a627:	pop    ss
  42a628:	cmp    DWORD PTR [ebx+0x24c6b08e],edi
  42a62e:	pop    esp
  42a62f:	loope  0x42a619
  42a631:	and    al,0x40
  42a633:	or     al,0x19
  42a635:	xchg   esp,eax
  42a636:	jb     0x42a6a6
  42a638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a639:	mov    esi,0x9cf51df0
  42a63e:	push   esi
  42a63f:	dec    edx
  42a640:	es push 0xf1833a4c
  42a646:	mov    WORD PTR [edx+0x72],es
  42a649:	arpl   WORD PTR [eax],ax
  42a64b:	bound  edx,QWORD PTR [ebp-0x60af8728]
  42a651:	call   0x64c9d947
  42a656:	dec    ebx
  42a657:	xor    eax,0xaba5d1d3
  42a65c:	jb     0x42a60a
  42a65e:	xor    ch,dh
  42a660:	cmp    edx,edi
  42a662:	lods   eax,DWORD PTR ds:[esi]
  42a663:	repz in eax,0xc7
  42a666:	js     0x42a669
  42a668:	popf   
  42a669:	add    DWORD PTR [esp+eiz*2+0x1169c4c2],edi
  42a670:	xchg   DWORD PTR [ebx+0x4d],ecx
  42a673:	xchg   esp,eax
  42a674:	loopne 0x42a695
  42a676:	mov    ds:0x87519b48,eax
  42a67b:	push   edi
  42a67c:	mov    edi,0xe817ce4c
  42a681:	push   0xe45bb113
  42a686:	mov    al,0x4f
  42a688:	inc    esp
  42a689:	adc    eax,0x1542bcef
  42a68e:	sti    
  42a68f:	or     eax,0x693523f3
  42a694:	xor    dl,BYTE PTR [ecx]
  42a696:	ds jns 0x42a65f
  42a699:	arpl   WORD PTR ds:0x702e48da,ax
  42a69f:	(bad)
  42a6a2:	popa   
  42a6a3:	push   cs
  42a6a4:	mov    es,WORD PTR [esi+0x12]
  42a6a7:	xchg   ebx,eax
  42a6a8:	stos   DWORD PTR es:[edi],eax
  42a6a9:	lahf   
  42a6aa:	inc    edi
  42a6ab:	sbb    BYTE PTR [edi-0x24],bl
  42a6ae:	add    dh,BYTE PTR [ebp+0x499065a6]
  42a6b4:	out    dx,al
  42a6b5:	mov    esi,0xdc337de0
  42a6ba:	sbb    al,0x95
  42a6bc:	pop    edx
  42a6bd:	addr16 mov esp,0xb0695bad
  42a6c3:	outs   dx,DWORD PTR ds:[esi]
  42a6c4:	int3   
  42a6c5:	adc    DWORD PTR [esp+eiz*8+0x43e58366],ebx
  42a6cc:	mov    cl,0x1
  42a6ce:	lahf   
  42a6cf:	inc    eax
  42a6d0:	mov    ecx,0x412d0a46
  42a6d5:	pop    edi
  42a6d6:	and    al,0x73
  42a6d8:	(bad)  
  42a6da:	jne    0x42a757
  42a6dc:	ret    
  42a6dd:	mul    bh
  42a6df:	out    0x15,al
  42a6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6e2:	jb     0x42a713
  42a6e4:	shl    BYTE PTR [ecx+0x48],0x11
  42a6e8:	iret   
  42a6e9:	add    DWORD PTR [esp+esi*2-0x771e0c19],ebx
  42a6f0:	adc    al,0xff
  42a6f2:	jmp    0x42a762
  42a6f4:	jmp    0xec65d842
  42a6f9:	pop    ebx
  42a6fa:	aas    
  42a6fb:	sbb    eax,0xf2c6380a
  42a700:	inc    ecx
  42a701:	clc    
  42a702:	jne    0x42a72e
  42a704:	leave  
  42a705:	inc    DWORD PTR [edi+edx*1-0x5ca9a46b]
  42a70c:	jecxz  0x42a69d
  42a70e:	add    eax,DWORD PTR [edx]
  42a710:	dec    edx
  42a711:	lea    esi,[esi+ebx*4+0x6b9a56d2]
  42a718:	imul   esi,esi,0xffffffca
  42a71b:	and    DWORD PTR [ebx],0x1960b9a0
  42a721:	pusha  
  42a722:	aam    0xd7
  42a724:	xchg   ecx,eax
  42a725:	inc    ebx
  42a726:	hlt    
  42a727:	(bad)  
  42a728:	pop    edx
  42a729:	enter  0xd349,0xd
  42a72d:	jg     0x42a721
  42a72f:	inc    BYTE PTR [esi+0x76]
  42a732:	mov    dl,0x24
  42a734:	add    BYTE PTR ds:0x6d88f21a,0x16
  42a73b:	mov    DWORD PTR [ecx-0x7a516d15],eax
  42a741:	mov    ecx,0x9d55c7ca
  42a746:	sbb    eax,edi
  42a748:	adc    al,BYTE PTR [ebx+0x20d9c36a]
  42a74e:	popa   
  42a74f:	dec    ebx
  42a750:	outs   dx,DWORD PTR ds:[esi]
  42a751:	bound  eax,QWORD PTR [ebx+0x6a]
  42a754:	cmc    
  42a755:	pop    edi
  42a756:	mov    edi,DWORD PTR [ebx]
  42a758:	popf   
  42a759:	jge    0x42a797
  42a75b:	retf   0x9c7f
  42a75e:	(bad)  
  42a75f:	(bad)  
  42a760:	ja     0x42a749
  42a762:	mov    es,WORD PTR [esi+ebp*1+0x41]
  42a766:	add    eax,0x4cce20ae
  42a76b:	in     eax,0x7c
  42a76d:	in     eax,dx
  42a76e:	sub    BYTE PTR [eax+0x76],0x53
  42a772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a773:	inc    esp
  42a774:	data16 cli 
  42a776:	push   ebp
  42a777:	jns    0x42a7ce
  42a779:	idiv   BYTE PTR [edx]
  42a77b:	and    eax,0xf5af2642
  42a780:	scas   eax,DWORD PTR es:[edi]
  42a781:	jnp    0x42a7c9
  42a783:	dec    ebx
  42a784:	mov    edx,0xb5ab26b
  42a789:	or     al,0xef
  42a78b:	idiv   bh
  42a78d:	imul   esi,DWORD PTR [ebx+0x5e4a3900],0x4afaf594
  42a797:	les    eax,FWORD PTR [edx-0x5d94a277]
  42a79d:	fucomp st(1)
  42a79f:	(bad)  
  42a7a0:	(bad)  
  42a7a1:	pop    esi
  42a7a2:	addr16 push ss
  42a7a4:	and    DWORD PTR [edi+esi*4],edi
  42a7a7:	push   edi
  42a7a8:	xchg   ebp,eax
  42a7a9:	sub    eax,0xc5287a78
  42a7ae:	aam    0x68
  42a7b0:	sbb    bh,BYTE PTR [esp+eiz*4]
  42a7b3:	popa   
  42a7b4:	shl    esp,cl
  42a7b6:	out    dx,eax
  42a7b7:	das    
  42a7b8:	in     al,dx
  42a7b9:	cdq    
  42a7ba:	loop   0x42a826
  42a7bc:	add    DWORD PTR [ecx-0x54],ebx
  42a7bf:	fwait
  42a7c0:	scas   eax,DWORD PTR es:[edi]
  42a7c1:	pushf  
  42a7c2:	mov    dh,0xca
  42a7c4:	data16 (bad) [ebp-0x63]
  42a7c8:	in     al,dx
  42a7c9:	ficomp WORD PTR [edx-0x1c]
  42a7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7cd:	jno    0x42a804
  42a7cf:	stos   BYTE PTR es:[edi],al
  42a7d0:	push   ecx
  42a7d1:	div    dl
  42a7d3:	push   ds
  42a7d4:	cli    
  42a7d5:	out    dx,eax
  42a7d6:	jecxz  0x42a79a
  42a7d8:	ss cmp dh,al
  42a7db:	dec    ebp
  42a7dc:	ja     0x42a841
  42a7de:	xor    BYTE PTR [ecx],al
  42a7e0:	pop    ds
  42a7e1:	repnz sub DWORD PTR [ecx+0x5c4e5028],eax
  42a7e8:	add    al,0xed
  42a7ea:	stc    
  42a7eb:	lods   al,BYTE PTR ds:[esi]
  42a7ec:	adc    al,0xe8
  42a7ee:	pop    esi
  42a7ef:	gs push es
  42a7f1:	inc    edi
  42a7f2:	in     al,dx
  42a7f3:	mov    bh,0x26
  42a7f5:	ret    0x1403
  42a7f8:	mov    ch,0x37
  42a7fa:	addr16 sbb eax,0xabf5d4a1
  42a800:	cmp    eax,0x653e6586
  42a805:	inc    esp
  42a806:	arpl   WORD PTR [edi],ax
  42a808:	test   BYTE PTR [edi],dh
  42a80a:	ret    0x29ca
  42a80d:	jl     0x42a7e7
  42a80f:	add    DWORD PTR [esi],esp
  42a811:	inc    ebx
  42a812:	(bad)  
  42a813:	stc    
  42a814:	sub    bl,cl
  42a816:	jnp    0x42a80a
  42a818:	into   
  42a819:	ret    
  42a81a:	add    DWORD PTR [eax-0x21bdc7b8],ebx
  42a820:	xchg   DWORD PTR [ecx-0x5d],ebx
  42a823:	jge    0x42a7f6
  42a825:	stc    
  42a826:	sbb    BYTE PTR [ebx],al
  42a828:	fisub  DWORD PTR [edi]
  42a82a:	fsubr  QWORD PTR [edi-0x6b]
  42a82d:	repnz or ah,al
  42a830:	mov    al,0x82
  42a832:	pop    ecx
  42a833:	xor    ecx,DWORD PTR [esi]
  42a835:	(bad)  [edi-0x5e45b6e5]
  42a83b:	adc    al,0x9a
  42a83d:	and    DWORD PTR [edi+0x326ad19a],ecx
  42a843:	xchg   esp,eax
  42a844:	push   edi
  42a845:	ss dec eax
  42a847:	mov    ?,WORD PTR [ecx-0xe]
  42a84a:	rcr    BYTE PTR [eax],0xaa
  42a84d:	dec    edx
  42a84e:	out    0x63,al
  42a850:	lea    esp,[edi+0x23]
  42a853:	jle    0x42a866
  42a855:	push   ds
  42a856:	add    dh,BYTE PTR [ebx-0x7c]
  42a859:	lods   al,BYTE PTR ds:[esi]
  42a85a:	add    DWORD PTR [edx+ecx*8-0x25],edi
  42a85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a85f:	test   BYTE PTR ds:0xe22b1a8d,bl
  42a865:	push   ebp
  42a866:	and    bl,BYTE PTR [ecx-0x33]
  42a869:	fwait
  42a86a:	or     ebp,DWORD PTR [ebx+0x71]
  42a86d:	push   cs
  42a86e:	mov    ch,0x18
  42a870:	loope  0x42a8ec
  42a872:	and    al,0x74
  42a874:	jmp    0x2726:0x7d0a995e
  42a87b:	arpl   WORD PTR [ebp+0x152c893d],di
  42a881:	sub    esp,DWORD PTR [edx+ecx*2+0x71]
  42a885:	adc    eax,0x64f0d809
  42a88a:	daa    
  42a88b:	jl     0x42a891
  42a88d:	mov    ds:0xcb270bf1,eax
  42a892:	es xor eax,0x89c09aa9
  42a898:	jmp    0x7a275a97
  42a89d:	mov    ecx,0x43f322f2
  42a8a2:	mov    ds:0x7189b626,al
  42a8a7:	add    DWORD PTR [ebp-0x616d67e6],esp
  42a8ad:	add    al,0xc2
  42a8af:	cmp    DWORD PTR [esi+0x17c3a918],ecx
  42a8b5:	pop    ss
  42a8b6:	jo     0x42a89e
  42a8b8:	in     al,0x63
  42a8ba:	scas   eax,DWORD PTR es:[edi]
  42a8bb:	into   
  42a8bc:	aad    0x8a
  42a8be:	mov    ds:0x2f704acb,al
  42a8c3:	call   0x459e:0xb8bbb6e2
  42a8ca:	lods   al,BYTE PTR ds:[esi]
  42a8cb:	outs   dx,DWORD PTR ds:[esi]
  42a8cc:	jle    0x42a8ba
  42a8ce:	xchg   eax,esp
  42a8d0:	mov    ecx,0x86b2cce1
  42a8d5:	sbb    ecx,DWORD PTR [si]
  42a8d8:	or     al,0x4e
  42a8da:	mov    dl,0x69
  42a8dc:	ja     0x42a900
  42a8de:	xchg   DWORD PTR ds:0x9fbf0ecb,ebx
  42a8e4:	jl     0x42a94d
  42a8e6:	fidiv  DWORD PTR [edi-0x38e750ee]
  42a8ec:	add    dl,BYTE PTR [eax-0x40]
  42a8ef:	and    dh,BYTE PTR [ebp+0x2ee99e1a]
  42a8f5:	je     0x42a8ae
  42a8f7:	inc    esp
  42a8f8:	push   0xdaccf9a0
  42a8fd:	pop    esi
  42a8fe:	pop    esp
  42a8ff:	lds    edx,FWORD PTR [edx]
  42a901:	jp     0x42a8e0
  42a903:	or     BYTE PTR [ebx+0x76a5495a],bh
  42a909:	jb     0x42a8a3
  42a90b:	lods   al,BYTE PTR ds:[esi]
  42a90c:	fistp  QWORD PTR [ebx+0x177b2281]
  42a912:	cwde   
  42a913:	dec    esp
  42a914:	mov    bl,0x1c
  42a916:	adc    bl,BYTE PTR [eax+0x3565dc99]
  42a91c:	cmp    al,BYTE PTR [edx]
  42a91e:	xlat   BYTE PTR ds:[ebx]
  42a91f:	pop    ss
  42a920:	not    BYTE PTR [ecx]
  42a922:	ins    DWORD PTR es:[edi],dx
  42a923:	pop    ecx
  42a924:	icebp  
  42a925:	dec    ebx
  42a926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a927:	adc    eax,DWORD PTR [edi-0x2d]
  42a92a:	push   ebp
  42a92b:	cmp    edi,DWORD PTR [ebp+eax*1+0x7940cb18]
  42a932:	adc    dh,BYTE PTR [esp+ecx*2-0x46721b65]
  42a939:	sbb    BYTE PTR [ebp-0x3de2a186],ah
  42a93f:	adc    edi,DWORD PTR [ebx]
  42a941:	fs pop edx
  42a943:	mov    ebx,0x7f000ad7
  42a948:	fidiv  WORD PTR [ecx]
  42a94a:	(bad)  
  42a94b:	mov    ch,0x7d
  42a94d:	cwde   
  42a94e:	(bad)  
  42a94f:	repz retf 0x7865
  42a953:	pop    esi
  42a954:	(bad)  
  42a955:	mov    ch,0xec
  42a957:	jne    0x42a9b5
  42a959:	test   eax,0xa07bd58b
  42a95e:	fiadd  WORD PTR [edx+0x2c]
  42a961:	arpl   WORD PTR [edx],si
  42a963:	jae    0x42a91a
  42a965:	jno    0x42a9a6
  42a967:	call   0xa218:0xe77abfe2
  42a96e:	jecxz  0x42a935
  42a970:	in     al,0x19
  42a972:	xor    ebp,DWORD PTR [esi-0x1e]
  42a975:	inc    ebx
  42a976:	test   esi,edx
  42a978:	xchg   si,ax
  42a97a:	mov    ebp,0x353b47c4
  42a97f:	clc    
  42a980:	xchg   ebp,eax
  42a981:	test   BYTE PTR [ebp+0x318bee96],cl
  42a987:	cmp    al,0x80
  42a989:	(bad)  
  42a98a:	(bad)  [edx]
  42a98c:	fadd   st,st(4)
  42a98e:	aaa    
  42a98f:	xchg   edx,eax
  42a990:	(bad)  
  42a991:	fadd   QWORD PTR [edi+0x78]
  42a994:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42a996:	test   al,0x2f
  42a998:	adc    dh,bl
  42a99a:	fidiv  DWORD PTR [eax]
  42a99c:	mov    ebp,0xec0cea1f
  42a9a1:	xlat   BYTE PTR ds:[ebx]
  42a9a2:	mov    eax,ds
  42a9a4:	cmp    al,0x7
  42a9a6:	push   0x66
  42a9a8:	jl     0x42a954
  42a9aa:	gs pop ebp
  42a9ac:	xchg   esp,eax
  42a9ad:	hlt    
  42a9ae:	sbb    ebp,eax
  42a9b0:	cmc    
  42a9b1:	dec    edi
  42a9b2:	pusha  
  42a9b3:	es adc ah,dh
  42a9b6:	sbb    DWORD PTR [edx-0x49e0150f],ebx
  42a9bc:	mov    esp,0xb06bef77
  42a9c1:	aam    0x63
  42a9c3:	jb     0x42aa29
  42a9c5:	in     al,0x32
  42a9c7:	(bad)  
  42a9c8:	sbb    al,0x40
  42a9ca:	retf   0x86d6
  42a9cd:	addr16 dec ecx
  42a9cf:	bswap  esi
  42a9d1:	mov    ecx,0xc376c2dd
  42a9d6:	(bad)  
  42a9d7:	jne    0x42aa2e
  42a9d9:	push   es
  42a9da:	in     al,0x4
  42a9dc:	mov    esi,DWORD PTR [esi+0x63]
  42a9df:	mov    DWORD PTR [esi-0x79c1faf1],eax
  42a9e5:	sbb    dl,BYTE PTR [ebx+0x1f]
  42a9e8:	popf   
  42a9e9:	and    DWORD PTR [ecx],esi
  42a9eb:	sbb    DWORD PTR [eax],edx
  42a9ed:	push   0xffffffaa
  42a9ef:	shr    dl,cl
  42a9f1:	(bad)  
  42a9f2:	es mov ecx,0x76f357e7
  42a9f8:	sub    BYTE PTR [ecx],cl
  42a9fa:	in     eax,0x26
  42a9fc:	icebp  
  42a9fd:	les    ecx,FWORD PTR [eax-0x69b5dfa5]
  42aa03:	push   ecx
  42aa04:	(bad)  
  42aa05:	int    0xc9
  42aa07:	xor    DWORD PTR [edx],esp
  42aa09:	leave  
  42aa0a:	xor    bl,al
  42aa0c:	aad    0x8
  42aa0e:	cdq    
  42aa0f:	in     eax,dx
  42aa10:	xchg   ecx,eax
  42aa11:	stc    
  42aa12:	call   0x68e1d291
  42aa17:	shl    DWORD PTR [ebp-0x4a],0x20
  42aa1b:	push   cs
  42aa1c:	dec    eax
  42aa1d:	hlt    
  42aa1e:	ds push esp
  42aa20:	pop    eax
  42aa21:	and    eax,esi
  42aa23:	dec    esp
  42aa24:	mov    esi,0x7b45a7ab
  42aa29:	shr    DWORD PTR [esi-0x14110113],0x5e
  42aa30:	sbb    al,0xef
  42aa32:	mov    ch,0x32
  42aa34:	or     ebx,DWORD PTR [ebx]
  42aa36:	cli    
  42aa37:	int    0xf1
  42aa39:	push   eax
  42aa3a:	mov    al,0x2d
  42aa3c:	mov    ecx,0x3801c77a
  42aa41:	int    0x69
  42aa43:	jle    0x42a9e1
  42aa45:	sub    ah,BYTE PTR [ebx+0x40]
  42aa48:	cmp    DWORD PTR [edx+edi*4],esp
  42aa4b:	sub    eax,0x94592f5
  42aa50:	pusha  
  42aa51:	and    ebx,0x8
  42aa54:	mov    dl,0xaa
  42aa56:	inc    ecx
  42aa57:	mov    ds:0x39564b42,eax
  42aa5c:	xchg   edi,eax
  42aa5d:	call   0x79829ef9
  42aa62:	sub    BYTE PTR [ebp+0x1c],dh
  42aa65:	shl    BYTE PTR ds:0xda69dd31,0xbd
  42aa6c:	mov    bh,0x93
  42aa6e:	loope  0x42aae6
  42aa70:	mov    ebp,0x483d701a
  42aa75:	sbb    ecx,0x3431b643
  42aa7b:	xor    al,0x67
  42aa7d:	popf   
  42aa7e:	inc    esp
  42aa7f:	cli    
  42aa80:	jo     0x42aa1e
  42aa82:	inc    esi
  42aa83:	cmp    DWORD PTR [esi],ebp
  42aa85:	push   ebp
  42aa86:	sbb    DWORD PTR [ebx],ebx
  42aa88:	or     esp,esi
  42aa8a:	mov    DWORD PTR [edi+0x23],edx
  42aa8d:	adc    al,BYTE PTR [ebp-0x1a]
  42aa90:	push   ebp
  42aa91:	or     DWORD PTR [eax-0x30],ecx
  42aa94:	xchg   BYTE PTR [ebx],dl
  42aa96:	push   eax
  42aa97:	sbb    al,0x60
  42aa99:	je     0x42aa23
  42aa9b:	inc    ebx
  42aa9c:	mov    eax,0xd50b0c4f
  42aaa1:	ja     0x42aa92
  42aaa3:	jae    0x42aad9
  42aaa5:	ins    DWORD PTR es:[edi],dx
  42aaa6:	xlat   BYTE PTR ds:[ebx]
  42aaa7:	ins    BYTE PTR es:[edi],dx
  42aaa8:	adc    bl,BYTE PTR [ecx+0x87b81a6]
  42aaae:	test   eax,0xeea1e4bf
  42aab3:	or     BYTE PTR [edx-0x4e1dbadf],ah
  42aab9:	repz jne 0x42aa91
  42aabc:	and    eax,0x7d2b279b
  42aac1:	or     ch,BYTE PTR [ecx+edi*8]
  42aac4:	push   0x99351d76
  42aac9:	(bad)  
  42aaca:	shl    BYTE PTR [eax-0x5ea3a63d],1
  42aad0:	repz pop edx
  42aad2:	retf   
  42aad3:	xchg   esp,eax
  42aad4:	xor    ebx,esi
  42aad6:	or     dh,ah
  42aad8:	dec    esp
  42aad9:	jge    0x42aa73
  42aadb:	inc    ecx
  42aadc:	jmp    FWORD PTR [edi]
  42aade:	sub    dl,BYTE PTR [ecx]
  42aae0:	xchg   ebp,eax
  42aae1:	inc    eax
  42aae2:	stos   BYTE PTR es:[edi],al
  42aae3:	shl    ebp,cl
  42aae5:	and    DWORD PTR [ecx+0x28],ebx
  42aae8:	pop    eax
  42aae9:	mov    edx,0x96b0f63b
  42aaee:	and    bl,BYTE PTR [eax+0x4c]
  42aaf1:	push   es
  42aaf2:	adc    eax,0x32881dcc
  42aaf7:	jbe    0x42aaae
  42aaf9:	dec    eax
  42aafa:	js     0x42aae0
  42aafc:	pop    esp
  42aafd:	pop    ds
  42aafe:	nop
  42aaff:	pop    ss
  42ab00:	mov    bl,0x9f
  42ab02:	or     cl,al
  42ab04:	fcmove st,st(2)
  42ab06:	shr    BYTE PTR ds:0x7bcbc8c,0x8f
  42ab0d:	and    al,0x52
  42ab0f:	and    BYTE PTR [edx+0x12],0xeb
  42ab13:	mov    al,0x25
  42ab15:	xor    DWORD PTR [edi+0x44b500de],ebp
  42ab1b:	js     0x42ab39
  42ab1d:	daa    
  42ab1e:	push   0xefaa395a
  42ab23:	inc    eax
  42ab24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab25:	jne    0x42ab57
  42ab27:	xchg   ebp,eax
  42ab28:	mov    ds:0xf830023c,al
  42ab2d:	xchg   ebx,eax
  42ab2e:	popa   
  42ab2f:	inc    esi
  42ab30:	popf   
  42ab31:	repnz repnz lods eax,DWORD PTR ds:[esi]
  42ab34:	cwde   
  42ab35:	mov    ecx,0xbc312389
  42ab3a:	fstp   st(1)
  42ab3c:	push   edx
  42ab3d:	icebp  
  42ab3e:	cld    
  42ab3f:	push   0x8f0e2f52
  42ab44:	mov    ebp,0xd11daa8d
  42ab49:	gs jge 0x42ab94
  42ab4c:	jp     0x42abb8
  42ab4e:	mov    BYTE PTR [esi],cl
  42ab50:	pop    ds
  42ab51:	int3   
  42ab52:	fnsave [ecx-0x80]
  42ab55:	mov    cl,0x14
  42ab57:	aam    0xe4
  42ab59:	jecxz  0x42ab9e
  42ab5b:	cs std 
  42ab5d:	retf   0x31f8
  42ab60:	sub    DWORD PTR [ecx],ebx
  42ab62:	in     eax,0x96
  42ab64:	neg    BYTE PTR [edx+0x40f1a18a]
  42ab6a:	ins    BYTE PTR es:[edi],dx
  42ab6b:	out    0xfd,al
  42ab6d:	ss aaa 
  42ab6f:	and    edi,DWORD PTR [edx-0x3b]
  42ab72:	cmp    DWORD PTR [eax],eax
  42ab74:	ror    BYTE PTR [eax+eax*1+0x70],cl
  42ab78:	mov    esp,0x2317b61b
  42ab7d:	out    dx,al
  42ab7e:	in     eax,dx
  42ab7f:	aad    0x3b
  42ab81:	add    al,0x95
  42ab83:	jmp    0x4b23:0x516bf670
  42ab8a:	adc    eax,esp
  42ab8c:	jecxz  0x42abd6
  42ab8e:	div    DWORD PTR [edx+ecx*4-0x4c41650e]
  42ab95:	mov    eax,ds:0x1907bdaa
  42ab9a:	inc    ebp
  42ab9b:	push   esp
  42ab9c:	inc    ecx
  42ab9d:	mov    eax,0xc096d1ce
  42aba2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42aba4:	sahf   
  42aba5:	mov    ebx,0xe36acb16
  42abaa:	in     al,dx
  42abab:	add    DWORD PTR ds:0x2096de8f,esi
  42abb1:	mov    ecx,0xcf9dd145
  42abb6:	adc    al,0x2
  42abb8:	push   ebp
  42abb9:	(bad)  
  42abba:	daa    
  42abbb:	or     ebx,0xffffffd5
  42abbe:	dec    esp
  42abbf:	ret    0x762
  42abc2:	cmp    DWORD PTR [eax+edi*2+0x277a7427],esp
  42abc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abca:	in     eax,dx
  42abcb:	mov    dl,0x0
  42abcd:	sbb    DWORD PTR [ebp-0x38],edx
  42abd0:	cmp    edx,DWORD PTR [edx+ecx*2+0x3b]
  42abd4:	sahf   
  42abd5:	shr    ch,1
  42abd7:	cwde   
  42abd8:	stos   DWORD PTR es:[edi],eax
  42abd9:	push   0x32698af5
  42abde:	bound  esp,QWORD PTR [esi]
  42abe0:	sahf   
  42abe1:	add    al,0x1c
  42abe3:	(bad)  
  42abe4:	idiv   BYTE PTR [ebx+0x48e77799]
  42abea:	cmp    al,0x56
  42abec:	jmp    0x5875:0x74e48f8
  42abf3:	pop    edi
  42abf4:	mov    edx,0xfe043231
  42abf9:	(bad)  
  42abfa:	mov    bl,0xff
  42abfc:	adc    al,0x61
  42abfe:	mov    edi,DWORD PTR [eax+0x6f22d7d9]
  42ac04:	jae    0x42ac2c
  42ac06:	rol    DWORD PTR [ecx-0x69],0x8c
  42ac0a:	daa    
  42ac0b:	fadd   DWORD PTR [ebp+ebx*1-0x4d]
  42ac0f:	pop    ds
  42ac10:	inc    esi
  42ac11:	data16 sub al,0xef
  42ac14:	pop    esi
  42ac15:	sbb    edi,ebp
  42ac17:	cmp    BYTE PTR [eax+0x5e56733c],bh
  42ac1d:	mov    dh,0x30
  42ac1f:	das    
  42ac20:	sub    eax,0xb15ccb5f
  42ac25:	and    al,0x4f
  42ac27:	xchg   esi,eax
  42ac28:	into   
  42ac29:	inc    edi
  42ac2a:	jae    0x42ac31
  42ac2c:	mov    al,0xb0
  42ac2e:	and    DWORD PTR [ecx+0x2809c26d],ecx
  42ac34:	mov    dl,0xb1
  42ac36:	sti    
  42ac37:	cmp    eax,0x4901b912
  42ac3c:	add    eax,0x54683b46
  42ac41:	cli    
  42ac42:	enter  0x1543,0xef
  42ac46:	xor    al,0x6a
  42ac48:	loope  0x42acc6
  42ac4a:	sub    cl,dl
  42ac4c:	mov    ds:0x9975d00a,al
  42ac51:	cli    
  42ac52:	out    dx,eax
  42ac53:	xor    esi,0xffffffa3
  42ac56:	or     esp,ecx
  42ac58:	pop    ds
  42ac59:	aad    0x32
  42ac5b:	sbb    esp,DWORD PTR [edi+0x32e7c65a]
  42ac61:	mov    edi,gs
  42ac63:	mov    DWORD PTR [esi+0x17f105e0],esi
  42ac69:	jmp    0xb677:0x3ec61133
  42ac70:	loop   0x42ac93
  42ac72:	fiadd  WORD PTR [ebp+0x67c4d441]
  42ac78:	sti    
  42ac79:	cmp    al,0xc2
  42ac7b:	clc    
  42ac7c:	lods   al,BYTE PTR ds:[esi]
  42ac7d:	sub    esp,DWORD PTR [ecx+0x50]
  42ac80:	jmp    0xec0b:0xac1b3cda
  42ac87:	adc    bl,BYTE PTR [esi-0x7541fd66]
  42ac8d:	mov    ds:0xd1ca194c,eax
  42ac92:	test   DWORD PTR [ebp-0x7f],eax
  42ac95:	cmp    ecx,DWORD PTR [edx]
  42ac97:	and    DWORD PTR ds:[esi-0x1d],0x1136fa62
  42ac9f:	jl     0x42acba
  42aca1:	sti    
  42aca2:	mov    esi,0xd9fbfd5c
  42aca7:	das    
  42aca8:	adc    dl,BYTE PTR [ecx]
  42acaa:	popa   
  42acab:	ror    DWORD PTR [edx+eiz*8],1
  42acae:	stos   BYTE PTR es:[edi],al
  42acaf:	(bad)
  42acb2:	sub    edx,esp
  42acb4:	popf   
  42acb5:	dec    esp
  42acb7:	jne    0x42acbd
  42acb9:	pop    ecx
  42acba:	sar    DWORD PTR [edi+eax*4+0x9],0x4d
  42acbf:	fisub  DWORD PTR [edi]
  42acc1:	xchg   esp,eax
  42acc2:	imul   DWORD PTR [edx-0x61]
  42acc5:	jnp    0x42ad14
  42acc7:	enter  0xc66d,0xd0
  42accb:	js     0x42acc0
  42accd:	xchg   esp,eax
  42acce:	fidiv  DWORD PTR [eax]
  42acd0:	in     al,dx
  42acd1:	in     al,0x6b
  42acd3:	fbstp  TBYTE PTR [ebx]
  42acd5:	mov    cl,0x7b
  42acd7:	sub    eax,0x31b73bda
  42acdc:	shl    BYTE PTR [edx-0x43cae7ac],cl
  42ace2:	out    0x71,eax
  42ace4:	fsubr  st(5),st
  42ace6:	stos   BYTE PTR es:[edi],al
  42ace7:	in     al,0x5e
  42ace9:	sbb    eax,0x5643b13d
  42acee:	test   eax,0xf0783fda
  42acf3:	out    0xa,eax
  42acf5:	out    0x7f,eax
  42acf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acf8:	dec    ebx
  42acf9:	and    BYTE PTR [ebx-0x633f6ceb],bh
  42acff:	inc    edx
  42ad00:	lods   al,BYTE PTR ds:[esi]
  42ad01:	lock sbb al,0x10
  42ad04:	push   edx
  42ad05:	in     eax,0x8a
  42ad07:	push   edx
  42ad08:	dec    eax
  42ad09:	mov    ch,0x71
  42ad0b:	mov    ?,edx
  42ad0d:	pop    ebx
  42ad0e:	jb     0x42acd8
  42ad10:	mov    ds:0x7935ce9d,al
  42ad15:	leave  
  42ad16:	mov    edx,DWORD PTR [ebx-0xfd2ac1b]
  42ad1c:	rol    DWORD PTR [eax+0x1e05249b],1
  42ad22:	adc    al,0x7d
  42ad24:	test   al,0xd3
  42ad26:	xchg   BYTE PTR [eax],ch
  42ad28:	das    
  42ad29:	cld    
  42ad2a:	jp     0x42acb8
  42ad2c:	adc    esp,eax
  42ad2e:	pop    ebp
  42ad2f:	or     DWORD PTR [eax+edi*1-0x57],esi
  42ad33:	sbb    BYTE PTR [ecx],ah
  42ad35:	adc    al,0x71
  42ad37:	in     al,dx
  42ad38:	sbb    ecx,DWORD PTR [edi-0x4862969b]
  42ad3e:	rcl    BYTE PTR [eax],1
  42ad40:	xchg   edi,eax
  42ad41:	adc    BYTE PTR [ebx],ch
  42ad43:	jmp    0xa7c5:0x5552e090
  42ad4a:	pop    ebp
  42ad4b:	or     BYTE PTR [ecx],dl
  42ad4d:	jmp    0xb086:0x9ef3b557
  42ad54:	push   esi
  42ad55:	gs enter 0x5d02,0xe
  42ad5a:	es ds rcl esi,0x8c
  42ad5f:	cli    
  42ad60:	rcr    BYTE PTR [esi-0x4e],cl
  42ad63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad64:	mov    edx,0x814ebe68
  42ad69:	ret    
  42ad6a:	sub    eax,0xa4c8ae97
  42ad6f:	jns    0x42ad27
  42ad71:	mov    DWORD PTR [eax-0x7755ffa3],ecx
  42ad77:	or     cl,BYTE PTR [edx-0x1a]
  42ad7a:	push   esi
  42ad7b:	push   ds
  42ad7c:	and    DWORD PTR [edx+edi*4],0x1
  42ad80:	cmp    eax,0xcbd29b33
  42ad85:	mov    WORD PTR [ebp+0x36],?
  42ad88:	mov    eax,ds:0xbb6e0db3
  42ad8d:	xchg   esi,eax
  42ad8e:	(bad)  
  42ad8f:	mov    esp,0xfc44b257
  42ad94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad95:	(bad)  
  42ad96:	dec    esi
  42ad97:	jae    0x42adc9
  42ad99:	iret   
  42ad9a:	das    
  42ad9b:	or     bl,bl
  42ad9d:	clc    
  42ad9e:	ja     0x42ad4b
  42ada0:	sar    BYTE PTR [edi-0x7c],1
  42ada3:	imul   ebp,DWORD PTR [edx+0x52],0xb9ee6fda
  42adaa:	and    cl,BYTE PTR [ecx-0x40]
  42adad:	popf   
  42adae:	test   al,0x6
  42adb0:	and    DWORD PTR [edi+0x5a9750d8],0x8f49b954
  42adba:	xor    DWORD PTR [eax-0x1538ec4a],esp
  42adc0:	adc    edx,eax
  42adc2:	or     al,0x51
  42adc4:	jbe    0x42ada7
  42adc6:	pop    edi
  42adc7:	mov    bl,0xb1
  42adc9:	jne    0x42ade1
  42adcb:	push   0x5e679b4
  42add0:	mov    cl,0x50
  42add2:	or     eax,0xa518958c
  42add7:	mov    edx,0x45cb7135
  42addc:	sar    DWORD PTR [ebx],cl
  42adde:	mov    ch,0xf6
  42ade0:	fist   WORD PTR [edi]
  42ade2:	pop    ss
  42ade3:	(bad)  
  42ade4:	sbb    al,0x7b
  42ade6:	dec    edx
  42ade7:	inc    eax
  42ade8:	sbb    eax,0xe865ae99
  42aded:	loope  0x42adcc
  42adef:	ret    0x328
  42adf2:	(bad)  
  42adf3:	syscall 
  42adf5:	jmp    0x40d687c4
  42adfa:	xchg   esp,eax
  42adfb:	mov    edi,0x946053d2
  42ae00:	popf   
  42ae01:	dec    edi
  42ae02:	mov    dl,0xb0
  42ae04:	aam    0x77
  42ae06:	cmp    bh,BYTE PTR [edx-0x1]
  42ae09:	test   BYTE PTR [ecx+0x23],dl
  42ae0c:	and    al,dh
  42ae0e:	fdiv   st,st(3)
  42ae10:	xor    eax,0x1e76bd55
  42ae15:	sub    DWORD PTR [ebp-0x3b],edx
  42ae18:	jecxz  0x42adec
  42ae1a:	(bad)  
  42ae1b:	and    BYTE PTR [esi-0x558f11aa],ch
  42ae21:	adc    al,0xee
  42ae23:	shr    bl,1
  42ae25:	in     eax,0xfb
  42ae27:	js     0x42ae9d
  42ae29:	jbe    0x42adab
  42ae2b:	xchg   ebx,eax
  42ae2c:	(bad)  [esi-0x3b]
  42ae2f:	fstp   DWORD PTR [ecx-0x4e]
  42ae32:	ins    DWORD PTR es:[edi],dx
  42ae33:	mov    ds,WORD PTR [ecx]
  42ae35:	mov    DWORD PTR ds:0x722d52cd,esp
  42ae3b:	and    al,0xd1
  42ae3d:	sub    ch,BYTE PTR [ecx-0x58]
  42ae40:	dec    ecx
  42ae41:	mov    al,0x50
  42ae43:	mov    esi,0xdff58f95
  42ae48:	jg     0x42aeb6
  42ae4a:	(bad)  
  42ae4b:	rcl    BYTE PTR [edx+0x10],1
  42ae4e:	mov    ebx,0xe6b18a32
  42ae53:	lahf   
  42ae54:	cmp    DWORD PTR [edi-0x5c],edi
  42ae57:	pop    ds
  42ae58:	jns    0x42adf3
  42ae5a:	jno    0x42ae1f
  42ae5c:	clc    
  42ae5d:	test   BYTE PTR [edi+ecx*8+0x2e51ba58],0xe3
  42ae65:	icebp  
  42ae66:	mov    BYTE PTR [edx-0x37],ah
  42ae69:	push   ebp
  42ae6a:	repz sub dl,bh
  42ae6d:	push   ebx
  42ae6e:	jns    0x42ae99
  42ae70:	nop
  42ae71:	xchg   edx,eax
  42ae72:	sbb    al,0xd4
  42ae74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae75:	cmp    ebx,DWORD PTR [edi]
  42ae77:	or     al,0x4
  42ae79:	or     al,0xe5
  42ae7b:	data16 fld DWORD PTR ds:0xe91d371a
  42ae82:	dec    eax
  42ae83:	dec    ecx
  42ae84:	out    dx,al
  42ae85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae86:	cld    
  42ae87:	xor    dh,BYTE PTR [ebx]
  42ae89:	stos   BYTE PTR es:[edi],al
  42ae8a:	sub    ah,BYTE PTR [ebx]
  42ae8c:	dec    dh
  42ae8e:	ja     0x42aefb
  42ae90:	js     0x42ae19
  42ae92:	imul   ebp,DWORD PTR [ebx],0xe90c1e67
  42ae98:	pop    esp
  42ae99:	scas   eax,DWORD PTR es:[edi]
  42ae9a:	push   0xffffffb3
  42ae9c:	adc    ecx,edx
  42ae9e:	cmp    BYTE PTR [ecx+0x4e],0x83
  42aea2:	mov    al,0x25
  42aea4:	(bad)  
  42aea6:	retf   
  42aea7:	push   0x4ffc859b
  42aeac:	mov    ecx,0xf5ac0d84
  42aeb1:	xchg   esp,eax
  42aeb2:	push   cs
  42aeb3:	sbb    al,0xc5
  42aeb5:	(bad)  
  42aeb6:	cmp    esp,DWORD PTR [ecx+ebp*8-0x228a5fee]
  42aebd:	add    ch,BYTE PTR [ebp-0x4718529c]
  42aec3:	push   cs
  42aec4:	dec    edx
  42aec5:	pop    ecx
  42aec6:	leave  
  42aec7:	stos   DWORD PTR es:[edi],eax
  42aec8:	jp     0x42ae59
  42aeca:	xor    eax,0x1107a174
  42aecf:	or     eax,0x2423515a
  42aed4:	div    BYTE PTR [ebx]
  42aed6:	push   ebx
  42aed7:	hlt    
  42aed8:	mov    ?,WORD PTR [edi+0x2dab334b]
  42aede:	sbb    BYTE PTR [eax+0x61],ch
  42aee1:	dec    eax
  42aee2:	outs   dx,BYTE PTR ds:[esi]
  42aee3:	mov    edx,0xc0afc081
  42aee8:	cmp    DWORD PTR [edx+0x7f00e49a],ecx
  42aeee:	ret    0x85da
  42aef1:	shr    DWORD PTR [esi-0x3e],cl
  42aef4:	js     0x42af3e
  42aef6:	pop    es
  42aef7:	sbb    BYTE PTR [ebp+0x79dca96f],0xc9
  42aefe:	mov    ch,0xe6
  42af00:	fld    TBYTE PTR [edx-0x4e0b01d3]
  42af06:	xchg   esi,eax
  42af07:	cdq    
  42af08:	push   ecx
  42af09:	sahf   
  42af0a:	mov    eax,ds:0x188c174d
  42af0f:	fild   DWORD PTR [edi+0xd]
  42af12:	lahf   
  42af13:	js     0x42af6a
  42af15:	mov    edx,0x32c0ed33
  42af1a:	or     BYTE PTR [edx],bl
  42af1c:	jg     0x42aed9
  42af1e:	dec    eax
  42af1f:	xchg   edx,eax
  42af20:	sbb    DWORD PTR [ebx-0x666de9d3],ebp
  42af26:	out    dx,eax
  42af27:	cwde   
  42af28:	arpl   WORD PTR [ebx+0x7bace3f0],ax
  42af2e:	sti    
  42af2f:	jle    0x42af73
  42af31:	mov    BYTE PTR [eax+0x6e],bl
  42af34:	inc    ebx
  42af35:	xor    eax,0x4ef19d4f
  42af3a:	inc    ecx
  42af3b:	nop
  42af3c:	adc    al,0xd2
  42af3e:	xlat   BYTE PTR ds:[ebx]
  42af3f:	fidiv  WORD PTR [ebp+0xa]
  42af42:	mov    ds:0x237d3e5d,eax
  42af47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af48:	mov    bl,0x7d
  42af4a:	cwde   
  42af4b:	or     eax,0xdc0923f8
  42af50:	and    BYTE PTR [ebx],dl
  42af52:	cmp    DWORD PTR [edi+edx*2+0x12],0x36
  42af57:	test   BYTE PTR [esi],0xf1
  42af5a:	cmp    al,0x82
  42af5c:	inc    ebx
  42af5d:	ins    BYTE PTR es:[edi],dx
  42af5e:	mov    al,ah
  42af60:	pop    ecx
  42af61:	jecxz  0x42af6f
  42af63:	mov    ah,0xdb
  42af65:	jg     0x42af63
  42af67:	mov    ah,0x49
  42af69:	or     al,0x6b
  42af6b:	adc    eax,0x3c559605
  42af70:	xchg   edi,eax
  42af71:	push   0x67
  42af73:	aas    
  42af74:	cld    
  42af75:	mov    ah,0xa0
  42af77:	push   esp
  42af78:	outs   dx,DWORD PTR ds:[esi]
  42af79:	sub    eax,0x84465f9f
  42af7e:	pop    ss
  42af7f:	xchg   esp,eax
  42af80:	lods   al,BYTE PTR ds:[si]
  42af82:	les    eax,FWORD PTR [esi]
  42af84:	xlat   BYTE PTR ds:[ebx]
  42af85:	lods   al,BYTE PTR ds:[esi]
  42af86:	rol    DWORD PTR [eax+0x13],1
  42af89:	in     eax,0xd6
  42af8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af8c:	add    DWORD PTR [ebx],esi
  42af8e:	mov    ebx,ebp
  42af90:	and    al,0x45
  42af92:	std    
  42af93:	out    dx,eax
  42af94:	mov    esi,0x1ac6d7d6
  42af99:	jmp    0x42afbf
  42af9b:	cld    
  42af9c:	pop    es
  42af9d:	mov    ds:0xff99f423,al
  42afa2:	cmp    cl,ch
  42afa4:	inc    eax
  42afa5:	mov    al,0x9c
  42afa7:	out    dx,al
  42afa8:	pop    edi
  42afa9:	repz xor eax,0x619952
  42afaf:	fisub  DWORD PTR [edx+0x36]
  42afb2:	aad    0xee
  42afb4:	(bad)  
  42afb5:	xor    al,BYTE PTR [edi+0x48]
  42afb8:	push   esp
  42afb9:	xchg   BYTE PTR [edx-0x99fa73],bh
  42afbf:	icebp  
  42afc0:	jnp    0x42b041
  42afc2:	in     al,0x13
  42afc4:	add    ah,BYTE PTR [eax]
  42afc6:	sub    edx,edx
  42afc8:	pop    esi
  42afc9:	icebp  
  42afca:	div    DWORD PTR [ebp+0x5e]
  42afcd:	js     0x42b03c
  42afcf:	in     eax,dx
  42afd0:	cdq    
  42afd1:	cmp    al,0x17
  42afd3:	add    ch,BYTE PTR [edx+0x15]
  42afd6:	inc    esp
  42afd7:	and    BYTE PTR [ebp-0x58],ah
  42afda:	dec    esp
  42afdb:	sbb    ah,ah
  42afdd:	push   esp
  42afde:	pop    ebx
  42afdf:	loopne 0x42afa3
  42afe1:	inc    edx
  42afe2:	inc    ecx
  42afe3:	xchg   edx,eax
  42afe4:	mov    eax,ds:0xcde4d0dd
  42afe9:	xlat   BYTE PTR ds:[ebx]
  42afea:	jmp    0x8f52:0x9d6dea9b
  42aff1:	push   eax
  42aff2:	loop   0x42b057
  42aff4:	jecxz  0x42b071
  42aff6:	xchg   BYTE PTR [edi],ch
  42aff8:	sub    dh,BYTE PTR [edx-0x4d]
  42affb:	cmp    BYTE PTR [edi],al
  42affd:	icebp  
  42affe:	dec    ecx
  42afff:	mov    eax,0xa7d24142
  42b004:	pusha  
  42b005:	in     al,0x8b
  42b007:	clc    
  42b008:	pusha  
  42b009:	cmp    ch,BYTE PTR [esp+edi*8+0x2c]
  42b00d:	in     al,dx
  42b00e:	rcr    DWORD PTR [edx+0x20],0x41
  42b012:	lods   al,BYTE PTR ds:[esi]
  42b013:	jge    0x42afa2
  42b015:	mov    bh,0x21
  42b017:	fwait
  42b018:	mov    edi,0x6356c97b
  42b01d:	mov    ds:0x741f5b7,eax
  42b022:	test   eax,0xa5023ae3
  42b027:	stos   BYTE PTR es:[edi],al
  42b028:	or     DWORD PTR [edx+0x43],esi
  42b02b:	div    al
  42b02d:	add    cl,0xa9
  42b030:	xor    ebx,DWORD PTR [esi+0x55]
  42b033:	jg     0x42b05c
  42b035:	je     0x42afd2
  42b037:	shl    al,1
  42b039:	cmp    eax,0x8e92155c
  42b03e:	mov    ebp,0x8015aae1
  42b043:	sbb    bh,0x89
  42b046:	pop    esi
  42b047:	test   DWORD PTR [ebp+0x6a6e343f],0xb73b17aa
  42b051:	out    dx,al
  42b052:	xchg   esi,eax
  42b053:	pop    ds
  42b054:	inc    ecx
  42b055:	push   0xb9b1de66
  42b05a:	test   eax,0x6d6ce2bf
  42b05f:	xchg   esp,eax
  42b060:	iret   
  42b061:	xchg   esp,eax
  42b062:	mov    eax,0xbda40869
  42b067:	push   ebx
  42b068:	mov    bl,bh
  42b06a:	mov    dh,0xe9
  42b06c:	dec    ecx
  42b06d:	leave  
  42b06e:	icebp  
  42b06f:	add    cl,BYTE PTR [ebx]
  42b071:	sbb    eax,0xce7a147a
  42b076:	xchg   ebp,eax
  42b077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b078:	jp     0x42b0bd
  42b07a:	and    bh,BYTE PTR [eax+eiz*1+0x295b6af4]
  42b081:	(bad)  
  42b082:	jge    0x42b0c5
  42b084:	stos   BYTE PTR es:[edi],al
  42b085:	xchg   edx,eax
  42b086:	sbb    edi,esp
  42b088:	adc    edx,DWORD PTR [ebp+0x3ebd43f7]
  42b08e:	mov    ds:0xd87d656f,eax
  42b093:	imul   edi,ecx,0x38
  42b096:	adc    al,0x96
  42b098:	and    al,0x17
  42b09a:	jge    0x42b048
  42b09c:	and    edi,DWORD PTR [esp+edx*4+0x44fbf49a]
  42b0a3:	es fs xor al,0x96
  42b0a7:	mov    dl,0x40
  42b0a9:	inc    eax
  42b0aa:	push   ebp
  42b0ab:	pop    edi
  42b0ac:	and    ah,bh
  42b0ae:	mov    ds:0xfe4ab607,eax
  42b0b3:	cdq    
  42b0b4:	mov    al,ds:0x5bef1766
  42b0b9:	ins    DWORD PTR es:[edi],dx
  42b0ba:	neg    BYTE PTR [ebp-0x69]
  42b0bd:	fst    DWORD PTR [esi*8-0x2b4086c8]
  42b0c4:	sbb    al,al
  42b0c6:	int3   
  42b0c7:	fldenv [edx+eax*8]
  42b0ca:	dec    ecx
  42b0cb:	sahf   
  42b0cc:	pop    edi
  42b0cd:	xor    esi,0x282ccb65
  42b0d3:	xchg   edi,eax
  42b0d4:	mov    esi,0x1a1cbc64
  42b0d9:	jno    0x42b05d
  42b0db:	les    esp,FWORD PTR [edi]
  42b0dd:	add    al,0x6f
  42b0df:	(bad)  
  42b0e0:	fdiv   st,st(5)
  42b0e2:	mov    edi,0x96c1779a
  42b0e7:	or     BYTE PTR ds:0xa7b8b03f,0xc4
  42b0ee:	sub    DWORD PTR [eax+0x1ccf4a1b],esp
  42b0f4:	enter  0x910d,0xee
  42b0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0f9:	int3   
  42b0fa:	jno    0x42b129
  42b0fc:	retf   
  42b0fd:	or     DWORD PTR [ecx-0x39600616],ebp
  42b103:	pop    esp
  42b104:	(bad)  
  42b105:	ss in  al,dx
  42b107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b108:	fidiv  DWORD PTR ds:0x8930d47a
  42b10e:	inc    ebx
  42b10f:	adc    BYTE PTR [eax-0x3c],dh
  42b112:	lods   al,BYTE PTR ds:[esi]
  42b113:	dec    ebx
  42b114:	hlt    
  42b115:	push   esi
  42b116:	and    BYTE PTR [edi],bl
  42b118:	and    esi,ebp
  42b11a:	sbb    DWORD PTR [edx+eiz*1+0x79],ebx
  42b11e:	in     al,0x23
  42b120:	enter  0x5904,0xdf
  42b124:	rol    DWORD PTR [ecx],0xc1
  42b127:	sbb    ebx,DWORD PTR [eax]
  42b129:	test   al,0xbf
  42b12b:	lods   al,BYTE PTR ss:[si]
  42b12e:	dec    ebx
  42b12f:	daa    
  42b130:	push   cs
  42b131:	(bad)  
  42b132:	stc    
  42b133:	sar    DWORD PTR ss:[edi],0xb9
  42b137:	scas   al,BYTE PTR es:[edi]
  42b138:	mov    dl,0x7d
  42b13a:	test   dl,bh
  42b13c:	stos   BYTE PTR es:[edi],al
  42b13d:	mov    cs,WORD PTR ds:0xd54892e6
  42b143:	icebp  
  42b144:	xor    bh,BYTE PTR [edi+0x71]
  42b147:	ret    
  42b148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b149:	stc    
  42b14a:	push   0xb3e9e7ea
  42b14f:	mov    ebp,0xc2aa943f
  42b154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b155:	aam    0x8a
  42b157:	xor    DWORD PTR [esi-0x58],esi
  42b15a:	enter  0xb12a,0x64
  42b15e:	jp     0x42b1d6
  42b160:	ds push esi
  42b162:	and    al,0x9
  42b164:	jns    0x42b113
  42b166:	mov    edx,0x884c9d6
  42b16b:	jb     0x42b1e8
  42b16d:	mov    ah,BYTE PTR [ebp+0x66329cdf]
  42b173:	sbb    bh,BYTE PTR [ecx+0x77]
  42b176:	rol    DWORD PTR [edx+ebp*8-0x80],1
  42b17a:	rol    BYTE PTR [ebp-0x65d8b749],cl
  42b180:	dec    esp
  42b181:	push   esi
  42b182:	mov    ch,0xb4
  42b184:	dec    edx
  42b185:	dec    esp
  42b186:	sub    eax,0xcc1a82
  42b18b:	and    ah,BYTE PTR [eax-0x72de6117]
  42b191:	push   0xffffffbe
  42b193:	sub    al,0xff
  42b195:	mov    edx,0x466c53f6
  42b19a:	into   
  42b19b:	(bad)  
  42b19c:	aad    0xc7
  42b19e:	clc    
  42b19f:	loop   0x42b16d
  42b1a1:	aad    0x8d
  42b1a3:	out    dx,al
  42b1a4:	and    ah,BYTE PTR [eax]
  42b1a6:	push   esi
  42b1a7:	xor    BYTE PTR ds:0x49d7d8b8,dh
  42b1ad:	cmp    BYTE PTR [ebx+edx*8+0x33],ch
  42b1b1:	push   eax
  42b1b2:	mov    ?,WORD PTR [esi]
  42b1b4:	mov    edx,0x61a4d38e
  42b1b9:	aad    0x7d
  42b1bb:	dec    esp
  42b1bc:	in     al,dx
  42b1bd:	pop    ecx
  42b1be:	push   ss
  42b1bf:	xor    BYTE PTR [eax-0x42],ah
  42b1c2:	(bad)  
  42b1c3:	hlt    
  42b1c4:	shr    DWORD PTR [ecx+edx*1+0x570e3091],cl
  42b1cb:	popf   
  42b1cc:	jmp    0x42b209
  42b1ce:	fldenv [eax+0x6b639d41]
  42b1d4:	stos   BYTE PTR es:[edi],al
  42b1d5:	lods   eax,DWORD PTR ds:[esi]
  42b1d6:	jecxz  0x42b209
  42b1d8:	fdivr  DWORD PTR ds:0x2d739627
  42b1de:	and    ecx,DWORD PTR [edx+edi*8]
  42b1e1:	inc    eax
  42b1e2:	adc    al,0x8a
  42b1e4:	sub    eax,0x340dd19c
  42b1e9:	shl    BYTE PTR [ecx],cl
  42b1eb:	(bad)  
  42b1ec:	push   ss
  42b1ed:	frstor [ebp+0x60]
  42b1f0:	(bad)  
  42b1f1:	in     eax,0x5e
  42b1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1f4:	lods   eax,DWORD PTR ds:[esi]
  42b1f5:	add    al,0x3b
  42b1f7:	jge    0x42b275
  42b1f9:	ffreep st(7)
  42b1fb:	fild   DWORD PTR [esi-0x63be04cc]
  42b201:	call   0xfd72:0x799f88ae
  42b208:	cmp    eax,0x6ff1bb86
  42b20d:	inc    edx
  42b20e:	test   DWORD PTR [esi+eax*4-0x78],eax
  42b212:	clc    
  42b213:	pop    ebp
  42b214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b215:	mov    dl,0x36
  42b217:	lods   eax,DWORD PTR ds:[esi]
  42b218:	cli    
  42b219:	xchg   esp,eax
  42b21a:	dec    edx
  42b21b:	jmp    edi
  42b21d:	jecxz  0x42b215
  42b21f:	cmp    ebp,DWORD PTR [esi-0x52]
  42b222:	inc    eax
  42b223:	mov    cl,al
  42b225:	out    dx,al
  42b226:	ror    BYTE PTR [ebx+edx*2],cl
  42b229:	jnp    0x42b1d1
  42b22b:	in     eax,dx
  42b22c:	xchg   edx,eax
  42b22d:	xchg   DWORD PTR [edi-0x5ec3cf3d],ebx
  42b233:	and    ebp,DWORD PTR [edi-0x1aa9c478]
  42b239:	dec    ecx
  42b23a:	cmp    DWORD PTR [edx-0x52],edx
  42b23d:	mov    al,0x74
  42b23f:	std    
  42b240:	ficomp DWORD PTR [bx-0x1c]
  42b244:	xchg   BYTE PTR ds:0x3cfc5c80,al
  42b24a:	out    dx,eax
  42b24b:	sbb    eax,0x62695e8e
  42b250:	jae    0x42b1d2
  42b252:	jmp    0x42b23a
  42b254:	fistp  QWORD PTR [ecx+0x6d6fc139]
  42b25a:	add    eax,0x30918381
  42b25f:	mov    al,ds:0x92319b11
  42b264:	adc    eax,0xa21b1d66
  42b269:	in     al,dx
  42b26a:	scas   al,BYTE PTR es:[edi]
  42b26b:	xor    eax,0xa746b968
  42b270:	and    eax,0xad412060
  42b275:	into   
  42b276:	retf   
  42b277:	(bad)  
  42b278:	xchg   edx,eax
  42b279:	push   ss
  42b27a:	mov    cs,WORD PTR [ebp-0xb]
  42b27d:	jne    0x42b253
  42b27f:	and    dl,BYTE PTR [eax]
  42b281:	sbb    eax,0x51482225
  42b286:	hlt    
  42b287:	inc    ecx
  42b288:	sahf   
  42b289:	icebp  
  42b28a:	jo     0x42b264
  42b28c:	sbb    edx,DWORD PTR [edx]
  42b28e:	imul   edi,ebp,0x21
  42b291:	outs   dx,BYTE PTR ds:[esi]
  42b292:	pop    esi
  42b293:	adc    BYTE PTR [esi-0x77bf4618],ch
  42b299:	loope  0x42b2d5
  42b29b:	mov    cl,0x23
  42b29d:	daa    
  42b29e:	popf   
  42b29f:	or     al,BYTE PTR [ecx]
  42b2a1:	jb     0x42b257
  42b2a3:	call   0x48c39602
  42b2a8:	inc    edx
  42b2a9:	aam    0xc9
  42b2ab:	ds mov ebp,0x9d95eddc
  42b2b1:	and    eax,0x18dba0ae
  42b2b6:	or     cl,BYTE PTR [ecx-0x61b1a518]
  42b2bc:	repnz mov cl,0x13
  42b2bf:	clc    
  42b2c0:	adc    eax,0x726069ce
  42b2c5:	mul    DWORD PTR [edi-0x39]
  42b2c8:	xchg   esi,eax
  42b2c9:	xchg   ebx,eax
  42b2ca:	out    dx,eax
  42b2cb:	jae    0x42b300
  42b2cd:	sbb    BYTE PTR [ebp+0x1db5011f],bh
  42b2d3:	mov    dh,0xdb
  42b2d5:	retf   
  42b2d6:	imul   edi,ecx,0xf36fbb5f
  42b2dc:	inc    edi
  42b2dd:	cmp    al,0x68
  42b2df:	fcomp  QWORD PTR [eax+0x3e]
  42b2e2:	cs int 0xaf
  42b2e5:	std    
  42b2e6:	aad    0x2d
  42b2e8:	add    bh,BYTE PTR [eax+0x1066009]
  42b2ee:	ins    DWORD PTR es:[edi],dx
  42b2ef:	inc    ecx
  42b2f0:	mov    al,ds:0x5bec7cbd
  42b2f5:	je     0x42b2ae
  42b2f7:	jns    0x42b2b9
  42b2f9:	shl    ebx,0x85
  42b2fc:	test   edx,esi
  42b2fe:	adc    DWORD PTR ds:0xfd3d03e9,eax
  42b304:	inc    edx
  42b305:	push   cs
  42b306:	repnz mov eax,0x70a187c7
  42b30c:	pop    edx
  42b30d:	sbb    ecx,DWORD PTR ds:0x24cab30e
  42b313:	js     0x42b388
  42b315:	mov    cl,BYTE PTR [ecx]
  42b317:	in     eax,0xd3
  42b319:	(bad)  
  42b31a:	in     eax,0x99
  42b31c:	fidivr DWORD PTR [esi+esi*4+0x28]
  42b320:	jno    0x42b2e8
  42b322:	inc    eax
  42b323:	push   esp
  42b324:	scas   al,BYTE PTR es:[edi]
  42b325:	jae    0x42b375
  42b327:	cmp    dl,0xbb
  42b32a:	sub    al,0x78
  42b32c:	sub    DWORD PTR [edi+0xf],0xffffffc4
  42b330:	mov    DWORD PTR [edx-0x6d03015d],esi
  42b336:	lods   al,BYTE PTR ds:[esi]
  42b337:	add    edi,ebp
  42b339:	xchg   edi,eax
  42b33a:	lahf   
  42b33b:	bound  ebp,QWORD PTR [edx-0x10]
  42b33e:	lock inc edx
  42b340:	popa   
  42b341:	out    0x6a,eax
  42b343:	repnz stos BYTE PTR es:[edi],al
  42b345:	hlt    
  42b346:	sub    DWORD PTR [ecx+ebp*1+0x79d71b22],esi
  42b34d:	pop    ecx
  42b34e:	daa    
  42b34f:	out    dx,eax
  42b350:	adc    al,0x78
  42b352:	leave  
  42b353:	sbb    eax,0xc2311d17
  42b358:	lahf   
  42b359:	(bad)  
  42b35a:	cmp    edx,DWORD PTR [edi+edi*4-0x70]
  42b35e:	arpl   WORD PTR [ebp-0x1b105dd6],cx
  42b364:	jmp    0x5167:0x4df3697e
  42b36b:	scas   eax,DWORD PTR es:[edi]
  42b36c:	fcomp  QWORD PTR [eax]
  42b36e:	push   esi
  42b36f:	jg     0x42b33c
  42b371:	adc    eax,0x2fb87333
  42b376:	mov    ds:0xdc28bc9e,eax
  42b37b:	and    BYTE PTR [ecx+0x6a89a482],0x1e
  42b382:	jnp    0x42b34d
  42b384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b385:	xor    al,0x76
  42b387:	daa    
  42b388:	mov    ds:0xc061ae51,eax
  42b38d:	sahf   
  42b38e:	and    BYTE PTR [eax],ch
  42b390:	imul   esi,DWORD PTR [eax],0x42
  42b393:	leave  
  42b394:	pop    ecx
  42b395:	pop    esp
  42b396:	test   DWORD PTR [ecx+0x54961945],esp
  42b39c:	mov    DWORD PTR [edx+0x353e2a97],eax
  42b3a2:	ss xchg ebx,eax
  42b3a4:	int3   
  42b3a5:	bound  edi,QWORD PTR [ebp-0x62]
  42b3a8:	dec    edx
  42b3a9:	and    DWORD PTR [ecx-0x565683aa],esp
  42b3af:	fdivr  DWORD PTR ss:[esi]
  42b3b2:	sub    cl,0xd3
  42b3b5:	outs   dx,DWORD PTR ds:[esi]
  42b3b6:	sub    DWORD PTR [edx+ebp*2+0x6387506],esp
  42b3bd:	pop    ecx
  42b3be:	(bad)  
  42b3bf:	aas    
  42b3c0:	dec    edx
  42b3c1:	xchg   ebp,eax
  42b3c2:	jo     0x42b37c
  42b3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3c5:	xorps  xmm1,XMMWORD PTR [ecx]
  42b3c8:	jmp    0xab0b:0x190ef4df
  42b3cf:	stos   DWORD PTR es:[edi],eax
  42b3d0:	cs mov esi,0xbaef8c27
  42b3d6:	pop    edx
  42b3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3d8:	adc    ecx,eax
  42b3da:	std    
  42b3db:	mov    ecx,0xeceb644e
  42b3e0:	push   ss
  42b3e1:	call   0xfc3a54b
  42b3e6:	in     eax,dx
  42b3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3e8:	inc    ecx
  42b3e9:	test   eax,0xf4ce1526
  42b3ee:	ror    BYTE PTR [esi],1
  42b3f0:	push   esi
  42b3f1:	mov    ecx,0xa08fe557
  42b3f6:	dec    esi
  42b3f7:	and    al,0xc8
  42b3f9:	xor    al,0xf2
  42b3fb:	mov    ebp,0x1820a1c5
  42b400:	popa   
  42b401:	add    esp,edx
  42b403:	fistp  WORD PTR [esi+0x5e953412]
  42b409:	jo     0x42b43c
  42b40b:	cs mov ebx,0xc15baf2c
  42b411:	and    ebp,DWORD PTR [esi]
  42b413:	in     al,dx
  42b414:	mov    eax,0xfd09807f
  42b419:	in     eax,dx
  42b41a:	mov    edx,0x3247abc0
  42b41f:	mov    dl,0x45
  42b421:	or     esp,0xffffff97
  42b424:	std    
  42b425:	(bad)  
  42b427:	sub    dh,al
  42b429:	int3   
  42b42a:	stc    
  42b42b:	fucomi st,st(3)
  42b42d:	outs   dx,BYTE PTR ds:[esi]
  42b42e:	jle    0x42b4ad
  42b430:	mov    al,ds:0xad220c6
  42b435:	xor    al,0x45
  42b437:	jecxz  0x42b45e
  42b439:	mov    cl,0x22
  42b43b:	adc    edx,DWORD PTR [ebx+0x17f4d753]
  42b441:	(bad)  
  42b443:	xor    bl,dl
  42b445:	rcr    BYTE PTR [ecx+edi*4+0x44],0x76
  42b44a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b44b:	jp     0x42b464
  42b44d:	mov    al,0xb2
  42b44f:	pushf  
  42b450:	jne    0x42b4a7
  42b452:	fisub  WORD PTR [edi]
  42b454:	scas   eax,DWORD PTR es:[edi]
  42b455:	sub    DWORD PTR [esp-0x66489c2e],0x5a
  42b45d:	jmp    0x42b430
  42b45f:	fild   QWORD PTR [edx-0x30af9a1d]
  42b465:	fnstsw WORD PTR [edi+0x2cfecf42]
  42b46b:	(bad)  
  42b46c:	adc    DWORD PTR [edi],ebp
  42b46e:	or     DWORD PTR ds:0xe74a105a,ecx
  42b474:	sub    al,al
  42b476:	inc    edi
  42b477:	and    ah,BYTE PTR ds:0xab99b36c
  42b47d:	sbb    dh,BYTE PTR ds:0x49baf23f
  42b483:	loope  0x42b429
  42b485:	cs jmp 0x9093495e
  42b48b:	nop
  42b48c:	xchg   DWORD PTR [eax-0x2c8fef14],ebp
  42b492:	mov    ebp,0x1597bc7b
  42b497:	push   0x8b456f5e
  42b49c:	rcr    DWORD PTR [esi+0x64],cl
  42b49f:	sbb    ebp,DWORD PTR [ebx-0x353ef385]
  42b4a5:	outs   dx,DWORD PTR ds:[esi]
  42b4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4a7:	jo     0x42b4f2
  42b4a9:	pusha  
  42b4aa:	sbb    al,0xda
  42b4ac:	xor    eax,0x500770cd
  42b4b1:	xchg   esp,eax
  42b4b2:	neg    BYTE PTR [ecx]
  42b4b4:	cmp    eax,0x2a0c6416
  42b4b9:	cmp    al,BYTE PTR [edx+0x65]
  42b4bc:	pusha  
  42b4bd:	jb     0x42b532
  42b4bf:	(bad)  
  42b4c0:	cwde   
  42b4c1:	ret    0x1940
  42b4c4:	and    al,0x7b
  42b4c6:	add    dh,BYTE PTR [eax*2+0x46385dd8]
  42b4cd:	mov    esi,0xde49a635
  42b4d2:	mov    DWORD PTR [ecx],esi
  42b4d4:	dec    esi
  42b4d5:	(bad)  
  42b4d6:	adc    al,0x8b
  42b4d8:	push   0xffffffb8
  42b4da:	jmp    0x42b4ea
  42b4dc:	dec    esi
  42b4dd:	ret    0xd2d5
  42b4e0:	aad    0xde
  42b4e2:	fild   WORD PTR [edi-0x4099a896]
  42b4e8:	cmp    eax,0x90f31996
  42b4ed:	addr16 jmp 0x42b518
  42b4f0:	xchg   ecx,eax
  42b4f1:	cmp    eax,0x3d3f8c1
  42b4f6:	or     dl,BYTE PTR [esi+0x53]
  42b4f9:	or     BYTE PTR [ecx-0x530200fb],ch
  42b4ff:	xor    dl,BYTE PTR [ebx-0x3de5ef54]
  42b505:	jmp    0x838699e6
  42b50a:	sbb    edx,ecx
  42b50c:	test   eax,0x2192b1d5
  42b511:	scas   eax,DWORD PTR es:[edi]
  42b512:	loope  0x42b522
  42b514:	shl    BYTE PTR [edx-0x3],0xf6
  42b518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b519:	aad    0xcf
  42b51b:	mov    ah,0x80
  42b51d:	in     al,0x6b
  42b51f:	sub    eax,0xbac1b21
  42b524:	aaa    
  42b525:	int    0x88
  42b527:	jmp    0x6a89:0x2f27301c
  42b52e:	adc    edx,DWORD PTR [ebp-0x7cc227e5]
  42b534:	outs   dx,BYTE PTR ds:[esi]
  42b535:	fidiv  DWORD PTR [esi-0x32]
  42b538:	push   esp
  42b539:	xor    ch,bl
  42b53b:	pop    ss
  42b53c:	push   cs
  42b53d:	je     0x42b4e9
  42b53f:	dec    ecx
  42b540:	inc    ebx
  42b541:	xchg   edi,eax
  42b542:	stos   BYTE PTR es:[edi],al
  42b543:	pop    ebp
  42b544:	mov    ds:0xbce198b,eax
  42b549:	inc    esp
  42b54a:	xor    ebx,ebx
  42b54c:	inc    BYTE PTR [edx-0x73]
  42b54f:	inc    ebp
  42b550:	jno    0x42b519
  42b552:	adc    edi,DWORD PTR [ebp-0x7e]
  42b555:	xlat   BYTE PTR ds:[ebx]
  42b556:	jnp    0x42b568
  42b558:	pop    DWORD PTR [eax]
  42b55a:	outs   dx,DWORD PTR ds:[esi]
  42b55b:	mov    ds:0x4ee7dbd,al
  42b561:	sbb    al,0x75
  42b563:	loope  0x42b54a
  42b565:	inc    edi
  42b566:	pop    ecx
  42b567:	cmc    
  42b568:	mov    WORD PTR [edx],?
  42b56a:	dec    edx
  42b56b:	fdivr  DWORD PTR [ebp+ecx*8-0x74]
  42b56f:	clc    
  42b570:	loopne 0x42b510
  42b572:	or     ah,0x18
  42b575:	sbb    eax,0xb34cd331
  42b57a:	xor    ecx,DWORD PTR ds:0xf7855156
  42b580:	inc    ebp
  42b581:	mov    al,0x27
  42b583:	gs jo  0x42b5dc
  42b586:	ror    BYTE PTR [esi],1
  42b588:	xchg   BYTE PTR ds:0xdeab5727,dl
  42b58e:	xchg   edi,eax
  42b58f:	adc    esi,DWORD PTR [eax-0x5364d3a0]
  42b595:	mov    gs,edx
  42b597:	cdq    
  42b598:	sar    DWORD PTR [ebp+0x5489e70c],cl
  42b59e:	jno    0x42b588
  42b5a0:	ret    
  42b5a1:	pxor   mm3,QWORD PTR [ebx]
  42b5a4:	dec    edi
  42b5a5:	push   ebp
  42b5a6:	mov    dh,0x6
  42b5a8:	xor    eax,0x7c5ba30
  42b5ad:	into   
  42b5ae:	adc    edx,DWORD PTR ds:0x99df54d1
  42b5b4:	and    BYTE PTR [ecx],dl
  42b5b6:	mov    BYTE PTR [edx-0x48],ah
  42b5b9:	jmp    0xcfec9da8
  42b5be:	lds    ebx,FWORD PTR [ebx]
  42b5c0:	xchg   ebp,eax
  42b5c1:	inc    ebp
  42b5c2:	sti    
  42b5c3:	push   eax
  42b5c4:	repz pop ds
  42b5c6:	push   ds
  42b5c7:	push   ebx
  42b5c8:	shl    BYTE PTR [eax+0x77],0x3d
  42b5cc:	jne    0x42b56b
  42b5ce:	jbe    0x42b588
  42b5d0:	sbb    eax,0x8083b7bd
  42b5d5:	aam    0xb5
  42b5d7:	lods   eax,DWORD PTR ds:[esi]
  42b5d8:	sub    DWORD PTR [ecx+0x37],0xffffffd1
  42b5dc:	shl    BYTE PTR [ebp+0x4c],1
  42b5df:	outs   dx,DWORD PTR ds:[esi]
  42b5e0:	setne  BYTE PTR [ebp+0x63]
  42b5e4:	sub    DWORD PTR [eax-0x1231e88d],0x7a0e56e6
  42b5ee:	test   BYTE PTR [bp+si+0x14],cl
  42b5f2:	mov    ch,0x68
  42b5f4:	or     BYTE PTR [ebp-0x7f],dl
  42b5f7:	sub    al,0xba
  42b5f9:	push   eax
  42b5fa:	cli    
  42b5fb:	ss fwait
  42b5fd:	push   DWORD PTR [esi]
  42b5ff:	test   DWORD PTR ds:0x73a3af53,0xab075a14
  42b609:	and    al,al
  42b60b:	cmp    ebx,DWORD PTR [edx+0x14]
  42b60e:	sub    dl,dh
  42b610:	mov    esi,0xa08942e6
  42b615:	gs pop esi
  42b617:	sbb    eax,0xaf7d1a59
  42b61c:	leave  
  42b61d:	rcr    BYTE PTR [ecx+0xe8af511],cl
  42b623:	in     eax,0x8
  42b625:	mov    esi,DWORD PTR [ecx]
  42b627:	mov    ch,0x69
  42b629:	mov    eax,ds:0xdba97612
  42b62e:	out    dx,eax
  42b62f:	xchg   BYTE PTR [eax+0x24b3308b],ch
  42b635:	call   0x8a29:0x21de9174
  42b63c:	mov    ecx,DWORD PTR [ebp+0x6b]
  42b63f:	jg     0x42b63a
  42b641:	inc    esp
  42b642:	jns    0x42b68f
  42b644:	xchg   BYTE PTR [edi],ah
  42b646:	mov    cl,0x1e
  42b648:	add    BYTE PTR [edi+edx*8+0x4b462f88],bh
  42b64f:	imul   ebp,esi,0x56
  42b652:	int    0x13
  42b654:	xlat   BYTE PTR ds:[ebx]
  42b655:	ja     0xd9b0dd7e
  42b65b:	push   esi
  42b65c:	lock jmp 0x42b670
  42b65f:	ss ins BYTE PTR es:[edi],dx
  42b661:	retf   0x30ca
  42b664:	hlt    
  42b665:	imul   esi,DWORD PTR [ebp-0x13a108a8],0x79
  42b66c:	(bad)  [ebx]
  42b66e:	pop    esp
  42b66f:	lods   eax,DWORD PTR ds:[esi]
  42b670:	scas   eax,DWORD PTR es:[edi]
  42b671:	cld    
  42b672:	dec    edx
  42b673:	push   es
  42b674:	inc    ecx
  42b675:	rcr    esp,cl
  42b677:	cmp    bl,BYTE PTR [ebp+0x41]
  42b67a:	mov    esp,0x2364ed90
  42b67f:	jnp    0x42b60e
  42b681:	enter  0xe92,0x9a
  42b685:	pop    ebx
  42b686:	mov    edi,DWORD PTR [ecx+0x1c]
  42b689:	pushf  
  42b68a:	mov    edx,0xd03ffc03
  42b68f:	push   es
  42b690:	ja     0x42b6df
  42b692:	push   0x65
  42b694:	stc    
  42b695:	popf   
  42b696:	lods   eax,DWORD PTR ds:[esi]
  42b697:	aas    
  42b698:	pop    ss
  42b699:	aad    0x2
  42b69b:	pushf  
  42b69c:	stos   DWORD PTR es:[edi],eax
  42b69d:	mov    ecx,0x8a7f3cf6
  42b6a2:	sti    
  42b6a3:	jmp    DWORD PTR [edi+0x7c]
  42b6a6:	stc    
  42b6a7:	xor    cl,BYTE PTR [edx-0x40]
  42b6aa:	add    bh,BYTE PTR [ecx+0x4]
  42b6ad:	aaa    
  42b6ae:	inc    esp
  42b6af:	dec    edi
  42b6b0:	or     DWORD PTR [esi],edx
  42b6b2:	xor    al,0xc8
  42b6b4:	mov    ah,0x40
  42b6b6:	jne    0x42b65b
  42b6b8:	or     ecx,DWORD PTR [esp+ecx*2-0x49]
  42b6bc:	cwde   
  42b6bd:	lea    ebp,ds:0x6a7155b4
  42b6c3:	out    dx,al
  42b6c4:	loope  0x42b67f
  42b6c6:	gs push 0xfffffffc
  42b6c9:	test   al,0xe5
  42b6cb:	(bad)  
  42b6cc:	pop    ebx
  42b6cd:	sar    DWORD PTR [edx+0x66],0x2c
  42b6d1:	or     DWORD PTR [edx],esi
  42b6d3:	test   eax,0x85a6ec91
  42b6d8:	dec    ebx
  42b6d9:	test   DWORD PTR [edx],0xa2a9ee58
  42b6df:	loope  0x42b697
  42b6e1:	or     al,0xf2
  42b6e3:	mov    ah,ah
  42b6e5:	jb     0x42b69d
  42b6e7:	mov    esp,0xc83c0d34
  42b6ec:	mov    eax,0x48fb3ea8
  42b6f1:	sub    eax,0x45dc364
  42b6f6:	icebp  
  42b6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6f8:	(bad)  
  42b6f9:	pop    ss
  42b6fa:	pushf  
  42b6fb:	push   0xba0a8ed0
  42b700:	cmp    ebx,ebx
  42b702:	rcr    BYTE PTR [edx-0x27],1
  42b705:	das    
  42b706:	out    dx,al
  42b707:	repnz (bad) 
  42b709:	mov    cs,WORD PTR [edx+0x57]
  42b70c:	jge    0x42b6d1
  42b70e:	out    dx,al
  42b70f:	dec    ebp
  42b710:	jmp    0xed0987ea
  42b715:	pop    ss
  42b716:	and    eax,0x86882c40
  42b71b:	mov    ss,WORD PTR ds:0xaffe01b2
  42b721:	mov    fs,WORD PTR [eax+edi*4]
  42b724:	loope  0x42b6dd
  42b726:	push   ecx
  42b727:	popf   
  42b728:	jecxz  0x42b6ac
  42b72a:	sbb    ebp,DWORD PTR [eax+0x635be665]
  42b730:	rol    esp,1
  42b732:	cmp    BYTE PTR [esi],dl
  42b734:	pusha  
  42b735:	inc    esi
  42b736:	push   es
  42b737:	cmp    al,0xb5
  42b739:	ins    DWORD PTR es:[edi],dx
  42b73a:	clc    
  42b73b:	jmp    0x64950dd0
  42b740:	jae    0x42b77d
  42b742:	sbb    DWORD PTR [esi-0x1],ecx
  42b745:	nop
  42b746:	mov    dh,0xfb
  42b748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b749:	fistp  DWORD PTR [edi+eax*2]
  42b74c:	mov    ebp,0x76d9aa43
  42b751:	mov    al,ds:0x5b4e4826
  42b756:	lahf   
  42b757:	xor    esp,DWORD PTR [ebx+0x46]
  42b75a:	sub    eax,0xd48d446f
  42b75f:	xchg   ebp,eax
  42b760:	pop    es
  42b761:	pop    edx
  42b762:	push   eax
  42b763:	pop    edx
  42b764:	fs push esp
  42b766:	mov    bh,BYTE PTR [ebx]
  42b768:	lds    esi,FWORD PTR [ecx]
  42b76a:	mov    esi,0xe6492ce8
  42b76f:	xchg   edx,eax
  42b770:	stos   DWORD PTR es:[edi],eax
  42b771:	dec    esi
  42b772:	jg     0x42b742
  42b774:	push   edx
  42b775:	add    BYTE PTR [ecx-0x44ff687],ch
  42b77b:	in     eax,0xd2
  42b77d:	inc    edx
  42b77e:	out    0xee,eax
  42b780:	mov    ds:0xa157e8ff,eax
  42b785:	arpl   WORD PTR [esi-0x2dc06b79],cx
  42b78b:	mov    BYTE PTR [esi-0x3de5fd28],ch
  42b791:	xor    esi,DWORD PTR [esi]
  42b793:	push   edx
  42b794:	inc    eax
  42b795:	aas    
  42b796:	and    eax,0x1c24f396
  42b79b:	sbb    BYTE PTR [ebp+0x69],dh
  42b79e:	out    dx,al
  42b79f:	mov    ?,WORD PTR [esi-0x7f]
  42b7a2:	xor    al,0xfc
  42b7a4:	call   0x2fe69ab2
  42b7a9:	dec    edi
  42b7aa:	dec    eax
  42b7ab:	test   BYTE PTR [eax],0x9e
  42b7ae:	jl     0x42b7ea
  42b7b0:	cmp    BYTE PTR [ebx],bl
  42b7b2:	retf   
  42b7b3:	or     eax,0x25f20a1e
  42b7b8:	adc    dl,BYTE PTR [esi]
  42b7ba:	outs   dx,BYTE PTR ds:[esi]
  42b7bb:	shl    BYTE PTR [esi+0x4eb5d017],cl
  42b7c1:	mov    ebp,DWORD PTR [ecx+0x62fcd83e]
  42b7c7:	out    0xea,al
  42b7c9:	daa    
  42b7ca:	pop    ebx
  42b7cb:	frstor [ebp+0x36f79b5b]
  42b7d1:	lahf   
  42b7d2:	mov    bh,0x8d
  42b7d4:	clc    
  42b7d5:	mov    edi,ebx
  42b7d7:	or     al,0xb5
  42b7d9:	xlat   BYTE PTR ds:[ebx]
  42b7da:	and    ebp,esp
  42b7dc:	sar    esp,cl
  42b7de:	jg     0x42b842
  42b7e0:	inc    esi
  42b7e1:	adc    DWORD PTR [esi],edx
  42b7e3:	and    DWORD PTR [esi-0x42411a59],esi
  42b7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7ea:	dec    DWORD PTR ds:0x207a
  42b7ef:	scas   al,BYTE PTR es:[edi]
  42b7f0:	sti    
  42b7f1:	jbe    0x42b85f
  42b7f3:	sub    ebx,DWORD PTR [eax]
  42b7f5:	(bad)  [ecx]
  42b7f7:	or     BYTE PTR [ebx+0x42],al
  42b7fa:	push   edx
  42b7fb:	inc    ecx
  42b7fc:	adc    eax,0x9cb742b7
  42b801:	add    BYTE PTR [ebp-0x18],ah
  42b804:	inc    eax
  42b805:	mov    eax,ds:0xfbac1bb
  42b80a:	(bad)  
  42b80c:	scas   eax,DWORD PTR es:[edi]
  42b80d:	dec    edi
  42b80e:	loope  0x42b7b7
  42b810:	dec    ecx
  42b811:	gs in  eax,0x2a
  42b814:	push   es
  42b815:	daa    
  42b816:	mov    dl,0x88
  42b818:	sub    DWORD PTR [edx-0x67],edi
  42b81b:	ror    edi,cl
  42b81d:	sbb    eax,ebp
  42b81f:	call   0xe5c4e6e5
  42b824:	ins    DWORD PTR es:[edi],dx
  42b825:	inc    esp
  42b826:	punpckhwd mm0,QWORD PTR [bx+di]
  42b82a:	jae    0x42b7d4
  42b82c:	cli    
  42b82d:	in     eax,dx
  42b82e:	jecxz  0x42b885
  42b830:	lahf   
  42b831:	mov    ebx,0x3cbe33e
  42b836:	push   ss
  42b837:	jo     0x42b875
  42b839:	jge    0x42b89c
  42b83b:	int3   
  42b83c:	jg     0x42b85a
  42b83e:	cmp    dl,bl
  42b840:	call   0x682c:0x9a2de48a
  42b847:	mov    edx,0x9836be89
  42b84c:	aas    
  42b84d:	adc    ecx,DWORD PTR [esi]
  42b84f:	rcr    bl,cl
  42b851:	push   eax
  42b852:	out    dx,eax
  42b853:	add    dh,0xa5
  42b856:	imul   al
  42b858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b859:	mov    bh,bl
  42b85b:	mov    BYTE PTR [ebp-0x2fe7c74f],ch
  42b861:	push   ebx
  42b862:	jg     0x42b83d
  42b864:	mov    edx,0x48a37dc3
  42b869:	mov    WORD PTR [ecx],ds
  42b86b:	gs push 0x63cfd9b
  42b871:	aas    
  42b872:	sbb    al,0x9d
  42b874:	scas   al,BYTE PTR es:[edi]
  42b875:	cmp    edx,ecx
  42b877:	fld    DWORD PTR [edx-0x28872158]
  42b87d:	out    0x8b,eax
  42b87f:	lds    eax,FWORD PTR [ecx+0x7b]
  42b882:	(bad)  
  42b883:	popa   
  42b884:	mov    ebp,0x6730a89a
  42b889:	mov    dl,0x7
  42b88b:	dec    ebx
  42b88c:	mov    ecx,DWORD PTR [edx+0x3a685d]
  42b892:	add    DWORD PTR [eax],ecx
  42b894:	push   ebx
  42b895:	xor    eax,0xe2a93ebf
  42b89a:	jecxz  0x42b840
  42b89c:	daa    
  42b89d:	loopne 0x42b893
  42b89f:	ror    DWORD PTR [edx+0x39],0x6f
  42b8a3:	xchg   edi,eax
  42b8a4:	(bad)  
  42b8a5:	jl     0x42b899
  42b8a7:	into   
  42b8a8:	cmp    BYTE PTR [edx],bl
  42b8aa:	mov    ah,0x46
  42b8ac:	xchg   esp,eax
  42b8ad:	enter  0xfd04,0xe2
  42b8b1:	sub    al,dh
  42b8b3:	cmp    al,0x22
  42b8b5:	(bad)  
  42b8b6:	test   BYTE PTR [ebx+0x66],0x44
  42b8ba:	fcmovnbe st,st(1)
  42b8bc:	in     al,dx
  42b8bd:	cwde   
  42b8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8bf:	sbb    al,0x0
  42b8c1:	push   0xffffff94
  42b8c3:	mov    edx,0x80b3b1d4
  42b8c8:	out    0x83,eax
  42b8ca:	push   ss
  42b8cb:	mov    ds:0xa48301d4,eax
  42b8d0:	in     al,0xcf
  42b8d2:	mov    ds:0x4529af7c,al
  42b8d7:	leave  
  42b8d8:	jle    0x42b92e
  42b8da:	iret   
  42b8db:	jmp    0x920d:0x96b00616
  42b8e2:	sub    al,0x7b
  42b8e4:	add    al,0x1
  42b8e6:	jecxz  0x42b899
  42b8e8:	mov    al,ds:0x6aeb1e4f
  42b8ed:	stos   BYTE PTR es:[edi],al
  42b8ee:	dec    ecx
  42b8ef:	jmp    0x8a6c:0x8954f8a9
  42b8f6:	add    DWORD PTR [edx],esi
  42b8f8:	call   0x47869476
  42b8fd:	adc    ebx,DWORD PTR [edx-0x23]
  42b900:	cmp    esp,DWORD PTR [ecx-0x121771d]
  42b906:	adc    ebx,ecx
  42b908:	add    BYTE PTR [eax+0x5270dc7f],ah
  42b90e:	cwde   
  42b90f:	mov    esp,0xf25b4542
  42b914:	xor    esp,DWORD PTR [esi]
  42b916:	mov    DWORD PTR [eax],ecx
  42b918:	jae    0x42b986
  42b91a:	push   es
  42b91b:	add    al,0xc4
  42b91d:	cmp    BYTE PTR [edx+0x49],al
  42b920:	cdq    
  42b921:	dec    esi
  42b922:	fwait
  42b923:	jns    0x42b8b2
  42b925:	scas   eax,DWORD PTR es:[edi]
  42b926:	adc    al,0xdf
  42b928:	(bad)  
  42b929:	(bad)  [ebx+0x68]
  42b92c:	daa    
  42b92d:	in     eax,0xe
  42b92f:	loope  0x42b8c4
  42b931:	lahf   
  42b932:	adc    edi,DWORD PTR [eax+ebx*1+0x5cb0fe1b]
  42b939:	xor    al,0xac
  42b93b:	int    0xa4
  42b93d:	push   ds
  42b93e:	das    
  42b93f:	rcl    DWORD PTR [edi-0x75],cl
  42b942:	shr    DWORD PTR [edi+0x7331ffdb],1
  42b948:	xchg   edx,eax
  42b949:	ja     0x42b909
  42b94b:	xor    eax,0x6ab570eb
  42b950:	add    BYTE PTR [esp+esi*1-0xe],ah
  42b954:	push   0x88c8bf0a
  42b959:	repnz add DWORD PTR [ebp-0xd5dccbc],esi
  42b960:	sbb    al,0xaf
  42b962:	mov    ch,0x7a
  42b964:	mov    ds:0x25556623,eax
  42b969:	(bad)  [ebp-0x22]
  42b96c:	push   esi
  42b96d:	adc    ecx,DWORD PTR [eax-0x64]
  42b970:	les    ebp,FWORD PTR [ecx-0x3e21f344]
  42b976:	mul    BYTE PTR [edi-0x28a912c5]
  42b97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b97d:	jbe    0x42b9f6
  42b97f:	sar    DWORD PTR es:[ebp+0x73],0xe9
  42b984:	add    ah,cl
  42b986:	std    
  42b987:	mov    BYTE PTR [esi],ah
  42b989:	jl     0x42b953
  42b98b:	pop    edx
  42b98c:	loop   0x42b96d
  42b98e:	xor    al,bh
  42b990:	stc    
  42b991:	outs   dx,BYTE PTR ds:[esi]
  42b992:	add    ah,dh
  42b994:	shl    BYTE PTR [edx+esi*2+0x13],cl
  42b998:	ficom  WORD PTR [eax-0x13650e2e]
  42b99e:	iret   
  42b99f:	or     DWORD PTR [edi-0x1c],0x62765344
  42b9a6:	jnp    0x42b95d
  42b9a8:	xchg   esi,eax
  42b9a9:	sub    ebx,DWORD PTR [eax]
  42b9ab:	sbb    al,0x25
  42b9ad:	and    al,BYTE PTR [edx+0x0]
  42b9b0:	gs (bad) 
  42b9b2:	and    dh,dh
  42b9b4:	and    BYTE PTR [eax+edx*2-0x17],bl
  42b9b8:	mov    ds,WORD PTR ds:0x8b5997db
  42b9be:	cmp    DWORD PTR [edx],eax
  42b9c0:	jmp    0x42b9ab
  42b9c2:	dec    eax
  42b9c3:	shl    DWORD PTR [ebx-0x4d],1
  42b9c6:	stos   DWORD PTR es:[edi],eax
  42b9c7:	ret    0x8691
  42b9ca:	xor    ch,dh
  42b9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9cd:	push   es
  42b9ce:	jmp    0xaaab8ea1
  42b9d3:	ficom  WORD PTR [eax-0x226e58ac]
  42b9d9:	xor    eax,0x2a67a463
  42b9de:	icebp  
  42b9df:	sub    al,0x52
  42b9e1:	in     eax,dx
  42b9e2:	push   eax
  42b9e3:	jno    0x42ba41
  42b9e5:	retf   
  42b9e6:	dec    eax
  42b9e7:	gs pop es
  42b9e9:	aas    
  42b9ea:	nop
  42b9eb:	jmp    0x42b97e
  42b9ed:	cs hlt 
  42b9ef:	mov    cl,0x2f
  42b9f1:	outs   dx,DWORD PTR ds:[esi]
  42b9f2:	fst    DWORD PTR [ebx+ebp*4+0x497b115a]
  42b9f9:	std    
  42b9fa:	aaa    
  42b9fb:	pop    edi
  42b9fc:	loope  0x42ba20
  42b9fe:	test   eax,0x882b003e
  42ba03:	out    0xfa,al
  42ba05:	(bad)  
  42ba07:	jne    0x42ba4a
  42ba09:	adc    eax,0x686c7688
  42ba0e:	sub    BYTE PTR [esi-0x45b70e96],al
  42ba14:	dec    ecx
  42ba15:	shl    dh,0xd6
  42ba18:	push   edx
  42ba19:	ins    DWORD PTR es:[edi],dx
  42ba1a:	or     ch,BYTE PTR [ebp+0xd]
  42ba1d:	xchg   ebp,ebp
  42ba1f:	aad    0x48
  42ba21:	pop    ebx
  42ba22:	daa    
  42ba23:	mov    ?,ecx
  42ba25:	out    0xeb,eax
  42ba27:	lods   al,BYTE PTR ds:[esi]
  42ba28:	retf   
  42ba29:	sub    dl,ch
  42ba2b:	jo     0x42b9bc
  42ba2d:	mov    DWORD PTR [eax-0x364fb571],ebx
  42ba33:	cmp    DWORD PTR [edx+0x4b],eax
  42ba36:	(bad)  
  42ba37:	jmp    0x42b9dc
  42ba39:	cmp    al,0xb2
  42ba3b:	xor    BYTE PTR [ecx-0x6],al
  42ba3e:	mov    DWORD PTR [edi+0x1d62fa55],edx
  42ba44:	cld    
  42ba45:	sub    al,0x8b
  42ba47:	adc    esp,edx
  42ba49:	mov    ah,0xcc
  42ba4b:	(bad)  
  42ba4c:	ss pop eax
  42ba4e:	pop    esi
  42ba4f:	mov    esi,0xa94ab9f8
  42ba54:	jmp    0xfe733a79
  42ba59:	push   esp
  42ba5a:	(bad)  
  42ba5b:	jle    0x42ba2c
  42ba5d:	dec    eax
  42ba5e:	cld    
  42ba5f:	stc    
  42ba60:	pop    ds
  42ba61:	mov    ds:0xf362bff8,eax
  42ba66:	(bad)  
  42ba67:	sbb    BYTE PTR [edx],ch
  42ba69:	sub    DWORD PTR [esi],edi
  42ba6b:	inc    ebp
  42ba6c:	inc    sp
  42ba6e:	xor    BYTE PTR [ebx],dl
  42ba70:	and    DWORD PTR ds:0xd0e03023,0xffffff9a
  42ba77:	cdq    
  42ba78:	mov    esi,0xe7c7703f
  42ba7d:	mov    eax,ds:0x256b323b
  42ba82:	lds    esi,FWORD PTR [ebx-0x64bfbf82]
  42ba88:	jp     0x42baed
  42ba8a:	fstp   DWORD PTR [eax-0x31cbc281]
  42ba90:	sti    
  42ba91:	adc    edx,DWORD PTR [ebp+0x67]
  42ba94:	jecxz  0x42ba7f
  42ba96:	cli    
  42ba97:	xor    ecx,esi
  42ba99:	mov    edx,0x82dc5b18
  42ba9e:	pop    ebx
  42ba9f:	mov    cl,BYTE PTR [ecx]
  42baa1:	gs aaa 
  42baa3:	add    dl,BYTE PTR [edi+0x33d9308e]
  42baa9:	sub    bl,BYTE PTR [ebx+0x52]
  42baac:	fadd   DWORD PTR [edi-0x973bf2]
  42bab2:	adc    bl,bh
  42bab4:	dec    DWORD PTR [eax+0x4554d0f6]
  42baba:	fist   WORD PTR [edi+eax*4+0x18]
  42babe:	mov    ah,0x8
  42bac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bac1:	je     0x42bb2f
  42bac3:	dec    ebp
  42bac4:	(bad)  
  42bac5:	(bad)  
  42bac7:	pop    ds
  42bac8:	jb     0x42babc
  42baca:	fnstenv [eax-0x25]
  42bacd:	add    BYTE PTR [ebx+0x42c45bb2],0xef
  42bad4:	fist   WORD PTR [esi-0x32bec99d]
  42bada:	inc    ebx
  42badb:	mov    ch,0x2b
  42badd:	pop    eax
  42bade:	fnstsw WORD PTR [esi]
  42bae0:	in     eax,0xbf
  42bae2:	xor    al,0x99
  42bae4:	sub    DWORD PTR [ebx+0x36418b1e],edx
  42baea:	and    al,0x18
  42baec:	inc    esp
  42baed:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42baef:	add    DWORD PTR [ebx+0x69],edx
  42baf2:	mov    dh,0x69
  42baf4:	stc    
  42baf5:	fucomp st(1)
  42baf7:	xor    DWORD PTR [edi+0xd655451],0x59
  42bafe:	xchg   edi,eax
  42baff:	jns    0x42bb39
  42bb01:	inc    ebx
  42bb02:	ret    
  42bb03:	mov    bl,0x4d
  42bb05:	aaa    
  42bb06:	aad    0xa8
  42bb08:	jg     0x42bb52
  42bb0a:	jle    0x42ba9a
  42bb0c:	mov    bh,0x8a
  42bb0e:	(bad)  
  42bb0f:	pop    ebx
  42bb10:	out    dx,eax
  42bb11:	retf   
  42bb12:	jbe    0x42baf2
  42bb14:	stos   BYTE PTR es:[edi],al
  42bb15:	adc    DWORD PTR [edx-0x68],eax
  42bb18:	call   DWORD PTR [ecx+edi*4]
  42bb1b:	pusha  
  42bb1c:	mov    al,ds:0x37db2f09
  42bb21:	jmp    0xd547:0xc53c3a14
  42bb28:	(bad)  
  42bb29:	sti    
  42bb2a:	and    eax,0x958b79
  42bb2f:	sub    al,0xe9
  42bb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb32:	xchg   edi,eax
  42bb33:	jns    0x42bb48
  42bb35:	mov    al,0x8d
  42bb37:	call   0x62808671
  42bb3c:	sub    BYTE PTR [edx+ecx*8+0x3],bh
  42bb40:	jb     0x42bbba
  42bb42:	cmc    
  42bb43:	gs pop esp
  42bb45:	adc    eax,0x9bba2835
  42bb4a:	jecxz  0x42bb42
  42bb4c:	stc    
  42bb4d:	xchg   esp,eax
  42bb4e:	or     al,0xb4
  42bb50:	pop    ebx
  42bb51:	dec    ebx
  42bb52:	pop    eax
  42bb53:	aas    
  42bb54:	jnp    0x42bb64
  42bb56:	xor    eax,0xc14a51e1
  42bb5b:	and    al,0xec
  42bb5d:	jo     0x42bb55
  42bb5f:	or     BYTE PTR [ebx],0xdb
  42bb62:	ja     0x42bb71
  42bb64:	mov    dl,0xb0
  42bb66:	inc    esp
  42bb67:	sbb    BYTE PTR [ecx-0x87b00b6],cl
  42bb6d:	ss mov ch,0xb0
  42bb70:	sbb    bh,cl
  42bb72:	adc    eax,0xf05c594e
  42bb77:	xor    ecx,ecx
  42bb79:	and    BYTE PTR [edi+0x4e],0xbd
  42bb7d:	shr    BYTE PTR [ebx],1
  42bb7f:	dec    edi
  42bb80:	sub    al,0x64
  42bb82:	clc    
  42bb83:	into   
  42bb84:	ror    BYTE PTR [esi-0x4b22fa2a],cl
  42bb8a:	jmp    0x9884:0x89eff68a
  42bb91:	hlt    
  42bb92:	jns    0x42bb97
  42bb94:	dec    edi
  42bb95:	dec    esi
  42bb96:	pop    ebx
  42bb97:	or     BYTE PTR [eax],cl
  42bb99:	pop    ds
  42bb9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb9b:	nop
  42bb9c:	xor    BYTE PTR [eax+0x148c05c9],cl
  42bba2:	ja     0x42bbec
  42bba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bba6:	inc    esp
  42bba7:	retf   0xfd24
  42bbaa:	(bad)  
  42bbab:	xchg   ebx,eax
  42bbac:	jmp    0x42bb67
  42bbae:	loopne 0x42bb46
  42bbb0:	clc    
  42bbb1:	lods   eax,DWORD PTR ds:[esi]
  42bbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bbb3:	in     eax,dx
  42bbb4:	mov    esi,0x59d05301
  42bbb9:	and    esp,DWORD PTR [esi+0x54]
  42bbbc:	sbb    al,0x65
  42bbbe:	clc    
  42bbbf:	cmp    edx,ebp
  42bbc1:	xor    ah,bh
  42bbc3:	or     ah,BYTE PTR [edx]
  42bbc5:	xor    ebp,DWORD PTR [edi*4+0x5ae07519]
  42bbcc:	cmc    
  42bbcd:	inc    ebx
  42bbce:	sbb    al,cl
  42bbd0:	adc    al,0xe4
  42bbd2:	popa   
  42bbd3:	or     BYTE PTR [ebp+0x1bba05e6],al
  42bbd9:	fcmovbe st,st(7)
  42bbdb:	rcr    BYTE PTR [edi+0x66],1
  42bbde:	mov    DWORD PTR [ebp-0x22],ebp
  42bbe1:	je     0x42bc34
  42bbe3:	jbe    0x42bb93
  42bbe5:	jp     0x42bc2f
  42bbe7:	dec    edx
  42bbe8:	mov    BYTE PTR [ebx-0x6f],ah
  42bbeb:	rcr    DWORD PTR [ecx+0x28],0xec
  42bbef:	lahf   
  42bbf0:	jbe    0x42bc50
  42bbf2:	mov    ebx,0xa4c56032
  42bbf7:	adc    ch,dh
  42bbf9:	push   edx
  42bbfa:	hlt    
  42bbfb:	sbb    DWORD PTR [esi-0x3e054013],edx
  42bc01:	fnstenv [edi-0x3d]
  42bc04:	test   DWORD PTR ds:0xfdc74c62,esp
  42bc0a:	pop    edi
  42bc0b:	mov    al,0x24
  42bc0d:	xor    DWORD PTR [ebp+0x65d802ff],0xa68e239
  42bc17:	add    ebx,DWORD PTR [eax+eax*8-0x39]
  42bc1b:	xchg   esp,eax
  42bc1c:	popa   
  42bc1d:	lds    ebp,FWORD PTR [ebp-0x3a1fd28e]
  42bc23:	mov    bl,0x7a
  42bc25:	dec    esi
  42bc26:	arpl   dx,si
  42bc28:	or     esp,DWORD PTR [ebp+0x72]
  42bc2b:	iret   
  42bc2c:	mov    ds,ebp
  42bc2e:	mov    edx,gs
  42bc30:	inc    ecx
  42bc31:	mov    ebp,0xd2804f78
  42bc36:	outs   dx,DWORD PTR ds:[esi]
  42bc37:	out    dx,eax
  42bc38:	sar    edi,0x8c
  42bc3b:	add    esi,DWORD PTR [ebx+0xd]
  42bc3e:	ret    
  42bc3f:	mov    ebx,0x63d00acc
  42bc44:	scas   eax,DWORD PTR es:[edi]
  42bc45:	sub    dl,BYTE PTR [eax]
  42bc47:	sbb    DWORD PTR [edx+0x7c1ed264],edi
  42bc4d:	js     0x42bc3b
  42bc4f:	fwait
  42bc50:	out    0x5f,eax
  42bc52:	dec    edi
  42bc53:	imul   ecx,DWORD PTR [esi-0x16],0x3e
  42bc57:	outs   dx,DWORD PTR ds:[esi]
  42bc58:	pop    ds
  42bc59:	mov    edx,esp
  42bc5b:	fdiv   st,st(5)
  42bc5d:	sbb    eax,0x102dc04c
  42bc62:	stos   DWORD PTR es:[edi],eax
  42bc63:	push   es
  42bc64:	pop    ebx
  42bc65:	imul   esi,DWORD PTR [ecx],0xffffffc3
  42bc68:	adc    cl,BYTE PTR [edi-0x50652eb]
  42bc6e:	pop    ecx
  42bc6f:	idiv   BYTE PTR [eax+0x5f]
  42bc72:	pop    esi
  42bc73:	fcom   DWORD PTR [esp+ecx*1-0x20]
  42bc77:	push   ds
  42bc78:	pop    ss
  42bc79:	xchg   esi,eax
  42bc7a:	cmp    dh,BYTE PTR ds:[edi+0x37]
  42bc7e:	daa    
  42bc7f:	mov    ecx,0xd79b3718
  42bc84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc85:	mov    ecx,0x7d4fe505
  42bc8a:	shl    BYTE PTR [eax+esi*4],cl
  42bc8d:	mul    DWORD PTR [eax+0x1f]
  42bc90:	fild   WORD PTR [edi+ebx*2]
  42bc93:	nop
  42bc94:	mov    edx,0xa76dd5b5
  42bc99:	mov    edi,0xefa145a4
  42bc9e:	mov    bh,0xae
  42bca0:	pop    ebp
  42bca1:	fwait
  42bca2:	cmc    
  42bca3:	push   0x205b28ec
  42bca8:	jb     0x42bc99
  42bcaa:	and    esi,edx
  42bcac:	in     eax,0x5b
  42bcae:	mov    WORD PTR [esi+edi*1+0x34],cs
  42bcb2:	fdiv   QWORD PTR ds:0xd1ab20e1
  42bcb8:	in     al,0xb1
  42bcba:	into   
  42bcbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcbc:	and    ebp,DWORD PTR [eax]
  42bcbe:	xchg   ebp,eax
  42bcbf:	shl    BYTE PTR ds:0x8eaf6e3e,0xb6
  42bcc6:	int3   
  42bcc7:	xchg   esp,eax
  42bcc8:	ret    
  42bcc9:	leave  
  42bcca:	dec    eax
  42bccb:	dec    ebx
  42bccc:	test   BYTE PTR [edx-0x18180537],ch
  42bcd2:	push   eax
  42bcd3:	sbb    DWORD PTR [ebx+0x4e],ebx
  42bcd6:	cli    
  42bcd7:	lods   eax,DWORD PTR ds:[esi]
  42bcd8:	fcomi  st,st(6)
  42bcda:	mov    dl,0x18
  42bcdc:	pop    es
  42bcdd:	sti    
  42bcde:	jmp    0xcee758df
  42bce3:	cwde   
  42bce4:	cmp    BYTE PTR [ecx+0x1bfe7349],bl
  42bcea:	push   ecx
  42bceb:	push   edx
  42bcec:	out    dx,eax
  42bced:	lods   eax,DWORD PTR ds:[esi]
  42bcee:	adc    DWORD PTR [edi-0x72df8432],edi
  42bcf4:	cmc    
  42bcf5:	in     eax,0x3f
  42bcf7:	imul   DWORD PTR [edi-0x5f792b31]
  42bcfd:	icebp  
  42bcfe:	jno    0x42bc98
  42bd00:	pop    ecx
  42bd01:	push   ss
  42bd02:	ss push 0xffffffbe
  42bd05:	inc    esi
  42bd06:	in     al,0x4d
  42bd08:	xchg   ebp,ecx
  42bd0a:	fwait
  42bd0b:	push   ebx
  42bd0c:	inc    eax
  42bd0d:	xchg   ecx,eax
  42bd0e:	sub    al,0x23
  42bd10:	psllw  mm7,QWORD PTR [eax-0x57]
  42bd14:	pusha  
  42bd15:	and    ebp,DWORD PTR [ecx-0x6a]
  42bd18:	cli    
  42bd19:	hlt    
  42bd1a:	(bad)  
  42bd1b:	fnstcw WORD PTR [edx-0x5e]
  42bd1e:	xchg   esp,eax
  42bd1f:	sbb    al,0xdb
  42bd21:	repnz inc esp
  42bd23:	or     eax,DWORD PTR [ebp-0x71]
  42bd26:	mov    cs,ecx
  42bd28:	neg    edx
  42bd2a:	jge    0x42bceb
  42bd2c:	test   eax,0xd56b308
  42bd31:	out    0x5,eax
  42bd33:	test   BYTE PTR [esi],dl
  42bd35:	ins    BYTE PTR es:[edi],dx
  42bd36:	repz scas eax,DWORD PTR es:[edi]
  42bd38:	pusha  
  42bd39:	jmp    0x42bd04
  42bd3b:	retf   0x327
  42bd3e:	mov    ss,WORD PTR [ebx]
  42bd40:	pop    ss
  42bd41:	cmp    eax,ebx
  42bd43:	mov    cl,dl
  42bd45:	sub    esi,ebx
  42bd47:	push   0xcc8392b2
  42bd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd4d:	cmp    eax,0xe568ab59
  42bd52:	or     esp,ebx
  42bd54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd55:	sbb    eax,0x7c138428
  42bd5a:	inc    esp
  42bd5b:	out    0x36,eax
  42bd5d:	call   0x8a00:0xf77f9c91
  42bd64:	mov    bl,0x2e
  42bd66:	jmp    0x398b:0x360db649
  42bd6d:	dec    esi
  42bd6e:	xor    esp,DWORD PTR [edx]
  42bd70:	out    dx,al
  42bd71:	mov    dl,0xf
  42bd73:	jle    0x42bd8d
  42bd75:	retf   
  42bd76:	or     edi,DWORD PTR [ecx-0x6f]
  42bd79:	ins    DWORD PTR es:[edi],dx
  42bd7a:	cmp    ecx,DWORD PTR [eax-0x774ec2eb]
  42bd80:	push   esi
  42bd81:	adc    eax,0xc5cd6577
  42bd86:	fisub  WORD PTR [edi-0xa]
  42bd89:	aas    
  42bd8a:	and    BYTE PTR [esi+0x1eab0c8e],cl
  42bd90:	jne    0x42be0c
  42bd92:	dec    eax
  42bd93:	adc    al,0xa9
  42bd95:	dec    ecx
  42bd96:	add    al,0xa2
  42bd98:	and    dl,0xa3
  42bd9b:	or     eax,0x7a559ae8
  42bda0:	xor    dh,dl
  42bda2:	fwait
  42bda3:	or     al,0x6e
  42bda5:	add    DWORD PTR [ecx-0x4528b854],esp
  42bdab:	xlat   BYTE PTR ds:[ebx]
  42bdac:	loop   0x42be00
  42bdae:	ror    BYTE PTR [ebp-0x51ac36c1],cl
  42bdb4:	sub    BYTE PTR [ebp+ebp*2+0x6a00ee7d],0x95
  42bdbc:	imul   edi,esi,0x9adb58eb
  42bdc2:	(bad)  
  42bdc3:	ins    BYTE PTR es:[edi],dx
  42bdc4:	mov    esp,0xc43c10d4
  42bdc9:	xor    DWORD PTR [edi-0x67],edi
  42bdcc:	mov    DWORD PTR [edx],ecx
  42bdce:	dec    ebx
  42bdcf:	daa    
  42bdd0:	push   eax
  42bdd1:	sti    
  42bdd2:	cs (bad) 
  42bdd4:	cli    
  42bdd5:	js     0x42bdd7
  42bdd7:	fild   WORD PTR [edi-0x4d56288a]
  42bddd:	icebp  
  42bdde:	sub    DWORD PTR fs:[ecx],ebx
  42bde1:	pop    es
  42bde2:	add    bl,bh
  42bde4:	sub    ebx,esp
  42bde6:	lahf   
  42bde7:	lods   eax,DWORD PTR ds:[esi]
  42bde8:	jg     0x42bd70
  42bdea:	sbb    eax,0x949cdd4e
  42bdef:	mov    ebp,0xf2260915
  42bdf4:	pop    ebx
  42bdf5:	lds    esp,FWORD PTR [eax+0x49753ae6]
  42bdfb:	jae    0x42bda9
  42bdfd:	mov    DWORD PTR [ecx+0x3b9c6438],esp
  42be03:	ret    0x1de5
  42be06:	setbe  bh
  42be09:	jmp    0x7af3:0xfecfeb5e
  42be10:	stc    
  42be11:	mov    DWORD PTR [ebx-0x5e],0xde0aa4dd
  42be18:	mov    WORD PTR [ebp-0x20],?
  42be1b:	out    dx,eax
  42be1c:	sti    
  42be1d:	adc    edx,DWORD PTR [ecx]
  42be1f:	gs push edi
  42be21:	adc    ah,bh
  42be23:	jge    0x42bde9
  42be25:	loopne 0x42be40
  42be27:	scas   al,BYTE PTR es:[edi]
  42be28:	jmp    0x36c2e38a
  42be2d:	cwde   
  42be2e:	jp     0x42be20
  42be30:	fs pusha 
  42be32:	add    dh,BYTE PTR [esi+0x348b7480]
  42be38:	outs   dx,BYTE PTR ds:[esi]
  42be39:	inc    esi
  42be3a:	inc    edx
  42be3b:	jp     0x42be76
  42be3d:	and    al,0x92
  42be3f:	and    DWORD PTR [edi-0x7b],edx
  42be42:	repz popa 
  42be44:	sub    DWORD PTR [ebx],0x501b82eb
  42be4a:	sub    al,BYTE PTR [eax+edi*4]
  42be4d:	mov    ds:0xb7878f06,eax
  42be52:	test   eax,0xa83fafe6
  42be57:	ficomp DWORD PTR [edi+0x1c6cc6d0]
  42be5d:	imul   ecx,DWORD PTR [ebx],0xd82de144
  42be63:	jmp    0x42be2f
  42be65:	mov    cl,0xe8
  42be67:	popf   
  42be68:	or     DWORD PTR [edx],esi
  42be6a:	das    
  42be6b:	adc    BYTE PTR [ecx],0xd1
  42be6e:	pop    esp
  42be6f:	cmp    dh,BYTE PTR ds:[ebx]
  42be72:	lods   al,BYTE PTR ds:[esi]
  42be73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be74:	std    
  42be75:	das    
  42be76:	add    BYTE PTR [edx-0x7],0x46
  42be7a:	mov    ch,0x6b
  42be7c:	xchg   ecx,eax
  42be7d:	xchg   esi,eax
  42be7e:	add    al,0x5f
  42be80:	cmp    al,0xc1
  42be82:	inc    esp
  42be83:	xor    eax,0xf80613af
  42be88:	or     al,0xb4
  42be8a:	pop    edi
  42be8b:	cwde   
  42be8c:	lahf   
  42be8d:	in     eax,0xf6
  42be8f:	sbb    al,al
  42be91:	stos   DWORD PTR es:[edi],eax
  42be92:	out    0xac,eax
  42be94:	cwde   
  42be95:	sbb    al,0xcb
  42be97:	icebp  
  42be98:	ret    
  42be99:	ret    0x1d5d
  42be9c:	mov    DWORD PTR [eax],ecx
  42be9e:	mov    eax,ds:0x83f17b46
  42bea3:	push   esi
  42bea4:	sub    eax,0x9b03dc28
  42bea9:	neg    eax
  42beab:	int    0x65
  42bead:	arpl   WORD PTR [esi-0x42],di
  42beb0:	into   
  42beb1:	retf   0xb858
  42beb4:	xchg   esi,eax
  42beb5:	mov    ah,0x3c
  42beb7:	hlt    
  42beb8:	rcr    DWORD PTR [eax-0xc],cl
  42bebb:	mov    esi,eax
  42bebd:	fcom   DWORD PTR [edi+0x4d964dca]
  42bec3:	push   edi
  42bec4:	(bad)  
  42bec5:	shl    DWORD PTR [esi],cl
  42bec7:	(bad)  
  42bec8:	cli    
  42bec9:	sbb    al,0xb
  42becb:	imul   ebp,DWORD PTR [esi+0x4c],0xffffffec
  42becf:	vpmaxub xmm7,xmm2,xmm0
  42bed4:	jne    0x42becc
  42bed6:	sahf   
  42bed7:	xchg   ebp,eax
  42bed8:	and    BYTE PTR [eax],bl
  42beda:	xor    eax,0xf6e15fe8
  42bedf:	ins    BYTE PTR es:[edi],dx
  42bee0:	xor    edi,DWORD PTR [ebx-0x787678f5]
  42bee6:	push   ebx
  42bee7:	xor    esi,edx
  42bee9:	cdq    
  42beea:	dec    edi
  42beeb:	mov    eax,ds:0x6ca4a138
  42bef0:	cs stos BYTE PTR es:[edi],al
  42bef2:	sti    
  42bef3:	jg     0x42becd
  42bef5:	in     eax,0x38
  42bef7:	test   WORD PTR [edi+ebp*8],0xea4f
  42befd:	mov    WORD PTR [ebp-0x50bcc89e],?
  42bf03:	mov    edx,0x76424392
  42bf08:	imul   DWORD PTR [ebx+edx*4+0xb]
  42bf0c:	cmc    
  42bf0d:	shl    BYTE PTR ds:0x4e36e02b,1
  42bf13:	cmp    eax,0xb2d24038
  42bf18:	ret    
  42bf19:	jle    0x42bec3
  42bf1b:	dec    ecx
  42bf1c:	add    eax,0xd0f9a566
  42bf21:	push   eax
  42bf22:	or     DWORD PTR [esp+ebx*4+0x53],0x64
  42bf27:	sbb    eax,0x88e6635
  42bf2c:	mov    dh,0xa7
  42bf2e:	out    dx,al
  42bf2f:	xchg   ecx,eax
  42bf30:	jnp    0x42bf68
  42bf32:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42bf34:	lods   eax,DWORD PTR ds:[esi]
  42bf35:	les    esi,FWORD PTR [ecx+0x77]
  42bf38:	dec    ebp
  42bf39:	cdq    
  42bf3a:	ins    BYTE PTR es:[edi],dx
  42bf3b:	rol    DWORD PTR [ebx],0x4
  42bf3e:	add    BYTE PTR [ebp-0x57d30102],ah
  42bf44:	mov    bh,ch
  42bf46:	sub    bh,BYTE PTR [ecx]
  42bf48:	xchg   esp,eax
  42bf49:	retf   0x6b09
  42bf4c:	(bad)  
  42bf4d:	mov    bh,0x98
  42bf4f:	retf   
  42bf50:	cmp    bl,0xe4
  42bf53:	mov    dl,0x2
  42bf55:	jecxz  0x42bf03
  42bf57:	rcr    BYTE PTR [esi-0x209ec117],cl
  42bf5d:	xlat   BYTE PTR ds:[ebx]
  42bf5e:	fs cmp dh,bh
  42bf61:	and    al,BYTE PTR ds:0x43e09f08
  42bf67:	lock nop
  42bf69:	jmp    0x5221:0xdfce876a
  42bf70:	inc    esi
  42bf71:	inc    edx
  42bf72:	iret   
  42bf73:	push   eax
  42bf74:	inc    ebp
  42bf75:	lods   eax,DWORD PTR ds:[esi]
  42bf76:	cld    
  42bf77:	adc    ch,BYTE PTR [edx+0x76]
  42bf7a:	pop    es
  42bf7b:	adc    DWORD PTR [ebx],ebx
  42bf7d:	inc    edx
  42bf7e:	fwait
  42bf7f:	xchg   BYTE PTR [edx+edx*2-0x23678cbb],bh
  42bf86:	sbb    dh,BYTE PTR [edi+0x42]
  42bf89:	jp     0x42bfd0
  42bf8b:	fldenv [ecx-0x7ea5f969]
  42bf91:	jb     0x42bf9e
  42bf93:	push   eax
  42bf94:	jbe    0x42bf4b
  42bf96:	nop
  42bf97:	adc    BYTE PTR [ebx],al
  42bf99:	mov    ch,bl
  42bf9b:	icebp  
  42bf9c:	stc    
  42bf9d:	push   ebp
  42bf9e:	inc    ebp
  42bf9f:	cmp    al,0x14
  42bfa1:	or     BYTE PTR ds:[eax-0x562bc70a],0xa0
  42bfa9:	sub    al,bh
  42bfab:	out    0x24,al
  42bfad:	outs   dx,DWORD PTR ds:[esi]
  42bfae:	or     ah,BYTE PTR [esi+ebp*4+0x7a]
  42bfb2:	test   bh,bh
  42bfb4:	jns    0x42c00f
  42bfb6:	popf   
  42bfb7:	and    dl,al
  42bfb9:	dec    esp
  42bfba:	push   edi
  42bfbb:	arpl   WORD PTR [ebp-0x6d],di
  42bfbe:	outs   dx,DWORD PTR ds:[esi]
  42bfbf:	ds dec esi
  42bfc1:	xchg   esi,eax
  42bfc2:	outs   dx,DWORD PTR ds:[esi]
  42bfc3:	pop    eax
  42bfc4:	pusha  
  42bfc5:	or     edx,ebx
  42bfc7:	inc    edi
  42bfc8:	xor    ebx,eax
  42bfca:	jg     0x42bfee
  42bfcc:	mov    BYTE PTR [eax-0x2b6a6d9],cl
  42bfd2:	ja     0x42c01f
  42bfd4:	aaa    
  42bfd5:	sbb    dl,BYTE PTR [eax+eiz*1]
  42bfd8:	push   eax
  42bfd9:	ins    DWORD PTR es:[edi],dx
  42bfda:	(bad)  
  42bfdb:	adc    edx,DWORD PTR [edi+ebx*1]
  42bfde:	mov    al,ds:0x9f8f1167
  42bfe3:	and    ch,BYTE PTR [esi-0x57ee20ca]
  42bfe9:	mov    dl,0x60
  42bfeb:	test   eax,0x203bee8c
  42bff0:	add    eax,0xd12a3ec4
  42bff5:	(bad)  
  42bff6:	sub    ecx,DWORD PTR [edx]
  42bff8:	cmp    esp,DWORD PTR [ebx-0x6c]
  42bffb:	icebp  
  42bffc:	aaa    
  42bffd:	push   esp
  42bffe:	repz je 0x42bffa
  42c001:	fisttp WORD PTR [ebx+0x31233f1e]
  42c007:	popa   
  42c008:	xor    bh,0x4d
  42c00b:	or     DWORD PTR ds:0x9217111c,edx
  42c011:	pop    ebx
  42c012:	mov    esi,0x1eeb67dd
  42c017:	cli    
  42c018:	xor    eax,0x9a626aa5
  42c01d:	inc    ebp
  42c01e:	pop    ds
  42c01f:	mov    edx,0xec0dbaad
  42c024:	jmp    0xbfcecd97
  42c029:	out    dx,eax
  42c02a:	push   ebx
  42c02b:	popf   
  42c02c:	xchg   esi,eax
  42c02d:	js     0x42c008
  42c02f:	(bad)  
  42c030:	mov    ds:0xb9c83744,al
  42c035:	jnp    0x42c00e
  42c037:	aas    
  42c038:	mov    bh,0x7c
  42c03a:	stc    
  42c03b:	push   es
  42c03c:	retf   
  42c03d:	les    eax,FWORD PTR [edx-0x4bf26864]
  42c043:	popa   
  42c044:	jbe    0x42c0ba
  42c046:	mov    ds:0xc9d0dff,eax
  42c04b:	push   ecx
  42c04c:	xor    cl,BYTE PTR [eax]
  42c04e:	and    ah,BYTE PTR [ecx-0x3e]
  42c051:	pusha  
  42c052:	sub    eax,0xbf84995d
  42c057:	jne    0x42c0d6
  42c059:	repz fwait
  42c05b:	icebp  
  42c05c:	lds    ecx,FWORD PTR [ecx+0x3fa552a8]
  42c062:	out    0x20,eax
  42c064:	and    BYTE PTR [edi+0xa88d31b],0x27
  42c06b:	mov    dl,0xc5
  42c06d:	inc    edi
  42c06e:	cld    
  42c06f:	sahf   
  42c070:	bound  ebp,QWORD PTR ds:0xb09e4fc8
  42c077:	loopne 0x42c049
  42c079:	adc    DWORD PTR [ecx],ecx
  42c07b:	or     BYTE PTR [ebp+0x2d6b1b3a],0x65
  42c082:	cwde   
  42c083:	xor    al,BYTE PTR [ecx-0x11]
  42c086:	mov    ebx,DWORD PTR [ebx+0x3713fe70]
  42c08c:	xchg   ecx,eax
  42c08d:	rcl    DWORD PTR [esi+0x64],1
  42c090:	mov    bl,0x3c
  42c092:	out    0x99,al
  42c094:	or     DWORD PTR [edi-0x3c],edx
  42c097:	jge    0x42c05b
  42c099:	cmp    edx,DWORD PTR [esi+0x22]
  42c09c:	pop    eax
  42c09d:	cli    
  42c09e:	stc    
  42c09f:	xchg   ebp,eax
  42c0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0a1:	imul   esp,ebx,0xffffffb3
  42c0a4:	shl    DWORD PTR [ecx+0x1e],1
  42c0a7:	out    dx,eax
  42c0a8:	sub    DWORD PTR [edx+0x2c],0x8118c702
  42c0af:	jmp    0x9ca445af
  42c0b4:	lds    ecx,FWORD PTR [edx]
  42c0b6:	mov    ds:0xa291791d,eax
  42c0bb:	dec    edx
  42c0bc:	adc    ebp,0xffffff9d
  42c0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0c0:	jmp    0x35ee8a4f
  42c0c5:	jl     0x42c0db
  42c0c7:	mov    ebx,0x164c1166
  42c0cc:	retf   0xc2bb
  42c0cf:	sti    
  42c0d0:	(bad)
  42c0d3:	mov    ch,0xd
  42c0d5:	jno    0x42c0dc
  42c0d7:	in     eax,0x1a
  42c0d9:	cli    
  42c0da:	lds    esp,FWORD PTR [ebp-0x70]
  42c0dd:	and    BYTE PTR [eax],dh
  42c0df:	pop    es
  42c0e0:	bound  ebp,QWORD PTR [esi+ecx*1+0x6b]
  42c0e4:	push   eax
  42c0e5:	mov    ch,0x82
  42c0e7:	pop    ds
  42c0e8:	cdq    
  42c0e9:	icebp  
  42c0ea:	out    dx,eax
  42c0eb:	es inc esp
  42c0ed:	mov    eax,ds:0x357078b8
  42c0f2:	mov    edi,0x6766a877
  42c0f7:	fmul   QWORD PTR [esi]
  42c0f9:	xlat   BYTE PTR ds:[ebx]
  42c0fa:	leave  
  42c0fb:	mov    ecx,0x1679e3dc
  42c100:	cmp    eax,0x5e2522f
  42c105:	add    DWORD PTR [ebx],0x35
  42c108:	xlat   BYTE PTR ds:[ebx]
  42c109:	cmp    BYTE PTR [esi-0x39c9222b],ah
  42c10f:	mov    ebp,0xc743c2bd
  42c114:	jo     0x42c0b8
  42c116:	xchg   ebp,eax
  42c117:	lods   eax,DWORD PTR ds:[esi]
  42c118:	call   0xc7c943da
  42c11d:	and    al,BYTE PTR [ebx+0x59c7e29f]
  42c123:	sti    
  42c124:	mov    dh,0xb9
  42c126:	xchg   ebx,eax
  42c127:	in     eax,0xb6
  42c129:	call   0xd1e3101
  42c12e:	test   al,0xbf
  42c130:	leave  
  42c131:	xchg   edi,eax
  42c132:	mov    al,ds:0x442592d1
  42c137:	jo     0x42c0ee
  42c139:	sbb    BYTE PTR [ecx-0x34df74a0],dh
  42c13f:	push   ebp
  42c140:	sahf   
  42c141:	aas    
  42c142:	mov    eax,0x4021cd54
  42c147:	jbe    0x42c0f3
  42c149:	and    eax,0x836df856
  42c14e:	cmp    BYTE PTR [esi-0x3e],dl
  42c151:	push   ds
  42c152:	jp     0x42c15d
  42c154:	mov    ch,0x99
  42c156:	jo     0x42c0e0
  42c158:	mov    cl,0x4e
  42c15a:	add    DWORD PTR [ebx+edx*8+0x19],ecx
  42c15e:	sub    eax,0xc83ccdd4
  42c163:	add    al,0x3b
  42c165:	xchg   edx,eax
  42c166:	add    ebp,DWORD PTR [eax]
  42c168:	outs   dx,BYTE PTR ds:[esi]
  42c169:	imul   esi,DWORD PTR [esi-0x77],0x4b3cce57
  42c170:	jb     0x42c1eb
  42c172:	mov    ds:0x606cdaa,eax
  42c177:	push   ebp
  42c178:	(bad)  
  42c179:	outs   dx,DWORD PTR ds:[esi]
  42c17a:	xchg   BYTE PTR [edi-0x16b59f81],al
  42c180:	sub    edx,DWORD PTR [esi+0x36]
  42c183:	adc    edi,edx
  42c185:	mov    esp,edx
  42c187:	stos   BYTE PTR es:[edi],al
  42c188:	call   0x24e08863
  42c18d:	sub    edx,DWORD PTR [esi+0xf]
  42c190:	outs   dx,BYTE PTR ds:[esi]
  42c191:	lods   eax,DWORD PTR ds:[esi]
  42c192:	dec    edx
  42c193:	mov    ebp,0x6a2f8107
  42c198:	call   0xbe594bd5
  42c19d:	inc    edx
  42c19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c19f:	xchg   ebx,eax
  42c1a0:	pop    eax
  42c1a1:	lea    edi,[ebx-0x9857420]
  42c1a7:	and    dh,al
  42c1a9:	je     0x42c197
  42c1ab:	mov    edx,0x8c1b4e9b
  42c1b0:	xor    DWORD PTR [edi-0xe],ebx
  42c1b3:	push   ss
  42c1b4:	inc    ebp
  42c1b5:	mov    esi,0x1f2ad156
  42c1ba:	xchg   eax,esi
  42c1bc:	fwait
  42c1bd:	ins    DWORD PTR es:[edi],dx
  42c1be:	cmp    BYTE PTR [eax+eiz*8-0x632e207a],bh
  42c1c5:	fist   WORD PTR [ebp+0x1f]
  42c1c8:	mov    edx,0x6031c64b
  42c1cd:	push   0x5c
  42c1cf:	dec    esp
  42c1d0:	pop    ecx
  42c1d1:	mov    BYTE PTR [eax-0x19],al
  42c1d4:	mov    dh,0x5c
  42c1d6:	mov    cl,BYTE PTR ds:0x5d412cd9
  42c1dc:	test   eax,0xb9d86fd6
  42c1e1:	out    0x3e,eax
  42c1e3:	mov    esi,eax
  42c1e5:	sbb    BYTE PTR [edx],ah
  42c1e7:	fwait
  42c1e8:	call   0x8b0d:0x1f3300be
  42c1ef:	mov    cs,WORD PTR [ebx+eiz*2+0x39]
  42c1f3:	and    BYTE PTR [ebx+edx*4+0x1a433463],ah
  42c1fa:	mov    dl,0xbb
  42c1fc:	jb     0x42c18f
  42c1fe:	or     bh,BYTE PTR [ebx+0x4384afa6]
  42c204:	xchg   esi,eax
  42c205:	ins    BYTE PTR es:[edi],dx
  42c206:	push   ebx
  42c207:	out    0xd1,al
  42c209:	(bad)
  42c20d:	xor    ecx,DWORD PTR [edi+0x21]
  42c210:	mov    edx,0xb9fef0a6
  42c215:	inc    esp
  42c216:	jmp    0x42c296
  42c218:	sbb    eax,0x7b8abc7d
  42c21d:	scas   eax,DWORD PTR es:[edi]
  42c21e:	cmp    cl,BYTE PTR [edx-0x5819d94f]
  42c224:	mov    ebx,0x588d9ce8
  42c229:	inc    ebx
  42c22a:	inc    ebp
  42c22b:	test   al,dl
  42c22d:	sbb    eax,0xe164a014
  42c232:	stc    
  42c233:	leave  
  42c234:	or     edi,ecx
  42c236:	inc    edi
  42c237:	mov    dh,ah
  42c239:	mov    ah,0x4e
  42c23b:	dec    ecx
  42c23c:	cli    
  42c23d:	dec    eax
  42c23e:	in     eax,dx
  42c23f:	push   0x46081774
  42c244:	shl    ah,1
  42c246:	jb     0x42c22e
  42c248:	add    eax,0x4fa7c9e3
  42c24d:	leave  
  42c24e:	mov    edi,DWORD PTR [ecx+eax*1-0x1b]
  42c252:	add    eax,0xb0847fe7
  42c257:	xchg   ebx,eax
  42c258:	mov    bh,0x94
  42c25a:	mov    ebp,0x4607cff8
  42c25f:	adc    al,BYTE PTR [ebx]
  42c261:	in     eax,dx
  42c262:	push   esp
  42c263:	ficomp DWORD PTR [edi+0x221f8516]
  42c269:	push   0x44c0a7f3
  42c26e:	pushf  
  42c26f:	pop    ecx
  42c270:	xor    bh,BYTE PTR ds:0x430de054
  42c276:	adc    BYTE PTR [ecx],dh
  42c278:	imul   ebp,DWORD PTR [ebp+0x3f64c572],0x7f98b2e5
  42c282:	xchg   edx,eax
  42c283:	data16 sahf 
  42c285:	ror    BYTE PTR [esi-0x3e3d92cf],cl
  42c28b:	hlt    
  42c28c:	push   ebx
  42c28d:	pop    eax
  42c28e:	adc    BYTE PTR [esi+0x77],0x83
  42c292:	sar    BYTE PTR [ecx-0x3adb6a8],1
  42c298:	jle    0x42c222
  42c29a:	fild   WORD PTR [esi+0x2ca5cff2]
  42c2a0:	(bad)  
  42c2a2:	pop    ss
  42c2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2a4:	jmp    0xe9a8:0xcb19fc2e
  42c2ab:	dec    ebx
  42c2ac:	push   0x6a
  42c2ae:	out    dx,eax
  42c2af:	pushf  
  42c2b0:	out    0x7c,eax
  42c2b2:	dec    ecx
  42c2b3:	cmp    BYTE PTR [ecx-0x5d],al
  42c2b6:	jmp    0x42c29a
  42c2b8:	hlt    
  42c2b9:	ja     0x42c2f8
  42c2bb:	add    DWORD PTR [eax+0x83298bd],edi
  42c2c1:	ins    BYTE PTR es:[edi],dx
  42c2c2:	or     DWORD PTR [ebp-0x7c],esp
  42c2c5:	addr16 cmp eax,0x9837472f
  42c2cb:	xor    BYTE PTR [eax+0x12],dh
  42c2ce:	lods   al,BYTE PTR ds:[esi]
  42c2cf:	pop    edi
  42c2d0:	dec    esp
  42c2d1:	fucom  st(0)
  42c2d3:	mov    al,ds:0xea3d7bd8
  42c2d8:	sbb    BYTE PTR [eax],0x27
  42c2db:	loopne 0x42c35a
  42c2dd:	and    al,0x44
  42c2df:	sub    al,0xa1
  42c2e1:	test   BYTE PTR [ebx+0x4ee5c81b],0xbd
  42c2e8:	loope  0x42c353
  42c2ea:	jmp    0xf0a3:0x60e09f7f
  42c2f1:	push   edi
  42c2f2:	std    
  42c2f3:	dec    ebx
  42c2f4:	pushf  
  42c2f5:	dec    BYTE PTR [esi+0x480ab950]
  42c2fb:	xchg   ebx,esp
  42c2fd:	cmc    
  42c2fe:	daa    
  42c2ff:	cmp    eax,0x55a885ca
  42c304:	cld    
  42c305:	sbb    al,dh
  42c307:	out    dx,al
  42c308:	jle    0x42c2fa
  42c30a:	inc    eax
  42c30b:	pop    edx
  42c30c:	add    DWORD PTR [eax-0x43],esp
  42c30f:	jo     0x42c2c0
  42c311:	push   eax
  42c312:	push   esp
  42c313:	ds xchg ebx,eax
  42c315:	sub    eax,0x195f711f
  42c31a:	mov    esp,?
  42c31c:	jge    0x42c33e
  42c31e:	mov    DWORD PTR [edx],ebp
  42c320:	(bad)  
  42c321:	cwde   
  42c322:	in     eax,dx
  42c323:	lahf   
  42c324:	lods   al,BYTE PTR ds:[esi]
  42c325:	sbb    al,0x69
  42c327:	in     eax,0xf4
  42c329:	adc    ch,BYTE PTR [edi-0x2d6bcfc6]
  42c32f:	loopne 0x42c3a4
  42c331:	scas   eax,DWORD PTR es:[edi]
  42c332:	sub    dh,dl
  42c334:	cmp    ebp,DWORD PTR [edi-0x70d53fce]
  42c33a:	cmp    eax,0x9445d77a
  42c33f:	fisub  DWORD PTR [esi-0x101347e9]
  42c345:	sbb    dl,BYTE PTR [edx]
  42c347:	dec    edx
  42c348:	call   0x11c3:0xd72388d
  42c34f:	repz jns 0x42c341
  42c352:	(bad)  
  42c353:	rcr    BYTE PTR [edx+0x4104ebef],cl
  42c359:	mov    cr4,eax
  42c35c:	adc    al,0x44
  42c35e:	sub    DWORD PTR ds:0x72bb3a2d,esi
  42c364:	(bad)  
  42c365:	cmp    bh,dl
  42c367:	lods   al,BYTE PTR ds:[esi]
  42c368:	xchg   bx,ax
  42c36a:	cli    
  42c36b:	cmp    edi,DWORD PTR [ebp+0x30]
  42c36e:	and    al,BYTE PTR [ebx+0x7d]
  42c371:	arpl   bp,cx
  42c373:	scas   al,BYTE PTR es:[edi]
  42c374:	out    0x22,eax
  42c376:	out    dx,eax
  42c377:	test   al,0x48
  42c37a:	adc    DWORD PTR [ecx+0x6a],eax
  42c37d:	ds mov dh,0x4e
  42c380:	dec    eax
  42c381:	sbb    ecx,DWORD PTR [edi+0x5f]
  42c384:	push   cs
  42c385:	imul   ebx,esi,0xffffff87
  42c388:	pop    ds
  42c389:	xor    eax,0x1983aeef
  42c38e:	sub    DWORD PTR [ebx+eiz*4],esi
  42c391:	daa    
  42c392:	or     esi,DWORD PTR [ebp+ebp*4+0x25]
  42c396:	xlat   BYTE PTR ds:[ebx]
  42c397:	ins    DWORD PTR es:[edi],dx
  42c398:	mov    BYTE PTR [ecx-0x638fd63c],bl
  42c39e:	mov    DWORD PTR ds:0xf2167bbc,0x453a72e0
  42c3a8:	sub    dh,BYTE PTR [eax-0x65]
  42c3ab:	jg     0x42c355
  42c3ad:	js     0x42c3e8
  42c3af:	mov    cl,0x81
  42c3b1:	dec    edi
  42c3b2:	inc    edi
  42c3b3:	out    0x24,eax
  42c3b5:	in     al,dx
  42c3b6:	adc    DWORD PTR [edx+0x57eb794a],0x12cec6a9
  42c3c0:	ins    DWORD PTR es:[edi],dx
  42c3c1:	ja     0x42c365
  42c3c3:	push   es
  42c3c4:	call   0x46a1:0x908d81b5
  42c3cb:	or     eax,0xd08b2e29
  42c3d0:	mov    ch,0x5b
  42c3d2:	jmp    0xca68f1fc
  42c3d7:	je     0x42c3a6
  42c3d9:	jmp    0x2b4e80d8
  42c3de:	aas    
  42c3df:	ret    0xc078
  42c3e2:	and    bl,BYTE PTR [edx-0x2fbed61d]
  42c3e8:	push   0xffffff8b
  42c3ea:	aas    
  42c3eb:	fld    st(1)
  42c3ed:	ror    bh,0xa7
  42c3f0:	or     eax,0x518df5d6
  42c3f5:	out    0x78,al
  42c3f7:	pop    esi
  42c3f8:	jnp    0x42c3e7
  42c3fa:	neg    BYTE PTR [ecx+ecx*1]
  42c3fd:	cmp    DWORD PTR [ecx+0x926608e],edi
  42c403:	xchg   ebx,eax
  42c404:	or     BYTE PTR [edi],ah
  42c406:	addr16 jg 0x42c464
  42c409:	and    DWORD PTR [ebx],esp
  42c40b:	pop    ss
  42c40c:	pcmpgtw mm6,mm4
  42c40f:	push   ss
  42c410:	imul   edi,DWORD PTR [eax-0x2a],0x4422bb42
  42c417:	lds    edi,FWORD PTR [edi+0x1177cb5e]
  42c41d:	dec    esi
  42c41e:	and    eax,0xa6bc04ea
  42c423:	out    dx,al
  42c424:	ins    BYTE PTR es:[edi],dx
  42c425:	cmp    al,0x3d
  42c427:	popa   
  42c428:	adc    al,BYTE PTR [edi-0x6f]
  42c42b:	xor    BYTE PTR [ebp+0x3f],dh
  42c42e:	jmp    0x42c3e2
  42c430:	in     al,0x82
  42c432:	adc    esi,esp
  42c434:	mov    DWORD PTR [eax+0x3e],edi
  42c437:	and    eax,0x50c63529
  42c43c:	add    bl,al
  42c43e:	jne    0x42c405
  42c440:	loopne 0x42c41f
  42c442:	jg     0x42c46b
  42c444:	push   ss
  42c445:	cli    
  42c446:	retf   0xf8b8
  42c449:	xchg   esp,eax
  42c44a:	sti    
  42c44b:	xchg   ebx,eax
  42c44c:	inc    esp
  42c44d:	int    0xf6
  42c44f:	add    eax,0x1f20e82a
  42c454:	push   ecx
  42c455:	test   eax,0xbeb073aa
  42c45a:	adc    BYTE PTR [esi+0x75],al
  42c45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c45e:	push   ds
  42c45f:	add    eax,0x7c016995
  42c464:	or     al,0xc9
  42c466:	aad    0x3e
  42c468:	dec    esp
  42c469:	jle    0x42c439
  42c46b:	hlt    
  42c46c:	daa    
  42c46d:	adc    eax,0xe2e5f18e
  42c472:	popa   
  42c473:	cmp    eax,0x906e0be
  42c478:	mov    eax,0x5a9ac4b1
  42c47d:	pushf  
  42c47e:	mov    al,bh
  42c480:	sahf   
  42c481:	cld    
  42c482:	in     al,0x54
  42c484:	push   ebp
  42c485:	fiadd  DWORD PTR [edi+0x69586539]
  42c48b:	mov    ds:0xd91fe0a7,eax
  42c490:	addr16 jge 0x42c449
  42c493:	push   ebx
  42c494:	mov    ecx,ss
  42c496:	dec    esi
  42c497:	mov    eax,ds:0xde7e0e3b
  42c49c:	mov    al,ds:0x898d1f11
  42c4a1:	push   edi
  42c4a2:	mov    al,0x90
  42c4a4:	dec    ebp
  42c4a5:	add    eax,0x8f28ec25
  42c4aa:	sub    esp,DWORD PTR [esi+edx*2-0x2b066d53]
  42c4b1:	and    eax,0x99e23bc4
  42c4b6:	fld    st(6)
  42c4b8:	xchg   ebp,eax
  42c4b9:	dec    ecx
  42c4ba:	sti    
  42c4bb:	aam    0x53
  42c4bd:	mov    DWORD PTR [esi-0x28],0xe0cf512c
  42c4c4:	push   ds
  42c4c5:	adc    DWORD PTR [edx+0x7e5ac284],esp
  42c4cb:	fst    QWORD PTR [ebx]
  42c4cd:	sbb    eax,0x236d4f93
  42c4d2:	xor    BYTE PTR [ecx+0x13],ah
  42c4d5:	jo     0x42c4d7
  42c4d7:	mov    esp,0xd2f6a818
  42c4dc:	mov    al,ds:0x98ce70b4
  42c4e1:	pop    es
  42c4e2:	rcr    DWORD PTR [edi+0x1e3ff6b2],cl
  42c4e8:	(bad)  
  42c4e9:	scas   eax,DWORD PTR es:[edi]
  42c4ea:	add    eax,0x7af4695
  42c4ef:	(bad)  
  42c4f0:	adc    ah,BYTE PTR [eax]
  42c4f2:	ret    0x9497
  42c4f5:	xchg   esp,eax
  42c4f6:	ret    
  42c4f7:	stc    
  42c4f8:	lock push 0x36
  42c4fb:	lahf   
  42c4fc:	mov    BYTE PTR [ecx],cl
  42c4fe:	cmc    
  42c4ff:	jnp    0x42c4ba
  42c501:	add    dh,ah
  42c503:	adc    BYTE PTR [ecx+edi*2-0x47],ah
  42c507:	push   cs
  42c508:	add    al,0x78
  42c50a:	jle    0x42c4c1
  42c50c:	cli    
  42c50d:	push   esp
  42c50e:	outs   dx,BYTE PTR ds:[esi]
  42c50f:	neg    BYTE PTR [ecx+ebx*4-0x1e983d4c]
  42c516:	mov    ch,BYTE PTR [edi+eiz*1+0x43]
  42c51a:	sbb    ch,BYTE PTR [esi+ebx*2]
  42c51d:	out    0x3e,al
  42c51f:	imul   ecx,ebx,0xf6fcff35
  42c525:	or     edx,ebx
  42c527:	shr    BYTE PTR [ecx+edx*1],cl
  42c52a:	sbb    eax,0xd51473d8
  42c52f:	ja     0x42c567
  42c531:	sti    
  42c532:	(bad)  
  42c533:	loop   0x42c533
  42c535:	xor    BYTE PTR [eax],ch
  42c537:	call   0xfea:0x5493ce01
  42c53e:	enter  0xfcfe,0x67
  42c542:	aad    0xb6
  42c544:	fdivr  DWORD PTR ds:[edi-0x7494d728]
  42c54b:	lods   al,BYTE PTR ds:[esi]
  42c54c:	xchg   esp,eax
  42c54d:	adc    edi,DWORD PTR [eax+ebx*4-0x7e81f9dc]
  42c554:	mov    esp,0x33451f3d
  42c559:	inc    ebp
  42c55a:	fsubr  QWORD PTR [edx+0x4a37702]
  42c560:	mov    ah,0x11
  42c562:	shl    ch,0x36
  42c565:	push   esp
  42c566:	adc    ecx,DWORD PTR [edx-0x16]
  42c569:	mov    ds:0x16a48e7e,al
  42c56e:	in     al,0x66
  42c570:	add    BYTE PTR [ebp+eax*1-0x3351b25d],dl
  42c577:	sub    al,0xaf
  42c579:	je     0x42c5e1
  42c57b:	inc    edx
  42c57c:	call   FWORD PTR [eax]
  42c57e:	repz xor edx,0x2a199360
  42c585:	mov    cl,0x42
  42c587:	sbb    edi,ebx
  42c589:	neg    BYTE PTR ss:[edx]
  42c58c:	jle    0x42c609
  42c58e:	mov    ds,WORD PTR [edx+0x64]
  42c591:	mov    ebx,0xf645a17
  42c596:	outs   dx,BYTE PTR ds:[esi]
  42c597:	cmp    BYTE PTR ds:0x4c84b087,dh
  42c59d:	adc    al,0x3e
  42c59f:	pop    ebx
  42c5a0:	xlat   BYTE PTR ds:[ebx]
  42c5a1:	push   ds
  42c5a2:	aas    
  42c5a3:	neg    BYTE PTR [ecx-0x60]
  42c5a6:	cmp    BYTE PTR [ebp+0x4b2937ae],0x8f
  42c5ad:	push   eax
  42c5ae:	out    0x46,al
  42c5b0:	push   ss
  42c5b1:	xchg   edx,eax
  42c5b2:	cmp    bl,BYTE PTR [ebx+0x34]
  42c5b5:	xlat   BYTE PTR ds:[ebx]
  42c5b6:	shr    DWORD PTR [ebx],cl
  42c5b8:	cs ss sbb eax,0x5cb4349d
  42c5bf:	mov    edi,DWORD PTR [edx-0x2f]
  42c5c2:	std    
  42c5c3:	imul   eax,DWORD PTR [ecx-0x2f],0x80e5649e
  42c5ca:	xchg   BYTE PTR [ebp+0x35],dh
  42c5cd:	xchg   edi,eax
  42c5ce:	jb     0x42c5f5
  42c5d0:	fsubr  QWORD PTR [ebx]
  42c5d2:	or     cl,BYTE PTR [ecx+0x3d]
  42c5d5:	lods   al,BYTE PTR ds:[esi]
  42c5d6:	jb     0x42c5ce
  42c5d8:	add    eax,0x6a63c28b
  42c5dd:	pop    ebx
  42c5de:	aad    0x9f
  42c5e0:	adc    esp,eax
  42c5e2:	mov    edi,0x78f4251d
  42c5e7:	jecxz  0x42c65d
  42c5e9:	pop    esp
  42c5ea:	or     BYTE PTR [ebx],bl
  42c5ec:	punpckhbw mm4,QWORD PTR [esp+edx*8-0x6c]
  42c5f1:	pop    eax
  42c5f2:	jb     0x42c598
  42c5f4:	(bad)  
  42c5f5:	sbb    BYTE PTR [esi+eax*1-0x14e7d6bc],bl
  42c5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5fd:	inc    edi
  42c5fe:	into   
  42c5ff:	ins    DWORD PTR es:[edi],dx
  42c600:	dec    ebx
  42c601:	sbb    bh,BYTE PTR [edi+0x202be98b]
  42c607:	pop    es
  42c608:	into   
  42c609:	pop    ds
  42c60a:	pusha  
  42c60b:	test   DWORD PTR [eax],0x782044c
  42c611:	or     ecx,edi
  42c613:	xchg   ecx,eax
  42c614:	mov    ah,0x52
  42c616:	push   ss
  42c617:	inc    edi
  42c618:	aas    
  42c619:	ja     0x42c66f
  42c61b:	neg    BYTE PTR [edx]
  42c61d:	stos   DWORD PTR es:[edi],eax
  42c61e:	lods   eax,DWORD PTR ds:[esi]
  42c61f:	inc    esp
  42c620:	adc    ecx,DWORD PTR [ebx+eax*4]
  42c623:	mov    ebx,esp
  42c625:	xor    eax,0x2b5e3f6a
  42c62a:	dec    ebp
  42c62b:	fwait
  42c62c:	xchg   edi,esi
  42c62e:	js     0x42c5e1
  42c630:	je     0x42c69f
  42c632:	mov    esi,DWORD PTR [ebx]
  42c634:	loop   0x42c6a4
  42c636:	fs mov dh,0x7d
  42c639:	xchg   ecx,eax
  42c63a:	and    eax,0x4cb0a86f
  42c63f:	cmp    eax,0x678407cf
  42c644:	mov    ecx,DWORD PTR [eax+0x9]
  42c647:	fbld   TBYTE PTR [edx-0xe]
  42c64a:	scas   al,BYTE PTR es:[edi]
  42c64b:	icebp  
  42c64c:	push   esi
  42c64d:	repnz mov edx,0x92ccce93
  42c653:	lods   eax,DWORD PTR ds:[esi]
  42c654:	test   BYTE PTR [ebx+0x24],al
  42c657:	jne    0x42c61f
  42c659:	push   ebx
  42c65a:	shl    DWORD PTR [esi-0x16],1
  42c65d:	mov    bl,0x2b
  42c65f:	adc    dl,BYTE PTR [ecx-0x20eea711]
  42c665:	test   DWORD PTR [ecx-0x31f61c0d],ecx
  42c66b:	jo     0x42c6bd
  42c66d:	test   eax,0xfb2beb9c
  42c672:	jg     0x42c674
  42c674:	les    ebx,FWORD PTR [eax]
  42c676:	jge    0x42c6c0
  42c678:	inc    edi
  42c679:	jb     0x42c6e3
  42c67b:	repz out dx,eax
  42c67d:	test   BYTE PTR [eax],bh
  42c67f:	adc    ah,dl
  42c681:	jno    0x42c649
  42c683:	pop    ebx
  42c684:	mov    dh,0x13
  42c686:	xor    dh,BYTE PTR [ebx]
  42c688:	out    dx,al
  42c689:	adc    dl,BYTE PTR [ecx+0x76]
  42c68c:	sbb    edx,DWORD PTR [ecx-0x37]
  42c68f:	lods   eax,DWORD PTR ds:[esi]
  42c690:	xchg   ebx,eax
  42c691:	jle    0x42c62c
  42c693:	rcr    DWORD PTR [bx+si-0x30],cl
  42c697:	mov    bl,0x55
  42c699:	call   0xdbd8b091
  42c69e:	jbe    0x42c67c
  42c6a0:	and    edi,ecx
  42c6a2:	ds pop edi
  42c6a4:	cmp    eax,0x32031c81
  42c6a9:	jno    0x42c6cc
  42c6ab:	ja     0x42c6cd
  42c6ad:	xchg   BYTE PTR [edi-0x69],cl
  42c6b0:	lods   eax,DWORD PTR ds:[esi]
  42c6b1:	jg     0x42c635
  42c6b3:	xor    cl,BYTE PTR [edi-0x5602c8ae]
  42c6b9:	or     eax,0x208ba278
  42c6be:	push   0x8ef632e5
  42c6c3:	ins    DWORD PTR es:[edi],dx
  42c6c4:	(bad)  
  42c6c5:	daa    
  42c6c6:	add    al,0xb2
  42c6c8:	pinsrw mm2,WORD PTR [esi+0x5],0x9d
  42c6cd:	sbb    bl,BYTE PTR [ebp-0x73fc383d]
  42c6d3:	pop    edx
  42c6d4:	fxtract 
  42c6d6:	in     eax,0x11
  42c6d8:	(bad)  
  42c6da:	mov    al,0x1f
  42c6dc:	sahf   
  42c6dd:	(bad)  
  42c6de:	dec    eax
  42c6df:	sti    
  42c6e0:	shl    BYTE PTR [ecx],0xc9
  42c6e3:	shl    ah,0x3c
  42c6e6:	add    edi,DWORD PTR [edx+eiz*1+0xef10126]
  42c6ed:	retf   
  42c6ee:	xor    eax,DWORD PTR [edx]
  42c6f0:	cmp    al,0xb4
  42c6f2:	pop    eax
  42c6f3:	and    BYTE PTR [edx+0x74134afc],al
  42c6f9:	cmp    eax,DWORD PTR [edx+0x28]
  42c6fc:	xchg   edi,eax
  42c6fd:	sub    al,BYTE PTR ds:0xd8f41cb3
  42c703:	imul   eax,DWORD PTR [edi-0x3d],0xffffffc3
  42c707:	iret   
  42c708:	out    dx,eax
  42c709:	xchg   BYTE PTR [ebx-0x45],dl
  42c70c:	pop    ds
  42c70d:	or     al,0xb0
  42c70f:	adc    DWORD PTR [edi],0x5a
  42c712:	(bad)  
  42c713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c714:	icebp  
  42c715:	jl     0x42c750
  42c717:	iret   
  42c718:	dec    esi
  42c719:	test   eax,0x1b1de3b5
  42c71e:	clc    
  42c71f:	pop    ebx
  42c720:	test   al,0x63
  42c722:	lods   al,BYTE PTR ds:[esi]
  42c723:	(bad)
  42c726:	xor    BYTE PTR [esi-0x55],bl
  42c729:	push   ebp
  42c72a:	retf   0x41db
  42c72d:	aas    
  42c72e:	stos   DWORD PTR es:[edi],eax
  42c72f:	aas    
  42c730:	dec    eax
  42c731:	data16 sti 
  42c733:	jecxz  0x42c75d
  42c735:	add    DWORD PTR [eax+0x34b818a5],esp
  42c73b:	mov    bl,0x68
  42c73d:	jg     0x42c740
  42c73f:	enter  0xd3a1,0xa
  42c743:	out    dx,eax
  42c744:	loopne 0x42c786
  42c746:	pusha  
  42c747:	bound  ecx,QWORD PTR [ebx]
  42c749:	sub    al,0xfc
  42c74b:	cld    
  42c74c:	cmp    BYTE PTR [ecx-0x63c230b0],bl
  42c752:	mov    bl,0x2a
  42c754:	pop    ebx
  42c755:	scas   eax,DWORD PTR es:[edi]
  42c756:	mov    bh,0x68
  42c758:	jmp    0xfdb466a7
  42c75d:	outs   dx,DWORD PTR ds:[esi]
  42c75e:	add    DWORD PTR [edi-0x28],0xffffffd7
  42c762:	fwait
  42c763:	inc    esi
  42c764:	sub    ebx,edi
  42c766:	cwde   
  42c767:	and    BYTE PTR [ecx-0x5a],0x69
  42c76b:	jl     0x42c79b
  42c76d:	loope  0x42c795
  42c76f:	push   es
  42c770:	mov    esi,0x175be19d
  42c775:	mov    bh,BYTE PTR [ebx]
  42c777:	jl     0x42c7b3
  42c779:	sub    eax,0x884ef528
  42c77e:	mov    eax,0x47fad708
  42c783:	popf   
  42c784:	xor    DWORD PTR [ebx-0x5505fa49],ebx
  42c78a:	or     BYTE PTR [ecx+0x1e473445],0x62
  42c791:	sahf   
  42c792:	pop    edx
  42c793:	call   0x4f9ff440
  42c798:	xchg   edi,eax
  42c799:	addr16 mov edi,0x3febc11
  42c79f:	outs   dx,DWORD PTR ds:[esi]
  42c7a0:	xor    cl,bl
  42c7a2:	dec    esi
  42c7a3:	pop    esp
  42c7a4:	test   BYTE PTR [esi],cl
  42c7a6:	sar    DWORD PTR [ebx+edi*4+0x391f949e],1
  42c7ad:	inc    esp
  42c7ae:	dec    esi
  42c7af:	jbe    0x42c746
  42c7b1:	out    0xcc,eax
  42c7b3:	jle    0x42c825
  42c7b5:	in     al,dx
  42c7b6:	cdq    
  42c7b7:	mov    al,0xdd
  42c7b9:	(bad)  
  42c7bb:	mov    dl,0x10
  42c7bd:	fcomi  st,st(1)
  42c7bf:	stos   BYTE PTR es:[edi],al
  42c7c0:	dec    ebp
  42c7c1:	cmp    eax,0x486dc73a
  42c7c6:	test   DWORD PTR [ecx],ebp
  42c7c8:	sub    dh,BYTE PTR [ebp+0x424b4cf]
  42c7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c7cf:	add    DWORD PTR [edx-0x1],esp
  42c7d2:	jg     0x42c846
  42c7d4:	xchg   edx,eax
  42c7d5:	jl     0x42c759
  42c7d7:	xchg   DWORD PTR [eax-0x6c9d8df5],ebx
  42c7dd:	cli    
  42c7de:	xor    DWORD PTR [ebx-0x55],ebx
  42c7e1:	scas   eax,DWORD PTR es:[edi]
  42c7e2:	cmc    
  42c7e3:	xchg   ebx,eax
  42c7e4:	neg    ah
  42c7e6:	test   eax,0x771d47c6
  42c7eb:	pushf  
  42c7ec:	sub    dl,BYTE PTR [esi+eax*8+0xf076d04]
  42c7f3:	(bad)  
  42c7f4:	jbe    0x42c7b4
  42c7f6:	aas    
  42c7f7:	or     dh,bl
  42c7f9:	rol    BYTE PTR [ecx+0x45],1
  42c7fc:	cld    
  42c7fd:	repz pop esp
  42c7ff:	add    edi,ebp
  42c801:	imul   esp,DWORD PTR [eax-0x624d9340],0xb17fdb71
  42c80b:	cs test eax,0x31d98dfb
  42c811:	sahf   
  42c812:	retf   0xe6cc
  42c815:	loopne 0x42c835
  42c817:	mov    eax,ds:0xffa72c64
  42c81c:	mov    ebp,0x5a2469ca
  42c821:	xchg   BYTE PTR [edx+eiz*2+0x6db8282d],ah
  42c828:	pop    ecx
  42c829:	icebp  
  42c82a:	dec    esp
  42c82b:	adc    DWORD PTR [ebp+ebp*8+0x12],esi
  42c82f:	rcr    DWORD PTR [edi+0x61],1
  42c832:	add    ebp,DWORD PTR [edi-0x44]
  42c835:	dec    ebp
  42c836:	mov    ecx,0x31258dd0
  42c83b:	pop    ds
  42c83c:	add    al,0x9d
  42c83e:	sar    ecx,1
  42c840:	mov    dl,0xe6
  42c842:	(bad)  
  42c843:	out    dx,eax
  42c844:	jmp    0x42c812
  42c846:	sub    DWORD PTR [edi+0x7a],esp
  42c849:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c84b:	xchg   esp,ebp
  42c84d:	inc    esi
  42c84e:	xchg   BYTE PTR ds:0x9af6d52f,cl
  42c854:	xchg   edx,eax
  42c855:	mov    ecx,DWORD PTR [esi+0xf275ed0]
  42c85b:	mov    bh,0x4e
  42c85d:	sahf   
  42c85e:	sbb    al,0x9f
  42c861:	add    bh,0x98
  42c864:	test   eax,0x1aeaf6fa
  42c869:	test   DWORD PTR [edx+0x3143923c],esp
  42c86f:	xchg   edx,eax
  42c870:	ins    DWORD PTR es:[edi],dx
  42c871:	mov    DWORD PTR [eax-0x48476a47],edi
  42c877:	adc    eax,0x370600f5
  42c87c:	mov    cl,0x1d
  42c87e:	and    esp,ebp
  42c880:	xchg   ebp,eax
  42c881:	in     eax,dx
  42c882:	cmp    edi,0x6b
  42c885:	aas    
  42c886:	sub    DWORD PTR [ebx+0x7d201555],ebx
  42c88c:	ins    DWORD PTR es:[edi],dx
  42c88d:	sub    eax,0x5e1aed94
  42c892:	pop    ebp
  42c893:	fidiv  WORD PTR [ecx]
  42c895:	outs   dx,DWORD PTR ds:[esi]
  42c896:	lods   eax,DWORD PTR ds:[esi]
  42c897:	cmp    dl,0x34
  42c89a:	dec    esp
  42c89b:	nop
  42c89c:	push   edi
  42c89d:	add    DWORD PTR [edx+eax*2],edi
  42c8a0:	mov    al,0x14
  42c8a2:	lock pop ss
  42c8a4:	adc    dl,BYTE PTR [ecx-0x25]
  42c8a7:	adc    esp,esp
  42c8a9:	mov    eax,0x8c060f61
  42c8ae:	adc    ebx,DWORD PTR [edi-0x77]
  42c8b1:	sbb    eax,0x7edc94b3
  42c8b6:	(bad)  
  42c8b7:	mov    esi,0x216b986c
  42c8bc:	fidiv  DWORD PTR [ebx+edx*2+0x7a1631ea]
  42c8c3:	bnd jle 0x42c86d
  42c8c6:	arpl   WORD PTR [esi],bp
  42c8c8:	dec    eax
  42c8c9:	sbb    ch,cl
  42c8cb:	cmp    eax,0x746cb4ab
  42c8d0:	push   ds
  42c8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8d2:	push   edi
  42c8d3:	sub    bh,bh
  42c8d5:	arpl   WORD PTR [ebp-0x78105f64],dx
  42c8db:	lods   eax,DWORD PTR ds:[esi]
  42c8dc:	mov    bl,0x1c
  42c8de:	clc    
  42c8df:	(bad)  
  42c8e0:	xor    al,0x20
  42c8e2:	fimul  WORD PTR [edi+edi*8]
  42c8e5:	into   
  42c8e6:	in     eax,0x15
  42c8e8:	xchg   esi,eax
  42c8e9:	sbb    bl,bh
  42c8eb:	repnz retf 
  42c8ed:	sub    al,BYTE PTR [ecx-0x595354dd]
  42c8f3:	add    edi,ecx
  42c8f5:	test   eax,0x70debcc9
  42c8fa:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42c8fc:	jo     0x42c93e
  42c8fe:	scas   al,BYTE PTR es:[edi]
  42c8ff:	jmp    0x83cf54be
  42c904:	ja     0x4a011a7d
  42c90a:	pop    ecx
  42c90b:	(bad)  
  42c90c:	fild   DWORD PTR [ecx+ecx*8]
  42c90f:	xlat   BYTE PTR ds:[ebx]
  42c910:	xor    BYTE PTR [edx+0x749f6175],dh
  42c916:	push   edi
  42c917:	int3   
  42c918:	lea    ebx,[ebx+0x7a6bdd20]
  42c91e:	add    dl,cl
  42c920:	mov    dl,0xc6
  42c922:	aaa    
  42c923:	pop    eax
  42c924:	test   DWORD PTR [esi-0x33f6d48a],eax
  42c92a:	xor    ebx,esi
  42c92c:	adc    BYTE PTR [ebx+edi*4+0x3cf86f0b],0x2f
  42c934:	push   edi
  42c935:	je     0x42c936
  42c937:	jle    0x42c9a1
  42c939:	jp     0x42c9b8
  42c93b:	inc    ebx
  42c93c:	or     cl,ch
  42c93e:	(bad)  
  42c93f:	stc    
  42c940:	add    eax,0x594d03de
  42c945:	mov    cl,0x80
  42c947:	pop    ds
  42c948:	in     eax,dx
  42c949:	ds ret 
  42c94b:	ret    
  42c94c:	(bad)  
  42c94d:	icebp  
  42c94e:	mov    esi,0x45729cd8
  42c953:	jb     0x42c925
  42c955:	mov    al,0xba
  42c957:	mov    al,0x23
  42c959:	add    dl,BYTE PTR [edi+0x20]
  42c95c:	daa    
  42c95d:	xchg   BYTE PTR [esp],bl
  42c960:	(bad)  
  42c962:	xchg   ebx,eax
  42c963:	xchg   esp,eax
  42c964:	lds    esp,FWORD PTR [edx-0x5b108d36]
  42c96a:	ficom  WORD PTR [esi]
  42c96c:	bound  esp,QWORD PTR [ebx+ecx*4+0x23]
  42c970:	inc    edx
  42c971:	imul   ecx,DWORD PTR [ebx+0x1],0x31
  42c975:	dec    esi
  42c976:	addr16 dec edi
  42c978:	xchg   esi,eax
  42c979:	inc    ebx
  42c97a:	lock push eax
  42c97c:	jg     0x42c9cb
  42c97e:	jnp    0x42c9b8
  42c980:	mov    bl,0xc1
  42c982:	or     eax,0x41062ae5
  42c987:	jg     0x42c9b0
  42c989:	mov    bh,0x1a
  42c98b:	push   ss
  42c98c:	push   ss
  42c98d:	popa   
  42c98e:	mov    bh,0x9d
  42c990:	lea    edi,[esi]
  42c992:	and    DWORD PTR ds:0xca03d186,ebx
  42c998:	add    eax,0x5b717874
  42c99d:	or     ch,BYTE PTR [ebx]
  42c99f:	ins    BYTE PTR es:[edi],dx
  42c9a0:	mov    ch,0x2f
  42c9a2:	cmp    al,bl
  42c9a4:	push   edx
  42c9a5:	icebp  
  42c9a6:	xor    DWORD PTR [edx],0xd971b526
  42c9ac:	in     al,dx
  42c9ad:	icebp  
  42c9ae:	cli    
  42c9af:	xchg   edi,eax
  42c9b0:	xchg   ebx,eax
  42c9b1:	mov    ds:0x4dcf4ef8,al
  42c9b6:	or     BYTE PTR [edx],cl
  42c9b8:	pop    ebp
  42c9b9:	outs   dx,DWORD PTR fs:[esi]
  42c9bb:	hlt    
  42c9bc:	jmp    0x42c99e
  42c9be:	mov    bl,0xc5
  42c9c0:	in     eax,dx
  42c9c1:	test   ebp,ecx
  42c9c3:	jge    0x42c95e
  42c9c5:	jle    0x42c970
  42c9c7:	fdivr  QWORD PTR [ebx-0x5cb08b8a]
  42c9cd:	ret    0xde57
  42c9d0:	aam    0x35
  42c9d2:	(bad)  [eax-0x58249964]
  42c9d8:	cmp    al,0x3c
  42c9da:	and    DWORD PTR [eax-0x21],ebx
  42c9dd:	sbb    DWORD PTR ds:0x38feb619,ebp
  42c9e3:	mov    al,ds:0x1e09b05
  42c9e8:	push   0xffffffe2
  42c9ea:	lock xchg ecx,eax
  42c9ec:	xchg   edi,eax
  42c9ed:	sub    BYTE PTR [ebp+0xa],dh
  42c9f0:	sbb    al,0x75
  42c9f2:	push   esi
  42c9f3:	mov    fs,WORD PTR [edi+0xa]
  42c9f6:	and    dl,bh
  42c9f8:	and    bh,BYTE PTR [ebx+0x4d]
  42c9fb:	mov    ecx,0x1220148
  42ca00:	(bad)  ds:0xd029ebcb
  42ca06:	in     eax,0x88
  42ca08:	jecxz  0x42ca0e
  42ca0a:	leave  
  42ca0b:	xchg   BYTE PTR cs:[edi+edx*8+0x57186cba],ch
  42ca13:	mov    BYTE PTR ds:0x235219db,ah
  42ca19:	or     DWORD PTR [ecx+edx*4],ebx
  42ca1c:	lods   eax,DWORD PTR ds:[esi]
  42ca1d:	les    ecx,FWORD PTR [ebx+0x5b]
  42ca20:	test   eax,0x456f38db
  42ca25:	push   ebx
  42ca26:	ja     0x42ca8f
  42ca28:	loope  0x42c9f4
  42ca2a:	sub    BYTE PTR [edi+0x6fdbd341],dh
  42ca30:	fstp   DWORD PTR [eax-0x5ef064fd]
  42ca36:	fistp  DWORD PTR ss:[eax+ebx*8-0x36]
  42ca3b:	pusha  
  42ca3c:	js     0x42c9ec
  42ca3e:	mov    ds:0x6b087b27,al
  42ca43:	push   edx
  42ca44:	mov    esi,DWORD PTR [esi-0x48]
  42ca47:	sub    BYTE PTR [esi-0x3a51e09c],bl
  42ca4d:	lea    esp,[ebx+0x369fc82e]
  42ca53:	inc    ebx
  42ca54:	(bad)  
  42ca55:	call   0x2044af9c
  42ca5a:	pushf  
  42ca5b:	inc    edi
  42ca5c:	icebp  
  42ca5d:	sub    al,0xf2
  42ca5f:	jne    0x42cadc
  42ca61:	cdq    
  42ca62:	mov    ebp,0x65adf1ca
  42ca67:	xor    al,0x37
  42ca69:	les    edx,FWORD PTR [esi+0x3b]
  42ca6c:	add    al,0x41
  42ca6e:	(bad)
  42ca71:	lds    eax,FWORD PTR [eax+edx*1-0x16]
  42ca75:	frstor [ecx-0x41844616]
  42ca7b:	je     0x42caa3
  42ca7d:	add    bh,BYTE PTR [ecx-0x2dcdcd03]
  42ca83:	or     al,0x7a
  42ca85:	and    dh,al
  42ca87:	and    eax,0xe842e3e4
  42ca8c:	mov    esp,0x68ff95d
  42ca91:	lock std 
  42ca93:	retf   
  42ca94:	xchg   BYTE PTR [esi+0x22410b2f],bh
  42ca9a:	outs   dx,BYTE PTR ds:[esi]
  42ca9b:	pop    ss
  42ca9c:	push   ebx
  42ca9d:	push   esp
  42ca9e:	inc    esi
  42ca9f:	not    BYTE PTR [ebp-0x41]
  42caa2:	retf   
  42caa3:	call   0x8242efd9
  42caa8:	xor    eax,0x8bf19610
  42caad:	xor    eax,0xf64a7703
  42cab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cab3:	fiadd  DWORD PTR [esp+eax*1-0x2d2b47d5]
  42caba:	dec    edx
  42cabb:	dec    esp
  42cabc:	add    dh,BYTE PTR ds:0x52f26746
  42cac2:	xor    al,0x9d
  42cac4:	test   eax,0x38ec0f3
  42cac9:	mov    DWORD PTR [eax],edi
  42cacb:	sub    cl,bh
  42cacd:	mov    bh,0xed
  42cacf:	cdq    
  42cad0:	push   eax
  42cad1:	fidivr DWORD PTR ds:0x5b86094b
  42cad7:	jle    0x42caa3
  42cad9:	repnz nop
  42cadb:	or     eax,0xeeb395d0
  42cae0:	xchg   ebx,eax
  42cae1:	stos   BYTE PTR es:[edi],al
  42cae2:	mov    bh,0xe2
  42cae4:	jge    0x42cb17
  42cae6:	cmp    BYTE PTR [ebx+0x572e92aa],ah
  42caec:	in     eax,dx
  42caed:	dec    edi
  42caee:	xchg   esp,eax
  42caef:	iret   
  42caf0:	in     al,0xcb
  42caf2:	add    eax,eax
  42caf4:	popf   
  42caf5:	loopne 0x42cb71
  42caf7:	enter  0xeb96,0x1c
  42cafb:	jp     0x42cb60
  42cafd:	fist   WORD PTR [eax-0x7f5398e5]
  42cb03:	mov    bh,0x69
  42cb05:	sub    edi,ecx
  42cb07:	scas   eax,DWORD PTR es:[edi]
  42cb08:	add    al,0x2a
  42cb0a:	jns    0x42cb64
  42cb0c:	push   esi
  42cb0d:	call   FWORD PTR [edx+0x7c]
  42cb10:	iret   
  42cb11:	xor    DWORD PTR [ebp-0x9],edx
  42cb14:	inc    esp
  42cb15:	int3   
  42cb16:	arpl   WORD PTR [edi+0x573413de],dx
  42cb1c:	mov    ebx,0xafa1c1e1
  42cb21:	lock fs (bad) 
  42cb25:	adc    BYTE PTR [edi+0x796f9ddb],bh
  42cb2b:	cli    
  42cb2c:	inc    ebx
  42cb2d:	or     esp,0x39244d6
  42cb33:	or     al,0xc4
  42cb35:	fld    QWORD PTR [esi]
  42cb37:	popf   
  42cb38:	push   0xb462a051
  42cb3d:	cdq    
  42cb3e:	leave  
  42cb3f:	ins    DWORD PTR es:[edi],dx
  42cb40:	out    0x0,al
  42cb42:	mov    edi,0x6f75516d
  42cb47:	mov    esp,0xc945c773
  42cb4c:	outs   dx,BYTE PTR ds:[esi]
  42cb4d:	in     al,0x5e
  42cb4f:	stos   BYTE PTR es:[edi],al
  42cb50:	sub    BYTE PTR [eax],dh
  42cb52:	test   DWORD PTR [ebp+esi*2+0x66],ecx
  42cb56:	sub    eax,0x7060decc
  42cb5b:	mul    BYTE PTR [ebx+0x41aa9a8]
  42cb61:	push   cs
  42cb62:	adc    DWORD PTR [eax],ebx
  42cb64:	fmul   QWORD PTR [eax]
  42cb66:	imul   ebx,esi,0x38ba5775
  42cb6c:	adc    DWORD PTR [ebx-0x3566a2ed],0xda8fd1ff
  42cb76:	adc    eax,0x56a5d214
  42cb7b:	sbb    dl,dh
  42cb7d:	fisub  DWORD PTR [ebp-0x518ecbe8]
  42cb83:	shr    esp,0xd3
  42cb86:	sbb    esp,DWORD PTR [edi+edi*8]
  42cb89:	popf   
  42cb8a:	arpl   WORD PTR [ebx+0x39],dx
  42cb8d:	ret    
  42cb8e:	test   eax,0x69ecaeb6
  42cb93:	gs sub al,0x48
  42cb96:	dec    esi
  42cb97:	sbb    DWORD PTR [ebp-0x3d122e2],esp
  42cb9d:	clc    
  42cb9e:	jle    0x42cbfb
  42cba0:	lahf   
  42cba1:	xor    ch,dl
  42cba3:	mov    ch,BYTE PTR [edi+0x46a2c805]
  42cba9:	mov    ds:0x4205ffec,eax
  42cbae:	out    0x1,eax
  42cbb0:	adc    esp,ecx
  42cbb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbb3:	(bad)  
  42cbb4:	inc    esp
  42cbb5:	inc    ebx
  42cbb6:	loop   0x42cbed
  42cbb8:	adc    DWORD PTR [ebp+0x5e],ebp
  42cbbb:	outs   dx,BYTE PTR ds:[esi]
  42cbbc:	push   ebx
  42cbbd:	sbb    al,0x66
  42cbbf:	pop    edi
  42cbc0:	int    0xd5
  42cbc2:	mov    WORD PTR [edx-0x4d],cs
  42cbc5:	push   0xdffd077d
  42cbca:	adc    eax,0x6e310f28
  42cbcf:	es daa 
  42cbd1:	and    al,0xd1
  42cbd3:	push   0xbca9feb6
  42cbd8:	or     DWORD PTR [eax+0x27e58696],0xc
  42cbdf:	das    
  42cbe0:	(bad)  
  42cbe1:	xor    eax,ebp
  42cbe3:	and    edx,DWORD PTR [ebp-0x7]
  42cbe6:	sub    BYTE PTR [esp+ebx*2],0x9c
  42cbea:	shr    DWORD PTR [edi+edi*1-0x50878187],cl
  42cbf1:	lods   eax,DWORD PTR ds:[esi]
  42cbf2:	stc    
  42cbf3:	stos   BYTE PTR es:[edi],al
  42cbf4:	sbb    eax,0x6ea54641
  42cbf9:	sbb    bh,BYTE PTR [edx+esi*8]
  42cbfc:	aad    0x83
  42cbfe:	and    ebx,0xffffffa6
  42cc01:	leave  
  42cc02:	aaa    
  42cc03:	retf   
  42cc04:	cwde   
  42cc05:	adc    BYTE PTR [ebx-0x19],cl
  42cc08:	inc    eax
  42cc09:	pop    eax
  42cc0a:	outs   dx,BYTE PTR ds:[esi]
  42cc0b:	xlat   BYTE PTR ds:[ebx]
  42cc0c:	pop    edx
  42cc0d:	std    
  42cc0e:	pop    es
  42cc0f:	add    BYTE PTR [ebp+0x5e597d01],ah
  42cc15:	test   al,0x5
  42cc17:	je     0x42cc79
  42cc19:	fbstp  TBYTE PTR [edx+edi*8-0x24]
  42cc1d:	add    DWORD PTR [esi+0x47513fe2],eax
  42cc23:	mov    BYTE PTR [ebx],al
  42cc25:	stos   BYTE PTR es:[edi],al
  42cc26:	cmp    dl,BYTE PTR [edi-0x49]
  42cc29:	ror    DWORD PTR [edi-0x44],cl
  42cc2c:	mov    bl,0x58
  42cc2e:	or     ah,bl
  42cc30:	mov    ebp,0x384d065e
  42cc35:	jmp    0xa64c4c8b
  42cc3a:	cmp    al,0x9d
  42cc3c:	mov    ds,WORD PTR [esi+0x3f]
  42cc3f:	mov    edi,0xc8dafe41
  42cc44:	pop    ebp
  42cc45:	js     0x42cc0f
  42cc47:	jg     0x42cc90
  42cc49:	je     0x42cc68
  42cc4b:	outs   dx,DWORD PTR ds:[esi]
  42cc4c:	jmp    0x454:0x17df5c39
  42cc53:	rcl    BYTE PTR [esi-0x75],cl
  42cc56:	sar    BYTE PTR [eax],1
  42cc58:	mov    edx,0x60d26283
  42cc5d:	aas    
  42cc5e:	cs cdq 
  42cc60:	(bad)  
  42cc62:	dec    edx
  42cc63:	push   ss
  42cc64:	pop    edx
  42cc65:	xchg   edi,eax
  42cc66:	imul   ebp,DWORD PTR [ecx+0x1b4e73e0],0xc9ab41bd
  42cc70:	into   
  42cc71:	pop    esi
  42cc72:	std    
  42cc73:	aam    0x82
  42cc75:	ds jmp 0x42cc36
  42cc78:	push   ebx
  42cc79:	cld    
  42cc7a:	jp     0x42ccc9
  42cc7c:	and    ebp,DWORD PTR [esi]
  42cc7e:	pop    ss
  42cc7f:	xlat   BYTE PTR ds:[ebx]
  42cc80:	sub    eax,0x6cc22439
  42cc85:	jno    0x42ccd2
  42cc87:	inc    ebp
  42cc88:	xchg   ebp,eax
  42cc89:	pop    es
  42cc8a:	sbb    ecx,DWORD PTR [ebp-0x77]
  42cc8d:	sti    
  42cc8e:	jb     0x42cc62
  42cc90:	xchg   edx,eax
  42cc91:	rcr    BYTE PTR [ebx+0x49],1
  42cc94:	cli    
  42cc95:	in     al,0xc6
  42cc97:	sub    DWORD PTR [ebx+0x75181df8],ecx
  42cc9d:	cli    
  42cc9e:	pop    edx
  42cc9f:	cmp    BYTE PTR [esi+0x44],dh
  42cca2:	test   DWORD PTR [esi+0x23],ebx
  42cca5:	mov    dl,0x14
  42cca7:	dec    ecx
  42cca8:	push   edi
  42cca9:	in     al,dx
  42ccaa:	or     ecx,esi
  42ccac:	sbb    eax,0x7528666d
  42ccb1:	mov    ah,0xb6
  42ccb3:	popa   
  42ccb4:	xchg   edi,eax
  42ccb5:	sub    esi,DWORD PTR [eax]
  42ccb7:	sbb    al,0x9
  42ccb9:	aas    
  42ccba:	mov    esp,0x2b51852f
  42ccbf:	push   ebx
  42ccc0:	mov    eax,esp
  42ccc2:	add    BYTE PTR [eax],0xe5
  42ccc5:	mov    al,ds:0x1164d7fe
  42ccca:	and    al,0x60
  42cccc:	les    edx,FWORD PTR [eax+ecx*8]
  42cccf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccd1:	cmp    eax,0xac8617b5
  42ccd6:	jne    0x42cd50
  42ccd8:	cwde   
  42ccd9:	(bad)  
  42ccda:	dec    edi
  42ccdb:	cmp    al,0x78
  42ccdd:	and    BYTE PTR ds:[eax-0x16],dl
  42cce1:	out    dx,eax
  42cce2:	test   BYTE PTR [edi+0x5905df22],cl
  42cce8:	sub    bl,al
  42ccea:	sub    esp,DWORD PTR [ecx-0x3e]
  42cced:	xor    ebx,DWORD PTR [ebx+0x5b]
  42ccf0:	mov    DWORD PTR [edi-0x48fef9af],esp
  42ccf6:	jnp    0x42cca4
  42ccf8:	jne    0x42cd3c
  42ccfa:	out    dx,al
  42ccfb:	das    
  42ccfc:	cmp    edx,DWORD PTR [eax]
  42ccfe:	out    0xaa,eax
  42cd00:	xor    BYTE PTR [eax],bh
  42cd02:	mov    al,0x98
  42cd04:	sub    al,0xb9
  42cd06:	inc    eax
  42cd07:	test   eax,0x3ca26434
  42cd0c:	xchg   edx,eax
  42cd0d:	dec    ecx
  42cd0e:	mov    dh,0xdc
  42cd10:	dec    eax
  42cd11:	jns    0x42cd25
  42cd13:	push   esp
  42cd14:	sti    
  42cd15:	fcmovnb st,st(7)
  42cd17:	mov    edx,0x7c663a67
  42cd1c:	mov    al,0xf9
  42cd1e:	in     al,0x67
  42cd20:	fwait
  42cd21:	jno    0x42cd2e
  42cd23:	nop
  42cd24:	mov    ch,0xcc
  42cd26:	xor    ch,BYTE PTR [esi]
  42cd28:	dec    eax
  42cd29:	in     al,dx
  42cd2a:	dec    edx
  42cd2b:	std    
  42cd2c:	mov    ecx,0xaa2d8749
  42cd31:	jle    0x42cd55
  42cd33:	adc    ch,dh
  42cd35:	push   ecx
  42cd36:	jae    0x42ccda
  42cd38:	adc    al,0x6f
  42cd3a:	and    eax,0x65fbb52c
  42cd3f:	push   edi
  42cd40:	pop    es
  42cd41:	scas   al,BYTE PTR es:[edi]
  42cd42:	mov    ah,0x37
  42cd44:	mov    edi,0xa14cbf32
  42cd49:	sub    BYTE PTR [edi-0x35],dh
  42cd4c:	jbe    0x42cd2e
  42cd4e:	cmp    DWORD PTR [edx+0x55],ecx
  42cd51:	add    bl,BYTE PTR [edi]
  42cd53:	cmp    al,0xa6
  42cd55:	sbb    eax,0x6b6ab650
  42cd5a:	and    ecx,edi
  42cd5c:	adc    eax,0x5a7bdbed
  42cd61:	gs in  al,dx
  42cd63:	mov    esi,0x1613609
  42cd68:	jae    0x42cd8e
  42cd6a:	push   0x73
  42cd6c:	test   DWORD PTR [ebp+0x3],edx
  42cd6f:	jle    0x42cd46
  42cd71:	ss jno 0x42cdaf
  42cd74:	xchg   ebp,eax
  42cd75:	mov    ds:0x6dc0a8,ax
  42cd7b:	xor    eax,ebp
  42cd7d:	jb     0x42cd54
  42cd7f:	outs   dx,DWORD PTR ds:[esi]
  42cd80:	sbb    BYTE PTR [edx+0x1],ah
  42cd83:	push   ebp
  42cd84:	or     BYTE PTR [esi+0x1721fb08],ah
  42cd8a:	xchg   esp,eax
  42cd8b:	mov    ecx,0x434fd67b
  42cd90:	into   
  42cd91:	ror    ch,0xc
  42cd94:	and    eax,0xc6ee1e3b
  42cd99:	mov    dl,0x8f
  42cd9b:	int    0xaa
  42cd9d:	cmp    ah,BYTE PTR [ebx]
  42cd9f:	iret   
  42cda0:	pop    eax
  42cda1:	addr16 inc eax
  42cda3:	inc    edi
  42cda4:	inc    edx
  42cda5:	mov    al,0x9a
  42cda7:	loope  0x42cd29
  42cda9:	pop    ss
  42cdaa:	pop    esp
  42cdab:	imul   edx,DWORD PTR [edi-0x1a],0xffffff9f
  42cdaf:	push   edx
  42cdb0:	cwde   
  42cdb1:	into   
  42cdb2:	enter  0xcec9,0x64
  42cdb6:	(bad)  
  42cdb7:	mov    dh,0xca
  42cdb9:	dec    esi
  42cdba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cdbb:	lahf   
  42cdbc:	sub    bh,BYTE PTR [ebx+0x41]
  42cdbf:	mov    dh,0xdb
  42cdc1:	lods   al,BYTE PTR ds:[esi]
  42cdc2:	punpcklwd mm0,DWORD PTR [edi]
  42cdc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cdc6:	push   ds
  42cdc7:	jge    0x42cdee
  42cdc9:	js     0x42cd6b
  42cdcb:	sbb    ebx,DWORD PTR [eax+0x4b]
  42cdce:	adc    DWORD PTR [eax],edi
  42cdd0:	sbb    bh,BYTE PTR [edi]
  42cdd2:	je     0x42cdaa
  42cdd4:	dec    ebp
  42cdd5:	add    eax,0xae0b6534
  42cdda:	xor    eax,0x233c438f
  42cddf:	xlat   BYTE PTR ds:[ebx]
  42cde0:	jo     0x42cdbe
  42cde2:	jne    0x42cdbd
  42cde4:	add    al,0x75
  42cde6:	repnz dec edi
  42cde8:	push   ebp
  42cde9:	push   eax
  42cdea:	das    
  42cdeb:	fdiv   DWORD PTR [edx+ebp*2-0x736c70c1]
  42cdf2:	jns    0x42ce53
  42cdf4:	sbb    ebx,DWORD PTR [eax+edi*8+0x8043ab6]
  42cdfb:	mov    bl,0xeb
  42cdfd:	lahf   
  42cdfe:	mov    ch,0x13
  42ce00:	sti    
  42ce01:	mov    ss,esi
  42ce03:	repnz aam 0xc9
  42ce06:	sbb    al,0x2d
  42ce08:	add    ebp,DWORD PTR [ecx-0x209993b7]
  42ce0e:	bound  esi,QWORD PTR [edx+esi*2+0x30f2ca11]
  42ce15:	jno    0x42ce71
  42ce17:	xor    DWORD PTR [edx-0x49c85521],edx
  42ce1d:	jecxz  0x42ce33
  42ce1f:	and    eax,eax
  42ce21:	ret    
  42ce22:	cli    
  42ce23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce24:	push   es
  42ce25:	xchg   edx,eax
  42ce26:	fstp   st(3)
  42ce28:	jno    0x42cdbf
  42ce2a:	sbb    al,0xa4
  42ce2c:	dec    ecx
  42ce2d:	mov    esp,0xbcf19297
  42ce32:	mov    edx,0xe72615d4
  42ce37:	cmp    al,0xaf
  42ce39:	xor    al,0xdb
  42ce3b:	jo     0x42ce06
  42ce3d:	into   
  42ce3e:	icebp  
  42ce3f:	xor    ch,bh
  42ce41:	aam    0x58
  42ce43:	stos   BYTE PTR es:[edi],al
  42ce44:	ss das 
  42ce46:	addr16 in al,0x58
  42ce49:	lds    edi,FWORD PTR [eax-0x46]
  42ce4c:	dec    eax
  42ce4d:	dec    esp
  42ce4e:	daa    
  42ce4f:	sub    DWORD PTR [eax],ecx
  42ce51:	ja     0x42cde4
  42ce53:	ret    0xf815
  42ce56:	rcl    BYTE PTR ds:0x463136d8,cl
  42ce5c:	mov    cl,0xf4
  42ce5e:	jno    0x42ce55
  42ce60:	mov    eax,ds:0x34369a4c
  42ce65:	jmp    0x42cdf9
  42ce67:	mov    ds:0xeadcc7c2,al
  42ce6c:	std    
  42ce6d:	sub    DWORD PTR [edx+0x301bbef0],ecx
  42ce73:	sub    DWORD PTR [edi-0x1afe1fdc],ebp
  42ce79:	mov    cl,0x21
  42ce7b:	jne    0x42ce4e
  42ce7d:	retf   0x5c8b
  42ce80:	mov    ds:0x2e8c48bf,al
  42ce85:	xchg   ecx,eax
  42ce86:	jle    0x42ceb9
  42ce88:	lds    esp,FWORD PTR [ecx]
  42ce8a:	and    bl,BYTE PTR [ecx+0x6e]
  42ce8d:	jmp    0xbcaf:0xdb47561
  42ce94:	cli    
  42ce95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce96:	out    0x97,al
  42ce98:	or     DWORD PTR [edi+0xe24d0f4],0xffffffb6
  42ce9f:	and    BYTE PTR [ecx],ch
  42cea1:	out    0x50,al
  42cea3:	fisub  DWORD PTR [esi]
  42cea5:	xchg   ecx,eax
  42cea6:	push   eax
  42cea7:	ret    0x17e
  42ceaa:	mov    dh,0x62
  42ceac:	jnp    0x42cf16
  42ceae:	retf   0xd538
  42ceb1:	adc    esi,DWORD PTR [ebx+ebx*2-0x6f]
  42ceb5:	fcomp  DWORD PTR [eax]
  42ceb7:	dec    DWORD PTR [esi+0x6d]
  42ceba:	in     al,dx
  42cebb:	mov    ah,0xcb
  42cebd:	and    edx,DWORD PTR [eax+0x35469cf9]
  42cec3:	or     ch,bh
  42cec5:	mov    al,bh
  42cec7:	(bad)  
  42cec8:	enter  0xf20f,0xc5
  42cecc:	ja     0x42cec9
  42cece:	jnp    0x42cf13
  42ced0:	and    esp,ebp
  42ced2:	imul   eax,DWORD PTR [ebp+edx*4-0x387e5967],0xffffffa5
  42ceda:	or     al,0x36
  42cedc:	inc    esp
  42cedd:	or     esi,DWORD PTR [ebx]
  42cedf:	cld    
  42cee0:	adc    DWORD PTR [esi+eiz*1-0x455f7903],edx
  42cee7:	ss retf 
  42cee9:	lds    ecx,FWORD PTR [ecx+ebx*1+0x48]
  42ceed:	sbb    eax,0x427b023a
  42cef2:	mov    cl,0xe7
  42cef4:	mov    BYTE PTR [eax],ch
  42cef6:	or     bh,BYTE PTR [edi]
  42cef8:	rol    DWORD PTR [edx+0x111cbfaf],0x88
  42ceff:	les    esi,FWORD PTR [edi+eiz*4+0xd]
  42cf03:	loop   0x42cf33
  42cf05:	mov    WORD PTR ds:0xd1c7e165,es
  42cf0b:	es scas al,BYTE PTR es:[edi]
  42cf0d:	mov    ebp,0x33959236
  42cf12:	inc    eax
  42cf13:	ret    
  42cf14:	adc    BYTE PTR [eax+eax*4],0x17
  42cf18:	jp     0x42cf53
  42cf1a:	mov    DWORD PTR [esi+0x1495c641],esp
  42cf20:	fadd   QWORD PTR [edx-0x54f754a]
  42cf26:	push   esp
  42cf27:	fimul  WORD PTR [edi+0x67536659]
  42cf2d:	int3   
  42cf2e:	aad    0x4d
  42cf30:	pop    esi
  42cf31:	inc    ebx
  42cf32:	lahf   
  42cf33:	sti    
  42cf34:	push   0xfffffff8
  42cf36:	(bad)  
  42cf37:	dec    edx
  42cf38:	inc    DWORD PTR [edi]
  42cf3a:	or     BYTE PTR [ebx-0x26],cl
  42cf3d:	in     eax,dx
  42cf3e:	pushf  
  42cf3f:	out    dx,al
  42cf40:	jns    0x42cf69
  42cf42:	test   ebp,ebx
  42cf44:	lods   eax,DWORD PTR ds:[esi]
  42cf45:	adc    eax,0xbc3c615b
  42cf4a:	arpl   bx,cx
  42cf4c:	popf   
  42cf4d:	jo     0x42cf8d
  42cf4f:	imul   eax,DWORD PTR [ebx+0x26dd6e38],0xf0bf98e5
  42cf59:	shr    BYTE PTR [edi-0x3f736eed],0x13
  42cf60:	xor    DWORD PTR [ebp+0x4d6cb1c],ebp
  42cf66:	and    DWORD PTR [ecx+edi*1],eax
  42cf69:	in     eax,dx
  42cf6a:	nop
  42cf6b:	lds    eax,FWORD PTR [edi+0x4c]
  42cf6e:	popf   
  42cf6f:	jne    0x42cf7a
  42cf71:	push   esi
  42cf72:	ret    
  42cf73:	mov    ah,0xe4
  42cf75:	nop
  42cf76:	in     eax,dx
  42cf77:	pop    eax
  42cf78:	push   ds
  42cf79:	std    
  42cf7a:	stc    
  42cf7b:	mov    bl,0x3e
  42cf7d:	xchg   BYTE PTR [esi],al
  42cf7f:	add    ebx,ebp
  42cf81:	fisubr WORD PTR [edi+edx*8+0x33384587]
  42cf88:	inc    DWORD PTR [eax-0x72]
  42cf8b:	xchg   ebp,eax
  42cf8c:	push   ds
  42cf8d:	xchg   ecx,eax
  42cf8e:	mov    cl,al
  42cf90:	fcmovne st,st(0)
  42cf92:	(bad)  
  42cf93:	popf   
  42cf94:	dec    ebx
  42cf95:	dec    esi
  42cf96:	jbe    0x42cfd1
  42cf98:	clc    
  42cf99:	ret    0xc93a
  42cf9c:	neg    BYTE PTR [edx+edx*4]
  42cf9f:	in     eax,dx
  42cfa0:	fisubr DWORD PTR [ecx+0x66]
  42cfa3:	imul   eax,eax,0x6
  42cfa6:	mov    eax,ds:0x6c69b986
  42cfab:	xchg   DWORD PTR [edi+esi*1],ecx
  42cfae:	aam    0xe0
  42cfb0:	push   edi
  42cfb1:	out    0x5e,eax
  42cfb3:	outs   dx,BYTE PTR ds:[esi]
  42cfb4:	clc    
  42cfb5:	xlat   BYTE PTR ds:[ebx]
  42cfb6:	jp     0x42d00d
  42cfb8:	in     al,dx
  42cfb9:	mov    edx,DWORD PTR [ebp-0x7899a104]
  42cfbf:	loope  0x42cffa
  42cfc1:	jne    0x42cf4d
  42cfc3:	(bad)  
  42cfc4:	mov    ecx,0xf5087524
  42cfc9:	test   eax,0x5cd77496
  42cfce:	inc    ebp
  42cfcf:	push   esp
  42cfd0:	cli    
  42cfd1:	push   es
  42cfd2:	add    edi,DWORD PTR [edi+edx*1+0x5112a6f7]
  42cfd9:	shl    edx,cl
  42cfdb:	test   eax,0xf5598805
  42cfe0:	shl    DWORD PTR [ebx-0x30],0xf
  42cfe4:	outs   dx,DWORD PTR ds:[esi]
  42cfe5:	mov    cl,0xf4
  42cfe7:	mov    edx,0x2a0f8bd5
  42cfec:	enter  0x38c7,0x58
  42cff0:	in     eax,dx
  42cff1:	scas   al,BYTE PTR es:[edi]
  42cff2:	mov    WORD PTR [edx],ds
  42cff4:	inc    eax
  42cff5:	out    0x9d,eax
  42cff7:	js     0x42d05c
  42cff9:	das    
  42cffa:	mov    bl,0xb2
  42cffc:	icebp  
  42cffd:	mov    ebx,0x8933460e
  42d002:	loope  0x42d03b
  42d004:	xchg   esp,eax
  42d005:	mov    al,ds:0xc29b7d9e
  42d00a:	add    BYTE PTR [edi+0x7b],dl
  42d00d:	ds push ebx
  42d00f:	stos   DWORD PTR es:[edi],eax
  42d010:	xchg   ebp,eax
  42d011:	scas   al,BYTE PTR es:[edi]
  42d012:	retf   
  42d013:	mov    DWORD PTR ds:0x7614fa9c,edx
  42d019:	loop   0x42cfdb
  42d01b:	mov    esi,DWORD PTR [ecx]
  42d01d:	mov    al,0x8b
  42d01f:	sub    al,0xec
  42d021:	jle    0x42cfa5
  42d023:	ins    DWORD PTR es:[edi],dx
  42d024:	push   ebp
  42d025:	loope  0x42cfd2
  42d027:	mov    eax,ds:0x2825de22
  42d02c:	pop    ebx
  42d02d:	mov    al,ds:0x28a0bca
  42d032:	pop    esi
  42d033:	jae    0x42d008
  42d035:	sub    DWORD PTR [ecx+0x29491fec],ebx
  42d03b:	sub    dl,BYTE PTR [ecx]
  42d03d:	mov    esi,0xcff7846
  42d042:	mov    esp,0x239e30e1
  42d047:	or     eax,0x7a8f9218
  42d04c:	pop    esi
  42d04d:	mov    esp,0x3070ff84
  42d052:	adc    bl,BYTE PTR [edx-0x4e43950e]
  42d058:	in     eax,dx
  42d059:	(bad)  [edx-0x7e9933e8]
  42d05f:	xor    BYTE PTR [edx-0x28],dh
  42d062:	dec    ebp
  42d063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d064:	aas    
  42d065:	ds mov ah,0xef
  42d068:	nop
  42d069:	ret    
  42d06a:	mov    eax,ds:0xe674461f
  42d06f:	dec    esp
  42d070:	je     0x42d0b0
  42d072:	dec    ebp
  42d073:	mov    al,BYTE PTR [esi-0x169169ed]
  42d079:	imul   ebx,edi,0xe44b7634
  42d07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d080:	loope  0x42d083
  42d082:	xchg   edx,eax
  42d083:	jecxz  0x42d0e8
  42d085:	or     ah,bh
  42d087:	jbe    0x42d086
  42d089:	xchg   esi,eax
  42d08a:	in     eax,0x66
  42d08c:	jl     0x42d078
  42d08e:	push   ebp
  42d08f:	cli    
  42d090:	idiv   BYTE PTR [edi]
  42d092:	mov    eax,0xf3c7cb42
  42d097:	in     al,dx
  42d098:	lahf   
  42d099:	clc    
  42d09a:	lods   al,BYTE PTR ds:[esi]
  42d09b:	aad    0xb4
  42d09d:	mov    edx,0xef80da3f
  42d0a2:	cdq    
  42d0a3:	xor    DWORD PTR [edi],esi
  42d0a5:	mov    edi,DWORD PTR [edi-0x7a316c9d]
  42d0ab:	sahf   
  42d0ac:	xor    BYTE PTR [eax-0x28],dh
  42d0af:	jp     0x42d0ee
  42d0b1:	pop    ds
  42d0b2:	rcr    DWORD PTR [ebp-0x24],1
  42d0b5:	sar    DWORD PTR [esi+0x43a3a2fa],1
  42d0bb:	cwde   
  42d0bc:	test   al,0xeb
  42d0be:	sub    ecx,ebx
  42d0c0:	test   al,0x2e
  42d0c2:	push   esp
  42d0c3:	inc    esi
  42d0c4:	in     al,0x55
  42d0c6:	cmp    eax,0x627909a8
  42d0cb:	and    BYTE PTR [edi-0x29],al
  42d0ce:	adc    ch,BYTE PTR [edi-0x76882cd6]
  42d0d4:	add    edi,esp
  42d0d6:	scas   eax,DWORD PTR es:[edi]
  42d0d7:	dec    esi
  42d0d8:	jl     0x42d126
  42d0da:	pop    ss
  42d0db:	call   0x64a82652
  42d0e0:	or     eax,0xfabade68
  42d0e5:	shr    DWORD PTR [ebx+0x2e],1
  42d0e8:	sbb    al,ah
  42d0ea:	add    dl,BYTE PTR [ecx-0x67]
  42d0ed:	mov    ss,WORD PTR [ecx-0x7e]
  42d0f0:	xor    eax,DWORD PTR [esi+0x6f]
  42d0f3:	test   DWORD PTR [eax],esp
  42d0f5:	sub    BYTE PTR [edi+esi*2-0x450b54a3],ah
  42d0fc:	xchg   edi,eax
  42d0fd:	adc    eax,0xf7116023
  42d102:	enter  0x3fd,0x63
  42d106:	adc    DWORD PTR [ebx],ecx
  42d108:	idiv   BYTE PTR [edx-0x72499290]
  42d10e:	jae    0x42d162
  42d110:	jo     0x42d11f
  42d112:	and    bl,BYTE PTR [edx-0x4439a1ce]
  42d118:	in     al,dx
  42d119:	into   
  42d11a:	enter  0x8065,0x63
  42d11e:	ds xor esi,esi
  42d121:	jp     0x42d124
  42d123:	and    DWORD PTR [edi-0x45],ecx
  42d126:	and    ah,BYTE PTR [ebx+0x7d71539a]
  42d12c:	adc    cl,ah
  42d12e:	mov    al,0x44
  42d130:	sub    esp,DWORD PTR [edi+0x7605afa9]
  42d136:	mov    edi,0x14f06956
  42d13b:	mov    DWORD PTR [ecx-0x3c],ebp
  42d13e:	lahf   
  42d13f:	mov    ebx,0xb36d9fb4
  42d144:	je     0x42d0e3
  42d146:	das    
  42d147:	sub    BYTE PTR [ebx+0x4c],0x2f
  42d14b:	xor    al,0x6e
  42d14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d14e:	(bad)  
  42d14f:	repnz retf 0x83f0
  42d153:	and    al,0x80
  42d155:	aad    0x14
  42d157:	iret   
  42d158:	popa   
  42d159:	ror    DWORD PTR ss:[ecx-0x2c],0xa0
  42d15e:	adc    eax,0x605ca324
  42d163:	fcmovbe st,st(7)
  42d165:	cmp    al,0x9d
  42d167:	rol    DWORD PTR [ecx+edi*4],0x33
  42d16b:	stc    
  42d16c:	dec    edx
  42d16d:	or     al,0xfd
  42d16f:	sbb    ebp,eax
  42d171:	pusha  
  42d172:	shr    ebp,0x21
  42d175:	sub    eax,0xf7816041
  42d17a:	inc    eax
  42d17b:	pop    edi
  42d17c:	lea    ecx,[esi-0x55]
  42d17f:	call   0xda9776d4
  42d184:	jno    0x42d181
  42d186:	pop    ecx
  42d187:	sbb    dl,BYTE PTR [esi+esi*4+0x5711be0f]
  42d18e:	add    eax,0x468cb627
  42d193:	mov    ebx,0x7d35a7b3
  42d198:	sub    ebp,esp
  42d19a:	sbb    eax,0xdbbd1b14
  42d19f:	mov    edi,0xff17c47f
  42d1a4:	inc    eax
  42d1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1a6:	lock fwait
  42d1a8:	in     al,0xc6
  42d1aa:	rol    BYTE PTR [esp+ebx*2],cl
  42d1ad:	mov    eax,esi
  42d1af:	push   eax
  42d1b0:	out    dx,eax
  42d1b1:	pop    ecx
  42d1b2:	mov    ebx,0x6c796e78
  42d1b7:	out    0x70,al
  42d1b9:	cmp    edx,DWORD PTR [eax-0x13]
  42d1bc:	lss    ecx,FWORD PTR [esi+esi*4+0x7a]
  42d1c1:	mov    al,ds:0x4cdbe9b9
  42d1c6:	dec    ebx
  42d1c7:	pop    edx
  42d1c8:	sub    BYTE PTR [ecx-0x4fe1c57d],0xf7
  42d1cf:	cld    
  42d1d0:	adc    dh,BYTE PTR [ebx]
  42d1d2:	sub    bh,bl
  42d1d4:	inc    ecx
  42d1d5:	or     DWORD PTR [eax],edi
  42d1d7:	mov    esi,0x3f6912ce
  42d1dc:	out    dx,al
  42d1dd:	stos   BYTE PTR es:[edi],al
  42d1de:	push   eax
  42d1df:	enter  0xbd1c,0x53
  42d1e3:	mov    edi,gs
  42d1e5:	sub    ecx,DWORD PTR [edi]
  42d1e7:	aad    0xba
  42d1e9:	bound  edi,QWORD PTR [ecx-0x132ba1b2]
  42d1ef:	lahf   
  42d1f0:	pushf  
  42d1f1:	sbb    al,0x46
  42d1f3:	dec    BYTE PTR [edx]
  42d1f5:	mov    al,0x5e
  42d1f7:	mov    ?,ebx
  42d1f9:	jae    0x42d1b8
  42d1fb:	dec    eax
  42d1fc:	out    dx,al
  42d1fd:	call   0x50b4:0x30c9c6b3
  42d204:	xchg   ecx,eax
  42d205:	ja     0x42d1c0
  42d207:	add    DWORD PTR [eax+0x378bfd],edx
  42d20d:	sub    al,0x73
  42d20f:	retf   0xb533
  42d212:	pushf  
  42d213:	xchg   ebp,eax
  42d214:	xor    BYTE PTR [eax-0x7],bh
  42d217:	sbb    BYTE PTR [ebx],0xd0
  42d21a:	sahf   
  42d21b:	cli    
  42d21c:	loop   0x42d253
  42d21e:	data16 xor dh,dh
  42d221:	fdivp  st(1),st
  42d223:	cdq    
  42d224:	mov    esi,0xd9155ee4
  42d229:	int3   
  42d22a:	or     ch,ah
  42d22c:	xor    DWORD PTR ss:[edi],esp
  42d22f:	inc    edx
  42d230:	fsubr  st,st(7)
  42d232:	popa   
  42d233:	jecxz  0x42d1f2
  42d235:	cmp    ecx,DWORD PTR [ebx-0x1b]
  42d238:	add    cl,BYTE PTR [edi-0x7c0eb50b]
  42d23e:	cwde   
  42d23f:	sbb    DWORD PTR [edx],edx
  42d241:	push   edi
  42d242:	jp     0x42d29f
  42d244:	mov    ah,0x18
  42d246:	sbb    bh,ah
  42d248:	jle    0x42d27c
  42d24a:	js     0x42d297
  42d24c:	mov    dh,BYTE PTR [edx+0x6b4f675a]
  42d252:	xor    al,0x2c
  42d254:	mov    dh,0xb7
  42d256:	mov    ds:0xed704969,al
  42d25b:	inc    eax
  42d25c:	jns    0x42d23d
  42d25e:	clc    
  42d25f:	lods   al,BYTE PTR ds:[esi]
  42d260:	les    esp,FWORD PTR [edi]
  42d262:	sbb    al,0x28
  42d264:	ds stc 
  42d266:	lds    esi,FWORD PTR [eax+0x5]
  42d269:	or     BYTE PTR [edi+0x5f768b10],dh
  42d26f:	pop    edx
  42d270:	retf   0xcad2
  42d273:	and    ah,dh
  42d275:	lahf   
  42d276:	sbb    DWORD PTR [ecx-0x2b029823],edi
  42d27c:	adc    BYTE PTR [edi+edi*4-0x1bfd1cd9],ah
  42d283:	or     BYTE PTR [ebp-0x223a46f2],ch
  42d289:	push   esi
  42d28a:	stos   DWORD PTR es:[edi],eax
  42d28b:	pop    ss
  42d28c:	addr16 pushf 
  42d28e:	out    0x44,eax
  42d290:	stos   BYTE PTR es:[edi],al
  42d291:	(bad)  [ebx+0x58a6fdde]
  42d297:	dec    esi
  42d298:	dec    esi
  42d299:	loope  0x42d2b3
  42d29b:	or     cl,bl
  42d29d:	daa    
  42d29e:	outs   dx,BYTE PTR ds:[esi]
  42d29f:	test   BYTE PTR [ebp-0x3aa3b0de],bh
  42d2a5:	cdq    
  42d2a6:	pop    edi
  42d2a7:	cmp    bl,ch
  42d2a9:	jmp    0x42d2f1
  42d2ab:	mov    ah,0xe3
  42d2ad:	pop    es
  42d2ae:	pop    ds
  42d2af:	cmp    DWORD PTR [edi+eax*2-0x57f131d1],0x13
  42d2b7:	lods   al,BYTE PTR ds:[esi]
  42d2b8:	cli    
  42d2b9:	dec    edx
  42d2ba:	popf   
  42d2bb:	mov    ebx,0x59e99cc5
  42d2c0:	in     al,0xcb
  42d2c2:	std    
  42d2c3:	jmp    0x6243615b
  42d2c8:	jle    0x42d24e
  42d2ca:	daa    
  42d2cb:	repz cwde 
  42d2cd:	push   edx
  42d2ce:	dec    ebp
  42d2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2d0:	jmp    0x5dca:0xc215e015
  42d2d7:	mov    DWORD PTR [eax-0x404fd634],ebp
  42d2dd:	push   0xecc584a6
  42d2e2:	out    dx,al
  42d2e3:	jg     0x42d344
  42d2e5:	scas   eax,DWORD PTR es:[edi]
  42d2e6:	dec    eax
  42d2e7:	jecxz  0x42d2f5
  42d2e9:	fidiv  WORD PTR [ebx]
  42d2eb:	icebp  
  42d2ec:	push   0x21
  42d2ee:	push   esp
  42d2ef:	cld    
  42d2f0:	pop    es
  42d2f1:	xor    edi,DWORD PTR [edx+edx*1]
  42d2f4:	cmp    ah,bh
  42d2f6:	push   ebp
  42d2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2f8:	add    dl,BYTE PTR [esi+0x497c43af]
  42d2fe:	dec    esp
  42d2ff:	cli    
  42d300:	lahf   
  42d301:	aam    0xf2
  42d303:	sub    eax,0x2b10643a
  42d308:	mov    ds:0xa9ecbcd2,eax
  42d30d:	call   FWORD PTR [edx+0x2c745e0f]
  42d313:	enter  0xafa2,0x4f
  42d317:	or     esi,DWORD PTR [edx-0x71]
  42d31a:	(bad)  
  42d31b:	leave  
  42d31c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d31d:	dec    edx
  42d31e:	and    esi,ebp
  42d320:	sbb    cl,bl
  42d322:	repz or al,BYTE PTR [edx-0x532b1e8a]
  42d329:	xchg   edi,eax
  42d32a:	push   ds
  42d32b:	bnd ja 0x42d308
  42d32e:	cs xchg edi,eax
  42d330:	mov    edi,ebp
  42d332:	inc    esi
  42d333:	lock sbb DWORD PTR [eax],esp
  42d336:	daa    
  42d337:	stos   DWORD PTR es:[edi],eax
  42d338:	out    dx,eax
  42d339:	cdq    
  42d33a:	dec    esi
  42d33b:	xchg   esi,eax
  42d33c:	push   es
  42d33d:	cmp    eax,0x5aea159a
  42d342:	pop    ds
  42d343:	imul   eax,DWORD PTR [ebx-0x11],0x7b
  42d347:	retf   0xa57f
  42d34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d34b:	les    edx,FWORD PTR [edx+0x55]
  42d34e:	dec    edi
  42d34f:	mov    cl,dl
  42d351:	stos   BYTE PTR es:[edi],al
  42d352:	test   DWORD PTR [esi-0x347870a7],ecx
  42d358:	xor    cl,0xf2
  42d35b:	mov    dl,BYTE PTR [edx+eiz*2-0x18f6764a]
  42d362:	push   edi
  42d363:	scas   al,BYTE PTR es:[edi]
  42d364:	arpl   WORD PTR [edx-0xb6c069e],ax
  42d36a:	push   ebx
  42d36b:	mov    DWORD PTR [edx-0x70],0xf731dc94
  42d372:	sbb    esi,esp
  42d374:	mul    DWORD PTR ds:0x5aa5ff54
  42d37a:	add    ebp,ebx
  42d37c:	fs mov cl,0xe3
  42d37f:	sub    eax,0xf4605243
  42d384:	or     al,0xcd
  42d387:	call   0xd5696b81
  42d38c:	or     bh,al
  42d38e:	sub    BYTE PTR [esi+0x7f79bb80],al
  42d394:	leave  
  42d395:	cmp    BYTE PTR [esi+0x345b82cd],dh
  42d39b:	xor    ah,BYTE PTR [ebx+edi*8-0x7cce454c]
  42d3a2:	std    
  42d3a3:	rcl    BYTE PTR [ebx],cl
  42d3a5:	push   eax
  42d3a6:	mov    esp,0xd075421
  42d3ab:	cmp    eax,0x57771aac
  42d3b0:	loopne 0x42d3af
  42d3b2:	mov    eax,ds:0xa1c857fe
  42d3b7:	rol    BYTE PTR [eax+0x29cfd25a],1
  42d3bd:	rol    BYTE PTR [ebp+0x4a],1
  42d3c0:	leave  
  42d3c1:	push   0xffffffb2
  42d3c3:	and    DWORD PTR [ecx+0x449bdb3],0x6f
  42d3ca:	dec    esp
  42d3cb:	jg     0x42d386
  42d3cd:	add    bl,BYTE PTR [edx+ebx*1]
  42d3d0:	cmc    
  42d3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3d2:	mov    ebx,ds
  42d3d4:	int    0x9a
  42d3d6:	(bad)  
  42d3d7:	in     eax,dx
  42d3d8:	mov    dh,0xe9
  42d3da:	fcom   st(3)
  42d3dc:	sbb    eax,0xb2e4f3e2
  42d3e1:	ja     0x42d405
  42d3e3:	cmp    al,0x6c
  42d3e5:	loopne 0x42d3f6
  42d3e7:	cli    
  42d3e8:	cmp    eax,0x70866b9c
  42d3ed:	test   DWORD PTR [ecx-0x3285587e],0xa7c0324
  42d3f7:	mov    dh,0x2d
  42d3f9:	and    BYTE PTR [ecx+edx*2+0x24f23e53],0xb9
  42d401:	adc    bl,ah
  42d403:	sbb    DWORD PTR [ecx-0x34],0x49
  42d407:	lods   eax,DWORD PTR ds:[esi]
  42d408:	stos   BYTE PTR es:[edi],al
  42d409:	cmp    dl,dh
  42d40b:	adc    DWORD PTR [eax+0x28],0xbee38aae
  42d412:	mov    ?,esi
  42d414:	xchg   DWORD PTR [ebp-0x1f026f13],ecx
  42d41a:	rol    BYTE PTR [eax-0x35],1
  42d41d:	xlat   BYTE PTR ds:[ebx]
  42d41e:	xchg   DWORD PTR gs:[esp+ebp*4-0x31],ebp
  42d423:	xor    al,0x6
  42d425:	sbb    BYTE PTR [edx+0x2f00d79d],bh
  42d42b:	fs jne 0x42d3f0
  42d42e:	and    al,ah
  42d430:	enter  0x82a9,0xa5
  42d434:	sbb    DWORD PTR [ebp-0x7b8613cb],ebp
  42d43a:	nop    DWORD PTR [ebx-0x73]
  42d43e:	in     al,dx
  42d43f:	int3   
  42d440:	add    edi,edx
  42d442:	adc    DWORD PTR [ecx+edi*1-0x1996f93b],edx
  42d449:	or     al,0xde
  42d44b:	sub    ebp,ebp
  42d44d:	loope  0x42d4ae
  42d44f:	push   eax
  42d450:	or     DWORD PTR [edi-0x6b],0x1f
  42d454:	xchg   DWORD PTR ds:0x21e4e0c8,edx
  42d45a:	repnz pop es
  42d45c:	fbstp  TBYTE PTR [ecx+0x3c]
  42d45f:	dec    eax
  42d460:	mov    cl,0x64
  42d462:	dec    esi
  42d463:	mov    bl,0x59
  42d465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d466:	or     DWORD PTR [ebp+0x324d4118],esi
  42d46c:	and    al,BYTE PTR [edi+0x66]
  42d46f:	iret   
  42d470:	jl     0x42d448
  42d472:	push   cs
  42d473:	xor    al,0x53
  42d475:	or     BYTE PTR [ebx-0x5ee4a5a8],ch
  42d47b:	pop    ebp
  42d47c:	ret    0xa115
  42d47f:	xor    DWORD PTR fs:[edi+ebp*2],edx
  42d483:	sysenter 
  42d485:	mov    esp,0x17457aed
  42d48a:	cmc    
  42d48b:	bound  ebp,QWORD PTR [esi+0x67]
  42d48e:	push   0xffffffb2
  42d490:	out    0xab,eax
  42d492:	sbb    al,0x81
  42d494:	ds jmp 0x42d502
  42d497:	add    ebx,edx
  42d499:	lock outs dx,DWORD PTR ds:[esi]
  42d49b:	aam    0xd
  42d49d:	bound  edi,QWORD PTR [ecx+ebp*4]
  42d4a0:	cmp    eax,DWORD PTR [ecx+eax*4+0x3fac93af]
  42d4a7:	lea    ebx,[edx]
  42d4a9:	jecxz  0x42d463
  42d4ab:	adc    edx,DWORD PTR [eax-0x1f5e5227]
  42d4b1:	sbb    bh,BYTE PTR [esi+0x1d]
  42d4b4:	and    dh,dl
  42d4b6:	add    eax,0xeb7fb48d
  42d4bb:	or     DWORD PTR [edx+0x6925b48],0xffffffbf
  42d4c2:	je     0x42d444
  42d4c4:	push   ebp
  42d4c5:	mov    eax,ds:0xc86e3d65
  42d4ca:	les    esi,FWORD PTR [edi]
  42d4cc:	mov    dl,0xda
  42d4ce:	cmp    eax,0xee03a994
  42d4d3:	std    
  42d4d4:	stos   BYTE PTR es:[edi],al
  42d4d5:	ins    BYTE PTR es:[edi],dx
  42d4d6:	mov    ebx,0xe44ff421
  42d4db:	lahf   
  42d4dc:	sahf   
  42d4dd:	add    dh,BYTE PTR [eax+0x971ca8b]
  42d4e3:	imul   edx,DWORD PTR [edi-0x618ed188],0x99415145
  42d4ed:	or     DWORD PTR [ecx+0x9],eax
  42d4f0:	push   eax
  42d4f1:	adc    BYTE PTR [ebp+0x50],dl
  42d4f4:	xchg   esp,eax
  42d4f5:	inc    esi
  42d4f6:	xchg   esi,eax
  42d4f7:	mov    eax,ds:0x235c268c
  42d4fc:	jb     0x42d4ca
  42d4fe:	iret   
  42d4ff:	js     0x42d56b
  42d501:	xchg   ebp,eax
  42d502:	addr16 ss into 
  42d505:	sub    DWORD PTR [eax],ecx
  42d507:	out    0x20,al
  42d509:	idiv   BYTE PTR [ecx]
  42d50b:	out    dx,eax
  42d50c:	clc    
  42d50d:	frstor [ecx+eax*1+0x4b]
  42d511:	popf   
  42d512:	(bad)  
  42d514:	jg     0x42d4b4
  42d516:	std    
  42d517:	mov    eax,ds:0xce99e502
  42d51c:	mov    es,WORD PTR [ecx]
  42d51e:	xchg   ebp,edx
  42d520:	in     al,0x14
  42d522:	xor    bl,bh
  42d524:	mov    ebx,0xc67042b6
  42d529:	mov    ch,0x62
  42d52b:	add    ah,0x7d
  42d52e:	dec    eax
  42d52f:	mov    ebx,0x6a06aa9f
  42d534:	sbb    BYTE PTR [ebp+0x424ccbb4],0x73
  42d53b:	es in  al,dx
  42d53d:	pop    es
  42d53e:	mov    eax,0x730856d6
  42d543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d544:	sub    esp,ebp
  42d546:	in     al,dx
  42d547:	mov    ch,0xb5
  42d549:	aas    
  42d54a:	in     eax,dx
  42d54b:	les    eax,FWORD PTR [edi-0x55f2725e]
  42d551:	pop    eax
  42d552:	mov    dl,0xa3
  42d554:	das    
  42d555:	cdq    
  42d556:	jae    0x42d50c
  42d558:	dec    eax
  42d559:	bound  ecx,QWORD PTR [eax+0x3f39d152]
  42d55f:	jp     0x42d4fd
  42d561:	mov    eax,0xf7fd136e
  42d566:	mov    esp,0x2f5fa5cf
  42d56b:	xchg   edx,eax
  42d56c:	ftst   
  42d56e:	or     ecx,esp
  42d570:	dec    ebp
  42d571:	mov    edi,0x4ac0d6cb
  42d576:	sbb    BYTE PTR [ecx],cl
  42d578:	mov    al,0x7e
  42d57a:	xor    BYTE PTR [edi+0x43],bh
  42d57d:	inc    ecx
  42d57e:	or     edx,ebx
  42d580:	dec    eax
  42d581:	or     ah,dh
  42d583:	std    
  42d584:	jmp    0x754b9f38
  42d589:	xchg   ebx,eax
  42d58a:	(bad)  
  42d58b:	pop    ebp
  42d58c:	stc    
  42d58d:	pop    eax
  42d58e:	clc    
  42d58f:	test   bh,bh
  42d591:	stos   BYTE PTR es:[edi],al
  42d592:	jae    0x42d598
  42d594:	inc    eax
  42d595:	je     0x42d609
  42d597:	outs   dx,BYTE PTR ds:[esi]
  42d598:	lahf   
  42d599:	(bad)  
  42d59a:	adc    dl,BYTE PTR [esi+0x17]
  42d59d:	mov    edx,0x12d31c3c
  42d5a2:	in     al,dx
  42d5a3:	shl    cl,cl
  42d5a5:	iret   
  42d5a6:	test   edi,edx
  42d5a8:	mov    esp,DWORD PTR [edi]
  42d5aa:	sti    
  42d5ab:	mov    dh,0x88
  42d5ad:	xchg   bl,bl
  42d5af:	jb     0x42d5f7
  42d5b1:	lods   eax,DWORD PTR ds:[esi]
  42d5b2:	in     al,0x67
  42d5b4:	push   0xfffffffb
  42d5b6:	mov    edx,DWORD PTR [ebp+0x6749eda]
  42d5bc:	fmul   QWORD PTR [esi-0x13087be7]
  42d5c2:	sahf   
  42d5c3:	repz mov ds:0x1c3d1b7,eax
  42d5c9:	or     al,0xb1
  42d5cb:	pushf  
  42d5cc:	dec    ebx
  42d5cd:	add    al,0xae
  42d5cf:	jne    0x42d583
  42d5d1:	dec    esp
  42d5d2:	cmp    al,0x5f
  42d5d4:	inc    ebx
  42d5d5:	repz inc ecx
  42d5d7:	in     eax,0x39
  42d5d9:	fdivr  DWORD PTR [esi-0x6964c004]
  42d5df:	test   BYTE PTR [esi],ch
  42d5e1:	daa    
  42d5e2:	lea    ebp,[edx+0x5dd7e1e6]
  42d5e8:	push   cs
  42d5e9:	cmp    al,BYTE PTR [ecx+edx*1+0x72e244eb]
  42d5f0:	cmc    
  42d5f1:	sub    eax,0xea847737
  42d5f6:	sbb    bl,BYTE PTR [edx-0x37648e56]
  42d5fc:	nop
  42d5fd:	fistp  WORD PTR ds:0x537b8f50
  42d603:	mov    ecx,0xf82fb14
  42d608:	add    eax,0x16e8d2a0
  42d60d:	jmp    0x42d62d
  42d60f:	mov    ds:0x6dfb0554,eax
  42d614:	lahf   
  42d615:	aad    0x34
  42d617:	(bad)  
  42d618:	test   DWORD PTR [edx+0x1b],ebp
  42d61b:	shr    BYTE PTR [esi+0x47c312d0],1
  42d621:	jbe    0x42d60f
  42d623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d624:	sbb    eax,0x753599
  42d629:	and    ah,bh
  42d62b:	pushf  
  42d62c:	aas    
  42d62d:	ss xchg esi,eax
  42d62f:	fsub   QWORD PTR [ebp+0x67]
  42d632:	jg     0x42d625
  42d634:	shr    DWORD PTR [ecx+edi*2],0x7d
  42d638:	aam    0xe4
  42d63a:	out    0x6a,eax
  42d63c:	aam    0x6a
  42d63e:	adc    al,0xc6
  42d640:	xchg   esi,eax
  42d641:	ss mov al,0xd9
  42d644:	push   0x96ddb4b6
  42d649:	gs fs je 0x42d5e1
  42d64d:	mov    ch,BYTE PTR [eax+0x8]
  42d650:	push   esp
  42d651:	loopne 0x42d5db
  42d653:	call   0xef57addd
  42d658:	cld    
  42d659:	sub    al,0x9b
  42d65b:	scas   eax,DWORD PTR es:[edi]
  42d65c:	aad    0x53
  42d65e:	sti    
  42d65f:	xor    BYTE PTR ds:0x3027eaf3,dh
  42d665:	lods   eax,DWORD PTR ds:[esi]
  42d666:	and    al,BYTE PTR [ecx-0x65]
  42d669:	mov    ch,0x6
  42d66b:	rcl    bl,1
  42d66d:	pop    ebp
  42d66e:	push   esi
  42d66f:	inc    ebx
  42d670:	inc    esi
  42d671:	or     ecx,DWORD PTR [edx+ecx*8]
  42d674:	and    dh,BYTE PTR [edi+0x2b]
  42d677:	cmp    al,BYTE PTR [ecx]
  42d679:	xchg   BYTE PTR [ebx-0x7d],dh
  42d67c:	inc    ebp
  42d67d:	xchg   ecx,eax
  42d67e:	jne    0x42d6a2
  42d680:	push   edx
  42d681:	es out 0x5c,al
  42d684:	loop   0x42d6d4
  42d686:	and    BYTE PTR [ebx+ebx*2],0x21
  42d68a:	fdiv   st(0),st
  42d68c:	int3   
  42d68d:	add    BYTE PTR [edx-0x3f],0x4d
  42d691:	mov    ecx,0x2a5089dd
  42d696:	pop    ebp
  42d697:	fsub   st(6),st
  42d699:	mov    cl,0x19
  42d69b:	mov    ds:0xafce6946,eax
  42d6a0:	scas   eax,DWORD PTR es:[edi]
  42d6a1:	ss push sp
  42d6a4:	sahf   
  42d6a5:	or     al,0x9e
  42d6a7:	(bad)  
  42d6a8:	cwde   
  42d6a9:	aaa    
  42d6aa:	out    0xe1,eax
  42d6ac:	in     al,dx
  42d6ad:	inc    esp
  42d6ae:	lods   al,BYTE PTR ds:[esi]
  42d6af:	xor    al,BYTE PTR [edx+0x17]
  42d6b2:	cmp    esp,DWORD PTR [esi+0x15]
  42d6b5:	(bad)  
  42d6b6:	push   ebp
  42d6b7:	vmwrite edi,DWORD PTR [edi-0x6c38f3d7]
  42d6be:	add    al,0x47
  42d6c0:	and    BYTE PTR [ecx+0xe],al
  42d6c3:	add    al,cl
  42d6c5:	clc    
  42d6c6:	and    eax,0xd89e8011
  42d6cb:	jge    0x42d747
  42d6cd:	(bad)
  42d6d2:	mov    ch,0x99
  42d6d4:	pop    es
  42d6d5:	rcr    BYTE PTR [eax+0x74f17557],cl
  42d6db:	jmp    0x615e:0xabe4094f
  42d6e2:	ss dec ecx
  42d6e4:	fadd   QWORD PTR [ebx+0x74886531]
  42d6ea:	test   DWORD PTR [edx-0xb],eax
  42d6ed:	adc    BYTE PTR [ecx+edi*8],cl
  42d6f0:	scas   eax,DWORD PTR es:[edi]
  42d6f1:	enter  0x3f86,0x20
  42d6f5:	retf   0xd954
  42d6f8:	scas   al,BYTE PTR es:[edi]
  42d6f9:	mov    dh,BYTE PTR [edi+0x4991efc6]
  42d6ff:	lahf   
  42d700:	lahf   
  42d701:	dec    ecx
  42d702:	bound  ecx,QWORD PTR [ebp+esi*2+0x4a7c8419]
  42d709:	sti    
  42d70a:	fild   WORD PTR [eax]
  42d70c:	in     eax,dx
  42d70d:	je     0x42d6f7
  42d70f:	outs   dx,DWORD PTR ds:[esi]
  42d710:	add    edx,DWORD PTR [eax+0x2]
  42d713:	ss or  al,0xf9
  42d716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d718:	cmp    DWORD PTR [esi],esi
  42d71a:	loopne 0x42d731
  42d71c:	bound  edi,QWORD PTR es:[ebp-0x309d242e]
  42d723:	popf   
  42d724:	xchg   ebp,eax
  42d725:	cmp    BYTE PTR [edi+0x45],cl
  42d728:	push   ecx
  42d729:	and    cl,bl
  42d72b:	or     DWORD PTR [ebx-0x24],esi
  42d72e:	dec    ebp
  42d72f:	mov    edx,eax
  42d731:	xchg   edi,eax
  42d732:	xchg   edi,eax
  42d733:	hlt    
  42d734:	mov    ebp,0x6308cd91
  42d739:	sub    ebx,ebp
  42d73b:	add    DWORD PTR [ebp-0x1f5870f9],ebx
  42d741:	std    
  42d742:	ds stos BYTE PTR es:[edi],al
  42d744:	aad    0x56
  42d746:	lahf   
  42d747:	adc    al,BYTE PTR [ecx+edx*1-0x4a]
  42d74b:	adc    bh,ch
  42d74d:	cmp    ebp,esp
  42d74f:	pop    eax
  42d750:	out    dx,al
  42d751:	xchg   edx,eax
  42d752:	ds (bad) 
  42d755:	fnstenv [eax-0x6c]
  42d758:	push   0x74
  42d75a:	in     al,dx
  42d75b:	sbb    eax,0x3113fe70
  42d760:	adc    bl,ah
  42d762:	test   eax,0x2d302871
  42d767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d768:	push   eax
  42d769:	daa    
  42d76a:	fdecstp 
  42d76c:	nop    DWORD PTR [eax-0x61a62203]
  42d773:	pop    ecx
  42d774:	xchg   ebx,eax
  42d775:	inc    edi
  42d776:	jns    0x42d7a9
  42d778:	and    esp,esp
  42d77a:	popa   
  42d77b:	retf   
  42d77c:	push   ss
  42d77d:	jns    0x42d7bb
  42d77f:	stos   BYTE PTR es:[edi],al
  42d780:	mov    bh,bh
  42d782:	loope  0x42d709
  42d784:	ins    BYTE PTR es:[edi],dx
  42d785:	sbb    al,0x8b
  42d787:	sub    eax,0xaf3c1a08
  42d78c:	mov    bl,0x86
  42d78e:	aas    
  42d78f:	gs sub esp,ebx
  42d792:	mov    ah,0xef
  42d794:	je     0x42d7b2
  42d796:	pushf  
  42d797:	or     edx,DWORD PTR [esp+eax*4-0x13]
  42d79b:	mov    eax,0x9832c38a
  42d7a0:	cmp    esp,DWORD PTR [edi+ebx*8-0x2f889b53]
  42d7a7:	jp     0x42d7a2
  42d7a9:	div    DWORD PTR [eax-0x6d01c233]
  42d7af:	sub    BYTE PTR [edi],dh
  42d7b1:	sub    esp,DWORD PTR [ecx-0x27a70f8e]
  42d7b7:	mov    ds:0xebd6c2dc,eax
  42d7bc:	call   0x66315879
  42d7c1:	add    al,0x9
  42d7c3:	xor    DWORD PTR [ecx],esi
  42d7c5:	pop    ebp
  42d7c6:	xchg   ecx,eax
  42d7c7:	sub    BYTE PTR gs:[ebx-0x5e],cl
  42d7cb:	mov    cl,0x4a
  42d7cd:	xchg   DWORD PTR [ecx-0x1b185342],esi
  42d7d3:	push   eax
  42d7d4:	pop    ebp
  42d7d5:	sub    eax,0xe0462ebf
  42d7da:	adc    DWORD PTR [ebp-0x56ab5360],0xffffff80
  42d7e1:	inc    ebx
  42d7e2:	add    al,0xd8
  42d7e4:	push   ebp
  42d7e5:	xor    dl,BYTE PTR [eax]
  42d7e7:	xor    ecx,edi
  42d7e9:	outs   dx,BYTE PTR ds:[esi]
  42d7ea:	out    0xe9,al
  42d7ec:	sbb    edi,DWORD PTR [ebp-0x3fdf5fb6]
  42d7f2:	fiadd  DWORD PTR [ecx+eiz*1]
  42d7f5:	inc    ebp
  42d7f6:	xor    eax,0xbf242265
  42d7fb:	daa    
  42d7fc:	pop    ebp
  42d7fd:	outs   dx,DWORD PTR ds:[esi]
  42d7fe:	enter  0x7e91,0x16
  42d802:	sub    esi,DWORD PTR es:[bx+di]
  42d806:	mul    BYTE PTR [ebx]
  42d808:	mov    BYTE PTR [eax+0x2edc96bb],cl
  42d80e:	pop    ebx
  42d80f:	fcomp  DWORD PTR [edi]
  42d811:	loopne 0x42d83e
  42d813:	and    dh,bl
  42d815:	jne    0x42d86e
  42d817:	pushf  
  42d818:	ins    BYTE PTR es:[edi],dx
  42d819:	pop    ecx
  42d81a:	xor    al,0x9e
  42d81c:	mov    eax,ds:0xbc419bf0
  42d821:	repz sbb BYTE PTR [edx],cl
  42d824:	pop    edx
  42d825:	call   0xffaa29ba
  42d82a:	mov    BYTE PTR [eax-0xbeb1462],ch
  42d830:	inc    esi
  42d831:	xchg   esp,eax
  42d832:	fld    st(7)
  42d834:	fild   QWORD PTR [eax]
  42d836:	daa    
  42d837:	xor    esi,ebx
  42d839:	xchg   edx,eax
  42d83a:	dec    edi
  42d83b:	inc    edx
  42d83c:	ret    
  42d83d:	cmp    BYTE PTR [eax+0x4b],0x76
  42d841:	outs   dx,BYTE PTR ds:[esi]
  42d842:	mov    dl,0xd4
  42d844:	imul   edi,DWORD PTR [esi+0x5d736a6b],0x49395637
  42d84e:	jecxz  0x42d8c4
  42d850:	cs jl  0x42d7f7
  42d853:	loop   0x42d8d3
  42d855:	cmp    ch,BYTE PTR [eax]
  42d857:	cmp    edi,DWORD PTR [ebx]
  42d859:	and    esp,DWORD PTR [ebp+0x26]
  42d85c:	ficomp WORD PTR [ebp+0x29]
  42d85f:	sub    ecx,ebx
  42d861:	icebp  
  42d862:	(bad)  
  42d863:	pop    ds
  42d864:	imul   esi,DWORD PTR [ebp+0x54f593b2],0x12ae1f4e
  42d86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d86f:	cs lahf 
  42d871:	pop    ds
  42d872:	out    0x65,al
  42d874:	imul   ebp,ebx,0x9aea118a
  42d87a:	out    dx,al
  42d87b:	fsubr  QWORD PTR [ebx-0x172f3261]
  42d881:	push   es
  42d882:	sbb    ecx,edx
  42d884:	dec    ebx
  42d885:	mov    ebx,0xc6c6cfb3
  42d88a:	scas   eax,DWORD PTR es:[edi]
  42d88b:	pop    esp
  42d88c:	je     0x42d816
  42d88e:	dec    edx
  42d88f:	push   0x59
  42d891:	mov    BYTE PTR [eax+0x3afb969a],cl
  42d897:	pop    esp
  42d898:	and    dh,BYTE PTR [esi]
  42d89a:	mov    dh,0x75
  42d89c:	sub    dh,ah
  42d89e:	inc    esp
  42d89f:	xchg   edi,eax
  42d8a0:	cli    
  42d8a1:	push   ebx
  42d8a2:	mov    al,ds:0xb5d56d88
  42d8a7:	inc    esp
  42d8a8:	neg    DWORD PTR [ebp-0x513eb03d]
  42d8ae:	ins    BYTE PTR es:[edi],dx
  42d8af:	add    cl,BYTE PTR [edi-0x24b65b8a]
  42d8b5:	sahf   
  42d8b6:	hlt    
  42d8b7:	cmc    
  42d8b8:	icebp  
  42d8b9:	jmp    0x1713f37e
  42d8be:	adc    al,al
  42d8c0:	lods   eax,DWORD PTR ds:[esi]
  42d8c1:	leave  
  42d8c2:	fs pushf 
  42d8c4:	stos   DWORD PTR es:[edi],eax
  42d8c5:	out    0xed,eax
  42d8c7:	sbb    BYTE PTR [ebp+ebx*1+0x3b08af2],0xcb
  42d8cf:	retf   0x33fa
  42d8d2:	int3   
  42d8d3:	push   edi
  42d8d4:	scas   eax,DWORD PTR es:[edi]
  42d8d5:	lea    eax,[edx-0x108f9ed1]
  42d8db:	mov    ebx,0x893da5a9
  42d8e0:	or     ebx,edi
  42d8e2:	lea    ecx,[edi]
  42d8e4:	sub    bl,BYTE PTR [ecx]
  42d8e6:	(bad)  
  42d8e7:	jo     0x42d959
  42d8e9:	stos   BYTE PTR es:[edi],al
  42d8ea:	cmp    eax,0x7198f6de
  42d8ef:	sub    edi,edx
  42d8f1:	sbb    al,0x4f
  42d8f3:	cld    
  42d8f4:	mov    al,0xaa
  42d8f6:	sbb    dh,BYTE PTR [ebx+0x2cfa47c5]
  42d8fc:	add    al,0x7b
  42d8fe:	retf   0x4575
  42d901:	mov    ch,0x8d
  42d903:	stos   DWORD PTR es:[edi],eax
  42d904:	lea    ebx,[edi]
  42d906:	icebp  
  42d907:	mov    edx,0x6d1c0549
  42d90c:	lds    esp,FWORD PTR [ebx+0x4972b00e]
  42d912:	leave  
  42d913:	addr16 sahf 
  42d915:	add    bl,BYTE PTR [edx]
  42d917:	inc    edx
  42d918:	cli    
  42d919:	push   edi
  42d91a:	das    
  42d91b:	dec    ebp
  42d91c:	xchg   BYTE PTR [eax],dh
  42d91e:	xlat   BYTE PTR ds:[ebx]
  42d91f:	in     eax,0x61
  42d921:	stos   BYTE PTR es:[edi],al
  42d922:	xchg   BYTE PTR ds:[esp+eiz*4],bl
  42d926:	sbb    eax,eax
  42d928:	mov    al,0x22
  42d92a:	stos   DWORD PTR es:[edi],eax
  42d92b:	out    0x8e,al
  42d92d:	aas    
  42d92e:	mov    esp,0x6423996a
  42d933:	in     al,dx
  42d934:	push   esp
  42d935:	out    0xc4,al
  42d937:	push   ebx
  42d938:	pusha  
  42d939:	sar    BYTE PTR [edx+0x2a],1
  42d93c:	xchg   al,ch
  42d93e:	inc    esp
  42d93f:	xor    al,BYTE PTR [ecx]
  42d941:	jecxz  0x42d8e8
  42d943:	jle    0x42d933
  42d945:	into   
  42d946:	jo     0x42d91d
  42d948:	outs   dx,DWORD PTR ds:[esi]
  42d949:	js     0x42d92f
  42d94b:	sub    ecx,esi
  42d94d:	stos   BYTE PTR es:[edi],al
  42d94e:	dec    ebp
  42d94f:	mov    al,0xe
  42d951:	xor    BYTE PTR [esi],cl
  42d953:	push   0x34b4d51e
  42d958:	xchg   esi,eax
  42d959:	or     DWORD PTR [edx+0x9a6f12f],edx
  42d95f:	leave  
  42d960:	dec    ebx
  42d961:	shl    BYTE PTR [edx+0xbbcda38],cl
  42d967:	jle    0x42d917
  42d969:	fdiv   st(2),st
  42d96b:	xor    DWORD PTR [edi-0xb0b513],eax
  42d971:	or     al,0x0
  42d973:	adc    al,0x11
  42d975:	adc    dl,BYTE PTR [esi]
  42d977:	mov    edi,0x4c8980d0
  42d97c:	xlat   BYTE PTR ds:[ebx]
  42d97d:	pop    edi
  42d97e:	imul   ebp
  42d980:	jnp    0x42d91e
  42d982:	dec    ebx
  42d983:	push   esi
  42d984:	and    al,0x6e
  42d986:	(bad)  
  42d988:	pop    es
  42d989:	and    bh,BYTE PTR [ecx+0x15]
  42d98c:	cmp    dl,BYTE PTR [ebx-0x40a99a6e]
  42d992:	int3   
  42d993:	xor    dl,0x11
  42d996:	enter  0x8771,0xf9
  42d99a:	(bad)  
  42d99b:	cmc    
  42d99c:	lahf   
  42d99d:	in     eax,0x68
  42d99f:	shr    dl,1
  42d9a1:	jmp    0xbce2:0x925b9ddb
  42d9a8:	iret   
  42d9a9:	(bad)  
  42d9aa:	pop    eax
  42d9ab:	lods   al,BYTE PTR ds:[esi]
  42d9ac:	in     eax,dx
  42d9ad:	pop    ebx
  42d9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9af:	in     al,0x3e
  42d9b1:	arpl   WORD PTR [ecx+ebx*1],sp
  42d9b4:	push   ecx
  42d9b5:	loope  0x42da14
  42d9b7:	sbb    al,0x7
  42d9b9:	xor    eax,DWORD PTR [esi-0x85e6514]
  42d9bf:	ret    
  42d9c0:	mov    al,0x29
  42d9c2:	xor    eax,0x86ca0ea
  42d9c7:	stc    
  42d9c8:	mov    ds:0xa6b80f55,al
  42d9cd:	xchg   ecx,eax
  42d9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9cf:	jb     0x42da36
  42d9d1:	pop    esi
  42d9d2:	mov    al,0x1f
  42d9d4:	sbb    ebx,0x1e03ca19
  42d9da:	lock dec edi
  42d9dc:	add    dl,BYTE PTR [ebx+0x4f]
  42d9df:	scas   al,BYTE PTR es:[edi]
  42d9e0:	sti    
  42d9e1:	jp     0x42d9db
  42d9e3:	test   al,al
  42d9e5:	test   DWORD PTR [esp+ecx*4-0x27614639],edx
  42d9ec:	mov    WORD PTR [edx+ebx*4-0x11],?
  42d9f0:	sbb    eax,DWORD PTR [edi+0x20393aae]
  42d9f6:	ss lahf 
  42d9f8:	push   cs
  42d9f9:	test   al,0x5
  42d9fb:	mov    bh,0x3c
  42d9fd:	or     DWORD PTR [ebx-0x46],ebp
  42da00:	mov    al,0xa7
  42da02:	sbb    al,0xf6
  42da04:	test   eax,0xa8a08253
  42da09:	(bad)  
  42da0a:	fbstp  TBYTE PTR [eax+0xa9597fe]
  42da10:	push   eax
  42da11:	adc    edx,edx
  42da13:	mov    bh,0x96
  42da15:	xor    ebx,eax
  42da17:	jmp    0x42d9c3
  42da19:	dec    ecx
  42da1a:	es xor al,0x40
  42da1d:	cdq    
  42da1e:	pop    ecx
  42da1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da20:	fwait
  42da21:	repnz xor dh,BYTE PTR [ebp+0xa]
  42da25:	rcl    BYTE PTR [esi+0x5a42701a],1
  42da2b:	push   edi
  42da2c:	call   0x33e3:0x57aa1b46
  42da33:	shl    BYTE PTR [ebx*4+0x455f9918],0xd1
  42da3b:	ins    DWORD PTR es:[edi],dx
  42da3c:	dec    esi
  42da3d:	sub    BYTE PTR [eax],bh
  42da3f:	jo     0x42da65
  42da41:	xchg   edx,eax
  42da42:	sub    dl,dh
  42da44:	(bad)  
  42da45:	icebp  
  42da46:	loopne 0x42da25
  42da48:	aam    0xeb
  42da4a:	mov    bh,0xe
  42da4c:	inc    edx
  42da4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da4e:	pop    esi
  42da4f:	dec    edx
  42da50:	mov    eax,0x35aabedf
  42da55:	push   esp
  42da56:	ds jno 0x42da43
  42da59:	test   eax,0xe502c8ef
  42da5e:	icebp  
  42da5f:	inc    ecx
  42da60:	int3   
  42da61:	cdq    
  42da62:	ds push ecx
  42da64:	sbb    DWORD PTR cs:[esi],ebx
  42da67:	inc    ebx
  42da68:	jnp    0x42da2e
  42da6a:	lahf   
  42da6b:	jge    0x42dad0
  42da6d:	sub    ecx,DWORD PTR [ebp-0x71]
  42da70:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42da72:	and    bh,BYTE PTR [esi+0x0]
  42da75:	jne    0x42da0a
  42da77:	rcr    DWORD PTR [edx+0x309dd8af],cl
  42da7d:	pop    ebx
  42da7e:	cmp    edx,DWORD PTR [ebp+0x4d]
  42da81:	bswap  esi
  42da83:	test   DWORD PTR [ecx-0x278cc33b],ebx
  42da89:	pop    esp
  42da8a:	aas    
  42da8b:	es out dx,al
  42da8d:	xchg   edx,eax
  42da8e:	mov    dl,0x74
  42da90:	addr16 mov ch,0x6
  42da93:	(bad)  
  42da94:	lea    ebx,[edx]
  42da96:	push   cs
  42da97:	push   edi
  42da98:	mov    cs:0x845f305f,al
  42da9e:	inc    eax
  42da9f:	cmp    BYTE PTR [esi-0x68],dh
  42daa2:	(bad)
  42daa5:	mov    dl,bl
  42daa7:	sbb    DWORD PTR [ebp+0x3c50e8a7],ebp
  42daad:	pop    ecx
  42daae:	and    eax,esp
  42dab0:	sbb    eax,0x94be54d
  42dab5:	popa   
  42dab6:	push   ecx
  42dab7:	mov    cl,0x7
  42dab9:	in     al,dx
  42daba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dabb:	imul   esi,DWORD PTR [ecx-0x4c1b241b],0xfc0f85a0
  42dac5:	adc    al,BYTE PTR [ecx+0x47]
  42dac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dac9:	mov    ebx,0xdafe81ea
  42dace:	fistp  WORD PTR [ebx]
  42dad0:	add    al,bl
  42dad2:	std    
  42dad3:	fwait
  42dad4:	mov    ecx,0x9a030b18
  42dad9:	pop    ebx
  42dada:	add    al,0xf4
  42dadc:	dec    esp
  42dadd:	push   ebp
  42dade:	rcl    BYTE PTR [ebx],cl
  42dae0:	xor    esi,DWORD PTR [edx+ebp*4+0x78e37b81]
  42dae7:	xchg   ebx,eax
  42dae8:	fld    TBYTE PTR [edi+0x56]
  42daeb:	popf   
  42daec:	icebp  
  42daed:	pop    ebp
  42daee:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42daf0:	sub    DWORD PTR [esi+0x6767a0fd],ecx
  42daf6:	gs out 0xaf,eax
  42daf9:	retf   
  42dafa:	jbe    0x42db38
  42dafc:	stos   BYTE PTR es:[edi],al
  42dafd:	popa   
  42dafe:	mov    ch,0x36
  42db00:	xchg   DWORD PTR [ebx],ecx
  42db02:	jnp    0x42da9f
  42db04:	xchg   edi,eax
  42db05:	imul   esp,DWORD PTR [ebx],0xb75269e1
  42db0b:	int3   
  42db0c:	mov    ebx,0xe4ec0319
  42db11:	ret    
  42db12:	mov    esp,0x64eaaf02
  42db17:	pop    esi
  42db18:	out    dx,eax
  42db19:	mov    dh,0x5a
  42db1b:	mov    BYTE PTR [ecx],al
  42db1d:	mov    esp,0xb270ed66
  42db22:	jbe    0x42db51
  42db24:	pop    edi
  42db25:	xchg   ebp,eax
  42db26:	jp     0x42db49
  42db28:	sub    DWORD PTR [edx],ebx
  42db2a:	ja     0x42db5d
  42db2c:	cmp    edx,DWORD PTR [eax]
  42db2e:	push   es
  42db2f:	fnsave [ebp+0x14]
  42db32:	(bad)  
  42db34:	and    eax,0x100ec7d8
  42db39:	pop    esp
  42db3a:	aad    0x7e
  42db3c:	push   0xdc62900a
  42db41:	fldenv [ebp+0x1296ecbd]
  42db47:	push   esp
  42db48:	and    edx,DWORD PTR ds:0xc0a15a74
  42db4e:	test   al,0x38
  42db50:	push   es
  42db51:	ret    0xc354
  42db54:	sub    esp,ecx
  42db56:	imul   BYTE PTR [ecx-0x734dbdf7]
  42db5c:	xor    dl,bh
  42db5e:	and    al,BYTE PTR [ebx-0x2e]
  42db61:	loopne 0x42db40
  42db63:	aaa    
  42db64:	hlt    
  42db65:	xchg   DWORD PTR es:[edi],esp
  42db68:	push   ebx
  42db69:	pop    edi
  42db6a:	mov    edi,0xa906bdbf
  42db6f:	push   ebx
  42db70:	mov    edx,0xc40cf240
  42db75:	out    0x11,al
  42db77:	inc    edi
  42db78:	sbb    BYTE PTR [ebp-0x22],0x47
  42db7c:	push   ds
  42db7d:	std    
  42db7e:	add    al,0x16
  42db80:	push   edi
  42db81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db82:	push   es
  42db83:	pushf  
  42db84:	cmp    BYTE PTR [edx-0x11de28b7],cl
  42db8a:	mov    al,0x84
  42db8c:	jno    0x42dbfa
  42db8e:	shl    DWORD PTR [edi+0xc],1
  42db91:	xchg   BYTE PTR [ebx],ch
  42db93:	lahf   
  42db94:	inc    ecx
  42db95:	jb     0x42db5e
  42db97:	push   eax
  42db98:	inc    eax
  42db99:	jle    0x42db3f
  42db9b:	xchg   edx,eax
  42db9c:	jb     0x42db6e
  42db9e:	daa    
  42db9f:	loopne 0x42dbc5
  42dba1:	and    ecx,ecx
  42dba3:	cmp    ebx,esi
  42dba5:	imul   DWORD PTR [edx-0x1b]
  42dba8:	(bad)  
  42dbaa:	jae    0x42dc11
  42dbac:	in     al,dx
  42dbad:	jne    0x42dc2a
  42dbaf:	pop    ebx
  42dbb0:	xchg   esi,eax
  42dbb1:	and    bh,BYTE PTR [edx-0x5aef2bb9]
  42dbb7:	jl     0x42db95
  42dbb9:	iret   
  42dbba:	xor    BYTE PTR [eax+ecx*2+0x7e651d9a],0xa8
  42dbc2:	xor    BYTE PTR [ecx],0x4a
  42dbc5:	push   ebx
  42dbc6:	adc    DWORD PTR [esi],ecx
  42dbc8:	or     ch,bl
  42dbca:	or     DWORD PTR [edx],esp
  42dbcc:	repnz push ebx
  42dbce:	addr16 sahf 
  42dbd0:	sbb    al,0x16
  42dbd2:	push   ss
  42dbd3:	pop    esi
  42dbd4:	push   0x270ec64e
  42dbd9:	stos   BYTE PTR es:[edi],al
  42dbda:	sbb    al,dh
  42dbdc:	in     eax,0xbf
  42dbde:	mov    bh,0xd1
  42dbe0:	cli    
  42dbe1:	inc    ecx
  42dbe2:	outs   dx,BYTE PTR ds:[esi]
  42dbe3:	push   edi
  42dbe4:	sub    ebx,DWORD PTR ds:0x1315fd1e
  42dbea:	cdq    
  42dbeb:	stc    
  42dbec:	test   al,0xc7
  42dbee:	imul   edx,DWORD PTR [ebp+0x207e4a00],0x2f127fbb
  42dbf8:	lea    eax,[ebp+0x79]
  42dbfb:	mov    ch,0xb7
  42dbfd:	gs ss fs add al,cl
  42dc02:	lahf   
  42dc03:	pop    ecx
  42dc04:	mov    ch,0xc
  42dc06:	sub    cl,BYTE PTR [ecx+edi*4+0x1e]
  42dc0a:	in     al,dx
  42dc0b:	pop    esp
  42dc0c:	jg     0x42dc3c
  42dc0e:	stos   DWORD PTR es:[edi],eax
  42dc0f:	add    ch,0xa8
  42dc12:	out    dx,eax
  42dc13:	inc    ebp
  42dc14:	aam    0xf5
  42dc16:	or     dh,BYTE PTR [esi]
  42dc18:	xchg   esp,eax
  42dc19:	cld    
  42dc1a:	jno    0x42dc48
  42dc1c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42dc1e:	xchg   ecx,eax
  42dc1f:	mov    WORD PTR [edi-0x1b26a953],ss
  42dc25:	or     ecx,DWORD PTR ds:0x14c7b7
  42dc2b:	xor    BYTE PTR [eax-0x2c],0xe7
  42dc2f:	lods   eax,DWORD PTR ds:[esi]
  42dc30:	test   al,0x78
  42dc32:	popa   
  42dc33:	aaa    
  42dc34:	hlt    
  42dc35:	pop    ebx
  42dc36:	dec    esp
  42dc37:	mov    bh,0xb
  42dc39:	(bad)  
  42dc3b:	dec    edi
  42dc3c:	ins    DWORD PTR es:[edi],dx
  42dc3d:	test   eax,0x24282f7a
  42dc42:	in     al,0xa5
  42dc44:	cli    
  42dc45:	adc    BYTE PTR [esi-0x135ae547],ah
  42dc4b:	in     eax,dx
  42dc4c:	dec    eax
  42dc4d:	ret    0xd3f3
  42dc50:	jbe    0x42dbf6
  42dc52:	cwde   
  42dc53:	enter  0xe4e7,0x13
  42dc57:	aaa    
  42dc58:	xor    al,0x69
  42dc5a:	lahf   
  42dc5b:	mov    eax,ds:0x2690b0c9
  42dc60:	rcr    DWORD PTR ds:0x127c612a,cl
  42dc66:	push   edi
  42dc67:	mov    ebx,DWORD PTR [esi+ecx*2]
  42dc6a:	and    al,0x59
  42dc6c:	ret    
  42dc6d:	dec    esp
  42dc6e:	stos   BYTE PTR es:[edi],al
  42dc6f:	je     0x42dcdb
  42dc71:	std    
  42dc72:	jmp    0x6ae80db3
  42dc77:	scas   eax,DWORD PTR es:[edi]
  42dc78:	inc    esi
  42dc79:	inc    ebp
  42dc7a:	or     al,0x2b
  42dc7c:	push   es
  42dc7d:	jge    0x42dc4d
  42dc7f:	inc    ebx
  42dc80:	adc    ebx,ebx
  42dc82:	call   0xe878:0xf532594
  42dc89:	sbb    al,0x86
  42dc8b:	and    al,0xec
  42dc8d:	rcr    dl,cl
  42dc8f:	pop    ecx
  42dc90:	es pop ds
  42dc92:	add    al,0xea
  42dc94:	scas   al,BYTE PTR es:[edi]
  42dc95:	push   ebx
  42dc96:	mov    esp,0x722a9617
  42dc9b:	dec    esi
  42dc9c:	push   ecx
  42dc9d:	push   esp
  42dc9e:	mov    ds:0x7710c49b,eax
  42dca3:	sti    
  42dca4:	mov    DWORD PTR [ebp-0x55],edx
  42dca7:	(bad)
  42dcab:	dec    eax
  42dcac:	int3   
  42dcad:	pop    esi
  42dcae:	and    ch,BYTE PTR [edi+0x2d]
  42dcb1:	aas    
  42dcb2:	and    edx,DWORD PTR [ebp+0x3fe387e7]
  42dcb8:	imul   esp,DWORD PTR [esp+edi*8+0x775b1f40],0xffffffee
  42dcc0:	dec    eax
  42dcc1:	and    BYTE PTR [ecx+eiz*2+0x75],al
  42dcc5:	sub    ecx,DWORD PTR [esi]
  42dcc7:	jae    0x42dcb5
  42dcc9:	xor    ecx,DWORD PTR [esi]
  42dccb:	out    dx,al
  42dccc:	adc    al,0x92
  42dcce:	int    0x1d
  42dcd0:	test   esp,eax
  42dcd2:	test   esp,esp
  42dcd4:	add    al,0xe0
  42dcd6:	stc    
  42dcd7:	test   eax,0xef2c9fc1
  42dcdc:	jp     0x42dc96
  42dcde:	and    ch,BYTE PTR [edi]
  42dce0:	leave  
  42dce1:	jmp    0x8604:0x2b763e34
  42dce8:	sub    esp,DWORD PTR [eax]
  42dcea:	imul   edi,ebp,0x7b
  42dced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dcee:	imul   DWORD PTR [edi-0x21a5681f]
  42dcf4:	mov    cl,0x33
  42dcf6:	jmp    0x42dd25
  42dcf8:	(bad)  
  42dcf9:	leave  
  42dcfa:	adc    ebp,eax
  42dcfc:	push   esi
  42dcfd:	jl     0x42dcde
  42dcff:	lea    esi,[ebp-0x30c9c10]
  42dd05:	mov    eax,0xedcd52f5
  42dd0a:	or     eax,DWORD PTR [ecx+0x2b]
  42dd0d:	and    BYTE PTR [bp+si],0x1a
  42dd11:	mov    gs,WORD PTR [esi-0x51]
  42dd14:	mov    bh,BYTE PTR [edi-0x6]
  42dd17:	push   es
  42dd18:	outs   dx,DWORD PTR ds:[esi]
  42dd19:	cld    
  42dd1a:	imul   ebp,DWORD PTR [ebp-0x55868354],0x442eb76f
  42dd24:	imul   ebp,DWORD PTR [ebx],0x1e4e84f
  42dd2a:	cmp    BYTE PTR [esi-0x80],al
  42dd2d:	sub    edx,DWORD PTR [edi-0x5c]
  42dd30:	ins    BYTE PTR es:[edi],dx
  42dd31:	fcomip st,st(7)
  42dd33:	lds    ecx,FWORD PTR [esi+0x28]
  42dd36:	sti    
  42dd37:	mov    edi,0x4e6f171
  42dd3c:	fs (bad) 
  42dd3e:	sti    
  42dd3f:	mov    cl,0x90
  42dd41:	cli    
  42dd42:	cmp    DWORD PTR fs:[ebp-0x76],ecx
  42dd46:	out    dx,eax
  42dd47:	xchg   ecx,eax
  42dd48:	es ret 0x7add
  42dd4c:	test   BYTE PTR [edi+0x18],0x44
  42dd50:	lock int 0xc1
  42dd53:	mov    edi,0xf05a5afc
  42dd58:	push   ebp
  42dd59:	add    al,BYTE PTR [ebx]
  42dd5b:	rcr    DWORD PTR [ebx+0x5b],0xeb
  42dd5f:	mov    ds:0xe799baed,al
  42dd64:	retf   
  42dd65:	mov    esi,0xf91d1815
  42dd6a:	or     al,0x6b
  42dd6c:	les    edi,FWORD PTR [eax-0x2a25d3fc]
  42dd72:	jge    0x42dd03
  42dd74:	(bad)  
  42dd75:	pop    esp
  42dd76:	(bad)  
  42dd77:	cmp    eax,0x19484b37
  42dd7c:	mov    bh,0xd7
  42dd7e:	sub    ecx,DWORD PTR [esi]
  42dd80:	iret   
  42dd81:	ja     0x42dd94
  42dd83:	into   
  42dd84:	std    
  42dd85:	into   
  42dd86:	ret    0x381f
  42dd89:	loope  0x42ddbb
  42dd8b:	cwde   
  42dd8c:	mov    ebx,0x6089b891
  42dd91:	jge    0x42dd8e
  42dd93:	cmp    al,0x6f
  42dd95:	imul   eax,DWORD PTR [eax+edi*4+0x7eaae6a0],0xd299a8ce
  42dda0:	mov    ds:0x88c4162d,al
  42dda5:	iret   
  42dda6:	cmp    eax,0xaed8f2c8
  42ddab:	out    dx,eax
  42ddac:	adc    esi,DWORD PTR [ebx-0x59]
  42ddaf:	add    al,0xf4
  42ddb1:	ja     0x42dda7
  42ddb3:	out    dx,al
  42ddb4:	mov    ebp,0x99092d58
  42ddb9:	mov    esp,0x7e427baa
  42ddbe:	and    DWORD PTR [esi+0x5a],ecx
  42ddc1:	jmp    0xe1ea:0xe8a44d79
  42ddc8:	sti    
  42ddc9:	pop    ss
  42ddca:	pop    esp
  42ddcb:	add    eax,edx
  42ddcd:	outs   dx,DWORD PTR ds:[esi]
  42ddce:	stos   BYTE PTR es:[edi],al
  42ddcf:	adc    eax,DWORD PTR [ebp+0x409177fd]
  42ddd5:	in     al,dx
  42ddd6:	mov    ds:0x7197e51a,al
  42dddb:	push   edi
  42dddc:	call   0x27d9fb2c
  42dde1:	mov    esi,0x6b8c520
  42dde6:	lock scas eax,DWORD PTR es:[edi]
  42dde8:	ss stc 
  42ddea:	(bad)  
  42ddeb:	retf   0xcd8a
  42ddee:	or     BYTE PTR [ebx-0x25],bl
  42ddf1:	aam    0x1a
  42ddf3:	ja     0x42de31
  42ddf5:	cs stc 
  42ddf7:	fdiv   DWORD PTR [esi+0x35841dc1]
  42ddfd:	fsub   DWORD PTR [ebx-0x40ddbb15]
  42de03:	add    bh,BYTE PTR [eax]
  42de05:	mov    dl,0xfa
  42de07:	mov    esp,0xb2cddf6d
  42de0c:	jo     0x42de6c
  42de0e:	pop    es
  42de0f:	ror    BYTE PTR [ebx+0x76],1
  42de12:	fwait
  42de13:	sbb    esp,DWORD PTR [ebx-0x70]
  42de16:	mov    eax,ds:0xd55a4897
  42de1b:	push   ebp
  42de1c:	jb     0x42de8e
  42de1e:	fs dec edi
  42de20:	xchg   ebp,eax
  42de21:	int    0x9a
  42de23:	sar    DWORD PTR [eax+0x6d],0x2a
  42de27:	add    BYTE PTR [ecx-0x1e50369],dh
  42de2d:	sub    BYTE PTR [edx+0x359c6b38],bh
  42de33:	mov    al,ds:0xc063399b
  42de38:	test   BYTE PTR [ecx+ecx*1+0x1d],0x35
  42de3d:	jno    0x42de45
  42de3f:	(bad)  
  42de40:	cwde   
  42de41:	jg     0x42dde2
  42de43:	out    0x56,al
  42de45:	sbb    DWORD PTR [edx+0xbc98f61],ecx
  42de4b:	jne    0x42de98
  42de4d:	jne    0x42de3b
  42de4f:	mov    ch,0x1a
  42de51:	dec    esp
  42de52:	nop
  42de53:	lea    eax,[ebx]
  42de55:	cld    
  42de56:	mov    esi,0x44ab75fe
  42de5b:	mov    bl,0xbc
  42de5d:	(bad)  
  42de60:	ins    BYTE PTR es:[edi],dx
  42de61:	out    dx,eax
  42de62:	mov    dh,0x88
  42de64:	cmp    eax,DWORD PTR [ecx+0x6d]
  42de67:	mov    ds:0x557306cb,eax
  42de6c:	lods   eax,DWORD PTR ds:[esi]
  42de6d:	fiadd  WORD PTR [eax-0x16043940]
  42de73:	cdq    
  42de74:	arpl   WORD PTR [edi-0x2a9d400e],bp
  42de7a:	aad    0x5f
  42de7c:	repnz test BYTE PTR [ebp-0x5],dh
  42de80:	nop
  42de81:	mov    ch,0xb2
  42de83:	sbb    esi,DWORD PTR [eax-0x61]
  42de86:	mov    ds:0x41fa3600,eax
  42de8b:	nop
  42de8c:	imul   BYTE PTR [eax]
  42de8e:	mov    esi,0xba5c40d1
  42de93:	push   edi
  42de94:	mov    ebx,DWORD PTR [ebp+0x394135f9]
  42de9a:	ror    edx,1
  42de9c:	and    BYTE PTR [ebx-0x2c],dh
  42de9f:	das    
  42dea0:	loope  0x42de2b
  42dea2:	xor    BYTE PTR [ebx+0x5d],cl
  42dea5:	mov    eax,ds:0xd6213157
  42deaa:	js     0x42de61
  42deac:	ret    
  42dead:	cli    
  42deae:	ficom  WORD PTR [esi]
  42deb0:	jne    0x42de61
  42deb2:	xchg   ebx,eax
  42deb3:	sub    esp,DWORD PTR [edi+0x33]
  42deb6:	outs   dx,BYTE PTR ds:[esi]
  42deb7:	(bad)  
  42deb8:	pop    ds
  42deb9:	mov    ?,WORD PTR [edx]
  42debb:	add    BYTE PTR [ecx+0x21],ah
  42debe:	add    eax,0x219a2e51
  42dec3:	inc    ebx
  42dec4:	out    0xb8,eax
  42dec6:	xor    esi,edi
  42dec8:	mov    cl,0x0
  42deca:	fdiv   QWORD PTR [ebx+0x4f]
  42decd:	fdiv   QWORD PTR [edi+0x73]
  42ded0:	jbe    0x42dec2
  42ded2:	inc    edi
  42ded3:	pusha  
  42ded4:	std    
  42ded5:	pop    ebp
  42ded6:	add    eax,0xe55296ab
  42dedb:	lea    esi,[ecx+0x18]
  42dede:	loopne 0x42decb
  42dee0:	pop    ecx
  42dee1:	int    0x17
  42dee3:	fild   QWORD PTR [ecx+0x72]
  42dee6:	fcomip st,st(7)
  42dee8:	iret   
  42dee9:	sbb    eax,0x245f038d
  42deee:	ror    DWORD PTR [ebp+0x556bbf69],0x59
  42def5:	push   ds
  42def6:	or     eax,0x1478b58d
  42defb:	dec    esi
  42defc:	sub    eax,0xdec85ea1
  42df01:	mov    al,0x89
  42df03:	out    dx,al
  42df04:	pop    edi
  42df05:	jns    0x42ded5
  42df07:	jmp    0x42df76
  42df09:	add    ah,BYTE PTR [eax-0x6e2f7a7b]
  42df0f:	push   ds
  42df10:	arpl   di,di
  42df12:	and    edx,edi
  42df14:	sub    al,0x21
  42df16:	iret   
  42df17:	scas   al,BYTE PTR es:[edi]
  42df18:	(bad)  
  42df19:	lods   eax,DWORD PTR ds:[esi]
  42df1a:	test   esp,ecx
  42df1c:	jmp    0x6ab4:0x2bb4e460
  42df23:	dec    edi
  42df24:	xchg   edi,eax
  42df25:	pop    edx
  42df26:	loopne 0x42df7d
  42df28:	jns    0x42dee0
  42df2a:	lods   eax,DWORD PTR ds:[esi]
  42df2b:	mov    edx,0xa4696aea
  42df30:	or     al,0x58
  42df32:	aad    0x5c
  42df34:	dec    edi
  42df35:	in     al,dx
  42df36:	push   ss
  42df37:	jle    0x42dee7
  42df39:	out    dx,eax
  42df3a:	(bad)  
  42df3b:	and    al,0x11
  42df3d:	cwde   
  42df3e:	mov    ds:0x46d3dd00,eax
  42df43:	dec    esp
  42df44:	mov    eax,0x5cbefd12
  42df49:	int    0x7f
  42df4b:	int3   
  42df4c:	inc    ebp
  42df4d:	lds    edx,FWORD PTR [eax+ecx*2]
  42df50:	imul   ah
  42df52:	sar    BYTE PTR [ebp-0x61],cl
  42df55:	xor    DWORD PTR [eax],eax
  42df57:	jle    0x42df9b
  42df59:	sar    BYTE PTR [ebx-0x473ea23f],0x1d
  42df60:	push   es
  42df61:	(bad)  
  42df62:	pop    esp
  42df63:	scas   al,BYTE PTR es:[edi]
  42df64:	scas   al,BYTE PTR es:[edi]
  42df65:	sub    eax,0x4a388a25
  42df6a:	pushf  
  42df6b:	outs   dx,DWORD PTR cs:[esi]
  42df6d:	sub    al,0xe9
  42df6f:	cdq    
  42df70:	stc    
  42df71:	inc    esi
  42df72:	call   0x6e490d98
  42df77:	mov    dh,0x36
  42df79:	gs push eax
  42df7b:	mov    ds:0x82524528,eax
  42df80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df81:	cld    
  42df82:	in     eax,dx
  42df83:	jbe    0x42df66
  42df85:	inc    eax
  42df86:	scas   al,BYTE PTR es:[edi]
  42df87:	fcom   QWORD PTR [ebp+0x16]
  42df8a:	sub    dh,BYTE PTR [ebp+0xbbf687]
  42df90:	arpl   WORD PTR [ecx+edx*1-0x35],ax
  42df94:	adc    BYTE PTR [ecx],ch
  42df96:	sbb    DWORD PTR [eax],ebp
  42df98:	and    BYTE PTR [eax],dh
  42df9a:	push   edx
  42df9b:	add    eax,0x80bb23ab
  42dfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfa1:	sti    
  42dfa2:	jo     0x42df57
  42dfa4:	test   DWORD PTR [ebx-0x7],0x4153c15a
  42dfab:	and    dh,ch
  42dfad:	mov    ds:0x93a529e7,al
  42dfb2:	cmc    
  42dfb3:	fnsave [ecx-0x1e4db972]
  42dfb9:	mov    edx,0x81cdb4c
  42dfbe:	fs sbb cl,ch
  42dfc1:	je     0x42e019
  42dfc3:	in     al,0xc0
  42dfc5:	xor    al,0x7b
  42dfc7:	push   edi
  42dfc8:	int3   
  42dfc9:	inc    edi
  42dfca:	clc    
  42dfcb:	outs   dx,DWORD PTR ds:[esi]
  42dfcc:	xchg   DWORD PTR [ebp+0x3840295d],esp
  42dfd2:	push   0x6ccbbc16
  42dfd7:	jmp    0xd37061c7
  42dfdc:	das    
  42dfdd:	(bad)  
  42dfde:	fstp   DWORD PTR [edi+0x246e2254]
  42dfe4:	call   FWORD PTR [eax]
  42dfe6:	add    esp,esi
  42dfe8:	mov    bl,0xf5
  42dfea:	shl    BYTE PTR [edx],0xc8
  42dfed:	das    
  42dfee:	xor    eax,0xaafa8130
  42dff3:	loope  0x42dff1
  42dff5:	ins    DWORD PTR es:[edi],dx
  42dff6:	pop    esp
  42dff7:	dec    ebp
  42dff8:	pop    edx
  42dff9:	(bad)  
  42dffb:	nop
  42dffc:	and    DWORD PTR [esi],ecx
  42dffe:	std    
  42dfff:	mov    ah,0x16
  42e001:	adc    dh,BYTE PTR [edx]
  42e003:	cmp    DWORD PTR [ecx-0x46],eax
  42e006:	ins    BYTE PTR es:[edi],dx
  42e007:	or     ch,bl
  42e009:	jnp    0x42df9c
  42e00b:	dec    ebp
  42e00c:	pop    ecx
  42e00d:	mov    al,ds:0x89755f07
  42e012:	(bad)  
  42e014:	fsub   DWORD PTR [ecx-0x3bcf96b3]
  42e01a:	repnz dec ebx
  42e01c:	loope  0x42e030
  42e01e:	mov    ch,0x4f
  42e020:	dec    esi
  42e021:	dec    esp
  42e022:	pusha  
  42e023:	sub    DWORD PTR [ebx+0x2c],eax
  42e026:	and    DWORD PTR cs:[ebp-0x50],esi
  42e02a:	sbb    BYTE PTR [esi+esi*8+0x16],dh
  42e02e:	out    0xcc,eax
  42e030:	mov    BYTE PTR [esi],0xb3
  42e033:	test   al,0x8f
  42e035:	call   0x13db:0xe57af0a5
  42e03c:	cs out dx,eax
  42e03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e03f:	sub    ah,BYTE PTR [edi+0x6018e4cf]
  42e045:	xchg   ebx,eax
  42e046:	add    edx,esi
  42e048:	mov    cl,0x59
  42e04a:	xor    eax,0xd99468ec
  42e04f:	(bad)  
  42e051:	or     al,0x7b
  42e053:	inc    esp
  42e054:	dec    edx
  42e055:	mov    ch,ah
  42e057:	mov    esi,0xdc67419c
  42e05c:	inc    edi
  42e05d:	into   
  42e05e:	or     al,0xf7
  42e060:	popa   
  42e061:	cwde   
  42e062:	adc    DWORD PTR [esi+0x3e8d4bb8],edx
  42e068:	shr    DWORD PTR [edx-0x317e6d97],cl
  42e06e:	mov    bl,0x1e
  42e070:	outs   dx,BYTE PTR ds:[esi]
  42e071:	ficom  DWORD PTR [eax+0x17]
  42e074:	mov    bl,0xbc
  42e076:	pop    ebx
  42e077:	(bad)  
  42e078:	(bad)  
  42e079:	data16 mov WORD PTR [esi+0x2],cs
  42e07d:	sti    
  42e07e:	and    dl,bh
  42e080:	dec    ebp
  42e081:	pop    edi
  42e082:	gs pop edx
  42e084:	arpl   WORD PTR [ebx],cx
  42e086:	mov    ebp,0xbd900dd7
  42e08b:	out    0x4,al
  42e08d:	mov    al,ds:0x4429e0c6
  42e092:	addr16 dec ebx
  42e094:	je     0x42e0fc
  42e096:	pop    es
  42e097:	pop    ecx
  42e098:	arpl   WORD PTR [edi+0x5360e9d2],di
  42e09e:	retf   
  42e09f:	jno    0x42e0fd
  42e0a1:	add    al,0xfa
  42e0a3:	out    0xf3,al
  42e0a5:	xchg   ebx,eax
  42e0a6:	sti    
  42e0a7:	adc    DWORD PTR [ebx+0x3b],edx
  42e0aa:	xchg   edx,eax
  42e0ab:	cmp    DWORD PTR [eax],esp
  42e0ad:	ss push ebp
  42e0af:	shl    BYTE PTR [ebp+0x7e4f5cca],cl
  42e0b5:	scas   al,BYTE PTR es:[edi]
  42e0b6:	xor    dh,al
  42e0b8:	pop    ebx
  42e0b9:	jae    0x42e114
  42e0bb:	scas   eax,DWORD PTR es:[edi]
  42e0bc:	aas    
  42e0bd:	xor    al,0x72
  42e0bf:	and    bh,BYTE PTR [eax]
  42e0c1:	jle    0x42e066
  42e0c3:	out    0x4e,al
  42e0c5:	in     eax,dx
  42e0c6:	dec    ebp
  42e0c7:	adc    dh,BYTE PTR [ebx+0x7]
  42e0ca:	lods   al,BYTE PTR ds:[esi]
  42e0cb:	push   0x48bd60a7
  42e0d0:	or     eax,0x8b9b18cb
  42e0d5:	mov    eax,0xfe36771e
  42e0da:	push   ds
  42e0db:	es cwde 
  42e0dd:	cmc    
  42e0de:	xor    ebx,edx
  42e0e0:	repz mov al,0x4a
  42e0e3:	imul   DWORD PTR [edx+0x2b57787d]
  42e0e9:	int    0x3c
  42e0eb:	out    dx,al
  42e0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0ed:	mov    al,bh
  42e0ef:	adc    eax,0xff3b9a31
  42e0f4:	mov    ds:0xe0806f1c,al
  42e0f9:	lods   al,BYTE PTR ds:[esi]
  42e0fa:	dec    dx
  42e0fc:	push   ebp
  42e0fd:	in     al,0xf8
  42e0ff:	sub    al,0x13
  42e101:	push   ebp
  42e102:	dec    ebp
  42e103:	or     eax,0x59d80e48
  42e108:	popa   
  42e109:	addr16 mov eax,cs:0xde76
  42e10e:	push   ecx
  42e10f:	sti    
  42e110:	xchg   ebx,eax
  42e111:	rol    BYTE PTR [edx+0x22],1
  42e114:	mov    al,0x18
  42e116:	out    0x48,al
  42e118:	xchg   ebp,eax
  42e119:	jno    0x42e0ea
  42e11b:	xor    al,0xb6
  42e11d:	ret    
  42e11e:	add    al,0xdb
  42e120:	mov    dh,0xea
  42e122:	pop    ebp
  42e123:	cwde   
  42e124:	xor    esi,DWORD PTR [eax-0x53ca8966]
  42e12a:	retf   
  42e12b:	jno    0x42e1a3
  42e12d:	inc    edx
  42e12e:	push   ss
  42e12f:	adc    eax,0x58a8c905
  42e134:	and    al,0x38
  42e136:	dec    ecx
  42e137:	and    al,0x56
  42e139:	xor    ecx,DWORD PTR [ebp-0x3912758c]
  42e13f:	daa    
  42e140:	pop    eax
  42e141:	ss xchg esi,eax
  42e143:	mov    ch,0xa3
  42e145:	jns    0x42e0fb
  42e147:	fld    QWORD PTR [ebx-0x14]
  42e14a:	mov    edx,0x7e01a53a
  42e14f:	pop    edx
  42e150:	push   ds
  42e151:	mov    ebp,0x18f004e6
  42e156:	dec    edx
  42e157:	or     al,0xd
  42e159:	(bad)  
  42e15b:	imul   eax,DWORD PTR [edx+ebx*2],0xe398e367
  42e162:	out    dx,al
  42e163:	add    eax,0xbca12386
  42e168:	sbb    BYTE PTR [edx],ch
  42e16a:	pop    esi
  42e16b:	pop    ebp
  42e16c:	repnz pop edi
  42e16e:	inc    eax
  42e16f:	fwait
  42e170:	test   DWORD PTR [ebx],esp
  42e172:	pusha  
  42e173:	xor    DWORD PTR [edi+0x690de29],0x27
  42e17a:	jle    0x42e1b8
  42e17c:	or     bl,ah
  42e17e:	in     al,0xf6
  42e180:	mov    cl,0x49
  42e182:	and    eax,0x81a4c42
  42e187:	test   al,0x18
  42e189:	or     al,BYTE PTR [esi+0x373de6eb]
  42e18f:	jne    0x42e124
  42e191:	loop   0x42e1da
  42e193:	out    0x5b,eax
  42e195:	inc    ecx
  42e196:	or     BYTE PTR ds:0x3a7f098b,dl
  42e19c:	xchg   ebp,eax
  42e19d:	rcr    BYTE PTR [esi],cl
  42e19f:	sub    BYTE PTR [ecx],bl
  42e1a1:	or     DWORD PTR [eax+edi*2],ebp
  42e1a4:	push   eax
  42e1a5:	xchg   ecx,eax
  42e1a6:	in     al,0x1c
  42e1a8:	dec    ecx
  42e1a9:	gs xchg edx,eax
  42e1ab:	dec    eax
  42e1ac:	xchg   ebp,eax
  42e1ad:	les    esp,FWORD PTR [ebx+0x6df7a9bd]
  42e1b3:	hlt    
  42e1b4:	dec    BYTE PTR [esi+0x5894c5e6]
  42e1ba:	mov    ebp,0x54a821fc
  42e1bf:	popf   
  42e1c0:	xor    edx,DWORD PTR [edi]
  42e1c2:	jge    0x42e22f
  42e1c4:	add    dl,BYTE PTR [esi]
  42e1c6:	ds data16 (bad) 
  42e1c9:	call   0xdb95:0x1dabdb48
  42e1d0:	or     al,0x96
  42e1d2:	cmp    al,0xa2
  42e1d4:	adc    edi,DWORD PTR [edx]
  42e1d6:	pusha  
  42e1d7:	mov    dh,0xd4
  42e1d9:	inc    esi
  42e1da:	neg    DWORD PTR [ebx]
  42e1dc:	push   eax
  42e1dd:	mov    ebx,0xa3450b40
  42e1e2:	sbb    eax,0xeb68a0aa
  42e1e7:	push   cs
  42e1e8:	aad    0x42
  42e1ea:	rol    BYTE PTR [esi],cl
  42e1ec:	xor    eax,0x31e10b33
  42e1f1:	push   ds
  42e1f2:	clc    
  42e1f3:	retf   
  42e1f4:	das    
  42e1f5:	pop    ebp
  42e1f6:	dec    ebp
  42e1f7:	push   ecx
  42e1f8:	out    0xd5,al
  42e1fa:	aad    0xc2
  42e1fc:	xor    ebx,DWORD PTR [ecx-0x20bdadd3]
  42e202:	out    0xca,al
  42e204:	lods   al,BYTE PTR ds:[esi]
  42e205:	sub    BYTE PTR [esi],0xb5
  42e208:	gs jle 0x42e1bd
  42e20b:	xchg   ebx,eax
  42e20c:	pop    esp
  42e20d:	out    0x68,al
  42e20f:	or     BYTE PTR [esi-0x7f],ch
  42e212:	mov    cl,0x31
  42e214:	aaa    
  42e215:	into   
  42e216:	add    bl,0x28
  42e219:	cli    
  42e21a:	dec    edx
  42e21b:	pop    eax
  42e21c:	mov    DWORD PTR [ecx],eax
  42e21e:	jmp    0x42e1b8
  42e220:	dec    esp
  42e221:	sub    eax,0x57c8c1f5
  42e226:	mov    BYTE PTR ds:0x876579eb,ch
  42e22c:	pop    es
  42e22d:	jp     0x42e24e
  42e22f:	xor    eax,0x3d004fa6
  42e234:	outs   dx,DWORD PTR ds:[esi]
  42e235:	retf   
  42e236:	lods   al,BYTE PTR ds:[esi]
  42e237:	leave  
  42e238:	cmp    cl,BYTE PTR [esi-0x97288c4]
  42e23e:	loop   0x42e26e
  42e240:	sub    DWORD PTR [eax+0x64],edi
  42e243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e244:	push   edx
  42e245:	jno    0x42e275
  42e247:	jg     0x42e297
  42e249:	popa   
  42e24a:	mov    eax,0xd0f6eac6
  42e24f:	out    0xd,al
  42e251:	or     BYTE PTR [eax+0x8],dh
  42e254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e255:	ins    DWORD PTR es:[edi],dx
  42e256:	sub    al,0x25
  42e258:	jecxz  0x42e261
  42e25a:	mov    edi,DWORD PTR [edi+0x64aa5162]
  42e260:	cmp    DWORD PTR [eax],eax
  42e262:	mov    bl,0xe
  42e264:	dec    esp
  42e265:	enter  0x182e,0xae
  42e269:	inc    ecx
  42e26a:	push   0xffffffeb
  42e26c:	pop    edi
  42e26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e26e:	pop    ebx
  42e26f:	jae    0x42e27a
  42e271:	xor    al,0x4a
  42e273:	xchg   ebp,eax
  42e274:	xchg   esp,eax
  42e275:	dec    edi
  42e276:	js     0x42e28b
  42e278:	fst    DWORD PTR [ebx-0x4d]
  42e27b:	xchg   edi,eax
  42e27c:	jle    0x42e22e
  42e27e:	cmp    al,0xe3
  42e280:	or     DWORD PTR [ecx+0x7e4edc1],ebx
  42e286:	sbb    ecx,ecx
  42e288:	mov    ebp,0x6ba4e880
  42e28d:	pusha  
  42e28e:	mov    ah,0x1a
  42e290:	mov    BYTE PTR [esi-0x42],dl
  42e293:	and    ah,ah
  42e295:	dec    ebx
  42e296:	(bad)  
  42e297:	cmp    DWORD PTR [esi],ebp
  42e299:	ret    0xd561
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	sub    ebx,esp
  42e29f:	loope  0x42e25b
  42e2a1:	ins    DWORD PTR es:[edi],dx
  42e2a2:	adc    BYTE PTR [esi+0x59ca3b39],dl
  42e2a8:	arpl   ax,ax
  42e2aa:	hlt    
  42e2ab:	jmp    0x42e249
  42e2ad:	stos   DWORD PTR es:[edi],eax
  42e2ae:	mov    edx,DWORD PTR [esi+0x3]
  42e2b1:	jge    0x42e2b2
  42e2b3:	cmp    al,0x41
  42e2b5:	sub    esi,DWORD PTR [ebx-0x2f22f5f1]
  42e2bb:	jecxz  0x42e26a
  42e2bd:	push   esi
  42e2bf:	cmp    bh,ch
  42e2c1:	scas   al,BYTE PTR es:[edi]
  42e2c2:	push   cs
  42e2c3:	sbb    dl,BYTE PTR [edi+eiz*8-0x5d]
  42e2c7:	scas   eax,DWORD PTR es:[edi]
  42e2c8:	and    al,0x3c
  42e2ca:	inc    edi
  42e2cb:	pusha  
  42e2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2cd:	rol    BYTE PTR [ecx+0x4c4252bd],0xce
  42e2d4:	pop    ebx
  42e2d5:	jmp    0xd509b795
  42e2da:	sbb    al,0xca
  42e2dc:	or     esp,edi
  42e2de:	push   ds
  42e2df:	inc    esp
  42e2e0:	push   ss
  42e2e1:	addr16 mov al,ds:0x4f5f
  42e2e5:	mov    dh,0x31
  42e2e7:	and    ah,dh
  42e2e9:	sbb    eax,0xb561fc04
  42e2ee:	test   BYTE PTR [edx+0x13],bl
  42e2f1:	inc    ebp
  42e2f2:	test   eax,0x611b2b95
  42e2f7:	jae    0x42e27e
  42e2f9:	sbb    eax,0xc666c7a5
  42e2fe:	xor    esi,DWORD PTR [ecx-0x45]
  42e301:	or     BYTE PTR [ecx],dh
  42e303:	add    BYTE PTR [ecx-0x44],dl
  42e306:	sahf   
  42e307:	xchg   BYTE PTR [edx+0xa],ah
  42e30a:	dec    ebp
  42e30b:	popf   
  42e30c:	fnsave [ebp-0x23]
  42e30f:	fdiv   st(5),st
  42e311:	ins    BYTE PTR es:[edi],dx
  42e312:	aad    0xb0
  42e314:	push   edi
  42e315:	call   0xa663:0xeec9a4ea
  42e31c:	push   cs
  42e31d:	jmp    0x42e309
  42e31f:	in     al,dx
  42e320:	and    DWORD PTR [ebx],ebp
  42e322:	ins    DWORD PTR es:[edi],dx
  42e323:	cmp    bl,BYTE PTR [esi-0x3c]
  42e326:	pop    ds
  42e327:	scas   al,BYTE PTR es:[edi]
  42e328:	repz inc edi
  42e32a:	popf   
  42e32b:	loope  0x42e385
  42e32d:	clc    
  42e32e:	pop    ebx
  42e32f:	int3   
  42e330:	and    al,0xe0
  42e332:	xlat   BYTE PTR ds:[ebx]
  42e333:	mov    ss,WORD PTR [eax+ebx*1+0x4d]
  42e337:	jo     0x42e2ed
  42e339:	cwde   
  42e33a:	into   
  42e33b:	(bad)  
  42e33d:	call   0x9400349e
  42e342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e343:	and    edx,edx
  42e345:	sub    DWORD PTR [eax],esp
  42e347:	push   esp
  42e348:	mov    ds:0xc65b2b95,eax
  42e34d:	sub    DWORD PTR [ecx+0x66],ecx
  42e350:	jge    0x42e38c
  42e352:	push   ecx
  42e353:	jb     0x42e391
  42e355:	shr    eax,cl
  42e357:	gs jmp 0x3b34f67f
  42e35d:	adc    bl,ah
  42e35f:	cmp    edi,edi
  42e361:	push   DWORD PTR [esi]
  42e363:	or     ecx,DWORD PTR fs:[eax]
  42e366:	(bad)  
  42e367:	sub    DWORD PTR [esi],edx
  42e369:	xor    DWORD PTR [ebx-0x29073f08],ecx
  42e36f:	or     ah,ch
  42e371:	xor    BYTE PTR [eax+0xd182e3],0xa0
  42e378:	out    dx,al
  42e379:	call   0x94c4:0x4e52b806
  42e380:	mov    ah,0x3b
  42e382:	imul   edx,DWORD PTR [eax+0xc35b2df],0x9dd93c61
  42e38c:	fsub   QWORD PTR [edx-0xe845b29]
  42e392:	dec    ebx
  42e393:	xlat   BYTE PTR ds:[ebx]
  42e394:	(bad)  
  42e395:	es (bad) 
  42e397:	sbb    DWORD PTR [edi],0x72
  42e39a:	pop    edx
  42e39b:	inc    esi
  42e39c:	inc    ecx
  42e39d:	sub    ah,ah
  42e39f:	mov    al,ah
  42e3a1:	enter  0x2e5a,0x2a
  42e3a5:	int3   
  42e3a6:	xchg   edi,eax
  42e3a7:	push   ebp
  42e3a8:	mov    esi,0xbc22aa8e
  42e3ad:	outs   dx,BYTE PTR ds:[esi]
  42e3ae:	adc    eax,0xa60b1234
  42e3b3:	push   0xffffffb7
  42e3b5:	and    esi,DWORD PTR [edi+0x17]
  42e3b8:	jnp    0x42e3e6
  42e3ba:	add    DWORD PTR [edx],0xffffff90
  42e3bd:	cli    
  42e3be:	cmc    
  42e3bf:	mov    ebx,0x38b3c4d8
  42e3c4:	or     ch,0x92
  42e3c7:	jo     0x42e364
  42e3c9:	out    0x27,eax
  42e3cb:	lock or esi,ebp
  42e3ce:	retf   
  42e3cf:	icebp  
  42e3d0:	test   eax,edi
  42e3d2:	inc    ebp
  42e3d3:	in     eax,0xc8
  42e3d5:	pop    ecx
  42e3d6:	cmp    al,0x6d
  42e3d8:	mov    dh,0x7
  42e3da:	mov    ebx,0xd1dbb398
  42e3df:	mov    eax,0xbe12f4ec
  42e3e4:	imul   ebx,DWORD PTR [ecx],0xfffffff6
  42e3e7:	push   esp
  42e3e8:	sbb    edx,esp
  42e3ea:	mov    al,0x7b
  42e3ec:	hlt    
  42e3ed:	pop    ebp
  42e3ee:	or     al,0x78
  42e3f0:	sar    BYTE PTR [edx+0x74560ea1],cl
  42e3f6:	mov    ds,WORD PTR [edi+0x673843f2]
  42e3fc:	xchg   edi,eax
  42e3fd:	leave  
  42e3fe:	pop    ss
  42e3ff:	jl     0x42e42b
  42e401:	inc    edi
  42e402:	shl    al,1
  42e404:	dec    ebx
  42e405:	jae    0x42e3e8
  42e407:	stos   DWORD PTR es:[edi],eax
  42e408:	xor    ebp,ebx
  42e40a:	push   ebp
  42e40b:	test   eax,0xef8868b0
  42e410:	out    dx,al
  42e411:	enter  0x560f,0x29
  42e415:	iret   
  42e416:	or     al,BYTE PTR [edi-0x49]
  42e419:	cmp    DWORD PTR [ecx-0x7fe49b75],ebx
  42e41f:	adc    al,0x86
  42e421:	adc    ah,BYTE PTR [esi+0x62]
  42e424:	jnp    0x42e3ec
  42e426:	push   DWORD PTR ds:0x96e1e3b5
  42e42c:	loopne 0x42e42c
  42e42e:	sbb    esp,0x8ebc7717
  42e434:	jmp    0x691f:0xa49bb9fb
  42e43b:	xor    al,0xbb
  42e43d:	rcr    DWORD PTR [eax],1
  42e43f:	popa   
  42e440:	and    DWORD PTR [ebx-0x43],edi
  42e443:	ds mov ebx,0x7ef17aac
  42e449:	xchg   ebx,eax
  42e44a:	xchg   ebp,eax
  42e44b:	aas    
  42e44c:	sbb    bh,BYTE PTR [ebp-0x68]
  42e44f:	xchg   ebp,eax
  42e450:	ret    0x382a
  42e453:	push   ecx
  42e454:	push   es
  42e455:	ja     0x42e4ac
  42e457:	dec    esi
  42e458:	adc    al,0x8b
  42e45a:	and    eax,0x497f9b94
  42e45f:	cmp    edx,eax
  42e461:	xchg   esp,edx
  42e463:	sub    al,0xf0
  42e465:	jmp    0xa715887a
  42e46a:	push   esp
  42e46b:	pop    edi
  42e46c:	sahf   
  42e46d:	sbb    ah,BYTE PTR ds:0x3a006b1c
  42e473:	test   al,0xad
  42e475:	mov    bl,0xf
  42e477:	mov    eax,ds:0x513c6dbd
  42e47c:	and    ch,BYTE PTR [edx+eax*2-0x10c44fa1]
  42e483:	and    ecx,DWORD PTR [edx+eiz*1+0x18db9747]
  42e48a:	and    ch,BYTE PTR [ebp+0x35909913]
  42e490:	jnp    0x42e44e
  42e492:	call   0x65b286df
  42e497:	sbb    DWORD PTR [edx],esi
  42e499:	fdiv   DWORD PTR [eax]
  42e49b:	mov    bl,0x4
  42e49d:	mov    ds:0x3d1e3e64,eax
  42e4a2:	dec    BYTE PTR [edx-0x60]
  42e4a5:	jge    0x42e4d4
  42e4a7:	add    BYTE PTR [ebx+ecx*4],0x52
  42e4ab:	add    al,0x5b
  42e4ad:	xchg   ecx,eax
  42e4ae:	add    BYTE PTR [ebx+0x2f03a733],ch
  42e4b4:	push   0xffffffcc
  42e4b6:	dec    ebx
  42e4b7:	out    0xce,eax
  42e4b9:	dec    eax
  42e4ba:	in     al,dx
  42e4bb:	push   ds
  42e4bc:	mov    gs,esp
  42e4be:	sub    eax,edi
  42e4c0:	stos   DWORD PTR es:[edi],eax
  42e4c1:	or     BYTE PTR [edx-0x1a9d9375],ch
  42e4c7:	mov    ds:0x452e4c47,eax
  42e4cc:	outs   dx,DWORD PTR ds:[esi]
  42e4cd:	lahf   
  42e4ce:	call   DWORD PTR [edx+0x7d]
  42e4d1:	lods   al,BYTE PTR ds:[esi]
  42e4d2:	cmp    ah,ah
  42e4d4:	retf   
  42e4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4d6:	ret    
  42e4d7:	mov    ah,0x2f
  42e4d9:	(bad)  
  42e4da:	mov    al,ds:0x81ad15da
  42e4df:	dec    eax
  42e4e0:	out    0xfb,al
  42e4e2:	sub    ecx,esi
  42e4e4:	mov    bl,0x0
  42e4e6:	push   esp
  42e4e7:	and    eax,0x91e46c50
  42e4ec:	mul    DWORD PTR [ecx]
  42e4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4ef:	sbb    al,0x22
  42e4f1:	xor    al,0xcd
  42e4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4f5:	push   0x9
  42e4f7:	xlat   BYTE PTR ds:[ebx]
  42e4f8:	cdq    
  42e4f9:	mov    ds:0x54cffa4c,eax
  42e4fe:	push   edx
  42e4ff:	mov    bh,al
  42e501:	das    
  42e502:	(bad)  
  42e503:	push   es
  42e504:	sbb    bh,BYTE PTR [esp+eiz*4+0x41]
  42e508:	sub    ebx,DWORD PTR [ebx*8+0x4df00882]
  42e50f:	add    DWORD PTR [edx-0x2e9c589f],esi
  42e515:	fstp   DWORD PTR [edi-0x3]
  42e518:	dec    ebx
  42e519:	stc    
  42e51a:	cwde   
  42e51b:	xor    eax,0xf16133a9
  42e520:	push   edi
  42e521:	adc    DWORD PTR [eax+0x7957d00b],edx
  42e527:	push   0xffffffa8
  42e529:	ja     0x42e4e6
  42e52b:	in     al,0xd1
  42e52d:	inc    ebp
  42e52e:	lahf   
  42e52f:	inc    eax
  42e530:	nop
  42e531:	fs mov al,0x4
  42e534:	ss cli 
  42e536:	mov    ecx,0x533a2482
  42e53b:	popf   
  42e53c:	out    0xe0,eax
  42e53e:	jo     0x42e55a
  42e540:	cmp    cl,BYTE PTR [edi]
  42e542:	push   eax
  42e543:	push   eax
  42e544:	mov    BYTE PTR [eax-0x23ea2be4],dh
  42e54a:	inc    esp
  42e54b:	push   edx
  42e54c:	data16 shl BYTE PTR [eax+0x22],0x97
  42e551:	mov    BYTE PTR [ebp+0x36b285cb],ch
  42e557:	in     eax,0xe9
  42e559:	repz mov eax,0xa40d0fe0
  42e560:	and    al,0xfb
  42e562:	pop    esi
  42e563:	sub    ch,BYTE PTR [ebx-0x62]
  42e566:	mov    DWORD PTR [edi-0x2d],0x7c762581
  42e56d:	outs   dx,DWORD PTR ds:[esi]
  42e56e:	add    dh,dl
  42e570:	jne    0x42e5a7
  42e572:	stc    
  42e573:	(bad)  
  42e574:	pusha  
  42e575:	es ds test al,0xb8
  42e579:	jl     0x42e568
  42e57b:	adc    BYTE PTR [ecx-0x57],dl
  42e57e:	repz pop edx
  42e580:	outs   dx,BYTE PTR ds:[esi]
  42e581:	sbb    eax,0x2b7c01a4
  42e586:	sti    
  42e587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e588:	adc    ecx,DWORD PTR [edi+0x3e1cc908]
  42e58e:	inc    esp
  42e58f:	stc    
  42e590:	jg     0x42e5b1
  42e592:	(bad)  
  42e593:	int    0xd7
  42e595:	gs (bad) 
  42e598:	gs retf 
  42e59a:	sbb    al,0xa7
  42e59c:	xchg   ecx,eax
  42e59d:	repnz sub al,0xf1
  42e5a0:	adc    DWORD PTR [esi-0x22],0x34
  42e5a4:	hlt    
  42e5a5:	mov    ds,WORD PTR [ebx-0xc]
  42e5a8:	out    dx,eax
  42e5a9:	jle    0x42e5e7
  42e5ab:	or     BYTE PTR [edx+0x6a636ac8],ch
  42e5b1:	jns    0x42e542
  42e5b3:	arpl   WORD PTR [ecx-0x17],di
  42e5b6:	mov    eax,0xfa2ab842
  42e5bb:	mov    ecx,0xc2bc5a65
  42e5c0:	inc    edx
  42e5c1:	jmp    0xdba9:0x88cb2089
  42e5c8:	and    ecx,ecx
  42e5ca:	xor    esi,0x16c3b284
  42e5d0:	dec    ecx
  42e5d1:	ja     0x42e565
  42e5d3:	xor    BYTE PTR [esp+eiz*4-0x6b],ah
  42e5d7:	cwde   
  42e5d8:	sbb    eax,0xd74ed5bc
  42e5dd:	mov    ch,0x0
  42e5df:	pop    esp
  42e5e0:	test   al,0x62
  42e5e2:	fild   WORD PTR [eax]
  42e5e4:	xchg   BYTE PTR [eax-0x3e072f29],ch
  42e5ea:	mov    esi,0x4557639
  42e5ef:	inc    esi
  42e5f0:	jns    0x42e60e
  42e5f2:	ins    BYTE PTR es:[edi],dx
  42e5f3:	ins    BYTE PTR es:[edi],dx
  42e5f4:	inc    ebp
  42e5f5:	and    al,0x19
  42e5f7:	mov    ss,WORD PTR [ebx]
  42e5f9:	scas   eax,DWORD PTR es:[edi]
  42e5fa:	mov    dl,0x3
  42e5fc:	je     0x42e65d
  42e5fe:	movaps XMMWORD PTR [edi-0x64],xmm5
  42e602:	push   esp
  42e603:	xchg   ebp,eax
  42e604:	pop    eax
  42e605:	daa    
  42e606:	pop    ss
  42e607:	and    al,0xa0
  42e609:	mov    al,0xa5
  42e60b:	repz mov dh,0xf4
  42e60e:	push   0x51
  42e610:	nop
  42e611:	int3   
  42e612:	out    dx,al
  42e613:	jo     0x42e5f0
  42e615:	sbb    ebx,DWORD PTR [ebp+0x5d2941c6]
  42e61b:	add    eax,0x3833e943
  42e620:	ins    DWORD PTR es:[edi],dx
  42e621:	ds jns 0x42e60b
  42e624:	cld    
  42e625:	jbe    0x42e632
  42e627:	jle    0x42e5fd
  42e629:	repnz inc esp
  42e62b:	xchg   BYTE PTR [ebx+0x468662e4],bh
  42e631:	jle    0x42e638
  42e633:	fistp  QWORD PTR [esi]
  42e635:	sub    esi,DWORD PTR [eax]
  42e637:	push   eax
  42e638:	pop    ebp
  42e639:	push   0x3d78afa
  42e63e:	or     bh,ah
  42e640:	ret    0x4ec5
  42e643:	mov    bh,0x83
  42e645:	xchg   BYTE PTR [ecx],bl
  42e647:	pop    ebp
  42e648:	sbb    al,0xf8
  42e64a:	mov    ecx,0xaed7cb6d
  42e64f:	cmp    dl,BYTE PTR [ecx+0x166efaa1]
  42e655:	scas   eax,DWORD PTR es:[edi]
  42e656:	loope  0x42e68c
  42e658:	dec    ebp
  42e659:	xor    al,0xf
  42e65b:	out    0xc1,al
  42e65d:	icebp  
  42e65e:	scas   eax,DWORD PTR es:[edi]
  42e65f:	stmxcsr DWORD PTR [eax+0x30b1876c]
  42e666:	int3   
  42e667:	sbb    BYTE PTR [ebx-0x74],bh
  42e66a:	es push 0x77
  42e66d:	mov    ds:0x8579dcfc,eax
  42e672:	pop    ebx
  42e673:	retf   
  42e674:	mov    dh,0xbe
  42e676:	adc    al,0x22
  42e678:	aas    
  42e679:	cmc    
  42e67a:	mov    edx,0xa21b9774
  42e67f:	gs or  eax,0xb01e21dd
  42e685:	add    al,0x6c
  42e687:	aad    0x44
  42e689:	or     ebx,DWORD PTR [ecx-0x6b1123dc]
  42e68f:	inc    BYTE PTR [eax+0x10]
  42e692:	(bad)  
  42e693:	repz fwait
  42e695:	mov    dl,0x55
  42e697:	and    al,0xe4
  42e699:	mov    ah,0x1e
  42e69b:	sub    DWORD PTR [esi+ecx*1+0x77],ebx
  42e69f:	pusha  
  42e6a0:	jle    0x42e651
  42e6a2:	xchg   DWORD PTR [edx-0x1c1a703e],edx
  42e6a8:	dec    ecx
  42e6a9:	test   eax,0xc6a1c7d1
  42e6ae:	pop    ecx
  42e6af:	adc    cl,0xa4
  42e6b2:	jg     0x42e650
  42e6b4:	push   0x73b09e22
  42e6b9:	cs iret 
  42e6bb:	ins    BYTE PTR es:[edi],dx
  42e6bc:	mov    ch,0x5
  42e6be:	popa   
  42e6bf:	pop    edi
  42e6c0:	or     eax,0x343a8232
  42e6c5:	push   edi
  42e6c6:	mov    esp,0x70000ea8
  42e6cb:	jmp    0x42e6f9
  42e6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6ce:	mov    ecx,0xc17eae5
  42e6d3:	and    ah,BYTE PTR ds:0x1fc12e15
  42e6d9:	xchg   ebx,eax
  42e6da:	mov    ebx,0xce43a223
  42e6df:	jmp    0x42e735
  42e6e1:	stc    
  42e6e2:	int3   
  42e6e3:	pop    ebp
  42e6e4:	in     al,0xb0
  42e6e6:	dec    ebp
  42e6e7:	jne    0x42e683
  42e6e9:	push   cs
  42e6ea:	mov    esp,0x70aab34
  42e6ef:	mov    WORD PTR [edx+0x45],fs
  42e6f2:	and    esp,DWORD PTR [ebx]
  42e6f4:	push   es
  42e6f5:	sbb    ebp,DWORD PTR [edx+0x53836dae]
  42e6fb:	sub    al,0xa6
  42e6fd:	and    dl,ah
  42e6ff:	test   BYTE PTR [edx-0x487778bb],0x71
  42e706:	sbb    eax,0x1b4842d9
  42e70b:	jmp    0x880e:0xf4531009
  42e712:	or     DWORD PTR [ebp-0x2b],ecx
  42e715:	popf   
  42e716:	mov    bh,0xf4
  42e718:	mov    edi,0x6398a2ea
  42e71d:	jnp    0x42e76e
  42e71f:	lds    esp,FWORD PTR ds:0x2764c666
  42e725:	jmp    0x42e6b0
  42e727:	lods   al,BYTE PTR ds:[esi]
  42e728:	push   ecx
  42e729:	add    edx,edi
  42e72b:	out    0x26,eax
  42e72d:	inc    esp
  42e72e:	ss jae 0x42e76f
  42e731:	inc    esi
  42e732:	lock sub eax,0xf9b0926
  42e738:	mov    WORD PTR [ebp-0x29],ss
  42e73b:	push   eax
  42e73c:	rcl    BYTE PTR [ebx],cl
  42e73e:	ins    DWORD PTR es:[edi],dx
  42e73f:	jecxz  0x42e745
  42e741:	in     al,0xa2
  42e743:	adc    dh,BYTE PTR [ebp+0x51]
  42e746:	int3   
  42e747:	aam    0x9d
  42e749:	sbb    al,0x47
  42e74b:	aam    0x1c
  42e74d:	mov    ds:0x9953fd45,eax
  42e752:	mov    al,0x1a
  42e754:	(bad)  
  42e755:	loope  0x42e7c3
  42e757:	das    
  42e758:	or     ah,cl
  42e75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e75b:	(bad)  
  42e75c:	jns    0x42e7a6
  42e75e:	js     0x42e73b
  42e760:	rcl    ecx,1
  42e762:	shr    DWORD PTR ds:0xd5aecfd3,cl
  42e768:	xlat   BYTE PTR ds:[ebx]
  42e769:	popa   
  42e76a:	dec    esp
  42e76b:	and    al,0xf8
  42e76d:	jns    0x42e7cf
  42e76f:	push   0x51
  42e771:	jge    0x42e7ec
  42e773:	adc    edx,DWORD PTR [edx-0x12]
  42e776:	pop    ebp
  42e777:	call   0x1be9:0x3ed00393
  42e77e:	scas   eax,DWORD PTR es:[edi]
  42e77f:	test   BYTE PTR [ebx-0x67972942],cl
  42e785:	dec    edi
  42e786:	retf   0x114f
  42e789:	mov    esp,ds
  42e78b:	jmp    0xdf1e:0xd78bbe61
  42e792:	and    ebp,DWORD PTR [esi]
  42e794:	std    
  42e795:	lods   al,BYTE PTR ds:[esi]
  42e796:	pop    edi
  42e797:	les    esi,FWORD PTR [eax-0x3d13a4c2]
  42e79d:	hlt    
  42e79e:	and    ecx,DWORD PTR [ebp-0x870f833]
  42e7a4:	xchg   esi,eax
  42e7a5:	retf   
  42e7a6:	sub    ah,bl
  42e7a8:	test   eax,0xec522fd6
  42e7ad:	mov    ah,0xe6
  42e7af:	add    esp,esp
  42e7b1:	or     eax,DWORD PTR [edx+0x6973f5b8]
  42e7b7:	adc    al,BYTE PTR [eax-0x71044a60]
  42e7bd:	cmp    edi,DWORD PTR [eax+edi*1-0x3a]
  42e7c1:	pop    esi
  42e7c2:	popf   
  42e7c3:	pop    eax
  42e7c4:	into   
  42e7c5:	inc    edx
  42e7c6:	push   ss
  42e7c7:	stos   BYTE PTR es:[edi],al
  42e7c8:	sbb    eax,0x51e9d847
  42e7cd:	gs xor eax,0x8fb3d2a
  42e7d3:	mov    bl,0xfe
  42e7d5:	jmp    0x6cc8:0xfbda357
  42e7dc:	(bad)  
  42e7dd:	jp     0x42e7a1
  42e7df:	pop    ebp
  42e7e0:	out    0x7,eax
  42e7e2:	jmp    0xa0344361
  42e7e7:	not    BYTE PTR [ecx+0x68]
  42e7ea:	retf   
  42e7eb:	arpl   WORD PTR [ebx+edi*8-0x1bc686bb],di
  42e7f2:	jmp    0xc6280250
  42e7f7:	inc    ebx
  42e7f8:	dec    edi
  42e7f9:	mov    cl,0x3c
  42e7fb:	or     edx,DWORD PTR [eax-0x3719763d]
  42e801:	(bad)  
  42e802:	ret    
  42e803:	push   ds
  42e804:	mov    eax,0xc94efc6f
  42e809:	dec    edi
  42e80a:	pusha  
  42e80b:	(bad)  
  42e80c:	pop    esi
  42e80d:	xchg   ecx,eax
  42e80e:	pop    ebx
  42e80f:	jb     0x42e808
  42e811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e812:	test   eax,0x980493f
  42e817:	xchg   ebp,eax
  42e818:	pop    es
  42e819:	pop    ebx
  42e81a:	fld    TBYTE PTR [ebx-0x3a1ff8f]
  42e820:	nop
  42e821:	add    al,0x7
  42e823:	xchg   ebp,eax
  42e824:	retf   0xb487
  42e827:	outs   dx,DWORD PTR ds:[esi]
  42e828:	pop    esp
  42e829:	lods   eax,DWORD PTR ds:[esi]
  42e82a:	pop    ds
  42e82b:	or     dl,dh
  42e82d:	push   esp
  42e82e:	std    
  42e82f:	pop    es
  42e830:	adc    al,0x99
  42e832:	mov    ebx,0xb4a785e3
  42e837:	dec    eax
  42e838:	div    DWORD PTR [eax-0x32fd8a7f]
  42e83e:	imul   edx,DWORD PTR [esi+0x47],0x478fb344
  42e845:	imul   edi,DWORD PTR [ecx-0x1660cc60],0xffffffdd
  42e84c:	mov    ecx,DWORD PTR [ebx+esi*8+0x70]
  42e850:	push   es
  42e851:	jno    0x42e7dc
  42e853:	inc    ecx
  42e854:	sub    DWORD PTR [ecx],eax
  42e856:	js     0x42e8c3
  42e858:	jp     0x42e7ee
  42e85a:	mov    edx,esp
  42e85c:	sub    al,0xa7
  42e85e:	cs inc edx
  42e860:	sbb    DWORD PTR [ecx-0x26783bfe],eax
  42e866:	fdivr  DWORD PTR [ebx-0x280ae8a]
  42e86c:	retf   0x6afe
  42e86f:	sub    BYTE PTR [ecx+0x43],dh
  42e872:	or     eax,edi
  42e874:	test   BYTE PTR [esi-0x2c],dl
  42e877:	icebp  
  42e878:	hlt    
  42e879:	les    esi,FWORD PTR [ebx+0x1ad66bf]
  42e87f:	(bad)  
  42e880:	fs ja  0x42e859
  42e883:	daa    
  42e884:	mov    dh,0xba
  42e886:	stc    
  42e887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e888:	cmp    al,0x59
  42e88a:	lahf   
  42e88b:	rcl    BYTE PTR [ebx+ebx*8+0x80e9a4b],cl
  42e892:	mov    ah,0xdb
  42e894:	jne    0x42e8cf
  42e896:	mov    al,BYTE PTR [edx]
  42e898:	jmp    0xc35685b4
  42e89d:	imul   edx,DWORD PTR [esi+ebx*1],0x358839af
  42e8a4:	jmp    0x42e8f0
  42e8a6:	enter  0xda30,0x9e
  42e8aa:	aaa    
  42e8ab:	adc    al,0x3d
  42e8ad:	sub    DWORD PTR [ecx],0xffffffb9
  42e8b0:	into   
  42e8b1:	aas    
  42e8b2:	lahf   
  42e8b3:	inc    ebp
  42e8b4:	stc    
  42e8b5:	sar    esi,0xdf
  42e8b8:	inc    ebp
  42e8b9:	retf   0xad87
  42e8bc:	jbe    0x42e92b
  42e8be:	dec    ebx
  42e8bf:	xchg   esi,eax
  42e8c0:	xor    ebx,DWORD PTR [eax]
  42e8c2:	adc    DWORD PTR [eax+0x5],esi
  42e8c5:	stos   BYTE PTR es:[edi],al
  42e8c6:	inc    esp
  42e8c7:	mov    esi,0x98794630
  42e8cc:	and    bl,BYTE PTR [eax-0x3f]
  42e8cf:	push   0x5a
  42e8d1:	in     eax,dx
  42e8d2:	push   ebx
  42e8d3:	xchg   BYTE PTR [eax+eax*2-0x27],ah
  42e8d7:	mov    dh,0x5
  42e8d9:	and    BYTE PTR cs:0xc213e966,0xb7
  42e8e1:	push   esp
  42e8e2:	push   0xffffffae
  42e8e4:	jecxz  0x42e92c
  42e8e6:	ret    
  42e8e7:	clc    
  42e8e8:	in     eax,0xaf
  42e8ea:	loop   0x42e8bb
  42e8ec:	xchg   esp,eax
  42e8ed:	out    0x43,eax
  42e8ef:	sub    eax,0x3cc58c35
  42e8f4:	push   es
  42e8f5:	loop   0x42e93a
  42e8f7:	test   DWORD PTR [edi+eiz*2+0x4a],edi
  42e8fb:	cmp    DWORD PTR [esi-0x627434bf],edi
  42e901:	or     BYTE PTR [ebx+0x25],ch
  42e904:	adc    dl,BYTE PTR [eax]
  42e906:	fsubr  st(1),st
  42e908:	leave  
  42e909:	ret    
  42e90a:	sub    BYTE PTR [esi],al
  42e90c:	pop    es
  42e90d:	div    DWORD PTR [ebp-0x31175ca2]
  42e913:	sub    bl,cl
  42e915:	pop    edx
  42e916:	cmp    esp,DWORD PTR [esi-0x133e732b]
  42e91c:	xor    eax,0x9cdd33ba
  42e921:	inc    esp
  42e922:	adc    al,0xf3
  42e924:	jns    0x42e97d
  42e926:	les    esi,FWORD PTR [eax]
  42e928:	jl     0x42e8f3
  42e92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e92b:	(bad)  
  42e92c:	out    dx,eax
  42e92d:	into   
  42e92e:	mov    dl,0x8b
  42e930:	retf   
  42e931:	(bad)  
  42e933:	stc    
  42e934:	jmp    0xe0ba87ea
  42e939:	lods   al,BYTE PTR ds:[esi]
  42e93a:	fwait
  42e93b:	sar    bh,0xdc
  42e93e:	aam    0xc3
  42e940:	sbb    DWORD PTR [ebp-0x75],ecx
  42e943:	push   eax
  42e944:	inc    edx
  42e945:	jecxz  0x42e96b
  42e947:	pop    ebx
  42e948:	in     al,dx
  42e949:	push   esp
  42e94a:	and    al,0xf0
  42e94d:	data16 loopne 0x42e92a
  42e950:	xchg   esp,eax
  42e951:	mov    WORD PTR [edi-0x383680],ss
  42e957:	lods   eax,DWORD PTR ds:[esi]
  42e958:	inc    ebx
  42e959:	pop    ecx
  42e95a:	jmp    0x42e99a
  42e95c:	mov    ds:0x64742b15,al
  42e961:	dec    ebx
  42e962:	dec    ebp
  42e963:	adc    eax,0x663c35b9
  42e968:	sub    al,BYTE PTR [eax]
  42e96a:	in     eax,dx
  42e96b:	and    DWORD PTR [esi+0x59],0xe
  42e96f:	cmp    al,0x18
  42e971:	mov    BYTE PTR [edi+0x629358bd],dl
  42e977:	push   edi
  42e978:	jecxz  0x42e972
  42e97a:	or     BYTE PTR [eax-0x32],ah
  42e97d:	jmp    0x42e9f1
  42e97f:	loop   0x42e93b
  42e981:	sbb    esi,DWORD PTR [ebx]
  42e983:	jge    0x42e956
  42e985:	or     eax,0xf77cde1c
  42e98a:	daa    
  42e98b:	jmp    0x3ee24278
  42e990:	(bad)  
  42e991:	jl     0x42e970
  42e993:	mov    ecx,0x8d687f87
  42e998:	jb     0x42e9e5
  42e99a:	dec    edi
  42e99b:	cmp    DWORD PTR [eax+0x32],esi
  42e99e:	sub    al,0x5b
  42e9a0:	(bad)  
  42e9a2:	stos   BYTE PTR es:[edi],al
  42e9a3:	xchg   BYTE PTR ds:0xb0577825,ah
  42e9a9:	out    dx,eax
  42e9aa:	pop    ebp
  42e9ab:	sbb    edi,0x78e415a7
  42e9b1:	push   eax
  42e9b2:	push   cs
  42e9b3:	push   edx
  42e9b4:	cwde   
  42e9b5:	sub    eax,0xa9b05014
  42e9ba:	es out 0x15,eax
  42e9bd:	cmp    esi,DWORD PTR [ebx]
  42e9bf:	je     0x42e9f2
  42e9c1:	pushf  
  42e9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9c3:	sbb    dl,BYTE PTR [eax+0x489a768d]
  42e9c9:	and    BYTE PTR [ecx],ch
  42e9cb:	mov    BYTE PTR [ecx],bl
  42e9cd:	(bad)  
  42e9ce:	dec    eax
  42e9cf:	(bad)  
  42e9d0:	dec    ebp
  42e9d1:	addr16 xor al,0xe0
  42e9d4:	out    dx,eax
  42e9d5:	mov    ecx,DWORD PTR [ebx+ebx*8+0x5e]
  42e9d9:	inc    ebp
  42e9da:	(bad)  
  42e9db:	pop    edx
  42e9dc:	vxorps ymm0,ymm1,YMMWORD PTR [esi]
  42e9e0:	retf   0xe7b3
  42e9e3:	mov    eax,ds:0xc997bf4f
  42e9e8:	sub    BYTE PTR [edx+eax*8],0xb5
  42e9ec:	sahf   
  42e9ed:	mov    esp,0x9d0cb17f
  42e9f2:	pop    ebp
  42e9f3:	fisttp DWORD PTR [ecx+0x361e1dd6]
  42e9f9:	push   0x41106d19
  42e9fe:	xlat   BYTE PTR ds:[ebx]
  42e9ff:	fs shl ecx,1
  42ea02:	retf   
  42ea03:	xor    dl,cl
  42ea05:	xchg   edi,eax
  42ea06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea07:	popf   
  42ea08:	cdq    
  42ea09:	rcl    BYTE PTR [edi],cl
  42ea0b:	ins    BYTE PTR es:[edi],dx
  42ea0c:	inc    ebx
  42ea0d:	aas    
  42ea0e:	cdq    
  42ea0f:	inc    esi
  42ea10:	mov    bl,0xb7
  42ea12:	in     al,dx
  42ea13:	lea    ecx,[ecx+0x1a]
  42ea16:	(bad)
  42ea19:	inc    esi
  42ea1a:	xlat   BYTE PTR ds:[ebx]
  42ea1b:	sub    al,0x7c
  42ea1d:	sub    eax,0x44e6a796
  42ea22:	rol    DWORD PTR [eax+0x48fdc4f9],1
  42ea28:	and    edi,DWORD PTR [ebp+0x38]
  42ea2b:	sahf   
  42ea2c:	add    BYTE PTR [edi+0x50],dh
  42ea2f:	fs sbb ecx,eax
  42ea32:	mov    ebp,0x7d16f4a6
  42ea37:	sub    cl,BYTE PTR [edx+0x71]
  42ea3a:	push   0x5b
  42ea3c:	jecxz  0x42eaba
  42ea3e:	sub    al,0x53
  42ea40:	add    al,0x4a
  42ea42:	int3   
  42ea43:	jecxz  0x42ea30
  42ea45:	or     BYTE PTR [ebx],dl
  42ea47:	repz cwde 
  42ea49:	iret   
  42ea4a:	dec    ecx
  42ea4b:	dec    ecx
  42ea4c:	mov    bl,0x98
  42ea4e:	xchg   ebp,eax
  42ea4f:	mov    dl,0x67
  42ea51:	adc    ch,dl
  42ea53:	cmp    eax,0x218b1ef1
  42ea58:	std    
  42ea59:	xor    ah,0xa3
  42ea5c:	mov    ebx,0x3d29d193
  42ea61:	scas   eax,DWORD PTR es:[edi]
  42ea62:	jg     0x42e9f0
  42ea64:	or     ch,ch
  42ea66:	std    
  42ea67:	(bad)  
  42ea69:	call   FWORD PTR [edi]
  42ea6b:	xchg   edx,eax
  42ea6c:	outs   dx,DWORD PTR ds:[esi]
  42ea6d:	cmp    esi,ebp
  42ea6f:	and    BYTE PTR [eax],dh
  42ea71:	add    ecx,DWORD PTR [ecx-0x66]
  42ea74:	test   ecx,edi
  42ea76:	and    al,0x4a
  42ea78:	xchg   BYTE PTR [esi-0x5d],dl
  42ea7b:	sub    BYTE PTR [ecx+0x1],bl
  42ea7e:	mov    al,ch
  42ea80:	jb     0x42eaa0
  42ea82:	mov    al,0x8b
  42ea84:	call   0x490d:0x244bb80
  42ea8b:	retf   0x97c5
  42ea8e:	out    dx,eax
  42ea8f:	add    ch,0xa2
  42ea92:	xchg   ebp,eax
  42ea93:	or     bl,dh
  42ea95:	mov    edx,0x27bbb800
  42ea9a:	inc    esi
  42ea9b:	(bad)  
  42ea9c:	xchg   edx,eax
  42ea9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea9e:	push   esi
  42ea9f:	mov    DWORD PTR [ebx+0xf],edi
  42eaa2:	outs   dx,BYTE PTR ds:[esi]
  42eaa3:	xor    DWORD PTR [eax],esp
  42eaa5:	mov    cl,0x6f
  42eaa7:	es cmp ch,bl
  42eaaa:	pushf  
  42eaab:	ds scas al,BYTE PTR es:[edi]
  42eaad:	push   ecx
  42eaae:	pushf  
  42eaaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eab0:	data16 (bad) 
  42eab2:	arpl   WORD PTR [esi],cx
  42eab4:	test   al,0xc1
  42eab6:	in     eax,0x5b
  42eab8:	cmp    eax,0xf9bede13
  42eabd:	mov    eax,0xc0b9550
  42eac2:	shl    esp,0x9e
  42eac5:	retf   0x7fcd
  42eac8:	retf   
  42eac9:	mov    BYTE PTR [ebx+edi*2],0xfc
  42eacd:	jmp    0xa8902430
  42ead2:	repnz not dl
  42ead5:	jae    0x42eafc
  42ead7:	dec    esi
  42ead8:	ins    DWORD PTR es:[edi],dx
  42ead9:	mov    edi,0x9a3dd21
  42eade:	mov    dh,0x3a
  42eae0:	in     eax,dx
  42eae1:	mov    ecx,0x459a852d
  42eae6:	ins    DWORD PTR es:[edi],dx
  42eae7:	into   
  42eae8:	jno    0x42eaea
  42eaea:	(bad)  [ecx+0x51]
  42eaed:	in     al,dx
  42eaee:	stos   BYTE PTR es:[edi],al
  42eaef:	push   0xe9626b6e
  42eaf4:	add    al,0x68
  42eaf6:	or     DWORD PTR [ebx-0x89a13dc],ebp
  42eafc:	pop    ds
  42eafd:	adc    BYTE PTR [ebx],cl
  42eaff:	jmp    0xb55b:0x6e84176e
  42eb06:	xchg   esi,eax
  42eb07:	sbb    eax,0x2336fde7
  42eb0c:	icebp  
  42eb0d:	out    dx,eax
  42eb0e:	push   edi
  42eb0f:	outs   dx,BYTE PTR ds:[esi]
  42eb10:	pop    ds
  42eb11:	out    0xe3,al
  42eb13:	idiv   DWORD PTR [ecx+0x1a2cbf20]
  42eb19:	xor    cl,ah
  42eb1b:	int    0xff
  42eb1d:	dec    edi
  42eb1e:	popf   
  42eb1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb20:	jp     0x42eaad
  42eb22:	inc    edi
  42eb23:	dec    eax
  42eb24:	jecxz  0x42eb39
  42eb26:	xchg   esp,eax
  42eb27:	cmp    DWORD PTR [edi+0xbaeca03],eax
  42eb2d:	pop    eax
  42eb2e:	adc    BYTE PTR [esi-0x1364702f],cl
  42eb34:	retf   0xbc7
  42eb37:	mov    ecx,0xee5bf2c6
  42eb3c:	mov    cl,0xd7
  42eb3e:	push   ds
  42eb3f:	je     0x42eb7a
  42eb41:	jo     0x42eb05
  42eb43:	xor    eax,0x68ecc4d0
  42eb48:	outs   dx,BYTE PTR ds:[esi]
  42eb49:	adc    DWORD PTR [ebp+0x32c4babb],ebp
  42eb4f:	adc    al,0x42
  42eb51:	sbb    BYTE PTR [edi+0x5c],0xd2
  42eb55:	mov    ebp,0xd099c35b
  42eb5a:	sub    ebp,DWORD PTR [ecx-0x4cb5697]
  42eb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb61:	imul   eax,eax,0x4f
  42eb64:	mov    edx,0x856ca519
  42eb69:	add    ecx,DWORD PTR [ebx+0x2ae08803]
  42eb6f:	test   DWORD PTR [ebx+0x2dd8a3f6],ecx
  42eb75:	pop    ecx
  42eb76:	mov    al,ds:0xc633e468
  42eb7b:	icebp  
  42eb7c:	pop    ds
  42eb7d:	inc    esi
  42eb7e:	jp     0x42ebfb
  42eb80:	ret    
  42eb81:	(bad)  
  42eb82:	mov    ebx,0x2869cb95
  42eb87:	(bad)  
  42eb88:	lock xchg esp,eax
  42eb8a:	test   eax,0xb79a3a05
  42eb8f:	int    0xce
  42eb91:	mov    cl,0xe7
  42eb93:	mov    al,ds:0x22876446
  42eb98:	push   esi
  42eb99:	sub    DWORD PTR [eax],edx
  42eb9b:	mov    esp,0xc127290e
  42eba0:	imul   edi,DWORD PTR [ecx+0x17f49eb7],0xb2c5a25
  42ebaa:	jmp    0x42eb34
  42ebac:	ins    DWORD PTR es:[edi],dx
  42ebad:	je     0x42ec03
  42ebaf:	stos   DWORD PTR es:[edi],eax
  42ebb0:	inc    esi
  42ebb1:	call   0xbe56d36f
  42ebb6:	fwait
  42ebb7:	mov    ecx,0x556ad0a1
  42ebbc:	in     al,dx
  42ebbd:	test   al,0x49
  42ebbf:	dec    eax
  42ebc0:	and    ch,ah
  42ebc2:	mov    edx,ebp
  42ebc4:	int    0x67
  42ebc6:	int    0x6d
  42ebc8:	dec    edx
  42ebc9:	mov    ecx,0x6fbb5d40
  42ebce:	pop    ebx
  42ebcf:	test   eax,0x8f415f6a
  42ebd4:	inc    ecx
  42ebd5:	inc    ebx
  42ebd6:	cmp    al,0xef
  42ebd8:	pop    edx
  42ebd9:	fnstcw WORD PTR [eax+0x18]
  42ebdc:	and    eax,0xf7c02d84
  42ebe1:	pop    esp
  42ebe2:	pushf  
  42ebe3:	xchg   esi,eax
  42ebe4:	cmp    dl,BYTE PTR [eax-0x23]
  42ebe7:	ds (bad) 
  42ebe9:	mov    bl,0xf9
  42ebeb:	lock lods al,BYTE PTR ds:[esi]
  42ebed:	stc    
  42ebee:	js     0x42ebca
  42ebf0:	or     DWORD PTR [edi],ecx
  42ebf2:	sub    DWORD PTR [edx],edi
  42ebf4:	push   edi
  42ebf5:	fmul   DWORD PTR [eax+0x41ea4fd6]
  42ebfb:	lock ficomp WORD PTR [ebp+0x48]
  42ebff:	pop    esp
  42ec00:	mov    eax,ds:0x5648baec
  42ec05:	inc    ecx
  42ec06:	add    al,0xcf
  42ec08:	mov    al,0x3c
  42ec0a:	push   es
  42ec0b:	aad    0x9b
  42ec0d:	add    al,0x7a
  42ec0f:	add    ah,BYTE PTR [ebx+ebx*1]
  42ec12:	jp     0x42ec44
  42ec14:	xor    BYTE PTR [edx],al
  42ec16:	or     DWORD PTR [ebx-0x4e8f5a85],edi
  42ec1c:	xor    ch,ch
  42ec1e:	in     eax,0xba
  42ec20:	sub    dl,BYTE PTR [esi]
  42ec22:	fisttp QWORD PTR [ecx+0x2c]
  42ec25:	mov    ecx,0xf471a2a1
  42ec2a:	test   ch,ch
  42ec2c:	cwde   
  42ec2d:	mov    cs:0x75ae62aa,eax
  42ec33:	jnp    0x42ec06
  42ec35:	sbb    esp,eax
  42ec37:	fadd   DWORD PTR [ebp+esi*8-0x64f3c43]
  42ec3e:	adc    eax,DWORD PTR [esi+ecx*2]
  42ec41:	cmp    edi,DWORD PTR [ebx-0x6247cac3]
  42ec47:	in     al,0x60
  42ec49:	jno    0x42ebfe
  42ec4b:	xchg   edx,eax
  42ec4c:	repnz push eax
  42ec4e:	inc    esi
  42ec4f:	mov    dh,0xb4
  42ec51:	mov    eax,0x8e40bfc8
  42ec56:	add    edi,DWORD PTR [ebp+eiz*1-0x2c2a9ad1]
  42ec5d:	xlat   BYTE PTR ds:[ebx]
  42ec5e:	sub    dh,BYTE PTR [eax+0x35]
  42ec61:	call   0x7750:0x731cc2f3
  42ec68:	(bad)  
  42ec69:	aam    0x1a
  42ec6b:	inc    esp
  42ec6c:	int    0x41
  42ec6e:	and    BYTE PTR gs:0x70e49d2e,dl
  42ec75:	neg    dl
  42ec77:	pop    ebp
  42ec78:	sbb    al,0x6
  42ec7a:	jmp    0xea49:0x8f3234ce
  42ec81:	jmp    0x42ece1
  42ec83:	mov    cl,0x80
  42ec85:	pop    ebx
  42ec86:	pushf  
  42ec87:	mov    WORD PTR [ecx-0x78],fs
  42ec8a:	outs   dx,BYTE PTR ds:[esi]
  42ec8b:	popa   
  42ec8c:	not    dl
  42ec8e:	cld    
  42ec8f:	stos   BYTE PTR es:[edi],al
  42ec90:	loopne 0x42ec64
  42ec92:	cli    
  42ec93:	hlt    
  42ec94:	sub    ah,BYTE PTR [edi+0xdf1d5f2]
  42ec9a:	inc    edi
  42ec9b:	test   ah,cl
  42ec9d:	test   DWORD PTR [esi],edi
  42ec9f:	jae    0x42ecb0
  42eca1:	xchg   ecx,eax
  42eca2:	out    0x40,al
  42eca4:	mov    ebx,0xd4d0c36
  42eca9:	ds sbb eax,0xfbdfe39c
  42ecaf:	(bad)
  42ecb2:	jl     0x42ec56
  42ecb4:	adc    esp,DWORD PTR [eax+edx*1]
  42ecb7:	push   es
  42ecb8:	and    DWORD PTR [edi-0x645cea1a],ebp
  42ecbe:	pop    ebp
  42ecbf:	push   ecx
  42ecc0:	or     al,0x8
  42ecc3:	add    BYTE PTR [edx-0x438ec0a1],bl
  42ecc9:	jbe    0x42ed41
  42eccb:	sbb    al,0x7e
  42eccd:	sbb    eax,0x81ecaaa9
  42ecd2:	inc    ecx
  42ecd3:	cmc    
  42ecd4:	jg     0x42ece3
  42ecd6:	cs jmp 0x2751:0x1f43edc8
  42ecde:	ins    DWORD PTR es:[edi],dx
  42ecdf:	sbb    al,0x4d
  42ece1:	in     al,0x96
  42ece3:	aas    
  42ece4:	or     ebp,edi
  42ece6:	in     eax,0x1b
  42ece8:	cmp    BYTE PTR [ebx+0x552e5f3e],bh
  42ecee:	js     0x42ec73
  42ecf0:	or     al,ch
  42ecf2:	jmp    0x648a22c7
  42ecf7:	mov    eax,ds:0x16c99a11
  42ecfc:	aaa    
  42ecfd:	adc    al,0x75
  42ecff:	and    BYTE PTR [edx+0x68],al
  42ed02:	pop    ecx
  42ed03:	imul   BYTE PTR [edi+0x71]
  42ed06:	add    BYTE PTR [edi+0x526d47c6],cl
  42ed0c:	adc    dh,dl
  42ed0e:	cmp    edi,DWORD PTR [eax]
  42ed10:	xor    BYTE PTR [esp+eax*4],ch
  42ed13:	mov    edi,0x19d839d
  42ed18:	push   esp
  42ed19:	sub    BYTE PTR [edx],cl
  42ed1b:	sub    edi,edi
  42ed1d:	cs mov edx,0xb137f579
  42ed23:	push   edx
  42ed24:	push   ss
  42ed25:	das    
  42ed26:	test   al,0xa2
  42ed28:	ja     0x42ecd9
  42ed2a:	push   cs
  42ed2b:	xor    dh,ch
  42ed2d:	xchg   ebp,eax
  42ed2e:	mov    eax,0x2e0d2d12
  42ed33:	out    dx,al
  42ed34:	fs push esp
  42ed36:	in     al,dx
  42ed37:	pop    esi
  42ed38:	mov    ch,0xf6
  42ed3a:	data16 or ch,BYTE PTR [edi]
  42ed3d:	fst    DWORD PTR [edi+edx*2-0x36a13d9d]
  42ed44:	dec    edx
  42ed45:	test   al,0xa
  42ed47:	fs sbb ebx,esi
  42ed4a:	loop   0x42ed0d
  42ed4c:	sub    al,0xa1
  42ed4e:	mov    bl,0x60
  42ed50:	pop    esi
  42ed51:	push   ebp
  42ed52:	xor    BYTE PTR [edx],dl
  42ed54:	call   0xcbd0:0x4617d84a
  42ed5b:	ins    DWORD PTR es:[edi],dx
  42ed5c:	shl    DWORD PTR [edi+0x416db4ff],cl
  42ed62:	adc    ecx,DWORD PTR [eax-0x18ce36e]
  42ed68:	or     ebx,DWORD PTR [edi]
  42ed6a:	or     esp,DWORD PTR [esi-0x362077bc]
  42ed70:	lock cmp dh,bh
  42ed73:	mov    ebx,DWORD PTR ds:0x1e4fd375
  42ed79:	xchg   DWORD PTR [ecx],ecx
  42ed7b:	stos   BYTE PTR es:[edi],al
  42ed7c:	xor    BYTE PTR [ebx+0x4980dbfd],dl
  42ed82:	xor    eax,0x87dedce4
  42ed87:	pop    ss
  42ed88:	ja     0x42ed69
  42ed8a:	pop    ds
  42ed8b:	(bad)  
  42ed8d:	mov    bl,BYTE PTR [ecx-0x25f1f4ae]
  42ed93:	sti    
  42ed94:	sti    
  42ed95:	stos   BYTE PTR es:[edi],al
  42ed96:	pushf  
  42ed97:	lds    ebp,FWORD PTR [eax]
  42ed99:	bound  ebp,QWORD PTR ds:0xa2266892
  42ed9f:	fcom   QWORD PTR cs:[esi]
  42eda2:	dec    edi
  42eda3:	cs jp  0x42ee02
  42eda6:	fst    DWORD PTR [edi+0x57]
  42eda9:	mov    dh,0xb6
  42edab:	or     BYTE PTR [esi+ebp*4],0x1f
  42edaf:	inc    esi
  42edb0:	pop    eax
  42edb1:	push   es
  42edb2:	add    al,0x48
  42edb4:	into   
  42edb5:	sub    cl,BYTE PTR [ecx]
  42edb7:	push   esi
  42edb8:	aam    0x4b
  42edba:	xchg   edx,eax
  42edbb:	test   eax,0xbf182873
  42edc0:	call   0x38c0:0xb4c1b4e2
  42edc7:	js     0x42edab
  42edc9:	jle    0x42ed51
  42edcb:	jne    0x42ee0e
  42edcd:	mov    ds:0x1304b957,al
  42edd2:	leave  
  42edd3:	fst    st(5)
  42edd5:	imul   DWORD PTR [ebx+0x7607b23e]
  42eddb:	jns    0x42ed5f
  42eddd:	or     DWORD PTR [esi+eiz*8],ebp
  42ede0:	adc    al,0xac
  42ede2:	hlt    
  42ede3:	and    BYTE PTR [ecx],dh
  42ede5:	adc    cl,dl
  42ede7:	icebp  
  42ede8:	xchg   edx,eax
  42ede9:	iret   
  42edea:	mov    ecx,0xf854a291
  42edef:	int3   
  42edf0:	cmc    
  42edf1:	(bad)  
  42edf2:	popa   
  42edf3:	imul   esp,esp,0xffffffe2
  42edf6:	imul   edx,DWORD PTR [esi],0xffffffba
  42edf9:	daa    
  42edfa:	push   ecx
  42edfb:	outs   dx,BYTE PTR ds:[esi]
  42edfc:	loopne 0x42ede2
  42edfe:	shl    DWORD PTR [eax+0x37],cl
  42ee01:	jb     0x42eda8
  42ee03:	daa    
  42ee04:	mov    dh,BYTE PTR [edx-0x22445793]
  42ee0a:	xchg   ecx,eax
  42ee0b:	or     BYTE PTR [ebx],bl
  42ee0d:	lods   al,BYTE PTR ds:[esi]
  42ee0e:	sub    eax,0x9dd82f21
  42ee13:	push   ebp
  42ee14:	mov    eax,0xfddf615a
  42ee19:	es stos BYTE PTR es:[edi],al
  42ee1b:	in     al,0xe8
  42ee1d:	lods   eax,DWORD PTR ds:[esi]
  42ee1e:	xchg   BYTE PTR [ebx+eiz*8-0x72],bh
  42ee22:	cmp    eax,0xd31bfc58
  42ee27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee28:	xor    DWORD PTR [edx],ebx
  42ee2a:	inc    esi
  42ee2b:	sbb    bl,BYTE PTR [esi+esi*2+0x5092636c]
  42ee32:	mov    esp,0x36c7b62d
  42ee37:	jno    0x42eeae
  42ee39:	add    al,0x73
  42ee3b:	pop    edx
  42ee3c:	pop    esp
  42ee3d:	jg     0x42ee94
  42ee3f:	ficomp DWORD PTR [esi]
  42ee41:	adc    BYTE PTR [esi-0x60e113e7],dh
  42ee47:	shr    al,1
  42ee49:	cdq    
  42ee4a:	sbb    ebx,DWORD PTR [edi+0xb]
  42ee4d:	inc    edi
  42ee4e:	inc    edi
  42ee4f:	and    eax,0xb4940b47
  42ee54:	mov    ebp,0xa351acf
  42ee59:	dec    esp
  42ee5a:	cmp    al,BYTE PTR [eax+0x61]
  42ee5d:	retf   0xe932
  42ee60:	pop    eax
  42ee61:	dec    edi
  42ee62:	mov    ebx,0x914a7b39
  42ee67:	call   0x649f:0x6c93c58e
  42ee6e:	xor    edx,edi
  42ee70:	mov    ch,0x2b
  42ee72:	mov    WORD PTR [esi-0x26668f1a],gs
  42ee78:	fdivrp st(0),st
  42ee7a:	pushf  
  42ee7b:	push   0xd8dc7a9b
  42ee80:	arpl   WORD PTR [edx+0x124f117],dx
  42ee86:	inc    edx
  42ee87:	out    0x89,eax
  42ee89:	or     al,0x7c
  42ee8b:	adc    al,0xb3
  42ee8d:	stos   DWORD PTR es:[edi],eax
  42ee8e:	pop    ecx
  42ee8f:	mov    esi,0xdb5bc390
  42ee94:	adc    eax,0x47768ba3
  42ee99:	cwde   
  42ee9a:	push   ecx
  42ee9b:	pop    ds
  42ee9c:	out    dx,eax
  42ee9d:	in     eax,0x7a
  42ee9f:	xchg   BYTE PTR [ebp+0x482d3fa9],bh
  42eea5:	lahf   
  42eea6:	(bad)  
  42eea8:	sti    
  42eea9:	sub    DWORD PTR [edx+eax*8],ebp
  42eeac:	sahf   
  42eead:	fstp   QWORD PTR [eax-0x2f]
  42eeb0:	jmp    0x6b44:0x637df322
  42eeb7:	push   edi
  42eeb8:	popf   
  42eeb9:	sbb    edi,ecx
  42eebb:	dec    eax
  42eebc:	imul   ebx,DWORD PTR [ebx+edx*2],0xdc4efab8
  42eec3:	out    0x90,al
  42eec5:	sti    
  42eec6:	mov    bl,bl
  42eec8:	dec    esp
  42eec9:	sub    BYTE PTR [esp+ebp*8+0x3b],0x3a
  42eece:	add    esp,DWORD PTR [eax+0xf]
  42eed1:	pushf  
  42eed2:	outs   dx,BYTE PTR ds:[esi]
  42eed3:	lea    edi,[edx-0x51029f7d]
  42eed9:	mov    dh,0x72
  42eedb:	push   ds
  42eedc:	inc    eax
  42eedd:	xor    al,0xa9
  42eedf:	push   0xffffff8a
  42eee1:	mov    dh,0x55
  42eee3:	xchg   edx,eax
  42eee4:	or     DWORD PTR [edi],0x8106cf88
  42eeea:	xchg   edi,eax
  42eeeb:	and    eax,0xbe2b6973
  42eef0:	dec    esi
  42eef1:	dec    ecx
  42eef2:	cmp    al,0xef
  42eef4:	or     eax,0xadbe2f23
  42eef9:	aam    0xe7
  42eefb:	dec    ecx
  42eefc:	mov    fs:0xc75844d0,al
  42ef02:	out    dx,al
  42ef03:	pushf  
  42ef04:	push   eax
  42ef05:	mov    esp,0x3b983d21
  42ef0a:	in     eax,dx
  42ef0b:	xchg   esp,eax
  42ef0c:	(bad)  
  42ef0d:	div    BYTE PTR [edi-0x6820bf30]
  42ef13:	out    0xb9,al
  42ef15:	mov    DWORD PTR [edx+0x28],edi
  42ef18:	xor    esi,ebp
  42ef1a:	test   eax,0x84c9cb3b
  42ef1f:	or     dl,BYTE PTR [eax-0x761df3f1]
  42ef25:	xor    BYTE PTR [ebp-0xd],dh
  42ef28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef29:	xor    ebx,ebp
  42ef2b:	pushf  
  42ef2c:	sti    
  42ef2d:	fcomip st,st(3)
  42ef2f:	jle    0x42ef2f
  42ef31:	adc    esi,DWORD PTR [eax]
  42ef33:	test   BYTE PTR [ecx-0x4daa0dec],dh
  42ef39:	ret    
  42ef3a:	shr    BYTE PTR [ecx-0x1843426b],0x18
  42ef41:	jnp    0x42ef09
  42ef43:	daa    
  42ef44:	add    dh,BYTE PTR [ebp+0x2]
  42ef47:	imul   eax,eax,0x7f60b51d
  42ef4d:	adc    dl,BYTE PTR ds:0x3d8252c2
  42ef53:	popf   
  42ef54:	fimul  DWORD PTR [eax+eax*8]
  42ef57:	sbb    BYTE PTR ds:0xd1fe45a5,dl
  42ef5d:	xor    al,0xdc
  42ef5f:	xchg   edi,eax
  42ef60:	mov    edi,0x38fbe6ea
  42ef65:	or     DWORD PTR [ebp-0x3c75bc1b],0x44
  42ef6c:	mov    ebx,0xa9f0cbae
  42ef71:	xlat   BYTE PTR ds:[ebx]
  42ef72:	cmp    esp,DWORD PTR [esi+ecx*8]
  42ef75:	inc    esi
  42ef76:	neg    DWORD PTR [edx-0x3256e444]
  42ef7c:	dec    eax
  42ef7d:	out    0xb,al
  42ef7f:	pop    eax
  42ef80:	fdiv   st,st(5)
  42ef82:	push   0x12ff19f0
  42ef87:	jg     0x42ef57
  42ef89:	shr    DWORD PTR [esi],cl
  42ef8b:	xchg   esi,eax
  42ef8c:	int3   
  42ef8d:	ja     0x42efa4
  42ef8f:	xchg   edx,eax
  42ef90:	sbb    BYTE PTR [ebp-0x199d4b],cl
  42ef96:	in     eax,dx
  42ef97:	icebp  
  42ef98:	inc    ebx
  42ef99:	jnp    0x42efcc
  42ef9b:	mov    dl,BYTE PTR [esi-0x6d]
  42ef9e:	and    al,0x4f
  42efa0:	(bad)  
  42efa1:	mov    esp,0xa5b7d177
  42efa6:	push   ebp
  42efa7:	jo     0x42f009
  42efa9:	addr16 jmp 0x1e6e:0x11808d05
  42efb1:	popf   
  42efb2:	push   ebp
  42efb3:	std    
  42efb4:	pop    edi
  42efb5:	mov    BYTE PTR [esi-0x58],ah
  42efb8:	xchg   DWORD PTR [eax-0x33],edx
  42efbb:	push   ss
  42efbc:	int    0x2b
  42efbe:	pop    edi
  42efbf:	fsubr  st,st(7)
  42efc1:	out    dx,eax
  42efc2:	pop    esp
  42efc3:	mov    WORD PTR [ecx],ss
  42efc5:	outs   dx,DWORD PTR ds:[esi]
  42efc6:	sub    ebp,edi
  42efc8:	test   al,0x6d
  42efca:	adc    ebx,DWORD PTR [esp+ecx*1-0x41d02d22]
  42efd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efd2:	sub    al,0x90
  42efd4:	pop    eax
  42efd5:	mov    cs,WORD PTR [eax+0x46626355]
  42efdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efdc:	mov    WORD PTR [eax+0x21],?
  42efdf:	add    edx,DWORD PTR [eax]
  42efe1:	xor    al,0x96
  42efe3:	mov    al,ds:0x201aef40
  42efe8:	lahf   
  42efe9:	pop    ss
  42efea:	pop    ds
  42efeb:	(bad)  
  42efec:	jbe    0x42efbb
  42efee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efef:	and    eax,0x70314d14
  42eff4:	pusha  
  42eff5:	scas   eax,DWORD PTR es:[edi]
  42eff6:	(bad)  
  42eff7:	pusha  
  42eff8:	mov    BYTE PTR [ecx-0x3c],ah
  42effb:	cmp    DWORD PTR [edi-0x2f9e235c],ebx
  42f001:	dec    edx
  42f002:	xchg   ecx,eax
  42f003:	(bad)  
  42f005:	das    
  42f006:	fist   DWORD PTR [edi+0xd]
  42f009:	jmp    0x88d:0x6289f5b5
  42f010:	sti    
  42f011:	or     BYTE PTR ds:0x383bd12b,dl
  42f017:	mov    ch,0x96
  42f019:	push   0x74
  42f01b:	test   BYTE PTR [esi+0x6bc4acad],bl
  42f021:	cmp    bh,dl
  42f023:	out    dx,al
  42f024:	js     0x42efd4
  42f026:	cli    
  42f027:	mov    ah,0x37
  42f029:	adc    ebp,DWORD PTR ds:[esi-0x51b5d32b]
  42f030:	xchg   BYTE PTR [edx-0x49f00adc],ch
  42f036:	cdq    
  42f037:	fst    DWORD PTR [esi+ebx*4-0x7666041d]
  42f03e:	push   ds
  42f03f:	add    dh,BYTE PTR [ebx-0x4a]
  42f042:	retf   0x2f2e
  42f045:	lahf   
  42f046:	mov    ecx,0xcae658ff
  42f04b:	addr16 in eax,0xb1
  42f04e:	and    ch,bh
  42f050:	jns    0x42eff4
  42f052:	test   dh,dl
  42f054:	hlt    
  42f055:	jp     0x42f02c
  42f057:	aad    0x41
  42f059:	add    eax,0x29d52057
  42f05e:	sbb    DWORD PTR [ebp-0x54ce9554],ebx
  42f064:	test   al,0x2b
  42f066:	pop    edx
  42f067:	clc    
  42f068:	xor    eax,0x6c9693be
  42f06d:	inc    DWORD PTR [esi+0x53]
  42f070:	pop    ds
  42f071:	stc    
  42f072:	aad    0x46
  42f074:	rol    DWORD PTR [esi+0x692254b1],cl
  42f07a:	inc    ecx
  42f07b:	mov    cl,BYTE PTR [ebx]
  42f07d:	cdq    
  42f07e:	inc    edi
  42f07f:	mov    gs,WORD PTR ds:0xa223a01e
  42f085:	mov    edi,0x45382d55
  42f08a:	push   ds
  42f08b:	imul   esi,DWORD PTR [ecx+edi*4-0x65],0xffffffb0
  42f090:	test   DWORD PTR [ecx+eax*1],0x22942014
  42f097:	lods   al,BYTE PTR ds:[esi]
  42f098:	dec    esi
  42f099:	(bad)  
  42f09a:	cdq    
  42f09b:	sub    esi,ebx
  42f09d:	retf   0x5474
  42f0a0:	in     eax,0x4d
  42f0a2:	fwait
  42f0a3:	loop   0x42f08a
  42f0a5:	sahf   
  42f0a6:	(bad)  
  42f0a7:	fstp   TBYTE PTR [eax+0x7319eeab]
  42f0ad:	out    0x23,eax
  42f0af:	and    al,0xac
  42f0b1:	or     dh,BYTE PTR [bx+di]
  42f0b4:	mov    ch,BYTE PTR [edx+0x53ad5d98]
  42f0ba:	mov    cl,0xe3
  42f0bc:	push   ds
  42f0bd:	daa    
  42f0be:	sub    eax,0x37390b44
  42f0c3:	pushf  
  42f0c4:	adc    ch,BYTE PTR [eax]
  42f0c6:	mov    ebp,0x9f4c8ace
  42f0cb:	dec    esp
  42f0cc:	enter  0x41fe,0x8
  42f0d0:	mov    bh,0xce
  42f0d2:	ins    DWORD PTR es:[edi],dx
  42f0d3:	push   0x7ee4bd86
  42f0d8:	pop    ss
  42f0d9:	mov    DWORD PTR [eax],ebx
  42f0db:	mov    ah,0xfb
  42f0dd:	inc    ecx
  42f0de:	std    
  42f0df:	arpl   WORD PTR [esi+ebp*8+0x6feb299],dx
  42f0e6:	cmp    DWORD PTR [edx],esi
  42f0e8:	leave  
  42f0e9:	ret    
  42f0ea:	in     eax,0xf6
  42f0ec:	inc    eax
  42f0ed:	xor    al,0x3
  42f0ef:	out    dx,al
  42f0f0:	cmc    
  42f0f1:	ror    BYTE PTR [esi],cl
  42f0f3:	dec    edx
  42f0f4:	arpl   WORD PTR [ecx],bx
  42f0f6:	imul   ebp,esp,0xe
  42f0f9:	out    0x45,al
  42f0fb:	fld    DWORD PTR [edx-0x3c316849]
  42f101:	adc    BYTE PTR [ecx-0x22afa77c],cl
  42f107:	mov    ds,WORD PTR [ebp-0x4d]
  42f10a:	xchg   esp,eax
  42f10b:	fisubr WORD PTR [esi-0xa]
  42f10e:	leave  
  42f10f:	mov    ss,edi
  42f111:	daa    
  42f112:	imul   ecx,DWORD PTR [esi-0x7b77ed03],0x2549573f
  42f11c:	adc    esp,DWORD PTR [ecx+0x1f]
  42f11f:	es dec esi
  42f121:	nop
  42f122:	sbb    eax,0xde1dc4cc
  42f127:	fwait
  42f128:	in     eax,dx
  42f129:	bound  edx,QWORD PTR [ecx-0x61]
  42f12c:	mov    al,0xd0
  42f12e:	mov    ds:0xa8c48023,eax
  42f133:	inc    esp
  42f134:	xor    eax,0x1d08e4f8
  42f139:	xlat   BYTE PTR ds:[ebx]
  42f13a:	repnz test BYTE PTR [edi],ah
  42f13d:	jmp    0x42f16f
  42f13f:	pop    es
  42f140:	cmp    DWORD PTR [edx-0x1c],edi
  42f143:	ret    
  42f144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f145:	popa   
  42f146:	pop    esi
  42f147:	and    al,0x44
  42f149:	or     al,0x83
  42f14b:	cmp    al,0xbf
  42f14d:	xchg   ebp,eax
  42f14e:	jle    0x42f136
  42f150:	cs rcr esi,0x18
  42f154:	aad    0xc9
  42f156:	pop    es
  42f157:	mov    ecx,0x3b60127d
  42f15c:	cwde   
  42f15d:	or     al,0x4f
  42f15f:	cwde   
  42f160:	adc    al,0xf3
  42f162:	mov    ebp,0x9c351940
  42f167:	add    al,0xec
  42f169:	adc    BYTE PTR [edx-0x472d993d],ah
  42f16f:	pop    ebx
  42f170:	mov    BYTE PTR [ebx],cl
  42f172:	cmp    eax,0xb90ea83e
  42f177:	mov    ds:0x98b433dd,al
  42f17c:	adc    ah,BYTE PTR [ebp-0x23]
  42f17f:	inc    ebp
  42f180:	xchg   ebp,eax
  42f181:	or     al,0xb1
  42f183:	push   0x1679e286
  42f188:	push   ebp
  42f189:	dec    edi
  42f18a:	jp     0x42f197
  42f18c:	or     BYTE PTR [edx+0x6bb4a87e],bl
  42f192:	push   ecx
  42f193:	push   cs
  42f194:	(bad)  
  42f195:	iret   
  42f196:	jl     0x42f1fc
  42f198:	mov    ?,WORD PTR ds:0xcb6b93c2
  42f19e:	retf   
  42f19f:	xor    eax,0xe1e9ef95
  42f1a4:	push   ds
  42f1a5:	jns    0x42f1d0
  42f1a7:	mov    ch,0x7e
  42f1a9:	add    al,BYTE PTR ds:0x7ab038c5
  42f1af:	mov    eax,DWORD PTR [ecx-0x74]
  42f1b2:	pop    esp
  42f1b3:	xchg   ecx,eax
  42f1b4:	pop    ebx
  42f1b5:	sahf   
  42f1b6:	test   bh,al
  42f1b8:	xchg   ebx,eax
  42f1b9:	test   BYTE PTR [eax+0x37],al
  42f1bc:	mov    esp,0xa92f8f2
  42f1c1:	daa    
  42f1c2:	loop   0x42f151
  42f1c4:	sub    eax,0x22d78f6e
  42f1c9:	test   DWORD PTR [eax],eax
  42f1cb:	leave  
  42f1cc:	inc    edx
  42f1cd:	in     al,0x84
  42f1cf:	xor    edi,esi
  42f1d1:	jge    0x42f1cb
  42f1d3:	mov    al,ds:0xdd80b4c6
  42f1d8:	xchg   edi,eax
  42f1d9:	test   dl,bh
  42f1db:	push   esi
  42f1dc:	gs jmp 0x42f1de
  42f1df:	inc    esp
  42f1e0:	cs dec ebp
  42f1e2:	rdpmc  
  42f1e4:	inc    ebp
  42f1e5:	cmc    
  42f1e6:	popa   
  42f1e7:	sub    DWORD PTR [edx],0xffffffea
  42f1ea:	aas    
  42f1eb:	adc    ebp,DWORD PTR [edx*4+0x763aee95]
  42f1f2:	scas   al,BYTE PTR es:[edi]
  42f1f3:	in     eax,dx
  42f1f4:	and    al,0xae
  42f1f6:	das    
  42f1f7:	xor    eax,0x79ed7e3b
  42f1fc:	push   eax
  42f1fd:	jle    0x42f1c7
  42f1ff:	scas   al,BYTE PTR es:[edi]
  42f200:	sub    BYTE PTR [ebp*2-0x114bb733],bh
  42f207:	jle    0x42f1b5
  42f209:	inc    ebx
  42f20a:	sti    
  42f20b:	xor    eax,0x1ac5dfc7
  42f210:	push   esi
  42f211:	in     al,0xf
  42f213:	mov    BYTE PTR [esi+0x42],dl
  42f216:	rcr    DWORD PTR [edi],0x6f
  42f219:	nop
  42f21a:	pop    esi
  42f21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f21c:	mov    esi,0xb6ce162f
  42f221:	leave  
  42f222:	pusha  
  42f223:	mov    dl,0x95
  42f225:	lahf   
  42f226:	jmp    0xc32246
  42f22b:	xchg   BYTE PTR [edx-0x34c2426d],dl
  42f231:	test   WORD PTR [esi],di
  42f234:	jmp    ebp
  42f236:	xlat   BYTE PTR ds:[ebx]
  42f237:	adc    ebp,ebp
  42f239:	neg    eax
  42f23b:	or     BYTE PTR [ecx+0x3],cl
  42f23e:	add    eax,0x1ca82ff5
  42f243:	and    ah,al
  42f245:	push   ecx
  42f246:	xchg   edx,eax
  42f247:	xchg   BYTE PTR [esi],dl
  42f249:	fist   WORD PTR [edx]
  42f24b:	sub    ebp,esi
  42f24d:	mov    DWORD PTR [edi-0x1f],ebp
  42f250:	push   ds
  42f251:	dec    esi
  42f252:	out    dx,al
  42f253:	icebp  
  42f254:	cmp    esp,DWORD PTR [ebp+0x18175caf]
  42f25a:	fmulp  st(6),st
  42f25c:	jno    0x42f2cd
  42f25e:	or     dl,BYTE PTR [esi-0x2503ac90]
  42f264:	jae    0x42f276
  42f266:	mov    ah,0x85
  42f268:	dec    edx
  42f269:	retf   0xfd65
  42f26c:	inc    edx
  42f26d:	xchg   esi,eax
  42f26e:	and    BYTE PTR [esp+ebx*4-0x42c5fbfe],0x1f
  42f276:	jecxz  0x42f1fc
  42f278:	jg     0x42f262
  42f27a:	cld    
  42f27b:	adc    dl,BYTE PTR [eax+0x9169626]
  42f281:	push   esi
  42f282:	mov    cl,0xf2
  42f284:	xor    esi,DWORD PTR [ebx+0x52]
  42f287:	sbb    DWORD PTR [esi-0x6b],edi
  42f28a:	out    0x3c,al
  42f28c:	loope  0x42f258
  42f28e:	ds jmp 0xd981:0x80ddd181
  42f296:	xchg   BYTE PTR [edx-0x3e],bl
  42f299:	mov    ch,0xfa
  42f29b:	add    al,0x99
  42f29d:	call   0xd1728431
  42f2a2:	inc    ebx
  42f2a3:	push   esi
  42f2a4:	call   0x6e51de12
  42f2a9:	ss dec edx
  42f2ab:	je     0x42f2e2
  42f2ad:	mov    dh,0x35
  42f2af:	push   0x7f
  42f2b1:	mov    bl,0x7b
  42f2b3:	xchg   ecx,eax
  42f2b4:	and    BYTE PTR [edx+0x5e05da75],ch
  42f2ba:	test   BYTE PTR [edx],bh
  42f2bc:	nop
  42f2bd:	bnd jp 0x42f32b
  42f2c0:	adc    BYTE PTR [ecx-0x2131d46c],0xec
  42f2c7:	pop    ecx
  42f2c8:	or     al,0x87
  42f2ca:	lea    esp,[ecx-0x2c]
  42f2cd:	retf   0xb218
  42f2d0:	jbe    0x42f32f
  42f2d2:	xchg   edi,eax
  42f2d3:	push   eax
  42f2d4:	mov    bl,0xd2
  42f2d6:	mov    ds:0x5b9d52a,eax
  42f2db:	mov    esp,0xf8f05e0f
  42f2e0:	stos   DWORD PTR es:[edi],eax
  42f2e1:	jb     0x42f2ed
  42f2e3:	xchg   esi,eax
  42f2e4:	stos   BYTE PTR es:[edi],al
  42f2e5:	ret    0x43d5
  42f2e8:	inc    esp
  42f2e9:	mov    ebx,DWORD PTR [edx]
  42f2eb:	int    0xc1
  42f2ed:	in     eax,dx
  42f2ee:	jecxz  0x42f2ab
  42f2f0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42f2f2:	inc    ecx
  42f2f3:	add    edi,DWORD PTR [esi+0x1bdfac6e]
  42f2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2fa:	(bad)  
  42f2fb:	pop    ecx
  42f2fc:	and    eax,0x87fcf2c0
  42f301:	mov    dl,0x56
  42f303:	shr    DWORD PTR [ebp-0x29],1
  42f306:	(bad)  
  42f307:	test   al,0x3d
  42f309:	mov    WORD PTR [edx+0x15dc7cf7],fs
  42f30f:	and    bl,BYTE PTR [ebx+ebp*8-0x5796a961]
  42f316:	xchg   ch,bh
  42f318:	pop    es
  42f319:	call   0xd661c493
  42f31e:	jns    0x42f380
  42f320:	jmp    0x42f313
  42f322:	or     al,BYTE PTR [esi+eax*8]
  42f325:	or     DWORD PTR [ebp+0x28],edx
  42f328:	mov    ds:0x11e8dd05,al
  42f32d:	and    BYTE PTR [edx],bl
  42f32f:	jbe    0x42f364
  42f331:	ins    BYTE PTR es:[edi],dx
  42f332:	out    0x5b,eax
  42f334:	or     DWORD PTR [esi+0x7b43b7db],esp
  42f33a:	leave  
  42f33b:	shl    BYTE PTR [ecx-0x55],0xd9
  42f33f:	hlt    
  42f340:	add    eax,0x4932ed3d
  42f345:	call   0xb2aa:0x6f9607fd
  42f34c:	in     al,0xde
  42f34e:	rol    BYTE PTR [ebx+0x52],cl
  42f351:	sbb    cl,bl
  42f353:	inc    edi
  42f354:	arpl   WORD PTR [ebx-0x2b798d18],di
  42f35a:	push   cs
  42f35b:	cmc    
  42f35c:	xchg   BYTE PTR [esi-0x74],ah
  42f35f:	ins    DWORD PTR es:[edi],dx
  42f360:	(bad)  
  42f361:	xlat   BYTE PTR ds:[ebx]
  42f362:	loope  0x42f3ce
  42f364:	ret    
  42f365:	push   ds
  42f366:	jo     0x42f338
  42f368:	sbb    eax,DWORD PTR [ecx-0x59a8144c]
  42f36e:	shl    BYTE PTR [eax-0x52],cl
  42f371:	xor    dh,BYTE PTR [eiz*4+0x47f17baf]
  42f378:	push   edi
  42f379:	inc    edi
  42f37a:	lea    ebp,[eax+ebx*8+0x4d7ae886]
  42f381:	bound  esi,QWORD PTR [eax]
  42f383:	iret   
  42f384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f385:	push   ss
  42f386:	and    BYTE PTR ds:0xc7c8669f,bl
  42f38c:	jle    0x42f335
  42f38e:	arpl   WORD PTR [edi+0x68bc07fd],bx
  42f394:	or     eax,0x14d96ccf
  42f399:	lock cmp eax,0xebe9281b
  42f39f:	js     0x42f3fe
  42f3a1:	or     eax,DWORD PTR [ebp+0x17]
  42f3a4:	adc    bl,BYTE PTR [esi-0x2bbdc9a8]
  42f3aa:	and    ebx,0x17f0c8de
  42f3b0:	loop   0x42f3a7
  42f3b2:	or     eax,0x1a63dcfd
  42f3b7:	call   0xca6e40c9
  42f3bc:	jns    0x42f3e5
  42f3be:	jns    0x42f36d
  42f3c0:	push   es
  42f3c1:	mov    edi,0xf0c65ffb
  42f3c6:	in     al,0xcc
  42f3c8:	leave  
  42f3c9:	imul   eax,DWORD PTR [edx],0x26
  42f3cc:	lock and edx,DWORD PTR [esi-0x1193346c]
  42f3d3:	mov    ebx,0xcf6a13c9
  42f3d8:	es jg  0x42f3d0
  42f3db:	xchg   ebx,eax
  42f3dc:	in     al,0xe8
  42f3de:	sbb    al,0x90
  42f3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3e1:	pop    es
  42f3e2:	aas    
  42f3e3:	and    DWORD PTR ds:0x5af18584,0xffffff8e
  42f3ea:	pop    ecx
  42f3eb:	fst    DWORD PTR [ecx+0x4f0928f]
  42f3f1:	mov    eax,ds:0x69375d9f
  42f3f6:	mov    eax,0x1512221
  42f3fb:	mov    eax,0xbcdb0f26
  42f400:	inc    eax
  42f401:	and    eax,0xc9921314
  42f406:	loop   0x42f410
  42f408:	push   ds
  42f409:	mov    bh,0xda
  42f40b:	mov    ebp,DWORD PTR [ecx]
  42f40d:	rcr    BYTE PTR [ecx-0x2b8bdb13],1
  42f413:	push   ebx
  42f414:	xchg   ebx,eax
  42f415:	pop    esp
  42f416:	jmp    0xc2cbf8e1
  42f41b:	sbb    al,0x93
  42f41d:	pop    ebp
  42f41e:	pop    esi
  42f41f:	mov    ah,cl
  42f421:	xchg   BYTE PTR [ecx],bh
  42f423:	lods   eax,DWORD PTR ds:[esi]
  42f424:	xchg   edi,eax
  42f425:	mov    ecx,0xd82ff74b
  42f42a:	xchg   ebp,eax
  42f42b:	inc    eax
  42f42c:	ds test eax,0xb795d13b
  42f432:	sti    
  42f433:	test   edx,edx
  42f435:	std    
  42f436:	cs test ah,al
  42f439:	stos   DWORD PTR es:[edi],eax
  42f43a:	inc    eax
  42f43b:	pop    edx
  42f43c:	fwait
  42f43d:	dec    esp
  42f43e:	or     ebp,edx
  42f440:	mov    ds:0x15840482,al
  42f445:	out    dx,eax
  42f446:	inc    ebx
  42f447:	add    al,0xc6
  42f449:	inc    ecx
  42f44a:	jo     0x42f48a
  42f44c:	daa    
  42f44d:	test   eax,0x4671bd36
  42f452:	mov    bl,0x54
  42f454:	push   es
  42f455:	fld    DWORD PTR [esi-0x41d5226c]
  42f45b:	rcl    al,1
  42f45d:	xor    BYTE PTR [ebx-0x62],bl
  42f460:	ja     0x42f441
  42f462:	pop    es
  42f463:	in     eax,0xa0
  42f465:	cmp    cl,dl
  42f467:	sub    eax,0x2a540931
  42f46c:	in     eax,0x85
  42f46e:	lea    ecx,[eax+esi*1-0x129bc6ef]
  42f475:	jg     0x42f48b
  42f477:	inc    edi
  42f478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f479:	cmp    al,BYTE PTR [eax-0x57]
  42f47c:	pop    ds
  42f47d:	dec    ebx
  42f47e:	inc    edi
  42f47f:	xchg   ebp,eax
  42f480:	mov    ds:0x40fa4d47,eax
  42f485:	out    0x4,eax
  42f487:	mov    esi,0xbd59fd22
  42f48c:	sub    DWORD PTR [eax],0xffffffd2
  42f48f:	addr16 push 0xffffffaf
  42f492:	in     al,0x58
  42f494:	hlt    
  42f495:	jg     0x42f462
  42f497:	jno    0x42f47d
  42f499:	cs push ebp
  42f49b:	pop    ds
  42f49c:	sahf   
  42f49d:	push   edx
  42f49e:	rcr    DWORD PTR [esi+0x26],cl
  42f4a1:	mov    ebp,0xd14213e4
  42f4a6:	jmp    0xd562:0x19752c65
  42f4ad:	lock icebp 
  42f4af:	lds    edx,FWORD PTR [ebx*4+0x27c2972]
  42f4b6:	scas   al,BYTE PTR es:[edi]
  42f4b7:	push   0xca64cff1
  42f4bc:	sbb    BYTE PTR [edx-0x7],ah
  42f4bf:	ficomp WORD PTR [ecx-0x6b1beb8a]
  42f4c5:	(bad)  
  42f4c6:	jp     0x42f4fa
  42f4c8:	in     al,0xec
  42f4ca:	mov    al,ds:0x209e5b3b
  42f4cf:	cmp    ah,BYTE PTR [edx+0x1a]
  42f4d2:	push   0x4b
  42f4d4:	ficom  DWORD PTR [edi+0x73c7851e]
  42f4da:	jns    0x42f518
  42f4dc:	call   0x43b4:0x2c3a27f6
  42f4e3:	xor    al,0x8a
  42f4e5:	xchg   esp,eax
  42f4e6:	shl    BYTE PTR [esi-0x66],cl
  42f4e9:	mov    ecx,0xc08a6fd3
  42f4ee:	fwait
  42f4ef:	and    eax,0x5d8fd91f
  42f4f4:	dec    ebp
  42f4f5:	sbb    esp,DWORD PTR [edx+0x12ca8fb0]
  42f4fb:	pop    es
  42f4fc:	and    eax,0xc932252
  42f501:	xor    esi,edi
  42f503:	cwde   
  42f504:	aad    0x6d
  42f506:	jnp    0x42f4a6
  42f508:	xchg   edi,eax
  42f509:	lods   eax,DWORD PTR ds:[esi]
  42f50a:	clc    
  42f50b:	xor    DWORD PTR [ecx-0x2d],ebx
  42f50e:	shr    BYTE PTR [eax+ebp*2-0x48e0f206],cl
  42f515:	ds pushf 
  42f517:	test   DWORD PTR [edi+0x85e0c5e],ebx
  42f51d:	lods   al,BYTE PTR ds:[esi]
  42f51e:	adc    eax,0xd4e1a2be
  42f523:	jmp    0xb08f:0x2c63ed41
  42f52a:	out    dx,eax
  42f52b:	add    ecx,DWORD PTR [edi]
  42f52d:	ja     0x42f4d3
  42f52f:	pop    esi
  42f530:	inc    edi
  42f531:	gs and al,0xb2
  42f534:	or     ah,al
  42f536:	mov    ah,0xa7
  42f538:	addr16 pusha 
  42f53a:	int3   
  42f53b:	push   0xffffffa1
  42f53d:	(bad)  
  42f53e:	pop    ds
  42f53f:	mov    bl,0xd9
  42f541:	ss inc eax
  42f543:	into   
  42f544:	jmp    0x96bba64d
  42f549:	xchg   edi,eax
  42f54a:	clc    
  42f54b:	ret    
  42f54c:	and    DWORD PTR [esi+ebx*4],ecx
  42f54f:	pop    ds
  42f550:	pop    ebx
  42f551:	fs aam 0x44
  42f554:	sub    ch,ah
  42f556:	popa   
  42f557:	outs   dx,DWORD PTR ds:[esi]
  42f558:	mul    al
  42f55a:	adc    eax,0xd745e8b5
  42f55f:	mov    al,0xb1
  42f561:	jle    0x42f5d9
  42f563:	pop    edx
  42f564:	mov    dl,0x1e
  42f566:	push   0x70533c09
  42f56b:	in     eax,0x61
  42f56d:	xor    DWORD PTR [eax],0x17
  42f570:	lods   al,BYTE PTR ds:[esi]
  42f571:	test   al,0xcc
  42f573:	leave  
  42f574:	cmp    BYTE PTR [ebx+eax*2],ch
  42f577:	and    al,0xa
  42f579:	add    al,0xde
  42f57b:	int    0x26
  42f57d:	push   ebp
  42f57e:	jb     0x42f512
  42f580:	(bad)  
  42f581:	pusha  
  42f582:	je     0x42f551
  42f584:	and    DWORD PTR [ebx+0x57],ecx
  42f587:	sub    al,BYTE PTR [ebx]
  42f589:	dec    esp
  42f58a:	scas   eax,DWORD PTR es:[edi]
  42f58b:	push   ds
  42f58c:	das    
  42f58d:	lods   al,BYTE PTR ss:[esi]
  42f58f:	out    0xfe,al
  42f591:	mov    DWORD PTR [esi-0x30],eax
  42f594:	outs   dx,BYTE PTR ds:[esi]
  42f595:	data16 jecxz 0x42f56c
  42f598:	sbb    esp,eax
  42f59a:	imul   esi,DWORD PTR [ecx-0x4],0xfffffff7
  42f59e:	mov    edi,0x4981fdb5
  42f5a3:	adc    esi,edx
  42f5a5:	ja     0x42f577
  42f5a7:	bound  ebp,QWORD PTR ds:0xc7df58a2
  42f5ad:	stos   BYTE PTR es:[edi],al
  42f5ae:	std    
  42f5af:	(bad)  
  42f5b0:	xlat   BYTE PTR ds:[ebx]
  42f5b1:	(bad)  
  42f5b2:	addr16 dec ecx
  42f5b4:	outs   dx,DWORD PTR ds:[esi]
  42f5b5:	sti    
  42f5b6:	fdivr  st,st(2)
  42f5b8:	adc    al,0xd6
  42f5ba:	in     al,dx
  42f5bb:	sub    ecx,DWORD PTR [ecx-0x144a8b5c]
  42f5c1:	enter  0x1755,0x6
  42f5c5:	jp     0x42f59f
  42f5c7:	mov    dh,0x1b
  42f5c9:	cdq    
  42f5ca:	mov    DWORD PTR [eax-0x23],edx
  42f5cd:	add    eax,0xfa1b1e23
  42f5d2:	fsubr  DWORD PTR [esi+0x3e]
  42f5d5:	test   BYTE PTR [eax-0x4e],dl
  42f5d8:	cmp    DWORD PTR [ebx-0x5],eax
  42f5db:	xor    BYTE PTR [ebx-0xe36ec3f],bh
  42f5e1:	cs xchg ebp,eax
  42f5e3:	inc    esp
  42f5e4:	sub    al,0x38
  42f5e6:	loope  0x42f660
  42f5e8:	push   cs
  42f5e9:	jmp    0xec69:0x5b4b7540
  42f5f0:	ja     0x42f5fd
  42f5f2:	js     0x42f581
  42f5f4:	fiadd  DWORD PTR [edx+ebp*2+0x33705e08]
  42f5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5fc:	rol    BYTE PTR [ecx-0x66],cl
  42f5ff:	mov    ebp,0xeae3cc9d
  42f604:	pop    esi
  42f605:	leave  
  42f606:	push   cs
  42f607:	jbe    0x42f5f8
  42f609:	pusha  
  42f60a:	mov    al,ds:0x36ed7bee
  42f60f:	mov    ch,0x1d
  42f611:	in     eax,0x40
  42f613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f614:	xor    DWORD PTR fs:[eax],esp
  42f617:	pop    ebx
  42f618:	leave  
  42f619:	sub    ebx,edi
  42f61b:	mov    ds:0x779450a2,eax
  42f620:	adc    ch,BYTE PTR [ebx]
  42f622:	cmpxchg cl,dl
  42f625:	cdq    
  42f626:	test   BYTE PTR [edi+0x4e7e38b8],dh
  42f62c:	push   0x72
  42f62e:	ja     0x42f696
  42f630:	test   DWORD PTR [esi+edi*4+0xcbbdaf1],ebx
  42f637:	outs   dx,DWORD PTR ds:[esi]
  42f638:	sahf   
  42f639:	push   es
  42f63a:	inc    ebx
  42f63b:	xchg   ecx,eax
  42f63c:	or     eax,DWORD PTR [edx-0x68f13]
  42f642:	sbb    ecx,0x70
  42f645:	bound  ebp,QWORD PTR [esi+ecx*1-0x72]
  42f649:	aas    
  42f64a:	rol    esi,1
  42f64c:	repz mov eax,0xc71bd2a1
  42f652:	dec    esi
  42f653:	fwait
  42f654:	adc    bl,bl
  42f656:	dec    esi
  42f657:	out    dx,al
  42f658:	push   ebp
  42f659:	jo     0x42f621
  42f65b:	lea    esi,[edx-0x42fac6f2]
  42f661:	outs   dx,DWORD PTR ds:[esi]
  42f662:	push   cs
  42f663:	mov    esp,0xf9ed5da0
  42f668:	imul   ecx,DWORD PTR [esi-0x44],0x31
  42f66c:	sbb    ecx,DWORD PTR [edi]
  42f66e:	pop    DWORD PTR [esi+edi*4-0x7c]
  42f672:	daa    
  42f673:	mul    DWORD PTR [eax]
  42f675:	mov    ds:0x16dfb789,al
  42f67a:	(bad)  
  42f67b:	test   al,0xda
  42f67d:	mov    bl,BYTE PTR [edi]
  42f67f:	pop    es
  42f680:	ins    BYTE PTR es:[edi],dx
  42f681:	mov    eax,DWORD PTR [esi+0x6e]
  42f684:	fisub  WORD PTR [esp+ebx*1-0x64]
  42f688:	imul   ebp,DWORD PTR [ebx-0x597f5319],0x16b8e814
  42f692:	inc    ebp
  42f693:	mov    ebx,0xc13b2c58
  42f698:	out    dx,al
  42f699:	sbb    bh,bl
  42f69b:	pop    edx
  42f69c:	adc    bh,bh
  42f69e:	mov    ebx,0x15937fc6
  42f6a3:	stos   DWORD PTR es:[edi],eax
  42f6a4:	ret    0xb3c5
  42f6a7:	adc    BYTE PTR [edi+0x7342bea6],cl
  42f6ad:	mov    dl,BYTE PTR [edx+eax*4]
  42f6b0:	add    ah,ch
  42f6b2:	pop    edi
  42f6b3:	cmp    ebp,DWORD PTR [edx-0x67]
  42f6b6:	inc    esi
  42f6b7:	pop    ss
  42f6b8:	loop   0x42f716
  42f6ba:	mov    ah,ch
  42f6bc:	rol    DWORD PTR [esi-0xe6f32cd],0x1a
  42f6c3:	push   ds
  42f6c4:	xchg   esi,eax
  42f6c5:	sub    esi,DWORD PTR [ebx]
  42f6c7:	loopne 0x42f68b
  42f6c9:	fsub   QWORD PTR [edx]
  42f6cb:	pop    eax
  42f6cc:	cmp    ah,dh
  42f6ce:	sar    DWORD PTR [ebp-0x55],cl
  42f6d1:	pop    ds
  42f6d2:	adc    ah,BYTE PTR [esi+ecx*2]
  42f6d5:	daa    
  42f6d6:	jmp    0x367bb82f
  42f6db:	lock daa 
  42f6dd:	xchg   edi,edi
  42f6df:	inc    eax
  42f6e0:	cmp    eax,0x8d35e14a
  42f6e5:	inc    ebp
  42f6e6:	fild   DWORD PTR [ebx]
  42f6e8:	or     BYTE PTR [esi+0x65],0x40
  42f6ec:	add    al,0x8c
  42f6ee:	push   cs
  42f6ef:	pop    esi
  42f6f0:	fbstp  TBYTE PTR [ecx+0xa]
  42f6f3:	mov    eax,0xbdad9923
  42f6f8:	mov    al,ds:0xd2f55f9b
  42f6fd:	pop    ds
  42f6fe:	mov    ecx,0xa2c99b5
  42f703:	dec    ebp
  42f704:	push   0x39
  42f706:	hlt    
  42f707:	push   ss
  42f708:	shl    BYTE PTR [edx-0x12],1
  42f70b:	in     eax,dx
  42f70c:	xchg   edx,eax
  42f70d:	mov    dh,0x97
  42f70f:	aad    0xf9
  42f711:	jae    0x42f755
  42f713:	add    esi,esi
  42f715:	and    al,BYTE PTR [ebp+eax*8-0x61]
  42f719:	jg     0x42f6c9
  42f71b:	mov    al,ds:0x113d0157
  42f720:	out    dx,eax
  42f721:	aad    0xc
  42f723:	push   edi
  42f725:	or     eax,edx
  42f727:	xchg   ebp,eax
  42f728:	test   esp,0x48bb74db
  42f72e:	cld    
  42f72f:	inc    esi
  42f730:	inc    esi
  42f731:	rcl    BYTE PTR [esi],1
  42f733:	push   eax
  42f734:	cwde   
  42f735:	xor    edx,DWORD PTR [edx]
  42f737:	popf   
  42f738:	push   esp
  42f739:	(bad)  
  42f73a:	sti    
  42f73b:	fmulp  st(6),st
  42f73d:	push   es
  42f73e:	dec    edx
  42f73f:	cli    
  42f740:	xor    eax,0x2f022cd1
  42f745:	xchg   ecx,eax
  42f746:	jle    0x42f735
  42f748:	adc    al,0xa2
  42f74a:	jl     0x42f724
  42f74c:	xchg   DWORD PTR [ebx+0x755b66c4],edi
  42f752:	icebp  
  42f753:	loop   0x42f775
  42f755:	ficomp DWORD PTR [esi+edi*1+0x75451d8c]
  42f75c:	pop    edx
  42f75d:	xor    BYTE PTR [eax],bl
  42f75f:	sub    al,0xf5
  42f761:	into   
  42f762:	in     eax,dx
  42f763:	cld    
  42f764:	mov    bl,0x17
  42f766:	fdivr  st,st(2)
  42f768:	retf   0x1bf4
  42f76b:	adc    ch,cl
  42f76d:	mov    edi,0x5b729a3d
  42f772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f773:	and    bl,BYTE PTR [esi]
  42f775:	xchg   ebp,eax
  42f776:	test   al,ah
  42f778:	add    al,0xb3
  42f77a:	pop    ecx
  42f77b:	aad    0x3d
  42f77d:	xor    edx,edi
  42f77f:	mov    esp,0x5f500c13
  42f784:	ret    
  42f785:	fdivr  QWORD PTR [ecx-0x7bc681d2]
  42f78b:	cmp    eax,0x3c7d910b
  42f790:	jne    0x42f7a6
  42f792:	out    dx,eax
  42f793:	arpl   bx,si
  42f795:	rcl    BYTE PTR [esi+0x53],cl
  42f798:	push   ecx
  42f799:	adc    esi,edi
  42f79b:	call   0x4eb817c8
  42f7a0:	push   ss
  42f7a1:	sub    bh,0xb3
  42f7a4:	mov    eax,edi
  42f7a6:	rcl    dh,1
  42f7a8:	std    
  42f7a9:	and    BYTE PTR [esi+edi*4],bl
  42f7ac:	mov    ah,0xa4
  42f7ae:	add    al,0x2e
  42f7b0:	mov    al,ds:0xa10255c6
  42f7b5:	xchg   esi,eax
  42f7b6:	sub    bh,BYTE PTR [ebp-0x7a]
  42f7b9:	dec    ecx
  42f7ba:	ins    DWORD PTR es:[edi],dx
  42f7bb:	ds int3 
  42f7bd:	int3   
  42f7be:	cmc    
  42f7bf:	sbb    dh,bl
  42f7c1:	test   BYTE PTR [edi-0x39b618ef],cl
  42f7c7:	arpl   WORD PTR [ebx-0x7c3b7615],di
  42f7cd:	push   ebx
  42f7ce:	mov    ds:0x71ff2822,eax
  42f7d3:	leave  
  42f7d4:	addr16 mov bl,0x6d
  42f7d7:	mov    ds:0x85c0023b,al
  42f7dc:	(bad)  
  42f7dd:	jle    0x42f767
  42f7df:	mov    gs,WORD PTR [edi+0x4a2bbec2]
  42f7e5:	inc    esp
  42f7e6:	addr16 in al,0x5
  42f7e9:	mov    cl,0x4b
  42f7eb:	out    0xe2,al
  42f7ed:	in     eax,dx
  42f7ee:	popa   
  42f7ef:	fwait
  42f7f0:	jge    0x42f858
  42f7f2:	ror    ah,cl
  42f7f4:	jg     0x42f7c1
  42f7f6:	mov    ah,0xf1
  42f7f8:	jge    0x42f798
  42f7fa:	xchg   ecx,eax
  42f7fb:	sbb    eax,0x47f6e90
  42f800:	sbb    DWORD PTR [edx+0x13],ecx
  42f803:	lods   eax,DWORD PTR ds:[esi]
  42f804:	clc    
  42f805:	inc    edx
  42f806:	cmp    DWORD PTR [ebx+0x5bbc3b27],ebx
  42f80c:	arpl   WORD PTR [edi-0x424fb8e3],bp
  42f812:	loope  0x42f851
  42f814:	icebp  
  42f815:	ficomp DWORD PTR [edx+0x4f0002bc]
  42f81b:	nop
  42f81c:	int    0x88
  42f81e:	jmp    0xaa2d580f
  42f823:	jp     0x42f869
  42f825:	jns    0x42f7b4
  42f827:	sbb    al,0x9f
  42f829:	mov    fs,WORD PTR [ecx+0x44]
  42f82c:	sub    al,0x42
  42f82e:	gs loope 0x42f82e
  42f831:	and    al,0x1d
  42f833:	sub    ebp,ebp
  42f835:	sti    
  42f836:	sbb    BYTE PTR [ecx+0x4b],al
  42f839:	mov    al,0x7e
  42f83b:	call   0xa0a45c6d
  42f840:	inc    ebp
  42f841:	pusha  
  42f842:	sub    al,0xec
  42f844:	unpckhps xmm4,XMMWORD PTR [esi-0x32d8ad9]
  42f84b:	mov    eax,0x4244fc48
  42f850:	push   ss
  42f851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f852:	fwait
  42f853:	xlat   BYTE PTR ds:[ebx]
  42f854:	mov    ch,0x27
  42f856:	loope  0x42f88b
  42f858:	bnd jmp 0x42f7ee
  42f85b:	push   0x7cfce67
  42f860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f861:	enter  0xd570,0xbd
  42f865:	sub    eax,0x139d4b3d
  42f86a:	call   esp
  42f86c:	je     0x42f7f2
  42f86e:	ror    eax,1
  42f870:	sub    al,0xdf
  42f872:	ret    0xab88
  42f875:	fisubr DWORD PTR [ebx+0x46d623b8]
  42f87b:	sahf   
  42f87c:	xchg   ebx,eax
  42f87d:	inc    ebp
  42f87e:	outs   dx,BYTE PTR ds:[esi]
  42f87f:	sar    BYTE PTR [esi],cl
  42f881:	sbb    al,cl
  42f883:	mov    BYTE PTR [ebp+0x6e],0x62
  42f887:	mov    si,0xcce6
  42f88b:	hlt    
  42f88c:	sbb    al,al
  42f88e:	dec    ebx
  42f88f:	out    0x8e,al
  42f891:	ror    edi,0xdd
  42f894:	call   0xf77248a1
  42f899:	imul   ebx,ecx,0xabf45b66
  42f89f:	sbb    eax,0x27859a9
  42f8a4:	add    cl,BYTE PTR [ebx]
  42f8a6:	and    al,0xae
  42f8a8:	cmp    ah,BYTE PTR [esi+0x57b2ca8c]
  42f8ae:	push   esi
  42f8af:	adc    eax,0xcd012039
  42f8b4:	ds inc ecx
  42f8b6:	ins    BYTE PTR es:[edi],dx
  42f8b7:	iret   
  42f8b8:	retf   
  42f8b9:	and    cl,BYTE PTR [ebp+0x19]
  42f8bc:	addr16 jl 0x42f90c
  42f8bf:	pusha  
  42f8c0:	cmp    cl,bl
  42f8c2:	loop   0x42f8c8
  42f8c4:	es pop ecx
  42f8c6:	dec    DWORD PTR [ecx+eax*8-0x57]
  42f8ca:	mov    edx,0x61b6a8bc
  42f8cf:	push   ds
  42f8d0:	xchg   edi,ebp
  42f8d2:	or     bl,dl
  42f8d4:	add    dh,dl
  42f8d6:	adc    eax,0xe3b13932
  42f8db:	jl     0x42f941
  42f8dd:	enter  0x6c23,0xa
  42f8e1:	jbe    0x42f8f7
  42f8e3:	int    0x8f
  42f8e5:	pop    ds
  42f8e6:	enter  0xef76,0xf4
  42f8ea:	mov    al,0x4a
  42f8ec:	and    DWORD PTR [esi-0x13],ebx
  42f8ef:	cwde   
  42f8f0:	sbb    eax,0xc98c710c
  42f8f5:	and    DWORD PTR [ebx+eax*8-0x3a],eax
  42f8f9:	ins    DWORD PTR es:[edi],dx
  42f8fa:	lea    ecx,[esp+ebp*2+0x5d]
  42f8fe:	loopne 0x42f8f9
  42f900:	push   eax
  42f901:	cdq    
  42f902:	push   ebx
  42f903:	sub    eax,0xa738913f
  42f908:	mov    eax,ds:0x8edc2e71
  42f90d:	cmp    al,0x2b
  42f90f:	fisubr WORD PTR [esi-0x27]
  42f912:	mov    dl,ah
  42f914:	shr    DWORD PTR [ecx+0x21],cl
  42f917:	push   edx
  42f918:	mov    dh,0x71
  42f91a:	(bad)  [ebx-0x350e02e2]
  42f920:	daa    
  42f921:	loope  0x42f8f8
  42f923:	das    
  42f924:	(bad)  
  42f925:	retf   0xfbd2
  42f928:	repz cmp ebp,DWORD PTR [ecx+0x45b0304a]
  42f92f:	sub    BYTE PTR [edi+0x25c5ff04],dh
  42f935:	fsubr  DWORD PTR [ecx]
  42f937:	es jge 0x42f8bd
  42f93a:	(bad)  
  42f93b:	sbb    eax,0xae233e1f
  42f940:	sbb    esi,eax
  42f942:	mov    dl,0xd2
  42f944:	sbb    DWORD PTR fs:[esi+eiz*8+0x79],ebx
  42f949:	into   
  42f94a:	dec    edi
  42f94b:	or     eax,0xaf49f56f
  42f950:	jmp    0x42f930
  42f952:	(bad)  
  42f953:	das    
  42f954:	pop    ds
  42f955:	and    BYTE PTR [ebp-0xb0736c4],ah
  42f95b:	repz jl 0x42f94f
  42f95e:	aam    0xba
  42f960:	loopne 0x42f985
  42f962:	adc    bh,cl
  42f964:	pop    esp
  42f965:	xchg   ebp,eax
  42f966:	lahf   
  42f967:	inc    ecx
  42f968:	and    DWORD PTR [eax],eax
  42f96a:	ins    BYTE PTR es:[edi],dx
  42f96b:	jno    0x42f95b
  42f96d:	ss aas 
  42f96f:	or     ah,ch
  42f971:	(bad)  
  42f972:	lods   al,BYTE PTR ds:[esi]
  42f973:	dec    edx
  42f974:	cli    
  42f975:	push   0x6a
  42f977:	push   ds
  42f978:	xchg   ebp,eax
  42f979:	and    dl,BYTE PTR [eax-0x2679b24c]
  42f97f:	jns    0x42f9ab
  42f981:	sbb    al,0x25
  42f983:	(bad)  
  42f984:	and    edx,DWORD PTR [ebp+0xfbfc88a]
  42f98a:	pop    ss
  42f98b:	xlat   BYTE PTR ds:[bx]
  42f98d:	cmp    edi,DWORD PTR [edi+0xcecff01]
  42f993:	mov    cl,0xd9
  42f995:	mov    eax,ds:0xd383fcae
  42f99a:	lahf   
  42f99b:	inc    eax
  42f99c:	adc    al,0xd8
  42f99e:	aam    0x7f
  42f9a0:	rcl    eax,cl
  42f9a2:	test   DWORD PTR [eax-0x7],esi
  42f9a5:	aad    0x6
  42f9a7:	dec    ebx
  42f9a8:	iret   
  42f9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9aa:	xchg   ebp,eax
  42f9ab:	cmp    al,0x53
  42f9ad:	dec    esp
  42f9ae:	mov    al,0xd7
  42f9b0:	sbb    al,0xbb
  42f9b2:	sbb    al,ah
  42f9b4:	jmp    0x42f94d
  42f9b6:	mov    cl,0x98
  42f9b8:	enter  0xdcc6,0x4
  42f9bc:	push   eax
  42f9bd:	sub    ch,BYTE PTR [eax]
  42f9bf:	sahf   
  42f9c0:	mov    edi,0x4493d35e
  42f9c5:	loope  0x42f96a
  42f9c7:	outs   dx,DWORD PTR ds:[esi]
  42f9c8:	mov    ch,0xf5
  42f9ca:	imul   ebx,DWORD PTR [ecx+0x2c],0x73
  42f9ce:	out    0x58,eax
  42f9d0:	out    dx,al
  42f9d1:	fdivr  st,st(6)
  42f9d3:	imul   ebx,DWORD PTR [edx-0x75],0x75
  42f9d7:	cmp    al,0x3f
  42f9d9:	or     eax,0x3f94594c
  42f9de:	adc    ebp,DWORD PTR [esi]
  42f9e0:	rcl    DWORD PTR [edi+edi*2],cl
  42f9e3:	jno    0x42f9b2
  42f9e5:	sbb    al,bl
  42f9e7:	xor    dl,BYTE PTR [bx]
  42f9ea:	add    esp,DWORD PTR [ebx]
  42f9ec:	test   DWORD PTR [ebp+ebp*8+0x13],edx
  42f9f0:	out    0x49,eax
  42f9f2:	sbb    ch,BYTE PTR [ecx-0x7f809acb]
  42f9f8:	icebp  
  42f9f9:	sub    ebx,DWORD PTR [edx+ebx*2-0x5bd481f9]
  42fa00:	jmp    0x42f997
  42fa02:	add    BYTE PTR [esi],0xd6
  42fa05:	sub    DWORD PTR [edx-0x62db5537],0x3f
  42fa0c:	shl    DWORD PTR ds:0xf0a61034,1
  42fa12:	and    esp,DWORD PTR [eax-0x3b]
  42fa15:	pop    es
  42fa16:	test   DWORD PTR [esi],eax
  42fa18:	(bad)  
  42fa19:	xor    DWORD PTR [ebx-0x43],eax
  42fa1c:	in     al,dx
  42fa1d:	pop    esp
  42fa1e:	pop    ds
  42fa1f:	add    eax,0x8e2a9f16
  42fa24:	(bad)  
  42fa25:	fisubr DWORD PTR [esi+0x4ab3a2f4]
  42fa2b:	pop    ebp
  42fa2c:	pop    ebx
  42fa2d:	or     ebp,ebp
  42fa2f:	fs cmp ah,bl
  42fa32:	stos   BYTE PTR es:[edi],al
  42fa33:	push   edi
  42fa34:	aad    0x8
  42fa36:	int    0x36
  42fa38:	(bad)  
  42fa39:	out    0xee,al
  42fa3b:	int    0x5d
  42fa3d:	add    bl,BYTE PTR [ecx+0x2b]
  42fa40:	inc    edi
  42fa41:	push   esi
  42fa42:	das    
  42fa43:	ret    
  42fa44:	cmp    eax,0x59257d1c
  42fa49:	jp     0x42f9e9
  42fa4b:	mov    ds:0xb1a05694,eax
  42fa50:	in     al,dx
  42fa51:	push   esp
  42fa52:	jno    0x42fa75
  42fa54:	test   al,0xdb
  42fa56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa58:	jecxz  0x42fa54
  42fa5a:	add    edx,DWORD PTR [edi+0x3ad24899]
  42fa60:	or     al,0x2c
  42fa62:	fild   DWORD PTR ds:0xadae0882
  42fa68:	je     0x42fac6
  42fa6a:	into   
  42fa6b:	(bad)  
  42fa6c:	jge    0x42f9fe
  42fa6e:	mov    ds:0x2595d4c,eax
  42fa73:	leave  
  42fa74:	add    bl,BYTE PTR [edi-0x4b]
  42fa77:	fdivr  DWORD PTR [ecx+0x11]
  42fa7a:	sbb    eax,0xb28b121b
  42fa7f:	inc    edi
  42fa80:	xchg   ecx,eax
  42fa81:	push   0x4cf447bd
  42fa86:	stos   DWORD PTR es:[edi],eax
  42fa87:	bound  esp,QWORD PTR [edx]
  42fa89:	mov    eax,ds:0x4249a8a3
  42fa8e:	jnp    0x42fa32
  42fa90:	sbb    BYTE PTR [esp+edi*1],ch
  42fa93:	(bad)  
  42fa94:	xlat   BYTE PTR ds:[ebx]
  42fa95:	xchg   edx,eax
  42fa96:	cmovbe eax,DWORD PTR fs:[edi-0x5b0e608a]
  42fa9e:	jle    0x42fa4b
  42faa0:	sbb    DWORD PTR [ecx],edi
  42faa2:	mov    ds:0xd6bddbd9,eax
  42faa7:	or     BYTE PTR [edi],0x1b
  42faaa:	mov    al,0xa0
  42faac:	inc    edi
  42faad:	push   ebp
  42faae:	(bad)  
  42faaf:	mov    dl,0x47
  42fab1:	or     BYTE PTR [eax-0x51],dl
  42fab4:	or     edx,DWORD PTR [edx-0xd]
  42fab7:	mov    bh,0xf
  42fab9:	pop    eax
  42faba:	push   ds
  42fabb:	add    eax,0xcd7ffe09
  42fac0:	sahf   
  42fac1:	jmp    0x9251ff3d
  42fac6:	sub    dl,bh
  42fac8:	dec    eax
  42fac9:	aas    
  42faca:	push   esp
  42facb:	sahf   
  42facc:	mov    WORD PTR [ebx-0x3ed7d317],?
  42fad2:	std    
  42fad3:	(bad)  
  42fad4:	ins    BYTE PTR es:[edi],dx
  42fad5:	retf   0xffcf
  42fad8:	inc    ebx
  42fad9:	int3   
  42fada:	push   ds
  42fadb:	or     BYTE PTR [esi+0x18],bl
  42fade:	and    dl,BYTE PTR [eax]
  42fae0:	adc    eax,0x75e46068
  42fae5:	fcomp  DWORD PTR [ebx+0x17d87d16]
  42faeb:	push   eax
  42faec:	xchg   ecx,eax
  42faed:	pop    edx
  42faee:	xor    BYTE PTR [edi+0x7bfa5705],dl
  42faf4:	mov    ebp,0x1a1ce6c5
  42faf9:	adc    BYTE PTR cs:[ebx],ah
  42fafc:	add    DWORD PTR [edx],0x88a1fb0
  42fb02:	jne    0x42facd
  42fb04:	xor    eax,0x984dabfe
  42fb09:	jae    0x42fae9
  42fb0b:	jae    0x42fac7
  42fb0d:	jg     0x42fb01
  42fb0f:	or     edi,DWORD PTR [ecx]
  42fb11:	test   eax,0xb4447b1d
  42fb16:	mov    gs,WORD PTR [esp+eiz*2]
  42fb19:	xchg   esi,eax
  42fb1a:	cmp    ecx,esp
  42fb1c:	mov    edi,0xf4c490d
  42fb21:	in     al,dx
  42fb22:	jge    0x42fad0
  42fb24:	rcl    esi,1
  42fb26:	stc    
  42fb27:	test   eax,0xe1f87bd4
  42fb2c:	dec    ebp
  42fb2d:	bound  edx,QWORD PTR [edi]
  42fb2f:	add    eax,0x45e7892c
  42fb34:	dec    edx
  42fb35:	pop    ebx
  42fb36:	fild   WORD PTR [edi-0xf]
  42fb39:	jb     0x42faf8
  42fb3b:	push   ebp
  42fb3c:	mov    ecx,0x11029e2
  42fb41:	and    bl,BYTE PTR [ecx+0x30daed9e]
  42fb47:	cmc    
  42fb48:	inc    ebp
  42fb49:	mov    cl,BYTE PTR [edi]
  42fb4b:	jns    0x42fafc
  42fb4d:	fwait
  42fb4e:	pop    ds
  42fb4f:	daa    
  42fb50:	mov    al,ds:0x3247a721
  42fb55:	lds    esp,FWORD PTR [ebx]
  42fb57:	xor    DWORD PTR es:[edi-0x2e],0x4a6added
  42fb5f:	pusha  
  42fb60:	sbb    BYTE PTR [esi+edi*8+0x3e],ch
  42fb64:	(bad)  
  42fb65:	jmp    0x42fbb5
  42fb67:	retf   0x991a
  42fb6a:	imul   ecx,edi,0xd1a6525
  42fb70:	inc    DWORD PTR ds:0x8aac001
  42fb76:	mul    DWORD PTR [eax]
  42fb78:	adc    al,0x51
  42fb7a:	je     0x42fafc
  42fb7c:	inc    eax
  42fb7d:	cmp    cl,dl
  42fb7f:	pop    ecx
  42fb80:	inc    ecx
  42fb81:	fcomp  QWORD PTR [esi+edx*2-0x78d27129]
  42fb88:	clc    
  42fb89:	enter  0x8a5,0xc
  42fb8d:	push   cs
  42fb8e:	imul   eax,DWORD PTR [eax],0x68
  42fb91:	mov    ecx,0x97c80f25
  42fb96:	(bad)  
  42fb97:	loopne 0x42fb71
  42fb99:	sub    BYTE PTR [edi+0x51],cl
  42fb9c:	rcl    BYTE PTR [edi-0x36fbedc3],1
  42fba2:	mov    dl,0x2b
  42fba4:	mov    BYTE PTR [esi+0x253c45b2],cl
  42fbaa:	addr16 jo 0x42fb8b
  42fbad:	xchg   edi,eax
  42fbae:	inc    ebp
  42fbaf:	clc    
  42fbb0:	inc    edi
  42fbb1:	pushf  
  42fbb2:	xor    dl,BYTE PTR [edx-0x169a1a3]
  42fbb8:	jecxz  0x42fba3
  42fbba:	push   cs
  42fbbb:	scas   eax,DWORD PTR es:[edi]
  42fbbc:	adc    BYTE PTR ds:[ecx],ch
  42fbbf:	out    dx,eax
  42fbc0:	or     al,0x31
  42fbc2:	stc    
  42fbc3:	pop    ebp
  42fbc4:	xor    eax,DWORD PTR [esi]
  42fbc6:	aas    
  42fbc7:	(bad)  
  42fbc8:	mov    esi,0x5a3b3ea
  42fbcd:	retf   
  42fbce:	xchg   edi,eax
  42fbcf:	adc    ebx,DWORD PTR [edi]
  42fbd1:	test   DWORD PTR [edx+0x14efbd81],esp
  42fbd7:	mov    al,ds:0xf682a1d4
  42fbdc:	mov    edi,0x141234f1
  42fbe1:	mov    al,0xc5
  42fbe3:	jae    0x42fc3c
  42fbe5:	xlat   BYTE PTR ds:[ebx]
  42fbe6:	xchg   esp,eax
  42fbe7:	pop    eax
  42fbe8:	enterw 0x2626,0xcc
  42fbed:	or     ah,BYTE PTR [ecx+edx*1-0x76]
  42fbf1:	mov    esp,0x37de1249
  42fbf6:	sbb    DWORD PTR [ecx],ecx
  42fbf8:	dec    ecx
  42fbf9:	lock outs dx,DWORD PTR ds:[esi]
  42fbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbfc:	sbb    al,0x71
  42fbfe:	xor    DWORD PTR [ebx],ebx
  42fc00:	push   ds
  42fc01:	dec    esp
  42fc02:	push   0xffffffeb
  42fc04:	rcr    DWORD PTR [esi],cl
  42fc06:	inc    ebx
  42fc07:	icebp  
  42fc08:	cmp    DWORD PTR [ebp+0x50],eax
  42fc0b:	dec    edi
  42fc0c:	inc    edx
  42fc0d:	cwde   
  42fc0e:	aaa    
  42fc0f:	cmp    BYTE PTR [eax-0x1255d1c9],cl
  42fc15:	add    BYTE PTR [esi],ah
  42fc17:	xor    bh,BYTE PTR ss:[ecx-0x79]
  42fc1b:	mov    eax,0xb4ab1dd2
  42fc20:	push   eax
  42fc21:	in     eax,0x43
  42fc23:	mov    ebp,0xbb746e51
  42fc28:	sbb    DWORD PTR [ecx-0x46],ecx
  42fc2b:	xchg   ecx,eax
  42fc2c:	pop    ebx
  42fc2d:	sub    DWORD PTR [esi],0xffffffa1
  42fc30:	lods   eax,DWORD PTR ds:[esi]
  42fc31:	call   0x59c7c155
  42fc36:	pop    ebx
  42fc37:	push   edx
  42fc38:	int3   
  42fc39:	lahf   
  42fc3a:	inc    esi
  42fc3b:	xor    al,0x62
  42fc3d:	dec    esp
  42fc3e:	(bad)  
  42fc3f:	scas   eax,DWORD PTR es:[edi]
  42fc40:	in     al,0x71
  42fc42:	dec    esp
  42fc43:	mov    ecx,0xca775b7e
  42fc48:	xor    ebx,DWORD PTR [ecx+0xc]
  42fc4b:	into   
  42fc4c:	rcl    BYTE PTR [edi],0x23
  42fc4f:	sti    
  42fc50:	jno    0x42fc25
  42fc52:	stos   BYTE PTR es:[edi],al
  42fc53:	or     eax,0x94002230
  42fc58:	div    BYTE PTR [ebx]
  42fc5a:	fwait
  42fc5b:	int    0x1d
  42fc5d:	call   0xde4a:0xba0a8899
  42fc64:	mov    ds:0xe152b01a,eax
  42fc69:	popf   
  42fc6a:	mov    dl,0xe3
  42fc6c:	adc    DWORD PTR [ebp+0x25],ebx
  42fc6f:	test   al,0x7b
  42fc71:	vmaxss xmm6,xmm5,DWORD PTR [ecx]
  42fc75:	cmc    
  42fc76:	cwde   
  42fc77:	sub    al,0x2a
  42fc79:	jge    0x42fc6b
  42fc7b:	fsub   st(6),st
  42fc7d:	repnz ss ss cmp esi,ecx
  42fc82:	ins    DWORD PTR es:[edi],dx
  42fc83:	mov    ebp,0xced14b77
  42fc88:	hlt    
  42fc89:	mov    ebp,edx
  42fc8b:	push   es
  42fc8c:	(bad)  
  42fc8d:	pop    edx
  42fc8e:	int    0x39
  42fc90:	mov    dl,0xce
  42fc92:	cmp    al,0x40
  42fc95:	fldenv [eax+0x4aac0f40]
  42fc9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc9c:	ds into 
  42fc9e:	arpl   WORD PTR [esi+0x17],di
  42fca1:	and    eax,0x38624a
  42fca6:	add    bh,BYTE PTR [edi-0x73]
  42fca9:	dec    DWORD PTR [ebp-0x3b]
  42fcac:	jp     0x42fd1f
  42fcae:	dec    ecx
  42fcaf:	inc    edi
  42fcb0:	dec    ebp
  42fcb1:	dec    ecx
  42fcb2:	rcl    BYTE PTR [eax],0x61
  42fcb5:	(bad)  
  42fcb6:	adc    BYTE PTR [eax+eiz*8+0x3f0575aa],dh
  42fcbd:	shl    BYTE PTR [edx+0x52],0x93
  42fcc1:	retf   
  42fcc2:	push   0x3f
  42fcc4:	xchg   ebx,eax
  42fcc5:	mov    edi,0x25e67d1d
  42fcca:	or     BYTE PTR [eax-0x34],cl
  42fccd:	data16 les dx,DWORD PTR [eax+ebx*4-0x46]
  42fcd3:	pop    ss
  42fcd4:	and    al,0x5
  42fcd6:	aas    
  42fcd7:	xor    bh,cl
  42fcd9:	mov    dl,0xe2
  42fcdb:	(bad)  
  42fcdc:	outs   dx,BYTE PTR ds:[esi]
  42fcdd:	pop    edi
  42fcde:	nop
  42fcdf:	push   0xb1474dbc
  42fce4:	sahf   
  42fce5:	cmp    DWORD PTR [ebx],ebp
  42fce7:	or     cl,cl
  42fce9:	hlt    
  42fcea:	add    BYTE PTR [eax+0x10],dh
  42fced:	pop    ss
  42fcee:	mov    ebx,0xf950c191
  42fcf3:	mov    dh,0x3c
  42fcf5:	mov    cl,0xfb
  42fcf7:	xor    al,0x1a
  42fcf9:	cwde   
  42fcfa:	jns    0x42fd68
  42fcfc:	xor    BYTE PTR [esi-0x51c0c32c],ch
  42fd02:	pop    ebx
  42fd03:	mov    edi,0x320d843b
  42fd08:	mov    dh,0x5
  42fd0a:	lds    ebp,FWORD PTR [ebx-0x40de074b]
  42fd10:	dec    esi
  42fd11:	scas   al,BYTE PTR es:[edi]
  42fd12:	addr16 push esp
  42fd14:	jae    0x42fd24
  42fd16:	je     0x42fd89
  42fd18:	push   ss
  42fd19:	push   es
  42fd1a:	dec    edx
  42fd1b:	arpl   bp,di
  42fd1d:	mov    ah,0xd0
  42fd1f:	xchg   ebx,eax
  42fd20:	mov    ebx,0x98c9ec9
  42fd25:	call   0xe177:0x95ef1c02
  42fd2c:	mov    ch,BYTE PTR [ebp+0x3d]
  42fd2f:	out    dx,al
  42fd30:	lock jne 0x42fd94
  42fd33:	sbb    BYTE PTR [esi+edx*8],al
  42fd36:	cmp    ebx,ebx
  42fd38:	push   edx
  42fd39:	rol    DWORD PTR [ecx-0x67],cl
  42fd3c:	mov    ah,0xed
  42fd3e:	pop    eax
  42fd3f:	fs jg  0x42fd27
  42fd42:	cmc    
  42fd43:	div    esi
  42fd45:	aad    0xa1
  42fd47:	push   ebp
  42fd48:	bound  edx,QWORD PTR [ecx*8-0x73c06adc]
  42fd4f:	jo     0x42fd80
  42fd51:	clc    
  42fd52:	retf   
  42fd53:	jo     0x42fce8
  42fd55:	cmovae eax,DWORD PTR [eax-0x2e26b136]
  42fd5c:	add    eax,0x73cce348
  42fd61:	iret   
  42fd62:	jbe    0x42fd45
  42fd64:	xchg   esi,eax
  42fd65:	adc    BYTE PTR [edi-0x28],al
  42fd68:	cmp    bl,BYTE PTR [ebx+0x214cc6c0]
  42fd6e:	inc    edx
  42fd6f:	dec    edi
  42fd70:	cld    
  42fd71:	adc    ebp,DWORD PTR [esi-0x21]
  42fd74:	cld    
  42fd75:	imul   esp,DWORD PTR [ebx-0x2b5db7de],0xfffffff7
  42fd7c:	(bad)  
  42fd7d:	sar    BYTE PTR [ebx+0x41],0xb1
  42fd81:	and    BYTE PTR [edx*1+0x7cd1d99],0x64
  42fd89:	mov    edx,0xa4636a3c
  42fd8e:	cld    
  42fd8f:	mov    cl,0x27
  42fd91:	cld    
  42fd92:	dec    ebp
  42fd93:	cmp    eax,0x44b6a237
  42fd98:	mov    edi,edx
  42fd9a:	repz push ebx
  42fd9c:	inc    eax
  42fd9d:	out    0x51,eax
  42fd9f:	in     al,0xd3
  42fda1:	stc    
  42fda2:	mov    ebp,0xa7104d35
  42fda7:	loopne 0x42fde9
  42fda9:	pop    esi
  42fdaa:	mov    esp,ebx
  42fdac:	mov    esi,0x12b7e8f2
  42fdb1:	(bad)  
  42fdb3:	dec    esi
  42fdb4:	dec    ebx
  42fdb5:	js     0x42fdf1
  42fdb7:	ret    
  42fdb8:	and    BYTE PTR [esi],ch
  42fdba:	and    bh,BYTE PTR [ebp-0x2f]
  42fdbd:	mov    esi,DWORD PTR [eax+0x7503002c]
  42fdc3:	fs es push ds
  42fdc6:	out    0x8,eax
  42fdc8:	xchg   esi,eax
  42fdc9:	ror    DWORD PTR [eax-0x35fc5c04],cl
  42fdcf:	push   ebp
  42fdd0:	cmp    eax,0x47cecd7a
  42fdd5:	cmp    edx,DWORD PTR [ebp+0x59fa58ba]
  42fddb:	rol    BYTE PTR [eax],cl
  42fddd:	mov    ds:0x14e27a73,al
  42fde2:	jno    0x42fdea
  42fde4:	xlat   BYTE PTR ds:[ebx]
  42fde5:	js     0x42fdf9
  42fde7:	or     BYTE PTR [edx-0x78923195],0x9a
  42fdee:	fstp   TBYTE PTR ds:[edx-0x6f]
  42fdf2:	addr16 inc eax
  42fdf4:	std    
  42fdf5:	mov    ah,0xc8
  42fdf7:	fs dec esi
  42fdf9:	daa    
  42fdfa:	push   ebx
  42fdfb:	mov    ah,0x9f
  42fdfd:	jmp    FWORD PTR [ecx+0xf09aef2]
  42fe03:	scas   al,BYTE PTR es:[edi]
  42fe04:	(bad)  
  42fe05:	arpl   WORD PTR [ebx+0x3007aa69],bx
  42fe0b:	imul   ecx,DWORD PTR [ebx+edi*8-0x5a46e13d],0xffffffa8
  42fe13:	jecxz  0x42fdfb
  42fe15:	sub    ah,BYTE PTR [ebx]
  42fe17:	push   ebx
  42fe18:	or     ecx,DWORD PTR [ecx]
  42fe1a:	jae    0x42fe0c
  42fe1c:	mov    BYTE PTR [esp+esi*1-0x6eeb3ed0],cl
  42fe23:	sbb    ebx,DWORD PTR [esi+0x18ec28cd]
  42fe29:	mul    BYTE PTR [esi]
  42fe2b:	adc    BYTE PTR [eax+edx*8+0x4ff598ee],dl
  42fe32:	xchg   DWORD PTR [eax],esp
  42fe34:	xor    esp,edi
  42fe36:	neg    DWORD PTR [edi+0x3a2546ea]
  42fe3c:	call   0x6bedf361
  42fe41:	jmp    0x2377:0x585f2f3
  42fe48:	jmp    0xab7d:0x62191a14
  42fe4f:	jmp    0x61c7:0x722c635b
  42fe56:	out    0x7c,eax
  42fe58:	and    eax,edx
  42fe5a:	in     al,0x7a
  42fe5c:	retf   
  42fe5d:	pop    es
  42fe5e:	mov    ds:0x776908b4,al
  42fe63:	pop    edx
  42fe64:	aas    
  42fe65:	mov    edx,0x2d14fd74
  42fe6a:	sbb    eax,0xf4877b48
  42fe6f:	in     al,0x9b
  42fe71:	dec    ebx
  42fe72:	je     0x42fee2
  42fe74:	adc    al,0xab
  42fe76:	or     edx,DWORD PTR [ecx]
  42fe78:	jmp    0xd1db4e22
  42fe7d:	inc    esi
  42fe7e:	js     0x42feb1
  42fe80:	or     BYTE PTR [esi+edi*8-0x106ce339],ch
  42fe87:	jne    0x42fea6
  42fe89:	xchg   BYTE PTR ds:0xa5bc1bb7,cl
  42fe8f:	aad    0xe5
  42fe91:	mov    ch,0x8d
  42fe93:	jmp    0x42febc
  42fe95:	or     dh,bl
  42fe97:	adc    edx,DWORD PTR [esp+ecx*4+0x963c495]
  42fe9e:	and    BYTE PTR [edx],dl
  42fea0:	jae    0x42fe22
  42fea2:	or     eax,0x2596ecf1
  42fea7:	mov    al,ds:0xf8e2706d
  42feac:	mov    esi,0xdf6af1ec
  42feb1:	xor    al,0x72
  42feb3:	gs pop es
  42feb5:	mov    bh,0x49
  42feb7:	retf   0xaef4
  42feba:	test   BYTE PTR [edi+esi*4-0x15896edb],cl
  42fec1:	cmp    ebp,DWORD PTR [ebx+0x176af633]
  42fec7:	daa    
  42fec8:	mov    edx,DWORD PTR [esi+edx*4-0x16352a2d]
  42fecf:	lds    ebx,FWORD PTR [edi]
  42fed1:	lock ror DWORD PTR ds:[ebx-0x1f],1
  42fed6:	scas   al,BYTE PTR es:[edi]
  42fed7:	call   0xbc4d5848
  42fedc:	mov    cl,0x47
  42fede:	mov    al,0xbc
  42fee0:	and    al,0x9
  42fee2:	jne    0x42feaa
  42fee4:	rol    BYTE PTR [edx+0x4b],cl
  42fee7:	out    dx,eax
  42fee8:	sbb    BYTE PTR ds:0xa8d29cb2,cl
  42feee:	add    BYTE PTR [esi+ebp*1],al
  42fef1:	xor    eax,0x3aaeb630
  42fef6:	xor    eax,0x19954f5c
  42fefb:	add    eax,0xf4cabb34
  42ff00:	or     BYTE PTR [edx-0x6e4ed829],bh
  42ff06:	adc    al,0x96
  42ff08:	xchg   edi,eax
  42ff09:	inc    ecx
  42ff0a:	imul   esi
  42ff0c:	rcr    BYTE PTR [edi],cl
  42ff0e:	push   ss
  42ff0f:	adc    al,0x70
  42ff11:	sub    al,BYTE PTR [edi-0x44]
  42ff14:	iret   
  42ff15:	sub    DWORD PTR [esp+edx*1-0x6c1fea92],ecx
  42ff1c:	pop    DWORD PTR [ecx-0x33d0b0ed]
  42ff22:	cmc    
  42ff23:	not    BYTE PTR [ebx+0x51]
  42ff26:	outs   dx,BYTE PTR ds:[esi]
  42ff27:	mov    eax,0xc748635a
  42ff2c:	mov    WORD PTR [esi-0x33],gs
  42ff2f:	loop   0x42ff4c
  42ff31:	int    0xc5
  42ff33:	pop    edi
  42ff34:	cmp    eax,0x5be03280
  42ff39:	inc    esi
  42ff3a:	je     0x42fec9
  42ff3c:	sar    DWORD PTR ds:0xedd276bf,0xf5
  42ff43:	sar    DWORD PTR [eax],cl
  42ff45:	(bad)  
  42ff46:	mov    ss,WORD PTR [esi+edi*1-0x4f5c8d03]
  42ff4d:	and    al,0x1d
  42ff4f:	in     eax,0xd4
  42ff51:	dec    esi
  42ff52:	cld    
  42ff53:	cs inc esi
  42ff55:	in     eax,dx
  42ff56:	inc    edx
  42ff57:	imul   ecx,ebp,0x47
  42ff5a:	aam    0x24
  42ff5c:	pop    ecx
  42ff5d:	pop    esi
  42ff5e:	imul   BYTE PTR [esi+ecx*2-0x19c4ec2e]
  42ff65:	push   esi
  42ff66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff67:	sub    al,0x90
  42ff69:	imul   DWORD PTR [ebx-0x74a1cf8e]
  42ff6f:	mov    BYTE PTR [ecx-0x42],dh
  42ff72:	jg     0x42ff93
  42ff74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff75:	push   edi
  42ff76:	int    0x7d
  42ff78:	dec    esi
  42ff79:	inc    edi
  42ff7a:	cmp    ebp,DWORD PTR [eax-0xa1bd6f6]
  42ff80:	push   edx
  42ff81:	std    
  42ff82:	nop
  42ff83:	mov    dh,0x48
  42ff85:	add    eax,DWORD PTR [eax+0x3735faaf]
  42ff8b:	xor    BYTE PTR ds:[ebp-0xa],0x11
  42ff90:	mov    edi,DWORD PTR [eax-0x4e]
  42ff93:	jns    0x42ffd8
  42ff95:	adc    al,0x41
  42ff97:	and    BYTE PTR [edi+0x37],dl
  42ff9a:	sar    DWORD PTR [eax+0x60],0x6e
  42ff9e:	int3   
  42ff9f:	mov    al,0x43
  42ffa1:	mov    WORD PTR [ebp+0x69],?
  42ffa4:	ret    0xb609
  42ffa7:	mov    ebp,DWORD PTR [ebp+0x66]
  42ffaa:	lock mov al,ds:0x40583029
  42ffb0:	mov    ah,0x78
  42ffb2:	fst    DWORD PTR [eax]
  42ffb4:	mov    al,ds:0x15e88da8
  42ffb9:	(bad)  
  42ffba:	stc    
  42ffbb:	xchg   ebp,eax
  42ffbc:	in     al,dx
  42ffbd:	into   
  42ffbe:	push   ecx
  42ffbf:	cwde   
  42ffc0:	add    edx,DWORD PTR [ecx+0x52caae86]
  42ffc6:	sub    al,0x65
  42ffc8:	mov    dh,0xca
  42ffca:	xor    eax,0xaa699627
  42ffcf:	imul   edx,DWORD PTR [ebx+0x6baf49a8],0x6a
  42ffd6:	stos   BYTE PTR es:[edi],al
  42ffd7:	aaa    
  42ffd8:	hlt    
  42ffd9:	clc    
  42ffda:	cmp    al,0xb0
  42ffdc:	(bad)  
  42ffdd:	in     eax,0x18
  42ffdf:	and    edx,DWORD PTR [eax-0x2f]
  42ffe2:	xchg   eax,esi
  42ffe4:	ret    
  42ffe5:	add    al,0x76
  42ffe7:	add    dl,BYTE PTR [ebx-0x3b]
  42ffea:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42ffec:	and    cl,BYTE PTR [ebx+0x37]
  42ffef:	daa    
  42fff0:	inc    ebx
  42fff1:	add    ebp,edx
  42fff3:	xor    eax,0x9a3ee2cb
  42fff8:	or     esi,DWORD PTR [ebp-0x62]
  42fffb:	adc    edx,DWORD PTR [ecx-0x658d04fc]
  430001:	fbstp  TBYTE PTR [eax]
  430003:	scas   al,BYTE PTR es:[edi]
  430004:	push   cs
  430005:	dec    eax
  430006:	add    esi,DWORD PTR [ecx+0x43]
  430009:	xchg   edx,eax
  43000a:	shr    DWORD PTR [ebx],0xf0
  43000d:	test   bh,ah
  43000f:	sub    ah,bl
  430011:	push   ds
  430012:	xchg   edx,eax
  430013:	sub    al,0x8c
  430015:	push   0xe4d98b75
  43001a:	or     esi,ecx
  43001c:	cmp    al,BYTE PTR cs:[eax+0x319e63d8]
  430023:	lds    edi,FWORD PTR [ecx-0x7b]
  430026:	jmp    0xa4f181b2
  43002b:	ss and al,bl
  43002e:	test   al,0xf6
  430030:	test   BYTE PTR [eax-0x20],al
  430033:	dec    esp
  430034:	inc    eax
  430035:	mov    ebp,0xa00a168c
  43003a:	test   DWORD PTR [eax+0x3d],0x78c9a541
  430041:	dec    ecx
  430042:	dec    ebp
  430043:	mov    al,BYTE PTR [ebp-0x378ac2ee]
  430049:	adc    ecx,DWORD PTR [edx+0x32]
  43004c:	dec    ch
  43004e:	add    ebx,DWORD PTR [eax]
  430050:	loop   0x42ffed
  430052:	cmp    BYTE PTR [edx+0x34],cl
  430055:	ret    0xf48f
  430058:	or     al,0x30
  43005a:	lods   eax,DWORD PTR ds:[esi]
  43005b:	fistp  WORD PTR [esi+0x28]
  43005e:	jo     0x43002b
  430060:	xor    al,BYTE PTR [edi-0x7d]
  430063:	xor    cl,BYTE PTR [ebx]
  430065:	fisubr DWORD PTR [eax]
  430067:	call   0x63f0:0xf5415273
  43006e:	scas   eax,DWORD PTR es:[edi]
  43006f:	aam    0xf8
  430071:	neg    BYTE PTR [esi]
  430073:	rdpmc  
  430075:	sbb    dh,bh
  430077:	in     al,0xd3
  430079:	xchg   DWORD PTR [ebp+0x4db23efe],edi
  43007f:	xchg   esp,eax
  430080:	fdiv   QWORD PTR [ebp+0x1]
  430083:	xor    DWORD PTR [edi+0x67],eax
  430086:	xor    eax,0xa14b6f31
  43008b:	jl     0x430088
  43008d:	adc    bh,0x9b
  430090:	out    dx,al
  430091:	push   0x16636548
  430096:	jb     0x43003d
  430098:	xchg   BYTE PTR [ebx+0x48],dl
  43009b:	xor    DWORD PTR ds:0x8b1b869a,esp
  4300a1:	and    DWORD PTR [edx-0x2d],eax
  4300a4:	push   esp
  4300a5:	loope  0x430102
  4300a7:	outs   dx,DWORD PTR ds:[esi]
  4300a8:	add    eax,0xaaef2a4c
  4300ad:	mov    ch,ah
  4300af:	pop    edi
  4300b0:	xchg   edi,eax
  4300b1:	fcomp  QWORD PTR [ebp+0x75]
  4300b4:	aam    0x86
  4300b6:	ret    0xf6af
  4300b9:	gs push es
  4300bb:	push   eax
  4300bc:	lahf   
  4300bd:	xchg   esp,eax
  4300be:	sbb    BYTE PTR [esp+esi*8+0x11c5f180],dh
  4300c5:	in     al,dx
  4300c6:	and    bh,al
  4300c8:	mov    ebp,0x15cf6d0
  4300cd:	call   0x51071daa
  4300d2:	push   edi
  4300d3:	iret   
  4300d4:	dec    edi
  4300d5:	inc    edx
  4300d6:	pop    edi
  4300d7:	add    ah,BYTE PTR [ebp+0x716b1108]
  4300dd:	mov    ecx,0x5e482cd4
  4300e2:	jl     0x43011d
  4300e4:	nop
  4300e5:	or     al,0x3
  4300e7:	xchg   edx,eax
  4300e8:	sub    DWORD PTR [esp+edx*4],eax
  4300eb:	popf   
  4300ec:	into   
  4300ed:	cld    
  4300ee:	gs mov ebx,0xefda0467
  4300f4:	retf   
  4300f5:	xchg   dh,dl
  4300f7:	push   ds
  4300f8:	daa    
  4300f9:	repnz ds popf 
  4300fc:	outs   dx,DWORD PTR ds:[esi]
  4300fd:	mov    bh,BYTE PTR [edi+0x1b91cf0d]
  430103:	(bad)  
  430105:	and    edi,ebx
  430107:	data16 js 0x430109
  43010a:	inc    edi
  43010b:	je     0x43015a
  43010d:	shl    DWORD PTR [eax-0x26],1
  430110:	xor    eax,0x5dda0e43
  430115:	repz jp 0x4300c6
  430118:	pop    eax
  430119:	dec    edx
  43011a:	push   edx
  43011b:	cmp    DWORD PTR [ebx-0x7a8e2e9a],eax
  430121:	stos   BYTE PTR es:[edi],al
  430122:	and    al,BYTE PTR [esi+0x35dccd19]
  430128:	xchg   esi,eax
  430129:	call   0xdf2:0x461943e3
  430130:	adc    DWORD PTR [edi+0x59],edi
  430133:	dec    edi
  430134:	jle    0x43016b
  430136:	retf   0xdc20
  430139:	loopne 0x430172
  43013b:	ins    DWORD PTR es:[edi],dx
  43013c:	das    
  43013d:	pop    eax
  43013e:	into   
  43013f:	pop    ebx
  430140:	retf   0xc658
  430143:	jmp    0x22c9:0x7e15efd2
  43014a:	ror    BYTE PTR [ecx+0x91d9f11],cl
  430150:	dec    edi
  430151:	mov    ebx,0xe10df196
  430156:	jne    0x4300f7
  430158:	int    0xee
  43015a:	mov    edi,0x4be0b375
  43015f:	jae    0x43016f
  430161:	mov    edx,0x9b12194d
  430166:	outs   dx,BYTE PTR ds:[esi]
  430167:	sub    DWORD PTR [ecx],ebx
  430169:	xor    al,0x34
  43016b:	mov    bl,0x7e
  43016d:	sub    bl,BYTE PTR [ebx+esi*8+0x2c80597d]
  430174:	loope  0x430132
  430176:	loopne 0x430157
  430178:	adc    eax,0x821c54a3
  43017d:	pop    es
  43017e:	leave  
  43017f:	mov    BYTE PTR [edx+0x6ae82eb2],bl
  430185:	mov    esi,0x2388ca8a
  43018a:	stos   BYTE PTR es:[edi],al
  43018b:	xlat   BYTE PTR ds:[ebx]
  43018c:	cmp    al,0xa
  43018e:	in     al,dx
  43018f:	add    edi,ebx
  430191:	adc    al,0x1c
  430193:	push   esp
  430194:	retf   
  430195:	xchg   BYTE PTR [esi-0x68],cl
  430198:	sub    dl,BYTE PTR [ecx+0x73]
  43019b:	ins    BYTE PTR es:[edi],dx
  43019c:	jno    0x430210
  43019e:	cdq    
  43019f:	imul   ebx,DWORD PTR [ecx],0x78f28c4d
  4301a5:	dec    ebp
  4301a6:	and    al,0x84
  4301a8:	fs loop 0x430208
  4301ab:	push   0xc46e6467
  4301b0:	mov    ds:0x678ccc78,eax
  4301b5:	lock pop ds
  4301b7:	mov    BYTE PTR [esi],dl
  4301b9:	push   ebp
  4301ba:	add    eax,ecx
  4301bc:	xor    dh,BYTE PTR [eax-0x23]
  4301bf:	fadd   st(0),st
  4301c1:	lahf   
  4301c2:	xlat   BYTE PTR ds:[ebx]
  4301c3:	fisubr WORD PTR [ebx-0x7e]
  4301c6:	rol    dl,cl
  4301c8:	hlt    
  4301c9:	jb     0x430186
  4301cb:	inc    eax
  4301cc:	mov    al,0x6f
  4301ce:	in     eax,0x79
  4301d0:	retf   0x38bd
  4301d3:	mov    esp,0xee57638e
  4301d8:	dec    esp
  4301d9:	daa    
  4301da:	ja     0x430220
  4301dc:	pop    es
  4301dd:	add    dl,bh
  4301df:	and    bl,BYTE PTR [edi]
  4301e1:	aas    
  4301e2:	gs ret 
  4301e4:	mov    al,ds:0x3a5723ab
  4301e9:	daa    
  4301ea:	scas   al,BYTE PTR es:[edi]
  4301eb:	test   BYTE PTR [ebp-0x5],0xfb
  4301ef:	adc    DWORD PTR [ebp-0x4],esi
  4301f2:	sbb    esi,DWORD PTR [edx-0x16]
  4301f5:	dec    edi
  4301f6:	loopne 0x430192
  4301f8:	jmp    0x61c9:0x4ae60609
  4301ff:	rcl    edx,cl
  430201:	mov    bl,0xc4
  430203:	push   esp
  430204:	mov    cl,0x1c
  430206:	sub    DWORD PTR [ebx+0x38010c86],ebp
  43020c:	xchg   BYTE PTR ds:0x75069093,al
  430212:	(bad)  
  430213:	mov    dh,0xf6
  430215:	les    edx,FWORD PTR [eax+0x2c8a1c29]
  43021b:	les    esp,FWORD PTR [esi]
  43021d:	xchg   esi,eax
  43021e:	or     al,0x32
  430220:	add    cl,BYTE PTR [edx+0x2b]
  430223:	xchg   ebx,eax
  430224:	add    dh,dh
  430226:	add    ebx,esi
  430228:	push   ds
  430229:	or     BYTE PTR [ecx+0x61aa4ddc],ch
  43022f:	repnz push ss
  430231:	ss das 
  430233:	xchg   ecx,eax
  430234:	outs   dx,BYTE PTR ds:[esi]
  430235:	ins    BYTE PTR es:[edi],dx
  430236:	mov    bl,0xe7
  430238:	fild   WORD PTR [eax-0x3c]
  43023b:	popf   
  43023c:	mov    esi,0x2876123b
  430241:	jno    0x430271
  430243:	mov    esp,ecx
  430245:	push   ecx
  430246:	aam    0xb4
  430248:	and    eax,0xaf3c86fc
  43024d:	jle    0x4301ea
  43024f:	test   al,0xe8
  430251:	push   edx
  430252:	pusha  
  430253:	inc    ebp
  430254:	jg     0x430276
  430256:	and    DWORD PTR [ecx+0x4debe195],esp
  43025c:	inc    ebp
  43025d:	neg    BYTE PTR [ebx]
  43025f:	sbb    eax,0x3e97d8b4
  430264:	fidivr WORD PTR [ecx-0x283d8cda]
  43026a:	pusha  
  43026b:	imul   eax,DWORD PTR [eax+0x81d79a5],0x34
  430272:	(bad)  
  430273:	popf   
  430274:	stos   DWORD PTR es:[edi],eax
  430275:	leave  
  430276:	pop    edi
  430277:	xor    cl,al
  430279:	dec    ecx
  43027a:	xchg   dl,ch
  43027c:	push   eax
  43027d:	add    eax,DWORD PTR [edi+0x32]
  430280:	(bad)  
  430281:	adc    DWORD PTR [esi],esp
  430283:	sbb    BYTE PTR [edi+ecx*2],bh
  430286:	mov    esp,0x65089eab
  43028b:	ds jge 0x4302b3
  43028e:	enter  0x2f4,0x9
  430292:	fisubr DWORD PTR [ebp-0x34]
  430295:	jns    0x4302a8
  430297:	aad    0x1d
  430299:	push   ss
  43029a:	push   edx
  43029b:	jle    0x4302f6
  43029d:	xchg   BYTE PTR [eax+0x53],dh
  4302a0:	repz push 0x5d
  4302a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4302a4:	xchg   esi,eax
  4302a5:	mov    ebx,0xf7ed7020
  4302aa:	sub    al,0x43
  4302ac:	not    DWORD PTR [edx]
  4302ae:	iret   
  4302af:	jg     0x430281
  4302b1:	xchg   ecx,edi
  4302b3:	cwde   
  4302b4:	add    DWORD PTR [ecx-0x7d],esi
  4302b7:	pusha  
  4302b8:	inc    ebx
  4302b9:	xor    DWORD PTR [ecx+ebx*4+0x59e9b981],eax
  4302c0:	mov    ch,ch
  4302c2:	adc    eax,DWORD PTR [ecx-0x26]
  4302c5:	std    
  4302c6:	iret   
  4302c7:	retf   0x2c4e
  4302ca:	jo     0x4302f2
  4302cc:	sbb    cl,BYTE PTR [ebx-0x431b29c8]
  4302d2:	xchg   BYTE PTR [ebx+0x51],bl
  4302d5:	ja     0x4302f6
  4302d7:	or     eax,0xac6ed03d
  4302dc:	(bad)  
  4302dd:	cmp    ch,ah
  4302df:	fisubr DWORD PTR [eax+0xff12c6a]
  4302e5:	inc    eax
  4302e6:	inc    ebp
  4302e7:	ret    
  4302e8:	xlat   BYTE PTR ds:[ebx]
  4302e9:	lea    edi,[esi]
  4302eb:	mov    eax,ds:0x2ed2b12f
  4302f0:	push   ebx
  4302f1:	out    0xc3,eax
  4302f3:	(bad)  
  4302f5:	sub    eax,ebx
  4302f7:	test   DWORD PTR ds:0x5b35a57f,esi
  4302fd:	sbb    eax,0xc16dcaf1
  430302:	cmc    
  430303:	jmp    0x4302e4
  430305:	idiv   DWORD PTR [esi+0x12f85211]
  43030b:	fisttp DWORD PTR [eax-0x79a3bd0]
  430311:	int    0xf9
  430313:	in     eax,dx
  430314:	xor    ecx,DWORD PTR ds:0xd444cd89
  43031a:	cli    
  43031b:	outs   dx,BYTE PTR ds:[esi]
  43031c:	loop   0x43031b
  43031e:	add    edi,DWORD PTR [esi-0x53]
  430321:	rcr    DWORD PTR [ebx+0x63773471],0xef
  430328:	aad    0xa7
  43032a:	mov    ds:0x603d6fd9,eax
  43032f:	and    edx,DWORD PTR [esi]
  430331:	xor    edx,DWORD PTR [edi]
  430333:	shr    DWORD PTR [edi+edx*8],cl
  430336:	lds    esi,FWORD PTR [eax-0x36]
  430339:	add    al,0x22
  43033b:	push   es
  43033c:	push   ecx
  43033d:	fstp   TBYTE PTR [ecx-0x76]
  430340:	sbb    BYTE PTR [esi-0x7c0f1b66],dh
  430346:	mov    eax,fs
  430348:	aas    
  430349:	(bad)  
  43034a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43034b:	push   edx
  43034c:	fnstcw WORD PTR [eax-0x7c]
  43034f:	pop    esp
  430350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430351:	fcomi  st,st(1)
  430353:	add    DWORD PTR [esp+eax*2+0x19],ecx
  430357:	jmp    0xac1a799e
  43035c:	dec    ebx
  43035d:	pop    ecx
  43035e:	jg     0x4302eb
  430360:	xor    eax,0xa826b33e
  430365:	rcr    dh,0x5a
  430368:	cmp    al,0x4c
  43036a:	mov    ecx,DWORD PTR [edi+0x2c90d371]
  430370:	in     al,0xba
  430372:	jbe    0x430347
  430374:	repz lock inc ebp
  430377:	xor    BYTE PTR [ebx+edx*1-0x7e],dl
  43037b:	rol    ecx,cl
  43037d:	ins    BYTE PTR es:[edi],dx
  43037e:	das    
  43037f:	ds inc esp
  430381:	ja     0x4303d3
  430383:	cmp    al,0x8d
  430385:	or     BYTE PTR [ecx+0x744b302e],al
  43038b:	xor    DWORD PTR [ecx],esp
  43038d:	jecxz  0x430401
  43038f:	lea    esp,[edx]
  430391:	jae    0x430353
  430393:	cmc    
  430394:	dec    ebp
  430395:	mov    ch,BYTE PTR ds:0x7498629
  43039b:	or     DWORD PTR [edi-0x7d],ebx
  43039e:	mov    eax,0xd8fd33cf
  4303a3:	cmp    edx,edx
  4303a5:	mov    esp,0x670be623
  4303aa:	mov    eax,0xd6a1d7cc
  4303af:	push   cs
  4303b0:	out    dx,al
  4303b1:	iret   
  4303b2:	ud2    
  4303b4:	lods   eax,DWORD PTR ds:[esi]
  4303b5:	or     eax,0x6b816a90
  4303ba:	add    eax,0xc666c8f0
  4303bf:	or     DWORD PTR [edx],esp
  4303c1:	xchg   ebx,eax
  4303c2:	mov    edx,DWORD PTR [edx-0x37]
  4303c5:	imul   ecx,ecx,0xffffffc4
  4303c8:	(bad)  
  4303c9:	ins    DWORD PTR es:[edi],dx
  4303ca:	or     BYTE PTR [ebp-0x22ee6dda],bh
  4303d0:	scas   eax,DWORD PTR es:[edi]
  4303d1:	cli    
  4303d2:	pop    ebp
  4303d3:	addr16 lahf 
  4303d5:	mov    BYTE PTR [esi],0x20
  4303d8:	xchg   ebx,eax
  4303d9:	sbb    DWORD PTR [eax-0x27],0x1feba7b0
  4303e0:	retf   
  4303e1:	sbb    DWORD PTR [ecx+ecx*2],ebx
  4303e4:	push   ds
  4303e5:	mov    al,0x87
  4303e7:	out    dx,al
  4303e8:	sub    DWORD PTR [ebx+0x67],ebx
  4303eb:	push   0xa88bd486
  4303f0:	data16 mov dh,0x7d
  4303f3:	mov    BYTE PTR [esi],al
  4303f5:	fs not al
  4303f8:	or     al,0xaf
  4303fa:	mov    esp,0xb6301e42
  4303ff:	mov    ds:0x2c8731ac,eax
  430404:	clc    
  430405:	pop    eax
  430406:	std    
  430407:	pop    ss
  430408:	add    DWORD PTR [esi+eax*4],ebp
  43040b:	or     al,0x94
  43040d:	adc    al,0xd4
  43040f:	lods   al,BYTE PTR ds:[esi]
  430410:	(bad)  
  430411:	push   esi
  430412:	add    BYTE PTR [eax],0x2a
  430415:	pop    ds
  430416:	mov    ecx,DWORD PTR [ebx-0x18]
  430419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43041a:	xor    DWORD PTR [ebp-0x16],ebp
  43041d:	sub    DWORD PTR [ebp*4+0x5df27066],edx
  430424:	and    ah,BYTE PTR [esp+esi*8]
  430427:	jne    0x430437
  430429:	nop
  43042a:	retf   
  43042b:	mov    ebp,0xa98560a2
  430430:	lahf   
  430431:	push   edi
  430432:	jp     0x4303f2
  430434:	push   0x1769a81
  430439:	jo     0x4303d1
  43043b:	retf   
  43043c:	jnp    0x4303ff
  43043e:	pop    ds
  43043f:	nop
  430440:	fmul   DWORD PTR [eax-0x68]
  430443:	pop    es
  430444:	test   DWORD PTR [edi],edx
  430446:	push   esi
  430447:	jl     0x430432
  430449:	mov    edi,DWORD PTR ds:0xadc0d4bb
  43044f:	adc    bh,dl
  430451:	stos   DWORD PTR es:[edi],eax
  430452:	gs out dx,al
  430454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430455:	sbb    eax,0x8234a22a
  43045a:	iret   
  43045b:	mov    ebp,0x69736190
  430460:	cmp    esi,edx
  430462:	jg     0x4303f8
  430464:	popa   
  430465:	cli    
  430466:	and    eax,DWORD PTR [esi+edx*2+0x5429f28]
  43046d:	or     eax,edx
  43046f:	inc    edi
  430470:	shr    BYTE PTR [ebp+ebx*2+0x36fce79d],cl
  430477:	cwde   
  430478:	lea    edi,[esi+0x37a87ffa]
  43047e:	add    BYTE PTR [edi+ecx*2],0xf6
  430482:	jns    0x4304e9
  430484:	(bad)  
  430485:	cmp    DWORD PTR [esi+0x5a601817],eax
  43048b:	sub    DWORD PTR [edi-0x77],edi
  43048e:	clc    
  43048f:	lahf   
  430490:	pop    es
  430491:	leave  
  430492:	out    0x47,al
  430494:	dec    esi
  430495:	sbb    al,dh
  430497:	push   edi
  430498:	pushf  
  430499:	mov    ebp,0x59d72ca9
  43049e:	xchg   esi,eax
  43049f:	inc    eax
  4304a0:	retf   
  4304a1:	and    al,0x21
  4304a4:	ds mov edi,0xdab6c694
  4304aa:	adc    al,0x2f
  4304ac:	or     esp,ecx
  4304ae:	and    esp,edi
  4304b0:	add    al,0x47
  4304b2:	or     al,0xdd
  4304b4:	sbb    DWORD PTR [ebp-0x1fe58f1b],esi
  4304ba:	ins    BYTE PTR es:[edi],dx
  4304bb:	test   BYTE PTR [edx-0x32a0473e],ah
  4304c1:	into   
  4304c2:	call   0x5d9c5dcf
  4304c7:	std    
  4304c8:	icebp  
  4304c9:	fcom   DWORD PTR [eax-0x2efa549d]
  4304cf:	sbb    eax,0xcc0ba883
  4304d4:	push   0xfffffff9
  4304d6:	push   0xffffffba
  4304d8:	sbb    BYTE PTR [edi-0x35],0x1
  4304dc:	pop    es
  4304dd:	hlt    
  4304de:	jp     0x4304ad
  4304e0:	pop    esi
  4304e1:	mov    ecx,0x39866404
  4304e6:	dec    ebp
  4304e7:	and    ebp,DWORD PTR [ecx+eiz*2]
  4304ea:	std    
  4304eb:	outs   dx,DWORD PTR ds:[esi]
  4304ec:	cmp    bh,BYTE PTR [esi+ebx*4]
  4304ef:	and    BYTE PTR [ecx-0x50],0x3b
  4304f3:	xchg   ecx,eax
  4304f4:	mov    dh,0x61
  4304f6:	jne    0x430562
  4304f8:	or     DWORD PTR [edx],esp
  4304fa:	mov    eax,ds:0xe0b45921
  4304ff:	enter  0x48de,0xc8
  430503:	or     al,0xe4
  430505:	les    esi,FWORD PTR [esi]
  430507:	out    0xc3,al
  430509:	sbb    al,0xc2
  43050b:	js     0x430587
  43050d:	pop    ss
  43050e:	in     eax,dx
  43050f:	mov    bh,0x95
  430511:	dec    edi
  430512:	pop    eax
  430513:	cli    
  430514:	fadd   st(4),st
  430516:	mov    cl,0xa
  430518:	fs lock sub edi,esp
  43051c:	stos   BYTE PTR es:[edi],al
  43051d:	or     ecx,eax
  43051f:	and    eax,0xae1aec91
  430524:	rcr    BYTE PTR [ecx-0x739a2026],1
  43052a:	inc    edi
  43052b:	ss cmp eax,0x63066594
  430531:	inc    ecx
  430532:	int3   
  430533:	pop    ebp
  430534:	add    ebx,DWORD PTR [eax]
  430536:	xchg   esi,eax
  430537:	aas    
  430538:	imul   ecx,DWORD PTR [ecx+0x3b],0x6d128211
  43053f:	cmp    BYTE PTR [ecx-0x3249b64d],dh
  430545:	fnstenv [edx]
  430547:	fist   DWORD PTR [ebp+0x38c92321]
  43054d:	cmp    eax,0x3d272c3f
  430552:	mov    ch,0x56
  430554:	sbb    al,0x1f
  430556:	push   esi
  430557:	call   0x93ab97e8
  43055c:	imul   esp,DWORD PTR ds:0x8c38cf33,0x79ceff1f
  430566:	das    
  430567:	dec    edi
  430568:	cs loopne 0x4305b4
  43056b:	add    eax,ebx
  43056d:	mov    WORD PTR [esi+0x36bb53ef],es
  430573:	mul    DWORD PTR [edx-0x53140d0b]
  430579:	push   ds
  43057a:	rcr    DWORD PTR [eax-0x6c],1
  43057d:	js     0x4305b7
  43057f:	stos   BYTE PTR es:[edi],al
  430580:	cmc    
  430581:	aam    0x42
  430583:	add    al,0x26
  430585:	jge    0x430522
  430587:	sbb    DWORD PTR [eax+0x7],ebp
  43058a:	jmp    0x4305a0
  43058c:	xchg   ebx,eax
  43058d:	push   edi
  43058e:	mov    ecx,0xdd24b55
  430593:	iret   
  430594:	jecxz  0x4305c5
  430596:	fnstcw WORD PTR [edi+0x78b49e81]
  43059c:	ins    BYTE PTR es:[edi],dx
  43059d:	mov    edx,ds
  43059f:	sub    eax,0x35142002
  4305a4:	aam    0xe3
  4305a6:	inc    ebp
  4305a7:	sar    DWORD PTR [esi+0x23ad181b],cl
  4305ad:	mov    ds:0x303a5bf7,al
  4305b2:	adc    BYTE PTR [ecx],dl
  4305b4:	push   esi
  4305b5:	jns    0x4305eb
  4305b7:	fcmovu st,st(2)
  4305b9:	inc    esp
  4305ba:	shl    DWORD PTR ds:0x97803f43,1
  4305c0:	mov    DWORD PTR [eax],edx
  4305c2:	cmp    al,0x78
  4305c4:	add    ebp,edx
  4305c6:	lds    esp,FWORD PTR [edi+ebp*2-0x77f1bbba]
  4305cd:	and    al,0xac
  4305cf:	xchg   DWORD PTR [ebx+0xc10444a],ebx
  4305d5:	mov    bl,0x82
  4305d7:	scas   eax,DWORD PTR es:[edi]
  4305d8:	lock jno 0x430581
  4305db:	test   al,0x9d
  4305dd:	mov    bh,0x60
  4305df:	not    DWORD PTR [eax-0x48]
  4305e2:	es push edi
  4305e4:	loope  0x430651
  4305e6:	clc    
  4305e7:	mov    eax,ds:0xb84371f
  4305ec:	movsx  edx,BYTE PTR [edx-0x61]
  4305f0:	(bad)  
  4305f1:	(bad)  
  4305f2:	stc    
  4305f3:	fild   WORD PTR [ebx]
  4305f5:	gs jno 0x430661
  4305f8:	pusha  
  4305f9:	dec    esp
  4305fa:	cmc    
  4305fb:	jl     0x430666
  4305fd:	scas   eax,DWORD PTR es:[edi]
  4305fe:	jle    0x4305f3
  430600:	cvtps2pi mm7,QWORD PTR [edi-0x76c01be9]
  430607:	xor    BYTE PTR [edx+0x1d],0xe7
  43060b:	xchg   esp,eax
  43060c:	ss cli 
  43060e:	add    bh,BYTE PTR [edx-0x1d]
  430611:	mov    bh,0x75
  430613:	and    dl,BYTE PTR [ebx+0x15]
  430616:	dec    ecx
  430617:	add    DWORD PTR [edx-0x4],edx
  43061a:	jp     0x4305a6
  43061c:	sbb    ebp,DWORD PTR [edi]
  43061e:	(bad)  
  43061f:	jle    0x43065e
  430621:	in     eax,0xe7
  430623:	test   BYTE PTR [eax],ch
  430625:	pop    edx
  430626:	jl     0x430671
  430628:	ror    DWORD PTR [esi+0x2a],cl
  43062b:	gs pop ss
  43062d:	mov    ch,0x7
  43062f:	lds    eax,FWORD PTR [edx]
  430631:	mov    cl,0xa0
  430633:	lds    esi,FWORD PTR [edx-0x66205bdb]
  430639:	mov    bl,BYTE PTR [ebp+0x51]
  43063c:	mov    ds:0x582d61a3,eax
  430642:	fst    QWORD PTR [ebx+eiz*8]
  430645:	mov    WORD PTR [esi-0x66fc797b],ss
  43064b:	popa   
  43064c:	push   es
  43064d:	jge    0x4305d0
  43064f:	into   
  430650:	push   esp
  430651:	mov    edi,0x7ddae899
  430656:	cmp    DWORD PTR ss:[esi-0x6451b142],ecx
  43065d:	mov    ebp,0xa936cff8
  430662:	imul   ebp,DWORD PTR es:[eax+0x24],0x4f
  430667:	jecxz  0x430641
  430669:	jno    0x430608
  43066b:	push   ds
  43066c:	cld    
  43066d:	inc    edx
  43066e:	out    dx,eax
  43066f:	rcr    BYTE PTR [ecx+0x74d6e332],1
  430675:	scas   eax,DWORD PTR es:[edi]
  430676:	jns    0x4306ea
  430678:	or     edx,DWORD PTR [edi-0x195e3e15]
  43067e:	or     bl,dl
  430680:	pop    esi
  430681:	popa   
  430682:	(bad)  
  430683:	gs pop sp
  430686:	push   ss
  430687:	xor    ah,BYTE PTR [esi]
  430689:	gs adc dh,cl
  43068c:	mul    BYTE PTR [esi]
  43068e:	dec    esp
  43068f:	test   al,0x58
  430691:	rol    DWORD PTR [ebx-0x529f8393],1
  430697:	test   DWORD PTR ds:0x3ebfaad3,edx
  43069d:	mov    bh,0x61
  43069f:	pop    ss
  4306a0:	sub    dh,BYTE PTR [ecx-0x33238007]
  4306a6:	jecxz  0x430653
  4306a8:	inc    ebp
  4306a9:	push   esi
  4306aa:	sbb    ebp,esi
  4306ac:	mov    bh,0x48
  4306ae:	sub    edx,DWORD PTR [ebp+edi*2-0x8]
  4306b2:	(bad)  
  4306b4:	js     0x4306b7
  4306b6:	xor    DWORD PTR [edx-0x59],0xd3b90fe0
  4306bd:	xchg   ecx,eax
  4306be:	ins    BYTE PTR es:[edi],dx
  4306bf:	adc    al,0x43
  4306c1:	mov    bl,0x81
  4306c3:	jg     0x430742
  4306c5:	test   eax,0x36c66ba1
  4306ca:	sub    eax,0xc3138243
  4306cf:	enter  0xa1da,0x1e
  4306d3:	fsub   DWORD PTR [edx]
  4306d5:	mov    fs,WORD PTR [edx+0x23200e05]
  4306db:	addr16 (bad) 
  4306dd:	scas   eax,DWORD PTR es:[edi]
  4306de:	push   edx
  4306df:	fwait
  4306e0:	mov    ds:0x5aa3c60b,al
  4306e5:	inc    edx
  4306e6:	nop
  4306e7:	xchg   edx,eax
  4306e8:	jecxz  0x430743
  4306ea:	call   0xc187:0xfa6532d7
  4306f1:	adc    eax,0x3eed38aa
  4306f6:	xchg   esp,eax
  4306f7:	hlt    
  4306f8:	mov    ebx,0x68e44101
  4306fd:	and    esi,edx
  4306ff:	imul   ecx,DWORD PTR [ecx],0x45
  430702:	pop    esp
  430703:	and    dl,0x6
  430706:	aad    0x2a
  430708:	xor    eax,0xb720f84e
  43070d:	or     DWORD PTR [esi-0x7fb9e79c],edi
  430713:	jmp    0x4306bc
  430715:	aaa    
  430716:	mov    ebx,0xd816b309
  43071b:	test   al,0xb4
  43071d:	adc    al,0x87
  43071f:	repz popf 
  430721:	jmp    0x17152e74
  430726:	push   esi
  430727:	scas   eax,DWORD PTR es:[edi]
  430728:	scas   al,BYTE PTR es:[edi]
  430729:	lahf   
  43072a:	xchg   BYTE PTR [edx],al
  43072c:	pop    ebx
  43072d:	jne    0x430760
  43072f:	mov    al,ds:0x6341812c
  430734:	push   ebp
  430735:	fwait
  430736:	push   0x2
  430738:	lods   eax,DWORD PTR ds:[esi]
  430739:	push   es
  43073a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43073b:	addr16 daa 
  43073d:	je     0x4306f2
  43073f:	jmp    0x46a67433
  430744:	(bad)  
  430745:	imul   BYTE PTR [esp+edx*2-0x7]
  430749:	dec    esi
  43074a:	inc    edx
  43074b:	push   esi
  43074c:	(bad)  
  43074d:	(bad)  
  43074f:	push   eax
  430750:	cmp    al,0xd3
  430752:	add    eax,0xec31ca7a
  430757:	int    0xce
  430759:	xchg   ebp,eax
  43075a:	dec    eax
  43075b:	gs int3 
  43075d:	mov    ch,0x34
  43075f:	popa   
  430760:	aam    0x4a
  430762:	push   ebp
  430763:	nop
  430764:	(bad)  
  430765:	inc    eax
  430766:	push   ebp
  430767:	or     eax,0xc4bbd6c2
  43076c:	inc    ebp
  43076d:	xor    DWORD PTR [eax],esi
  43076f:	sti    
  430770:	test   al,0xae
  430772:	ret    
  430773:	test   eax,0x50aa857f
  430778:	xchg   BYTE PTR [esi-0x53],ch
  43077b:	add    al,0xf1
  43077d:	and    al,0x1f
  43077f:	aam    0xc6
  430781:	ret    
  430782:	loopne 0x4307de
  430784:	mov    al,ds:0x31a74dc9
  430789:	sbb    eax,DWORD PTR [edi-0x7d]
  43078c:	or     esp,eax
  43078e:	stos   DWORD PTR es:[edi],eax
  43078f:	push   esp
  430790:	mov    esi,DWORD PTR [ebx]
  430792:	scas   eax,DWORD PTR es:[edi]
  430793:	cld    
  430794:	sar    BYTE PTR [ebx],cl
  430796:	push   esi
  430797:	out    0x64,eax
  430799:	in     al,dx
  43079a:	sahf   
  43079b:	sahf   
  43079c:	pushf  
  43079d:	cwde   
  43079e:	xchg   edi,eax
  43079f:	and    bl,BYTE PTR [eax-0x64204a92]
  4307a5:	fs xchg ebp,eax
  4307a7:	xchg   esi,eax
  4307a8:	test   DWORD PTR [ecx-0x3a],edi
  4307ab:	or     eax,0xd171dd19
  4307b0:	jne    0x430756
  4307b2:	jmp    0x9788:0x14c3d292
  4307b9:	mov    dh,0x89
  4307bb:	add    al,0x7f
  4307bd:	mov    BYTE PTR [esi-0x2a],dl
  4307c0:	aam    0x91
  4307c2:	cmc    
  4307c3:	loop   0x430811
  4307c5:	push   esi
  4307c6:	jp     0x43076f
  4307c8:	cmp    BYTE PTR [ecx],bh
  4307ca:	pop    ds
  4307cb:	xor    DWORD PTR [ecx],ecx
  4307cd:	dec    ecx
  4307ce:	mov    bh,0x88
  4307d0:	xchg   esi,eax
  4307d1:	xlat   BYTE PTR ds:[ebx]
  4307d2:	add    BYTE PTR [ecx+edx*4],al
  4307d5:	pop    es
  4307d6:	mov    al,ds:0x3e1726bb
  4307db:	call   0x6eb2:0xb65ed046
  4307e2:	int    0x51
  4307e4:	xlat   BYTE PTR ds:[ebx]
  4307e5:	add    ebp,DWORD PTR [ecx+0x7b]
  4307e8:	cmp    BYTE PTR [ebp+0x14],0xc8
  4307ec:	pushf  
  4307ed:	rcr    BYTE PTR [edx+0x3b3760a],0xcf
  4307f4:	xchg   BYTE PTR [edx],al
  4307f6:	packuswb mm4,QWORD PTR [edi-0x6cf45d82]
  4307fd:	test   al,0x4b
  4307ff:	stos   BYTE PTR es:[edi],al
  430800:	sub    al,0xa3
  430802:	or     DWORD PTR [ebp+ecx*2-0x58872e1f],0xe10f7f17
  43080d:	inc    ecx
  43080e:	ret    
  43080f:	pop    ss
  430810:	fninit 
  430812:	loope  0x4307d7
  430814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430815:	les    si,DWORD PTR [eax+0x3f8460d0]
  43081c:	rcr    dl,0x9b
  43081f:	mov    eax,0xa425732e
  430824:	pop    esp
  430825:	or     DWORD PTR [edi+0x787a957f],edx
  43082b:	push   es
  43082c:	lods   eax,DWORD PTR ds:[esi]
  43082d:	iret   
  43082e:	sbb    edi,DWORD PTR [esi+0x42a987c5]
  430834:	cs js  0x4307f6
  430837:	sbb    bl,cl
  430839:	retf   0x4084
  43083c:	stos   DWORD PTR es:[edi],eax
  43083d:	aad    0x70
  43083f:	mov    eax,ds:0x9c40a2d2
  430844:	shl    edi,cl
  430846:	shl    DWORD PTR [edx],1
  430848:	push   eax
  430849:	or     eax,0xab11824d
  43084e:	xor    al,0xfb
  430850:	mov    edx,0x5c3aa7c7
  430855:	push   0xe87ca753
  43085a:	cs leave 
  43085c:	loope  0x430824
  43085e:	rcr    cl,1
  430860:	aam    0x86
  430862:	fsub   QWORD PTR [esi+0x614728f]
  430868:	sbb    eax,0xb00caf43
  43086d:	cwde   
  43086e:	cdq    
  43086f:	cmp    ecx,ecx
  430871:	pop    ebx
  430872:	pop    ebx
  430873:	(bad)  
  430874:	xchg   esp,edx
  430876:	add    al,0x62
  430878:	cwde   
  430879:	xchg   esp,eax
  43087a:	adc    BYTE PTR [edi-0x43d59ee8],al
  430880:	inc    ecx
  430881:	mov    dl,0x40
  430883:	das    
  430884:	inc    edi
  430885:	jne    0x430855
  430887:	popa   
  430888:	cmp    DWORD PTR [edi],eax
  43088a:	pop    edi
  43088b:	test   BYTE PTR [ebp+0x5a],dl
  43088e:	pop    esi
  43088f:	or     DWORD PTR [edi-0x20eec5c0],esi
  430895:	jbe    0x4308f0
  430897:	adc    bh,BYTE PTR [ebx+0x1b]
  43089a:	push   0xffffff8f
  43089c:	sahf   
  43089d:	jb     0x430880
  43089f:	jge    0x4308a5
  4308a1:	push   eax
  4308a2:	mov    eax,0xeb4a6de3
  4308a7:	sub    DWORD PTR [edx],edi
  4308a9:	sub    ecx,DWORD PTR [ebx+eiz*4-0x65]
  4308ad:	dec    eax
  4308ae:	add    BYTE PTR [ebx],ch
  4308b0:	(bad)  
  4308b1:	fs dec eax
  4308b3:	mov    ah,0xfd
  4308b5:	inc    ax
  4308b8:	enter  0xdd26,0xad
  4308bc:	jne    0x43093b
  4308be:	jae    0x43084b
  4308c0:	mov    al,0xfb
  4308c2:	lods   al,BYTE PTR ds:[esi]
  4308c3:	or     DWORD PTR [edi+0x368cd34f],ebx
  4308c9:	lock cmp ecx,ecx
  4308cc:	test   eax,esi
  4308ce:	sbb    DWORD PTR [eax+0x616e950d],ebx
  4308d4:	push   ebp
  4308d5:	or     al,0x89
  4308d7:	xlat   BYTE PTR ds:[ebx]
  4308d8:	scas   eax,DWORD PTR es:[edi]
  4308d9:	test   eax,0x831bbc3b
  4308de:	dec    ebp
  4308df:	ja     0x430895
  4308e1:	sub    BYTE PTR [ecx-0x55],al
  4308e4:	mov    ebx,0x575b8ec1
  4308e9:	jge    0x430955
  4308eb:	arpl   WORD PTR es:[edx+0xbd970c5],si
  4308f2:	sar    DWORD PTR [ebx-0x1d68101d],1
  4308f8:	addr16 sbb eax,0x47de4dce
  4308fe:	cmp    eax,DWORD PTR [ecx-0x794024af]
  430904:	jae    0x430942
  430906:	inc    ebp
  430907:	fwait
  430908:	sbb    al,0x47
  43090a:	mov    edx,0x1716fb6c
  43090f:	out    0xcb,eax
  430911:	ins    BYTE PTR es:[edi],dx
  430912:	gs jnp 0x43092b
  430915:	addr16 je 0x43094a
  430918:	xor    bh,ah
  43091a:	lea    ebx,[edx]
  43091c:	retf   
  43091d:	clc    
  43091e:	push   ebp
  43091f:	(bad)  
  430920:	in     eax,dx
  430921:	push   es
  430922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430923:	stc    
  430924:	sbb    eax,0x3e80d732
  430929:	jecxz  0x4308c2
  43092b:	shl    BYTE PTR [edi],1
  43092d:	mov    esp,0x2920e19e
  430932:	or     DWORD PTR gs:[ecx],edx
  430935:	add    al,0x2a
  430937:	ror    bl,0x4c
  43093a:	bound  eax,QWORD PTR [ebx-0x34ec1430]
  430940:	sbb    BYTE PTR [eax],al
  430942:	mov    cl,BYTE PTR [edi+0x1]
  430945:	dec    ecx
  430946:	jb     0x430969
  430948:	mov    esi,0xcb4df05d
  43094d:	out    dx,eax
  43094e:	add    ah,bl
  430950:	or     bh,ch
  430952:	sar    BYTE PTR [esi+esi*2],1
  430955:	push   esi
  430956:	push   edx
  430957:	es cld 
  430959:	fsub   QWORD PTR [ecx]
  43095b:	pop    ebx
  43095c:	loopne 0x43096f
  43095e:	lahf   
  43095f:	or     eax,0x660258aa
  430964:	call   0x89ca9e99
  430969:	ins    DWORD PTR es:[edi],dx
  43096a:	lahf   
  43096b:	inc    ecx
  43096c:	sar    DWORD PTR [ebx+0x250fdbcf],0xa5
  430973:	mov    esi,0x36d71e8e
  430978:	ins    BYTE PTR es:[edi],dx
  430979:	inc    ebp
  43097a:	ret    0xba6c
  43097d:	(bad)  
  43097e:	out    dx,al
  43097f:	push   es
  430980:	ins    BYTE PTR es:[edi],dx
  430981:	mov    BYTE PTR [esi+esi*4+0x427a5f30],bl
  430988:	dec    ebp
  430989:	push   0x69be1a04
  43098e:	sub    eax,0xe1ad01ab
  430993:	imul   ah
  430995:	jns    0x4309f4
  430997:	adc    BYTE PTR [edx-0x7e],dh
  43099a:	pop    es
  43099b:	sar    BYTE PTR [esi-0x1037ec51],cl
  4309a1:	inc    edi
  4309a2:	push   0x5bcb6fe9
  4309a7:	psubsb mm3,QWORD PTR [esi-0x50c650a7]
  4309ae:	fstp   QWORD PTR [ecx+edi*4+0x3acd5b63]
  4309b5:	rol    DWORD PTR [ecx-0xa],1
  4309b8:	push   ebp
  4309b9:	enter  0x2627,0x1c
  4309bd:	xchg   ebx,eax
  4309be:	cli    
  4309bf:	inc    ebx
  4309c0:	dec    eax
  4309c1:	fnstsw WORD PTR [edi+0x2f]
  4309c4:	adc    eax,0xe98f4a84
  4309c9:	jle    0x4309f6
  4309cb:	outs   dx,BYTE PTR ds:[esi]
  4309cd:	pop    edx
  4309ce:	and    dh,BYTE PTR [esi+ebx*8+0x76d70f35]
  4309d5:	and    ecx,DWORD PTR [ebx-0x6c477884]
  4309db:	xor    dh,BYTE PTR [edi+edi*2-0x5d]
  4309df:	aam    0xc2
  4309e1:	inc    edi
  4309e2:	sub    al,0x1b
  4309e4:	lods   al,BYTE PTR ds:[esi]
  4309e5:	bound  ecx,QWORD PTR [esi-0x7c]
  4309e8:	add    edi,edi
  4309ea:	leave  
  4309eb:	xor    DWORD PTR [ecx],esp
  4309ed:	and    DWORD PTR [ecx],edx
  4309ef:	cmp    BYTE PTR [ebx+0x4b],0xa6
  4309f3:	dec    ecx
  4309f4:	pop    ds
  4309f5:	rcr    BYTE PTR [eax-0x47c9f57a],1
  4309fb:	cwde   
  4309fc:	or     al,0xaa
  4309fe:	or     DWORD PTR [esi],0x5
  430a01:	call   0x452c927c
  430a06:	stos   DWORD PTR es:[edi],eax
  430a07:	ja     0x4309d0
  430a09:	lock sbb ah,bl
  430a0c:	cmp    DWORD PTR [ecx],0x8da72d24
  430a12:	ss push ebp
  430a14:	jno    0x4309f7
  430a16:	out    dx,al
  430a17:	push   ebp
  430a18:	adc    esi,DWORD PTR [ecx+ebx*4]
  430a1b:	fnsave [ecx+eiz*8+0x7495983b]
  430a22:	sub    dh,ah
  430a24:	shr    ecx,cl
  430a26:	inc    ebp
  430a27:	into   
  430a28:	add    DWORD PTR [eax-0x3a],ebp
  430a2b:	dec    edi
  430a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a2d:	cli    
  430a2e:	in     al,0x30
  430a30:	pop    esi
  430a31:	jecxz  0x430a15
  430a33:	shl    BYTE PTR [ebx+0x4579d41f],cl
  430a39:	fnsave [ecx+ebx*2]
  430a3c:	mov    edx,0x16e8d5b1
  430a41:	mov    al,0x63
  430a43:	out    dx,al
  430a44:	fistp  QWORD PTR ds:[esp+edi*4]
  430a48:	jns    0x430aaf
  430a4a:	mov    ecx,0xa8bf9889
  430a4f:	jmp    0x430a7b
  430a51:	pushf  
  430a52:	sub    BYTE PTR [ebx],dh
  430a54:	or     eax,0xf042299
  430a59:	jl     0x4309f7
  430a5b:	mov    WORD PTR [ebx+0x1a],gs
  430a5e:	(bad)  
  430a60:	xchg   ebp,eax
  430a61:	mov    ds:0xa2dd5a2d,eax
  430a66:	cmc    
  430a67:	mov    ecx,0x8a51f168
  430a6c:	mov    esp,DWORD PTR [ecx+ecx*8+0x7857f9e5]
  430a73:	inc    ebp
  430a74:	rol    DWORD PTR [edx-0x6d],cl
  430a77:	bound  edx,QWORD PTR [ecx-0x3c]
  430a7a:	xlat   BYTE PTR ds:[ebx]
  430a7b:	sub    eax,0x30415f96
  430a80:	in     al,dx
  430a81:	and    ebx,DWORD PTR [esi-0x26]
  430a84:	(bad)
  430a87:	outs   dx,BYTE PTR ds:[esi]
  430a88:	ja     0x430a14
  430a8a:	out    dx,eax
  430a8b:	enter  0x30a7,0xf3
  430a8f:	std    
  430a90:	jle    0x430a7f
  430a92:	(bad)  
  430a93:	rcl    edi,1
  430a95:	pop    ecx
  430a96:	repnz and bl,ah
  430a99:	(bad)  
  430a9a:	clc    
  430a9b:	cmp    BYTE PTR [ebx],bh
  430a9d:	cli    
  430a9e:	xor    eax,0x5733c550
  430aa3:	div    BYTE PTR [esi-0x5e]
  430aa6:	out    dx,al
  430aa7:	mov    al,ds:0xd461f3ef
  430aac:	xlat   BYTE PTR ds:[ebx]
  430aad:	ja     0x430b10
  430aaf:	adc    esp,esi
  430ab1:	cmc    
  430ab2:	scas   al,BYTE PTR es:[edi]
  430ab3:	xor    ecx,esi
  430ab5:	adc    dl,BYTE PTR [edi]
  430ab7:	push   0xca694165
  430abc:	shl    DWORD PTR [edx-0x736b20da],0xb5
  430ac3:	mov    esi,0x3be381b2
  430ac8:	in     al,dx
  430ac9:	mov    bl,0xac
  430acb:	shl    BYTE PTR [ebx-0x3fcb590e],1
  430ad1:	and    DWORD PTR [ebx+0x6b63a6de],ebp
  430ad7:	mov    bh,0x7a
  430ad9:	adc    DWORD PTR [ebx],esi
  430adb:	sbb    DWORD PTR [ebx+0x40],edi
  430ade:	inc    edx
  430adf:	and    eax,0x2a3b758b
  430ae4:	arpl   WORD PTR [esi-0x61],di
  430ae7:	add    al,0x40
  430ae9:	push   cs
  430aea:	jo     0x430aec
  430aec:	add    BYTE PTR [eax],al
  430aee:	add    BYTE PTR [eax],al
  430af0:	jl     0x430b70
  430af2:	loope  0x430b47
  430af4:	add    BYTE PTR [eax],al
  430af6:	add    BYTE PTR [eax],al
  430af8:	add    al,BYTE PTR [eax]
  430afa:	add    BYTE PTR [eax],al
  430afc:	jnp    0x430afe
  430afe:	add    BYTE PTR [eax],al
  430b00:	or     BYTE PTR [ebx],cl
  430b02:	add    eax,DWORD PTR [eax]
  430b04:	or     ch,ch
  430b06:	add    al,BYTE PTR [eax]
  430b08:	push   edx
  430b09:	push   ebx
  430b0a:	inc    esp
  430b0b:	push   ebx
  430b0c:	jecxz  0x430b87
  430b0e:	inc    ebp
  430b0f:	retf   0xb95c
  430b12:	lahf   
  430b13:	dec    ebx
  430b14:	mov    edi,0x115cb43
  430b19:	pop    ebx
  430b1a:	mov    ebx,0x19e
  430b1f:	add    BYTE PTR [ebx+0x3a],al
  430b22:	pop    esp
  430b23:	push   ebp
  430b24:	jae    0x430b8b
  430b26:	jb     0x430b9b
  430b28:	pop    esp
  430b29:	inc    edi
  430b2a:	outs   dx,DWORD PTR gs:[esi]
  430b2c:	jb     0x430b95
  430b2e:	gs pop esp
  430b30:	inc    esp
  430b31:	gs jae 0x430b9f
  430b34:	je     0x430ba5
  430b36:	jo     0x430b94
  430b38:	push   eax
  430b39:	jb     0x430baa
  430b3b:	push   0x65
  430b3d:	arpl   WORD PTR [ebx+esi*2+0x5c],si
  430b41:	pop    edx
  430b42:	gs jb  0x430bb4
  430b45:	dec    esp
  430b46:	outs   dx,DWORD PTR ds:[esi]
  430b47:	arpl   WORD PTR [ebx+0x65],bp
  430b4a:	jb     0x430ba8
  430b4c:	push   esp
  430b4d:	gs jae 0x430bc4
  430b50:	imul   ebp,DWORD PTR [esi+0x67],0x75745320
  430b57:	data16 pop sp
  430b5a:	push   esp
  430b5b:	gs jae 0x430bd2
  430b5e:	imul   ebp,DWORD PTR [esi+0x67],0x75745320
  430b65:	data16 pop sp
  430b68:	outs   dx,DWORD PTR ds:[esi]
  430b69:	bound  ebp,QWORD PTR [edx+0x5c]
  430b6c:	inc    esp
  430b6d:	bound  esi,QWORD PTR gs:[ebp+0x67]
  430b71:	pop    esp
  430b72:	push   esp
  430b73:	popa   
  430b74:	jae    0x430be1
  430b76:	and    BYTE PTR [ebp+0x61],cl
  430b79:	outs   dx,BYTE PTR ds:[esi]
  430b7a:	popa   
  430b7b:	addr16 gs jb 0x430bad
  430b7f:	jo     0x430be5
  430b81:	bound  eax,QWORD PTR [eax]
  430b83:	add    BYTE PTR [edx+0x53],al
  430b86:	dec    edx
  430b87:	inc    edx
  430b88:	add    DWORD PTR [eax],eax
  430b8a:	add    DWORD PTR [eax],eax
  430b8c:	add    BYTE PTR [eax],al
  430b8e:	add    BYTE PTR [eax],al
  430b90:	or     al,0x0
  430b92:	add    BYTE PTR [eax],al
  430b94:	jbe    0x430bc8
  430b96:	xor    BYTE PTR cs:[esi],ch
  430b99:	xor    eax,0x37323730
  430b9e:	add    BYTE PTR [eax],al
  430ba0:	add    BYTE PTR [eax],al
  430ba2:	add    eax,0x6c00
  430ba7:	add    BYTE PTR [ebx*1+0x7e230000],dh
  430bae:	add    BYTE PTR [eax],al
  430bb0:	mov    al,ds:0x8c00001d
  430bb5:	sbb    al,BYTE PTR [eax]
  430bb7:	add    BYTE PTR [ebx],ah
  430bb9:	push   ebx
  430bba:	je     0x430c2e
  430bbc:	imul   ebp,DWORD PTR [esi+0x67],0x73
  430bc3:	add    BYTE PTR [eax+edi*1],ch
  430bc6:	add    BYTE PTR [eax],al
  430bc8:	adc    BYTE PTR [eax],al
  430bca:	add    BYTE PTR [eax],al
  430bcc:	and    eax,DWORD PTR [edi+0x55]
  430bcf:	dec    ecx
  430bd0:	inc    esp
  430bd1:	add    BYTE PTR [eax],al
  430bd3:	add    BYTE PTR [eax+edi*1],bh
  430bd6:	add    BYTE PTR [eax],al
  430bd8:	xchg   esp,eax
  430bd9:	or     eax,0x42230000
  430bde:	ins    BYTE PTR es:[edi],dx
  430bdf:	outs   dx,DWORD PTR ds:[esi]
  430be0:	bound  eax,QWORD PTR [eax]
  430be2:	add    BYTE PTR [eax],al
  430be4:	rol    BYTE PTR [ebp+0x0],1
  430be7:	add    ah,al
  430be9:	add    DWORD PTR [eax],eax
  430beb:	add    BYTE PTR [ebx],ah
  430bed:	push   ebp
  430bee:	push   ebx
  430bef:	add    BYTE PTR [eax],al
  430bf1:	add    BYTE PTR [eax],al
  430bf3:	add    BYTE PTR [edx],al
  430bf5:	add    BYTE PTR [eax],al
  430bf7:	add    DWORD PTR [edi+0x1d],edx
  430bfa:	mov    ds:0x1f0909,al
  430bff:	add    BYTE PTR [eax],al
  430c01:	cli    
  430c02:	add    DWORD PTR [ebx],esi
  430c04:	add    BYTE PTR [edx],al
  430c06:	add    BYTE PTR [eax],al
  430c08:	add    DWORD PTR [eax],eax
  430c0a:	add    BYTE PTR [eax],al
  430c0c:	mov    bh,0x0
  430c0e:	add    BYTE PTR [eax],al
  430c10:	adc    al,0x0
  430c12:	add    BYTE PTR [eax],al
  430c14:	cmp    DWORD PTR [eax],eax
  430c16:	add    BYTE PTR [eax],al
  430c18:	jg     0x430c1a
  430c1a:	add    BYTE PTR [eax],al
  430c1c:	push   ebp
  430c1d:	add    BYTE PTR [eax],al
  430c1f:	add    BYTE PTR [ebx+0x1],dl
  430c22:	add    BYTE PTR [eax],al
  430c24:	add    al,BYTE PTR [eax]
  430c26:	add    BYTE PTR [eax],al
  430c28:	xchg   DWORD PTR [eax],eax
  430c2a:	add    BYTE PTR [eax],al
  430c2c:	cmp    eax,DWORD PTR [eax]
  430c2e:	add    BYTE PTR [eax],al
  430c30:	add    al,0x0
  430c32:	add    BYTE PTR [eax],al
  430c34:	or     DWORD PTR [eax],eax
  430c36:	add    BYTE PTR [eax],al
  430c38:	or     al,BYTE PTR [eax]
  430c3a:	add    BYTE PTR [eax],al
  430c3c:	or     al,0x0
  430c3e:	add    BYTE PTR [eax],al
  430c40:	add    DWORD PTR [eax],eax
  430c42:	add    BYTE PTR [eax],al
  430c44:	add    eax,0x1000000
  430c49:	add    BYTE PTR [eax],al
  430c4b:	add    BYTE PTR [esi],al
  430c4d:	add    BYTE PTR [eax],al
  430c4f:	add    BYTE PTR ds:0x4000000,al
  430c55:	add    BYTE PTR [eax],al
  430c57:	add    BYTE PTR [edx],al
  430c59:	add    BYTE PTR [eax],al
  430c5b:	add    BYTE PTR [eax],al
  430c5d:	add    BYTE PTR [esi],cl
  430c5f:	add    BYTE PTR [ecx],al
  430c61:	add    BYTE PTR [eax],al
  430c63:	add    BYTE PTR [eax],al
  430c65:	add    BYTE PTR [edx],cl
  430c67:	add    BYTE PTR [edi+0x0],dh
  430c6a:	mov    al,BYTE PTR [eax]
  430c6c:	or     al,BYTE PTR [eax]
  430c6e:	mov    ah,0x0
  430c70:	mov    al,BYTE PTR [eax]
  430c72:	or     al,BYTE PTR [eax]
  430c74:	leave  
  430c75:	add    BYTE PTR [edx-0x29fff600],cl
  430c7b:	add    BYTE PTR [edx-0x24fff600],cl
  430c81:	add    BYTE PTR [edx-0x8fff600],cl
  430c87:	add    BYTE PTR [eax],ch
  430c89:	add    BYTE PTR [edx],cl
  430c8b:	add    BYTE PTR ds:0xa011101,al
  430c91:	add    BYTE PTR [eax],bh
  430c93:	add    DWORD PTR [ecx],edx
  430c95:	add    DWORD PTR [edx],ecx
  430c97:	add    BYTE PTR [ebx+0x1],dl
  430c9a:	adc    DWORD PTR [ecx],eax
  430c9c:	or     al,BYTE PTR [eax]
  430c9e:	bound  eax,QWORD PTR [ecx]
  430ca0:	adc    DWORD PTR [ecx],eax
  430ca2:	or     al,BYTE PTR [eax]
  430ca4:	je     0x430ca7
  430ca6:	adc    DWORD PTR [ecx],eax
  430ca8:	or     al,BYTE PTR [eax]
  430caa:	add    BYTE PTR [ecx],0x11
  430cad:	add    DWORD PTR [edx],ecx
  430caf:	add    BYTE PTR [eax+0xa011101],bl
  430cb5:	add    BYTE PTR [esi+0xa01a701],bl
  430cbb:	add    ch,al
  430cbd:	add    DWORD PTR [edi-0x2bfff5ff],esp
  430cc3:	add    DWORD PTR [eax],ebp
  430cc5:	add    BYTE PTR [edx],cl
  430cc7:	add    ah,ch
  430cc9:	add    DWORD PTR [eax],ebp
  430ccb:	add    BYTE PTR [edx],cl
  430ccd:	add    BYTE PTR [edi],al
  430ccf:	add    dl,BYTE PTR [edi]
  430cd1:	add    cl,BYTE PTR [edx]
  430cd3:	add    BYTE PTR [eax],bh
  430cd5:	add    dl,BYTE PTR [edi]
  430cd7:	add    cl,BYTE PTR [edx]
  430cd9:	add    BYTE PTR [esi+0x2],al
  430cdc:	sub    BYTE PTR [eax],al
  430cde:	push   es
  430cdf:	add    BYTE PTR [esi+0x2],cl
  430ce2:	push   ebx
  430ce3:	add    BYTE PTR [esi],al
  430ce5:	add    BYTE PTR [eax+0x2],bl
  430ce8:	push   ebx
  430ce9:	add    BYTE PTR [esi],al
  430ceb:	add    BYTE PTR [edx+0x2],ah
  430cee:	push   ebx
  430cef:	add    BYTE PTR [esi],al
  430cf1:	add    BYTE PTR [edx+eax*1+0x53],dh
  430cf5:	add    BYTE PTR [esi],al
  430cf7:	add    BYTE PTR [edx+0x2],bh
  430cfa:	push   ebx
  430cfb:	add    BYTE PTR [esi],al
  430cfd:	add    BYTE PTR [edx+eax*1+0x60053],al
  430d04:	pushf  
  430d05:	add    dl,BYTE PTR [ebx+0x0]
  430d08:	push   es
  430d09:	add    BYTE PTR [ecx+0x6005302],ch
  430d0f:	add    BYTE PTR [ecx+0x6005302],dh
  430d15:	add    BYTE PTR [eax+0x6005302],bh
  430d1b:	add    BYTE PTR [ebp+0x12005302],bh
  430d21:	add    dl,al
  430d23:	add    bl,cl
  430d25:	add    al,BYTE PTR [esi]
  430d27:	add    cl,dh
  430d29:	add    bh,dh
  430d2b:	add    al,BYTE PTR [esi]
  430d2d:	add    BYTE PTR [ecx],bl
  430d2f:	add    edi,esi
  430d31:	add    al,BYTE PTR [esi]
  430d33:	add    BYTE PTR [edi],ah
  430d35:	add    edi,esi
  430d37:	add    al,BYTE PTR [esi]
  430d39:	add    BYTE PTR ds:0x602fe03,dh
  430d3f:	add    BYTE PTR ds:0x602fe03,bh
  430d45:	add    BYTE PTR [ebx+eax*1+0x4e],al
  430d49:	add    eax,DWORD PTR [esi]
  430d4b:	add    BYTE PTR [ecx+0x3],ah
  430d4e:	dec    esi
  430d4f:	add    edx,DWORD PTR [edx]
  430d51:	add    BYTE PTR [ebp+0x3],ch
  430d54:	ja     0x430d59
  430d56:	adc    al,BYTE PTR [eax]
  430d58:	lea    eax,[ebx]
  430d5a:	ja     0x430d5f
  430d5c:	adc    al,BYTE PTR [eax]
  430d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d5f:	add    edi,DWORD PTR [ebx-0x27ffedfd]
  430d65:	add    esi,DWORD PTR [edi+0x3]
  430d68:	adc    al,BYTE PTR [eax]
  430d6a:	icebp  
  430d6b:	add    esi,DWORD PTR [edi+0x3]
  430d6e:	adc    al,BYTE PTR [eax]
  430d70:	push   es
  430d71:	add    al,0x77
  430d73:	add    edx,DWORD PTR [edx]
  430d75:	add    BYTE PTR [ecx],dl
  430d77:	add    al,0x77
  430d79:	add    edx,DWORD PTR [edx]
  430d7b:	add    BYTE PTR [esp+eax*1],ah
  430d7e:	cmp    al,0x4
  430d80:	adc    al,BYTE PTR [eax]
  430d82:	push   ecx
  430d83:	add    al,0x3c
  430d85:	add    al,0x6
  430d87:	add    BYTE PTR [esi+0x4],bl
  430d8a:	push   ebx
  430d8b:	add    BYTE PTR [esi],al
  430d8d:	add    BYTE PTR [esi+0x4],ah
  430d90:	push   ebx
  430d91:	add    BYTE PTR [esi],al
  430d93:	add    BYTE PTR [edi+0x4],ch
  430d96:	add    DWORD PTR [edi+ecx*8],0x0
  430d9a:	xchg   esi,eax
  430d9b:	add    al,0x0
  430d9d:	add    BYTE PTR [esi],al
  430d9f:	add    BYTE PTR [ebp+0x6048304],ah
  430da5:	add    BYTE PTR [ebp+0x6048304],bh
  430dab:	add    dl,bl
  430dad:	add    al,0x83
  430daf:	add    al,0x12
  430db1:	add    bh,dh
  430db3:	add    al,0x83
  430db5:	add    al,0x12
  430db7:	add    bh,bh
  430db9:	add    al,0x83
  430dbb:	add    al,0x12
  430dbd:	add    BYTE PTR [eax],dl
  430dbf:	add    eax,0x60483
  430dc4:	and    eax,DWORD PTR ds:0x160053
  430dca:	sub    al,BYTE PTR ds:0x16005a
  430dd0:	xor    BYTE PTR ds:0x16005a,al
  430dd6:	xor    eax,0x16005a05
  430ddb:	add    BYTE PTR [edi],bh
  430ddd:	add    eax,0x16005a
  430de2:	dec    esp
  430de3:	add    eax,0x16005a
  430de8:	push   ecx
  430de9:	add    eax,0x16005a
  430dee:	push   edi
  430def:	add    eax,0x16005a
  430df4:	pop    ebp
  430df5:	add    eax,0x16005a
  430dfa:	bound  eax,QWORD PTR ds:0x16005a
  430e00:	push   0x6005a05
  430e05:	add    BYTE PTR [ebp+0x5],dh
  430e08:	push   ebx
  430e09:	add    BYTE PTR [esi],al
  430e0b:	add    BYTE PTR [edx+0x5],bh
  430e0e:	push   ebx
  430e0f:	add    BYTE PTR [edi],bl
  430e11:	add    DWORD PTR [esi+0x6000005],eax
  430e17:	add    BYTE PTR [ebp+eax*1+0x60053],dl
  430e1e:	sahf   
  430e1f:	add    eax,0x60053
  430e24:	stos   DWORD PTR es:[edi],eax
  430e25:	add    eax,0x60053
  430e2a:	mov    ch,0x5
  430e2c:	rol    DWORD PTR ds:0x5d60006,0xc1
  430e33:	add    eax,0x5e30006
  430e38:	push   ebx
  430e39:	add    BYTE PTR [esi],al
  430e3b:	add    bh,ch
  430e3d:	add    eax,0x60053
  430e42:	cmc    
  430e43:	add    eax,0x60053
  430e48:	sti    
  430e49:	add    eax,0x60053
  430e4e:	add    DWORD PTR [esi],eax
  430e50:	push   ebx
  430e51:	add    BYTE PTR [esi],al
  430e53:	add    BYTE PTR [eax],cl
  430e55:	push   es
  430e56:	push   ebx
  430e57:	add    BYTE PTR [esi],al
  430e59:	add    BYTE PTR [edx],ah
  430e5b:	push   es
  430e5c:	das    
  430e5d:	push   es
  430e5e:	adc    al,BYTE PTR [eax]
  430e60:	cmp    DWORD PTR [esi],eax
  430e62:	dec    ecx
  430e63:	push   es
  430e64:	adc    al,BYTE PTR [eax]
  430e66:	pop    edi
  430e67:	push   es
  430e68:	dec    ecx
  430e69:	push   es
  430e6a:	push   es
  430e6b:	add    BYTE PTR [ebp+0x6],ch
  430e6e:	das    
  430e6f:	push   es
  430e70:	push   es
  430e71:	add    BYTE PTR [edi+0x6],dh
  430e74:	das    
  430e75:	push   es
  430e76:	push   es
  430e77:	add    BYTE PTR [ebp+0x6062f06],al
  430e7d:	add    BYTE PTR [edx+0x6062f06],cl
  430e83:	add    BYTE PTR [ebp+0x6062f06],dl
  430e89:	add    BYTE PTR [esi+0x6062f06],bl
  430e8f:	add    BYTE PTR [edi+0x6062f06],ah
  430e95:	add    BYTE PTR [edx+0x6062f06],dh
  430e9b:	add    cl,al
  430e9d:	push   es
  430e9e:	das    
  430e9f:	push   es
  430ea0:	push   es
  430ea1:	add    dh,cl
  430ea3:	push   es
  430ea4:	das    
  430ea5:	push   es
  430ea6:	push   es
  430ea7:	add    ch,dl
  430ea9:	push   es
  430eaa:	das    
  430eab:	push   es
  430eac:	push   es
  430ead:	add    dl,ah
  430eaf:	push   es
  430eb0:	das    
  430eb1:	push   es
  430eb2:	push   es
  430eb3:	add    ch,ch
  430eb5:	push   es
  430eb6:	push   ebx
  430eb7:	add    BYTE PTR [esi],al
  430eb9:	add    dl,bh
  430ebb:	push   es
  430ebc:	push   ebx
  430ebd:	add    BYTE PTR [edx],dl
  430ebf:	add    BYTE PTR [edi+eax*1],cl
  430ec2:	sbb    eax,0x3b001207
  430ec7:	pop    es
  430ec8:	sbb    eax,0x4b001207
  430ecd:	pop    es
  430ece:	push   ebp
  430ecf:	pop    es
  430ed0:	push   es
  430ed1:	add    BYTE PTR [eax+0x7],ah
  430ed4:	push   ebx
  430ed5:	add    BYTE PTR [esi],al
  430ed7:	add    BYTE PTR [esi+0x7],dh
  430eda:	push   ebx
  430edb:	add    BYTE PTR [esi],al
  430edd:	add    BYTE PTR [ebp+0x7],bh
  430ee0:	push   ebx
  430ee1:	add    BYTE PTR [esi],al
  430ee3:	add    BYTE PTR [edi+eax*1+0x6078d],al
  430eea:	lahf   
  430eeb:	pop    es
  430eec:	lea    eax,[edi]
  430eee:	push   es
  430eef:	add    BYTE PTR [eax+0x6078d07],bh
  430ef5:	add    bl,dl
  430ef7:	pop    es
  430ef8:	lea    eax,[edi]
  430efa:	push   es
  430efb:	add    al,dh
  430efd:	pop    es
  430efe:	lea    eax,[edi]
  430f00:	push   es
  430f01:	add    BYTE PTR ds:0x6078d08,cl
  430f07:	add    BYTE PTR [esi],ah
  430f09:	or     BYTE PTR [ebp+0x3d000607],cl
  430f0f:	or     BYTE PTR [ebp+0x58000607],cl
  430f15:	or     BYTE PTR [ebp+0x65000607],cl
  430f1b:	or     BYTE PTR [ebp+0x75000607],cl
  430f21:	or     BYTE PTR [ebx-0x65fff9f8],al
  430f27:	or     BYTE PTR [ebx-0x57fff9f8],al
  430f2d:	or     BYTE PTR [ebx-0x50fff9f8],al
  430f33:	or     BYTE PTR [ebx-0x48fff9f8],al
  430f39:	or     BYTE PTR [ebx-0x3cfff9f8],al
  430f3f:	or     BYTE PTR [ebx-0x2cfff9f8],al
  430f45:	or     BYTE PTR [ebp-0xdfff9f9],cl
  430f4b:	or     BYTE PTR [ebp-0x3fff9f9],cl
  430f51:	or     BYTE PTR [ebp+0xe000607],cl
  430f57:	or     DWORD PTR [ebp+0x19000607],ecx
  430f5d:	or     DWORD PTR [ebp+0x25000607],ecx
  430f63:	or     DWORD PTR [ebp+0x30000607],ecx
  430f69:	or     DWORD PTR [ebp+0x3b000607],ecx
  430f6f:	or     DWORD PTR [ebp+0x46000607],ecx
  430f75:	or     DWORD PTR [ebp+0x4d000607],ecx
  430f7b:	or     DWORD PTR [ebp+0x5b000607],ecx
  430f81:	or     DWORD PTR [ebp+0x75000607],ecx
  430f87:	or     DWORD PTR [ebx+0x0],edx
  430f8a:	push   es
  430f8b:	add    BYTE PTR [esi+0x6005309],al
  430f91:	add    BYTE PTR [edx+0x609aa09],bl
  430f97:	add    BYTE PTR [ebx+0x609dc09],bh
  430f9d:	add    ah,bh
  430f9f:	or     esp,ebx
  430fa1:	or     DWORD PTR [esi],eax
  430fa3:	add    BYTE PTR [edx+ecx*1],bl
  430fa6:	fmul   QWORD PTR [ecx]
  430fa8:	push   es
  430fa9:	add    BYTE PTR [edi],dh
  430fab:	or     bl,ah
  430fad:	or     DWORD PTR [esi],eax
  430faf:	add    BYTE PTR [ebp+0xa],dl
  430fb2:	fmul   QWORD PTR [ecx]
  430fb4:	push   es
  430fb5:	add    BYTE PTR [edx+ecx*1+0x78],ah
  430fb9:	or     al,BYTE PTR [esi]
  430fbb:	add    BYTE PTR [edi+0x60a780a],dl
  430fc1:	add    BYTE PTR [ebp+0x600530a],ah
  430fc7:	add    BYTE PTR [eax+0x600530a],bh
  430fcd:	add    ah,cl
  430fcf:	or     dl,BYTE PTR [ebx+0x0]
  430fd2:	push   es
  430fd3:	add    dh,bl
  430fd5:	or     ch,bl
  430fd7:	or     al,BYTE PTR [esi]
  430fd9:	add    BYTE PTR [eax],cl
  430fdb:	or     ebp,ebx
  430fdd:	or     al,BYTE PTR [esi]
  430fdf:	add    BYTE PTR [ecx],bl
  430fe1:	or     ebp,ebx
  430fe3:	or     al,BYTE PTR [esi]
  430fe5:	add    BYTE PTR [edx],dh
  430fe7:	or     ebp,ebx
  430fe9:	or     al,BYTE PTR [esi]
  430feb:	add    BYTE PTR [eax+0xb],al
  430fee:	jmp    0x430ffa
  430ff0:	push   es
  430ff1:	add    BYTE PTR [ecx+0xb],dl
  430ff4:	jmp    0x431000
  430ff6:	push   es
  430ff7:	add    BYTE PTR [ecx+0xb],ah
  430ffa:	jmp    0x431006
  430ffc:	push   es
  430ffd:	add    BYTE PTR [edi+0xb],ch
  431000:	jmp    0x43100c
  431002:	push   es
  431003:	add    BYTE PTR [edx+0x60b9a0b],al
  431009:	add    BYTE PTR [edx+0x600530b],ch
  43100f:	add    BYTE PTR [ecx+0x600530b],dh
  431015:	add    ah,al
  431017:	or     edx,DWORD PTR [ebx+0x0]
  43101a:	push   es
  43101b:	add    bl,cl
  43101d:	or     edx,esp
  43101f:	or     eax,DWORD PTR [esi]
  431021:	add    al,ah
  431023:	or     edx,esp
  431025:	or     eax,DWORD PTR [esi]
  431027:	add    dh,ch
  431029:	or     esi,esi
  43102b:	or     eax,DWORD PTR [esi]
  43102d:	add    BYTE PTR [edi],al
  43102f:	or     al,0x53
  431031:	add    BYTE PTR [esi],al
  431033:	add    BYTE PTR ds:0x600530c,bl
  431039:	add    BYTE PTR [edx],ah
  43103b:	or     al,0x53
  43103d:	add    BYTE PTR [esi],al
  43103f:	add    BYTE PTR [ecx],ch
  431041:	or     al,0x53
  431043:	add    BYTE PTR [esi],al
  431045:	add    BYTE PTR [eax],dh
  431047:	or     al,0x53
  431049:	add    BYTE PTR [esi],al
  43104b:	add    BYTE PTR ds:0xe00530c,dh
  431051:	add    BYTE PTR [ebx+0xc],al
  431054:	add    BYTE PTR ds:[esi],cl
  431057:	add    BYTE PTR [edi+0xc],cl
  43105a:	add    BYTE PTR ds:[esi],cl
  43105d:	add    BYTE PTR [ebp+0xc],bl
  431060:	add    BYTE PTR ds:[esi],cl
  431063:	add    BYTE PTR [ecx+0xc],ch
  431066:	add    BYTE PTR ds:[esi],cl
  431069:	add    BYTE PTR [eax+0xc],dh
  43106c:	add    BYTE PTR ds:[esi],cl
  43106f:	add    BYTE PTR [ebx+0xc],bh
  431072:	add    BYTE PTR ds:[esi],cl
  431075:	add    BYTE PTR [esp+ecx*1+0x2bb003e],cl
  43107c:	xchg   esp,eax
  43107d:	or     al,0x0
  43107f:	add    BYTE PTR [esi],cl
  431081:	add    BYTE PTR [esi+0xe003e0c],ah
  431087:	add    BYTE PTR [ebx+0xe003e0c],dh
  43108d:	add    BYTE PTR [eax+0xe003e0c],bh
  431093:	add    BYTE PTR [esi+0xe003e0c],bh
  431099:	add    cl,cl
  43109b:	or     al,0x3e
  43109d:	add    BYTE PTR [esi],cl
  43109f:	add    ah,dl
  4310a1:	or     al,0x3e
  4310a3:	add    BYTE PTR [esi],cl
  4310a5:	add    bh,ah
  4310a7:	or     al,0x3e
  4310a9:	add    BYTE PTR [esi],cl
  4310ab:	add    bh,ch
  4310ad:	or     al,0x3e
  4310af:	add    BYTE PTR [eax],al
  4310b1:	add    BYTE PTR [eax],al
  4310b3:	add    bl,bh
  4310b5:	or     al,0x0
  4310b7:	add    BYTE PTR [eax],al
  4310b9:	add    BYTE PTR [ecx],al
  4310bb:	add    BYTE PTR [ecx],al
  4310bd:	add    BYTE PTR [eax],al
  4310bf:	add    BYTE PTR [eax],dl
  4310c1:	add    BYTE PTR [ecx*1+0x150d06],al
  4310c8:	add    DWORD PTR [eax],eax
  4310ca:	add    al,BYTE PTR [eax]
  4310cc:	add    BYTE PTR [eax],al
  4310ce:	adc    BYTE PTR [eax],al
  4310d0:	or     BYTE PTR ds:0x650d06,cl
  4310d6:	add    al,BYTE PTR [eax]
  4310d8:	pop    es
  4310d9:	add    BYTE PTR [eax],al
  4310db:	add    BYTE PTR [eax],al
  4310dd:	add    BYTE PTR [esi],bl
  4310df:	or     eax,0x390d06
  4310e4:	add    al,BYTE PTR [eax]
  4310e6:	or     BYTE PTR [eax],al
  4310e8:	add    BYTE PTR [eax],al
  4310ea:	add    BYTE PTR [eax],al
  4310ec:	and    BYTE PTR ds:0x1a50d06,cl
  4310f2:	add    al,BYTE PTR [eax]
  4310f4:	or     DWORD PTR [eax],eax
  4310f6:	add    BYTE PTR [ecx],al
  4310f8:	adc    BYTE PTR [eax],al
  4310fa:	and    cl,BYTE PTR ds:0x1a50d06
  431100:	add    eax,DWORD PTR [eax]
  431102:	sldt   WORD PTR ds:0x24000001
  431109:	or     eax,0x1a50000
  43110e:	or     BYTE PTR [eax],al
  431110:	adc    eax,0x10500
  431115:	add    BYTE PTR [esi],ah
  431117:	or     eax,0x1a50000
  43111c:	or     al,BYTE PTR [eax]
  43111e:	push   ds
  43111f:	add    BYTE PTR ds:0x28000001,al
  431125:	or     eax,0x1a50000
  43112a:	or     al,BYTE PTR [eax]
  43112c:	and    eax,0x10000100
  431131:	add    BYTE PTR [ecx*1+0x2c50d32],ch
  431138:	or     eax,DWORD PTR [eax]
  43113a:	daa    
  43113b:	add    BYTE PTR [ebx],al
  43113d:	add    DWORD PTR [eax],eax
  43113f:	add    BYTE PTR [esi],bh
  431141:	or     eax,0x1190000
  431146:	sbb    eax,0x2005300
  43114b:	add    BYTE PTR [eax],al
  43114d:	add    BYTE PTR [eax+0xd],al
  431150:	add    BYTE PTR [eax],al
  431152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431153:	add    DWORD PTR [eax],esp
  431155:	add    BYTE PTR [ebx+0x0],dl
  431158:	add    BYTE PTR [ecx],al
  43115a:	add    BYTE PTR [eax],al
  43115c:	inc    esi
  43115d:	or     eax,0x1a50d06
  431162:	and    DWORD PTR [eax],eax
  431164:	push   edi
  431165:	add    BYTE PTR [eax],al
  431167:	add    DWORD PTR [eax],edx
  431169:	add    BYTE PTR [eax+0xd],cl
  43116c:	push   ebx
  43116d:	or     eax,0x2300bd
  431172:	pop    edx
  431173:	add    BYTE PTR [eax],al
  431175:	add    BYTE PTR [eax],al
  431177:	add    BYTE PTR [edx+0xd],ah
  43117a:	push   es
  43117b:	or     eax,0x2601a5
  431180:	pop    esi
  431181:	add    BYTE PTR [eax],al
  431183:	add    DWORD PTR [eax],eax
  431185:	add    BYTE PTR [ebp+ecx*1+0x6],ah
  431189:	or     eax,0x2801a5
  43118e:	add    BYTE PTR gs:[eax],al
  431191:	add    BYTE PTR [eax],al
  431193:	add    BYTE PTR [esi+0xd],ah
  431196:	push   es
  431197:	or     eax,0x2801a5
  43119c:	data16 add BYTE PTR [eax],al
  43119f:	add    BYTE PTR [eax],al
  4311a1:	add    BYTE PTR [eax+0xd],ch
  4311a4:	push   es
  4311a5:	or     eax,0x2901a5
  4311aa:	imul   eax,DWORD PTR [eax],0x0
  4311b0:	push   0xd
  4311b2:	push   es
  4311b3:	or     eax,0x2f01a5
  4311b8:	jo     0x4311ba
  4311ba:	add    al,BYTE PTR [ecx]
  4311bc:	add    BYTE PTR [eax],al
  4311be:	ins    BYTE PTR es:[edi],dx
  4311bf:	or     eax,0x1a50000
  4311c4:	xor    al,BYTE PTR [eax]
  4311c6:	js     0x4311c8
  4311c8:	adc    DWORD PTR [eax],eax
  4311ca:	add    al,0xd
  4311cc:	pop    ss
  4311cd:	add    BYTE PTR [ecx],dh
  4311cf:	add    BYTE PTR [ecx*1+0x310035],al
  4311d6:	add    al,0xd
  4311d8:	dec    ebx
  4311d9:	add    BYTE PTR [ecx],dh
  4311db:	add    BYTE PTR [esi],bl
  4311dd:	or     eax,0x310053
  4311e2:	and    al,0xd
  4311e4:	pop    ebx
  4311e5:	add    BYTE PTR [ecx],dl
  4311e7:	add    BYTE PTR [esi],ah
  4311e9:	or     eax,0x310063
  4311ee:	nop
  4311ef:	or     eax,0x6006b
  4311f4:	add    al,0xd
  4311f6:	mov    WORD PTR [eax],es
  4311f8:	adc    DWORD PTR [eax],eax
  4311fa:	push   ds
  4311fb:	or     eax,0x110090
  431200:	add    al,0xd
  431202:	ret    
  431203:	add    BYTE PTR [ecx],dl
  431205:	add    BYTE PTR [ecx*1+0x10017],al
  43120c:	push   ds
  43120d:	or     eax,0x100cc
  431212:	and    al,0xd
  431214:	rol    DWORD PTR [eax],1
  431216:	add    DWORD PTR [eax],eax
  431218:	es or  eax,0x100d1
  43121e:	nop
  43121f:	or     eax,0x100d6
  431224:	and    cl,BYTE PTR ds:0x100db
  43122a:	ds or  eax,0x100e0
  431230:	inc    esi
  431231:	or     eax,0x100db
  431236:	fs or  eax,0x100d6
  43123c:	push   0x100db0d
  431241:	add    BYTE PTR [esi+0xd],ah
  431244:	fild   DWORD PTR [eax]
  431246:	add    DWORD PTR [eax],eax
  431248:	bound  ecx,QWORD PTR ds:0x100db
  43124e:	and    BYTE PTR ds:0x100db,cl
  431254:	ins    BYTE PTR es:[edi],dx
  431255:	or     eax,0x100db
  43125a:	push   0xd
  43125c:	in     eax,0x0
  43125e:	add    DWORD PTR [eax],eax
  431260:	loopne 0x43126f
  431262:	in     eax,0x0
  431264:	add    DWORD PTR [eax],eax
  431266:	loop   0x431275
  431268:	call   0xe443136d
  43126d:	or     eax,0x60600e8
  431272:	xor    DWORD PTR [edi],ecx
  431274:	dec    edx
  431275:	add    DWORD PTR [esi-0x80],edx
  431278:	add    al,0xd
  43127a:	dec    ebp
  43127b:	add    DWORD PTR [esi-0x80],edx
  43127e:	push   ds
  43127f:	or     eax,0x11014d
  431284:	add    al,0xd
  431286:	pop    ebx
  431287:	add    DWORD PTR [ecx],edx
  431289:	add    BYTE PTR [ecx*1+0x11016a],al
  431290:	push   ds
  431291:	or     eax,0x11016f
  431296:	test   DWORD PTR [edi],ecx
  431298:	xchg   DWORD PTR [ecx],eax
  43129a:	adc    DWORD PTR [eax],eax
  43129c:	xchg   ebp,eax
  43129d:	jnp    0xa24323a4
  4312a3:	jle    0x44345aa
  4312a9:	or     eax,0x23019e
  4312ae:	push   ds
  4312af:	or     eax,0x33014a
  4312b4:	add    al,0xd
  4312b6:	sahf   
  4312b7:	add    DWORD PTR [ecx],esi
  4312b9:	add    BYTE PTR [ecx*1+0x31018e],al
  4312c0:	push   ds
  4312c1:	or     eax,0x31014a
  4312c6:	and    al,0xd
  4312c8:	dec    edx
  4312c9:	add    DWORD PTR [ecx],esi
  4312cb:	add    BYTE PTR [esi],ah
  4312cd:	or     eax,0x3101c2
  4312d2:	nop
  4312d3:	or     eax,0x3101c2
  4312d8:	and    cl,BYTE PTR ds:0x3301c7
  4312de:	add    al,0xd
  4312e0:	sahf   
  4312e1:	add    DWORD PTR [ebx],esi
  4312e3:	add    BYTE PTR [esi],bl
  4312e5:	or     eax,0x3101e3
  4312ea:	and    al,0xd
  4312ec:	in     al,dx
  4312ed:	add    DWORD PTR [ecx],edx
  4312ef:	add    BYTE PTR [ecx*1+0x110229],al
  4312f6:	push   ds
  4312f7:	or     eax,0x10229
  4312fc:	and    al,0xd
  4312fe:	dec    edx
  4312ff:	add    DWORD PTR [ecx],eax
  431301:	add    BYTE PTR [esi],ah
  431303:	or     eax,0x1019e
  431308:	nop
  431309:	or     eax,0x1022f
  43130e:	and    cl,BYTE PTR ds:0x10234
  431314:	ds or  eax,0x10239
  43131a:	inc    esi
  43131b:	or     eax,0x20500239
  431320:	add    BYTE PTR [eax],al
  431322:	add    BYTE PTR [eax],al
  431324:	adc    BYTE PTR [eax],bl
  431326:	outs   dx,BYTE PTR ds:[esi]
  431327:	or     eax,0x10013
  43132c:	pop    esp
  43132d:	and    BYTE PTR [eax],al
  43132f:	add    BYTE PTR [eax],al
  431331:	add    BYTE PTR [ecx],dl
  431333:	sbb    BYTE PTR [esi+0xd],ch
  431336:	adc    eax,DWORD PTR [eax]
  431338:	add    DWORD PTR [eax],eax
  43133a:	je     0x43135c
  43133c:	add    BYTE PTR [eax],al
  43133e:	add    BYTE PTR [eax],al
  431340:	push   es
  431341:	sbb    BYTE PTR [ebp+0xd],dh
  431344:	and    DWORD PTR [eax],eax
  431346:	add    DWORD PTR [eax],eax
  431348:	shl    BYTE PTR [eax],1
  43134a:	add    BYTE PTR [eax],al
  43134c:	add    BYTE PTR [eax],al
  43134e:	adc    DWORD PTR [eax],eax
  431350:	push   ds
  431351:	or     eax,0x10025
  431356:	sub    BYTE PTR [edx],ah
  431358:	add    BYTE PTR [eax],al
  43135a:	dec    eax
  43135b:	add    BYTE PTR [ebx],dl
  43135d:	add    BYTE PTR [ecx*1+0x2002a],ah
  431364:	push   0x22
  431369:	add    BYTE PTR [edx+eax*1+0x7b],al
  43136d:	or     eax,0x30021
  431372:	mov    WORD PTR [edx],fs
  431374:	add    BYTE PTR [eax],al
  431376:	add    BYTE PTR [eax],al
  431378:	xchg   BYTE PTR [eax],bl
  43137a:	jne    0x431389
  43137c:	xor    BYTE PTR [eax],al
  43137e:	add    eax,DWORD PTR [eax]
  431380:	mov    al,ds:0x22
  431385:	add    BYTE PTR [esi],al
  431387:	sbb    BYTE PTR [ebp+0xd],dh
  43138a:	and    DWORD PTR [eax],eax
  43138c:	add    al,0x0
  43138e:	mov    eax,0x22
  431393:	add    BYTE PTR [ecx+0x130d6e18],dl
  431399:	add    BYTE PTR [eax+eax*1],al
  43139c:	adc    al,0x23
  43139e:	add    BYTE PTR [eax],al
  4313a0:	add    BYTE PTR [eax],al
  4313a2:	xchg   BYTE PTR [eax],bl
  4313a4:	jne    0x4313b3
  4313a6:	and    DWORD PTR [eax],eax
  4313a8:	add    al,0x0
  4313aa:	sub    BYTE PTR [ebx],ah
  4313ac:	add    BYTE PTR [eax],al
  4313ae:	add    BYTE PTR [eax],al
  4313b0:	xchg   ebx,eax
  4313b1:	add    BYTE PTR [esi],bl
  4313b3:	or     eax,0x40013
  4313b8:	cmp    BYTE PTR [ebx],ah
  4313ba:	add    BYTE PTR [eax],al
  4313bc:	add    BYTE PTR [eax],al
  4313be:	xchg   ecx,eax
  4313bf:	add    BYTE PTR [ecx*1+0x4003a],ah
  4313c6:	cwde   
  4313c7:	and    eax,DWORD PTR [eax]
  4313c9:	add    BYTE PTR [eax],al
  4313cb:	add    BYTE PTR [ecx+0x440d2600],dl
  4313d1:	add    BYTE PTR [esi],al
  4313d3:	add    al,ch
  4313d5:	and    eax,DWORD PTR [eax]
  4313d7:	add    BYTE PTR [eax],al
  4313d9:	add    BYTE PTR [ecx+0x3a0d9000],dl
  4313df:	add    BYTE PTR [edi],al
  4313e1:	add    BYTE PTR [esp+0x0],ah
  4313e5:	add    BYTE PTR [eax],al
  4313e7:	add    BYTE PTR [ecx],dl
  4313e9:	sbb    BYTE PTR [esi+0xd],ch
  4313ec:	adc    eax,DWORD PTR [eax]
  4313ee:	or     DWORD PTR [eax],eax
  4313f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313f1:	and    al,0x0
  4313f3:	add    BYTE PTR [eax],al
  4313f5:	add    BYTE PTR [ebx],dl
  4313f7:	or     BYTE PTR [edx+0x900730d],dl
  4313fd:	add    ah,al
  4313ff:	and    al,0x0
  431401:	add    BYTE PTR [eax],al
  431403:	add    BYTE PTR [ebx],dl
  431405:	or     BYTE PTR [eax+0x900780d],bl
  43140b:	add    ah,ah
  43140d:	and    al,0x0
  43140f:	add    BYTE PTR [eax],al
  431411:	add    BYTE PTR [ebx],dl
  431413:	or     BYTE PTR [esi+0x9007d0d],bl
  431419:	add    BYTE PTR [eiz*1+0x0],al
  431420:	adc    ecx,DWORD PTR [eax]
  431422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431423:	or     eax,0x90082
  431428:	and    al,0x25
  43142a:	add    BYTE PTR [eax],al
  43142c:	add    BYTE PTR [eax],al
  43142e:	adc    ecx,DWORD PTR [eax]
  431430:	stos   BYTE PTR es:[edi],al
  431431:	or     eax,0x90087
  431436:	inc    esp
  431437:	and    eax,0x0
  43143c:	push   es
  43143d:	sbb    BYTE PTR [ebp+0xd],dh
  431440:	and    DWORD PTR [eax],eax
  431442:	or     DWORD PTR [eax],eax
  431444:	pop    esp
  431445:	and    eax,0x0
  43144a:	push   es
  43144b:	or     BYTE PTR [eax+0x900950d],dh
  431451:	add    BYTE PTR [eax+0x25],cl
  431457:	add    BYTE PTR [esi],al
  431459:	or     BYTE PTR [esi+0x9009a0d],dh
  43145f:	add    al,ch
  431461:	and    eax,0x0
  431466:	adc    DWORD PTR [eax],eax
  431468:	es or  eax,0xa00a0
  43146e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43146f:	daa    
  431470:	add    BYTE PTR [eax],al
  431472:	add    BYTE PTR [eax],al
  431474:	add    DWORD PTR [eax],eax
  431476:	nop
  431477:	or     eax,0xb00a8
  43147c:	shl    BYTE PTR [edi],1
  43147e:	add    BYTE PTR [eax],al
  431480:	add    BYTE PTR [eax],al
  431482:	inc    esi
  431483:	add    bh,BYTE PTR [ebp+ecx*1+0xc00b0]
  43148a:	lock daa 
  43148c:	add    BYTE PTR [eax],al
  43148e:	add    BYTE PTR [eax],al
  431490:	inc    esi
  431491:	add    al,ch
  431493:	or     eax,0xd00b5
  431498:	or     al,0x28
  43149a:	add    BYTE PTR [eax],al
  43149c:	add    BYTE PTR [eax],al
  43149e:	add    DWORD PTR [eax],0x22
  4314a1:	or     eax,0xd00b9
  4314a6:	sub    BYTE PTR [eax],ch
  4314a8:	add    BYTE PTR [eax],al
  4314aa:	add    BYTE PTR [eax],al
  4314ac:	inc    esi
  4314ad:	add    dl,cl
  4314af:	or     eax,0xd00bf
  4314b4:	inc    esp
  4314b5:	sub    BYTE PTR [eax],al
  4314b7:	add    BYTE PTR [eax],al
  4314b9:	add    BYTE PTR [esi],al
  4314bb:	sbb    BYTE PTR [ebp+0xd],dh
  4314be:	and    DWORD PTR [eax],eax
  4314c0:	or     eax,0x285c00
  4314c5:	add    BYTE PTR [eax],al
  4314c7:	add    BYTE PTR [esi+0x2],al
  4314ca:	mov    esp,0xd00b00d
  4314cf:	add    BYTE PTR [eax+0x28],al
  4314d5:	add    BYTE PTR [esi+0x2],al
  4314d8:	lds    ecx,FWORD PTR ds:0xe00b5
  4314de:	pushf  
  4314df:	sub    BYTE PTR [eax],al
  4314e1:	add    BYTE PTR [eax],al
  4314e3:	add    BYTE PTR [ebx-0x46f2fc00],al
  4314e9:	add    BYTE PTR [esi],cl
  4314eb:	add    BYTE PTR [eax+ebp*1+0x0],bh
  4314f2:	inc    esi
  4314f3:	add    dl,cl
  4314f5:	or     eax,0xe00bf
  4314fa:	aam    0x28
  4314fc:	add    BYTE PTR [eax],al
  4314fe:	add    BYTE PTR [eax],al
  431500:	adc    DWORD PTR [eax],eax
  431502:	push   ds
  431503:	or     eax,0xe00a0
  431508:	add    al,0x29
  43150a:	add    BYTE PTR [eax],al
  43150c:	add    BYTE PTR [eax],al
  43150e:	add    DWORD PTR [eax],eax
  431510:	and    al,0xd
  431512:	test   al,0x0
  431514:	verr   WORD PTR [ecx+ebp*1]
  431518:	add    BYTE PTR [eax],al
  43151a:	add    BYTE PTR [eax],al
  43151c:	push   es
  43151d:	sbb    BYTE PTR [ebp+0xd],dh
  431520:	and    DWORD PTR [eax],eax
  431522:	adc    BYTE PTR [eax],al
  431524:	cmp    al,0x29
  431526:	add    BYTE PTR [eax],al
  431528:	add    BYTE PTR [eax],al
  43152a:	add    ecx,DWORD PTR [eax]
  43152c:	fimul  DWORD PTR ds:0x1000c7
  431532:	test   BYTE PTR [ecx],ch
  431534:	add    BYTE PTR [eax],al
  431536:	add    BYTE PTR [eax],al
  431538:	adc    DWORD PTR [eax],ebx
  43153a:	outs   dx,BYTE PTR ds:[esi]
  43153b:	or     eax,0x100013
  431540:	pushf  
  431541:	sub    DWORD PTR [eax],eax
  431543:	add    BYTE PTR [eax],al
  431545:	add    BYTE PTR [esi],al
  431547:	sbb    BYTE PTR [ebp+0xd],dh
  43154a:	and    DWORD PTR [eax],eax
  43154c:	adc    BYTE PTR [eax],al
  43154e:	aam    0x29
  431550:	add    BYTE PTR [eax],al
  431552:	add    BYTE PTR [eax],al
  431554:	adc    DWORD PTR [eax],eax
  431556:	out    0xd,al
  431558:	and    eax,0x44001000
  43155d:	sub    eax,DWORD PTR [eax]
  43155f:	add    BYTE PTR [eax],al
  431561:	add    BYTE PTR [edx+eax*1-0x18],al
  431565:	or     eax,0x1100ed
  43156a:	mov    esp,0x2b
  43156f:	add    BYTE PTR [ecx],al
  431571:	add    dl,bh
  431573:	or     eax,0x120021
  431578:	fdivr  DWORD PTR [ebx]
  43157a:	add    BYTE PTR [eax],al
  43157c:	add    BYTE PTR [eax],al
  43157e:	inc    ebx
  43157f:	or     edi,esp
  431581:	or     eax,0x1200f2
  431586:	lock cmp eax,DWORD PTR [eax]
  431589:	add    BYTE PTR [eax],ah
  43158b:	add    BYTE PTR [ebx+0xb],al
  43158e:	add    cl,BYTE PTR [esi]
  431590:	clc    
  431591:	add    BYTE PTR [edx],dl
  431593:	add    BYTE PTR [eax+0x3c],al
  431599:	add    BYTE PTR [ebx+0xb],al
  43159c:	or     BYTE PTR [esi],cl
  43159e:	repnz add BYTE PTR [ebx],dl
  4315a1:	add    BYTE PTR [eax+0x2000003c],bl
  4315a7:	add    BYTE PTR [ebx+0xb],al
  4315aa:	push   cs
  4315ab:	push   cs
  4315ac:	clc    
  4315ad:	add    BYTE PTR [ebx],dl
  4315af:	add    BYTE PTR [eax],ch
  4315b1:	cmp    eax,0x0
  4315b6:	inc    ebx
  4315b7:	or     edx,DWORD PTR [esi+ecx*1]
  4315ba:	inc    DWORD PTR [eax]
  4315bc:	adc    al,0x0
  4315be:	inc    eax
  4315bf:	cmp    eax,0x200000
  4315c4:	inc    ebx
  4315c5:	or     ebx,DWORD PTR [edx]
  4315c7:	push   cs
  4315c8:	add    eax,0x58001401
  4315cd:	cmp    eax,0x0
  4315d2:	inc    ebx
  4315d3:	or     esp,DWORD PTR [eax]
  4315d5:	push   cs
  4315d6:	or     al,0x1
  4315d8:	adc    eax,0x3d7000
  4315dd:	add    BYTE PTR [eax],ah
  4315df:	add    BYTE PTR [ebx+0xb],al
  4315e2:	es push cs
  4315e4:	adc    al,BYTE PTR [ecx]
  4315e6:	adc    eax,0x3d8800
  4315eb:	add    BYTE PTR [eax],al
  4315ed:	add    BYTE PTR [ebx+0xb],al
  4315f0:	sub    al,0xe
  4315f2:	sbb    DWORD PTR [ecx],eax
  4315f4:	push   ss
  4315f5:	add    BYTE PTR [eax+0x2000003d],ah
  4315fb:	add    BYTE PTR [ebx+0xb],al
  4315fe:	xor    cl,BYTE PTR [esi]
  431600:	pop    ds
  431601:	add    DWORD PTR [esi],edx
  431603:	add    BYTE PTR [eax+0x3d],bh
  431609:	add    BYTE PTR [ebx+0xb],al
  43160c:	cmp    BYTE PTR [esi],cl
  43160e:	or     al,0x1
  431610:	pop    ss
  431611:	add    al,dl
  431613:	cmp    eax,0x200000
  431618:	inc    ebx
  431619:	or     edi,DWORD PTR [esi]
  43161b:	push   cs
  43161c:	adc    al,BYTE PTR [ecx]
  43161e:	pop    ss
  43161f:	add    al,ch
  431621:	cmp    eax,0x0
  431626:	inc    ebx
  431627:	or     eax,DWORD PTR [esi+ecx*1-0x1]
  43162b:	add    BYTE PTR [eax],bl
  43162d:	add    BYTE PTR [eax],al
  43162f:	add    BYTE PTR ds:[eax],al
  431632:	and    BYTE PTR [eax],al
  431634:	inc    ebx
  431635:	or     ecx,DWORD PTR [edx+0xe]
  431638:	add    eax,0x18001801
  43163d:	add    BYTE PTR ds:[eax],al
  431640:	add    BYTE PTR [eax],al
  431642:	inc    ebx
  431643:	or     edx,DWORD PTR [eax+0xe]
  431646:	or     al,0x1
  431648:	sbb    DWORD PTR [eax],eax
  43164a:	xor    BYTE PTR [esi],bh
  43164c:	add    BYTE PTR [eax],al
  43164e:	and    BYTE PTR [eax],al
  431650:	inc    ebx
  431651:	or     edx,DWORD PTR [esi+0xe]
  431654:	adc    al,BYTE PTR [ecx]
  431656:	sbb    DWORD PTR [eax],eax
  431658:	dec    eax
  431659:	add    BYTE PTR ds:[eax],al
  43165c:	add    BYTE PTR [eax],al
  43165e:	inc    ebx
  43165f:	or     ebx,DWORD PTR [esi+ecx*1+0xc]
  431663:	add    DWORD PTR [edx],ebx
  431665:	add    BYTE PTR [eax+0x3e],ah
  431668:	add    BYTE PTR [eax],al
  43166a:	and    BYTE PTR [eax],al
  43166c:	inc    ebx
  43166d:	or     esp,DWORD PTR [edx+0xe]
  431670:	adc    al,BYTE PTR [ecx]
  431672:	sbb    al,BYTE PTR [eax]
  431674:	js     0x4316b4
  431676:	add    BYTE PTR [eax],al
  431678:	add    BYTE PTR [eax],al
  43167a:	inc    ebx
  43167b:	or     ebp,DWORD PTR [eax+0xe]
  43167e:	or     al,0x1
  431680:	sbb    eax,DWORD PTR [eax]
  431682:	nop
  431683:	add    BYTE PTR ds:[eax],al
  431686:	and    BYTE PTR [eax],al
  431688:	inc    ebx
  431689:	or     ebp,DWORD PTR [esi+0xe]
  43168c:	adc    al,BYTE PTR [ecx]
  43168e:	sbb    eax,DWORD PTR [eax]
  431690:	test   al,0x3e
  431692:	add    BYTE PTR [eax],al
  431694:	add    BYTE PTR [eax],al
  431696:	inc    ebx
  431697:	or     esi,DWORD PTR [esi+ecx*1+0xc]
  43169b:	add    DWORD PTR [eax+eax*1],ebx
  43169e:	sar    BYTE PTR [esi],0x0
  4316a1:	add    BYTE PTR [eax],ah
  4316a3:	add    BYTE PTR [ebx+0xb],al
  4316a6:	jp     0x4316b6
  4316a8:	adc    al,BYTE PTR [ecx]
  4316aa:	sbb    al,0x0
  4316ac:	fdivr  DWORD PTR [esi]
  4316ae:	add    BYTE PTR [eax],al
  4316b0:	add    BYTE PTR [eax],al
  4316b2:	inc    ebx
  4316b3:	or     eax,DWORD PTR [eax+0x1d010c0e]
  4316b9:	add    al,dh
  4316bb:	add    BYTE PTR ds:[eax],al
  4316be:	and    BYTE PTR [eax],al
  4316c0:	inc    ebx
  4316c1:	or     eax,DWORD PTR [esi+0x1d01120e]
  4316c7:	add    BYTE PTR [eax],cl
  4316c9:	aas    
  4316ca:	add    BYTE PTR [eax],al
  4316cc:	add    BYTE PTR [eax],al
  4316ce:	add    DWORD PTR [eax],eax
  4316d0:	mov    WORD PTR [esi],cs
  4316d2:	add    DWORD PTR es:[esi],ebx
  4316d5:	add    BYTE PTR [esi+eax*2+0x0],al
  4316d9:	add    BYTE PTR [eax],al
  4316db:	add    BYTE PTR [esi],al
  4316dd:	add    BYTE PTR [edi+0x20012e0e],cl
  4316e3:	add    BYTE PTR [edi+eax*2+0x0],ah
  4316ea:	push   es
  4316eb:	add    BYTE PTR [ebp+0x20012e0e],bl
  4316f1:	add    BYTE PTR [eax+0x49],bh
  4316f4:	add    BYTE PTR [eax],al
  4316f6:	add    BYTE PTR [eax],al
  4316f8:	push   es
  4316f9:	add    BYTE PTR [eax+0x2000bf0e],ch
  4316ff:	add    BYTE PTR [eax],al
  431701:	dec    ebx
  431702:	add    BYTE PTR [eax],al
  431704:	add    BYTE PTR [eax],al
  431706:	push   es
  431707:	add    BYTE PTR [edi+0x20012e0e],ch
  43170d:	add    BYTE PTR [eax+0x4c],bh
  431713:	add    BYTE PTR [esi],al
  431715:	add    cl,al
  431717:	push   cs
  431718:	add    DWORD PTR cs:[eax],esp
  43171b:	add    BYTE PTR [eax],ah
  43171d:	push   eax
  43171e:	add    BYTE PTR [eax],al
  431720:	add    BYTE PTR [eax],al
  431722:	push   es
  431723:	add    bl,dl
  431725:	push   cs
  431726:	add    DWORD PTR cs:[eax],esp
  431729:	add    BYTE PTR [eax],bh
  43172b:	push   edx
  43172c:	add    BYTE PTR [eax],al
  43172e:	add    BYTE PTR [eax],al
  431730:	push   es
  431731:	add    bh,bl
  431733:	push   cs
  431734:	xor    al,BYTE PTR [ecx]
  431736:	and    BYTE PTR [eax],al
  431738:	call   0x431793
  43173d:	add    BYTE PTR [esi],al
  43173f:	add    BYTE PTR [ebx],al
  431741:	rdmsr  
  431743:	add    DWORD PTR [edx],esp
  431745:	add    BYTE PTR [edx+ebx*2+0x0],al
  43174c:	add    DWORD PTR [eax],eax
  43174e:	sbb    ecx,DWORD PTR [edi]
  431750:	cmp    BYTE PTR [ecx],al
  431752:	and    al,0x0
  431754:	push   eax
  431755:	pop    ebp
  431756:	add    BYTE PTR [eax],al
  431758:	add    BYTE PTR [eax],al
  43175a:	add    DWORD PTR [eax],eax
  43175c:	push   ds
  43175d:	phaddw mm4,QWORD PTR ds:0x602000
  431765:	add    BYTE PTR [eax],al
  431767:	add    BYTE PTR [ecx],al
  431769:	add    BYTE PTR [ecx],ah
  43176b:	(bad)  
  43176d:	add    DWORD PTR [esi],esp
  43176f:	add    BYTE PTR [esp+eiz*2+0x0],bh
  431776:	push   es
  431777:	add    BYTE PTR [edi+ecx*1],ah
  43177a:	add    DWORD PTR cs:[ebx],ebp
  43177d:	add    BYTE PTR [eax],al
  43177f:	data16 add BYTE PTR [eax],al
  431782:	add    BYTE PTR [eax],al
  431784:	add    DWORD PTR [eax],eax
  431786:	sub    ecx,DWORD PTR [edi]
  431788:	add    DWORD PTR es:[ebx],ebp
  43178b:	add    BYTE PTR [eax],ch
  43178d:	push   0x0
  431792:	add    DWORD PTR [eax],eax
  431794:	cs (bad) 
  431797:	add    DWORD PTR ds:0x684000,ebp
  43179d:	add    BYTE PTR [eax],al
  43179f:	add    BYTE PTR [esi],al
  4317a1:	sbb    BYTE PTR [ebp+0xd],dh
  4317a4:	and    DWORD PTR [eax],eax
  4317a6:	das    
  4317a7:	add    BYTE PTR [eax+0x68],bl
  4317aa:	add    BYTE PTR [eax],al
  4317ac:	add    BYTE PTR [eax],al
  4317ae:	adc    DWORD PTR [eax],ebx
  4317b0:	outs   dx,BYTE PTR ds:[esi]
  4317b1:	or     eax,0x2f0013
  4317b6:	xor    al,0x6b
  4317b8:	add    BYTE PTR [eax],al
  4317ba:	add    BYTE PTR [eax],al
  4317bc:	push   ss
  4317bd:	add    BYTE PTR [ecx],bh
  4317bf:	maxps  xmm0,XMMWORD PTR [ecx]
  4317c2:	das    
  4317c3:	add    BYTE PTR [eax],cl
  4317c5:	ins    DWORD PTR es:[edi],dx
  4317c6:	add    BYTE PTR [eax],al
  4317c8:	add    BYTE PTR [eax],al
  4317ca:	push   ss
  4317cb:	add    BYTE PTR [ecx],bh
  4317cd:	pcmpgtw mm0,QWORD PTR [ecx]
  4317d0:	xor    BYTE PTR [eax],al
  4317d2:	adc    BYTE PTR [edi+0x0],ch
  4317d5:	add    BYTE PTR [eax],al
  4317d7:	add    BYTE PTR [ebx],dl
  4317d9:	or     BYTE PTR [ebx+0xf],dl
  4317dc:	je     0x4317df
  4317de:	xor    DWORD PTR [eax],eax
  4317e0:	js     0x431851
  4317e2:	add    BYTE PTR [eax],al
  4317e4:	add    BYTE PTR [eax],al
  4317e6:	adc    ecx,DWORD PTR [eax]
  4317e8:	addr16 (bad) 
  4317eb:	add    DWORD PTR [ecx],esi
  4317ed:	add    BYTE PTR [eax+0x6f],dl
  4317f3:	add    BYTE PTR [ebx],dl
  4317f5:	or     BYTE PTR [ebx+0xf],dh
  4317f8:	add    BYTE PTR [ecx],0x31
  4317fb:	add    BYTE PTR [eax+0x6f],ch
  431801:	add    BYTE PTR [ecx],dl
  431803:	sbb    BYTE PTR [esi+0xd],ch
  431806:	adc    eax,DWORD PTR [eax]
  431808:	xor    al,BYTE PTR [eax]
  43180a:	fsubr  QWORD PTR [edi+0x0]
  43180d:	add    BYTE PTR [eax],al
  43180f:	add    BYTE PTR [esi],al
  431811:	sbb    BYTE PTR [ebp+0xd],dh
  431814:	and    DWORD PTR [eax],eax
  431816:	xor    al,BYTE PTR [eax]
  431818:	hlt    
  431819:	outs   dx,DWORD PTR ds:[esi]
  43181a:	add    BYTE PTR [eax],al
  43181c:	add    BYTE PTR [eax],al
  43181e:	adc    DWORD PTR [eax],eax
  431820:	mov    ecx,0x3201910f
  431825:	add    BYTE PTR [eax],bh
  431827:	jo     0x431829
  431829:	add    BYTE PTR [eax],al
  43182b:	add    BYTE PTR [esi],dl
  43182d:	or     bl,dl
  43182f:	setns  BYTE PTR [ecx]
  431832:	xor    al,0x0
  431834:	call   0x4318a9
  431839:	add    BYTE PTR [ecx+0x130d6e18],dl
  43183f:	add    BYTE PTR [eax+eax*1],dh
  431842:	dec    esp
  431843:	jno    0x431845
  431845:	add    BYTE PTR [eax],al
  431847:	add    BYTE PTR [esi+0x210d7518],al
  43184d:	add    BYTE PTR [eax+eax*1],dh
  431850:	pusha  
  431851:	jno    0x431853
  431853:	add    BYTE PTR [eax],al
  431855:	add    BYTE PTR [ebx-0x5df2dc00],dl
  43185b:	add    DWORD PTR [eax+eax*1],esi
  43185e:	jl     0x4318d1
  431860:	add    BYTE PTR [eax],al
  431862:	add    BYTE PTR [eax],al
  431864:	xchg   ebx,eax
  431865:	add    BYTE PTR [esi],ah
  431867:	or     eax,0x3501a7
  43186c:	cwde   
  43186d:	jno    0x43186f
  43186f:	add    BYTE PTR [eax],al
  431871:	add    BYTE PTR [ebx-0x53f27000],dl
  431877:	add    DWORD PTR [esi],esi
  431879:	add    BYTE PTR [ecx+esi*2+0x0],dh
  431880:	xchg   ebx,eax
  431881:	add    BYTE PTR [edx],ah
  431883:	or     eax,0x3701b1
  431888:	shl    BYTE PTR [ecx+0x0],1
  43188b:	add    BYTE PTR [eax],al
  43188d:	add    BYTE PTR [ebx-0x49f2c200],dl
  431893:	add    DWORD PTR [eax],edi
  431895:	add    BYTE PTR [eax+0x72],dh
  43189b:	add    BYTE PTR [ebx],dl
  43189d:	or     bh,bl
  43189f:	setns  BYTE PTR [ecx]
  4318a2:	cmp    al,BYTE PTR [eax]
  4318a4:	int3   
  4318a5:	jb     0x4318a7
  4318a7:	add    BYTE PTR [eax],al
  4318a9:	add    BYTE PTR [ecx+0x130d6e18],dl
  4318af:	add    BYTE PTR [edx],bh
  4318b1:	add    BYTE PTR [eax],bh
  4318b3:	jae    0x4318b5
  4318b5:	add    BYTE PTR [eax],al
  4318b7:	add    BYTE PTR [esi+0x210d7518],al
  4318bd:	add    BYTE PTR [edx],bh
  4318bf:	add    BYTE PTR [ebx+esi*2+0x0],cl
  4318c3:	add    BYTE PTR [eax],al
  4318c5:	add    BYTE PTR [ebx-0x42f2e200],dl
  4318cb:	add    DWORD PTR [edx],edi
  4318cd:	add    BYTE PTR [eax],ch
  4318cf:	je     0x4318d1
  4318d1:	add    BYTE PTR [eax],al
  4318d3:	add    BYTE PTR [ecx+0x130d6e18],dl
  4318d9:	add    BYTE PTR [ebx],bh
  4318db:	add    BYTE PTR [eax+0x74],bh
  4318de:	add    BYTE PTR [eax],al
  4318e0:	add    BYTE PTR [eax],al
  4318e2:	xchg   BYTE PTR [eax],bl
  4318e4:	jne    0x4318f3
  4318e6:	and    DWORD PTR [eax],eax
  4318e8:	cmp    eax,DWORD PTR [eax]
  4318ea:	mov    WORD PTR [eax+eax*1+0x0],?
  4318ee:	add    BYTE PTR [eax],al
  4318f0:	xchg   ecx,eax
  4318f1:	add    BYTE PTR [esi],bh
  4318f3:	or     eax,0x3b0044
  4318f8:	shl    BYTE PTR [eax+eax*1+0x0],1
  4318fc:	add    BYTE PTR [eax],al
  4318fe:	xchg   ecx,eax
  4318ff:	add    BYTE PTR [esi+0xd],al
  431902:	retf   0x3c01
  431905:	add    BYTE PTR [ebp+esi*2+0x0],ch
  43190c:	xchg   ebx,eax
  43190d:	add    BYTE PTR [ebp+ecx*1-0x2e],ah
  431911:	add    DWORD PTR ds:0x75ec00,edi
  431917:	add    BYTE PTR [eax],al
  431919:	add    BYTE PTR [ebx-0x25f29800],dl
  43191f:	add    DWORD PTR [esi],edi
  431921:	add    BYTE PTR [esi+esi*2],ah
  431924:	add    BYTE PTR [eax],al
  431926:	add    BYTE PTR [eax],al
  431928:	xchg   ebx,eax
  431929:	add    BYTE PTR [esi+0xd],ah
  43192c:	fiadd  DWORD PTR [ecx]
  43192e:	inc    eax
  43192f:	add    BYTE PTR [eax+0x79],bl
  431932:	add    BYTE PTR [eax],al
  431934:	add    BYTE PTR [eax],al
  431936:	xchg   ecx,eax
  431937:	sbb    BYTE PTR [esi+0xd],ch
  43193a:	adc    eax,DWORD PTR [eax]
  43193c:	inc    edx
  43193d:	add    BYTE PTR [edx+edi*2+0x0],bh
  431941:	add    BYTE PTR [eax],al
  431943:	add    BYTE PTR [esi+0x210d7518],al
  431949:	add    BYTE PTR [edx+0x0],al
  43194c:	nop
  43194d:	jp     0x43194f
  43194f:	add    BYTE PTR [eax],al
  431951:	add    BYTE PTR [ebx-0xef2da00],dl
  431957:	add    DWORD PTR [edx+0x0],eax
  43195a:	or     BYTE PTR [eax+eax*1+0x0],bh
  43195e:	add    BYTE PTR [eax],al
  431960:	xchg   ecx,eax
  431961:	add    BYTE PTR [eax+0x4501f80d],dl
  431967:	add    BYTE PTR [eax+0x7c],dh
  43196a:	add    BYTE PTR [eax],al
  43196c:	add    BYTE PTR [eax],al
  43196e:	xchg   ecx,eax
  43196f:	add    BYTE PTR [edx],ah
  431971:	or     eax,0x480204
  431976:	call   0x4319f7
  43197b:	add    BYTE PTR [ecx+0xe0d3e00],dl
  431981:	add    cl,BYTE PTR [edx+0x0]
  431984:	sar    BYTE PTR [ebp+0x0],1
  431987:	add    BYTE PTR [eax],al
  431989:	add    BYTE PTR [esi+0x170d4600],dl
  43198f:	add    cl,BYTE PTR [eax+eax*1+0x18]
  431993:	jle    0x431995
  431995:	add    BYTE PTR [eax],al
  431997:	add    BYTE PTR [ecx+0x1f0d6400],dl
  43199d:	add    cl,BYTE PTR [edi+0x0]
  4319a0:	aam    0x7e
  4319a2:	add    BYTE PTR [eax],al
  4319a4:	add    BYTE PTR [eax],al
  4319a6:	xchg   ecx,eax
  4319a7:	sbb    BYTE PTR [esi+0xd],ch
  4319aa:	adc    eax,DWORD PTR [eax]
  4319ac:	push   eax
  4319ad:	add    BYTE PTR [edi+edi*2+0x0],dh
  4319b4:	xchg   BYTE PTR [eax],bl
  4319b6:	jne    0x4319c5
  4319b8:	aas    
  4319b9:	add    dl,BYTE PTR [eax+0x0]
  4319bc:	inc    esp
  4319bd:	add    BYTE PTR [eax],0x0
  4319c0:	add    BYTE PTR [eax],al
  4319c2:	add    DWORD PTR [eax],0x64
  4319c5:	or     eax,0x530021
  4319ca:	add    BYTE PTR [eax+0x0],0x81
  4319d1:	add    BYTE PTR [eax+0xd],ch
  4319d4:	add    DWORD PTR cs:[ebx+0x0],edx
  4319d8:	cmp    al,0x84
  4319da:	add    BYTE PTR [eax],al
  4319dc:	add    BYTE PTR [eax],al
  4319de:	add    DWORD PTR [eax],0x24b0d66
  4319e4:	push   ebx
  4319e5:	add    BYTE PTR [eax-0x7c],bl
  4319e8:	add    BYTE PTR [eax],al
  4319ea:	add    BYTE PTR [eax],al
  4319ec:	add    DWORD PTR [eax],0x2500d62
  4319f2:	push   esp
  4319f3:	add    BYTE PTR [eax+0x84],al
  4319f9:	add    BYTE PTR [ecx-0x4af2e000],al
  4319ff:	add    BYTE PTR [eax+eax*1-0x50],dl
  431a03:	test   BYTE PTR [eax],al
  431a05:	add    BYTE PTR [eax],al
  431a07:	add    BYTE PTR [ecx+0x540d6c00],al
  431a0d:	add    dl,BYTE PTR [eax+eax*1+0x0]
  431a11:	add    BYTE PTR [ecx],al
  431a13:	add    BYTE PTR [eax],al
  431a15:	add    BYTE PTR [eax],al
  431a17:	add    BYTE PTR [ecx],al
  431a19:	add    BYTE PTR [eax],al
  431a1b:	add    BYTE PTR [eax],al
  431a1d:	add    BYTE PTR [ecx],al
  431a1f:	add    BYTE PTR [ebp+ecx*1+0x10000],cl
  431a26:	add    BYTE PTR [eax],al
  431a28:	add    BYTE PTR [eax],al
  431a2a:	add    al,BYTE PTR [eax]
  431a2c:	add    BYTE PTR [eax],al
  431a2e:	add    BYTE PTR [eax],al
  431a30:	add    DWORD PTR [eax],eax
  431a32:	add    BYTE PTR [eax],al
  431a34:	add    BYTE PTR [eax],al
  431a36:	add    DWORD PTR [eax],eax
  431a38:	add    BYTE PTR [eax],al
  431a3a:	add    BYTE PTR [eax],al
  431a3c:	add    al,BYTE PTR [eax]
  431a3e:	add    BYTE PTR [eax],al
  431a40:	add    BYTE PTR [eax],al
  431a42:	add    DWORD PTR [eax],eax
  431a44:	add    BYTE PTR [eax],al
  431a46:	add    BYTE PTR [eax],al
  431a48:	add    DWORD PTR [eax],eax
  431a4a:	add    BYTE PTR [eax],al
  431a4c:	add    BYTE PTR [eax],al
  431a4e:	add    DWORD PTR [eax],eax
  431a50:	add    BYTE PTR [eax],al
  431a52:	add    BYTE PTR [eax],al
  431a54:	add    DWORD PTR [eax],eax
  431a56:	ret    
  431a57:	or     eax,0x10000
  431a5c:	ret    
  431a5d:	or     eax,0x10000
  431a62:	add    BYTE PTR [eax],al
  431a64:	add    BYTE PTR [eax],al
  431a66:	add    DWORD PTR [eax],eax
  431a68:	add    BYTE PTR [eax],al
  431a6a:	add    BYTE PTR [eax],al
  431a6c:	add    DWORD PTR [eax],eax
  431a6e:	add    BYTE PTR [eax],al
  431a70:	add    BYTE PTR [eax],al
  431a72:	add    DWORD PTR [eax],eax
  431a74:	lock or eax,0x10000
  431a7a:	add    BYTE PTR [eax],al
  431a7c:	add    BYTE PTR [eax],al
  431a7e:	add    DWORD PTR [eax],eax
  431a80:	add    BYTE PTR [eax],al
  431a82:	add    BYTE PTR [eax],al
  431a84:	add    DWORD PTR [eax],eax
  431a86:	add    BYTE PTR [eax],al
  431a88:	add    BYTE PTR [eax],al
  431a8a:	add    DWORD PTR [eax],eax
  431a8c:	add    BYTE PTR [eax],al
  431a8e:	add    BYTE PTR [eax],al
  431a90:	add    DWORD PTR [eax],eax
  431a92:	add    BYTE PTR [eax],al
  431a94:	add    BYTE PTR [eax],al
  431a96:	add    DWORD PTR [eax],eax
  431a98:	add    BYTE PTR [eax],al
  431a9a:	add    BYTE PTR [eax],al
  431a9c:	add    DWORD PTR [eax],eax
  431a9e:	add    BYTE PTR [eax],al
  431aa0:	add    BYTE PTR [eax],al
  431aa2:	add    DWORD PTR [eax],eax
  431aa4:	add    BYTE PTR [eax],al
  431aa6:	add    BYTE PTR [eax],al
  431aa8:	add    DWORD PTR [eax],eax
  431aaa:	add    BYTE PTR [eax],al
  431aac:	add    BYTE PTR [eax],al
  431aae:	add    DWORD PTR [eax],eax
  431ab0:	add    BYTE PTR [eax],al
  431ab2:	add    BYTE PTR [eax],al
  431ab4:	add    DWORD PTR [eax],eax
  431ab6:	add    BYTE PTR [eax],al
  431ab8:	add    BYTE PTR [eax],al
  431aba:	add    DWORD PTR [eax],eax
  431abc:	add    BYTE PTR [eax],al
  431abe:	add    BYTE PTR [eax],al
  431ac0:	add    DWORD PTR [eax],eax
  431ac2:	add    BYTE PTR [eax],al
  431ac4:	add    BYTE PTR [eax],al
  431ac6:	add    al,BYTE PTR [eax]
  431ac8:	add    BYTE PTR [eax],al
  431aca:	add    BYTE PTR [eax],al
  431acc:	add    DWORD PTR [eax],eax
  431ace:	in     al,dx
  431acf:	push   cs
  431ad0:	add    BYTE PTR [eax],al
  431ad2:	add    al,BYTE PTR [eax]
  431ad4:	icebp  
  431ad5:	push   cs
  431ad6:	add    BYTE PTR [eax],al
  431ad8:	add    DWORD PTR [eax],eax
  431ada:	in     al,dx
  431adb:	push   cs
  431adc:	add    BYTE PTR [eax],al
  431ade:	add    al,BYTE PTR [eax]
  431ae0:	adc    BYTE PTR [edi],cl
  431ae2:	add    BYTE PTR [eax],al
  431ae4:	add    DWORD PTR [eax],eax
  431ae6:	add    BYTE PTR [eax],al
  431ae8:	add    BYTE PTR [eax],al
  431aea:	add    DWORD PTR [eax],eax
  431aec:	add    BYTE PTR [eax],al
  431aee:	add    BYTE PTR [eax],al
  431af0:	add    DWORD PTR [eax],eax
  431af2:	add    BYTE PTR [eax],al
  431af4:	add    BYTE PTR [eax],al
  431af6:	add    al,BYTE PTR [eax]
  431af8:	add    BYTE PTR [eax],al
  431afa:	add    BYTE PTR [eax],al
  431afc:	add    eax,DWORD PTR [eax]
  431afe:	add    BYTE PTR [eax],al
  431b00:	add    BYTE PTR [eax],al
  431b02:	add    al,0x0
  431b04:	add    BYTE PTR [eax],al
  431b06:	add    BYTE PTR [eax],al
  431b08:	add    eax,0x0
  431b0d:	add    BYTE PTR [ecx],al
  431b0f:	add    BYTE PTR [eax],al
  431b11:	add    BYTE PTR [eax],al
  431b13:	add    BYTE PTR [edx],al
  431b15:	add    BYTE PTR [eax],al
  431b17:	add    BYTE PTR [eax],al
  431b19:	add    BYTE PTR [ecx],al
  431b1b:	add    BYTE PTR [eax],al
  431b1d:	add    BYTE PTR [eax],al
  431b1f:	add    BYTE PTR [edx],al
  431b21:	add    BYTE PTR [eax],al
  431b23:	add    BYTE PTR [eax],al
  431b25:	add    BYTE PTR [ecx],al
  431b27:	add    BYTE PTR [ecx+0xf],cl
  431b2a:	add    BYTE PTR [eax],al
  431b2c:	add    DWORD PTR [eax],eax
  431b2e:	dec    edi
  431b2f:	sldt   WORD PTR [eax]
  431b32:	add    DWORD PTR [eax],eax
  431b34:	jg     0x431b45
  431b36:	add    BYTE PTR [eax],al
  431b38:	add    DWORD PTR [eax],eax
  431b3a:	retf   0xf
  431b3d:	add    BYTE PTR [edx],al
  431b3f:	add    cl,dl
  431b41:	sldt   WORD PTR [eax]
  431b44:	add    DWORD PTR [eax],eax
  431b46:	add    BYTE PTR [eax],al
  431b48:	add    BYTE PTR [eax],al
  431b4a:	add    DWORD PTR [eax],eax
  431b4c:	add    BYTE PTR [eax],al
  431b4e:	add    BYTE PTR [eax],al
  431b50:	add    DWORD PTR [eax],eax
  431b52:	add    BYTE PTR [eax],al
  431b54:	add    BYTE PTR [eax],al
  431b56:	add    DWORD PTR [eax],eax
  431b58:	add    BYTE PTR [eax],al
  431b5a:	add    BYTE PTR [eax],al
  431b5c:	add    DWORD PTR [eax],eax
  431b5e:	add    BYTE PTR [eax],al
  431b60:	add    BYTE PTR [eax],al
  431b62:	add    al,BYTE PTR [eax]
  431b64:	add    BYTE PTR [eax],al
  431b66:	add    BYTE PTR [eax],al
  431b68:	add    DWORD PTR [eax],eax
  431b6a:	add    BYTE PTR [eax],al
  431b6c:	add    BYTE PTR [eax],al
  431b6e:	add    DWORD PTR [eax],eax
  431b70:	add    BYTE PTR [eax],al
  431b72:	add    BYTE PTR [eax],al
  431b74:	add    DWORD PTR [eax],eax
  431b76:	add    BYTE PTR [eax],al
  431b78:	add    BYTE PTR [eax],al
  431b7a:	add    DWORD PTR [eax],eax
  431b7c:	add    BYTE PTR [eax],al
  431b7e:	add    BYTE PTR [eax],al
  431b80:	add    DWORD PTR [eax],eax
  431b82:	add    BYTE PTR [eax],al
  431b84:	add    BYTE PTR [eax],al
  431b86:	add    al,BYTE PTR [eax]
  431b88:	add    BYTE PTR [eax],al
  431b8a:	add    BYTE PTR [eax],al
  431b8c:	add    DWORD PTR [eax],eax
  431b8e:	add    BYTE PTR [eax],al
  431b90:	add    BYTE PTR [eax],al
  431b92:	add    al,BYTE PTR [eax]
  431b94:	add    BYTE PTR [eax],al
  431b96:	add    BYTE PTR [eax],al
  431b98:	add    DWORD PTR [eax],eax
  431b9a:	add    BYTE PTR [eax],al
  431b9c:	add    BYTE PTR [eax],al
  431b9e:	add    al,BYTE PTR [eax]
  431ba0:	add    BYTE PTR [eax],al
  431ba2:	add    BYTE PTR [eax],al
  431ba4:	add    eax,DWORD PTR [eax]
  431ba6:	add    BYTE PTR [eax],al
  431ba8:	add    BYTE PTR [eax],al
  431baa:	add    DWORD PTR [eax],eax
  431bac:	add    BYTE PTR [eax],al
  431bae:	add    BYTE PTR [eax],al
  431bb0:	add    al,BYTE PTR [eax]
  431bb2:	add    BYTE PTR [eax],al
  431bb4:	add    BYTE PTR [eax],al
  431bb6:	add    eax,DWORD PTR [eax]
  431bb8:	add    BYTE PTR [eax],al
  431bba:	add    BYTE PTR [eax],al
  431bbc:	add    DWORD PTR [eax],eax
  431bbe:	add    BYTE PTR [eax],al
  431bc0:	add    BYTE PTR [eax],al
  431bc2:	add    al,BYTE PTR [eax]
  431bc4:	add    BYTE PTR [eax],al
  431bc6:	add    BYTE PTR [eax],al
  431bc8:	add    DWORD PTR [eax],eax
  431bca:	add    BYTE PTR [eax],al
  431bcc:	add    BYTE PTR [eax],al
  431bce:	add    al,BYTE PTR [eax]
  431bd0:	add    BYTE PTR [eax],al
  431bd2:	add    BYTE PTR [eax],al
  431bd4:	add    DWORD PTR [eax],eax
  431bd6:	add    BYTE PTR [eax],al
  431bd8:	add    BYTE PTR [eax],al
  431bda:	add    al,BYTE PTR [eax]
  431bdc:	add    BYTE PTR [eax],al
  431bde:	add    BYTE PTR [eax],al
  431be0:	add    eax,DWORD PTR [eax]
  431be2:	add    BYTE PTR [eax],al
  431be4:	add    BYTE PTR [eax],al
  431be6:	add    DWORD PTR [eax],eax
  431be8:	add    BYTE PTR [eax],al
  431bea:	add    BYTE PTR [eax],al
  431bec:	add    DWORD PTR [eax],eax
  431bee:	add    BYTE PTR [eax],al
  431bf0:	add    BYTE PTR [eax],al
  431bf2:	add    al,BYTE PTR [eax]
  431bf4:	add    BYTE PTR [eax],al
  431bf6:	add    BYTE PTR [eax],al
  431bf8:	add    eax,DWORD PTR [eax]
  431bfa:	add    BYTE PTR [eax],al
  431bfc:	add    BYTE PTR [eax],al
  431bfe:	add    DWORD PTR [eax],eax
  431c00:	add    BYTE PTR [eax],al
  431c02:	add    BYTE PTR [eax],al
  431c04:	add    DWORD PTR [eax],eax
  431c06:	add    BYTE PTR [eax],al
  431c08:	add    BYTE PTR [eax],al
  431c0a:	add    al,BYTE PTR [eax]
  431c0c:	add    BYTE PTR [eax],al
  431c0e:	adc    DWORD PTR ds:0x210d75,eax
  431c14:	pop    ecx
  431c15:	add    al,0x75
  431c17:	or     eax,0x4490021
  431c1c:	jne    0x431c2b
  431c1e:	xor    BYTE PTR [eax],al
  431c20:	mov    cl,0x1
  431c22:	jne    0x431c31
  431c24:	and    DWORD PTR [eax],eax
  431c26:	mov    ecx,0x210d7501
  431c2b:	add    BYTE PTR [ecx+0x1],bl
  431c2e:	jne    0x431c3d
  431c30:	or     eax,0x7504e903
  431c35:	or     eax,0x1a90021
  431c3a:	jne    0x431c49
  431c3c:	and    DWORD PTR [eax],eax
  431c3e:	add    DWORD PTR [ecx],eax
  431c40:	jne    0x431c4f
  431c42:	xor    eax,0x75015103
  431c47:	or     eax,0x610030
  431c4c:	jne    0x431c5b
  431c4e:	and    DWORD PTR [eax],eax
  431c50:	add    DWORD PTR [eax],0x210d75
  431c56:	mov    DWORD PTR [eax],eax
  431c58:	jne    0x431c67
  431c5a:	add    DWORD PTR [ecx+esi*2],eax
  431c5d:	add    al,0x75
  431c5f:	or     eax,0x4100ed
  431c64:	jne    0x431c73
  431c66:	and    DWORD PTR [eax],eax
  431c68:	jno    0x431c6d
  431c6a:	jne    0x431c79
  431c6c:	xor    BYTE PTR [eax],al
  431c6e:	add    DWORD PTR [ebx],0x300d75
  431c74:	popa   
  431c75:	add    al,0x75
  431c77:	or     eax,0x3690021
  431c7c:	jne    0x431c8b
  431c7e:	xor    BYTE PTR [eax],al
  431c80:	mov    DWORD PTR [ebx],eax
  431c82:	jne    0x431c91
  431c84:	xor    BYTE PTR [eax],al
  431c86:	cdq    
  431c87:	add    DWORD PTR [ebp+0xd],esi
  431c8a:	add    BYTE PTR ds:0xd750451,0x4b
  431c91:	add    ah,BYTE PTR [ecx+0x3]
  431c94:	jne    0x431ca3
  431c96:	xor    BYTE PTR [eax],al
  431c98:	jns    0x431c9d
  431c9a:	jne    0x431ca9
  431c9c:	xor    BYTE PTR [eax],al
  431c9e:	jns    0x431ca4
  431ca0:	jne    0x431caf
  431ca2:	xor    BYTE PTR [eax],al
  431ca4:	xchg   ecx,eax
  431ca5:	add    esi,DWORD PTR [ebp+0xd]
  431ca8:	xor    BYTE PTR [eax],al
  431caa:	or     al,0x0
  431cac:	jne    0x431cbb
  431cae:	and    DWORD PTR [eax],eax
  431cb0:	sub    DWORD PTR [eax],eax
  431cb2:	jne    0x431cc1
  431cb4:	rol    DWORD PTR ds:0x10050029,cl
  431cba:	in     eax,dx
  431cbb:	add    BYTE PTR [ecx],ch
  431cbd:	add    BYTE PTR [edx],bl
  431cbf:	adc    ch,ch
  431cc1:	add    BYTE PTR [ecx],ch
  431cc3:	add    BYTE PTR [ecx],dh
  431cc5:	adc    ch,ch
  431cc7:	add    BYTE PTR [ecx],ch
  431cc9:	add    BYTE PTR [edx+0x10],cl
  431ccc:	fld    DWORD PTR ds:0x105c0509
  431cd2:	and    eax,0x62000c00
  431cd7:	adc    BYTE PTR [ebp+0x6c000c00],dh
  431cdd:	adc    BYTE PTR [ebp+0x79000c00],dh
  431ce3:	adc    bl,dh
  431ce5:	add    eax,0x10820539
  431cea:	stc    
  431ceb:	add    eax,0x108e000c
  431cf0:	std    
  431cf1:	add    eax,0x1097000c
  431cf6:	push   esp
  431cf7:	add    cl,BYTE PTR [eax+eax*1]
  431cfa:	mov    ds:0x69024b10,eax
  431cff:	add    al,0xb0
  431d01:	adc    BYTE PTR [esi+eax*1],al
  431d04:	cmp    DWORD PTR ds:0x6090d75,eax
  431d0a:	or     al,0x0
  431d0c:	mov    edi,0x9060e10
  431d11:	add    eax,0x2510c3
  431d16:	sub    DWORD PTR [eax],eax
  431d18:	enter  0x1410,0x6
  431d1c:	inc    ecx
  431d1d:	add    eax,0x61810e7
  431d22:	sub    DWORD PTR [eax],eax
  431d24:	or     DWORD PTR [ecx],edx
  431d26:	sbb    eax,0xd002906
  431d2b:	adc    DWORD PTR [ebx],esp
  431d2d:	push   es
  431d2e:	leave  
  431d2f:	add    BYTE PTR [ebp+0xd],dh
  431d32:	and    DWORD PTR [eax],eax
  431d34:	jno    0x431d36
  431d36:	jne    0x431d45
  431d38:	and    DWORD PTR [eax],eax
  431d3a:	mov    cl,0x0
  431d3c:	sbb    dl,BYTE PTR [ecx]
  431d3e:	xor    DWORD PTR [esi],eax
  431d40:	cmp    DWORD PTR [esi*2-0x4ef9c9f3],eax
  431d47:	add    BYTE PTR [ecx+edx*1],ch
  431d4a:	cmp    al,0x6
  431d4c:	mov    cl,0x0
  431d4e:	inc    eax
  431d4f:	adc    DWORD PTR [esi+eax*1],edi
  431d52:	pop    ecx
  431d53:	add    edx,DWORD PTR [ecx+edx*1+0x43]
  431d57:	push   es
  431d58:	pop    ecx
  431d59:	add    ebp,DWORD PTR [ecx+0x11]
  431d5c:	dec    ecx
  431d5d:	push   es
  431d5e:	dec    ecx
  431d5f:	add    esi,DWORD PTR [ebp+0xd]
  431d62:	and    DWORD PTR [eax],eax
  431d64:	xor    DWORD PTR [esi+ebp*2],eax
  431d67:	adc    DWORD PTR [edi+0x7704f100],edi
  431d6d:	adc    DWORD PTR [esi+eax*1+0x59],ebx
  431d71:	add    eax,DWORD PTR [edx+0x59066111]
  431d77:	add    ebp,DWORD PTR [ecx+0x11]
  431d7a:	push   0x9c035906
  431d7f:	adc    DWORD PTR [edi-0x56fb0f00],edi
  431d85:	adc    DWORD PTR [ebp+0x6],esi
  431d88:	icebp  
  431d89:	add    al,0xb1
  431d8b:	adc    DWORD PTR [edx+0x6],edi
  431d8e:	icebp  
  431d8f:	add    al,0xbb
  431d91:	adc    DWORD PTR [eax-0x3dfca6fa],eax
  431d97:	adc    DWORD PTR [eax-0x24fb0efa],edx
  431d9d:	adc    DWORD PTR [ebp+0x75001406],edx
  431da3:	or     eax,0x1c0021
  431da8:	jne    0x431db7
  431daa:	and    DWORD PTR [eax],eax
  431dac:	and    al,0x0
  431dae:	jne    0x431dbd
  431db0:	and    DWORD PTR [eax],eax
  431db2:	sub    al,0x0
  431db4:	jne    0x431dc3
  431db6:	and    DWORD PTR [eax],eax
  431db8:	xor    al,0x0
  431dba:	jne    0x431dc9
  431dbc:	and    DWORD PTR [eax],eax
  431dbe:	adc    al,0x0
  431dc0:	fimul  DWORD PTR ds:0x1c00c7
  431dc6:	fimul  DWORD PTR ds:0x2400c7
  431dcc:	fimul  DWORD PTR ds:0x2c00c7
  431dd2:	fimul  DWORD PTR ds:0x3400c7
  431dd8:	fimul  DWORD PTR ds:0xb900c7
  431dde:	jne    0x431ded
  431de0:	xor    BYTE PTR [eax],al
  431de2:	jno    0x431de9
  431de4:	out    0x11,eax
  431de6:	stc    
  431de7:	add    eax,0x11f60519
  431dec:	test   BYTE PTR [esi],0x31
  431def:	add    DWORD PTR [eax],ecx
  431df1:	adc    dh,BYTE PTR [eax+0x14006900]
  431df7:	adc    bh,bh
  431df9:	push   es
  431dfa:	cdq    
  431dfb:	add    dh,BYTE PTR [ebp+0xd]
  431dfe:	xor    BYTE PTR [eax],al
  431e00:	xor    DWORD PTR [ecx],eax
  431e02:	jne    0x431e11
  431e04:	and    DWORD PTR [eax],eax
  431e06:	xor    DWORD PTR [ecx],eax
  431e08:	mov    edi,0xa9070610
  431e0d:	add    BYTE PTR [esi],ah
  431e0f:	adc    dl,BYTE PTR [ecx]
  431e11:	pop    es
  431e12:	pop    ecx
  431e13:	add    BYTE PTR ds:0x59071712,dh
  431e19:	add    al,BYTE PTR [ebp+0x12]
  431e1c:	push   ds
  431e1d:	pop    es
  431e1e:	pop    ecx
  431e1f:	add    bl,BYTE PTR [eax+0x12]
  431e22:	mov    edi,0x75029900
  431e27:	or     eax,0x590724
  431e2c:	adc    dl,BYTE PTR fs:[ebx]
  431e2f:	add    BYTE PTR [ecx],dh
  431e31:	add    DWORD PTR [esi+0x12],esi
  431e34:	or     DWORD PTR [esi],eax
  431e36:	inc    ecx
  431e37:	add    eax,ebp
  431e39:	or     eax,0x3490021
  431e3e:	mov    esp,0x4900b00d
  431e43:	add    eax,ebp
  431e45:	or     eax,0x34900b5
  431e4a:	ror    DWORD PTR ds:0x4400bf,1
  431e50:	add    al,0xd
  431e52:	ret    
  431e53:	add    BYTE PTR [ecx+0x210d7505],cl
  431e59:	add    BYTE PTR [ecx+0x2],dl
  431e5c:	jne    0x431e6b
  431e5e:	ss push es
  431e60:	mov    DWORD PTR ds:0x75a127d,eax
  431e66:	jno    0x431e6a
  431e68:	call   0x89433f7a
  431e6d:	add    eax,0xed0de8
  431e72:	dec    ecx
  431e73:	add    DWORD PTR [ebp+0xd],esi
  431e76:	jl     0x431e7f
  431e78:	pop    ecx
  431e79:	add    eax,0x210d75
  431e7e:	mov    eax,ds:0x210d7505
  431e83:	add    BYTE PTR [ecx+0x210d7505],dh
  431e89:	add    BYTE PTR [ecx+0x210d7505],dl
  431e8f:	add    BYTE PTR [ecx+0x1],dh
  431e92:	xchg   BYTE PTR [edx],dl
  431e94:	and    DWORD PTR [eax],eax
  431e96:	jno    0x431e9d
  431e98:	nop
  431e99:	adc    ah,BYTE PTR [ecx]
  431e9b:	add    cl,ah
  431e9d:	add    DWORD PTR [esi+0x61078312],ebx
  431ea3:	add    eax,0x78912ac
  431ea8:	jmp    0x905093ae
  431ead:	pop    es
  431eae:	jno    0x431eb5
  431eb0:	mov    edx,0x11079d12
  431eb5:	add    dh,BYTE PTR [ebp+0xd]
  431eb8:	push   esp
  431eb9:	add    dh,BYTE PTR [ecx+0x5]
  431ebc:	ret    
  431ebd:	adc    ah,BYTE PTR [edi+eax*1+0x12d00571]
  431ec4:	xor    BYTE PTR [eax],al
  431ec6:	sbb    DWORD PTR [edx],eax
  431ec8:	jne    0x431ed7
  431eca:	push   esp
  431ecb:	add    dh,BYTE PTR [ecx+0x5]
  431ece:	fst    DWORD PTR [edx]
  431ed0:	stos   DWORD PTR es:[edi],eax
  431ed1:	pop    es
  431ed2:	jno    0x431ed9
  431ed4:	loop   0x431ee8
  431ed6:	dec    ebx
  431ed7:	add    ah,BYTE PTR [ecx+0x5]
  431eda:	out    dx,eax
  431edb:	adc    dh,BYTE PTR [eax]
  431edd:	add    BYTE PTR [ecx+0x5],ah
  431ee0:	clc    
  431ee1:	adc    ch,ch
  431ee3:	add    cl,ah
  431ee5:	add    DWORD PTR [ebx+edx*1],edx
  431ee8:	add    DWORD PTR [edi],0x41
  431eeb:	add    al,0x22
  431eed:	adc    esi,DWORD PTR [edx+0x2c05a107]
  431ef3:	adc    esi,DWORD PTR [edi+0x3605a107]
  431ef9:	adc    edi,DWORD PTR [esi-0x1dfa5ef9]
  431eff:	adc    cl,BYTE PTR [ebx+0x2]
  431f02:	mov    eax,ds:0xed134305
  431f07:	add    BYTE PTR [ecx-0x12ecb0fb],dl
  431f0d:	add    cl,ah
  431f0f:	add    DWORD PTR [ebx+edx*1-0x7d],ebx
  431f13:	pop    es
  431f14:	jno    0x431f1b
  431f16:	adc    ecx,DWORD PTR fs:[ecx-0x10fa6ef9]
  431f1d:	adc    dh,BYTE PTR [eax]
  431f1f:	add    cl,ah
  431f21:	add    DWORD PTR [edx+0x13],esi
  431f24:	add    DWORD PTR [edi],0xffffffb9
  431f27:	add    eax,0x78912ac
  431f2c:	mov    ecx,0xc5137c05
  431f31:	pop    es
  431f32:	mov    cl,0x5
  431f34:	mov    WORD PTR [ebx],ss
  431f36:	in     eax,dx
  431f37:	add    BYTE PTR [ecx-0x12ec65fb],bh
  431f3d:	add    BYTE PTR [ecx+0x4],al
  431f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f41:	adc    ecx,esp
  431f43:	pop    es
  431f44:	mov    cl,0x5
  431f46:	out    dx,eax
  431f47:	adc    dh,BYTE PTR [eax]
  431f49:	add    cl,ah
  431f4b:	add    DWORD PTR [ecx-0x46f82eed],esi
  431f51:	add    eax,0x7891364
  431f56:	sub    DWORD PTR [edx],eax
  431f58:	mov    edx,0xe1078313
  431f5d:	add    esp,ecx
  431f5f:	adc    eax,DWORD PTR [ebx+0x75022107]
  431f65:	or     eax,0x56907da
  431f6a:	(bad)  
  431f6b:	adc    esp,eax
  431f6d:	pop    es
  431f6e:	imul   eax,DWORD PTR ds:0x7e713ee,0x14000589
  431f78:	in     eax,dx
  431f79:	add    BYTE PTR [ecx-0x76ed53fb],cl
  431f7f:	pop    es
  431f80:	mov    DWORD PTR ds:0x7ab140f,eax
  431f86:	jno    0x431f8d
  431f88:	push   ds
  431f89:	adc    al,0xee
  431f8b:	pop    es
  431f8c:	jns    0x431f93
  431f8e:	mov    edi,0x8907f410
  431f93:	add    eax,0x7fb142b
  431f98:	mov    DWORD PTR ds:0x3012ef,eax
  431f9e:	jno    0x431fa1
  431fa0:	xor    al,0x14
  431fa2:	and    DWORD PTR [eax],eax
  431fa4:	jno    0x431fab
  431fa6:	cmp    al,0x14
  431fa8:	in     eax,dx
  431fa9:	add    BYTE PTR [ecx+0x5],dh
  431fac:	dec    ecx
  431fad:	adc    al,0x21
  431faf:	add    BYTE PTR [ecx+0x5],dh
  431fb2:	push   edi
  431fb3:	adc    al,0x5a
  431fb5:	pop    es
  431fb6:	jno    0x431fbd
  431fb8:	fs adc al,0x5a
  431fbb:	pop    es
  431fbc:	leave  
  431fbd:	add    ch,BYTE PTR [esi+0x14]
  431fc0:	dec    ecx
  431fc1:	or     BYTE PTR [ecx],cl
  431fc3:	add    esi,DWORD PTR [ebp+0xd]
  431fc6:	xor    BYTE PTR [eax],al
  431fc8:	adc    DWORD PTR [ebx],eax
  431fca:	jne    0x431fe0
  431fcc:	mov    edi,0x7f00a100
  431fd1:	adc    al,0x4e
  431fd3:	or     cl,dh
  431fd5:	add    al,0xd1
  431fd7:	or     eax,0x23900bf
  431fdc:	xchg   DWORD PTR [ecx+ebx*2],edx
  431fdf:	or     cl,dh
  431fe1:	add    al,0xbb
  431fe3:	adc    DWORD PTR [eax+0x8],esp
  431fe6:	jns    0x431fe8
  431fe8:	xchg   ebp,eax
  431fe9:	adc    al,0x66
  431feb:	or     BYTE PTR [ecx+0x6b14a200],bl
  431ff1:	or     BYTE PTR [ecx],bh
  431ff3:	add    cl,dl
  431ff5:	or     eax,0x4f10872
  431ffa:	mov    ebx,0x39087711
  431fff:	add    esi,DWORD PTR [ebp+0xd]
  432002:	and    DWORD PTR [eax],eax
  432004:	cmp    DWORD PTR [ebx],eax
  432006:	stos   DWORD PTR es:[edi],eax
  432007:	adc    al,0x35
  432009:	add    eax,ecx
  43200b:	add    DWORD PTR [ebp+0xd],esi
  43200e:	and    DWORD PTR [eax],eax
  432010:	leave  
  432011:	add    DWORD PTR [ebp+0xd],esi
  432014:	and    DWORD PTR [eax],eax
  432016:	rol    DWORD PTR [ecx],0xb8
  432019:	adc    al,0x7d
  43201b:	or     BYTE PTR [ecx],cl
  43201d:	add    esi,DWORD PTR [ebp+0x14]
  432020:	mov    edi,0xcb01c900
  432025:	adc    al,0x30
  432027:	add    cl,cl
  432029:	add    ecx,ebx
  43202b:	adc    al,0x30
  43202d:	add    cl,cl
  43202f:	add    esi,esp
  432031:	adc    al,0xed
  432033:	add    cl,cl
  432035:	add    edx,edi
  432037:	adc    al,0xed
  432039:	add    cl,cl
  43203b:	add    DWORD PTR ds:0xc1088315,ecx
  432041:	add    DWORD PTR ds:0xc1088a15,ebx
  432047:	add    DWORD PTR [ebx],ebp
  432049:	adc    eax,0x1c105f9
  43204e:	xor    DWORD PTR ds:0x1c10021,edx
  432054:	sub    edx,DWORD PTR ds:0x590891
  43205a:	cmp    eax,0xb9089915
  43205f:	add    ch,BYTE PTR [esi+0x14]
  432062:	dec    ecx
  432063:	or     BYTE PTR [ecx-0x46eaaffe],bh
  432069:	or     BYTE PTR [ecx+0x0],cl
  43206c:	pusha  
  43206d:	adc    eax,0x35108ca
  432072:	jne    0x432081
  432074:	and    DWORD PTR [eax],eax
  432076:	push   ecx
  432077:	add    ebp,DWORD PTR [eax+0x15]
  43207a:	in     al,dx
  43207b:	or     BYTE PTR [ecx],bh
  43207d:	add    cl,dl
  43207f:	or     eax,0x33901bd
  432084:	ins    DWORD PTR es:[edi],dx
  432085:	adc    eax,0x7907cc
  43208a:	jl     0x4320a1
  43208c:	add    BYTE PTR [ecx],cl
  43208e:	xchg   ecx,eax
  43208f:	add    BYTE PTR [ebx+0x1090515],cl
  432095:	add    eax,0x210d75
  43209a:	add    DWORD PTR ds:0x91d1598,eax
  4320a0:	add    DWORD PTR ds:0xbf0dd1,eax
  4320a6:	rol    DWORD PTR [edx],0x75
  4320a9:	or     eax,0x2c10030
  4320ae:	lahf   
  4320af:	adc    eax,0x2c10948
  4320b4:	scas   al,BYTE PTR es:[edi]
  4320b5:	adc    eax,0x2d9094f
  4320ba:	outs   dx,BYTE PTR ds:[esi]
  4320bb:	adc    DWORD PTR [edi-0x48fb0f00],edi
  4320c1:	adc    eax,0x2d9065c
  4320c6:	rcl    BYTE PTR ds:0x390956,0xd1
  4320cd:	or     eax,0x39095a
  4320d2:	retf   
  4320d3:	adc    eax,0x2f1095f
  4320d8:	pushf  
  4320d9:	adc    DWORD PTR [edi-0x2bfb0f00],edi
  4320df:	adc    eax,0x4f1065c
  4320e4:	rcl    BYTE PTR ds:0x4f100b5,0xdd
  4320eb:	adc    eax,0xc109a1
  4320f0:	jmp    0xa14cc70a
  4320f5:	add    bh,dh
  4320f7:	adc    eax,0x4c909ab
  4320fc:	jne    0x43210b
  4320fe:	and    DWORD PTR [eax],eax
  432100:	mov    cl,0x4
  432102:	sti    
  432103:	adc    eax,0x2e909b0
  432108:	jne    0x432117
  43210a:	ror    BYTE PTR [ecx],cl
  43210c:	jmp    0xdd592813
  432111:	or     ecx,ebp
  432113:	add    al,al
  432115:	adc    eax,0x4c10956
  43211a:	jne    0x432129
  43211c:	and    DWORD PTR [eax],eax
  43211e:	rol    DWORD PTR [ecx+edx*1],0x16
  432122:	loop   0x43212d
  432124:	cdq    
  432125:	add    al,0x75
  432127:	or     eax,0x4c109ec
  43212c:	and    DWORD PTR [esi],edx
  43212e:	loop   0x432139
  432130:	jmp    0xf9595237
  432135:	or     DWORD PTR [ecx+0x1163604],ebx
  43213b:	or     al,BYTE PTR [ecx]
  43213d:	add    edi,DWORD PTR [esi+edx*1]
  432140:	and    DWORD PTR [eax],eax
  432142:	fld    DWORD PTR [edx]
  432144:	jne    0x432153
  432146:	xor    BYTE PTR [eax],al
  432148:	fld    DWORD PTR [edx]
  43214a:	inc    edx
  43214b:	push   ss
  43214c:	and    DWORD PTR [eax],eax
  43214e:	sub    DWORD PTR [ebx],eax
  432150:	dec    ecx
  432151:	push   ss
  432152:	adc    al,0xa
  432154:	sub    DWORD PTR [ebx],eax
  432156:	popa   
  432157:	push   ss
  432158:	sbb    ecx,DWORD PTR [edx]
  43215a:	xor    DWORD PTR [ebx],eax
  43215c:	ror    DWORD PTR ds:0x4f100bf,1
  432162:	mov    ebx,0x990a2e11
  432167:	add    eax,0xa351674
  43216c:	inc    ecx
  43216d:	add    eax,0x1310c3
  432172:	stc    
  432173:	add    al,0x79
  432175:	push   ss
  432176:	fs or  bh,cl
  432179:	add    al,0x82
  43217b:	push   ss
  43217c:	cmp    BYTE PTR [ecx],al
  43217e:	dec    ecx
  43217f:	add    ecx,DWORD PTR [ebx+0x190a7416]
  432185:	add    eax,0xa7a169b
  43218a:	inc    ecx
  43218b:	add    al,0x75
  43218d:	or     eax,0x1810a80
  432192:	test   al,0x16
  432194:	mov    cs,WORD PTR [edx]
  432196:	jns    0x432199
  432198:	jne    0x4321a7
  43219a:	and    DWORD PTR [eax],eax
  43219c:	sub    DWORD PTR [eax],eax
  43219e:	mov    ch,0x16
  4321a0:	stc    
  4321a1:	add    eax,0x16ce0179
  4321a6:	and    DWORD PTR [eax],eax
  4321a8:	push   ecx
  4321a9:	add    bl,dl
  4321ab:	push   ss
  4321ac:	and    eax,0x75001100
  4321b1:	or     eax,0x290636
  4321b6:	out    dx,eax
  4321b7:	push   ss
  4321b8:	sahf   
  4321b9:	or     cl,BYTE PTR [ecx-0x52e903ff]
  4321bf:	or     bh,cl
  4321c1:	add    al,0xa7
  4321c3:	adc    esi,DWORD PTR [ebx+0xd00d90a]
  4321c9:	pop    ss
  4321ca:	mov    ebx,0x1500d90a
  4321cf:	pop    ss
  4321d0:	ret    0xd90a
  4321d3:	add    BYTE PTR ds:0xd90ac917,bl
  4321d9:	add    bl,cl
  4321db:	adc    eax,0xe90ad0
  4321e0:	es pop ss
  4321e2:	xlat   BYTE PTR ds:[ebx]
  4321e3:	or     dh,cl
  4321e5:	add    al,0x30
  4321e7:	pop    ss
  4321e8:	in     eax,0x0
  4321ea:	stc    
  4321eb:	add    al,0x36
  4321ed:	pop    ss
  4321ee:	fs or  dh,cl
  4321f1:	add    al,0x42
  4321f3:	pop    ss
  4321f4:	in     al,dx
  4321f5:	or     bh,cl
  4321f7:	add    dh,BYTE PTR [ebp+0xd]
  4321fa:	dec    ebx
  4321fb:	add    dh,cl
  4321fd:	add    al,0xa9
  4321ff:	adc    esp,edi
  432201:	or     dh,cl
  432203:	add    al,0x49
  432205:	pop    ss
  432206:	add    DWORD PTR [ebx],ecx
  432208:	mov    DWORD PTR [edx],eax
  43220a:	push   ebx
  43220b:	pop    ss
  43220c:	push   es
  43220d:	or     ebx,ecx
  43220f:	add    BYTE PTR [edx-0x3ef4f1ea],al
  432215:	add    BYTE PTR [ecx+0x17],bl
  432218:	adc    al,0xb
  43221a:	add    DWORD PTR [ebx],eax
  43221c:	popa   
  43221d:	pop    ss
  43221e:	mov    ch,0x0
  432220:	test   eax,0x210d7504
  432225:	add    BYTE PTR [ecx],al
  432227:	add    esi,DWORD PTR [ecx]
  432229:	push   ss
  43222a:	stc    
  43222b:	or     ecx,edx
  43222d:	add    al,0x6a
  43222f:	pop    ss
  432230:	push   ecx
  432231:	or     edx,ecx
  432233:	add    al,0x71
  432235:	pop    ss
  432236:	push   ecx
  432237:	or     eax,DWORD PTR [ecx]
  432239:	add    eax,eax
  43223b:	adc    eax,0x2f90956
  432240:	mov    ds:0x1024b10,eax
  432245:	add    edi,DWORD PTR [ecx+0x17]
  432248:	fisttp QWORD PTR [ecx]
  43224a:	rol    DWORD PTR [ecx+eiz*1],1
  43224d:	push   ss
  43224e:	push   edi
  43224f:	or     edi,DWORD PTR [ecx-0x4ae879fc]
  432255:	add    BYTE PTR [ecx-0x4ae866fc],bh
  43225b:	add    BYTE PTR [ecx],al
  43225d:	add    ebp,DWORD PTR [ebp-0x46f6a9e9]
  432263:	add    al,0xba
  432265:	pop    ss
  432266:	pop    ebp
  432267:	or     eax,DWORD PTR [ecx]
  432269:	add    esi,DWORD PTR [esi]
  43226b:	push   ss
  43226c:	add    DWORD PTR [edx],ecx
  43226e:	mov    ecx,0x6817c904
  432273:	or     esi,DWORD PTR [ecx+0x710d7502]
  432279:	or     edi,ecx
  43227b:	add    bl,ch
  43227d:	pop    ss
  43227e:	jnp    0x43228b
  432280:	push   esp
  432281:	add    BYTE PTR [ebp+0xd],dh
  432284:	and    DWORD PTR [eax],eax
  432286:	stc    
  432287:	add    dh,BYTE PTR [ebp+0xd]
  43228a:	cwde   
  43228b:	or     esp,DWORD PTR [ecx-0x60f28afe]
  432291:	or     esp,DWORD PTR [ecx-0x4ae81afe]
  432297:	add    BYTE PTR [eax+eax*1-0x72],dl
  43229b:	adc    BYTE PTR [esi-0x10fca6f5],ah
  4322a1:	pop    ss
  4322a2:	scas   al,BYTE PTR es:[edi]
  4322a3:	or     ebx,DWORD PTR [ecx]
  4322a5:	add    al,0xfa
  4322a7:	pop    ss
  4322a8:	mov    ch,0xb
  4322aa:	sbb    DWORD PTR [ebx],eax
  4322ac:	or     ebx,DWORD PTR [eax]
  4322ae:	out    0xb,eax
  4322b0:	sbb    DWORD PTR [ebx],eax
  4322b2:	sbb    eax,0x10bee18
  4322b7:	add    al,0x31
  4322b9:	sbb    ch,dh
  4322bb:	or     ebx,DWORD PTR [ecx]
  4322bd:	add    eax,0xc011845
  4322c2:	add    DWORD PTR [edi+ecx*2],eax
  4322c5:	sbb    BYTE PTR [ebx],cl
  4322c7:	or     al,0xf1
  4322c9:	add    ebx,DWORD PTR [ebp+0x18]
  4322cc:	mov    ecx,0x9c051900
  4322d1:	adc    DWORD PTR [edi+0x6e03f100],edi
  4322d7:	adc    DWORD PTR [edi-0x44fb0f00],edi
  4322dd:	adc    DWORD PTR [ecx],edx
  4322df:	or     al,0x11
  4322e1:	add    al,0x6f
  4322e3:	sbb    BYTE PTR [ecx+0x7503b100],bh
  4322e9:	or     eax,0x540c19
  4322ee:	jle    0x432308
  4322f0:	sub    DWORD PTR [ecx+esi*4],ecx
  4322f3:	add    ecx,DWORD PTR [edx-0x4ef3cde8]
  4322f9:	add    ebx,DWORD PTR [ebx-0x1ef3c7e8]
  4322ff:	add    esp,DWORD PTR [edx-0x56f8f9ec]
  432305:	add    ebp,DWORD PTR [edx-0x2ef3b5e8]
  43230b:	add    esi,DWORD PTR [edx+0x90c6218]
  432311:	add    al,0xc7
  432313:	sbb    BYTE PTR [eax+0xc],ch
  432316:	pop    esp
  432317:	add    dl,bl
  432319:	sbb    BYTE PTR [ebx+0xc],dh
  43231c:	fs add al,ch
  43231f:	sbb    bh,al
  432321:	add    cl,ch
  432323:	add    esi,esp
  432325:	sbb    BYTE PTR [ecx+0x203e900],bh
  43232b:	sbb    ecx,edi
  43232d:	add    eax,0x190f03d1
  432332:	(bad)  
  432333:	or     al,0x39
  432335:	add    DWORD PTR [ebx],ebx
  432337:	sbb    ecx,edi
  432339:	add    eax,0x192403d1
  43233e:	jnp    0x43234b
  432340:	test   eax,0x51193103
  432345:	or     ebp,DWORD PTR [ecx-0x52e6bcfd]
  43234b:	or     al,0x41
  43234d:	add    esi,DWORD PTR [ebp+0xd]
  432350:	xor    BYTE PTR [eax],al
  432352:	test   eax,0x51194f03
  432357:	or     eax,DWORD PTR [ecx]
  432359:	add    al,0x5d
  43235b:	sbb    edx,eax
  43235d:	or     al,0x1
  43235f:	add    al,0x6b
  432361:	sbb    ecx,edi
  432363:	add    eax,0x19780519
  432368:	stc    
  432369:	add    eax,0x19880519
  43236e:	mov    ecx,0x96042100
  432373:	sbb    DWORD PTR [ecx-0x57fc1f00],edi
  432379:	sbb    eax,ebx
  43237b:	or     al,0xb9
  43237d:	add    esi,DWORD PTR [ecx-0xef322e7]
  432383:	add    edi,DWORD PTR [ebx+0x10ce119]
  432389:	add    al,0xc6
  43238b:	sbb    edi,esp
  43238d:	or     al,0x19
  43238f:	add    eax,0xce719c6
  432394:	rol    DWORD PTR [ebx],0xda
  432397:	sbb    DWORD PTR [eax],edx
  432399:	or     eax,0x19de03b9
  43239e:	adc    eax,0xee04190d
  4323a3:	sbb    DWORD PTR [ebx],ebx
  4323a5:	or     eax,0x194303a9
  4323aa:	cld    
  4323ab:	or     bh,BYTE PTR [ecx-0x4ae603fd]
  4323b1:	add    BYTE PTR [ecx],bl
  4323b3:	add    al,0x5
  4323b5:	sbb    ah,BYTE PTR [eax]
  4323b7:	or     eax,0x194303a9
  4323bc:	es or  eax,0x1a160419
  4323c2:	sub    al,0xd
  4323c4:	add    DWORD PTR [esp],eax
  4323c7:	sbb    bh,BYTE PTR [ebx]
  4323c9:	or     eax,0x1a350519
  4323ce:	inc    ecx
  4323cf:	or     eax,0x194303a9
  4323d4:	inc    edi
  4323d5:	or     eax,0x1a440419
  4323da:	push   ecx
  4323db:	or     eax,0x1a5103e1
  4323e0:	pusha  
  4323e1:	or     eax,0x194303a9
  4323e6:	or     ax,0x419
  4323ea:	popa   
  4323eb:	sbb    ch,BYTE PTR [ebp+0xd]
  4323ee:	sbb    DWORD PTR [ebp*2-0xef283e6],eax
  4323f5:	add    edi,DWORD PTR [ebx+0x1a]
  4323f8:	mov    ecx,DWORD PTR ds:0xd7500d1
  4323fe:	xor    BYTE PTR [eax],al
  432400:	or     BYTE PTR [eax],al
  432402:	js     0x432404
  432404:	push   ecx
  432405:	add    DWORD PTR [eax],ecx
  432407:	add    BYTE PTR [eax+eax*1+0x56],bh
  43240b:	add    DWORD PTR [ecx],ebp
  43240d:	add    BYTE PTR [ebx+0x0],dl
  432410:	inc    eax
  432411:	add    ebp,DWORD PTR [esi]
  432413:	add    BYTE PTR [ebx+0x2e055f00],bl
  432419:	add    BYTE PTR [ebx+0x2e052e00],ah
  43241f:	add    BYTE PTR [ebx+0x2e057700],ch
  432425:	add    BYTE PTR [ebx+0x2e046b00],al
  43242b:	add    BYTE PTR [ebx+0x2e052e00],cl
  432431:	add    BYTE PTR [ebx+0x2e054000],dl
  432437:	add    BYTE PTR [ebx+0x0],dh
  43243a:	imul   eax,DWORD PTR [esi+ebp*1],0x0
  43243e:	rol    DWORD PTR [eax],cl
  432440:	imul   eax,DWORD PTR [esi+ebp*1],0x0
  432444:	cmp    al,BYTE PTR [eax]
  432446:	imul   eax,DWORD PTR [esi+ebp*1],0x0
  43244a:	retf   
  43244b:	add    BYTE PTR [eax-0x4cffd1fb],ah
  432451:	add    BYTE PTR [edi-0x44ffd1fb],al
  432457:	add    BYTE PTR [ebx+0x4],ch
  43245a:	cs add bl,al
  43245d:	add    BYTE PTR [eax+0x23004005],dl
  432463:	add    BYTE PTR [ecx+0x1],dl
  432466:	inc    ebx
  432467:	add    BYTE PTR [ebx+0x0],cl
  43246a:	sbb    eax,0x33004303
  43246f:	add    BYTE PTR [ebx+eax*1],dl
  432472:	dec    ecx
  432473:	add    BYTE PTR [ebx+0x0],dl
  432476:	push   esi
  432477:	add    esp,DWORD PTR [eax+0x0]
  43247a:	sub    eax,DWORD PTR [eax]
  43247c:	push   ecx
  43247d:	add    DWORD PTR [ecx+0x0],ebp
  432480:	push   ebx
  432481:	add    BYTE PTR [edi+0x3],ch
  432484:	add    BYTE PTR [eax],0x23
  432487:	add    BYTE PTR [ecx+0x1],dl
  43248a:	add    DWORD PTR [eax],0x4b
  43248d:	add    BYTE PTR ds:0x33008303,bl
  432493:	add    BYTE PTR [ebx+eax*1],dl
  432496:	mov    DWORD PTR [eax],eax
  432498:	push   ebx
  432499:	add    BYTE PTR [ecx+0x4300a003],al
  43249f:	add    BYTE PTR [ecx+0x1],dl
  4324a2:	mov    al,ds:0x51003b00
  4324a7:	add    DWORD PTR [eax+0x4003300],esp
  4324ad:	add    ebp,DWORD PTR [ecx-0x6bffad00]
  4324b3:	add    eax,eax
  4324b5:	add    BYTE PTR [ebx],ch
  4324b7:	add    BYTE PTR [ecx+0x1],dl
  4324ba:	ret    
  4324bb:	add    BYTE PTR [ebx+0x0],bl
  4324be:	push   ecx
  4324bf:	add    ebx,eax
  4324c1:	add    BYTE PTR [ebx+0x0],ah
  4324c4:	push   ecx
  4324c5:	add    ebx,eax
  4324c7:	add    BYTE PTR [ebx+0x0],cl
  4324ca:	sbb    eax,0x3300c903
  4324cf:	add    BYTE PTR [ebx+eax*1],al
  4324d2:	jecxz  0x4324d4
  4324d4:	imul   eax,DWORD PTR [eax],0xffffffa8
  4324d7:	add    esp,ebx
  4324d9:	add    BYTE PTR [ebx],dh
  4324db:	add    BYTE PTR [ebx+eax*1],dl
  4324de:	jmp    0x44357e3
  4324e3:	add    eax,DWORD PTR [eax]
  4324e5:	add    DWORD PTR [ebx+0x0],eax
  4324e8:	push   ecx
  4324e9:	add    DWORD PTR [eax],eax
  4324eb:	add    DWORD PTR [ebx],esi
  4324ed:	add    BYTE PTR [ebx+eax*1],dl
  4324f0:	add    eax,DWORD PTR [ecx]
  4324f2:	xor    eax,DWORD PTR [eax]
  4324f4:	adc    al,0x3
  4324f6:	add    eax,DWORD PTR [ecx]
  4324f8:	imul   eax,DWORD PTR [eax],0x9
  4324fb:	add    al,0x21
  4324fd:	add    DWORD PTR [ebx],ecx
  4324ff:	add    BYTE PTR [ecx+0x1],dl
  432502:	and    eax,DWORD PTR [ecx]
  432504:	jae    0x432506
  432506:	imul   eax,DWORD PTR [ebx+eiz*1],0x1
  43250a:	xor    eax,DWORD PTR [eax]
  43250c:	adc    al,0x3
  43250e:	sub    DWORD PTR [ecx],eax
  432510:	push   ebx
  432511:	add    BYTE PTR ds:0x13014105,bl
  432517:	add    BYTE PTR [ecx+0x1],dl
  43251a:	inc    ecx
  43251b:	add    DWORD PTR [ebx],ecx
  43251d:	add    BYTE PTR [ecx+0x1],dl
  432520:	inc    ebx
  432521:	add    DWORD PTR [ebx+0x0],edi
  432524:	push   ecx
  432525:	add    DWORD PTR [ecx+0x5a001b01],esp
  43252b:	add    ah,BYTE PTR [ebx+0x51002301]
  432531:	add    DWORD PTR [ebx+0x51005b01],esp
  432537:	add    DWORD PTR [ebx+0x51001301],esp
  43253d:	add    DWORD PTR [ebx+0x51006301],esp
  432543:	add    DWORD PTR [ebx+0x7d004b01],esp
  432549:	add    al,0xc1
  43254b:	add    DWORD PTR [ebx],ebx
  43254d:	add    BYTE PTR [edi+0x2],ah
  432550:	ret    
  432551:	add    DWORD PTR [ebx],edx
  432553:	add    BYTE PTR [ecx+0x1],dl
  432556:	ret    
  432557:	add    DWORD PTR [ebx],esi
  432559:	add    BYTE PTR [ebx+eax*1],al
  43255c:	ret    
  43255d:	add    DWORD PTR [ebx+0x0],ecx
  432560:	ret    
  432561:	add    al,0xe0
  432563:	add    DWORD PTR [ebx],esp
  432565:	add    BYTE PTR [ecx+0x1],dl
  432568:	loope  0x43256b
  43256a:	sbb    eax,DWORD PTR [eax]
  43256c:	je     0x432570
  43256e:	add    BYTE PTR [edx],al
  432570:	inc    ebx
  432571:	add    BYTE PTR [ecx+0x1],dl
  432574:	add    DWORD PTR [edx],eax
  432576:	sbb    eax,DWORD PTR [eax]
  432578:	test   DWORD PTR [edx],eax
  43257a:	add    eax,DWORD PTR [edx]
  43257c:	arpl   WORD PTR [eax],ax
  43257e:	push   ecx
  43257f:	add    DWORD PTR [ebx],eax
  432581:	add    ah,BYTE PTR [ebx]
  432583:	add    BYTE PTR [ecx+0x1],dl
  432586:	add    eax,DWORD PTR [edx]
  432588:	pop    ebx
  432589:	add    BYTE PTR [ecx+0x1],dl
  43258c:	add    eax,DWORD PTR [edx]
  43258e:	adc    eax,DWORD PTR [eax]
  432590:	push   ecx
  432591:	add    DWORD PTR [eax],esp
  432593:	add    al,BYTE PTR [ebx+0x0]
  432596:	push   ecx
  432597:	add    DWORD PTR [ecx],esp
  432599:	add    bl,BYTE PTR [ebx]
  43259b:	add    BYTE PTR [ebx+0x43024002],dl
  4325a1:	add    BYTE PTR [ecx+0x1],dl
  4325a4:	inc    ecx
  4325a5:	add    bl,BYTE PTR [ebx]
  4325a7:	add    BYTE PTR [edi+0x43026002],bl
  4325ad:	add    BYTE PTR [ecx+0x1],dl
  4325b0:	popa   
  4325b1:	add    bl,BYTE PTR [ebx]
  4325b3:	add    BYTE PTR [ebp+0x43028002],ch
  4325b9:	add    BYTE PTR [ecx+0x1],dl
  4325bc:	add    DWORD PTR [edx],0x2be001b
  4325c2:	mov    al,ds:0x51004302
  4325c7:	add    DWORD PTR [eax+0x14003302],esp
  4325cd:	add    esp,DWORD PTR [ecx-0x33ffe4fe]
  4325d3:	add    al,al
  4325d5:	add    ah,BYTE PTR [ebx]
  4325d7:	add    BYTE PTR [ecx+0x1],dl
  4325da:	rol    DWORD PTR [edx],0x1b
  4325dd:	add    dl,bl
  4325df:	add    ah,al
  4325e1:	add    ah,BYTE PTR [ebx]
  4325e3:	add    BYTE PTR [ecx+0x1],dl
  4325e6:	loope  0x4325ea
  4325e8:	sbb    eax,DWORD PTR [eax]
  4325ea:	call   0x434625f1
  4325ef:	add    BYTE PTR [ecx+0x1],dl
  4325f2:	add    DWORD PTR [ebx],eax
  4325f4:	sbb    eax,DWORD PTR [eax]
  4325f6:	test   BYTE PTR [edx],0x20
  4325f9:	add    eax,DWORD PTR [ebx+0x0]
  4325fc:	push   ecx
  4325fd:	add    DWORD PTR [eax+0x3],eax
  432600:	xor    eax,DWORD PTR [eax]
  432602:	adc    al,0x3
  432604:	pusha  
  432605:	add    esi,DWORD PTR [ebx]
  432607:	add    BYTE PTR [ebx+eax*1],dl
  43260a:	add    BYTE PTR [ebx],0x33
  43260d:	add    BYTE PTR [ebx+eax*1],dl
  432610:	mov    al,ds:0x14003303
  432615:	add    eax,eax
  432617:	add    eax,DWORD PTR [ebx+0x0]
  43261a:	push   ecx
  43261b:	add    eax,eax
  43261d:	add    esi,DWORD PTR [ebx]
  43261f:	add    BYTE PTR [ebx+eax*1],dl
  432622:	loopne 0x432627
  432624:	xor    eax,DWORD PTR [eax]
  432626:	adc    al,0x3
  432628:	loopne 0x43262d
  43262a:	inc    ebx
  43262b:	add    BYTE PTR [ecx+0x1],dl
  43262e:	add    BYTE PTR [ebx+esi*1],al
  432631:	add    BYTE PTR [ebx+eax*1],dl
  432634:	add    BYTE PTR [ebx+eax*2],al
  432637:	add    BYTE PTR [ecx+0x1],dl
  43263a:	and    BYTE PTR [ebx+esi*1],al
  43263d:	add    BYTE PTR [ebx+eax*1],dl
  432640:	and    BYTE PTR [ebx+eax*2],al
  432643:	add    BYTE PTR [ecx+0x1],dl
  432646:	inc    eax
  432647:	add    al,0x33
  432649:	add    BYTE PTR [ebx+eax*1],dl
  43264c:	inc    eax
  43264d:	add    al,0x43
  43264f:	add    BYTE PTR [ecx+0x1],dl
  432652:	pusha  
  432653:	add    al,0x43
  432655:	add    BYTE PTR [ecx+0x1],dl
  432658:	add    BYTE PTR [ebx+eax*2],0x0
  43265c:	push   ecx
  43265d:	add    DWORD PTR [eax+0x14003304],esp
  432663:	add    esp,DWORD PTR [eax+0x51004304]
  432669:	add    eax,eax
  43266b:	add    al,0x43
  43266d:	add    BYTE PTR [ecx+0x1],dl
  432670:	loopne 0x432676
  432672:	and    eax,DWORD PTR [eax]
  432674:	push   ecx
  432675:	add    DWORD PTR [eax],eax
  432677:	add    eax,0x1510023
  43267c:	and    BYTE PTR ds:0x1510023,al
  432682:	inc    eax
  432683:	add    eax,0x1510023
  432688:	pusha  
  432689:	add    eax,0x151002b
  43268e:	add    BYTE PTR ds:0x1510023,0xa0
  432695:	add    eax,0x1510023
  43269a:	rol    BYTE PTR ds:0x1510023,0xe0
  4326a1:	add    eax,0x1510023
  4326a6:	add    BYTE PTR [esi],al
  4326a8:	and    eax,DWORD PTR [eax]
  4326aa:	push   ecx
  4326ab:	add    DWORD PTR [eax],esp
  4326ad:	push   es
  4326ae:	and    eax,DWORD PTR [eax]
  4326b0:	push   ecx
  4326b1:	add    DWORD PTR [eax+0x6],eax
  4326b4:	and    eax,DWORD PTR [eax]
  4326b6:	push   ecx
  4326b7:	add    DWORD PTR [eax+0x6],esp
  4326ba:	and    eax,DWORD PTR [eax]
  4326bc:	push   ecx
  4326bd:	add    DWORD PTR [eax+0x51002306],eax
  4326c3:	add    DWORD PTR [eax+0x51002306],esp
  4326c9:	add    eax,eax
  4326cb:	push   es
  4326cc:	and    eax,DWORD PTR [eax]
  4326ce:	push   ecx
  4326cf:	add    eax,esp
  4326d1:	push   es
  4326d2:	and    eax,DWORD PTR [eax]
  4326d4:	push   ecx
  4326d5:	add    DWORD PTR [eax],eax
  4326d7:	pop    es
  4326d8:	and    eax,DWORD PTR [eax]
  4326da:	push   ecx
  4326db:	add    DWORD PTR [eax],esp
  4326dd:	pop    es
  4326de:	and    eax,DWORD PTR [eax]
  4326e0:	push   ecx
  4326e1:	add    DWORD PTR [eax+0x7],eax
  4326e4:	and    eax,DWORD PTR [eax]
  4326e6:	push   ecx
  4326e7:	add    DWORD PTR [eax+0x7],esp
  4326ea:	and    eax,DWORD PTR [eax]
  4326ec:	push   ecx
  4326ed:	add    DWORD PTR [eax+0x51002307],eax
  4326f3:	add    DWORD PTR [eax+0x51002307],esp
  4326f9:	add    eax,eax
  4326fb:	pop    es
  4326fc:	and    eax,DWORD PTR [eax]
  4326fe:	push   ecx
  4326ff:	add    eax,esp
  432701:	pop    es
  432702:	and    eax,DWORD PTR [eax]
  432704:	push   ecx
  432705:	add    DWORD PTR [eax],eax
  432707:	or     BYTE PTR [ebx],ah
  432709:	add    BYTE PTR [ecx+0x1],dl
  43270c:	and    BYTE PTR [eax],cl
  43270e:	and    eax,DWORD PTR [eax]
  432710:	push   ecx
  432711:	add    DWORD PTR [eax+0x8],eax
  432714:	and    eax,DWORD PTR [eax]
  432716:	push   ecx
  432717:	add    DWORD PTR [eax+0x8],esp
  43271a:	and    eax,DWORD PTR [eax]
  43271c:	push   ecx
  43271d:	add    DWORD PTR [eax+0xa],esp
  432720:	and    eax,DWORD PTR [eax]
  432722:	push   ecx
  432723:	add    DWORD PTR [eax+0xb],esp
  432726:	and    eax,DWORD PTR [eax]
  432728:	push   ecx
  432729:	add    DWORD PTR [eax+0x5100230b],eax
  43272f:	add    DWORD PTR [eax+0x400330b],eax
  432735:	add    ebx,edi
  432737:	add    eax,0x650062a
  43273c:	jo     0x432744
  43273e:	xchg   BYTE PTR [esi],al
  432740:	mov    esi,0xc806c306
  432745:	push   es
  432746:	int    0x6
  432748:	rol    BYTE PTR [esi],cl
  43274a:	xlat   BYTE PTR ds:[ebx]
  43274b:	push   es
  43274c:	loope  0x432754
  43274e:	in     eax,0x6
  432750:	sub    al,0x7
  432752:	xor    DWORD PTR [edi],eax
  432754:	xor    eax,0x3f073b07
  432759:	pop    es
  43275a:	inc    ebp
  43275b:	pop    es
  43275c:	popa   
  43275d:	pop    es
  43275e:	add    cl,BYTE PTR [eax]
  432760:	or     BYTE PTR [eax],cl
  432762:	invd   
  432764:	adc    eax,0x21081b08
  432769:	or     BYTE PTR [eax-0x3ff753f8],ah
  43276f:	or     ch,bl
  432771:	or     dl,dh
  432773:	or     BYTE PTR [ecx+ecx*1],cl
  432776:	and    al,0x9
  432778:	or     DWORD PTR fs:[ecx+0x909b709],ecx
  43277f:	or     ah,BYTE PTR [ecx]
  432781:	or     bh,BYTE PTR [edx+ecx*1]
  432784:	dec    edx
  432785:	or     dl,BYTE PTR [esi+0xa]
  432788:	push   0xa
  43278a:	mov    BYTE PTR [edx],cl
  43278c:	xchg   edi,eax
  43278d:	or     ah,BYTE PTR [edx+ecx*1+0xae70ae2]
  432794:	icebp  
  432795:	or     bl,BYTE PTR [edx]
  432797:	or     esp,DWORD PTR [eax]
  432799:	or     esp,DWORD PTR ds:0xbb0b800b
  43279f:	or     eax,DWORD PTR [ecx+0xc]
  4327a2:	push   ecx
  4327a3:	or     al,0x97
  4327a5:	or     al,0xb4
  4327a7:	or     al,0xc9
  4327a9:	or     al,0xee
  4327ab:	or     al,0x6
  4327ad:	add    BYTE PTR [ecx],al
  4327af:	add    BYTE PTR ds:0xe000600,cl
  4327b5:	add    BYTE PTR [eax],cl
  4327b7:	add    BYTE PTR [eax],dl
  4327b9:	add    BYTE PTR [ecx],cl
  4327bb:	add    BYTE PTR [eax],al
  4327bd:	add    BYTE PTR [edx],ah
  4327bf:	or     eax,0x33b
  4327c4:	ds or  eax,0x351
  4327ca:	inc    esi
  4327cb:	or     eax,0x36a
  4327d0:	fs or  eax,0x37c
  4327d6:	push   0x38f0d
  4327db:	add    BYTE PTR [edx+0x47109],bl
  4327e1:	add    ah,ch
  4327e3:	emms   
  4327e5:	add    al,0x0
  4327e7:	add    ah,dh
  4327e9:	movsx  eax,BYTE PTR [eax+eax*1]
  4327ed:	add    ah,bh
  4327ef:	movsx  eax,BYTE PTR [edx+eax*1]
  4327f3:	add    BYTE PTR [eax],dl
  4327f5:	add    BYTE PTR [ebx],al
  4327f7:	add    BYTE PTR [edx],al
  4327f9:	add    BYTE PTR [ecx],dl
  4327fb:	add    BYTE PTR ds:0x12000200,al
  432801:	add    BYTE PTR [edi],al
  432803:	add    BYTE PTR [edx],al
  432805:	add    BYTE PTR [ebx],dl
  432807:	add    BYTE PTR [ecx],cl
  432809:	add    BYTE PTR [edx],al
  43280b:	add    BYTE PTR [eax+eax*1],dl
  43280e:	or     eax,DWORD PTR [eax]
  432810:	add    al,BYTE PTR [eax]
  432812:	push   edi
  432813:	add    BYTE PTR ds:0x59000100,cl
  432819:	add    BYTE PTR [edi],cl
  43281b:	add    BYTE PTR [edx],al
  43281d:	add    BYTE PTR [eax+0x0],bl
  432820:	sldt   WORD PTR [edx]
  432823:	add    BYTE PTR [ebp+0x0],bl
  432826:	adc    DWORD PTR [eax],eax
  432828:	add    al,BYTE PTR [eax]
  43282a:	add    BYTE PTR gs:[ebx],dl
  43282d:	add    dl,cl
  43282f:	add    eax,0x6a2069b
  432834:	test   eax,0xb706b006
  432839:	push   es
  43283a:	repz push es
  43283c:	dec    ebx
  43283d:	pop    es
  43283e:	push   edx
  43283f:	pop    es
  432840:	nop
  432841:	or     edi,DWORD PTR [ebp+0xc]
  432844:	xchg   BYTE PTR [esp+eax*1],cl
  432847:	add    BYTE PTR [eax],0x0
  43284a:	add    eax,DWORD PTR [eax]
  43284c:	pop    ss
  43284d:	add    BYTE PTR [eax+eax*1],cl
  432850:	or     al,0x0
  432852:	add    BYTE PTR [eax],al
  432854:	add    BYTE PTR [eax],al
  432856:	add    BYTE PTR [eax],al
  432858:	add    DWORD PTR [eax],eax
  43285a:	add    BYTE PTR [eax],al
  43285c:	add    al,BYTE PTR [eax]
	...
  432866:	add    BYTE PTR [eax],al
  432868:	add    DWORD PTR [eax],eax
  43286a:	pop    ds
  43286b:	add    BYTE PTR [eax],al
  43286d:	add    BYTE PTR [eax],al
  43286f:	add    BYTE PTR [eax],cl
	...
  432879:	add    BYTE PTR [eax],al
  43287b:	add    BYTE PTR [edx],cl
  43287d:	add    BYTE PTR [eax],ch
  43287f:	add    BYTE PTR [eax],al
  432881:	add    BYTE PTR [eax],al
  432883:	add    BYTE PTR [edx],al
	...
  43288d:	add    BYTE PTR [eax],al
  43288f:	add    BYTE PTR [ecx],al
  432891:	add    BYTE PTR [esi],bh
  432893:	add    BYTE PTR [eax],al
  432895:	add    BYTE PTR [eax],al
  432897:	add    BYTE PTR [edx],al
	...
  4328a1:	add    BYTE PTR [eax],al
  4328a3:	add    BYTE PTR [ecx],al
  4328a5:	add    BYTE PTR [ebx+0x0],dl
  4328a8:	add    BYTE PTR [eax],al
  4328aa:	add    BYTE PTR [eax],al
  4328ac:	add    al,BYTE PTR [eax]
	...
  4328b6:	add    BYTE PTR [eax],al
  4328b8:	or     al,BYTE PTR [eax]
  4328ba:	pop    edx
	...
  4328c3:	add    BYTE PTR [ecx],al
  4328c5:	add    BYTE PTR [eax],al
  4328c7:	add    BYTE PTR [ecx+0x0],ch
  4328ca:	add    BYTE PTR [eax],al
  4328cc:	pop    es
  4328cd:	add    BYTE PTR [esi],al
  4328cf:	add    BYTE PTR [eax],cl
  4328d1:	add    BYTE PTR [esi],al
  4328d3:	add    BYTE PTR [ecx],cl
  4328d5:	add    BYTE PTR [esi],al
  4328d7:	add    BYTE PTR [ebx],cl
  4328d9:	add    BYTE PTR [edx],cl
  4328db:	add    BYTE PTR [eax+eax*1],cl
  4328de:	or     al,BYTE PTR [eax]
  4328e0:	adc    al,0x0
  4328e2:	adc    eax,DWORD PTR [eax]
  4328e4:	add    BYTE PTR [eax],al
  4328e6:	adc    BYTE PTR [eax],al
  4328e8:	adc    al,BYTE PTR [eax]
  4328ea:	push   es
  4328eb:	or     eax,0x100000
  4328f0:	xor    DWORD PTR [eax],eax
  4328f2:	push   es
  4328f3:	or     eax,0x0
  4328f8:	xor    eax,DWORD PTR [eax]
  4328fa:	push   es
  4328fb:	or     eax,0x100000
  432900:	inc    edi
  432901:	add    BYTE PTR [esi],al
  432903:	or     eax,0x0
  432908:	dec    ecx
  432909:	add    BYTE PTR [esi],al
  43290b:	or     eax,0x6dc0030
  432910:	xor    al,BYTE PTR [eax]
  432912:	fadd   QWORD PTR [esi]
  432914:	lods   eax,DWORD PTR ds:[esi]
  432915:	add    BYTE PTR [edi+eax*1],cl
  432918:	lods   eax,DWORD PTR ds:[esi]
  432919:	add    BYTE PTR [ebp+0x7],dl
  43291c:	add    al,BYTE PTR [eax]
  43291e:	lds    eax,FWORD PTR [edx]
  432920:	add    eax,DWORD PTR [eax]
  432922:	lds    eax,FWORD PTR [edx]
  432924:	add    BYTE PTR [ecx+eiz*2+0x73],dl
  432928:	imul   esp,DWORD PTR [eax],0x4d
  43292b:	popa   
  43292c:	outs   dx,BYTE PTR ds:[esi]
  43292d:	popa   
  43292e:	addr16 gs jb 0x432932
  432932:	push   esp
  432933:	popa   
  432934:	jae    0x4329a1
  432936:	and    BYTE PTR [ebp+0x61],cl
  432939:	outs   dx,BYTE PTR ds:[esi]
  43293a:	popa   
  43293b:	addr16 gs jb 0x43296d
  43293f:	gs js  0x4329a7
  432942:	add    BYTE PTR [ebp+0x73],ch
  432945:	arpl   WORD PTR [edi+0x72],bp
  432948:	ins    BYTE PTR es:[edi],dx
  432949:	imul   esp,DWORD PTR [edx+0x0],0x7263694d
  432950:	outs   dx,DWORD PTR ds:[esi]
  432951:	jae    0x4329c2
  432953:	data16 je 0x432984
  432956:	push   esi
  432957:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  43295e:	jae    0x4329c9
  432960:	arpl   WORD PTR [eax],ax
  432962:	push   ebx
  432963:	jns    0x4329d8
  432965:	je     0x4329cc
  432967:	ins    DWORD PTR es:[edi],dx
  432968:	cs push edi
  43296a:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  432971:	inc    esi
  432972:	outs   dx,DWORD PTR ds:[esi]
  432973:	jb     0x4329e2
  432975:	jae    0x432977
  432977:	push   ebx
  432978:	jns    0x4329ed
  43297a:	je     0x4329e1
  43297c:	ins    DWORD PTR es:[edi],dx
  43297d:	add    BYTE PTR [ebx+0x79],dl
  432980:	jae    0x4329f6
  432982:	gs ins DWORD PTR es:[edi],dx
  432984:	cs inc esp
  432986:	jb     0x4329e9
  432988:	ja     0x4329f3
  43298a:	outs   dx,BYTE PTR ds:[esi]
  43298b:	add    BYTE PTR [si+0x61],dl
  43298f:	jae    0x4329fc
  432991:	and    BYTE PTR [ebp+0x61],cl
  432994:	outs   dx,BYTE PTR ds:[esi]
  432995:	popa   
  432996:	addr16 gs jb 0x4329c0
  43299a:	add    BYTE PTR [ecx+0x75],al
  43299d:	je     0x432a07
  43299f:	outs   dx,BYTE PTR gs:[esi]
  4329a1:	je     0x432a0c
  4329a3:	arpl   WORD PTR [ecx+0x74],sp
  4329a6:	imul   ebp,DWORD PTR [edi+0x6e],0x65646f4d
  4329ad:	add    BYTE PTR [ebp+0x69],cl
  4329b0:	arpl   WORD PTR [edx+0x6f],si
  4329b3:	jae    0x432a24
  4329b5:	data16 je 0x4329e6
  4329b8:	push   esi
  4329b9:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  4329c0:	jae    0x432a2b
  4329c2:	arpl   WORD PTR [esi],bp
  4329c4:	inc    ecx
  4329c5:	jo     0x432a37
  4329c7:	ins    BYTE PTR es:[edi],dx
  4329c8:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4329cf:	push   ebx
  4329d0:	gs jb  0x432a49
  4329d3:	imul   esp,DWORD PTR [ebx+0x65],0x68530073
  4329da:	jne    0x432a50
  4329dc:	outs   dx,DWORD PTR fs:[esi]
  4329de:	ja     0x432a4e
  4329e0:	inc    ebp
  4329e1:	jbe    0x432a48
  4329e3:	outs   dx,BYTE PTR ds:[esi]
  4329e4:	je     0x432a2e
  4329e6:	popa   
  4329e7:	outs   dx,BYTE PTR ds:[esi]
  4329e8:	fs ins BYTE PTR es:[edi],dx
  4329ea:	gs jb  0x4329ed
  4329ed:	push   ebx
  4329ee:	push   0x6f647475
  4329f3:	ja     0x432a63
  4329f5:	dec    ebp
  4329f6:	outs   dx,DWORD PTR ds:[esi]
  4329f7:	fs add BYTE PTR gs:[ebp+0x73],dl
  4329fc:	gs jb  0x4329ff
  4329ff:	push   edi
  432a00:	imul   ebp,DWORD PTR [esi+0x64],0x4673776f
  432a07:	outs   dx,DWORD PTR ds:[esi]
  432a08:	jb     0x432a77
  432a0a:	jae    0x432a4d
  432a0c:	jo     0x432a7e
  432a0e:	ins    BYTE PTR es:[edi],dx
  432a0f:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  432a16:	inc    edx
  432a17:	popa   
  432a18:	jae    0x432a7f
  432a1a:	add    BYTE PTR [ebx+0x6f],al
  432a1d:	ins    DWORD PTR es:[edi],dx
  432a1e:	jo     0x432a81
  432a20:	jb     0x432a87
  432a22:	dec    ebp
  432a23:	gs je  0x432a8e
  432a26:	outs   dx,DWORD PTR ds:[esi]
  432a27:	add    BYTE PTR fs:[ebx+0x6f],al
  432a2b:	outs   dx,BYTE PTR ds:[esi]
  432a2c:	jbe    0x432a93
  432a2e:	jb     0x432aa3
  432a30:	imul   ebp,DWORD PTR [edi+0x6e],0x694d0073
  432a37:	arpl   WORD PTR [edx+0x6f],si
  432a3a:	jae    0x432aab
  432a3c:	data16 je 0x432a6d
  432a3f:	push   esi
  432a40:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432a47:	jae    0x432ab2
  432a49:	arpl   WORD PTR [esi],bp
  432a4b:	inc    ebx
  432a4c:	outs   dx,DWORD PTR ds:[esi]
  432a4d:	ins    DWORD PTR es:[edi],dx
  432a4e:	jo     0x432ab9
  432a50:	ins    BYTE PTR es:[edi],dx
  432a51:	gs jb  0x432aa7
  432a54:	gs jb  0x432acd
  432a57:	imul   esp,DWORD PTR [ebx+0x65],0x65440073
  432a5e:	jae    0x432ac9
  432a60:	outs   dx,BYTE PTR ds:[si]
  432a62:	gs jb  0x432aac
  432a65:	outs   dx,BYTE PTR gs:[esi]
  432a67:	gs jb  0x432acb
  432a6a:	je     0x432ad1
  432a6c:	fs inc ecx
  432a6e:	je     0x432ae4
  432a70:	jb     0x432adb
  432a72:	bound  esi,QWORD PTR [ebp+0x74]
  432a75:	add    BYTE PTR gs:[esi+0x65],cl
  432a79:	ja     0x432ac7
  432a7b:	popa   
  432a7c:	je     0x432ae3
  432a7e:	inc    edx
  432a7f:	imul   ebp,DWORD PTR [esi+0x64],0x676e69
  432a86:	dec    edi
  432a87:	bound  ebp,QWORD PTR [edx+0x65]
  432a8a:	arpl   WORD PTR [esi+eax*2+0x6c],si
  432a8e:	outs   dx,DWORD PTR ds:[esi]
  432a8f:	ja     0x432ad4
  432a91:	outs   dx,DWORD PTR ds:[esi]
  432a92:	outs   dx,BYTE PTR ds:[esi]
  432a93:	je     0x432b07
  432a95:	outs   dx,DWORD PTR ds:[esi]
  432a96:	ins    BYTE PTR es:[edi],dx
  432a97:	add    BYTE PTR [eax+0x72],dl
  432a9a:	outs   dx,DWORD PTR ds:[esi]
  432a9b:	push   0x65
  432a9d:	arpl   WORD PTR [esp+eax*2+0x61],si
  432aa1:	je     0x432b04
  432aa3:	add    BYTE PTR [ebx+0x74],dl
  432aa6:	popa   
  432aa7:	outs   dx,BYTE PTR ds:[esi]
  432aa8:	fs popa 
  432aaa:	jb     0x432b10
  432aac:	dec    ebp
  432aad:	outs   dx,DWORD PTR ds:[esi]
  432aae:	fs jne 0x432b1d
  432ab1:	gs inc ecx
  432ab3:	je     0x432b29
  432ab5:	jb     0x432b20
  432ab7:	bound  esi,QWORD PTR [ebp+0x74]
  432aba:	add    BYTE PTR gs:[ebp+0x74],dl
  432abe:	imul   ebp,DWORD PTR [ebx+esi*2+0x0],0x706d6f43
  432ac6:	jne    0x432b3c
  432ac8:	gs jb  0x432acb
  432acb:	dec    ebp
  432acc:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  432ad3:	je     0x432b03
  432ad5:	push   esi
  432ad6:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432add:	jae    0x432b48
  432adf:	arpl   WORD PTR [esi],bp
  432ae1:	inc    esp
  432ae2:	gs jbe 0x432b4e
  432ae5:	arpl   WORD PTR [ebp+0x73],sp
  432ae8:	add    BYTE PTR [ebx+0x65],dl
  432aeb:	jb     0x432b63
  432aed:	gs jb  0x432b33
  432af0:	outs   dx,DWORD PTR ds:[esi]
  432af1:	ins    DWORD PTR es:[edi],dx
  432af2:	jo     0x432b69
  432af4:	je     0x432b5b
  432af6:	jb     0x432af8
  432af8:	dec    eax
  432af9:	imul   esp,DWORD PTR [ebp+eiz*2+0x4d],0x6c75646f
  432b01:	gs dec esi
  432b03:	popa   
  432b04:	ins    DWORD PTR es:[edi],dx
  432b05:	gs inc ecx
  432b07:	je     0x432b7d
  432b09:	jb     0x432b74
  432b0b:	bound  esi,QWORD PTR [ebp+0x74]
  432b0e:	add    BYTE PTR gs:[ebp+0x79],cl
  432b12:	inc    edi
  432b13:	jb     0x432b84
  432b15:	jne    0x432b87
  432b17:	inc    ebx
  432b18:	outs   dx,DWORD PTR ds:[esi]
  432b19:	ins    BYTE PTR es:[edi],dx
  432b1a:	ins    BYTE PTR es:[edi],dx
  432b1b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  432b20:	outs   dx,BYTE PTR ds:[esi]
  432b21:	inc    ecx
  432b22:	je     0x432b98
  432b24:	jb     0x432b8f
  432b26:	bound  esi,QWORD PTR [ebp+0x74]
  432b29:	add    BYTE PTR gs:[esi+0x69],al
  432b2d:	ins    BYTE PTR es:[edi],dx
  432b2e:	gs push ebx
  432b30:	jns    0x432ba5
  432b32:	je     0x432b99
  432b34:	ins    DWORD PTR es:[edi],dx
  432b35:	push   eax
  432b36:	jb     0x432ba7
  432b38:	js     0x432bb3
  432b3a:	add    BYTE PTR [ebp+0x69],cl
  432b3d:	arpl   WORD PTR [edx+0x6f],si
  432b40:	jae    0x432bb1
  432b42:	data16 je 0x432b73
  432b45:	push   esi
  432b46:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432b4d:	jae    0x432bb8
  432b4f:	arpl   WORD PTR [esi],bp
  432b51:	dec    ebp
  432b52:	jns    0x432ba7
  432b54:	gs jb  0x432bcd
  432b57:	imul   esp,DWORD PTR [ebx+0x65],0x65520073
  432b5e:	imul   esi,DWORD PTR [bp+di+0x74],0x72507972
  432b66:	outs   dx,DWORD PTR ds:[esi]
  432b67:	js     0x432be2
  432b69:	add    BYTE PTR [ebx+0x74],dl
  432b6c:	jb     0x432bd7
  432b6e:	outs   dx,BYTE PTR ds:[esi]
  432b6f:	addr16 jae 0x432b72
  432b72:	inc    ecx
  432b73:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  432b77:	popa   
  432b78:	je     0x432be9
  432b7a:	jb     0x432b7c
  432b7c:	inc    ecx
  432b7d:	jo     0x432bef
  432b7f:	inc    esp
  432b80:	outs   dx,DWORD PTR ds:[esi]
  432b81:	ins    DWORD PTR es:[edi],dx
  432b82:	popa   
  432b83:	imul   ebp,DWORD PTR [esi+0x0],0x75677241
  432b8a:	ins    DWORD PTR es:[edi],dx
  432b8b:	outs   dx,BYTE PTR gs:[esi]
  432b8d:	je     0x432bd4
  432b8f:	js     0x432bf4
  432b91:	gs jo  0x432c08
  432b94:	imul   ebp,DWORD PTR [edi+0x6e],0x72724100
  432b9b:	popa   
  432b9c:	jns    0x432b9e
  432b9e:	inc    ecx
  432b9f:	je     0x432c15
  432ba1:	jb     0x432c0c
  432ba3:	bound  esi,QWORD PTR [ebp+0x74]
  432ba6:	add    BYTE PTR gs:[edx+0x61],al
  432baa:	fs dec ecx
  432bac:	ins    DWORD PTR es:[edi],dx
  432bad:	popa   
  432bae:	addr16 gs inc esi
  432bb1:	outs   dx,DWORD PTR ds:[esi]
  432bb2:	jb     0x432c21
  432bb4:	popa   
  432bb5:	je     0x432bfc
  432bb7:	js     0x432c1c
  432bb9:	gs jo  0x432c30
  432bbc:	imul   ebp,DWORD PTR [edi+0x6e],0x74694200
  432bc3:	inc    ebx
  432bc4:	outs   dx,DWORD PTR ds:[esi]
  432bc5:	outs   dx,BYTE PTR ds:[esi]
  432bc6:	jbe    0x432c2d
  432bc8:	jb     0x432c3e
  432bca:	gs jb  0x432bcd
  432bcd:	inc    edx
  432bce:	outs   dx,DWORD PTR ds:[esi]
  432bcf:	outs   dx,DWORD PTR ds:[esi]
  432bd0:	ins    BYTE PTR es:[edi],dx
  432bd1:	gs popa 
  432bd3:	outs   dx,BYTE PTR ds:[esi]
  432bd4:	add    BYTE PTR [edx+0x75],al
  432bd7:	data16 data16 gs jb 0x432bdc
  432bdc:	inc    edx
  432bdd:	jns    0x432c53
  432bdf:	add    BYTE PTR gs:[ebx+0x68],al
  432be3:	popa   
  432be4:	jb     0x432be6
  432be6:	inc    edi
  432be7:	outs   dx,BYTE PTR gs:[esi]
  432be9:	gs jb  0x432c4d
  432bec:	je     0x432c53
  432bee:	fs inc ebx
  432bf0:	outs   dx,DWORD PTR ds:[esi]
  432bf1:	fs gs inc ecx
  432bf4:	je     0x432c6a
  432bf6:	jb     0x432c61
  432bf8:	bound  esi,QWORD PTR [ebp+0x74]
  432bfb:	add    BYTE PTR gs:[ebx+0x79],dl
  432bff:	jae    0x432c75
  432c01:	gs ins DWORD PTR es:[edi],dx
  432c03:	cs inc ebx
  432c05:	outs   dx,DWORD PTR ds:[esi]
  432c06:	fs gs inc esp
  432c09:	outs   dx,DWORD PTR ds:[esi]
  432c0a:	ins    DWORD PTR es:[edi],dx
  432c0b:	cs inc ebx
  432c0d:	outs   dx,DWORD PTR ds:[esi]
  432c0e:	ins    DWORD PTR es:[edi],dx
  432c0f:	jo     0x432c7a
  432c11:	ins    BYTE PTR es:[edi],dx
  432c12:	gs jb  0x432c15
  432c15:	inc    esp
  432c16:	imul   esp,DWORD PTR [ebx+0x74],0x616e6f69
  432c1d:	jb     0x432c98
  432c1f:	pusha  
  432c20:	xor    al,BYTE PTR [eax]
  432c22:	push   ebx
  432c23:	jns    0x432c98
  432c25:	je     0x432c8c
  432c27:	ins    DWORD PTR es:[edi],dx
  432c28:	cs inc ebx
  432c2a:	outs   dx,DWORD PTR ds:[esi]
  432c2b:	ins    BYTE PTR es:[edi],dx
  432c2c:	ins    BYTE PTR es:[edi],dx
  432c2d:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  432c32:	outs   dx,BYTE PTR ds:[esi]
  432c33:	jae    0x432c63
  432c35:	inc    edi
  432c36:	outs   dx,BYTE PTR gs:[esi]
  432c38:	gs jb  0x432ca4
  432c3b:	arpl   WORD PTR [eax],ax
  432c3d:	dec    ecx
  432c3e:	inc    ebp
  432c3f:	outs   dx,BYTE PTR ds:[esi]
  432c40:	jne    0x432caf
  432c42:	gs jb  0x432ca6
  432c45:	bound  ebp,QWORD PTR [ebp+eiz*2+0x60]
  432c49:	xor    DWORD PTR [eax],eax
  432c4b:	dec    ecx
  432c4c:	inc    ebp
  432c4d:	outs   dx,BYTE PTR ds:[esi]
  432c4e:	jne    0x432cbd
  432c50:	gs jb  0x432cb4
  432c53:	je     0x432cc4
  432c55:	jb     0x432cb7
  432c57:	xor    DWORD PTR [eax],eax
  432c59:	dec    ecx
  432c5a:	dec    esp
  432c5b:	imul   esi,DWORD PTR [ebx+0x74],0x4c003160
  432c62:	imul   esi,DWORD PTR [ebx+0x74],0x48003160
  432c69:	popa   
  432c6a:	jae    0x432cd4
  432c6c:	je     0x432ccf
  432c6e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  432c72:	push   ebx
  432c73:	jns    0x432ce8
  432c75:	je     0x432cdc
  432c77:	ins    DWORD PTR es:[edi],dx
  432c78:	cs inc ebx
  432c7a:	outs   dx,DWORD PTR ds:[esi]
  432c7b:	ins    BYTE PTR es:[edi],dx
  432c7c:	ins    BYTE PTR es:[edi],dx
  432c7d:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  432c82:	outs   dx,BYTE PTR ds:[esi]
  432c83:	jae    0x432c85
  432c85:	dec    ecx
  432c86:	inc    ebp
  432c87:	outs   dx,BYTE PTR ds:[esi]
  432c88:	jne    0x432cf7
  432c8a:	gs jb  0x432cee
  432c8d:	je     0x432cfe
  432c8f:	jb     0x432c91
  432c91:	inc    ebx
  432c92:	outs   dx,DWORD PTR ds:[esi]
  432c93:	ins    DWORD PTR es:[edi],dx
  432c94:	jo     0x432d05
  432c96:	outs   dx,BYTE PTR ds:[esi]
  432c97:	outs   dx,BYTE PTR gs:[esi]
  432c99:	je     0x432c9b
  432c9b:	push   ebx
  432c9c:	jns    0x432d11
  432c9e:	je     0x432d05
  432ca0:	ins    DWORD PTR es:[edi],dx
  432ca1:	cs inc ebx
  432ca3:	outs   dx,DWORD PTR ds:[esi]
  432ca4:	ins    DWORD PTR es:[edi],dx
  432ca5:	jo     0x432d16
  432ca7:	outs   dx,BYTE PTR ds:[esi]
  432ca8:	outs   dx,BYTE PTR gs:[esi]
  432caa:	je     0x432cf9
  432cac:	outs   dx,DWORD PTR ds:[esi]
  432cad:	fs gs ins BYTE PTR es:[edi],dx
  432cb0:	add    BYTE PTR [ebx+0x6f],al
  432cb3:	ins    DWORD PTR es:[edi],dx
  432cb4:	jo     0x432d25
  432cb6:	outs   dx,BYTE PTR ds:[esi]
  432cb7:	outs   dx,BYTE PTR gs:[esi]
  432cb9:	je     0x432d0d
  432cbb:	gs jae 0x432d2d
  432cbe:	jne    0x432d32
  432cc0:	arpl   WORD PTR [ebp+0x4d],sp
  432cc3:	popa   
  432cc4:	outs   dx,BYTE PTR ds:[esi]
  432cc5:	popa   
  432cc6:	addr16 gs jb 0x432cca
  432cca:	dec    eax
  432ccb:	gs ins BYTE PTR es:[edi],dx
  432ccd:	jo     0x432d1a
  432ccf:	gs jns 0x432d49
  432cd2:	outs   dx,DWORD PTR ds:[esi]
  432cd3:	jb     0x432d39
  432cd5:	inc    ecx
  432cd6:	je     0x432d4c
  432cd8:	jb     0x432d43
  432cda:	bound  esi,QWORD PTR [ebp+0x74]
  432cdd:	add    BYTE PTR gs:[ebx+0x79],dl
  432ce1:	jae    0x432d57
  432ce3:	gs ins DWORD PTR es:[edi],dx
  432ce5:	cs inc ebx
  432ce7:	outs   dx,DWORD PTR ds:[esi]
  432ce8:	ins    DWORD PTR es:[edi],dx
  432ce9:	jo     0x432d5a
  432ceb:	outs   dx,BYTE PTR ds:[esi]
  432cec:	outs   dx,BYTE PTR gs:[esi]
  432cee:	je     0x432d3d
  432cf0:	outs   dx,DWORD PTR ds:[esi]
  432cf1:	fs gs ins BYTE PTR es:[edi],dx
  432cf4:	cs inc esp
  432cf6:	gs jae 0x432d62
  432cf9:	outs   dx,BYTE PTR ds:[si]
  432cfb:	add    BYTE PTR [ebp+0x64],al
  432cfe:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x776f7242
  432d06:	jae    0x432d69
  432d08:	bound  ebp,QWORD PTR [ebp+eiz*2+0x41]
  432d0c:	je     0x432d82
  432d0e:	jb     0x432d79
  432d10:	bound  esi,QWORD PTR [ebp+0x74]
  432d13:	add    BYTE PTR gs:[ebp+0x64],al
  432d17:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x776f7242
  432d1f:	jae    0x432d82
  432d21:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  432d25:	je     0x432d88
  432d27:	je     0x432d8e
  432d29:	add    BYTE PTR [ecx+0x43],cl
  432d2c:	outs   dx,DWORD PTR ds:[esi]
  432d2d:	outs   dx,BYTE PTR ds:[esi]
  432d2e:	je     0x432d91
  432d30:	imul   ebp,DWORD PTR [esi+0x65],0x53490072
  432d37:	jne    0x432da9
  432d39:	jo     0x432daa
  432d3b:	jb     0x432db1
  432d3d:	dec    ecx
  432d3e:	outs   dx,BYTE PTR ds:[esi]
  432d3f:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  432d47:	add    BYTE PTR [ecx+0x70],al
  432d4a:	jo     0x432db8
  432d4c:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  432d53:	push   ebx
  432d54:	gs je  0x432dcb
  432d57:	imul   ebp,DWORD PTR [esi+0x67],0x73614273
  432d5e:	add    BYTE PTR gs:[ebx+0x79],dl
  432d62:	jae    0x432dd8
  432d64:	gs ins DWORD PTR es:[edi],dx
  432d66:	cs inc ebx
  432d68:	outs   dx,DWORD PTR ds:[esi]
  432d69:	outs   dx,BYTE PTR ds:[esi]
  432d6a:	imul   sp,WORD PTR [edi+0x75],0x6172
  432d70:	je     0x432ddb
  432d72:	outs   dx,DWORD PTR ds:[esi]
  432d73:	outs   dx,BYTE PTR ds:[esi]
  432d74:	add    BYTE PTR [ebx+0x65],dl
  432d77:	je     0x432ded
  432d79:	imul   ebp,DWORD PTR [esi+0x67],0x73614273
  432d80:	add    BYTE PTR gs:[ebx+0x6f],al
  432d84:	outs   dx,BYTE PTR ds:[esi]
  432d85:	jbe    0x432dec
  432d87:	jb     0x432dfd
  432d89:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  432d8d:	gs addr16 popa 
  432d90:	je     0x432df7
  432d92:	add    BYTE PTR [ebp+eiz*2+0x62],al
  432d96:	jne    0x432dff
  432d98:	addr16 popa 
  432d9a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x41]
  432d9e:	je     0x432e14
  432da0:	jb     0x432e0b
  432da2:	bound  esi,QWORD PTR [ebp+0x74]
  432da5:	add    BYTE PTR gs:[ebx+0x79],dl
  432da9:	jae    0x432e1f
  432dab:	gs ins DWORD PTR es:[edi],dx
  432dad:	cs inc esp
  432daf:	imul   esp,DWORD PTR [ecx+0x67],0x74736f6e
  432db6:	imul   esp,DWORD PTR [ebx+0x73],0x62654400
  432dbd:	jne    0x432e26
  432dbf:	imul   ebp,DWORD PTR [bp+0x67],0x65646f4d
  432dc7:	jae    0x432dc9
  432dc9:	inc    esp
  432dca:	bound  esi,QWORD PTR gs:[ebp+0x67]
  432dce:	addr16 gs jb 0x432e1a
  432dd2:	imul   esp,DWORD PTR [esp+eiz*2+0x65],0x7474416e
  432dda:	jb     0x432e45
  432ddc:	bound  esi,QWORD PTR [ebp+0x74]
  432ddf:	add    BYTE PTR gs:[ebp+eiz*2+0x62],al
  432de4:	jne    0x432e4d
  432de6:	addr16 gs jb 0x432e38
  432dea:	outs   dx,DWORD PTR ds:[esi]
  432deb:	outs   dx,BYTE PTR ds:[esi]
  432dec:	push   ebp
  432ded:	jae    0x432e54
  432def:	jb     0x432e34
  432df1:	outs   dx,DWORD PTR ds:[esi]
  432df2:	fs gs inc ecx
  432df5:	je     0x432e6b
  432df7:	jb     0x432e62
  432df9:	bound  esi,QWORD PTR [ebp+0x74]
  432dfc:	add    BYTE PTR gs:[ebp+eiz*2+0x62],al
  432e01:	jne    0x432e6a
  432e03:	addr16 gs jb 0x432e5a
  432e07:	je     0x432e6e
  432e09:	jo     0x432e5f
  432e0b:	push   0x67756f72
  432e10:	push   0x72747441
  432e15:	imul   esp,DWORD PTR [edx+0x75],0x50006574
  432e1c:	jb     0x432e8d
  432e1e:	arpl   WORD PTR [ebp+0x73],sp
  432e21:	jae    0x432e23
  432e23:	push   eax
  432e24:	jb     0x432e95
  432e26:	arpl   WORD PTR [ebp+0x73],sp
  432e29:	jae    0x432e7e
  432e2b:	je     0x432e8e
  432e2d:	jb     0x432ea3
  432e2f:	dec    ecx
  432e30:	outs   dx,BYTE PTR ds:[esi]
  432e31:	outs   dx,WORD PTR ds:[esi]
  432e33:	add    BYTE PTR [eax+0x72],dl
  432e36:	outs   dx,DWORD PTR ds:[esi]
  432e37:	arpl   WORD PTR [ebp+0x73],sp
  432e3a:	jae    0x432e93
  432e3c:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  432e43:	jns    0x432eb1
  432e45:	add    BYTE PTR gs:[edi+ebp*2+0x75],al
  432e4a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  432e4e:	inc    ebx
  432e4f:	outs   dx,DWORD PTR ds:[esi]
  432e50:	ins    BYTE PTR es:[edi],dx
  432e51:	outs   dx,DWORD PTR ds:[esi]
  432e52:	jb     0x432e54
  432e54:	inc    esi
  432e55:	outs   dx,DWORD PTR ds:[esi]
  432e56:	outs   dx,BYTE PTR ds:[esi]
  432e57:	je     0x432e59
  432e59:	inc    esi
  432e5a:	outs   dx,DWORD PTR ds:[esi]
  432e5b:	outs   dx,BYTE PTR ds:[esi]
  432e5c:	je     0x432eb1
  432e5e:	je     0x432ed9
  432e60:	ins    BYTE PTR es:[edi],dx
  432e61:	add    BYTE PTR gs:[edi+0x72],al
  432e65:	popa   
  432e66:	jo     0x432ed0
  432e68:	imul   esp,DWORD PTR [ebx+0x73],0x74696e55
  432e6f:	add    BYTE PTR [ecx+0x63],cl
  432e72:	outs   dx,DWORD PTR ds:[esi]
  432e73:	outs   dx,BYTE PTR ds:[esi]
  432e74:	add    BYTE PTR [ecx+0x6d],cl
  432e77:	popa   
  432e78:	add    BYTE PTR gs:[bx+si+0x6f],dl
  432e7d:	imul   ebp,DWORD PTR [esi+0x74],0x7a695300
  432e84:	add    BYTE PTR gs:[ebx+0x69],dl
  432e88:	jp     0x432eef
  432e8a:	inc    esi
  432e8b:	add    BYTE PTR [ebx+0x79],dl
  432e8e:	jae    0x432f04
  432e90:	gs ins DWORD PTR es:[edi],dx
  432e92:	inc    ebx
  432e93:	outs   dx,DWORD PTR ds:[esi]
  432e94:	ins    BYTE PTR es:[edi],dx
  432e95:	outs   dx,DWORD PTR ds:[esi]
  432e96:	jb     0x432f0b
  432e98:	add    BYTE PTR [ebp+0x6e],al
  432e9b:	jne    0x432f0a
  432e9d:	add    BYTE PTR [ebp+0x6e],al
  432ea0:	jbe    0x432f0b
  432ea2:	jb     0x432f13
  432ea4:	outs   dx,BYTE PTR ds:[esi]
  432ea5:	ins    DWORD PTR es:[edi],dx
  432ea6:	outs   dx,BYTE PTR gs:[esi]
  432ea8:	je     0x432eaa
  432eaa:	push   ebx
  432eab:	jo     0x432f12
  432ead:	arpl   WORD PTR [ecx+0x61],bp
  432eb0:	ins    BYTE PTR es:[edi],dx
  432eb1:	inc    esi
  432eb2:	outs   dx,DWORD PTR ds:[esi]
  432eb3:	ins    BYTE PTR es:[edi],dx
  432eb4:	fs gs jb 0x432eb8
  432eb8:	inc    ebp
  432eb9:	jbe    0x432f20
  432ebb:	outs   dx,BYTE PTR ds:[esi]
  432ebc:	je     0x432eff
  432ebe:	jb     0x432f27
  432ec0:	jae    0x432ec2
  432ec2:	inc    ebp
  432ec3:	jbe    0x432f2a
  432ec5:	outs   dx,BYTE PTR ds:[esi]
  432ec6:	je     0x432f10
  432ec8:	popa   
  432ec9:	outs   dx,BYTE PTR ds:[esi]
  432eca:	fs ins BYTE PTR es:[edi],dx
  432ecc:	gs jb  0x432ecf
  432ecf:	inc    ebp
  432ed0:	js     0x432f35
  432ed2:	gs jo  0x432f49
  432ed5:	imul   ebp,DWORD PTR [edi+0x6e],0x6c754300
  432edc:	je     0x432f53
  432ede:	jb     0x432f45
  432ee0:	dec    ecx
  432ee1:	outs   dx,BYTE PTR ds:[esi]
  432ee2:	outs   dx,WORD PTR ds:[esi]
  432ee4:	add    BYTE PTR [ebx+0x79],dl
  432ee7:	jae    0x432f5d
  432ee9:	gs ins DWORD PTR es:[edi],dx
  432eeb:	cs inc edi
  432eed:	ins    BYTE PTR es:[edi],dx
  432eee:	outs   dx,DWORD PTR ds:[esi]
  432eef:	bound  esp,QWORD PTR [ecx+0x6c]
  432ef2:	imul   edi,DWORD PTR [edx+0x61],0x6e6f6974
  432ef9:	add    BYTE PTR [esi+0x75],cl
  432efc:	ins    DWORD PTR es:[edi],dx
  432efd:	bound  esp,QWORD PTR [ebp+0x72]
  432f00:	push   ebx
  432f01:	je     0x432f7c
  432f03:	ins    BYTE PTR es:[edi],dx
  432f04:	gs jae 0x432f07
  432f07:	dec    ecx
  432f08:	inc    esp
  432f09:	imul   esi,DWORD PTR [ebx+0x70],0x6261736f
  432f10:	ins    BYTE PTR es:[edi],dx
  432f11:	add    BYTE PTR gs:[ecx+0x6e],cl
  432f15:	je     0x432f48
  432f17:	add    BYTE PTR ss:[ecx+0x6e],cl
  432f1b:	je     0x432f50
  432f1d:	xor    al,BYTE PTR [eax]
  432f1f:	dec    ecx
  432f20:	outs   dx,BYTE PTR ds:[esi]
  432f21:	je     0x432f59
  432f23:	xor    al,0x0
  432f25:	dec    ecx
  432f26:	outs   dx,BYTE PTR ds:[esi]
  432f27:	je     0x432f79
  432f29:	je     0x432f9d
  432f2b:	add    BYTE PTR [ecx+0x6e],cl
  432f2e:	jbe    0x432f91
  432f30:	ins    BYTE PTR es:[edi],dx
  432f31:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x74617265
  432f39:	imul   ebp,DWORD PTR [edi+0x6e],0x65637845
  432f40:	jo     0x432fb6
  432f42:	imul   ebp,DWORD PTR [edi+0x6e],0x6e694200
  432f49:	popa   
  432f4a:	jb     0x432fc5
  432f4c:	push   edx
  432f4d:	gs popa 
  432f4f:	fs gs jb 0x432f53
  432f53:	push   ebx
  432f54:	jns    0x432fc9
  432f56:	je     0x432fbd
  432f58:	ins    DWORD PTR es:[edi],dx
  432f59:	cs dec ecx
  432f5b:	dec    edi
  432f5c:	add    BYTE PTR [ebx+0x6f],al
  432f5f:	ins    DWORD PTR es:[edi],dx
  432f60:	jo     0x432fd4
  432f62:	gs jae 0x432fd8
  432f65:	imul   ebp,DWORD PTR [edi+0x6e],0x65646f4d
  432f6c:	add    BYTE PTR [ebx+0x79],dl
  432f6f:	jae    0x432fe5
  432f71:	gs ins DWORD PTR es:[edi],dx
  432f73:	cs dec ecx
  432f75:	dec    edi
  432f76:	cs inc ebx
  432f78:	outs   dx,DWORD PTR ds:[esi]
  432f79:	ins    DWORD PTR es:[edi],dx
  432f7a:	jo     0x432fee
  432f7c:	gs jae 0x432ff2
  432f7f:	imul   ebp,DWORD PTR [edi+0x6e],0x66654400
  432f86:	ins    BYTE PTR es:[edi],dx
  432f87:	popa   
  432f88:	je     0x432fef
  432f8a:	push   ebx
  432f8b:	je     0x432fff
  432f8d:	gs popa 
  432f8f:	ins    DWORD PTR es:[edi],dx
  432f90:	add    BYTE PTR [ecx+ebp*2+0x72],al
  432f94:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  432f99:	jns    0x432f9b
  432f9b:	inc    esp
  432f9c:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  432fa3:	jns    0x432fee
  432fa5:	outs   dx,BYTE PTR ds:[esi]
  432fa6:	outs   dx,WORD PTR ds:[esi]
  432fa8:	add    BYTE PTR [esi+0x69],al
  432fab:	ins    BYTE PTR es:[edi],dx
  432fac:	add    BYTE PTR gs:[esi+0x69],al
  432fb0:	ins    BYTE PTR es:[edi],dx
  432fb1:	gs inc ecx
  432fb3:	arpl   WORD PTR [ebx+0x65],sp
  432fb6:	jae    0x43302b
  432fb8:	add    BYTE PTR [esi+0x69],al
  432fbb:	ins    BYTE PTR es:[edi],dx
  432fbc:	gs dec ecx
  432fbe:	outs   dx,BYTE PTR ds:[esi]
  432fbf:	outs   dx,WORD PTR ds:[esi]
  432fc1:	add    BYTE PTR [esi+0x69],al
  432fc4:	ins    BYTE PTR es:[edi],dx
  432fc5:	gs dec ebp
  432fc7:	outs   dx,DWORD PTR ds:[esi]
  432fc8:	fs add BYTE PTR gs:[esi+0x69],al
  432fcd:	ins    BYTE PTR es:[edi],dx
  432fce:	gs push ebx
  432fd0:	je     0x433044
  432fd2:	gs popa 
  432fd4:	ins    DWORD PTR es:[edi],dx
  432fd5:	add    BYTE PTR [esi+0x69],al
  432fd8:	ins    BYTE PTR es:[edi],dx
  432fd9:	gs push ebx
  432fdb:	jns    0x433050
  432fdd:	je     0x433044
  432fdf:	ins    DWORD PTR es:[edi],dx
  432fe0:	dec    ecx
  432fe1:	outs   dx,BYTE PTR ds:[esi]
  432fe2:	outs   dx,WORD PTR ds:[esi]
  432fe4:	add    BYTE PTR [ebp+0x65],cl
  432fe7:	ins    DWORD PTR es:[edi],dx
  432fe8:	outs   dx,DWORD PTR ds:[esi]
  432fe9:	jb     0x433064
  432feb:	push   ebx
  432fec:	je     0x433060
  432fee:	gs popa 
  432ff0:	ins    DWORD PTR es:[edi],dx
  432ff1:	add    BYTE PTR [ebx+0x74],dl
  432ff4:	jb     0x43305b
  432ff6:	popa   
  432ff7:	ins    DWORD PTR es:[edi],dx
  432ff8:	add    BYTE PTR [ebx+0x74],dl
  432ffb:	jb     0x433062
  432ffd:	popa   
  432ffe:	ins    DWORD PTR es:[edi],dx
  432fff:	push   edx
  433000:	gs popa 
  433002:	fs gs jb 0x433006
  433006:	push   esp
  433007:	gs js  0x43307e
  43300a:	push   edx
  43300b:	gs popa 
  43300d:	fs gs jb 0x433011
  433011:	dec    ebp
  433012:	outs   dx,DWORD PTR ds:[esi]
  433013:	fs jne 0x433082
  433016:	gs dec eax
  433018:	popa   
  433019:	outs   dx,BYTE PTR ds:[esi]
  43301a:	fs ins BYTE PTR es:[edi],dx
  43301c:	add    BYTE PTR gs:[ebp+0x75],cl
  433020:	ins    BYTE PTR es:[edi],dx
  433021:	je     0x43308c
  433023:	arpl   WORD PTR [ecx+0x73],sp
  433026:	je     0x43306c
  433028:	gs ins BYTE PTR es:[edi],dx
  43302a:	gs addr16 popa 
  43302d:	je     0x433094
  43302f:	add    BYTE PTR [esi+0x65],cl
  433032:	je     0x4330ab
  433034:	outs   dx,DWORD PTR ds:[esi]
  433035:	jb     0x4330a2
  433037:	dec    ecx
  433038:	outs   dx,BYTE PTR ds:[esi]
  433039:	je     0x4330a0
  43303b:	jb     0x4330a3
  43303d:	popa   
  43303e:	arpl   WORD PTR [ebp+0x0],sp
  433041:	push   ebx
  433042:	jns    0x4330b7
  433044:	je     0x4330ab
  433046:	ins    DWORD PTR es:[edi],dx
  433047:	cs dec esi
  433049:	gs je  0x43307a
  43304c:	dec    esi
  43304d:	gs je  0x4330c7
  433050:	outs   dx,DWORD PTR ds:[esi]
  433051:	jb     0x4330be
  433053:	dec    ecx
  433054:	outs   dx,BYTE PTR ds:[esi]
  433055:	outs   dx,WORD PTR ds:[esi]
  433057:	jb     0x4330c6
  433059:	popa   
  43305a:	je     0x4330c5
  43305c:	outs   dx,DWORD PTR ds:[esi]
  43305d:	outs   dx,BYTE PTR ds:[esi]
  43305e:	add    BYTE PTR [eax+0x68],dl
  433061:	jns    0x4330d6
  433063:	imul   esp,DWORD PTR [ebx+0x61],0x6464416c
  43306a:	jb     0x4330d1
  43306c:	jae    0x4330e1
  43306e:	add    BYTE PTR [edi+0x65],dl
  433071:	bound  eax,QWORD PTR [ebx+0x6c]
  433074:	imul   esp,DWORD PTR [ebp+0x6e],0x79530074
  43307b:	jae    0x4330f1
  43307d:	gs ins DWORD PTR es:[edi],dx
  43307f:	cs dec esi
  433081:	gs je  0x433084
  433084:	dec    esi
  433085:	outs   dx,DWORD PTR ds:[esi]
  433086:	je     0x4330db
  433088:	jne    0x4330fa
  43308a:	jo     0x4330fb
  43308c:	jb     0x433102
  43308e:	gs fs inc ebp
  433091:	js     0x4330f6
  433093:	gs jo  0x43310a
  433096:	imul   ebp,DWORD PTR [edi+0x6e],0x6a624f00
  43309d:	arpl   WORD PTR gs:[eax+eax*1+0x52],si
  4330a2:	popa   
  4330a3:	outs   dx,BYTE PTR ds:[esi]
  4330a4:	outs   dx,DWORD PTR fs:[esi]
  4330a6:	ins    DWORD PTR es:[edi],dx
  4330a7:	add    BYTE PTR [ecx+0x73],al
  4330aa:	jae    0x433111
  4330ac:	ins    DWORD PTR es:[edi],dx
  4330ad:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  4330b1:	push   ebx
  4330b2:	jns    0x433127
  4330b4:	je     0x43311b
  4330b6:	ins    DWORD PTR es:[edi],dx
  4330b7:	cs push edx
  4330b9:	gs data16 ins BYTE PTR es:[edi],dx
  4330bc:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4330c1:	outs   dx,BYTE PTR ds:[esi]
  4330c2:	add    BYTE PTR [ecx+0x73],al
  4330c5:	jae    0x43312c
  4330c7:	ins    DWORD PTR es:[edi],dx
  4330c8:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  4330cc:	outs   dx,DWORD PTR ds:[esi]
  4330cd:	ins    DWORD PTR es:[edi],dx
  4330ce:	jo     0x433131
  4330d0:	outs   dx,BYTE PTR ds:[esi]
  4330d1:	jns    0x433114
  4330d3:	je     0x433149
  4330d5:	jb     0x433140
  4330d7:	bound  esi,QWORD PTR [ebp+0x74]
  4330da:	add    BYTE PTR gs:[ecx+0x73],al
  4330de:	jae    0x433145
  4330e0:	ins    DWORD PTR es:[edi],dx
  4330e1:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  4330e5:	outs   dx,DWORD PTR ds:[esi]
  4330e6:	jo     0x433161
  4330e8:	jb     0x433153
  4330ea:	addr16 push 0x74744174
  4330f0:	jb     0x43315b
  4330f2:	bound  esi,QWORD PTR [ebp+0x74]
  4330f5:	add    BYTE PTR gs:[ecx+0x73],al
  4330f9:	jae    0x433160
  4330fb:	ins    DWORD PTR es:[edi],dx
  4330fc:	bound  ebp,QWORD PTR [ecx+edi*2+0x44]
  433100:	gs jae 0x433166
  433103:	jb     0x43316e
  433105:	jo     0x43317b
  433107:	imul   ebp,DWORD PTR [edi+0x6e],0x72747441
  43310e:	imul   esp,DWORD PTR [edx+0x75],0x41006574
  433115:	jae    0x43318a
  433117:	gs ins DWORD PTR es:[edi],dx
  433119:	bound  ebp,QWORD PTR [ecx+edi*2+0x46]
  43311d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
  433125:	outs   dx,DWORD PTR ds:[esi]
  433126:	outs   dx,BYTE PTR ds:[esi]
  433127:	inc    ecx
  433128:	je     0x43319e
  43312a:	jb     0x433195
  43312c:	bound  esi,QWORD PTR [ebp+0x74]
  43312f:	add    BYTE PTR gs:[ecx+0x73],al
  433133:	jae    0x43319a
  433135:	ins    DWORD PTR es:[edi],dx
  433136:	bound  ebp,QWORD PTR [ecx+edi*2+0x50]
  43313a:	jb     0x4331ab
  43313c:	fs jne 0x4331a2
  43313f:	je     0x433182
  433141:	je     0x4331b7
  433143:	jb     0x4331ae
  433145:	bound  esi,QWORD PTR [ebp+0x74]
  433148:	add    BYTE PTR gs:[ecx+0x73],al
  43314c:	jae    0x4331b3
  43314e:	ins    DWORD PTR es:[edi],dx
  43314f:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
  433153:	imul   esi,DWORD PTR [esp+ebp*2+0x65],0x72747441
  43315b:	imul   esp,DWORD PTR [edx+0x75],0x41006574
  433162:	jae    0x4331d7
  433164:	gs ins DWORD PTR es:[edi],dx
  433166:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
  43316a:	jb     0x4331cd
  43316c:	fs gs ins DWORD PTR es:[edi],dx
  43316f:	popa   
  433170:	jb     0x4331dd
  433172:	inc    ecx
  433173:	je     0x4331e9
  433175:	jb     0x4331e0
  433177:	bound  esi,QWORD PTR [ebp+0x74]
  43317a:	add    BYTE PTR gs:[edx+0x69],al
  43317e:	outs   dx,BYTE PTR ds:[esi]
  43317f:	imul   ebp,DWORD PTR fs:[esi+0x67],0x67616c46
  433187:	jae    0x433189
  433189:	inc    ebx
  43318a:	outs   dx,DWORD PTR ds:[esi]
  43318b:	outs   dx,BYTE PTR ds:[esi]
  43318c:	jae    0x433202
  43318e:	jb     0x433205
  433190:	arpl   WORD PTR [edi+ebp*2+0x72],si
  433194:	dec    ecx
  433195:	outs   dx,BYTE PTR ds:[esi]
  433196:	outs   dx,WORD PTR ds:[esi]
  433198:	add    BYTE PTR [ecx+edi*2+0x6e],al
  43319c:	popa   
  43319d:	ins    DWORD PTR es:[edi],dx
  43319e:	imul   esp,DWORD PTR [ebx+0x49],0x666e494c
  4331a5:	outs   dx,DWORD PTR ds:[esi]
  4331a6:	add    BYTE PTR [ebx+0x79],dl
  4331a9:	jae    0x43321f
  4331ab:	gs ins DWORD PTR es:[edi],dx
  4331ad:	cs push edx
  4331af:	gs data16 ins BYTE PTR es:[edi],dx
  4331b2:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4331b7:	outs   dx,BYTE PTR ds:[esi]
  4331b8:	cs inc ebp
  4331ba:	ins    DWORD PTR es:[edi],dx
  4331bb:	imul   esi,DWORD PTR [eax+eax*1+0x44],0x6d616e79
  4331c3:	imul   esp,DWORD PTR [ebx+0x4d],0x6f687465
  4331ca:	add    BYTE PTR fs:[edi+0x70],cl
  4331ce:	inc    ebx
  4331cf:	outs   dx,DWORD PTR ds:[esi]
  4331d0:	fs add BYTE PTR gs:[edi+0x70],cl
  4331d5:	inc    ebx
  4331d6:	outs   dx,DWORD PTR ds:[esi]
  4331d7:	fs gs jae 0x4331db
  4331db:	dec    edi
  4331dc:	jo     0x433243
  4331de:	jb     0x433241
  4331e0:	outs   dx,BYTE PTR ds:[esi]
  4331e1:	fs push esp
  4331e3:	jns    0x433255
  4331e5:	add    BYTE PTR gs:[ebx+0x69],dl
  4331e9:	outs   dx,BYTE PTR ds:[si]
  4331eb:	popa   
  4331ec:	je     0x433263
  4331ee:	jb     0x433255
  4331f0:	dec    eax
  4331f1:	gs ins BYTE PTR es:[edi],dx
  4331f3:	jo     0x43325a
  4331f5:	jb     0x4331f7
  4331f7:	inc    ebp
  4331f8:	js     0x43325d
  4331fa:	gs jo  0x433271
  4331fd:	imul   ebp,DWORD PTR [edi+0x6e],0x646e6148
  433204:	ins    BYTE PTR es:[edi],dx
  433205:	imul   ebp,DWORD PTR [esi+0x67],0x75616c43
  43320c:	jae    0x433273
  43320e:	dec    edi
  43320f:	jo     0x433285
  433211:	imul   ebp,DWORD PTR [edi+0x6e],0x69460073
  433218:	gs ins BYTE PTR es:[edi],dx
  43321a:	fs dec ecx
  43321c:	outs   dx,BYTE PTR ds:[esi]
  43321d:	outs   dx,WORD PTR ds:[esi]
  43321f:	add    BYTE PTR [edi+ebp*2+0x63],cl
  433223:	popa   
  433224:	ins    BYTE PTR es:[edi],dx
  433225:	push   esi
  433226:	popa   
  433227:	jb     0x433292
  433229:	popa   
  43322a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x49]
  43322e:	outs   dx,BYTE PTR ds:[esi]
  43322f:	outs   dx,WORD PTR ds:[esi]
  433231:	add    BYTE PTR [ebp+0x65],cl
  433234:	ins    DWORD PTR es:[edi],dx
  433235:	bound  esp,QWORD PTR [ebp+0x72]
  433238:	dec    ecx
  433239:	outs   dx,BYTE PTR ds:[esi]
  43323a:	outs   dx,WORD PTR ds:[esi]
  43323c:	add    BYTE PTR [ebp+0x65],cl
  43323f:	ins    DWORD PTR es:[edi],dx
  433240:	bound  esp,QWORD PTR [ebp+0x72]
  433243:	push   esp
  433244:	jns    0x4332b6
  433246:	gs jae 0x433249
  433249:	dec    ebp
  43324a:	gs je  0x4332b5
  43324d:	outs   dx,DWORD PTR ds:[esi]
  43324e:	fs inc edx
  433250:	popa   
  433251:	jae    0x4332b8
  433253:	add    BYTE PTR [ebp+0x65],cl
  433256:	je     0x4332c0
  433258:	outs   dx,DWORD PTR ds:[esi]
  433259:	fs inc edx
  43325b:	outs   dx,DWORD PTR ds:[esi]
  43325c:	fs jns 0x43325f
  43325f:	dec    ebp
  433260:	gs je  0x4332cb
  433263:	outs   dx,DWORD PTR ds:[esi]
  433264:	fs dec ecx
  433266:	outs   dx,BYTE PTR ds:[esi]
  433267:	outs   dx,WORD PTR ds:[esi]
  433269:	add    BYTE PTR [ebp+0x6f],cl
  43326c:	fs jne 0x4332db
  43326f:	add    BYTE PTR gs:[eax+0x61],dl
  433273:	jb     0x4332d6
  433275:	ins    DWORD PTR es:[edi],dx
  433276:	gs je  0x4332de
  433279:	jb     0x4332c4
  43327b:	outs   dx,BYTE PTR ds:[esi]
  43327c:	outs   dx,WORD PTR ds:[esi]
  43327e:	add    BYTE PTR [ecx+eiz*2+0x72],dl
  433282:	addr16 gs je 0x4332cf
  433286:	outs   dx,BYTE PTR ds:[esi]
  433287:	jbe    0x4332f8
  433289:	arpl   WORD PTR [ecx+0x74],sp
  43328c:	imul   ebp,DWORD PTR [edi+0x6e],0x65637845
  433293:	jo     0x433309
  433295:	imul   ebp,DWORD PTR [edi+0x6e],0x73655200
  43329c:	outs   dx,DWORD PTR ds:[esi]
  43329d:	ins    BYTE PTR es:[edi],dx
  43329e:	jbe    0x433305
  4332a0:	inc    ebp
  4332a1:	jbe    0x433308
  4332a3:	outs   dx,BYTE PTR ds:[esi]
  4332a4:	je     0x4332e7
  4332a6:	jb     0x43330f
  4332a8:	jae    0x4332aa
  4332aa:	push   edx
  4332ab:	gs jae 0x43331d
  4332ae:	ins    BYTE PTR es:[edi],dx
  4332af:	jbe    0x433316
  4332b1:	inc    ebp
  4332b2:	jbe    0x433319
  4332b4:	outs   dx,BYTE PTR ds:[esi]
  4332b5:	je     0x4332ff
  4332b7:	popa   
  4332b8:	outs   dx,BYTE PTR ds:[esi]
  4332b9:	fs ins BYTE PTR es:[edi],dx
  4332bb:	gs jb  0x4332be
  4332be:	push   edx
  4332bf:	gs jae 0x433331
  4332c2:	jne    0x433336
  4332c4:	arpl   WORD PTR [ebp+0x4d],sp
  4332c7:	popa   
  4332c8:	outs   dx,BYTE PTR ds:[esi]
  4332c9:	popa   
  4332ca:	addr16 gs jb 0x4332ce
  4332ce:	push   ebx
  4332cf:	jns    0x433344
  4332d1:	je     0x433338
  4332d3:	ins    DWORD PTR es:[edi],dx
  4332d4:	cs push edx
  4332d6:	gs jae 0x433348
  4332d9:	jne    0x43334d
  4332db:	arpl   WORD PTR [ebp+0x73],sp
  4332de:	add    BYTE PTR [ecx+0x63],al
  4332e1:	arpl   WORD PTR [ebp+0x73],sp
  4332e4:	jae    0x43334b
  4332e6:	fs push esp
  4332e8:	push   0x67756f72
  4332ed:	push   0x706f7250
  4332f2:	gs jb  0x433369
  4332f5:	jns    0x433338
  4332f7:	je     0x43336d
  4332f9:	jb     0x433364
  4332fb:	bound  esi,QWORD PTR [ebp+0x74]
  4332fe:	add    BYTE PTR gs:[ebx+0x79],dl
  433302:	jae    0x433378
  433304:	gs ins DWORD PTR es:[edi],dx
  433306:	cs push edx
  433308:	jne    0x433378
  43330a:	je     0x433375
  43330c:	ins    DWORD PTR es:[edi],dx
  43330d:	gs cs inc ebx
  433310:	outs   dx,DWORD PTR ds:[esi]
  433311:	ins    DWORD PTR es:[edi],dx
  433312:	jo     0x43337d
  433314:	ins    BYTE PTR es:[edi],dx
  433315:	gs jb  0x43336b
  433318:	gs jb  0x433391
  43331b:	imul   esp,DWORD PTR [ebx+0x65],0x6f430073
  433322:	ins    DWORD PTR es:[edi],dx
  433323:	jo     0x43338e
  433325:	ins    BYTE PTR es:[edi],dx
  433326:	popa   
  433327:	je     0x433392
  433329:	outs   dx,DWORD PTR ds:[esi]
  43332a:	outs   dx,BYTE PTR ds:[esi]
  43332b:	push   edx
  43332c:	gs ins BYTE PTR es:[edi],dx
  43332e:	popa   
  43332f:	js     0x433392
  433331:	je     0x43339c
  433333:	outs   dx,DWORD PTR ds:[esi]
  433334:	outs   dx,BYTE PTR ds:[esi]
  433335:	jae    0x433378
  433337:	je     0x4333ad
  433339:	jb     0x4333a4
  43333b:	bound  esi,QWORD PTR [ebp+0x74]
  43333e:	add    BYTE PTR gs:[ebx+0x6f],al
  433342:	ins    DWORD PTR es:[edi],dx
  433343:	jo     0x4333ae
  433345:	ins    BYTE PTR es:[edi],dx
  433346:	gs jb  0x433390
  433349:	outs   dx,BYTE PTR gs:[esi]
  43334b:	gs jb  0x4333af
  43334e:	je     0x4333b5
  433350:	fs inc ecx
  433352:	je     0x4333c8
  433354:	jb     0x4333bf
  433356:	bound  esi,QWORD PTR [ebp+0x74]
  433359:	add    BYTE PTR gs:[edx+0x75],dl
  43335d:	outs   dx,BYTE PTR ds:[esi]
  43335e:	je     0x4333c9
  433360:	ins    DWORD PTR es:[edi],dx
  433361:	gs inc ebx
  433363:	outs   dx,DWORD PTR ds:[esi]
  433364:	ins    DWORD PTR es:[edi],dx
  433365:	jo     0x4333c8
  433367:	je     0x4333d2
  433369:	bound  ebp,QWORD PTR [ecx+0x6c]
  43336c:	imul   esi,DWORD PTR [ecx+edi*2+0x41],0x69727474
  433374:	bound  esi,QWORD PTR [ebp+0x74]
  433377:	add    BYTE PTR gs:[edx+0x75],dl
  43337b:	outs   dx,BYTE PTR ds:[esi]
  43337c:	je     0x4333e7
  43337e:	ins    DWORD PTR es:[edi],dx
  43337f:	gs dec eax
  433381:	gs ins BYTE PTR es:[edi],dx
  433383:	jo     0x4333ea
  433385:	jb     0x4333fa
  433387:	add    BYTE PTR [ebx+0x6f],al
  43338a:	ins    DWORD PTR es:[edi],dx
  43338b:	push   esi
  43338c:	imul   esi,DWORD PTR [ebx+0x69],0x41656c62
  433393:	je     0x433409
  433395:	jb     0x433400
  433397:	bound  esi,QWORD PTR [ebp+0x74]
  43339a:	add    BYTE PTR gs:[ebx+0x79],dl
  43339e:	jae    0x433414
  4333a0:	gs ins DWORD PTR es:[edi],dx
  4333a2:	cs push edx
  4333a4:	jne    0x433414
  4333a6:	je     0x433411
  4333a8:	ins    DWORD PTR es:[edi],dx
  4333a9:	gs cs dec ecx
  4333ac:	outs   dx,BYTE PTR ds:[esi]
  4333ad:	je     0x433414
  4333af:	jb     0x433420
  4333b1:	jo     0x433406
  4333b3:	gs jb  0x43342c
  4333b6:	imul   esp,DWORD PTR [ebx+0x65],0x75470073
  4333bd:	imul   esp,DWORD PTR [ecx+eax*2+0x74],0x62697274
  4333c5:	jne    0x43343b
  4333c7:	add    BYTE PTR gs:[edx+0x75],dl
  4333cb:	outs   dx,BYTE PTR ds:[esi]
  4333cc:	je     0x433437
  4333ce:	ins    DWORD PTR es:[edi],dx
  4333cf:	gs inc esi
  4333d1:	imul   esp,DWORD PTR [ebp+0x6c],0x6e614864
  4333d8:	fs ins BYTE PTR es:[edi],dx
  4333da:	add    BYTE PTR gs:[edx+0x75],dl
  4333de:	outs   dx,BYTE PTR ds:[esi]
  4333df:	je     0x43344a
  4333e1:	ins    DWORD PTR es:[edi],dx
  4333e2:	gs dec ebp
  4333e4:	gs je  0x43344f
  4333e7:	outs   dx,DWORD PTR ds:[esi]
  4333e8:	fs dec eax
  4333ea:	popa   
  4333eb:	outs   dx,BYTE PTR ds:[esi]
  4333ec:	fs ins BYTE PTR es:[edi],dx
  4333ee:	add    BYTE PTR gs:[edx+0x75],dl
  4333f2:	outs   dx,BYTE PTR ds:[esi]
  4333f3:	je     0x43345e
  4333f5:	ins    DWORD PTR es:[edi],dx
  4333f6:	gs push esp
  4333f8:	jns    0x43346a
  4333fa:	gs dec eax
  4333fc:	popa   
  4333fd:	outs   dx,BYTE PTR ds:[esi]
  4333fe:	fs ins BYTE PTR es:[edi],dx
  433400:	add    BYTE PTR gs:[ebx+0x72],al
  433404:	jns    0x433476
  433406:	je     0x433477
  433408:	push   ebx
  433409:	je     0x43347d
  43340b:	gs popa 
  43340d:	ins    DWORD PTR es:[edi],dx
  43340e:	add    BYTE PTR [ebx+0x79],dl
  433411:	jae    0x433487
  433413:	gs ins DWORD PTR es:[edi],dx
  433415:	cs push ebx
  433417:	arpl   WORD PTR gs:[ebp+0x72],si
  43341b:	imul   esi,DWORD PTR [ecx+edi*2+0x2e],0x70797243
  433423:	je     0x433494
  433425:	addr16 jb 0x433489
  433428:	jo     0x433492
  43342a:	jns    0x43342c
  43342c:	inc    ebx
  43342d:	jb     0x4334a8
  43342f:	jo     0x4334a5
  433431:	outs   dx,DWORD PTR ds:[esi]
  433432:	push   ebx
  433433:	je     0x4334a7
  433435:	gs popa 
  433437:	ins    DWORD PTR es:[edi],dx
  433438:	dec    ebp
  433439:	outs   dx,DWORD PTR ds:[esi]
  43343a:	fs add BYTE PTR gs:[ebp+eax*2+0x53],al
  433440:	inc    ebx
  433441:	jb     0x4334bc
  433443:	jo     0x4334b9
  433445:	outs   dx,DWORD PTR ds:[esi]
  433446:	push   ebx
  433447:	gs jb  0x4334c0
  43344a:	imul   esp,DWORD PTR [ebx+0x65],0x766f7250
  433451:	imul   esp,DWORD PTR [ebp+eiz*2+0x72],0x73614800
  433459:	push   0x6f676c41
  43345e:	jb     0x4334c9
  433460:	je     0x4334ca
  433462:	ins    DWORD PTR es:[edi],dx
  433463:	add    BYTE PTR [ecx+0x43],cl
  433466:	jb     0x4334e1
  433468:	jo     0x4334de
  43346a:	outs   dx,DWORD PTR ds:[esi]
  43346b:	push   esp
  43346c:	jb     0x4334cf
  43346e:	outs   dx,BYTE PTR ds:[esi]
  43346f:	jae    0x4334d7
  433471:	outs   dx,DWORD PTR ds:[esi]
  433472:	jb     0x4334e1
  433474:	add    BYTE PTR [edx+0x69],dl
  433477:	push   0x6e
  433479:	fs popa 
  43347b:	gs ins BYTE PTR es:[edi],dx
  43347d:	dec    ebp
  43347e:	popa   
  43347f:	outs   dx,BYTE PTR ds:[esi]
  433480:	popa   
  433481:	gs add BYTE PTR fs:[bp+di+0x48],dl
  433487:	inc    ecx
  433488:	xor    eax,0x614d3231
  43348d:	outs   dx,BYTE PTR ds:[esi]
  43348e:	popa   
  43348f:	gs add BYTE PTR fs:[bp+di+0x79],dl
  433495:	ins    DWORD PTR es:[edi],dx
  433496:	ins    DWORD PTR es:[edi],dx
  433497:	gs je  0x43350c
  43349a:	imul   esp,DWORD PTR [ebx+0x41],0x726f676c
  4334a1:	imul   esi,DWORD PTR [eax+ebp*2+0x6d],0x736f4800
  4334a9:	je     0x4334fb
  4334ab:	jb     0x43351c
  4334ad:	je     0x433514
  4334af:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  4334b3:	outs   dx,BYTE PTR ds:[esi]
  4334b4:	inc    ebp
  4334b5:	js     0x43351a
  4334b7:	gs jo  0x43352e
  4334ba:	imul   ebp,DWORD PTR [edi+0x6e],0x73795300
  4334c1:	je     0x433528
  4334c3:	ins    DWORD PTR es:[edi],dx
  4334c4:	cs push ebx
  4334c6:	arpl   WORD PTR gs:[ebp+0x72],si
  4334ca:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x676e6953
  4334d2:	ins    BYTE PTR es:[edi],dx
  4334d3:	add    BYTE PTR gs:[ebx+0x54],dl
  4334d7:	inc    ecx
  4334d8:	push   esp
  4334d9:	push   0x64616572
  4334de:	inc    ecx
  4334df:	je     0x433555
  4334e1:	jb     0x43354c
  4334e3:	bound  esi,QWORD PTR [ebp+0x74]
  4334e6:	add    BYTE PTR gs:[ebx+0x74],dl
  4334ea:	jb     0x433555
  4334ec:	outs   dx,BYTE PTR ds:[esi]
  4334ed:	add    BYTE PTR [di+0x6e],al
  4334f1:	arpl   WORD PTR [edi+0x64],bp
  4334f4:	imul   ebp,DWORD PTR [esi+0x67],0x73795300
  4334fb:	je     0x433562
  4334fd:	ins    DWORD PTR es:[edi],dx
  4334fe:	cs push esp
  433500:	gs js  0x433577
  433503:	add    BYTE PTR [ebx+0x74],dl
  433506:	jb     0x433571
  433508:	outs   dx,BYTE PTR ds:[esi]
  433509:	addr16 inc edx
  43350b:	jne    0x433576
  43350d:	ins    BYTE PTR es:[edi],dx
  43350e:	fs gs jb 0x433512
  433512:	dec    ebp
  433513:	outs   dx,DWORD PTR ds:[esi]
  433514:	outs   dx,BYTE PTR ds:[esi]
  433515:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x73795300
  43351d:	je     0x433584
  43351f:	ins    DWORD PTR es:[edi],dx
  433520:	cs push esp
  433522:	push   0x64616572
  433527:	imul   ebp,DWORD PTR [esi+0x67],0x72685400
  43352e:	gs popa 
  433530:	fs push ebx
  433532:	je     0x433595
  433534:	je     0x43359f
  433536:	arpl   WORD PTR [ecx+0x74],ax
  433539:	je     0x4335ad
  43353b:	imul   esp,DWORD PTR [edx+0x75],0x54006574
  433542:	jns    0x4335b4
  433544:	add    BYTE PTR gs:[ebp+0x49],dl
  433548:	outs   dx,BYTE PTR ds:[esi]
  433549:	je     0x43357c
  43354b:	add    BYTE PTR ss:[ebp+0x49],dl
  43354f:	outs   dx,BYTE PTR ds:[esi]
  433550:	je     0x433585
  433552:	xor    al,BYTE PTR [eax]
  433554:	push   esi
  433555:	outs   dx,DWORD PTR ds:[esi]
  433556:	imul   esp,DWORD PTR [eax+eax*1+0x57],0x526b6165
  43355e:	gs data16 gs jb 0x4335c8
  433563:	outs   dx,BYTE PTR ds:[esi]
  433564:	arpl   WORD PTR [ebp+0x0],sp
  433567:	inc    ecx
  433568:	jo     0x4335da
  43356a:	ins    BYTE PTR es:[edi],dx
  43356b:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  433572:	add    BYTE PTR [ecx+0x75],al
  433575:	je     0x4335e6
  433577:	push   ebx
  433578:	arpl   WORD PTR [ecx+0x6c],sp
  43357b:	gs dec ebp
  43357d:	outs   dx,DWORD PTR ds:[esi]
  43357e:	fs add BYTE PTR gs:[edx+0x6f],al
  433583:	jb     0x4335e9
  433585:	gs jb  0x4335db
  433588:	je     0x433603
  43358a:	ins    BYTE PTR es:[edi],dx
  43358b:	add    BYTE PTR gs:[edx+0x75],al
  43358f:	je     0x433605
  433591:	outs   dx,DWORD PTR ds:[esi]
  433592:	outs   dx,BYTE PTR ds:[esi]
  433593:	add    BYTE PTR [edx+0x75],al
  433596:	je     0x43360c
  433598:	outs   dx,DWORD PTR ds:[esi]
  433599:	outs   dx,BYTE PTR ds:[esi]
  43359a:	inc    edx
  43359b:	popa   
  43359c:	jae    0x433603
  43359e:	add    BYTE PTR [ebx+0x6f],al
  4335a1:	outs   dx,BYTE PTR ds:[esi]
  4335a2:	je     0x433605
  4335a4:	imul   ebp,DWORD PTR [esi+0x65],0x6e6f4372
  4335ab:	je     0x43361f
  4335ad:	outs   dx,DWORD PTR ds:[esi]
  4335ae:	ins    BYTE PTR es:[edi],dx
  4335af:	add    BYTE PTR [ebx+0x6f],al
  4335b2:	outs   dx,BYTE PTR ds:[esi]
  4335b3:	je     0x433627
  4335b5:	outs   dx,DWORD PTR ds:[esi]
  4335b6:	ins    BYTE PTR es:[edi],dx
  4335b7:	add    BYTE PTR [ebx+0x6f],al
  4335ba:	outs   dx,BYTE PTR ds:[esi]
  4335bb:	je     0x43362f
  4335bd:	outs   dx,DWORD PTR ds:[esi]
  4335be:	ins    BYTE PTR es:[edi],dx
  4335bf:	inc    ebx
  4335c0:	outs   dx,DWORD PTR ds:[esi]
  4335c1:	ins    BYTE PTR es:[edi],dx
  4335c2:	ins    BYTE PTR es:[edi],dx
  4335c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4335c8:	outs   dx,BYTE PTR ds:[esi]
  4335c9:	add    BYTE PTR [ecx+ebp*2+0x61],al
  4335cd:	ins    BYTE PTR es:[edi],dx
  4335ce:	outs   dx,DWORD PTR ds:[esi]
  4335cf:	addr16 push edx
  4335d1:	gs jae 0x433649
  4335d4:	ins    BYTE PTR es:[edi],dx
  4335d5:	je     0x4335d7
  4335d7:	inc    esi
  4335d8:	outs   dx,DWORD PTR ds:[esi]
  4335d9:	jb     0x433648
  4335db:	add    BYTE PTR [ecx+eiz*2+0x62],cl
  4335df:	gs ins BYTE PTR es:[edi],dx
  4335e1:	add    BYTE PTR [ebp+0x65],cl
  4335e4:	jae    0x433659
  4335e6:	popa   
  4335e7:	addr16 gs inc edx
  4335ea:	outs   dx,DWORD PTR ds:[esi]
  4335eb:	js     0x4335ed
  4335ed:	push   eax
  4335ee:	imul   esp,DWORD PTR [ebx+0x74],0x42657275
  4335f5:	outs   dx,DWORD PTR ds:[esi]
  4335f6:	js     0x4335f8
  4335f8:	push   eax
  4335f9:	imul   esp,DWORD PTR [ebx+0x74],0x42657275
  433600:	outs   dx,DWORD PTR ds:[esi]
  433601:	js     0x433656
  433603:	imul   edi,DWORD PTR [edx+0x65],0x65646f4d
  43360a:	add    BYTE PTR [ebp+eiz*2+0x78],dl
  43360e:	je     0x433652
  433610:	outs   dx,DWORD PTR ds:[esi]
  433611:	js     0x433613
  433613:	push   esp
  433614:	gs js  0x43368b
  433617:	inc    edx
  433618:	outs   dx,DWORD PTR ds:[esi]
  433619:	js     0x43365d
  43361b:	popa   
  43361c:	jae    0x433683
  43361e:	add    BYTE PTR [ecx*2+0x6c75646f],bh
  433625:	gs add BYTE PTR ds:[ecx],al
  433629:	add    BYTE PTR [ecx+0x0],al
  43362c:	inc    ecx
  43362d:	jae    0x4336a2
  43362f:	gs ins DWORD PTR es:[edi],dx
  433631:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  433635:	outs   dx,BYTE PTR ds:[esi]
  433636:	outs   dx,WORD PTR ds:[esi]
  433638:	inc    ecx
  433639:	je     0x4336af
  43363b:	jb     0x4336a6
  43363d:	bound  esi,QWORD PTR [ebp+0x74]
  433640:	add    BYTE PTR gs:[edx],al
  433643:	add    BYTE PTR ds:0x3000600,cl
  433649:	add    BYTE PTR [eax+eax*1],al
  43364c:	add    eax,0x46003160
  433651:	outs   dx,DWORD PTR ds:[esi]
  433652:	jb     0x4336c1
  433654:	xor    DWORD PTR [eax],eax
  433656:	push   esp
  433657:	popa   
  433658:	jae    0x4336c5
  43365a:	dec    ebp
  43365b:	popa   
  43365c:	outs   dx,BYTE PTR ds:[esi]
  43365d:	popa   
  43365e:	addr16 gs jb 0x433662
  433662:	pop    es
  433663:	add    BYTE PTR [ebx+0x72],al
  433666:	arpl   WORD PTR [ebx],si
  433668:	xor    al,BYTE PTR [eax]
  43366a:	or     BYTE PTR [eax],al
  43366c:	dec    ebp
  43366d:	jns    0x4336c2
  43366f:	gs je  0x4336e6
  433672:	imul   ebp,DWORD PTR [esi+0x67],0x61540073
  433679:	jae    0x4336e6
  43367b:	dec    ebp
  43367c:	popa   
  43367d:	outs   dx,BYTE PTR ds:[esi]
  43367e:	popa   
  43367f:	addr16 gs jb 0x4336b1
  433683:	dec    ebp
  433684:	jns    0x433686
  433686:	or     al,0x0
  433688:	or     DWORD PTR [eax],eax
  43368a:	or     eax,DWORD PTR [eax]
  43368c:	or     al,BYTE PTR [eax]
  43368e:	str    WORD PTR [esi]
  433691:	add    BYTE PTR [esi],ch
  433693:	arpl   WORD PTR [ebx+0x74],sp
  433696:	outs   dx,DWORD PTR ds:[esi]
  433697:	jb     0x433699
  433699:	arpl   WORD PTR cs:[edi+ebp*2+0x72],si
  43369e:	add    BYTE PTR [edi+0x6e],cl
  4336a1:	inc    ebx
  4336a2:	jb     0x433709
  4336a4:	popa   
  4336a5:	je     0x43370c
  4336a7:	dec    ebp
  4336a8:	popa   
  4336a9:	imul   ebp,DWORD PTR [esi+0x46],0x6d726f
  4336b0:	jae    0x433726
  4336b2:	jb     0x4336b4
  4336b4:	add    eax,0x74656700
  4336b9:	pop    edi
  4336ba:	push   es
  4336bb:	add    BYTE PTR [edi+0x65],ah
  4336be:	je     0x43371f
  4336c0:	pop    es
  4336c1:	add    BYTE PTR [edi+0x65],ah
  4336c4:	je     0x433725
  4336c6:	or     BYTE PTR [eax],al
  4336c8:	addr16 gs je 0x43372b
  4336cc:	or     DWORD PTR [eax],eax
  4336ce:	addr16 gs je 0x433731
  4336d2:	or     al,BYTE PTR [eax]
  4336d4:	addr16 gs je 0x433737
  4336d8:	add    eax,DWORD PTR [eax]
  4336da:	jae    0x433741
  4336dc:	je     0x43373d
  4336de:	add    eax,DWORD PTR [eax]
  4336e0:	inc    ebp
  4336e1:	jno    0x433758
  4336e3:	popa   
  4336e4:	ins    BYTE PTR es:[edi],dx
  4336e5:	jae    0x4336e7
  4336e7:	outs   dx,DWORD PTR ds:[esi]
  4336e8:	add    BYTE PTR [edi+0x65],al
  4336eb:	je     0x433735
  4336ed:	popa   
  4336ee:	jae    0x433758
  4336f0:	inc    ebx
  4336f1:	outs   dx,DWORD PTR ds:[esi]
  4336f2:	fs add BYTE PTR gs:[edi+ebp*2+0x53],dl
  4336f8:	je     0x43376c
  4336fa:	imul   ebp,DWORD PTR [esi+0x67],0x74656700
  433701:	pop    edi
  433702:	add    al,BYTE PTR [eax]
  433704:	adc    BYTE PTR [eax],al
  433706:	adc    DWORD PTR [eax],eax
  433708:	adc    al,BYTE PTR [eax]
  43370a:	pop    ds
  43370b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  43370f:	jo     0x433780
  433711:	jae    0x433778
  433713:	add    BYTE PTR [ecx+ebp*2+0x73],ah
  433717:	jo     0x433788
  433719:	jae    0x433784
  43371b:	outs   dx,BYTE PTR ds:[esi]
  43371c:	add    BYTE PTR [bx+si],ah
  43371f:	add    BYTE PTR [edi+0x65],ah
  433722:	je     0x433783
  433724:	adc    eax,DWORD PTR [eax]
  433726:	jae    0x43378d
  433728:	je     0x433789
  43372a:	adc    eax,DWORD PTR [eax]
  43372c:	addr16 gs je 0x43378f
  433730:	adc    al,0x0
  433732:	jae    0x433799
  433734:	je     0x433795
  433736:	adc    al,0x0
  433738:	addr16 gs je 0x43379b
  43373c:	adc    eax,0x74657300
  433741:	pop    edi
  433742:	adc    eax,0x74656700
  433747:	pop    edi
  433748:	push   ss
  433749:	add    BYTE PTR [ebx+0x65],dh
  43374c:	je     0x4337ad
  43374e:	push   ss
  43374f:	add    BYTE PTR [edi+0x65],ah
  433752:	je     0x4337b3
  433754:	pop    ss
  433755:	add    BYTE PTR [ebx+0x65],dh
  433758:	je     0x4337b9
  43375a:	pop    ss
  43375b:	add    BYTE PTR [edi+0x65],ah
  43375e:	je     0x4337bf
  433760:	sbb    BYTE PTR [eax],al
  433762:	jae    0x4337c9
  433764:	je     0x4337c5
  433766:	sbb    BYTE PTR [eax],al
  433768:	addr16 gs je 0x4337cb
  43376c:	sbb    DWORD PTR [eax],eax
  43376e:	jae    0x4337d5
  433770:	je     0x4337d1
  433772:	sbb    DWORD PTR [eax],eax
  433774:	addr16 gs je 0x4337d7
  433778:	sbb    al,BYTE PTR [eax]
  43377a:	jae    0x4337e1
  43377c:	je     0x4337dd
  43377e:	sbb    al,BYTE PTR [eax]
  433780:	addr16 gs je 0x4337e3
  433784:	sbb    eax,DWORD PTR [eax]
  433786:	jae    0x4337ed
  433788:	je     0x4337e9
  43378a:	sbb    eax,DWORD PTR [eax]
  43378c:	addr16 gs je 0x4337ef
  433790:	sbb    al,0x0
  433792:	jae    0x4337f9
  433794:	je     0x4337f5
  433796:	sbb    al,0x0
  433798:	addr16 gs je 0x4337fb
  43379c:	sbb    eax,0x74657300
  4337a1:	pop    edi
  4337a2:	sbb    eax,0x74656700
  4337a7:	pop    edi
  4337a8:	push   ds
  4337a9:	add    BYTE PTR [ebx+0x65],dh
  4337ac:	je     0x43380d
  4337ae:	push   ds
  4337af:	add    BYTE PTR [ecx],al
  4337b1:	add    al,BYTE PTR [eax]
  4337b3:	fs ins BYTE PTR es:[edi],dx
  4337b5:	inc    esp
  4337b6:	gs jae 0x433824
  4337b9:	je     0x43382a
  4337bb:	jo     0x433803
  4337bd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x614d6c64
  4337c5:	imul   ebp,DWORD PTR [esi+0x46],0x656c69
  4337cc:	inc    edi
  4337cd:	gs je  0x433845
  4337d0:	dec    ecx
  4337d1:	inc    esp
  4337d2:	add    BYTE PTR [edi+0x65],al
  4337d5:	je     0x433819
  4337d7:	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0x64416e69
  4337df:	fs jb  0x433847
  4337e2:	jae    0x433857
  4337e4:	add    BYTE PTR [ebp+0x73],dl
  4337e7:	gs inc edx
  4337e9:	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0x64416e69
  4337f1:	fs jb  0x433859
  4337f4:	jae    0x433869
  4337f6:	add    BYTE PTR [edi+0x65],ah
  4337f9:	je     0x43384b
  4337fb:	popa   
  4337fc:	jae    0x433871
  4337fe:	ja     0x43386f
  433800:	jb     0x433866
  433802:	add    BYTE PTR [ebp+0x6e],al
  433805:	arpl   WORD PTR [edx+0x79],si
  433808:	jo     0x43387e
  43380a:	inc    esi
  43380b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x74615000
  433813:	push   0x74787400
  433818:	push   eax
  433819:	popa   
  43381a:	jae    0x43388f
  43381c:	inc    ebp
  43381d:	outs   dx,BYTE PTR ds:[esi]
  43381e:	arpl   WORD PTR [edx+0x79],si
  433821:	jo     0x433897
  433823:	push   edx
  433824:	popa   
  433825:	ja     0x433827
  433827:	inc    esp
  433828:	arpl   WORD PTR gs:[edx+0x79],si
  43382c:	jo     0x4338a2
  43382e:	inc    esi
  43382f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x63654400
  433837:	jb     0x4338b2
  433839:	jo     0x4338af
  43383b:	dec    ebx
  43383c:	gs jns 0x43383f
  43383f:	add    al,BYTE PTR [edx]
  433841:	add    BYTE PTR [ebx],al
  433843:	add    al,BYTE PTR [eax]
  433845:	add    al,0x2
  433847:	add    BYTE PTR [edi+0x65],al
  43384a:	je     0x433899
  43384c:	inc    ecx
  43384d:	inc    ebx
  43384e:	add    BYTE PTR ds:0x2060002,al
  433854:	add    BYTE PTR [esi+0x61],dh
  433857:	ins    BYTE PTR es:[edi],dx
  433858:	jne    0x4338bf
  43385a:	pop    edi
  43385b:	pop    edi
  43385c:	add    BYTE PTR [ebx+0x6f],al
  43385f:	ins    DWORD PTR es:[edi],dx
  433860:	jo     0x4338d7
  433862:	je     0x4338c9
  433864:	inc    ebx
  433865:	push   0x736b6365
  43386a:	jne    0x4338d9
  43386c:	add    BYTE PTR [edx+0x79],ah
  43386f:	je     0x4338d6
  433871:	jae    0x433873
  433873:	push   ebx
  433874:	je     0x4338e8
  433876:	add    BYTE PTR [edi+0x65],ah
  433879:	je     0x4338da
  43387b:	push   edx
  43387c:	gs jae 0x4338ee
  43387f:	jne    0x4338f3
  433881:	arpl   WORD PTR [ebp+0x4d],sp
  433884:	popa   
  433885:	outs   dx,BYTE PTR ds:[esi]
  433886:	popa   
  433887:	addr16 gs jb 0x43388b
  43388b:	addr16 gs je 0x4338ee
  43388f:	inc    ebx
  433890:	jne    0x4338fe
  433892:	je     0x433909
  433894:	jb     0x4338fb
  433896:	add    BYTE PTR [ebx+0x65],dh
  433899:	je     0x4338fa
  43389b:	inc    ebx
  43389c:	jne    0x43390a
  43389e:	je     0x433915
  4338a0:	jb     0x433907
  4338a2:	add    BYTE PTR [esi+0x61],dl
  4338a5:	ins    BYTE PTR es:[edi],dx
  4338a6:	jne    0x43390d
  4338a8:	add    BYTE PTR [ebp+eiz*2+0x66],ah
  4338ac:	popa   
  4338ad:	jne    0x43391b
  4338af:	je     0x4338fa
  4338b1:	outs   dx,BYTE PTR ds:[esi]
  4338b2:	jae    0x433928
  4338b4:	popa   
  4338b5:	outs   dx,BYTE PTR ds:[esi]
  4338b6:	arpl   WORD PTR [ebp+0x0],sp
  4338b9:	popa   
  4338ba:	fs fs gs fs dec eax
  4338bf:	popa   
  4338c0:	outs   dx,BYTE PTR ds:[esi]
  4338c1:	fs ins BYTE PTR es:[edi],dx
  4338c3:	gs jb  0x4338c6
  4338c6:	popa   
  4338c7:	fs fs gs fs dec eax
  4338cc:	popa   
  4338cd:	outs   dx,BYTE PTR ds:[esi]
  4338ce:	fs ins BYTE PTR es:[edi],dx
  4338d0:	gs jb  0x43391f
  4338d3:	outs   dx,DWORD PTR ds:[esi]
  4338d4:	arpl   WORD PTR [ebx+0x4f],bp
  4338d7:	bound  ebp,QWORD PTR [edx+0x65]
  4338da:	arpl   WORD PTR [eax+eax*1+0x41],si
  4338de:	jne    0x433954
  4338e0:	outs   dx,DWORD PTR ds:[esi]
  4338e1:	push   ebx
  4338e2:	popa   
  4338e3:	jbe    0x43394a
  4338e5:	push   ebx
  4338e6:	gs je  0x43395d
  4338e9:	imul   ebp,DWORD PTR [esi+0x67],0x65730073
  4338f0:	outs   dx,BYTE PTR ds:[esi]
  4338f1:	fs gs jb 0x4338f5
  4338f5:	add    BYTE PTR gs:[edi+0x65],ah
  4338f9:	je     0x43395a
  4338fb:	inc    esp
  4338fc:	gs popaw 
  4338ff:	jne    0x43396d
  433901:	je     0x433903
  433903:	addr16 gs je 0x433966
  433907:	push   ebx
  433908:	gs je  0x43397f
  43390b:	imul   ebp,DWORD PTR [esi+0x67],0x75430073
  433912:	ins    BYTE PTR es:[edi],dx
  433913:	je     0x43398a
  433915:	jb     0x43397c
  433917:	add    BYTE PTR [ebp+eiz*2+0x66],al
  43391b:	popa   
  43391c:	jne    0x43398a
  43391e:	je     0x433920
  433920:	push   ebx
  433921:	gs je  0x433998
  433924:	imul   ebp,DWORD PTR [esi+0x67],0x65730073
  43392b:	je     0x43398c
  43392d:	dec    ecx
  43392e:	jae    0x433983
  433930:	imul   ebp,DWORD PTR [esi+0x67],0x6e49656c
  433937:	jae    0x4339ad
  433939:	popa   
  43393a:	outs   dx,BYTE PTR ds:[esi]
  43393b:	arpl   WORD PTR [ebp+0x0],sp
  43393e:	jae    0x4339a5
  433940:	je     0x4339a1
  433942:	inc    ebp
  433943:	outs   dx,BYTE PTR ds:[esi]
  433944:	popa   
  433945:	bound  ebp,QWORD PTR [ebp+eiz*2+0x56]
  433949:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  433950:	jns    0x4339be
  433952:	gs jae 0x433955
  433955:	jae    0x4339bc
  433957:	je     0x4339b8
  433959:	push   ebx
  43395a:	popa   
  43395b:	jbe    0x4339c2
  43395d:	dec    ebp
  43395e:	jns    0x4339b3
  433960:	gs je  0x4339d7
  433963:	imul   ebp,DWORD PTR [esi+0x67],0x456e4f73
  43396a:	js     0x4339d5
  43396c:	je     0x43396e
  43396e:	jae    0x4339d5
  433970:	je     0x4339d1
  433972:	push   ebx
  433973:	push   0x6f647475
  433978:	ja     0x4339e8
  43397a:	push   ebx
  43397b:	je     0x4339f6
  43397d:	ins    BYTE PTR es:[edi],dx
  43397e:	add    BYTE PTR gs:[ebp+0x6e],al
  433982:	je     0x4339e9
  433984:	jb     0x433986
  433986:	addr16 gs je 0x4339e9
  43398a:	inc    ebx
  43398b:	outs   dx,DWORD PTR ds:[esi]
  43398c:	jne    0x4339fc
  43398e:	je     0x433990
  433990:	addr16 gs je 0x4339f3
  433994:	inc    ebx
  433995:	popa   
  433996:	jo     0x4339f9
  433998:	arpl   WORD PTR [ecx+0x74],bp
  43399b:	jns    0x43399d
  43399d:	addr16 gs je 0x433a00
  4339a1:	dec    ecx
  4339a2:	je     0x433a09
  4339a4:	ins    DWORD PTR es:[edi],dx
  4339a5:	add    BYTE PTR [edi+0x65],ah
  4339a8:	je     0x433a09
  4339aa:	dec    ecx
  4339ab:	jae    0x4339ee
  4339ad:	ins    BYTE PTR es:[edi],dx
  4339ae:	imul   esi,DWORD PTR [esi+0x65],0x74657300
  4339b5:	pop    edi
  4339b6:	dec    ecx
  4339b7:	je     0x433a1e
  4339b9:	ins    DWORD PTR es:[edi],dx
  4339ba:	add    BYTE PTR [edx+0x65],dl
  4339bd:	ins    DWORD PTR es:[edi],dx
  4339be:	outs   dx,DWORD PTR ds:[esi]
  4339bf:	jbe    0x433a26
  4339c1:	push   edx
  4339c2:	popa   
  4339c3:	outs   dx,BYTE PTR ds:[esi]
  4339c4:	add    BYTE PTR gs:[bp+di+0x65],dh
  4339c9:	je     0x433a2a
  4339cb:	inc    ebx
  4339cc:	popa   
  4339cd:	jo     0x433a30
  4339cf:	arpl   WORD PTR [ecx+0x74],bp
  4339d2:	jns    0x4339d4
  4339d4:	inc    edi
  4339d5:	gs je  0x433a27
  4339d8:	bound  ebp,QWORD PTR [edx+0x65]
  4339db:	arpl   WORD PTR [esi+edx*2+0x61],si
  4339df:	ins    BYTE PTR es:[edi],dx
  4339e0:	jne    0x433a47
  4339e2:	add    BYTE PTR [ecx+0x64],al
  4339e5:	add    BYTE PTR fs:[ebp+0x78],al
  4339e9:	imul   esi,DWORD PTR [eax+eax*1+0x67],0x555f7465
  4339f1:	jae    0x433a58
  4339f3:	inc    ebx
  4339f4:	outs   dx,DWORD PTR ds:[esi]
  4339f5:	ins    DWORD PTR es:[edi],dx
  4339f6:	jo     0x433a59
  4339f8:	je     0x433a63
  4339fa:	bound  ebp,QWORD PTR [ebp+eiz*2+0x54]
  4339fe:	gs js  0x433a75
  433a01:	push   edx
  433a02:	outs   dx,BYTE PTR gs:[esi]
  433a04:	fs gs jb 0x433a71
  433a08:	outs   dx,BYTE PTR ds:[esi]
  433a09:	add    BYTE PTR [bp+di+0x65],dl
  433a0d:	je     0x433a52
  433a0f:	outs   dx,DWORD PTR ds:[esi]
  433a10:	ins    DWORD PTR es:[edi],dx
  433a11:	jo     0x433a74
  433a13:	je     0x433a7e
  433a15:	bound  ebp,QWORD PTR [ebp+eiz*2+0x54]
  433a19:	gs js  0x433a90
  433a1c:	push   edx
  433a1d:	outs   dx,BYTE PTR gs:[esi]
  433a1f:	fs gs jb 0x433a8c
  433a23:	outs   dx,BYTE PTR ds:[esi]
  433a24:	addr16 inc esp
  433a26:	gs popaw 
  433a29:	jne    0x433a97
  433a2b:	je     0x433a2d
  433a2d:	push   edx
  433a2e:	jne    0x433a9e
  433a30:	add    BYTE PTR [ebx+0x65],dh
  433a33:	je     0x433a94
  433a35:	dec    ebp
  433a36:	popa   
  433a37:	imul   ebp,DWORD PTR [esi+0x46],0x6d726f
  433a3e:	addr16 gs je 0x433aa1
  433a42:	inc    ebx
  433a43:	jne    0x433ab7
  433a45:	jb     0x433aac
  433a47:	outs   dx,BYTE PTR ds:[esi]
  433a48:	je     0x433a8e
  433a4a:	outs   dx,DWORD PTR ds:[esi]
  433a4b:	ins    DWORD PTR es:[edi],dx
  433a4c:	popa   
  433a4d:	imul   ebp,DWORD PTR [esi+0x0],0x5f646461
  433a54:	push   edx
  433a55:	gs jae 0x433ac7
  433a58:	jne    0x433acc
  433a5a:	arpl   WORD PTR [ebp+0x52],sp
  433a5d:	gs jae 0x433acf
  433a60:	ins    BYTE PTR es:[edi],dx
  433a61:	jbe    0x433ac8
  433a63:	add    BYTE PTR [ecx+0x64],ah
  433a66:	fs pop edi
  433a68:	inc    ecx
  433a69:	jae    0x433ade
  433a6b:	gs ins DWORD PTR es:[edi],dx
  433a6d:	bound  ebp,QWORD PTR [ecx+edi*2+0x52]
  433a71:	gs jae 0x433ae3
  433a74:	ins    BYTE PTR es:[edi],dx
  433a75:	jbe    0x433adc
  433a77:	add    BYTE PTR [edi+0x65],al
  433a7a:	je     0x433ac1
  433a7c:	js     0x433ae3
  433a7e:	arpl   WORD PTR [ebp+0x74],si
  433a81:	imul   ebp,DWORD PTR [esi+0x67],0x65737341
  433a88:	ins    DWORD PTR es:[edi],dx
  433a89:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  433a8d:	dec    esp
  433a8e:	outs   dx,DWORD PTR ds:[esi]
  433a8f:	popa   
  433a90:	add    BYTE PTR fs:[edi+0x65],ah
  433a94:	je     0x433af5
  433a96:	dec    esi
  433a97:	popa   
  433a98:	ins    DWORD PTR es:[edi],dx
  433a99:	add    BYTE PTR gs:[ebx+0x74],dl
  433a9d:	popa   
  433a9e:	jb     0x433b14
  433aa0:	jae    0x433af9
  433aa2:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x4d746547
  433aaa:	popa   
  433aab:	outs   dx,BYTE PTR ds:[esi]
  433aac:	imul   esp,DWORD PTR [esi+0x65],0x65527473
  433ab3:	jae    0x433b24
  433ab5:	jne    0x433b29
  433ab7:	arpl   WORD PTR [ebp+0x53],sp
  433aba:	je     0x433b2e
  433abc:	gs popa 
  433abe:	ins    DWORD PTR es:[edi],dx
  433abf:	add    BYTE PTR [edi+0x65],ah
  433ac2:	je     0x433b23
  433ac4:	inc    esi
  433ac5:	jne    0x433b33
  433ac7:	ins    BYTE PTR es:[edi],dx
  433ac8:	dec    esi
  433ac9:	popa   
  433aca:	ins    DWORD PTR es:[edi],dx
  433acb:	add    BYTE PTR gs:[ecx+0x6e],cl
  433acf:	fs gs js 0x433b22
  433ad3:	data16 add BYTE PTR [ebx+0x75],dl
  433ad7:	bound  esi,QWORD PTR [ebx+0x74]
  433ada:	jb     0x433b45
  433adc:	outs   dx,BYTE PTR ds:[esi]
  433add:	add    BYTE PTR [bp+di+0x6f],al
  433ae1:	outs   dx,BYTE PTR ds:[esi]
  433ae2:	arpl   WORD PTR [ecx+0x74],sp
  433ae5:	add    BYTE PTR [edi+0x65],al
  433ae8:	je     0x433b37
  433aea:	popa   
  433aeb:	outs   dx,BYTE PTR ds:[esi]
  433aec:	imul   esp,DWORD PTR [esi+0x65],0x65527473
  433af3:	jae    0x433b64
  433af5:	jne    0x433b69
  433af7:	arpl   WORD PTR [ebp+0x4e],sp
  433afa:	popa   
  433afb:	ins    DWORD PTR es:[edi],dx
  433afc:	gs jae 0x433aff
  433aff:	outs   dx,DWORD PTR ds:[esi]
  433b00:	jo     0x433b61
  433b02:	inc    ebp
  433b03:	jno    0x433b7a
  433b05:	popa   
  433b06:	ins    BYTE PTR es:[edi],dx
  433b07:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x5f746567
  433b0f:	dec    ecx
  433b10:	jae    0x433b56
  433b12:	imul   esi,DWORD PTR [ebx+0x70],0x6465736f
  433b19:	add    BYTE PTR [edi+0x65],al
  433b1c:	je     0x433b72
  433b1e:	jns    0x433b90
  433b20:	gs inc esi
  433b22:	jb     0x433b93
  433b24:	ins    DWORD PTR es:[edi],dx
  433b25:	dec    eax
  433b26:	popa   
  433b27:	outs   dx,BYTE PTR ds:[esi]
  433b28:	fs ins BYTE PTR es:[edi],dx
  433b2a:	add    BYTE PTR gs:[ebx+0x6f],al
  433b2e:	outs   dx,BYTE PTR ds:[esi]
  433b2f:	je     0x433b92
  433b31:	imul   ebp,DWORD PTR [esi+0x73],0x79654b
  433b38:	inc    edi
  433b39:	gs je  0x433b8e
  433b3c:	gs jae 0x433bae
  433b3f:	jne    0x433bb3
  433b41:	arpl   WORD PTR [ebp+0x53],sp
  433b44:	je     0x433bb8
  433b46:	imul   ebp,DWORD PTR [esi+0x67],0x65724300
  433b4d:	popa   
  433b4e:	je     0x433bb5
  433b50:	dec    ecx
  433b51:	outs   dx,BYTE PTR ds:[esi]
  433b52:	jae    0x433bc8
  433b54:	popa   
  433b55:	outs   dx,BYTE PTR ds:[esi]
  433b56:	arpl   WORD PTR [ebp+0x0],sp
  433b59:	push   ebx
  433b5a:	gs je  0x433bad
  433b5d:	jb     0x433bce
  433b5f:	push   0x65
  433b61:	arpl   WORD PTR [ebp+eax*2+0x72],si
  433b65:	jb     0x433bd6
  433b67:	jb     0x433b69
  433b69:	addr16 gs je 0x433bcc
  433b6d:	dec    ecx
  433b6e:	outs   dx,BYTE PTR ds:[esi]
  433b6f:	outs   dx,BYTE PTR ds:[esi]
  433b70:	gs jb  0x433bb8
  433b73:	js     0x433bd8
  433b75:	gs jo  0x433bec
  433b78:	imul   ebp,DWORD PTR [edi+0x6e],0x74656700
  433b7f:	pop    edi
  433b80:	dec    ebp
  433b81:	gs jae 0x433bf7
  433b84:	popa   
  433b85:	add    BYTE PTR gs:[bp+di+0x6c],al
  433b8a:	gs popa 
  433b8c:	jb     0x433bde
  433b8e:	jb     0x433bff
  433b90:	push   0x65
  433b92:	arpl   WORD PTR [ebp+eax*2+0x72],si
  433b96:	jb     0x433c07
  433b98:	jb     0x433b9a
  433b9a:	push   edx
  433b9b:	gs ins DWORD PTR es:[edi],dx
  433b9d:	outs   dx,DWORD PTR ds:[esi]
  433b9e:	jbe    0x433c05
  433ba0:	add    BYTE PTR [ecx+0x64],ah
  433ba3:	fs pop edi
  433ba5:	dec    esp
  433ba6:	outs   dx,DWORD PTR ds:[esi]
  433ba7:	popa   
  433ba8:	add    BYTE PTR fs:[edx+0x65],al
  433bac:	imul   ebp,DWORD PTR [bp+0x49],0x74696e
  433bb4:	push   ebx
  433bb5:	jne    0x433c2a
  433bb7:	jo     0x433c1e
  433bb9:	outs   dx,BYTE PTR ds:[esi]
  433bba:	fs dec esp
  433bbc:	popa   
  433bbd:	jns    0x433c2e
  433bbf:	jne    0x433c35
  433bc1:	add    BYTE PTR [edi+0x65],ah
  433bc4:	je     0x433c25
  433bc6:	push   eax
  433bc7:	popa   
  433bc8:	ins    BYTE PTR es:[edi],dx
  433bc9:	gs inc edi
  433bcb:	jb     0x433c32
  433bcd:	outs   dx,BYTE PTR gs:[esi]
  433bcf:	add    BYTE PTR [ebx+0x65],dh
  433bd2:	je     0x433c33
  433bd4:	inc    edx
  433bd5:	popa   
  433bd6:	arpl   WORD PTR [ebx+0x43],bp
  433bd9:	outs   dx,DWORD PTR ds:[esi]
  433bda:	ins    BYTE PTR es:[edi],dx
  433bdb:	outs   dx,DWORD PTR ds:[esi]
  433bdc:	jb     0x433bde
  433bde:	jae    0x433c45
  433be0:	je     0x433c41
  433be2:	inc    esi
  433be3:	outs   dx,DWORD PTR ds:[esi]
  433be4:	outs   dx,BYTE PTR ds:[esi]
  433be5:	je     0x433be7
  433be7:	jae    0x433c4e
  433be9:	je     0x433c4a
  433beb:	dec    esp
  433bec:	outs   dx,DWORD PTR ds:[esi]
  433bed:	arpl   WORD PTR [ecx+0x74],sp
  433bf0:	imul   ebp,DWORD PTR [edi+0x6e],0x74657300
  433bf7:	pop    edi
  433bf8:	dec    esi
  433bf9:	popa   
  433bfa:	ins    DWORD PTR es:[edi],dx
  433bfb:	add    BYTE PTR gs:[ebx+0x65],dh
  433bff:	je     0x433c60
  433c01:	push   ebx
  433c02:	imul   edi,DWORD PTR [edx+0x65],0x74657300
  433c09:	pop    edi
  433c0a:	push   esp
  433c0b:	popa   
  433c0c:	bound  ecx,QWORD PTR [ecx+0x6e]
  433c0f:	fs gs js 0x433c13
  433c13:	jae    0x433c7a
  433c15:	je     0x433c76
  433c17:	push   esp
  433c18:	gs js  0x433c8f
  433c1b:	add    BYTE PTR [ebx+0x65],dh
  433c1e:	je     0x433c7f
  433c20:	push   ebp
  433c21:	jae    0x433c88
  433c23:	push   esi
  433c24:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  433c2b:	jns    0x433c99
  433c2d:	gs inc edx
  433c2f:	popa   
  433c30:	arpl   WORD PTR [ebx+0x43],bp
  433c33:	outs   dx,DWORD PTR ds:[esi]
  433c34:	ins    BYTE PTR es:[edi],dx
  433c35:	outs   dx,DWORD PTR ds:[esi]
  433c36:	jb     0x433c38
  433c38:	addr16 gs je 0x433c9b
  433c3c:	inc    edi
  433c3d:	popa   
  433c3e:	imul   ebp,DWORD PTR [esi+0x73],0x6f726f62
  433c45:	add    BYTE PTR [edi+0x65],al
  433c48:	je     0x433c99
  433c4a:	bound  ebp,QWORD PTR [edx+0x65]
  433c4d:	arpl   WORD PTR [eax+eax*1+0x73],si
  433c51:	gs je  0x433cb3
  433c54:	dec    ecx
  433c55:	ins    DWORD PTR es:[edi],dx
  433c56:	popa   
  433c57:	add    BYTE PTR gs:[bp+di+0x65],dh
  433c5c:	je     0x433cbd
  433c5e:	push   ebx
  433c5f:	imul   edi,DWORD PTR [edx+0x65],0x65646f4d
  433c66:	add    BYTE PTR [ebx+0x65],dh
  433c69:	je     0x433cca
  433c6b:	push   esp
  433c6c:	popa   
  433c6d:	bound  edx,QWORD PTR [ebx+0x74]
  433c70:	outs   dx,DWORD PTR ds:[esi]
  433c71:	jo     0x433c73
  433c73:	jae    0x433cda
  433c75:	je     0x433cd6
  433c77:	inc    ecx
  433c78:	jne    0x433cee
  433c7a:	outs   dx,DWORD PTR ds:[esi]
  433c7b:	push   ebx
  433c7c:	imul   edi,DWORD PTR [edx+0x65],0x74656700
  433c83:	pop    edi
  433c84:	push   edx
  433c85:	gs add BYTE PTR fs:[ebx+0x65],dh
  433c8a:	je     0x433ceb
  433c8c:	inc    esi
  433c8d:	outs   dx,DWORD PTR ds:[esi]
  433c8e:	jb     0x433cf5
  433c90:	inc    ebx
  433c91:	outs   dx,DWORD PTR ds:[esi]
  433c92:	ins    BYTE PTR es:[edi],dx
  433c93:	outs   dx,DWORD PTR ds:[esi]
  433c94:	jb     0x433c96
  433c96:	addr16 gs je 0x433cf9
  433c9a:	push   edi
  433c9b:	push   0x657469
  433ca0:	jae    0x433d07
  433ca2:	je     0x433d03
  433ca4:	inc    edx
  433ca5:	outs   dx,DWORD PTR ds:[esi]
  433ca6:	jb     0x433d0c
  433ca8:	gs jb  0x433cfe
  433cab:	je     0x433d26
  433cad:	ins    BYTE PTR es:[edi],dx
  433cae:	add    BYTE PTR gs:[ebx+0x65],dh
  433cb2:	je     0x433d13
  433cb4:	dec    ebp
  433cb5:	jne    0x433d23
  433cb7:	je     0x433d22
  433cb9:	ins    BYTE PTR es:[edi],dx
  433cba:	imul   ebp,DWORD PTR [esi+0x65],0x74657300
  433cc1:	pop    edi
  433cc2:	push   edx
  433cc3:	gs popa 
  433cc5:	fs dec edi
  433cc7:	outs   dx,BYTE PTR ds:[esi]
  433cc8:	ins    BYTE PTR es:[edi],dx
  433cc9:	jns    0x433ccb
  433ccb:	inc    edi
  433ccc:	gs je  0x433d22
  433ccf:	je     0x433d43
  433cd1:	imul   ebp,DWORD PTR [esi+0x67],0x6f724600
  433cd8:	ins    DWORD PTR es:[edi],dx
  433cd9:	inc    ecx
  433cda:	jb     0x433d43
  433cdc:	bound  eax,QWORD PTR [eax]
  433cde:	addr16 gs je 0x433d41
  433ce2:	dec    ebp
  433ce3:	outs   dx,BYTE PTR gs:[esi]
  433ce5:	jne    0x433d2f
  433ce7:	imul   esp,DWORD PTR [edi+0x68],0x6867696c
  433cee:	je     0x433cf0
  433cf0:	addr16 gs je 0x433d53
  433cf4:	inc    edx
  433cf5:	ins    BYTE PTR es:[edi],dx
  433cf6:	popa   
  433cf7:	arpl   WORD PTR [ebx+0x0],bp
  433cfa:	jae    0x433d61
  433cfc:	je     0x433d5d
  433cfe:	inc    ecx
  433cff:	jne    0x433d75
  433d01:	outs   dx,DWORD PTR ds:[esi]
  433d02:	push   ebx
  433d03:	arpl   WORD PTR [ecx+0x6c],sp
  433d06:	gs inc esp
  433d08:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  433d0f:	outs   dx,BYTE PTR ds:[esi]
  433d10:	jae    0x433d12
  433d12:	jae    0x433d79
  433d14:	je     0x433d75
  433d16:	inc    ecx
  433d17:	jne    0x433d8d
  433d19:	outs   dx,DWORD PTR ds:[esi]
  433d1a:	push   ebx
  433d1b:	arpl   WORD PTR [ecx+0x6c],sp
  433d1e:	gs dec ebp
  433d20:	outs   dx,DWORD PTR ds:[esi]
  433d21:	fs add BYTE PTR gs:[ebx+0x65],dh
  433d26:	je     0x433d87
  433d28:	inc    ecx
  433d29:	jne    0x433d9f
  433d2b:	outs   dx,DWORD PTR ds:[esi]
  433d2c:	push   ebx
  433d2d:	arpl   WORD PTR [edx+0x6f],si
  433d30:	ins    BYTE PTR es:[edi],dx
  433d31:	ins    BYTE PTR es:[edi],dx
  433d32:	add    BYTE PTR [ebx+0x65],dh
  433d35:	je     0x433d96
  433d37:	inc    ebx
  433d38:	ins    BYTE PTR es:[edi],dx
  433d39:	imul   esp,DWORD PTR [ebp+0x6e],0x7a695374
  433d40:	add    BYTE PTR gs:[edi+0x65],ah
  433d44:	je     0x433da5
  433d46:	inc    ebx
  433d47:	outs   dx,DWORD PTR ds:[esi]
  433d48:	outs   dx,BYTE PTR ds:[esi]
  433d49:	je     0x433dbd
  433d4b:	outs   dx,DWORD PTR ds:[esi]
  433d4c:	ins    BYTE PTR es:[edi],dx
  433d4d:	jae    0x433d4f
  433d4f:	jae    0x433db6
  433d51:	je     0x433db2
  433d53:	dec    ecx
  433d54:	arpl   WORD PTR [edi+0x6e],bp
  433d57:	add    BYTE PTR [ebp+0x6e],al
  433d5a:	fs dec ecx
  433d5c:	outs   dx,BYTE PTR ds:[esi]
  433d5d:	imul   esi,DWORD PTR [eax+eax*1+0x52],0x6d757365
  433d65:	gs dec esp
  433d67:	popa   
  433d68:	jns    0x433dd9
  433d6a:	jne    0x433de0
  433d6c:	add    BYTE PTR [eax+0x65],dl
  433d6f:	jb     0x433dd7
  433d71:	outs   dx,DWORD PTR ds:[esi]
  433d72:	jb     0x433de1
  433d74:	dec    esp
  433d75:	popa   
  433d76:	jns    0x433de7
  433d78:	jne    0x433dee
  433d7a:	add    BYTE PTR [edx+0x65],dh
  433d7d:	ins    DWORD PTR es:[edi],dx
  433d7e:	outs   dx,DWORD PTR ds:[esi]
  433d7f:	jbe    0x433de6
  433d81:	pop    edi
  433d82:	inc    ebx
  433d83:	ins    BYTE PTR es:[edi],dx
  433d84:	imul   esp,DWORD PTR [ebx+0x6b],0x64646100
  433d8b:	pop    edi
  433d8c:	inc    ebx
  433d8d:	ins    BYTE PTR es:[edi],dx
  433d8e:	imul   esp,DWORD PTR [ebx+0x6b],0x69784500
  433d95:	jae    0x433e0b
  433d97:	jae    0x433d99
  433d99:	push   edx
  433d9a:	gs popa 
  433d9c:	fs push esp
  433d9e:	outs   dx,DWORD PTR ds:[esi]
  433d9f:	inc    ebp
  433da0:	outs   dx,BYTE PTR ds:[esi]
  433da1:	add    BYTE PTR fs:[edx+0x65],dl
  433da5:	jo     0x433e13
  433da7:	popa   
  433da8:	arpl   WORD PTR [ebp+0x0],sp
  433dab:	inc    edi
  433dac:	gs je  0x433df5
  433daf:	outs   dx,DWORD PTR ds:[esi]
  433db0:	ins    BYTE PTR es:[edi],dx
  433db1:	fs gs jb 0x433e05
  433db5:	popa   
  433db6:	je     0x433e20
  433db8:	add    BYTE PTR [edi+0x65],ah
  433dbb:	je     0x433e1c
  433dbd:	push   edx
  433dbe:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x53007972
  433dc7:	gs je  0x433e20
  433dca:	popa   
  433dcb:	ins    BYTE PTR es:[edi],dx
  433dcc:	jne    0x433e33
  433dce:	add    BYTE PTR [edi+ebp*2+0x77],al
  433dd2:	outs   dx,BYTE PTR ds:[esi]
  433dd3:	ins    BYTE PTR es:[edi],dx
  433dd4:	outs   dx,DWORD PTR ds:[esi]
  433dd5:	popa   
  433dd6:	fs inc esi
  433dd8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5f746567
  433de0:	push   ebx
  433de1:	je     0x433e44
  433de3:	outs   dx,BYTE PTR ds:[esi]
  433de4:	fs popa 
  433de6:	jb     0x433e4c
  433de8:	dec    edi
  433de9:	jne    0x433e5f
  433deb:	jo     0x433e62
  433ded:	je     0x433def
  433def:	jae    0x433e56
  433df1:	je     0x433e52
  433df3:	inc    ecx
  433df4:	jb     0x433e5d
  433df6:	jne    0x433e65
  433df8:	outs   dx,BYTE PTR gs:[esi]
  433dfa:	je     0x433e6f
  433dfc:	add    BYTE PTR [ebx+0x65],dh
  433dff:	je     0x433e60
  433e01:	inc    esi
  433e02:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x656d61
  433e0a:	jae    0x433e71
  433e0c:	je     0x433e6d
  433e0e:	push   ebp
  433e0f:	jae    0x433e76
  433e11:	push   ebx
  433e12:	push   0x456c6c65
  433e17:	js     0x433e7e
  433e19:	arpl   WORD PTR [ebp+0x74],si
  433e1c:	add    BYTE PTR gs:[ebx+0x65],dh
  433e20:	je     0x433e81
  433e22:	inc    ebx
  433e23:	jb     0x433e8a
  433e25:	popa   
  433e26:	je     0x433e8d
  433e28:	dec    esi
  433e29:	outs   dx,DWORD PTR ds:[esi]
  433e2a:	push   edi
  433e2b:	imul   ebp,DWORD PTR [esi+0x64],0x7300776f
  433e32:	gs je  0x433e94
  433e35:	push   edi
  433e36:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  433e3d:	jns    0x433eab
  433e3f:	add    BYTE PTR gs:[ebx+0x65],dh
  433e43:	je     0x433ea4
  433e45:	push   ebx
  433e46:	je     0x433ea9
  433e48:	jb     0x433ebe
  433e4a:	dec    ecx
  433e4b:	outs   dx,BYTE PTR ds:[esi]
  433e4c:	outs   dx,WORD PTR ds:[esi]
  433e4e:	add    BYTE PTR [ebx+0x74],dl
  433e51:	popa   
  433e52:	jb     0x433ec8
  433e54:	add    BYTE PTR [edi+0x61],dl
  433e57:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x69784572
  433e5f:	je     0x433e61
  433e61:	inc    ebx
  433e62:	jb     0x433ec9
  433e64:	popa   
  433e65:	je     0x433ecc
  433e67:	push   eax
  433e68:	jb     0x433ed9
  433e6a:	push   0x65
  433e6c:	arpl   WORD PTR [ebp+eax*2+0x72],si
  433e70:	jb     0x433ee1
  433e72:	jb     0x433e74
  433e74:	inc    ebx
  433e75:	jb     0x433edc
  433e77:	popa   
  433e78:	je     0x433edf
  433e7a:	inc    esp
  433e7b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  433e82:	jns    0x433e84
  433e84:	dec    esp
  433e85:	popa   
  433e86:	je     0x433eed
  433e88:	inc    edi
  433e89:	gs je  0x433e8c
  433e8c:	dec    esi
  433e8d:	gs js  0x433f04
  433e90:	add    BYTE PTR [edi+ebp*2+0x77],al
  433e94:	outs   dx,BYTE PTR ds:[esi]
  433e95:	ins    BYTE PTR es:[edi],dx
  433e96:	outs   dx,DWORD PTR ds:[esi]
  433e97:	popa   
  433e98:	fs push ebx
  433e9a:	je     0x433f0e
  433e9c:	imul   ebp,DWORD PTR [esi+0x67],0x74656700
  433ea3:	pop    edi
  433ea4:	inc    esi
  433ea5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x65747379
  433ead:	ins    DWORD PTR es:[edi],dx
  433eae:	add    BYTE PTR [edi+0x72],dl
  433eb1:	imul   esi,DWORD PTR [ebp+eiz*2+0x41],0x65546c6c
  433eb9:	js     0x433f2f
  433ebb:	add    BYTE PTR [ecx+0x70],al
  433ebe:	jo     0x433f25
  433ec0:	outs   dx,BYTE PTR ds:[esi]
  433ec1:	add    BYTE PTR fs:[edi+0x65],al
  433ec5:	je     0x433f0b
  433ec7:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  433ece:	imul   esp,DWORD PTR [ebp+0x73],0x74654700
  433ed5:	inc    esi
  433ed6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x646e4500
  433ede:	jae    0x433f37
  433ee0:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x5f746567
  433ee8:	dec    esp
  433ee9:	outs   dx,BYTE PTR gs:[esi]
  433eeb:	addr16 je 0x433f56
  433eee:	add    BYTE PTR [edi+ebp*2+0x44],dl
  433ef2:	outs   dx,DWORD PTR ds:[esi]
  433ef3:	jne    0x433f57
  433ef5:	ins    BYTE PTR es:[edi],dx
  433ef6:	add    BYTE PTR gs:[ebx+0x6f],al
  433efa:	outs   dx,BYTE PTR ds:[esi]
  433efb:	je     0x433f5e
  433efd:	imul   ebp,DWORD PTR [esi+0x73],0x436f5400
  433f04:	push   0x72417261
  433f09:	jb     0x433f6c
  433f0b:	jns    0x433f0d
  433f0d:	inc    edi
  433f0e:	gs je  0x433f66
  433f11:	jo     0x433f83
  433f13:	gs jb  0x433f58
  433f16:	outs   dx,DWORD PTR ds:[esi]
  433f17:	jne    0x433f87
  433f19:	add    BYTE PTR fs:[ecx+0x73],al
  433f1d:	arpl   WORD PTR [eax],ax
  433f1f:	inc    ebx
  433f20:	outs   dx,DWORD PTR ds:[esi]
  433f21:	ins    DWORD PTR es:[edi],dx
  433f22:	jo     0x433f99
  433f24:	je     0x433f8b
  433f26:	dec    eax
  433f27:	popa   
  433f28:	jae    0x433f92
  433f2a:	add    BYTE PTR [ebx+0x65],dl
  433f2d:	je     0x433f7b
  433f2f:	outs   dx,BYTE PTR gs:[esi]
  433f31:	addr16 je 0x433f9c
  433f34:	add    BYTE PTR [ebx+0x72],al
  433f37:	gs popa 
  433f39:	je     0x433fa0
  433f3b:	inc    ebp
  433f3c:	outs   dx,BYTE PTR ds:[esi]
  433f3d:	arpl   WORD PTR [edx+0x79],si
  433f40:	jo     0x433fb6
  433f42:	outs   dx,DWORD PTR ds:[esi]
  433f43:	jb     0x433f45
  433f45:	inc    ebx
  433f46:	jb     0x433fad
  433f48:	popa   
  433f49:	je     0x433fb0
  433f4b:	inc    esp
  433f4c:	arpl   WORD PTR gs:[edx+0x79],si
  433f50:	jo     0x433fc6
  433f52:	outs   dx,DWORD PTR ds:[esi]
  433f53:	jb     0x433f55
  433f55:	push   edx
  433f56:	gs popa 
  433f58:	add    BYTE PTR fs:[edi+0x72],dl
  433f5c:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x736f6c43
  433f64:	add    BYTE PTR gs:[ebp+eiz*2+0x6c],al
  433f69:	gs je  0x433fd1
  433f6c:	add    BYTE PTR [edi+0x65],al
  433f6f:	je     0x433fb2
  433f71:	ins    BYTE PTR es:[edi],dx
  433f72:	ins    BYTE PTR es:[edi],dx
  433f73:	dec    esi
  433f74:	gs je  0x433fee
  433f77:	outs   dx,DWORD PTR ds:[esi]
  433f78:	jb     0x433fe5
  433f7a:	dec    ecx
  433f7b:	outs   dx,BYTE PTR ds:[esi]
  433f7c:	je     0x433fe3
  433f7e:	jb     0x433fe6
  433f80:	popa   
  433f81:	arpl   WORD PTR [ebp+0x73],sp
  433f84:	add    BYTE PTR [edi+0x65],al
  433f87:	je     0x433fd9
  433f89:	push   0x63697379
  433f8e:	popa   
  433f8f:	ins    BYTE PTR es:[edi],dx
  433f90:	inc    ecx
  433f91:	fs fs jb 0x433ffa
  433f95:	jae    0x43400a
  433f97:	add    BYTE PTR [ebx+0x68],dl
  433f9a:	outs   dx,DWORD PTR ds:[esi]
  433f9b:	ja     0x433f9d
  433f9d:	addr16 gs je 0x434000
  433fa1:	push   ebp
  433fa2:	push   esp
  433fa3:	inc    esi
  433fa4:	cmp    BYTE PTR [eax],al
  433fa6:	inc    edi
  433fa7:	gs je  0x433fec
  433faa:	jns    0x434020
  433fac:	gs jae 0x433faf
  433faf:	push   edx
  433fb0:	gs data16 gs jb 0x43401a
  433fb5:	outs   dx,BYTE PTR ds:[esi]
  433fb6:	arpl   WORD PTR [ebp+0x45],sp
  433fb9:	jno    0x434030
  433fbb:	popa   
  433fbc:	ins    BYTE PTR es:[edi],dx
  433fbd:	jae    0x433fbf
  433fbf:	addr16 gs je 0x434022
  433fc3:	inc    ecx
  433fc4:	jae    0x434039
  433fc6:	gs ins DWORD PTR es:[edi],dx
  433fc8:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  433fcc:	push   ebx
  433fcd:	jns    0x43403d
  433fcf:	arpl   WORD PTR [eax+0x72],bp
  433fd2:	outs   dx,DWORD PTR ds:[esi]
  433fd3:	outs   dx,BYTE PTR ds:[esi]
  433fd4:	imul   edi,DWORD PTR [edx+0x65],0x65670064
  433fdb:	je     0x43403c
  433fdd:	push   ebx
  433fde:	popa   
  433fdf:	jbe    0x434046
  433fe1:	dec    ebp
  433fe2:	jns    0x434037
  433fe4:	gs je  0x43405b
  433fe7:	imul   ebp,DWORD PTR [esi+0x67],0x456e4f73
  433fee:	js     0x434059
  433ff0:	je     0x433ff2
  433ff2:	push   ebx
  433ff3:	popa   
  433ff4:	jbe    0x43405b
  433ff6:	add    BYTE PTR [ebx+0x68],al
  433ff9:	arpl   WORD PTR gs:[ebx+0x46],bp
  433ffd:	outs   dx,DWORD PTR ds:[esi]
  433ffe:	jb     0x434053
  434000:	jns    0x434070
  434002:	arpl   WORD PTR [edi+ebp*2+0x63],cx
  434006:	imul   ecx,DWORD PTR [edi+0x6e],0x56
  43400a:	popa   
  43400b:	ins    BYTE PTR es:[edi],dx
  43400c:	jne    0x434073
  43400e:	push   esp
  43400f:	jns    0x434081
  434011:	add    BYTE PTR gs:[ecx+0x64],ah
  434015:	fs pop edi
  434017:	push   ebx
  434018:	push   0x6f647475
  43401d:	ja     0x43408d
  43401f:	add    BYTE PTR [esi+0x72],al
  434022:	outs   dx,DWORD PTR ds:[esi]
  434023:	ins    DWORD PTR es:[edi],dx
  434024:	inc    edx
  434025:	popa   
  434026:	jae    0x43408d
  434028:	ss xor al,0x53
  43402b:	je     0x43409f
  43402d:	imul   ebp,DWORD PTR [esi+0x67],0x496f5400
  434034:	outs   dx,BYTE PTR ds:[esi]
  434035:	je     0x43406a
  434037:	xor    al,BYTE PTR [eax]
  434039:	push   esp
  43403a:	outs   dx,DWORD PTR ds:[esi]
  43403b:	dec    ecx
  43403c:	outs   dx,BYTE PTR ds:[esi]
  43403d:	je     0x434075
  43403f:	xor    al,0x0
  434041:	push   esp
  434042:	outs   dx,DWORD PTR ds:[esi]
  434043:	push   ebx
  434044:	imul   ebp,DWORD PTR [esi+0x67],0x4200656c
  43404b:	ins    BYTE PTR es:[edi],dx
  43404c:	outs   dx,DWORD PTR ds:[esi]
  43404d:	arpl   WORD PTR [ebx+0x43],bp
  434050:	outs   dx,DWORD PTR ds:[esi]
  434051:	jo     0x4340cc
  434053:	add    BYTE PTR [ebp+0x6d],al
  434056:	jo     0x4340cc
  434058:	jns    0x43405a
  43405a:	addr16 gs je 0x4340bd
  43405e:	push   ebp
  43405f:	outs   dx,BYTE PTR ds:[esi]
  434060:	imul   esp,DWORD PTR [ebx+0x6f],0x49006564
  434067:	outs   dx,BYTE PTR ds:[esi]
  434068:	je     0x4340cf
  43406a:	jb     0x4340da
  43406c:	add    BYTE PTR [edi+0x65],ah
  43406f:	je     0x4340d0
  434071:	inc    ebx
  434072:	push   0x737261
  434077:	push   eax
  434078:	popa   
  434079:	jb     0x4340ee
  43407b:	add    BYTE PTR gs:[edx+0x65],dl
  43407f:	jbe    0x4340e6
  434081:	jb     0x4340f6
  434083:	add    BYTE PTR gs:[edx+0x65],dl
  434087:	popa   
  434088:	fs inc edx
  43408a:	jns    0x434100
  43408c:	add    BYTE PTR gs:[ebx+0x65],dh
  434090:	je     0x4340f1
  434092:	dec    ecx
  434093:	push   esi
  434094:	add    BYTE PTR [ebx+0x65],dh
  434097:	je     0x4340f8
  434099:	dec    ebx
  43409a:	gs jns 0x43409d
  43409d:	jae    0x434104
  43409f:	je     0x434100
  4340a1:	push   eax
  4340a2:	outs   dx,DWORD PTR ds:[esi]
  4340a3:	jae    0x43410e
  4340a5:	je     0x434110
  4340a7:	outs   dx,DWORD PTR ds:[esi]
  4340a8:	outs   dx,BYTE PTR ds:[esi]
  4340a9:	add    BYTE PTR [edi+0x65],ah
  4340ac:	je     0x43410d
  4340ae:	dec    ecx
  4340af:	outs   dx,BYTE PTR ds:[esi]
  4340b0:	jo     0x434127
  4340b2:	je     0x4340f6
  4340b4:	ins    BYTE PTR es:[edi],dx
  4340b5:	outs   dx,DWORD PTR ds:[esi]
  4340b6:	arpl   WORD PTR [ebx+0x53],bp
  4340b9:	imul   edi,DWORD PTR [edx+0x65],0x74656700
  4340c0:	pop    edi
  4340c1:	dec    edi
  4340c2:	jne    0x434138
  4340c4:	jo     0x43413b
  4340c6:	je     0x43410a
  4340c8:	ins    BYTE PTR es:[edi],dx
  4340c9:	outs   dx,DWORD PTR ds:[esi]
  4340ca:	arpl   WORD PTR [ebx+0x53],bp
  4340cd:	imul   edi,DWORD PTR [edx+0x65],0x74656700
  4340d4:	pop    edi
  4340d5:	push   eax
  4340d6:	outs   dx,DWORD PTR ds:[esi]
  4340d7:	jae    0x434142
  4340d9:	je     0x434144
  4340db:	outs   dx,DWORD PTR ds:[esi]
  4340dc:	outs   dx,BYTE PTR ds:[esi]
  4340dd:	add    BYTE PTR [edx+esi*2+0x61],dl
  4340e1:	outs   dx,BYTE PTR ds:[esi]
  4340e2:	jae    0x43414a
  4340e4:	outs   dx,DWORD PTR ds:[esi]
  4340e5:	jb     0x434154
  4340e7:	inc    edx
  4340e8:	ins    BYTE PTR es:[edi],dx
  4340e9:	outs   dx,DWORD PTR ds:[esi]
  4340ea:	arpl   WORD PTR [ebx+0x0],bp
  4340ed:	push   esp
  4340ee:	jb     0x434151
  4340f0:	outs   dx,BYTE PTR ds:[esi]
  4340f1:	jae    0x434159
  4340f3:	outs   dx,DWORD PTR ds:[esi]
  4340f4:	jb     0x434163
  4340f6:	inc    esi
  4340f7:	imul   ebp,DWORD PTR [esi+0x61],0x6f6c426c
  4340fe:	arpl   WORD PTR [ebx+0x0],bp
  434101:	push   esp
  434102:	outs   dx,DWORD PTR ds:[esi]
  434103:	inc    ecx
  434104:	jb     0x434178
  434106:	popa   
  434107:	jns    0x434109
  434109:	push   edx
  43410a:	gs popa 
  43410c:	fs dec ecx
  43410e:	outs   dx,BYTE PTR ds:[esi]
  43410f:	je     0x434144
  434111:	xor    al,BYTE PTR [eax]
  434113:	inc    edi
  434114:	gs je  0x434164
  434117:	outs   dx,DWORD PTR ds:[esi]
  434118:	fs jne 0x434187
  43411b:	gs jae 0x43411e
  43411e:	addr16 gs je 0x434181
  434122:	dec    ebp
  434123:	outs   dx,DWORD PTR ds:[esi]
  434124:	fs jne 0x434193
  434127:	gs dec eax
  434129:	popa   
  43412a:	outs   dx,BYTE PTR ds:[esi]
  43412b:	fs ins BYTE PTR es:[edi],dx
  43412d:	add    BYTE PTR gs:[edx+0x65],dl
  434131:	jae    0x4341a2
  434133:	ins    BYTE PTR es:[edi],dx
  434134:	jbe    0x43419b
  434136:	push   esp
  434137:	jns    0x4341a9
  434139:	gs dec eax
  43413b:	popa   
  43413c:	outs   dx,BYTE PTR ds:[esi]
  43413d:	fs ins BYTE PTR es:[edi],dx
  43413f:	add    BYTE PTR gs:[edx+0x65],dl
  434143:	jae    0x4341b4
  434145:	ins    BYTE PTR es:[edi],dx
  434146:	jbe    0x4341ad
  434148:	dec    ebp
  434149:	gs je  0x4341b4
  43414c:	outs   dx,DWORD PTR ds:[esi]
  43414d:	fs dec eax
  43414f:	popa   
  434150:	outs   dx,BYTE PTR ds:[esi]
  434151:	fs ins BYTE PTR es:[edi],dx
  434153:	add    BYTE PTR gs:[edi+0x65],al
  434157:	je     0x4341a6
  434159:	gs je  0x4341c4
  43415c:	outs   dx,DWORD PTR ds:[esi]
  43415d:	fs inc esi
  43415f:	jb     0x4341d0
  434161:	ins    DWORD PTR es:[edi],dx
  434162:	dec    eax
  434163:	popa   
  434164:	outs   dx,BYTE PTR ds:[esi]
  434165:	fs ins BYTE PTR es:[edi],dx
  434167:	add    BYTE PTR gs:[edi+0x65],al
  43416b:	je     0x4341b3
  43416d:	imul   esp,DWORD PTR [ebp+0x6c],0x47007364
  434174:	gs je  0x4341c4
  434177:	gs je  0x4341e2
  43417a:	outs   dx,DWORD PTR ds:[esi]
  43417b:	fs inc edx
  43417d:	outs   dx,DWORD PTR ds:[esi]
  43417e:	fs jns 0x434181
  434181:	addr16 gs je 0x4341e4
  434185:	inc    esp
  434186:	arpl   WORD PTR gs:[ecx+eiz*2+0x72],bp
  43418b:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  434192:	add    BYTE PTR [edi+0x65],ah
  434195:	je     0x4341f6
  434197:	push   edx
  434198:	gs je  0x434210
  43419b:	jb     0x43420b
  43419d:	push   esp
  43419e:	jns    0x434210
  4341a0:	add    BYTE PTR gs:[edx+esi*2+0x79],dl
  4341a5:	inc    edi
  4341a6:	gs je  0x4341ff
  4341a9:	popa   
  4341aa:	ins    BYTE PTR es:[edi],dx
  4341ab:	jne    0x434212
  4341ad:	add    BYTE PTR [edi+0x65],al
  4341b0:	je     0x4341f6
  4341b2:	jns    0x434222
  4341b4:	popa   
  4341b5:	ins    DWORD PTR es:[edi],dx
  4341b6:	imul   esp,DWORD PTR [ebx+0x49],0x666e494c
  4341bd:	outs   dx,DWORD PTR ds:[esi]
  4341be:	add    BYTE PTR [ebx+0x72],al
  4341c1:	gs popa 
  4341c3:	je     0x43422a
  4341c5:	inc    esp
  4341c6:	gs ins BYTE PTR es:[edi],dx
  4341c8:	gs addr16 popa 
  4341cb:	je     0x434232
  4341cd:	add    BYTE PTR [ebx+0x65],dl
  4341d0:	je     0x434215
  4341d2:	outs   dx,DWORD PTR ds:[esi]
  4341d3:	fs add BYTE PTR gs:[edi+0x65],al
  4341d8:	je     0x434226
  4341da:	outs   dx,DWORD PTR ds:[esi]
  4341db:	arpl   WORD PTR [ecx+0x6c],sp
  4341de:	push   esi
  4341df:	popa   
  4341e0:	jb     0x434235
  4341e2:	imul   esp,DWORD PTR [edi+0x48],0x65706c65
  4341e9:	jb     0x4341eb
  4341eb:	addr16 gs je 0x43424e
  4341ef:	dec    esp
  4341f0:	outs   dx,DWORD PTR ds:[esi]
  4341f1:	arpl   WORD PTR [ecx+0x6c],sp
  4341f4:	push   esi
  4341f5:	popa   
  4341f6:	jb     0x434261
  4341f8:	popa   
  4341f9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x73]
  4341fd:	add    BYTE PTR [edi+0x65],al
  434200:	je     0x434247
  434202:	outs   dx,BYTE PTR ds:[esi]
  434203:	jne    0x434272
  434205:	gs jb  0x434269
  434208:	je     0x434279
  43420a:	jb     0x43420c
  43420c:	addr16 gs je 0x43426f
  434210:	inc    ebx
  434211:	jne    0x434285
  434213:	jb     0x43427a
  434215:	outs   dx,BYTE PTR ds:[esi]
  434216:	je     0x434218
  434218:	addr16 gs je 0x43427b
  43421c:	dec    esp
  43421d:	outs   dx,DWORD PTR ds:[esi]
  43421e:	arpl   WORD PTR [ecx+0x6c],sp
  434221:	push   esp
  434222:	jns    0x434294
  434224:	add    BYTE PTR gs:[edi+0x65],ah
  434228:	je     0x434289
  43422a:	dec    ecx
  43422b:	jae    0x43427d
  43422d:	imul   ebp,DWORD PTR [esi+0x6e],0x41006465
  434234:	fs fs inc ecx
  434237:	jb     0x4342a0
  434239:	jne    0x4342a8
  43423b:	outs   dx,BYTE PTR gs:[esi]
  43423d:	je     0x43423f
  43423f:	dec    ebp
  434240:	outs   dx,DWORD PTR ds:[esi]
  434241:	jbe    0x4342a8
  434243:	dec    esi
  434244:	gs js  0x4342bb
  434247:	add    BYTE PTR [edi+0x65],al
  43424a:	je     0x43429f
  43424c:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  434253:	add    BYTE PTR gs:[ebx+0x65],dl
  434257:	je     0x4342a5
  434259:	outs   dx,DWORD PTR ds:[esi]
  43425a:	arpl   WORD PTR [ecx+0x6c],sp
  43425d:	push   ebx
  43425e:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  434265:	add    BYTE PTR gs:[edi+0x65],al
  434269:	je     0x4342bf
  43426b:	outs   dx,DWORD PTR ds:[esi]
  43426c:	imul   esp,DWORD PTR [ebp+0x6e],0x46
  434270:	outs   dx,DWORD PTR ds:[esi]
  434271:	jb     0x434273
  434273:	push   ebx
  434274:	gs je  0x4342bc
  434277:	js     0x4342dc
  434279:	gs jo  0x4342f0
  43427c:	imul   ebp,DWORD PTR [edi+0x6e],0x65470073
  434283:	je     0x4342d5
  434285:	popa   
  434286:	jb     0x4342e9
  434288:	ins    DWORD PTR es:[edi],dx
  434289:	gs je  0x4342f1
  43428c:	jb     0x434301
  43428e:	add    BYTE PTR [edi+0x65],ah
  434291:	je     0x4342f2
  434293:	dec    ecx
  434294:	jae    0x4342e9
  434296:	je     0x4342f9
  434298:	je     0x434303
  43429a:	arpl   WORD PTR [eax],ax
  43429c:	addr16 gs je 0x4342ff
  4342a0:	dec    ecx
  4342a1:	jae    0x4342f9
  4342a3:	popa   
  4342a4:	ins    BYTE PTR es:[edi],dx
  4342a5:	jne    0x43430c
  4342a7:	push   esp
  4342a8:	jns    0x43431a
  4342aa:	add    BYTE PTR gs:[ebp+0x61],cl
  4342ae:	imul   esp,DWORD PTR [ebp+0x42],0x79
  4342b2:	push   edx
  4342b3:	gs push sp
  4342b6:	jns    0x434328
  4342b8:	add    BYTE PTR gs:[edi+0x65],ah
  4342bc:	je     0x43431d
  4342be:	push   eax
  4342bf:	popa   
  4342c0:	jb     0x434323
  4342c2:	ins    DWORD PTR es:[edi],dx
  4342c3:	gs je  0x43432b
  4342c6:	jb     0x43431c
  4342c8:	jns    0x43433a
  4342ca:	add    BYTE PTR gs:[edi+0x65],al
  4342ce:	je     0x434326
  4342d0:	popa   
  4342d1:	ins    BYTE PTR es:[edi],dx
  4342d2:	jne    0x434339
  4342d4:	add    BYTE PTR [edi+0x65],ah
  4342d7:	je     0x434338
  4342d9:	push   esi
  4342da:	popa   
  4342db:	ins    BYTE PTR es:[edi],dx
  4342dc:	jne    0x434343
  4342de:	add    BYTE PTR [edi+0x65],ah
  4342e1:	je     0x434342
  4342e3:	dec    ebp
  4342e4:	outs   dx,DWORD PTR ds:[esi]
  4342e5:	fs jne 0x434354
  4342e8:	add    BYTE PTR gs:[edi+0x65],al
  4342ec:	je     0x434335
  4342ee:	outs   dx,BYTE PTR gs:[esi]
  4342f0:	gs jb  0x43435c
  4342f3:	arpl   WORD PTR [ecx+0x72],ax
  4342f6:	addr16 jne 0x434366
  4342f9:	outs   dx,BYTE PTR gs:[esi]
  4342fb:	je     0x434370
  4342fd:	add    BYTE PTR [esi+0x6f],cl
  434300:	jo     0x434302
  434302:	addr16 gs je 0x434365
  434306:	dec    edi
  434307:	jo     0x43436e
  434309:	jb     0x43436c
  43430b:	outs   dx,BYTE PTR ds:[esi]
  43430c:	fs push esp
  43430e:	jns    0x434380
  434310:	add    BYTE PTR gs:[edx+0x65],dl
  434314:	jae    0x434385
  434316:	ins    BYTE PTR es:[edi],dx
  434317:	jbe    0x43437e
  434319:	push   ebx
  43431a:	je     0x43438e
  43431c:	imul   ebp,DWORD PTR [esi+0x67],0x74656700
  434323:	pop    edi
  434324:	push   ebx
  434325:	imul   edi,DWORD PTR [edx+0x65],0x73655200
  43432c:	outs   dx,DWORD PTR ds:[esi]
  43432d:	ins    BYTE PTR es:[edi],dx
  43432e:	jbe    0x434395
  434330:	push   ebx
  434331:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  434338:	add    BYTE PTR gs:[edx+0x65],dl
  43433c:	jae    0x4343ad
  43433e:	ins    BYTE PTR es:[edi],dx
  43433f:	jbe    0x4343a6
  434341:	dec    ebp
  434342:	gs je  0x4343ad
  434345:	outs   dx,DWORD PTR ds:[esi]
  434346:	add    BYTE PTR fs:[edi+0x65],ah
  43434a:	je     0x4343ab
  43434c:	dec    ebp
  43434d:	gs je  0x4343b8
  434350:	outs   dx,DWORD PTR ds:[esi]
  434351:	fs dec eax
  434353:	popa   
  434354:	outs   dx,BYTE PTR ds:[esi]
  434355:	fs ins BYTE PTR es:[edi],dx
  434357:	add    BYTE PTR gs:[edi+0x65],ah
  43435b:	je     0x4343bc
  43435d:	push   esp
  43435e:	jns    0x4343d0
  434360:	gs dec eax
  434362:	popa   
  434363:	outs   dx,BYTE PTR ds:[esi]
  434364:	fs ins BYTE PTR es:[edi],dx
  434366:	add    BYTE PTR gs:[edx+0x65],dl
  43436a:	jae    0x4343db
  43436c:	ins    BYTE PTR es:[edi],dx
  43436d:	jbe    0x4343d4
  43436f:	inc    esi
  434370:	imul   esp,DWORD PTR [ebp+0x6c],0x65670064
  434377:	je     0x4343d8
  434379:	inc    esi
  43437a:	imul   esp,DWORD PTR [ebp+0x6c],0x6e614864
  434381:	fs ins BYTE PTR es:[edi],dx
  434383:	add    BYTE PTR gs:[edx+0x65],dl
  434387:	jae    0x4343f8
  434389:	ins    BYTE PTR es:[edi],dx
  43438a:	jbe    0x4343f1
  43438c:	push   esp
  43438d:	jns    0x4343ff
  43438f:	add    BYTE PTR gs:[edx+0x65],dl
  434393:	jae    0x434404
  434395:	ins    BYTE PTR es:[edi],dx
  434396:	jbe    0x4343fd
  434398:	dec    ebp
  434399:	gs ins DWORD PTR es:[edi],dx
  43439b:	bound  esp,QWORD PTR [ebp+0x72]
  43439e:	add    BYTE PTR [edi+0x65],ah
  4343a1:	je     0x434402
  4343a3:	dec    ebp
  4343a4:	gs ins DWORD PTR es:[edi],dx
  4343a6:	bound  esp,QWORD PTR [ebp+0x72]
  4343a9:	push   esp
  4343aa:	jns    0x43441c
  4343ac:	add    BYTE PTR gs:[eax],al
  4343af:	add    al,ah
  4343b1:	outs   dx,DWORD PTR ds:[esi]
  4343b2:	inc    edi
  4343b3:	aam    0xbd
  4343b5:	sti    
  4343b6:	xchg   ebx,eax
  4343b7:	dec    esi
  4343b8:	mov    ecx,0xeed1c617
  4343bd:	fcomi  st,st(2)
  4343bf:	dec    ecx
  4343c0:	add    BYTE PTR [eax],cl
  4343c2:	mov    bh,0x7a
  4343c4:	pop    esp
  4343c5:	push   esi
  4343c6:	sbb    DWORD PTR [eax+eiz*8],esi
  4343c9:	mov    DWORD PTR [eax],ecx
  4343cb:	mov    al,0x3f
  4343cd:	pop    edi
  4343ce:	jg     0x4343e1
  4343d0:	aad    0xa
  4343d2:	cmp    al,BYTE PTR [ebx]
  4343d4:	add    BYTE PTR [eax],al
  4343d6:	add    DWORD PTR [ecx],ecx
  4343d8:	push   es
  4343d9:	adc    eax,0x1958012
  4343de:	adc    al,BYTE PTR [edx+0x20039d]
  4343e4:	add    DWORD PTR [eax+eax*1],eax
  4343e7:	add    DWORD PTR [ecx],eax
  4343e9:	sbb    al,0x5
  4343eb:	add    BYTE PTR [ecx],al
  4343ed:	add    DWORD PTR ds:0x120040e,ebx
  4343f3:	add    DWORD PTR [esi],ecx
  4343f5:	add    al,0x6
  4343f7:	adc    al,BYTE PTR [ecx+0x20009ad]
  4343fd:	adc    al,BYTE PTR [ecx-0x7dede353]
  434403:	sbb    DWORD PTR [esi],eax
  434405:	add    BYTE PTR [ecx],al
  434407:	push   cs
  434408:	adc    al,BYTE PTR [ecx+0x150607ad]
  43440e:	adc    ah,BYTE PTR [ecx+eax*1]
  434411:	adc    dl,BYTE PTR [eax]
  434413:	pop    es
  434414:	push   es
  434415:	adc    eax,0x12012412
  43441a:	or     BYTE PTR [edi],al
  43441c:	push   es
  43441d:	adc    eax,0x12012412
  434422:	adc    DWORD PTR [edi],eax
  434424:	push   es
  434425:	adc    eax,0x12012412
  43442a:	sbb    al,0x7
  43442c:	push   es
  43442d:	adc    eax,0x12012412
  434432:	and    BYTE PTR [eax+eax*1],al
  434435:	add    BYTE PTR [edx],dl
  434437:	adc    BYTE PTR [eax+eax*1],al
  43443a:	add    BYTE PTR [edx],dl
  43443c:	or     BYTE PTR [eax+eax*1],al
  43443f:	add    BYTE PTR [edx],dl
  434441:	adc    DWORD PTR [eax+eax*1],eax
  434444:	add    BYTE PTR [edx],dl
  434446:	sbb    al,0x4
  434448:	add    BYTE PTR [eax],al
  43444a:	adc    ah,BYTE PTR [eax]
  43444c:	add    eax,DWORD PTR [esi]
  43444e:	adc    ch,BYTE PTR [eax]
  434450:	add    al,0x6
  434452:	adc    al,BYTE PTR [eax+0x200499]
  434458:	adc    ch,BYTE PTR [eax]
  43445a:	add    eax,0x12010120
  43445f:	sub    BYTE PTR [edi],al
  434461:	adc    BYTE PTR [ecx],al
  434463:	add    DWORD PTR [esi],ebx
  434465:	add    BYTE PTR [esi],bl
  434467:	add    BYTE PTR [edi],al
  434469:	xor    BYTE PTR [ecx],al
  43446b:	add    DWORD PTR [ecx],eax
  43446d:	adc    BYTE PTR [esi],bl
  43446f:	add    BYTE PTR [eax+eiz*1],al
  434472:	add    DWORD PTR [edx],eax
  434474:	sbb    al,0x3
  434476:	and    BYTE PTR [eax],al
  434478:	or     BYTE PTR ds:0x82120020,al
  43447e:	lea    eax,[ebx]
  434480:	and    BYTE PTR [eax],al
  434482:	push   cs
  434483:	add    eax,DWORD PTR [esi]
  434485:	adc    eax,DWORD PTR [eax]
  434487:	add    al,0x20
  434489:	add    BYTE PTR [ebx],dl
  43448b:	add    BYTE PTR [esi+eax*1],al
  43448e:	adc    al,BYTE PTR [eax+0x120604b5]
  434494:	sub    BYTE PTR [ebp-0x7dedf9fc],0xd1
  43449b:	add    al,0x6
  43449d:	adc    al,BYTE PTR [edx+0x120604d9]
  4344a3:	or     cl,0x2
  4344a6:	push   es
  4344a7:	push   cs
  4344a8:	add    al,0x6
  4344aa:	adc    al,BYTE PTR [ecx+0x1200475]
  4344b0:	add    DWORD PTR [edx],eax
  4344b2:	add    eax,0x82120020
  4344b7:	lods   eax,DWORD PTR ds:[esi]
  4344b8:	push   es
  4344b9:	and    BYTE PTR [ecx],al
  4344bb:	add    DWORD PTR [edx],edx
  4344bd:	sub    BYTE PTR [ebp+0x12002005],0x82
  4344c4:	rol    DWORD PTR [esi],1
  4344c6:	and    BYTE PTR [ecx],al
  4344c8:	add    DWORD PTR [edx],edx
  4344ca:	adc    cl,0x5
  4344cd:	and    BYTE PTR [eax],al
  4344cf:	adc    al,BYTE PTR [edx+0x12006d9]
  4344d5:	add    DWORD PTR [edx],edx
  4344d7:	sbb    cl,0x5
  4344da:	and    BYTE PTR [eax],al
  4344dc:	adc    al,BYTE PTR [edx+0x12006c9]
  4344e2:	add    DWORD PTR [edx],edx
  4344e4:	or     cl,0x7
  4344e7:	and    BYTE PTR [edx],al
  4344e9:	add    DWORD PTR [edx+edx*1],ebx
  4344ec:	and    DWORD PTR ds:0x1c002003,0x2022005
  4344f6:	push   cs
  4344f7:	push   cs
  4344f8:	add    eax,0x51d0120
  4344fd:	push   cs
  4344fe:	or     esp,DWORD PTR [eax]
  434500:	add    eax,0x1d0e0e01
  434505:	add    eax,0x2c11051d
  43450a:	add    al,BYTE PTR [esi]
  43450c:	or     BYTE PTR [ebx],al
  43450e:	push   es
  43450f:	adc    DWORD PTR [esp+eax*1],ebp
  434512:	add    DWORD PTR [eax],eax
  434514:	add    BYTE PTR [eax],al
  434516:	add    al,0x2
  434518:	add    BYTE PTR [eax],al
  43451a:	add    BYTE PTR [ebx],al
  43451c:	push   es
  43451d:	sbb    eax,0x1000509
  434522:	or     DWORD PTR ds:0x1000405,ebx
  434528:	or     DWORD PTR [esi],ecx
  43452a:	add    al,0x6
  43452c:	adc    al,BYTE PTR [edx+0x12060421]
  434532:	xor    DWORD PTR [ecx],0x12000005
  434538:	and    BYTE PTR [ecx],0x5
  43453b:	add    BYTE PTR [eax],al
  43453d:	adc    al,BYTE PTR [ecx+0x1000631]
  434543:	add    DWORD PTR [edx],edx
  434545:	xor    DWORD PTR [ecx],0x38120603
  43454b:	add    al,BYTE PTR [esi]
  43454d:	add    al,BYTE PTR [edx]
  43454f:	push   es
  434550:	sbb    al,0x7
  434552:	add    BYTE PTR [edx],al
  434554:	add    DWORD PTR [edx+edx*1],ebx
  434557:	and    DWORD PTR ds:0x12000004,0x1d060338
  434561:	add    eax,0x8010004
  434566:	or     BYTE PTR [eax+eax*1],al
  434569:	add    DWORD PTR [edx],ecx
  43456b:	or     BYTE PTR [eax+eax*1],al
  43456e:	add    DWORD PTR [eax+ecx*1],ecx
  434571:	add    al,0x0
  434573:	add    DWORD PTR ds:0x2000608,ecx
  434579:	add    DWORD PTR [edx],edx
  43457b:	popa   
  43457c:	or     BYTE PTR [eax+eax*1],al
  43457f:	add    DWORD PTR [esi],ecx
  434581:	or     BYTE PTR [esi+eax*1],al
  434584:	adc    al,BYTE PTR [ecx+0x506027d]
  43458a:	pop    es
  43458b:	add    BYTE PTR [ecx],al
  43458d:	sbb    eax,0xad811205
  434592:	pop    es
  434593:	add    BYTE PTR [ecx],al
  434595:	sbb    eax,0x81811205
  43459a:	or     BYTE PTR [eax],al
  43459c:	add    bl,BYTE PTR ds:0x81120a05
  4345a2:	or     DWORD PTR [eax],0x80121506
  4345a8:	test   DWORD PTR [edx],eax
  4345aa:	or     BYTE PTR [eax],cl
  4345ac:	add    al,0x6
  4345ae:	adc    DWORD PTR [ecx+0x300068d],eax
  4345b4:	add    DWORD PTR [eax],ecx
  4345b6:	or     BYTE PTR [eax],cl
  4345b8:	or     eax,DWORD PTR [eax]
  4345ba:	add    eax,DWORD PTR [ecx]
  4345bc:	adc    BYTE PTR [eax],cl
  4345be:	adc    al,BYTE PTR [edx-0x2a7eedff]
  4345c4:	or     DWORD PTR [eax],eax
  4345c6:	add    al,BYTE PTR [ecx]
  4345c8:	adc    al,BYTE PTR [edx-0x2a7eedfb]
  4345ce:	or     BYTE PTR [eax],al
  4345d0:	add    al,BYTE PTR [ecx]
  4345d2:	adc    BYTE PTR [eax],cl
  4345d4:	adc    al,BYTE PTR [ecx+0x30007d5]
  4345da:	add    DWORD PTR [eax],ecx
  4345dc:	or     BYTE PTR ds:0x1000905,bl
  4345e2:	sbb    eax,0x128d8212
  4345e7:	add    BYTE PTR [ecx],0x5
  4345ea:	push   es
  4345eb:	sbb    eax,0x4dd8111
  4345f0:	push   es
  4345f1:	adc    al,BYTE PTR [ecx+0x120604d5]
  4345f7:	or     BYTE PTR ds:0x121d0605,0x82
  4345fe:	lea    ecx,[ebx]
  434600:	and    BYTE PTR [ebx],al
  434602:	add    DWORD PTR [edx],edx
  434604:	add    BYTE PTR [ecx],0x1d
  434607:	add    eax,0x4d58112
  43460c:	and    BYTE PTR [ecx],al
  43460e:	add    DWORD PTR [eax],ecx
  434610:	add    esp,DWORD PTR [eax]
  434612:	add    BYTE PTR ds:0x1022005,al
  434618:	or     BYTE PTR [eax],cl
  43461a:	or     al,0x1
  43461c:	add    BYTE PTR [edi],al
  43461e:	inc    edx
  43461f:	jne    0x434695
  434621:	je     0x434692
  434623:	outs   dx,BYTE PTR ds:[esi]
  434624:	xor    DWORD PTR [eax],eax
  434626:	add    BYTE PTR [ecx+eax*1],cl
  434629:	add    BYTE PTR [edi],al
  43462b:	inc    edx
  43462c:	jne    0x4346a2
  43462e:	je     0x43469f
  434630:	outs   dx,BYTE PTR ds:[esi]
  434631:	xor    al,BYTE PTR [eax]
  434633:	add    BYTE PTR [eax],dl
  434635:	add    DWORD PTR [eax],eax
  434637:	or     edx,DWORD PTR [eax+0x69]
  43463a:	arpl   WORD PTR [ebp+esi*2+0x72],si
  43463e:	gs inc edx
  434640:	outs   dx,DWORD PTR ds:[esi]
  434641:	js     0x434674
  434643:	add    BYTE PTR [eax],al
  434645:	or     eax,0x54080001
  43464a:	gs js  0x4346c1
  43464d:	inc    edx
  43464e:	outs   dx,DWORD PTR ds:[esi]
  43464f:	js     0x434682
  434651:	add    BYTE PTR [eax],al
  434653:	or     eax,DWORD PTR [ecx]
  434655:	add    BYTE PTR [esi],al
  434657:	dec    esp
  434658:	popa   
  434659:	bound  esp,QWORD PTR [ebp+0x6c]
  43465c:	xor    DWORD PTR [eax],eax
  43465e:	add    BYTE PTR ds:0x54080001,cl
  434664:	gs js  0x4346db
  434667:	inc    edx
  434668:	outs   dx,DWORD PTR ds:[esi]
  434669:	js     0x43469d
  43466b:	add    BYTE PTR [eax],al
  43466d:	adc    BYTE PTR [ecx],al
  43466f:	add    BYTE PTR [ebx],cl
  434671:	push   eax
  434672:	imul   esp,DWORD PTR [ebx+0x74],0x42657275
  434679:	outs   dx,DWORD PTR ds:[esi]
  43467a:	js     0x4346ae
  43467c:	add    BYTE PTR [eax],al
  43467e:	or     eax,0x54080001
  434683:	gs js  0x4346fa
  434686:	inc    edx
  434687:	outs   dx,DWORD PTR ds:[esi]
  434688:	js     0x4346bd
  43468a:	add    BYTE PTR [eax],al
  43468c:	or     eax,0x54080001
  434691:	gs js  0x434708
  434694:	inc    edx
  434695:	outs   dx,DWORD PTR ds:[esi]
  434696:	js     0x4346cc
  434698:	add    BYTE PTR [eax],al
  43469a:	or     eax,0x54080001
  43469f:	gs js  0x434716
  4346a2:	inc    edx
  4346a3:	outs   dx,DWORD PTR ds:[esi]
  4346a4:	js     0x4346db
  4346a6:	add    BYTE PTR [eax],al
  4346a8:	or     eax,0x54080001
  4346ad:	gs js  0x434724
  4346b0:	inc    edx
  4346b1:	outs   dx,DWORD PTR ds:[esi]
  4346b2:	js     0x4346ea
  4346b4:	add    BYTE PTR [eax],al
  4346b6:	or     eax,0x54080001
  4346bb:	gs js  0x434732
  4346be:	inc    edx
  4346bf:	outs   dx,DWORD PTR ds:[esi]
  4346c0:	js     0x4346f9
  4346c2:	add    BYTE PTR [eax],al
  4346c4:	or     BYTE PTR [ecx],al
  4346c6:	add    BYTE PTR [edx],al
  4346c8:	add    BYTE PTR [eax],al
  4346ca:	add    BYTE PTR [eax],al
  4346cc:	add    BYTE PTR [esi],al
  4346ce:	and    BYTE PTR [ecx],al
  4346d0:	add    DWORD PTR [ecx],edx
  4346d2:	xor    BYTE PTR [ecx+0x1000108],0x0
  4346d9:	add    BYTE PTR [eax],al
  4346db:	add    BYTE PTR [eax],al
  4346dd:	pop    ss
  4346de:	add    DWORD PTR [eax],eax
  4346e0:	or     cl,BYTE PTR [ebp+0x79]
  4346e3:	push   esp
  4346e4:	gs ins DWORD PTR es:[edi],dx
  4346e6:	jo     0x434754
  4346e8:	popa   
  4346e9:	je     0x434750
  4346eb:	pop    es
  4346ec:	cmp    BYTE PTR [esi],ch
  4346ee:	xor    BYTE PTR [esi],ch
  4346f0:	xor    BYTE PTR [esi],ch
  4346f2:	xor    BYTE PTR [eax],al
  4346f4:	add    BYTE PTR ds:0xe010220,al
  4346fa:	push   cs
  4346fb:	add    al,0x8
  4346fd:	add    BYTE PTR [edx],dl
  4346ff:	adc    BYTE PTR [eax],dl
  434701:	add    DWORD PTR [eax],eax
  434703:	or     ecx,DWORD PTR [ebp+0x79]
  434706:	cs inc ebx
  434708:	outs   dx,DWORD PTR ds:[esi]
  434709:	ins    DWORD PTR es:[edi],dx
  43470a:	jo     0x434781
  43470c:	je     0x434773
  43470e:	jb     0x434710
  434710:	add    BYTE PTR [eax+ecx*1],al
  434713:	add    BYTE PTR [edx],dl
  434715:	or     BYTE PTR [ebx],dl
  434717:	add    DWORD PTR [eax],eax
  434719:	push   cs
  43471a:	dec    ebp
  43471b:	jns    0x43474b
  43471d:	inc    ecx
  43471e:	jo     0x434790
  434720:	ins    BYTE PTR es:[edi],dx
  434721:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  434728:	add    BYTE PTR [eax],al
  43472a:	add    al,0x8
  43472c:	add    BYTE PTR [edx],dl
  43472e:	adc    DWORD PTR [ecx+eax*1],ecx
  434731:	add    BYTE PTR [edi],al
  434733:	dec    ebp
  434734:	jns    0x434764
  434736:	push   ebp
  434737:	jae    0x43479e
  434739:	jb     0x43473b
  43473b:	add    BYTE PTR [eax+ecx*1],al
  43473e:	add    BYTE PTR [edx],dl
  434740:	sbb    al,0xd
  434742:	add    DWORD PTR [eax],eax
  434744:	or     BYTE PTR [ebp+0x79],cl
  434747:	cs inc esi
  434749:	outs   dx,DWORD PTR ds:[esi]
  43474a:	jb     0x4347b9
  43474c:	jae    0x43474e
  43474e:	add    BYTE PTR [eax+ecx*1],al
  434751:	add    BYTE PTR [edx],dl
  434753:	and    BYTE PTR [ebx],dl
  434755:	add    DWORD PTR [eax],eax
  434757:	push   cs
  434758:	dec    ebp
  434759:	jns    0x434789
  43475b:	push   edi
  43475c:	bound  edx,QWORD PTR gs:[ebx+0x65]
  434760:	jb     0x4347d8
  434762:	imul   esp,DWORD PTR [ebx+0x65],0x58000073
  434769:	add    DWORD PTR [eax],eax
  43476b:	sbb    DWORD PTR [ebx+0x79],edx
  43476e:	jae    0x4347e4
  434770:	gs ins DWORD PTR es:[edi],dx
  434772:	cs push edi
  434774:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  43477b:	inc    esi
  43477c:	outs   dx,DWORD PTR ds:[esi]
  43477d:	jb     0x4347ec
  43477f:	jae    0x4347af
  434781:	inc    esi
  434782:	outs   dx,DWORD PTR ds:[esi]
  434783:	jb     0x4347f2
  434785:	adc    al,BYTE PTR [ebx+0x72]
  434788:	gs popa 
  43478a:	je     0x4347f1
  43478c:	pop    edi
  43478d:	pop    edi
  43478e:	dec    ecx
  43478f:	outs   dx,BYTE PTR ds:[esi]
  434790:	jae    0x434806
  434792:	popa   
  434793:	outs   dx,BYTE PTR ds:[esi]
  434794:	arpl   WORD PTR [ebp+0x5f],sp
  434797:	pop    edi
  434798:	adc    eax,DWORD PTR [ecx+ebp*2+0x73]
  43479c:	jo     0x43480d
  43479e:	jae    0x434805
  4347a0:	pop    edi
  4347a1:	pop    edi
  4347a2:	dec    ecx
  4347a3:	outs   dx,BYTE PTR ds:[esi]
  4347a4:	jae    0x43481a
  4347a6:	popa   
  4347a7:	outs   dx,BYTE PTR ds:[esi]
  4347a8:	arpl   WORD PTR [ebp+0x5f],sp
  4347ab:	pop    edi
  4347ac:	adc    cl,BYTE PTR [ebp+0x79]
  4347af:	cs dec ebp
  4347b1:	jns    0x434803
  4347b3:	jb     0x434824
  4347b5:	push   0x65
  4347b7:	arpl   WORD PTR [esi+ebp*1+0x46],si
  4347bb:	outs   dx,DWORD PTR ds:[esi]
  4347bc:	jb     0x43482b
  4347be:	jae    0x4347c0
  4347c0:	add    BYTE PTR [edi],al
  4347c2:	and    BYTE PTR [ecx+eax*1],al
  4347c5:	push   cs
  4347c6:	push   cs
  4347c7:	push   cs
  4347c8:	push   cs
  4347c9:	popa   
  4347ca:	add    DWORD PTR [eax],eax
  4347cc:	xor    al,0x53
  4347ce:	jns    0x434843
  4347d0:	je     0x434837
  4347d2:	ins    DWORD PTR es:[edi],dx
  4347d3:	cs push edi
  4347d5:	bound  ebp,QWORD PTR gs:[esi]
  4347d8:	push   ebx
  4347d9:	gs jb  0x434852
  4347dc:	imul   esp,DWORD PTR [ebx+0x65],0x72502e73
  4347e3:	outs   dx,DWORD PTR ds:[esi]
  4347e4:	je     0x434855
  4347e6:	arpl   WORD PTR [edi+0x6c],bp
  4347e9:	jae    0x434819
  4347eb:	push   ebx
  4347ec:	outs   dx,DWORD PTR ds:[esi]
  4347ed:	popa   
  4347ee:	jo     0x434838
  4347f0:	je     0x434866
  4347f2:	jo     0x434837
  4347f4:	ins    BYTE PTR es:[edi],dx
  4347f5:	imul   esp,DWORD PTR [ebp+0x6e],0x6f725074
  4347fc:	je     0x43486d
  4347fe:	arpl   WORD PTR [edi+0x6c],bp
  434801:	adc    al,BYTE PTR [ebx+0x72]
  434804:	gs popa 
  434806:	je     0x43486d
  434808:	pop    edi
  434809:	pop    edi
  43480a:	dec    ecx
  43480b:	outs   dx,BYTE PTR ds:[esi]
  43480c:	jae    0x434882
  43480e:	popa   
  43480f:	outs   dx,BYTE PTR ds:[esi]
  434810:	arpl   WORD PTR [ebp+0x5f],sp
  434813:	pop    edi
  434814:	adc    eax,DWORD PTR [ecx+ebp*2+0x73]
  434818:	jo     0x434889
  43481a:	jae    0x434881
  43481c:	pop    edi
  43481d:	pop    edi
  43481e:	dec    ecx
  43481f:	outs   dx,BYTE PTR ds:[esi]
  434820:	jae    0x434896
  434822:	popa   
  434823:	outs   dx,BYTE PTR ds:[esi]
  434824:	arpl   WORD PTR [ebp+0x5f],sp
  434827:	pop    edi
  434828:	add    BYTE PTR [eax],al
  43482a:	add    BYTE PTR ds:0x1,al
  434830:	add    BYTE PTR ds:0x82120008,al
  434836:	and    DWORD PTR ds:0x81120008,eax
  43483c:	xor    DWORD PTR [eax+0x1],eax
  43483f:	add    BYTE PTR [ebx],dh
  434841:	push   ebx
  434842:	jns    0x4348b7
  434844:	je     0x4348ab
  434846:	ins    DWORD PTR es:[edi],dx
  434847:	cs push edx
  434849:	gs jae 0x4348bb
  43484c:	jne    0x4348c0
  43484e:	arpl   WORD PTR [ebp+0x73],sp
  434851:	cs push esp
  434853:	outs   dx,DWORD PTR ds:[esi]
  434854:	outs   dx,DWORD PTR ds:[esi]
  434855:	ins    BYTE PTR es:[edi],dx
  434856:	jae    0x434886
  434858:	push   ebx
  434859:	je     0x4348cd
  43485b:	outs   dx,DWORD PTR ds:[esi]
  43485c:	outs   dx,BYTE PTR ds:[esi]
  43485d:	ins    BYTE PTR es:[di],dx
  43485f:	jns    0x4348b5
  434861:	jns    0x4348d3
  434863:	gs fs push edx
  434866:	gs jae 0x4348d8
  434869:	jne    0x4348dd
  43486b:	arpl   WORD PTR [ebp+0x42],sp
  43486e:	jne    0x4348d9
  434870:	ins    BYTE PTR es:[edi],dx
  434871:	fs gs jb 0x43487c
  434875:	xor    al,0x2e
  434877:	xor    BYTE PTR [esi],ch
  434879:	xor    BYTE PTR [esi],ch
  43487b:	xor    BYTE PTR [eax],al
  43487d:	add    BYTE PTR [eax+ecx*1],al
  434880:	add    BYTE PTR [edx],dl
  434882:	cmp    BYTE PTR [ecx+0x1],bl
  434885:	add    BYTE PTR [ebx+0x4d],cl
  434888:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  43488f:	je     0x4348bf
  434891:	push   esi
  434892:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  434899:	jne    0x4348ff
  43489b:	imul   ebp,DWORD PTR [edi+0x2e],0x74696445
  4348a2:	outs   dx,DWORD PTR ds:[esi]
  4348a3:	jb     0x434918
  4348a5:	cs push ebx
  4348a7:	gs je  0x43491e
  4348aa:	imul   ebp,DWORD PTR [esi+0x67],0x73654473
  4348b1:	imul   esp,DWORD PTR [edi+0x6e],0x532e7265
  4348b8:	gs je  0x43492f
  4348bb:	imul   ebp,DWORD PTR [esi+0x67],0x6e695373
  4348c2:	ins    BYTE PTR es:[di],dx
  4348c4:	gs inc esi
  4348c6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x47],0x72656e65
  4348ce:	popa   
  4348cf:	je     0x434940
  4348d1:	jb     0x4348db
  4348d3:	xor    DWORD PTR [edx],esi
  4348d5:	xor    BYTE PTR cs:[esi],ch
  4348d8:	xor    BYTE PTR [esi],ch
  4348da:	xor    BYTE PTR [eax],al
  4348dc:	add    BYTE PTR [eax],dl
  4348de:	add    DWORD PTR [eax],eax
  4348e0:	or     ecx,DWORD PTR [ebp+0x79]
  4348e3:	cs push ebx
  4348e5:	gs je  0x43495c
  4348e8:	imul   ebp,DWORD PTR [esi+0x67],0x11000073
  4348ef:	add    DWORD PTR [eax],eax
  4348f1:	or     al,0x54
  4348f3:	popa   
  4348f4:	jae    0x434961
  4348f6:	and    BYTE PTR [ebp+0x61],cl
  4348f9:	outs   dx,BYTE PTR ds:[esi]
  4348fa:	popa   
  4348fb:	addr16 gs jb 0x4348ff
  4348ff:	add    BYTE PTR [esi],bl
  434901:	add    DWORD PTR [eax],eax
  434903:	add    DWORD PTR [eax],eax
  434905:	push   esp
  434906:	add    dl,BYTE PTR [esi]
  434908:	push   edi
  434909:	jb     0x43496c
  43490b:	jo     0x43495b
  43490d:	outs   dx,DWORD PTR ds:[esi]
  43490e:	outs   dx,BYTE PTR ds:[esi]
  43490f:	inc    ebp
  434910:	js     0x434975
  434912:	gs jo  0x434989
  434915:	imul   ebp,DWORD PTR [edi+0x6e],0x6f726854
  43491c:	ja     0x434991
  43491e:	add    DWORD PTR [edi],edx
  434920:	add    DWORD PTR [eax],eax
  434922:	adc    al,BYTE PTR [ebx+0x6f]
  434925:	jo     0x4349a0
  434927:	jb     0x434992
  434929:	addr16 push 0xa9c22074
  43492f:	and    BYTE PTR [eax],ah
  434931:	xor    dh,BYTE PTR [eax]
  434933:	xor    DWORD PTR [eax+eax*1],esi
  434936:	add    BYTE PTR [eax],cl
  434938:	add    DWORD PTR [eax],eax
  43493a:	pop    es
  43493b:	add    DWORD PTR [eax],eax
  43493d:	add    BYTE PTR [eax],al
  43493f:	add    BYTE PTR [esi],al
  434941:	and    BYTE PTR [ecx],al
  434943:	add    DWORD PTR [ecx],edx
  434945:	adc    cl,0x8
  434948:	add    DWORD PTR [eax],eax
  43494a:	or     BYTE PTR [eax],al
  43494c:	add    BYTE PTR [eax],al
  43494e:	add    BYTE PTR [eax],al
  434950:	sgdtd  [eax]
  434953:	or     dh,BYTE PTR [ebx]
  434955:	xor    dh,BYTE PTR cs:[ebx]
  434958:	xor    DWORD PTR cs:[edx],esi
  43495b:	xor    DWORD PTR cs:[edx],esi
  43495e:	add    BYTE PTR [eax],al
  434960:	sub    DWORD PTR [ecx],eax
  434962:	add    BYTE PTR [edi+esi*1],ah
  434965:	popaw  
  434967:	xor    eax,0x35383836
  43496c:	sub    eax,0x62346365
  434971:	sub    eax,0x63333934
  434976:	sub    eax,0x63613762
  43497b:	sub    eax,0x66313863
  434980:	xor    BYTE PTR fs:[ebx],dh
  434983:	cmp    BYTE PTR [edx+esi*1],dh
  434986:	arpl   WORD PTR [ebp+0x0],sp
  434989:	add    BYTE PTR [eax],cl
  43498b:	adc    eax,0x1958012
  434990:	adc    al,BYTE PTR [edx+0x120059d]
  434996:	add    DWORD PTR [ecx],edx
  434998:	add    eax,0x1012005
  43499d:	adc    DWORD PTR ds:0x8080713,ecx
  4349a3:	or     BYTE PTR [edx],dl
  4349a5:	sbb    BYTE PTR [ebp-0x6a7fedeb],0x1
  4349ac:	adc    al,BYTE PTR [edx+0x202089d]
  4349b2:	or     BYTE PTR ds:0x130120,al
  4349b8:	or     BYTE PTR [ebx],al
  4349ba:	and    BYTE PTR [eax],al
  4349bc:	add    al,BYTE PTR [esi]
  4349be:	and    BYTE PTR [edx],al
  4349c0:	add    DWORD PTR [eax],ecx
  4349c2:	adc    eax,DWORD PTR [eax]
  4349c4:	add    al,0x0
  4349c6:	add    DWORD PTR [esp+ebx*1],ebx
  4349c9:	add    al,0x20
  4349cb:	add    DWORD PTR [ecx],eax
  4349cd:	sbb    al,0x5
  4349cf:	and    BYTE PTR [ecx],al
  4349d1:	add    DWORD PTR [ebx],edx
  4349d3:	add    BYTE PTR [ebx],al
  4349d5:	add    BYTE PTR [eax],al
  4349d7:	add    al,BYTE PTR [eax+eax*1]
  4349da:	add    DWORD PTR [ecx],eax
  4349dc:	add    al,BYTE PTR ds:0x1d010120
  4349e2:	push   cs
  4349e3:	push   es
  4349e4:	and    BYTE PTR [ecx],al
  4349e6:	add    DWORD PTR [edx],edx
  4349e8:	add    ch,0x6
  4349eb:	pop    es
  4349ec:	add    dl,BYTE PTR [edx]
  4349ee:	sub    DWORD PTR [ebp+0x40e],0x20055912
  4349f8:	add    al,BYTE PTR [ecx]
  4349fa:	sbb    al,0x18
  4349fc:	push   es
  4349fd:	and    BYTE PTR [ecx],al
  4349ff:	add    DWORD PTR [edx],edx
  434a01:	sbb    BYTE PTR ds:0x12000005,0x81
  434a08:	lods   eax,DWORD PTR ds:[esi]
  434a09:	push   es
  434a0a:	add    BYTE PTR [ecx],al
  434a0c:	adc    al,BYTE PTR [ecx+0x70b0ead]
  434a12:	add    al,0x12
  434a14:	sub    DWORD PTR [ebp-0x7e7eedf2],0x2004051d
  434a1e:	add    DWORD PTR [edx],eax
  434a20:	push   cs
  434a21:	push   es
  434a22:	and    BYTE PTR [ecx],al
  434a24:	adc    al,BYTE PTR [ecx+0x70e81]
  434a2a:	add    DWORD PTR [edx],edx
  434a2c:	sub    DWORD PTR [ebp+0x704051d],0x4080e02
  434a36:	and    BYTE PTR [ecx],al
  434a38:	or     BYTE PTR [ebx],al
  434a3a:	add    eax,0x80e0220
  434a3f:	or     BYTE PTR ds:0x1c0e0200,al
  434a45:	sbb    al,0x9
  434a47:	pop    es
  434a48:	add    al,0xe
  434a4a:	adc    al,BYTE PTR [ecx+0x80e1dad]
  434a50:	add    al,0x20
  434a52:	add    BYTE PTR ds:0x200050e,bl
  434a58:	add    cl,BYTE PTR [esi]
  434a5a:	push   cs
  434a5b:	push   es
  434a5c:	adc    eax,0x12012412
  434a61:	adc    BYTE PTR [esi],al
  434a63:	adc    eax,0x12012412
  434a68:	or     BYTE PTR [esi],al
  434a6a:	adc    eax,0x12012412
  434a6f:	adc    DWORD PTR [esi],eax
  434a71:	adc    eax,0x12012412
  434a76:	sbb    al,0x6
  434a78:	adc    eax,0x12012412
  434a7d:	and    BYTE PTR [edi+eax*1],al
  434a80:	add    DWORD PTR [edx],edx
  434a82:	adc    BYTE PTR [edi+eax*1],al
  434a85:	add    DWORD PTR [edx],edx
  434a87:	or     BYTE PTR [edi+eax*1],al
  434a8a:	add    DWORD PTR [edx],edx
  434a8c:	adc    DWORD PTR [edi+eax*1],eax
  434a8f:	add    DWORD PTR [edx],edx
  434a91:	sbb    al,0x4
  434a93:	pop    es
  434a94:	add    DWORD PTR [edx],edx
  434a96:	and    BYTE PTR [edi+eax*1],al
  434a99:	add    DWORD PTR [edx],edx
  434a9b:	sub    BYTE PTR [edx+ecx*1],al
  434a9e:	add    DWORD PTR [edx],edx
  434aa0:	sub    BYTE PTR [ebx],al
  434aa2:	pop    es
  434aa3:	add    DWORD PTR [edx],eax
  434aa5:	or     eax,0x1e0707
  434aaa:	push   cs
  434aab:	adc    al,BYTE PTR [edx+0x20e1d15]
  434ab1:	add    al,BYTE PTR [edx]
  434ab3:	add    bl,BYTE PTR [esi]
  434ab5:	add    BYTE PTR [eax],cl
  434ab7:	add    BYTE PTR [ecx],al
  434ab9:	adc    al,BYTE PTR [edx+0x4982118d]
  434abf:	push   es
  434ac0:	add    BYTE PTR [edx],al
  434ac2:	push   cs
  434ac3:	push   cs
  434ac4:	sbb    eax,0x220050e
  434ac9:	add    DWORD PTR [esp+ebx*1],ebx
  434acc:	add    al,0xa
  434ace:	add    DWORD PTR [esi],ebx
  434ad0:	add    BYTE PTR ds:0x1e000110,al
  434ad6:	add    BYTE PTR [esi],al
  434ad8:	add    BYTE PTR [ecx],al
  434ada:	add    DWORD PTR [edx],edx
  434adc:	sub    DWORD PTR ds:0x12002005,0x20072d81
  434ae6:	add    al,BYTE PTR [ecx]
  434ae8:	push   cs
  434ae9:	adc    al,BYTE PTR [ecx+0x107042d]
  434aef:	push   ds
  434af0:	add    BYTE PTR [ebx],al
  434af2:	pop    es
  434af3:	add    DWORD PTR [eax],ecx
  434af5:	add    eax,0x82120107
  434afa:	lea    eax,[ebx]
  434afc:	pop    es
  434afd:	add    DWORD PTR [esi],ecx
  434aff:	add    eax,0x1e0207
  434b04:	add    al,BYTE PTR ds:0x130207
  434b0a:	add    al,BYTE PTR [esi]
  434b0c:	adc    eax,0x13012412
  434b11:	add    BYTE PTR [edx],al
  434b13:	adc    eax,DWORD PTR [eax]
  434b15:	add    al,0xa
  434b17:	add    DWORD PTR [ebx],edx
  434b19:	add    BYTE PTR [esi],al
  434b1b:	and    BYTE PTR [ecx],al
  434b1d:	add    DWORD PTR [edx],edx
  434b1f:	sub    DWORD PTR [ecx],0x1208071a
  434b25:	and    BYTE PTR [ebp+0x11f18011],0x81
  434b2c:	or     DWORD PTR [ecx],edx
  434b2e:	or     DWORD PTR [ecx],0x110d8111
  434b34:	or     DWORD PTR ds:0x11118111,0x20061181
  434b3e:	add    DWORD PTR [ecx],eax
  434b40:	adc    al,BYTE PTR [edx+0x58d]
  434b46:	adc    DWORD PTR [eax+0x12006f1],eax
  434b4c:	add    DWORD PTR [ecx],edx
  434b4e:	xor    cl,0xc
  434b51:	and    BYTE PTR ds:0x110c0e01,al
  434b57:	cmp    cl,0x11
  434b5a:	cmp    ch,0x5
  434b5d:	push   es
  434b5e:	and    BYTE PTR [ecx],al
  434b60:	add    DWORD PTR [edx],edx
  434b62:	xor    ch,0x6
  434b65:	and    BYTE PTR [ecx],al
  434b67:	add    DWORD PTR [ecx],edx
  434b69:	or     DWORD PTR [ecx],0x1012006
  434b6f:	adc    DWORD PTR [ecx+0x120040d],eax
  434b75:	sbb    al,0xe
  434b77:	push   es
  434b78:	and    BYTE PTR [ecx],al
  434b7a:	add    DWORD PTR [edx],edx
  434b7c:	add    DWORD PTR ds:0x1012006,0x6d58211
  434b86:	and    BYTE PTR [ecx],al
  434b88:	add    DWORD PTR [ecx],edx
  434b8a:	sub    BYTE PTR [ecx+0xe012004],0xe
  434b91:	or     BYTE PTR [eax],al
  434b93:	add    edx,DWORD PTR [ecx]
  434b95:	xor    cl,0x8
  434b98:	or     BYTE PTR [eax],cl
  434b9a:	add    eax,0xc010220
  434b9f:	or     al,0x6
  434ba1:	and    BYTE PTR [ecx],al
  434ba3:	add    DWORD PTR [ecx],edx
  434ba5:	adc    DWORD PTR [ecx],0x1012006
  434bab:	adc    DWORD PTR [edx+0x2005a5],eax
  434bb1:	adc    al,BYTE PTR [edx+0x12006bd]
  434bb7:	add    DWORD PTR [edx],edx
  434bb9:	cmp    BYTE PTR [ecx+0x1012006],0x12
  434bc0:	add    DWORD PTR [ecx],0x12010705
  434bc6:	sub    BYTE PTR [ebp+0x12020706],0x81
  434bcd:	sub    DWORD PTR [edx],eax
  434bcf:	add    eax,0x82120107
  434bd4:	rol    DWORD PTR ds:0x82120107,1
  434bda:	fld    DWORD PTR ds:0x82120107
  434be0:	leave  
  434be1:	daa    
  434be2:	pop    es
  434be3:	sbb    BYTE PTR [esi],cl
  434be5:	push   cs
  434be6:	adc    al,BYTE PTR [ecx+0xe0e0e89]
  434bec:	push   cs
  434bed:	push   cs
  434bee:	push   cs
  434bef:	push   cs
  434bf0:	push   cs
  434bf1:	adc    al,BYTE PTR [eax-0x1a7fed1f]
  434bf7:	push   cs
  434bf8:	push   cs
  434bf9:	push   cs
  434bfa:	adc    al,BYTE PTR [ecx-0x627eed63]
  434c00:	adc    al,BYTE PTR [ecx+0x80e1d9d]
  434c06:	or     BYTE PTR [eax],cl
  434c08:	add    al,BYTE PTR [eax+eax*1]
  434c0b:	add    DWORD PTR [edx],eax
  434c0d:	push   cs
  434c0e:	or     al,BYTE PTR [eax]
  434c10:	push   es
  434c11:	push   cs
  434c12:	push   cs
  434c13:	push   cs
  434c14:	push   cs
  434c15:	or     BYTE PTR [eax],cl
  434c17:	adc    DWORD PTR [ecx],ebx
  434c19:	push   es
  434c1a:	add    BYTE PTR [ecx],al
  434c1c:	push   cs
  434c1d:	adc    DWORD PTR [ecx+0x2000521],eax
  434c23:	push   cs
  434c24:	push   cs
  434c25:	push   cs
  434c26:	add    al,0x20
  434c28:	add    BYTE PTR [edx],dl
  434c2a:	dec    ebp
  434c2b:	push   es
  434c2c:	and    BYTE PTR [ebx],al
  434c2e:	add    DWORD PTR [esi],ecx
  434c30:	push   cs
  434c31:	sbb    al,0x4
  434c33:	add    BYTE PTR [ecx],al
  434c35:	push   cs
  434c36:	sbb    al,0x5
  434c38:	add    BYTE PTR [ecx],al
  434c3a:	push   cs
  434c3b:	sbb    eax,0x20050e
  434c40:	adc    al,BYTE PTR [ecx+0x1200685]
  434c46:	add    DWORD PTR [ecx],edx
  434c48:	sub    cl,0x6
  434c4b:	and    BYTE PTR [ecx],al
  434c4d:	add    DWORD PTR [edx],edx
  434c4f:	and    ch,0x7
  434c52:	add    BYTE PTR [edx],al
  434c54:	adc    al,BYTE PTR [eax+0x60e0ee1]
  434c5a:	add    BYTE PTR [ecx],al
  434c5c:	adc    al,BYTE PTR [ecx+0x70b082d]
  434c62:	pop    es
  434c63:	sbb    al,0xe
  434c65:	push   cs
  434c66:	adc    al,BYTE PTR [ecx+0x808089d]
  434c6c:	or     al,0x7
  434c6e:	or     BYTE PTR [esi+ecx*1],bl
  434c71:	push   cs
  434c72:	adc    al,BYTE PTR [ecx+0x808089d]
  434c78:	add    al,BYTE PTR [esi]
  434c7a:	add    BYTE PTR [ecx],al
  434c7c:	adc    al,BYTE PTR [ecx+0x7090e61]
  434c82:	push   es
  434c83:	push   cs
  434c84:	push   cs
  434c85:	sbb    eax,0x808081c
  434c8a:	adc    al,BYTE PTR [eax]
  434c8c:	pop    es
  434c8d:	sbb    al,0x1c
  434c8f:	adc    al,BYTE PTR [edx+0x1c1d0e8d]
  434c95:	sbb    eax,0x82121d0e
  434c9a:	lea    ebx,ds:0x8070e02
  434ca0:	push   cs
  434ca1:	sbb    al,0x12
  434ca3:	sbb    DWORD PTR [ebp+0x8a98112],0x5080808
  434cad:	and    BYTE PTR [edx],al
  434caf:	or     BYTE PTR [eax],cl
  434cb1:	or     BYTE PTR ds:0x1c0e0907,cl
  434cb7:	push   cs
  434cb8:	push   cs
  434cb9:	adc    al,BYTE PTR [ecx+0x8080889]
  434cbf:	add    al,BYTE PTR [eax+eiz*1]
  434cc2:	add    BYTE PTR [edx],dl
  434cc4:	dec    ecx
  434cc5:	push   es
  434cc6:	and    BYTE PTR [ebx],al
  434cc8:	add    DWORD PTR [esi],ecx
  434cca:	push   cs
  434ccb:	add    dl,BYTE PTR [eax]
  434ccd:	pop    es
  434cce:	or     bl,BYTE PTR [edx+edx*1]
  434cd1:	sub    DWORD PTR [ecx-0x7e7dedf2],0x8080808
  434cdb:	or     BYTE PTR [eax],cl
  434cdd:	push   es
  434cde:	and    BYTE PTR [ecx],al
  434ce0:	adc    al,BYTE PTR [edx+0x7230e81]
  434ce6:	adc    edx,DWORD PTR [edx]
  434ce8:	and    DWORD PTR [ecx+0x12],0x12026181
  434cef:	sub    DWORD PTR [ebp+0xe],0x1d051d0e
  434cf6:	add    eax,0x80e0e0e
  434cfb:	sbb    eax,0x8618112
  434d00:	sbb    eax,0x86d8112
  434d05:	or     BYTE PTR [eax],cl
  434d07:	add    al,BYTE PTR [esi]
  434d09:	and    BYTE PTR [eax],al
  434d0b:	sbb    eax,0x6618112
  434d10:	and    BYTE PTR [eax],al
  434d12:	sbb    eax,0x36d8112
  434d17:	and    BYTE PTR [eax],al
  434d19:	or     al,BYTE PTR [eax+eax*1]
  434d1c:	add    DWORD PTR [esi],ecx
  434d1e:	or     al,BYTE PTR [eax+eax*1]
  434d21:	add    DWORD PTR ds:0x1407240e,ecx
  434d27:	add    dl,BYTE PTR [edx]
  434d29:	and    DWORD PTR [ecx+0x12],0x81126181
  434d30:	ins    DWORD PTR es:[edi],dx
  434d31:	push   cs
  434d32:	sbb    eax,0xe051d05
  434d37:	push   cs
  434d38:	push   cs
  434d39:	push   cs
  434d3a:	push   cs
  434d3b:	or     BYTE PTR ds:0x8618112,bl
  434d41:	sbb    eax,0x86d8112
  434d46:	or     BYTE PTR [eax],cl
  434d48:	add    dl,BYTE PTR [edi]
  434d4a:	pop    es
  434d4b:	push   cs
  434d4c:	sbb    eax,0x1d051d05
  434d51:	add    eax,0x51d031d
  434d56:	or     BYTE PTR [edx],dl
  434d58:	and    BYTE PTR [ebp+0x8],0x8
  434d5c:	or     BYTE PTR [eax],cl
  434d5e:	or     BYTE PTR [eax],cl
  434d60:	or     BYTE PTR [eax+eiz*1],al
  434d63:	add    BYTE PTR ds:0x1200403,bl
  434d69:	or     BYTE PTR [eax],cl
  434d6b:	add    al,0x0
  434d6d:	add    DWORD PTR [eax],ecx
  434d6f:	add    eax,DWORD PTR [esi]
  434d71:	and    BYTE PTR [ecx],al
  434d73:	sbb    eax,0x1a051d05
  434d78:	pop    es
  434d79:	push   cs
  434d7a:	sbb    eax,0x4d821205
  434d7f:	adc    al,BYTE PTR [edx+0xa0a0861]
  434d85:	adc    al,BYTE PTR [ecx+0x6d81126d]
  434d8b:	adc    DWORD PTR [eax+ecx*1],ebp
  434d8e:	or     BYTE PTR [eax],cl
  434d90:	or     BYTE PTR [edx],al
  434d92:	or     ah,BYTE PTR [eax]
  434d94:	add    eax,DWORD PTR [ecx]
  434d96:	push   cs
  434d97:	adc    DWORD PTR [ecx+0x69811171],eax
  434d9d:	add    al,0x20
  434d9f:	add    DWORD PTR [ecx],eax
  434da1:	or     cl,BYTE PTR [ecx]
  434da3:	and    BYTE PTR [edx],al
  434da5:	adc    al,BYTE PTR [edx+0x1d051d5d]
  434dab:	add    eax,0x103200c
  434db0:	adc    al,BYTE PTR [ecx+0x5d821281]
  434db6:	adc    DWORD PTR [edx+0x3200751],eax
  434dbc:	or     BYTE PTR ds:0x7080805,bl
  434dc2:	and    BYTE PTR [ebx],al
  434dc4:	add    DWORD PTR ds:0xa080805,ebx
  434dca:	pop    es
  434dcb:	add    eax,0x81121d1c
  434dd0:	xchg   ebp,eax
  434dd1:	or     BYTE PTR [eax],cl
  434dd3:	or     BYTE PTR [esi],al
  434dd5:	add    BYTE PTR [eax],al
  434dd7:	sbb    eax,0x5958112
  434ddc:	and    BYTE PTR [eax],al
  434dde:	adc    al,BYTE PTR [ecx+0x8070c99]
  434de4:	push   cs
  434de5:	adc    al,BYTE PTR [ecx+0x80e0e9d]
  434deb:	or     BYTE PTR [eax],cl
  434ded:	add    al,BYTE PTR [esi]
  434def:	add    BYTE PTR [ebx],al
  434df1:	push   cs
  434df2:	push   cs
  434df3:	push   cs
  434df4:	push   cs
  434df5:	push   es
  434df6:	add    BYTE PTR [ecx],al
  434df8:	adc    DWORD PTR [edx+0x70d0ec1],eax
  434dfe:	or     ecx,DWORD PTR [ecx]
  434e00:	or     DWORD PTR [ecx],ecx
  434e02:	or     BYTE PTR [ecx],cl
  434e04:	or     BYTE PTR [eax],cl
  434e06:	or     BYTE PTR [edx],al
  434e08:	or     BYTE PTR [ecx],cl
  434e0a:	or     eax,DWORD PTR [edi]
  434e0c:	or     DWORD PTR [ecx],ecx
  434e0e:	or     DWORD PTR [eax],ecx
  434e10:	add    eax,0x8080808
  434e15:	or     BYTE PTR ds:0x51d0a07,cl
  434e1b:	or     DWORD PTR [ecx],ecx
  434e1d:	or     BYTE PTR ds:0x8080808,al
  434e23:	or     BYTE PTR ds:0x82120000,al
  434e29:	jge    0x434e34
  434e2b:	pop    es
  434e2c:	add    edx,DWORD PTR [edx]
  434e2e:	and    BYTE PTR [ecx],0x12
  434e31:	and    BYTE PTR [ecx],0x2
  434e34:	add    eax,0x1c020200
  434e39:	sbb    al,0x5
  434e3b:	and    BYTE PTR [eax],al
  434e3d:	adc    al,BYTE PTR [ecx+0x22007ad]
  434e43:	add    DWORD PTR [esi],ecx
  434e45:	adc    al,BYTE PTR [ecx+0x10705ad]
  434e4b:	adc    al,BYTE PTR [ecx+0x1000831]
  434e51:	adc    al,BYTE PTR [eax-0x3e7fed3f]
  434e57:	push   es
  434e58:	pop    es
  434e59:	add    edx,DWORD PTR [edx]
  434e5b:	cmp    BYTE PTR [edx+eax*1],bl
  434e5e:	add    eax,0x12010120
  434e63:	or     DWORD PTR [eax],ecx
  434e65:	pop    es
  434e66:	add    ecx,DWORD PTR [esi]
  434e68:	sbb    eax,0x81811205
  434e6d:	add    eax,0x51d0100
  434e72:	push   cs
  434e73:	pop    es
  434e74:	and    BYTE PTR [ebx],al
  434e76:	push   cs
  434e77:	sbb    eax,0x6080805
  434e7c:	add    BYTE PTR [edx],al
  434e7e:	or     BYTE PTR ds:0x60805,bl
  434e84:	add    cl,BYTE PTR [edx]
  434e86:	sbb    eax,0x60805
  434e8b:	add    cl,BYTE PTR [ebx*1+0x60805]
  434e92:	add    cl,BYTE PTR ds:0xa08051d
  434e98:	add    BYTE PTR ds:0x8611201,al
  434e9e:	adc    ah,BYTE PTR [ecx+0x8]
  434ea1:	or     BYTE PTR [edi+eax*1],al
  434ea4:	add    DWORD PTR [edx],edx
  434ea6:	cmp    BYTE PTR [edi+eax*1],al
  434ea9:	add    cl,BYTE PTR [eax]
  434eab:	push   cs
  434eac:	add    al,0x0
  434eae:	add    DWORD PTR [esi],ecx
  434eb0:	push   cs
  434eb1:	or     al,BYTE PTR [edi]
  434eb3:	push   es
  434eb4:	push   cs
  434eb5:	or     BYTE PTR [esi],cl
  434eb7:	or     bl,BYTE PTR ds:0x4051d05
  434ebd:	and    BYTE PTR [ecx],al
  434ebf:	or     BYTE PTR [esi],cl
  434ec1:	add    al,0x20
  434ec3:	add    DWORD PTR [ebx],eax
  434ec5:	or     BYTE PTR [edi],al
  434ec7:	add    BYTE PTR [edx],al
  434ec9:	or     cl,BYTE PTR [esi]
  434ecb:	adc    DWORD PTR [ecx+0x1000535],eax
  434ed1:	sbb    eax,0x50a05
  434ed6:	add    DWORD PTR [ecx],eax
  434ed8:	adc    ah,BYTE PTR [ecx+0x5]
  434edb:	pop    es
  434edc:	add    bl,BYTE PTR ds:0x7041c05
  434ee2:	add    DWORD PTR ds:0x17072b05,ebx
  434ee8:	adc    al,BYTE PTR [ecx+0x7d811281]
  434eee:	pop    es
  434eef:	or     BYTE PTR [edx],dl
  434ef1:	adc    BYTE PTR [ebp+0x1d],0x5
  434ef5:	sbb    eax,0x12050205
  434efa:	sbb    BYTE PTR [ebp+0x8],0x1d
  434efe:	add    eax,0x808051d
  434f03:	sbb    eax,0x59811205
  434f08:	or     BYTE PTR [eax],cl
  434f0a:	sbb    eax,0x1d051d05
  434f0f:	add    eax,0x1200508
  434f14:	add    DWORD PTR ds:0x200505,ebx
  434f1a:	adc    al,BYTE PTR [edx+0x5200a5d]
  434f20:	or     BYTE PTR ds:0x1d080805,bl
  434f26:	add    eax,0x3200808
  434f2b:	sbb    eax,0x8051d05
  434f30:	or     BYTE PTR [ecx],cl
  434f32:	and    BYTE PTR [edx],al
  434f34:	add    DWORD PTR [edx],edx
  434f36:	add    DWORD PTR [ecx+0x4558111],0x51d0020
  434f40:	sysret 
  434f42:	or     BYTE PTR [esi],cl
  434f44:	sbb    eax,0x81811205
  434f49:	adc    al,BYTE PTR [ecx+0x8080851]
  434f4f:	or     BYTE PTR [edi],al
  434f51:	adc    eax,0x2858012
  434f56:	or     BYTE PTR [eax],cl
  434f58:	push   es
  434f59:	and    BYTE PTR [edx],al
  434f5b:	add    DWORD PTR ds:0x20060205,ebx
  434f61:	add    DWORD PTR [ecx],eax
  434f63:	adc    al,BYTE PTR [ecx+0x2200781]
  434f69:	add    DWORD PTR [ebx],edx
  434f6b:	add    BYTE PTR [ebx],dl
  434f6d:	add    DWORD PTR [esi],eax
  434f6f:	and    BYTE PTR [eax],al
  434f71:	sbb    eax,0x50d8212
  434f76:	and    BYTE PTR [eax],al
  434f78:	adc    DWORD PTR [ecx+0xf072b8d],eax
  434f7e:	adc    al,BYTE PTR [edx+0x182128d]
  434f84:	sbb    al,0x12
  434f86:	xor    ecx,0x12c98012
  434f8c:	sbb    ecx,0x1d058212
  434f92:	adc    al,BYTE PTR [edx-0x7eedf773]
  434f98:	aad    0x11
  434f9a:	or     DWORD PTR [ebp+0x118d8111],0x121d8d81
  434fa4:	xor    ecx,0x1200608
  434faa:	adc    DWORD PTR [edx+0x20060849],eax
  434fb0:	add    DWORD PTR [ecx],edx
  434fb2:	add    BYTE PTR [ebp+0x8],0xb
  434fb6:	add    BYTE PTR [edx],al
  434fb8:	adc    al,BYTE PTR [edx+0x45821101]
  434fbe:	adc    DWORD PTR [edx+0x1200949],eax
  434fc4:	sbb    eax,0x11f18112
  434fc9:	or     ebp,0x12002005
  434fcf:	add    BYTE PTR ds:0xe040007,0xe
  434fd6:	push   cs
  434fd7:	push   cs
  434fd8:	push   cs
  434fd9:	mov    ebp,cr0
  434fdc:	add    DWORD PTR [esi],ecx
  434fde:	adc    al,BYTE PTR [edx-0x7dede273]
  434fe4:	lea    edx,[edx]
  434fe6:	or     BYTE PTR [ebp+0x2200802],0x2
  434fed:	adc    eax,DWORD PTR [eax]
  434fef:	adc    BYTE PTR [ebx],dl
  434ff1:	add    DWORD PTR ds:0x81120020,eax
  434ff7:	aad    0x8
  434ff9:	and    BYTE PTR [ecx],al
  434ffb:	adc    al,BYTE PTR [eax-0x727ded37]
  435001:	or     BYTE PTR [edi],al
  435003:	add    al,0x8
  435005:	or     BYTE PTR ds:0x6501205,bl
  43500b:	and    BYTE PTR [edx],al
  43500d:	add    DWORD PTR ds:0x7100805,ebx
  435013:	add    edx,DWORD PTR [edx]
  435015:	sub    ecx,0x15f58112
  43501b:	adc    al,BYTE PTR [eax-0x7eedfe73]
  435021:	cmc    
  435022:	add    eax,0x81120000
  435027:	jmp    0x15437036
  43502c:	adc    al,BYTE PTR [eax-0x7eedfe6f]
  435032:	cmc    
  435033:	or     DWORD PTR [eax],esp
  435035:	add    BYTE PTR ds:0x18d8012,dl
  43503b:	adc    eax,DWORD PTR [eax]
  43503d:	or     BYTE PTR ds:0x1898012,dl
  435043:	adc    al,BYTE PTR [ecx+0x121508f5]
  435049:	or     BYTE PTR [ebp-0xa7eedff],0x7
  435050:	and    BYTE PTR [edx],al
  435052:	add    DWORD PTR [edx],edx
  435054:	or     BYTE PTR [ebp+0xa071502],0x8
  43505b:	sbb    eax,0x8080805
  435060:	adc    DWORD PTR [ecx+0x498211ed],eax
  435066:	or     BYTE PTR [ecx],dl
  435068:	sub    ebp,0x68d8111
  43506e:	and    BYTE PTR [ecx],al
  435070:	or     BYTE PTR [ecx],dl
  435072:	or     BYTE PTR [ecx+0xd],0x7
  435076:	add    eax,0x1182121d
  43507b:	or     BYTE PTR ds:0x88d8212,bl
  435081:	or     BYTE PTR [esi],al
  435083:	and    BYTE PTR [eax],al
  435085:	sbb    eax,0xe118212
  43508a:	pop    es
  43508b:	add    eax,0x11f18112
  435090:	sbb    ebp,0x81121d07
  435096:	icebp  
  435097:	or     BYTE PTR [eax+eiz*1],al
  43509a:	add    DWORD PTR [esp+ebx*1],ebx
  43509d:	add    esp,DWORD PTR [eax]
  43509f:	add    BYTE PTR [esi],al
  4350a1:	add    eax,0x82120020
  4350a6:	or     eax,0x1d002006
  4350ab:	adc    al,BYTE PTR [edx+0xd07218d]
  4350b1:	or     BYTE PTR [ecx],dl
  4350b3:	sbb    ebp,0x82120508
  4350b9:	add    DWORD PTR [edx],edx
  4350bb:	xor    ecx,0x128d8212
  4350c1:	cmp    ecx,0x128d8212
  4350c7:	add    BYTE PTR [ecx],0x12
  4350ca:	xor    ecx,0xe5811108
  4350d0:	add    al,0x6
  4350d2:	adc    DWORD PTR [ecx+0x2005dd],eax
  4350d8:	adc    DWORD PTR [ecx+0x12004e5],eax
  4350de:	push   cs
  4350df:	or     BYTE PTR ds:0x51d0120,al
  4350e5:	or     BYTE PTR ds:0x1d080120,al
  4350eb:	add    eax,0x1203200e
  4350f0:	add    BYTE PTR [ecx],0x8
  4350f3:	sbb    eax,0x1d8d8212
  4350f8:	adc    al,BYTE PTR [edx+0x20058d]
  4350fe:	adc    DWORD PTR [edx+0x200545],eax
  435104:	adc    DWORD PTR [edx+0x2200949],eax
  43510a:	or     BYTE PTR [ecx],dl
  43510c:	add    BYTE PTR [ebp+0x11],0x82
  435110:	dec    ecx
  435111:	push   cs
  435112:	and    BYTE PTR [ebx],al
  435114:	adc    al,BYTE PTR [ecx+0x121d08f1]
  43511a:	or     BYTE PTR [ebp-0x727dede3],0x5
  435121:	and    BYTE PTR [eax],al
  435123:	adc    DWORD PTR [edx+0x1200641],eax
  435129:	or     BYTE PTR [ecx],dl
  43512b:	add    BYTE PTR [ecx+0xe],0x20
  43512f:	add    edx,DWORD PTR [edx]
  435131:	or     BYTE PTR [ebp-0x7dede2f8],0x8d
  435138:	sbb    eax,0xe8d8212
  43513d:	and    BYTE PTR [ebx],al
  43513f:	adc    al,BYTE PTR [ecx+0x121d08f9]
  435145:	or     BYTE PTR [ebp-0x727dede3],0x5
  43514c:	and    BYTE PTR [eax],al
  43514e:	adc    DWORD PTR [ecx+0xfd],eax
  435154:	add    BYTE PTR [ecx+0x11],bl
  435157:	add    BYTE PTR [edx],ah
  435159:	add    BYTE PTR [ebx],dh
  43515b:	add    BYTE PTR [eax+eax*1+0x39],al
  43515f:	add    BYTE PTR [edx+0x0],al
  435162:	cmp    DWORD PTR [eax],eax
  435164:	xor    al,0x0
  435166:	inc    ecx
  435167:	add    BYTE PTR [ecx],bh
  435169:	add    BYTE PTR [eax],bh
  43516b:	add    BYTE PTR [edx+0x0],al
  43516e:	sub    eax,0x36003700
  435173:	add    BYTE PTR [ecx+0x0],al
  435176:	cmp    BYTE PTR [eax],al
  435178:	sub    eax,0x38003400
  43517d:	add    BYTE PTR [ecx],dh
  43517f:	add    BYTE PTR [eax],dh
  435181:	add    BYTE PTR ds:0x31004200,ch
  435187:	add    BYTE PTR [ecx+0x0],al
  43518a:	xor    BYTE PTR [eax],al
  43518c:	sub    eax,0x42003400
  435191:	add    BYTE PTR [ebp+0x0],al
  435194:	aaa    
  435195:	add    BYTE PTR [ebx+0x0],al
  435198:	xor    al,0x0
  43519a:	inc    esi
  43519b:	add    BYTE PTR [ecx],bh
  43519d:	add    BYTE PTR [ebx+0x0],al
  4351a0:	cmp    DWORD PTR [eax],eax
  4351a2:	cmp    BYTE PTR [eax],al
  4351a4:	inc    esp
  4351a5:	add    BYTE PTR [ecx+0x0],al
  4351a8:	xor    al,BYTE PTR [eax]
  4351aa:	and    eax,DWORD PTR [eax]
  4351ac:	adc    al,0x0
  4351ae:	add    DWORD PTR [ecx],eax
  4351b0:	add    BYTE PTR [ecx],ch
  4351b2:	push   esi
  4351b3:	add    BYTE PTR [edi+0x0],al
  4351b6:	inc    esi
  4351b7:	add    BYTE PTR [edx+0x0],bh
  4351ba:	popa   
  4351bb:	add    BYTE PTR [ecx+0x0],bh
  4351be:	inc    edx
  4351bf:	add    BYTE PTR [esi+0x0],cl
  4351c2:	pop    ecx
  4351c3:	add    BYTE PTR [edi+0x0],dl
  4351c6:	xor    eax,0x5a006800
  4351cb:	add    BYTE PTR [edx],dh
  4351cd:	add    BYTE PTR [esi+0x0],dl
  4351d0:	jns    0x4351d2
  4351d2:	dec    edx
  4351d3:	add    BYTE PTR [ecx+0x0],dl
  4351d6:	cmp    eax,0x3d00
  4351db:	sub    DWORD PTR [esi+0x0],edx
  4351de:	inc    edi
  4351df:	add    BYTE PTR [esi+0x0],al
  4351e2:	jp     0x4351e4
  4351e4:	popa   
  4351e5:	add    BYTE PTR [ecx+0x0],bh
  4351e8:	inc    edx
  4351e9:	add    BYTE PTR [esi+0x0],cl
  4351ec:	pop    ecx
  4351ed:	add    BYTE PTR [edi+0x0],dl
  4351f0:	xor    eax,0x5a006800
  4351f5:	add    BYTE PTR [edx],dh
  4351f7:	add    BYTE PTR [esi+0x0],dl
  4351fa:	jns    0x4351fc
  4351fc:	dec    edx
  4351fd:	add    BYTE PTR [ecx+0x0],al
  435200:	cmp    eax,0x3d00
  435205:	pop    ds
  435206:	push   eax
  435207:	add    BYTE PTR [ebp+0x0],dh
  43520a:	bound  eax,QWORD PTR [eax]
  43520c:	ins    BYTE PTR es:[edi],dx
  43520d:	add    BYTE PTR [ecx+0x0],ch
  435210:	arpl   WORD PTR [eax],ax
  435212:	dec    ebx
  435213:	add    BYTE PTR [ebp+0x0],ah
  435216:	jns    0x435218
  435218:	push   esp
  435219:	add    BYTE PTR [edi+0x0],ch
  43521c:	imul   eax,DWORD PTR [eax],0x65
  43521f:	add    BYTE PTR [esi+0x0],ch
  435222:	cmp    eax,0x701f0000
  435227:	add    BYTE PTR [ebp+0x0],dh
  43522a:	bound  eax,QWORD PTR [eax]
  43522c:	ins    BYTE PTR es:[edi],dx
  43522d:	add    BYTE PTR [ecx+0x0],ch
  435230:	arpl   WORD PTR [eax],ax
  435232:	imul   eax,DWORD PTR [eax],0x65
  435235:	add    BYTE PTR [ecx+0x0],bh
  435238:	je     0x43523a
  43523a:	outs   dx,DWORD PTR ds:[esi]
  43523b:	add    BYTE PTR [ebx+0x0],ch
  43523e:	add    BYTE PTR gs:[esi+0x0],ch
  435242:	cmp    eax,0x56290000
  435247:	add    BYTE PTR [edi+0x0],al
  43524a:	inc    esi
  43524b:	add    BYTE PTR [edx+0x0],bh
  43524e:	popa   
  43524f:	add    BYTE PTR [ecx+0x0],bh
  435252:	inc    edx
  435253:	add    BYTE PTR [esi+0x0],cl
  435256:	pop    ecx
  435257:	add    BYTE PTR [edi+0x0],dl
  43525a:	xor    eax,0x5a006800
  43525f:	add    BYTE PTR [edx],dh
  435261:	add    BYTE PTR [esi+0x0],dl
  435264:	jns    0x435266
  435266:	dec    ebx
  435267:	add    BYTE PTR [edi+0x0],ah
  43526a:	cmp    eax,0x3d00
  43526f:	add    ebp,DWORD PTR [esi]
  435271:	add    BYTE PTR [eax],al
  435273:	pop    ss
  435274:	pop    edi
  435275:	add    BYTE PTR [ebp+0x0],al
  435278:	outs   dx,BYTE PTR ds:[esi]
  435279:	add    BYTE PTR [ebx+0x0],ah
  43527c:	jb     0x43527e
  43527e:	jns    0x435280
  435280:	jo     0x435282
  435282:	je     0x435284
  435284:	add    BYTE PTR gs:[eax+eax*1+0x24],ah
  435289:	add    BYTE PTR [eax],al
  43528b:	pop    ecx
  43528c:	add    BYTE PTR fs:[ecx+0x0],bh
  435290:	outs   dx,BYTE PTR ds:[esi]
  435291:	add    BYTE PTR [ecx+0x0],ah
  435294:	ins    DWORD PTR es:[edi],dx
  435295:	add    BYTE PTR [ecx+0x0],ch
  435298:	arpl   WORD PTR [eax],ax
  43529a:	and    BYTE PTR [eax],al
  43529c:	ins    DWORD PTR es:[edi],dx
  43529d:	add    BYTE PTR [ebp+0x0],ah
  4352a0:	je     0x4352a2
  4352a2:	push   0x64006f00
  4352a7:	add    BYTE PTR [eax],ah
  4352a9:	add    BYTE PTR [eax+eax*1+0x6f],ah
  4352ad:	add    BYTE PTR [ebp+0x0],ah
  4352b0:	jae    0x4352b2
  4352b2:	and    BYTE PTR [eax],al
  4352b4:	outs   dx,BYTE PTR ds:[esi]
  4352b5:	add    BYTE PTR [edi+0x0],ch
  4352b8:	je     0x4352ba
  4352ba:	and    BYTE PTR [eax],al
  4352bc:	jae    0x4352be
  4352be:	jne    0x4352c0
  4352c0:	jo     0x4352c2
  4352c2:	jo     0x4352c4
  4352c4:	outs   dx,DWORD PTR ds:[esi]
  4352c5:	add    BYTE PTR [edx+0x0],dh
  4352c8:	je     0x4352ca
  4352ca:	and    BYTE PTR [eax],al
  4352cc:	data16 add BYTE PTR [ecx+0x0],ah
  4352d0:	jne    0x4352d2
  4352d2:	ins    BYTE PTR es:[edi],dx
  4352d3:	add    BYTE PTR [eax+eax*1+0x20],dh
  4352d7:	add    BYTE PTR [ebx+0x0],ah
  4352da:	ins    BYTE PTR es:[edi],dx
  4352db:	add    BYTE PTR [ecx+0x0],ah
  4352de:	jne    0x4352e0
  4352e0:	jae    0x4352e2
  4352e2:	add    BYTE PTR gs:[eax],al
  4352e5:	das    
  4352e6:	jne    0x4352e8
  4352e8:	outs   dx,BYTE PTR ds:[esi]
  4352e9:	add    BYTE PTR [ebp+0x0],ah
  4352ec:	js     0x4352ee
  4352ee:	jo     0x4352f0
  4352f0:	add    BYTE PTR gs:[ebx+0x0],ah
  4352f4:	je     0x4352f6
  4352f6:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
  4352fb:	add    BYTE PTR [edi+0x0],cl
  4352fe:	jo     0x435300
  435300:	add    BYTE PTR gs:[edx+0x0],dh
  435304:	popa   
  435305:	add    BYTE PTR [esi+0x0],ch
  435308:	add    BYTE PTR fs:[eax+eax*1+0x79],dl
  43530d:	add    BYTE PTR [eax+0x0],dh
  435310:	add    BYTE PTR gs:[eax],ah
  435313:	add    BYTE PTR [eax],al
  435315:	add    BYTE PTR [eax],al
  435317:	add    BYTE PTR [eax+0x53],al
  43531a:	add    eax,DWORD PTR [eax]
	...
  435324:	bound  edx,QWORD PTR [ebx+0x3]
  435327:	add    BYTE PTR [eax],al
  435329:	and    BYTE PTR [eax],al
	...
  43533f:	add    BYTE PTR [ebx+edx*2+0x3],dl
	...
  435353:	add    BYTE PTR [eax],al
  435355:	add    BYTE PTR [edi+0x43],bl
  435358:	outs   dx,DWORD PTR ds:[esi]
  435359:	jb     0x4353a0
  43535b:	js     0x4353c2
  43535d:	dec    ebp
  43535e:	popa   
  43535f:	imul   ebp,DWORD PTR [esi+0x0],0x6f63736d
  435366:	jb     0x4353cd
  435368:	gs cs fs ins BYTE PTR es:[edi],dx
  43536c:	ins    BYTE PTR es:[edi],dx
  43536d:	add    BYTE PTR [eax],al
  43536f:	add    BYTE PTR [eax],al
  435371:	add    bh,bh
  435373:	and    eax,0x402000
