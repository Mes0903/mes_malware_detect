
c6ec7986d25edb884f7bbe7dc0b592305ba70c52a01603e9d43da3a5573b171c.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x64025304
64001006:	jmp    0x6401272b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x64025304
64001019:	call   0x6401272b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64012612
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402aa24
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x64012a5b
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x64025050
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64025088
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64025044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64025040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x64025060
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64025048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x6402507c
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x64025070
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x6402508c
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64025088
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x64001680
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64025044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64025040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x64025060
64001199:	call   0x640016d0
6400119e:	push   esi
6400119f:	call   0x64012612
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x64022c59
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x6402d09c
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x6402d09c
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64025084
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001860
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64012612
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x6402e540
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x6402e540
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x640276ac
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001860
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64012612
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x6402e540
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x6402e540
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x640276b8
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001860
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64012612
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x640276c4
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x640127c8
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64012612
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x64012e6c
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x64022d68
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x6402d09c
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x640129f1
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x64025080
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64025044
64001536:	mov    ebp,DWORD PTR ds:0x64025040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x64025060
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x64025060
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x64025080
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x64025060
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x64025060
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x64025070
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x64025060
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64012612
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	push   esi
64001681:	mov    esi,ecx
64001683:	push   edi
64001684:	mov    edi,DWORD PTR [esi]
64001686:	test   edi,edi
64001688:	je     0x640016a2
6400168a:	push   ebx
6400168b:	call   DWORD PTR ds:0x64025044
64001691:	push   edi
64001692:	mov    ebx,eax
64001694:	call   DWORD PTR ds:0x64025040
6400169a:	push   ebx
6400169b:	call   DWORD PTR ds:0x64025060
640016a1:	pop    ebx
640016a2:	pop    edi
640016a3:	mov    DWORD PTR [esi],0x0
640016a9:	pop    esi
640016aa:	ret    
640016ab:	int3   
640016ac:	int3   
640016ad:	int3   
640016ae:	int3   
640016af:	int3   
640016b0:	push   esi
640016b1:	mov    esi,DWORD PTR [eax]
640016b3:	test   esi,esi
640016b5:	je     0x640016c5
640016b7:	call   0x640016d0
640016bc:	push   esi
640016bd:	call   0x64012612
640016c2:	add    esp,0x4
640016c5:	pop    esi
640016c6:	ret    
640016c7:	int3   
640016c8:	int3   
640016c9:	int3   
640016ca:	int3   
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	sub    esp,0x8
640016d3:	mov    eax,DWORD PTR [esi+0xc]
640016d6:	test   eax,eax
640016d8:	push   ebx
640016d9:	mov    ebx,DWORD PTR ds:0x64025040
640016df:	push   ebp
640016e0:	mov    ebp,DWORD PTR ds:0x64025060
640016e6:	push   edi
640016e7:	mov    edi,DWORD PTR ds:0x64025044
640016ed:	mov    DWORD PTR [esp+0xc],eax
640016f1:	je     0x64001707
640016f3:	call   edi
640016f5:	mov    DWORD PTR [esp+0x10],eax
640016f9:	mov    eax,DWORD PTR [esp+0xc]
640016fd:	push   eax
640016fe:	call   ebx
64001700:	mov    ecx,DWORD PTR [esp+0x10]
64001704:	push   ecx
64001705:	call   ebp
64001707:	mov    DWORD PTR [esi+0xc],0x0
6400170e:	mov    eax,DWORD PTR [esi+0x8]
64001711:	test   eax,eax
64001713:	mov    DWORD PTR [esp+0x10],eax
64001717:	je     0x6400172d
64001719:	call   edi
6400171b:	mov    edx,DWORD PTR [esp+0x10]
6400171f:	push   edx
64001720:	mov    DWORD PTR [esp+0x10],eax
64001724:	call   ebx
64001726:	mov    eax,DWORD PTR [esp+0xc]
6400172a:	push   eax
6400172b:	call   ebp
6400172d:	mov    DWORD PTR [esi+0x8],0x0
64001734:	mov    eax,DWORD PTR [esi+0x4]
64001737:	test   eax,eax
64001739:	mov    DWORD PTR [esp+0x10],eax
6400173d:	je     0x64001753
6400173f:	call   edi
64001741:	mov    ecx,DWORD PTR [esp+0x10]
64001745:	push   ecx
64001746:	mov    DWORD PTR [esp+0x10],eax
6400174a:	call   ebx
6400174c:	mov    edx,DWORD PTR [esp+0xc]
64001750:	push   edx
64001751:	call   ebp
64001753:	mov    DWORD PTR [esi+0x4],0x0
6400175a:	mov    eax,DWORD PTR [esi]
6400175c:	test   eax,eax
6400175e:	mov    DWORD PTR [esp+0x10],eax
64001762:	je     0x64001772
64001764:	call   edi
64001766:	mov    edi,eax
64001768:	mov    eax,DWORD PTR [esp+0x10]
6400176c:	push   eax
6400176d:	call   ebx
6400176f:	push   edi
64001770:	call   ebp
64001772:	pop    edi
64001773:	pop    ebp
64001774:	mov    DWORD PTR [esi],0x0
6400177a:	pop    ebx
6400177b:	add    esp,0x8
6400177e:	ret    
6400177f:	int3   
64001780:	push   ebx
64001781:	mov    ebx,DWORD PTR [esp+0x8]
64001785:	push   ebp
64001786:	mov    ebp,DWORD PTR [esp+0x10]
6400178a:	cmp    DWORD PTR [ebx+0x14],ebp
6400178d:	push   esi
6400178e:	push   edi
6400178f:	mov    esi,ecx
64001791:	jae    0x64001798
64001793:	call   0x640125ce
64001798:	mov    edi,DWORD PTR [ebx+0x14]
6400179b:	mov    eax,DWORD PTR [esp+0x1c]
6400179f:	sub    edi,ebp
640017a1:	cmp    eax,edi
640017a3:	jae    0x640017a7
640017a5:	mov    edi,eax
640017a7:	cmp    esi,ebx
640017a9:	jne    0x640017ca
640017ab:	push   0xffffffff
640017ad:	add    edi,ebp
640017af:	push   edi
640017b0:	mov    ecx,esi
640017b2:	call   0x64001ac0
640017b7:	push   ebp
640017b8:	push   0x0
640017ba:	mov    ecx,esi
640017bc:	call   0x64001ac0
640017c1:	pop    edi
640017c2:	mov    eax,esi
640017c4:	pop    esi
640017c5:	pop    ebp
640017c6:	pop    ebx
640017c7:	ret    0xc
640017ca:	cmp    edi,0xfffffffe
640017cd:	jbe    0x640017d4
640017cf:	call   0x6401258f
640017d4:	mov    eax,DWORD PTR [esi+0x18]
640017d7:	cmp    eax,edi
640017d9:	jae    0x640017f6
640017db:	mov    eax,DWORD PTR [esi+0x14]
640017de:	push   eax
640017df:	push   edi
640017e0:	mov    ecx,esi
640017e2:	call   0x64001b60
640017e7:	test   edi,edi
640017e9:	jbe    0x64001851
640017eb:	cmp    DWORD PTR [ebx+0x18],0x10
640017ef:	jb     0x64001820
640017f1:	mov    edx,DWORD PTR [ebx+0x4]
640017f4:	jmp    0x64001823
640017f6:	test   edi,edi
640017f8:	jne    0x640017e9
640017fa:	cmp    eax,0x10
640017fd:	mov    DWORD PTR [esi+0x14],edi
64001800:	jb     0x64001811
64001802:	mov    eax,DWORD PTR [esi+0x4]
64001805:	pop    edi
64001806:	mov    BYTE PTR [eax],0x0
64001809:	mov    eax,esi
6400180b:	pop    esi
6400180c:	pop    ebp
6400180d:	pop    ebx
6400180e:	ret    0xc
64001811:	lea    eax,[esi+0x4]
64001814:	pop    edi
64001815:	mov    BYTE PTR [eax],0x0
64001818:	mov    eax,esi
6400181a:	pop    esi
6400181b:	pop    ebp
6400181c:	pop    ebx
6400181d:	ret    0xc
64001820:	lea    edx,[ebx+0x4]
64001823:	mov    ecx,DWORD PTR [esi+0x18]
64001826:	cmp    ecx,0x10
64001829:	lea    ebx,[esi+0x4]
6400182c:	jb     0x64001832
6400182e:	mov    eax,DWORD PTR [ebx]
64001830:	jmp    0x64001834
64001832:	mov    eax,ebx
64001834:	push   edi
64001835:	add    edx,ebp
64001837:	push   edx
64001838:	push   ecx
64001839:	push   eax
6400183a:	call   0x640127c8
6400183f:	add    esp,0x10
64001842:	cmp    DWORD PTR [esi+0x18],0x10
64001846:	mov    DWORD PTR [esi+0x14],edi
64001849:	jb     0x6400184d
6400184b:	mov    ebx,DWORD PTR [ebx]
6400184d:	mov    BYTE PTR [ebx+edi*1],0x0
64001851:	pop    edi
64001852:	mov    eax,esi
64001854:	pop    esi
64001855:	pop    ebp
64001856:	pop    ebx
64001857:	ret    0xc
6400185a:	int3   
6400185b:	int3   
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	push   ebx
64001861:	push   ebp
64001862:	push   esi
64001863:	mov    esi,ecx
64001865:	mov    ecx,DWORD PTR [esi+0x18]
64001868:	cmp    ecx,0x10
6400186b:	lea    ebx,[esi+0x4]
6400186e:	jb     0x64001874
64001870:	mov    eax,DWORD PTR [ebx]
64001872:	jmp    0x64001876
64001874:	mov    eax,ebx
64001876:	mov    ebp,DWORD PTR [esp+0x10]
6400187a:	cmp    ebp,eax
6400187c:	jb     0x640018af
6400187e:	cmp    ecx,0x10
64001881:	jb     0x64001887
64001883:	mov    eax,DWORD PTR [ebx]
64001885:	jmp    0x64001889
64001887:	mov    eax,ebx
64001889:	mov    edx,DWORD PTR [esi+0x14]
6400188c:	add    edx,eax
6400188e:	cmp    edx,ebp
64001890:	jbe    0x640018af
64001892:	cmp    ecx,0x10
64001895:	jb     0x64001899
64001897:	mov    ebx,DWORD PTR [ebx]
64001899:	mov    eax,DWORD PTR [esp+0x14]
6400189d:	push   eax
6400189e:	sub    ebp,ebx
640018a0:	push   ebp
640018a1:	push   esi
640018a2:	mov    ecx,esi
640018a4:	call   0x64001780
640018a9:	pop    esi
640018aa:	pop    ebp
640018ab:	pop    ebx
640018ac:	ret    0x8
640018af:	push   edi
640018b0:	mov    edi,DWORD PTR [esp+0x18]
640018b4:	cmp    edi,0xfffffffe
640018b7:	jbe    0x640018be
640018b9:	call   0x6401258f
640018be:	mov    eax,DWORD PTR [esi+0x18]
640018c1:	cmp    eax,edi
640018c3:	jae    0x640018e1
640018c5:	mov    ecx,DWORD PTR [esi+0x14]
640018c8:	push   ecx
640018c9:	push   edi
640018ca:	mov    ecx,esi
640018cc:	call   0x64001b60
640018d1:	test   edi,edi
640018d3:	jbe    0x64001918
640018d5:	mov    ecx,DWORD PTR [esi+0x18]
640018d8:	cmp    ecx,0x10
640018db:	jb     0x640018fb
640018dd:	mov    eax,DWORD PTR [ebx]
640018df:	jmp    0x640018fd
640018e1:	test   edi,edi
640018e3:	jne    0x640018d3
640018e5:	cmp    eax,0x10
640018e8:	mov    DWORD PTR [esi+0x14],edi
640018eb:	jb     0x640018ef
640018ed:	mov    ebx,DWORD PTR [ebx]
640018ef:	pop    edi
640018f0:	mov    eax,esi
640018f2:	pop    esi
640018f3:	pop    ebp
640018f4:	mov    BYTE PTR [ebx],0x0
640018f7:	pop    ebx
640018f8:	ret    0x8
640018fb:	mov    eax,ebx
640018fd:	push   edi
640018fe:	push   ebp
640018ff:	push   ecx
64001900:	push   eax
64001901:	call   0x640127c8
64001906:	add    esp,0x10
64001909:	cmp    DWORD PTR [esi+0x18],0x10
6400190d:	mov    DWORD PTR [esi+0x14],edi
64001910:	jb     0x64001914
64001912:	mov    ebx,DWORD PTR [ebx]
64001914:	mov    BYTE PTR [ebx+edi*1],0x0
64001918:	pop    edi
64001919:	mov    eax,esi
6400191b:	pop    esi
6400191c:	pop    ebp
6400191d:	pop    ebx
6400191e:	ret    0x8
64001921:	int3   
64001922:	int3   
64001923:	int3   
64001924:	int3   
64001925:	int3   
64001926:	int3   
64001927:	int3   
64001928:	int3   
64001929:	int3   
6400192a:	int3   
6400192b:	int3   
6400192c:	int3   
6400192d:	int3   
6400192e:	int3   
6400192f:	int3   
64001930:	mov    eax,DWORD PTR [ecx]
64001932:	sub    eax,0x10
64001935:	lea    ecx,[eax+0xc]
64001938:	or     edx,0xffffffff
6400193b:	lock xadd DWORD PTR [ecx],edx
6400193f:	dec    edx
64001940:	test   edx,edx
64001942:	jg     0x6400194e
64001944:	mov    ecx,DWORD PTR [eax]
64001946:	mov    edx,DWORD PTR [ecx]
64001948:	push   eax
64001949:	mov    eax,DWORD PTR [edx+0x4]
6400194c:	call   eax
6400194e:	ret    
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x640127c8
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x640125ce
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x6401258f
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x6401258f
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x640127c8
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x640125ce
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x64012843
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x64022990
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x6402d09c
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x640129f1
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x6401266d
64001bfa:	push   0x6402aa5c
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x64025304
64001c0a:	call   0x64012a5b
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x640127c8
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64012612
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64012612
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x64012a5b
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x640129f1
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x6401266d
64001d1e:	push   0x6402aa5c
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x64025304
64001d30:	call   0x64012a5b
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x640126d3
64001d6d:	mov    DWORD PTR [esi],0x64025304
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x640130e6
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x6401327b
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64025034
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x64025030
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x6402502c
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x6402e4cc
64001fac:	call   0x64012241
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x6402503c
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x6402e4cc
64001ff9:	call   0x64012241
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x64022be8
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   ecx
6400202f:	push   esi
64002030:	mov    eax,ds:0x6402d09c
64002035:	xor    eax,esp
64002037:	push   eax
64002038:	lea    eax,[esp+0xc]
6400203c:	mov    fs:0x0,eax
64002042:	mov    esi,ecx
64002044:	mov    DWORD PTR [esp+0x8],esi
64002048:	call   0x6401265c
6400204d:	xor    eax,eax
6400204f:	mov    DWORD PTR [esp+0x14],eax
64002053:	lea    ecx,[esi+0xc]
64002056:	mov    DWORD PTR [esi],0x64025438
6400205c:	push   0xffffffff
6400205e:	mov    DWORD PTR [ecx+0x14],eax
64002061:	mov    DWORD PTR [ecx+0x18],0xf
64002068:	push   eax
64002069:	mov    BYTE PTR [ecx+0x4],al
6400206c:	mov    eax,DWORD PTR [esp+0x24]
64002070:	push   eax
64002071:	call   0x64001780
64002076:	mov    eax,esi
64002078:	mov    ecx,DWORD PTR [esp+0xc]
6400207c:	mov    DWORD PTR fs:0x0,ecx
64002083:	pop    ecx
64002084:	pop    esi
64002085:	add    esp,0x10
64002088:	ret    0x4
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   esi
64002091:	mov    esi,ecx
64002093:	mov    DWORD PTR [esi],0x64025438
64002099:	cmp    DWORD PTR [esi+0x24],0x10
6400209d:	jb     0x640020ab
6400209f:	mov    eax,DWORD PTR [esi+0x10]
640020a2:	push   eax
640020a3:	call   0x64012612
640020a8:	add    esp,0x4
640020ab:	xor    eax,eax
640020ad:	mov    DWORD PTR [esi+0x24],0xf
640020b4:	mov    DWORD PTR [esi+0x20],eax
640020b7:	mov    BYTE PTR [esi+0x10],al
640020ba:	mov    ecx,esi
640020bc:	pop    esi
640020bd:	jmp    0x6401272b
640020c2:	int3   
640020c3:	int3   
640020c4:	int3   
640020c5:	int3   
640020c6:	int3   
640020c7:	int3   
640020c8:	int3   
640020c9:	int3   
640020ca:	int3   
640020cb:	int3   
640020cc:	int3   
640020cd:	int3   
640020ce:	int3   
640020cf:	int3   
640020d0:	cmp    DWORD PTR [ecx+0x24],0x10
640020d4:	jb     0x640020da
640020d6:	mov    eax,DWORD PTR [ecx+0x10]
640020d9:	ret    
640020da:	lea    eax,[ecx+0x10]
640020dd:	ret    
640020de:	int3   
640020df:	int3   
640020e0:	push   esi
640020e1:	mov    esi,ecx
640020e3:	mov    DWORD PTR [esi],0x64025438
640020e9:	cmp    DWORD PTR [esi+0x24],0x10
640020ed:	jb     0x640020fb
640020ef:	mov    eax,DWORD PTR [esi+0x10]
640020f2:	push   eax
640020f3:	call   0x64012612
640020f8:	add    esp,0x4
640020fb:	xor    eax,eax
640020fd:	mov    DWORD PTR [esi+0x24],0xf
64002104:	mov    DWORD PTR [esi+0x20],eax
64002107:	mov    ecx,esi
64002109:	mov    BYTE PTR [esi+0x10],al
6400210c:	call   0x6401272b
64002111:	test   BYTE PTR [esp+0x8],0x1
64002116:	je     0x64002121
64002118:	push   esi
64002119:	call   0x64012612
6400211e:	add    esp,0x4
64002121:	mov    eax,esi
64002123:	pop    esi
64002124:	ret    0x4
64002127:	int3   
64002128:	int3   
64002129:	int3   
6400212a:	int3   
6400212b:	int3   
6400212c:	int3   
6400212d:	int3   
6400212e:	int3   
6400212f:	int3   
64002130:	push   0xffffffff
64002132:	push   0x64022bb8
64002137:	mov    eax,fs:0x0
6400213d:	push   eax
6400213e:	push   ecx
6400213f:	push   esi
64002140:	push   edi
64002141:	mov    eax,ds:0x6402d09c
64002146:	xor    eax,esp
64002148:	push   eax
64002149:	lea    eax,[esp+0x10]
6400214d:	mov    fs:0x0,eax
64002153:	mov    esi,ecx
64002155:	mov    DWORD PTR [esp+0xc],esi
64002159:	mov    edi,DWORD PTR [esp+0x20]
6400215d:	push   edi
6400215e:	call   0x640126d3
64002163:	xor    edx,edx
64002165:	mov    DWORD PTR [esp+0x18],edx
64002169:	push   0xffffffff
6400216b:	lea    ecx,[esi+0xc]
6400216e:	mov    DWORD PTR [esi],0x64025438
64002174:	lea    eax,[edi+0xc]
64002177:	push   edx
64002178:	mov    DWORD PTR [ecx+0x18],0xf
6400217f:	mov    DWORD PTR [ecx+0x14],edx
64002182:	push   eax
64002183:	mov    BYTE PTR [ecx+0x4],dl
64002186:	call   0x64001780
6400218b:	mov    eax,esi
6400218d:	mov    ecx,DWORD PTR [esp+0x10]
64002191:	mov    DWORD PTR fs:0x0,ecx
64002198:	pop    ecx
64002199:	pop    edi
6400219a:	pop    esi
6400219b:	add    esp,0x10
6400219e:	ret    0x4
640021a1:	int3   
640021a2:	int3   
640021a3:	int3   
640021a4:	int3   
640021a5:	int3   
640021a6:	int3   
640021a7:	int3   
640021a8:	int3   
640021a9:	int3   
640021aa:	int3   
640021ab:	int3   
640021ac:	int3   
640021ad:	int3   
640021ae:	int3   
640021af:	int3   
640021b0:	push   0xffffffff
640021b2:	push   0x64023d9b
640021b7:	mov    eax,fs:0x0
640021bd:	push   eax
640021be:	sub    esp,0x41c
640021c4:	mov    eax,ds:0x6402d09c
640021c9:	xor    eax,esp
640021cb:	mov    DWORD PTR [esp+0x418],eax
640021d2:	push   ebx
640021d3:	push   ebp
640021d4:	push   esi
640021d5:	push   edi
640021d6:	mov    eax,ds:0x6402d09c
640021db:	xor    eax,esp
640021dd:	push   eax
640021de:	lea    eax,[esp+0x430]
640021e5:	mov    fs:0x0,eax
640021eb:	mov    esi,DWORD PTR [esp+0x440]
640021f2:	mov    ebx,DWORD PTR [esp+0x444]
640021f9:	mov    ebp,DWORD PTR [esp+0x448]
64002200:	lea    eax,[esp+0x224]
64002207:	push   eax
64002208:	push   0x100
6400220d:	mov    DWORD PTR [esp+0x20],esi
64002211:	mov    DWORD PTR [esp+0x1c],0x0
64002219:	call   0x6400d3f0
6400221e:	call   eax
64002220:	cmp    eax,0x100
64002225:	jbe    0x64002238
64002227:	push   0x640276c8
6400222c:	mov    ecx,esi
6400222e:	call   0x640025a0
64002233:	jmp    0x640023c5
64002238:	lea    ecx,[esp+0x1c]
6400223c:	push   ecx
6400223d:	push   0x0
6400223f:	lea    edx,[esp+0x22c]
64002246:	push   0x640276cc
6400224b:	push   edx
6400224c:	call   0x6400d4d0
64002251:	call   eax
64002253:	test   eax,eax
64002255:	je     0x64002227
64002257:	mov    edi,DWORD PTR ds:0x64025050
6400225d:	xor    esi,esi
6400225f:	nop
64002260:	cmp    esi,0x708
64002266:	je     0x64002343
6400226c:	lea    eax,[esp+0x1c]
64002270:	push   eax
64002271:	call   0x6400d230
64002276:	call   eax
64002278:	test   eax,eax
6400227a:	jne    0x6400228d
6400227c:	push   esi
6400227d:	call   edi
6400227f:	add    esi,0xc8
64002285:	cmp    esi,0x7d0
6400228b:	jne    0x64002260
6400228d:	xor    esi,esi
6400228f:	cmp    esi,0x708
64002295:	je     0x64002343
6400229b:	lea    ecx,[esp+0x1c]
6400229f:	push   0x0
640022a1:	push   ecx
640022a2:	call   0x6400d5b0
640022a7:	call   eax
640022a9:	test   eax,eax
640022ab:	jne    0x640022be
640022ad:	push   esi
640022ae:	call   edi
640022b0:	add    esi,0xc8
640022b6:	cmp    esi,0x7d0
640022bc:	jne    0x6400228f
640022be:	lea    eax,[esp+0x1c]
640022c2:	lea    edx,[eax+0x2]
640022c5:	mov    cx,WORD PTR [eax]
640022c8:	add    eax,0x2
640022cb:	test   cx,cx
640022ce:	jne    0x640022c5
640022d0:	sub    eax,edx
640022d2:	sar    eax,1
640022d4:	push   eax
640022d5:	lea    edx,[esp+0x20]
640022d9:	push   edx
640022da:	mov    ecx,ebp
640022dc:	call   0x64002af0
640022e1:	lea    eax,[esp+0x1c]
640022e5:	push   eax
640022e6:	lea    ecx,[esp+0x18]
640022ea:	call   0x640025a0
640022ef:	push   0x640276d4
640022f4:	lea    ecx,[esp+0x18]
640022f8:	mov    DWORD PTR [esp+0x43c],0x0
64002303:	call   0x64002670
64002308:	mov    eax,DWORD PTR [ebx]
6400230a:	mov    ecx,DWORD PTR [eax-0xc]
6400230d:	push   ecx
6400230e:	push   eax
6400230f:	lea    ecx,[esp+0x1c]
64002313:	call   0x640029f0
64002318:	mov    esi,DWORD PTR [esp+0x14]
6400231c:	mov    ecx,DWORD PTR [esi-0x10]
6400231f:	mov    edx,DWORD PTR [ecx]
64002321:	mov    eax,DWORD PTR [edx+0x10]
64002324:	add    esi,0xfffffff0
64002327:	call   eax
64002329:	cmp    DWORD PTR [esi+0xc],0x0
6400232d:	lea    edx,[esi+0xc]
64002330:	jl     0x64002355
64002332:	cmp    eax,DWORD PTR [esi]
64002334:	jne    0x64002355
64002336:	mov    edi,esi
64002338:	mov    ecx,0x1
6400233d:	lock xadd DWORD PTR [edx],ecx
64002341:	jmp    0x64002391
64002343:	mov    esi,DWORD PTR [esp+0x18]
64002347:	push   0x640276c8
6400234c:	mov    ecx,esi
6400234e:	call   0x640025a0
64002353:	jmp    0x640023c5
64002355:	mov    ecx,DWORD PTR [esi+0x4]
64002358:	mov    edx,DWORD PTR [eax]
6400235a:	mov    edx,DWORD PTR [edx]
6400235c:	push   0x2
6400235e:	push   ecx
6400235f:	mov    ecx,eax
64002361:	call   edx
64002363:	mov    edi,eax
64002365:	test   edi,edi
64002367:	jne    0x6400236e
64002369:	jmp    0x64001b50
6400236e:	mov    eax,DWORD PTR [esi+0x4]
64002371:	mov    DWORD PTR [edi+0x4],eax
64002374:	mov    eax,DWORD PTR [esi+0x4]
64002377:	lea    ecx,[eax+eax*1+0x2]
6400237b:	push   ecx
6400237c:	add    esi,0x10
6400237f:	lea    edx,[eax+eax*1+0x2]
64002383:	push   esi
64002384:	push   edx
64002385:	lea    eax,[edi+0x10]
64002388:	push   eax
64002389:	call   0x640127c8
6400238e:	add    esp,0x10
64002391:	mov    esi,DWORD PTR [esp+0x18]
64002395:	mov    DWORD PTR [esp+0x438],0xffffffff
640023a0:	mov    eax,DWORD PTR [esp+0x14]
640023a4:	add    edi,0x10
640023a7:	add    eax,0xfffffff0
640023aa:	mov    DWORD PTR [esi],edi
640023ac:	lea    ecx,[eax+0xc]
640023af:	or     edx,0xffffffff
640023b2:	lock xadd DWORD PTR [ecx],edx
640023b6:	dec    edx
640023b7:	test   edx,edx
640023b9:	jg     0x640023c5
640023bb:	mov    ecx,DWORD PTR [eax]
640023bd:	mov    edx,DWORD PTR [ecx]
640023bf:	push   eax
640023c0:	mov    eax,DWORD PTR [edx+0x4]
640023c3:	call   eax
640023c5:	mov    eax,esi
640023c7:	mov    ecx,DWORD PTR [esp+0x430]
640023ce:	mov    DWORD PTR fs:0x0,ecx
640023d5:	pop    ecx
640023d6:	pop    edi
640023d7:	pop    esi
640023d8:	pop    ebp
640023d9:	pop    ebx
640023da:	mov    ecx,DWORD PTR [esp+0x418]
640023e1:	xor    ecx,esp
640023e3:	call   0x64012e6c
640023e8:	add    esp,0x428
640023ee:	ret    
640023ef:	int3   
640023f0:	push   0xffffffff
640023f2:	push   0x64023d70
640023f7:	mov    eax,fs:0x0
640023fd:	push   eax
640023fe:	sub    esp,0x4c
64002401:	push   ebx
64002402:	push   esi
64002403:	push   edi
64002404:	mov    eax,ds:0x6402d09c
64002409:	xor    eax,esp
6400240b:	push   eax
6400240c:	lea    eax,[esp+0x5c]
64002410:	mov    fs:0x0,eax
64002416:	xor    ebx,ebx
64002418:	push   ebx
64002419:	push   0x80
6400241e:	push   0x2
64002420:	push   ebx
64002421:	push   ebx
64002422:	mov    DWORD PTR [esp+0x78],ebx
64002426:	mov    edi,DWORD PTR [esp+0x80]
6400242d:	push   0x40000000
64002432:	push   edi
64002433:	call   0x6400d310
64002438:	call   eax
6400243a:	mov    esi,eax
6400243c:	mov    DWORD PTR [esp+0x10],esi
64002440:	cmp    esi,0xffffffff
64002443:	mov    BYTE PTR [esp+0x64],0x1
64002448:	push   ebx
64002449:	jne    0x6400248b
6400244b:	push   0x640276ca
64002450:	lea    ecx,[esp+0x20]
64002454:	mov    DWORD PTR [esp+0x38],0xf
6400245c:	mov    DWORD PTR [esp+0x34],ebx
64002460:	mov    BYTE PTR [esp+0x24],bl
64002464:	call   0x64001860
64002469:	lea    eax,[esp+0x18]
6400246d:	push   eax
6400246e:	lea    ecx,[esp+0x38]
64002472:	mov    BYTE PTR [esp+0x68],0x2
64002477:	call   0x64002020
6400247c:	push   0x6402aa94
64002481:	lea    ecx,[esp+0x38]
64002485:	push   ecx
64002486:	call   0x64012a5b
6400248b:	mov    eax,DWORD PTR [esp+0x78]
6400248f:	mov    ecx,DWORD PTR [esp+0x74]
64002493:	lea    edx,[esp+0x18]
64002497:	push   edx
64002498:	push   eax
64002499:	push   ecx
6400249a:	push   esi
6400249b:	call   DWORD PTR ds:0x64025088
640024a1:	test   eax,eax
640024a3:	jne    0x640024e6
640024a5:	push   ebx
640024a6:	push   0x640276ca
640024ab:	lea    ecx,[esp+0x20]
640024af:	mov    DWORD PTR [esp+0x38],0xf
640024b7:	mov    DWORD PTR [esp+0x34],ebx
640024bb:	mov    BYTE PTR [esp+0x24],bl
640024bf:	call   0x64001860
640024c4:	lea    edx,[esp+0x18]
640024c8:	push   edx
640024c9:	lea    ecx,[esp+0x38]
640024cd:	mov    BYTE PTR [esp+0x68],0x3
640024d2:	call   0x64002020
640024d7:	push   0x6402aa94
640024dc:	lea    eax,[esp+0x38]
640024e0:	push   eax
640024e1:	call   0x64012a5b
640024e6:	cmp    esi,ebx
640024e8:	je     0x64002500
640024ea:	call   DWORD PTR ds:0x64025044
640024f0:	push   esi
640024f1:	mov    ebx,eax
640024f3:	call   DWORD PTR ds:0x64025040
640024f9:	push   ebx
640024fa:	call   DWORD PTR ds:0x64025060
64002500:	lea    eax,[edi-0x10]
64002503:	mov    DWORD PTR [esp+0x64],0xffffffff
6400250b:	lea    ecx,[eax+0xc]
6400250e:	or     edx,0xffffffff
64002511:	lock xadd DWORD PTR [ecx],edx
64002515:	dec    edx
64002516:	test   edx,edx
64002518:	jg     0x64002524
6400251a:	mov    ecx,DWORD PTR [eax]
6400251c:	mov    edx,DWORD PTR [ecx]
6400251e:	push   eax
6400251f:	mov    eax,DWORD PTR [edx+0x4]
64002522:	call   eax
64002524:	mov    ecx,DWORD PTR [esp+0x5c]
64002528:	mov    DWORD PTR fs:0x0,ecx
6400252f:	pop    ecx
64002530:	pop    edi
64002531:	pop    esi
64002532:	pop    ebx
64002533:	add    esp,0x58
64002536:	ret    
64002537:	int3   
64002538:	int3   
64002539:	int3   
6400253a:	int3   
6400253b:	int3   
6400253c:	int3   
6400253d:	int3   
6400253e:	int3   
6400253f:	int3   
64002540:	sub    esp,0x8
64002543:	mov    DWORD PTR [esp],0x0
6400254a:	mov    DWORD PTR [esp+0x4],0x0
64002552:	call   DWORD PTR ds:0x6402d06c
64002558:	mov    eax,DWORD PTR [esp+0x10]
6400255c:	mov    eax,DWORD PTR [eax]
6400255e:	lea    ecx,[esp+0x4]
64002562:	push   ecx
64002563:	push   0x0
64002565:	lea    edx,[esp+0x8]
64002569:	push   edx
6400256a:	push   0x0
6400256c:	push   0x0
6400256e:	push   0x5
64002570:	push   0x1
64002572:	push   eax
64002573:	call   0x6400e030
64002578:	call   eax
6400257a:	test   eax,eax
6400257c:	jne    0x6400259a
6400257e:	mov    ecx,DWORD PTR [esp]
64002581:	mov    eax,DWORD PTR [esp+0xc]
64002585:	mov    eax,DWORD PTR [eax]
64002587:	push   0x0
64002589:	push   ecx
6400258a:	push   0x0
6400258c:	push   0x0
6400258e:	push   0x4
64002590:	push   0x1
64002592:	push   eax
64002593:	call   0x6400e110
64002598:	call   eax
6400259a:	add    esp,0x8
6400259d:	ret    
6400259e:	int3   
6400259f:	int3   
640025a0:	push   0xffffffff
640025a2:	push   0x640230f8
640025a7:	mov    eax,fs:0x0
640025ad:	push   eax
640025ae:	push   ecx
640025af:	push   esi
640025b0:	push   edi
640025b1:	mov    eax,ds:0x6402d09c
640025b6:	xor    eax,esp
640025b8:	push   eax
640025b9:	lea    eax,[esp+0x10]
640025bd:	mov    fs:0x0,eax
640025c3:	mov    edi,ecx
640025c5:	mov    DWORD PTR [esp+0xc],edi
640025c9:	mov    eax,ds:0x6402e540
640025ce:	mov    edx,DWORD PTR [eax+0xc]
640025d1:	mov    ecx,0x6402e540
640025d6:	call   edx
640025d8:	add    eax,0x10
640025db:	mov    DWORD PTR [edi],eax
640025dd:	mov    edx,DWORD PTR [esp+0x20]
640025e1:	test   edx,edx
640025e3:	mov    DWORD PTR [esp+0x18],0x0
640025eb:	je     0x64002612
640025ed:	test   edx,0xffff0000
640025f3:	jne    0x64002616
640025f5:	movzx  esi,dx
640025f8:	push   0x0
640025fa:	push   esi
640025fb:	call   0x64001fa0
64002600:	add    esp,0x8
64002603:	test   eax,eax
64002605:	je     0x64002638
64002607:	push   esi
64002608:	push   eax
64002609:	mov    ecx,edi
6400260b:	call   0x64002920
64002610:	jmp    0x64002638
64002612:	xor    eax,eax
64002614:	jmp    0x6400262f
64002616:	mov    eax,edx
64002618:	lea    esi,[eax+0x2]
6400261b:	jmp    0x64002620
6400261d:	lea    ecx,[ecx+0x0]
64002620:	mov    cx,WORD PTR [eax]
64002623:	add    eax,0x2
64002626:	test   cx,cx
64002629:	jne    0x64002620
6400262b:	sub    eax,esi
6400262d:	sar    eax,1
6400262f:	push   eax
64002630:	push   edx
64002631:	mov    ecx,edi
64002633:	call   0x64002af0
64002638:	mov    eax,edi
6400263a:	mov    ecx,DWORD PTR [esp+0x10]
6400263e:	mov    DWORD PTR fs:0x0,ecx
64002645:	pop    ecx
64002646:	pop    edi
64002647:	pop    esi
64002648:	add    esp,0x10
6400264b:	ret    0x4
6400264e:	int3   
6400264f:	int3   
64002650:	mov    eax,DWORD PTR [esp+0x4]
64002654:	mov    eax,DWORD PTR [eax]
64002656:	push   esi
64002657:	mov    esi,ecx
64002659:	mov    ecx,DWORD PTR [eax-0xc]
6400265c:	push   ecx
6400265d:	push   eax
6400265e:	mov    ecx,esi
64002660:	call   0x640029f0
64002665:	mov    eax,esi
64002667:	pop    esi
64002668:	ret    0x4
6400266b:	int3   
6400266c:	int3   
6400266d:	int3   
6400266e:	int3   
6400266f:	int3   
64002670:	push   0xffffffff
64002672:	push   0x640230c8
64002677:	mov    eax,fs:0x0
6400267d:	push   eax
6400267e:	push   ecx
6400267f:	push   esi
64002680:	mov    eax,ds:0x6402d09c
64002685:	xor    eax,esp
64002687:	push   eax
64002688:	lea    eax,[esp+0xc]
6400268c:	mov    fs:0x0,eax
64002692:	mov    esi,ecx
64002694:	mov    eax,DWORD PTR [esi]
64002696:	mov    ecx,DWORD PTR [eax-0x10]
64002699:	test   ecx,ecx
6400269b:	je     0x640026a8
6400269d:	mov    edx,DWORD PTR [ecx]
6400269f:	mov    eax,DWORD PTR [edx+0x10]
640026a2:	call   eax
640026a4:	test   eax,eax
640026a6:	jne    0x640026b8
640026a8:	mov    edx,DWORD PTR ds:0x6402e540
640026ae:	mov    eax,DWORD PTR [edx+0x10]
640026b1:	mov    ecx,0x6402e540
640026b6:	call   eax
640026b8:	mov    ecx,DWORD PTR [esp+0x1c]
640026bc:	push   eax
640026bd:	push   ecx
640026be:	lea    ecx,[esp+0x10]
640026c2:	call   0x64002770
640026c7:	mov    DWORD PTR [esp+0x14],0x0
640026cf:	mov    eax,DWORD PTR [esp+0x8]
640026d3:	mov    ecx,DWORD PTR [eax-0xc]
640026d6:	push   ecx
640026d7:	push   eax
640026d8:	mov    ecx,esi
640026da:	call   0x640029f0
640026df:	mov    DWORD PTR [esp+0x14],0xffffffff
640026e7:	mov    eax,DWORD PTR [esp+0x8]
640026eb:	add    eax,0xfffffff0
640026ee:	lea    edx,[eax+0xc]
640026f1:	or     ecx,0xffffffff
640026f4:	lock xadd DWORD PTR [edx],ecx
640026f8:	dec    ecx
640026f9:	test   ecx,ecx
640026fb:	jg     0x64002707
640026fd:	mov    ecx,DWORD PTR [eax]
640026ff:	mov    edx,DWORD PTR [ecx]
64002701:	push   eax
64002702:	mov    eax,DWORD PTR [edx+0x4]
64002705:	call   eax
64002707:	mov    eax,esi
64002709:	mov    ecx,DWORD PTR [esp+0xc]
6400270d:	mov    DWORD PTR fs:0x0,ecx
64002714:	pop    ecx
64002715:	pop    esi
64002716:	add    esp,0x10
64002719:	ret    0x4
6400271c:	int3   
6400271d:	int3   
6400271e:	int3   
6400271f:	int3   
64002720:	mov    edx,DWORD PTR [esp+0x4]
64002724:	push   esi
64002725:	mov    esi,ecx
64002727:	mov    eax,edx
64002729:	push   edi
6400272a:	mov    DWORD PTR [esi+0x18],0xf
64002731:	mov    DWORD PTR [esi+0x14],0x0
64002738:	mov    BYTE PTR [esi+0x4],0x0
6400273c:	lea    edi,[eax+0x1]
6400273f:	nop
64002740:	mov    cl,BYTE PTR [eax]
64002742:	add    eax,0x1
64002745:	test   cl,cl
64002747:	jne    0x64002740
64002749:	sub    eax,edi
6400274b:	push   eax
6400274c:	push   edx
6400274d:	mov    ecx,esi
6400274f:	call   0x64001860
64002754:	pop    edi
64002755:	mov    eax,esi
64002757:	pop    esi
64002758:	ret    0x4
6400275b:	int3   
6400275c:	int3   
6400275d:	int3   
6400275e:	int3   
6400275f:	int3   
64002760:	mov    eax,DWORD PTR [ecx]
64002762:	push   eax
64002763:	call   0x64012612
64002768:	pop    ecx
64002769:	ret    
6400276a:	int3   
6400276b:	int3   
6400276c:	int3   
6400276d:	int3   
6400276e:	int3   
6400276f:	int3   
64002770:	push   0xffffffff
64002772:	push   0x64023098
64002777:	mov    eax,fs:0x0
6400277d:	push   eax
6400277e:	push   ecx
6400277f:	push   esi
64002780:	push   edi
64002781:	mov    eax,ds:0x6402d09c
64002786:	xor    eax,esp
64002788:	push   eax
64002789:	lea    eax,[esp+0x10]
6400278d:	mov    fs:0x0,eax
64002793:	mov    esi,ecx
64002795:	mov    DWORD PTR [esp+0xc],esi
64002799:	mov    ecx,DWORD PTR [esp+0x24]
6400279d:	xor    eax,eax
6400279f:	test   ecx,ecx
640027a1:	setne  al
640027a4:	test   eax,eax
640027a6:	jne    0x640027b2
640027a8:	push   0x80004005
640027ad:	call   0x64001040
640027b2:	mov    eax,DWORD PTR [ecx]
640027b4:	mov    edx,DWORD PTR [eax+0xc]
640027b7:	call   edx
640027b9:	add    eax,0x10
640027bc:	mov    DWORD PTR [esi],eax
640027be:	mov    eax,DWORD PTR [esp+0x20]
640027c2:	test   eax,eax
640027c4:	mov    DWORD PTR [esp+0x18],0x0
640027cc:	je     0x640027f2
640027ce:	test   eax,0xffff0000
640027d3:	jne    0x640027f2
640027d5:	movzx  edi,ax
640027d8:	push   0x0
640027da:	push   edi
640027db:	call   0x64001fa0
640027e0:	add    esp,0x8
640027e3:	test   eax,eax
640027e5:	je     0x640027fa
640027e7:	push   edi
640027e8:	push   eax
640027e9:	mov    ecx,esi
640027eb:	call   0x64002920
640027f0:	jmp    0x640027fa
640027f2:	push   eax
640027f3:	mov    ecx,esi
640027f5:	call   0x64002810
640027fa:	mov    eax,esi
640027fc:	mov    ecx,DWORD PTR [esp+0x10]
64002800:	mov    DWORD PTR fs:0x0,ecx
64002807:	pop    ecx
64002808:	pop    edi
64002809:	pop    esi
6400280a:	add    esp,0x10
6400280d:	ret    0x8
64002810:	push   ebx
64002811:	mov    ebx,DWORD PTR [esp+0x8]
64002815:	test   ebx,ebx
64002817:	push   ebp
64002818:	push   esi
64002819:	push   edi
6400281a:	mov    edi,ecx
6400281c:	je     0x64002894
6400281e:	call   DWORD PTR ds:0x6402d06c
64002824:	mov    ebp,DWORD PTR ds:0x64025024
6400282a:	push   0x0
6400282c:	push   0x0
6400282e:	push   0xffffffff
64002830:	push   ebx
64002831:	push   0x0
64002833:	push   eax
64002834:	call   ebp
64002836:	mov    esi,eax
64002838:	sub    esi,0x1
6400283b:	test   esi,esi
6400283d:	jle    0x64002894
6400283f:	mov    eax,DWORD PTR [edi]
64002841:	mov    edx,DWORD PTR [eax-0x8]
64002844:	sub    eax,0x10
64002847:	mov    ecx,0x1
6400284c:	sub    ecx,DWORD PTR [eax+0xc]
6400284f:	sub    edx,esi
64002851:	or     ecx,edx
64002853:	jge    0x6400285d
64002855:	push   esi
64002856:	mov    ecx,edi
64002858:	call   0x64001e00
6400285d:	mov    eax,DWORD PTR [edi]
6400285f:	push   esi
64002860:	push   eax
64002861:	push   0xffffffff
64002863:	push   ebx
64002864:	push   0x0
64002866:	call   DWORD PTR ds:0x6402d06c
6400286c:	push   eax
6400286d:	call   ebp
6400286f:	mov    eax,DWORD PTR [edi]
64002871:	cmp    esi,DWORD PTR [eax-0x8]
64002874:	jg     0x6400288a
64002876:	mov    DWORD PTR [eax-0xc],esi
64002879:	mov    eax,DWORD PTR [edi]
6400287b:	mov    WORD PTR [eax+esi*2],0x0
64002881:	mov    eax,edi
64002883:	pop    edi
64002884:	pop    esi
64002885:	pop    ebp
64002886:	pop    ebx
64002887:	ret    0x4
6400288a:	push   0x80070057
6400288f:	call   0x64001040
64002894:	mov    ecx,edi
64002896:	call   0x64002a80
6400289b:	mov    eax,edi
6400289d:	pop    edi
6400289e:	pop    esi
6400289f:	pop    ebp
640028a0:	pop    ebx
640028a1:	ret    0x4
640028a4:	int3   
640028a5:	int3   
640028a6:	int3   
640028a7:	int3   
640028a8:	int3   
640028a9:	int3   
640028aa:	int3   
640028ab:	int3   
640028ac:	int3   
640028ad:	int3   
640028ae:	int3   
640028af:	int3   
640028b0:	push   esi
640028b1:	mov    esi,DWORD PTR [esp+0x8]
640028b5:	mov    ecx,DWORD PTR [esi]
640028b7:	mov    eax,DWORD PTR [ecx]
640028b9:	mov    edx,DWORD PTR [eax+0x10]
640028bc:	push   edi
640028bd:	call   edx
640028bf:	cmp    DWORD PTR [esi+0xc],0x0
640028c3:	lea    ecx,[esi+0xc]
640028c6:	jl     0x640028dc
640028c8:	cmp    eax,DWORD PTR [esi]
640028ca:	jne    0x640028dc
640028cc:	mov    edi,esi
640028ce:	mov    eax,0x1
640028d3:	lock xadd DWORD PTR [ecx],eax
640028d7:	mov    eax,edi
640028d9:	pop    edi
640028da:	pop    esi
640028db:	ret    
640028dc:	mov    ecx,DWORD PTR [esi+0x4]
640028df:	mov    edx,DWORD PTR [eax]
640028e1:	mov    edx,DWORD PTR [edx]
640028e3:	push   0x2
640028e5:	push   ecx
640028e6:	mov    ecx,eax
640028e8:	call   edx
640028ea:	mov    edi,eax
640028ec:	test   edi,edi
640028ee:	jne    0x640028f5
640028f0:	jmp    0x64001b50
640028f5:	mov    eax,DWORD PTR [esi+0x4]
640028f8:	mov    DWORD PTR [edi+0x4],eax
640028fb:	mov    eax,DWORD PTR [esi+0x4]
640028fe:	lea    eax,[eax+eax*1+0x2]
64002902:	push   eax
64002903:	add    esi,0x10
64002906:	push   esi
64002907:	push   eax
64002908:	lea    ecx,[edi+0x10]
6400290b:	push   ecx
6400290c:	call   0x640127c8
64002911:	add    esp,0x10
64002914:	mov    eax,edi
64002916:	pop    edi
64002917:	pop    esi
64002918:	ret    
64002919:	int3   
6400291a:	int3   
6400291b:	int3   
6400291c:	int3   
6400291d:	int3   
6400291e:	int3   
6400291f:	int3   
64002920:	push   ebx
64002921:	push   esi
64002922:	mov    esi,DWORD PTR [esp+0x10]
64002926:	mov    eax,esi
64002928:	shr    eax,0x4
6400292b:	push   edi
6400292c:	mov    edi,DWORD PTR [esp+0x10]
64002930:	add    eax,0x1
64002933:	mov    ebx,ecx
64002935:	movzx  ecx,ax
64002938:	push   0x6
6400293a:	push   ecx
6400293b:	push   edi
6400293c:	call   DWORD PTR ds:0x64025038
64002942:	test   eax,eax
64002944:	je     0x64002957
64002946:	push   esi
64002947:	push   eax
64002948:	push   edi
64002949:	call   0x64001f30
6400294e:	mov    esi,eax
64002950:	add    esp,0xc
64002953:	test   esi,esi
64002955:	jne    0x6400295f
64002957:	pop    edi
64002958:	pop    esi
64002959:	xor    eax,eax
6400295b:	pop    ebx
6400295c:	ret    0x8
6400295f:	mov    eax,DWORD PTR [ebx]
64002961:	movzx  edi,WORD PTR [esi]
64002964:	sub    eax,0x10
64002967:	mov    edx,0x1
6400296c:	sub    edx,DWORD PTR [eax+0xc]
6400296f:	mov    eax,DWORD PTR [eax+0x8]
64002972:	sub    eax,edi
64002974:	or     edx,eax
64002976:	jge    0x64002980
64002978:	push   edi
64002979:	mov    ecx,ebx
6400297b:	call   0x64001e00
64002980:	movzx  eax,WORD PTR [esi]
64002983:	cmp    eax,0xffffffff
64002986:	push   ebp
64002987:	mov    ebp,DWORD PTR [ebx]
64002989:	lea    edx,[esi+0x2]
6400298c:	jne    0x640029a5
6400298e:	mov    eax,edx
64002990:	lea    esi,[eax+0x2]
64002993:	mov    cx,WORD PTR [eax]
64002996:	add    eax,0x2
64002999:	test   cx,cx
6400299c:	jne    0x64002993
6400299e:	sub    eax,esi
640029a0:	sar    eax,1
640029a2:	add    eax,0x1
640029a5:	lea    ecx,[eax+eax*1]
640029a8:	push   ecx
640029a9:	push   edx
640029aa:	lea    esi,[edi+edi*1]
640029ad:	push   esi
640029ae:	push   ebp
640029af:	call   0x640127c8
640029b4:	push   eax
640029b5:	call   0x64001e90
640029ba:	add    esp,0x14
640029bd:	test   edi,edi
640029bf:	pop    ebp
640029c0:	jl     0x640029df
640029c2:	mov    eax,DWORD PTR [ebx]
640029c4:	cmp    edi,DWORD PTR [eax-0x8]
640029c7:	jg     0x640029df
640029c9:	mov    DWORD PTR [eax-0xc],edi
640029cc:	mov    edx,DWORD PTR [ebx]
640029ce:	pop    edi
640029cf:	mov    WORD PTR [esi+edx*1],0x0
640029d5:	pop    esi
640029d6:	mov    eax,0x1
640029db:	pop    ebx
640029dc:	ret    0x8
640029df:	push   0x80070057
640029e4:	call   0x64001040
640029e9:	int3   
640029ea:	int3   
640029eb:	int3   
640029ec:	int3   
640029ed:	int3   
640029ee:	int3   
640029ef:	int3   
640029f0:	push   ebx
640029f1:	push   ebp
640029f2:	push   esi
640029f3:	mov    esi,DWORD PTR [esp+0x10]
640029f7:	mov    ebp,ecx
640029f9:	mov    eax,DWORD PTR [ebp+0x0]
640029fc:	mov    ebx,DWORD PTR [eax-0xc]
640029ff:	mov    ecx,DWORD PTR [esp+0x14]
64002a03:	sub    esi,eax
64002a05:	mov    edx,0x1
64002a0a:	sub    edx,DWORD PTR [eax-0x4]
64002a0d:	mov    eax,DWORD PTR [eax-0x8]
64002a10:	push   edi
64002a11:	lea    edi,[ebx+ecx*1]
64002a14:	sub    eax,edi
64002a16:	sar    esi,1
64002a18:	or     edx,eax
64002a1a:	jge    0x64002a24
64002a1c:	push   edi
64002a1d:	mov    ecx,ebp
64002a1f:	call   0x64001e00
64002a24:	cmp    esi,ebx
64002a26:	mov    ecx,DWORD PTR [ebp+0x0]
64002a29:	ja     0x64002a32
64002a2b:	lea    edx,[ecx+esi*2]
64002a2e:	mov    DWORD PTR [esp+0x14],edx
64002a32:	mov    eax,DWORD PTR [esp+0x18]
64002a36:	mov    edx,DWORD PTR [esp+0x14]
64002a3a:	add    eax,eax
64002a3c:	push   eax
64002a3d:	push   edx
64002a3e:	push   eax
64002a3f:	lea    eax,[ecx+ebx*2]
64002a42:	push   eax
64002a43:	call   0x640127c8
64002a48:	add    esp,0x10
64002a4b:	test   edi,edi
64002a4d:	jl     0x64002a6a
64002a4f:	mov    eax,DWORD PTR [ebp+0x0]
64002a52:	cmp    edi,DWORD PTR [eax-0x8]
64002a55:	jg     0x64002a6a
64002a57:	mov    DWORD PTR [eax-0xc],edi
64002a5a:	mov    ecx,DWORD PTR [ebp+0x0]
64002a5d:	mov    WORD PTR [ecx+edi*2],0x0
64002a63:	pop    edi
64002a64:	pop    esi
64002a65:	pop    ebp
64002a66:	pop    ebx
64002a67:	ret    0x8
64002a6a:	push   0x80070057
64002a6f:	call   0x64001040
64002a74:	int3   
64002a75:	int3   
64002a76:	int3   
64002a77:	int3   
64002a78:	int3   
64002a79:	int3   
64002a7a:	int3   
64002a7b:	int3   
64002a7c:	int3   
64002a7d:	int3   
64002a7e:	int3   
64002a7f:	int3   
64002a80:	push   esi
64002a81:	mov    esi,ecx
64002a83:	mov    ecx,DWORD PTR [esi]
64002a85:	cmp    DWORD PTR [ecx-0xc],0x0
64002a89:	lea    eax,[ecx-0x10]
64002a8c:	push   edi
64002a8d:	mov    edi,DWORD PTR [eax]
64002a8f:	je     0x64002adf
64002a91:	cmp    DWORD PTR [eax+0xc],0x0
64002a95:	lea    edx,[eax+0xc]
64002a98:	jge    0x64002abb
64002a9a:	cmp    DWORD PTR [ecx-0x8],0x0
64002a9e:	jge    0x64002aaa
64002aa0:	push   0x80070057
64002aa5:	call   0x64001040
64002aaa:	mov    DWORD PTR [ecx-0xc],0x0
64002ab1:	mov    eax,DWORD PTR [esi]
64002ab3:	pop    edi
64002ab4:	mov    WORD PTR [eax],0x0
64002ab9:	pop    esi
64002aba:	ret    
64002abb:	or     ecx,0xffffffff
64002abe:	lock xadd DWORD PTR [edx],ecx
64002ac2:	dec    ecx
64002ac3:	test   ecx,ecx
64002ac5:	jg     0x64002ad1
64002ac7:	mov    ecx,DWORD PTR [eax]
64002ac9:	mov    edx,DWORD PTR [ecx]
64002acb:	push   eax
64002acc:	mov    eax,DWORD PTR [edx+0x4]
64002acf:	call   eax
64002ad1:	mov    edx,DWORD PTR [edi]
64002ad3:	mov    eax,DWORD PTR [edx+0xc]
64002ad6:	mov    ecx,edi
64002ad8:	call   eax
64002ada:	add    eax,0x10
64002add:	mov    DWORD PTR [esi],eax
64002adf:	pop    edi
64002ae0:	pop    esi
64002ae1:	ret    
64002ae2:	int3   
64002ae3:	int3   
64002ae4:	int3   
64002ae5:	int3   
64002ae6:	int3   
64002ae7:	int3   
64002ae8:	int3   
64002ae9:	int3   
64002aea:	int3   
64002aeb:	int3   
64002aec:	int3   
64002aed:	int3   
64002aee:	int3   
64002aef:	int3   
64002af0:	push   ebx
64002af1:	mov    ebx,DWORD PTR [esp+0xc]
64002af5:	test   ebx,ebx
64002af7:	push   ebp
64002af8:	mov    ebp,ecx
64002afa:	jne    0x64002b06
64002afc:	call   0x64002a80
64002b01:	pop    ebp
64002b02:	pop    ebx
64002b03:	ret    0x8
64002b06:	push   esi
64002b07:	mov    esi,DWORD PTR [esp+0x10]
64002b0b:	test   esi,esi
64002b0d:	jne    0x64002b19
64002b0f:	push   0x80070057
64002b14:	call   0x64001040
64002b19:	mov    eax,DWORD PTR [ebp+0x0]
64002b1c:	mov    edx,DWORD PTR [eax-0x8]
64002b1f:	mov    ecx,0x1
64002b24:	sub    ecx,DWORD PTR [eax-0x4]
64002b27:	sub    esi,eax
64002b29:	sub    edx,ebx
64002b2b:	sar    esi,1
64002b2d:	or     ecx,edx
64002b2f:	push   edi
64002b30:	mov    edi,DWORD PTR [eax-0xc]
64002b33:	jge    0x64002b3d
64002b35:	push   ebx
64002b36:	mov    ecx,ebp
64002b38:	call   0x64001e00
64002b3d:	mov    eax,DWORD PTR [ebp+0x0]
64002b40:	cmp    esi,edi
64002b42:	lea    edi,[ebx+ebx*1]
64002b45:	push   edi
64002b46:	ja     0x64002b55
64002b48:	lea    ecx,[eax+esi*2]
64002b4b:	push   ecx
64002b4c:	push   edi
64002b4d:	push   eax
64002b4e:	call   0x64012843
64002b53:	jmp    0x64002b61
64002b55:	mov    edx,DWORD PTR [esp+0x18]
64002b59:	push   edx
64002b5a:	push   edi
64002b5b:	push   eax
64002b5c:	call   0x640127c8
64002b61:	add    esp,0x10
64002b64:	test   ebx,ebx
64002b66:	jl     0x64002b83
64002b68:	mov    eax,DWORD PTR [ebp+0x0]
64002b6b:	cmp    ebx,DWORD PTR [eax-0x8]
64002b6e:	jg     0x64002b83
64002b70:	mov    DWORD PTR [eax-0xc],ebx
64002b73:	mov    eax,DWORD PTR [ebp+0x0]
64002b76:	mov    WORD PTR [edi+eax*1],0x0
64002b7c:	pop    edi
64002b7d:	pop    esi
64002b7e:	pop    ebp
64002b7f:	pop    ebx
64002b80:	ret    0x8
64002b83:	push   0x80070057
64002b88:	call   0x64001040
64002b8d:	int3   
64002b8e:	int3   
64002b8f:	int3   
64002b90:	push   esi
64002b91:	mov    esi,DWORD PTR [esp+0x8]
64002b95:	test   esi,esi
64002b97:	je     0x64002bc8
64002b99:	mov    eax,DWORD PTR [esp+0xc]
64002b9d:	test   eax,eax
64002b9f:	je     0x64002bc8
64002ba1:	mov    ecx,DWORD PTR [esp+0x10]
64002ba5:	mov    edx,DWORD PTR [esp+0x14]
64002ba9:	push   0x0
64002bab:	push   0x0
64002bad:	push   ecx
64002bae:	push   esi
64002baf:	push   0xffffffff
64002bb1:	push   eax
64002bb2:	push   0x0
64002bb4:	push   edx
64002bb5:	mov    BYTE PTR [esi],0x0
64002bb8:	call   DWORD PTR ds:0x64025028
64002bbe:	neg    eax
64002bc0:	sbb    eax,eax
64002bc2:	and    eax,esi
64002bc4:	pop    esi
64002bc5:	ret    0x10
64002bc8:	xor    eax,eax
64002bca:	pop    esi
64002bcb:	ret    0x10
64002bce:	int3   
64002bcf:	int3   
64002bd0:	mov    eax,DWORD PTR [esi]
64002bd2:	test   eax,eax
64002bd4:	je     0x64002be3
64002bd6:	push   eax
64002bd7:	call   DWORD PTR ds:0x64025000
64002bdd:	mov    DWORD PTR [esi],0x0
64002be3:	ret    
64002be4:	int3   
64002be5:	int3   
64002be6:	int3   
64002be7:	int3   
64002be8:	int3   
64002be9:	int3   
64002bea:	int3   
64002beb:	int3   
64002bec:	int3   
64002bed:	int3   
64002bee:	int3   
64002bef:	int3   
64002bf0:	push   ecx
64002bf1:	mov    eax,DWORD PTR [edi]
64002bf3:	lea    ecx,[esp]
64002bf6:	push   ecx
64002bf7:	mov    ecx,DWORD PTR [esp+0xc]
64002bfb:	push   esi
64002bfc:	add    eax,eax
64002bfe:	lea    edx,[esp+0x14]
64002c02:	push   edx
64002c03:	mov    DWORD PTR [esp+0xc],eax
64002c07:	mov    eax,DWORD PTR [esp+0x18]
64002c0b:	push   0x0
64002c0d:	mov    DWORD PTR [edi],0x0
64002c13:	mov    edx,DWORD PTR [ecx]
64002c15:	push   eax
64002c16:	push   edx
64002c17:	call   DWORD PTR ds:0x6402500c
64002c1d:	test   eax,eax
64002c1f:	jne    0x64002c5e
64002c21:	mov    eax,DWORD PTR [esp+0xc]
64002c25:	cmp    eax,0x1
64002c28:	je     0x64002c2f
64002c2a:	cmp    eax,0x2
64002c2d:	jne    0x64002c4a
64002c2f:	test   esi,esi
64002c31:	mov    eax,DWORD PTR [esp]
64002c34:	je     0x64002c58
64002c36:	test   eax,eax
64002c38:	je     0x64002c53
64002c3a:	test   al,0x1
64002c3c:	jne    0x64002c4a
64002c3e:	mov    ecx,eax
64002c40:	shr    ecx,1
64002c42:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002c48:	je     0x64002c58
64002c4a:	mov    eax,0xd
64002c4f:	pop    ecx
64002c50:	ret    0x8
64002c53:	mov    WORD PTR [esi],0x0
64002c58:	shr    eax,1
64002c5a:	mov    DWORD PTR [edi],eax
64002c5c:	xor    eax,eax
64002c5e:	pop    ecx
64002c5f:	ret    0x8
64002c62:	int3   
64002c63:	int3   
64002c64:	int3   
64002c65:	int3   
64002c66:	int3   
64002c67:	int3   
64002c68:	int3   
64002c69:	int3   
64002c6a:	int3   
64002c6b:	int3   
64002c6c:	int3   
64002c6d:	int3   
64002c6e:	int3   
64002c6f:	int3   
64002c70:	ret    
64002c71:	int3   
64002c72:	int3   
64002c73:	int3   
64002c74:	int3   
64002c75:	int3   
64002c76:	int3   
64002c77:	int3   
64002c78:	int3   
64002c79:	int3   
64002c7a:	int3   
64002c7b:	int3   
64002c7c:	int3   
64002c7d:	int3   
64002c7e:	int3   
64002c7f:	int3   
64002c80:	mov    eax,DWORD PTR [esp+0xc]
64002c84:	cmp    eax,0x4
64002c87:	mov    ecx,DWORD PTR [esp+0x8]
64002c8b:	mov    edx,DWORD PTR [esp+0x4]
64002c8f:	push   esi
64002c90:	push   edi
64002c91:	jb     0x64002ca7
64002c93:	mov    esi,DWORD PTR [edx]
64002c95:	cmp    esi,DWORD PTR [ecx]
64002c97:	jne    0x64002cab
64002c99:	sub    eax,0x4
64002c9c:	add    ecx,0x4
64002c9f:	add    edx,0x4
64002ca2:	cmp    eax,0x4
64002ca5:	jae    0x64002c93
64002ca7:	test   eax,eax
64002ca9:	je     0x64002d09
64002cab:	movzx  esi,BYTE PTR [edx]
64002cae:	movzx  edi,BYTE PTR [ecx]
64002cb1:	sub    esi,edi
64002cb3:	jne    0x64002cfa
64002cb5:	sub    eax,0x1
64002cb8:	add    ecx,0x1
64002cbb:	add    edx,0x1
64002cbe:	test   eax,eax
64002cc0:	je     0x64002d09
64002cc2:	movzx  esi,BYTE PTR [edx]
64002cc5:	movzx  edi,BYTE PTR [ecx]
64002cc8:	sub    esi,edi
64002cca:	jne    0x64002cfa
64002ccc:	sub    eax,0x1
64002ccf:	add    ecx,0x1
64002cd2:	add    edx,0x1
64002cd5:	test   eax,eax
64002cd7:	je     0x64002d09
64002cd9:	movzx  esi,BYTE PTR [edx]
64002cdc:	movzx  edi,BYTE PTR [ecx]
64002cdf:	sub    esi,edi
64002ce1:	jne    0x64002cfa
64002ce3:	sub    eax,0x1
64002ce6:	add    ecx,0x1
64002ce9:	add    edx,0x1
64002cec:	test   eax,eax
64002cee:	je     0x64002d09
64002cf0:	movzx  esi,BYTE PTR [edx]
64002cf3:	movzx  eax,BYTE PTR [ecx]
64002cf6:	sub    esi,eax
64002cf8:	je     0x64002d09
64002cfa:	test   esi,esi
64002cfc:	mov    eax,0x1
64002d01:	jg     0x64002d0b
64002d03:	pop    edi
64002d04:	or     eax,0xffffffff
64002d07:	pop    esi
64002d08:	ret    
64002d09:	xor    eax,eax
64002d0b:	pop    edi
64002d0c:	pop    esi
64002d0d:	ret    
64002d0e:	int3   
64002d0f:	int3   
64002d10:	push   0xffffffff
64002d12:	push   0x64022b88
64002d17:	mov    eax,fs:0x0
64002d1d:	push   eax
64002d1e:	push   ecx
64002d1f:	push   esi
64002d20:	mov    eax,ds:0x6402d09c
64002d25:	xor    eax,esp
64002d27:	push   eax
64002d28:	lea    eax,[esp+0xc]
64002d2c:	mov    fs:0x0,eax
64002d32:	mov    esi,ecx
64002d34:	mov    DWORD PTR [esp+0x8],esi
64002d38:	call   0x6401265c
64002d3d:	xor    eax,eax
64002d3f:	mov    DWORD PTR [esp+0x14],eax
64002d43:	lea    ecx,[esi+0xc]
64002d46:	mov    DWORD PTR [esi],0x64025310
64002d4c:	push   0xffffffff
64002d4e:	mov    DWORD PTR [ecx+0x14],eax
64002d51:	mov    DWORD PTR [ecx+0x18],0xf
64002d58:	push   eax
64002d59:	mov    BYTE PTR [ecx+0x4],al
64002d5c:	mov    eax,DWORD PTR [esp+0x24]
64002d60:	push   eax
64002d61:	call   0x64001780
64002d66:	mov    eax,esi
64002d68:	mov    ecx,DWORD PTR [esp+0xc]
64002d6c:	mov    DWORD PTR fs:0x0,ecx
64002d73:	pop    ecx
64002d74:	pop    esi
64002d75:	add    esp,0x10
64002d78:	ret    0x4
64002d7b:	int3   
64002d7c:	int3   
64002d7d:	int3   
64002d7e:	int3   
64002d7f:	int3   
64002d80:	push   esi
64002d81:	mov    esi,ecx
64002d83:	mov    DWORD PTR [esi],0x64025310
64002d89:	cmp    DWORD PTR [esi+0x24],0x10
64002d8d:	jb     0x64002d9b
64002d8f:	mov    eax,DWORD PTR [esi+0x10]
64002d92:	push   eax
64002d93:	call   0x64012612
64002d98:	add    esp,0x4
64002d9b:	xor    eax,eax
64002d9d:	mov    DWORD PTR [esi+0x24],0xf
64002da4:	mov    DWORD PTR [esi+0x20],eax
64002da7:	mov    BYTE PTR [esi+0x10],al
64002daa:	mov    ecx,esi
64002dac:	pop    esi
64002dad:	jmp    0x6401272b
64002db2:	int3   
64002db3:	int3   
64002db4:	int3   
64002db5:	int3   
64002db6:	int3   
64002db7:	int3   
64002db8:	int3   
64002db9:	int3   
64002dba:	int3   
64002dbb:	int3   
64002dbc:	int3   
64002dbd:	int3   
64002dbe:	int3   
64002dbf:	int3   
64002dc0:	push   esi
64002dc1:	mov    esi,ecx
64002dc3:	mov    DWORD PTR [esi],0x64025310
64002dc9:	cmp    DWORD PTR [esi+0x24],0x10
64002dcd:	jb     0x64002ddb
64002dcf:	mov    eax,DWORD PTR [esi+0x10]
64002dd2:	push   eax
64002dd3:	call   0x64012612
64002dd8:	add    esp,0x4
64002ddb:	xor    eax,eax
64002ddd:	mov    DWORD PTR [esi+0x24],0xf
64002de4:	mov    DWORD PTR [esi+0x20],eax
64002de7:	mov    ecx,esi
64002de9:	mov    BYTE PTR [esi+0x10],al
64002dec:	call   0x6401272b
64002df1:	test   BYTE PTR [esp+0x8],0x1
64002df6:	je     0x64002e01
64002df8:	push   esi
64002df9:	call   0x64012612
64002dfe:	add    esp,0x4
64002e01:	mov    eax,esi
64002e03:	pop    esi
64002e04:	ret    0x4
64002e07:	int3   
64002e08:	int3   
64002e09:	int3   
64002e0a:	int3   
64002e0b:	int3   
64002e0c:	int3   
64002e0d:	int3   
64002e0e:	int3   
64002e0f:	int3   
64002e10:	mov    eax,DWORD PTR [esp+0x4]
64002e14:	push   esi
64002e15:	push   eax
64002e16:	mov    esi,ecx
64002e18:	call   0x64002e30
64002e1d:	mov    DWORD PTR [esi],0x64025328
64002e23:	mov    eax,esi
64002e25:	pop    esi
64002e26:	ret    0x4
64002e29:	int3   
64002e2a:	int3   
64002e2b:	int3   
64002e2c:	int3   
64002e2d:	int3   
64002e2e:	int3   
64002e2f:	int3   
64002e30:	push   0xffffffff
64002e32:	push   0x64022b58
64002e37:	mov    eax,fs:0x0
64002e3d:	push   eax
64002e3e:	push   ecx
64002e3f:	push   esi
64002e40:	push   edi
64002e41:	mov    eax,ds:0x6402d09c
64002e46:	xor    eax,esp
64002e48:	push   eax
64002e49:	lea    eax,[esp+0x10]
64002e4d:	mov    fs:0x0,eax
64002e53:	mov    esi,ecx
64002e55:	mov    DWORD PTR [esp+0xc],esi
64002e59:	mov    edi,DWORD PTR [esp+0x20]
64002e5d:	push   edi
64002e5e:	call   0x640126d3
64002e63:	xor    edx,edx
64002e65:	mov    DWORD PTR [esp+0x18],edx
64002e69:	push   0xffffffff
64002e6b:	lea    ecx,[esi+0xc]
64002e6e:	mov    DWORD PTR [esi],0x64025310
64002e74:	lea    eax,[edi+0xc]
64002e77:	push   edx
64002e78:	mov    DWORD PTR [ecx+0x18],0xf
64002e7f:	mov    DWORD PTR [ecx+0x14],edx
64002e82:	push   eax
64002e83:	mov    BYTE PTR [ecx+0x4],dl
64002e86:	call   0x64001780
64002e8b:	mov    eax,esi
64002e8d:	mov    ecx,DWORD PTR [esp+0x10]
64002e91:	mov    DWORD PTR fs:0x0,ecx
64002e98:	pop    ecx
64002e99:	pop    edi
64002e9a:	pop    esi
64002e9b:	add    esp,0x10
64002e9e:	ret    0x4
64002ea1:	int3   
64002ea2:	int3   
64002ea3:	int3   
64002ea4:	int3   
64002ea5:	int3   
64002ea6:	int3   
64002ea7:	int3   
64002ea8:	int3   
64002ea9:	int3   
64002eaa:	int3   
64002eab:	int3   
64002eac:	int3   
64002ead:	int3   
64002eae:	int3   
64002eaf:	int3   
64002eb0:	sub    esp,0x6c
64002eb3:	mov    eax,ds:0x6402d09c
64002eb8:	xor    eax,esp
64002eba:	mov    DWORD PTR [esp+0x68],eax
64002ebe:	mov    eax,DWORD PTR [esp+0x74]
64002ec2:	movzx  ecx,BYTE PTR [eax+0xf]
64002ec6:	movzx  edx,BYTE PTR [eax+0xe]
64002eca:	push   esi
64002ecb:	push   ecx
64002ecc:	movzx  ecx,BYTE PTR [eax+0xd]
64002ed0:	push   edx
64002ed1:	movzx  edx,BYTE PTR [eax+0xc]
64002ed5:	push   ecx
64002ed6:	movzx  ecx,BYTE PTR [eax+0xb]
64002eda:	push   edx
64002edb:	movzx  edx,BYTE PTR [eax+0xa]
64002edf:	mov    esi,DWORD PTR [esp+0x84]
64002ee6:	push   ecx
64002ee7:	movzx  ecx,BYTE PTR [eax+0x9]
64002eeb:	push   edx
64002eec:	movzx  edx,BYTE PTR [eax+0x8]
64002ef0:	push   ecx
64002ef1:	movzx  ecx,WORD PTR [eax+0x6]
64002ef5:	push   edx
64002ef6:	movzx  edx,WORD PTR [eax+0x4]
64002efa:	mov    eax,DWORD PTR [eax]
64002efc:	push   ecx
64002efd:	push   edx
64002efe:	push   eax
64002eff:	push   0x640276d8
64002f04:	push   0x32
64002f06:	push   0x6402770c
64002f0b:	mov    DWORD PTR [esp+0x3c],0x0
64002f13:	call   0x640057b0
64002f18:	add    esp,0xc
64002f1b:	push   eax
64002f1c:	lea    ecx,[esp+0x38]
64002f20:	push   0x64
64002f22:	push   ecx
64002f23:	call   0x640139b6
64002f28:	add    esp,0x38
64002f2b:	lea    edx,[esp+0x8]
64002f2f:	push   edx
64002f30:	mov    ecx,esi
64002f32:	call   0x64005510
64002f37:	mov    ecx,DWORD PTR [esp+0x6c]
64002f3b:	mov    eax,esi
64002f3d:	pop    esi
64002f3e:	xor    ecx,esp
64002f40:	call   0x64012e6c
64002f45:	add    esp,0x6c
64002f48:	ret    
64002f49:	int3   
64002f4a:	int3   
64002f4b:	int3   
64002f4c:	int3   
64002f4d:	int3   
64002f4e:	int3   
64002f4f:	int3   
64002f50:	push   0xffffffff
64002f52:	push   0x64023068
64002f57:	mov    eax,fs:0x0
64002f5d:	push   eax
64002f5e:	sub    esp,0x24
64002f61:	mov    eax,ds:0x6402d09c
64002f66:	xor    eax,esp
64002f68:	mov    DWORD PTR [esp+0x20],eax
64002f6c:	push   ebx
64002f6d:	push   ebp
64002f6e:	push   edi
64002f6f:	mov    eax,ds:0x6402d09c
64002f74:	xor    eax,esp
64002f76:	push   eax
64002f77:	lea    eax,[esp+0x34]
64002f7b:	mov    fs:0x0,eax
64002f81:	mov    DWORD PTR [esp+0x3c],0x0
64002f89:	call   DWORD PTR ds:0x6402d06c
64002f8f:	mov    eax,ds:0x64025bf0
64002f94:	mov    ecx,DWORD PTR ds:0x64025bf4
64002f9a:	mov    edx,DWORD PTR ds:0x64025bf8
64002fa0:	mov    DWORD PTR [esp+0x20],eax
64002fa4:	mov    eax,ds:0x64025bfc
64002fa9:	mov    DWORD PTR [esp+0x2c],eax
64002fad:	mov    eax,DWORD PTR [esp+0x44]
64002fb1:	mov    DWORD PTR [esp+0x24],ecx
64002fb5:	mov    DWORD PTR [esp+0x28],edx
64002fb9:	cmp    DWORD PTR [eax-0xc],0x0
64002fbd:	jle    0x64002fdd
64002fbf:	lea    ebx,[esp+0x44]
64002fc3:	call   0x640056e0
64002fc8:	mov    edi,ebx
64002fca:	call   0x64005dc0
64002fcf:	call   0x64005660
64002fd4:	call   0x64005dc0
64002fd9:	mov    eax,DWORD PTR [esp+0x44]
64002fdd:	cmp    DWORD PTR [eax-0x4],0x1
64002fe1:	jle    0x64002ff4
64002fe3:	mov    ecx,DWORD PTR [eax-0xc]
64002fe6:	push   ecx
64002fe7:	lea    ecx,[esp+0x48]
64002feb:	call   0x64001950
64002ff0:	mov    eax,DWORD PTR [esp+0x44]
64002ff4:	lea    edx,[esp+0x20]
64002ff8:	push   edx
64002ff9:	push   eax
64002ffa:	call   DWORD PTR ds:0x640251ac
64003000:	test   eax,eax
64003002:	je     0x64003021
64003004:	mov    eax,ds:0x64025bfc
64003009:	mov    edi,DWORD PTR ds:0x64025bf0
6400300f:	mov    ebx,DWORD PTR ds:0x64025bf4
64003015:	mov    ebp,DWORD PTR ds:0x64025bf8
6400301b:	mov    DWORD PTR [esp+0x1c],eax
6400301f:	jmp    0x64003035
64003021:	mov    edx,DWORD PTR [esp+0x2c]
64003025:	mov    edi,DWORD PTR [esp+0x20]
64003029:	mov    ebx,DWORD PTR [esp+0x24]
6400302d:	mov    ebp,DWORD PTR [esp+0x28]
64003031:	mov    DWORD PTR [esp+0x1c],edx
64003035:	mov    DWORD PTR [esp+0x3c],0xffffffff
6400303d:	mov    eax,DWORD PTR [esp+0x44]
64003041:	add    eax,0xfffffff0
64003044:	or     edx,0xffffffff
64003047:	lea    ecx,[eax+0xc]
6400304a:	lock xadd DWORD PTR [ecx],edx
6400304e:	dec    edx
6400304f:	test   edx,edx
64003051:	jg     0x6400305d
64003053:	mov    ecx,DWORD PTR [eax]
64003055:	mov    edx,DWORD PTR [ecx]
64003057:	push   eax
64003058:	mov    eax,DWORD PTR [edx+0x4]
6400305b:	call   eax
6400305d:	mov    ecx,DWORD PTR [esp+0x1c]
64003061:	mov    DWORD PTR [esi],edi
64003063:	mov    DWORD PTR [esi+0x4],ebx
64003066:	mov    DWORD PTR [esi+0x8],ebp
64003069:	mov    eax,esi
6400306b:	mov    DWORD PTR [esi+0xc],ecx
6400306e:	mov    ecx,DWORD PTR [esp+0x34]
64003072:	mov    DWORD PTR fs:0x0,ecx
64003079:	pop    ecx
6400307a:	pop    edi
6400307b:	pop    ebp
6400307c:	pop    ebx
6400307d:	mov    ecx,DWORD PTR [esp+0x20]
64003081:	xor    ecx,esp
64003083:	call   0x64012e6c
64003088:	add    esp,0x30
6400308b:	ret    
6400308c:	int3   
6400308d:	int3   
6400308e:	int3   
6400308f:	int3   
64003090:	push   ebp
64003091:	mov    ebp,esp
64003093:	sub    esp,0x18
64003096:	mov    eax,ds:0x6402d09c
6400309b:	xor    eax,ebp
6400309d:	mov    DWORD PTR [ebp-0x4],eax
640030a0:	mov    eax,DWORD PTR [ebp+0x8]
640030a3:	push   ebx
640030a4:	push   esi
640030a5:	push   edi
640030a6:	mov    DWORD PTR [ebp-0x14],eax
640030a9:	mov    DWORD PTR [ebp-0x18],0x0
640030b0:	call   DWORD PTR ds:0x6402d06c
640030b6:	movzx  ecx,BYTE PTR [ebp+0xc]
640030ba:	push   ecx
640030bb:	push   0x64027740
640030c0:	push   0x6
640030c2:	push   0x6402776c
640030c7:	mov    ebx,eax
640030c9:	call   0x640057b0
640030ce:	add    esp,0xc
640030d1:	push   eax
640030d2:	lea    edx,[ebp-0x10]
640030d5:	push   edx
640030d6:	call   0x6401393b
640030db:	add    esp,0xc
640030de:	lea    eax,[ebp-0x10]
640030e1:	push   eax
640030e2:	call   DWORD PTR ds:0x64025058
640030e8:	mov    esi,eax
640030ea:	add    esi,0x1
640030ed:	cmp    esi,0x3fffffff
640030f3:	jg     0x64003121
640030f5:	lea    eax,[esi+esi*1]
640030f8:	call   0x640135f0
640030fd:	mov    edi,esp
640030ff:	test   edi,edi
64003101:	je     0x64003121
64003103:	push   esi
64003104:	push   edi
64003105:	push   0xffffffff
64003107:	lea    ecx,[ebp-0x10]
6400310a:	push   ecx
6400310b:	push   0x0
6400310d:	push   ebx
6400310e:	mov    WORD PTR [edi],0x0
64003113:	call   DWORD PTR ds:0x64025024
64003119:	neg    eax
6400311b:	sbb    eax,eax
6400311d:	and    eax,edi
6400311f:	jmp    0x64003123
64003121:	xor    eax,eax
64003123:	mov    esi,DWORD PTR [ebp-0x14]
64003126:	push   eax
64003127:	mov    ecx,esi
64003129:	call   0x640025a0
6400312e:	mov    eax,esi
64003130:	lea    esp,[ebp-0x24]
64003133:	pop    edi
64003134:	pop    esi
64003135:	pop    ebx
64003136:	mov    ecx,DWORD PTR [ebp-0x4]
64003139:	xor    ecx,ebp
6400313b:	call   0x64012e6c
64003140:	mov    esp,ebp
64003142:	pop    ebp
64003143:	ret    
64003144:	int3   
64003145:	int3   
64003146:	int3   
64003147:	int3   
64003148:	int3   
64003149:	int3   
6400314a:	int3   
6400314b:	int3   
6400314c:	int3   
6400314d:	int3   
6400314e:	int3   
6400314f:	int3   
64003150:	push   0xffffffff
64003152:	push   0x64023e99
64003157:	mov    eax,fs:0x0
6400315d:	push   eax
6400315e:	sub    esp,0x20
64003161:	push   ebx
64003162:	push   ebp
64003163:	push   esi
64003164:	push   edi
64003165:	mov    eax,ds:0x6402d09c
6400316a:	xor    eax,esp
6400316c:	push   eax
6400316d:	lea    eax,[esp+0x34]
64003171:	mov    fs:0x0,eax
64003177:	xor    ebx,ebx
64003179:	mov    DWORD PTR [esp+0x3c],ebx
6400317d:	mov    DWORD PTR [esp+0x18],ebx
64003181:	mov    eax,ds:0x6402e540
64003186:	mov    edx,DWORD PTR [eax+0xc]
64003189:	mov    ecx,0x6402e540
6400318e:	call   edx
64003190:	mov    edi,DWORD PTR [esp+0x44]
64003194:	add    eax,0x10
64003197:	mov    DWORD PTR [edi],eax
64003199:	mov    esi,DWORD PTR [esp+0x48]
6400319d:	mov    DWORD PTR [esp+0x3c],ebx
640031a1:	mov    eax,DWORD PTR [esi]
640031a3:	mov    ecx,0x1
640031a8:	sub    eax,0x10
640031ab:	cmp    DWORD PTR [eax+0xc],ecx
640031ae:	mov    DWORD PTR [esp+0x18],ecx
640031b2:	jle    0x640031bf
640031b4:	mov    eax,DWORD PTR [eax+0x4]
640031b7:	push   eax
640031b8:	mov    ecx,esi
640031ba:	call   0x64001950
640031bf:	mov    ebp,DWORD PTR [esi]
640031c1:	movzx  eax,WORD PTR [ebp+0x0]
640031c5:	cmp    ax,bx
640031c8:	je     0x64003469
640031ce:	cmp    ax,0x41
640031d2:	jb     0x640031de
640031d4:	cmp    ax,0x5a
640031d8:	jbe    0x6400340f
640031de:	cmp    ax,0x61
640031e2:	jb     0x640031ee
640031e4:	cmp    ax,0x7a
640031e8:	jbe    0x6400340f
640031ee:	cmp    ax,0x30
640031f2:	jb     0x64003209
640031f4:	cmp    ax,0x39
640031f8:	ja     0x64003209
640031fa:	movzx  ecx,BYTE PTR [ebp+0x0]
640031fe:	push   ecx
640031ff:	call   0x640055a0
64003204:	jmp    0x64003459
64003209:	cmp    ax,0x20
6400320d:	jne    0x6400325b
6400320f:	mov    eax,DWORD PTR [edi]
64003211:	mov    ebx,DWORD PTR [eax-0xc]
64003214:	mov    ecx,0x1
64003219:	sub    ecx,DWORD PTR [eax-0x4]
6400321c:	mov    eax,DWORD PTR [eax-0x8]
6400321f:	lea    esi,[ebx+0x1]
64003222:	sub    eax,esi
64003224:	or     eax,ecx
64003226:	jge    0x64003230
64003228:	push   esi
64003229:	mov    ecx,edi
6400322b:	call   0x64001e00
64003230:	test   esi,esi
64003232:	mov    eax,DWORD PTR [edi]
64003234:	mov    WORD PTR [eax+ebx*2],0x2b
6400323a:	jl     0x6400347f
64003240:	mov    eax,DWORD PTR [edi]
64003242:	cmp    esi,DWORD PTR [eax-0x8]
64003245:	jg     0x6400347f
6400324b:	mov    DWORD PTR [eax-0xc],esi
6400324e:	mov    edx,DWORD PTR [edi]
64003250:	mov    WORD PTR [edx+esi*2],0x0
64003256:	jmp    0x64003459
6400325b:	cmp    ax,0x2d
6400325f:	je     0x6400340f
64003265:	cmp    ax,0x5f
64003269:	je     0x6400340f
6400326f:	cmp    ax,0x2e
64003273:	je     0x6400340f
64003279:	cmp    ax,0x21
6400327d:	je     0x6400340f
64003283:	cmp    ax,0x7e
64003287:	je     0x6400340f
6400328d:	cmp    ax,0x2a
64003291:	je     0x6400340f
64003297:	cmp    ax,0x27
6400329b:	je     0x6400340f
640032a1:	cmp    ax,0x28
640032a5:	je     0x6400340f
640032ab:	cmp    ax,0x29
640032af:	je     0x6400340f
640032b5:	cmp    ax,0x7f
640032b9:	ja     0x640032f0
640032bb:	movzx  eax,BYTE PTR [ebp+0x0]
640032bf:	push   eax
640032c0:	lea    ecx,[esp+0x20]
640032c4:	push   ecx
640032c5:	call   0x64003090
640032ca:	add    esp,0x8
640032cd:	push   eax
640032ce:	mov    ecx,edi
640032d0:	mov    DWORD PTR [esp+0x40],0x1
640032d8:	call   0x64002650
640032dd:	lea    ecx,[esp+0x1c]
640032e1:	mov    BYTE PTR [esp+0x3c],0x0
640032e6:	call   0x64001930
640032eb:	jmp    0x64003459
640032f0:	cmp    ax,0x7ff
640032f4:	ja     0x64003365
640032f6:	shr    eax,0x6
640032f9:	or     eax,0xffffffc0
640032fc:	push   eax
640032fd:	lea    edx,[esp+0x24]
64003301:	push   edx
64003302:	call   0x64003090
64003307:	add    esp,0x8
6400330a:	push   eax
6400330b:	mov    ecx,edi
6400330d:	mov    DWORD PTR [esp+0x40],0x2
64003315:	call   0x64002650
6400331a:	lea    ecx,[esp+0x20]
6400331e:	mov    BYTE PTR [esp+0x3c],0x0
64003323:	call   0x64001930
64003328:	movzx  eax,BYTE PTR [ebp+0x0]
6400332c:	and    eax,0xffffff3f
64003331:	or     eax,0xffffff80
64003334:	push   eax
64003335:	lea    ecx,[esp+0x28]
64003339:	push   ecx
6400333a:	call   0x64003090
6400333f:	add    esp,0x8
64003342:	push   eax
64003343:	mov    ecx,edi
64003345:	mov    DWORD PTR [esp+0x40],0x3
6400334d:	call   0x64002650
64003352:	lea    ecx,[esp+0x24]
64003356:	mov    BYTE PTR [esp+0x3c],0x0
6400335b:	call   0x64001930
64003360:	jmp    0x64003459
64003365:	shr    ax,0xc
64003369:	lea    edx,[esp+0x28]
6400336d:	or     eax,0xffffffe0
64003370:	push   eax
64003371:	push   edx
64003372:	call   0x64003090
64003377:	add    esp,0x8
6400337a:	push   eax
6400337b:	mov    ecx,edi
6400337d:	mov    DWORD PTR [esp+0x40],0x4
64003385:	call   0x64002650
6400338a:	lea    ecx,[esp+0x28]
6400338e:	mov    BYTE PTR [esp+0x3c],0x0
64003393:	call   0x64001930
64003398:	movzx  eax,WORD PTR [ebp+0x0]
6400339c:	shr    ax,0x6
640033a0:	lea    ecx,[esp+0x2c]
640033a4:	and    eax,0xffffff3f
640033a9:	or     eax,0xffffff80
640033ac:	push   eax
640033ad:	push   ecx
640033ae:	call   0x64003090
640033b3:	add    esp,0x8
640033b6:	push   eax
640033b7:	mov    ecx,edi
640033b9:	mov    DWORD PTR [esp+0x40],0x5
640033c1:	call   0x64002650
640033c6:	lea    ecx,[esp+0x2c]
640033ca:	mov    BYTE PTR [esp+0x3c],0x0
640033cf:	call   0x64001930
640033d4:	movzx  edx,BYTE PTR [ebp+0x0]
640033d8:	and    edx,0xffffff3f
640033de:	or     edx,0xffffff80
640033e1:	push   edx
640033e2:	lea    eax,[esp+0x34]
640033e6:	push   eax
640033e7:	call   0x64003090
640033ec:	add    esp,0x8
640033ef:	push   eax
640033f0:	mov    ecx,edi
640033f2:	mov    DWORD PTR [esp+0x40],0x6
640033fa:	call   0x64002650
640033ff:	lea    ecx,[esp+0x30]
64003403:	mov    BYTE PTR [esp+0x3c],0x0
64003408:	call   0x64001930
6400340d:	jmp    0x64003459
6400340f:	mov    cl,BYTE PTR [ebp+0x0]
64003412:	mov    eax,DWORD PTR [edi]
64003414:	mov    ebx,DWORD PTR [eax-0xc]
64003417:	mov    BYTE PTR [esp+0x14],cl
6400341b:	mov    ecx,0x1
64003420:	sub    ecx,DWORD PTR [eax-0x4]
64003423:	mov    eax,DWORD PTR [eax-0x8]
64003426:	lea    esi,[ebx+0x1]
64003429:	sub    eax,esi
6400342b:	or     eax,ecx
6400342d:	jge    0x64003437
6400342f:	push   esi
64003430:	mov    ecx,edi
64003432:	call   0x64001e00
64003437:	test   esi,esi
64003439:	movsx  dx,BYTE PTR [esp+0x14]
6400343f:	mov    eax,DWORD PTR [edi]
64003441:	mov    WORD PTR [eax+ebx*2],dx
64003445:	jl     0x6400347f
64003447:	mov    eax,DWORD PTR [edi]
64003449:	cmp    esi,DWORD PTR [eax-0x8]
6400344c:	jg     0x6400347f
6400344e:	mov    DWORD PTR [eax-0xc],esi
64003451:	mov    eax,DWORD PTR [edi]
64003453:	mov    WORD PTR [eax+esi*2],0x0
64003459:	movzx  eax,WORD PTR [ebp+0x2]
6400345d:	add    ebp,0x2
64003460:	test   ax,ax
64003463:	jne    0x640031ce
64003469:	mov    eax,edi
6400346b:	mov    ecx,DWORD PTR [esp+0x34]
6400346f:	mov    DWORD PTR fs:0x0,ecx
64003476:	pop    ecx
64003477:	pop    edi
64003478:	pop    esi
64003479:	pop    ebp
6400347a:	pop    ebx
6400347b:	add    esp,0x2c
6400347e:	ret    
6400347f:	push   0x80070057
64003484:	call   0x64001040
64003489:	int3   
6400348a:	int3   
6400348b:	int3   
6400348c:	int3   
6400348d:	int3   
6400348e:	int3   
6400348f:	int3   
64003490:	push   0xffffffff
64003492:	push   0x64023d29
64003497:	mov    eax,fs:0x0
6400349d:	push   eax
6400349e:	sub    esp,0x48
640034a1:	push   ebx
640034a2:	push   esi
640034a3:	push   edi
640034a4:	mov    eax,ds:0x6402d09c
640034a9:	xor    eax,esp
640034ab:	push   eax
640034ac:	lea    eax,[esp+0x58]
640034b0:	mov    fs:0x0,eax
640034b6:	xor    ebx,ebx
640034b8:	mov    DWORD PTR [esp+0x60],ebx
640034bc:	mov    DWORD PTR [esp+0x10],ebx
640034c0:	mov    eax,ds:0x6402e540
640034c5:	mov    edx,DWORD PTR [eax+0xc]
640034c8:	mov    ecx,0x6402e540
640034cd:	call   edx
640034cf:	mov    edi,DWORD PTR [esp+0x68]
640034d3:	add    eax,0x10
640034d6:	mov    DWORD PTR [edi],eax
640034d8:	mov    DWORD PTR [esp+0x60],ebx
640034dc:	mov    ecx,0x1
640034e1:	sub    ecx,DWORD PTR [eax-0x4]
640034e4:	mov    eax,DWORD PTR [eax-0x8]
640034e7:	sub    eax,0x800
640034ec:	cmp    BYTE PTR [esp+0x6c],bl
640034f0:	mov    DWORD PTR [esp+0x10],0x1
640034f8:	je     0x6400358b
640034fe:	or     eax,ecx
64003500:	jge    0x6400350e
64003502:	push   0x800
64003507:	mov    ecx,edi
64003509:	call   0x64001e00
6400350e:	mov    eax,DWORD PTR [edi]
64003510:	push   0x800
64003515:	push   eax
64003516:	call   0x6400d770
6400351b:	call   eax
6400351d:	test   eax,eax
6400351f:	jne    0x64003612
64003525:	push   0x64027774
6400352a:	push   0x22
6400352c:	push   0x6402779c
64003531:	call   0x640057b0
64003536:	mov    ecx,eax
64003538:	add    esp,0xc
6400353b:	mov    DWORD PTR [esp+0x2c],0xf
64003543:	mov    DWORD PTR [esp+0x28],ebx
64003547:	mov    BYTE PTR [esp+0x18],bl
6400354b:	lea    esi,[ecx+0x1]
6400354e:	mov    edi,edi
64003550:	mov    dl,BYTE PTR [ecx]
64003552:	add    ecx,0x1
64003555:	cmp    dl,bl
64003557:	jne    0x64003550
64003559:	sub    ecx,esi
6400355b:	push   ecx
6400355c:	push   eax
6400355d:	lea    ecx,[esp+0x1c]
64003561:	call   0x64001860
64003566:	lea    eax,[esp+0x14]
6400356a:	push   eax
6400356b:	lea    ecx,[esp+0x34]
6400356f:	mov    DWORD PTR [esp+0x64],0x1
64003577:	call   0x64002020
6400357c:	push   0x6402aa94
64003581:	lea    ecx,[esp+0x34]
64003585:	push   ecx
64003586:	call   0x64012a5b
6400358b:	or     eax,ecx
6400358d:	jge    0x6400359b
6400358f:	push   0x800
64003594:	mov    ecx,edi
64003596:	call   0x64001e00
6400359b:	mov    eax,DWORD PTR [edi]
6400359d:	push   0x800
640035a2:	push   eax
640035a3:	call   0x6400cf90
640035a8:	call   eax
640035aa:	test   eax,eax
640035ac:	jne    0x64003612
640035ae:	push   0x640277c0
640035b3:	push   0x1c
640035b5:	push   0x640277ec
640035ba:	call   0x640057b0
640035bf:	mov    ecx,eax
640035c1:	add    esp,0xc
640035c4:	mov    DWORD PTR [esp+0x2c],0xf
640035cc:	mov    DWORD PTR [esp+0x28],ebx
640035d0:	mov    BYTE PTR [esp+0x18],bl
640035d4:	lea    esi,[ecx+0x1]
640035d7:	mov    dl,BYTE PTR [ecx]
640035d9:	add    ecx,0x1
640035dc:	cmp    dl,bl
640035de:	jne    0x640035d7
640035e0:	sub    ecx,esi
640035e2:	push   ecx
640035e3:	push   eax
640035e4:	lea    ecx,[esp+0x1c]
640035e8:	call   0x64001860
640035ed:	lea    edx,[esp+0x14]
640035f1:	push   edx
640035f2:	lea    ecx,[esp+0x34]
640035f6:	mov    DWORD PTR [esp+0x64],0x2
640035fe:	call   0x64002020
64003603:	push   0x6402aa94
64003608:	lea    eax,[esp+0x34]
6400360c:	push   eax
6400360d:	call   0x64012a5b
64003612:	mov    edx,DWORD PTR [edi]
64003614:	cmp    edx,ebx
64003616:	jne    0x6400361c
64003618:	xor    eax,eax
6400361a:	jmp    0x64003632
6400361c:	mov    eax,edx
6400361e:	lea    esi,[eax+0x2]
64003621:	mov    cx,WORD PTR [eax]
64003624:	add    eax,0x2
64003627:	cmp    cx,bx
6400362a:	jne    0x64003621
6400362c:	sub    eax,esi
6400362e:	sar    eax,1
64003630:	js     0x64003674
64003632:	cmp    eax,DWORD PTR [edx-0x8]
64003635:	jg     0x64003674
64003637:	mov    DWORD PTR [edx-0xc],eax
6400363a:	mov    ecx,DWORD PTR [edi]
6400363c:	mov    WORD PTR [ecx+eax*2],bx
64003640:	mov    ecx,DWORD PTR [edi]
64003642:	mov    edx,DWORD PTR [ecx-0xc]
64003645:	lea    eax,[edx-0x1]
64003648:	cmp    eax,ebx
6400364a:	jl     0x64003674
6400364c:	cmp    eax,edx
6400364e:	jg     0x64003674
64003650:	movzx  eax,WORD PTR [ecx+eax*2]
64003654:	cmp    ax,0x5c
64003658:	je     0x6400365f
6400365a:	call   0x64005600
6400365f:	mov    eax,edi
64003661:	mov    ecx,DWORD PTR [esp+0x58]
64003665:	mov    DWORD PTR fs:0x0,ecx
6400366c:	pop    ecx
6400366d:	pop    edi
6400366e:	pop    esi
6400366f:	pop    ebx
64003670:	add    esp,0x54
64003673:	ret    
64003674:	push   0x80070057
64003679:	call   0x64001040
6400367e:	int3   
6400367f:	int3   
64003680:	push   0xffffffff
64003682:	push   0x64023e31
64003687:	mov    eax,fs:0x0
6400368d:	push   eax
6400368e:	sub    esp,0x48
64003691:	push   ebx
64003692:	push   ebp
64003693:	push   esi
64003694:	push   edi
64003695:	mov    eax,ds:0x6402d09c
6400369a:	xor    eax,esp
6400369c:	push   eax
6400369d:	lea    eax,[esp+0x5c]
640036a1:	mov    fs:0x0,eax
640036a7:	mov    esi,DWORD PTR [esp+0x6c]
640036ab:	xor    ebx,ebx
640036ad:	push   ebx
640036ae:	mov    DWORD PTR [esp+0x68],ebx
640036b2:	push   esi
640036b3:	mov    DWORD PTR [esp+0x1c],ebx
640036b7:	call   0x64003490
640036bc:	add    esp,0x8
640036bf:	mov    DWORD PTR [esp+0x64],ebx
640036c3:	mov    eax,DWORD PTR [esi]
640036c5:	mov    ebp,0x1
640036ca:	sub    eax,0x10
640036cd:	cmp    DWORD PTR [eax+0xc],ebp
640036d0:	mov    DWORD PTR [esp+0x14],ebp
640036d4:	jle    0x640036e1
640036d6:	mov    eax,DWORD PTR [eax+0x4]
640036d9:	push   eax
640036da:	mov    ecx,esi
640036dc:	call   0x64001950
640036e1:	mov    eax,DWORD PTR [esi]
640036e3:	push   0x5c
640036e5:	push   eax
640036e6:	call   0x64013a37
640036eb:	mov    edi,eax
640036ed:	add    esp,0x8
640036f0:	cmp    edi,ebx
640036f2:	jne    0x64003756
640036f4:	push   0x6402780c
640036f9:	push   0x18
640036fb:	push   0x64027830
64003700:	call   0x640057b0
64003705:	mov    ecx,eax
64003707:	add    esp,0xc
6400370a:	mov    DWORD PTR [esp+0x30],0xf
64003712:	mov    DWORD PTR [esp+0x2c],ebx
64003716:	mov    BYTE PTR [esp+0x1c],bl
6400371a:	lea    esi,[ecx+0x1]
6400371d:	lea    ecx,[ecx+0x0]
64003720:	mov    dl,BYTE PTR [ecx]
64003722:	add    ecx,ebp
64003724:	cmp    dl,bl
64003726:	jne    0x64003720
64003728:	sub    ecx,esi
6400372a:	push   ecx
6400372b:	push   eax
6400372c:	lea    ecx,[esp+0x20]
64003730:	call   0x64001860
64003735:	lea    ecx,[esp+0x18]
64003739:	push   ecx
6400373a:	lea    ecx,[esp+0x38]
6400373e:	mov    DWORD PTR [esp+0x68],ebp
64003742:	call   0x64002020
64003747:	push   0x6402aa94
6400374c:	lea    edx,[esp+0x38]
64003750:	push   edx
64003751:	call   0x64012a5b
64003756:	mov    eax,DWORD PTR [esi]
64003758:	sub    eax,0x10
6400375b:	cmp    DWORD PTR [eax+0xc],ebp
6400375e:	jle    0x6400376b
64003760:	mov    eax,DWORD PTR [eax+0x4]
64003763:	push   eax
64003764:	mov    ecx,esi
64003766:	call   0x64001950
6400376b:	mov    ecx,DWORD PTR [esi]
6400376d:	sub    edi,ecx
6400376f:	sar    edi,1
64003771:	add    edi,ebp
64003773:	cmp    ecx,ebx
64003775:	jne    0x6400377b
64003777:	xor    eax,eax
64003779:	jmp    0x64003796
6400377b:	mov    eax,ecx
6400377d:	lea    ebp,[eax+0x2]
64003780:	mov    dx,WORD PTR [eax]
64003783:	add    eax,0x2
64003786:	cmp    dx,bx
64003789:	jne    0x64003780
6400378b:	sub    eax,ebp
6400378d:	sar    eax,1
6400378f:	js     0x640037e9
64003791:	mov    ebp,0x1
64003796:	cmp    eax,DWORD PTR [ecx-0x8]
64003799:	jg     0x640037e9
6400379b:	mov    DWORD PTR [ecx-0xc],eax
6400379e:	mov    ecx,DWORD PTR [esi]
640037a0:	mov    WORD PTR [ecx+eax*2],bx
640037a4:	mov    eax,DWORD PTR [esi]
640037a6:	sub    eax,0x10
640037a9:	mov    ecx,ebp
640037ab:	sub    ecx,DWORD PTR [eax+0xc]
640037ae:	mov    eax,DWORD PTR [eax+0x8]
640037b1:	sub    eax,edi
640037b3:	or     eax,ecx
640037b5:	jge    0x640037bf
640037b7:	push   edi
640037b8:	mov    ecx,esi
640037ba:	call   0x64001e00
640037bf:	cmp    edi,ebx
640037c1:	jl     0x640037e9
640037c3:	mov    eax,DWORD PTR [esi]
640037c5:	cmp    edi,DWORD PTR [eax-0x8]
640037c8:	jg     0x640037e9
640037ca:	mov    DWORD PTR [eax-0xc],edi
640037cd:	mov    edx,DWORD PTR [esi]
640037cf:	mov    WORD PTR [edx+edi*2],bx
640037d3:	mov    eax,esi
640037d5:	mov    ecx,DWORD PTR [esp+0x5c]
640037d9:	mov    DWORD PTR fs:0x0,ecx
640037e0:	pop    ecx
640037e1:	pop    edi
640037e2:	pop    esi
640037e3:	pop    ebp
640037e4:	pop    ebx
640037e5:	add    esp,0x54
640037e8:	ret    
640037e9:	push   0x80070057
640037ee:	call   0x64001040
640037f3:	int3   
640037f4:	int3   
640037f5:	int3   
640037f6:	int3   
640037f7:	int3   
640037f8:	int3   
640037f9:	int3   
640037fa:	int3   
640037fb:	int3   
640037fc:	int3   
640037fd:	int3   
640037fe:	int3   
640037ff:	int3   
64003800:	push   ebp
64003801:	lea    ebp,[esp-0x78]
64003805:	sub    esp,0x78
64003808:	push   0xffffffff
6400380a:	push   0x64023f49
6400380f:	mov    eax,fs:0x0
64003815:	push   eax
64003816:	sub    esp,0xb4
6400381c:	mov    eax,ds:0x6402d09c
64003821:	xor    eax,ebp
64003823:	mov    DWORD PTR [ebp+0x74],eax
64003826:	push   ebx
64003827:	push   esi
64003828:	push   edi
64003829:	push   eax
6400382a:	lea    eax,[ebp-0xc]
6400382d:	mov    fs:0x0,eax
64003833:	call   DWORD PTR ds:0x6402d06c
64003839:	mov    ebx,eax
6400383b:	lea    eax,[ebp+0xc]
6400383e:	push   eax
6400383f:	call   0x64003680
64003844:	add    esp,0x4
64003847:	push   0x0
64003849:	push   0x0
6400384b:	lea    ecx,[ebp+0x0]
6400384e:	push   ecx
6400384f:	lea    edx,[ebp+0x4]
64003852:	push   edx
64003853:	lea    eax,[ebp+0x8]
64003856:	push   eax
64003857:	push   0x0
64003859:	mov    DWORD PTR [ebp-0x4],0x0
64003860:	mov    ecx,DWORD PTR [ebp+0xc]
64003863:	push   0x0
64003865:	push   ecx
64003866:	call   0x6400d690
6400386b:	call   eax
6400386d:	test   eax,eax
6400386f:	jne    0x64003980
64003875:	call   DWORD PTR ds:0x64025044
6400387b:	push   0xa
6400387d:	lea    edx,[ebp+0x10]
64003880:	push   edx
64003881:	push   eax
64003882:	call   0x64013a12
64003887:	mov    eax,DWORD PTR [ebp+0xc]
6400388a:	add    esp,0xc
6400388d:	test   eax,eax
6400388f:	mov    edi,eax
64003891:	je     0x640038bf
64003893:	push   eax
64003894:	call   DWORD PTR ds:0x64025054
6400389a:	add    eax,0x1
6400389d:	cmp    eax,0x3fffffff
640038a2:	jle    0x640038a8
640038a4:	xor    edi,edi
640038a6:	jmp    0x640038bf
640038a8:	lea    esi,[eax+eax*1]
640038ab:	mov    eax,esi
640038ad:	call   0x640135f0
640038b2:	mov    eax,esp
640038b4:	push   ebx
640038b5:	push   esi
640038b6:	push   edi
640038b7:	push   eax
640038b8:	call   0x64002b90
640038bd:	mov    edi,eax
640038bf:	push   0x6402787c
640038c4:	push   0x21
640038c6:	push   0x640278b0
640038cb:	call   0x640057b0
640038d0:	mov    ecx,eax
640038d2:	add    esp,0xc
640038d5:	mov    DWORD PTR [ebp-0x10],0xf
640038dc:	mov    DWORD PTR [ebp-0x14],0x0
640038e3:	mov    BYTE PTR [ebp-0x24],0x0
640038e7:	lea    esi,[ecx+0x1]
640038ea:	lea    ebx,[ebx+0x0]
640038f0:	mov    dl,BYTE PTR [ecx]
640038f2:	add    ecx,0x1
640038f5:	test   dl,dl
640038f7:	jne    0x640038f0
640038f9:	sub    ecx,esi
640038fb:	push   ecx
640038fc:	push   eax
640038fd:	lea    ecx,[ebp-0x28]
64003900:	call   0x64001860
64003905:	lea    eax,[ebp-0x28]
64003908:	push   eax
64003909:	lea    esi,[ebp-0x6c]
6400390c:	mov    BYTE PTR [ebp-0x4],0x1
64003910:	call   0x64009110
64003915:	mov    esi,eax
64003917:	push   0x64027850
6400391c:	push   0x7
6400391e:	push   0x64027874
64003923:	mov    BYTE PTR [ebp-0x4],0x2
64003927:	call   0x640057b0
6400392c:	push   esi
6400392d:	mov    edi,eax
6400392f:	lea    esi,[ebp-0x88]
64003935:	call   0x64009110
6400393a:	push   eax
6400393b:	lea    edi,[ebp+0x10]
6400393e:	lea    esi,[ebp-0xc0]
64003944:	mov    BYTE PTR [ebp-0x4],0x3
64003948:	call   0x64009110
6400394d:	push   eax
6400394e:	mov    edi,0x6402784c
64003953:	lea    esi,[ebp-0xa4]
64003959:	mov    BYTE PTR [ebp-0x4],0x4
6400395d:	call   0x64009110
64003962:	add    esp,0x1c
64003965:	push   eax
64003966:	lea    ecx,[ebp-0x50]
64003969:	mov    BYTE PTR [ebp-0x4],0x5
6400396d:	call   0x64002020
64003972:	push   0x6402aa94
64003977:	lea    ecx,[ebp-0x50]
6400397a:	push   ecx
6400397b:	call   0x64012a5b
64003980:	mov    esi,DWORD PTR [ebp+0x8]
64003983:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400398a:	mov    eax,DWORD PTR [ebp+0xc]
6400398d:	add    eax,0xfffffff0
64003990:	lea    edx,[eax+0xc]
64003993:	or     ecx,0xffffffff
64003996:	lock xadd DWORD PTR [edx],ecx
6400399a:	dec    ecx
6400399b:	test   ecx,ecx
6400399d:	jg     0x640039a9
6400399f:	mov    ecx,DWORD PTR [eax]
640039a1:	mov    edx,DWORD PTR [ecx]
640039a3:	push   eax
640039a4:	mov    eax,DWORD PTR [edx+0x4]
640039a7:	call   eax
640039a9:	mov    eax,esi
640039ab:	lea    esp,[ebp-0xd0]
640039b1:	mov    ecx,DWORD PTR [ebp-0xc]
640039b4:	mov    DWORD PTR fs:0x0,ecx
640039bb:	pop    ecx
640039bc:	pop    edi
640039bd:	pop    esi
640039be:	pop    ebx
640039bf:	mov    ecx,DWORD PTR [ebp+0x74]
640039c2:	xor    ecx,ebp
640039c4:	call   0x64012e6c
640039c9:	add    ebp,0x78
640039cc:	mov    esp,ebp
640039ce:	pop    ebp
640039cf:	ret    
640039d0:	push   ebp
640039d1:	mov    ebp,esp
640039d3:	and    esp,0xfffffff8
640039d6:	push   0xffffffff
640039d8:	push   0x64023cc6
640039dd:	mov    eax,fs:0x0
640039e3:	push   eax
640039e4:	sub    esp,0x840
640039ea:	mov    eax,ds:0x6402d09c
640039ef:	xor    eax,esp
640039f1:	mov    DWORD PTR [esp+0x838],eax
640039f8:	push   ebx
640039f9:	push   esi
640039fa:	push   edi
640039fb:	mov    eax,ds:0x6402d09c
64003a00:	xor    eax,esp
64003a02:	push   eax
64003a03:	lea    eax,[esp+0x850]
64003a0a:	mov    fs:0x0,eax
64003a10:	xor    eax,eax
64003a12:	xor    ebx,ebx
64003a14:	mov    DWORD PTR [esp+0x34],ebx
64003a18:	mov    DWORD PTR [esp+0x38],eax
64003a1c:	mov    DWORD PTR [esp+0x3c],eax
64003a20:	mov    DWORD PTR [esp+0x40],eax
64003a24:	mov    DWORD PTR [esp+0x1c],ebx
64003a28:	push   0x640278d4
64003a2d:	push   0x1f
64003a2f:	push   0x64027900
64003a34:	mov    DWORD PTR [esp+0x864],ebx
64003a3b:	call   0x640059b0
64003a40:	add    esp,0xc
64003a43:	lea    ecx,[esp+0x18]
64003a47:	push   ecx
64003a48:	push   0x20019
64003a4d:	push   ebx
64003a4e:	push   eax
64003a4f:	push   0x80000002
64003a54:	mov    DWORD PTR [esp+0x2c],ebx
64003a58:	call   DWORD PTR ds:0x64025004
64003a5e:	cmp    eax,ebx
64003a60:	jne    0x64003ad7
64003a62:	mov    edx,DWORD PTR [esp+0x18]
64003a66:	push   0x64027940
64003a6b:	push   0xb
64003a6d:	push   0x64027970
64003a72:	mov    DWORD PTR [esp+0x28],edx
64003a76:	mov    DWORD PTR [esp+0x2c],0x400
64003a7e:	call   0x640059b0
64003a83:	add    esp,0xc
64003a86:	push   eax
64003a87:	lea    eax,[esp+0x20]
64003a8b:	push   eax
64003a8c:	lea    edi,[esp+0x28]
64003a90:	lea    esi,[esp+0x4c]
64003a94:	call   0x64002bf0
64003a99:	test   eax,eax
64003a9b:	je     0x64003afa
64003a9d:	mov    eax,DWORD PTR [esp+0x18]
64003aa1:	test   eax,eax
64003aa3:	mov    ecx,DWORD PTR [esp+0x40]
64003aa7:	mov    esi,DWORD PTR [esp+0x34]
64003aab:	mov    edi,DWORD PTR [esp+0x38]
64003aaf:	mov    ebx,DWORD PTR [esp+0x3c]
64003ab3:	mov    DWORD PTR [esp+0x30],ecx
64003ab7:	je     0x64003ac0
64003ab9:	push   eax
64003aba:	call   DWORD PTR ds:0x64025000
64003ac0:	mov    eax,DWORD PTR [ebp+0x8]
64003ac3:	mov    edx,DWORD PTR [esp+0x30]
64003ac7:	mov    DWORD PTR [eax],esi
64003ac9:	mov    DWORD PTR [eax+0x4],edi
64003acc:	mov    DWORD PTR [eax+0x8],ebx
64003acf:	mov    DWORD PTR [eax+0xc],edx
64003ad2:	jmp    0x64003bc9
64003ad7:	mov    eax,DWORD PTR [ebp+0x8]
64003ada:	mov    ecx,DWORD PTR [esp+0x34]
64003ade:	mov    edx,DWORD PTR [esp+0x38]
64003ae2:	mov    DWORD PTR [eax],ecx
64003ae4:	mov    ecx,DWORD PTR [esp+0x3c]
64003ae8:	mov    DWORD PTR [eax+0x4],edx
64003aeb:	mov    edx,DWORD PTR [esp+0x40]
64003aef:	mov    DWORD PTR [eax+0x8],ecx
64003af2:	mov    DWORD PTR [eax+0xc],edx
64003af5:	jmp    0x64003bc9
64003afa:	push   0x64027988
64003aff:	lea    ecx,[esp+0x18]
64003b03:	call   0x640025a0
64003b08:	lea    eax,[esp+0x44]
64003b0c:	mov    BYTE PTR [esp+0x858],0x1
64003b14:	lea    edx,[eax+0x2]
64003b17:	mov    cx,WORD PTR [eax]
64003b1a:	add    eax,0x2
64003b1d:	cmp    cx,bx
64003b20:	jne    0x64003b17
64003b22:	sub    eax,edx
64003b24:	sar    eax,1
64003b26:	push   eax
64003b27:	lea    eax,[esp+0x48]
64003b2b:	push   eax
64003b2c:	lea    ecx,[esp+0x1c]
64003b30:	call   0x640029f0
64003b35:	push   0x1
64003b37:	push   0x6402798c
64003b3c:	lea    ecx,[esp+0x1c]
64003b40:	call   0x640029f0
64003b45:	mov    eax,DWORD PTR [esp+0x14]
64003b49:	cmp    DWORD PTR [eax-0x4],0x1
64003b4d:	jle    0x64003b60
64003b4f:	mov    ecx,DWORD PTR [eax-0xc]
64003b52:	push   ecx
64003b53:	lea    ecx,[esp+0x18]
64003b57:	call   0x64001950
64003b5c:	mov    eax,DWORD PTR [esp+0x14]
64003b60:	lea    edx,[esp+0x34]
64003b64:	push   edx
64003b65:	push   eax
64003b66:	call   DWORD PTR ds:0x640251e0
64003b6c:	mov    eax,DWORD PTR [esp+0x40]
64003b70:	mov    esi,DWORD PTR [esp+0x34]
64003b74:	mov    edi,DWORD PTR [esp+0x38]
64003b78:	mov    ebx,DWORD PTR [esp+0x3c]
64003b7c:	mov    DWORD PTR [esp+0x30],eax
64003b80:	mov    BYTE PTR [esp+0x858],0x0
64003b88:	mov    eax,DWORD PTR [esp+0x14]
64003b8c:	add    eax,0xfffffff0
64003b8f:	lea    ecx,[eax+0xc]
64003b92:	or     edx,0xffffffff
64003b95:	lock xadd DWORD PTR [ecx],edx
64003b99:	dec    edx
64003b9a:	test   edx,edx
64003b9c:	jg     0x64003ba8
64003b9e:	mov    ecx,DWORD PTR [eax]
64003ba0:	mov    edx,DWORD PTR [ecx]
64003ba2:	push   eax
64003ba3:	mov    eax,DWORD PTR [edx+0x4]
64003ba6:	call   eax
64003ba8:	mov    eax,DWORD PTR [esp+0x18]
64003bac:	test   eax,eax
64003bae:	je     0x64003bb7
64003bb0:	push   eax
64003bb1:	call   DWORD PTR ds:0x64025000
64003bb7:	mov    eax,DWORD PTR [ebp+0x8]
64003bba:	mov    ecx,DWORD PTR [esp+0x30]
64003bbe:	mov    DWORD PTR [eax],esi
64003bc0:	mov    DWORD PTR [eax+0x4],edi
64003bc3:	mov    DWORD PTR [eax+0x8],ebx
64003bc6:	mov    DWORD PTR [eax+0xc],ecx
64003bc9:	mov    ecx,DWORD PTR [esp+0x850]
64003bd0:	mov    DWORD PTR fs:0x0,ecx
64003bd7:	pop    ecx
64003bd8:	pop    edi
64003bd9:	pop    esi
64003bda:	pop    ebx
64003bdb:	mov    ecx,DWORD PTR [esp+0x838]
64003be2:	xor    ecx,esp
64003be4:	call   0x64012e6c
64003be9:	mov    esp,ebp
64003beb:	pop    ebp
64003bec:	ret    
64003bed:	int3   
64003bee:	int3   
64003bef:	int3   
64003bf0:	int3   
64003bf1:	int3   
64003bf2:	int3   
64003bf3:	int3   
64003bf4:	int3   
64003bf5:	int3   
64003bf6:	int3   
64003bf7:	int3   
64003bf8:	int3   
64003bf9:	int3   
64003bfa:	int3   
64003bfb:	int3   
64003bfc:	int3   
64003bfd:	int3   
64003bfe:	int3   
64003bff:	int3   
64003c00:	push   ebp
64003c01:	lea    ebp,[esp-0x820]
64003c08:	sub    esp,0x820
64003c0e:	push   0xffffffff
64003c10:	push   0x64023c79
64003c15:	mov    eax,fs:0x0
64003c1b:	push   eax
64003c1c:	sub    esp,0x44
64003c1f:	mov    eax,ds:0x6402d09c
64003c24:	xor    eax,ebp
64003c26:	mov    DWORD PTR [ebp+0x81c],eax
64003c2c:	push   ebx
64003c2d:	push   esi
64003c2e:	push   edi
64003c2f:	push   eax
64003c30:	lea    eax,[ebp-0xc]
64003c33:	mov    fs:0x0,eax
64003c39:	xor    ebx,ebx
64003c3b:	mov    DWORD PTR [ebp-0x4],ebx
64003c3e:	test   BYTE PTR ds:0x640314b0,0x1
64003c45:	jne    0x64003c8d
64003c47:	or     DWORD PTR ds:0x640314b0,0x1
64003c4e:	mov    BYTE PTR [ebp-0x4],0x1
64003c52:	call   0x640077a0
64003c57:	mov    ds:0x64031350,eax
64003c5c:	mov    BYTE PTR [eax+0x29],0x1
64003c60:	mov    eax,ds:0x64031350
64003c65:	mov    DWORD PTR [eax+0x4],eax
64003c68:	mov    eax,ds:0x64031350
64003c6d:	mov    DWORD PTR [eax],eax
64003c6f:	mov    eax,ds:0x64031350
64003c74:	mov    DWORD PTR [eax+0x8],eax
64003c77:	push   0x64024290
64003c7c:	mov    DWORD PTR ds:0x64031354,ebx
64003c82:	call   0x64012f9f
64003c87:	add    esp,0x4
64003c8a:	mov    BYTE PTR [ebp-0x4],bl
64003c8d:	cmp    DWORD PTR ds:0x64031354,ebx
64003c93:	jne    0x64004b5f
64003c99:	call   0x640077a0
64003c9e:	mov    DWORD PTR [ebp-0x30],eax
64003ca1:	mov    BYTE PTR [eax+0x29],0x1
64003ca5:	mov    eax,DWORD PTR [ebp-0x30]
64003ca8:	mov    DWORD PTR [eax+0x4],eax
64003cab:	mov    eax,DWORD PTR [ebp-0x30]
64003cae:	mov    DWORD PTR [eax],eax
64003cb0:	mov    eax,DWORD PTR [ebp-0x30]
64003cb3:	mov    DWORD PTR [eax+0x8],eax
64003cb6:	mov    DWORD PTR [ebp-0x2c],ebx
64003cb9:	push   0x64027990
64003cbe:	push   0x3
64003cc0:	push   0x640279b4
64003cc5:	mov    BYTE PTR [ebp-0x4],0x2
64003cc9:	call   0x640057b0
64003cce:	mov    esi,eax
64003cd0:	mov    ecx,esi
64003cd2:	add    esp,0xc
64003cd5:	mov    DWORD PTR [ebp-0x10],0xf
64003cdc:	mov    DWORD PTR [ebp-0x14],ebx
64003cdf:	mov    BYTE PTR [ebp-0x24],bl
64003ce2:	lea    edi,[ecx+0x1]
64003ce5:	mov    al,BYTE PTR [ecx]
64003ce7:	add    ecx,0x1
64003cea:	cmp    al,bl
64003cec:	jne    0x64003ce5
64003cee:	sub    ecx,edi
64003cf0:	push   ecx
64003cf1:	push   esi
64003cf2:	lea    ecx,[ebp-0x28]
64003cf5:	call   0x64001860
64003cfa:	lea    eax,[ebp-0x28]
64003cfd:	push   eax
64003cfe:	lea    ecx,[ebp-0x40]
64003d01:	push   ecx
64003d02:	lea    edx,[ebp-0x34]
64003d05:	push   edx
64003d06:	mov    BYTE PTR [ebp-0x4],0x3
64003d0a:	call   0x64005ba0
64003d0f:	mov    BYTE PTR [ebp-0x4],0x2
64003d13:	cmp    DWORD PTR [ebp-0x10],0x10
64003d17:	jb     0x64003d25
64003d19:	mov    eax,DWORD PTR [ebp-0x24]
64003d1c:	push   eax
64003d1d:	call   0x64012612
64003d22:	add    esp,0x4
64003d25:	push   0x640279b8
64003d2a:	push   0x8
64003d2c:	push   0x640279f4
64003d31:	call   0x640057b0
64003d36:	mov    esi,eax
64003d38:	mov    ecx,esi
64003d3a:	add    esp,0xc
64003d3d:	mov    DWORD PTR [ebp-0x10],0xf
64003d44:	mov    DWORD PTR [ebp-0x14],ebx
64003d47:	mov    BYTE PTR [ebp-0x24],bl
64003d4a:	lea    edx,[ecx+0x1]
64003d4d:	lea    ecx,[ecx+0x0]
64003d50:	mov    al,BYTE PTR [ecx]
64003d52:	add    ecx,0x1
64003d55:	cmp    al,bl
64003d57:	jne    0x64003d50
64003d59:	sub    ecx,edx
64003d5b:	push   ecx
64003d5c:	push   esi
64003d5d:	lea    ecx,[ebp-0x28]
64003d60:	call   0x64001860
64003d65:	lea    ecx,[ebp-0x28]
64003d68:	push   ecx
64003d69:	lea    edx,[ebp-0x40]
64003d6c:	push   edx
64003d6d:	lea    eax,[ebp-0x34]
64003d70:	push   eax
64003d71:	mov    BYTE PTR [ebp-0x4],0x4
64003d75:	call   0x64005ba0
64003d7a:	mov    edi,0x10
64003d7f:	mov    BYTE PTR [ebp-0x4],0x2
64003d83:	cmp    DWORD PTR [ebp-0x10],edi
64003d86:	jb     0x64003d94
64003d88:	mov    ecx,DWORD PTR [ebp-0x24]
64003d8b:	push   ecx
64003d8c:	call   0x64012612
64003d91:	add    esp,0x4
64003d94:	push   0x64027a00
64003d99:	push   0x8
64003d9b:	push   0x64027a2c
64003da0:	call   0x640057b0
64003da5:	mov    esi,eax
64003da7:	mov    ecx,esi
64003da9:	add    esp,0xc
64003dac:	mov    DWORD PTR [ebp-0x10],0xf
64003db3:	mov    DWORD PTR [ebp-0x14],ebx
64003db6:	mov    BYTE PTR [ebp-0x24],bl
64003db9:	lea    edx,[ecx+0x1]
64003dbc:	lea    esp,[esp+0x0]
64003dc0:	mov    al,BYTE PTR [ecx]
64003dc2:	add    ecx,0x1
64003dc5:	cmp    al,bl
64003dc7:	jne    0x64003dc0
64003dc9:	sub    ecx,edx
64003dcb:	push   ecx
64003dcc:	push   esi
64003dcd:	lea    ecx,[ebp-0x28]
64003dd0:	call   0x64001860
64003dd5:	lea    edx,[ebp-0x28]
64003dd8:	push   edx
64003dd9:	lea    eax,[ebp-0x40]
64003ddc:	push   eax
64003ddd:	lea    ecx,[ebp-0x34]
64003de0:	push   ecx
64003de1:	mov    BYTE PTR [ebp-0x4],0x5
64003de5:	call   0x64005ba0
64003dea:	mov    BYTE PTR [ebp-0x4],0x2
64003dee:	cmp    DWORD PTR [ebp-0x10],edi
64003df1:	jb     0x64003dff
64003df3:	mov    edx,DWORD PTR [ebp-0x24]
64003df6:	push   edx
64003df7:	call   0x64012612
64003dfc:	add    esp,0x4
64003dff:	push   0x64027a38
64003e04:	push   0xa
64003e06:	push   0x64027a74
64003e0b:	call   0x640057b0
64003e10:	mov    esi,eax
64003e12:	mov    ecx,esi
64003e14:	add    esp,0xc
64003e17:	mov    DWORD PTR [ebp-0x10],0xf
64003e1e:	mov    DWORD PTR [ebp-0x14],ebx
64003e21:	mov    BYTE PTR [ebp-0x24],bl
64003e24:	lea    edx,[ecx+0x1]
64003e27:	mov    al,BYTE PTR [ecx]
64003e29:	add    ecx,0x1
64003e2c:	cmp    al,bl
64003e2e:	jne    0x64003e27
64003e30:	sub    ecx,edx
64003e32:	push   ecx
64003e33:	push   esi
64003e34:	lea    ecx,[ebp-0x28]
64003e37:	call   0x64001860
64003e3c:	lea    eax,[ebp-0x28]
64003e3f:	push   eax
64003e40:	lea    ecx,[ebp-0x40]
64003e43:	push   ecx
64003e44:	lea    edx,[ebp-0x34]
64003e47:	push   edx
64003e48:	mov    BYTE PTR [ebp-0x4],0x6
64003e4c:	call   0x64005ba0
64003e51:	mov    BYTE PTR [ebp-0x4],0x2
64003e55:	cmp    DWORD PTR [ebp-0x10],edi
64003e58:	jb     0x64003e66
64003e5a:	mov    eax,DWORD PTR [ebp-0x24]
64003e5d:	push   eax
64003e5e:	call   0x64012612
64003e63:	add    esp,0x4
64003e66:	push   0x64027a80
64003e6b:	push   0x4
64003e6d:	push   0x64027ab4
64003e72:	call   0x640057b0
64003e77:	mov    esi,eax
64003e79:	mov    ecx,esi
64003e7b:	add    esp,0xc
64003e7e:	mov    DWORD PTR [ebp-0x10],0xf
64003e85:	mov    DWORD PTR [ebp-0x14],ebx
64003e88:	mov    BYTE PTR [ebp-0x24],bl
64003e8b:	lea    edx,[ecx+0x1]
64003e8e:	mov    edi,edi
64003e90:	mov    al,BYTE PTR [ecx]
64003e92:	add    ecx,0x1
64003e95:	cmp    al,bl
64003e97:	jne    0x64003e90
64003e99:	sub    ecx,edx
64003e9b:	push   ecx
64003e9c:	push   esi
64003e9d:	lea    ecx,[ebp-0x28]
64003ea0:	call   0x64001860
64003ea5:	lea    ecx,[ebp-0x28]
64003ea8:	push   ecx
64003ea9:	lea    edx,[ebp-0x40]
64003eac:	push   edx
64003ead:	lea    eax,[ebp-0x34]
64003eb0:	push   eax
64003eb1:	mov    BYTE PTR [ebp-0x4],0x7
64003eb5:	call   0x64005ba0
64003eba:	mov    BYTE PTR [ebp-0x4],0x2
64003ebe:	cmp    DWORD PTR [ebp-0x10],edi
64003ec1:	jb     0x64003ecf
64003ec3:	mov    ecx,DWORD PTR [ebp-0x24]
64003ec6:	push   ecx
64003ec7:	call   0x64012612
64003ecc:	add    esp,0x4
64003ecf:	push   0x64027abc
64003ed4:	push   0x8
64003ed6:	push   0x64027aec
64003edb:	call   0x640057b0
64003ee0:	mov    esi,eax
64003ee2:	mov    ecx,esi
64003ee4:	add    esp,0xc
64003ee7:	mov    DWORD PTR [ebp-0x10],0xf
64003eee:	mov    DWORD PTR [ebp-0x14],ebx
64003ef1:	mov    BYTE PTR [ebp-0x24],bl
64003ef4:	lea    edx,[ecx+0x1]
64003ef7:	mov    al,BYTE PTR [ecx]
64003ef9:	add    ecx,0x1
64003efc:	cmp    al,bl
64003efe:	jne    0x64003ef7
64003f00:	sub    ecx,edx
64003f02:	push   ecx
64003f03:	push   esi
64003f04:	lea    ecx,[ebp-0x28]
64003f07:	call   0x64001860
64003f0c:	lea    edx,[ebp-0x28]
64003f0f:	push   edx
64003f10:	lea    eax,[ebp-0x40]
64003f13:	push   eax
64003f14:	lea    ecx,[ebp-0x34]
64003f17:	push   ecx
64003f18:	mov    BYTE PTR [ebp-0x4],0x8
64003f1c:	call   0x64005ba0
64003f21:	mov    BYTE PTR [ebp-0x4],0x2
64003f25:	cmp    DWORD PTR [ebp-0x10],edi
64003f28:	jb     0x64003f36
64003f2a:	mov    edx,DWORD PTR [ebp-0x24]
64003f2d:	push   edx
64003f2e:	call   0x64012612
64003f33:	add    esp,0x4
64003f36:	push   0x64027af8
64003f3b:	push   0x5
64003f3d:	push   0x64027b34
64003f42:	call   0x640057b0
64003f47:	mov    esi,eax
64003f49:	mov    ecx,esi
64003f4b:	add    esp,0xc
64003f4e:	mov    DWORD PTR [ebp-0x10],0xf
64003f55:	mov    DWORD PTR [ebp-0x14],ebx
64003f58:	mov    BYTE PTR [ebp-0x24],bl
64003f5b:	lea    edx,[ecx+0x1]
64003f5e:	mov    edi,edi
64003f60:	mov    al,BYTE PTR [ecx]
64003f62:	add    ecx,0x1
64003f65:	cmp    al,bl
64003f67:	jne    0x64003f60
64003f69:	sub    ecx,edx
64003f6b:	push   ecx
64003f6c:	push   esi
64003f6d:	lea    ecx,[ebp-0x28]
64003f70:	call   0x64001860
64003f75:	lea    eax,[ebp-0x28]
64003f78:	push   eax
64003f79:	lea    ecx,[ebp-0x40]
64003f7c:	push   ecx
64003f7d:	lea    edx,[ebp-0x34]
64003f80:	push   edx
64003f81:	mov    BYTE PTR [ebp-0x4],0x9
64003f85:	call   0x64005ba0
64003f8a:	mov    BYTE PTR [ebp-0x4],0x2
64003f8e:	cmp    DWORD PTR [ebp-0x10],edi
64003f91:	jb     0x64003f9f
64003f93:	mov    eax,DWORD PTR [ebp-0x24]
64003f96:	push   eax
64003f97:	call   0x64012612
64003f9c:	add    esp,0x4
64003f9f:	push   0x64027b3c
64003fa4:	push   0x8
64003fa6:	push   0x64027b6c
64003fab:	call   0x640057b0
64003fb0:	mov    esi,eax
64003fb2:	mov    ecx,esi
64003fb4:	add    esp,0xc
64003fb7:	mov    DWORD PTR [ebp-0x10],0xf
64003fbe:	mov    DWORD PTR [ebp-0x14],ebx
64003fc1:	mov    BYTE PTR [ebp-0x24],bl
64003fc4:	lea    edx,[ecx+0x1]
64003fc7:	mov    al,BYTE PTR [ecx]
64003fc9:	add    ecx,0x1
64003fcc:	cmp    al,bl
64003fce:	jne    0x64003fc7
64003fd0:	sub    ecx,edx
64003fd2:	push   ecx
64003fd3:	push   esi
64003fd4:	lea    ecx,[ebp-0x28]
64003fd7:	call   0x64001860
64003fdc:	lea    ecx,[ebp-0x28]
64003fdf:	push   ecx
64003fe0:	lea    edx,[ebp-0x40]
64003fe3:	push   edx
64003fe4:	lea    eax,[ebp-0x34]
64003fe7:	push   eax
64003fe8:	mov    BYTE PTR [ebp-0x4],0xa
64003fec:	call   0x64005ba0
64003ff1:	mov    BYTE PTR [ebp-0x4],0x2
64003ff5:	cmp    DWORD PTR [ebp-0x10],edi
64003ff8:	jb     0x64004006
64003ffa:	mov    ecx,DWORD PTR [ebp-0x24]
64003ffd:	push   ecx
64003ffe:	call   0x64012612
64004003:	add    esp,0x4
64004006:	push   0x64027b78
6400400b:	push   0xb
6400400d:	push   0x64027ba0
64004012:	call   0x640057b0
64004017:	mov    esi,eax
64004019:	mov    ecx,esi
6400401b:	add    esp,0xc
6400401e:	mov    DWORD PTR [ebp-0x10],0xf
64004025:	mov    DWORD PTR [ebp-0x14],ebx
64004028:	mov    BYTE PTR [ebp-0x24],bl
6400402b:	lea    edx,[ecx+0x1]
6400402e:	mov    edi,edi
64004030:	mov    al,BYTE PTR [ecx]
64004032:	add    ecx,0x1
64004035:	cmp    al,bl
64004037:	jne    0x64004030
64004039:	sub    ecx,edx
6400403b:	push   ecx
6400403c:	push   esi
6400403d:	lea    ecx,[ebp-0x28]
64004040:	call   0x64001860
64004045:	lea    edx,[ebp-0x28]
64004048:	push   edx
64004049:	lea    eax,[ebp-0x40]
6400404c:	push   eax
6400404d:	lea    ecx,[ebp-0x34]
64004050:	push   ecx
64004051:	mov    BYTE PTR [ebp-0x4],0xb
64004055:	call   0x64005ba0
6400405a:	mov    BYTE PTR [ebp-0x4],0x2
6400405e:	cmp    DWORD PTR [ebp-0x10],edi
64004061:	jb     0x6400406f
64004063:	mov    edx,DWORD PTR [ebp-0x24]
64004066:	push   edx
64004067:	call   0x64012612
6400406c:	add    esp,0x4
6400406f:	push   0x64027bac
64004074:	push   0x1e
64004076:	push   0x64027be0
6400407b:	call   0x640057b0
64004080:	mov    esi,eax
64004082:	mov    ecx,esi
64004084:	add    esp,0xc
64004087:	mov    DWORD PTR [ebp-0x10],0xf
6400408e:	mov    DWORD PTR [ebp-0x14],ebx
64004091:	mov    BYTE PTR [ebp-0x24],bl
64004094:	lea    edx,[ecx+0x1]
64004097:	mov    al,BYTE PTR [ecx]
64004099:	add    ecx,0x1
6400409c:	cmp    al,bl
6400409e:	jne    0x64004097
640040a0:	sub    ecx,edx
640040a2:	push   ecx
640040a3:	push   esi
640040a4:	lea    ecx,[ebp-0x28]
640040a7:	call   0x64001860
640040ac:	lea    eax,[ebp-0x28]
640040af:	push   eax
640040b0:	lea    ecx,[ebp-0x40]
640040b3:	push   ecx
640040b4:	lea    edx,[ebp-0x34]
640040b7:	push   edx
640040b8:	mov    BYTE PTR [ebp-0x4],0xc
640040bc:	call   0x64005ba0
640040c1:	mov    BYTE PTR [ebp-0x4],0x2
640040c5:	cmp    DWORD PTR [ebp-0x10],edi
640040c8:	jb     0x640040d6
640040ca:	mov    eax,DWORD PTR [ebp-0x24]
640040cd:	push   eax
640040ce:	call   0x64012612
640040d3:	add    esp,0x4
640040d6:	push   0x64027c00
640040db:	push   0x7
640040dd:	push   0x64027c2c
640040e2:	call   0x640057b0
640040e7:	mov    esi,eax
640040e9:	mov    ecx,esi
640040eb:	add    esp,0xc
640040ee:	mov    DWORD PTR [ebp-0x10],0xf
640040f5:	mov    DWORD PTR [ebp-0x14],ebx
640040f8:	mov    BYTE PTR [ebp-0x24],bl
640040fb:	lea    edx,[ecx+0x1]
640040fe:	mov    edi,edi
64004100:	mov    al,BYTE PTR [ecx]
64004102:	add    ecx,0x1
64004105:	cmp    al,bl
64004107:	jne    0x64004100
64004109:	sub    ecx,edx
6400410b:	push   ecx
6400410c:	push   esi
6400410d:	lea    ecx,[ebp-0x28]
64004110:	call   0x64001860
64004115:	lea    ecx,[ebp-0x28]
64004118:	push   ecx
64004119:	lea    edx,[ebp-0x40]
6400411c:	push   edx
6400411d:	lea    eax,[ebp-0x34]
64004120:	push   eax
64004121:	mov    BYTE PTR [ebp-0x4],0xd
64004125:	call   0x64005ba0
6400412a:	mov    BYTE PTR [ebp-0x4],0x2
6400412e:	cmp    DWORD PTR [ebp-0x10],edi
64004131:	jb     0x6400413f
64004133:	mov    ecx,DWORD PTR [ebp-0x24]
64004136:	push   ecx
64004137:	call   0x64012612
6400413c:	add    esp,0x4
6400413f:	push   0x64027c34
64004144:	push   0xc
64004146:	push   0x64027c6c
6400414b:	call   0x640057b0
64004150:	mov    esi,eax
64004152:	mov    ecx,esi
64004154:	add    esp,0xc
64004157:	mov    DWORD PTR [ebp-0x10],0xf
6400415e:	mov    DWORD PTR [ebp-0x14],ebx
64004161:	mov    BYTE PTR [ebp-0x24],bl
64004164:	lea    edx,[ecx+0x1]
64004167:	mov    al,BYTE PTR [ecx]
64004169:	add    ecx,0x1
6400416c:	cmp    al,bl
6400416e:	jne    0x64004167
64004170:	sub    ecx,edx
64004172:	push   ecx
64004173:	push   esi
64004174:	lea    ecx,[ebp-0x28]
64004177:	call   0x64001860
6400417c:	lea    edx,[ebp-0x28]
6400417f:	push   edx
64004180:	lea    eax,[ebp-0x40]
64004183:	push   eax
64004184:	lea    ecx,[ebp-0x34]
64004187:	push   ecx
64004188:	mov    BYTE PTR [ebp-0x4],0xe
6400418c:	call   0x64005ba0
64004191:	mov    BYTE PTR [ebp-0x4],0x2
64004195:	cmp    DWORD PTR [ebp-0x10],edi
64004198:	jb     0x640041a6
6400419a:	mov    edx,DWORD PTR [ebp-0x24]
6400419d:	push   edx
6400419e:	call   0x64012612
640041a3:	add    esp,0x4
640041a6:	push   0x64027c7c
640041ab:	push   0x11
640041ad:	push   0x64027cb8
640041b2:	call   0x640057b0
640041b7:	mov    esi,eax
640041b9:	mov    ecx,esi
640041bb:	add    esp,0xc
640041be:	mov    DWORD PTR [ebp-0x10],0xf
640041c5:	mov    DWORD PTR [ebp-0x14],ebx
640041c8:	mov    BYTE PTR [ebp-0x24],bl
640041cb:	lea    edx,[ecx+0x1]
640041ce:	mov    edi,edi
640041d0:	mov    al,BYTE PTR [ecx]
640041d2:	add    ecx,0x1
640041d5:	cmp    al,bl
640041d7:	jne    0x640041d0
640041d9:	sub    ecx,edx
640041db:	push   ecx
640041dc:	push   esi
640041dd:	lea    ecx,[ebp-0x28]
640041e0:	call   0x64001860
640041e5:	lea    eax,[ebp-0x28]
640041e8:	push   eax
640041e9:	lea    ecx,[ebp-0x40]
640041ec:	push   ecx
640041ed:	lea    edx,[ebp-0x34]
640041f0:	push   edx
640041f1:	mov    BYTE PTR [ebp-0x4],0xf
640041f5:	call   0x64005ba0
640041fa:	mov    BYTE PTR [ebp-0x4],0x2
640041fe:	cmp    DWORD PTR [ebp-0x10],edi
64004201:	jb     0x6400420f
64004203:	mov    eax,DWORD PTR [ebp-0x24]
64004206:	push   eax
64004207:	call   0x64012612
6400420c:	add    esp,0x4
6400420f:	push   0x64027ccc
64004214:	push   0x7
64004216:	push   0x64027d0c
6400421b:	call   0x640057b0
64004220:	mov    esi,eax
64004222:	mov    ecx,esi
64004224:	add    esp,0xc
64004227:	mov    DWORD PTR [ebp-0x10],0xf
6400422e:	mov    DWORD PTR [ebp-0x14],ebx
64004231:	mov    BYTE PTR [ebp-0x24],bl
64004234:	lea    edx,[ecx+0x1]
64004237:	mov    al,BYTE PTR [ecx]
64004239:	add    ecx,0x1
6400423c:	cmp    al,bl
6400423e:	jne    0x64004237
64004240:	sub    ecx,edx
64004242:	push   ecx
64004243:	push   esi
64004244:	lea    ecx,[ebp-0x28]
64004247:	call   0x64001860
6400424c:	lea    ecx,[ebp-0x28]
6400424f:	push   ecx
64004250:	lea    edx,[ebp-0x40]
64004253:	push   edx
64004254:	lea    eax,[ebp-0x34]
64004257:	push   eax
64004258:	mov    BYTE PTR [ebp-0x4],0x10
6400425c:	call   0x64005ba0
64004261:	mov    BYTE PTR [ebp-0x4],0x2
64004265:	cmp    DWORD PTR [ebp-0x10],edi
64004268:	jb     0x64004276
6400426a:	mov    ecx,DWORD PTR [ebp-0x24]
6400426d:	push   ecx
6400426e:	call   0x64012612
64004273:	add    esp,0x4
64004276:	push   0x64027d14
6400427b:	push   0x6
6400427d:	push   0x64027d4c
64004282:	call   0x640057b0
64004287:	mov    esi,eax
64004289:	mov    ecx,esi
6400428b:	add    esp,0xc
6400428e:	mov    DWORD PTR [ebp-0x10],0xf
64004295:	mov    DWORD PTR [ebp-0x14],ebx
64004298:	mov    BYTE PTR [ebp-0x24],bl
6400429b:	lea    edx,[ecx+0x1]
6400429e:	mov    edi,edi
640042a0:	mov    al,BYTE PTR [ecx]
640042a2:	add    ecx,0x1
640042a5:	cmp    al,bl
640042a7:	jne    0x640042a0
640042a9:	sub    ecx,edx
640042ab:	push   ecx
640042ac:	push   esi
640042ad:	lea    ecx,[ebp-0x28]
640042b0:	call   0x64001860
640042b5:	lea    edx,[ebp-0x28]
640042b8:	push   edx
640042b9:	lea    eax,[ebp-0x40]
640042bc:	push   eax
640042bd:	lea    ecx,[ebp-0x34]
640042c0:	push   ecx
640042c1:	mov    BYTE PTR [ebp-0x4],0x11
640042c5:	call   0x64005ba0
640042ca:	mov    BYTE PTR [ebp-0x4],0x2
640042ce:	cmp    DWORD PTR [ebp-0x10],edi
640042d1:	jb     0x640042df
640042d3:	mov    edx,DWORD PTR [ebp-0x24]
640042d6:	push   edx
640042d7:	call   0x64012612
640042dc:	add    esp,0x4
640042df:	push   0x64027d54
640042e4:	push   0x3
640042e6:	push   0x64027d80
640042eb:	call   0x640057b0
640042f0:	mov    esi,eax
640042f2:	mov    ecx,esi
640042f4:	add    esp,0xc
640042f7:	mov    DWORD PTR [ebp-0x10],0xf
640042fe:	mov    DWORD PTR [ebp-0x14],ebx
64004301:	mov    BYTE PTR [ebp-0x24],bl
64004304:	lea    edx,[ecx+0x1]
64004307:	mov    al,BYTE PTR [ecx]
64004309:	add    ecx,0x1
6400430c:	cmp    al,bl
6400430e:	jne    0x64004307
64004310:	sub    ecx,edx
64004312:	push   ecx
64004313:	push   esi
64004314:	lea    ecx,[ebp-0x28]
64004317:	call   0x64001860
6400431c:	lea    eax,[ebp-0x28]
6400431f:	push   eax
64004320:	lea    ecx,[ebp-0x40]
64004323:	push   ecx
64004324:	lea    edx,[ebp-0x34]
64004327:	push   edx
64004328:	mov    BYTE PTR [ebp-0x4],0x12
6400432c:	call   0x64005ba0
64004331:	mov    BYTE PTR [ebp-0x4],0x2
64004335:	cmp    DWORD PTR [ebp-0x10],edi
64004338:	jb     0x64004346
6400433a:	mov    eax,DWORD PTR [ebp-0x24]
6400433d:	push   eax
6400433e:	call   0x64012612
64004343:	add    esp,0x4
64004346:	push   0x64027d84
6400434b:	push   0x8
6400434d:	push   0x64027da8
64004352:	call   0x640057b0
64004357:	mov    esi,eax
64004359:	mov    ecx,esi
6400435b:	add    esp,0xc
6400435e:	mov    DWORD PTR [ebp-0x10],0xf
64004365:	mov    DWORD PTR [ebp-0x14],ebx
64004368:	mov    BYTE PTR [ebp-0x24],bl
6400436b:	lea    edx,[ecx+0x1]
6400436e:	mov    edi,edi
64004370:	mov    al,BYTE PTR [ecx]
64004372:	add    ecx,0x1
64004375:	cmp    al,bl
64004377:	jne    0x64004370
64004379:	sub    ecx,edx
6400437b:	push   ecx
6400437c:	push   esi
6400437d:	lea    ecx,[ebp-0x28]
64004380:	call   0x64001860
64004385:	lea    ecx,[ebp-0x28]
64004388:	push   ecx
64004389:	lea    edx,[ebp-0x40]
6400438c:	push   edx
6400438d:	lea    eax,[ebp-0x34]
64004390:	push   eax
64004391:	mov    BYTE PTR [ebp-0x4],0x13
64004395:	call   0x64005ba0
6400439a:	mov    BYTE PTR [ebp-0x4],0x2
6400439e:	cmp    DWORD PTR [ebp-0x10],edi
640043a1:	jb     0x640043af
640043a3:	mov    ecx,DWORD PTR [ebp-0x24]
640043a6:	push   ecx
640043a7:	call   0x64012612
640043ac:	add    esp,0x4
640043af:	push   0x64027db4
640043b4:	push   0xb
640043b6:	push   0x64027dec
640043bb:	call   0x640057b0
640043c0:	mov    esi,eax
640043c2:	mov    ecx,esi
640043c4:	add    esp,0xc
640043c7:	mov    DWORD PTR [ebp-0x10],0xf
640043ce:	mov    DWORD PTR [ebp-0x14],ebx
640043d1:	mov    BYTE PTR [ebp-0x24],bl
640043d4:	lea    edx,[ecx+0x1]
640043d7:	mov    al,BYTE PTR [ecx]
640043d9:	add    ecx,0x1
640043dc:	cmp    al,bl
640043de:	jne    0x640043d7
640043e0:	sub    ecx,edx
640043e2:	push   ecx
640043e3:	push   esi
640043e4:	lea    ecx,[ebp-0x28]
640043e7:	call   0x64001860
640043ec:	lea    edx,[ebp-0x28]
640043ef:	push   edx
640043f0:	lea    eax,[ebp-0x40]
640043f3:	push   eax
640043f4:	lea    ecx,[ebp-0x34]
640043f7:	push   ecx
640043f8:	mov    BYTE PTR [ebp-0x4],0x14
640043fc:	call   0x64005ba0
64004401:	mov    BYTE PTR [ebp-0x4],0x2
64004405:	cmp    DWORD PTR [ebp-0x10],edi
64004408:	jb     0x64004416
6400440a:	mov    edx,DWORD PTR [ebp-0x24]
6400440d:	push   edx
6400440e:	call   0x64012612
64004413:	add    esp,0x4
64004416:	push   0x64027df8
6400441b:	push   edi
6400441c:	push   0x64027e20
64004421:	call   0x640057b0
64004426:	mov    esi,eax
64004428:	mov    ecx,esi
6400442a:	add    esp,0xc
6400442d:	mov    DWORD PTR [ebp-0x10],0xf
64004434:	mov    DWORD PTR [ebp-0x14],ebx
64004437:	mov    BYTE PTR [ebp-0x24],bl
6400443a:	lea    edx,[ecx+0x1]
6400443d:	lea    ecx,[ecx+0x0]
64004440:	mov    al,BYTE PTR [ecx]
64004442:	add    ecx,0x1
64004445:	cmp    al,bl
64004447:	jne    0x64004440
64004449:	sub    ecx,edx
6400444b:	push   ecx
6400444c:	push   esi
6400444d:	lea    ecx,[ebp-0x28]
64004450:	call   0x64001860
64004455:	lea    eax,[ebp-0x28]
64004458:	push   eax
64004459:	lea    ecx,[ebp-0x40]
6400445c:	push   ecx
6400445d:	lea    edx,[ebp-0x34]
64004460:	push   edx
64004461:	mov    BYTE PTR [ebp-0x4],0x15
64004465:	call   0x64005ba0
6400446a:	mov    BYTE PTR [ebp-0x4],0x2
6400446e:	cmp    DWORD PTR [ebp-0x10],edi
64004471:	jb     0x6400447f
64004473:	mov    eax,DWORD PTR [ebp-0x24]
64004476:	push   eax
64004477:	call   0x64012612
6400447c:	add    esp,0x4
6400447f:	push   0x64027e34
64004484:	push   0x5
64004486:	push   0x64027e64
6400448b:	call   0x640057b0
64004490:	mov    esi,eax
64004492:	mov    ecx,esi
64004494:	add    esp,0xc
64004497:	mov    DWORD PTR [ebp-0x10],0xf
6400449e:	mov    DWORD PTR [ebp-0x14],ebx
640044a1:	mov    BYTE PTR [ebp-0x24],bl
640044a4:	lea    edx,[ecx+0x1]
640044a7:	mov    al,BYTE PTR [ecx]
640044a9:	add    ecx,0x1
640044ac:	cmp    al,bl
640044ae:	jne    0x640044a7
640044b0:	sub    ecx,edx
640044b2:	push   ecx
640044b3:	push   esi
640044b4:	lea    ecx,[ebp-0x28]
640044b7:	call   0x64001860
640044bc:	lea    ecx,[ebp-0x28]
640044bf:	push   ecx
640044c0:	lea    edx,[ebp-0x40]
640044c3:	push   edx
640044c4:	lea    eax,[ebp-0x34]
640044c7:	push   eax
640044c8:	mov    BYTE PTR [ebp-0x4],0x16
640044cc:	call   0x64005ba0
640044d1:	mov    BYTE PTR [ebp-0x4],0x2
640044d5:	cmp    DWORD PTR [ebp-0x10],edi
640044d8:	jb     0x640044e6
640044da:	mov    ecx,DWORD PTR [ebp-0x24]
640044dd:	push   ecx
640044de:	call   0x64012612
640044e3:	add    esp,0x4
640044e6:	push   0x64027e6c
640044eb:	push   0x5
640044ed:	push   0x64027ea4
640044f2:	call   0x640057b0
640044f7:	mov    esi,eax
640044f9:	mov    ecx,esi
640044fb:	add    esp,0xc
640044fe:	mov    DWORD PTR [ebp-0x10],0xf
64004505:	mov    DWORD PTR [ebp-0x14],ebx
64004508:	mov    BYTE PTR [ebp-0x24],bl
6400450b:	lea    edx,[ecx+0x1]
6400450e:	mov    edi,edi
64004510:	mov    al,BYTE PTR [ecx]
64004512:	add    ecx,0x1
64004515:	cmp    al,bl
64004517:	jne    0x64004510
64004519:	sub    ecx,edx
6400451b:	push   ecx
6400451c:	push   esi
6400451d:	lea    ecx,[ebp-0x28]
64004520:	call   0x64001860
64004525:	lea    edx,[ebp-0x28]
64004528:	push   edx
64004529:	lea    eax,[ebp-0x40]
6400452c:	push   eax
6400452d:	lea    ecx,[ebp-0x34]
64004530:	push   ecx
64004531:	mov    BYTE PTR [ebp-0x4],0x17
64004535:	call   0x64005ba0
6400453a:	mov    BYTE PTR [ebp-0x4],0x2
6400453e:	cmp    DWORD PTR [ebp-0x10],edi
64004541:	jb     0x6400454f
64004543:	mov    edx,DWORD PTR [ebp-0x24]
64004546:	push   edx
64004547:	call   0x64012612
6400454c:	add    esp,0x4
6400454f:	push   0x64027eb0
64004554:	push   0x8
64004556:	push   0x64027ef0
6400455b:	call   0x640057b0
64004560:	mov    esi,eax
64004562:	mov    ecx,esi
64004564:	add    esp,0xc
64004567:	mov    DWORD PTR [ebp-0x10],0xf
6400456e:	mov    DWORD PTR [ebp-0x14],ebx
64004571:	mov    BYTE PTR [ebp-0x24],bl
64004574:	lea    edx,[ecx+0x1]
64004577:	mov    al,BYTE PTR [ecx]
64004579:	add    ecx,0x1
6400457c:	cmp    al,bl
6400457e:	jne    0x64004577
64004580:	sub    ecx,edx
64004582:	push   ecx
64004583:	push   esi
64004584:	lea    ecx,[ebp-0x28]
64004587:	call   0x64001860
6400458c:	lea    eax,[ebp-0x28]
6400458f:	push   eax
64004590:	lea    ecx,[ebp-0x40]
64004593:	push   ecx
64004594:	lea    edx,[ebp-0x34]
64004597:	push   edx
64004598:	mov    BYTE PTR [ebp-0x4],0x18
6400459c:	call   0x64005ba0
640045a1:	mov    BYTE PTR [ebp-0x4],0x2
640045a5:	cmp    DWORD PTR [ebp-0x10],edi
640045a8:	jb     0x640045b6
640045aa:	mov    eax,DWORD PTR [ebp-0x24]
640045ad:	push   eax
640045ae:	call   0x64012612
640045b3:	add    esp,0x4
640045b6:	push   0x64027efc
640045bb:	push   0x8
640045bd:	push   0x64027f28
640045c2:	call   0x640057b0
640045c7:	add    esp,0xc
640045ca:	push   eax
640045cb:	lea    ecx,[ebp+0x0]
640045ce:	call   0x64002720
640045d3:	lea    ecx,[ebp+0x0]
640045d6:	push   ecx
640045d7:	lea    edx,[ebp-0x40]
640045da:	push   edx
640045db:	lea    eax,[ebp-0x34]
640045de:	push   eax
640045df:	mov    BYTE PTR [ebp-0x4],0x19
640045e3:	call   0x64005ba0
640045e8:	mov    BYTE PTR [ebp-0x4],0x2
640045ec:	cmp    DWORD PTR [ebp+0x18],edi
640045ef:	jb     0x640045fd
640045f1:	mov    ecx,DWORD PTR [ebp+0x4]
640045f4:	push   ecx
640045f5:	call   0x64012612
640045fa:	add    esp,0x4
640045fd:	push   0x64027f34
64004602:	push   0x4
64004604:	push   0x64027f6c
64004609:	call   0x640057b0
6400460e:	add    esp,0xc
64004611:	push   eax
64004612:	lea    ecx,[ebp+0x0]
64004615:	call   0x64002720
6400461a:	lea    edx,[ebp+0x0]
6400461d:	push   edx
6400461e:	lea    eax,[ebp-0x40]
64004621:	push   eax
64004622:	lea    ecx,[ebp-0x34]
64004625:	push   ecx
64004626:	mov    BYTE PTR [ebp-0x4],0x1a
6400462a:	call   0x64005ba0
6400462f:	mov    BYTE PTR [ebp-0x4],0x2
64004633:	cmp    DWORD PTR [ebp+0x18],edi
64004636:	jb     0x64004644
64004638:	mov    edx,DWORD PTR [ebp+0x4]
6400463b:	push   edx
6400463c:	call   0x64012612
64004641:	add    esp,0x4
64004644:	push   0x64027f74
64004649:	push   0xc
6400464b:	push   0x64027f98
64004650:	call   0x640057b0
64004655:	add    esp,0xc
64004658:	push   eax
64004659:	lea    ecx,[ebp+0x0]
6400465c:	call   0x64002720
64004661:	lea    eax,[ebp+0x0]
64004664:	push   eax
64004665:	lea    ecx,[ebp-0x40]
64004668:	push   ecx
64004669:	lea    edx,[ebp-0x34]
6400466c:	push   edx
6400466d:	mov    BYTE PTR [ebp-0x4],0x1b
64004671:	call   0x64005ba0
64004676:	mov    BYTE PTR [ebp-0x4],0x2
6400467a:	cmp    DWORD PTR [ebp+0x18],edi
6400467d:	jb     0x6400468b
6400467f:	mov    eax,DWORD PTR [ebp+0x4]
64004682:	push   eax
64004683:	call   0x64012612
64004688:	add    esp,0x4
6400468b:	push   0x64027fa8
64004690:	push   edi
64004691:	push   0x64027fd0
64004696:	call   0x640057b0
6400469b:	add    esp,0xc
6400469e:	push   eax
6400469f:	lea    ecx,[ebp+0x0]
640046a2:	call   0x64002720
640046a7:	lea    ecx,[ebp+0x0]
640046aa:	push   ecx
640046ab:	lea    edx,[ebp-0x40]
640046ae:	push   edx
640046af:	lea    eax,[ebp-0x34]
640046b2:	push   eax
640046b3:	mov    BYTE PTR [ebp-0x4],0x1c
640046b7:	call   0x64005ba0
640046bc:	mov    BYTE PTR [ebp-0x4],0x2
640046c0:	cmp    DWORD PTR [ebp+0x18],edi
640046c3:	jb     0x640046d1
640046c5:	mov    ecx,DWORD PTR [ebp+0x4]
640046c8:	push   ecx
640046c9:	call   0x64012612
640046ce:	add    esp,0x4
640046d1:	push   0x64027fe4
640046d6:	push   0x7
640046d8:	push   0x64028024
640046dd:	call   0x640057b0
640046e2:	add    esp,0xc
640046e5:	push   eax
640046e6:	lea    ecx,[ebp+0x0]
640046e9:	call   0x64002720
640046ee:	lea    edx,[ebp+0x0]
640046f1:	push   edx
640046f2:	lea    eax,[ebp-0x40]
640046f5:	push   eax
640046f6:	lea    ecx,[ebp-0x34]
640046f9:	push   ecx
640046fa:	mov    BYTE PTR [ebp-0x4],0x1d
640046fe:	call   0x64005ba0
64004703:	mov    BYTE PTR [ebp-0x4],0x2
64004707:	cmp    DWORD PTR [ebp+0x18],edi
6400470a:	jb     0x64004718
6400470c:	mov    edx,DWORD PTR [ebp+0x4]
6400470f:	push   edx
64004710:	call   0x64012612
64004715:	add    esp,0x4
64004718:	push   0x6402802c
6400471d:	push   0x9
6400471f:	push   0x64028060
64004724:	call   0x640057b0
64004729:	add    esp,0xc
6400472c:	push   eax
6400472d:	lea    ecx,[ebp+0x0]
64004730:	call   0x64002720
64004735:	lea    eax,[ebp+0x0]
64004738:	push   eax
64004739:	lea    ecx,[ebp-0x40]
6400473c:	push   ecx
6400473d:	lea    edx,[ebp-0x34]
64004740:	push   edx
64004741:	mov    BYTE PTR [ebp-0x4],0x1e
64004745:	call   0x64005ba0
6400474a:	mov    BYTE PTR [ebp-0x4],0x2
6400474e:	cmp    DWORD PTR [ebp+0x18],edi
64004751:	jb     0x6400475f
64004753:	mov    eax,DWORD PTR [ebp+0x4]
64004756:	push   eax
64004757:	call   0x64012612
6400475c:	add    esp,0x4
6400475f:	push   0x6402806c
64004764:	push   0x7
64004766:	push   0x64028098
6400476b:	call   0x640057b0
64004770:	add    esp,0xc
64004773:	push   eax
64004774:	lea    ecx,[ebp+0x0]
64004777:	call   0x64002720
6400477c:	lea    ecx,[ebp+0x0]
6400477f:	push   ecx
64004780:	lea    edx,[ebp-0x40]
64004783:	push   edx
64004784:	lea    eax,[ebp-0x34]
64004787:	push   eax
64004788:	mov    BYTE PTR [ebp-0x4],0x1f
6400478c:	call   0x64005ba0
64004791:	mov    BYTE PTR [ebp-0x4],0x2
64004795:	cmp    DWORD PTR [ebp+0x18],edi
64004798:	jb     0x640047a6
6400479a:	mov    ecx,DWORD PTR [ebp+0x4]
6400479d:	push   ecx
6400479e:	call   0x64012612
640047a3:	add    esp,0x4
640047a6:	push   0x640280a0
640047ab:	push   0xb
640047ad:	push   0x640280c8
640047b2:	call   0x640057b0
640047b7:	add    esp,0xc
640047ba:	push   eax
640047bb:	lea    ecx,[ebp+0x0]
640047be:	call   0x64002720
640047c3:	lea    edx,[ebp+0x0]
640047c6:	push   edx
640047c7:	lea    eax,[ebp-0x40]
640047ca:	push   eax
640047cb:	lea    ecx,[ebp-0x34]
640047ce:	push   ecx
640047cf:	mov    BYTE PTR [ebp-0x4],0x20
640047d3:	call   0x64005ba0
640047d8:	mov    BYTE PTR [ebp-0x4],0x2
640047dc:	cmp    DWORD PTR [ebp+0x18],edi
640047df:	jb     0x640047ed
640047e1:	mov    edx,DWORD PTR [ebp+0x4]
640047e4:	push   edx
640047e5:	call   0x64012612
640047ea:	add    esp,0x4
640047ed:	push   0x640280d4
640047f2:	push   0x6
640047f4:	push   0x640280fc
640047f9:	call   0x640057b0
640047fe:	add    esp,0xc
64004801:	push   eax
64004802:	lea    ecx,[ebp+0x0]
64004805:	call   0x64002720
6400480a:	lea    eax,[ebp+0x0]
6400480d:	push   eax
6400480e:	lea    ecx,[ebp-0x40]
64004811:	push   ecx
64004812:	lea    edx,[ebp-0x34]
64004815:	push   edx
64004816:	mov    BYTE PTR [ebp-0x4],0x21
6400481a:	call   0x64005ba0
6400481f:	mov    BYTE PTR [ebp-0x4],0x2
64004823:	cmp    DWORD PTR [ebp+0x18],edi
64004826:	jb     0x64004834
64004828:	mov    eax,DWORD PTR [ebp+0x4]
6400482b:	push   eax
6400482c:	call   0x64012612
64004831:	add    esp,0x4
64004834:	push   0x64028104
64004839:	push   0x6
6400483b:	push   0x64028144
64004840:	call   0x640057b0
64004845:	add    esp,0xc
64004848:	push   eax
64004849:	lea    ecx,[ebp+0x0]
6400484c:	call   0x64002720
64004851:	lea    ecx,[ebp+0x0]
64004854:	push   ecx
64004855:	lea    edx,[ebp-0x40]
64004858:	push   edx
64004859:	lea    eax,[ebp-0x34]
6400485c:	push   eax
6400485d:	mov    BYTE PTR [ebp-0x4],0x22
64004861:	call   0x64005ba0
64004866:	mov    BYTE PTR [ebp-0x4],0x2
6400486a:	cmp    DWORD PTR [ebp+0x18],edi
6400486d:	jb     0x6400487b
6400486f:	mov    ecx,DWORD PTR [ebp+0x4]
64004872:	push   ecx
64004873:	call   0x64012612
64004878:	add    esp,0x4
6400487b:	push   0x6402814c
64004880:	push   0x7
64004882:	push   0x64028170
64004887:	call   0x640057b0
6400488c:	add    esp,0xc
6400488f:	push   eax
64004890:	lea    ecx,[ebp+0x0]
64004893:	call   0x64002720
64004898:	lea    edx,[ebp+0x0]
6400489b:	push   edx
6400489c:	lea    eax,[ebp-0x40]
6400489f:	push   eax
640048a0:	lea    ecx,[ebp-0x34]
640048a3:	push   ecx
640048a4:	mov    BYTE PTR [ebp-0x4],0x23
640048a8:	call   0x64005ba0
640048ad:	mov    BYTE PTR [ebp-0x4],0x2
640048b1:	cmp    DWORD PTR [ebp+0x18],edi
640048b4:	jb     0x640048c2
640048b6:	mov    edx,DWORD PTR [ebp+0x4]
640048b9:	push   edx
640048ba:	call   0x64012612
640048bf:	add    esp,0x4
640048c2:	push   0x64028178
640048c7:	push   0x9
640048c9:	push   0x640281b0
640048ce:	call   0x640057b0
640048d3:	add    esp,0xc
640048d6:	push   eax
640048d7:	lea    ecx,[ebp+0x0]
640048da:	call   0x64002720
640048df:	lea    eax,[ebp+0x0]
640048e2:	push   eax
640048e3:	lea    ecx,[ebp-0x40]
640048e6:	push   ecx
640048e7:	lea    edx,[ebp-0x34]
640048ea:	push   edx
640048eb:	mov    BYTE PTR [ebp-0x4],0x24
640048ef:	call   0x64005ba0
640048f4:	mov    BYTE PTR [ebp-0x4],0x2
640048f8:	cmp    DWORD PTR [ebp+0x18],edi
640048fb:	jb     0x64004909
640048fd:	mov    eax,DWORD PTR [ebp+0x4]
64004900:	push   eax
64004901:	call   0x64012612
64004906:	add    esp,0x4
64004909:	push   0x640281bc
6400490e:	push   0x7
64004910:	push   0x640281e4
64004915:	call   0x640057b0
6400491a:	add    esp,0xc
6400491d:	push   eax
6400491e:	lea    ecx,[ebp+0x0]
64004921:	call   0x64002720
64004926:	lea    ecx,[ebp+0x0]
64004929:	push   ecx
6400492a:	lea    edx,[ebp-0x40]
6400492d:	push   edx
6400492e:	lea    eax,[ebp-0x34]
64004931:	push   eax
64004932:	mov    BYTE PTR [ebp-0x4],0x25
64004936:	call   0x64005ba0
6400493b:	mov    BYTE PTR [ebp-0x4],0x2
6400493f:	cmp    DWORD PTR [ebp+0x18],edi
64004942:	jb     0x64004950
64004944:	mov    ecx,DWORD PTR [ebp+0x4]
64004947:	push   ecx
64004948:	call   0x64012612
6400494d:	add    esp,0x4
64004950:	push   0x640281ec
64004955:	push   0x6
64004957:	push   0x6402821c
6400495c:	call   0x640057b0
64004961:	add    esp,0xc
64004964:	push   eax
64004965:	lea    ecx,[ebp+0x0]
64004968:	call   0x64002720
6400496d:	lea    edx,[ebp+0x0]
64004970:	push   edx
64004971:	lea    eax,[ebp-0x40]
64004974:	push   eax
64004975:	lea    ecx,[ebp-0x34]
64004978:	push   ecx
64004979:	mov    BYTE PTR [ebp-0x4],0x26
6400497d:	call   0x64005ba0
64004982:	mov    BYTE PTR [ebp-0x4],0x2
64004986:	cmp    DWORD PTR [ebp+0x18],edi
64004989:	jb     0x64004997
6400498b:	mov    edx,DWORD PTR [ebp+0x4]
6400498e:	push   edx
6400498f:	call   0x64012612
64004994:	add    esp,0x4
64004997:	push   0x64028224
6400499c:	push   0x8
6400499e:	push   0x6402824c
640049a3:	call   0x640057b0
640049a8:	add    esp,0xc
640049ab:	push   eax
640049ac:	lea    ecx,[ebp+0x0]
640049af:	call   0x64002720
640049b4:	lea    eax,[ebp+0x0]
640049b7:	push   eax
640049b8:	lea    ecx,[ebp-0x40]
640049bb:	push   ecx
640049bc:	lea    edx,[ebp-0x34]
640049bf:	push   edx
640049c0:	mov    BYTE PTR [ebp-0x4],0x27
640049c4:	call   0x64005ba0
640049c9:	mov    BYTE PTR [ebp-0x4],0x2
640049cd:	cmp    DWORD PTR [ebp+0x18],edi
640049d0:	jb     0x640049de
640049d2:	mov    eax,DWORD PTR [ebp+0x4]
640049d5:	push   eax
640049d6:	call   0x64012612
640049db:	add    esp,0x4
640049de:	push   0x64028258
640049e3:	push   0x6
640049e5:	push   0x64028284
640049ea:	call   0x640057b0
640049ef:	add    esp,0xc
640049f2:	push   eax
640049f3:	lea    ecx,[ebp+0x0]
640049f6:	call   0x64002720
640049fb:	lea    ecx,[ebp+0x0]
640049fe:	push   ecx
640049ff:	lea    edx,[ebp-0x40]
64004a02:	push   edx
64004a03:	lea    eax,[ebp-0x34]
64004a06:	push   eax
64004a07:	mov    BYTE PTR [ebp-0x4],0x28
64004a0b:	call   0x64005ba0
64004a10:	mov    BYTE PTR [ebp-0x4],0x2
64004a14:	cmp    DWORD PTR [ebp+0x18],edi
64004a17:	jb     0x64004a25
64004a19:	mov    ecx,DWORD PTR [ebp+0x4]
64004a1c:	push   ecx
64004a1d:	call   0x64012612
64004a22:	add    esp,0x4
64004a25:	mov    edx,DWORD PTR [ebp-0x30]
64004a28:	mov    eax,DWORD PTR [edx]
64004a2a:	lea    ecx,[ebp-0x34]
64004a2d:	mov    edi,ecx
64004a2f:	mov    DWORD PTR [ebp-0x3c],edi
64004a32:	mov    DWORD PTR [ebp-0x38],eax
64004a35:	cmp    edi,ebx
64004a37:	mov    esi,DWORD PTR [ebp-0x30]
64004a3a:	je     0x64004a43
64004a3c:	lea    eax,[ebp-0x34]
64004a3f:	cmp    edi,eax
64004a41:	je     0x64004a48
64004a43:	call   0x640129c8
64004a48:	cmp    DWORD PTR [ebp-0x38],esi
64004a4b:	je     0x64004b4c
64004a51:	cmp    edi,ebx
64004a53:	jne    0x64004a5a
64004a55:	call   0x640129c8
64004a5a:	mov    ecx,DWORD PTR [ebp-0x38]
64004a5d:	cmp    ecx,DWORD PTR [edi+0x4]
64004a60:	jne    0x64004a67
64004a62:	call   0x640129c8
64004a67:	mov    esi,DWORD PTR [ebp-0x38]
64004a6a:	add    esi,0xc
64004a6d:	cmp    DWORD PTR [esi+0x18],0x10
64004a71:	jb     0x64004a78
64004a73:	mov    ecx,DWORD PTR [esi+0x4]
64004a76:	jmp    0x64004a7b
64004a78:	lea    ecx,[esi+0x4]
64004a7b:	lea    edx,[ebp+0x41c]
64004a81:	mov    al,BYTE PTR [ecx]
64004a83:	mov    BYTE PTR [edx],al
64004a85:	add    ecx,0x1
64004a88:	add    edx,0x1
64004a8b:	cmp    al,bl
64004a8d:	jne    0x64004a81
64004a8f:	mov    edx,DWORD PTR [ebp-0x38]
64004a92:	cmp    edx,DWORD PTR [edi+0x4]
64004a95:	jne    0x64004a9c
64004a97:	call   0x640129c8
64004a9c:	push   0xffffffff
64004a9e:	push   ebx
64004a9f:	mov    edi,0xf
64004aa4:	push   esi
64004aa5:	lea    ecx,[ebp+0x0]
64004aa8:	mov    DWORD PTR [ebp+0x18],edi
64004aab:	mov    DWORD PTR [ebp+0x14],ebx
64004aae:	mov    BYTE PTR [ebp+0x4],bl
64004ab1:	call   0x64001780
64004ab6:	lea    eax,[ebp+0x41c]
64004abc:	push   eax
64004abd:	mov    BYTE PTR [ebp-0x4],0x29
64004ac1:	call   0x6401f295
64004ac6:	lea    eax,[ebp+0x41c]
64004acc:	add    esp,0x4
64004acf:	mov    DWORD PTR [ebp-0x10],edi
64004ad2:	mov    DWORD PTR [ebp-0x14],ebx
64004ad5:	mov    BYTE PTR [ebp-0x24],bl
64004ad8:	lea    edx,[eax+0x1]
64004adb:	jmp    0x64004ae0
64004add:	lea    ecx,[ecx+0x0]
64004ae0:	mov    cl,BYTE PTR [eax]
64004ae2:	add    eax,0x1
64004ae5:	cmp    cl,bl
64004ae7:	jne    0x64004ae0
64004ae9:	sub    eax,edx
64004aeb:	push   eax
64004aec:	lea    ecx,[ebp+0x41c]
64004af2:	push   ecx
64004af3:	lea    ecx,[ebp-0x28]
64004af6:	call   0x64001860
64004afb:	lea    edx,[ebp-0x28]
64004afe:	push   edx
64004aff:	lea    eax,[ebp-0x50]
64004b02:	push   eax
64004b03:	push   0x6403134c
64004b08:	mov    BYTE PTR [ebp-0x4],0x2a
64004b0c:	call   0x64005ba0
64004b11:	mov    esi,0x10
64004b16:	cmp    DWORD PTR [ebp-0x10],esi
64004b19:	jb     0x64004b27
64004b1b:	mov    ecx,DWORD PTR [ebp-0x24]
64004b1e:	push   ecx
64004b1f:	call   0x64012612
64004b24:	add    esp,0x4
64004b27:	mov    BYTE PTR [ebp-0x4],0x2
64004b2b:	cmp    DWORD PTR [ebp+0x18],esi
64004b2e:	jb     0x64004b3c
64004b30:	mov    edx,DWORD PTR [ebp+0x4]
64004b33:	push   edx
64004b34:	call   0x64012612
64004b39:	add    esp,0x4
64004b3c:	lea    esi,[ebp-0x3c]
64004b3f:	call   0x64006460
64004b44:	mov    edi,DWORD PTR [ebp-0x3c]
64004b47:	jmp    0x64004a35
64004b4c:	lea    eax,[ebp-0x34]
64004b4f:	call   0x64005d90
64004b54:	lea    eax,[ebp-0x34]
64004b57:	mov    BYTE PTR [ebp-0x4],bl
64004b5a:	call   0x640063e0
64004b5f:	call   DWORD PTR ds:0x6402d06c
64004b65:	mov    edi,eax
64004b67:	mov    eax,DWORD PTR [ebp+0x828]
64004b6d:	cmp    DWORD PTR [eax-0x4],0x1
64004b71:	jle    0x64004b88
64004b73:	mov    eax,DWORD PTR [eax-0xc]
64004b76:	push   eax
64004b77:	lea    ecx,[ebp+0x828]
64004b7d:	call   0x64001950
64004b82:	mov    eax,DWORD PTR [ebp+0x828]
64004b88:	cmp    eax,ebx
64004b8a:	jne    0x64004b90
64004b8c:	xor    eax,eax
64004b8e:	jmp    0x64004bc0
64004b90:	push   eax
64004b91:	call   DWORD PTR ds:0x64025054
64004b97:	add    eax,0x1
64004b9a:	cmp    eax,0x3fffffff
64004b9f:	jle    0x64004ba5
64004ba1:	xor    eax,eax
64004ba3:	jmp    0x64004bc0
64004ba5:	lea    esi,[eax+eax*1]
64004ba8:	mov    eax,esi
64004baa:	call   0x640135f0
64004baf:	mov    ecx,DWORD PTR [ebp+0x828]
64004bb5:	mov    eax,esp
64004bb7:	push   edi
64004bb8:	push   esi
64004bb9:	push   ecx
64004bba:	push   eax
64004bbb:	call   0x64002b90
64004bc0:	lea    edx,[ebp+0x1c]
64004bc3:	mov    cl,BYTE PTR [eax]
64004bc5:	mov    BYTE PTR [edx],cl
64004bc7:	add    eax,0x1
64004bca:	add    edx,0x1
64004bcd:	cmp    cl,bl
64004bcf:	jne    0x64004bc3
64004bd1:	lea    eax,[ebp+0x1c]
64004bd4:	mov    DWORD PTR [ebp-0x10],0xf
64004bdb:	mov    DWORD PTR [ebp-0x14],ebx
64004bde:	mov    BYTE PTR [ebp-0x24],bl
64004be1:	lea    edx,[eax+0x1]
64004be4:	mov    cl,BYTE PTR [eax]
64004be6:	add    eax,0x1
64004be9:	cmp    cl,bl
64004beb:	jne    0x64004be4
64004bed:	sub    eax,edx
64004bef:	push   eax
64004bf0:	lea    edx,[ebp+0x1c]
64004bf3:	push   edx
64004bf4:	lea    ecx,[ebp-0x28]
64004bf7:	call   0x64001860
64004bfc:	lea    eax,[ebp-0x28]
64004bff:	mov    esi,0x6403134c
64004c04:	mov    BYTE PTR [ebp-0x4],0x2b
64004c08:	call   0x64005d30
64004c0d:	test   eax,eax
64004c0f:	setne  BYTE PTR [ebp-0x41]
64004c13:	cmp    DWORD PTR [ebp-0x10],0x10
64004c17:	jb     0x64004c25
64004c19:	mov    eax,DWORD PTR [ebp-0x24]
64004c1c:	push   eax
64004c1d:	call   0x64012612
64004c22:	add    esp,0x4
64004c25:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004c2c:	mov    eax,DWORD PTR [ebp+0x828]
64004c32:	add    eax,0xfffffff0
64004c35:	mov    DWORD PTR [ebp-0x10],0xf
64004c3c:	mov    DWORD PTR [ebp-0x14],ebx
64004c3f:	mov    BYTE PTR [ebp-0x24],bl
64004c42:	lea    ecx,[eax+0xc]
64004c45:	or     edx,0xffffffff
64004c48:	lock xadd DWORD PTR [ecx],edx
64004c4c:	dec    edx
64004c4d:	test   edx,edx
64004c4f:	jg     0x64004c5b
64004c51:	mov    ecx,DWORD PTR [eax]
64004c53:	mov    edx,DWORD PTR [ecx]
64004c55:	push   eax
64004c56:	mov    eax,DWORD PTR [edx+0x4]
64004c59:	call   eax
64004c5b:	mov    al,BYTE PTR [ebp-0x41]
64004c5e:	lea    esp,[ebp-0x60]
64004c61:	mov    ecx,DWORD PTR [ebp-0xc]
64004c64:	mov    DWORD PTR fs:0x0,ecx
64004c6b:	pop    ecx
64004c6c:	pop    edi
64004c6d:	pop    esi
64004c6e:	pop    ebx
64004c6f:	mov    ecx,DWORD PTR [ebp+0x81c]
64004c75:	xor    ecx,ebp
64004c77:	call   0x64012e6c
64004c7c:	add    ebp,0x820
64004c82:	mov    esp,ebp
64004c84:	pop    ebp
64004c85:	ret    
64004c86:	int3   
64004c87:	int3   
64004c88:	int3   
64004c89:	int3   
64004c8a:	int3   
64004c8b:	int3   
64004c8c:	int3   
64004c8d:	int3   
64004c8e:	int3   
64004c8f:	int3   
64004c90:	jmp    0x640063e0
64004c95:	int3   
64004c96:	int3   
64004c97:	int3   
64004c98:	int3   
64004c99:	int3   
64004c9a:	int3   
64004c9b:	int3   
64004c9c:	int3   
64004c9d:	int3   
64004c9e:	int3   
64004c9f:	int3   
64004ca0:	push   ebp
64004ca1:	lea    ebp,[esp-0x820]
64004ca8:	sub    esp,0x820
64004cae:	push   0xffffffff
64004cb0:	push   0x64023ae1
64004cb5:	mov    eax,fs:0x0
64004cbb:	push   eax
64004cbc:	sub    esp,0x44
64004cbf:	mov    eax,ds:0x6402d09c
64004cc4:	xor    eax,ebp
64004cc6:	mov    DWORD PTR [ebp+0x81c],eax
64004ccc:	push   ebx
64004ccd:	push   esi
64004cce:	push   edi
64004ccf:	push   eax
64004cd0:	lea    eax,[ebp-0xc]
64004cd3:	mov    fs:0x0,eax
64004cd9:	xor    ebx,ebx
64004cdb:	mov    DWORD PTR [ebp-0x4],ebx
64004cde:	test   BYTE PTR ds:0x640314ac,0x1
64004ce5:	jne    0x64004d2d
64004ce7:	or     DWORD PTR ds:0x640314ac,0x1
64004cee:	mov    BYTE PTR [ebp-0x4],0x1
64004cf2:	call   0x640077a0
64004cf7:	mov    ds:0x640314a4,eax
64004cfc:	mov    BYTE PTR [eax+0x29],0x1
64004d00:	mov    eax,ds:0x640314a4
64004d05:	mov    DWORD PTR [eax+0x4],eax
64004d08:	mov    eax,ds:0x640314a4
64004d0d:	mov    DWORD PTR [eax],eax
64004d0f:	mov    eax,ds:0x640314a4
64004d14:	mov    DWORD PTR [eax+0x8],eax
64004d17:	push   0x640242a0
64004d1c:	mov    DWORD PTR ds:0x640314a8,ebx
64004d22:	call   0x64012f9f
64004d27:	add    esp,0x4
64004d2a:	mov    BYTE PTR [ebp-0x4],bl
64004d2d:	cmp    DWORD PTR ds:0x640314a8,ebx
64004d33:	jne    0x64004ef7
64004d39:	call   0x640077a0
64004d3e:	mov    DWORD PTR [ebp-0x18],eax
64004d41:	mov    BYTE PTR [eax+0x29],0x1
64004d45:	mov    eax,DWORD PTR [ebp-0x18]
64004d48:	mov    DWORD PTR [eax+0x4],eax
64004d4b:	mov    eax,DWORD PTR [ebp-0x18]
64004d4e:	mov    DWORD PTR [eax],eax
64004d50:	mov    eax,DWORD PTR [ebp-0x18]
64004d53:	mov    DWORD PTR [eax+0x8],eax
64004d56:	mov    DWORD PTR [ebp-0x14],ebx
64004d59:	push   0x6402828c
64004d5e:	push   0xd
64004d60:	push   0x640282c8
64004d65:	mov    BYTE PTR [ebp-0x4],0x2
64004d69:	call   0x640057b0
64004d6e:	mov    ecx,eax
64004d70:	add    esp,0xc
64004d73:	mov    DWORD PTR [ebp-0x2c],0xf
64004d7a:	mov    DWORD PTR [ebp-0x30],ebx
64004d7d:	mov    BYTE PTR [ebp-0x40],bl
64004d80:	lea    esi,[ecx+0x1]
64004d83:	mov    dl,BYTE PTR [ecx]
64004d85:	add    ecx,0x1
64004d88:	cmp    dl,bl
64004d8a:	jne    0x64004d83
64004d8c:	sub    ecx,esi
64004d8e:	push   ecx
64004d8f:	push   eax
64004d90:	lea    ecx,[ebp-0x44]
64004d93:	call   0x64001860
64004d98:	lea    eax,[ebp-0x44]
64004d9b:	push   eax
64004d9c:	lea    ecx,[ebp-0x28]
64004d9f:	push   ecx
64004da0:	lea    edx,[ebp-0x1c]
64004da3:	push   edx
64004da4:	mov    BYTE PTR [ebp-0x4],0x3
64004da8:	call   0x64005ba0
64004dad:	mov    BYTE PTR [ebp-0x4],0x2
64004db1:	cmp    DWORD PTR [ebp-0x2c],0x10
64004db5:	jb     0x64004dc3
64004db7:	mov    eax,DWORD PTR [ebp-0x40]
64004dba:	push   eax
64004dbb:	call   0x64012612
64004dc0:	add    esp,0x4
64004dc3:	mov    ecx,DWORD PTR [ebp-0x18]
64004dc6:	mov    eax,DWORD PTR [ecx]
64004dc8:	lea    ecx,[ebp-0x1c]
64004dcb:	mov    edi,ecx
64004dcd:	mov    DWORD PTR [ebp-0x24],edi
64004dd0:	mov    DWORD PTR [ebp-0x20],eax
64004dd3:	cmp    edi,ebx
64004dd5:	mov    esi,DWORD PTR [ebp-0x18]
64004dd8:	je     0x64004de1
64004dda:	lea    edx,[ebp-0x1c]
64004ddd:	cmp    edi,edx
64004ddf:	je     0x64004de6
64004de1:	call   0x640129c8
64004de6:	cmp    DWORD PTR [ebp-0x20],esi
64004de9:	je     0x64004eec
64004def:	cmp    edi,ebx
64004df1:	jne    0x64004df8
64004df3:	call   0x640129c8
64004df8:	mov    eax,DWORD PTR [ebp-0x20]
64004dfb:	cmp    eax,DWORD PTR [edi+0x4]
64004dfe:	jne    0x64004e05
64004e00:	call   0x640129c8
64004e05:	mov    esi,DWORD PTR [ebp-0x20]
64004e08:	add    esi,0xc
64004e0b:	cmp    DWORD PTR [esi+0x18],0x10
64004e0f:	jb     0x64004e16
64004e11:	mov    ecx,DWORD PTR [esi+0x4]
64004e14:	jmp    0x64004e19
64004e16:	lea    ecx,[esi+0x4]
64004e19:	lea    edx,[ebp+0x41c]
64004e1f:	nop
64004e20:	mov    al,BYTE PTR [ecx]
64004e22:	mov    BYTE PTR [edx],al
64004e24:	add    ecx,0x1
64004e27:	add    edx,0x1
64004e2a:	cmp    al,bl
64004e2c:	jne    0x64004e20
64004e2e:	mov    ecx,DWORD PTR [ebp-0x20]
64004e31:	cmp    ecx,DWORD PTR [edi+0x4]
64004e34:	jne    0x64004e3b
64004e36:	call   0x640129c8
64004e3b:	push   0xffffffff
64004e3d:	push   ebx
64004e3e:	mov    edi,0xf
64004e43:	push   esi
64004e44:	lea    ecx,[ebp+0x0]
64004e47:	mov    DWORD PTR [ebp+0x18],edi
64004e4a:	mov    DWORD PTR [ebp+0x14],ebx
64004e4d:	mov    BYTE PTR [ebp+0x4],bl
64004e50:	call   0x64001780
64004e55:	lea    edx,[ebp+0x41c]
64004e5b:	push   edx
64004e5c:	mov    BYTE PTR [ebp-0x4],0x4
64004e60:	call   0x6401f295
64004e65:	lea    eax,[ebp+0x41c]
64004e6b:	add    esp,0x4
64004e6e:	mov    DWORD PTR [ebp-0x2c],edi
64004e71:	mov    DWORD PTR [ebp-0x30],ebx
64004e74:	mov    BYTE PTR [ebp-0x40],bl
64004e77:	lea    edx,[eax+0x1]
64004e7a:	lea    ebx,[ebx+0x0]
64004e80:	mov    cl,BYTE PTR [eax]
64004e82:	add    eax,0x1
64004e85:	cmp    cl,bl
64004e87:	jne    0x64004e80
64004e89:	sub    eax,edx
64004e8b:	push   eax
64004e8c:	lea    eax,[ebp+0x41c]
64004e92:	push   eax
64004e93:	lea    ecx,[ebp-0x44]
64004e96:	call   0x64001860
64004e9b:	lea    ecx,[ebp-0x44]
64004e9e:	push   ecx
64004e9f:	lea    edx,[ebp-0x50]
64004ea2:	push   edx
64004ea3:	push   0x640314a0
64004ea8:	mov    BYTE PTR [ebp-0x4],0x5
64004eac:	call   0x64005ba0
64004eb1:	mov    esi,0x10
64004eb6:	cmp    DWORD PTR [ebp-0x2c],esi
64004eb9:	jb     0x64004ec7
64004ebb:	mov    eax,DWORD PTR [ebp-0x40]
64004ebe:	push   eax
64004ebf:	call   0x64012612
64004ec4:	add    esp,0x4
64004ec7:	mov    BYTE PTR [ebp-0x4],0x2
64004ecb:	cmp    DWORD PTR [ebp+0x18],esi
64004ece:	jb     0x64004edc
64004ed0:	mov    ecx,DWORD PTR [ebp+0x4]
64004ed3:	push   ecx
64004ed4:	call   0x64012612
64004ed9:	add    esp,0x4
64004edc:	lea    esi,[ebp-0x24]
64004edf:	call   0x64006460
64004ee4:	mov    edi,DWORD PTR [ebp-0x24]
64004ee7:	jmp    0x64004dd3
64004eec:	lea    eax,[ebp-0x1c]
64004eef:	mov    BYTE PTR [ebp-0x4],bl
64004ef2:	call   0x640063e0
64004ef7:	call   DWORD PTR ds:0x6402d06c
64004efd:	mov    DWORD PTR [ebp-0x20],eax
64004f00:	mov    eax,DWORD PTR [ebp+0x828]
64004f06:	cmp    DWORD PTR [eax-0x4],0x1
64004f0a:	jle    0x64004f21
64004f0c:	mov    edx,DWORD PTR [eax-0xc]
64004f0f:	push   edx
64004f10:	lea    ecx,[ebp+0x828]
64004f16:	call   0x64001950
64004f1b:	mov    eax,DWORD PTR [ebp+0x828]
64004f21:	cmp    eax,ebx
64004f23:	jne    0x64004f29
64004f25:	xor    ecx,ecx
64004f27:	jmp    0x64004f70
64004f29:	push   eax
64004f2a:	call   DWORD PTR ds:0x64025054
64004f30:	add    eax,0x1
64004f33:	cmp    eax,0x3fffffff
64004f38:	jg     0x64004f6c
64004f3a:	lea    edi,[eax+eax*1]
64004f3d:	mov    eax,edi
64004f3f:	call   0x640135f0
64004f44:	mov    esi,esp
64004f46:	cmp    esi,ebx
64004f48:	je     0x64004f6c
64004f4a:	mov    eax,DWORD PTR [ebp+0x828]
64004f50:	mov    ecx,DWORD PTR [ebp-0x20]
64004f53:	push   ebx
64004f54:	push   ebx
64004f55:	push   edi
64004f56:	push   esi
64004f57:	push   0xffffffff
64004f59:	push   eax
64004f5a:	push   ebx
64004f5b:	push   ecx
64004f5c:	mov    BYTE PTR [esi],bl
64004f5e:	call   DWORD PTR ds:0x64025028
64004f64:	neg    eax
64004f66:	sbb    eax,eax
64004f68:	and    eax,esi
64004f6a:	jmp    0x64004f6e
64004f6c:	xor    eax,eax
64004f6e:	mov    ecx,eax
64004f70:	lea    edx,[ebp+0x1c]
64004f73:	mov    al,BYTE PTR [ecx]
64004f75:	mov    BYTE PTR [edx],al
64004f77:	add    ecx,0x1
64004f7a:	add    edx,0x1
64004f7d:	cmp    al,bl
64004f7f:	jne    0x64004f73
64004f81:	mov    edi,0xf
64004f86:	lea    eax,[ebp+0x1c]
64004f89:	mov    DWORD PTR [ebp-0x2c],edi
64004f8c:	mov    DWORD PTR [ebp-0x30],ebx
64004f8f:	mov    BYTE PTR [ebp-0x40],bl
64004f92:	lea    edx,[eax+0x1]
64004f95:	mov    cl,BYTE PTR [eax]
64004f97:	add    eax,0x1
64004f9a:	cmp    cl,bl
64004f9c:	jne    0x64004f95
64004f9e:	sub    eax,edx
64004fa0:	push   eax
64004fa1:	lea    edx,[ebp+0x1c]
64004fa4:	push   edx
64004fa5:	lea    ecx,[ebp-0x44]
64004fa8:	call   0x64001860
64004fad:	lea    eax,[ebp-0x44]
64004fb0:	mov    esi,0x640314a0
64004fb5:	mov    BYTE PTR [ebp-0x4],0x6
64004fb9:	call   0x64005d30
64004fbe:	test   eax,eax
64004fc0:	setne  BYTE PTR [ebp-0xd]
64004fc4:	cmp    DWORD PTR [ebp-0x2c],0x10
64004fc8:	jb     0x64004fd6
64004fca:	mov    eax,DWORD PTR [ebp-0x40]
64004fcd:	push   eax
64004fce:	call   0x64012612
64004fd3:	add    esp,0x4
64004fd6:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004fdd:	mov    eax,DWORD PTR [ebp+0x828]
64004fe3:	add    eax,0xfffffff0
64004fe6:	mov    DWORD PTR [ebp-0x2c],edi
64004fe9:	mov    DWORD PTR [ebp-0x30],ebx
64004fec:	mov    BYTE PTR [ebp-0x40],bl
64004fef:	lea    ecx,[eax+0xc]
64004ff2:	or     edx,0xffffffff
64004ff5:	lock xadd DWORD PTR [ecx],edx
64004ff9:	dec    edx
64004ffa:	test   edx,edx
64004ffc:	jg     0x64005008
64004ffe:	mov    ecx,DWORD PTR [eax]
64005000:	mov    edx,DWORD PTR [ecx]
64005002:	push   eax
64005003:	mov    eax,DWORD PTR [edx+0x4]
64005006:	call   eax
64005008:	mov    al,BYTE PTR [ebp-0xd]
6400500b:	lea    esp,[ebp-0x60]
6400500e:	mov    ecx,DWORD PTR [ebp-0xc]
64005011:	mov    DWORD PTR fs:0x0,ecx
64005018:	pop    ecx
64005019:	pop    edi
6400501a:	pop    esi
6400501b:	pop    ebx
6400501c:	mov    ecx,DWORD PTR [ebp+0x81c]
64005022:	xor    ecx,ebp
64005024:	call   0x64012e6c
64005029:	add    ebp,0x820
6400502f:	mov    esp,ebp
64005031:	pop    ebp
64005032:	ret    
64005033:	int3   
64005034:	int3   
64005035:	int3   
64005036:	int3   
64005037:	int3   
64005038:	int3   
64005039:	int3   
6400503a:	int3   
6400503b:	int3   
6400503c:	int3   
6400503d:	int3   
6400503e:	int3   
6400503f:	int3   
64005040:	push   0xffffffff
64005042:	push   0x64023ee9
64005047:	mov    eax,fs:0x0
6400504d:	push   eax
6400504e:	sub    esp,0x44
64005051:	push   ebx
64005052:	push   ebp
64005053:	push   esi
64005054:	push   edi
64005055:	mov    eax,ds:0x6402d09c
6400505a:	xor    eax,esp
6400505c:	push   eax
6400505d:	lea    eax,[esp+0x58]
64005061:	mov    fs:0x0,eax
64005067:	xor    edi,edi
64005069:	mov    DWORD PTR [esp+0x60],edi
6400506d:	mov    DWORD PTR [esp+0x28],edi
64005071:	call   DWORD PTR ds:0x6402d06c
64005077:	mov    eax,ds:0x6402e540
6400507c:	mov    edx,DWORD PTR [eax+0xc]
6400507f:	mov    ecx,0x6402e540
64005084:	call   edx
64005086:	mov    ebx,DWORD PTR [esp+0x68]
6400508a:	add    eax,0x10
6400508d:	mov    DWORD PTR [ebx],eax
6400508f:	push   0x4
64005091:	push   edi
64005092:	mov    DWORD PTR [esp+0x68],edi
64005096:	push   edi
64005097:	mov    DWORD PTR [esp+0x34],0x1
6400509f:	call   0x6400e490
640050a4:	call   eax
640050a6:	cmp    eax,edi
640050a8:	mov    DWORD PTR [esp+0x1c],eax
640050ac:	je     0x64005242
640050b2:	mov    ebp,DWORD PTR ds:0x64025008
640050b8:	lea    ecx,[esp+0x20]
640050bc:	push   ecx
640050bd:	lea    edx,[esp+0x1c]
640050c1:	push   edx
640050c2:	lea    ecx,[esp+0x2c]
640050c6:	push   ecx
640050c7:	push   0x24
640050c9:	lea    edx,[esp+0x44]
640050cd:	push   edx
640050ce:	push   0x3
640050d0:	push   0x30
640050d2:	push   eax
640050d3:	mov    DWORD PTR [esp+0x40],edi
640050d7:	call   ebp
640050d9:	mov    esi,eax
640050db:	call   DWORD PTR ds:0x64025044
640050e1:	cmp    esi,edi
640050e3:	je     0x640050ec
640050e5:	cmp    eax,0xea
640050ea:	jne    0x6400512e
640050ec:	mov    esi,DWORD PTR [esp+0x24]
640050f0:	add    esi,0x24
640050f3:	xor    ecx,ecx
640050f5:	mov    eax,esi
640050f7:	mov    edx,0x24
640050fc:	mul    edx
640050fe:	seto   cl
64005101:	neg    ecx
64005103:	or     ecx,eax
64005105:	push   ecx
64005106:	call   0x6401260d
6400510b:	add    esp,0x4
6400510e:	mov    edi,eax
64005110:	lea    eax,[esp+0x20]
64005114:	push   eax
64005115:	mov    eax,DWORD PTR [esp+0x20]
64005119:	lea    ecx,[esp+0x1c]
6400511d:	push   ecx
6400511e:	lea    edx,[esp+0x2c]
64005122:	push   edx
64005123:	push   esi
64005124:	push   edi
64005125:	push   0x3
64005127:	push   0x30
64005129:	push   eax
6400512a:	call   ebp
6400512c:	jmp    0x64005132
6400512e:	mov    edi,DWORD PTR [esp+0x2c]
64005132:	xor    ebp,ebp
64005134:	cmp    DWORD PTR [esp+0x18],ebp
64005138:	jbe    0x6400523e
6400513e:	add    edi,0x8
64005141:	mov    ecx,DWORD PTR [edi-0x8]
64005144:	push   ecx
64005145:	lea    ecx,[esp+0x18]
64005149:	call   0x640025a0
6400514e:	mov    DWORD PTR [esp+0x60],0x1
64005156:	mov    eax,DWORD PTR [edi]
64005158:	cmp    eax,0x10
6400515b:	je     0x64005166
6400515d:	cmp    eax,0x20
64005160:	jne    0x64005209
64005166:	mov    eax,DWORD PTR [esp+0x14]
6400516a:	push   ecx
6400516b:	add    eax,0xfffffff0
6400516e:	mov    DWORD PTR [esp+0x34],esp
64005172:	mov    esi,esp
64005174:	push   eax
64005175:	call   0x640028b0
6400517a:	add    eax,0x10
6400517d:	add    esp,0x4
64005180:	cmp    BYTE PTR [esp+0x70],0x0
64005185:	mov    DWORD PTR [esi],eax
64005187:	je     0x64005197
64005189:	call   0x64004ca0
6400518e:	add    esp,0x4
64005191:	test   al,al
64005193:	jne    0x640051a3
64005195:	jmp    0x64005209
64005197:	call   0x64003c00
6400519c:	add    esp,0x4
6400519f:	test   al,al
640051a1:	jne    0x64005209
640051a3:	push   0x640282d8
640051a8:	push   0x4
640051aa:	push   0x64028314
640051af:	call   0x640057b0
640051b4:	add    esp,0xc
640051b7:	push   eax
640051b8:	mov    ecx,ebx
640051ba:	call   0x64002670
640051bf:	lea    edx,[esp+0x14]
640051c3:	push   edx
640051c4:	lea    eax,[esp+0x30]
640051c8:	push   eax
640051c9:	call   0x64003150
640051ce:	add    esp,0x8
640051d1:	mov    BYTE PTR [esp+0x60],0x2
640051d6:	mov    eax,DWORD PTR [eax]
640051d8:	mov    ecx,DWORD PTR [eax-0xc]
640051db:	push   ecx
640051dc:	push   eax
640051dd:	mov    ecx,ebx
640051df:	call   0x640029f0
640051e4:	mov    BYTE PTR [esp+0x60],0x1
640051e9:	mov    eax,DWORD PTR [esp+0x2c]
640051ed:	add    eax,0xfffffff0
640051f0:	lea    ecx,[eax+0xc]
640051f3:	or     edx,0xffffffff
640051f6:	lock xadd DWORD PTR [ecx],edx
640051fa:	dec    edx
640051fb:	test   edx,edx
640051fd:	jg     0x64005209
640051ff:	mov    ecx,DWORD PTR [eax]
64005201:	mov    edx,DWORD PTR [ecx]
64005203:	push   eax
64005204:	mov    eax,DWORD PTR [edx+0x4]
64005207:	call   eax
64005209:	mov    BYTE PTR [esp+0x60],0x0
6400520e:	mov    eax,DWORD PTR [esp+0x14]
64005212:	add    eax,0xfffffff0
64005215:	lea    ecx,[eax+0xc]
64005218:	or     edx,0xffffffff
6400521b:	lock xadd DWORD PTR [ecx],edx
6400521f:	dec    edx
64005220:	test   edx,edx
64005222:	jg     0x6400522e
64005224:	mov    ecx,DWORD PTR [eax]
64005226:	mov    edx,DWORD PTR [ecx]
64005228:	push   eax
64005229:	mov    eax,DWORD PTR [edx+0x4]
6400522c:	call   eax
6400522e:	add    ebp,0x1
64005231:	add    edi,0x24
64005234:	cmp    ebp,DWORD PTR [esp+0x18]
64005238:	jb     0x64005141
6400523e:	mov    eax,DWORD PTR [esp+0x1c]
64005242:	push   eax
64005243:	call   0x6400e8f0
64005248:	call   eax
6400524a:	mov    eax,ebx
6400524c:	mov    ecx,DWORD PTR [esp+0x58]
64005250:	mov    DWORD PTR fs:0x0,ecx
64005257:	pop    ecx
64005258:	pop    edi
64005259:	pop    esi
6400525a:	pop    ebp
6400525b:	pop    ebx
6400525c:	add    esp,0x50
6400525f:	ret    
64005260:	push   ebp
64005261:	mov    ebp,esp
64005263:	push   0xffffffff
64005265:	push   0x64023a70
6400526a:	mov    eax,fs:0x0
64005270:	push   eax
64005271:	sub    esp,0x15c
64005277:	mov    eax,ds:0x6402d09c
6400527c:	xor    eax,ebp
6400527e:	mov    DWORD PTR [ebp-0x14],eax
64005281:	push   ebx
64005282:	push   esi
64005283:	push   edi
64005284:	push   eax
64005285:	lea    eax,[ebp-0xc]
64005288:	mov    fs:0x0,eax
6400528e:	mov    DWORD PTR [ebp-0x10],esp
64005291:	mov    edi,DWORD PTR [ebp+0x8]
64005294:	push   0xa0
64005299:	lea    eax,[ebp-0x154]
6400529f:	push   eax
640052a0:	push   0x7d0
640052a5:	push   0x64000000
640052aa:	mov    DWORD PTR [ebp-0x4],0x0
640052b1:	call   DWORD PTR ds:0x640251b4
640052b7:	test   eax,eax
640052b9:	je     0x64005300
640052bb:	push   ecx
640052bc:	lea    edx,[ebp-0x154]
640052c2:	mov    ecx,esp
640052c4:	mov    DWORD PTR [ebp-0x158],esp
640052ca:	push   edx
640052cb:	call   0x640025a0
640052d0:	lea    esi,[ebp-0x168]
640052d6:	call   0x64002f50
640052db:	mov    ecx,DWORD PTR [eax]
640052dd:	mov    DWORD PTR [edi],ecx
640052df:	mov    edx,DWORD PTR [eax+0x4]
640052e2:	mov    DWORD PTR [edi+0x4],edx
640052e5:	mov    ecx,DWORD PTR [eax+0x8]
640052e8:	mov    DWORD PTR [edi+0x8],ecx
640052eb:	mov    edx,DWORD PTR [eax+0xc]
640052ee:	add    esp,0x4
640052f1:	mov    DWORD PTR [edi+0xc],edx
640052f4:	mov    al,0x1
640052f6:	jmp    0x64005323
640052f8:	mov    eax,0x640052fe
640052fd:	ret    
640052fe:	jmp    0x64005321
64005300:	mov    eax,ds:0x64025bf0
64005305:	mov    DWORD PTR [edi],eax
64005307:	mov    ecx,DWORD PTR ds:0x64025bf4
6400530d:	mov    DWORD PTR [edi+0x4],ecx
64005310:	mov    edx,DWORD PTR ds:0x64025bf8
64005316:	mov    DWORD PTR [edi+0x8],edx
64005319:	mov    eax,ds:0x64025bfc
6400531e:	mov    DWORD PTR [edi+0xc],eax
64005321:	xor    al,al
64005323:	mov    ecx,DWORD PTR [ebp-0xc]
64005326:	mov    DWORD PTR fs:0x0,ecx
6400532d:	pop    ecx
6400532e:	pop    edi
6400532f:	pop    esi
64005330:	pop    ebx
64005331:	mov    ecx,DWORD PTR [ebp-0x14]
64005334:	xor    ecx,ebp
64005336:	call   0x64012e6c
6400533b:	mov    esp,ebp
6400533d:	pop    ebp
6400533e:	ret    
6400533f:	int3   
64005340:	sub    esp,0x118
64005346:	mov    eax,ds:0x6402d09c
6400534b:	xor    eax,esp
6400534d:	mov    DWORD PTR [esp+0x114],eax
64005354:	push   esi
64005355:	push   0x110
6400535a:	lea    eax,[esp+0xc]
6400535e:	push   0x0
64005360:	push   eax
64005361:	call   0x64013570
64005366:	mov    edx,DWORD PTR ds:0x6402e540
6400536c:	mov    eax,DWORD PTR [edx+0xc]
6400536f:	add    esp,0xc
64005372:	mov    ecx,0x6402e540
64005377:	mov    DWORD PTR [esp+0x4],0x114
6400537f:	call   eax
64005381:	lea    ecx,[esp+0x4]
64005385:	mov    esi,eax
64005387:	push   ecx
64005388:	add    esi,0x10
6400538b:	call   DWORD PTR ds:0x6402506c
64005391:	test   eax,eax
64005393:	je     0x640053d5
64005395:	mov    edx,DWORD PTR [esp+0x8]
64005399:	mov    eax,DWORD PTR [esp+0xc]
6400539d:	mov    DWORD PTR [edi],edx
6400539f:	mov    DWORD PTR [ebx],eax
640053a1:	lea    eax,[esi-0x10]
640053a4:	lea    ecx,[eax+0xc]
640053a7:	or     edx,0xffffffff
640053aa:	lock xadd DWORD PTR [ecx],edx
640053ae:	dec    edx
640053af:	test   edx,edx
640053b1:	jg     0x640053bd
640053b3:	mov    ecx,DWORD PTR [eax]
640053b5:	mov    edx,DWORD PTR [ecx]
640053b7:	push   eax
640053b8:	mov    eax,DWORD PTR [edx+0x4]
640053bb:	call   eax
640053bd:	mov    al,0x1
640053bf:	pop    esi
640053c0:	mov    ecx,DWORD PTR [esp+0x114]
640053c7:	xor    ecx,esp
640053c9:	call   0x64012e6c
640053ce:	add    esp,0x118
640053d4:	ret    
640053d5:	lea    eax,[esi-0x10]
640053d8:	lea    ecx,[eax+0xc]
640053db:	or     edx,0xffffffff
640053de:	lock xadd DWORD PTR [ecx],edx
640053e2:	dec    edx
640053e3:	test   edx,edx
640053e5:	jg     0x640053f1
640053e7:	mov    ecx,DWORD PTR [eax]
640053e9:	mov    edx,DWORD PTR [ecx]
640053eb:	push   eax
640053ec:	mov    eax,DWORD PTR [edx+0x4]
640053ef:	call   eax
640053f1:	mov    ecx,DWORD PTR [esp+0x118]
640053f8:	pop    esi
640053f9:	xor    ecx,esp
640053fb:	xor    al,al
640053fd:	call   0x64012e6c
64005402:	add    esp,0x118
64005408:	ret    
64005409:	int3   
6400540a:	int3   
6400540b:	int3   
6400540c:	int3   
6400540d:	int3   
6400540e:	int3   
6400540f:	int3   
64005410:	push   ebp
64005411:	mov    ebp,esp
64005413:	and    esp,0xfffffff8
64005416:	push   0xffffffff
64005418:	push   0x64023a48
6400541d:	mov    eax,fs:0x0
64005423:	push   eax
64005424:	sub    esp,0x14
64005427:	push   ebx
64005428:	push   edi
64005429:	mov    eax,ds:0x6402d09c
6400542e:	xor    eax,esp
64005430:	push   eax
64005431:	lea    eax,[esp+0x20]
64005435:	mov    fs:0x0,eax
6400543b:	cmp    DWORD PTR ds:0x64031340,0x0
64005442:	jne    0x640054f5
64005448:	push   0x6402831c
6400544d:	push   0x12
6400544f:	push   0x6402834c
64005454:	mov    DWORD PTR ds:0x64031340,0xc
6400545e:	mov    DWORD PTR ds:0x64031348,0x0
64005468:	call   0x640059b0
6400546d:	add    esp,0xc
64005470:	push   eax
64005471:	lea    ecx,[esp+0x14]
64005475:	call   0x640025a0
6400547a:	lea    ebx,[esp+0x18]
6400547e:	lea    edi,[esp+0x14]
64005482:	mov    DWORD PTR [esp+0x28],0x0
6400548a:	call   0x64005340
6400548f:	test   al,al
64005491:	je     0x640054b8
64005493:	cmp    DWORD PTR [esp+0x14],0x6
64005498:	jb     0x640054b8
6400549a:	push   0x64028374
6400549f:	push   0xf
640054a1:	push   0x640283b4
640054a6:	call   0x640059b0
640054ab:	add    esp,0xc
640054ae:	push   eax
640054af:	lea    ecx,[esp+0x14]
640054b3:	call   0x64005770
640054b8:	mov    eax,DWORD PTR [esp+0x10]
640054bc:	push   0x0
640054be:	push   0x64031344
640054c3:	push   0x1
640054c5:	push   eax
640054c6:	call   0x6400e1f0
640054cb:	call   eax
640054cd:	mov    DWORD PTR [esp+0x28],0xffffffff
640054d5:	mov    eax,DWORD PTR [esp+0x10]
640054d9:	add    eax,0xfffffff0
640054dc:	lea    ecx,[eax+0xc]
640054df:	or     edx,0xffffffff
640054e2:	lock xadd DWORD PTR [ecx],edx
640054e6:	dec    edx
640054e7:	test   edx,edx
640054e9:	jg     0x640054f5
640054eb:	mov    ecx,DWORD PTR [eax]
640054ed:	mov    edx,DWORD PTR [ecx]
640054ef:	push   eax
640054f0:	mov    eax,DWORD PTR [edx+0x4]
640054f3:	call   eax
640054f5:	mov    eax,0x64031340
640054fa:	mov    ecx,DWORD PTR [esp+0x20]
640054fe:	mov    DWORD PTR fs:0x0,ecx
64005505:	pop    ecx
64005506:	pop    edi
64005507:	pop    ebx
64005508:	mov    esp,ebp
6400550a:	pop    ebp
6400550b:	ret    
6400550c:	int3   
6400550d:	int3   
6400550e:	int3   
6400550f:	int3   
64005510:	push   0xffffffff
64005512:	push   0x64023a18
64005517:	mov    eax,fs:0x0
6400551d:	push   eax
6400551e:	push   ecx
6400551f:	push   esi
64005520:	push   edi
64005521:	mov    eax,ds:0x6402d09c
64005526:	xor    eax,esp
64005528:	push   eax
64005529:	lea    eax,[esp+0x10]
6400552d:	mov    fs:0x0,eax
64005533:	mov    esi,ecx
64005535:	mov    DWORD PTR [esp+0xc],esi
64005539:	mov    eax,ds:0x6402e540
6400553e:	mov    edx,DWORD PTR [eax+0xc]
64005541:	mov    ecx,0x6402e540
64005546:	call   edx
64005548:	add    eax,0x10
6400554b:	mov    DWORD PTR [esi],eax
6400554d:	mov    eax,DWORD PTR [esp+0x20]
64005551:	test   eax,eax
64005553:	mov    DWORD PTR [esp+0x18],0x0
6400555b:	je     0x64005581
6400555d:	test   eax,0xffff0000
64005562:	jne    0x64005581
64005564:	movzx  edi,ax
64005567:	push   0x0
64005569:	push   edi
6400556a:	call   0x64001fa0
6400556f:	add    esp,0x8
64005572:	test   eax,eax
64005574:	je     0x64005589
64005576:	push   edi
64005577:	push   eax
64005578:	mov    ecx,esi
6400557a:	call   0x64002920
6400557f:	jmp    0x64005589
64005581:	push   eax
64005582:	mov    ecx,esi
64005584:	call   0x64002810
64005589:	mov    eax,esi
6400558b:	mov    ecx,DWORD PTR [esp+0x10]
6400558f:	mov    DWORD PTR fs:0x0,ecx
64005596:	pop    ecx
64005597:	pop    edi
64005598:	pop    esi
64005599:	add    esp,0x10
6400559c:	ret    0x4
6400559f:	int3   
640055a0:	mov    eax,DWORD PTR [edi]
640055a2:	mov    edx,DWORD PTR [eax-0x8]
640055a5:	push   ebx
640055a6:	mov    ebx,DWORD PTR [eax-0xc]
640055a9:	push   esi
640055aa:	mov    ecx,0x1
640055af:	sub    ecx,DWORD PTR [eax-0x4]
640055b2:	lea    esi,[ebx+0x1]
640055b5:	sub    edx,esi
640055b7:	or     ecx,edx
640055b9:	jge    0x640055c3
640055bb:	push   esi
640055bc:	mov    ecx,edi
640055be:	call   0x64001e00
640055c3:	test   esi,esi
640055c5:	movsx  ax,BYTE PTR [esp+0xc]
640055cb:	mov    ecx,DWORD PTR [edi]
640055cd:	mov    WORD PTR [ecx+ebx*2],ax
640055d1:	jl     0x640055ec
640055d3:	mov    eax,DWORD PTR [edi]
640055d5:	cmp    esi,DWORD PTR [eax-0x8]
640055d8:	jg     0x640055ec
640055da:	mov    DWORD PTR [eax-0xc],esi
640055dd:	mov    edx,DWORD PTR [edi]
640055df:	mov    WORD PTR [edx+esi*2],0x0
640055e5:	pop    esi
640055e6:	mov    eax,edi
640055e8:	pop    ebx
640055e9:	ret    0x4
640055ec:	push   0x80070057
640055f1:	call   0x64001040
640055f6:	int3   
640055f7:	int3   
640055f8:	int3   
640055f9:	int3   
640055fa:	int3   
640055fb:	int3   
640055fc:	int3   
640055fd:	int3   
640055fe:	int3   
640055ff:	int3   
64005600:	mov    eax,DWORD PTR [edi]
64005602:	mov    edx,DWORD PTR [eax-0x8]
64005605:	push   ebx
64005606:	mov    ebx,DWORD PTR [eax-0xc]
64005609:	push   esi
6400560a:	mov    ecx,0x1
6400560f:	sub    ecx,DWORD PTR [eax-0x4]
64005612:	lea    esi,[ebx+0x1]
64005615:	sub    edx,esi
64005617:	or     ecx,edx
64005619:	jge    0x64005623
6400561b:	push   esi
6400561c:	mov    ecx,edi
6400561e:	call   0x64001e00
64005623:	test   esi,esi
64005625:	mov    eax,DWORD PTR [edi]
64005627:	mov    WORD PTR [eax+ebx*2],0x5c
6400562d:	jl     0x64005646
6400562f:	mov    eax,DWORD PTR [edi]
64005631:	cmp    esi,DWORD PTR [eax-0x8]
64005634:	jg     0x64005646
64005636:	mov    DWORD PTR [eax-0xc],esi
64005639:	mov    ecx,DWORD PTR [edi]
6400563b:	mov    WORD PTR [ecx+esi*2],0x0
64005641:	pop    esi
64005642:	mov    eax,edi
64005644:	pop    ebx
64005645:	ret    
64005646:	push   0x80070057
6400564b:	call   0x64001040
64005650:	int3   
64005651:	int3   
64005652:	int3   
64005653:	int3   
64005654:	int3   
64005655:	int3   
64005656:	int3   
64005657:	int3   
64005658:	int3   
64005659:	int3   
6400565a:	int3   
6400565b:	int3   
6400565c:	int3   
6400565d:	int3   
6400565e:	int3   
6400565f:	int3   
64005660:	push   esi
64005661:	push   edi
64005662:	mov    edi,DWORD PTR [ebx]
64005664:	mov    ecx,edi
64005666:	movzx  eax,WORD PTR [ecx]
64005669:	xor    edx,edx
6400566b:	test   ax,ax
6400566e:	je     0x640056c5
64005670:	cmp    ax,0x7d
64005674:	jne    0x6400567e
64005676:	test   edx,edx
64005678:	jne    0x64005680
6400567a:	mov    edx,ecx
6400567c:	jmp    0x64005680
6400567e:	xor    edx,edx
64005680:	movzx  eax,WORD PTR [ecx+0x2]
64005684:	add    ecx,0x2
64005687:	test   ax,ax
6400568a:	jne    0x64005670
6400568c:	test   edx,edx
6400568e:	je     0x640056c5
64005690:	mov    ecx,DWORD PTR [edi-0x8]
64005693:	sub    edx,edi
64005695:	sar    edx,1
64005697:	mov    eax,0x1
6400569c:	sub    eax,DWORD PTR [edi-0x4]
6400569f:	mov    esi,edx
640056a1:	sub    ecx,esi
640056a3:	or     eax,ecx
640056a5:	jge    0x640056af
640056a7:	push   esi
640056a8:	mov    ecx,ebx
640056aa:	call   0x64001e00
640056af:	test   esi,esi
640056b1:	jl     0x640056ca
640056b3:	mov    eax,DWORD PTR [ebx]
640056b5:	cmp    esi,DWORD PTR [eax-0x8]
640056b8:	jg     0x640056ca
640056ba:	mov    DWORD PTR [eax-0xc],esi
640056bd:	mov    edx,DWORD PTR [ebx]
640056bf:	mov    WORD PTR [edx+esi*2],0x0
640056c5:	pop    edi
640056c6:	mov    eax,ebx
640056c8:	pop    esi
640056c9:	ret    
640056ca:	push   0x80070057
640056cf:	call   0x64001040
640056d4:	int3   
640056d5:	int3   
640056d6:	int3   
640056d7:	int3   
640056d8:	int3   
640056d9:	int3   
640056da:	int3   
640056db:	int3   
640056dc:	int3   
640056dd:	int3   
640056de:	int3   
640056df:	int3   
640056e0:	mov    ecx,DWORD PTR [ebx]
640056e2:	mov    eax,ecx
640056e4:	cmp    WORD PTR [eax],0x7b
640056e8:	jne    0x640056f9
640056ea:	lea    ebx,[ebx+0x0]
640056f0:	add    eax,0x2
640056f3:	cmp    WORD PTR [eax],0x7b
640056f7:	je     0x640056f0
640056f9:	cmp    eax,ecx
640056fb:	push   esi
640056fc:	je     0x64005758
640056fe:	sub    eax,ecx
64005700:	sar    eax,1
64005702:	push   edi
64005703:	mov    edx,0x1
64005708:	sub    edx,DWORD PTR [ecx-0x4]
6400570b:	mov    edi,eax
6400570d:	mov    eax,DWORD PTR [ecx-0xc]
64005710:	mov    ecx,DWORD PTR [ecx-0x8]
64005713:	sub    ecx,eax
64005715:	or     edx,ecx
64005717:	jge    0x64005721
64005719:	push   eax
6400571a:	mov    ecx,ebx
6400571c:	call   0x64001e00
64005721:	mov    eax,DWORD PTR [ebx]
64005723:	mov    esi,DWORD PTR [eax-0xc]
64005726:	sub    esi,edi
64005728:	lea    ecx,[esi+esi*1+0x2]
6400572c:	push   ecx
6400572d:	lea    edx,[eax+edi*2]
64005730:	push   edx
64005731:	push   ecx
64005732:	push   eax
64005733:	call   0x64012843
64005738:	push   eax
64005739:	call   0x64001e90
6400573e:	add    esp,0x14
64005741:	test   esi,esi
64005743:	pop    edi
64005744:	jl     0x6400575c
64005746:	mov    eax,DWORD PTR [ebx]
64005748:	cmp    esi,DWORD PTR [eax-0x8]
6400574b:	jg     0x6400575c
6400574d:	mov    DWORD PTR [eax-0xc],esi
64005750:	mov    eax,DWORD PTR [ebx]
64005752:	mov    WORD PTR [eax+esi*2],0x0
64005758:	mov    eax,ebx
6400575a:	pop    esi
6400575b:	ret    
6400575c:	push   0x80070057
64005761:	call   0x64001040
64005766:	int3   
64005767:	int3   
64005768:	int3   
64005769:	int3   
6400576a:	int3   
6400576b:	int3   
6400576c:	int3   
6400576d:	int3   
6400576e:	int3   
6400576f:	int3   
64005770:	push   esi
64005771:	mov    esi,DWORD PTR [esp+0x8]
64005775:	test   esi,esi
64005777:	jne    0x64005786
64005779:	xor    eax,eax
6400577b:	push   eax
6400577c:	push   esi
6400577d:	call   0x640029f0
64005782:	pop    esi
64005783:	ret    0x4
64005786:	mov    eax,esi
64005788:	push   edi
64005789:	lea    edi,[eax+0x2]
6400578c:	lea    esp,[esp+0x0]
64005790:	mov    dx,WORD PTR [eax]
64005793:	add    eax,0x2
64005796:	test   dx,dx
64005799:	jne    0x64005790
6400579b:	sub    eax,edi
6400579d:	pop    edi
6400579e:	sar    eax,1
640057a0:	push   eax
640057a1:	push   esi
640057a2:	call   0x640029f0
640057a7:	pop    esi
640057a8:	ret    0x4
640057ab:	int3   
640057ac:	int3   
640057ad:	int3   
640057ae:	int3   
640057af:	int3   
640057b0:	push   ebp
640057b1:	mov    ebp,esp
640057b3:	and    esp,0xfffffff8
640057b6:	push   0xffffffff
640057b8:	push   0x64023030
640057bd:	mov    eax,fs:0x0
640057c3:	push   eax
640057c4:	sub    esp,0x50
640057c7:	mov    eax,ds:0x6402d09c
640057cc:	xor    eax,esp
640057ce:	mov    DWORD PTR [esp+0x48],eax
640057d2:	push   ebx
640057d3:	push   esi
640057d4:	push   edi
640057d5:	mov    eax,ds:0x6402d09c
640057da:	xor    eax,esp
640057dc:	push   eax
640057dd:	lea    eax,[esp+0x60]
640057e1:	mov    fs:0x0,eax
640057e7:	mov    eax,ds:0x64031268
640057ec:	mov    esi,DWORD PTR [ebp+0x8]
640057ef:	xor    edi,edi
640057f1:	cmp    eax,edi
640057f3:	mov    DWORD PTR [esp+0x1c],esi
640057f7:	jne    0x64005807
640057f9:	push   edi
640057fa:	push   edi
640057fb:	push   edi
640057fc:	call   DWORD PTR ds:0x64025064
64005802:	mov    ds:0x64031268,eax
64005807:	push   0xffffffff
64005809:	push   eax
6400580a:	call   DWORD PTR ds:0x640250b0
64005810:	test   eax,eax
64005812:	je     0x6400581b
64005814:	mov    eax,esi
64005816:	jmp    0x64005987
6400581b:	mov    eax,DWORD PTR [ebp+0xc]
6400581e:	push   eax
6400581f:	push   esi
64005820:	lea    ecx,[esp+0x28]
64005824:	mov    DWORD PTR [esp+0x40],0xf
6400582c:	mov    DWORD PTR [esp+0x3c],edi
64005830:	mov    BYTE PTR [esp+0x2c],0x0
64005835:	call   0x64001860
6400583a:	lea    ecx,[esp+0x20]
6400583e:	push   ecx
6400583f:	lea    edx,[esp+0x18]
64005843:	push   edx
64005844:	mov    DWORD PTR [esp+0x70],edi
64005848:	call   0x64005ea0
6400584d:	mov    ecx,eax
6400584f:	call   0x64006630
64005854:	call   0x64005ea0
64005859:	mov    esi,DWORD PTR [esp+0x14]
6400585d:	cmp    esi,edi
6400585f:	mov    ebx,DWORD PTR [eax+0x4]
64005862:	je     0x64005868
64005864:	cmp    esi,eax
64005866:	je     0x6400586d
64005868:	call   0x640129c8
6400586d:	mov    edi,DWORD PTR [esp+0x18]
64005871:	cmp    edi,ebx
64005873:	jne    0x640058ea
64005875:	sub    esp,0x1c
64005878:	mov    ecx,esp
6400587a:	mov    DWORD PTR [esp+0x30],esp
6400587e:	push   0xffffffff
64005880:	push   0x0
64005882:	lea    eax,[esp+0x44]
64005886:	mov    DWORD PTR [ecx+0x18],0xf
6400588d:	mov    DWORD PTR [ecx+0x14],0x0
64005894:	push   eax
64005895:	mov    BYTE PTR [ecx+0x4],0x0
64005899:	call   0x64001780
6400589e:	lea    ecx,[esp+0x58]
640058a2:	push   ecx
640058a3:	call   0x64005f30
640058a8:	add    esp,0x20
640058ab:	lea    edx,[esp+0x20]
640058af:	push   edx
640058b0:	mov    BYTE PTR [esp+0x6c],0x1
640058b5:	call   0x64005ea0
640058ba:	mov    ecx,eax
640058bc:	call   0x640064d0
640058c1:	push   0xffffffff
640058c3:	push   0x0
640058c5:	lea    ecx,[esp+0x44]
640058c9:	push   ecx
640058ca:	mov    ecx,eax
640058cc:	call   0x64001780
640058d1:	mov    BYTE PTR [esp+0x68],0x0
640058d6:	cmp    DWORD PTR [esp+0x54],0x10
640058db:	jb     0x640058ea
640058dd:	mov    edx,DWORD PTR [esp+0x40]
640058e1:	push   edx
640058e2:	call   0x64012612
640058e7:	add    esp,0x4
640058ea:	mov    eax,DWORD PTR [ebp+0x10]
640058ed:	movzx  ecx,BYTE PTR [eax]
640058f0:	cmp    ecx,0x100
640058f6:	jge    0x64005913
640058f8:	lea    edx,[esp+0x20]
640058fc:	push   edx
640058fd:	lea    eax,[esp+0x18]
64005901:	push   eax
64005902:	call   0x64005ea0
64005907:	mov    ecx,eax
64005909:	call   0x64006630
6400590e:	mov    esi,DWORD PTR [eax]
64005910:	mov    edi,DWORD PTR [eax+0x4]
64005913:	call   0x64005ea0
64005918:	test   esi,esi
6400591a:	mov    ebx,DWORD PTR [eax+0x4]
6400591d:	je     0x64005923
6400591f:	cmp    esi,eax
64005921:	je     0x64005928
64005923:	call   0x640129c8
64005928:	cmp    edi,ebx
6400592a:	je     0x6400594f
6400592c:	test   esi,esi
6400592e:	jne    0x64005935
64005930:	call   0x640129c8
64005935:	cmp    edi,DWORD PTR [esi+0x4]
64005938:	jne    0x6400593f
6400593a:	call   0x640129c8
6400593f:	cmp    DWORD PTR [edi+0x40],0x10
64005943:	jb     0x6400594a
64005945:	mov    edi,DWORD PTR [edi+0x2c]
64005948:	jmp    0x64005953
6400594a:	add    edi,0x2c
6400594d:	jmp    0x64005953
6400594f:	mov    edi,DWORD PTR [esp+0x1c]
64005953:	mov    eax,ds:0x64031268
64005958:	test   eax,eax
6400595a:	jne    0x6400596a
6400595c:	push   eax
6400595d:	push   eax
6400595e:	push   eax
6400595f:	call   DWORD PTR ds:0x64025064
64005965:	mov    ds:0x64031268,eax
6400596a:	push   eax
6400596b:	call   DWORD PTR ds:0x64025078
64005971:	cmp    DWORD PTR [esp+0x38],0x10
64005976:	jb     0x64005985
64005978:	mov    ecx,DWORD PTR [esp+0x24]
6400597c:	push   ecx
6400597d:	call   0x64012612
64005982:	add    esp,0x4
64005985:	mov    eax,edi
64005987:	mov    ecx,DWORD PTR [esp+0x60]
6400598b:	mov    DWORD PTR fs:0x0,ecx
64005992:	pop    ecx
64005993:	pop    edi
64005994:	pop    esi
64005995:	pop    ebx
64005996:	mov    ecx,DWORD PTR [esp+0x48]
6400599a:	xor    ecx,esp
6400599c:	call   0x64012e6c
640059a1:	mov    esp,ebp
640059a3:	pop    ebp
640059a4:	ret    
640059a5:	int3   
640059a6:	int3   
640059a7:	int3   
640059a8:	int3   
640059a9:	int3   
640059aa:	int3   
640059ab:	int3   
640059ac:	int3   
640059ad:	int3   
640059ae:	int3   
640059af:	int3   
640059b0:	push   ebp
640059b1:	mov    ebp,esp
640059b3:	and    esp,0xfffffff8
640059b6:	push   0xffffffff
640059b8:	push   0x64022ff0
640059bd:	mov    eax,fs:0x0
640059c3:	push   eax
640059c4:	sub    esp,0x50
640059c7:	mov    eax,ds:0x6402d09c
640059cc:	xor    eax,esp
640059ce:	mov    DWORD PTR [esp+0x48],eax
640059d2:	push   ebx
640059d3:	push   esi
640059d4:	push   edi
640059d5:	mov    eax,ds:0x6402d09c
640059da:	xor    eax,esp
640059dc:	push   eax
640059dd:	lea    eax,[esp+0x60]
640059e1:	mov    fs:0x0,eax
640059e7:	mov    eax,ds:0x64031268
640059ec:	mov    esi,DWORD PTR [ebp+0x8]
640059ef:	xor    edi,edi
640059f1:	cmp    eax,edi
640059f3:	mov    DWORD PTR [esp+0x1c],esi
640059f7:	jne    0x64005a07
640059f9:	push   edi
640059fa:	push   edi
640059fb:	push   edi
640059fc:	call   DWORD PTR ds:0x64025064
64005a02:	mov    ds:0x64031268,eax
64005a07:	push   0xffffffff
64005a09:	push   eax
64005a0a:	call   DWORD PTR ds:0x640250b0
64005a10:	test   eax,eax
64005a12:	je     0x64005a1b
64005a14:	mov    eax,esi
64005a16:	jmp    0x64005b82
64005a1b:	mov    eax,DWORD PTR [ebp+0xc]
64005a1e:	push   eax
64005a1f:	push   esi
64005a20:	lea    ecx,[esp+0x28]
64005a24:	mov    DWORD PTR [esp+0x40],0x7
64005a2c:	mov    DWORD PTR [esp+0x3c],edi
64005a30:	mov    WORD PTR [esp+0x2c],di
64005a35:	call   0x64006f90
64005a3a:	lea    ecx,[esp+0x20]
64005a3e:	push   ecx
64005a3f:	lea    edx,[esp+0x18]
64005a43:	push   edx
64005a44:	mov    DWORD PTR [esp+0x70],edi
64005a48:	call   0x64006000
64005a4d:	mov    ecx,eax
64005a4f:	call   0x64006870
64005a54:	call   0x64006000
64005a59:	mov    esi,DWORD PTR [esp+0x14]
64005a5d:	cmp    esi,edi
64005a5f:	mov    ebx,DWORD PTR [eax+0x4]
64005a62:	je     0x64005a68
64005a64:	cmp    esi,eax
64005a66:	je     0x64005a6d
64005a68:	call   0x640129c8
64005a6d:	mov    edi,DWORD PTR [esp+0x18]
64005a71:	cmp    edi,ebx
64005a73:	jne    0x64005ae5
64005a75:	sub    esp,0x1c
64005a78:	mov    ecx,esp
64005a7a:	mov    DWORD PTR [esp+0x30],esp
64005a7e:	xor    ebx,ebx
64005a80:	push   0xffffffff
64005a82:	push   ebx
64005a83:	lea    eax,[esp+0x44]
64005a87:	mov    DWORD PTR [ecx+0x18],0x7
64005a8e:	mov    DWORD PTR [ecx+0x14],ebx
64005a91:	push   eax
64005a92:	mov    WORD PTR [ecx+0x4],bx
64005a96:	call   0x64006ea0
64005a9b:	lea    ecx,[esp+0x58]
64005a9f:	push   ecx
64005aa0:	call   0x64006090
64005aa5:	add    esp,0x20
64005aa8:	lea    edx,[esp+0x20]
64005aac:	push   edx
64005aad:	mov    BYTE PTR [esp+0x6c],0x1
64005ab2:	call   0x64006000
64005ab7:	mov    ecx,eax
64005ab9:	call   0x64006710
64005abe:	push   0xffffffff
64005ac0:	push   ebx
64005ac1:	lea    ecx,[esp+0x44]
64005ac5:	push   ecx
64005ac6:	mov    ecx,eax
64005ac8:	call   0x64006ea0
64005acd:	mov    BYTE PTR [esp+0x68],bl
64005ad1:	cmp    DWORD PTR [esp+0x54],0x8
64005ad6:	jb     0x64005ae5
64005ad8:	mov    edx,DWORD PTR [esp+0x40]
64005adc:	push   edx
64005add:	call   0x64012612
64005ae2:	add    esp,0x4
64005ae5:	mov    eax,DWORD PTR [ebp+0x10]
64005ae8:	movzx  ecx,BYTE PTR [eax]
64005aeb:	cmp    ecx,0x100
64005af1:	jge    0x64005b0e
64005af3:	lea    edx,[esp+0x20]
64005af7:	push   edx
64005af8:	lea    eax,[esp+0x18]
64005afc:	push   eax
64005afd:	call   0x64006000
64005b02:	mov    ecx,eax
64005b04:	call   0x64006870
64005b09:	mov    esi,DWORD PTR [eax]
64005b0b:	mov    edi,DWORD PTR [eax+0x4]
64005b0e:	call   0x64006000
64005b13:	test   esi,esi
64005b15:	mov    ebx,DWORD PTR [eax+0x4]
64005b18:	je     0x64005b1e
64005b1a:	cmp    esi,eax
64005b1c:	je     0x64005b23
64005b1e:	call   0x640129c8
64005b23:	cmp    edi,ebx
64005b25:	je     0x64005b4a
64005b27:	test   esi,esi
64005b29:	jne    0x64005b30
64005b2b:	call   0x640129c8
64005b30:	cmp    edi,DWORD PTR [esi+0x4]
64005b33:	jne    0x64005b3a
64005b35:	call   0x640129c8
64005b3a:	cmp    DWORD PTR [edi+0x40],0x8
64005b3e:	jb     0x64005b45
64005b40:	mov    edi,DWORD PTR [edi+0x2c]
64005b43:	jmp    0x64005b4e
64005b45:	add    edi,0x2c
64005b48:	jmp    0x64005b4e
64005b4a:	mov    edi,DWORD PTR [esp+0x1c]
64005b4e:	mov    eax,ds:0x64031268
64005b53:	test   eax,eax
64005b55:	jne    0x64005b65
64005b57:	push   eax
64005b58:	push   eax
64005b59:	push   eax
64005b5a:	call   DWORD PTR ds:0x64025064
64005b60:	mov    ds:0x64031268,eax
64005b65:	push   eax
64005b66:	call   DWORD PTR ds:0x64025078
64005b6c:	cmp    DWORD PTR [esp+0x38],0x8
64005b71:	jb     0x64005b80
64005b73:	mov    ecx,DWORD PTR [esp+0x24]
64005b77:	push   ecx
64005b78:	call   0x64012612
64005b7d:	add    esp,0x4
64005b80:	mov    eax,edi
64005b82:	mov    ecx,DWORD PTR [esp+0x60]
64005b86:	mov    DWORD PTR fs:0x0,ecx
64005b8d:	pop    ecx
64005b8e:	pop    edi
64005b8f:	pop    esi
64005b90:	pop    ebx
64005b91:	mov    ecx,DWORD PTR [esp+0x48]
64005b95:	xor    ecx,esp
64005b97:	call   0x64012e6c
64005b9c:	mov    esp,ebp
64005b9e:	pop    ebp
64005b9f:	ret    
64005ba0:	push   ebp
64005ba1:	mov    ebp,esp
64005ba3:	and    esp,0xfffffff8
64005ba6:	sub    esp,0x1c
64005ba9:	mov    ecx,DWORD PTR [ebp+0x8]
64005bac:	mov    eax,DWORD PTR [ecx+0x4]
64005baf:	push   ebx
64005bb0:	push   esi
64005bb1:	mov    esi,DWORD PTR [eax+0x4]
64005bb4:	cmp    BYTE PTR [esi+0x29],0x0
64005bb8:	mov    ebx,eax
64005bba:	mov    al,0x1
64005bbc:	push   edi
64005bbd:	mov    BYTE PTR [esp+0x10],al
64005bc1:	jne    0x64005c62
64005bc7:	mov    edx,DWORD PTR [ebp+0x10]
64005bca:	mov    eax,DWORD PTR [edx+0x14]
64005bcd:	mov    ecx,DWORD PTR [edx+0x18]
64005bd0:	mov    DWORD PTR [esp+0x18],eax
64005bd4:	mov    DWORD PTR [esp+0x14],eax
64005bd8:	mov    DWORD PTR [esp+0x1c],ecx
64005bdc:	jmp    0x64005be7
64005bde:	mov    edi,edi
64005be0:	mov    edx,DWORD PTR [ebp+0x10]
64005be3:	mov    eax,DWORD PTR [esp+0x14]
64005be7:	cmp    DWORD PTR [esi+0x24],0x10
64005beb:	mov    ebx,DWORD PTR [esi+0x20]
64005bee:	mov    DWORD PTR [esp+0x20],esi
64005bf2:	jb     0x64005bf9
64005bf4:	mov    ecx,DWORD PTR [esi+0x10]
64005bf7:	jmp    0x64005bfc
64005bf9:	lea    ecx,[esi+0x10]
64005bfc:	mov    edi,DWORD PTR [esp+0x18]
64005c00:	cmp    eax,edi
64005c02:	mov    DWORD PTR [esp+0xc],ecx
64005c06:	jae    0x64005c0a
64005c08:	mov    edi,eax
64005c0a:	cmp    edi,ebx
64005c0c:	mov    ecx,edi
64005c0e:	jb     0x64005c12
64005c10:	mov    ecx,ebx
64005c12:	cmp    DWORD PTR [esp+0x1c],0x10
64005c17:	lea    eax,[edx+0x4]
64005c1a:	jb     0x64005c1e
64005c1c:	mov    eax,DWORD PTR [eax]
64005c1e:	mov    edx,DWORD PTR [esp+0xc]
64005c22:	push   ecx
64005c23:	push   edx
64005c24:	push   eax
64005c25:	call   0x64002c80
64005c2a:	add    esp,0xc
64005c2d:	test   eax,eax
64005c2f:	jne    0x64005c43
64005c31:	cmp    edi,ebx
64005c33:	jae    0x64005c3a
64005c35:	or     eax,0xffffffff
64005c38:	jmp    0x64005c41
64005c3a:	xor    eax,eax
64005c3c:	cmp    edi,ebx
64005c3e:	setne  al
64005c41:	test   eax,eax
64005c43:	setl   al
64005c46:	test   al,al
64005c48:	mov    BYTE PTR [esp+0x10],al
64005c4c:	je     0x64005c52
64005c4e:	mov    esi,DWORD PTR [esi]
64005c50:	jmp    0x64005c55
64005c52:	mov    esi,DWORD PTR [esi+0x8]
64005c55:	cmp    BYTE PTR [esi+0x29],0x0
64005c59:	je     0x64005be0
64005c5b:	mov    ebx,DWORD PTR [esp+0x20]
64005c5f:	mov    ecx,DWORD PTR [ebp+0x8]
64005c62:	test   al,al
64005c64:	mov    esi,ebx
64005c66:	mov    DWORD PTR [esp+0x24],esi
64005c6a:	mov    DWORD PTR [esp+0x20],ecx
64005c6e:	je     0x64005cb3
64005c70:	mov    eax,DWORD PTR [ecx+0x4]
64005c73:	cmp    ebx,DWORD PTR [eax]
64005c75:	jne    0x64005ca6
64005c77:	mov    edx,DWORD PTR [ebp+0x10]
64005c7a:	push   edx
64005c7b:	push   0x1
64005c7d:	lea    eax,[esp+0x28]
64005c81:	push   eax
64005c82:	push   ecx
64005c83:	mov    ecx,ebx
64005c85:	call   0x64006160
64005c8a:	mov    edx,DWORD PTR [eax]
64005c8c:	mov    ecx,DWORD PTR [ebp+0xc]
64005c8f:	mov    eax,DWORD PTR [eax+0x4]
64005c92:	mov    DWORD PTR [ecx+0x4],eax
64005c95:	mov    DWORD PTR [ecx],edx
64005c97:	mov    BYTE PTR [ecx+0x8],0x1
64005c9b:	mov    eax,ecx
64005c9d:	pop    edi
64005c9e:	pop    esi
64005c9f:	pop    ebx
64005ca0:	mov    esp,ebp
64005ca2:	pop    ebp
64005ca3:	ret    0xc
64005ca6:	lea    esi,[esp+0x20]
64005caa:	call   0x640077e0
64005caf:	mov    esi,DWORD PTR [esp+0x24]
64005cb3:	mov    edi,DWORD PTR [ebp+0x10]
64005cb6:	cmp    DWORD PTR [edi+0x18],0x10
64005cba:	mov    edx,DWORD PTR [edi+0x14]
64005cbd:	lea    ecx,[esi+0xc]
64005cc0:	jb     0x64005cc7
64005cc2:	mov    eax,DWORD PTR [edi+0x4]
64005cc5:	jmp    0x64005cca
64005cc7:	lea    eax,[edi+0x4]
64005cca:	push   edx
64005ccb:	mov    edx,DWORD PTR [ecx+0x14]
64005cce:	push   eax
64005ccf:	push   edx
64005cd0:	push   0x0
64005cd2:	call   0x64005e30
64005cd7:	test   eax,eax
64005cd9:	jge    0x64005d0d
64005cdb:	mov    eax,DWORD PTR [esp+0x10]
64005cdf:	mov    edx,DWORD PTR [ebp+0x8]
64005ce2:	push   edi
64005ce3:	push   eax
64005ce4:	lea    ecx,[esp+0x28]
64005ce8:	push   ecx
64005ce9:	push   edx
64005cea:	mov    ecx,ebx
64005cec:	call   0x64006160
64005cf1:	mov    edx,DWORD PTR [eax]
64005cf3:	mov    ecx,DWORD PTR [ebp+0xc]
64005cf6:	mov    eax,DWORD PTR [eax+0x4]
64005cf9:	mov    DWORD PTR [ecx+0x4],eax
64005cfc:	mov    DWORD PTR [ecx],edx
64005cfe:	mov    BYTE PTR [ecx+0x8],0x1
64005d02:	mov    eax,ecx
64005d04:	pop    edi
64005d05:	pop    esi
64005d06:	pop    ebx
64005d07:	mov    esp,ebp
64005d09:	pop    ebp
64005d0a:	ret    0xc
64005d0d:	mov    eax,DWORD PTR [ebp+0xc]
64005d10:	mov    ecx,DWORD PTR [esp+0x20]
64005d14:	pop    edi
64005d15:	mov    DWORD PTR [eax+0x4],esi
64005d18:	pop    esi
64005d19:	mov    DWORD PTR [eax],ecx
64005d1b:	mov    BYTE PTR [eax+0x8],0x0
64005d1f:	pop    ebx
64005d20:	mov    esp,ebp
64005d22:	pop    ebp
64005d23:	ret    0xc
64005d26:	int3   
64005d27:	int3   
64005d28:	int3   
64005d29:	int3   
64005d2a:	int3   
64005d2b:	int3   
64005d2c:	int3   
64005d2d:	int3   
64005d2e:	int3   
64005d2f:	int3   
64005d30:	push   ebp
64005d31:	mov    ebp,esp
64005d33:	and    esp,0xfffffff8
64005d36:	sub    esp,0x8
64005d39:	push   ebx
64005d3a:	push   edi
64005d3b:	mov    ecx,esi
64005d3d:	mov    edi,eax
64005d3f:	call   0x64007700
64005d44:	test   esi,esi
64005d46:	mov    ebx,eax
64005d48:	jne    0x64005d4f
64005d4a:	call   0x640129c8
64005d4f:	mov    ecx,edi
64005d51:	mov    eax,esi
64005d53:	call   0x64007650
64005d58:	test   esi,esi
64005d5a:	mov    edi,eax
64005d5c:	jne    0x64005d63
64005d5e:	call   0x640129c8
64005d63:	mov    DWORD PTR [esp+0xc],0x0
64005d6b:	mov    eax,DWORD PTR [esp+0xc]
64005d6f:	push   eax
64005d70:	push   ebx
64005d71:	push   esi
64005d72:	push   edi
64005d73:	push   esi
64005d74:	lea    ebx,[esp+0x20]
64005d78:	call   0x64009340
64005d7d:	mov    eax,DWORD PTR [esp+0x20]
64005d81:	add    esp,0x14
64005d84:	pop    edi
64005d85:	pop    ebx
64005d86:	mov    esp,ebp
64005d88:	pop    ebp
64005d89:	ret    
64005d8a:	int3   
64005d8b:	int3   
64005d8c:	int3   
64005d8d:	int3   
64005d8e:	int3   
64005d8f:	int3   
64005d90:	push   ebp
64005d91:	mov    ebp,esp
64005d93:	and    esp,0xfffffff8
64005d96:	mov    edx,DWORD PTR [eax+0x4]
64005d99:	mov    ecx,DWORD PTR ds:0x64031350
64005d9f:	mov    DWORD PTR ds:0x64031350,edx
64005da5:	mov    DWORD PTR [eax+0x4],ecx
64005da8:	mov    edx,DWORD PTR [eax+0x8]
64005dab:	mov    ecx,DWORD PTR ds:0x64031354
64005db1:	mov    DWORD PTR ds:0x64031354,edx
64005db7:	mov    DWORD PTR [eax+0x8],ecx
64005dba:	mov    esp,ebp
64005dbc:	pop    ebp
64005dbd:	ret    
64005dbe:	int3   
64005dbf:	int3   
64005dc0:	mov    ecx,DWORD PTR [eax]
64005dc2:	push   esi
64005dc3:	mov    esi,DWORD PTR [edi]
64005dc5:	lea    eax,[ecx-0x10]
64005dc8:	sub    esi,0x10
64005dcb:	cmp    eax,esi
64005dcd:	je     0x64005e1d
64005dcf:	cmp    DWORD PTR [esi+0xc],0x0
64005dd3:	push   ebx
64005dd4:	lea    ebx,[esi+0xc]
64005dd7:	jl     0x64005e0c
64005dd9:	mov    edx,DWORD PTR [eax]
64005ddb:	cmp    edx,DWORD PTR [esi]
64005ddd:	jne    0x64005e0c
64005ddf:	push   ebp
64005de0:	push   eax
64005de1:	call   0x640028b0
64005de6:	mov    ebp,eax
64005de8:	add    esp,0x4
64005deb:	or     eax,0xffffffff
64005dee:	lock xadd DWORD PTR [ebx],eax
64005df2:	dec    eax
64005df3:	test   eax,eax
64005df5:	jg     0x64005e01
64005df7:	mov    ecx,DWORD PTR [esi]
64005df9:	mov    edx,DWORD PTR [ecx]
64005dfb:	mov    eax,DWORD PTR [edx+0x4]
64005dfe:	push   esi
64005dff:	call   eax
64005e01:	add    ebp,0x10
64005e04:	mov    DWORD PTR [edi],ebp
64005e06:	pop    ebp
64005e07:	pop    ebx
64005e08:	mov    eax,edi
64005e0a:	pop    esi
64005e0b:	ret    
64005e0c:	mov    edx,DWORD PTR [ecx-0xc]
64005e0f:	push   edx
64005e10:	push   ecx
64005e11:	mov    ecx,edi
64005e13:	call   0x64002af0
64005e18:	pop    ebx
64005e19:	mov    eax,edi
64005e1b:	pop    esi
64005e1c:	ret    
64005e1d:	mov    eax,edi
64005e1f:	pop    esi
64005e20:	ret    
64005e21:	int3   
64005e22:	int3   
64005e23:	int3   
64005e24:	int3   
64005e25:	int3   
64005e26:	int3   
64005e27:	int3   
64005e28:	int3   
64005e29:	int3   
64005e2a:	int3   
64005e2b:	int3   
64005e2c:	int3   
64005e2d:	int3   
64005e2e:	int3   
64005e2f:	int3   
64005e30:	push   ebx
64005e31:	push   ebp
64005e32:	mov    ebp,DWORD PTR [esp+0xc]
64005e36:	push   esi
64005e37:	push   edi
64005e38:	mov    edi,ecx
64005e3a:	cmp    DWORD PTR [edi+0x14],ebp
64005e3d:	jae    0x64005e44
64005e3f:	call   0x640125ce
64005e44:	mov    eax,DWORD PTR [edi+0x14]
64005e47:	mov    esi,DWORD PTR [esp+0x18]
64005e4b:	sub    eax,ebp
64005e4d:	cmp    eax,esi
64005e4f:	jae    0x64005e53
64005e51:	mov    esi,eax
64005e53:	mov    ebx,DWORD PTR [esp+0x20]
64005e57:	cmp    esi,ebx
64005e59:	mov    eax,esi
64005e5b:	jb     0x64005e5f
64005e5d:	mov    eax,ebx
64005e5f:	cmp    DWORD PTR [edi+0x18],0x10
64005e63:	jb     0x64005e6a
64005e65:	mov    edi,DWORD PTR [edi+0x4]
64005e68:	jmp    0x64005e6d
64005e6a:	add    edi,0x4
64005e6d:	push   eax
64005e6e:	mov    eax,DWORD PTR [esp+0x20]
64005e72:	push   eax
64005e73:	add    edi,ebp
64005e75:	push   edi
64005e76:	call   0x64002c80
64005e7b:	add    esp,0xc
64005e7e:	test   eax,eax
64005e80:	jne    0x64005e97
64005e82:	cmp    esi,ebx
64005e84:	jae    0x64005e90
64005e86:	pop    edi
64005e87:	pop    esi
64005e88:	pop    ebp
64005e89:	or     eax,0xffffffff
64005e8c:	pop    ebx
64005e8d:	ret    0x10
64005e90:	xor    eax,eax
64005e92:	cmp    esi,ebx
64005e94:	setne  al
64005e97:	pop    edi
64005e98:	pop    esi
64005e99:	pop    ebp
64005e9a:	pop    ebx
64005e9b:	ret    0x10
64005e9e:	int3   
64005e9f:	int3   
64005ea0:	push   0xffffffff
64005ea2:	push   0x64022fae
64005ea7:	mov    eax,fs:0x0
64005ead:	push   eax
64005eae:	mov    eax,ds:0x6402d09c
64005eb3:	xor    eax,esp
64005eb5:	push   eax
64005eb6:	lea    eax,[esp+0x4]
64005eba:	mov    fs:0x0,eax
64005ec0:	test   BYTE PTR ds:0x6403133c,0x1
64005ec7:	jne    0x64005f19
64005ec9:	or     DWORD PTR ds:0x6403133c,0x1
64005ed0:	mov    ecx,0x64031320
64005ed5:	mov    DWORD PTR [esp+0xc],0x0
64005edd:	call   0x64008e00
64005ee2:	mov    ds:0x64031324,eax
64005ee7:	mov    BYTE PTR [eax+0x45],0x1
64005eeb:	mov    eax,ds:0x64031324
64005ef0:	mov    DWORD PTR [eax+0x4],eax
64005ef3:	mov    eax,ds:0x64031324
64005ef8:	mov    DWORD PTR [eax],eax
64005efa:	mov    eax,ds:0x64031324
64005eff:	mov    DWORD PTR [eax+0x8],eax
64005f02:	push   0x64024300
64005f07:	mov    DWORD PTR ds:0x64031328,0x0
64005f11:	call   0x64012f9f
64005f16:	add    esp,0x4
64005f19:	mov    eax,0x64031320
64005f1e:	mov    ecx,DWORD PTR [esp+0x4]
64005f22:	mov    DWORD PTR fs:0x0,ecx
64005f29:	pop    ecx
64005f2a:	add    esp,0xc
64005f2d:	ret    
64005f2e:	int3   
64005f2f:	int3   
64005f30:	push   0xffffffff
64005f32:	push   0x64022b28
64005f37:	mov    eax,fs:0x0
64005f3d:	push   eax
64005f3e:	push   ecx
64005f3f:	push   ebx
64005f40:	push   ebp
64005f41:	push   esi
64005f42:	push   edi
64005f43:	mov    eax,ds:0x6402d09c
64005f48:	xor    eax,esp
64005f4a:	push   eax
64005f4b:	lea    eax,[esp+0x18]
64005f4f:	mov    fs:0x0,eax
64005f55:	mov    esi,DWORD PTR [esp+0x28]
64005f59:	xor    eax,eax
64005f5b:	mov    DWORD PTR [esp+0x14],eax
64005f5f:	mov    DWORD PTR [esp+0x20],eax
64005f63:	push   0xffffffff
64005f65:	mov    DWORD PTR [esi+0x14],eax
64005f68:	mov    DWORD PTR [esi+0x18],0xf
64005f6f:	lea    ebp,[esi+0x4]
64005f72:	push   eax
64005f73:	mov    BYTE PTR [ebp+0x0],al
64005f76:	lea    eax,[esp+0x34]
64005f7a:	push   eax
64005f7b:	mov    ecx,esi
64005f7d:	call   0x64001780
64005f82:	mov    eax,DWORD PTR [esi+0x14]
64005f85:	mov    edi,0x1
64005f8a:	cmp    eax,edi
64005f8c:	jbe    0x64005fcd
64005f8e:	cmp    edi,eax
64005f90:	jbe    0x64005f97
64005f92:	call   0x640129c8
64005f97:	cmp    DWORD PTR [esi+0x18],0x10
64005f9b:	jb     0x64005fa2
64005f9d:	mov    ebx,DWORD PTR [ebp+0x0]
64005fa0:	jmp    0x64005fa4
64005fa2:	mov    ebx,ebp
64005fa4:	lea    ecx,[edi-0x1]
64005fa7:	cmp    ecx,DWORD PTR [esi+0x14]
64005faa:	jbe    0x64005fb1
64005fac:	call   0x640129c8
64005fb1:	cmp    DWORD PTR [esi+0x18],0x10
64005fb5:	jb     0x64005fbc
64005fb7:	mov    eax,DWORD PTR [ebp+0x0]
64005fba:	jmp    0x64005fbe
64005fbc:	mov    eax,ebp
64005fbe:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64005fc2:	xor    BYTE PTR [ebx+edi*1],dl
64005fc5:	add    edi,0x1
64005fc8:	cmp    edi,DWORD PTR [esi+0x14]
64005fcb:	jb     0x64005f97
64005fcd:	cmp    DWORD PTR [esp+0x44],0x10
64005fd2:	jb     0x64005fe1
64005fd4:	mov    eax,DWORD PTR [esp+0x30]
64005fd8:	push   eax
64005fd9:	call   0x64012612
64005fde:	add    esp,0x4
64005fe1:	mov    eax,esi
64005fe3:	mov    ecx,DWORD PTR [esp+0x18]
64005fe7:	mov    DWORD PTR fs:0x0,ecx
64005fee:	pop    ecx
64005fef:	pop    edi
64005ff0:	pop    esi
64005ff1:	pop    ebp
64005ff2:	pop    ebx
64005ff3:	add    esp,0x10
64005ff6:	ret    
64005ff7:	int3   
64005ff8:	int3   
64005ff9:	int3   
64005ffa:	int3   
64005ffb:	int3   
64005ffc:	int3   
64005ffd:	int3   
64005ffe:	int3   
64005fff:	int3   
64006000:	push   0xffffffff
64006002:	push   0x64022f7e
64006007:	mov    eax,fs:0x0
6400600d:	push   eax
6400600e:	mov    eax,ds:0x6402d09c
64006013:	xor    eax,esp
64006015:	push   eax
64006016:	lea    eax,[esp+0x4]
6400601a:	mov    fs:0x0,eax
64006020:	test   BYTE PTR ds:0x64031338,0x1
64006027:	jne    0x64006079
64006029:	or     DWORD PTR ds:0x64031338,0x1
64006030:	mov    ecx,0x6403132c
64006035:	mov    DWORD PTR [esp+0xc],0x0
6400603d:	call   0x64008e00
64006042:	mov    ds:0x64031330,eax
64006047:	mov    BYTE PTR [eax+0x45],0x1
6400604b:	mov    eax,ds:0x64031330
64006050:	mov    DWORD PTR [eax+0x4],eax
64006053:	mov    eax,ds:0x64031330
64006058:	mov    DWORD PTR [eax],eax
6400605a:	mov    eax,ds:0x64031330
6400605f:	mov    DWORD PTR [eax+0x8],eax
64006062:	push   0x640242b0
64006067:	mov    DWORD PTR ds:0x64031334,0x0
64006071:	call   0x64012f9f
64006076:	add    esp,0x4
64006079:	mov    eax,0x6403132c
6400607e:	mov    ecx,DWORD PTR [esp+0x4]
64006082:	mov    DWORD PTR fs:0x0,ecx
64006089:	pop    ecx
6400608a:	add    esp,0xc
6400608d:	ret    
6400608e:	int3   
6400608f:	int3   
64006090:	push   0xffffffff
64006092:	push   0x64022af8
64006097:	mov    eax,fs:0x0
6400609d:	push   eax
6400609e:	push   ecx
6400609f:	push   ebx
640060a0:	push   ebp
640060a1:	push   esi
640060a2:	push   edi
640060a3:	mov    eax,ds:0x6402d09c
640060a8:	xor    eax,esp
640060aa:	push   eax
640060ab:	lea    eax,[esp+0x18]
640060af:	mov    fs:0x0,eax
640060b5:	mov    esi,DWORD PTR [esp+0x28]
640060b9:	xor    eax,eax
640060bb:	mov    DWORD PTR [esp+0x14],eax
640060bf:	mov    DWORD PTR [esp+0x20],eax
640060c3:	push   0xffffffff
640060c5:	mov    DWORD PTR [esi+0x14],eax
640060c8:	mov    DWORD PTR [esi+0x18],0x7
640060cf:	lea    ebp,[esi+0x4]
640060d2:	push   eax
640060d3:	mov    WORD PTR [ebp+0x0],ax
640060d7:	lea    eax,[esp+0x34]
640060db:	push   eax
640060dc:	mov    ecx,esi
640060de:	call   0x64006ea0
640060e3:	mov    eax,DWORD PTR [esi+0x14]
640060e6:	mov    edi,0x1
640060eb:	cmp    eax,edi
640060ed:	jbe    0x64006130
640060ef:	cmp    edi,eax
640060f1:	jbe    0x640060f8
640060f3:	call   0x640129c8
640060f8:	cmp    DWORD PTR [esi+0x18],0x8
640060fc:	jb     0x64006103
640060fe:	mov    ebx,DWORD PTR [ebp+0x0]
64006101:	jmp    0x64006105
64006103:	mov    ebx,ebp
64006105:	lea    ecx,[edi-0x1]
64006108:	cmp    ecx,DWORD PTR [esi+0x14]
6400610b:	jbe    0x64006112
6400610d:	call   0x640129c8
64006112:	cmp    DWORD PTR [esi+0x18],0x8
64006116:	jb     0x6400611d
64006118:	mov    eax,DWORD PTR [ebp+0x0]
6400611b:	jmp    0x6400611f
6400611d:	mov    eax,ebp
6400611f:	mov    dx,WORD PTR [eax+edi*2-0x2]
64006124:	xor    WORD PTR [ebx+edi*2],dx
64006128:	add    edi,0x1
6400612b:	cmp    edi,DWORD PTR [esi+0x14]
6400612e:	jb     0x640060f8
64006130:	cmp    DWORD PTR [esp+0x44],0x8
64006135:	jb     0x64006144
64006137:	mov    eax,DWORD PTR [esp+0x30]
6400613b:	push   eax
6400613c:	call   0x64012612
64006141:	add    esp,0x4
64006144:	mov    eax,esi
64006146:	mov    ecx,DWORD PTR [esp+0x18]
6400614a:	mov    DWORD PTR fs:0x0,ecx
64006151:	pop    ecx
64006152:	pop    edi
64006153:	pop    esi
64006154:	pop    ebp
64006155:	pop    ebx
64006156:	add    esp,0x10
64006159:	ret    
6400615a:	int3   
6400615b:	int3   
6400615c:	int3   
6400615d:	int3   
6400615e:	int3   
6400615f:	int3   
64006160:	push   0xffffffff
64006162:	push   0x64022f48
64006167:	mov    eax,fs:0x0
6400616d:	push   eax
6400616e:	sub    esp,0x44
64006171:	push   ebx
64006172:	push   ebp
64006173:	push   esi
64006174:	push   edi
64006175:	mov    eax,ds:0x6402d09c
6400617a:	xor    eax,esp
6400617c:	push   eax
6400617d:	lea    eax,[esp+0x58]
64006181:	mov    fs:0x0,eax
64006187:	mov    esi,ecx
64006189:	mov    ebp,DWORD PTR [esp+0x68]
6400618d:	xor    ebx,ebx
6400618f:	cmp    DWORD PTR [ebp+0x8],0x9249248
64006196:	jb     0x640061e1
64006198:	push   0x13
6400619a:	push   0x640283d4
6400619f:	lea    ecx,[esp+0x1c]
640061a3:	mov    DWORD PTR [esp+0x34],0xf
640061ab:	mov    DWORD PTR [esp+0x30],ebx
640061af:	mov    BYTE PTR [esp+0x20],bl
640061b3:	call   0x64001860
640061b8:	lea    eax,[esp+0x14]
640061bc:	push   eax
640061bd:	lea    ecx,[esp+0x34]
640061c1:	mov    DWORD PTR [esp+0x64],ebx
640061c5:	call   0x64002d10
640061ca:	push   0x6402ab28
640061cf:	lea    ecx,[esp+0x34]
640061d3:	push   ecx
640061d4:	mov    DWORD PTR [esp+0x38],0x6402531c
640061dc:	call   0x64012a5b
640061e1:	mov    edx,DWORD PTR [esp+0x74]
640061e5:	mov    eax,DWORD PTR [ebp+0x4]
640061e8:	push   ebx
640061e9:	push   edx
640061ea:	push   eax
640061eb:	push   esi
640061ec:	push   eax
640061ed:	call   0x64006b60
640061f2:	mov    ecx,DWORD PTR [ebp+0x4]
640061f5:	mov    edx,eax
640061f7:	mov    eax,0x1
640061fc:	add    DWORD PTR [ebp+0x8],eax
640061ff:	cmp    esi,ecx
64006201:	mov    DWORD PTR [esp+0x68],edx
64006205:	jne    0x64006214
64006207:	mov    DWORD PTR [ecx+0x4],edx
6400620a:	mov    ecx,DWORD PTR [ebp+0x4]
6400620d:	mov    DWORD PTR [ecx],edx
6400620f:	mov    ecx,DWORD PTR [ebp+0x4]
64006212:	jmp    0x64006232
64006214:	cmp    BYTE PTR [esp+0x70],bl
64006218:	je     0x64006227
6400621a:	mov    DWORD PTR [esi],edx
6400621c:	mov    ecx,DWORD PTR [ebp+0x4]
6400621f:	cmp    esi,DWORD PTR [ecx]
64006221:	jne    0x64006235
64006223:	mov    DWORD PTR [ecx],edx
64006225:	jmp    0x64006235
64006227:	mov    DWORD PTR [esi+0x8],edx
6400622a:	mov    ecx,DWORD PTR [ebp+0x4]
6400622d:	cmp    esi,DWORD PTR [ecx+0x8]
64006230:	jne    0x64006235
64006232:	mov    DWORD PTR [ecx+0x8],edx
64006235:	mov    esi,DWORD PTR [edx+0x4]
64006238:	cmp    BYTE PTR [esi+0x28],bl
6400623b:	lea    ecx,[edx+0x4]
6400623e:	jne    0x640063b6
64006244:	mov    esi,DWORD PTR [ecx]
64006246:	mov    edi,DWORD PTR [esi+0x4]
64006249:	cmp    esi,DWORD PTR [edi]
6400624b:	jne    0x640062f7
64006251:	mov    edi,DWORD PTR [edi+0x8]
64006254:	cmp    BYTE PTR [edi+0x28],bl
64006257:	je     0x640062fe
6400625d:	cmp    edx,DWORD PTR [esi+0x8]
64006260:	jne    0x6400629d
64006262:	mov    edx,esi
64006264:	mov    esi,DWORD PTR [edx+0x8]
64006267:	mov    ecx,DWORD PTR [esi]
64006269:	mov    DWORD PTR [edx+0x8],ecx
6400626c:	mov    ecx,DWORD PTR [esi]
6400626e:	cmp    BYTE PTR [ecx+0x29],bl
64006271:	jne    0x64006276
64006273:	mov    DWORD PTR [ecx+0x4],edx
64006276:	mov    edi,DWORD PTR [edx+0x4]
64006279:	lea    ecx,[edx+0x4]
6400627c:	mov    DWORD PTR [esi+0x4],edi
6400627f:	mov    edi,DWORD PTR [ebp+0x4]
64006282:	cmp    edx,DWORD PTR [edi+0x4]
64006285:	jne    0x6400628c
64006287:	mov    DWORD PTR [edi+0x4],esi
6400628a:	jmp    0x64006299
6400628c:	mov    edi,DWORD PTR [ecx]
6400628e:	cmp    edx,DWORD PTR [edi]
64006290:	jne    0x64006296
64006292:	mov    DWORD PTR [edi],esi
64006294:	jmp    0x64006299
64006296:	mov    DWORD PTR [edi+0x8],esi
64006299:	mov    DWORD PTR [esi],edx
6400629b:	mov    DWORD PTR [ecx],esi
6400629d:	mov    esi,DWORD PTR [ecx]
6400629f:	mov    BYTE PTR [esi+0x28],al
640062a2:	mov    esi,DWORD PTR [ecx]
640062a4:	mov    esi,DWORD PTR [esi+0x4]
640062a7:	mov    BYTE PTR [esi+0x28],bl
640062aa:	mov    ecx,DWORD PTR [ecx]
640062ac:	mov    ecx,DWORD PTR [ecx+0x4]
640062af:	mov    esi,DWORD PTR [ecx]
640062b1:	mov    edi,DWORD PTR [esi+0x8]
640062b4:	mov    DWORD PTR [ecx],edi
640062b6:	mov    edi,DWORD PTR [esi+0x8]
640062b9:	cmp    BYTE PTR [edi+0x29],bl
640062bc:	jne    0x640062c1
640062be:	mov    DWORD PTR [edi+0x4],ecx
640062c1:	mov    edi,DWORD PTR [ecx+0x4]
640062c4:	mov    DWORD PTR [esi+0x4],edi
640062c7:	mov    edi,DWORD PTR [ebp+0x4]
640062ca:	cmp    ecx,DWORD PTR [edi+0x4]
640062cd:	jne    0x640062da
640062cf:	mov    DWORD PTR [edi+0x4],esi
640062d2:	mov    DWORD PTR [esi+0x8],ecx
640062d5:	jmp    0x640063a0
640062da:	mov    edi,DWORD PTR [ecx+0x4]
640062dd:	cmp    ecx,DWORD PTR [edi+0x8]
640062e0:	jne    0x640062ed
640062e2:	mov    DWORD PTR [edi+0x8],esi
640062e5:	mov    DWORD PTR [esi+0x8],ecx
640062e8:	jmp    0x640063a0
640062ed:	mov    DWORD PTR [edi],esi
640062ef:	mov    DWORD PTR [esi+0x8],ecx
640062f2:	jmp    0x640063a0
640062f7:	mov    edi,DWORD PTR [edi]
640062f9:	cmp    BYTE PTR [edi+0x28],bl
640062fc:	jne    0x64006318
640062fe:	mov    edx,esi
64006300:	mov    BYTE PTR [edx+0x28],al
64006303:	mov    BYTE PTR [edi+0x28],al
64006306:	mov    edx,DWORD PTR [ecx]
64006308:	mov    edx,DWORD PTR [edx+0x4]
6400630b:	mov    BYTE PTR [edx+0x28],bl
6400630e:	mov    ecx,DWORD PTR [ecx]
64006310:	mov    edx,DWORD PTR [ecx+0x4]
64006313:	jmp    0x640063a3
64006318:	cmp    edx,DWORD PTR [esi]
6400631a:	jne    0x64006359
6400631c:	mov    edx,esi
6400631e:	mov    esi,DWORD PTR [edx]
64006320:	mov    ecx,DWORD PTR [esi+0x8]
64006323:	mov    DWORD PTR [edx],ecx
64006325:	mov    ecx,DWORD PTR [esi+0x8]
64006328:	cmp    BYTE PTR [ecx+0x29],bl
6400632b:	jne    0x64006330
6400632d:	mov    DWORD PTR [ecx+0x4],edx
64006330:	mov    edi,DWORD PTR [edx+0x4]
64006333:	lea    ecx,[edx+0x4]
64006336:	mov    DWORD PTR [esi+0x4],edi
64006339:	mov    edi,DWORD PTR [ebp+0x4]
6400633c:	cmp    edx,DWORD PTR [edi+0x4]
6400633f:	jne    0x64006346
64006341:	mov    DWORD PTR [edi+0x4],esi
64006344:	jmp    0x64006354
64006346:	mov    edi,DWORD PTR [ecx]
64006348:	cmp    edx,DWORD PTR [edi+0x8]
6400634b:	jne    0x64006352
6400634d:	mov    DWORD PTR [edi+0x8],esi
64006350:	jmp    0x64006354
64006352:	mov    DWORD PTR [edi],esi
64006354:	mov    DWORD PTR [esi+0x8],edx
64006357:	mov    DWORD PTR [ecx],esi
64006359:	mov    esi,DWORD PTR [ecx]
6400635b:	mov    BYTE PTR [esi+0x28],al
6400635e:	mov    esi,DWORD PTR [ecx]
64006360:	mov    esi,DWORD PTR [esi+0x4]
64006363:	mov    BYTE PTR [esi+0x28],bl
64006366:	mov    ecx,DWORD PTR [ecx]
64006368:	mov    ecx,DWORD PTR [ecx+0x4]
6400636b:	mov    esi,DWORD PTR [ecx+0x8]
6400636e:	mov    edi,DWORD PTR [esi]
64006370:	mov    DWORD PTR [ecx+0x8],edi
64006373:	mov    edi,DWORD PTR [esi]
64006375:	cmp    BYTE PTR [edi+0x29],bl
64006378:	jne    0x6400637d
6400637a:	mov    DWORD PTR [edi+0x4],ecx
6400637d:	mov    edi,DWORD PTR [ecx+0x4]
64006380:	mov    DWORD PTR [esi+0x4],edi
64006383:	mov    edi,DWORD PTR [ebp+0x4]
64006386:	cmp    ecx,DWORD PTR [edi+0x4]
64006389:	jne    0x64006390
6400638b:	mov    DWORD PTR [edi+0x4],esi
6400638e:	jmp    0x6400639e
64006390:	mov    edi,DWORD PTR [ecx+0x4]
64006393:	cmp    ecx,DWORD PTR [edi]
64006395:	jne    0x6400639b
64006397:	mov    DWORD PTR [edi],esi
64006399:	jmp    0x6400639e
6400639b:	mov    DWORD PTR [edi+0x8],esi
6400639e:	mov    DWORD PTR [esi],ecx
640063a0:	mov    DWORD PTR [ecx+0x4],esi
640063a3:	mov    esi,DWORD PTR [edx+0x4]
640063a6:	cmp    BYTE PTR [esi+0x28],bl
640063a9:	lea    ecx,[edx+0x4]
640063ac:	je     0x64006244
640063b2:	mov    edx,DWORD PTR [esp+0x68]
640063b6:	mov    ecx,DWORD PTR [ebp+0x4]
640063b9:	mov    ecx,DWORD PTR [ecx+0x4]
640063bc:	mov    BYTE PTR [ecx+0x28],al
640063bf:	mov    ecx,DWORD PTR [esp+0x6c]
640063c3:	mov    DWORD PTR [ecx+0x4],edx
640063c6:	mov    DWORD PTR [ecx],ebp
640063c8:	mov    eax,ecx
640063ca:	mov    ecx,DWORD PTR [esp+0x58]
640063ce:	mov    DWORD PTR fs:0x0,ecx
640063d5:	pop    ecx
640063d6:	pop    edi
640063d7:	pop    esi
640063d8:	pop    ebp
640063d9:	pop    ebx
640063da:	add    esp,0x50
640063dd:	ret    0x10
640063e0:	push   ebp
640063e1:	mov    ebp,esp
640063e3:	and    esp,0xfffffff8
640063e6:	sub    esp,0xc
640063e9:	push   edi
640063ea:	mov    edi,eax
640063ec:	mov    eax,DWORD PTR [edi+0x4]
640063ef:	mov    ecx,DWORD PTR [eax]
640063f1:	push   eax
640063f2:	push   edi
640063f3:	push   ecx
640063f4:	push   edi
640063f5:	lea    eax,[esp+0x18]
640063f9:	push   eax
640063fa:	call   0x640069b0
640063ff:	mov    ecx,DWORD PTR [edi+0x4]
64006402:	push   ecx
64006403:	call   0x64012612
64006408:	add    esp,0x4
6400640b:	xor    eax,eax
6400640d:	mov    DWORD PTR [edi+0x4],eax
64006410:	mov    DWORD PTR [edi+0x8],eax
64006413:	pop    edi
64006414:	mov    esp,ebp
64006416:	pop    ebp
64006417:	ret    
64006418:	int3   
64006419:	int3   
6400641a:	int3   
6400641b:	int3   
6400641c:	int3   
6400641d:	int3   
6400641e:	int3   
6400641f:	int3   
64006420:	mov    eax,DWORD PTR [esp+0x8]
64006424:	cmp    DWORD PTR [eax+0x18],0x10
64006428:	mov    ecx,DWORD PTR [eax+0x14]
6400642b:	jb     0x64006432
6400642d:	mov    eax,DWORD PTR [eax+0x4]
64006430:	jmp    0x64006435
64006432:	add    eax,0x4
64006435:	push   ecx
64006436:	mov    ecx,DWORD PTR [esp+0x8]
6400643a:	push   eax
6400643b:	mov    eax,DWORD PTR [ecx+0x14]
6400643e:	push   eax
6400643f:	push   0x0
64006441:	call   0x64005e30
64006446:	xor    ecx,ecx
64006448:	test   eax,eax
6400644a:	setl   cl
6400644d:	mov    al,cl
6400644f:	ret    0x8
64006452:	int3   
64006453:	int3   
64006454:	int3   
64006455:	int3   
64006456:	int3   
64006457:	int3   
64006458:	int3   
64006459:	int3   
6400645a:	int3   
6400645b:	int3   
6400645c:	int3   
6400645d:	int3   
6400645e:	int3   
6400645f:	int3   
64006460:	cmp    DWORD PTR [esi],0x0
64006463:	jne    0x6400646a
64006465:	call   0x640129c8
6400646a:	mov    eax,DWORD PTR [esi+0x4]
6400646d:	cmp    BYTE PTR [eax+0x29],0x0
64006471:	je     0x64006478
64006473:	jmp    0x640129c8
64006478:	mov    ecx,DWORD PTR [eax+0x8]
6400647b:	cmp    BYTE PTR [ecx+0x29],0x0
6400647f:	jne    0x6400649e
64006481:	mov    eax,DWORD PTR [ecx]
64006483:	cmp    BYTE PTR [eax+0x29],0x0
64006487:	jne    0x6400649a
64006489:	lea    esp,[esp+0x0]
64006490:	mov    ecx,eax
64006492:	mov    eax,DWORD PTR [ecx]
64006494:	cmp    BYTE PTR [eax+0x29],0x0
64006498:	je     0x64006490
6400649a:	mov    DWORD PTR [esi+0x4],ecx
6400649d:	ret    
6400649e:	mov    eax,DWORD PTR [eax+0x4]
640064a1:	cmp    BYTE PTR [eax+0x29],0x0
640064a5:	jne    0x640064bd
640064a7:	mov    ecx,DWORD PTR [esi+0x4]
640064aa:	cmp    ecx,DWORD PTR [eax+0x8]
640064ad:	jne    0x640064bd
640064af:	mov    DWORD PTR [esi+0x4],eax
640064b2:	mov    edx,eax
640064b4:	mov    eax,DWORD PTR [edx+0x4]
640064b7:	cmp    BYTE PTR [eax+0x29],0x0
640064bb:	je     0x640064a7
640064bd:	mov    DWORD PTR [esi+0x4],eax
640064c0:	ret    
640064c1:	int3   
640064c2:	int3   
640064c3:	int3   
640064c4:	int3   
640064c5:	int3   
640064c6:	int3   
640064c7:	int3   
640064c8:	int3   
640064c9:	int3   
640064ca:	int3   
640064cb:	int3   
640064cc:	int3   
640064cd:	int3   
640064ce:	int3   
640064cf:	int3   
640064d0:	push   ebp
640064d1:	mov    ebp,esp
640064d3:	and    esp,0xfffffff8
640064d6:	push   0xffffffff
640064d8:	push   0x64022f20
640064dd:	mov    eax,fs:0x0
640064e3:	push   eax
640064e4:	sub    esp,0x60
640064e7:	push   ebx
640064e8:	push   esi
640064e9:	push   edi
640064ea:	mov    eax,ds:0x6402d09c
640064ef:	xor    eax,esp
640064f1:	push   eax
640064f2:	lea    eax,[esp+0x70]
640064f6:	mov    fs:0x0,eax
640064fc:	mov    edi,ecx
640064fe:	mov    ebx,DWORD PTR [ebp+0x8]
64006501:	push   ebx
64006502:	call   0x64007c40
64006507:	test   edi,edi
64006509:	mov    esi,eax
6400650b:	jne    0x64006512
6400650d:	call   0x640129c8
64006512:	mov    eax,DWORD PTR [edi+0x4]
64006515:	cmp    esi,eax
64006517:	je     0x64006541
64006519:	cmp    DWORD PTR [esi+0x24],0x10
6400651d:	mov    ecx,DWORD PTR [esi+0x20]
64006520:	jb     0x64006527
64006522:	mov    eax,DWORD PTR [esi+0x10]
64006525:	jmp    0x6400652a
64006527:	lea    eax,[esi+0x10]
6400652a:	push   ecx
6400652b:	push   eax
6400652c:	mov    eax,DWORD PTR [ebx+0x14]
6400652f:	push   eax
64006530:	push   0x0
64006532:	mov    ecx,ebx
64006534:	call   0x64005e30
64006539:	test   eax,eax
6400653b:	jge    0x640065f5
64006541:	xor    eax,eax
64006543:	mov    DWORD PTR [esp+0x30],0xf
6400654b:	mov    DWORD PTR [esp+0x2c],eax
6400654f:	mov    BYTE PTR [esp+0x1c],al
64006553:	lea    ecx,[esp+0x18]
64006557:	push   ecx
64006558:	push   ebx
64006559:	lea    ecx,[esp+0x3c]
6400655d:	mov    DWORD PTR [esp+0x80],eax
64006564:	call   0x64006e20
64006569:	push   eax
6400656a:	push   esi
6400656b:	push   edi
6400656c:	lea    edx,[esp+0x1c]
64006570:	push   edx
64006571:	mov    ecx,edi
64006573:	mov    BYTE PTR [esp+0x88],0x1
6400657b:	call   0x64006c10
64006580:	cmp    DWORD PTR [esp+0x68],0x10
64006585:	mov    edi,DWORD PTR [eax]
64006587:	mov    esi,DWORD PTR [eax+0x4]
6400658a:	jb     0x64006599
6400658c:	mov    eax,DWORD PTR [esp+0x54]
64006590:	push   eax
64006591:	call   0x64012612
64006596:	add    esp,0x4
64006599:	xor    ebx,ebx
6400659b:	cmp    DWORD PTR [esp+0x4c],0x10
640065a0:	mov    DWORD PTR [esp+0x68],0xf
640065a8:	mov    DWORD PTR [esp+0x64],ebx
640065ac:	mov    BYTE PTR [esp+0x54],bl
640065b0:	jb     0x640065bf
640065b2:	mov    ecx,DWORD PTR [esp+0x38]
640065b6:	push   ecx
640065b7:	call   0x64012612
640065bc:	add    esp,0x4
640065bf:	cmp    DWORD PTR [esp+0x30],0x10
640065c4:	mov    DWORD PTR [esp+0x4c],0xf
640065cc:	mov    DWORD PTR [esp+0x48],ebx
640065d0:	mov    BYTE PTR [esp+0x38],bl
640065d4:	jb     0x640065e3
640065d6:	mov    edx,DWORD PTR [esp+0x1c]
640065da:	push   edx
640065db:	call   0x64012612
640065e0:	add    esp,0x4
640065e3:	mov    DWORD PTR [esp+0x30],0xf
640065eb:	mov    DWORD PTR [esp+0x2c],ebx
640065ef:	mov    BYTE PTR [esp+0x1c],bl
640065f3:	jmp    0x640065f7
640065f5:	xor    ebx,ebx
640065f7:	cmp    edi,ebx
640065f9:	jne    0x64006600
640065fb:	call   0x640129c8
64006600:	cmp    esi,DWORD PTR [edi+0x4]
64006603:	jne    0x6400660a
64006605:	call   0x640129c8
6400660a:	lea    eax,[esi+0x28]
6400660d:	mov    ecx,DWORD PTR [esp+0x70]
64006611:	mov    DWORD PTR fs:0x0,ecx
64006618:	pop    ecx
64006619:	pop    edi
6400661a:	pop    esi
6400661b:	pop    ebx
6400661c:	mov    esp,ebp
6400661e:	pop    ebp
6400661f:	ret    0x4
64006622:	int3   
64006623:	int3   
64006624:	int3   
64006625:	int3   
64006626:	int3   
64006627:	int3   
64006628:	int3   
64006629:	int3   
6400662a:	int3   
6400662b:	int3   
6400662c:	int3   
6400662d:	int3   
6400662e:	int3   
6400662f:	int3   
64006630:	sub    esp,0x18
64006633:	push   ebx
64006634:	mov    ebx,DWORD PTR [esp+0x24]
64006638:	push   esi
64006639:	push   edi
6400663a:	push   ebx
6400663b:	mov    esi,ecx
6400663d:	call   0x64007c40
64006642:	test   esi,esi
64006644:	mov    edi,eax
64006646:	mov    DWORD PTR [esp+0x14],edi
6400664a:	jne    0x64006651
6400664c:	call   0x640129c8
64006651:	cmp    edi,DWORD PTR [esi+0x4]
64006654:	mov    DWORD PTR [esp+0x10],esi
64006658:	je     0x64006684
6400665a:	cmp    DWORD PTR [edi+0x24],0x10
6400665e:	mov    eax,DWORD PTR [edi+0x20]
64006661:	jb     0x64006668
64006663:	mov    edi,DWORD PTR [edi+0x10]
64006666:	jmp    0x6400666b
64006668:	add    edi,0x10
6400666b:	push   eax
6400666c:	mov    eax,DWORD PTR [ebx+0x14]
6400666f:	push   edi
64006670:	push   eax
64006671:	push   0x0
64006673:	mov    ecx,ebx
64006675:	call   0x64005e30
6400667a:	test   eax,eax
6400667c:	jl     0x64006684
6400667e:	lea    ecx,[esp+0x10]
64006682:	jmp    0x64006693
64006684:	mov    ecx,DWORD PTR [esi+0x4]
64006687:	mov    DWORD PTR [esp+0x1c],ecx
6400668b:	mov    DWORD PTR [esp+0x18],esi
6400668f:	lea    ecx,[esp+0x18]
64006693:	mov    edx,DWORD PTR [ecx]
64006695:	mov    eax,DWORD PTR [esp+0x28]
64006699:	mov    ecx,DWORD PTR [ecx+0x4]
6400669c:	pop    edi
6400669d:	pop    esi
6400669e:	mov    DWORD PTR [eax],edx
640066a0:	mov    DWORD PTR [eax+0x4],ecx
640066a3:	pop    ebx
640066a4:	add    esp,0x18
640066a7:	ret    0x8
640066aa:	int3   
640066ab:	int3   
640066ac:	int3   
640066ad:	int3   
640066ae:	int3   
640066af:	int3   
640066b0:	push   esi
640066b1:	mov    esi,ecx
640066b3:	mov    eax,DWORD PTR [esi]
640066b5:	test   eax,eax
640066b7:	push   edi
640066b8:	mov    edi,DWORD PTR [esp+0xc]
640066bc:	je     0x640066c2
640066be:	cmp    eax,DWORD PTR [edi]
640066c0:	je     0x640066c7
640066c2:	call   0x640129c8
640066c7:	mov    eax,DWORD PTR [esi+0x4]
640066ca:	xor    ecx,ecx
640066cc:	cmp    eax,DWORD PTR [edi+0x4]
640066cf:	pop    edi
640066d0:	sete   cl
640066d3:	mov    al,cl
640066d5:	pop    esi
640066d6:	ret    0x4
640066d9:	int3   
640066da:	int3   
640066db:	int3   
640066dc:	int3   
640066dd:	int3   
640066de:	int3   
640066df:	int3   
640066e0:	push   esi
640066e1:	mov    esi,ecx
640066e3:	cmp    DWORD PTR [esi+0x18],0x8
640066e7:	jb     0x640066f5
640066e9:	mov    eax,DWORD PTR [esi+0x4]
640066ec:	push   eax
640066ed:	call   0x64012612
640066f2:	add    esp,0x4
640066f5:	xor    eax,eax
640066f7:	mov    DWORD PTR [esi+0x18],0x7
640066fe:	mov    DWORD PTR [esi+0x14],eax
64006701:	mov    WORD PTR [esi+0x4],ax
64006705:	pop    esi
64006706:	ret    
64006707:	int3   
64006708:	int3   
64006709:	int3   
6400670a:	int3   
6400670b:	int3   
6400670c:	int3   
6400670d:	int3   
6400670e:	int3   
6400670f:	int3   
64006710:	push   ebp
64006711:	mov    ebp,esp
64006713:	and    esp,0xfffffff8
64006716:	push   0xffffffff
64006718:	push   0x64022ef0
6400671d:	mov    eax,fs:0x0
64006723:	push   eax
64006724:	sub    esp,0x60
64006727:	push   ebx
64006728:	push   esi
64006729:	push   edi
6400672a:	mov    eax,ds:0x6402d09c
6400672f:	xor    eax,esp
64006731:	push   eax
64006732:	lea    eax,[esp+0x70]
64006736:	mov    fs:0x0,eax
6400673c:	mov    edi,ecx
6400673e:	mov    ebx,DWORD PTR [ebp+0x8]
64006741:	push   ebx
64006742:	call   0x640080d0
64006747:	test   edi,edi
64006749:	mov    esi,eax
6400674b:	jne    0x64006752
6400674d:	call   0x640129c8
64006752:	mov    eax,DWORD PTR [edi+0x4]
64006755:	cmp    esi,eax
64006757:	je     0x64006781
64006759:	cmp    DWORD PTR [esi+0x24],0x8
6400675d:	mov    ecx,DWORD PTR [esi+0x20]
64006760:	jb     0x64006767
64006762:	mov    eax,DWORD PTR [esi+0x10]
64006765:	jmp    0x6400676a
64006767:	lea    eax,[esi+0x10]
6400676a:	push   ecx
6400676b:	push   eax
6400676c:	mov    eax,DWORD PTR [ebx+0x14]
6400676f:	push   eax
64006770:	push   0x0
64006772:	mov    ecx,ebx
64006774:	call   0x640091c0
64006779:	test   eax,eax
6400677b:	jge    0x64006839
64006781:	xor    eax,eax
64006783:	mov    DWORD PTR [esp+0x30],0x7
6400678b:	mov    DWORD PTR [esp+0x2c],eax
6400678f:	mov    WORD PTR [esp+0x1c],ax
64006794:	lea    ecx,[esp+0x18]
64006798:	push   ecx
64006799:	push   ebx
6400679a:	lea    ecx,[esp+0x3c]
6400679e:	mov    DWORD PTR [esp+0x80],eax
640067a5:	call   0x640072c0
640067aa:	push   eax
640067ab:	push   esi
640067ac:	push   edi
640067ad:	lea    edx,[esp+0x1c]
640067b1:	push   edx
640067b2:	mov    ecx,edi
640067b4:	mov    BYTE PTR [esp+0x88],0x1
640067bc:	call   0x64007070
640067c1:	cmp    DWORD PTR [esp+0x68],0x8
640067c6:	mov    edi,DWORD PTR [eax]
640067c8:	mov    esi,DWORD PTR [eax+0x4]
640067cb:	jb     0x640067da
640067cd:	mov    eax,DWORD PTR [esp+0x54]
640067d1:	push   eax
640067d2:	call   0x64012612
640067d7:	add    esp,0x4
640067da:	xor    ebx,ebx
640067dc:	cmp    DWORD PTR [esp+0x4c],0x8
640067e1:	mov    DWORD PTR [esp+0x68],0x7
640067e9:	mov    DWORD PTR [esp+0x64],ebx
640067ed:	mov    WORD PTR [esp+0x54],bx
640067f2:	jb     0x64006801
640067f4:	mov    ecx,DWORD PTR [esp+0x38]
640067f8:	push   ecx
640067f9:	call   0x64012612
640067fe:	add    esp,0x4
64006801:	cmp    DWORD PTR [esp+0x30],0x8
64006806:	mov    DWORD PTR [esp+0x4c],0x7
6400680e:	mov    DWORD PTR [esp+0x48],ebx
64006812:	mov    WORD PTR [esp+0x38],bx
64006817:	jb     0x64006826
64006819:	mov    edx,DWORD PTR [esp+0x1c]
6400681d:	push   edx
6400681e:	call   0x64012612
64006823:	add    esp,0x4
64006826:	mov    DWORD PTR [esp+0x30],0x7
6400682e:	mov    DWORD PTR [esp+0x2c],ebx
64006832:	mov    WORD PTR [esp+0x1c],bx
64006837:	jmp    0x6400683b
64006839:	xor    ebx,ebx
6400683b:	cmp    edi,ebx
6400683d:	jne    0x64006844
6400683f:	call   0x640129c8
64006844:	cmp    esi,DWORD PTR [edi+0x4]
64006847:	jne    0x6400684e
64006849:	call   0x640129c8
6400684e:	lea    eax,[esi+0x28]
64006851:	mov    ecx,DWORD PTR [esp+0x70]
64006855:	mov    DWORD PTR fs:0x0,ecx
6400685c:	pop    ecx
6400685d:	pop    edi
6400685e:	pop    esi
6400685f:	pop    ebx
64006860:	mov    esp,ebp
64006862:	pop    ebp
64006863:	ret    0x4
64006866:	int3   
64006867:	int3   
64006868:	int3   
64006869:	int3   
6400686a:	int3   
6400686b:	int3   
6400686c:	int3   
6400686d:	int3   
6400686e:	int3   
6400686f:	int3   
64006870:	sub    esp,0x18
64006873:	push   ebx
64006874:	mov    ebx,DWORD PTR [esp+0x24]
64006878:	push   esi
64006879:	push   edi
6400687a:	push   ebx
6400687b:	mov    esi,ecx
6400687d:	call   0x640080d0
64006882:	test   esi,esi
64006884:	mov    edi,eax
64006886:	mov    DWORD PTR [esp+0x14],edi
6400688a:	jne    0x64006891
6400688c:	call   0x640129c8
64006891:	cmp    edi,DWORD PTR [esi+0x4]
64006894:	mov    DWORD PTR [esp+0x10],esi
64006898:	je     0x640068c4
6400689a:	cmp    DWORD PTR [edi+0x24],0x8
6400689e:	mov    eax,DWORD PTR [edi+0x20]
640068a1:	jb     0x640068a8
640068a3:	mov    edi,DWORD PTR [edi+0x10]
640068a6:	jmp    0x640068ab
640068a8:	add    edi,0x10
640068ab:	push   eax
640068ac:	mov    eax,DWORD PTR [ebx+0x14]
640068af:	push   edi
640068b0:	push   eax
640068b1:	push   0x0
640068b3:	mov    ecx,ebx
640068b5:	call   0x640091c0
640068ba:	test   eax,eax
640068bc:	jl     0x640068c4
640068be:	lea    ecx,[esp+0x10]
640068c2:	jmp    0x640068d3
640068c4:	mov    ecx,DWORD PTR [esi+0x4]
640068c7:	mov    DWORD PTR [esp+0x1c],ecx
640068cb:	mov    DWORD PTR [esp+0x18],esi
640068cf:	lea    ecx,[esp+0x18]
640068d3:	mov    edx,DWORD PTR [ecx]
640068d5:	mov    eax,DWORD PTR [esp+0x28]
640068d9:	mov    ecx,DWORD PTR [ecx+0x4]
640068dc:	pop    edi
640068dd:	pop    esi
640068de:	mov    DWORD PTR [eax],edx
640068e0:	mov    DWORD PTR [eax+0x4],ecx
640068e3:	pop    ebx
640068e4:	add    esp,0x18
640068e7:	ret    0x8
640068ea:	int3   
640068eb:	int3   
640068ec:	int3   
640068ed:	int3   
640068ee:	int3   
640068ef:	int3   
640068f0:	mov    eax,DWORD PTR [esp+0x4]
640068f4:	push   esi
640068f5:	push   eax
640068f6:	mov    esi,ecx
640068f8:	call   0x64002e30
640068fd:	mov    DWORD PTR [esi],0x6402531c
64006903:	mov    eax,esi
64006905:	pop    esi
64006906:	ret    0x4
64006909:	int3   
6400690a:	int3   
6400690b:	int3   
6400690c:	int3   
6400690d:	int3   
6400690e:	int3   
6400690f:	int3   
64006910:	push   ebx
64006911:	push   esi
64006912:	mov    esi,ecx
64006914:	cmp    DWORD PTR [esi+0x34],0x10
64006918:	jb     0x64006926
6400691a:	mov    eax,DWORD PTR [esi+0x20]
6400691d:	push   eax
6400691e:	call   0x64012612
64006923:	add    esp,0x4
64006926:	xor    ebx,ebx
64006928:	mov    DWORD PTR [esi+0x34],0xf
6400692f:	mov    DWORD PTR [esi+0x30],ebx
64006932:	mov    BYTE PTR [esi+0x20],bl
64006935:	cmp    DWORD PTR [esi+0x18],0x10
64006939:	jb     0x64006947
6400693b:	mov    ecx,DWORD PTR [esi+0x4]
6400693e:	push   ecx
6400693f:	call   0x64012612
64006944:	add    esp,0x4
64006947:	mov    DWORD PTR [esi+0x14],ebx
6400694a:	mov    DWORD PTR [esi+0x18],0xf
64006951:	mov    BYTE PTR [esi+0x4],bl
64006954:	pop    esi
64006955:	pop    ebx
64006956:	ret    
64006957:	int3   
64006958:	int3   
64006959:	int3   
6400695a:	int3   
6400695b:	int3   
6400695c:	int3   
6400695d:	int3   
6400695e:	int3   
6400695f:	int3   
64006960:	push   esi
64006961:	mov    esi,ecx
64006963:	cmp    DWORD PTR [esi+0x34],0x8
64006967:	push   edi
64006968:	jb     0x64006976
6400696a:	mov    eax,DWORD PTR [esi+0x20]
6400696d:	push   eax
6400696e:	call   0x64012612
64006973:	add    esp,0x4
64006976:	xor    edi,edi
64006978:	mov    DWORD PTR [esi+0x34],0x7
6400697f:	mov    DWORD PTR [esi+0x30],edi
64006982:	mov    WORD PTR [esi+0x20],di
64006986:	cmp    DWORD PTR [esi+0x18],0x8
6400698a:	jb     0x64006998
6400698c:	mov    ecx,DWORD PTR [esi+0x4]
6400698f:	push   ecx
64006990:	call   0x64012612
64006995:	add    esp,0x4
64006998:	mov    DWORD PTR [esi+0x14],edi
6400699b:	mov    DWORD PTR [esi+0x18],0x7
640069a2:	mov    WORD PTR [esi+0x4],di
640069a6:	pop    edi
640069a7:	pop    esi
640069a8:	ret    
640069a9:	int3   
640069aa:	int3   
640069ab:	int3   
640069ac:	int3   
640069ad:	int3   
640069ae:	int3   
640069af:	int3   
640069b0:	mov    eax,DWORD PTR [edi+0x4]
640069b3:	sub    esp,0xc
640069b6:	push   ebx
640069b7:	mov    ebx,DWORD PTR [eax]
640069b9:	push   ebp
640069ba:	mov    ebp,DWORD PTR [esp+0x1c]
640069be:	test   ebp,ebp
640069c0:	push   esi
640069c1:	je     0x640069c7
640069c3:	cmp    ebp,edi
640069c5:	je     0x640069cc
640069c7:	call   0x640129c8
640069cc:	mov    esi,DWORD PTR [esp+0x24]
640069d0:	cmp    esi,ebx
640069d2:	jne    0x64006a30
640069d4:	mov    eax,DWORD PTR [esp+0x28]
640069d8:	test   eax,eax
640069da:	mov    ebx,DWORD PTR [edi+0x4]
640069dd:	je     0x640069e3
640069df:	cmp    eax,edi
640069e1:	je     0x640069e8
640069e3:	call   0x640129c8
640069e8:	cmp    DWORD PTR [esp+0x2c],ebx
640069ec:	jne    0x64006a30
640069ee:	mov    ecx,DWORD PTR [edi+0x4]
640069f1:	mov    edx,DWORD PTR [ecx+0x4]
640069f4:	push   edx
640069f5:	mov    ecx,edi
640069f7:	call   0x64008130
640069fc:	mov    eax,DWORD PTR [edi+0x4]
640069ff:	mov    DWORD PTR [eax+0x4],eax
64006a02:	mov    eax,DWORD PTR [edi+0x4]
64006a05:	mov    DWORD PTR [edi+0x8],0x0
64006a0c:	mov    DWORD PTR [eax],eax
64006a0e:	mov    eax,DWORD PTR [edi+0x4]
64006a11:	mov    DWORD PTR [eax+0x8],eax
64006a14:	mov    eax,DWORD PTR [edi+0x4]
64006a17:	mov    ecx,DWORD PTR [eax]
64006a19:	mov    eax,DWORD PTR [esp+0x1c]
64006a1d:	mov    DWORD PTR [eax+0x4],ecx
64006a20:	mov    DWORD PTR [eax],edi
64006a22:	pop    esi
64006a23:	pop    ebp
64006a24:	pop    ebx
64006a25:	add    esp,0xc
64006a28:	ret    0x14
64006a2b:	jmp    0x64006a30
64006a2d:	lea    ecx,[ecx+0x0]
64006a30:	test   ebp,ebp
64006a32:	je     0x64006a3a
64006a34:	cmp    ebp,DWORD PTR [esp+0x28]
64006a38:	je     0x64006a3f
64006a3a:	call   0x640129c8
64006a3f:	cmp    esi,DWORD PTR [esp+0x2c]
64006a43:	je     0x64006aac
64006a45:	test   ebp,ebp
64006a47:	mov    DWORD PTR [esp+0x24],esi
64006a4b:	jne    0x64006a52
64006a4d:	call   0x640129c8
64006a52:	cmp    BYTE PTR [esi+0x29],0x0
64006a56:	je     0x64006a5f
64006a58:	call   0x640129c8
64006a5d:	jmp    0x64006a99
64006a5f:	mov    eax,DWORD PTR [esi+0x8]
64006a62:	cmp    BYTE PTR [eax+0x29],0x0
64006a66:	jne    0x64006a7e
64006a68:	mov    esi,eax
64006a6a:	mov    eax,DWORD PTR [esi]
64006a6c:	cmp    BYTE PTR [eax+0x29],0x0
64006a70:	jne    0x64006a99
64006a72:	mov    esi,eax
64006a74:	mov    eax,DWORD PTR [esi]
64006a76:	cmp    BYTE PTR [eax+0x29],0x0
64006a7a:	je     0x64006a72
64006a7c:	jmp    0x64006a99
64006a7e:	mov    eax,DWORD PTR [esi+0x4]
64006a81:	cmp    BYTE PTR [eax+0x29],0x0
64006a85:	jne    0x64006a97
64006a87:	cmp    esi,DWORD PTR [eax+0x8]
64006a8a:	jne    0x64006a97
64006a8c:	mov    esi,eax
64006a8e:	mov    eax,DWORD PTR [eax+0x4]
64006a91:	cmp    BYTE PTR [eax+0x29],0x0
64006a95:	je     0x64006a87
64006a97:	mov    esi,eax
64006a99:	mov    edx,DWORD PTR [esp+0x24]
64006a9d:	push   edx
64006a9e:	push   ebp
64006a9f:	lea    eax,[esp+0x18]
64006aa3:	push   eax
64006aa4:	push   edi
64006aa5:	call   0x64007340
64006aaa:	jmp    0x64006a30
64006aac:	mov    eax,DWORD PTR [esp+0x1c]
64006ab0:	mov    DWORD PTR [eax+0x4],esi
64006ab3:	pop    esi
64006ab4:	mov    DWORD PTR [eax],ebp
64006ab6:	pop    ebp
64006ab7:	pop    ebx
64006ab8:	add    esp,0xc
64006abb:	ret    0x14
64006abe:	int3   
64006abf:	int3   
64006ac0:	mov    eax,DWORD PTR [ecx+0x8]
64006ac3:	mov    edx,DWORD PTR [eax]
64006ac5:	mov    DWORD PTR [ecx+0x8],edx
64006ac8:	mov    edx,DWORD PTR [eax]
64006aca:	cmp    BYTE PTR [edx+0x29],0x0
64006ace:	jne    0x64006ad3
64006ad0:	mov    DWORD PTR [edx+0x4],ecx
64006ad3:	mov    edx,DWORD PTR [ecx+0x4]
64006ad6:	mov    DWORD PTR [eax+0x4],edx
64006ad9:	mov    edx,DWORD PTR [esp+0x4]
64006add:	mov    edx,DWORD PTR [edx+0x4]
64006ae0:	cmp    ecx,DWORD PTR [edx+0x4]
64006ae3:	jne    0x64006af0
64006ae5:	mov    DWORD PTR [edx+0x4],eax
64006ae8:	mov    DWORD PTR [eax],ecx
64006aea:	mov    DWORD PTR [ecx+0x4],eax
64006aed:	ret    0x4
64006af0:	mov    edx,DWORD PTR [ecx+0x4]
64006af3:	cmp    ecx,DWORD PTR [edx]
64006af5:	jne    0x64006b01
64006af7:	mov    DWORD PTR [edx],eax
64006af9:	mov    DWORD PTR [eax],ecx
64006afb:	mov    DWORD PTR [ecx+0x4],eax
64006afe:	ret    0x4
64006b01:	mov    DWORD PTR [edx+0x8],eax
64006b04:	mov    DWORD PTR [eax],ecx
64006b06:	mov    DWORD PTR [ecx+0x4],eax
64006b09:	ret    0x4
64006b0c:	int3   
64006b0d:	int3   
64006b0e:	int3   
64006b0f:	int3   
64006b10:	mov    eax,DWORD PTR [ecx]
64006b12:	mov    edx,DWORD PTR [eax+0x8]
64006b15:	mov    DWORD PTR [ecx],edx
64006b17:	mov    edx,DWORD PTR [eax+0x8]
64006b1a:	cmp    BYTE PTR [edx+0x29],0x0
64006b1e:	jne    0x64006b23
64006b20:	mov    DWORD PTR [edx+0x4],ecx
64006b23:	mov    edx,DWORD PTR [ecx+0x4]
64006b26:	mov    DWORD PTR [eax+0x4],edx
64006b29:	mov    edx,DWORD PTR [esp+0x4]
64006b2d:	mov    edx,DWORD PTR [edx+0x4]
64006b30:	cmp    ecx,DWORD PTR [edx+0x4]
64006b33:	jne    0x64006b41
64006b35:	mov    DWORD PTR [edx+0x4],eax
64006b38:	mov    DWORD PTR [eax+0x8],ecx
64006b3b:	mov    DWORD PTR [ecx+0x4],eax
64006b3e:	ret    0x4
64006b41:	mov    edx,DWORD PTR [ecx+0x4]
64006b44:	cmp    ecx,DWORD PTR [edx+0x8]
64006b47:	jne    0x64006b55
64006b49:	mov    DWORD PTR [edx+0x8],eax
64006b4c:	mov    DWORD PTR [eax+0x8],ecx
64006b4f:	mov    DWORD PTR [ecx+0x4],eax
64006b52:	ret    0x4
64006b55:	mov    DWORD PTR [edx],eax
64006b57:	mov    DWORD PTR [eax+0x8],ecx
64006b5a:	mov    DWORD PTR [ecx+0x4],eax
64006b5d:	ret    0x4
64006b60:	push   ebp
64006b61:	mov    ebp,esp
64006b63:	push   0xffffffff
64006b65:	push   0x64022ad1
64006b6a:	mov    eax,fs:0x0
64006b70:	push   eax
64006b71:	sub    esp,0xc
64006b74:	push   ebx
64006b75:	push   esi
64006b76:	push   edi
64006b77:	mov    eax,ds:0x6402d09c
64006b7c:	xor    eax,ebp
64006b7e:	push   eax
64006b7f:	lea    eax,[ebp-0xc]
64006b82:	mov    fs:0x0,eax
64006b88:	mov    DWORD PTR [ebp-0x10],esp
64006b8b:	push   0x2c
64006b8d:	call   0x640129f1
64006b92:	mov    esi,eax
64006b94:	xor    ebx,ebx
64006b96:	mov    DWORD PTR [ebp-0x4],ebx
64006b99:	add    esp,0x4
64006b9c:	mov    DWORD PTR [ebp-0x14],esi
64006b9f:	mov    DWORD PTR [ebp-0x18],esi
64006ba2:	cmp    esi,ebx
64006ba4:	mov    BYTE PTR [ebp-0x4],0x1
64006ba8:	je     0x64006be0
64006baa:	mov    eax,DWORD PTR [ebp+0x8]
64006bad:	mov    ecx,DWORD PTR [ebp+0xc]
64006bb0:	mov    edx,DWORD PTR [ebp+0x10]
64006bb3:	mov    DWORD PTR [esi],eax
64006bb5:	mov    eax,DWORD PTR [ebp+0x14]
64006bb8:	mov    DWORD PTR [esi+0x4],ecx
64006bbb:	push   0xffffffff
64006bbd:	lea    ecx,[esi+0xc]
64006bc0:	mov    DWORD PTR [esi+0x8],edx
64006bc3:	push   ebx
64006bc4:	mov    DWORD PTR [ecx+0x18],0xf
64006bcb:	mov    DWORD PTR [ecx+0x14],ebx
64006bce:	push   eax
64006bcf:	mov    BYTE PTR [ecx+0x4],bl
64006bd2:	call   0x64001780
64006bd7:	mov    cl,BYTE PTR [ebp+0x18]
64006bda:	mov    BYTE PTR [esi+0x28],cl
64006bdd:	mov    BYTE PTR [esi+0x29],bl
64006be0:	mov    eax,esi
64006be2:	mov    ecx,DWORD PTR [ebp-0xc]
64006be5:	mov    DWORD PTR fs:0x0,ecx
64006bec:	pop    ecx
64006bed:	pop    edi
64006bee:	pop    esi
64006bef:	pop    ebx
64006bf0:	mov    esp,ebp
64006bf2:	pop    ebp
64006bf3:	ret    0x14
64006bf6:	mov    edx,DWORD PTR [ebp-0x14]
64006bf9:	push   edx
64006bfa:	call   0x64012612
64006bff:	add    esp,0x4
64006c02:	xor    ebx,ebx
64006c04:	push   ebx
64006c05:	push   ebx
64006c06:	call   0x64012a5b
64006c0b:	int3   
64006c0c:	int3   
64006c0d:	int3   
64006c0e:	int3   
64006c0f:	int3   
64006c10:	push   ebp
64006c11:	mov    ebp,esp
64006c13:	and    esp,0xfffffff8
64006c16:	sub    esp,0x14
64006c19:	push   ebx
64006c1a:	push   esi
64006c1b:	mov    esi,ecx
64006c1d:	cmp    DWORD PTR [esi+0x8],0x0
64006c21:	push   edi
64006c22:	jne    0x64006c44
64006c24:	mov    eax,DWORD PTR [ebp+0x14]
64006c27:	mov    ecx,DWORD PTR [esi+0x4]
64006c2a:	mov    edi,DWORD PTR [ebp+0x8]
64006c2d:	push   eax
64006c2e:	push   ecx
64006c2f:	push   0x1
64006c31:	push   edi
64006c32:	mov    ecx,esi
64006c34:	call   0x640079f0
64006c39:	mov    eax,edi
64006c3b:	pop    edi
64006c3c:	pop    esi
64006c3d:	pop    ebx
64006c3e:	mov    esp,ebp
64006c40:	pop    ebp
64006c41:	ret    0x10
64006c44:	mov    edx,DWORD PTR [esi+0x4]
64006c47:	mov    edi,DWORD PTR [ebp+0xc]
64006c4a:	test   edi,edi
64006c4c:	mov    eax,DWORD PTR [edx]
64006c4e:	mov    DWORD PTR [esp+0x18],eax
64006c52:	je     0x64006c58
64006c54:	cmp    edi,esi
64006c56:	je     0x64006c5d
64006c58:	call   0x640129c8
64006c5d:	mov    ebx,DWORD PTR [ebp+0x10]
64006c60:	cmp    ebx,DWORD PTR [esp+0x18]
64006c64:	jne    0x64006c97
64006c66:	mov    edi,DWORD PTR [ebp+0x14]
64006c69:	lea    ecx,[ebx+0xc]
64006c6c:	push   ecx
64006c6d:	push   edi
64006c6e:	mov    ecx,esi
64006c70:	call   0x64006420
64006c75:	test   al,al
64006c77:	je     0x64006df3
64006c7d:	push   edi
64006c7e:	mov    edi,DWORD PTR [ebp+0x8]
64006c81:	push   ebx
64006c82:	push   0x1
64006c84:	push   edi
64006c85:	mov    ecx,esi
64006c87:	call   0x640079f0
64006c8c:	mov    eax,edi
64006c8e:	pop    edi
64006c8f:	pop    esi
64006c90:	pop    ebx
64006c91:	mov    esp,ebp
64006c93:	pop    ebp
64006c94:	ret    0x10
64006c97:	test   edi,edi
64006c99:	mov    edx,DWORD PTR [esi+0x4]
64006c9c:	mov    DWORD PTR [esp+0x18],edx
64006ca0:	je     0x64006ca6
64006ca2:	cmp    edi,esi
64006ca4:	je     0x64006cab
64006ca6:	call   0x640129c8
64006cab:	cmp    ebx,DWORD PTR [esp+0x18]
64006caf:	mov    edi,DWORD PTR [ebp+0x14]
64006cb2:	mov    ecx,esi
64006cb4:	jne    0x64006cee
64006cb6:	mov    eax,DWORD PTR [esi+0x4]
64006cb9:	mov    eax,DWORD PTR [eax+0x8]
64006cbc:	add    eax,0xc
64006cbf:	push   edi
64006cc0:	push   eax
64006cc1:	call   0x64006420
64006cc6:	test   al,al
64006cc8:	je     0x64006df3
64006cce:	mov    ecx,DWORD PTR [esi+0x4]
64006cd1:	mov    edx,DWORD PTR [ecx+0x8]
64006cd4:	push   edi
64006cd5:	mov    edi,DWORD PTR [ebp+0x8]
64006cd8:	push   edx
64006cd9:	push   0x0
64006cdb:	push   edi
64006cdc:	mov    ecx,esi
64006cde:	call   0x640079f0
64006ce3:	mov    eax,edi
64006ce5:	pop    edi
64006ce6:	pop    esi
64006ce7:	pop    ebx
64006ce8:	mov    esp,ebp
64006cea:	pop    ebp
64006ceb:	ret    0x10
64006cee:	lea    eax,[ebx+0xc]
64006cf1:	push   eax
64006cf2:	push   edi
64006cf3:	call   0x64006420
64006cf8:	test   al,al
64006cfa:	je     0x64006d5f
64006cfc:	mov    eax,DWORD PTR [ebp+0xc]
64006cff:	lea    ecx,[esp+0xc]
64006d03:	mov    DWORD PTR [esp+0xc],eax
64006d07:	mov    DWORD PTR [esp+0x10],ebx
64006d0b:	call   0x64008e40
64006d10:	mov    ecx,DWORD PTR [esp+0x10]
64006d14:	add    ecx,0xc
64006d17:	push   edi
64006d18:	push   ecx
64006d19:	mov    ecx,esi
64006d1b:	call   0x64006420
64006d20:	test   al,al
64006d22:	je     0x64006d5f
64006d24:	mov    eax,DWORD PTR [esp+0x10]
64006d28:	mov    edx,DWORD PTR [eax+0x8]
64006d2b:	cmp    BYTE PTR [edx+0x45],0x0
64006d2f:	push   edi
64006d30:	mov    edi,DWORD PTR [ebp+0x8]
64006d33:	mov    ecx,esi
64006d35:	je     0x64006d4b
64006d37:	push   eax
64006d38:	push   0x0
64006d3a:	push   edi
64006d3b:	call   0x640079f0
64006d40:	mov    eax,edi
64006d42:	pop    edi
64006d43:	pop    esi
64006d44:	pop    ebx
64006d45:	mov    esp,ebp
64006d47:	pop    ebp
64006d48:	ret    0x10
64006d4b:	push   ebx
64006d4c:	push   0x1
64006d4e:	push   edi
64006d4f:	call   0x640079f0
64006d54:	mov    eax,edi
64006d56:	pop    edi
64006d57:	pop    esi
64006d58:	pop    ebx
64006d59:	mov    esp,ebp
64006d5b:	pop    ebp
64006d5c:	ret    0x10
64006d5f:	push   edi
64006d60:	lea    eax,[ebx+0xc]
64006d63:	push   eax
64006d64:	mov    ecx,esi
64006d66:	call   0x64006420
64006d6b:	test   al,al
64006d6d:	je     0x64006df3
64006d73:	mov    ecx,DWORD PTR [esi+0x4]
64006d76:	mov    eax,DWORD PTR [ebp+0xc]
64006d79:	mov    DWORD PTR [esp+0x18],ecx
64006d7d:	lea    ecx,[esp+0xc]
64006d81:	mov    DWORD PTR [esp+0xc],eax
64006d85:	mov    DWORD PTR [esp+0x10],ebx
64006d89:	mov    DWORD PTR [esp+0x14],esi
64006d8d:	call   0x64008a10
64006d92:	lea    edx,[esp+0x14]
64006d96:	push   edx
64006d97:	lea    ecx,[esp+0x10]
64006d9b:	call   0x640066b0
64006da0:	test   al,al
64006da2:	jne    0x64006db8
64006da4:	mov    eax,DWORD PTR [esp+0x10]
64006da8:	add    eax,0xc
64006dab:	push   eax
64006dac:	push   edi
64006dad:	mov    ecx,esi
64006daf:	call   0x64006420
64006db4:	test   al,al
64006db6:	je     0x64006df3
64006db8:	mov    ecx,DWORD PTR [ebx+0x8]
64006dbb:	cmp    BYTE PTR [ecx+0x45],0x0
64006dbf:	push   edi
64006dc0:	mov    edi,DWORD PTR [ebp+0x8]
64006dc3:	mov    ecx,esi
64006dc5:	je     0x64006ddb
64006dc7:	push   ebx
64006dc8:	push   0x0
64006dca:	push   edi
64006dcb:	call   0x640079f0
64006dd0:	mov    eax,edi
64006dd2:	pop    edi
64006dd3:	pop    esi
64006dd4:	pop    ebx
64006dd5:	mov    esp,ebp
64006dd7:	pop    ebp
64006dd8:	ret    0x10
64006ddb:	mov    edx,DWORD PTR [esp+0x14]
64006ddf:	push   edx
64006de0:	push   0x1
64006de2:	push   edi
64006de3:	call   0x640079f0
64006de8:	mov    eax,edi
64006dea:	pop    edi
64006deb:	pop    esi
64006dec:	pop    ebx
64006ded:	mov    esp,ebp
64006def:	pop    ebp
64006df0:	ret    0x10
64006df3:	push   edi
64006df4:	lea    eax,[esp+0x18]
64006df8:	push   eax
64006df9:	mov    ecx,esi
64006dfb:	call   0x64007860
64006e00:	mov    edx,DWORD PTR [eax]
64006e02:	mov    ecx,DWORD PTR [ebp+0x8]
64006e05:	pop    edi
64006e06:	mov    DWORD PTR [ecx],edx
64006e08:	mov    eax,DWORD PTR [eax+0x4]
64006e0b:	pop    esi
64006e0c:	mov    DWORD PTR [ecx+0x4],eax
64006e0f:	mov    eax,ecx
64006e11:	pop    ebx
64006e12:	mov    esp,ebp
64006e14:	pop    ebp
64006e15:	ret    0x10
64006e18:	int3   
64006e19:	int3   
64006e1a:	int3   
64006e1b:	int3   
64006e1c:	int3   
64006e1d:	int3   
64006e1e:	int3   
64006e1f:	int3   
64006e20:	push   0xffffffff
64006e22:	push   0x64022a98
64006e27:	mov    eax,fs:0x0
64006e2d:	push   eax
64006e2e:	push   ecx
64006e2f:	push   ebx
64006e30:	push   esi
64006e31:	mov    eax,ds:0x6402d09c
64006e36:	xor    eax,esp
64006e38:	push   eax
64006e39:	lea    eax,[esp+0x10]
64006e3d:	mov    fs:0x0,eax
64006e43:	mov    esi,ecx
64006e45:	mov    DWORD PTR [esp+0xc],esi
64006e49:	mov    eax,DWORD PTR [esp+0x20]
64006e4d:	xor    ebx,ebx
64006e4f:	push   0xffffffff
64006e51:	push   ebx
64006e52:	mov    DWORD PTR [esi+0x18],0xf
64006e59:	mov    DWORD PTR [esi+0x14],ebx
64006e5c:	push   eax
64006e5d:	mov    BYTE PTR [esi+0x4],bl
64006e60:	call   0x64001780
64006e65:	mov    edx,DWORD PTR [esp+0x24]
64006e69:	push   0xffffffff
64006e6b:	lea    ecx,[esi+0x1c]
64006e6e:	mov    DWORD PTR [esp+0x1c],ebx
64006e72:	push   ebx
64006e73:	mov    DWORD PTR [ecx+0x18],0xf
64006e7a:	mov    DWORD PTR [ecx+0x14],ebx
64006e7d:	push   edx
64006e7e:	mov    BYTE PTR [ecx+0x4],bl
64006e81:	call   0x64001780
64006e86:	mov    eax,esi
64006e88:	mov    ecx,DWORD PTR [esp+0x10]
64006e8c:	mov    DWORD PTR fs:0x0,ecx
64006e93:	pop    ecx
64006e94:	pop    esi
64006e95:	pop    ebx
64006e96:	add    esp,0x10
64006e99:	ret    0x8
64006e9c:	int3   
64006e9d:	int3   
64006e9e:	int3   
64006e9f:	int3   
64006ea0:	push   ebx
64006ea1:	mov    ebx,DWORD PTR [esp+0xc]
64006ea5:	push   ebp
64006ea6:	mov    ebp,DWORD PTR [esp+0xc]
64006eaa:	cmp    DWORD PTR [ebp+0x14],ebx
64006ead:	push   esi
64006eae:	push   edi
64006eaf:	mov    esi,ecx
64006eb1:	jae    0x64006eb8
64006eb3:	call   0x640125ce
64006eb8:	mov    edi,DWORD PTR [ebp+0x14]
64006ebb:	mov    eax,DWORD PTR [esp+0x1c]
64006ebf:	sub    edi,ebx
64006ec1:	cmp    eax,edi
64006ec3:	jae    0x64006ec7
64006ec5:	mov    edi,eax
64006ec7:	cmp    esi,ebp
64006ec9:	jne    0x64006eea
64006ecb:	push   0xffffffff
64006ecd:	add    edi,ebx
64006ecf:	push   edi
64006ed0:	mov    ecx,esi
64006ed2:	call   0x64007cd0
64006ed7:	push   ebx
64006ed8:	push   0x0
64006eda:	mov    ecx,esi
64006edc:	call   0x64007cd0
64006ee1:	pop    edi
64006ee2:	mov    eax,esi
64006ee4:	pop    esi
64006ee5:	pop    ebp
64006ee6:	pop    ebx
64006ee7:	ret    0xc
64006eea:	cmp    edi,0x7ffffffe
64006ef0:	jbe    0x64006ef7
64006ef2:	call   0x6401258f
64006ef7:	mov    eax,DWORD PTR [esi+0x18]
64006efa:	cmp    eax,edi
64006efc:	jae    0x64006f19
64006efe:	mov    eax,DWORD PTR [esi+0x14]
64006f01:	push   eax
64006f02:	push   edi
64006f03:	mov    ecx,esi
64006f05:	call   0x64008340
64006f0a:	test   edi,edi
64006f0c:	jbe    0x64006f86
64006f0e:	cmp    DWORD PTR [ebp+0x18],0x8
64006f12:	jb     0x64006f45
64006f14:	mov    ecx,DWORD PTR [ebp+0x4]
64006f17:	jmp    0x64006f48
64006f19:	test   edi,edi
64006f1b:	jne    0x64006f0c
64006f1d:	cmp    eax,0x8
64006f20:	mov    DWORD PTR [esi+0x14],edi
64006f23:	jb     0x64006f34
64006f25:	mov    eax,DWORD PTR [esi+0x4]
64006f28:	mov    WORD PTR [eax],di
64006f2b:	pop    edi
64006f2c:	mov    eax,esi
64006f2e:	pop    esi
64006f2f:	pop    ebp
64006f30:	pop    ebx
64006f31:	ret    0xc
64006f34:	lea    eax,[esi+0x4]
64006f37:	pop    edi
64006f38:	mov    WORD PTR [eax],0x0
64006f3d:	mov    eax,esi
64006f3f:	pop    esi
64006f40:	pop    ebp
64006f41:	pop    ebx
64006f42:	ret    0xc
64006f45:	lea    ecx,[ebp+0x4]
64006f48:	cmp    DWORD PTR [esi+0x18],0x8
64006f4c:	lea    ebp,[esi+0x4]
64006f4f:	jb     0x64006f56
64006f51:	mov    eax,DWORD PTR [ebp+0x0]
64006f54:	jmp    0x64006f58
64006f56:	mov    eax,ebp
64006f58:	mov    edx,DWORD PTR [esp+0x18]
64006f5c:	lea    ecx,[ecx+edx*2]
64006f5f:	lea    ebx,[edi+edi*1]
64006f62:	push   ebx
64006f63:	push   ecx
64006f64:	mov    ecx,DWORD PTR [esi+0x18]
64006f67:	lea    edx,[ecx+ecx*1]
64006f6a:	push   edx
64006f6b:	push   eax
64006f6c:	call   0x640127c8
64006f71:	add    esp,0x10
64006f74:	cmp    DWORD PTR [esi+0x18],0x8
64006f78:	mov    DWORD PTR [esi+0x14],edi
64006f7b:	jb     0x64006f80
64006f7d:	mov    ebp,DWORD PTR [ebp+0x0]
64006f80:	mov    WORD PTR [ebx+ebp*1],0x0
64006f86:	pop    edi
64006f87:	mov    eax,esi
64006f89:	pop    esi
64006f8a:	pop    ebp
64006f8b:	pop    ebx
64006f8c:	ret    0xc
64006f8f:	int3   
64006f90:	push   ebp
64006f91:	push   esi
64006f92:	mov    esi,ecx
64006f94:	mov    edx,DWORD PTR [esi+0x18]
64006f97:	cmp    edx,0x8
64006f9a:	push   edi
64006f9b:	lea    ebp,[esi+0x4]
64006f9e:	jb     0x64006fa5
64006fa0:	mov    ecx,DWORD PTR [ebp+0x0]
64006fa3:	jmp    0x64006fa7
64006fa5:	mov    ecx,ebp
64006fa7:	mov    eax,DWORD PTR [esp+0x10]
64006fab:	cmp    eax,ecx
64006fad:	jb     0x64006fe5
64006faf:	cmp    edx,0x8
64006fb2:	jb     0x64006fb9
64006fb4:	mov    ecx,DWORD PTR [ebp+0x0]
64006fb7:	jmp    0x64006fbb
64006fb9:	mov    ecx,ebp
64006fbb:	mov    edi,DWORD PTR [esi+0x14]
64006fbe:	lea    ecx,[ecx+edi*2]
64006fc1:	cmp    ecx,eax
64006fc3:	jbe    0x64006fe5
64006fc5:	cmp    edx,0x8
64006fc8:	jb     0x64006fcd
64006fca:	mov    ebp,DWORD PTR [ebp+0x0]
64006fcd:	mov    edx,DWORD PTR [esp+0x14]
64006fd1:	sub    eax,ebp
64006fd3:	push   edx
64006fd4:	sar    eax,1
64006fd6:	push   eax
64006fd7:	push   esi
64006fd8:	mov    ecx,esi
64006fda:	call   0x64006ea0
64006fdf:	pop    edi
64006fe0:	pop    esi
64006fe1:	pop    ebp
64006fe2:	ret    0x8
64006fe5:	mov    edi,DWORD PTR [esp+0x14]
64006fe9:	cmp    edi,0x7ffffffe
64006fef:	jbe    0x64006ff6
64006ff1:	call   0x6401258f
64006ff6:	mov    eax,DWORD PTR [esi+0x18]
64006ff9:	cmp    eax,edi
64006ffb:	jae    0x6400701a
64006ffd:	mov    eax,DWORD PTR [esi+0x14]
64007000:	push   eax
64007001:	push   edi
64007002:	mov    ecx,esi
64007004:	call   0x64008340
64007009:	test   edi,edi
6400700b:	jbe    0x64007062
6400700d:	mov    ecx,DWORD PTR [esi+0x18]
64007010:	cmp    ecx,0x8
64007013:	jb     0x64007037
64007015:	mov    eax,DWORD PTR [ebp+0x0]
64007018:	jmp    0x64007039
6400701a:	test   edi,edi
6400701c:	jne    0x6400700b
6400701e:	cmp    eax,0x8
64007021:	mov    DWORD PTR [esi+0x14],edi
64007024:	jb     0x64007029
64007026:	mov    ebp,DWORD PTR [ebp+0x0]
64007029:	pop    edi
6400702a:	mov    eax,esi
6400702c:	pop    esi
6400702d:	mov    WORD PTR [ebp+0x0],0x0
64007033:	pop    ebp
64007034:	ret    0x8
64007037:	mov    eax,ebp
64007039:	mov    edx,DWORD PTR [esp+0x10]
6400703d:	push   ebx
6400703e:	lea    ebx,[edi+edi*1]
64007041:	push   ebx
64007042:	push   edx
64007043:	add    ecx,ecx
64007045:	push   ecx
64007046:	push   eax
64007047:	call   0x640127c8
6400704c:	add    esp,0x10
6400704f:	cmp    DWORD PTR [esi+0x18],0x8
64007053:	mov    DWORD PTR [esi+0x14],edi
64007056:	jb     0x6400705b
64007058:	mov    ebp,DWORD PTR [ebp+0x0]
6400705b:	mov    WORD PTR [ebx+ebp*1],0x0
64007061:	pop    ebx
64007062:	pop    edi
64007063:	mov    eax,esi
64007065:	pop    esi
64007066:	pop    ebp
64007067:	ret    0x8
6400706a:	int3   
6400706b:	int3   
6400706c:	int3   
6400706d:	int3   
6400706e:	int3   
6400706f:	int3   
64007070:	push   ebp
64007071:	mov    ebp,esp
64007073:	and    esp,0xfffffff8
64007076:	sub    esp,0x14
64007079:	push   ebx
6400707a:	push   esi
6400707b:	mov    esi,ecx
6400707d:	cmp    DWORD PTR [esi+0x8],0x0
64007081:	push   edi
64007082:	jne    0x640070a4
64007084:	mov    eax,DWORD PTR [ebp+0x14]
64007087:	mov    ecx,DWORD PTR [esi+0x4]
6400708a:	mov    edi,DWORD PTR [ebp+0x8]
6400708d:	push   eax
6400708e:	push   ecx
6400708f:	push   0x1
64007091:	push   edi
64007092:	mov    ecx,esi
64007094:	call   0x64007e80
64007099:	mov    eax,edi
6400709b:	pop    edi
6400709c:	pop    esi
6400709d:	pop    ebx
6400709e:	mov    esp,ebp
640070a0:	pop    ebp
640070a1:	ret    0x10
640070a4:	mov    edx,DWORD PTR [esi+0x4]
640070a7:	mov    edi,DWORD PTR [ebp+0xc]
640070aa:	test   edi,edi
640070ac:	mov    eax,DWORD PTR [edx]
640070ae:	mov    DWORD PTR [esp+0x18],eax
640070b2:	je     0x640070b8
640070b4:	cmp    edi,esi
640070b6:	je     0x640070bd
640070b8:	call   0x640129c8
640070bd:	mov    ebx,DWORD PTR [ebp+0x10]
640070c0:	cmp    ebx,DWORD PTR [esp+0x18]
640070c4:	jne    0x640070f7
640070c6:	mov    edi,DWORD PTR [ebp+0x14]
640070c9:	lea    ecx,[ebx+0xc]
640070cc:	push   ecx
640070cd:	push   edi
640070ce:	mov    ecx,esi
640070d0:	call   0x64007280
640070d5:	test   al,al
640070d7:	je     0x64007253
640070dd:	push   edi
640070de:	mov    edi,DWORD PTR [ebp+0x8]
640070e1:	push   ebx
640070e2:	push   0x1
640070e4:	push   edi
640070e5:	mov    ecx,esi
640070e7:	call   0x64007e80
640070ec:	mov    eax,edi
640070ee:	pop    edi
640070ef:	pop    esi
640070f0:	pop    ebx
640070f1:	mov    esp,ebp
640070f3:	pop    ebp
640070f4:	ret    0x10
640070f7:	test   edi,edi
640070f9:	mov    edx,DWORD PTR [esi+0x4]
640070fc:	mov    DWORD PTR [esp+0x18],edx
64007100:	je     0x64007106
64007102:	cmp    edi,esi
64007104:	je     0x6400710b
64007106:	call   0x640129c8
6400710b:	cmp    ebx,DWORD PTR [esp+0x18]
6400710f:	mov    edi,DWORD PTR [ebp+0x14]
64007112:	mov    ecx,esi
64007114:	jne    0x6400714e
64007116:	mov    eax,DWORD PTR [esi+0x4]
64007119:	mov    eax,DWORD PTR [eax+0x8]
6400711c:	add    eax,0xc
6400711f:	push   edi
64007120:	push   eax
64007121:	call   0x64007280
64007126:	test   al,al
64007128:	je     0x64007253
6400712e:	mov    ecx,DWORD PTR [esi+0x4]
64007131:	mov    edx,DWORD PTR [ecx+0x8]
64007134:	push   edi
64007135:	mov    edi,DWORD PTR [ebp+0x8]
64007138:	push   edx
64007139:	push   0x0
6400713b:	push   edi
6400713c:	mov    ecx,esi
6400713e:	call   0x64007e80
64007143:	mov    eax,edi
64007145:	pop    edi
64007146:	pop    esi
64007147:	pop    ebx
64007148:	mov    esp,ebp
6400714a:	pop    ebp
6400714b:	ret    0x10
6400714e:	lea    eax,[ebx+0xc]
64007151:	push   eax
64007152:	push   edi
64007153:	call   0x64007280
64007158:	test   al,al
6400715a:	je     0x640071bf
6400715c:	mov    eax,DWORD PTR [ebp+0xc]
6400715f:	lea    ecx,[esp+0xc]
64007163:	mov    DWORD PTR [esp+0xc],eax
64007167:	mov    DWORD PTR [esp+0x10],ebx
6400716b:	call   0x64008e40
64007170:	mov    ecx,DWORD PTR [esp+0x10]
64007174:	add    ecx,0xc
64007177:	push   edi
64007178:	push   ecx
64007179:	mov    ecx,esi
6400717b:	call   0x64007280
64007180:	test   al,al
64007182:	je     0x640071bf
64007184:	mov    eax,DWORD PTR [esp+0x10]
64007188:	mov    edx,DWORD PTR [eax+0x8]
6400718b:	cmp    BYTE PTR [edx+0x45],0x0
6400718f:	push   edi
64007190:	mov    edi,DWORD PTR [ebp+0x8]
64007193:	mov    ecx,esi
64007195:	je     0x640071ab
64007197:	push   eax
64007198:	push   0x0
6400719a:	push   edi
6400719b:	call   0x64007e80
640071a0:	mov    eax,edi
640071a2:	pop    edi
640071a3:	pop    esi
640071a4:	pop    ebx
640071a5:	mov    esp,ebp
640071a7:	pop    ebp
640071a8:	ret    0x10
640071ab:	push   ebx
640071ac:	push   0x1
640071ae:	push   edi
640071af:	call   0x64007e80
640071b4:	mov    eax,edi
640071b6:	pop    edi
640071b7:	pop    esi
640071b8:	pop    ebx
640071b9:	mov    esp,ebp
640071bb:	pop    ebp
640071bc:	ret    0x10
640071bf:	push   edi
640071c0:	lea    eax,[ebx+0xc]
640071c3:	push   eax
640071c4:	mov    ecx,esi
640071c6:	call   0x64007280
640071cb:	test   al,al
640071cd:	je     0x64007253
640071d3:	mov    ecx,DWORD PTR [esi+0x4]
640071d6:	mov    eax,DWORD PTR [ebp+0xc]
640071d9:	mov    DWORD PTR [esp+0x18],ecx
640071dd:	lea    ecx,[esp+0xc]
640071e1:	mov    DWORD PTR [esp+0xc],eax
640071e5:	mov    DWORD PTR [esp+0x10],ebx
640071e9:	mov    DWORD PTR [esp+0x14],esi
640071ed:	call   0x64008a10
640071f2:	lea    edx,[esp+0x14]
640071f6:	push   edx
640071f7:	lea    ecx,[esp+0x10]
640071fb:	call   0x640066b0
64007200:	test   al,al
64007202:	jne    0x64007218
64007204:	mov    eax,DWORD PTR [esp+0x10]
64007208:	add    eax,0xc
6400720b:	push   eax
6400720c:	push   edi
6400720d:	mov    ecx,esi
6400720f:	call   0x64007280
64007214:	test   al,al
64007216:	je     0x64007253
64007218:	mov    ecx,DWORD PTR [ebx+0x8]
6400721b:	cmp    BYTE PTR [ecx+0x45],0x0
6400721f:	push   edi
64007220:	mov    edi,DWORD PTR [ebp+0x8]
64007223:	mov    ecx,esi
64007225:	je     0x6400723b
64007227:	push   ebx
64007228:	push   0x0
6400722a:	push   edi
6400722b:	call   0x64007e80
64007230:	mov    eax,edi
64007232:	pop    edi
64007233:	pop    esi
64007234:	pop    ebx
64007235:	mov    esp,ebp
64007237:	pop    ebp
64007238:	ret    0x10
6400723b:	mov    edx,DWORD PTR [esp+0x14]
6400723f:	push   edx
64007240:	push   0x1
64007242:	push   edi
64007243:	call   0x64007e80
64007248:	mov    eax,edi
6400724a:	pop    edi
6400724b:	pop    esi
6400724c:	pop    ebx
6400724d:	mov    esp,ebp
6400724f:	pop    ebp
64007250:	ret    0x10
64007253:	push   edi
64007254:	lea    eax,[esp+0x18]
64007258:	push   eax
64007259:	mov    ecx,esi
6400725b:	call   0x64007d70
64007260:	mov    edx,DWORD PTR [eax]
64007262:	mov    ecx,DWORD PTR [ebp+0x8]
64007265:	pop    edi
64007266:	mov    DWORD PTR [ecx],edx
64007268:	mov    eax,DWORD PTR [eax+0x4]
6400726b:	pop    esi
6400726c:	mov    DWORD PTR [ecx+0x4],eax
6400726f:	mov    eax,ecx
64007271:	pop    ebx
64007272:	mov    esp,ebp
64007274:	pop    ebp
64007275:	ret    0x10
64007278:	int3   
64007279:	int3   
6400727a:	int3   
6400727b:	int3   
6400727c:	int3   
6400727d:	int3   
6400727e:	int3   
6400727f:	int3   
64007280:	mov    eax,DWORD PTR [esp+0x8]
64007284:	cmp    DWORD PTR [eax+0x18],0x8
64007288:	mov    ecx,DWORD PTR [eax+0x14]
6400728b:	jb     0x64007292
6400728d:	mov    eax,DWORD PTR [eax+0x4]
64007290:	jmp    0x64007295
64007292:	add    eax,0x4
64007295:	push   ecx
64007296:	mov    ecx,DWORD PTR [esp+0x8]
6400729a:	push   eax
6400729b:	mov    eax,DWORD PTR [ecx+0x14]
6400729e:	push   eax
6400729f:	push   0x0
640072a1:	call   0x640091c0
640072a6:	xor    ecx,ecx
640072a8:	test   eax,eax
640072aa:	setl   cl
640072ad:	mov    al,cl
640072af:	ret    0x8
640072b2:	int3   
640072b3:	int3   
640072b4:	int3   
640072b5:	int3   
640072b6:	int3   
640072b7:	int3   
640072b8:	int3   
640072b9:	int3   
640072ba:	int3   
640072bb:	int3   
640072bc:	int3   
640072bd:	int3   
640072be:	int3   
640072bf:	int3   
640072c0:	push   0xffffffff
640072c2:	push   0x64022d38
640072c7:	mov    eax,fs:0x0
640072cd:	push   eax
640072ce:	push   ecx
640072cf:	push   esi
640072d0:	push   edi
640072d1:	mov    eax,ds:0x6402d09c
640072d6:	xor    eax,esp
640072d8:	push   eax
640072d9:	lea    eax,[esp+0x10]
640072dd:	mov    fs:0x0,eax
640072e3:	mov    esi,ecx
640072e5:	mov    DWORD PTR [esp+0xc],esi
640072e9:	mov    eax,DWORD PTR [esp+0x20]
640072ed:	xor    edi,edi
640072ef:	push   0xffffffff
640072f1:	push   edi
640072f2:	mov    DWORD PTR [esi+0x18],0x7
640072f9:	mov    DWORD PTR [esi+0x14],edi
640072fc:	push   eax
640072fd:	mov    WORD PTR [esi+0x4],di
64007301:	call   0x64006ea0
64007306:	mov    edx,DWORD PTR [esp+0x24]
6400730a:	push   0xffffffff
6400730c:	lea    ecx,[esi+0x1c]
6400730f:	mov    DWORD PTR [esp+0x1c],edi
64007313:	push   edi
64007314:	mov    DWORD PTR [ecx+0x18],0x7
6400731b:	mov    DWORD PTR [ecx+0x14],edi
6400731e:	push   edx
6400731f:	mov    WORD PTR [ecx+0x4],di
64007323:	call   0x64006ea0
64007328:	mov    eax,esi
6400732a:	mov    ecx,DWORD PTR [esp+0x10]
6400732e:	mov    DWORD PTR fs:0x0,ecx
64007335:	pop    ecx
64007336:	pop    edi
64007337:	pop    esi
64007338:	add    esp,0x10
6400733b:	ret    0x8
6400733e:	int3   
6400733f:	int3   
64007340:	push   0xffffffff
64007342:	push   0x64022eb8
64007347:	mov    eax,fs:0x0
6400734d:	push   eax
6400734e:	sub    esp,0x44
64007351:	push   ebx
64007352:	push   ebp
64007353:	push   esi
64007354:	push   edi
64007355:	mov    eax,ds:0x6402d09c
6400735a:	xor    eax,esp
6400735c:	push   eax
6400735d:	lea    eax,[esp+0x58]
64007361:	mov    fs:0x0,eax
64007367:	mov    eax,DWORD PTR [esp+0x74]
6400736b:	cmp    BYTE PTR [eax+0x29],0x0
6400736f:	je     0x640073bd
64007371:	push   0x1b
64007373:	xor    esi,esi
64007375:	push   0x640283e8
6400737a:	lea    ecx,[esp+0x1c]
6400737e:	mov    DWORD PTR [esp+0x34],0xf
64007386:	mov    DWORD PTR [esp+0x30],esi
6400738a:	mov    BYTE PTR [esp+0x20],0x0
6400738f:	call   0x64001860
64007394:	lea    eax,[esp+0x14]
64007398:	push   eax
64007399:	lea    ecx,[esp+0x34]
6400739d:	mov    DWORD PTR [esp+0x64],esi
640073a1:	call   0x64002d10
640073a6:	push   0x6402aaec
640073ab:	lea    ecx,[esp+0x34]
640073af:	push   ecx
640073b0:	mov    DWORD PTR [esp+0x38],0x64025328
640073b8:	call   0x64012a5b
640073bd:	lea    esi,[esp+0x70]
640073c1:	mov    ebp,eax
640073c3:	call   0x64006460
640073c8:	mov    eax,DWORD PTR [ebp+0x0]
640073cb:	cmp    BYTE PTR [eax+0x29],0x0
640073cf:	je     0x640073d6
640073d1:	mov    edi,DWORD PTR [ebp+0x8]
640073d4:	jmp    0x640073ee
640073d6:	mov    edx,DWORD PTR [ebp+0x8]
640073d9:	cmp    BYTE PTR [edx+0x29],0x0
640073dd:	je     0x640073e3
640073df:	mov    edi,eax
640073e1:	jmp    0x640073ee
640073e3:	mov    ecx,DWORD PTR [esp+0x74]
640073e7:	cmp    ecx,ebp
640073e9:	mov    edi,DWORD PTR [ecx+0x8]
640073ec:	jne    0x64007462
640073ee:	cmp    BYTE PTR [edi+0x29],0x0
640073f2:	mov    esi,DWORD PTR [ebp+0x4]
640073f5:	jne    0x640073fa
640073f7:	mov    DWORD PTR [edi+0x4],esi
640073fa:	mov    ecx,DWORD PTR [esp+0x68]
640073fe:	mov    eax,DWORD PTR [ecx+0x4]
64007401:	cmp    DWORD PTR [eax+0x4],ebp
64007404:	jne    0x6400740b
64007406:	mov    DWORD PTR [eax+0x4],edi
64007409:	jmp    0x64007416
6400740b:	cmp    DWORD PTR [esi],ebp
6400740d:	jne    0x64007413
6400740f:	mov    DWORD PTR [esi],edi
64007411:	jmp    0x64007416
64007413:	mov    DWORD PTR [esi+0x8],edi
64007416:	mov    edx,DWORD PTR [ecx+0x4]
64007419:	cmp    DWORD PTR [edx],ebp
6400741b:	jne    0x6400743d
6400741d:	cmp    BYTE PTR [edi+0x29],0x0
64007421:	je     0x64007427
64007423:	mov    ecx,esi
64007425:	jmp    0x6400743b
64007427:	mov    eax,DWORD PTR [edi]
64007429:	cmp    BYTE PTR [eax+0x29],0x0
6400742d:	mov    ecx,edi
6400742f:	jne    0x6400743b
64007431:	mov    ecx,eax
64007433:	mov    eax,DWORD PTR [ecx]
64007435:	cmp    BYTE PTR [eax+0x29],0x0
64007439:	je     0x64007431
6400743b:	mov    DWORD PTR [edx],ecx
6400743d:	mov    eax,DWORD PTR [esp+0x68]
64007441:	mov    ebx,DWORD PTR [eax+0x4]
64007444:	cmp    DWORD PTR [ebx+0x8],ebp
64007447:	jne    0x640074be
64007449:	cmp    BYTE PTR [edi+0x29],0x0
6400744d:	je     0x64007456
6400744f:	mov    eax,esi
64007451:	mov    DWORD PTR [ebx+0x8],eax
64007454:	jmp    0x640074be
64007456:	mov    eax,edi
64007458:	call   0x640076e0
6400745d:	mov    DWORD PTR [ebx+0x8],eax
64007460:	jmp    0x640074be
64007462:	mov    DWORD PTR [eax+0x4],ecx
64007465:	mov    edx,DWORD PTR [ebp+0x0]
64007468:	mov    DWORD PTR [ecx],edx
6400746a:	cmp    ecx,DWORD PTR [ebp+0x8]
6400746d:	jne    0x64007473
6400746f:	mov    esi,ecx
64007471:	jmp    0x6400748d
64007473:	cmp    BYTE PTR [edi+0x29],0x0
64007477:	mov    esi,DWORD PTR [ecx+0x4]
6400747a:	jne    0x6400747f
6400747c:	mov    DWORD PTR [edi+0x4],esi
6400747f:	mov    DWORD PTR [esi],edi
64007481:	mov    eax,DWORD PTR [ebp+0x8]
64007484:	mov    DWORD PTR [ecx+0x8],eax
64007487:	mov    edx,DWORD PTR [ebp+0x8]
6400748a:	mov    DWORD PTR [edx+0x4],ecx
6400748d:	mov    eax,DWORD PTR [esp+0x68]
64007491:	mov    eax,DWORD PTR [eax+0x4]
64007494:	cmp    DWORD PTR [eax+0x4],ebp
64007497:	jne    0x6400749e
64007499:	mov    DWORD PTR [eax+0x4],ecx
6400749c:	jmp    0x640074ac
6400749e:	mov    eax,DWORD PTR [ebp+0x4]
640074a1:	cmp    DWORD PTR [eax],ebp
640074a3:	jne    0x640074a9
640074a5:	mov    DWORD PTR [eax],ecx
640074a7:	jmp    0x640074ac
640074a9:	mov    DWORD PTR [eax+0x8],ecx
640074ac:	mov    edx,DWORD PTR [ebp+0x4]
640074af:	mov    DWORD PTR [ecx+0x4],edx
640074b2:	mov    dl,BYTE PTR [ebp+0x28]
640074b5:	mov    al,BYTE PTR [ecx+0x28]
640074b8:	mov    BYTE PTR [ecx+0x28],dl
640074bb:	mov    BYTE PTR [ebp+0x28],al
640074be:	mov    bl,0x1
640074c0:	cmp    BYTE PTR [ebp+0x28],bl
640074c3:	jne    0x640075ea
640074c9:	mov    eax,DWORD PTR [esp+0x68]
640074cd:	mov    ecx,DWORD PTR [eax+0x4]
640074d0:	cmp    edi,DWORD PTR [ecx+0x4]
640074d3:	je     0x640075e7
640074d9:	lea    esp,[esp+0x0]
640074e0:	cmp    BYTE PTR [edi+0x28],bl
640074e3:	jne    0x640075e7
640074e9:	mov    ecx,DWORD PTR [esi]
640074eb:	cmp    edi,ecx
640074ed:	jne    0x64007565
640074ef:	mov    ecx,DWORD PTR [esi+0x8]
640074f2:	cmp    BYTE PTR [ecx+0x28],0x0
640074f6:	jne    0x6400750e
640074f8:	mov    edx,DWORD PTR [esp+0x68]
640074fc:	mov    BYTE PTR [ecx+0x28],bl
640074ff:	push   edx
64007500:	mov    ecx,esi
64007502:	mov    BYTE PTR [esi+0x28],0x0
64007506:	call   0x64006ac0
6400750b:	mov    ecx,DWORD PTR [esi+0x8]
6400750e:	cmp    BYTE PTR [ecx+0x29],0x0
64007512:	jne    0x64007599
64007518:	mov    eax,DWORD PTR [ecx]
6400751a:	cmp    BYTE PTR [eax+0x28],bl
6400751d:	jne    0x64007527
6400751f:	mov    edx,DWORD PTR [ecx+0x8]
64007522:	cmp    BYTE PTR [edx+0x28],bl
64007525:	je     0x64007595
64007527:	mov    eax,DWORD PTR [ecx+0x8]
6400752a:	cmp    BYTE PTR [eax+0x28],bl
6400752d:	jne    0x64007545
6400752f:	mov    edx,DWORD PTR [ecx]
64007531:	mov    eax,DWORD PTR [esp+0x68]
64007535:	mov    BYTE PTR [edx+0x28],bl
64007538:	push   eax
64007539:	mov    BYTE PTR [ecx+0x28],0x0
6400753d:	call   0x64006b10
64007542:	mov    ecx,DWORD PTR [esi+0x8]
64007545:	mov    dl,BYTE PTR [esi+0x28]
64007548:	mov    BYTE PTR [ecx+0x28],dl
6400754b:	mov    BYTE PTR [esi+0x28],bl
6400754e:	mov    eax,DWORD PTR [ecx+0x8]
64007551:	mov    ecx,DWORD PTR [esp+0x68]
64007555:	push   ecx
64007556:	mov    ecx,esi
64007558:	mov    BYTE PTR [eax+0x28],bl
6400755b:	call   0x64006ac0
64007560:	jmp    0x640075e7
64007565:	cmp    BYTE PTR [ecx+0x28],0x0
64007569:	jne    0x64007580
6400756b:	mov    eax,DWORD PTR [esp+0x68]
6400756f:	mov    BYTE PTR [ecx+0x28],bl
64007572:	push   eax
64007573:	mov    ecx,esi
64007575:	mov    BYTE PTR [esi+0x28],0x0
64007579:	call   0x64006b10
6400757e:	mov    ecx,DWORD PTR [esi]
64007580:	cmp    BYTE PTR [ecx+0x29],0x0
64007584:	jne    0x64007599
64007586:	mov    edx,DWORD PTR [ecx+0x8]
64007589:	cmp    BYTE PTR [edx+0x28],bl
6400758c:	jne    0x640075b0
6400758e:	mov    eax,DWORD PTR [ecx]
64007590:	cmp    BYTE PTR [eax+0x28],bl
64007593:	jne    0x640075b0
64007595:	mov    BYTE PTR [ecx+0x28],0x0
64007599:	mov    ecx,DWORD PTR [esp+0x68]
6400759d:	mov    edx,DWORD PTR [ecx+0x4]
640075a0:	mov    edi,esi
640075a2:	cmp    edi,DWORD PTR [edx+0x4]
640075a5:	mov    esi,DWORD PTR [esi+0x4]
640075a8:	jne    0x640074e0
640075ae:	jmp    0x640075e7
640075b0:	mov    edx,DWORD PTR [ecx]
640075b2:	cmp    BYTE PTR [edx+0x28],bl
640075b5:	jne    0x640075cd
640075b7:	mov    eax,DWORD PTR [ecx+0x8]
640075ba:	mov    edx,DWORD PTR [esp+0x68]
640075be:	mov    BYTE PTR [eax+0x28],bl
640075c1:	push   edx
640075c2:	mov    BYTE PTR [ecx+0x28],0x0
640075c6:	call   0x64006ac0
640075cb:	mov    ecx,DWORD PTR [esi]
640075cd:	mov    al,BYTE PTR [esi+0x28]
640075d0:	mov    edx,DWORD PTR [esp+0x68]
640075d4:	mov    BYTE PTR [ecx+0x28],al
640075d7:	mov    BYTE PTR [esi+0x28],bl
640075da:	mov    ecx,DWORD PTR [ecx]
640075dc:	mov    BYTE PTR [ecx+0x28],bl
640075df:	push   edx
640075e0:	mov    ecx,esi
640075e2:	call   0x64006b10
640075e7:	mov    BYTE PTR [edi+0x28],bl
640075ea:	cmp    DWORD PTR [ebp+0x24],0x10
640075ee:	jb     0x640075fc
640075f0:	mov    eax,DWORD PTR [ebp+0x10]
640075f3:	push   eax
640075f4:	call   0x64012612
640075f9:	add    esp,0x4
640075fc:	mov    DWORD PTR [ebp+0x24],0xf
64007603:	mov    DWORD PTR [ebp+0x20],0x0
6400760a:	push   ebp
6400760b:	mov    BYTE PTR [ebp+0x10],0x0
6400760f:	call   0x64012612
64007614:	mov    ecx,DWORD PTR [esp+0x6c]
64007618:	mov    eax,DWORD PTR [ecx+0x8]
6400761b:	add    esp,0x4
6400761e:	test   eax,eax
64007620:	jbe    0x64007628
64007622:	add    eax,0xffffffff
64007625:	mov    DWORD PTR [ecx+0x8],eax
64007628:	mov    eax,DWORD PTR [esp+0x6c]
6400762c:	mov    ecx,DWORD PTR [esp+0x70]
64007630:	mov    edx,DWORD PTR [esp+0x74]
64007634:	mov    DWORD PTR [eax],ecx
64007636:	mov    DWORD PTR [eax+0x4],edx
64007639:	mov    ecx,DWORD PTR [esp+0x58]
6400763d:	mov    DWORD PTR fs:0x0,ecx
64007644:	pop    ecx
64007645:	pop    edi
64007646:	pop    esi
64007647:	pop    ebp
64007648:	pop    ebx
64007649:	add    esp,0x50
6400764c:	ret    0x10
6400764f:	int3   
64007650:	sub    esp,0x8
64007653:	mov    eax,DWORD PTR [eax+0x4]
64007656:	push   esi
64007657:	mov    esi,DWORD PTR [eax+0x4]
6400765a:	cmp    BYTE PTR [esi+0x29],0x0
6400765e:	mov    DWORD PTR [esp+0x4],eax
64007662:	jne    0x640076d5
64007664:	mov    edx,DWORD PTR [ecx+0x18]
64007667:	push   ebx
64007668:	mov    ebx,DWORD PTR [ecx+0x14]
6400766b:	push   ebp
6400766c:	push   edi
6400766d:	mov    DWORD PTR [esp+0x14],edx
64007671:	lea    ebp,[ecx+0x4]
64007674:	cmp    DWORD PTR [esp+0x14],0x10
64007679:	jb     0x64007680
6400767b:	mov    edx,DWORD PTR [ebp+0x0]
6400767e:	jmp    0x64007682
64007680:	mov    edx,ebp
64007682:	mov    edi,DWORD PTR [esi+0x20]
64007685:	mov    eax,edi
64007687:	cmp    eax,edi
64007689:	jae    0x6400768b
6400768b:	cmp    edi,ebx
6400768d:	mov    ecx,edi
6400768f:	jb     0x64007693
64007691:	mov    ecx,ebx
64007693:	cmp    DWORD PTR [esi+0x24],0x10
64007697:	jb     0x6400769e
64007699:	mov    eax,DWORD PTR [esi+0x10]
6400769c:	jmp    0x640076a1
6400769e:	lea    eax,[esi+0x10]
640076a1:	push   ecx
640076a2:	push   edx
640076a3:	push   eax
640076a4:	call   0x64002c80
640076a9:	add    esp,0xc
640076ac:	test   eax,eax
640076ae:	jne    0x640076bb
640076b0:	cmp    edi,ebx
640076b2:	jb     0x640076bd
640076b4:	cmp    edi,ebx
640076b6:	setne  al
640076b9:	test   eax,eax
640076bb:	jge    0x640076c2
640076bd:	mov    esi,DWORD PTR [esi+0x8]
640076c0:	jmp    0x640076c8
640076c2:	mov    DWORD PTR [esp+0x10],esi
640076c6:	mov    esi,DWORD PTR [esi]
640076c8:	cmp    BYTE PTR [esi+0x29],0x0
640076cc:	je     0x64007674
640076ce:	mov    eax,DWORD PTR [esp+0x10]
640076d2:	pop    edi
640076d3:	pop    ebp
640076d4:	pop    ebx
640076d5:	pop    esi
640076d6:	add    esp,0x8
640076d9:	ret    
640076da:	int3   
640076db:	int3   
640076dc:	int3   
640076dd:	int3   
640076de:	int3   
640076df:	int3   
640076e0:	mov    ecx,DWORD PTR [eax+0x8]
640076e3:	cmp    BYTE PTR [ecx+0x29],0x0
640076e7:	jne    0x640076fb
640076e9:	lea    esp,[esp+0x0]
640076f0:	mov    eax,ecx
640076f2:	mov    ecx,DWORD PTR [eax+0x8]
640076f5:	cmp    BYTE PTR [ecx+0x29],0x0
640076f9:	je     0x640076f0
640076fb:	ret    
640076fc:	int3   
640076fd:	int3   
640076fe:	int3   
640076ff:	int3   
64007700:	sub    esp,0x10
64007703:	mov    ecx,DWORD PTR [ecx+0x4]
64007706:	push   edi
64007707:	mov    edi,DWORD PTR [ecx+0x4]
6400770a:	cmp    BYTE PTR [edi+0x29],0x0
6400770e:	mov    DWORD PTR [esp+0x8],ecx
64007712:	jne    0x64007791
64007714:	mov    edx,DWORD PTR [eax+0x14]
64007717:	mov    ecx,DWORD PTR [eax+0x18]
6400771a:	push   ebx
6400771b:	push   ebp
6400771c:	add    eax,0x4
6400771f:	push   esi
64007720:	mov    ebp,edx
64007722:	mov    DWORD PTR [esp+0x1c],ecx
64007726:	mov    DWORD PTR [esp+0x10],eax
6400772a:	lea    ebx,[ebx+0x0]
64007730:	cmp    DWORD PTR [edi+0x24],0x10
64007734:	mov    ebx,DWORD PTR [edi+0x20]
64007737:	jb     0x6400773e
64007739:	mov    edx,DWORD PTR [edi+0x10]
6400773c:	jmp    0x64007741
6400773e:	lea    edx,[edi+0x10]
64007741:	mov    esi,ebp
64007743:	cmp    esi,ebx
64007745:	mov    ecx,esi
64007747:	jb     0x6400774b
64007749:	mov    ecx,ebx
6400774b:	cmp    DWORD PTR [esp+0x1c],0x10
64007750:	mov    eax,DWORD PTR [esp+0x10]
64007754:	jb     0x64007758
64007756:	mov    eax,DWORD PTR [eax]
64007758:	push   ecx
64007759:	push   edx
6400775a:	push   eax
6400775b:	call   0x64002c80
64007760:	add    esp,0xc
64007763:	test   eax,eax
64007765:	jne    0x64007772
64007767:	cmp    esi,ebx
64007769:	jb     0x64007774
6400776b:	cmp    esi,ebx
6400776d:	setne  al
64007770:	test   eax,eax
64007772:	jge    0x6400777c
64007774:	mov    DWORD PTR [esp+0x14],edi
64007778:	mov    edi,DWORD PTR [edi]
6400777a:	jmp    0x6400777f
6400777c:	mov    edi,DWORD PTR [edi+0x8]
6400777f:	cmp    BYTE PTR [edi+0x29],0x0
64007783:	je     0x64007730
64007785:	mov    eax,DWORD PTR [esp+0x14]
64007789:	pop    esi
6400778a:	pop    ebp
6400778b:	pop    ebx
6400778c:	pop    edi
6400778d:	add    esp,0x10
64007790:	ret    
64007791:	mov    eax,ecx
64007793:	pop    edi
64007794:	add    esp,0x10
64007797:	ret    
64007798:	int3   
64007799:	int3   
6400779a:	int3   
6400779b:	int3   
6400779c:	int3   
6400779d:	int3   
6400779e:	int3   
6400779f:	int3   
640077a0:	push   0x2c
640077a2:	call   0x640129f1
640077a7:	add    esp,0x4
640077aa:	test   eax,eax
640077ac:	je     0x640077b4
640077ae:	mov    DWORD PTR [eax],0x0
640077b4:	lea    ecx,[eax+0x4]
640077b7:	test   ecx,ecx
640077b9:	je     0x640077c1
640077bb:	mov    DWORD PTR [ecx],0x0
640077c1:	lea    ecx,[eax+0x8]
640077c4:	test   ecx,ecx
640077c6:	je     0x640077ce
640077c8:	mov    DWORD PTR [ecx],0x0
640077ce:	mov    BYTE PTR [eax+0x28],0x1
640077d2:	mov    BYTE PTR [eax+0x29],0x0
640077d6:	ret    
640077d7:	int3   
640077d8:	int3   
640077d9:	int3   
640077da:	int3   
640077db:	int3   
640077dc:	int3   
640077dd:	int3   
640077de:	int3   
640077df:	int3   
640077e0:	cmp    DWORD PTR [esi],0x0
640077e3:	jne    0x640077ea
640077e5:	call   0x640129c8
640077ea:	mov    eax,DWORD PTR [esi+0x4]
640077ed:	cmp    BYTE PTR [eax+0x29],0x0
640077f1:	je     0x64007804
640077f3:	mov    eax,DWORD PTR [eax+0x8]
640077f6:	mov    DWORD PTR [esi+0x4],eax
640077f9:	cmp    BYTE PTR [eax+0x29],0x0
640077fd:	je     0x64007856
640077ff:	jmp    0x640129c8
64007804:	mov    ecx,DWORD PTR [eax]
64007806:	cmp    BYTE PTR [ecx+0x29],0x0
6400780a:	jne    0x64007824
6400780c:	mov    eax,DWORD PTR [ecx+0x8]
6400780f:	cmp    BYTE PTR [eax+0x29],0x0
64007813:	jne    0x64007820
64007815:	mov    ecx,eax
64007817:	mov    eax,DWORD PTR [ecx+0x8]
6400781a:	cmp    BYTE PTR [eax+0x29],0x0
6400781e:	je     0x64007815
64007820:	mov    DWORD PTR [esi+0x4],ecx
64007823:	ret    
64007824:	mov    eax,DWORD PTR [eax+0x4]
64007827:	cmp    BYTE PTR [eax+0x29],0x0
6400782b:	jne    0x64007845
6400782d:	lea    ecx,[ecx+0x0]
64007830:	mov    ecx,DWORD PTR [esi+0x4]
64007833:	cmp    ecx,DWORD PTR [eax]
64007835:	jne    0x64007845
64007837:	mov    DWORD PTR [esi+0x4],eax
6400783a:	mov    edx,eax
6400783c:	mov    eax,DWORD PTR [edx+0x4]
6400783f:	cmp    BYTE PTR [eax+0x29],0x0
64007843:	je     0x64007830
64007845:	mov    ecx,DWORD PTR [esi+0x4]
64007848:	cmp    BYTE PTR [ecx+0x29],0x0
6400784c:	je     0x64007853
6400784e:	jmp    0x640129c8
64007853:	mov    DWORD PTR [esi+0x4],eax
64007856:	ret    
64007857:	int3   
64007858:	int3   
64007859:	int3   
6400785a:	int3   
6400785b:	int3   
6400785c:	int3   
6400785d:	int3   
6400785e:	int3   
6400785f:	int3   
64007860:	push   ebp
64007861:	mov    ebp,esp
64007863:	and    esp,0xfffffff8
64007866:	sub    esp,0x24
64007869:	push   ebx
6400786a:	push   esi
6400786b:	push   edi
6400786c:	mov    edi,ecx
6400786e:	mov    eax,DWORD PTR [edi+0x4]
64007871:	mov    esi,DWORD PTR [eax+0x4]
64007874:	cmp    BYTE PTR [esi+0x45],0x0
64007878:	mov    ecx,eax
6400787a:	mov    al,0x1
6400787c:	mov    DWORD PTR [esp+0x28],edi
64007880:	mov    DWORD PTR [esp+0x10],ecx
64007884:	mov    BYTE PTR [esp+0x18],al
64007888:	jne    0x64007928
6400788e:	mov    edx,DWORD PTR [ebp+0xc]
64007891:	mov    eax,DWORD PTR [edx+0x14]
64007894:	mov    ecx,DWORD PTR [edx+0x18]
64007897:	mov    DWORD PTR [esp+0x20],eax
6400789b:	mov    DWORD PTR [esp+0x1c],eax
6400789f:	mov    DWORD PTR [esp+0x24],ecx
640078a3:	jmp    0x640078ac
640078a5:	mov    edx,DWORD PTR [ebp+0xc]
640078a8:	mov    eax,DWORD PTR [esp+0x1c]
640078ac:	cmp    DWORD PTR [esi+0x24],0x10
640078b0:	mov    ebx,DWORD PTR [esi+0x20]
640078b3:	mov    DWORD PTR [esp+0x10],esi
640078b7:	jb     0x640078be
640078b9:	mov    ecx,DWORD PTR [esi+0x10]
640078bc:	jmp    0x640078c1
640078be:	lea    ecx,[esi+0x10]
640078c1:	mov    edi,DWORD PTR [esp+0x20]
640078c5:	cmp    eax,edi
640078c7:	mov    DWORD PTR [esp+0x14],ecx
640078cb:	jae    0x640078cf
640078cd:	mov    edi,eax
640078cf:	cmp    edi,ebx
640078d1:	mov    ecx,edi
640078d3:	jb     0x640078d7
640078d5:	mov    ecx,ebx
640078d7:	cmp    DWORD PTR [esp+0x24],0x10
640078dc:	lea    eax,[edx+0x4]
640078df:	jb     0x640078e3
640078e1:	mov    eax,DWORD PTR [eax]
640078e3:	mov    edx,DWORD PTR [esp+0x14]
640078e7:	push   ecx
640078e8:	push   edx
640078e9:	push   eax
640078ea:	call   0x64002c80
640078ef:	add    esp,0xc
640078f2:	test   eax,eax
640078f4:	jne    0x64007908
640078f6:	cmp    edi,ebx
640078f8:	jae    0x640078ff
640078fa:	or     eax,0xffffffff
640078fd:	jmp    0x64007906
640078ff:	xor    eax,eax
64007901:	cmp    edi,ebx
64007903:	setne  al
64007906:	test   eax,eax
64007908:	setl   al
6400790b:	test   al,al
6400790d:	mov    BYTE PTR [esp+0x18],al
64007911:	je     0x64007917
64007913:	mov    esi,DWORD PTR [esi]
64007915:	jmp    0x6400791a
64007917:	mov    esi,DWORD PTR [esi+0x8]
6400791a:	cmp    BYTE PTR [esi+0x45],0x0
6400791e:	je     0x640078a5
64007920:	mov    edi,DWORD PTR [esp+0x28]
64007924:	mov    ecx,DWORD PTR [esp+0x10]
64007928:	test   al,al
6400792a:	mov    esi,ecx
6400792c:	mov    DWORD PTR [esp+0x2c],esi
64007930:	mov    DWORD PTR [esp+0x28],edi
64007934:	je     0x64007979
64007936:	mov    eax,DWORD PTR [edi+0x4]
64007939:	cmp    ecx,DWORD PTR [eax]
6400793b:	jne    0x6400796c
6400793d:	mov    edx,DWORD PTR [ebp+0xc]
64007940:	push   edx
64007941:	push   ecx
64007942:	push   0x1
64007944:	lea    eax,[esp+0x34]
64007948:	push   eax
64007949:	mov    ecx,edi
6400794b:	call   0x640079f0
64007950:	mov    ecx,eax
64007952:	mov    edx,DWORD PTR [ecx]
64007954:	mov    eax,DWORD PTR [ebp+0x8]
64007957:	mov    ecx,DWORD PTR [ecx+0x4]
6400795a:	mov    DWORD PTR [eax+0x4],ecx
6400795d:	mov    BYTE PTR [eax+0x8],0x1
64007961:	mov    DWORD PTR [eax],edx
64007963:	pop    edi
64007964:	pop    esi
64007965:	pop    ebx
64007966:	mov    esp,ebp
64007968:	pop    ebp
64007969:	ret    0x8
6400796c:	lea    ecx,[esp+0x28]
64007970:	call   0x64008e40
64007975:	mov    esi,DWORD PTR [esp+0x2c]
64007979:	mov    ebx,DWORD PTR [ebp+0xc]
6400797c:	cmp    DWORD PTR [ebx+0x18],0x10
64007980:	mov    edx,DWORD PTR [ebx+0x14]
64007983:	lea    ecx,[esi+0xc]
64007986:	jb     0x6400798d
64007988:	mov    eax,DWORD PTR [ebx+0x4]
6400798b:	jmp    0x64007990
6400798d:	lea    eax,[ebx+0x4]
64007990:	push   edx
64007991:	mov    edx,DWORD PTR [ecx+0x14]
64007994:	push   eax
64007995:	push   edx
64007996:	push   0x0
64007998:	call   0x64005e30
6400799d:	test   eax,eax
6400799f:	jge    0x640079d4
640079a1:	mov    eax,DWORD PTR [esp+0x10]
640079a5:	mov    ecx,DWORD PTR [esp+0x18]
640079a9:	push   ebx
640079aa:	push   eax
640079ab:	push   ecx
640079ac:	lea    edx,[esp+0x34]
640079b0:	push   edx
640079b1:	mov    ecx,edi
640079b3:	call   0x640079f0
640079b8:	mov    ecx,eax
640079ba:	mov    edx,DWORD PTR [ecx]
640079bc:	mov    eax,DWORD PTR [ebp+0x8]
640079bf:	mov    ecx,DWORD PTR [ecx+0x4]
640079c2:	mov    DWORD PTR [eax+0x4],ecx
640079c5:	mov    BYTE PTR [eax+0x8],0x1
640079c9:	mov    DWORD PTR [eax],edx
640079cb:	pop    edi
640079cc:	pop    esi
640079cd:	pop    ebx
640079ce:	mov    esp,ebp
640079d0:	pop    ebp
640079d1:	ret    0x8
640079d4:	mov    eax,DWORD PTR [ebp+0x8]
640079d7:	mov    edx,DWORD PTR [esp+0x28]
640079db:	pop    edi
640079dc:	mov    DWORD PTR [eax+0x4],esi
640079df:	pop    esi
640079e0:	mov    BYTE PTR [eax+0x8],0x0
640079e4:	mov    DWORD PTR [eax],edx
640079e6:	pop    ebx
640079e7:	mov    esp,ebp
640079e9:	pop    ebp
640079ea:	ret    0x8
640079ed:	int3   
640079ee:	int3   
640079ef:	int3   
640079f0:	push   ebp
640079f1:	mov    ebp,esp
640079f3:	and    esp,0xfffffff8
640079f6:	push   0xffffffff
640079f8:	push   0x64022e88
640079fd:	mov    eax,fs:0x0
64007a03:	push   eax
64007a04:	sub    esp,0x50
64007a07:	push   ebx
64007a08:	push   esi
64007a09:	push   edi
64007a0a:	mov    eax,ds:0x6402d09c
64007a0f:	xor    eax,esp
64007a11:	push   eax
64007a12:	lea    eax,[esp+0x60]
64007a16:	mov    fs:0x0,eax
64007a1c:	mov    edi,ecx
64007a1e:	xor    ebx,ebx
64007a20:	cmp    DWORD PTR [edi+0x8],0x4924923
64007a27:	jb     0x64007a72
64007a29:	push   0x13
64007a2b:	push   0x640283d4
64007a30:	lea    ecx,[esp+0x20]
64007a34:	mov    DWORD PTR [esp+0x38],0xf
64007a3c:	mov    DWORD PTR [esp+0x34],ebx
64007a40:	mov    BYTE PTR [esp+0x24],bl
64007a44:	call   0x64001860
64007a49:	lea    eax,[esp+0x18]
64007a4d:	push   eax
64007a4e:	lea    ecx,[esp+0x38]
64007a52:	mov    DWORD PTR [esp+0x6c],ebx
64007a56:	call   0x64002d10
64007a5b:	push   0x6402ab28
64007a60:	lea    ecx,[esp+0x38]
64007a64:	push   ecx
64007a65:	mov    DWORD PTR [esp+0x3c],0x6402531c
64007a6d:	call   0x64012a5b
64007a72:	mov    edx,DWORD PTR [ebp+0x14]
64007a75:	mov    eax,DWORD PTR [edi+0x4]
64007a78:	mov    esi,DWORD PTR [ebp+0x10]
64007a7b:	push   ebx
64007a7c:	push   edx
64007a7d:	push   eax
64007a7e:	push   esi
64007a7f:	push   eax
64007a80:	call   0x640082a0
64007a85:	add    DWORD PTR [edi+0x8],0x1
64007a89:	mov    ecx,eax
64007a8b:	mov    eax,DWORD PTR [edi+0x4]
64007a8e:	cmp    esi,eax
64007a90:	mov    DWORD PTR [esp+0x14],ecx
64007a94:	jne    0x64007aa6
64007a96:	mov    DWORD PTR [eax+0x4],ecx
64007a99:	mov    eax,DWORD PTR [edi+0x4]
64007a9c:	mov    DWORD PTR [eax],ecx
64007a9e:	mov    edx,DWORD PTR [edi+0x4]
64007aa1:	mov    DWORD PTR [edx+0x8],ecx
64007aa4:	jmp    0x64007ac6
64007aa6:	cmp    BYTE PTR [ebp+0xc],bl
64007aa9:	je     0x64007ab8
64007aab:	mov    DWORD PTR [esi],ecx
64007aad:	mov    eax,DWORD PTR [edi+0x4]
64007ab0:	cmp    esi,DWORD PTR [eax]
64007ab2:	jne    0x64007ac6
64007ab4:	mov    DWORD PTR [eax],ecx
64007ab6:	jmp    0x64007ac6
64007ab8:	mov    DWORD PTR [esi+0x8],ecx
64007abb:	mov    eax,DWORD PTR [edi+0x4]
64007abe:	cmp    esi,DWORD PTR [eax+0x8]
64007ac1:	jne    0x64007ac6
64007ac3:	mov    DWORD PTR [eax+0x8],ecx
64007ac6:	mov    edx,DWORD PTR [ecx+0x4]
64007ac9:	cmp    BYTE PTR [edx+0x44],bl
64007acc:	lea    eax,[ecx+0x4]
64007acf:	mov    esi,ecx
64007ad1:	jne    0x64007c12
64007ad7:	mov    ecx,DWORD PTR [eax]
64007ad9:	mov    edx,DWORD PTR [ecx+0x4]
64007adc:	cmp    ecx,DWORD PTR [edx]
64007ade:	jne    0x64007b85
64007ae4:	mov    edx,DWORD PTR [edx+0x8]
64007ae7:	cmp    BYTE PTR [edx+0x44],bl
64007aea:	je     0x64007b8c
64007af0:	cmp    esi,DWORD PTR [ecx+0x8]
64007af3:	jne    0x64007b30
64007af5:	mov    esi,ecx
64007af7:	mov    ecx,DWORD PTR [esi+0x8]
64007afa:	mov    eax,DWORD PTR [ecx]
64007afc:	mov    DWORD PTR [esi+0x8],eax
64007aff:	mov    eax,DWORD PTR [ecx]
64007b01:	cmp    BYTE PTR [eax+0x45],bl
64007b04:	jne    0x64007b09
64007b06:	mov    DWORD PTR [eax+0x4],esi
64007b09:	mov    edx,DWORD PTR [esi+0x4]
64007b0c:	lea    eax,[esi+0x4]
64007b0f:	mov    DWORD PTR [ecx+0x4],edx
64007b12:	mov    edx,DWORD PTR [edi+0x4]
64007b15:	cmp    esi,DWORD PTR [edx+0x4]
64007b18:	jne    0x64007b1f
64007b1a:	mov    DWORD PTR [edx+0x4],ecx
64007b1d:	jmp    0x64007b2c
64007b1f:	mov    edx,DWORD PTR [eax]
64007b21:	cmp    esi,DWORD PTR [edx]
64007b23:	jne    0x64007b29
64007b25:	mov    DWORD PTR [edx],ecx
64007b27:	jmp    0x64007b2c
64007b29:	mov    DWORD PTR [edx+0x8],ecx
64007b2c:	mov    DWORD PTR [ecx],esi
64007b2e:	mov    DWORD PTR [eax],ecx
64007b30:	mov    ecx,DWORD PTR [eax]
64007b32:	mov    BYTE PTR [ecx+0x44],0x1
64007b36:	mov    edx,DWORD PTR [eax]
64007b38:	mov    ecx,DWORD PTR [edx+0x4]
64007b3b:	mov    BYTE PTR [ecx+0x44],bl
64007b3e:	mov    edx,DWORD PTR [eax]
64007b40:	mov    eax,DWORD PTR [edx+0x4]
64007b43:	mov    ecx,DWORD PTR [eax]
64007b45:	mov    edx,DWORD PTR [ecx+0x8]
64007b48:	mov    DWORD PTR [eax],edx
64007b4a:	mov    edx,DWORD PTR [ecx+0x8]
64007b4d:	cmp    BYTE PTR [edx+0x45],bl
64007b50:	jne    0x64007b55
64007b52:	mov    DWORD PTR [edx+0x4],eax
64007b55:	mov    edx,DWORD PTR [eax+0x4]
64007b58:	mov    DWORD PTR [ecx+0x4],edx
64007b5b:	mov    edx,DWORD PTR [edi+0x4]
64007b5e:	cmp    eax,DWORD PTR [edx+0x4]
64007b61:	jne    0x64007b6e
64007b63:	mov    DWORD PTR [edx+0x4],ecx
64007b66:	mov    DWORD PTR [ecx+0x8],eax
64007b69:	jmp    0x64007bfc
64007b6e:	mov    edx,DWORD PTR [eax+0x4]
64007b71:	cmp    eax,DWORD PTR [edx+0x8]
64007b74:	jne    0x64007b7e
64007b76:	mov    DWORD PTR [edx+0x8],ecx
64007b79:	mov    DWORD PTR [ecx+0x8],eax
64007b7c:	jmp    0x64007bfc
64007b7e:	mov    DWORD PTR [edx],ecx
64007b80:	mov    DWORD PTR [ecx+0x8],eax
64007b83:	jmp    0x64007bfc
64007b85:	mov    edx,DWORD PTR [edx]
64007b87:	cmp    BYTE PTR [edx+0x44],bl
64007b8a:	jne    0x64007ba3
64007b8c:	mov    BYTE PTR [ecx+0x44],0x1
64007b90:	mov    BYTE PTR [edx+0x44],0x1
64007b94:	mov    edx,DWORD PTR [eax]
64007b96:	mov    ecx,DWORD PTR [edx+0x4]
64007b99:	mov    BYTE PTR [ecx+0x44],bl
64007b9c:	mov    edx,DWORD PTR [eax]
64007b9e:	mov    esi,DWORD PTR [edx+0x4]
64007ba1:	jmp    0x64007bff
64007ba3:	cmp    esi,DWORD PTR [ecx]
64007ba5:	jne    0x64007bb1
64007ba7:	mov    esi,ecx
64007ba9:	push   esi
64007baa:	mov    ecx,edi
64007bac:	call   0x640085f0
64007bb1:	mov    eax,DWORD PTR [esi+0x4]
64007bb4:	mov    BYTE PTR [eax+0x44],0x1
64007bb8:	mov    ecx,DWORD PTR [esi+0x4]
64007bbb:	mov    edx,DWORD PTR [ecx+0x4]
64007bbe:	mov    BYTE PTR [edx+0x44],bl
64007bc1:	mov    eax,DWORD PTR [esi+0x4]
64007bc4:	mov    eax,DWORD PTR [eax+0x4]
64007bc7:	mov    ecx,DWORD PTR [eax+0x8]
64007bca:	mov    edx,DWORD PTR [ecx]
64007bcc:	mov    DWORD PTR [eax+0x8],edx
64007bcf:	mov    edx,DWORD PTR [ecx]
64007bd1:	cmp    BYTE PTR [edx+0x45],bl
64007bd4:	jne    0x64007bd9
64007bd6:	mov    DWORD PTR [edx+0x4],eax
64007bd9:	mov    edx,DWORD PTR [eax+0x4]
64007bdc:	mov    DWORD PTR [ecx+0x4],edx
64007bdf:	mov    edx,DWORD PTR [edi+0x4]
64007be2:	cmp    eax,DWORD PTR [edx+0x4]
64007be5:	jne    0x64007bec
64007be7:	mov    DWORD PTR [edx+0x4],ecx
64007bea:	jmp    0x64007bfa
64007bec:	mov    edx,DWORD PTR [eax+0x4]
64007bef:	cmp    eax,DWORD PTR [edx]
64007bf1:	jne    0x64007bf7
64007bf3:	mov    DWORD PTR [edx],ecx
64007bf5:	jmp    0x64007bfa
64007bf7:	mov    DWORD PTR [edx+0x8],ecx
64007bfa:	mov    DWORD PTR [ecx],eax
64007bfc:	mov    DWORD PTR [eax+0x4],ecx
64007bff:	mov    ecx,DWORD PTR [esi+0x4]
64007c02:	cmp    BYTE PTR [ecx+0x44],bl
64007c05:	lea    eax,[esi+0x4]
64007c08:	je     0x64007ad7
64007c0e:	mov    ecx,DWORD PTR [esp+0x14]
64007c12:	mov    edx,DWORD PTR [edi+0x4]
64007c15:	mov    eax,DWORD PTR [edx+0x4]
64007c18:	mov    BYTE PTR [eax+0x44],0x1
64007c1c:	mov    eax,DWORD PTR [ebp+0x8]
64007c1f:	mov    DWORD PTR [eax+0x4],ecx
64007c22:	mov    DWORD PTR [eax],edi
64007c24:	mov    ecx,DWORD PTR [esp+0x60]
64007c28:	mov    DWORD PTR fs:0x0,ecx
64007c2f:	pop    ecx
64007c30:	pop    edi
64007c31:	pop    esi
64007c32:	pop    ebx
64007c33:	mov    esp,ebp
64007c35:	pop    ebp
64007c36:	ret    0x10
64007c39:	int3   
64007c3a:	int3   
64007c3b:	int3   
64007c3c:	int3   
64007c3d:	int3   
64007c3e:	int3   
64007c3f:	int3   
64007c40:	push   ecx
64007c41:	mov    eax,DWORD PTR [ecx+0x4]
64007c44:	push   esi
64007c45:	mov    esi,DWORD PTR [eax+0x4]
64007c48:	cmp    BYTE PTR [esi+0x45],0x0
64007c4c:	mov    DWORD PTR [esp+0x4],eax
64007c50:	jne    0x64007cc7
64007c52:	mov    eax,DWORD PTR [esp+0xc]
64007c56:	mov    ecx,DWORD PTR [eax+0x18]
64007c59:	push   ebx
64007c5a:	mov    ebx,DWORD PTR [eax+0x14]
64007c5d:	push   ebp
64007c5e:	push   edi
64007c5f:	mov    DWORD PTR [esp+0x18],ecx
64007c63:	lea    ebp,[eax+0x4]
64007c66:	cmp    DWORD PTR [esp+0x18],0x10
64007c6b:	jb     0x64007c72
64007c6d:	mov    edx,DWORD PTR [ebp+0x0]
64007c70:	jmp    0x64007c74
64007c72:	mov    edx,ebp
64007c74:	mov    edi,DWORD PTR [esi+0x20]
64007c77:	mov    eax,edi
64007c79:	cmp    eax,edi
64007c7b:	jae    0x64007c7d
64007c7d:	cmp    edi,ebx
64007c7f:	mov    ecx,edi
64007c81:	jb     0x64007c85
64007c83:	mov    ecx,ebx
64007c85:	cmp    DWORD PTR [esi+0x24],0x10
64007c89:	jb     0x64007c90
64007c8b:	mov    eax,DWORD PTR [esi+0x10]
64007c8e:	jmp    0x64007c93
64007c90:	lea    eax,[esi+0x10]
64007c93:	push   ecx
64007c94:	push   edx
64007c95:	push   eax
64007c96:	call   0x64002c80
64007c9b:	add    esp,0xc
64007c9e:	test   eax,eax
64007ca0:	jne    0x64007cad
64007ca2:	cmp    edi,ebx
64007ca4:	jb     0x64007caf
64007ca6:	cmp    edi,ebx
64007ca8:	setne  al
64007cab:	test   eax,eax
64007cad:	jge    0x64007cb4
64007caf:	mov    esi,DWORD PTR [esi+0x8]
64007cb2:	jmp    0x64007cba
64007cb4:	mov    DWORD PTR [esp+0x10],esi
64007cb8:	mov    esi,DWORD PTR [esi]
64007cba:	cmp    BYTE PTR [esi+0x45],0x0
64007cbe:	je     0x64007c66
64007cc0:	mov    eax,DWORD PTR [esp+0x10]
64007cc4:	pop    edi
64007cc5:	pop    ebp
64007cc6:	pop    ebx
64007cc7:	pop    esi
64007cc8:	pop    ecx
64007cc9:	ret    0x4
64007ccc:	int3   
64007ccd:	int3   
64007cce:	int3   
64007ccf:	int3   
64007cd0:	push   ebx
64007cd1:	mov    ebx,DWORD PTR [esp+0x8]
64007cd5:	push   esi
64007cd6:	mov    esi,ecx
64007cd8:	cmp    DWORD PTR [esi+0x14],ebx
64007cdb:	push   edi
64007cdc:	jae    0x64007ce3
64007cde:	call   0x640125ce
64007ce3:	mov    eax,DWORD PTR [esi+0x14]
64007ce6:	mov    edi,DWORD PTR [esp+0x14]
64007cea:	sub    eax,ebx
64007cec:	cmp    eax,edi
64007cee:	jae    0x64007cf2
64007cf0:	mov    edi,eax
64007cf2:	test   edi,edi
64007cf4:	jbe    0x64007d5f
64007cf6:	mov    ecx,DWORD PTR [esi+0x18]
64007cf9:	cmp    ecx,0x8
64007cfc:	push   ebp
64007cfd:	lea    ebp,[esi+0x4]
64007d00:	jb     0x64007d0b
64007d02:	mov    edx,DWORD PTR [ebp+0x0]
64007d05:	mov    DWORD PTR [esp+0x14],edx
64007d09:	jmp    0x64007d0f
64007d0b:	mov    DWORD PTR [esp+0x14],ebp
64007d0f:	cmp    ecx,0x8
64007d12:	jb     0x64007d1d
64007d14:	mov    edx,DWORD PTR [ebp+0x0]
64007d17:	mov    DWORD PTR [esp+0x18],edx
64007d1b:	jmp    0x64007d21
64007d1d:	mov    DWORD PTR [esp+0x18],ebp
64007d21:	mov    edx,DWORD PTR [esp+0x14]
64007d25:	sub    eax,edi
64007d27:	add    eax,eax
64007d29:	push   eax
64007d2a:	lea    eax,[ebx+edi*1]
64007d2d:	lea    eax,[edx+eax*2]
64007d30:	sub    ecx,ebx
64007d32:	push   eax
64007d33:	add    ecx,ecx
64007d35:	push   ecx
64007d36:	mov    ecx,DWORD PTR [esp+0x24]
64007d3a:	lea    edx,[ecx+ebx*2]
64007d3d:	push   edx
64007d3e:	call   0x64012843
64007d43:	mov    eax,DWORD PTR [esi+0x14]
64007d46:	sub    eax,edi
64007d48:	add    esp,0x10
64007d4b:	cmp    DWORD PTR [esi+0x18],0x8
64007d4f:	mov    DWORD PTR [esi+0x14],eax
64007d52:	jb     0x64007d57
64007d54:	mov    ebp,DWORD PTR [ebp+0x0]
64007d57:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64007d5e:	pop    ebp
64007d5f:	pop    edi
64007d60:	mov    eax,esi
64007d62:	pop    esi
64007d63:	pop    ebx
64007d64:	ret    0x8
64007d67:	int3   
64007d68:	int3   
64007d69:	int3   
64007d6a:	int3   
64007d6b:	int3   
64007d6c:	int3   
64007d6d:	int3   
64007d6e:	int3   
64007d6f:	int3   
64007d70:	push   ebp
64007d71:	mov    ebp,esp
64007d73:	and    esp,0xfffffff8
64007d76:	sub    esp,0x14
64007d79:	mov    eax,DWORD PTR [ecx+0x4]
64007d7c:	push   ebx
64007d7d:	push   esi
64007d7e:	mov    esi,DWORD PTR [eax+0x4]
64007d81:	cmp    BYTE PTR [esi+0x45],0x0
64007d85:	mov    ebx,eax
64007d87:	mov    al,0x1
64007d89:	push   edi
64007d8a:	mov    edi,DWORD PTR [ebp+0xc]
64007d8d:	mov    DWORD PTR [esp+0x14],ecx
64007d91:	mov    BYTE PTR [esp+0x10],al
64007d95:	jne    0x64007dd7
64007d97:	cmp    DWORD PTR [esi+0x24],0x8
64007d9b:	mov    ecx,DWORD PTR [esi+0x20]
64007d9e:	mov    ebx,esi
64007da0:	jb     0x64007da7
64007da2:	mov    eax,DWORD PTR [esi+0x10]
64007da5:	jmp    0x64007daa
64007da7:	lea    eax,[esi+0x10]
64007daa:	push   ecx
64007dab:	push   eax
64007dac:	mov    eax,DWORD PTR [edi+0x14]
64007daf:	push   eax
64007db0:	push   0x0
64007db2:	mov    ecx,edi
64007db4:	call   0x640091c0
64007db9:	test   eax,eax
64007dbb:	setl   al
64007dbe:	test   al,al
64007dc0:	mov    BYTE PTR [esp+0x10],al
64007dc4:	je     0x64007dca
64007dc6:	mov    esi,DWORD PTR [esi]
64007dc8:	jmp    0x64007dcd
64007dca:	mov    esi,DWORD PTR [esi+0x8]
64007dcd:	cmp    BYTE PTR [esi+0x45],0x0
64007dd1:	je     0x64007d97
64007dd3:	mov    ecx,DWORD PTR [esp+0x14]
64007dd7:	test   al,al
64007dd9:	mov    esi,ebx
64007ddb:	mov    DWORD PTR [esp+0x1c],esi
64007ddf:	mov    DWORD PTR [esp+0x18],ecx
64007de3:	je     0x64007e23
64007de5:	mov    edx,DWORD PTR [ecx+0x4]
64007de8:	cmp    ebx,DWORD PTR [edx]
64007dea:	jne    0x64007e16
64007dec:	push   edi
64007ded:	push   ebx
64007dee:	push   0x1
64007df0:	lea    eax,[esp+0x24]
64007df4:	push   eax
64007df5:	call   0x64007e80
64007dfa:	mov    ecx,eax
64007dfc:	mov    edx,DWORD PTR [ecx]
64007dfe:	mov    eax,DWORD PTR [ebp+0x8]
64007e01:	mov    ecx,DWORD PTR [ecx+0x4]
64007e04:	mov    DWORD PTR [eax+0x4],ecx
64007e07:	mov    BYTE PTR [eax+0x8],0x1
64007e0b:	mov    DWORD PTR [eax],edx
64007e0d:	pop    edi
64007e0e:	pop    esi
64007e0f:	pop    ebx
64007e10:	mov    esp,ebp
64007e12:	pop    ebp
64007e13:	ret    0x8
64007e16:	lea    ecx,[esp+0x18]
64007e1a:	call   0x64008e40
64007e1f:	mov    esi,DWORD PTR [esp+0x1c]
64007e23:	cmp    DWORD PTR [edi+0x18],0x8
64007e27:	mov    edx,DWORD PTR [edi+0x14]
64007e2a:	lea    ecx,[esi+0xc]
64007e2d:	jb     0x64007e34
64007e2f:	mov    eax,DWORD PTR [edi+0x4]
64007e32:	jmp    0x64007e37
64007e34:	lea    eax,[edi+0x4]
64007e37:	push   edx
64007e38:	mov    edx,DWORD PTR [ecx+0x14]
64007e3b:	push   eax
64007e3c:	push   edx
64007e3d:	push   0x0
64007e3f:	call   0x640091c0
64007e44:	test   eax,eax
64007e46:	jge    0x64007e5a
64007e48:	mov    eax,DWORD PTR [esp+0x10]
64007e4c:	push   edi
64007e4d:	push   ebx
64007e4e:	lea    ecx,[esp+0x20]
64007e52:	push   eax
64007e53:	push   ecx
64007e54:	mov    ecx,DWORD PTR [esp+0x24]
64007e58:	jmp    0x64007df5
64007e5a:	mov    eax,DWORD PTR [ebp+0x8]
64007e5d:	mov    edx,DWORD PTR [esp+0x18]
64007e61:	pop    edi
64007e62:	mov    DWORD PTR [eax+0x4],esi
64007e65:	pop    esi
64007e66:	mov    BYTE PTR [eax+0x8],0x0
64007e6a:	mov    DWORD PTR [eax],edx
64007e6c:	pop    ebx
64007e6d:	mov    esp,ebp
64007e6f:	pop    ebp
64007e70:	ret    0x8
64007e73:	int3   
64007e74:	int3   
64007e75:	int3   
64007e76:	int3   
64007e77:	int3   
64007e78:	int3   
64007e79:	int3   
64007e7a:	int3   
64007e7b:	int3   
64007e7c:	int3   
64007e7d:	int3   
64007e7e:	int3   
64007e7f:	int3   
64007e80:	push   ebp
64007e81:	mov    ebp,esp
64007e83:	and    esp,0xfffffff8
64007e86:	push   0xffffffff
64007e88:	push   0x64022e58
64007e8d:	mov    eax,fs:0x0
64007e93:	push   eax
64007e94:	sub    esp,0x50
64007e97:	push   ebx
64007e98:	push   esi
64007e99:	push   edi
64007e9a:	mov    eax,ds:0x6402d09c
64007e9f:	xor    eax,esp
64007ea1:	push   eax
64007ea2:	lea    eax,[esp+0x60]
64007ea6:	mov    fs:0x0,eax
64007eac:	mov    edi,ecx
64007eae:	xor    ebx,ebx
64007eb0:	cmp    DWORD PTR [edi+0x8],0x4924923
64007eb7:	jb     0x64007f02
64007eb9:	push   0x13
64007ebb:	push   0x640283d4
64007ec0:	lea    ecx,[esp+0x20]
64007ec4:	mov    DWORD PTR [esp+0x38],0xf
64007ecc:	mov    DWORD PTR [esp+0x34],ebx
64007ed0:	mov    BYTE PTR [esp+0x24],bl
64007ed4:	call   0x64001860
64007ed9:	lea    eax,[esp+0x18]
64007edd:	push   eax
64007ede:	lea    ecx,[esp+0x38]
64007ee2:	mov    DWORD PTR [esp+0x6c],ebx
64007ee6:	call   0x64002d10
64007eeb:	push   0x6402ab28
64007ef0:	lea    ecx,[esp+0x38]
64007ef4:	push   ecx
64007ef5:	mov    DWORD PTR [esp+0x3c],0x6402531c
64007efd:	call   0x64012a5b
64007f02:	mov    edx,DWORD PTR [ebp+0x14]
64007f05:	mov    eax,DWORD PTR [edi+0x4]
64007f08:	mov    esi,DWORD PTR [ebp+0x10]
64007f0b:	push   ebx
64007f0c:	push   edx
64007f0d:	push   eax
64007f0e:	push   esi
64007f0f:	push   eax
64007f10:	call   0x64008650
64007f15:	add    DWORD PTR [edi+0x8],0x1
64007f19:	mov    ecx,eax
64007f1b:	mov    eax,DWORD PTR [edi+0x4]
64007f1e:	cmp    esi,eax
64007f20:	mov    DWORD PTR [esp+0x14],ecx
64007f24:	jne    0x64007f36
64007f26:	mov    DWORD PTR [eax+0x4],ecx
64007f29:	mov    eax,DWORD PTR [edi+0x4]
64007f2c:	mov    DWORD PTR [eax],ecx
64007f2e:	mov    edx,DWORD PTR [edi+0x4]
64007f31:	mov    DWORD PTR [edx+0x8],ecx
64007f34:	jmp    0x64007f56
64007f36:	cmp    BYTE PTR [ebp+0xc],bl
64007f39:	je     0x64007f48
64007f3b:	mov    DWORD PTR [esi],ecx
64007f3d:	mov    eax,DWORD PTR [edi+0x4]
64007f40:	cmp    esi,DWORD PTR [eax]
64007f42:	jne    0x64007f56
64007f44:	mov    DWORD PTR [eax],ecx
64007f46:	jmp    0x64007f56
64007f48:	mov    DWORD PTR [esi+0x8],ecx
64007f4b:	mov    eax,DWORD PTR [edi+0x4]
64007f4e:	cmp    esi,DWORD PTR [eax+0x8]
64007f51:	jne    0x64007f56
64007f53:	mov    DWORD PTR [eax+0x8],ecx
64007f56:	mov    edx,DWORD PTR [ecx+0x4]
64007f59:	cmp    BYTE PTR [edx+0x44],bl
64007f5c:	lea    eax,[ecx+0x4]
64007f5f:	mov    esi,ecx
64007f61:	jne    0x640080a2
64007f67:	mov    ecx,DWORD PTR [eax]
64007f69:	mov    edx,DWORD PTR [ecx+0x4]
64007f6c:	cmp    ecx,DWORD PTR [edx]
64007f6e:	jne    0x64008015
64007f74:	mov    edx,DWORD PTR [edx+0x8]
64007f77:	cmp    BYTE PTR [edx+0x44],bl
64007f7a:	je     0x6400801c
64007f80:	cmp    esi,DWORD PTR [ecx+0x8]
64007f83:	jne    0x64007fc0
64007f85:	mov    esi,ecx
64007f87:	mov    ecx,DWORD PTR [esi+0x8]
64007f8a:	mov    eax,DWORD PTR [ecx]
64007f8c:	mov    DWORD PTR [esi+0x8],eax
64007f8f:	mov    eax,DWORD PTR [ecx]
64007f91:	cmp    BYTE PTR [eax+0x45],bl
64007f94:	jne    0x64007f99
64007f96:	mov    DWORD PTR [eax+0x4],esi
64007f99:	mov    edx,DWORD PTR [esi+0x4]
64007f9c:	lea    eax,[esi+0x4]
64007f9f:	mov    DWORD PTR [ecx+0x4],edx
64007fa2:	mov    edx,DWORD PTR [edi+0x4]
64007fa5:	cmp    esi,DWORD PTR [edx+0x4]
64007fa8:	jne    0x64007faf
64007faa:	mov    DWORD PTR [edx+0x4],ecx
64007fad:	jmp    0x64007fbc
64007faf:	mov    edx,DWORD PTR [eax]
64007fb1:	cmp    esi,DWORD PTR [edx]
64007fb3:	jne    0x64007fb9
64007fb5:	mov    DWORD PTR [edx],ecx
64007fb7:	jmp    0x64007fbc
64007fb9:	mov    DWORD PTR [edx+0x8],ecx
64007fbc:	mov    DWORD PTR [ecx],esi
64007fbe:	mov    DWORD PTR [eax],ecx
64007fc0:	mov    ecx,DWORD PTR [eax]
64007fc2:	mov    BYTE PTR [ecx+0x44],0x1
64007fc6:	mov    edx,DWORD PTR [eax]
64007fc8:	mov    ecx,DWORD PTR [edx+0x4]
64007fcb:	mov    BYTE PTR [ecx+0x44],bl
64007fce:	mov    edx,DWORD PTR [eax]
64007fd0:	mov    eax,DWORD PTR [edx+0x4]
64007fd3:	mov    ecx,DWORD PTR [eax]
64007fd5:	mov    edx,DWORD PTR [ecx+0x8]
64007fd8:	mov    DWORD PTR [eax],edx
64007fda:	mov    edx,DWORD PTR [ecx+0x8]
64007fdd:	cmp    BYTE PTR [edx+0x45],bl
64007fe0:	jne    0x64007fe5
64007fe2:	mov    DWORD PTR [edx+0x4],eax
64007fe5:	mov    edx,DWORD PTR [eax+0x4]
64007fe8:	mov    DWORD PTR [ecx+0x4],edx
64007feb:	mov    edx,DWORD PTR [edi+0x4]
64007fee:	cmp    eax,DWORD PTR [edx+0x4]
64007ff1:	jne    0x64007ffe
64007ff3:	mov    DWORD PTR [edx+0x4],ecx
64007ff6:	mov    DWORD PTR [ecx+0x8],eax
64007ff9:	jmp    0x6400808c
64007ffe:	mov    edx,DWORD PTR [eax+0x4]
64008001:	cmp    eax,DWORD PTR [edx+0x8]
64008004:	jne    0x6400800e
64008006:	mov    DWORD PTR [edx+0x8],ecx
64008009:	mov    DWORD PTR [ecx+0x8],eax
6400800c:	jmp    0x6400808c
6400800e:	mov    DWORD PTR [edx],ecx
64008010:	mov    DWORD PTR [ecx+0x8],eax
64008013:	jmp    0x6400808c
64008015:	mov    edx,DWORD PTR [edx]
64008017:	cmp    BYTE PTR [edx+0x44],bl
6400801a:	jne    0x64008033
6400801c:	mov    BYTE PTR [ecx+0x44],0x1
64008020:	mov    BYTE PTR [edx+0x44],0x1
64008024:	mov    edx,DWORD PTR [eax]
64008026:	mov    ecx,DWORD PTR [edx+0x4]
64008029:	mov    BYTE PTR [ecx+0x44],bl
6400802c:	mov    edx,DWORD PTR [eax]
6400802e:	mov    esi,DWORD PTR [edx+0x4]
64008031:	jmp    0x6400808f
64008033:	cmp    esi,DWORD PTR [ecx]
64008035:	jne    0x64008041
64008037:	mov    esi,ecx
64008039:	push   esi
6400803a:	mov    ecx,edi
6400803c:	call   0x640085f0
64008041:	mov    eax,DWORD PTR [esi+0x4]
64008044:	mov    BYTE PTR [eax+0x44],0x1
64008048:	mov    ecx,DWORD PTR [esi+0x4]
6400804b:	mov    edx,DWORD PTR [ecx+0x4]
6400804e:	mov    BYTE PTR [edx+0x44],bl
64008051:	mov    eax,DWORD PTR [esi+0x4]
64008054:	mov    eax,DWORD PTR [eax+0x4]
64008057:	mov    ecx,DWORD PTR [eax+0x8]
6400805a:	mov    edx,DWORD PTR [ecx]
6400805c:	mov    DWORD PTR [eax+0x8],edx
6400805f:	mov    edx,DWORD PTR [ecx]
64008061:	cmp    BYTE PTR [edx+0x45],bl
64008064:	jne    0x64008069
64008066:	mov    DWORD PTR [edx+0x4],eax
64008069:	mov    edx,DWORD PTR [eax+0x4]
6400806c:	mov    DWORD PTR [ecx+0x4],edx
6400806f:	mov    edx,DWORD PTR [edi+0x4]
64008072:	cmp    eax,DWORD PTR [edx+0x4]
64008075:	jne    0x6400807c
64008077:	mov    DWORD PTR [edx+0x4],ecx
6400807a:	jmp    0x6400808a
6400807c:	mov    edx,DWORD PTR [eax+0x4]
6400807f:	cmp    eax,DWORD PTR [edx]
64008081:	jne    0x64008087
64008083:	mov    DWORD PTR [edx],ecx
64008085:	jmp    0x6400808a
64008087:	mov    DWORD PTR [edx+0x8],ecx
6400808a:	mov    DWORD PTR [ecx],eax
6400808c:	mov    DWORD PTR [eax+0x4],ecx
6400808f:	mov    ecx,DWORD PTR [esi+0x4]
64008092:	cmp    BYTE PTR [ecx+0x44],bl
64008095:	lea    eax,[esi+0x4]
64008098:	je     0x64007f67
6400809e:	mov    ecx,DWORD PTR [esp+0x14]
640080a2:	mov    edx,DWORD PTR [edi+0x4]
640080a5:	mov    eax,DWORD PTR [edx+0x4]
640080a8:	mov    BYTE PTR [eax+0x44],0x1
640080ac:	mov    eax,DWORD PTR [ebp+0x8]
640080af:	mov    DWORD PTR [eax+0x4],ecx
640080b2:	mov    DWORD PTR [eax],edi
640080b4:	mov    ecx,DWORD PTR [esp+0x60]
640080b8:	mov    DWORD PTR fs:0x0,ecx
640080bf:	pop    ecx
640080c0:	pop    edi
640080c1:	pop    esi
640080c2:	pop    ebx
640080c3:	mov    esp,ebp
640080c5:	pop    ebp
640080c6:	ret    0x10
640080c9:	int3   
640080ca:	int3   
640080cb:	int3   
640080cc:	int3   
640080cd:	int3   
640080ce:	int3   
640080cf:	int3   
640080d0:	mov    eax,DWORD PTR [ecx+0x4]
640080d3:	push   ebp
640080d4:	push   esi
640080d5:	mov    esi,DWORD PTR [eax+0x4]
640080d8:	cmp    BYTE PTR [esi+0x45],0x0
640080dc:	mov    ebp,eax
640080de:	jne    0x64008126
640080e0:	push   ebx
640080e1:	push   edi
640080e2:	mov    edi,DWORD PTR [esp+0x14]
640080e6:	lea    ebx,[edi+0x4]
640080e9:	lea    esp,[esp+0x0]
640080f0:	cmp    DWORD PTR [edi+0x18],0x8
640080f4:	mov    edx,DWORD PTR [edi+0x14]
640080f7:	lea    ecx,[esi+0xc]
640080fa:	jb     0x64008100
640080fc:	mov    eax,DWORD PTR [ebx]
640080fe:	jmp    0x64008102
64008100:	mov    eax,ebx
64008102:	push   edx
64008103:	push   eax
64008104:	mov    eax,DWORD PTR [ecx+0x14]
64008107:	push   eax
64008108:	push   0x0
6400810a:	call   0x640091c0
6400810f:	test   eax,eax
64008111:	jge    0x64008118
64008113:	mov    esi,DWORD PTR [esi+0x8]
64008116:	jmp    0x6400811c
64008118:	mov    ebp,esi
6400811a:	mov    esi,DWORD PTR [esi]
6400811c:	cmp    BYTE PTR [esi+0x45],0x0
64008120:	je     0x640080f0
64008122:	pop    edi
64008123:	mov    eax,ebp
64008125:	pop    ebx
64008126:	pop    esi
64008127:	pop    ebp
64008128:	ret    0x4
6400812b:	int3   
6400812c:	int3   
6400812d:	int3   
6400812e:	int3   
6400812f:	int3   
64008130:	push   ebx
64008131:	push   ebp
64008132:	push   esi
64008133:	mov    esi,DWORD PTR [esp+0x10]
64008137:	xor    ebx,ebx
64008139:	cmp    BYTE PTR [esi+0x29],bl
6400813c:	push   edi
6400813d:	mov    ebp,ecx
6400813f:	mov    edi,esi
64008141:	jne    0x6400817f
64008143:	mov    eax,DWORD PTR [edi+0x8]
64008146:	push   eax
64008147:	mov    ecx,ebp
64008149:	call   0x64008130
6400814e:	cmp    DWORD PTR [esi+0x24],0x10
64008152:	mov    edi,DWORD PTR [edi]
64008154:	jb     0x64008162
64008156:	mov    ecx,DWORD PTR [esi+0x10]
64008159:	push   ecx
6400815a:	call   0x64012612
6400815f:	add    esp,0x4
64008162:	mov    DWORD PTR [esi+0x24],0xf
64008169:	mov    DWORD PTR [esi+0x20],ebx
6400816c:	push   esi
6400816d:	mov    BYTE PTR [esi+0x10],bl
64008170:	call   0x64012612
64008175:	add    esp,0x4
64008178:	cmp    BYTE PTR [edi+0x29],bl
6400817b:	mov    esi,edi
6400817d:	je     0x64008143
6400817f:	pop    edi
64008180:	pop    esi
64008181:	pop    ebp
64008182:	pop    ebx
64008183:	ret    0x4
64008186:	int3   
64008187:	int3   
64008188:	int3   
64008189:	int3   
6400818a:	int3   
6400818b:	int3   
6400818c:	int3   
6400818d:	int3   
6400818e:	int3   
6400818f:	int3   
64008190:	push   ebp
64008191:	mov    ebp,esp
64008193:	and    esp,0xfffffff8
64008196:	sub    esp,0x14
64008199:	push   ebx
6400819a:	push   esi
6400819b:	push   edi
6400819c:	mov    edi,ecx
6400819e:	mov    eax,DWORD PTR [edi+0x4]
640081a1:	mov    ebx,DWORD PTR [eax]
640081a3:	mov    eax,DWORD PTR [ebp+0xc]
640081a6:	test   eax,eax
640081a8:	je     0x640081ae
640081aa:	cmp    eax,edi
640081ac:	je     0x640081b3
640081ae:	call   0x640129c8
640081b3:	mov    esi,DWORD PTR [ebp+0x10]
640081b6:	cmp    esi,ebx
640081b8:	jne    0x64008210
640081ba:	mov    eax,DWORD PTR [ebp+0x14]
640081bd:	test   eax,eax
640081bf:	mov    ebx,DWORD PTR [edi+0x4]
640081c2:	je     0x640081c8
640081c4:	cmp    eax,edi
640081c6:	je     0x640081cd
640081c8:	call   0x640129c8
640081cd:	cmp    DWORD PTR [ebp+0x18],ebx
640081d0:	jne    0x64008210
640081d2:	mov    ecx,DWORD PTR [edi+0x4]
640081d5:	mov    edx,DWORD PTR [ecx+0x4]
640081d8:	push   edx
640081d9:	mov    ecx,edi
640081db:	call   0x64008fd0
640081e0:	mov    eax,DWORD PTR [edi+0x4]
640081e3:	mov    DWORD PTR [eax+0x4],eax
640081e6:	mov    eax,DWORD PTR [edi+0x4]
640081e9:	mov    DWORD PTR [edi+0x8],0x0
640081f0:	mov    DWORD PTR [eax],eax
640081f2:	mov    eax,DWORD PTR [edi+0x4]
640081f5:	mov    DWORD PTR [eax+0x8],eax
640081f8:	mov    eax,DWORD PTR [edi+0x4]
640081fb:	mov    ecx,DWORD PTR [eax]
640081fd:	mov    eax,DWORD PTR [ebp+0x8]
64008200:	mov    DWORD PTR [eax+0x4],ecx
64008203:	mov    DWORD PTR [eax],edi
64008205:	pop    edi
64008206:	pop    esi
64008207:	pop    ebx
64008208:	mov    esp,ebp
6400820a:	pop    ebp
6400820b:	ret    0x14
6400820e:	mov    edi,edi
64008210:	mov    ebx,DWORD PTR [ebp+0xc]
64008213:	test   ebx,ebx
64008215:	je     0x6400821c
64008217:	cmp    ebx,DWORD PTR [ebp+0x14]
6400821a:	je     0x64008221
6400821c:	call   0x640129c8
64008221:	cmp    esi,DWORD PTR [ebp+0x18]
64008224:	je     0x6400828e
64008226:	test   ebx,ebx
64008228:	mov    DWORD PTR [esp+0x14],esi
6400822c:	jne    0x64008233
6400822e:	call   0x640129c8
64008233:	cmp    BYTE PTR [esi+0x45],0x0
64008237:	je     0x64008240
64008239:	call   0x640129c8
6400823e:	jmp    0x6400827a
64008240:	mov    eax,DWORD PTR [esi+0x8]
64008243:	cmp    BYTE PTR [eax+0x45],0x0
64008247:	jne    0x6400825f
64008249:	mov    esi,eax
6400824b:	mov    eax,DWORD PTR [esi]
6400824d:	cmp    BYTE PTR [eax+0x45],0x0
64008251:	jne    0x6400827a
64008253:	mov    esi,eax
64008255:	mov    eax,DWORD PTR [esi]
64008257:	cmp    BYTE PTR [eax+0x45],0x0
6400825b:	je     0x64008253
6400825d:	jmp    0x6400827a
6400825f:	mov    eax,DWORD PTR [esi+0x4]
64008262:	cmp    BYTE PTR [eax+0x45],0x0
64008266:	jne    0x64008278
64008268:	cmp    esi,DWORD PTR [eax+0x8]
6400826b:	jne    0x64008278
6400826d:	mov    esi,eax
6400826f:	mov    eax,DWORD PTR [eax+0x4]
64008272:	cmp    BYTE PTR [eax+0x45],0x0
64008276:	je     0x64008268
64008278:	mov    esi,eax
6400827a:	mov    edx,DWORD PTR [esp+0x14]
6400827e:	push   edx
6400827f:	push   ebx
64008280:	lea    eax,[esp+0x20]
64008284:	push   eax
64008285:	mov    ecx,edi
64008287:	call   0x640086f0
6400828c:	jmp    0x64008210
6400828e:	mov    eax,DWORD PTR [ebp+0x8]
64008291:	pop    edi
64008292:	mov    DWORD PTR [eax+0x4],esi
64008295:	pop    esi
64008296:	mov    DWORD PTR [eax],ebx
64008298:	pop    ebx
64008299:	mov    esp,ebp
6400829b:	pop    ebp
6400829c:	ret    0x14
6400829f:	int3   
640082a0:	push   ebp
640082a1:	mov    ebp,esp
640082a3:	push   0xffffffff
640082a5:	push   0x64022a71
640082aa:	mov    eax,fs:0x0
640082b0:	push   eax
640082b1:	sub    esp,0xc
640082b4:	push   ebx
640082b5:	push   esi
640082b6:	push   edi
640082b7:	mov    eax,ds:0x6402d09c
640082bc:	xor    eax,ebp
640082be:	push   eax
640082bf:	lea    eax,[ebp-0xc]
640082c2:	mov    fs:0x0,eax
640082c8:	mov    DWORD PTR [ebp-0x10],esp
640082cb:	push   0x48
640082cd:	call   0x640129f1
640082d2:	mov    esi,eax
640082d4:	mov    DWORD PTR [ebp-0x4],0x0
640082db:	add    esp,0x4
640082de:	mov    DWORD PTR [ebp-0x14],esi
640082e1:	mov    DWORD PTR [ebp-0x18],esi
640082e4:	test   esi,esi
640082e6:	mov    BYTE PTR [ebp-0x4],0x1
640082ea:	je     0x64008313
640082ec:	mov    eax,DWORD PTR [ebp+0x8]
640082ef:	mov    ecx,DWORD PTR [ebp+0xc]
640082f2:	mov    edx,DWORD PTR [ebp+0x10]
640082f5:	mov    DWORD PTR [esi],eax
640082f7:	mov    eax,DWORD PTR [ebp+0x14]
640082fa:	mov    DWORD PTR [esi+0x4],ecx
640082fd:	push   eax
640082fe:	lea    ecx,[esi+0xc]
64008301:	mov    DWORD PTR [esi+0x8],edx
64008304:	call   0x64008ed0
64008309:	mov    cl,BYTE PTR [ebp+0x18]
6400830c:	mov    BYTE PTR [esi+0x44],cl
6400830f:	mov    BYTE PTR [esi+0x45],0x0
64008313:	mov    eax,esi
64008315:	mov    ecx,DWORD PTR [ebp-0xc]
64008318:	mov    DWORD PTR fs:0x0,ecx
6400831f:	pop    ecx
64008320:	pop    edi
64008321:	pop    esi
64008322:	pop    ebx
64008323:	mov    esp,ebp
64008325:	pop    ebp
64008326:	ret    0x14
64008329:	mov    edx,DWORD PTR [ebp-0x14]
6400832c:	push   edx
6400832d:	call   0x64012612
64008332:	add    esp,0x4
64008335:	push   0x0
64008337:	push   0x0
64008339:	call   0x64012a5b
6400833e:	int3   
6400833f:	int3   
64008340:	push   ebp
64008341:	mov    ebp,esp
64008343:	push   0xffffffff
64008345:	push   0x64022a40
6400834a:	mov    eax,fs:0x0
64008350:	push   eax
64008351:	sub    esp,0xc
64008354:	push   ebx
64008355:	push   esi
64008356:	push   edi
64008357:	mov    eax,ds:0x6402d09c
6400835c:	xor    eax,ebp
6400835e:	push   eax
6400835f:	lea    eax,[ebp-0xc]
64008362:	mov    fs:0x0,eax
64008368:	mov    DWORD PTR [ebp-0x10],esp
6400836b:	mov    edi,ecx
6400836d:	mov    DWORD PTR [ebp-0x14],edi
64008370:	mov    eax,DWORD PTR [ebp+0x8]
64008373:	mov    esi,eax
64008375:	or     esi,0x7
64008378:	cmp    esi,0x7ffffffe
6400837e:	jbe    0x64008384
64008380:	mov    esi,eax
64008382:	jmp    0x640083a6
64008384:	mov    ebx,DWORD PTR [edi+0x18]
64008387:	mov    eax,0xaaaaaaab
6400838c:	mul    esi
6400838e:	mov    ecx,ebx
64008390:	shr    ecx,1
64008392:	shr    edx,1
64008394:	cmp    edx,ecx
64008396:	jae    0x640083a6
64008398:	mov    eax,0x7ffffffe
6400839d:	sub    eax,ecx
6400839f:	cmp    ebx,eax
640083a1:	ja     0x640083a6
640083a3:	lea    esi,[ecx+ebx*1]
640083a6:	lea    ecx,[esi+0x1]
640083a9:	push   ecx
640083aa:	mov    ecx,edi
640083ac:	mov    DWORD PTR [ebp-0x4],0x0
640083b3:	call   0x64008a80
640083b8:	mov    DWORD PTR [ebp+0x8],eax
640083bb:	jmp    0x640083e5
640083bd:	mov    eax,DWORD PTR [ebp+0x8]
640083c0:	mov    ecx,DWORD PTR [ebp-0x14]
640083c3:	mov    DWORD PTR [ebp-0x18],eax
640083c6:	add    eax,0x1
640083c9:	mov    DWORD PTR [ebp-0x10],esp
640083cc:	push   eax
640083cd:	mov    BYTE PTR [ebp-0x4],0x2
640083d1:	call   0x64008a80
640083d6:	mov    DWORD PTR [ebp+0x8],eax
640083d9:	mov    eax,0x640083df
640083de:	ret    
640083df:	mov    edi,DWORD PTR [ebp-0x14]
640083e2:	mov    esi,DWORD PTR [ebp-0x18]
640083e5:	mov    ebx,DWORD PTR [ebp+0xc]
640083e8:	test   ebx,ebx
640083ea:	jbe    0x64008410
640083ec:	cmp    DWORD PTR [edi+0x18],0x8
640083f0:	jb     0x640083f7
640083f2:	mov    eax,DWORD PTR [edi+0x4]
640083f5:	jmp    0x640083fa
640083f7:	lea    eax,[edi+0x4]
640083fa:	mov    ecx,DWORD PTR [ebp+0x8]
640083fd:	lea    edx,[ebx+ebx*1]
64008400:	push   edx
64008401:	push   eax
64008402:	lea    eax,[esi+esi*1+0x2]
64008406:	push   eax
64008407:	push   ecx
64008408:	call   0x640127c8
6400840d:	add    esp,0x10
64008410:	cmp    DWORD PTR [edi+0x18],0x8
64008414:	jb     0x64008422
64008416:	mov    edx,DWORD PTR [edi+0x4]
64008419:	push   edx
6400841a:	call   0x64012612
6400841f:	add    esp,0x4
64008422:	cmp    esi,0x8
64008425:	mov    ecx,DWORD PTR [ebp+0x8]
64008428:	lea    eax,[edi+0x4]
6400842b:	mov    WORD PTR [eax],0x0
64008430:	mov    DWORD PTR [eax],ecx
64008432:	mov    DWORD PTR [edi+0x18],esi
64008435:	mov    DWORD PTR [edi+0x14],ebx
64008438:	jb     0x6400843c
6400843a:	mov    eax,ecx
6400843c:	mov    WORD PTR [eax+ebx*2],0x0
64008442:	mov    ecx,DWORD PTR [ebp-0xc]
64008445:	mov    DWORD PTR fs:0x0,ecx
6400844c:	pop    ecx
6400844d:	pop    edi
6400844e:	pop    esi
6400844f:	pop    ebx
64008450:	mov    esp,ebp
64008452:	pop    ebp
64008453:	ret    0x8
64008456:	mov    esi,DWORD PTR [ebp-0x14]
64008459:	cmp    DWORD PTR [esi+0x18],0x8
6400845d:	jb     0x6400846b
6400845f:	mov    eax,DWORD PTR [esi+0x4]
64008462:	push   eax
64008463:	call   0x64012612
64008468:	add    esp,0x4
6400846b:	xor    eax,eax
6400846d:	push   eax
6400846e:	mov    DWORD PTR [esi+0x18],0x7
64008475:	mov    DWORD PTR [esi+0x14],eax
64008478:	push   eax
64008479:	mov    WORD PTR [esi+0x4],ax
6400847d:	call   0x64012a5b
64008482:	int3   
64008483:	int3   
64008484:	int3   
64008485:	int3   
64008486:	int3   
64008487:	int3   
64008488:	int3   
64008489:	int3   
6400848a:	int3   
6400848b:	int3   
6400848c:	int3   
6400848d:	int3   
6400848e:	int3   
6400848f:	int3   
64008490:	push   ebp
64008491:	mov    ebp,esp
64008493:	and    esp,0xfffffff8
64008496:	sub    esp,0x14
64008499:	push   ebx
6400849a:	push   esi
6400849b:	push   edi
6400849c:	mov    edi,ecx
6400849e:	mov    eax,DWORD PTR [edi+0x4]
640084a1:	mov    ebx,DWORD PTR [eax]
640084a3:	mov    eax,DWORD PTR [ebp+0xc]
640084a6:	test   eax,eax
640084a8:	je     0x640084ae
640084aa:	cmp    eax,edi
640084ac:	je     0x640084b3
640084ae:	call   0x640129c8
640084b3:	mov    esi,DWORD PTR [ebp+0x10]
640084b6:	cmp    esi,ebx
640084b8:	jne    0x64008510
640084ba:	mov    eax,DWORD PTR [ebp+0x14]
640084bd:	test   eax,eax
640084bf:	mov    ebx,DWORD PTR [edi+0x4]
640084c2:	je     0x640084c8
640084c4:	cmp    eax,edi
640084c6:	je     0x640084cd
640084c8:	call   0x640129c8
640084cd:	cmp    DWORD PTR [ebp+0x18],ebx
640084d0:	jne    0x64008510
640084d2:	mov    ecx,DWORD PTR [edi+0x4]
640084d5:	mov    edx,DWORD PTR [ecx+0x4]
640084d8:	push   edx
640084d9:	mov    ecx,edi
640084db:	call   0x64009090
640084e0:	mov    eax,DWORD PTR [edi+0x4]
640084e3:	mov    DWORD PTR [eax+0x4],eax
640084e6:	mov    eax,DWORD PTR [edi+0x4]
640084e9:	mov    DWORD PTR [edi+0x8],0x0
640084f0:	mov    DWORD PTR [eax],eax
640084f2:	mov    eax,DWORD PTR [edi+0x4]
640084f5:	mov    DWORD PTR [eax+0x8],eax
640084f8:	mov    eax,DWORD PTR [edi+0x4]
640084fb:	mov    ecx,DWORD PTR [eax]
640084fd:	mov    eax,DWORD PTR [ebp+0x8]
64008500:	mov    DWORD PTR [eax+0x4],ecx
64008503:	mov    DWORD PTR [eax],edi
64008505:	pop    edi
64008506:	pop    esi
64008507:	pop    ebx
64008508:	mov    esp,ebp
6400850a:	pop    ebp
6400850b:	ret    0x14
6400850e:	mov    edi,edi
64008510:	mov    ebx,DWORD PTR [ebp+0xc]
64008513:	test   ebx,ebx
64008515:	je     0x6400851c
64008517:	cmp    ebx,DWORD PTR [ebp+0x14]
6400851a:	je     0x64008521
6400851c:	call   0x640129c8
64008521:	cmp    esi,DWORD PTR [ebp+0x18]
64008524:	je     0x6400858e
64008526:	test   ebx,ebx
64008528:	mov    DWORD PTR [esp+0x14],esi
6400852c:	jne    0x64008533
6400852e:	call   0x640129c8
64008533:	cmp    BYTE PTR [esi+0x45],0x0
64008537:	je     0x64008540
64008539:	call   0x640129c8
6400853e:	jmp    0x6400857a
64008540:	mov    eax,DWORD PTR [esi+0x8]
64008543:	cmp    BYTE PTR [eax+0x45],0x0
64008547:	jne    0x6400855f
64008549:	mov    esi,eax
6400854b:	mov    eax,DWORD PTR [esi]
6400854d:	cmp    BYTE PTR [eax+0x45],0x0
64008551:	jne    0x6400857a
64008553:	mov    esi,eax
64008555:	mov    eax,DWORD PTR [esi]
64008557:	cmp    BYTE PTR [eax+0x45],0x0
6400855b:	je     0x64008553
6400855d:	jmp    0x6400857a
6400855f:	mov    eax,DWORD PTR [esi+0x4]
64008562:	cmp    BYTE PTR [eax+0x45],0x0
64008566:	jne    0x64008578
64008568:	cmp    esi,DWORD PTR [eax+0x8]
6400856b:	jne    0x64008578
6400856d:	mov    esi,eax
6400856f:	mov    eax,DWORD PTR [eax+0x4]
64008572:	cmp    BYTE PTR [eax+0x45],0x0
64008576:	je     0x64008568
64008578:	mov    esi,eax
6400857a:	mov    edx,DWORD PTR [esp+0x14]
6400857e:	push   edx
6400857f:	push   ebx
64008580:	lea    eax,[esp+0x20]
64008584:	push   eax
64008585:	mov    ecx,edi
64008587:	call   0x64008ae0
6400858c:	jmp    0x64008510
6400858e:	mov    eax,DWORD PTR [ebp+0x8]
64008591:	pop    edi
64008592:	mov    DWORD PTR [eax+0x4],esi
64008595:	pop    esi
64008596:	mov    DWORD PTR [eax],ebx
64008598:	pop    ebx
64008599:	mov    esp,ebp
6400859b:	pop    ebp
6400859c:	ret    0x14
6400859f:	int3   
640085a0:	mov    edx,DWORD PTR [esp+0x4]
640085a4:	mov    eax,DWORD PTR [edx+0x8]
640085a7:	push   esi
640085a8:	mov    esi,DWORD PTR [eax]
640085aa:	mov    DWORD PTR [edx+0x8],esi
640085ad:	mov    esi,DWORD PTR [eax]
640085af:	cmp    BYTE PTR [esi+0x45],0x0
640085b3:	jne    0x640085b8
640085b5:	mov    DWORD PTR [esi+0x4],edx
640085b8:	mov    esi,DWORD PTR [edx+0x4]
640085bb:	mov    DWORD PTR [eax+0x4],esi
640085be:	mov    ecx,DWORD PTR [ecx+0x4]
640085c1:	cmp    edx,DWORD PTR [ecx+0x4]
640085c4:	pop    esi
640085c5:	jne    0x640085d2
640085c7:	mov    DWORD PTR [ecx+0x4],eax
640085ca:	mov    DWORD PTR [eax],edx
640085cc:	mov    DWORD PTR [edx+0x4],eax
640085cf:	ret    0x4
640085d2:	mov    ecx,DWORD PTR [edx+0x4]
640085d5:	cmp    edx,DWORD PTR [ecx]
640085d7:	jne    0x640085e3
640085d9:	mov    DWORD PTR [ecx],eax
640085db:	mov    DWORD PTR [eax],edx
640085dd:	mov    DWORD PTR [edx+0x4],eax
640085e0:	ret    0x4
640085e3:	mov    DWORD PTR [ecx+0x8],eax
640085e6:	mov    DWORD PTR [eax],edx
640085e8:	mov    DWORD PTR [edx+0x4],eax
640085eb:	ret    0x4
640085ee:	int3   
640085ef:	int3   
640085f0:	mov    edx,DWORD PTR [esp+0x4]
640085f4:	mov    eax,DWORD PTR [edx]
640085f6:	push   esi
640085f7:	mov    esi,DWORD PTR [eax+0x8]
640085fa:	mov    DWORD PTR [edx],esi
640085fc:	mov    esi,DWORD PTR [eax+0x8]
640085ff:	cmp    BYTE PTR [esi+0x45],0x0
64008603:	jne    0x64008608
64008605:	mov    DWORD PTR [esi+0x4],edx
64008608:	mov    esi,DWORD PTR [edx+0x4]
6400860b:	mov    DWORD PTR [eax+0x4],esi
6400860e:	mov    ecx,DWORD PTR [ecx+0x4]
64008611:	cmp    edx,DWORD PTR [ecx+0x4]
64008614:	pop    esi
64008615:	jne    0x64008623
64008617:	mov    DWORD PTR [ecx+0x4],eax
6400861a:	mov    DWORD PTR [eax+0x8],edx
6400861d:	mov    DWORD PTR [edx+0x4],eax
64008620:	ret    0x4
64008623:	mov    ecx,DWORD PTR [edx+0x4]
64008626:	cmp    edx,DWORD PTR [ecx+0x8]
64008629:	jne    0x64008637
6400862b:	mov    DWORD PTR [ecx+0x8],eax
6400862e:	mov    DWORD PTR [eax+0x8],edx
64008631:	mov    DWORD PTR [edx+0x4],eax
64008634:	ret    0x4
64008637:	mov    DWORD PTR [ecx],eax
64008639:	mov    DWORD PTR [eax+0x8],edx
6400863c:	mov    DWORD PTR [edx+0x4],eax
6400863f:	ret    0x4
64008642:	int3   
64008643:	int3   
64008644:	int3   
64008645:	int3   
64008646:	int3   
64008647:	int3   
64008648:	int3   
64008649:	int3   
6400864a:	int3   
6400864b:	int3   
6400864c:	int3   
6400864d:	int3   
6400864e:	int3   
6400864f:	int3   
64008650:	push   ebp
64008651:	mov    ebp,esp
64008653:	push   0xffffffff
64008655:	push   0x64022d11
6400865a:	mov    eax,fs:0x0
64008660:	push   eax
64008661:	sub    esp,0xc
64008664:	push   ebx
64008665:	push   esi
64008666:	push   edi
64008667:	mov    eax,ds:0x6402d09c
6400866c:	xor    eax,ebp
6400866e:	push   eax
6400866f:	lea    eax,[ebp-0xc]
64008672:	mov    fs:0x0,eax
64008678:	mov    DWORD PTR [ebp-0x10],esp
6400867b:	push   0x48
6400867d:	call   0x640129f1
64008682:	mov    esi,eax
64008684:	mov    DWORD PTR [ebp-0x4],0x0
6400868b:	add    esp,0x4
6400868e:	mov    DWORD PTR [ebp-0x14],esi
64008691:	mov    DWORD PTR [ebp-0x18],esi
64008694:	test   esi,esi
64008696:	mov    BYTE PTR [ebp-0x4],0x1
6400869a:	je     0x640086c3
6400869c:	mov    eax,DWORD PTR [ebp+0x8]
6400869f:	mov    ecx,DWORD PTR [ebp+0xc]
640086a2:	mov    edx,DWORD PTR [ebp+0x10]
640086a5:	mov    DWORD PTR [esi],eax
640086a7:	mov    eax,DWORD PTR [ebp+0x14]
640086aa:	mov    DWORD PTR [esi+0x4],ecx
640086ad:	push   eax
640086ae:	lea    ecx,[esi+0xc]
640086b1:	mov    DWORD PTR [esi+0x8],edx
640086b4:	call   0x64008f50
640086b9:	mov    cl,BYTE PTR [ebp+0x18]
640086bc:	mov    BYTE PTR [esi+0x44],cl
640086bf:	mov    BYTE PTR [esi+0x45],0x0
640086c3:	mov    eax,esi
640086c5:	mov    ecx,DWORD PTR [ebp-0xc]
640086c8:	mov    DWORD PTR fs:0x0,ecx
640086cf:	pop    ecx
640086d0:	pop    edi
640086d1:	pop    esi
640086d2:	pop    ebx
640086d3:	mov    esp,ebp
640086d5:	pop    ebp
640086d6:	ret    0x14
640086d9:	mov    edx,DWORD PTR [ebp-0x14]
640086dc:	push   edx
640086dd:	call   0x64012612
640086e2:	add    esp,0x4
640086e5:	push   0x0
640086e7:	push   0x0
640086e9:	call   0x64012a5b
640086ee:	int3   
640086ef:	int3   
640086f0:	push   ebp
640086f1:	mov    ebp,esp
640086f3:	and    esp,0xfffffff8
640086f6:	push   0xffffffff
640086f8:	push   0x64022e28
640086fd:	mov    eax,fs:0x0
64008703:	push   eax
64008704:	sub    esp,0x50
64008707:	push   ebx
64008708:	push   esi
64008709:	push   edi
6400870a:	mov    eax,ds:0x6402d09c
6400870f:	xor    eax,esp
64008711:	push   eax
64008712:	lea    eax,[esp+0x60]
64008716:	mov    fs:0x0,eax
6400871c:	mov    DWORD PTR [esp+0x14],ecx
64008720:	mov    edi,DWORD PTR [ebp+0x10]
64008723:	cmp    BYTE PTR [edi+0x45],0x0
64008727:	je     0x64008775
64008729:	push   0x1b
6400872b:	xor    esi,esi
6400872d:	push   0x640283e8
64008732:	lea    ecx,[esp+0x20]
64008736:	mov    DWORD PTR [esp+0x38],0xf
6400873e:	mov    DWORD PTR [esp+0x34],esi
64008742:	mov    BYTE PTR [esp+0x24],0x0
64008747:	call   0x64001860
6400874c:	lea    eax,[esp+0x18]
64008750:	push   eax
64008751:	lea    ecx,[esp+0x38]
64008755:	mov    DWORD PTR [esp+0x6c],esi
64008759:	call   0x64002d10
6400875e:	push   0x6402aaec
64008763:	lea    ecx,[esp+0x38]
64008767:	push   ecx
64008768:	mov    DWORD PTR [esp+0x3c],0x64025328
64008770:	call   0x64012a5b
64008775:	lea    ecx,[ebp+0xc]
64008778:	call   0x64008a10
6400877d:	mov    ecx,DWORD PTR [edi]
6400877f:	cmp    BYTE PTR [ecx+0x45],0x0
64008783:	je     0x6400878a
64008785:	mov    ebx,DWORD PTR [edi+0x8]
64008788:	jmp    0x640087a1
6400878a:	mov    edx,DWORD PTR [edi+0x8]
6400878d:	cmp    BYTE PTR [edx+0x45],0x0
64008791:	je     0x64008797
64008793:	mov    ebx,ecx
64008795:	jmp    0x640087a1
64008797:	mov    eax,DWORD PTR [ebp+0x10]
6400879a:	cmp    eax,edi
6400879c:	mov    ebx,DWORD PTR [eax+0x8]
6400879f:	jne    0x6400881d
640087a1:	cmp    BYTE PTR [ebx+0x45],0x0
640087a5:	mov    esi,DWORD PTR [edi+0x4]
640087a8:	jne    0x640087ad
640087aa:	mov    DWORD PTR [ebx+0x4],esi
640087ad:	mov    ecx,DWORD PTR [esp+0x14]
640087b1:	mov    eax,DWORD PTR [ecx+0x4]
640087b4:	cmp    DWORD PTR [eax+0x4],edi
640087b7:	jne    0x640087be
640087b9:	mov    DWORD PTR [eax+0x4],ebx
640087bc:	jmp    0x640087c9
640087be:	cmp    DWORD PTR [esi],edi
640087c0:	jne    0x640087c6
640087c2:	mov    DWORD PTR [esi],ebx
640087c4:	jmp    0x640087c9
640087c6:	mov    DWORD PTR [esi+0x8],ebx
640087c9:	mov    eax,DWORD PTR [ecx+0x4]
640087cc:	cmp    DWORD PTR [eax],edi
640087ce:	jne    0x640087ec
640087d0:	cmp    BYTE PTR [ebx+0x45],0x0
640087d4:	je     0x640087da
640087d6:	mov    eax,esi
640087d8:	jmp    0x640087e7
640087da:	push   ebx
640087db:	call   0x64009070
640087e0:	mov    ecx,DWORD PTR [esp+0x18]
640087e4:	add    esp,0x4
640087e7:	mov    edx,DWORD PTR [ecx+0x4]
640087ea:	mov    DWORD PTR [edx],eax
640087ec:	mov    eax,DWORD PTR [ecx+0x4]
640087ef:	cmp    DWORD PTR [eax+0x8],edi
640087f2:	jne    0x6400887c
640087f8:	cmp    BYTE PTR [ebx+0x45],0x0
640087fc:	je     0x64008808
640087fe:	mov    edx,DWORD PTR [ecx+0x4]
64008801:	mov    eax,esi
64008803:	mov    DWORD PTR [edx+0x8],eax
64008806:	jmp    0x6400887c
64008808:	push   ebx
64008809:	call   0x64009050
6400880e:	mov    ecx,DWORD PTR [esp+0x18]
64008812:	mov    edx,DWORD PTR [ecx+0x4]
64008815:	add    esp,0x4
64008818:	mov    DWORD PTR [edx+0x8],eax
6400881b:	jmp    0x6400887c
6400881d:	mov    DWORD PTR [ecx+0x4],eax
64008820:	mov    ecx,DWORD PTR [edi]
64008822:	mov    DWORD PTR [eax],ecx
64008824:	cmp    eax,DWORD PTR [edi+0x8]
64008827:	jne    0x6400882d
64008829:	mov    esi,eax
6400882b:	jmp    0x64008847
6400882d:	cmp    BYTE PTR [ebx+0x45],0x0
64008831:	mov    esi,DWORD PTR [eax+0x4]
64008834:	jne    0x64008839
64008836:	mov    DWORD PTR [ebx+0x4],esi
64008839:	mov    DWORD PTR [esi],ebx
6400883b:	mov    edx,DWORD PTR [edi+0x8]
6400883e:	mov    DWORD PTR [eax+0x8],edx
64008841:	mov    ecx,DWORD PTR [edi+0x8]
64008844:	mov    DWORD PTR [ecx+0x4],eax
64008847:	mov    edx,DWORD PTR [esp+0x14]
6400884b:	mov    ecx,DWORD PTR [edx+0x4]
6400884e:	cmp    DWORD PTR [ecx+0x4],edi
64008851:	jne    0x64008858
64008853:	mov    DWORD PTR [ecx+0x4],eax
64008856:	jmp    0x64008866
64008858:	mov    ecx,DWORD PTR [edi+0x4]
6400885b:	cmp    DWORD PTR [ecx],edi
6400885d:	jne    0x64008863
6400885f:	mov    DWORD PTR [ecx],eax
64008861:	jmp    0x64008866
64008863:	mov    DWORD PTR [ecx+0x8],eax
64008866:	mov    ecx,DWORD PTR [edi+0x4]
64008869:	mov    DWORD PTR [eax+0x4],ecx
6400886c:	mov    cl,BYTE PTR [eax+0x44]
6400886f:	mov    dl,BYTE PTR [edi+0x44]
64008872:	mov    BYTE PTR [eax+0x44],dl
64008875:	mov    BYTE PTR [edi+0x44],cl
64008878:	mov    ecx,DWORD PTR [esp+0x14]
6400887c:	cmp    BYTE PTR [edi+0x44],0x1
64008880:	jne    0x64008991
64008886:	mov    eax,DWORD PTR [ecx+0x4]
64008889:	cmp    ebx,DWORD PTR [eax+0x4]
6400888c:	je     0x6400898d
64008892:	cmp    BYTE PTR [ebx+0x44],0x1
64008896:	jne    0x6400898d
6400889c:	mov    eax,DWORD PTR [esi]
6400889e:	cmp    ebx,eax
640088a0:	jne    0x64008910
640088a2:	mov    eax,DWORD PTR [esi+0x8]
640088a5:	cmp    BYTE PTR [eax+0x44],0x0
640088a9:	jne    0x640088c0
640088ab:	mov    BYTE PTR [eax+0x44],0x1
640088af:	push   esi
640088b0:	mov    BYTE PTR [esi+0x44],0x0
640088b4:	call   0x640085a0
640088b9:	mov    eax,DWORD PTR [esi+0x8]
640088bc:	mov    ecx,DWORD PTR [esp+0x14]
640088c0:	cmp    BYTE PTR [eax+0x45],0x0
640088c4:	jne    0x64008945
640088c6:	mov    edx,DWORD PTR [eax]
640088c8:	cmp    BYTE PTR [edx+0x44],0x1
640088cc:	jne    0x640088d7
640088ce:	mov    edx,DWORD PTR [eax+0x8]
640088d1:	cmp    BYTE PTR [edx+0x44],0x1
640088d5:	je     0x64008941
640088d7:	mov    edx,DWORD PTR [eax+0x8]
640088da:	cmp    BYTE PTR [edx+0x44],0x1
640088de:	jne    0x640088f7
640088e0:	mov    edx,DWORD PTR [eax]
640088e2:	mov    BYTE PTR [edx+0x44],0x1
640088e6:	push   eax
640088e7:	mov    BYTE PTR [eax+0x44],0x0
640088eb:	call   0x640085f0
640088f0:	mov    eax,DWORD PTR [esi+0x8]
640088f3:	mov    ecx,DWORD PTR [esp+0x14]
640088f7:	mov    dl,BYTE PTR [esi+0x44]
640088fa:	mov    BYTE PTR [eax+0x44],dl
640088fd:	mov    BYTE PTR [esi+0x44],0x1
64008901:	mov    eax,DWORD PTR [eax+0x8]
64008904:	push   esi
64008905:	mov    BYTE PTR [eax+0x44],0x1
64008909:	call   0x640085a0
6400890e:	jmp    0x6400898d
64008910:	cmp    BYTE PTR [eax+0x44],0x0
64008914:	jne    0x6400892a
64008916:	mov    BYTE PTR [eax+0x44],0x1
6400891a:	push   esi
6400891b:	mov    BYTE PTR [esi+0x44],0x0
6400891f:	call   0x640085f0
64008924:	mov    eax,DWORD PTR [esi]
64008926:	mov    ecx,DWORD PTR [esp+0x14]
6400892a:	cmp    BYTE PTR [eax+0x45],0x0
6400892e:	jne    0x64008945
64008930:	mov    edx,DWORD PTR [eax+0x8]
64008933:	cmp    BYTE PTR [edx+0x44],0x1
64008937:	jne    0x64008958
64008939:	mov    edx,DWORD PTR [eax]
6400893b:	cmp    BYTE PTR [edx+0x44],0x1
6400893f:	jne    0x64008958
64008941:	mov    BYTE PTR [eax+0x44],0x0
64008945:	mov    eax,DWORD PTR [ecx+0x4]
64008948:	mov    ebx,esi
6400894a:	cmp    ebx,DWORD PTR [eax+0x4]
6400894d:	mov    esi,DWORD PTR [esi+0x4]
64008950:	jne    0x64008892
64008956:	jmp    0x6400898d
64008958:	mov    edx,DWORD PTR [eax]
6400895a:	cmp    BYTE PTR [edx+0x44],0x1
6400895e:	jne    0x64008977
64008960:	mov    edx,DWORD PTR [eax+0x8]
64008963:	mov    BYTE PTR [edx+0x44],0x1
64008967:	push   eax
64008968:	mov    BYTE PTR [eax+0x44],0x0
6400896c:	call   0x640085a0
64008971:	mov    eax,DWORD PTR [esi]
64008973:	mov    ecx,DWORD PTR [esp+0x14]
64008977:	mov    dl,BYTE PTR [esi+0x44]
6400897a:	mov    BYTE PTR [eax+0x44],dl
6400897d:	mov    BYTE PTR [esi+0x44],0x1
64008981:	mov    eax,DWORD PTR [eax]
64008983:	push   esi
64008984:	mov    BYTE PTR [eax+0x44],0x1
64008988:	call   0x640085f0
6400898d:	mov    BYTE PTR [ebx+0x44],0x1
64008991:	cmp    DWORD PTR [edi+0x40],0x10
64008995:	jb     0x640089a3
64008997:	mov    ecx,DWORD PTR [edi+0x2c]
6400899a:	push   ecx
6400899b:	call   0x64012612
640089a0:	add    esp,0x4
640089a3:	xor    esi,esi
640089a5:	mov    ebx,0xf
640089aa:	mov    DWORD PTR [edi+0x40],ebx
640089ad:	mov    DWORD PTR [edi+0x3c],esi
640089b0:	mov    BYTE PTR [edi+0x2c],0x0
640089b4:	cmp    DWORD PTR [edi+0x24],0x10
640089b8:	jb     0x640089c6
640089ba:	mov    edx,DWORD PTR [edi+0x10]
640089bd:	push   edx
640089be:	call   0x64012612
640089c3:	add    esp,0x4
640089c6:	mov    DWORD PTR [edi+0x24],ebx
640089c9:	mov    DWORD PTR [edi+0x20],esi
640089cc:	push   edi
640089cd:	mov    BYTE PTR [edi+0x10],0x0
640089d1:	call   0x64012612
640089d6:	mov    ecx,DWORD PTR [esp+0x18]
640089da:	mov    eax,DWORD PTR [ecx+0x8]
640089dd:	add    esp,0x4
640089e0:	cmp    eax,esi
640089e2:	jbe    0x640089ea
640089e4:	add    eax,0xffffffff
640089e7:	mov    DWORD PTR [ecx+0x8],eax
640089ea:	mov    eax,DWORD PTR [ebp+0x8]
640089ed:	mov    ecx,DWORD PTR [ebp+0xc]
640089f0:	mov    edx,DWORD PTR [ebp+0x10]
640089f3:	mov    DWORD PTR [eax],ecx
640089f5:	mov    DWORD PTR [eax+0x4],edx
640089f8:	mov    ecx,DWORD PTR [esp+0x60]
640089fc:	mov    DWORD PTR fs:0x0,ecx
64008a03:	pop    ecx
64008a04:	pop    edi
64008a05:	pop    esi
64008a06:	pop    ebx
64008a07:	mov    esp,ebp
64008a09:	pop    ebp
64008a0a:	ret    0xc
64008a0d:	int3   
64008a0e:	int3   
64008a0f:	int3   
64008a10:	push   esi
64008a11:	mov    esi,ecx
64008a13:	cmp    DWORD PTR [esi],0x0
64008a16:	jne    0x64008a1d
64008a18:	call   0x640129c8
64008a1d:	mov    eax,DWORD PTR [esi+0x4]
64008a20:	cmp    BYTE PTR [eax+0x45],0x0
64008a24:	je     0x64008a2c
64008a26:	pop    esi
64008a27:	jmp    0x640129c8
64008a2c:	mov    ecx,DWORD PTR [eax+0x8]
64008a2f:	cmp    BYTE PTR [ecx+0x45],0x0
64008a33:	jne    0x64008a4f
64008a35:	mov    eax,DWORD PTR [ecx]
64008a37:	cmp    BYTE PTR [eax+0x45],0x0
64008a3b:	jne    0x64008a4a
64008a3d:	lea    ecx,[ecx+0x0]
64008a40:	mov    ecx,eax
64008a42:	mov    eax,DWORD PTR [ecx]
64008a44:	cmp    BYTE PTR [eax+0x45],0x0
64008a48:	je     0x64008a40
64008a4a:	mov    DWORD PTR [esi+0x4],ecx
64008a4d:	pop    esi
64008a4e:	ret    
64008a4f:	mov    eax,DWORD PTR [eax+0x4]
64008a52:	cmp    BYTE PTR [eax+0x45],0x0
64008a56:	jne    0x64008a6e
64008a58:	mov    ecx,DWORD PTR [esi+0x4]
64008a5b:	cmp    ecx,DWORD PTR [eax+0x8]
64008a5e:	jne    0x64008a6e
64008a60:	mov    DWORD PTR [esi+0x4],eax
64008a63:	mov    edx,eax
64008a65:	mov    eax,DWORD PTR [edx+0x4]
64008a68:	cmp    BYTE PTR [eax+0x45],0x0
64008a6c:	je     0x64008a58
64008a6e:	mov    DWORD PTR [esi+0x4],eax
64008a71:	pop    esi
64008a72:	ret    
64008a73:	int3   
64008a74:	int3   
64008a75:	int3   
64008a76:	int3   
64008a77:	int3   
64008a78:	int3   
64008a79:	int3   
64008a7a:	int3   
64008a7b:	int3   
64008a7c:	int3   
64008a7d:	int3   
64008a7e:	int3   
64008a7f:	int3   
64008a80:	mov    ecx,DWORD PTR [esp+0x4]
64008a84:	sub    esp,0xc
64008a87:	test   ecx,ecx
64008a89:	ja     0x64008a9f
64008a8b:	xor    ecx,ecx
64008a8d:	lea    edx,[ecx+ecx*1]
64008a90:	push   edx
64008a91:	call   0x640129f1
64008a96:	add    esp,0x4
64008a99:	add    esp,0xc
64008a9c:	ret    0x4
64008a9f:	or     eax,0xffffffff
64008aa2:	xor    edx,edx
64008aa4:	div    ecx
64008aa6:	cmp    eax,0x2
64008aa9:	jae    0x64008a8d
64008aab:	lea    eax,[esp+0x10]
64008aaf:	push   eax
64008ab0:	lea    ecx,[esp+0x4]
64008ab4:	mov    DWORD PTR [esp+0x14],0x0
64008abc:	call   0x6401266d
64008ac1:	push   0x6402aa5c
64008ac6:	lea    ecx,[esp+0x4]
64008aca:	push   ecx
64008acb:	mov    DWORD PTR [esp+0x8],0x64025304
64008ad3:	call   0x64012a5b
64008ad8:	int3   
64008ad9:	int3   
64008ada:	int3   
64008adb:	int3   
64008adc:	int3   
64008add:	int3   
64008ade:	int3   
64008adf:	int3   
64008ae0:	push   ebp
64008ae1:	mov    ebp,esp
64008ae3:	and    esp,0xfffffff8
64008ae6:	push   0xffffffff
64008ae8:	push   0x64022df8
64008aed:	mov    eax,fs:0x0
64008af3:	push   eax
64008af4:	sub    esp,0x50
64008af7:	push   ebx
64008af8:	push   esi
64008af9:	push   edi
64008afa:	mov    eax,ds:0x6402d09c
64008aff:	xor    eax,esp
64008b01:	push   eax
64008b02:	lea    eax,[esp+0x60]
64008b06:	mov    fs:0x0,eax
64008b0c:	mov    DWORD PTR [esp+0x14],ecx
64008b10:	mov    edi,DWORD PTR [ebp+0x10]
64008b13:	cmp    BYTE PTR [edi+0x45],0x0
64008b17:	je     0x64008b65
64008b19:	push   0x1b
64008b1b:	xor    esi,esi
64008b1d:	push   0x640283e8
64008b22:	lea    ecx,[esp+0x20]
64008b26:	mov    DWORD PTR [esp+0x38],0xf
64008b2e:	mov    DWORD PTR [esp+0x34],esi
64008b32:	mov    BYTE PTR [esp+0x24],0x0
64008b37:	call   0x64001860
64008b3c:	lea    eax,[esp+0x18]
64008b40:	push   eax
64008b41:	lea    ecx,[esp+0x38]
64008b45:	mov    DWORD PTR [esp+0x6c],esi
64008b49:	call   0x64002d10
64008b4e:	push   0x6402aaec
64008b53:	lea    ecx,[esp+0x38]
64008b57:	push   ecx
64008b58:	mov    DWORD PTR [esp+0x3c],0x64025328
64008b60:	call   0x64012a5b
64008b65:	lea    ecx,[ebp+0xc]
64008b68:	call   0x64008a10
64008b6d:	mov    ecx,DWORD PTR [edi]
64008b6f:	cmp    BYTE PTR [ecx+0x45],0x0
64008b73:	je     0x64008b7a
64008b75:	mov    ebx,DWORD PTR [edi+0x8]
64008b78:	jmp    0x64008b91
64008b7a:	mov    edx,DWORD PTR [edi+0x8]
64008b7d:	cmp    BYTE PTR [edx+0x45],0x0
64008b81:	je     0x64008b87
64008b83:	mov    ebx,ecx
64008b85:	jmp    0x64008b91
64008b87:	mov    eax,DWORD PTR [ebp+0x10]
64008b8a:	cmp    eax,edi
64008b8c:	mov    ebx,DWORD PTR [eax+0x8]
64008b8f:	jne    0x64008c0d
64008b91:	cmp    BYTE PTR [ebx+0x45],0x0
64008b95:	mov    esi,DWORD PTR [edi+0x4]
64008b98:	jne    0x64008b9d
64008b9a:	mov    DWORD PTR [ebx+0x4],esi
64008b9d:	mov    ecx,DWORD PTR [esp+0x14]
64008ba1:	mov    eax,DWORD PTR [ecx+0x4]
64008ba4:	cmp    DWORD PTR [eax+0x4],edi
64008ba7:	jne    0x64008bae
64008ba9:	mov    DWORD PTR [eax+0x4],ebx
64008bac:	jmp    0x64008bb9
64008bae:	cmp    DWORD PTR [esi],edi
64008bb0:	jne    0x64008bb6
64008bb2:	mov    DWORD PTR [esi],ebx
64008bb4:	jmp    0x64008bb9
64008bb6:	mov    DWORD PTR [esi+0x8],ebx
64008bb9:	mov    eax,DWORD PTR [ecx+0x4]
64008bbc:	cmp    DWORD PTR [eax],edi
64008bbe:	jne    0x64008bdc
64008bc0:	cmp    BYTE PTR [ebx+0x45],0x0
64008bc4:	je     0x64008bca
64008bc6:	mov    eax,esi
64008bc8:	jmp    0x64008bd7
64008bca:	push   ebx
64008bcb:	call   0x64009070
64008bd0:	mov    ecx,DWORD PTR [esp+0x18]
64008bd4:	add    esp,0x4
64008bd7:	mov    edx,DWORD PTR [ecx+0x4]
64008bda:	mov    DWORD PTR [edx],eax
64008bdc:	mov    eax,DWORD PTR [ecx+0x4]
64008bdf:	cmp    DWORD PTR [eax+0x8],edi
64008be2:	jne    0x64008c6c
64008be8:	cmp    BYTE PTR [ebx+0x45],0x0
64008bec:	je     0x64008bf8
64008bee:	mov    edx,DWORD PTR [ecx+0x4]
64008bf1:	mov    eax,esi
64008bf3:	mov    DWORD PTR [edx+0x8],eax
64008bf6:	jmp    0x64008c6c
64008bf8:	push   ebx
64008bf9:	call   0x64009050
64008bfe:	mov    ecx,DWORD PTR [esp+0x18]
64008c02:	mov    edx,DWORD PTR [ecx+0x4]
64008c05:	add    esp,0x4
64008c08:	mov    DWORD PTR [edx+0x8],eax
64008c0b:	jmp    0x64008c6c
64008c0d:	mov    DWORD PTR [ecx+0x4],eax
64008c10:	mov    ecx,DWORD PTR [edi]
64008c12:	mov    DWORD PTR [eax],ecx
64008c14:	cmp    eax,DWORD PTR [edi+0x8]
64008c17:	jne    0x64008c1d
64008c19:	mov    esi,eax
64008c1b:	jmp    0x64008c37
64008c1d:	cmp    BYTE PTR [ebx+0x45],0x0
64008c21:	mov    esi,DWORD PTR [eax+0x4]
64008c24:	jne    0x64008c29
64008c26:	mov    DWORD PTR [ebx+0x4],esi
64008c29:	mov    DWORD PTR [esi],ebx
64008c2b:	mov    edx,DWORD PTR [edi+0x8]
64008c2e:	mov    DWORD PTR [eax+0x8],edx
64008c31:	mov    ecx,DWORD PTR [edi+0x8]
64008c34:	mov    DWORD PTR [ecx+0x4],eax
64008c37:	mov    edx,DWORD PTR [esp+0x14]
64008c3b:	mov    ecx,DWORD PTR [edx+0x4]
64008c3e:	cmp    DWORD PTR [ecx+0x4],edi
64008c41:	jne    0x64008c48
64008c43:	mov    DWORD PTR [ecx+0x4],eax
64008c46:	jmp    0x64008c56
64008c48:	mov    ecx,DWORD PTR [edi+0x4]
64008c4b:	cmp    DWORD PTR [ecx],edi
64008c4d:	jne    0x64008c53
64008c4f:	mov    DWORD PTR [ecx],eax
64008c51:	jmp    0x64008c56
64008c53:	mov    DWORD PTR [ecx+0x8],eax
64008c56:	mov    ecx,DWORD PTR [edi+0x4]
64008c59:	mov    DWORD PTR [eax+0x4],ecx
64008c5c:	mov    cl,BYTE PTR [eax+0x44]
64008c5f:	mov    dl,BYTE PTR [edi+0x44]
64008c62:	mov    BYTE PTR [eax+0x44],dl
64008c65:	mov    BYTE PTR [edi+0x44],cl
64008c68:	mov    ecx,DWORD PTR [esp+0x14]
64008c6c:	cmp    BYTE PTR [edi+0x44],0x1
64008c70:	jne    0x64008d81
64008c76:	mov    eax,DWORD PTR [ecx+0x4]
64008c79:	cmp    ebx,DWORD PTR [eax+0x4]
64008c7c:	je     0x64008d7d
64008c82:	cmp    BYTE PTR [ebx+0x44],0x1
64008c86:	jne    0x64008d7d
64008c8c:	mov    eax,DWORD PTR [esi]
64008c8e:	cmp    ebx,eax
64008c90:	jne    0x64008d00
64008c92:	mov    eax,DWORD PTR [esi+0x8]
64008c95:	cmp    BYTE PTR [eax+0x44],0x0
64008c99:	jne    0x64008cb0
64008c9b:	mov    BYTE PTR [eax+0x44],0x1
64008c9f:	push   esi
64008ca0:	mov    BYTE PTR [esi+0x44],0x0
64008ca4:	call   0x640085a0
64008ca9:	mov    eax,DWORD PTR [esi+0x8]
64008cac:	mov    ecx,DWORD PTR [esp+0x14]
64008cb0:	cmp    BYTE PTR [eax+0x45],0x0
64008cb4:	jne    0x64008d35
64008cb6:	mov    edx,DWORD PTR [eax]
64008cb8:	cmp    BYTE PTR [edx+0x44],0x1
64008cbc:	jne    0x64008cc7
64008cbe:	mov    edx,DWORD PTR [eax+0x8]
64008cc1:	cmp    BYTE PTR [edx+0x44],0x1
64008cc5:	je     0x64008d31
64008cc7:	mov    edx,DWORD PTR [eax+0x8]
64008cca:	cmp    BYTE PTR [edx+0x44],0x1
64008cce:	jne    0x64008ce7
64008cd0:	mov    edx,DWORD PTR [eax]
64008cd2:	mov    BYTE PTR [edx+0x44],0x1
64008cd6:	push   eax
64008cd7:	mov    BYTE PTR [eax+0x44],0x0
64008cdb:	call   0x640085f0
64008ce0:	mov    eax,DWORD PTR [esi+0x8]
64008ce3:	mov    ecx,DWORD PTR [esp+0x14]
64008ce7:	mov    dl,BYTE PTR [esi+0x44]
64008cea:	mov    BYTE PTR [eax+0x44],dl
64008ced:	mov    BYTE PTR [esi+0x44],0x1
64008cf1:	mov    eax,DWORD PTR [eax+0x8]
64008cf4:	push   esi
64008cf5:	mov    BYTE PTR [eax+0x44],0x1
64008cf9:	call   0x640085a0
64008cfe:	jmp    0x64008d7d
64008d00:	cmp    BYTE PTR [eax+0x44],0x0
64008d04:	jne    0x64008d1a
64008d06:	mov    BYTE PTR [eax+0x44],0x1
64008d0a:	push   esi
64008d0b:	mov    BYTE PTR [esi+0x44],0x0
64008d0f:	call   0x640085f0
64008d14:	mov    eax,DWORD PTR [esi]
64008d16:	mov    ecx,DWORD PTR [esp+0x14]
64008d1a:	cmp    BYTE PTR [eax+0x45],0x0
64008d1e:	jne    0x64008d35
64008d20:	mov    edx,DWORD PTR [eax+0x8]
64008d23:	cmp    BYTE PTR [edx+0x44],0x1
64008d27:	jne    0x64008d48
64008d29:	mov    edx,DWORD PTR [eax]
64008d2b:	cmp    BYTE PTR [edx+0x44],0x1
64008d2f:	jne    0x64008d48
64008d31:	mov    BYTE PTR [eax+0x44],0x0
64008d35:	mov    eax,DWORD PTR [ecx+0x4]
64008d38:	mov    ebx,esi
64008d3a:	cmp    ebx,DWORD PTR [eax+0x4]
64008d3d:	mov    esi,DWORD PTR [esi+0x4]
64008d40:	jne    0x64008c82
64008d46:	jmp    0x64008d7d
64008d48:	mov    edx,DWORD PTR [eax]
64008d4a:	cmp    BYTE PTR [edx+0x44],0x1
64008d4e:	jne    0x64008d67
64008d50:	mov    edx,DWORD PTR [eax+0x8]
64008d53:	mov    BYTE PTR [edx+0x44],0x1
64008d57:	push   eax
64008d58:	mov    BYTE PTR [eax+0x44],0x0
64008d5c:	call   0x640085a0
64008d61:	mov    eax,DWORD PTR [esi]
64008d63:	mov    ecx,DWORD PTR [esp+0x14]
64008d67:	mov    dl,BYTE PTR [esi+0x44]
64008d6a:	mov    BYTE PTR [eax+0x44],dl
64008d6d:	mov    BYTE PTR [esi+0x44],0x1
64008d71:	mov    eax,DWORD PTR [eax]
64008d73:	push   esi
64008d74:	mov    BYTE PTR [eax+0x44],0x1
64008d78:	call   0x640085f0
64008d7d:	mov    BYTE PTR [ebx+0x44],0x1
64008d81:	cmp    DWORD PTR [edi+0x40],0x8
64008d85:	jb     0x64008d93
64008d87:	mov    ecx,DWORD PTR [edi+0x2c]
64008d8a:	push   ecx
64008d8b:	call   0x64012612
64008d90:	add    esp,0x4
64008d93:	xor    esi,esi
64008d95:	mov    ebx,0x7
64008d9a:	mov    DWORD PTR [edi+0x40],ebx
64008d9d:	mov    DWORD PTR [edi+0x3c],esi
64008da0:	mov    WORD PTR [edi+0x2c],si
64008da4:	cmp    DWORD PTR [edi+0x24],0x8
64008da8:	jb     0x64008db6
64008daa:	mov    edx,DWORD PTR [edi+0x10]
64008dad:	push   edx
64008dae:	call   0x64012612
64008db3:	add    esp,0x4
64008db6:	mov    DWORD PTR [edi+0x24],ebx
64008db9:	mov    DWORD PTR [edi+0x20],esi
64008dbc:	push   edi
64008dbd:	mov    WORD PTR [edi+0x10],si
64008dc1:	call   0x64012612
64008dc6:	mov    ecx,DWORD PTR [esp+0x18]
64008dca:	mov    eax,DWORD PTR [ecx+0x8]
64008dcd:	add    esp,0x4
64008dd0:	cmp    eax,esi
64008dd2:	jbe    0x64008dda
64008dd4:	add    eax,0xffffffff
64008dd7:	mov    DWORD PTR [ecx+0x8],eax
64008dda:	mov    eax,DWORD PTR [ebp+0x8]
64008ddd:	mov    ecx,DWORD PTR [ebp+0xc]
64008de0:	mov    edx,DWORD PTR [ebp+0x10]
64008de3:	mov    DWORD PTR [eax],ecx
64008de5:	mov    DWORD PTR [eax+0x4],edx
64008de8:	mov    ecx,DWORD PTR [esp+0x60]
64008dec:	mov    DWORD PTR fs:0x0,ecx
64008df3:	pop    ecx
64008df4:	pop    edi
64008df5:	pop    esi
64008df6:	pop    ebx
64008df7:	mov    esp,ebp
64008df9:	pop    ebp
64008dfa:	ret    0xc
64008dfd:	int3   
64008dfe:	int3   
64008dff:	int3   
64008e00:	push   0x48
64008e02:	call   0x640129f1
64008e07:	add    esp,0x4
64008e0a:	test   eax,eax
64008e0c:	je     0x64008e14
64008e0e:	mov    DWORD PTR [eax],0x0
64008e14:	lea    ecx,[eax+0x4]
64008e17:	test   ecx,ecx
64008e19:	je     0x64008e21
64008e1b:	mov    DWORD PTR [ecx],0x0
64008e21:	lea    ecx,[eax+0x8]
64008e24:	test   ecx,ecx
64008e26:	je     0x64008e2e
64008e28:	mov    DWORD PTR [ecx],0x0
64008e2e:	mov    BYTE PTR [eax+0x44],0x1
64008e32:	mov    BYTE PTR [eax+0x45],0x0
64008e36:	ret    
64008e37:	int3   
64008e38:	int3   
64008e39:	int3   
64008e3a:	int3   
64008e3b:	int3   
64008e3c:	int3   
64008e3d:	int3   
64008e3e:	int3   
64008e3f:	int3   
64008e40:	push   esi
64008e41:	mov    esi,ecx
64008e43:	cmp    DWORD PTR [esi],0x0
64008e46:	jne    0x64008e4d
64008e48:	call   0x640129c8
64008e4d:	mov    eax,DWORD PTR [esi+0x4]
64008e50:	cmp    BYTE PTR [eax+0x45],0x0
64008e54:	je     0x64008e68
64008e56:	mov    eax,DWORD PTR [eax+0x8]
64008e59:	mov    DWORD PTR [esi+0x4],eax
64008e5c:	cmp    BYTE PTR [eax+0x45],0x0
64008e60:	je     0x64008ec7
64008e62:	pop    esi
64008e63:	jmp    0x640129c8
64008e68:	mov    ecx,DWORD PTR [eax]
64008e6a:	cmp    BYTE PTR [ecx+0x45],0x0
64008e6e:	jne    0x64008e90
64008e70:	mov    eax,DWORD PTR [ecx+0x8]
64008e73:	cmp    BYTE PTR [eax+0x45],0x0
64008e77:	jne    0x64008e8b
64008e79:	lea    esp,[esp+0x0]
64008e80:	mov    ecx,eax
64008e82:	mov    eax,DWORD PTR [ecx+0x8]
64008e85:	cmp    BYTE PTR [eax+0x45],0x0
64008e89:	je     0x64008e80
64008e8b:	mov    DWORD PTR [esi+0x4],ecx
64008e8e:	pop    esi
64008e8f:	ret    
64008e90:	mov    eax,DWORD PTR [eax+0x4]
64008e93:	cmp    BYTE PTR [eax+0x45],0x0
64008e97:	jne    0x64008eb5
64008e99:	lea    esp,[esp+0x0]
64008ea0:	mov    ecx,DWORD PTR [esi+0x4]
64008ea3:	cmp    ecx,DWORD PTR [eax]
64008ea5:	jne    0x64008eb5
64008ea7:	mov    DWORD PTR [esi+0x4],eax
64008eaa:	mov    edx,eax
64008eac:	mov    eax,DWORD PTR [edx+0x4]
64008eaf:	cmp    BYTE PTR [eax+0x45],0x0
64008eb3:	je     0x64008ea0
64008eb5:	mov    ecx,DWORD PTR [esi+0x4]
64008eb8:	cmp    BYTE PTR [ecx+0x45],0x0
64008ebc:	je     0x64008ec4
64008ebe:	pop    esi
64008ebf:	jmp    0x640129c8
64008ec4:	mov    DWORD PTR [esi+0x4],eax
64008ec7:	pop    esi
64008ec8:	ret    
64008ec9:	int3   
64008eca:	int3   
64008ecb:	int3   
64008ecc:	int3   
64008ecd:	int3   
64008ece:	int3   
64008ecf:	int3   
64008ed0:	push   0xffffffff
64008ed2:	push   0x64022a18
64008ed7:	mov    eax,fs:0x0
64008edd:	push   eax
64008ede:	push   ecx
64008edf:	push   ebx
64008ee0:	push   esi
64008ee1:	push   edi
64008ee2:	mov    eax,ds:0x6402d09c
64008ee7:	xor    eax,esp
64008ee9:	push   eax
64008eea:	lea    eax,[esp+0x14]
64008eee:	mov    fs:0x0,eax
64008ef4:	mov    esi,ecx
64008ef6:	mov    DWORD PTR [esp+0x10],esi
64008efa:	mov    edi,DWORD PTR [esp+0x24]
64008efe:	xor    ebx,ebx
64008f00:	push   0xffffffff
64008f02:	push   ebx
64008f03:	mov    DWORD PTR [esi+0x18],0xf
64008f0a:	mov    DWORD PTR [esi+0x14],ebx
64008f0d:	push   edi
64008f0e:	mov    BYTE PTR [esi+0x4],bl
64008f11:	call   0x64001780
64008f16:	push   0xffffffff
64008f18:	lea    ecx,[esi+0x1c]
64008f1b:	mov    DWORD PTR [esp+0x20],ebx
64008f1f:	lea    eax,[edi+0x1c]
64008f22:	push   ebx
64008f23:	mov    DWORD PTR [ecx+0x18],0xf
64008f2a:	mov    DWORD PTR [ecx+0x14],ebx
64008f2d:	push   eax
64008f2e:	mov    BYTE PTR [ecx+0x4],bl
64008f31:	call   0x64001780
64008f36:	mov    eax,esi
64008f38:	mov    ecx,DWORD PTR [esp+0x14]
64008f3c:	mov    DWORD PTR fs:0x0,ecx
64008f43:	pop    ecx
64008f44:	pop    edi
64008f45:	pop    esi
64008f46:	pop    ebx
64008f47:	add    esp,0x10
64008f4a:	ret    0x4
64008f4d:	int3   
64008f4e:	int3   
64008f4f:	int3   
64008f50:	push   0xffffffff
64008f52:	push   0x64022cd8
64008f57:	mov    eax,fs:0x0
64008f5d:	push   eax
64008f5e:	push   ecx
64008f5f:	push   ebx
64008f60:	push   esi
64008f61:	push   edi
64008f62:	mov    eax,ds:0x6402d09c
64008f67:	xor    eax,esp
64008f69:	push   eax
64008f6a:	lea    eax,[esp+0x14]
64008f6e:	mov    fs:0x0,eax
64008f74:	mov    esi,ecx
64008f76:	mov    DWORD PTR [esp+0x10],esi
64008f7a:	mov    ebx,DWORD PTR [esp+0x24]
64008f7e:	xor    edi,edi
64008f80:	push   0xffffffff
64008f82:	push   edi
64008f83:	mov    DWORD PTR [esi+0x18],0x7
64008f8a:	mov    DWORD PTR [esi+0x14],edi
64008f8d:	push   ebx
64008f8e:	mov    WORD PTR [esi+0x4],di
64008f92:	call   0x64006ea0
64008f97:	push   0xffffffff
64008f99:	lea    ecx,[esi+0x1c]
64008f9c:	mov    DWORD PTR [esp+0x20],edi
64008fa0:	lea    eax,[ebx+0x1c]
64008fa3:	push   edi
64008fa4:	mov    DWORD PTR [ecx+0x18],0x7
64008fab:	mov    DWORD PTR [ecx+0x14],edi
64008fae:	push   eax
64008faf:	mov    WORD PTR [ecx+0x4],di
64008fb3:	call   0x64006ea0
64008fb8:	mov    eax,esi
64008fba:	mov    ecx,DWORD PTR [esp+0x14]
64008fbe:	mov    DWORD PTR fs:0x0,ecx
64008fc5:	pop    ecx
64008fc6:	pop    edi
64008fc7:	pop    esi
64008fc8:	pop    ebx
64008fc9:	add    esp,0x10
64008fcc:	ret    0x4
64008fcf:	int3   
64008fd0:	push   ecx
64008fd1:	push   ebx
64008fd2:	push   esi
64008fd3:	mov    esi,DWORD PTR [esp+0x10]
64008fd7:	xor    ebx,ebx
64008fd9:	cmp    BYTE PTR [esi+0x45],bl
64008fdc:	push   edi
64008fdd:	mov    DWORD PTR [esp+0xc],ecx
64008fe1:	mov    edi,esi
64008fe3:	jne    0x64009046
64008fe5:	push   ebp
64008fe6:	lea    ebp,[ebx+0xf]
64008fe9:	lea    esp,[esp+0x0]
64008ff0:	mov    eax,DWORD PTR [edi+0x8]
64008ff3:	mov    ecx,DWORD PTR [esp+0x10]
64008ff7:	push   eax
64008ff8:	call   0x64008fd0
64008ffd:	cmp    DWORD PTR [esi+0x40],0x10
64009001:	mov    edi,DWORD PTR [edi]
64009003:	jb     0x64009011
64009005:	mov    ecx,DWORD PTR [esi+0x2c]
64009008:	push   ecx
64009009:	call   0x64012612
6400900e:	add    esp,0x4
64009011:	mov    DWORD PTR [esi+0x40],ebp
64009014:	mov    DWORD PTR [esi+0x3c],ebx
64009017:	mov    BYTE PTR [esi+0x2c],bl
6400901a:	cmp    DWORD PTR [esi+0x24],0x10
6400901e:	jb     0x6400902c
64009020:	mov    edx,DWORD PTR [esi+0x10]
64009023:	push   edx
64009024:	call   0x64012612
64009029:	add    esp,0x4
6400902c:	mov    DWORD PTR [esi+0x24],ebp
6400902f:	mov    DWORD PTR [esi+0x20],ebx
64009032:	push   esi
64009033:	mov    BYTE PTR [esi+0x10],bl
64009036:	call   0x64012612
6400903b:	add    esp,0x4
6400903e:	cmp    BYTE PTR [edi+0x45],bl
64009041:	mov    esi,edi
64009043:	je     0x64008ff0
64009045:	pop    ebp
64009046:	pop    edi
64009047:	pop    esi
64009048:	pop    ebx
64009049:	pop    ecx
6400904a:	ret    0x4
6400904d:	int3   
6400904e:	int3   
6400904f:	int3   
64009050:	mov    eax,DWORD PTR [esp+0x4]
64009054:	mov    ecx,DWORD PTR [eax+0x8]
64009057:	cmp    BYTE PTR [ecx+0x45],0x0
6400905b:	jne    0x6400906b
6400905d:	lea    ecx,[ecx+0x0]
64009060:	mov    eax,ecx
64009062:	mov    ecx,DWORD PTR [eax+0x8]
64009065:	cmp    BYTE PTR [ecx+0x45],0x0
64009069:	je     0x64009060
6400906b:	ret    
6400906c:	int3   
6400906d:	int3   
6400906e:	int3   
6400906f:	int3   
64009070:	mov    eax,DWORD PTR [esp+0x4]
64009074:	mov    ecx,DWORD PTR [eax]
64009076:	cmp    BYTE PTR [ecx+0x45],0x0
6400907a:	jne    0x6400908a
6400907c:	lea    esp,[esp+0x0]
64009080:	mov    eax,ecx
64009082:	mov    ecx,DWORD PTR [eax]
64009084:	cmp    BYTE PTR [ecx+0x45],0x0
64009088:	je     0x64009080
6400908a:	ret    
6400908b:	int3   
6400908c:	int3   
6400908d:	int3   
6400908e:	int3   
6400908f:	int3   
64009090:	push   ecx
64009091:	push   ebx
64009092:	push   esi
64009093:	mov    esi,DWORD PTR [esp+0x10]
64009097:	xor    ebx,ebx
64009099:	cmp    BYTE PTR [esi+0x45],bl
6400909c:	push   edi
6400909d:	mov    DWORD PTR [esp+0xc],ecx
640090a1:	mov    edi,esi
640090a3:	jne    0x64009108
640090a5:	push   ebp
640090a6:	lea    ebp,[ebx+0x7]
640090a9:	lea    esp,[esp+0x0]
640090b0:	mov    eax,DWORD PTR [edi+0x8]
640090b3:	mov    ecx,DWORD PTR [esp+0x10]
640090b7:	push   eax
640090b8:	call   0x64009090
640090bd:	cmp    DWORD PTR [esi+0x40],0x8
640090c1:	mov    edi,DWORD PTR [edi]
640090c3:	jb     0x640090d1
640090c5:	mov    ecx,DWORD PTR [esi+0x2c]
640090c8:	push   ecx
640090c9:	call   0x64012612
640090ce:	add    esp,0x4
640090d1:	mov    DWORD PTR [esi+0x40],ebp
640090d4:	mov    DWORD PTR [esi+0x3c],ebx
640090d7:	mov    WORD PTR [esi+0x2c],bx
640090db:	cmp    DWORD PTR [esi+0x24],0x8
640090df:	jb     0x640090ed
640090e1:	mov    edx,DWORD PTR [esi+0x10]
640090e4:	push   edx
640090e5:	call   0x64012612
640090ea:	add    esp,0x4
640090ed:	mov    DWORD PTR [esi+0x24],ebp
640090f0:	mov    DWORD PTR [esi+0x20],ebx
640090f3:	push   esi
640090f4:	mov    WORD PTR [esi+0x10],bx
640090f8:	call   0x64012612
640090fd:	add    esp,0x4
64009100:	cmp    BYTE PTR [edi+0x45],bl
64009103:	mov    esi,edi
64009105:	je     0x640090b0
64009107:	pop    ebp
64009108:	pop    edi
64009109:	pop    esi
6400910a:	pop    ebx
6400910b:	pop    ecx
6400910c:	ret    0x4
6400910f:	int3   
64009110:	push   0xffffffff
64009112:	push   0x640229e8
64009117:	mov    eax,fs:0x0
6400911d:	push   eax
6400911e:	sub    esp,0x20
64009121:	push   ebx
64009122:	push   ebp
64009123:	mov    eax,ds:0x6402d09c
64009128:	xor    eax,esp
6400912a:	push   eax
6400912b:	lea    eax,[esp+0x2c]
6400912f:	mov    fs:0x0,eax
64009135:	mov    eax,DWORD PTR [esp+0x3c]
64009139:	xor    ebx,ebx
6400913b:	push   0xffffffff
6400913d:	push   ebx
6400913e:	push   eax
6400913f:	lea    ecx,[esp+0x1c]
64009143:	mov    DWORD PTR [esp+0x18],ebx
64009147:	mov    DWORD PTR [esp+0x34],0xf
6400914f:	mov    DWORD PTR [esp+0x30],ebx
64009153:	mov    BYTE PTR [esp+0x20],bl
64009157:	call   0x64001780
6400915c:	mov    eax,edi
6400915e:	mov    DWORD PTR [esp+0x34],ebx
64009162:	lea    ebp,[eax+0x1]
64009165:	mov    cl,BYTE PTR [eax]
64009167:	add    eax,0x1
6400916a:	cmp    cl,bl
6400916c:	jne    0x64009165
6400916e:	sub    eax,ebp
64009170:	push   eax
64009171:	push   edi
64009172:	lea    eax,[esp+0x18]
64009176:	call   0x64009250
6400917b:	push   0xffffffff
6400917d:	push   ebx
6400917e:	mov    DWORD PTR [esi+0x18],0xf
64009185:	mov    DWORD PTR [esi+0x14],ebx
64009188:	push   eax
64009189:	mov    ecx,esi
6400918b:	mov    BYTE PTR [esi+0x4],bl
6400918e:	call   0x64001780
64009193:	cmp    DWORD PTR [esp+0x28],0x10
64009198:	jb     0x640091a7
6400919a:	mov    ecx,DWORD PTR [esp+0x14]
6400919e:	push   ecx
6400919f:	call   0x64012612
640091a4:	add    esp,0x4
640091a7:	mov    eax,esi
640091a9:	mov    ecx,DWORD PTR [esp+0x2c]
640091ad:	mov    DWORD PTR fs:0x0,ecx
640091b4:	pop    ecx
640091b5:	pop    ebp
640091b6:	pop    ebx
640091b7:	add    esp,0x2c
640091ba:	ret    
640091bb:	int3   
640091bc:	int3   
640091bd:	int3   
640091be:	int3   
640091bf:	int3   
640091c0:	push   ebx
640091c1:	push   ebp
640091c2:	push   esi
640091c3:	push   edi
640091c4:	mov    edi,DWORD PTR [esp+0x14]
640091c8:	mov    esi,ecx
640091ca:	cmp    DWORD PTR [esi+0x14],edi
640091cd:	jae    0x640091d4
640091cf:	call   0x640125ce
640091d4:	mov    eax,DWORD PTR [esi+0x14]
640091d7:	mov    ebx,DWORD PTR [esp+0x18]
640091db:	sub    eax,edi
640091dd:	cmp    eax,ebx
640091df:	jae    0x640091e3
640091e1:	mov    ebx,eax
640091e3:	mov    ebp,DWORD PTR [esp+0x20]
640091e7:	cmp    ebx,ebp
640091e9:	mov    edx,ebx
640091eb:	jb     0x640091ef
640091ed:	mov    edx,ebp
640091ef:	cmp    DWORD PTR [esi+0x18],0x8
640091f3:	jb     0x640091fa
640091f5:	mov    eax,DWORD PTR [esi+0x4]
640091f8:	jmp    0x640091fd
640091fa:	lea    eax,[esi+0x4]
640091fd:	test   edx,edx
640091ff:	mov    ecx,DWORD PTR [esp+0x1c]
64009203:	lea    eax,[eax+edi*2]
64009206:	jbe    0x6400922d
64009208:	mov    si,WORD PTR [eax]
6400920b:	cmp    si,WORD PTR [ecx]
6400920e:	jne    0x6400921d
64009210:	add    eax,0x2
64009213:	add    ecx,0x2
64009216:	sub    edx,0x1
64009219:	jne    0x64009208
6400921b:	jmp    0x6400922d
6400921d:	movzx  eax,WORD PTR [eax]
64009220:	cmp    ax,WORD PTR [ecx]
64009223:	sbb    eax,eax
64009225:	and    eax,0xfffffffe
64009228:	add    eax,0x1
6400922b:	jne    0x64009242
6400922d:	cmp    ebx,ebp
6400922f:	jae    0x6400923b
64009231:	pop    edi
64009232:	pop    esi
64009233:	pop    ebp
64009234:	or     eax,0xffffffff
64009237:	pop    ebx
64009238:	ret    0x10
6400923b:	xor    eax,eax
6400923d:	cmp    ebx,ebp
6400923f:	setne  al
64009242:	pop    edi
64009243:	pop    esi
64009244:	pop    ebp
64009245:	pop    ebx
64009246:	ret    0x10
64009249:	int3   
6400924a:	int3   
6400924b:	int3   
6400924c:	int3   
6400924d:	int3   
6400924e:	int3   
6400924f:	int3   
64009250:	mov    ecx,DWORD PTR [esp+0x4]
64009254:	push   ebx
64009255:	push   ebp
64009256:	mov    ebp,DWORD PTR [esp+0x10]
6400925a:	push   esi
6400925b:	mov    esi,eax
6400925d:	mov    edx,DWORD PTR [esi+0x18]
64009260:	cmp    edx,0x10
64009263:	push   edi
64009264:	lea    ebx,[esi+0x4]
64009267:	jb     0x6400926d
64009269:	mov    eax,DWORD PTR [ebx]
6400926b:	jmp    0x6400926f
6400926d:	mov    eax,ebx
6400926f:	cmp    ecx,eax
64009271:	jb     0x640092a0
64009273:	cmp    edx,0x10
64009276:	jb     0x6400927c
64009278:	mov    eax,DWORD PTR [ebx]
6400927a:	jmp    0x6400927e
6400927c:	mov    eax,ebx
6400927e:	mov    edi,DWORD PTR [esi+0x14]
64009281:	add    edi,eax
64009283:	cmp    edi,ecx
64009285:	jbe    0x640092a0
64009287:	cmp    edx,0x10
6400928a:	jb     0x6400928e
6400928c:	mov    ebx,DWORD PTR [ebx]
6400928e:	sub    ecx,ebx
64009290:	push   ecx
64009291:	push   esi
64009292:	mov    eax,ebp
64009294:	call   0x640019d0
64009299:	pop    edi
6400929a:	pop    esi
6400929b:	pop    ebp
6400929c:	pop    ebx
6400929d:	ret    0x8
640092a0:	mov    eax,DWORD PTR [esi+0x14]
640092a3:	or     ecx,0xffffffff
640092a6:	sub    ecx,eax
640092a8:	cmp    ecx,ebp
640092aa:	jbe    0x640092b3
640092ac:	lea    edx,[eax+ebp*1]
640092af:	cmp    edx,eax
640092b1:	jae    0x640092b8
640092b3:	call   0x6401258f
640092b8:	test   ebp,ebp
640092ba:	jbe    0x64009330
640092bc:	mov    edi,DWORD PTR [esi+0x14]
640092bf:	add    edi,ebp
640092c1:	cmp    edi,0xfffffffe
640092c4:	jbe    0x640092cb
640092c6:	call   0x6401258f
640092cb:	mov    eax,DWORD PTR [esi+0x18]
640092ce:	cmp    eax,edi
640092d0:	jae    0x640092ee
640092d2:	mov    eax,DWORD PTR [esi+0x14]
640092d5:	push   eax
640092d6:	push   edi
640092d7:	mov    ecx,esi
640092d9:	call   0x64001b60
640092de:	test   edi,edi
640092e0:	jbe    0x64009330
640092e2:	mov    eax,DWORD PTR [esi+0x18]
640092e5:	cmp    eax,0x10
640092e8:	jb     0x64009308
640092ea:	mov    edx,DWORD PTR [ebx]
640092ec:	jmp    0x6400930a
640092ee:	test   edi,edi
640092f0:	jne    0x640092e0
640092f2:	cmp    eax,0x10
640092f5:	mov    DWORD PTR [esi+0x14],edi
640092f8:	jb     0x640092fc
640092fa:	mov    ebx,DWORD PTR [ebx]
640092fc:	pop    edi
640092fd:	mov    eax,esi
640092ff:	pop    esi
64009300:	pop    ebp
64009301:	mov    BYTE PTR [ebx],0x0
64009304:	pop    ebx
64009305:	ret    0x8
64009308:	mov    edx,ebx
6400930a:	mov    ecx,DWORD PTR [esi+0x14]
6400930d:	push   ebp
6400930e:	mov    ebp,DWORD PTR [esp+0x18]
64009312:	sub    eax,ecx
64009314:	push   ebp
64009315:	push   eax
64009316:	add    ecx,edx
64009318:	push   ecx
64009319:	call   0x640127c8
6400931e:	add    esp,0x10
64009321:	cmp    DWORD PTR [esi+0x18],0x10
64009325:	mov    DWORD PTR [esi+0x14],edi
64009328:	jb     0x6400932c
6400932a:	mov    ebx,DWORD PTR [ebx]
6400932c:	mov    BYTE PTR [ebx+edi*1],0x0
64009330:	pop    edi
64009331:	mov    eax,esi
64009333:	pop    esi
64009334:	pop    ebp
64009335:	pop    ebx
64009336:	ret    0x8
64009339:	int3   
6400933a:	int3   
6400933b:	int3   
6400933c:	int3   
6400933d:	int3   
6400933e:	int3   
6400933f:	int3   
64009340:	push   ebp
64009341:	mov    ebp,DWORD PTR [esp+0x14]
64009345:	push   esi
64009346:	mov    esi,DWORD PTR [esp+0x10]
6400934a:	push   edi
6400934b:	mov    edi,DWORD PTR [esp+0x10]
6400934f:	nop
64009350:	test   edi,edi
64009352:	je     0x6400935a
64009354:	cmp    edi,DWORD PTR [esp+0x18]
64009358:	je     0x6400935f
6400935a:	call   0x640129c8
6400935f:	cmp    esi,ebp
64009361:	je     0x640093bb
64009363:	add    DWORD PTR [ebx],0x1
64009366:	test   edi,edi
64009368:	jne    0x6400936f
6400936a:	call   0x640129c8
6400936f:	cmp    BYTE PTR [esi+0x29],0x0
64009373:	je     0x6400937c
64009375:	call   0x640129c8
6400937a:	jmp    0x64009350
6400937c:	mov    ecx,DWORD PTR [esi+0x8]
6400937f:	cmp    BYTE PTR [ecx+0x29],0x0
64009383:	jne    0x6400939e
64009385:	mov    eax,DWORD PTR [ecx]
64009387:	cmp    BYTE PTR [eax+0x29],0x0
6400938b:	jne    0x6400939a
6400938d:	lea    ecx,[ecx+0x0]
64009390:	mov    ecx,eax
64009392:	mov    eax,DWORD PTR [ecx]
64009394:	cmp    BYTE PTR [eax+0x29],0x0
64009398:	je     0x64009390
6400939a:	mov    esi,ecx
6400939c:	jmp    0x64009350
6400939e:	mov    eax,DWORD PTR [esi+0x4]
640093a1:	cmp    BYTE PTR [eax+0x29],0x0
640093a5:	jne    0x640093b7
640093a7:	cmp    esi,DWORD PTR [eax+0x8]
640093aa:	jne    0x640093b7
640093ac:	mov    esi,eax
640093ae:	mov    eax,DWORD PTR [eax+0x4]
640093b1:	cmp    BYTE PTR [eax+0x29],0x0
640093b5:	je     0x640093a7
640093b7:	mov    esi,eax
640093b9:	jmp    0x64009350
640093bb:	pop    edi
640093bc:	pop    esi
640093bd:	pop    ebp
640093be:	ret    
640093bf:	int3   
640093c0:	push   esi
640093c1:	mov    esi,ecx
640093c3:	call   0x6400ccf0
640093c8:	call   eax
640093ca:	mov    DWORD PTR [esi],eax
640093cc:	mov    eax,esi
640093ce:	pop    esi
640093cf:	ret    
640093d0:	mov    eax,DWORD PTR [ecx]
640093d2:	push   eax
640093d3:	call   0x6400cdd0
640093d8:	call   eax
640093da:	ret    
640093db:	int3   
640093dc:	int3   
640093dd:	int3   
640093de:	int3   
640093df:	int3   
640093e0:	push   ebp
640093e1:	mov    ebp,esp
640093e3:	and    esp,0xfffffff8
640093e6:	push   0xffffffff
640093e8:	push   0x640239e0
640093ed:	mov    eax,fs:0x0
640093f3:	push   eax
640093f4:	sub    esp,0x68
640093f7:	mov    eax,ds:0x6402d09c
640093fc:	xor    eax,esp
640093fe:	mov    DWORD PTR [esp+0x60],eax
64009402:	push   ebx
64009403:	push   esi
64009404:	push   edi
64009405:	mov    eax,ds:0x6402d09c
6400940a:	xor    eax,esp
6400940c:	push   eax
6400940d:	lea    eax,[esp+0x78]
64009411:	mov    fs:0x0,eax
64009417:	mov    eax,DWORD PTR [ebp+0x14]
6400941a:	mov    ebx,DWORD PTR [ebp+0xc]
6400941d:	mov    DWORD PTR [esp+0x1c],ecx
64009421:	mov    DWORD PTR [esp+0x18],eax
64009425:	call   DWORD PTR ds:0x6402505c
6400942b:	lea    ecx,[esp+0x44]
6400942f:	push   ecx
64009430:	mov    DWORD PTR [esp+0x24],eax
64009434:	call   DWORD PTR ds:0x640251dc
6400943a:	xor    edi,edi
6400943c:	mov    DWORD PTR [esp+0x6c],0xf
64009444:	mov    DWORD PTR [esp+0x68],edi
64009448:	mov    BYTE PTR [esp+0x58],0x0
6400944d:	mov    ecx,DWORD PTR [ebp+0x10]
64009450:	mov    eax,0x8d3dcb09
64009455:	mul    ecx
64009457:	mov    esi,edx
64009459:	shr    esi,0x8
6400945c:	lea    eax,[esi+0x1]
6400945f:	cmp    eax,edi
64009461:	mov    DWORD PTR [esp+0x80],edi
64009468:	mov    BYTE PTR [esp+0x13],0x1
6400946d:	je     0x64009533
64009473:	mov    edx,0x1d0
64009478:	sub    edx,ebx
6400947a:	mov    DWORD PTR [esp+0x14],ebx
6400947e:	mov    DWORD PTR [esp+0x24],edx
64009482:	mov    eax,DWORD PTR [esp+0x14]
64009486:	add    eax,edx
64009488:	cmp    eax,ecx
6400948a:	jb     0x64009586
64009490:	mov    eax,esi
64009492:	imul   eax,eax,0x1d0
64009498:	mov    ebx,ecx
6400949a:	sub    ebx,eax
6400949c:	test   ebx,ebx
6400949e:	je     0x6400951b
640094a0:	or     ecx,0xffffffff
640094a3:	cmp    DWORD PTR [ebp+0x18],ecx
640094a6:	je     0x640094bf
640094a8:	call   DWORD PTR ds:0x6402505c
640094ae:	sub    eax,DWORD PTR [esp+0x20]
640094b2:	mov    ecx,DWORD PTR [ebp+0x18]
640094b5:	cmp    eax,ecx
640094b7:	ja     0x64009590
640094bd:	sub    ecx,eax
640094bf:	mov    edx,DWORD PTR [esp+0x44]
640094c3:	sub    esp,0x10
640094c6:	mov    eax,esp
640094c8:	mov    DWORD PTR [eax],edx
640094ca:	mov    edx,DWORD PTR [esp+0x58]
640094ce:	mov    DWORD PTR [eax+0x4],edx
640094d1:	mov    edx,DWORD PTR [esp+0x5c]
640094d5:	mov    DWORD PTR [eax+0x8],edx
640094d8:	mov    edx,DWORD PTR [esp+0x60]
640094dc:	mov    DWORD PTR [eax+0xc],edx
640094df:	mov    edx,DWORD PTR [esp+0x24]
640094e3:	test   edi,edi
640094e5:	setne  al
640094e8:	cmp    edi,esi
640094ea:	push   eax
640094eb:	mov    eax,DWORD PTR [ebp+0x8]
640094ee:	push   ecx
640094ef:	setb   cl
640094f2:	push   ecx
640094f3:	mov    ecx,DWORD PTR [esp+0x38]
640094f7:	push   edi
640094f8:	push   ebx
640094f9:	push   edx
640094fa:	push   eax
640094fb:	push   ecx
640094fc:	lea    edx,[esp+0x43]
64009500:	lea    ecx,[esp+0x84]
64009507:	call   0x64009720
6400950c:	test   al,al
6400950e:	je     0x640095ab
64009514:	mov    ecx,DWORD PTR [ebp+0x10]
64009517:	mov    edx,DWORD PTR [esp+0x24]
6400951b:	add    DWORD PTR [esp+0x14],0x1d0
64009523:	add    edi,0x1
64009526:	lea    eax,[esi+0x1]
64009529:	cmp    edi,eax
6400952b:	jne    0x64009482
64009531:	xor    edi,edi
64009533:	mov    esi,DWORD PTR [esp+0x18]
64009537:	push   edi
64009538:	lea    ecx,[esp+0x58]
6400953c:	push   ecx
6400953d:	or     eax,0xffffffff
64009540:	call   0x640019d0
64009545:	cmp    BYTE PTR [esp+0x13],0x0
6400954a:	je     0x640096db
64009550:	mov    DWORD PTR [esp+0x14],0xfffffffe
64009558:	jmp    0x64009560
6400955a:	lea    ebx,[ebx+0x0]
64009560:	mov    esi,0xf
64009565:	mov    DWORD PTR [esp+0x40],esi
64009569:	mov    DWORD PTR [esp+0x3c],edi
6400956d:	mov    BYTE PTR [esp+0x2c],0x0
64009572:	mov    ebx,DWORD PTR [ebp+0x18]
64009575:	cmp    ebx,0xffffffff
64009578:	mov    BYTE PTR [esp+0x80],0x1
64009580:	jne    0x640095c6
64009582:	or     ecx,ebx
64009584:	jmp    0x640095dc
64009586:	mov    ebx,0x1d0
6400958b:	jmp    0x640094a0
64009590:	cmp    DWORD PTR [esp+0x6c],0x10
64009595:	jb     0x640095a4
64009597:	mov    edx,DWORD PTR [esp+0x58]
6400959b:	push   edx
6400959c:	call   0x64012612
640095a1:	add    esp,0x4
640095a4:	xor    al,al
640095a6:	jmp    0x640096f1
640095ab:	cmp    DWORD PTR [esp+0x6c],0x10
640095b0:	jb     0x640095a4
640095b2:	mov    eax,DWORD PTR [esp+0x58]
640095b6:	push   eax
640095b7:	call   0x64012612
640095bc:	add    esp,0x4
640095bf:	xor    al,al
640095c1:	jmp    0x640096f1
640095c6:	call   DWORD PTR ds:0x6402505c
640095cc:	sub    eax,DWORD PTR [esp+0x20]
640095d0:	cmp    eax,ebx
640095d2:	ja     0x6400966b
640095d8:	mov    ecx,ebx
640095da:	sub    ecx,eax
640095dc:	mov    edx,DWORD PTR [esp+0x44]
640095e0:	sub    esp,0x10
640095e3:	mov    eax,esp
640095e5:	mov    DWORD PTR [eax],edx
640095e7:	mov    edx,DWORD PTR [esp+0x58]
640095eb:	mov    DWORD PTR [eax+0x4],edx
640095ee:	mov    edx,DWORD PTR [esp+0x5c]
640095f2:	push   0x1
640095f4:	push   ecx
640095f5:	mov    ecx,DWORD PTR [ebp+0x8]
640095f8:	mov    DWORD PTR [eax+0x8],edx
640095fb:	mov    edx,DWORD PTR [esp+0x68]
640095ff:	push   edi
64009600:	mov    DWORD PTR [eax+0xc],edx
64009603:	mov    eax,DWORD PTR [esp+0x30]
64009607:	mov    edx,DWORD PTR [esp+0x38]
6400960b:	push   eax
6400960c:	push   edi
6400960d:	push   edi
6400960e:	push   ecx
6400960f:	push   edx
64009610:	lea    edx,[esp+0x43]
64009614:	lea    ecx,[esp+0x58]
64009618:	call   0x64009720
6400961d:	test   al,al
6400961f:	je     0x64009699
64009621:	cmp    DWORD PTR [esp+0x3c],edi
64009625:	je     0x640096c7
6400962b:	mov    esi,DWORD PTR [esp+0x18]
6400962f:	push   edi
64009630:	lea    eax,[esp+0x2c]
64009634:	push   eax
64009635:	or     eax,0xffffffff
64009638:	call   0x640019d0
6400963d:	mov    BYTE PTR [esp+0x80],0x0
64009645:	cmp    DWORD PTR [esp+0x40],0x10
6400964a:	jb     0x64009659
6400964c:	mov    ecx,DWORD PTR [esp+0x2c]
64009650:	push   ecx
64009651:	call   0x64012612
64009656:	add    esp,0x4
64009659:	sub    DWORD PTR [esp+0x14],0x1
6400965e:	cmp    BYTE PTR [esp+0x13],0x0
64009663:	jne    0x64009560
64009669:	jmp    0x640096db
6400966b:	mov    ebx,0x10
64009670:	cmp    DWORD PTR [esp+0x40],ebx
64009674:	jb     0x64009683
64009676:	mov    edx,DWORD PTR [esp+0x2c]
6400967a:	push   edx
6400967b:	call   0x64012612
64009680:	add    esp,0x4
64009683:	cmp    DWORD PTR [esp+0x6c],ebx
64009687:	mov    DWORD PTR [esp+0x40],esi
6400968b:	mov    DWORD PTR [esp+0x3c],edi
6400968f:	mov    BYTE PTR [esp+0x2c],0x0
64009694:	jmp    0x640095b0
64009699:	mov    ebx,0x10
6400969e:	cmp    DWORD PTR [esp+0x40],ebx
640096a2:	jb     0x640096b1
640096a4:	mov    ecx,DWORD PTR [esp+0x2c]
640096a8:	push   ecx
640096a9:	call   0x64012612
640096ae:	add    esp,0x4
640096b1:	cmp    DWORD PTR [esp+0x6c],ebx
640096b5:	mov    DWORD PTR [esp+0x40],esi
640096b9:	mov    DWORD PTR [esp+0x3c],edi
640096bd:	mov    BYTE PTR [esp+0x2c],0x0
640096c2:	jmp    0x64009595
640096c7:	cmp    DWORD PTR [esp+0x40],0x10
640096cc:	jb     0x640096db
640096ce:	mov    eax,DWORD PTR [esp+0x2c]
640096d2:	push   eax
640096d3:	call   0x64012612
640096d8:	add    esp,0x4
640096db:	cmp    DWORD PTR [esp+0x6c],0x10
640096e0:	jb     0x640096ef
640096e2:	mov    ecx,DWORD PTR [esp+0x58]
640096e6:	push   ecx
640096e7:	call   0x64012612
640096ec:	add    esp,0x4
640096ef:	mov    al,0x1
640096f1:	mov    ecx,DWORD PTR [esp+0x78]
640096f5:	mov    DWORD PTR fs:0x0,ecx
640096fc:	pop    ecx
640096fd:	pop    edi
640096fe:	pop    esi
640096ff:	pop    ebx
64009700:	mov    ecx,DWORD PTR [esp+0x60]
64009704:	xor    ecx,esp
64009706:	call   0x64012e6c
6400970b:	mov    esp,ebp
6400970d:	pop    ebp
6400970e:	ret    0x14
64009711:	int3   
64009712:	int3   
64009713:	int3   
64009714:	int3   
64009715:	int3   
64009716:	int3   
64009717:	int3   
64009718:	int3   
64009719:	int3   
6400971a:	int3   
6400971b:	int3   
6400971c:	int3   
6400971d:	int3   
6400971e:	int3   
6400971f:	int3   
64009720:	push   0xffffffff
64009722:	push   0x6402399c
64009727:	mov    eax,fs:0x0
6400972d:	push   eax
6400972e:	mov    eax,0x10074
64009733:	call   0x64018760
64009738:	mov    eax,ds:0x6402d09c
6400973d:	xor    eax,esp
6400973f:	mov    DWORD PTR [esp+0x10070],eax
64009746:	push   ebx
64009747:	push   ebp
64009748:	push   esi
64009749:	push   edi
6400974a:	mov    eax,ds:0x6402d09c
6400974f:	xor    eax,esp
64009751:	push   eax
64009752:	lea    eax,[esp+0x10088]
64009759:	mov    fs:0x0,eax
6400975f:	mov    eax,DWORD PTR [esp+0x10098]
64009766:	mov    esi,DWORD PTR [esp+0x100a0]
6400976d:	mov    ebp,DWORD PTR ds:0x640251c0
64009773:	mov    DWORD PTR [esp+0x18],eax
64009777:	mov    eax,DWORD PTR [esp+0x100b8]
6400977e:	mov    DWORD PTR [esp+0x2c],ecx
64009782:	mov    ecx,DWORD PTR [esp+0x100bc]
64009789:	mov    DWORD PTR [esp+0x28],edx
6400978d:	mov    edx,DWORD PTR [esp+0x100c0]
64009794:	mov    DWORD PTR [esp+0x54],eax
64009798:	mov    eax,DWORD PTR [esp+0x100c4]
6400979f:	xor    ebx,ebx
640097a1:	mov    DWORD PTR [esp+0x1c],esi
640097a5:	mov    DWORD PTR [esp+0x58],ecx
640097a9:	mov    DWORD PTR [esp+0x5c],edx
640097ad:	mov    DWORD PTR [esp+0x60],eax
640097b1:	mov    BYTE PTR [esp+0x17],bl
640097b5:	xor    edi,edi
640097b7:	jmp    0x640097c0
640097b9:	lea    esp,[esp+0x0]
640097c0:	mov    DWORD PTR [esp+0x50],0xf
640097c8:	mov    DWORD PTR [esp+0x4c],ebx
640097cc:	mov    BYTE PTR [esp+0x3c],bl
640097d0:	mov    DWORD PTR [esp+0x10090],ebx
640097d7:	mov    edx,DWORD PTR [esp+0x58]
640097db:	mov    eax,DWORD PTR [esp+0x5c]
640097df:	mov    ecx,DWORD PTR [esp+0x54]
640097e3:	mov    DWORD PTR [esp+0x70],eax
640097e7:	mov    eax,DWORD PTR [esp+0x100a8]
640097ee:	mov    DWORD PTR [esp+0x68],ecx
640097f2:	mov    ecx,DWORD PTR [esp+0x60]
640097f6:	mov    DWORD PTR [esp+0x6c],edx
640097fa:	mov    dl,BYTE PTR [esp+0x100ac]
64009801:	push   eax
64009802:	mov    DWORD PTR [esp+0x78],ecx
64009806:	mov    DWORD PTR [esp+0x7c],eax
6400980a:	mov    DWORD PTR [esp+0x80],edi
64009811:	mov    BYTE PTR [esp+0x84],dl
64009818:	call   ebp
6400981a:	mov    DWORD PTR [esp+0x78],eax
6400981e:	mov    eax,DWORD PTR [esp+0x7c]
64009822:	push   eax
64009823:	call   ebp
64009825:	push   0x19
64009827:	lea    ecx,[esp+0x6c]
6400982b:	mov    DWORD PTR [esp+0x80],eax
64009832:	push   ecx
64009833:	lea    eax,[esp+0x40]
64009837:	call   0x64009250
6400983c:	cmp    esi,ebx
6400983e:	je     0x64009852
64009840:	mov    edx,DWORD PTR [esp+0x100a4]
64009847:	push   edx
64009848:	push   esi
64009849:	lea    eax,[esp+0x40]
6400984d:	call   0x64009250
64009852:	cmp    DWORD PTR [esp+0x50],0x10
64009857:	mov    eax,DWORD PTR [esp+0x3c]
6400985b:	jae    0x64009861
6400985d:	lea    eax,[esp+0x3c]
64009861:	mov    ecx,DWORD PTR [esp+0x4c]
64009865:	push   ecx
64009866:	push   eax
64009867:	lea    ecx,[esp+0x2c]
6400986b:	lea    ebx,[esp+0x38]
6400986f:	call   0x6400c9e0
64009874:	mov    edx,DWORD PTR [eax]
64009876:	mov    esi,edx
64009878:	mov    DWORD PTR [eax],0x0
6400987e:	mov    DWORD PTR [esp+0x28],esi
64009882:	mov    BYTE PTR [esp+0x10098],0x1
6400988a:	mov    eax,DWORD PTR [esp+0x38]
6400988e:	push   eax
6400988f:	call   0x64012612
64009894:	add    esp,0xc
64009897:	lea    ecx,[esp+0x34]
6400989b:	push   0x0
6400989d:	push   ecx
6400989e:	mov    DWORD PTR [esp+0x3c],0x0
640098a6:	call   0x6400de70
640098ab:	call   eax
640098ad:	test   eax,eax
640098af:	je     0x6400993e
640098b5:	mov    eax,DWORD PTR [esp+0x100b0]
640098bc:	cmp    eax,0x1388
640098c1:	jb     0x640098c8
640098c3:	mov    eax,0x1388
640098c8:	mov    ecx,DWORD PTR [esp+0x1009c]
640098cf:	push   eax
640098d0:	mov    eax,DWORD PTR [esp+0x28]
640098d4:	push   0xffff
640098d9:	lea    edx,[esp+0x8c]
640098e0:	push   edx
640098e1:	mov    edx,DWORD PTR [esp+0x24]
640098e5:	push   0x0
640098e7:	push   eax
640098e8:	mov    eax,DWORD PTR [edx]
640098ea:	push   esi
640098eb:	push   ecx
640098ec:	push   eax
640098ed:	call   0x6400cc10
640098f2:	call   eax
640098f4:	mov    ebx,eax
640098f6:	test   ebx,ebx
640098f8:	jne    0x64009941
640098fa:	push   esi
640098fb:	call   0x64012612
64009900:	add    esp,0x4
64009903:	cmp    BYTE PTR [esp+0x100b4],bl
6400990a:	mov    DWORD PTR [esp+0x10090],0xffffffff
64009915:	je     0x64009963
64009917:	cmp    DWORD PTR [esp+0x50],0x10
6400991c:	jb     0x6400992b
6400991e:	mov    ecx,DWORD PTR [esp+0x3c]
64009922:	push   ecx
64009923:	call   0x64012612
64009928:	add    esp,0x4
6400992b:	add    edi,0x1
6400992e:	cmp    edi,0x5
64009931:	je     0x64009977
64009933:	mov    esi,DWORD PTR [esp+0x1c]
64009937:	xor    ebx,ebx
64009939:	jmp    0x640097c0
6400993e:	or     ebx,0xffffffff
64009941:	push   esi
64009942:	call   0x64012612
64009947:	add    esp,0x4
6400994a:	mov    DWORD PTR [esp+0x10090],0xffffffff
64009955:	cmp    DWORD PTR [esp+0x50],0x10
6400995a:	jb     0x64009977
6400995c:	mov    edx,DWORD PTR [esp+0x3c]
64009960:	push   edx
64009961:	jmp    0x6400996f
64009963:	cmp    DWORD PTR [esp+0x50],0x10
64009968:	jb     0x64009977
6400996a:	mov    eax,DWORD PTR [esp+0x3c]
6400996e:	push   eax
6400996f:	call   0x64012612
64009974:	add    esp,0x4
64009977:	test   ebx,ebx
64009979:	je     0x64009b1f
6400997f:	mov    ax,WORD PTR [esp+0x90]
64009987:	test   ax,ax
6400998a:	je     0x64009b13
64009990:	lea    ecx,[esp+0x24]
64009994:	push   ecx
64009995:	lea    edx,[esp+0xa4]
6400999c:	movzx  ebx,ax
6400999f:	push   edx
640099a0:	lea    edi,[esp+0x24]
640099a4:	call   0x6400cb10
640099a9:	mov    ecx,DWORD PTR [eax]
640099ab:	mov    ebp,ecx
640099ad:	xor    ebx,ebx
640099af:	mov    DWORD PTR [eax],ebx
640099b1:	mov    DWORD PTR [esp+0x28],ebp
640099b5:	mov    DWORD PTR [esp+0x10098],0x2
640099c0:	mov    edx,DWORD PTR [esp+0x24]
640099c4:	push   edx
640099c5:	call   0x64012612
640099ca:	add    esp,0xc
640099cd:	cmp    ebp,ebx
640099cf:	je     0x64009b02
640099d5:	mov    eax,DWORD PTR [ebp+0x10]
640099d8:	push   eax
640099d9:	call   DWORD PTR ds:0x640251c4
640099df:	cmp    BYTE PTR [esp+0x100ac],bl
640099e6:	mov    DWORD PTR [esp+0x18],eax
640099ea:	mov    DWORD PTR [ebp+0x10],eax
640099ed:	jne    0x640099ff
640099ef:	cmp    DWORD PTR [esp+0x100a8],ebx
640099f6:	jle    0x640099ff
640099f8:	mov    DWORD PTR [esp+0x100a8],ebx
640099ff:	mov    ecx,0x10
64009a04:	lea    edx,[esp+0x54]
64009a08:	mov    esi,ebp
64009a0a:	lea    ebx,[ebx+0x0]
64009a10:	mov    eax,DWORD PTR [esi]
64009a12:	cmp    eax,DWORD PTR [edx]
64009a14:	jne    0x64009a28
64009a16:	sub    ecx,0x4
64009a19:	add    edx,0x4
64009a1c:	add    esi,0x4
64009a1f:	cmp    ecx,0x4
64009a22:	jae    0x64009a10
64009a24:	cmp    ecx,ebx
64009a26:	je     0x64009a85
64009a28:	movzx  edi,BYTE PTR [esi]
64009a2b:	movzx  eax,BYTE PTR [edx]
64009a2e:	sub    edi,eax
64009a30:	jne    0x64009a77
64009a32:	sub    ecx,0x1
64009a35:	add    edx,0x1
64009a38:	add    esi,0x1
64009a3b:	cmp    ecx,ebx
64009a3d:	je     0x64009a85
64009a3f:	movzx  edi,BYTE PTR [esi]
64009a42:	movzx  eax,BYTE PTR [edx]
64009a45:	sub    edi,eax
64009a47:	jne    0x64009a77
64009a49:	sub    ecx,0x1
64009a4c:	add    edx,0x1
64009a4f:	add    esi,0x1
64009a52:	cmp    ecx,ebx
64009a54:	je     0x64009a85
64009a56:	movzx  edi,BYTE PTR [esi]
64009a59:	movzx  eax,BYTE PTR [edx]
64009a5c:	sub    edi,eax
64009a5e:	jne    0x64009a77
64009a60:	sub    ecx,0x1
64009a63:	add    edx,0x1
64009a66:	add    esi,0x1
64009a69:	cmp    ecx,ebx
64009a6b:	je     0x64009a85
64009a6d:	movzx  edi,BYTE PTR [esi]
64009a70:	movzx  ecx,BYTE PTR [edx]
64009a73:	sub    edi,ecx
64009a75:	je     0x64009a85
64009a77:	cmp    edi,ebx
64009a79:	mov    ecx,0x1
64009a7e:	jg     0x64009a87
64009a80:	or     ecx,0xffffffff
64009a83:	jmp    0x64009a87
64009a85:	xor    ecx,ecx
64009a87:	cmp    ecx,ebx
64009a89:	jne    0x64009b02
64009a8b:	mov    edx,DWORD PTR [esp+0x100a8]
64009a92:	cmp    DWORD PTR [esp+0x18],edx
64009a96:	jne    0x64009b02
64009a98:	mov    al,BYTE PTR [ebp+0x14]
64009a9b:	mov    ecx,DWORD PTR [esp+0x28]
64009a9f:	mov    BYTE PTR [ecx],al
64009aa1:	mov    eax,DWORD PTR [esp+0x24]
64009aa5:	add    eax,0xffffffeb
64009aa8:	push   eax
64009aa9:	lea    edx,[ebp+0x15]
64009aac:	push   edx
64009aad:	lea    ecx,[esp+0x40]
64009ab1:	mov    DWORD PTR [esp+0x58],0xf
64009ab9:	mov    DWORD PTR [esp+0x54],ebx
64009abd:	mov    BYTE PTR [esp+0x44],bl
64009ac1:	call   0x64001860
64009ac6:	mov    ecx,DWORD PTR [esp+0x2c]
64009aca:	push   0xffffffff
64009acc:	push   ebx
64009acd:	lea    eax,[esp+0x40]
64009ad1:	push   eax
64009ad2:	mov    BYTE PTR [esp+0x1009c],0x3
64009ada:	call   0x64001780
64009adf:	cmp    DWORD PTR [esp+0x50],0x10
64009ae4:	jb     0x64009af3
64009ae6:	mov    ecx,DWORD PTR [esp+0x3c]
64009aea:	push   ecx
64009aeb:	call   0x64012612
64009af0:	add    esp,0x4
64009af3:	push   ebp
64009af4:	mov    bl,0x1
64009af6:	call   0x64012612
64009afb:	add    esp,0x4
64009afe:	mov    al,bl
64009b00:	jmp    0x64009b23
64009b02:	mov    bl,BYTE PTR [esp+0x17]
64009b06:	push   ebp
64009b07:	call   0x64012612
64009b0c:	add    esp,0x4
64009b0f:	mov    al,bl
64009b11:	jmp    0x64009b23
64009b13:	cmp    BYTE PTR [esp+0x100ac],0x0
64009b1b:	mov    al,0x1
64009b1d:	jne    0x64009b23
64009b1f:	mov    al,BYTE PTR [esp+0x17]
64009b23:	mov    ecx,DWORD PTR [esp+0x10088]
64009b2a:	mov    DWORD PTR fs:0x0,ecx
64009b31:	pop    ecx
64009b32:	pop    edi
64009b33:	pop    esi
64009b34:	pop    ebp
64009b35:	pop    ebx
64009b36:	mov    ecx,DWORD PTR [esp+0x10070]
64009b3d:	xor    ecx,esp
64009b3f:	call   0x64012e6c
64009b44:	add    esp,0x10080
64009b4a:	ret    0x30
64009b4d:	int3   
64009b4e:	int3   
64009b4f:	int3   
64009b50:	push   0xffffffff
64009b52:	push   0x6402288b
64009b57:	mov    eax,fs:0x0
64009b5d:	push   eax
64009b5e:	push   ecx
64009b5f:	push   esi
64009b60:	mov    eax,ds:0x6402d09c
64009b65:	xor    eax,esp
64009b67:	push   eax
64009b68:	lea    eax,[esp+0xc]
64009b6c:	mov    fs:0x0,eax
64009b72:	push   0xc
64009b74:	call   0x640129f1
64009b79:	mov    esi,eax
64009b7b:	add    esp,0x4
64009b7e:	mov    DWORD PTR [esp+0x8],esi
64009b82:	test   esi,esi
64009b84:	mov    DWORD PTR [esp+0x14],0x0
64009b8c:	je     0x64009baa
64009b8e:	mov    eax,DWORD PTR [esp+0x1c]
64009b92:	push   eax
64009b93:	mov    DWORD PTR [esi+0x4],0x0
64009b9a:	mov    DWORD PTR [esi+0x8],0x1
64009ba1:	call   0x6401ee30
64009ba6:	mov    DWORD PTR [esi],eax
64009ba8:	jmp    0x64009bac
64009baa:	xor    esi,esi
64009bac:	test   esi,esi
64009bae:	mov    DWORD PTR [esp+0x14],0xffffffff
64009bb6:	mov    DWORD PTR [ebx],esi
64009bb8:	jne    0x64009bc4
64009bba:	push   0x8007000e
64009bbf:	call   0x6401efc0
64009bc4:	mov    eax,ebx
64009bc6:	mov    ecx,DWORD PTR [esp+0xc]
64009bca:	mov    DWORD PTR fs:0x0,ecx
64009bd1:	pop    ecx
64009bd2:	pop    esi
64009bd3:	add    esp,0x10
64009bd6:	ret    0x4
64009bd9:	int3   
64009bda:	int3   
64009bdb:	int3   
64009bdc:	int3   
64009bdd:	int3   
64009bde:	int3   
64009bdf:	int3   
64009be0:	push   0xffffffff
64009be2:	push   0x6402285b
64009be7:	mov    eax,fs:0x0
64009bed:	push   eax
64009bee:	push   ebp
64009bef:	push   esi
64009bf0:	mov    eax,ds:0x6402d09c
64009bf5:	xor    eax,esp
64009bf7:	push   eax
64009bf8:	lea    eax,[esp+0xc]
64009bfc:	mov    fs:0x0,eax
64009c02:	mov    ebp,DWORD PTR [esp+0x1c]
64009c06:	push   0xc
64009c08:	call   0x640129f1
64009c0d:	mov    esi,eax
64009c0f:	add    esp,0x4
64009c12:	mov    DWORD PTR [esp+0x1c],esi
64009c16:	test   esi,esi
64009c18:	mov    DWORD PTR [esp+0x14],0x0
64009c20:	je     0x64009c4d
64009c22:	push   edi
64009c23:	mov    DWORD PTR [esi+0x4],0x0
64009c2a:	mov    DWORD PTR [esi+0x8],0x1
64009c31:	call   DWORD PTR ds:0x6402518c
64009c37:	test   eax,eax
64009c39:	mov    DWORD PTR [esi],eax
64009c3b:	jne    0x64009c4f
64009c3d:	test   edi,edi
64009c3f:	je     0x64009c4f
64009c41:	push   0x8007000e
64009c46:	call   0x6401efc0
64009c4b:	jmp    0x64009c4f
64009c4d:	xor    esi,esi
64009c4f:	test   esi,esi
64009c51:	mov    DWORD PTR [esp+0x14],0xffffffff
64009c59:	mov    DWORD PTR [ebp+0x0],esi
64009c5c:	jne    0x64009c68
64009c5e:	push   0x8007000e
64009c63:	call   0x6401efc0
64009c68:	mov    eax,ebp
64009c6a:	mov    ecx,DWORD PTR [esp+0xc]
64009c6e:	mov    DWORD PTR fs:0x0,ecx
64009c75:	pop    ecx
64009c76:	pop    esi
64009c77:	pop    ebp
64009c78:	add    esp,0xc
64009c7b:	ret    0x4
64009c7e:	int3   
64009c7f:	int3   
64009c80:	push   esi
64009c81:	mov    esi,DWORD PTR [edi]
64009c83:	test   esi,esi
64009c85:	je     0x64009cc5
64009c87:	lea    eax,[esi+0x8]
64009c8a:	push   eax
64009c8b:	call   DWORD PTR ds:0x64025094
64009c91:	test   eax,eax
64009c93:	jne    0x64009cbf
64009c95:	test   esi,esi
64009c97:	je     0x64009cbf
64009c99:	mov    eax,DWORD PTR [esi]
64009c9b:	test   eax,eax
64009c9d:	je     0x64009ca6
64009c9f:	push   eax
64009ca0:	call   DWORD PTR ds:0x640251a4
64009ca6:	mov    eax,DWORD PTR [esi+0x4]
64009ca9:	test   eax,eax
64009cab:	je     0x64009cb6
64009cad:	push   eax
64009cae:	call   0x64013564
64009cb3:	add    esp,0x4
64009cb6:	push   esi
64009cb7:	call   0x64012612
64009cbc:	add    esp,0x4
64009cbf:	mov    DWORD PTR [edi],0x0
64009cc5:	pop    esi
64009cc6:	ret    
64009cc7:	int3   
64009cc8:	int3   
64009cc9:	int3   
64009cca:	int3   
64009ccb:	int3   
64009ccc:	int3   
64009ccd:	int3   
64009cce:	int3   
64009ccf:	int3   
64009cd0:	push   0xffffffff
64009cd2:	push   0x6402282b
64009cd7:	mov    eax,fs:0x0
64009cdd:	push   eax
64009cde:	push   ebp
64009cdf:	push   esi
64009ce0:	mov    eax,ds:0x6402d09c
64009ce5:	xor    eax,esp
64009ce7:	push   eax
64009ce8:	lea    eax,[esp+0xc]
64009cec:	mov    fs:0x0,eax
64009cf2:	mov    ebp,DWORD PTR [esp+0x1c]
64009cf6:	test   ebp,ebp
64009cf8:	je     0x64009d0e
64009cfa:	mov    eax,DWORD PTR [ebx]
64009cfc:	test   eax,eax
64009cfe:	je     0x64009d04
64009d00:	mov    eax,DWORD PTR [eax]
64009d02:	jmp    0x64009d06
64009d04:	xor    eax,eax
64009d06:	cmp    eax,ebp
64009d08:	je     0x64009db3
64009d0e:	mov    esi,DWORD PTR [ebx]
64009d10:	test   esi,esi
64009d12:	je     0x64009d52
64009d14:	lea    eax,[esi+0x8]
64009d17:	push   eax
64009d18:	call   DWORD PTR ds:0x64025094
64009d1e:	test   eax,eax
64009d20:	jne    0x64009d4c
64009d22:	test   esi,esi
64009d24:	je     0x64009d4c
64009d26:	mov    eax,DWORD PTR [esi]
64009d28:	test   eax,eax
64009d2a:	je     0x64009d33
64009d2c:	push   eax
64009d2d:	call   DWORD PTR ds:0x640251a4
64009d33:	mov    eax,DWORD PTR [esi+0x4]
64009d36:	test   eax,eax
64009d38:	je     0x64009d43
64009d3a:	push   eax
64009d3b:	call   0x64013564
64009d40:	add    esp,0x4
64009d43:	push   esi
64009d44:	call   0x64012612
64009d49:	add    esp,0x4
64009d4c:	mov    DWORD PTR [ebx],0x0
64009d52:	push   0xc
64009d54:	call   0x640129f1
64009d59:	mov    esi,eax
64009d5b:	add    esp,0x4
64009d5e:	mov    DWORD PTR [esp+0x1c],esi
64009d62:	test   esi,esi
64009d64:	mov    DWORD PTR [esp+0x14],0x0
64009d6c:	je     0x64009d99
64009d6e:	push   ebp
64009d6f:	mov    DWORD PTR [esi+0x4],0x0
64009d76:	mov    DWORD PTR [esi+0x8],0x1
64009d7d:	call   DWORD PTR ds:0x6402518c
64009d83:	test   eax,eax
64009d85:	mov    DWORD PTR [esi],eax
64009d87:	jne    0x64009d9b
64009d89:	test   ebp,ebp
64009d8b:	je     0x64009d9b
64009d8d:	push   0x8007000e
64009d92:	call   0x6401efc0
64009d97:	jmp    0x64009d9b
64009d99:	xor    esi,esi
64009d9b:	test   esi,esi
64009d9d:	mov    DWORD PTR [esp+0x14],0xffffffff
64009da5:	mov    DWORD PTR [ebx],esi
64009da7:	jne    0x64009db3
64009da9:	push   0x8007000e
64009dae:	call   0x6401efc0
64009db3:	mov    eax,ebx
64009db5:	mov    ecx,DWORD PTR [esp+0xc]
64009db9:	mov    DWORD PTR fs:0x0,ecx
64009dc0:	pop    ecx
64009dc1:	pop    esi
64009dc2:	pop    ebp
64009dc3:	add    esp,0xc
64009dc6:	ret    0x4
64009dc9:	int3   
64009dca:	int3   
64009dcb:	int3   
64009dcc:	int3   
64009dcd:	int3   
64009dce:	int3   
64009dcf:	int3   
64009dd0:	push   0xffffffff
64009dd2:	push   0x640228bb
64009dd7:	mov    eax,fs:0x0
64009ddd:	push   eax
64009dde:	push   ecx
64009ddf:	push   esi
64009de0:	push   edi
64009de1:	mov    eax,ds:0x6402d09c
64009de6:	xor    eax,esp
64009de8:	push   eax
64009de9:	lea    eax,[esp+0x10]
64009ded:	mov    fs:0x0,eax
64009df3:	push   0xc
64009df5:	call   0x640129f1
64009dfa:	add    esp,0x4
64009dfd:	mov    DWORD PTR [esp+0xc],eax
64009e01:	test   eax,eax
64009e03:	mov    DWORD PTR [esp+0x18],0x0
64009e0b:	je     0x64009e1e
64009e0d:	mov    ecx,DWORD PTR [esp+0x20]
64009e11:	push   ecx
64009e12:	push   ebx
64009e13:	mov    edi,eax
64009e15:	call   0x64009f30
64009e1a:	mov    edi,eax
64009e1c:	jmp    0x64009e20
64009e1e:	xor    edi,edi
64009e20:	test   edi,edi
64009e22:	mov    DWORD PTR [esp+0x18],0xffffffff
64009e2a:	jne    0x64009e38
64009e2c:	push   0x8007000e
64009e31:	call   0x6401efc0
64009e36:	jmp    0x64009e7e
64009e38:	mov    esi,DWORD PTR [ebx]
64009e3a:	test   esi,esi
64009e3c:	je     0x64009e7c
64009e3e:	lea    edx,[esi+0x8]
64009e41:	push   edx
64009e42:	call   DWORD PTR ds:0x64025094
64009e48:	test   eax,eax
64009e4a:	jne    0x64009e76
64009e4c:	test   esi,esi
64009e4e:	je     0x64009e76
64009e50:	mov    eax,DWORD PTR [esi]
64009e52:	test   eax,eax
64009e54:	je     0x64009e5d
64009e56:	push   eax
64009e57:	call   DWORD PTR ds:0x640251a4
64009e5d:	mov    eax,DWORD PTR [esi+0x4]
64009e60:	test   eax,eax
64009e62:	je     0x64009e6d
64009e64:	push   eax
64009e65:	call   0x64013564
64009e6a:	add    esp,0x4
64009e6d:	push   esi
64009e6e:	call   0x64012612
64009e73:	add    esp,0x4
64009e76:	mov    DWORD PTR [ebx],0x0
64009e7c:	mov    DWORD PTR [ebx],edi
64009e7e:	mov    eax,ebx
64009e80:	mov    ecx,DWORD PTR [esp+0x10]
64009e84:	mov    DWORD PTR fs:0x0,ecx
64009e8b:	pop    ecx
64009e8c:	pop    edi
64009e8d:	pop    esi
64009e8e:	add    esp,0x10
64009e91:	ret    0x4
64009e94:	int3   
64009e95:	int3   
64009e96:	int3   
64009e97:	int3   
64009e98:	int3   
64009e99:	int3   
64009e9a:	int3   
64009e9b:	int3   
64009e9c:	int3   
64009e9d:	int3   
64009e9e:	int3   
64009e9f:	int3   
64009ea0:	push   0xffffffff
64009ea2:	push   0x64022969
64009ea7:	mov    eax,fs:0x0
64009ead:	push   eax
64009eae:	push   ecx
64009eaf:	push   ebx
64009eb0:	mov    eax,ds:0x6402d09c
64009eb5:	xor    eax,esp
64009eb7:	push   eax
64009eb8:	lea    eax,[esp+0xc]
64009ebc:	mov    fs:0x0,eax
64009ec2:	mov    ebx,DWORD PTR [esp+0x20]
64009ec6:	mov    eax,DWORD PTR [esp+0x1c]
64009eca:	mov    DWORD PTR [esp+0x8],0x0
64009ed2:	mov    eax,DWORD PTR [eax]
64009ed4:	test   eax,eax
64009ed6:	mov    DWORD PTR [ebx],eax
64009ed8:	je     0x64009ee4
64009eda:	add    eax,0x8
64009edd:	push   eax
64009ede:	call   DWORD PTR ds:0x64025020
64009ee4:	mov    ecx,DWORD PTR [esp+0x24]
64009ee8:	mov    DWORD PTR [esp+0x14],0x0
64009ef0:	push   ecx
64009ef1:	mov    DWORD PTR [esp+0xc],0x1
64009ef9:	call   0x64009dd0
64009efe:	mov    eax,ebx
64009f00:	mov    ecx,DWORD PTR [esp+0xc]
64009f04:	mov    DWORD PTR fs:0x0,ecx
64009f0b:	pop    ecx
64009f0c:	pop    ebx
64009f0d:	add    esp,0x10
64009f10:	ret    0xc
64009f13:	int3   
64009f14:	int3   
64009f15:	int3   
64009f16:	int3   
64009f17:	int3   
64009f18:	int3   
64009f19:	int3   
64009f1a:	int3   
64009f1b:	int3   
64009f1c:	int3   
64009f1d:	int3   
64009f1e:	int3   
64009f1f:	int3   
64009f20:	mov    eax,DWORD PTR [eax]
64009f22:	test   eax,eax
64009f24:	je     0x64009f29
64009f26:	mov    eax,DWORD PTR [eax]
64009f28:	ret    
64009f29:	xor    eax,eax
64009f2b:	ret    
64009f2c:	int3   
64009f2d:	int3   
64009f2e:	int3   
64009f2f:	int3   
64009f30:	mov    eax,DWORD PTR [esp+0x4]
64009f34:	push   ebx
64009f35:	xor    ebx,ebx
64009f37:	mov    DWORD PTR [edi+0x4],ebx
64009f3a:	mov    DWORD PTR [edi+0x8],0x1
64009f41:	mov    eax,DWORD PTR [eax]
64009f43:	cmp    eax,ebx
64009f45:	push   ebp
64009f46:	push   esi
64009f47:	mov    esi,DWORD PTR ds:0x64025188
64009f4d:	je     0x64009f5c
64009f4f:	mov    eax,DWORD PTR [eax]
64009f51:	cmp    eax,ebx
64009f53:	je     0x64009f5c
64009f55:	push   eax
64009f56:	call   esi
64009f58:	mov    ebp,eax
64009f5a:	jmp    0x64009f5e
64009f5c:	xor    ebp,ebp
64009f5e:	mov    ecx,DWORD PTR [esp+0x14]
64009f62:	mov    eax,DWORD PTR [ecx]
64009f64:	cmp    eax,ebx
64009f66:	je     0x64009f73
64009f68:	mov    eax,DWORD PTR [eax]
64009f6a:	cmp    eax,ebx
64009f6c:	je     0x64009f73
64009f6e:	push   eax
64009f6f:	call   esi
64009f71:	mov    ebx,eax
64009f73:	lea    esi,[ebx+ebp*1]
64009f76:	add    esi,esi
64009f78:	push   esi
64009f79:	push   0x0
64009f7b:	call   DWORD PTR ds:0x64025194
64009f81:	test   eax,eax
64009f83:	mov    DWORD PTR [edi],eax
64009f85:	jne    0x64009f99
64009f87:	push   0x8007000e
64009f8c:	call   0x6401efc0
64009f91:	pop    esi
64009f92:	pop    ebp
64009f93:	mov    eax,edi
64009f95:	pop    ebx
64009f96:	ret    0x8
64009f99:	mov    edx,DWORD PTR [esp+0x10]
64009f9d:	mov    ecx,DWORD PTR [edx]
64009f9f:	test   ecx,ecx
64009fa1:	je     0x64009fbc
64009fa3:	mov    ecx,DWORD PTR [ecx]
64009fa5:	test   ecx,ecx
64009fa7:	je     0x64009fbc
64009fa9:	lea    edx,[ebp+ebp*1+0x2]
64009fad:	push   edx
64009fae:	push   ecx
64009faf:	add    esi,0x2
64009fb2:	push   esi
64009fb3:	push   eax
64009fb4:	call   0x640127c8
64009fb9:	add    esp,0x10
64009fbc:	mov    eax,DWORD PTR [esp+0x14]
64009fc0:	mov    eax,DWORD PTR [eax]
64009fc2:	test   eax,eax
64009fc4:	je     0x64009fe1
64009fc6:	mov    ecx,DWORD PTR [eax]
64009fc8:	test   ecx,ecx
64009fca:	je     0x64009fe1
64009fcc:	lea    eax,[ebx+ebx*1+0x2]
64009fd0:	push   eax
64009fd1:	push   ecx
64009fd2:	mov    ecx,DWORD PTR [edi]
64009fd4:	push   eax
64009fd5:	lea    edx,[ecx+ebp*2]
64009fd8:	push   edx
64009fd9:	call   0x640127c8
64009fde:	add    esp,0x10
64009fe1:	pop    esi
64009fe2:	pop    ebp
64009fe3:	mov    eax,edi
64009fe5:	pop    ebx
64009fe6:	ret    0x8
64009fe9:	int3   
64009fea:	int3   
64009feb:	int3   
64009fec:	int3   
64009fed:	int3   
64009fee:	int3   
64009fef:	int3   
64009ff0:	push   ecx
64009ff1:	call   DWORD PTR ds:0x640251a0
64009ff7:	ret    
64009ff8:	int3   
64009ff9:	int3   
64009ffa:	int3   
64009ffb:	int3   
64009ffc:	int3   
64009ffd:	int3   
64009ffe:	int3   
64009fff:	int3   
6400a000:	push   0xffffffff
6400a002:	push   0x64022928
6400a007:	mov    eax,fs:0x0
6400a00d:	push   eax
6400a00e:	sub    esp,0x18
6400a011:	push   ebx
6400a012:	mov    eax,ds:0x6402d09c
6400a017:	xor    eax,esp
6400a019:	push   eax
6400a01a:	lea    eax,[esp+0x20]
6400a01e:	mov    fs:0x0,eax
6400a024:	mov    ebx,ecx
6400a026:	cmp    WORD PTR [esi],0x8
6400a02a:	jne    0x6400a048
6400a02c:	mov    eax,DWORD PTR [esi+0x8]
6400a02f:	push   eax
6400a030:	call   0x64009cd0
6400a035:	mov    eax,ebx
6400a037:	mov    ecx,DWORD PTR [esp+0x20]
6400a03b:	mov    DWORD PTR fs:0x0,ecx
6400a042:	pop    ecx
6400a043:	pop    ebx
6400a044:	add    esp,0x24
6400a047:	ret    
6400a048:	lea    ecx,[esp+0xc]
6400a04c:	push   ecx
6400a04d:	call   DWORD PTR ds:0x64025198
6400a053:	lea    edx,[esp+0xc]
6400a057:	cmp    edx,esi
6400a059:	mov    DWORD PTR [esp+0x28],0x0
6400a061:	jne    0x6400a06b
6400a063:	cmp    WORD PTR [esp+0xc],0x8
6400a069:	je     0x6400a085
6400a06b:	push   0x8
6400a06d:	push   0x0
6400a06f:	push   esi
6400a070:	lea    eax,[esp+0x18]
6400a074:	push   eax
6400a075:	call   DWORD PTR ds:0x64025190
6400a07b:	test   eax,eax
6400a07d:	jge    0x6400a085
6400a07f:	push   eax
6400a080:	call   0x6401efc0
6400a085:	mov    ecx,DWORD PTR [esp+0x14]
6400a089:	push   ecx
6400a08a:	call   0x64009cd0
6400a08f:	lea    edx,[esp+0xc]
6400a093:	push   edx
6400a094:	call   DWORD PTR ds:0x640251a0
6400a09a:	mov    eax,ebx
6400a09c:	mov    ecx,DWORD PTR [esp+0x20]
6400a0a0:	mov    DWORD PTR fs:0x0,ecx
6400a0a7:	pop    ecx
6400a0a8:	pop    ebx
6400a0a9:	add    esp,0x24
6400a0ac:	ret    
6400a0ad:	int3   
6400a0ae:	int3   
6400a0af:	int3   
6400a0b0:	sub    esp,0x8
6400a0b3:	test   eax,eax
6400a0b5:	mov    BYTE PTR [edi],0x0
6400a0b8:	jle    0x6400a20e
6400a0be:	push   ebx
6400a0bf:	push   ebp
6400a0c0:	push   esi
6400a0c1:	xor    esi,esi
6400a0c3:	add    eax,ecx
6400a0c5:	mov    BYTE PTR [esp+0xf],0x0
6400a0ca:	mov    BYTE PTR [edi],0x0
6400a0cd:	mov    DWORD PTR [esp+0x10],eax
6400a0d1:	mov    ebp,eax
6400a0d3:	mov    al,BYTE PTR [ebp+0x0]
6400a0d6:	test   al,al
6400a0d8:	je     0x6400a184
6400a0de:	movsx  edx,al
6400a0e1:	push   edx
6400a0e2:	call   0x64013cdf
6400a0e7:	mov    bl,al
6400a0e9:	movsx  eax,bl
6400a0ec:	push   eax
6400a0ed:	call   0x64013b20
6400a0f2:	add    esp,0x8
6400a0f5:	test   eax,eax
6400a0f7:	je     0x6400a0fb
6400a0f9:	mov    bl,0x30
6400a0fb:	shl    BYTE PTR [esi+edi*1],0x4
6400a0ff:	add    BYTE PTR [esp+0xf],0x1
6400a104:	mov    cl,BYTE PTR [esi+edi*1]
6400a107:	mov    al,bl
6400a109:	sub    al,0x30
6400a10b:	cmp    al,0x9
6400a10d:	ja     0x6400a116
6400a10f:	or     al,cl
6400a111:	mov    BYTE PTR [esi+edi*1],al
6400a114:	jmp    0x6400a128
6400a116:	mov    dl,bl
6400a118:	sub    dl,0x61
6400a11b:	cmp    dl,0x5
6400a11e:	ja     0x6400a15a
6400a120:	sub    bl,0x57
6400a123:	or     bl,cl
6400a125:	mov    BYTE PTR [esi+edi*1],bl
6400a128:	cmp    BYTE PTR [esp+0xf],0x2
6400a12d:	jne    0x6400a152
6400a12f:	mov    al,BYTE PTR [esi+edi*1]
6400a132:	test   al,al
6400a134:	je     0x6400a146
6400a136:	movsx  eax,al
6400a139:	push   eax
6400a13a:	call   0x64013b9d
6400a13f:	add    esp,0x4
6400a142:	test   eax,eax
6400a144:	je     0x6400a15a
6400a146:	add    esi,0x1
6400a149:	mov    BYTE PTR [esp+0xf],0x0
6400a14e:	mov    BYTE PTR [esi+edi*1],0x0
6400a152:	add    ebp,0x1
6400a155:	jmp    0x6400a0d3
6400a15a:	mov    ebp,DWORD PTR [esp+0x10]
6400a15e:	xor    esi,esi
6400a160:	mov    bl,BYTE PTR [ebp+0x0]
6400a163:	test   bl,bl
6400a165:	je     0x6400a184
6400a167:	movsx  ecx,bl
6400a16a:	push   ecx
6400a16b:	call   0x64013b9d
6400a170:	add    esp,0x4
6400a173:	test   eax,eax
6400a175:	je     0x6400a182
6400a177:	mov    BYTE PTR [esi+edi*1],bl
6400a17a:	add    esi,0x1
6400a17d:	add    ebp,0x1
6400a180:	jmp    0x6400a160
6400a182:	xor    esi,esi
6400a184:	cmp    DWORD PTR [esp+0x18],0x0
6400a189:	mov    BYTE PTR [esi+edi*1],0x0
6400a18d:	je     0x6400a1b2
6400a18f:	test   esi,esi
6400a191:	jle    0x6400a1b2
6400a193:	add    esi,0xffffffff
6400a196:	shr    esi,1
6400a198:	lea    eax,[edi+0x1]
6400a19b:	add    esi,0x1
6400a19e:	mov    edi,edi
6400a1a0:	mov    cl,BYTE PTR [eax-0x1]
6400a1a3:	mov    dl,BYTE PTR [eax]
6400a1a5:	mov    BYTE PTR [eax-0x1],dl
6400a1a8:	mov    BYTE PTR [eax],cl
6400a1aa:	add    eax,0x2
6400a1ad:	sub    esi,0x1
6400a1b0:	jne    0x6400a1a0
6400a1b2:	or     ebx,0xffffffff
6400a1b5:	or     ebp,ebx
6400a1b7:	xor    esi,esi
6400a1b9:	cmp    BYTE PTR [edi],0x0
6400a1bc:	je     0x6400a20b
6400a1be:	mov    edi,edi
6400a1c0:	movsx  eax,BYTE PTR [esi+edi*1]
6400a1c4:	push   eax
6400a1c5:	call   0x64013b20
6400a1ca:	add    esp,0x4
6400a1cd:	test   eax,eax
6400a1cf:	jne    0x6400a1d9
6400a1d1:	test   ebp,ebp
6400a1d3:	jge    0x6400a1d7
6400a1d5:	mov    ebp,esi
6400a1d7:	mov    ebx,esi
6400a1d9:	add    esi,0x1
6400a1dc:	cmp    BYTE PTR [esi+edi*1],0x0
6400a1e0:	jne    0x6400a1c0
6400a1e2:	test   ebp,ebp
6400a1e4:	jl     0x6400a20b
6400a1e6:	test   ebx,ebx
6400a1e8:	jl     0x6400a20b
6400a1ea:	cmp    ebp,ebx
6400a1ec:	mov    eax,ebp
6400a1ee:	jg     0x6400a205
6400a1f0:	mov    edx,edi
6400a1f2:	sub    edx,ebp
6400a1f4:	mov    cl,BYTE PTR [eax+edi*1]
6400a1f7:	test   cl,cl
6400a1f9:	je     0x6400a205
6400a1fb:	mov    BYTE PTR [edx+eax*1],cl
6400a1fe:	add    eax,0x1
6400a201:	cmp    eax,ebx
6400a203:	jle    0x6400a1f4
6400a205:	sub    eax,ebp
6400a207:	mov    BYTE PTR [eax+edi*1],0x0
6400a20b:	pop    esi
6400a20c:	pop    ebp
6400a20d:	pop    ebx
6400a20e:	mov    eax,edi
6400a210:	add    esp,0x8
6400a213:	ret    
6400a214:	int3   
6400a215:	int3   
6400a216:	int3   
6400a217:	int3   
6400a218:	int3   
6400a219:	int3   
6400a21a:	int3   
6400a21b:	int3   
6400a21c:	int3   
6400a21d:	int3   
6400a21e:	int3   
6400a21f:	int3   
6400a220:	push   ebp
6400a221:	mov    ebp,esp
6400a223:	and    esp,0xfffffff8
6400a226:	mov    eax,0x2f34
6400a22b:	call   0x64018760
6400a230:	mov    eax,ds:0x6402d09c
6400a235:	xor    eax,esp
6400a237:	mov    DWORD PTR [esp+0x2f30],eax
6400a23e:	push   ebx
6400a23f:	mov    eax,DWORD PTR [ebp+0x8]
6400a242:	mov    ecx,DWORD PTR [ebp+0xc]
6400a245:	mov    ebx,DWORD PTR [ebp+0x10]
6400a248:	push   esi
6400a249:	push   edi
6400a24a:	xor    edi,edi
6400a24c:	push   edi
6400a24d:	push   edi
6400a24e:	push   0x3
6400a250:	push   edi
6400a251:	push   0x3
6400a253:	push   edi
6400a254:	push   0x64028408
6400a259:	push   0x12
6400a25b:	push   0x64028448
6400a260:	mov    DWORD PTR [esp+0x3c],eax
6400a264:	mov    DWORD PTR [esp+0x40],ecx
6400a268:	mov    BYTE PTR [esp+0x37],0x0
6400a26d:	call   0x640059b0
6400a272:	add    esp,0xc
6400a275:	push   eax
6400a276:	call   0x6400d310
6400a27b:	call   eax
6400a27d:	mov    esi,eax
6400a27f:	cmp    esi,0xffffffff
6400a282:	jne    0x6400a29b
6400a284:	xor    al,al
6400a286:	pop    edi
6400a287:	pop    esi
6400a288:	pop    ebx
6400a289:	mov    ecx,DWORD PTR [esp+0x2f30]
6400a290:	xor    ecx,esp
6400a292:	call   0x64012e6c
6400a297:	mov    esp,ebp
6400a299:	pop    ebp
6400a29a:	ret    
6400a29b:	xor    eax,eax
6400a29d:	push   0x2710
6400a2a2:	lea    edx,[esp+0x82c]
6400a2a9:	push   edi
6400a2aa:	mov    DWORD PTR [esp+0x2c],eax
6400a2ae:	mov    DWORD PTR [esp+0x30],eax
6400a2b2:	push   edx
6400a2b3:	mov    DWORD PTR [esp+0x20],edi
6400a2b7:	mov    DWORD PTR [esp+0x38],eax
6400a2bb:	mov    DWORD PTR [esp+0x30],edi
6400a2bf:	mov    DWORD PTR [esp+0x34],edi
6400a2c3:	call   0x64013570
6400a2c8:	add    esp,0xc
6400a2cb:	push   edi
6400a2cc:	lea    eax,[esp+0x18]
6400a2d0:	push   eax
6400a2d1:	push   0x2710
6400a2d6:	lea    ecx,[esp+0x834]
6400a2dd:	push   ecx
6400a2de:	push   0xc
6400a2e0:	lea    edx,[esp+0x38]
6400a2e4:	push   edx
6400a2e5:	push   0x2d1400
6400a2ea:	push   esi
6400a2eb:	call   0x6400d850
6400a2f0:	call   eax
6400a2f2:	test   eax,eax
6400a2f4:	je     0x6400a351
6400a2f6:	mov    eax,DWORD PTR [esp+0x838]
6400a2fd:	push   edi
6400a2fe:	lea    edi,[esp+0x444]
6400a305:	lea    ecx,[esp+0x82c]
6400a30c:	call   0x6400a0b0
6400a311:	mov    eax,DWORD PTR [esp+0x844]
6400a318:	push   0x1
6400a31a:	lea    edi,[esp+0x60]
6400a31e:	lea    ecx,[esp+0x830]
6400a325:	call   0x6400a0b0
6400a32a:	mov    ecx,DWORD PTR [esp+0x20]
6400a32e:	add    esp,0x8
6400a331:	mov    eax,edi
6400a333:	push   eax
6400a334:	call   0x64002810
6400a339:	lea    ecx,[esp+0x440]
6400a340:	push   ecx
6400a341:	mov    ecx,DWORD PTR [esp+0x20]
6400a345:	call   0x64002810
6400a34a:	mov    BYTE PTR [esp+0x13],0x1
6400a34f:	xor    edi,edi
6400a351:	xor    eax,eax
6400a353:	push   edi
6400a354:	lea    edx,[esp+0x24]
6400a358:	push   edx
6400a359:	push   0x28
6400a35b:	mov    DWORD PTR [esp+0x40],eax
6400a35f:	mov    DWORD PTR [esp+0x44],eax
6400a363:	mov    DWORD PTR [esp+0x48],eax
6400a367:	mov    DWORD PTR [esp+0x4c],eax
6400a36b:	mov    DWORD PTR [esp+0x50],eax
6400a36f:	mov    DWORD PTR [esp+0x54],eax
6400a373:	mov    DWORD PTR [esp+0x58],eax
6400a377:	mov    DWORD PTR [esp+0x5c],eax
6400a37b:	mov    DWORD PTR [esp+0x60],eax
6400a37f:	lea    eax,[esp+0x3c]
6400a383:	push   eax
6400a384:	push   edi
6400a385:	push   edi
6400a386:	push   0x700a0
6400a38b:	push   esi
6400a38c:	mov    DWORD PTR [esp+0x50],edi
6400a390:	mov    DWORD PTR [ebx],edi
6400a392:	mov    DWORD PTR [ebx+0x4],edi
6400a395:	call   0x6400d850
6400a39a:	call   eax
6400a39c:	test   eax,eax
6400a39e:	je     0x6400a3ad
6400a3a0:	mov    ecx,DWORD PTR [esp+0x48]
6400a3a4:	mov    edx,DWORD PTR [esp+0x4c]
6400a3a8:	mov    DWORD PTR [ebx],ecx
6400a3aa:	mov    DWORD PTR [ebx+0x4],edx
6400a3ad:	push   esi
6400a3ae:	call   DWORD PTR ds:0x64025040
6400a3b4:	mov    ecx,DWORD PTR [esp+0x2f3c]
6400a3bb:	mov    al,BYTE PTR [esp+0x13]
6400a3bf:	pop    edi
6400a3c0:	pop    esi
6400a3c1:	pop    ebx
6400a3c2:	xor    ecx,esp
6400a3c4:	call   0x64012e6c
6400a3c9:	mov    esp,ebp
6400a3cb:	pop    ebp
6400a3cc:	ret    
6400a3cd:	int3   
6400a3ce:	int3   
6400a3cf:	int3   
6400a3d0:	push   ebp
6400a3d1:	lea    ebp,[esp-0x28c]
6400a3d8:	sub    esp,0x28c
6400a3de:	push   0xffffffff
6400a3e0:	push   0x64023940
6400a3e5:	mov    eax,fs:0x0
6400a3eb:	push   eax
6400a3ec:	sub    esp,0x34
6400a3ef:	mov    eax,ds:0x6402d09c
6400a3f4:	xor    eax,ebp
6400a3f6:	mov    DWORD PTR [ebp+0x288],eax
6400a3fc:	push   ebx
6400a3fd:	push   esi
6400a3fe:	push   edi
6400a3ff:	push   eax
6400a400:	lea    eax,[ebp-0xc]
6400a403:	mov    fs:0x0,eax
6400a409:	mov    eax,DWORD PTR [ebp+0x294]
6400a40f:	lea    ecx,[ebp-0x14]
6400a412:	push   ecx
6400a413:	lea    edx,[ebp+0x0]
6400a416:	push   edx
6400a417:	mov    DWORD PTR [ebp-0x20],eax
6400a41a:	mov    DWORD PTR [ebp-0x14],0x1
6400a421:	call   0x6400ceb0
6400a426:	call   eax
6400a428:	cmp    eax,0x6f
6400a42b:	jne    0x6400a601
6400a431:	mov    eax,DWORD PTR [ebp-0x14]
6400a434:	push   eax
6400a435:	call   0x6401260d
6400a43a:	mov    ebx,eax
6400a43c:	add    esp,0x4
6400a43f:	mov    DWORD PTR [ebp-0x24],ebx
6400a442:	lea    ecx,[ebp-0x14]
6400a445:	push   ecx
6400a446:	push   ebx
6400a447:	mov    DWORD PTR [ebp-0x4],0x0
6400a44e:	call   0x6400ceb0
6400a453:	call   eax
6400a455:	test   eax,eax
6400a457:	je     0x6400a45f
6400a459:	push   ebx
6400a45a:	jmp    0x6400a5f9
6400a45f:	call   DWORD PTR ds:0x6402d06c
6400a465:	mov    edx,DWORD PTR ds:0x6402e540
6400a46b:	mov    DWORD PTR [ebp-0x1c],eax
6400a46e:	mov    eax,DWORD PTR [edx+0xc]
6400a471:	mov    ecx,0x6402e540
6400a476:	call   eax
6400a478:	lea    edi,[eax+0x10]
6400a47b:	mov    DWORD PTR [ebp-0x10],edi
6400a47e:	xor    esi,esi
6400a480:	mov    BYTE PTR [ebp-0x4],0x1
6400a484:	cmp    DWORD PTR [ebx+0x190],esi
6400a48a:	je     0x6400a512
6400a490:	mov    edx,DWORD PTR ds:0x6402e540
6400a496:	mov    eax,DWORD PTR [edx+0xc]
6400a499:	mov    ecx,0x6402e540
6400a49e:	call   eax
6400a4a0:	add    eax,0x10
6400a4a3:	mov    DWORD PTR [ebp-0x18],eax
6400a4a6:	mov    BYTE PTR [ebp-0x4],0x2
6400a4aa:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6400a4b2:	push   ecx
6400a4b3:	push   0x64028470
6400a4b8:	push   0x4
6400a4ba:	push   0x6402849c
6400a4bf:	call   0x640059b0
6400a4c4:	add    esp,0xc
6400a4c7:	push   eax
6400a4c8:	lea    edx,[ebp-0x18]
6400a4cb:	push   edx
6400a4cc:	call   0x64001d40
6400a4d1:	mov    edi,DWORD PTR [ebp-0x18]
6400a4d4:	mov    eax,DWORD PTR [edi-0xc]
6400a4d7:	add    esp,0xc
6400a4da:	push   eax
6400a4db:	push   edi
6400a4dc:	lea    ecx,[ebp-0x10]
6400a4df:	call   0x640029f0
6400a4e4:	lea    eax,[edi-0x10]
6400a4e7:	mov    BYTE PTR [ebp-0x4],0x1
6400a4eb:	lea    ecx,[eax+0xc]
6400a4ee:	or     edx,0xffffffff
6400a4f1:	lock xadd DWORD PTR [ecx],edx
6400a4f5:	dec    edx
6400a4f6:	test   edx,edx
6400a4f8:	jg     0x6400a504
6400a4fa:	mov    ecx,DWORD PTR [eax]
6400a4fc:	mov    edx,DWORD PTR [ecx]
6400a4fe:	push   eax
6400a4ff:	mov    eax,DWORD PTR [edx+0x4]
6400a502:	call   eax
6400a504:	add    esi,0x1
6400a507:	cmp    esi,DWORD PTR [ebx+0x190]
6400a50d:	jne    0x6400a490
6400a50f:	mov    edi,DWORD PTR [ebp-0x10]
6400a512:	cmp    DWORD PTR [edi-0x4],0x1
6400a516:	jle    0x6400a527
6400a518:	mov    ecx,DWORD PTR [edi-0xc]
6400a51b:	push   ecx
6400a51c:	lea    ecx,[ebp-0x10]
6400a51f:	call   0x64001950
6400a524:	mov    edi,DWORD PTR [ebp-0x10]
6400a527:	test   edi,edi
6400a529:	jne    0x6400a52f
6400a52b:	xor    esi,esi
6400a52d:	jmp    0x6400a57d
6400a52f:	push   edi
6400a530:	call   DWORD PTR ds:0x64025054
6400a536:	add    eax,0x1
6400a539:	cmp    eax,0x3fffffff
6400a53e:	jg     0x6400a579
6400a540:	lea    edi,[eax+eax*1]
6400a543:	mov    eax,edi
6400a545:	call   0x640135f0
6400a54a:	mov    esi,esp
6400a54c:	test   esi,esi
6400a54e:	je     0x6400a576
6400a550:	mov    edx,DWORD PTR [ebp-0x10]
6400a553:	mov    eax,DWORD PTR [ebp-0x1c]
6400a556:	push   0x0
6400a558:	push   0x0
6400a55a:	push   edi
6400a55b:	push   esi
6400a55c:	push   0xffffffff
6400a55e:	push   edx
6400a55f:	push   0x0
6400a561:	push   eax
6400a562:	mov    BYTE PTR [esi],0x0
6400a565:	call   DWORD PTR ds:0x64025028
6400a56b:	mov    edi,DWORD PTR [ebp-0x10]
6400a56e:	neg    eax
6400a570:	sbb    eax,eax
6400a572:	and    eax,esi
6400a574:	jmp    0x6400a57b
6400a576:	mov    edi,DWORD PTR [ebp-0x10]
6400a579:	xor    eax,eax
6400a57b:	mov    esi,eax
6400a57d:	mov    eax,esi
6400a57f:	mov    DWORD PTR [ebp-0x28],0xf
6400a586:	mov    DWORD PTR [ebp-0x2c],0x0
6400a58d:	mov    BYTE PTR [ebp-0x3c],0x0
6400a591:	lea    edx,[eax+0x1]
6400a594:	mov    cl,BYTE PTR [eax]
6400a596:	add    eax,0x1
6400a599:	test   cl,cl
6400a59b:	jne    0x6400a594
6400a59d:	sub    eax,edx
6400a59f:	push   eax
6400a5a0:	push   esi
6400a5a1:	lea    ecx,[ebp-0x40]
6400a5a4:	call   0x64001860
6400a5a9:	mov    esi,DWORD PTR [ebp-0x20]
6400a5ac:	lea    ecx,[ebp-0x40]
6400a5af:	push   ecx
6400a5b0:	mov    BYTE PTR [ebp-0x4],0x3
6400a5b4:	call   0x6400ab20
6400a5b9:	cmp    DWORD PTR [ebp-0x28],0x10
6400a5bd:	jb     0x6400a5cb
6400a5bf:	mov    edx,DWORD PTR [ebp-0x3c]
6400a5c2:	push   edx
6400a5c3:	call   0x64012612
6400a5c8:	add    esp,0x4
6400a5cb:	mov    ebx,DWORD PTR [ebx]
6400a5cd:	lea    eax,[edi-0x10]
6400a5d0:	mov    BYTE PTR [ebp-0x4],0x0
6400a5d4:	lea    ecx,[eax+0xc]
6400a5d7:	or     edx,0xffffffff
6400a5da:	lock xadd DWORD PTR [ecx],edx
6400a5de:	dec    edx
6400a5df:	test   edx,edx
6400a5e1:	jg     0x6400a5ed
6400a5e3:	mov    ecx,DWORD PTR [eax]
6400a5e5:	mov    edx,DWORD PTR [ecx]
6400a5e7:	push   eax
6400a5e8:	mov    eax,DWORD PTR [edx+0x4]
6400a5eb:	call   eax
6400a5ed:	test   ebx,ebx
6400a5ef:	jne    0x6400a45f
6400a5f5:	mov    ecx,DWORD PTR [ebp-0x24]
6400a5f8:	push   ecx
6400a5f9:	call   0x64012612
6400a5fe:	add    esp,0x4
6400a601:	lea    esp,[ebp-0x50]
6400a604:	mov    ecx,DWORD PTR [ebp-0xc]
6400a607:	mov    DWORD PTR fs:0x0,ecx
6400a60e:	pop    ecx
6400a60f:	pop    edi
6400a610:	pop    esi
6400a611:	pop    ebx
6400a612:	mov    ecx,DWORD PTR [ebp+0x288]
6400a618:	xor    ecx,ebp
6400a61a:	call   0x64012e6c
6400a61f:	add    ebp,0x28c
6400a625:	mov    esp,ebp
6400a627:	pop    ebp
6400a628:	ret    
6400a629:	int3   
6400a62a:	int3   
6400a62b:	int3   
6400a62c:	int3   
6400a62d:	int3   
6400a62e:	int3   
6400a62f:	int3   
6400a630:	push   0xffffffff
6400a632:	push   0x64023900
6400a637:	mov    eax,fs:0x0
6400a63d:	push   eax
6400a63e:	sub    esp,0x50
6400a641:	push   ebx
6400a642:	push   ebp
6400a643:	push   esi
6400a644:	push   edi
6400a645:	mov    eax,ds:0x6402d09c
6400a64a:	xor    eax,esp
6400a64c:	push   eax
6400a64d:	lea    eax,[esp+0x64]
6400a651:	mov    fs:0x0,eax
6400a657:	mov    ebp,DWORD PTR [esp+0x74]
6400a65b:	lea    eax,[esp+0x18]
6400a65f:	xor    ebx,ebx
6400a661:	push   eax
6400a662:	mov    edi,0x640276c8
6400a667:	mov    DWORD PTR [esp+0x3c],ebx
6400a66b:	call   0x64009be0
6400a670:	push   ebx
6400a671:	push   ebx
6400a672:	mov    DWORD PTR [esp+0x74],ebx
6400a676:	call   DWORD PTR ds:0x640251d4
6400a67c:	test   eax,eax
6400a67e:	jge    0x6400a6d3
6400a680:	mov    esi,DWORD PTR [esp+0x18]
6400a684:	cmp    esi,ebx
6400a686:	mov    DWORD PTR [ebp+0x0],esi
6400a689:	je     0x6400a973
6400a68f:	lea    edi,[esi+0x8]
6400a692:	push   edi
6400a693:	call   DWORD PTR ds:0x64025020
6400a699:	push   edi
6400a69a:	call   DWORD PTR ds:0x64025094
6400a6a0:	test   eax,eax
6400a6a2:	jne    0x6400a973
6400a6a8:	mov    eax,DWORD PTR [esi]
6400a6aa:	cmp    eax,ebx
6400a6ac:	je     0x6400a6b5
6400a6ae:	push   eax
6400a6af:	call   DWORD PTR ds:0x640251a4
6400a6b5:	mov    eax,DWORD PTR [esi+0x4]
6400a6b8:	cmp    eax,ebx
6400a6ba:	je     0x6400a6c5
6400a6bc:	push   eax
6400a6bd:	call   0x64013564
6400a6c2:	add    esp,0x4
6400a6c5:	push   esi
6400a6c6:	call   0x64012612
6400a6cb:	add    esp,0x4
6400a6ce:	jmp    0x6400a973
6400a6d3:	lea    ecx,[esp+0x20]
6400a6d7:	push   ecx
6400a6d8:	push   0x64025a60
6400a6dd:	push   0x1
6400a6df:	push   ebx
6400a6e0:	push   0x64025b30
6400a6e5:	mov    DWORD PTR [esp+0x34],ebx
6400a6e9:	call   DWORD PTR ds:0x640251d0
6400a6ef:	cmp    eax,ebx
6400a6f1:	jl     0x6400a94f
6400a6f7:	push   0x640284a8
6400a6fc:	push   0xa
6400a6fe:	push   0x640284d8
6400a703:	mov    DWORD PTR [esp+0x28],ebx
6400a707:	call   0x640059b0
6400a70c:	add    esp,0xc
6400a70f:	lea    edx,[esp+0x30]
6400a713:	push   edx
6400a714:	mov    edi,eax
6400a716:	call   0x64009be0
6400a71b:	mov    BYTE PTR [esp+0x6c],0x1
6400a720:	mov    eax,DWORD PTR [eax]
6400a722:	cmp    eax,ebx
6400a724:	je     0x6400a72a
6400a726:	mov    eax,DWORD PTR [eax]
6400a728:	jmp    0x6400a72c
6400a72a:	xor    eax,eax
6400a72c:	mov    ecx,DWORD PTR [esp+0x20]
6400a730:	mov    edx,DWORD PTR [ecx]
6400a732:	lea    esi,[esp+0x1c]
6400a736:	push   esi
6400a737:	push   ebx
6400a738:	push   ebx
6400a739:	push   ebx
6400a73a:	push   ebx
6400a73b:	push   ebx
6400a73c:	push   ebx
6400a73d:	push   eax
6400a73e:	mov    eax,DWORD PTR [edx+0xc]
6400a741:	push   ecx
6400a742:	call   eax
6400a744:	lea    edi,[esp+0x30]
6400a748:	mov    esi,eax
6400a74a:	mov    BYTE PTR [esp+0x6c],bl
6400a74e:	call   0x64009c80
6400a753:	cmp    esi,ebx
6400a755:	jge    0x6400a760
6400a757:	mov    eax,DWORD PTR [esp+0x20]
6400a75b:	jmp    0x6400a947
6400a760:	mov    eax,DWORD PTR [esp+0x1c]
6400a764:	push   ebx
6400a765:	push   ebx
6400a766:	push   0x3
6400a768:	push   0x3
6400a76a:	push   ebx
6400a76b:	push   ebx
6400a76c:	push   0xa
6400a76e:	push   eax
6400a76f:	call   DWORD PTR ds:0x640251e4
6400a775:	cmp    eax,ebx
6400a777:	jge    0x6400a78e
6400a779:	mov    eax,DWORD PTR [esp+0x1c]
6400a77d:	mov    ecx,DWORD PTR [eax]
6400a77f:	mov    edx,DWORD PTR [ecx+0x8]
6400a782:	push   eax
6400a783:	call   edx
6400a785:	mov    eax,DWORD PTR [esp+0x20]
6400a789:	jmp    0x6400a947
6400a78e:	push   0x640284f0
6400a793:	push   0xe
6400a795:	push   0x64028530
6400a79a:	mov    DWORD PTR [esp+0x30],ebx
6400a79e:	call   0x640057b0
6400a7a3:	add    esp,0xc
6400a7a6:	push   eax
6400a7a7:	lea    ebx,[esp+0x3c]
6400a7ab:	call   0x64009b50
6400a7b0:	mov    ecx,DWORD PTR [esp+0x78]
6400a7b4:	push   ecx
6400a7b5:	lea    edx,[esp+0x38]
6400a7b9:	push   edx
6400a7ba:	push   eax
6400a7bb:	mov    BYTE PTR [esp+0x78],0x2
6400a7c0:	call   0x64009ea0
6400a7c5:	mov    esi,eax
6400a7c7:	push   0x64028540
6400a7cc:	push   0x3
6400a7ce:	push   0x64028564
6400a7d3:	mov    BYTE PTR [esp+0x78],0x3
6400a7d8:	call   0x640057b0
6400a7dd:	add    esp,0xc
6400a7e0:	push   eax
6400a7e1:	lea    ebx,[esp+0x34]
6400a7e5:	call   0x64009b50
6400a7ea:	mov    BYTE PTR [esp+0x6c],0x4
6400a7ef:	mov    ecx,DWORD PTR [esi]
6400a7f1:	xor    ebx,ebx
6400a7f3:	cmp    ecx,ebx
6400a7f5:	je     0x6400a7fb
6400a7f7:	mov    ecx,DWORD PTR [ecx]
6400a7f9:	jmp    0x6400a7fd
6400a7fb:	xor    ecx,ecx
6400a7fd:	mov    eax,DWORD PTR [eax]
6400a7ff:	cmp    eax,ebx
6400a801:	je     0x6400a807
6400a803:	mov    edx,DWORD PTR [eax]
6400a805:	jmp    0x6400a809
6400a807:	xor    edx,edx
6400a809:	mov    eax,DWORD PTR [esp+0x1c]
6400a80d:	mov    esi,DWORD PTR [eax]
6400a80f:	lea    edi,[esp+0x24]
6400a813:	push   edi
6400a814:	push   ebx
6400a815:	push   0x30
6400a817:	push   ecx
6400a818:	push   edx
6400a819:	push   eax
6400a81a:	mov    eax,DWORD PTR [esi+0x50]
6400a81d:	call   eax
6400a81f:	lea    edi,[esp+0x30]
6400a823:	mov    esi,eax
6400a825:	call   0x64009c80
6400a82a:	lea    edi,[esp+0x34]
6400a82e:	call   0x64009c80
6400a833:	lea    edi,[esp+0x38]
6400a837:	mov    BYTE PTR [esp+0x6c],bl
6400a83b:	call   0x64009c80
6400a840:	cmp    esi,ebx
6400a842:	jge    0x6400a859
6400a844:	mov    eax,DWORD PTR [esp+0x1c]
6400a848:	mov    ecx,DWORD PTR [eax]
6400a84a:	mov    edx,DWORD PTR [ecx+0x8]
6400a84d:	push   eax
6400a84e:	call   edx
6400a850:	mov    eax,DWORD PTR [esp+0x20]
6400a854:	jmp    0x6400a947
6400a859:	mov    eax,DWORD PTR [esp+0x24]
6400a85d:	cmp    eax,ebx
6400a85f:	mov    DWORD PTR [esp+0x2c],ebx
6400a863:	je     0x6400a91f
6400a869:	mov    edi,DWORD PTR ds:0x640251a0
6400a86f:	nop
6400a870:	mov    ecx,DWORD PTR [eax]
6400a872:	lea    edx,[esp+0x2c]
6400a876:	push   edx
6400a877:	lea    edx,[esp+0x2c]
6400a87b:	push   edx
6400a87c:	push   0x1
6400a87e:	push   0xffffffff
6400a880:	push   eax
6400a881:	mov    eax,DWORD PTR [ecx+0x10]
6400a884:	call   eax
6400a886:	cmp    DWORD PTR [esp+0x2c],ebx
6400a88a:	je     0x6400a91f
6400a890:	mov    esi,DWORD PTR [esp+0x28]
6400a894:	mov    eax,DWORD PTR [esp+0x7c]
6400a898:	mov    ebp,DWORD PTR [esi]
6400a89a:	push   ebx
6400a89b:	push   ebx
6400a89c:	lea    ecx,[esp+0x44]
6400a8a0:	push   ecx
6400a8a1:	push   ebx
6400a8a2:	call   0x64009f20
6400a8a7:	mov    edx,DWORD PTR [ebp+0x10]
6400a8aa:	push   eax
6400a8ab:	push   esi
6400a8ac:	call   edx
6400a8ae:	cmp    eax,ebx
6400a8b0:	jl     0x6400a8ba
6400a8b2:	cmp    WORD PTR [esp+0x3c],0x8
6400a8b8:	je     0x6400a8db
6400a8ba:	lea    eax,[esp+0x3c]
6400a8be:	push   eax
6400a8bf:	call   edi
6400a8c1:	mov    eax,DWORD PTR [esp+0x28]
6400a8c5:	mov    ecx,DWORD PTR [eax]
6400a8c7:	mov    edx,DWORD PTR [ecx+0x8]
6400a8ca:	push   eax
6400a8cb:	call   edx
6400a8cd:	mov    eax,DWORD PTR [esp+0x24]
6400a8d1:	cmp    eax,ebx
6400a8d3:	mov    ebp,DWORD PTR [esp+0x74]
6400a8d7:	jne    0x6400a870
6400a8d9:	jmp    0x6400a91f
6400a8db:	lea    eax,[esp+0x4c]
6400a8df:	push   eax
6400a8e0:	call   DWORD PTR ds:0x64025198
6400a8e6:	lea    ecx,[esp+0x3c]
6400a8ea:	push   ecx
6400a8eb:	lea    edx,[esp+0x50]
6400a8ef:	push   edx
6400a8f0:	call   DWORD PTR ds:0x6402519c
6400a8f6:	cmp    eax,ebx
6400a8f8:	jge    0x6400a900
6400a8fa:	push   eax
6400a8fb:	call   0x6401efc0
6400a900:	lea    esi,[esp+0x4c]
6400a904:	lea    ecx,[esp+0x18]
6400a908:	mov    BYTE PTR [esp+0x6c],0x5
6400a90d:	call   0x6400a000
6400a912:	mov    eax,esi
6400a914:	push   eax
6400a915:	mov    BYTE PTR [esp+0x70],bl
6400a919:	call   edi
6400a91b:	mov    ebp,DWORD PTR [esp+0x74]
6400a91f:	mov    eax,DWORD PTR [esp+0x1c]
6400a923:	mov    ecx,DWORD PTR [eax]
6400a925:	mov    edx,DWORD PTR [ecx+0x8]
6400a928:	push   eax
6400a929:	call   edx
6400a92b:	mov    eax,DWORD PTR [esp+0x20]
6400a92f:	mov    ecx,DWORD PTR [eax]
6400a931:	mov    edx,DWORD PTR [ecx+0x8]
6400a934:	push   eax
6400a935:	call   edx
6400a937:	mov    eax,DWORD PTR [esp+0x24]
6400a93b:	mov    ecx,DWORD PTR [eax]
6400a93d:	mov    edx,DWORD PTR [ecx+0x8]
6400a940:	push   eax
6400a941:	call   edx
6400a943:	mov    eax,DWORD PTR [esp+0x28]
6400a947:	mov    ecx,DWORD PTR [eax]
6400a949:	mov    edx,DWORD PTR [ecx+0x8]
6400a94c:	push   eax
6400a94d:	call   edx
6400a94f:	call   DWORD PTR ds:0x640251d8
6400a955:	mov    eax,DWORD PTR [esp+0x18]
6400a959:	cmp    eax,ebx
6400a95b:	mov    DWORD PTR [ebp+0x0],eax
6400a95e:	je     0x6400a96a
6400a960:	add    eax,0x8
6400a963:	push   eax
6400a964:	call   DWORD PTR ds:0x64025020
6400a96a:	lea    edi,[esp+0x18]
6400a96e:	call   0x64009c80
6400a973:	mov    eax,ebp
6400a975:	mov    ecx,DWORD PTR [esp+0x64]
6400a979:	mov    DWORD PTR fs:0x0,ecx
6400a980:	pop    ecx
6400a981:	pop    edi
6400a982:	pop    esi
6400a983:	pop    ebp
6400a984:	pop    ebx
6400a985:	add    esp,0x5c
6400a988:	ret    
6400a989:	int3   
6400a98a:	int3   
6400a98b:	int3   
6400a98c:	int3   
6400a98d:	int3   
6400a98e:	int3   
6400a98f:	int3   
6400a990:	push   ebp
6400a991:	mov    ebp,esp
6400a993:	and    esp,0xfffffff8
6400a996:	push   0xffffffff
6400a998:	push   0x64023de8
6400a99d:	mov    eax,fs:0x0
6400a9a3:	push   eax
6400a9a4:	sub    esp,0x14
6400a9a7:	push   esi
6400a9a8:	push   edi
6400a9a9:	mov    eax,ds:0x6402d09c
6400a9ae:	xor    eax,esp
6400a9b0:	push   eax
6400a9b1:	lea    eax,[esp+0x20]
6400a9b5:	mov    fs:0x0,eax
6400a9bb:	mov    DWORD PTR [esp+0x18],0x0
6400a9c3:	call   DWORD PTR ds:0x6402d06c
6400a9c9:	push   0x64028568
6400a9ce:	push   0xc
6400a9d0:	push   0x64028590
6400a9d5:	call   0x640059b0
6400a9da:	add    esp,0xc
6400a9dd:	lea    ecx,[esp+0x14]
6400a9e1:	push   ecx
6400a9e2:	mov    edi,eax
6400a9e4:	call   0x64009be0
6400a9e9:	push   0x640285ac
6400a9ee:	push   0x15
6400a9f0:	push   0x640285d4
6400a9f5:	mov    DWORD PTR [esp+0x34],0x0
6400a9fd:	call   0x640059b0
6400aa02:	add    esp,0xc
6400aa05:	lea    edx,[esp+0x10]
6400aa09:	push   edx
6400aa0a:	mov    edi,eax
6400aa0c:	call   0x64009be0
6400aa11:	lea    eax,[esp+0x14]
6400aa15:	push   eax
6400aa16:	lea    ecx,[esp+0x14]
6400aa1a:	push   ecx
6400aa1b:	lea    edx,[esp+0x20]
6400aa1f:	push   edx
6400aa20:	mov    BYTE PTR [esp+0x34],0x1
6400aa25:	call   0x6400a630
6400aa2a:	add    esp,0xc
6400aa2d:	mov    esi,DWORD PTR [esp+0x10]
6400aa31:	test   esi,esi
6400aa33:	je     0x6400aa69
6400aa35:	lea    eax,[esi+0x8]
6400aa38:	push   eax
6400aa39:	call   DWORD PTR ds:0x64025094
6400aa3f:	test   eax,eax
6400aa41:	jne    0x6400aa69
6400aa43:	mov    eax,DWORD PTR [esi]
6400aa45:	test   eax,eax
6400aa47:	je     0x6400aa50
6400aa49:	push   eax
6400aa4a:	call   DWORD PTR ds:0x640251a4
6400aa50:	mov    eax,DWORD PTR [esi+0x4]
6400aa53:	test   eax,eax
6400aa55:	je     0x6400aa60
6400aa57:	push   eax
6400aa58:	call   0x64013564
6400aa5d:	add    esp,0x4
6400aa60:	push   esi
6400aa61:	call   0x64012612
6400aa66:	add    esp,0x4
6400aa69:	mov    BYTE PTR [esp+0x28],0x4
6400aa6e:	mov    esi,DWORD PTR [esp+0x14]
6400aa72:	test   esi,esi
6400aa74:	je     0x6400aaaa
6400aa76:	lea    ecx,[esi+0x8]
6400aa79:	push   ecx
6400aa7a:	call   DWORD PTR ds:0x64025094
6400aa80:	test   eax,eax
6400aa82:	jne    0x6400aaaa
6400aa84:	mov    eax,DWORD PTR [esi]
6400aa86:	test   eax,eax
6400aa88:	je     0x6400aa91
6400aa8a:	push   eax
6400aa8b:	call   DWORD PTR ds:0x640251a4
6400aa91:	mov    eax,DWORD PTR [esi+0x4]
6400aa94:	test   eax,eax
6400aa96:	je     0x6400aaa1
6400aa98:	push   eax
6400aa99:	call   0x64013564
6400aa9e:	add    esp,0x4
6400aaa1:	push   esi
6400aaa2:	call   0x64012612
6400aaa7:	add    esp,0x4
6400aaaa:	mov    esi,DWORD PTR [esp+0x18]
6400aaae:	test   esi,esi
6400aab0:	je     0x6400aab6
6400aab2:	mov    eax,DWORD PTR [esi]
6400aab4:	jmp    0x6400aab8
6400aab6:	xor    eax,eax
6400aab8:	mov    edi,DWORD PTR [ebp+0x8]
6400aabb:	push   eax
6400aabc:	mov    ecx,edi
6400aabe:	call   0x640025a0
6400aac3:	test   esi,esi
6400aac5:	je     0x6400aafb
6400aac7:	lea    edx,[esi+0x8]
6400aaca:	push   edx
6400aacb:	call   DWORD PTR ds:0x64025094
6400aad1:	test   eax,eax
6400aad3:	jne    0x6400aafb
6400aad5:	mov    eax,DWORD PTR [esi]
6400aad7:	test   eax,eax
6400aad9:	je     0x6400aae2
6400aadb:	push   eax
6400aadc:	call   DWORD PTR ds:0x640251a4
6400aae2:	mov    eax,DWORD PTR [esi+0x4]
6400aae5:	test   eax,eax
6400aae7:	je     0x6400aaf2
6400aae9:	push   eax
6400aaea:	call   0x64013564
6400aaef:	add    esp,0x4
6400aaf2:	push   esi
6400aaf3:	call   0x64012612
6400aaf8:	add    esp,0x4
6400aafb:	mov    eax,edi
6400aafd:	mov    ecx,DWORD PTR [esp+0x20]
6400ab01:	mov    DWORD PTR fs:0x0,ecx
6400ab08:	pop    ecx
6400ab09:	pop    edi
6400ab0a:	pop    esi
6400ab0b:	mov    esp,ebp
6400ab0d:	pop    ebp
6400ab0e:	ret    
6400ab0f:	int3   
6400ab10:	mov    ecx,DWORD PTR [eax]
6400ab12:	push   ecx
6400ab13:	call   0x64012612
6400ab18:	pop    ecx
6400ab19:	ret    
6400ab1a:	int3   
6400ab1b:	int3   
6400ab1c:	int3   
6400ab1d:	int3   
6400ab1e:	int3   
6400ab1f:	int3   
6400ab20:	push   ebp
6400ab21:	mov    ebp,esp
6400ab23:	and    esp,0xfffffff8
6400ab26:	sub    esp,0x8
6400ab29:	push   ebx
6400ab2a:	mov    ebx,DWORD PTR [esi+0x4]
6400ab2d:	test   ebx,ebx
6400ab2f:	push   edi
6400ab30:	jne    0x6400ab36
6400ab32:	xor    edi,edi
6400ab34:	jmp    0x6400ab4e
6400ab36:	mov    ecx,DWORD PTR [esi+0x8]
6400ab39:	sub    ecx,ebx
6400ab3b:	mov    eax,0x92492493
6400ab40:	imul   ecx
6400ab42:	add    edx,ecx
6400ab44:	sar    edx,0x4
6400ab47:	mov    edi,edx
6400ab49:	shr    edi,0x1f
6400ab4c:	add    edi,edx
6400ab4e:	test   ebx,ebx
6400ab50:	je     0x6400aba1
6400ab52:	mov    ecx,DWORD PTR [esi+0xc]
6400ab55:	sub    ecx,ebx
6400ab57:	mov    eax,0x92492493
6400ab5c:	imul   ecx
6400ab5e:	add    edx,ecx
6400ab60:	sar    edx,0x4
6400ab63:	mov    eax,edx
6400ab65:	shr    eax,0x1f
6400ab68:	add    eax,edx
6400ab6a:	cmp    edi,eax
6400ab6c:	jae    0x6400aba1
6400ab6e:	mov    edx,DWORD PTR [ebp+0x8]
6400ab71:	mov    edi,DWORD PTR [esi+0x8]
6400ab74:	mov    BYTE PTR [esp+0x8],0x0
6400ab79:	mov    eax,DWORD PTR [esp+0x8]
6400ab7d:	mov    ecx,DWORD PTR [esp+0x8]
6400ab81:	push   eax
6400ab82:	push   ecx
6400ab83:	push   esi
6400ab84:	push   edx
6400ab85:	push   edi
6400ab86:	mov    ecx,0x1
6400ab8b:	call   0x6400b1c0
6400ab90:	add    esp,0x14
6400ab93:	add    edi,0x1c
6400ab96:	mov    DWORD PTR [esi+0x8],edi
6400ab99:	pop    edi
6400ab9a:	pop    ebx
6400ab9b:	mov    esp,ebp
6400ab9d:	pop    ebp
6400ab9e:	ret    0x4
6400aba1:	mov    edi,DWORD PTR [esi+0x8]
6400aba4:	cmp    ebx,edi
6400aba6:	jbe    0x6400abad
6400aba8:	call   0x640129c8
6400abad:	mov    eax,DWORD PTR [ebp+0x8]
6400abb0:	push   edi
6400abb1:	push   esi
6400abb2:	push   eax
6400abb3:	lea    ecx,[esp+0x14]
6400abb7:	push   ecx
6400abb8:	mov    eax,esi
6400abba:	call   0x6400ac00
6400abbf:	pop    edi
6400abc0:	pop    ebx
6400abc1:	mov    esp,ebp
6400abc3:	pop    ebp
6400abc4:	ret    0x4
6400abc7:	int3   
6400abc8:	int3   
6400abc9:	int3   
6400abca:	int3   
6400abcb:	int3   
6400abcc:	int3   
6400abcd:	int3   
6400abce:	int3   
6400abcf:	int3   
6400abd0:	mov    eax,DWORD PTR [ecx+0x4]
6400abd3:	test   eax,eax
6400abd5:	jne    0x6400abd8
6400abd7:	ret    
6400abd8:	mov    ecx,DWORD PTR [ecx+0x8]
6400abdb:	sub    ecx,eax
6400abdd:	mov    eax,0x92492493
6400abe2:	imul   ecx
6400abe4:	add    edx,ecx
6400abe6:	sar    edx,0x4
6400abe9:	mov    eax,edx
6400abeb:	shr    eax,0x1f
6400abee:	add    eax,edx
6400abf0:	ret    
6400abf1:	int3   
6400abf2:	int3   
6400abf3:	int3   
6400abf4:	int3   
6400abf5:	int3   
6400abf6:	int3   
6400abf7:	int3   
6400abf8:	int3   
6400abf9:	int3   
6400abfa:	int3   
6400abfb:	int3   
6400abfc:	int3   
6400abfd:	int3   
6400abfe:	int3   
6400abff:	int3   
6400ac00:	push   ecx
6400ac01:	push   ebx
6400ac02:	push   ebp
6400ac03:	mov    ebp,DWORD PTR [esp+0x1c]
6400ac07:	push   esi
6400ac08:	mov    esi,eax
6400ac0a:	push   edi
6400ac0b:	mov    edi,DWORD PTR [esi+0x4]
6400ac0e:	test   edi,edi
6400ac10:	je     0x6400ac2e
6400ac12:	mov    ebx,DWORD PTR [esi+0x8]
6400ac15:	mov    ecx,ebx
6400ac17:	sub    ecx,edi
6400ac19:	mov    eax,0x92492493
6400ac1e:	imul   ecx
6400ac20:	add    edx,ecx
6400ac22:	sar    edx,0x4
6400ac25:	mov    eax,edx
6400ac27:	shr    eax,0x1f
6400ac2a:	add    eax,edx
6400ac2c:	jne    0x6400ac36
6400ac2e:	mov    ebx,DWORD PTR [esp+0x20]
6400ac32:	xor    edi,edi
6400ac34:	jmp    0x6400ac67
6400ac36:	cmp    edi,ebx
6400ac38:	jbe    0x6400ac3f
6400ac3a:	call   0x640129c8
6400ac3f:	mov    ebx,DWORD PTR [esp+0x20]
6400ac43:	test   ebx,ebx
6400ac45:	je     0x6400ac4b
6400ac47:	cmp    ebx,esi
6400ac49:	je     0x6400ac50
6400ac4b:	call   0x640129c8
6400ac50:	mov    ecx,ebp
6400ac52:	sub    ecx,edi
6400ac54:	mov    eax,0x92492493
6400ac59:	imul   ecx
6400ac5b:	add    edx,ecx
6400ac5d:	sar    edx,0x4
6400ac60:	mov    edi,edx
6400ac62:	shr    edi,0x1f
6400ac65:	add    edi,edx
6400ac67:	mov    ecx,DWORD PTR [esp+0x1c]
6400ac6b:	push   ebp
6400ac6c:	push   ebx
6400ac6d:	push   ecx
6400ac6e:	mov    ecx,esi
6400ac70:	call   0x6400acf0
6400ac75:	mov    ebx,DWORD PTR [esi+0x4]
6400ac78:	cmp    ebx,DWORD PTR [esi+0x8]
6400ac7b:	jbe    0x6400ac82
6400ac7d:	call   0x640129c8
6400ac82:	lea    edx,[edi*8+0x0]
6400ac89:	sub    edx,edi
6400ac8b:	lea    edi,[ebx+edx*4]
6400ac8e:	cmp    edi,DWORD PTR [esi+0x8]
6400ac91:	mov    DWORD PTR [esp+0x24],ebx
6400ac95:	ja     0x6400ac9c
6400ac97:	cmp    edi,DWORD PTR [esi+0x4]
6400ac9a:	jae    0x6400aca1
6400ac9c:	call   0x640129c8
6400aca1:	mov    eax,DWORD PTR [esp+0x18]
6400aca5:	mov    DWORD PTR [eax+0x4],edi
6400aca8:	pop    edi
6400aca9:	mov    DWORD PTR [eax],esi
6400acab:	pop    esi
6400acac:	pop    ebp
6400acad:	pop    ebx
6400acae:	pop    ecx
6400acaf:	ret    0x10
6400acb2:	int3   
6400acb3:	int3   
6400acb4:	int3   
6400acb5:	int3   
6400acb6:	int3   
6400acb7:	int3   
6400acb8:	int3   
6400acb9:	int3   
6400acba:	int3   
6400acbb:	int3   
6400acbc:	int3   
6400acbd:	int3   
6400acbe:	int3   
6400acbf:	int3   
6400acc0:	push   ecx
6400acc1:	mov    ecx,DWORD PTR [esp+0x8]
6400acc5:	mov    BYTE PTR [esp],0x0
6400acc9:	mov    eax,DWORD PTR [esp]
6400accc:	push   eax
6400accd:	mov    eax,DWORD PTR [esp+0xc]
6400acd1:	push   ecx
6400acd2:	push   edx
6400acd3:	push   eax
6400acd4:	push   edi
6400acd5:	mov    ecx,esi
6400acd7:	call   0x6400b1c0
6400acdc:	lea    ecx,[esi*8+0x0]
6400ace3:	sub    ecx,esi
6400ace5:	lea    eax,[edi+ecx*4]
6400ace8:	add    esp,0x18
6400aceb:	ret    0x4
6400acee:	int3   
6400acef:	int3   
6400acf0:	push   ebp
6400acf1:	mov    ebp,esp
6400acf3:	push   0xffffffff
6400acf5:	push   0x64022dc8
6400acfa:	mov    eax,fs:0x0
6400ad00:	push   eax
6400ad01:	sub    esp,0x34
6400ad04:	mov    eax,ds:0x6402d09c
6400ad09:	xor    eax,ebp
6400ad0b:	mov    DWORD PTR [ebp-0x14],eax
6400ad0e:	push   ebx
6400ad0f:	push   esi
6400ad10:	push   edi
6400ad11:	push   eax
6400ad12:	lea    eax,[ebp-0xc]
6400ad15:	mov    fs:0x0,eax
6400ad1b:	mov    DWORD PTR [ebp-0x10],esp
6400ad1e:	mov    eax,DWORD PTR [ebp+0x8]
6400ad21:	push   0xffffffff
6400ad23:	xor    edi,edi
6400ad25:	mov    ebx,ecx
6400ad27:	push   edi
6400ad28:	push   eax
6400ad29:	lea    ecx,[ebp-0x30]
6400ad2c:	mov    DWORD PTR [ebp-0x3c],ebx
6400ad2f:	mov    DWORD PTR [ebp-0x18],0xf
6400ad36:	mov    DWORD PTR [ebp-0x1c],edi
6400ad39:	mov    BYTE PTR [ebp-0x2c],0x0
6400ad3d:	call   0x64001780
6400ad42:	mov    DWORD PTR [ebp-0x4],edi
6400ad45:	mov    ecx,DWORD PTR [ebx+0x4]
6400ad48:	cmp    ecx,edi
6400ad4a:	je     0x6400ad64
6400ad4c:	mov    esi,DWORD PTR [ebx+0xc]
6400ad4f:	sub    esi,ecx
6400ad51:	mov    eax,0x92492493
6400ad56:	imul   esi
6400ad58:	add    edx,esi
6400ad5a:	sar    edx,0x4
6400ad5d:	mov    edi,edx
6400ad5f:	shr    edi,0x1f
6400ad62:	add    edi,edx
6400ad64:	test   ecx,ecx
6400ad66:	jne    0x6400ad6c
6400ad68:	xor    eax,eax
6400ad6a:	jmp    0x6400ad84
6400ad6c:	mov    esi,DWORD PTR [ebx+0x8]
6400ad6f:	sub    esi,ecx
6400ad71:	mov    eax,0x92492493
6400ad76:	imul   esi
6400ad78:	add    edx,esi
6400ad7a:	sar    edx,0x4
6400ad7d:	mov    eax,edx
6400ad7f:	shr    eax,0x1f
6400ad82:	add    eax,edx
6400ad84:	mov    edx,0x9249249
6400ad89:	sub    edx,eax
6400ad8b:	cmp    edx,0x1
6400ad8e:	jae    0x6400ad95
6400ad90:	call   0x6400b030
6400ad95:	test   ecx,ecx
6400ad97:	jne    0x6400ad9d
6400ad99:	xor    eax,eax
6400ad9b:	jmp    0x6400adb5
6400ad9d:	mov    esi,DWORD PTR [ebx+0x8]
6400ada0:	sub    esi,ecx
6400ada2:	mov    eax,0x92492493
6400ada7:	imul   esi
6400ada9:	add    edx,esi
6400adab:	sar    edx,0x4
6400adae:	mov    eax,edx
6400adb0:	shr    eax,0x1f
6400adb3:	add    eax,edx
6400adb5:	add    eax,0x1
6400adb8:	cmp    edi,eax
6400adba:	jae    0x6400af16
6400adc0:	mov    eax,edi
6400adc2:	shr    eax,1
6400adc4:	mov    edx,0x9249249
6400adc9:	sub    edx,eax
6400adcb:	cmp    edx,edi
6400adcd:	jae    0x6400add3
6400adcf:	xor    edi,edi
6400add1:	jmp    0x6400add5
6400add3:	add    edi,eax
6400add5:	test   ecx,ecx
6400add7:	jne    0x6400addd
6400add9:	xor    eax,eax
6400addb:	jmp    0x6400adf5
6400addd:	mov    esi,DWORD PTR [ebx+0x8]
6400ade0:	sub    esi,ecx
6400ade2:	mov    eax,0x92492493
6400ade7:	imul   esi
6400ade9:	add    edx,esi
6400adeb:	sar    edx,0x4
6400adee:	mov    eax,edx
6400adf0:	shr    eax,0x1f
6400adf3:	add    eax,edx
6400adf5:	add    eax,0x1
6400adf8:	cmp    edi,eax
6400adfa:	jae    0x6400ae08
6400adfc:	mov    ecx,ebx
6400adfe:	call   0x6400abd0
6400ae03:	mov    edi,eax
6400ae05:	add    edi,0x1
6400ae08:	push   0x0
6400ae0a:	push   edi
6400ae0b:	call   0x6400b150
6400ae10:	mov    BYTE PTR [ebp-0x4],0x1
6400ae14:	mov    ecx,DWORD PTR [ebx+0x4]
6400ae17:	mov    BYTE PTR [ebp-0x34],0x0
6400ae1b:	mov    edx,DWORD PTR [ebp-0x34]
6400ae1e:	push   edx
6400ae1f:	mov    edx,DWORD PTR [ebp-0x34]
6400ae22:	push   edx
6400ae23:	mov    edx,DWORD PTR [ebp+0x10]
6400ae26:	push   ebx
6400ae27:	push   edx
6400ae28:	mov    edx,eax
6400ae2a:	mov    DWORD PTR [ebp-0x40],eax
6400ae2d:	mov    DWORD PTR [ebp-0x38],eax
6400ae30:	call   0x6400b2e0
6400ae35:	add    esp,0x18
6400ae38:	mov    esi,eax
6400ae3a:	mov    BYTE PTR [ebp-0x34],0x0
6400ae3e:	mov    eax,DWORD PTR [ebp-0x34]
6400ae41:	mov    ecx,DWORD PTR [ebp-0x34]
6400ae44:	push   eax
6400ae45:	push   ecx
6400ae46:	push   ebx
6400ae47:	lea    edx,[ebp-0x30]
6400ae4a:	push   edx
6400ae4b:	push   esi
6400ae4c:	mov    ecx,0x1
6400ae51:	mov    DWORD PTR [ebp-0x38],esi
6400ae54:	call   0x6400b1c0
6400ae59:	mov    eax,DWORD PTR [ebx+0x8]
6400ae5c:	add    esp,0x14
6400ae5f:	mov    BYTE PTR [ebp-0x34],0x0
6400ae63:	mov    ecx,DWORD PTR [ebp-0x34]
6400ae66:	mov    edx,DWORD PTR [ebp-0x34]
6400ae69:	push   ecx
6400ae6a:	mov    ecx,DWORD PTR [ebp+0x10]
6400ae6d:	push   edx
6400ae6e:	add    esi,0x1c
6400ae71:	push   ebx
6400ae72:	push   eax
6400ae73:	mov    edx,esi
6400ae75:	mov    DWORD PTR [ebp-0x38],esi
6400ae78:	call   0x6400b2e0
6400ae7d:	mov    esi,DWORD PTR [ebx+0x4]
6400ae80:	add    esp,0x10
6400ae83:	test   esi,esi
6400ae85:	jne    0x6400ae8b
6400ae87:	xor    eax,eax
6400ae89:	jmp    0x6400aea3
6400ae8b:	mov    ecx,DWORD PTR [ebx+0x8]
6400ae8e:	sub    ecx,esi
6400ae90:	mov    eax,0x92492493
6400ae95:	imul   ecx
6400ae97:	add    edx,ecx
6400ae99:	sar    edx,0x4
6400ae9c:	mov    eax,edx
6400ae9e:	shr    eax,0x1f
6400aea1:	add    eax,edx
6400aea3:	add    eax,0x1
6400aea6:	test   esi,esi
6400aea8:	mov    DWORD PTR [ebp-0x34],eax
6400aeab:	je     0x6400aecb
6400aead:	mov    eax,DWORD PTR [ebp-0x34]
6400aeb0:	mov    ecx,DWORD PTR [ebx+0x8]
6400aeb3:	push   eax
6400aeb4:	push   ebx
6400aeb5:	push   ecx
6400aeb6:	push   esi
6400aeb7:	call   0x6400b270
6400aebc:	mov    edx,DWORD PTR [ebx+0x4]
6400aebf:	push   edx
6400aec0:	call   0x64012612
6400aec5:	mov    eax,DWORD PTR [ebp-0x34]
6400aec8:	add    esp,0x14
6400aecb:	mov    ecx,DWORD PTR [ebp-0x40]
6400aece:	lea    edx,[edi*8+0x0]
6400aed5:	sub    edx,edi
6400aed7:	lea    edx,[ecx+edx*4]
6400aeda:	mov    DWORD PTR [ebx+0xc],edx
6400aedd:	lea    edx,[eax*8+0x0]
6400aee4:	sub    edx,eax
6400aee6:	lea    eax,[ecx+edx*4]
6400aee9:	mov    DWORD PTR [ebx+0x8],eax
6400aeec:	mov    DWORD PTR [ebx+0x4],ecx
6400aeef:	jmp    0x6400afd2
6400aef4:	mov    ecx,DWORD PTR [ebp-0x38]
6400aef7:	mov    esi,DWORD PTR [ebp-0x40]
6400aefa:	push   ecx
6400aefb:	mov    ecx,DWORD PTR [ebp-0x3c]
6400aefe:	push   esi
6400aeff:	call   0x6400b010
6400af04:	push   esi
6400af05:	call   0x64012612
6400af0a:	add    esp,0x4
6400af0d:	push   0x0
6400af0f:	push   0x0
6400af11:	call   0x64012a5b
6400af16:	mov    edi,DWORD PTR [ebx+0x8]
6400af19:	mov    esi,DWORD PTR [ebp+0x10]
6400af1c:	mov    ecx,edi
6400af1e:	sub    ecx,esi
6400af20:	mov    eax,0x92492493
6400af25:	imul   ecx
6400af27:	add    edx,ecx
6400af29:	sar    edx,0x4
6400af2c:	mov    eax,edx
6400af2e:	shr    eax,0x1f
6400af31:	add    eax,edx
6400af33:	cmp    eax,0x1
6400af36:	mov    edx,ebx
6400af38:	jae    0x6400afaa
6400af3a:	lea    ecx,[esi+0x1c]
6400af3d:	push   ecx
6400af3e:	push   edi
6400af3f:	push   esi
6400af40:	call   0x6400b0b0
6400af45:	mov    BYTE PTR [ebp-0x4],0x3
6400af49:	mov    edi,DWORD PTR [ebx+0x8]
6400af4c:	lea    edx,[ebp-0x30]
6400af4f:	push   edx
6400af50:	mov    ecx,edi
6400af52:	sub    ecx,esi
6400af54:	mov    eax,0x92492493
6400af59:	imul   ecx
6400af5b:	add    edx,ecx
6400af5d:	sar    edx,0x4
6400af60:	mov    eax,edx
6400af62:	shr    eax,0x1f
6400af65:	add    eax,edx
6400af67:	mov    esi,0x1
6400af6c:	sub    esi,eax
6400af6e:	mov    edx,ebx
6400af70:	call   0x6400acc0
6400af75:	mov    eax,DWORD PTR [ebp+0x10]
6400af78:	mov    DWORD PTR [ebp-0x4],0x0
6400af7f:	add    DWORD PTR [ebx+0x8],0x1c
6400af83:	mov    ebx,DWORD PTR [ebx+0x8]
6400af86:	lea    edi,[ebx-0x1c]
6400af89:	jmp    0x6400afca
6400af8b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400af8e:	mov    edx,DWORD PTR [ecx+0x8]
6400af91:	mov    eax,DWORD PTR [ebp+0x10]
6400af94:	add    edx,0x1c
6400af97:	push   edx
6400af98:	add    eax,0x1c
6400af9b:	push   eax
6400af9c:	call   0x6400b010
6400afa1:	push   0x0
6400afa3:	push   0x0
6400afa5:	call   0x64012a5b
6400afaa:	push   edi
6400afab:	lea    eax,[edi-0x1c]
6400afae:	push   edi
6400afaf:	push   eax
6400afb0:	mov    DWORD PTR [ebp-0x34],eax
6400afb3:	call   0x6400b0b0
6400afb8:	mov    DWORD PTR [ebx+0x8],eax
6400afbb:	mov    eax,DWORD PTR [ebp-0x34]
6400afbe:	mov    ebx,esi
6400afc0:	call   0x6400b100
6400afc5:	lea    edi,[esi+0x1c]
6400afc8:	mov    eax,esi
6400afca:	lea    ebx,[ebp-0x30]
6400afcd:	call   0x6400b0e0
6400afd2:	cmp    DWORD PTR [ebp-0x18],0x10
6400afd6:	jb     0x6400afe4
6400afd8:	mov    ecx,DWORD PTR [ebp-0x2c]
6400afdb:	push   ecx
6400afdc:	call   0x64012612
6400afe1:	add    esp,0x4
6400afe4:	mov    ecx,DWORD PTR [ebp-0xc]
6400afe7:	mov    DWORD PTR fs:0x0,ecx
6400afee:	pop    ecx
6400afef:	pop    edi
6400aff0:	pop    esi
6400aff1:	pop    ebx
6400aff2:	mov    ecx,DWORD PTR [ebp-0x14]
6400aff5:	xor    ecx,ebp
6400aff7:	call   0x64012e6c
6400affc:	mov    esp,ebp
6400affe:	pop    ebp
6400afff:	ret    0xc
6400b002:	int3   
6400b003:	int3   
6400b004:	int3   
6400b005:	int3   
6400b006:	int3   
6400b007:	int3   
6400b008:	int3   
6400b009:	int3   
6400b00a:	int3   
6400b00b:	int3   
6400b00c:	int3   
6400b00d:	int3   
6400b00e:	int3   
6400b00f:	int3   
6400b010:	mov    eax,DWORD PTR [esp+0x8]
6400b014:	mov    edx,DWORD PTR [esp+0x4]
6400b018:	push   eax
6400b019:	push   ecx
6400b01a:	mov    ecx,DWORD PTR [esp+0x10]
6400b01e:	push   ecx
6400b01f:	push   edx
6400b020:	call   0x6400b270
6400b025:	add    esp,0x10
6400b028:	ret    0x8
6400b02b:	int3   
6400b02c:	int3   
6400b02d:	int3   
6400b02e:	int3   
6400b02f:	int3   
6400b030:	push   ebp
6400b031:	mov    ebp,esp
6400b033:	and    esp,0xfffffff8
6400b036:	push   0xffffffff
6400b038:	push   0x64022d98
6400b03d:	mov    eax,fs:0x0
6400b043:	push   eax
6400b044:	sub    esp,0x4c
6400b047:	mov    eax,ds:0x6402d09c
6400b04c:	xor    eax,esp
6400b04e:	push   eax
6400b04f:	lea    eax,[esp+0x50]
6400b053:	mov    fs:0x0,eax
6400b059:	push   0x12
6400b05b:	push   0x64028600
6400b060:	lea    ecx,[esp+0x10]
6400b064:	mov    DWORD PTR [esp+0x28],0xf
6400b06c:	mov    DWORD PTR [esp+0x24],0x0
6400b074:	mov    BYTE PTR [esp+0x14],0x0
6400b079:	call   0x64001860
6400b07e:	lea    eax,[esp+0x8]
6400b082:	push   eax
6400b083:	lea    ecx,[esp+0x28]
6400b087:	mov    DWORD PTR [esp+0x5c],0x0
6400b08f:	call   0x64002d10
6400b094:	push   0x6402ab28
6400b099:	lea    ecx,[esp+0x28]
6400b09d:	push   ecx
6400b09e:	mov    DWORD PTR [esp+0x2c],0x6402531c
6400b0a6:	call   0x64012a5b
6400b0ab:	int3   
6400b0ac:	int3   
6400b0ad:	int3   
6400b0ae:	int3   
6400b0af:	int3   
6400b0b0:	push   ecx
6400b0b1:	mov    ecx,DWORD PTR [esp+0xc]
6400b0b5:	mov    BYTE PTR [esp],0x0
6400b0b9:	mov    eax,DWORD PTR [esp]
6400b0bc:	push   eax
6400b0bd:	mov    eax,DWORD PTR [esp+0x10]
6400b0c1:	push   ecx
6400b0c2:	mov    ecx,DWORD PTR [esp+0x10]
6400b0c6:	push   edx
6400b0c7:	mov    edx,DWORD PTR [esp+0x1c]
6400b0cb:	push   eax
6400b0cc:	call   0x6400b2e0
6400b0d1:	add    esp,0x14
6400b0d4:	ret    0xc
6400b0d7:	int3   
6400b0d8:	int3   
6400b0d9:	int3   
6400b0da:	int3   
6400b0db:	int3   
6400b0dc:	int3   
6400b0dd:	int3   
6400b0de:	int3   
6400b0df:	int3   
6400b0e0:	push   esi
6400b0e1:	mov    esi,eax
6400b0e3:	cmp    esi,edi
6400b0e5:	je     0x6400b0fa
6400b0e7:	push   0xffffffff
6400b0e9:	push   0x0
6400b0eb:	push   ebx
6400b0ec:	mov    ecx,esi
6400b0ee:	call   0x64001780
6400b0f3:	add    esi,0x1c
6400b0f6:	cmp    esi,edi
6400b0f8:	jne    0x6400b0e7
6400b0fa:	pop    esi
6400b0fb:	ret    
6400b0fc:	int3   
6400b0fd:	int3   
6400b0fe:	int3   
6400b0ff:	int3   
6400b100:	push   ecx
6400b101:	push   esi
6400b102:	mov    esi,eax
6400b104:	mov    BYTE PTR [esp+0x4],0x0
6400b109:	mov    eax,DWORD PTR [esp+0x4]
6400b10d:	mov    ecx,DWORD PTR [esp+0x4]
6400b111:	mov    edx,DWORD PTR [esp+0x4]
6400b115:	push   eax
6400b116:	push   ecx
6400b117:	push   edx
6400b118:	push   edi
6400b119:	push   ebx
6400b11a:	mov    ecx,esi
6400b11c:	call   0x6400b420
6400b121:	sub    esi,ebx
6400b123:	mov    eax,0x92492493
6400b128:	imul   esi
6400b12a:	add    edx,esi
6400b12c:	sar    edx,0x4
6400b12f:	mov    eax,edx
6400b131:	shr    eax,0x1f
6400b134:	add    eax,edx
6400b136:	lea    ecx,[eax*8+0x0]
6400b13d:	sub    ecx,eax
6400b13f:	add    ecx,ecx
6400b141:	add    esp,0x14
6400b144:	add    ecx,ecx
6400b146:	mov    eax,edi
6400b148:	sub    eax,ecx
6400b14a:	pop    esi
6400b14b:	pop    ecx
6400b14c:	ret    
6400b14d:	int3   
6400b14e:	int3   
6400b14f:	int3   
6400b150:	mov    ecx,DWORD PTR [esp+0x4]
6400b154:	sub    esp,0xc
6400b157:	test   ecx,ecx
6400b159:	ja     0x6400b177
6400b15b:	xor    ecx,ecx
6400b15d:	lea    edx,[ecx*8+0x0]
6400b164:	sub    edx,ecx
6400b166:	add    edx,edx
6400b168:	add    edx,edx
6400b16a:	push   edx
6400b16b:	call   0x640129f1
6400b170:	add    esp,0x4
6400b173:	add    esp,0xc
6400b176:	ret    
6400b177:	or     eax,0xffffffff
6400b17a:	xor    edx,edx
6400b17c:	div    ecx
6400b17e:	cmp    eax,0x1c
6400b181:	jae    0x6400b15d
6400b183:	lea    eax,[esp+0x10]
6400b187:	push   eax
6400b188:	lea    ecx,[esp+0x4]
6400b18c:	mov    DWORD PTR [esp+0x14],0x0
6400b194:	call   0x6401266d
6400b199:	push   0x6402aa5c
6400b19e:	lea    ecx,[esp+0x4]
6400b1a2:	push   ecx
6400b1a3:	mov    DWORD PTR [esp+0x8],0x64025304
6400b1ab:	call   0x64012a5b
6400b1b0:	int3   
6400b1b1:	int3   
6400b1b2:	int3   
6400b1b3:	int3   
6400b1b4:	int3   
6400b1b5:	int3   
6400b1b6:	int3   
6400b1b7:	int3   
6400b1b8:	int3   
6400b1b9:	int3   
6400b1ba:	int3   
6400b1bb:	int3   
6400b1bc:	int3   
6400b1bd:	int3   
6400b1be:	int3   
6400b1bf:	int3   
6400b1c0:	push   ebp
6400b1c1:	mov    ebp,esp
6400b1c3:	push   0xffffffff
6400b1c5:	push   0x640229c1
6400b1ca:	mov    eax,fs:0x0
6400b1d0:	push   eax
6400b1d1:	sub    esp,0x10
6400b1d4:	push   ebx
6400b1d5:	push   esi
6400b1d6:	push   edi
6400b1d7:	mov    eax,ds:0x6402d09c
6400b1dc:	xor    eax,ebp
6400b1de:	push   eax
6400b1df:	lea    eax,[ebp-0xc]
6400b1e2:	mov    fs:0x0,eax
6400b1e8:	mov    DWORD PTR [ebp-0x10],esp
6400b1eb:	mov    edi,ecx
6400b1ed:	mov    esi,DWORD PTR [ebp+0x8]
6400b1f0:	xor    ebx,ebx
6400b1f2:	mov    DWORD PTR [ebp-0x14],esi
6400b1f5:	mov    DWORD PTR [ebp-0x4],ebx
6400b1f8:	cmp    edi,ebx
6400b1fa:	jbe    0x6400b258
6400b1fc:	mov    DWORD PTR [ebp-0x18],esi
6400b1ff:	mov    DWORD PTR [ebp-0x1c],esi
6400b202:	cmp    esi,ebx
6400b204:	mov    BYTE PTR [ebp-0x4],0x1
6400b208:	je     0x6400b225
6400b20a:	mov    eax,DWORD PTR [ebp+0xc]
6400b20d:	push   0xffffffff
6400b20f:	push   ebx
6400b210:	mov    DWORD PTR [esi+0x18],0xf
6400b217:	mov    DWORD PTR [esi+0x14],ebx
6400b21a:	push   eax
6400b21b:	mov    ecx,esi
6400b21d:	mov    BYTE PTR [esi+0x4],bl
6400b220:	call   0x64001780
6400b225:	sub    edi,0x1
6400b228:	add    esi,0x1c
6400b22b:	mov    BYTE PTR [ebp-0x4],bl
6400b22e:	mov    DWORD PTR [ebp+0x8],esi
6400b231:	jmp    0x6400b1f8
6400b233:	mov    esi,DWORD PTR [ebp-0x14]
6400b236:	mov    edi,DWORD PTR [ebp+0x8]
6400b239:	cmp    esi,edi
6400b23b:	je     0x6400b24f
6400b23d:	mov    ebx,DWORD PTR [ebp+0x10]
6400b240:	push   esi
6400b241:	mov    ecx,ebx
6400b243:	call   0x6400b2b0
6400b248:	add    esi,0x1c
6400b24b:	cmp    esi,edi
6400b24d:	jne    0x6400b240
6400b24f:	xor    ebx,ebx
6400b251:	push   ebx
6400b252:	push   ebx
6400b253:	call   0x64012a5b
6400b258:	mov    ecx,DWORD PTR [ebp-0xc]
6400b25b:	mov    DWORD PTR fs:0x0,ecx
6400b262:	pop    ecx
6400b263:	pop    edi
6400b264:	pop    esi
6400b265:	pop    ebx
6400b266:	mov    esp,ebp
6400b268:	pop    ebp
6400b269:	ret    
6400b26a:	int3   
6400b26b:	int3   
6400b26c:	int3   
6400b26d:	int3   
6400b26e:	int3   
6400b26f:	int3   
6400b270:	push   esi
6400b271:	mov    esi,DWORD PTR [esp+0x8]
6400b275:	push   edi
6400b276:	mov    edi,DWORD PTR [esp+0x10]
6400b27a:	cmp    esi,edi
6400b27c:	je     0x6400b2a8
6400b27e:	push   ebx
6400b27f:	xor    ebx,ebx
6400b281:	cmp    DWORD PTR [esi+0x18],0x10
6400b285:	jb     0x6400b293
6400b287:	mov    eax,DWORD PTR [esi+0x4]
6400b28a:	push   eax
6400b28b:	call   0x64012612
6400b290:	add    esp,0x4
6400b293:	mov    DWORD PTR [esi+0x18],0xf
6400b29a:	mov    DWORD PTR [esi+0x14],ebx
6400b29d:	mov    BYTE PTR [esi+0x4],bl
6400b2a0:	add    esi,0x1c
6400b2a3:	cmp    esi,edi
6400b2a5:	jne    0x6400b281
6400b2a7:	pop    ebx
6400b2a8:	pop    edi
6400b2a9:	pop    esi
6400b2aa:	ret    
6400b2ab:	int3   
6400b2ac:	int3   
6400b2ad:	int3   
6400b2ae:	int3   
6400b2af:	int3   
6400b2b0:	push   esi
6400b2b1:	mov    esi,DWORD PTR [esp+0x8]
6400b2b5:	cmp    DWORD PTR [esi+0x18],0x10
6400b2b9:	jb     0x6400b2c7
6400b2bb:	mov    eax,DWORD PTR [esi+0x4]
6400b2be:	push   eax
6400b2bf:	call   0x64012612
6400b2c4:	add    esp,0x4
6400b2c7:	xor    eax,eax
6400b2c9:	mov    DWORD PTR [esi+0x18],0xf
6400b2d0:	mov    DWORD PTR [esi+0x14],eax
6400b2d3:	mov    BYTE PTR [esi+0x4],al
6400b2d6:	pop    esi
6400b2d7:	ret    0x4
6400b2da:	int3   
6400b2db:	int3   
6400b2dc:	int3   
6400b2dd:	int3   
6400b2de:	int3   
6400b2df:	int3   
6400b2e0:	push   ebp
6400b2e1:	mov    ebp,esp
6400b2e3:	push   0xffffffff
6400b2e5:	push   0x64022ca9
6400b2ea:	mov    eax,fs:0x0
6400b2f0:	push   eax
6400b2f1:	sub    esp,0x44
6400b2f4:	mov    eax,ds:0x6402d09c
6400b2f9:	xor    eax,ebp
6400b2fb:	mov    DWORD PTR [ebp-0x14],eax
6400b2fe:	push   ebx
6400b2ff:	push   esi
6400b300:	push   edi
6400b301:	push   eax
6400b302:	lea    eax,[ebp-0xc]
6400b305:	mov    fs:0x0,eax
6400b30b:	mov    DWORD PTR [ebp-0x10],esp
6400b30e:	mov    esi,edx
6400b310:	xor    eax,eax
6400b312:	mov    edi,ecx
6400b314:	mov    DWORD PTR [ebp-0x44],esi
6400b317:	mov    DWORD PTR [ebp-0x48],esi
6400b31a:	mov    DWORD PTR [ebp-0x18],0xf
6400b321:	mov    DWORD PTR [ebp-0x1c],eax
6400b324:	mov    BYTE PTR [ebp-0x2c],al
6400b327:	mov    DWORD PTR [ebp-0x4],eax
6400b32a:	mov    BYTE PTR [ebp-0x4],0x1
6400b32e:	mov    edi,edi
6400b330:	cmp    edi,DWORD PTR [ebp+0x8]
6400b333:	je     0x6400b3e9
6400b339:	mov    DWORD PTR [ebp-0x4c],esi
6400b33c:	mov    DWORD PTR [ebp-0x50],esi
6400b33f:	cmp    esi,eax
6400b341:	mov    BYTE PTR [ebp-0x4],0x2
6400b345:	je     0x6400b362
6400b347:	push   0xffffffff
6400b349:	mov    DWORD PTR [esi+0x14],eax
6400b34c:	mov    DWORD PTR [esi+0x18],0xf
6400b353:	push   eax
6400b354:	mov    BYTE PTR [esi+0x4],al
6400b357:	lea    eax,[ebp-0x30]
6400b35a:	push   eax
6400b35b:	mov    ecx,esi
6400b35d:	call   0x64001780
6400b362:	mov    BYTE PTR [ebp-0x4],0x1
6400b366:	mov    ebx,DWORD PTR [esi+0x10]
6400b369:	mov    eax,DWORD PTR [esi+0x4]
6400b36c:	mov    ecx,DWORD PTR [esi+0x8]
6400b36f:	mov    edx,DWORD PTR [esi+0xc]
6400b372:	mov    DWORD PTR [ebp-0x34],ebx
6400b375:	mov    ebx,DWORD PTR [edi+0x4]
6400b378:	mov    DWORD PTR [esi+0x4],ebx
6400b37b:	mov    ebx,DWORD PTR [edi+0x8]
6400b37e:	mov    DWORD PTR [esi+0x8],ebx
6400b381:	mov    ebx,DWORD PTR [edi+0xc]
6400b384:	mov    DWORD PTR [esi+0xc],ebx
6400b387:	mov    ebx,DWORD PTR [edi+0x10]
6400b38a:	mov    DWORD PTR [esi+0x10],ebx
6400b38d:	mov    DWORD PTR [edi+0x4],eax
6400b390:	mov    DWORD PTR [edi+0x8],ecx
6400b393:	mov    ecx,DWORD PTR [ebp-0x34]
6400b396:	mov    DWORD PTR [edi+0xc],edx
6400b399:	mov    edx,DWORD PTR [edi+0x14]
6400b39c:	mov    DWORD PTR [edi+0x10],ecx
6400b39f:	mov    eax,DWORD PTR [esi+0x14]
6400b3a2:	mov    DWORD PTR [esi+0x14],edx
6400b3a5:	mov    ecx,DWORD PTR [edi+0x18]
6400b3a8:	mov    DWORD PTR [edi+0x14],eax
6400b3ab:	mov    eax,DWORD PTR [esi+0x18]
6400b3ae:	mov    DWORD PTR [esi+0x18],ecx
6400b3b1:	mov    DWORD PTR [edi+0x18],eax
6400b3b4:	add    esi,0x1c
6400b3b7:	add    edi,0x1c
6400b3ba:	mov    DWORD PTR [ebp-0x44],esi
6400b3bd:	xor    eax,eax
6400b3bf:	jmp    0x6400b330
6400b3c4:	mov    esi,DWORD PTR [ebp-0x48]
6400b3c7:	mov    edi,DWORD PTR [ebp-0x44]
6400b3ca:	cmp    esi,edi
6400b3cc:	je     0x6400b3e0
6400b3ce:	mov    ebx,DWORD PTR [ebp+0xc]
6400b3d1:	push   esi
6400b3d2:	mov    ecx,ebx
6400b3d4:	call   0x6400b2b0
6400b3d9:	add    esi,0x1c
6400b3dc:	cmp    esi,edi
6400b3de:	jne    0x6400b3d1
6400b3e0:	push   0x0
6400b3e2:	push   0x0
6400b3e4:	call   0x64012a5b
6400b3e9:	cmp    DWORD PTR [ebp-0x18],0x10
6400b3ed:	jb     0x6400b3fb
6400b3ef:	mov    edx,DWORD PTR [ebp-0x2c]
6400b3f2:	push   edx
6400b3f3:	call   0x64012612
6400b3f8:	add    esp,0x4
6400b3fb:	mov    eax,esi
6400b3fd:	mov    ecx,DWORD PTR [ebp-0xc]
6400b400:	mov    DWORD PTR fs:0x0,ecx
6400b407:	pop    ecx
6400b408:	pop    edi
6400b409:	pop    esi
6400b40a:	pop    ebx
6400b40b:	mov    ecx,DWORD PTR [ebp-0x14]
6400b40e:	xor    ecx,ebp
6400b410:	call   0x64012e6c
6400b415:	mov    esp,ebp
6400b417:	pop    ebp
6400b418:	ret    
6400b419:	int3   
6400b41a:	int3   
6400b41b:	int3   
6400b41c:	int3   
6400b41d:	int3   
6400b41e:	int3   
6400b41f:	int3   
6400b420:	push   ecx
6400b421:	mov    eax,ds:0x6402d09c
6400b426:	xor    eax,esp
6400b428:	mov    DWORD PTR [esp],eax
6400b42b:	cmp    DWORD PTR [esp+0x8],ecx
6400b42f:	mov    eax,DWORD PTR [esp+0xc]
6400b433:	je     0x6400b498
6400b435:	push   ebx
6400b436:	push   ebp
6400b437:	push   esi
6400b438:	push   edi
6400b439:	lea    esp,[esp+0x0]
6400b440:	mov    ebp,DWORD PTR [ecx-0x18]
6400b443:	mov    edx,DWORD PTR [eax-0x18]
6400b446:	mov    esi,DWORD PTR [eax-0x14]
6400b449:	mov    edi,DWORD PTR [eax-0x10]
6400b44c:	mov    ebx,DWORD PTR [eax-0xc]
6400b44f:	sub    ecx,0x1c
6400b452:	sub    eax,0x1c
6400b455:	cmp    ecx,DWORD PTR [esp+0x18]
6400b459:	mov    DWORD PTR [eax+0x4],ebp
6400b45c:	mov    ebp,DWORD PTR [ecx+0x8]
6400b45f:	mov    DWORD PTR [eax+0x8],ebp
6400b462:	mov    ebp,DWORD PTR [ecx+0xc]
6400b465:	mov    DWORD PTR [eax+0xc],ebp
6400b468:	mov    ebp,DWORD PTR [ecx+0x10]
6400b46b:	mov    DWORD PTR [eax+0x10],ebp
6400b46e:	mov    DWORD PTR [ecx+0x4],edx
6400b471:	mov    DWORD PTR [ecx+0x8],esi
6400b474:	mov    esi,DWORD PTR [ecx+0x14]
6400b477:	mov    DWORD PTR [ecx+0xc],edi
6400b47a:	mov    DWORD PTR [ecx+0x10],ebx
6400b47d:	mov    edx,DWORD PTR [eax+0x14]
6400b480:	mov    DWORD PTR [eax+0x14],esi
6400b483:	mov    esi,DWORD PTR [ecx+0x18]
6400b486:	mov    DWORD PTR [ecx+0x14],edx
6400b489:	mov    edx,DWORD PTR [eax+0x18]
6400b48c:	mov    DWORD PTR [eax+0x18],esi
6400b48f:	mov    DWORD PTR [ecx+0x18],edx
6400b492:	jne    0x6400b440
6400b494:	pop    edi
6400b495:	pop    esi
6400b496:	pop    ebp
6400b497:	pop    ebx
6400b498:	mov    ecx,DWORD PTR [esp]
6400b49b:	xor    ecx,esp
6400b49d:	call   0x64012e6c
6400b4a2:	pop    ecx
6400b4a3:	ret    
6400b4a4:	int3   
6400b4a5:	int3   
6400b4a6:	int3   
6400b4a7:	int3   
6400b4a8:	int3   
6400b4a9:	int3   
6400b4aa:	int3   
6400b4ab:	int3   
6400b4ac:	int3   
6400b4ad:	int3   
6400b4ae:	int3   
6400b4af:	int3   
6400b4b0:	sub    esp,0x800
6400b4b6:	push   ebx
6400b4b7:	push   ebp
6400b4b8:	xor    ecx,ecx
6400b4ba:	push   esi
6400b4bb:	lea    eax,[ecx+0x1]
6400b4be:	push   edi
6400b4bf:	nop
6400b4c0:	mov    edx,eax
6400b4c2:	and    dl,0x80
6400b4c5:	neg    dl
6400b4c7:	lea    esi,[eax+eax*1]
6400b4ca:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400b4d1:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400b4d5:	sbb    edx,edx
6400b4d7:	and    edx,0x1b
6400b4da:	xor    edx,esi
6400b4dc:	xor    edx,eax
6400b4de:	and    edx,0xff
6400b4e4:	add    ecx,0x1
6400b4e7:	cmp    ecx,0x100
6400b4ed:	mov    eax,edx
6400b4ef:	jl     0x6400b4c0
6400b4f1:	mov    eax,0x1
6400b4f6:	mov    ecx,0x6402f940
6400b4fb:	jmp    0x6400b500
6400b4fd:	lea    ecx,[ecx+0x0]
6400b500:	mov    edx,eax
6400b502:	and    dl,0x80
6400b505:	neg    dl
6400b507:	mov    DWORD PTR [ecx],eax
6400b509:	sbb    edx,edx
6400b50b:	and    edx,0x1b
6400b50e:	add    eax,eax
6400b510:	xor    edx,eax
6400b512:	and    edx,0xff
6400b518:	add    ecx,0x4
6400b51b:	cmp    ecx,0x6402f968
6400b521:	mov    eax,edx
6400b523:	jl     0x6400b500
6400b525:	mov    BYTE PTR ds:0x6402f040,0x63
6400b52c:	mov    BYTE PTR ds:0x640311cb,0x0
6400b533:	mov    ebx,0x1
6400b538:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400b53c:	add    ecx,ecx
6400b53e:	add    ecx,ecx
6400b540:	lea    edx,[esp+0x80c]
6400b547:	sub    edx,ecx
6400b549:	mov    eax,DWORD PTR [edx]
6400b54b:	mov    ecx,eax
6400b54d:	sar    ecx,0x7
6400b550:	lea    edx,[eax+eax*1]
6400b553:	or     ecx,edx
6400b555:	and    ecx,0xff
6400b55b:	xor    eax,ecx
6400b55d:	mov    edx,ecx
6400b55f:	sar    edx,0x7
6400b562:	add    ecx,ecx
6400b564:	or     edx,ecx
6400b566:	and    edx,0xff
6400b56c:	xor    eax,edx
6400b56e:	mov    ecx,edx
6400b570:	add    edx,edx
6400b572:	sar    ecx,0x7
6400b575:	or     ecx,edx
6400b577:	and    ecx,0xff
6400b57d:	xor    eax,ecx
6400b57f:	mov    edx,ecx
6400b581:	sar    edx,0x7
6400b584:	add    ecx,ecx
6400b586:	or     edx,ecx
6400b588:	xor    edx,0x63
6400b58b:	and    edx,0xff
6400b591:	xor    eax,edx
6400b593:	mov    BYTE PTR [ebx+0x6402f040],al
6400b599:	mov    BYTE PTR [eax+0x64031168],bl
6400b59f:	add    ebx,0x1
6400b5a2:	cmp    ebx,0x100
6400b5a8:	jl     0x6400b538
6400b5aa:	xor    ecx,ecx
6400b5ac:	lea    esp,[esp+0x0]
6400b5b0:	movzx  edx,BYTE PTR [ecx+0x6402f040]
6400b5b7:	mov    eax,edx
6400b5b9:	and    al,0x80
6400b5bb:	neg    al
6400b5bd:	lea    esi,[edx+edx*1]
6400b5c0:	sbb    eax,eax
6400b5c2:	and    eax,0x1b
6400b5c5:	xor    eax,esi
6400b5c7:	and    eax,0xff
6400b5cc:	mov    esi,eax
6400b5ce:	xor    eax,edx
6400b5d0:	shl    eax,0x8
6400b5d3:	xor    eax,edx
6400b5d5:	shl    eax,0x8
6400b5d8:	xor    eax,edx
6400b5da:	shl    eax,0x8
6400b5dd:	xor    eax,esi
6400b5df:	mov    DWORD PTR [ecx*4+0x64030d68],eax
6400b5e6:	rol    eax,0x8
6400b5e9:	mov    DWORD PTR [ecx*4+0x64030968],eax
6400b5f0:	rol    eax,0x8
6400b5f3:	mov    DWORD PTR [ecx*4+0x64030568],eax
6400b5fa:	rol    eax,0x8
6400b5fd:	mov    DWORD PTR [ecx*4+0x64030168],eax
6400b604:	movzx  eax,BYTE PTR [ecx+0x64031168]
6400b60b:	test   eax,eax
6400b60d:	je     0x6400b661
6400b60f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400b613:	mov    edx,DWORD PTR [esp+0x48]
6400b617:	lea    eax,[esi+edx*1]
6400b61a:	cdq    
6400b61b:	mov    edi,0xff
6400b620:	idiv   edi
6400b622:	mov    eax,DWORD PTR [esp+0x34]
6400b626:	add    eax,esi
6400b628:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400b62f:	cdq    
6400b630:	idiv   edi
6400b632:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400b639:	mov    edx,DWORD PTR [esp+0x44]
6400b63d:	lea    eax,[esi+edx*1]
6400b640:	cdq    
6400b641:	idiv   edi
6400b643:	mov    eax,DWORD PTR [esp+0x3c]
6400b647:	add    eax,esi
6400b649:	mov    esi,0xff
6400b64e:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400b655:	cdq    
6400b656:	idiv   esi
6400b658:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400b65f:	jmp    0x6400b669
6400b661:	xor    ebp,ebp
6400b663:	xor    ebx,ebx
6400b665:	xor    edi,edi
6400b667:	xor    edx,edx
6400b669:	shl    edx,0x8
6400b66c:	xor    edx,edi
6400b66e:	shl    edx,0x8
6400b671:	xor    edx,ebx
6400b673:	shl    edx,0x8
6400b676:	xor    edx,ebp
6400b678:	mov    DWORD PTR [ecx*4+0x6402fd68],edx
6400b67f:	rol    edx,0x8
6400b682:	mov    DWORD PTR [ecx*4+0x6402f968],edx
6400b689:	rol    edx,0x8
6400b68c:	mov    DWORD PTR [ecx*4+0x6402f540],edx
6400b693:	rol    edx,0x8
6400b696:	mov    DWORD PTR [ecx*4+0x6402f140],edx
6400b69d:	add    ecx,0x1
6400b6a0:	cmp    ecx,0x100
6400b6a6:	jl     0x6400b5b0
6400b6ac:	pop    edi
6400b6ad:	pop    esi
6400b6ae:	pop    ebp
6400b6af:	pop    ebx
6400b6b0:	add    esp,0x800
6400b6b6:	ret    
6400b6b7:	int3   
6400b6b8:	int3   
6400b6b9:	int3   
6400b6ba:	int3   
6400b6bb:	int3   
6400b6bc:	int3   
6400b6bd:	int3   
6400b6be:	int3   
6400b6bf:	int3   
6400b6c0:	cmp    DWORD PTR ds:0x6403126c,0x0
6400b6c7:	push   ebx
6400b6c8:	push   esi
6400b6c9:	push   edi
6400b6ca:	mov    edi,eax
6400b6cc:	jne    0x6400b6dd
6400b6ce:	call   0x6400b4b0
6400b6d3:	mov    DWORD PTR ds:0x6403126c,0x1
6400b6dd:	lea    eax,[edi+0x8]
6400b6e0:	mov    ecx,0x6402e382
6400b6e5:	mov    esi,eax
6400b6e7:	mov    DWORD PTR [edi],0xa
6400b6ed:	mov    DWORD PTR [edi+0x4],eax
6400b6f0:	sub    esi,ecx
6400b6f2:	movzx  ebx,BYTE PTR [ecx-0x1]
6400b6f6:	xor    edx,edx
6400b6f8:	mov    dh,BYTE PTR [ecx+0x1]
6400b6fb:	add    ecx,0x4
6400b6fe:	mov    dl,BYTE PTR [ecx-0x4]
6400b701:	shl    edx,0x8
6400b704:	or     edx,ebx
6400b706:	movzx  ebx,BYTE PTR [ecx-0x6]
6400b70a:	shl    edx,0x8
6400b70d:	or     edx,ebx
6400b70f:	cmp    ecx,0x6402e392
6400b715:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400b719:	jl     0x6400b6f2
6400b71b:	mov    edi,DWORD PTR [edi]
6400b71d:	sub    edi,0xa
6400b720:	je     0x6400b9dc
6400b726:	sub    edi,0x2
6400b729:	je     0x6400b80f
6400b72f:	sub    edi,0x2
6400b732:	jne    0x6400bbbf
6400b738:	push   ebp
6400b739:	mov    ebp,0x6402f940
6400b73e:	mov    edi,edi
6400b740:	mov    edi,DWORD PTR [eax+0x1c]
6400b743:	xor    edx,edx
6400b745:	mov    ecx,edi
6400b747:	and    ecx,0xff
6400b74d:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b753:	movzx  ecx,BYTE PTR [eax+0x1f]
6400b757:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b75e:	xor    edx,ecx
6400b760:	movzx  ecx,BYTE PTR [eax+0x1e]
6400b764:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b76b:	shl    edx,0x8
6400b76e:	xor    edx,ecx
6400b770:	movzx  ecx,BYTE PTR [eax+0x1d]
6400b774:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b77b:	mov    esi,DWORD PTR [eax+0x8]
6400b77e:	shl    edx,0x8
6400b781:	xor    edx,ecx
6400b783:	xor    edx,DWORD PTR [eax]
6400b785:	xor    ebx,ebx
6400b787:	mov    ecx,edx
6400b789:	xor    ecx,DWORD PTR [ebp+0x0]
6400b78c:	mov    edx,DWORD PTR [eax+0x4]
6400b78f:	xor    edx,ecx
6400b791:	mov    DWORD PTR [eax+0x20],ecx
6400b794:	mov    ecx,DWORD PTR [eax+0xc]
6400b797:	xor    esi,edx
6400b799:	xor    ecx,esi
6400b79b:	mov    DWORD PTR [eax+0x2c],ecx
6400b79e:	mov    DWORD PTR [eax+0x24],edx
6400b7a1:	movzx  edx,BYTE PTR [eax+0x2f]
6400b7a5:	mov    DWORD PTR [eax+0x28],esi
6400b7a8:	mov    bh,BYTE PTR [edx+0x6402f040]
6400b7ae:	movzx  edx,BYTE PTR [eax+0x2e]
6400b7b2:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b7b9:	xor    ebx,edx
6400b7bb:	movzx  edx,BYTE PTR [eax+0x2d]
6400b7bf:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b7c6:	and    ecx,0xff
6400b7cc:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b7d3:	shl    ebx,0x8
6400b7d6:	xor    ebx,edx
6400b7d8:	mov    edx,DWORD PTR [eax+0x14]
6400b7db:	shl    ebx,0x8
6400b7de:	xor    ecx,ebx
6400b7e0:	xor    ecx,DWORD PTR [eax+0x10]
6400b7e3:	add    ebp,0x4
6400b7e6:	xor    edx,ecx
6400b7e8:	mov    DWORD PTR [eax+0x30],ecx
6400b7eb:	mov    ecx,DWORD PTR [eax+0x18]
6400b7ee:	xor    ecx,edx
6400b7f0:	mov    DWORD PTR [eax+0x38],ecx
6400b7f3:	xor    ecx,edi
6400b7f5:	mov    DWORD PTR [eax+0x34],edx
6400b7f8:	mov    DWORD PTR [eax+0x3c],ecx
6400b7fb:	add    eax,0x20
6400b7fe:	cmp    ebp,0x6402f95c
6400b804:	jl     0x6400b740
6400b80a:	pop    ebp
6400b80b:	pop    edi
6400b80c:	pop    esi
6400b80d:	pop    ebx
6400b80e:	ret    
6400b80f:	mov    esi,0x6402f944
6400b814:	mov    edi,DWORD PTR [eax+0x14]
6400b817:	xor    ecx,ecx
6400b819:	mov    edx,edi
6400b81b:	and    edx,0xff
6400b821:	mov    ch,BYTE PTR [edx+0x6402f040]
6400b827:	movzx  edx,BYTE PTR [eax+0x17]
6400b82b:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b832:	xor    ecx,edx
6400b834:	movzx  edx,BYTE PTR [eax+0x16]
6400b838:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b83f:	shl    ecx,0x8
6400b842:	xor    ecx,edx
6400b844:	movzx  edx,BYTE PTR [eax+0x15]
6400b848:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b84f:	shl    ecx,0x8
6400b852:	xor    ecx,edx
6400b854:	xor    ecx,DWORD PTR [esi-0x4]
6400b857:	mov    edx,DWORD PTR [eax+0x4]
6400b85a:	xor    ecx,DWORD PTR [eax]
6400b85c:	xor    edx,ecx
6400b85e:	mov    DWORD PTR [eax+0x18],ecx
6400b861:	mov    ecx,DWORD PTR [eax+0x8]
6400b864:	xor    ecx,edx
6400b866:	mov    DWORD PTR [eax+0x1c],edx
6400b869:	mov    edx,DWORD PTR [eax+0xc]
6400b86c:	xor    edx,ecx
6400b86e:	mov    DWORD PTR [eax+0x20],ecx
6400b871:	mov    ecx,DWORD PTR [eax+0x10]
6400b874:	xor    ecx,edx
6400b876:	mov    DWORD PTR [eax+0x28],ecx
6400b879:	mov    DWORD PTR [eax+0x24],edx
6400b87c:	xor    ecx,edi
6400b87e:	mov    DWORD PTR [eax+0x2c],ecx
6400b881:	and    ecx,0xff
6400b887:	xor    edx,edx
6400b889:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b88f:	movzx  ecx,BYTE PTR [eax+0x2f]
6400b893:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b89a:	xor    edx,ecx
6400b89c:	movzx  ecx,BYTE PTR [eax+0x2e]
6400b8a0:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b8a7:	shl    edx,0x8
6400b8aa:	xor    edx,ecx
6400b8ac:	movzx  ecx,BYTE PTR [eax+0x2d]
6400b8b0:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b8b7:	mov    edi,DWORD PTR [eax+0x28]
6400b8ba:	shl    edx,0x8
6400b8bd:	xor    edx,ecx
6400b8bf:	xor    edx,DWORD PTR [eax+0x18]
6400b8c2:	mov    ecx,edx
6400b8c4:	xor    ecx,DWORD PTR [esi]
6400b8c6:	mov    edx,DWORD PTR [eax+0x1c]
6400b8c9:	xor    edx,ecx
6400b8cb:	mov    DWORD PTR [eax+0x30],ecx
6400b8ce:	mov    ecx,DWORD PTR [eax+0x20]
6400b8d1:	xor    ecx,edx
6400b8d3:	mov    DWORD PTR [eax+0x34],edx
6400b8d6:	mov    edx,DWORD PTR [eax+0x24]
6400b8d9:	xor    edx,ecx
6400b8db:	mov    DWORD PTR [eax+0x38],ecx
6400b8de:	mov    ecx,DWORD PTR [eax+0x2c]
6400b8e1:	xor    edi,edx
6400b8e3:	mov    DWORD PTR [eax+0x3c],edx
6400b8e6:	xor    ecx,edi
6400b8e8:	mov    DWORD PTR [eax+0x44],ecx
6400b8eb:	and    ecx,0xff
6400b8f1:	xor    edx,edx
6400b8f3:	mov    DWORD PTR [eax+0x40],edi
6400b8f6:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b8fc:	movzx  ecx,BYTE PTR [eax+0x47]
6400b900:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b907:	xor    edx,ecx
6400b909:	movzx  ecx,BYTE PTR [eax+0x46]
6400b90d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b914:	shl    edx,0x8
6400b917:	xor    edx,ecx
6400b919:	movzx  ecx,BYTE PTR [eax+0x45]
6400b91d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b924:	shl    edx,0x8
6400b927:	xor    edx,ecx
6400b929:	xor    edx,DWORD PTR [esi+0x4]
6400b92c:	mov    ecx,edx
6400b92e:	xor    ecx,DWORD PTR [eax+0x30]
6400b931:	mov    edx,DWORD PTR [eax+0x34]
6400b934:	xor    edx,ecx
6400b936:	mov    DWORD PTR [eax+0x48],ecx
6400b939:	mov    ecx,DWORD PTR [eax+0x38]
6400b93c:	xor    ecx,edx
6400b93e:	mov    DWORD PTR [eax+0x4c],edx
6400b941:	mov    edx,DWORD PTR [eax+0x3c]
6400b944:	xor    edx,ecx
6400b946:	mov    DWORD PTR [eax+0x50],ecx
6400b949:	mov    ecx,DWORD PTR [eax+0x44]
6400b94c:	xor    edi,edx
6400b94e:	mov    DWORD PTR [eax+0x54],edx
6400b951:	xor    ecx,edi
6400b953:	mov    DWORD PTR [eax+0x5c],ecx
6400b956:	and    ecx,0xff
6400b95c:	xor    edx,edx
6400b95e:	mov    DWORD PTR [eax+0x58],edi
6400b961:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b967:	movzx  ecx,BYTE PTR [eax+0x5f]
6400b96b:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b972:	xor    edx,ecx
6400b974:	movzx  ecx,BYTE PTR [eax+0x5e]
6400b978:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b97f:	shl    edx,0x8
6400b982:	xor    edx,ecx
6400b984:	movzx  ecx,BYTE PTR [eax+0x5d]
6400b988:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b98f:	shl    edx,0x8
6400b992:	xor    edx,ecx
6400b994:	xor    edx,DWORD PTR [esi+0x8]
6400b997:	add    esi,0x10
6400b99a:	mov    ecx,edx
6400b99c:	xor    ecx,DWORD PTR [eax+0x48]
6400b99f:	mov    edx,DWORD PTR [eax+0x4c]
6400b9a2:	xor    edx,ecx
6400b9a4:	mov    DWORD PTR [eax+0x60],ecx
6400b9a7:	mov    ecx,DWORD PTR [eax+0x50]
6400b9aa:	xor    ecx,edx
6400b9ac:	mov    DWORD PTR [eax+0x64],edx
6400b9af:	mov    edx,DWORD PTR [eax+0x54]
6400b9b2:	xor    edx,ecx
6400b9b4:	mov    DWORD PTR [eax+0x68],ecx
6400b9b7:	mov    DWORD PTR [eax+0x6c],edx
6400b9ba:	mov    ecx,edi
6400b9bc:	xor    ecx,edx
6400b9be:	mov    edx,DWORD PTR [eax+0x5c]
6400b9c1:	xor    edx,ecx
6400b9c3:	mov    DWORD PTR [eax+0x70],ecx
6400b9c6:	mov    DWORD PTR [eax+0x74],edx
6400b9c9:	add    eax,0x60
6400b9cc:	cmp    esi,0x6402f964
6400b9d2:	jl     0x6400b814
6400b9d8:	pop    edi
6400b9d9:	pop    esi
6400b9da:	pop    ebx
6400b9db:	ret    
6400b9dc:	mov    ecx,0x6402f944
6400b9e1:	mov    esi,DWORD PTR [eax+0xc]
6400b9e4:	mov    edx,esi
6400b9e6:	and    edx,0xff
6400b9ec:	xor    ebx,ebx
6400b9ee:	mov    bh,BYTE PTR [edx+0x6402f040]
6400b9f4:	movzx  edx,BYTE PTR [eax+0xf]
6400b9f8:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b9ff:	xor    ebx,edx
6400ba01:	movzx  edx,BYTE PTR [eax+0xe]
6400ba05:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400ba0c:	mov    edi,DWORD PTR [eax+0x4]
6400ba0f:	shl    ebx,0x8
6400ba12:	xor    ebx,edx
6400ba14:	movzx  edx,BYTE PTR [eax+0xd]
6400ba18:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400ba1f:	shl    ebx,0x8
6400ba22:	xor    ebx,edx
6400ba24:	xor    ebx,DWORD PTR [ecx-0x4]
6400ba27:	mov    edx,ebx
6400ba29:	xor    edx,DWORD PTR [eax]
6400ba2b:	mov    DWORD PTR [eax+0x10],edx
6400ba2e:	xor    edi,edx
6400ba30:	mov    edx,DWORD PTR [eax+0x8]
6400ba33:	xor    edx,edi
6400ba35:	xor    esi,edx
6400ba37:	mov    DWORD PTR [eax+0x18],edx
6400ba3a:	mov    DWORD PTR [eax+0x1c],esi
6400ba3d:	and    esi,0xff
6400ba43:	xor    edx,edx
6400ba45:	mov    DWORD PTR [eax+0x14],edi
6400ba48:	mov    dh,BYTE PTR [esi+0x6402f040]
6400ba4e:	movzx  esi,BYTE PTR [eax+0x1f]
6400ba52:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400ba59:	xor    edx,esi
6400ba5b:	movzx  esi,BYTE PTR [eax+0x1e]
6400ba5f:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400ba66:	shl    edx,0x8
6400ba69:	xor    edx,esi
6400ba6b:	movzx  esi,BYTE PTR [eax+0x1d]
6400ba6f:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400ba76:	shl    edx,0x8
6400ba79:	xor    edx,esi
6400ba7b:	xor    edx,DWORD PTR [ecx]
6400ba7d:	mov    esi,edi
6400ba7f:	xor    edx,DWORD PTR [eax+0x10]
6400ba82:	xor    esi,edx
6400ba84:	mov    DWORD PTR [eax+0x20],edx
6400ba87:	mov    edx,DWORD PTR [eax+0x18]
6400ba8a:	xor    edx,esi
6400ba8c:	mov    DWORD PTR [eax+0x24],esi
6400ba8f:	mov    esi,DWORD PTR [eax+0x1c]
6400ba92:	xor    esi,edx
6400ba94:	mov    DWORD PTR [eax+0x28],edx
6400ba97:	mov    DWORD PTR [eax+0x2c],esi
6400ba9a:	and    esi,0xff
6400baa0:	xor    edx,edx
6400baa2:	mov    dh,BYTE PTR [esi+0x6402f040]
6400baa8:	movzx  esi,BYTE PTR [eax+0x2f]
6400baac:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bab3:	xor    edx,esi
6400bab5:	movzx  esi,BYTE PTR [eax+0x2e]
6400bab9:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bac0:	shl    edx,0x8
6400bac3:	xor    edx,esi
6400bac5:	movzx  esi,BYTE PTR [eax+0x2d]
6400bac9:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bad0:	shl    edx,0x8
6400bad3:	xor    edx,esi
6400bad5:	xor    edx,DWORD PTR [ecx+0x4]
6400bad8:	mov    esi,DWORD PTR [eax+0x24]
6400badb:	xor    edx,DWORD PTR [eax+0x20]
6400bade:	xor    esi,edx
6400bae0:	mov    DWORD PTR [eax+0x30],edx
6400bae3:	mov    edx,DWORD PTR [eax+0x28]
6400bae6:	xor    edx,esi
6400bae8:	mov    DWORD PTR [eax+0x34],esi
6400baeb:	mov    esi,DWORD PTR [eax+0x2c]
6400baee:	xor    esi,edx
6400baf0:	mov    DWORD PTR [eax+0x3c],esi
6400baf3:	mov    DWORD PTR [eax+0x38],edx
6400baf6:	and    esi,0xff
6400bafc:	xor    edx,edx
6400bafe:	mov    dh,BYTE PTR [esi+0x6402f040]
6400bb04:	movzx  esi,BYTE PTR [eax+0x3f]
6400bb08:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bb0f:	xor    edx,esi
6400bb11:	movzx  esi,BYTE PTR [eax+0x3e]
6400bb15:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bb1c:	shl    edx,0x8
6400bb1f:	xor    edx,esi
6400bb21:	movzx  esi,BYTE PTR [eax+0x3d]
6400bb25:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bb2c:	shl    edx,0x8
6400bb2f:	xor    edx,esi
6400bb31:	xor    edx,DWORD PTR [ecx+0x8]
6400bb34:	mov    esi,DWORD PTR [eax+0x34]
6400bb37:	xor    edx,DWORD PTR [eax+0x30]
6400bb3a:	add    ecx,0x14
6400bb3d:	xor    esi,edx
6400bb3f:	mov    DWORD PTR [eax+0x40],edx
6400bb42:	mov    edx,DWORD PTR [eax+0x38]
6400bb45:	xor    edx,esi
6400bb47:	mov    DWORD PTR [eax+0x44],esi
6400bb4a:	mov    esi,DWORD PTR [eax+0x3c]
6400bb4d:	xor    esi,edx
6400bb4f:	mov    DWORD PTR [eax+0x48],edx
6400bb52:	mov    DWORD PTR [eax+0x4c],esi
6400bb55:	and    esi,0xff
6400bb5b:	xor    edx,edx
6400bb5d:	mov    dh,BYTE PTR [esi+0x6402f040]
6400bb63:	movzx  esi,BYTE PTR [eax+0x4f]
6400bb67:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bb6e:	xor    edx,esi
6400bb70:	movzx  esi,BYTE PTR [eax+0x4e]
6400bb74:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bb7b:	shl    edx,0x8
6400bb7e:	xor    edx,esi
6400bb80:	movzx  esi,BYTE PTR [eax+0x4d]
6400bb84:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400bb8b:	shl    edx,0x8
6400bb8e:	xor    edx,esi
6400bb90:	xor    edx,DWORD PTR [ecx-0x8]
6400bb93:	mov    esi,DWORD PTR [eax+0x44]
6400bb96:	xor    edx,DWORD PTR [eax+0x40]
6400bb99:	add    eax,0x50
6400bb9c:	xor    esi,edx
6400bb9e:	mov    DWORD PTR [eax],edx
6400bba0:	mov    edx,DWORD PTR [eax-0x8]
6400bba3:	xor    edx,esi
6400bba5:	mov    DWORD PTR [eax+0x4],esi
6400bba8:	mov    esi,DWORD PTR [eax-0x4]
6400bbab:	xor    esi,edx
6400bbad:	cmp    ecx,0x6402f96c
6400bbb3:	mov    DWORD PTR [eax+0x8],edx
6400bbb6:	mov    DWORD PTR [eax+0xc],esi
6400bbb9:	jl     0x6400b9e1
6400bbbf:	pop    edi
6400bbc0:	pop    esi
6400bbc1:	pop    ebx
6400bbc2:	ret    
6400bbc3:	int3   
6400bbc4:	int3   
6400bbc5:	int3   
6400bbc6:	int3   
6400bbc7:	int3   
6400bbc8:	int3   
6400bbc9:	int3   
6400bbca:	int3   
6400bbcb:	int3   
6400bbcc:	int3   
6400bbcd:	int3   
6400bbce:	int3   
6400bbcf:	int3   
6400bbd0:	sub    esp,0x11c
6400bbd6:	push   esi
6400bbd7:	push   edi
6400bbd8:	mov    edi,eax
6400bbda:	lea    esi,[edi+0x8]
6400bbdd:	lea    eax,[esp+0x8]
6400bbe1:	mov    DWORD PTR [edi],0xa
6400bbe7:	mov    DWORD PTR [edi+0x4],esi
6400bbea:	call   0x6400b6c0
6400bbef:	mov    eax,DWORD PTR [esp+0x8]
6400bbf3:	shl    eax,0x4
6400bbf6:	add    eax,DWORD PTR [esp+0xc]
6400bbfa:	add    esi,0x4
6400bbfd:	mov    ecx,DWORD PTR [eax]
6400bbff:	mov    DWORD PTR [esi-0x4],ecx
6400bc02:	mov    edx,DWORD PTR [eax+0x4]
6400bc05:	add    eax,0x4
6400bc08:	mov    DWORD PTR [esi],edx
6400bc0a:	mov    ecx,DWORD PTR [eax+0x4]
6400bc0d:	add    eax,0x4
6400bc10:	add    esi,0x4
6400bc13:	mov    DWORD PTR [esi],ecx
6400bc15:	mov    edx,DWORD PTR [eax+0x4]
6400bc18:	add    eax,0x4
6400bc1b:	add    esi,0x4
6400bc1e:	mov    DWORD PTR [esi],edx
6400bc20:	mov    ecx,DWORD PTR [edi]
6400bc22:	sub    ecx,0x1
6400bc25:	add    esi,0x4
6400bc28:	sub    eax,0x1c
6400bc2b:	test   ecx,ecx
6400bc2d:	jle    0x6400bd85
6400bc33:	movzx  edx,BYTE PTR [eax+0x3]
6400bc37:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400bc3e:	mov    edx,DWORD PTR [edx*4+0x6402f140]
6400bc45:	movzx  edi,BYTE PTR [eax+0x2]
6400bc49:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bc50:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400bc57:	movzx  edi,BYTE PTR [eax+0x1]
6400bc5b:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bc62:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400bc69:	mov    edi,DWORD PTR [eax]
6400bc6b:	and    edi,0xff
6400bc71:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bc78:	xor    edx,DWORD PTR [edi*4+0x6402fd68]
6400bc7f:	add    eax,0x10
6400bc82:	mov    DWORD PTR [esi],edx
6400bc84:	mov    edx,DWORD PTR [eax-0xc]
6400bc87:	movzx  edi,BYTE PTR [eax-0x9]
6400bc8b:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bc92:	and    edx,0xff
6400bc98:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400bc9f:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400bca6:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400bcad:	movzx  edi,BYTE PTR [eax-0xa]
6400bcb1:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bcb8:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400bcbf:	movzx  edi,BYTE PTR [eax-0xb]
6400bcc3:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bcca:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400bcd1:	sub    ecx,0x1
6400bcd4:	mov    DWORD PTR [esi+0x4],edx
6400bcd7:	mov    edx,DWORD PTR [eax-0x8]
6400bcda:	movzx  edi,BYTE PTR [eax-0x5]
6400bcde:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bce5:	and    edx,0xff
6400bceb:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400bcf2:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400bcf9:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400bd00:	movzx  edi,BYTE PTR [eax-0x6]
6400bd04:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bd0b:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400bd12:	movzx  edi,BYTE PTR [eax-0x7]
6400bd16:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bd1d:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400bd24:	add    esi,0x10
6400bd27:	mov    DWORD PTR [esi-0x8],edx
6400bd2a:	mov    edx,DWORD PTR [eax-0x4]
6400bd2d:	movzx  edi,BYTE PTR [eax-0x1]
6400bd31:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bd38:	and    edx,0xff
6400bd3e:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400bd45:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400bd4c:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400bd53:	movzx  edi,BYTE PTR [eax-0x2]
6400bd57:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bd5e:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400bd65:	movzx  edi,BYTE PTR [eax-0x3]
6400bd69:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400bd70:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400bd77:	sub    eax,0x20
6400bd7a:	test   ecx,ecx
6400bd7c:	mov    DWORD PTR [esi-0x4],edx
6400bd7f:	jg     0x6400bc33
6400bd85:	mov    ecx,DWORD PTR [eax]
6400bd87:	mov    DWORD PTR [esi],ecx
6400bd89:	mov    edx,DWORD PTR [eax+0x4]
6400bd8c:	add    esi,0x4
6400bd8f:	add    eax,0x4
6400bd92:	mov    DWORD PTR [esi],edx
6400bd94:	mov    ecx,DWORD PTR [eax+0x4]
6400bd97:	add    esi,0x4
6400bd9a:	add    eax,0x4
6400bd9d:	mov    DWORD PTR [esi],ecx
6400bd9f:	mov    edx,DWORD PTR [eax+0x4]
6400bda2:	pop    edi
6400bda3:	mov    DWORD PTR [esi+0x4],edx
6400bda6:	pop    esi
6400bda7:	add    esp,0x11c
6400bdad:	ret    
6400bdae:	int3   
6400bdaf:	int3   
6400bdb0:	sub    esp,0x10
6400bdb3:	xor    ecx,ecx
6400bdb5:	push   ebx
6400bdb6:	push   ebp
6400bdb7:	mov    ebp,DWORD PTR [esp+0x1c]
6400bdbb:	push   esi
6400bdbc:	push   edi
6400bdbd:	mov    edi,eax
6400bdbf:	mov    ch,BYTE PTR [edi+0x3]
6400bdc2:	movzx  edx,BYTE PTR [edi+0x1]
6400bdc6:	mov    eax,DWORD PTR [ebp+0x4]
6400bdc9:	movzx  esi,BYTE PTR [edi+0x9]
6400bdcd:	mov    cl,BYTE PTR [edi+0x2]
6400bdd0:	movzx  ebx,BYTE PTR [edi+0xd]
6400bdd4:	add    eax,0x4
6400bdd7:	add    eax,0x4
6400bdda:	add    eax,0x4
6400bddd:	shl    ecx,0x8
6400bde0:	or     ecx,edx
6400bde2:	movzx  edx,BYTE PTR [edi]
6400bde5:	shl    ecx,0x8
6400bde8:	or     ecx,edx
6400bdea:	xor    ecx,DWORD PTR [eax-0xc]
6400bded:	movzx  edx,BYTE PTR [edi+0x5]
6400bdf1:	mov    DWORD PTR [esp+0x24],ecx
6400bdf5:	xor    ecx,ecx
6400bdf7:	mov    ch,BYTE PTR [edi+0x7]
6400bdfa:	add    eax,0x4
6400bdfd:	mov    cl,BYTE PTR [edi+0x6]
6400be00:	shl    ecx,0x8
6400be03:	or     ecx,edx
6400be05:	movzx  edx,BYTE PTR [edi+0x4]
6400be09:	shl    ecx,0x8
6400be0c:	or     ecx,edx
6400be0e:	xor    edx,edx
6400be10:	mov    dh,BYTE PTR [edi+0xb]
6400be13:	xor    ecx,DWORD PTR [eax-0xc]
6400be16:	mov    dl,BYTE PTR [edi+0xa]
6400be19:	shl    edx,0x8
6400be1c:	or     edx,esi
6400be1e:	movzx  esi,BYTE PTR [edi+0x8]
6400be22:	shl    edx,0x8
6400be25:	or     edx,esi
6400be27:	xor    edx,DWORD PTR [eax-0x8]
6400be2a:	mov    esi,edx
6400be2c:	xor    edx,edx
6400be2e:	mov    dh,BYTE PTR [edi+0xf]
6400be31:	mov    DWORD PTR [esp+0x10],esi
6400be35:	mov    dl,BYTE PTR [edi+0xe]
6400be38:	movzx  edi,BYTE PTR [edi+0xc]
6400be3c:	shl    edx,0x8
6400be3f:	or     edx,ebx
6400be41:	shl    edx,0x8
6400be44:	or     edx,edi
6400be46:	xor    edx,DWORD PTR [eax-0x4]
6400be49:	cmp    DWORD PTR [esp+0x28],0x0
6400be4e:	jne    0x6400c2e9
6400be54:	mov    ebp,DWORD PTR [ebp+0x0]
6400be57:	sar    ebp,1
6400be59:	sub    ebp,0x1
6400be5c:	test   ebp,ebp
6400be5e:	jle    0x6400c08f
6400be64:	mov    ebx,esi
6400be66:	movzx  edi,dh
6400be69:	mov    esi,DWORD PTR [edi*4+0x6402f968]
6400be70:	mov    edi,ecx
6400be72:	shr    edi,0x18
6400be75:	shr    ebx,0x10
6400be78:	and    ebx,0xff
6400be7e:	xor    esi,DWORD PTR [ebx*4+0x6402f540]
6400be85:	add    eax,0x4
6400be88:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400be8f:	mov    edi,DWORD PTR [esp+0x24]
6400be93:	and    edi,0xff
6400be99:	mov    DWORD PTR [esp+0x28],esi
6400be9d:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bea4:	movzx  edi,BYTE PTR [esp+0x25]
6400bea9:	xor    esi,DWORD PTR [eax-0x4]
6400beac:	add    eax,0x4
6400beaf:	mov    DWORD PTR [esp+0x14],esi
6400beb3:	mov    esi,edx
6400beb5:	shr    esi,0x10
6400beb8:	and    esi,0xff
6400bebe:	mov    esi,DWORD PTR [esi*4+0x6402f540]
6400bec5:	xor    esi,DWORD PTR [edi*4+0x6402f968]
6400becc:	mov    edi,DWORD PTR [esp+0x10]
6400bed0:	shr    edi,0x18
6400bed3:	mov    DWORD PTR [esp+0x28],esi
6400bed7:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bede:	mov    edi,ecx
6400bee0:	and    edi,0xff
6400bee6:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400beed:	mov    edi,DWORD PTR [esp+0x24]
6400bef1:	xor    esi,DWORD PTR [eax-0x4]
6400bef4:	shr    edi,0x10
6400bef7:	mov    DWORD PTR [esp+0x18],esi
6400befb:	movzx  esi,ch
6400befe:	mov    esi,DWORD PTR [esi*4+0x6402f968]
6400bf05:	and    edi,0xff
6400bf0b:	xor    esi,DWORD PTR [edi*4+0x6402f540]
6400bf12:	mov    edi,edx
6400bf14:	shr    edi,0x18
6400bf17:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bf1e:	mov    edi,DWORD PTR [esp+0x10]
6400bf22:	and    edi,0xff
6400bf28:	mov    DWORD PTR [esp+0x28],esi
6400bf2c:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bf33:	shr    ecx,0x10
6400bf36:	xor    esi,DWORD PTR [eax]
6400bf38:	and    ecx,0xff
6400bf3e:	mov    DWORD PTR [esp+0x28],esi
6400bf42:	movzx  esi,BYTE PTR [esp+0x11]
6400bf47:	mov    ebx,DWORD PTR [esi*4+0x6402f968]
6400bf4e:	xor    ebx,DWORD PTR [ecx*4+0x6402f540]
6400bf55:	mov    ecx,DWORD PTR [esp+0x24]
6400bf59:	mov    esi,DWORD PTR [esp+0x28]
6400bf5d:	shr    ecx,0x18
6400bf60:	xor    ebx,DWORD PTR [ecx*4+0x6402f140]
6400bf67:	and    edx,0xff
6400bf6d:	xor    ebx,DWORD PTR [edx*4+0x6402fd68]
6400bf74:	add    eax,0x4
6400bf77:	xor    ebx,DWORD PTR [eax]
6400bf79:	mov    ecx,esi
6400bf7b:	shr    ecx,0x10
6400bf7e:	and    ecx,0xff
6400bf84:	movzx  edx,bh
6400bf87:	mov    edi,DWORD PTR [edx*4+0x6402f968]
6400bf8e:	xor    edi,DWORD PTR [ecx*4+0x6402f540]
6400bf95:	mov    edx,DWORD PTR [esp+0x18]
6400bf99:	mov    ecx,edx
6400bf9b:	shr    ecx,0x18
6400bf9e:	xor    edi,DWORD PTR [ecx*4+0x6402f140]
6400bfa5:	mov    ecx,DWORD PTR [esp+0x14]
6400bfa9:	and    ecx,0xff
6400bfaf:	xor    edi,DWORD PTR [ecx*4+0x6402fd68]
6400bfb6:	add    eax,0x4
6400bfb9:	xor    edi,DWORD PTR [eax]
6400bfbb:	mov    ecx,ebx
6400bfbd:	shr    ecx,0x10
6400bfc0:	mov    DWORD PTR [esp+0x24],edi
6400bfc4:	movzx  edi,BYTE PTR [esp+0x15]
6400bfc9:	add    eax,0x4
6400bfcc:	and    ecx,0xff
6400bfd2:	mov    ecx,DWORD PTR [ecx*4+0x6402f540]
6400bfd9:	xor    ecx,DWORD PTR [edi*4+0x6402f968]
6400bfe0:	shr    esi,0x18
6400bfe3:	xor    ecx,DWORD PTR [esi*4+0x6402f140]
6400bfea:	mov    esi,edx
6400bfec:	and    esi,0xff
6400bff2:	xor    ecx,DWORD PTR [esi*4+0x6402fd68]
6400bff9:	mov    esi,DWORD PTR [esp+0x14]
6400bffd:	xor    ecx,DWORD PTR [eax]
6400bfff:	movzx  edx,dh
6400c002:	mov    edx,DWORD PTR [edx*4+0x6402f968]
6400c009:	mov    edi,DWORD PTR [esp+0x18]
6400c00d:	shr    esi,0x10
6400c010:	and    esi,0xff
6400c016:	xor    edx,DWORD PTR [esi*4+0x6402f540]
6400c01d:	mov    esi,ebx
6400c01f:	shr    esi,0x18
6400c022:	xor    edx,DWORD PTR [esi*4+0x6402f140]
6400c029:	mov    esi,DWORD PTR [esp+0x28]
6400c02d:	and    esi,0xff
6400c033:	xor    edx,DWORD PTR [esi*4+0x6402fd68]
6400c03a:	add    eax,0x4
6400c03d:	xor    edx,DWORD PTR [eax]
6400c03f:	shr    edi,0x10
6400c042:	mov    esi,edx
6400c044:	movzx  edx,BYTE PTR [esp+0x29]
6400c049:	mov    edx,DWORD PTR [edx*4+0x6402f968]
6400c050:	and    edi,0xff
6400c056:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400c05d:	mov    edi,DWORD PTR [esp+0x14]
6400c061:	shr    edi,0x18
6400c064:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400c06b:	and    ebx,0xff
6400c071:	xor    edx,DWORD PTR [ebx*4+0x6402fd68]
6400c078:	add    eax,0x4
6400c07b:	xor    edx,DWORD PTR [eax]
6400c07d:	sub    ebp,0x1
6400c080:	add    eax,0x4
6400c083:	test   ebp,ebp
6400c085:	mov    DWORD PTR [esp+0x10],esi
6400c089:	jg     0x6400be64
6400c08f:	mov    ebx,esi
6400c091:	movzx  edi,dh
6400c094:	mov    esi,DWORD PTR [edi*4+0x6402f968]
6400c09b:	mov    edi,ecx
6400c09d:	shr    edi,0x18
6400c0a0:	shr    ebx,0x10
6400c0a3:	and    ebx,0xff
6400c0a9:	xor    esi,DWORD PTR [ebx*4+0x6402f540]
6400c0b0:	add    eax,0x4
6400c0b3:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400c0ba:	mov    edi,DWORD PTR [esp+0x24]
6400c0be:	mov    DWORD PTR [esp+0x28],esi
6400c0c2:	and    edi,0xff
6400c0c8:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400c0cf:	movzx  edi,BYTE PTR [esp+0x25]
6400c0d4:	xor    esi,DWORD PTR [eax-0x4]
6400c0d7:	add    eax,0x4
6400c0da:	mov    DWORD PTR [esp+0x14],esi
6400c0de:	mov    esi,edx
6400c0e0:	shr    esi,0x10
6400c0e3:	and    esi,0xff
6400c0e9:	mov    esi,DWORD PTR [esi*4+0x6402f540]
6400c0f0:	xor    esi,DWORD PTR [edi*4+0x6402f968]
6400c0f7:	mov    edi,DWORD PTR [esp+0x10]
6400c0fb:	shr    edi,0x18
6400c0fe:	mov    DWORD PTR [esp+0x28],esi
6400c102:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400c109:	mov    edi,ecx
6400c10b:	and    edi,0xff
6400c111:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400c118:	mov    edi,DWORD PTR [esp+0x24]
6400c11c:	xor    esi,DWORD PTR [eax-0x4]
6400c11f:	shr    edi,0x10
6400c122:	mov    DWORD PTR [esp+0x18],esi
6400c126:	movzx  esi,ch
6400c129:	mov    esi,DWORD PTR [esi*4+0x6402f968]
6400c130:	and    edi,0xff
6400c136:	xor    esi,DWORD PTR [edi*4+0x6402f540]
6400c13d:	mov    edi,edx
6400c13f:	shr    edi,0x18
6400c142:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400c149:	mov    edi,DWORD PTR [esp+0x10]
6400c14d:	mov    DWORD PTR [esp+0x28],esi
6400c151:	and    edi,0xff
6400c157:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400c15e:	shr    ecx,0x10
6400c161:	xor    esi,DWORD PTR [eax]
6400c163:	and    ecx,0xff
6400c169:	mov    DWORD PTR [esp+0x28],esi
6400c16d:	movzx  esi,BYTE PTR [esp+0x11]
6400c172:	mov    ebx,DWORD PTR [esi*4+0x6402f968]
6400c179:	xor    ebx,DWORD PTR [ecx*4+0x6402f540]
6400c180:	mov    ecx,DWORD PTR [esp+0x24]
6400c184:	mov    edi,DWORD PTR [esp+0x28]
6400c188:	shr    ecx,0x18
6400c18b:	xor    ebx,DWORD PTR [ecx*4+0x6402f140]
6400c192:	mov    ecx,DWORD PTR [esp+0x18]
6400c196:	and    edx,0xff
6400c19c:	xor    ebx,DWORD PTR [edx*4+0x6402fd68]
6400c1a3:	add    eax,0x4
6400c1a6:	xor    ebx,DWORD PTR [eax]
6400c1a8:	add    eax,0x4
6400c1ab:	shr    ecx,0x18
6400c1ae:	mov    DWORD PTR [esp+0x1c],eax
6400c1b2:	xor    eax,eax
6400c1b4:	mov    ah,BYTE PTR [ecx+0x64031168]
6400c1ba:	mov    edx,edi
6400c1bc:	shr    edx,0x10
6400c1bf:	and    edx,0xff
6400c1c5:	movzx  edx,BYTE PTR [edx+0x64031168]
6400c1cc:	movzx  ecx,bh
6400c1cf:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400c1d6:	xor    edx,eax
6400c1d8:	shl    edx,0x8
6400c1db:	xor    edx,ecx
6400c1dd:	mov    ecx,DWORD PTR [esp+0x14]
6400c1e1:	and    ecx,0xff
6400c1e7:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400c1ee:	shl    edx,0x8
6400c1f1:	mov    DWORD PTR [esp+0x24],ebx
6400c1f5:	xor    edx,ecx
6400c1f7:	xor    ecx,ecx
6400c1f9:	shr    edi,0x18
6400c1fc:	mov    ch,BYTE PTR [edi+0x64031168]
6400c202:	mov    eax,DWORD PTR [esp+0x1c]
6400c206:	xor    edx,DWORD PTR [eax]
6400c208:	shr    ebx,0x10
6400c20b:	and    ebx,0xff
6400c211:	movzx  esi,BYTE PTR [ebx+0x64031168]
6400c218:	xor    esi,ecx
6400c21a:	mov    ecx,DWORD PTR [esp+0x14]
6400c21e:	shl    esi,0x8
6400c221:	movzx  edi,ch
6400c224:	movzx  edi,BYTE PTR [edi+0x64031168]
6400c22b:	xor    esi,edi
6400c22d:	mov    edi,DWORD PTR [esp+0x18]
6400c231:	shl    esi,0x8
6400c234:	and    edi,0xff
6400c23a:	movzx  edi,BYTE PTR [edi+0x64031168]
6400c241:	xor    esi,edi
6400c243:	xor    esi,DWORD PTR [eax+0x4]
6400c246:	shr    ecx,0x10
6400c249:	mov    DWORD PTR [esp+0x1c],esi
6400c24d:	and    ecx,0xff
6400c253:	movzx  esi,BYTE PTR [ecx+0x64031168]
6400c25a:	mov    ecx,DWORD PTR [esp+0x24]
6400c25e:	add    eax,0x4
6400c261:	shr    ecx,0x18
6400c264:	xor    ebx,ebx
6400c266:	mov    bh,BYTE PTR [ecx+0x64031168]
6400c26c:	mov    ecx,DWORD PTR [esp+0x18]
6400c270:	movzx  edi,ch
6400c273:	movzx  edi,BYTE PTR [edi+0x64031168]
6400c27a:	xor    esi,ebx
6400c27c:	shl    esi,0x8
6400c27f:	xor    esi,edi
6400c281:	mov    edi,DWORD PTR [esp+0x28]
6400c285:	shl    esi,0x8
6400c288:	and    edi,0xff
6400c28e:	movzx  edi,BYTE PTR [edi+0x64031168]
6400c295:	xor    esi,edi
6400c297:	xor    esi,DWORD PTR [eax+0x4]
6400c29a:	add    eax,0x4
6400c29d:	mov    DWORD PTR [esp+0x10],esi
6400c2a1:	mov    esi,DWORD PTR [esp+0x14]
6400c2a5:	shr    esi,0x18
6400c2a8:	shr    ecx,0x10
6400c2ab:	xor    ebx,ebx
6400c2ad:	mov    bh,BYTE PTR [esi+0x64031168]
6400c2b3:	movzx  esi,BYTE PTR [esp+0x29]
6400c2b8:	movzx  esi,BYTE PTR [esi+0x64031168]
6400c2bf:	and    ecx,0xff
6400c2c5:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400c2cc:	xor    ecx,ebx
6400c2ce:	shl    ecx,0x8
6400c2d1:	xor    ecx,esi
6400c2d3:	mov    esi,DWORD PTR [esp+0x24]
6400c2d7:	and    esi,0xff
6400c2dd:	movzx  esi,BYTE PTR [esi+0x64031168]
6400c2e4:	jmp    0x6400c77c
6400c2e9:	mov    edi,DWORD PTR [ebp+0x0]
6400c2ec:	sar    edi,1
6400c2ee:	sub    edi,0x1
6400c2f1:	test   edi,edi
6400c2f3:	mov    DWORD PTR [esp+0x1c],edi
6400c2f7:	jle    0x6400c533
6400c2fd:	lea    ecx,[ecx+0x0]
6400c300:	shr    esi,0x10
6400c303:	and    esi,0xff
6400c309:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c310:	movzx  edi,ch
6400c313:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c31a:	mov    edi,edx
6400c31c:	shr    edi,0x18
6400c31f:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c326:	mov    edi,DWORD PTR [esp+0x24]
6400c32a:	mov    DWORD PTR [esp+0x28],esi
6400c32e:	and    edi,0xff
6400c334:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c33b:	movzx  edi,BYTE PTR [esp+0x11]
6400c340:	xor    esi,DWORD PTR [eax]
6400c342:	add    eax,0x4
6400c345:	mov    DWORD PTR [esp+0x14],esi
6400c349:	mov    esi,edx
6400c34b:	shr    esi,0x10
6400c34e:	and    esi,0xff
6400c354:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c35b:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c362:	mov    edi,DWORD PTR [esp+0x24]
6400c366:	mov    DWORD PTR [esp+0x28],esi
6400c36a:	shr    edi,0x18
6400c36d:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c374:	mov    edi,ecx
6400c376:	and    edi,0xff
6400c37c:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c383:	mov    edi,DWORD PTR [esp+0x24]
6400c387:	xor    esi,DWORD PTR [eax]
6400c389:	shr    edi,0x10
6400c38c:	mov    DWORD PTR [esp+0x18],esi
6400c390:	and    edi,0xff
6400c396:	movzx  esi,dh
6400c399:	mov    esi,DWORD PTR [esi*4+0x64030968]
6400c3a0:	xor    esi,DWORD PTR [edi*4+0x64030568]
6400c3a7:	mov    edi,ecx
6400c3a9:	shr    edi,0x18
6400c3ac:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c3b3:	mov    edi,DWORD PTR [esp+0x10]
6400c3b7:	mov    DWORD PTR [esp+0x28],esi
6400c3bb:	and    edi,0xff
6400c3c1:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c3c8:	add    eax,0x4
6400c3cb:	xor    esi,DWORD PTR [eax]
6400c3cd:	shr    ecx,0x10
6400c3d0:	mov    DWORD PTR [esp+0x28],esi
6400c3d4:	movzx  esi,BYTE PTR [esp+0x25]
6400c3d9:	and    ecx,0xff
6400c3df:	mov    ebx,DWORD PTR [ecx*4+0x64030568]
6400c3e6:	xor    ebx,DWORD PTR [esi*4+0x64030968]
6400c3ed:	mov    ecx,DWORD PTR [esp+0x10]
6400c3f1:	shr    ecx,0x18
6400c3f4:	xor    ebx,DWORD PTR [ecx*4+0x64030168]
6400c3fb:	mov    ecx,DWORD PTR [esp+0x18]
6400c3ff:	and    edx,0xff
6400c405:	xor    ebx,DWORD PTR [edx*4+0x64030d68]
6400c40c:	mov    edx,DWORD PTR [esp+0x28]
6400c410:	xor    ebx,DWORD PTR [eax+0x4]
6400c413:	add    eax,0x4
6400c416:	mov    esi,edx
6400c418:	shr    esi,0x10
6400c41b:	and    esi,0xff
6400c421:	mov    ebp,DWORD PTR [esi*4+0x64030568]
6400c428:	movzx  edi,ch
6400c42b:	xor    ebp,DWORD PTR [edi*4+0x64030968]
6400c432:	mov    esi,ebx
6400c434:	shr    esi,0x18
6400c437:	xor    ebp,DWORD PTR [esi*4+0x64030168]
6400c43e:	mov    esi,DWORD PTR [esp+0x14]
6400c442:	mov    edi,esi
6400c444:	and    edi,0xff
6400c44a:	xor    ebp,DWORD PTR [edi*4+0x64030d68]
6400c451:	add    eax,0x4
6400c454:	xor    ebp,DWORD PTR [eax]
6400c456:	mov    edi,ebx
6400c458:	shr    edi,0x10
6400c45b:	add    eax,0x4
6400c45e:	mov    DWORD PTR [esp+0x24],ebp
6400c462:	and    edi,0xff
6400c468:	movzx  edx,dh
6400c46b:	mov    edi,DWORD PTR [edi*4+0x64030568]
6400c472:	xor    edi,DWORD PTR [edx*4+0x64030968]
6400c479:	mov    edx,esi
6400c47b:	shr    edx,0x18
6400c47e:	xor    edi,DWORD PTR [edx*4+0x64030168]
6400c485:	shr    esi,0x10
6400c488:	and    esi,0xff
6400c48e:	movzx  edx,bh
6400c491:	mov    edx,DWORD PTR [edx*4+0x64030968]
6400c498:	xor    edx,DWORD PTR [esi*4+0x64030568]
6400c49f:	mov    esi,DWORD PTR [esp+0x18]
6400c4a3:	shr    esi,0x18
6400c4a6:	xor    edx,DWORD PTR [esi*4+0x64030168]
6400c4ad:	mov    esi,DWORD PTR [esp+0x28]
6400c4b1:	and    ecx,0xff
6400c4b7:	xor    edi,DWORD PTR [ecx*4+0x64030d68]
6400c4be:	and    esi,0xff
6400c4c4:	xor    edi,DWORD PTR [eax]
6400c4c6:	xor    edx,DWORD PTR [esi*4+0x64030d68]
6400c4cd:	mov    ecx,edi
6400c4cf:	xor    edx,DWORD PTR [eax+0x4]
6400c4d2:	mov    edi,DWORD PTR [esp+0x18]
6400c4d6:	add    eax,0x4
6400c4d9:	shr    edi,0x10
6400c4dc:	and    edi,0xff
6400c4e2:	mov    ebp,DWORD PTR [edi*4+0x64030568]
6400c4e9:	mov    edi,DWORD PTR [esp+0x28]
6400c4ed:	mov    esi,edx
6400c4ef:	movzx  edx,BYTE PTR [esp+0x15]
6400c4f4:	xor    ebp,DWORD PTR [edx*4+0x64030968]
6400c4fb:	shr    edi,0x18
6400c4fe:	xor    ebp,DWORD PTR [edi*4+0x64030168]
6400c505:	mov    edi,DWORD PTR [esp+0x1c]
6400c509:	and    ebx,0xff
6400c50f:	xor    ebp,DWORD PTR [ebx*4+0x64030d68]
6400c516:	add    eax,0x4
6400c519:	xor    ebp,DWORD PTR [eax]
6400c51b:	sub    edi,0x1
6400c51e:	add    eax,0x4
6400c521:	test   edi,edi
6400c523:	mov    DWORD PTR [esp+0x10],esi
6400c527:	mov    edx,ebp
6400c529:	mov    DWORD PTR [esp+0x1c],edi
6400c52d:	jg     0x6400c300
6400c533:	shr    esi,0x10
6400c536:	and    esi,0xff
6400c53c:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c543:	movzx  edi,ch
6400c546:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c54d:	mov    edi,edx
6400c54f:	shr    edi,0x18
6400c552:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c559:	mov    edi,DWORD PTR [esp+0x24]
6400c55d:	mov    DWORD PTR [esp+0x28],esi
6400c561:	and    edi,0xff
6400c567:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c56e:	movzx  edi,BYTE PTR [esp+0x11]
6400c573:	xor    esi,DWORD PTR [eax]
6400c575:	add    eax,0x4
6400c578:	mov    DWORD PTR [esp+0x14],esi
6400c57c:	mov    esi,edx
6400c57e:	shr    esi,0x10
6400c581:	and    esi,0xff
6400c587:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c58e:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c595:	mov    edi,DWORD PTR [esp+0x24]
6400c599:	shr    edi,0x18
6400c59c:	mov    DWORD PTR [esp+0x28],esi
6400c5a0:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c5a7:	mov    edi,ecx
6400c5a9:	and    edi,0xff
6400c5af:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c5b6:	mov    edi,DWORD PTR [esp+0x24]
6400c5ba:	xor    esi,DWORD PTR [eax]
6400c5bc:	shr    edi,0x10
6400c5bf:	mov    DWORD PTR [esp+0x18],esi
6400c5c3:	movzx  esi,dh
6400c5c6:	mov    esi,DWORD PTR [esi*4+0x64030968]
6400c5cd:	and    edi,0xff
6400c5d3:	xor    esi,DWORD PTR [edi*4+0x64030568]
6400c5da:	mov    edi,ecx
6400c5dc:	shr    edi,0x18
6400c5df:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c5e6:	mov    edi,DWORD PTR [esp+0x10]
6400c5ea:	mov    DWORD PTR [esp+0x28],esi
6400c5ee:	and    edi,0xff
6400c5f4:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c5fb:	movzx  edi,BYTE PTR [esp+0x25]
6400c600:	xor    esi,DWORD PTR [eax+0x4]
6400c603:	shr    ecx,0x10
6400c606:	and    ecx,0xff
6400c60c:	add    eax,0x4
6400c60f:	mov    DWORD PTR [esp+0x28],esi
6400c613:	mov    esi,DWORD PTR [ecx*4+0x64030568]
6400c61a:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c621:	mov    ecx,DWORD PTR [esp+0x10]
6400c625:	and    edx,0xff
6400c62b:	shr    ecx,0x18
6400c62e:	xor    esi,DWORD PTR [ecx*4+0x64030168]
6400c635:	add    eax,0x4
6400c638:	xor    esi,DWORD PTR [edx*4+0x64030d68]
6400c63f:	mov    edx,DWORD PTR [esp+0x28]
6400c643:	xor    esi,DWORD PTR [eax]
6400c645:	shr    edx,0x10
6400c648:	and    edx,0xff
6400c64e:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400c655:	mov    ecx,esi
6400c657:	shr    ecx,0x18
6400c65a:	xor    ebx,ebx
6400c65c:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c662:	movzx  ecx,BYTE PTR [esp+0x19]
6400c667:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c66e:	xor    edx,ebx
6400c670:	shl    edx,0x8
6400c673:	xor    edx,ecx
6400c675:	mov    ecx,DWORD PTR [esp+0x14]
6400c679:	mov    edi,ecx
6400c67b:	and    edi,0xff
6400c681:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400c688:	shl    edx,0x8
6400c68b:	add    eax,0x4
6400c68e:	xor    edx,edi
6400c690:	xor    edx,DWORD PTR [eax]
6400c692:	mov    DWORD PTR [esp+0x24],esi
6400c696:	add    eax,0x4
6400c699:	shr    esi,0x10
6400c69c:	and    esi,0xff
6400c6a2:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c6a9:	shr    ecx,0x18
6400c6ac:	xor    ebx,ebx
6400c6ae:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c6b4:	movzx  ecx,BYTE PTR [esp+0x29]
6400c6b9:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c6c0:	xor    esi,ebx
6400c6c2:	shl    esi,0x8
6400c6c5:	xor    esi,ecx
6400c6c7:	mov    ecx,DWORD PTR [esp+0x18]
6400c6cb:	mov    edi,ecx
6400c6cd:	shl    esi,0x8
6400c6d0:	and    edi,0xff
6400c6d6:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400c6dd:	xor    esi,edi
6400c6df:	xor    esi,DWORD PTR [eax]
6400c6e1:	mov    edi,DWORD PTR [esp+0x28]
6400c6e5:	mov    DWORD PTR [esp+0x1c],esi
6400c6e9:	mov    esi,DWORD PTR [esp+0x14]
6400c6ed:	shr    ecx,0x18
6400c6f0:	shr    esi,0x10
6400c6f3:	and    esi,0xff
6400c6f9:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c700:	xor    ebx,ebx
6400c702:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c708:	movzx  ecx,BYTE PTR [esp+0x25]
6400c70d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c714:	xor    esi,ebx
6400c716:	shl    esi,0x8
6400c719:	xor    esi,ecx
6400c71b:	mov    ecx,edi
6400c71d:	and    ecx,0xff
6400c723:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c72a:	shl    esi,0x8
6400c72d:	xor    esi,ecx
6400c72f:	xor    esi,DWORD PTR [eax+0x4]
6400c732:	mov    ecx,DWORD PTR [esp+0x18]
6400c736:	shr    ecx,0x10
6400c739:	xor    ebx,ebx
6400c73b:	add    eax,0x4
6400c73e:	shr    edi,0x18
6400c741:	mov    bh,BYTE PTR [edi+0x6402f040]
6400c747:	and    ecx,0xff
6400c74d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c754:	mov    DWORD PTR [esp+0x10],esi
6400c758:	movzx  esi,BYTE PTR [esp+0x15]
6400c75d:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c764:	xor    ecx,ebx
6400c766:	shl    ecx,0x8
6400c769:	xor    ecx,esi
6400c76b:	mov    esi,DWORD PTR [esp+0x24]
6400c76f:	and    esi,0xff
6400c775:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c77c:	shl    ecx,0x8
6400c77f:	xor    ecx,esi
6400c781:	xor    ecx,DWORD PTR [eax+0x4]
6400c784:	mov    esi,DWORD PTR [esp+0x2c]
6400c788:	mov    eax,edx
6400c78a:	shr    eax,0x8
6400c78d:	mov    BYTE PTR [esi+0x1],al
6400c790:	mov    eax,edx
6400c792:	mov    BYTE PTR [esi],dl
6400c794:	shr    edx,0x18
6400c797:	shr    eax,0x10
6400c79a:	mov    BYTE PTR [esi+0x3],dl
6400c79d:	mov    BYTE PTR [esi+0x2],al
6400c7a0:	mov    eax,DWORD PTR [esp+0x1c]
6400c7a4:	mov    edx,eax
6400c7a6:	shr    edx,0x8
6400c7a9:	mov    BYTE PTR [esi+0x5],dl
6400c7ac:	mov    BYTE PTR [esi+0x4],al
6400c7af:	mov    edx,eax
6400c7b1:	shr    edx,0x10
6400c7b4:	shr    eax,0x18
6400c7b7:	mov    BYTE PTR [esi+0x6],dl
6400c7ba:	mov    BYTE PTR [esi+0x7],al
6400c7bd:	mov    eax,DWORD PTR [esp+0x10]
6400c7c1:	mov    edx,eax
6400c7c3:	shr    edx,0x8
6400c7c6:	mov    BYTE PTR [esi+0x9],dl
6400c7c9:	mov    edx,eax
6400c7cb:	mov    BYTE PTR [esi+0x8],al
6400c7ce:	shr    edx,0x10
6400c7d1:	shr    eax,0x18
6400c7d4:	mov    BYTE PTR [esi+0xa],dl
6400c7d7:	mov    BYTE PTR [esi+0xb],al
6400c7da:	mov    eax,ecx
6400c7dc:	mov    edx,ecx
6400c7de:	mov    BYTE PTR [esi+0xc],cl
6400c7e1:	shr    eax,0x8
6400c7e4:	shr    edx,0x10
6400c7e7:	pop    edi
6400c7e8:	shr    ecx,0x18
6400c7eb:	mov    BYTE PTR [esi+0xd],al
6400c7ee:	mov    BYTE PTR [esi+0xe],dl
6400c7f1:	mov    BYTE PTR [esi+0xf],cl
6400c7f4:	pop    esi
6400c7f5:	pop    ebp
6400c7f6:	pop    ebx
6400c7f7:	add    esp,0x10
6400c7fa:	ret    
6400c7fb:	int3   
6400c7fc:	int3   
6400c7fd:	int3   
6400c7fe:	int3   
6400c7ff:	int3   
6400c800:	sub    esp,0x30
6400c803:	mov    eax,ds:0x6402d09c
6400c808:	xor    eax,esp
6400c80a:	mov    DWORD PTR [esp+0x2c],eax
6400c80e:	cmp    DWORD PTR [esp+0x38],0x0
6400c813:	mov    eax,DWORD PTR [esp+0x34]
6400c817:	push   ebx
6400c818:	push   ebp
6400c819:	mov    ebp,DWORD PTR [esp+0x44]
6400c81d:	push   esi
6400c81e:	mov    esi,DWORD PTR [esp+0x4c]
6400c822:	push   edi
6400c823:	mov    edi,edx
6400c825:	mov    DWORD PTR [esp+0x24],eax
6400c829:	jne    0x6400c8e7
6400c82f:	test   ecx,ecx
6400c831:	jle    0x6400c9c6
6400c837:	lea    eax,[ecx-0x1]
6400c83a:	mov    ebx,ebp
6400c83c:	shr    eax,0x4
6400c83f:	sub    ebx,esi
6400c841:	add    eax,0x1
6400c844:	mov    DWORD PTR [esp+0x10],eax
6400c848:	mov    edx,DWORD PTR [edi+0x4]
6400c84b:	mov    ecx,DWORD PTR [edi]
6400c84d:	mov    eax,DWORD PTR [edi+0x8]
6400c850:	push   esi
6400c851:	mov    DWORD PTR [esp+0x34],edx
6400c855:	mov    edx,DWORD PTR [esp+0x28]
6400c859:	mov    DWORD PTR [esp+0x30],ecx
6400c85d:	mov    ecx,DWORD PTR [edi+0xc]
6400c860:	mov    DWORD PTR [esp+0x38],eax
6400c864:	push   0x0
6400c866:	push   edx
6400c867:	mov    eax,edi
6400c869:	mov    DWORD PTR [esp+0x44],ecx
6400c86d:	call   0x6400bdb0
6400c872:	mov    eax,esi
6400c874:	add    esp,0xc
6400c877:	lea    ecx,[ebp+0x2]
6400c87a:	mov    esi,0x4
6400c87f:	nop
6400c880:	movzx  edx,BYTE PTR [ebx+eax*1]
6400c884:	xor    BYTE PTR [eax],dl
6400c886:	movzx  edx,BYTE PTR [ecx-0x1]
6400c88a:	xor    BYTE PTR [eax+0x1],dl
6400c88d:	movzx  edx,BYTE PTR [ecx]
6400c890:	xor    BYTE PTR [eax+0x2],dl
6400c893:	movzx  edx,BYTE PTR [ecx+0x1]
6400c897:	xor    BYTE PTR [eax+0x3],dl
6400c89a:	add    eax,0x4
6400c89d:	add    ecx,0x4
6400c8a0:	sub    esi,0x1
6400c8a3:	jne    0x6400c880
6400c8a5:	mov    ecx,DWORD PTR [esp+0x2c]
6400c8a9:	mov    edx,DWORD PTR [esp+0x30]
6400c8ad:	mov    DWORD PTR [ebp+0x0],ecx
6400c8b0:	mov    ecx,DWORD PTR [esp+0x34]
6400c8b4:	mov    DWORD PTR [ebp+0x4],edx
6400c8b7:	mov    edx,DWORD PTR [esp+0x38]
6400c8bb:	add    edi,0x10
6400c8be:	sub    ebx,0x10
6400c8c1:	sub    DWORD PTR [esp+0x10],0x1
6400c8c6:	mov    DWORD PTR [ebp+0x8],ecx
6400c8c9:	mov    DWORD PTR [ebp+0xc],edx
6400c8cc:	mov    esi,eax
6400c8ce:	jne    0x6400c848
6400c8d4:	pop    edi
6400c8d5:	pop    esi
6400c8d6:	pop    ebp
6400c8d7:	pop    ebx
6400c8d8:	mov    ecx,DWORD PTR [esp+0x2c]
6400c8dc:	xor    ecx,esp
6400c8de:	call   0x64012e6c
6400c8e3:	add    esp,0x30
6400c8e6:	ret    
6400c8e7:	test   ecx,ecx
6400c8e9:	jle    0x6400c9c6
6400c8ef:	mov    eax,ebp
6400c8f1:	sub    eax,esi
6400c8f3:	mov    DWORD PTR [esp+0x10],eax
6400c8f7:	mov    eax,ebp
6400c8f9:	sub    eax,edi
6400c8fb:	mov    DWORD PTR [esp+0x14],eax
6400c8ff:	lea    eax,[ecx-0x1]
6400c902:	shr    eax,0x4
6400c905:	add    eax,0x1
6400c908:	mov    DWORD PTR [esp+0x1c],eax
6400c90c:	lea    esp,[esp+0x0]
6400c910:	lea    eax,[ebp+0x3]
6400c913:	mov    edx,esi
6400c915:	sub    edx,edi
6400c917:	mov    DWORD PTR [esp+0x20],eax
6400c91b:	lea    ecx,[esi+0x1]
6400c91e:	mov    eax,edi
6400c920:	mov    DWORD PTR [esp+0x28],edx
6400c924:	mov    DWORD PTR [esp+0x18],0x4
6400c92c:	jmp    0x6400c934
6400c92e:	mov    edi,edi
6400c930:	mov    edx,DWORD PTR [esp+0x28]
6400c934:	mov    ebx,DWORD PTR [esp+0x14]
6400c938:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400c93c:	xor    bl,BYTE PTR [eax]
6400c93e:	add    eax,0x4
6400c941:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400c945:	mov    edx,DWORD PTR [esp+0x10]
6400c949:	mov    dl,BYTE PTR [ecx+edx*1]
6400c94c:	xor    dl,BYTE PTR [eax-0x3]
6400c94f:	add    ecx,0x4
6400c952:	mov    BYTE PTR [ecx-0x4],dl
6400c955:	movzx  ebx,BYTE PTR [eax-0x2]
6400c959:	mov    edx,DWORD PTR [esp+0x20]
6400c95d:	xor    bl,BYTE PTR [edx-0x1]
6400c960:	add    edx,0x4
6400c963:	mov    BYTE PTR [ecx-0x3],bl
6400c966:	movzx  ebx,BYTE PTR [eax-0x1]
6400c96a:	xor    bl,BYTE PTR [edx-0x4]
6400c96d:	mov    DWORD PTR [esp+0x20],edx
6400c971:	mov    BYTE PTR [ecx-0x2],bl
6400c974:	mov    ebx,0x1
6400c979:	sub    DWORD PTR [esp+0x18],ebx
6400c97d:	jne    0x6400c930
6400c97f:	mov    eax,DWORD PTR [esp+0x48]
6400c983:	mov    ecx,DWORD PTR [esp+0x24]
6400c987:	push   esi
6400c988:	push   eax
6400c989:	push   ecx
6400c98a:	mov    eax,esi
6400c98c:	call   0x6400bdb0
6400c991:	mov    edx,DWORD PTR [esi]
6400c993:	mov    DWORD PTR [ebp+0x0],edx
6400c996:	mov    eax,DWORD PTR [esi+0x4]
6400c999:	mov    DWORD PTR [ebp+0x4],eax
6400c99c:	mov    ecx,DWORD PTR [esi+0x8]
6400c99f:	mov    eax,0x10
6400c9a4:	sub    DWORD PTR [esp+0x20],eax
6400c9a8:	sub    DWORD PTR [esp+0x1c],eax
6400c9ac:	mov    DWORD PTR [ebp+0x8],ecx
6400c9af:	mov    edx,DWORD PTR [esi+0xc]
6400c9b2:	add    esp,0xc
6400c9b5:	add    edi,eax
6400c9b7:	add    esi,eax
6400c9b9:	sub    DWORD PTR [esp+0x1c],ebx
6400c9bd:	mov    DWORD PTR [ebp+0xc],edx
6400c9c0:	jne    0x6400c910
6400c9c6:	mov    ecx,DWORD PTR [esp+0x3c]
6400c9ca:	pop    edi
6400c9cb:	pop    esi
6400c9cc:	pop    ebp
6400c9cd:	pop    ebx
6400c9ce:	xor    ecx,esp
6400c9d0:	call   0x64012e6c
6400c9d5:	add    esp,0x30
6400c9d8:	ret    
6400c9d9:	int3   
6400c9da:	int3   
6400c9db:	int3   
6400c9dc:	int3   
6400c9dd:	int3   
6400c9de:	int3   
6400c9df:	int3   
6400c9e0:	push   0xffffffff
6400c9e2:	push   0x640228eb
6400c9e7:	mov    eax,fs:0x0
6400c9ed:	push   eax
6400c9ee:	sub    esp,0x138
6400c9f4:	mov    eax,ds:0x6402d09c
6400c9f9:	xor    eax,esp
6400c9fb:	mov    DWORD PTR [esp+0x134],eax
6400ca02:	push   ebp
6400ca03:	push   esi
6400ca04:	push   edi
6400ca05:	mov    eax,ds:0x6402d09c
6400ca0a:	xor    eax,esp
6400ca0c:	push   eax
6400ca0d:	lea    eax,[esp+0x148]
6400ca14:	mov    fs:0x0,eax
6400ca1a:	mov    ebp,DWORD PTR [esp+0x15c]
6400ca21:	mov    eax,DWORD PTR [esp+0x158]
6400ca28:	mov    DWORD PTR [esp+0x14],eax
6400ca2c:	lea    esi,[ebp+0x8]
6400ca2f:	mov    eax,esi
6400ca31:	and    eax,0xf
6400ca34:	mov    DWORD PTR [esp+0x18],ecx
6400ca38:	mov    DWORD PTR [esp+0x10],0x0
6400ca40:	je     0x6400ca4b
6400ca42:	mov    edx,0x10
6400ca47:	sub    edx,eax
6400ca49:	add    esi,edx
6400ca4b:	push   esi
6400ca4c:	call   0x6401260d
6400ca51:	mov    edi,eax
6400ca53:	mov    DWORD PTR [esp+0x14],edi
6400ca57:	push   esi
6400ca58:	mov    DWORD PTR [esp+0x158],0x0
6400ca63:	call   0x6401260d
6400ca68:	push   esi
6400ca69:	push   0x0
6400ca6b:	push   edi
6400ca6c:	mov    DWORD PTR [ebx],eax
6400ca6e:	call   0x64013570
6400ca73:	mov    eax,DWORD PTR [esp+0x28]
6400ca77:	push   ebp
6400ca78:	push   eax
6400ca79:	lea    ecx,[edi+0x8]
6400ca7c:	mov    DWORD PTR [edi],0x52514f4b
6400ca82:	push   ecx
6400ca83:	mov    DWORD PTR [edi+0x4],ebp
6400ca86:	call   0x64014890
6400ca8b:	xor    eax,eax
6400ca8d:	mov    DWORD PTR [esp+0x154],eax
6400ca94:	mov    DWORD PTR [esp+0x158],eax
6400ca9b:	mov    DWORD PTR [esp+0x15c],eax
6400caa2:	mov    DWORD PTR [esp+0x160],eax
6400caa9:	lea    eax,[esp+0x3c]
6400caad:	call   0x6400b6c0
6400cab2:	mov    eax,DWORD PTR [ebx]
6400cab4:	push   eax
6400cab5:	lea    edx,[esp+0x158]
6400cabc:	push   edx
6400cabd:	lea    eax,[esp+0x44]
6400cac1:	push   0x1
6400cac3:	push   eax
6400cac4:	mov    edx,edi
6400cac6:	mov    ecx,esi
6400cac8:	call   0x6400c800
6400cacd:	mov    ecx,DWORD PTR [esp+0x48]
6400cad1:	push   0x0
6400cad3:	mov    DWORD PTR [ecx],esi
6400cad5:	call   0x64012612
6400cada:	push   edi
6400cadb:	call   0x64012612
6400cae0:	add    esp,0x38
6400cae3:	mov    eax,ebx
6400cae5:	mov    ecx,DWORD PTR [esp+0x148]
6400caec:	mov    DWORD PTR fs:0x0,ecx
6400caf3:	pop    ecx
6400caf4:	pop    edi
6400caf5:	pop    esi
6400caf6:	pop    ebp
6400caf7:	mov    ecx,DWORD PTR [esp+0x134]
6400cafe:	xor    ecx,esp
6400cb00:	call   0x64012e6c
6400cb05:	add    esp,0x144
6400cb0b:	ret    
6400cb0c:	int3   
6400cb0d:	int3   
6400cb0e:	int3   
6400cb0f:	int3   
6400cb10:	sub    esp,0x13c
6400cb16:	mov    eax,ds:0x6402d09c
6400cb1b:	xor    eax,esp
6400cb1d:	mov    DWORD PTR [esp+0x134],eax
6400cb24:	mov    eax,DWORD PTR [esp+0x144]
6400cb2b:	push   ebp
6400cb2c:	mov    ebp,DWORD PTR [esp+0x144]
6400cb33:	mov    DWORD PTR [esp+0x8],eax
6400cb37:	xor    eax,eax
6400cb39:	test   bl,0xf
6400cb3c:	push   esi
6400cb3d:	mov    DWORD PTR [esp+0x8],eax
6400cb41:	je     0x6400cb4f
6400cb43:	mov    DWORD PTR [esp+0x8],eax
6400cb47:	mov    DWORD PTR [edi],eax
6400cb49:	push   eax
6400cb4a:	jmp    0x6400cbef
6400cb4f:	push   ebx
6400cb50:	call   0x6401260d
6400cb55:	mov    esi,eax
6400cb57:	xor    eax,eax
6400cb59:	mov    DWORD PTR [esp+0x130],eax
6400cb60:	mov    DWORD PTR [esp+0x134],eax
6400cb67:	mov    DWORD PTR [esp+0x138],eax
6400cb6e:	mov    DWORD PTR [esp+0x13c],eax
6400cb75:	add    esp,0x4
6400cb78:	lea    eax,[esp+0x10]
6400cb7c:	call   0x6400bbd0
6400cb81:	push   esi
6400cb82:	lea    ecx,[esp+0x130]
6400cb89:	push   ecx
6400cb8a:	lea    edx,[esp+0x18]
6400cb8e:	push   0x0
6400cb90:	push   edx
6400cb91:	mov    edx,ebp
6400cb93:	mov    ecx,ebx
6400cb95:	call   0x6400c800
6400cb9a:	add    esp,0x10
6400cb9d:	cmp    DWORD PTR [esi],0x52534f4b
6400cba3:	je     0x6400cbca
6400cba5:	push   0x0
6400cba7:	mov    DWORD PTR [esp+0xc],0x0
6400cbaf:	mov    DWORD PTR [edi],0x0
6400cbb5:	call   0x64012612
6400cbba:	add    esp,0x4
6400cbbd:	push   0x0
6400cbbf:	call   0x64012612
6400cbc4:	add    esp,0x4
6400cbc7:	push   esi
6400cbc8:	jmp    0x6400cbef
6400cbca:	mov    eax,DWORD PTR [esi+0x4]
6400cbcd:	mov    ecx,DWORD PTR [esp+0xc]
6400cbd1:	push   eax
6400cbd2:	lea    edx,[esi+0x8]
6400cbd5:	push   edx
6400cbd6:	push   esi
6400cbd7:	mov    DWORD PTR [ecx],eax
6400cbd9:	call   0x64013eb0
6400cbde:	add    esp,0xc
6400cbe1:	push   0x0
6400cbe3:	mov    DWORD PTR [edi],esi
6400cbe5:	call   0x64012612
6400cbea:	add    esp,0x4
6400cbed:	push   0x0
6400cbef:	call   0x64012612
6400cbf4:	mov    ecx,DWORD PTR [esp+0x140]
6400cbfb:	add    esp,0x4
6400cbfe:	pop    esi
6400cbff:	pop    ebp
6400cc00:	xor    ecx,esp
6400cc02:	mov    eax,edi
6400cc04:	call   0x64012e6c
6400cc09:	add    esp,0x13c
6400cc0f:	ret    
6400cc10:	push   ebp
6400cc11:	mov    ebp,esp
6400cc13:	and    esp,0xfffffff8
6400cc16:	push   0xffffffff
6400cc18:	push   0x640238ae
6400cc1d:	mov    eax,fs:0x0
6400cc23:	push   eax
6400cc24:	push   ecx
6400cc25:	push   ebx
6400cc26:	push   esi
6400cc27:	mov    eax,ds:0x6402d09c
6400cc2c:	xor    eax,esp
6400cc2e:	push   eax
6400cc2f:	lea    eax,[esp+0x10]
6400cc33:	mov    fs:0x0,eax
6400cc39:	mov    ebx,0x1
6400cc3e:	test   BYTE PTR ds:0x6403149c,bl
6400cc44:	jne    0x6400ccce
6400cc4a:	or     DWORD PTR ds:0x6403149c,ebx
6400cc50:	push   0x64028614
6400cc55:	push   0xc
6400cc57:	push   0x64028648
6400cc5c:	mov    DWORD PTR [esp+0x24],0x0
6400cc64:	call   0x640057b0
6400cc69:	push   0x64028658
6400cc6e:	push   0x8
6400cc70:	push   0x64028694
6400cc75:	mov    esi,eax
6400cc77:	call   0x640059b0
6400cc7c:	add    esp,0x18
6400cc7f:	push   eax
6400cc80:	call   DWORD PTR ds:0x64025018
6400cc86:	add    DWORD PTR ds:0x64031270,ebx
6400cc8c:	test   eax,eax
6400cc8e:	je     0x6400ccb5
6400cc90:	push   esi
6400cc91:	push   eax
6400cc92:	call   DWORD PTR ds:0x64025014
6400cc98:	add    DWORD PTR ds:0x64031274,ebx
6400cc9e:	mov    ds:0x64031498,eax
6400cca3:	mov    ecx,DWORD PTR [esp+0x10]
6400cca7:	mov    DWORD PTR fs:0x0,ecx
6400ccae:	pop    ecx
6400ccaf:	pop    esi
6400ccb0:	pop    ebx
6400ccb1:	mov    esp,ebp
6400ccb3:	pop    ebp
6400ccb4:	ret    
6400ccb5:	xor    eax,eax
6400ccb7:	mov    ds:0x64031498,eax
6400ccbc:	mov    ecx,DWORD PTR [esp+0x10]
6400ccc0:	mov    DWORD PTR fs:0x0,ecx
6400ccc7:	pop    ecx
6400ccc8:	pop    esi
6400ccc9:	pop    ebx
6400ccca:	mov    esp,ebp
6400cccc:	pop    ebp
6400cccd:	ret    
6400ccce:	mov    eax,ds:0x64031498
6400ccd3:	mov    ecx,DWORD PTR [esp+0x10]
6400ccd7:	mov    DWORD PTR fs:0x0,ecx
6400ccde:	pop    ecx
6400ccdf:	pop    esi
6400cce0:	pop    ebx
6400cce1:	mov    esp,ebp
6400cce3:	pop    ebp
6400cce4:	ret    
6400cce5:	int3   
6400cce6:	int3   
6400cce7:	int3   
6400cce8:	int3   
6400cce9:	int3   
6400ccea:	int3   
6400cceb:	int3   
6400ccec:	int3   
6400cced:	int3   
6400ccee:	int3   
6400ccef:	int3   
6400ccf0:	push   ebp
6400ccf1:	mov    ebp,esp
6400ccf3:	and    esp,0xfffffff8
6400ccf6:	push   0xffffffff
6400ccf8:	push   0x6402387e
6400ccfd:	mov    eax,fs:0x0
6400cd03:	push   eax
6400cd04:	push   ecx
6400cd05:	push   ebx
6400cd06:	push   esi
6400cd07:	mov    eax,ds:0x6402d09c
6400cd0c:	xor    eax,esp
6400cd0e:	push   eax
6400cd0f:	lea    eax,[esp+0x10]
6400cd13:	mov    fs:0x0,eax
6400cd19:	mov    ebx,0x1
6400cd1e:	test   BYTE PTR ds:0x64031494,bl
6400cd24:	jne    0x6400cdae
6400cd2a:	or     DWORD PTR ds:0x64031494,ebx
6400cd30:	push   0x640286a8
6400cd35:	push   0xe
6400cd37:	push   0x640286d4
6400cd3c:	mov    DWORD PTR [esp+0x24],0x0
6400cd44:	call   0x640057b0
6400cd49:	push   0x640286e4
6400cd4e:	push   0x8
6400cd50:	push   0x64028694
6400cd55:	mov    esi,eax
6400cd57:	call   0x640059b0
6400cd5c:	add    esp,0x18
6400cd5f:	push   eax
6400cd60:	call   DWORD PTR ds:0x64025018
6400cd66:	add    DWORD PTR ds:0x64031270,ebx
6400cd6c:	test   eax,eax
6400cd6e:	je     0x6400cd95
6400cd70:	push   esi
6400cd71:	push   eax
6400cd72:	call   DWORD PTR ds:0x64025014
6400cd78:	add    DWORD PTR ds:0x64031274,ebx
6400cd7e:	mov    ds:0x64031490,eax
6400cd83:	mov    ecx,DWORD PTR [esp+0x10]
6400cd87:	mov    DWORD PTR fs:0x0,ecx
6400cd8e:	pop    ecx
6400cd8f:	pop    esi
6400cd90:	pop    ebx
6400cd91:	mov    esp,ebp
6400cd93:	pop    ebp
6400cd94:	ret    
6400cd95:	xor    eax,eax
6400cd97:	mov    ds:0x64031490,eax
6400cd9c:	mov    ecx,DWORD PTR [esp+0x10]
6400cda0:	mov    DWORD PTR fs:0x0,ecx
6400cda7:	pop    ecx
6400cda8:	pop    esi
6400cda9:	pop    ebx
6400cdaa:	mov    esp,ebp
6400cdac:	pop    ebp
6400cdad:	ret    
6400cdae:	mov    eax,ds:0x64031490
6400cdb3:	mov    ecx,DWORD PTR [esp+0x10]
6400cdb7:	mov    DWORD PTR fs:0x0,ecx
6400cdbe:	pop    ecx
6400cdbf:	pop    esi
6400cdc0:	pop    ebx
6400cdc1:	mov    esp,ebp
6400cdc3:	pop    ebp
6400cdc4:	ret    
6400cdc5:	int3   
6400cdc6:	int3   
6400cdc7:	int3   
6400cdc8:	int3   
6400cdc9:	int3   
6400cdca:	int3   
6400cdcb:	int3   
6400cdcc:	int3   
6400cdcd:	int3   
6400cdce:	int3   
6400cdcf:	int3   
6400cdd0:	push   ebp
6400cdd1:	mov    ebp,esp
6400cdd3:	and    esp,0xfffffff8
6400cdd6:	push   0xffffffff
6400cdd8:	push   0x6402384e
6400cddd:	mov    eax,fs:0x0
6400cde3:	push   eax
6400cde4:	push   ecx
6400cde5:	push   ebx
6400cde6:	push   esi
6400cde7:	mov    eax,ds:0x6402d09c
6400cdec:	xor    eax,esp
6400cdee:	push   eax
6400cdef:	lea    eax,[esp+0x10]
6400cdf3:	mov    fs:0x0,eax
6400cdf9:	mov    ebx,0x1
6400cdfe:	test   BYTE PTR ds:0x6403148c,bl
6400ce04:	jne    0x6400ce8e
6400ce0a:	or     DWORD PTR ds:0x6403148c,ebx
6400ce10:	push   0x64028708
6400ce15:	push   0xf
6400ce17:	push   0x64028734
6400ce1c:	mov    DWORD PTR [esp+0x24],0x0
6400ce24:	call   0x640057b0
6400ce29:	push   0x64028744
6400ce2e:	push   0x8
6400ce30:	push   0x64028694
6400ce35:	mov    esi,eax
6400ce37:	call   0x640059b0
6400ce3c:	add    esp,0x18
6400ce3f:	push   eax
6400ce40:	call   DWORD PTR ds:0x64025018
6400ce46:	add    DWORD PTR ds:0x64031270,ebx
6400ce4c:	test   eax,eax
6400ce4e:	je     0x6400ce75
6400ce50:	push   esi
6400ce51:	push   eax
6400ce52:	call   DWORD PTR ds:0x64025014
6400ce58:	add    DWORD PTR ds:0x64031274,ebx
6400ce5e:	mov    ds:0x64031488,eax
6400ce63:	mov    ecx,DWORD PTR [esp+0x10]
6400ce67:	mov    DWORD PTR fs:0x0,ecx
6400ce6e:	pop    ecx
6400ce6f:	pop    esi
6400ce70:	pop    ebx
6400ce71:	mov    esp,ebp
6400ce73:	pop    ebp
6400ce74:	ret    
6400ce75:	xor    eax,eax
6400ce77:	mov    ds:0x64031488,eax
6400ce7c:	mov    ecx,DWORD PTR [esp+0x10]
6400ce80:	mov    DWORD PTR fs:0x0,ecx
6400ce87:	pop    ecx
6400ce88:	pop    esi
6400ce89:	pop    ebx
6400ce8a:	mov    esp,ebp
6400ce8c:	pop    ebp
6400ce8d:	ret    
6400ce8e:	mov    eax,ds:0x64031488
6400ce93:	mov    ecx,DWORD PTR [esp+0x10]
6400ce97:	mov    DWORD PTR fs:0x0,ecx
6400ce9e:	pop    ecx
6400ce9f:	pop    esi
6400cea0:	pop    ebx
6400cea1:	mov    esp,ebp
6400cea3:	pop    ebp
6400cea4:	ret    
6400cea5:	int3   
6400cea6:	int3   
6400cea7:	int3   
6400cea8:	int3   
6400cea9:	int3   
6400ceaa:	int3   
6400ceab:	int3   
6400ceac:	int3   
6400cead:	int3   
6400ceae:	int3   
6400ceaf:	int3   
6400ceb0:	push   ebp
6400ceb1:	mov    ebp,esp
6400ceb3:	and    esp,0xfffffff8
6400ceb6:	push   0xffffffff
6400ceb8:	push   0x6402381e
6400cebd:	mov    eax,fs:0x0
6400cec3:	push   eax
6400cec4:	push   ecx
6400cec5:	push   ebx
6400cec6:	push   esi
6400cec7:	mov    eax,ds:0x6402d09c
6400cecc:	xor    eax,esp
6400cece:	push   eax
6400cecf:	lea    eax,[esp+0x10]
6400ced3:	mov    fs:0x0,eax
6400ced9:	mov    ebx,0x1
6400cede:	test   BYTE PTR ds:0x64031484,bl
6400cee4:	jne    0x6400cf6e
6400ceea:	or     DWORD PTR ds:0x64031484,ebx
6400cef0:	push   0x64028778
6400cef5:	push   0xf
6400cef7:	push   0x640287ac
6400cefc:	mov    DWORD PTR [esp+0x24],0x0
6400cf04:	call   0x640057b0
6400cf09:	push   0x640287bc
6400cf0e:	push   0x8
6400cf10:	push   0x64028694
6400cf15:	mov    esi,eax
6400cf17:	call   0x640059b0
6400cf1c:	add    esp,0x18
6400cf1f:	push   eax
6400cf20:	call   DWORD PTR ds:0x64025018
6400cf26:	add    DWORD PTR ds:0x64031270,ebx
6400cf2c:	test   eax,eax
6400cf2e:	je     0x6400cf55
6400cf30:	push   esi
6400cf31:	push   eax
6400cf32:	call   DWORD PTR ds:0x64025014
6400cf38:	add    DWORD PTR ds:0x64031274,ebx
6400cf3e:	mov    ds:0x64031480,eax
6400cf43:	mov    ecx,DWORD PTR [esp+0x10]
6400cf47:	mov    DWORD PTR fs:0x0,ecx
6400cf4e:	pop    ecx
6400cf4f:	pop    esi
6400cf50:	pop    ebx
6400cf51:	mov    esp,ebp
6400cf53:	pop    ebp
6400cf54:	ret    
6400cf55:	xor    eax,eax
6400cf57:	mov    ds:0x64031480,eax
6400cf5c:	mov    ecx,DWORD PTR [esp+0x10]
6400cf60:	mov    DWORD PTR fs:0x0,ecx
6400cf67:	pop    ecx
6400cf68:	pop    esi
6400cf69:	pop    ebx
6400cf6a:	mov    esp,ebp
6400cf6c:	pop    ebp
6400cf6d:	ret    
6400cf6e:	mov    eax,ds:0x64031480
6400cf73:	mov    ecx,DWORD PTR [esp+0x10]
6400cf77:	mov    DWORD PTR fs:0x0,ecx
6400cf7e:	pop    ecx
6400cf7f:	pop    esi
6400cf80:	pop    ebx
6400cf81:	mov    esp,ebp
6400cf83:	pop    ebp
6400cf84:	ret    
6400cf85:	int3   
6400cf86:	int3   
6400cf87:	int3   
6400cf88:	int3   
6400cf89:	int3   
6400cf8a:	int3   
6400cf8b:	int3   
6400cf8c:	int3   
6400cf8d:	int3   
6400cf8e:	int3   
6400cf8f:	int3   
6400cf90:	push   ebp
6400cf91:	mov    ebp,esp
6400cf93:	and    esp,0xfffffff8
6400cf96:	push   0xffffffff
6400cf98:	push   0x640237ee
6400cf9d:	mov    eax,fs:0x0
6400cfa3:	push   eax
6400cfa4:	push   ecx
6400cfa5:	push   ebx
6400cfa6:	push   esi
6400cfa7:	mov    eax,ds:0x6402d09c
6400cfac:	xor    eax,esp
6400cfae:	push   eax
6400cfaf:	lea    eax,[esp+0x10]
6400cfb3:	mov    fs:0x0,eax
6400cfb9:	mov    ebx,0x1
6400cfbe:	test   BYTE PTR ds:0x6403147c,bl
6400cfc4:	jne    0x6400d04e
6400cfca:	or     DWORD PTR ds:0x6403147c,ebx
6400cfd0:	push   0x640287e4
6400cfd5:	push   0x13
6400cfd7:	push   0x64028814
6400cfdc:	mov    DWORD PTR [esp+0x24],0x0
6400cfe4:	call   0x640057b0
6400cfe9:	push   0x64028828
6400cfee:	push   0x8
6400cff0:	push   0x64028854
6400cff5:	mov    esi,eax
6400cff7:	call   0x640059b0
6400cffc:	add    esp,0x18
6400cfff:	push   eax
6400d000:	call   DWORD PTR ds:0x64025018
6400d006:	add    DWORD PTR ds:0x64031270,ebx
6400d00c:	test   eax,eax
6400d00e:	je     0x6400d035
6400d010:	push   esi
6400d011:	push   eax
6400d012:	call   DWORD PTR ds:0x64025014
6400d018:	add    DWORD PTR ds:0x64031274,ebx
6400d01e:	mov    ds:0x64031478,eax
6400d023:	mov    ecx,DWORD PTR [esp+0x10]
6400d027:	mov    DWORD PTR fs:0x0,ecx
6400d02e:	pop    ecx
6400d02f:	pop    esi
6400d030:	pop    ebx
6400d031:	mov    esp,ebp
6400d033:	pop    ebp
6400d034:	ret    
6400d035:	xor    eax,eax
6400d037:	mov    ds:0x64031478,eax
6400d03c:	mov    ecx,DWORD PTR [esp+0x10]
6400d040:	mov    DWORD PTR fs:0x0,ecx
6400d047:	pop    ecx
6400d048:	pop    esi
6400d049:	pop    ebx
6400d04a:	mov    esp,ebp
6400d04c:	pop    ebp
6400d04d:	ret    
6400d04e:	mov    eax,ds:0x64031478
6400d053:	mov    ecx,DWORD PTR [esp+0x10]
6400d057:	mov    DWORD PTR fs:0x0,ecx
6400d05e:	pop    ecx
6400d05f:	pop    esi
6400d060:	pop    ebx
6400d061:	mov    esp,ebp
6400d063:	pop    ebp
6400d064:	ret    
6400d065:	int3   
6400d066:	int3   
6400d067:	int3   
6400d068:	int3   
6400d069:	int3   
6400d06a:	int3   
6400d06b:	int3   
6400d06c:	int3   
6400d06d:	int3   
6400d06e:	int3   
6400d06f:	int3   
6400d070:	push   ebp
6400d071:	mov    ebp,esp
6400d073:	and    esp,0xfffffff8
6400d076:	push   0xffffffff
6400d078:	push   0x640237be
6400d07d:	mov    eax,fs:0x0
6400d083:	push   eax
6400d084:	push   ecx
6400d085:	push   ebx
6400d086:	push   esi
6400d087:	mov    eax,ds:0x6402d09c
6400d08c:	xor    eax,esp
6400d08e:	push   eax
6400d08f:	lea    eax,[esp+0x10]
6400d093:	mov    fs:0x0,eax
6400d099:	mov    ebx,0x1
6400d09e:	test   BYTE PTR ds:0x64031474,bl
6400d0a4:	jne    0x6400d12e
6400d0aa:	or     DWORD PTR ds:0x64031474,ebx
6400d0b0:	push   0x64028868
6400d0b5:	push   0xe
6400d0b7:	push   0x64028894
6400d0bc:	mov    DWORD PTR [esp+0x24],0x0
6400d0c4:	call   0x640057b0
6400d0c9:	push   0x640288a4
6400d0ce:	push   0x8
6400d0d0:	push   0x64028854
6400d0d5:	mov    esi,eax
6400d0d7:	call   0x640059b0
6400d0dc:	add    esp,0x18
6400d0df:	push   eax
6400d0e0:	call   DWORD PTR ds:0x64025018
6400d0e6:	add    DWORD PTR ds:0x64031270,ebx
6400d0ec:	test   eax,eax
6400d0ee:	je     0x6400d115
6400d0f0:	push   esi
6400d0f1:	push   eax
6400d0f2:	call   DWORD PTR ds:0x64025014
6400d0f8:	add    DWORD PTR ds:0x64031274,ebx
6400d0fe:	mov    ds:0x64031470,eax
6400d103:	mov    ecx,DWORD PTR [esp+0x10]
6400d107:	mov    DWORD PTR fs:0x0,ecx
6400d10e:	pop    ecx
6400d10f:	pop    esi
6400d110:	pop    ebx
6400d111:	mov    esp,ebp
6400d113:	pop    ebp
6400d114:	ret    
6400d115:	xor    eax,eax
6400d117:	mov    ds:0x64031470,eax
6400d11c:	mov    ecx,DWORD PTR [esp+0x10]
6400d120:	mov    DWORD PTR fs:0x0,ecx
6400d127:	pop    ecx
6400d128:	pop    esi
6400d129:	pop    ebx
6400d12a:	mov    esp,ebp
6400d12c:	pop    ebp
6400d12d:	ret    
6400d12e:	mov    eax,ds:0x64031470
6400d133:	mov    ecx,DWORD PTR [esp+0x10]
6400d137:	mov    DWORD PTR fs:0x0,ecx
6400d13e:	pop    ecx
6400d13f:	pop    esi
6400d140:	pop    ebx
6400d141:	mov    esp,ebp
6400d143:	pop    ebp
6400d144:	ret    
6400d145:	int3   
6400d146:	int3   
6400d147:	int3   
6400d148:	int3   
6400d149:	int3   
6400d14a:	int3   
6400d14b:	int3   
6400d14c:	int3   
6400d14d:	int3   
6400d14e:	int3   
6400d14f:	int3   
6400d150:	push   ebp
6400d151:	mov    ebp,esp
6400d153:	and    esp,0xfffffff8
6400d156:	push   0xffffffff
6400d158:	push   0x6402378e
6400d15d:	mov    eax,fs:0x0
6400d163:	push   eax
6400d164:	push   ecx
6400d165:	push   ebx
6400d166:	push   esi
6400d167:	mov    eax,ds:0x6402d09c
6400d16c:	xor    eax,esp
6400d16e:	push   eax
6400d16f:	lea    eax,[esp+0x10]
6400d173:	mov    fs:0x0,eax
6400d179:	mov    ebx,0x1
6400d17e:	test   BYTE PTR ds:0x6403146c,bl
6400d184:	jne    0x6400d20e
6400d18a:	or     DWORD PTR ds:0x6403146c,ebx
6400d190:	push   0x640288d0
6400d195:	push   0xb
6400d197:	push   0x64028910
6400d19c:	mov    DWORD PTR [esp+0x24],0x0
6400d1a4:	call   0x640057b0
6400d1a9:	push   0x6402891c
6400d1ae:	push   0x8
6400d1b0:	push   0x64028854
6400d1b5:	mov    esi,eax
6400d1b7:	call   0x640059b0
6400d1bc:	add    esp,0x18
6400d1bf:	push   eax
6400d1c0:	call   DWORD PTR ds:0x64025018
6400d1c6:	add    DWORD PTR ds:0x64031270,ebx
6400d1cc:	test   eax,eax
6400d1ce:	je     0x6400d1f5
6400d1d0:	push   esi
6400d1d1:	push   eax
6400d1d2:	call   DWORD PTR ds:0x64025014
6400d1d8:	add    DWORD PTR ds:0x64031274,ebx
6400d1de:	mov    ds:0x64031468,eax
6400d1e3:	mov    ecx,DWORD PTR [esp+0x10]
6400d1e7:	mov    DWORD PTR fs:0x0,ecx
6400d1ee:	pop    ecx
6400d1ef:	pop    esi
6400d1f0:	pop    ebx
6400d1f1:	mov    esp,ebp
6400d1f3:	pop    ebp
6400d1f4:	ret    
6400d1f5:	xor    eax,eax
6400d1f7:	mov    ds:0x64031468,eax
6400d1fc:	mov    ecx,DWORD PTR [esp+0x10]
6400d200:	mov    DWORD PTR fs:0x0,ecx
6400d207:	pop    ecx
6400d208:	pop    esi
6400d209:	pop    ebx
6400d20a:	mov    esp,ebp
6400d20c:	pop    ebp
6400d20d:	ret    
6400d20e:	mov    eax,ds:0x64031468
6400d213:	mov    ecx,DWORD PTR [esp+0x10]
6400d217:	mov    DWORD PTR fs:0x0,ecx
6400d21e:	pop    ecx
6400d21f:	pop    esi
6400d220:	pop    ebx
6400d221:	mov    esp,ebp
6400d223:	pop    ebp
6400d224:	ret    
6400d225:	int3   
6400d226:	int3   
6400d227:	int3   
6400d228:	int3   
6400d229:	int3   
6400d22a:	int3   
6400d22b:	int3   
6400d22c:	int3   
6400d22d:	int3   
6400d22e:	int3   
6400d22f:	int3   
6400d230:	push   ebp
6400d231:	mov    ebp,esp
6400d233:	and    esp,0xfffffff8
6400d236:	push   0xffffffff
6400d238:	push   0x6402375e
6400d23d:	mov    eax,fs:0x0
6400d243:	push   eax
6400d244:	push   ecx
6400d245:	push   ebx
6400d246:	push   esi
6400d247:	mov    eax,ds:0x6402d09c
6400d24c:	xor    eax,esp
6400d24e:	push   eax
6400d24f:	lea    eax,[esp+0x10]
6400d253:	mov    fs:0x0,eax
6400d259:	mov    ebx,0x1
6400d25e:	test   BYTE PTR ds:0x64031464,bl
6400d264:	jne    0x6400d2ee
6400d26a:	or     DWORD PTR ds:0x64031464,ebx
6400d270:	push   0x64028958
6400d275:	push   0xb
6400d277:	push   0x6402897c
6400d27c:	mov    DWORD PTR [esp+0x24],0x0
6400d284:	call   0x640057b0
6400d289:	push   0x64028988
6400d28e:	push   0x8
6400d290:	push   0x64028854
6400d295:	mov    esi,eax
6400d297:	call   0x640059b0
6400d29c:	add    esp,0x18
6400d29f:	push   eax
6400d2a0:	call   DWORD PTR ds:0x64025018
6400d2a6:	add    DWORD PTR ds:0x64031270,ebx
6400d2ac:	test   eax,eax
6400d2ae:	je     0x6400d2d5
6400d2b0:	push   esi
6400d2b1:	push   eax
6400d2b2:	call   DWORD PTR ds:0x64025014
6400d2b8:	add    DWORD PTR ds:0x64031274,ebx
6400d2be:	mov    ds:0x64031460,eax
6400d2c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d2c7:	mov    DWORD PTR fs:0x0,ecx
6400d2ce:	pop    ecx
6400d2cf:	pop    esi
6400d2d0:	pop    ebx
6400d2d1:	mov    esp,ebp
6400d2d3:	pop    ebp
6400d2d4:	ret    
6400d2d5:	xor    eax,eax
6400d2d7:	mov    ds:0x64031460,eax
6400d2dc:	mov    ecx,DWORD PTR [esp+0x10]
6400d2e0:	mov    DWORD PTR fs:0x0,ecx
6400d2e7:	pop    ecx
6400d2e8:	pop    esi
6400d2e9:	pop    ebx
6400d2ea:	mov    esp,ebp
6400d2ec:	pop    ebp
6400d2ed:	ret    
6400d2ee:	mov    eax,ds:0x64031460
6400d2f3:	mov    ecx,DWORD PTR [esp+0x10]
6400d2f7:	mov    DWORD PTR fs:0x0,ecx
6400d2fe:	pop    ecx
6400d2ff:	pop    esi
6400d300:	pop    ebx
6400d301:	mov    esp,ebp
6400d303:	pop    ebp
6400d304:	ret    
6400d305:	int3   
6400d306:	int3   
6400d307:	int3   
6400d308:	int3   
6400d309:	int3   
6400d30a:	int3   
6400d30b:	int3   
6400d30c:	int3   
6400d30d:	int3   
6400d30e:	int3   
6400d30f:	int3   
6400d310:	push   ebp
6400d311:	mov    ebp,esp
6400d313:	and    esp,0xfffffff8
6400d316:	push   0xffffffff
6400d318:	push   0x6402372e
6400d31d:	mov    eax,fs:0x0
6400d323:	push   eax
6400d324:	push   ecx
6400d325:	push   ebx
6400d326:	push   esi
6400d327:	mov    eax,ds:0x6402d09c
6400d32c:	xor    eax,esp
6400d32e:	push   eax
6400d32f:	lea    eax,[esp+0x10]
6400d333:	mov    fs:0x0,eax
6400d339:	mov    ebx,0x1
6400d33e:	test   BYTE PTR ds:0x6403145c,bl
6400d344:	jne    0x6400d3ce
6400d34a:	or     DWORD PTR ds:0x6403145c,ebx
6400d350:	push   0x640289b8
6400d355:	push   0xb
6400d357:	push   0x640289e0
6400d35c:	mov    DWORD PTR [esp+0x24],0x0
6400d364:	call   0x640057b0
6400d369:	push   0x640289ec
6400d36e:	push   0x8
6400d370:	push   0x64028854
6400d375:	mov    esi,eax
6400d377:	call   0x640059b0
6400d37c:	add    esp,0x18
6400d37f:	push   eax
6400d380:	call   DWORD PTR ds:0x64025018
6400d386:	add    DWORD PTR ds:0x64031270,ebx
6400d38c:	test   eax,eax
6400d38e:	je     0x6400d3b5
6400d390:	push   esi
6400d391:	push   eax
6400d392:	call   DWORD PTR ds:0x64025014
6400d398:	add    DWORD PTR ds:0x64031274,ebx
6400d39e:	mov    ds:0x64031458,eax
6400d3a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d3a7:	mov    DWORD PTR fs:0x0,ecx
6400d3ae:	pop    ecx
6400d3af:	pop    esi
6400d3b0:	pop    ebx
6400d3b1:	mov    esp,ebp
6400d3b3:	pop    ebp
6400d3b4:	ret    
6400d3b5:	xor    eax,eax
6400d3b7:	mov    ds:0x64031458,eax
6400d3bc:	mov    ecx,DWORD PTR [esp+0x10]
6400d3c0:	mov    DWORD PTR fs:0x0,ecx
6400d3c7:	pop    ecx
6400d3c8:	pop    esi
6400d3c9:	pop    ebx
6400d3ca:	mov    esp,ebp
6400d3cc:	pop    ebp
6400d3cd:	ret    
6400d3ce:	mov    eax,ds:0x64031458
6400d3d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d3d7:	mov    DWORD PTR fs:0x0,ecx
6400d3de:	pop    ecx
6400d3df:	pop    esi
6400d3e0:	pop    ebx
6400d3e1:	mov    esp,ebp
6400d3e3:	pop    ebp
6400d3e4:	ret    
6400d3e5:	int3   
6400d3e6:	int3   
6400d3e7:	int3   
6400d3e8:	int3   
6400d3e9:	int3   
6400d3ea:	int3   
6400d3eb:	int3   
6400d3ec:	int3   
6400d3ed:	int3   
6400d3ee:	int3   
6400d3ef:	int3   
6400d3f0:	push   ebp
6400d3f1:	mov    ebp,esp
6400d3f3:	and    esp,0xfffffff8
6400d3f6:	push   0xffffffff
6400d3f8:	push   0x640236fe
6400d3fd:	mov    eax,fs:0x0
6400d403:	push   eax
6400d404:	push   ecx
6400d405:	push   ebx
6400d406:	push   esi
6400d407:	mov    eax,ds:0x6402d09c
6400d40c:	xor    eax,esp
6400d40e:	push   eax
6400d40f:	lea    eax,[esp+0x10]
6400d413:	mov    fs:0x0,eax
6400d419:	mov    ebx,0x1
6400d41e:	test   BYTE PTR ds:0x64031454,bl
6400d424:	jne    0x6400d4ae
6400d42a:	or     DWORD PTR ds:0x64031454,ebx
6400d430:	push   0x64028a2c
6400d435:	push   0xc
6400d437:	push   0x64028a5c
6400d43c:	mov    DWORD PTR [esp+0x24],0x0
6400d444:	call   0x640057b0
6400d449:	push   0x64028a6c
6400d44e:	push   0x8
6400d450:	push   0x64028854
6400d455:	mov    esi,eax
6400d457:	call   0x640059b0
6400d45c:	add    esp,0x18
6400d45f:	push   eax
6400d460:	call   DWORD PTR ds:0x64025018
6400d466:	add    DWORD PTR ds:0x64031270,ebx
6400d46c:	test   eax,eax
6400d46e:	je     0x6400d495
6400d470:	push   esi
6400d471:	push   eax
6400d472:	call   DWORD PTR ds:0x64025014
6400d478:	add    DWORD PTR ds:0x64031274,ebx
6400d47e:	mov    ds:0x64031450,eax
6400d483:	mov    ecx,DWORD PTR [esp+0x10]
6400d487:	mov    DWORD PTR fs:0x0,ecx
6400d48e:	pop    ecx
6400d48f:	pop    esi
6400d490:	pop    ebx
6400d491:	mov    esp,ebp
6400d493:	pop    ebp
6400d494:	ret    
6400d495:	xor    eax,eax
6400d497:	mov    ds:0x64031450,eax
6400d49c:	mov    ecx,DWORD PTR [esp+0x10]
6400d4a0:	mov    DWORD PTR fs:0x0,ecx
6400d4a7:	pop    ecx
6400d4a8:	pop    esi
6400d4a9:	pop    ebx
6400d4aa:	mov    esp,ebp
6400d4ac:	pop    ebp
6400d4ad:	ret    
6400d4ae:	mov    eax,ds:0x64031450
6400d4b3:	mov    ecx,DWORD PTR [esp+0x10]
6400d4b7:	mov    DWORD PTR fs:0x0,ecx
6400d4be:	pop    ecx
6400d4bf:	pop    esi
6400d4c0:	pop    ebx
6400d4c1:	mov    esp,ebp
6400d4c3:	pop    ebp
6400d4c4:	ret    
6400d4c5:	int3   
6400d4c6:	int3   
6400d4c7:	int3   
6400d4c8:	int3   
6400d4c9:	int3   
6400d4ca:	int3   
6400d4cb:	int3   
6400d4cc:	int3   
6400d4cd:	int3   
6400d4ce:	int3   
6400d4cf:	int3   
6400d4d0:	push   ebp
6400d4d1:	mov    ebp,esp
6400d4d3:	and    esp,0xfffffff8
6400d4d6:	push   0xffffffff
6400d4d8:	push   0x640236ce
6400d4dd:	mov    eax,fs:0x0
6400d4e3:	push   eax
6400d4e4:	push   ecx
6400d4e5:	push   ebx
6400d4e6:	push   esi
6400d4e7:	mov    eax,ds:0x6402d09c
6400d4ec:	xor    eax,esp
6400d4ee:	push   eax
6400d4ef:	lea    eax,[esp+0x10]
6400d4f3:	mov    fs:0x0,eax
6400d4f9:	mov    ebx,0x1
6400d4fe:	test   BYTE PTR ds:0x6403144c,bl
6400d504:	jne    0x6400d58e
6400d50a:	or     DWORD PTR ds:0x6403144c,ebx
6400d510:	push   0x64028a9c
6400d515:	push   0x10
6400d517:	push   0x64028ac0
6400d51c:	mov    DWORD PTR [esp+0x24],0x0
6400d524:	call   0x640057b0
6400d529:	push   0x64028ad4
6400d52e:	push   0x8
6400d530:	push   0x64028854
6400d535:	mov    esi,eax
6400d537:	call   0x640059b0
6400d53c:	add    esp,0x18
6400d53f:	push   eax
6400d540:	call   DWORD PTR ds:0x64025018
6400d546:	add    DWORD PTR ds:0x64031270,ebx
6400d54c:	test   eax,eax
6400d54e:	je     0x6400d575
6400d550:	push   esi
6400d551:	push   eax
6400d552:	call   DWORD PTR ds:0x64025014
6400d558:	add    DWORD PTR ds:0x64031274,ebx
6400d55e:	mov    ds:0x64031448,eax
6400d563:	mov    ecx,DWORD PTR [esp+0x10]
6400d567:	mov    DWORD PTR fs:0x0,ecx
6400d56e:	pop    ecx
6400d56f:	pop    esi
6400d570:	pop    ebx
6400d571:	mov    esp,ebp
6400d573:	pop    ebp
6400d574:	ret    
6400d575:	xor    eax,eax
6400d577:	mov    ds:0x64031448,eax
6400d57c:	mov    ecx,DWORD PTR [esp+0x10]
6400d580:	mov    DWORD PTR fs:0x0,ecx
6400d587:	pop    ecx
6400d588:	pop    esi
6400d589:	pop    ebx
6400d58a:	mov    esp,ebp
6400d58c:	pop    ebp
6400d58d:	ret    
6400d58e:	mov    eax,ds:0x64031448
6400d593:	mov    ecx,DWORD PTR [esp+0x10]
6400d597:	mov    DWORD PTR fs:0x0,ecx
6400d59e:	pop    ecx
6400d59f:	pop    esi
6400d5a0:	pop    ebx
6400d5a1:	mov    esp,ebp
6400d5a3:	pop    ebp
6400d5a4:	ret    
6400d5a5:	int3   
6400d5a6:	int3   
6400d5a7:	int3   
6400d5a8:	int3   
6400d5a9:	int3   
6400d5aa:	int3   
6400d5ab:	int3   
6400d5ac:	int3   
6400d5ad:	int3   
6400d5ae:	int3   
6400d5af:	int3   
6400d5b0:	push   ebp
6400d5b1:	mov    ebp,esp
6400d5b3:	and    esp,0xfffffff8
6400d5b6:	push   0xffffffff
6400d5b8:	push   0x6402369e
6400d5bd:	mov    eax,fs:0x0
6400d5c3:	push   eax
6400d5c4:	push   ecx
6400d5c5:	push   ebx
6400d5c6:	push   esi
6400d5c7:	mov    eax,ds:0x6402d09c
6400d5cc:	xor    eax,esp
6400d5ce:	push   eax
6400d5cf:	lea    eax,[esp+0x10]
6400d5d3:	mov    fs:0x0,eax
6400d5d9:	mov    ebx,0x1
6400d5de:	test   BYTE PTR ds:0x64031444,bl
6400d5e4:	jne    0x6400d66e
6400d5ea:	or     DWORD PTR ds:0x64031444,ebx
6400d5f0:	push   0x64028afc
6400d5f5:	push   0x10
6400d5f7:	push   0x64028b3c
6400d5fc:	mov    DWORD PTR [esp+0x24],0x0
6400d604:	call   0x640057b0
6400d609:	push   0x64028b50
6400d60e:	push   0x8
6400d610:	push   0x64028854
6400d615:	mov    esi,eax
6400d617:	call   0x640059b0
6400d61c:	add    esp,0x18
6400d61f:	push   eax
6400d620:	call   DWORD PTR ds:0x64025018
6400d626:	add    DWORD PTR ds:0x64031270,ebx
6400d62c:	test   eax,eax
6400d62e:	je     0x6400d655
6400d630:	push   esi
6400d631:	push   eax
6400d632:	call   DWORD PTR ds:0x64025014
6400d638:	add    DWORD PTR ds:0x64031274,ebx
6400d63e:	mov    ds:0x64031440,eax
6400d643:	mov    ecx,DWORD PTR [esp+0x10]
6400d647:	mov    DWORD PTR fs:0x0,ecx
6400d64e:	pop    ecx
6400d64f:	pop    esi
6400d650:	pop    ebx
6400d651:	mov    esp,ebp
6400d653:	pop    ebp
6400d654:	ret    
6400d655:	xor    eax,eax
6400d657:	mov    ds:0x64031440,eax
6400d65c:	mov    ecx,DWORD PTR [esp+0x10]
6400d660:	mov    DWORD PTR fs:0x0,ecx
6400d667:	pop    ecx
6400d668:	pop    esi
6400d669:	pop    ebx
6400d66a:	mov    esp,ebp
6400d66c:	pop    ebp
6400d66d:	ret    
6400d66e:	mov    eax,ds:0x64031440
6400d673:	mov    ecx,DWORD PTR [esp+0x10]
6400d677:	mov    DWORD PTR fs:0x0,ecx
6400d67e:	pop    ecx
6400d67f:	pop    esi
6400d680:	pop    ebx
6400d681:	mov    esp,ebp
6400d683:	pop    ebp
6400d684:	ret    
6400d685:	int3   
6400d686:	int3   
6400d687:	int3   
6400d688:	int3   
6400d689:	int3   
6400d68a:	int3   
6400d68b:	int3   
6400d68c:	int3   
6400d68d:	int3   
6400d68e:	int3   
6400d68f:	int3   
6400d690:	push   ebp
6400d691:	mov    ebp,esp
6400d693:	and    esp,0xfffffff8
6400d696:	push   0xffffffff
6400d698:	push   0x6402366e
6400d69d:	mov    eax,fs:0x0
6400d6a3:	push   eax
6400d6a4:	push   ecx
6400d6a5:	push   ebx
6400d6a6:	push   esi
6400d6a7:	mov    eax,ds:0x6402d09c
6400d6ac:	xor    eax,esp
6400d6ae:	push   eax
6400d6af:	lea    eax,[esp+0x10]
6400d6b3:	mov    fs:0x0,eax
6400d6b9:	mov    ebx,0x1
6400d6be:	test   BYTE PTR ds:0x6403143c,bl
6400d6c4:	jne    0x6400d74e
6400d6ca:	or     DWORD PTR ds:0x6403143c,ebx
6400d6d0:	push   0x64028b80
6400d6d5:	push   0x15
6400d6d7:	push   0x64028bbc
6400d6dc:	mov    DWORD PTR [esp+0x24],0x0
6400d6e4:	call   0x640057b0
6400d6e9:	push   0x64028bd4
6400d6ee:	push   0x8
6400d6f0:	push   0x64028854
6400d6f5:	mov    esi,eax
6400d6f7:	call   0x640059b0
6400d6fc:	add    esp,0x18
6400d6ff:	push   eax
6400d700:	call   DWORD PTR ds:0x64025018
6400d706:	add    DWORD PTR ds:0x64031270,ebx
6400d70c:	test   eax,eax
6400d70e:	je     0x6400d735
6400d710:	push   esi
6400d711:	push   eax
6400d712:	call   DWORD PTR ds:0x64025014
6400d718:	add    DWORD PTR ds:0x64031274,ebx
6400d71e:	mov    ds:0x64031438,eax
6400d723:	mov    ecx,DWORD PTR [esp+0x10]
6400d727:	mov    DWORD PTR fs:0x0,ecx
6400d72e:	pop    ecx
6400d72f:	pop    esi
6400d730:	pop    ebx
6400d731:	mov    esp,ebp
6400d733:	pop    ebp
6400d734:	ret    
6400d735:	xor    eax,eax
6400d737:	mov    ds:0x64031438,eax
6400d73c:	mov    ecx,DWORD PTR [esp+0x10]
6400d740:	mov    DWORD PTR fs:0x0,ecx
6400d747:	pop    ecx
6400d748:	pop    esi
6400d749:	pop    ebx
6400d74a:	mov    esp,ebp
6400d74c:	pop    ebp
6400d74d:	ret    
6400d74e:	mov    eax,ds:0x64031438
6400d753:	mov    ecx,DWORD PTR [esp+0x10]
6400d757:	mov    DWORD PTR fs:0x0,ecx
6400d75e:	pop    ecx
6400d75f:	pop    esi
6400d760:	pop    ebx
6400d761:	mov    esp,ebp
6400d763:	pop    ebp
6400d764:	ret    
6400d765:	int3   
6400d766:	int3   
6400d767:	int3   
6400d768:	int3   
6400d769:	int3   
6400d76a:	int3   
6400d76b:	int3   
6400d76c:	int3   
6400d76d:	int3   
6400d76e:	int3   
6400d76f:	int3   
6400d770:	push   ebp
6400d771:	mov    ebp,esp
6400d773:	and    esp,0xfffffff8
6400d776:	push   0xffffffff
6400d778:	push   0x6402363e
6400d77d:	mov    eax,fs:0x0
6400d783:	push   eax
6400d784:	push   ecx
6400d785:	push   ebx
6400d786:	push   esi
6400d787:	mov    eax,ds:0x6402d09c
6400d78c:	xor    eax,esp
6400d78e:	push   eax
6400d78f:	lea    eax,[esp+0x10]
6400d793:	mov    fs:0x0,eax
6400d799:	mov    ebx,0x1
6400d79e:	test   BYTE PTR ds:0x64031434,bl
6400d7a4:	jne    0x6400d82e
6400d7aa:	or     DWORD PTR ds:0x64031434,ebx
6400d7b0:	push   0x64028c14
6400d7b5:	push   0x18
6400d7b7:	push   0x64028c50
6400d7bc:	mov    DWORD PTR [esp+0x24],0x0
6400d7c4:	call   0x640057b0
6400d7c9:	push   0x64028c6c
6400d7ce:	push   0x8
6400d7d0:	push   0x64028854
6400d7d5:	mov    esi,eax
6400d7d7:	call   0x640059b0
6400d7dc:	add    esp,0x18
6400d7df:	push   eax
6400d7e0:	call   DWORD PTR ds:0x64025018
6400d7e6:	add    DWORD PTR ds:0x64031270,ebx
6400d7ec:	test   eax,eax
6400d7ee:	je     0x6400d815
6400d7f0:	push   esi
6400d7f1:	push   eax
6400d7f2:	call   DWORD PTR ds:0x64025014
6400d7f8:	add    DWORD PTR ds:0x64031274,ebx
6400d7fe:	mov    ds:0x64031430,eax
6400d803:	mov    ecx,DWORD PTR [esp+0x10]
6400d807:	mov    DWORD PTR fs:0x0,ecx
6400d80e:	pop    ecx
6400d80f:	pop    esi
6400d810:	pop    ebx
6400d811:	mov    esp,ebp
6400d813:	pop    ebp
6400d814:	ret    
6400d815:	xor    eax,eax
6400d817:	mov    ds:0x64031430,eax
6400d81c:	mov    ecx,DWORD PTR [esp+0x10]
6400d820:	mov    DWORD PTR fs:0x0,ecx
6400d827:	pop    ecx
6400d828:	pop    esi
6400d829:	pop    ebx
6400d82a:	mov    esp,ebp
6400d82c:	pop    ebp
6400d82d:	ret    
6400d82e:	mov    eax,ds:0x64031430
6400d833:	mov    ecx,DWORD PTR [esp+0x10]
6400d837:	mov    DWORD PTR fs:0x0,ecx
6400d83e:	pop    ecx
6400d83f:	pop    esi
6400d840:	pop    ebx
6400d841:	mov    esp,ebp
6400d843:	pop    ebp
6400d844:	ret    
6400d845:	int3   
6400d846:	int3   
6400d847:	int3   
6400d848:	int3   
6400d849:	int3   
6400d84a:	int3   
6400d84b:	int3   
6400d84c:	int3   
6400d84d:	int3   
6400d84e:	int3   
6400d84f:	int3   
6400d850:	push   ebp
6400d851:	mov    ebp,esp
6400d853:	and    esp,0xfffffff8
6400d856:	push   0xffffffff
6400d858:	push   0x6402360e
6400d85d:	mov    eax,fs:0x0
6400d863:	push   eax
6400d864:	push   ecx
6400d865:	push   ebx
6400d866:	push   esi
6400d867:	mov    eax,ds:0x6402d09c
6400d86c:	xor    eax,esp
6400d86e:	push   eax
6400d86f:	lea    eax,[esp+0x10]
6400d873:	mov    fs:0x0,eax
6400d879:	mov    ebx,0x1
6400d87e:	test   BYTE PTR ds:0x6403142c,bl
6400d884:	jne    0x6400d90e
6400d88a:	or     DWORD PTR ds:0x6403142c,ebx
6400d890:	push   0x64028ca0
6400d895:	push   0xf
6400d897:	push   0x64028cc4
6400d89c:	mov    DWORD PTR [esp+0x24],0x0
6400d8a4:	call   0x640057b0
6400d8a9:	push   0x64028cd4
6400d8ae:	push   0x8
6400d8b0:	push   0x64028854
6400d8b5:	mov    esi,eax
6400d8b7:	call   0x640059b0
6400d8bc:	add    esp,0x18
6400d8bf:	push   eax
6400d8c0:	call   DWORD PTR ds:0x64025018
6400d8c6:	add    DWORD PTR ds:0x64031270,ebx
6400d8cc:	test   eax,eax
6400d8ce:	je     0x6400d8f5
6400d8d0:	push   esi
6400d8d1:	push   eax
6400d8d2:	call   DWORD PTR ds:0x64025014
6400d8d8:	add    DWORD PTR ds:0x64031274,ebx
6400d8de:	mov    ds:0x64031428,eax
6400d8e3:	mov    ecx,DWORD PTR [esp+0x10]
6400d8e7:	mov    DWORD PTR fs:0x0,ecx
6400d8ee:	pop    ecx
6400d8ef:	pop    esi
6400d8f0:	pop    ebx
6400d8f1:	mov    esp,ebp
6400d8f3:	pop    ebp
6400d8f4:	ret    
6400d8f5:	xor    eax,eax
6400d8f7:	mov    ds:0x64031428,eax
6400d8fc:	mov    ecx,DWORD PTR [esp+0x10]
6400d900:	mov    DWORD PTR fs:0x0,ecx
6400d907:	pop    ecx
6400d908:	pop    esi
6400d909:	pop    ebx
6400d90a:	mov    esp,ebp
6400d90c:	pop    ebp
6400d90d:	ret    
6400d90e:	mov    eax,ds:0x64031428
6400d913:	mov    ecx,DWORD PTR [esp+0x10]
6400d917:	mov    DWORD PTR fs:0x0,ecx
6400d91e:	pop    ecx
6400d91f:	pop    esi
6400d920:	pop    ebx
6400d921:	mov    esp,ebp
6400d923:	pop    ebp
6400d924:	ret    
6400d925:	int3   
6400d926:	int3   
6400d927:	int3   
6400d928:	int3   
6400d929:	int3   
6400d92a:	int3   
6400d92b:	int3   
6400d92c:	int3   
6400d92d:	int3   
6400d92e:	int3   
6400d92f:	int3   
6400d930:	push   ebp
6400d931:	mov    ebp,esp
6400d933:	and    esp,0xfffffff8
6400d936:	push   0xffffffff
6400d938:	push   0x640235de
6400d93d:	mov    eax,fs:0x0
6400d943:	push   eax
6400d944:	push   ecx
6400d945:	push   ebx
6400d946:	push   esi
6400d947:	mov    eax,ds:0x6402d09c
6400d94c:	xor    eax,esp
6400d94e:	push   eax
6400d94f:	lea    eax,[esp+0x10]
6400d953:	mov    fs:0x0,eax
6400d959:	mov    ebx,0x1
6400d95e:	test   BYTE PTR ds:0x64031424,bl
6400d964:	jne    0x6400d9ee
6400d96a:	or     DWORD PTR ds:0x64031424,ebx
6400d970:	push   0x64028d00
6400d975:	push   0x14
6400d977:	push   0x64028d2c
6400d97c:	mov    DWORD PTR [esp+0x24],0x0
6400d984:	call   0x640057b0
6400d989:	push   0x64028d44
6400d98e:	push   0x8
6400d990:	push   0x64028854
6400d995:	mov    esi,eax
6400d997:	call   0x640059b0
6400d99c:	add    esp,0x18
6400d99f:	push   eax
6400d9a0:	call   DWORD PTR ds:0x64025018
6400d9a6:	add    DWORD PTR ds:0x64031270,ebx
6400d9ac:	test   eax,eax
6400d9ae:	je     0x6400d9d5
6400d9b0:	push   esi
6400d9b1:	push   eax
6400d9b2:	call   DWORD PTR ds:0x64025014
6400d9b8:	add    DWORD PTR ds:0x64031274,ebx
6400d9be:	mov    ds:0x64031420,eax
6400d9c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d9c7:	mov    DWORD PTR fs:0x0,ecx
6400d9ce:	pop    ecx
6400d9cf:	pop    esi
6400d9d0:	pop    ebx
6400d9d1:	mov    esp,ebp
6400d9d3:	pop    ebp
6400d9d4:	ret    
6400d9d5:	xor    eax,eax
6400d9d7:	mov    ds:0x64031420,eax
6400d9dc:	mov    ecx,DWORD PTR [esp+0x10]
6400d9e0:	mov    DWORD PTR fs:0x0,ecx
6400d9e7:	pop    ecx
6400d9e8:	pop    esi
6400d9e9:	pop    ebx
6400d9ea:	mov    esp,ebp
6400d9ec:	pop    ebp
6400d9ed:	ret    
6400d9ee:	mov    eax,ds:0x64031420
6400d9f3:	mov    ecx,DWORD PTR [esp+0x10]
6400d9f7:	mov    DWORD PTR fs:0x0,ecx
6400d9fe:	pop    ecx
6400d9ff:	pop    esi
6400da00:	pop    ebx
6400da01:	mov    esp,ebp
6400da03:	pop    ebp
6400da04:	ret    
6400da05:	int3   
6400da06:	int3   
6400da07:	int3   
6400da08:	int3   
6400da09:	int3   
6400da0a:	int3   
6400da0b:	int3   
6400da0c:	int3   
6400da0d:	int3   
6400da0e:	int3   
6400da0f:	int3   
6400da10:	push   ebp
6400da11:	mov    ebp,esp
6400da13:	and    esp,0xfffffff8
6400da16:	push   0xffffffff
6400da18:	push   0x640235ae
6400da1d:	mov    eax,fs:0x0
6400da23:	push   eax
6400da24:	push   ecx
6400da25:	push   ebx
6400da26:	push   esi
6400da27:	mov    eax,ds:0x6402d09c
6400da2c:	xor    eax,esp
6400da2e:	push   eax
6400da2f:	lea    eax,[esp+0x10]
6400da33:	mov    fs:0x0,eax
6400da39:	mov    ebx,0x1
6400da3e:	test   BYTE PTR ds:0x6403141c,bl
6400da44:	jne    0x6400dace
6400da4a:	or     DWORD PTR ds:0x6403141c,ebx
6400da50:	push   0x64028d74
6400da55:	push   0x14
6400da57:	push   0x64028db4
6400da5c:	mov    DWORD PTR [esp+0x24],0x0
6400da64:	call   0x640057b0
6400da69:	push   0x64028dcc
6400da6e:	push   0x8
6400da70:	push   0x64028854
6400da75:	mov    esi,eax
6400da77:	call   0x640059b0
6400da7c:	add    esp,0x18
6400da7f:	push   eax
6400da80:	call   DWORD PTR ds:0x64025018
6400da86:	add    DWORD PTR ds:0x64031270,ebx
6400da8c:	test   eax,eax
6400da8e:	je     0x6400dab5
6400da90:	push   esi
6400da91:	push   eax
6400da92:	call   DWORD PTR ds:0x64025014
6400da98:	add    DWORD PTR ds:0x64031274,ebx
6400da9e:	mov    ds:0x64031418,eax
6400daa3:	mov    ecx,DWORD PTR [esp+0x10]
6400daa7:	mov    DWORD PTR fs:0x0,ecx
6400daae:	pop    ecx
6400daaf:	pop    esi
6400dab0:	pop    ebx
6400dab1:	mov    esp,ebp
6400dab3:	pop    ebp
6400dab4:	ret    
6400dab5:	xor    eax,eax
6400dab7:	mov    ds:0x64031418,eax
6400dabc:	mov    ecx,DWORD PTR [esp+0x10]
6400dac0:	mov    DWORD PTR fs:0x0,ecx
6400dac7:	pop    ecx
6400dac8:	pop    esi
6400dac9:	pop    ebx
6400daca:	mov    esp,ebp
6400dacc:	pop    ebp
6400dacd:	ret    
6400dace:	mov    eax,ds:0x64031418
6400dad3:	mov    ecx,DWORD PTR [esp+0x10]
6400dad7:	mov    DWORD PTR fs:0x0,ecx
6400dade:	pop    ecx
6400dadf:	pop    esi
6400dae0:	pop    ebx
6400dae1:	mov    esp,ebp
6400dae3:	pop    ebp
6400dae4:	ret    
6400dae5:	int3   
6400dae6:	int3   
6400dae7:	int3   
6400dae8:	int3   
6400dae9:	int3   
6400daea:	int3   
6400daeb:	int3   
6400daec:	int3   
6400daed:	int3   
6400daee:	int3   
6400daef:	int3   
6400daf0:	push   ebp
6400daf1:	mov    ebp,esp
6400daf3:	and    esp,0xfffffff8
6400daf6:	push   0xffffffff
6400daf8:	push   0x6402357e
6400dafd:	mov    eax,fs:0x0
6400db03:	push   eax
6400db04:	push   ecx
6400db05:	push   ebx
6400db06:	push   esi
6400db07:	mov    eax,ds:0x6402d09c
6400db0c:	xor    eax,esp
6400db0e:	push   eax
6400db0f:	lea    eax,[esp+0x10]
6400db13:	mov    fs:0x0,eax
6400db19:	mov    ebx,0x1
6400db1e:	test   BYTE PTR ds:0x64031414,bl
6400db24:	jne    0x6400dbae
6400db2a:	or     DWORD PTR ds:0x64031414,ebx
6400db30:	push   0x64028df4
6400db35:	push   0xf
6400db37:	push   0x64028e18
6400db3c:	mov    DWORD PTR [esp+0x24],0x0
6400db44:	call   0x640057b0
6400db49:	push   0x64028e28
6400db4e:	push   0x8
6400db50:	push   0x64028854
6400db55:	mov    esi,eax
6400db57:	call   0x640059b0
6400db5c:	add    esp,0x18
6400db5f:	push   eax
6400db60:	call   DWORD PTR ds:0x64025018
6400db66:	add    DWORD PTR ds:0x64031270,ebx
6400db6c:	test   eax,eax
6400db6e:	je     0x6400db95
6400db70:	push   esi
6400db71:	push   eax
6400db72:	call   DWORD PTR ds:0x64025014
6400db78:	add    DWORD PTR ds:0x64031274,ebx
6400db7e:	mov    ds:0x64031410,eax
6400db83:	mov    ecx,DWORD PTR [esp+0x10]
6400db87:	mov    DWORD PTR fs:0x0,ecx
6400db8e:	pop    ecx
6400db8f:	pop    esi
6400db90:	pop    ebx
6400db91:	mov    esp,ebp
6400db93:	pop    ebp
6400db94:	ret    
6400db95:	xor    eax,eax
6400db97:	mov    ds:0x64031410,eax
6400db9c:	mov    ecx,DWORD PTR [esp+0x10]
6400dba0:	mov    DWORD PTR fs:0x0,ecx
6400dba7:	pop    ecx
6400dba8:	pop    esi
6400dba9:	pop    ebx
6400dbaa:	mov    esp,ebp
6400dbac:	pop    ebp
6400dbad:	ret    
6400dbae:	mov    eax,ds:0x64031410
6400dbb3:	mov    ecx,DWORD PTR [esp+0x10]
6400dbb7:	mov    DWORD PTR fs:0x0,ecx
6400dbbe:	pop    ecx
6400dbbf:	pop    esi
6400dbc0:	pop    ebx
6400dbc1:	mov    esp,ebp
6400dbc3:	pop    ebp
6400dbc4:	ret    
6400dbc5:	int3   
6400dbc6:	int3   
6400dbc7:	int3   
6400dbc8:	int3   
6400dbc9:	int3   
6400dbca:	int3   
6400dbcb:	int3   
6400dbcc:	int3   
6400dbcd:	int3   
6400dbce:	int3   
6400dbcf:	int3   
6400dbd0:	push   ebp
6400dbd1:	mov    ebp,esp
6400dbd3:	and    esp,0xfffffff8
6400dbd6:	push   0xffffffff
6400dbd8:	push   0x6402354e
6400dbdd:	mov    eax,fs:0x0
6400dbe3:	push   eax
6400dbe4:	push   ecx
6400dbe5:	push   ebx
6400dbe6:	push   esi
6400dbe7:	mov    eax,ds:0x6402d09c
6400dbec:	xor    eax,esp
6400dbee:	push   eax
6400dbef:	lea    eax,[esp+0x10]
6400dbf3:	mov    fs:0x0,eax
6400dbf9:	mov    ebx,0x1
6400dbfe:	test   BYTE PTR ds:0x6403140c,bl
6400dc04:	jne    0x6400dc8e
6400dc0a:	or     DWORD PTR ds:0x6403140c,ebx
6400dc10:	push   0x64028e58
6400dc15:	push   0x12
6400dc17:	push   0x64028e7c
6400dc1c:	mov    DWORD PTR [esp+0x24],0x0
6400dc24:	call   0x640057b0
6400dc29:	push   0x64028e90
6400dc2e:	push   0x8
6400dc30:	push   0x64028854
6400dc35:	mov    esi,eax
6400dc37:	call   0x640059b0
6400dc3c:	add    esp,0x18
6400dc3f:	push   eax
6400dc40:	call   DWORD PTR ds:0x64025018
6400dc46:	add    DWORD PTR ds:0x64031270,ebx
6400dc4c:	test   eax,eax
6400dc4e:	je     0x6400dc75
6400dc50:	push   esi
6400dc51:	push   eax
6400dc52:	call   DWORD PTR ds:0x64025014
6400dc58:	add    DWORD PTR ds:0x64031274,ebx
6400dc5e:	mov    ds:0x64031408,eax
6400dc63:	mov    ecx,DWORD PTR [esp+0x10]
6400dc67:	mov    DWORD PTR fs:0x0,ecx
6400dc6e:	pop    ecx
6400dc6f:	pop    esi
6400dc70:	pop    ebx
6400dc71:	mov    esp,ebp
6400dc73:	pop    ebp
6400dc74:	ret    
6400dc75:	xor    eax,eax
6400dc77:	mov    ds:0x64031408,eax
6400dc7c:	mov    ecx,DWORD PTR [esp+0x10]
6400dc80:	mov    DWORD PTR fs:0x0,ecx
6400dc87:	pop    ecx
6400dc88:	pop    esi
6400dc89:	pop    ebx
6400dc8a:	mov    esp,ebp
6400dc8c:	pop    ebp
6400dc8d:	ret    
6400dc8e:	mov    eax,ds:0x64031408
6400dc93:	mov    ecx,DWORD PTR [esp+0x10]
6400dc97:	mov    DWORD PTR fs:0x0,ecx
6400dc9e:	pop    ecx
6400dc9f:	pop    esi
6400dca0:	pop    ebx
6400dca1:	mov    esp,ebp
6400dca3:	pop    ebp
6400dca4:	ret    
6400dca5:	int3   
6400dca6:	int3   
6400dca7:	int3   
6400dca8:	int3   
6400dca9:	int3   
6400dcaa:	int3   
6400dcab:	int3   
6400dcac:	int3   
6400dcad:	int3   
6400dcae:	int3   
6400dcaf:	int3   
6400dcb0:	push   ebp
6400dcb1:	mov    ebp,esp
6400dcb3:	and    esp,0xfffffff8
6400dcb6:	push   0xffffffff
6400dcb8:	push   0x6402351e
6400dcbd:	mov    eax,fs:0x0
6400dcc3:	push   eax
6400dcc4:	push   ecx
6400dcc5:	push   ebx
6400dcc6:	push   esi
6400dcc7:	mov    eax,ds:0x6402d09c
6400dccc:	xor    eax,esp
6400dcce:	push   eax
6400dccf:	lea    eax,[esp+0x10]
6400dcd3:	mov    fs:0x0,eax
6400dcd9:	mov    ebx,0x1
6400dcde:	test   BYTE PTR ds:0x64031404,bl
6400dce4:	jne    0x6400dd6e
6400dcea:	or     DWORD PTR ds:0x64031404,ebx
6400dcf0:	push   0x64028ec0
6400dcf5:	push   0x11
6400dcf7:	push   0x64028ee8
6400dcfc:	mov    DWORD PTR [esp+0x24],0x0
6400dd04:	call   0x640057b0
6400dd09:	push   0x64028efc
6400dd0e:	push   0x8
6400dd10:	push   0x64028854
6400dd15:	mov    esi,eax
6400dd17:	call   0x640059b0
6400dd1c:	add    esp,0x18
6400dd1f:	push   eax
6400dd20:	call   DWORD PTR ds:0x64025018
6400dd26:	add    DWORD PTR ds:0x64031270,ebx
6400dd2c:	test   eax,eax
6400dd2e:	je     0x6400dd55
6400dd30:	push   esi
6400dd31:	push   eax
6400dd32:	call   DWORD PTR ds:0x64025014
6400dd38:	add    DWORD PTR ds:0x64031274,ebx
6400dd3e:	mov    ds:0x64031400,eax
6400dd43:	mov    ecx,DWORD PTR [esp+0x10]
6400dd47:	mov    DWORD PTR fs:0x0,ecx
6400dd4e:	pop    ecx
6400dd4f:	pop    esi
6400dd50:	pop    ebx
6400dd51:	mov    esp,ebp
6400dd53:	pop    ebp
6400dd54:	ret    
6400dd55:	xor    eax,eax
6400dd57:	mov    ds:0x64031400,eax
6400dd5c:	mov    ecx,DWORD PTR [esp+0x10]
6400dd60:	mov    DWORD PTR fs:0x0,ecx
6400dd67:	pop    ecx
6400dd68:	pop    esi
6400dd69:	pop    ebx
6400dd6a:	mov    esp,ebp
6400dd6c:	pop    ebp
6400dd6d:	ret    
6400dd6e:	mov    eax,ds:0x64031400
6400dd73:	mov    ecx,DWORD PTR [esp+0x10]
6400dd77:	mov    DWORD PTR fs:0x0,ecx
6400dd7e:	pop    ecx
6400dd7f:	pop    esi
6400dd80:	pop    ebx
6400dd81:	mov    esp,ebp
6400dd83:	pop    ebp
6400dd84:	ret    
6400dd85:	int3   
6400dd86:	int3   
6400dd87:	int3   
6400dd88:	int3   
6400dd89:	int3   
6400dd8a:	int3   
6400dd8b:	int3   
6400dd8c:	int3   
6400dd8d:	int3   
6400dd8e:	int3   
6400dd8f:	int3   
6400dd90:	push   ebp
6400dd91:	mov    ebp,esp
6400dd93:	and    esp,0xfffffff8
6400dd96:	push   0xffffffff
6400dd98:	push   0x640234ee
6400dd9d:	mov    eax,fs:0x0
6400dda3:	push   eax
6400dda4:	push   ecx
6400dda5:	push   ebx
6400dda6:	push   esi
6400dda7:	mov    eax,ds:0x6402d09c
6400ddac:	xor    eax,esp
6400ddae:	push   eax
6400ddaf:	lea    eax,[esp+0x10]
6400ddb3:	mov    fs:0x0,eax
6400ddb9:	mov    ebx,0x1
6400ddbe:	test   BYTE PTR ds:0x640313fc,bl
6400ddc4:	jne    0x6400de4e
6400ddca:	or     DWORD PTR ds:0x640313fc,ebx
6400ddd0:	push   0x64028f28
6400ddd5:	push   0x17
6400ddd7:	push   0x64028f60
6400dddc:	mov    DWORD PTR [esp+0x24],0x0
6400dde4:	call   0x640057b0
6400dde9:	push   0x64028f78
6400ddee:	push   0x8
6400ddf0:	push   0x64028fa0
6400ddf5:	mov    esi,eax
6400ddf7:	call   0x640059b0
6400ddfc:	add    esp,0x18
6400ddff:	push   eax
6400de00:	call   DWORD PTR ds:0x64025018
6400de06:	add    DWORD PTR ds:0x64031270,ebx
6400de0c:	test   eax,eax
6400de0e:	je     0x6400de35
6400de10:	push   esi
6400de11:	push   eax
6400de12:	call   DWORD PTR ds:0x64025014
6400de18:	add    DWORD PTR ds:0x64031274,ebx
6400de1e:	mov    ds:0x640313f8,eax
6400de23:	mov    ecx,DWORD PTR [esp+0x10]
6400de27:	mov    DWORD PTR fs:0x0,ecx
6400de2e:	pop    ecx
6400de2f:	pop    esi
6400de30:	pop    ebx
6400de31:	mov    esp,ebp
6400de33:	pop    ebp
6400de34:	ret    
6400de35:	xor    eax,eax
6400de37:	mov    ds:0x640313f8,eax
6400de3c:	mov    ecx,DWORD PTR [esp+0x10]
6400de40:	mov    DWORD PTR fs:0x0,ecx
6400de47:	pop    ecx
6400de48:	pop    esi
6400de49:	pop    ebx
6400de4a:	mov    esp,ebp
6400de4c:	pop    ebp
6400de4d:	ret    
6400de4e:	mov    eax,ds:0x640313f8
6400de53:	mov    ecx,DWORD PTR [esp+0x10]
6400de57:	mov    DWORD PTR fs:0x0,ecx
6400de5e:	pop    ecx
6400de5f:	pop    esi
6400de60:	pop    ebx
6400de61:	mov    esp,ebp
6400de63:	pop    ebp
6400de64:	ret    
6400de65:	int3   
6400de66:	int3   
6400de67:	int3   
6400de68:	int3   
6400de69:	int3   
6400de6a:	int3   
6400de6b:	int3   
6400de6c:	int3   
6400de6d:	int3   
6400de6e:	int3   
6400de6f:	int3   
6400de70:	push   ebp
6400de71:	mov    ebp,esp
6400de73:	and    esp,0xfffffff8
6400de76:	push   0xffffffff
6400de78:	push   0x640234be
6400de7d:	mov    eax,fs:0x0
6400de83:	push   eax
6400de84:	push   ecx
6400de85:	push   ebx
6400de86:	push   esi
6400de87:	mov    eax,ds:0x6402d09c
6400de8c:	xor    eax,esp
6400de8e:	push   eax
6400de8f:	lea    eax,[esp+0x10]
6400de93:	mov    fs:0x0,eax
6400de99:	mov    ebx,0x1
6400de9e:	test   BYTE PTR ds:0x640313f4,bl
6400dea4:	jne    0x6400df2e
6400deaa:	or     DWORD PTR ds:0x640313f4,ebx
6400deb0:	push   0x64028fb4
6400deb5:	push   0x19
6400deb7:	push   0x64028ff0
6400debc:	mov    DWORD PTR [esp+0x24],0x0
6400dec4:	call   0x640057b0
6400dec9:	push   0x6402900c
6400dece:	push   0x7
6400ded0:	push   0x64029034
6400ded5:	mov    esi,eax
6400ded7:	call   0x640059b0
6400dedc:	add    esp,0x18
6400dedf:	push   eax
6400dee0:	call   DWORD PTR ds:0x64025018
6400dee6:	add    DWORD PTR ds:0x64031270,ebx
6400deec:	test   eax,eax
6400deee:	je     0x6400df15
6400def0:	push   esi
6400def1:	push   eax
6400def2:	call   DWORD PTR ds:0x64025014
6400def8:	add    DWORD PTR ds:0x64031274,ebx
6400defe:	mov    ds:0x640313f0,eax
6400df03:	mov    ecx,DWORD PTR [esp+0x10]
6400df07:	mov    DWORD PTR fs:0x0,ecx
6400df0e:	pop    ecx
6400df0f:	pop    esi
6400df10:	pop    ebx
6400df11:	mov    esp,ebp
6400df13:	pop    ebp
6400df14:	ret    
6400df15:	xor    eax,eax
6400df17:	mov    ds:0x640313f0,eax
6400df1c:	mov    ecx,DWORD PTR [esp+0x10]
6400df20:	mov    DWORD PTR fs:0x0,ecx
6400df27:	pop    ecx
6400df28:	pop    esi
6400df29:	pop    ebx
6400df2a:	mov    esp,ebp
6400df2c:	pop    ebp
6400df2d:	ret    
6400df2e:	mov    eax,ds:0x640313f0
6400df33:	mov    ecx,DWORD PTR [esp+0x10]
6400df37:	mov    DWORD PTR fs:0x0,ecx
6400df3e:	pop    ecx
6400df3f:	pop    esi
6400df40:	pop    ebx
6400df41:	mov    esp,ebp
6400df43:	pop    ebp
6400df44:	ret    
6400df45:	int3   
6400df46:	int3   
6400df47:	int3   
6400df48:	int3   
6400df49:	int3   
6400df4a:	int3   
6400df4b:	int3   
6400df4c:	int3   
6400df4d:	int3   
6400df4e:	int3   
6400df4f:	int3   
6400df50:	push   ebp
6400df51:	mov    ebp,esp
6400df53:	and    esp,0xfffffff8
6400df56:	push   0xffffffff
6400df58:	push   0x6402348e
6400df5d:	mov    eax,fs:0x0
6400df63:	push   eax
6400df64:	push   ecx
6400df65:	push   ebx
6400df66:	push   esi
6400df67:	mov    eax,ds:0x6402d09c
6400df6c:	xor    eax,esp
6400df6e:	push   eax
6400df6f:	lea    eax,[esp+0x10]
6400df73:	mov    fs:0x0,eax
6400df79:	mov    ebx,0x1
6400df7e:	test   BYTE PTR ds:0x640313ec,bl
6400df84:	jne    0x6400e00e
6400df8a:	or     DWORD PTR ds:0x640313ec,ebx
6400df90:	push   0x64029044
6400df95:	push   0x1d
6400df97:	push   0x6402907c
6400df9c:	mov    DWORD PTR [esp+0x24],0x0
6400dfa4:	call   0x640057b0
6400dfa9:	push   0x640290a0
6400dfae:	push   0x8
6400dfb0:	push   0x640290e0
6400dfb5:	mov    esi,eax
6400dfb7:	call   0x640059b0
6400dfbc:	add    esp,0x18
6400dfbf:	push   eax
6400dfc0:	call   DWORD PTR ds:0x64025018
6400dfc6:	add    DWORD PTR ds:0x64031270,ebx
6400dfcc:	test   eax,eax
6400dfce:	je     0x6400dff5
6400dfd0:	push   esi
6400dfd1:	push   eax
6400dfd2:	call   DWORD PTR ds:0x64025014
6400dfd8:	add    DWORD PTR ds:0x64031274,ebx
6400dfde:	mov    ds:0x640313e8,eax
6400dfe3:	mov    ecx,DWORD PTR [esp+0x10]
6400dfe7:	mov    DWORD PTR fs:0x0,ecx
6400dfee:	pop    ecx
6400dfef:	pop    esi
6400dff0:	pop    ebx
6400dff1:	mov    esp,ebp
6400dff3:	pop    ebp
6400dff4:	ret    
6400dff5:	xor    eax,eax
6400dff7:	mov    ds:0x640313e8,eax
6400dffc:	mov    ecx,DWORD PTR [esp+0x10]
6400e000:	mov    DWORD PTR fs:0x0,ecx
6400e007:	pop    ecx
6400e008:	pop    esi
6400e009:	pop    ebx
6400e00a:	mov    esp,ebp
6400e00c:	pop    ebp
6400e00d:	ret    
6400e00e:	mov    eax,ds:0x640313e8
6400e013:	mov    ecx,DWORD PTR [esp+0x10]
6400e017:	mov    DWORD PTR fs:0x0,ecx
6400e01e:	pop    ecx
6400e01f:	pop    esi
6400e020:	pop    ebx
6400e021:	mov    esp,ebp
6400e023:	pop    ebp
6400e024:	ret    
6400e025:	int3   
6400e026:	int3   
6400e027:	int3   
6400e028:	int3   
6400e029:	int3   
6400e02a:	int3   
6400e02b:	int3   
6400e02c:	int3   
6400e02d:	int3   
6400e02e:	int3   
6400e02f:	int3   
6400e030:	push   ebp
6400e031:	mov    ebp,esp
6400e033:	and    esp,0xfffffff8
6400e036:	push   0xffffffff
6400e038:	push   0x6402345e
6400e03d:	mov    eax,fs:0x0
6400e043:	push   eax
6400e044:	push   ecx
6400e045:	push   ebx
6400e046:	push   esi
6400e047:	mov    eax,ds:0x6402d09c
6400e04c:	xor    eax,esp
6400e04e:	push   eax
6400e04f:	lea    eax,[esp+0x10]
6400e053:	mov    fs:0x0,eax
6400e059:	mov    ebx,0x1
6400e05e:	test   BYTE PTR ds:0x640313e4,bl
6400e064:	jne    0x6400e0ee
6400e06a:	or     DWORD PTR ds:0x640313e4,ebx
6400e070:	push   0x640290f4
6400e075:	push   0x15
6400e077:	push   0x64029120
6400e07c:	mov    DWORD PTR [esp+0x24],0x0
6400e084:	call   0x640057b0
6400e089:	push   0x64029138
6400e08e:	push   0x8
6400e090:	push   0x640290e0
6400e095:	mov    esi,eax
6400e097:	call   0x640059b0
6400e09c:	add    esp,0x18
6400e09f:	push   eax
6400e0a0:	call   DWORD PTR ds:0x64025018
6400e0a6:	add    DWORD PTR ds:0x64031270,ebx
6400e0ac:	test   eax,eax
6400e0ae:	je     0x6400e0d5
6400e0b0:	push   esi
6400e0b1:	push   eax
6400e0b2:	call   DWORD PTR ds:0x64025014
6400e0b8:	add    DWORD PTR ds:0x64031274,ebx
6400e0be:	mov    ds:0x640313e0,eax
6400e0c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e0c7:	mov    DWORD PTR fs:0x0,ecx
6400e0ce:	pop    ecx
6400e0cf:	pop    esi
6400e0d0:	pop    ebx
6400e0d1:	mov    esp,ebp
6400e0d3:	pop    ebp
6400e0d4:	ret    
6400e0d5:	xor    eax,eax
6400e0d7:	mov    ds:0x640313e0,eax
6400e0dc:	mov    ecx,DWORD PTR [esp+0x10]
6400e0e0:	mov    DWORD PTR fs:0x0,ecx
6400e0e7:	pop    ecx
6400e0e8:	pop    esi
6400e0e9:	pop    ebx
6400e0ea:	mov    esp,ebp
6400e0ec:	pop    ebp
6400e0ed:	ret    
6400e0ee:	mov    eax,ds:0x640313e0
6400e0f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e0f7:	mov    DWORD PTR fs:0x0,ecx
6400e0fe:	pop    ecx
6400e0ff:	pop    esi
6400e100:	pop    ebx
6400e101:	mov    esp,ebp
6400e103:	pop    ebp
6400e104:	ret    
6400e105:	int3   
6400e106:	int3   
6400e107:	int3   
6400e108:	int3   
6400e109:	int3   
6400e10a:	int3   
6400e10b:	int3   
6400e10c:	int3   
6400e10d:	int3   
6400e10e:	int3   
6400e10f:	int3   
6400e110:	push   ebp
6400e111:	mov    ebp,esp
6400e113:	and    esp,0xfffffff8
6400e116:	push   0xffffffff
6400e118:	push   0x6402342e
6400e11d:	mov    eax,fs:0x0
6400e123:	push   eax
6400e124:	push   ecx
6400e125:	push   ebx
6400e126:	push   esi
6400e127:	mov    eax,ds:0x6402d09c
6400e12c:	xor    eax,esp
6400e12e:	push   eax
6400e12f:	lea    eax,[esp+0x10]
6400e133:	mov    fs:0x0,eax
6400e139:	mov    ebx,0x1
6400e13e:	test   BYTE PTR ds:0x640313dc,bl
6400e144:	jne    0x6400e1ce
6400e14a:	or     DWORD PTR ds:0x640313dc,ebx
6400e150:	push   0x64029174
6400e155:	push   0x15
6400e157:	push   0x640291a0
6400e15c:	mov    DWORD PTR [esp+0x24],0x0
6400e164:	call   0x640057b0
6400e169:	push   0x640291b8
6400e16e:	push   0x8
6400e170:	push   0x640290e0
6400e175:	mov    esi,eax
6400e177:	call   0x640059b0
6400e17c:	add    esp,0x18
6400e17f:	push   eax
6400e180:	call   DWORD PTR ds:0x64025018
6400e186:	add    DWORD PTR ds:0x64031270,ebx
6400e18c:	test   eax,eax
6400e18e:	je     0x6400e1b5
6400e190:	push   esi
6400e191:	push   eax
6400e192:	call   DWORD PTR ds:0x64025014
6400e198:	add    DWORD PTR ds:0x64031274,ebx
6400e19e:	mov    ds:0x640313d8,eax
6400e1a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e1a7:	mov    DWORD PTR fs:0x0,ecx
6400e1ae:	pop    ecx
6400e1af:	pop    esi
6400e1b0:	pop    ebx
6400e1b1:	mov    esp,ebp
6400e1b3:	pop    ebp
6400e1b4:	ret    
6400e1b5:	xor    eax,eax
6400e1b7:	mov    ds:0x640313d8,eax
6400e1bc:	mov    ecx,DWORD PTR [esp+0x10]
6400e1c0:	mov    DWORD PTR fs:0x0,ecx
6400e1c7:	pop    ecx
6400e1c8:	pop    esi
6400e1c9:	pop    ebx
6400e1ca:	mov    esp,ebp
6400e1cc:	pop    ebp
6400e1cd:	ret    
6400e1ce:	mov    eax,ds:0x640313d8
6400e1d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e1d7:	mov    DWORD PTR fs:0x0,ecx
6400e1de:	pop    ecx
6400e1df:	pop    esi
6400e1e0:	pop    ebx
6400e1e1:	mov    esp,ebp
6400e1e3:	pop    ebp
6400e1e4:	ret    
6400e1e5:	int3   
6400e1e6:	int3   
6400e1e7:	int3   
6400e1e8:	int3   
6400e1e9:	int3   
6400e1ea:	int3   
6400e1eb:	int3   
6400e1ec:	int3   
6400e1ed:	int3   
6400e1ee:	int3   
6400e1ef:	int3   
6400e1f0:	push   ebp
6400e1f1:	mov    ebp,esp
6400e1f3:	and    esp,0xfffffff8
6400e1f6:	push   0xffffffff
6400e1f8:	push   0x640233fe
6400e1fd:	mov    eax,fs:0x0
6400e203:	push   eax
6400e204:	push   ecx
6400e205:	push   ebx
6400e206:	push   esi
6400e207:	mov    eax,ds:0x6402d09c
6400e20c:	xor    eax,esp
6400e20e:	push   eax
6400e20f:	lea    eax,[esp+0x10]
6400e213:	mov    fs:0x0,eax
6400e219:	mov    ebx,0x1
6400e21e:	test   BYTE PTR ds:0x640313d4,bl
6400e224:	jne    0x6400e2ae
6400e22a:	or     DWORD PTR ds:0x640313d4,ebx
6400e230:	push   0x640291f0
6400e235:	push   0x34
6400e237:	push   0x64029230
6400e23c:	mov    DWORD PTR [esp+0x24],0x0
6400e244:	call   0x640057b0
6400e249:	push   0x64029268
6400e24e:	push   0x8
6400e250:	push   0x640290e0
6400e255:	mov    esi,eax
6400e257:	call   0x640059b0
6400e25c:	add    esp,0x18
6400e25f:	push   eax
6400e260:	call   DWORD PTR ds:0x64025018
6400e266:	add    DWORD PTR ds:0x64031270,ebx
6400e26c:	test   eax,eax
6400e26e:	je     0x6400e295
6400e270:	push   esi
6400e271:	push   eax
6400e272:	call   DWORD PTR ds:0x64025014
6400e278:	add    DWORD PTR ds:0x64031274,ebx
6400e27e:	mov    ds:0x640313d0,eax
6400e283:	mov    ecx,DWORD PTR [esp+0x10]
6400e287:	mov    DWORD PTR fs:0x0,ecx
6400e28e:	pop    ecx
6400e28f:	pop    esi
6400e290:	pop    ebx
6400e291:	mov    esp,ebp
6400e293:	pop    ebp
6400e294:	ret    
6400e295:	xor    eax,eax
6400e297:	mov    ds:0x640313d0,eax
6400e29c:	mov    ecx,DWORD PTR [esp+0x10]
6400e2a0:	mov    DWORD PTR fs:0x0,ecx
6400e2a7:	pop    ecx
6400e2a8:	pop    esi
6400e2a9:	pop    ebx
6400e2aa:	mov    esp,ebp
6400e2ac:	pop    ebp
6400e2ad:	ret    
6400e2ae:	mov    eax,ds:0x640313d0
6400e2b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e2b7:	mov    DWORD PTR fs:0x0,ecx
6400e2be:	pop    ecx
6400e2bf:	pop    esi
6400e2c0:	pop    ebx
6400e2c1:	mov    esp,ebp
6400e2c3:	pop    ebp
6400e2c4:	ret    
6400e2c5:	int3   
6400e2c6:	int3   
6400e2c7:	int3   
6400e2c8:	int3   
6400e2c9:	int3   
6400e2ca:	int3   
6400e2cb:	int3   
6400e2cc:	int3   
6400e2cd:	int3   
6400e2ce:	int3   
6400e2cf:	int3   
6400e2d0:	push   ebp
6400e2d1:	mov    ebp,esp
6400e2d3:	and    esp,0xfffffff8
6400e2d6:	push   0xffffffff
6400e2d8:	push   0x640233ce
6400e2dd:	mov    eax,fs:0x0
6400e2e3:	push   eax
6400e2e4:	push   ecx
6400e2e5:	push   ebx
6400e2e6:	push   esi
6400e2e7:	mov    eax,ds:0x6402d09c
6400e2ec:	xor    eax,esp
6400e2ee:	push   eax
6400e2ef:	lea    eax,[esp+0x10]
6400e2f3:	mov    fs:0x0,eax
6400e2f9:	mov    ebx,0x1
6400e2fe:	test   BYTE PTR ds:0x640313cc,bl
6400e304:	jne    0x6400e38e
6400e30a:	or     DWORD PTR ds:0x640313cc,ebx
6400e310:	push   0x640292a0
6400e315:	push   0xb
6400e317:	push   0x640292d4
6400e31c:	mov    DWORD PTR [esp+0x24],0x0
6400e324:	call   0x640057b0
6400e329:	push   0x640292e0
6400e32e:	push   0x8
6400e330:	push   0x640290e0
6400e335:	mov    esi,eax
6400e337:	call   0x640059b0
6400e33c:	add    esp,0x18
6400e33f:	push   eax
6400e340:	call   DWORD PTR ds:0x64025018
6400e346:	add    DWORD PTR ds:0x64031270,ebx
6400e34c:	test   eax,eax
6400e34e:	je     0x6400e375
6400e350:	push   esi
6400e351:	push   eax
6400e352:	call   DWORD PTR ds:0x64025014
6400e358:	add    DWORD PTR ds:0x64031274,ebx
6400e35e:	mov    ds:0x640313c8,eax
6400e363:	mov    ecx,DWORD PTR [esp+0x10]
6400e367:	mov    DWORD PTR fs:0x0,ecx
6400e36e:	pop    ecx
6400e36f:	pop    esi
6400e370:	pop    ebx
6400e371:	mov    esp,ebp
6400e373:	pop    ebp
6400e374:	ret    
6400e375:	xor    eax,eax
6400e377:	mov    ds:0x640313c8,eax
6400e37c:	mov    ecx,DWORD PTR [esp+0x10]
6400e380:	mov    DWORD PTR fs:0x0,ecx
6400e387:	pop    ecx
6400e388:	pop    esi
6400e389:	pop    ebx
6400e38a:	mov    esp,ebp
6400e38c:	pop    ebp
6400e38d:	ret    
6400e38e:	mov    eax,ds:0x640313c8
6400e393:	mov    ecx,DWORD PTR [esp+0x10]
6400e397:	mov    DWORD PTR fs:0x0,ecx
6400e39e:	pop    ecx
6400e39f:	pop    esi
6400e3a0:	pop    ebx
6400e3a1:	mov    esp,ebp
6400e3a3:	pop    ebp
6400e3a4:	ret    
6400e3a5:	int3   
6400e3a6:	int3   
6400e3a7:	int3   
6400e3a8:	int3   
6400e3a9:	int3   
6400e3aa:	int3   
6400e3ab:	int3   
6400e3ac:	int3   
6400e3ad:	int3   
6400e3ae:	int3   
6400e3af:	int3   
6400e3b0:	push   ebp
6400e3b1:	mov    ebp,esp
6400e3b3:	and    esp,0xfffffff8
6400e3b6:	push   0xffffffff
6400e3b8:	push   0x6402339e
6400e3bd:	mov    eax,fs:0x0
6400e3c3:	push   eax
6400e3c4:	push   ecx
6400e3c5:	push   ebx
6400e3c6:	push   esi
6400e3c7:	mov    eax,ds:0x6402d09c
6400e3cc:	xor    eax,esp
6400e3ce:	push   eax
6400e3cf:	lea    eax,[esp+0x10]
6400e3d3:	mov    fs:0x0,eax
6400e3d9:	mov    ebx,0x1
6400e3de:	test   BYTE PTR ds:0x640313c4,bl
6400e3e4:	jne    0x6400e46e
6400e3ea:	or     DWORD PTR ds:0x640313c4,ebx
6400e3f0:	push   0x64029314
6400e3f5:	push   0xd
6400e3f7:	push   0x64029354
6400e3fc:	mov    DWORD PTR [esp+0x24],0x0
6400e404:	call   0x640057b0
6400e409:	push   0x64029364
6400e40e:	push   0x8
6400e410:	push   0x640290e0
6400e415:	mov    esi,eax
6400e417:	call   0x640059b0
6400e41c:	add    esp,0x18
6400e41f:	push   eax
6400e420:	call   DWORD PTR ds:0x64025018
6400e426:	add    DWORD PTR ds:0x64031270,ebx
6400e42c:	test   eax,eax
6400e42e:	je     0x6400e455
6400e430:	push   esi
6400e431:	push   eax
6400e432:	call   DWORD PTR ds:0x64025014
6400e438:	add    DWORD PTR ds:0x64031274,ebx
6400e43e:	mov    ds:0x640313c0,eax
6400e443:	mov    ecx,DWORD PTR [esp+0x10]
6400e447:	mov    DWORD PTR fs:0x0,ecx
6400e44e:	pop    ecx
6400e44f:	pop    esi
6400e450:	pop    ebx
6400e451:	mov    esp,ebp
6400e453:	pop    ebp
6400e454:	ret    
6400e455:	xor    eax,eax
6400e457:	mov    ds:0x640313c0,eax
6400e45c:	mov    ecx,DWORD PTR [esp+0x10]
6400e460:	mov    DWORD PTR fs:0x0,ecx
6400e467:	pop    ecx
6400e468:	pop    esi
6400e469:	pop    ebx
6400e46a:	mov    esp,ebp
6400e46c:	pop    ebp
6400e46d:	ret    
6400e46e:	mov    eax,ds:0x640313c0
6400e473:	mov    ecx,DWORD PTR [esp+0x10]
6400e477:	mov    DWORD PTR fs:0x0,ecx
6400e47e:	pop    ecx
6400e47f:	pop    esi
6400e480:	pop    ebx
6400e481:	mov    esp,ebp
6400e483:	pop    ebp
6400e484:	ret    
6400e485:	int3   
6400e486:	int3   
6400e487:	int3   
6400e488:	int3   
6400e489:	int3   
6400e48a:	int3   
6400e48b:	int3   
6400e48c:	int3   
6400e48d:	int3   
6400e48e:	int3   
6400e48f:	int3   
6400e490:	push   ebp
6400e491:	mov    ebp,esp
6400e493:	and    esp,0xfffffff8
6400e496:	push   0xffffffff
6400e498:	push   0x6402336e
6400e49d:	mov    eax,fs:0x0
6400e4a3:	push   eax
6400e4a4:	push   ecx
6400e4a5:	push   ebx
6400e4a6:	push   esi
6400e4a7:	mov    eax,ds:0x6402d09c
6400e4ac:	xor    eax,esp
6400e4ae:	push   eax
6400e4af:	lea    eax,[esp+0x10]
6400e4b3:	mov    fs:0x0,eax
6400e4b9:	mov    ebx,0x1
6400e4be:	test   BYTE PTR ds:0x640313bc,bl
6400e4c4:	jne    0x6400e54e
6400e4ca:	or     DWORD PTR ds:0x640313bc,ebx
6400e4d0:	push   0x64029388
6400e4d5:	push   0xe
6400e4d7:	push   0x640293b8
6400e4dc:	mov    DWORD PTR [esp+0x24],0x0
6400e4e4:	call   0x640057b0
6400e4e9:	push   0x640293c8
6400e4ee:	push   0x8
6400e4f0:	push   0x640290e0
6400e4f5:	mov    esi,eax
6400e4f7:	call   0x640059b0
6400e4fc:	add    esp,0x18
6400e4ff:	push   eax
6400e500:	call   DWORD PTR ds:0x64025018
6400e506:	add    DWORD PTR ds:0x64031270,ebx
6400e50c:	test   eax,eax
6400e50e:	je     0x6400e535
6400e510:	push   esi
6400e511:	push   eax
6400e512:	call   DWORD PTR ds:0x64025014
6400e518:	add    DWORD PTR ds:0x64031274,ebx
6400e51e:	mov    ds:0x640313b8,eax
6400e523:	mov    ecx,DWORD PTR [esp+0x10]
6400e527:	mov    DWORD PTR fs:0x0,ecx
6400e52e:	pop    ecx
6400e52f:	pop    esi
6400e530:	pop    ebx
6400e531:	mov    esp,ebp
6400e533:	pop    ebp
6400e534:	ret    
6400e535:	xor    eax,eax
6400e537:	mov    ds:0x640313b8,eax
6400e53c:	mov    ecx,DWORD PTR [esp+0x10]
6400e540:	mov    DWORD PTR fs:0x0,ecx
6400e547:	pop    ecx
6400e548:	pop    esi
6400e549:	pop    ebx
6400e54a:	mov    esp,ebp
6400e54c:	pop    ebp
6400e54d:	ret    
6400e54e:	mov    eax,ds:0x640313b8
6400e553:	mov    ecx,DWORD PTR [esp+0x10]
6400e557:	mov    DWORD PTR fs:0x0,ecx
6400e55e:	pop    ecx
6400e55f:	pop    esi
6400e560:	pop    ebx
6400e561:	mov    esp,ebp
6400e563:	pop    ebp
6400e564:	ret    
6400e565:	int3   
6400e566:	int3   
6400e567:	int3   
6400e568:	int3   
6400e569:	int3   
6400e56a:	int3   
6400e56b:	int3   
6400e56c:	int3   
6400e56d:	int3   
6400e56e:	int3   
6400e56f:	int3   
6400e570:	push   ebp
6400e571:	mov    ebp,esp
6400e573:	and    esp,0xfffffff8
6400e576:	push   0xffffffff
6400e578:	push   0x6402333e
6400e57d:	mov    eax,fs:0x0
6400e583:	push   eax
6400e584:	push   ecx
6400e585:	push   ebx
6400e586:	push   esi
6400e587:	mov    eax,ds:0x6402d09c
6400e58c:	xor    eax,esp
6400e58e:	push   eax
6400e58f:	lea    eax,[esp+0x10]
6400e593:	mov    fs:0x0,eax
6400e599:	mov    ebx,0x1
6400e59e:	test   BYTE PTR ds:0x640313b4,bl
6400e5a4:	jne    0x6400e62e
6400e5aa:	or     DWORD PTR ds:0x640313b4,ebx
6400e5b0:	push   0x64029400
6400e5b5:	push   0x14
6400e5b7:	push   0x6402943c
6400e5bc:	mov    DWORD PTR [esp+0x24],0x0
6400e5c4:	call   0x640057b0
6400e5c9:	push   0x64029454
6400e5ce:	push   0x8
6400e5d0:	push   0x640290e0
6400e5d5:	mov    esi,eax
6400e5d7:	call   0x640059b0
6400e5dc:	add    esp,0x18
6400e5df:	push   eax
6400e5e0:	call   DWORD PTR ds:0x64025018
6400e5e6:	add    DWORD PTR ds:0x64031270,ebx
6400e5ec:	test   eax,eax
6400e5ee:	je     0x6400e615
6400e5f0:	push   esi
6400e5f1:	push   eax
6400e5f2:	call   DWORD PTR ds:0x64025014
6400e5f8:	add    DWORD PTR ds:0x64031274,ebx
6400e5fe:	mov    ds:0x640313b0,eax
6400e603:	mov    ecx,DWORD PTR [esp+0x10]
6400e607:	mov    DWORD PTR fs:0x0,ecx
6400e60e:	pop    ecx
6400e60f:	pop    esi
6400e610:	pop    ebx
6400e611:	mov    esp,ebp
6400e613:	pop    ebp
6400e614:	ret    
6400e615:	xor    eax,eax
6400e617:	mov    ds:0x640313b0,eax
6400e61c:	mov    ecx,DWORD PTR [esp+0x10]
6400e620:	mov    DWORD PTR fs:0x0,ecx
6400e627:	pop    ecx
6400e628:	pop    esi
6400e629:	pop    ebx
6400e62a:	mov    esp,ebp
6400e62c:	pop    ebp
6400e62d:	ret    
6400e62e:	mov    eax,ds:0x640313b0
6400e633:	mov    ecx,DWORD PTR [esp+0x10]
6400e637:	mov    DWORD PTR fs:0x0,ecx
6400e63e:	pop    ecx
6400e63f:	pop    esi
6400e640:	pop    ebx
6400e641:	mov    esp,ebp
6400e643:	pop    ebp
6400e644:	ret    
6400e645:	int3   
6400e646:	int3   
6400e647:	int3   
6400e648:	int3   
6400e649:	int3   
6400e64a:	int3   
6400e64b:	int3   
6400e64c:	int3   
6400e64d:	int3   
6400e64e:	int3   
6400e64f:	int3   
6400e650:	push   ebp
6400e651:	mov    ebp,esp
6400e653:	and    esp,0xfffffff8
6400e656:	push   0xffffffff
6400e658:	push   0x6402330e
6400e65d:	mov    eax,fs:0x0
6400e663:	push   eax
6400e664:	push   ecx
6400e665:	push   ebx
6400e666:	push   esi
6400e667:	mov    eax,ds:0x6402d09c
6400e66c:	xor    eax,esp
6400e66e:	push   eax
6400e66f:	lea    eax,[esp+0x10]
6400e673:	mov    fs:0x0,eax
6400e679:	mov    ebx,0x1
6400e67e:	test   BYTE PTR ds:0x640313ac,bl
6400e684:	jne    0x6400e70e
6400e68a:	or     DWORD PTR ds:0x640313ac,ebx
6400e690:	push   0x6402947c
6400e695:	push   0xd
6400e697:	push   0x640294a8
6400e69c:	mov    DWORD PTR [esp+0x24],0x0
6400e6a4:	call   0x640057b0
6400e6a9:	push   0x640294b8
6400e6ae:	push   0x8
6400e6b0:	push   0x640290e0
6400e6b5:	mov    esi,eax
6400e6b7:	call   0x640059b0
6400e6bc:	add    esp,0x18
6400e6bf:	push   eax
6400e6c0:	call   DWORD PTR ds:0x64025018
6400e6c6:	add    DWORD PTR ds:0x64031270,ebx
6400e6cc:	test   eax,eax
6400e6ce:	je     0x6400e6f5
6400e6d0:	push   esi
6400e6d1:	push   eax
6400e6d2:	call   DWORD PTR ds:0x64025014
6400e6d8:	add    DWORD PTR ds:0x64031274,ebx
6400e6de:	mov    ds:0x640313a8,eax
6400e6e3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6e7:	mov    DWORD PTR fs:0x0,ecx
6400e6ee:	pop    ecx
6400e6ef:	pop    esi
6400e6f0:	pop    ebx
6400e6f1:	mov    esp,ebp
6400e6f3:	pop    ebp
6400e6f4:	ret    
6400e6f5:	xor    eax,eax
6400e6f7:	mov    ds:0x640313a8,eax
6400e6fc:	mov    ecx,DWORD PTR [esp+0x10]
6400e700:	mov    DWORD PTR fs:0x0,ecx
6400e707:	pop    ecx
6400e708:	pop    esi
6400e709:	pop    ebx
6400e70a:	mov    esp,ebp
6400e70c:	pop    ebp
6400e70d:	ret    
6400e70e:	mov    eax,ds:0x640313a8
6400e713:	mov    ecx,DWORD PTR [esp+0x10]
6400e717:	mov    DWORD PTR fs:0x0,ecx
6400e71e:	pop    ecx
6400e71f:	pop    esi
6400e720:	pop    ebx
6400e721:	mov    esp,ebp
6400e723:	pop    ebp
6400e724:	ret    
6400e725:	int3   
6400e726:	int3   
6400e727:	int3   
6400e728:	int3   
6400e729:	int3   
6400e72a:	int3   
6400e72b:	int3   
6400e72c:	int3   
6400e72d:	int3   
6400e72e:	int3   
6400e72f:	int3   
6400e730:	push   ebp
6400e731:	mov    ebp,esp
6400e733:	and    esp,0xfffffff8
6400e736:	push   0xffffffff
6400e738:	push   0x640232de
6400e73d:	mov    eax,fs:0x0
6400e743:	push   eax
6400e744:	push   ecx
6400e745:	push   ebx
6400e746:	push   esi
6400e747:	mov    eax,ds:0x6402d09c
6400e74c:	xor    eax,esp
6400e74e:	push   eax
6400e74f:	lea    eax,[esp+0x10]
6400e753:	mov    fs:0x0,eax
6400e759:	mov    ebx,0x1
6400e75e:	test   BYTE PTR ds:0x640313a4,bl
6400e764:	jne    0x6400e7ee
6400e76a:	or     DWORD PTR ds:0x640313a4,ebx
6400e770:	push   0x640294ec
6400e775:	push   0xe
6400e777:	push   0x64029510
6400e77c:	mov    DWORD PTR [esp+0x24],0x0
6400e784:	call   0x640057b0
6400e789:	push   0x64029520
6400e78e:	push   0x8
6400e790:	push   0x640290e0
6400e795:	mov    esi,eax
6400e797:	call   0x640059b0
6400e79c:	add    esp,0x18
6400e79f:	push   eax
6400e7a0:	call   DWORD PTR ds:0x64025018
6400e7a6:	add    DWORD PTR ds:0x64031270,ebx
6400e7ac:	test   eax,eax
6400e7ae:	je     0x6400e7d5
6400e7b0:	push   esi
6400e7b1:	push   eax
6400e7b2:	call   DWORD PTR ds:0x64025014
6400e7b8:	add    DWORD PTR ds:0x64031274,ebx
6400e7be:	mov    ds:0x640313a0,eax
6400e7c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e7c7:	mov    DWORD PTR fs:0x0,ecx
6400e7ce:	pop    ecx
6400e7cf:	pop    esi
6400e7d0:	pop    ebx
6400e7d1:	mov    esp,ebp
6400e7d3:	pop    ebp
6400e7d4:	ret    
6400e7d5:	xor    eax,eax
6400e7d7:	mov    ds:0x640313a0,eax
6400e7dc:	mov    ecx,DWORD PTR [esp+0x10]
6400e7e0:	mov    DWORD PTR fs:0x0,ecx
6400e7e7:	pop    ecx
6400e7e8:	pop    esi
6400e7e9:	pop    ebx
6400e7ea:	mov    esp,ebp
6400e7ec:	pop    ebp
6400e7ed:	ret    
6400e7ee:	mov    eax,ds:0x640313a0
6400e7f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e7f7:	mov    DWORD PTR fs:0x0,ecx
6400e7fe:	pop    ecx
6400e7ff:	pop    esi
6400e800:	pop    ebx
6400e801:	mov    esp,ebp
6400e803:	pop    ebp
6400e804:	ret    
6400e805:	int3   
6400e806:	int3   
6400e807:	int3   
6400e808:	int3   
6400e809:	int3   
6400e80a:	int3   
6400e80b:	int3   
6400e80c:	int3   
6400e80d:	int3   
6400e80e:	int3   
6400e80f:	int3   
6400e810:	push   ebp
6400e811:	mov    ebp,esp
6400e813:	and    esp,0xfffffff8
6400e816:	push   0xffffffff
6400e818:	push   0x640232ae
6400e81d:	mov    eax,fs:0x0
6400e823:	push   eax
6400e824:	push   ecx
6400e825:	push   ebx
6400e826:	push   esi
6400e827:	mov    eax,ds:0x6402d09c
6400e82c:	xor    eax,esp
6400e82e:	push   eax
6400e82f:	lea    eax,[esp+0x10]
6400e833:	mov    fs:0x0,eax
6400e839:	mov    ebx,0x1
6400e83e:	test   BYTE PTR ds:0x6403139c,bl
6400e844:	jne    0x6400e8ce
6400e84a:	or     DWORD PTR ds:0x6403139c,ebx
6400e850:	push   0x64029560
6400e855:	push   0xf
6400e857:	push   0x64029590
6400e85c:	mov    DWORD PTR [esp+0x24],0x0
6400e864:	call   0x640057b0
6400e869:	push   0x640295a0
6400e86e:	push   0x8
6400e870:	push   0x640290e0
6400e875:	mov    esi,eax
6400e877:	call   0x640059b0
6400e87c:	add    esp,0x18
6400e87f:	push   eax
6400e880:	call   DWORD PTR ds:0x64025018
6400e886:	add    DWORD PTR ds:0x64031270,ebx
6400e88c:	test   eax,eax
6400e88e:	je     0x6400e8b5
6400e890:	push   esi
6400e891:	push   eax
6400e892:	call   DWORD PTR ds:0x64025014
6400e898:	add    DWORD PTR ds:0x64031274,ebx
6400e89e:	mov    ds:0x64031398,eax
6400e8a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e8a7:	mov    DWORD PTR fs:0x0,ecx
6400e8ae:	pop    ecx
6400e8af:	pop    esi
6400e8b0:	pop    ebx
6400e8b1:	mov    esp,ebp
6400e8b3:	pop    ebp
6400e8b4:	ret    
6400e8b5:	xor    eax,eax
6400e8b7:	mov    ds:0x64031398,eax
6400e8bc:	mov    ecx,DWORD PTR [esp+0x10]
6400e8c0:	mov    DWORD PTR fs:0x0,ecx
6400e8c7:	pop    ecx
6400e8c8:	pop    esi
6400e8c9:	pop    ebx
6400e8ca:	mov    esp,ebp
6400e8cc:	pop    ebp
6400e8cd:	ret    
6400e8ce:	mov    eax,ds:0x64031398
6400e8d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e8d7:	mov    DWORD PTR fs:0x0,ecx
6400e8de:	pop    ecx
6400e8df:	pop    esi
6400e8e0:	pop    ebx
6400e8e1:	mov    esp,ebp
6400e8e3:	pop    ebp
6400e8e4:	ret    
6400e8e5:	int3   
6400e8e6:	int3   
6400e8e7:	int3   
6400e8e8:	int3   
6400e8e9:	int3   
6400e8ea:	int3   
6400e8eb:	int3   
6400e8ec:	int3   
6400e8ed:	int3   
6400e8ee:	int3   
6400e8ef:	int3   
6400e8f0:	push   ebp
6400e8f1:	mov    ebp,esp
6400e8f3:	and    esp,0xfffffff8
6400e8f6:	push   0xffffffff
6400e8f8:	push   0x6402327e
6400e8fd:	mov    eax,fs:0x0
6400e903:	push   eax
6400e904:	push   ecx
6400e905:	push   ebx
6400e906:	push   esi
6400e907:	mov    eax,ds:0x6402d09c
6400e90c:	xor    eax,esp
6400e90e:	push   eax
6400e90f:	lea    eax,[esp+0x10]
6400e913:	mov    fs:0x0,eax
6400e919:	mov    ebx,0x1
6400e91e:	test   BYTE PTR ds:0x64031394,bl
6400e924:	jne    0x6400e9ae
6400e92a:	or     DWORD PTR ds:0x64031394,ebx
6400e930:	push   0x640295cc
6400e935:	push   0x12
6400e937:	push   0x64029600
6400e93c:	mov    DWORD PTR [esp+0x24],0x0
6400e944:	call   0x640057b0
6400e949:	push   0x64029614
6400e94e:	push   0x8
6400e950:	push   0x640290e0
6400e955:	mov    esi,eax
6400e957:	call   0x640059b0
6400e95c:	add    esp,0x18
6400e95f:	push   eax
6400e960:	call   DWORD PTR ds:0x64025018
6400e966:	add    DWORD PTR ds:0x64031270,ebx
6400e96c:	test   eax,eax
6400e96e:	je     0x6400e995
6400e970:	push   esi
6400e971:	push   eax
6400e972:	call   DWORD PTR ds:0x64025014
6400e978:	add    DWORD PTR ds:0x64031274,ebx
6400e97e:	mov    ds:0x64031390,eax
6400e983:	mov    ecx,DWORD PTR [esp+0x10]
6400e987:	mov    DWORD PTR fs:0x0,ecx
6400e98e:	pop    ecx
6400e98f:	pop    esi
6400e990:	pop    ebx
6400e991:	mov    esp,ebp
6400e993:	pop    ebp
6400e994:	ret    
6400e995:	xor    eax,eax
6400e997:	mov    ds:0x64031390,eax
6400e99c:	mov    ecx,DWORD PTR [esp+0x10]
6400e9a0:	mov    DWORD PTR fs:0x0,ecx
6400e9a7:	pop    ecx
6400e9a8:	pop    esi
6400e9a9:	pop    ebx
6400e9aa:	mov    esp,ebp
6400e9ac:	pop    ebp
6400e9ad:	ret    
6400e9ae:	mov    eax,ds:0x64031390
6400e9b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e9b7:	mov    DWORD PTR fs:0x0,ecx
6400e9be:	pop    ecx
6400e9bf:	pop    esi
6400e9c0:	pop    ebx
6400e9c1:	mov    esp,ebp
6400e9c3:	pop    ebp
6400e9c4:	ret    
6400e9c5:	int3   
6400e9c6:	int3   
6400e9c7:	int3   
6400e9c8:	int3   
6400e9c9:	int3   
6400e9ca:	int3   
6400e9cb:	int3   
6400e9cc:	int3   
6400e9cd:	int3   
6400e9ce:	int3   
6400e9cf:	int3   
6400e9d0:	push   ebp
6400e9d1:	mov    ebp,esp
6400e9d3:	and    esp,0xfffffff8
6400e9d6:	push   0xffffffff
6400e9d8:	push   0x6402324e
6400e9dd:	mov    eax,fs:0x0
6400e9e3:	push   eax
6400e9e4:	push   ecx
6400e9e5:	push   ebx
6400e9e6:	push   esi
6400e9e7:	mov    eax,ds:0x6402d09c
6400e9ec:	xor    eax,esp
6400e9ee:	push   eax
6400e9ef:	lea    eax,[esp+0x10]
6400e9f3:	mov    fs:0x0,eax
6400e9f9:	mov    ebx,0x1
6400e9fe:	test   BYTE PTR ds:0x6403138c,bl
6400ea04:	jne    0x6400ea8e
6400ea0a:	or     DWORD PTR ds:0x6403138c,ebx
6400ea10:	push   0x64029644
6400ea15:	push   0xf
6400ea17:	push   0x64029684
6400ea1c:	mov    DWORD PTR [esp+0x24],0x0
6400ea24:	call   0x640057b0
6400ea29:	push   0x64029694
6400ea2e:	push   0x8
6400ea30:	push   0x640290e0
6400ea35:	mov    esi,eax
6400ea37:	call   0x640059b0
6400ea3c:	add    esp,0x18
6400ea3f:	push   eax
6400ea40:	call   DWORD PTR ds:0x64025018
6400ea46:	add    DWORD PTR ds:0x64031270,ebx
6400ea4c:	test   eax,eax
6400ea4e:	je     0x6400ea75
6400ea50:	push   esi
6400ea51:	push   eax
6400ea52:	call   DWORD PTR ds:0x64025014
6400ea58:	add    DWORD PTR ds:0x64031274,ebx
6400ea5e:	mov    ds:0x64031388,eax
6400ea63:	mov    ecx,DWORD PTR [esp+0x10]
6400ea67:	mov    DWORD PTR fs:0x0,ecx
6400ea6e:	pop    ecx
6400ea6f:	pop    esi
6400ea70:	pop    ebx
6400ea71:	mov    esp,ebp
6400ea73:	pop    ebp
6400ea74:	ret    
6400ea75:	xor    eax,eax
6400ea77:	mov    ds:0x64031388,eax
6400ea7c:	mov    ecx,DWORD PTR [esp+0x10]
6400ea80:	mov    DWORD PTR fs:0x0,ecx
6400ea87:	pop    ecx
6400ea88:	pop    esi
6400ea89:	pop    ebx
6400ea8a:	mov    esp,ebp
6400ea8c:	pop    ebp
6400ea8d:	ret    
6400ea8e:	mov    eax,ds:0x64031388
6400ea93:	mov    ecx,DWORD PTR [esp+0x10]
6400ea97:	mov    DWORD PTR fs:0x0,ecx
6400ea9e:	pop    ecx
6400ea9f:	pop    esi
6400eaa0:	pop    ebx
6400eaa1:	mov    esp,ebp
6400eaa3:	pop    ebp
6400eaa4:	ret    
6400eaa5:	int3   
6400eaa6:	int3   
6400eaa7:	int3   
6400eaa8:	int3   
6400eaa9:	int3   
6400eaaa:	int3   
6400eaab:	int3   
6400eaac:	int3   
6400eaad:	int3   
6400eaae:	int3   
6400eaaf:	int3   
6400eab0:	push   ebp
6400eab1:	mov    ebp,esp
6400eab3:	and    esp,0xfffffff8
6400eab6:	push   0xffffffff
6400eab8:	push   0x6402321e
6400eabd:	mov    eax,fs:0x0
6400eac3:	push   eax
6400eac4:	push   ecx
6400eac5:	push   ebx
6400eac6:	push   esi
6400eac7:	mov    eax,ds:0x6402d09c
6400eacc:	xor    eax,esp
6400eace:	push   eax
6400eacf:	lea    eax,[esp+0x10]
6400ead3:	mov    fs:0x0,eax
6400ead9:	mov    ebx,0x1
6400eade:	test   BYTE PTR ds:0x64031384,bl
6400eae4:	jne    0x6400eb6e
6400eaea:	or     DWORD PTR ds:0x64031384,ebx
6400eaf0:	push   0x640296c8
6400eaf5:	push   0xd
6400eaf7:	push   0x64029708
6400eafc:	mov    DWORD PTR [esp+0x24],0x0
6400eb04:	call   0x640057b0
6400eb09:	push   0x64029718
6400eb0e:	push   0x8
6400eb10:	push   0x640290e0
6400eb15:	mov    esi,eax
6400eb17:	call   0x640059b0
6400eb1c:	add    esp,0x18
6400eb1f:	push   eax
6400eb20:	call   DWORD PTR ds:0x64025018
6400eb26:	add    DWORD PTR ds:0x64031270,ebx
6400eb2c:	test   eax,eax
6400eb2e:	je     0x6400eb55
6400eb30:	push   esi
6400eb31:	push   eax
6400eb32:	call   DWORD PTR ds:0x64025014
6400eb38:	add    DWORD PTR ds:0x64031274,ebx
6400eb3e:	mov    ds:0x64031380,eax
6400eb43:	mov    ecx,DWORD PTR [esp+0x10]
6400eb47:	mov    DWORD PTR fs:0x0,ecx
6400eb4e:	pop    ecx
6400eb4f:	pop    esi
6400eb50:	pop    ebx
6400eb51:	mov    esp,ebp
6400eb53:	pop    ebp
6400eb54:	ret    
6400eb55:	xor    eax,eax
6400eb57:	mov    ds:0x64031380,eax
6400eb5c:	mov    ecx,DWORD PTR [esp+0x10]
6400eb60:	mov    DWORD PTR fs:0x0,ecx
6400eb67:	pop    ecx
6400eb68:	pop    esi
6400eb69:	pop    ebx
6400eb6a:	mov    esp,ebp
6400eb6c:	pop    ebp
6400eb6d:	ret    
6400eb6e:	mov    eax,ds:0x64031380
6400eb73:	mov    ecx,DWORD PTR [esp+0x10]
6400eb77:	mov    DWORD PTR fs:0x0,ecx
6400eb7e:	pop    ecx
6400eb7f:	pop    esi
6400eb80:	pop    ebx
6400eb81:	mov    esp,ebp
6400eb83:	pop    ebp
6400eb84:	ret    
6400eb85:	int3   
6400eb86:	int3   
6400eb87:	int3   
6400eb88:	int3   
6400eb89:	int3   
6400eb8a:	int3   
6400eb8b:	int3   
6400eb8c:	int3   
6400eb8d:	int3   
6400eb8e:	int3   
6400eb8f:	int3   
6400eb90:	push   ebp
6400eb91:	mov    ebp,esp
6400eb93:	and    esp,0xfffffff8
6400eb96:	push   0xffffffff
6400eb98:	push   0x640231ee
6400eb9d:	mov    eax,fs:0x0
6400eba3:	push   eax
6400eba4:	push   ecx
6400eba5:	push   ebx
6400eba6:	push   esi
6400eba7:	mov    eax,ds:0x6402d09c
6400ebac:	xor    eax,esp
6400ebae:	push   eax
6400ebaf:	lea    eax,[esp+0x10]
6400ebb3:	mov    fs:0x0,eax
6400ebb9:	mov    ebx,0x1
6400ebbe:	test   BYTE PTR ds:0x6403137c,bl
6400ebc4:	jne    0x6400ec4e
6400ebca:	or     DWORD PTR ds:0x6403137c,ebx
6400ebd0:	push   0x64029748
6400ebd5:	push   0xc
6400ebd7:	push   0x64029780
6400ebdc:	mov    DWORD PTR [esp+0x24],0x0
6400ebe4:	call   0x640057b0
6400ebe9:	push   0x64029790
6400ebee:	push   0x8
6400ebf0:	push   0x640290e0
6400ebf5:	mov    esi,eax
6400ebf7:	call   0x640059b0
6400ebfc:	add    esp,0x18
6400ebff:	push   eax
6400ec00:	call   DWORD PTR ds:0x64025018
6400ec06:	add    DWORD PTR ds:0x64031270,ebx
6400ec0c:	test   eax,eax
6400ec0e:	je     0x6400ec35
6400ec10:	push   esi
6400ec11:	push   eax
6400ec12:	call   DWORD PTR ds:0x64025014
6400ec18:	add    DWORD PTR ds:0x64031274,ebx
6400ec1e:	mov    ds:0x64031378,eax
6400ec23:	mov    ecx,DWORD PTR [esp+0x10]
6400ec27:	mov    DWORD PTR fs:0x0,ecx
6400ec2e:	pop    ecx
6400ec2f:	pop    esi
6400ec30:	pop    ebx
6400ec31:	mov    esp,ebp
6400ec33:	pop    ebp
6400ec34:	ret    
6400ec35:	xor    eax,eax
6400ec37:	mov    ds:0x64031378,eax
6400ec3c:	mov    ecx,DWORD PTR [esp+0x10]
6400ec40:	mov    DWORD PTR fs:0x0,ecx
6400ec47:	pop    ecx
6400ec48:	pop    esi
6400ec49:	pop    ebx
6400ec4a:	mov    esp,ebp
6400ec4c:	pop    ebp
6400ec4d:	ret    
6400ec4e:	mov    eax,ds:0x64031378
6400ec53:	mov    ecx,DWORD PTR [esp+0x10]
6400ec57:	mov    DWORD PTR fs:0x0,ecx
6400ec5e:	pop    ecx
6400ec5f:	pop    esi
6400ec60:	pop    ebx
6400ec61:	mov    esp,ebp
6400ec63:	pop    ebp
6400ec64:	ret    
6400ec65:	int3   
6400ec66:	int3   
6400ec67:	int3   
6400ec68:	int3   
6400ec69:	int3   
6400ec6a:	int3   
6400ec6b:	int3   
6400ec6c:	int3   
6400ec6d:	int3   
6400ec6e:	int3   
6400ec6f:	int3   
6400ec70:	push   ebp
6400ec71:	mov    ebp,esp
6400ec73:	and    esp,0xfffffff8
6400ec76:	push   0xffffffff
6400ec78:	push   0x640231be
6400ec7d:	mov    eax,fs:0x0
6400ec83:	push   eax
6400ec84:	push   ecx
6400ec85:	push   ebx
6400ec86:	push   esi
6400ec87:	mov    eax,ds:0x6402d09c
6400ec8c:	xor    eax,esp
6400ec8e:	push   eax
6400ec8f:	lea    eax,[esp+0x10]
6400ec93:	mov    fs:0x0,eax
6400ec99:	mov    ebx,0x1
6400ec9e:	test   BYTE PTR ds:0x64031374,bl
6400eca4:	jne    0x6400ed2e
6400ecaa:	or     DWORD PTR ds:0x64031374,ebx
6400ecb0:	push   0x640297b4
6400ecb5:	push   0x11
6400ecb7:	push   0x640297dc
6400ecbc:	mov    DWORD PTR [esp+0x24],0x0
6400ecc4:	call   0x640057b0
6400ecc9:	push   0x640297f0
6400ecce:	push   0x8
6400ecd0:	push   0x640290e0
6400ecd5:	mov    esi,eax
6400ecd7:	call   0x640059b0
6400ecdc:	add    esp,0x18
6400ecdf:	push   eax
6400ece0:	call   DWORD PTR ds:0x64025018
6400ece6:	add    DWORD PTR ds:0x64031270,ebx
6400ecec:	test   eax,eax
6400ecee:	je     0x6400ed15
6400ecf0:	push   esi
6400ecf1:	push   eax
6400ecf2:	call   DWORD PTR ds:0x64025014
6400ecf8:	add    DWORD PTR ds:0x64031274,ebx
6400ecfe:	mov    ds:0x64031370,eax
6400ed03:	mov    ecx,DWORD PTR [esp+0x10]
6400ed07:	mov    DWORD PTR fs:0x0,ecx
6400ed0e:	pop    ecx
6400ed0f:	pop    esi
6400ed10:	pop    ebx
6400ed11:	mov    esp,ebp
6400ed13:	pop    ebp
6400ed14:	ret    
6400ed15:	xor    eax,eax
6400ed17:	mov    ds:0x64031370,eax
6400ed1c:	mov    ecx,DWORD PTR [esp+0x10]
6400ed20:	mov    DWORD PTR fs:0x0,ecx
6400ed27:	pop    ecx
6400ed28:	pop    esi
6400ed29:	pop    ebx
6400ed2a:	mov    esp,ebp
6400ed2c:	pop    ebp
6400ed2d:	ret    
6400ed2e:	mov    eax,ds:0x64031370
6400ed33:	mov    ecx,DWORD PTR [esp+0x10]
6400ed37:	mov    DWORD PTR fs:0x0,ecx
6400ed3e:	pop    ecx
6400ed3f:	pop    esi
6400ed40:	pop    ebx
6400ed41:	mov    esp,ebp
6400ed43:	pop    ebp
6400ed44:	ret    
6400ed45:	int3   
6400ed46:	int3   
6400ed47:	int3   
6400ed48:	int3   
6400ed49:	int3   
6400ed4a:	int3   
6400ed4b:	int3   
6400ed4c:	int3   
6400ed4d:	int3   
6400ed4e:	int3   
6400ed4f:	int3   
6400ed50:	push   ebp
6400ed51:	mov    ebp,esp
6400ed53:	and    esp,0xfffffff8
6400ed56:	push   0xffffffff
6400ed58:	push   0x6402318e
6400ed5d:	mov    eax,fs:0x0
6400ed63:	push   eax
6400ed64:	push   ecx
6400ed65:	push   ebx
6400ed66:	push   esi
6400ed67:	mov    eax,ds:0x6402d09c
6400ed6c:	xor    eax,esp
6400ed6e:	push   eax
6400ed6f:	lea    eax,[esp+0x10]
6400ed73:	mov    fs:0x0,eax
6400ed79:	mov    ebx,0x1
6400ed7e:	test   BYTE PTR ds:0x6403136c,bl
6400ed84:	jne    0x6400ee0e
6400ed8a:	or     DWORD PTR ds:0x6403136c,ebx
6400ed90:	push   0x64029814
6400ed95:	push   0x16
6400ed97:	push   0x64029848
6400ed9c:	mov    DWORD PTR [esp+0x24],0x0
6400eda4:	call   0x640057b0
6400eda9:	push   0x64029860
6400edae:	push   0x8
6400edb0:	push   0x640290e0
6400edb5:	mov    esi,eax
6400edb7:	call   0x640059b0
6400edbc:	add    esp,0x18
6400edbf:	push   eax
6400edc0:	call   DWORD PTR ds:0x64025018
6400edc6:	add    DWORD PTR ds:0x64031270,ebx
6400edcc:	test   eax,eax
6400edce:	je     0x6400edf5
6400edd0:	push   esi
6400edd1:	push   eax
6400edd2:	call   DWORD PTR ds:0x64025014
6400edd8:	add    DWORD PTR ds:0x64031274,ebx
6400edde:	mov    ds:0x64031368,eax
6400ede3:	mov    ecx,DWORD PTR [esp+0x10]
6400ede7:	mov    DWORD PTR fs:0x0,ecx
6400edee:	pop    ecx
6400edef:	pop    esi
6400edf0:	pop    ebx
6400edf1:	mov    esp,ebp
6400edf3:	pop    ebp
6400edf4:	ret    
6400edf5:	xor    eax,eax
6400edf7:	mov    ds:0x64031368,eax
6400edfc:	mov    ecx,DWORD PTR [esp+0x10]
6400ee00:	mov    DWORD PTR fs:0x0,ecx
6400ee07:	pop    ecx
6400ee08:	pop    esi
6400ee09:	pop    ebx
6400ee0a:	mov    esp,ebp
6400ee0c:	pop    ebp
6400ee0d:	ret    
6400ee0e:	mov    eax,ds:0x64031368
6400ee13:	mov    ecx,DWORD PTR [esp+0x10]
6400ee17:	mov    DWORD PTR fs:0x0,ecx
6400ee1e:	pop    ecx
6400ee1f:	pop    esi
6400ee20:	pop    ebx
6400ee21:	mov    esp,ebp
6400ee23:	pop    ebp
6400ee24:	ret    
6400ee25:	int3   
6400ee26:	int3   
6400ee27:	int3   
6400ee28:	int3   
6400ee29:	int3   
6400ee2a:	int3   
6400ee2b:	int3   
6400ee2c:	int3   
6400ee2d:	int3   
6400ee2e:	int3   
6400ee2f:	int3   
6400ee30:	push   ebp
6400ee31:	mov    ebp,esp
6400ee33:	and    esp,0xfffffff8
6400ee36:	push   0xffffffff
6400ee38:	push   0x6402315e
6400ee3d:	mov    eax,fs:0x0
6400ee43:	push   eax
6400ee44:	push   ecx
6400ee45:	push   ebx
6400ee46:	push   esi
6400ee47:	mov    eax,ds:0x6402d09c
6400ee4c:	xor    eax,esp
6400ee4e:	push   eax
6400ee4f:	lea    eax,[esp+0x10]
6400ee53:	mov    fs:0x0,eax
6400ee59:	mov    ebx,0x1
6400ee5e:	test   BYTE PTR ds:0x64031364,bl
6400ee64:	jne    0x6400eeee
6400ee6a:	or     DWORD PTR ds:0x64031364,ebx
6400ee70:	push   0x64029898
6400ee75:	push   0x10
6400ee77:	push   0x640298d0
6400ee7c:	mov    DWORD PTR [esp+0x24],0x0
6400ee84:	call   0x640057b0
6400ee89:	push   0x640298e4
6400ee8e:	push   0x8
6400ee90:	push   0x640290e0
6400ee95:	mov    esi,eax
6400ee97:	call   0x640059b0
6400ee9c:	add    esp,0x18
6400ee9f:	push   eax
6400eea0:	call   DWORD PTR ds:0x64025018
6400eea6:	add    DWORD PTR ds:0x64031270,ebx
6400eeac:	test   eax,eax
6400eeae:	je     0x6400eed5
6400eeb0:	push   esi
6400eeb1:	push   eax
6400eeb2:	call   DWORD PTR ds:0x64025014
6400eeb8:	add    DWORD PTR ds:0x64031274,ebx
6400eebe:	mov    ds:0x64031360,eax
6400eec3:	mov    ecx,DWORD PTR [esp+0x10]
6400eec7:	mov    DWORD PTR fs:0x0,ecx
6400eece:	pop    ecx
6400eecf:	pop    esi
6400eed0:	pop    ebx
6400eed1:	mov    esp,ebp
6400eed3:	pop    ebp
6400eed4:	ret    
6400eed5:	xor    eax,eax
6400eed7:	mov    ds:0x64031360,eax
6400eedc:	mov    ecx,DWORD PTR [esp+0x10]
6400eee0:	mov    DWORD PTR fs:0x0,ecx
6400eee7:	pop    ecx
6400eee8:	pop    esi
6400eee9:	pop    ebx
6400eeea:	mov    esp,ebp
6400eeec:	pop    ebp
6400eeed:	ret    
6400eeee:	mov    eax,ds:0x64031360
6400eef3:	mov    ecx,DWORD PTR [esp+0x10]
6400eef7:	mov    DWORD PTR fs:0x0,ecx
6400eefe:	pop    ecx
6400eeff:	pop    esi
6400ef00:	pop    ebx
6400ef01:	mov    esp,ebp
6400ef03:	pop    ebp
6400ef04:	ret    
6400ef05:	int3   
6400ef06:	int3   
6400ef07:	int3   
6400ef08:	int3   
6400ef09:	int3   
6400ef0a:	int3   
6400ef0b:	int3   
6400ef0c:	int3   
6400ef0d:	int3   
6400ef0e:	int3   
6400ef0f:	int3   
6400ef10:	push   ebp
6400ef11:	mov    ebp,esp
6400ef13:	and    esp,0xfffffff8
6400ef16:	push   0xffffffff
6400ef18:	push   0x6402312e
6400ef1d:	mov    eax,fs:0x0
6400ef23:	push   eax
6400ef24:	push   ecx
6400ef25:	push   ebx
6400ef26:	push   esi
6400ef27:	mov    eax,ds:0x6402d09c
6400ef2c:	xor    eax,esp
6400ef2e:	push   eax
6400ef2f:	lea    eax,[esp+0x10]
6400ef33:	mov    fs:0x0,eax
6400ef39:	mov    ebx,0x1
6400ef3e:	test   BYTE PTR ds:0x6403135c,bl
6400ef44:	jne    0x6400efce
6400ef4a:	or     DWORD PTR ds:0x6403135c,ebx
6400ef50:	push   0x6402991c
6400ef55:	push   0xd
6400ef57:	push   0x64029948
6400ef5c:	mov    DWORD PTR [esp+0x24],0x0
6400ef64:	call   0x640057b0
6400ef69:	push   0x64029958
6400ef6e:	push   0x7
6400ef70:	push   0x6402998c
6400ef75:	mov    esi,eax
6400ef77:	call   0x640059b0
6400ef7c:	add    esp,0x18
6400ef7f:	push   eax
6400ef80:	call   DWORD PTR ds:0x64025018
6400ef86:	add    DWORD PTR ds:0x64031270,ebx
6400ef8c:	test   eax,eax
6400ef8e:	je     0x6400efb5
6400ef90:	push   esi
6400ef91:	push   eax
6400ef92:	call   DWORD PTR ds:0x64025014
6400ef98:	add    DWORD PTR ds:0x64031274,ebx
6400ef9e:	mov    ds:0x64031358,eax
6400efa3:	mov    ecx,DWORD PTR [esp+0x10]
6400efa7:	mov    DWORD PTR fs:0x0,ecx
6400efae:	pop    ecx
6400efaf:	pop    esi
6400efb0:	pop    ebx
6400efb1:	mov    esp,ebp
6400efb3:	pop    ebp
6400efb4:	ret    
6400efb5:	xor    eax,eax
6400efb7:	mov    ds:0x64031358,eax
6400efbc:	mov    ecx,DWORD PTR [esp+0x10]
6400efc0:	mov    DWORD PTR fs:0x0,ecx
6400efc7:	pop    ecx
6400efc8:	pop    esi
6400efc9:	pop    ebx
6400efca:	mov    esp,ebp
6400efcc:	pop    ebp
6400efcd:	ret    
6400efce:	mov    eax,ds:0x64031358
6400efd3:	mov    ecx,DWORD PTR [esp+0x10]
6400efd7:	mov    DWORD PTR fs:0x0,ecx
6400efde:	pop    ecx
6400efdf:	pop    esi
6400efe0:	pop    ebx
6400efe1:	mov    esp,ebp
6400efe3:	pop    ebp
6400efe4:	ret    
6400efe5:	int3   
6400efe6:	int3   
6400efe7:	int3   
6400efe8:	int3   
6400efe9:	int3   
6400efea:	int3   
6400efeb:	int3   
6400efec:	int3   
6400efed:	int3   
6400efee:	int3   
6400efef:	int3   
6400eff0:	push   esi
6400eff1:	push   edi
6400eff2:	mov    edi,DWORD PTR [esp+0xc]
6400eff6:	mov    esi,DWORD PTR [edi+0xc]
6400eff9:	cmp    esi,DWORD PTR [edi+0x14]
6400effc:	je     0x6400f014
6400effe:	mov    edi,edi
6400f000:	mov    eax,DWORD PTR [esi-0x4]
6400f003:	mov    ecx,DWORD PTR [esi-0x8]
6400f006:	push   eax
6400f007:	call   ecx
6400f009:	add    esi,0xfffffff8
6400f00c:	add    esp,0x4
6400f00f:	cmp    esi,DWORD PTR [edi+0x14]
6400f012:	jne    0x6400f000
6400f014:	mov    edx,DWORD PTR [edi+0x14]
6400f017:	push   edx
6400f018:	call   0x64013d06
6400f01d:	mov    edi,DWORD PTR [edi+0x8]
6400f020:	mov    esi,DWORD PTR [edi]
6400f022:	push   edi
6400f023:	call   0x64013d06
6400f028:	add    esp,0x8
6400f02b:	test   esi,esi
6400f02d:	je     0x6400f041
6400f02f:	nop
6400f030:	mov    eax,esi
6400f032:	mov    esi,DWORD PTR [esi]
6400f034:	push   eax
6400f035:	call   0x64013d06
6400f03a:	add    esp,0x4
6400f03d:	test   esi,esi
6400f03f:	jne    0x6400f030
6400f041:	pop    edi
6400f042:	pop    esi
6400f043:	ret    
6400f044:	int3   
6400f045:	int3   
6400f046:	int3   
6400f047:	int3   
6400f048:	int3   
6400f049:	int3   
6400f04a:	int3   
6400f04b:	int3   
6400f04c:	int3   
6400f04d:	int3   
6400f04e:	int3   
6400f04f:	int3   
6400f050:	push   esi
6400f051:	mov    esi,DWORD PTR [esp+0x8]
6400f055:	push   edi
6400f056:	mov    edi,DWORD PTR [esp+0x10]
6400f05a:	lea    eax,[edi+0x4]
6400f05d:	push   eax
6400f05e:	mov    DWORD PTR [esi+0x18],edi
6400f061:	call   0x64013de3
6400f066:	xor    ecx,ecx
6400f068:	add    esp,0x4
6400f06b:	cmp    eax,ecx
6400f06d:	je     0x6400f08a
6400f06f:	mov    DWORD PTR [esi+0x8],eax
6400f072:	mov    DWORD PTR [esi],edi
6400f074:	lea    edx,[eax+0x4]
6400f077:	mov    DWORD PTR [esi+0x4],edx
6400f07a:	mov    DWORD PTR [eax],ecx
6400f07c:	pop    edi
6400f07d:	mov    DWORD PTR [esi+0xc],ecx
6400f080:	mov    DWORD PTR [esi+0x10],ecx
6400f083:	mov    DWORD PTR [esi+0x14],ecx
6400f086:	mov    al,0x1
6400f088:	pop    esi
6400f089:	ret    
6400f08a:	pop    edi
6400f08b:	xor    al,al
6400f08d:	pop    esi
6400f08e:	ret    
6400f08f:	int3   
6400f090:	mov    ecx,DWORD PTR [ebx]
6400f092:	push   esi
6400f093:	mov    esi,eax
6400f095:	add    esi,0x3
6400f098:	and    esi,0xfffffffc
6400f09b:	cmp    ecx,esi
6400f09d:	jae    0x6400f0d3
6400f09f:	push   edi
6400f0a0:	mov    edi,DWORD PTR [ebx+0x18]
6400f0a3:	cmp    edi,esi
6400f0a5:	jae    0x6400f0ad
6400f0a7:	add    edi,edi
6400f0a9:	cmp    edi,esi
6400f0ab:	jb     0x6400f0a7
6400f0ad:	lea    eax,[edi+0x4]
6400f0b0:	push   eax
6400f0b1:	call   0x64013de3
6400f0b6:	mov    edx,DWORD PTR [ebx+0x8]
6400f0b9:	mov    DWORD PTR [eax],edx
6400f0bb:	add    esp,0x4
6400f0be:	sub    edi,esi
6400f0c0:	lea    ecx,[eax+0x4]
6400f0c3:	mov    DWORD PTR [ebx+0x8],eax
6400f0c6:	lea    eax,[ecx+esi*1]
6400f0c9:	mov    DWORD PTR [ebx],edi
6400f0cb:	pop    edi
6400f0cc:	mov    DWORD PTR [ebx+0x4],eax
6400f0cf:	mov    eax,ecx
6400f0d1:	pop    esi
6400f0d2:	ret    
6400f0d3:	mov    eax,DWORD PTR [ebx+0x4]
6400f0d6:	sub    ecx,esi
6400f0d8:	mov    DWORD PTR [ebx],ecx
6400f0da:	lea    ecx,[eax+esi*1]
6400f0dd:	mov    DWORD PTR [ebx+0x4],ecx
6400f0e0:	pop    esi
6400f0e1:	ret    
6400f0e2:	int3   
6400f0e3:	int3   
6400f0e4:	int3   
6400f0e5:	int3   
6400f0e6:	int3   
6400f0e7:	int3   
6400f0e8:	int3   
6400f0e9:	int3   
6400f0ea:	int3   
6400f0eb:	int3   
6400f0ec:	int3   
6400f0ed:	int3   
6400f0ee:	int3   
6400f0ef:	int3   
6400f0f0:	push   ebx
6400f0f1:	mov    DWORD PTR [esi],0x6
6400f0f7:	mov    DWORD PTR [esi+0x8],0x0
6400f0fe:	mov    ebx,DWORD PTR [ecx]
6400f100:	shl    eax,0x4
6400f103:	call   0x6400f090
6400f108:	mov    DWORD PTR [esi+0xc],eax
6400f10b:	neg    eax
6400f10d:	sbb    eax,eax
6400f10f:	neg    eax
6400f111:	sub    eax,0x1
6400f114:	pop    ebx
6400f115:	ret    
6400f116:	int3   
6400f117:	int3   
6400f118:	int3   
6400f119:	int3   
6400f11a:	int3   
6400f11b:	int3   
6400f11c:	int3   
6400f11d:	int3   
6400f11e:	int3   
6400f11f:	int3   
6400f120:	push   ebx
6400f121:	mov    DWORD PTR [esi],0x7
6400f127:	mov    DWORD PTR [esi+0x8],0x0
6400f12e:	mov    ebx,DWORD PTR [ecx]
6400f130:	shl    eax,0x5
6400f133:	call   0x6400f090
6400f138:	mov    DWORD PTR [esi+0xc],eax
6400f13b:	neg    eax
6400f13d:	sbb    eax,eax
6400f13f:	neg    eax
6400f141:	sub    eax,0x1
6400f144:	pop    ebx
6400f145:	ret    
6400f146:	int3   
6400f147:	int3   
6400f148:	int3   
6400f149:	int3   
6400f14a:	int3   
6400f14b:	int3   
6400f14c:	int3   
6400f14d:	int3   
6400f14e:	int3   
6400f14f:	int3   
6400f150:	sub    esp,0x44
6400f153:	mov    eax,DWORD PTR [esp+0x54]
6400f157:	mov    edx,DWORD PTR [esp+0x4c]
6400f15b:	mov    ecx,DWORD PTR [esp+0x48]
6400f15f:	mov    eax,DWORD PTR [eax]
6400f161:	push   ebx
6400f162:	push   ebp
6400f163:	push   esi
6400f164:	mov    esi,DWORD PTR [esp+0x5c]
6400f168:	add    eax,edx
6400f16a:	add    edx,esi
6400f16c:	mov    esi,DWORD PTR [ecx+0xc]
6400f16f:	mov    DWORD PTR [esp+0x18],esi
6400f173:	mov    esi,DWORD PTR [ecx+0x8]
6400f176:	mov    ecx,DWORD PTR [ecx+0x10]
6400f179:	push   edi
6400f17a:	xor    edi,edi
6400f17c:	cmp    eax,edx
6400f17e:	mov    DWORD PTR [esp+0x60],ecx
6400f182:	mov    DWORD PTR [esp+0x14],eax
6400f186:	mov    DWORD PTR [esp+0x20],edx
6400f18a:	mov    DWORD PTR [esp+0x18],esi
6400f18e:	lea    ecx,[edi+0x20]
6400f191:	je     0x6400fa11
6400f197:	mov    ebp,DWORD PTR [esp+0x38]
6400f19b:	jmp    0x6400f1a0
6400f19d:	lea    ecx,[ecx+0x0]
6400f1a0:	mov    eax,DWORD PTR [esp+0x18]
6400f1a4:	test   eax,eax
6400f1a6:	mov    ebx,DWORD PTR [esp+0x14]
6400f1aa:	jne    0x6400f2bf
6400f1b0:	mov    al,BYTE PTR [ebx]
6400f1b2:	cmp    al,0x7f
6400f1b4:	ja     0x6400f1ca
6400f1b6:	movzx  eax,al
6400f1b9:	cdq    
6400f1ba:	mov    ebx,0x2
6400f1bf:	mov    ebp,eax
6400f1c1:	mov    DWORD PTR [esp+0x3c],edx
6400f1c5:	jmp    0x6400f89c
6400f1ca:	cmp    al,0xe0
6400f1cc:	jb     0x6400f1f2
6400f1ce:	cmp    al,0xff
6400f1d0:	ja     0x6400f1f2
6400f1d2:	test   al,al
6400f1d4:	movsx  eax,al
6400f1d7:	cdq    
6400f1d8:	mov    ebp,eax
6400f1da:	mov    DWORD PTR [esp+0x3c],edx
6400f1de:	mov    DWORD PTR [esp+0x38],ebp
6400f1e2:	jl     0x6400f4fb
6400f1e8:	mov    ebx,0x2
6400f1ed:	jmp    0x6400f8a0
6400f1f2:	cmp    al,0xc0
6400f1f4:	jb     0x6400f28e
6400f1fa:	cmp    al,0xdf
6400f1fc:	ja     0x6400f28e
6400f202:	movzx  eax,al
6400f205:	lea    ecx,[eax-0xc0]
6400f20b:	cmp    ecx,0x1f
6400f20e:	ja     0x6400fa15
6400f214:	movzx  ecx,BYTE PTR [ecx+0x6400fa60]
6400f21b:	jmp    DWORD PTR [ecx*4+0x6400fa48]
6400f222:	xor    ebx,ebx
6400f224:	jmp    0x6400f8a0
6400f229:	mov    BYTE PTR [esp+0x38],0x0
6400f22e:	mov    ebp,DWORD PTR [esp+0x38]
6400f232:	mov    ebx,0x1
6400f237:	jmp    0x6400f8a0
6400f23c:	mov    ebx,0x1
6400f241:	mov    BYTE PTR [esp+0x38],bl
6400f245:	mov    ebp,DWORD PTR [esp+0x38]
6400f249:	jmp    0x6400f8a0
6400f24e:	mov    ecx,eax
6400f250:	and    ecx,0x3
6400f253:	mov    esi,0x1
6400f258:	shl    esi,cl
6400f25a:	and    eax,0x1f
6400f25d:	add    ebx,0x1
6400f260:	mov    DWORD PTR [esp+0x18],eax
6400f264:	mov    DWORD PTR [esp+0x1c],esi
6400f268:	mov    DWORD PTR [esp+0x14],ebx
6400f26c:	jmp    0x6400f2c3
6400f26e:	mov    ecx,eax
6400f270:	and    ecx,0x1
6400f273:	mov    esi,0x2
6400f278:	shl    esi,cl
6400f27a:	and    eax,0x1f
6400f27d:	add    ebx,0x1
6400f280:	mov    DWORD PTR [esp+0x18],eax
6400f284:	mov    DWORD PTR [esp+0x1c],esi
6400f288:	mov    DWORD PTR [esp+0x14],ebx
6400f28c:	jmp    0x6400f2c3
6400f28e:	cmp    al,0xa0
6400f290:	jb     0x6400f7f2
6400f296:	cmp    al,0xbf
6400f298:	ja     0x6400f7f2
6400f29e:	and    eax,0x1f
6400f2a1:	mov    esi,eax
6400f2a3:	mov    DWORD PTR [esp+0x1c],esi
6400f2a7:	je     0x6400f59d
6400f2ad:	mov    eax,0x20
6400f2b2:	add    ebx,0x1
6400f2b5:	mov    DWORD PTR [esp+0x18],eax
6400f2b9:	mov    DWORD PTR [esp+0x14],ebx
6400f2bd:	jmp    0x6400f2c3
6400f2bf:	mov    esi,DWORD PTR [esp+0x1c]
6400f2c3:	mov    ecx,edx
6400f2c5:	sub    ecx,ebx
6400f2c7:	cmp    ecx,esi
6400f2c9:	jb     0x6400fa11
6400f2cf:	mov    edi,ebx
6400f2d1:	add    eax,0xfffffff6
6400f2d4:	cmp    eax,0x16
6400f2d7:	lea    ebx,[ebx+esi*1-0x1]
6400f2db:	mov    DWORD PTR [esp+0x14],ebx
6400f2df:	ja     0x6400fa15
6400f2e5:	jmp    DWORD PTR [eax*4+0x6400fa80]
6400f2ec:	xor    eax,eax
6400f2ee:	mov    ah,BYTE PTR [edi]
6400f2f0:	mov    al,BYTE PTR [edi+0x1]
6400f2f3:	mov    esi,eax
6400f2f5:	test   esi,esi
6400f2f7:	jmp    0x6400f2a3
6400f2f9:	movzx  eax,BYTE PTR [edi+0x2]
6400f2fd:	xor    ecx,ecx
6400f2ff:	mov    ch,BYTE PTR [edi]
6400f301:	mov    cl,BYTE PTR [edi+0x1]
6400f304:	shl    ecx,0x8
6400f307:	or     ecx,eax
6400f309:	movzx  eax,BYTE PTR [edi+0x3]
6400f30d:	shl    ecx,0x8
6400f310:	or     ecx,eax
6400f312:	mov    esi,ecx
6400f314:	jmp    0x6400f2a3
6400f316:	movzx  edx,BYTE PTR [edi+0x2]
6400f31a:	movzx  eax,BYTE PTR [edi+0x3]
6400f31e:	xor    ecx,ecx
6400f320:	mov    ch,BYTE PTR [edi]
6400f322:	mov    ebx,0x4
6400f327:	mov    cl,BYTE PTR [edi+0x1]
6400f32a:	shl    ecx,0x8
6400f32d:	or     ecx,edx
6400f32f:	shl    ecx,0x8
6400f332:	or     ecx,eax
6400f334:	mov    DWORD PTR [esp+0x24],ecx
6400f338:	fld    DWORD PTR [esp+0x24]
6400f33c:	fstp   QWORD PTR [esp+0x38]
6400f340:	mov    ebp,DWORD PTR [esp+0x38]
6400f344:	jmp    0x6400f8a0
6400f349:	movzx  eax,BYTE PTR [edi]
6400f34c:	cdq    
6400f34d:	shld   edx,eax,0x8
6400f351:	shl    eax,0x8
6400f354:	mov    ecx,eax
6400f356:	movzx  eax,BYTE PTR [edi+0x1]
6400f35a:	mov    esi,edx
6400f35c:	cdq    
6400f35d:	or     ecx,eax
6400f35f:	movzx  eax,BYTE PTR [edi+0x2]
6400f363:	or     esi,edx
6400f365:	shld   esi,ecx,0x8
6400f369:	shl    ecx,0x8
6400f36c:	cdq    
6400f36d:	or     ecx,eax
6400f36f:	movzx  eax,BYTE PTR [edi+0x3]
6400f373:	or     esi,edx
6400f375:	shld   esi,ecx,0x8
6400f379:	shl    ecx,0x8
6400f37c:	cdq    
6400f37d:	or     ecx,eax
6400f37f:	movzx  eax,BYTE PTR [edi+0x4]
6400f383:	or     esi,edx
6400f385:	shld   esi,ecx,0x8
6400f389:	shl    ecx,0x8
6400f38c:	cdq    
6400f38d:	or     ecx,eax
6400f38f:	movzx  eax,BYTE PTR [edi+0x5]
6400f393:	or     esi,edx
6400f395:	shld   esi,ecx,0x8
6400f399:	shl    ecx,0x8
6400f39c:	cdq    
6400f39d:	or     ecx,eax
6400f39f:	movzx  eax,BYTE PTR [edi+0x6]
6400f3a3:	or     esi,edx
6400f3a5:	shld   esi,ecx,0x8
6400f3a9:	shl    ecx,0x8
6400f3ac:	cdq    
6400f3ad:	or     ecx,eax
6400f3af:	movzx  eax,BYTE PTR [edi+0x7]
6400f3b3:	or     esi,edx
6400f3b5:	shld   esi,ecx,0x8
6400f3b9:	cdq    
6400f3ba:	shl    ecx,0x8
6400f3bd:	or     ecx,eax
6400f3bf:	or     esi,edx
6400f3c1:	mov    DWORD PTR [esp+0x28],ecx
6400f3c5:	mov    DWORD PTR [esp+0x2c],esi
6400f3c9:	mov    ebx,0x4
6400f3ce:	fld    QWORD PTR [esp+0x28]
6400f3d2:	fstp   QWORD PTR [esp+0x38]
6400f3d6:	mov    ebp,DWORD PTR [esp+0x38]
6400f3da:	jmp    0x6400f8a0
6400f3df:	movzx  eax,BYTE PTR [edi]
6400f3e2:	cdq    
6400f3e3:	mov    ebx,0x2
6400f3e8:	mov    ebp,eax
6400f3ea:	mov    DWORD PTR [esp+0x3c],edx
6400f3ee:	jmp    0x6400f89c
6400f3f3:	xor    edx,edx
6400f3f5:	mov    dh,BYTE PTR [edi]
6400f3f7:	mov    ebx,0x2
6400f3fc:	mov    dl,BYTE PTR [edi+0x1]
6400f3ff:	movzx  eax,dx
6400f402:	cdq    
6400f403:	mov    ebp,eax
6400f405:	mov    DWORD PTR [esp+0x3c],edx
6400f409:	jmp    0x6400f89c
6400f40e:	movzx  ecx,BYTE PTR [edi+0x2]
6400f412:	movzx  edx,BYTE PTR [edi+0x3]
6400f416:	xor    eax,eax
6400f418:	mov    ah,BYTE PTR [edi]
6400f41a:	mov    ebx,0x2
6400f41f:	mov    DWORD PTR [esp+0x3c],0x0
6400f427:	mov    al,BYTE PTR [edi+0x1]
6400f42a:	shl    eax,0x8
6400f42d:	or     eax,ecx
6400f42f:	shl    eax,0x8
6400f432:	or     eax,edx
6400f434:	mov    ebp,eax
6400f436:	jmp    0x6400f89c
6400f43b:	movzx  eax,BYTE PTR [edi]
6400f43e:	cdq    
6400f43f:	shld   edx,eax,0x8
6400f443:	shl    eax,0x8
6400f446:	mov    ecx,eax
6400f448:	movzx  eax,BYTE PTR [edi+0x1]
6400f44c:	mov    esi,edx
6400f44e:	cdq    
6400f44f:	or     ecx,eax
6400f451:	movzx  eax,BYTE PTR [edi+0x2]
6400f455:	or     esi,edx
6400f457:	shld   esi,ecx,0x8
6400f45b:	shl    ecx,0x8
6400f45e:	cdq    
6400f45f:	or     ecx,eax
6400f461:	movzx  eax,BYTE PTR [edi+0x3]
6400f465:	or     esi,edx
6400f467:	shld   esi,ecx,0x8
6400f46b:	shl    ecx,0x8
6400f46e:	cdq    
6400f46f:	or     ecx,eax
6400f471:	movzx  eax,BYTE PTR [edi+0x4]
6400f475:	or     esi,edx
6400f477:	shld   esi,ecx,0x8
6400f47b:	shl    ecx,0x8
6400f47e:	cdq    
6400f47f:	or     ecx,eax
6400f481:	movzx  eax,BYTE PTR [edi+0x5]
6400f485:	or     esi,edx
6400f487:	shld   esi,ecx,0x8
6400f48b:	shl    ecx,0x8
6400f48e:	cdq    
6400f48f:	or     ecx,eax
6400f491:	movzx  eax,BYTE PTR [edi+0x6]
6400f495:	or     esi,edx
6400f497:	shld   esi,ecx,0x8
6400f49b:	cdq    
6400f49c:	shl    ecx,0x8
6400f49f:	or     ecx,eax
6400f4a1:	movzx  eax,BYTE PTR [edi+0x7]
6400f4a5:	or     esi,edx
6400f4a7:	mov    ebp,ecx
6400f4a9:	mov    ecx,esi
6400f4ab:	shld   ecx,ebp,0x8
6400f4af:	cdq    
6400f4b0:	shl    ebp,0x8
6400f4b3:	or     ebp,eax
6400f4b5:	mov    ebx,0x2
6400f4ba:	or     ecx,edx
6400f4bc:	jmp    0x6400f898
6400f4c1:	mov    al,BYTE PTR [edi]
6400f4c3:	jmp    0x6400f1d2
6400f4c8:	xor    edx,edx
6400f4ca:	mov    dh,BYTE PTR [edi]
6400f4cc:	mov    dl,BYTE PTR [edi+0x1]
6400f4cf:	movzx  eax,dx
6400f4d2:	test   ax,ax
6400f4d5:	movsx  eax,ax
6400f4d8:	jmp    0x6400f1d7
6400f4dd:	movzx  ecx,BYTE PTR [edi+0x2]
6400f4e1:	movzx  edx,BYTE PTR [edi+0x3]
6400f4e5:	xor    eax,eax
6400f4e7:	mov    ah,BYTE PTR [edi]
6400f4e9:	mov    al,BYTE PTR [edi+0x1]
6400f4ec:	shl    eax,0x8
6400f4ef:	or     eax,ecx
6400f4f1:	shl    eax,0x8
6400f4f4:	or     eax,edx
6400f4f6:	jmp    0x6400f1d7
6400f4fb:	mov    ebx,0x3
6400f500:	jmp    0x6400f8a0
6400f505:	movzx  eax,BYTE PTR [edi]
6400f508:	cdq    
6400f509:	shld   edx,eax,0x8
6400f50d:	shl    eax,0x8
6400f510:	mov    ecx,eax
6400f512:	movzx  eax,BYTE PTR [edi+0x1]
6400f516:	mov    esi,edx
6400f518:	cdq    
6400f519:	or     ecx,eax
6400f51b:	movzx  eax,BYTE PTR [edi+0x2]
6400f51f:	or     esi,edx
6400f521:	shld   esi,ecx,0x8
6400f525:	shl    ecx,0x8
6400f528:	cdq    
6400f529:	or     ecx,eax
6400f52b:	movzx  eax,BYTE PTR [edi+0x3]
6400f52f:	or     esi,edx
6400f531:	shld   esi,ecx,0x8
6400f535:	shl    ecx,0x8
6400f538:	cdq    
6400f539:	or     ecx,eax
6400f53b:	movzx  eax,BYTE PTR [edi+0x4]
6400f53f:	or     esi,edx
6400f541:	shld   esi,ecx,0x8
6400f545:	shl    ecx,0x8
6400f548:	cdq    
6400f549:	or     ecx,eax
6400f54b:	movzx  eax,BYTE PTR [edi+0x5]
6400f54f:	or     esi,edx
6400f551:	shld   esi,ecx,0x8
6400f555:	shl    ecx,0x8
6400f558:	cdq    
6400f559:	or     ecx,eax
6400f55b:	movzx  eax,BYTE PTR [edi+0x6]
6400f55f:	or     esi,edx
6400f561:	shld   esi,ecx,0x8
6400f565:	cdq    
6400f566:	shl    ecx,0x8
6400f569:	or     ecx,eax
6400f56b:	movzx  eax,BYTE PTR [edi+0x7]
6400f56f:	or     esi,edx
6400f571:	mov    ebp,ecx
6400f573:	mov    ecx,esi
6400f575:	shld   ecx,ebp,0x8
6400f579:	cdq    
6400f57a:	shl    ebp,0x8
6400f57d:	or     ebp,eax
6400f57f:	or     ecx,edx
6400f581:	jl     0x6400f593
6400f583:	jg     0x6400f589
6400f585:	test   ebp,ebp
6400f587:	jb     0x6400f593
6400f589:	mov    ebx,0x2
6400f58e:	jmp    0x6400f898
6400f593:	mov    ebx,0x3
6400f598:	jmp    0x6400f898
6400f59d:	mov    edx,DWORD PTR [esp+0x58]
6400f5a1:	mov    ebx,0x5
6400f5a6:	mov    DWORD PTR [esp+0x3c],edi
6400f5aa:	mov    ebp,esi
6400f5ac:	mov    BYTE PTR [edx+0x4],0x1
6400f5b0:	jmp    0x6400f89c
6400f5b5:	cmp    DWORD PTR [esp+0x60],0x20
6400f5ba:	jae    0x6400fa15
6400f5c0:	mov    eax,DWORD PTR [esp+0x60]
6400f5c4:	mov    ecx,DWORD PTR [esp+0x58]
6400f5c8:	lea    eax,[eax+eax*4]
6400f5cb:	lea    esi,[ecx+eax*8+0x18]
6400f5cf:	xor    eax,eax
6400f5d1:	mov    ah,BYTE PTR [edi]
6400f5d3:	mov    al,BYTE PTR [edi+0x1]
6400f5d6:	mov    DWORD PTR [esi],0x6
6400f5dc:	mov    DWORD PTR [esi+0x8],0x0
6400f5e3:	mov    ebx,DWORD PTR [ecx]
6400f5e5:	shl    eax,0x4
6400f5e8:	call   0x6400f090
6400f5ed:	test   eax,eax
6400f5ef:	mov    DWORD PTR [esi+0xc],eax
6400f5f2:	je     0x6400fa15
6400f5f8:	xor    ecx,ecx
6400f5fa:	mov    ch,BYTE PTR [edi]
6400f5fc:	mov    cl,BYTE PTR [edi+0x1]
6400f5ff:	test   cx,cx
6400f602:	jne    0x6400f619
6400f604:	mov    edx,DWORD PTR [esi+0x4]
6400f607:	mov    ebx,DWORD PTR [esi]
6400f609:	mov    ebp,DWORD PTR [esi+0x8]
6400f60c:	mov    DWORD PTR [esp+0x34],edx
6400f610:	mov    DWORD PTR [esp+0x3c],eax
6400f614:	jmp    0x6400f89c
6400f619:	xor    ecx,ecx
6400f61b:	add    DWORD PTR [esp+0x60],0x1
6400f620:	mov    DWORD PTR [esi+0x14],0x0
6400f627:	mov    ch,BYTE PTR [edi]
6400f629:	mov    cl,BYTE PTR [edi+0x1]
6400f62c:	mov    DWORD PTR [esi+0x10],ecx
6400f62f:	jmp    0x6400f9ca
6400f634:	cmp    DWORD PTR [esp+0x60],0x20
6400f639:	jae    0x6400fa15
6400f63f:	mov    eax,DWORD PTR [esp+0x60]
6400f643:	mov    ecx,DWORD PTR [esp+0x58]
6400f647:	lea    edx,[eax+eax*4]
6400f64a:	xor    eax,eax
6400f64c:	mov    ah,BYTE PTR [edi]
6400f64e:	lea    esi,[ecx+edx*8+0x18]
6400f652:	movzx  edx,BYTE PTR [edi+0x2]
6400f656:	mov    al,BYTE PTR [edi+0x1]
6400f659:	shl    eax,0x8
6400f65c:	or     eax,edx
6400f65e:	movzx  edx,BYTE PTR [edi+0x3]
6400f662:	shl    eax,0x8
6400f665:	or     eax,edx
6400f667:	mov    DWORD PTR [esi],0x6
6400f66d:	mov    DWORD PTR [esi+0x8],0x0
6400f674:	mov    ebx,DWORD PTR [ecx]
6400f676:	shl    eax,0x4
6400f679:	call   0x6400f090
6400f67e:	test   eax,eax
6400f680:	mov    DWORD PTR [esi+0xc],eax
6400f683:	je     0x6400fa15
6400f689:	movzx  ecx,BYTE PTR [edi+0x2]
6400f68d:	movzx  edx,BYTE PTR [edi+0x3]
6400f691:	xor    eax,eax
6400f693:	mov    ah,BYTE PTR [edi]
6400f695:	mov    al,BYTE PTR [edi+0x1]
6400f698:	shl    eax,0x8
6400f69b:	or     eax,ecx
6400f69d:	shl    eax,0x8
6400f6a0:	or     eax,edx
6400f6a2:	je     0x6400f889
6400f6a8:	xor    edx,edx
6400f6aa:	mov    DWORD PTR [esi+0x14],0x0
6400f6b1:	mov    dh,BYTE PTR [edi]
6400f6b3:	movzx  eax,BYTE PTR [edi+0x2]
6400f6b7:	movzx  ecx,BYTE PTR [edi+0x3]
6400f6bb:	mov    dl,BYTE PTR [edi+0x1]
6400f6be:	shl    edx,0x8
6400f6c1:	or     edx,eax
6400f6c3:	shl    edx,0x8
6400f6c6:	or     edx,ecx
6400f6c8:	add    DWORD PTR [esp+0x60],0x1
6400f6cd:	jmp    0x6400f9c7
6400f6d2:	cmp    DWORD PTR [esp+0x60],0x20
6400f6d7:	jae    0x6400fa15
6400f6dd:	mov    eax,DWORD PTR [esp+0x60]
6400f6e1:	mov    ecx,DWORD PTR [esp+0x58]
6400f6e5:	lea    edx,[eax+eax*4]
6400f6e8:	xor    eax,eax
6400f6ea:	mov    ah,BYTE PTR [edi]
6400f6ec:	lea    esi,[ecx+edx*8+0x18]
6400f6f0:	mov    al,BYTE PTR [edi+0x1]
6400f6f3:	mov    DWORD PTR [esi],0x7
6400f6f9:	mov    DWORD PTR [esi+0x8],0x0
6400f700:	mov    ebx,DWORD PTR [ecx]
6400f702:	shl    eax,0x5
6400f705:	call   0x6400f090
6400f70a:	test   eax,eax
6400f70c:	mov    DWORD PTR [esi+0xc],eax
6400f70f:	je     0x6400fa15
6400f715:	xor    eax,eax
6400f717:	mov    ah,BYTE PTR [edi]
6400f719:	mov    al,BYTE PTR [edi+0x1]
6400f71c:	test   ax,ax
6400f71f:	jne    0x6400f739
6400f721:	mov    ecx,DWORD PTR [esi+0x4]
6400f724:	mov    edx,DWORD PTR [esi+0xc]
6400f727:	mov    ebx,DWORD PTR [esi]
6400f729:	mov    ebp,DWORD PTR [esi+0x8]
6400f72c:	mov    DWORD PTR [esp+0x34],ecx
6400f730:	mov    DWORD PTR [esp+0x3c],edx
6400f734:	jmp    0x6400f89c
6400f739:	xor    ecx,ecx
6400f73b:	mov    eax,0x1
6400f740:	add    DWORD PTR [esp+0x60],eax
6400f744:	mov    DWORD PTR [esi+0x14],eax
6400f747:	mov    ch,BYTE PTR [edi]
6400f749:	mov    cl,BYTE PTR [edi+0x1]
6400f74c:	mov    DWORD PTR [esi+0x10],ecx
6400f74f:	jmp    0x6400f9ca
6400f754:	cmp    DWORD PTR [esp+0x60],0x20
6400f759:	jae    0x6400fa15
6400f75f:	mov    eax,DWORD PTR [esp+0x60]
6400f763:	mov    ecx,DWORD PTR [esp+0x58]
6400f767:	lea    edx,[eax+eax*4]
6400f76a:	xor    eax,eax
6400f76c:	mov    ah,BYTE PTR [edi]
6400f76e:	lea    esi,[ecx+edx*8+0x18]
6400f772:	movzx  edx,BYTE PTR [edi+0x2]
6400f776:	mov    al,BYTE PTR [edi+0x1]
6400f779:	shl    eax,0x8
6400f77c:	or     eax,edx
6400f77e:	movzx  edx,BYTE PTR [edi+0x3]
6400f782:	shl    eax,0x8
6400f785:	or     eax,edx
6400f787:	mov    DWORD PTR [esi],0x7
6400f78d:	mov    DWORD PTR [esi+0x8],0x0
6400f794:	mov    ebx,DWORD PTR [ecx]
6400f796:	shl    eax,0x5
6400f799:	call   0x6400f090
6400f79e:	test   eax,eax
6400f7a0:	mov    DWORD PTR [esi+0xc],eax
6400f7a3:	je     0x6400fa15
6400f7a9:	movzx  ecx,BYTE PTR [edi+0x2]
6400f7ad:	movzx  edx,BYTE PTR [edi+0x3]
6400f7b1:	xor    eax,eax
6400f7b3:	mov    ah,BYTE PTR [edi]
6400f7b5:	mov    al,BYTE PTR [edi+0x1]
6400f7b8:	shl    eax,0x8
6400f7bb:	or     eax,ecx
6400f7bd:	shl    eax,0x8
6400f7c0:	or     eax,edx
6400f7c2:	je     0x6400f889
6400f7c8:	xor    edx,edx
6400f7ca:	mov    eax,0x1
6400f7cf:	mov    DWORD PTR [esi+0x14],eax
6400f7d2:	mov    dh,BYTE PTR [edi]
6400f7d4:	movzx  ecx,BYTE PTR [edi+0x2]
6400f7d8:	mov    dl,BYTE PTR [edi+0x1]
6400f7db:	shl    edx,0x8
6400f7de:	or     edx,ecx
6400f7e0:	movzx  ecx,BYTE PTR [edi+0x3]
6400f7e4:	shl    edx,0x8
6400f7e7:	or     edx,ecx
6400f7e9:	add    DWORD PTR [esp+0x60],eax
6400f7ed:	jmp    0x6400f9c7
6400f7f2:	cmp    al,0x90
6400f7f4:	jb     0x6400f843
6400f7f6:	cmp    al,0x9f
6400f7f8:	ja     0x6400f843
6400f7fa:	cmp    DWORD PTR [esp+0x60],ecx
6400f7fe:	jae    0x6400fa15
6400f804:	mov    ecx,DWORD PTR [esp+0x60]
6400f808:	lea    edx,[ecx+ecx*4]
6400f80b:	mov    ecx,DWORD PTR [esp+0x58]
6400f80f:	lea    esi,[ecx+edx*8+0x18]
6400f813:	and    eax,0xf
6400f816:	call   0x6400f0f0
6400f81b:	test   eax,eax
6400f81d:	jl     0x6400fa15
6400f823:	mov    eax,DWORD PTR [esp+0x14]
6400f827:	test   BYTE PTR [eax],0xf
6400f82a:	je     0x6400f889
6400f82c:	mov    DWORD PTR [esi+0x14],0x0
6400f833:	movzx  edx,BYTE PTR [eax]
6400f836:	and    edx,0xf
6400f839:	add    DWORD PTR [esp+0x60],0x1
6400f83e:	jmp    0x6400f9c7
6400f843:	cmp    al,0x80
6400f845:	jb     0x6400fa15
6400f84b:	cmp    al,0x8f
6400f84d:	ja     0x6400fa15
6400f853:	cmp    DWORD PTR [esp+0x60],ecx
6400f857:	jae    0x6400fa15
6400f85d:	mov    ecx,DWORD PTR [esp+0x60]
6400f861:	lea    edx,[ecx+ecx*4]
6400f864:	mov    ecx,DWORD PTR [esp+0x58]
6400f868:	lea    esi,[ecx+edx*8+0x18]
6400f86c:	and    eax,0xf
6400f86f:	call   0x6400f120
6400f874:	test   eax,eax
6400f876:	jl     0x6400fa15
6400f87c:	mov    eax,DWORD PTR [esp+0x14]
6400f880:	test   BYTE PTR [eax],0xf
6400f883:	jne    0x6400f9b5
6400f889:	mov    eax,DWORD PTR [esi+0x4]
6400f88c:	mov    ecx,DWORD PTR [esi+0xc]
6400f88f:	mov    ebp,DWORD PTR [esi+0x8]
6400f892:	mov    ebx,DWORD PTR [esi]
6400f894:	mov    DWORD PTR [esp+0x34],eax
6400f898:	mov    DWORD PTR [esp+0x3c],ecx
6400f89c:	mov    DWORD PTR [esp+0x38],ebp
6400f8a0:	mov    eax,DWORD PTR [esp+0x60]
6400f8a4:	lea    edx,[eax+eax*4]
6400f8a7:	mov    eax,DWORD PTR [esp+0x58]
6400f8ab:	lea    edx,[eax+edx*8+0x18]
6400f8af:	lea    eax,[edx-0x28]
6400f8b2:	add    edx,0xfffffff0
6400f8b5:	mov    esi,0x1
6400f8ba:	lea    ebx,[ebx+0x0]
6400f8c0:	cmp    DWORD PTR [esp+0x60],0x0
6400f8c5:	je     0x6400f9f1
6400f8cb:	mov    ecx,DWORD PTR [eax+0x14]
6400f8ce:	sub    ecx,0x0
6400f8d1:	je     0x6400f94d
6400f8d3:	sub    ecx,esi
6400f8d5:	je     0x6400f998
6400f8db:	sub    ecx,esi
6400f8dd:	jne    0x6400fa15
6400f8e3:	mov    ecx,DWORD PTR [edx+0x4]
6400f8e6:	mov    esi,DWORD PTR [edx]
6400f8e8:	mov    DWORD PTR [esp+0x44],ecx
6400f8ec:	mov    ecx,DWORD PTR [edx+0x8]
6400f8ef:	mov    DWORD PTR [esp+0x48],ecx
6400f8f3:	mov    ecx,DWORD PTR [edx+0xc]
6400f8f6:	mov    DWORD PTR [esp+0x4c],ecx
6400f8fa:	mov    ecx,DWORD PTR [eax+0x8]
6400f8fd:	shl    ecx,0x5
6400f900:	add    ecx,DWORD PTR [eax+0xc]
6400f903:	mov    DWORD PTR [ecx],esi
6400f905:	mov    esi,DWORD PTR [esp+0x44]
6400f909:	mov    DWORD PTR [ecx+0x4],esi
6400f90c:	mov    esi,DWORD PTR [esp+0x48]
6400f910:	mov    DWORD PTR [ecx+0x8],esi
6400f913:	mov    esi,DWORD PTR [esp+0x4c]
6400f917:	mov    DWORD PTR [ecx+0xc],esi
6400f91a:	mov    ecx,DWORD PTR [eax+0x8]
6400f91d:	mov    esi,DWORD PTR [eax+0xc]
6400f920:	shl    ecx,0x5
6400f923:	lea    ecx,[ecx+esi*1+0x10]
6400f927:	mov    esi,DWORD PTR [esp+0x34]
6400f92b:	mov    DWORD PTR [ecx],ebx
6400f92d:	mov    DWORD PTR [ecx+0x4],esi
6400f930:	mov    esi,DWORD PTR [esp+0x3c]
6400f934:	mov    DWORD PTR [ecx+0x8],ebp
6400f937:	mov    DWORD PTR [ecx+0xc],esi
6400f93a:	mov    esi,0x1
6400f93f:	add    DWORD PTR [eax+0x8],esi
6400f942:	add    DWORD PTR [eax+0x10],0xffffffff
6400f946:	je     0x6400f972
6400f948:	mov    DWORD PTR [eax+0x14],esi
6400f94b:	jmp    0x6400f9ca
6400f94d:	mov    ecx,DWORD PTR [eax+0x8]
6400f950:	shl    ecx,0x4
6400f953:	add    ecx,DWORD PTR [eax+0xc]
6400f956:	mov    DWORD PTR [ecx],ebx
6400f958:	mov    ebx,DWORD PTR [esp+0x34]
6400f95c:	mov    DWORD PTR [ecx+0x4],ebx
6400f95f:	mov    ebx,DWORD PTR [esp+0x3c]
6400f963:	mov    DWORD PTR [ecx+0x8],ebp
6400f966:	mov    DWORD PTR [ecx+0xc],ebx
6400f969:	add    DWORD PTR [eax+0x8],esi
6400f96c:	add    DWORD PTR [eax+0x10],0xffffffff
6400f970:	jne    0x6400f9ca
6400f972:	mov    ecx,DWORD PTR [eax+0x4]
6400f975:	mov    ebp,DWORD PTR [eax+0x8]
6400f978:	mov    ebx,DWORD PTR [eax]
6400f97a:	sub    DWORD PTR [esp+0x60],esi
6400f97e:	mov    DWORD PTR [esp+0x34],ecx
6400f982:	mov    ecx,DWORD PTR [eax+0xc]
6400f985:	sub    eax,0x28
6400f988:	mov    DWORD PTR [esp+0x38],ebp
6400f98c:	mov    DWORD PTR [esp+0x3c],ecx
6400f990:	sub    edx,0x28
6400f993:	jmp    0x6400f8c0
6400f998:	mov    edx,DWORD PTR [esp+0x34]
6400f99c:	mov    ecx,DWORD PTR [esp+0x3c]
6400f9a0:	mov    DWORD PTR [eax+0x18],ebx
6400f9a3:	mov    DWORD PTR [eax+0x1c],edx
6400f9a6:	mov    DWORD PTR [eax+0x20],ebp
6400f9a9:	mov    DWORD PTR [eax+0x24],ecx
6400f9ac:	mov    DWORD PTR [eax+0x14],0x2
6400f9b3:	jmp    0x6400f9ca
6400f9b5:	mov    ecx,0x1
6400f9ba:	mov    DWORD PTR [esi+0x14],ecx
6400f9bd:	movzx  edx,BYTE PTR [eax]
6400f9c0:	and    edx,0xf
6400f9c3:	add    DWORD PTR [esp+0x60],ecx
6400f9c7:	mov    DWORD PTR [esi+0x10],edx
6400f9ca:	mov    eax,DWORD PTR [esp+0x14]
6400f9ce:	add    eax,0x1
6400f9d1:	cmp    eax,DWORD PTR [esp+0x20]
6400f9d5:	mov    DWORD PTR [esp+0x18],0x0
6400f9dd:	mov    DWORD PTR [esp+0x14],eax
6400f9e1:	je     0x6400fa11
6400f9e3:	mov    edx,DWORD PTR [esp+0x20]
6400f9e7:	mov    ecx,0x20
6400f9ec:	jmp    0x6400f1a0
6400f9f1:	mov    eax,DWORD PTR [esp+0x58]
6400f9f5:	mov    ecx,DWORD PTR [esp+0x34]
6400f9f9:	mov    edx,DWORD PTR [esp+0x3c]
6400f9fd:	add    DWORD PTR [esp+0x14],esi
6400fa01:	mov    DWORD PTR [eax+0x18],ebx
6400fa04:	mov    DWORD PTR [eax+0x1c],ecx
6400fa07:	mov    DWORD PTR [eax+0x20],ebp
6400fa0a:	mov    DWORD PTR [eax+0x24],edx
6400fa0d:	mov    eax,esi
6400fa0f:	jmp    0x6400fa18
6400fa11:	xor    eax,eax
6400fa13:	jmp    0x6400fa18
6400fa15:	or     eax,0xffffffff
6400fa18:	mov    ecx,DWORD PTR [esp+0x58]
6400fa1c:	mov    edx,DWORD PTR [esp+0x18]
6400fa20:	mov    DWORD PTR [ecx+0x8],edx
6400fa23:	mov    edx,DWORD PTR [esp+0x1c]
6400fa27:	mov    DWORD PTR [ecx+0xc],edx
6400fa2a:	mov    edx,DWORD PTR [esp+0x60]
6400fa2e:	mov    DWORD PTR [ecx+0x10],edx
6400fa31:	mov    ecx,DWORD PTR [esp+0x14]
6400fa35:	sub    ecx,DWORD PTR [esp+0x5c]
6400fa39:	mov    edx,DWORD PTR [esp+0x64]
6400fa3d:	pop    edi
6400fa3e:	pop    esi
6400fa3f:	pop    ebp
6400fa40:	mov    DWORD PTR [edx],ecx
6400fa42:	pop    ebx
6400fa43:	add    esp,0x44
6400fa46:	ret    
6400fa47:	nop
6400fa48:	and    dh,dl
6400fa4a:	add    BYTE PTR [ecx+ebp*1-0xe],ah
6400fa4e:	add    BYTE PTR [esp+edi*1-0xe],ah
6400fa52:	add    BYTE PTR [esi+ecx*2-0xe],ah
6400fa56:	add    BYTE PTR [esi+ebp*2-0xe],ah
6400fa5a:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400fa5e:	add    BYTE PTR [eax+eax*1+0x5],ah
6400fa62:	add    DWORD PTR [edx],eax
6400fa64:	add    eax,0x5050505
6400fa69:	add    eax,0x3030303
6400fa6e:	add    eax,DWORD PTR [ebx]
6400fa70:	add    eax,DWORD PTR [ebx]
6400fa72:	add    eax,DWORD PTR [ebx]
6400fa74:	add    eax,0x5050505
6400fa79:	add    eax,0x4040404
6400fa7e:	add    al,0x4
6400fa80:	push   ss
6400fa81:	repz add BYTE PTR [ecx+ecx*2-0xd],ah
6400fa86:	add    BYTE PTR [edi+ebx*8-0xd],ah
6400fa8a:	add    BYTE PTR [ebx+esi*8-0xd],ah
6400fa8e:	add    BYTE PTR [esi+ecx*1-0xc],ah
6400fa92:	add    BYTE PTR [ebx+edi*1-0xc],ah
6400fa96:	add    BYTE PTR [ecx+eax*8-0xc],ah
6400fa9a:	add    BYTE PTR [eax+ecx*8-0xc],ah
6400fa9e:	add    BYTE PTR [ebp+ebx*8-0xc],ah
6400faa2:	add    BYTE PTR [ebp+eax*1-0xb],ah
6400faa6:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400faaa:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400faae:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400fab2:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400fab6:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400faba:	add    BYTE PTR [ebp+edx*1-0x6],ah
6400fabe:	add    BYTE PTR [esp+ebp*8-0xe],ah
6400fac2:	add    BYTE PTR [ecx+edi*8-0xe],ah
6400fac6:	add    BYTE PTR [ebp+esi*4-0xb],ah
6400faca:	add    BYTE PTR [esp+esi*1-0xa],ah
6400face:	add    BYTE PTR [edx+edx*8-0xa],ah
6400fad2:	add    BYTE PTR [esp+edx*2-0x9],ah
6400fad6:	add    BYTE PTR [ebp+ebx*4-0xb],ah
6400fada:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400fade:	int3   
6400fadf:	int3   
6400fae0:	push   ebp
6400fae1:	mov    ebp,esp
6400fae3:	and    esp,0xfffffff8
6400fae6:	sub    esp,0x51c
6400faec:	push   ebx
6400faed:	push   esi
6400faee:	mov    esi,DWORD PTR [ebp+0x10]
6400faf1:	xor    ebx,ebx
6400faf3:	xor    eax,eax
6400faf5:	cmp    esi,ebx
6400faf7:	push   edi
6400faf8:	mov    DWORD PTR [esp+0xc],eax
6400fafc:	je     0x6400fb04
6400fafe:	mov    eax,DWORD PTR [esi]
6400fb00:	mov    DWORD PTR [esp+0xc],eax
6400fb04:	mov    edi,DWORD PTR [ebp+0xc]
6400fb07:	cmp    edi,eax
6400fb09:	ja     0x6400fb14
6400fb0b:	xor    eax,eax
6400fb0d:	pop    edi
6400fb0e:	pop    esi
6400fb0f:	pop    ebx
6400fb10:	mov    esp,ebp
6400fb12:	pop    ebp
6400fb13:	ret    
6400fb14:	mov    edx,DWORD PTR [ebp+0x8]
6400fb17:	xor    eax,eax
6400fb19:	lea    ecx,[esp+0xc]
6400fb1d:	push   ecx
6400fb1e:	mov    DWORD PTR [esp+0x2c],eax
6400fb22:	mov    DWORD PTR [esp+0x30],eax
6400fb26:	mov    DWORD PTR [esp+0x34],eax
6400fb2a:	mov    DWORD PTR [esp+0x38],eax
6400fb2e:	mov    eax,DWORD PTR [ebp+0x14]
6400fb31:	push   edi
6400fb32:	mov    DWORD PTR [esp+0x18],eax
6400fb36:	push   edx
6400fb37:	lea    eax,[esp+0x1c]
6400fb3b:	push   eax
6400fb3c:	mov    DWORD PTR [esp+0x28],ebx
6400fb40:	mov    DWORD PTR [esp+0x2c],ebx
6400fb44:	mov    DWORD PTR [esp+0x30],ebx
6400fb48:	mov    BYTE PTR [esp+0x24],bl
6400fb4c:	call   0x6400f150
6400fb51:	add    esp,0x10
6400fb54:	cmp    eax,ebx
6400fb56:	jge    0x6400fb62
6400fb58:	or     eax,0xffffffff
6400fb5b:	pop    edi
6400fb5c:	pop    esi
6400fb5d:	pop    ebx
6400fb5e:	mov    esp,ebp
6400fb60:	pop    ebp
6400fb61:	ret    
6400fb62:	cmp    esi,ebx
6400fb64:	mov    ecx,DWORD PTR [esp+0xc]
6400fb68:	je     0x6400fb6c
6400fb6a:	mov    DWORD PTR [esi],ecx
6400fb6c:	cmp    eax,ebx
6400fb6e:	je     0x6400fb0b
6400fb70:	mov    eax,DWORD PTR [ebp+0x18]
6400fb73:	mov    edx,DWORD PTR [esp+0x28]
6400fb77:	mov    DWORD PTR [eax],edx
6400fb79:	mov    edx,DWORD PTR [esp+0x2c]
6400fb7d:	mov    DWORD PTR [eax+0x4],edx
6400fb80:	mov    edx,DWORD PTR [esp+0x30]
6400fb84:	mov    DWORD PTR [eax+0x8],edx
6400fb87:	mov    edx,DWORD PTR [esp+0x34]
6400fb8b:	cmp    ecx,edi
6400fb8d:	pop    edi
6400fb8e:	mov    DWORD PTR [eax+0xc],edx
6400fb91:	sbb    eax,eax
6400fb93:	pop    esi
6400fb94:	add    eax,0x2
6400fb97:	pop    ebx
6400fb98:	mov    esp,ebp
6400fb9a:	pop    ebp
6400fb9b:	ret    
6400fb9c:	int3   
6400fb9d:	int3   
6400fb9e:	int3   
6400fb9f:	int3   
6400fba0:	mov    eax,DWORD PTR [esp+0x8]
6400fba4:	sub    eax,0x1
6400fba7:	jne    0x6400fbb2
6400fba9:	mov    eax,DWORD PTR [esp+0x4]
6400fbad:	mov    ds:0x6402e4a4,eax
6400fbb2:	mov    eax,0x1
6400fbb7:	ret    0xc
6400fbba:	int3   
6400fbbb:	int3   
6400fbbc:	int3   
6400fbbd:	int3   
6400fbbe:	int3   
6400fbbf:	int3   
6400fbc0:	cmp    BYTE PTR ds:0x6402e4a0,0x0
6400fbc7:	jne    0x6400fc26
6400fbc9:	push   esi
6400fbca:	push   edi
6400fbcb:	push   0x640253b0
6400fbd0:	mov    BYTE PTR ds:0x6402e4a0,0x1
6400fbd7:	call   DWORD PTR ds:0x64025018
6400fbdd:	push   0x64025384
6400fbe2:	push   0xb
6400fbe4:	push   0x64025378
6400fbe9:	mov    esi,eax
6400fbeb:	call   0x640057b0
6400fbf0:	mov    edi,DWORD PTR ds:0x64025014
6400fbf6:	add    esp,0xc
6400fbf9:	push   eax
6400fbfa:	push   esi
6400fbfb:	call   edi
6400fbfd:	push   0x6402534c
6400fc02:	push   0x19
6400fc04:	push   0x64025330
6400fc09:	mov    ds:0x6402e498,eax
6400fc0e:	call   0x640057b0
6400fc13:	add    esp,0xc
6400fc16:	push   eax
6400fc17:	push   esi
6400fc18:	call   edi
6400fc1a:	pop    edi
6400fc1b:	mov    ds:0x6402e49c,eax
6400fc20:	pop    esi
6400fc21:	jmp    0x64011fb0
6400fc26:	ret    
6400fc27:	int3   
6400fc28:	int3   
6400fc29:	int3   
6400fc2a:	int3   
6400fc2b:	int3   
6400fc2c:	int3   
6400fc2d:	int3   
6400fc2e:	int3   
6400fc2f:	int3   
6400fc30:	call   0x6400fbc0
6400fc35:	mov    eax,ds:0x6402e498
6400fc3a:	test   eax,eax
6400fc3c:	je     0x6400fc40
6400fc3e:	jmp    eax
6400fc40:	ret    0x8
6400fc43:	int3   
6400fc44:	int3   
6400fc45:	int3   
6400fc46:	int3   
6400fc47:	int3   
6400fc48:	int3   
6400fc49:	int3   
6400fc4a:	int3   
6400fc4b:	int3   
6400fc4c:	int3   
6400fc4d:	int3   
6400fc4e:	int3   
6400fc4f:	int3   
6400fc50:	call   0x6400fbc0
6400fc55:	mov    eax,ds:0x6402e49c
6400fc5a:	test   eax,eax
6400fc5c:	je     0x6400fc60
6400fc5e:	jmp    eax
6400fc60:	ret    0x4
6400fc63:	int3   
6400fc64:	int3   
6400fc65:	int3   
6400fc66:	int3   
6400fc67:	int3   
6400fc68:	int3   
6400fc69:	int3   
6400fc6a:	int3   
6400fc6b:	int3   
6400fc6c:	int3   
6400fc6d:	int3   
6400fc6e:	int3   
6400fc6f:	int3   
6400fc70:	mov    eax,DWORD PTR [esp+0x4]
6400fc74:	mov    edx,DWORD PTR [ecx]
6400fc76:	mov    DWORD PTR [eax],edx
6400fc78:	mov    edx,DWORD PTR [ecx+0x4]
6400fc7b:	mov    DWORD PTR [eax+0x4],edx
6400fc7e:	mov    edx,DWORD PTR [ecx+0x8]
6400fc81:	mov    ecx,DWORD PTR [ecx+0xc]
6400fc84:	mov    DWORD PTR [eax+0x8],edx
6400fc87:	mov    DWORD PTR [eax+0xc],ecx
6400fc8a:	ret    0x4
6400fc8d:	int3   
6400fc8e:	int3   
6400fc8f:	int3   
6400fc90:	jmp    0x6401277f
6400fc95:	int3   
6400fc96:	int3   
6400fc97:	int3   
6400fc98:	int3   
6400fc99:	int3   
6400fc9a:	int3   
6400fc9b:	int3   
6400fc9c:	int3   
6400fc9d:	int3   
6400fc9e:	int3   
6400fc9f:	int3   
6400fca0:	push   esi
6400fca1:	mov    esi,ecx
6400fca3:	call   0x6401277f
6400fca8:	test   BYTE PTR [esp+0x8],0x1
6400fcad:	je     0x6400fcb8
6400fcaf:	push   esi
6400fcb0:	call   0x64012612
6400fcb5:	add    esp,0x4
6400fcb8:	mov    eax,esi
6400fcba:	pop    esi
6400fcbb:	ret    0x4
6400fcbe:	int3   
6400fcbf:	int3   
6400fcc0:	sub    esp,0x804
6400fcc6:	mov    eax,ds:0x6402d09c
6400fccb:	xor    eax,esp
6400fccd:	mov    DWORD PTR [esp+0x800],eax
6400fcd4:	call   DWORD PTR ds:0x6402504c
6400fcda:	and    eax,0xff
6400fcdf:	cmp    eax,0x5
6400fce2:	jb     0x6400fcf5
6400fce4:	push   0x6402541c
6400fce9:	push   0x400
6400fcee:	lea    eax,[esp+0x8]
6400fcf2:	push   eax
6400fcf3:	jmp    0x6400fd04
6400fcf5:	push   0x64025410
6400fcfa:	push   0x400
6400fcff:	lea    ecx,[esp+0x8]
6400fd03:	push   ecx
6400fd04:	call   0x64013310
6400fd09:	add    esp,0xc
6400fd0c:	push   0x64025400
6400fd11:	lea    edx,[esp+0x4]
6400fd15:	push   0x400
6400fd1a:	push   edx
6400fd1b:	call   0x64013296
6400fd20:	add    esp,0xc
6400fd23:	push   0x0
6400fd25:	push   0x80
6400fd2a:	push   0x3
6400fd2c:	push   0x0
6400fd2e:	push   0x0
6400fd30:	lea    eax,[esp+0x14]
6400fd34:	push   0xc0000000
6400fd39:	push   eax
6400fd3a:	call   0x6400d310
6400fd3f:	call   eax
6400fd41:	cmp    eax,0xffffffff
6400fd44:	jne    0x6400fd67
6400fd46:	call   DWORD PTR ds:0x64025044
6400fd4c:	cmp    eax,0x20
6400fd4f:	sete   al
6400fd52:	mov    ecx,DWORD PTR [esp+0x800]
6400fd59:	xor    ecx,esp
6400fd5b:	call   0x64012e6c
6400fd60:	add    esp,0x804
6400fd66:	ret    
6400fd67:	push   eax
6400fd68:	call   DWORD PTR ds:0x64025040
6400fd6e:	mov    ecx,DWORD PTR [esp+0x800]
6400fd75:	xor    ecx,esp
6400fd77:	mov    al,0x1
6400fd79:	call   0x64012e6c
6400fd7e:	add    esp,0x804
6400fd84:	ret    
6400fd85:	int3   
6400fd86:	int3   
6400fd87:	int3   
6400fd88:	int3   
6400fd89:	int3   
6400fd8a:	int3   
6400fd8b:	int3   
6400fd8c:	int3   
6400fd8d:	int3   
6400fd8e:	int3   
6400fd8f:	int3   
6400fd90:	push   ebx
6400fd91:	mov    ebx,DWORD PTR ds:0x64025050
6400fd97:	push   esi
6400fd98:	push   edi
6400fd99:	mov    edi,DWORD PTR [esp+0x10]
6400fd9d:	xor    esi,esi
6400fd9f:	nop
6400fda0:	lea    eax,[esp+0x10]
6400fda4:	push   0x0
6400fda6:	push   eax
6400fda7:	mov    DWORD PTR [esp+0x18],0x0
6400fdaf:	call   0x6400de70
6400fdb4:	call   eax
6400fdb6:	test   eax,eax
6400fdb8:	je     0x6400fdc9
6400fdba:	cmp    edi,0xffffffff
6400fdbd:	je     0x6400fdc9
6400fdbf:	add    esi,0x3e8
6400fdc5:	cmp    esi,edi
6400fdc7:	ja     0x6400fdd2
6400fdc9:	push   0x3e8
6400fdce:	call   ebx
6400fdd0:	jmp    0x6400fda0
6400fdd2:	pop    edi
6400fdd3:	pop    esi
6400fdd4:	mov    al,0x1
6400fdd6:	pop    ebx
6400fdd7:	ret    
6400fdd8:	int3   
6400fdd9:	int3   
6400fdda:	int3   
6400fddb:	int3   
6400fddc:	int3   
6400fddd:	int3   
6400fdde:	int3   
6400fddf:	int3   
6400fde0:	mov    ecx,DWORD PTR [esp+0x4]
6400fde4:	sub    esp,0xc
6400fde7:	test   ecx,ecx
6400fde9:	ja     0x6400fe01
6400fdeb:	xor    ecx,ecx
6400fded:	lea    edx,[ecx*4+0x0]
6400fdf4:	push   edx
6400fdf5:	call   0x640129f1
6400fdfa:	add    esp,0x4
6400fdfd:	add    esp,0xc
6400fe00:	ret    
6400fe01:	or     eax,0xffffffff
6400fe04:	xor    edx,edx
6400fe06:	div    ecx
6400fe08:	cmp    eax,0x4
6400fe0b:	jae    0x6400fded
6400fe0d:	lea    eax,[esp+0x10]
6400fe11:	push   eax
6400fe12:	lea    ecx,[esp+0x4]
6400fe16:	mov    DWORD PTR [esp+0x14],0x0
6400fe1e:	call   0x6401266d
6400fe23:	push   0x6402aa5c
6400fe28:	lea    ecx,[esp+0x4]
6400fe2c:	push   ecx
6400fe2d:	mov    DWORD PTR [esp+0x8],0x64025304
6400fe35:	call   0x64012a5b
6400fe3a:	int3   
6400fe3b:	int3   
6400fe3c:	int3   
6400fe3d:	int3   
6400fe3e:	int3   
6400fe3f:	int3   
6400fe40:	push   esi
6400fe41:	mov    esi,DWORD PTR [ecx]
6400fe43:	test   esi,esi
6400fe45:	je     0x6400fe56
6400fe47:	push   esi
6400fe48:	call   0x6400eff0
6400fe4d:	push   esi
6400fe4e:	call   0x64012612
6400fe53:	add    esp,0x8
6400fe56:	pop    esi
6400fe57:	ret    
6400fe58:	int3   
6400fe59:	int3   
6400fe5a:	int3   
6400fe5b:	int3   
6400fe5c:	int3   
6400fe5d:	int3   
6400fe5e:	int3   
6400fe5f:	int3   
6400fe60:	push   esi
6400fe61:	mov    esi,DWORD PTR [ecx+0x10]
6400fe64:	test   esi,esi
6400fe66:	je     0x6400fe77
6400fe68:	push   esi
6400fe69:	call   0x6400eff0
6400fe6e:	push   esi
6400fe6f:	call   0x64012612
6400fe74:	add    esp,0x8
6400fe77:	pop    esi
6400fe78:	ret    
6400fe79:	int3   
6400fe7a:	int3   
6400fe7b:	int3   
6400fe7c:	int3   
6400fe7d:	int3   
6400fe7e:	int3   
6400fe7f:	int3   
6400fe80:	mov    ecx,DWORD PTR [esp+0x8]
6400fe84:	test   ecx,ecx
6400fe86:	jne    0x6400fe92
6400fe88:	push   0x80004005
6400fe8d:	call   0x64001040
6400fe92:	mov    eax,DWORD PTR [esp+0x4]
6400fe96:	mov    eax,DWORD PTR [eax]
6400fe98:	mov    dx,WORD PTR [eax]
6400fe9b:	cmp    dx,WORD PTR [ecx]
6400fe9e:	jne    0x6400fec6
6400fea0:	test   dx,dx
6400fea3:	je     0x6400feba
6400fea5:	mov    dx,WORD PTR [eax+0x2]
6400fea9:	cmp    dx,WORD PTR [ecx+0x2]
6400fead:	jne    0x6400fec6
6400feaf:	add    eax,0x4
6400feb2:	add    ecx,0x4
6400feb5:	test   dx,dx
6400feb8:	jne    0x6400fe98
6400feba:	xor    eax,eax
6400febc:	xor    ecx,ecx
6400febe:	test   eax,eax
6400fec0:	setne  cl
6400fec3:	mov    al,cl
6400fec5:	ret    
6400fec6:	sbb    eax,eax
6400fec8:	sbb    eax,0xffffffff
6400fecb:	xor    ecx,ecx
6400fecd:	test   eax,eax
6400fecf:	setne  cl
6400fed2:	mov    al,cl
6400fed4:	ret    
6400fed5:	int3   
6400fed6:	int3   
6400fed7:	int3   
6400fed8:	int3   
6400fed9:	int3   
6400feda:	int3   
6400fedb:	int3   
6400fedc:	int3   
6400fedd:	int3   
6400fede:	int3   
6400fedf:	int3   
6400fee0:	mov    eax,DWORD PTR [esp+0x4]
6400fee4:	mov    ecx,DWORD PTR [esp+0x8]
6400fee8:	cmp    eax,ecx
6400feea:	je     0x6400fefd
6400feec:	mov    edx,DWORD PTR [esp+0xc]
6400fef0:	push   esi
6400fef1:	mov    esi,DWORD PTR [edx]
6400fef3:	mov    DWORD PTR [eax],esi
6400fef5:	add    eax,0x4
6400fef8:	cmp    eax,ecx
6400fefa:	jne    0x6400fef1
6400fefc:	pop    esi
6400fefd:	ret    
6400fefe:	int3   
6400feff:	int3   
6400ff00:	mov    eax,DWORD PTR [esp+0x8]
6400ff04:	mov    edx,DWORD PTR [esp+0x4]
6400ff08:	sub    eax,edx
6400ff0a:	sar    eax,0x2
6400ff0d:	push   esi
6400ff0e:	mov    esi,DWORD PTR [esp+0x10]
6400ff12:	lea    ecx,[eax*4+0x0]
6400ff19:	sub    esi,ecx
6400ff1b:	test   eax,eax
6400ff1d:	jle    0x6400ff2b
6400ff1f:	push   ecx
6400ff20:	push   edx
6400ff21:	push   ecx
6400ff22:	push   esi
6400ff23:	call   0x64012843
6400ff28:	add    esp,0x10
6400ff2b:	mov    eax,esi
6400ff2d:	pop    esi
6400ff2e:	ret    
6400ff2f:	int3   
6400ff30:	mov    eax,DWORD PTR [esp+0x14]
6400ff34:	push   ebp
6400ff35:	mov    ebp,DWORD PTR [esp+0x8]
6400ff39:	push   esi
6400ff3a:	mov    esi,DWORD PTR [esp+0x14]
6400ff3e:	push   edi
6400ff3f:	lea    edi,[esi+eax*1]
6400ff42:	mov    eax,DWORD PTR [ebp+0x0]
6400ff45:	mov    edx,DWORD PTR [eax-0x8]
6400ff48:	sub    eax,0x10
6400ff4b:	mov    ecx,0x1
6400ff50:	sub    ecx,DWORD PTR [eax+0xc]
6400ff53:	sub    edx,edi
6400ff55:	or     ecx,edx
6400ff57:	jge    0x6400ff61
6400ff59:	push   edi
6400ff5a:	mov    ecx,ebp
6400ff5c:	call   0x64001e00
6400ff61:	mov    eax,DWORD PTR [esp+0x14]
6400ff65:	push   ebx
6400ff66:	mov    ebx,DWORD PTR [ebp+0x0]
6400ff69:	add    esi,esi
6400ff6b:	push   esi
6400ff6c:	push   eax
6400ff6d:	push   esi
6400ff6e:	push   ebx
6400ff6f:	call   0x640127c8
6400ff74:	mov    eax,DWORD PTR [esp+0x34]
6400ff78:	mov    ecx,DWORD PTR [esp+0x30]
6400ff7c:	add    eax,eax
6400ff7e:	push   eax
6400ff7f:	push   ecx
6400ff80:	push   eax
6400ff81:	add    esi,ebx
6400ff83:	push   esi
6400ff84:	call   0x640127c8
6400ff89:	add    esp,0x20
6400ff8c:	test   edi,edi
6400ff8e:	pop    ebx
6400ff8f:	jl     0x6400ffa9
6400ff91:	mov    eax,DWORD PTR [ebp+0x0]
6400ff94:	cmp    edi,DWORD PTR [eax-0x8]
6400ff97:	jg     0x6400ffa9
6400ff99:	mov    DWORD PTR [eax-0xc],edi
6400ff9c:	mov    edx,DWORD PTR [ebp+0x0]
6400ff9f:	mov    WORD PTR [edx+edi*2],0x0
6400ffa5:	pop    edi
6400ffa6:	pop    esi
6400ffa7:	pop    ebp
6400ffa8:	ret    
6400ffa9:	push   0x80070057
6400ffae:	call   0x64001040
6400ffb3:	int3   
6400ffb4:	int3   
6400ffb5:	int3   
6400ffb6:	int3   
6400ffb7:	int3   
6400ffb8:	int3   
6400ffb9:	int3   
6400ffba:	int3   
6400ffbb:	int3   
6400ffbc:	int3   
6400ffbd:	int3   
6400ffbe:	int3   
6400ffbf:	int3   
6400ffc0:	push   0xffffffff
6400ffc2:	push   0x64022449
6400ffc7:	mov    eax,fs:0x0
6400ffcd:	push   eax
6400ffce:	push   ecx
6400ffcf:	push   esi
6400ffd0:	push   edi
6400ffd1:	mov    eax,ds:0x6402d09c
6400ffd6:	xor    eax,esp
6400ffd8:	push   eax
6400ffd9:	lea    eax,[esp+0x10]
6400ffdd:	mov    fs:0x0,eax
6400ffe3:	mov    edi,DWORD PTR [esp+0x24]
6400ffe7:	mov    DWORD PTR [esp+0xc],0x0
6400ffef:	mov    eax,DWORD PTR [edi]
6400fff1:	mov    ecx,DWORD PTR [eax-0x10]
6400fff4:	test   ecx,ecx
6400fff6:	mov    DWORD PTR [esp+0x18],0x0
6400fffe:	je     0x6401000b
64010000:	mov    edx,DWORD PTR [ecx]
64010002:	mov    eax,DWORD PTR [edx+0x10]
64010005:	call   eax
64010007:	test   eax,eax
64010009:	jne    0x6401001b
6401000b:	mov    edx,DWORD PTR ds:0x6402e540
64010011:	mov    eax,DWORD PTR [edx+0x10]
64010014:	mov    ecx,0x6402e540
64010019:	call   eax
6401001b:	xor    ecx,ecx
6401001d:	test   eax,eax
6401001f:	setne  cl
64010022:	test   ecx,ecx
64010024:	jne    0x64010030
64010026:	push   0x80004005
6401002b:	call   0x64001040
64010030:	mov    edx,DWORD PTR [eax]
64010032:	mov    ecx,eax
64010034:	mov    eax,DWORD PTR [edx+0xc]
64010037:	call   eax
64010039:	mov    esi,DWORD PTR [esp+0x20]
6401003d:	add    eax,0x10
64010040:	mov    DWORD PTR [esi],eax
64010042:	mov    ecx,DWORD PTR [esp+0x28]
64010046:	mov    eax,DWORD PTR [ecx]
64010048:	mov    edx,DWORD PTR [eax-0xc]
6401004b:	mov    ecx,DWORD PTR [edi]
6401004d:	mov    edi,DWORD PTR [ecx-0xc]
64010050:	push   edx
64010051:	push   eax
64010052:	push   edi
64010053:	push   ecx
64010054:	push   esi
64010055:	mov    DWORD PTR [esp+0x2c],0x0
6401005d:	mov    DWORD PTR [esp+0x20],0x1
64010065:	call   0x6400ff30
6401006a:	add    esp,0x14
6401006d:	mov    eax,esi
6401006f:	mov    ecx,DWORD PTR [esp+0x10]
64010073:	mov    DWORD PTR fs:0x0,ecx
6401007a:	pop    ecx
6401007b:	pop    edi
6401007c:	pop    esi
6401007d:	add    esp,0x10
64010080:	ret    
64010081:	int3   
64010082:	int3   
64010083:	int3   
64010084:	int3   
64010085:	int3   
64010086:	int3   
64010087:	int3   
64010088:	int3   
64010089:	int3   
6401008a:	int3   
6401008b:	int3   
6401008c:	int3   
6401008d:	int3   
6401008e:	int3   
6401008f:	int3   
64010090:	push   0xffffffff
64010092:	push   0x64022489
64010097:	mov    eax,fs:0x0
6401009d:	push   eax
6401009e:	push   ecx
6401009f:	push   ebp
640100a0:	push   esi
640100a1:	push   edi
640100a2:	mov    eax,ds:0x6402d09c
640100a7:	xor    eax,esp
640100a9:	push   eax
640100aa:	lea    eax,[esp+0x14]
640100ae:	mov    fs:0x0,eax
640100b4:	mov    ebp,DWORD PTR [esp+0x28]
640100b8:	mov    DWORD PTR [esp+0x10],0x0
640100c0:	mov    eax,DWORD PTR [ebp+0x0]
640100c3:	mov    ecx,DWORD PTR [eax-0x10]
640100c6:	test   ecx,ecx
640100c8:	mov    DWORD PTR [esp+0x1c],0x0
640100d0:	je     0x640100dd
640100d2:	mov    edx,DWORD PTR [ecx]
640100d4:	mov    eax,DWORD PTR [edx+0x10]
640100d7:	call   eax
640100d9:	test   eax,eax
640100db:	jne    0x640100ed
640100dd:	mov    edx,DWORD PTR ds:0x6402e540
640100e3:	mov    eax,DWORD PTR [edx+0x10]
640100e6:	mov    ecx,0x6402e540
640100eb:	call   eax
640100ed:	xor    ecx,ecx
640100ef:	test   eax,eax
640100f1:	setne  cl
640100f4:	test   ecx,ecx
640100f6:	jne    0x64010102
640100f8:	push   0x80004005
640100fd:	call   0x64001040
64010102:	mov    edx,DWORD PTR [eax]
64010104:	mov    ecx,eax
64010106:	mov    eax,DWORD PTR [edx+0xc]
64010109:	call   eax
6401010b:	mov    esi,DWORD PTR [esp+0x24]
6401010f:	add    eax,0x10
64010112:	mov    DWORD PTR [esi],eax
64010114:	mov    edi,DWORD PTR [esp+0x2c]
64010118:	test   edi,edi
6401011a:	mov    DWORD PTR [esp+0x1c],0x0
64010122:	mov    DWORD PTR [esp+0x10],0x1
6401012a:	jne    0x64010130
6401012c:	xor    eax,eax
6401012e:	jmp    0x64010144
64010130:	mov    eax,edi
64010132:	lea    edx,[eax+0x2]
64010135:	mov    cx,WORD PTR [eax]
64010138:	add    eax,0x2
6401013b:	test   cx,cx
6401013e:	jne    0x64010135
64010140:	sub    eax,edx
64010142:	sar    eax,1
64010144:	mov    ecx,DWORD PTR [ebp+0x0]
64010147:	mov    edx,DWORD PTR [ecx-0xc]
6401014a:	push   eax
6401014b:	push   edi
6401014c:	push   edx
6401014d:	push   ecx
6401014e:	push   esi
6401014f:	call   0x6400ff30
64010154:	add    esp,0x14
64010157:	mov    eax,esi
64010159:	mov    ecx,DWORD PTR [esp+0x14]
6401015d:	mov    DWORD PTR fs:0x0,ecx
64010164:	pop    ecx
64010165:	pop    edi
64010166:	pop    esi
64010167:	pop    ebp
64010168:	add    esp,0x10
6401016b:	ret    
6401016c:	int3   
6401016d:	int3   
6401016e:	int3   
6401016f:	int3   
64010170:	mov    eax,DWORD PTR [esp+0x8]
64010174:	mov    ecx,DWORD PTR [esp+0x4]
64010178:	mov    edx,DWORD PTR [esp+0xc]
6401017c:	sub    eax,ecx
6401017e:	sar    eax,0x2
64010181:	lea    eax,[eax*4+0x0]
64010188:	push   esi
64010189:	lea    esi,[eax+edx*1]
6401018c:	je     0x6401019a
6401018e:	push   eax
6401018f:	push   ecx
64010190:	push   eax
64010191:	push   edx
64010192:	call   0x64012843
64010197:	add    esp,0x10
6401019a:	mov    eax,esi
6401019c:	pop    esi
6401019d:	ret    0xc
640101a0:	push   esi
640101a1:	mov    esi,DWORD PTR [esp+0xc]
640101a5:	test   esi,esi
640101a7:	push   edi
640101a8:	mov    edi,DWORD PTR [esp+0xc]
640101ac:	mov    eax,esi
640101ae:	mov    ecx,edi
640101b0:	jbe    0x640101c6
640101b2:	mov    edx,DWORD PTR [esp+0x14]
640101b6:	push   ebx
640101b7:	mov    ebx,DWORD PTR [edx]
640101b9:	mov    DWORD PTR [ecx],ebx
640101bb:	sub    eax,0x1
640101be:	add    ecx,0x4
640101c1:	test   eax,eax
640101c3:	ja     0x640101b7
640101c5:	pop    ebx
640101c6:	lea    eax,[edi+esi*4]
640101c9:	pop    edi
640101ca:	pop    esi
640101cb:	ret    0xc
640101ce:	int3   
640101cf:	int3   
640101d0:	mov    eax,DWORD PTR [esp+0x4]
640101d4:	push   esi
640101d5:	push   eax
640101d6:	mov    esi,ecx
640101d8:	call   0x64012767
640101dd:	mov    DWORD PTR [esi],0x640253ec
640101e3:	mov    eax,esi
640101e5:	pop    esi
640101e6:	ret    0x4
640101e9:	int3   
640101ea:	int3   
640101eb:	int3   
640101ec:	int3   
640101ed:	int3   
640101ee:	int3   
640101ef:	int3   
640101f0:	push   0xffffffff
640101f2:	push   0x640224b8
640101f7:	mov    eax,fs:0x0
640101fd:	push   eax
640101fe:	sub    esp,0x44
64010201:	mov    eax,ds:0x6402d09c
64010206:	xor    eax,esp
64010208:	push   eax
64010209:	lea    eax,[esp+0x48]
6401020d:	mov    fs:0x0,eax
64010213:	push   0x12
64010215:	push   0x64028600
6401021a:	lea    ecx,[esp+0xc]
6401021e:	mov    DWORD PTR [esp+0x24],0xf
64010226:	mov    DWORD PTR [esp+0x20],0x0
6401022e:	mov    BYTE PTR [esp+0x10],0x0
64010233:	call   0x64001860
64010238:	lea    eax,[esp+0x4]
6401023c:	push   eax
6401023d:	lea    ecx,[esp+0x24]
64010241:	mov    DWORD PTR [esp+0x54],0x0
64010249:	call   0x64002d10
6401024e:	push   0x6402ab28
64010253:	lea    ecx,[esp+0x24]
64010257:	push   ecx
64010258:	mov    DWORD PTR [esp+0x28],0x6402531c
64010260:	call   0x64012a5b
64010265:	int3   
64010266:	int3   
64010267:	int3   
64010268:	int3   
64010269:	int3   
6401026a:	int3   
6401026b:	int3   
6401026c:	int3   
6401026d:	int3   
6401026e:	int3   
6401026f:	int3   
64010270:	sub    esp,0x10
64010273:	mov    edx,DWORD PTR [ecx+0x4]
64010276:	mov    eax,DWORD PTR [ecx]
64010278:	cmp    eax,0x5
6401027b:	mov    DWORD PTR [esp+0x4],edx
6401027f:	mov    edx,DWORD PTR [ecx+0x8]
64010282:	mov    ecx,DWORD PTR [ecx+0xc]
64010285:	je     0x640102ac
64010287:	push   0x640253f4
6401028c:	lea    ecx,[esp+0x4]
64010290:	call   0x6401274e
64010295:	push   0x64029fd8
6401029a:	lea    eax,[esp+0x4]
6401029e:	push   eax
6401029f:	mov    DWORD PTR [esp+0x8],0x640253ec
640102a7:	call   0x64012a5b
640102ac:	push   edx
640102ad:	push   ecx
640102ae:	mov    ecx,DWORD PTR [esp+0x1c]
640102b2:	call   0x64001860
640102b7:	add    esp,0x10
640102ba:	ret    0x4
640102bd:	int3   
640102be:	int3   
640102bf:	int3   
640102c0:	push   0xffffffff
640102c2:	push   0x640224fe
640102c7:	mov    eax,fs:0x0
640102cd:	push   eax
640102ce:	sub    esp,0x9c
640102d4:	push   ebx
640102d5:	push   ebp
640102d6:	push   edi
640102d7:	mov    eax,ds:0x6402d09c
640102dc:	xor    eax,esp
640102de:	push   eax
640102df:	lea    eax,[esp+0xac]
640102e6:	mov    fs:0x0,eax
640102ec:	xor    ebx,ebx
640102ee:	push   0x1c
640102f0:	mov    DWORD PTR [esp+0x14],ebx
640102f4:	call   0x640129f1
640102f9:	mov    edi,eax
640102fb:	add    esp,0x4
640102fe:	cmp    edi,ebx
64010300:	je     0x64010312
64010302:	push   0x2000
64010307:	push   edi
64010308:	call   0x6400f050
6401030d:	add    esp,0x8
64010310:	jmp    0x64010314
64010312:	xor    edi,edi
64010314:	mov    DWORD PTR [esp+0x20],edi
64010318:	mov    ecx,DWORD PTR [esp+0xc4]
6401031f:	mov    edx,DWORD PTR [esp+0xc0]
64010326:	lea    eax,[esp+0x10]
6401032a:	push   eax
6401032b:	mov    eax,DWORD PTR [esp+0xc0]
64010332:	push   edi
64010333:	push   ecx
64010334:	push   edx
64010335:	push   eax
64010336:	mov    DWORD PTR [esp+0xc8],ebx
6401033d:	call   0x6400fae0
64010342:	add    esp,0x14
64010345:	sub    eax,ebx
64010347:	je     0x64010416
6401034d:	sub    eax,0x1
64010350:	je     0x640103f9
64010356:	sub    eax,0x1
64010359:	je     0x640103a8
6401035b:	push   0xb
6401035d:	push   0x64025460
64010362:	lea    ecx,[esp+0x2c]
64010366:	mov    DWORD PTR [esp+0x44],0xf
6401036e:	mov    DWORD PTR [esp+0x40],ebx
64010372:	mov    BYTE PTR [esp+0x30],bl
64010376:	call   0x64001860
6401037b:	lea    ecx,[esp+0x24]
6401037f:	push   ecx
64010380:	lea    ecx,[esp+0x60]
64010384:	mov    BYTE PTR [esp+0xb8],0x2
6401038c:	call   0x64002020
64010391:	push   0x6402a05c
64010396:	lea    edx,[esp+0x60]
6401039a:	push   edx
6401039b:	mov    DWORD PTR [esp+0x64],0x64025444
640103a3:	call   0x64012a5b
640103a8:	mov    eax,DWORD PTR [esp+0x10]
640103ac:	mov    ecx,DWORD PTR [esp+0x14]
640103b0:	mov    edx,DWORD PTR [esp+0x18]
640103b4:	mov    DWORD PTR [esi],eax
640103b6:	mov    eax,DWORD PTR [esp+0x1c]
640103ba:	mov    DWORD PTR [esi+0x4],ecx
640103bd:	mov    DWORD PTR [esi+0x8],edx
640103c0:	mov    DWORD PTR [esi+0xc],eax
640103c3:	mov    ebp,DWORD PTR [esi+0x10]
640103c6:	cmp    edi,ebp
640103c8:	je     0x640103dd
640103ca:	cmp    ebp,ebx
640103cc:	je     0x640103dd
640103ce:	push   ebp
640103cf:	call   0x6400eff0
640103d4:	push   ebp
640103d5:	call   0x64012612
640103da:	add    esp,0x8
640103dd:	mov    DWORD PTR [esi+0x10],edi
640103e0:	mov    ecx,DWORD PTR [esp+0xac]
640103e7:	mov    DWORD PTR fs:0x0,ecx
640103ee:	pop    ecx
640103ef:	pop    edi
640103f0:	pop    ebp
640103f1:	pop    ebx
640103f2:	add    esp,0xa8
640103f8:	ret    
640103f9:	mov    ecx,DWORD PTR [esp+0x10]
640103fd:	mov    edx,DWORD PTR [esp+0x14]
64010401:	mov    eax,DWORD PTR [esp+0x18]
64010405:	mov    DWORD PTR [esi],ecx
64010407:	mov    ecx,DWORD PTR [esp+0x1c]
6401040b:	mov    DWORD PTR [esi+0x4],edx
6401040e:	mov    DWORD PTR [esi+0x8],eax
64010411:	mov    DWORD PTR [esi+0xc],ecx
64010414:	jmp    0x640103c3
64010416:	push   0x12
64010418:	push   0x6402544c
6401041d:	lea    ecx,[esp+0x48]
64010421:	mov    DWORD PTR [esp+0x60],0xf
64010429:	mov    DWORD PTR [esp+0x5c],ebx
6401042d:	mov    BYTE PTR [esp+0x4c],bl
64010431:	call   0x64001860
64010436:	lea    edx,[esp+0x40]
6401043a:	push   edx
6401043b:	lea    ecx,[esp+0x88]
64010442:	mov    BYTE PTR [esp+0xb8],0x1
6401044a:	call   0x64002020
6401044f:	push   0x6402a05c
64010454:	lea    eax,[esp+0x88]
6401045b:	push   eax
6401045c:	mov    DWORD PTR [esp+0x8c],0x64025444
64010467:	call   0x64012a5b
6401046c:	int3   
6401046d:	int3   
6401046e:	int3   
6401046f:	int3   
64010470:	mov    eax,DWORD PTR [esp+0x4]
64010474:	push   esi
64010475:	push   eax
64010476:	mov    esi,ecx
64010478:	call   0x64002130
6401047d:	mov    DWORD PTR [esi],0x64025444
64010483:	mov    eax,esi
64010485:	pop    esi
64010486:	ret    0x4
64010489:	int3   
6401048a:	int3   
6401048b:	int3   
6401048c:	int3   
6401048d:	int3   
6401048e:	int3   
6401048f:	int3   
64010490:	cmp    DWORD PTR [esp+0x4],0x6
64010495:	push   esi
64010496:	mov    esi,ecx
64010498:	je     0x640104bf
6401049a:	push   0x640253f4
6401049f:	lea    ecx,[esp+0xc]
640104a3:	call   0x6401274e
640104a8:	push   0x64029fd8
640104ad:	lea    eax,[esp+0xc]
640104b1:	push   eax
640104b2:	mov    DWORD PTR [esp+0x10],0x640253ec
640104ba:	call   0x64012a5b
640104bf:	push   ebx
640104c0:	mov    ebx,DWORD PTR [esp+0x14]
640104c4:	test   ebx,ebx
640104c6:	jbe    0x640104e9
640104c8:	mov    ecx,DWORD PTR [esi]
640104ca:	push   edi
640104cb:	mov    edi,DWORD PTR [esp+0x1c]
640104cf:	push   ecx
640104d0:	mov    ecx,edi
640104d2:	call   0x64010270
640104d7:	cmp    ebx,0x1
640104da:	jbe    0x640104e8
640104dc:	mov    edx,DWORD PTR [esi+0x4]
640104df:	push   edx
640104e0:	lea    ecx,[edi+0x10]
640104e3:	call   0x64010270
640104e8:	pop    edi
640104e9:	pop    ebx
640104ea:	pop    esi
640104eb:	ret    0x10
640104ee:	int3   
640104ef:	int3   
640104f0:	mov    eax,DWORD PTR [esp+0x10]
640104f4:	push   ebx
640104f5:	push   esi
640104f6:	mov    esi,ecx
640104f8:	mov    ecx,DWORD PTR [eax]
640104fa:	mov    DWORD PTR [esp+0x18],ecx
640104fe:	mov    ecx,DWORD PTR [esi+0x4]
64010501:	test   ecx,ecx
64010503:	push   edi
64010504:	jne    0x6401050a
64010506:	xor    edi,edi
64010508:	jmp    0x64010512
6401050a:	mov    edi,DWORD PTR [esi+0xc]
6401050d:	sub    edi,ecx
6401050f:	sar    edi,0x2
64010512:	mov    ebx,DWORD PTR [esp+0x18]
64010516:	test   ebx,ebx
64010518:	je     0x6401069f
6401051e:	test   ecx,ecx
64010520:	jne    0x64010526
64010522:	xor    eax,eax
64010524:	jmp    0x6401052e
64010526:	mov    eax,DWORD PTR [esi+0x8]
64010529:	sub    eax,ecx
6401052b:	sar    eax,0x2
6401052e:	mov    edx,0x3fffffff
64010533:	sub    edx,eax
64010535:	cmp    edx,ebx
64010537:	jae    0x6401053e
64010539:	call   0x640101f0
6401053e:	test   ecx,ecx
64010540:	jne    0x64010546
64010542:	xor    eax,eax
64010544:	jmp    0x6401054e
64010546:	mov    eax,DWORD PTR [esi+0x8]
64010549:	sub    eax,ecx
6401054b:	sar    eax,0x2
6401054e:	add    eax,ebx
64010550:	cmp    edi,eax
64010552:	push   ebp
64010553:	jae    0x6401060d
64010559:	mov    eax,edi
6401055b:	shr    eax,1
6401055d:	mov    edx,0x3fffffff
64010562:	sub    edx,eax
64010564:	cmp    edx,edi
64010566:	jae    0x6401056c
64010568:	xor    edi,edi
6401056a:	jmp    0x6401056e
6401056c:	add    edi,eax
6401056e:	test   ecx,ecx
64010570:	jne    0x64010576
64010572:	xor    eax,eax
64010574:	jmp    0x6401057e
64010576:	mov    eax,DWORD PTR [esi+0x8]
64010579:	sub    eax,ecx
6401057b:	sar    eax,0x2
6401057e:	add    eax,ebx
64010580:	cmp    edi,eax
64010582:	jae    0x64010596
64010584:	test   ecx,ecx
64010586:	jne    0x6401058c
64010588:	xor    edi,edi
6401058a:	jmp    0x64010594
6401058c:	mov    edi,DWORD PTR [esi+0x8]
6401058f:	sub    edi,ecx
64010591:	sar    edi,0x2
64010594:	add    edi,ebx
64010596:	push   0x0
64010598:	push   edi
64010599:	call   0x6400fde0
6401059e:	mov    ecx,DWORD PTR [esi+0x4]
640105a1:	add    esp,0x8
640105a4:	mov    ebp,eax
640105a6:	mov    eax,DWORD PTR [esp+0x18]
640105aa:	push   ebp
640105ab:	push   eax
640105ac:	push   ecx
640105ad:	mov    ecx,esi
640105af:	call   0x64010170
640105b4:	lea    edx,[esp+0x20]
640105b8:	push   edx
640105b9:	push   ebx
640105ba:	push   eax
640105bb:	mov    ecx,esi
640105bd:	call   0x640101a0
640105c2:	mov    ecx,DWORD PTR [esp+0x18]
640105c6:	push   eax
640105c7:	mov    eax,DWORD PTR [esi+0x8]
640105ca:	push   eax
640105cb:	push   ecx
640105cc:	mov    ecx,esi
640105ce:	call   0x64010170
640105d3:	mov    eax,DWORD PTR [esi+0x4]
640105d6:	test   eax,eax
640105d8:	jne    0x640105de
640105da:	xor    ecx,ecx
640105dc:	jmp    0x640105e6
640105de:	mov    ecx,DWORD PTR [esi+0x8]
640105e1:	sub    ecx,eax
640105e3:	sar    ecx,0x2
640105e6:	add    ebx,ecx
640105e8:	test   eax,eax
640105ea:	je     0x640105f5
640105ec:	push   eax
640105ed:	call   0x64012612
640105f2:	add    esp,0x4
640105f5:	lea    edx,[ebp+edi*4+0x0]
640105f9:	lea    eax,[ebp+ebx*4+0x0]
640105fd:	mov    DWORD PTR [esi+0x4],ebp
64010600:	pop    ebp
64010601:	pop    edi
64010602:	mov    DWORD PTR [esi+0xc],edx
64010605:	mov    DWORD PTR [esi+0x8],eax
64010608:	pop    esi
64010609:	pop    ebx
6401060a:	ret    0x10
6401060d:	mov    ebp,DWORD PTR [esi+0x8]
64010610:	mov    edi,DWORD PTR [esp+0x18]
64010614:	mov    ecx,ebp
64010616:	sub    ecx,edi
64010618:	sar    ecx,0x2
6401061b:	lea    eax,[ebx*4+0x0]
64010622:	cmp    ecx,ebx
64010624:	mov    DWORD PTR [esp+0x1c],eax
64010628:	mov    ecx,esi
6401062a:	jae    0x64010672
6401062c:	add    eax,edi
6401062e:	push   eax
6401062f:	push   ebp
64010630:	push   edi
64010631:	call   0x64010170
64010636:	mov    eax,DWORD PTR [esi+0x8]
64010639:	mov    ecx,eax
6401063b:	sub    ecx,edi
6401063d:	sar    ecx,0x2
64010640:	lea    edx,[esp+0x20]
64010644:	push   edx
64010645:	sub    ebx,ecx
64010647:	push   ebx
64010648:	push   eax
64010649:	mov    ecx,esi
6401064b:	call   0x640101a0
64010650:	mov    eax,DWORD PTR [esp+0x1c]
64010654:	add    DWORD PTR [esi+0x8],eax
64010657:	mov    esi,DWORD PTR [esi+0x8]
6401065a:	lea    edx,[esp+0x20]
6401065e:	push   edx
6401065f:	sub    esi,eax
64010661:	push   esi
64010662:	push   edi
64010663:	call   0x6400fee0
64010668:	add    esp,0xc
6401066b:	pop    ebp
6401066c:	pop    edi
6401066d:	pop    esi
6401066e:	pop    ebx
6401066f:	ret    0x10
64010672:	push   ebp
64010673:	mov    ebx,ebp
64010675:	sub    ebx,eax
64010677:	push   ebp
64010678:	push   ebx
64010679:	call   0x64010170
6401067e:	push   ebp
6401067f:	push   ebx
64010680:	push   edi
64010681:	mov    DWORD PTR [esi+0x8],eax
64010684:	call   0x6400ff00
64010689:	mov    ecx,DWORD PTR [esp+0x28]
6401068d:	lea    eax,[esp+0x2c]
64010691:	push   eax
64010692:	add    ecx,edi
64010694:	push   ecx
64010695:	push   edi
64010696:	call   0x6400fee0
6401069b:	add    esp,0x18
6401069e:	pop    ebp
6401069f:	pop    edi
640106a0:	pop    esi
640106a1:	pop    ebx
640106a2:	ret    0x10
640106a5:	int3   
640106a6:	int3   
640106a7:	int3   
640106a8:	int3   
640106a9:	int3   
640106aa:	int3   
640106ab:	int3   
640106ac:	int3   
640106ad:	int3   
640106ae:	int3   
640106af:	int3   
640106b0:	push   ecx
640106b1:	push   ebx
640106b2:	push   ebp
640106b3:	mov    ebp,DWORD PTR [esp+0x14]
640106b7:	push   esi
640106b8:	mov    esi,ecx
640106ba:	push   edi
640106bb:	mov    edi,DWORD PTR [esi+0x4]
640106be:	test   edi,edi
640106c0:	je     0x640106ce
640106c2:	mov    eax,DWORD PTR [esi+0x8]
640106c5:	mov    ecx,eax
640106c7:	sub    ecx,edi
640106c9:	sar    ecx,0x2
640106cc:	jne    0x640106d2
640106ce:	xor    ebx,ebx
640106d0:	jmp    0x640106f1
640106d2:	cmp    edi,eax
640106d4:	jbe    0x640106db
640106d6:	call   0x640129c8
640106db:	test   ebp,ebp
640106dd:	je     0x640106e3
640106df:	cmp    ebp,esi
640106e1:	je     0x640106e8
640106e3:	call   0x640129c8
640106e8:	mov    ebx,DWORD PTR [esp+0x20]
640106ec:	sub    ebx,edi
640106ee:	sar    ebx,0x2
640106f1:	mov    edx,DWORD PTR [esp+0x24]
640106f5:	mov    eax,DWORD PTR [esp+0x20]
640106f9:	push   edx
640106fa:	push   0x1
640106fc:	push   eax
640106fd:	push   ebp
640106fe:	mov    ecx,esi
64010700:	call   0x640104f0
64010705:	mov    edi,DWORD PTR [esi+0x4]
64010708:	cmp    edi,DWORD PTR [esi+0x8]
6401070b:	jbe    0x64010712
6401070d:	call   0x640129c8
64010712:	mov    DWORD PTR [esp+0x20],edi
64010716:	lea    edi,[edi+ebx*4]
64010719:	cmp    edi,DWORD PTR [esi+0x8]
6401071c:	ja     0x64010723
6401071e:	cmp    edi,DWORD PTR [esi+0x4]
64010721:	jae    0x64010728
64010723:	call   0x640129c8
64010728:	mov    eax,DWORD PTR [esp+0x18]
6401072c:	mov    DWORD PTR [eax+0x4],edi
6401072f:	pop    edi
64010730:	mov    DWORD PTR [eax],esi
64010732:	pop    esi
64010733:	pop    ebp
64010734:	pop    ebx
64010735:	pop    ecx
64010736:	ret    0x10
64010739:	int3   
6401073a:	int3   
6401073b:	int3   
6401073c:	int3   
6401073d:	int3   
6401073e:	int3   
6401073f:	int3   
64010740:	sub    esp,0x8
64010743:	push   esi
64010744:	mov    esi,ecx
64010746:	mov    edx,DWORD PTR [esi+0x4]
64010749:	test   edx,edx
6401074b:	jne    0x64010751
6401074d:	xor    ecx,ecx
6401074f:	jmp    0x64010759
64010751:	mov    ecx,DWORD PTR [esi+0x8]
64010754:	sub    ecx,edx
64010756:	sar    ecx,0x2
64010759:	test   edx,edx
6401075b:	je     0x64010781
6401075d:	mov    eax,DWORD PTR [esi+0xc]
64010760:	sub    eax,edx
64010762:	sar    eax,0x2
64010765:	cmp    ecx,eax
64010767:	jae    0x64010781
64010769:	mov    eax,DWORD PTR [esi+0x8]
6401076c:	mov    ecx,DWORD PTR [esp+0x10]
64010770:	mov    edx,DWORD PTR [ecx]
64010772:	mov    DWORD PTR [eax],edx
64010774:	add    eax,0x4
64010777:	mov    DWORD PTR [esi+0x8],eax
6401077a:	pop    esi
6401077b:	add    esp,0x8
6401077e:	ret    0x4
64010781:	push   edi
64010782:	mov    edi,DWORD PTR [esi+0x8]
64010785:	cmp    edx,edi
64010787:	jbe    0x6401078e
64010789:	call   0x640129c8
6401078e:	mov    eax,DWORD PTR [esp+0x14]
64010792:	push   eax
64010793:	push   edi
64010794:	push   esi
64010795:	lea    ecx,[esp+0x14]
64010799:	push   ecx
6401079a:	mov    ecx,esi
6401079c:	call   0x640106b0
640107a1:	pop    edi
640107a2:	pop    esi
640107a3:	add    esp,0x8
640107a6:	ret    0x4
640107a9:	int3   
640107aa:	int3   
640107ab:	int3   
640107ac:	int3   
640107ad:	int3   
640107ae:	int3   
640107af:	int3   
640107b0:	sub    esp,0x20
640107b3:	mov    eax,DWORD PTR [ecx]
640107b5:	mov    edx,DWORD PTR [ecx+0x4]
640107b8:	mov    DWORD PTR [esp],eax
640107bb:	mov    eax,DWORD PTR [ecx+0x8]
640107be:	mov    ecx,DWORD PTR [ecx+0xc]
640107c1:	mov    DWORD PTR [esp+0x4],edx
640107c5:	lea    edx,[esp+0x10]
640107c9:	mov    DWORD PTR [esp+0xc],ecx
640107cd:	push   edx
640107ce:	lea    ecx,[esp+0x4]
640107d2:	mov    DWORD PTR [esp+0xc],eax
640107d6:	call   0x6400fc70
640107db:	mov    ecx,DWORD PTR [esp+0x24]
640107df:	lea    edx,[ecx+0x1c]
640107e2:	mov    DWORD PTR [esp],edx
640107e5:	mov    edx,DWORD PTR [eax]
640107e7:	mov    DWORD PTR [esp+0x4],ecx
640107eb:	sub    esp,0x10
640107ee:	mov    ecx,esp
640107f0:	mov    DWORD PTR [ecx],edx
640107f2:	mov    edx,DWORD PTR [eax+0x4]
640107f5:	mov    DWORD PTR [ecx+0x4],edx
640107f8:	mov    edx,DWORD PTR [eax+0x8]
640107fb:	mov    eax,DWORD PTR [eax+0xc]
640107fe:	mov    DWORD PTR [ecx+0x8],edx
64010801:	mov    DWORD PTR [ecx+0xc],eax
64010804:	lea    ecx,[esp+0x10]
64010808:	call   0x64010490
6401080d:	add    esp,0x20
64010810:	ret    0x4
64010813:	int3   
64010814:	int3   
64010815:	int3   
64010816:	int3   
64010817:	int3   
64010818:	int3   
64010819:	int3   
6401081a:	int3   
6401081b:	int3   
6401081c:	int3   
6401081d:	int3   
6401081e:	int3   
6401081f:	int3   
64010820:	push   ebp
64010821:	lea    ebp,[esp-0x74]
64010825:	sub    esp,0x74
64010828:	push   0xffffffff
6401082a:	push   0x64022568
6401082f:	mov    eax,fs:0x0
64010835:	push   eax
64010836:	sub    esp,0x70
64010839:	mov    eax,ds:0x6402d09c
6401083e:	xor    eax,ebp
64010840:	mov    DWORD PTR [ebp+0x70],eax
64010843:	push   ebx
64010844:	push   esi
64010845:	push   edi
64010846:	push   eax
64010847:	lea    eax,[ebp-0xc]
6401084a:	mov    fs:0x0,eax
64010850:	mov    DWORD PTR [ebp-0x10],esp
64010853:	mov    eax,DWORD PTR [ebp+0x7c]
64010856:	mov    ecx,0xf
6401085b:	xor    edi,edi
6401085d:	mov    DWORD PTR [ebp+0x50],ecx
64010860:	mov    DWORD PTR [ebp+0x4c],edi
64010863:	mov    BYTE PTR [ebp+0x3c],0x0
64010867:	mov    DWORD PTR [ebp+0x6c],ecx
6401086a:	mov    DWORD PTR [ebp+0x68],edi
6401086d:	mov    BYTE PTR [ebp+0x58],0x0
64010871:	mov    DWORD PTR [ebp-0x4],edi
64010874:	mov    DWORD PTR [ebp-0x38],edi
64010877:	mov    DWORD PTR [ebp-0x28],edi
6401087a:	mov    ecx,DWORD PTR [eax+0x14]
6401087d:	mov    ebx,0x10
64010882:	cmp    DWORD PTR [eax+0x18],ebx
64010885:	mov    BYTE PTR [ebp-0x4],0x2
64010889:	jb     0x64010890
6401088b:	mov    eax,DWORD PTR [eax+0x4]
6401088e:	jmp    0x64010893
64010890:	add    eax,0x4
64010893:	push   edi
64010894:	push   ecx
64010895:	push   eax
64010896:	lea    esi,[ebp-0x38]
64010899:	call   0x640102c0
6401089e:	add    esp,0xc
640108a1:	lea    eax,[ebp+0x38]
640108a4:	push   eax
640108a5:	mov    ecx,esi
640108a7:	call   0x640107b0
640108ac:	mov    DWORD PTR [ebp-0x4],0x1
640108b3:	call   DWORD PTR ds:0x6402d06c
640108b9:	cmp    DWORD PTR [ebp+0x6c],ebx
640108bc:	mov    DWORD PTR [ebp+0x0],eax
640108bf:	mov    BYTE PTR [ebp-0x4],0x4
640108c3:	jb     0x640108d0
640108c5:	mov    ebx,DWORD PTR [ebp+0x58]
640108c8:	cmp    ebx,edi
640108ca:	jne    0x640108d3
640108cc:	xor    eax,eax
640108ce:	jmp    0x6401091a
640108d0:	lea    ebx,[ebp+0x58]
640108d3:	push   ebx
640108d4:	call   DWORD PTR ds:0x64025058
640108da:	mov    edi,eax
640108dc:	add    edi,0x1
640108df:	cmp    edi,0x3fffffff
640108e5:	jg     0x64010916
640108e7:	lea    eax,[edi+edi*1]
640108ea:	call   0x640135f0
640108ef:	mov    esi,esp
640108f1:	test   esi,esi
640108f3:	mov    DWORD PTR [ebp-0x10],esp
640108f6:	je     0x64010916
640108f8:	mov    ecx,DWORD PTR [ebp+0x0]
640108fb:	push   edi
640108fc:	push   esi
640108fd:	push   0xffffffff
640108ff:	push   ebx
64010900:	push   0x0
64010902:	push   ecx
64010903:	mov    WORD PTR [esi],0x0
64010908:	call   DWORD PTR ds:0x64025024
6401090e:	neg    eax
64010910:	sbb    eax,eax
64010912:	and    eax,esi
64010914:	jmp    0x64010918
64010916:	xor    eax,eax
64010918:	xor    edi,edi
6401091a:	push   eax
6401091b:	lea    ecx,[ebp+0x10]
6401091e:	call   0x640025a0
64010923:	mov    edx,DWORD PTR ds:0x6402e540
64010929:	mov    eax,DWORD PTR [edx+0xc]
6401092c:	mov    ecx,0x6402e540
64010931:	mov    BYTE PTR [ebp-0x4],0x5
64010935:	call   eax
64010937:	add    eax,0x10
6401093a:	mov    DWORD PTR [ebp+0x14],eax
6401093d:	lea    ecx,[ebp+0x14]
64010940:	push   ecx
64010941:	lea    edx,[ebp+0x10]
64010944:	push   edx
64010945:	lea    eax,[ebp+0x18]
64010948:	push   eax
64010949:	mov    BYTE PTR [ebp-0x4],0x6
6401094d:	call   0x640021b0
64010952:	add    esp,0xc
64010955:	lea    ecx,[ebp+0x18]
64010958:	push   0x640276c8
6401095d:	push   ecx
6401095e:	mov    BYTE PTR [ebp-0x4],0x7
64010962:	call   0x6400fe80
64010967:	add    esp,0x8
6401096a:	test   al,al
6401096c:	je     0x64010b44
64010972:	mov    esi,DWORD PTR [ebp+0x14]
64010975:	call   0x6400d230
6401097a:	push   esi
6401097b:	call   eax
6401097d:	cmp    DWORD PTR [ebp+0x50],0x10
64010981:	mov    edx,DWORD PTR [ebp+0x4c]
64010984:	mov    eax,DWORD PTR [ebp+0x3c]
64010987:	push   edx
64010988:	jae    0x6401098d
6401098a:	lea    eax,[ebp+0x3c]
6401098d:	push   eax
6401098e:	mov    eax,DWORD PTR [ebp+0x18]
64010991:	push   ecx
64010992:	add    eax,0xfffffff0
64010995:	mov    DWORD PTR [ebp+0xc],esp
64010998:	mov    esi,esp
6401099a:	push   eax
6401099b:	call   0x640028b0
640109a0:	add    eax,0x10
640109a3:	add    esp,0x4
640109a6:	mov    DWORD PTR [esi],eax
640109a8:	call   0x640023f0
640109ad:	add    esp,0xc
640109b0:	lea    eax,[ebp+0xc]
640109b3:	push   edi
640109b4:	push   eax
640109b5:	call   0x64003490
640109ba:	add    esp,0x8
640109bd:	push   0x6402546c
640109c2:	push   eax
640109c3:	lea    ecx,[ebp+0x8]
640109c6:	push   ecx
640109c7:	mov    BYTE PTR [ebp-0x4],0x8
640109cb:	call   0x64010090
640109d0:	add    esp,0xc
640109d3:	mov    eax,DWORD PTR [ebp+0xc]
640109d6:	add    eax,0xfffffff0
640109d9:	mov    BYTE PTR [ebp-0x4],0xa
640109dd:	lea    edx,[eax+0xc]
640109e0:	or     ecx,0xffffffff
640109e3:	lock xadd DWORD PTR [edx],ecx
640109e7:	dec    ecx
640109e8:	test   ecx,ecx
640109ea:	jg     0x640109f6
640109ec:	mov    ecx,DWORD PTR [eax]
640109ee:	mov    edx,DWORD PTR [ecx]
640109f0:	push   eax
640109f1:	mov    eax,DWORD PTR [edx+0x4]
640109f4:	call   eax
640109f6:	mov    eax,DWORD PTR [ebp+0x18]
640109f9:	cmp    eax,edi
640109fb:	mov    ebx,eax
640109fd:	jne    0x64010a03
640109ff:	xor    eax,eax
64010a01:	jmp    0x64010a33
64010a03:	push   eax
64010a04:	call   DWORD PTR ds:0x64025054
64010a0a:	add    eax,0x1
64010a0d:	cmp    eax,0x3fffffff
64010a12:	jle    0x64010a18
64010a14:	xor    eax,eax
64010a16:	jmp    0x64010a33
64010a18:	lea    esi,[eax+eax*1]
64010a1b:	mov    eax,esi
64010a1d:	call   0x640135f0
64010a22:	mov    ecx,DWORD PTR [ebp+0x0]
64010a25:	mov    DWORD PTR [ebp-0x10],esp
64010a28:	mov    eax,esp
64010a2a:	push   ecx
64010a2b:	push   esi
64010a2c:	push   ebx
64010a2d:	push   eax
64010a2e:	call   0x64002b90
64010a33:	push   eax
64010a34:	lea    ecx,[ebp+0x4]
64010a37:	call   0x64005510
64010a3c:	lea    edx,[ebp+0x8]
64010a3f:	push   edx
64010a40:	lea    eax,[ebp+0x4]
64010a43:	push   eax
64010a44:	mov    BYTE PTR [ebp-0x4],0xb
64010a48:	call   0x64002540
64010a4d:	mov    eax,DWORD PTR [ebp+0x4]
64010a50:	add    eax,0xfffffff0
64010a53:	add    esp,0x8
64010a56:	mov    BYTE PTR [ebp-0x4],0xa
64010a5a:	lea    ecx,[eax+0xc]
64010a5d:	or     edx,0xffffffff
64010a60:	lock xadd DWORD PTR [ecx],edx
64010a64:	dec    edx
64010a65:	test   edx,edx
64010a67:	jg     0x64010a73
64010a69:	mov    ecx,DWORD PTR [eax]
64010a6b:	mov    edx,DWORD PTR [ecx]
64010a6d:	push   eax
64010a6e:	mov    eax,DWORD PTR [edx+0x4]
64010a71:	call   eax
64010a73:	push   0x40
64010a75:	xor    eax,eax
64010a77:	lea    ecx,[ebp-0x78]
64010a7a:	push   edi
64010a7b:	push   ecx
64010a7c:	mov    DWORD PTR [ebp-0x20],edi
64010a7f:	mov    DWORD PTR [ebp-0x1c],eax
64010a82:	mov    DWORD PTR [ebp-0x18],eax
64010a85:	mov    DWORD PTR [ebp-0x14],eax
64010a88:	call   0x64013570
64010a8d:	lea    edx,[ebp+0x1c]
64010a90:	push   edx
64010a91:	mov    DWORD PTR [ebp-0x7c],0x44
64010a98:	call   0x640014a0
64010a9d:	add    esp,0x10
64010aa0:	cmp    DWORD PTR [ebp+0x34],0x10
64010aa4:	mov    ebx,DWORD PTR [ebp+0x20]
64010aa7:	mov    BYTE PTR [ebp-0x4],0xc
64010aab:	jae    0x64010ab0
64010aad:	lea    ebx,[ebp+0x20]
64010ab0:	mov    esi,DWORD PTR [ebp+0x18]
64010ab3:	call   0x6400d070
64010ab8:	lea    ecx,[ebp-0x20]
64010abb:	push   ecx
64010abc:	lea    edx,[ebp-0x7c]
64010abf:	push   edx
64010ac0:	push   edi
64010ac1:	push   ebx
64010ac2:	push   0x400
64010ac7:	push   0x1
64010ac9:	push   edi
64010aca:	push   edi
64010acb:	push   edi
64010acc:	push   esi
64010acd:	call   eax
64010acf:	cmp    eax,edi
64010ad1:	je     0x64010ae5
64010ad3:	mov    eax,DWORD PTR [ebp-0x1c]
64010ad6:	mov    esi,DWORD PTR ds:0x64025040
64010adc:	push   eax
64010add:	call   esi
64010adf:	mov    ecx,DWORD PTR [ebp-0x20]
64010ae2:	push   ecx
64010ae3:	call   esi
64010ae5:	mov    esi,DWORD PTR [ebp+0x18]
64010ae8:	call   0x6400d150
64010aed:	push   0x4
64010aef:	push   edi
64010af0:	push   esi
64010af1:	call   eax
64010af3:	mov    esi,DWORD PTR [ebp+0x14]
64010af6:	call   0x6400d150
64010afb:	push   0x4
64010afd:	push   edi
64010afe:	push   esi
64010aff:	call   eax
64010b01:	cmp    DWORD PTR [ebp+0x34],0x10
64010b05:	jb     0x64010b13
64010b07:	mov    edx,DWORD PTR [ebp+0x20]
64010b0a:	push   edx
64010b0b:	call   0x64012612
64010b10:	add    esp,0x4
64010b13:	mov    eax,DWORD PTR [ebp+0x8]
64010b16:	add    eax,0xfffffff0
64010b19:	mov    DWORD PTR [ebp+0x34],0xf
64010b20:	mov    DWORD PTR [ebp+0x30],edi
64010b23:	mov    BYTE PTR [ebp+0x20],0x0
64010b27:	mov    BYTE PTR [ebp-0x4],0x7
64010b2b:	lea    ecx,[eax+0xc]
64010b2e:	or     edx,0xffffffff
64010b31:	lock xadd DWORD PTR [ecx],edx
64010b35:	dec    edx
64010b36:	test   edx,edx
64010b38:	jg     0x64010b44
64010b3a:	mov    ecx,DWORD PTR [eax]
64010b3c:	mov    edx,DWORD PTR [ecx]
64010b3e:	push   eax
64010b3f:	mov    eax,DWORD PTR [edx+0x4]
64010b42:	call   eax
64010b44:	mov    eax,DWORD PTR [ebp+0x18]
64010b47:	add    eax,0xfffffff0
64010b4a:	mov    BYTE PTR [ebp-0x4],0x6
64010b4e:	lea    ecx,[eax+0xc]
64010b51:	or     edx,0xffffffff
64010b54:	lock xadd DWORD PTR [ecx],edx
64010b58:	dec    edx
64010b59:	test   edx,edx
64010b5b:	jg     0x64010b67
64010b5d:	mov    ecx,DWORD PTR [eax]
64010b5f:	mov    edx,DWORD PTR [ecx]
64010b61:	push   eax
64010b62:	mov    eax,DWORD PTR [edx+0x4]
64010b65:	call   eax
64010b67:	mov    eax,DWORD PTR [ebp+0x14]
64010b6a:	add    eax,0xfffffff0
64010b6d:	mov    BYTE PTR [ebp-0x4],0x5
64010b71:	lea    ecx,[eax+0xc]
64010b74:	or     edx,0xffffffff
64010b77:	lock xadd DWORD PTR [ecx],edx
64010b7b:	dec    edx
64010b7c:	test   edx,edx
64010b7e:	jg     0x64010b8a
64010b80:	mov    ecx,DWORD PTR [eax]
64010b82:	mov    edx,DWORD PTR [ecx]
64010b84:	push   eax
64010b85:	mov    eax,DWORD PTR [edx+0x4]
64010b88:	call   eax
64010b8a:	mov    eax,DWORD PTR [ebp+0x10]
64010b8d:	add    eax,0xfffffff0
64010b90:	mov    BYTE PTR [ebp-0x4],0x4
64010b94:	lea    ecx,[eax+0xc]
64010b97:	or     edx,0xffffffff
64010b9a:	lock xadd DWORD PTR [ecx],edx
64010b9e:	dec    edx
64010b9f:	test   edx,edx
64010ba1:	jg     0x64010bb7
64010ba3:	mov    ecx,DWORD PTR [eax]
64010ba5:	mov    edx,DWORD PTR [ecx]
64010ba7:	push   eax
64010ba8:	mov    eax,DWORD PTR [edx+0x4]
64010bab:	call   eax
64010bad:	jmp    0x64010bb7
64010baf:	mov    eax,0x64010bb5
64010bb4:	ret    
64010bb5:	xor    edi,edi
64010bb7:	mov    esi,DWORD PTR [ebp-0x28]
64010bba:	cmp    esi,edi
64010bbc:	je     0x64010bcd
64010bbe:	push   esi
64010bbf:	call   0x6400eff0
64010bc4:	push   esi
64010bc5:	call   0x64012612
64010bca:	add    esp,0x8
64010bcd:	mov    esi,0x10
64010bd2:	cmp    DWORD PTR [ebp+0x6c],esi
64010bd5:	jb     0x64010be3
64010bd7:	mov    ecx,DWORD PTR [ebp+0x58]
64010bda:	push   ecx
64010bdb:	call   0x64012612
64010be0:	add    esp,0x4
64010be3:	cmp    DWORD PTR [ebp+0x50],esi
64010be6:	mov    DWORD PTR [ebp+0x6c],0xf
64010bed:	mov    DWORD PTR [ebp+0x68],edi
64010bf0:	mov    BYTE PTR [ebp+0x58],0x0
64010bf4:	jb     0x64010c1a
64010bf6:	mov    edx,DWORD PTR [ebp+0x3c]
64010bf9:	push   edx
64010bfa:	call   0x64012612
64010bff:	add    esp,0x4
64010c02:	jmp    0x64010c1a
64010c04:	mov    eax,0x64010c0a
64010c09:	ret    
64010c0a:	lea    ecx,[ebp-0x38]
64010c0d:	call   0x6400fe60
64010c12:	lea    ecx,[ebp+0x38]
64010c15:	call   0x64006910
64010c1a:	lea    esp,[ebp-0x8c]
64010c20:	mov    ecx,DWORD PTR [ebp-0xc]
64010c23:	mov    DWORD PTR fs:0x0,ecx
64010c2a:	pop    ecx
64010c2b:	pop    edi
64010c2c:	pop    esi
64010c2d:	pop    ebx
64010c2e:	mov    ecx,DWORD PTR [ebp+0x70]
64010c31:	xor    ecx,ebp
64010c33:	call   0x64012e6c
64010c38:	add    ebp,0x74
64010c3b:	mov    esp,ebp
64010c3d:	pop    ebp
64010c3e:	ret    
64010c3f:	int3   
64010c40:	push   ecx
64010c41:	push   esi
64010c42:	mov    esi,ecx
64010c44:	mov    eax,DWORD PTR [esi+0x4]
64010c47:	test   eax,eax
64010c49:	je     0x64010c67
64010c4b:	mov    ecx,DWORD PTR [esp+0x4]
64010c4f:	mov    edx,DWORD PTR [esi+0x8]
64010c52:	push   ecx
64010c53:	push   esi
64010c54:	push   edx
64010c55:	push   eax
64010c56:	call   0x6400b270
64010c5b:	mov    eax,DWORD PTR [esi+0x4]
64010c5e:	push   eax
64010c5f:	call   0x64012612
64010c64:	add    esp,0x14
64010c67:	mov    DWORD PTR [esi+0x4],0x0
64010c6e:	mov    DWORD PTR [esi+0x8],0x0
64010c75:	mov    DWORD PTR [esi+0xc],0x0
64010c7c:	pop    esi
64010c7d:	pop    ecx
64010c7e:	ret    
64010c7f:	int3   
64010c80:	push   0xffffffff
64010c82:	push   0x6402259e
64010c87:	mov    eax,fs:0x0
64010c8d:	push   eax
64010c8e:	push   ecx
64010c8f:	push   ebx
64010c90:	push   esi
64010c91:	push   edi
64010c92:	mov    eax,ds:0x6402d09c
64010c97:	xor    eax,esp
64010c99:	push   eax
64010c9a:	lea    eax,[esp+0x14]
64010c9e:	mov    fs:0x0,eax
64010ca4:	mov    eax,0x1
64010ca9:	test   BYTE PTR ds:0x6402e4c8,al
64010caf:	jne    0x64010cea
64010cb1:	or     DWORD PTR ds:0x6402e4c8,eax
64010cb7:	push   0x64024350
64010cbc:	mov    DWORD PTR ds:0x6402e4bc,0x0
64010cc6:	mov    DWORD PTR ds:0x6402e4c0,0x0
64010cd0:	mov    DWORD PTR ds:0x6402e4c4,0x0
64010cda:	call   0x64012f9f
64010cdf:	add    esp,0x4
64010ce2:	mov    DWORD PTR [esp+0x1c],0xffffffff
64010cea:	mov    esi,DWORD PTR ds:0x6402e4bc
64010cf0:	test   esi,esi
64010cf2:	je     0x64010d07
64010cf4:	mov    edi,DWORD PTR ds:0x6402e4c0
64010cfa:	mov    eax,edi
64010cfc:	sub    eax,esi
64010cfe:	sar    eax,0x2
64010d01:	jne    0x64010e1d
64010d07:	push   0x64025570
64010d0c:	push   0xc
64010d0e:	push   0x64025560
64010d13:	call   0x640057b0
64010d18:	mov    esi,DWORD PTR ds:0x640251c8
64010d1e:	add    esp,0xc
64010d21:	push   eax
64010d22:	call   esi
64010d24:	lea    ecx,[esp+0x10]
64010d28:	push   ecx
64010d29:	mov    ecx,0x6402e4b8
64010d2e:	mov    DWORD PTR [esp+0x14],eax
64010d32:	call   0x64010740
64010d37:	push   0x64025534
64010d3c:	push   0xc
64010d3e:	push   0x64025524
64010d43:	call   0x640057b0
64010d48:	add    esp,0xc
64010d4b:	push   eax
64010d4c:	call   esi
64010d4e:	lea    edx,[esp+0x10]
64010d52:	push   edx
64010d53:	mov    ecx,0x6402e4b8
64010d58:	mov    DWORD PTR [esp+0x14],eax
64010d5c:	call   0x64010740
64010d61:	push   0x640254fc
64010d66:	push   0xc
64010d68:	push   0x64025524
64010d6d:	call   0x640057b0
64010d72:	add    esp,0xc
64010d75:	push   eax
64010d76:	call   esi
64010d78:	mov    DWORD PTR [esp+0x10],eax
64010d7c:	lea    eax,[esp+0x10]
64010d80:	push   eax
64010d81:	mov    ecx,0x6402e4b8
64010d86:	call   0x64010740
64010d8b:	push   0x640254cc
64010d90:	push   0xc
64010d92:	push   0x640254bc
64010d97:	call   0x640057b0
64010d9c:	add    esp,0xc
64010d9f:	push   eax
64010da0:	call   esi
64010da2:	lea    ecx,[esp+0x10]
64010da6:	push   ecx
64010da7:	mov    ecx,0x6402e4b8
64010dac:	mov    DWORD PTR [esp+0x14],eax
64010db0:	call   0x64010740
64010db5:	push   0x64025484
64010dba:	push   0xc
64010dbc:	push   0x640254bc
64010dc1:	call   0x640057b0
64010dc6:	add    esp,0xc
64010dc9:	push   eax
64010dca:	call   esi
64010dcc:	lea    edx,[esp+0x10]
64010dd0:	push   edx
64010dd1:	mov    ecx,0x6402e4b8
64010dd6:	mov    DWORD PTR [esp+0x14],eax
64010dda:	call   0x64010740
64010ddf:	call   DWORD PTR ds:0x6402505c
64010de5:	push   eax
64010de6:	call   0x6401361c
64010deb:	mov    eax,ds:0x6402e4bc
64010df0:	add    esp,0x4
64010df3:	test   eax,eax
64010df5:	jne    0x64010dfb
64010df7:	xor    esi,esi
64010df9:	jmp    0x64010e06
64010dfb:	mov    esi,DWORD PTR ds:0x6402e4c0
64010e01:	sub    esi,eax
64010e03:	sar    esi,0x2
64010e06:	call   0x64013629
64010e0b:	mov    edi,DWORD PTR ds:0x6402e4c0
64010e11:	xor    edx,edx
64010e13:	div    esi
64010e15:	mov    esi,DWORD PTR ds:0x6402e4bc
64010e1b:	jmp    0x64010e23
64010e1d:	mov    edx,DWORD PTR ds:0x6402e4b4
64010e23:	test   esi,esi
64010e25:	jne    0x64010e2b
64010e27:	xor    ecx,ecx
64010e29:	jmp    0x64010e32
64010e2b:	mov    ecx,edi
64010e2d:	sub    ecx,esi
64010e2f:	sar    ecx,0x2
64010e32:	lea    eax,[edx+0x1]
64010e35:	xor    edx,edx
64010e37:	div    ecx
64010e39:	test   esi,esi
64010e3b:	mov    DWORD PTR ds:0x6402e4b4,edx
64010e41:	mov    ebx,edx
64010e43:	je     0x64010e4e
64010e45:	sub    edi,esi
64010e47:	sar    edi,0x2
64010e4a:	cmp    edx,edi
64010e4c:	jb     0x64010e6e
64010e4e:	call   0x640129c8
64010e53:	mov    eax,ds:0x6402e4bc
64010e58:	mov    eax,DWORD PTR [eax+ebx*4]
64010e5b:	mov    ecx,DWORD PTR [esp+0x14]
64010e5f:	mov    DWORD PTR fs:0x0,ecx
64010e66:	pop    ecx
64010e67:	pop    edi
64010e68:	pop    esi
64010e69:	pop    ebx
64010e6a:	add    esp,0x10
64010e6d:	ret    
64010e6e:	mov    eax,DWORD PTR [esi+ebx*4]
64010e71:	mov    ecx,DWORD PTR [esp+0x14]
64010e75:	mov    DWORD PTR fs:0x0,ecx
64010e7c:	pop    ecx
64010e7d:	pop    edi
64010e7e:	pop    esi
64010e7f:	pop    ebx
64010e80:	add    esp,0x10
64010e83:	ret    
64010e84:	int3   
64010e85:	int3   
64010e86:	int3   
64010e87:	int3   
64010e88:	int3   
64010e89:	int3   
64010e8a:	int3   
64010e8b:	int3   
64010e8c:	int3   
64010e8d:	int3   
64010e8e:	int3   
64010e8f:	int3   
64010e90:	push   ebp
64010e91:	mov    ebp,esp
64010e93:	push   0xffffffff
64010e95:	push   0x640225c8
64010e9a:	mov    eax,fs:0x0
64010ea0:	push   eax
64010ea1:	sub    esp,0x8
64010ea4:	push   ebx
64010ea5:	push   esi
64010ea6:	push   edi
64010ea7:	mov    eax,ds:0x6402d09c
64010eac:	xor    eax,ebp
64010eae:	push   eax
64010eaf:	lea    eax,[ebp-0xc]
64010eb2:	mov    fs:0x0,eax
64010eb8:	mov    DWORD PTR [ebp-0x10],esp
64010ebb:	xor    ebx,ebx
64010ebd:	mov    DWORD PTR [ebp-0x4],ebx
64010ec0:	call   0x64010c80
64010ec5:	lea    ecx,[ebp-0x14]
64010ec8:	mov    edi,eax
64010eca:	call   0x640093c0
64010ecf:	mov    eax,DWORD PTR [ebp+0x8]
64010ed2:	cmp    DWORD PTR [eax+0x18],0x10
64010ed6:	mov    ecx,DWORD PTR [eax+0x14]
64010ed9:	mov    BYTE PTR [ebp-0x4],0x1
64010edd:	jb     0x64010ee4
64010edf:	mov    eax,DWORD PTR [eax+0x4]
64010ee2:	jmp    0x64010ee7
64010ee4:	add    eax,0x4
64010ee7:	mov    esi,DWORD PTR [ebp+0xc]
64010eea:	push   0xffffffff
64010eec:	push   esi
64010eed:	add    ecx,0x1
64010ef0:	push   ecx
64010ef1:	push   eax
64010ef2:	push   edi
64010ef3:	lea    ecx,[ebp-0x14]
64010ef6:	call   0x640093e0
64010efb:	cmp    al,bl
64010efd:	je     0x64010f1e
64010eff:	lea    ecx,[ebp-0x14]
64010f02:	mov    BYTE PTR [ebp-0x4],bl
64010f05:	call   0x640093d0
64010f0a:	mov    al,0x1
64010f0c:	mov    ecx,DWORD PTR [ebp-0xc]
64010f0f:	mov    DWORD PTR fs:0x0,ecx
64010f16:	pop    ecx
64010f17:	pop    edi
64010f18:	pop    esi
64010f19:	pop    ebx
64010f1a:	mov    esp,ebp
64010f1c:	pop    ebp
64010f1d:	ret    
64010f1e:	push   ebx
64010f1f:	push   0x640276ca
64010f24:	mov    ecx,esi
64010f26:	call   0x64001860
64010f2b:	lea    ecx,[ebp-0x14]
64010f2e:	mov    BYTE PTR [ebp-0x4],bl
64010f31:	call   0x640093d0
64010f36:	xor    al,al
64010f38:	mov    ecx,DWORD PTR [ebp-0xc]
64010f3b:	mov    DWORD PTR fs:0x0,ecx
64010f42:	pop    ecx
64010f43:	pop    edi
64010f44:	pop    esi
64010f45:	pop    ebx
64010f46:	mov    esp,ebp
64010f48:	pop    ebp
64010f49:	ret    
64010f4a:	mov    eax,0x64010f36
64010f4f:	ret    
64010f50:	push   ecx
64010f51:	push   esi
64010f52:	push   0x640255c8
64010f57:	push   0x17
64010f59:	push   0x640255b0
64010f5e:	mov    DWORD PTR [esp+0x10],0x0
64010f66:	call   0x640057b0
64010f6b:	mov    esi,DWORD PTR [esp+0x18]
64010f6f:	add    esp,0xc
64010f72:	push   eax
64010f73:	mov    ecx,esi
64010f75:	call   0x64005510
64010f7a:	mov    eax,esi
64010f7c:	pop    esi
64010f7d:	pop    ecx
64010f7e:	ret    
64010f7f:	int3   
64010f80:	push   0xffffffff
64010f82:	push   0x640225f8
64010f87:	mov    eax,fs:0x0
64010f8d:	push   eax
64010f8e:	push   ecx
64010f8f:	push   esi
64010f90:	mov    eax,ds:0x6402d09c
64010f95:	xor    eax,esp
64010f97:	push   eax
64010f98:	lea    eax,[esp+0xc]
64010f9c:	mov    fs:0x0,eax
64010fa2:	lea    eax,[esp+0x8]
64010fa6:	push   eax
64010fa7:	call   0x64010f50
64010fac:	add    esp,0x4
64010faf:	mov    eax,DWORD PTR [eax]
64010fb1:	push   eax
64010fb2:	push   0x0
64010fb4:	mov    DWORD PTR [esp+0x1c],0x0
64010fbc:	call   0x64005410
64010fc1:	push   eax
64010fc2:	call   DWORD PTR ds:0x64025064
64010fc8:	mov    esi,eax
64010fca:	mov    eax,DWORD PTR [esp+0x8]
64010fce:	add    eax,0xfffffff0
64010fd1:	mov    DWORD PTR [esp+0x14],0xffffffff
64010fd9:	lea    ecx,[eax+0xc]
64010fdc:	or     edx,0xffffffff
64010fdf:	lock xadd DWORD PTR [ecx],edx
64010fe3:	dec    edx
64010fe4:	test   edx,edx
64010fe6:	jg     0x64010ff2
64010fe8:	mov    ecx,DWORD PTR [eax]
64010fea:	mov    edx,DWORD PTR [ecx]
64010fec:	push   eax
64010fed:	mov    eax,DWORD PTR [edx+0x4]
64010ff0:	call   eax
64010ff2:	test   esi,esi
64010ff4:	jne    0x64011009
64010ff6:	xor    al,al
64010ff8:	mov    ecx,DWORD PTR [esp+0xc]
64010ffc:	mov    DWORD PTR fs:0x0,ecx
64011003:	pop    ecx
64011004:	pop    esi
64011005:	add    esp,0x10
64011008:	ret    
64011009:	push   0x0
6401100b:	push   esi
6401100c:	call   DWORD PTR ds:0x640250b0
64011012:	test   eax,eax
64011014:	sete   al
64011017:	mov    ecx,DWORD PTR [esp+0xc]
6401101b:	mov    DWORD PTR fs:0x0,ecx
64011022:	pop    ecx
64011023:	pop    esi
64011024:	add    esp,0x10
64011027:	ret    
64011028:	int3   
64011029:	int3   
6401102a:	int3   
6401102b:	int3   
6401102c:	int3   
6401102d:	int3   
6401102e:	int3   
6401102f:	int3   
64011030:	push   0xffffffff
64011032:	push   0x64022630
64011037:	mov    eax,fs:0x0
6401103d:	push   eax
6401103e:	sub    esp,0x8
64011041:	push   ebx
64011042:	push   esi
64011043:	push   edi
64011044:	mov    eax,ds:0x6402d09c
64011049:	xor    eax,esp
6401104b:	push   eax
6401104c:	lea    eax,[esp+0x18]
64011050:	mov    fs:0x0,eax
64011056:	xor    ebx,ebx
64011058:	mov    DWORD PTR [esp+0x14],ebx
6401105c:	push   0x64025620
64011061:	push   0xf
64011063:	push   0x64025600
64011068:	mov    DWORD PTR [esp+0x2c],ebx
6401106c:	call   0x640059b0
64011071:	add    esp,0xc
64011074:	push   eax
64011075:	lea    ecx,[esp+0x14]
64011079:	call   0x640025a0
6401107e:	mov    eax,DWORD PTR [esp+0x10]
64011082:	push   ebx
64011083:	push   ebx
64011084:	push   0x3
64011086:	push   ebx
64011087:	push   ebx
64011088:	push   0xc0000000
6401108d:	push   eax
6401108e:	mov    BYTE PTR [esp+0x3c],0x1
64011093:	call   0x6400d310
64011098:	call   eax
6401109a:	mov    esi,eax
6401109c:	mov    eax,DWORD PTR [esp+0x10]
640110a0:	add    eax,0xfffffff0
640110a3:	mov    DWORD PTR [esp+0x14],esi
640110a7:	mov    BYTE PTR [esp+0x20],bl
640110ab:	or     edx,0xffffffff
640110ae:	lea    ecx,[eax+0xc]
640110b1:	lock xadd DWORD PTR [ecx],edx
640110b5:	dec    edx
640110b6:	cmp    esi,0xffffffff
640110b9:	je     0x640110f8
640110bb:	test   edx,edx
640110bd:	jg     0x640110c9
640110bf:	mov    ecx,DWORD PTR [eax]
640110c1:	mov    edx,DWORD PTR [ecx]
640110c3:	push   eax
640110c4:	mov    eax,DWORD PTR [edx+0x4]
640110c7:	call   eax
640110c9:	cmp    esi,ebx
640110cb:	je     0x640110e3
640110cd:	call   DWORD PTR ds:0x64025044
640110d3:	push   esi
640110d4:	mov    edi,eax
640110d6:	call   DWORD PTR ds:0x64025040
640110dc:	push   edi
640110dd:	call   DWORD PTR ds:0x64025060
640110e3:	mov    al,0x1
640110e5:	mov    ecx,DWORD PTR [esp+0x18]
640110e9:	mov    DWORD PTR fs:0x0,ecx
640110f0:	pop    ecx
640110f1:	pop    edi
640110f2:	pop    esi
640110f3:	pop    ebx
640110f4:	add    esp,0x14
640110f7:	ret    
640110f8:	test   edx,edx
640110fa:	jg     0x64011106
640110fc:	mov    ecx,DWORD PTR [eax]
640110fe:	mov    edx,DWORD PTR [ecx]
64011100:	push   eax
64011101:	mov    eax,DWORD PTR [edx+0x4]
64011104:	call   eax
64011106:	call   DWORD PTR ds:0x64025044
6401110c:	push   0xffffffff
6401110e:	mov    esi,eax
64011110:	call   DWORD PTR ds:0x64025040
64011116:	push   esi
64011117:	call   DWORD PTR ds:0x64025060
6401111d:	xor    al,al
6401111f:	mov    ecx,DWORD PTR [esp+0x18]
64011123:	mov    DWORD PTR fs:0x0,ecx
6401112a:	pop    ecx
6401112b:	pop    edi
6401112c:	pop    esi
6401112d:	pop    ebx
6401112e:	add    esp,0x14
64011131:	ret    
64011132:	int3   
64011133:	int3   
64011134:	int3   
64011135:	int3   
64011136:	int3   
64011137:	int3   
64011138:	int3   
64011139:	int3   
6401113a:	int3   
6401113b:	int3   
6401113c:	int3   
6401113d:	int3   
6401113e:	int3   
6401113f:	int3   
64011140:	push   ebp
64011141:	lea    ebp,[esp-0x128]
64011148:	sub    esp,0x128
6401114e:	push   0xffffffff
64011150:	push   0x64022751
64011155:	mov    eax,fs:0x0
6401115b:	push   eax
6401115c:	sub    esp,0x90
64011162:	mov    eax,ds:0x6402d09c
64011167:	xor    eax,ebp
64011169:	mov    DWORD PTR [ebp+0x124],eax
6401116f:	push   ebx
64011170:	push   esi
64011171:	push   edi
64011172:	push   eax
64011173:	lea    eax,[ebp-0xc]
64011176:	mov    fs:0x0,eax
6401117c:	mov    esi,DWORD PTR [ebp+0x130]
64011182:	xor    ebx,ebx
64011184:	mov    DWORD PTR [ebp-0x4],ebx
64011187:	mov    DWORD PTR [ebp-0x58],esi
6401118a:	mov    DWORD PTR [ebp-0x50],ebx
6401118d:	call   DWORD PTR ds:0x6402d06c
64011193:	mov    eax,ds:0x6402e540
64011198:	mov    edx,DWORD PTR [eax+0xc]
6401119b:	mov    ecx,0x6402e540
640111a0:	call   edx
640111a2:	add    eax,0x10
640111a5:	mov    DWORD PTR [esi],eax
640111a7:	push   0x640259c8
640111ac:	push   0xd
640111ae:	mov    edi,0x1
640111b3:	push   0x640259b8
640111b8:	mov    DWORD PTR [ebp-0x4],ebx
640111bb:	mov    DWORD PTR [ebp-0x50],edi
640111be:	call   0x640057b0
640111c3:	add    esp,0xc
640111c6:	push   eax
640111c7:	mov    ecx,esi
640111c9:	call   0x64002670
640111ce:	push   0x64025984
640111d3:	push   0x3
640111d5:	push   0x64025980
640111da:	call   0x640057b0
640111df:	add    esp,0xc
640111e2:	push   eax
640111e3:	mov    ecx,esi
640111e5:	call   0x64002670
640111ea:	push   0x64025974
640111ef:	mov    ecx,esi
640111f1:	call   0x64002670
640111f6:	push   0x6402593c
640111fb:	push   0x3
640111fd:	push   0x64025938
64011202:	call   0x640057b0
64011207:	add    esp,0xc
6401120a:	push   eax
6401120b:	mov    ecx,esi
6401120d:	call   0x64002670
64011212:	push   0x64025930
64011217:	mov    ecx,esi
64011219:	call   0x64002670
6401121e:	mov    eax,ds:0x6402e540
64011223:	mov    edx,DWORD PTR [eax+0xc]
64011226:	mov    ecx,0x6402e540
6401122b:	call   edx
6401122d:	add    eax,0x10
64011230:	mov    DWORD PTR [ebp-0x4c],eax
64011233:	mov    eax,ds:0x6402e540
64011238:	mov    edx,DWORD PTR [eax+0xc]
6401123b:	mov    ecx,0x6402e540
64011240:	mov    DWORD PTR [ebp-0x4],edi
64011243:	call   edx
64011245:	add    eax,0x10
64011248:	mov    DWORD PTR [ebp-0x54],eax
6401124b:	lea    eax,[ebp+0x114]
64011251:	push   eax
64011252:	mov    BYTE PTR [ebp-0x4],0x2
64011256:	call   0x64005260
6401125b:	add    esp,0x4
6401125e:	test   al,al
64011260:	je     0x64011300
64011266:	push   0x64025904
6401126b:	push   0x4
6401126d:	push   0x640258fc
64011272:	call   0x640057b0
64011277:	add    esp,0xc
6401127a:	push   eax
6401127b:	lea    ecx,[ebp-0x10]
6401127e:	call   0x64005510
64011283:	mov    eax,DWORD PTR [eax]
64011285:	mov    ecx,DWORD PTR [eax-0xc]
64011288:	push   ecx
64011289:	push   eax
6401128a:	mov    ecx,esi
6401128c:	mov    BYTE PTR [ebp-0x4],0x3
64011290:	call   0x640029f0
64011295:	mov    eax,DWORD PTR [ebp-0x10]
64011298:	add    eax,0xfffffff0
6401129b:	mov    BYTE PTR [ebp-0x4],0x2
6401129f:	lea    ecx,[eax+0xc]
640112a2:	or     edx,0xffffffff
640112a5:	lock xadd DWORD PTR [ecx],edx
640112a9:	dec    edx
640112aa:	test   edx,edx
640112ac:	jg     0x640112b8
640112ae:	mov    ecx,DWORD PTR [eax]
640112b0:	mov    edx,DWORD PTR [ecx]
640112b2:	push   eax
640112b3:	mov    eax,DWORD PTR [edx+0x4]
640112b6:	call   eax
640112b8:	lea    ecx,[ebp+0x114]
640112be:	push   ecx
640112bf:	lea    edx,[ebp-0x10]
640112c2:	push   edx
640112c3:	call   0x64002eb0
640112c8:	add    esp,0x8
640112cb:	mov    eax,DWORD PTR [eax]
640112cd:	mov    ecx,DWORD PTR [eax-0xc]
640112d0:	push   ecx
640112d1:	push   eax
640112d2:	mov    ecx,esi
640112d4:	mov    BYTE PTR [ebp-0x4],0x4
640112d8:	call   0x640029f0
640112dd:	mov    eax,DWORD PTR [ebp-0x10]
640112e0:	add    eax,0xfffffff0
640112e3:	mov    BYTE PTR [ebp-0x4],0x2
640112e7:	lea    ecx,[eax+0xc]
640112ea:	or     edx,0xffffffff
640112ed:	lock xadd DWORD PTR [ecx],edx
640112f1:	dec    edx
640112f2:	test   edx,edx
640112f4:	jg     0x64011300
640112f6:	mov    ecx,DWORD PTR [eax]
640112f8:	mov    edx,DWORD PTR [ecx]
640112fa:	push   eax
640112fb:	mov    eax,DWORD PTR [edx+0x4]
640112fe:	call   eax
64011300:	call   0x6400fcc0
64011305:	test   al,al
64011307:	je     0x64011325
64011309:	push   0x640258c8
6401130e:	push   0x6
64011310:	push   0x640258c0
64011315:	call   0x640057b0
6401131a:	add    esp,0xc
6401131d:	push   eax
6401131e:	mov    ecx,esi
64011320:	call   0x64002670
64011325:	call   0x64011030
6401132a:	test   al,al
6401132c:	je     0x6401134a
6401132e:	push   0x64025884
64011333:	push   0x6
64011335:	push   0x6402587c
6401133a:	call   0x640057b0
6401133f:	add    esp,0xc
64011342:	push   eax
64011343:	mov    ecx,esi
64011345:	call   0x64002670
6401134a:	mov    edx,DWORD PTR ds:0x6402e540
64011350:	mov    eax,DWORD PTR [edx+0xc]
64011353:	mov    ecx,0x6402e540
64011358:	call   eax
6401135a:	add    eax,0x10
6401135d:	mov    DWORD PTR [ebp-0x28],eax
64011360:	mov    edx,DWORD PTR ds:0x6402e540
64011366:	mov    eax,DWORD PTR [edx+0xc]
64011369:	mov    ecx,0x6402e540
6401136e:	mov    BYTE PTR [ebp-0x4],0x5
64011372:	call   eax
64011374:	add    eax,0x10
64011377:	mov    DWORD PTR [ebp-0x48],eax
6401137a:	mov    edx,DWORD PTR ds:0x6402e540
64011380:	mov    eax,DWORD PTR [edx+0xc]
64011383:	mov    ecx,0x6402e540
64011388:	mov    BYTE PTR [ebp-0x4],0x6
6401138c:	call   eax
6401138e:	add    eax,0x10
64011391:	mov    DWORD PTR [ebp-0x24],eax
64011394:	lea    ecx,[ebp-0x44]
64011397:	push   ecx
64011398:	lea    edx,[ebp-0x24]
6401139b:	push   edx
6401139c:	lea    eax,[ebp-0x28]
6401139f:	push   eax
640113a0:	mov    BYTE PTR [ebp-0x4],0x7
640113a4:	mov    DWORD PTR [ebp-0x44],ebx
640113a7:	mov    DWORD PTR [ebp-0x40],ebx
640113aa:	call   0x6400a220
640113af:	add    esp,0xc
640113b2:	test   al,al
640113b4:	je     0x640115f5
640113ba:	lea    ecx,[ebp-0x24]
640113bd:	push   ecx
640113be:	lea    edx,[ebp-0x14]
640113c1:	push   edx
640113c2:	call   0x64003150
640113c7:	mov    edi,eax
640113c9:	push   0x6402584c
640113ce:	push   0x5
640113d0:	mov    bl,0x8
640113d2:	push   0x64025844
640113d7:	mov    BYTE PTR [ebp-0x4],bl
640113da:	call   0x640057b0
640113df:	add    esp,0x14
640113e2:	push   eax
640113e3:	lea    ecx,[ebp-0x18]
640113e6:	call   0x64005510
640113eb:	push   edi
640113ec:	push   eax
640113ed:	lea    eax,[ebp-0x10]
640113f0:	push   eax
640113f1:	mov    BYTE PTR [ebp-0x4],0x9
640113f5:	call   0x6400ffc0
640113fa:	add    esp,0xc
640113fd:	mov    eax,DWORD PTR [eax]
640113ff:	mov    ecx,DWORD PTR [eax-0xc]
64011402:	push   ecx
64011403:	push   eax
64011404:	mov    ecx,esi
64011406:	mov    BYTE PTR [ebp-0x4],0xa
6401140a:	call   0x640029f0
6401140f:	mov    eax,DWORD PTR [ebp-0x10]
64011412:	add    eax,0xfffffff0
64011415:	mov    BYTE PTR [ebp-0x4],0x9
64011419:	lea    ecx,[eax+0xc]
6401141c:	or     edx,0xffffffff
6401141f:	lock xadd DWORD PTR [ecx],edx
64011423:	dec    edx
64011424:	test   edx,edx
64011426:	jg     0x64011432
64011428:	mov    ecx,DWORD PTR [eax]
6401142a:	mov    edx,DWORD PTR [ecx]
6401142c:	push   eax
6401142d:	mov    eax,DWORD PTR [edx+0x4]
64011430:	call   eax
64011432:	mov    eax,DWORD PTR [ebp-0x18]
64011435:	add    eax,0xfffffff0
64011438:	mov    BYTE PTR [ebp-0x4],bl
6401143b:	lea    ecx,[eax+0xc]
6401143e:	or     edx,0xffffffff
64011441:	lock xadd DWORD PTR [ecx],edx
64011445:	dec    edx
64011446:	test   edx,edx
64011448:	jg     0x64011454
6401144a:	mov    ecx,DWORD PTR [eax]
6401144c:	mov    edx,DWORD PTR [ecx]
6401144e:	push   eax
6401144f:	mov    eax,DWORD PTR [edx+0x4]
64011452:	call   eax
64011454:	mov    eax,DWORD PTR [ebp-0x14]
64011457:	add    eax,0xfffffff0
6401145a:	mov    BYTE PTR [ebp-0x4],0x7
6401145e:	lea    ecx,[eax+0xc]
64011461:	or     edx,0xffffffff
64011464:	lock xadd DWORD PTR [ecx],edx
64011468:	dec    edx
64011469:	test   edx,edx
6401146b:	jg     0x64011477
6401146d:	mov    ecx,DWORD PTR [eax]
6401146f:	mov    edx,DWORD PTR [ecx]
64011471:	push   eax
64011472:	mov    eax,DWORD PTR [edx+0x4]
64011475:	call   eax
64011477:	lea    ecx,[ebp-0x28]
6401147a:	push   ecx
6401147b:	lea    edx,[ebp-0x10]
6401147e:	push   edx
6401147f:	call   0x64003150
64011484:	mov    edi,eax
64011486:	push   0x64025820
6401148b:	push   0x7
6401148d:	mov    bl,0xb
6401148f:	push   0x64025818
64011494:	mov    BYTE PTR [ebp-0x4],bl
64011497:	call   0x640057b0
6401149c:	add    esp,0x14
6401149f:	push   eax
640114a0:	lea    ecx,[ebp-0x18]
640114a3:	call   0x64005510
640114a8:	push   edi
640114a9:	push   eax
640114aa:	lea    eax,[ebp-0x14]
640114ad:	push   eax
640114ae:	mov    BYTE PTR [ebp-0x4],0xc
640114b2:	call   0x6400ffc0
640114b7:	add    esp,0xc
640114ba:	mov    eax,DWORD PTR [eax]
640114bc:	mov    ecx,DWORD PTR [eax-0xc]
640114bf:	push   ecx
640114c0:	push   eax
640114c1:	mov    ecx,esi
640114c3:	mov    BYTE PTR [ebp-0x4],0xd
640114c7:	call   0x640029f0
640114cc:	mov    eax,DWORD PTR [ebp-0x14]
640114cf:	add    eax,0xfffffff0
640114d2:	mov    BYTE PTR [ebp-0x4],0xc
640114d6:	lea    ecx,[eax+0xc]
640114d9:	or     edx,0xffffffff
640114dc:	lock xadd DWORD PTR [ecx],edx
640114e0:	dec    edx
640114e1:	test   edx,edx
640114e3:	jg     0x640114ef
640114e5:	mov    ecx,DWORD PTR [eax]
640114e7:	mov    edx,DWORD PTR [ecx]
640114e9:	push   eax
640114ea:	mov    eax,DWORD PTR [edx+0x4]
640114ed:	call   eax
640114ef:	mov    eax,DWORD PTR [ebp-0x18]
640114f2:	add    eax,0xfffffff0
640114f5:	mov    BYTE PTR [ebp-0x4],bl
640114f8:	lea    ecx,[eax+0xc]
640114fb:	or     edx,0xffffffff
640114fe:	lock xadd DWORD PTR [ecx],edx
64011502:	dec    edx
64011503:	test   edx,edx
64011505:	jg     0x64011511
64011507:	mov    ecx,DWORD PTR [eax]
64011509:	mov    edx,DWORD PTR [ecx]
6401150b:	push   eax
6401150c:	mov    eax,DWORD PTR [edx+0x4]
6401150f:	call   eax
64011511:	mov    eax,DWORD PTR [ebp-0x10]
64011514:	add    eax,0xfffffff0
64011517:	mov    BYTE PTR [ebp-0x4],0x7
6401151b:	lea    ecx,[eax+0xc]
6401151e:	or     edx,0xffffffff
64011521:	lock xadd DWORD PTR [ecx],edx
64011525:	dec    edx
64011526:	test   edx,edx
64011528:	jg     0x64011534
6401152a:	mov    ecx,DWORD PTR [eax]
6401152c:	mov    edx,DWORD PTR [ecx]
6401152e:	push   eax
6401152f:	mov    eax,DWORD PTR [edx+0x4]
64011532:	call   eax
64011534:	mov    edx,DWORD PTR ds:0x6402e540
6401153a:	mov    eax,DWORD PTR [edx+0xc]
6401153d:	mov    ecx,0x6402e540
64011542:	call   eax
64011544:	add    eax,0x10
64011547:	mov    DWORD PTR [ebp-0x10],eax
6401154a:	mov    ecx,DWORD PTR [ebp-0x40]
6401154d:	mov    edx,DWORD PTR [ebp-0x44]
64011550:	push   ecx
64011551:	push   edx
64011552:	push   0x640257f4
64011557:	push   0xc
64011559:	push   0x640257d8
6401155e:	mov    BYTE PTR [ebp-0x4],0xe
64011562:	call   0x640059b0
64011567:	add    esp,0xc
6401156a:	push   eax
6401156b:	lea    eax,[ebp-0x10]
6401156e:	push   eax
6401156f:	call   0x64001d40
64011574:	add    esp,0x10
64011577:	call   DWORD PTR ds:0x6402d06c
6401157d:	mov    edi,DWORD PTR [ebp-0x10]
64011580:	cmp    DWORD PTR [edi-0x4],0x1
64011584:	mov    DWORD PTR [ebp-0x14],eax
64011587:	jle    0x64011598
64011589:	mov    ecx,DWORD PTR [edi-0xc]
6401158c:	push   ecx
6401158d:	lea    ecx,[ebp-0x10]
64011590:	call   0x64001950
64011595:	mov    edi,DWORD PTR [ebp-0x10]
64011598:	test   edi,edi
6401159a:	jne    0x640115a0
6401159c:	xor    eax,eax
6401159e:	jmp    0x640115cd
640115a0:	push   edi
640115a1:	call   DWORD PTR ds:0x64025054
640115a7:	add    eax,0x1
640115aa:	cmp    eax,0x3fffffff
640115af:	jle    0x640115b5
640115b1:	xor    eax,eax
640115b3:	jmp    0x640115cd
640115b5:	lea    ebx,[eax+eax*1]
640115b8:	mov    eax,ebx
640115ba:	call   0x640135f0
640115bf:	mov    edx,DWORD PTR [ebp-0x14]
640115c2:	mov    eax,esp
640115c4:	push   edx
640115c5:	push   ebx
640115c6:	push   edi
640115c7:	push   eax
640115c8:	call   0x64002b90
640115cd:	push   eax
640115ce:	mov    ecx,esi
640115d0:	call   0x64002670
640115d5:	add    edi,0xfffffff0
640115d8:	mov    BYTE PTR [ebp-0x4],0x7
640115dc:	lea    eax,[edi+0xc]
640115df:	or     ecx,0xffffffff
640115e2:	lock xadd DWORD PTR [eax],ecx
640115e6:	dec    ecx
640115e7:	test   ecx,ecx
640115e9:	jg     0x640115f5
640115eb:	mov    ecx,DWORD PTR [edi]
640115ed:	mov    edx,DWORD PTR [ecx]
640115ef:	mov    eax,DWORD PTR [edx+0x4]
640115f2:	push   edi
640115f3:	call   eax
640115f5:	xor    edi,edi
640115f7:	mov    DWORD PTR [ebp-0x38],edi
640115fa:	mov    DWORD PTR [ebp-0x34],edi
640115fd:	mov    DWORD PTR [ebp-0x30],edi
64011600:	lea    ecx,[ebp-0x3c]
64011603:	push   ecx
64011604:	mov    BYTE PTR [ebp-0x4],0xf
64011608:	call   0x6400a3d0
6401160d:	add    esp,0x4
64011610:	mov    DWORD PTR [ebp-0x10],edi
64011613:	xor    ebx,ebx
64011615:	mov    eax,DWORD PTR [ebp-0x38]
64011618:	cmp    eax,edi
6401161a:	jne    0x64011620
6401161c:	xor    eax,eax
6401161e:	jmp    0x64011638
64011620:	mov    ecx,DWORD PTR [ebp-0x34]
64011623:	sub    ecx,eax
64011625:	mov    eax,0x92492493
6401162a:	imul   ecx
6401162c:	add    edx,ecx
6401162e:	sar    edx,0x4
64011631:	mov    eax,edx
64011633:	shr    eax,0x1f
64011636:	add    eax,edx
64011638:	cmp    DWORD PTR [ebp-0x10],eax
6401163b:	je     0x640116e6
64011641:	push   0x640257a0
64011646:	push   0x5
64011648:	push   0x64025798
6401164d:	call   0x640057b0
64011652:	add    esp,0xc
64011655:	push   eax
64011656:	lea    ecx,[ebp-0x14]
64011659:	call   0x64005510
6401165e:	mov    eax,DWORD PTR [eax]
64011660:	mov    ecx,DWORD PTR [eax-0xc]
64011663:	push   ecx
64011664:	push   eax
64011665:	mov    ecx,esi
64011667:	mov    BYTE PTR [ebp-0x4],0x10
6401166b:	call   0x640029f0
64011670:	mov    eax,DWORD PTR [ebp-0x14]
64011673:	add    eax,0xfffffff0
64011676:	mov    BYTE PTR [ebp-0x4],0xf
6401167a:	lea    edx,[eax+0xc]
6401167d:	or     ecx,0xffffffff
64011680:	lock xadd DWORD PTR [edx],ecx
64011684:	dec    ecx
64011685:	test   ecx,ecx
64011687:	jg     0x64011693
64011689:	mov    ecx,DWORD PTR [eax]
6401168b:	mov    edx,DWORD PTR [ecx]
6401168d:	push   eax
6401168e:	mov    eax,DWORD PTR [edx+0x4]
64011691:	call   eax
64011693:	mov    edi,DWORD PTR [ebp-0x38]
64011696:	test   edi,edi
64011698:	je     0x640116b7
6401169a:	mov    ecx,DWORD PTR [ebp-0x34]
6401169d:	sub    ecx,edi
6401169f:	mov    eax,0x92492493
640116a4:	imul   ecx
640116a6:	add    edx,ecx
640116a8:	sar    edx,0x4
640116ab:	mov    eax,edx
640116ad:	shr    eax,0x1f
640116b0:	add    eax,edx
640116b2:	cmp    DWORD PTR [ebp-0x10],eax
640116b5:	jb     0x640116bf
640116b7:	call   0x640129c8
640116bc:	mov    edi,DWORD PTR [ebp-0x38]
640116bf:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
640116c4:	jb     0x640116cc
640116c6:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
640116ca:	jmp    0x640116d0
640116cc:	lea    edi,[ebx+edi*1+0x4]
640116d0:	push   edi
640116d1:	mov    ecx,esi
640116d3:	call   0x64002670
640116d8:	add    DWORD PTR [ebp-0x10],0x1
640116dc:	add    ebx,0x1c
640116df:	xor    edi,edi
640116e1:	jmp    0x64011615
640116e6:	call   DWORD PTR ds:0x6402d06c
640116ec:	push   0x110
640116f1:	lea    ecx,[ebp+0x4]
640116f4:	push   edi
640116f5:	push   ecx
640116f6:	mov    DWORD PTR [ebp-0x14],eax
640116f9:	call   0x64013570
640116fe:	mov    edx,DWORD PTR ds:0x6402e540
64011704:	mov    eax,DWORD PTR [edx+0xc]
64011707:	add    esp,0xc
6401170a:	mov    ecx,0x6402e540
6401170f:	mov    DWORD PTR [ebp+0x0],0x114
64011716:	call   eax
64011718:	add    eax,0x10
6401171b:	mov    DWORD PTR [ebp-0x10],eax
6401171e:	lea    ecx,[ebp+0x0]
64011721:	push   ecx
64011722:	mov    BYTE PTR [ebp-0x4],0x11
64011726:	call   DWORD PTR ds:0x6402506c
6401172c:	test   eax,eax
6401172e:	lea    ecx,[ebp-0x10]
64011731:	je     0x6401174b
64011733:	mov    edx,DWORD PTR [ebp+0x8]
64011736:	mov    eax,DWORD PTR [ebp+0x4]
64011739:	push   edx
6401173a:	push   eax
6401173b:	push   0x64025770
64011740:	push   ecx
64011741:	call   0x64001d40
64011746:	add    esp,0x10
64011749:	jmp    0x64011757
6401174b:	push   0xc
6401174d:	push   0x64025754
64011752:	call   0x64002af0
64011757:	xor    eax,eax
64011759:	lea    edx,[ebp-0x8c]
6401175f:	push   edx
64011760:	mov    DWORD PTR [ebp-0x8c],edi
64011766:	mov    DWORD PTR [ebp-0x88],eax
6401176c:	mov    DWORD PTR [ebp-0x84],eax
64011772:	mov    DWORD PTR [ebp-0x80],eax
64011775:	mov    DWORD PTR [ebp-0x7c],eax
64011778:	mov    DWORD PTR [ebp-0x78],eax
6401177b:	mov    DWORD PTR [ebp-0x74],eax
6401177e:	mov    DWORD PTR [ebp-0x70],eax
64011781:	mov    DWORD PTR [ebp-0x6c],eax
64011784:	call   DWORD PTR ds:0x64025068
6401178a:	movzx  eax,WORD PTR [ebp-0x8c]
64011791:	cmp    eax,edi
64011793:	je     0x640117a3
64011795:	cmp    eax,0x9
64011798:	jne    0x640117b2
6401179a:	push   0x4
6401179c:	push   0x64025748
640117a1:	jmp    0x640117aa
640117a3:	push   0x4
640117a5:	push   0x6402573c
640117aa:	lea    ecx,[ebp-0x10]
640117ad:	call   0x640029f0
640117b2:	mov    ebx,DWORD PTR [ebp-0x10]
640117b5:	cmp    ebx,edi
640117b7:	jne    0x640117bd
640117b9:	xor    eax,eax
640117bb:	jmp    0x64011806
640117bd:	push   ebx
640117be:	call   DWORD PTR ds:0x64025054
640117c4:	add    eax,0x1
640117c7:	cmp    eax,0x3fffffff
640117cc:	jg     0x64011801
640117ce:	lea    ebx,[eax+eax*1]
640117d1:	mov    eax,ebx
640117d3:	call   0x640135f0
640117d8:	mov    edi,esp
640117da:	test   edi,edi
640117dc:	je     0x64011801
640117de:	mov    eax,DWORD PTR [ebp-0x10]
640117e1:	mov    ecx,DWORD PTR [ebp-0x14]
640117e4:	push   0x0
640117e6:	push   0x0
640117e8:	push   ebx
640117e9:	push   edi
640117ea:	push   0xffffffff
640117ec:	push   eax
640117ed:	push   0x0
640117ef:	push   ecx
640117f0:	mov    BYTE PTR [edi],0x0
640117f3:	call   DWORD PTR ds:0x64025028
640117f9:	neg    eax
640117fb:	sbb    eax,eax
640117fd:	and    eax,edi
640117ff:	jmp    0x64011803
64011801:	xor    eax,eax
64011803:	mov    ebx,DWORD PTR [ebp-0x10]
64011806:	push   eax
64011807:	mov    ecx,esi
64011809:	call   0x64002670
6401180e:	lea    eax,[ebx-0x10]
64011811:	mov    BYTE PTR [ebp-0x4],0xf
64011815:	lea    edx,[eax+0xc]
64011818:	or     ecx,0xffffffff
6401181b:	lock xadd DWORD PTR [edx],ecx
6401181f:	dec    ecx
64011820:	test   ecx,ecx
64011822:	jg     0x6401182e
64011824:	mov    ecx,DWORD PTR [eax]
64011826:	mov    edx,DWORD PTR [ecx]
64011828:	push   eax
64011829:	mov    eax,DWORD PTR [edx+0x4]
6401182c:	call   eax
6401182e:	lea    ecx,[ebp-0x20]
64011831:	push   ecx
64011832:	call   0x6400a990
64011837:	push   eax
64011838:	lea    edx,[ebp-0x10]
6401183b:	push   edx
6401183c:	mov    BYTE PTR [ebp-0x4],0x12
64011840:	call   0x64003150
64011845:	mov    edi,eax
64011847:	push   0x64025714
6401184c:	push   0x7
6401184e:	push   0x6402570c
64011853:	mov    BYTE PTR [ebp-0x4],0x13
64011857:	call   0x640057b0
6401185c:	add    esp,0x18
6401185f:	push   eax
64011860:	lea    ecx,[ebp-0x18]
64011863:	call   0x64005510
64011868:	push   edi
64011869:	push   eax
6401186a:	lea    eax,[ebp-0x14]
6401186d:	mov    bl,0x14
6401186f:	push   eax
64011870:	mov    BYTE PTR [ebp-0x4],bl
64011873:	call   0x6400ffc0
64011878:	add    esp,0xc
6401187b:	mov    eax,DWORD PTR [eax]
6401187d:	mov    ecx,DWORD PTR [eax-0xc]
64011880:	push   ecx
64011881:	push   eax
64011882:	mov    ecx,esi
64011884:	mov    BYTE PTR [ebp-0x4],0x15
64011888:	call   0x640029f0
6401188d:	mov    eax,DWORD PTR [ebp-0x14]
64011890:	add    eax,0xfffffff0
64011893:	mov    BYTE PTR [ebp-0x4],bl
64011896:	lea    ecx,[eax+0xc]
64011899:	or     edx,0xffffffff
6401189c:	lock xadd DWORD PTR [ecx],edx
640118a0:	dec    edx
640118a1:	test   edx,edx
640118a3:	jg     0x640118af
640118a5:	mov    ecx,DWORD PTR [eax]
640118a7:	mov    edx,DWORD PTR [ecx]
640118a9:	push   eax
640118aa:	mov    eax,DWORD PTR [edx+0x4]
640118ad:	call   eax
640118af:	mov    eax,DWORD PTR [ebp-0x18]
640118b2:	add    eax,0xfffffff0
640118b5:	mov    BYTE PTR [ebp-0x4],0x13
640118b9:	lea    ecx,[eax+0xc]
640118bc:	or     edx,0xffffffff
640118bf:	lock xadd DWORD PTR [ecx],edx
640118c3:	dec    edx
640118c4:	test   edx,edx
640118c6:	jg     0x640118d2
640118c8:	mov    ecx,DWORD PTR [eax]
640118ca:	mov    edx,DWORD PTR [ecx]
640118cc:	push   eax
640118cd:	mov    eax,DWORD PTR [edx+0x4]
640118d0:	call   eax
640118d2:	mov    eax,DWORD PTR [ebp-0x10]
640118d5:	add    eax,0xfffffff0
640118d8:	mov    BYTE PTR [ebp-0x4],0x12
640118dc:	lea    ecx,[eax+0xc]
640118df:	or     edx,0xffffffff
640118e2:	lock xadd DWORD PTR [ecx],edx
640118e6:	dec    edx
640118e7:	test   edx,edx
640118e9:	jg     0x640118f5
640118eb:	mov    ecx,DWORD PTR [eax]
640118ed:	mov    edx,DWORD PTR [ecx]
640118ef:	push   eax
640118f0:	mov    eax,DWORD PTR [edx+0x4]
640118f3:	call   eax
640118f5:	mov    eax,DWORD PTR [ebp-0x20]
640118f8:	add    eax,0xfffffff0
640118fb:	mov    BYTE PTR [ebp-0x4],0xf
640118ff:	lea    ecx,[eax+0xc]
64011902:	or     edx,0xffffffff
64011905:	lock xadd DWORD PTR [ecx],edx
64011909:	dec    edx
6401190a:	test   edx,edx
6401190c:	jg     0x64011918
6401190e:	mov    ecx,DWORD PTR [eax]
64011910:	mov    edx,DWORD PTR [ecx]
64011912:	push   eax
64011913:	mov    eax,DWORD PTR [edx+0x4]
64011916:	call   eax
64011918:	call   DWORD PTR ds:0x6402d06c
6401191e:	mov    edx,DWORD PTR ds:0x6402e540
64011924:	mov    DWORD PTR [ebp-0x14],eax
64011927:	mov    eax,DWORD PTR [edx+0xc]
6401192a:	mov    ecx,0x6402e540
6401192f:	call   eax
64011931:	add    eax,0x10
64011934:	mov    DWORD PTR [ebp-0x10],eax
64011937:	mov    BYTE PTR [ebp-0x4],0x16
6401193b:	call   0x64003800
64011940:	push   eax
64011941:	push   0x640256d0
64011946:	push   0x4
64011948:	push   0x640256c4
6401194d:	call   0x640059b0
64011952:	add    esp,0xc
64011955:	push   eax
64011956:	lea    ecx,[ebp-0x10]
64011959:	push   ecx
6401195a:	call   0x64001d40
6401195f:	mov    ebx,DWORD PTR [ebp-0x10]
64011962:	mov    eax,DWORD PTR [ebx-0x8]
64011965:	mov    ecx,0x1
6401196a:	sub    ecx,DWORD PTR [ebx-0x4]
6401196d:	add    eax,0x1
64011970:	add    esp,0xc
64011973:	or     eax,ecx
64011975:	jge    0x64011984
64011977:	push   0xffffffff
64011979:	lea    ecx,[ebp-0x10]
6401197c:	call   0x64001e00
64011981:	mov    ebx,DWORD PTR [ebp-0x10]
64011984:	test   ebx,ebx
64011986:	je     0x640119cc
64011988:	push   ebx
64011989:	call   DWORD PTR ds:0x64025054
6401198f:	add    eax,0x1
64011992:	cmp    eax,0x3fffffff
64011997:	jg     0x640119cc
64011999:	add    eax,eax
6401199b:	mov    DWORD PTR [ebp-0x20],eax
6401199e:	call   0x640135f0
640119a3:	mov    edi,esp
640119a5:	test   edi,edi
640119a7:	je     0x640119cc
640119a9:	mov    edx,DWORD PTR [ebp-0x20]
640119ac:	mov    eax,DWORD PTR [ebp-0x14]
640119af:	push   0x0
640119b1:	push   0x0
640119b3:	push   edx
640119b4:	push   edi
640119b5:	push   0xffffffff
640119b7:	push   ebx
640119b8:	push   0x0
640119ba:	push   eax
640119bb:	mov    BYTE PTR [edi],0x0
640119be:	call   DWORD PTR ds:0x64025028
640119c4:	neg    eax
640119c6:	sbb    eax,eax
640119c8:	and    eax,edi
640119ca:	jmp    0x640119ce
640119cc:	xor    eax,eax
640119ce:	push   eax
640119cf:	lea    ecx,[ebp-0x1c]
640119d2:	call   0x64005510
640119d7:	mov    edi,eax
640119d9:	push   0x64025688
640119de:	push   0x5
640119e0:	push   0x64025680
640119e5:	mov    BYTE PTR [ebp-0x4],0x17
640119e9:	call   0x640057b0
640119ee:	add    esp,0xc
640119f1:	push   eax
640119f2:	lea    ecx,[ebp-0x2c]
640119f5:	call   0x64005510
640119fa:	push   edi
640119fb:	push   eax
640119fc:	lea    ecx,[ebp-0x18]
640119ff:	push   ecx
64011a00:	mov    BYTE PTR [ebp-0x4],0x18
64011a04:	call   0x6400ffc0
64011a09:	add    esp,0xc
64011a0c:	mov    eax,DWORD PTR [eax]
64011a0e:	mov    ecx,DWORD PTR [eax-0xc]
64011a11:	push   ecx
64011a12:	push   eax
64011a13:	mov    ecx,esi
64011a15:	mov    BYTE PTR [ebp-0x4],0x19
64011a19:	call   0x640029f0
64011a1e:	mov    eax,DWORD PTR [ebp-0x18]
64011a21:	add    eax,0xfffffff0
64011a24:	mov    BYTE PTR [ebp-0x4],0x18
64011a28:	lea    edx,[eax+0xc]
64011a2b:	or     ecx,0xffffffff
64011a2e:	lock xadd DWORD PTR [edx],ecx
64011a32:	dec    ecx
64011a33:	test   ecx,ecx
64011a35:	jg     0x64011a41
64011a37:	mov    ecx,DWORD PTR [eax]
64011a39:	mov    edx,DWORD PTR [ecx]
64011a3b:	push   eax
64011a3c:	mov    eax,DWORD PTR [edx+0x4]
64011a3f:	call   eax
64011a41:	mov    eax,DWORD PTR [ebp-0x2c]
64011a44:	add    eax,0xfffffff0
64011a47:	mov    BYTE PTR [ebp-0x4],0x17
64011a4b:	lea    ecx,[eax+0xc]
64011a4e:	or     edx,0xffffffff
64011a51:	lock xadd DWORD PTR [ecx],edx
64011a55:	dec    edx
64011a56:	test   edx,edx
64011a58:	jg     0x64011a64
64011a5a:	mov    ecx,DWORD PTR [eax]
64011a5c:	mov    edx,DWORD PTR [ecx]
64011a5e:	push   eax
64011a5f:	mov    eax,DWORD PTR [edx+0x4]
64011a62:	call   eax
64011a64:	mov    eax,DWORD PTR [ebp-0x1c]
64011a67:	add    eax,0xfffffff0
64011a6a:	mov    BYTE PTR [ebp-0x4],0x16
64011a6e:	lea    ecx,[eax+0xc]
64011a71:	or     edx,0xffffffff
64011a74:	lock xadd DWORD PTR [ecx],edx
64011a78:	dec    edx
64011a79:	test   edx,edx
64011a7b:	jg     0x64011a87
64011a7d:	mov    ecx,DWORD PTR [eax]
64011a7f:	mov    edx,DWORD PTR [ecx]
64011a81:	push   eax
64011a82:	mov    eax,DWORD PTR [edx+0x4]
64011a85:	call   eax
64011a87:	add    ebx,0xfffffff0
64011a8a:	mov    BYTE PTR [ebp-0x4],0xf
64011a8e:	lea    ecx,[ebx+0xc]
64011a91:	or     edx,0xffffffff
64011a94:	lock xadd DWORD PTR [ecx],edx
64011a98:	dec    edx
64011a99:	test   edx,edx
64011a9b:	jg     0x64011aa7
64011a9d:	mov    ecx,DWORD PTR [ebx]
64011a9f:	mov    eax,DWORD PTR [ecx]
64011aa1:	mov    edx,DWORD PTR [eax+0x4]
64011aa4:	push   ebx
64011aa5:	call   edx
64011aa7:	lea    eax,[ebp-0x9c]
64011aad:	push   eax
64011aae:	call   0x640039d0
64011ab3:	mov    ecx,DWORD PTR [eax]
64011ab5:	mov    DWORD PTR [ebp-0x68],ecx
64011ab8:	mov    edx,DWORD PTR [eax+0x4]
64011abb:	mov    DWORD PTR [ebp-0x64],edx
64011abe:	mov    ecx,DWORD PTR [eax+0x8]
64011ac1:	push   0x6402565c
64011ac6:	mov    DWORD PTR [ebp-0x60],ecx
64011ac9:	mov    edx,DWORD PTR [eax+0xc]
64011acc:	push   0x5
64011ace:	push   0x64025654
64011ad3:	mov    DWORD PTR [ebp-0x5c],edx
64011ad6:	call   0x640057b0
64011adb:	add    esp,0x10
64011ade:	push   eax
64011adf:	lea    ecx,[ebp-0x10]
64011ae2:	call   0x64005510
64011ae7:	lea    eax,[ebp-0x68]
64011aea:	push   eax
64011aeb:	lea    ecx,[ebp-0x2c]
64011aee:	push   ecx
64011aef:	mov    BYTE PTR [ebp-0x4],0x1a
64011af3:	call   0x64002eb0
64011af8:	push   eax
64011af9:	lea    edx,[ebp-0x10]
64011afc:	push   edx
64011afd:	lea    eax,[ebp-0x1c]
64011b00:	mov    bl,0x1b
64011b02:	push   eax
64011b03:	mov    BYTE PTR [ebp-0x4],bl
64011b06:	call   0x6400ffc0
64011b0b:	add    esp,0x14
64011b0e:	mov    eax,DWORD PTR [eax]
64011b10:	mov    ecx,DWORD PTR [eax-0xc]
64011b13:	push   ecx
64011b14:	push   eax
64011b15:	mov    ecx,esi
64011b17:	mov    BYTE PTR [ebp-0x4],0x1c
64011b1b:	call   0x640029f0
64011b20:	mov    eax,DWORD PTR [ebp-0x1c]
64011b23:	add    eax,0xfffffff0
64011b26:	mov    BYTE PTR [ebp-0x4],bl
64011b29:	lea    ecx,[eax+0xc]
64011b2c:	or     edx,0xffffffff
64011b2f:	lock xadd DWORD PTR [ecx],edx
64011b33:	dec    edx
64011b34:	test   edx,edx
64011b36:	jg     0x64011b42
64011b38:	mov    ecx,DWORD PTR [eax]
64011b3a:	mov    edx,DWORD PTR [ecx]
64011b3c:	push   eax
64011b3d:	mov    eax,DWORD PTR [edx+0x4]
64011b40:	call   eax
64011b42:	mov    eax,DWORD PTR [ebp-0x2c]
64011b45:	add    eax,0xfffffff0
64011b48:	mov    BYTE PTR [ebp-0x4],0x1a
64011b4c:	lea    ecx,[eax+0xc]
64011b4f:	or     edx,0xffffffff
64011b52:	lock xadd DWORD PTR [ecx],edx
64011b56:	dec    edx
64011b57:	test   edx,edx
64011b59:	jg     0x64011b65
64011b5b:	mov    ecx,DWORD PTR [eax]
64011b5d:	mov    edx,DWORD PTR [ecx]
64011b5f:	push   eax
64011b60:	mov    eax,DWORD PTR [edx+0x4]
64011b63:	call   eax
64011b65:	mov    eax,DWORD PTR [ebp-0x10]
64011b68:	add    eax,0xfffffff0
64011b6b:	mov    BYTE PTR [ebp-0x4],0xf
64011b6f:	lea    ecx,[eax+0xc]
64011b72:	or     edx,0xffffffff
64011b75:	lock xadd DWORD PTR [ecx],edx
64011b79:	dec    edx
64011b7a:	test   edx,edx
64011b7c:	jg     0x64011b88
64011b7e:	mov    ecx,DWORD PTR [eax]
64011b80:	mov    edx,DWORD PTR [ecx]
64011b82:	push   eax
64011b83:	mov    eax,DWORD PTR [edx+0x4]
64011b86:	call   eax
64011b88:	lea    ecx,[ebp-0x1c]
64011b8b:	push   0x1
64011b8d:	push   ecx
64011b8e:	call   0x64005040
64011b93:	add    esp,0x8
64011b96:	mov    eax,DWORD PTR [eax]
64011b98:	mov    ecx,DWORD PTR [eax-0xc]
64011b9b:	push   ecx
64011b9c:	push   eax
64011b9d:	mov    ecx,esi
64011b9f:	mov    BYTE PTR [ebp-0x4],0x1d
64011ba3:	call   0x640029f0
64011ba8:	mov    eax,DWORD PTR [ebp-0x1c]
64011bab:	add    eax,0xfffffff0
64011bae:	mov    BYTE PTR [ebp-0x4],0xf
64011bb2:	lea    edx,[eax+0xc]
64011bb5:	or     ecx,0xffffffff
64011bb8:	lock xadd DWORD PTR [edx],ecx
64011bbc:	dec    ecx
64011bbd:	test   ecx,ecx
64011bbf:	jg     0x64011bcb
64011bc1:	mov    ecx,DWORD PTR [eax]
64011bc3:	mov    edx,DWORD PTR [ecx]
64011bc5:	push   eax
64011bc6:	mov    eax,DWORD PTR [edx+0x4]
64011bc9:	call   eax
64011bcb:	mov    eax,DWORD PTR [ebp-0x38]
64011bce:	xor    edi,edi
64011bd0:	cmp    eax,edi
64011bd2:	je     0x64011bf2
64011bd4:	mov    ecx,DWORD PTR [ebp-0x58]
64011bd7:	push   ecx
64011bd8:	mov    ecx,DWORD PTR [ebp-0x34]
64011bdb:	lea    edx,[ebp-0x3c]
64011bde:	push   edx
64011bdf:	push   ecx
64011be0:	push   eax
64011be1:	call   0x6400b270
64011be6:	mov    edx,DWORD PTR [ebp-0x38]
64011be9:	push   edx
64011bea:	call   0x64012612
64011bef:	add    esp,0x14
64011bf2:	mov    eax,DWORD PTR [ebp-0x24]
64011bf5:	add    eax,0xfffffff0
64011bf8:	mov    DWORD PTR [ebp-0x38],edi
64011bfb:	mov    DWORD PTR [ebp-0x34],edi
64011bfe:	mov    DWORD PTR [ebp-0x30],edi
64011c01:	mov    BYTE PTR [ebp-0x4],0x6
64011c05:	lea    ecx,[eax+0xc]
64011c08:	or     edx,0xffffffff
64011c0b:	lock xadd DWORD PTR [ecx],edx
64011c0f:	dec    edx
64011c10:	test   edx,edx
64011c12:	jg     0x64011c1e
64011c14:	mov    ecx,DWORD PTR [eax]
64011c16:	mov    edx,DWORD PTR [ecx]
64011c18:	push   eax
64011c19:	mov    eax,DWORD PTR [edx+0x4]
64011c1c:	call   eax
64011c1e:	mov    eax,DWORD PTR [ebp-0x48]
64011c21:	add    eax,0xfffffff0
64011c24:	mov    BYTE PTR [ebp-0x4],0x5
64011c28:	lea    ecx,[eax+0xc]
64011c2b:	or     edx,0xffffffff
64011c2e:	lock xadd DWORD PTR [ecx],edx
64011c32:	dec    edx
64011c33:	test   edx,edx
64011c35:	jg     0x64011c41
64011c37:	mov    ecx,DWORD PTR [eax]
64011c39:	mov    edx,DWORD PTR [ecx]
64011c3b:	push   eax
64011c3c:	mov    eax,DWORD PTR [edx+0x4]
64011c3f:	call   eax
64011c41:	mov    eax,DWORD PTR [ebp-0x28]
64011c44:	add    eax,0xfffffff0
64011c47:	mov    BYTE PTR [ebp-0x4],0x2
64011c4b:	lea    ecx,[eax+0xc]
64011c4e:	or     edx,0xffffffff
64011c51:	lock xadd DWORD PTR [ecx],edx
64011c55:	dec    edx
64011c56:	test   edx,edx
64011c58:	jg     0x64011c64
64011c5a:	mov    ecx,DWORD PTR [eax]
64011c5c:	mov    edx,DWORD PTR [ecx]
64011c5e:	push   eax
64011c5f:	mov    eax,DWORD PTR [edx+0x4]
64011c62:	call   eax
64011c64:	mov    eax,DWORD PTR [ebp-0x54]
64011c67:	add    eax,0xfffffff0
64011c6a:	mov    BYTE PTR [ebp-0x4],0x1
64011c6e:	lea    ecx,[eax+0xc]
64011c71:	or     edx,0xffffffff
64011c74:	lock xadd DWORD PTR [ecx],edx
64011c78:	dec    edx
64011c79:	test   edx,edx
64011c7b:	jg     0x64011c87
64011c7d:	mov    ecx,DWORD PTR [eax]
64011c7f:	mov    edx,DWORD PTR [ecx]
64011c81:	push   eax
64011c82:	mov    eax,DWORD PTR [edx+0x4]
64011c85:	call   eax
64011c87:	mov    eax,DWORD PTR [ebp-0x4c]
64011c8a:	add    eax,0xfffffff0
64011c8d:	mov    BYTE PTR [ebp-0x4],0x0
64011c91:	lea    ecx,[eax+0xc]
64011c94:	or     edx,0xffffffff
64011c97:	lock xadd DWORD PTR [ecx],edx
64011c9b:	dec    edx
64011c9c:	test   edx,edx
64011c9e:	jg     0x64011caa
64011ca0:	mov    ecx,DWORD PTR [eax]
64011ca2:	mov    edx,DWORD PTR [ecx]
64011ca4:	push   eax
64011ca5:	mov    eax,DWORD PTR [edx+0x4]
64011ca8:	call   eax
64011caa:	mov    eax,esi
64011cac:	lea    esp,[ebp-0xac]
64011cb2:	mov    ecx,DWORD PTR [ebp-0xc]
64011cb5:	mov    DWORD PTR fs:0x0,ecx
64011cbc:	pop    ecx
64011cbd:	pop    edi
64011cbe:	pop    esi
64011cbf:	pop    ebx
64011cc0:	mov    ecx,DWORD PTR [ebp+0x124]
64011cc6:	xor    ecx,ebp
64011cc8:	call   0x64012e6c
64011ccd:	add    ebp,0x128
64011cd3:	mov    esp,ebp
64011cd5:	pop    ebp
64011cd6:	ret    
64011cd7:	int3   
64011cd8:	int3   
64011cd9:	int3   
64011cda:	int3   
64011cdb:	int3   
64011cdc:	int3   
64011cdd:	int3   
64011cde:	int3   
64011cdf:	int3   
64011ce0:	push   ebp
64011ce1:	mov    ebp,esp
64011ce3:	push   0xffffffff
64011ce5:	push   0x64022798
64011cea:	mov    eax,fs:0x0
64011cf0:	push   eax
64011cf1:	sub    esp,0x50
64011cf4:	mov    eax,ds:0x6402d09c
64011cf9:	xor    eax,ebp
64011cfb:	mov    DWORD PTR [ebp-0x10],eax
64011cfe:	push   ebx
64011cff:	push   esi
64011d00:	push   edi
64011d01:	push   eax
64011d02:	lea    eax,[ebp-0xc]
64011d05:	mov    fs:0x0,eax
64011d0b:	call   DWORD PTR ds:0x6402d06c
64011d11:	push   0xea60
64011d16:	mov    DWORD PTR [ebp-0x3c],eax
64011d19:	call   0x6400fd90
64011d1e:	add    esp,0x4
64011d21:	mov    DWORD PTR [ebp-0x34],0x0
64011d28:	lea    eax,[ebp-0x30]
64011d2b:	push   eax
64011d2c:	call   0x64011140
64011d31:	add    esp,0x4
64011d34:	xor    esi,esi
64011d36:	mov    DWORD PTR [ebp-0x4],esi
64011d39:	mov    DWORD PTR [ebp-0x14],0xf
64011d40:	mov    DWORD PTR [ebp-0x18],esi
64011d43:	mov    BYTE PTR [ebp-0x28],0x0
64011d47:	mov    eax,DWORD PTR [ebp-0x30]
64011d4a:	cmp    eax,esi
64011d4c:	mov    BYTE PTR [ebp-0x4],0x1
64011d50:	mov    ebx,eax
64011d52:	jne    0x64011d58
64011d54:	xor    ecx,ecx
64011d56:	jmp    0x64011d9f
64011d58:	push   eax
64011d59:	call   DWORD PTR ds:0x64025054
64011d5f:	add    eax,0x1
64011d62:	cmp    eax,0x3fffffff
64011d67:	jg     0x64011d99
64011d69:	lea    edi,[eax+eax*1]
64011d6c:	mov    eax,edi
64011d6e:	call   0x640135f0
64011d73:	mov    esi,esp
64011d75:	test   esi,esi
64011d77:	je     0x64011d99
64011d79:	mov    ecx,DWORD PTR [ebp-0x3c]
64011d7c:	push   0x0
64011d7e:	push   0x0
64011d80:	push   edi
64011d81:	push   esi
64011d82:	push   0xffffffff
64011d84:	push   ebx
64011d85:	push   0x0
64011d87:	push   ecx
64011d88:	mov    BYTE PTR [esi],0x0
64011d8b:	call   DWORD PTR ds:0x64025028
64011d91:	neg    eax
64011d93:	sbb    eax,eax
64011d95:	and    eax,esi
64011d97:	jmp    0x64011d9b
64011d99:	xor    eax,eax
64011d9b:	mov    ecx,eax
64011d9d:	xor    esi,esi
64011d9f:	mov    eax,ecx
64011da1:	mov    DWORD PTR [ebp-0x48],esi
64011da4:	mov    DWORD PTR [ebp-0x44],0xf
64011dab:	mov    BYTE PTR [ebp-0x58],0x0
64011daf:	lea    esi,[eax+0x1]
64011db2:	mov    dl,BYTE PTR [eax]
64011db4:	add    eax,0x1
64011db7:	test   dl,dl
64011db9:	jne    0x64011db2
64011dbb:	sub    eax,esi
64011dbd:	push   eax
64011dbe:	push   ecx
64011dbf:	lea    ecx,[ebp-0x5c]
64011dc2:	call   0x64001860
64011dc7:	lea    edx,[ebp-0x2c]
64011dca:	push   edx
64011dcb:	lea    eax,[ebp-0x5c]
64011dce:	push   eax
64011dcf:	mov    BYTE PTR [ebp-0x4],0x2
64011dd3:	call   0x64010e90
64011dd8:	mov    edi,0x10
64011ddd:	add    esp,0x8
64011de0:	cmp    DWORD PTR [ebp-0x44],edi
64011de3:	mov    bl,al
64011de5:	mov    BYTE PTR [ebp-0x4],0x1
64011de9:	jb     0x64011df7
64011deb:	mov    ecx,DWORD PTR [ebp-0x58]
64011dee:	push   ecx
64011def:	call   0x64012612
64011df4:	add    esp,0x4
64011df7:	test   bl,bl
64011df9:	jne    0x64011e8c
64011dff:	xor    ebx,ebx
64011e01:	xor    esi,esi
64011e03:	lea    edx,[ebp-0x38]
64011e06:	push   ebx
64011e07:	push   edx
64011e08:	mov    DWORD PTR [ebp-0x38],ebx
64011e0b:	call   0x6400de70
64011e10:	call   eax
64011e12:	test   eax,eax
64011e14:	je     0x64011e24
64011e16:	add    esi,0x3e8
64011e1c:	cmp    esi,0x493e0
64011e22:	ja     0x64011e31
64011e24:	push   0x3e8
64011e29:	call   DWORD PTR ds:0x64025050
64011e2f:	jmp    0x64011e03
64011e31:	cmp    DWORD PTR [ebp-0x14],edi
64011e34:	jb     0x64011e42
64011e36:	mov    eax,DWORD PTR [ebp-0x28]
64011e39:	push   eax
64011e3a:	call   0x64012612
64011e3f:	add    esp,0x4
64011e42:	mov    eax,DWORD PTR [ebp-0x30]
64011e45:	add    eax,0xfffffff0
64011e48:	mov    DWORD PTR [ebp-0x14],0xf
64011e4f:	mov    DWORD PTR [ebp-0x18],ebx
64011e52:	mov    BYTE PTR [ebp-0x28],0x0
64011e56:	mov    DWORD PTR [ebp-0x4],0xffffffff
64011e5d:	lea    ecx,[eax+0xc]
64011e60:	or     edx,0xffffffff
64011e63:	lock xadd DWORD PTR [ecx],edx
64011e67:	dec    edx
64011e68:	test   edx,edx
64011e6a:	jg     0x64011e76
64011e6c:	mov    ecx,DWORD PTR [eax]
64011e6e:	mov    edx,DWORD PTR [ecx]
64011e70:	push   eax
64011e71:	mov    eax,DWORD PTR [edx+0x4]
64011e74:	call   eax
64011e76:	mov    eax,DWORD PTR [ebp-0x34]
64011e79:	add    eax,0x1
64011e7c:	cmp    eax,0x3
64011e7f:	mov    DWORD PTR [ebp-0x34],eax
64011e82:	jne    0x64011d28
64011e88:	xor    ebx,ebx
64011e8a:	jmp    0x64011ee4
64011e8c:	xor    ebx,ebx
64011e8e:	cmp    DWORD PTR [ebp-0x18],ebx
64011e91:	je     0x64011e9f
64011e93:	lea    ecx,[ebp-0x2c]
64011e96:	push   ecx
64011e97:	call   0x64010820
64011e9c:	add    esp,0x4
64011e9f:	cmp    DWORD PTR [ebp-0x14],edi
64011ea2:	jb     0x64011eb0
64011ea4:	mov    edx,DWORD PTR [ebp-0x28]
64011ea7:	push   edx
64011ea8:	call   0x64012612
64011ead:	add    esp,0x4
64011eb0:	mov    eax,DWORD PTR [ebp-0x30]
64011eb3:	add    eax,0xfffffff0
64011eb6:	mov    DWORD PTR [ebp-0x14],0xf
64011ebd:	mov    DWORD PTR [ebp-0x18],ebx
64011ec0:	mov    BYTE PTR [ebp-0x28],0x0
64011ec4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64011ecb:	lea    ecx,[eax+0xc]
64011ece:	or     edx,0xffffffff
64011ed1:	lock xadd DWORD PTR [ecx],edx
64011ed5:	dec    edx
64011ed6:	test   edx,edx
64011ed8:	jg     0x64011ee4
64011eda:	mov    ecx,DWORD PTR [eax]
64011edc:	mov    edx,DWORD PTR [ecx]
64011ede:	push   eax
64011edf:	mov    eax,DWORD PTR [edx+0x4]
64011ee2:	call   eax
64011ee4:	xor    esi,esi
64011ee6:	lea    ecx,[ebp-0x40]
64011ee9:	push   ebx
64011eea:	push   ecx
64011eeb:	mov    DWORD PTR [ebp-0x40],ebx
64011eee:	call   0x6400de70
64011ef3:	call   eax
64011ef5:	test   eax,eax
64011ef7:	je     0x64011f0b
64011ef9:	add    esi,0x3e8
64011eff:	cmp    esi,0xa4cb80
64011f05:	ja     0x64011d21
64011f0b:	push   0x3e8
64011f10:	call   DWORD PTR ds:0x64025050
64011f16:	jmp    0x64011ee6
64011f18:	int3   
64011f19:	int3   
64011f1a:	int3   
64011f1b:	int3   
64011f1c:	int3   
64011f1d:	int3   
64011f1e:	int3   
64011f1f:	int3   
64011f20:	sub    esp,0x20c
64011f26:	mov    eax,ds:0x6402d09c
64011f2b:	xor    eax,esp
64011f2d:	mov    DWORD PTR [esp+0x208],eax
64011f34:	push   0x208
64011f39:	lea    eax,[esp+0x4]
64011f3d:	push   eax
64011f3e:	push   0x0
64011f40:	call   DWORD PTR ds:0x64025074
64011f46:	test   eax,eax
64011f48:	je     0x64011f97
64011f4a:	lea    ecx,[esp]
64011f4d:	push   0x104
64011f52:	push   ecx
64011f53:	call   0x64013551
64011f58:	lea    edx,[esp+0x8]
64011f5c:	push   0x640259f8
64011f61:	push   edx
64011f62:	call   0x64012fb1
64011f67:	add    esp,0x10
64011f6a:	test   eax,eax
64011f6c:	je     0x64011f97
64011f6e:	call   0x64010f80
64011f73:	test   al,al
64011f75:	je     0x64011f97
64011f77:	push   0x0
64011f79:	push   0x0
64011f7b:	push   0x0
64011f7d:	push   0x64011ce0
64011f82:	push   0x0
64011f84:	push   0x0
64011f86:	call   DWORD PTR ds:0x64025070
64011f8c:	test   eax,eax
64011f8e:	je     0x64011f97
64011f90:	push   eax
64011f91:	call   DWORD PTR ds:0x64025040
64011f97:	mov    ecx,DWORD PTR [esp+0x208]
64011f9e:	xor    ecx,esp
64011fa0:	xor    eax,eax
64011fa2:	call   0x64012e6c
64011fa7:	add    esp,0x20c
64011fad:	ret    0x4
64011fb0:	push   0x0
64011fb2:	push   0x0
64011fb4:	push   0x0
64011fb6:	push   0x64011f20
64011fbb:	push   0x0
64011fbd:	push   0x0
64011fbf:	call   DWORD PTR ds:0x64025070
64011fc5:	ret    
64011fc6:	push   ebp
64011fc7:	mov    ebp,esp
64011fc9:	sub    esp,0xc
64011fcc:	mov    eax,ds:0x6402d09c
64011fd1:	xor    eax,ebp
64011fd3:	mov    DWORD PTR [ebp-0x4],eax
64011fd6:	push   esi
64011fd7:	xor    esi,esi
64011fd9:	call   DWORD PTR ds:0x640250f0
64011fdf:	push   0x7
64011fe1:	lea    ecx,[ebp-0xc]
64011fe4:	push   ecx
64011fe5:	push   0x1004
64011fea:	push   eax
64011feb:	call   DWORD PTR ds:0x640250ec
64011ff1:	test   eax,eax
64011ff3:	je     0x64012014
64011ff5:	mov    cl,BYTE PTR [ebp-0xc]
64011ff8:	test   cl,cl
64011ffa:	lea    eax,[ebp-0xc]
64011ffd:	je     0x64012014
64011fff:	imul   esi,esi,0xa
64012002:	movsx  ecx,cl
64012005:	inc    eax
64012006:	lea    esi,[esi+ecx*1-0x30]
6401200a:	mov    cl,BYTE PTR [eax]
6401200c:	test   cl,cl
6401200e:	jne    0x64011fff
64012010:	test   esi,esi
64012012:	jne    0x6401201c
64012014:	call   DWORD PTR ds:0x640250e8
6401201a:	mov    esi,eax
6401201c:	mov    ecx,DWORD PTR [ebp-0x4]
6401201f:	mov    eax,esi
64012021:	xor    ecx,ebp
64012023:	pop    esi
64012024:	call   0x64012e6c
64012029:	leave  
6401202a:	ret    
6401202b:	push   0x3
6401202d:	pop    eax
6401202e:	ret    
6401202f:	push   ebp
64012030:	mov    ebp,esp
64012032:	sub    esp,0x98
64012038:	mov    eax,ds:0x6402d09c
6401203d:	xor    eax,ebp
6401203f:	mov    DWORD PTR [ebp-0x4],eax
64012042:	lea    eax,[ebp-0x98]
64012048:	push   eax
64012049:	mov    DWORD PTR [ebp-0x98],0x94
64012053:	call   DWORD PTR ds:0x640250f4
64012059:	cmp    DWORD PTR [ebp-0x88],0x2
64012060:	jne    0x64012070
64012062:	cmp    DWORD PTR [ebp-0x94],0x5
64012069:	mov    eax,0x6401202b
6401206e:	jae    0x64012075
64012070:	mov    eax,0x64011fc6
64012075:	push   eax
64012076:	push   0x6402d06c
6401207b:	call   DWORD PTR ds:0x640250e4
64012081:	call   DWORD PTR ds:0x6402d06c
64012087:	mov    ecx,DWORD PTR [ebp-0x4]
6401208a:	xor    ecx,ebp
6401208c:	call   0x64012e6c
64012091:	leave  
64012092:	ret    
64012093:	push   esi
64012094:	mov    esi,ecx
64012096:	mov    eax,DWORD PTR [esi]
64012098:	test   eax,eax
6401209a:	je     0x640120a6
6401209c:	push   eax
6401209d:	call   0x64013d06
640120a2:	and    DWORD PTR [esi],0x0
640120a5:	pop    ecx
640120a6:	and    DWORD PTR [esi+0x4],0x0
640120aa:	and    DWORD PTR [esi+0x8],0x0
640120ae:	pop    esi
640120af:	ret    
640120b0:	push   esi
640120b1:	push   0x18
640120b3:	mov    esi,ecx
640120b5:	push   0x0
640120b7:	push   esi
640120b8:	call   0x64013570
640120bd:	add    esp,0xc
640120c0:	mov    eax,esi
640120c2:	pop    esi
640120c3:	ret    
640120c4:	push   0xc
640120c6:	push   0x6402a3f0
640120cb:	call   0x64014430
640120d0:	and    DWORD PTR [ebp-0x4],0x0
640120d4:	push   ecx
640120d5:	call   DWORD PTR ds:0x6402501c
640120db:	and    DWORD PTR [ebp-0x1c],0x0
640120df:	jmp    0x640120ff
640120e1:	mov    eax,DWORD PTR [ebp-0x14]
640120e4:	mov    eax,DWORD PTR [eax]
640120e6:	mov    eax,DWORD PTR [eax]
640120e8:	xor    ecx,ecx
640120ea:	cmp    eax,0xc0000017
640120ef:	sete   cl
640120f2:	mov    eax,ecx
640120f4:	ret    
640120f5:	mov    esp,DWORD PTR [ebp-0x18]
640120f8:	mov    DWORD PTR [ebp-0x1c],0x8007000e
640120ff:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012106:	mov    eax,DWORD PTR [ebp-0x1c]
64012109:	call   0x64014475
6401210e:	ret    
6401210f:	mov    eax,DWORD PTR [esp+0x4]
64012113:	test   eax,eax
64012115:	jne    0x6401211e
64012117:	mov    eax,0x80070057
6401211c:	jmp    0x6401212f
6401211e:	cmp    DWORD PTR [eax],0x2c
64012121:	jne    0x64012117
64012123:	and    DWORD PTR [eax+0x1c],0x0
64012127:	lea    ecx,[eax+0x4]
6401212a:	call   0x640120c4
6401212f:	ret    0x4
64012132:	mov    eax,DWORD PTR [esp+0x4]
64012136:	test   eax,eax
64012138:	jl     0x64012147
6401213a:	cmp    eax,DWORD PTR [ecx+0x4]
6401213d:	jge    0x64012147
6401213f:	mov    ecx,DWORD PTR [ecx]
64012141:	lea    eax,[ecx+eax*2]
64012144:	ret    0x4
64012147:	push   0x0
64012149:	push   0x0
6401214b:	push   0x1
6401214d:	push   0xc000008c
64012152:	call   DWORD PTR ds:0x640250f8
64012158:	int3   
64012159:	mov    eax,DWORD PTR [esp+0x4]
6401215d:	test   eax,eax
6401215f:	jl     0x6401216e
64012161:	cmp    eax,DWORD PTR [ecx+0x4]
64012164:	jge    0x6401216e
64012166:	mov    ecx,DWORD PTR [ecx]
64012168:	lea    eax,[ecx+eax*4]
6401216b:	ret    0x4
6401216e:	push   0x0
64012170:	push   0x0
64012172:	push   0x1
64012174:	push   0xc000008c
64012179:	call   DWORD PTR ds:0x640250f8
6401217f:	int3   
64012180:	push   esi
64012181:	mov    esi,ecx
64012183:	lea    ecx,[esi+0x4]
64012186:	call   0x640120b0
6401218b:	xor    eax,eax
6401218d:	mov    DWORD PTR [esi+0x20],eax
64012190:	mov    DWORD PTR [esi+0x24],eax
64012193:	mov    DWORD PTR [esi+0x28],eax
64012196:	mov    eax,esi
64012198:	pop    esi
64012199:	ret    
6401219a:	push   esi
6401219b:	mov    esi,DWORD PTR [esp+0x8]
6401219f:	test   esi,esi
640121a1:	jne    0x640121aa
640121a3:	mov    eax,0x80070057
640121a8:	jmp    0x640121f6
640121aa:	mov    eax,DWORD PTR [esi]
640121ac:	test   eax,eax
640121ae:	je     0x640121f4
640121b0:	cmp    eax,0x2c
640121b3:	jne    0x640121a3
640121b5:	push   edi
640121b6:	xor    edi,edi
640121b8:	cmp    DWORD PTR [esi+0x24],edi
640121bb:	jle    0x640121de
640121bd:	push   ebx
640121be:	lea    ebx,[esi+0x20]
640121c1:	push   edi
640121c2:	mov    ecx,ebx
640121c4:	call   0x64012132
640121c9:	movzx  eax,WORD PTR [eax]
640121cc:	push   DWORD PTR [esp+0x14]
640121d0:	push   eax
640121d1:	call   DWORD PTR ds:0x640251b8
640121d7:	inc    edi
640121d8:	cmp    edi,DWORD PTR [esi+0x24]
640121db:	jl     0x640121c1
640121dd:	pop    ebx
640121de:	lea    ecx,[esi+0x20]
640121e1:	call   0x64012093
640121e6:	lea    eax,[esi+0x4]
640121e9:	push   eax
640121ea:	call   DWORD PTR ds:0x640250a0
640121f0:	and    DWORD PTR [esi],0x0
640121f3:	pop    edi
640121f4:	xor    eax,eax
640121f6:	pop    esi
640121f7:	ret    0x8
640121fa:	push   esi
640121fb:	mov    esi,ecx
640121fd:	cmp    BYTE PTR [esi+0x4],0x0
64012201:	je     0x6401220f
64012203:	push   DWORD PTR [esi]
64012205:	call   DWORD PTR ds:0x6402509c
6401220b:	mov    BYTE PTR [esi+0x4],0x0
6401220f:	pop    esi
64012210:	ret    
64012211:	push   esi
64012212:	mov    esi,ecx
64012214:	lea    ecx,[esi+0x18]
64012217:	call   0x640120b0
6401221c:	xor    eax,eax
6401221e:	mov    DWORD PTR [esi+0x30],eax
64012221:	mov    DWORD PTR [esi+0x34],eax
64012224:	mov    DWORD PTR [esi+0x38],eax
64012227:	mov    eax,esi
64012229:	pop    esi
6401222a:	ret    
6401222b:	push   esi
6401222c:	mov    esi,ecx
6401222e:	lea    eax,[esi+0x18]
64012231:	push   eax
64012232:	call   DWORD PTR ds:0x640250a0
64012238:	lea    ecx,[esi+0x30]
6401223b:	pop    esi
6401223c:	jmp    0x64012093
64012241:	push   ebp
64012242:	mov    ebp,esp
64012244:	push   ecx
64012245:	push   ecx
64012246:	push   esi
64012247:	mov    esi,ecx
64012249:	lea    eax,[esi+0x18]
6401224c:	push   eax
6401224d:	mov    DWORD PTR [ebp-0x8],eax
64012250:	call   DWORD PTR ds:0x64025098
64012256:	mov    eax,DWORD PTR [esi+0x34]
64012259:	mov    ecx,DWORD PTR [ebp+0x8]
6401225c:	cmp    ecx,eax
6401225e:	mov    BYTE PTR [ebp-0x4],0x1
64012262:	jg     0x64012288
64012264:	test   ecx,ecx
64012266:	jl     0x64012288
64012268:	cmp    ecx,eax
6401226a:	jne    0x6401227b
6401226c:	mov    esi,DWORD PTR [esi+0x8]
6401226f:	lea    ecx,[ebp-0x8]
64012272:	call   0x640121fa
64012277:	mov    eax,esi
64012279:	jmp    0x64012292
6401227b:	push   ecx
6401227c:	lea    ecx,[esi+0x30]
6401227f:	call   0x64012159
64012284:	mov    esi,DWORD PTR [eax]
64012286:	jmp    0x6401226f
64012288:	lea    ecx,[ebp-0x8]
6401228b:	call   0x640121fa
64012290:	xor    eax,eax
64012292:	pop    esi
64012293:	leave  
64012294:	ret    0x4
64012297:	push   esi
64012298:	mov    esi,ecx
6401229a:	call   0x64012180
6401229f:	push   esi
640122a0:	mov    DWORD PTR [esi],0x2c
640122a6:	call   0x6401210f
640122ab:	test   eax,eax
640122ad:	jge    0x640122b9
640122af:	mov    BYTE PTR ds:0x6403131c,0x1
640122b6:	and    DWORD PTR [esi],0x0
640122b9:	mov    eax,esi
640122bb:	pop    esi
640122bc:	ret    
640122bd:	push   ebp
640122be:	lea    ebp,[esp-0x78]
640122c2:	sub    esp,0x98
640122c8:	mov    eax,ds:0x6402d09c
640122cd:	xor    eax,ebp
640122cf:	mov    DWORD PTR [ebp+0x74],eax
640122d2:	push   esi
640122d3:	mov    esi,ecx
640122d5:	call   0x64012211
640122da:	mov    eax,0x64000000
640122df:	push   0x94
640122e4:	mov    DWORD PTR [esi+0x8],eax
640122e7:	mov    DWORD PTR [esi+0x4],eax
640122ea:	lea    eax,[ebp-0x20]
640122ed:	push   0x0
640122ef:	push   eax
640122f0:	mov    DWORD PTR [esi],0x3c
640122f6:	mov    BYTE PTR [esi+0xc],0x0
640122fa:	call   0x64013570
640122ff:	add    esp,0xc
64012302:	lea    eax,[ebp-0x20]
64012305:	push   eax
64012306:	mov    DWORD PTR [ebp-0x20],0x94
6401230d:	call   DWORD PTR ds:0x640250f4
64012313:	cmp    DWORD PTR [ebp-0x10],0x2
64012317:	jne    0x64012321
64012319:	cmp    DWORD PTR [ebp-0x1c],0x5
6401231d:	jb     0x64012339
6401231f:	jmp    0x64012335
64012321:	cmp    DWORD PTR [ebp-0x10],0x1
64012325:	jne    0x64012339
64012327:	cmp    DWORD PTR [ebp-0x1c],0x4
6401232b:	ja     0x64012335
6401232d:	jne    0x64012339
6401232f:	cmp    DWORD PTR [ebp-0x18],0x0
64012333:	jbe    0x64012339
64012335:	mov    BYTE PTR [esi+0xc],0x1
64012339:	lea    ecx,[esi+0x18]
6401233c:	mov    DWORD PTR [esi+0x10],0x800
64012343:	mov    DWORD PTR [esi+0x14],0x64025c10
6401234a:	call   0x640120c4
6401234f:	test   eax,eax
64012351:	jge    0x6401235a
64012353:	mov    BYTE PTR ds:0x6403131c,0x1
6401235a:	mov    ecx,DWORD PTR [ebp+0x74]
6401235d:	mov    eax,esi
6401235f:	xor    ecx,ebp
64012361:	pop    esi
64012362:	call   0x64012e6c
64012367:	add    ebp,0x78
6401236a:	leave  
6401236b:	ret    
6401236c:	push   esi
6401236d:	push   DWORD PTR ds:0x6402e4d0
64012373:	mov    esi,ecx
64012375:	push   esi
64012376:	call   0x6401219a
6401237b:	lea    ecx,[esi+0x20]
6401237e:	pop    esi
6401237f:	jmp    0x64012093
64012384:	cmp    BYTE PTR [ecx+0x8],0x0
64012388:	mov    DWORD PTR [ecx],0x64025c20
6401238e:	je     0x6401239e
64012390:	mov    ecx,DWORD PTR [ecx+0x4]
64012393:	test   ecx,ecx
64012395:	je     0x6401239e
64012397:	push   ecx
64012398:	call   DWORD PTR ds:0x640250fc
6401239e:	ret    
6401239f:	push   DWORD PTR [esp+0x4]
640123a3:	push   0x0
640123a5:	push   DWORD PTR [ecx+0x4]
640123a8:	call   DWORD PTR ds:0x64025100
640123ae:	ret    0x4
640123b1:	cmp    DWORD PTR [esp+0x4],0x0
640123b6:	je     0x640123c7
640123b8:	push   DWORD PTR [esp+0x4]
640123bc:	push   0x0
640123be:	push   DWORD PTR [ecx+0x4]
640123c1:	call   DWORD PTR ds:0x64025104
640123c7:	ret    0x4
640123ca:	push   ebp
640123cb:	mov    ebp,esp
640123cd:	xor    eax,eax
640123cf:	cmp    DWORD PTR [ebp+0x8],eax
640123d2:	jne    0x640123dd
640123d4:	push   DWORD PTR [ebp+0xc]
640123d7:	mov    eax,DWORD PTR [ecx]
640123d9:	call   DWORD PTR [eax]
640123db:	jmp    0x640123fe
640123dd:	cmp    DWORD PTR [ebp+0xc],eax
640123e0:	jne    0x640123ee
640123e2:	push   DWORD PTR [ebp+0x8]
640123e5:	mov    eax,DWORD PTR [ecx]
640123e7:	call   DWORD PTR [eax+0x4]
640123ea:	xor    eax,eax
640123ec:	jmp    0x640123fe
640123ee:	push   DWORD PTR [ebp+0xc]
640123f1:	push   DWORD PTR [ebp+0x8]
640123f4:	push   eax
640123f5:	push   DWORD PTR [ecx+0x4]
640123f8:	call   DWORD PTR ds:0x64025108
640123fe:	pop    ebp
640123ff:	ret    0x8
64012402:	push   DWORD PTR [esp+0x4]
64012406:	push   0x0
64012408:	push   DWORD PTR [ecx+0x4]
6401240b:	call   DWORD PTR ds:0x6402510c
64012411:	ret    0x4
64012414:	push   esi
64012415:	mov    esi,ecx
64012417:	call   0x64012384
6401241c:	test   BYTE PTR [esp+0x8],0x1
64012421:	je     0x6401242a
64012423:	push   esi
64012424:	call   0x64012612
64012429:	pop    ecx
6401242a:	mov    eax,esi
6401242c:	pop    esi
6401242d:	ret    0x4
64012430:	mov    eax,ecx
64012432:	mov    ecx,DWORD PTR [esp+0x4]
64012436:	mov    DWORD PTR [eax+0x4],ecx
64012439:	mov    DWORD PTR [eax],0x64025c34
6401243f:	xor    ecx,ecx
64012441:	mov    DWORD PTR [eax+0x14],0x2
64012448:	mov    DWORD PTR [eax+0xc],ecx
6401244b:	mov    DWORD PTR [eax+0x10],ecx
6401244e:	mov    WORD PTR [eax+0x18],cx
64012452:	mov    WORD PTR [eax+0x1a],cx
64012456:	mov    DWORD PTR [eax+0x8],eax
64012459:	ret    0x4
6401245c:	mov    eax,DWORD PTR [esp+0x8]
64012460:	mul    DWORD PTR [esp+0xc]
64012464:	test   edx,edx
64012466:	ja     0x6401246d
64012468:	cmp    eax,0xffffffff
6401246b:	jbe    0x64012473
6401246d:	mov    eax,0x80070057
64012472:	ret    
64012473:	mov    ecx,DWORD PTR [esp+0x4]
64012477:	mov    DWORD PTR [ecx],eax
64012479:	xor    eax,eax
6401247b:	ret    
6401247c:	mov    ecx,DWORD PTR [ecx+0x4]
6401247f:	mov    eax,DWORD PTR [ecx]
64012481:	jmp    DWORD PTR [eax+0x4]
64012484:	xor    edx,edx
64012486:	lea    eax,[ecx+0x14]
64012489:	inc    edx
6401248a:	lock xadd DWORD PTR [eax],edx
6401248e:	lea    eax,[ecx+0x8]
64012491:	ret    
64012492:	mov    eax,ecx
64012494:	ret    
64012495:	test   BYTE PTR [esp+0x4],0x1
6401249a:	push   esi
6401249b:	mov    esi,ecx
6401249d:	mov    DWORD PTR [esi],0x64025c34
640124a3:	je     0x640124ac
640124a5:	push   esi
640124a6:	call   0x64012612
640124ab:	pop    ecx
640124ac:	mov    eax,esi
640124ae:	pop    esi
640124af:	ret    0x4
640124b2:	mov    eax,DWORD PTR [esp+0x8]
640124b6:	mov    ecx,DWORD PTR [esp+0xc]
640124ba:	or     edx,0xffffffff
640124bd:	sub    edx,eax
640124bf:	cmp    edx,ecx
640124c1:	jae    0x640124c9
640124c3:	mov    eax,0x80070057
640124c8:	ret    
640124c9:	add    eax,ecx
640124cb:	mov    ecx,DWORD PTR [esp+0x4]
640124cf:	mov    DWORD PTR [ecx],eax
640124d1:	xor    eax,eax
640124d3:	ret    
640124d4:	push   ebp
640124d5:	mov    ebp,esp
640124d7:	push   esi
640124d8:	mov    esi,DWORD PTR [ebp+0x8]
640124db:	push   edi
640124dc:	push   DWORD PTR [ebp+0xc]
640124df:	add    esi,0x8
640124e2:	and    esi,0xfffffff8
640124e5:	lea    eax,[ebp+0x8]
640124e8:	push   esi
640124e9:	push   eax
640124ea:	mov    edi,ecx
640124ec:	call   0x6401245c
640124f1:	add    esp,0xc
640124f4:	test   eax,eax
640124f6:	jl     0x6401252e
640124f8:	push   DWORD PTR [ebp+0x8]
640124fb:	lea    eax,[ebp+0x8]
640124fe:	push   0x10
64012500:	push   eax
64012501:	call   0x640124b2
64012506:	add    esp,0xc
64012509:	test   eax,eax
6401250b:	jl     0x6401252e
6401250d:	mov    ecx,DWORD PTR [edi+0x4]
64012510:	push   DWORD PTR [ebp+0x8]
64012513:	mov    eax,DWORD PTR [ecx]
64012515:	call   DWORD PTR [eax]
64012517:	test   eax,eax
64012519:	je     0x6401252e
6401251b:	dec    esi
6401251c:	and    DWORD PTR [eax+0x4],0x0
64012520:	mov    DWORD PTR [eax],edi
64012522:	mov    DWORD PTR [eax+0xc],0x1
64012529:	mov    DWORD PTR [eax+0x8],esi
6401252c:	jmp    0x64012530
6401252e:	xor    eax,eax
64012530:	pop    edi
64012531:	pop    esi
64012532:	pop    ebp
64012533:	ret    0x8
64012536:	push   ebp
64012537:	mov    ebp,esp
64012539:	push   esi
6401253a:	mov    esi,DWORD PTR [ebp+0xc]
6401253d:	push   edi
6401253e:	push   DWORD PTR [ebp+0x10]
64012541:	add    esi,0x8
64012544:	and    esi,0xfffffff8
64012547:	lea    eax,[ebp+0xc]
6401254a:	push   esi
6401254b:	push   eax
6401254c:	mov    edi,ecx
6401254e:	call   0x6401245c
64012553:	add    esp,0xc
64012556:	test   eax,eax
64012558:	jl     0x64012587
6401255a:	push   DWORD PTR [ebp+0xc]
6401255d:	lea    eax,[ebp+0xc]
64012560:	push   0x10
64012562:	push   eax
64012563:	call   0x640124b2
64012568:	add    esp,0xc
6401256b:	test   eax,eax
6401256d:	jl     0x64012587
6401256f:	push   DWORD PTR [ebp+0xc]
64012572:	mov    ecx,DWORD PTR [edi+0x4]
64012575:	push   DWORD PTR [ebp+0x8]
64012578:	mov    eax,DWORD PTR [ecx]
6401257a:	call   DWORD PTR [eax+0x8]
6401257d:	test   eax,eax
6401257f:	je     0x64012587
64012581:	dec    esi
64012582:	mov    DWORD PTR [eax+0x8],esi
64012585:	jmp    0x64012589
64012587:	xor    eax,eax
64012589:	pop    edi
6401258a:	pop    esi
6401258b:	pop    ebp
6401258c:	ret    0xc
6401258f:	push   0x44
64012591:	mov    eax,0x640227c5
64012596:	call   0x640146bb
6401259b:	push   0x64025c4c
640125a0:	lea    ecx,[ebp-0x28]
640125a3:	call   0x64002720
640125a8:	and    DWORD PTR [ebp-0x4],0x0
640125ac:	lea    eax,[ebp-0x28]
640125af:	push   eax
640125b0:	lea    ecx,[ebp-0x50]
640125b3:	call   0x64002d10
640125b8:	push   0x6402ab28
640125bd:	lea    eax,[ebp-0x50]
640125c0:	push   eax
640125c1:	mov    DWORD PTR [ebp-0x50],0x6402531c
640125c8:	call   0x64012a5b
640125cd:	int3   
640125ce:	push   0x44
640125d0:	mov    eax,0x640227e8
640125d5:	call   0x640146bb
640125da:	push   0x64025c5c
640125df:	lea    ecx,[ebp-0x28]
640125e2:	call   0x64002720
640125e7:	and    DWORD PTR [ebp-0x4],0x0
640125eb:	lea    eax,[ebp-0x28]
640125ee:	push   eax
640125ef:	lea    ecx,[ebp-0x50]
640125f2:	call   0x64002d10
640125f7:	push   0x6402aaec
640125fc:	lea    eax,[ebp-0x50]
640125ff:	push   eax
64012600:	mov    DWORD PTR [ebp-0x50],0x64025328
64012607:	call   0x64012a5b
6401260c:	int3   
6401260d:	jmp    0x640129f1
64012612:	jmp    0x64013d06
64012617:	push   ecx
64012618:	mov    DWORD PTR [ecx],0x64025c78
6401261e:	call   0x64014724
64012623:	pop    ecx
64012624:	ret    
64012625:	push   esi
64012626:	mov    esi,ecx
64012628:	call   0x64012617
6401262d:	test   BYTE PTR [esp+0x8],0x1
64012632:	je     0x6401263b
64012634:	push   esi
64012635:	call   0x64012612
6401263a:	pop    ecx
6401263b:	mov    eax,esi
6401263d:	pop    esi
6401263e:	ret    0x4
64012641:	mov    eax,DWORD PTR [esp+0x4]
64012645:	add    ecx,0x9
64012648:	push   ecx
64012649:	add    eax,0x9
6401264c:	push   eax
6401264d:	call   0x640147a0
64012652:	neg    eax
64012654:	pop    ecx
64012655:	sbb    eax,eax
64012657:	pop    ecx
64012658:	inc    eax
64012659:	ret    0x4
6401265c:	mov    eax,ecx
6401265e:	and    DWORD PTR [eax+0x4],0x0
64012662:	and    DWORD PTR [eax+0x8],0x0
64012666:	mov    DWORD PTR [eax],0x64025c80
6401266c:	ret    
6401266d:	push   ebx
6401266e:	mov    ebx,DWORD PTR [esp+0x8]
64012672:	push   esi
64012673:	push   edi
64012674:	mov    edi,ecx
64012676:	mov    DWORD PTR [edi],0x64025c80
6401267c:	mov    eax,DWORD PTR [ebx]
6401267e:	test   eax,eax
64012680:	je     0x640126a8
64012682:	push   eax
64012683:	call   0x64014630
64012688:	mov    esi,eax
6401268a:	inc    esi
6401268b:	push   esi
6401268c:	call   0x64013de3
64012691:	test   eax,eax
64012693:	pop    ecx
64012694:	pop    ecx
64012695:	mov    DWORD PTR [edi+0x4],eax
64012698:	je     0x640126ac
6401269a:	push   DWORD PTR [ebx]
6401269c:	push   esi
6401269d:	push   eax
6401269e:	call   0x64014828
640126a3:	add    esp,0xc
640126a6:	jmp    0x640126ac
640126a8:	and    DWORD PTR [edi+0x4],0x0
640126ac:	mov    DWORD PTR [edi+0x8],0x1
640126b3:	mov    eax,edi
640126b5:	pop    edi
640126b6:	pop    esi
640126b7:	pop    ebx
640126b8:	ret    0x4
640126bb:	mov    eax,ecx
640126bd:	mov    ecx,DWORD PTR [esp+0x4]
640126c1:	mov    DWORD PTR [eax],0x64025c80
640126c7:	mov    ecx,DWORD PTR [ecx]
640126c9:	and    DWORD PTR [eax+0x8],0x0
640126cd:	mov    DWORD PTR [eax+0x4],ecx
640126d0:	ret    0x8
640126d3:	push   ebx
640126d4:	mov    ebx,DWORD PTR [esp+0x8]
640126d8:	push   esi
640126d9:	mov    esi,ecx
640126db:	mov    DWORD PTR [esi],0x64025c80
640126e1:	mov    eax,DWORD PTR [ebx+0x8]
640126e4:	mov    DWORD PTR [esi+0x8],eax
640126e7:	test   eax,eax
640126e9:	mov    eax,DWORD PTR [ebx+0x4]
640126ec:	push   edi
640126ed:	je     0x64012720
640126ef:	test   eax,eax
640126f1:	je     0x6401271a
640126f3:	push   eax
640126f4:	call   0x64014630
640126f9:	mov    edi,eax
640126fb:	inc    edi
640126fc:	push   edi
640126fd:	call   0x64013de3
64012702:	test   eax,eax
64012704:	pop    ecx
64012705:	pop    ecx
64012706:	mov    DWORD PTR [esi+0x4],eax
64012709:	je     0x64012723
6401270b:	push   DWORD PTR [ebx+0x4]
6401270e:	push   edi
6401270f:	push   eax
64012710:	call   0x64014828
64012715:	add    esp,0xc
64012718:	jmp    0x64012723
6401271a:	and    DWORD PTR [esi+0x4],0x0
6401271e:	jmp    0x64012723
64012720:	mov    DWORD PTR [esi+0x4],eax
64012723:	pop    edi
64012724:	mov    eax,esi
64012726:	pop    esi
64012727:	pop    ebx
64012728:	ret    0x4
6401272b:	cmp    DWORD PTR [ecx+0x8],0x0
6401272f:	mov    DWORD PTR [ecx],0x64025c80
64012735:	je     0x64012740
64012737:	push   DWORD PTR [ecx+0x4]
6401273a:	call   0x64013d06
6401273f:	pop    ecx
64012740:	ret    
64012741:	mov    eax,DWORD PTR [ecx+0x4]
64012744:	test   eax,eax
64012746:	jne    0x6401274d
64012748:	mov    eax,0x64025c88
6401274d:	ret    
6401274e:	push   esi
6401274f:	lea    eax,[esp+0x8]
64012753:	push   eax
64012754:	mov    esi,ecx
64012756:	call   0x6401266d
6401275b:	mov    DWORD PTR [esi],0x64025ca0
64012761:	mov    eax,esi
64012763:	pop    esi
64012764:	ret    0x4
64012767:	push   esi
64012768:	push   DWORD PTR [esp+0x8]
6401276c:	mov    esi,ecx
6401276e:	call   0x640126d3
64012773:	mov    DWORD PTR [esi],0x64025ca0
64012779:	mov    eax,esi
6401277b:	pop    esi
6401277c:	ret    0x4
6401277f:	mov    DWORD PTR [ecx],0x64025ca0
64012785:	jmp    0x6401272b
6401278a:	push   esi
6401278b:	mov    esi,ecx
6401278d:	call   0x6401272b
64012792:	test   BYTE PTR [esp+0x8],0x1
64012797:	je     0x640127a0
64012799:	push   esi
6401279a:	call   0x64012612
6401279f:	pop    ecx
640127a0:	mov    eax,esi
640127a2:	pop    esi
640127a3:	ret    0x4
640127a6:	push   esi
640127a7:	mov    esi,ecx
640127a9:	mov    DWORD PTR [esi],0x64025ca0
640127af:	call   0x6401272b
640127b4:	test   BYTE PTR [esp+0x8],0x1
640127b9:	je     0x640127c2
640127bb:	push   esi
640127bc:	call   0x64012612
640127c1:	pop    ecx
640127c2:	mov    eax,esi
640127c4:	pop    esi
640127c5:	ret    0x4
640127c8:	push   ebp
640127c9:	mov    ebp,esp
640127cb:	push   esi
640127cc:	mov    esi,DWORD PTR [ebp+0x14]
640127cf:	push   edi
640127d0:	xor    edi,edi
640127d2:	cmp    esi,edi
640127d4:	jne    0x640127da
640127d6:	xor    eax,eax
640127d8:	jmp    0x6401283f
640127da:	cmp    DWORD PTR [ebp+0x8],edi
640127dd:	jne    0x640127fa
640127df:	call   0x64014c30
640127e4:	push   0x16
640127e6:	pop    esi
640127e7:	mov    DWORD PTR [eax],esi
640127e9:	push   edi
640127ea:	push   edi
640127eb:	push   edi
640127ec:	push   edi
640127ed:	push   edi
640127ee:	call   0x640129a4
640127f3:	add    esp,0x14
640127f6:	mov    eax,esi
640127f8:	jmp    0x6401283f
640127fa:	cmp    DWORD PTR [ebp+0x10],edi
640127fd:	je     0x64012815
640127ff:	cmp    DWORD PTR [ebp+0xc],esi
64012802:	jb     0x64012815
64012804:	push   esi
64012805:	push   DWORD PTR [ebp+0x10]
64012808:	push   DWORD PTR [ebp+0x8]
6401280b:	call   0x64014890
64012810:	add    esp,0xc
64012813:	jmp    0x640127d6
64012815:	push   DWORD PTR [ebp+0xc]
64012818:	push   edi
64012819:	push   DWORD PTR [ebp+0x8]
6401281c:	call   0x64013570
64012821:	add    esp,0xc
64012824:	cmp    DWORD PTR [ebp+0x10],edi
64012827:	je     0x640127df
64012829:	cmp    DWORD PTR [ebp+0xc],esi
6401282c:	jae    0x6401283c
6401282e:	call   0x64014c30
64012833:	push   0x22
64012835:	pop    ecx
64012836:	mov    DWORD PTR [eax],ecx
64012838:	mov    esi,ecx
6401283a:	jmp    0x640127e9
6401283c:	push   0x16
6401283e:	pop    eax
6401283f:	pop    edi
64012840:	pop    esi
64012841:	pop    ebp
64012842:	ret    
64012843:	push   ebp
64012844:	mov    ebp,esp
64012846:	mov    eax,DWORD PTR [ebp+0x14]
64012849:	push   esi
6401284a:	push   edi
6401284b:	xor    edi,edi
6401284d:	cmp    eax,edi
6401284f:	je     0x64012898
64012851:	cmp    DWORD PTR [ebp+0x8],edi
64012854:	jne    0x64012871
64012856:	call   0x64014c30
6401285b:	push   0x16
6401285d:	pop    esi
6401285e:	mov    DWORD PTR [eax],esi
64012860:	push   edi
64012861:	push   edi
64012862:	push   edi
64012863:	push   edi
64012864:	push   edi
64012865:	call   0x640129a4
6401286a:	add    esp,0x14
6401286d:	mov    eax,esi
6401286f:	jmp    0x6401289a
64012871:	cmp    DWORD PTR [ebp+0x10],edi
64012874:	je     0x64012856
64012876:	cmp    DWORD PTR [ebp+0xc],eax
64012879:	jae    0x64012889
6401287b:	call   0x64014c30
64012880:	push   0x22
64012882:	pop    ecx
64012883:	mov    DWORD PTR [eax],ecx
64012885:	mov    esi,ecx
64012887:	jmp    0x64012860
64012889:	push   eax
6401288a:	push   DWORD PTR [ebp+0x10]
6401288d:	push   DWORD PTR [ebp+0x8]
64012890:	call   0x64013eb0
64012895:	add    esp,0xc
64012898:	xor    eax,eax
6401289a:	pop    edi
6401289b:	pop    esi
6401289c:	pop    ebp
6401289d:	ret    
6401289e:	mov    eax,DWORD PTR [esp+0x4]
640128a2:	mov    ds:0x6402e55c,eax
640128a7:	ret    
640128a8:	push   ebp
640128a9:	lea    ebp,[esp-0x2a8]
640128b0:	sub    esp,0x328
640128b6:	mov    eax,ds:0x6402d09c
640128bb:	xor    eax,ebp
640128bd:	mov    DWORD PTR [ebp+0x2a4],eax
640128c3:	push   esi
640128c4:	mov    DWORD PTR [ebp+0x88],eax
640128ca:	mov    DWORD PTR [ebp+0x84],ecx
640128d0:	mov    DWORD PTR [ebp+0x80],edx
640128d6:	mov    DWORD PTR [ebp+0x7c],ebx
640128d9:	mov    DWORD PTR [ebp+0x78],esi
640128dc:	mov    DWORD PTR [ebp+0x74],edi
640128df:	data16 mov WORD PTR [ebp+0xa0],ss
640128e6:	data16 mov WORD PTR [ebp+0x94],cs
640128ed:	data16 mov WORD PTR [ebp+0x70],ds
640128f1:	data16 mov WORD PTR [ebp+0x6c],es
640128f5:	data16 mov WORD PTR [ebp+0x68],fs
640128f9:	data16 mov WORD PTR [ebp+0x64],gs
640128fd:	pushf  
640128fe:	pop    DWORD PTR [ebp+0x98]
64012904:	mov    esi,DWORD PTR [ebp+0x2ac]
6401290a:	lea    eax,[ebp+0x2ac]
64012910:	mov    DWORD PTR [ebp+0x9c],eax
64012916:	mov    DWORD PTR [ebp-0x28],0x10001
6401291d:	mov    DWORD PTR [ebp+0x90],esi
64012923:	mov    eax,DWORD PTR [eax-0x4]
64012926:	push   0x50
64012928:	mov    DWORD PTR [ebp+0x8c],eax
6401292e:	lea    eax,[ebp-0x80]
64012931:	push   0x0
64012933:	push   eax
64012934:	call   0x64013570
64012939:	lea    eax,[ebp-0x80]
6401293c:	mov    DWORD PTR [ebp-0x30],eax
6401293f:	lea    eax,[ebp-0x28]
64012942:	add    esp,0xc
64012945:	mov    DWORD PTR [ebp-0x80],0xc000000d
6401294c:	mov    DWORD PTR [ebp-0x74],esi
6401294f:	mov    DWORD PTR [ebp-0x2c],eax
64012952:	call   DWORD PTR ds:0x64025120
64012958:	push   0x0
6401295a:	mov    esi,eax
6401295c:	call   DWORD PTR ds:0x6402511c
64012962:	lea    eax,[ebp-0x30]
64012965:	push   eax
64012966:	call   DWORD PTR ds:0x64025118
6401296c:	test   eax,eax
6401296e:	jne    0x6401297c
64012970:	test   esi,esi
64012972:	jne    0x6401297c
64012974:	push   0x2
64012976:	call   0x64014c74
6401297b:	pop    ecx
6401297c:	push   0xc000000d
64012981:	call   DWORD PTR ds:0x64025048
64012987:	push   eax
64012988:	call   DWORD PTR ds:0x64025114
6401298e:	mov    ecx,DWORD PTR [ebp+0x2a4]
64012994:	xor    ecx,ebp
64012996:	pop    esi
64012997:	call   0x64012e6c
6401299c:	add    ebp,0x2a8
640129a2:	leave  
640129a3:	ret    
640129a4:	push   ebp
640129a5:	mov    ebp,esp
640129a7:	push   DWORD PTR ds:0x6402e55c
640129ad:	call   0x64014d5f
640129b2:	test   eax,eax
640129b4:	pop    ecx
640129b5:	je     0x640129ba
640129b7:	pop    ebp
640129b8:	jmp    eax
640129ba:	push   0x2
640129bc:	call   0x64014c74
640129c1:	pop    ecx
640129c2:	pop    ebp
640129c3:	jmp    0x640128a8
640129c8:	xor    eax,eax
640129ca:	push   eax
640129cb:	push   eax
640129cc:	push   eax
640129cd:	push   eax
640129ce:	push   eax
640129cf:	call   0x640129a4
640129d4:	add    esp,0x14
640129d7:	ret    
640129d8:	push   esi
640129d9:	push   0x1
640129db:	push   0x6402d098
640129e0:	mov    esi,ecx
640129e2:	call   0x640126bb
640129e7:	mov    DWORD PTR [esi],0x64025304
640129ed:	mov    eax,esi
640129ef:	pop    esi
640129f0:	ret    
640129f1:	push   ebp
640129f2:	mov    ebp,esp
640129f4:	sub    esp,0xc
640129f7:	jmp    0x64012a06
640129f9:	push   DWORD PTR [ebp+0x8]
640129fc:	call   0x640152ab
64012a01:	test   eax,eax
64012a03:	pop    ecx
64012a04:	je     0x64012a15
64012a06:	push   DWORD PTR [ebp+0x8]
64012a09:	call   0x64013de3
64012a0e:	test   eax,eax
64012a10:	pop    ecx
64012a11:	je     0x640129f9
64012a13:	leave  
64012a14:	ret    
64012a15:	test   BYTE PTR ds:0x6402e56c,0x1
64012a1c:	mov    esi,0x6402e560
64012a21:	jne    0x64012a3c
64012a23:	or     DWORD PTR ds:0x6402e56c,0x1
64012a2a:	mov    ecx,esi
64012a2c:	call   0x640129d8
64012a31:	push   0x640243aa
64012a36:	call   0x64012f9f
64012a3b:	pop    ecx
64012a3c:	push   esi
64012a3d:	lea    ecx,[ebp-0xc]
64012a40:	call   0x640126d3
64012a45:	push   0x6402aa5c
64012a4a:	lea    eax,[ebp-0xc]
64012a4d:	push   eax
64012a4e:	mov    DWORD PTR [ebp-0xc],0x64025304
64012a55:	call   0x64012a5b
64012a5a:	int3   
64012a5b:	push   ebp
64012a5c:	mov    ebp,esp
64012a5e:	sub    esp,0x20
64012a61:	mov    eax,DWORD PTR [ebp+0x8]
64012a64:	push   esi
64012a65:	push   edi
64012a66:	push   0x8
64012a68:	pop    ecx
64012a69:	mov    esi,0x64025ca8
64012a6e:	lea    edi,[ebp-0x20]
64012a71:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64012a73:	mov    DWORD PTR [ebp-0x8],eax
64012a76:	mov    eax,DWORD PTR [ebp+0xc]
64012a79:	test   eax,eax
64012a7b:	pop    edi
64012a7c:	mov    DWORD PTR [ebp-0x4],eax
64012a7f:	pop    esi
64012a80:	je     0x64012a8e
64012a82:	test   BYTE PTR [eax],0x8
64012a85:	je     0x64012a8e
64012a87:	mov    DWORD PTR [ebp-0xc],0x1994000
64012a8e:	lea    eax,[ebp-0xc]
64012a91:	push   eax
64012a92:	push   DWORD PTR [ebp-0x10]
64012a95:	push   DWORD PTR [ebp-0x1c]
64012a98:	push   DWORD PTR [ebp-0x20]
64012a9b:	call   DWORD PTR ds:0x640250f8
64012aa1:	leave  
64012aa2:	ret    0x8
64012aa5:	push   ebp
64012aa6:	mov    ebp,esp
64012aa8:	push   ecx
64012aa9:	push   ebx
64012aaa:	mov    eax,DWORD PTR [ebp+0xc]
64012aad:	add    eax,0xc
64012ab0:	mov    DWORD PTR [ebp-0x4],eax
64012ab3:	mov    ebx,DWORD PTR fs:0x0
64012aba:	mov    eax,DWORD PTR [ebx]
64012abc:	mov    fs:0x0,eax
64012ac2:	mov    eax,DWORD PTR [ebp+0x8]
64012ac5:	mov    ebx,DWORD PTR [ebp+0xc]
64012ac8:	mov    ebp,DWORD PTR [ebp-0x4]
64012acb:	mov    esp,DWORD PTR [ebx-0x4]
64012ace:	jmp    eax
64012ad0:	pop    ebx
64012ad1:	leave  
64012ad2:	ret    0x8
64012ad5:	pop    eax
64012ad6:	pop    ecx
64012ad7:	xchg   DWORD PTR [esp],eax
64012ada:	jmp    eax
64012adc:	push   ebp
64012add:	mov    ebp,esp
64012adf:	push   ecx
64012ae0:	push   ecx
64012ae1:	push   ebx
64012ae2:	push   esi
64012ae3:	push   edi
64012ae4:	mov    esi,DWORD PTR fs:0x0
64012aeb:	mov    DWORD PTR [ebp-0x4],esi
64012aee:	mov    DWORD PTR [ebp-0x8],0x64012b05
64012af5:	push   0x0
64012af7:	push   DWORD PTR [ebp+0xc]
64012afa:	push   DWORD PTR [ebp-0x8]
64012afd:	push   DWORD PTR [ebp+0x8]
64012b00:	call   0x6401f0dc
64012b05:	mov    eax,DWORD PTR [ebp+0xc]
64012b08:	mov    eax,DWORD PTR [eax+0x4]
64012b0b:	and    eax,0xfffffffd
64012b0e:	mov    ecx,DWORD PTR [ebp+0xc]
64012b11:	mov    DWORD PTR [ecx+0x4],eax
64012b14:	mov    edi,DWORD PTR fs:0x0
64012b1b:	mov    ebx,DWORD PTR [ebp-0x4]
64012b1e:	mov    DWORD PTR [ebx],edi
64012b20:	mov    DWORD PTR fs:0x0,ebx
64012b27:	pop    edi
64012b28:	pop    esi
64012b29:	pop    ebx
64012b2a:	leave  
64012b2b:	ret    0x8
64012b2e:	push   ebp
64012b2f:	mov    ebp,esp
64012b31:	sub    esp,0x8
64012b34:	push   ebx
64012b35:	push   esi
64012b36:	push   edi
64012b37:	cld    
64012b38:	mov    DWORD PTR [ebp-0x4],eax
64012b3b:	xor    eax,eax
64012b3d:	push   eax
64012b3e:	push   eax
64012b3f:	push   eax
64012b40:	push   DWORD PTR [ebp-0x4]
64012b43:	push   DWORD PTR [ebp+0x14]
64012b46:	push   DWORD PTR [ebp+0x10]
64012b49:	push   DWORD PTR [ebp+0xc]
64012b4c:	push   DWORD PTR [ebp+0x8]
64012b4f:	call   0x64015e73
64012b54:	add    esp,0x20
64012b57:	mov    DWORD PTR [ebp-0x8],eax
64012b5a:	pop    edi
64012b5b:	pop    esi
64012b5c:	pop    ebx
64012b5d:	mov    eax,DWORD PTR [ebp-0x8]
64012b60:	mov    esp,ebp
64012b62:	pop    ebp
64012b63:	ret    
64012b64:	push   esi
64012b65:	cld    
64012b66:	mov    esi,DWORD PTR [esp+0xc]
64012b6a:	mov    ecx,DWORD PTR [esi+0x8]
64012b6d:	xor    ecx,esi
64012b6f:	call   0x64012e6c
64012b74:	push   0x0
64012b76:	push   esi
64012b77:	push   DWORD PTR [esi+0x14]
64012b7a:	push   DWORD PTR [esi+0xc]
64012b7d:	push   0x0
64012b7f:	push   DWORD PTR [esp+0x24]
64012b83:	push   DWORD PTR [esi+0x10]
64012b86:	push   DWORD PTR [esp+0x24]
64012b8a:	call   0x64015e73
64012b8f:	add    esp,0x20
64012b92:	pop    esi
64012b93:	ret    
64012b94:	push   ebp
64012b95:	mov    ebp,esp
64012b97:	sub    esp,0x38
64012b9a:	push   ebx
64012b9b:	cmp    DWORD PTR [ebp+0x8],0x123
64012ba2:	jne    0x64012bb6
64012ba4:	mov    eax,0x64012c3d
64012ba9:	mov    ecx,DWORD PTR [ebp+0xc]
64012bac:	mov    DWORD PTR [ecx],eax
64012bae:	xor    eax,eax
64012bb0:	inc    eax
64012bb1:	jmp    0x64012c66
64012bb6:	and    DWORD PTR [ebp-0x28],0x0
64012bba:	mov    DWORD PTR [ebp-0x24],0x64012c69
64012bc1:	mov    eax,ds:0x6402d09c
64012bc6:	lea    ecx,[ebp-0x28]
64012bc9:	xor    eax,ecx
64012bcb:	mov    DWORD PTR [ebp-0x20],eax
64012bce:	mov    eax,DWORD PTR [ebp+0x18]
64012bd1:	mov    DWORD PTR [ebp-0x1c],eax
64012bd4:	mov    eax,DWORD PTR [ebp+0xc]
64012bd7:	mov    DWORD PTR [ebp-0x18],eax
64012bda:	mov    eax,DWORD PTR [ebp+0x1c]
64012bdd:	mov    DWORD PTR [ebp-0x14],eax
64012be0:	mov    eax,DWORD PTR [ebp+0x20]
64012be3:	mov    DWORD PTR [ebp-0x10],eax
64012be6:	and    DWORD PTR [ebp-0xc],0x0
64012bea:	and    DWORD PTR [ebp-0x8],0x0
64012bee:	and    DWORD PTR [ebp-0x4],0x0
64012bf2:	mov    DWORD PTR [ebp-0xc],esp
64012bf5:	mov    DWORD PTR [ebp-0x8],ebp
64012bf8:	mov    eax,fs:0x0
64012bfe:	mov    DWORD PTR [ebp-0x28],eax
64012c01:	lea    eax,[ebp-0x28]
64012c04:	mov    fs:0x0,eax
64012c0a:	mov    DWORD PTR [ebp-0x38],0x1
64012c11:	mov    eax,DWORD PTR [ebp+0x8]
64012c14:	mov    DWORD PTR [ebp-0x34],eax
64012c17:	mov    eax,DWORD PTR [ebp+0x10]
64012c1a:	mov    DWORD PTR [ebp-0x30],eax
64012c1d:	call   0x64014f7b
64012c22:	mov    eax,DWORD PTR [eax+0x80]
64012c28:	mov    DWORD PTR [ebp-0x2c],eax
64012c2b:	lea    eax,[ebp-0x34]
64012c2e:	push   eax
64012c2f:	mov    eax,DWORD PTR [ebp+0x8]
64012c32:	push   DWORD PTR [eax]
64012c34:	call   DWORD PTR [ebp-0x2c]
64012c37:	pop    ecx
64012c38:	pop    ecx
64012c39:	and    DWORD PTR [ebp-0x38],0x0
64012c3d:	cmp    DWORD PTR [ebp-0x4],0x0
64012c41:	je     0x64012c5a
64012c43:	mov    ebx,DWORD PTR fs:0x0
64012c4a:	mov    eax,DWORD PTR [ebx]
64012c4c:	mov    ebx,DWORD PTR [ebp-0x28]
64012c4f:	mov    DWORD PTR [ebx],eax
64012c51:	mov    DWORD PTR fs:0x0,ebx
64012c58:	jmp    0x64012c63
64012c5a:	mov    eax,DWORD PTR [ebp-0x28]
64012c5d:	mov    fs:0x0,eax
64012c63:	mov    eax,DWORD PTR [ebp-0x38]
64012c66:	pop    ebx
64012c67:	leave  
64012c68:	ret    
64012c69:	push   ebp
64012c6a:	mov    ebp,esp
64012c6c:	push   ecx
64012c6d:	push   ebx
64012c6e:	cld    
64012c6f:	mov    eax,DWORD PTR [ebp+0xc]
64012c72:	mov    ecx,DWORD PTR [eax+0x8]
64012c75:	xor    ecx,DWORD PTR [ebp+0xc]
64012c78:	call   0x64012e6c
64012c7d:	mov    eax,DWORD PTR [ebp+0x8]
64012c80:	mov    eax,DWORD PTR [eax+0x4]
64012c83:	and    eax,0x66
64012c86:	je     0x64012c99
64012c88:	mov    eax,DWORD PTR [ebp+0xc]
64012c8b:	mov    DWORD PTR [eax+0x24],0x1
64012c92:	xor    eax,eax
64012c94:	inc    eax
64012c95:	jmp    0x64012d03
64012c97:	jmp    0x64012d03
64012c99:	push   0x1
64012c9b:	mov    eax,DWORD PTR [ebp+0xc]
64012c9e:	push   DWORD PTR [eax+0x18]
64012ca1:	mov    eax,DWORD PTR [ebp+0xc]
64012ca4:	push   DWORD PTR [eax+0x14]
64012ca7:	mov    eax,DWORD PTR [ebp+0xc]
64012caa:	push   DWORD PTR [eax+0xc]
64012cad:	push   0x0
64012caf:	push   DWORD PTR [ebp+0x10]
64012cb2:	mov    eax,DWORD PTR [ebp+0xc]
64012cb5:	push   DWORD PTR [eax+0x10]
64012cb8:	push   DWORD PTR [ebp+0x8]
64012cbb:	call   0x64015e73
64012cc0:	add    esp,0x20
64012cc3:	mov    eax,DWORD PTR [ebp+0xc]
64012cc6:	cmp    DWORD PTR [eax+0x24],0x0
64012cca:	jne    0x64012cd7
64012ccc:	push   DWORD PTR [ebp+0x8]
64012ccf:	push   DWORD PTR [ebp+0xc]
64012cd2:	call   0x64012adc
64012cd7:	push   0x0
64012cd9:	push   0x0
64012cdb:	push   0x0
64012cdd:	push   0x0
64012cdf:	push   0x0
64012ce1:	lea    eax,[ebp-0x4]
64012ce4:	push   eax
64012ce5:	push   0x123
64012cea:	call   0x64012b94
64012cef:	add    esp,0x1c
64012cf2:	mov    eax,DWORD PTR [ebp-0x4]
64012cf5:	mov    ebx,DWORD PTR [ebp+0xc]
64012cf8:	mov    esp,DWORD PTR [ebx+0x1c]
64012cfb:	mov    ebp,DWORD PTR [ebx+0x20]
64012cfe:	jmp    eax
64012d00:	xor    eax,eax
64012d02:	inc    eax
64012d03:	pop    ebx
64012d04:	leave  
64012d05:	ret    
64012d06:	push   ebp
64012d07:	mov    ebp,esp
64012d09:	push   ecx
64012d0a:	push   ebx
64012d0b:	push   esi
64012d0c:	push   edi
64012d0d:	mov    edi,DWORD PTR [ebp+0x8]
64012d10:	mov    eax,DWORD PTR [edi+0x10]
64012d13:	mov    esi,DWORD PTR [edi+0xc]
64012d16:	mov    DWORD PTR [ebp-0x4],eax
64012d19:	mov    ebx,esi
64012d1b:	jmp    0x64012d4a
64012d1d:	cmp    esi,0xffffffff
64012d20:	jne    0x64012d27
64012d22:	call   0x64015fa3
64012d27:	mov    ecx,DWORD PTR [ebp-0x4]
64012d2a:	dec    esi
64012d2b:	mov    eax,esi
64012d2d:	imul   eax,eax,0x14
64012d30:	add    eax,ecx
64012d32:	mov    ecx,DWORD PTR [ebp+0x10]
64012d35:	cmp    DWORD PTR [eax+0x4],ecx
64012d38:	jge    0x64012d3f
64012d3a:	cmp    ecx,DWORD PTR [eax+0x8]
64012d3d:	jle    0x64012d44
64012d3f:	cmp    esi,0xffffffff
64012d42:	jne    0x64012d4d
64012d44:	dec    DWORD PTR [ebp+0xc]
64012d47:	mov    ebx,DWORD PTR [ebp+0x8]
64012d4a:	mov    DWORD PTR [ebp+0x8],esi
64012d4d:	cmp    DWORD PTR [ebp+0xc],0x0
64012d51:	jge    0x64012d1d
64012d53:	mov    eax,DWORD PTR [ebp+0x14]
64012d56:	inc    esi
64012d57:	mov    DWORD PTR [eax],esi
64012d59:	mov    eax,DWORD PTR [ebp+0x18]
64012d5c:	mov    DWORD PTR [eax],ebx
64012d5e:	cmp    ebx,DWORD PTR [edi+0xc]
64012d61:	ja     0x64012d67
64012d63:	cmp    esi,ebx
64012d65:	jbe    0x64012d6c
64012d67:	call   0x64015fa3
64012d6c:	mov    eax,esi
64012d6e:	imul   eax,eax,0x14
64012d71:	add    eax,DWORD PTR [ebp-0x4]
64012d74:	pop    edi
64012d75:	pop    esi
64012d76:	pop    ebx
64012d77:	leave  
64012d78:	ret    
64012d79:	mov    eax,DWORD PTR [esp+0x8]
64012d7d:	push   esi
64012d7e:	mov    esi,DWORD PTR [esp+0x8]
64012d82:	mov    DWORD PTR [esi],eax
64012d84:	call   0x64014f7b
64012d89:	mov    eax,DWORD PTR [eax+0x98]
64012d8f:	mov    DWORD PTR [esi+0x4],eax
64012d92:	call   0x64014f7b
64012d97:	mov    DWORD PTR [eax+0x98],esi
64012d9d:	mov    eax,esi
64012d9f:	pop    esi
64012da0:	ret    
64012da1:	call   0x64014f7b
64012da6:	mov    eax,DWORD PTR [eax+0x98]
64012dac:	jmp    0x64012db9
64012dae:	mov    ecx,DWORD PTR [eax]
64012db0:	cmp    ecx,DWORD PTR [esp+0x4]
64012db4:	je     0x64012dbf
64012db6:	mov    eax,DWORD PTR [eax+0x4]
64012db9:	test   eax,eax
64012dbb:	jne    0x64012dae
64012dbd:	inc    eax
64012dbe:	ret    
64012dbf:	xor    eax,eax
64012dc1:	ret    
64012dc2:	push   esi
64012dc3:	call   0x64014f7b
64012dc8:	mov    esi,DWORD PTR [esp+0x8]
64012dcc:	cmp    esi,DWORD PTR [eax+0x98]
64012dd2:	jne    0x64012de4
64012dd4:	call   0x64014f7b
64012dd9:	mov    ecx,DWORD PTR [esi+0x4]
64012ddc:	mov    DWORD PTR [eax+0x98],ecx
64012de2:	pop    esi
64012de3:	ret    
64012de4:	call   0x64014f7b
64012de9:	mov    eax,DWORD PTR [eax+0x98]
64012def:	jmp    0x64012dfa
64012df1:	mov    ecx,DWORD PTR [eax+0x4]
64012df4:	cmp    esi,ecx
64012df6:	je     0x64012e06
64012df8:	mov    eax,ecx
64012dfa:	cmp    DWORD PTR [eax+0x4],0x0
64012dfe:	jne    0x64012df1
64012e00:	pop    esi
64012e01:	jmp    0x64015fa3
64012e06:	mov    ecx,DWORD PTR [esi+0x4]
64012e09:	mov    DWORD PTR [eax+0x4],ecx
64012e0c:	pop    esi
64012e0d:	ret    
64012e0e:	push   ebp
64012e0f:	mov    ebp,esp
64012e11:	sub    esp,0x18
64012e14:	mov    eax,ds:0x6402d09c
64012e19:	and    DWORD PTR [ebp-0x18],0x0
64012e1d:	lea    ecx,[ebp-0x18]
64012e20:	xor    eax,ecx
64012e22:	mov    ecx,DWORD PTR [ebp+0x8]
64012e25:	mov    DWORD PTR [ebp-0x10],eax
64012e28:	mov    eax,DWORD PTR [ebp+0xc]
64012e2b:	mov    DWORD PTR [ebp-0xc],eax
64012e2e:	mov    eax,DWORD PTR [ebp+0x14]
64012e31:	inc    eax
64012e32:	mov    DWORD PTR [ebp-0x14],0x64012b64
64012e39:	mov    DWORD PTR [ebp-0x8],ecx
64012e3c:	mov    DWORD PTR [ebp-0x4],eax
64012e3f:	mov    eax,fs:0x0
64012e45:	mov    DWORD PTR [ebp-0x18],eax
64012e48:	lea    eax,[ebp-0x18]
64012e4b:	mov    fs:0x0,eax
64012e51:	push   DWORD PTR [ebp+0x18]
64012e54:	push   ecx
64012e55:	push   DWORD PTR [ebp+0x10]
64012e58:	call   0x64015ff0
64012e5d:	mov    ecx,eax
64012e5f:	mov    eax,DWORD PTR [ebp-0x18]
64012e62:	mov    fs:0x0,eax
64012e68:	mov    eax,ecx
64012e6a:	leave  
64012e6b:	ret    
64012e6c:	cmp    ecx,DWORD PTR ds:0x6402d09c
64012e72:	jne    0x64012e76
64012e74:	repz ret 
64012e76:	jmp    0x6401603c
64012e7b:	push   ecx
64012e7c:	push   ebx
64012e7d:	push   ebp
64012e7e:	push   esi
64012e7f:	push   edi
64012e80:	push   DWORD PTR ds:0x64032610
64012e86:	call   0x64014d5f
64012e8b:	push   DWORD PTR ds:0x6403260c
64012e91:	mov    esi,eax
64012e93:	mov    DWORD PTR [esp+0x18],esi
64012e97:	call   0x64014d5f
64012e9c:	mov    edi,eax
64012e9e:	cmp    edi,esi
64012ea0:	pop    ecx
64012ea1:	pop    ecx
64012ea2:	jb     0x64012f2c
64012ea8:	mov    ebx,edi
64012eaa:	sub    ebx,esi
64012eac:	lea    ebp,[ebx+0x4]
64012eaf:	cmp    ebp,0x4
64012eb2:	jb     0x64012f2c
64012eb4:	push   esi
64012eb5:	call   0x64016213
64012eba:	mov    esi,eax
64012ebc:	cmp    esi,ebp
64012ebe:	pop    ecx
64012ebf:	jae    0x64012f0b
64012ec1:	mov    eax,0x800
64012ec6:	cmp    esi,eax
64012ec8:	jae    0x64012ecc
64012eca:	mov    eax,esi
64012ecc:	add    eax,esi
64012ece:	cmp    eax,esi
64012ed0:	jb     0x64012ee2
64012ed2:	push   eax
64012ed3:	push   DWORD PTR [esp+0x14]
64012ed7:	call   0x640161c8
64012edc:	test   eax,eax
64012ede:	pop    ecx
64012edf:	pop    ecx
64012ee0:	jne    0x64012ef9
64012ee2:	lea    eax,[esi+0x10]
64012ee5:	cmp    eax,esi
64012ee7:	jb     0x64012f2c
64012ee9:	push   eax
64012eea:	push   DWORD PTR [esp+0x14]
64012eee:	call   0x640161c8
64012ef3:	test   eax,eax
64012ef5:	pop    ecx
64012ef6:	pop    ecx
64012ef7:	je     0x64012f2c
64012ef9:	sar    ebx,0x2
64012efc:	push   eax
64012efd:	lea    edi,[eax+ebx*4]
64012f00:	call   0x64014ce8
64012f05:	pop    ecx
64012f06:	mov    ds:0x64032610,eax
64012f0b:	push   DWORD PTR [esp+0x18]
64012f0f:	call   0x64014ce8
64012f14:	mov    DWORD PTR [edi],eax
64012f16:	add    edi,0x4
64012f19:	push   edi
64012f1a:	call   0x64014ce8
64012f1f:	pop    ecx
64012f20:	mov    ds:0x6403260c,eax
64012f25:	mov    eax,DWORD PTR [esp+0x1c]
64012f29:	pop    ecx
64012f2a:	jmp    0x64012f2e
64012f2c:	xor    eax,eax
64012f2e:	pop    edi
64012f2f:	pop    esi
64012f30:	pop    ebp
64012f31:	pop    ebx
64012f32:	pop    ecx
64012f33:	ret    
64012f34:	push   esi
64012f35:	push   0x4
64012f37:	push   0x20
64012f39:	call   0x64016180
64012f3e:	mov    esi,eax
64012f40:	push   esi
64012f41:	call   0x64014ce8
64012f46:	add    esp,0xc
64012f49:	test   esi,esi
64012f4b:	mov    ds:0x64032610,eax
64012f50:	mov    ds:0x6403260c,eax
64012f55:	jne    0x64012f5c
64012f57:	push   0x18
64012f59:	pop    eax
64012f5a:	pop    esi
64012f5b:	ret    
64012f5c:	and    DWORD PTR [esi],0x0
64012f5f:	xor    eax,eax
64012f61:	pop    esi
64012f62:	ret    
64012f63:	push   0xc
64012f65:	push   0x6402a468
64012f6a:	call   0x64014430
64012f6f:	call   0x64016315
64012f74:	and    DWORD PTR [ebp-0x4],0x0
64012f78:	push   DWORD PTR [ebp+0x8]
64012f7b:	call   0x64012e7b
64012f80:	pop    ecx
64012f81:	mov    DWORD PTR [ebp-0x1c],eax
64012f84:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012f8b:	call   0x64012f99
64012f90:	mov    eax,DWORD PTR [ebp-0x1c]
64012f93:	call   0x64014475
64012f98:	ret    
64012f99:	call   0x6401631e
64012f9e:	ret    
64012f9f:	push   DWORD PTR [esp+0x4]
64012fa3:	call   0x64012f63
64012fa8:	neg    eax
64012faa:	sbb    eax,eax
64012fac:	neg    eax
64012fae:	pop    ecx
64012faf:	dec    eax
64012fb0:	ret    
64012fb1:	mov    eax,DWORD PTR [esp+0x4]
64012fb5:	push   ebx
64012fb6:	mov    ebx,DWORD PTR [esp+0xc]
64012fba:	cmp    WORD PTR [ebx],0x0
64012fbe:	push   edi
64012fbf:	mov    edi,eax
64012fc1:	je     0x64013008
64012fc3:	movzx  ecx,WORD PTR [eax]
64012fc6:	test   cx,cx
64012fc9:	je     0x64013006
64012fcb:	movzx  edx,cx
64012fce:	sub    eax,ebx
64012fd0:	test   dx,dx
64012fd3:	mov    ecx,DWORD PTR [esp+0x10]
64012fd7:	je     0x64012ff4
64012fd9:	movzx  edx,WORD PTR [ecx]
64012fdc:	test   dx,dx
64012fdf:	je     0x6401300b
64012fe1:	movzx  ebx,WORD PTR [eax+ecx*1]
64012fe5:	movzx  edx,dx
64012fe8:	sub    ebx,edx
64012fea:	jne    0x64012ff4
64012fec:	inc    ecx
64012fed:	inc    ecx
64012fee:	cmp    WORD PTR [eax+ecx*1],bx
64012ff2:	jne    0x64012fd9
64012ff4:	cmp    WORD PTR [ecx],0x0
64012ff8:	je     0x6401300b
64012ffa:	inc    edi
64012ffb:	inc    edi
64012ffc:	movzx  edx,WORD PTR [edi]
64012fff:	inc    eax
64013000:	inc    eax
64013001:	test   dx,dx
64013004:	jne    0x64012fd0
64013006:	xor    eax,eax
64013008:	pop    edi
64013009:	pop    ebx
6401300a:	ret    
6401300b:	mov    eax,edi
6401300d:	jmp    0x64013008
6401300f:	mov    eax,DWORD PTR [esp+0x4]
64013013:	test   eax,eax
64013015:	push   esi
64013016:	mov    esi,ecx
64013018:	mov    BYTE PTR [esi+0xc],0x0
6401301c:	jne    0x64013081
6401301e:	call   0x64014f7b
64013023:	mov    DWORD PTR [esi+0x8],eax
64013026:	mov    ecx,DWORD PTR [eax+0x6c]
64013029:	mov    DWORD PTR [esi],ecx
6401302b:	mov    ecx,DWORD PTR [eax+0x68]
6401302e:	mov    DWORD PTR [esi+0x4],ecx
64013031:	mov    ecx,DWORD PTR [esi]
64013033:	cmp    ecx,DWORD PTR ds:0x6402d870
64013039:	je     0x6401304d
6401303b:	mov    ecx,DWORD PTR ds:0x6402d78c
64013041:	test   DWORD PTR [eax+0x70],ecx
64013044:	jne    0x6401304d
64013046:	call   0x64016eff
6401304b:	mov    DWORD PTR [esi],eax
6401304d:	mov    eax,DWORD PTR [esi+0x4]
64013050:	cmp    eax,DWORD PTR ds:0x6402d690
64013056:	je     0x6401306e
64013058:	mov    eax,DWORD PTR [esi+0x8]
6401305b:	mov    ecx,DWORD PTR ds:0x6402d78c
64013061:	test   DWORD PTR [eax+0x70],ecx
64013064:	jne    0x6401306e
64013066:	call   0x640167c0
6401306b:	mov    DWORD PTR [esi+0x4],eax
6401306e:	mov    eax,DWORD PTR [esi+0x8]
64013071:	test   BYTE PTR [eax+0x70],0x2
64013075:	jne    0x6401308b
64013077:	or     DWORD PTR [eax+0x70],0x2
6401307b:	mov    BYTE PTR [esi+0xc],0x1
6401307f:	jmp    0x6401308b
64013081:	mov    ecx,DWORD PTR [eax]
64013083:	mov    DWORD PTR [esi],ecx
64013085:	mov    eax,DWORD PTR [eax+0x4]
64013088:	mov    DWORD PTR [esi+0x4],eax
6401308b:	mov    eax,esi
6401308d:	pop    esi
6401308e:	ret    0x4
64013091:	push   ebp
64013092:	mov    ebp,esp
64013094:	sub    esp,0x20
64013097:	push   esi
64013098:	xor    esi,esi
6401309a:	cmp    DWORD PTR [ebp+0xc],esi
6401309d:	jne    0x640130bc
6401309f:	call   0x64014c30
640130a4:	push   esi
640130a5:	push   esi
640130a6:	push   esi
640130a7:	push   esi
640130a8:	push   esi
640130a9:	mov    DWORD PTR [eax],0x16
640130af:	call   0x640129a4
640130b4:	add    esp,0x14
640130b7:	or     eax,0xffffffff
640130ba:	jmp    0x640130e3
640130bc:	push   DWORD PTR [ebp+0x14]
640130bf:	lea    eax,[ebp-0x20]
640130c2:	push   DWORD PTR [ebp+0x10]
640130c5:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640130cc:	push   DWORD PTR [ebp+0xc]
640130cf:	mov    DWORD PTR [ebp-0x14],0x42
640130d6:	push   eax
640130d7:	mov    DWORD PTR [ebp-0x18],esi
640130da:	mov    DWORD PTR [ebp-0x20],esi
640130dd:	call   DWORD PTR [ebp+0x8]
640130e0:	add    esp,0x10
640130e3:	pop    esi
640130e4:	leave  
640130e5:	ret    
640130e6:	push   DWORD PTR [esp+0x8]
640130ea:	push   0x0
640130ec:	push   DWORD PTR [esp+0xc]
640130f0:	push   0x6401716e
640130f5:	call   0x64013091
640130fa:	add    esp,0x10
640130fd:	ret    
640130fe:	push   ebp
640130ff:	mov    ebp,esp
64013101:	sub    esp,0x20
64013104:	push   ebx
64013105:	xor    ebx,ebx
64013107:	cmp    DWORD PTR [ebp+0x14],ebx
6401310a:	jne    0x6401312c
6401310c:	call   0x64014c30
64013111:	push   ebx
64013112:	push   ebx
64013113:	push   ebx
64013114:	push   ebx
64013115:	push   ebx
64013116:	mov    DWORD PTR [eax],0x16
6401311c:	call   0x640129a4
64013121:	add    esp,0x14
64013124:	or     eax,0xffffffff
64013127:	jmp    0x640131f1
6401312c:	push   esi
6401312d:	mov    esi,DWORD PTR [ebp+0xc]
64013130:	push   edi
64013131:	mov    edi,DWORD PTR [ebp+0x10]
64013134:	cmp    edi,ebx
64013136:	je     0x6401315c
64013138:	cmp    esi,ebx
6401313a:	jne    0x6401315c
6401313c:	call   0x64014c30
64013141:	push   ebx
64013142:	push   ebx
64013143:	push   ebx
64013144:	push   ebx
64013145:	push   ebx
64013146:	mov    DWORD PTR [eax],0x16
6401314c:	call   0x640129a4
64013151:	add    esp,0x14
64013154:	or     eax,0xffffffff
64013157:	jmp    0x640131ef
6401315c:	cmp    edi,0x3fffffff
64013162:	mov    DWORD PTR [ebp-0x14],0x42
64013169:	mov    DWORD PTR [ebp-0x18],esi
6401316c:	mov    DWORD PTR [ebp-0x20],esi
6401316f:	jbe    0x6401317a
64013171:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64013178:	jmp    0x64013180
6401317a:	lea    eax,[edi+edi*1]
6401317d:	mov    DWORD PTR [ebp-0x1c],eax
64013180:	push   DWORD PTR [ebp+0x1c]
64013183:	lea    eax,[ebp-0x20]
64013186:	push   DWORD PTR [ebp+0x18]
64013189:	push   DWORD PTR [ebp+0x14]
6401318c:	push   eax
6401318d:	call   DWORD PTR [ebp+0x8]
64013190:	add    esp,0x10
64013193:	cmp    esi,ebx
64013195:	mov    DWORD PTR [ebp+0x14],eax
64013198:	je     0x640131ef
6401319a:	cmp    eax,ebx
6401319c:	jl     0x640131e0
6401319e:	dec    DWORD PTR [ebp-0x1c]
640131a1:	js     0x640131ad
640131a3:	mov    eax,DWORD PTR [ebp-0x20]
640131a6:	mov    BYTE PTR [eax],bl
640131a8:	inc    DWORD PTR [ebp-0x20]
640131ab:	jmp    0x640131be
640131ad:	lea    eax,[ebp-0x20]
640131b0:	push   eax
640131b1:	push   ebx
640131b2:	call   0x64016f75
640131b7:	cmp    eax,0xffffffff
640131ba:	pop    ecx
640131bb:	pop    ecx
640131bc:	je     0x640131e0
640131be:	dec    DWORD PTR [ebp-0x1c]
640131c1:	js     0x640131ca
640131c3:	mov    eax,DWORD PTR [ebp-0x20]
640131c6:	mov    BYTE PTR [eax],bl
640131c8:	jmp    0x640131db
640131ca:	lea    eax,[ebp-0x20]
640131cd:	push   eax
640131ce:	push   ebx
640131cf:	call   0x64016f75
640131d4:	cmp    eax,0xffffffff
640131d7:	pop    ecx
640131d8:	pop    ecx
640131d9:	je     0x640131e0
640131db:	mov    eax,DWORD PTR [ebp+0x14]
640131de:	jmp    0x640131ef
640131e0:	xor    eax,eax
640131e2:	cmp    DWORD PTR [ebp-0x1c],ebx
640131e5:	mov    WORD PTR [esi+edi*2-0x2],bx
640131ea:	setge  al
640131ed:	dec    eax
640131ee:	dec    eax
640131ef:	pop    edi
640131f0:	pop    esi
640131f1:	pop    ebx
640131f2:	leave  
640131f3:	ret    
640131f4:	push   ebp
640131f5:	mov    ebp,esp
640131f7:	push   esi
640131f8:	xor    esi,esi
640131fa:	cmp    DWORD PTR [ebp+0x10],esi
640131fd:	jne    0x6401321c
640131ff:	call   0x64014c30
64013204:	push   esi
64013205:	push   esi
64013206:	push   esi
64013207:	push   esi
64013208:	push   esi
64013209:	mov    DWORD PTR [eax],0x16
6401320f:	call   0x640129a4
64013214:	add    esp,0x14
64013217:	or     eax,0xffffffff
6401321a:	jmp    0x64013278
6401321c:	push   edi
6401321d:	mov    edi,DWORD PTR [ebp+0x8]
64013220:	cmp    edi,esi
64013222:	je     0x64013229
64013224:	cmp    DWORD PTR [ebp+0xc],esi
64013227:	ja     0x64013236
64013229:	call   0x64014c30
6401322e:	mov    DWORD PTR [eax],0x16
64013234:	jmp    0x64013267
64013236:	push   DWORD PTR [ebp+0x18]
64013239:	push   DWORD PTR [ebp+0x14]
6401323c:	push   DWORD PTR [ebp+0x10]
6401323f:	push   DWORD PTR [ebp+0xc]
64013242:	push   edi
64013243:	push   0x64017a7e
64013248:	call   0x640130fe
6401324d:	add    esp,0x18
64013250:	cmp    eax,esi
64013252:	jge    0x64013257
64013254:	mov    WORD PTR [edi],si
64013257:	cmp    eax,0xfffffffe
6401325a:	jne    0x64013277
6401325c:	call   0x64014c30
64013261:	mov    DWORD PTR [eax],0x22
64013267:	push   esi
64013268:	push   esi
64013269:	push   esi
6401326a:	push   esi
6401326b:	push   esi
6401326c:	call   0x640129a4
64013271:	add    esp,0x14
64013274:	or     eax,0xffffffff
64013277:	pop    edi
64013278:	pop    esi
64013279:	pop    ebp
6401327a:	ret    
6401327b:	push   DWORD PTR [esp+0x10]
6401327f:	push   0x0
64013281:	push   DWORD PTR [esp+0x14]
64013285:	push   DWORD PTR [esp+0x14]
64013289:	push   DWORD PTR [esp+0x14]
6401328d:	call   0x640131f4
64013292:	add    esp,0x14
64013295:	ret    
64013296:	mov    edx,DWORD PTR [esp+0x4]
6401329a:	push   ebx
6401329b:	push   esi
6401329c:	xor    esi,esi
6401329e:	cmp    edx,esi
640132a0:	push   edi
640132a1:	je     0x640132ab
640132a3:	mov    ebx,DWORD PTR [esp+0x14]
640132a7:	cmp    ebx,esi
640132a9:	ja     0x640132c6
640132ab:	call   0x64014c30
640132b0:	push   0x16
640132b2:	pop    edi
640132b3:	mov    DWORD PTR [eax],edi
640132b5:	push   esi
640132b6:	push   esi
640132b7:	push   esi
640132b8:	push   esi
640132b9:	push   esi
640132ba:	call   0x640129a4
640132bf:	add    esp,0x14
640132c2:	mov    eax,edi
640132c4:	jmp    0x6401330c
640132c6:	mov    edi,DWORD PTR [esp+0x18]
640132ca:	cmp    edi,esi
640132cc:	jne    0x640132d3
640132ce:	mov    WORD PTR [edx],si
640132d1:	jmp    0x640132ab
640132d3:	mov    ecx,edx
640132d5:	cmp    WORD PTR [ecx],si
640132d8:	je     0x640132df
640132da:	inc    ecx
640132db:	inc    ecx
640132dc:	dec    ebx
640132dd:	jne    0x640132d5
640132df:	cmp    ebx,esi
640132e1:	je     0x640132ce
640132e3:	movzx  eax,WORD PTR [edi]
640132e6:	mov    WORD PTR [ecx],ax
640132e9:	inc    ecx
640132ea:	inc    ecx
640132eb:	inc    edi
640132ec:	inc    edi
640132ed:	cmp    ax,si
640132f0:	je     0x640132f5
640132f2:	dec    ebx
640132f3:	jne    0x640132e3
640132f5:	cmp    ebx,esi
640132f7:	jne    0x6401330a
640132f9:	mov    WORD PTR [edx],si
640132fc:	call   0x64014c30
64013301:	push   0x22
64013303:	pop    ecx
64013304:	mov    DWORD PTR [eax],ecx
64013306:	mov    edi,ecx
64013308:	jmp    0x640132b5
6401330a:	xor    eax,eax
6401330c:	pop    edi
6401330d:	pop    esi
6401330e:	pop    ebx
6401330f:	ret    
64013310:	mov    ecx,DWORD PTR [esp+0x4]
64013314:	push   ebx
64013315:	push   esi
64013316:	push   edi
64013317:	xor    edi,edi
64013319:	cmp    ecx,edi
6401331b:	je     0x64013325
6401331d:	mov    ebx,DWORD PTR [esp+0x14]
64013321:	cmp    ebx,edi
64013323:	ja     0x64013340
64013325:	call   0x64014c30
6401332a:	push   0x16
6401332c:	pop    esi
6401332d:	mov    DWORD PTR [eax],esi
6401332f:	push   edi
64013330:	push   edi
64013331:	push   edi
64013332:	push   edi
64013333:	push   edi
64013334:	call   0x640129a4
64013339:	add    esp,0x14
6401333c:	mov    eax,esi
6401333e:	jmp    0x64013378
64013340:	mov    esi,DWORD PTR [esp+0x18]
64013344:	cmp    esi,edi
64013346:	jne    0x6401334d
64013348:	mov    WORD PTR [ecx],di
6401334b:	jmp    0x64013325
6401334d:	mov    edx,ecx
6401334f:	movzx  eax,WORD PTR [esi]
64013352:	mov    WORD PTR [edx],ax
64013355:	inc    edx
64013356:	inc    edx
64013357:	inc    esi
64013358:	inc    esi
64013359:	cmp    ax,di
6401335c:	je     0x64013361
6401335e:	dec    ebx
6401335f:	jne    0x6401334f
64013361:	cmp    ebx,edi
64013363:	jne    0x64013376
64013365:	mov    WORD PTR [ecx],di
64013368:	call   0x64014c30
6401336d:	push   0x22
6401336f:	pop    ecx
64013370:	mov    DWORD PTR [eax],ecx
64013372:	mov    esi,ecx
64013374:	jmp    0x6401332f
64013376:	xor    eax,eax
64013378:	pop    edi
64013379:	pop    esi
6401337a:	pop    ebx
6401337b:	ret    
6401337c:	mov    eax,DWORD PTR [esp+0x4]
64013380:	test   eax,eax
64013382:	je     0x64013396
64013384:	sub    eax,0x8
64013387:	cmp    DWORD PTR [eax],0xdddd
6401338d:	jne    0x64013396
6401338f:	push   eax
64013390:	call   0x64013d06
64013395:	pop    ecx
64013396:	ret    
64013397:	push   ebp
64013398:	mov    ebp,esp
6401339a:	sub    esp,0xc
6401339d:	mov    eax,ds:0x6402d09c
640133a2:	xor    eax,ebp
640133a4:	mov    DWORD PTR [ebp-0x4],eax
640133a7:	push   esi
640133a8:	xor    esi,esi
640133aa:	cmp    ebx,esi
640133ac:	push   edi
640133ad:	jne    0x640133cd
640133af:	call   0x64014c30
640133b4:	push   0x16
640133b6:	pop    edi
640133b7:	push   esi
640133b8:	push   esi
640133b9:	push   esi
640133ba:	push   esi
640133bb:	push   esi
640133bc:	mov    DWORD PTR [eax],edi
640133be:	call   0x640129a4
640133c3:	add    esp,0x14
640133c6:	mov    eax,edi
640133c8:	jmp    0x6401350d
640133cd:	push   DWORD PTR [ebp+0x8]
640133d0:	push   ebx
640133d1:	call   0x6401863b
640133d6:	cmp    eax,DWORD PTR [ebp+0x8]
640133d9:	pop    ecx
640133da:	pop    ecx
640133db:	jb     0x640133e2
640133dd:	mov    WORD PTR [ebx],si
640133e0:	jmp    0x640133af
640133e2:	mov    edx,DWORD PTR [ebp+0xc]
640133e5:	mov    eax,DWORD PTR [edx]
640133e7:	mov    ecx,DWORD PTR [eax+0x14]
640133ea:	cmp    ecx,esi
640133ec:	jne    0x64013418
640133ee:	cmp    WORD PTR [ebx],si
640133f1:	mov    eax,ebx
640133f3:	je     0x64013411
640133f5:	movzx  ecx,WORD PTR [eax]
640133f8:	cmp    cx,0x41
640133fc:	jb     0x6401340a
640133fe:	cmp    cx,0x5a
64013402:	ja     0x6401340a
64013404:	add    ecx,0x20
64013407:	mov    WORD PTR [eax],cx
6401340a:	inc    eax
6401340b:	inc    eax
6401340c:	cmp    WORD PTR [eax],si
6401340f:	jne    0x640133f5
64013411:	xor    eax,eax
64013413:	jmp    0x6401350d
64013418:	push   DWORD PTR [eax+0x4]
6401341b:	mov    edi,0x100
64013420:	push   esi
64013421:	push   esi
64013422:	push   0xffffffff
64013424:	push   ebx
64013425:	push   edi
64013426:	push   ecx
64013427:	push   edx
64013428:	call   0x640185fb
6401342d:	mov    ecx,eax
6401342f:	add    esp,0x20
64013432:	cmp    ecx,esi
64013434:	mov    DWORD PTR [ebp-0xc],ecx
64013437:	jne    0x64013450
64013439:	call   0x64014c30
6401343e:	mov    DWORD PTR [eax],0x2a
64013444:	call   0x64014c30
64013449:	mov    eax,DWORD PTR [eax]
6401344b:	jmp    0x6401350d
64013450:	cmp    DWORD PTR [ebp+0x8],ecx
64013453:	jae    0x64013464
64013455:	mov    WORD PTR [ebx],si
64013458:	call   0x64014c30
6401345d:	push   0x22
6401345f:	jmp    0x640133b6
64013464:	cmp    ecx,esi
64013466:	jle    0x640134ae
64013468:	push   0xffffffe0
6401346a:	xor    edx,edx
6401346c:	pop    eax
6401346d:	div    ecx
6401346f:	cmp    eax,0x2
64013472:	jb     0x640134ae
64013474:	lea    eax,[ecx+ecx*1+0x8]
64013478:	cmp    eax,0x400
6401347d:	ja     0x64013492
6401347f:	call   0x640135f0
64013484:	mov    eax,esp
64013486:	cmp    eax,esi
64013488:	je     0x640134a6
6401348a:	mov    DWORD PTR [eax],0xcccc
64013490:	jmp    0x640134a3
64013492:	push   eax
64013493:	call   0x64013de3
64013498:	cmp    eax,esi
6401349a:	pop    ecx
6401349b:	je     0x640134a6
6401349d:	mov    DWORD PTR [eax],0xdddd
640134a3:	add    eax,0x8
640134a6:	mov    ecx,DWORD PTR [ebp-0xc]
640134a9:	mov    DWORD PTR [ebp-0x8],eax
640134ac:	jmp    0x640134b1
640134ae:	mov    DWORD PTR [ebp-0x8],esi
640134b1:	cmp    DWORD PTR [ebp-0x8],esi
640134b4:	jne    0x640134c3
640134b6:	call   0x64014c30
640134bb:	mov    DWORD PTR [eax],0xc
640134c1:	jmp    0x64013444
640134c3:	mov    edx,DWORD PTR [ebp+0xc]
640134c6:	mov    eax,DWORD PTR [edx]
640134c8:	push   DWORD PTR [eax+0x4]
640134cb:	push   ecx
640134cc:	push   DWORD PTR [ebp-0x8]
640134cf:	push   0xffffffff
640134d1:	push   ebx
640134d2:	push   edi
640134d3:	push   DWORD PTR [eax+0x14]
640134d6:	push   edx
640134d7:	call   0x640185fb
640134dc:	add    esp,0x20
640134df:	test   eax,eax
640134e1:	je     0x640134f6
640134e3:	push   DWORD PTR [ebp-0x8]
640134e6:	push   DWORD PTR [ebp+0x8]
640134e9:	push   ebx
640134ea:	call   0x64013310
640134ef:	add    esp,0xc
640134f2:	mov    esi,eax
640134f4:	jmp    0x64013502
640134f6:	call   0x64014c30
640134fb:	push   0x2a
640134fd:	pop    ecx
640134fe:	mov    DWORD PTR [eax],ecx
64013500:	mov    esi,ecx
64013502:	push   DWORD PTR [ebp-0x8]
64013505:	call   0x6401337c
6401350a:	pop    ecx
6401350b:	mov    eax,esi
6401350d:	lea    esp,[ebp-0x14]
64013510:	pop    edi
64013511:	pop    esi
64013512:	mov    ecx,DWORD PTR [ebp-0x4]
64013515:	xor    ecx,ebp
64013517:	call   0x64012e6c
6401351c:	leave  
6401351d:	ret    
6401351e:	push   ebp
6401351f:	mov    ebp,esp
64013521:	sub    esp,0x10
64013524:	push   ebx
64013525:	push   DWORD PTR [ebp+0x10]
64013528:	lea    ecx,[ebp-0x10]
6401352b:	call   0x6401300f
64013530:	mov    ebx,DWORD PTR [ebp+0x8]
64013533:	lea    eax,[ebp-0x10]
64013536:	push   eax
64013537:	push   DWORD PTR [ebp+0xc]
6401353a:	call   0x64013397
6401353f:	cmp    BYTE PTR [ebp-0x4],0x0
64013543:	pop    ecx
64013544:	pop    ecx
64013545:	pop    ebx
64013546:	je     0x6401354f
64013548:	mov    ecx,DWORD PTR [ebp-0x8]
6401354b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401354f:	leave  
64013550:	ret    
64013551:	push   0x0
64013553:	push   DWORD PTR [esp+0xc]
64013557:	push   DWORD PTR [esp+0xc]
6401355b:	call   0x6401351e
64013560:	add    esp,0xc
64013563:	ret    
64013564:	jmp    0x64012612
64013569:	int3   
6401356a:	int3   
6401356b:	int3   
6401356c:	int3   
6401356d:	int3   
6401356e:	int3   
6401356f:	int3   
64013570:	mov    edx,DWORD PTR [esp+0xc]
64013574:	mov    ecx,DWORD PTR [esp+0x4]
64013578:	test   edx,edx
6401357a:	je     0x640135e5
6401357c:	xor    eax,eax
6401357e:	mov    al,BYTE PTR [esp+0x8]
64013582:	test   al,al
64013584:	jne    0x6401359c
64013586:	cmp    edx,0x100
6401358c:	jb     0x6401359c
6401358e:	cmp    DWORD PTR ds:0x64032604,0x0
64013595:	je     0x6401359c
64013597:	jmp    0x640186ae
6401359c:	push   edi
6401359d:	mov    edi,ecx
6401359f:	cmp    edx,0x4
640135a2:	jb     0x640135d5
640135a4:	neg    ecx
640135a6:	and    ecx,0x3
640135a9:	je     0x640135b7
640135ab:	sub    edx,ecx
640135ad:	mov    BYTE PTR [edi],al
640135af:	add    edi,0x1
640135b2:	sub    ecx,0x1
640135b5:	jne    0x640135ad
640135b7:	mov    ecx,eax
640135b9:	shl    eax,0x8
640135bc:	add    eax,ecx
640135be:	mov    ecx,eax
640135c0:	shl    eax,0x10
640135c3:	add    eax,ecx
640135c5:	mov    ecx,edx
640135c7:	and    edx,0x3
640135ca:	shr    ecx,0x2
640135cd:	je     0x640135d5
640135cf:	rep stos DWORD PTR es:[edi],eax
640135d1:	test   edx,edx
640135d3:	je     0x640135df
640135d5:	mov    BYTE PTR [edi],al
640135d7:	add    edi,0x1
640135da:	sub    edx,0x1
640135dd:	jne    0x640135d5
640135df:	mov    eax,DWORD PTR [esp+0x8]
640135e3:	pop    edi
640135e4:	ret    
640135e5:	mov    eax,DWORD PTR [esp+0x4]
640135e9:	ret    
640135ea:	int3   
640135eb:	int3   
640135ec:	int3   
640135ed:	int3   
640135ee:	int3   
640135ef:	int3   
640135f0:	push   ecx
640135f1:	lea    ecx,[esp+0x8]
640135f5:	sub    ecx,eax
640135f7:	and    ecx,0xf
640135fa:	add    eax,ecx
640135fc:	sbb    ecx,ecx
640135fe:	or     eax,ecx
64013600:	pop    ecx
64013601:	jmp    0x64018760
64013606:	push   ecx
64013607:	lea    ecx,[esp+0x8]
6401360b:	sub    ecx,eax
6401360d:	and    ecx,0x7
64013610:	add    eax,ecx
64013612:	sbb    ecx,ecx
64013614:	or     eax,ecx
64013616:	pop    ecx
64013617:	jmp    0x64018760
6401361c:	call   0x64014f7b
64013621:	mov    ecx,DWORD PTR [esp+0x4]
64013625:	mov    DWORD PTR [eax+0x14],ecx
64013628:	ret    
64013629:	call   0x64014f7b
6401362e:	mov    ecx,DWORD PTR [eax+0x14]
64013631:	imul   ecx,ecx,0x343fd
64013637:	add    ecx,0x269ec3
6401363d:	mov    DWORD PTR [eax+0x14],ecx
64013640:	mov    eax,ecx
64013642:	shr    eax,0x10
64013645:	and    eax,0x7fff
6401364a:	ret    
6401364b:	push   ebp
6401364c:	mov    ebp,esp
6401364e:	push   ecx
6401364f:	mov    eax,DWORD PTR [ebp+0xc]
64013652:	cmp    eax,0x1
64013655:	push   ebx
64013656:	push   esi
64013657:	push   edi
64013658:	jne    0x64013775
6401365e:	mov    ebx,DWORD PTR ds:0x64025110
64013664:	mov    edi,0x94
64013669:	push   edi
6401366a:	push   0x0
6401366c:	call   ebx
6401366e:	push   eax
6401366f:	call   DWORD PTR ds:0x64025100
64013675:	mov    esi,eax
64013677:	test   esi,esi
64013679:	jne    0x64013682
6401367b:	xor    eax,eax
6401367d:	jmp    0x6401381d
64013682:	push   esi
64013683:	mov    DWORD PTR [esi],edi
64013685:	call   DWORD PTR ds:0x640250f4
6401368b:	test   eax,eax
6401368d:	push   esi
6401368e:	push   0x0
64013690:	jne    0x6401369d
64013692:	call   ebx
64013694:	push   eax
64013695:	call   DWORD PTR ds:0x64025104
6401369b:	jmp    0x6401367b
6401369d:	mov    eax,DWORD PTR [esi+0x10]
640136a0:	mov    edi,DWORD PTR [esi+0xc]
640136a3:	mov    DWORD PTR [ebp+0xc],eax
640136a6:	mov    eax,DWORD PTR [esi+0x4]
640136a9:	mov    DWORD PTR [ebp+0x10],eax
640136ac:	mov    eax,DWORD PTR [esi+0x8]
640136af:	mov    DWORD PTR [ebp-0x4],eax
640136b2:	and    edi,0x7fff
640136b8:	call   ebx
640136ba:	push   eax
640136bb:	call   DWORD PTR ds:0x64025104
640136c1:	mov    eax,DWORD PTR [ebp+0xc]
640136c4:	cmp    eax,0x2
640136c7:	je     0x640136cf
640136c9:	or     edi,0x8000
640136cf:	mov    ecx,DWORD PTR [ebp-0x4]
640136d2:	mov    ds:0x6402e8d4,eax
640136d7:	mov    eax,DWORD PTR [ebp+0x10]
640136da:	mov    edx,eax
640136dc:	shl    edx,0x8
640136df:	add    edx,ecx
640136e1:	push   0x1
640136e3:	mov    DWORD PTR ds:0x6402e8dc,edx
640136e9:	mov    ds:0x6402e8e0,eax
640136ee:	mov    DWORD PTR ds:0x6402e8e4,ecx
640136f4:	mov    DWORD PTR ds:0x6402e8d8,edi
640136fa:	call   0x64018f2f
640136ff:	test   eax,eax
64013701:	pop    ecx
64013702:	je     0x6401367b
64013708:	call   0x6401511d
6401370d:	test   eax,eax
6401370f:	jne    0x6401371b
64013711:	call   0x64018f89
64013716:	jmp    0x6401367b
6401371b:	call   0x64018e8c
64013720:	call   DWORD PTR ds:0x6402512c
64013726:	mov    ds:0x64032620,eax
6401372b:	call   0x64018d57
64013730:	mov    ds:0x6402e574,eax
64013735:	call   0x6401878b
6401373a:	test   eax,eax
6401373c:	jge    0x64013745
6401373e:	call   0x64014e08
64013743:	jmp    0x64013711
64013745:	call   0x64018c9e
6401374a:	test   eax,eax
6401374c:	jl     0x6401376e
6401374e:	call   0x64018a2b
64013753:	test   eax,eax
64013755:	jl     0x6401376e
64013757:	push   0x0
64013759:	call   0x640163d2
6401375e:	test   eax,eax
64013760:	pop    ecx
64013761:	jne    0x6401376e
64013763:	inc    DWORD PTR ds:0x6402e570
64013769:	jmp    0x6401381a
6401376e:	call   0x640189df
64013773:	jmp    0x6401373e
64013775:	xor    edi,edi
64013777:	cmp    eax,edi
64013779:	jne    0x640137b0
6401377b:	cmp    DWORD PTR ds:0x6402e570,edi
64013781:	jle    0x6401367b
64013787:	dec    DWORD PTR ds:0x6402e570
6401378d:	cmp    DWORD PTR ds:0x6402e910,edi
64013793:	jne    0x6401379a
64013795:	call   0x64016557
6401379a:	cmp    DWORD PTR [ebp+0x10],edi
6401379d:	jne    0x6401381a
6401379f:	call   0x640189df
640137a4:	call   0x64014e08
640137a9:	call   0x64018f89
640137ae:	jmp    0x6401381a
640137b0:	cmp    eax,0x2
640137b3:	jne    0x6401380e
640137b5:	call   0x64014dd6
640137ba:	push   0x214
640137bf:	push   0x1
640137c1:	call   0x64016180
640137c6:	mov    esi,eax
640137c8:	cmp    esi,edi
640137ca:	pop    ecx
640137cb:	pop    ecx
640137cc:	je     0x6401367b
640137d2:	push   esi
640137d3:	push   DWORD PTR ds:0x6402d230
640137d9:	push   DWORD PTR ds:0x6402e594
640137df:	call   0x64014d5f
640137e4:	pop    ecx
640137e5:	call   eax
640137e7:	test   eax,eax
640137e9:	je     0x64013802
640137eb:	push   edi
640137ec:	push   esi
640137ed:	call   0x64014e45
640137f2:	pop    ecx
640137f3:	pop    ecx
640137f4:	call   DWORD PTR ds:0x64025128
640137fa:	or     DWORD PTR [esi+0x4],0xffffffff
640137fe:	mov    DWORD PTR [esi],eax
64013800:	jmp    0x6401381a
64013802:	push   esi
64013803:	call   0x64013d06
64013808:	pop    ecx
64013809:	jmp    0x6401367b
6401380e:	cmp    eax,0x3
64013811:	jne    0x6401381a
64013813:	push   edi
64013814:	call   0x640150b4
64013819:	pop    ecx
6401381a:	xor    eax,eax
6401381c:	inc    eax
6401381d:	pop    edi
6401381e:	pop    esi
6401381f:	pop    ebx
64013820:	leave  
64013821:	ret    0xc
64013824:	push   0xc
64013826:	push   0x6402a488
6401382b:	call   0x64014430
64013830:	mov    edi,ecx
64013832:	mov    esi,edx
64013834:	mov    ebx,DWORD PTR [ebp+0x8]
64013837:	xor    eax,eax
64013839:	inc    eax
6401383a:	mov    DWORD PTR [ebp-0x1c],eax
6401383d:	test   esi,esi
6401383f:	jne    0x6401384d
64013841:	cmp    DWORD PTR ds:0x6402e570,edx
64013847:	je     0x64013912
6401384d:	and    DWORD PTR [ebp-0x4],0x0
64013851:	cmp    esi,eax
64013853:	je     0x6401385a
64013855:	cmp    esi,0x2
64013858:	jne    0x64013888
6401385a:	mov    eax,ds:0x64025cc8
6401385f:	test   eax,eax
64013861:	je     0x6401386b
64013863:	push   edi
64013864:	push   esi
64013865:	push   ebx
64013866:	call   eax
64013868:	mov    DWORD PTR [ebp-0x1c],eax
6401386b:	cmp    DWORD PTR [ebp-0x1c],0x0
6401386f:	je     0x6401390b
64013875:	push   edi
64013876:	push   esi
64013877:	push   ebx
64013878:	call   0x6401364b
6401387d:	mov    DWORD PTR [ebp-0x1c],eax
64013880:	test   eax,eax
64013882:	je     0x6401390b
64013888:	push   edi
64013889:	push   esi
6401388a:	push   ebx
6401388b:	call   0x6400fba0
64013890:	mov    DWORD PTR [ebp-0x1c],eax
64013893:	cmp    esi,0x1
64013896:	jne    0x640138bc
64013898:	test   eax,eax
6401389a:	jne    0x640138bc
6401389c:	push   edi
6401389d:	push   eax
6401389e:	push   ebx
6401389f:	call   0x6400fba0
640138a4:	push   edi
640138a5:	push   0x0
640138a7:	push   ebx
640138a8:	call   0x6401364b
640138ad:	mov    eax,ds:0x64025cc8
640138b2:	test   eax,eax
640138b4:	je     0x640138bc
640138b6:	push   edi
640138b7:	push   0x0
640138b9:	push   ebx
640138ba:	call   eax
640138bc:	test   esi,esi
640138be:	je     0x640138c5
640138c0:	cmp    esi,0x3
640138c3:	jne    0x640138eb
640138c5:	push   edi
640138c6:	push   esi
640138c7:	push   ebx
640138c8:	call   0x6401364b
640138cd:	test   eax,eax
640138cf:	jne    0x640138d4
640138d1:	and    DWORD PTR [ebp-0x1c],eax
640138d4:	cmp    DWORD PTR [ebp-0x1c],0x0
640138d8:	je     0x640138eb
640138da:	mov    eax,ds:0x64025cc8
640138df:	test   eax,eax
640138e1:	je     0x640138eb
640138e3:	push   edi
640138e4:	push   esi
640138e5:	push   ebx
640138e6:	call   eax
640138e8:	mov    DWORD PTR [ebp-0x1c],eax
640138eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640138f2:	mov    eax,DWORD PTR [ebp-0x1c]
640138f5:	jmp    0x64013914
640138f7:	mov    eax,DWORD PTR [ebp-0x14]
640138fa:	mov    ecx,DWORD PTR [eax]
640138fc:	mov    ecx,DWORD PTR [ecx]
640138fe:	push   eax
640138ff:	push   ecx
64013900:	call   0x6401915b
64013905:	pop    ecx
64013906:	pop    ecx
64013907:	ret    
64013908:	mov    esp,DWORD PTR [ebp-0x18]
6401390b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013912:	xor    eax,eax
64013914:	call   0x64014475
64013919:	ret    
6401391a:	cmp    DWORD PTR [esp+0x8],0x1
6401391f:	jne    0x64013926
64013921:	call   0x64019176
64013926:	push   DWORD PTR [esp+0x4]
6401392a:	mov    ecx,DWORD PTR [esp+0x10]
6401392e:	mov    edx,DWORD PTR [esp+0xc]
64013932:	call   0x64013824
64013937:	pop    ecx
64013938:	ret    0xc
6401393b:	push   ebp
6401393c:	mov    ebp,esp
6401393e:	sub    esp,0x20
64013941:	push   ebx
64013942:	xor    ebx,ebx
64013944:	cmp    DWORD PTR [ebp+0xc],ebx
64013947:	jne    0x64013966
64013949:	call   0x64014c30
6401394e:	push   ebx
6401394f:	push   ebx
64013950:	push   ebx
64013951:	push   ebx
64013952:	push   ebx
64013953:	mov    DWORD PTR [eax],0x16
64013959:	call   0x640129a4
6401395e:	add    esp,0x14
64013961:	or     eax,0xffffffff
64013964:	jmp    0x640139b3
64013966:	mov    eax,DWORD PTR [ebp+0x8]
64013969:	cmp    eax,ebx
6401396b:	je     0x64013949
6401396d:	push   esi
6401396e:	mov    DWORD PTR [ebp-0x18],eax
64013971:	mov    DWORD PTR [ebp-0x20],eax
64013974:	lea    eax,[ebp+0x10]
64013977:	push   eax
64013978:	push   ebx
64013979:	push   DWORD PTR [ebp+0xc]
6401397c:	lea    eax,[ebp-0x20]
6401397f:	push   eax
64013980:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64013987:	mov    DWORD PTR [ebp-0x14],0x42
6401398e:	call   0x64019261
64013993:	add    esp,0x10
64013996:	dec    DWORD PTR [ebp-0x1c]
64013999:	mov    esi,eax
6401399b:	js     0x640139a4
6401399d:	mov    eax,DWORD PTR [ebp-0x20]
640139a0:	mov    BYTE PTR [eax],bl
640139a2:	jmp    0x640139b0
640139a4:	lea    eax,[ebp-0x20]
640139a7:	push   eax
640139a8:	push   ebx
640139a9:	call   0x64016f75
640139ae:	pop    ecx
640139af:	pop    ecx
640139b0:	mov    eax,esi
640139b2:	pop    esi
640139b3:	pop    ebx
640139b4:	leave  
640139b5:	ret    
640139b6:	lea    eax,[esp+0x10]
640139ba:	push   eax
640139bb:	push   0x0
640139bd:	push   DWORD PTR [esp+0x14]
640139c1:	push   DWORD PTR [esp+0x14]
640139c5:	push   DWORD PTR [esp+0x14]
640139c9:	call   0x64019cbf
640139ce:	add    esp,0x14
640139d1:	ret    
640139d2:	cmp    DWORD PTR [esp+0x8],0x0
640139d7:	je     0x640139df
640139d9:	mov    BYTE PTR [ecx],0x2d
640139dc:	inc    ecx
640139dd:	neg    eax
640139df:	push   esi
640139e0:	mov    esi,ecx
640139e2:	xor    edx,edx
640139e4:	div    DWORD PTR [esp+0x8]
640139e8:	cmp    edx,0x9
640139eb:	jbe    0x640139f2
640139ed:	add    dl,0x57
640139f0:	jmp    0x640139f5
640139f2:	add    dl,0x30
640139f5:	mov    BYTE PTR [ecx],dl
640139f7:	inc    ecx
640139f8:	test   eax,eax
640139fa:	ja     0x640139e2
640139fc:	mov    BYTE PTR [ecx],0x0
640139ff:	dec    ecx
64013a00:	mov    dl,BYTE PTR [esi]
64013a02:	mov    al,BYTE PTR [ecx]
64013a04:	mov    BYTE PTR [ecx],dl
64013a06:	dec    ecx
64013a07:	mov    BYTE PTR [esi],al
64013a09:	inc    esi
64013a0a:	cmp    esi,ecx
64013a0c:	jb     0x64013a00
64013a0e:	pop    esi
64013a0f:	ret    0x8
64013a12:	push   ebp
64013a13:	mov    ebp,esp
64013a15:	xor    eax,eax
64013a17:	cmp    DWORD PTR [ebp+0x10],0xa
64013a1b:	jne    0x64013a23
64013a1d:	cmp    DWORD PTR [ebp+0x8],eax
64013a20:	jge    0x64013a23
64013a22:	inc    eax
64013a23:	mov    ecx,DWORD PTR [ebp+0xc]
64013a26:	push   eax
64013a27:	push   DWORD PTR [ebp+0x10]
64013a2a:	mov    eax,DWORD PTR [ebp+0x8]
64013a2d:	call   0x640139d2
64013a32:	mov    eax,DWORD PTR [ebp+0xc]
64013a35:	pop    ebp
64013a36:	ret    
64013a37:	mov    eax,DWORD PTR [esp+0x4]
64013a3b:	mov    dx,WORD PTR [esp+0x8]
64013a40:	jmp    0x64013a49
64013a42:	cmp    cx,dx
64013a45:	je     0x64013a58
64013a47:	inc    eax
64013a48:	inc    eax
64013a49:	movzx  ecx,WORD PTR [eax]
64013a4c:	test   cx,cx
64013a4f:	jne    0x64013a42
64013a51:	cmp    WORD PTR [eax],dx
64013a54:	je     0x64013a58
64013a56:	xor    eax,eax
64013a58:	ret    
64013a59:	push   ebp
64013a5a:	mov    ebp,esp
64013a5c:	sub    esp,0x10
64013a5f:	push   DWORD PTR [ebp+0xc]
64013a62:	lea    ecx,[ebp-0x10]
64013a65:	call   0x6401300f
64013a6a:	mov    eax,DWORD PTR [ebp-0x10]
64013a6d:	cmp    DWORD PTR [eax+0xac],0x1
64013a74:	jle    0x64013a89
64013a76:	lea    eax,[ebp-0x10]
64013a79:	push   eax
64013a7a:	push   0x4
64013a7c:	push   DWORD PTR [ebp+0x8]
64013a7f:	call   0x64019de5
64013a84:	add    esp,0xc
64013a87:	jmp    0x64013a99
64013a89:	mov    eax,DWORD PTR [eax+0xc8]
64013a8f:	mov    ecx,DWORD PTR [ebp+0x8]
64013a92:	movzx  eax,BYTE PTR [eax+ecx*2]
64013a96:	and    eax,0x4
64013a99:	cmp    BYTE PTR [ebp-0x4],0x0
64013a9d:	je     0x64013aa6
64013a9f:	mov    ecx,DWORD PTR [ebp-0x8]
64013aa2:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013aa6:	leave  
64013aa7:	ret    
64013aa8:	cmp    DWORD PTR ds:0x6402e934,0x0
64013aaf:	jne    0x64013ac3
64013ab1:	mov    eax,DWORD PTR [esp+0x4]
64013ab5:	mov    ecx,DWORD PTR ds:0x6402d860
64013abb:	movzx  eax,BYTE PTR [ecx+eax*2]
64013abf:	and    eax,0x4
64013ac2:	ret    
64013ac3:	push   0x0
64013ac5:	push   DWORD PTR [esp+0x8]
64013ac9:	call   0x64013a59
64013ace:	pop    ecx
64013acf:	pop    ecx
64013ad0:	ret    
64013ad1:	push   ebp
64013ad2:	mov    ebp,esp
64013ad4:	sub    esp,0x10
64013ad7:	push   DWORD PTR [ebp+0xc]
64013ada:	lea    ecx,[ebp-0x10]
64013add:	call   0x6401300f
64013ae2:	mov    eax,DWORD PTR [ebp-0x10]
64013ae5:	cmp    DWORD PTR [eax+0xac],0x1
64013aec:	jle    0x64013b01
64013aee:	lea    eax,[ebp-0x10]
64013af1:	push   eax
64013af2:	push   0x8
64013af4:	push   DWORD PTR [ebp+0x8]
64013af7:	call   0x64019de5
64013afc:	add    esp,0xc
64013aff:	jmp    0x64013b11
64013b01:	mov    eax,DWORD PTR [eax+0xc8]
64013b07:	mov    ecx,DWORD PTR [ebp+0x8]
64013b0a:	movzx  eax,BYTE PTR [eax+ecx*2]
64013b0e:	and    eax,0x8
64013b11:	cmp    BYTE PTR [ebp-0x4],0x0
64013b15:	je     0x64013b1e
64013b17:	mov    ecx,DWORD PTR [ebp-0x8]
64013b1a:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013b1e:	leave  
64013b1f:	ret    
64013b20:	cmp    DWORD PTR ds:0x6402e934,0x0
64013b27:	jne    0x64013b3b
64013b29:	mov    eax,DWORD PTR [esp+0x4]
64013b2d:	mov    ecx,DWORD PTR ds:0x6402d860
64013b33:	movzx  eax,BYTE PTR [ecx+eax*2]
64013b37:	and    eax,0x8
64013b3a:	ret    
64013b3b:	push   0x0
64013b3d:	push   DWORD PTR [esp+0x8]
64013b41:	call   0x64013ad1
64013b46:	pop    ecx
64013b47:	pop    ecx
64013b48:	ret    
64013b49:	push   ebp
64013b4a:	mov    ebp,esp
64013b4c:	sub    esp,0x10
64013b4f:	push   DWORD PTR [ebp+0xc]
64013b52:	lea    ecx,[ebp-0x10]
64013b55:	call   0x6401300f
64013b5a:	mov    eax,DWORD PTR [ebp-0x10]
64013b5d:	cmp    DWORD PTR [eax+0xac],0x1
64013b64:	jle    0x64013b7c
64013b66:	lea    eax,[ebp-0x10]
64013b69:	push   eax
64013b6a:	push   0x157
64013b6f:	push   DWORD PTR [ebp+0x8]
64013b72:	call   0x64019de5
64013b77:	add    esp,0xc
64013b7a:	jmp    0x64013b8e
64013b7c:	mov    eax,DWORD PTR [eax+0xc8]
64013b82:	mov    ecx,DWORD PTR [ebp+0x8]
64013b85:	movzx  eax,WORD PTR [eax+ecx*2]
64013b89:	and    eax,0x157
64013b8e:	cmp    BYTE PTR [ebp-0x4],0x0
64013b92:	je     0x64013b9b
64013b94:	mov    ecx,DWORD PTR [ebp-0x8]
64013b97:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013b9b:	leave  
64013b9c:	ret    
64013b9d:	cmp    DWORD PTR ds:0x6402e934,0x0
64013ba4:	jne    0x64013bba
64013ba6:	mov    eax,DWORD PTR [esp+0x4]
64013baa:	mov    ecx,DWORD PTR ds:0x6402d860
64013bb0:	movzx  eax,WORD PTR [ecx+eax*2]
64013bb4:	and    eax,0x157
64013bb9:	ret    
64013bba:	push   0x0
64013bbc:	push   DWORD PTR [esp+0x8]
64013bc0:	call   0x64013b49
64013bc5:	pop    ecx
64013bc6:	pop    ecx
64013bc7:	ret    
64013bc8:	push   ebp
64013bc9:	mov    ebp,esp
64013bcb:	sub    esp,0x18
64013bce:	push   ebx
64013bcf:	push   esi
64013bd0:	push   DWORD PTR [ebp+0xc]
64013bd3:	lea    ecx,[ebp-0x18]
64013bd6:	call   0x6401300f
64013bdb:	mov    ebx,DWORD PTR [ebp+0x8]
64013bde:	mov    esi,0x100
64013be3:	cmp    ebx,esi
64013be5:	jae    0x64013c3b
64013be7:	mov    ecx,DWORD PTR [ebp-0x18]
64013bea:	cmp    DWORD PTR [ecx+0xac],0x1
64013bf1:	jle    0x64013c07
64013bf3:	lea    eax,[ebp-0x18]
64013bf6:	push   eax
64013bf7:	push   0x1
64013bf9:	push   ebx
64013bfa:	call   0x64019de5
64013bff:	mov    ecx,DWORD PTR [ebp-0x18]
64013c02:	add    esp,0xc
64013c05:	jmp    0x64013c14
64013c07:	mov    eax,DWORD PTR [ecx+0xc8]
64013c0d:	movzx  eax,BYTE PTR [eax+ebx*2]
64013c11:	and    eax,0x1
64013c14:	test   eax,eax
64013c16:	je     0x64013c27
64013c18:	mov    eax,DWORD PTR [ecx+0xcc]
64013c1e:	movzx  eax,BYTE PTR [eax+ebx*1]
64013c22:	jmp    0x64013cce
64013c27:	cmp    BYTE PTR [ebp-0xc],0x0
64013c2b:	je     0x64013c34
64013c2d:	mov    eax,DWORD PTR [ebp-0x10]
64013c30:	and    DWORD PTR [eax+0x70],0xfffffffd
64013c34:	mov    eax,ebx
64013c36:	jmp    0x64013cdb
64013c3b:	mov    eax,DWORD PTR [ebp-0x18]
64013c3e:	cmp    DWORD PTR [eax+0xac],0x1
64013c45:	jle    0x64013c78
64013c47:	mov    DWORD PTR [ebp+0x8],ebx
64013c4a:	sar    DWORD PTR [ebp+0x8],0x8
64013c4e:	lea    eax,[ebp-0x18]
64013c51:	push   eax
64013c52:	mov    eax,DWORD PTR [ebp+0x8]
64013c55:	and    eax,0xff
64013c5a:	push   eax
64013c5b:	call   0x6401a280
64013c60:	test   eax,eax
64013c62:	pop    ecx
64013c63:	pop    ecx
64013c64:	je     0x64013c78
64013c66:	mov    al,BYTE PTR [ebp+0x8]
64013c69:	push   0x2
64013c6b:	mov    BYTE PTR [ebp-0x4],al
64013c6e:	mov    BYTE PTR [ebp-0x3],bl
64013c71:	mov    BYTE PTR [ebp-0x2],0x0
64013c75:	pop    ecx
64013c76:	jmp    0x64013c8d
64013c78:	call   0x64014c30
64013c7d:	mov    DWORD PTR [eax],0x2a
64013c83:	xor    ecx,ecx
64013c85:	mov    BYTE PTR [ebp-0x4],bl
64013c88:	mov    BYTE PTR [ebp-0x3],0x0
64013c8c:	inc    ecx
64013c8d:	mov    eax,DWORD PTR [ebp-0x18]
64013c90:	push   0x1
64013c92:	push   DWORD PTR [eax+0x4]
64013c95:	lea    edx,[ebp-0x8]
64013c98:	push   0x3
64013c9a:	push   edx
64013c9b:	push   ecx
64013c9c:	lea    ecx,[ebp-0x4]
64013c9f:	push   ecx
64013ca0:	push   esi
64013ca1:	push   DWORD PTR [eax+0x14]
64013ca4:	lea    eax,[ebp-0x18]
64013ca7:	push   eax
64013ca8:	call   0x6401a23d
64013cad:	add    esp,0x24
64013cb0:	test   eax,eax
64013cb2:	je     0x64013c27
64013cb8:	cmp    eax,0x1
64013cbb:	jne    0x64013cc3
64013cbd:	movzx  eax,BYTE PTR [ebp-0x8]
64013cc1:	jmp    0x64013cce
64013cc3:	movzx  ecx,BYTE PTR [ebp-0x7]
64013cc7:	xor    eax,eax
64013cc9:	mov    ah,BYTE PTR [ebp-0x8]
64013ccc:	or     eax,ecx
64013cce:	cmp    BYTE PTR [ebp-0xc],0x0
64013cd2:	je     0x64013cdb
64013cd4:	mov    ecx,DWORD PTR [ebp-0x10]
64013cd7:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013cdb:	pop    esi
64013cdc:	pop    ebx
64013cdd:	leave  
64013cde:	ret    
64013cdf:	cmp    DWORD PTR ds:0x6402e934,0x0
64013ce6:	jne    0x64013cf8
64013ce8:	mov    eax,DWORD PTR [esp+0x4]
64013cec:	lea    ecx,[eax-0x41]
64013cef:	cmp    ecx,0x19
64013cf2:	ja     0x64013d05
64013cf4:	add    eax,0x20
64013cf7:	ret    
64013cf8:	push   0x0
64013cfa:	push   DWORD PTR [esp+0x8]
64013cfe:	call   0x64013bc8
64013d03:	pop    ecx
64013d04:	pop    ecx
64013d05:	ret    
64013d06:	push   0xc
64013d08:	push   0x6402a4a8
64013d0d:	call   0x64014430
64013d12:	mov    esi,DWORD PTR [ebp+0x8]
64013d15:	test   esi,esi
64013d17:	je     0x64013d8e
64013d19:	cmp    DWORD PTR ds:0x640324dc,0x3
64013d20:	jne    0x64013d65
64013d22:	push   0x4
64013d24:	call   0x6401a43a
64013d29:	pop    ecx
64013d2a:	and    DWORD PTR [ebp-0x4],0x0
64013d2e:	push   esi
64013d2f:	call   0x6401a4b3
64013d34:	pop    ecx
64013d35:	mov    DWORD PTR [ebp-0x1c],eax
64013d38:	test   eax,eax
64013d3a:	je     0x64013d45
64013d3c:	push   esi
64013d3d:	push   eax
64013d3e:	call   0x6401a4de
64013d43:	pop    ecx
64013d44:	pop    ecx
64013d45:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013d4c:	call   0x64013d5c
64013d51:	cmp    DWORD PTR [ebp-0x1c],0x0
64013d55:	jne    0x64013d8e
64013d57:	push   DWORD PTR [ebp+0x8]
64013d5a:	jmp    0x64013d66
64013d5c:	push   0x4
64013d5e:	call   0x6401a362
64013d63:	pop    ecx
64013d64:	ret    
64013d65:	push   esi
64013d66:	push   0x0
64013d68:	push   DWORD PTR ds:0x6402ea6c
64013d6e:	call   DWORD PTR ds:0x64025104
64013d74:	test   eax,eax
64013d76:	jne    0x64013d8e
64013d78:	call   0x64014c30
64013d7d:	mov    esi,eax
64013d7f:	call   DWORD PTR ds:0x64025044
64013d85:	push   eax
64013d86:	call   0x64014bf5
64013d8b:	mov    DWORD PTR [esi],eax
64013d8d:	pop    ecx
64013d8e:	call   0x64014475
64013d93:	ret    
64013d94:	push   0xc
64013d96:	push   0x6402a4c8
64013d9b:	call   0x64014430
64013da0:	and    DWORD PTR [ebp-0x1c],0x0
64013da4:	mov    esi,DWORD PTR [ebp+0x8]
64013da7:	cmp    esi,DWORD PTR ds:0x640324cc
64013dad:	ja     0x64013dd1
64013daf:	push   0x4
64013db1:	call   0x6401a43a
64013db6:	pop    ecx
64013db7:	and    DWORD PTR [ebp-0x4],0x0
64013dbb:	push   esi
64013dbc:	call   0x6401ac87
64013dc1:	pop    ecx
64013dc2:	mov    DWORD PTR [ebp-0x1c],eax
64013dc5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013dcc:	call   0x64013dda
64013dd1:	mov    eax,DWORD PTR [ebp-0x1c]
64013dd4:	call   0x64014475
64013dd9:	ret    
64013dda:	push   0x4
64013ddc:	call   0x6401a362
64013de1:	pop    ecx
64013de2:	ret    
64013de3:	push   ebp
64013de4:	mov    ebp,DWORD PTR [esp+0x8]
64013de8:	cmp    ebp,0xffffffe0
64013deb:	ja     0x64013e90
64013df1:	push   ebx
64013df2:	mov    ebx,DWORD PTR ds:0x64025100
64013df8:	push   esi
64013df9:	push   edi
64013dfa:	xor    esi,esi
64013dfc:	cmp    DWORD PTR ds:0x6402ea6c,esi
64013e02:	mov    edi,ebp
64013e04:	jne    0x64013e1e
64013e06:	call   0x6401b10c
64013e0b:	push   0x1e
64013e0d:	call   0x6401af6c
64013e12:	push   0xff
64013e17:	call   0x64016300
64013e1c:	pop    ecx
64013e1d:	pop    ecx
64013e1e:	mov    eax,ds:0x640324dc
64013e23:	cmp    eax,0x1
64013e26:	jne    0x64013e36
64013e28:	cmp    ebp,esi
64013e2a:	je     0x64013e30
64013e2c:	mov    eax,ebp
64013e2e:	jmp    0x64013e33
64013e30:	xor    eax,eax
64013e32:	inc    eax
64013e33:	push   eax
64013e34:	jmp    0x64013e54
64013e36:	cmp    eax,0x3
64013e39:	jne    0x64013e46
64013e3b:	push   ebp
64013e3c:	call   0x64013d94
64013e41:	cmp    eax,esi
64013e43:	pop    ecx
64013e44:	jne    0x64013e5d
64013e46:	cmp    ebp,esi
64013e48:	jne    0x64013e4d
64013e4a:	xor    edi,edi
64013e4c:	inc    edi
64013e4d:	add    edi,0xf
64013e50:	and    edi,0xfffffff0
64013e53:	push   edi
64013e54:	push   esi
64013e55:	push   DWORD PTR ds:0x6402ea6c
64013e5b:	call   ebx
64013e5d:	mov    esi,eax
64013e5f:	test   esi,esi
64013e61:	jne    0x64013e89
64013e63:	cmp    DWORD PTR ds:0x6402eee4,eax
64013e69:	push   0xc
64013e6b:	pop    edi
64013e6c:	je     0x64013e7b
64013e6e:	push   ebp
64013e6f:	call   0x640152ab
64013e74:	test   eax,eax
64013e76:	pop    ecx
64013e77:	jne    0x64013dfa
64013e79:	jmp    0x64013e82
64013e7b:	call   0x64014c30
64013e80:	mov    DWORD PTR [eax],edi
64013e82:	call   0x64014c30
64013e87:	mov    DWORD PTR [eax],edi
64013e89:	pop    edi
64013e8a:	mov    eax,esi
64013e8c:	pop    esi
64013e8d:	pop    ebx
64013e8e:	pop    ebp
64013e8f:	ret    
64013e90:	push   ebp
64013e91:	call   0x640152ab
64013e96:	pop    ecx
64013e97:	call   0x64014c30
64013e9c:	mov    DWORD PTR [eax],0xc
64013ea2:	xor    eax,eax
64013ea4:	pop    ebp
64013ea5:	ret    
64013ea6:	int3   
64013ea7:	int3   
64013ea8:	int3   
64013ea9:	int3   
64013eaa:	int3   
64013eab:	int3   
64013eac:	int3   
64013ead:	int3   
64013eae:	int3   
64013eaf:	int3   
64013eb0:	push   ebp
64013eb1:	mov    ebp,esp
64013eb3:	push   edi
64013eb4:	push   esi
64013eb5:	mov    esi,DWORD PTR [ebp+0xc]
64013eb8:	mov    ecx,DWORD PTR [ebp+0x10]
64013ebb:	mov    edi,DWORD PTR [ebp+0x8]
64013ebe:	mov    eax,ecx
64013ec0:	mov    edx,ecx
64013ec2:	add    eax,esi
64013ec4:	cmp    edi,esi
64013ec6:	jbe    0x64013ed0
64013ec8:	cmp    edi,eax
64013eca:	jb     0x64014074
64013ed0:	cmp    ecx,0x100
64013ed6:	jb     0x64013ef7
64013ed8:	cmp    DWORD PTR ds:0x64032604,0x0
64013edf:	je     0x64013ef7
64013ee1:	push   edi
64013ee2:	push   esi
64013ee3:	and    edi,0xf
64013ee6:	and    esi,0xf
64013ee9:	cmp    edi,esi
64013eeb:	pop    esi
64013eec:	pop    edi
64013eed:	jne    0x64013ef7
64013eef:	pop    esi
64013ef0:	pop    edi
64013ef1:	pop    ebp
64013ef2:	jmp    0x6401b1cc
64013ef7:	test   edi,0x3
64013efd:	jne    0x64013f14
64013eff:	shr    ecx,0x2
64013f02:	and    edx,0x3
64013f05:	cmp    ecx,0x8
64013f08:	jb     0x64013f34
64013f0a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013f0c:	jmp    DWORD PTR [edx*4+0x64014024]
64013f13:	nop
64013f14:	mov    eax,edi
64013f16:	mov    edx,0x3
64013f1b:	sub    ecx,0x4
64013f1e:	jb     0x64013f2c
64013f20:	and    eax,0x3
64013f23:	add    ecx,eax
64013f25:	jmp    DWORD PTR [eax*4+0x64013f38]
64013f2c:	jmp    DWORD PTR [ecx*4+0x64014034]
64013f33:	nop
64013f34:	jmp    DWORD PTR [ecx*4+0x64013fb8]
64013f3b:	nop
64013f3c:	dec    eax
64013f3d:	aas    
64013f3e:	add    DWORD PTR [esp+esi*2+0x3f],esp
64013f42:	add    DWORD PTR [eax+ebx*4+0x3f],esp
64013f46:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64013f4a:	mov    al,BYTE PTR [esi]
64013f4c:	mov    BYTE PTR [edi],al
64013f4e:	mov    al,BYTE PTR [esi+0x1]
64013f51:	mov    BYTE PTR [edi+0x1],al
64013f54:	mov    al,BYTE PTR [esi+0x2]
64013f57:	shr    ecx,0x2
64013f5a:	mov    BYTE PTR [edi+0x2],al
64013f5d:	add    esi,0x3
64013f60:	add    edi,0x3
64013f63:	cmp    ecx,0x8
64013f66:	jb     0x64013f34
64013f68:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013f6a:	jmp    DWORD PTR [edx*4+0x64014024]
64013f71:	lea    ecx,[ecx+0x0]
64013f74:	and    edx,ecx
64013f76:	mov    al,BYTE PTR [esi]
64013f78:	mov    BYTE PTR [edi],al
64013f7a:	mov    al,BYTE PTR [esi+0x1]
64013f7d:	shr    ecx,0x2
64013f80:	mov    BYTE PTR [edi+0x1],al
64013f83:	add    esi,0x2
64013f86:	add    edi,0x2
64013f89:	cmp    ecx,0x8
64013f8c:	jb     0x64013f34
64013f8e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013f90:	jmp    DWORD PTR [edx*4+0x64014024]
64013f97:	nop
64013f98:	and    edx,ecx
64013f9a:	mov    al,BYTE PTR [esi]
64013f9c:	mov    BYTE PTR [edi],al
64013f9e:	add    esi,0x1
64013fa1:	shr    ecx,0x2
64013fa4:	add    edi,0x1
64013fa7:	cmp    ecx,0x8
64013faa:	jb     0x64013f34
64013fac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013fae:	jmp    DWORD PTR [edx*4+0x64014024]
64013fb5:	lea    ecx,[ecx+0x0]
64013fb8:	sbb    eax,DWORD PTR [eax+0x1]
64013fbb:	or     BYTE PTR fs:[eax+0x1],al
64013fbf:	add    BYTE PTR fs:[eax+0x1],al
64013fc3:	fs clc 
64013fc5:	aas    
64013fc6:	add    DWORD PTR [eax+esi*8+0x3f],esp
64013fca:	add    DWORD PTR [eax+ebp*8+0x3f],esp
64013fce:	add    DWORD PTR [eax+eiz*8+0x3f],esp
64013fd2:	add    DWORD PTR [eax+ebx*8+0x3f],esp
64013fd6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64013fda:	mov    fs,esp
64013fdc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64013fe0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64013fe4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64013fe8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64013fec:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64013ff0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64013ff4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64013ff8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64013ffc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64014000:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64014004:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64014008:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401400c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64014010:	lea    eax,[ecx*4+0x0]
64014017:	add    esi,eax
64014019:	add    edi,eax
6401401b:	jmp    DWORD PTR [edx*4+0x64014024]
64014022:	mov    edi,edi
64014024:	xor    al,0x40
64014026:	add    DWORD PTR [esp+edi*1+0x40],esp
6401402a:	add    DWORD PTR [eax+ecx*2+0x40],esp
6401402e:	add    DWORD PTR [esp+ebx*2+0x40],esp
64014032:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014036:	or     BYTE PTR [esi+0x5f],bl
64014039:	leave  
6401403a:	ret    
6401403b:	nop
6401403c:	mov    al,BYTE PTR [esi]
6401403e:	mov    BYTE PTR [edi],al
64014040:	mov    eax,DWORD PTR [ebp+0x8]
64014043:	pop    esi
64014044:	pop    edi
64014045:	leave  
64014046:	ret    
64014047:	nop
64014048:	mov    al,BYTE PTR [esi]
6401404a:	mov    BYTE PTR [edi],al
6401404c:	mov    al,BYTE PTR [esi+0x1]
6401404f:	mov    BYTE PTR [edi+0x1],al
64014052:	mov    eax,DWORD PTR [ebp+0x8]
64014055:	pop    esi
64014056:	pop    edi
64014057:	leave  
64014058:	ret    
64014059:	lea    ecx,[ecx+0x0]
6401405c:	mov    al,BYTE PTR [esi]
6401405e:	mov    BYTE PTR [edi],al
64014060:	mov    al,BYTE PTR [esi+0x1]
64014063:	mov    BYTE PTR [edi+0x1],al
64014066:	mov    al,BYTE PTR [esi+0x2]
64014069:	mov    BYTE PTR [edi+0x2],al
6401406c:	mov    eax,DWORD PTR [ebp+0x8]
6401406f:	pop    esi
64014070:	pop    edi
64014071:	leave  
64014072:	ret    
64014073:	nop
64014074:	lea    esi,[ecx+esi*1-0x4]
64014078:	lea    edi,[ecx+edi*1-0x4]
6401407c:	test   edi,0x3
64014082:	jne    0x640140a8
64014084:	shr    ecx,0x2
64014087:	and    edx,0x3
6401408a:	cmp    ecx,0x8
6401408d:	jb     0x6401409c
6401408f:	std    
64014090:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014092:	cld    
64014093:	jmp    DWORD PTR [edx*4+0x640141c0]
6401409a:	mov    edi,edi
6401409c:	neg    ecx
6401409e:	jmp    DWORD PTR [ecx*4+0x64014170]
640140a5:	lea    ecx,[ecx+0x0]
640140a8:	mov    eax,edi
640140aa:	mov    edx,0x3
640140af:	cmp    ecx,0x4
640140b2:	jb     0x640140c0
640140b4:	and    eax,0x3
640140b7:	sub    ecx,eax
640140b9:	jmp    DWORD PTR [eax*4+0x640140c4]
640140c0:	jmp    DWORD PTR [ecx*4+0x640141c0]
640140c7:	nop
640140c8:	aam    0x40
640140ca:	add    DWORD PTR [eax+edi*8+0x40],esp
640140ce:	add    DWORD PTR [eax+eiz*1+0x41],esp
640140d2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640140d6:	add    esp,DWORD PTR [ebx]
640140d8:	ror    DWORD PTR [eax-0x117cfcb9],1
640140de:	add    ecx,eax
640140e0:	jmp    0x65f0c3e7
640140e5:	cmp    ecx,0x8
640140e8:	jb     0x6401409c
640140ea:	std    
640140eb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640140ed:	cld    
640140ee:	jmp    DWORD PTR [edx*4+0x640141c0]
640140f5:	lea    ecx,[ecx+0x0]
640140f8:	mov    al,BYTE PTR [esi+0x3]
640140fb:	and    edx,ecx
640140fd:	mov    BYTE PTR [edi+0x3],al
64014100:	mov    al,BYTE PTR [esi+0x2]
64014103:	shr    ecx,0x2
64014106:	mov    BYTE PTR [edi+0x2],al
64014109:	sub    esi,0x2
6401410c:	sub    edi,0x2
6401410f:	cmp    ecx,0x8
64014112:	jb     0x6401409c
64014114:	std    
64014115:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014117:	cld    
64014118:	jmp    DWORD PTR [edx*4+0x640141c0]
6401411f:	nop
64014120:	mov    al,BYTE PTR [esi+0x3]
64014123:	and    edx,ecx
64014125:	mov    BYTE PTR [edi+0x3],al
64014128:	mov    al,BYTE PTR [esi+0x2]
6401412b:	mov    BYTE PTR [edi+0x2],al
6401412e:	mov    al,BYTE PTR [esi+0x1]
64014131:	shr    ecx,0x2
64014134:	mov    BYTE PTR [edi+0x1],al
64014137:	sub    esi,0x3
6401413a:	sub    edi,0x3
6401413d:	cmp    ecx,0x8
64014140:	jb     0x6401409c
64014146:	std    
64014147:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014149:	cld    
6401414a:	jmp    DWORD PTR [edx*4+0x640141c0]
64014151:	lea    ecx,[ecx+0x0]
64014154:	je     0x64014197
64014156:	add    DWORD PTR [esp+edi*2+0x41],esp
6401415a:	add    DWORD PTR [esp+eax*4+0x41],esp
6401415e:	add    DWORD PTR [esp+ecx*4+0x41],esp
64014162:	add    DWORD PTR [esp+edx*4+0x41],esp
64014166:	add    DWORD PTR [esp+ebx*4+0x41],esp
6401416a:	add    DWORD PTR [esp+eiz*4+0x41],esp
6401416e:	add    DWORD PTR [edi+esi*4+0x41],esp
64014172:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64014176:	mov    ds,WORD PTR [ecx+ecx*4]
64014179:	inc    esp
6401417a:	(bad)  
6401417b:	sbb    al,0x8b
6401417d:	inc    esp
6401417e:	mov    ds,WORD PTR [eax]
64014180:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64014184:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64014188:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401418c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64014190:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64014194:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64014198:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401419c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640141a0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640141a4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640141a8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640141ac:	lea    eax,[ecx*4+0x0]
640141b3:	add    esi,eax
640141b5:	add    edi,eax
640141b7:	jmp    DWORD PTR [edx*4+0x640141c0]
640141be:	mov    edi,edi
640141c0:	rol    BYTE PTR [ecx+0x1],1
640141c3:	fadd   DWORD PTR fs:[ecx+0x1]
640141c7:	fs call 0x6065430e
640141cd:	inc    ecx
640141ce:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640141d2:	or     BYTE PTR [esi+0x5f],bl
640141d5:	leave  
640141d6:	ret    
640141d7:	nop
640141d8:	mov    al,BYTE PTR [esi+0x3]
640141db:	mov    BYTE PTR [edi+0x3],al
640141de:	mov    eax,DWORD PTR [ebp+0x8]
640141e1:	pop    esi
640141e2:	pop    edi
640141e3:	leave  
640141e4:	ret    
640141e5:	lea    ecx,[ecx+0x0]
640141e8:	mov    al,BYTE PTR [esi+0x3]
640141eb:	mov    BYTE PTR [edi+0x3],al
640141ee:	mov    al,BYTE PTR [esi+0x2]
640141f1:	mov    BYTE PTR [edi+0x2],al
640141f4:	mov    eax,DWORD PTR [ebp+0x8]
640141f7:	pop    esi
640141f8:	pop    edi
640141f9:	leave  
640141fa:	ret    
640141fb:	nop
640141fc:	mov    al,BYTE PTR [esi+0x3]
640141ff:	mov    BYTE PTR [edi+0x3],al
64014202:	mov    al,BYTE PTR [esi+0x2]
64014205:	mov    BYTE PTR [edi+0x2],al
64014208:	mov    al,BYTE PTR [esi+0x1]
6401420b:	mov    BYTE PTR [edi+0x1],al
6401420e:	mov    eax,DWORD PTR [ebp+0x8]
64014211:	pop    esi
64014212:	pop    edi
64014213:	leave  
64014214:	ret    
64014215:	push   0x10
64014217:	push   0x6402a4e8
6401421c:	call   0x64014430
64014221:	mov    ebx,DWORD PTR [ebp+0x8]
64014224:	test   ebx,ebx
64014226:	jne    0x64014236
64014228:	push   DWORD PTR [ebp+0xc]
6401422b:	call   0x64013de3
64014230:	pop    ecx
64014231:	jmp    0x64014402
64014236:	mov    esi,DWORD PTR [ebp+0xc]
64014239:	test   esi,esi
6401423b:	jne    0x64014249
6401423d:	push   ebx
6401423e:	call   0x64013d06
64014243:	pop    ecx
64014244:	jmp    0x64014400
64014249:	cmp    DWORD PTR ds:0x640324dc,0x3
64014250:	jne    0x640143e9
64014256:	xor    edi,edi
64014258:	mov    DWORD PTR [ebp-0x1c],edi
6401425b:	cmp    esi,0xffffffe0
6401425e:	ja     0x640143ee
64014264:	push   0x4
64014266:	call   0x6401a43a
6401426b:	pop    ecx
6401426c:	mov    DWORD PTR [ebp-0x4],edi
6401426f:	push   ebx
64014270:	call   0x6401a4b3
64014275:	pop    ecx
64014276:	mov    DWORD PTR [ebp-0x20],eax
64014279:	cmp    eax,edi
6401427b:	je     0x6401431f
64014281:	cmp    esi,DWORD PTR ds:0x640324cc
64014287:	ja     0x640142d2
64014289:	push   esi
6401428a:	push   ebx
6401428b:	push   eax
6401428c:	call   0x6401a9a8
64014291:	add    esp,0xc
64014294:	test   eax,eax
64014296:	je     0x6401429d
64014298:	mov    DWORD PTR [ebp-0x1c],ebx
6401429b:	jmp    0x640142d2
6401429d:	push   esi
6401429e:	call   0x6401ac87
640142a3:	pop    ecx
640142a4:	mov    DWORD PTR [ebp-0x1c],eax
640142a7:	cmp    eax,edi
640142a9:	je     0x640142d2
640142ab:	mov    eax,DWORD PTR [ebx-0x4]
640142ae:	dec    eax
640142af:	cmp    eax,esi
640142b1:	jb     0x640142b5
640142b3:	mov    eax,esi
640142b5:	push   eax
640142b6:	push   ebx
640142b7:	push   DWORD PTR [ebp-0x1c]
640142ba:	call   0x64014890
640142bf:	push   ebx
640142c0:	call   0x6401a4b3
640142c5:	mov    DWORD PTR [ebp-0x20],eax
640142c8:	push   ebx
640142c9:	push   eax
640142ca:	call   0x6401a4de
640142cf:	add    esp,0x18
640142d2:	cmp    DWORD PTR [ebp-0x1c],edi
640142d5:	jne    0x6401431f
640142d7:	cmp    esi,edi
640142d9:	jne    0x640142e1
640142db:	xor    esi,esi
640142dd:	inc    esi
640142de:	mov    DWORD PTR [ebp+0xc],esi
640142e1:	add    esi,0xf
640142e4:	and    esi,0xfffffff0
640142e7:	mov    DWORD PTR [ebp+0xc],esi
640142ea:	push   esi
640142eb:	push   edi
640142ec:	push   DWORD PTR ds:0x6402ea6c
640142f2:	call   DWORD PTR ds:0x64025100
640142f8:	mov    DWORD PTR [ebp-0x1c],eax
640142fb:	cmp    eax,edi
640142fd:	je     0x6401431f
640142ff:	mov    eax,DWORD PTR [ebx-0x4]
64014302:	dec    eax
64014303:	cmp    eax,esi
64014305:	jb     0x64014309
64014307:	mov    eax,esi
64014309:	push   eax
6401430a:	push   ebx
6401430b:	push   DWORD PTR [ebp-0x1c]
6401430e:	call   0x64014890
64014313:	push   ebx
64014314:	push   DWORD PTR [ebp-0x20]
64014317:	call   0x6401a4de
6401431c:	add    esp,0x14
6401431f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014326:	call   0x64014359
6401432b:	cmp    DWORD PTR [ebp-0x20],0x0
6401432f:	jne    0x64014362
64014331:	test   esi,esi
64014333:	jne    0x64014336
64014335:	inc    esi
64014336:	add    esi,0xf
64014339:	and    esi,0xfffffff0
6401433c:	mov    DWORD PTR [ebp+0xc],esi
6401433f:	push   esi
64014340:	push   ebx
64014341:	push   0x0
64014343:	push   DWORD PTR ds:0x6402ea6c
64014349:	call   DWORD PTR ds:0x64025108
6401434f:	mov    edi,eax
64014351:	jmp    0x64014365
64014353:	mov    esi,DWORD PTR [ebp+0xc]
64014356:	mov    ebx,DWORD PTR [ebp+0x8]
64014359:	push   0x4
6401435b:	call   0x6401a362
64014360:	pop    ecx
64014361:	ret    
64014362:	mov    edi,DWORD PTR [ebp-0x1c]
64014365:	test   edi,edi
64014367:	jne    0x6401442c
6401436d:	cmp    DWORD PTR ds:0x6402eee4,edi
64014373:	je     0x640143a1
64014375:	push   esi
64014376:	call   0x640152ab
6401437b:	pop    ecx
6401437c:	test   eax,eax
6401437e:	jne    0x64014256
64014384:	call   0x64014c30
64014389:	cmp    DWORD PTR [ebp-0x20],edi
6401438c:	jne    0x640143fa
6401438e:	mov    esi,eax
64014390:	call   DWORD PTR ds:0x64025044
64014396:	push   eax
64014397:	call   0x64014bf5
6401439c:	pop    ecx
6401439d:	mov    DWORD PTR [esi],eax
6401439f:	jmp    0x64014400
640143a1:	test   edi,edi
640143a3:	jne    0x6401442c
640143a9:	call   0x64014c30
640143ae:	cmp    DWORD PTR [ebp-0x20],edi
640143b1:	je     0x6401441b
640143b3:	mov    DWORD PTR [eax],0xc
640143b9:	jmp    0x6401442c
640143bb:	test   esi,esi
640143bd:	jne    0x640143c0
640143bf:	inc    esi
640143c0:	push   esi
640143c1:	push   ebx
640143c2:	push   0x0
640143c4:	push   DWORD PTR ds:0x6402ea6c
640143ca:	call   DWORD PTR ds:0x64025108
640143d0:	mov    edi,eax
640143d2:	test   edi,edi
640143d4:	jne    0x6401442c
640143d6:	cmp    DWORD PTR ds:0x6402eee4,eax
640143dc:	je     0x64014412
640143de:	push   esi
640143df:	call   0x640152ab
640143e4:	pop    ecx
640143e5:	test   eax,eax
640143e7:	je     0x64014408
640143e9:	cmp    esi,0xffffffe0
640143ec:	jbe    0x640143bb
640143ee:	push   esi
640143ef:	call   0x640152ab
640143f4:	pop    ecx
640143f5:	call   0x64014c30
640143fa:	mov    DWORD PTR [eax],0xc
64014400:	xor    eax,eax
64014402:	call   0x64014475
64014407:	ret    
64014408:	call   0x64014c30
6401440d:	jmp    0x6401438e
64014412:	test   edi,edi
64014414:	jne    0x6401442c
64014416:	call   0x64014c30
6401441b:	mov    esi,eax
6401441d:	call   DWORD PTR ds:0x64025044
64014423:	push   eax
64014424:	call   0x64014bf5
64014429:	mov    DWORD PTR [esi],eax
6401442b:	pop    ecx
6401442c:	mov    eax,edi
6401442e:	jmp    0x64014402
64014430:	push   0x64014490
64014435:	push   DWORD PTR fs:0x0
6401443c:	mov    eax,DWORD PTR [esp+0x10]
64014440:	mov    DWORD PTR [esp+0x10],ebp
64014444:	lea    ebp,[esp+0x10]
64014448:	sub    esp,eax
6401444a:	push   ebx
6401444b:	push   esi
6401444c:	push   edi
6401444d:	mov    eax,ds:0x6402d09c
64014452:	xor    DWORD PTR [ebp-0x4],eax
64014455:	xor    eax,ebp
64014457:	push   eax
64014458:	mov    DWORD PTR [ebp-0x18],esp
6401445b:	push   DWORD PTR [ebp-0x8]
6401445e:	mov    eax,DWORD PTR [ebp-0x4]
64014461:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014468:	mov    DWORD PTR [ebp-0x8],eax
6401446b:	lea    eax,[ebp-0x10]
6401446e:	mov    fs:0x0,eax
64014474:	ret    
64014475:	mov    ecx,DWORD PTR [ebp-0x10]
64014478:	mov    DWORD PTR fs:0x0,ecx
6401447f:	pop    ecx
64014480:	pop    edi
64014481:	pop    edi
64014482:	pop    esi
64014483:	pop    ebx
64014484:	mov    esp,ebp
64014486:	pop    ebp
64014487:	push   ecx
64014488:	ret    
64014489:	int3   
6401448a:	int3   
6401448b:	int3   
6401448c:	int3   
6401448d:	int3   
6401448e:	int3   
6401448f:	int3   
64014490:	sub    esp,0x14
64014493:	push   ebx
64014494:	mov    ebx,DWORD PTR [esp+0x20]
64014498:	push   ebp
64014499:	push   esi
6401449a:	mov    esi,DWORD PTR [ebx+0x8]
6401449d:	xor    esi,DWORD PTR ds:0x6402d09c
640144a3:	push   edi
640144a4:	mov    eax,DWORD PTR [esi]
640144a6:	cmp    eax,0xfffffffe
640144a9:	mov    BYTE PTR [esp+0x13],0x0
640144ae:	mov    DWORD PTR [esp+0x18],0x1
640144b6:	lea    edi,[ebx+0x10]
640144b9:	je     0x640144c8
640144bb:	mov    ecx,DWORD PTR [esi+0x4]
640144be:	add    ecx,edi
640144c0:	xor    ecx,DWORD PTR [eax+edi*1]
640144c3:	call   0x64012e6c
640144c8:	mov    ecx,DWORD PTR [esi+0xc]
640144cb:	mov    eax,DWORD PTR [esi+0x8]
640144ce:	add    ecx,edi
640144d0:	xor    ecx,DWORD PTR [eax+edi*1]
640144d3:	call   0x64012e6c
640144d8:	mov    eax,DWORD PTR [esp+0x28]
640144dc:	test   BYTE PTR [eax+0x4],0x66
640144e0:	jne    0x64014605
640144e6:	mov    ebp,DWORD PTR [ebx+0xc]
640144e9:	cmp    ebp,0xfffffffe
640144ec:	mov    ecx,DWORD PTR [esp+0x30]
640144f0:	lea    edx,[esp+0x1c]
640144f4:	mov    DWORD PTR [esp+0x1c],eax
640144f8:	mov    DWORD PTR [esp+0x20],ecx
640144fc:	mov    DWORD PTR [ebx-0x4],edx
640144ff:	je     0x6401455f
64014501:	lea    eax,[ebp+ebp*2+0x0]
64014505:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64014509:	test   ecx,ecx
6401450b:	lea    ebx,[esi+eax*4+0x10]
6401450f:	mov    eax,DWORD PTR [ebx]
64014511:	mov    DWORD PTR [esp+0x14],eax
64014515:	je     0x6401452d
64014517:	mov    edx,edi
64014519:	call   0x6401b3a2
6401451e:	test   eax,eax
64014520:	mov    BYTE PTR [esp+0x13],0x1
64014525:	jl     0x6401456b
64014527:	jg     0x64014575
64014529:	mov    eax,DWORD PTR [esp+0x14]
6401452d:	cmp    eax,0xfffffffe
64014530:	mov    ebp,eax
64014532:	jne    0x64014501
64014534:	cmp    BYTE PTR [esp+0x13],0x0
64014539:	je     0x6401455f
6401453b:	mov    eax,DWORD PTR [esi]
6401453d:	cmp    eax,0xfffffffe
64014540:	je     0x6401454f
64014542:	mov    ecx,DWORD PTR [esi+0x4]
64014545:	add    ecx,edi
64014547:	xor    ecx,DWORD PTR [eax+edi*1]
6401454a:	call   0x64012e6c
6401454f:	mov    ecx,DWORD PTR [esi+0xc]
64014552:	mov    eax,DWORD PTR [esi+0x8]
64014555:	add    ecx,edi
64014557:	xor    ecx,DWORD PTR [eax+edi*1]
6401455a:	call   0x64012e6c
6401455f:	mov    eax,DWORD PTR [esp+0x18]
64014563:	pop    edi
64014564:	pop    esi
64014565:	pop    ebp
64014566:	pop    ebx
64014567:	add    esp,0x14
6401456a:	ret    
6401456b:	mov    DWORD PTR [esp+0x18],0x0
64014573:	jmp    0x6401453b
64014575:	mov    ecx,DWORD PTR [esp+0x28]
64014579:	cmp    DWORD PTR [ecx],0xe06d7363
6401457f:	jne    0x640145ab
64014581:	cmp    DWORD PTR ds:0x64025d30,0x0
64014588:	je     0x640145ab
6401458a:	push   0x64025d30
6401458f:	call   0x6401b490
64014594:	add    esp,0x4
64014597:	test   eax,eax
64014599:	je     0x640145ab
6401459b:	mov    edx,DWORD PTR [esp+0x28]
6401459f:	push   0x1
640145a1:	push   edx
640145a2:	call   DWORD PTR ds:0x64025d30
640145a8:	add    esp,0x8
640145ab:	mov    ecx,DWORD PTR [esp+0x2c]
640145af:	call   0x6401b3d2
640145b4:	mov    eax,DWORD PTR [esp+0x2c]
640145b8:	cmp    DWORD PTR [eax+0xc],ebp
640145bb:	je     0x640145d0
640145bd:	push   0x6402d09c
640145c2:	push   edi
640145c3:	mov    edx,ebp
640145c5:	mov    ecx,eax
640145c7:	call   0x6401b3ec
640145cc:	mov    eax,DWORD PTR [esp+0x2c]
640145d0:	mov    ecx,DWORD PTR [esp+0x14]
640145d4:	mov    DWORD PTR [eax+0xc],ecx
640145d7:	mov    eax,DWORD PTR [esi]
640145d9:	cmp    eax,0xfffffffe
640145dc:	je     0x640145eb
640145de:	mov    ecx,DWORD PTR [esi+0x4]
640145e1:	add    ecx,edi
640145e3:	xor    ecx,DWORD PTR [eax+edi*1]
640145e6:	call   0x64012e6c
640145eb:	mov    ecx,DWORD PTR [esi+0xc]
640145ee:	mov    edx,DWORD PTR [esi+0x8]
640145f1:	add    ecx,edi
640145f3:	xor    ecx,DWORD PTR [edx+edi*1]
640145f6:	call   0x64012e6c
640145fb:	mov    ecx,DWORD PTR [ebx+0x8]
640145fe:	mov    edx,edi
64014600:	jmp    0x6401b3b9
64014605:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64014609:	je     0x6401455f
6401460f:	push   0x6402d09c
64014614:	push   edi
64014615:	mov    ecx,ebx
64014617:	mov    edx,0xfffffffe
6401461c:	call   0x6401b3ec
64014621:	jmp    0x6401453b
64014626:	int3   
64014627:	int3   
64014628:	int3   
64014629:	int3   
6401462a:	int3   
6401462b:	int3   
6401462c:	int3   
6401462d:	int3   
6401462e:	int3   
6401462f:	int3   
64014630:	mov    ecx,DWORD PTR [esp+0x4]
64014634:	test   ecx,0x3
6401463a:	je     0x64014660
6401463c:	mov    al,BYTE PTR [ecx]
6401463e:	add    ecx,0x1
64014641:	test   al,al
64014643:	je     0x64014693
64014645:	test   ecx,0x3
6401464b:	jne    0x6401463c
6401464d:	add    eax,0x0
64014652:	lea    esp,[esp+0x0]
64014659:	lea    esp,[esp+0x0]
64014660:	mov    eax,DWORD PTR [ecx]
64014662:	mov    edx,0x7efefeff
64014667:	add    edx,eax
64014669:	xor    eax,0xffffffff
6401466c:	xor    eax,edx
6401466e:	add    ecx,0x4
64014671:	test   eax,0x81010100
64014676:	je     0x64014660
64014678:	mov    eax,DWORD PTR [ecx-0x4]
6401467b:	test   al,al
6401467d:	je     0x640146b1
6401467f:	test   ah,ah
64014681:	je     0x640146a7
64014683:	test   eax,0xff0000
64014688:	je     0x6401469d
6401468a:	test   eax,0xff000000
6401468f:	je     0x64014693
64014691:	jmp    0x64014660
64014693:	lea    eax,[ecx-0x1]
64014696:	mov    ecx,DWORD PTR [esp+0x4]
6401469a:	sub    eax,ecx
6401469c:	ret    
6401469d:	lea    eax,[ecx-0x2]
640146a0:	mov    ecx,DWORD PTR [esp+0x4]
640146a4:	sub    eax,ecx
640146a6:	ret    
640146a7:	lea    eax,[ecx-0x3]
640146aa:	mov    ecx,DWORD PTR [esp+0x4]
640146ae:	sub    eax,ecx
640146b0:	ret    
640146b1:	lea    eax,[ecx-0x4]
640146b4:	mov    ecx,DWORD PTR [esp+0x4]
640146b8:	sub    eax,ecx
640146ba:	ret    
640146bb:	push   eax
640146bc:	push   DWORD PTR fs:0x0
640146c3:	lea    eax,[esp+0xc]
640146c7:	sub    esp,DWORD PTR [esp+0xc]
640146cb:	push   ebx
640146cc:	push   esi
640146cd:	push   edi
640146ce:	mov    DWORD PTR [eax],ebp
640146d0:	mov    ebp,eax
640146d2:	mov    eax,ds:0x6402d09c
640146d7:	xor    eax,ebp
640146d9:	push   eax
640146da:	push   DWORD PTR [ebp-0x4]
640146dd:	mov    DWORD PTR [ebp-0x4],0xffffffff
640146e4:	lea    eax,[ebp-0xc]
640146e7:	mov    fs:0x0,eax
640146ed:	ret    
640146ee:	push   eax
640146ef:	push   DWORD PTR fs:0x0
640146f6:	lea    eax,[esp+0xc]
640146fa:	sub    esp,DWORD PTR [esp+0xc]
640146fe:	push   ebx
640146ff:	push   esi
64014700:	push   edi
64014701:	mov    DWORD PTR [eax],ebp
64014703:	mov    ebp,eax
64014705:	mov    eax,ds:0x6402d09c
6401470a:	xor    eax,ebp
6401470c:	push   eax
6401470d:	mov    DWORD PTR [ebp-0x10],esp
64014710:	push   DWORD PTR [ebp-0x4]
64014713:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401471a:	lea    eax,[ebp-0xc]
6401471d:	mov    fs:0x0,eax
64014723:	ret    
64014724:	push   0xc
64014726:	push   0x6402a508
6401472b:	call   0x64014430
64014730:	push   0xe
64014732:	call   0x6401a43a
64014737:	pop    ecx
64014738:	and    DWORD PTR [ebp-0x4],0x0
6401473c:	mov    esi,DWORD PTR [ebp+0x8]
6401473f:	mov    ecx,DWORD PTR [esi+0x4]
64014742:	test   ecx,ecx
64014744:	je     0x64014775
64014746:	mov    eax,ds:0x6402e588
6401474b:	mov    edx,0x6402e584
64014750:	mov    DWORD PTR [ebp-0x1c],eax
64014753:	test   eax,eax
64014755:	je     0x64014768
64014757:	cmp    DWORD PTR [eax],ecx
64014759:	jne    0x64014787
6401475b:	mov    ecx,DWORD PTR [eax+0x4]
6401475e:	mov    DWORD PTR [edx+0x4],ecx
64014761:	push   eax
64014762:	call   0x64013d06
64014767:	pop    ecx
64014768:	push   DWORD PTR [esi+0x4]
6401476b:	call   0x64013d06
64014770:	pop    ecx
64014771:	and    DWORD PTR [esi+0x4],0x0
64014775:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401477c:	call   0x6401478b
64014781:	call   0x64014475
64014786:	ret    
64014787:	mov    edx,eax
64014789:	jmp    0x64014750
6401478b:	push   0xe
6401478d:	call   0x6401a362
64014792:	pop    ecx
64014793:	ret    
64014794:	int3   
64014795:	int3   
64014796:	int3   
64014797:	int3   
64014798:	int3   
64014799:	int3   
6401479a:	int3   
6401479b:	int3   
6401479c:	int3   
6401479d:	int3   
6401479e:	int3   
6401479f:	int3   
640147a0:	mov    edx,DWORD PTR [esp+0x4]
640147a4:	mov    ecx,DWORD PTR [esp+0x8]
640147a8:	test   edx,0x3
640147ae:	jne    0x640147ec
640147b0:	mov    eax,DWORD PTR [edx]
640147b2:	cmp    al,BYTE PTR [ecx]
640147b4:	jne    0x640147e4
640147b6:	or     al,al
640147b8:	je     0x640147e0
640147ba:	cmp    ah,BYTE PTR [ecx+0x1]
640147bd:	jne    0x640147e4
640147bf:	or     ah,ah
640147c1:	je     0x640147e0
640147c3:	shr    eax,0x10
640147c6:	cmp    al,BYTE PTR [ecx+0x2]
640147c9:	jne    0x640147e4
640147cb:	or     al,al
640147cd:	je     0x640147e0
640147cf:	cmp    ah,BYTE PTR [ecx+0x3]
640147d2:	jne    0x640147e4
640147d4:	add    ecx,0x4
640147d7:	add    edx,0x4
640147da:	or     ah,ah
640147dc:	jne    0x640147b0
640147de:	mov    edi,edi
640147e0:	xor    eax,eax
640147e2:	ret    
640147e3:	nop
640147e4:	sbb    eax,eax
640147e6:	shl    eax,1
640147e8:	add    eax,0x1
640147eb:	ret    
640147ec:	test   edx,0x1
640147f2:	je     0x6401480c
640147f4:	mov    al,BYTE PTR [edx]
640147f6:	add    edx,0x1
640147f9:	cmp    al,BYTE PTR [ecx]
640147fb:	jne    0x640147e4
640147fd:	add    ecx,0x1
64014800:	or     al,al
64014802:	je     0x640147e0
64014804:	test   edx,0x2
6401480a:	je     0x640147b0
6401480c:	mov    ax,WORD PTR [edx]
6401480f:	add    edx,0x2
64014812:	cmp    al,BYTE PTR [ecx]
64014814:	jne    0x640147e4
64014816:	or     al,al
64014818:	je     0x640147e0
6401481a:	cmp    ah,BYTE PTR [ecx+0x1]
6401481d:	jne    0x640147e4
6401481f:	or     ah,ah
64014821:	je     0x640147e0
64014823:	add    ecx,0x2
64014826:	jmp    0x640147b0
64014828:	mov    ecx,DWORD PTR [esp+0x4]
6401482c:	push   ebx
6401482d:	xor    ebx,ebx
6401482f:	cmp    ecx,ebx
64014831:	push   esi
64014832:	push   edi
64014833:	je     0x6401483d
64014835:	mov    edi,DWORD PTR [esp+0x14]
64014839:	cmp    edi,ebx
6401483b:	ja     0x64014858
6401483d:	call   0x64014c30
64014842:	push   0x16
64014844:	pop    esi
64014845:	mov    DWORD PTR [eax],esi
64014847:	push   ebx
64014848:	push   ebx
64014849:	push   ebx
6401484a:	push   ebx
6401484b:	push   ebx
6401484c:	call   0x640129a4
64014851:	add    esp,0x14
64014854:	mov    eax,esi
64014856:	jmp    0x64014889
64014858:	mov    esi,DWORD PTR [esp+0x18]
6401485c:	cmp    esi,ebx
6401485e:	jne    0x64014864
64014860:	mov    BYTE PTR [ecx],bl
64014862:	jmp    0x6401483d
64014864:	mov    edx,ecx
64014866:	mov    al,BYTE PTR [esi]
64014868:	mov    BYTE PTR [edx],al
6401486a:	inc    edx
6401486b:	inc    esi
6401486c:	cmp    al,bl
6401486e:	je     0x64014873
64014870:	dec    edi
64014871:	jne    0x64014866
64014873:	cmp    edi,ebx
64014875:	jne    0x64014887
64014877:	mov    BYTE PTR [ecx],bl
64014879:	call   0x64014c30
6401487e:	push   0x22
64014880:	pop    ecx
64014881:	mov    DWORD PTR [eax],ecx
64014883:	mov    esi,ecx
64014885:	jmp    0x64014847
64014887:	xor    eax,eax
64014889:	pop    edi
6401488a:	pop    esi
6401488b:	pop    ebx
6401488c:	ret    
6401488d:	int3   
6401488e:	int3   
6401488f:	int3   
64014890:	push   ebp
64014891:	mov    ebp,esp
64014893:	push   edi
64014894:	push   esi
64014895:	mov    esi,DWORD PTR [ebp+0xc]
64014898:	mov    ecx,DWORD PTR [ebp+0x10]
6401489b:	mov    edi,DWORD PTR [ebp+0x8]
6401489e:	mov    eax,ecx
640148a0:	mov    edx,ecx
640148a2:	add    eax,esi
640148a4:	cmp    edi,esi
640148a6:	jbe    0x640148b0
640148a8:	cmp    edi,eax
640148aa:	jb     0x64014a54
640148b0:	cmp    ecx,0x100
640148b6:	jb     0x640148d7
640148b8:	cmp    DWORD PTR ds:0x64032604,0x0
640148bf:	je     0x640148d7
640148c1:	push   edi
640148c2:	push   esi
640148c3:	and    edi,0xf
640148c6:	and    esi,0xf
640148c9:	cmp    edi,esi
640148cb:	pop    esi
640148cc:	pop    edi
640148cd:	jne    0x640148d7
640148cf:	pop    esi
640148d0:	pop    edi
640148d1:	pop    ebp
640148d2:	jmp    0x6401b1cc
640148d7:	test   edi,0x3
640148dd:	jne    0x640148f4
640148df:	shr    ecx,0x2
640148e2:	and    edx,0x3
640148e5:	cmp    ecx,0x8
640148e8:	jb     0x64014914
640148ea:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640148ec:	jmp    DWORD PTR [edx*4+0x64014a04]
640148f3:	nop
640148f4:	mov    eax,edi
640148f6:	mov    edx,0x3
640148fb:	sub    ecx,0x4
640148fe:	jb     0x6401490c
64014900:	and    eax,0x3
64014903:	add    ecx,eax
64014905:	jmp    DWORD PTR [eax*4+0x64014918]
6401490c:	jmp    DWORD PTR [ecx*4+0x64014a14]
64014913:	nop
64014914:	jmp    DWORD PTR [ecx*4+0x64014998]
6401491b:	nop
6401491c:	sub    BYTE PTR [ecx+0x1],cl
6401491f:	fs push esp
64014921:	dec    ecx
64014922:	add    DWORD PTR [eax+edi*2+0x49],esp
64014926:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401492a:	mov    al,BYTE PTR [esi]
6401492c:	mov    BYTE PTR [edi],al
6401492e:	mov    al,BYTE PTR [esi+0x1]
64014931:	mov    BYTE PTR [edi+0x1],al
64014934:	mov    al,BYTE PTR [esi+0x2]
64014937:	shr    ecx,0x2
6401493a:	mov    BYTE PTR [edi+0x2],al
6401493d:	add    esi,0x3
64014940:	add    edi,0x3
64014943:	cmp    ecx,0x8
64014946:	jb     0x64014914
64014948:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401494a:	jmp    DWORD PTR [edx*4+0x64014a04]
64014951:	lea    ecx,[ecx+0x0]
64014954:	and    edx,ecx
64014956:	mov    al,BYTE PTR [esi]
64014958:	mov    BYTE PTR [edi],al
6401495a:	mov    al,BYTE PTR [esi+0x1]
6401495d:	shr    ecx,0x2
64014960:	mov    BYTE PTR [edi+0x1],al
64014963:	add    esi,0x2
64014966:	add    edi,0x2
64014969:	cmp    ecx,0x8
6401496c:	jb     0x64014914
6401496e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014970:	jmp    DWORD PTR [edx*4+0x64014a04]
64014977:	nop
64014978:	and    edx,ecx
6401497a:	mov    al,BYTE PTR [esi]
6401497c:	mov    BYTE PTR [edi],al
6401497e:	add    esi,0x1
64014981:	shr    ecx,0x2
64014984:	add    edi,0x1
64014987:	cmp    ecx,0x8
6401498a:	jb     0x64014914
6401498c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401498e:	jmp    DWORD PTR [edx*4+0x64014a04]
64014995:	lea    ecx,[ecx+0x0]
64014998:	sti    
64014999:	dec    ecx
6401499a:	add    DWORD PTR [eax+ebp*8+0x49],esp
6401499e:	add    DWORD PTR [eax+eiz*8+0x49],esp
640149a2:	add    DWORD PTR [eax+ebx*8+0x49],esp
640149a6:	add    DWORD PTR [eax+edx*8+0x49],esp
640149aa:	add    DWORD PTR [eax+ecx*8+0x49],esp
640149ae:	add    DWORD PTR [eax+eax*8+0x49],esp
640149b2:	add    DWORD PTR [eax+edi*4+0x49],esp
640149b6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640149ba:	mov    fs,esp
640149bc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640149c0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640149c4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640149c8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640149cc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640149d0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640149d4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640149d8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640149dc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
640149e0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
640149e4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
640149e8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
640149ec:	mov    DWORD PTR [edi+ecx*4-0x4],eax
640149f0:	lea    eax,[ecx*4+0x0]
640149f7:	add    esi,eax
640149f9:	add    edi,eax
640149fb:	jmp    DWORD PTR [edx*4+0x64014a04]
64014a02:	mov    edi,edi
64014a04:	adc    al,0x4a
64014a06:	add    DWORD PTR [esp+ebx*1+0x4a],esp
64014a0a:	add    DWORD PTR [eax+ebp*1+0x4a],esp
64014a0e:	add    DWORD PTR [esp+edi*1+0x4a],esp
64014a12:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014a16:	or     BYTE PTR [esi+0x5f],bl
64014a19:	leave  
64014a1a:	ret    
64014a1b:	nop
64014a1c:	mov    al,BYTE PTR [esi]
64014a1e:	mov    BYTE PTR [edi],al
64014a20:	mov    eax,DWORD PTR [ebp+0x8]
64014a23:	pop    esi
64014a24:	pop    edi
64014a25:	leave  
64014a26:	ret    
64014a27:	nop
64014a28:	mov    al,BYTE PTR [esi]
64014a2a:	mov    BYTE PTR [edi],al
64014a2c:	mov    al,BYTE PTR [esi+0x1]
64014a2f:	mov    BYTE PTR [edi+0x1],al
64014a32:	mov    eax,DWORD PTR [ebp+0x8]
64014a35:	pop    esi
64014a36:	pop    edi
64014a37:	leave  
64014a38:	ret    
64014a39:	lea    ecx,[ecx+0x0]
64014a3c:	mov    al,BYTE PTR [esi]
64014a3e:	mov    BYTE PTR [edi],al
64014a40:	mov    al,BYTE PTR [esi+0x1]
64014a43:	mov    BYTE PTR [edi+0x1],al
64014a46:	mov    al,BYTE PTR [esi+0x2]
64014a49:	mov    BYTE PTR [edi+0x2],al
64014a4c:	mov    eax,DWORD PTR [ebp+0x8]
64014a4f:	pop    esi
64014a50:	pop    edi
64014a51:	leave  
64014a52:	ret    
64014a53:	nop
64014a54:	lea    esi,[ecx+esi*1-0x4]
64014a58:	lea    edi,[ecx+edi*1-0x4]
64014a5c:	test   edi,0x3
64014a62:	jne    0x64014a88
64014a64:	shr    ecx,0x2
64014a67:	and    edx,0x3
64014a6a:	cmp    ecx,0x8
64014a6d:	jb     0x64014a7c
64014a6f:	std    
64014a70:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014a72:	cld    
64014a73:	jmp    DWORD PTR [edx*4+0x64014ba0]
64014a7a:	mov    edi,edi
64014a7c:	neg    ecx
64014a7e:	jmp    DWORD PTR [ecx*4+0x64014b50]
64014a85:	lea    ecx,[ecx+0x0]
64014a88:	mov    eax,edi
64014a8a:	mov    edx,0x3
64014a8f:	cmp    ecx,0x4
64014a92:	jb     0x64014aa0
64014a94:	and    eax,0x3
64014a97:	sub    ecx,eax
64014a99:	jmp    DWORD PTR [eax*4+0x64014aa4]
64014aa0:	jmp    DWORD PTR [ecx*4+0x64014ba0]
64014aa7:	nop
64014aa8:	mov    ah,0x4a
64014aaa:	add    DWORD PTR [eax+ebx*8+0x4a],esp
64014aae:	add    DWORD PTR [eax+eax*1+0x4b],esp
64014ab2:	add    DWORD PTR [edx+ecx*4+0x46],esp
64014ab6:	add    esp,DWORD PTR [ebx]
64014ab8:	ror    DWORD PTR [eax-0x117cfcb9],1
64014abe:	add    ecx,eax
64014ac0:	jmp    0x65f0cdc7
64014ac5:	cmp    ecx,0x8
64014ac8:	jb     0x64014a7c
64014aca:	std    
64014acb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014acd:	cld    
64014ace:	jmp    DWORD PTR [edx*4+0x64014ba0]
64014ad5:	lea    ecx,[ecx+0x0]
64014ad8:	mov    al,BYTE PTR [esi+0x3]
64014adb:	and    edx,ecx
64014add:	mov    BYTE PTR [edi+0x3],al
64014ae0:	mov    al,BYTE PTR [esi+0x2]
64014ae3:	shr    ecx,0x2
64014ae6:	mov    BYTE PTR [edi+0x2],al
64014ae9:	sub    esi,0x2
64014aec:	sub    edi,0x2
64014aef:	cmp    ecx,0x8
64014af2:	jb     0x64014a7c
64014af4:	std    
64014af5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014af7:	cld    
64014af8:	jmp    DWORD PTR [edx*4+0x64014ba0]
64014aff:	nop
64014b00:	mov    al,BYTE PTR [esi+0x3]
64014b03:	and    edx,ecx
64014b05:	mov    BYTE PTR [edi+0x3],al
64014b08:	mov    al,BYTE PTR [esi+0x2]
64014b0b:	mov    BYTE PTR [edi+0x2],al
64014b0e:	mov    al,BYTE PTR [esi+0x1]
64014b11:	shr    ecx,0x2
64014b14:	mov    BYTE PTR [edi+0x1],al
64014b17:	sub    esi,0x3
64014b1a:	sub    edi,0x3
64014b1d:	cmp    ecx,0x8
64014b20:	jb     0x64014a7c
64014b26:	std    
64014b27:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014b29:	cld    
64014b2a:	jmp    DWORD PTR [edx*4+0x64014ba0]
64014b31:	lea    ecx,[ecx+0x0]
64014b34:	push   esp
64014b35:	dec    ebx
64014b36:	add    DWORD PTR [esp+ebx*2+0x4b],esp
64014b3a:	add    DWORD PTR [esp+eiz*2+0x4b],esp
64014b3e:	add    DWORD PTR [esp+ebp*2+0x4b],esp
64014b42:	add    DWORD PTR [esp+esi*2+0x4b],esp
64014b46:	add    DWORD PTR [esp+edi*2+0x4b],esp
64014b4a:	add    DWORD PTR [esp+eax*4+0x4b],esp
64014b4e:	add    DWORD PTR [edi+edx*4+0x4b],esp
64014b52:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64014b56:	mov    ds,WORD PTR [ecx+ecx*4]
64014b59:	inc    esp
64014b5a:	(bad)  
64014b5b:	sbb    al,0x8b
64014b5d:	inc    esp
64014b5e:	mov    ds,WORD PTR [eax]
64014b60:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64014b64:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64014b68:	mov    DWORD PTR [edi+ecx*4+0x14],eax
64014b6c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64014b70:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64014b74:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64014b78:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64014b7c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64014b80:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64014b84:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64014b88:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64014b8c:	lea    eax,[ecx*4+0x0]
64014b93:	add    esi,eax
64014b95:	add    edi,eax
64014b97:	jmp    DWORD PTR [edx*4+0x64014ba0]
64014b9e:	mov    edi,edi
64014ba0:	mov    al,0x4b
64014ba2:	add    DWORD PTR [eax+edi*4+0x4b],esp
64014ba6:	add    DWORD PTR [eax+ecx*8+0x4b],esp
64014baa:	add    DWORD PTR [esp+ebx*8+0x4b],esp
64014bae:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014bb2:	or     BYTE PTR [esi+0x5f],bl
64014bb5:	leave  
64014bb6:	ret    
64014bb7:	nop
64014bb8:	mov    al,BYTE PTR [esi+0x3]
64014bbb:	mov    BYTE PTR [edi+0x3],al
64014bbe:	mov    eax,DWORD PTR [ebp+0x8]
64014bc1:	pop    esi
64014bc2:	pop    edi
64014bc3:	leave  
64014bc4:	ret    
64014bc5:	lea    ecx,[ecx+0x0]
64014bc8:	mov    al,BYTE PTR [esi+0x3]
64014bcb:	mov    BYTE PTR [edi+0x3],al
64014bce:	mov    al,BYTE PTR [esi+0x2]
64014bd1:	mov    BYTE PTR [edi+0x2],al
64014bd4:	mov    eax,DWORD PTR [ebp+0x8]
64014bd7:	pop    esi
64014bd8:	pop    edi
64014bd9:	leave  
64014bda:	ret    
64014bdb:	nop
64014bdc:	mov    al,BYTE PTR [esi+0x3]
64014bdf:	mov    BYTE PTR [edi+0x3],al
64014be2:	mov    al,BYTE PTR [esi+0x2]
64014be5:	mov    BYTE PTR [edi+0x2],al
64014be8:	mov    al,BYTE PTR [esi+0x1]
64014beb:	mov    BYTE PTR [edi+0x1],al
64014bee:	mov    eax,DWORD PTR [ebp+0x8]
64014bf1:	pop    esi
64014bf2:	pop    edi
64014bf3:	leave  
64014bf4:	ret    
64014bf5:	mov    eax,DWORD PTR [esp+0x4]
64014bf9:	xor    ecx,ecx
64014bfb:	cmp    eax,DWORD PTR [ecx*8+0x6402d0c0]
64014c02:	je     0x64014c16
64014c04:	inc    ecx
64014c05:	cmp    ecx,0x2d
64014c08:	jb     0x64014bfb
64014c0a:	lea    ecx,[eax-0x13]
64014c0d:	cmp    ecx,0x11
64014c10:	ja     0x64014c1e
64014c12:	push   0xd
64014c14:	pop    eax
64014c15:	ret    
64014c16:	mov    eax,DWORD PTR [ecx*8+0x6402d0c4]
64014c1d:	ret    
64014c1e:	add    eax,0xffffff44
64014c23:	push   0xe
64014c25:	pop    ecx
64014c26:	cmp    ecx,eax
64014c28:	sbb    eax,eax
64014c2a:	and    eax,ecx
64014c2c:	add    eax,0x8
64014c2f:	ret    
64014c30:	call   0x64014f04
64014c35:	test   eax,eax
64014c37:	jne    0x64014c3f
64014c39:	mov    eax,0x6402d228
64014c3e:	ret    
64014c3f:	add    eax,0x8
64014c42:	ret    
64014c43:	call   0x64014f04
64014c48:	test   eax,eax
64014c4a:	jne    0x64014c52
64014c4c:	mov    eax,0x6402d22c
64014c51:	ret    
64014c52:	add    eax,0xc
64014c55:	ret    
64014c56:	push   esi
64014c57:	call   0x64014c43
64014c5c:	mov    ecx,DWORD PTR [esp+0x8]
64014c60:	push   ecx
64014c61:	mov    DWORD PTR [eax],ecx
64014c63:	call   0x64014bf5
64014c68:	pop    ecx
64014c69:	mov    esi,eax
64014c6b:	call   0x64014c30
64014c70:	mov    DWORD PTR [eax],esi
64014c72:	pop    esi
64014c73:	ret    
64014c74:	and    DWORD PTR ds:0x6403261c,0x0
64014c7b:	ret    
64014c7c:	push   ebp
64014c7d:	mov    ebp,esp
64014c7f:	push   ecx
64014c80:	push   ecx
64014c81:	push   ebx
64014c82:	push   esi
64014c83:	xor    esi,esi
64014c85:	lea    eax,[ebp-0x4]
64014c88:	inc    esi
64014c89:	xor    ebx,ebx
64014c8b:	push   eax
64014c8c:	mov    DWORD PTR [ebp-0x8],esi
64014c8f:	mov    DWORD PTR [ebp-0x4],ebx
64014c92:	call   0x64016396
64014c97:	cmp    DWORD PTR [ebp-0x4],0x5
64014c9b:	pop    ecx
64014c9c:	jle    0x64014ca2
64014c9e:	mov    eax,esi
64014ca0:	jmp    0x64014ce4
64014ca2:	push   edi
64014ca3:	push   ebx
64014ca4:	call   DWORD PTR ds:0x64025130
64014caa:	mov    esi,DWORD PTR [eax+0x3c]
64014cad:	add    esi,eax
64014caf:	cmp    WORD PTR [esi+0x6],bx
64014cb3:	movzx  eax,WORD PTR [esi+0x14]
64014cb7:	lea    edi,[eax+esi*1+0x18]
64014cbb:	jbe    0x64014ce0
64014cbd:	push   edi
64014cbe:	push   0x64025ccc
64014cc3:	call   0x640147a0
64014cc8:	test   eax,eax
64014cca:	pop    ecx
64014ccb:	pop    ecx
64014ccc:	je     0x64014cdc
64014cce:	movzx  eax,WORD PTR [esi+0x6]
64014cd2:	inc    ebx
64014cd3:	add    edi,0x28
64014cd6:	cmp    ebx,eax
64014cd8:	jb     0x64014cbd
64014cda:	jmp    0x64014ce0
64014cdc:	and    DWORD PTR [ebp-0x8],0x0
64014ce0:	mov    eax,DWORD PTR [ebp-0x8]
64014ce3:	pop    edi
64014ce4:	pop    esi
64014ce5:	pop    ebx
64014ce6:	leave  
64014ce7:	ret    
64014ce8:	push   esi
64014ce9:	push   DWORD PTR ds:0x6402d234
64014cef:	mov    esi,DWORD PTR ds:0x64025134
64014cf5:	call   esi
64014cf7:	test   eax,eax
64014cf9:	je     0x64014d1c
64014cfb:	mov    eax,ds:0x6402d230
64014d00:	cmp    eax,0xffffffff
64014d03:	je     0x64014d1c
64014d05:	push   eax
64014d06:	push   DWORD PTR ds:0x6402d234
64014d0c:	call   esi
64014d0e:	call   eax
64014d10:	test   eax,eax
64014d12:	je     0x64014d1c
64014d14:	mov    eax,DWORD PTR [eax+0x1f8]
64014d1a:	jmp    0x64014d42
64014d1c:	push   0x64025ce4
64014d21:	call   DWORD PTR ds:0x64025130
64014d27:	mov    esi,eax
64014d29:	test   esi,esi
64014d2b:	je     0x64014d50
64014d2d:	call   0x64014c7c
64014d32:	test   eax,eax
64014d34:	je     0x64014d50
64014d36:	push   0x64025cd4
64014d3b:	push   esi
64014d3c:	call   DWORD PTR ds:0x64025014
64014d42:	test   eax,eax
64014d44:	je     0x64014d50
64014d46:	push   DWORD PTR [esp+0x8]
64014d4a:	call   eax
64014d4c:	mov    DWORD PTR [esp+0x8],eax
64014d50:	mov    eax,DWORD PTR [esp+0x8]
64014d54:	pop    esi
64014d55:	ret    
64014d56:	push   0x0
64014d58:	call   0x64014ce8
64014d5d:	pop    ecx
64014d5e:	ret    
64014d5f:	push   esi
64014d60:	push   DWORD PTR ds:0x6402d234
64014d66:	mov    esi,DWORD PTR ds:0x64025134
64014d6c:	call   esi
64014d6e:	test   eax,eax
64014d70:	je     0x64014d93
64014d72:	mov    eax,ds:0x6402d230
64014d77:	cmp    eax,0xffffffff
64014d7a:	je     0x64014d93
64014d7c:	push   eax
64014d7d:	push   DWORD PTR ds:0x6402d234
64014d83:	call   esi
64014d85:	call   eax
64014d87:	test   eax,eax
64014d89:	je     0x64014d93
64014d8b:	mov    eax,DWORD PTR [eax+0x1fc]
64014d91:	jmp    0x64014db9
64014d93:	push   0x64025ce4
64014d98:	call   DWORD PTR ds:0x64025130
64014d9e:	mov    esi,eax
64014da0:	test   esi,esi
64014da2:	je     0x64014dc7
64014da4:	call   0x64014c7c
64014da9:	test   eax,eax
64014dab:	je     0x64014dc7
64014dad:	push   0x64025cf4
64014db2:	push   esi
64014db3:	call   DWORD PTR ds:0x64025014
64014db9:	test   eax,eax
64014dbb:	je     0x64014dc7
64014dbd:	push   DWORD PTR [esp+0x8]
64014dc1:	call   eax
64014dc3:	mov    DWORD PTR [esp+0x8],eax
64014dc7:	mov    eax,DWORD PTR [esp+0x8]
64014dcb:	pop    esi
64014dcc:	ret    
64014dcd:	call   DWORD PTR ds:0x64025138
64014dd3:	ret    0x4
64014dd6:	push   esi
64014dd7:	push   DWORD PTR ds:0x6402d234
64014ddd:	call   DWORD PTR ds:0x64025134
64014de3:	mov    esi,eax
64014de5:	test   esi,esi
64014de7:	jne    0x64014e04
64014de9:	push   DWORD PTR ds:0x6402e590
64014def:	call   0x64014d5f
64014df4:	pop    ecx
64014df5:	mov    esi,eax
64014df7:	push   esi
64014df8:	push   DWORD PTR ds:0x6402d234
64014dfe:	call   DWORD PTR ds:0x6402513c
64014e04:	mov    eax,esi
64014e06:	pop    esi
64014e07:	ret    
64014e08:	mov    eax,ds:0x6402d230
64014e0d:	cmp    eax,0xffffffff
64014e10:	je     0x64014e28
64014e12:	push   eax
64014e13:	push   DWORD PTR ds:0x6402e598
64014e19:	call   0x64014d5f
64014e1e:	pop    ecx
64014e1f:	call   eax
64014e21:	or     DWORD PTR ds:0x6402d230,0xffffffff
64014e28:	mov    eax,ds:0x6402d234
64014e2d:	cmp    eax,0xffffffff
64014e30:	je     0x64014e40
64014e32:	push   eax
64014e33:	call   DWORD PTR ds:0x64025140
64014e39:	or     DWORD PTR ds:0x6402d234,0xffffffff
64014e40:	jmp    0x6401a30d
64014e45:	push   0xc
64014e47:	push   0x6402a528
64014e4c:	call   0x64014430
64014e51:	push   0x64025ce4
64014e56:	call   DWORD PTR ds:0x64025130
64014e5c:	mov    DWORD PTR [ebp-0x1c],eax
64014e5f:	mov    esi,DWORD PTR [ebp+0x8]
64014e62:	mov    DWORD PTR [esi+0x5c],0x6402d8c8
64014e69:	xor    edi,edi
64014e6b:	inc    edi
64014e6c:	mov    DWORD PTR [esi+0x14],edi
64014e6f:	test   eax,eax
64014e71:	je     0x64014ea2
64014e73:	call   0x64014c7c
64014e78:	test   eax,eax
64014e7a:	je     0x64014ea2
64014e7c:	push   0x64025cd4
64014e81:	push   DWORD PTR [ebp-0x1c]
64014e84:	mov    ebx,DWORD PTR ds:0x64025014
64014e8a:	call   ebx
64014e8c:	mov    DWORD PTR [esi+0x1f8],eax
64014e92:	push   0x64025cf4
64014e97:	push   DWORD PTR [ebp-0x1c]
64014e9a:	call   ebx
64014e9c:	mov    DWORD PTR [esi+0x1fc],eax
64014ea2:	mov    DWORD PTR [esi+0x70],edi
64014ea5:	mov    BYTE PTR [esi+0xc8],0x43
64014eac:	mov    BYTE PTR [esi+0x14b],0x43
64014eb3:	mov    eax,0x6402d268
64014eb8:	mov    DWORD PTR [esi+0x68],eax
64014ebb:	push   eax
64014ebc:	call   DWORD PTR ds:0x64025020
64014ec2:	push   0xc
64014ec4:	call   0x6401a43a
64014ec9:	pop    ecx
64014eca:	and    DWORD PTR [ebp-0x4],0x0
64014ece:	mov    eax,DWORD PTR [ebp+0xc]
64014ed1:	mov    DWORD PTR [esi+0x6c],eax
64014ed4:	test   eax,eax
64014ed6:	jne    0x64014ee0
64014ed8:	mov    eax,ds:0x6402d870
64014edd:	mov    DWORD PTR [esi+0x6c],eax
64014ee0:	push   DWORD PTR [esi+0x6c]
64014ee3:	call   0x64016daf
64014ee8:	pop    ecx
64014ee9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014ef0:	call   0x64014efb
64014ef5:	call   0x64014475
64014efa:	ret    
64014efb:	push   0xc
64014efd:	call   0x6401a362
64014f02:	pop    ecx
64014f03:	ret    
64014f04:	push   esi
64014f05:	push   edi
64014f06:	call   DWORD PTR ds:0x64025044
64014f0c:	push   DWORD PTR ds:0x6402d230
64014f12:	mov    edi,eax
64014f14:	call   0x64014dd6
64014f19:	call   eax
64014f1b:	mov    esi,eax
64014f1d:	test   esi,esi
64014f1f:	jne    0x64014f6f
64014f21:	push   0x214
64014f26:	push   0x1
64014f28:	call   0x64016180
64014f2d:	mov    esi,eax
64014f2f:	test   esi,esi
64014f31:	pop    ecx
64014f32:	pop    ecx
64014f33:	je     0x64014f6f
64014f35:	push   esi
64014f36:	push   DWORD PTR ds:0x6402d230
64014f3c:	push   DWORD PTR ds:0x6402e594
64014f42:	call   0x64014d5f
64014f47:	pop    ecx
64014f48:	call   eax
64014f4a:	test   eax,eax
64014f4c:	je     0x64014f66
64014f4e:	push   0x0
64014f50:	push   esi
64014f51:	call   0x64014e45
64014f56:	pop    ecx
64014f57:	pop    ecx
64014f58:	call   DWORD PTR ds:0x64025128
64014f5e:	or     DWORD PTR [esi+0x4],0xffffffff
64014f62:	mov    DWORD PTR [esi],eax
64014f64:	jmp    0x64014f6f
64014f66:	push   esi
64014f67:	call   0x64013d06
64014f6c:	pop    ecx
64014f6d:	xor    esi,esi
64014f6f:	push   edi
64014f70:	call   DWORD PTR ds:0x64025060
64014f76:	pop    edi
64014f77:	mov    eax,esi
64014f79:	pop    esi
64014f7a:	ret    
64014f7b:	push   esi
64014f7c:	call   0x64014f04
64014f81:	mov    esi,eax
64014f83:	test   esi,esi
64014f85:	jne    0x64014f8f
64014f87:	push   0x10
64014f89:	call   0x640162b6
64014f8e:	pop    ecx
64014f8f:	mov    eax,esi
64014f91:	pop    esi
64014f92:	ret    
64014f93:	push   0x8
64014f95:	push   0x6402a548
64014f9a:	call   0x64014430
64014f9f:	mov    esi,DWORD PTR [ebp+0x8]
64014fa2:	test   esi,esi
64014fa4:	je     0x64015094
64014faa:	mov    eax,DWORD PTR [esi+0x24]
64014fad:	test   eax,eax
64014faf:	je     0x64014fb8
64014fb1:	push   eax
64014fb2:	call   0x64013d06
64014fb7:	pop    ecx
64014fb8:	mov    eax,DWORD PTR [esi+0x2c]
64014fbb:	test   eax,eax
64014fbd:	je     0x64014fc6
64014fbf:	push   eax
64014fc0:	call   0x64013d06
64014fc5:	pop    ecx
64014fc6:	mov    eax,DWORD PTR [esi+0x34]
64014fc9:	test   eax,eax
64014fcb:	je     0x64014fd4
64014fcd:	push   eax
64014fce:	call   0x64013d06
64014fd3:	pop    ecx
64014fd4:	mov    eax,DWORD PTR [esi+0x3c]
64014fd7:	test   eax,eax
64014fd9:	je     0x64014fe2
64014fdb:	push   eax
64014fdc:	call   0x64013d06
64014fe1:	pop    ecx
64014fe2:	mov    eax,DWORD PTR [esi+0x44]
64014fe5:	test   eax,eax
64014fe7:	je     0x64014ff0
64014fe9:	push   eax
64014fea:	call   0x64013d06
64014fef:	pop    ecx
64014ff0:	mov    eax,DWORD PTR [esi+0x48]
64014ff3:	test   eax,eax
64014ff5:	je     0x64014ffe
64014ff7:	push   eax
64014ff8:	call   0x64013d06
64014ffd:	pop    ecx
64014ffe:	mov    eax,DWORD PTR [esi+0x5c]
64015001:	cmp    eax,0x6402d8c8
64015006:	je     0x6401500f
64015008:	push   eax
64015009:	call   0x64013d06
6401500e:	pop    ecx
6401500f:	push   0xd
64015011:	call   0x6401a43a
64015016:	pop    ecx
64015017:	and    DWORD PTR [ebp-0x4],0x0
6401501b:	mov    edi,DWORD PTR [esi+0x68]
6401501e:	test   edi,edi
64015020:	je     0x6401503c
64015022:	push   edi
64015023:	call   DWORD PTR ds:0x64025094
64015029:	test   eax,eax
6401502b:	jne    0x6401503c
6401502d:	cmp    edi,0x6402d268
64015033:	je     0x6401503c
64015035:	push   edi
64015036:	call   0x64013d06
6401503b:	pop    ecx
6401503c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015043:	call   0x6401509f
64015048:	push   0xc
6401504a:	call   0x6401a43a
6401504f:	pop    ecx
64015050:	mov    DWORD PTR [ebp-0x4],0x1
64015057:	mov    edi,DWORD PTR [esi+0x6c]
6401505a:	test   edi,edi
6401505c:	je     0x64015081
6401505e:	push   edi
6401505f:	call   0x64016e35
64015064:	pop    ecx
64015065:	cmp    edi,DWORD PTR ds:0x6402d870
6401506b:	je     0x64015081
6401506d:	cmp    edi,0x6402d798
64015073:	je     0x64015081
64015075:	cmp    DWORD PTR [edi],0x0
64015078:	jne    0x64015081
6401507a:	push   edi
6401507b:	call   0x64016c6f
64015080:	pop    ecx
64015081:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015088:	call   0x640150ab
6401508d:	push   esi
6401508e:	call   0x64013d06
64015093:	pop    ecx
64015094:	call   0x64014475
64015099:	ret    0x4
6401509c:	mov    esi,DWORD PTR [ebp+0x8]
6401509f:	push   0xd
640150a1:	call   0x6401a362
640150a6:	pop    ecx
640150a7:	ret    
640150a8:	mov    esi,DWORD PTR [ebp+0x8]
640150ab:	push   0xc
640150ad:	call   0x6401a362
640150b2:	pop    ecx
640150b3:	ret    
640150b4:	cmp    DWORD PTR ds:0x6402d230,0xffffffff
640150bb:	je     0x64015109
640150bd:	push   edi
640150be:	mov    edi,DWORD PTR [esp+0x8]
640150c2:	test   edi,edi
640150c4:	jne    0x640150ec
640150c6:	push   esi
640150c7:	push   DWORD PTR ds:0x6402d234
640150cd:	mov    esi,DWORD PTR ds:0x64025134
640150d3:	call   esi
640150d5:	test   eax,eax
640150d7:	je     0x640150eb
640150d9:	push   DWORD PTR ds:0x6402d230
640150df:	push   DWORD PTR ds:0x6402d234
640150e5:	call   esi
640150e7:	call   eax
640150e9:	mov    edi,eax
640150eb:	pop    esi
640150ec:	push   0x0
640150ee:	push   DWORD PTR ds:0x6402d230
640150f4:	push   DWORD PTR ds:0x6402e594
640150fa:	call   0x64014d5f
640150ff:	pop    ecx
64015100:	call   eax
64015102:	push   edi
64015103:	call   0x64014f93
64015108:	pop    edi
64015109:	mov    eax,ds:0x6402d234
6401510e:	cmp    eax,0xffffffff
64015111:	je     0x6401511c
64015113:	push   0x0
64015115:	push   eax
64015116:	call   DWORD PTR ds:0x6402513c
6401511c:	ret    
6401511d:	push   edi
6401511e:	push   0x64025ce4
64015123:	call   DWORD PTR ds:0x64025130
64015129:	mov    edi,eax
6401512b:	test   edi,edi
6401512d:	jne    0x64015138
6401512f:	call   0x64014e08
64015134:	xor    eax,eax
64015136:	pop    edi
64015137:	ret    
64015138:	push   esi
64015139:	mov    esi,DWORD PTR ds:0x64025014
6401513f:	push   0x64025d24
64015144:	push   edi
64015145:	call   esi
64015147:	push   0x64025d18
6401514c:	push   edi
6401514d:	mov    ds:0x6402e58c,eax
64015152:	call   esi
64015154:	push   0x64025d0c
64015159:	push   edi
6401515a:	mov    ds:0x6402e590,eax
6401515f:	call   esi
64015161:	push   0x64025d04
64015166:	push   edi
64015167:	mov    ds:0x6402e594,eax
6401516c:	call   esi
6401516e:	cmp    DWORD PTR ds:0x6402e58c,0x0
64015175:	mov    esi,DWORD PTR ds:0x6402513c
6401517b:	mov    ds:0x6402e598,eax
64015180:	je     0x64015198
64015182:	cmp    DWORD PTR ds:0x6402e590,0x0
64015189:	je     0x64015198
6401518b:	cmp    DWORD PTR ds:0x6402e594,0x0
64015192:	je     0x64015198
64015194:	test   eax,eax
64015196:	jne    0x640151bc
64015198:	mov    eax,ds:0x64025134
6401519d:	mov    ds:0x6402e590,eax
640151a2:	mov    eax,ds:0x64025140
640151a7:	mov    DWORD PTR ds:0x6402e58c,0x64014dcd
640151b1:	mov    DWORD PTR ds:0x6402e594,esi
640151b7:	mov    ds:0x6402e598,eax
640151bc:	call   DWORD PTR ds:0x64025138
640151c2:	cmp    eax,0xffffffff
640151c5:	mov    ds:0x6402d234,eax
640151ca:	je     0x6401529c
640151d0:	push   DWORD PTR ds:0x6402e590
640151d6:	push   eax
640151d7:	call   esi
640151d9:	test   eax,eax
640151db:	je     0x6401529c
640151e1:	call   0x64016566
640151e6:	push   DWORD PTR ds:0x6402e58c
640151ec:	call   0x64014ce8
640151f1:	push   DWORD PTR ds:0x6402e590
640151f7:	mov    ds:0x6402e58c,eax
640151fc:	call   0x64014ce8
64015201:	push   DWORD PTR ds:0x6402e594
64015207:	mov    ds:0x6402e590,eax
6401520c:	call   0x64014ce8
64015211:	push   DWORD PTR ds:0x6402e598
64015217:	mov    ds:0x6402e594,eax
6401521c:	call   0x64014ce8
64015221:	add    esp,0x10
64015224:	mov    ds:0x6402e598,eax
64015229:	call   0x6401a2c4
6401522e:	test   eax,eax
64015230:	je     0x64015297
64015232:	push   0x64014f93
64015237:	push   DWORD PTR ds:0x6402e58c
6401523d:	call   0x64014d5f
64015242:	pop    ecx
64015243:	call   eax
64015245:	cmp    eax,0xffffffff
64015248:	mov    ds:0x6402d230,eax
6401524d:	je     0x64015297
6401524f:	push   0x214
64015254:	push   0x1
64015256:	call   0x64016180
6401525b:	mov    esi,eax
6401525d:	test   esi,esi
6401525f:	pop    ecx
64015260:	pop    ecx
64015261:	je     0x64015297
64015263:	push   esi
64015264:	push   DWORD PTR ds:0x6402d230
6401526a:	push   DWORD PTR ds:0x6402e594
64015270:	call   0x64014d5f
64015275:	pop    ecx
64015276:	call   eax
64015278:	test   eax,eax
6401527a:	je     0x64015297
6401527c:	push   0x0
6401527e:	push   esi
6401527f:	call   0x64014e45
64015284:	pop    ecx
64015285:	pop    ecx
64015286:	call   DWORD PTR ds:0x64025128
6401528c:	or     DWORD PTR [esi+0x4],0xffffffff
64015290:	mov    DWORD PTR [esi],eax
64015292:	xor    eax,eax
64015294:	inc    eax
64015295:	jmp    0x6401529e
64015297:	call   0x64014e08
6401529c:	xor    eax,eax
6401529e:	pop    esi
6401529f:	pop    edi
640152a0:	ret    
640152a1:	mov    eax,DWORD PTR [esp+0x4]
640152a5:	mov    ds:0x6402e59c,eax
640152aa:	ret    
640152ab:	push   DWORD PTR ds:0x6402e59c
640152b1:	call   0x64014d5f
640152b6:	test   eax,eax
640152b8:	pop    ecx
640152b9:	je     0x640152ca
640152bb:	push   DWORD PTR [esp+0x4]
640152bf:	call   eax
640152c1:	test   eax,eax
640152c3:	pop    ecx
640152c4:	je     0x640152ca
640152c6:	xor    eax,eax
640152c8:	inc    eax
640152c9:	ret    
640152ca:	xor    eax,eax
640152cc:	ret    
640152cd:	mov    DWORD PTR [ecx],0x64025d38
640152d3:	jmp    0x6401272b
640152d8:	push   esi
640152d9:	mov    esi,ecx
640152db:	mov    DWORD PTR [esi],0x64025d38
640152e1:	call   0x6401272b
640152e6:	test   BYTE PTR [esp+0x8],0x1
640152eb:	je     0x640152f4
640152ed:	push   esi
640152ee:	call   0x64012612
640152f3:	pop    ecx
640152f4:	mov    eax,esi
640152f6:	pop    esi
640152f7:	ret    0x4
640152fa:	push   esi
640152fb:	push   edi
640152fc:	mov    edi,DWORD PTR [esp+0xc]
64015300:	mov    eax,DWORD PTR [edi+0x4]
64015303:	test   eax,eax
64015305:	je     0x64015350
64015307:	lea    edx,[eax+0x8]
6401530a:	cmp    BYTE PTR [edx],0x0
6401530d:	je     0x64015350
6401530f:	mov    esi,DWORD PTR [esp+0x10]
64015313:	mov    ecx,DWORD PTR [esi+0x4]
64015316:	cmp    eax,ecx
64015318:	je     0x6401532e
6401531a:	add    ecx,0x8
6401531d:	push   ecx
6401531e:	push   edx
6401531f:	call   0x640147a0
64015324:	test   eax,eax
64015326:	pop    ecx
64015327:	pop    ecx
64015328:	je     0x6401532e
6401532a:	xor    eax,eax
6401532c:	jmp    0x64015353
6401532e:	test   BYTE PTR [esi],0x2
64015331:	je     0x64015338
64015333:	test   BYTE PTR [edi],0x8
64015336:	je     0x6401532a
64015338:	mov    eax,DWORD PTR [esp+0x14]
6401533c:	mov    eax,DWORD PTR [eax]
6401533e:	test   al,0x1
64015340:	je     0x64015347
64015342:	test   BYTE PTR [edi],0x1
64015345:	je     0x6401532a
64015347:	test   al,0x2
64015349:	je     0x64015350
6401534b:	test   BYTE PTR [edi],0x2
6401534e:	je     0x6401532a
64015350:	xor    eax,eax
64015352:	inc    eax
64015353:	pop    edi
64015354:	pop    esi
64015355:	ret    
64015356:	mov    eax,DWORD PTR [esp+0x4]
6401535a:	mov    eax,DWORD PTR [eax]
6401535c:	mov    eax,DWORD PTR [eax]
6401535e:	cmp    eax,0xe0434f4d
64015363:	je     0x6401537d
64015365:	cmp    eax,0xe06d7363
6401536a:	jne    0x64015397
6401536c:	call   0x64014f7b
64015371:	and    DWORD PTR [eax+0x90],0x0
64015378:	jmp    0x64015f57
6401537d:	call   0x64014f7b
64015382:	cmp    DWORD PTR [eax+0x90],0x0
64015389:	jle    0x64015397
6401538b:	call   0x64014f7b
64015390:	add    eax,0x90
64015395:	dec    DWORD PTR [eax]
64015397:	xor    eax,eax
64015399:	ret    
6401539a:	push   0x10
6401539c:	push   0x6402a570
640153a1:	call   0x64014430
640153a6:	mov    edi,DWORD PTR [ebp+0x10]
640153a9:	mov    ebx,DWORD PTR [ebp+0x8]
640153ac:	cmp    DWORD PTR [edi+0x4],0x80
640153b3:	jg     0x640153bb
640153b5:	movsx  esi,BYTE PTR [ebx+0x8]
640153b9:	jmp    0x640153be
640153bb:	mov    esi,DWORD PTR [ebx+0x8]
640153be:	mov    DWORD PTR [ebp-0x1c],esi
640153c1:	call   0x64014f7b
640153c6:	add    eax,0x90
640153cb:	inc    DWORD PTR [eax]
640153cd:	and    DWORD PTR [ebp-0x4],0x0
640153d1:	cmp    esi,DWORD PTR [ebp+0x14]
640153d4:	je     0x6401543b
640153d6:	cmp    esi,0xffffffff
640153d9:	jle    0x640153e0
640153db:	cmp    esi,DWORD PTR [edi+0x4]
640153de:	jl     0x640153e5
640153e0:	call   0x64015fa3
640153e5:	mov    eax,esi
640153e7:	shl    eax,0x3
640153ea:	mov    ecx,DWORD PTR [edi+0x8]
640153ed:	add    ecx,eax
640153ef:	mov    esi,DWORD PTR [ecx]
640153f1:	mov    DWORD PTR [ebp-0x20],esi
640153f4:	mov    DWORD PTR [ebp-0x4],0x1
640153fb:	cmp    DWORD PTR [ecx+0x4],0x0
640153ff:	je     0x64015416
64015401:	mov    DWORD PTR [ebx+0x8],esi
64015404:	push   0x103
64015409:	push   ebx
6401540a:	mov    ecx,DWORD PTR [edi+0x8]
6401540d:	push   DWORD PTR [ecx+eax*1+0x4]
64015411:	call   0x64015ff0
64015416:	and    DWORD PTR [ebp-0x4],0x0
6401541a:	jmp    0x64015436
6401541c:	push   DWORD PTR [ebp-0x14]
6401541f:	call   0x64015356
64015424:	pop    ecx
64015425:	ret    
64015426:	mov    esp,DWORD PTR [ebp-0x18]
64015429:	and    DWORD PTR [ebp-0x4],0x0
6401542d:	mov    edi,DWORD PTR [ebp+0x10]
64015430:	mov    ebx,DWORD PTR [ebp+0x8]
64015433:	mov    esi,DWORD PTR [ebp-0x20]
64015436:	mov    DWORD PTR [ebp-0x1c],esi
64015439:	jmp    0x640153d1
6401543b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015442:	call   0x64015460
64015447:	cmp    esi,DWORD PTR [ebp+0x14]
6401544a:	je     0x64015451
6401544c:	call   0x64015fa3
64015451:	mov    DWORD PTR [ebx+0x8],esi
64015454:	call   0x64014475
64015459:	ret    
6401545a:	mov    ebx,DWORD PTR [ebp+0x8]
6401545d:	mov    esi,DWORD PTR [ebp-0x1c]
64015460:	call   0x64014f7b
64015465:	cmp    DWORD PTR [eax+0x90],0x0
6401546c:	jle    0x6401547a
6401546e:	call   0x64014f7b
64015473:	add    eax,0x90
64015478:	dec    DWORD PTR [eax]
6401547a:	ret    
6401547b:	mov    eax,DWORD PTR [eax]
6401547d:	cmp    DWORD PTR [eax],0xe06d7363
64015483:	jne    0x640154bd
64015485:	cmp    DWORD PTR [eax+0x10],0x3
64015489:	jne    0x640154bd
6401548b:	mov    ecx,DWORD PTR [eax+0x14]
6401548e:	cmp    ecx,0x19930520
64015494:	je     0x640154a6
64015496:	cmp    ecx,0x19930521
6401549c:	je     0x640154a6
6401549e:	cmp    ecx,0x19930522
640154a4:	jne    0x640154bd
640154a6:	cmp    DWORD PTR [eax+0x1c],0x0
640154aa:	jne    0x640154bd
640154ac:	call   0x64014f7b
640154b1:	xor    ecx,ecx
640154b3:	inc    ecx
640154b4:	mov    DWORD PTR [eax+0x20c],ecx
640154ba:	mov    eax,ecx
640154bc:	ret    
640154bd:	xor    eax,eax
640154bf:	ret    
640154c0:	push   0x8
640154c2:	push   0x6402a598
640154c7:	call   0x64014430
640154cc:	mov    ecx,DWORD PTR [ebp+0x8]
640154cf:	test   ecx,ecx
640154d1:	je     0x640154fd
640154d3:	cmp    DWORD PTR [ecx],0xe06d7363
640154d9:	jne    0x640154fd
640154db:	mov    eax,DWORD PTR [ecx+0x1c]
640154de:	test   eax,eax
640154e0:	je     0x640154fd
640154e2:	mov    eax,DWORD PTR [eax+0x4]
640154e5:	test   eax,eax
640154e7:	je     0x640154fd
640154e9:	and    DWORD PTR [ebp-0x4],0x0
640154ed:	push   eax
640154ee:	push   DWORD PTR [ecx+0x18]
640154f1:	call   0x64012ad5
640154f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640154fd:	call   0x64014475
64015502:	ret    
64015503:	xor    eax,eax
64015505:	cmp    BYTE PTR [ebp+0xc],al
64015508:	setne  al
6401550b:	ret    
6401550c:	mov    esp,DWORD PTR [ebp-0x18]
6401550f:	jmp    0x64015f57
64015514:	mov    ecx,DWORD PTR [esp+0x8]
64015518:	mov    eax,DWORD PTR [ecx]
6401551a:	push   esi
6401551b:	mov    esi,DWORD PTR [esp+0x8]
6401551f:	add    eax,esi
64015521:	cmp    DWORD PTR [ecx+0x4],0x0
64015525:	jl     0x64015537
64015527:	mov    edx,DWORD PTR [ecx+0x4]
6401552a:	mov    ecx,DWORD PTR [ecx+0x8]
6401552d:	mov    esi,DWORD PTR [edx+esi*1]
64015530:	mov    ecx,DWORD PTR [esi+ecx*1]
64015533:	add    ecx,edx
64015535:	add    eax,ecx
64015537:	pop    esi
64015538:	ret    
64015539:	push   ebp
6401553a:	mov    ebp,esp
6401553c:	sub    esp,0xc
6401553f:	test   edi,edi
64015541:	jne    0x6401554d
64015543:	call   0x64015fa3
64015548:	jmp    0x64015f57
6401554d:	and    DWORD PTR [ebp-0x8],0x0
64015551:	cmp    DWORD PTR [edi],0x0
64015554:	mov    BYTE PTR [ebp-0x1],0x0
64015558:	jle    0x640155ad
6401555a:	push   ebx
6401555b:	push   esi
6401555c:	mov    eax,DWORD PTR [ebp+0x8]
6401555f:	mov    eax,DWORD PTR [eax+0x1c]
64015562:	mov    eax,DWORD PTR [eax+0xc]
64015565:	mov    ebx,DWORD PTR [eax]
64015567:	test   ebx,ebx
64015569:	lea    esi,[eax+0x4]
6401556c:	jle    0x640155a1
6401556e:	mov    eax,DWORD PTR [ebp-0x8]
64015571:	shl    eax,0x4
64015574:	mov    DWORD PTR [ebp-0xc],eax
64015577:	mov    ecx,DWORD PTR [ebp+0x8]
6401557a:	push   DWORD PTR [ecx+0x1c]
6401557d:	mov    eax,DWORD PTR [esi]
6401557f:	push   eax
64015580:	mov    eax,DWORD PTR [edi+0x4]
64015583:	add    eax,DWORD PTR [ebp-0xc]
64015586:	push   eax
64015587:	call   0x640152fa
6401558c:	add    esp,0xc
6401558f:	test   eax,eax
64015591:	jne    0x6401559d
64015593:	dec    ebx
64015594:	add    esi,0x4
64015597:	test   ebx,ebx
64015599:	jg     0x64015577
6401559b:	jmp    0x640155a1
6401559d:	mov    BYTE PTR [ebp-0x1],0x1
640155a1:	inc    DWORD PTR [ebp-0x8]
640155a4:	mov    eax,DWORD PTR [ebp-0x8]
640155a7:	cmp    eax,DWORD PTR [edi]
640155a9:	jl     0x6401555c
640155ab:	pop    esi
640155ac:	pop    ebx
640155ad:	mov    al,BYTE PTR [ebp-0x1]
640155b0:	leave  
640155b1:	ret    
640155b2:	push   0x4
640155b4:	mov    eax,0x64022803
640155b9:	call   0x640146ee
640155be:	call   0x64014f7b
640155c3:	cmp    DWORD PTR [eax+0x94],0x0
640155ca:	je     0x640155d1
640155cc:	call   0x64015fa3
640155d1:	and    DWORD PTR [ebp-0x4],0x0
640155d5:	call   0x64015f90
640155da:	or     DWORD PTR [ebp-0x4],0xffffffff
640155de:	jmp    0x64015f57
640155e3:	call   0x64014f7b
640155e8:	mov    ecx,DWORD PTR [ebp+0x8]
640155eb:	push   0x0
640155ed:	push   0x0
640155ef:	mov    DWORD PTR [eax+0x94],ecx
640155f5:	call   0x64012a5b
640155fa:	int3   
640155fb:	push   0x2c
640155fd:	push   0x6402a610
64015602:	call   0x64014430
64015607:	mov    ebx,ecx
64015609:	mov    edi,DWORD PTR [ebp+0xc]
6401560c:	mov    esi,DWORD PTR [ebp+0x8]
6401560f:	mov    DWORD PTR [ebp-0x1c],ebx
64015612:	and    DWORD PTR [ebp-0x34],0x0
64015616:	mov    eax,DWORD PTR [edi-0x4]
64015619:	mov    DWORD PTR [ebp-0x24],eax
6401561c:	push   DWORD PTR [esi+0x18]
6401561f:	lea    eax,[ebp-0x3c]
64015622:	push   eax
64015623:	call   0x64012d79
64015628:	pop    ecx
64015629:	pop    ecx
6401562a:	mov    DWORD PTR [ebp-0x28],eax
6401562d:	call   0x64014f7b
64015632:	mov    eax,DWORD PTR [eax+0x88]
64015638:	mov    DWORD PTR [ebp-0x2c],eax
6401563b:	call   0x64014f7b
64015640:	mov    eax,DWORD PTR [eax+0x8c]
64015646:	mov    DWORD PTR [ebp-0x30],eax
64015649:	call   0x64014f7b
6401564e:	mov    DWORD PTR [eax+0x88],esi
64015654:	call   0x64014f7b
64015659:	mov    ecx,DWORD PTR [ebp+0x10]
6401565c:	mov    DWORD PTR [eax+0x8c],ecx
64015662:	and    DWORD PTR [ebp-0x4],0x0
64015666:	xor    eax,eax
64015668:	inc    eax
64015669:	mov    DWORD PTR [ebp+0x10],eax
6401566c:	mov    DWORD PTR [ebp-0x4],eax
6401566f:	push   DWORD PTR [ebp+0x1c]
64015672:	push   DWORD PTR [ebp+0x18]
64015675:	push   ebx
64015676:	push   DWORD PTR [ebp+0x14]
64015679:	push   edi
6401567a:	call   0x64012e0e
6401567f:	add    esp,0x14
64015682:	mov    DWORD PTR [ebp-0x1c],eax
64015685:	and    DWORD PTR [ebp-0x4],0x0
64015689:	jmp    0x640156fa
6401568b:	mov    eax,DWORD PTR [ebp-0x14]
6401568e:	call   0x6401547b
64015693:	ret    
64015694:	mov    esp,DWORD PTR [ebp-0x18]
64015697:	call   0x64014f7b
6401569c:	and    DWORD PTR [eax+0x20c],0x0
640156a3:	mov    esi,DWORD PTR [ebp+0x14]
640156a6:	mov    edi,DWORD PTR [ebp+0xc]
640156a9:	cmp    DWORD PTR [esi+0x4],0x80
640156b0:	jg     0x640156b8
640156b2:	movsx  ecx,BYTE PTR [edi+0x8]
640156b6:	jmp    0x640156bb
640156b8:	mov    ecx,DWORD PTR [edi+0x8]
640156bb:	mov    ebx,DWORD PTR [esi+0x10]
640156be:	and    DWORD PTR [ebp-0x20],0x0
640156c2:	mov    eax,DWORD PTR [ebp-0x20]
640156c5:	cmp    eax,DWORD PTR [esi+0xc]
640156c8:	jae    0x640156e2
640156ca:	imul   eax,eax,0x14
640156cd:	add    eax,ebx
640156cf:	mov    edx,DWORD PTR [eax+0x4]
640156d2:	cmp    ecx,edx
640156d4:	jle    0x64015716
640156d6:	cmp    ecx,DWORD PTR [eax+0x8]
640156d9:	jg     0x64015716
640156db:	mov    eax,DWORD PTR [esi+0x8]
640156de:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
640156e2:	push   ecx
640156e3:	push   esi
640156e4:	push   0x0
640156e6:	push   edi
640156e7:	call   0x6401539a
640156ec:	add    esp,0x10
640156ef:	and    DWORD PTR [ebp-0x1c],0x0
640156f3:	and    DWORD PTR [ebp-0x4],0x0
640156f7:	mov    esi,DWORD PTR [ebp+0x8]
640156fa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015701:	mov    DWORD PTR [ebp+0x10],0x0
64015708:	call   0x64015721
6401570d:	mov    eax,DWORD PTR [ebp-0x1c]
64015710:	call   0x64014475
64015715:	ret    
64015716:	inc    DWORD PTR [ebp-0x20]
64015719:	jmp    0x640156c2
6401571b:	mov    edi,DWORD PTR [ebp+0xc]
6401571e:	mov    esi,DWORD PTR [ebp+0x8]
64015721:	mov    eax,DWORD PTR [ebp-0x24]
64015724:	mov    DWORD PTR [edi-0x4],eax
64015727:	push   DWORD PTR [ebp-0x28]
6401572a:	call   0x64012dc2
6401572f:	pop    ecx
64015730:	call   0x64014f7b
64015735:	mov    ecx,DWORD PTR [ebp-0x2c]
64015738:	mov    DWORD PTR [eax+0x88],ecx
6401573e:	call   0x64014f7b
64015743:	mov    ecx,DWORD PTR [ebp-0x30]
64015746:	mov    DWORD PTR [eax+0x8c],ecx
6401574c:	cmp    DWORD PTR [esi],0xe06d7363
64015752:	jne    0x64015796
64015754:	cmp    DWORD PTR [esi+0x10],0x3
64015758:	jne    0x64015796
6401575a:	mov    eax,DWORD PTR [esi+0x14]
6401575d:	cmp    eax,0x19930520
64015762:	je     0x64015772
64015764:	cmp    eax,0x19930521
64015769:	je     0x64015772
6401576b:	cmp    eax,0x19930522
64015770:	jne    0x64015796
64015772:	cmp    DWORD PTR [ebp-0x34],0x0
64015776:	jne    0x64015796
64015778:	cmp    DWORD PTR [ebp-0x1c],0x0
6401577c:	je     0x64015796
6401577e:	push   DWORD PTR [esi+0x18]
64015781:	call   0x64012da1
64015786:	pop    ecx
64015787:	test   eax,eax
64015789:	je     0x64015796
6401578b:	push   DWORD PTR [ebp+0x10]
6401578e:	push   esi
6401578f:	call   0x640154c0
64015794:	pop    ecx
64015795:	pop    ecx
64015796:	ret    
64015797:	push   0xc
64015799:	push   0x6402a638
6401579e:	call   0x64014430
640157a3:	xor    edx,edx
640157a5:	mov    DWORD PTR [ebp-0x1c],edx
640157a8:	mov    eax,DWORD PTR [ebp+0x10]
640157ab:	mov    ecx,DWORD PTR [eax+0x4]
640157ae:	cmp    ecx,edx
640157b0:	je     0x6401590e
640157b6:	cmp    BYTE PTR [ecx+0x8],dl
640157b9:	je     0x6401590e
640157bf:	mov    ecx,DWORD PTR [eax+0x8]
640157c2:	cmp    ecx,edx
640157c4:	jne    0x640157d2
640157c6:	test   DWORD PTR [eax],0x80000000
640157cc:	je     0x6401590e
640157d2:	mov    eax,DWORD PTR [eax]
640157d4:	mov    esi,DWORD PTR [ebp+0xc]
640157d7:	test   eax,eax
640157d9:	js     0x640157df
640157db:	lea    esi,[ecx+esi*1+0xc]
640157df:	mov    DWORD PTR [ebp-0x4],edx
640157e2:	xor    ebx,ebx
640157e4:	inc    ebx
640157e5:	push   ebx
640157e6:	test   al,0x8
640157e8:	je     0x6401582b
640157ea:	mov    edi,DWORD PTR [ebp+0x8]
640157ed:	push   DWORD PTR [edi+0x18]
640157f0:	call   0x6401b54b
640157f5:	pop    ecx
640157f6:	pop    ecx
640157f7:	test   eax,eax
640157f9:	je     0x640158f1
640157ff:	push   ebx
64015800:	push   esi
64015801:	call   0x6401b54b
64015806:	pop    ecx
64015807:	pop    ecx
64015808:	test   eax,eax
6401580a:	je     0x640158f1
64015810:	mov    eax,DWORD PTR [edi+0x18]
64015813:	mov    DWORD PTR [esi],eax
64015815:	mov    ecx,DWORD PTR [ebp+0x14]
64015818:	add    ecx,0x8
6401581b:	push   ecx
6401581c:	push   eax
6401581d:	call   0x64015514
64015822:	pop    ecx
64015823:	pop    ecx
64015824:	mov    DWORD PTR [esi],eax
64015826:	jmp    0x640158f6
6401582b:	mov    edi,DWORD PTR [ebp+0x14]
6401582e:	mov    eax,DWORD PTR [ebp+0x8]
64015831:	push   DWORD PTR [eax+0x18]
64015834:	test   BYTE PTR [edi],bl
64015836:	je     0x64015880
64015838:	call   0x6401b54b
6401583d:	pop    ecx
6401583e:	pop    ecx
6401583f:	test   eax,eax
64015841:	je     0x640158f1
64015847:	push   ebx
64015848:	push   esi
64015849:	call   0x6401b54b
6401584e:	pop    ecx
6401584f:	pop    ecx
64015850:	test   eax,eax
64015852:	je     0x640158f1
64015858:	push   DWORD PTR [edi+0x14]
6401585b:	mov    eax,DWORD PTR [ebp+0x8]
6401585e:	push   DWORD PTR [eax+0x18]
64015861:	push   esi
64015862:	call   0x64013eb0
64015867:	add    esp,0xc
6401586a:	cmp    DWORD PTR [edi+0x14],0x4
6401586e:	jne    0x640158f6
64015874:	mov    eax,DWORD PTR [esi]
64015876:	test   eax,eax
64015878:	je     0x640158f6
6401587a:	add    edi,0x8
6401587d:	push   edi
6401587e:	jmp    0x6401581c
64015880:	cmp    DWORD PTR [edi+0x18],edx
64015883:	jne    0x640158bd
64015885:	call   0x6401b54b
6401588a:	pop    ecx
6401588b:	pop    ecx
6401588c:	test   eax,eax
6401588e:	je     0x640158f1
64015890:	push   ebx
64015891:	push   esi
64015892:	call   0x6401b54b
64015897:	pop    ecx
64015898:	pop    ecx
64015899:	test   eax,eax
6401589b:	je     0x640158f1
6401589d:	push   DWORD PTR [edi+0x14]
640158a0:	add    edi,0x8
640158a3:	push   edi
640158a4:	mov    eax,DWORD PTR [ebp+0x8]
640158a7:	push   DWORD PTR [eax+0x18]
640158aa:	call   0x64015514
640158af:	pop    ecx
640158b0:	pop    ecx
640158b1:	push   eax
640158b2:	push   esi
640158b3:	call   0x64013eb0
640158b8:	add    esp,0xc
640158bb:	jmp    0x640158f6
640158bd:	call   0x6401b54b
640158c2:	pop    ecx
640158c3:	pop    ecx
640158c4:	test   eax,eax
640158c6:	je     0x640158f1
640158c8:	push   ebx
640158c9:	push   esi
640158ca:	call   0x6401b54b
640158cf:	pop    ecx
640158d0:	pop    ecx
640158d1:	test   eax,eax
640158d3:	je     0x640158f1
640158d5:	push   DWORD PTR [edi+0x18]
640158d8:	call   0x6401b54b
640158dd:	pop    ecx
640158de:	test   eax,eax
640158e0:	je     0x640158f1
640158e2:	test   BYTE PTR [edi],0x4
640158e5:	push   0x0
640158e7:	pop    eax
640158e8:	setne  al
640158eb:	inc    eax
640158ec:	mov    DWORD PTR [ebp-0x1c],eax
640158ef:	jmp    0x640158f6
640158f1:	call   0x64015fa3
640158f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640158fd:	mov    eax,DWORD PTR [ebp-0x1c]
64015900:	jmp    0x64015910
64015902:	xor    eax,eax
64015904:	inc    eax
64015905:	ret    
64015906:	mov    esp,DWORD PTR [ebp-0x18]
64015909:	jmp    0x64015f57
6401590e:	xor    eax,eax
64015910:	call   0x64014475
64015915:	ret    
64015916:	push   0x8
64015918:	push   0x6402a658
6401591d:	call   0x64014430
64015922:	mov    eax,DWORD PTR [ebp+0x10]
64015925:	test   DWORD PTR [eax],0x80000000
6401592b:	je     0x64015932
6401592d:	mov    ebx,DWORD PTR [ebp+0xc]
64015930:	jmp    0x6401593c
64015932:	mov    ecx,DWORD PTR [eax+0x8]
64015935:	mov    edx,DWORD PTR [ebp+0xc]
64015938:	lea    ebx,[ecx+edx*1+0xc]
6401593c:	and    DWORD PTR [ebp-0x4],0x0
64015940:	mov    esi,DWORD PTR [ebp+0x14]
64015943:	push   esi
64015944:	push   eax
64015945:	push   DWORD PTR [ebp+0xc]
64015948:	mov    edi,DWORD PTR [ebp+0x8]
6401594b:	push   edi
6401594c:	call   0x64015797
64015951:	add    esp,0x10
64015954:	dec    eax
64015955:	je     0x64015976
64015957:	dec    eax
64015958:	jne    0x6401598e
6401595a:	push   0x1
6401595c:	lea    eax,[esi+0x8]
6401595f:	push   eax
64015960:	push   DWORD PTR [edi+0x18]
64015963:	call   0x64015514
64015968:	pop    ecx
64015969:	pop    ecx
6401596a:	push   eax
6401596b:	push   DWORD PTR [esi+0x18]
6401596e:	push   ebx
6401596f:	call   0x64012ad5
64015974:	jmp    0x6401598e
64015976:	lea    eax,[esi+0x8]
64015979:	push   eax
6401597a:	push   DWORD PTR [edi+0x18]
6401597d:	call   0x64015514
64015982:	pop    ecx
64015983:	pop    ecx
64015984:	push   eax
64015985:	push   DWORD PTR [esi+0x18]
64015988:	push   ebx
64015989:	call   0x64012ad5
6401598e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015995:	call   0x64014475
6401599a:	ret    
6401599b:	xor    eax,eax
6401599d:	inc    eax
6401599e:	ret    
6401599f:	mov    esp,DWORD PTR [ebp-0x18]
640159a2:	jmp    0x64015f57
640159a7:	push   ebp
640159a8:	mov    ebp,esp
640159aa:	cmp    DWORD PTR [ebp+0x18],0x0
640159ae:	je     0x640159c0
640159b0:	push   DWORD PTR [ebp+0x18]
640159b3:	push   ebx
640159b4:	push   esi
640159b5:	push   DWORD PTR [ebp+0x8]
640159b8:	call   0x64015916
640159bd:	add    esp,0x10
640159c0:	cmp    DWORD PTR [ebp+0x20],0x0
640159c4:	push   DWORD PTR [ebp+0x8]
640159c7:	jne    0x640159cc
640159c9:	push   esi
640159ca:	jmp    0x640159cf
640159cc:	push   DWORD PTR [ebp+0x20]
640159cf:	call   0x64012adc
640159d4:	push   DWORD PTR [edi]
640159d6:	push   DWORD PTR [ebp+0x14]
640159d9:	push   DWORD PTR [ebp+0x10]
640159dc:	push   esi
640159dd:	call   0x6401539a
640159e2:	mov    eax,DWORD PTR [edi+0x4]
640159e5:	push   0x100
640159ea:	push   DWORD PTR [ebp+0x1c]
640159ed:	inc    eax
640159ee:	push   DWORD PTR [ebp+0x14]
640159f1:	mov    DWORD PTR [esi+0x8],eax
640159f4:	push   DWORD PTR [ebp+0xc]
640159f7:	mov    ecx,DWORD PTR [ebx+0xc]
640159fa:	push   esi
640159fb:	push   DWORD PTR [ebp+0x8]
640159fe:	call   0x640155fb
64015a03:	add    esp,0x28
64015a06:	test   eax,eax
64015a08:	je     0x64015a11
64015a0a:	push   esi
64015a0b:	push   eax
64015a0c:	call   0x64012aa5
64015a11:	pop    ebp
64015a12:	ret    
64015a13:	push   ebp
64015a14:	mov    ebp,esp
64015a16:	push   ecx
64015a17:	push   ecx
64015a18:	push   esi
64015a19:	mov    esi,DWORD PTR [ebp+0x8]
64015a1c:	cmp    DWORD PTR [esi],0x80000003
64015a22:	je     0x64015b02
64015a28:	push   edi
64015a29:	call   0x64014f7b
64015a2e:	cmp    DWORD PTR [eax+0x80],0x0
64015a35:	je     0x64015a76
64015a37:	call   0x64014f7b
64015a3c:	lea    edi,[eax+0x80]
64015a42:	call   0x64014d56
64015a47:	cmp    DWORD PTR [edi],eax
64015a49:	je     0x64015a76
64015a4b:	cmp    DWORD PTR [esi],0xe0434f4d
64015a51:	je     0x64015a76
64015a53:	push   DWORD PTR [ebp+0x24]
64015a56:	push   DWORD PTR [ebp+0x20]
64015a59:	push   DWORD PTR [ebp+0x18]
64015a5c:	push   DWORD PTR [ebp+0x14]
64015a5f:	push   DWORD PTR [ebp+0x10]
64015a62:	push   DWORD PTR [ebp+0xc]
64015a65:	push   esi
64015a66:	call   0x64012b94
64015a6b:	add    esp,0x1c
64015a6e:	test   eax,eax
64015a70:	jne    0x64015b01
64015a76:	mov    edi,DWORD PTR [ebp+0x18]
64015a79:	cmp    DWORD PTR [edi+0xc],0x0
64015a7d:	jne    0x64015a84
64015a7f:	call   0x64015fa3
64015a84:	mov    esi,DWORD PTR [ebp+0x1c]
64015a87:	lea    eax,[ebp-0x8]
64015a8a:	push   eax
64015a8b:	lea    eax,[ebp-0x4]
64015a8e:	push   eax
64015a8f:	push   esi
64015a90:	push   DWORD PTR [ebp+0x20]
64015a93:	push   edi
64015a94:	call   0x64012d06
64015a99:	mov    edi,eax
64015a9b:	mov    eax,DWORD PTR [ebp-0x4]
64015a9e:	add    esp,0x14
64015aa1:	cmp    eax,DWORD PTR [ebp-0x8]
64015aa4:	jae    0x64015b01
64015aa6:	push   ebx
64015aa7:	cmp    esi,DWORD PTR [edi]
64015aa9:	jl     0x64015af2
64015aab:	cmp    esi,DWORD PTR [edi+0x4]
64015aae:	jg     0x64015af2
64015ab0:	mov    eax,DWORD PTR [edi+0xc]
64015ab3:	mov    ecx,DWORD PTR [edi+0x10]
64015ab6:	shl    eax,0x4
64015ab9:	add    eax,ecx
64015abb:	mov    ecx,DWORD PTR [eax-0xc]
64015abe:	test   ecx,ecx
64015ac0:	je     0x64015ac8
64015ac2:	cmp    BYTE PTR [ecx+0x8],0x0
64015ac6:	jne    0x64015af2
64015ac8:	lea    ebx,[eax-0x10]
64015acb:	test   BYTE PTR [ebx],0x40
64015ace:	jne    0x64015af2
64015ad0:	push   DWORD PTR [ebp+0x24]
64015ad3:	mov    esi,DWORD PTR [ebp+0xc]
64015ad6:	push   DWORD PTR [ebp+0x20]
64015ad9:	push   0x0
64015adb:	push   DWORD PTR [ebp+0x18]
64015ade:	push   DWORD PTR [ebp+0x14]
64015ae1:	push   DWORD PTR [ebp+0x10]
64015ae4:	push   DWORD PTR [ebp+0x8]
64015ae7:	call   0x640159a7
64015aec:	mov    esi,DWORD PTR [ebp+0x1c]
64015aef:	add    esp,0x1c
64015af2:	inc    DWORD PTR [ebp-0x4]
64015af5:	mov    eax,DWORD PTR [ebp-0x4]
64015af8:	add    edi,0x14
64015afb:	cmp    eax,DWORD PTR [ebp-0x8]
64015afe:	jb     0x64015aa7
64015b00:	pop    ebx
64015b01:	pop    edi
64015b02:	pop    esi
64015b03:	leave  
64015b04:	ret    
64015b05:	push   ebp
64015b06:	mov    ebp,esp
64015b08:	sub    esp,0x2c
64015b0b:	mov    ecx,DWORD PTR [ebp+0xc]
64015b0e:	push   ebx
64015b0f:	mov    ebx,DWORD PTR [ebp+0x18]
64015b12:	mov    eax,DWORD PTR [ebx+0x4]
64015b15:	cmp    eax,0x80
64015b1a:	push   esi
64015b1b:	push   edi
64015b1c:	mov    BYTE PTR [ebp-0x1],0x0
64015b20:	jg     0x64015b28
64015b22:	movsx  ecx,BYTE PTR [ecx+0x8]
64015b26:	jmp    0x64015b2b
64015b28:	mov    ecx,DWORD PTR [ecx+0x8]
64015b2b:	cmp    ecx,0xffffffff
64015b2e:	mov    DWORD PTR [ebp-0x8],ecx
64015b31:	jl     0x64015b37
64015b33:	cmp    ecx,eax
64015b35:	jl     0x64015b3c
64015b37:	call   0x64015fa3
64015b3c:	mov    esi,DWORD PTR [ebp+0x8]
64015b3f:	mov    edi,0xe06d7363
64015b44:	cmp    DWORD PTR [esi],edi
64015b46:	jne    0x64015e17
64015b4c:	cmp    DWORD PTR [esi+0x10],0x3
64015b50:	mov    ebx,0x19930520
64015b55:	jne    0x64015c84
64015b5b:	mov    eax,DWORD PTR [esi+0x14]
64015b5e:	cmp    eax,ebx
64015b60:	je     0x64015b74
64015b62:	cmp    eax,0x19930521
64015b67:	je     0x64015b74
64015b69:	cmp    eax,0x19930522
64015b6e:	jne    0x64015c84
64015b74:	cmp    DWORD PTR [esi+0x1c],0x0
64015b78:	jne    0x64015c84
64015b7e:	call   0x64014f7b
64015b83:	cmp    DWORD PTR [eax+0x88],0x0
64015b8a:	je     0x64015e56
64015b90:	call   0x64014f7b
64015b95:	mov    esi,DWORD PTR [eax+0x88]
64015b9b:	mov    DWORD PTR [ebp+0x8],esi
64015b9e:	call   0x64014f7b
64015ba3:	mov    eax,DWORD PTR [eax+0x8c]
64015ba9:	push   0x1
64015bab:	push   esi
64015bac:	mov    DWORD PTR [ebp+0x10],eax
64015baf:	call   0x6401b54b
64015bb4:	test   eax,eax
64015bb6:	pop    ecx
64015bb7:	pop    ecx
64015bb8:	jne    0x64015bbf
64015bba:	call   0x64015fa3
64015bbf:	cmp    DWORD PTR [esi],edi
64015bc1:	jne    0x64015be9
64015bc3:	cmp    DWORD PTR [esi+0x10],0x3
64015bc7:	jne    0x64015be9
64015bc9:	mov    eax,DWORD PTR [esi+0x14]
64015bcc:	cmp    eax,ebx
64015bce:	je     0x64015bde
64015bd0:	cmp    eax,0x19930521
64015bd5:	je     0x64015bde
64015bd7:	cmp    eax,0x19930522
64015bdc:	jne    0x64015be9
64015bde:	cmp    DWORD PTR [esi+0x1c],0x0
64015be2:	jne    0x64015be9
64015be4:	call   0x64015fa3
64015be9:	call   0x64014f7b
64015bee:	cmp    DWORD PTR [eax+0x94],0x0
64015bf5:	je     0x64015c84
64015bfb:	call   0x64014f7b
64015c00:	mov    edi,DWORD PTR [eax+0x94]
64015c06:	call   0x64014f7b
64015c0b:	push   DWORD PTR [ebp+0x8]
64015c0e:	xor    esi,esi
64015c10:	mov    DWORD PTR [eax+0x94],esi
64015c16:	call   0x64015539
64015c1b:	test   al,al
64015c1d:	pop    ecx
64015c1e:	jne    0x64015c7c
64015c20:	xor    ebx,ebx
64015c22:	cmp    DWORD PTR [edi],ebx
64015c24:	jle    0x64015c43
64015c26:	mov    eax,DWORD PTR [edi+0x4]
64015c29:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
64015c2d:	push   0x6402d23c
64015c32:	call   0x64012641
64015c37:	test   al,al
64015c39:	jne    0x64015c48
64015c3b:	inc    esi
64015c3c:	add    ebx,0x10
64015c3f:	cmp    esi,DWORD PTR [edi]
64015c41:	jl     0x64015c26
64015c43:	jmp    0x64015f57
64015c48:	push   0x1
64015c4a:	push   DWORD PTR [ebp+0x8]
64015c4d:	call   0x640154c0
64015c52:	pop    ecx
64015c53:	pop    ecx
64015c54:	lea    eax,[ebp+0x8]
64015c57:	push   eax
64015c58:	lea    ecx,[ebp-0x2c]
64015c5b:	mov    DWORD PTR [ebp+0x8],0x64025d40
64015c62:	call   0x6401266d
64015c67:	push   0x6402a674
64015c6c:	lea    eax,[ebp-0x2c]
64015c6f:	push   eax
64015c70:	mov    DWORD PTR [ebp-0x2c],0x64025d38
64015c77:	call   0x64012a5b
64015c7c:	mov    esi,DWORD PTR [ebp+0x8]
64015c7f:	mov    edi,0xe06d7363
64015c84:	cmp    DWORD PTR [esi],edi
64015c86:	jne    0x64015e14
64015c8c:	cmp    DWORD PTR [esi+0x10],0x3
64015c90:	jne    0x64015e14
64015c96:	mov    eax,DWORD PTR [esi+0x14]
64015c99:	cmp    eax,ebx
64015c9b:	je     0x64015caf
64015c9d:	cmp    eax,0x19930521
64015ca2:	je     0x64015caf
64015ca4:	cmp    eax,0x19930522
64015ca9:	jne    0x64015e14
64015caf:	mov    edi,DWORD PTR [ebp+0x18]
64015cb2:	cmp    DWORD PTR [edi+0xc],0x0
64015cb6:	jbe    0x64015d7b
64015cbc:	lea    eax,[ebp-0x1c]
64015cbf:	push   eax
64015cc0:	lea    eax,[ebp-0x10]
64015cc3:	push   eax
64015cc4:	push   DWORD PTR [ebp-0x8]
64015cc7:	push   DWORD PTR [ebp+0x20]
64015cca:	push   edi
64015ccb:	call   0x64012d06
64015cd0:	add    esp,0x14
64015cd3:	mov    edi,eax
64015cd5:	mov    eax,DWORD PTR [ebp-0x10]
64015cd8:	cmp    eax,DWORD PTR [ebp-0x1c]
64015cdb:	jae    0x64015d78
64015ce1:	mov    eax,DWORD PTR [ebp-0x8]
64015ce4:	cmp    DWORD PTR [edi],eax
64015ce6:	jg     0x64015d6d
64015cec:	cmp    eax,DWORD PTR [edi+0x4]
64015cef:	jg     0x64015d6d
64015cf1:	mov    eax,DWORD PTR [edi+0x10]
64015cf4:	mov    DWORD PTR [ebp-0xc],eax
64015cf7:	mov    eax,DWORD PTR [edi+0xc]
64015cfa:	test   eax,eax
64015cfc:	mov    DWORD PTR [ebp-0x18],eax
64015cff:	jle    0x64015d6d
64015d01:	mov    eax,DWORD PTR [esi+0x1c]
64015d04:	mov    eax,DWORD PTR [eax+0xc]
64015d07:	lea    ebx,[eax+0x4]
64015d0a:	mov    eax,DWORD PTR [eax]
64015d0c:	test   eax,eax
64015d0e:	mov    DWORD PTR [ebp-0x14],eax
64015d11:	jle    0x64015d36
64015d13:	push   DWORD PTR [esi+0x1c]
64015d16:	mov    eax,DWORD PTR [ebx]
64015d18:	push   eax
64015d19:	push   DWORD PTR [ebp-0xc]
64015d1c:	mov    DWORD PTR [ebp-0x20],eax
64015d1f:	call   0x640152fa
64015d24:	add    esp,0xc
64015d27:	test   eax,eax
64015d29:	jne    0x64015d45
64015d2b:	dec    DWORD PTR [ebp-0x14]
64015d2e:	add    ebx,0x4
64015d31:	cmp    DWORD PTR [ebp-0x14],eax
64015d34:	jg     0x64015d13
64015d36:	dec    DWORD PTR [ebp-0x18]
64015d39:	add    DWORD PTR [ebp-0xc],0x10
64015d3d:	cmp    DWORD PTR [ebp-0x18],0x0
64015d41:	jg     0x64015d01
64015d43:	jmp    0x64015d6d
64015d45:	push   DWORD PTR [ebp+0x24]
64015d48:	mov    ebx,DWORD PTR [ebp-0xc]
64015d4b:	push   DWORD PTR [ebp+0x20]
64015d4e:	mov    BYTE PTR [ebp-0x1],0x1
64015d52:	push   DWORD PTR [ebp-0x20]
64015d55:	push   DWORD PTR [ebp+0x18]
64015d58:	push   DWORD PTR [ebp+0x14]
64015d5b:	push   DWORD PTR [ebp+0x10]
64015d5e:	push   esi
64015d5f:	mov    esi,DWORD PTR [ebp+0xc]
64015d62:	call   0x640159a7
64015d67:	mov    esi,DWORD PTR [ebp+0x8]
64015d6a:	add    esp,0x1c
64015d6d:	inc    DWORD PTR [ebp-0x10]
64015d70:	add    edi,0x14
64015d73:	jmp    0x64015cd5
64015d78:	mov    edi,DWORD PTR [ebp+0x18]
64015d7b:	cmp    BYTE PTR [ebp+0x1c],0x0
64015d7f:	je     0x64015d8b
64015d81:	push   0x1
64015d83:	push   esi
64015d84:	call   0x640154c0
64015d89:	pop    ecx
64015d8a:	pop    ecx
64015d8b:	cmp    BYTE PTR [ebp-0x1],0x0
64015d8f:	jne    0x64015e43
64015d95:	mov    eax,DWORD PTR [edi]
64015d97:	and    eax,0x1fffffff
64015d9c:	cmp    eax,0x19930521
64015da1:	jb     0x64015e43
64015da7:	mov    edi,DWORD PTR [edi+0x1c]
64015daa:	test   edi,edi
64015dac:	je     0x64015e43
64015db2:	push   esi
64015db3:	call   0x64015539
64015db8:	test   al,al
64015dba:	pop    ecx
64015dbb:	jne    0x64015e43
64015dc1:	call   0x64014f7b
64015dc6:	call   0x64014f7b
64015dcb:	call   0x64014f7b
64015dd0:	mov    DWORD PTR [eax+0x88],esi
64015dd6:	call   0x64014f7b
64015ddb:	cmp    DWORD PTR [ebp+0x24],0x0
64015ddf:	mov    ecx,DWORD PTR [ebp+0x10]
64015de2:	mov    DWORD PTR [eax+0x8c],ecx
64015de8:	push   esi
64015de9:	jne    0x64015df0
64015deb:	push   DWORD PTR [ebp+0xc]
64015dee:	jmp    0x64015df3
64015df0:	push   DWORD PTR [ebp+0x24]
64015df3:	call   0x64012adc
64015df8:	mov    esi,DWORD PTR [ebp+0x18]
64015dfb:	push   0xffffffff
64015dfd:	push   esi
64015dfe:	push   DWORD PTR [ebp+0x14]
64015e01:	push   DWORD PTR [ebp+0xc]
64015e04:	call   0x6401539a
64015e09:	add    esp,0x10
64015e0c:	push   DWORD PTR [esi+0x1c]
64015e0f:	call   0x640155b2
64015e14:	mov    ebx,DWORD PTR [ebp+0x18]
64015e17:	cmp    DWORD PTR [ebx+0xc],0x0
64015e1b:	jbe    0x64015e43
64015e1d:	cmp    BYTE PTR [ebp+0x1c],0x0
64015e21:	jne    0x64015c43
64015e27:	push   DWORD PTR [ebp+0x24]
64015e2a:	push   DWORD PTR [ebp+0x20]
64015e2d:	push   DWORD PTR [ebp-0x8]
64015e30:	push   ebx
64015e31:	push   DWORD PTR [ebp+0x14]
64015e34:	push   DWORD PTR [ebp+0x10]
64015e37:	push   DWORD PTR [ebp+0xc]
64015e3a:	push   esi
64015e3b:	call   0x64015a13
64015e40:	add    esp,0x20
64015e43:	call   0x64014f7b
64015e48:	cmp    DWORD PTR [eax+0x94],0x0
64015e4f:	je     0x64015e56
64015e51:	call   0x64015fa3
64015e56:	pop    edi
64015e57:	pop    esi
64015e58:	pop    ebx
64015e59:	leave  
64015e5a:	ret    
64015e5b:	push   esi
64015e5c:	push   DWORD PTR [esp+0x8]
64015e60:	mov    esi,ecx
64015e62:	call   0x640126d3
64015e67:	mov    DWORD PTR [esi],0x64025d38
64015e6d:	mov    eax,esi
64015e6f:	pop    esi
64015e70:	ret    0x4
64015e73:	push   ebp
64015e74:	mov    ebp,esp
64015e76:	push   ebx
64015e77:	push   esi
64015e78:	push   edi
64015e79:	call   0x64014f7b
64015e7e:	cmp    DWORD PTR [eax+0x20c],0x0
64015e85:	mov    eax,DWORD PTR [ebp+0x18]
64015e88:	mov    ecx,DWORD PTR [ebp+0x8]
64015e8b:	mov    edi,0xe06d7363
64015e90:	mov    esi,0x1fffffff
64015e95:	mov    ebx,0x19930522
64015e9a:	jne    0x64015ebc
64015e9c:	mov    edx,DWORD PTR [ecx]
64015e9e:	cmp    edx,edi
64015ea0:	je     0x64015ebc
64015ea2:	cmp    edx,0x80000026
64015ea8:	je     0x64015ebc
64015eaa:	mov    edx,DWORD PTR [eax]
64015eac:	and    edx,esi
64015eae:	cmp    edx,ebx
64015eb0:	jb     0x64015ebc
64015eb2:	test   BYTE PTR [eax+0x20],0x1
64015eb6:	jne    0x64015f4f
64015ebc:	test   BYTE PTR [ecx+0x4],0x66
64015ec0:	je     0x64015ee5
64015ec2:	cmp    DWORD PTR [eax+0x4],0x0
64015ec6:	je     0x64015f4f
64015ecc:	cmp    DWORD PTR [ebp+0x1c],0x0
64015ed0:	jne    0x64015f4f
64015ed2:	push   0xffffffff
64015ed4:	push   eax
64015ed5:	push   DWORD PTR [ebp+0x14]
64015ed8:	push   DWORD PTR [ebp+0xc]
64015edb:	call   0x6401539a
64015ee0:	add    esp,0x10
64015ee3:	jmp    0x64015f4f
64015ee5:	cmp    DWORD PTR [eax+0xc],0x0
64015ee9:	jne    0x64015efd
64015eeb:	mov    edx,DWORD PTR [eax]
64015eed:	and    edx,esi
64015eef:	cmp    edx,0x19930521
64015ef5:	jb     0x64015f4f
64015ef7:	cmp    DWORD PTR [eax+0x1c],0x0
64015efb:	je     0x64015f4f
64015efd:	cmp    DWORD PTR [ecx],edi
64015eff:	jne    0x64015f33
64015f01:	cmp    DWORD PTR [ecx+0x10],0x3
64015f05:	jb     0x64015f33
64015f07:	cmp    DWORD PTR [ecx+0x14],ebx
64015f0a:	jbe    0x64015f33
64015f0c:	mov    edx,DWORD PTR [ecx+0x1c]
64015f0f:	mov    edx,DWORD PTR [edx+0x8]
64015f12:	test   edx,edx
64015f14:	je     0x64015f33
64015f16:	movzx  esi,BYTE PTR [ebp+0x24]
64015f1a:	push   esi
64015f1b:	push   DWORD PTR [ebp+0x20]
64015f1e:	push   DWORD PTR [ebp+0x1c]
64015f21:	push   eax
64015f22:	push   DWORD PTR [ebp+0x14]
64015f25:	push   DWORD PTR [ebp+0x10]
64015f28:	push   DWORD PTR [ebp+0xc]
64015f2b:	push   ecx
64015f2c:	call   edx
64015f2e:	add    esp,0x20
64015f31:	jmp    0x64015f52
64015f33:	push   DWORD PTR [ebp+0x20]
64015f36:	push   DWORD PTR [ebp+0x1c]
64015f39:	push   DWORD PTR [ebp+0x24]
64015f3c:	push   eax
64015f3d:	push   DWORD PTR [ebp+0x14]
64015f40:	push   DWORD PTR [ebp+0x10]
64015f43:	push   DWORD PTR [ebp+0xc]
64015f46:	push   ecx
64015f47:	call   0x64015b05
64015f4c:	add    esp,0x20
64015f4f:	xor    eax,eax
64015f51:	inc    eax
64015f52:	pop    edi
64015f53:	pop    esi
64015f54:	pop    ebx
64015f55:	pop    ebp
64015f56:	ret    
64015f57:	push   0x8
64015f59:	push   0x6402a6b0
64015f5e:	call   0x64014430
64015f63:	call   0x64014f7b
64015f68:	mov    eax,DWORD PTR [eax+0x78]
64015f6b:	test   eax,eax
64015f6d:	je     0x64015f85
64015f6f:	and    DWORD PTR [ebp-0x4],0x0
64015f73:	call   eax
64015f75:	jmp    0x64015f7e
64015f77:	xor    eax,eax
64015f79:	inc    eax
64015f7a:	ret    
64015f7b:	mov    esp,DWORD PTR [ebp-0x18]
64015f7e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015f85:	call   0x6401b558
64015f8a:	call   0x64014475
64015f8f:	ret    
64015f90:	call   0x64014f7b
64015f95:	mov    eax,DWORD PTR [eax+0x7c]
64015f98:	test   eax,eax
64015f9a:	je     0x64015f9e
64015f9c:	call   eax
64015f9e:	jmp    0x64015f57
64015fa3:	push   0x8
64015fa5:	push   0x6402a6d0
64015faa:	call   0x64014430
64015faf:	push   DWORD PTR ds:0x6402e5a0
64015fb5:	call   0x64014d5f
64015fba:	pop    ecx
64015fbb:	test   eax,eax
64015fbd:	je     0x64015fd5
64015fbf:	and    DWORD PTR [ebp-0x4],0x0
64015fc3:	call   eax
64015fc5:	jmp    0x64015fce
64015fc7:	xor    eax,eax
64015fc9:	inc    eax
64015fca:	ret    
64015fcb:	mov    esp,DWORD PTR [ebp-0x18]
64015fce:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015fd5:	jmp    0x64015f57
64015fda:	push   0x64015f57
64015fdf:	call   0x64014ce8
64015fe4:	pop    ecx
64015fe5:	mov    ds:0x6402e5a0,eax
64015fea:	ret    
64015feb:	int3   
64015fec:	int3   
64015fed:	int3   
64015fee:	int3   
64015fef:	int3   
64015ff0:	push   ebp
64015ff1:	mov    ebp,esp
64015ff3:	sub    esp,0x4
64015ff6:	push   ebx
64015ff7:	push   ecx
64015ff8:	mov    eax,DWORD PTR [ebp+0xc]
64015ffb:	add    eax,0xc
64015ffe:	mov    DWORD PTR [ebp-0x4],eax
64016001:	mov    eax,DWORD PTR [ebp+0x8]
64016004:	push   ebp
64016005:	push   DWORD PTR [ebp+0x10]
64016008:	mov    ecx,DWORD PTR [ebp+0x10]
6401600b:	mov    ebp,DWORD PTR [ebp-0x4]
6401600e:	call   0x6401b758
64016013:	push   esi
64016014:	push   edi
64016015:	call   eax
64016017:	pop    edi
64016018:	pop    esi
64016019:	mov    ebx,ebp
6401601b:	pop    ebp
6401601c:	mov    ecx,DWORD PTR [ebp+0x10]
6401601f:	push   ebp
64016020:	mov    ebp,ebx
64016022:	cmp    ecx,0x100
64016028:	jne    0x6401602f
6401602a:	mov    ecx,0x2
6401602f:	push   ecx
64016030:	call   0x6401b758
64016035:	pop    ebp
64016036:	pop    ecx
64016037:	pop    ebx
64016038:	leave  
64016039:	ret    0xc
6401603c:	push   ebp
6401603d:	mov    ebp,esp
6401603f:	sub    esp,0x328
64016045:	mov    ds:0x6402e6b0,eax
6401604a:	mov    DWORD PTR ds:0x6402e6ac,ecx
64016050:	mov    DWORD PTR ds:0x6402e6a8,edx
64016056:	mov    DWORD PTR ds:0x6402e6a4,ebx
6401605c:	mov    DWORD PTR ds:0x6402e6a0,esi
64016062:	mov    DWORD PTR ds:0x6402e69c,edi
64016068:	data16 mov WORD PTR ds:0x6402e6c8,ss
6401606f:	data16 mov WORD PTR ds:0x6402e6bc,cs
64016076:	data16 mov WORD PTR ds:0x6402e698,ds
6401607d:	data16 mov WORD PTR ds:0x6402e694,es
64016084:	data16 mov WORD PTR ds:0x6402e690,fs
6401608b:	data16 mov WORD PTR ds:0x6402e68c,gs
64016092:	pushf  
64016093:	pop    DWORD PTR ds:0x6402e6c0
64016099:	mov    eax,DWORD PTR [ebp+0x0]
6401609c:	mov    ds:0x6402e6b4,eax
640160a1:	mov    eax,DWORD PTR [ebp+0x4]
640160a4:	mov    ds:0x6402e6b8,eax
640160a9:	lea    eax,[ebp+0x8]
640160ac:	mov    ds:0x6402e6c4,eax
640160b1:	mov    eax,DWORD PTR [ebp-0x320]
640160b7:	mov    DWORD PTR ds:0x6402e600,0x10001
640160c1:	mov    eax,ds:0x6402e6b8
640160c6:	mov    ds:0x6402e5b4,eax
640160cb:	mov    DWORD PTR ds:0x6402e5a8,0xc0000409
640160d5:	mov    DWORD PTR ds:0x6402e5ac,0x1
640160df:	mov    eax,ds:0x6402d09c
640160e4:	mov    DWORD PTR [ebp-0x328],eax
640160ea:	mov    eax,ds:0x6402d0a0
640160ef:	mov    DWORD PTR [ebp-0x324],eax
640160f5:	call   DWORD PTR ds:0x64025120
640160fb:	mov    ds:0x6402e5f8,eax
64016100:	push   0x1
64016102:	call   0x64014c74
64016107:	pop    ecx
64016108:	push   0x0
6401610a:	call   DWORD PTR ds:0x6402511c
64016110:	push   0x64025d50
64016115:	call   DWORD PTR ds:0x64025118
6401611b:	cmp    DWORD PTR ds:0x6402e5f8,0x0
64016122:	jne    0x6401612c
64016124:	push   0x1
64016126:	call   0x64014c74
6401612b:	pop    ecx
6401612c:	push   0xc0000409
64016131:	call   DWORD PTR ds:0x64025048
64016137:	push   eax
64016138:	call   DWORD PTR ds:0x64025114
6401613e:	leave  
6401613f:	ret    
64016140:	push   esi
64016141:	push   edi
64016142:	xor    esi,esi
64016144:	push   DWORD PTR [esp+0xc]
64016148:	call   0x64013de3
6401614d:	mov    edi,eax
6401614f:	test   edi,edi
64016151:	pop    ecx
64016152:	jne    0x6401617b
64016154:	cmp    DWORD PTR ds:0x6402e8cc,eax
6401615a:	jbe    0x6401617b
6401615c:	push   esi
6401615d:	call   DWORD PTR ds:0x64025050
64016163:	lea    eax,[esi+0x3e8]
64016169:	cmp    eax,DWORD PTR ds:0x6402e8cc
6401616f:	jbe    0x64016174
64016171:	or     eax,0xffffffff
64016174:	cmp    eax,0xffffffff
64016177:	mov    esi,eax
64016179:	jne    0x64016144
6401617b:	mov    eax,edi
6401617d:	pop    edi
6401617e:	pop    esi
6401617f:	ret    
64016180:	push   esi
64016181:	push   edi
64016182:	xor    esi,esi
64016184:	push   0x0
64016186:	push   DWORD PTR [esp+0x14]
6401618a:	push   DWORD PTR [esp+0x14]
6401618e:	call   0x6401b783
64016193:	mov    edi,eax
64016195:	add    esp,0xc
64016198:	test   edi,edi
6401619a:	jne    0x640161c3
6401619c:	cmp    DWORD PTR ds:0x6402e8cc,eax
640161a2:	jbe    0x640161c3
640161a4:	push   esi
640161a5:	call   DWORD PTR ds:0x64025050
640161ab:	lea    eax,[esi+0x3e8]
640161b1:	cmp    eax,DWORD PTR ds:0x6402e8cc
640161b7:	jbe    0x640161bc
640161b9:	or     eax,0xffffffff
640161bc:	cmp    eax,0xffffffff
640161bf:	mov    esi,eax
640161c1:	jne    0x64016184
640161c3:	mov    eax,edi
640161c5:	pop    edi
640161c6:	pop    esi
640161c7:	ret    
640161c8:	push   esi
640161c9:	push   edi
640161ca:	xor    esi,esi
640161cc:	push   DWORD PTR [esp+0x10]
640161d0:	push   DWORD PTR [esp+0x10]
640161d4:	call   0x64014215
640161d9:	mov    edi,eax
640161db:	test   edi,edi
640161dd:	pop    ecx
640161de:	pop    ecx
640161df:	jne    0x6401620e
640161e1:	cmp    DWORD PTR [esp+0x10],eax
640161e5:	je     0x6401620e
640161e7:	cmp    DWORD PTR ds:0x6402e8cc,eax
640161ed:	jbe    0x6401620e
640161ef:	push   esi
640161f0:	call   DWORD PTR ds:0x64025050
640161f6:	lea    eax,[esi+0x3e8]
640161fc:	cmp    eax,DWORD PTR ds:0x6402e8cc
64016202:	jbe    0x64016207
64016204:	or     eax,0xffffffff
64016207:	cmp    eax,0xffffffff
6401620a:	mov    esi,eax
6401620c:	jne    0x640161cc
6401620e:	mov    eax,edi
64016210:	pop    edi
64016211:	pop    esi
64016212:	ret    
64016213:	push   0x10
64016215:	push   0x6402a6f0
6401621a:	call   0x64014430
6401621f:	xor    eax,eax
64016221:	mov    ebx,DWORD PTR [ebp+0x8]
64016224:	xor    edi,edi
64016226:	cmp    ebx,edi
64016228:	setne  al
6401622b:	cmp    eax,edi
6401622d:	jne    0x6401624c
6401622f:	call   0x64014c30
64016234:	mov    DWORD PTR [eax],0x16
6401623a:	push   edi
6401623b:	push   edi
6401623c:	push   edi
6401623d:	push   edi
6401623e:	push   edi
6401623f:	call   0x640129a4
64016244:	add    esp,0x14
64016247:	or     eax,0xffffffff
6401624a:	jmp    0x6401629f
6401624c:	cmp    DWORD PTR ds:0x640324dc,0x3
64016253:	jne    0x6401628d
64016255:	push   0x4
64016257:	call   0x6401a43a
6401625c:	pop    ecx
6401625d:	mov    DWORD PTR [ebp-0x4],edi
64016260:	push   ebx
64016261:	call   0x6401a4b3
64016266:	pop    ecx
64016267:	mov    DWORD PTR [ebp-0x20],eax
6401626a:	cmp    eax,edi
6401626c:	je     0x64016279
6401626e:	mov    esi,DWORD PTR [ebx-0x4]
64016271:	sub    esi,0x9
64016274:	mov    DWORD PTR [ebp-0x1c],esi
64016277:	jmp    0x6401627c
64016279:	mov    esi,DWORD PTR [ebp-0x1c]
6401627c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016283:	call   0x640162ad
64016288:	cmp    DWORD PTR [ebp-0x20],edi
6401628b:	jne    0x6401629d
6401628d:	push   ebx
6401628e:	push   edi
6401628f:	push   DWORD PTR ds:0x6402ea6c
64016295:	call   DWORD PTR ds:0x6402510c
6401629b:	mov    esi,eax
6401629d:	mov    eax,esi
6401629f:	call   0x64014475
640162a4:	ret    
640162a5:	xor    edi,edi
640162a7:	mov    ebx,DWORD PTR [ebp+0x8]
640162aa:	mov    esi,DWORD PTR [ebp-0x1c]
640162ad:	push   0x4
640162af:	call   0x6401a362
640162b4:	pop    ecx
640162b5:	ret    
640162b6:	call   0x6401b10c
640162bb:	push   DWORD PTR [esp+0x4]
640162bf:	call   0x6401af6c
640162c4:	push   DWORD PTR ds:0x6402d260
640162ca:	call   0x64014d5f
640162cf:	push   0xff
640162d4:	call   eax
640162d6:	add    esp,0xc
640162d9:	ret    
640162da:	push   0x64025d68
640162df:	call   DWORD PTR ds:0x64025130
640162e5:	test   eax,eax
640162e7:	je     0x640162ff
640162e9:	push   0x64025d58
640162ee:	push   eax
640162ef:	call   DWORD PTR ds:0x64025014
640162f5:	test   eax,eax
640162f7:	je     0x640162ff
640162f9:	push   DWORD PTR [esp+0x4]
640162fd:	call   eax
640162ff:	ret    
64016300:	push   DWORD PTR [esp+0x4]
64016304:	call   0x640162da
64016309:	pop    ecx
6401630a:	push   DWORD PTR [esp+0x4]
6401630e:	call   DWORD PTR ds:0x64025144
64016314:	int3   
64016315:	push   0x8
64016317:	call   0x6401a43a
6401631c:	pop    ecx
6401631d:	ret    
6401631e:	push   0x8
64016320:	call   0x6401a362
64016325:	pop    ecx
64016326:	ret    
64016327:	push   esi
64016328:	mov    esi,eax
6401632a:	jmp    0x64016337
6401632c:	mov    eax,DWORD PTR [esi]
6401632e:	test   eax,eax
64016330:	je     0x64016334
64016332:	call   eax
64016334:	add    esi,0x4
64016337:	cmp    esi,DWORD PTR [esp+0x8]
6401633b:	jb     0x6401632c
6401633d:	pop    esi
6401633e:	ret    
6401633f:	push   esi
64016340:	mov    esi,DWORD PTR [esp+0x8]
64016344:	xor    eax,eax
64016346:	jmp    0x64016357
64016348:	test   eax,eax
6401634a:	jne    0x6401635d
6401634c:	mov    ecx,DWORD PTR [esi]
6401634e:	test   ecx,ecx
64016350:	je     0x64016354
64016352:	call   ecx
64016354:	add    esi,0x4
64016357:	cmp    esi,DWORD PTR [esp+0xc]
6401635b:	jb     0x64016348
6401635d:	pop    esi
6401635e:	ret    
6401635f:	mov    ecx,DWORD PTR [esp+0x4]
64016363:	push   esi
64016364:	xor    esi,esi
64016366:	cmp    ecx,esi
64016368:	jne    0x64016387
6401636a:	call   0x64014c30
6401636f:	push   esi
64016370:	push   esi
64016371:	push   esi
64016372:	push   esi
64016373:	push   esi
64016374:	mov    DWORD PTR [eax],0x16
6401637a:	call   0x640129a4
6401637f:	add    esp,0x14
64016382:	push   0x16
64016384:	pop    eax
64016385:	pop    esi
64016386:	ret    
64016387:	mov    eax,ds:0x6402e8d4
6401638c:	cmp    eax,esi
6401638e:	je     0x6401636a
64016390:	mov    DWORD PTR [ecx],eax
64016392:	xor    eax,eax
64016394:	pop    esi
64016395:	ret    
64016396:	mov    eax,DWORD PTR [esp+0x4]
6401639a:	push   esi
6401639b:	xor    esi,esi
6401639d:	cmp    eax,esi
6401639f:	jne    0x640163be
640163a1:	call   0x64014c30
640163a6:	push   esi
640163a7:	push   esi
640163a8:	push   esi
640163a9:	push   esi
640163aa:	push   esi
640163ab:	mov    DWORD PTR [eax],0x16
640163b1:	call   0x640129a4
640163b6:	add    esp,0x14
640163b9:	push   0x16
640163bb:	pop    eax
640163bc:	pop    esi
640163bd:	ret    
640163be:	cmp    DWORD PTR ds:0x6402e8d4,esi
640163c4:	je     0x640163a1
640163c6:	mov    ecx,DWORD PTR ds:0x6402e8e0
640163cc:	mov    DWORD PTR [eax],ecx
640163ce:	xor    eax,eax
640163d0:	pop    esi
640163d1:	ret    
640163d2:	cmp    DWORD PTR ds:0x640275dc,0x0
640163d9:	je     0x640163f5
640163db:	push   0x640275dc
640163e0:	call   0x6401b490
640163e5:	test   eax,eax
640163e7:	pop    ecx
640163e8:	je     0x640163f5
640163ea:	push   DWORD PTR [esp+0x4]
640163ee:	call   DWORD PTR ds:0x640275dc
640163f4:	pop    ecx
640163f5:	call   0x6401b8a1
640163fa:	push   0x640252c4
640163ff:	push   0x640252ac
64016404:	call   0x6401633f
64016409:	test   eax,eax
6401640b:	pop    ecx
6401640c:	pop    ecx
6401640d:	jne    0x64016463
6401640f:	push   esi
64016410:	push   edi
64016411:	push   0x64018eb0
64016416:	call   0x64012f9f
6401641b:	mov    esi,0x640251ec
64016420:	mov    eax,esi
64016422:	mov    edi,0x640252a8
64016427:	cmp    eax,edi
64016429:	pop    ecx
6401642a:	jae    0x6401643b
6401642c:	mov    eax,DWORD PTR [esi]
6401642e:	test   eax,eax
64016430:	je     0x64016434
64016432:	call   eax
64016434:	add    esi,0x4
64016437:	cmp    esi,edi
64016439:	jb     0x6401642c
6401643b:	cmp    DWORD PTR ds:0x64032618,0x0
64016442:	pop    edi
64016443:	pop    esi
64016444:	je     0x64016461
64016446:	push   0x64032618
6401644b:	call   0x6401b490
64016450:	test   eax,eax
64016452:	pop    ecx
64016453:	je     0x64016461
64016455:	push   0x0
64016457:	push   0x2
64016459:	push   0x0
6401645b:	call   DWORD PTR ds:0x64032618
64016461:	xor    eax,eax
64016463:	ret    
64016464:	push   0x10
64016466:	push   0x6402a710
6401646b:	call   0x64014430
64016470:	push   0x8
64016472:	call   0x6401a43a
64016477:	pop    ecx
64016478:	xor    edi,edi
6401647a:	mov    DWORD PTR [ebp-0x4],edi
6401647d:	xor    ebx,ebx
6401647f:	inc    ebx
64016480:	cmp    DWORD PTR ds:0x6402e914,ebx
64016486:	je     0x64016506
64016488:	mov    DWORD PTR ds:0x6402e910,ebx
6401648e:	mov    al,BYTE PTR [ebp+0x10]
64016491:	mov    ds:0x6402e90c,al
64016496:	cmp    DWORD PTR [ebp+0xc],edi
64016499:	jne    0x640164f6
6401649b:	push   DWORD PTR ds:0x64032610
640164a1:	call   0x64014d5f
640164a6:	mov    DWORD PTR [ebp-0x1c],eax
640164a9:	push   DWORD PTR ds:0x6403260c
640164af:	call   0x64014d5f
640164b4:	pop    ecx
640164b5:	pop    ecx
640164b6:	mov    esi,eax
640164b8:	mov    DWORD PTR [ebp-0x20],esi
640164bb:	cmp    DWORD PTR [ebp-0x1c],edi
640164be:	je     0x640164e6
640164c0:	sub    esi,0x4
640164c3:	mov    DWORD PTR [ebp-0x20],esi
640164c6:	cmp    esi,DWORD PTR [ebp-0x1c]
640164c9:	jb     0x640164e6
640164cb:	cmp    DWORD PTR [esi],0x0
640164ce:	je     0x640164c0
640164d0:	mov    edi,DWORD PTR [esi]
640164d2:	call   0x64014d56
640164d7:	cmp    edi,eax
640164d9:	je     0x640164c0
640164db:	push   edi
640164dc:	call   0x64014d5f
640164e1:	pop    ecx
640164e2:	call   eax
640164e4:	jmp    0x640164c0
640164e6:	push   0x640252d4
640164eb:	mov    eax,0x640252c8
640164f0:	call   0x64016327
640164f5:	pop    ecx
640164f6:	push   0x640252dc
640164fb:	mov    eax,0x640252d8
64016500:	call   0x64016327
64016505:	pop    ecx
64016506:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401650d:	call   0x64016531
64016512:	cmp    DWORD PTR [ebp+0x10],0x0
64016516:	jne    0x64016540
64016518:	mov    DWORD PTR ds:0x6402e914,ebx
6401651e:	push   0x8
64016520:	call   0x6401a362
64016525:	pop    ecx
64016526:	push   DWORD PTR [ebp+0x8]
64016529:	call   0x64016300
6401652e:	xor    ebx,ebx
64016530:	inc    ebx
64016531:	cmp    DWORD PTR [ebp+0x10],0x0
64016535:	je     0x6401653f
64016537:	push   0x8
64016539:	call   0x6401a362
6401653e:	pop    ecx
6401653f:	ret    
64016540:	call   0x64014475
64016545:	ret    
64016546:	push   0x0
64016548:	push   0x1
6401654a:	push   DWORD PTR [esp+0xc]
6401654e:	call   0x64016464
64016553:	add    esp,0xc
64016556:	ret    
64016557:	push   0x1
64016559:	push   0x0
6401655b:	push   0x0
6401655d:	call   0x64016464
64016562:	add    esp,0xc
64016565:	ret    
64016566:	push   esi
64016567:	call   0x64014d56
6401656c:	mov    esi,eax
6401656e:	push   esi
6401656f:	call   0x640152a1
64016574:	push   esi
64016575:	call   0x6401bade
6401657a:	push   esi
6401657b:	call   0x6401289e
64016580:	push   esi
64016581:	call   0x6401bad4
64016586:	push   esi
64016587:	call   0x6401baca
6401658c:	push   esi
6401658d:	call   0x6401b8c0
64016592:	push   esi
64016593:	call   0x6401f2f7
64016598:	push   esi
64016599:	call   0x64015fda
6401659e:	push   0x64016546
640165a3:	call   0x64014ce8
640165a8:	add    esp,0x24
640165ab:	mov    ds:0x6402d260,eax
640165b0:	pop    esi
640165b1:	ret    
640165b2:	sub    eax,0x3a4
640165b7:	je     0x640165db
640165b9:	sub    eax,0x4
640165bc:	je     0x640165d5
640165be:	sub    eax,0xd
640165c1:	je     0x640165cf
640165c3:	dec    eax
640165c4:	je     0x640165c9
640165c6:	xor    eax,eax
640165c8:	ret    
640165c9:	mov    eax,0x404
640165ce:	ret    
640165cf:	mov    eax,0x412
640165d4:	ret    
640165d5:	mov    eax,0x804
640165da:	ret    
640165db:	mov    eax,0x411
640165e0:	ret    
640165e1:	push   ebx
640165e2:	push   ebp
640165e3:	push   esi
640165e4:	push   edi
640165e5:	mov    ebp,0x101
640165ea:	mov    esi,eax
640165ec:	push   ebp
640165ed:	xor    edi,edi
640165ef:	lea    ebx,[esi+0x1c]
640165f2:	push   edi
640165f3:	push   ebx
640165f4:	call   0x64013570
640165f9:	mov    DWORD PTR [esi+0x4],edi
640165fc:	mov    DWORD PTR [esi+0x8],edi
640165ff:	mov    DWORD PTR [esi+0xc],edi
64016602:	xor    eax,eax
64016604:	lea    edi,[esi+0x10]
64016607:	stos   DWORD PTR es:[edi],eax
64016608:	stos   DWORD PTR es:[edi],eax
64016609:	stos   DWORD PTR es:[edi],eax
6401660a:	mov    eax,0x6402d268
6401660f:	add    esp,0xc
64016612:	sub    eax,esi
64016614:	mov    cl,BYTE PTR [eax+ebx*1]
64016617:	mov    BYTE PTR [ebx],cl
64016619:	inc    ebx
6401661a:	dec    ebp
6401661b:	jne    0x64016614
6401661d:	lea    ecx,[esi+0x11d]
64016623:	mov    esi,0x100
64016628:	mov    dl,BYTE PTR [ecx+eax*1]
6401662b:	mov    BYTE PTR [ecx],dl
6401662d:	inc    ecx
6401662e:	dec    esi
6401662f:	jne    0x64016628
64016631:	pop    edi
64016632:	pop    esi
64016633:	pop    ebp
64016634:	pop    ebx
64016635:	ret    
64016636:	push   ebp
64016637:	lea    ebp,[esp-0x49c]
6401663e:	sub    esp,0x51c
64016644:	mov    eax,ds:0x6402d09c
64016649:	xor    eax,ebp
6401664b:	mov    DWORD PTR [ebp+0x498],eax
64016651:	push   ebx
64016652:	push   edi
64016653:	lea    eax,[ebp-0x7c]
64016656:	push   eax
64016657:	push   DWORD PTR [esi+0x4]
6401665a:	call   DWORD PTR ds:0x64025148
64016660:	test   eax,eax
64016662:	mov    edi,0x100
64016667:	je     0x6401675c
6401666d:	xor    eax,eax
6401666f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64016676:	inc    eax
64016677:	cmp    eax,edi
64016679:	jb     0x6401666f
6401667b:	mov    al,BYTE PTR [ebp-0x76]
6401667e:	test   al,al
64016680:	mov    BYTE PTR [ebp+0x398],0x20
64016687:	je     0x640166b4
64016689:	lea    ebx,[ebp-0x75]
6401668c:	movzx  ecx,al
6401668f:	movzx  eax,BYTE PTR [ebx]
64016692:	cmp    ecx,eax
64016694:	ja     0x640166ac
64016696:	sub    eax,ecx
64016698:	inc    eax
64016699:	push   eax
6401669a:	lea    edx,[ebp+ecx*1+0x398]
640166a1:	push   0x20
640166a3:	push   edx
640166a4:	call   0x64013570
640166a9:	add    esp,0xc
640166ac:	inc    ebx
640166ad:	mov    al,BYTE PTR [ebx]
640166af:	inc    ebx
640166b0:	test   al,al
640166b2:	jne    0x6401668c
640166b4:	push   0x0
640166b6:	push   DWORD PTR [esi+0xc]
640166b9:	lea    eax,[ebp-0x68]
640166bc:	push   DWORD PTR [esi+0x4]
640166bf:	push   eax
640166c0:	push   edi
640166c1:	lea    eax,[ebp+0x398]
640166c7:	push   eax
640166c8:	push   0x1
640166ca:	push   0x0
640166cc:	call   0x6401bd75
640166d1:	xor    ebx,ebx
640166d3:	push   ebx
640166d4:	push   DWORD PTR [esi+0x4]
640166d7:	lea    eax,[ebp+0x298]
640166dd:	push   edi
640166de:	push   eax
640166df:	push   edi
640166e0:	lea    eax,[ebp+0x398]
640166e6:	push   eax
640166e7:	push   edi
640166e8:	push   DWORD PTR [esi+0xc]
640166eb:	push   ebx
640166ec:	call   0x6401a23d
640166f1:	add    esp,0x44
640166f4:	push   ebx
640166f5:	push   DWORD PTR [esi+0x4]
640166f8:	lea    eax,[ebp+0x198]
640166fe:	push   edi
640166ff:	push   eax
64016700:	push   edi
64016701:	lea    eax,[ebp+0x398]
64016707:	push   eax
64016708:	push   0x200
6401670d:	push   DWORD PTR [esi+0xc]
64016710:	push   ebx
64016711:	call   0x6401a23d
64016716:	add    esp,0x24
64016719:	xor    eax,eax
6401671b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64016720:	test   cl,0x1
64016723:	je     0x64016733
64016725:	or     BYTE PTR [esi+eax*1+0x1d],0x10
6401672a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64016731:	jmp    0x64016744
64016733:	test   cl,0x2
64016736:	je     0x6401674d
64016738:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6401673d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64016744:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6401674b:	jmp    0x64016755
6401674d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64016755:	inc    eax
64016756:	cmp    eax,edi
64016758:	jb     0x6401671b
6401675a:	jmp    0x640167a9
6401675c:	lea    eax,[esi+0x11d]
64016762:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64016769:	xor    ecx,ecx
6401676b:	sub    DWORD PTR [ebp-0x80],eax
6401676e:	mov    edx,DWORD PTR [ebp-0x80]
64016771:	lea    eax,[esi+ecx*1+0x11d]
64016778:	add    edx,eax
6401677a:	lea    ebx,[edx+0x20]
6401677d:	cmp    ebx,0x19
64016780:	ja     0x6401678e
64016782:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64016787:	mov    dl,cl
64016789:	add    dl,0x20
6401678c:	jmp    0x6401679d
6401678e:	cmp    edx,0x19
64016791:	ja     0x640167a1
64016793:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64016798:	mov    dl,cl
6401679a:	sub    dl,0x20
6401679d:	mov    BYTE PTR [eax],dl
6401679f:	jmp    0x640167a4
640167a1:	mov    BYTE PTR [eax],0x0
640167a4:	inc    ecx
640167a5:	cmp    ecx,edi
640167a7:	jb     0x6401676e
640167a9:	mov    ecx,DWORD PTR [ebp+0x498]
640167af:	pop    edi
640167b0:	xor    ecx,ebp
640167b2:	pop    ebx
640167b3:	call   0x64012e6c
640167b8:	add    ebp,0x49c
640167be:	leave  
640167bf:	ret    
640167c0:	push   0xc
640167c2:	push   0x6402a730
640167c7:	call   0x64014430
640167cc:	call   0x64014f7b
640167d1:	mov    edi,eax
640167d3:	mov    eax,ds:0x6402d78c
640167d8:	test   DWORD PTR [edi+0x70],eax
640167db:	je     0x640167fa
640167dd:	cmp    DWORD PTR [edi+0x6c],0x0
640167e1:	je     0x640167fa
640167e3:	mov    esi,DWORD PTR [edi+0x68]
640167e6:	test   esi,esi
640167e8:	jne    0x640167f2
640167ea:	push   0x20
640167ec:	call   0x640162b6
640167f1:	pop    ecx
640167f2:	mov    eax,esi
640167f4:	call   0x64014475
640167f9:	ret    
640167fa:	push   0xd
640167fc:	call   0x6401a43a
64016801:	pop    ecx
64016802:	and    DWORD PTR [ebp-0x4],0x0
64016806:	mov    esi,DWORD PTR [edi+0x68]
64016809:	mov    DWORD PTR [ebp-0x1c],esi
6401680c:	cmp    esi,DWORD PTR ds:0x6402d690
64016812:	je     0x6401684a
64016814:	test   esi,esi
64016816:	je     0x64016832
64016818:	push   esi
64016819:	call   DWORD PTR ds:0x64025094
6401681f:	test   eax,eax
64016821:	jne    0x64016832
64016823:	cmp    esi,0x6402d268
64016829:	je     0x64016832
6401682b:	push   esi
6401682c:	call   0x64013d06
64016831:	pop    ecx
64016832:	mov    eax,ds:0x6402d690
64016837:	mov    DWORD PTR [edi+0x68],eax
6401683a:	mov    esi,DWORD PTR ds:0x6402d690
64016840:	mov    DWORD PTR [ebp-0x1c],esi
64016843:	push   esi
64016844:	call   DWORD PTR ds:0x64025020
6401684a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016851:	call   0x6401685b
64016856:	jmp    0x640167e6
64016858:	mov    esi,DWORD PTR [ebp-0x1c]
6401685b:	push   0xd
6401685d:	call   0x6401a362
64016862:	pop    ecx
64016863:	ret    
64016864:	push   ebp
64016865:	mov    ebp,esp
64016867:	sub    esp,0x10
6401686a:	push   ebx
6401686b:	xor    ebx,ebx
6401686d:	push   ebx
6401686e:	lea    ecx,[ebp-0x10]
64016871:	call   0x6401300f
64016876:	cmp    esi,0xfffffffe
64016879:	mov    DWORD PTR ds:0x6402e918,ebx
6401687f:	jne    0x6401689f
64016881:	mov    DWORD PTR ds:0x6402e918,0x1
6401688b:	call   DWORD PTR ds:0x6402514c
64016891:	cmp    BYTE PTR [ebp-0x4],bl
64016894:	je     0x640168db
64016896:	mov    ecx,DWORD PTR [ebp-0x8]
64016899:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401689d:	jmp    0x640168db
6401689f:	cmp    esi,0xfffffffd
640168a2:	jne    0x640168b6
640168a4:	mov    DWORD PTR ds:0x6402e918,0x1
640168ae:	call   DWORD PTR ds:0x640250e8
640168b4:	jmp    0x64016891
640168b6:	cmp    esi,0xfffffffc
640168b9:	jne    0x640168cd
640168bb:	mov    eax,DWORD PTR [ebp-0x10]
640168be:	mov    eax,DWORD PTR [eax+0x4]
640168c1:	mov    DWORD PTR ds:0x6402e918,0x1
640168cb:	jmp    0x64016891
640168cd:	cmp    BYTE PTR [ebp-0x4],bl
640168d0:	je     0x640168d9
640168d2:	mov    eax,DWORD PTR [ebp-0x8]
640168d5:	and    DWORD PTR [eax+0x70],0xfffffffd
640168d9:	mov    eax,esi
640168db:	pop    ebx
640168dc:	leave  
640168dd:	ret    
640168de:	push   ebp
640168df:	mov    ebp,esp
640168e1:	sub    esp,0x20
640168e4:	mov    eax,ds:0x6402d09c
640168e9:	xor    eax,ebp
640168eb:	mov    DWORD PTR [ebp-0x4],eax
640168ee:	push   ebx
640168ef:	mov    ebx,DWORD PTR [ebp+0xc]
640168f2:	push   esi
640168f3:	mov    esi,DWORD PTR [ebp+0x8]
640168f6:	push   edi
640168f7:	call   0x64016864
640168fc:	mov    edi,eax
640168fe:	xor    esi,esi
64016900:	cmp    edi,esi
64016902:	mov    DWORD PTR [ebp+0x8],edi
64016905:	jne    0x64016915
64016907:	mov    eax,ebx
64016909:	call   0x640165e1
6401690e:	xor    eax,eax
64016910:	jmp    0x64016aa8
64016915:	mov    DWORD PTR [ebp-0x1c],esi
64016918:	xor    eax,eax
6401691a:	cmp    DWORD PTR [eax+0x6402d698],edi
64016920:	je     0x640169b7
64016926:	inc    DWORD PTR [ebp-0x1c]
64016929:	add    eax,0x30
6401692c:	cmp    eax,0xf0
64016931:	jb     0x6401691a
64016933:	cmp    edi,0xfde8
64016939:	je     0x64016aa5
6401693f:	cmp    edi,0xfde9
64016945:	je     0x64016aa5
6401694b:	movzx  eax,di
6401694e:	push   eax
6401694f:	call   DWORD PTR ds:0x64025150
64016955:	test   eax,eax
64016957:	je     0x64016aa5
6401695d:	lea    eax,[ebp-0x18]
64016960:	push   eax
64016961:	push   edi
64016962:	call   DWORD PTR ds:0x64025148
64016968:	test   eax,eax
6401696a:	je     0x64016a99
64016970:	push   0x101
64016975:	lea    eax,[ebx+0x1c]
64016978:	push   esi
64016979:	push   eax
6401697a:	call   0x64013570
6401697f:	xor    edx,edx
64016981:	inc    edx
64016982:	add    esp,0xc
64016985:	cmp    DWORD PTR [ebp-0x18],edx
64016988:	mov    DWORD PTR [ebx+0x4],edi
6401698b:	mov    DWORD PTR [ebx+0xc],esi
6401698e:	jbe    0x64016a8c
64016994:	cmp    BYTE PTR [ebp-0x12],0x0
64016998:	je     0x64016a6d
6401699e:	lea    esi,[ebp-0x11]
640169a1:	mov    cl,BYTE PTR [esi]
640169a3:	test   cl,cl
640169a5:	je     0x64016a6d
640169ab:	movzx  eax,BYTE PTR [esi-0x1]
640169af:	movzx  ecx,cl
640169b2:	jmp    0x64016a5d
640169b7:	push   0x101
640169bc:	lea    eax,[ebx+0x1c]
640169bf:	push   esi
640169c0:	push   eax
640169c1:	call   0x64013570
640169c6:	mov    ecx,DWORD PTR [ebp-0x1c]
640169c9:	add    esp,0xc
640169cc:	imul   ecx,ecx,0x30
640169cf:	mov    DWORD PTR [ebp-0x20],esi
640169d2:	lea    esi,[ecx+0x6402d6a8]
640169d8:	mov    DWORD PTR [ebp-0x1c],esi
640169db:	jmp    0x64016a07
640169dd:	mov    al,BYTE PTR [esi+0x1]
640169e0:	test   al,al
640169e2:	je     0x64016a0c
640169e4:	movzx  edi,BYTE PTR [esi]
640169e7:	movzx  eax,al
640169ea:	jmp    0x640169fe
640169ec:	mov    eax,DWORD PTR [ebp-0x20]
640169ef:	mov    al,BYTE PTR [eax+0x6402d694]
640169f5:	or     BYTE PTR [ebx+edi*1+0x1d],al
640169f9:	movzx  eax,BYTE PTR [esi+0x1]
640169fd:	inc    edi
640169fe:	cmp    edi,eax
64016a00:	jbe    0x640169ec
64016a02:	mov    edi,DWORD PTR [ebp+0x8]
64016a05:	inc    esi
64016a06:	inc    esi
64016a07:	cmp    BYTE PTR [esi],0x0
64016a0a:	jne    0x640169dd
64016a0c:	mov    esi,DWORD PTR [ebp-0x1c]
64016a0f:	inc    DWORD PTR [ebp-0x20]
64016a12:	add    esi,0x8
64016a15:	cmp    DWORD PTR [ebp-0x20],0x4
64016a19:	mov    DWORD PTR [ebp-0x1c],esi
64016a1c:	jb     0x64016a07
64016a1e:	mov    eax,edi
64016a20:	mov    DWORD PTR [ebx+0x4],edi
64016a23:	mov    DWORD PTR [ebx+0x8],0x1
64016a2a:	call   0x640165b2
64016a2f:	push   0x6
64016a31:	mov    DWORD PTR [ebx+0xc],eax
64016a34:	lea    eax,[ebx+0x10]
64016a37:	lea    ecx,[ecx+0x6402d69c]
64016a3d:	pop    edx
64016a3e:	mov    si,WORD PTR [ecx]
64016a41:	inc    ecx
64016a42:	mov    WORD PTR [eax],si
64016a45:	inc    ecx
64016a46:	inc    eax
64016a47:	inc    eax
64016a48:	dec    edx
64016a49:	jne    0x64016a3e
64016a4b:	mov    esi,ebx
64016a4d:	call   0x64016636
64016a52:	jmp    0x6401690e
64016a57:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
64016a5c:	inc    eax
64016a5d:	cmp    eax,ecx
64016a5f:	jbe    0x64016a57
64016a61:	inc    esi
64016a62:	inc    esi
64016a63:	cmp    BYTE PTR [esi-0x1],0x0
64016a67:	jne    0x640169a1
64016a6d:	lea    eax,[ebx+0x1e]
64016a70:	mov    ecx,0xfe
64016a75:	or     BYTE PTR [eax],0x8
64016a78:	inc    eax
64016a79:	dec    ecx
64016a7a:	jne    0x64016a75
64016a7c:	mov    eax,DWORD PTR [ebx+0x4]
64016a7f:	call   0x640165b2
64016a84:	mov    DWORD PTR [ebx+0xc],eax
64016a87:	mov    DWORD PTR [ebx+0x8],edx
64016a8a:	jmp    0x64016a8f
64016a8c:	mov    DWORD PTR [ebx+0x8],esi
64016a8f:	xor    eax,eax
64016a91:	lea    edi,[ebx+0x10]
64016a94:	stos   DWORD PTR es:[edi],eax
64016a95:	stos   DWORD PTR es:[edi],eax
64016a96:	stos   DWORD PTR es:[edi],eax
64016a97:	jmp    0x64016a4b
64016a99:	cmp    DWORD PTR ds:0x6402e918,esi
64016a9f:	jne    0x64016907
64016aa5:	or     eax,0xffffffff
64016aa8:	mov    ecx,DWORD PTR [ebp-0x4]
64016aab:	pop    edi
64016aac:	pop    esi
64016aad:	xor    ecx,ebp
64016aaf:	pop    ebx
64016ab0:	call   0x64012e6c
64016ab5:	leave  
64016ab6:	ret    
64016ab7:	push   0x14
64016ab9:	push   0x6402a750
64016abe:	call   0x64014430
64016ac3:	or     DWORD PTR [ebp-0x20],0xffffffff
64016ac7:	call   0x64014f7b
64016acc:	mov    edi,eax
64016ace:	mov    DWORD PTR [ebp-0x24],edi
64016ad1:	call   0x640167c0
64016ad6:	mov    ebx,DWORD PTR [edi+0x68]
64016ad9:	mov    esi,DWORD PTR [ebp+0x8]
64016adc:	call   0x64016864
64016ae1:	mov    DWORD PTR [ebp+0x8],eax
64016ae4:	cmp    eax,DWORD PTR [ebx+0x4]
64016ae7:	je     0x64016c44
64016aed:	push   0x220
64016af2:	call   0x64016140
64016af7:	pop    ecx
64016af8:	mov    ebx,eax
64016afa:	test   ebx,ebx
64016afc:	je     0x64016c48
64016b02:	mov    ecx,0x88
64016b07:	mov    esi,DWORD PTR [edi+0x68]
64016b0a:	mov    edi,ebx
64016b0c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016b0e:	and    DWORD PTR [ebx],0x0
64016b11:	push   ebx
64016b12:	push   DWORD PTR [ebp+0x8]
64016b15:	call   0x640168de
64016b1a:	pop    ecx
64016b1b:	pop    ecx
64016b1c:	mov    DWORD PTR [ebp-0x20],eax
64016b1f:	test   eax,eax
64016b21:	jne    0x64016c23
64016b27:	mov    esi,DWORD PTR [ebp-0x24]
64016b2a:	push   DWORD PTR [esi+0x68]
64016b2d:	call   DWORD PTR ds:0x64025094
64016b33:	test   eax,eax
64016b35:	jne    0x64016b48
64016b37:	mov    eax,DWORD PTR [esi+0x68]
64016b3a:	cmp    eax,0x6402d268
64016b3f:	je     0x64016b48
64016b41:	push   eax
64016b42:	call   0x64013d06
64016b47:	pop    ecx
64016b48:	mov    DWORD PTR [esi+0x68],ebx
64016b4b:	push   ebx
64016b4c:	mov    edi,DWORD PTR ds:0x64025020
64016b52:	call   edi
64016b54:	test   BYTE PTR [esi+0x70],0x2
64016b58:	jne    0x64016c48
64016b5e:	test   BYTE PTR ds:0x6402d78c,0x1
64016b65:	jne    0x64016c48
64016b6b:	push   0xd
64016b6d:	call   0x6401a43a
64016b72:	pop    ecx
64016b73:	and    DWORD PTR [ebp-0x4],0x0
64016b77:	mov    eax,DWORD PTR [ebx+0x4]
64016b7a:	mov    ds:0x6402e928,eax
64016b7f:	mov    eax,DWORD PTR [ebx+0x8]
64016b82:	mov    ds:0x6402e92c,eax
64016b87:	mov    eax,DWORD PTR [ebx+0xc]
64016b8a:	mov    ds:0x6402e930,eax
64016b8f:	xor    eax,eax
64016b91:	mov    DWORD PTR [ebp-0x1c],eax
64016b94:	cmp    eax,0x5
64016b97:	jge    0x64016ba9
64016b99:	mov    cx,WORD PTR [ebx+eax*2+0x10]
64016b9e:	mov    WORD PTR [eax*2+0x6402e91c],cx
64016ba6:	inc    eax
64016ba7:	jmp    0x64016b91
64016ba9:	xor    eax,eax
64016bab:	mov    DWORD PTR [ebp-0x1c],eax
64016bae:	cmp    eax,0x101
64016bb3:	jge    0x64016bc2
64016bb5:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64016bb9:	mov    BYTE PTR [eax+0x6402d488],cl
64016bbf:	inc    eax
64016bc0:	jmp    0x64016bab
64016bc2:	xor    eax,eax
64016bc4:	mov    DWORD PTR [ebp-0x1c],eax
64016bc7:	cmp    eax,0x100
64016bcc:	jge    0x64016bde
64016bce:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64016bd5:	mov    BYTE PTR [eax+0x6402d590],cl
64016bdb:	inc    eax
64016bdc:	jmp    0x64016bc4
64016bde:	push   DWORD PTR ds:0x6402d690
64016be4:	call   DWORD PTR ds:0x64025094
64016bea:	test   eax,eax
64016bec:	jne    0x64016c01
64016bee:	mov    eax,ds:0x6402d690
64016bf3:	cmp    eax,0x6402d268
64016bf8:	je     0x64016c01
64016bfa:	push   eax
64016bfb:	call   0x64013d06
64016c00:	pop    ecx
64016c01:	mov    DWORD PTR ds:0x6402d690,ebx
64016c07:	push   ebx
64016c08:	call   edi
64016c0a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016c11:	call   0x64016c18
64016c16:	jmp    0x64016c48
64016c18:	push   0xd
64016c1a:	call   0x6401a362
64016c1f:	pop    ecx
64016c20:	ret    
64016c21:	jmp    0x64016c48
64016c23:	cmp    eax,0xffffffff
64016c26:	jne    0x64016c48
64016c28:	cmp    ebx,0x6402d268
64016c2e:	je     0x64016c37
64016c30:	push   ebx
64016c31:	call   0x64013d06
64016c36:	pop    ecx
64016c37:	call   0x64014c30
64016c3c:	mov    DWORD PTR [eax],0x16
64016c42:	jmp    0x64016c48
64016c44:	and    DWORD PTR [ebp-0x20],0x0
64016c48:	mov    eax,DWORD PTR [ebp-0x20]
64016c4b:	call   0x64014475
64016c50:	ret    
64016c51:	cmp    DWORD PTR ds:0x64032614,0x0
64016c58:	jne    0x64016c6c
64016c5a:	push   0xfffffffd
64016c5c:	call   0x64016ab7
64016c61:	pop    ecx
64016c62:	mov    DWORD PTR ds:0x64032614,0x1
64016c6c:	xor    eax,eax
64016c6e:	ret    
64016c6f:	push   ebx
64016c70:	push   ebp
64016c71:	push   esi
64016c72:	mov    esi,DWORD PTR [esp+0x10]
64016c76:	mov    eax,DWORD PTR [esi+0xbc]
64016c7c:	xor    ebp,ebp
64016c7e:	cmp    eax,ebp
64016c80:	push   edi
64016c81:	je     0x64016cf2
64016c83:	cmp    eax,0x6402dc40
64016c88:	je     0x64016cf2
64016c8a:	mov    eax,DWORD PTR [esi+0xb0]
64016c90:	cmp    eax,ebp
64016c92:	je     0x64016cf2
64016c94:	cmp    DWORD PTR [eax],ebp
64016c96:	jne    0x64016cf2
64016c98:	mov    eax,DWORD PTR [esi+0xb8]
64016c9e:	cmp    eax,ebp
64016ca0:	je     0x64016cb9
64016ca2:	cmp    DWORD PTR [eax],ebp
64016ca4:	jne    0x64016cb9
64016ca6:	push   eax
64016ca7:	call   0x64013d06
64016cac:	push   DWORD PTR [esi+0xbc]
64016cb2:	call   0x6401bf86
64016cb7:	pop    ecx
64016cb8:	pop    ecx
64016cb9:	mov    eax,DWORD PTR [esi+0xb4]
64016cbf:	cmp    eax,ebp
64016cc1:	je     0x64016cda
64016cc3:	cmp    DWORD PTR [eax],ebp
64016cc5:	jne    0x64016cda
64016cc7:	push   eax
64016cc8:	call   0x64013d06
64016ccd:	push   DWORD PTR [esi+0xbc]
64016cd3:	call   0x6401bf45
64016cd8:	pop    ecx
64016cd9:	pop    ecx
64016cda:	push   DWORD PTR [esi+0xb0]
64016ce0:	call   0x64013d06
64016ce5:	push   DWORD PTR [esi+0xbc]
64016ceb:	call   0x64013d06
64016cf0:	pop    ecx
64016cf1:	pop    ecx
64016cf2:	mov    eax,DWORD PTR [esi+0xc0]
64016cf8:	cmp    eax,ebp
64016cfa:	je     0x64016d40
64016cfc:	cmp    DWORD PTR [eax],ebp
64016cfe:	jne    0x64016d40
64016d00:	mov    eax,DWORD PTR [esi+0xc4]
64016d06:	sub    eax,0xfe
64016d0b:	push   eax
64016d0c:	call   0x64013d06
64016d11:	mov    eax,DWORD PTR [esi+0xcc]
64016d17:	mov    edi,0x80
64016d1c:	sub    eax,edi
64016d1e:	push   eax
64016d1f:	call   0x64013d06
64016d24:	mov    eax,DWORD PTR [esi+0xd0]
64016d2a:	sub    eax,edi
64016d2c:	push   eax
64016d2d:	call   0x64013d06
64016d32:	push   DWORD PTR [esi+0xc0]
64016d38:	call   0x64013d06
64016d3d:	add    esp,0x10
64016d40:	lea    edi,[esi+0xd4]
64016d46:	mov    eax,DWORD PTR [edi]
64016d48:	cmp    eax,0x6402db80
64016d4d:	je     0x64016d66
64016d4f:	cmp    DWORD PTR [eax+0xb4],ebp
64016d55:	jne    0x64016d66
64016d57:	push   eax
64016d58:	call   0x6401bdb5
64016d5d:	push   DWORD PTR [edi]
64016d5f:	call   0x64013d06
64016d64:	pop    ecx
64016d65:	pop    ecx
64016d66:	push   0x6
64016d68:	lea    edi,[esi+0x50]
64016d6b:	pop    ebx
64016d6c:	cmp    DWORD PTR [edi-0x8],0x6402d790
64016d73:	je     0x64016d86
64016d75:	mov    eax,DWORD PTR [edi]
64016d77:	cmp    eax,ebp
64016d79:	je     0x64016d86
64016d7b:	cmp    DWORD PTR [eax],ebp
64016d7d:	jne    0x64016d86
64016d7f:	push   eax
64016d80:	call   0x64013d06
64016d85:	pop    ecx
64016d86:	cmp    DWORD PTR [edi-0x4],ebp
64016d89:	je     0x64016d9d
64016d8b:	mov    eax,DWORD PTR [edi+0x4]
64016d8e:	cmp    eax,ebp
64016d90:	je     0x64016d9d
64016d92:	cmp    DWORD PTR [eax],ebp
64016d94:	jne    0x64016d9d
64016d96:	push   eax
64016d97:	call   0x64013d06
64016d9c:	pop    ecx
64016d9d:	add    edi,0x10
64016da0:	dec    ebx
64016da1:	jne    0x64016d6c
64016da3:	push   esi
64016da4:	call   0x64013d06
64016da9:	pop    ecx
64016daa:	pop    edi
64016dab:	pop    esi
64016dac:	pop    ebp
64016dad:	pop    ebx
64016dae:	ret    
64016daf:	push   ebx
64016db0:	push   ebp
64016db1:	push   esi
64016db2:	mov    esi,DWORD PTR [esp+0x10]
64016db6:	push   edi
64016db7:	mov    edi,DWORD PTR ds:0x64025020
64016dbd:	push   esi
64016dbe:	call   edi
64016dc0:	mov    eax,DWORD PTR [esi+0xb0]
64016dc6:	test   eax,eax
64016dc8:	je     0x64016dcd
64016dca:	push   eax
64016dcb:	call   edi
64016dcd:	mov    eax,DWORD PTR [esi+0xb8]
64016dd3:	test   eax,eax
64016dd5:	je     0x64016dda
64016dd7:	push   eax
64016dd8:	call   edi
64016dda:	mov    eax,DWORD PTR [esi+0xb4]
64016de0:	test   eax,eax
64016de2:	je     0x64016de7
64016de4:	push   eax
64016de5:	call   edi
64016de7:	mov    eax,DWORD PTR [esi+0xc0]
64016ded:	test   eax,eax
64016def:	je     0x64016df4
64016df1:	push   eax
64016df2:	call   edi
64016df4:	push   0x6
64016df6:	lea    ebx,[esi+0x50]
64016df9:	pop    ebp
64016dfa:	cmp    DWORD PTR [ebx-0x8],0x6402d790
64016e01:	je     0x64016e0c
64016e03:	mov    eax,DWORD PTR [ebx]
64016e05:	test   eax,eax
64016e07:	je     0x64016e0c
64016e09:	push   eax
64016e0a:	call   edi
64016e0c:	cmp    DWORD PTR [ebx-0x4],0x0
64016e10:	je     0x64016e1c
64016e12:	mov    eax,DWORD PTR [ebx+0x4]
64016e15:	test   eax,eax
64016e17:	je     0x64016e1c
64016e19:	push   eax
64016e1a:	call   edi
64016e1c:	add    ebx,0x10
64016e1f:	dec    ebp
64016e20:	jne    0x64016dfa
64016e22:	mov    eax,DWORD PTR [esi+0xd4]
64016e28:	add    eax,0xb4
64016e2d:	push   eax
64016e2e:	call   edi
64016e30:	pop    edi
64016e31:	pop    esi
64016e32:	pop    ebp
64016e33:	pop    ebx
64016e34:	ret    
64016e35:	push   esi
64016e36:	mov    esi,DWORD PTR [esp+0x8]
64016e3a:	test   esi,esi
64016e3c:	je     0x64016ebd
64016e3e:	push   ebx
64016e3f:	push   ebp
64016e40:	push   edi
64016e41:	mov    edi,DWORD PTR ds:0x64025094
64016e47:	push   esi
64016e48:	call   edi
64016e4a:	mov    eax,DWORD PTR [esi+0xb0]
64016e50:	test   eax,eax
64016e52:	je     0x64016e57
64016e54:	push   eax
64016e55:	call   edi
64016e57:	mov    eax,DWORD PTR [esi+0xb8]
64016e5d:	test   eax,eax
64016e5f:	je     0x64016e64
64016e61:	push   eax
64016e62:	call   edi
64016e64:	mov    eax,DWORD PTR [esi+0xb4]
64016e6a:	test   eax,eax
64016e6c:	je     0x64016e71
64016e6e:	push   eax
64016e6f:	call   edi
64016e71:	mov    eax,DWORD PTR [esi+0xc0]
64016e77:	test   eax,eax
64016e79:	je     0x64016e7e
64016e7b:	push   eax
64016e7c:	call   edi
64016e7e:	push   0x6
64016e80:	lea    ebx,[esi+0x50]
64016e83:	pop    ebp
64016e84:	cmp    DWORD PTR [ebx-0x8],0x6402d790
64016e8b:	je     0x64016e96
64016e8d:	mov    eax,DWORD PTR [ebx]
64016e8f:	test   eax,eax
64016e91:	je     0x64016e96
64016e93:	push   eax
64016e94:	call   edi
64016e96:	cmp    DWORD PTR [ebx-0x4],0x0
64016e9a:	je     0x64016ea6
64016e9c:	mov    eax,DWORD PTR [ebx+0x4]
64016e9f:	test   eax,eax
64016ea1:	je     0x64016ea6
64016ea3:	push   eax
64016ea4:	call   edi
64016ea6:	add    ebx,0x10
64016ea9:	dec    ebp
64016eaa:	jne    0x64016e84
64016eac:	mov    eax,DWORD PTR [esi+0xd4]
64016eb2:	add    eax,0xb4
64016eb7:	push   eax
64016eb8:	call   edi
64016eba:	pop    edi
64016ebb:	pop    ebp
64016ebc:	pop    ebx
64016ebd:	mov    eax,esi
64016ebf:	pop    esi
64016ec0:	ret    
64016ec1:	test   edi,edi
64016ec3:	je     0x64016efc
64016ec5:	test   eax,eax
64016ec7:	je     0x64016efc
64016ec9:	push   esi
64016eca:	mov    esi,DWORD PTR [eax]
64016ecc:	cmp    esi,edi
64016ece:	je     0x64016ef8
64016ed0:	push   edi
64016ed1:	mov    DWORD PTR [eax],edi
64016ed3:	call   0x64016daf
64016ed8:	test   esi,esi
64016eda:	pop    ecx
64016edb:	je     0x64016ef8
64016edd:	push   esi
64016ede:	call   0x64016e35
64016ee3:	cmp    DWORD PTR [esi],0x0
64016ee6:	pop    ecx
64016ee7:	jne    0x64016ef8
64016ee9:	cmp    esi,0x6402d798
64016eef:	je     0x64016ef8
64016ef1:	push   esi
64016ef2:	call   0x64016c6f
64016ef7:	pop    ecx
64016ef8:	mov    eax,edi
64016efa:	pop    esi
64016efb:	ret    
64016efc:	xor    eax,eax
64016efe:	ret    
64016eff:	push   0xc
64016f01:	push   0x6402a770
64016f06:	call   0x64014430
64016f0b:	call   0x64014f7b
64016f10:	mov    esi,eax
64016f12:	mov    eax,ds:0x6402d78c
64016f17:	test   DWORD PTR [esi+0x70],eax
64016f1a:	je     0x64016f3e
64016f1c:	cmp    DWORD PTR [esi+0x6c],0x0
64016f20:	je     0x64016f3e
64016f22:	call   0x64014f7b
64016f27:	mov    esi,DWORD PTR [eax+0x6c]
64016f2a:	test   esi,esi
64016f2c:	jne    0x64016f36
64016f2e:	push   0x20
64016f30:	call   0x640162b6
64016f35:	pop    ecx
64016f36:	mov    eax,esi
64016f38:	call   0x64014475
64016f3d:	ret    
64016f3e:	push   0xc
64016f40:	call   0x6401a43a
64016f45:	pop    ecx
64016f46:	and    DWORD PTR [ebp-0x4],0x0
64016f4a:	lea    eax,[esi+0x6c]
64016f4d:	mov    edi,DWORD PTR ds:0x6402d870
64016f53:	call   0x64016ec1
64016f58:	mov    DWORD PTR [ebp-0x1c],eax
64016f5b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016f62:	call   0x64016f69
64016f67:	jmp    0x64016f2a
64016f69:	push   0xc
64016f6b:	call   0x6401a362
64016f70:	pop    ecx
64016f71:	mov    esi,DWORD PTR [ebp-0x1c]
64016f74:	ret    
64016f75:	push   ebp
64016f76:	mov    ebp,esp
64016f78:	push   ecx
64016f79:	push   esi
64016f7a:	mov    esi,DWORD PTR [ebp+0xc]
64016f7d:	push   esi
64016f7e:	call   0x6401cc9d
64016f83:	mov    DWORD PTR [ebp+0xc],eax
64016f86:	mov    eax,DWORD PTR [esi+0xc]
64016f89:	test   al,0x82
64016f8b:	pop    ecx
64016f8c:	jne    0x64016fa5
64016f8e:	call   0x64014c30
64016f93:	mov    DWORD PTR [eax],0x9
64016f99:	or     DWORD PTR [esi+0xc],0x20
64016f9d:	or     eax,0xffffffff
64016fa0:	jmp    0x640170d2
64016fa5:	test   al,0x40
64016fa7:	je     0x64016fb6
64016fa9:	call   0x64014c30
64016fae:	mov    DWORD PTR [eax],0x22
64016fb4:	jmp    0x64016f99
64016fb6:	push   ebx
64016fb7:	xor    ebx,ebx
64016fb9:	test   al,0x1
64016fbb:	je     0x64016fd3
64016fbd:	test   al,0x10
64016fbf:	mov    DWORD PTR [esi+0x4],ebx
64016fc2:	je     0x6401704d
64016fc8:	mov    ecx,DWORD PTR [esi+0x8]
64016fcb:	and    eax,0xfffffffe
64016fce:	mov    DWORD PTR [esi],ecx
64016fd0:	mov    DWORD PTR [esi+0xc],eax
64016fd3:	mov    eax,DWORD PTR [esi+0xc]
64016fd6:	and    eax,0xffffffef
64016fd9:	or     eax,0x2
64016fdc:	test   ax,0x10c
64016fe0:	mov    DWORD PTR [esi+0xc],eax
64016fe3:	mov    DWORD PTR [esi+0x4],ebx
64016fe6:	mov    DWORD PTR [ebp-0x4],ebx
64016fe9:	jne    0x64017017
64016feb:	call   0x6401cafc
64016ff0:	add    eax,0x20
64016ff3:	cmp    esi,eax
64016ff5:	je     0x64017003
64016ff7:	call   0x6401cafc
64016ffc:	add    eax,0x40
64016fff:	cmp    esi,eax
64017001:	jne    0x64017010
64017003:	push   DWORD PTR [ebp+0xc]
64017006:	call   0x6401ca9e
6401700b:	test   eax,eax
6401700d:	pop    ecx
6401700e:	jne    0x64017017
64017010:	push   esi
64017011:	call   0x6401ca5a
64017016:	pop    ecx
64017017:	test   WORD PTR [esi+0xc],0x108
6401701d:	push   edi
6401701e:	je     0x640170a4
64017024:	mov    eax,DWORD PTR [esi+0x8]
64017027:	mov    edi,DWORD PTR [esi]
64017029:	lea    ecx,[eax+0x1]
6401702c:	mov    DWORD PTR [esi],ecx
6401702e:	mov    ecx,DWORD PTR [esi+0x18]
64017031:	sub    edi,eax
64017033:	dec    ecx
64017034:	cmp    edi,ebx
64017036:	mov    DWORD PTR [esi+0x4],ecx
64017039:	jle    0x64017058
6401703b:	push   edi
6401703c:	push   eax
6401703d:	push   DWORD PTR [ebp+0xc]
64017040:	call   0x6401c97e
64017045:	add    esp,0xc
64017048:	mov    DWORD PTR [ebp-0x4],eax
6401704b:	jmp    0x6401709a
6401704d:	or     eax,0x20
64017050:	mov    DWORD PTR [esi+0xc],eax
64017053:	or     eax,0xffffffff
64017056:	jmp    0x640170d1
64017058:	mov    ecx,DWORD PTR [ebp+0xc]
6401705b:	cmp    ecx,0xffffffff
6401705e:	je     0x6401707b
64017060:	cmp    ecx,0xfffffffe
64017063:	je     0x6401707b
64017065:	mov    eax,ecx
64017067:	and    eax,0x1f
6401706a:	mov    edx,ecx
6401706c:	sar    edx,0x5
6401706f:	shl    eax,0x6
64017072:	add    eax,DWORD PTR [edx*4+0x64032500]
64017079:	jmp    0x64017080
6401707b:	mov    eax,0x6402d880
64017080:	test   BYTE PTR [eax+0x4],0x20
64017084:	je     0x6401709a
64017086:	push   0x2
64017088:	push   ebx
64017089:	push   ebx
6401708a:	push   ecx
6401708b:	call   0x6401c243
64017090:	and    eax,edx
64017092:	add    esp,0x10
64017095:	cmp    eax,0xffffffff
64017098:	je     0x640170bf
6401709a:	mov    eax,DWORD PTR [esi+0x8]
6401709d:	mov    cl,BYTE PTR [ebp+0x8]
640170a0:	mov    BYTE PTR [eax],cl
640170a2:	jmp    0x640170ba
640170a4:	xor    edi,edi
640170a6:	inc    edi
640170a7:	push   edi
640170a8:	lea    eax,[ebp+0x8]
640170ab:	push   eax
640170ac:	push   DWORD PTR [ebp+0xc]
640170af:	call   0x6401c97e
640170b4:	add    esp,0xc
640170b7:	mov    DWORD PTR [ebp-0x4],eax
640170ba:	cmp    DWORD PTR [ebp-0x4],edi
640170bd:	je     0x640170c8
640170bf:	or     DWORD PTR [esi+0xc],0x20
640170c3:	or     eax,0xffffffff
640170c6:	jmp    0x640170d0
640170c8:	mov    eax,DWORD PTR [ebp+0x8]
640170cb:	and    eax,0xff
640170d0:	pop    edi
640170d1:	pop    ebx
640170d2:	pop    esi
640170d3:	leave  
640170d4:	ret    
640170d5:	test   BYTE PTR [eax+0xc],0x40
640170d9:	je     0x640170e1
640170db:	cmp    DWORD PTR [eax+0x8],0x0
640170df:	je     0x640170f7
640170e1:	push   eax
640170e2:	push   DWORD PTR [esp+0x8]
640170e6:	call   0x6401ccca
640170eb:	cmp    ax,0xffff
640170ef:	pop    ecx
640170f0:	pop    ecx
640170f1:	jne    0x640170f7
640170f3:	or     DWORD PTR [esi],0xffffffff
640170f6:	ret    
640170f7:	inc    DWORD PTR [esi]
640170f9:	ret    
640170fa:	push   ebp
640170fb:	mov    ebp,esp
640170fd:	push   esi
640170fe:	mov    esi,eax
64017100:	jmp    0x64017116
64017102:	push   DWORD PTR [ebp+0x8]
64017105:	mov    eax,DWORD PTR [ebp+0x10]
64017108:	dec    DWORD PTR [ebp+0xc]
6401710b:	call   0x640170d5
64017110:	cmp    DWORD PTR [esi],0xffffffff
64017113:	pop    ecx
64017114:	je     0x6401711c
64017116:	cmp    DWORD PTR [ebp+0xc],0x0
6401711a:	jg     0x64017102
6401711c:	pop    esi
6401711d:	pop    ebp
6401711e:	ret    
6401711f:	test   BYTE PTR [edi+0xc],0x40
64017123:	push   ebx
64017124:	push   esi
64017125:	mov    esi,eax
64017127:	mov    ebx,ecx
64017129:	je     0x64017164
6401712b:	cmp    DWORD PTR [edi+0x8],0x0
6401712f:	jne    0x64017164
64017131:	mov    eax,DWORD PTR [esp+0xc]
64017135:	add    DWORD PTR [esi],eax
64017137:	jmp    0x6401716b
64017139:	movzx  eax,WORD PTR [ebx]
6401713c:	dec    DWORD PTR [esp+0xc]
64017140:	push   eax
64017141:	mov    eax,edi
64017143:	call   0x640170d5
64017148:	inc    ebx
64017149:	inc    ebx
6401714a:	cmp    DWORD PTR [esi],0xffffffff
6401714d:	pop    ecx
6401714e:	jne    0x64017164
64017150:	call   0x64014c30
64017155:	cmp    DWORD PTR [eax],0x2a
64017158:	jne    0x6401716b
6401715a:	push   0x3f
6401715c:	mov    eax,edi
6401715e:	call   0x640170d5
64017163:	pop    ecx
64017164:	cmp    DWORD PTR [esp+0xc],0x0
64017169:	jg     0x64017139
6401716b:	pop    esi
6401716c:	pop    ebx
6401716d:	ret    
6401716e:	push   ebp
6401716f:	lea    ebp,[esp-0x3f4]
64017176:	sub    esp,0x474
6401717c:	mov    eax,ds:0x6402d09c
64017181:	xor    eax,ebp
64017183:	mov    DWORD PTR [ebp+0x3f0],eax
64017189:	mov    eax,DWORD PTR [ebp+0x3fc]
6401718f:	push   ebx
64017190:	mov    ebx,DWORD PTR [ebp+0x408]
64017196:	push   esi
64017197:	mov    esi,DWORD PTR [ebp+0x400]
6401719d:	push   edi
6401719e:	push   DWORD PTR [ebp+0x404]
640171a4:	xor    edi,edi
640171a6:	lea    ecx,[ebp-0x64]
640171a9:	mov    DWORD PTR [ebp-0x3c],eax
640171ac:	mov    DWORD PTR [ebp-0x28],ebx
640171af:	mov    DWORD PTR [ebp-0x54],edi
640171b2:	mov    DWORD PTR [ebp-0x14],edi
640171b5:	mov    DWORD PTR [ebp-0x38],edi
640171b8:	mov    DWORD PTR [ebp-0x18],edi
640171bb:	mov    DWORD PTR [ebp-0x30],edi
640171be:	mov    DWORD PTR [ebp-0x48],edi
640171c1:	mov    DWORD PTR [ebp-0x34],edi
640171c4:	call   0x6401300f
640171c9:	cmp    DWORD PTR [ebp-0x3c],edi
640171cc:	jne    0x640171fb
640171ce:	call   0x64014c30
640171d3:	push   edi
640171d4:	push   edi
640171d5:	push   edi
640171d6:	push   edi
640171d7:	mov    DWORD PTR [eax],0x16
640171dd:	push   edi
640171de:	call   0x640129a4
640171e3:	add    esp,0x14
640171e6:	cmp    BYTE PTR [ebp-0x58],0x0
640171ea:	je     0x640171f3
640171ec:	mov    eax,DWORD PTR [ebp-0x5c]
640171ef:	and    DWORD PTR [eax+0x70],0xfffffffd
640171f3:	or     eax,0xffffffff
640171f6:	jmp    0x64017a46
640171fb:	cmp    esi,edi
640171fd:	je     0x640171ce
640171ff:	movzx  edx,WORD PTR [esi]
64017202:	xor    ecx,ecx
64017204:	cmp    dx,di
64017207:	mov    DWORD PTR [ebp-0x2c],edi
6401720a:	mov    DWORD PTR [ebp-0x20],edi
6401720d:	mov    DWORD PTR [ebp-0x50],edi
64017210:	mov    DWORD PTR [ebp-0x24],edx
64017213:	je     0x64017a36
64017219:	push   0x2
6401721b:	pop    edi
6401721c:	add    esi,edi
6401721e:	cmp    DWORD PTR [ebp-0x2c],0x0
64017222:	mov    DWORD PTR [ebp-0x4c],esi
64017225:	jl     0x64017a36
6401722b:	lea    eax,[edx-0x20]
6401722e:	cmp    ax,0x58
64017232:	ja     0x64017243
64017234:	movzx  eax,dx
64017237:	movzx  eax,BYTE PTR [eax+0x64025df8]
6401723e:	and    eax,0xf
64017241:	jmp    0x64017245
64017243:	xor    eax,eax
64017245:	movsx  eax,BYTE PTR [ecx+eax*8+0x64025e18]
6401724d:	push   0x7
6401724f:	sar    eax,0x4
64017252:	pop    ecx
64017253:	cmp    eax,ecx
64017255:	mov    DWORD PTR [ebp-0x68],eax
64017258:	ja     0x64017a04
6401725e:	jmp    DWORD PTR [eax*4+0x64017a5e]
64017265:	xor    eax,eax
64017267:	or     DWORD PTR [ebp-0x18],0xffffffff
6401726b:	mov    DWORD PTR [ebp-0x6c],eax
6401726e:	mov    DWORD PTR [ebp-0x48],eax
64017271:	mov    DWORD PTR [ebp-0x38],eax
64017274:	mov    DWORD PTR [ebp-0x30],eax
64017277:	mov    DWORD PTR [ebp-0x14],eax
6401727a:	mov    DWORD PTR [ebp-0x34],eax
6401727d:	jmp    0x64017a04
64017282:	movzx  eax,dx
64017285:	sub    eax,0x20
64017288:	je     0x640172c8
6401728a:	sub    eax,0x3
6401728d:	je     0x640172bc
6401728f:	sub    eax,0x8
64017292:	je     0x640172b3
64017294:	sub    eax,edi
64017296:	je     0x640172aa
64017298:	sub    eax,0x3
6401729b:	jne    0x64017a04
640172a1:	or     DWORD PTR [ebp-0x14],0x8
640172a5:	jmp    0x64017a04
640172aa:	or     DWORD PTR [ebp-0x14],0x4
640172ae:	jmp    0x64017a04
640172b3:	or     DWORD PTR [ebp-0x14],0x1
640172b7:	jmp    0x64017a04
640172bc:	or     DWORD PTR [ebp-0x14],0x80
640172c3:	jmp    0x64017a04
640172c8:	or     DWORD PTR [ebp-0x14],edi
640172cb:	jmp    0x64017a04
640172d0:	cmp    dx,0x2a
640172d4:	jne    0x640172f6
640172d6:	add    ebx,0x4
640172d9:	mov    DWORD PTR [ebp-0x28],ebx
640172dc:	mov    ebx,DWORD PTR [ebx-0x4]
640172df:	test   ebx,ebx
640172e1:	mov    DWORD PTR [ebp-0x38],ebx
640172e4:	jge    0x64017a04
640172ea:	or     DWORD PTR [ebp-0x14],0x4
640172ee:	neg    DWORD PTR [ebp-0x38]
640172f1:	jmp    0x64017a04
640172f6:	mov    eax,DWORD PTR [ebp-0x38]
640172f9:	imul   eax,eax,0xa
640172fc:	movzx  ecx,dx
640172ff:	lea    eax,[eax+ecx*1-0x30]
64017303:	mov    DWORD PTR [ebp-0x38],eax
64017306:	jmp    0x64017a04
6401730b:	and    DWORD PTR [ebp-0x18],0x0
6401730f:	jmp    0x64017a04
64017314:	cmp    dx,0x2a
64017318:	jne    0x64017337
6401731a:	add    ebx,0x4
6401731d:	mov    DWORD PTR [ebp-0x28],ebx
64017320:	mov    ebx,DWORD PTR [ebx-0x4]
64017323:	test   ebx,ebx
64017325:	mov    DWORD PTR [ebp-0x18],ebx
64017328:	jge    0x64017a04
6401732e:	or     DWORD PTR [ebp-0x18],0xffffffff
64017332:	jmp    0x64017a04
64017337:	mov    eax,DWORD PTR [ebp-0x18]
6401733a:	imul   eax,eax,0xa
6401733d:	movzx  ecx,dx
64017340:	lea    eax,[eax+ecx*1-0x30]
64017344:	mov    DWORD PTR [ebp-0x18],eax
64017347:	jmp    0x64017a04
6401734c:	movzx  eax,dx
6401734f:	cmp    eax,0x49
64017352:	je     0x6401739c
64017354:	cmp    eax,0x68
64017357:	je     0x64017393
64017359:	cmp    eax,0x6c
6401735c:	je     0x64017373
6401735e:	cmp    eax,0x77
64017361:	jne    0x64017a04
64017367:	or     DWORD PTR [ebp-0x14],0x800
6401736e:	jmp    0x64017a04
64017373:	cmp    WORD PTR [esi],0x6c
64017377:	jne    0x6401738a
64017379:	add    esi,edi
6401737b:	or     DWORD PTR [ebp-0x14],0x1000
64017382:	mov    DWORD PTR [ebp-0x4c],esi
64017385:	jmp    0x64017a04
6401738a:	or     DWORD PTR [ebp-0x14],0x10
6401738e:	jmp    0x64017a04
64017393:	or     DWORD PTR [ebp-0x14],0x20
64017397:	jmp    0x64017a04
6401739c:	movzx  eax,WORD PTR [esi]
6401739f:	cmp    ax,0x36
640173a3:	jne    0x640173be
640173a5:	cmp    WORD PTR [esi+0x2],0x34
640173aa:	jne    0x640173be
640173ac:	add    esi,0x4
640173af:	or     DWORD PTR [ebp-0x14],0x8000
640173b6:	mov    DWORD PTR [ebp-0x4c],esi
640173b9:	jmp    0x64017a04
640173be:	cmp    ax,0x33
640173c2:	jne    0x640173dd
640173c4:	cmp    WORD PTR [esi+0x2],0x32
640173c9:	jne    0x640173dd
640173cb:	add    esi,0x4
640173ce:	and    DWORD PTR [ebp-0x14],0xffff7fff
640173d5:	mov    DWORD PTR [ebp-0x4c],esi
640173d8:	jmp    0x64017a04
640173dd:	cmp    ax,0x64
640173e1:	je     0x64017a04
640173e7:	cmp    ax,0x69
640173eb:	je     0x64017a04
640173f1:	cmp    ax,0x6f
640173f5:	je     0x64017a04
640173fb:	cmp    ax,0x75
640173ff:	je     0x64017a04
64017405:	cmp    ax,0x78
64017409:	je     0x64017a04
6401740f:	cmp    ax,0x58
64017413:	je     0x64017a04
64017419:	and    DWORD PTR [ebp-0x68],0x0
6401741d:	mov    eax,DWORD PTR [ebp-0x3c]
64017420:	push   edx
64017421:	lea    esi,[ebp-0x2c]
64017424:	mov    DWORD PTR [ebp-0x34],0x1
6401742b:	call   0x640170d5
64017430:	jmp    0x64017a03
64017435:	movzx  eax,dx
64017438:	cmp    eax,0x64
6401743b:	jg     0x640175e8
64017441:	je     0x64017667
64017447:	cmp    eax,0x53
6401744a:	jg     0x64017527
64017450:	je     0x640174b1
64017452:	sub    eax,0x41
64017455:	je     0x64017467
64017457:	sub    eax,edi
64017459:	je     0x6401749c
6401745b:	sub    eax,edi
6401745d:	je     0x64017467
6401745f:	sub    eax,edi
64017461:	jne    0x640178e8
64017467:	add    edx,0x20
6401746a:	mov    DWORD PTR [ebp-0x6c],0x1
64017471:	mov    DWORD PTR [ebp-0x24],edx
64017474:	or     DWORD PTR [ebp-0x14],0x40
64017478:	cmp    DWORD PTR [ebp-0x18],0x0
6401747c:	lea    esi,[ebp-0x10]
6401747f:	mov    eax,0x200
64017484:	mov    DWORD PTR [ebp-0x1c],esi
64017487:	mov    DWORD PTR [ebp-0x20],eax
6401748a:	jge    0x6401768b
64017490:	mov    DWORD PTR [ebp-0x18],0x6
64017497:	jmp    0x640176d8
6401749c:	test   WORD PTR [ebp-0x14],0x830
640174a2:	jne    0x64017544
640174a8:	or     DWORD PTR [ebp-0x14],0x20
640174ac:	jmp    0x64017544
640174b1:	test   WORD PTR [ebp-0x14],0x830
640174b7:	jne    0x640174bd
640174b9:	or     DWORD PTR [ebp-0x14],0x20
640174bd:	mov    edi,DWORD PTR [ebp-0x18]
640174c0:	cmp    edi,0xffffffff
640174c3:	jne    0x640174ca
640174c5:	mov    edi,0x7fffffff
640174ca:	add    ebx,0x4
640174cd:	test   BYTE PTR [ebp-0x14],0x20
640174d1:	mov    DWORD PTR [ebp-0x28],ebx
640174d4:	mov    ebx,DWORD PTR [ebx-0x4]
640174d7:	mov    DWORD PTR [ebp-0x1c],ebx
640174da:	je     0x640178bb
640174e0:	test   ebx,ebx
640174e2:	jne    0x640174ec
640174e4:	mov    eax,ds:0x6402d950
640174e9:	mov    DWORD PTR [ebp-0x1c],eax
640174ec:	and    DWORD PTR [ebp-0x20],0x0
640174f0:	test   edi,edi
640174f2:	mov    esi,DWORD PTR [ebp-0x1c]
640174f5:	jle    0x640178e8
640174fb:	mov    al,BYTE PTR [esi]
640174fd:	test   al,al
640174ff:	je     0x640178e8
64017505:	lea    ecx,[ebp-0x64]
64017508:	movzx  eax,al
6401750b:	push   ecx
6401750c:	push   eax
6401750d:	call   0x6401a280
64017512:	test   eax,eax
64017514:	pop    ecx
64017515:	pop    ecx
64017516:	je     0x64017519
64017518:	inc    esi
64017519:	inc    esi
6401751a:	inc    DWORD PTR [ebp-0x20]
6401751d:	cmp    DWORD PTR [ebp-0x20],edi
64017520:	jl     0x640174fb
64017522:	jmp    0x640178e8
64017527:	sub    eax,0x58
6401752a:	je     0x64017773
64017530:	sub    eax,edi
64017532:	je     0x6401759b
64017534:	sub    eax,ecx
64017536:	je     0x64017474
6401753c:	sub    eax,edi
6401753e:	jne    0x640178e8
64017544:	movzx  eax,WORD PTR [ebx]
64017547:	add    ebx,0x4
6401754a:	xor    esi,esi
6401754c:	inc    esi
6401754d:	test   BYTE PTR [ebp-0x14],0x20
64017551:	mov    DWORD PTR [ebp-0x34],esi
64017554:	mov    DWORD PTR [ebp-0x28],ebx
64017557:	mov    DWORD PTR [ebp-0x70],eax
6401755a:	je     0x64017589
6401755c:	mov    BYTE PTR [ebp-0x40],al
6401755f:	lea    eax,[ebp-0x64]
64017562:	push   eax
64017563:	mov    eax,DWORD PTR [ebp-0x64]
64017566:	mov    BYTE PTR [ebp-0x3f],0x0
6401756a:	push   DWORD PTR [eax+0xac]
64017570:	lea    eax,[ebp-0x40]
64017573:	push   eax
64017574:	lea    eax,[ebp-0x10]
64017577:	push   eax
64017578:	call   0x6401cebe
6401757d:	add    esp,0x10
64017580:	test   eax,eax
64017582:	jge    0x6401758d
64017584:	mov    DWORD PTR [ebp-0x48],esi
64017587:	jmp    0x6401758d
64017589:	mov    WORD PTR [ebp-0x10],ax
6401758d:	lea    eax,[ebp-0x10]
64017590:	mov    DWORD PTR [ebp-0x1c],eax
64017593:	mov    DWORD PTR [ebp-0x20],esi
64017596:	jmp    0x640178e8
6401759b:	mov    eax,DWORD PTR [ebx]
6401759d:	add    ebx,0x4
640175a0:	test   eax,eax
640175a2:	mov    DWORD PTR [ebp-0x28],ebx
640175a5:	je     0x640175d4
640175a7:	mov    ecx,DWORD PTR [eax+0x4]
640175aa:	test   ecx,ecx
640175ac:	je     0x640175d4
640175ae:	test   WORD PTR [ebp-0x14],0x800
640175b4:	movsx  eax,WORD PTR [eax]
640175b7:	mov    DWORD PTR [ebp-0x1c],ecx
640175ba:	je     0x640175cb
640175bc:	cdq    
640175bd:	sub    eax,edx
640175bf:	mov    DWORD PTR [ebp-0x34],0x1
640175c6:	jmp    0x640178e3
640175cb:	and    DWORD PTR [ebp-0x34],0x0
640175cf:	jmp    0x640178e5
640175d4:	mov    eax,ds:0x6402d950
640175d9:	mov    DWORD PTR [ebp-0x1c],eax
640175dc:	push   eax
640175dd:	call   0x64014630
640175e2:	pop    ecx
640175e3:	jmp    0x640178e5
640175e8:	cmp    eax,0x70
640175eb:	jg     0x64017778
640175f1:	je     0x6401776c
640175f7:	cmp    eax,0x65
640175fa:	jl     0x640178e8
64017600:	cmp    eax,0x67
64017603:	jle    0x64017474
64017609:	cmp    eax,0x69
6401760c:	je     0x64017667
6401760e:	cmp    eax,0x6e
64017611:	je     0x64017632
64017613:	cmp    eax,0x6f
64017616:	jne    0x640178e8
6401761c:	test   BYTE PTR [ebp-0x14],0x80
64017620:	mov    DWORD PTR [ebp-0x24],0x8
64017627:	je     0x64017672
64017629:	or     DWORD PTR [ebp-0x14],0x200
64017630:	jmp    0x64017672
64017632:	mov    esi,DWORD PTR [ebx]
64017634:	add    ebx,0x4
64017637:	mov    DWORD PTR [ebp-0x28],ebx
6401763a:	call   0x6401cea8
6401763f:	test   eax,eax
64017641:	je     0x64017a1f
64017647:	test   BYTE PTR [ebp-0x14],0x20
6401764b:	je     0x64017656
6401764d:	mov    ax,WORD PTR [ebp-0x2c]
64017651:	mov    WORD PTR [esi],ax
64017654:	jmp    0x6401765b
64017656:	mov    eax,DWORD PTR [ebp-0x2c]
64017659:	mov    DWORD PTR [esi],eax
6401765b:	mov    DWORD PTR [ebp-0x48],0x1
64017662:	jmp    0x640179f1
64017667:	or     DWORD PTR [ebp-0x14],0x40
6401766b:	mov    DWORD PTR [ebp-0x24],0xa
64017672:	test   WORD PTR [ebp-0x14],0x8000
64017678:	je     0x640177c2
6401767e:	mov    eax,DWORD PTR [ebx]
64017680:	mov    edx,DWORD PTR [ebx+0x4]
64017683:	add    ebx,0x8
64017686:	jmp    0x640177fb
6401768b:	jne    0x6401769c
6401768d:	cmp    dx,0x67
64017691:	jne    0x640176d8
64017693:	mov    DWORD PTR [ebp-0x18],0x1
6401769a:	jmp    0x640176d8
6401769c:	cmp    DWORD PTR [ebp-0x18],eax
6401769f:	jle    0x640176a4
640176a1:	mov    DWORD PTR [ebp-0x18],eax
640176a4:	cmp    DWORD PTR [ebp-0x18],0xa3
640176ab:	jle    0x640176d8
640176ad:	mov    edi,DWORD PTR [ebp-0x18]
640176b0:	add    edi,0x15d
640176b6:	push   edi
640176b7:	call   0x64016140
640176bc:	test   eax,eax
640176be:	mov    edx,DWORD PTR [ebp-0x24]
640176c1:	pop    ecx
640176c2:	mov    DWORD PTR [ebp-0x50],eax
640176c5:	je     0x640176d1
640176c7:	mov    DWORD PTR [ebp-0x1c],eax
640176ca:	mov    DWORD PTR [ebp-0x20],edi
640176cd:	mov    esi,eax
640176cf:	jmp    0x640176d8
640176d1:	mov    DWORD PTR [ebp-0x18],0xa3
640176d8:	mov    eax,DWORD PTR [ebx]
640176da:	add    ebx,0x8
640176dd:	mov    DWORD PTR [ebp-0x78],eax
640176e0:	mov    eax,DWORD PTR [ebx-0x4]
640176e3:	mov    DWORD PTR [ebp-0x74],eax
640176e6:	lea    eax,[ebp-0x64]
640176e9:	push   eax
640176ea:	push   DWORD PTR [ebp-0x6c]
640176ed:	movsx  eax,dl
640176f0:	push   DWORD PTR [ebp-0x18]
640176f3:	mov    DWORD PTR [ebp-0x28],ebx
640176f6:	push   eax
640176f7:	push   DWORD PTR [ebp-0x20]
640176fa:	lea    eax,[ebp-0x78]
640176fd:	push   esi
640176fe:	push   eax
640176ff:	push   DWORD PTR ds:0x6402db64
64017705:	call   0x64014d5f
6401770a:	pop    ecx
6401770b:	call   eax
6401770d:	mov    ebx,DWORD PTR [ebp-0x14]
64017710:	add    esp,0x1c
64017713:	and    ebx,0x80
64017719:	je     0x64017736
6401771b:	cmp    DWORD PTR [ebp-0x18],0x0
6401771f:	jne    0x64017736
64017721:	lea    eax,[ebp-0x64]
64017724:	push   eax
64017725:	push   esi
64017726:	push   DWORD PTR ds:0x6402db70
6401772c:	call   0x64014d5f
64017731:	pop    ecx
64017732:	call   eax
64017734:	pop    ecx
64017735:	pop    ecx
64017736:	cmp    WORD PTR [ebp-0x24],0x67
6401773b:	jne    0x64017756
6401773d:	test   ebx,ebx
6401773f:	jne    0x64017756
64017741:	lea    eax,[ebp-0x64]
64017744:	push   eax
64017745:	push   esi
64017746:	push   DWORD PTR ds:0x6402db6c
6401774c:	call   0x64014d5f
64017751:	pop    ecx
64017752:	call   eax
64017754:	pop    ecx
64017755:	pop    ecx
64017756:	cmp    BYTE PTR [esi],0x2d
64017759:	jne    0x64017766
6401775b:	or     DWORD PTR [ebp-0x14],0x100
64017762:	inc    esi
64017763:	mov    DWORD PTR [ebp-0x1c],esi
64017766:	push   esi
64017767:	jmp    0x640175dd
6401776c:	mov    DWORD PTR [ebp-0x18],0x8
64017773:	mov    DWORD PTR [ebp-0x54],ecx
64017776:	jmp    0x64017799
64017778:	sub    eax,0x73
6401777b:	je     0x640174bd
64017781:	sub    eax,edi
64017783:	je     0x6401766b
64017789:	sub    eax,0x3
6401778c:	jne    0x640178e8
64017792:	mov    DWORD PTR [ebp-0x54],0x27
64017799:	test   BYTE PTR [ebp-0x14],0x80
6401779d:	mov    DWORD PTR [ebp-0x24],0x10
640177a4:	je     0x64017672
640177aa:	mov    eax,DWORD PTR [ebp-0x54]
640177ad:	add    eax,0x51
640177b0:	mov    WORD PTR [ebp-0x44],0x30
640177b6:	mov    WORD PTR [ebp-0x42],ax
640177ba:	mov    DWORD PTR [ebp-0x30],edi
640177bd:	jmp    0x64017672
640177c2:	test   WORD PTR [ebp-0x14],0x1000
640177c8:	jne    0x6401767e
640177ce:	add    ebx,0x4
640177d1:	test   BYTE PTR [ebp-0x14],0x20
640177d5:	je     0x640177ed
640177d7:	test   BYTE PTR [ebp-0x14],0x40
640177db:	mov    DWORD PTR [ebp-0x28],ebx
640177de:	je     0x640177e6
640177e0:	movsx  eax,WORD PTR [ebx-0x4]
640177e4:	jmp    0x640177ea
640177e6:	movzx  eax,WORD PTR [ebx-0x4]
640177ea:	cdq    
640177eb:	jmp    0x640177fe
640177ed:	test   BYTE PTR [ebp-0x14],0x40
640177f1:	mov    eax,DWORD PTR [ebx-0x4]
640177f4:	je     0x640177f9
640177f6:	cdq    
640177f7:	jmp    0x640177fb
640177f9:	xor    edx,edx
640177fb:	mov    DWORD PTR [ebp-0x28],ebx
640177fe:	test   BYTE PTR [ebp-0x14],0x40
64017802:	je     0x6401781c
64017804:	test   edx,edx
64017806:	jg     0x6401781c
64017808:	jl     0x6401780e
6401780a:	test   eax,eax
6401780c:	jae    0x6401781c
6401780e:	neg    eax
64017810:	adc    edx,0x0
64017813:	neg    edx
64017815:	or     DWORD PTR [ebp-0x14],0x100
6401781c:	test   WORD PTR [ebp-0x14],0x9000
64017822:	mov    ebx,edx
64017824:	mov    edi,eax
64017826:	jne    0x6401782a
64017828:	xor    ebx,ebx
6401782a:	cmp    DWORD PTR [ebp-0x18],0x0
6401782e:	jge    0x64017839
64017830:	mov    DWORD PTR [ebp-0x18],0x1
64017837:	jmp    0x6401784a
64017839:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401783d:	mov    eax,0x200
64017842:	cmp    DWORD PTR [ebp-0x18],eax
64017845:	jle    0x6401784a
64017847:	mov    DWORD PTR [ebp-0x18],eax
6401784a:	mov    eax,edi
6401784c:	or     eax,ebx
6401784e:	jne    0x64017853
64017850:	and    DWORD PTR [ebp-0x30],eax
64017853:	lea    esi,[ebp+0x1ef]
64017859:	mov    eax,DWORD PTR [ebp-0x18]
6401785c:	dec    DWORD PTR [ebp-0x18]
6401785f:	test   eax,eax
64017861:	jg     0x64017869
64017863:	mov    eax,edi
64017865:	or     eax,ebx
64017867:	je     0x6401788d
64017869:	mov    eax,DWORD PTR [ebp-0x24]
6401786c:	cdq    
6401786d:	push   edx
6401786e:	push   eax
6401786f:	push   ebx
64017870:	push   edi
64017871:	call   0x64019d50
64017876:	add    ecx,0x30
64017879:	cmp    ecx,0x39
6401787c:	mov    DWORD PTR [ebp-0x7c],ebx
6401787f:	mov    edi,eax
64017881:	mov    ebx,edx
64017883:	jle    0x64017888
64017885:	add    ecx,DWORD PTR [ebp-0x54]
64017888:	mov    BYTE PTR [esi],cl
6401788a:	dec    esi
6401788b:	jmp    0x64017859
6401788d:	lea    eax,[ebp+0x1ef]
64017893:	sub    eax,esi
64017895:	inc    esi
64017896:	test   WORD PTR [ebp-0x14],0x200
6401789c:	mov    DWORD PTR [ebp-0x20],eax
6401789f:	mov    DWORD PTR [ebp-0x1c],esi
640178a2:	je     0x640178e8
640178a4:	test   eax,eax
640178a6:	je     0x640178af
640178a8:	mov    ecx,esi
640178aa:	cmp    BYTE PTR [ecx],0x30
640178ad:	je     0x640178e8
640178af:	dec    DWORD PTR [ebp-0x1c]
640178b2:	mov    ecx,DWORD PTR [ebp-0x1c]
640178b5:	mov    BYTE PTR [ecx],0x30
640178b8:	inc    eax
640178b9:	jmp    0x640178e5
640178bb:	test   ebx,ebx
640178bd:	jne    0x640178c7
640178bf:	mov    eax,ds:0x6402d954
640178c4:	mov    DWORD PTR [ebp-0x1c],eax
640178c7:	mov    eax,DWORD PTR [ebp-0x1c]
640178ca:	mov    DWORD PTR [ebp-0x34],0x1
640178d1:	jmp    0x640178dc
640178d3:	dec    edi
640178d4:	cmp    WORD PTR [eax],0x0
640178d8:	je     0x640178e0
640178da:	inc    eax
640178db:	inc    eax
640178dc:	test   edi,edi
640178de:	jne    0x640178d3
640178e0:	sub    eax,DWORD PTR [ebp-0x1c]
640178e3:	sar    eax,1
640178e5:	mov    DWORD PTR [ebp-0x20],eax
640178e8:	cmp    DWORD PTR [ebp-0x48],0x0
640178ec:	jne    0x640179f1
640178f2:	mov    eax,DWORD PTR [ebp-0x14]
640178f5:	test   al,0x40
640178f7:	je     0x64017924
640178f9:	test   ax,0x100
640178fd:	je     0x64017907
640178ff:	mov    WORD PTR [ebp-0x44],0x2d
64017905:	jmp    0x6401791d
64017907:	test   al,0x1
64017909:	je     0x64017913
6401790b:	mov    WORD PTR [ebp-0x44],0x2b
64017911:	jmp    0x6401791d
64017913:	test   al,0x2
64017915:	je     0x64017924
64017917:	mov    WORD PTR [ebp-0x44],0x20
6401791d:	mov    DWORD PTR [ebp-0x30],0x1
64017924:	mov    ebx,DWORD PTR [ebp-0x38]
64017927:	mov    esi,DWORD PTR [ebp-0x20]
6401792a:	sub    ebx,esi
6401792c:	sub    ebx,DWORD PTR [ebp-0x30]
6401792f:	test   BYTE PTR [ebp-0x14],0xc
64017933:	jne    0x64017946
64017935:	push   DWORD PTR [ebp-0x3c]
64017938:	lea    eax,[ebp-0x2c]
6401793b:	push   ebx
6401793c:	push   0x20
6401793e:	call   0x640170fa
64017943:	add    esp,0xc
64017946:	push   DWORD PTR [ebp-0x30]
64017949:	mov    edi,DWORD PTR [ebp-0x3c]
6401794c:	lea    eax,[ebp-0x2c]
6401794f:	lea    ecx,[ebp-0x44]
64017952:	call   0x6401711f
64017957:	test   BYTE PTR [ebp-0x14],0x8
6401795b:	pop    ecx
6401795c:	je     0x64017973
6401795e:	test   BYTE PTR [ebp-0x14],0x4
64017962:	jne    0x64017973
64017964:	push   edi
64017965:	push   ebx
64017966:	push   0x30
64017968:	lea    eax,[ebp-0x2c]
6401796b:	call   0x640170fa
64017970:	add    esp,0xc
64017973:	cmp    DWORD PTR [ebp-0x34],0x0
64017977:	jne    0x640179c7
64017979:	test   esi,esi
6401797b:	jle    0x640179c7
6401797d:	mov    edi,DWORD PTR [ebp-0x1c]
64017980:	mov    DWORD PTR [ebp-0x24],esi
64017983:	dec    DWORD PTR [ebp-0x24]
64017986:	lea    eax,[ebp-0x64]
64017989:	push   eax
6401798a:	mov    eax,DWORD PTR [ebp-0x64]
6401798d:	push   DWORD PTR [eax+0xac]
64017993:	lea    eax,[ebp-0x70]
64017996:	push   edi
64017997:	push   eax
64017998:	call   0x6401cebe
6401799d:	add    esp,0x10
640179a0:	test   eax,eax
640179a2:	mov    DWORD PTR [ebp-0x7c],eax
640179a5:	jle    0x640179c1
640179a7:	push   DWORD PTR [ebp-0x70]
640179aa:	mov    eax,DWORD PTR [ebp-0x3c]
640179ad:	lea    esi,[ebp-0x2c]
640179b0:	call   0x640170d5
640179b5:	add    edi,DWORD PTR [ebp-0x7c]
640179b8:	cmp    DWORD PTR [ebp-0x24],0x0
640179bc:	pop    ecx
640179bd:	jg     0x64017983
640179bf:	jmp    0x640179d4
640179c1:	or     DWORD PTR [ebp-0x2c],0xffffffff
640179c5:	jmp    0x640179d4
640179c7:	mov    ecx,DWORD PTR [ebp-0x1c]
640179ca:	push   esi
640179cb:	lea    eax,[ebp-0x2c]
640179ce:	call   0x6401711f
640179d3:	pop    ecx
640179d4:	cmp    DWORD PTR [ebp-0x2c],0x0
640179d8:	jl     0x640179f1
640179da:	test   BYTE PTR [ebp-0x14],0x4
640179de:	je     0x640179f1
640179e0:	push   DWORD PTR [ebp-0x3c]
640179e3:	lea    eax,[ebp-0x2c]
640179e6:	push   ebx
640179e7:	push   0x20
640179e9:	call   0x640170fa
640179ee:	add    esp,0xc
640179f1:	cmp    DWORD PTR [ebp-0x50],0x0
640179f5:	je     0x64017a04
640179f7:	push   DWORD PTR [ebp-0x50]
640179fa:	call   0x64013d06
640179ff:	and    DWORD PTR [ebp-0x50],0x0
64017a03:	pop    ecx
64017a04:	mov    esi,DWORD PTR [ebp-0x4c]
64017a07:	movzx  eax,WORD PTR [esi]
64017a0a:	test   ax,ax
64017a0d:	mov    DWORD PTR [ebp-0x24],eax
64017a10:	je     0x64017a36
64017a12:	mov    ecx,DWORD PTR [ebp-0x68]
64017a15:	mov    ebx,DWORD PTR [ebp-0x28]
64017a18:	mov    edx,eax
64017a1a:	jmp    0x64017219
64017a1f:	call   0x64014c30
64017a24:	mov    DWORD PTR [eax],0x16
64017a2a:	xor    eax,eax
64017a2c:	push   eax
64017a2d:	push   eax
64017a2e:	push   eax
64017a2f:	push   eax
64017a30:	push   eax
64017a31:	jmp    0x640171de
64017a36:	cmp    BYTE PTR [ebp-0x58],0x0
64017a3a:	je     0x64017a43
64017a3c:	mov    eax,DWORD PTR [ebp-0x5c]
64017a3f:	and    DWORD PTR [eax+0x70],0xfffffffd
64017a43:	mov    eax,DWORD PTR [ebp-0x2c]
64017a46:	mov    ecx,DWORD PTR [ebp+0x3f0]
64017a4c:	pop    edi
64017a4d:	pop    esi
64017a4e:	xor    ecx,ebp
64017a50:	pop    ebx
64017a51:	call   0x64012e6c
64017a56:	add    ebp,0x3f4
64017a5c:	leave  
64017a5d:	ret    
64017a5e:	sbb    eax,0x65640174
64017a63:	jb     0x64017a66
64017a65:	xor    BYTE PTR fs:[edx+0x1],0x64
64017a6a:	shl    BYTE PTR [edx+0x1],1
64017a6d:	or     esi,DWORD PTR fs:[ebx+0x1]
64017a71:	fs adc al,0x73
64017a74:	add    DWORD PTR [esp+ecx*2+0x73],esp
64017a78:	add    DWORD PTR [ebp+esi*1+0x74],esp
64017a7c:	add    DWORD PTR [ebp+edx*2-0x73],esp
64017a80:	lods   al,BYTE PTR ds:[esi]
64017a81:	and    al,0xc
64017a83:	cld    
64017a84:	(bad)  
64017a85:	inc    DWORD PTR [ecx+0x474ec]
64017a8b:	add    BYTE PTR [ecx+0x6402d09c],ah
64017a91:	xor    eax,ebp
64017a93:	mov    DWORD PTR [ebp+0x3f0],eax
64017a99:	push   ebx
64017a9a:	mov    ebx,DWORD PTR [ebp+0x408]
64017aa0:	push   esi
64017aa1:	mov    esi,DWORD PTR [ebp+0x3fc]
64017aa7:	xor    eax,eax
64017aa9:	push   edi
64017aaa:	push   DWORD PTR [ebp+0x404]
64017ab0:	mov    edi,DWORD PTR [ebp+0x400]
64017ab6:	lea    ecx,[ebp-0x58]
64017ab9:	mov    DWORD PTR [ebp-0x48],esi
64017abc:	mov    DWORD PTR [ebp-0x24],ebx
64017abf:	mov    DWORD PTR [ebp-0x60],eax
64017ac2:	mov    DWORD PTR [ebp-0x14],eax
64017ac5:	mov    DWORD PTR [ebp-0x38],eax
64017ac8:	mov    DWORD PTR [ebp-0x18],eax
64017acb:	mov    DWORD PTR [ebp-0x30],eax
64017ace:	mov    DWORD PTR [ebp-0x5c],eax
64017ad1:	mov    DWORD PTR [ebp-0x34],eax
64017ad4:	call   0x6401300f
64017ad9:	test   esi,esi
64017adb:	jne    0x64017b0c
64017add:	call   0x64014c30
64017ae2:	mov    DWORD PTR [eax],0x16
64017ae8:	xor    eax,eax
64017aea:	push   eax
64017aeb:	push   eax
64017aec:	push   eax
64017aed:	push   eax
64017aee:	push   eax
64017aef:	call   0x640129a4
64017af4:	add    esp,0x14
64017af7:	cmp    BYTE PTR [ebp-0x4c],0x0
64017afb:	je     0x64017b04
64017afd:	mov    eax,DWORD PTR [ebp-0x50]
64017b00:	and    DWORD PTR [eax+0x70],0xfffffffd
64017b04:	or     eax,0xffffffff
64017b07:	jmp    0x64018362
64017b0c:	xor    esi,esi
64017b0e:	cmp    edi,esi
64017b10:	jne    0x64017b24
64017b12:	call   0x64014c30
64017b17:	push   esi
64017b18:	push   esi
64017b19:	push   esi
64017b1a:	push   esi
64017b1b:	mov    DWORD PTR [eax],0x16
64017b21:	push   esi
64017b22:	jmp    0x64017aef
64017b24:	movzx  ecx,WORD PTR [edi]
64017b27:	cmp    cx,si
64017b2a:	mov    DWORD PTR [ebp-0x2c],esi
64017b2d:	mov    DWORD PTR [ebp-0x20],esi
64017b30:	mov    DWORD PTR [ebp-0x40],esi
64017b33:	mov    DWORD PTR [ebp-0x64],esi
64017b36:	mov    DWORD PTR [ebp-0x28],ecx
64017b39:	je     0x64018352
64017b3f:	push   0x2
64017b41:	pop    esi
64017b42:	add    edi,esi
64017b44:	xor    eax,eax
64017b46:	cmp    DWORD PTR [ebp-0x2c],eax
64017b49:	mov    DWORD PTR [ebp-0x6c],edi
64017b4c:	jl     0x64018342
64017b52:	lea    edx,[ecx-0x20]
64017b55:	cmp    dx,0x58
64017b59:	ja     0x64017b68
64017b5b:	movzx  eax,cx
64017b5e:	movzx  eax,BYTE PTR [eax+0x640274a0]
64017b65:	and    eax,0xf
64017b68:	mov    edx,DWORD PTR [ebp-0x40]
64017b6b:	imul   eax,eax,0x9
64017b6e:	movzx  eax,BYTE PTR [eax+edx*1+0x640274c0]
64017b76:	push   0x8
64017b78:	shr    eax,0x4
64017b7b:	pop    edx
64017b7c:	cmp    eax,edx
64017b7e:	mov    DWORD PTR [ebp-0x40],eax
64017b81:	je     0x64017add
64017b87:	cmp    eax,0x7
64017b8a:	ja     0x6401832a
64017b90:	jmp    DWORD PTR [eax*4+0x6401837a]
64017b97:	xor    eax,eax
64017b99:	or     DWORD PTR [ebp-0x18],0xffffffff
64017b9d:	mov    DWORD PTR [ebp-0x68],eax
64017ba0:	mov    DWORD PTR [ebp-0x5c],eax
64017ba3:	mov    DWORD PTR [ebp-0x38],eax
64017ba6:	mov    DWORD PTR [ebp-0x30],eax
64017ba9:	mov    DWORD PTR [ebp-0x14],eax
64017bac:	mov    DWORD PTR [ebp-0x34],eax
64017baf:	jmp    0x64018330
64017bb4:	movzx  eax,cx
64017bb7:	sub    eax,0x20
64017bba:	je     0x64017bf8
64017bbc:	sub    eax,0x3
64017bbf:	je     0x64017bec
64017bc1:	sub    eax,edx
64017bc3:	je     0x64017be3
64017bc5:	sub    eax,esi
64017bc7:	je     0x64017bda
64017bc9:	sub    eax,0x3
64017bcc:	jne    0x6401832a
64017bd2:	or     DWORD PTR [ebp-0x14],edx
64017bd5:	jmp    0x64018330
64017bda:	or     DWORD PTR [ebp-0x14],0x4
64017bde:	jmp    0x64018330
64017be3:	or     DWORD PTR [ebp-0x14],0x1
64017be7:	jmp    0x64018330
64017bec:	or     DWORD PTR [ebp-0x14],0x80
64017bf3:	jmp    0x64018330
64017bf8:	or     DWORD PTR [ebp-0x14],esi
64017bfb:	jmp    0x64018330
64017c00:	cmp    cx,0x2a
64017c04:	jne    0x64017c25
64017c06:	mov    eax,DWORD PTR [ebx]
64017c08:	add    ebx,0x4
64017c0b:	test   eax,eax
64017c0d:	mov    DWORD PTR [ebp-0x24],ebx
64017c10:	mov    DWORD PTR [ebp-0x38],eax
64017c13:	jge    0x64018330
64017c19:	or     DWORD PTR [ebp-0x14],0x4
64017c1d:	neg    DWORD PTR [ebp-0x38]
64017c20:	jmp    0x64018330
64017c25:	mov    eax,DWORD PTR [ebp-0x38]
64017c28:	imul   eax,eax,0xa
64017c2b:	movzx  ecx,cx
64017c2e:	lea    eax,[eax+ecx*1-0x30]
64017c32:	mov    DWORD PTR [ebp-0x38],eax
64017c35:	jmp    0x64018330
64017c3a:	and    DWORD PTR [ebp-0x18],0x0
64017c3e:	jmp    0x64018330
64017c43:	cmp    cx,0x2a
64017c47:	jne    0x64017c65
64017c49:	mov    eax,DWORD PTR [ebx]
64017c4b:	add    ebx,0x4
64017c4e:	test   eax,eax
64017c50:	mov    DWORD PTR [ebp-0x24],ebx
64017c53:	mov    DWORD PTR [ebp-0x18],eax
64017c56:	jge    0x64018330
64017c5c:	or     DWORD PTR [ebp-0x18],0xffffffff
64017c60:	jmp    0x64018330
64017c65:	mov    eax,DWORD PTR [ebp-0x18]
64017c68:	imul   eax,eax,0xa
64017c6b:	movzx  ecx,cx
64017c6e:	lea    eax,[eax+ecx*1-0x30]
64017c72:	mov    DWORD PTR [ebp-0x18],eax
64017c75:	jmp    0x64018330
64017c7a:	movzx  eax,cx
64017c7d:	cmp    eax,0x49
64017c80:	je     0x64017cc7
64017c82:	cmp    eax,0x68
64017c85:	je     0x64017cbe
64017c87:	cmp    eax,0x6c
64017c8a:	je     0x64017ca1
64017c8c:	cmp    eax,0x77
64017c8f:	jne    0x64018330
64017c95:	or     DWORD PTR [ebp-0x14],0x800
64017c9c:	jmp    0x64018330
64017ca1:	cmp    WORD PTR [edi],0x6c
64017ca5:	jne    0x64017cb5
64017ca7:	add    edi,esi
64017ca9:	or     DWORD PTR [ebp-0x14],0x1000
64017cb0:	jmp    0x64018330
64017cb5:	or     DWORD PTR [ebp-0x14],0x10
64017cb9:	jmp    0x64018330
64017cbe:	or     DWORD PTR [ebp-0x14],0x20
64017cc2:	jmp    0x64018330
64017cc7:	movzx  eax,WORD PTR [edi]
64017cca:	cmp    ax,0x36
64017cce:	jne    0x64017ce6
64017cd0:	cmp    WORD PTR [edi+0x2],0x34
64017cd5:	jne    0x64017ce6
64017cd7:	add    edi,0x4
64017cda:	or     DWORD PTR [ebp-0x14],0x8000
64017ce1:	jmp    0x64018330
64017ce6:	cmp    ax,0x33
64017cea:	jne    0x64017d02
64017cec:	cmp    WORD PTR [edi+0x2],0x32
64017cf1:	jne    0x64017d02
64017cf3:	add    edi,0x4
64017cf6:	and    DWORD PTR [ebp-0x14],0xffff7fff
64017cfd:	jmp    0x64018330
64017d02:	cmp    ax,0x64
64017d06:	je     0x64018330
64017d0c:	cmp    ax,0x69
64017d10:	je     0x64018330
64017d16:	cmp    ax,0x6f
64017d1a:	je     0x64018330
64017d20:	cmp    ax,0x75
64017d24:	je     0x64018330
64017d2a:	cmp    ax,0x78
64017d2e:	je     0x64018330
64017d34:	cmp    ax,0x58
64017d38:	je     0x64018330
64017d3e:	and    DWORD PTR [ebp-0x40],0x0
64017d42:	mov    eax,DWORD PTR [ebp-0x48]
64017d45:	push   ecx
64017d46:	lea    esi,[ebp-0x2c]
64017d49:	mov    DWORD PTR [ebp-0x34],0x1
64017d50:	call   0x640170d5
64017d55:	pop    ecx
64017d56:	jmp    0x64018330
64017d5b:	movzx  eax,cx
64017d5e:	cmp    eax,0x64
64017d61:	jg     0x64017f0f
64017d67:	je     0x64017f8a
64017d6d:	cmp    eax,0x53
64017d70:	jg     0x64017e4d
64017d76:	je     0x64017dd7
64017d78:	sub    eax,0x41
64017d7b:	je     0x64017d8d
64017d7d:	sub    eax,esi
64017d7f:	je     0x64017dc2
64017d81:	sub    eax,esi
64017d83:	je     0x64017d8d
64017d85:	sub    eax,esi
64017d87:	jne    0x6401820e
64017d8d:	add    ecx,0x20
64017d90:	mov    DWORD PTR [ebp-0x68],0x1
64017d97:	mov    DWORD PTR [ebp-0x28],ecx
64017d9a:	or     DWORD PTR [ebp-0x14],0x40
64017d9e:	cmp    DWORD PTR [ebp-0x18],0x0
64017da2:	lea    esi,[ebp-0x10]
64017da5:	mov    eax,0x200
64017daa:	mov    DWORD PTR [ebp-0x1c],esi
64017dad:	mov    DWORD PTR [ebp-0x20],eax
64017db0:	jge    0x64017fae
64017db6:	mov    DWORD PTR [ebp-0x18],0x6
64017dbd:	jmp    0x64017ffe
64017dc2:	test   WORD PTR [ebp-0x14],0x830
64017dc8:	jne    0x64017e6b
64017dce:	or     DWORD PTR [ebp-0x14],0x20
64017dd2:	jmp    0x64017e6b
64017dd7:	test   WORD PTR [ebp-0x14],0x830
64017ddd:	jne    0x64017de3
64017ddf:	or     DWORD PTR [ebp-0x14],0x20
64017de3:	mov    edi,DWORD PTR [ebp-0x18]
64017de6:	cmp    edi,0xffffffff
64017de9:	jne    0x64017df0
64017deb:	mov    edi,0x7fffffff
64017df0:	add    ebx,0x4
64017df3:	test   BYTE PTR [ebp-0x14],0x20
64017df7:	mov    DWORD PTR [ebp-0x24],ebx
64017dfa:	mov    ebx,DWORD PTR [ebx-0x4]
64017dfd:	mov    DWORD PTR [ebp-0x1c],ebx
64017e00:	je     0x640181e1
64017e06:	test   ebx,ebx
64017e08:	jne    0x64017e12
64017e0a:	mov    eax,ds:0x6402d950
64017e0f:	mov    DWORD PTR [ebp-0x1c],eax
64017e12:	and    DWORD PTR [ebp-0x20],0x0
64017e16:	test   edi,edi
64017e18:	mov    esi,DWORD PTR [ebp-0x1c]
64017e1b:	jle    0x6401820e
64017e21:	mov    al,BYTE PTR [esi]
64017e23:	test   al,al
64017e25:	je     0x6401820e
64017e2b:	lea    ecx,[ebp-0x58]
64017e2e:	movzx  eax,al
64017e31:	push   ecx
64017e32:	push   eax
64017e33:	call   0x6401a280
64017e38:	test   eax,eax
64017e3a:	pop    ecx
64017e3b:	pop    ecx
64017e3c:	je     0x64017e3f
64017e3e:	inc    esi
64017e3f:	inc    esi
64017e40:	inc    DWORD PTR [ebp-0x20]
64017e43:	cmp    DWORD PTR [ebp-0x20],edi
64017e46:	jl     0x64017e21
64017e48:	jmp    0x6401820e
64017e4d:	sub    eax,0x58
64017e50:	je     0x64018095
64017e56:	sub    eax,esi
64017e58:	je     0x64017ec2
64017e5a:	sub    eax,0x7
64017e5d:	je     0x64017d9a
64017e63:	sub    eax,esi
64017e65:	jne    0x6401820e
64017e6b:	movzx  eax,WORD PTR [ebx]
64017e6e:	add    ebx,0x4
64017e71:	xor    esi,esi
64017e73:	inc    esi
64017e74:	test   BYTE PTR [ebp-0x14],0x20
64017e78:	mov    DWORD PTR [ebp-0x34],esi
64017e7b:	mov    DWORD PTR [ebp-0x24],ebx
64017e7e:	mov    DWORD PTR [ebp-0x70],eax
64017e81:	je     0x64017eb0
64017e83:	mov    BYTE PTR [ebp-0x44],al
64017e86:	lea    eax,[ebp-0x58]
64017e89:	push   eax
64017e8a:	mov    eax,DWORD PTR [ebp-0x58]
64017e8d:	mov    BYTE PTR [ebp-0x43],0x0
64017e91:	push   DWORD PTR [eax+0xac]
64017e97:	lea    eax,[ebp-0x44]
64017e9a:	push   eax
64017e9b:	lea    eax,[ebp-0x10]
64017e9e:	push   eax
64017e9f:	call   0x6401cebe
64017ea4:	add    esp,0x10
64017ea7:	test   eax,eax
64017ea9:	jge    0x64017eb4
64017eab:	mov    DWORD PTR [ebp-0x5c],esi
64017eae:	jmp    0x64017eb4
64017eb0:	mov    WORD PTR [ebp-0x10],ax
64017eb4:	lea    eax,[ebp-0x10]
64017eb7:	mov    DWORD PTR [ebp-0x1c],eax
64017eba:	mov    DWORD PTR [ebp-0x20],esi
64017ebd:	jmp    0x6401820e
64017ec2:	mov    eax,DWORD PTR [ebx]
64017ec4:	add    ebx,0x4
64017ec7:	test   eax,eax
64017ec9:	mov    DWORD PTR [ebp-0x24],ebx
64017ecc:	je     0x64017efb
64017ece:	mov    ecx,DWORD PTR [eax+0x4]
64017ed1:	test   ecx,ecx
64017ed3:	je     0x64017efb
64017ed5:	test   WORD PTR [ebp-0x14],0x800
64017edb:	movsx  eax,WORD PTR [eax]
64017ede:	mov    DWORD PTR [ebp-0x1c],ecx
64017ee1:	je     0x64017ef2
64017ee3:	cdq    
64017ee4:	sub    eax,edx
64017ee6:	mov    DWORD PTR [ebp-0x34],0x1
64017eed:	jmp    0x64018209
64017ef2:	and    DWORD PTR [ebp-0x34],0x0
64017ef6:	jmp    0x6401820b
64017efb:	mov    eax,ds:0x6402d950
64017f00:	mov    DWORD PTR [ebp-0x1c],eax
64017f03:	push   eax
64017f04:	call   0x64014630
64017f09:	pop    ecx
64017f0a:	jmp    0x6401820b
64017f0f:	cmp    eax,0x70
64017f12:	jg     0x6401809e
64017f18:	je     0x64018092
64017f1e:	cmp    eax,0x65
64017f21:	jl     0x6401820e
64017f27:	cmp    eax,0x67
64017f2a:	jle    0x64017d9a
64017f30:	cmp    eax,0x69
64017f33:	je     0x64017f8a
64017f35:	cmp    eax,0x6e
64017f38:	je     0x64017f55
64017f3a:	cmp    eax,0x6f
64017f3d:	jne    0x6401820e
64017f43:	test   BYTE PTR [ebp-0x14],0x80
64017f47:	mov    DWORD PTR [ebp-0x28],edx
64017f4a:	je     0x64017f95
64017f4c:	or     DWORD PTR [ebp-0x14],0x200
64017f53:	jmp    0x64017f95
64017f55:	mov    esi,DWORD PTR [ebx]
64017f57:	add    ebx,0x4
64017f5a:	mov    DWORD PTR [ebp-0x24],ebx
64017f5d:	call   0x6401cea8
64017f62:	test   eax,eax
64017f64:	je     0x64017add
64017f6a:	test   BYTE PTR [ebp-0x14],0x20
64017f6e:	je     0x64017f79
64017f70:	mov    ax,WORD PTR [ebp-0x2c]
64017f74:	mov    WORD PTR [esi],ax
64017f77:	jmp    0x64017f7e
64017f79:	mov    eax,DWORD PTR [ebp-0x2c]
64017f7c:	mov    DWORD PTR [esi],eax
64017f7e:	mov    DWORD PTR [ebp-0x5c],0x1
64017f85:	jmp    0x64018317
64017f8a:	or     DWORD PTR [ebp-0x14],0x40
64017f8e:	mov    DWORD PTR [ebp-0x28],0xa
64017f95:	test   WORD PTR [ebp-0x14],0x8000
64017f9b:	je     0x640180e8
64017fa1:	add    ebx,edx
64017fa3:	mov    eax,DWORD PTR [ebx-0x8]
64017fa6:	mov    edx,DWORD PTR [ebx-0x4]
64017fa9:	jmp    0x64018121
64017fae:	jne    0x64017fbf
64017fb0:	cmp    cx,0x67
64017fb4:	jne    0x64017ffe
64017fb6:	mov    DWORD PTR [ebp-0x18],0x1
64017fbd:	jmp    0x64017ffe
64017fbf:	cmp    DWORD PTR [ebp-0x18],eax
64017fc2:	jle    0x64017fc7
64017fc4:	mov    DWORD PTR [ebp-0x18],eax
64017fc7:	cmp    DWORD PTR [ebp-0x18],0xa3
64017fce:	jle    0x64017ffe
64017fd0:	mov    edi,DWORD PTR [ebp-0x18]
64017fd3:	add    edi,0x15d
64017fd9:	push   edi
64017fda:	call   0x64016140
64017fdf:	test   eax,eax
64017fe1:	pop    ecx
64017fe2:	mov    ecx,DWORD PTR [ebp-0x28]
64017fe5:	push   0x8
64017fe7:	mov    DWORD PTR [ebp-0x64],eax
64017fea:	pop    edx
64017feb:	je     0x64017ff7
64017fed:	mov    DWORD PTR [ebp-0x1c],eax
64017ff0:	mov    DWORD PTR [ebp-0x20],edi
64017ff3:	mov    esi,eax
64017ff5:	jmp    0x64017ffe
64017ff7:	mov    DWORD PTR [ebp-0x18],0xa3
64017ffe:	add    ebx,edx
64018000:	mov    eax,DWORD PTR [ebx-0x8]
64018003:	mov    DWORD PTR [ebp-0x78],eax
64018006:	mov    eax,DWORD PTR [ebx-0x4]
64018009:	mov    DWORD PTR [ebp-0x74],eax
6401800c:	lea    eax,[ebp-0x58]
6401800f:	push   eax
64018010:	push   DWORD PTR [ebp-0x68]
64018013:	movsx  eax,cl
64018016:	push   DWORD PTR [ebp-0x18]
64018019:	mov    DWORD PTR [ebp-0x24],ebx
6401801c:	push   eax
6401801d:	push   DWORD PTR [ebp-0x20]
64018020:	lea    eax,[ebp-0x78]
64018023:	push   esi
64018024:	push   eax
64018025:	push   DWORD PTR ds:0x6402db64
6401802b:	call   0x64014d5f
64018030:	pop    ecx
64018031:	call   eax
64018033:	mov    ebx,DWORD PTR [ebp-0x14]
64018036:	add    esp,0x1c
64018039:	and    ebx,0x80
6401803f:	je     0x6401805c
64018041:	cmp    DWORD PTR [ebp-0x18],0x0
64018045:	jne    0x6401805c
64018047:	lea    eax,[ebp-0x58]
6401804a:	push   eax
6401804b:	push   esi
6401804c:	push   DWORD PTR ds:0x6402db70
64018052:	call   0x64014d5f
64018057:	pop    ecx
64018058:	call   eax
6401805a:	pop    ecx
6401805b:	pop    ecx
6401805c:	cmp    WORD PTR [ebp-0x28],0x67
64018061:	jne    0x6401807c
64018063:	test   ebx,ebx
64018065:	jne    0x6401807c
64018067:	lea    eax,[ebp-0x58]
6401806a:	push   eax
6401806b:	push   esi
6401806c:	push   DWORD PTR ds:0x6402db6c
64018072:	call   0x64014d5f
64018077:	pop    ecx
64018078:	call   eax
6401807a:	pop    ecx
6401807b:	pop    ecx
6401807c:	cmp    BYTE PTR [esi],0x2d
6401807f:	jne    0x6401808c
64018081:	or     DWORD PTR [ebp-0x14],0x100
64018088:	inc    esi
64018089:	mov    DWORD PTR [ebp-0x1c],esi
6401808c:	push   esi
6401808d:	jmp    0x64017f04
64018092:	mov    DWORD PTR [ebp-0x18],edx
64018095:	mov    DWORD PTR [ebp-0x60],0x7
6401809c:	jmp    0x640180bf
6401809e:	sub    eax,0x73
640180a1:	je     0x64017de3
640180a7:	sub    eax,esi
640180a9:	je     0x64017f8e
640180af:	sub    eax,0x3
640180b2:	jne    0x6401820e
640180b8:	mov    DWORD PTR [ebp-0x60],0x27
640180bf:	test   BYTE PTR [ebp-0x14],0x80
640180c3:	mov    DWORD PTR [ebp-0x28],0x10
640180ca:	je     0x64017f95
640180d0:	mov    eax,DWORD PTR [ebp-0x60]
640180d3:	add    eax,0x51
640180d6:	mov    WORD PTR [ebp-0x3c],0x30
640180dc:	mov    WORD PTR [ebp-0x3a],ax
640180e0:	mov    DWORD PTR [ebp-0x30],esi
640180e3:	jmp    0x64017f95
640180e8:	test   WORD PTR [ebp-0x14],0x1000
640180ee:	jne    0x64017fa1
640180f4:	add    ebx,0x4
640180f7:	test   BYTE PTR [ebp-0x14],0x20
640180fb:	je     0x64018113
640180fd:	test   BYTE PTR [ebp-0x14],0x40
64018101:	mov    DWORD PTR [ebp-0x24],ebx
64018104:	je     0x6401810c
64018106:	movsx  eax,WORD PTR [ebx-0x4]
6401810a:	jmp    0x64018110
6401810c:	movzx  eax,WORD PTR [ebx-0x4]
64018110:	cdq    
64018111:	jmp    0x64018124
64018113:	test   BYTE PTR [ebp-0x14],0x40
64018117:	mov    eax,DWORD PTR [ebx-0x4]
6401811a:	je     0x6401811f
6401811c:	cdq    
6401811d:	jmp    0x64018121
6401811f:	xor    edx,edx
64018121:	mov    DWORD PTR [ebp-0x24],ebx
64018124:	test   BYTE PTR [ebp-0x14],0x40
64018128:	je     0x64018142
6401812a:	test   edx,edx
6401812c:	jg     0x64018142
6401812e:	jl     0x64018134
64018130:	test   eax,eax
64018132:	jae    0x64018142
64018134:	neg    eax
64018136:	adc    edx,0x0
64018139:	neg    edx
6401813b:	or     DWORD PTR [ebp-0x14],0x100
64018142:	test   WORD PTR [ebp-0x14],0x9000
64018148:	mov    ebx,edx
6401814a:	mov    edi,eax
6401814c:	jne    0x64018150
6401814e:	xor    ebx,ebx
64018150:	cmp    DWORD PTR [ebp-0x18],0x0
64018154:	jge    0x6401815f
64018156:	mov    DWORD PTR [ebp-0x18],0x1
6401815d:	jmp    0x64018170
6401815f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64018163:	mov    eax,0x200
64018168:	cmp    DWORD PTR [ebp-0x18],eax
6401816b:	jle    0x64018170
6401816d:	mov    DWORD PTR [ebp-0x18],eax
64018170:	mov    eax,edi
64018172:	or     eax,ebx
64018174:	jne    0x64018179
64018176:	and    DWORD PTR [ebp-0x30],eax
64018179:	lea    esi,[ebp+0x1ef]
6401817f:	mov    eax,DWORD PTR [ebp-0x18]
64018182:	dec    DWORD PTR [ebp-0x18]
64018185:	test   eax,eax
64018187:	jg     0x6401818f
64018189:	mov    eax,edi
6401818b:	or     eax,ebx
6401818d:	je     0x640181b3
6401818f:	mov    eax,DWORD PTR [ebp-0x28]
64018192:	cdq    
64018193:	push   edx
64018194:	push   eax
64018195:	push   ebx
64018196:	push   edi
64018197:	call   0x64019d50
6401819c:	add    ecx,0x30
6401819f:	cmp    ecx,0x39
640181a2:	mov    DWORD PTR [ebp-0x7c],ebx
640181a5:	mov    edi,eax
640181a7:	mov    ebx,edx
640181a9:	jle    0x640181ae
640181ab:	add    ecx,DWORD PTR [ebp-0x60]
640181ae:	mov    BYTE PTR [esi],cl
640181b0:	dec    esi
640181b1:	jmp    0x6401817f
640181b3:	lea    eax,[ebp+0x1ef]
640181b9:	sub    eax,esi
640181bb:	inc    esi
640181bc:	test   WORD PTR [ebp-0x14],0x200
640181c2:	mov    DWORD PTR [ebp-0x20],eax
640181c5:	mov    DWORD PTR [ebp-0x1c],esi
640181c8:	je     0x6401820e
640181ca:	test   eax,eax
640181cc:	je     0x640181d5
640181ce:	mov    ecx,esi
640181d0:	cmp    BYTE PTR [ecx],0x30
640181d3:	je     0x6401820e
640181d5:	dec    DWORD PTR [ebp-0x1c]
640181d8:	mov    ecx,DWORD PTR [ebp-0x1c]
640181db:	mov    BYTE PTR [ecx],0x30
640181de:	inc    eax
640181df:	jmp    0x6401820b
640181e1:	test   ebx,ebx
640181e3:	jne    0x640181ed
640181e5:	mov    eax,ds:0x6402d954
640181ea:	mov    DWORD PTR [ebp-0x1c],eax
640181ed:	mov    eax,DWORD PTR [ebp-0x1c]
640181f0:	mov    DWORD PTR [ebp-0x34],0x1
640181f7:	jmp    0x64018202
640181f9:	dec    edi
640181fa:	cmp    WORD PTR [eax],0x0
640181fe:	je     0x64018206
64018200:	add    eax,esi
64018202:	test   edi,edi
64018204:	jne    0x640181f9
64018206:	sub    eax,DWORD PTR [ebp-0x1c]
64018209:	sar    eax,1
6401820b:	mov    DWORD PTR [ebp-0x20],eax
6401820e:	cmp    DWORD PTR [ebp-0x5c],0x0
64018212:	jne    0x64018317
64018218:	mov    eax,DWORD PTR [ebp-0x14]
6401821b:	test   al,0x40
6401821d:	je     0x6401824a
6401821f:	test   ax,0x100
64018223:	je     0x6401822d
64018225:	mov    WORD PTR [ebp-0x3c],0x2d
6401822b:	jmp    0x64018243
6401822d:	test   al,0x1
6401822f:	je     0x64018239
64018231:	mov    WORD PTR [ebp-0x3c],0x2b
64018237:	jmp    0x64018243
64018239:	test   al,0x2
6401823b:	je     0x6401824a
6401823d:	mov    WORD PTR [ebp-0x3c],0x20
64018243:	mov    DWORD PTR [ebp-0x30],0x1
6401824a:	mov    ebx,DWORD PTR [ebp-0x38]
6401824d:	mov    esi,DWORD PTR [ebp-0x20]
64018250:	sub    ebx,esi
64018252:	sub    ebx,DWORD PTR [ebp-0x30]
64018255:	test   BYTE PTR [ebp-0x14],0xc
64018259:	jne    0x6401826c
6401825b:	push   DWORD PTR [ebp-0x48]
6401825e:	lea    eax,[ebp-0x2c]
64018261:	push   ebx
64018262:	push   0x20
64018264:	call   0x640170fa
64018269:	add    esp,0xc
6401826c:	push   DWORD PTR [ebp-0x30]
6401826f:	mov    edi,DWORD PTR [ebp-0x48]
64018272:	lea    eax,[ebp-0x2c]
64018275:	lea    ecx,[ebp-0x3c]
64018278:	call   0x6401711f
6401827d:	test   BYTE PTR [ebp-0x14],0x8
64018281:	pop    ecx
64018282:	je     0x64018299
64018284:	test   BYTE PTR [ebp-0x14],0x4
64018288:	jne    0x64018299
6401828a:	push   edi
6401828b:	push   ebx
6401828c:	push   0x30
6401828e:	lea    eax,[ebp-0x2c]
64018291:	call   0x640170fa
64018296:	add    esp,0xc
64018299:	cmp    DWORD PTR [ebp-0x34],0x0
6401829d:	jne    0x640182ed
6401829f:	test   esi,esi
640182a1:	jle    0x640182ed
640182a3:	mov    edi,DWORD PTR [ebp-0x1c]
640182a6:	mov    DWORD PTR [ebp-0x28],esi
640182a9:	dec    DWORD PTR [ebp-0x28]
640182ac:	lea    eax,[ebp-0x58]
640182af:	push   eax
640182b0:	mov    eax,DWORD PTR [ebp-0x58]
640182b3:	push   DWORD PTR [eax+0xac]
640182b9:	lea    eax,[ebp-0x70]
640182bc:	push   edi
640182bd:	push   eax
640182be:	call   0x6401cebe
640182c3:	add    esp,0x10
640182c6:	test   eax,eax
640182c8:	mov    DWORD PTR [ebp-0x7c],eax
640182cb:	jle    0x640182e7
640182cd:	push   DWORD PTR [ebp-0x70]
640182d0:	mov    eax,DWORD PTR [ebp-0x48]
640182d3:	lea    esi,[ebp-0x2c]
640182d6:	call   0x640170d5
640182db:	add    edi,DWORD PTR [ebp-0x7c]
640182de:	cmp    DWORD PTR [ebp-0x28],0x0
640182e2:	pop    ecx
640182e3:	jg     0x640182a9
640182e5:	jmp    0x640182fa
640182e7:	or     DWORD PTR [ebp-0x2c],0xffffffff
640182eb:	jmp    0x640182fa
640182ed:	mov    ecx,DWORD PTR [ebp-0x1c]
640182f0:	push   esi
640182f1:	lea    eax,[ebp-0x2c]
640182f4:	call   0x6401711f
640182f9:	pop    ecx
640182fa:	cmp    DWORD PTR [ebp-0x2c],0x0
640182fe:	jl     0x64018317
64018300:	test   BYTE PTR [ebp-0x14],0x4
64018304:	je     0x64018317
64018306:	push   DWORD PTR [ebp-0x48]
64018309:	lea    eax,[ebp-0x2c]
6401830c:	push   ebx
6401830d:	push   0x20
6401830f:	call   0x640170fa
64018314:	add    esp,0xc
64018317:	cmp    DWORD PTR [ebp-0x64],0x0
6401831b:	je     0x6401832a
6401831d:	push   DWORD PTR [ebp-0x64]
64018320:	call   0x64013d06
64018325:	and    DWORD PTR [ebp-0x64],0x0
64018329:	pop    ecx
6401832a:	mov    edi,DWORD PTR [ebp-0x6c]
6401832d:	mov    ebx,DWORD PTR [ebp-0x24]
64018330:	movzx  eax,WORD PTR [edi]
64018333:	test   ax,ax
64018336:	mov    DWORD PTR [ebp-0x28],eax
64018339:	je     0x64018342
6401833b:	mov    ecx,eax
6401833d:	jmp    0x64017b3f
64018342:	cmp    DWORD PTR [ebp-0x40],0x0
64018346:	je     0x64018352
64018348:	cmp    DWORD PTR [ebp-0x40],0x7
6401834c:	jne    0x64017add
64018352:	cmp    BYTE PTR [ebp-0x4c],0x0
64018356:	je     0x6401835f
64018358:	mov    eax,DWORD PTR [ebp-0x50]
6401835b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401835f:	mov    eax,DWORD PTR [ebp-0x2c]
64018362:	mov    ecx,DWORD PTR [ebp+0x3f0]
64018368:	pop    edi
64018369:	pop    esi
6401836a:	xor    ecx,ebp
6401836c:	pop    ebx
6401836d:	call   0x64012e6c
64018372:	add    ebp,0x3f4
64018378:	leave  
64018379:	ret    
6401837a:	inc    edx
6401837b:	jge    0x6401837e
6401837d:	fs xchg edi,eax
6401837f:	jnp    0x64018382
64018381:	fs mov ah,0x7b
64018384:	add    DWORD PTR [eax+eax*1+0x7c],esp
64018388:	add    DWORD PTR [edx+edi*1+0x7c],esp
6401838c:	add    DWORD PTR [ebx+eax*2+0x7c],esp
64018390:	add    DWORD PTR [edx+edi*2+0x7c],esp
64018394:	add    DWORD PTR [ebx+ebx*2+0x7d],esp
64018398:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401839c:	in     al,dx
6401839d:	sub    esp,0x10
640183a0:	mov    eax,ds:0x6402d09c
640183a5:	xor    eax,ebp
640183a7:	mov    DWORD PTR [ebp-0x4],eax
640183aa:	push   ebx
640183ab:	push   esi
640183ac:	mov    esi,DWORD PTR ds:0x64025158
640183b2:	xor    ebx,ebx
640183b4:	cmp    DWORD PTR ds:0x6402e958,ebx
640183ba:	push   edi
640183bb:	mov    edi,ecx
640183bd:	jne    0x640183f5
640183bf:	push   ebx
640183c0:	push   ebx
640183c1:	push   0x1
640183c3:	push   0x640276c4
640183c8:	push   0x100
640183cd:	push   ebx
640183ce:	call   esi
640183d0:	test   eax,eax
640183d2:	je     0x640183e0
640183d4:	mov    DWORD PTR ds:0x6402e958,0x1
640183de:	jmp    0x640183f5
640183e0:	call   DWORD PTR ds:0x64025044
640183e6:	cmp    eax,0x78
640183e9:	jne    0x640183f5
640183eb:	mov    DWORD PTR ds:0x6402e958,0x2
640183f5:	cmp    DWORD PTR [ebp+0x14],ebx
640183f8:	jle    0x64018417
640183fa:	mov    ecx,DWORD PTR [ebp+0x14]
640183fd:	mov    eax,DWORD PTR [ebp+0x10]
64018400:	dec    ecx
64018401:	cmp    WORD PTR [eax],bx
64018404:	je     0x6401840f
64018406:	inc    eax
64018407:	inc    eax
64018408:	cmp    ecx,ebx
6401840a:	jne    0x64018400
6401840c:	or     ecx,0xffffffff
6401840f:	or     eax,0xffffffff
64018412:	sub    eax,ecx
64018414:	add    DWORD PTR [ebp+0x14],eax
64018417:	mov    eax,ds:0x6402e958
6401841c:	cmp    eax,0x1
6401841f:	jne    0x6401843a
64018421:	push   DWORD PTR [ebp+0x1c]
64018424:	push   DWORD PTR [ebp+0x18]
64018427:	push   DWORD PTR [ebp+0x14]
6401842a:	push   DWORD PTR [ebp+0x10]
6401842d:	push   DWORD PTR [ebp+0xc]
64018430:	push   DWORD PTR [ebp+0x8]
64018433:	call   esi
64018435:	jmp    0x640185e9
6401843a:	cmp    eax,0x2
6401843d:	je     0x64018443
6401843f:	cmp    eax,ebx
64018441:	jne    0x64018495
64018443:	cmp    DWORD PTR [ebp+0x8],ebx
64018446:	mov    DWORD PTR [ebp-0xc],ebx
64018449:	jne    0x64018453
6401844b:	mov    eax,DWORD PTR [edi]
6401844d:	mov    eax,DWORD PTR [eax+0x14]
64018450:	mov    DWORD PTR [ebp+0x8],eax
64018453:	cmp    DWORD PTR [ebp+0x20],ebx
64018456:	jne    0x64018460
64018458:	mov    eax,DWORD PTR [edi]
6401845a:	mov    eax,DWORD PTR [eax+0x4]
6401845d:	mov    DWORD PTR [ebp+0x20],eax
64018460:	push   DWORD PTR [ebp+0x8]
64018463:	call   0x6401d9e2
64018468:	cmp    DWORD PTR [ebp+0x20],eax
6401846b:	pop    ecx
6401846c:	je     0x64018476
6401846e:	cmp    eax,0xffffffff
64018471:	je     0x64018476
64018473:	mov    DWORD PTR [ebp+0x20],eax
64018476:	mov    esi,DWORD PTR ds:0x64025028
6401847c:	push   ebx
6401847d:	push   ebx
6401847e:	push   ebx
6401847f:	push   ebx
64018480:	push   DWORD PTR [ebp+0x14]
64018483:	push   DWORD PTR [ebp+0x10]
64018486:	push   ebx
64018487:	push   DWORD PTR [ebp+0x20]
6401848a:	call   esi
6401848c:	mov    edi,eax
6401848e:	cmp    edi,ebx
64018490:	mov    DWORD PTR [ebp-0x10],edi
64018493:	jne    0x6401849c
64018495:	xor    eax,eax
64018497:	jmp    0x640185e9
6401849c:	jle    0x640184e0
6401849e:	push   0xffffffe0
640184a0:	xor    edx,edx
640184a2:	pop    eax
640184a3:	div    edi
640184a5:	cmp    eax,0x1
640184a8:	jb     0x640184e0
640184aa:	lea    eax,[edi+0x8]
640184ad:	cmp    eax,0x400
640184b2:	ja     0x640184c7
640184b4:	call   0x640135f0
640184b9:	mov    eax,esp
640184bb:	cmp    eax,ebx
640184bd:	je     0x640184db
640184bf:	mov    DWORD PTR [eax],0xcccc
640184c5:	jmp    0x640184d8
640184c7:	push   eax
640184c8:	call   0x64013de3
640184cd:	cmp    eax,ebx
640184cf:	pop    ecx
640184d0:	je     0x640184db
640184d2:	mov    DWORD PTR [eax],0xdddd
640184d8:	add    eax,0x8
640184db:	mov    DWORD PTR [ebp-0x8],eax
640184de:	jmp    0x640184e3
640184e0:	mov    DWORD PTR [ebp-0x8],ebx
640184e3:	cmp    DWORD PTR [ebp-0x8],ebx
640184e6:	je     0x64018495
640184e8:	push   ebx
640184e9:	push   ebx
640184ea:	push   edi
640184eb:	push   DWORD PTR [ebp-0x8]
640184ee:	push   DWORD PTR [ebp+0x14]
640184f1:	push   DWORD PTR [ebp+0x10]
640184f4:	push   ebx
640184f5:	push   DWORD PTR [ebp+0x20]
640184f8:	call   esi
640184fa:	test   eax,eax
640184fc:	je     0x640185dd
64018502:	push   ebx
64018503:	push   ebx
64018504:	push   edi
64018505:	push   DWORD PTR [ebp-0x8]
64018508:	mov    edi,DWORD PTR ds:0x64025154
6401850e:	push   DWORD PTR [ebp+0xc]
64018511:	push   DWORD PTR [ebp+0x8]
64018514:	call   edi
64018516:	mov    esi,eax
64018518:	cmp    esi,ebx
6401851a:	je     0x640185dd
64018520:	jle    0x64018561
64018522:	push   0xffffffe0
64018524:	xor    edx,edx
64018526:	pop    eax
64018527:	div    esi
64018529:	cmp    eax,0x1
6401852c:	jb     0x64018561
6401852e:	lea    eax,[esi+0x8]
64018531:	cmp    eax,0x400
64018536:	ja     0x6401854b
64018538:	call   0x640135f0
6401853d:	mov    eax,esp
6401853f:	cmp    eax,ebx
64018541:	je     0x6401855f
64018543:	mov    DWORD PTR [eax],0xcccc
64018549:	jmp    0x6401855c
6401854b:	push   eax
6401854c:	call   0x64013de3
64018551:	cmp    eax,ebx
64018553:	pop    ecx
64018554:	je     0x6401855f
64018556:	mov    DWORD PTR [eax],0xdddd
6401855c:	add    eax,0x8
6401855f:	mov    ebx,eax
64018561:	test   ebx,ebx
64018563:	je     0x640185dd
64018565:	push   esi
64018566:	push   ebx
64018567:	push   DWORD PTR [ebp-0x10]
6401856a:	push   DWORD PTR [ebp-0x8]
6401856d:	push   DWORD PTR [ebp+0xc]
64018570:	push   DWORD PTR [ebp+0x8]
64018573:	call   edi
64018575:	test   eax,eax
64018577:	je     0x640185d6
64018579:	test   WORD PTR [ebp+0xc],0x400
6401857f:	je     0x640185b5
64018581:	mov    eax,DWORD PTR [ebp+0x1c]
64018584:	xor    edi,edi
64018586:	cmp    eax,edi
64018588:	mov    DWORD PTR [ebp-0xc],esi
6401858b:	je     0x640185d6
6401858d:	cmp    eax,esi
6401858f:	jg     0x64018594
64018591:	lea    esi,[eax-0x1]
64018594:	push   esi
64018595:	push   ebx
64018596:	push   eax
64018597:	push   DWORD PTR [ebp+0x18]
6401859a:	call   0x6401c0c6
6401859f:	add    esp,0x10
640185a2:	test   eax,eax
640185a4:	je     0x640185d6
640185a6:	push   edi
640185a7:	push   edi
640185a8:	push   edi
640185a9:	push   edi
640185aa:	push   edi
640185ab:	call   0x640128a8
640185b0:	add    esp,0x14
640185b3:	jmp    0x640185d6
640185b5:	xor    eax,eax
640185b7:	cmp    DWORD PTR [ebp+0x1c],eax
640185ba:	jne    0x640185c0
640185bc:	push   eax
640185bd:	push   eax
640185be:	jmp    0x640185c6
640185c0:	push   DWORD PTR [ebp+0x1c]
640185c3:	push   DWORD PTR [ebp+0x18]
640185c6:	push   esi
640185c7:	push   ebx
640185c8:	push   0x1
640185ca:	push   DWORD PTR [ebp+0x20]
640185cd:	call   DWORD PTR ds:0x64025024
640185d3:	mov    DWORD PTR [ebp-0xc],eax
640185d6:	push   ebx
640185d7:	call   0x6401337c
640185dc:	pop    ecx
640185dd:	push   DWORD PTR [ebp-0x8]
640185e0:	call   0x6401337c
640185e5:	mov    eax,DWORD PTR [ebp-0xc]
640185e8:	pop    ecx
640185e9:	lea    esp,[ebp-0x1c]
640185ec:	pop    edi
640185ed:	pop    esi
640185ee:	pop    ebx
640185ef:	mov    ecx,DWORD PTR [ebp-0x4]
640185f2:	xor    ecx,ebp
640185f4:	call   0x64012e6c
640185f9:	leave  
640185fa:	ret    
640185fb:	push   ebp
640185fc:	mov    ebp,esp
640185fe:	sub    esp,0x10
64018601:	push   DWORD PTR [ebp+0x8]
64018604:	lea    ecx,[ebp-0x10]
64018607:	call   0x6401300f
6401860c:	push   DWORD PTR [ebp+0x24]
6401860f:	lea    ecx,[ebp-0x10]
64018612:	push   DWORD PTR [ebp+0x20]
64018615:	push   DWORD PTR [ebp+0x1c]
64018618:	push   DWORD PTR [ebp+0x18]
6401861b:	push   DWORD PTR [ebp+0x14]
6401861e:	push   DWORD PTR [ebp+0x10]
64018621:	push   DWORD PTR [ebp+0xc]
64018624:	call   0x6401839a
64018629:	add    esp,0x1c
6401862c:	cmp    BYTE PTR [ebp-0x4],0x0
64018630:	je     0x64018639
64018632:	mov    ecx,DWORD PTR [ebp-0x8]
64018635:	and    DWORD PTR [ecx+0x70],0xfffffffd
64018639:	leave  
6401863a:	ret    
6401863b:	xor    eax,eax
6401863d:	cmp    DWORD PTR [esp+0x8],eax
64018641:	jbe    0x64018656
64018643:	mov    ecx,DWORD PTR [esp+0x4]
64018647:	cmp    WORD PTR [ecx],0x0
6401864b:	je     0x64018656
6401864d:	inc    eax
6401864e:	inc    ecx
6401864f:	inc    ecx
64018650:	cmp    eax,DWORD PTR [esp+0x8]
64018654:	jb     0x64018647
64018656:	ret    
64018657:	push   ebp
64018658:	mov    ebp,esp
6401865a:	sub    esp,0x4
6401865d:	mov    DWORD PTR [ebp-0x4],edi
64018660:	mov    edi,DWORD PTR [ebp+0x8]
64018663:	mov    ecx,DWORD PTR [ebp+0xc]
64018666:	shr    ecx,0x7
64018669:	pxor   xmm0,xmm0
6401866d:	jmp    0x64018677
6401866f:	lea    esp,[esp+0x0]
64018676:	nop
64018677:	movdqa XMMWORD PTR [edi],xmm0
6401867b:	movdqa XMMWORD PTR [edi+0x10],xmm0
64018680:	movdqa XMMWORD PTR [edi+0x20],xmm0
64018685:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401868a:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401868f:	movdqa XMMWORD PTR [edi+0x50],xmm0
64018694:	movdqa XMMWORD PTR [edi+0x60],xmm0
64018699:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401869e:	lea    edi,[edi+0x80]
640186a4:	dec    ecx
640186a5:	jne    0x64018677
640186a7:	mov    edi,DWORD PTR [ebp-0x4]
640186aa:	mov    esp,ebp
640186ac:	pop    ebp
640186ad:	ret    
640186ae:	push   ebp
640186af:	mov    ebp,esp
640186b1:	sub    esp,0x10
640186b4:	mov    DWORD PTR [ebp-0x4],edi
640186b7:	mov    eax,DWORD PTR [ebp+0x8]
640186ba:	cdq    
640186bb:	mov    edi,eax
640186bd:	xor    edi,edx
640186bf:	sub    edi,edx
640186c1:	and    edi,0xf
640186c4:	xor    edi,edx
640186c6:	sub    edi,edx
640186c8:	test   edi,edi
640186ca:	jne    0x64018708
640186cc:	mov    ecx,DWORD PTR [ebp+0x10]
640186cf:	mov    edx,ecx
640186d1:	and    edx,0x7f
640186d4:	mov    DWORD PTR [ebp-0xc],edx
640186d7:	cmp    ecx,edx
640186d9:	je     0x640186ed
640186db:	sub    ecx,edx
640186dd:	push   ecx
640186de:	push   eax
640186df:	call   0x64018657
640186e4:	add    esp,0x8
640186e7:	mov    eax,DWORD PTR [ebp+0x8]
640186ea:	mov    edx,DWORD PTR [ebp-0xc]
640186ed:	test   edx,edx
640186ef:	je     0x64018736
640186f1:	add    eax,DWORD PTR [ebp+0x10]
640186f4:	sub    eax,edx
640186f6:	mov    DWORD PTR [ebp-0x8],eax
640186f9:	xor    eax,eax
640186fb:	mov    edi,DWORD PTR [ebp-0x8]
640186fe:	mov    ecx,DWORD PTR [ebp-0xc]
64018701:	rep stos BYTE PTR es:[edi],al
64018703:	mov    eax,DWORD PTR [ebp+0x8]
64018706:	jmp    0x64018736
64018708:	neg    edi
6401870a:	add    edi,0x10
6401870d:	mov    DWORD PTR [ebp-0x10],edi
64018710:	xor    eax,eax
64018712:	mov    edi,DWORD PTR [ebp+0x8]
64018715:	mov    ecx,DWORD PTR [ebp-0x10]
64018718:	rep stos BYTE PTR es:[edi],al
6401871a:	mov    eax,DWORD PTR [ebp-0x10]
6401871d:	mov    ecx,DWORD PTR [ebp+0x8]
64018720:	mov    edx,DWORD PTR [ebp+0x10]
64018723:	add    ecx,eax
64018725:	sub    edx,eax
64018727:	push   edx
64018728:	push   0x0
6401872a:	push   ecx
6401872b:	call   0x640186ae
64018730:	add    esp,0xc
64018733:	mov    eax,DWORD PTR [ebp+0x8]
64018736:	mov    edi,DWORD PTR [ebp-0x4]
64018739:	mov    esp,ebp
6401873b:	pop    ebp
6401873c:	ret    
6401873d:	and    DWORD PTR ds:0x64032600,0x0
64018744:	call   0x6401dc2b
64018749:	mov    ds:0x64032600,eax
6401874e:	xor    eax,eax
64018750:	ret    
64018751:	int3   
64018752:	int3   
64018753:	int3   
64018754:	int3   
64018755:	int3   
64018756:	int3   
64018757:	int3   
64018758:	int3   
64018759:	int3   
6401875a:	int3   
6401875b:	int3   
6401875c:	int3   
6401875d:	int3   
6401875e:	int3   
6401875f:	int3   
64018760:	push   ecx
64018761:	lea    ecx,[esp+0x4]
64018765:	sub    ecx,eax
64018767:	sbb    eax,eax
64018769:	not    eax
6401876b:	and    ecx,eax
6401876d:	mov    eax,esp
6401876f:	and    eax,0xfffff000
64018774:	cmp    ecx,eax
64018776:	jb     0x64018782
64018778:	mov    eax,ecx
6401877a:	pop    ecx
6401877b:	xchg   esp,eax
6401877c:	mov    eax,DWORD PTR [eax]
6401877e:	mov    DWORD PTR [esp],eax
64018781:	ret    
64018782:	sub    eax,0x1000
64018787:	test   DWORD PTR [eax],eax
64018789:	jmp    0x64018774
6401878b:	push   0x54
6401878d:	push   0x6402a790
64018792:	call   0x64014430
64018797:	xor    edi,edi
64018799:	mov    DWORD PTR [ebp-0x4],edi
6401879c:	lea    eax,[ebp-0x64]
6401879f:	push   eax
640187a0:	call   DWORD PTR ds:0x64025168
640187a6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640187ad:	push   0x40
640187af:	push   0x20
640187b1:	pop    esi
640187b2:	push   esi
640187b3:	call   0x64016180
640187b8:	pop    ecx
640187b9:	pop    ecx
640187ba:	cmp    eax,edi
640187bc:	je     0x640189d6
640187c2:	mov    ds:0x64032500,eax
640187c7:	mov    DWORD PTR ds:0x640324e0,esi
640187cd:	lea    ecx,[eax+0x800]
640187d3:	jmp    0x64018805
640187d5:	mov    BYTE PTR [eax+0x4],0x0
640187d9:	or     DWORD PTR [eax],0xffffffff
640187dc:	mov    BYTE PTR [eax+0x5],0xa
640187e0:	mov    DWORD PTR [eax+0x8],edi
640187e3:	mov    BYTE PTR [eax+0x24],0x0
640187e7:	mov    BYTE PTR [eax+0x25],0xa
640187eb:	mov    BYTE PTR [eax+0x26],0xa
640187ef:	mov    DWORD PTR [eax+0x38],edi
640187f2:	mov    BYTE PTR [eax+0x34],0x0
640187f6:	add    eax,0x40
640187f9:	mov    ecx,DWORD PTR ds:0x64032500
640187ff:	add    ecx,0x800
64018805:	cmp    eax,ecx
64018807:	jb     0x640187d5
64018809:	cmp    WORD PTR [ebp-0x32],di
6401880d:	je     0x6401891d
64018813:	mov    eax,DWORD PTR [ebp-0x30]
64018816:	cmp    eax,edi
64018818:	je     0x6401891d
6401881e:	mov    edi,DWORD PTR [eax]
64018820:	lea    ebx,[eax+0x4]
64018823:	lea    eax,[ebx+edi*1]
64018826:	mov    DWORD PTR [ebp-0x1c],eax
64018829:	mov    esi,0x800
6401882e:	cmp    edi,esi
64018830:	jl     0x64018834
64018832:	mov    edi,esi
64018834:	mov    DWORD PTR [ebp-0x20],0x1
6401883b:	jmp    0x64018898
6401883d:	push   0x40
6401883f:	push   0x20
64018841:	call   0x64016180
64018846:	pop    ecx
64018847:	pop    ecx
64018848:	test   eax,eax
6401884a:	je     0x640188a2
6401884c:	mov    ecx,DWORD PTR [ebp-0x20]
6401884f:	lea    ecx,[ecx*4+0x64032500]
64018856:	mov    DWORD PTR [ecx],eax
64018858:	add    DWORD PTR ds:0x640324e0,0x20
6401885f:	lea    edx,[eax+0x800]
64018865:	jmp    0x64018891
64018867:	mov    BYTE PTR [eax+0x4],0x0
6401886b:	or     DWORD PTR [eax],0xffffffff
6401886e:	mov    BYTE PTR [eax+0x5],0xa
64018872:	and    DWORD PTR [eax+0x8],0x0
64018876:	and    BYTE PTR [eax+0x24],0x80
6401887a:	mov    BYTE PTR [eax+0x25],0xa
6401887e:	mov    BYTE PTR [eax+0x26],0xa
64018882:	and    DWORD PTR [eax+0x38],0x0
64018886:	mov    BYTE PTR [eax+0x34],0x0
6401888a:	add    eax,0x40
6401888d:	mov    edx,DWORD PTR [ecx]
6401888f:	add    edx,esi
64018891:	cmp    eax,edx
64018893:	jb     0x64018867
64018895:	inc    DWORD PTR [ebp-0x20]
64018898:	cmp    DWORD PTR ds:0x640324e0,edi
6401889e:	jl     0x6401883d
640188a0:	jmp    0x640188a8
640188a2:	mov    edi,DWORD PTR ds:0x640324e0
640188a8:	and    DWORD PTR [ebp-0x20],0x0
640188ac:	test   edi,edi
640188ae:	jle    0x6401891d
640188b0:	mov    eax,DWORD PTR [ebp-0x1c]
640188b3:	mov    ecx,DWORD PTR [eax]
640188b5:	cmp    ecx,0xffffffff
640188b8:	je     0x64018910
640188ba:	cmp    ecx,0xfffffffe
640188bd:	je     0x64018910
640188bf:	mov    al,BYTE PTR [ebx]
640188c1:	test   al,0x1
640188c3:	je     0x64018910
640188c5:	test   al,0x8
640188c7:	jne    0x640188d4
640188c9:	push   ecx
640188ca:	call   DWORD PTR ds:0x64025164
640188d0:	test   eax,eax
640188d2:	je     0x64018910
640188d4:	mov    esi,DWORD PTR [ebp-0x20]
640188d7:	mov    eax,esi
640188d9:	sar    eax,0x5
640188dc:	and    esi,0x1f
640188df:	shl    esi,0x6
640188e2:	add    esi,DWORD PTR [eax*4+0x64032500]
640188e9:	mov    eax,DWORD PTR [ebp-0x1c]
640188ec:	mov    eax,DWORD PTR [eax]
640188ee:	mov    DWORD PTR [esi],eax
640188f0:	mov    al,BYTE PTR [ebx]
640188f2:	mov    BYTE PTR [esi+0x4],al
640188f5:	push   0xfa0
640188fa:	lea    eax,[esi+0xc]
640188fd:	push   eax
640188fe:	call   0x6401baf8
64018903:	pop    ecx
64018904:	pop    ecx
64018905:	test   eax,eax
64018907:	je     0x640189d6
6401890d:	inc    DWORD PTR [esi+0x8]
64018910:	inc    DWORD PTR [ebp-0x20]
64018913:	inc    ebx
64018914:	add    DWORD PTR [ebp-0x1c],0x4
64018918:	cmp    DWORD PTR [ebp-0x20],edi
6401891b:	jl     0x640188b0
6401891d:	xor    ebx,ebx
6401891f:	mov    esi,ebx
64018921:	shl    esi,0x6
64018924:	add    esi,DWORD PTR ds:0x64032500
6401892a:	mov    eax,DWORD PTR [esi]
6401892c:	cmp    eax,0xffffffff
6401892f:	je     0x6401893c
64018931:	cmp    eax,0xfffffffe
64018934:	je     0x6401893c
64018936:	or     BYTE PTR [esi+0x4],0x80
6401893a:	jmp    0x640189ae
6401893c:	mov    BYTE PTR [esi+0x4],0x81
64018940:	test   ebx,ebx
64018942:	jne    0x64018949
64018944:	push   0xfffffff6
64018946:	pop    eax
64018947:	jmp    0x64018953
64018949:	mov    eax,ebx
6401894b:	dec    eax
6401894c:	neg    eax
6401894e:	sbb    eax,eax
64018950:	add    eax,0xfffffff5
64018953:	push   eax
64018954:	call   DWORD PTR ds:0x64025160
6401895a:	mov    edi,eax
6401895c:	cmp    edi,0xffffffff
6401895f:	je     0x640189a4
64018961:	test   edi,edi
64018963:	je     0x640189a4
64018965:	push   edi
64018966:	call   DWORD PTR ds:0x64025164
6401896c:	test   eax,eax
6401896e:	je     0x640189a4
64018970:	mov    DWORD PTR [esi],edi
64018972:	and    eax,0xff
64018977:	cmp    eax,0x2
6401897a:	jne    0x64018982
6401897c:	or     BYTE PTR [esi+0x4],0x40
64018980:	jmp    0x6401898b
64018982:	cmp    eax,0x3
64018985:	jne    0x6401898b
64018987:	or     BYTE PTR [esi+0x4],0x8
6401898b:	push   0xfa0
64018990:	lea    eax,[esi+0xc]
64018993:	push   eax
64018994:	call   0x6401baf8
64018999:	pop    ecx
6401899a:	pop    ecx
6401899b:	test   eax,eax
6401899d:	je     0x640189d6
6401899f:	inc    DWORD PTR [esi+0x8]
640189a2:	jmp    0x640189ae
640189a4:	or     BYTE PTR [esi+0x4],0x40
640189a8:	mov    DWORD PTR [esi],0xfffffffe
640189ae:	inc    ebx
640189af:	cmp    ebx,0x3
640189b2:	jl     0x6401891f
640189b8:	push   DWORD PTR ds:0x640324e0
640189be:	call   DWORD PTR ds:0x6402515c
640189c4:	xor    eax,eax
640189c6:	jmp    0x640189d9
640189c8:	xor    eax,eax
640189ca:	inc    eax
640189cb:	ret    
640189cc:	mov    esp,DWORD PTR [ebp-0x18]
640189cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640189d6:	or     eax,0xffffffff
640189d9:	call   0x64014475
640189de:	ret    
640189df:	push   esi
640189e0:	push   edi
640189e1:	mov    esi,0x64032500
640189e6:	mov    edi,DWORD PTR [esi]
640189e8:	test   edi,edi
640189ea:	je     0x64018a1d
640189ec:	lea    eax,[edi+0x800]
640189f2:	jmp    0x64018a0e
640189f4:	cmp    DWORD PTR [edi+0x8],0x0
640189f8:	je     0x64018a04
640189fa:	lea    eax,[edi+0xc]
640189fd:	push   eax
640189fe:	call   DWORD PTR ds:0x640250a0
64018a04:	mov    eax,DWORD PTR [esi]
64018a06:	add    edi,0x40
64018a09:	add    eax,0x800
64018a0e:	cmp    edi,eax
64018a10:	jb     0x640189f4
64018a12:	push   DWORD PTR [esi]
64018a14:	call   0x64013d06
64018a19:	and    DWORD PTR [esi],0x0
64018a1c:	pop    ecx
64018a1d:	add    esi,0x4
64018a20:	cmp    esi,0x64032600
64018a26:	jl     0x640189e6
64018a28:	pop    edi
64018a29:	pop    esi
64018a2a:	ret    
64018a2b:	push   ebx
64018a2c:	xor    ebx,ebx
64018a2e:	cmp    DWORD PTR ds:0x64032614,ebx
64018a34:	push   esi
64018a35:	push   edi
64018a36:	jne    0x64018a3d
64018a38:	call   0x64016c51
64018a3d:	mov    esi,DWORD PTR ds:0x6402e574
64018a43:	xor    edi,edi
64018a45:	cmp    esi,ebx
64018a47:	jne    0x64018a61
64018a49:	or     eax,0xffffffff
64018a4c:	jmp    0x64018aec
64018a51:	cmp    al,0x3d
64018a53:	je     0x64018a56
64018a55:	inc    edi
64018a56:	push   esi
64018a57:	call   0x64014630
64018a5c:	pop    ecx
64018a5d:	lea    esi,[esi+eax*1+0x1]
64018a61:	mov    al,BYTE PTR [esi]
64018a63:	cmp    al,bl
64018a65:	jne    0x64018a51
64018a67:	push   0x4
64018a69:	inc    edi
64018a6a:	push   edi
64018a6b:	call   0x64016180
64018a70:	mov    edi,eax
64018a72:	cmp    edi,ebx
64018a74:	pop    ecx
64018a75:	pop    ecx
64018a76:	mov    DWORD PTR ds:0x6402e8f4,edi
64018a7c:	je     0x64018a49
64018a7e:	mov    esi,DWORD PTR ds:0x6402e574
64018a84:	push   ebp
64018a85:	jmp    0x64018ac7
64018a87:	push   esi
64018a88:	call   0x64014630
64018a8d:	mov    ebp,eax
64018a8f:	inc    ebp
64018a90:	cmp    BYTE PTR [esi],0x3d
64018a93:	pop    ecx
64018a94:	je     0x64018ac5
64018a96:	push   0x1
64018a98:	push   ebp
64018a99:	call   0x64016180
64018a9e:	cmp    eax,ebx
64018aa0:	pop    ecx
64018aa1:	pop    ecx
64018aa2:	mov    DWORD PTR [edi],eax
64018aa4:	je     0x64018af0
64018aa6:	push   esi
64018aa7:	push   ebp
64018aa8:	push   eax
64018aa9:	call   0x64014828
64018aae:	add    esp,0xc
64018ab1:	test   eax,eax
64018ab3:	je     0x64018ac2
64018ab5:	push   ebx
64018ab6:	push   ebx
64018ab7:	push   ebx
64018ab8:	push   ebx
64018ab9:	push   ebx
64018aba:	call   0x640128a8
64018abf:	add    esp,0x14
64018ac2:	add    edi,0x4
64018ac5:	add    esi,ebp
64018ac7:	cmp    BYTE PTR [esi],bl
64018ac9:	jne    0x64018a87
64018acb:	push   DWORD PTR ds:0x6402e574
64018ad1:	call   0x64013d06
64018ad6:	mov    DWORD PTR ds:0x6402e574,ebx
64018adc:	mov    DWORD PTR [edi],ebx
64018ade:	mov    DWORD PTR ds:0x64032608,0x1
64018ae8:	xor    eax,eax
64018aea:	pop    ecx
64018aeb:	pop    ebp
64018aec:	pop    edi
64018aed:	pop    esi
64018aee:	pop    ebx
64018aef:	ret    
64018af0:	push   DWORD PTR ds:0x6402e8f4
64018af6:	call   0x64013d06
64018afb:	mov    DWORD PTR ds:0x6402e8f4,ebx
64018b01:	or     eax,0xffffffff
64018b04:	jmp    0x64018aea
64018b06:	push   ebp
64018b07:	mov    ebp,esp
64018b09:	push   ecx
64018b0a:	mov    ecx,DWORD PTR [ebp+0x10]
64018b0d:	push   ebx
64018b0e:	xor    eax,eax
64018b10:	cmp    DWORD PTR [ebp+0x8],eax
64018b13:	push   esi
64018b14:	mov    DWORD PTR [edi],eax
64018b16:	mov    esi,edx
64018b18:	mov    edx,DWORD PTR [ebp+0xc]
64018b1b:	mov    DWORD PTR [ecx],0x1
64018b21:	je     0x64018b2c
64018b23:	mov    ebx,DWORD PTR [ebp+0x8]
64018b26:	add    DWORD PTR [ebp+0x8],0x4
64018b2a:	mov    DWORD PTR [ebx],edx
64018b2c:	mov    DWORD PTR [ebp-0x4],eax
64018b2f:	cmp    BYTE PTR [esi],0x22
64018b32:	jne    0x64018b44
64018b34:	xor    eax,eax
64018b36:	cmp    DWORD PTR [ebp-0x4],eax
64018b39:	mov    bl,0x22
64018b3b:	sete   al
64018b3e:	inc    esi
64018b3f:	mov    DWORD PTR [ebp-0x4],eax
64018b42:	jmp    0x64018b80
64018b44:	inc    DWORD PTR [edi]
64018b46:	test   edx,edx
64018b48:	je     0x64018b52
64018b4a:	mov    al,BYTE PTR [esi]
64018b4c:	mov    BYTE PTR [edx],al
64018b4e:	inc    edx
64018b4f:	mov    DWORD PTR [ebp+0xc],edx
64018b52:	mov    bl,BYTE PTR [esi]
64018b54:	movzx  eax,bl
64018b57:	push   eax
64018b58:	inc    esi
64018b59:	call   0x6401dce9
64018b5e:	test   eax,eax
64018b60:	pop    ecx
64018b61:	je     0x64018b76
64018b63:	inc    DWORD PTR [edi]
64018b65:	cmp    DWORD PTR [ebp+0xc],0x0
64018b69:	je     0x64018b75
64018b6b:	mov    ecx,DWORD PTR [ebp+0xc]
64018b6e:	mov    al,BYTE PTR [esi]
64018b70:	inc    DWORD PTR [ebp+0xc]
64018b73:	mov    BYTE PTR [ecx],al
64018b75:	inc    esi
64018b76:	test   bl,bl
64018b78:	mov    edx,DWORD PTR [ebp+0xc]
64018b7b:	mov    ecx,DWORD PTR [ebp+0x10]
64018b7e:	je     0x64018bb2
64018b80:	cmp    DWORD PTR [ebp-0x4],0x0
64018b84:	jne    0x64018b2f
64018b86:	cmp    bl,0x20
64018b89:	je     0x64018b90
64018b8b:	cmp    bl,0x9
64018b8e:	jne    0x64018b2f
64018b90:	test   edx,edx
64018b92:	je     0x64018b98
64018b94:	mov    BYTE PTR [edx-0x1],0x0
64018b98:	and    DWORD PTR [ebp-0x4],0x0
64018b9c:	cmp    BYTE PTR [esi],0x0
64018b9f:	je     0x64018c8e
64018ba5:	mov    al,BYTE PTR [esi]
64018ba7:	cmp    al,0x20
64018ba9:	je     0x64018baf
64018bab:	cmp    al,0x9
64018bad:	jne    0x64018bb5
64018baf:	inc    esi
64018bb0:	jmp    0x64018ba5
64018bb2:	dec    esi
64018bb3:	jmp    0x64018b98
64018bb5:	cmp    BYTE PTR [esi],0x0
64018bb8:	je     0x64018c8e
64018bbe:	cmp    DWORD PTR [ebp+0x8],0x0
64018bc2:	je     0x64018bcd
64018bc4:	mov    eax,DWORD PTR [ebp+0x8]
64018bc7:	add    DWORD PTR [ebp+0x8],0x4
64018bcb:	mov    DWORD PTR [eax],edx
64018bcd:	inc    DWORD PTR [ecx]
64018bcf:	xor    ebx,ebx
64018bd1:	inc    ebx
64018bd2:	xor    ecx,ecx
64018bd4:	jmp    0x64018bd8
64018bd6:	inc    esi
64018bd7:	inc    ecx
64018bd8:	cmp    BYTE PTR [esi],0x5c
64018bdb:	je     0x64018bd6
64018bdd:	cmp    BYTE PTR [esi],0x22
64018be0:	jne    0x64018c08
64018be2:	test   cl,0x1
64018be5:	jne    0x64018c06
64018be7:	cmp    DWORD PTR [ebp-0x4],0x0
64018beb:	je     0x64018bf9
64018bed:	lea    eax,[esi+0x1]
64018bf0:	cmp    BYTE PTR [eax],0x22
64018bf3:	jne    0x64018bf9
64018bf5:	mov    esi,eax
64018bf7:	jmp    0x64018c06
64018bf9:	xor    eax,eax
64018bfb:	xor    ebx,ebx
64018bfd:	cmp    DWORD PTR [ebp-0x4],eax
64018c00:	sete   al
64018c03:	mov    DWORD PTR [ebp-0x4],eax
64018c06:	shr    ecx,1
64018c08:	test   ecx,ecx
64018c0a:	je     0x64018c1e
64018c0c:	dec    ecx
64018c0d:	test   edx,edx
64018c0f:	je     0x64018c15
64018c11:	mov    BYTE PTR [edx],0x5c
64018c14:	inc    edx
64018c15:	inc    DWORD PTR [edi]
64018c17:	test   ecx,ecx
64018c19:	jne    0x64018c0c
64018c1b:	mov    DWORD PTR [ebp+0xc],edx
64018c1e:	mov    al,BYTE PTR [esi]
64018c20:	test   al,al
64018c22:	je     0x64018c79
64018c24:	cmp    DWORD PTR [ebp-0x4],0x0
64018c28:	jne    0x64018c32
64018c2a:	cmp    al,0x20
64018c2c:	je     0x64018c79
64018c2e:	cmp    al,0x9
64018c30:	je     0x64018c79
64018c32:	test   ebx,ebx
64018c34:	je     0x64018c73
64018c36:	test   edx,edx
64018c38:	movsx  eax,al
64018c3b:	push   eax
64018c3c:	je     0x64018c61
64018c3e:	call   0x6401dce9
64018c43:	test   eax,eax
64018c45:	pop    ecx
64018c46:	je     0x64018c55
64018c48:	mov    al,BYTE PTR [esi]
64018c4a:	mov    ecx,DWORD PTR [ebp+0xc]
64018c4d:	inc    DWORD PTR [ebp+0xc]
64018c50:	mov    BYTE PTR [ecx],al
64018c52:	inc    esi
64018c53:	inc    DWORD PTR [edi]
64018c55:	mov    ecx,DWORD PTR [ebp+0xc]
64018c58:	mov    al,BYTE PTR [esi]
64018c5a:	inc    DWORD PTR [ebp+0xc]
64018c5d:	mov    BYTE PTR [ecx],al
64018c5f:	jmp    0x64018c6e
64018c61:	call   0x6401dce9
64018c66:	test   eax,eax
64018c68:	pop    ecx
64018c69:	je     0x64018c6e
64018c6b:	inc    esi
64018c6c:	inc    DWORD PTR [edi]
64018c6e:	inc    DWORD PTR [edi]
64018c70:	mov    edx,DWORD PTR [ebp+0xc]
64018c73:	inc    esi
64018c74:	jmp    0x64018bcf
64018c79:	test   edx,edx
64018c7b:	je     0x64018c84
64018c7d:	mov    BYTE PTR [edx],0x0
64018c80:	inc    edx
64018c81:	mov    DWORD PTR [ebp+0xc],edx
64018c84:	inc    DWORD PTR [edi]
64018c86:	mov    ecx,DWORD PTR [ebp+0x10]
64018c89:	jmp    0x64018b9c
64018c8e:	mov    eax,DWORD PTR [ebp+0x8]
64018c91:	test   eax,eax
64018c93:	pop    esi
64018c94:	pop    ebx
64018c95:	je     0x64018c9a
64018c97:	and    DWORD PTR [eax],0x0
64018c9a:	inc    DWORD PTR [ecx]
64018c9c:	leave  
64018c9d:	ret    
64018c9e:	push   ebp
64018c9f:	mov    ebp,esp
64018ca1:	sub    esp,0xc
64018ca4:	push   ebx
64018ca5:	xor    ebx,ebx
64018ca7:	cmp    DWORD PTR ds:0x64032614,ebx
64018cad:	push   esi
64018cae:	push   edi
64018caf:	jne    0x64018cb6
64018cb1:	call   0x64016c51
64018cb6:	push   0x104
64018cbb:	mov    esi,0x6402e960
64018cc0:	push   esi
64018cc1:	push   ebx
64018cc2:	mov    BYTE PTR ds:0x6402ea64,bl
64018cc8:	call   DWORD PTR ds:0x6402516c
64018cce:	mov    eax,ds:0x64032620
64018cd3:	cmp    eax,ebx
64018cd5:	mov    DWORD PTR ds:0x6402e904,esi
64018cdb:	je     0x64018ce4
64018cdd:	cmp    BYTE PTR [eax],bl
64018cdf:	mov    DWORD PTR [ebp-0x4],eax
64018ce2:	jne    0x64018ce7
64018ce4:	mov    DWORD PTR [ebp-0x4],esi
64018ce7:	mov    edx,DWORD PTR [ebp-0x4]
64018cea:	lea    eax,[ebp-0x8]
64018ced:	push   eax
64018cee:	push   ebx
64018cef:	push   ebx
64018cf0:	lea    edi,[ebp-0xc]
64018cf3:	call   0x64018b06
64018cf8:	mov    eax,DWORD PTR [ebp-0x8]
64018cfb:	add    esp,0xc
64018cfe:	cmp    eax,0x3fffffff
64018d03:	jae    0x64018d4f
64018d05:	mov    ecx,DWORD PTR [ebp-0xc]
64018d08:	cmp    ecx,0xffffffff
64018d0b:	jae    0x64018d4f
64018d0d:	mov    edi,eax
64018d0f:	shl    edi,0x2
64018d12:	lea    eax,[edi+ecx*1]
64018d15:	cmp    eax,ecx
64018d17:	jb     0x64018d4f
64018d19:	push   eax
64018d1a:	call   0x64016140
64018d1f:	mov    esi,eax
64018d21:	cmp    esi,ebx
64018d23:	pop    ecx
64018d24:	je     0x64018d4f
64018d26:	mov    edx,DWORD PTR [ebp-0x4]
64018d29:	lea    eax,[ebp-0x8]
64018d2c:	push   eax
64018d2d:	add    edi,esi
64018d2f:	push   edi
64018d30:	push   esi
64018d31:	lea    edi,[ebp-0xc]
64018d34:	call   0x64018b06
64018d39:	mov    eax,DWORD PTR [ebp-0x8]
64018d3c:	add    esp,0xc
64018d3f:	dec    eax
64018d40:	mov    ds:0x6402e8e8,eax
64018d45:	mov    DWORD PTR ds:0x6402e8ec,esi
64018d4b:	xor    eax,eax
64018d4d:	jmp    0x64018d52
64018d4f:	or     eax,0xffffffff
64018d52:	pop    edi
64018d53:	pop    esi
64018d54:	pop    ebx
64018d55:	leave  
64018d56:	ret    
64018d57:	push   ecx
64018d58:	push   ecx
64018d59:	mov    eax,ds:0x6402ea68
64018d5e:	push   ebx
64018d5f:	push   ebp
64018d60:	push   esi
64018d61:	push   edi
64018d62:	mov    edi,DWORD PTR ds:0x64025084
64018d68:	xor    ebx,ebx
64018d6a:	xor    esi,esi
64018d6c:	cmp    eax,ebx
64018d6e:	push   0x2
64018d70:	pop    ebp
64018d71:	jne    0x64018da0
64018d73:	call   edi
64018d75:	mov    esi,eax
64018d77:	cmp    esi,ebx
64018d79:	je     0x64018d87
64018d7b:	mov    DWORD PTR ds:0x6402ea68,0x1
64018d85:	jmp    0x64018da9
64018d87:	call   DWORD PTR ds:0x64025044
64018d8d:	cmp    eax,0x78
64018d90:	jne    0x64018d9b
64018d92:	mov    eax,ebp
64018d94:	mov    ds:0x6402ea68,eax
64018d99:	jmp    0x64018da0
64018d9b:	mov    eax,ds:0x6402ea68
64018da0:	cmp    eax,0x1
64018da3:	jne    0x64018e2d
64018da9:	cmp    esi,ebx
64018dab:	jne    0x64018dbc
64018dad:	call   edi
64018daf:	mov    esi,eax
64018db1:	cmp    esi,ebx
64018db3:	jne    0x64018dbc
64018db5:	xor    eax,eax
64018db7:	jmp    0x64018e85
64018dbc:	cmp    WORD PTR [esi],bx
64018dbf:	mov    eax,esi
64018dc1:	je     0x64018dd1
64018dc3:	add    eax,ebp
64018dc5:	cmp    WORD PTR [eax],bx
64018dc8:	jne    0x64018dc3
64018dca:	add    eax,ebp
64018dcc:	cmp    WORD PTR [eax],bx
64018dcf:	jne    0x64018dc3
64018dd1:	mov    edi,DWORD PTR ds:0x64025028
64018dd7:	push   ebx
64018dd8:	push   ebx
64018dd9:	push   ebx
64018dda:	sub    eax,esi
64018ddc:	push   ebx
64018ddd:	sar    eax,1
64018ddf:	inc    eax
64018de0:	push   eax
64018de1:	push   esi
64018de2:	push   ebx
64018de3:	push   ebx
64018de4:	mov    DWORD PTR [esp+0x34],eax
64018de8:	call   edi
64018dea:	mov    ebp,eax
64018dec:	cmp    ebp,ebx
64018dee:	je     0x64018e22
64018df0:	push   ebp
64018df1:	call   0x64016140
64018df6:	cmp    eax,ebx
64018df8:	pop    ecx
64018df9:	mov    DWORD PTR [esp+0x10],eax
64018dfd:	je     0x64018e22
64018dff:	push   ebx
64018e00:	push   ebx
64018e01:	push   ebp
64018e02:	push   eax
64018e03:	push   DWORD PTR [esp+0x24]
64018e07:	push   esi
64018e08:	push   ebx
64018e09:	push   ebx
64018e0a:	call   edi
64018e0c:	test   eax,eax
64018e0e:	jne    0x64018e1e
64018e10:	push   DWORD PTR [esp+0x10]
64018e14:	call   0x64013d06
64018e19:	pop    ecx
64018e1a:	mov    DWORD PTR [esp+0x10],ebx
64018e1e:	mov    ebx,DWORD PTR [esp+0x10]
64018e22:	push   esi
64018e23:	call   DWORD PTR ds:0x64025178
64018e29:	mov    eax,ebx
64018e2b:	jmp    0x64018e85
64018e2d:	cmp    eax,ebp
64018e2f:	je     0x64018e35
64018e31:	cmp    eax,ebx
64018e33:	jne    0x64018db5
64018e35:	call   DWORD PTR ds:0x64025174
64018e3b:	mov    esi,eax
64018e3d:	cmp    esi,ebx
64018e3f:	je     0x64018db5
64018e45:	cmp    BYTE PTR [esi],bl
64018e47:	je     0x64018e53
64018e49:	inc    eax
64018e4a:	cmp    BYTE PTR [eax],bl
64018e4c:	jne    0x64018e49
64018e4e:	inc    eax
64018e4f:	cmp    BYTE PTR [eax],bl
64018e51:	jne    0x64018e49
64018e53:	sub    eax,esi
64018e55:	inc    eax
64018e56:	mov    ebp,eax
64018e58:	push   ebp
64018e59:	call   0x64016140
64018e5e:	mov    edi,eax
64018e60:	cmp    edi,ebx
64018e62:	pop    ecx
64018e63:	jne    0x64018e71
64018e65:	push   esi
64018e66:	call   DWORD PTR ds:0x64025170
64018e6c:	jmp    0x64018db5
64018e71:	push   ebp
64018e72:	push   esi
64018e73:	push   edi
64018e74:	call   0x64014890
64018e79:	add    esp,0xc
64018e7c:	push   esi
64018e7d:	call   DWORD PTR ds:0x64025170
64018e83:	mov    eax,edi
64018e85:	pop    edi
64018e86:	pop    esi
64018e87:	pop    ebp
64018e88:	pop    ebx
64018e89:	pop    ecx
64018e8a:	pop    ecx
64018e8b:	ret    
64018e8c:	push   esi
64018e8d:	push   edi
64018e8e:	mov    eax,0x64029f70
64018e93:	mov    edi,0x64029f70
64018e98:	cmp    eax,edi
64018e9a:	mov    esi,eax
64018e9c:	jae    0x64018ead
64018e9e:	mov    eax,DWORD PTR [esi]
64018ea0:	test   eax,eax
64018ea2:	je     0x64018ea6
64018ea4:	call   eax
64018ea6:	add    esi,0x4
64018ea9:	cmp    esi,edi
64018eab:	jb     0x64018e9e
64018ead:	pop    edi
64018eae:	pop    esi
64018eaf:	ret    
64018eb0:	push   esi
64018eb1:	push   edi
64018eb2:	mov    eax,0x64029f78
64018eb7:	mov    edi,0x64029f78
64018ebc:	cmp    eax,edi
64018ebe:	mov    esi,eax
64018ec0:	jae    0x64018ed1
64018ec2:	mov    eax,DWORD PTR [esi]
64018ec4:	test   eax,eax
64018ec6:	je     0x64018eca
64018ec8:	call   eax
64018eca:	add    esi,0x4
64018ecd:	cmp    esi,edi
64018ecf:	jb     0x64018ec2
64018ed1:	pop    edi
64018ed2:	pop    esi
64018ed3:	ret    
64018ed4:	push   ebp
64018ed5:	mov    ebp,esp
64018ed7:	push   ecx
64018ed8:	push   ecx
64018ed9:	push   esi
64018eda:	lea    eax,[ebp-0x4]
64018edd:	xor    esi,esi
64018edf:	push   eax
64018ee0:	mov    DWORD PTR [ebp-0x4],esi
64018ee3:	mov    DWORD PTR [ebp-0x8],esi
64018ee6:	call   0x6401635f
64018eeb:	test   eax,eax
64018eed:	pop    ecx
64018eee:	je     0x64018efd
64018ef0:	push   esi
64018ef1:	push   esi
64018ef2:	push   esi
64018ef3:	push   esi
64018ef4:	push   esi
64018ef5:	call   0x640128a8
64018efa:	add    esp,0x14
64018efd:	lea    eax,[ebp-0x8]
64018f00:	push   eax
64018f01:	call   0x64016396
64018f06:	test   eax,eax
64018f08:	pop    ecx
64018f09:	je     0x64018f18
64018f0b:	push   esi
64018f0c:	push   esi
64018f0d:	push   esi
64018f0e:	push   esi
64018f0f:	push   esi
64018f10:	call   0x640128a8
64018f15:	add    esp,0x14
64018f18:	cmp    DWORD PTR [ebp-0x4],0x2
64018f1c:	pop    esi
64018f1d:	jne    0x64018f2a
64018f1f:	cmp    DWORD PTR [ebp-0x8],0x5
64018f23:	jb     0x64018f2a
64018f25:	xor    eax,eax
64018f27:	inc    eax
64018f28:	leave  
64018f29:	ret    
64018f2a:	push   0x3
64018f2c:	pop    eax
64018f2d:	leave  
64018f2e:	ret    
64018f2f:	xor    eax,eax
64018f31:	cmp    DWORD PTR [esp+0x4],eax
64018f35:	push   0x0
64018f37:	sete   al
64018f3a:	push   0x1000
64018f3f:	push   eax
64018f40:	call   DWORD PTR ds:0x6402517c
64018f46:	test   eax,eax
64018f48:	mov    ds:0x6402ea6c,eax
64018f4d:	jne    0x64018f52
64018f4f:	xor    eax,eax
64018f51:	ret    
64018f52:	call   0x64018ed4
64018f57:	cmp    eax,0x3
64018f5a:	mov    ds:0x640324dc,eax
64018f5f:	jne    0x64018f85
64018f61:	push   0x3f8
64018f66:	call   0x6401a46b
64018f6b:	test   eax,eax
64018f6d:	pop    ecx
64018f6e:	jne    0x64018f85
64018f70:	push   DWORD PTR ds:0x6402ea6c
64018f76:	call   DWORD PTR ds:0x640250fc
64018f7c:	and    DWORD PTR ds:0x6402ea6c,0x0
64018f83:	jmp    0x64018f4f
64018f85:	xor    eax,eax
64018f87:	inc    eax
64018f88:	ret    
64018f89:	push   ebp
64018f8a:	xor    ebp,ebp
64018f8c:	cmp    DWORD PTR ds:0x640324dc,0x3
64018f93:	jne    0x64018fe9
64018f95:	push   ebx
64018f96:	mov    ebx,DWORD PTR ds:0x64025104
64018f9c:	push   edi
64018f9d:	xor    edi,edi
64018f9f:	cmp    DWORD PTR ds:0x640324c4,ebp
64018fa5:	jle    0x64018fd8
64018fa7:	push   esi
64018fa8:	mov    esi,DWORD PTR ds:0x640324c8
64018fae:	add    esi,0x10
64018fb1:	push   0x8000
64018fb6:	push   ebp
64018fb7:	push   DWORD PTR [esi-0x4]
64018fba:	call   DWORD PTR ds:0x64025180
64018fc0:	push   DWORD PTR [esi]
64018fc2:	push   ebp
64018fc3:	push   DWORD PTR ds:0x6402ea6c
64018fc9:	call   ebx
64018fcb:	add    esi,0x14
64018fce:	inc    edi
64018fcf:	cmp    edi,DWORD PTR ds:0x640324c4
64018fd5:	jl     0x64018fb1
64018fd7:	pop    esi
64018fd8:	push   DWORD PTR ds:0x640324c8
64018fde:	push   ebp
64018fdf:	push   DWORD PTR ds:0x6402ea6c
64018fe5:	call   ebx
64018fe7:	pop    edi
64018fe8:	pop    ebx
64018fe9:	push   DWORD PTR ds:0x6402ea6c
64018fef:	call   DWORD PTR ds:0x640250fc
64018ff5:	mov    DWORD PTR ds:0x6402ea6c,ebp
64018ffb:	pop    ebp
64018ffc:	ret    
64018ffd:	push   ebp
64018ffe:	mov    ebp,esp
64019000:	push   ecx
64019001:	push   ecx
64019002:	push   esi
64019003:	call   0x64014f04
64019008:	mov    esi,eax
6401900a:	test   esi,esi
6401900c:	je     0x64019158
64019012:	mov    edx,DWORD PTR [esi+0x5c]
64019015:	mov    eax,ds:0x6402d94c
6401901a:	push   edi
6401901b:	mov    edi,DWORD PTR [ebp+0x8]
6401901e:	mov    ecx,edx
64019020:	push   ebx
64019021:	cmp    DWORD PTR [ecx],edi
64019023:	je     0x64019033
64019025:	mov    ebx,eax
64019027:	imul   ebx,ebx,0xc
6401902a:	add    ecx,0xc
6401902d:	add    ebx,edx
6401902f:	cmp    ecx,ebx
64019031:	jb     0x64019021
64019033:	imul   eax,eax,0xc
64019036:	add    eax,edx
64019038:	cmp    ecx,eax
6401903a:	jae    0x64019044
6401903c:	cmp    DWORD PTR [ecx],edi
6401903e:	jne    0x64019044
64019040:	mov    eax,ecx
64019042:	jmp    0x64019046
64019044:	xor    eax,eax
64019046:	test   eax,eax
64019048:	je     0x64019054
6401904a:	mov    ebx,DWORD PTR [eax+0x8]
6401904d:	test   ebx,ebx
6401904f:	mov    DWORD PTR [ebp-0x4],ebx
64019052:	jne    0x6401905b
64019054:	xor    eax,eax
64019056:	jmp    0x64019156
6401905b:	cmp    ebx,0x5
6401905e:	jne    0x6401906c
64019060:	and    DWORD PTR [eax+0x8],0x0
64019064:	xor    eax,eax
64019066:	inc    eax
64019067:	jmp    0x64019156
6401906c:	cmp    ebx,0x1
6401906f:	je     0x64019153
64019075:	mov    ecx,DWORD PTR [esi+0x60]
64019078:	mov    DWORD PTR [ebp-0x8],ecx
6401907b:	mov    ecx,DWORD PTR [ebp+0xc]
6401907e:	mov    DWORD PTR [esi+0x60],ecx
64019081:	mov    ecx,DWORD PTR [eax+0x4]
64019084:	cmp    ecx,0x8
64019087:	jne    0x64019145
6401908d:	mov    ecx,DWORD PTR ds:0x6402d940
64019093:	mov    edi,DWORD PTR ds:0x6402d944
64019099:	mov    edx,ecx
6401909b:	add    edi,ecx
6401909d:	cmp    edx,edi
6401909f:	jge    0x640190c5
640190a1:	imul   ecx,ecx,0xc
640190a4:	mov    edi,DWORD PTR [esi+0x5c]
640190a7:	and    DWORD PTR [ecx+edi*1+0x8],0x0
640190ac:	mov    edi,DWORD PTR ds:0x6402d940
640190b2:	mov    ebx,DWORD PTR ds:0x6402d944
640190b8:	inc    edx
640190b9:	add    ebx,edi
640190bb:	add    ecx,0xc
640190be:	cmp    edx,ebx
640190c0:	jl     0x640190a4
640190c2:	mov    ebx,DWORD PTR [ebp-0x4]
640190c5:	mov    eax,DWORD PTR [eax]
640190c7:	cmp    eax,0xc000008e
640190cc:	mov    edi,DWORD PTR [esi+0x64]
640190cf:	jne    0x640190da
640190d1:	mov    DWORD PTR [esi+0x64],0x83
640190d8:	jmp    0x64019138
640190da:	cmp    eax,0xc0000090
640190df:	jne    0x640190ea
640190e1:	mov    DWORD PTR [esi+0x64],0x81
640190e8:	jmp    0x64019138
640190ea:	cmp    eax,0xc0000091
640190ef:	jne    0x640190fa
640190f1:	mov    DWORD PTR [esi+0x64],0x84
640190f8:	jmp    0x64019138
640190fa:	cmp    eax,0xc0000093
640190ff:	jne    0x6401910a
64019101:	mov    DWORD PTR [esi+0x64],0x85
64019108:	jmp    0x64019138
6401910a:	cmp    eax,0xc000008d
6401910f:	jne    0x6401911a
64019111:	mov    DWORD PTR [esi+0x64],0x82
64019118:	jmp    0x64019138
6401911a:	cmp    eax,0xc000008f
6401911f:	jne    0x6401912a
64019121:	mov    DWORD PTR [esi+0x64],0x86
64019128:	jmp    0x64019138
6401912a:	cmp    eax,0xc0000092
6401912f:	jne    0x64019138
64019131:	mov    DWORD PTR [esi+0x64],0x8a
64019138:	push   DWORD PTR [esi+0x64]
6401913b:	push   0x8
6401913d:	call   ebx
6401913f:	pop    ecx
64019140:	mov    DWORD PTR [esi+0x64],edi
64019143:	jmp    0x6401914c
64019145:	and    DWORD PTR [eax+0x8],0x0
64019149:	push   ecx
6401914a:	call   ebx
6401914c:	mov    eax,DWORD PTR [ebp-0x8]
6401914f:	pop    ecx
64019150:	mov    DWORD PTR [esi+0x60],eax
64019153:	or     eax,0xffffffff
64019156:	pop    ebx
64019157:	pop    edi
64019158:	pop    esi
64019159:	leave  
6401915a:	ret    
6401915b:	mov    eax,0xe06d7363
64019160:	cmp    DWORD PTR [esp+0x4],eax
64019164:	jne    0x64019173
64019166:	push   DWORD PTR [esp+0x8]
6401916a:	push   eax
6401916b:	call   0x64018ffd
64019170:	pop    ecx
64019171:	pop    ecx
64019172:	ret    
64019173:	xor    eax,eax
64019175:	ret    
64019176:	push   ebp
64019177:	mov    ebp,esp
64019179:	sub    esp,0x10
6401917c:	mov    eax,ds:0x6402d09c
64019181:	and    DWORD PTR [ebp-0x8],0x0
64019185:	and    DWORD PTR [ebp-0x4],0x0
64019189:	push   ebx
6401918a:	push   edi
6401918b:	mov    edi,0xbb40e64e
64019190:	cmp    eax,edi
64019192:	mov    ebx,0xffff0000
64019197:	je     0x640191a6
64019199:	test   ebx,eax
6401919b:	je     0x640191a6
6401919d:	not    eax
6401919f:	mov    ds:0x6402d0a0,eax
640191a4:	jmp    0x64019206
640191a6:	push   esi
640191a7:	lea    eax,[ebp-0x8]
640191aa:	push   eax
640191ab:	call   DWORD PTR ds:0x640250cc
640191b1:	mov    esi,DWORD PTR [ebp-0x4]
640191b4:	xor    esi,DWORD PTR [ebp-0x8]
640191b7:	call   DWORD PTR ds:0x640250d0
640191bd:	xor    esi,eax
640191bf:	call   DWORD PTR ds:0x64025128
640191c5:	xor    esi,eax
640191c7:	call   DWORD PTR ds:0x6402505c
640191cd:	xor    esi,eax
640191cf:	lea    eax,[ebp-0x10]
640191d2:	push   eax
640191d3:	call   DWORD PTR ds:0x640250d4
640191d9:	mov    eax,DWORD PTR [ebp-0xc]
640191dc:	xor    eax,DWORD PTR [ebp-0x10]
640191df:	xor    esi,eax
640191e1:	cmp    esi,edi
640191e3:	jne    0x640191ec
640191e5:	mov    esi,0xbb40e64f
640191ea:	jmp    0x640191f7
640191ec:	test   ebx,esi
640191ee:	jne    0x640191f7
640191f0:	mov    eax,esi
640191f2:	shl    eax,0x10
640191f5:	or     esi,eax
640191f7:	mov    DWORD PTR ds:0x6402d09c,esi
640191fd:	not    esi
640191ff:	mov    DWORD PTR ds:0x6402d0a0,esi
64019205:	pop    esi
64019206:	pop    edi
64019207:	pop    ebx
64019208:	leave  
64019209:	ret    
6401920a:	test   BYTE PTR [ecx+0xc],0x40
6401920e:	je     0x64019216
64019210:	cmp    DWORD PTR [ecx+0x8],0x0
64019214:	je     0x6401923a
64019216:	dec    DWORD PTR [ecx+0x4]
64019219:	js     0x64019226
6401921b:	mov    edx,DWORD PTR [ecx]
6401921d:	mov    BYTE PTR [edx],al
6401921f:	inc    DWORD PTR [ecx]
64019221:	movzx  eax,al
64019224:	jmp    0x64019232
64019226:	movsx  eax,al
64019229:	push   ecx
6401922a:	push   eax
6401922b:	call   0x64016f75
64019230:	pop    ecx
64019231:	pop    ecx
64019232:	cmp    eax,0xffffffff
64019235:	jne    0x6401923a
64019237:	or     DWORD PTR [esi],eax
64019239:	ret    
6401923a:	inc    DWORD PTR [esi]
6401923c:	ret    
6401923d:	push   ebp
6401923e:	mov    ebp,esp
64019240:	push   esi
64019241:	mov    esi,eax
64019243:	jmp    0x64019258
64019245:	mov    ecx,DWORD PTR [ebp+0x10]
64019248:	mov    al,BYTE PTR [ebp+0x8]
6401924b:	dec    DWORD PTR [ebp+0xc]
6401924e:	call   0x6401920a
64019253:	cmp    DWORD PTR [esi],0xffffffff
64019256:	je     0x6401925e
64019258:	cmp    DWORD PTR [ebp+0xc],0x0
6401925c:	jg     0x64019245
6401925e:	pop    esi
6401925f:	pop    ebp
64019260:	ret    
64019261:	push   ebp
64019262:	lea    ebp,[esp-0x1f8]
64019269:	sub    esp,0x278
6401926f:	mov    eax,ds:0x6402d09c
64019274:	xor    eax,ebp
64019276:	mov    DWORD PTR [ebp+0x1f4],eax
6401927c:	mov    eax,DWORD PTR [ebp+0x200]
64019282:	push   ebx
64019283:	mov    ebx,DWORD PTR [ebp+0x204]
64019289:	push   esi
6401928a:	xor    esi,esi
6401928c:	push   edi
6401928d:	mov    edi,DWORD PTR [ebp+0x20c]
64019293:	push   DWORD PTR [ebp+0x208]
64019299:	lea    ecx,[ebp-0x64]
6401929c:	mov    DWORD PTR [ebp-0x30],eax
6401929f:	mov    DWORD PTR [ebp-0x2c],edi
640192a2:	mov    DWORD PTR [ebp-0x4c],esi
640192a5:	mov    DWORD PTR [ebp-0x18],esi
640192a8:	mov    DWORD PTR [ebp-0x40],esi
640192ab:	mov    DWORD PTR [ebp-0x20],esi
640192ae:	mov    DWORD PTR [ebp-0x3c],esi
640192b1:	mov    DWORD PTR [ebp-0x50],esi
640192b4:	mov    DWORD PTR [ebp-0x44],esi
640192b7:	call   0x6401300f
640192bc:	cmp    DWORD PTR [ebp-0x30],esi
640192bf:	jne    0x640192ee
640192c1:	call   0x64014c30
640192c6:	push   esi
640192c7:	push   esi
640192c8:	push   esi
640192c9:	push   esi
640192ca:	mov    DWORD PTR [eax],0x16
640192d0:	push   esi
640192d1:	call   0x640129a4
640192d6:	add    esp,0x14
640192d9:	cmp    BYTE PTR [ebp-0x58],0x0
640192dd:	je     0x640192e6
640192df:	mov    eax,DWORD PTR [ebp-0x5c]
640192e2:	and    DWORD PTR [eax+0x70],0xfffffffd
640192e6:	or     eax,0xffffffff
640192e9:	jmp    0x64019bbd
640192ee:	mov    eax,DWORD PTR [ebp-0x30]
640192f1:	test   BYTE PTR [eax+0xc],0x40
640192f5:	jne    0x6401939f
640192fb:	push   eax
640192fc:	call   0x6401cc9d
64019301:	cmp    eax,0xffffffff
64019304:	pop    ecx
64019305:	je     0x6401933d
64019307:	push   DWORD PTR [ebp-0x30]
6401930a:	call   0x6401cc9d
6401930f:	cmp    eax,0xfffffffe
64019312:	pop    ecx
64019313:	je     0x6401933d
64019315:	push   DWORD PTR [ebp-0x30]
64019318:	call   0x6401cc9d
6401931d:	push   DWORD PTR [ebp-0x30]
64019320:	sar    eax,0x5
64019323:	lea    esi,[eax*4+0x64032500]
6401932a:	call   0x6401cc9d
6401932f:	and    eax,0x1f
64019332:	shl    eax,0x6
64019335:	add    eax,DWORD PTR [esi]
64019337:	pop    ecx
64019338:	pop    ecx
64019339:	xor    esi,esi
6401933b:	jmp    0x64019342
6401933d:	mov    eax,0x6402d880
64019342:	test   BYTE PTR [eax+0x24],0x7f
64019346:	jne    0x640192c1
6401934c:	push   DWORD PTR [ebp-0x30]
6401934f:	call   0x6401cc9d
64019354:	cmp    eax,0xffffffff
64019357:	pop    ecx
64019358:	je     0x64019390
6401935a:	push   DWORD PTR [ebp-0x30]
6401935d:	call   0x6401cc9d
64019362:	cmp    eax,0xfffffffe
64019365:	pop    ecx
64019366:	je     0x64019390
64019368:	push   DWORD PTR [ebp-0x30]
6401936b:	call   0x6401cc9d
64019370:	push   DWORD PTR [ebp-0x30]
64019373:	sar    eax,0x5
64019376:	lea    esi,[eax*4+0x64032500]
6401937d:	call   0x6401cc9d
64019382:	and    eax,0x1f
64019385:	shl    eax,0x6
64019388:	add    eax,DWORD PTR [esi]
6401938a:	pop    ecx
6401938b:	pop    ecx
6401938c:	xor    esi,esi
6401938e:	jmp    0x64019395
64019390:	mov    eax,0x6402d880
64019395:	test   BYTE PTR [eax+0x24],0x80
64019399:	jne    0x640192c1
6401939f:	cmp    ebx,esi
640193a1:	je     0x640192c1
640193a7:	mov    dl,BYTE PTR [ebx]
640193a9:	xor    ecx,ecx
640193ab:	test   dl,dl
640193ad:	mov    DWORD PTR [ebp-0x34],esi
640193b0:	mov    DWORD PTR [ebp-0x28],esi
640193b3:	mov    DWORD PTR [ebp-0x54],esi
640193b6:	mov    BYTE PTR [ebp-0x19],dl
640193b9:	je     0x64019bad
640193bf:	inc    ebx
640193c0:	cmp    DWORD PTR [ebp-0x34],0x0
640193c4:	mov    DWORD PTR [ebp-0x48],ebx
640193c7:	jl     0x64019bad
640193cd:	mov    al,dl
640193cf:	sub    al,0x20
640193d1:	cmp    al,0x58
640193d3:	ja     0x640193e6
640193d5:	movsx  eax,dl
640193d8:	movzx  eax,BYTE PTR [eax+0x64025df8]
640193df:	and    eax,0xf
640193e2:	xor    esi,esi
640193e4:	jmp    0x640193ea
640193e6:	xor    esi,esi
640193e8:	xor    eax,eax
640193ea:	movsx  eax,BYTE PTR [ecx+eax*8+0x64025e18]
640193f2:	push   0x7
640193f4:	sar    eax,0x4
640193f7:	pop    ecx
640193f8:	cmp    eax,ecx
640193fa:	mov    DWORD PTR [ebp-0x74],eax
640193fd:	ja     0x64019b7d
64019403:	jmp    DWORD PTR [eax*4+0x64019bd5]
6401940a:	or     DWORD PTR [ebp-0x20],0xffffffff
6401940e:	mov    DWORD PTR [ebp-0x78],esi
64019411:	mov    DWORD PTR [ebp-0x50],esi
64019414:	mov    DWORD PTR [ebp-0x40],esi
64019417:	mov    DWORD PTR [ebp-0x3c],esi
6401941a:	mov    DWORD PTR [ebp-0x18],esi
6401941d:	mov    DWORD PTR [ebp-0x44],esi
64019420:	jmp    0x64019b7d
64019425:	movsx  eax,dl
64019428:	sub    eax,0x20
6401942b:	je     0x6401946b
6401942d:	sub    eax,0x3
64019430:	je     0x6401945f
64019432:	sub    eax,0x8
64019435:	je     0x64019456
64019437:	dec    eax
64019438:	dec    eax
64019439:	je     0x6401944d
6401943b:	sub    eax,0x3
6401943e:	jne    0x64019b7d
64019444:	or     DWORD PTR [ebp-0x18],0x8
64019448:	jmp    0x64019b7d
6401944d:	or     DWORD PTR [ebp-0x18],0x4
64019451:	jmp    0x64019b7d
64019456:	or     DWORD PTR [ebp-0x18],0x1
6401945a:	jmp    0x64019b7d
6401945f:	or     DWORD PTR [ebp-0x18],0x80
64019466:	jmp    0x64019b7d
6401946b:	or     DWORD PTR [ebp-0x18],0x2
6401946f:	jmp    0x64019b7d
64019474:	cmp    dl,0x2a
64019477:	jne    0x64019499
64019479:	add    edi,0x4
6401947c:	mov    DWORD PTR [ebp-0x2c],edi
6401947f:	mov    edi,DWORD PTR [edi-0x4]
64019482:	cmp    edi,esi
64019484:	mov    DWORD PTR [ebp-0x40],edi
64019487:	jge    0x64019b7d
6401948d:	or     DWORD PTR [ebp-0x18],0x4
64019491:	neg    DWORD PTR [ebp-0x40]
64019494:	jmp    0x64019b7d
64019499:	mov    eax,DWORD PTR [ebp-0x40]
6401949c:	imul   eax,eax,0xa
6401949f:	movsx  ecx,dl
640194a2:	lea    eax,[eax+ecx*1-0x30]
640194a6:	mov    DWORD PTR [ebp-0x40],eax
640194a9:	jmp    0x64019b7d
640194ae:	mov    DWORD PTR [ebp-0x20],esi
640194b1:	jmp    0x64019b7d
640194b6:	cmp    dl,0x2a
640194b9:	jne    0x640194d8
640194bb:	add    edi,0x4
640194be:	mov    DWORD PTR [ebp-0x2c],edi
640194c1:	mov    edi,DWORD PTR [edi-0x4]
640194c4:	cmp    edi,esi
640194c6:	mov    DWORD PTR [ebp-0x20],edi
640194c9:	jge    0x64019b7d
640194cf:	or     DWORD PTR [ebp-0x20],0xffffffff
640194d3:	jmp    0x64019b7d
640194d8:	mov    eax,DWORD PTR [ebp-0x20]
640194db:	imul   eax,eax,0xa
640194de:	movsx  ecx,dl
640194e1:	lea    eax,[eax+ecx*1-0x30]
640194e5:	mov    DWORD PTR [ebp-0x20],eax
640194e8:	jmp    0x64019b7d
640194ed:	cmp    dl,0x49
640194f0:	je     0x64019538
640194f2:	cmp    dl,0x68
640194f5:	je     0x6401952f
640194f7:	cmp    dl,0x6c
640194fa:	je     0x64019511
640194fc:	cmp    dl,0x77
640194ff:	jne    0x64019b7d
64019505:	or     DWORD PTR [ebp-0x18],0x800
6401950c:	jmp    0x64019b7d
64019511:	cmp    BYTE PTR [ebx],0x6c
64019514:	jne    0x64019526
64019516:	inc    ebx
64019517:	or     DWORD PTR [ebp-0x18],0x1000
6401951e:	mov    DWORD PTR [ebp-0x48],ebx
64019521:	jmp    0x64019b7d
64019526:	or     DWORD PTR [ebp-0x18],0x10
6401952a:	jmp    0x64019b7d
6401952f:	or     DWORD PTR [ebp-0x18],0x20
64019533:	jmp    0x64019b7d
64019538:	mov    al,BYTE PTR [ebx]
6401953a:	cmp    al,0x36
6401953c:	jne    0x64019555
6401953e:	cmp    BYTE PTR [ebx+0x1],0x34
64019542:	jne    0x64019555
64019544:	inc    ebx
64019545:	inc    ebx
64019546:	or     DWORD PTR [ebp-0x18],0x8000
6401954d:	mov    DWORD PTR [ebp-0x48],ebx
64019550:	jmp    0x64019b7d
64019555:	cmp    al,0x33
64019557:	jne    0x64019570
64019559:	cmp    BYTE PTR [ebx+0x1],0x32
6401955d:	jne    0x64019570
6401955f:	inc    ebx
64019560:	inc    ebx
64019561:	and    DWORD PTR [ebp-0x18],0xffff7fff
64019568:	mov    DWORD PTR [ebp-0x48],ebx
6401956b:	jmp    0x64019b7d
64019570:	cmp    al,0x64
64019572:	je     0x64019b7d
64019578:	cmp    al,0x69
6401957a:	je     0x64019b7d
64019580:	cmp    al,0x6f
64019582:	je     0x64019b7d
64019588:	cmp    al,0x75
6401958a:	je     0x64019b7d
64019590:	cmp    al,0x78
64019592:	je     0x64019b7d
64019598:	cmp    al,0x58
6401959a:	je     0x64019b7d
640195a0:	mov    DWORD PTR [ebp-0x74],esi
640195a3:	lea    eax,[ebp-0x64]
640195a6:	push   eax
640195a7:	movzx  eax,dl
640195aa:	push   eax
640195ab:	mov    DWORD PTR [ebp-0x44],esi
640195ae:	call   0x6401a280
640195b3:	pop    ecx
640195b4:	test   eax,eax
640195b6:	mov    al,BYTE PTR [ebp-0x19]
640195b9:	pop    ecx
640195ba:	je     0x640195d5
640195bc:	mov    ecx,DWORD PTR [ebp-0x30]
640195bf:	lea    esi,[ebp-0x34]
640195c2:	call   0x6401920a
640195c7:	mov    al,BYTE PTR [ebx]
640195c9:	inc    ebx
640195ca:	test   al,al
640195cc:	mov    DWORD PTR [ebp-0x48],ebx
640195cf:	je     0x64019b96
640195d5:	mov    ecx,DWORD PTR [ebp-0x30]
640195d8:	lea    esi,[ebp-0x34]
640195db:	call   0x6401920a
640195e0:	jmp    0x64019b7d
640195e5:	movsx  eax,dl
640195e8:	cmp    eax,0x64
640195eb:	jg     0x64019763
640195f1:	je     0x640197e2
640195f7:	cmp    eax,0x53
640195fa:	jg     0x640196ab
64019600:	je     0x6401965c
64019602:	sub    eax,0x41
64019605:	je     0x64019617
64019607:	dec    eax
64019608:	dec    eax
64019609:	je     0x6401964b
6401960b:	dec    eax
6401960c:	dec    eax
6401960d:	je     0x64019617
6401960f:	dec    eax
64019610:	dec    eax
64019611:	jne    0x64019a65
64019617:	add    dl,0x20
6401961a:	mov    DWORD PTR [ebp-0x78],0x1
64019621:	mov    BYTE PTR [ebp-0x19],dl
64019624:	or     DWORD PTR [ebp-0x18],0x40
64019628:	cmp    DWORD PTR [ebp-0x20],esi
6401962b:	lea    ebx,[ebp-0x14]
6401962e:	mov    eax,0x200
64019633:	mov    DWORD PTR [ebp-0x24],ebx
64019636:	mov    DWORD PTR [ebp-0x68],eax
64019639:	jge    0x64019806
6401963f:	mov    DWORD PTR [ebp-0x20],0x6
64019646:	jmp    0x64019854
6401964b:	test   WORD PTR [ebp-0x18],0x830
64019651:	jne    0x640196c8
64019653:	or     DWORD PTR [ebp-0x18],0x800
6401965a:	jmp    0x640196c8
6401965c:	test   WORD PTR [ebp-0x18],0x830
64019662:	jne    0x6401966b
64019664:	or     DWORD PTR [ebp-0x18],0x800
6401966b:	mov    ecx,DWORD PTR [ebp-0x20]
6401966e:	cmp    ecx,0xffffffff
64019671:	jne    0x64019678
64019673:	mov    ecx,0x7fffffff
64019678:	add    edi,0x4
6401967b:	test   WORD PTR [ebp-0x18],0x810
64019681:	mov    DWORD PTR [ebp-0x2c],edi
64019684:	mov    edi,DWORD PTR [edi-0x4]
64019687:	mov    DWORD PTR [ebp-0x24],edi
6401968a:	je     0x64019a43
64019690:	cmp    edi,esi
64019692:	jne    0x6401969c
64019694:	mov    eax,ds:0x6402d954
64019699:	mov    DWORD PTR [ebp-0x24],eax
6401969c:	mov    eax,DWORD PTR [ebp-0x24]
6401969f:	mov    DWORD PTR [ebp-0x44],0x1
640196a6:	jmp    0x64019a38
640196ab:	sub    eax,0x58
640196ae:	je     0x640198ed
640196b4:	dec    eax
640196b5:	dec    eax
640196b6:	je     0x64019715
640196b8:	sub    eax,ecx
640196ba:	je     0x64019624
640196c0:	dec    eax
640196c1:	dec    eax
640196c2:	jne    0x64019a65
640196c8:	add    edi,0x4
640196cb:	test   WORD PTR [ebp-0x18],0x810
640196d1:	mov    DWORD PTR [ebp-0x2c],edi
640196d4:	je     0x640196fd
640196d6:	movzx  eax,WORD PTR [edi-0x4]
640196da:	push   eax
640196db:	push   0x200
640196e0:	lea    eax,[ebp-0x14]
640196e3:	push   eax
640196e4:	lea    eax,[ebp-0x28]
640196e7:	push   eax
640196e8:	call   0x6401de5b
640196ed:	add    esp,0x10
640196f0:	test   eax,eax
640196f2:	je     0x6401970a
640196f4:	mov    DWORD PTR [ebp-0x50],0x1
640196fb:	jmp    0x6401970a
640196fd:	mov    al,BYTE PTR [edi-0x4]
64019700:	mov    BYTE PTR [ebp-0x14],al
64019703:	mov    DWORD PTR [ebp-0x28],0x1
6401970a:	lea    eax,[ebp-0x14]
6401970d:	mov    DWORD PTR [ebp-0x24],eax
64019710:	jmp    0x64019a65
64019715:	mov    eax,DWORD PTR [edi]
64019717:	add    edi,0x4
6401971a:	cmp    eax,esi
6401971c:	mov    DWORD PTR [ebp-0x2c],edi
6401971f:	je     0x6401974f
64019721:	mov    ecx,DWORD PTR [eax+0x4]
64019724:	cmp    ecx,esi
64019726:	je     0x6401974f
64019728:	test   WORD PTR [ebp-0x18],0x800
6401972e:	movsx  eax,WORD PTR [eax]
64019731:	mov    DWORD PTR [ebp-0x24],ecx
64019734:	je     0x64019747
64019736:	cdq    
64019737:	sub    eax,edx
64019739:	sar    eax,1
6401973b:	mov    DWORD PTR [ebp-0x44],0x1
64019742:	jmp    0x64019a62
64019747:	mov    DWORD PTR [ebp-0x44],esi
6401974a:	jmp    0x64019a62
6401974f:	mov    eax,ds:0x6402d950
64019754:	mov    DWORD PTR [ebp-0x24],eax
64019757:	push   eax
64019758:	call   0x64014630
6401975d:	pop    ecx
6401975e:	jmp    0x64019a62
64019763:	cmp    eax,0x70
64019766:	jg     0x640198f2
6401976c:	je     0x640198e6
64019772:	cmp    eax,0x65
64019775:	jl     0x64019a65
6401977b:	cmp    eax,0x67
6401977e:	jle    0x64019624
64019784:	cmp    eax,0x69
64019787:	je     0x640197e2
64019789:	cmp    eax,0x6e
6401978c:	je     0x640197ad
6401978e:	cmp    eax,0x6f
64019791:	jne    0x64019a65
64019797:	test   BYTE PTR [ebp-0x18],0x80
6401979b:	mov    DWORD PTR [ebp-0x28],0x8
640197a2:	je     0x640197ed
640197a4:	or     DWORD PTR [ebp-0x18],0x200
640197ab:	jmp    0x640197ed
640197ad:	mov    esi,DWORD PTR [edi]
640197af:	add    edi,0x4
640197b2:	mov    DWORD PTR [ebp-0x2c],edi
640197b5:	call   0x6401cea8
640197ba:	test   eax,eax
640197bc:	je     0x64019b96
640197c2:	test   BYTE PTR [ebp-0x18],0x20
640197c6:	je     0x640197d1
640197c8:	mov    ax,WORD PTR [ebp-0x34]
640197cc:	mov    WORD PTR [esi],ax
640197cf:	jmp    0x640197d6
640197d1:	mov    eax,DWORD PTR [ebp-0x34]
640197d4:	mov    DWORD PTR [esi],eax
640197d6:	mov    DWORD PTR [ebp-0x50],0x1
640197dd:	jmp    0x64019b6a
640197e2:	or     DWORD PTR [ebp-0x18],0x40
640197e6:	mov    DWORD PTR [ebp-0x28],0xa
640197ed:	mov    ecx,DWORD PTR [ebp-0x18]
640197f0:	test   cx,cx
640197f3:	jns    0x6401993c
640197f9:	mov    eax,DWORD PTR [edi]
640197fb:	mov    edx,DWORD PTR [edi+0x4]
640197fe:	add    edi,0x8
64019801:	jmp    0x64019971
64019806:	jne    0x64019816
64019808:	cmp    dl,0x67
6401980b:	jne    0x64019854
6401980d:	mov    DWORD PTR [ebp-0x20],0x1
64019814:	jmp    0x64019854
64019816:	cmp    DWORD PTR [ebp-0x20],eax
64019819:	jle    0x6401981e
6401981b:	mov    DWORD PTR [ebp-0x20],eax
6401981e:	cmp    DWORD PTR [ebp-0x20],0xa3
64019825:	jle    0x64019854
64019827:	mov    esi,DWORD PTR [ebp-0x20]
6401982a:	add    esi,0x15d
64019830:	push   esi
64019831:	call   0x64016140
64019836:	test   eax,eax
64019838:	mov    dl,BYTE PTR [ebp-0x19]
6401983b:	pop    ecx
6401983c:	mov    DWORD PTR [ebp-0x54],eax
6401983f:	je     0x6401984b
64019841:	mov    DWORD PTR [ebp-0x24],eax
64019844:	mov    DWORD PTR [ebp-0x68],esi
64019847:	mov    ebx,eax
64019849:	jmp    0x64019852
6401984b:	mov    DWORD PTR [ebp-0x20],0xa3
64019852:	xor    esi,esi
64019854:	mov    eax,DWORD PTR [edi]
64019856:	add    edi,0x8
64019859:	mov    DWORD PTR [ebp-0x80],eax
6401985c:	mov    eax,DWORD PTR [edi-0x4]
6401985f:	mov    DWORD PTR [ebp-0x7c],eax
64019862:	lea    eax,[ebp-0x64]
64019865:	push   eax
64019866:	push   DWORD PTR [ebp-0x78]
64019869:	movsx  eax,dl
6401986c:	push   DWORD PTR [ebp-0x20]
6401986f:	mov    DWORD PTR [ebp-0x2c],edi
64019872:	push   eax
64019873:	push   DWORD PTR [ebp-0x68]
64019876:	lea    eax,[ebp-0x80]
64019879:	push   ebx
6401987a:	push   eax
6401987b:	push   DWORD PTR ds:0x6402db64
64019881:	call   0x64014d5f
64019886:	pop    ecx
64019887:	call   eax
64019889:	mov    edi,DWORD PTR [ebp-0x18]
6401988c:	add    esp,0x1c
6401988f:	and    edi,0x80
64019895:	je     0x640198b1
64019897:	cmp    DWORD PTR [ebp-0x20],esi
6401989a:	jne    0x640198b1
6401989c:	lea    eax,[ebp-0x64]
6401989f:	push   eax
640198a0:	push   ebx
640198a1:	push   DWORD PTR ds:0x6402db70
640198a7:	call   0x64014d5f
640198ac:	pop    ecx
640198ad:	call   eax
640198af:	pop    ecx
640198b0:	pop    ecx
640198b1:	cmp    BYTE PTR [ebp-0x19],0x67
640198b5:	jne    0x640198d0
640198b7:	cmp    edi,esi
640198b9:	jne    0x640198d0
640198bb:	lea    eax,[ebp-0x64]
640198be:	push   eax
640198bf:	push   ebx
640198c0:	push   DWORD PTR ds:0x6402db6c
640198c6:	call   0x64014d5f
640198cb:	pop    ecx
640198cc:	call   eax
640198ce:	pop    ecx
640198cf:	pop    ecx
640198d0:	cmp    BYTE PTR [ebx],0x2d
640198d3:	jne    0x640198e0
640198d5:	or     DWORD PTR [ebp-0x18],0x100
640198dc:	inc    ebx
640198dd:	mov    DWORD PTR [ebp-0x24],ebx
640198e0:	push   ebx
640198e1:	jmp    0x64019758
640198e6:	mov    DWORD PTR [ebp-0x20],0x8
640198ed:	mov    DWORD PTR [ebp-0x4c],ecx
640198f0:	jmp    0x64019913
640198f2:	sub    eax,0x73
640198f5:	je     0x6401966b
640198fb:	dec    eax
640198fc:	dec    eax
640198fd:	je     0x640197e6
64019903:	sub    eax,0x3
64019906:	jne    0x64019a65
6401990c:	mov    DWORD PTR [ebp-0x4c],0x27
64019913:	test   BYTE PTR [ebp-0x18],0x80
64019917:	mov    DWORD PTR [ebp-0x28],0x10
6401991e:	je     0x640197ed
64019924:	mov    al,BYTE PTR [ebp-0x4c]
64019927:	add    al,0x51
64019929:	mov    BYTE PTR [ebp-0x38],0x30
6401992d:	mov    BYTE PTR [ebp-0x37],al
64019930:	mov    DWORD PTR [ebp-0x3c],0x2
64019937:	jmp    0x640197ed
6401993c:	test   cx,0x1000
64019941:	jne    0x640197f9
64019947:	add    edi,0x4
6401994a:	test   cl,0x20
6401994d:	je     0x64019964
6401994f:	test   cl,0x40
64019952:	mov    DWORD PTR [ebp-0x2c],edi
64019955:	je     0x6401995d
64019957:	movsx  eax,WORD PTR [edi-0x4]
6401995b:	jmp    0x64019961
6401995d:	movzx  eax,WORD PTR [edi-0x4]
64019961:	cdq    
64019962:	jmp    0x64019974
64019964:	test   cl,0x40
64019967:	mov    eax,DWORD PTR [edi-0x4]
6401996a:	je     0x6401996f
6401996c:	cdq    
6401996d:	jmp    0x64019971
6401996f:	xor    edx,edx
64019971:	mov    DWORD PTR [ebp-0x2c],edi
64019974:	test   cl,0x40
64019977:	je     0x64019991
64019979:	cmp    edx,esi
6401997b:	jg     0x64019991
6401997d:	jl     0x64019983
6401997f:	cmp    eax,esi
64019981:	jae    0x64019991
64019983:	neg    eax
64019985:	adc    edx,0x0
64019988:	neg    edx
6401998a:	or     DWORD PTR [ebp-0x18],0x100
64019991:	test   WORD PTR [ebp-0x18],0x9000
64019997:	mov    ebx,edx
64019999:	mov    edi,eax
6401999b:	jne    0x6401999f
6401999d:	xor    ebx,ebx
6401999f:	cmp    DWORD PTR [ebp-0x20],0x0
640199a3:	jge    0x640199ae
640199a5:	mov    DWORD PTR [ebp-0x20],0x1
640199ac:	jmp    0x640199bf
640199ae:	and    DWORD PTR [ebp-0x18],0xfffffff7
640199b2:	mov    eax,0x200
640199b7:	cmp    DWORD PTR [ebp-0x20],eax
640199ba:	jle    0x640199bf
640199bc:	mov    DWORD PTR [ebp-0x20],eax
640199bf:	mov    eax,edi
640199c1:	or     eax,ebx
640199c3:	jne    0x640199c8
640199c5:	and    DWORD PTR [ebp-0x3c],eax
640199c8:	lea    esi,[ebp+0x1eb]
640199ce:	mov    eax,DWORD PTR [ebp-0x20]
640199d1:	dec    DWORD PTR [ebp-0x20]
640199d4:	test   eax,eax
640199d6:	jg     0x640199de
640199d8:	mov    eax,edi
640199da:	or     eax,ebx
640199dc:	je     0x64019a02
640199de:	mov    eax,DWORD PTR [ebp-0x28]
640199e1:	cdq    
640199e2:	push   edx
640199e3:	push   eax
640199e4:	push   ebx
640199e5:	push   edi
640199e6:	call   0x64019d50
640199eb:	add    ecx,0x30
640199ee:	cmp    ecx,0x39
640199f1:	mov    DWORD PTR [ebp-0x68],ebx
640199f4:	mov    edi,eax
640199f6:	mov    ebx,edx
640199f8:	jle    0x640199fd
640199fa:	add    ecx,DWORD PTR [ebp-0x4c]
640199fd:	mov    BYTE PTR [esi],cl
640199ff:	dec    esi
64019a00:	jmp    0x640199ce
64019a02:	lea    eax,[ebp+0x1eb]
64019a08:	sub    eax,esi
64019a0a:	inc    esi
64019a0b:	test   WORD PTR [ebp-0x18],0x200
64019a11:	mov    DWORD PTR [ebp-0x28],eax
64019a14:	mov    DWORD PTR [ebp-0x24],esi
64019a17:	je     0x64019a65
64019a19:	test   eax,eax
64019a1b:	je     0x64019a24
64019a1d:	mov    ecx,esi
64019a1f:	cmp    BYTE PTR [ecx],0x30
64019a22:	je     0x64019a65
64019a24:	dec    DWORD PTR [ebp-0x24]
64019a27:	mov    ecx,DWORD PTR [ebp-0x24]
64019a2a:	mov    BYTE PTR [ecx],0x30
64019a2d:	inc    eax
64019a2e:	jmp    0x64019a62
64019a30:	dec    ecx
64019a31:	cmp    WORD PTR [eax],si
64019a34:	je     0x64019a3c
64019a36:	inc    eax
64019a37:	inc    eax
64019a38:	cmp    ecx,esi
64019a3a:	jne    0x64019a30
64019a3c:	sub    eax,DWORD PTR [ebp-0x24]
64019a3f:	sar    eax,1
64019a41:	jmp    0x64019a62
64019a43:	cmp    edi,esi
64019a45:	jne    0x64019a4f
64019a47:	mov    eax,ds:0x6402d950
64019a4c:	mov    DWORD PTR [ebp-0x24],eax
64019a4f:	mov    eax,DWORD PTR [ebp-0x24]
64019a52:	jmp    0x64019a5b
64019a54:	dec    ecx
64019a55:	cmp    BYTE PTR [eax],0x0
64019a58:	je     0x64019a5f
64019a5a:	inc    eax
64019a5b:	cmp    ecx,esi
64019a5d:	jne    0x64019a54
64019a5f:	sub    eax,DWORD PTR [ebp-0x24]
64019a62:	mov    DWORD PTR [ebp-0x28],eax
64019a65:	cmp    DWORD PTR [ebp-0x50],0x0
64019a69:	jne    0x64019b6a
64019a6f:	mov    eax,DWORD PTR [ebp-0x18]
64019a72:	test   al,0x40
64019a74:	je     0x64019a9b
64019a76:	test   ax,0x100
64019a7a:	je     0x64019a82
64019a7c:	mov    BYTE PTR [ebp-0x38],0x2d
64019a80:	jmp    0x64019a94
64019a82:	test   al,0x1
64019a84:	je     0x64019a8c
64019a86:	mov    BYTE PTR [ebp-0x38],0x2b
64019a8a:	jmp    0x64019a94
64019a8c:	test   al,0x2
64019a8e:	je     0x64019a9b
64019a90:	mov    BYTE PTR [ebp-0x38],0x20
64019a94:	mov    DWORD PTR [ebp-0x3c],0x1
64019a9b:	mov    ebx,DWORD PTR [ebp-0x40]
64019a9e:	sub    ebx,DWORD PTR [ebp-0x28]
64019aa1:	sub    ebx,DWORD PTR [ebp-0x3c]
64019aa4:	test   BYTE PTR [ebp-0x18],0xc
64019aa8:	jne    0x64019abb
64019aaa:	push   DWORD PTR [ebp-0x30]
64019aad:	lea    eax,[ebp-0x34]
64019ab0:	push   ebx
64019ab1:	push   0x20
64019ab3:	call   0x6401923d
64019ab8:	add    esp,0xc
64019abb:	push   DWORD PTR [ebp-0x3c]
64019abe:	mov    edi,DWORD PTR [ebp-0x30]
64019ac1:	lea    eax,[ebp-0x34]
64019ac4:	lea    ecx,[ebp-0x38]
64019ac7:	call   0x6401cfe8
64019acc:	test   BYTE PTR [ebp-0x18],0x8
64019ad0:	pop    ecx
64019ad1:	je     0x64019ae8
64019ad3:	test   BYTE PTR [ebp-0x18],0x4
64019ad7:	jne    0x64019ae8
64019ad9:	push   edi
64019ada:	push   ebx
64019adb:	push   0x30
64019add:	lea    eax,[ebp-0x34]
64019ae0:	call   0x6401923d
64019ae5:	add    esp,0xc
64019ae8:	cmp    DWORD PTR [ebp-0x44],0x0
64019aec:	mov    eax,DWORD PTR [ebp-0x28]
64019aef:	je     0x64019b42
64019af1:	test   eax,eax
64019af3:	jle    0x64019b42
64019af5:	mov    esi,DWORD PTR [ebp-0x24]
64019af8:	mov    DWORD PTR [ebp-0x68],eax
64019afb:	movzx  eax,WORD PTR [esi]
64019afe:	dec    DWORD PTR [ebp-0x68]
64019b01:	push   eax
64019b02:	push   0x6
64019b04:	lea    eax,[ebp+0x1ec]
64019b0a:	push   eax
64019b0b:	lea    eax,[ebp-0x70]
64019b0e:	inc    esi
64019b0f:	push   eax
64019b10:	inc    esi
64019b11:	call   0x6401de5b
64019b16:	add    esp,0x10
64019b19:	test   eax,eax
64019b1b:	jne    0x64019b3c
64019b1d:	cmp    DWORD PTR [ebp-0x70],eax
64019b20:	je     0x64019b3c
64019b22:	push   DWORD PTR [ebp-0x70]
64019b25:	lea    eax,[ebp-0x34]
64019b28:	lea    ecx,[ebp+0x1ec]
64019b2e:	call   0x6401cfe8
64019b33:	cmp    DWORD PTR [ebp-0x68],0x0
64019b37:	pop    ecx
64019b38:	jne    0x64019afb
64019b3a:	jmp    0x64019b4f
64019b3c:	or     DWORD PTR [ebp-0x34],0xffffffff
64019b40:	jmp    0x64019b4f
64019b42:	mov    ecx,DWORD PTR [ebp-0x24]
64019b45:	push   eax
64019b46:	lea    eax,[ebp-0x34]
64019b49:	call   0x6401cfe8
64019b4e:	pop    ecx
64019b4f:	cmp    DWORD PTR [ebp-0x34],0x0
64019b53:	jl     0x64019b6a
64019b55:	test   BYTE PTR [ebp-0x18],0x4
64019b59:	je     0x64019b6a
64019b5b:	push   edi
64019b5c:	push   ebx
64019b5d:	push   0x20
64019b5f:	lea    eax,[ebp-0x34]
64019b62:	call   0x6401923d
64019b67:	add    esp,0xc
64019b6a:	cmp    DWORD PTR [ebp-0x54],0x0
64019b6e:	je     0x64019b7d
64019b70:	push   DWORD PTR [ebp-0x54]
64019b73:	call   0x64013d06
64019b78:	and    DWORD PTR [ebp-0x54],0x0
64019b7c:	pop    ecx
64019b7d:	mov    ebx,DWORD PTR [ebp-0x48]
64019b80:	mov    al,BYTE PTR [ebx]
64019b82:	test   al,al
64019b84:	mov    BYTE PTR [ebp-0x19],al
64019b87:	je     0x64019bad
64019b89:	mov    ecx,DWORD PTR [ebp-0x74]
64019b8c:	mov    edi,DWORD PTR [ebp-0x2c]
64019b8f:	mov    dl,al
64019b91:	jmp    0x640193bf
64019b96:	call   0x64014c30
64019b9b:	mov    DWORD PTR [eax],0x16
64019ba1:	xor    eax,eax
64019ba3:	push   eax
64019ba4:	push   eax
64019ba5:	push   eax
64019ba6:	push   eax
64019ba7:	push   eax
64019ba8:	jmp    0x640192d1
64019bad:	cmp    BYTE PTR [ebp-0x58],0x0
64019bb1:	je     0x64019bba
64019bb3:	mov    eax,DWORD PTR [ebp-0x5c]
64019bb6:	and    DWORD PTR [eax+0x70],0xfffffffd
64019bba:	mov    eax,DWORD PTR [ebp-0x34]
64019bbd:	mov    ecx,DWORD PTR [ebp+0x1f4]
64019bc3:	pop    edi
64019bc4:	pop    esi
64019bc5:	xor    ecx,ebp
64019bc7:	pop    ebx
64019bc8:	call   0x64012e6c
64019bcd:	add    ebp,0x1f8
64019bd3:	leave  
64019bd4:	ret    
64019bd5:	mov    ds:0xa640195,eax
64019bda:	xchg   esp,eax
64019bdb:	add    DWORD PTR [ebp+eiz*1-0x6c],esp
64019bdf:	add    DWORD PTR [esp+esi*2-0x6c],esp
64019be3:	add    DWORD PTR [esi+ebp*4-0x6c],esp
64019be7:	add    DWORD PTR [esi+esi*4-0x6c],esp
64019beb:	add    DWORD PTR [ebp+ebp*8-0x6c],esp
64019bef:	add    DWORD PTR [ebp+eiz*8-0x6b],esp
64019bf3:	add    DWORD PTR [ebp+edx*2-0x75],esp
64019bf7:	in     al,dx
64019bf8:	sub    esp,0x20
64019bfb:	push   ebx
64019bfc:	xor    ebx,ebx
64019bfe:	cmp    DWORD PTR [ebp+0x14],ebx
64019c01:	jne    0x64019c23
64019c03:	call   0x64014c30
64019c08:	push   ebx
64019c09:	push   ebx
64019c0a:	push   ebx
64019c0b:	push   ebx
64019c0c:	push   ebx
64019c0d:	mov    DWORD PTR [eax],0x16
64019c13:	call   0x640129a4
64019c18:	add    esp,0x14
64019c1b:	or     eax,0xffffffff
64019c1e:	jmp    0x64019cbc
64019c23:	push   esi
64019c24:	mov    esi,DWORD PTR [ebp+0xc]
64019c27:	push   edi
64019c28:	mov    edi,DWORD PTR [ebp+0x10]
64019c2b:	cmp    edi,ebx
64019c2d:	je     0x64019c50
64019c2f:	cmp    esi,ebx
64019c31:	jne    0x64019c50
64019c33:	call   0x64014c30
64019c38:	push   ebx
64019c39:	push   ebx
64019c3a:	push   ebx
64019c3b:	push   ebx
64019c3c:	push   ebx
64019c3d:	mov    DWORD PTR [eax],0x16
64019c43:	call   0x640129a4
64019c48:	add    esp,0x14
64019c4b:	or     eax,0xffffffff
64019c4e:	jmp    0x64019cba
64019c50:	mov    eax,0x7fffffff
64019c55:	cmp    edi,eax
64019c57:	mov    DWORD PTR [ebp-0x1c],eax
64019c5a:	ja     0x64019c5f
64019c5c:	mov    DWORD PTR [ebp-0x1c],edi
64019c5f:	push   DWORD PTR [ebp+0x1c]
64019c62:	lea    eax,[ebp-0x20]
64019c65:	push   DWORD PTR [ebp+0x18]
64019c68:	mov    DWORD PTR [ebp-0x14],0x42
64019c6f:	push   DWORD PTR [ebp+0x14]
64019c72:	mov    DWORD PTR [ebp-0x18],esi
64019c75:	push   eax
64019c76:	mov    DWORD PTR [ebp-0x20],esi
64019c79:	call   DWORD PTR [ebp+0x8]
64019c7c:	add    esp,0x10
64019c7f:	cmp    esi,ebx
64019c81:	mov    DWORD PTR [ebp+0x14],eax
64019c84:	je     0x64019cba
64019c86:	cmp    eax,ebx
64019c88:	jl     0x64019cac
64019c8a:	dec    DWORD PTR [ebp-0x1c]
64019c8d:	js     0x64019c96
64019c8f:	mov    eax,DWORD PTR [ebp-0x20]
64019c92:	mov    BYTE PTR [eax],bl
64019c94:	jmp    0x64019ca7
64019c96:	lea    eax,[ebp-0x20]
64019c99:	push   eax
64019c9a:	push   ebx
64019c9b:	call   0x64016f75
64019ca0:	cmp    eax,0xffffffff
64019ca3:	pop    ecx
64019ca4:	pop    ecx
64019ca5:	je     0x64019cac
64019ca7:	mov    eax,DWORD PTR [ebp+0x14]
64019caa:	jmp    0x64019cba
64019cac:	xor    eax,eax
64019cae:	cmp    DWORD PTR [ebp-0x1c],ebx
64019cb1:	mov    BYTE PTR [esi+edi*1-0x1],bl
64019cb5:	setge  al
64019cb8:	dec    eax
64019cb9:	dec    eax
64019cba:	pop    edi
64019cbb:	pop    esi
64019cbc:	pop    ebx
64019cbd:	leave  
64019cbe:	ret    
64019cbf:	push   ebp
64019cc0:	mov    ebp,esp
64019cc2:	push   ebx
64019cc3:	xor    ebx,ebx
64019cc5:	cmp    DWORD PTR [ebp+0x10],ebx
64019cc8:	jne    0x64019ce7
64019cca:	call   0x64014c30
64019ccf:	push   ebx
64019cd0:	push   ebx
64019cd1:	push   ebx
64019cd2:	push   ebx
64019cd3:	push   ebx
64019cd4:	mov    DWORD PTR [eax],0x16
64019cda:	call   0x640129a4
64019cdf:	add    esp,0x14
64019ce2:	or     eax,0xffffffff
64019ce5:	jmp    0x64019d42
64019ce7:	push   esi
64019ce8:	mov    esi,DWORD PTR [ebp+0x8]
64019ceb:	cmp    esi,ebx
64019ced:	je     0x64019cf4
64019cef:	cmp    DWORD PTR [ebp+0xc],ebx
64019cf2:	ja     0x64019d01
64019cf4:	call   0x64014c30
64019cf9:	mov    DWORD PTR [eax],0x16
64019cff:	jmp    0x64019d31
64019d01:	push   DWORD PTR [ebp+0x18]
64019d04:	push   DWORD PTR [ebp+0x14]
64019d07:	push   DWORD PTR [ebp+0x10]
64019d0a:	push   DWORD PTR [ebp+0xc]
64019d0d:	push   esi
64019d0e:	push   0x6401d032
64019d13:	call   0x64019bf5
64019d18:	add    esp,0x18
64019d1b:	cmp    eax,ebx
64019d1d:	jge    0x64019d21
64019d1f:	mov    BYTE PTR [esi],bl
64019d21:	cmp    eax,0xfffffffe
64019d24:	jne    0x64019d41
64019d26:	call   0x64014c30
64019d2b:	mov    DWORD PTR [eax],0x22
64019d31:	push   ebx
64019d32:	push   ebx
64019d33:	push   ebx
64019d34:	push   ebx
64019d35:	push   ebx
64019d36:	call   0x640129a4
64019d3b:	add    esp,0x14
64019d3e:	or     eax,0xffffffff
64019d41:	pop    esi
64019d42:	pop    ebx
64019d43:	pop    ebp
64019d44:	ret    
64019d45:	int3   
64019d46:	int3   
64019d47:	int3   
64019d48:	int3   
64019d49:	int3   
64019d4a:	int3   
64019d4b:	int3   
64019d4c:	int3   
64019d4d:	int3   
64019d4e:	int3   
64019d4f:	int3   
64019d50:	push   esi
64019d51:	mov    eax,DWORD PTR [esp+0x14]
64019d55:	or     eax,eax
64019d57:	jne    0x64019d81
64019d59:	mov    ecx,DWORD PTR [esp+0x10]
64019d5d:	mov    eax,DWORD PTR [esp+0xc]
64019d61:	xor    edx,edx
64019d63:	div    ecx
64019d65:	mov    ebx,eax
64019d67:	mov    eax,DWORD PTR [esp+0x8]
64019d6b:	div    ecx
64019d6d:	mov    esi,eax
64019d6f:	mov    eax,ebx
64019d71:	mul    DWORD PTR [esp+0x10]
64019d75:	mov    ecx,eax
64019d77:	mov    eax,esi
64019d79:	mul    DWORD PTR [esp+0x10]
64019d7d:	add    edx,ecx
64019d7f:	jmp    0x64019dc8
64019d81:	mov    ecx,eax
64019d83:	mov    ebx,DWORD PTR [esp+0x10]
64019d87:	mov    edx,DWORD PTR [esp+0xc]
64019d8b:	mov    eax,DWORD PTR [esp+0x8]
64019d8f:	shr    ecx,1
64019d91:	rcr    ebx,1
64019d93:	shr    edx,1
64019d95:	rcr    eax,1
64019d97:	or     ecx,ecx
64019d99:	jne    0x64019d8f
64019d9b:	div    ebx
64019d9d:	mov    esi,eax
64019d9f:	mul    DWORD PTR [esp+0x14]
64019da3:	mov    ecx,eax
64019da5:	mov    eax,DWORD PTR [esp+0x10]
64019da9:	mul    esi
64019dab:	add    edx,ecx
64019dad:	jb     0x64019dbd
64019daf:	cmp    edx,DWORD PTR [esp+0xc]
64019db3:	ja     0x64019dbd
64019db5:	jb     0x64019dc6
64019db7:	cmp    eax,DWORD PTR [esp+0x8]
64019dbb:	jbe    0x64019dc6
64019dbd:	dec    esi
64019dbe:	sub    eax,DWORD PTR [esp+0x10]
64019dc2:	sbb    edx,DWORD PTR [esp+0x14]
64019dc6:	xor    ebx,ebx
64019dc8:	sub    eax,DWORD PTR [esp+0x8]
64019dcc:	sbb    edx,DWORD PTR [esp+0xc]
64019dd0:	neg    edx
64019dd2:	neg    eax
64019dd4:	sbb    edx,0x0
64019dd7:	mov    ecx,edx
64019dd9:	mov    edx,ebx
64019ddb:	mov    ebx,ecx
64019ddd:	mov    ecx,eax
64019ddf:	mov    eax,esi
64019de1:	pop    esi
64019de2:	ret    0x10
64019de5:	push   ebp
64019de6:	mov    ebp,esp
64019de8:	sub    esp,0x18
64019deb:	push   ebx
64019dec:	push   DWORD PTR [ebp+0x10]
64019def:	lea    ecx,[ebp-0x18]
64019df2:	call   0x6401300f
64019df7:	mov    ebx,DWORD PTR [ebp+0x8]
64019dfa:	lea    eax,[ebx+0x1]
64019dfd:	cmp    eax,0x100
64019e02:	ja     0x64019e13
64019e04:	mov    eax,DWORD PTR [ebp-0x18]
64019e07:	mov    eax,DWORD PTR [eax+0xc8]
64019e0d:	movzx  eax,WORD PTR [eax+ebx*2]
64019e11:	jmp    0x64019e88
64019e13:	mov    DWORD PTR [ebp+0x8],ebx
64019e16:	sar    DWORD PTR [ebp+0x8],0x8
64019e1a:	lea    eax,[ebp-0x18]
64019e1d:	push   eax
64019e1e:	mov    eax,DWORD PTR [ebp+0x8]
64019e21:	and    eax,0xff
64019e26:	push   eax
64019e27:	call   0x6401a280
64019e2c:	test   eax,eax
64019e2e:	pop    ecx
64019e2f:	pop    ecx
64019e30:	je     0x64019e44
64019e32:	mov    al,BYTE PTR [ebp+0x8]
64019e35:	push   0x2
64019e37:	mov    BYTE PTR [ebp-0x8],al
64019e3a:	mov    BYTE PTR [ebp-0x7],bl
64019e3d:	mov    BYTE PTR [ebp-0x6],0x0
64019e41:	pop    ecx
64019e42:	jmp    0x64019e4e
64019e44:	xor    ecx,ecx
64019e46:	mov    BYTE PTR [ebp-0x8],bl
64019e49:	mov    BYTE PTR [ebp-0x7],0x0
64019e4d:	inc    ecx
64019e4e:	mov    eax,DWORD PTR [ebp-0x18]
64019e51:	push   0x1
64019e53:	push   DWORD PTR [eax+0x14]
64019e56:	push   DWORD PTR [eax+0x4]
64019e59:	lea    eax,[ebp-0x4]
64019e5c:	push   eax
64019e5d:	push   ecx
64019e5e:	lea    eax,[ebp-0x8]
64019e61:	push   eax
64019e62:	lea    eax,[ebp-0x18]
64019e65:	push   0x1
64019e67:	push   eax
64019e68:	call   0x6401bd75
64019e6d:	add    esp,0x20
64019e70:	test   eax,eax
64019e72:	jne    0x64019e84
64019e74:	cmp    BYTE PTR [ebp-0xc],al
64019e77:	je     0x64019e80
64019e79:	mov    eax,DWORD PTR [ebp-0x10]
64019e7c:	and    DWORD PTR [eax+0x70],0xfffffffd
64019e80:	xor    eax,eax
64019e82:	jmp    0x64019e98
64019e84:	movzx  eax,WORD PTR [ebp-0x4]
64019e88:	and    eax,DWORD PTR [ebp+0xc]
64019e8b:	cmp    BYTE PTR [ebp-0xc],0x0
64019e8f:	je     0x64019e98
64019e91:	mov    ecx,DWORD PTR [ebp-0x10]
64019e94:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019e98:	pop    ebx
64019e99:	leave  
64019e9a:	ret    
64019e9b:	push   ebp
64019e9c:	mov    ebp,esp
64019e9e:	sub    esp,0x14
64019ea1:	mov    eax,ds:0x6402d09c
64019ea6:	xor    eax,ebp
64019ea8:	mov    DWORD PTR [ebp-0x4],eax
64019eab:	push   ebx
64019eac:	push   esi
64019ead:	xor    ebx,ebx
64019eaf:	cmp    DWORD PTR ds:0x6402ea70,ebx
64019eb5:	push   edi
64019eb6:	mov    esi,ecx
64019eb8:	jne    0x64019ef2
64019eba:	push   ebx
64019ebb:	push   ebx
64019ebc:	xor    edi,edi
64019ebe:	inc    edi
64019ebf:	push   edi
64019ec0:	push   0x640276c4
64019ec5:	push   0x100
64019eca:	push   ebx
64019ecb:	call   DWORD PTR ds:0x64025158
64019ed1:	test   eax,eax
64019ed3:	je     0x64019edd
64019ed5:	mov    DWORD PTR ds:0x6402ea70,edi
64019edb:	jmp    0x64019ef2
64019edd:	call   DWORD PTR ds:0x64025044
64019ee3:	cmp    eax,0x78
64019ee6:	jne    0x64019ef2
64019ee8:	mov    DWORD PTR ds:0x6402ea70,0x2
64019ef2:	cmp    DWORD PTR [ebp+0x14],ebx
64019ef5:	jle    0x64019f19
64019ef7:	mov    ecx,DWORD PTR [ebp+0x14]
64019efa:	mov    eax,DWORD PTR [ebp+0x10]
64019efd:	dec    ecx
64019efe:	cmp    BYTE PTR [eax],bl
64019f00:	je     0x64019f0a
64019f02:	inc    eax
64019f03:	cmp    ecx,ebx
64019f05:	jne    0x64019efd
64019f07:	or     ecx,0xffffffff
64019f0a:	mov    eax,DWORD PTR [ebp+0x14]
64019f0d:	sub    eax,ecx
64019f0f:	dec    eax
64019f10:	cmp    eax,DWORD PTR [ebp+0x14]
64019f13:	jge    0x64019f16
64019f15:	inc    eax
64019f16:	mov    DWORD PTR [ebp+0x14],eax
64019f19:	mov    eax,ds:0x6402ea70
64019f1e:	cmp    eax,0x2
64019f21:	je     0x6401a0d2
64019f27:	cmp    eax,ebx
64019f29:	je     0x6401a0d2
64019f2f:	cmp    eax,0x1
64019f32:	jne    0x6401a103
64019f38:	cmp    DWORD PTR [ebp+0x20],ebx
64019f3b:	mov    DWORD PTR [ebp-0x8],ebx
64019f3e:	jne    0x64019f48
64019f40:	mov    eax,DWORD PTR [esi]
64019f42:	mov    eax,DWORD PTR [eax+0x4]
64019f45:	mov    DWORD PTR [ebp+0x20],eax
64019f48:	mov    esi,DWORD PTR ds:0x64025024
64019f4e:	xor    eax,eax
64019f50:	cmp    DWORD PTR [ebp+0x24],ebx
64019f53:	push   ebx
64019f54:	push   ebx
64019f55:	push   DWORD PTR [ebp+0x14]
64019f58:	setne  al
64019f5b:	push   DWORD PTR [ebp+0x10]
64019f5e:	lea    eax,[eax*8+0x1]
64019f65:	push   eax
64019f66:	push   DWORD PTR [ebp+0x20]
64019f69:	call   esi
64019f6b:	mov    edi,eax
64019f6d:	cmp    edi,ebx
64019f6f:	je     0x6401a103
64019f75:	jle    0x64019fba
64019f77:	push   0xffffffe0
64019f79:	xor    edx,edx
64019f7b:	pop    eax
64019f7c:	div    edi
64019f7e:	cmp    eax,0x2
64019f81:	jb     0x64019fba
64019f83:	lea    eax,[edi+edi*1+0x8]
64019f87:	cmp    eax,0x400
64019f8c:	ja     0x64019fa1
64019f8e:	call   0x640135f0
64019f93:	mov    eax,esp
64019f95:	cmp    eax,ebx
64019f97:	je     0x64019fb5
64019f99:	mov    DWORD PTR [eax],0xcccc
64019f9f:	jmp    0x64019fb2
64019fa1:	push   eax
64019fa2:	call   0x64013de3
64019fa7:	cmp    eax,ebx
64019fa9:	pop    ecx
64019faa:	je     0x64019fb5
64019fac:	mov    DWORD PTR [eax],0xdddd
64019fb2:	add    eax,0x8
64019fb5:	mov    DWORD PTR [ebp-0xc],eax
64019fb8:	jmp    0x64019fbd
64019fba:	mov    DWORD PTR [ebp-0xc],ebx
64019fbd:	cmp    DWORD PTR [ebp-0xc],ebx
64019fc0:	je     0x6401a103
64019fc6:	push   edi
64019fc7:	push   DWORD PTR [ebp-0xc]
64019fca:	push   DWORD PTR [ebp+0x14]
64019fcd:	push   DWORD PTR [ebp+0x10]
64019fd0:	push   0x1
64019fd2:	push   DWORD PTR [ebp+0x20]
64019fd5:	call   esi
64019fd7:	test   eax,eax
64019fd9:	je     0x6401a0c1
64019fdf:	mov    esi,DWORD PTR ds:0x64025158
64019fe5:	push   ebx
64019fe6:	push   ebx
64019fe7:	push   edi
64019fe8:	push   DWORD PTR [ebp-0xc]
64019feb:	push   DWORD PTR [ebp+0xc]
64019fee:	push   DWORD PTR [ebp+0x8]
64019ff1:	call   esi
64019ff3:	mov    ecx,eax
64019ff5:	cmp    ecx,ebx
64019ff7:	mov    DWORD PTR [ebp-0x8],ecx
64019ffa:	je     0x6401a0c1
6401a000:	test   WORD PTR [ebp+0xc],0x400
6401a006:	je     0x6401a031
6401a008:	cmp    DWORD PTR [ebp+0x1c],ebx
6401a00b:	je     0x6401a0c1
6401a011:	cmp    ecx,DWORD PTR [ebp+0x1c]
6401a014:	jg     0x6401a0c1
6401a01a:	push   DWORD PTR [ebp+0x1c]
6401a01d:	push   DWORD PTR [ebp+0x18]
6401a020:	push   edi
6401a021:	push   DWORD PTR [ebp-0xc]
6401a024:	push   DWORD PTR [ebp+0xc]
6401a027:	push   DWORD PTR [ebp+0x8]
6401a02a:	call   esi
6401a02c:	jmp    0x6401a0c1
6401a031:	cmp    ecx,ebx
6401a033:	jle    0x6401a07a
6401a035:	push   0xffffffe0
6401a037:	xor    edx,edx
6401a039:	pop    eax
6401a03a:	div    ecx
6401a03c:	cmp    eax,0x2
6401a03f:	jb     0x6401a07a
6401a041:	lea    eax,[ecx+ecx*1+0x8]
6401a045:	cmp    eax,0x400
6401a04a:	ja     0x6401a062
6401a04c:	call   0x640135f0
6401a051:	mov    esi,esp
6401a053:	cmp    esi,ebx
6401a055:	je     0x6401a0c1
6401a057:	mov    DWORD PTR [esi],0xcccc
6401a05d:	add    esi,0x8
6401a060:	jmp    0x6401a07c
6401a062:	push   eax
6401a063:	call   0x64013de3
6401a068:	cmp    eax,ebx
6401a06a:	pop    ecx
6401a06b:	je     0x6401a076
6401a06d:	mov    DWORD PTR [eax],0xdddd
6401a073:	add    eax,0x8
6401a076:	mov    esi,eax
6401a078:	jmp    0x6401a07c
6401a07a:	xor    esi,esi
6401a07c:	cmp    esi,ebx
6401a07e:	je     0x6401a0c1
6401a080:	push   DWORD PTR [ebp-0x8]
6401a083:	push   esi
6401a084:	push   edi
6401a085:	push   DWORD PTR [ebp-0xc]
6401a088:	push   DWORD PTR [ebp+0xc]
6401a08b:	push   DWORD PTR [ebp+0x8]
6401a08e:	call   DWORD PTR ds:0x64025158
6401a094:	test   eax,eax
6401a096:	je     0x6401a0ba
6401a098:	cmp    DWORD PTR [ebp+0x1c],ebx
6401a09b:	push   ebx
6401a09c:	push   ebx
6401a09d:	jne    0x6401a0a3
6401a09f:	push   ebx
6401a0a0:	push   ebx
6401a0a1:	jmp    0x6401a0a9
6401a0a3:	push   DWORD PTR [ebp+0x1c]
6401a0a6:	push   DWORD PTR [ebp+0x18]
6401a0a9:	push   DWORD PTR [ebp-0x8]
6401a0ac:	push   esi
6401a0ad:	push   ebx
6401a0ae:	push   DWORD PTR [ebp+0x20]
6401a0b1:	call   DWORD PTR ds:0x64025028
6401a0b7:	mov    DWORD PTR [ebp-0x8],eax
6401a0ba:	push   esi
6401a0bb:	call   0x6401337c
6401a0c0:	pop    ecx
6401a0c1:	push   DWORD PTR [ebp-0xc]
6401a0c4:	call   0x6401337c
6401a0c9:	mov    eax,DWORD PTR [ebp-0x8]
6401a0cc:	pop    ecx
6401a0cd:	jmp    0x6401a22b
6401a0d2:	cmp    DWORD PTR [ebp+0x8],ebx
6401a0d5:	mov    DWORD PTR [ebp-0xc],ebx
6401a0d8:	mov    DWORD PTR [ebp-0x10],ebx
6401a0db:	jne    0x6401a0e5
6401a0dd:	mov    eax,DWORD PTR [esi]
6401a0df:	mov    eax,DWORD PTR [eax+0x14]
6401a0e2:	mov    DWORD PTR [ebp+0x8],eax
6401a0e5:	cmp    DWORD PTR [ebp+0x20],ebx
6401a0e8:	jne    0x6401a0f2
6401a0ea:	mov    eax,DWORD PTR [esi]
6401a0ec:	mov    eax,DWORD PTR [eax+0x4]
6401a0ef:	mov    DWORD PTR [ebp+0x20],eax
6401a0f2:	push   DWORD PTR [ebp+0x8]
6401a0f5:	call   0x6401d9e2
6401a0fa:	cmp    eax,0xffffffff
6401a0fd:	pop    ecx
6401a0fe:	mov    DWORD PTR [ebp-0x14],eax
6401a101:	jne    0x6401a10a
6401a103:	xor    eax,eax
6401a105:	jmp    0x6401a22b
6401a10a:	cmp    eax,DWORD PTR [ebp+0x20]
6401a10d:	je     0x6401a1ee
6401a113:	push   ebx
6401a114:	push   ebx
6401a115:	lea    ecx,[ebp+0x14]
6401a118:	push   ecx
6401a119:	push   DWORD PTR [ebp+0x10]
6401a11c:	push   eax
6401a11d:	push   DWORD PTR [ebp+0x20]
6401a120:	call   0x6401da29
6401a125:	add    esp,0x18
6401a128:	cmp    eax,ebx
6401a12a:	mov    DWORD PTR [ebp-0xc],eax
6401a12d:	je     0x6401a103
6401a12f:	mov    esi,DWORD PTR ds:0x64025154
6401a135:	push   ebx
6401a136:	push   ebx
6401a137:	push   DWORD PTR [ebp+0x14]
6401a13a:	push   eax
6401a13b:	push   DWORD PTR [ebp+0xc]
6401a13e:	push   DWORD PTR [ebp+0x8]
6401a141:	call   esi
6401a143:	cmp    eax,ebx
6401a145:	mov    DWORD PTR [ebp-0x8],eax
6401a148:	jne    0x6401a151
6401a14a:	xor    esi,esi
6401a14c:	jmp    0x6401a208
6401a151:	jle    0x6401a190
6401a153:	cmp    eax,0xffffffe0
6401a156:	ja     0x6401a190
6401a158:	add    eax,0x8
6401a15b:	cmp    eax,0x400
6401a160:	ja     0x6401a178
6401a162:	call   0x640135f0
6401a167:	mov    edi,esp
6401a169:	cmp    edi,ebx
6401a16b:	je     0x6401a14a
6401a16d:	mov    DWORD PTR [edi],0xcccc
6401a173:	add    edi,0x8
6401a176:	jmp    0x6401a192
6401a178:	push   eax
6401a179:	call   0x64013de3
6401a17e:	cmp    eax,ebx
6401a180:	pop    ecx
6401a181:	je     0x6401a18c
6401a183:	mov    DWORD PTR [eax],0xdddd
6401a189:	add    eax,0x8
6401a18c:	mov    edi,eax
6401a18e:	jmp    0x6401a192
6401a190:	xor    edi,edi
6401a192:	cmp    edi,ebx
6401a194:	je     0x6401a14a
6401a196:	push   DWORD PTR [ebp-0x8]
6401a199:	push   ebx
6401a19a:	push   edi
6401a19b:	call   0x64013570
6401a1a0:	add    esp,0xc
6401a1a3:	push   DWORD PTR [ebp-0x8]
6401a1a6:	push   edi
6401a1a7:	push   DWORD PTR [ebp+0x14]
6401a1aa:	push   DWORD PTR [ebp-0xc]
6401a1ad:	push   DWORD PTR [ebp+0xc]
6401a1b0:	push   DWORD PTR [ebp+0x8]
6401a1b3:	call   esi
6401a1b5:	cmp    eax,ebx
6401a1b7:	mov    DWORD PTR [ebp-0x8],eax
6401a1ba:	jne    0x6401a1c0
6401a1bc:	xor    esi,esi
6401a1be:	jmp    0x6401a1e5
6401a1c0:	push   DWORD PTR [ebp+0x1c]
6401a1c3:	lea    eax,[ebp-0x8]
6401a1c6:	push   DWORD PTR [ebp+0x18]
6401a1c9:	push   eax
6401a1ca:	push   edi
6401a1cb:	push   DWORD PTR [ebp+0x20]
6401a1ce:	push   DWORD PTR [ebp-0x14]
6401a1d1:	call   0x6401da29
6401a1d6:	mov    esi,eax
6401a1d8:	mov    DWORD PTR [ebp-0x10],esi
6401a1db:	add    esp,0x18
6401a1de:	neg    esi
6401a1e0:	sbb    esi,esi
6401a1e2:	and    esi,DWORD PTR [ebp-0x8]
6401a1e5:	push   edi
6401a1e6:	call   0x6401337c
6401a1eb:	pop    ecx
6401a1ec:	jmp    0x6401a208
6401a1ee:	push   DWORD PTR [ebp+0x1c]
6401a1f1:	push   DWORD PTR [ebp+0x18]
6401a1f4:	push   DWORD PTR [ebp+0x14]
6401a1f7:	push   DWORD PTR [ebp+0x10]
6401a1fa:	push   DWORD PTR [ebp+0xc]
6401a1fd:	push   DWORD PTR [ebp+0x8]
6401a200:	call   DWORD PTR ds:0x64025154
6401a206:	mov    esi,eax
6401a208:	cmp    DWORD PTR [ebp-0xc],ebx
6401a20b:	je     0x6401a216
6401a20d:	push   DWORD PTR [ebp-0xc]
6401a210:	call   0x64013d06
6401a215:	pop    ecx
6401a216:	mov    eax,DWORD PTR [ebp-0x10]
6401a219:	cmp    eax,ebx
6401a21b:	je     0x6401a229
6401a21d:	cmp    DWORD PTR [ebp+0x18],eax
6401a220:	je     0x6401a229
6401a222:	push   eax
6401a223:	call   0x64013d06
6401a228:	pop    ecx
6401a229:	mov    eax,esi
6401a22b:	lea    esp,[ebp-0x20]
6401a22e:	pop    edi
6401a22f:	pop    esi
6401a230:	pop    ebx
6401a231:	mov    ecx,DWORD PTR [ebp-0x4]
6401a234:	xor    ecx,ebp
6401a236:	call   0x64012e6c
6401a23b:	leave  
6401a23c:	ret    
6401a23d:	push   ebp
6401a23e:	mov    ebp,esp
6401a240:	sub    esp,0x10
6401a243:	push   DWORD PTR [ebp+0x8]
6401a246:	lea    ecx,[ebp-0x10]
6401a249:	call   0x6401300f
6401a24e:	push   DWORD PTR [ebp+0x28]
6401a251:	lea    ecx,[ebp-0x10]
6401a254:	push   DWORD PTR [ebp+0x24]
6401a257:	push   DWORD PTR [ebp+0x20]
6401a25a:	push   DWORD PTR [ebp+0x1c]
6401a25d:	push   DWORD PTR [ebp+0x18]
6401a260:	push   DWORD PTR [ebp+0x14]
6401a263:	push   DWORD PTR [ebp+0x10]
6401a266:	push   DWORD PTR [ebp+0xc]
6401a269:	call   0x64019e9b
6401a26e:	add    esp,0x20
6401a271:	cmp    BYTE PTR [ebp-0x4],0x0
6401a275:	je     0x6401a27e
6401a277:	mov    ecx,DWORD PTR [ebp-0x8]
6401a27a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401a27e:	leave  
6401a27f:	ret    
6401a280:	push   ebp
6401a281:	mov    ebp,esp
6401a283:	sub    esp,0x10
6401a286:	push   DWORD PTR [ebp+0xc]
6401a289:	lea    ecx,[ebp-0x10]
6401a28c:	call   0x6401300f
6401a291:	movzx  eax,BYTE PTR [ebp+0x8]
6401a295:	mov    ecx,DWORD PTR [ebp-0x10]
6401a298:	mov    ecx,DWORD PTR [ecx+0xc8]
6401a29e:	movzx  eax,WORD PTR [ecx+eax*2]
6401a2a2:	and    eax,0x8000
6401a2a7:	cmp    BYTE PTR [ebp-0x4],0x0
6401a2ab:	je     0x6401a2b4
6401a2ad:	mov    ecx,DWORD PTR [ebp-0x8]
6401a2b0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401a2b4:	leave  
6401a2b5:	ret    
6401a2b6:	push   0x0
6401a2b8:	push   DWORD PTR [esp+0x8]
6401a2bc:	call   0x6401a280
6401a2c1:	pop    ecx
6401a2c2:	pop    ecx
6401a2c3:	ret    
6401a2c4:	push   esi
6401a2c5:	push   edi
6401a2c6:	xor    esi,esi
6401a2c8:	mov    edi,0x6402ea78
6401a2cd:	cmp    DWORD PTR [esi*8+0x6402d964],0x1
6401a2d5:	jne    0x6401a2f5
6401a2d7:	lea    eax,[esi*8+0x6402d960]
6401a2de:	mov    DWORD PTR [eax],edi
6401a2e0:	push   0xfa0
6401a2e5:	push   DWORD PTR [eax]
6401a2e7:	add    edi,0x18
6401a2ea:	call   0x6401baf8
6401a2ef:	test   eax,eax
6401a2f1:	pop    ecx
6401a2f2:	pop    ecx
6401a2f3:	je     0x6401a301
6401a2f5:	inc    esi
6401a2f6:	cmp    esi,0x24
6401a2f9:	jl     0x6401a2cd
6401a2fb:	xor    eax,eax
6401a2fd:	inc    eax
6401a2fe:	pop    edi
6401a2ff:	pop    esi
6401a300:	ret    
6401a301:	and    DWORD PTR [esi*8+0x6402d960],0x0
6401a309:	xor    eax,eax
6401a30b:	jmp    0x6401a2fe
6401a30d:	push   ebx
6401a30e:	mov    ebx,DWORD PTR ds:0x640250a0
6401a314:	push   esi
6401a315:	mov    esi,0x6402d960
6401a31a:	push   edi
6401a31b:	mov    edi,DWORD PTR [esi]
6401a31d:	test   edi,edi
6401a31f:	je     0x6401a334
6401a321:	cmp    DWORD PTR [esi+0x4],0x1
6401a325:	je     0x6401a334
6401a327:	push   edi
6401a328:	call   ebx
6401a32a:	push   edi
6401a32b:	call   0x64013d06
6401a330:	and    DWORD PTR [esi],0x0
6401a333:	pop    ecx
6401a334:	add    esi,0x8
6401a337:	cmp    esi,0x6402da80
6401a33d:	jl     0x6401a31b
6401a33f:	mov    esi,0x6402d960
6401a344:	pop    edi
6401a345:	mov    eax,DWORD PTR [esi]
6401a347:	test   eax,eax
6401a349:	je     0x6401a354
6401a34b:	cmp    DWORD PTR [esi+0x4],0x1
6401a34f:	jne    0x6401a354
6401a351:	push   eax
6401a352:	call   ebx
6401a354:	add    esi,0x8
6401a357:	cmp    esi,0x6402da80
6401a35d:	jl     0x6401a345
6401a35f:	pop    esi
6401a360:	pop    ebx
6401a361:	ret    
6401a362:	push   ebp
6401a363:	mov    ebp,esp
6401a365:	mov    eax,DWORD PTR [ebp+0x8]
6401a368:	push   DWORD PTR [eax*8+0x6402d960]
6401a36f:	call   DWORD PTR ds:0x6402509c
6401a375:	pop    ebp
6401a376:	ret    
6401a377:	push   0xc
6401a379:	push   0x6402a7b0
6401a37e:	call   0x64014430
6401a383:	xor    edi,edi
6401a385:	inc    edi
6401a386:	mov    DWORD PTR [ebp-0x1c],edi
6401a389:	xor    ebx,ebx
6401a38b:	cmp    DWORD PTR ds:0x6402ea6c,ebx
6401a391:	jne    0x6401a3ab
6401a393:	call   0x6401b10c
6401a398:	push   0x1e
6401a39a:	call   0x6401af6c
6401a39f:	push   0xff
6401a3a4:	call   0x64016300
6401a3a9:	pop    ecx
6401a3aa:	pop    ecx
6401a3ab:	mov    esi,DWORD PTR [ebp+0x8]
6401a3ae:	lea    esi,[esi*8+0x6402d960]
6401a3b5:	cmp    DWORD PTR [esi],ebx
6401a3b7:	je     0x6401a3bd
6401a3b9:	mov    eax,edi
6401a3bb:	jmp    0x6401a42b
6401a3bd:	push   0x18
6401a3bf:	call   0x64016140
6401a3c4:	pop    ecx
6401a3c5:	mov    edi,eax
6401a3c7:	cmp    edi,ebx
6401a3c9:	jne    0x6401a3da
6401a3cb:	call   0x64014c30
6401a3d0:	mov    DWORD PTR [eax],0xc
6401a3d6:	xor    eax,eax
6401a3d8:	jmp    0x6401a42b
6401a3da:	push   0xa
6401a3dc:	call   0x6401a43a
6401a3e1:	pop    ecx
6401a3e2:	mov    DWORD PTR [ebp-0x4],ebx
6401a3e5:	cmp    DWORD PTR [esi],ebx
6401a3e7:	jne    0x6401a415
6401a3e9:	push   0xfa0
6401a3ee:	push   edi
6401a3ef:	call   0x6401baf8
6401a3f4:	pop    ecx
6401a3f5:	pop    ecx
6401a3f6:	test   eax,eax
6401a3f8:	jne    0x6401a411
6401a3fa:	push   edi
6401a3fb:	call   0x64013d06
6401a400:	pop    ecx
6401a401:	call   0x64014c30
6401a406:	mov    DWORD PTR [eax],0xc
6401a40c:	mov    DWORD PTR [ebp-0x1c],ebx
6401a40f:	jmp    0x6401a41c
6401a411:	mov    DWORD PTR [esi],edi
6401a413:	jmp    0x6401a41c
6401a415:	push   edi
6401a416:	call   0x64013d06
6401a41b:	pop    ecx
6401a41c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a423:	call   0x6401a431
6401a428:	mov    eax,DWORD PTR [ebp-0x1c]
6401a42b:	call   0x64014475
6401a430:	ret    
6401a431:	push   0xa
6401a433:	call   0x6401a362
6401a438:	pop    ecx
6401a439:	ret    
6401a43a:	push   ebp
6401a43b:	mov    ebp,esp
6401a43d:	mov    eax,DWORD PTR [ebp+0x8]
6401a440:	push   esi
6401a441:	lea    esi,[eax*8+0x6402d960]
6401a448:	cmp    DWORD PTR [esi],0x0
6401a44b:	jne    0x6401a460
6401a44d:	push   eax
6401a44e:	call   0x6401a377
6401a453:	test   eax,eax
6401a455:	pop    ecx
6401a456:	jne    0x6401a460
6401a458:	push   0x11
6401a45a:	call   0x640162b6
6401a45f:	pop    ecx
6401a460:	push   DWORD PTR [esi]
6401a462:	call   DWORD PTR ds:0x64025098
6401a468:	pop    esi
6401a469:	pop    ebp
6401a46a:	ret    
6401a46b:	push   0x140
6401a470:	push   0x0
6401a472:	push   DWORD PTR ds:0x6402ea6c
6401a478:	call   DWORD PTR ds:0x64025100
6401a47e:	test   eax,eax
6401a480:	mov    ds:0x640324c8,eax
6401a485:	jne    0x6401a488
6401a487:	ret    
6401a488:	mov    ecx,DWORD PTR [esp+0x4]
6401a48c:	and    DWORD PTR ds:0x6402ebc8,0x0
6401a493:	and    DWORD PTR ds:0x640324c4,0x0
6401a49a:	mov    ds:0x640324d0,eax
6401a49f:	xor    eax,eax
6401a4a1:	mov    DWORD PTR ds:0x640324cc,ecx
6401a4a7:	mov    DWORD PTR ds:0x640324d4,0x10
6401a4b1:	inc    eax
6401a4b2:	ret    
6401a4b3:	mov    ecx,DWORD PTR ds:0x640324c4
6401a4b9:	mov    eax,ds:0x640324c8
6401a4be:	imul   ecx,ecx,0x14
6401a4c1:	add    ecx,eax
6401a4c3:	jmp    0x6401a4d7
6401a4c5:	mov    edx,DWORD PTR [esp+0x4]
6401a4c9:	sub    edx,DWORD PTR [eax+0xc]
6401a4cc:	cmp    edx,0x100000
6401a4d2:	jb     0x6401a4dd
6401a4d4:	add    eax,0x14
6401a4d7:	cmp    eax,ecx
6401a4d9:	jb     0x6401a4c5
6401a4db:	xor    eax,eax
6401a4dd:	ret    
6401a4de:	push   ebp
6401a4df:	mov    ebp,esp
6401a4e1:	sub    esp,0x10
6401a4e4:	mov    ecx,DWORD PTR [ebp+0x8]
6401a4e7:	mov    eax,DWORD PTR [ecx+0x10]
6401a4ea:	push   esi
6401a4eb:	mov    esi,DWORD PTR [ebp+0xc]
6401a4ee:	push   edi
6401a4ef:	mov    edi,esi
6401a4f1:	sub    edi,DWORD PTR [ecx+0xc]
6401a4f4:	add    esi,0xfffffffc
6401a4f7:	shr    edi,0xf
6401a4fa:	mov    ecx,edi
6401a4fc:	imul   ecx,ecx,0x204
6401a502:	lea    ecx,[ecx+eax*1+0x144]
6401a509:	mov    DWORD PTR [ebp-0x10],ecx
6401a50c:	mov    ecx,DWORD PTR [esi]
6401a50e:	dec    ecx
6401a50f:	test   cl,0x1
6401a512:	mov    DWORD PTR [ebp-0x4],ecx
6401a515:	jne    0x6401a7ee
6401a51b:	push   ebx
6401a51c:	lea    ebx,[ecx+esi*1]
6401a51f:	mov    edx,DWORD PTR [ebx]
6401a521:	mov    DWORD PTR [ebp-0xc],edx
6401a524:	mov    edx,DWORD PTR [esi-0x4]
6401a527:	mov    DWORD PTR [ebp-0x8],edx
6401a52a:	mov    edx,DWORD PTR [ebp-0xc]
6401a52d:	test   dl,0x1
6401a530:	mov    DWORD PTR [ebp+0xc],ebx
6401a533:	jne    0x6401a5a9
6401a535:	sar    edx,0x4
6401a538:	dec    edx
6401a539:	cmp    edx,0x3f
6401a53c:	jbe    0x6401a541
6401a53e:	push   0x3f
6401a540:	pop    edx
6401a541:	mov    ecx,DWORD PTR [ebx+0x4]
6401a544:	cmp    ecx,DWORD PTR [ebx+0x8]
6401a547:	jne    0x6401a58b
6401a549:	cmp    edx,0x20
6401a54c:	mov    ebx,0x80000000
6401a551:	jae    0x6401a56c
6401a553:	mov    ecx,edx
6401a555:	shr    ebx,cl
6401a557:	lea    ecx,[edx+eax*1+0x4]
6401a55b:	not    ebx
6401a55d:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401a561:	dec    BYTE PTR [ecx]
6401a563:	jne    0x6401a588
6401a565:	mov    ecx,DWORD PTR [ebp+0x8]
6401a568:	and    DWORD PTR [ecx],ebx
6401a56a:	jmp    0x6401a588
6401a56c:	lea    ecx,[edx-0x20]
6401a56f:	shr    ebx,cl
6401a571:	lea    ecx,[edx+eax*1+0x4]
6401a575:	not    ebx
6401a577:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401a57e:	dec    BYTE PTR [ecx]
6401a580:	jne    0x6401a588
6401a582:	mov    ecx,DWORD PTR [ebp+0x8]
6401a585:	and    DWORD PTR [ecx+0x4],ebx
6401a588:	mov    ebx,DWORD PTR [ebp+0xc]
6401a58b:	mov    edx,DWORD PTR [ebx+0x8]
6401a58e:	mov    ebx,DWORD PTR [ebx+0x4]
6401a591:	mov    ecx,DWORD PTR [ebp-0x4]
6401a594:	add    ecx,DWORD PTR [ebp-0xc]
6401a597:	mov    DWORD PTR [edx+0x4],ebx
6401a59a:	mov    edx,DWORD PTR [ebp+0xc]
6401a59d:	mov    ebx,DWORD PTR [edx+0x4]
6401a5a0:	mov    edx,DWORD PTR [edx+0x8]
6401a5a3:	mov    DWORD PTR [ebx+0x8],edx
6401a5a6:	mov    DWORD PTR [ebp-0x4],ecx
6401a5a9:	mov    edx,ecx
6401a5ab:	sar    edx,0x4
6401a5ae:	dec    edx
6401a5af:	cmp    edx,0x3f
6401a5b2:	jbe    0x6401a5b7
6401a5b4:	push   0x3f
6401a5b6:	pop    edx
6401a5b7:	mov    ebx,DWORD PTR [ebp-0x8]
6401a5ba:	and    ebx,0x1
6401a5bd:	mov    DWORD PTR [ebp-0xc],ebx
6401a5c0:	jne    0x6401a655
6401a5c6:	sub    esi,DWORD PTR [ebp-0x8]
6401a5c9:	mov    ebx,DWORD PTR [ebp-0x8]
6401a5cc:	sar    ebx,0x4
6401a5cf:	push   0x3f
6401a5d1:	mov    DWORD PTR [ebp+0xc],esi
6401a5d4:	dec    ebx
6401a5d5:	pop    esi
6401a5d6:	cmp    ebx,esi
6401a5d8:	jbe    0x6401a5dc
6401a5da:	mov    ebx,esi
6401a5dc:	add    ecx,DWORD PTR [ebp-0x8]
6401a5df:	mov    edx,ecx
6401a5e1:	sar    edx,0x4
6401a5e4:	dec    edx
6401a5e5:	cmp    edx,esi
6401a5e7:	mov    DWORD PTR [ebp-0x4],ecx
6401a5ea:	jbe    0x6401a5ee
6401a5ec:	mov    edx,esi
6401a5ee:	cmp    ebx,edx
6401a5f0:	je     0x6401a650
6401a5f2:	mov    ecx,DWORD PTR [ebp+0xc]
6401a5f5:	mov    esi,DWORD PTR [ecx+0x4]
6401a5f8:	cmp    esi,DWORD PTR [ecx+0x8]
6401a5fb:	jne    0x6401a638
6401a5fd:	cmp    ebx,0x20
6401a600:	mov    esi,0x80000000
6401a605:	jae    0x6401a61e
6401a607:	mov    ecx,ebx
6401a609:	shr    esi,cl
6401a60b:	not    esi
6401a60d:	and    DWORD PTR [eax+edi*4+0x44],esi
6401a611:	dec    BYTE PTR [ebx+eax*1+0x4]
6401a615:	jne    0x6401a638
6401a617:	mov    ecx,DWORD PTR [ebp+0x8]
6401a61a:	and    DWORD PTR [ecx],esi
6401a61c:	jmp    0x6401a638
6401a61e:	lea    ecx,[ebx-0x20]
6401a621:	shr    esi,cl
6401a623:	not    esi
6401a625:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401a62c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401a630:	jne    0x6401a638
6401a632:	mov    ecx,DWORD PTR [ebp+0x8]
6401a635:	and    DWORD PTR [ecx+0x4],esi
6401a638:	mov    ecx,DWORD PTR [ebp+0xc]
6401a63b:	mov    esi,DWORD PTR [ecx+0x8]
6401a63e:	mov    ecx,DWORD PTR [ecx+0x4]
6401a641:	mov    DWORD PTR [esi+0x4],ecx
6401a644:	mov    ecx,DWORD PTR [ebp+0xc]
6401a647:	mov    esi,DWORD PTR [ecx+0x4]
6401a64a:	mov    ecx,DWORD PTR [ecx+0x8]
6401a64d:	mov    DWORD PTR [esi+0x8],ecx
6401a650:	mov    esi,DWORD PTR [ebp+0xc]
6401a653:	jmp    0x6401a658
6401a655:	mov    ebx,DWORD PTR [ebp+0x8]
6401a658:	cmp    DWORD PTR [ebp-0xc],0x0
6401a65c:	jne    0x6401a666
6401a65e:	cmp    ebx,edx
6401a660:	je     0x6401a6e6
6401a666:	mov    ecx,DWORD PTR [ebp-0x10]
6401a669:	lea    ecx,[ecx+edx*8]
6401a66c:	mov    ebx,DWORD PTR [ecx+0x4]
6401a66f:	mov    DWORD PTR [esi+0x8],ecx
6401a672:	mov    DWORD PTR [esi+0x4],ebx
6401a675:	mov    DWORD PTR [ecx+0x4],esi
6401a678:	mov    ecx,DWORD PTR [esi+0x4]
6401a67b:	mov    DWORD PTR [ecx+0x8],esi
6401a67e:	mov    ecx,DWORD PTR [esi+0x4]
6401a681:	cmp    ecx,DWORD PTR [esi+0x8]
6401a684:	jne    0x6401a6e6
6401a686:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401a68a:	mov    BYTE PTR [ebp+0xf],cl
6401a68d:	inc    cl
6401a68f:	cmp    edx,0x20
6401a692:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401a696:	jae    0x6401a6bd
6401a698:	cmp    BYTE PTR [ebp+0xf],0x0
6401a69c:	jne    0x6401a6ac
6401a69e:	mov    ecx,edx
6401a6a0:	mov    ebx,0x80000000
6401a6a5:	shr    ebx,cl
6401a6a7:	mov    ecx,DWORD PTR [ebp+0x8]
6401a6aa:	or     DWORD PTR [ecx],ebx
6401a6ac:	mov    ebx,0x80000000
6401a6b1:	mov    ecx,edx
6401a6b3:	shr    ebx,cl
6401a6b5:	lea    eax,[eax+edi*4+0x44]
6401a6b9:	or     DWORD PTR [eax],ebx
6401a6bb:	jmp    0x6401a6e6
6401a6bd:	cmp    BYTE PTR [ebp+0xf],0x0
6401a6c1:	jne    0x6401a6d3
6401a6c3:	lea    ecx,[edx-0x20]
6401a6c6:	mov    ebx,0x80000000
6401a6cb:	shr    ebx,cl
6401a6cd:	mov    ecx,DWORD PTR [ebp+0x8]
6401a6d0:	or     DWORD PTR [ecx+0x4],ebx
6401a6d3:	lea    ecx,[edx-0x20]
6401a6d6:	mov    edx,0x80000000
6401a6db:	shr    edx,cl
6401a6dd:	lea    eax,[eax+edi*4+0xc4]
6401a6e4:	or     DWORD PTR [eax],edx
6401a6e6:	mov    eax,DWORD PTR [ebp-0x4]
6401a6e9:	mov    DWORD PTR [esi],eax
6401a6eb:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401a6ef:	mov    eax,DWORD PTR [ebp-0x10]
6401a6f2:	dec    DWORD PTR [eax]
6401a6f4:	jne    0x6401a7ed
6401a6fa:	mov    eax,ds:0x6402ebc8
6401a6ff:	test   eax,eax
6401a701:	je     0x6401a7df
6401a707:	mov    ecx,DWORD PTR ds:0x640324d8
6401a70d:	mov    esi,DWORD PTR ds:0x64025180
6401a713:	push   0x4000
6401a718:	shl    ecx,0xf
6401a71b:	add    ecx,DWORD PTR [eax+0xc]
6401a71e:	mov    ebx,0x8000
6401a723:	push   ebx
6401a724:	push   ecx
6401a725:	call   esi
6401a727:	mov    ecx,DWORD PTR ds:0x640324d8
6401a72d:	mov    eax,ds:0x6402ebc8
6401a732:	mov    edx,0x80000000
6401a737:	shr    edx,cl
6401a739:	or     DWORD PTR [eax+0x8],edx
6401a73c:	mov    eax,ds:0x6402ebc8
6401a741:	mov    eax,DWORD PTR [eax+0x10]
6401a744:	mov    ecx,DWORD PTR ds:0x640324d8
6401a74a:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401a752:	mov    eax,ds:0x6402ebc8
6401a757:	mov    eax,DWORD PTR [eax+0x10]
6401a75a:	dec    BYTE PTR [eax+0x43]
6401a75d:	mov    eax,ds:0x6402ebc8
6401a762:	mov    ecx,DWORD PTR [eax+0x10]
6401a765:	cmp    BYTE PTR [ecx+0x43],0x0
6401a769:	jne    0x6401a774
6401a76b:	and    DWORD PTR [eax+0x4],0xfffffffe
6401a76f:	mov    eax,ds:0x6402ebc8
6401a774:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401a778:	jne    0x6401a7df
6401a77a:	push   ebx
6401a77b:	push   0x0
6401a77d:	push   DWORD PTR [eax+0xc]
6401a780:	call   esi
6401a782:	mov    eax,ds:0x6402ebc8
6401a787:	push   DWORD PTR [eax+0x10]
6401a78a:	push   0x0
6401a78c:	push   DWORD PTR ds:0x6402ea6c
6401a792:	call   DWORD PTR ds:0x64025104
6401a798:	mov    ecx,DWORD PTR ds:0x640324c4
6401a79e:	mov    eax,ds:0x6402ebc8
6401a7a3:	imul   ecx,ecx,0x14
6401a7a6:	mov    edx,DWORD PTR ds:0x640324c8
6401a7ac:	sub    ecx,eax
6401a7ae:	lea    ecx,[ecx+edx*1-0x14]
6401a7b2:	push   ecx
6401a7b3:	lea    ecx,[eax+0x14]
6401a7b6:	push   ecx
6401a7b7:	push   eax
6401a7b8:	call   0x64013eb0
6401a7bd:	mov    eax,DWORD PTR [ebp+0x8]
6401a7c0:	add    esp,0xc
6401a7c3:	dec    DWORD PTR ds:0x640324c4
6401a7c9:	cmp    eax,DWORD PTR ds:0x6402ebc8
6401a7cf:	jbe    0x6401a7d5
6401a7d1:	sub    DWORD PTR [ebp+0x8],0x14
6401a7d5:	mov    eax,ds:0x640324c8
6401a7da:	mov    ds:0x640324d0,eax
6401a7df:	mov    eax,DWORD PTR [ebp+0x8]
6401a7e2:	mov    ds:0x6402ebc8,eax
6401a7e7:	mov    DWORD PTR ds:0x640324d8,edi
6401a7ed:	pop    ebx
6401a7ee:	pop    edi
6401a7ef:	pop    esi
6401a7f0:	leave  
6401a7f1:	ret    
6401a7f2:	mov    eax,ds:0x640324d4
6401a7f7:	push   esi
6401a7f8:	mov    esi,DWORD PTR ds:0x640324c4
6401a7fe:	push   edi
6401a7ff:	xor    edi,edi
6401a801:	cmp    esi,eax
6401a803:	jne    0x6401a839
6401a805:	add    eax,0x10
6401a808:	imul   eax,eax,0x14
6401a80b:	push   eax
6401a80c:	push   DWORD PTR ds:0x640324c8
6401a812:	push   edi
6401a813:	push   DWORD PTR ds:0x6402ea6c
6401a819:	call   DWORD PTR ds:0x64025108
6401a81f:	cmp    eax,edi
6401a821:	jne    0x6401a827
6401a823:	xor    eax,eax
6401a825:	jmp    0x6401a89f
6401a827:	add    DWORD PTR ds:0x640324d4,0x10
6401a82e:	mov    esi,DWORD PTR ds:0x640324c4
6401a834:	mov    ds:0x640324c8,eax
6401a839:	imul   esi,esi,0x14
6401a83c:	add    esi,DWORD PTR ds:0x640324c8
6401a842:	push   0x41c4
6401a847:	push   0x8
6401a849:	push   DWORD PTR ds:0x6402ea6c
6401a84f:	call   DWORD PTR ds:0x64025100
6401a855:	cmp    eax,edi
6401a857:	mov    DWORD PTR [esi+0x10],eax
6401a85a:	je     0x6401a823
6401a85c:	push   0x4
6401a85e:	push   0x2000
6401a863:	push   0x100000
6401a868:	push   edi
6401a869:	call   DWORD PTR ds:0x640250c8
6401a86f:	cmp    eax,edi
6401a871:	mov    DWORD PTR [esi+0xc],eax
6401a874:	jne    0x6401a888
6401a876:	push   DWORD PTR [esi+0x10]
6401a879:	push   edi
6401a87a:	push   DWORD PTR ds:0x6402ea6c
6401a880:	call   DWORD PTR ds:0x64025104
6401a886:	jmp    0x6401a823
6401a888:	or     DWORD PTR [esi+0x8],0xffffffff
6401a88c:	mov    DWORD PTR [esi],edi
6401a88e:	mov    DWORD PTR [esi+0x4],edi
6401a891:	inc    DWORD PTR ds:0x640324c4
6401a897:	mov    eax,DWORD PTR [esi+0x10]
6401a89a:	or     DWORD PTR [eax],0xffffffff
6401a89d:	mov    eax,esi
6401a89f:	pop    edi
6401a8a0:	pop    esi
6401a8a1:	ret    
6401a8a2:	push   ebp
6401a8a3:	mov    ebp,esp
6401a8a5:	push   ecx
6401a8a6:	push   ecx
6401a8a7:	mov    ecx,DWORD PTR [ebp+0x8]
6401a8aa:	mov    eax,DWORD PTR [ecx+0x8]
6401a8ad:	push   ebx
6401a8ae:	push   esi
6401a8af:	mov    esi,DWORD PTR [ecx+0x10]
6401a8b2:	push   edi
6401a8b3:	xor    ebx,ebx
6401a8b5:	jmp    0x6401a8ba
6401a8b7:	add    eax,eax
6401a8b9:	inc    ebx
6401a8ba:	test   eax,eax
6401a8bc:	jge    0x6401a8b7
6401a8be:	mov    eax,ebx
6401a8c0:	imul   eax,eax,0x204
6401a8c6:	lea    eax,[eax+esi*1+0x144]
6401a8cd:	push   0x3f
6401a8cf:	mov    DWORD PTR [ebp-0x8],eax
6401a8d2:	pop    edx
6401a8d3:	mov    DWORD PTR [eax+0x8],eax
6401a8d6:	mov    DWORD PTR [eax+0x4],eax
6401a8d9:	add    eax,0x8
6401a8dc:	dec    edx
6401a8dd:	jne    0x6401a8d3
6401a8df:	push   0x4
6401a8e1:	mov    edi,ebx
6401a8e3:	push   0x1000
6401a8e8:	shl    edi,0xf
6401a8eb:	add    edi,DWORD PTR [ecx+0xc]
6401a8ee:	push   0x8000
6401a8f3:	push   edi
6401a8f4:	call   DWORD PTR ds:0x640250c8
6401a8fa:	test   eax,eax
6401a8fc:	jne    0x6401a906
6401a8fe:	or     eax,0xffffffff
6401a901:	jmp    0x6401a9a3
6401a906:	lea    edx,[edi+0x7000]
6401a90c:	cmp    edi,edx
6401a90e:	mov    DWORD PTR [ebp-0x4],edx
6401a911:	ja     0x6401a956
6401a913:	mov    ecx,edx
6401a915:	sub    ecx,edi
6401a917:	shr    ecx,0xc
6401a91a:	lea    eax,[edi+0x10]
6401a91d:	inc    ecx
6401a91e:	or     DWORD PTR [eax-0x8],0xffffffff
6401a922:	or     DWORD PTR [eax+0xfec],0xffffffff
6401a929:	lea    edx,[eax+0xffc]
6401a92f:	mov    DWORD PTR [eax],edx
6401a931:	lea    edx,[eax-0x1004]
6401a937:	mov    DWORD PTR [eax-0x4],0xff0
6401a93e:	mov    DWORD PTR [eax+0x4],edx
6401a941:	mov    DWORD PTR [eax+0xfe8],0xff0
6401a94b:	add    eax,0x1000
6401a950:	dec    ecx
6401a951:	jne    0x6401a91e
6401a953:	mov    edx,DWORD PTR [ebp-0x4]
6401a956:	mov    eax,DWORD PTR [ebp-0x8]
6401a959:	add    eax,0x1f8
6401a95e:	lea    ecx,[edi+0xc]
6401a961:	mov    DWORD PTR [eax+0x4],ecx
6401a964:	mov    DWORD PTR [ecx+0x8],eax
6401a967:	lea    ecx,[edx+0xc]
6401a96a:	mov    DWORD PTR [eax+0x8],ecx
6401a96d:	mov    DWORD PTR [ecx+0x4],eax
6401a970:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401a975:	xor    edi,edi
6401a977:	inc    edi
6401a978:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401a97f:	mov    al,BYTE PTR [esi+0x43]
6401a982:	mov    cl,al
6401a984:	inc    cl
6401a986:	test   al,al
6401a988:	mov    eax,DWORD PTR [ebp+0x8]
6401a98b:	mov    BYTE PTR [esi+0x43],cl
6401a98e:	jne    0x6401a993
6401a990:	or     DWORD PTR [eax+0x4],edi
6401a993:	mov    edx,0x80000000
6401a998:	mov    ecx,ebx
6401a99a:	shr    edx,cl
6401a99c:	not    edx
6401a99e:	and    DWORD PTR [eax+0x8],edx
6401a9a1:	mov    eax,ebx
6401a9a3:	pop    edi
6401a9a4:	pop    esi
6401a9a5:	pop    ebx
6401a9a6:	leave  
6401a9a7:	ret    
6401a9a8:	push   ebp
6401a9a9:	mov    ebp,esp
6401a9ab:	sub    esp,0xc
6401a9ae:	mov    ecx,DWORD PTR [ebp+0x8]
6401a9b1:	mov    eax,DWORD PTR [ecx+0x10]
6401a9b4:	push   ebx
6401a9b5:	push   esi
6401a9b6:	mov    esi,DWORD PTR [ebp+0x10]
6401a9b9:	push   edi
6401a9ba:	mov    edi,DWORD PTR [ebp+0xc]
6401a9bd:	mov    edx,edi
6401a9bf:	sub    edx,DWORD PTR [ecx+0xc]
6401a9c2:	add    esi,0x17
6401a9c5:	shr    edx,0xf
6401a9c8:	mov    ecx,edx
6401a9ca:	imul   ecx,ecx,0x204
6401a9d0:	lea    ecx,[ecx+eax*1+0x144]
6401a9d7:	mov    DWORD PTR [ebp-0xc],ecx
6401a9da:	mov    ecx,DWORD PTR [edi-0x4]
6401a9dd:	and    esi,0xfffffff0
6401a9e0:	dec    ecx
6401a9e1:	cmp    esi,ecx
6401a9e3:	lea    edi,[ecx+edi*1-0x4]
6401a9e7:	mov    ebx,DWORD PTR [edi]
6401a9e9:	mov    DWORD PTR [ebp+0x10],ecx
6401a9ec:	mov    DWORD PTR [ebp-0x4],ebx
6401a9ef:	jle    0x6401ab4a
6401a9f5:	test   bl,0x1
6401a9f8:	jne    0x6401ab43
6401a9fe:	add    ebx,ecx
6401aa00:	cmp    esi,ebx
6401aa02:	jg     0x6401ab43
6401aa08:	mov    ecx,DWORD PTR [ebp-0x4]
6401aa0b:	sar    ecx,0x4
6401aa0e:	dec    ecx
6401aa0f:	cmp    ecx,0x3f
6401aa12:	mov    DWORD PTR [ebp-0x8],ecx
6401aa15:	jbe    0x6401aa1d
6401aa17:	push   0x3f
6401aa19:	pop    ecx
6401aa1a:	mov    DWORD PTR [ebp-0x8],ecx
6401aa1d:	mov    ebx,DWORD PTR [edi+0x4]
6401aa20:	cmp    ebx,DWORD PTR [edi+0x8]
6401aa23:	jne    0x6401aa68
6401aa25:	cmp    ecx,0x20
6401aa28:	mov    ebx,0x80000000
6401aa2d:	jae    0x6401aa49
6401aa2f:	shr    ebx,cl
6401aa31:	mov    ecx,DWORD PTR [ebp-0x8]
6401aa34:	lea    ecx,[ecx+eax*1+0x4]
6401aa38:	not    ebx
6401aa3a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401aa3e:	dec    BYTE PTR [ecx]
6401aa40:	jne    0x6401aa68
6401aa42:	mov    ecx,DWORD PTR [ebp+0x8]
6401aa45:	and    DWORD PTR [ecx],ebx
6401aa47:	jmp    0x6401aa68
6401aa49:	add    ecx,0xffffffe0
6401aa4c:	shr    ebx,cl
6401aa4e:	mov    ecx,DWORD PTR [ebp-0x8]
6401aa51:	lea    ecx,[ecx+eax*1+0x4]
6401aa55:	not    ebx
6401aa57:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401aa5e:	dec    BYTE PTR [ecx]
6401aa60:	jne    0x6401aa68
6401aa62:	mov    ecx,DWORD PTR [ebp+0x8]
6401aa65:	and    DWORD PTR [ecx+0x4],ebx
6401aa68:	mov    ecx,DWORD PTR [edi+0x8]
6401aa6b:	mov    ebx,DWORD PTR [edi+0x4]
6401aa6e:	mov    DWORD PTR [ecx+0x4],ebx
6401aa71:	mov    ecx,DWORD PTR [edi+0x4]
6401aa74:	mov    edi,DWORD PTR [edi+0x8]
6401aa77:	mov    DWORD PTR [ecx+0x8],edi
6401aa7a:	mov    ecx,DWORD PTR [ebp+0x10]
6401aa7d:	sub    ecx,esi
6401aa7f:	add    DWORD PTR [ebp-0x4],ecx
6401aa82:	cmp    DWORD PTR [ebp-0x4],0x0
6401aa86:	jle    0x6401ab31
6401aa8c:	mov    edi,DWORD PTR [ebp-0x4]
6401aa8f:	mov    ecx,DWORD PTR [ebp+0xc]
6401aa92:	sar    edi,0x4
6401aa95:	dec    edi
6401aa96:	cmp    edi,0x3f
6401aa99:	lea    ecx,[ecx+esi*1-0x4]
6401aa9d:	jbe    0x6401aaa2
6401aa9f:	push   0x3f
6401aaa1:	pop    edi
6401aaa2:	mov    ebx,DWORD PTR [ebp-0xc]
6401aaa5:	lea    ebx,[ebx+edi*8]
6401aaa8:	mov    DWORD PTR [ebp+0x10],ebx
6401aaab:	mov    ebx,DWORD PTR [ebx+0x4]
6401aaae:	mov    DWORD PTR [ecx+0x4],ebx
6401aab1:	mov    ebx,DWORD PTR [ebp+0x10]
6401aab4:	mov    DWORD PTR [ecx+0x8],ebx
6401aab7:	mov    DWORD PTR [ebx+0x4],ecx
6401aaba:	mov    ebx,DWORD PTR [ecx+0x4]
6401aabd:	mov    DWORD PTR [ebx+0x8],ecx
6401aac0:	mov    ebx,DWORD PTR [ecx+0x4]
6401aac3:	cmp    ebx,DWORD PTR [ecx+0x8]
6401aac6:	jne    0x6401ab1f
6401aac8:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401aacc:	mov    BYTE PTR [ebp+0x13],cl
6401aacf:	inc    cl
6401aad1:	cmp    edi,0x20
6401aad4:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401aad8:	jae    0x6401aaf6
6401aada:	cmp    BYTE PTR [ebp+0x13],0x0
6401aade:	jne    0x6401aaee
6401aae0:	mov    ecx,edi
6401aae2:	mov    ebx,0x80000000
6401aae7:	shr    ebx,cl
6401aae9:	mov    ecx,DWORD PTR [ebp+0x8]
6401aaec:	or     DWORD PTR [ecx],ebx
6401aaee:	lea    eax,[eax+edx*4+0x44]
6401aaf2:	mov    ecx,edi
6401aaf4:	jmp    0x6401ab16
6401aaf6:	cmp    BYTE PTR [ebp+0x13],0x0
6401aafa:	jne    0x6401ab0c
6401aafc:	lea    ecx,[edi-0x20]
6401aaff:	mov    ebx,0x80000000
6401ab04:	shr    ebx,cl
6401ab06:	mov    ecx,DWORD PTR [ebp+0x8]
6401ab09:	or     DWORD PTR [ecx+0x4],ebx
6401ab0c:	lea    eax,[eax+edx*4+0xc4]
6401ab13:	lea    ecx,[edi-0x20]
6401ab16:	mov    edx,0x80000000
6401ab1b:	shr    edx,cl
6401ab1d:	or     DWORD PTR [eax],edx
6401ab1f:	mov    edx,DWORD PTR [ebp+0xc]
6401ab22:	mov    ecx,DWORD PTR [ebp-0x4]
6401ab25:	lea    eax,[edx+esi*1-0x4]
6401ab29:	mov    DWORD PTR [eax],ecx
6401ab2b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401ab2f:	jmp    0x6401ab34
6401ab31:	mov    edx,DWORD PTR [ebp+0xc]
6401ab34:	lea    eax,[esi+0x1]
6401ab37:	mov    DWORD PTR [edx-0x4],eax
6401ab3a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401ab3e:	jmp    0x6401ac7f
6401ab43:	xor    eax,eax
6401ab45:	jmp    0x6401ac82
6401ab4a:	jge    0x6401ac7f
6401ab50:	mov    ebx,DWORD PTR [ebp+0xc]
6401ab53:	sub    DWORD PTR [ebp+0x10],esi
6401ab56:	lea    ecx,[esi+0x1]
6401ab59:	mov    DWORD PTR [ebx-0x4],ecx
6401ab5c:	lea    ebx,[ebx+esi*1-0x4]
6401ab60:	mov    esi,DWORD PTR [ebp+0x10]
6401ab63:	sar    esi,0x4
6401ab66:	dec    esi
6401ab67:	cmp    esi,0x3f
6401ab6a:	mov    DWORD PTR [ebp+0xc],ebx
6401ab6d:	mov    DWORD PTR [ebx-0x4],ecx
6401ab70:	jbe    0x6401ab75
6401ab72:	push   0x3f
6401ab74:	pop    esi
6401ab75:	test   BYTE PTR [ebp-0x4],0x1
6401ab79:	jne    0x6401abff
6401ab7f:	mov    esi,DWORD PTR [ebp-0x4]
6401ab82:	sar    esi,0x4
6401ab85:	dec    esi
6401ab86:	cmp    esi,0x3f
6401ab89:	jbe    0x6401ab8e
6401ab8b:	push   0x3f
6401ab8d:	pop    esi
6401ab8e:	mov    ecx,DWORD PTR [edi+0x4]
6401ab91:	cmp    ecx,DWORD PTR [edi+0x8]
6401ab94:	jne    0x6401abd8
6401ab96:	cmp    esi,0x20
6401ab99:	mov    ebx,0x80000000
6401ab9e:	jae    0x6401abb9
6401aba0:	mov    ecx,esi
6401aba2:	shr    ebx,cl
6401aba4:	lea    esi,[esi+eax*1+0x4]
6401aba8:	not    ebx
6401abaa:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401abae:	dec    BYTE PTR [esi]
6401abb0:	jne    0x6401abd5
6401abb2:	mov    ecx,DWORD PTR [ebp+0x8]
6401abb5:	and    DWORD PTR [ecx],ebx
6401abb7:	jmp    0x6401abd5
6401abb9:	lea    ecx,[esi-0x20]
6401abbc:	shr    ebx,cl
6401abbe:	lea    ecx,[esi+eax*1+0x4]
6401abc2:	not    ebx
6401abc4:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401abcb:	dec    BYTE PTR [ecx]
6401abcd:	jne    0x6401abd5
6401abcf:	mov    ecx,DWORD PTR [ebp+0x8]
6401abd2:	and    DWORD PTR [ecx+0x4],ebx
6401abd5:	mov    ebx,DWORD PTR [ebp+0xc]
6401abd8:	mov    ecx,DWORD PTR [edi+0x8]
6401abdb:	mov    esi,DWORD PTR [edi+0x4]
6401abde:	mov    DWORD PTR [ecx+0x4],esi
6401abe1:	mov    esi,DWORD PTR [edi+0x8]
6401abe4:	mov    ecx,DWORD PTR [edi+0x4]
6401abe7:	mov    DWORD PTR [ecx+0x8],esi
6401abea:	mov    esi,DWORD PTR [ebp+0x10]
6401abed:	add    esi,DWORD PTR [ebp-0x4]
6401abf0:	mov    DWORD PTR [ebp+0x10],esi
6401abf3:	sar    esi,0x4
6401abf6:	dec    esi
6401abf7:	cmp    esi,0x3f
6401abfa:	jbe    0x6401abff
6401abfc:	push   0x3f
6401abfe:	pop    esi
6401abff:	mov    ecx,DWORD PTR [ebp-0xc]
6401ac02:	lea    ecx,[ecx+esi*8]
6401ac05:	mov    edi,DWORD PTR [ecx+0x4]
6401ac08:	mov    DWORD PTR [ebx+0x8],ecx
6401ac0b:	mov    DWORD PTR [ebx+0x4],edi
6401ac0e:	mov    DWORD PTR [ecx+0x4],ebx
6401ac11:	mov    ecx,DWORD PTR [ebx+0x4]
6401ac14:	mov    DWORD PTR [ecx+0x8],ebx
6401ac17:	mov    ecx,DWORD PTR [ebx+0x4]
6401ac1a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401ac1d:	jne    0x6401ac76
6401ac1f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401ac23:	mov    BYTE PTR [ebp+0xf],cl
6401ac26:	inc    cl
6401ac28:	cmp    esi,0x20
6401ac2b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401ac2f:	jae    0x6401ac4d
6401ac31:	cmp    BYTE PTR [ebp+0xf],0x0
6401ac35:	jne    0x6401ac45
6401ac37:	mov    ecx,esi
6401ac39:	mov    edi,0x80000000
6401ac3e:	shr    edi,cl
6401ac40:	mov    ecx,DWORD PTR [ebp+0x8]
6401ac43:	or     DWORD PTR [ecx],edi
6401ac45:	lea    eax,[eax+edx*4+0x44]
6401ac49:	mov    ecx,esi
6401ac4b:	jmp    0x6401ac6d
6401ac4d:	cmp    BYTE PTR [ebp+0xf],0x0
6401ac51:	jne    0x6401ac63
6401ac53:	lea    ecx,[esi-0x20]
6401ac56:	mov    edi,0x80000000
6401ac5b:	shr    edi,cl
6401ac5d:	mov    ecx,DWORD PTR [ebp+0x8]
6401ac60:	or     DWORD PTR [ecx+0x4],edi
6401ac63:	lea    eax,[eax+edx*4+0xc4]
6401ac6a:	lea    ecx,[esi-0x20]
6401ac6d:	mov    edx,0x80000000
6401ac72:	shr    edx,cl
6401ac74:	or     DWORD PTR [eax],edx
6401ac76:	mov    eax,DWORD PTR [ebp+0x10]
6401ac79:	mov    DWORD PTR [ebx],eax
6401ac7b:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401ac7f:	xor    eax,eax
6401ac81:	inc    eax
6401ac82:	pop    edi
6401ac83:	pop    esi
6401ac84:	pop    ebx
6401ac85:	leave  
6401ac86:	ret    
6401ac87:	push   ebp
6401ac88:	mov    ebp,esp
6401ac8a:	sub    esp,0x14
6401ac8d:	mov    eax,ds:0x640324c4
6401ac92:	mov    ecx,DWORD PTR [ebp+0x8]
6401ac95:	imul   eax,eax,0x14
6401ac98:	add    eax,DWORD PTR ds:0x640324c8
6401ac9e:	add    ecx,0x17
6401aca1:	and    ecx,0xfffffff0
6401aca4:	mov    DWORD PTR [ebp-0x10],ecx
6401aca7:	sar    ecx,0x4
6401acaa:	push   ebx
6401acab:	dec    ecx
6401acac:	cmp    ecx,0x20
6401acaf:	push   esi
6401acb0:	push   edi
6401acb1:	jge    0x6401acbe
6401acb3:	or     esi,0xffffffff
6401acb6:	shr    esi,cl
6401acb8:	or     DWORD PTR [ebp-0x8],0xffffffff
6401acbc:	jmp    0x6401accb
6401acbe:	add    ecx,0xffffffe0
6401acc1:	or     edx,0xffffffff
6401acc4:	xor    esi,esi
6401acc6:	shr    edx,cl
6401acc8:	mov    DWORD PTR [ebp-0x8],edx
6401accb:	mov    ecx,DWORD PTR ds:0x640324d0
6401acd1:	mov    ebx,ecx
6401acd3:	jmp    0x6401ace6
6401acd5:	mov    edx,DWORD PTR [ebx+0x4]
6401acd8:	mov    edi,DWORD PTR [ebx]
6401acda:	and    edx,DWORD PTR [ebp-0x8]
6401acdd:	and    edi,esi
6401acdf:	or     edx,edi
6401ace1:	jne    0x6401aced
6401ace3:	add    ebx,0x14
6401ace6:	cmp    ebx,eax
6401ace8:	mov    DWORD PTR [ebp+0x8],ebx
6401aceb:	jb     0x6401acd5
6401aced:	cmp    ebx,eax
6401acef:	jne    0x6401ad70
6401acf1:	mov    ebx,DWORD PTR ds:0x640324c8
6401acf7:	jmp    0x6401ad0a
6401acf9:	mov    edx,DWORD PTR [ebx+0x4]
6401acfc:	mov    edi,DWORD PTR [ebx]
6401acfe:	and    edx,DWORD PTR [ebp-0x8]
6401ad01:	and    edi,esi
6401ad03:	or     edx,edi
6401ad05:	jne    0x6401ad11
6401ad07:	add    ebx,0x14
6401ad0a:	cmp    ebx,ecx
6401ad0c:	mov    DWORD PTR [ebp+0x8],ebx
6401ad0f:	jb     0x6401acf9
6401ad11:	cmp    ebx,ecx
6401ad13:	jne    0x6401ad70
6401ad15:	jmp    0x6401ad23
6401ad17:	cmp    DWORD PTR [ebx+0x8],0x0
6401ad1b:	jne    0x6401ad27
6401ad1d:	add    ebx,0x14
6401ad20:	mov    DWORD PTR [ebp+0x8],ebx
6401ad23:	cmp    ebx,eax
6401ad25:	jb     0x6401ad17
6401ad27:	cmp    ebx,eax
6401ad29:	jne    0x6401ad5c
6401ad2b:	mov    ebx,DWORD PTR ds:0x640324c8
6401ad31:	jmp    0x6401ad3c
6401ad33:	cmp    DWORD PTR [ebx+0x8],0x0
6401ad37:	jne    0x6401ad43
6401ad39:	add    ebx,0x14
6401ad3c:	cmp    ebx,ecx
6401ad3e:	mov    DWORD PTR [ebp+0x8],ebx
6401ad41:	jb     0x6401ad33
6401ad43:	cmp    ebx,ecx
6401ad45:	jne    0x6401ad5c
6401ad47:	call   0x6401a7f2
6401ad4c:	mov    ebx,eax
6401ad4e:	test   ebx,ebx
6401ad50:	mov    DWORD PTR [ebp+0x8],ebx
6401ad53:	jne    0x6401ad5c
6401ad55:	xor    eax,eax
6401ad57:	jmp    0x6401af65
6401ad5c:	push   ebx
6401ad5d:	call   0x6401a8a2
6401ad62:	pop    ecx
6401ad63:	mov    ecx,DWORD PTR [ebx+0x10]
6401ad66:	mov    DWORD PTR [ecx],eax
6401ad68:	mov    eax,DWORD PTR [ebx+0x10]
6401ad6b:	cmp    DWORD PTR [eax],0xffffffff
6401ad6e:	je     0x6401ad55
6401ad70:	mov    DWORD PTR ds:0x640324d0,ebx
6401ad76:	mov    eax,DWORD PTR [ebx+0x10]
6401ad79:	mov    edx,DWORD PTR [eax]
6401ad7b:	cmp    edx,0xffffffff
6401ad7e:	mov    DWORD PTR [ebp-0x4],edx
6401ad81:	je     0x6401ad97
6401ad83:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401ad8a:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401ad8e:	and    ecx,DWORD PTR [ebp-0x8]
6401ad91:	and    edi,esi
6401ad93:	or     ecx,edi
6401ad95:	jne    0x6401adc0
6401ad97:	and    DWORD PTR [ebp-0x4],0x0
6401ad9b:	mov    edx,DWORD PTR [eax+0xc4]
6401ada1:	lea    ecx,[eax+0x44]
6401ada4:	mov    edi,DWORD PTR [ecx]
6401ada6:	and    edx,DWORD PTR [ebp-0x8]
6401ada9:	and    edi,esi
6401adab:	or     edx,edi
6401adad:	jne    0x6401adbd
6401adaf:	inc    DWORD PTR [ebp-0x4]
6401adb2:	mov    edx,DWORD PTR [ecx+0x84]
6401adb8:	add    ecx,0x4
6401adbb:	jmp    0x6401ada4
6401adbd:	mov    edx,DWORD PTR [ebp-0x4]
6401adc0:	mov    ecx,edx
6401adc2:	imul   ecx,ecx,0x204
6401adc8:	lea    ecx,[ecx+eax*1+0x144]
6401adcf:	mov    DWORD PTR [ebp-0xc],ecx
6401add2:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401add6:	xor    edi,edi
6401add8:	and    ecx,esi
6401adda:	jne    0x6401adee
6401addc:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401ade3:	and    ecx,DWORD PTR [ebp-0x8]
6401ade6:	push   0x20
6401ade8:	pop    edi
6401ade9:	jmp    0x6401adee
6401adeb:	add    ecx,ecx
6401aded:	inc    edi
6401adee:	test   ecx,ecx
6401adf0:	jge    0x6401adeb
6401adf2:	mov    ecx,DWORD PTR [ebp-0xc]
6401adf5:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401adf9:	mov    ecx,DWORD PTR [edx]
6401adfb:	sub    ecx,DWORD PTR [ebp-0x10]
6401adfe:	mov    esi,ecx
6401ae00:	sar    esi,0x4
6401ae03:	dec    esi
6401ae04:	cmp    esi,0x3f
6401ae07:	mov    DWORD PTR [ebp-0x8],ecx
6401ae0a:	jle    0x6401ae0f
6401ae0c:	push   0x3f
6401ae0e:	pop    esi
6401ae0f:	cmp    esi,edi
6401ae11:	je     0x6401af18
6401ae17:	mov    ecx,DWORD PTR [edx+0x4]
6401ae1a:	cmp    ecx,DWORD PTR [edx+0x8]
6401ae1d:	jne    0x6401ae7b
6401ae1f:	cmp    edi,0x20
6401ae22:	mov    ebx,0x80000000
6401ae27:	jge    0x6401ae4f
6401ae29:	mov    ecx,edi
6401ae2b:	shr    ebx,cl
6401ae2d:	mov    ecx,DWORD PTR [ebp-0x4]
6401ae30:	lea    edi,[eax+edi*1+0x4]
6401ae34:	not    ebx
6401ae36:	mov    DWORD PTR [ebp-0x14],ebx
6401ae39:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401ae3d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401ae41:	dec    BYTE PTR [edi]
6401ae43:	jne    0x6401ae78
6401ae45:	mov    ecx,DWORD PTR [ebp-0x14]
6401ae48:	mov    ebx,DWORD PTR [ebp+0x8]
6401ae4b:	and    DWORD PTR [ebx],ecx
6401ae4d:	jmp    0x6401ae7b
6401ae4f:	lea    ecx,[edi-0x20]
6401ae52:	shr    ebx,cl
6401ae54:	mov    ecx,DWORD PTR [ebp-0x4]
6401ae57:	lea    ecx,[eax+ecx*4+0xc4]
6401ae5e:	lea    edi,[eax+edi*1+0x4]
6401ae62:	not    ebx
6401ae64:	and    DWORD PTR [ecx],ebx
6401ae66:	dec    BYTE PTR [edi]
6401ae68:	mov    DWORD PTR [ebp-0x14],ebx
6401ae6b:	jne    0x6401ae78
6401ae6d:	mov    ebx,DWORD PTR [ebp+0x8]
6401ae70:	mov    ecx,DWORD PTR [ebp-0x14]
6401ae73:	and    DWORD PTR [ebx+0x4],ecx
6401ae76:	jmp    0x6401ae7b
6401ae78:	mov    ebx,DWORD PTR [ebp+0x8]
6401ae7b:	cmp    DWORD PTR [ebp-0x8],0x0
6401ae7f:	mov    ecx,DWORD PTR [edx+0x8]
6401ae82:	mov    edi,DWORD PTR [edx+0x4]
6401ae85:	mov    DWORD PTR [ecx+0x4],edi
6401ae88:	mov    ecx,DWORD PTR [edx+0x4]
6401ae8b:	mov    edi,DWORD PTR [edx+0x8]
6401ae8e:	mov    DWORD PTR [ecx+0x8],edi
6401ae91:	je     0x6401af24
6401ae97:	mov    ecx,DWORD PTR [ebp-0xc]
6401ae9a:	lea    ecx,[ecx+esi*8]
6401ae9d:	mov    edi,DWORD PTR [ecx+0x4]
6401aea0:	mov    DWORD PTR [edx+0x8],ecx
6401aea3:	mov    DWORD PTR [edx+0x4],edi
6401aea6:	mov    DWORD PTR [ecx+0x4],edx
6401aea9:	mov    ecx,DWORD PTR [edx+0x4]
6401aeac:	mov    DWORD PTR [ecx+0x8],edx
6401aeaf:	mov    ecx,DWORD PTR [edx+0x4]
6401aeb2:	cmp    ecx,DWORD PTR [edx+0x8]
6401aeb5:	jne    0x6401af15
6401aeb7:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401aebb:	mov    BYTE PTR [ebp+0xb],cl
6401aebe:	inc    cl
6401aec0:	cmp    esi,0x20
6401aec3:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401aec7:	jge    0x6401aeec
6401aec9:	cmp    BYTE PTR [ebp+0xb],0x0
6401aecd:	jne    0x6401aeda
6401aecf:	mov    edi,0x80000000
6401aed4:	mov    ecx,esi
6401aed6:	shr    edi,cl
6401aed8:	or     DWORD PTR [ebx],edi
6401aeda:	mov    ecx,esi
6401aedc:	mov    edi,0x80000000
6401aee1:	shr    edi,cl
6401aee3:	mov    ecx,DWORD PTR [ebp-0x4]
6401aee6:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401aeea:	jmp    0x6401af15
6401aeec:	cmp    BYTE PTR [ebp+0xb],0x0
6401aef0:	jne    0x6401aeff
6401aef2:	lea    ecx,[esi-0x20]
6401aef5:	mov    edi,0x80000000
6401aefa:	shr    edi,cl
6401aefc:	or     DWORD PTR [ebx+0x4],edi
6401aeff:	mov    ecx,DWORD PTR [ebp-0x4]
6401af02:	lea    edi,[eax+ecx*4+0xc4]
6401af09:	lea    ecx,[esi-0x20]
6401af0c:	mov    esi,0x80000000
6401af11:	shr    esi,cl
6401af13:	or     DWORD PTR [edi],esi
6401af15:	mov    ecx,DWORD PTR [ebp-0x8]
6401af18:	test   ecx,ecx
6401af1a:	je     0x6401af27
6401af1c:	mov    DWORD PTR [edx],ecx
6401af1e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401af22:	jmp    0x6401af27
6401af24:	mov    ecx,DWORD PTR [ebp-0x8]
6401af27:	mov    esi,DWORD PTR [ebp-0x10]
6401af2a:	add    edx,ecx
6401af2c:	lea    ecx,[esi+0x1]
6401af2f:	mov    DWORD PTR [edx],ecx
6401af31:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401af35:	mov    esi,DWORD PTR [ebp-0xc]
6401af38:	mov    ecx,DWORD PTR [esi]
6401af3a:	test   ecx,ecx
6401af3c:	lea    edi,[ecx+0x1]
6401af3f:	mov    DWORD PTR [esi],edi
6401af41:	jne    0x6401af5d
6401af43:	cmp    ebx,DWORD PTR ds:0x6402ebc8
6401af49:	jne    0x6401af5d
6401af4b:	mov    ecx,DWORD PTR [ebp-0x4]
6401af4e:	cmp    ecx,DWORD PTR ds:0x640324d8
6401af54:	jne    0x6401af5d
6401af56:	and    DWORD PTR ds:0x6402ebc8,0x0
6401af5d:	mov    ecx,DWORD PTR [ebp-0x4]
6401af60:	mov    DWORD PTR [eax],ecx
6401af62:	lea    eax,[edx+0x4]
6401af65:	pop    edi
6401af66:	pop    esi
6401af67:	pop    ebx
6401af68:	leave  
6401af69:	ret    
6401af6a:	int3   
6401af6b:	int3   
6401af6c:	push   ecx
6401af6d:	push   ebx
6401af6e:	mov    ebx,DWORD PTR [esp+0xc]
6401af72:	push   esi
6401af73:	push   edi
6401af74:	xor    esi,esi
6401af76:	xor    edi,edi
6401af78:	cmp    ebx,DWORD PTR [edi*8+0x6402da80]
6401af7f:	je     0x6401af87
6401af81:	inc    edi
6401af82:	cmp    edi,0x17
6401af85:	jb     0x6401af78
6401af87:	cmp    edi,0x17
6401af8a:	jae    0x6401b107
6401af90:	push   ebp
6401af91:	push   0x3
6401af93:	call   0x6401e033
6401af98:	cmp    eax,0x1
6401af9b:	pop    ecx
6401af9c:	je     0x6401b0d3
6401afa2:	push   0x3
6401afa4:	call   0x6401e033
6401afa9:	test   eax,eax
6401afab:	pop    ecx
6401afac:	jne    0x6401afbb
6401afae:	cmp    DWORD PTR ds:0x6402e580,0x1
6401afb5:	je     0x6401b0d3
6401afbb:	cmp    ebx,0xfc
6401afc1:	je     0x6401b106
6401afc7:	push   0x64026418
6401afcc:	mov    ebx,0x314
6401afd1:	push   ebx
6401afd2:	mov    ebp,0x6402ebd0
6401afd7:	push   ebp
6401afd8:	call   0x64014828
6401afdd:	add    esp,0xc
6401afe0:	test   eax,eax
6401afe2:	je     0x6401aff1
6401afe4:	push   esi
6401afe5:	push   esi
6401afe6:	push   esi
6401afe7:	push   esi
6401afe8:	push   esi
6401afe9:	call   0x640128a8
6401afee:	add    esp,0x14
6401aff1:	push   0x104
6401aff6:	mov    esi,0x6402ebe9
6401affb:	push   esi
6401affc:	push   0x0
6401affe:	mov    BYTE PTR ds:0x6402eced,0x0
6401b005:	call   DWORD PTR ds:0x6402516c
6401b00b:	test   eax,eax
6401b00d:	jne    0x6401b035
6401b00f:	push   0x64026400
6401b014:	push   0x2fb
6401b019:	push   esi
6401b01a:	call   0x64014828
6401b01f:	add    esp,0xc
6401b022:	test   eax,eax
6401b024:	je     0x6401b035
6401b026:	xor    eax,eax
6401b028:	push   eax
6401b029:	push   eax
6401b02a:	push   eax
6401b02b:	push   eax
6401b02c:	push   eax
6401b02d:	call   0x640128a8
6401b032:	add    esp,0x14
6401b035:	push   esi
6401b036:	call   0x64014630
6401b03b:	inc    eax
6401b03c:	cmp    eax,0x3c
6401b03f:	pop    ecx
6401b040:	jbe    0x6401b07a
6401b042:	push   esi
6401b043:	call   0x64014630
6401b048:	sub    esi,0x3b
6401b04b:	add    eax,esi
6401b04d:	push   0x3
6401b04f:	mov    ecx,0x6402eee4
6401b054:	push   0x640263fc
6401b059:	sub    ecx,eax
6401b05b:	push   ecx
6401b05c:	push   eax
6401b05d:	call   0x6401c0c6
6401b062:	add    esp,0x14
6401b065:	test   eax,eax
6401b067:	je     0x6401b07a
6401b069:	xor    esi,esi
6401b06b:	push   esi
6401b06c:	push   esi
6401b06d:	push   esi
6401b06e:	push   esi
6401b06f:	push   esi
6401b070:	call   0x640128a8
6401b075:	add    esp,0x14
6401b078:	jmp    0x6401b07c
6401b07a:	xor    esi,esi
6401b07c:	push   0x640263f8
6401b081:	push   ebx
6401b082:	push   ebp
6401b083:	call   0x6401c00f
6401b088:	add    esp,0xc
6401b08b:	test   eax,eax
6401b08d:	je     0x6401b09c
6401b08f:	push   esi
6401b090:	push   esi
6401b091:	push   esi
6401b092:	push   esi
6401b093:	push   esi
6401b094:	call   0x640128a8
6401b099:	add    esp,0x14
6401b09c:	push   DWORD PTR [edi*8+0x6402da84]
6401b0a3:	push   ebx
6401b0a4:	push   ebp
6401b0a5:	call   0x6401c00f
6401b0aa:	add    esp,0xc
6401b0ad:	test   eax,eax
6401b0af:	je     0x6401b0be
6401b0b1:	push   esi
6401b0b2:	push   esi
6401b0b3:	push   esi
6401b0b4:	push   esi
6401b0b5:	push   esi
6401b0b6:	call   0x640128a8
6401b0bb:	add    esp,0x14
6401b0be:	push   0x12010
6401b0c3:	push   0x640263d0
6401b0c8:	push   ebp
6401b0c9:	call   0x6401de76
6401b0ce:	add    esp,0xc
6401b0d1:	jmp    0x6401b106
6401b0d3:	push   0xfffffff4
6401b0d5:	call   DWORD PTR ds:0x64025160
6401b0db:	mov    ebp,eax
6401b0dd:	cmp    ebp,esi
6401b0df:	je     0x6401b106
6401b0e1:	cmp    ebp,0xffffffff
6401b0e4:	je     0x6401b106
6401b0e6:	push   0x0
6401b0e8:	lea    eax,[esp+0x14]
6401b0ec:	push   eax
6401b0ed:	lea    esi,[edi*8+0x6402da84]
6401b0f4:	push   DWORD PTR [esi]
6401b0f6:	call   0x64014630
6401b0fb:	pop    ecx
6401b0fc:	push   eax
6401b0fd:	push   DWORD PTR [esi]
6401b0ff:	push   ebp
6401b100:	call   DWORD PTR ds:0x64025088
6401b106:	pop    ebp
6401b107:	pop    edi
6401b108:	pop    esi
6401b109:	pop    ebx
6401b10a:	pop    ecx
6401b10b:	ret    
6401b10c:	push   0x3
6401b10e:	call   0x6401e033
6401b113:	cmp    eax,0x1
6401b116:	pop    ecx
6401b117:	je     0x6401b12e
6401b119:	push   0x3
6401b11b:	call   0x6401e033
6401b120:	test   eax,eax
6401b122:	pop    ecx
6401b123:	jne    0x6401b144
6401b125:	cmp    DWORD PTR ds:0x6402e580,0x1
6401b12c:	jne    0x6401b144
6401b12e:	push   0xfc
6401b133:	call   0x6401af6c
6401b138:	push   0xff
6401b13d:	call   0x6401af6c
6401b142:	pop    ecx
6401b143:	pop    ecx
6401b144:	ret    
6401b145:	push   ebp
6401b146:	mov    ebp,esp
6401b148:	sub    esp,0x8
6401b14b:	mov    DWORD PTR [ebp-0x4],edi
6401b14e:	mov    DWORD PTR [ebp-0x8],esi
6401b151:	mov    esi,DWORD PTR [ebp+0xc]
6401b154:	mov    edi,DWORD PTR [ebp+0x8]
6401b157:	mov    ecx,DWORD PTR [ebp+0x10]
6401b15a:	shr    ecx,0x7
6401b15d:	jmp    0x6401b165
6401b15f:	lea    ebx,[ebx+0x0]
6401b165:	movdqa xmm0,XMMWORD PTR [esi]
6401b169:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401b16e:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401b173:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401b178:	movdqa XMMWORD PTR [edi],xmm0
6401b17c:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401b181:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401b186:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401b18b:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401b190:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401b195:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401b19a:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401b19f:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401b1a4:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401b1a9:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401b1ae:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401b1b3:	lea    esi,[esi+0x80]
6401b1b9:	lea    edi,[edi+0x80]
6401b1bf:	dec    ecx
6401b1c0:	jne    0x6401b165
6401b1c2:	mov    esi,DWORD PTR [ebp-0x8]
6401b1c5:	mov    edi,DWORD PTR [ebp-0x4]
6401b1c8:	mov    esp,ebp
6401b1ca:	pop    ebp
6401b1cb:	ret    
6401b1cc:	push   ebp
6401b1cd:	mov    ebp,esp
6401b1cf:	sub    esp,0x1c
6401b1d2:	mov    DWORD PTR [ebp-0xc],edi
6401b1d5:	mov    DWORD PTR [ebp-0x8],esi
6401b1d8:	mov    DWORD PTR [ebp-0x4],ebx
6401b1db:	mov    ebx,DWORD PTR [ebp+0xc]
6401b1de:	mov    eax,ebx
6401b1e0:	cdq    
6401b1e1:	mov    ecx,eax
6401b1e3:	mov    eax,DWORD PTR [ebp+0x8]
6401b1e6:	xor    ecx,edx
6401b1e8:	sub    ecx,edx
6401b1ea:	and    ecx,0xf
6401b1ed:	xor    ecx,edx
6401b1ef:	sub    ecx,edx
6401b1f1:	cdq    
6401b1f2:	mov    edi,eax
6401b1f4:	xor    edi,edx
6401b1f6:	sub    edi,edx
6401b1f8:	and    edi,0xf
6401b1fb:	xor    edi,edx
6401b1fd:	sub    edi,edx
6401b1ff:	mov    edx,ecx
6401b201:	or     edx,edi
6401b203:	jne    0x6401b24f
6401b205:	mov    esi,DWORD PTR [ebp+0x10]
6401b208:	mov    ecx,esi
6401b20a:	and    ecx,0x7f
6401b20d:	mov    DWORD PTR [ebp-0x18],ecx
6401b210:	cmp    esi,ecx
6401b212:	je     0x6401b227
6401b214:	sub    esi,ecx
6401b216:	push   esi
6401b217:	push   ebx
6401b218:	push   eax
6401b219:	call   0x6401b145
6401b21e:	add    esp,0xc
6401b221:	mov    eax,DWORD PTR [ebp+0x8]
6401b224:	mov    ecx,DWORD PTR [ebp-0x18]
6401b227:	test   ecx,ecx
6401b229:	je     0x6401b2a2
6401b22b:	mov    ebx,DWORD PTR [ebp+0x10]
6401b22e:	mov    edx,DWORD PTR [ebp+0xc]
6401b231:	add    edx,ebx
6401b233:	sub    edx,ecx
6401b235:	mov    DWORD PTR [ebp-0x14],edx
6401b238:	add    ebx,eax
6401b23a:	sub    ebx,ecx
6401b23c:	mov    DWORD PTR [ebp-0x10],ebx
6401b23f:	mov    esi,DWORD PTR [ebp-0x14]
6401b242:	mov    edi,DWORD PTR [ebp-0x10]
6401b245:	mov    ecx,DWORD PTR [ebp-0x18]
6401b248:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401b24a:	mov    eax,DWORD PTR [ebp+0x8]
6401b24d:	jmp    0x6401b2a2
6401b24f:	cmp    ecx,edi
6401b251:	jne    0x6401b288
6401b253:	neg    ecx
6401b255:	add    ecx,0x10
6401b258:	mov    DWORD PTR [ebp-0x1c],ecx
6401b25b:	mov    esi,DWORD PTR [ebp+0xc]
6401b25e:	mov    edi,DWORD PTR [ebp+0x8]
6401b261:	mov    ecx,DWORD PTR [ebp-0x1c]
6401b264:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401b266:	mov    ecx,DWORD PTR [ebp+0x8]
6401b269:	add    ecx,DWORD PTR [ebp-0x1c]
6401b26c:	mov    edx,DWORD PTR [ebp+0xc]
6401b26f:	add    edx,DWORD PTR [ebp-0x1c]
6401b272:	mov    eax,DWORD PTR [ebp+0x10]
6401b275:	sub    eax,DWORD PTR [ebp-0x1c]
6401b278:	push   eax
6401b279:	push   edx
6401b27a:	push   ecx
6401b27b:	call   0x6401b1cc
6401b280:	add    esp,0xc
6401b283:	mov    eax,DWORD PTR [ebp+0x8]
6401b286:	jmp    0x6401b2a2
6401b288:	mov    esi,DWORD PTR [ebp+0xc]
6401b28b:	mov    edi,DWORD PTR [ebp+0x8]
6401b28e:	mov    ecx,DWORD PTR [ebp+0x10]
6401b291:	mov    edx,ecx
6401b293:	shr    ecx,0x2
6401b296:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401b298:	mov    ecx,edx
6401b29a:	and    ecx,0x3
6401b29d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401b29f:	mov    eax,DWORD PTR [ebp+0x8]
6401b2a2:	mov    ebx,DWORD PTR [ebp-0x4]
6401b2a5:	mov    esi,DWORD PTR [ebp-0x8]
6401b2a8:	mov    edi,DWORD PTR [ebp-0xc]
6401b2ab:	mov    esp,ebp
6401b2ad:	pop    ebp
6401b2ae:	ret    
6401b2af:	int3   
6401b2b0:	push   ebx
6401b2b1:	push   esi
6401b2b2:	push   edi
6401b2b3:	mov    edx,DWORD PTR [esp+0x10]
6401b2b7:	mov    eax,DWORD PTR [esp+0x14]
6401b2bb:	mov    ecx,DWORD PTR [esp+0x18]
6401b2bf:	push   ebp
6401b2c0:	push   edx
6401b2c1:	push   eax
6401b2c2:	push   ecx
6401b2c3:	push   ecx
6401b2c4:	push   0x6401b340
6401b2c9:	push   DWORD PTR fs:0x0
6401b2d0:	mov    eax,ds:0x6402d09c
6401b2d5:	xor    eax,esp
6401b2d7:	mov    DWORD PTR [esp+0x8],eax
6401b2db:	mov    DWORD PTR fs:0x0,esp
6401b2e2:	mov    eax,DWORD PTR [esp+0x30]
6401b2e6:	mov    ebx,DWORD PTR [eax+0x8]
6401b2e9:	mov    ecx,DWORD PTR [esp+0x2c]
6401b2ed:	xor    ebx,DWORD PTR [ecx]
6401b2ef:	mov    esi,DWORD PTR [eax+0xc]
6401b2f2:	cmp    esi,0xfffffffe
6401b2f5:	je     0x6401b332
6401b2f7:	mov    edx,DWORD PTR [esp+0x34]
6401b2fb:	cmp    edx,0xfffffffe
6401b2fe:	je     0x6401b304
6401b300:	cmp    esi,edx
6401b302:	jbe    0x6401b332
6401b304:	lea    esi,[esi+esi*2]
6401b307:	lea    ebx,[ebx+esi*4+0x10]
6401b30b:	mov    ecx,DWORD PTR [ebx]
6401b30d:	mov    DWORD PTR [eax+0xc],ecx
6401b310:	cmp    DWORD PTR [ebx+0x4],0x0
6401b314:	jne    0x6401b2e2
6401b316:	push   0x101
6401b31b:	mov    eax,DWORD PTR [ebx+0x8]
6401b31e:	call   0x6401b761
6401b323:	mov    ecx,0x1
6401b328:	mov    eax,DWORD PTR [ebx+0x8]
6401b32b:	call   0x6401b780
6401b330:	jmp    0x6401b2e2
6401b332:	pop    DWORD PTR fs:0x0
6401b339:	add    esp,0x18
6401b33c:	pop    edi
6401b33d:	pop    esi
6401b33e:	pop    ebx
6401b33f:	ret    
6401b340:	mov    ecx,DWORD PTR [esp+0x4]
6401b344:	test   DWORD PTR [ecx+0x4],0x6
6401b34b:	mov    eax,0x1
6401b350:	je     0x6401b385
6401b352:	mov    eax,DWORD PTR [esp+0x8]
6401b356:	mov    ecx,DWORD PTR [eax+0x8]
6401b359:	xor    ecx,eax
6401b35b:	call   0x64012e6c
6401b360:	push   ebp
6401b361:	mov    ebp,DWORD PTR [eax+0x18]
6401b364:	push   DWORD PTR [eax+0xc]
6401b367:	push   DWORD PTR [eax+0x10]
6401b36a:	push   DWORD PTR [eax+0x14]
6401b36d:	call   0x6401b2b0
6401b372:	add    esp,0xc
6401b375:	pop    ebp
6401b376:	mov    eax,DWORD PTR [esp+0x8]
6401b37a:	mov    edx,DWORD PTR [esp+0x10]
6401b37e:	mov    DWORD PTR [edx],eax
6401b380:	mov    eax,0x3
6401b385:	ret    
6401b386:	push   ebp
6401b387:	mov    ecx,DWORD PTR [esp+0x8]
6401b38b:	mov    ebp,DWORD PTR [ecx]
6401b38d:	push   DWORD PTR [ecx+0x1c]
6401b390:	push   DWORD PTR [ecx+0x18]
6401b393:	push   DWORD PTR [ecx+0x28]
6401b396:	call   0x6401b2b0
6401b39b:	add    esp,0xc
6401b39e:	pop    ebp
6401b39f:	ret    0x4
6401b3a2:	push   ebp
6401b3a3:	push   esi
6401b3a4:	push   edi
6401b3a5:	push   ebx
6401b3a6:	mov    ebp,edx
6401b3a8:	xor    eax,eax
6401b3aa:	xor    ebx,ebx
6401b3ac:	xor    edx,edx
6401b3ae:	xor    esi,esi
6401b3b0:	xor    edi,edi
6401b3b2:	call   ecx
6401b3b4:	pop    ebx
6401b3b5:	pop    edi
6401b3b6:	pop    esi
6401b3b7:	pop    ebp
6401b3b8:	ret    
6401b3b9:	mov    ebp,edx
6401b3bb:	mov    esi,ecx
6401b3bd:	mov    eax,ecx
6401b3bf:	push   0x1
6401b3c1:	call   0x6401b761
6401b3c6:	xor    eax,eax
6401b3c8:	xor    ebx,ebx
6401b3ca:	xor    ecx,ecx
6401b3cc:	xor    edx,edx
6401b3ce:	xor    edi,edi
6401b3d0:	jmp    esi
6401b3d2:	push   ebp
6401b3d3:	mov    ebp,esp
6401b3d5:	push   ebx
6401b3d6:	push   esi
6401b3d7:	push   edi
6401b3d8:	push   0x0
6401b3da:	push   0x0
6401b3dc:	push   0x6401b3e7
6401b3e1:	push   ecx
6401b3e2:	call   0x6401f0dc
6401b3e7:	pop    edi
6401b3e8:	pop    esi
6401b3e9:	pop    ebx
6401b3ea:	pop    ebp
6401b3eb:	ret    
6401b3ec:	push   ebp
6401b3ed:	mov    ebp,DWORD PTR [esp+0x8]
6401b3f1:	push   edx
6401b3f2:	push   ecx
6401b3f3:	push   DWORD PTR [esp+0x14]
6401b3f7:	call   0x6401b2b0
6401b3fc:	add    esp,0xc
6401b3ff:	pop    ebp
6401b400:	ret    0x8
6401b403:	int3   
6401b404:	int3   
6401b405:	int3   
6401b406:	int3   
6401b407:	int3   
6401b408:	int3   
6401b409:	int3   
6401b40a:	int3   
6401b40b:	int3   
6401b40c:	int3   
6401b40d:	int3   
6401b40e:	int3   
6401b40f:	int3   
6401b410:	mov    ecx,DWORD PTR [esp+0x4]
6401b414:	cmp    WORD PTR [ecx],0x5a4d
6401b419:	je     0x6401b41e
6401b41b:	xor    eax,eax
6401b41d:	ret    
6401b41e:	mov    eax,DWORD PTR [ecx+0x3c]
6401b421:	add    eax,ecx
6401b423:	cmp    DWORD PTR [eax],0x4550
6401b429:	jne    0x6401b41b
6401b42b:	xor    ecx,ecx
6401b42d:	cmp    WORD PTR [eax+0x18],0x10b
6401b433:	sete   cl
6401b436:	mov    eax,ecx
6401b438:	ret    
6401b439:	int3   
6401b43a:	int3   
6401b43b:	int3   
6401b43c:	int3   
6401b43d:	int3   
6401b43e:	int3   
6401b43f:	int3   
6401b440:	mov    eax,DWORD PTR [esp+0x4]
6401b444:	mov    ecx,DWORD PTR [eax+0x3c]
6401b447:	add    ecx,eax
6401b449:	movzx  eax,WORD PTR [ecx+0x14]
6401b44d:	push   ebx
6401b44e:	push   esi
6401b44f:	movzx  esi,WORD PTR [ecx+0x6]
6401b453:	xor    edx,edx
6401b455:	test   esi,esi
6401b457:	push   edi
6401b458:	lea    eax,[eax+ecx*1+0x18]
6401b45c:	jbe    0x6401b47c
6401b45e:	mov    edi,DWORD PTR [esp+0x14]
6401b462:	mov    ecx,DWORD PTR [eax+0xc]
6401b465:	cmp    edi,ecx
6401b467:	jb     0x6401b472
6401b469:	mov    ebx,DWORD PTR [eax+0x8]
6401b46c:	add    ebx,ecx
6401b46e:	cmp    edi,ebx
6401b470:	jb     0x6401b47e
6401b472:	add    edx,0x1
6401b475:	add    eax,0x28
6401b478:	cmp    edx,esi
6401b47a:	jb     0x6401b462
6401b47c:	xor    eax,eax
6401b47e:	pop    edi
6401b47f:	pop    esi
6401b480:	pop    ebx
6401b481:	ret    
6401b482:	int3   
6401b483:	int3   
6401b484:	int3   
6401b485:	int3   
6401b486:	int3   
6401b487:	int3   
6401b488:	int3   
6401b489:	int3   
6401b48a:	int3   
6401b48b:	int3   
6401b48c:	int3   
6401b48d:	int3   
6401b48e:	int3   
6401b48f:	int3   
6401b490:	push   ebp
6401b491:	mov    ebp,esp
6401b493:	push   0xfffffffe
6401b495:	push   0x6402a7d0
6401b49a:	push   0x64014490
6401b49f:	mov    eax,fs:0x0
6401b4a5:	push   eax
6401b4a6:	sub    esp,0x8
6401b4a9:	push   ebx
6401b4aa:	push   esi
6401b4ab:	push   edi
6401b4ac:	mov    eax,ds:0x6402d09c
6401b4b1:	xor    DWORD PTR [ebp-0x8],eax
6401b4b4:	xor    eax,ebp
6401b4b6:	push   eax
6401b4b7:	lea    eax,[ebp-0x10]
6401b4ba:	mov    fs:0x0,eax
6401b4c0:	mov    DWORD PTR [ebp-0x18],esp
6401b4c3:	mov    DWORD PTR [ebp-0x4],0x0
6401b4ca:	push   0x64000000
6401b4cf:	call   0x6401b410
6401b4d4:	add    esp,0x4
6401b4d7:	test   eax,eax
6401b4d9:	je     0x6401b530
6401b4db:	mov    eax,DWORD PTR [ebp+0x8]
6401b4de:	sub    eax,0x64000000
6401b4e3:	push   eax
6401b4e4:	push   0x64000000
6401b4e9:	call   0x6401b440
6401b4ee:	add    esp,0x8
6401b4f1:	test   eax,eax
6401b4f3:	je     0x6401b530
6401b4f5:	mov    eax,DWORD PTR [eax+0x24]
6401b4f8:	shr    eax,0x1f
6401b4fb:	not    eax
6401b4fd:	and    eax,0x1
6401b500:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b507:	mov    ecx,DWORD PTR [ebp-0x10]
6401b50a:	mov    DWORD PTR fs:0x0,ecx
6401b511:	pop    ecx
6401b512:	pop    edi
6401b513:	pop    esi
6401b514:	pop    ebx
6401b515:	mov    esp,ebp
6401b517:	pop    ebp
6401b518:	ret    
6401b519:	mov    eax,DWORD PTR [ebp-0x14]
6401b51c:	mov    ecx,DWORD PTR [eax]
6401b51e:	mov    eax,DWORD PTR [ecx]
6401b520:	xor    edx,edx
6401b522:	cmp    eax,0xc0000005
6401b527:	sete   dl
6401b52a:	mov    eax,edx
6401b52c:	ret    
6401b52d:	mov    esp,DWORD PTR [ebp-0x18]
6401b530:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b537:	xor    eax,eax
6401b539:	mov    ecx,DWORD PTR [ebp-0x10]
6401b53c:	mov    DWORD PTR fs:0x0,ecx
6401b543:	pop    ecx
6401b544:	pop    edi
6401b545:	pop    esi
6401b546:	pop    ebx
6401b547:	mov    esp,ebp
6401b549:	pop    ebp
6401b54a:	ret    
6401b54b:	xor    eax,eax
6401b54d:	inc    eax
6401b54e:	cmp    DWORD PTR [esp+0x4],0x0
6401b553:	jne    0x6401b557
6401b555:	xor    eax,eax
6401b557:	ret    
6401b558:	push   ebp
6401b559:	lea    ebp,[esp-0x2a8]
6401b560:	sub    esp,0x328
6401b566:	mov    eax,ds:0x6402d09c
6401b56b:	xor    eax,ebp
6401b56d:	mov    DWORD PTR [ebp+0x2a4],eax
6401b573:	test   BYTE PTR ds:0x6402db38,0x1
6401b57a:	push   esi
6401b57b:	je     0x6401b585
6401b57d:	push   0xa
6401b57f:	call   0x6401af6c
6401b584:	pop    ecx
6401b585:	call   0x6401b90d
6401b58a:	test   eax,eax
6401b58c:	je     0x6401b596
6401b58e:	push   0x16
6401b590:	call   0x6401b91a
6401b595:	pop    ecx
6401b596:	test   BYTE PTR ds:0x6402db38,0x2
6401b59d:	je     0x6401b643
6401b5a3:	mov    DWORD PTR [ebp+0x88],eax
6401b5a9:	mov    DWORD PTR [ebp+0x84],ecx
6401b5af:	mov    DWORD PTR [ebp+0x80],edx
6401b5b5:	mov    DWORD PTR [ebp+0x7c],ebx
6401b5b8:	mov    DWORD PTR [ebp+0x78],esi
6401b5bb:	mov    DWORD PTR [ebp+0x74],edi
6401b5be:	data16 mov WORD PTR [ebp+0xa0],ss
6401b5c5:	data16 mov WORD PTR [ebp+0x94],cs
6401b5cc:	data16 mov WORD PTR [ebp+0x70],ds
6401b5d0:	data16 mov WORD PTR [ebp+0x6c],es
6401b5d4:	data16 mov WORD PTR [ebp+0x68],fs
6401b5d8:	data16 mov WORD PTR [ebp+0x64],gs
6401b5dc:	pushf  
6401b5dd:	pop    DWORD PTR [ebp+0x98]
6401b5e3:	mov    esi,DWORD PTR [ebp+0x2ac]
6401b5e9:	lea    eax,[ebp+0x2ac]
6401b5ef:	mov    DWORD PTR [ebp+0x9c],eax
6401b5f5:	mov    DWORD PTR [ebp-0x28],0x10001
6401b5fc:	mov    DWORD PTR [ebp+0x90],esi
6401b602:	mov    eax,DWORD PTR [eax-0x4]
6401b605:	push   0x50
6401b607:	mov    DWORD PTR [ebp+0x8c],eax
6401b60d:	lea    eax,[ebp-0x80]
6401b610:	push   0x0
6401b612:	push   eax
6401b613:	call   0x64013570
6401b618:	lea    eax,[ebp-0x80]
6401b61b:	add    esp,0xc
6401b61e:	mov    DWORD PTR [ebp-0x30],eax
6401b621:	lea    eax,[ebp-0x28]
6401b624:	push   0x0
6401b626:	mov    DWORD PTR [ebp-0x80],0x40000015
6401b62d:	mov    DWORD PTR [ebp-0x74],esi
6401b630:	mov    DWORD PTR [ebp-0x2c],eax
6401b633:	call   DWORD PTR ds:0x6402511c
6401b639:	lea    eax,[ebp-0x30]
6401b63c:	push   eax
6401b63d:	call   DWORD PTR ds:0x64025118
6401b643:	push   0x3
6401b645:	call   0x64016546
6401b64a:	int3   
6401b64b:	int3   
6401b64c:	push   ebp
6401b64d:	mov    ebp,esp
6401b64f:	push   ebx
6401b650:	push   esi
6401b651:	push   edi
6401b652:	push   ebp
6401b653:	push   0x0
6401b655:	push   0x0
6401b657:	push   0x6401b664
6401b65c:	push   DWORD PTR [ebp+0x8]
6401b65f:	call   0x6401f0dc
6401b664:	pop    ebp
6401b665:	pop    edi
6401b666:	pop    esi
6401b667:	pop    ebx
6401b668:	mov    esp,ebp
6401b66a:	pop    ebp
6401b66b:	ret    
6401b66c:	mov    ecx,DWORD PTR [esp+0x4]
6401b670:	test   DWORD PTR [ecx+0x4],0x6
6401b677:	mov    eax,0x1
6401b67c:	je     0x6401b6b0
6401b67e:	mov    eax,DWORD PTR [esp+0x14]
6401b682:	mov    ecx,DWORD PTR [eax-0x4]
6401b685:	xor    ecx,eax
6401b687:	call   0x64012e6c
6401b68c:	push   ebp
6401b68d:	mov    ebp,DWORD PTR [eax+0x10]
6401b690:	mov    edx,DWORD PTR [eax+0x28]
6401b693:	push   edx
6401b694:	mov    edx,DWORD PTR [eax+0x24]
6401b697:	push   edx
6401b698:	call   0x6401b6b1
6401b69d:	add    esp,0x8
6401b6a0:	pop    ebp
6401b6a1:	mov    eax,DWORD PTR [esp+0x8]
6401b6a5:	mov    edx,DWORD PTR [esp+0x10]
6401b6a9:	mov    DWORD PTR [edx],eax
6401b6ab:	mov    eax,0x3
6401b6b0:	ret    
6401b6b1:	push   ebx
6401b6b2:	push   esi
6401b6b3:	push   edi
6401b6b4:	mov    eax,DWORD PTR [esp+0x10]
6401b6b8:	push   ebp
6401b6b9:	push   eax
6401b6ba:	push   0xfffffffe
6401b6bc:	push   0x6401b66c
6401b6c1:	push   DWORD PTR fs:0x0
6401b6c8:	mov    eax,ds:0x6402d09c
6401b6cd:	xor    eax,esp
6401b6cf:	push   eax
6401b6d0:	lea    eax,[esp+0x4]
6401b6d4:	mov    fs:0x0,eax
6401b6da:	mov    eax,DWORD PTR [esp+0x28]
6401b6de:	mov    ebx,DWORD PTR [eax+0x8]
6401b6e1:	mov    esi,DWORD PTR [eax+0xc]
6401b6e4:	cmp    esi,0xffffffff
6401b6e7:	je     0x6401b723
6401b6e9:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401b6ee:	je     0x6401b6f6
6401b6f0:	cmp    esi,DWORD PTR [esp+0x2c]
6401b6f4:	jbe    0x6401b723
6401b6f6:	lea    esi,[esi+esi*2]
6401b6f9:	mov    ecx,DWORD PTR [ebx+esi*4]
6401b6fc:	mov    DWORD PTR [esp+0xc],ecx
6401b700:	mov    DWORD PTR [eax+0xc],ecx
6401b703:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401b708:	jne    0x6401b721
6401b70a:	push   0x101
6401b70f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401b713:	call   0x6401b761
6401b718:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401b71c:	call   0x6401b780
6401b721:	jmp    0x6401b6da
6401b723:	mov    ecx,DWORD PTR [esp+0x4]
6401b727:	mov    DWORD PTR fs:0x0,ecx
6401b72e:	add    esp,0x18
6401b731:	pop    edi
6401b732:	pop    esi
6401b733:	pop    ebx
6401b734:	ret    
6401b735:	xor    eax,eax
6401b737:	mov    ecx,DWORD PTR fs:0x0
6401b73e:	cmp    DWORD PTR [ecx+0x4],0x6401b66c
6401b745:	jne    0x6401b757
6401b747:	mov    edx,DWORD PTR [ecx+0xc]
6401b74a:	mov    edx,DWORD PTR [edx+0xc]
6401b74d:	cmp    DWORD PTR [ecx+0x8],edx
6401b750:	jne    0x6401b757
6401b752:	mov    eax,0x1
6401b757:	ret    
6401b758:	push   ebx
6401b759:	push   ecx
6401b75a:	mov    ebx,0x6402db3c
6401b75f:	jmp    0x6401b76c
6401b761:	push   ebx
6401b762:	push   ecx
6401b763:	mov    ebx,0x6402db3c
6401b768:	mov    ecx,DWORD PTR [esp+0xc]
6401b76c:	mov    DWORD PTR [ebx+0x8],ecx
6401b76f:	mov    DWORD PTR [ebx+0x4],eax
6401b772:	mov    DWORD PTR [ebx+0xc],ebp
6401b775:	push   ebp
6401b776:	push   ecx
6401b777:	push   eax
6401b778:	pop    eax
6401b779:	pop    ecx
6401b77a:	pop    ebp
6401b77b:	pop    ecx
6401b77c:	pop    ebx
6401b77d:	ret    0x4
6401b780:	call   eax
6401b782:	ret    
6401b783:	push   0xc
6401b785:	push   0x6402a7f0
6401b78a:	call   0x64014430
6401b78f:	mov    ecx,DWORD PTR [ebp+0x8]
6401b792:	xor    edi,edi
6401b794:	cmp    ecx,edi
6401b796:	jbe    0x6401b7c6
6401b798:	push   0xffffffe0
6401b79a:	pop    eax
6401b79b:	xor    edx,edx
6401b79d:	div    ecx
6401b79f:	cmp    eax,DWORD PTR [ebp+0xc]
6401b7a2:	sbb    eax,eax
6401b7a4:	inc    eax
6401b7a5:	jne    0x6401b7c6
6401b7a7:	call   0x64014c30
6401b7ac:	mov    DWORD PTR [eax],0xc
6401b7b2:	push   edi
6401b7b3:	push   edi
6401b7b4:	push   edi
6401b7b5:	push   edi
6401b7b6:	push   edi
6401b7b7:	call   0x640129a4
6401b7bc:	add    esp,0x14
6401b7bf:	xor    eax,eax
6401b7c1:	jmp    0x6401b89b
6401b7c6:	imul   ecx,DWORD PTR [ebp+0xc]
6401b7ca:	mov    esi,ecx
6401b7cc:	mov    DWORD PTR [ebp+0x8],esi
6401b7cf:	cmp    esi,edi
6401b7d1:	jne    0x6401b7d6
6401b7d3:	xor    esi,esi
6401b7d5:	inc    esi
6401b7d6:	xor    ebx,ebx
6401b7d8:	mov    DWORD PTR [ebp-0x1c],ebx
6401b7db:	cmp    esi,0xffffffe0
6401b7de:	ja     0x6401b849
6401b7e0:	cmp    DWORD PTR ds:0x640324dc,0x3
6401b7e7:	jne    0x6401b834
6401b7e9:	add    esi,0xf
6401b7ec:	and    esi,0xfffffff0
6401b7ef:	mov    DWORD PTR [ebp+0xc],esi
6401b7f2:	mov    eax,DWORD PTR [ebp+0x8]
6401b7f5:	cmp    eax,DWORD PTR ds:0x640324cc
6401b7fb:	ja     0x6401b834
6401b7fd:	push   0x4
6401b7ff:	call   0x6401a43a
6401b804:	pop    ecx
6401b805:	mov    DWORD PTR [ebp-0x4],edi
6401b808:	push   DWORD PTR [ebp+0x8]
6401b80b:	call   0x6401ac87
6401b810:	pop    ecx
6401b811:	mov    DWORD PTR [ebp-0x1c],eax
6401b814:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b81b:	call   0x6401b87f
6401b820:	mov    ebx,DWORD PTR [ebp-0x1c]
6401b823:	cmp    ebx,edi
6401b825:	je     0x6401b838
6401b827:	push   DWORD PTR [ebp+0x8]
6401b82a:	push   edi
6401b82b:	push   ebx
6401b82c:	call   0x64013570
6401b831:	add    esp,0xc
6401b834:	cmp    ebx,edi
6401b836:	jne    0x6401b899
6401b838:	push   esi
6401b839:	push   0x8
6401b83b:	push   DWORD PTR ds:0x6402ea6c
6401b841:	call   DWORD PTR ds:0x64025100
6401b847:	mov    ebx,eax
6401b849:	cmp    ebx,edi
6401b84b:	jne    0x6401b899
6401b84d:	cmp    DWORD PTR ds:0x6402eee4,edi
6401b853:	je     0x6401b888
6401b855:	push   esi
6401b856:	call   0x640152ab
6401b85b:	pop    ecx
6401b85c:	test   eax,eax
6401b85e:	jne    0x6401b7d6
6401b864:	mov    eax,DWORD PTR [ebp+0x10]
6401b867:	cmp    eax,edi
6401b869:	je     0x6401b7bf
6401b86f:	mov    DWORD PTR [eax],0xc
6401b875:	jmp    0x6401b7bf
6401b87a:	xor    edi,edi
6401b87c:	mov    esi,DWORD PTR [ebp+0xc]
6401b87f:	push   0x4
6401b881:	call   0x6401a362
6401b886:	pop    ecx
6401b887:	ret    
6401b888:	cmp    ebx,edi
6401b88a:	jne    0x6401b899
6401b88c:	mov    eax,DWORD PTR [ebp+0x10]
6401b88f:	cmp    eax,edi
6401b891:	je     0x6401b899
6401b893:	mov    DWORD PTR [eax],0xc
6401b899:	mov    eax,ebx
6401b89b:	call   0x64014475
6401b8a0:	ret    
6401b8a1:	push   esi
6401b8a2:	push   edi
6401b8a3:	xor    edi,edi
6401b8a5:	lea    esi,[edi+0x6402db4c]
6401b8ab:	push   DWORD PTR [esi]
6401b8ad:	call   0x64014ce8
6401b8b2:	add    edi,0x4
6401b8b5:	cmp    edi,0x28
6401b8b8:	pop    ecx
6401b8b9:	mov    DWORD PTR [esi],eax
6401b8bb:	jb     0x6401b8a5
6401b8bd:	pop    edi
6401b8be:	pop    esi
6401b8bf:	ret    
6401b8c0:	mov    eax,DWORD PTR [esp+0x4]
6401b8c4:	mov    ds:0x6402ef24,eax
6401b8c9:	mov    ds:0x6402ef28,eax
6401b8ce:	mov    ds:0x6402ef2c,eax
6401b8d3:	mov    ds:0x6402ef30,eax
6401b8d8:	ret    
6401b8d9:	mov    eax,DWORD PTR [esp+0x4]
6401b8dd:	mov    ecx,DWORD PTR ds:0x6402d94c
6401b8e3:	push   esi
6401b8e4:	cmp    DWORD PTR [eax+0x4],edx
6401b8e7:	je     0x6401b8f9
6401b8e9:	mov    esi,ecx
6401b8eb:	imul   esi,esi,0xc
6401b8ee:	add    esi,DWORD PTR [esp+0x8]
6401b8f2:	add    eax,0xc
6401b8f5:	cmp    eax,esi
6401b8f7:	jb     0x6401b8e4
6401b8f9:	imul   ecx,ecx,0xc
6401b8fc:	add    ecx,DWORD PTR [esp+0x8]
6401b900:	pop    esi
6401b901:	cmp    eax,ecx
6401b903:	jae    0x6401b90a
6401b905:	cmp    DWORD PTR [eax+0x4],edx
6401b908:	je     0x6401b90c
6401b90a:	xor    eax,eax
6401b90c:	ret    
6401b90d:	push   DWORD PTR ds:0x6402ef2c
6401b913:	call   0x64014d5f
6401b918:	pop    ecx
6401b919:	ret    
6401b91a:	push   0x20
6401b91c:	push   0x6402a810
6401b921:	call   0x64014430
6401b926:	xor    edi,edi
6401b928:	mov    DWORD PTR [ebp-0x1c],edi
6401b92b:	mov    DWORD PTR [ebp-0x28],edi
6401b92e:	mov    ebx,DWORD PTR [ebp+0x8]
6401b931:	cmp    ebx,0xb
6401b934:	jg     0x6401b982
6401b936:	je     0x6401b94d
6401b938:	mov    eax,ebx
6401b93a:	push   0x2
6401b93c:	pop    ecx
6401b93d:	sub    eax,ecx
6401b93f:	je     0x6401b963
6401b941:	sub    eax,ecx
6401b943:	je     0x6401b94d
6401b945:	sub    eax,ecx
6401b947:	je     0x6401b9ad
6401b949:	sub    eax,ecx
6401b94b:	jne    0x6401b991
6401b94d:	call   0x64014f04
6401b952:	mov    edi,eax
6401b954:	mov    DWORD PTR [ebp-0x28],edi
6401b957:	test   edi,edi
6401b959:	jne    0x6401b96f
6401b95b:	or     eax,0xffffffff
6401b95e:	jmp    0x6401bac4
6401b963:	mov    esi,0x6402ef24
6401b968:	mov    eax,ds:0x6402ef24
6401b96d:	jmp    0x6401b9cf
6401b96f:	push   DWORD PTR [edi+0x5c]
6401b972:	mov    edx,ebx
6401b974:	call   0x6401b8d9
6401b979:	mov    esi,eax
6401b97b:	add    esi,0x8
6401b97e:	mov    eax,DWORD PTR [esi]
6401b980:	jmp    0x6401b9dc
6401b982:	mov    eax,ebx
6401b984:	sub    eax,0xf
6401b987:	je     0x6401b9c5
6401b989:	sub    eax,0x6
6401b98c:	je     0x6401b9b9
6401b98e:	dec    eax
6401b98f:	je     0x6401b9ad
6401b991:	call   0x64014c30
6401b996:	mov    DWORD PTR [eax],0x16
6401b99c:	xor    eax,eax
6401b99e:	push   eax
6401b99f:	push   eax
6401b9a0:	push   eax
6401b9a1:	push   eax
6401b9a2:	push   eax
6401b9a3:	call   0x640129a4
6401b9a8:	add    esp,0x14
6401b9ab:	jmp    0x6401b95b
6401b9ad:	mov    esi,0x6402ef2c
6401b9b2:	mov    eax,ds:0x6402ef2c
6401b9b7:	jmp    0x6401b9cf
6401b9b9:	mov    esi,0x6402ef28
6401b9be:	mov    eax,ds:0x6402ef28
6401b9c3:	jmp    0x6401b9cf
6401b9c5:	mov    esi,0x6402ef30
6401b9ca:	mov    eax,ds:0x6402ef30
6401b9cf:	mov    DWORD PTR [ebp-0x1c],0x1
6401b9d6:	push   eax
6401b9d7:	call   0x64014d5f
6401b9dc:	mov    DWORD PTR [ebp-0x20],eax
6401b9df:	pop    ecx
6401b9e0:	xor    eax,eax
6401b9e2:	cmp    DWORD PTR [ebp-0x20],0x1
6401b9e6:	je     0x6401bac4
6401b9ec:	cmp    DWORD PTR [ebp-0x20],eax
6401b9ef:	jne    0x6401b9f8
6401b9f1:	push   0x3
6401b9f3:	call   0x64016546
6401b9f8:	cmp    DWORD PTR [ebp-0x1c],eax
6401b9fb:	je     0x6401ba04
6401b9fd:	push   eax
6401b9fe:	call   0x6401a43a
6401ba03:	pop    ecx
6401ba04:	xor    eax,eax
6401ba06:	mov    DWORD PTR [ebp-0x4],eax
6401ba09:	cmp    ebx,0x8
6401ba0c:	je     0x6401ba18
6401ba0e:	cmp    ebx,0xb
6401ba11:	je     0x6401ba18
6401ba13:	cmp    ebx,0x4
6401ba16:	jne    0x6401ba33
6401ba18:	mov    ecx,DWORD PTR [edi+0x60]
6401ba1b:	mov    DWORD PTR [ebp-0x2c],ecx
6401ba1e:	mov    DWORD PTR [edi+0x60],eax
6401ba21:	cmp    ebx,0x8
6401ba24:	jne    0x6401ba66
6401ba26:	mov    ecx,DWORD PTR [edi+0x64]
6401ba29:	mov    DWORD PTR [ebp-0x30],ecx
6401ba2c:	mov    DWORD PTR [edi+0x64],0x8c
6401ba33:	cmp    ebx,0x8
6401ba36:	jne    0x6401ba66
6401ba38:	mov    ecx,DWORD PTR ds:0x6402d940
6401ba3e:	mov    DWORD PTR [ebp-0x24],ecx
6401ba41:	mov    ecx,DWORD PTR ds:0x6402d944
6401ba47:	mov    edx,DWORD PTR ds:0x6402d940
6401ba4d:	add    ecx,edx
6401ba4f:	cmp    DWORD PTR [ebp-0x24],ecx
6401ba52:	jge    0x6401ba6d
6401ba54:	mov    ecx,DWORD PTR [ebp-0x24]
6401ba57:	imul   ecx,ecx,0xc
6401ba5a:	mov    edx,DWORD PTR [edi+0x5c]
6401ba5d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401ba61:	inc    DWORD PTR [ebp-0x24]
6401ba64:	jmp    0x6401ba41
6401ba66:	call   0x64014d56
6401ba6b:	mov    DWORD PTR [esi],eax
6401ba6d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ba74:	call   0x6401ba8e
6401ba79:	cmp    ebx,0x8
6401ba7c:	jne    0x6401ba9d
6401ba7e:	push   DWORD PTR [edi+0x64]
6401ba81:	push   ebx
6401ba82:	call   DWORD PTR [ebp-0x20]
6401ba85:	pop    ecx
6401ba86:	jmp    0x6401baa1
6401ba88:	mov    ebx,DWORD PTR [ebp+0x8]
6401ba8b:	mov    edi,DWORD PTR [ebp-0x28]
6401ba8e:	cmp    DWORD PTR [ebp-0x1c],0x0
6401ba92:	je     0x6401ba9c
6401ba94:	push   0x0
6401ba96:	call   0x6401a362
6401ba9b:	pop    ecx
6401ba9c:	ret    
6401ba9d:	push   ebx
6401ba9e:	call   DWORD PTR [ebp-0x20]
6401baa1:	pop    ecx
6401baa2:	cmp    ebx,0x8
6401baa5:	je     0x6401bab1
6401baa7:	cmp    ebx,0xb
6401baaa:	je     0x6401bab1
6401baac:	cmp    ebx,0x4
6401baaf:	jne    0x6401bac2
6401bab1:	mov    eax,DWORD PTR [ebp-0x2c]
6401bab4:	mov    DWORD PTR [edi+0x60],eax
6401bab7:	cmp    ebx,0x8
6401baba:	jne    0x6401bac2
6401babc:	mov    eax,DWORD PTR [ebp-0x30]
6401babf:	mov    DWORD PTR [edi+0x64],eax
6401bac2:	xor    eax,eax
6401bac4:	call   0x64014475
6401bac9:	ret    
6401baca:	mov    eax,DWORD PTR [esp+0x4]
6401bace:	mov    ds:0x6402ef38,eax
6401bad3:	ret    
6401bad4:	mov    eax,DWORD PTR [esp+0x4]
6401bad8:	mov    ds:0x6402ef44,eax
6401badd:	ret    
6401bade:	mov    eax,DWORD PTR [esp+0x4]
6401bae2:	mov    ds:0x6402ef48,eax
6401bae7:	ret    
6401bae8:	push   DWORD PTR [esp+0x4]
6401baec:	call   DWORD PTR ds:0x6402501c
6401baf2:	xor    eax,eax
6401baf4:	inc    eax
6401baf5:	ret    0x8
6401baf8:	push   0x14
6401bafa:	push   0x6402a830
6401baff:	call   0x64014430
6401bb04:	xor    edi,edi
6401bb06:	mov    DWORD PTR [ebp-0x1c],edi
6401bb09:	push   DWORD PTR ds:0x6402ef48
6401bb0f:	call   0x64014d5f
6401bb14:	pop    ecx
6401bb15:	mov    esi,eax
6401bb17:	cmp    esi,edi
6401bb19:	jne    0x6401bb6e
6401bb1b:	lea    eax,[ebp-0x1c]
6401bb1e:	push   eax
6401bb1f:	call   0x6401635f
6401bb24:	pop    ecx
6401bb25:	cmp    eax,edi
6401bb27:	je     0x6401bb36
6401bb29:	push   edi
6401bb2a:	push   edi
6401bb2b:	push   edi
6401bb2c:	push   edi
6401bb2d:	push   edi
6401bb2e:	call   0x640128a8
6401bb33:	add    esp,0x14
6401bb36:	cmp    DWORD PTR [ebp-0x1c],0x1
6401bb3a:	je     0x6401bb5d
6401bb3c:	push   0x64026b78
6401bb41:	call   DWORD PTR ds:0x64025130
6401bb47:	cmp    eax,edi
6401bb49:	je     0x6401bb5d
6401bb4b:	push   0x64026b50
6401bb50:	push   eax
6401bb51:	call   DWORD PTR ds:0x64025014
6401bb57:	mov    esi,eax
6401bb59:	cmp    esi,edi
6401bb5b:	jne    0x6401bb62
6401bb5d:	mov    esi,0x6401bae8
6401bb62:	push   esi
6401bb63:	call   0x64014ce8
6401bb68:	pop    ecx
6401bb69:	mov    ds:0x6402ef48,eax
6401bb6e:	mov    DWORD PTR [ebp-0x4],edi
6401bb71:	push   DWORD PTR [ebp+0xc]
6401bb74:	push   DWORD PTR [ebp+0x8]
6401bb77:	call   esi
6401bb79:	mov    DWORD PTR [ebp-0x20],eax
6401bb7c:	jmp    0x6401bbad
6401bb7e:	mov    eax,DWORD PTR [ebp-0x14]
6401bb81:	mov    eax,DWORD PTR [eax]
6401bb83:	mov    eax,DWORD PTR [eax]
6401bb85:	mov    DWORD PTR [ebp-0x24],eax
6401bb88:	xor    ecx,ecx
6401bb8a:	cmp    eax,0xc0000017
6401bb8f:	sete   cl
6401bb92:	mov    eax,ecx
6401bb94:	ret    
6401bb95:	mov    esp,DWORD PTR [ebp-0x18]
6401bb98:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401bb9f:	jne    0x6401bba9
6401bba1:	push   0x8
6401bba3:	call   DWORD PTR ds:0x64025060
6401bba9:	and    DWORD PTR [ebp-0x20],0x0
6401bbad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401bbb4:	mov    eax,DWORD PTR [ebp-0x20]
6401bbb7:	call   0x64014475
6401bbbc:	ret    
6401bbbd:	push   ebp
6401bbbe:	mov    ebp,esp
6401bbc0:	push   ecx
6401bbc1:	push   ecx
6401bbc2:	mov    eax,ds:0x6402d09c
6401bbc7:	xor    eax,ebp
6401bbc9:	mov    DWORD PTR [ebp-0x4],eax
6401bbcc:	mov    eax,ds:0x6402ef4c
6401bbd1:	push   ebx
6401bbd2:	push   esi
6401bbd3:	xor    ebx,ebx
6401bbd5:	cmp    eax,ebx
6401bbd7:	push   edi
6401bbd8:	mov    edi,ecx
6401bbda:	jne    0x6401bc16
6401bbdc:	lea    eax,[ebp-0x8]
6401bbdf:	push   eax
6401bbe0:	xor    esi,esi
6401bbe2:	inc    esi
6401bbe3:	push   esi
6401bbe4:	push   0x640276c4
6401bbe9:	push   esi
6401bbea:	call   DWORD PTR ds:0x640250bc
6401bbf0:	test   eax,eax
6401bbf2:	je     0x6401bbfc
6401bbf4:	mov    DWORD PTR ds:0x6402ef4c,esi
6401bbfa:	jmp    0x6401bc30
6401bbfc:	call   DWORD PTR ds:0x64025044
6401bc02:	cmp    eax,0x78
6401bc05:	jne    0x6401bc11
6401bc07:	push   0x2
6401bc09:	pop    eax
6401bc0a:	mov    ds:0x6402ef4c,eax
6401bc0f:	jmp    0x6401bc16
6401bc11:	mov    eax,ds:0x6402ef4c
6401bc16:	cmp    eax,0x2
6401bc19:	je     0x6401bcee
6401bc1f:	cmp    eax,ebx
6401bc21:	je     0x6401bcee
6401bc27:	cmp    eax,0x1
6401bc2a:	jne    0x6401bd18
6401bc30:	cmp    DWORD PTR [ebp+0x18],ebx
6401bc33:	mov    DWORD PTR [ebp-0x8],ebx
6401bc36:	jne    0x6401bc40
6401bc38:	mov    eax,DWORD PTR [edi]
6401bc3a:	mov    eax,DWORD PTR [eax+0x4]
6401bc3d:	mov    DWORD PTR [ebp+0x18],eax
6401bc40:	mov    esi,DWORD PTR ds:0x64025024
6401bc46:	xor    eax,eax
6401bc48:	cmp    DWORD PTR [ebp+0x20],ebx
6401bc4b:	push   ebx
6401bc4c:	push   ebx
6401bc4d:	push   DWORD PTR [ebp+0x10]
6401bc50:	setne  al
6401bc53:	push   DWORD PTR [ebp+0xc]
6401bc56:	lea    eax,[eax*8+0x1]
6401bc5d:	push   eax
6401bc5e:	push   DWORD PTR [ebp+0x18]
6401bc61:	call   esi
6401bc63:	mov    edi,eax
6401bc65:	cmp    edi,ebx
6401bc67:	je     0x6401bd18
6401bc6d:	jle    0x6401bcab
6401bc6f:	cmp    edi,0x7ffffff0
6401bc75:	ja     0x6401bcab
6401bc77:	lea    eax,[edi+edi*1+0x8]
6401bc7b:	cmp    eax,0x400
6401bc80:	ja     0x6401bc95
6401bc82:	call   0x640135f0
6401bc87:	mov    eax,esp
6401bc89:	cmp    eax,ebx
6401bc8b:	je     0x6401bca9
6401bc8d:	mov    DWORD PTR [eax],0xcccc
6401bc93:	jmp    0x6401bca6
6401bc95:	push   eax
6401bc96:	call   0x64013de3
6401bc9b:	cmp    eax,ebx
6401bc9d:	pop    ecx
6401bc9e:	je     0x6401bca9
6401bca0:	mov    DWORD PTR [eax],0xdddd
6401bca6:	add    eax,0x8
6401bca9:	mov    ebx,eax
6401bcab:	test   ebx,ebx
6401bcad:	je     0x6401bd18
6401bcaf:	lea    eax,[edi+edi*1]
6401bcb2:	push   eax
6401bcb3:	push   0x0
6401bcb5:	push   ebx
6401bcb6:	call   0x64013570
6401bcbb:	add    esp,0xc
6401bcbe:	push   edi
6401bcbf:	push   ebx
6401bcc0:	push   DWORD PTR [ebp+0x10]
6401bcc3:	push   DWORD PTR [ebp+0xc]
6401bcc6:	push   0x1
6401bcc8:	push   DWORD PTR [ebp+0x18]
6401bccb:	call   esi
6401bccd:	test   eax,eax
6401bccf:	je     0x6401bce2
6401bcd1:	push   DWORD PTR [ebp+0x14]
6401bcd4:	push   eax
6401bcd5:	push   ebx
6401bcd6:	push   DWORD PTR [ebp+0x8]
6401bcd9:	call   DWORD PTR ds:0x640250bc
6401bcdf:	mov    DWORD PTR [ebp-0x8],eax
6401bce2:	push   ebx
6401bce3:	call   0x6401337c
6401bce8:	mov    eax,DWORD PTR [ebp-0x8]
6401bceb:	pop    ecx
6401bcec:	jmp    0x6401bd63
6401bcee:	xor    esi,esi
6401bcf0:	cmp    DWORD PTR [ebp+0x1c],ebx
6401bcf3:	jne    0x6401bcfd
6401bcf5:	mov    eax,DWORD PTR [edi]
6401bcf7:	mov    eax,DWORD PTR [eax+0x14]
6401bcfa:	mov    DWORD PTR [ebp+0x1c],eax
6401bcfd:	cmp    DWORD PTR [ebp+0x18],ebx
6401bd00:	jne    0x6401bd0a
6401bd02:	mov    eax,DWORD PTR [edi]
6401bd04:	mov    eax,DWORD PTR [eax+0x4]
6401bd07:	mov    DWORD PTR [ebp+0x18],eax
6401bd0a:	push   DWORD PTR [ebp+0x1c]
6401bd0d:	call   0x6401d9e2
6401bd12:	cmp    eax,0xffffffff
6401bd15:	pop    ecx
6401bd16:	jne    0x6401bd1c
6401bd18:	xor    eax,eax
6401bd1a:	jmp    0x6401bd63
6401bd1c:	cmp    eax,DWORD PTR [ebp+0x18]
6401bd1f:	je     0x6401bd3f
6401bd21:	push   ebx
6401bd22:	push   ebx
6401bd23:	lea    ecx,[ebp+0x10]
6401bd26:	push   ecx
6401bd27:	push   DWORD PTR [ebp+0xc]
6401bd2a:	push   eax
6401bd2b:	push   DWORD PTR [ebp+0x18]
6401bd2e:	call   0x6401da29
6401bd33:	mov    esi,eax
6401bd35:	add    esp,0x18
6401bd38:	cmp    esi,ebx
6401bd3a:	je     0x6401bd18
6401bd3c:	mov    DWORD PTR [ebp+0xc],esi
6401bd3f:	push   DWORD PTR [ebp+0x14]
6401bd42:	push   DWORD PTR [ebp+0x10]
6401bd45:	push   DWORD PTR [ebp+0xc]
6401bd48:	push   DWORD PTR [ebp+0x8]
6401bd4b:	push   DWORD PTR [ebp+0x1c]
6401bd4e:	call   DWORD PTR ds:0x640250c0
6401bd54:	cmp    esi,ebx
6401bd56:	mov    edi,eax
6401bd58:	je     0x6401bd61
6401bd5a:	push   esi
6401bd5b:	call   0x64013d06
6401bd60:	pop    ecx
6401bd61:	mov    eax,edi
6401bd63:	lea    esp,[ebp-0x14]
6401bd66:	pop    edi
6401bd67:	pop    esi
6401bd68:	pop    ebx
6401bd69:	mov    ecx,DWORD PTR [ebp-0x4]
6401bd6c:	xor    ecx,ebp
6401bd6e:	call   0x64012e6c
6401bd73:	leave  
6401bd74:	ret    
6401bd75:	push   ebp
6401bd76:	mov    ebp,esp
6401bd78:	sub    esp,0x10
6401bd7b:	push   DWORD PTR [ebp+0x8]
6401bd7e:	lea    ecx,[ebp-0x10]
6401bd81:	call   0x6401300f
6401bd86:	push   DWORD PTR [ebp+0x24]
6401bd89:	lea    ecx,[ebp-0x10]
6401bd8c:	push   DWORD PTR [ebp+0x20]
6401bd8f:	push   DWORD PTR [ebp+0x1c]
6401bd92:	push   DWORD PTR [ebp+0x18]
6401bd95:	push   DWORD PTR [ebp+0x14]
6401bd98:	push   DWORD PTR [ebp+0x10]
6401bd9b:	push   DWORD PTR [ebp+0xc]
6401bd9e:	call   0x6401bbbd
6401bda3:	add    esp,0x1c
6401bda6:	cmp    BYTE PTR [ebp-0x4],0x0
6401bdaa:	je     0x6401bdb3
6401bdac:	mov    ecx,DWORD PTR [ebp-0x8]
6401bdaf:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401bdb3:	leave  
6401bdb4:	ret    
6401bdb5:	push   esi
6401bdb6:	mov    esi,DWORD PTR [esp+0x8]
6401bdba:	test   esi,esi
6401bdbc:	je     0x6401bf43
6401bdc2:	push   DWORD PTR [esi+0x4]
6401bdc5:	call   0x64013d06
6401bdca:	push   DWORD PTR [esi+0x8]
6401bdcd:	call   0x64013d06
6401bdd2:	push   DWORD PTR [esi+0xc]
6401bdd5:	call   0x64013d06
6401bdda:	push   DWORD PTR [esi+0x10]
6401bddd:	call   0x64013d06
6401bde2:	push   DWORD PTR [esi+0x14]
6401bde5:	call   0x64013d06
6401bdea:	push   DWORD PTR [esi+0x18]
6401bded:	call   0x64013d06
6401bdf2:	push   DWORD PTR [esi]
6401bdf4:	call   0x64013d06
6401bdf9:	push   DWORD PTR [esi+0x20]
6401bdfc:	call   0x64013d06
6401be01:	push   DWORD PTR [esi+0x24]
6401be04:	call   0x64013d06
6401be09:	push   DWORD PTR [esi+0x28]
6401be0c:	call   0x64013d06
6401be11:	push   DWORD PTR [esi+0x2c]
6401be14:	call   0x64013d06
6401be19:	push   DWORD PTR [esi+0x30]
6401be1c:	call   0x64013d06
6401be21:	push   DWORD PTR [esi+0x34]
6401be24:	call   0x64013d06
6401be29:	push   DWORD PTR [esi+0x1c]
6401be2c:	call   0x64013d06
6401be31:	push   DWORD PTR [esi+0x38]
6401be34:	call   0x64013d06
6401be39:	push   DWORD PTR [esi+0x3c]
6401be3c:	call   0x64013d06
6401be41:	add    esp,0x40
6401be44:	push   DWORD PTR [esi+0x40]
6401be47:	call   0x64013d06
6401be4c:	push   DWORD PTR [esi+0x44]
6401be4f:	call   0x64013d06
6401be54:	push   DWORD PTR [esi+0x48]
6401be57:	call   0x64013d06
6401be5c:	push   DWORD PTR [esi+0x4c]
6401be5f:	call   0x64013d06
6401be64:	push   DWORD PTR [esi+0x50]
6401be67:	call   0x64013d06
6401be6c:	push   DWORD PTR [esi+0x54]
6401be6f:	call   0x64013d06
6401be74:	push   DWORD PTR [esi+0x58]
6401be77:	call   0x64013d06
6401be7c:	push   DWORD PTR [esi+0x5c]
6401be7f:	call   0x64013d06
6401be84:	push   DWORD PTR [esi+0x60]
6401be87:	call   0x64013d06
6401be8c:	push   DWORD PTR [esi+0x64]
6401be8f:	call   0x64013d06
6401be94:	push   DWORD PTR [esi+0x68]
6401be97:	call   0x64013d06
6401be9c:	push   DWORD PTR [esi+0x6c]
6401be9f:	call   0x64013d06
6401bea4:	push   DWORD PTR [esi+0x70]
6401bea7:	call   0x64013d06
6401beac:	push   DWORD PTR [esi+0x74]
6401beaf:	call   0x64013d06
6401beb4:	push   DWORD PTR [esi+0x78]
6401beb7:	call   0x64013d06
6401bebc:	push   DWORD PTR [esi+0x7c]
6401bebf:	call   0x64013d06
6401bec4:	add    esp,0x40
6401bec7:	push   DWORD PTR [esi+0x80]
6401becd:	call   0x64013d06
6401bed2:	push   DWORD PTR [esi+0x84]
6401bed8:	call   0x64013d06
6401bedd:	push   DWORD PTR [esi+0x88]
6401bee3:	call   0x64013d06
6401bee8:	push   DWORD PTR [esi+0x8c]
6401beee:	call   0x64013d06
6401bef3:	push   DWORD PTR [esi+0x90]
6401bef9:	call   0x64013d06
6401befe:	push   DWORD PTR [esi+0x94]
6401bf04:	call   0x64013d06
6401bf09:	push   DWORD PTR [esi+0x98]
6401bf0f:	call   0x64013d06
6401bf14:	push   DWORD PTR [esi+0x9c]
6401bf1a:	call   0x64013d06
6401bf1f:	push   DWORD PTR [esi+0xa0]
6401bf25:	call   0x64013d06
6401bf2a:	push   DWORD PTR [esi+0xa4]
6401bf30:	call   0x64013d06
6401bf35:	push   DWORD PTR [esi+0xa8]
6401bf3b:	call   0x64013d06
6401bf40:	add    esp,0x2c
6401bf43:	pop    esi
6401bf44:	ret    
6401bf45:	push   esi
6401bf46:	mov    esi,DWORD PTR [esp+0x8]
6401bf4a:	test   esi,esi
6401bf4c:	je     0x6401bf83
6401bf4e:	mov    eax,DWORD PTR [esi]
6401bf50:	cmp    eax,DWORD PTR ds:0x6402dc40
6401bf56:	je     0x6401bf5f
6401bf58:	push   eax
6401bf59:	call   0x64013d06
6401bf5e:	pop    ecx
6401bf5f:	mov    eax,DWORD PTR [esi+0x4]
6401bf62:	cmp    eax,DWORD PTR ds:0x6402dc44
6401bf68:	je     0x6401bf71
6401bf6a:	push   eax
6401bf6b:	call   0x64013d06
6401bf70:	pop    ecx
6401bf71:	mov    esi,DWORD PTR [esi+0x8]
6401bf74:	cmp    esi,DWORD PTR ds:0x6402dc48
6401bf7a:	je     0x6401bf83
6401bf7c:	push   esi
6401bf7d:	call   0x64013d06
6401bf82:	pop    ecx
6401bf83:	pop    esi
6401bf84:	ret    
6401bf85:	int3   
6401bf86:	push   esi
6401bf87:	mov    esi,DWORD PTR [esp+0x8]
6401bf8b:	test   esi,esi
6401bf8d:	je     0x6401c00d
6401bf8f:	mov    eax,DWORD PTR [esi+0xc]
6401bf92:	cmp    eax,DWORD PTR ds:0x6402dc4c
6401bf98:	je     0x6401bfa1
6401bf9a:	push   eax
6401bf9b:	call   0x64013d06
6401bfa0:	pop    ecx
6401bfa1:	mov    eax,DWORD PTR [esi+0x10]
6401bfa4:	cmp    eax,DWORD PTR ds:0x6402dc50
6401bfaa:	je     0x6401bfb3
6401bfac:	push   eax
6401bfad:	call   0x64013d06
6401bfb2:	pop    ecx
6401bfb3:	mov    eax,DWORD PTR [esi+0x14]
6401bfb6:	cmp    eax,DWORD PTR ds:0x6402dc54
6401bfbc:	je     0x6401bfc5
6401bfbe:	push   eax
6401bfbf:	call   0x64013d06
6401bfc4:	pop    ecx
6401bfc5:	mov    eax,DWORD PTR [esi+0x18]
6401bfc8:	cmp    eax,DWORD PTR ds:0x6402dc58
6401bfce:	je     0x6401bfd7
6401bfd0:	push   eax
6401bfd1:	call   0x64013d06
6401bfd6:	pop    ecx
6401bfd7:	mov    eax,DWORD PTR [esi+0x1c]
6401bfda:	cmp    eax,DWORD PTR ds:0x6402dc5c
6401bfe0:	je     0x6401bfe9
6401bfe2:	push   eax
6401bfe3:	call   0x64013d06
6401bfe8:	pop    ecx
6401bfe9:	mov    eax,DWORD PTR [esi+0x20]
6401bfec:	cmp    eax,DWORD PTR ds:0x6402dc60
6401bff2:	je     0x6401bffb
6401bff4:	push   eax
6401bff5:	call   0x64013d06
6401bffa:	pop    ecx
6401bffb:	mov    esi,DWORD PTR [esi+0x24]
6401bffe:	cmp    esi,DWORD PTR ds:0x6402dc64
6401c004:	je     0x6401c00d
6401c006:	push   esi
6401c007:	call   0x64013d06
6401c00c:	pop    ecx
6401c00d:	pop    esi
6401c00e:	ret    
6401c00f:	mov    eax,DWORD PTR [esp+0x4]
6401c013:	push   ebx
6401c014:	xor    ebx,ebx
6401c016:	cmp    eax,ebx
6401c018:	push   esi
6401c019:	push   edi
6401c01a:	je     0x6401c024
6401c01c:	mov    edi,DWORD PTR [esp+0x14]
6401c020:	cmp    edi,ebx
6401c022:	ja     0x6401c03f
6401c024:	call   0x64014c30
6401c029:	push   0x16
6401c02b:	pop    esi
6401c02c:	mov    DWORD PTR [eax],esi
6401c02e:	push   ebx
6401c02f:	push   ebx
6401c030:	push   ebx
6401c031:	push   ebx
6401c032:	push   ebx
6401c033:	call   0x640129a4
6401c038:	add    esp,0x14
6401c03b:	mov    eax,esi
6401c03d:	jmp    0x6401c07c
6401c03f:	mov    esi,DWORD PTR [esp+0x18]
6401c043:	cmp    esi,ebx
6401c045:	jne    0x6401c04b
6401c047:	mov    BYTE PTR [eax],bl
6401c049:	jmp    0x6401c024
6401c04b:	mov    edx,eax
6401c04d:	cmp    BYTE PTR [edx],bl
6401c04f:	je     0x6401c055
6401c051:	inc    edx
6401c052:	dec    edi
6401c053:	jne    0x6401c04d
6401c055:	cmp    edi,ebx
6401c057:	je     0x6401c047
6401c059:	mov    cl,BYTE PTR [esi]
6401c05b:	mov    BYTE PTR [edx],cl
6401c05d:	inc    edx
6401c05e:	inc    esi
6401c05f:	cmp    cl,bl
6401c061:	je     0x6401c066
6401c063:	dec    edi
6401c064:	jne    0x6401c059
6401c066:	cmp    edi,ebx
6401c068:	jne    0x6401c07a
6401c06a:	mov    BYTE PTR [eax],bl
6401c06c:	call   0x64014c30
6401c071:	push   0x22
6401c073:	pop    ecx
6401c074:	mov    DWORD PTR [eax],ecx
6401c076:	mov    esi,ecx
6401c078:	jmp    0x6401c02e
6401c07a:	xor    eax,eax
6401c07c:	pop    edi
6401c07d:	pop    esi
6401c07e:	pop    ebx
6401c07f:	ret    
6401c080:	push   ebp
6401c081:	mov    ebp,esp
6401c083:	push   esi
6401c084:	xor    eax,eax
6401c086:	push   eax
6401c087:	push   eax
6401c088:	push   eax
6401c089:	push   eax
6401c08a:	push   eax
6401c08b:	push   eax
6401c08c:	push   eax
6401c08d:	push   eax
6401c08e:	mov    edx,DWORD PTR [ebp+0xc]
6401c091:	lea    ecx,[ecx+0x0]
6401c094:	mov    al,BYTE PTR [edx]
6401c096:	or     al,al
6401c098:	je     0x6401c0a3
6401c09a:	add    edx,0x1
6401c09d:	bts    DWORD PTR [esp],eax
6401c0a1:	jmp    0x6401c094
6401c0a3:	mov    esi,DWORD PTR [ebp+0x8]
6401c0a6:	or     ecx,0xffffffff
6401c0a9:	lea    ecx,[ecx+0x0]
6401c0ac:	add    ecx,0x1
6401c0af:	mov    al,BYTE PTR [esi]
6401c0b1:	or     al,al
6401c0b3:	je     0x6401c0be
6401c0b5:	add    esi,0x1
6401c0b8:	bt     DWORD PTR [esp],eax
6401c0bc:	jae    0x6401c0ac
6401c0be:	mov    eax,ecx
6401c0c0:	add    esp,0x20
6401c0c3:	pop    esi
6401c0c4:	leave  
6401c0c5:	ret    
6401c0c6:	push   ebp
6401c0c7:	mov    ebp,esp
6401c0c9:	push   ebx
6401c0ca:	push   esi
6401c0cb:	mov    esi,DWORD PTR [ebp+0x8]
6401c0ce:	xor    ebx,ebx
6401c0d0:	cmp    DWORD PTR [ebp+0x14],ebx
6401c0d3:	push   edi
6401c0d4:	jne    0x6401c0e6
6401c0d6:	cmp    esi,ebx
6401c0d8:	jne    0x6401c0ea
6401c0da:	cmp    DWORD PTR [ebp+0xc],ebx
6401c0dd:	jne    0x6401c0f1
6401c0df:	xor    eax,eax
6401c0e1:	pop    edi
6401c0e2:	pop    esi
6401c0e3:	pop    ebx
6401c0e4:	pop    ebp
6401c0e5:	ret    
6401c0e6:	cmp    esi,ebx
6401c0e8:	je     0x6401c0f1
6401c0ea:	mov    edi,DWORD PTR [ebp+0xc]
6401c0ed:	cmp    edi,ebx
6401c0ef:	ja     0x6401c10c
6401c0f1:	call   0x64014c30
6401c0f6:	push   0x16
6401c0f8:	pop    esi
6401c0f9:	mov    DWORD PTR [eax],esi
6401c0fb:	push   ebx
6401c0fc:	push   ebx
6401c0fd:	push   ebx
6401c0fe:	push   ebx
6401c0ff:	push   ebx
6401c100:	call   0x640129a4
6401c105:	add    esp,0x14
6401c108:	mov    eax,esi
6401c10a:	jmp    0x6401c0e1
6401c10c:	cmp    DWORD PTR [ebp+0x14],ebx
6401c10f:	jne    0x6401c115
6401c111:	mov    BYTE PTR [esi],bl
6401c113:	jmp    0x6401c0df
6401c115:	mov    edx,DWORD PTR [ebp+0x10]
6401c118:	cmp    edx,ebx
6401c11a:	jne    0x6401c120
6401c11c:	mov    BYTE PTR [esi],bl
6401c11e:	jmp    0x6401c0f1
6401c120:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401c124:	mov    eax,esi
6401c126:	jne    0x6401c137
6401c128:	mov    cl,BYTE PTR [edx]
6401c12a:	mov    BYTE PTR [eax],cl
6401c12c:	inc    eax
6401c12d:	inc    edx
6401c12e:	cmp    cl,bl
6401c130:	je     0x6401c150
6401c132:	dec    edi
6401c133:	jne    0x6401c128
6401c135:	jmp    0x6401c150
6401c137:	mov    cl,BYTE PTR [edx]
6401c139:	mov    BYTE PTR [eax],cl
6401c13b:	inc    eax
6401c13c:	inc    edx
6401c13d:	cmp    cl,bl
6401c13f:	je     0x6401c149
6401c141:	dec    edi
6401c142:	je     0x6401c149
6401c144:	dec    DWORD PTR [ebp+0x14]
6401c147:	jne    0x6401c137
6401c149:	cmp    DWORD PTR [ebp+0x14],ebx
6401c14c:	jne    0x6401c150
6401c14e:	mov    BYTE PTR [eax],bl
6401c150:	cmp    edi,ebx
6401c152:	jne    0x6401c0df
6401c154:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401c158:	jne    0x6401c169
6401c15a:	mov    eax,DWORD PTR [ebp+0xc]
6401c15d:	push   0x50
6401c15f:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401c163:	pop    eax
6401c164:	jmp    0x6401c0e1
6401c169:	mov    BYTE PTR [esi],bl
6401c16b:	call   0x64014c30
6401c170:	push   0x22
6401c172:	pop    ecx
6401c173:	mov    DWORD PTR [eax],ecx
6401c175:	mov    esi,ecx
6401c177:	jmp    0x6401c0fb
6401c179:	int3   
6401c17a:	int3   
6401c17b:	int3   
6401c17c:	int3   
6401c17d:	int3   
6401c17e:	int3   
6401c17f:	int3   
6401c180:	push   ebp
6401c181:	mov    ebp,esp
6401c183:	push   esi
6401c184:	xor    eax,eax
6401c186:	push   eax
6401c187:	push   eax
6401c188:	push   eax
6401c189:	push   eax
6401c18a:	push   eax
6401c18b:	push   eax
6401c18c:	push   eax
6401c18d:	push   eax
6401c18e:	mov    edx,DWORD PTR [ebp+0xc]
6401c191:	lea    ecx,[ecx+0x0]
6401c194:	mov    al,BYTE PTR [edx]
6401c196:	or     al,al
6401c198:	je     0x6401c1a3
6401c19a:	add    edx,0x1
6401c19d:	bts    DWORD PTR [esp],eax
6401c1a1:	jmp    0x6401c194
6401c1a3:	mov    esi,DWORD PTR [ebp+0x8]
6401c1a6:	mov    edi,edi
6401c1a8:	mov    al,BYTE PTR [esi]
6401c1aa:	or     al,al
6401c1ac:	je     0x6401c1ba
6401c1ae:	add    esi,0x1
6401c1b1:	bt     DWORD PTR [esp],eax
6401c1b5:	jae    0x6401c1a8
6401c1b7:	lea    eax,[esi-0x1]
6401c1ba:	add    esp,0x20
6401c1bd:	pop    esi
6401c1be:	leave  
6401c1bf:	ret    
6401c1c0:	push   ebp
6401c1c1:	mov    ebp,esp
6401c1c3:	push   ecx
6401c1c4:	push   ecx
6401c1c5:	mov    eax,DWORD PTR [ebp+0xc]
6401c1c8:	push   esi
6401c1c9:	mov    esi,DWORD PTR [ebp+0x8]
6401c1cc:	mov    DWORD PTR [ebp-0x8],eax
6401c1cf:	mov    eax,DWORD PTR [ebp+0x10]
6401c1d2:	push   edi
6401c1d3:	push   esi
6401c1d4:	mov    DWORD PTR [ebp-0x4],eax
6401c1d7:	call   0x6401e14f
6401c1dc:	or     edi,0xffffffff
6401c1df:	cmp    eax,edi
6401c1e1:	pop    ecx
6401c1e2:	jne    0x6401c1f5
6401c1e4:	call   0x64014c30
6401c1e9:	mov    DWORD PTR [eax],0x9
6401c1ef:	mov    eax,edi
6401c1f1:	mov    edx,edi
6401c1f3:	jmp    0x6401c23f
6401c1f5:	push   DWORD PTR [ebp+0x14]
6401c1f8:	lea    ecx,[ebp-0x4]
6401c1fb:	push   ecx
6401c1fc:	push   DWORD PTR [ebp-0x8]
6401c1ff:	push   eax
6401c200:	call   DWORD PTR ds:0x640250e0
6401c206:	cmp    eax,edi
6401c208:	mov    DWORD PTR [ebp-0x8],eax
6401c20b:	jne    0x6401c220
6401c20d:	call   DWORD PTR ds:0x64025044
6401c213:	test   eax,eax
6401c215:	je     0x6401c220
6401c217:	push   eax
6401c218:	call   0x64014c56
6401c21d:	pop    ecx
6401c21e:	jmp    0x6401c1ef
6401c220:	mov    eax,esi
6401c222:	sar    eax,0x5
6401c225:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401c22c:	and    esi,0x1f
6401c22f:	shl    esi,0x6
6401c232:	lea    eax,[eax+esi*1+0x4]
6401c236:	and    BYTE PTR [eax],0xfd
6401c239:	mov    eax,DWORD PTR [ebp-0x8]
6401c23c:	mov    edx,DWORD PTR [ebp-0x4]
6401c23f:	pop    edi
6401c240:	pop    esi
6401c241:	leave  
6401c242:	ret    
6401c243:	push   0x14
6401c245:	push   0x6402a850
6401c24a:	call   0x64014430
6401c24f:	or     esi,0xffffffff
6401c252:	mov    DWORD PTR [ebp-0x24],esi
6401c255:	mov    DWORD PTR [ebp-0x20],esi
6401c258:	mov    eax,DWORD PTR [ebp+0x8]
6401c25b:	cmp    eax,0xfffffffe
6401c25e:	jne    0x6401c27c
6401c260:	call   0x64014c43
6401c265:	and    DWORD PTR [eax],0x0
6401c268:	call   0x64014c30
6401c26d:	mov    DWORD PTR [eax],0x9
6401c273:	mov    eax,esi
6401c275:	mov    edx,esi
6401c277:	jmp    0x6401c34c
6401c27c:	xor    edi,edi
6401c27e:	cmp    eax,edi
6401c280:	jl     0x6401c28a
6401c282:	cmp    eax,DWORD PTR ds:0x640324e0
6401c288:	jb     0x6401c2ab
6401c28a:	call   0x64014c43
6401c28f:	mov    DWORD PTR [eax],edi
6401c291:	call   0x64014c30
6401c296:	mov    DWORD PTR [eax],0x9
6401c29c:	push   edi
6401c29d:	push   edi
6401c29e:	push   edi
6401c29f:	push   edi
6401c2a0:	push   edi
6401c2a1:	call   0x640129a4
6401c2a6:	add    esp,0x14
6401c2a9:	jmp    0x6401c273
6401c2ab:	mov    ecx,eax
6401c2ad:	sar    ecx,0x5
6401c2b0:	lea    ebx,[ecx*4+0x64032500]
6401c2b7:	mov    esi,eax
6401c2b9:	and    esi,0x1f
6401c2bc:	shl    esi,0x6
6401c2bf:	mov    ecx,DWORD PTR [ebx]
6401c2c1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c2c6:	and    ecx,0x1
6401c2c9:	jne    0x6401c2f1
6401c2cb:	call   0x64014c43
6401c2d0:	mov    DWORD PTR [eax],edi
6401c2d2:	call   0x64014c30
6401c2d7:	mov    DWORD PTR [eax],0x9
6401c2dd:	push   edi
6401c2de:	push   edi
6401c2df:	push   edi
6401c2e0:	push   edi
6401c2e1:	push   edi
6401c2e2:	call   0x640129a4
6401c2e7:	add    esp,0x14
6401c2ea:	or     edx,0xffffffff
6401c2ed:	mov    eax,edx
6401c2ef:	jmp    0x6401c34c
6401c2f1:	push   eax
6401c2f2:	call   0x6401e1c0
6401c2f7:	pop    ecx
6401c2f8:	mov    DWORD PTR [ebp-0x4],edi
6401c2fb:	mov    eax,DWORD PTR [ebx]
6401c2fd:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401c302:	je     0x6401c320
6401c304:	push   DWORD PTR [ebp+0x14]
6401c307:	push   DWORD PTR [ebp+0x10]
6401c30a:	push   DWORD PTR [ebp+0xc]
6401c30d:	push   DWORD PTR [ebp+0x8]
6401c310:	call   0x6401c1c0
6401c315:	add    esp,0x10
6401c318:	mov    DWORD PTR [ebp-0x24],eax
6401c31b:	mov    DWORD PTR [ebp-0x20],edx
6401c31e:	jmp    0x6401c33a
6401c320:	call   0x64014c30
6401c325:	mov    DWORD PTR [eax],0x9
6401c32b:	call   0x64014c43
6401c330:	mov    DWORD PTR [eax],edi
6401c332:	or     DWORD PTR [ebp-0x24],0xffffffff
6401c336:	or     DWORD PTR [ebp-0x20],0xffffffff
6401c33a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c341:	call   0x6401c352
6401c346:	mov    eax,DWORD PTR [ebp-0x24]
6401c349:	mov    edx,DWORD PTR [ebp-0x20]
6401c34c:	call   0x64014475
6401c351:	ret    
6401c352:	push   DWORD PTR [ebp+0x8]
6401c355:	call   0x6401e260
6401c35a:	pop    ecx
6401c35b:	ret    
6401c35c:	push   ebp
6401c35d:	lea    ebp,[esp-0x514]
6401c364:	sub    esp,0x590
6401c36a:	mov    eax,ds:0x6402d09c
6401c36f:	xor    eax,ebp
6401c371:	mov    DWORD PTR [ebp+0x510],eax
6401c377:	mov    eax,DWORD PTR [ebp+0x520]
6401c37d:	push   esi
6401c37e:	xor    esi,esi
6401c380:	cmp    DWORD PTR [ebp+0x524],esi
6401c386:	mov    DWORD PTR [ebp-0x64],eax
6401c389:	mov    DWORD PTR [ebp-0x60],esi
6401c38c:	mov    DWORD PTR [ebp-0x68],esi
6401c38f:	jne    0x6401c398
6401c391:	xor    eax,eax
6401c393:	jmp    0x6401c968
6401c398:	cmp    eax,esi
6401c39a:	jne    0x6401c3c3
6401c39c:	call   0x64014c43
6401c3a1:	mov    DWORD PTR [eax],esi
6401c3a3:	call   0x64014c30
6401c3a8:	push   esi
6401c3a9:	push   esi
6401c3aa:	push   esi
6401c3ab:	push   esi
6401c3ac:	push   esi
6401c3ad:	mov    DWORD PTR [eax],0x16
6401c3b3:	call   0x640129a4
6401c3b8:	add    esp,0x14
6401c3bb:	or     eax,0xffffffff
6401c3be:	jmp    0x6401c968
6401c3c3:	push   ebx
6401c3c4:	push   edi
6401c3c5:	mov    edi,DWORD PTR [ebp+0x51c]
6401c3cb:	mov    eax,edi
6401c3cd:	sar    eax,0x5
6401c3d0:	lea    esi,[eax*4+0x64032500]
6401c3d7:	mov    eax,DWORD PTR [esi]
6401c3d9:	and    edi,0x1f
6401c3dc:	shl    edi,0x6
6401c3df:	add    eax,edi
6401c3e1:	mov    bl,BYTE PTR [eax+0x24]
6401c3e4:	add    bl,bl
6401c3e6:	sar    bl,1
6401c3e8:	cmp    bl,0x2
6401c3eb:	mov    DWORD PTR [ebp-0x70],esi
6401c3ee:	mov    BYTE PTR [ebp-0x71],bl
6401c3f1:	je     0x6401c3f8
6401c3f3:	cmp    bl,0x1
6401c3f6:	jne    0x6401c42b
6401c3f8:	mov    ecx,DWORD PTR [ebp+0x524]
6401c3fe:	not    ecx
6401c400:	test   cl,0x1
6401c403:	jne    0x6401c42b
6401c405:	call   0x64014c43
6401c40a:	xor    esi,esi
6401c40c:	mov    DWORD PTR [eax],esi
6401c40e:	call   0x64014c30
6401c413:	push   esi
6401c414:	push   esi
6401c415:	push   esi
6401c416:	push   esi
6401c417:	push   esi
6401c418:	mov    DWORD PTR [eax],0x16
6401c41e:	call   0x640129a4
6401c423:	add    esp,0x14
6401c426:	jmp    0x6401c95b
6401c42b:	test   BYTE PTR [eax+0x4],0x20
6401c42f:	je     0x6401c445
6401c431:	push   0x2
6401c433:	push   0x0
6401c435:	push   0x0
6401c437:	push   DWORD PTR [ebp+0x51c]
6401c43d:	call   0x6401c1c0
6401c442:	add    esp,0x10
6401c445:	push   DWORD PTR [ebp+0x51c]
6401c44b:	call   0x6401ca9e
6401c450:	test   eax,eax
6401c452:	pop    ecx
6401c453:	je     0x6401c692
6401c459:	mov    eax,DWORD PTR [esi]
6401c45b:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401c460:	je     0x6401c692
6401c466:	call   0x64014f7b
6401c46b:	mov    eax,DWORD PTR [eax+0x6c]
6401c46e:	xor    ecx,ecx
6401c470:	cmp    DWORD PTR [eax+0x14],ecx
6401c473:	lea    eax,[ebp-0x7c]
6401c476:	sete   cl
6401c479:	push   eax
6401c47a:	mov    eax,DWORD PTR [esi]
6401c47c:	push   DWORD PTR [edi+eax*1]
6401c47f:	mov    DWORD PTR [ebp-0x78],ecx
6401c482:	call   DWORD PTR ds:0x640250d8
6401c488:	test   eax,eax
6401c48a:	je     0x6401c692
6401c490:	xor    ecx,ecx
6401c492:	cmp    DWORD PTR [ebp-0x78],ecx
6401c495:	je     0x6401c49f
6401c497:	test   bl,bl
6401c499:	je     0x6401c694
6401c49f:	call   DWORD PTR ds:0x640250dc
6401c4a5:	mov    ebx,DWORD PTR [ebp-0x64]
6401c4a8:	mov    DWORD PTR [ebp-0x7c],eax
6401c4ab:	xor    eax,eax
6401c4ad:	cmp    DWORD PTR [ebp+0x524],eax
6401c4b3:	mov    DWORD PTR [ebp-0x5c],eax
6401c4b6:	jbe    0x6401c903
6401c4bc:	mov    DWORD PTR [ebp-0x54],eax
6401c4bf:	mov    al,BYTE PTR [ebp-0x71]
6401c4c2:	test   al,al
6401c4c4:	jne    0x6401c607
6401c4ca:	mov    cl,BYTE PTR [ebx]
6401c4cc:	mov    esi,DWORD PTR [ebp-0x70]
6401c4cf:	xor    eax,eax
6401c4d1:	cmp    cl,0xa
6401c4d4:	sete   al
6401c4d7:	mov    DWORD PTR [ebp-0x78],eax
6401c4da:	mov    eax,DWORD PTR [esi]
6401c4dc:	add    eax,edi
6401c4de:	cmp    DWORD PTR [eax+0x38],0x0
6401c4e2:	je     0x6401c502
6401c4e4:	mov    dl,BYTE PTR [eax+0x34]
6401c4e7:	mov    BYTE PTR [ebp+0x508],dl
6401c4ed:	mov    BYTE PTR [ebp+0x509],cl
6401c4f3:	and    DWORD PTR [eax+0x38],0x0
6401c4f7:	push   0x2
6401c4f9:	lea    eax,[ebp+0x508]
6401c4ff:	push   eax
6401c500:	jmp    0x6401c547
6401c502:	movsx  eax,cl
6401c505:	push   eax
6401c506:	call   0x6401a2b6
6401c50b:	test   eax,eax
6401c50d:	pop    ecx
6401c50e:	je     0x6401c544
6401c510:	mov    ecx,DWORD PTR [ebp-0x64]
6401c513:	sub    ecx,ebx
6401c515:	add    ecx,DWORD PTR [ebp+0x524]
6401c51b:	xor    eax,eax
6401c51d:	inc    eax
6401c51e:	cmp    ecx,eax
6401c520:	jbe    0x6401c67c
6401c526:	push   0x2
6401c528:	lea    eax,[ebp-0x58]
6401c52b:	push   ebx
6401c52c:	push   eax
6401c52d:	call   0x6401cfd1
6401c532:	add    esp,0xc
6401c535:	cmp    eax,0xffffffff
6401c538:	je     0x6401c8fd
6401c53e:	inc    ebx
6401c53f:	inc    DWORD PTR [ebp-0x54]
6401c542:	jmp    0x6401c55c
6401c544:	push   0x1
6401c546:	push   ebx
6401c547:	lea    eax,[ebp-0x58]
6401c54a:	push   eax
6401c54b:	call   0x6401cfd1
6401c550:	add    esp,0xc
6401c553:	cmp    eax,0xffffffff
6401c556:	je     0x6401c8fd
6401c55c:	xor    eax,eax
6401c55e:	push   eax
6401c55f:	push   eax
6401c560:	push   0x5
6401c562:	lea    ecx,[ebp+0x508]
6401c568:	push   ecx
6401c569:	push   0x1
6401c56b:	lea    ecx,[ebp-0x58]
6401c56e:	push   ecx
6401c56f:	push   eax
6401c570:	push   DWORD PTR [ebp-0x7c]
6401c573:	inc    ebx
6401c574:	inc    DWORD PTR [ebp-0x54]
6401c577:	call   DWORD PTR ds:0x64025028
6401c57d:	mov    esi,eax
6401c57f:	test   esi,esi
6401c581:	je     0x6401c8fd
6401c587:	push   0x0
6401c589:	lea    eax,[ebp-0x5c]
6401c58c:	push   eax
6401c58d:	push   esi
6401c58e:	lea    eax,[ebp+0x508]
6401c594:	push   eax
6401c595:	mov    eax,DWORD PTR [ebp-0x70]
6401c598:	mov    eax,DWORD PTR [eax]
6401c59a:	push   DWORD PTR [edi+eax*1]
6401c59d:	call   DWORD PTR ds:0x64025088
6401c5a3:	test   eax,eax
6401c5a5:	je     0x6401c8f4
6401c5ab:	mov    eax,DWORD PTR [ebp-0x54]
6401c5ae:	mov    ecx,DWORD PTR [ebp-0x68]
6401c5b1:	add    eax,ecx
6401c5b3:	cmp    DWORD PTR [ebp-0x5c],esi
6401c5b6:	mov    DWORD PTR [ebp-0x60],eax
6401c5b9:	jl     0x6401c8fd
6401c5bf:	cmp    DWORD PTR [ebp-0x78],0x0
6401c5c3:	je     0x6401c668
6401c5c9:	push   0x0
6401c5cb:	lea    eax,[ebp-0x5c]
6401c5ce:	push   eax
6401c5cf:	push   0x1
6401c5d1:	lea    eax,[ebp+0x508]
6401c5d7:	push   eax
6401c5d8:	mov    eax,DWORD PTR [ebp-0x70]
6401c5db:	mov    eax,DWORD PTR [eax]
6401c5dd:	mov    BYTE PTR [ebp+0x508],0xd
6401c5e4:	push   DWORD PTR [edi+eax*1]
6401c5e7:	call   DWORD PTR ds:0x64025088
6401c5ed:	test   eax,eax
6401c5ef:	je     0x6401c8f4
6401c5f5:	cmp    DWORD PTR [ebp-0x5c],0x1
6401c5f9:	jl     0x6401c8fd
6401c5ff:	inc    DWORD PTR [ebp-0x68]
6401c602:	inc    DWORD PTR [ebp-0x60]
6401c605:	jmp    0x6401c668
6401c607:	cmp    al,0x1
6401c609:	je     0x6401c60f
6401c60b:	cmp    al,0x2
6401c60d:	jne    0x6401c627
6401c60f:	movzx  esi,WORD PTR [ebx]
6401c612:	xor    ecx,ecx
6401c614:	cmp    si,0xa
6401c618:	sete   cl
6401c61b:	inc    ebx
6401c61c:	inc    ebx
6401c61d:	add    DWORD PTR [ebp-0x54],0x2
6401c621:	mov    DWORD PTR [ebp-0x58],esi
6401c624:	mov    DWORD PTR [ebp-0x78],ecx
6401c627:	cmp    al,0x1
6401c629:	je     0x6401c62f
6401c62b:	cmp    al,0x2
6401c62d:	jne    0x6401c668
6401c62f:	push   DWORD PTR [ebp-0x58]
6401c632:	call   0x6401e282
6401c637:	cmp    ax,WORD PTR [ebp-0x58]
6401c63b:	pop    ecx
6401c63c:	jne    0x6401c8f4
6401c642:	inc    DWORD PTR [ebp-0x60]
6401c645:	cmp    DWORD PTR [ebp-0x78],0x0
6401c649:	je     0x6401c668
6401c64b:	push   0xd
6401c64d:	pop    eax
6401c64e:	push   eax
6401c64f:	mov    DWORD PTR [ebp-0x58],eax
6401c652:	call   0x6401e282
6401c657:	cmp    ax,WORD PTR [ebp-0x58]
6401c65b:	pop    ecx
6401c65c:	jne    0x6401c8f4
6401c662:	inc    DWORD PTR [ebp-0x60]
6401c665:	inc    DWORD PTR [ebp-0x68]
6401c668:	mov    eax,DWORD PTR [ebp+0x524]
6401c66e:	cmp    DWORD PTR [ebp-0x54],eax
6401c671:	jb     0x6401c4bf
6401c677:	jmp    0x6401c8fd
6401c67c:	mov    ecx,DWORD PTR [esi]
6401c67e:	mov    dl,BYTE PTR [ebx]
6401c680:	inc    DWORD PTR [ebp-0x60]
6401c683:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401c687:	mov    ecx,DWORD PTR [esi]
6401c689:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401c68d:	jmp    0x6401c8fd
6401c692:	xor    ecx,ecx
6401c694:	mov    eax,DWORD PTR [esi]
6401c696:	add    eax,edi
6401c698:	test   BYTE PTR [eax+0x4],0x80
6401c69c:	je     0x6401c8cd
6401c6a2:	test   bl,bl
6401c6a4:	mov    eax,DWORD PTR [ebp-0x64]
6401c6a7:	mov    DWORD PTR [ebp-0x58],ecx
6401c6aa:	jne    0x6401c746
6401c6b0:	cmp    DWORD PTR [ebp+0x524],ecx
6401c6b6:	mov    DWORD PTR [ebp-0x5c],eax
6401c6b9:	jbe    0x6401c933
6401c6bf:	jmp    0x6401c6c4
6401c6c1:	mov    esi,DWORD PTR [ebp-0x70]
6401c6c4:	mov    ecx,DWORD PTR [ebp-0x5c]
6401c6c7:	and    DWORD PTR [ebp-0x54],0x0
6401c6cb:	sub    ecx,DWORD PTR [ebp-0x64]
6401c6ce:	lea    eax,[ebp-0x50]
6401c6d1:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c6d7:	jae    0x6401c700
6401c6d9:	mov    edx,DWORD PTR [ebp-0x5c]
6401c6dc:	inc    DWORD PTR [ebp-0x5c]
6401c6df:	mov    dl,BYTE PTR [edx]
6401c6e1:	inc    ecx
6401c6e2:	cmp    dl,0xa
6401c6e5:	jne    0x6401c6f1
6401c6e7:	inc    DWORD PTR [ebp-0x68]
6401c6ea:	mov    BYTE PTR [eax],0xd
6401c6ed:	inc    eax
6401c6ee:	inc    DWORD PTR [ebp-0x54]
6401c6f1:	mov    BYTE PTR [eax],dl
6401c6f3:	inc    eax
6401c6f4:	inc    DWORD PTR [ebp-0x54]
6401c6f7:	cmp    DWORD PTR [ebp-0x54],0x400
6401c6fe:	jb     0x6401c6d1
6401c700:	mov    ebx,eax
6401c702:	lea    eax,[ebp-0x50]
6401c705:	sub    ebx,eax
6401c707:	push   0x0
6401c709:	lea    eax,[ebp-0x6c]
6401c70c:	push   eax
6401c70d:	push   ebx
6401c70e:	lea    eax,[ebp-0x50]
6401c711:	push   eax
6401c712:	mov    eax,DWORD PTR [esi]
6401c714:	push   DWORD PTR [edi+eax*1]
6401c717:	call   DWORD PTR ds:0x64025088
6401c71d:	test   eax,eax
6401c71f:	je     0x6401c8f4
6401c725:	mov    eax,DWORD PTR [ebp-0x6c]
6401c728:	add    DWORD PTR [ebp-0x60],eax
6401c72b:	cmp    eax,ebx
6401c72d:	jl     0x6401c8fd
6401c733:	mov    eax,DWORD PTR [ebp-0x5c]
6401c736:	sub    eax,DWORD PTR [ebp-0x64]
6401c739:	cmp    eax,DWORD PTR [ebp+0x524]
6401c73f:	jb     0x6401c6c1
6401c741:	jmp    0x6401c8fd
6401c746:	cmp    bl,0x2
6401c749:	mov    DWORD PTR [ebp-0x54],eax
6401c74c:	jne    0x6401c7f5
6401c752:	cmp    DWORD PTR [ebp+0x524],ecx
6401c758:	jbe    0x6401c933
6401c75e:	jmp    0x6401c763
6401c760:	mov    esi,DWORD PTR [ebp-0x70]
6401c763:	mov    ecx,DWORD PTR [ebp-0x54]
6401c766:	and    DWORD PTR [ebp-0x5c],0x0
6401c76a:	sub    ecx,DWORD PTR [ebp-0x64]
6401c76d:	lea    eax,[ebp-0x50]
6401c770:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c776:	jae    0x6401c7ab
6401c778:	mov    edx,DWORD PTR [ebp-0x54]
6401c77b:	add    DWORD PTR [ebp-0x54],0x2
6401c77f:	movzx  edx,WORD PTR [edx]
6401c782:	inc    ecx
6401c783:	inc    ecx
6401c784:	cmp    dx,0xa
6401c788:	jne    0x6401c799
6401c78a:	add    DWORD PTR [ebp-0x68],0x2
6401c78e:	mov    WORD PTR [eax],0xd
6401c793:	inc    eax
6401c794:	inc    eax
6401c795:	add    DWORD PTR [ebp-0x5c],0x2
6401c799:	add    DWORD PTR [ebp-0x5c],0x2
6401c79d:	mov    WORD PTR [eax],dx
6401c7a0:	inc    eax
6401c7a1:	inc    eax
6401c7a2:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401c7a9:	jb     0x6401c770
6401c7ab:	mov    ebx,eax
6401c7ad:	lea    eax,[ebp-0x50]
6401c7b0:	sub    ebx,eax
6401c7b2:	push   0x0
6401c7b4:	lea    eax,[ebp-0x6c]
6401c7b7:	push   eax
6401c7b8:	push   ebx
6401c7b9:	lea    eax,[ebp-0x50]
6401c7bc:	push   eax
6401c7bd:	mov    eax,DWORD PTR [esi]
6401c7bf:	push   DWORD PTR [edi+eax*1]
6401c7c2:	call   DWORD PTR ds:0x64025088
6401c7c8:	test   eax,eax
6401c7ca:	je     0x6401c8f4
6401c7d0:	mov    eax,DWORD PTR [ebp-0x6c]
6401c7d3:	add    DWORD PTR [ebp-0x60],eax
6401c7d6:	cmp    eax,ebx
6401c7d8:	jl     0x6401c8fd
6401c7de:	mov    eax,DWORD PTR [ebp-0x54]
6401c7e1:	sub    eax,DWORD PTR [ebp-0x64]
6401c7e4:	cmp    eax,DWORD PTR [ebp+0x524]
6401c7ea:	jb     0x6401c760
6401c7f0:	jmp    0x6401c8fd
6401c7f5:	cmp    DWORD PTR [ebp+0x524],ecx
6401c7fb:	jbe    0x6401c933
6401c801:	mov    ecx,DWORD PTR [ebp-0x54]
6401c804:	and    DWORD PTR [ebp-0x5c],0x0
6401c808:	sub    ecx,DWORD PTR [ebp-0x64]
6401c80b:	push   0x2
6401c80d:	lea    eax,[ebp+0x3b4]
6401c813:	pop    esi
6401c814:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c81a:	jae    0x6401c848
6401c81c:	mov    edx,DWORD PTR [ebp-0x54]
6401c81f:	movzx  edx,WORD PTR [edx]
6401c822:	add    DWORD PTR [ebp-0x54],esi
6401c825:	add    ecx,esi
6401c827:	cmp    dx,0xa
6401c82b:	jne    0x6401c837
6401c82d:	mov    WORD PTR [eax],0xd
6401c832:	add    eax,esi
6401c834:	add    DWORD PTR [ebp-0x5c],esi
6401c837:	add    DWORD PTR [ebp-0x5c],esi
6401c83a:	mov    WORD PTR [eax],dx
6401c83d:	add    eax,esi
6401c83f:	cmp    DWORD PTR [ebp-0x5c],0x152
6401c846:	jb     0x6401c814
6401c848:	xor    esi,esi
6401c84a:	push   esi
6401c84b:	push   esi
6401c84c:	push   0x2ab
6401c851:	lea    ecx,[ebp+0x104]
6401c857:	push   ecx
6401c858:	lea    ecx,[ebp+0x3b4]
6401c85e:	sub    eax,ecx
6401c860:	cdq    
6401c861:	sub    eax,edx
6401c863:	sar    eax,1
6401c865:	push   eax
6401c866:	mov    eax,ecx
6401c868:	push   eax
6401c869:	push   esi
6401c86a:	push   0xfde9
6401c86f:	call   DWORD PTR ds:0x64025028
6401c875:	mov    ebx,eax
6401c877:	cmp    ebx,esi
6401c879:	je     0x6401c8f4
6401c87b:	push   0x0
6401c87d:	lea    eax,[ebp-0x6c]
6401c880:	push   eax
6401c881:	mov    eax,ebx
6401c883:	sub    eax,esi
6401c885:	push   eax
6401c886:	lea    eax,[ebp+esi*1+0x104]
6401c88d:	push   eax
6401c88e:	mov    eax,DWORD PTR [ebp-0x70]
6401c891:	mov    eax,DWORD PTR [eax]
6401c893:	push   DWORD PTR [edi+eax*1]
6401c896:	call   DWORD PTR ds:0x64025088
6401c89c:	test   eax,eax
6401c89e:	je     0x6401c8a9
6401c8a0:	add    esi,DWORD PTR [ebp-0x6c]
6401c8a3:	cmp    ebx,esi
6401c8a5:	jg     0x6401c87b
6401c8a7:	jmp    0x6401c8b2
6401c8a9:	call   DWORD PTR ds:0x64025044
6401c8af:	mov    DWORD PTR [ebp-0x58],eax
6401c8b2:	cmp    ebx,esi
6401c8b4:	jg     0x6401c8fd
6401c8b6:	mov    eax,DWORD PTR [ebp-0x54]
6401c8b9:	sub    eax,DWORD PTR [ebp-0x64]
6401c8bc:	cmp    eax,DWORD PTR [ebp+0x524]
6401c8c2:	mov    DWORD PTR [ebp-0x60],eax
6401c8c5:	jb     0x6401c801
6401c8cb:	jmp    0x6401c8fd
6401c8cd:	push   0x0
6401c8cf:	lea    ecx,[ebp-0x6c]
6401c8d2:	push   ecx
6401c8d3:	push   DWORD PTR [ebp+0x524]
6401c8d9:	push   DWORD PTR [ebp-0x64]
6401c8dc:	push   DWORD PTR [eax]
6401c8de:	call   DWORD PTR ds:0x64025088
6401c8e4:	test   eax,eax
6401c8e6:	je     0x6401c8f4
6401c8e8:	mov    eax,DWORD PTR [ebp-0x6c]
6401c8eb:	and    DWORD PTR [ebp-0x58],0x0
6401c8ef:	mov    DWORD PTR [ebp-0x60],eax
6401c8f2:	jmp    0x6401c8fd
6401c8f4:	call   DWORD PTR ds:0x64025044
6401c8fa:	mov    DWORD PTR [ebp-0x58],eax
6401c8fd:	cmp    DWORD PTR [ebp-0x60],0x0
6401c901:	jne    0x6401c960
6401c903:	cmp    DWORD PTR [ebp-0x58],0x0
6401c907:	je     0x6401c930
6401c909:	push   0x5
6401c90b:	pop    esi
6401c90c:	cmp    DWORD PTR [ebp-0x58],esi
6401c90f:	jne    0x6401c925
6401c911:	call   0x64014c30
6401c916:	mov    DWORD PTR [eax],0x9
6401c91c:	call   0x64014c43
6401c921:	mov    DWORD PTR [eax],esi
6401c923:	jmp    0x6401c95b
6401c925:	push   DWORD PTR [ebp-0x58]
6401c928:	call   0x64014c56
6401c92d:	pop    ecx
6401c92e:	jmp    0x6401c95b
6401c930:	mov    esi,DWORD PTR [ebp-0x70]
6401c933:	mov    eax,DWORD PTR [esi]
6401c935:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401c93a:	je     0x6401c948
6401c93c:	mov    eax,DWORD PTR [ebp-0x64]
6401c93f:	cmp    BYTE PTR [eax],0x1a
6401c942:	jne    0x6401c948
6401c944:	xor    eax,eax
6401c946:	jmp    0x6401c966
6401c948:	call   0x64014c30
6401c94d:	mov    DWORD PTR [eax],0x1c
6401c953:	call   0x64014c43
6401c958:	and    DWORD PTR [eax],0x0
6401c95b:	or     eax,0xffffffff
6401c95e:	jmp    0x6401c966
6401c960:	mov    eax,DWORD PTR [ebp-0x60]
6401c963:	sub    eax,DWORD PTR [ebp-0x68]
6401c966:	pop    edi
6401c967:	pop    ebx
6401c968:	mov    ecx,DWORD PTR [ebp+0x510]
6401c96e:	xor    ecx,ebp
6401c970:	pop    esi
6401c971:	call   0x64012e6c
6401c976:	add    ebp,0x514
6401c97c:	leave  
6401c97d:	ret    
6401c97e:	push   0x10
6401c980:	push   0x6402a870
6401c985:	call   0x64014430
6401c98a:	mov    eax,DWORD PTR [ebp+0x8]
6401c98d:	cmp    eax,0xfffffffe
6401c990:	jne    0x6401c9ad
6401c992:	call   0x64014c43
6401c997:	and    DWORD PTR [eax],0x0
6401c99a:	call   0x64014c30
6401c99f:	mov    DWORD PTR [eax],0x9
6401c9a5:	or     eax,0xffffffff
6401c9a8:	jmp    0x6401ca4a
6401c9ad:	xor    edi,edi
6401c9af:	cmp    eax,edi
6401c9b1:	jl     0x6401c9bb
6401c9b3:	cmp    eax,DWORD PTR ds:0x640324e0
6401c9b9:	jb     0x6401c9dc
6401c9bb:	call   0x64014c43
6401c9c0:	mov    DWORD PTR [eax],edi
6401c9c2:	call   0x64014c30
6401c9c7:	mov    DWORD PTR [eax],0x9
6401c9cd:	push   edi
6401c9ce:	push   edi
6401c9cf:	push   edi
6401c9d0:	push   edi
6401c9d1:	push   edi
6401c9d2:	call   0x640129a4
6401c9d7:	add    esp,0x14
6401c9da:	jmp    0x6401c9a5
6401c9dc:	mov    ecx,eax
6401c9de:	sar    ecx,0x5
6401c9e1:	lea    ebx,[ecx*4+0x64032500]
6401c9e8:	mov    esi,eax
6401c9ea:	and    esi,0x1f
6401c9ed:	shl    esi,0x6
6401c9f0:	mov    ecx,DWORD PTR [ebx]
6401c9f2:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c9f7:	and    ecx,0x1
6401c9fa:	je     0x6401c9bb
6401c9fc:	push   eax
6401c9fd:	call   0x6401e1c0
6401ca02:	pop    ecx
6401ca03:	mov    DWORD PTR [ebp-0x4],edi
6401ca06:	mov    eax,DWORD PTR [ebx]
6401ca08:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401ca0d:	je     0x6401ca25
6401ca0f:	push   DWORD PTR [ebp+0x10]
6401ca12:	push   DWORD PTR [ebp+0xc]
6401ca15:	push   DWORD PTR [ebp+0x8]
6401ca18:	call   0x6401c35c
6401ca1d:	add    esp,0xc
6401ca20:	mov    DWORD PTR [ebp-0x1c],eax
6401ca23:	jmp    0x6401ca3b
6401ca25:	call   0x64014c30
6401ca2a:	mov    DWORD PTR [eax],0x9
6401ca30:	call   0x64014c43
6401ca35:	mov    DWORD PTR [eax],edi
6401ca37:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ca3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ca42:	call   0x6401ca50
6401ca47:	mov    eax,DWORD PTR [ebp-0x1c]
6401ca4a:	call   0x64014475
6401ca4f:	ret    
6401ca50:	push   DWORD PTR [ebp+0x8]
6401ca53:	call   0x6401e260
6401ca58:	pop    ecx
6401ca59:	ret    
6401ca5a:	inc    DWORD PTR ds:0x6402ef54
6401ca60:	push   0x1000
6401ca65:	call   0x64016140
6401ca6a:	test   eax,eax
6401ca6c:	pop    ecx
6401ca6d:	mov    ecx,DWORD PTR [esp+0x4]
6401ca71:	mov    DWORD PTR [ecx+0x8],eax
6401ca74:	je     0x6401ca83
6401ca76:	or     DWORD PTR [ecx+0xc],0x8
6401ca7a:	mov    DWORD PTR [ecx+0x18],0x1000
6401ca81:	jmp    0x6401ca94
6401ca83:	or     DWORD PTR [ecx+0xc],0x4
6401ca87:	lea    eax,[ecx+0x14]
6401ca8a:	mov    DWORD PTR [ecx+0x8],eax
6401ca8d:	mov    DWORD PTR [ecx+0x18],0x2
6401ca94:	mov    eax,DWORD PTR [ecx+0x8]
6401ca97:	and    DWORD PTR [ecx+0x4],0x0
6401ca9b:	mov    DWORD PTR [ecx],eax
6401ca9d:	ret    
6401ca9e:	mov    eax,DWORD PTR [esp+0x4]
6401caa2:	cmp    eax,0xfffffffe
6401caa5:	jne    0x6401cab5
6401caa7:	call   0x64014c30
6401caac:	mov    DWORD PTR [eax],0x9
6401cab2:	xor    eax,eax
6401cab4:	ret    
6401cab5:	push   esi
6401cab6:	xor    esi,esi
6401cab8:	cmp    eax,esi
6401caba:	jl     0x6401cac4
6401cabc:	cmp    eax,DWORD PTR ds:0x640324e0
6401cac2:	jb     0x6401cae0
6401cac4:	call   0x64014c30
6401cac9:	push   esi
6401caca:	push   esi
6401cacb:	push   esi
6401cacc:	push   esi
6401cacd:	push   esi
6401cace:	mov    DWORD PTR [eax],0x9
6401cad4:	call   0x640129a4
6401cad9:	add    esp,0x14
6401cadc:	xor    eax,eax
6401cade:	pop    esi
6401cadf:	ret    
6401cae0:	mov    ecx,eax
6401cae2:	and    eax,0x1f
6401cae5:	sar    ecx,0x5
6401cae8:	mov    ecx,DWORD PTR [ecx*4+0x64032500]
6401caef:	shl    eax,0x6
6401caf2:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401caf7:	and    eax,0x40
6401cafa:	pop    esi
6401cafb:	ret    
6401cafc:	mov    eax,0x6402dc80
6401cb01:	ret    
6401cb02:	mov    eax,ds:0x640324c0
6401cb07:	test   eax,eax
6401cb09:	push   esi
6401cb0a:	push   0x14
6401cb0c:	pop    esi
6401cb0d:	jne    0x6401cb16
6401cb0f:	mov    eax,0x200
6401cb14:	jmp    0x6401cb1c
6401cb16:	cmp    eax,esi
6401cb18:	jge    0x6401cb21
6401cb1a:	mov    eax,esi
6401cb1c:	mov    ds:0x640324c0,eax
6401cb21:	push   0x4
6401cb23:	push   eax
6401cb24:	call   0x64016180
6401cb29:	test   eax,eax
6401cb2b:	pop    ecx
6401cb2c:	pop    ecx
6401cb2d:	mov    ds:0x640314b4,eax
6401cb32:	jne    0x6401cb52
6401cb34:	push   0x4
6401cb36:	push   esi
6401cb37:	mov    DWORD PTR ds:0x640324c0,esi
6401cb3d:	call   0x64016180
6401cb42:	test   eax,eax
6401cb44:	pop    ecx
6401cb45:	pop    ecx
6401cb46:	mov    ds:0x640314b4,eax
6401cb4b:	jne    0x6401cb52
6401cb4d:	push   0x1a
6401cb4f:	pop    eax
6401cb50:	pop    esi
6401cb51:	ret    
6401cb52:	xor    edx,edx
6401cb54:	mov    ecx,0x6402dc80
6401cb59:	jmp    0x6401cb60
6401cb5b:	mov    eax,ds:0x640314b4
6401cb60:	mov    DWORD PTR [edx+eax*1],ecx
6401cb63:	add    ecx,0x20
6401cb66:	add    edx,0x4
6401cb69:	cmp    ecx,0x6402df00
6401cb6f:	jl     0x6401cb5b
6401cb71:	push   0xfffffffe
6401cb73:	pop    esi
6401cb74:	xor    edx,edx
6401cb76:	mov    ecx,0x6402dc90
6401cb7b:	push   edi
6401cb7c:	mov    eax,edx
6401cb7e:	sar    eax,0x5
6401cb81:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401cb88:	mov    edi,edx
6401cb8a:	and    edi,0x1f
6401cb8d:	shl    edi,0x6
6401cb90:	mov    eax,DWORD PTR [edi+eax*1]
6401cb93:	cmp    eax,0xffffffff
6401cb96:	je     0x6401cba0
6401cb98:	cmp    eax,esi
6401cb9a:	je     0x6401cba0
6401cb9c:	test   eax,eax
6401cb9e:	jne    0x6401cba2
6401cba0:	mov    DWORD PTR [ecx],esi
6401cba2:	add    ecx,0x20
6401cba5:	inc    edx
6401cba6:	cmp    ecx,0x6402dcf0
6401cbac:	jl     0x6401cb7c
6401cbae:	pop    edi
6401cbaf:	xor    eax,eax
6401cbb1:	pop    esi
6401cbb2:	ret    
6401cbb3:	call   0x6401e561
6401cbb8:	cmp    BYTE PTR ds:0x6402e90c,0x0
6401cbbf:	je     0x6401cbc6
6401cbc1:	call   0x6401e344
6401cbc6:	push   DWORD PTR ds:0x640314b4
6401cbcc:	call   0x64013d06
6401cbd1:	pop    ecx
6401cbd2:	ret    
6401cbd3:	push   esi
6401cbd4:	mov    esi,DWORD PTR [esp+0x8]
6401cbd8:	mov    eax,0x6402dc80
6401cbdd:	cmp    esi,eax
6401cbdf:	jb     0x6401cc03
6401cbe1:	cmp    esi,0x6402dee0
6401cbe7:	ja     0x6401cc03
6401cbe9:	mov    ecx,esi
6401cbeb:	sub    ecx,eax
6401cbed:	sar    ecx,0x5
6401cbf0:	add    ecx,0x10
6401cbf3:	push   ecx
6401cbf4:	call   0x6401a43a
6401cbf9:	or     DWORD PTR [esi+0xc],0x8000
6401cc00:	pop    ecx
6401cc01:	pop    esi
6401cc02:	ret    
6401cc03:	add    esi,0x20
6401cc06:	push   esi
6401cc07:	call   DWORD PTR ds:0x64025098
6401cc0d:	pop    esi
6401cc0e:	ret    
6401cc0f:	mov    eax,DWORD PTR [esp+0x4]
6401cc13:	cmp    eax,0x14
6401cc16:	jge    0x6401cc2e
6401cc18:	add    eax,0x10
6401cc1b:	push   eax
6401cc1c:	call   0x6401a43a
6401cc21:	mov    eax,DWORD PTR [esp+0xc]
6401cc25:	or     DWORD PTR [eax+0xc],0x8000
6401cc2c:	pop    ecx
6401cc2d:	ret    
6401cc2e:	mov    eax,DWORD PTR [esp+0x8]
6401cc32:	add    eax,0x20
6401cc35:	push   eax
6401cc36:	call   DWORD PTR ds:0x64025098
6401cc3c:	ret    
6401cc3d:	mov    eax,DWORD PTR [esp+0x4]
6401cc41:	mov    ecx,0x6402dc80
6401cc46:	cmp    eax,ecx
6401cc48:	jb     0x6401cc68
6401cc4a:	cmp    eax,0x6402dee0
6401cc4f:	ja     0x6401cc68
6401cc51:	and    DWORD PTR [eax+0xc],0xffff7fff
6401cc58:	sub    eax,ecx
6401cc5a:	sar    eax,0x5
6401cc5d:	add    eax,0x10
6401cc60:	push   eax
6401cc61:	call   0x6401a362
6401cc66:	pop    ecx
6401cc67:	ret    
6401cc68:	add    eax,0x20
6401cc6b:	push   eax
6401cc6c:	call   DWORD PTR ds:0x6402509c
6401cc72:	ret    
6401cc73:	mov    ecx,DWORD PTR [esp+0x4]
6401cc77:	cmp    ecx,0x14
6401cc7a:	mov    eax,DWORD PTR [esp+0x8]
6401cc7e:	jge    0x6401cc92
6401cc80:	and    DWORD PTR [eax+0xc],0xffff7fff
6401cc87:	add    ecx,0x10
6401cc8a:	push   ecx
6401cc8b:	call   0x6401a362
6401cc90:	pop    ecx
6401cc91:	ret    
6401cc92:	add    eax,0x20
6401cc95:	push   eax
6401cc96:	call   DWORD PTR ds:0x6402509c
6401cc9c:	ret    
6401cc9d:	mov    eax,DWORD PTR [esp+0x4]
6401cca1:	push   esi
6401cca2:	xor    esi,esi
6401cca4:	cmp    eax,esi
6401cca6:	jne    0x6401ccc5
6401cca8:	call   0x64014c30
6401ccad:	push   esi
6401ccae:	push   esi
6401ccaf:	push   esi
6401ccb0:	push   esi
6401ccb1:	push   esi
6401ccb2:	mov    DWORD PTR [eax],0x16
6401ccb8:	call   0x640129a4
6401ccbd:	add    esp,0x14
6401ccc0:	or     eax,0xffffffff
6401ccc3:	pop    esi
6401ccc4:	ret    
6401ccc5:	mov    eax,DWORD PTR [eax+0x10]
6401ccc8:	pop    esi
6401ccc9:	ret    
6401ccca:	push   ebp
6401cccb:	mov    ebp,esp
6401cccd:	sub    esp,0x10
6401ccd0:	mov    eax,ds:0x6402d09c
6401ccd5:	xor    eax,ebp
6401ccd7:	mov    DWORD PTR [ebp-0x4],eax
6401ccda:	push   ebx
6401ccdb:	push   esi
6401ccdc:	mov    esi,DWORD PTR [ebp+0xc]
6401ccdf:	test   BYTE PTR [esi+0xc],0x40
6401cce3:	push   edi
6401cce4:	jne    0x6401ce79
6401ccea:	push   esi
6401cceb:	call   0x6401cc9d
6401ccf0:	cmp    eax,0xffffffff
6401ccf3:	pop    ecx
6401ccf4:	mov    edi,0x6402d880
6401ccf9:	je     0x6401cd29
6401ccfb:	push   esi
6401ccfc:	call   0x6401cc9d
6401cd01:	cmp    eax,0xfffffffe
6401cd04:	pop    ecx
6401cd05:	je     0x6401cd29
6401cd07:	push   esi
6401cd08:	call   0x6401cc9d
6401cd0d:	sar    eax,0x5
6401cd10:	push   esi
6401cd11:	lea    ebx,[eax*4+0x64032500]
6401cd18:	call   0x6401cc9d
6401cd1d:	and    eax,0x1f
6401cd20:	pop    ecx
6401cd21:	shl    eax,0x6
6401cd24:	add    eax,DWORD PTR [ebx]
6401cd26:	pop    ecx
6401cd27:	jmp    0x6401cd2b
6401cd29:	mov    eax,edi
6401cd2b:	mov    al,BYTE PTR [eax+0x24]
6401cd2e:	and    al,0x7f
6401cd30:	cmp    al,0x2
6401cd32:	je     0x6401ce79
6401cd38:	push   esi
6401cd39:	call   0x6401cc9d
6401cd3e:	cmp    eax,0xffffffff
6401cd41:	pop    ecx
6401cd42:	je     0x6401cd72
6401cd44:	push   esi
6401cd45:	call   0x6401cc9d
6401cd4a:	cmp    eax,0xfffffffe
6401cd4d:	pop    ecx
6401cd4e:	je     0x6401cd72
6401cd50:	push   esi
6401cd51:	call   0x6401cc9d
6401cd56:	sar    eax,0x5
6401cd59:	push   esi
6401cd5a:	lea    ebx,[eax*4+0x64032500]
6401cd61:	call   0x6401cc9d
6401cd66:	and    eax,0x1f
6401cd69:	pop    ecx
6401cd6a:	shl    eax,0x6
6401cd6d:	add    eax,DWORD PTR [ebx]
6401cd6f:	pop    ecx
6401cd70:	jmp    0x6401cd74
6401cd72:	mov    eax,edi
6401cd74:	mov    al,BYTE PTR [eax+0x24]
6401cd77:	and    al,0x7f
6401cd79:	cmp    al,0x1
6401cd7b:	jne    0x6401cdd9
6401cd7d:	dec    DWORD PTR [esi+0x4]
6401cd80:	mov    ebx,DWORD PTR [ebp+0x8]
6401cd83:	js     0x6401cd93
6401cd85:	mov    eax,DWORD PTR [esi]
6401cd87:	mov    BYTE PTR [eax],bl
6401cd89:	mov    ecx,DWORD PTR [esi]
6401cd8b:	movzx  eax,BYTE PTR [ecx]
6401cd8e:	inc    ecx
6401cd8f:	mov    DWORD PTR [esi],ecx
6401cd91:	jmp    0x6401cd9f
6401cd93:	movsx  eax,bl
6401cd96:	push   esi
6401cd97:	push   eax
6401cd98:	call   0x64016f75
6401cd9d:	pop    ecx
6401cd9e:	pop    ecx
6401cd9f:	cmp    eax,0xffffffff
6401cda2:	jne    0x6401cdad
6401cda4:	or     ax,0xffff
6401cda8:	jmp    0x6401ce99
6401cdad:	dec    DWORD PTR [esi+0x4]
6401cdb0:	js     0x6401cdc0
6401cdb2:	mov    eax,DWORD PTR [esi]
6401cdb4:	mov    BYTE PTR [eax],bh
6401cdb6:	mov    ecx,DWORD PTR [esi]
6401cdb8:	movzx  eax,BYTE PTR [ecx]
6401cdbb:	inc    ecx
6401cdbc:	mov    DWORD PTR [esi],ecx
6401cdbe:	jmp    0x6401cdcc
6401cdc0:	movsx  eax,bh
6401cdc3:	push   esi
6401cdc4:	push   eax
6401cdc5:	call   0x64016f75
6401cdca:	pop    ecx
6401cdcb:	pop    ecx
6401cdcc:	cmp    eax,0xffffffff
6401cdcf:	je     0x6401cda4
6401cdd1:	mov    ax,bx
6401cdd4:	jmp    0x6401ce99
6401cdd9:	push   esi
6401cdda:	call   0x6401cc9d
6401cddf:	cmp    eax,0xffffffff
6401cde2:	pop    ecx
6401cde3:	je     0x6401ce13
6401cde5:	push   esi
6401cde6:	call   0x6401cc9d
6401cdeb:	cmp    eax,0xfffffffe
6401cdee:	pop    ecx
6401cdef:	je     0x6401ce13
6401cdf1:	push   esi
6401cdf2:	call   0x6401cc9d
6401cdf7:	sar    eax,0x5
6401cdfa:	push   esi
6401cdfb:	lea    ebx,[eax*4+0x64032500]
6401ce02:	call   0x6401cc9d
6401ce07:	and    eax,0x1f
6401ce0a:	pop    ecx
6401ce0b:	shl    eax,0x6
6401ce0e:	add    eax,DWORD PTR [ebx]
6401ce10:	pop    ecx
6401ce11:	jmp    0x6401ce15
6401ce13:	mov    eax,edi
6401ce15:	test   BYTE PTR [eax+0x4],0x80
6401ce19:	je     0x6401ce79
6401ce1b:	push   DWORD PTR [ebp+0x8]
6401ce1e:	lea    eax,[ebp-0xc]
6401ce21:	push   0x5
6401ce23:	push   eax
6401ce24:	lea    eax,[ebp-0x10]
6401ce27:	push   eax
6401ce28:	call   0x6401de5b
6401ce2d:	add    esp,0x10
6401ce30:	test   eax,eax
6401ce32:	jne    0x6401cda4
6401ce38:	xor    ebx,ebx
6401ce3a:	cmp    DWORD PTR [ebp-0x10],ebx
6401ce3d:	jle    0x6401ce73
6401ce3f:	dec    DWORD PTR [esi+0x4]
6401ce42:	js     0x6401ce56
6401ce44:	mov    eax,DWORD PTR [esi]
6401ce46:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401ce4a:	mov    BYTE PTR [eax],cl
6401ce4c:	mov    ecx,DWORD PTR [esi]
6401ce4e:	movzx  eax,BYTE PTR [ecx]
6401ce51:	inc    ecx
6401ce52:	mov    DWORD PTR [esi],ecx
6401ce54:	jmp    0x6401ce64
6401ce56:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401ce5b:	push   esi
6401ce5c:	push   eax
6401ce5d:	call   0x64016f75
6401ce62:	pop    ecx
6401ce63:	pop    ecx
6401ce64:	cmp    eax,0xffffffff
6401ce67:	je     0x6401cda4
6401ce6d:	inc    ebx
6401ce6e:	cmp    ebx,DWORD PTR [ebp-0x10]
6401ce71:	jl     0x6401ce3f
6401ce73:	mov    ax,WORD PTR [ebp+0x8]
6401ce77:	jmp    0x6401ce99
6401ce79:	add    DWORD PTR [esi+0x4],0xfffffffe
6401ce7d:	js     0x6401ce8c
6401ce7f:	mov    ecx,DWORD PTR [esi]
6401ce81:	mov    eax,DWORD PTR [ebp+0x8]
6401ce84:	mov    WORD PTR [ecx],ax
6401ce87:	add    DWORD PTR [esi],0x2
6401ce8a:	jmp    0x6401ce99
6401ce8c:	movzx  eax,WORD PTR [ebp+0x8]
6401ce90:	push   esi
6401ce91:	push   eax
6401ce92:	call   0x6401e56a
6401ce97:	pop    ecx
6401ce98:	pop    ecx
6401ce99:	mov    ecx,DWORD PTR [ebp-0x4]
6401ce9c:	pop    edi
6401ce9d:	pop    esi
6401ce9e:	xor    ecx,ebp
6401cea0:	pop    ebx
6401cea1:	call   0x64012e6c
6401cea6:	leave  
6401cea7:	ret    
6401cea8:	mov    eax,ds:0x6402d09c
6401cead:	or     eax,0x1
6401ceb0:	xor    ecx,ecx
6401ceb2:	cmp    DWORD PTR ds:0x6402ef58,eax
6401ceb8:	sete   cl
6401cebb:	mov    eax,ecx
6401cebd:	ret    
6401cebe:	push   ebp
6401cebf:	mov    ebp,esp
6401cec1:	sub    esp,0x10
6401cec4:	push   ebx
6401cec5:	push   esi
6401cec6:	mov    esi,DWORD PTR [ebp+0xc]
6401cec9:	xor    ebx,ebx
6401cecb:	cmp    esi,ebx
6401cecd:	je     0x6401cee2
6401cecf:	cmp    DWORD PTR [ebp+0x10],ebx
6401ced2:	je     0x6401cee2
6401ced4:	cmp    BYTE PTR [esi],bl
6401ced6:	jne    0x6401cee8
6401ced8:	mov    eax,DWORD PTR [ebp+0x8]
6401cedb:	cmp    eax,ebx
6401cedd:	je     0x6401cee2
6401cedf:	mov    WORD PTR [eax],bx
6401cee2:	xor    eax,eax
6401cee4:	pop    esi
6401cee5:	pop    ebx
6401cee6:	leave  
6401cee7:	ret    
6401cee8:	push   DWORD PTR [ebp+0x14]
6401ceeb:	lea    ecx,[ebp-0x10]
6401ceee:	call   0x6401300f
6401cef3:	mov    eax,DWORD PTR [ebp-0x10]
6401cef6:	cmp    DWORD PTR [eax+0x14],ebx
6401cef9:	jne    0x6401cf1a
6401cefb:	mov    eax,DWORD PTR [ebp+0x8]
6401cefe:	cmp    eax,ebx
6401cf00:	je     0x6401cf09
6401cf02:	movzx  cx,BYTE PTR [esi]
6401cf06:	mov    WORD PTR [eax],cx
6401cf09:	cmp    BYTE PTR [ebp-0x4],bl
6401cf0c:	je     0x6401cf15
6401cf0e:	mov    eax,DWORD PTR [ebp-0x8]
6401cf11:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cf15:	xor    eax,eax
6401cf17:	inc    eax
6401cf18:	jmp    0x6401cee4
6401cf1a:	lea    eax,[ebp-0x10]
6401cf1d:	push   eax
6401cf1e:	movzx  eax,BYTE PTR [esi]
6401cf21:	push   eax
6401cf22:	call   0x6401a280
6401cf27:	test   eax,eax
6401cf29:	pop    ecx
6401cf2a:	pop    ecx
6401cf2b:	je     0x6401cfaa
6401cf2d:	mov    eax,DWORD PTR [ebp-0x10]
6401cf30:	mov    ecx,DWORD PTR [eax+0xac]
6401cf36:	cmp    ecx,0x1
6401cf39:	jle    0x6401cf60
6401cf3b:	cmp    DWORD PTR [ebp+0x10],ecx
6401cf3e:	jl     0x6401cf60
6401cf40:	xor    edx,edx
6401cf42:	cmp    DWORD PTR [ebp+0x8],ebx
6401cf45:	setne  dl
6401cf48:	push   edx
6401cf49:	push   DWORD PTR [ebp+0x8]
6401cf4c:	push   ecx
6401cf4d:	push   esi
6401cf4e:	push   0x9
6401cf50:	push   DWORD PTR [eax+0x4]
6401cf53:	call   DWORD PTR ds:0x64025024
6401cf59:	test   eax,eax
6401cf5b:	mov    eax,DWORD PTR [ebp-0x10]
6401cf5e:	jne    0x6401cf70
6401cf60:	mov    ecx,DWORD PTR [ebp+0x10]
6401cf63:	cmp    ecx,DWORD PTR [eax+0xac]
6401cf69:	jb     0x6401cf8b
6401cf6b:	cmp    BYTE PTR [esi+0x1],bl
6401cf6e:	je     0x6401cf8b
6401cf70:	cmp    BYTE PTR [ebp-0x4],bl
6401cf73:	mov    eax,DWORD PTR [eax+0xac]
6401cf79:	je     0x6401cee4
6401cf7f:	mov    ecx,DWORD PTR [ebp-0x8]
6401cf82:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401cf86:	jmp    0x6401cee4
6401cf8b:	call   0x64014c30
6401cf90:	mov    DWORD PTR [eax],0x2a
6401cf96:	cmp    BYTE PTR [ebp-0x4],bl
6401cf99:	je     0x6401cfa2
6401cf9b:	mov    eax,DWORD PTR [ebp-0x8]
6401cf9e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cfa2:	or     eax,0xffffffff
6401cfa5:	jmp    0x6401cee4
6401cfaa:	xor    eax,eax
6401cfac:	cmp    DWORD PTR [ebp+0x8],ebx
6401cfaf:	setne  al
6401cfb2:	push   eax
6401cfb3:	push   DWORD PTR [ebp+0x8]
6401cfb6:	mov    eax,DWORD PTR [ebp-0x10]
6401cfb9:	push   0x1
6401cfbb:	push   esi
6401cfbc:	push   0x9
6401cfbe:	push   DWORD PTR [eax+0x4]
6401cfc1:	call   DWORD PTR ds:0x64025024
6401cfc7:	test   eax,eax
6401cfc9:	jne    0x6401cf09
6401cfcf:	jmp    0x6401cf8b
6401cfd1:	push   0x0
6401cfd3:	push   DWORD PTR [esp+0x10]
6401cfd7:	push   DWORD PTR [esp+0x10]
6401cfdb:	push   DWORD PTR [esp+0x10]
6401cfdf:	call   0x6401cebe
6401cfe4:	add    esp,0x10
6401cfe7:	ret    
6401cfe8:	test   BYTE PTR [edi+0xc],0x40
6401cfec:	push   ebx
6401cfed:	push   esi
6401cfee:	mov    esi,eax
6401cff0:	mov    ebx,ecx
6401cff2:	je     0x6401d028
6401cff4:	cmp    DWORD PTR [edi+0x8],0x0
6401cff8:	jne    0x6401d028
6401cffa:	mov    eax,DWORD PTR [esp+0xc]
6401cffe:	add    DWORD PTR [esi],eax
6401d000:	jmp    0x6401d02f
6401d002:	mov    al,BYTE PTR [ebx]
6401d004:	dec    DWORD PTR [esp+0xc]
6401d008:	mov    ecx,edi
6401d00a:	call   0x6401920a
6401d00f:	inc    ebx
6401d010:	cmp    DWORD PTR [esi],0xffffffff
6401d013:	jne    0x6401d028
6401d015:	call   0x64014c30
6401d01a:	cmp    DWORD PTR [eax],0x2a
6401d01d:	jne    0x6401d02f
6401d01f:	mov    ecx,edi
6401d021:	mov    al,0x3f
6401d023:	call   0x6401920a
6401d028:	cmp    DWORD PTR [esp+0xc],0x0
6401d02d:	jg     0x6401d002
6401d02f:	pop    esi
6401d030:	pop    ebx
6401d031:	ret    
6401d032:	push   ebp
6401d033:	lea    ebp,[esp-0x1f8]
6401d03a:	sub    esp,0x278
6401d040:	mov    eax,ds:0x6402d09c
6401d045:	xor    eax,ebp
6401d047:	mov    DWORD PTR [ebp+0x1f4],eax
6401d04d:	mov    eax,DWORD PTR [ebp+0x200]
6401d053:	push   ebx
6401d054:	mov    ebx,DWORD PTR [ebp+0x204]
6401d05a:	push   esi
6401d05b:	xor    esi,esi
6401d05d:	push   edi
6401d05e:	mov    edi,DWORD PTR [ebp+0x20c]
6401d064:	push   DWORD PTR [ebp+0x208]
6401d06a:	lea    ecx,[ebp-0x5c]
6401d06d:	mov    DWORD PTR [ebp-0x30],eax
6401d070:	mov    DWORD PTR [ebp-0x2c],edi
6401d073:	mov    DWORD PTR [ebp-0x64],esi
6401d076:	mov    DWORD PTR [ebp-0x18],esi
6401d079:	mov    DWORD PTR [ebp-0x40],esi
6401d07c:	mov    DWORD PTR [ebp-0x20],esi
6401d07f:	mov    DWORD PTR [ebp-0x3c],esi
6401d082:	mov    DWORD PTR [ebp-0x68],esi
6401d085:	mov    DWORD PTR [ebp-0x44],esi
6401d088:	call   0x6401300f
6401d08d:	cmp    DWORD PTR [ebp-0x30],esi
6401d090:	jne    0x6401d0bf
6401d092:	call   0x64014c30
6401d097:	push   esi
6401d098:	push   esi
6401d099:	push   esi
6401d09a:	push   esi
6401d09b:	mov    DWORD PTR [eax],0x16
6401d0a1:	push   esi
6401d0a2:	call   0x640129a4
6401d0a7:	add    esp,0x14
6401d0aa:	cmp    BYTE PTR [ebp-0x50],0x0
6401d0ae:	je     0x6401d0b7
6401d0b0:	mov    eax,DWORD PTR [ebp-0x54]
6401d0b3:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d0b7:	or     eax,0xffffffff
6401d0ba:	jmp    0x6401d9a9
6401d0bf:	mov    eax,DWORD PTR [ebp-0x30]
6401d0c2:	test   BYTE PTR [eax+0xc],0x40
6401d0c6:	jne    0x6401d170
6401d0cc:	push   eax
6401d0cd:	call   0x6401cc9d
6401d0d2:	cmp    eax,0xffffffff
6401d0d5:	pop    ecx
6401d0d6:	je     0x6401d10e
6401d0d8:	push   DWORD PTR [ebp-0x30]
6401d0db:	call   0x6401cc9d
6401d0e0:	cmp    eax,0xfffffffe
6401d0e3:	pop    ecx
6401d0e4:	je     0x6401d10e
6401d0e6:	push   DWORD PTR [ebp-0x30]
6401d0e9:	call   0x6401cc9d
6401d0ee:	push   DWORD PTR [ebp-0x30]
6401d0f1:	sar    eax,0x5
6401d0f4:	lea    esi,[eax*4+0x64032500]
6401d0fb:	call   0x6401cc9d
6401d100:	and    eax,0x1f
6401d103:	shl    eax,0x6
6401d106:	add    eax,DWORD PTR [esi]
6401d108:	pop    ecx
6401d109:	pop    ecx
6401d10a:	xor    esi,esi
6401d10c:	jmp    0x6401d113
6401d10e:	mov    eax,0x6402d880
6401d113:	test   BYTE PTR [eax+0x24],0x7f
6401d117:	jne    0x6401d092
6401d11d:	push   DWORD PTR [ebp-0x30]
6401d120:	call   0x6401cc9d
6401d125:	cmp    eax,0xffffffff
6401d128:	pop    ecx
6401d129:	je     0x6401d161
6401d12b:	push   DWORD PTR [ebp-0x30]
6401d12e:	call   0x6401cc9d
6401d133:	cmp    eax,0xfffffffe
6401d136:	pop    ecx
6401d137:	je     0x6401d161
6401d139:	push   DWORD PTR [ebp-0x30]
6401d13c:	call   0x6401cc9d
6401d141:	push   DWORD PTR [ebp-0x30]
6401d144:	sar    eax,0x5
6401d147:	lea    esi,[eax*4+0x64032500]
6401d14e:	call   0x6401cc9d
6401d153:	and    eax,0x1f
6401d156:	shl    eax,0x6
6401d159:	add    eax,DWORD PTR [esi]
6401d15b:	pop    ecx
6401d15c:	pop    ecx
6401d15d:	xor    esi,esi
6401d15f:	jmp    0x6401d166
6401d161:	mov    eax,0x6402d880
6401d166:	test   BYTE PTR [eax+0x24],0x80
6401d16a:	jne    0x6401d092
6401d170:	cmp    ebx,esi
6401d172:	je     0x6401d092
6401d178:	mov    dl,BYTE PTR [ebx]
6401d17a:	test   dl,dl
6401d17c:	mov    DWORD PTR [ebp-0x34],esi
6401d17f:	mov    DWORD PTR [ebp-0x28],esi
6401d182:	mov    DWORD PTR [ebp-0x48],esi
6401d185:	mov    DWORD PTR [ebp-0x60],esi
6401d188:	mov    BYTE PTR [ebp-0x19],dl
6401d18b:	je     0x6401d999
6401d191:	inc    ebx
6401d192:	xor    eax,eax
6401d194:	cmp    DWORD PTR [ebp-0x34],eax
6401d197:	mov    DWORD PTR [ebp-0x4c],ebx
6401d19a:	jl     0x6401d988
6401d1a0:	mov    cl,dl
6401d1a2:	sub    cl,0x20
6401d1a5:	cmp    cl,0x58
6401d1a8:	ja     0x6401d1b7
6401d1aa:	movsx  eax,dl
6401d1ad:	movzx  eax,BYTE PTR [eax+0x640274a0]
6401d1b4:	and    eax,0xf
6401d1b7:	mov    ecx,DWORD PTR [ebp-0x48]
6401d1ba:	imul   eax,eax,0x9
6401d1bd:	movzx  eax,BYTE PTR [eax+ecx*1+0x640274c0]
6401d1c5:	push   0x8
6401d1c7:	shr    eax,0x4
6401d1ca:	pop    esi
6401d1cb:	cmp    eax,esi
6401d1cd:	mov    DWORD PTR [ebp-0x48],eax
6401d1d0:	je     0x6401d971
6401d1d6:	push   0x7
6401d1d8:	pop    ecx
6401d1d9:	cmp    eax,ecx
6401d1db:	ja     0x6401d95b
6401d1e1:	jmp    DWORD PTR [eax*4+0x6401d9c2]
6401d1e8:	xor    eax,eax
6401d1ea:	or     DWORD PTR [ebp-0x20],0xffffffff
6401d1ee:	mov    DWORD PTR [ebp-0x74],eax
6401d1f1:	mov    DWORD PTR [ebp-0x68],eax
6401d1f4:	mov    DWORD PTR [ebp-0x40],eax
6401d1f7:	mov    DWORD PTR [ebp-0x3c],eax
6401d1fa:	mov    DWORD PTR [ebp-0x18],eax
6401d1fd:	mov    DWORD PTR [ebp-0x44],eax
6401d200:	jmp    0x6401d95b
6401d205:	movsx  eax,dl
6401d208:	sub    eax,0x20
6401d20b:	je     0x6401d249
6401d20d:	sub    eax,0x3
6401d210:	je     0x6401d23d
6401d212:	sub    eax,esi
6401d214:	je     0x6401d234
6401d216:	dec    eax
6401d217:	dec    eax
6401d218:	je     0x6401d22b
6401d21a:	sub    eax,0x3
6401d21d:	jne    0x6401d95b
6401d223:	or     DWORD PTR [ebp-0x18],esi
6401d226:	jmp    0x6401d95b
6401d22b:	or     DWORD PTR [ebp-0x18],0x4
6401d22f:	jmp    0x6401d95b
6401d234:	or     DWORD PTR [ebp-0x18],0x1
6401d238:	jmp    0x6401d95b
6401d23d:	or     DWORD PTR [ebp-0x18],0x80
6401d244:	jmp    0x6401d95b
6401d249:	or     DWORD PTR [ebp-0x18],0x2
6401d24d:	jmp    0x6401d95b
6401d252:	cmp    dl,0x2a
6401d255:	jne    0x6401d277
6401d257:	add    edi,0x4
6401d25a:	mov    DWORD PTR [ebp-0x2c],edi
6401d25d:	mov    edi,DWORD PTR [edi-0x4]
6401d260:	test   edi,edi
6401d262:	mov    DWORD PTR [ebp-0x40],edi
6401d265:	jge    0x6401d95b
6401d26b:	or     DWORD PTR [ebp-0x18],0x4
6401d26f:	neg    DWORD PTR [ebp-0x40]
6401d272:	jmp    0x6401d95b
6401d277:	mov    eax,DWORD PTR [ebp-0x40]
6401d27a:	imul   eax,eax,0xa
6401d27d:	movsx  ecx,dl
6401d280:	lea    eax,[eax+ecx*1-0x30]
6401d284:	mov    DWORD PTR [ebp-0x40],eax
6401d287:	jmp    0x6401d95b
6401d28c:	and    DWORD PTR [ebp-0x20],0x0
6401d290:	jmp    0x6401d95b
6401d295:	cmp    dl,0x2a
6401d298:	jne    0x6401d2b7
6401d29a:	add    edi,0x4
6401d29d:	mov    DWORD PTR [ebp-0x2c],edi
6401d2a0:	mov    edi,DWORD PTR [edi-0x4]
6401d2a3:	test   edi,edi
6401d2a5:	mov    DWORD PTR [ebp-0x20],edi
6401d2a8:	jge    0x6401d95b
6401d2ae:	or     DWORD PTR [ebp-0x20],0xffffffff
6401d2b2:	jmp    0x6401d95b
6401d2b7:	mov    eax,DWORD PTR [ebp-0x20]
6401d2ba:	imul   eax,eax,0xa
6401d2bd:	movsx  ecx,dl
6401d2c0:	lea    eax,[eax+ecx*1-0x30]
6401d2c4:	mov    DWORD PTR [ebp-0x20],eax
6401d2c7:	jmp    0x6401d95b
6401d2cc:	cmp    dl,0x49
6401d2cf:	je     0x6401d317
6401d2d1:	cmp    dl,0x68
6401d2d4:	je     0x6401d30e
6401d2d6:	cmp    dl,0x6c
6401d2d9:	je     0x6401d2f0
6401d2db:	cmp    dl,0x77
6401d2de:	jne    0x6401d95b
6401d2e4:	or     DWORD PTR [ebp-0x18],0x800
6401d2eb:	jmp    0x6401d95b
6401d2f0:	cmp    BYTE PTR [ebx],0x6c
6401d2f3:	jne    0x6401d305
6401d2f5:	inc    ebx
6401d2f6:	or     DWORD PTR [ebp-0x18],0x1000
6401d2fd:	mov    DWORD PTR [ebp-0x4c],ebx
6401d300:	jmp    0x6401d95b
6401d305:	or     DWORD PTR [ebp-0x18],0x10
6401d309:	jmp    0x6401d95b
6401d30e:	or     DWORD PTR [ebp-0x18],0x20
6401d312:	jmp    0x6401d95b
6401d317:	mov    al,BYTE PTR [ebx]
6401d319:	cmp    al,0x36
6401d31b:	jne    0x6401d334
6401d31d:	cmp    BYTE PTR [ebx+0x1],0x34
6401d321:	jne    0x6401d334
6401d323:	inc    ebx
6401d324:	inc    ebx
6401d325:	or     DWORD PTR [ebp-0x18],0x8000
6401d32c:	mov    DWORD PTR [ebp-0x4c],ebx
6401d32f:	jmp    0x6401d95b
6401d334:	cmp    al,0x33
6401d336:	jne    0x6401d34f
6401d338:	cmp    BYTE PTR [ebx+0x1],0x32
6401d33c:	jne    0x6401d34f
6401d33e:	inc    ebx
6401d33f:	inc    ebx
6401d340:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401d347:	mov    DWORD PTR [ebp-0x4c],ebx
6401d34a:	jmp    0x6401d95b
6401d34f:	cmp    al,0x64
6401d351:	je     0x6401d95b
6401d357:	cmp    al,0x69
6401d359:	je     0x6401d95b
6401d35f:	cmp    al,0x6f
6401d361:	je     0x6401d95b
6401d367:	cmp    al,0x75
6401d369:	je     0x6401d95b
6401d36f:	cmp    al,0x78
6401d371:	je     0x6401d95b
6401d377:	cmp    al,0x58
6401d379:	je     0x6401d95b
6401d37f:	and    DWORD PTR [ebp-0x48],0x0
6401d383:	and    DWORD PTR [ebp-0x44],0x0
6401d387:	lea    eax,[ebp-0x5c]
6401d38a:	push   eax
6401d38b:	movzx  eax,dl
6401d38e:	push   eax
6401d38f:	call   0x6401a280
6401d394:	pop    ecx
6401d395:	test   eax,eax
6401d397:	mov    al,BYTE PTR [ebp-0x19]
6401d39a:	pop    ecx
6401d39b:	je     0x6401d3b6
6401d39d:	mov    ecx,DWORD PTR [ebp-0x30]
6401d3a0:	lea    esi,[ebp-0x34]
6401d3a3:	call   0x6401920a
6401d3a8:	mov    al,BYTE PTR [ebx]
6401d3aa:	inc    ebx
6401d3ab:	test   al,al
6401d3ad:	mov    DWORD PTR [ebp-0x4c],ebx
6401d3b0:	je     0x6401d971
6401d3b6:	mov    ecx,DWORD PTR [ebp-0x30]
6401d3b9:	lea    esi,[ebp-0x34]
6401d3bc:	call   0x6401920a
6401d3c1:	jmp    0x6401d95b
6401d3c6:	movsx  eax,dl
6401d3c9:	cmp    eax,0x64
6401d3cc:	jg     0x6401d546
6401d3d2:	je     0x6401d5c1
6401d3d8:	cmp    eax,0x53
6401d3db:	jg     0x6401d48d
6401d3e1:	je     0x6401d43e
6401d3e3:	sub    eax,0x41
6401d3e6:	je     0x6401d3f8
6401d3e8:	dec    eax
6401d3e9:	dec    eax
6401d3ea:	je     0x6401d42d
6401d3ec:	dec    eax
6401d3ed:	dec    eax
6401d3ee:	je     0x6401d3f8
6401d3f0:	dec    eax
6401d3f1:	dec    eax
6401d3f2:	jne    0x6401d843
6401d3f8:	add    dl,0x20
6401d3fb:	mov    DWORD PTR [ebp-0x74],0x1
6401d402:	mov    BYTE PTR [ebp-0x19],dl
6401d405:	or     DWORD PTR [ebp-0x18],0x40
6401d409:	cmp    DWORD PTR [ebp-0x20],0x0
6401d40d:	lea    ebx,[ebp-0x14]
6401d410:	mov    eax,0x200
6401d415:	mov    DWORD PTR [ebp-0x24],ebx
6401d418:	mov    DWORD PTR [ebp-0x6c],eax
6401d41b:	jge    0x6401d5e5
6401d421:	mov    DWORD PTR [ebp-0x20],0x6
6401d428:	jmp    0x6401d634
6401d42d:	test   WORD PTR [ebp-0x18],0x830
6401d433:	jne    0x6401d4aa
6401d435:	or     DWORD PTR [ebp-0x18],0x800
6401d43c:	jmp    0x6401d4aa
6401d43e:	test   WORD PTR [ebp-0x18],0x830
6401d444:	jne    0x6401d44d
6401d446:	or     DWORD PTR [ebp-0x18],0x800
6401d44d:	mov    ecx,DWORD PTR [ebp-0x20]
6401d450:	cmp    ecx,0xffffffff
6401d453:	jne    0x6401d45a
6401d455:	mov    ecx,0x7fffffff
6401d45a:	add    edi,0x4
6401d45d:	test   WORD PTR [ebp-0x18],0x810
6401d463:	mov    DWORD PTR [ebp-0x2c],edi
6401d466:	mov    edi,DWORD PTR [edi-0x4]
6401d469:	mov    DWORD PTR [ebp-0x24],edi
6401d46c:	je     0x6401d821
6401d472:	test   edi,edi
6401d474:	jne    0x6401d47e
6401d476:	mov    eax,ds:0x6402d954
6401d47b:	mov    DWORD PTR [ebp-0x24],eax
6401d47e:	mov    eax,DWORD PTR [ebp-0x24]
6401d481:	mov    DWORD PTR [ebp-0x44],0x1
6401d488:	jmp    0x6401d816
6401d48d:	sub    eax,0x58
6401d490:	je     0x6401d6ca
6401d496:	dec    eax
6401d497:	dec    eax
6401d498:	je     0x6401d4f7
6401d49a:	sub    eax,ecx
6401d49c:	je     0x6401d405
6401d4a2:	dec    eax
6401d4a3:	dec    eax
6401d4a4:	jne    0x6401d843
6401d4aa:	add    edi,0x4
6401d4ad:	test   WORD PTR [ebp-0x18],0x810
6401d4b3:	mov    DWORD PTR [ebp-0x2c],edi
6401d4b6:	je     0x6401d4df
6401d4b8:	movzx  eax,WORD PTR [edi-0x4]
6401d4bc:	push   eax
6401d4bd:	push   0x200
6401d4c2:	lea    eax,[ebp-0x14]
6401d4c5:	push   eax
6401d4c6:	lea    eax,[ebp-0x28]
6401d4c9:	push   eax
6401d4ca:	call   0x6401de5b
6401d4cf:	add    esp,0x10
6401d4d2:	test   eax,eax
6401d4d4:	je     0x6401d4ec
6401d4d6:	mov    DWORD PTR [ebp-0x68],0x1
6401d4dd:	jmp    0x6401d4ec
6401d4df:	mov    al,BYTE PTR [edi-0x4]
6401d4e2:	mov    BYTE PTR [ebp-0x14],al
6401d4e5:	mov    DWORD PTR [ebp-0x28],0x1
6401d4ec:	lea    eax,[ebp-0x14]
6401d4ef:	mov    DWORD PTR [ebp-0x24],eax
6401d4f2:	jmp    0x6401d843
6401d4f7:	mov    eax,DWORD PTR [edi]
6401d4f9:	add    edi,0x4
6401d4fc:	test   eax,eax
6401d4fe:	mov    DWORD PTR [ebp-0x2c],edi
6401d501:	je     0x6401d532
6401d503:	mov    ecx,DWORD PTR [eax+0x4]
6401d506:	test   ecx,ecx
6401d508:	je     0x6401d532
6401d50a:	test   WORD PTR [ebp-0x18],0x800
6401d510:	movsx  eax,WORD PTR [eax]
6401d513:	mov    DWORD PTR [ebp-0x24],ecx
6401d516:	je     0x6401d529
6401d518:	cdq    
6401d519:	sub    eax,edx
6401d51b:	sar    eax,1
6401d51d:	mov    DWORD PTR [ebp-0x44],0x1
6401d524:	jmp    0x6401d840
6401d529:	and    DWORD PTR [ebp-0x44],0x0
6401d52d:	jmp    0x6401d840
6401d532:	mov    eax,ds:0x6402d950
6401d537:	mov    DWORD PTR [ebp-0x24],eax
6401d53a:	push   eax
6401d53b:	call   0x64014630
6401d540:	pop    ecx
6401d541:	jmp    0x6401d840
6401d546:	cmp    eax,0x70
6401d549:	jg     0x6401d6cf
6401d54f:	je     0x6401d6c7
6401d555:	cmp    eax,0x65
6401d558:	jl     0x6401d843
6401d55e:	cmp    eax,0x67
6401d561:	jle    0x6401d405
6401d567:	cmp    eax,0x69
6401d56a:	je     0x6401d5c1
6401d56c:	cmp    eax,0x6e
6401d56f:	je     0x6401d58c
6401d571:	cmp    eax,0x6f
6401d574:	jne    0x6401d843
6401d57a:	test   BYTE PTR [ebp-0x18],0x80
6401d57e:	mov    DWORD PTR [ebp-0x28],esi
6401d581:	je     0x6401d5cc
6401d583:	or     DWORD PTR [ebp-0x18],0x200
6401d58a:	jmp    0x6401d5cc
6401d58c:	mov    esi,DWORD PTR [edi]
6401d58e:	add    edi,0x4
6401d591:	mov    DWORD PTR [ebp-0x2c],edi
6401d594:	call   0x6401cea8
6401d599:	test   eax,eax
6401d59b:	je     0x6401d971
6401d5a1:	test   BYTE PTR [ebp-0x18],0x20
6401d5a5:	je     0x6401d5b0
6401d5a7:	mov    ax,WORD PTR [ebp-0x34]
6401d5ab:	mov    WORD PTR [esi],ax
6401d5ae:	jmp    0x6401d5b5
6401d5b0:	mov    eax,DWORD PTR [ebp-0x34]
6401d5b3:	mov    DWORD PTR [esi],eax
6401d5b5:	mov    DWORD PTR [ebp-0x68],0x1
6401d5bc:	jmp    0x6401d948
6401d5c1:	or     DWORD PTR [ebp-0x18],0x40
6401d5c5:	mov    DWORD PTR [ebp-0x28],0xa
6401d5cc:	mov    ecx,DWORD PTR [ebp-0x18]
6401d5cf:	test   cx,cx
6401d5d2:	jns    0x6401d719
6401d5d8:	add    edi,esi
6401d5da:	mov    eax,DWORD PTR [edi-0x8]
6401d5dd:	mov    edx,DWORD PTR [edi-0x4]
6401d5e0:	jmp    0x6401d74e
6401d5e5:	jne    0x6401d5f5
6401d5e7:	cmp    dl,0x67
6401d5ea:	jne    0x6401d634
6401d5ec:	mov    DWORD PTR [ebp-0x20],0x1
6401d5f3:	jmp    0x6401d634
6401d5f5:	cmp    DWORD PTR [ebp-0x20],eax
6401d5f8:	jle    0x6401d5fd
6401d5fa:	mov    DWORD PTR [ebp-0x20],eax
6401d5fd:	cmp    DWORD PTR [ebp-0x20],0xa3
6401d604:	jle    0x6401d634
6401d606:	mov    esi,DWORD PTR [ebp-0x20]
6401d609:	add    esi,0x15d
6401d60f:	push   esi
6401d610:	call   0x64016140
6401d615:	test   eax,eax
6401d617:	mov    dl,BYTE PTR [ebp-0x19]
6401d61a:	pop    ecx
6401d61b:	mov    DWORD PTR [ebp-0x60],eax
6401d61e:	push   0x8
6401d620:	je     0x6401d62c
6401d622:	mov    DWORD PTR [ebp-0x24],eax
6401d625:	mov    DWORD PTR [ebp-0x6c],esi
6401d628:	mov    ebx,eax
6401d62a:	jmp    0x6401d633
6401d62c:	mov    DWORD PTR [ebp-0x20],0xa3
6401d633:	pop    esi
6401d634:	add    edi,esi
6401d636:	mov    eax,DWORD PTR [edi-0x8]
6401d639:	mov    DWORD PTR [ebp-0x80],eax
6401d63c:	mov    eax,DWORD PTR [edi-0x4]
6401d63f:	mov    DWORD PTR [ebp-0x7c],eax
6401d642:	lea    eax,[ebp-0x5c]
6401d645:	push   eax
6401d646:	push   DWORD PTR [ebp-0x74]
6401d649:	movsx  eax,dl
6401d64c:	push   DWORD PTR [ebp-0x20]
6401d64f:	mov    DWORD PTR [ebp-0x2c],edi
6401d652:	push   eax
6401d653:	push   DWORD PTR [ebp-0x6c]
6401d656:	lea    eax,[ebp-0x80]
6401d659:	push   ebx
6401d65a:	push   eax
6401d65b:	push   DWORD PTR ds:0x6402db64
6401d661:	call   0x64014d5f
6401d666:	pop    ecx
6401d667:	call   eax
6401d669:	mov    edi,DWORD PTR [ebp-0x18]
6401d66c:	add    esp,0x1c
6401d66f:	and    edi,0x80
6401d675:	je     0x6401d692
6401d677:	cmp    DWORD PTR [ebp-0x20],0x0
6401d67b:	jne    0x6401d692
6401d67d:	lea    eax,[ebp-0x5c]
6401d680:	push   eax
6401d681:	push   ebx
6401d682:	push   DWORD PTR ds:0x6402db70
6401d688:	call   0x64014d5f
6401d68d:	pop    ecx
6401d68e:	call   eax
6401d690:	pop    ecx
6401d691:	pop    ecx
6401d692:	cmp    BYTE PTR [ebp-0x19],0x67
6401d696:	jne    0x6401d6b1
6401d698:	test   edi,edi
6401d69a:	jne    0x6401d6b1
6401d69c:	lea    eax,[ebp-0x5c]
6401d69f:	push   eax
6401d6a0:	push   ebx
6401d6a1:	push   DWORD PTR ds:0x6402db6c
6401d6a7:	call   0x64014d5f
6401d6ac:	pop    ecx
6401d6ad:	call   eax
6401d6af:	pop    ecx
6401d6b0:	pop    ecx
6401d6b1:	cmp    BYTE PTR [ebx],0x2d
6401d6b4:	jne    0x6401d6c1
6401d6b6:	or     DWORD PTR [ebp-0x18],0x100
6401d6bd:	inc    ebx
6401d6be:	mov    DWORD PTR [ebp-0x24],ebx
6401d6c1:	push   ebx
6401d6c2:	jmp    0x6401d53b
6401d6c7:	mov    DWORD PTR [ebp-0x20],esi
6401d6ca:	mov    DWORD PTR [ebp-0x64],ecx
6401d6cd:	jmp    0x6401d6f0
6401d6cf:	sub    eax,0x73
6401d6d2:	je     0x6401d44d
6401d6d8:	dec    eax
6401d6d9:	dec    eax
6401d6da:	je     0x6401d5c5
6401d6e0:	sub    eax,0x3
6401d6e3:	jne    0x6401d843
6401d6e9:	mov    DWORD PTR [ebp-0x64],0x27
6401d6f0:	test   BYTE PTR [ebp-0x18],0x80
6401d6f4:	mov    DWORD PTR [ebp-0x28],0x10
6401d6fb:	je     0x6401d5cc
6401d701:	mov    al,BYTE PTR [ebp-0x64]
6401d704:	add    al,0x51
6401d706:	mov    BYTE PTR [ebp-0x38],0x30
6401d70a:	mov    BYTE PTR [ebp-0x37],al
6401d70d:	mov    DWORD PTR [ebp-0x3c],0x2
6401d714:	jmp    0x6401d5cc
6401d719:	test   cx,0x1000
6401d71e:	jne    0x6401d5d8
6401d724:	add    edi,0x4
6401d727:	test   cl,0x20
6401d72a:	je     0x6401d741
6401d72c:	test   cl,0x40
6401d72f:	mov    DWORD PTR [ebp-0x2c],edi
6401d732:	je     0x6401d73a
6401d734:	movsx  eax,WORD PTR [edi-0x4]
6401d738:	jmp    0x6401d73e
6401d73a:	movzx  eax,WORD PTR [edi-0x4]
6401d73e:	cdq    
6401d73f:	jmp    0x6401d751
6401d741:	test   cl,0x40
6401d744:	mov    eax,DWORD PTR [edi-0x4]
6401d747:	je     0x6401d74c
6401d749:	cdq    
6401d74a:	jmp    0x6401d74e
6401d74c:	xor    edx,edx
6401d74e:	mov    DWORD PTR [ebp-0x2c],edi
6401d751:	test   cl,0x40
6401d754:	je     0x6401d76e
6401d756:	test   edx,edx
6401d758:	jg     0x6401d76e
6401d75a:	jl     0x6401d760
6401d75c:	test   eax,eax
6401d75e:	jae    0x6401d76e
6401d760:	neg    eax
6401d762:	adc    edx,0x0
6401d765:	neg    edx
6401d767:	or     DWORD PTR [ebp-0x18],0x100
6401d76e:	test   WORD PTR [ebp-0x18],0x9000
6401d774:	mov    ebx,edx
6401d776:	mov    edi,eax
6401d778:	jne    0x6401d77c
6401d77a:	xor    ebx,ebx
6401d77c:	cmp    DWORD PTR [ebp-0x20],0x0
6401d780:	jge    0x6401d78b
6401d782:	mov    DWORD PTR [ebp-0x20],0x1
6401d789:	jmp    0x6401d79c
6401d78b:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401d78f:	mov    eax,0x200
6401d794:	cmp    DWORD PTR [ebp-0x20],eax
6401d797:	jle    0x6401d79c
6401d799:	mov    DWORD PTR [ebp-0x20],eax
6401d79c:	mov    eax,edi
6401d79e:	or     eax,ebx
6401d7a0:	jne    0x6401d7a5
6401d7a2:	and    DWORD PTR [ebp-0x3c],eax
6401d7a5:	lea    esi,[ebp+0x1eb]
6401d7ab:	mov    eax,DWORD PTR [ebp-0x20]
6401d7ae:	dec    DWORD PTR [ebp-0x20]
6401d7b1:	test   eax,eax
6401d7b3:	jg     0x6401d7bb
6401d7b5:	mov    eax,edi
6401d7b7:	or     eax,ebx
6401d7b9:	je     0x6401d7df
6401d7bb:	mov    eax,DWORD PTR [ebp-0x28]
6401d7be:	cdq    
6401d7bf:	push   edx
6401d7c0:	push   eax
6401d7c1:	push   ebx
6401d7c2:	push   edi
6401d7c3:	call   0x64019d50
6401d7c8:	add    ecx,0x30
6401d7cb:	cmp    ecx,0x39
6401d7ce:	mov    DWORD PTR [ebp-0x6c],ebx
6401d7d1:	mov    edi,eax
6401d7d3:	mov    ebx,edx
6401d7d5:	jle    0x6401d7da
6401d7d7:	add    ecx,DWORD PTR [ebp-0x64]
6401d7da:	mov    BYTE PTR [esi],cl
6401d7dc:	dec    esi
6401d7dd:	jmp    0x6401d7ab
6401d7df:	lea    eax,[ebp+0x1eb]
6401d7e5:	sub    eax,esi
6401d7e7:	inc    esi
6401d7e8:	test   WORD PTR [ebp-0x18],0x200
6401d7ee:	mov    DWORD PTR [ebp-0x28],eax
6401d7f1:	mov    DWORD PTR [ebp-0x24],esi
6401d7f4:	je     0x6401d843
6401d7f6:	test   eax,eax
6401d7f8:	je     0x6401d801
6401d7fa:	mov    ecx,esi
6401d7fc:	cmp    BYTE PTR [ecx],0x30
6401d7ff:	je     0x6401d843
6401d801:	dec    DWORD PTR [ebp-0x24]
6401d804:	mov    ecx,DWORD PTR [ebp-0x24]
6401d807:	mov    BYTE PTR [ecx],0x30
6401d80a:	inc    eax
6401d80b:	jmp    0x6401d840
6401d80d:	dec    ecx
6401d80e:	cmp    WORD PTR [eax],0x0
6401d812:	je     0x6401d81a
6401d814:	inc    eax
6401d815:	inc    eax
6401d816:	test   ecx,ecx
6401d818:	jne    0x6401d80d
6401d81a:	sub    eax,DWORD PTR [ebp-0x24]
6401d81d:	sar    eax,1
6401d81f:	jmp    0x6401d840
6401d821:	test   edi,edi
6401d823:	jne    0x6401d82d
6401d825:	mov    eax,ds:0x6402d950
6401d82a:	mov    DWORD PTR [ebp-0x24],eax
6401d82d:	mov    eax,DWORD PTR [ebp-0x24]
6401d830:	jmp    0x6401d839
6401d832:	dec    ecx
6401d833:	cmp    BYTE PTR [eax],0x0
6401d836:	je     0x6401d83d
6401d838:	inc    eax
6401d839:	test   ecx,ecx
6401d83b:	jne    0x6401d832
6401d83d:	sub    eax,DWORD PTR [ebp-0x24]
6401d840:	mov    DWORD PTR [ebp-0x28],eax
6401d843:	cmp    DWORD PTR [ebp-0x68],0x0
6401d847:	jne    0x6401d948
6401d84d:	mov    eax,DWORD PTR [ebp-0x18]
6401d850:	test   al,0x40
6401d852:	je     0x6401d879
6401d854:	test   ax,0x100
6401d858:	je     0x6401d860
6401d85a:	mov    BYTE PTR [ebp-0x38],0x2d
6401d85e:	jmp    0x6401d872
6401d860:	test   al,0x1
6401d862:	je     0x6401d86a
6401d864:	mov    BYTE PTR [ebp-0x38],0x2b
6401d868:	jmp    0x6401d872
6401d86a:	test   al,0x2
6401d86c:	je     0x6401d879
6401d86e:	mov    BYTE PTR [ebp-0x38],0x20
6401d872:	mov    DWORD PTR [ebp-0x3c],0x1
6401d879:	mov    ebx,DWORD PTR [ebp-0x40]
6401d87c:	sub    ebx,DWORD PTR [ebp-0x28]
6401d87f:	sub    ebx,DWORD PTR [ebp-0x3c]
6401d882:	test   BYTE PTR [ebp-0x18],0xc
6401d886:	jne    0x6401d899
6401d888:	push   DWORD PTR [ebp-0x30]
6401d88b:	lea    eax,[ebp-0x34]
6401d88e:	push   ebx
6401d88f:	push   0x20
6401d891:	call   0x6401923d
6401d896:	add    esp,0xc
6401d899:	push   DWORD PTR [ebp-0x3c]
6401d89c:	mov    edi,DWORD PTR [ebp-0x30]
6401d89f:	lea    eax,[ebp-0x34]
6401d8a2:	lea    ecx,[ebp-0x38]
6401d8a5:	call   0x6401cfe8
6401d8aa:	test   BYTE PTR [ebp-0x18],0x8
6401d8ae:	pop    ecx
6401d8af:	je     0x6401d8c6
6401d8b1:	test   BYTE PTR [ebp-0x18],0x4
6401d8b5:	jne    0x6401d8c6
6401d8b7:	push   edi
6401d8b8:	push   ebx
6401d8b9:	push   0x30
6401d8bb:	lea    eax,[ebp-0x34]
6401d8be:	call   0x6401923d
6401d8c3:	add    esp,0xc
6401d8c6:	cmp    DWORD PTR [ebp-0x44],0x0
6401d8ca:	mov    eax,DWORD PTR [ebp-0x28]
6401d8cd:	je     0x6401d920
6401d8cf:	test   eax,eax
6401d8d1:	jle    0x6401d920
6401d8d3:	mov    esi,DWORD PTR [ebp-0x24]
6401d8d6:	mov    DWORD PTR [ebp-0x6c],eax
6401d8d9:	movzx  eax,WORD PTR [esi]
6401d8dc:	dec    DWORD PTR [ebp-0x6c]
6401d8df:	push   eax
6401d8e0:	push   0x6
6401d8e2:	lea    eax,[ebp+0x1ec]
6401d8e8:	push   eax
6401d8e9:	lea    eax,[ebp-0x78]
6401d8ec:	inc    esi
6401d8ed:	push   eax
6401d8ee:	inc    esi
6401d8ef:	call   0x6401de5b
6401d8f4:	add    esp,0x10
6401d8f7:	test   eax,eax
6401d8f9:	jne    0x6401d91a
6401d8fb:	cmp    DWORD PTR [ebp-0x78],eax
6401d8fe:	je     0x6401d91a
6401d900:	push   DWORD PTR [ebp-0x78]
6401d903:	lea    eax,[ebp-0x34]
6401d906:	lea    ecx,[ebp+0x1ec]
6401d90c:	call   0x6401cfe8
6401d911:	cmp    DWORD PTR [ebp-0x6c],0x0
6401d915:	pop    ecx
6401d916:	jne    0x6401d8d9
6401d918:	jmp    0x6401d92d
6401d91a:	or     DWORD PTR [ebp-0x34],0xffffffff
6401d91e:	jmp    0x6401d92d
6401d920:	mov    ecx,DWORD PTR [ebp-0x24]
6401d923:	push   eax
6401d924:	lea    eax,[ebp-0x34]
6401d927:	call   0x6401cfe8
6401d92c:	pop    ecx
6401d92d:	cmp    DWORD PTR [ebp-0x34],0x0
6401d931:	jl     0x6401d948
6401d933:	test   BYTE PTR [ebp-0x18],0x4
6401d937:	je     0x6401d948
6401d939:	push   edi
6401d93a:	push   ebx
6401d93b:	push   0x20
6401d93d:	lea    eax,[ebp-0x34]
6401d940:	call   0x6401923d
6401d945:	add    esp,0xc
6401d948:	cmp    DWORD PTR [ebp-0x60],0x0
6401d94c:	je     0x6401d95b
6401d94e:	push   DWORD PTR [ebp-0x60]
6401d951:	call   0x64013d06
6401d956:	and    DWORD PTR [ebp-0x60],0x0
6401d95a:	pop    ecx
6401d95b:	mov    ebx,DWORD PTR [ebp-0x4c]
6401d95e:	mov    al,BYTE PTR [ebx]
6401d960:	test   al,al
6401d962:	mov    BYTE PTR [ebp-0x19],al
6401d965:	je     0x6401d988
6401d967:	mov    edi,DWORD PTR [ebp-0x2c]
6401d96a:	mov    dl,al
6401d96c:	jmp    0x6401d191
6401d971:	call   0x64014c30
6401d976:	mov    DWORD PTR [eax],0x16
6401d97c:	xor    eax,eax
6401d97e:	push   eax
6401d97f:	push   eax
6401d980:	push   eax
6401d981:	push   eax
6401d982:	push   eax
6401d983:	jmp    0x6401d0a2
6401d988:	xor    esi,esi
6401d98a:	cmp    DWORD PTR [ebp-0x48],esi
6401d98d:	je     0x6401d999
6401d98f:	cmp    DWORD PTR [ebp-0x48],0x7
6401d993:	jne    0x6401d092
6401d999:	cmp    BYTE PTR [ebp-0x50],0x0
6401d99d:	je     0x6401d9a6
6401d99f:	mov    eax,DWORD PTR [ebp-0x54]
6401d9a2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d9a6:	mov    eax,DWORD PTR [ebp-0x34]
6401d9a9:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401d9af:	pop    edi
6401d9b0:	pop    esi
6401d9b1:	xor    ecx,ebp
6401d9b3:	pop    ebx
6401d9b4:	call   0x64012e6c
6401d9b9:	add    ebp,0x1f8
6401d9bf:	leave  
6401d9c0:	ret    
6401d9c1:	nop
6401d9c2:	adc    ebx,0x1
6401d9c5:	fs call 0x6965db9c
6401d9cb:	rol    BYTE PTR [ecx],cl
6401d9cd:	fs push edx
6401d9cf:	rol    BYTE PTR [ecx],cl
6401d9d1:	fs mov edx,ss
6401d9d4:	add    DWORD PTR [ebp+edx*4-0x2e],esp
6401d9d8:	add    DWORD PTR [esp+ecx*8-0x2e],esp
6401d9dc:	add    DWORD PTR [esi+eax*8-0x2d],esp
6401d9e0:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d9e4:	in     al,dx
6401d9e5:	sub    esp,0xc
6401d9e8:	mov    eax,ds:0x6402d09c
6401d9ed:	xor    eax,ebp
6401d9ef:	mov    DWORD PTR [ebp-0x4],eax
6401d9f2:	push   0x6
6401d9f4:	lea    eax,[ebp-0xc]
6401d9f7:	push   eax
6401d9f8:	push   0x1004
6401d9fd:	push   DWORD PTR [ebp+0x8]
6401da00:	mov    BYTE PTR [ebp-0x6],0x0
6401da04:	call   DWORD PTR ds:0x640250ec
6401da0a:	test   eax,eax
6401da0c:	jne    0x6401da13
6401da0e:	or     eax,0xffffffff
6401da11:	jmp    0x6401da1d
6401da13:	lea    eax,[ebp-0xc]
6401da16:	push   eax
6401da17:	call   0x6401e0b4
6401da1c:	pop    ecx
6401da1d:	mov    ecx,DWORD PTR [ebp-0x4]
6401da20:	xor    ecx,ebp
6401da22:	call   0x64012e6c
6401da27:	leave  
6401da28:	ret    
6401da29:	push   ebp
6401da2a:	mov    ebp,esp
6401da2c:	sub    esp,0x34
6401da2f:	mov    eax,ds:0x6402d09c
6401da34:	xor    eax,ebp
6401da36:	mov    DWORD PTR [ebp-0x4],eax
6401da39:	mov    eax,DWORD PTR [ebp+0x10]
6401da3c:	mov    ecx,DWORD PTR [ebp+0x18]
6401da3f:	mov    DWORD PTR [ebp-0x28],eax
6401da42:	mov    eax,DWORD PTR [ebp+0x14]
6401da45:	push   ebx
6401da46:	mov    DWORD PTR [ebp-0x30],eax
6401da49:	mov    eax,DWORD PTR [eax]
6401da4b:	push   esi
6401da4c:	mov    DWORD PTR [ebp-0x24],eax
6401da4f:	mov    eax,DWORD PTR [ebp+0x8]
6401da52:	push   edi
6401da53:	xor    edi,edi
6401da55:	cmp    eax,DWORD PTR [ebp+0xc]
6401da58:	mov    DWORD PTR [ebp-0x34],ecx
6401da5b:	mov    DWORD PTR [ebp-0x20],edi
6401da5e:	mov    DWORD PTR [ebp-0x2c],edi
6401da61:	je     0x6401dbc6
6401da67:	mov    esi,DWORD PTR ds:0x64025148
6401da6d:	lea    ecx,[ebp-0x18]
6401da70:	push   ecx
6401da71:	push   eax
6401da72:	call   esi
6401da74:	test   eax,eax
6401da76:	mov    ebx,DWORD PTR ds:0x64025024
6401da7c:	je     0x6401dadc
6401da7e:	cmp    DWORD PTR [ebp-0x18],0x1
6401da82:	jne    0x6401dadc
6401da84:	lea    eax,[ebp-0x18]
6401da87:	push   eax
6401da88:	push   DWORD PTR [ebp+0xc]
6401da8b:	call   esi
6401da8d:	test   eax,eax
6401da8f:	je     0x6401dadc
6401da91:	cmp    DWORD PTR [ebp-0x18],0x1
6401da95:	jne    0x6401dadc
6401da97:	mov    esi,DWORD PTR [ebp-0x24]
6401da9a:	cmp    esi,0xffffffff
6401da9d:	mov    DWORD PTR [ebp-0x2c],0x1
6401daa4:	jne    0x6401dab2
6401daa6:	push   DWORD PTR [ebp-0x28]
6401daa9:	call   0x64014630
6401daae:	mov    esi,eax
6401dab0:	pop    ecx
6401dab1:	inc    esi
6401dab2:	cmp    esi,edi
6401dab4:	jle    0x6401db11
6401dab6:	cmp    esi,0x7ffffff0
6401dabc:	ja     0x6401db11
6401dabe:	lea    eax,[esi+esi*1+0x8]
6401dac2:	cmp    eax,0x400
6401dac7:	ja     0x6401daf8
6401dac9:	call   0x640135f0
6401dace:	mov    eax,esp
6401dad0:	cmp    eax,edi
6401dad2:	je     0x6401db0c
6401dad4:	mov    DWORD PTR [eax],0xcccc
6401dada:	jmp    0x6401db09
6401dadc:	push   edi
6401dadd:	push   edi
6401dade:	push   DWORD PTR [ebp-0x24]
6401dae1:	push   DWORD PTR [ebp-0x28]
6401dae4:	push   0x1
6401dae6:	push   DWORD PTR [ebp+0x8]
6401dae9:	call   ebx
6401daeb:	mov    esi,eax
6401daed:	cmp    esi,edi
6401daef:	jne    0x6401dab4
6401daf1:	xor    eax,eax
6401daf3:	jmp    0x6401dbc9
6401daf8:	push   eax
6401daf9:	call   0x64013de3
6401dafe:	cmp    eax,edi
6401db00:	pop    ecx
6401db01:	je     0x6401db0c
6401db03:	mov    DWORD PTR [eax],0xdddd
6401db09:	add    eax,0x8
6401db0c:	mov    DWORD PTR [ebp-0x1c],eax
6401db0f:	jmp    0x6401db14
6401db11:	mov    DWORD PTR [ebp-0x1c],edi
6401db14:	cmp    DWORD PTR [ebp-0x1c],edi
6401db17:	je     0x6401daf1
6401db19:	lea    eax,[esi+esi*1]
6401db1c:	push   eax
6401db1d:	push   edi
6401db1e:	push   DWORD PTR [ebp-0x1c]
6401db21:	call   0x64013570
6401db26:	add    esp,0xc
6401db29:	push   esi
6401db2a:	push   DWORD PTR [ebp-0x1c]
6401db2d:	push   DWORD PTR [ebp-0x24]
6401db30:	push   DWORD PTR [ebp-0x28]
6401db33:	push   0x1
6401db35:	push   DWORD PTR [ebp+0x8]
6401db38:	call   ebx
6401db3a:	test   eax,eax
6401db3c:	je     0x6401dbbd
6401db3e:	mov    ebx,DWORD PTR [ebp-0x34]
6401db41:	cmp    ebx,edi
6401db43:	je     0x6401db62
6401db45:	push   edi
6401db46:	push   edi
6401db47:	push   DWORD PTR [ebp+0x1c]
6401db4a:	push   ebx
6401db4b:	push   esi
6401db4c:	push   DWORD PTR [ebp-0x1c]
6401db4f:	push   edi
6401db50:	push   DWORD PTR [ebp+0xc]
6401db53:	call   DWORD PTR ds:0x64025028
6401db59:	test   eax,eax
6401db5b:	je     0x6401dbbd
6401db5d:	mov    DWORD PTR [ebp-0x20],ebx
6401db60:	jmp    0x6401dbbd
6401db62:	cmp    DWORD PTR [ebp-0x2c],edi
6401db65:	mov    ebx,DWORD PTR ds:0x64025028
6401db6b:	jne    0x6401db81
6401db6d:	push   edi
6401db6e:	push   edi
6401db6f:	push   edi
6401db70:	push   edi
6401db71:	push   esi
6401db72:	push   DWORD PTR [ebp-0x1c]
6401db75:	push   edi
6401db76:	push   DWORD PTR [ebp+0xc]
6401db79:	call   ebx
6401db7b:	mov    esi,eax
6401db7d:	cmp    esi,edi
6401db7f:	je     0x6401dbbd
6401db81:	push   esi
6401db82:	push   0x1
6401db84:	call   0x64016180
6401db89:	cmp    eax,edi
6401db8b:	pop    ecx
6401db8c:	pop    ecx
6401db8d:	mov    DWORD PTR [ebp-0x20],eax
6401db90:	je     0x6401dbbd
6401db92:	push   edi
6401db93:	push   edi
6401db94:	push   esi
6401db95:	push   eax
6401db96:	push   esi
6401db97:	push   DWORD PTR [ebp-0x1c]
6401db9a:	push   edi
6401db9b:	push   DWORD PTR [ebp+0xc]
6401db9e:	call   ebx
6401dba0:	cmp    eax,edi
6401dba2:	jne    0x6401dbb2
6401dba4:	push   DWORD PTR [ebp-0x20]
6401dba7:	call   0x64013d06
6401dbac:	pop    ecx
6401dbad:	mov    DWORD PTR [ebp-0x20],edi
6401dbb0:	jmp    0x6401dbbd
6401dbb2:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401dbb6:	je     0x6401dbbd
6401dbb8:	mov    ecx,DWORD PTR [ebp-0x30]
6401dbbb:	mov    DWORD PTR [ecx],eax
6401dbbd:	push   DWORD PTR [ebp-0x1c]
6401dbc0:	call   0x6401337c
6401dbc5:	pop    ecx
6401dbc6:	mov    eax,DWORD PTR [ebp-0x20]
6401dbc9:	lea    esp,[ebp-0x40]
6401dbcc:	pop    edi
6401dbcd:	pop    esi
6401dbce:	pop    ebx
6401dbcf:	mov    ecx,DWORD PTR [ebp-0x4]
6401dbd2:	xor    ecx,ebp
6401dbd4:	call   0x64012e6c
6401dbd9:	leave  
6401dbda:	ret    
6401dbdb:	push   0xc
6401dbdd:	push   0x6402a890
6401dbe2:	call   0x64014430
6401dbe7:	and    DWORD PTR [ebp-0x4],0x0
6401dbeb:	movapd xmm0,xmm1
6401dbef:	mov    DWORD PTR [ebp-0x1c],0x1
6401dbf6:	jmp    0x6401dc1b
6401dbf8:	mov    eax,DWORD PTR [ebp-0x14]
6401dbfb:	mov    eax,DWORD PTR [eax]
6401dbfd:	mov    eax,DWORD PTR [eax]
6401dbff:	cmp    eax,0xc0000005
6401dc04:	je     0x6401dc10
6401dc06:	cmp    eax,0xc000001d
6401dc0b:	je     0x6401dc10
6401dc0d:	xor    eax,eax
6401dc0f:	ret    
6401dc10:	xor    eax,eax
6401dc12:	inc    eax
6401dc13:	ret    
6401dc14:	mov    esp,DWORD PTR [ebp-0x18]
6401dc17:	and    DWORD PTR [ebp-0x1c],0x0
6401dc1b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401dc22:	mov    eax,DWORD PTR [ebp-0x1c]
6401dc25:	call   0x64014475
6401dc2a:	ret    
6401dc2b:	push   ebp
6401dc2c:	mov    ebp,esp
6401dc2e:	sub    esp,0x18
6401dc31:	xor    eax,eax
6401dc33:	push   ebx
6401dc34:	mov    DWORD PTR [ebp-0x4],eax
6401dc37:	mov    DWORD PTR [ebp-0xc],eax
6401dc3a:	mov    DWORD PTR [ebp-0x8],eax
6401dc3d:	push   ebx
6401dc3e:	pushf  
6401dc3f:	pop    eax
6401dc40:	mov    ecx,eax
6401dc42:	xor    eax,0x200000
6401dc47:	push   eax
6401dc48:	popf   
6401dc49:	pushf  
6401dc4a:	pop    edx
6401dc4b:	sub    edx,ecx
6401dc4d:	je     0x6401dc6e
6401dc4f:	push   ecx
6401dc50:	popf   
6401dc51:	xor    eax,eax
6401dc53:	cpuid  
6401dc55:	mov    DWORD PTR [ebp-0xc],eax
6401dc58:	mov    DWORD PTR [ebp-0x18],ebx
6401dc5b:	mov    DWORD PTR [ebp-0x14],edx
6401dc5e:	mov    DWORD PTR [ebp-0x10],ecx
6401dc61:	mov    eax,0x1
6401dc66:	cpuid  
6401dc68:	mov    DWORD PTR [ebp-0x4],edx
6401dc6b:	mov    DWORD PTR [ebp-0x8],eax
6401dc6e:	pop    ebx
6401dc6f:	test   DWORD PTR [ebp-0x4],0x4000000
6401dc76:	je     0x6401dc86
6401dc78:	call   0x6401dbdb
6401dc7d:	test   eax,eax
6401dc7f:	je     0x6401dc86
6401dc81:	xor    eax,eax
6401dc83:	inc    eax
6401dc84:	jmp    0x6401dc88
6401dc86:	xor    eax,eax
6401dc88:	pop    ebx
6401dc89:	leave  
6401dc8a:	ret    
6401dc8b:	call   0x6401dc2b
6401dc90:	mov    ds:0x64032604,eax
6401dc95:	xor    eax,eax
6401dc97:	ret    
6401dc98:	push   ebp
6401dc99:	mov    ebp,esp
6401dc9b:	sub    esp,0x10
6401dc9e:	push   DWORD PTR [ebp+0x8]
6401dca1:	lea    ecx,[ebp-0x10]
6401dca4:	call   0x6401300f
6401dca9:	movzx  eax,BYTE PTR [ebp+0xc]
6401dcad:	mov    ecx,DWORD PTR [ebp-0xc]
6401dcb0:	mov    dl,BYTE PTR [ebp+0x14]
6401dcb3:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401dcb7:	jne    0x6401dcd7
6401dcb9:	cmp    DWORD PTR [ebp+0x10],0x0
6401dcbd:	je     0x6401dcd1
6401dcbf:	mov    ecx,DWORD PTR [ebp-0x10]
6401dcc2:	mov    ecx,DWORD PTR [ecx+0xc8]
6401dcc8:	movzx  eax,WORD PTR [ecx+eax*2]
6401dccc:	and    eax,DWORD PTR [ebp+0x10]
6401dccf:	jmp    0x6401dcd3
6401dcd1:	xor    eax,eax
6401dcd3:	test   eax,eax
6401dcd5:	je     0x6401dcda
6401dcd7:	xor    eax,eax
6401dcd9:	inc    eax
6401dcda:	cmp    BYTE PTR [ebp-0x4],0x0
6401dcde:	je     0x6401dce7
6401dce0:	mov    ecx,DWORD PTR [ebp-0x8]
6401dce3:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401dce7:	leave  
6401dce8:	ret    
6401dce9:	push   0x4
6401dceb:	push   0x0
6401dced:	push   DWORD PTR [esp+0xc]
6401dcf1:	push   0x0
6401dcf3:	call   0x6401dc98
6401dcf8:	add    esp,0x10
6401dcfb:	ret    
6401dcfc:	push   ebp
6401dcfd:	mov    ebp,esp
6401dcff:	sub    esp,0x10
6401dd02:	push   ebx
6401dd03:	push   esi
6401dd04:	mov    esi,DWORD PTR [ebp+0xc]
6401dd07:	xor    ebx,ebx
6401dd09:	cmp    esi,ebx
6401dd0b:	push   edi
6401dd0c:	mov    edi,DWORD PTR [ebp+0x10]
6401dd0f:	jne    0x6401dd22
6401dd11:	cmp    edi,ebx
6401dd13:	jbe    0x6401dd22
6401dd15:	mov    eax,DWORD PTR [ebp+0x8]
6401dd18:	cmp    eax,ebx
6401dd1a:	je     0x6401dd1e
6401dd1c:	mov    DWORD PTR [eax],ebx
6401dd1e:	xor    eax,eax
6401dd20:	jmp    0x6401dda1
6401dd22:	mov    eax,DWORD PTR [ebp+0x8]
6401dd25:	cmp    eax,ebx
6401dd27:	je     0x6401dd2c
6401dd29:	or     DWORD PTR [eax],0xffffffff
6401dd2c:	cmp    edi,0x7fffffff
6401dd32:	jbe    0x6401dd4f
6401dd34:	call   0x64014c30
6401dd39:	push   0x16
6401dd3b:	pop    esi
6401dd3c:	push   ebx
6401dd3d:	push   ebx
6401dd3e:	push   ebx
6401dd3f:	push   ebx
6401dd40:	push   ebx
6401dd41:	mov    DWORD PTR [eax],esi
6401dd43:	call   0x640129a4
6401dd48:	add    esp,0x14
6401dd4b:	mov    eax,esi
6401dd4d:	jmp    0x6401dda1
6401dd4f:	push   DWORD PTR [ebp+0x18]
6401dd52:	lea    ecx,[ebp-0x10]
6401dd55:	call   0x6401300f
6401dd5a:	mov    eax,DWORD PTR [ebp-0x10]
6401dd5d:	cmp    DWORD PTR [eax+0x14],ebx
6401dd60:	jne    0x6401ddfa
6401dd66:	mov    ax,WORD PTR [ebp+0x14]
6401dd6a:	cmp    ax,0xff
6401dd6e:	jbe    0x6401dda6
6401dd70:	cmp    esi,ebx
6401dd72:	je     0x6401dd83
6401dd74:	cmp    edi,ebx
6401dd76:	jbe    0x6401dd83
6401dd78:	push   edi
6401dd79:	push   ebx
6401dd7a:	push   esi
6401dd7b:	call   0x64013570
6401dd80:	add    esp,0xc
6401dd83:	call   0x64014c30
6401dd88:	mov    DWORD PTR [eax],0x2a
6401dd8e:	call   0x64014c30
6401dd93:	cmp    BYTE PTR [ebp-0x4],bl
6401dd96:	mov    eax,DWORD PTR [eax]
6401dd98:	je     0x6401dda1
6401dd9a:	mov    ecx,DWORD PTR [ebp-0x8]
6401dd9d:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401dda1:	pop    edi
6401dda2:	pop    esi
6401dda3:	pop    ebx
6401dda4:	leave  
6401dda5:	ret    
6401dda6:	cmp    esi,ebx
6401dda8:	je     0x6401ddd8
6401ddaa:	cmp    edi,ebx
6401ddac:	ja     0x6401ddd6
6401ddae:	call   0x64014c30
6401ddb3:	push   0x22
6401ddb5:	pop    esi
6401ddb6:	push   ebx
6401ddb7:	push   ebx
6401ddb8:	push   ebx
6401ddb9:	push   ebx
6401ddba:	push   ebx
6401ddbb:	mov    DWORD PTR [eax],esi
6401ddbd:	call   0x640129a4
6401ddc2:	add    esp,0x14
6401ddc5:	cmp    BYTE PTR [ebp-0x4],bl
6401ddc8:	je     0x6401dd4b
6401ddca:	mov    eax,DWORD PTR [ebp-0x8]
6401ddcd:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ddd1:	jmp    0x6401dd4b
6401ddd6:	mov    BYTE PTR [esi],al
6401ddd8:	mov    eax,DWORD PTR [ebp+0x8]
6401dddb:	cmp    eax,ebx
6401dddd:	je     0x6401dde5
6401dddf:	mov    DWORD PTR [eax],0x1
6401dde5:	cmp    BYTE PTR [ebp-0x4],bl
6401dde8:	je     0x6401dd1e
6401ddee:	mov    eax,DWORD PTR [ebp-0x8]
6401ddf1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ddf5:	jmp    0x6401dd1e
6401ddfa:	lea    ecx,[ebp+0xc]
6401ddfd:	push   ecx
6401ddfe:	push   ebx
6401ddff:	push   edi
6401de00:	push   esi
6401de01:	push   0x1
6401de03:	lea    ecx,[ebp+0x14]
6401de06:	push   ecx
6401de07:	push   ebx
6401de08:	mov    DWORD PTR [ebp+0xc],ebx
6401de0b:	push   DWORD PTR [eax+0x4]
6401de0e:	call   DWORD PTR ds:0x64025028
6401de14:	cmp    eax,ebx
6401de16:	je     0x6401de2c
6401de18:	cmp    DWORD PTR [ebp+0xc],ebx
6401de1b:	jne    0x6401dd83
6401de21:	mov    ecx,DWORD PTR [ebp+0x8]
6401de24:	cmp    ecx,ebx
6401de26:	je     0x6401dde5
6401de28:	mov    DWORD PTR [ecx],eax
6401de2a:	jmp    0x6401dde5
6401de2c:	call   DWORD PTR ds:0x64025044
6401de32:	cmp    eax,0x7a
6401de35:	jne    0x6401dd83
6401de3b:	cmp    esi,ebx
6401de3d:	je     0x6401ddae
6401de43:	cmp    edi,ebx
6401de45:	jbe    0x6401ddae
6401de4b:	push   edi
6401de4c:	push   ebx
6401de4d:	push   esi
6401de4e:	call   0x64013570
6401de53:	add    esp,0xc
6401de56:	jmp    0x6401ddae
6401de5b:	push   0x0
6401de5d:	push   DWORD PTR [esp+0x14]
6401de61:	push   DWORD PTR [esp+0x14]
6401de65:	push   DWORD PTR [esp+0x14]
6401de69:	push   DWORD PTR [esp+0x14]
6401de6d:	call   0x6401dcfc
6401de72:	add    esp,0x14
6401de75:	ret    
6401de76:	push   ebp
6401de77:	mov    ebp,esp
6401de79:	sub    esp,0x20
6401de7c:	push   ebx
6401de7d:	push   esi
6401de7e:	push   edi
6401de7f:	call   0x64014d56
6401de84:	xor    ebx,ebx
6401de86:	cmp    DWORD PTR ds:0x6402ef5c,ebx
6401de8c:	mov    DWORD PTR [ebp-0x8],eax
6401de8f:	mov    DWORD PTR [ebp-0x4],ebx
6401de92:	mov    DWORD PTR [ebp-0xc],ebx
6401de95:	mov    DWORD PTR [ebp-0x10],ebx
6401de98:	jne    0x6401df4c
6401de9e:	push   0x64027580
6401dea3:	call   DWORD PTR ds:0x640250c4
6401dea9:	mov    edi,eax
6401deab:	cmp    edi,ebx
6401dead:	je     0x6401e02c
6401deb3:	mov    esi,DWORD PTR ds:0x64025014
6401deb9:	push   0x64027574
6401debe:	push   edi
6401debf:	call   esi
6401dec1:	cmp    eax,ebx
6401dec3:	je     0x6401e02c
6401dec9:	push   eax
6401deca:	call   0x64014ce8
6401decf:	mov    DWORD PTR [esp],0x64027564
6401ded6:	push   edi
6401ded7:	mov    ds:0x6402ef5c,eax
6401dedc:	call   esi
6401dede:	push   eax
6401dedf:	call   0x64014ce8
6401dee4:	mov    DWORD PTR [esp],0x64027550
6401deeb:	push   edi
6401deec:	mov    ds:0x6402ef60,eax
6401def1:	call   esi
6401def3:	push   eax
6401def4:	call   0x64014ce8
6401def9:	mov    ds:0x6402ef64,eax
6401defe:	lea    eax,[ebp-0xc]
6401df01:	push   eax
6401df02:	call   0x6401635f
6401df07:	test   eax,eax
6401df09:	pop    ecx
6401df0a:	pop    ecx
6401df0b:	je     0x6401df1a
6401df0d:	push   ebx
6401df0e:	push   ebx
6401df0f:	push   ebx
6401df10:	push   ebx
6401df11:	push   ebx
6401df12:	call   0x640128a8
6401df17:	add    esp,0x14
6401df1a:	cmp    DWORD PTR [ebp-0xc],0x2
6401df1e:	jne    0x6401df4c
6401df20:	push   0x64027534
6401df25:	push   edi
6401df26:	call   esi
6401df28:	push   eax
6401df29:	call   0x64014ce8
6401df2e:	cmp    eax,ebx
6401df30:	pop    ecx
6401df31:	mov    ds:0x6402ef6c,eax
6401df36:	je     0x6401df4c
6401df38:	push   0x6402751c
6401df3d:	push   edi
6401df3e:	call   esi
6401df40:	push   eax
6401df41:	call   0x64014ce8
6401df46:	pop    ecx
6401df47:	mov    ds:0x6402ef68,eax
6401df4c:	mov    eax,ds:0x6402ef68
6401df51:	mov    ecx,DWORD PTR [ebp-0x8]
6401df54:	cmp    eax,ecx
6401df56:	je     0x6401dfd1
6401df58:	cmp    DWORD PTR ds:0x6402ef6c,ecx
6401df5e:	je     0x6401dfd1
6401df60:	push   eax
6401df61:	call   0x64014d5f
6401df66:	push   DWORD PTR ds:0x6402ef6c
6401df6c:	mov    esi,eax
6401df6e:	call   0x64014d5f
6401df73:	cmp    esi,ebx
6401df75:	pop    ecx
6401df76:	pop    ecx
6401df77:	mov    edi,eax
6401df79:	je     0x6401dfd1
6401df7b:	cmp    edi,ebx
6401df7d:	je     0x6401dfd1
6401df7f:	call   esi
6401df81:	cmp    eax,ebx
6401df83:	je     0x6401df9e
6401df85:	lea    ecx,[ebp-0x14]
6401df88:	push   ecx
6401df89:	push   0xc
6401df8b:	lea    ecx,[ebp-0x20]
6401df8e:	push   ecx
6401df8f:	push   0x1
6401df91:	push   eax
6401df92:	call   edi
6401df94:	test   eax,eax
6401df96:	je     0x6401df9e
6401df98:	test   BYTE PTR [ebp-0x18],0x1
6401df9c:	jne    0x6401dfd1
6401df9e:	lea    eax,[ebp-0x10]
6401dfa1:	push   eax
6401dfa2:	call   0x64016396
6401dfa7:	test   eax,eax
6401dfa9:	pop    ecx
6401dfaa:	je     0x6401dfb9
6401dfac:	push   ebx
6401dfad:	push   ebx
6401dfae:	push   ebx
6401dfaf:	push   ebx
6401dfb0:	push   ebx
6401dfb1:	call   0x640128a8
6401dfb6:	add    esp,0x14
6401dfb9:	cmp    DWORD PTR [ebp-0x10],0x4
6401dfbd:	jb     0x6401dfc8
6401dfbf:	or     DWORD PTR [ebp+0x10],0x200000
6401dfc6:	jmp    0x6401e00c
6401dfc8:	or     DWORD PTR [ebp+0x10],0x40000
6401dfcf:	jmp    0x6401e00c
6401dfd1:	mov    eax,ds:0x6402ef60
6401dfd6:	cmp    eax,DWORD PTR [ebp-0x8]
6401dfd9:	je     0x6401e00c
6401dfdb:	push   eax
6401dfdc:	call   0x64014d5f
6401dfe1:	cmp    eax,ebx
6401dfe3:	pop    ecx
6401dfe4:	je     0x6401e00c
6401dfe6:	call   eax
6401dfe8:	cmp    eax,ebx
6401dfea:	mov    DWORD PTR [ebp-0x4],eax
6401dfed:	je     0x6401e00c
6401dfef:	mov    eax,ds:0x6402ef64
6401dff4:	cmp    eax,DWORD PTR [ebp-0x8]
6401dff7:	je     0x6401e00c
6401dff9:	push   eax
6401dffa:	call   0x64014d5f
6401dfff:	cmp    eax,ebx
6401e001:	pop    ecx
6401e002:	je     0x6401e00c
6401e004:	push   DWORD PTR [ebp-0x4]
6401e007:	call   eax
6401e009:	mov    DWORD PTR [ebp-0x4],eax
6401e00c:	push   DWORD PTR ds:0x6402ef5c
6401e012:	call   0x64014d5f
6401e017:	cmp    eax,ebx
6401e019:	pop    ecx
6401e01a:	je     0x6401e02c
6401e01c:	push   DWORD PTR [ebp+0x10]
6401e01f:	push   DWORD PTR [ebp+0xc]
6401e022:	push   DWORD PTR [ebp+0x8]
6401e025:	push   DWORD PTR [ebp-0x4]
6401e028:	call   eax
6401e02a:	jmp    0x6401e02e
6401e02c:	xor    eax,eax
6401e02e:	pop    edi
6401e02f:	pop    esi
6401e030:	pop    ebx
6401e031:	leave  
6401e032:	ret    
6401e033:	mov    ecx,DWORD PTR [esp+0x4]
6401e037:	push   esi
6401e038:	xor    esi,esi
6401e03a:	cmp    ecx,esi
6401e03c:	jl     0x6401e05c
6401e03e:	cmp    ecx,0x2
6401e041:	jle    0x6401e04f
6401e043:	cmp    ecx,0x3
6401e046:	jne    0x6401e05c
6401e048:	mov    eax,ds:0x6402e57c
6401e04d:	pop    esi
6401e04e:	ret    
6401e04f:	mov    eax,ds:0x6402e57c
6401e054:	mov    DWORD PTR ds:0x6402e57c,ecx
6401e05a:	pop    esi
6401e05b:	ret    
6401e05c:	call   0x64014c30
6401e061:	push   esi
6401e062:	push   esi
6401e063:	push   esi
6401e064:	push   esi
6401e065:	push   esi
6401e066:	mov    DWORD PTR [eax],0x16
6401e06c:	call   0x640129a4
6401e071:	add    esp,0x14
6401e074:	or     eax,0xffffffff
6401e077:	pop    esi
6401e078:	ret    
6401e079:	int3   
6401e07a:	int3   
6401e07b:	int3   
6401e07c:	int3   
6401e07d:	int3   
6401e07e:	int3   
6401e07f:	int3   
6401e080:	mov    eax,DWORD PTR [esp+0x8]
6401e084:	mov    ecx,DWORD PTR [esp+0x10]
6401e088:	or     ecx,eax
6401e08a:	mov    ecx,DWORD PTR [esp+0xc]
6401e08e:	jne    0x6401e099
6401e090:	mov    eax,DWORD PTR [esp+0x4]
6401e094:	mul    ecx
6401e096:	ret    0x10
6401e099:	push   ebx
6401e09a:	mul    ecx
6401e09c:	mov    ebx,eax
6401e09e:	mov    eax,DWORD PTR [esp+0x8]
6401e0a2:	mul    DWORD PTR [esp+0x14]
6401e0a6:	add    ebx,eax
6401e0a8:	mov    eax,DWORD PTR [esp+0x8]
6401e0ac:	mul    ecx
6401e0ae:	add    edx,ebx
6401e0b0:	pop    ebx
6401e0b1:	ret    0x10
6401e0b4:	push   0xa
6401e0b6:	push   0x0
6401e0b8:	push   DWORD PTR [esp+0xc]
6401e0bc:	call   0x6401e905
6401e0c1:	add    esp,0xc
6401e0c4:	ret    
6401e0c5:	push   0x2
6401e0c7:	call   0x640162b6
6401e0cc:	pop    ecx
6401e0cd:	ret    
6401e0ce:	mov    ecx,DWORD PTR [esp+0x4]
6401e0d2:	push   ebx
6401e0d3:	xor    ebx,ebx
6401e0d5:	cmp    ecx,ebx
6401e0d7:	push   esi
6401e0d8:	push   edi
6401e0d9:	jl     0x6401e136
6401e0db:	cmp    ecx,DWORD PTR ds:0x640324e0
6401e0e1:	jae    0x6401e136
6401e0e3:	mov    eax,ecx
6401e0e5:	sar    eax,0x5
6401e0e8:	mov    esi,ecx
6401e0ea:	lea    edi,[eax*4+0x64032500]
6401e0f1:	mov    eax,DWORD PTR [edi]
6401e0f3:	and    esi,0x1f
6401e0f6:	shl    esi,0x6
6401e0f9:	add    eax,esi
6401e0fb:	test   BYTE PTR [eax+0x4],0x1
6401e0ff:	je     0x6401e136
6401e101:	cmp    DWORD PTR [eax],0xffffffff
6401e104:	je     0x6401e136
6401e106:	cmp    DWORD PTR ds:0x6402e580,0x1
6401e10d:	jne    0x6401e12c
6401e10f:	sub    ecx,ebx
6401e111:	je     0x6401e123
6401e113:	dec    ecx
6401e114:	je     0x6401e11e
6401e116:	dec    ecx
6401e117:	jne    0x6401e12c
6401e119:	push   ebx
6401e11a:	push   0xfffffff4
6401e11c:	jmp    0x6401e126
6401e11e:	push   ebx
6401e11f:	push   0xfffffff5
6401e121:	jmp    0x6401e126
6401e123:	push   ebx
6401e124:	push   0xfffffff6
6401e126:	call   DWORD PTR ds:0x64025090
6401e12c:	mov    eax,DWORD PTR [edi]
6401e12e:	or     DWORD PTR [esi+eax*1],0xffffffff
6401e132:	xor    eax,eax
6401e134:	jmp    0x6401e14b
6401e136:	call   0x64014c30
6401e13b:	mov    DWORD PTR [eax],0x9
6401e141:	call   0x64014c43
6401e146:	mov    DWORD PTR [eax],ebx
6401e148:	or     eax,0xffffffff
6401e14b:	pop    edi
6401e14c:	pop    esi
6401e14d:	pop    ebx
6401e14e:	ret    
6401e14f:	mov    eax,DWORD PTR [esp+0x4]
6401e153:	cmp    eax,0xfffffffe
6401e156:	jne    0x6401e16f
6401e158:	call   0x64014c43
6401e15d:	and    DWORD PTR [eax],0x0
6401e160:	call   0x64014c30
6401e165:	mov    DWORD PTR [eax],0x9
6401e16b:	or     eax,0xffffffff
6401e16e:	ret    
6401e16f:	push   esi
6401e170:	xor    esi,esi
6401e172:	cmp    eax,esi
6401e174:	jl     0x6401e198
6401e176:	cmp    eax,DWORD PTR ds:0x640324e0
6401e17c:	jae    0x6401e198
6401e17e:	mov    ecx,eax
6401e180:	and    eax,0x1f
6401e183:	sar    ecx,0x5
6401e186:	mov    ecx,DWORD PTR [ecx*4+0x64032500]
6401e18d:	shl    eax,0x6
6401e190:	add    eax,ecx
6401e192:	test   BYTE PTR [eax+0x4],0x1
6401e196:	jne    0x6401e1bc
6401e198:	call   0x64014c43
6401e19d:	mov    DWORD PTR [eax],esi
6401e19f:	call   0x64014c30
6401e1a4:	push   esi
6401e1a5:	push   esi
6401e1a6:	push   esi
6401e1a7:	push   esi
6401e1a8:	push   esi
6401e1a9:	mov    DWORD PTR [eax],0x9
6401e1af:	call   0x640129a4
6401e1b4:	add    esp,0x14
6401e1b7:	or     eax,0xffffffff
6401e1ba:	pop    esi
6401e1bb:	ret    
6401e1bc:	mov    eax,DWORD PTR [eax]
6401e1be:	pop    esi
6401e1bf:	ret    
6401e1c0:	push   0xc
6401e1c2:	push   0x6402a8b0
6401e1c7:	call   0x64014430
6401e1cc:	mov    edi,DWORD PTR [ebp+0x8]
6401e1cf:	mov    eax,edi
6401e1d1:	sar    eax,0x5
6401e1d4:	mov    esi,edi
6401e1d6:	and    esi,0x1f
6401e1d9:	shl    esi,0x6
6401e1dc:	add    esi,DWORD PTR [eax*4+0x64032500]
6401e1e3:	mov    DWORD PTR [ebp-0x1c],0x1
6401e1ea:	xor    ebx,ebx
6401e1ec:	cmp    DWORD PTR [esi+0x8],ebx
6401e1ef:	jne    0x6401e227
6401e1f1:	push   0xa
6401e1f3:	call   0x6401a43a
6401e1f8:	pop    ecx
6401e1f9:	mov    DWORD PTR [ebp-0x4],ebx
6401e1fc:	cmp    DWORD PTR [esi+0x8],ebx
6401e1ff:	jne    0x6401e21b
6401e201:	push   0xfa0
6401e206:	lea    eax,[esi+0xc]
6401e209:	push   eax
6401e20a:	call   0x6401baf8
6401e20f:	pop    ecx
6401e210:	pop    ecx
6401e211:	test   eax,eax
6401e213:	jne    0x6401e218
6401e215:	mov    DWORD PTR [ebp-0x1c],ebx
6401e218:	inc    DWORD PTR [esi+0x8]
6401e21b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e222:	call   0x6401e257
6401e227:	cmp    DWORD PTR [ebp-0x1c],ebx
6401e22a:	je     0x6401e249
6401e22c:	mov    eax,edi
6401e22e:	sar    eax,0x5
6401e231:	and    edi,0x1f
6401e234:	shl    edi,0x6
6401e237:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401e23e:	lea    eax,[eax+edi*1+0xc]
6401e242:	push   eax
6401e243:	call   DWORD PTR ds:0x64025098
6401e249:	mov    eax,DWORD PTR [ebp-0x1c]
6401e24c:	call   0x64014475
6401e251:	ret    
6401e252:	xor    ebx,ebx
6401e254:	mov    edi,DWORD PTR [ebp+0x8]
6401e257:	push   0xa
6401e259:	call   0x6401a362
6401e25e:	pop    ecx
6401e25f:	ret    
6401e260:	mov    eax,DWORD PTR [esp+0x4]
6401e264:	mov    ecx,eax
6401e266:	and    eax,0x1f
6401e269:	sar    ecx,0x5
6401e26c:	mov    ecx,DWORD PTR [ecx*4+0x64032500]
6401e273:	shl    eax,0x6
6401e276:	lea    eax,[ecx+eax*1+0xc]
6401e27a:	push   eax
6401e27b:	call   DWORD PTR ds:0x6402509c
6401e281:	ret    
6401e282:	push   ebp
6401e283:	mov    ebp,esp
6401e285:	sub    esp,0x10
6401e288:	mov    eax,ds:0x6402d09c
6401e28d:	xor    eax,ebp
6401e28f:	mov    DWORD PTR [ebp-0x4],eax
6401e292:	push   esi
6401e293:	xor    esi,esi
6401e295:	cmp    DWORD PTR ds:0x6402dfb0,esi
6401e29b:	je     0x6401e2eb
6401e29d:	cmp    DWORD PTR ds:0x6402e024,0xfffffffe
6401e2a4:	jne    0x6401e2ab
6401e2a6:	call   0x6401e991
6401e2ab:	mov    eax,ds:0x6402e024
6401e2b0:	cmp    eax,0xffffffff
6401e2b3:	jne    0x6401e2bb
6401e2b5:	or     ax,0xffff
6401e2b9:	jmp    0x6401e32b
6401e2bb:	push   esi
6401e2bc:	lea    ecx,[ebp-0x10]
6401e2bf:	push   ecx
6401e2c0:	push   0x1
6401e2c2:	lea    ecx,[ebp+0x8]
6401e2c5:	push   ecx
6401e2c6:	push   eax
6401e2c7:	call   DWORD PTR ds:0x640250ac
6401e2cd:	test   eax,eax
6401e2cf:	jne    0x6401e338
6401e2d1:	cmp    DWORD PTR ds:0x6402dfb0,0x2
6401e2d8:	jne    0x6401e2b5
6401e2da:	call   DWORD PTR ds:0x64025044
6401e2e0:	cmp    eax,0x78
6401e2e3:	jne    0x6401e2b5
6401e2e5:	mov    DWORD PTR ds:0x6402dfb0,esi
6401e2eb:	push   esi
6401e2ec:	push   esi
6401e2ed:	push   0x5
6401e2ef:	lea    eax,[ebp-0xc]
6401e2f2:	push   eax
6401e2f3:	push   0x1
6401e2f5:	lea    eax,[ebp+0x8]
6401e2f8:	push   eax
6401e2f9:	push   esi
6401e2fa:	call   DWORD PTR ds:0x640250a8
6401e300:	push   eax
6401e301:	call   DWORD PTR ds:0x64025028
6401e307:	mov    ecx,DWORD PTR ds:0x6402e024
6401e30d:	cmp    ecx,0xffffffff
6401e310:	je     0x6401e2b5
6401e312:	push   esi
6401e313:	lea    edx,[ebp-0x10]
6401e316:	push   edx
6401e317:	push   eax
6401e318:	lea    eax,[ebp-0xc]
6401e31b:	push   eax
6401e31c:	push   ecx
6401e31d:	call   DWORD PTR ds:0x640250a4
6401e323:	test   eax,eax
6401e325:	je     0x6401e2b5
6401e327:	mov    ax,WORD PTR [ebp+0x8]
6401e32b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e32e:	xor    ecx,ebp
6401e330:	pop    esi
6401e331:	call   0x64012e6c
6401e336:	leave  
6401e337:	ret    
6401e338:	mov    DWORD PTR ds:0x6402dfb0,0x1
6401e342:	jmp    0x6401e327
6401e344:	push   0x10
6401e346:	push   0x6402a8d0
6401e34b:	call   0x64014430
6401e350:	xor    ebx,ebx
6401e352:	mov    DWORD PTR [ebp-0x1c],ebx
6401e355:	push   0x1
6401e357:	call   0x6401a43a
6401e35c:	pop    ecx
6401e35d:	mov    DWORD PTR [ebp-0x4],ebx
6401e360:	push   0x3
6401e362:	pop    edi
6401e363:	mov    DWORD PTR [ebp-0x20],edi
6401e366:	cmp    edi,DWORD PTR ds:0x640324c0
6401e36c:	jge    0x6401e3c5
6401e36e:	mov    esi,edi
6401e370:	shl    esi,0x2
6401e373:	mov    eax,ds:0x640314b4
6401e378:	add    eax,esi
6401e37a:	cmp    DWORD PTR [eax],ebx
6401e37c:	je     0x6401e3c2
6401e37e:	mov    eax,DWORD PTR [eax]
6401e380:	test   BYTE PTR [eax+0xc],0x83
6401e384:	je     0x6401e395
6401e386:	push   eax
6401e387:	call   0x6401ea4f
6401e38c:	pop    ecx
6401e38d:	cmp    eax,0xffffffff
6401e390:	je     0x6401e395
6401e392:	inc    DWORD PTR [ebp-0x1c]
6401e395:	cmp    edi,0x14
6401e398:	jl     0x6401e3c2
6401e39a:	mov    eax,ds:0x640314b4
6401e39f:	mov    eax,DWORD PTR [esi+eax*1]
6401e3a2:	add    eax,0x20
6401e3a5:	push   eax
6401e3a6:	call   DWORD PTR ds:0x640250a0
6401e3ac:	mov    eax,ds:0x640314b4
6401e3b1:	push   DWORD PTR [esi+eax*1]
6401e3b4:	call   0x64013d06
6401e3b9:	pop    ecx
6401e3ba:	mov    eax,ds:0x640314b4
6401e3bf:	mov    DWORD PTR [esi+eax*1],ebx
6401e3c2:	inc    edi
6401e3c3:	jmp    0x6401e363
6401e3c5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e3cc:	call   0x6401e3da
6401e3d1:	mov    eax,DWORD PTR [ebp-0x1c]
6401e3d4:	call   0x64014475
6401e3d9:	ret    
6401e3da:	push   0x1
6401e3dc:	call   0x6401a362
6401e3e1:	pop    ecx
6401e3e2:	ret    
6401e3e3:	push   ebx
6401e3e4:	push   esi
6401e3e5:	mov    esi,DWORD PTR [esp+0xc]
6401e3e9:	mov    eax,DWORD PTR [esi+0xc]
6401e3ec:	mov    ecx,eax
6401e3ee:	and    cl,0x3
6401e3f1:	xor    ebx,ebx
6401e3f3:	cmp    cl,0x2
6401e3f6:	jne    0x6401e437
6401e3f8:	test   ax,0x108
6401e3fc:	je     0x6401e437
6401e3fe:	mov    eax,DWORD PTR [esi+0x8]
6401e401:	push   edi
6401e402:	mov    edi,DWORD PTR [esi]
6401e404:	sub    edi,eax
6401e406:	test   edi,edi
6401e408:	jle    0x6401e436
6401e40a:	push   edi
6401e40b:	push   eax
6401e40c:	push   esi
6401e40d:	call   0x6401cc9d
6401e412:	pop    ecx
6401e413:	push   eax
6401e414:	call   0x6401c97e
6401e419:	add    esp,0xc
6401e41c:	cmp    eax,edi
6401e41e:	jne    0x6401e42f
6401e420:	mov    eax,DWORD PTR [esi+0xc]
6401e423:	test   al,al
6401e425:	jns    0x6401e436
6401e427:	and    eax,0xfffffffd
6401e42a:	mov    DWORD PTR [esi+0xc],eax
6401e42d:	jmp    0x6401e436
6401e42f:	or     DWORD PTR [esi+0xc],0x20
6401e433:	or     ebx,0xffffffff
6401e436:	pop    edi
6401e437:	mov    eax,DWORD PTR [esi+0x8]
6401e43a:	and    DWORD PTR [esi+0x4],0x0
6401e43e:	mov    DWORD PTR [esi],eax
6401e440:	pop    esi
6401e441:	mov    eax,ebx
6401e443:	pop    ebx
6401e444:	ret    
6401e445:	push   esi
6401e446:	mov    esi,DWORD PTR [esp+0x8]
6401e44a:	test   esi,esi
6401e44c:	jne    0x6401e457
6401e44e:	push   esi
6401e44f:	call   0x6401e487
6401e454:	pop    ecx
6401e455:	pop    esi
6401e456:	ret    
6401e457:	push   esi
6401e458:	call   0x6401e3e3
6401e45d:	test   eax,eax
6401e45f:	pop    ecx
6401e460:	je     0x6401e467
6401e462:	or     eax,0xffffffff
6401e465:	pop    esi
6401e466:	ret    
6401e467:	test   WORD PTR [esi+0xc],0x4000
6401e46d:	je     0x6401e483
6401e46f:	push   esi
6401e470:	call   0x6401cc9d
6401e475:	push   eax
6401e476:	call   0x6401eacb
6401e47b:	pop    ecx
6401e47c:	pop    ecx
6401e47d:	neg    eax
6401e47f:	sbb    eax,eax
6401e481:	pop    esi
6401e482:	ret    
6401e483:	xor    eax,eax
6401e485:	pop    esi
6401e486:	ret    
6401e487:	push   0x14
6401e489:	push   0x6402a8f0
6401e48e:	call   0x64014430
6401e493:	xor    edi,edi
6401e495:	mov    DWORD PTR [ebp-0x1c],edi
6401e498:	mov    DWORD PTR [ebp-0x24],edi
6401e49b:	push   0x1
6401e49d:	call   0x6401a43a
6401e4a2:	pop    ecx
6401e4a3:	mov    DWORD PTR [ebp-0x4],edi
6401e4a6:	xor    esi,esi
6401e4a8:	mov    DWORD PTR [ebp-0x20],esi
6401e4ab:	cmp    esi,DWORD PTR ds:0x640324c0
6401e4b1:	jge    0x6401e53a
6401e4b7:	mov    eax,ds:0x640314b4
6401e4bc:	lea    eax,[eax+esi*4]
6401e4bf:	cmp    DWORD PTR [eax],edi
6401e4c1:	je     0x6401e521
6401e4c3:	mov    eax,DWORD PTR [eax]
6401e4c5:	test   BYTE PTR [eax+0xc],0x83
6401e4c9:	je     0x6401e521
6401e4cb:	push   eax
6401e4cc:	push   esi
6401e4cd:	call   0x6401cc0f
6401e4d2:	pop    ecx
6401e4d3:	pop    ecx
6401e4d4:	xor    edx,edx
6401e4d6:	inc    edx
6401e4d7:	mov    DWORD PTR [ebp-0x4],edx
6401e4da:	mov    eax,ds:0x640314b4
6401e4df:	mov    eax,DWORD PTR [eax+esi*4]
6401e4e2:	mov    ecx,DWORD PTR [eax+0xc]
6401e4e5:	test   cl,0x83
6401e4e8:	je     0x6401e519
6401e4ea:	cmp    DWORD PTR [ebp+0x8],edx
6401e4ed:	jne    0x6401e500
6401e4ef:	push   eax
6401e4f0:	call   0x6401e445
6401e4f5:	pop    ecx
6401e4f6:	cmp    eax,0xffffffff
6401e4f9:	je     0x6401e519
6401e4fb:	inc    DWORD PTR [ebp-0x1c]
6401e4fe:	jmp    0x6401e519
6401e500:	cmp    DWORD PTR [ebp+0x8],edi
6401e503:	jne    0x6401e519
6401e505:	test   cl,0x2
6401e508:	je     0x6401e519
6401e50a:	push   eax
6401e50b:	call   0x6401e445
6401e510:	pop    ecx
6401e511:	cmp    eax,0xffffffff
6401e514:	jne    0x6401e519
6401e516:	or     DWORD PTR [ebp-0x24],eax
6401e519:	mov    DWORD PTR [ebp-0x4],edi
6401e51c:	call   0x6401e529
6401e521:	inc    esi
6401e522:	jmp    0x6401e4a8
6401e524:	xor    edi,edi
6401e526:	mov    esi,DWORD PTR [ebp-0x20]
6401e529:	mov    eax,ds:0x640314b4
6401e52e:	push   DWORD PTR [eax+esi*4]
6401e531:	push   esi
6401e532:	call   0x6401cc73
6401e537:	pop    ecx
6401e538:	pop    ecx
6401e539:	ret    
6401e53a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e541:	call   0x6401e558
6401e546:	cmp    DWORD PTR [ebp+0x8],0x1
6401e54a:	mov    eax,DWORD PTR [ebp-0x1c]
6401e54d:	je     0x6401e552
6401e54f:	mov    eax,DWORD PTR [ebp-0x24]
6401e552:	call   0x64014475
6401e557:	ret    
6401e558:	push   0x1
6401e55a:	call   0x6401a362
6401e55f:	pop    ecx
6401e560:	ret    
6401e561:	push   0x1
6401e563:	call   0x6401e487
6401e568:	pop    ecx
6401e569:	ret    
6401e56a:	push   ebp
6401e56b:	mov    ebp,esp
6401e56d:	push   ecx
6401e56e:	push   esi
6401e56f:	mov    esi,DWORD PTR [ebp+0xc]
6401e572:	push   esi
6401e573:	call   0x6401cc9d
6401e578:	mov    DWORD PTR [ebp+0xc],eax
6401e57b:	mov    eax,DWORD PTR [esi+0xc]
6401e57e:	test   al,0x82
6401e580:	pop    ecx
6401e581:	jne    0x6401e59c
6401e583:	call   0x64014c30
6401e588:	mov    DWORD PTR [eax],0x9
6401e58e:	or     DWORD PTR [esi+0xc],0x20
6401e592:	mov    eax,0xffff
6401e597:	jmp    0x6401e6d7
6401e59c:	test   al,0x40
6401e59e:	je     0x6401e5ad
6401e5a0:	call   0x64014c30
6401e5a5:	mov    DWORD PTR [eax],0x22
6401e5ab:	jmp    0x6401e58e
6401e5ad:	test   al,0x1
6401e5af:	je     0x6401e5c8
6401e5b1:	and    DWORD PTR [esi+0x4],0x0
6401e5b5:	test   al,0x10
6401e5b7:	je     0x6401e648
6401e5bd:	mov    ecx,DWORD PTR [esi+0x8]
6401e5c0:	and    eax,0xfffffffe
6401e5c3:	mov    DWORD PTR [esi],ecx
6401e5c5:	mov    DWORD PTR [esi+0xc],eax
6401e5c8:	mov    eax,DWORD PTR [esi+0xc]
6401e5cb:	and    DWORD PTR [esi+0x4],0x0
6401e5cf:	and    DWORD PTR [ebp-0x4],0x0
6401e5d3:	push   ebx
6401e5d4:	push   0x2
6401e5d6:	and    eax,0xffffffef
6401e5d9:	pop    ebx
6401e5da:	or     eax,ebx
6401e5dc:	test   ax,0x10c
6401e5e0:	mov    DWORD PTR [esi+0xc],eax
6401e5e3:	jne    0x6401e611
6401e5e5:	call   0x6401cafc
6401e5ea:	add    eax,0x20
6401e5ed:	cmp    esi,eax
6401e5ef:	je     0x6401e5fd
6401e5f1:	call   0x6401cafc
6401e5f6:	add    eax,0x40
6401e5f9:	cmp    esi,eax
6401e5fb:	jne    0x6401e60a
6401e5fd:	push   DWORD PTR [ebp+0xc]
6401e600:	call   0x6401ca9e
6401e605:	test   eax,eax
6401e607:	pop    ecx
6401e608:	jne    0x6401e611
6401e60a:	push   esi
6401e60b:	call   0x6401ca5a
6401e610:	pop    ecx
6401e611:	test   WORD PTR [esi+0xc],0x108
6401e617:	push   edi
6401e618:	je     0x6401e6a1
6401e61e:	mov    eax,DWORD PTR [esi+0x8]
6401e621:	mov    edi,DWORD PTR [esi]
6401e623:	lea    ecx,[eax+0x2]
6401e626:	mov    DWORD PTR [esi],ecx
6401e628:	mov    ecx,DWORD PTR [esi+0x18]
6401e62b:	sub    edi,eax
6401e62d:	sub    ecx,ebx
6401e62f:	test   edi,edi
6401e631:	mov    DWORD PTR [esi+0x4],ecx
6401e634:	jle    0x6401e653
6401e636:	push   edi
6401e637:	push   eax
6401e638:	push   DWORD PTR [ebp+0xc]
6401e63b:	call   0x6401c97e
6401e640:	add    esp,0xc
6401e643:	mov    DWORD PTR [ebp-0x4],eax
6401e646:	jmp    0x6401e696
6401e648:	or     eax,0x20
6401e64b:	mov    DWORD PTR [esi+0xc],eax
6401e64e:	jmp    0x6401e592
6401e653:	mov    ecx,DWORD PTR [ebp+0xc]
6401e656:	cmp    ecx,0xffffffff
6401e659:	je     0x6401e676
6401e65b:	cmp    ecx,0xfffffffe
6401e65e:	je     0x6401e676
6401e660:	mov    eax,ecx
6401e662:	and    eax,0x1f
6401e665:	mov    edx,ecx
6401e667:	sar    edx,0x5
6401e66a:	shl    eax,0x6
6401e66d:	add    eax,DWORD PTR [edx*4+0x64032500]
6401e674:	jmp    0x6401e67b
6401e676:	mov    eax,0x6402d880
6401e67b:	test   BYTE PTR [eax+0x4],0x20
6401e67f:	je     0x6401e696
6401e681:	push   ebx
6401e682:	push   0x0
6401e684:	push   0x0
6401e686:	push   ecx
6401e687:	call   0x6401c243
6401e68c:	and    eax,edx
6401e68e:	add    esp,0x10
6401e691:	cmp    eax,0xffffffff
6401e694:	je     0x6401e6c3
6401e696:	mov    eax,DWORD PTR [esi+0x8]
6401e699:	mov    ebx,DWORD PTR [ebp+0x8]
6401e69c:	mov    WORD PTR [eax],bx
6401e69f:	jmp    0x6401e6be
6401e6a1:	push   0x2
6401e6a3:	lea    eax,[ebp-0x4]
6401e6a6:	push   eax
6401e6a7:	push   DWORD PTR [ebp+0xc]
6401e6aa:	mov    edi,ebx
6401e6ac:	mov    ebx,DWORD PTR [ebp+0x8]
6401e6af:	mov    WORD PTR [ebp-0x4],bx
6401e6b3:	call   0x6401c97e
6401e6b8:	add    esp,0xc
6401e6bb:	mov    DWORD PTR [ebp-0x4],eax
6401e6be:	cmp    DWORD PTR [ebp-0x4],edi
6401e6c1:	je     0x6401e6ce
6401e6c3:	or     DWORD PTR [esi+0xc],0x20
6401e6c7:	mov    eax,0xffff
6401e6cc:	jmp    0x6401e6d5
6401e6ce:	mov    eax,ebx
6401e6d0:	and    eax,0xffff
6401e6d5:	pop    edi
6401e6d6:	pop    ebx
6401e6d7:	pop    esi
6401e6d8:	leave  
6401e6d9:	ret    
6401e6da:	push   ebp
6401e6db:	mov    ebp,esp
6401e6dd:	sub    esp,0x14
6401e6e0:	push   esi
6401e6e1:	push   edi
6401e6e2:	push   DWORD PTR [ebp+0x8]
6401e6e5:	lea    ecx,[ebp-0x14]
6401e6e8:	call   0x6401300f
6401e6ed:	mov    eax,DWORD PTR [ebp+0x10]
6401e6f0:	mov    esi,DWORD PTR [ebp+0xc]
6401e6f3:	xor    edi,edi
6401e6f5:	cmp    eax,edi
6401e6f7:	je     0x6401e6fb
6401e6f9:	mov    DWORD PTR [eax],esi
6401e6fb:	cmp    esi,edi
6401e6fd:	jne    0x6401e72b
6401e6ff:	call   0x64014c30
6401e704:	push   edi
6401e705:	push   edi
6401e706:	push   edi
6401e707:	push   edi
6401e708:	push   edi
6401e709:	mov    DWORD PTR [eax],0x16
6401e70f:	call   0x640129a4
6401e714:	add    esp,0x14
6401e717:	cmp    BYTE PTR [ebp-0x8],0x0
6401e71b:	je     0x6401e724
6401e71d:	mov    eax,DWORD PTR [ebp-0xc]
6401e720:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e724:	xor    eax,eax
6401e726:	jmp    0x6401e901
6401e72b:	cmp    DWORD PTR [ebp+0x14],edi
6401e72e:	je     0x6401e73c
6401e730:	cmp    DWORD PTR [ebp+0x14],0x2
6401e734:	jl     0x6401e6ff
6401e736:	cmp    DWORD PTR [ebp+0x14],0x24
6401e73a:	jg     0x6401e6ff
6401e73c:	mov    ecx,DWORD PTR [ebp-0x14]
6401e73f:	push   ebx
6401e740:	mov    bl,BYTE PTR [esi]
6401e742:	mov    DWORD PTR [ebp-0x4],edi
6401e745:	lea    edi,[esi+0x1]
6401e748:	cmp    DWORD PTR [ecx+0xac],0x1
6401e74f:	jle    0x6401e768
6401e751:	lea    eax,[ebp-0x14]
6401e754:	push   eax
6401e755:	movzx  eax,bl
6401e758:	push   0x8
6401e75a:	push   eax
6401e75b:	call   0x64019de5
6401e760:	mov    ecx,DWORD PTR [ebp-0x14]
6401e763:	add    esp,0xc
6401e766:	jmp    0x6401e778
6401e768:	mov    edx,DWORD PTR [ecx+0xc8]
6401e76e:	movzx  eax,bl
6401e771:	movzx  eax,BYTE PTR [edx+eax*2]
6401e775:	and    eax,0x8
6401e778:	test   eax,eax
6401e77a:	je     0x6401e781
6401e77c:	mov    bl,BYTE PTR [edi]
6401e77e:	inc    edi
6401e77f:	jmp    0x6401e748
6401e781:	cmp    bl,0x2d
6401e784:	jne    0x6401e78c
6401e786:	or     DWORD PTR [ebp+0x18],0x2
6401e78a:	jmp    0x6401e791
6401e78c:	cmp    bl,0x2b
6401e78f:	jne    0x6401e794
6401e791:	mov    bl,BYTE PTR [edi]
6401e793:	inc    edi
6401e794:	mov    eax,DWORD PTR [ebp+0x14]
6401e797:	test   eax,eax
6401e799:	jl     0x6401e8e8
6401e79f:	cmp    eax,0x1
6401e7a2:	je     0x6401e8e8
6401e7a8:	cmp    eax,0x24
6401e7ab:	jg     0x6401e8e8
6401e7b1:	test   eax,eax
6401e7b3:	jne    0x6401e7df
6401e7b5:	cmp    bl,0x30
6401e7b8:	je     0x6401e7c3
6401e7ba:	mov    DWORD PTR [ebp+0x14],0xa
6401e7c1:	jmp    0x6401e7f7
6401e7c3:	mov    al,BYTE PTR [edi]
6401e7c5:	cmp    al,0x78
6401e7c7:	je     0x6401e7d6
6401e7c9:	cmp    al,0x58
6401e7cb:	je     0x6401e7d6
6401e7cd:	mov    DWORD PTR [ebp+0x14],0x8
6401e7d4:	jmp    0x6401e7f7
6401e7d6:	mov    DWORD PTR [ebp+0x14],0x10
6401e7dd:	jmp    0x6401e7e9
6401e7df:	cmp    eax,0x10
6401e7e2:	jne    0x6401e7f7
6401e7e4:	cmp    bl,0x30
6401e7e7:	jne    0x6401e7f7
6401e7e9:	mov    al,BYTE PTR [edi]
6401e7eb:	cmp    al,0x78
6401e7ed:	je     0x6401e7f3
6401e7ef:	cmp    al,0x58
6401e7f1:	jne    0x6401e7f7
6401e7f3:	inc    edi
6401e7f4:	mov    bl,BYTE PTR [edi]
6401e7f6:	inc    edi
6401e7f7:	mov    esi,DWORD PTR [ecx+0xc8]
6401e7fd:	or     eax,0xffffffff
6401e800:	xor    edx,edx
6401e802:	div    DWORD PTR [ebp+0x14]
6401e805:	movzx  ecx,bl
6401e808:	movzx  ecx,WORD PTR [esi+ecx*2]
6401e80c:	test   cl,0x4
6401e80f:	je     0x6401e819
6401e811:	movsx  ecx,bl
6401e814:	sub    ecx,0x30
6401e817:	jmp    0x6401e833
6401e819:	test   cx,0x103
6401e81e:	je     0x6401e851
6401e820:	mov    cl,bl
6401e822:	sub    cl,0x61
6401e825:	cmp    cl,0x19
6401e828:	movsx  ecx,bl
6401e82b:	ja     0x6401e830
6401e82d:	sub    ecx,0x20
6401e830:	add    ecx,0xffffffc9
6401e833:	cmp    ecx,DWORD PTR [ebp+0x14]
6401e836:	jae    0x6401e851
6401e838:	or     DWORD PTR [ebp+0x18],0x8
6401e83c:	cmp    DWORD PTR [ebp-0x4],eax
6401e83f:	jb     0x6401e868
6401e841:	jne    0x6401e847
6401e843:	cmp    ecx,edx
6401e845:	jbe    0x6401e868
6401e847:	or     DWORD PTR [ebp+0x18],0x4
6401e84b:	cmp    DWORD PTR [ebp+0x10],0x0
6401e84f:	jne    0x6401e874
6401e851:	mov    eax,DWORD PTR [ebp+0x18]
6401e854:	dec    edi
6401e855:	test   al,0x8
6401e857:	jne    0x6401e879
6401e859:	cmp    DWORD PTR [ebp+0x10],0x0
6401e85d:	je     0x6401e862
6401e85f:	mov    edi,DWORD PTR [ebp+0xc]
6401e862:	and    DWORD PTR [ebp-0x4],0x0
6401e866:	jmp    0x6401e8c4
6401e868:	mov    ebx,DWORD PTR [ebp-0x4]
6401e86b:	imul   ebx,DWORD PTR [ebp+0x14]
6401e86f:	add    ebx,ecx
6401e871:	mov    DWORD PTR [ebp-0x4],ebx
6401e874:	mov    bl,BYTE PTR [edi]
6401e876:	inc    edi
6401e877:	jmp    0x6401e805
6401e879:	test   al,0x4
6401e87b:	mov    esi,0x7fffffff
6401e880:	jne    0x6401e89d
6401e882:	test   al,0x1
6401e884:	jne    0x6401e8c4
6401e886:	and    eax,0x2
6401e889:	je     0x6401e894
6401e88b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401e892:	ja     0x6401e89d
6401e894:	test   eax,eax
6401e896:	jne    0x6401e8c4
6401e898:	cmp    DWORD PTR [ebp-0x4],esi
6401e89b:	jbe    0x6401e8c4
6401e89d:	call   0x64014c30
6401e8a2:	test   BYTE PTR [ebp+0x18],0x1
6401e8a6:	mov    DWORD PTR [eax],0x22
6401e8ac:	je     0x6401e8b4
6401e8ae:	or     DWORD PTR [ebp-0x4],0xffffffff
6401e8b2:	jmp    0x6401e8c4
6401e8b4:	mov    al,BYTE PTR [ebp+0x18]
6401e8b7:	and    al,0x2
6401e8b9:	neg    al
6401e8bb:	sbb    eax,eax
6401e8bd:	neg    eax
6401e8bf:	add    eax,esi
6401e8c1:	mov    DWORD PTR [ebp-0x4],eax
6401e8c4:	mov    eax,DWORD PTR [ebp+0x10]
6401e8c7:	test   eax,eax
6401e8c9:	je     0x6401e8cd
6401e8cb:	mov    DWORD PTR [eax],edi
6401e8cd:	test   BYTE PTR [ebp+0x18],0x2
6401e8d1:	je     0x6401e8d6
6401e8d3:	neg    DWORD PTR [ebp-0x4]
6401e8d6:	cmp    BYTE PTR [ebp-0x8],0x0
6401e8da:	je     0x6401e8e3
6401e8dc:	mov    eax,DWORD PTR [ebp-0xc]
6401e8df:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e8e3:	mov    eax,DWORD PTR [ebp-0x4]
6401e8e6:	jmp    0x6401e900
6401e8e8:	mov    eax,DWORD PTR [ebp+0x10]
6401e8eb:	test   eax,eax
6401e8ed:	je     0x6401e8f1
6401e8ef:	mov    DWORD PTR [eax],esi
6401e8f1:	cmp    BYTE PTR [ebp-0x8],0x0
6401e8f5:	je     0x6401e8fe
6401e8f7:	mov    eax,DWORD PTR [ebp-0xc]
6401e8fa:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e8fe:	xor    eax,eax
6401e900:	pop    ebx
6401e901:	pop    edi
6401e902:	pop    esi
6401e903:	leave  
6401e904:	ret    
6401e905:	push   ebp
6401e906:	mov    ebp,esp
6401e908:	xor    eax,eax
6401e90a:	cmp    DWORD PTR ds:0x6402e934,eax
6401e910:	push   eax
6401e911:	push   DWORD PTR [ebp+0x10]
6401e914:	push   DWORD PTR [ebp+0xc]
6401e917:	push   DWORD PTR [ebp+0x8]
6401e91a:	jne    0x6401e923
6401e91c:	push   0x6402d878
6401e921:	jmp    0x6401e924
6401e923:	push   eax
6401e924:	call   0x6401e6da
6401e929:	add    esp,0x14
6401e92c:	pop    ebp
6401e92d:	ret    
6401e92e:	int3   
6401e92f:	int3   
6401e930:	push   ebp
6401e931:	mov    ebp,esp
6401e933:	push   edi
6401e934:	push   esi
6401e935:	push   ebx
6401e936:	mov    ecx,DWORD PTR [ebp+0x10]
6401e939:	or     ecx,ecx
6401e93b:	je     0x6401e98a
6401e93d:	mov    esi,DWORD PTR [ebp+0x8]
6401e940:	mov    edi,DWORD PTR [ebp+0xc]
6401e943:	mov    bh,0x41
6401e945:	mov    bl,0x5a
6401e947:	mov    dh,0x20
6401e949:	lea    ecx,[ecx+0x0]
6401e94c:	mov    ah,BYTE PTR [esi]
6401e94e:	or     ah,ah
6401e950:	mov    al,BYTE PTR [edi]
6401e952:	je     0x6401e97b
6401e954:	or     al,al
6401e956:	je     0x6401e97b
6401e958:	add    esi,0x1
6401e95b:	add    edi,0x1
6401e95e:	cmp    ah,bh
6401e960:	jb     0x6401e968
6401e962:	cmp    ah,bl
6401e964:	ja     0x6401e968
6401e966:	add    ah,dh
6401e968:	cmp    al,bh
6401e96a:	jb     0x6401e972
6401e96c:	cmp    al,bl
6401e96e:	ja     0x6401e972
6401e970:	add    al,dh
6401e972:	cmp    ah,al
6401e974:	jne    0x6401e981
6401e976:	sub    ecx,0x1
6401e979:	jne    0x6401e94c
6401e97b:	xor    ecx,ecx
6401e97d:	cmp    ah,al
6401e97f:	je     0x6401e98a
6401e981:	mov    ecx,0xffffffff
6401e986:	jb     0x6401e98a
6401e988:	neg    ecx
6401e98a:	mov    eax,ecx
6401e98c:	pop    ebx
6401e98d:	pop    esi
6401e98e:	pop    edi
6401e98f:	leave  
6401e990:	ret    
6401e991:	xor    eax,eax
6401e993:	push   eax
6401e994:	push   eax
6401e995:	push   0x3
6401e997:	push   eax
6401e998:	push   0x3
6401e99a:	push   0x40000000
6401e99f:	push   0x640275cc
6401e9a4:	call   DWORD PTR ds:0x640250b4
6401e9aa:	mov    ds:0x6402e024,eax
6401e9af:	ret    
6401e9b0:	mov    eax,ds:0x6402e024
6401e9b5:	cmp    eax,0xffffffff
6401e9b8:	push   esi
6401e9b9:	mov    esi,DWORD PTR ds:0x64025040
6401e9bf:	je     0x6401e9c9
6401e9c1:	cmp    eax,0xfffffffe
6401e9c4:	je     0x6401e9c9
6401e9c6:	push   eax
6401e9c7:	call   esi
6401e9c9:	mov    eax,ds:0x6402e020
6401e9ce:	cmp    eax,0xffffffff
6401e9d1:	je     0x6401e9db
6401e9d3:	cmp    eax,0xfffffffe
6401e9d6:	je     0x6401e9db
6401e9d8:	push   eax
6401e9d9:	call   esi
6401e9db:	pop    esi
6401e9dc:	ret    
6401e9dd:	push   ebx
6401e9de:	push   esi
6401e9df:	mov    esi,DWORD PTR [esp+0xc]
6401e9e3:	push   edi
6401e9e4:	xor    edi,edi
6401e9e6:	or     ebx,0xffffffff
6401e9e9:	cmp    esi,edi
6401e9eb:	jne    0x6401ea09
6401e9ed:	call   0x64014c30
6401e9f2:	push   edi
6401e9f3:	push   edi
6401e9f4:	push   edi
6401e9f5:	push   edi
6401e9f6:	push   edi
6401e9f7:	mov    DWORD PTR [eax],0x16
6401e9fd:	call   0x640129a4
6401ea02:	add    esp,0x14
6401ea05:	or     eax,ebx
6401ea07:	jmp    0x6401ea4b
6401ea09:	test   BYTE PTR [esi+0xc],0x83
6401ea0d:	je     0x6401ea46
6401ea0f:	push   esi
6401ea10:	call   0x6401e3e3
6401ea15:	push   esi
6401ea16:	mov    ebx,eax
6401ea18:	call   0x6401ed2a
6401ea1d:	push   esi
6401ea1e:	call   0x6401cc9d
6401ea23:	push   eax
6401ea24:	call   0x6401ec5d
6401ea29:	add    esp,0x10
6401ea2c:	test   eax,eax
6401ea2e:	jge    0x6401ea35
6401ea30:	or     ebx,0xffffffff
6401ea33:	jmp    0x6401ea46
6401ea35:	mov    eax,DWORD PTR [esi+0x1c]
6401ea38:	cmp    eax,edi
6401ea3a:	je     0x6401ea46
6401ea3c:	push   eax
6401ea3d:	call   0x64013d06
6401ea42:	pop    ecx
6401ea43:	mov    DWORD PTR [esi+0x1c],edi
6401ea46:	mov    DWORD PTR [esi+0xc],edi
6401ea49:	mov    eax,ebx
6401ea4b:	pop    edi
6401ea4c:	pop    esi
6401ea4d:	pop    ebx
6401ea4e:	ret    
6401ea4f:	push   0xc
6401ea51:	push   0x6402a918
6401ea56:	call   0x64014430
6401ea5b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ea5f:	xor    eax,eax
6401ea61:	mov    esi,DWORD PTR [ebp+0x8]
6401ea64:	xor    edi,edi
6401ea66:	cmp    esi,edi
6401ea68:	setne  al
6401ea6b:	cmp    eax,edi
6401ea6d:	jne    0x6401ea8c
6401ea6f:	call   0x64014c30
6401ea74:	mov    DWORD PTR [eax],0x16
6401ea7a:	push   edi
6401ea7b:	push   edi
6401ea7c:	push   edi
6401ea7d:	push   edi
6401ea7e:	push   edi
6401ea7f:	call   0x640129a4
6401ea84:	add    esp,0x14
6401ea87:	or     eax,0xffffffff
6401ea8a:	jmp    0x6401ea98
6401ea8c:	test   BYTE PTR [esi+0xc],0x40
6401ea90:	je     0x6401ea9e
6401ea92:	mov    DWORD PTR [esi+0xc],edi
6401ea95:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea98:	call   0x64014475
6401ea9d:	ret    
6401ea9e:	push   esi
6401ea9f:	call   0x6401cbd3
6401eaa4:	pop    ecx
6401eaa5:	mov    DWORD PTR [ebp-0x4],edi
6401eaa8:	push   esi
6401eaa9:	call   0x6401e9dd
6401eaae:	pop    ecx
6401eaaf:	mov    DWORD PTR [ebp-0x1c],eax
6401eab2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eab9:	call   0x6401eac3
6401eabe:	jmp    0x6401ea95
6401eac0:	mov    esi,DWORD PTR [ebp+0x8]
6401eac3:	push   esi
6401eac4:	call   0x6401cc3d
6401eac9:	pop    ecx
6401eaca:	ret    
6401eacb:	push   0x10
6401eacd:	push   0x6402a938
6401ead2:	call   0x64014430
6401ead7:	mov    eax,DWORD PTR [ebp+0x8]
6401eada:	cmp    eax,0xfffffffe
6401eadd:	jne    0x6401eaf2
6401eadf:	call   0x64014c30
6401eae4:	mov    DWORD PTR [eax],0x9
6401eaea:	or     eax,0xffffffff
6401eaed:	jmp    0x6401eb9c
6401eaf2:	xor    ebx,ebx
6401eaf4:	cmp    eax,ebx
6401eaf6:	jl     0x6401eb00
6401eaf8:	cmp    eax,DWORD PTR ds:0x640324e0
6401eafe:	jb     0x6401eb1a
6401eb00:	call   0x64014c30
6401eb05:	mov    DWORD PTR [eax],0x9
6401eb0b:	push   ebx
6401eb0c:	push   ebx
6401eb0d:	push   ebx
6401eb0e:	push   ebx
6401eb0f:	push   ebx
6401eb10:	call   0x640129a4
6401eb15:	add    esp,0x14
6401eb18:	jmp    0x6401eaea
6401eb1a:	mov    ecx,eax
6401eb1c:	sar    ecx,0x5
6401eb1f:	lea    edi,[ecx*4+0x64032500]
6401eb26:	mov    esi,eax
6401eb28:	and    esi,0x1f
6401eb2b:	shl    esi,0x6
6401eb2e:	mov    ecx,DWORD PTR [edi]
6401eb30:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401eb35:	and    ecx,0x1
6401eb38:	je     0x6401eb00
6401eb3a:	push   eax
6401eb3b:	call   0x6401e1c0
6401eb40:	pop    ecx
6401eb41:	mov    DWORD PTR [ebp-0x4],ebx
6401eb44:	mov    eax,DWORD PTR [edi]
6401eb46:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401eb4b:	je     0x6401eb7e
6401eb4d:	push   DWORD PTR [ebp+0x8]
6401eb50:	call   0x6401e14f
6401eb55:	pop    ecx
6401eb56:	push   eax
6401eb57:	call   DWORD PTR ds:0x640250b8
6401eb5d:	test   eax,eax
6401eb5f:	jne    0x6401eb6c
6401eb61:	call   DWORD PTR ds:0x64025044
6401eb67:	mov    DWORD PTR [ebp-0x1c],eax
6401eb6a:	jmp    0x6401eb6f
6401eb6c:	mov    DWORD PTR [ebp-0x1c],ebx
6401eb6f:	cmp    DWORD PTR [ebp-0x1c],ebx
6401eb72:	je     0x6401eb8d
6401eb74:	call   0x64014c43
6401eb79:	mov    ecx,DWORD PTR [ebp-0x1c]
6401eb7c:	mov    DWORD PTR [eax],ecx
6401eb7e:	call   0x64014c30
6401eb83:	mov    DWORD PTR [eax],0x9
6401eb89:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401eb8d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eb94:	call   0x6401eba2
6401eb99:	mov    eax,DWORD PTR [ebp-0x1c]
6401eb9c:	call   0x64014475
6401eba1:	ret    
6401eba2:	push   DWORD PTR [ebp+0x8]
6401eba5:	call   0x6401e260
6401ebaa:	pop    ecx
6401ebab:	ret    
6401ebac:	xor    eax,eax
6401ebae:	cmp    DWORD PTR [esp+0x8],eax
6401ebb2:	jbe    0x6401ebc5
6401ebb4:	mov    ecx,DWORD PTR [esp+0x4]
6401ebb8:	cmp    BYTE PTR [ecx],0x0
6401ebbb:	je     0x6401ebc5
6401ebbd:	inc    eax
6401ebbe:	inc    ecx
6401ebbf:	cmp    eax,DWORD PTR [esp+0x8]
6401ebc3:	jb     0x6401ebb8
6401ebc5:	ret    
6401ebc6:	push   esi
6401ebc7:	mov    esi,DWORD PTR [esp+0x8]
6401ebcb:	push   edi
6401ebcc:	push   esi
6401ebcd:	call   0x6401e14f
6401ebd2:	cmp    eax,0xffffffff
6401ebd5:	pop    ecx
6401ebd6:	je     0x6401ec28
6401ebd8:	cmp    esi,0x1
6401ebdb:	mov    eax,ds:0x64032500
6401ebe0:	jne    0x6401ebeb
6401ebe2:	test   BYTE PTR [eax+0x84],0x1
6401ebe9:	jne    0x6401ebf6
6401ebeb:	cmp    esi,0x2
6401ebee:	jne    0x6401ec0c
6401ebf0:	test   BYTE PTR [eax+0x44],0x1
6401ebf4:	je     0x6401ec0c
6401ebf6:	push   0x2
6401ebf8:	call   0x6401e14f
6401ebfd:	push   0x1
6401ebff:	mov    edi,eax
6401ec01:	call   0x6401e14f
6401ec06:	cmp    eax,edi
6401ec08:	pop    ecx
6401ec09:	pop    ecx
6401ec0a:	je     0x6401ec28
6401ec0c:	push   esi
6401ec0d:	call   0x6401e14f
6401ec12:	pop    ecx
6401ec13:	push   eax
6401ec14:	call   DWORD PTR ds:0x64025040
6401ec1a:	test   eax,eax
6401ec1c:	jne    0x6401ec28
6401ec1e:	call   DWORD PTR ds:0x64025044
6401ec24:	mov    edi,eax
6401ec26:	jmp    0x6401ec2a
6401ec28:	xor    edi,edi
6401ec2a:	push   esi
6401ec2b:	call   0x6401e0ce
6401ec30:	mov    eax,esi
6401ec32:	sar    eax,0x5
6401ec35:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401ec3c:	and    esi,0x1f
6401ec3f:	shl    esi,0x6
6401ec42:	test   edi,edi
6401ec44:	pop    ecx
6401ec45:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401ec4a:	je     0x6401ec58
6401ec4c:	push   edi
6401ec4d:	call   0x64014c56
6401ec52:	pop    ecx
6401ec53:	or     eax,0xffffffff
6401ec56:	jmp    0x6401ec5a
6401ec58:	xor    eax,eax
6401ec5a:	pop    edi
6401ec5b:	pop    esi
6401ec5c:	ret    
6401ec5d:	push   0x10
6401ec5f:	push   0x6402a958
6401ec64:	call   0x64014430
6401ec69:	mov    eax,DWORD PTR [ebp+0x8]
6401ec6c:	cmp    eax,0xfffffffe
6401ec6f:	jne    0x6401ec8c
6401ec71:	call   0x64014c43
6401ec76:	and    DWORD PTR [eax],0x0
6401ec79:	call   0x64014c30
6401ec7e:	mov    DWORD PTR [eax],0x9
6401ec84:	or     eax,0xffffffff
6401ec87:	jmp    0x6401ed1a
6401ec8c:	xor    edi,edi
6401ec8e:	cmp    eax,edi
6401ec90:	jl     0x6401ec9a
6401ec92:	cmp    eax,DWORD PTR ds:0x640324e0
6401ec98:	jb     0x6401ecbb
6401ec9a:	call   0x64014c43
6401ec9f:	mov    DWORD PTR [eax],edi
6401eca1:	call   0x64014c30
6401eca6:	mov    DWORD PTR [eax],0x9
6401ecac:	push   edi
6401ecad:	push   edi
6401ecae:	push   edi
6401ecaf:	push   edi
6401ecb0:	push   edi
6401ecb1:	call   0x640129a4
6401ecb6:	add    esp,0x14
6401ecb9:	jmp    0x6401ec84
6401ecbb:	mov    ecx,eax
6401ecbd:	sar    ecx,0x5
6401ecc0:	lea    ebx,[ecx*4+0x64032500]
6401ecc7:	mov    esi,eax
6401ecc9:	and    esi,0x1f
6401eccc:	shl    esi,0x6
6401eccf:	mov    ecx,DWORD PTR [ebx]
6401ecd1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401ecd6:	and    ecx,0x1
6401ecd9:	je     0x6401ec9a
6401ecdb:	push   eax
6401ecdc:	call   0x6401e1c0
6401ece1:	pop    ecx
6401ece2:	mov    DWORD PTR [ebp-0x4],edi
6401ece5:	mov    eax,DWORD PTR [ebx]
6401ece7:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401ecec:	je     0x6401ecfc
6401ecee:	push   DWORD PTR [ebp+0x8]
6401ecf1:	call   0x6401ebc6
6401ecf6:	pop    ecx
6401ecf7:	mov    DWORD PTR [ebp-0x1c],eax
6401ecfa:	jmp    0x6401ed0b
6401ecfc:	call   0x64014c30
6401ed01:	mov    DWORD PTR [eax],0x9
6401ed07:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ed0b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ed12:	call   0x6401ed20
6401ed17:	mov    eax,DWORD PTR [ebp-0x1c]
6401ed1a:	call   0x64014475
6401ed1f:	ret    
6401ed20:	push   DWORD PTR [ebp+0x8]
6401ed23:	call   0x6401e260
6401ed28:	pop    ecx
6401ed29:	ret    
6401ed2a:	push   esi
6401ed2b:	mov    esi,DWORD PTR [esp+0x8]
6401ed2f:	mov    eax,DWORD PTR [esi+0xc]
6401ed32:	test   al,0x83
6401ed34:	je     0x6401ed54
6401ed36:	test   al,0x8
6401ed38:	je     0x6401ed54
6401ed3a:	push   DWORD PTR [esi+0x8]
6401ed3d:	call   0x64013d06
6401ed42:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401ed49:	xor    eax,eax
6401ed4b:	pop    ecx
6401ed4c:	mov    DWORD PTR [esi],eax
6401ed4e:	mov    DWORD PTR [esi+0x8],eax
6401ed51:	mov    DWORD PTR [esi+0x4],eax
6401ed54:	pop    esi
6401ed55:	ret    
6401ed56:	int3   
6401ed57:	int3   
6401ed58:	int3   
6401ed59:	int3   
6401ed5a:	int3   
6401ed5b:	int3   
6401ed5c:	int3   
6401ed5d:	int3   
6401ed5e:	int3   
6401ed5f:	int3   
6401ed60:	lea    eax,[edx-0x1]
6401ed63:	pop    ebx
6401ed64:	ret    
6401ed65:	lea    esp,[esp+0x0]
6401ed6c:	lea    esp,[esp+0x0]
6401ed70:	xor    eax,eax
6401ed72:	mov    al,BYTE PTR [esp+0x8]
6401ed76:	push   ebx
6401ed77:	mov    ebx,eax
6401ed79:	shl    eax,0x8
6401ed7c:	mov    edx,DWORD PTR [esp+0x8]
6401ed80:	test   edx,0x3
6401ed86:	je     0x6401ed9d
6401ed88:	mov    cl,BYTE PTR [edx]
6401ed8a:	add    edx,0x1
6401ed8d:	cmp    cl,bl
6401ed8f:	je     0x6401ed60
6401ed91:	test   cl,cl
6401ed93:	je     0x6401ede6
6401ed95:	test   edx,0x3
6401ed9b:	jne    0x6401ed88
6401ed9d:	or     ebx,eax
6401ed9f:	push   edi
6401eda0:	mov    eax,ebx
6401eda2:	shl    ebx,0x10
6401eda5:	push   esi
6401eda6:	or     ebx,eax
6401eda8:	mov    ecx,DWORD PTR [edx]
6401edaa:	mov    edi,0x7efefeff
6401edaf:	mov    eax,ecx
6401edb1:	mov    esi,edi
6401edb3:	xor    ecx,ebx
6401edb5:	add    esi,eax
6401edb7:	add    edi,ecx
6401edb9:	xor    ecx,0xffffffff
6401edbc:	xor    eax,0xffffffff
6401edbf:	xor    ecx,edi
6401edc1:	xor    eax,esi
6401edc3:	add    edx,0x4
6401edc6:	and    ecx,0x81010100
6401edcc:	jne    0x6401edea
6401edce:	and    eax,0x81010100
6401edd3:	je     0x6401eda8
6401edd5:	and    eax,0x1010100
6401edda:	jne    0x6401ede4
6401eddc:	and    esi,0x80000000
6401ede2:	jne    0x6401eda8
6401ede4:	pop    esi
6401ede5:	pop    edi
6401ede6:	pop    ebx
6401ede7:	xor    eax,eax
6401ede9:	ret    
6401edea:	mov    eax,DWORD PTR [edx-0x4]
6401eded:	cmp    al,bl
6401edef:	je     0x6401ee27
6401edf1:	test   al,al
6401edf3:	je     0x6401ede4
6401edf5:	cmp    ah,bl
6401edf7:	je     0x6401ee20
6401edf9:	test   ah,ah
6401edfb:	je     0x6401ede4
6401edfd:	shr    eax,0x10
6401ee00:	cmp    al,bl
6401ee02:	je     0x6401ee19
6401ee04:	test   al,al
6401ee06:	je     0x6401ede4
6401ee08:	cmp    ah,bl
6401ee0a:	je     0x6401ee12
6401ee0c:	test   ah,ah
6401ee0e:	je     0x6401ede4
6401ee10:	jmp    0x6401eda8
6401ee12:	pop    esi
6401ee13:	pop    edi
6401ee14:	lea    eax,[edx-0x1]
6401ee17:	pop    ebx
6401ee18:	ret    
6401ee19:	lea    eax,[edx-0x2]
6401ee1c:	pop    esi
6401ee1d:	pop    edi
6401ee1e:	pop    ebx
6401ee1f:	ret    
6401ee20:	lea    eax,[edx-0x3]
6401ee23:	pop    esi
6401ee24:	pop    edi
6401ee25:	pop    ebx
6401ee26:	ret    
6401ee27:	lea    eax,[edx-0x4]
6401ee2a:	pop    esi
6401ee2b:	pop    edi
6401ee2c:	pop    ebx
6401ee2d:	ret    
6401ee2e:	int3   
6401ee2f:	int3   
6401ee30:	push   ebp
6401ee31:	mov    ebp,esp
6401ee33:	push   0xfffffffe
6401ee35:	push   0x6402a978
6401ee3a:	push   0x64014490
6401ee3f:	mov    eax,fs:0x0
6401ee45:	push   eax
6401ee46:	sub    esp,0x18
6401ee49:	mov    eax,ds:0x6402d09c
6401ee4e:	xor    DWORD PTR [ebp-0x8],eax
6401ee51:	xor    eax,ebp
6401ee53:	mov    DWORD PTR [ebp-0x1c],eax
6401ee56:	push   ebx
6401ee57:	push   esi
6401ee58:	push   edi
6401ee59:	push   eax
6401ee5a:	lea    eax,[ebp-0x10]
6401ee5d:	mov    fs:0x0,eax
6401ee63:	mov    DWORD PTR [ebp-0x18],esp
6401ee66:	mov    esi,DWORD PTR [ebp+0x8]
6401ee69:	test   esi,esi
6401ee6b:	je     0x6401eec2
6401ee6d:	push   esi
6401ee6e:	call   DWORD PTR ds:0x64025058
6401ee74:	mov    edi,eax
6401ee76:	add    edi,0x1
6401ee79:	mov    DWORD PTR [ebp-0x20],edi
6401ee7c:	push   0x0
6401ee7e:	push   0x0
6401ee80:	push   edi
6401ee81:	push   esi
6401ee82:	push   0x0
6401ee84:	push   0x0
6401ee86:	call   DWORD PTR ds:0x64025024
6401ee8c:	mov    esi,eax
6401ee8e:	mov    DWORD PTR [ebp-0x28],esi
6401ee91:	test   esi,esi
6401ee93:	jne    0x6401eec9
6401ee95:	mov    esi,DWORD PTR ds:0x64025044
6401ee9b:	call   esi
6401ee9d:	test   eax,eax
6401ee9f:	jg     0x6401eeb0
6401eea1:	call   esi
6401eea3:	push   eax
6401eea4:	call   0x6401efc0
6401eea9:	xor    eax,eax
6401eeab:	jmp    0x6401ef90
6401eeb0:	call   esi
6401eeb2:	and    eax,0xffff
6401eeb7:	or     eax,0x80070000
6401eebc:	push   eax
6401eebd:	call   0x6401efc0
6401eec2:	xor    eax,eax
6401eec4:	jmp    0x6401ef90
6401eec9:	mov    DWORD PTR [ebp-0x4],0x0
6401eed0:	lea    eax,[esi+esi*1]
6401eed3:	cmp    esi,0x1000
6401eed9:	jge    0x6401eef3
6401eedb:	call   0x640135f0
6401eee0:	mov    DWORD PTR [ebp-0x18],esp
6401eee3:	mov    eax,esp
6401eee5:	mov    ebx,eax
6401eee7:	mov    DWORD PTR [ebp-0x24],ebx
6401eeea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eef1:	jmp    0x6401ef25
6401eef3:	push   eax
6401eef4:	call   0x64013de3
6401eef9:	add    esp,0x4
6401eefc:	mov    ebx,eax
6401eefe:	mov    DWORD PTR [ebp-0x24],ebx
6401ef01:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ef08:	jmp    0x6401ef25
6401ef0a:	mov    eax,0x1
6401ef0f:	ret    
6401ef10:	mov    esp,DWORD PTR [ebp-0x18]
6401ef13:	xor    ebx,ebx
6401ef15:	mov    DWORD PTR [ebp-0x24],ebx
6401ef18:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ef1f:	mov    edi,DWORD PTR [ebp-0x20]
6401ef22:	mov    esi,DWORD PTR [ebp-0x28]
6401ef25:	test   ebx,ebx
6401ef27:	jne    0x6401ef37
6401ef29:	push   0x8007000e
6401ef2e:	call   0x6401efc0
6401ef33:	xor    eax,eax
6401ef35:	jmp    0x6401ef90
6401ef37:	push   esi
6401ef38:	push   ebx
6401ef39:	push   edi
6401ef3a:	mov    ecx,DWORD PTR [ebp+0x8]
6401ef3d:	push   ecx
6401ef3e:	push   0x0
6401ef40:	push   0x0
6401ef42:	call   DWORD PTR ds:0x64025024
6401ef48:	test   eax,eax
6401ef4a:	jne    0x6401ef66
6401ef4c:	cmp    esi,0x1000
6401ef52:	jl     0x6401ee95
6401ef58:	push   ebx
6401ef59:	call   0x64013d06
6401ef5e:	add    esp,0x4
6401ef61:	jmp    0x6401ee95
6401ef66:	push   ebx
6401ef67:	call   DWORD PTR ds:0x6402518c
6401ef6d:	mov    edi,eax
6401ef6f:	cmp    esi,0x1000
6401ef75:	jl     0x6401ef80
6401ef77:	push   ebx
6401ef78:	call   0x64013d06
6401ef7d:	add    esp,0x4
6401ef80:	test   edi,edi
6401ef82:	jne    0x6401ef8e
6401ef84:	push   0x8007000e
6401ef89:	call   0x6401efc0
6401ef8e:	mov    eax,edi
6401ef90:	lea    esp,[ebp-0x38]
6401ef93:	mov    ecx,DWORD PTR [ebp-0x10]
6401ef96:	mov    DWORD PTR fs:0x0,ecx
6401ef9d:	pop    ecx
6401ef9e:	pop    edi
6401ef9f:	pop    esi
6401efa0:	pop    ebx
6401efa1:	mov    ecx,DWORD PTR [ebp-0x1c]
6401efa4:	xor    ecx,ebp
6401efa6:	call   0x64012e6c
6401efab:	mov    esp,ebp
6401efad:	pop    ebp
6401efae:	ret    0x4
6401efb1:	int3   
6401efb2:	int3   
6401efb3:	int3   
6401efb4:	int3   
6401efb5:	int3   
6401efb6:	int3   
6401efb7:	int3   
6401efb8:	int3   
6401efb9:	int3   
6401efba:	int3   
6401efbb:	int3   
6401efbc:	int3   
6401efbd:	int3   
6401efbe:	int3   
6401efbf:	int3   
6401efc0:	mov    eax,DWORD PTR [esp+0x4]
6401efc4:	push   0x0
6401efc6:	push   eax
6401efc7:	call   DWORD PTR ds:0x6402e040
6401efcd:	ret    0x4
6401efd0:	push   esi
6401efd1:	mov    esi,ecx
6401efd3:	mov    eax,DWORD PTR [esi+0x8]
6401efd6:	test   eax,eax
6401efd8:	mov    DWORD PTR [esi],0x640275d8
6401efde:	je     0x6401efe8
6401efe0:	mov    ecx,DWORD PTR [eax]
6401efe2:	mov    edx,DWORD PTR [ecx+0x8]
6401efe5:	push   eax
6401efe6:	call   edx
6401efe8:	cmp    DWORD PTR [esi+0xc],0x0
6401efec:	je     0x6401f005
6401efee:	call   DWORD PTR ds:0x64025110
6401eff4:	test   eax,eax
6401eff6:	je     0x6401f005
6401eff8:	mov    ecx,DWORD PTR [esi+0xc]
6401effb:	push   ecx
6401effc:	push   0x0
6401effe:	push   eax
6401efff:	call   DWORD PTR ds:0x64025104
6401f005:	pop    esi
6401f006:	ret    
6401f007:	int3   
6401f008:	int3   
6401f009:	int3   
6401f00a:	int3   
6401f00b:	int3   
6401f00c:	int3   
6401f00d:	int3   
6401f00e:	int3   
6401f00f:	int3   
6401f010:	sub    esp,0x10
6401f013:	mov    eax,DWORD PTR [esp+0x14]
6401f017:	mov    ecx,DWORD PTR [esp+0x18]
6401f01b:	push   0x6402a994
6401f020:	lea    edx,[esp+0x4]
6401f024:	push   edx
6401f025:	mov    DWORD PTR [esp+0x8],0x640275d8
6401f02d:	mov    DWORD PTR [esp+0xc],eax
6401f031:	mov    DWORD PTR [esp+0x10],ecx
6401f035:	mov    DWORD PTR [esp+0x14],0x0
6401f03d:	call   0x64012a5b
6401f042:	int3   
6401f043:	int3   
6401f044:	int3   
6401f045:	int3   
6401f046:	int3   
6401f047:	int3   
6401f048:	int3   
6401f049:	int3   
6401f04a:	int3   
6401f04b:	int3   
6401f04c:	int3   
6401f04d:	int3   
6401f04e:	int3   
6401f04f:	int3   
6401f050:	mov    eax,DWORD PTR [esp+0x4]
6401f054:	push   esi
6401f055:	mov    esi,ecx
6401f057:	mov    DWORD PTR [esi],0x640275d8
6401f05d:	mov    ecx,DWORD PTR [eax+0x4]
6401f060:	mov    DWORD PTR [esi+0x4],ecx
6401f063:	mov    edx,DWORD PTR [eax+0x8]
6401f066:	mov    eax,edx
6401f068:	test   eax,eax
6401f06a:	mov    DWORD PTR [esi+0x8],edx
6401f06d:	mov    DWORD PTR [esi+0xc],0x0
6401f074:	je     0x6401f07e
6401f076:	mov    ecx,DWORD PTR [eax]
6401f078:	mov    edx,DWORD PTR [ecx+0x4]
6401f07b:	push   eax
6401f07c:	call   edx
6401f07e:	mov    eax,esi
6401f080:	pop    esi
6401f081:	ret    0x4
6401f084:	int3   
6401f085:	int3   
6401f086:	int3   
6401f087:	int3   
6401f088:	int3   
6401f089:	int3   
6401f08a:	int3   
6401f08b:	int3   
6401f08c:	int3   
6401f08d:	int3   
6401f08e:	int3   
6401f08f:	int3   
6401f090:	push   esi
6401f091:	mov    esi,ecx
6401f093:	mov    eax,DWORD PTR [esi+0x8]
6401f096:	test   eax,eax
6401f098:	mov    DWORD PTR [esi],0x640275d8
6401f09e:	je     0x6401f0a8
6401f0a0:	mov    ecx,DWORD PTR [eax]
6401f0a2:	mov    edx,DWORD PTR [ecx+0x8]
6401f0a5:	push   eax
6401f0a6:	call   edx
6401f0a8:	cmp    DWORD PTR [esi+0xc],0x0
6401f0ac:	je     0x6401f0c5
6401f0ae:	call   DWORD PTR ds:0x64025110
6401f0b4:	test   eax,eax
6401f0b6:	je     0x6401f0c5
6401f0b8:	mov    ecx,DWORD PTR [esi+0xc]
6401f0bb:	push   ecx
6401f0bc:	push   0x0
6401f0be:	push   eax
6401f0bf:	call   DWORD PTR ds:0x64025104
6401f0c5:	test   BYTE PTR [esp+0x8],0x1
6401f0ca:	je     0x6401f0d5
6401f0cc:	push   esi
6401f0cd:	call   0x64012612
6401f0d2:	add    esp,0x4
6401f0d5:	mov    eax,esi
6401f0d7:	pop    esi
6401f0d8:	ret    0x4
6401f0db:	int3   
6401f0dc:	jmp    DWORD PTR ds:0x64025124
6401f0e2:	push   ebp
6401f0e3:	mov    ebp,esp
6401f0e5:	sub    esp,0xc
6401f0e8:	mov    eax,ds:0x6402d09c
6401f0ed:	xor    eax,ebp
6401f0ef:	mov    DWORD PTR [ebp-0x4],eax
6401f0f2:	push   ebx
6401f0f3:	push   esi
6401f0f4:	push   edi
6401f0f5:	mov    edi,DWORD PTR [ebp+0x8]
6401f0f8:	xor    ebx,ebx
6401f0fa:	cmp    edi,ebx
6401f0fc:	jne    0x6401f11a
6401f0fe:	call   0x64014c30
6401f103:	push   0x16
6401f105:	pop    esi
6401f106:	push   ebx
6401f107:	push   ebx
6401f108:	push   ebx
6401f109:	push   ebx
6401f10a:	push   ebx
6401f10b:	mov    DWORD PTR [eax],esi
6401f10d:	call   0x640129a4
6401f112:	add    esp,0x14
6401f115:	jmp    0x6401f24f
6401f11a:	push   DWORD PTR [ebp+0xc]
6401f11d:	push   edi
6401f11e:	call   0x6401ebac
6401f123:	cmp    eax,DWORD PTR [ebp+0xc]
6401f126:	pop    ecx
6401f127:	pop    ecx
6401f128:	jb     0x6401f12e
6401f12a:	mov    BYTE PTR [edi],bl
6401f12c:	jmp    0x6401f0fe
6401f12e:	mov    edx,DWORD PTR [ebp+0x10]
6401f131:	mov    eax,DWORD PTR [edx]
6401f133:	mov    ecx,DWORD PTR [eax+0x14]
6401f136:	cmp    ecx,ebx
6401f138:	jne    0x6401f15a
6401f13a:	cmp    BYTE PTR [edi],bl
6401f13c:	mov    ecx,edi
6401f13e:	je     0x6401f153
6401f140:	mov    al,BYTE PTR [ecx]
6401f142:	cmp    al,0x41
6401f144:	jl     0x6401f14e
6401f146:	cmp    al,0x5a
6401f148:	jg     0x6401f14e
6401f14a:	add    al,0x20
6401f14c:	mov    BYTE PTR [ecx],al
6401f14e:	inc    ecx
6401f14f:	cmp    BYTE PTR [ecx],bl
6401f151:	jne    0x6401f140
6401f153:	xor    eax,eax
6401f155:	jmp    0x6401f251
6401f15a:	push   0x1
6401f15c:	push   DWORD PTR [eax+0x4]
6401f15f:	mov    esi,0x100
6401f164:	push   ebx
6401f165:	push   ebx
6401f166:	push   0xffffffff
6401f168:	push   edi
6401f169:	push   esi
6401f16a:	push   ecx
6401f16b:	push   edx
6401f16c:	call   0x6401a23d
6401f171:	mov    ecx,eax
6401f173:	add    esp,0x24
6401f176:	cmp    ecx,ebx
6401f178:	mov    DWORD PTR [ebp-0xc],ecx
6401f17b:	jne    0x6401f194
6401f17d:	call   0x64014c30
6401f182:	mov    DWORD PTR [eax],0x2a
6401f188:	call   0x64014c30
6401f18d:	mov    eax,DWORD PTR [eax]
6401f18f:	jmp    0x6401f251
6401f194:	cmp    DWORD PTR [ebp+0xc],ecx
6401f197:	jae    0x6401f1a7
6401f199:	mov    BYTE PTR [edi],bl
6401f19b:	call   0x64014c30
6401f1a0:	push   0x22
6401f1a2:	jmp    0x6401f105
6401f1a7:	cmp    ecx,ebx
6401f1a9:	jle    0x6401f1f0
6401f1ab:	push   0xffffffe0
6401f1ad:	xor    edx,edx
6401f1af:	pop    eax
6401f1b0:	div    ecx
6401f1b2:	cmp    eax,0x1
6401f1b5:	jb     0x6401f1f0
6401f1b7:	lea    eax,[ecx+0x8]
6401f1ba:	cmp    eax,0x400
6401f1bf:	ja     0x6401f1d4
6401f1c1:	call   0x640135f0
6401f1c6:	mov    eax,esp
6401f1c8:	cmp    eax,ebx
6401f1ca:	je     0x6401f1e8
6401f1cc:	mov    DWORD PTR [eax],0xcccc
6401f1d2:	jmp    0x6401f1e5
6401f1d4:	push   eax
6401f1d5:	call   0x64013de3
6401f1da:	cmp    eax,ebx
6401f1dc:	pop    ecx
6401f1dd:	je     0x6401f1e8
6401f1df:	mov    DWORD PTR [eax],0xdddd
6401f1e5:	add    eax,0x8
6401f1e8:	mov    ecx,DWORD PTR [ebp-0xc]
6401f1eb:	mov    DWORD PTR [ebp-0x8],eax
6401f1ee:	jmp    0x6401f1f3
6401f1f0:	mov    DWORD PTR [ebp-0x8],ebx
6401f1f3:	cmp    DWORD PTR [ebp-0x8],ebx
6401f1f6:	jne    0x6401f205
6401f1f8:	call   0x64014c30
6401f1fd:	mov    DWORD PTR [eax],0xc
6401f203:	jmp    0x6401f188
6401f205:	mov    edx,DWORD PTR [ebp+0x10]
6401f208:	mov    eax,DWORD PTR [edx]
6401f20a:	push   0x1
6401f20c:	push   DWORD PTR [eax+0x4]
6401f20f:	push   ecx
6401f210:	push   DWORD PTR [ebp-0x8]
6401f213:	push   0xffffffff
6401f215:	push   edi
6401f216:	push   esi
6401f217:	push   DWORD PTR [eax+0x14]
6401f21a:	push   edx
6401f21b:	call   0x6401a23d
6401f220:	add    esp,0x24
6401f223:	test   eax,eax
6401f225:	je     0x6401f23a
6401f227:	push   DWORD PTR [ebp-0x8]
6401f22a:	push   DWORD PTR [ebp+0xc]
6401f22d:	push   edi
6401f22e:	call   0x64014828
6401f233:	add    esp,0xc
6401f236:	mov    esi,eax
6401f238:	jmp    0x6401f246
6401f23a:	call   0x64014c30
6401f23f:	push   0x2a
6401f241:	pop    ecx
6401f242:	mov    DWORD PTR [eax],ecx
6401f244:	mov    esi,ecx
6401f246:	push   DWORD PTR [ebp-0x8]
6401f249:	call   0x6401337c
6401f24e:	pop    ecx
6401f24f:	mov    eax,esi
6401f251:	lea    esp,[ebp-0x18]
6401f254:	pop    edi
6401f255:	pop    esi
6401f256:	pop    ebx
6401f257:	mov    ecx,DWORD PTR [ebp-0x4]
6401f25a:	xor    ecx,ebp
6401f25c:	call   0x64012e6c
6401f261:	leave  
6401f262:	ret    
6401f263:	push   ebp
6401f264:	mov    ebp,esp
6401f266:	sub    esp,0x10
6401f269:	push   DWORD PTR [ebp+0x10]
6401f26c:	lea    ecx,[ebp-0x10]
6401f26f:	call   0x6401300f
6401f274:	lea    eax,[ebp-0x10]
6401f277:	push   eax
6401f278:	push   DWORD PTR [ebp+0xc]
6401f27b:	push   DWORD PTR [ebp+0x8]
6401f27e:	call   0x6401f0e2
6401f283:	add    esp,0xc
6401f286:	cmp    BYTE PTR [ebp-0x4],0x0
6401f28a:	je     0x6401f293
6401f28c:	mov    ecx,DWORD PTR [ebp-0x8]
6401f28f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401f293:	leave  
6401f294:	ret    
6401f295:	push   ebx
6401f296:	xor    ebx,ebx
6401f298:	cmp    DWORD PTR ds:0x6402e934,ebx
6401f29e:	jne    0x6401f2e2
6401f2a0:	mov    eax,DWORD PTR [esp+0x8]
6401f2a4:	cmp    eax,ebx
6401f2a6:	jne    0x6401f2c4
6401f2a8:	call   0x64014c30
6401f2ad:	push   ebx
6401f2ae:	push   ebx
6401f2af:	push   ebx
6401f2b0:	push   ebx
6401f2b1:	push   ebx
6401f2b2:	mov    DWORD PTR [eax],0x16
6401f2b8:	call   0x640129a4
6401f2bd:	add    esp,0x14
6401f2c0:	xor    eax,eax
6401f2c2:	pop    ebx
6401f2c3:	ret    
6401f2c4:	cmp    BYTE PTR [eax],bl
6401f2c6:	mov    edx,eax
6401f2c8:	je     0x6401f2f5
6401f2ca:	mov    cl,BYTE PTR [edx]
6401f2cc:	cmp    cl,0x41
6401f2cf:	jl     0x6401f2db
6401f2d1:	cmp    cl,0x5a
6401f2d4:	jg     0x6401f2db
6401f2d6:	add    cl,0x20
6401f2d9:	mov    BYTE PTR [edx],cl
6401f2db:	inc    edx
6401f2dc:	cmp    BYTE PTR [edx],bl
6401f2de:	jne    0x6401f2ca
6401f2e0:	pop    ebx
6401f2e1:	ret    
6401f2e2:	push   ebx
6401f2e3:	push   0xffffffff
6401f2e5:	push   DWORD PTR [esp+0x10]
6401f2e9:	call   0x6401f263
6401f2ee:	mov    eax,DWORD PTR [esp+0x14]
6401f2f2:	add    esp,0xc
6401f2f5:	pop    ebx
6401f2f6:	ret    
6401f2f7:	ret    
6401f2f8:	mov    eax,0x6401fe03
6401f2fd:	mov    ds:0x6402db4c,eax
6401f302:	mov    DWORD PTR ds:0x6402db50,0x6401f4ff
6401f30c:	mov    DWORD PTR ds:0x6402db54,0x6401f4bd
6401f316:	mov    DWORD PTR ds:0x6402db58,0x6401f4f1
6401f320:	mov    DWORD PTR ds:0x6402db5c,0x6401f467
6401f32a:	mov    ds:0x6402db60,eax
6401f32f:	mov    DWORD PTR ds:0x6402db64,0x6401fd7d
6401f339:	mov    DWORD PTR ds:0x6402db68,0x6401f47d
6401f343:	mov    DWORD PTR ds:0x6402db6c,0x6401f3e7
6401f34d:	mov    DWORD PTR ds:0x6402db70,0x6401f376
6401f357:	ret    
6401f358:	call   0x6401f2f8
6401f35d:	call   0x6401fe89
6401f362:	cmp    DWORD PTR [esp+0x4],0x0
6401f367:	mov    ds:0x6402f034,eax
6401f36c:	je     0x6401f373
6401f36e:	call   0x6401fe24
6401f373:	fnclex 
6401f375:	ret    
6401f376:	push   ebp
6401f377:	mov    ebp,esp
6401f379:	sub    esp,0x10
6401f37c:	push   esi
6401f37d:	push   DWORD PTR [ebp+0xc]
6401f380:	lea    ecx,[ebp-0x10]
6401f383:	call   0x6401300f
6401f388:	mov    esi,DWORD PTR [ebp+0x8]
6401f38b:	movsx  eax,BYTE PTR [esi]
6401f38e:	push   eax
6401f38f:	call   0x64013cdf
6401f394:	cmp    eax,0x65
6401f397:	jmp    0x6401f3a5
6401f399:	inc    esi
6401f39a:	movzx  eax,BYTE PTR [esi]
6401f39d:	push   eax
6401f39e:	call   0x64013aa8
6401f3a3:	test   eax,eax
6401f3a5:	pop    ecx
6401f3a6:	jne    0x6401f399
6401f3a8:	movsx  eax,BYTE PTR [esi]
6401f3ab:	push   eax
6401f3ac:	call   0x64013cdf
6401f3b1:	cmp    eax,0x78
6401f3b4:	pop    ecx
6401f3b5:	jne    0x6401f3b9
6401f3b7:	inc    esi
6401f3b8:	inc    esi
6401f3b9:	mov    ecx,DWORD PTR [ebp-0x10]
6401f3bc:	mov    ecx,DWORD PTR [ecx+0xbc]
6401f3c2:	mov    ecx,DWORD PTR [ecx]
6401f3c4:	mov    al,BYTE PTR [esi]
6401f3c6:	mov    cl,BYTE PTR [ecx]
6401f3c8:	mov    BYTE PTR [esi],cl
6401f3ca:	inc    esi
6401f3cb:	mov    cl,BYTE PTR [esi]
6401f3cd:	mov    BYTE PTR [esi],al
6401f3cf:	mov    al,cl
6401f3d1:	mov    cl,BYTE PTR [esi]
6401f3d3:	inc    esi
6401f3d4:	test   cl,cl
6401f3d6:	jne    0x6401f3cb
6401f3d8:	cmp    BYTE PTR [ebp-0x4],cl
6401f3db:	pop    esi
6401f3dc:	je     0x6401f3e5
6401f3de:	mov    eax,DWORD PTR [ebp-0x8]
6401f3e1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f3e5:	leave  
6401f3e6:	ret    
6401f3e7:	push   ebp
6401f3e8:	mov    ebp,esp
6401f3ea:	sub    esp,0x10
6401f3ed:	push   esi
6401f3ee:	push   DWORD PTR [ebp+0xc]
6401f3f1:	lea    ecx,[ebp-0x10]
6401f3f4:	call   0x6401300f
6401f3f9:	mov    eax,DWORD PTR [ebp+0x8]
6401f3fc:	mov    cl,BYTE PTR [eax]
6401f3fe:	test   cl,cl
6401f400:	mov    esi,DWORD PTR [ebp-0x10]
6401f403:	je     0x6401f41a
6401f405:	mov    edx,DWORD PTR [esi+0xbc]
6401f40b:	mov    edx,DWORD PTR [edx]
6401f40d:	mov    dl,BYTE PTR [edx]
6401f40f:	cmp    cl,dl
6401f411:	je     0x6401f41a
6401f413:	inc    eax
6401f414:	mov    cl,BYTE PTR [eax]
6401f416:	test   cl,cl
6401f418:	jne    0x6401f40f
6401f41a:	mov    cl,BYTE PTR [eax]
6401f41c:	inc    eax
6401f41d:	test   cl,cl
6401f41f:	je     0x6401f457
6401f421:	jmp    0x6401f42e
6401f423:	cmp    cl,0x65
6401f426:	je     0x6401f434
6401f428:	cmp    cl,0x45
6401f42b:	je     0x6401f434
6401f42d:	inc    eax
6401f42e:	mov    cl,BYTE PTR [eax]
6401f430:	test   cl,cl
6401f432:	jne    0x6401f423
6401f434:	mov    edx,eax
6401f436:	dec    eax
6401f437:	cmp    BYTE PTR [eax],0x30
6401f43a:	je     0x6401f436
6401f43c:	mov    ecx,DWORD PTR [esi+0xbc]
6401f442:	mov    ecx,DWORD PTR [ecx]
6401f444:	push   ebx
6401f445:	mov    bl,BYTE PTR [eax]
6401f447:	cmp    bl,BYTE PTR [ecx]
6401f449:	pop    ebx
6401f44a:	jne    0x6401f44d
6401f44c:	dec    eax
6401f44d:	mov    cl,BYTE PTR [edx]
6401f44f:	inc    eax
6401f450:	inc    edx
6401f451:	test   cl,cl
6401f453:	mov    BYTE PTR [eax],cl
6401f455:	jne    0x6401f44d
6401f457:	cmp    BYTE PTR [ebp-0x4],0x0
6401f45b:	pop    esi
6401f45c:	je     0x6401f465
6401f45e:	mov    eax,DWORD PTR [ebp-0x8]
6401f461:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f465:	leave  
6401f466:	ret    
6401f467:	fldz   
6401f469:	mov    eax,DWORD PTR [esp+0x4]
6401f46d:	fcomp  QWORD PTR [eax]
6401f46f:	fnstsw ax
6401f471:	test   ah,0x41
6401f474:	jp     0x6401f47a
6401f476:	xor    eax,eax
6401f478:	inc    eax
6401f479:	ret    
6401f47a:	xor    eax,eax
6401f47c:	ret    
6401f47d:	push   ebp
6401f47e:	mov    ebp,esp
6401f480:	push   ecx
6401f481:	push   ecx
6401f482:	cmp    DWORD PTR [ebp+0x8],0x0
6401f486:	push   DWORD PTR [ebp+0x14]
6401f489:	push   DWORD PTR [ebp+0x10]
6401f48c:	je     0x6401f4a7
6401f48e:	lea    eax,[ebp-0x8]
6401f491:	push   eax
6401f492:	call   0x6401feed
6401f497:	mov    ecx,DWORD PTR [ebp-0x8]
6401f49a:	mov    eax,DWORD PTR [ebp+0xc]
6401f49d:	mov    DWORD PTR [eax],ecx
6401f49f:	mov    ecx,DWORD PTR [ebp-0x4]
6401f4a2:	mov    DWORD PTR [eax+0x4],ecx
6401f4a5:	jmp    0x6401f4b8
6401f4a7:	lea    eax,[ebp+0x8]
6401f4aa:	push   eax
6401f4ab:	call   0x6401ff93
6401f4b0:	mov    eax,DWORD PTR [ebp+0xc]
6401f4b3:	mov    ecx,DWORD PTR [ebp+0x8]
6401f4b6:	mov    DWORD PTR [eax],ecx
6401f4b8:	add    esp,0xc
6401f4bb:	leave  
6401f4bc:	ret    
6401f4bd:	push   0x0
6401f4bf:	push   DWORD PTR [esp+0x10]
6401f4c3:	push   DWORD PTR [esp+0x10]
6401f4c7:	push   DWORD PTR [esp+0x10]
6401f4cb:	call   0x6401f47d
6401f4d0:	add    esp,0x10
6401f4d3:	ret    
6401f4d4:	test   edi,edi
6401f4d6:	push   esi
6401f4d7:	mov    esi,eax
6401f4d9:	je     0x6401f4ef
6401f4db:	push   esi
6401f4dc:	call   0x64014630
6401f4e1:	inc    eax
6401f4e2:	push   eax
6401f4e3:	push   esi
6401f4e4:	add    esi,edi
6401f4e6:	push   esi
6401f4e7:	call   0x64013eb0
6401f4ec:	add    esp,0x10
6401f4ef:	pop    esi
6401f4f0:	ret    
6401f4f1:	push   0x0
6401f4f3:	push   DWORD PTR [esp+0x8]
6401f4f7:	call   0x6401f376
6401f4fc:	pop    ecx
6401f4fd:	pop    ecx
6401f4fe:	ret    
6401f4ff:	push   0x0
6401f501:	push   DWORD PTR [esp+0x8]
6401f505:	call   0x6401f3e7
6401f50a:	pop    ecx
6401f50b:	pop    ecx
6401f50c:	ret    
6401f50d:	push   ebp
6401f50e:	mov    ebp,esp
6401f510:	sub    esp,0x10
6401f513:	push   ebx
6401f514:	push   esi
6401f515:	push   edi
6401f516:	push   DWORD PTR [ebp+0x1c]
6401f519:	lea    ecx,[ebp-0x10]
6401f51c:	mov    ebx,eax
6401f51e:	call   0x6401300f
6401f523:	xor    esi,esi
6401f525:	cmp    ebx,esi
6401f527:	jne    0x6401f554
6401f529:	call   0x64014c30
6401f52e:	push   0x16
6401f530:	pop    edi
6401f531:	push   esi
6401f532:	push   esi
6401f533:	push   esi
6401f534:	push   esi
6401f535:	push   esi
6401f536:	mov    DWORD PTR [eax],edi
6401f538:	call   0x640129a4
6401f53d:	add    esp,0x14
6401f540:	cmp    BYTE PTR [ebp-0x4],0x0
6401f544:	je     0x6401f54d
6401f546:	mov    eax,DWORD PTR [ebp-0x8]
6401f549:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f54d:	mov    eax,edi
6401f54f:	jmp    0x6401f675
6401f554:	cmp    DWORD PTR [ebp+0x8],esi
6401f557:	jbe    0x6401f529
6401f559:	cmp    DWORD PTR [ebp+0xc],esi
6401f55c:	jle    0x6401f563
6401f55e:	mov    eax,DWORD PTR [ebp+0xc]
6401f561:	jmp    0x6401f565
6401f563:	xor    eax,eax
6401f565:	add    eax,0x9
6401f568:	cmp    DWORD PTR [ebp+0x8],eax
6401f56b:	ja     0x6401f576
6401f56d:	call   0x64014c30
6401f572:	push   0x22
6401f574:	jmp    0x6401f530
6401f576:	cmp    BYTE PTR [ebp+0x18],0x0
6401f57a:	je     0x6401f59a
6401f57c:	mov    edx,DWORD PTR [ebp+0x14]
6401f57f:	xor    eax,eax
6401f581:	cmp    DWORD PTR [ebp+0xc],esi
6401f584:	setg   al
6401f587:	xor    ecx,ecx
6401f589:	cmp    DWORD PTR [edx],0x2d
6401f58c:	sete   cl
6401f58f:	mov    edi,eax
6401f591:	add    ecx,ebx
6401f593:	mov    eax,ecx
6401f595:	call   0x6401f4d4
6401f59a:	mov    edi,DWORD PTR [ebp+0x14]
6401f59d:	cmp    DWORD PTR [edi],0x2d
6401f5a0:	mov    esi,ebx
6401f5a2:	jne    0x6401f5aa
6401f5a4:	mov    BYTE PTR [ebx],0x2d
6401f5a7:	lea    esi,[ebx+0x1]
6401f5aa:	cmp    DWORD PTR [ebp+0xc],0x0
6401f5ae:	jle    0x6401f5c8
6401f5b0:	lea    eax,[esi+0x1]
6401f5b3:	mov    cl,BYTE PTR [eax]
6401f5b5:	mov    BYTE PTR [esi],cl
6401f5b7:	mov    esi,eax
6401f5b9:	mov    eax,DWORD PTR [ebp-0x10]
6401f5bc:	mov    eax,DWORD PTR [eax+0xbc]
6401f5c2:	mov    eax,DWORD PTR [eax]
6401f5c4:	mov    al,BYTE PTR [eax]
6401f5c6:	mov    BYTE PTR [esi],al
6401f5c8:	xor    eax,eax
6401f5ca:	cmp    BYTE PTR [ebp+0x18],al
6401f5cd:	sete   al
6401f5d0:	add    eax,DWORD PTR [ebp+0xc]
6401f5d3:	add    esi,eax
6401f5d5:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401f5d9:	jne    0x6401f5e0
6401f5db:	or     ebx,0xffffffff
6401f5de:	jmp    0x6401f5e5
6401f5e0:	sub    ebx,esi
6401f5e2:	add    ebx,DWORD PTR [ebp+0x8]
6401f5e5:	push   0x640275e8
6401f5ea:	push   ebx
6401f5eb:	push   esi
6401f5ec:	call   0x64014828
6401f5f1:	add    esp,0xc
6401f5f4:	xor    ebx,ebx
6401f5f6:	test   eax,eax
6401f5f8:	je     0x6401f607
6401f5fa:	push   ebx
6401f5fb:	push   ebx
6401f5fc:	push   ebx
6401f5fd:	push   ebx
6401f5fe:	push   ebx
6401f5ff:	call   0x640128a8
6401f604:	add    esp,0x14
6401f607:	cmp    DWORD PTR [ebp+0x10],ebx
6401f60a:	lea    ecx,[esi+0x2]
6401f60d:	je     0x6401f612
6401f60f:	mov    BYTE PTR [esi],0x45
6401f612:	mov    eax,DWORD PTR [edi+0xc]
6401f615:	inc    esi
6401f616:	cmp    BYTE PTR [eax],0x30
6401f619:	je     0x6401f649
6401f61b:	mov    eax,DWORD PTR [edi+0x4]
6401f61e:	dec    eax
6401f61f:	jns    0x6401f626
6401f621:	neg    eax
6401f623:	mov    BYTE PTR [esi],0x2d
6401f626:	inc    esi
6401f627:	cmp    eax,0x64
6401f62a:	jl     0x6401f636
6401f62c:	cdq    
6401f62d:	push   0x64
6401f62f:	pop    edi
6401f630:	idiv   edi
6401f632:	add    BYTE PTR [esi],al
6401f634:	mov    eax,edx
6401f636:	inc    esi
6401f637:	cmp    eax,0xa
6401f63a:	jl     0x6401f646
6401f63c:	cdq    
6401f63d:	push   0xa
6401f63f:	pop    edi
6401f640:	idiv   edi
6401f642:	add    BYTE PTR [esi],al
6401f644:	mov    eax,edx
6401f646:	add    BYTE PTR [esi+0x1],al
6401f649:	test   BYTE PTR ds:0x6402f038,0x1
6401f650:	je     0x6401f666
6401f652:	cmp    BYTE PTR [ecx],0x30
6401f655:	jne    0x6401f666
6401f657:	push   0x3
6401f659:	lea    eax,[ecx+0x1]
6401f65c:	push   eax
6401f65d:	push   ecx
6401f65e:	call   0x64013eb0
6401f663:	add    esp,0xc
6401f666:	cmp    BYTE PTR [ebp-0x4],0x0
6401f66a:	je     0x6401f673
6401f66c:	mov    eax,DWORD PTR [ebp-0x8]
6401f66f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f673:	xor    eax,eax
6401f675:	pop    edi
6401f676:	pop    esi
6401f677:	pop    ebx
6401f678:	leave  
6401f679:	ret    
6401f67a:	push   ebp
6401f67b:	mov    ebp,esp
6401f67d:	sub    esp,0x2c
6401f680:	mov    eax,ds:0x6402d09c
6401f685:	xor    eax,ebp
6401f687:	mov    DWORD PTR [ebp-0x4],eax
6401f68a:	mov    eax,DWORD PTR [ebp+0x8]
6401f68d:	push   ebx
6401f68e:	push   esi
6401f68f:	push   edi
6401f690:	mov    edi,DWORD PTR [ebp+0xc]
6401f693:	push   0x16
6401f695:	pop    esi
6401f696:	push   esi
6401f697:	lea    ecx,[ebp-0x1c]
6401f69a:	push   ecx
6401f69b:	lea    ecx,[ebp-0x2c]
6401f69e:	push   ecx
6401f69f:	push   DWORD PTR [eax+0x4]
6401f6a2:	push   DWORD PTR [eax]
6401f6a4:	call   0x640201b1
6401f6a9:	xor    ebx,ebx
6401f6ab:	add    esp,0x14
6401f6ae:	cmp    edi,ebx
6401f6b0:	jne    0x6401f6ca
6401f6b2:	call   0x64014c30
6401f6b7:	push   ebx
6401f6b8:	push   ebx
6401f6b9:	push   ebx
6401f6ba:	push   ebx
6401f6bb:	push   ebx
6401f6bc:	mov    DWORD PTR [eax],esi
6401f6be:	call   0x640129a4
6401f6c3:	add    esp,0x14
6401f6c6:	mov    eax,esi
6401f6c8:	jmp    0x6401f739
6401f6ca:	mov    eax,DWORD PTR [ebp+0x10]
6401f6cd:	cmp    eax,ebx
6401f6cf:	jbe    0x6401f6b2
6401f6d1:	cmp    eax,0xffffffff
6401f6d4:	mov    esi,DWORD PTR [ebp+0x14]
6401f6d7:	jne    0x6401f6de
6401f6d9:	or     eax,0xffffffff
6401f6dc:	jmp    0x6401f6f2
6401f6de:	xor    ecx,ecx
6401f6e0:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f6e4:	sete   cl
6401f6e7:	sub    eax,ecx
6401f6e9:	xor    ecx,ecx
6401f6eb:	cmp    esi,ebx
6401f6ed:	setg   cl
6401f6f0:	sub    eax,ecx
6401f6f2:	lea    ecx,[ebp-0x2c]
6401f6f5:	push   ecx
6401f6f6:	lea    ecx,[esi+0x1]
6401f6f9:	push   ecx
6401f6fa:	push   eax
6401f6fb:	xor    eax,eax
6401f6fd:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f701:	sete   al
6401f704:	xor    ecx,ecx
6401f706:	cmp    esi,ebx
6401f708:	setg   cl
6401f70b:	add    eax,edi
6401f70d:	add    ecx,eax
6401f70f:	push   ecx
6401f710:	call   0x64020039
6401f715:	add    esp,0x10
6401f718:	cmp    eax,ebx
6401f71a:	je     0x6401f720
6401f71c:	mov    BYTE PTR [edi],bl
6401f71e:	jmp    0x6401f739
6401f720:	push   DWORD PTR [ebp+0x1c]
6401f723:	lea    eax,[ebp-0x2c]
6401f726:	push   ebx
6401f727:	push   eax
6401f728:	push   DWORD PTR [ebp+0x18]
6401f72b:	mov    eax,edi
6401f72d:	push   esi
6401f72e:	push   DWORD PTR [ebp+0x10]
6401f731:	call   0x6401f50d
6401f736:	add    esp,0x18
6401f739:	mov    ecx,DWORD PTR [ebp-0x4]
6401f73c:	pop    edi
6401f73d:	pop    esi
6401f73e:	xor    ecx,ebp
6401f740:	pop    ebx
6401f741:	call   0x64012e6c
6401f746:	leave  
6401f747:	ret    
6401f748:	push   ebp
6401f749:	mov    ebp,esp
6401f74b:	push   0x0
6401f74d:	push   DWORD PTR [ebp+0x18]
6401f750:	push   DWORD PTR [ebp+0x14]
6401f753:	push   DWORD PTR [ebp+0x10]
6401f756:	push   DWORD PTR [ebp+0xc]
6401f759:	push   DWORD PTR [ebp+0x8]
6401f75c:	call   0x6401f67a
6401f761:	add    esp,0x18
6401f764:	pop    ebp
6401f765:	ret    
6401f766:	push   ebp
6401f767:	mov    ebp,esp
6401f769:	sub    esp,0x24
6401f76c:	push   esi
6401f76d:	push   edi
6401f76e:	push   DWORD PTR [ebp+0x1c]
6401f771:	lea    ecx,[ebp-0x24]
6401f774:	mov    DWORD PTR [ebp-0x14],0x3ff
6401f77b:	xor    edi,edi
6401f77d:	mov    DWORD PTR [ebp-0x4],0x30
6401f784:	call   0x6401300f
6401f789:	cmp    DWORD PTR [ebp+0x14],edi
6401f78c:	jge    0x6401f791
6401f78e:	mov    DWORD PTR [ebp+0x14],edi
6401f791:	mov    esi,DWORD PTR [ebp+0xc]
6401f794:	cmp    esi,edi
6401f796:	jne    0x6401f7c3
6401f798:	call   0x64014c30
6401f79d:	push   0x16
6401f79f:	pop    esi
6401f7a0:	push   edi
6401f7a1:	push   edi
6401f7a2:	push   edi
6401f7a3:	push   edi
6401f7a4:	push   edi
6401f7a5:	mov    DWORD PTR [eax],esi
6401f7a7:	call   0x640129a4
6401f7ac:	add    esp,0x14
6401f7af:	cmp    BYTE PTR [ebp-0x18],0x0
6401f7b3:	je     0x6401f7bc
6401f7b5:	mov    eax,DWORD PTR [ebp-0x1c]
6401f7b8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f7bc:	mov    eax,esi
6401f7be:	jmp    0x6401fad3
6401f7c3:	cmp    DWORD PTR [ebp+0x10],edi
6401f7c6:	jbe    0x6401f798
6401f7c8:	mov    eax,DWORD PTR [ebp+0x14]
6401f7cb:	add    eax,0xb
6401f7ce:	cmp    DWORD PTR [ebp+0x10],eax
6401f7d1:	mov    BYTE PTR [esi],0x0
6401f7d4:	ja     0x6401f7df
6401f7d6:	call   0x64014c30
6401f7db:	push   0x22
6401f7dd:	jmp    0x6401f79f
6401f7df:	mov    edi,DWORD PTR [ebp+0x8]
6401f7e2:	mov    eax,DWORD PTR [edi]
6401f7e4:	mov    DWORD PTR [ebp-0xc],eax
6401f7e7:	mov    eax,DWORD PTR [edi+0x4]
6401f7ea:	mov    ecx,eax
6401f7ec:	shr    ecx,0x14
6401f7ef:	mov    edx,0x7ff
6401f7f4:	push   ebx
6401f7f5:	and    ecx,edx
6401f7f7:	xor    ebx,ebx
6401f7f9:	cmp    ecx,edx
6401f7fb:	jne    0x6401f891
6401f801:	test   ebx,ebx
6401f803:	jne    0x6401f891
6401f809:	mov    eax,DWORD PTR [ebp+0x10]
6401f80c:	cmp    eax,0xffffffff
6401f80f:	jne    0x6401f815
6401f811:	or     eax,eax
6401f813:	jmp    0x6401f818
6401f815:	add    eax,0xfffffffe
6401f818:	push   0x0
6401f81a:	push   DWORD PTR [ebp+0x14]
6401f81d:	lea    ebx,[esi+0x2]
6401f820:	push   eax
6401f821:	push   ebx
6401f822:	push   edi
6401f823:	call   0x6401f748
6401f828:	add    esp,0x14
6401f82b:	test   eax,eax
6401f82d:	je     0x6401f848
6401f82f:	cmp    BYTE PTR [ebp-0x18],0x0
6401f833:	mov    BYTE PTR [esi],0x0
6401f836:	je     0x6401fad2
6401f83c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401f83f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401f843:	jmp    0x6401fad2
6401f848:	cmp    BYTE PTR [ebx],0x2d
6401f84b:	jne    0x6401f851
6401f84d:	mov    BYTE PTR [esi],0x2d
6401f850:	inc    esi
6401f851:	mov    BYTE PTR [esi],0x30
6401f854:	inc    esi
6401f855:	cmp    DWORD PTR [ebp+0x18],0x0
6401f859:	push   0x65
6401f85b:	sete   al
6401f85e:	dec    al
6401f860:	and    al,0xe0
6401f862:	add    al,0x78
6401f864:	mov    BYTE PTR [esi],al
6401f866:	inc    esi
6401f867:	push   esi
6401f868:	call   0x6401fec0
6401f86d:	test   eax,eax
6401f86f:	pop    ecx
6401f870:	pop    ecx
6401f871:	je     0x6401fac3
6401f877:	cmp    DWORD PTR [ebp+0x18],0x0
6401f87b:	sete   cl
6401f87e:	dec    cl
6401f880:	and    cl,0xe0
6401f883:	add    cl,0x70
6401f886:	mov    BYTE PTR [eax],cl
6401f888:	mov    BYTE PTR [eax+0x3],0x0
6401f88c:	jmp    0x6401fac3
6401f891:	and    eax,0x80000000
6401f896:	xor    ecx,ecx
6401f898:	or     ecx,eax
6401f89a:	je     0x6401f8a0
6401f89c:	mov    BYTE PTR [esi],0x2d
6401f89f:	inc    esi
6401f8a0:	mov    ebx,DWORD PTR [ebp+0x18]
6401f8a3:	mov    BYTE PTR [esi],0x30
6401f8a6:	inc    esi
6401f8a7:	test   ebx,ebx
6401f8a9:	sete   al
6401f8ac:	dec    al
6401f8ae:	and    al,0xe0
6401f8b0:	add    al,0x78
6401f8b2:	mov    BYTE PTR [esi],al
6401f8b4:	mov    ecx,DWORD PTR [edi+0x4]
6401f8b7:	inc    esi
6401f8b8:	neg    ebx
6401f8ba:	sbb    ebx,ebx
6401f8bc:	and    ebx,0xffffffe0
6401f8bf:	and    ecx,0x7ff00000
6401f8c5:	xor    eax,eax
6401f8c7:	add    ebx,0x27
6401f8ca:	xor    edx,edx
6401f8cc:	or     eax,ecx
6401f8ce:	jne    0x6401f8f1
6401f8d0:	mov    BYTE PTR [esi],0x30
6401f8d3:	mov    ecx,DWORD PTR [edi+0x4]
6401f8d6:	mov    eax,DWORD PTR [edi]
6401f8d8:	and    ecx,0xfffff
6401f8de:	inc    esi
6401f8df:	or     eax,ecx
6401f8e1:	jne    0x6401f8e8
6401f8e3:	mov    DWORD PTR [ebp-0x14],edx
6401f8e6:	jmp    0x6401f8f5
6401f8e8:	mov    DWORD PTR [ebp-0x14],0x3fe
6401f8ef:	jmp    0x6401f8f5
6401f8f1:	mov    BYTE PTR [esi],0x31
6401f8f4:	inc    esi
6401f8f5:	mov    eax,esi
6401f8f7:	inc    esi
6401f8f8:	cmp    DWORD PTR [ebp+0x14],edx
6401f8fb:	mov    DWORD PTR [ebp+0xc],eax
6401f8fe:	jne    0x6401f904
6401f900:	mov    BYTE PTR [eax],dl
6401f902:	jmp    0x6401f913
6401f904:	mov    ecx,DWORD PTR [ebp-0x24]
6401f907:	mov    ecx,DWORD PTR [ecx+0xbc]
6401f90d:	mov    ecx,DWORD PTR [ecx]
6401f90f:	mov    cl,BYTE PTR [ecx]
6401f911:	mov    BYTE PTR [eax],cl
6401f913:	mov    ecx,DWORD PTR [edi+0x4]
6401f916:	mov    eax,DWORD PTR [edi]
6401f918:	and    ecx,0xfffff
6401f91e:	mov    DWORD PTR [ebp-0x8],ecx
6401f921:	ja     0x6401f92b
6401f923:	cmp    eax,edx
6401f925:	jbe    0x6401f9e0
6401f92b:	mov    DWORD PTR [ebp-0xc],edx
6401f92e:	mov    DWORD PTR [ebp-0x8],0xf0000
6401f935:	cmp    DWORD PTR [ebp+0x14],0x0
6401f939:	jle    0x6401f988
6401f93b:	mov    edx,DWORD PTR [edi+0x4]
6401f93e:	and    edx,DWORD PTR [ebp-0x8]
6401f941:	mov    eax,DWORD PTR [edi]
6401f943:	movsx  ecx,WORD PTR [ebp-0x4]
6401f947:	and    eax,DWORD PTR [ebp-0xc]
6401f94a:	and    edx,0xfffff
6401f950:	call   0x64020320
6401f955:	add    ax,0x30
6401f959:	movzx  eax,ax
6401f95c:	cmp    ax,0x39
6401f960:	jbe    0x6401f964
6401f962:	add    eax,ebx
6401f964:	mov    ecx,DWORD PTR [ebp-0x8]
6401f967:	sub    DWORD PTR [ebp-0x4],0x4
6401f96b:	mov    BYTE PTR [esi],al
6401f96d:	mov    eax,DWORD PTR [ebp-0xc]
6401f970:	shrd   eax,ecx,0x4
6401f974:	shr    ecx,0x4
6401f977:	inc    esi
6401f978:	dec    DWORD PTR [ebp+0x14]
6401f97b:	cmp    WORD PTR [ebp-0x4],0x0
6401f980:	mov    DWORD PTR [ebp-0xc],eax
6401f983:	mov    DWORD PTR [ebp-0x8],ecx
6401f986:	jge    0x6401f935
6401f988:	cmp    WORD PTR [ebp-0x4],0x0
6401f98d:	jl     0x6401f9e0
6401f98f:	mov    edx,DWORD PTR [edi+0x4]
6401f992:	and    edx,DWORD PTR [ebp-0x8]
6401f995:	mov    eax,DWORD PTR [edi]
6401f997:	movsx  ecx,WORD PTR [ebp-0x4]
6401f99b:	and    eax,DWORD PTR [ebp-0xc]
6401f99e:	and    edx,0xfffff
6401f9a4:	call   0x64020320
6401f9a9:	cmp    ax,0x8
6401f9ad:	jbe    0x6401f9e0
6401f9af:	lea    eax,[esi-0x1]
6401f9b2:	mov    cl,BYTE PTR [eax]
6401f9b4:	cmp    cl,0x66
6401f9b7:	je     0x6401f9be
6401f9b9:	cmp    cl,0x46
6401f9bc:	jne    0x6401f9c4
6401f9be:	mov    BYTE PTR [eax],0x30
6401f9c1:	dec    eax
6401f9c2:	jmp    0x6401f9b2
6401f9c4:	cmp    eax,DWORD PTR [ebp+0xc]
6401f9c7:	je     0x6401f9dd
6401f9c9:	mov    cl,BYTE PTR [eax]
6401f9cb:	cmp    cl,0x39
6401f9ce:	jne    0x6401f9d7
6401f9d0:	add    bl,0x3a
6401f9d3:	mov    BYTE PTR [eax],bl
6401f9d5:	jmp    0x6401f9e0
6401f9d7:	inc    cl
6401f9d9:	mov    BYTE PTR [eax],cl
6401f9db:	jmp    0x6401f9e0
6401f9dd:	inc    BYTE PTR [eax-0x1]
6401f9e0:	cmp    DWORD PTR [ebp+0x14],0x0
6401f9e4:	jle    0x6401f9f7
6401f9e6:	push   DWORD PTR [ebp+0x14]
6401f9e9:	push   0x30
6401f9eb:	push   esi
6401f9ec:	call   0x64013570
6401f9f1:	add    esp,0xc
6401f9f4:	add    esi,DWORD PTR [ebp+0x14]
6401f9f7:	mov    eax,DWORD PTR [ebp+0xc]
6401f9fa:	cmp    BYTE PTR [eax],0x0
6401f9fd:	jne    0x6401fa01
6401f9ff:	mov    esi,eax
6401fa01:	cmp    DWORD PTR [ebp+0x18],0x0
6401fa05:	mov    cl,0x34
6401fa07:	sete   al
6401fa0a:	dec    al
6401fa0c:	and    al,0xe0
6401fa0e:	add    al,0x70
6401fa10:	mov    BYTE PTR [esi],al
6401fa12:	mov    eax,DWORD PTR [edi]
6401fa14:	mov    edx,DWORD PTR [edi+0x4]
6401fa17:	inc    esi
6401fa18:	call   0x64020320
6401fa1d:	xor    ebx,ebx
6401fa1f:	and    eax,0x7ff
6401fa24:	and    edx,ebx
6401fa26:	sub    eax,DWORD PTR [ebp-0x14]
6401fa29:	push   ebx
6401fa2a:	pop    ecx
6401fa2b:	sbb    edx,ecx
6401fa2d:	js     0x6401fa3b
6401fa2f:	jg     0x6401fa35
6401fa31:	cmp    eax,ebx
6401fa33:	jb     0x6401fa3b
6401fa35:	mov    BYTE PTR [esi],0x2b
6401fa38:	inc    esi
6401fa39:	jmp    0x6401fa45
6401fa3b:	mov    BYTE PTR [esi],0x2d
6401fa3e:	inc    esi
6401fa3f:	neg    eax
6401fa41:	adc    edx,ebx
6401fa43:	neg    edx
6401fa45:	cmp    edx,ebx
6401fa47:	mov    edi,esi
6401fa49:	mov    BYTE PTR [esi],0x30
6401fa4c:	jl     0x6401fa72
6401fa4e:	mov    ecx,0x3e8
6401fa53:	jg     0x6401fa59
6401fa55:	cmp    eax,ecx
6401fa57:	jb     0x6401fa72
6401fa59:	push   ebx
6401fa5a:	push   ecx
6401fa5b:	push   edx
6401fa5c:	push   eax
6401fa5d:	call   0x64020240
6401fa62:	add    al,0x30
6401fa64:	mov    BYTE PTR [esi],al
6401fa66:	inc    esi
6401fa67:	cmp    esi,edi
6401fa69:	mov    DWORD PTR [ebp-0x10],edx
6401fa6c:	mov    eax,ecx
6401fa6e:	mov    edx,ebx
6401fa70:	jne    0x6401fa7d
6401fa72:	test   edx,edx
6401fa74:	jl     0x6401fa94
6401fa76:	jg     0x6401fa7d
6401fa78:	cmp    eax,0x64
6401fa7b:	jb     0x6401fa94
6401fa7d:	push   0x0
6401fa7f:	push   0x64
6401fa81:	push   edx
6401fa82:	push   eax
6401fa83:	call   0x64020240
6401fa88:	add    al,0x30
6401fa8a:	mov    BYTE PTR [esi],al
6401fa8c:	mov    DWORD PTR [ebp-0x10],edx
6401fa8f:	inc    esi
6401fa90:	mov    eax,ecx
6401fa92:	mov    edx,ebx
6401fa94:	cmp    esi,edi
6401fa96:	jne    0x6401faa3
6401fa98:	test   edx,edx
6401fa9a:	jl     0x6401fabb
6401fa9c:	jg     0x6401faa3
6401fa9e:	cmp    eax,0xa
6401faa1:	jb     0x6401fabb
6401faa3:	push   0x0
6401faa5:	push   0xa
6401faa7:	push   edx
6401faa8:	push   eax
6401faa9:	call   0x64020240
6401faae:	add    al,0x30
6401fab0:	mov    BYTE PTR [esi],al
6401fab2:	mov    DWORD PTR [ebp-0x10],edx
6401fab5:	inc    esi
6401fab6:	mov    eax,ecx
6401fab8:	mov    DWORD PTR [ebp-0x10],ebx
6401fabb:	add    al,0x30
6401fabd:	mov    BYTE PTR [esi],al
6401fabf:	mov    BYTE PTR [esi+0x1],0x0
6401fac3:	cmp    BYTE PTR [ebp-0x18],0x0
6401fac7:	je     0x6401fad0
6401fac9:	mov    eax,DWORD PTR [ebp-0x1c]
6401facc:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fad0:	xor    eax,eax
6401fad2:	pop    ebx
6401fad3:	pop    edi
6401fad4:	pop    esi
6401fad5:	leave  
6401fad6:	ret    
6401fad7:	push   ebp
6401fad8:	mov    ebp,esp
6401fada:	sub    esp,0x10
6401fadd:	push   ebx
6401fade:	push   esi
6401fadf:	push   edi
6401fae0:	push   DWORD PTR [ebp+0x14]
6401fae3:	mov    ebx,eax
6401fae5:	mov    esi,DWORD PTR [ebx+0x4]
6401fae8:	mov    edi,ecx
6401faea:	lea    ecx,[ebp-0x10]
6401faed:	dec    esi
6401faee:	call   0x6401300f
6401faf3:	test   edi,edi
6401faf5:	jne    0x6401fb24
6401faf7:	call   0x64014c30
6401fafc:	push   0x16
6401fafe:	pop    esi
6401faff:	mov    DWORD PTR [eax],esi
6401fb01:	xor    eax,eax
6401fb03:	push   eax
6401fb04:	push   eax
6401fb05:	push   eax
6401fb06:	push   eax
6401fb07:	push   eax
6401fb08:	call   0x640129a4
6401fb0d:	add    esp,0x14
6401fb10:	cmp    BYTE PTR [ebp-0x4],0x0
6401fb14:	je     0x6401fb1d
6401fb16:	mov    eax,DWORD PTR [ebp-0x8]
6401fb19:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fb1d:	mov    eax,esi
6401fb1f:	jmp    0x6401fbc7
6401fb24:	cmp    DWORD PTR [ebp+0x8],0x0
6401fb28:	jbe    0x6401faf7
6401fb2a:	cmp    BYTE PTR [ebp+0x10],0x0
6401fb2e:	je     0x6401fb48
6401fb30:	cmp    esi,DWORD PTR [ebp+0xc]
6401fb33:	jne    0x6401fb48
6401fb35:	xor    eax,eax
6401fb37:	cmp    DWORD PTR [ebx],0x2d
6401fb3a:	sete   al
6401fb3d:	add    eax,esi
6401fb3f:	add    eax,edi
6401fb41:	mov    BYTE PTR [eax],0x30
6401fb44:	mov    BYTE PTR [eax+0x1],0x0
6401fb48:	cmp    DWORD PTR [ebx],0x2d
6401fb4b:	mov    esi,edi
6401fb4d:	jne    0x6401fb55
6401fb4f:	mov    BYTE PTR [edi],0x2d
6401fb52:	lea    esi,[edi+0x1]
6401fb55:	mov    eax,DWORD PTR [ebx+0x4]
6401fb58:	xor    edi,edi
6401fb5a:	inc    edi
6401fb5b:	test   eax,eax
6401fb5d:	jg     0x6401fb6c
6401fb5f:	mov    eax,esi
6401fb61:	call   0x6401f4d4
6401fb66:	mov    BYTE PTR [esi],0x30
6401fb69:	inc    esi
6401fb6a:	jmp    0x6401fb6e
6401fb6c:	add    esi,eax
6401fb6e:	cmp    DWORD PTR [ebp+0xc],0x0
6401fb72:	jle    0x6401fbb8
6401fb74:	mov    eax,esi
6401fb76:	call   0x6401f4d4
6401fb7b:	mov    eax,DWORD PTR [ebp-0x10]
6401fb7e:	mov    eax,DWORD PTR [eax+0xbc]
6401fb84:	mov    eax,DWORD PTR [eax]
6401fb86:	mov    al,BYTE PTR [eax]
6401fb88:	mov    BYTE PTR [esi],al
6401fb8a:	mov    ebx,DWORD PTR [ebx+0x4]
6401fb8d:	inc    esi
6401fb8e:	test   ebx,ebx
6401fb90:	jge    0x6401fbb8
6401fb92:	neg    ebx
6401fb94:	cmp    BYTE PTR [ebp+0x10],0x0
6401fb98:	jne    0x6401fb9f
6401fb9a:	cmp    DWORD PTR [ebp+0xc],ebx
6401fb9d:	jl     0x6401fba2
6401fb9f:	mov    DWORD PTR [ebp+0xc],ebx
6401fba2:	mov    edi,DWORD PTR [ebp+0xc]
6401fba5:	mov    eax,esi
6401fba7:	call   0x6401f4d4
6401fbac:	push   edi
6401fbad:	push   0x30
6401fbaf:	push   esi
6401fbb0:	call   0x64013570
6401fbb5:	add    esp,0xc
6401fbb8:	cmp    BYTE PTR [ebp-0x4],0x0
6401fbbc:	je     0x6401fbc5
6401fbbe:	mov    eax,DWORD PTR [ebp-0x8]
6401fbc1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fbc5:	xor    eax,eax
6401fbc7:	pop    edi
6401fbc8:	pop    esi
6401fbc9:	pop    ebx
6401fbca:	leave  
6401fbcb:	ret    
6401fbcc:	push   ebp
6401fbcd:	mov    ebp,esp
6401fbcf:	sub    esp,0x2c
6401fbd2:	mov    eax,ds:0x6402d09c
6401fbd7:	xor    eax,ebp
6401fbd9:	mov    DWORD PTR [ebp-0x4],eax
6401fbdc:	mov    eax,DWORD PTR [ebp+0x8]
6401fbdf:	push   ebx
6401fbe0:	push   esi
6401fbe1:	push   edi
6401fbe2:	mov    edi,DWORD PTR [ebp+0xc]
6401fbe5:	push   0x16
6401fbe7:	pop    esi
6401fbe8:	push   esi
6401fbe9:	lea    ecx,[ebp-0x1c]
6401fbec:	push   ecx
6401fbed:	lea    ecx,[ebp-0x2c]
6401fbf0:	push   ecx
6401fbf1:	push   DWORD PTR [eax+0x4]
6401fbf4:	push   DWORD PTR [eax]
6401fbf6:	call   0x640201b1
6401fbfb:	xor    ebx,ebx
6401fbfd:	add    esp,0x14
6401fc00:	cmp    edi,ebx
6401fc02:	jne    0x6401fc1c
6401fc04:	call   0x64014c30
6401fc09:	push   ebx
6401fc0a:	push   ebx
6401fc0b:	push   ebx
6401fc0c:	push   ebx
6401fc0d:	push   ebx
6401fc0e:	mov    DWORD PTR [eax],esi
6401fc10:	call   0x640129a4
6401fc15:	add    esp,0x14
6401fc18:	mov    eax,esi
6401fc1a:	jmp    0x6401fc76
6401fc1c:	mov    eax,DWORD PTR [ebp+0x10]
6401fc1f:	cmp    eax,ebx
6401fc21:	jbe    0x6401fc04
6401fc23:	cmp    eax,0xffffffff
6401fc26:	jne    0x6401fc2c
6401fc28:	or     eax,eax
6401fc2a:	jmp    0x6401fc37
6401fc2c:	xor    ecx,ecx
6401fc2e:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401fc32:	sete   cl
6401fc35:	sub    eax,ecx
6401fc37:	mov    esi,DWORD PTR [ebp+0x14]
6401fc3a:	lea    ecx,[ebp-0x2c]
6401fc3d:	push   ecx
6401fc3e:	mov    ecx,DWORD PTR [ebp-0x28]
6401fc41:	add    ecx,esi
6401fc43:	push   ecx
6401fc44:	push   eax
6401fc45:	xor    eax,eax
6401fc47:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401fc4b:	sete   al
6401fc4e:	add    eax,edi
6401fc50:	push   eax
6401fc51:	call   0x64020039
6401fc56:	add    esp,0x10
6401fc59:	cmp    eax,ebx
6401fc5b:	je     0x6401fc61
6401fc5d:	mov    BYTE PTR [edi],bl
6401fc5f:	jmp    0x6401fc76
6401fc61:	push   DWORD PTR [ebp+0x18]
6401fc64:	lea    eax,[ebp-0x2c]
6401fc67:	push   ebx
6401fc68:	push   esi
6401fc69:	push   DWORD PTR [ebp+0x10]
6401fc6c:	mov    ecx,edi
6401fc6e:	call   0x6401fad7
6401fc73:	add    esp,0x10
6401fc76:	mov    ecx,DWORD PTR [ebp-0x4]
6401fc79:	pop    edi
6401fc7a:	pop    esi
6401fc7b:	xor    ecx,ebp
6401fc7d:	pop    ebx
6401fc7e:	call   0x64012e6c
6401fc83:	leave  
6401fc84:	ret    
6401fc85:	push   ebp
6401fc86:	mov    ebp,esp
6401fc88:	sub    esp,0x30
6401fc8b:	mov    eax,ds:0x6402d09c
6401fc90:	xor    eax,ebp
6401fc92:	mov    DWORD PTR [ebp-0x4],eax
6401fc95:	mov    eax,DWORD PTR [ebp+0x8]
6401fc98:	push   ebx
6401fc99:	push   esi
6401fc9a:	mov    esi,DWORD PTR [ebp+0xc]
6401fc9d:	push   edi
6401fc9e:	push   0x16
6401fca0:	pop    edi
6401fca1:	push   edi
6401fca2:	lea    ecx,[ebp-0x1c]
6401fca5:	push   ecx
6401fca6:	lea    ecx,[ebp-0x30]
6401fca9:	push   ecx
6401fcaa:	push   DWORD PTR [eax+0x4]
6401fcad:	push   DWORD PTR [eax]
6401fcaf:	call   0x640201b1
6401fcb4:	xor    ebx,ebx
6401fcb6:	add    esp,0x14
6401fcb9:	cmp    esi,ebx
6401fcbb:	jne    0x6401fcd8
6401fcbd:	call   0x64014c30
6401fcc2:	push   ebx
6401fcc3:	push   ebx
6401fcc4:	push   ebx
6401fcc5:	push   ebx
6401fcc6:	push   ebx
6401fcc7:	mov    DWORD PTR [eax],edi
6401fcc9:	call   0x640129a4
6401fcce:	add    esp,0x14
6401fcd1:	mov    eax,edi
6401fcd3:	jmp    0x6401fd6e
6401fcd8:	mov    ecx,DWORD PTR [ebp+0x10]
6401fcdb:	cmp    ecx,ebx
6401fcdd:	jbe    0x6401fcbd
6401fcdf:	mov    eax,DWORD PTR [ebp-0x2c]
6401fce2:	dec    eax
6401fce3:	mov    DWORD PTR [ebp-0x20],eax
6401fce6:	xor    eax,eax
6401fce8:	cmp    DWORD PTR [ebp-0x30],0x2d
6401fcec:	sete   al
6401fcef:	cmp    ecx,0xffffffff
6401fcf2:	lea    edi,[eax+esi*1]
6401fcf5:	jne    0x6401fcfb
6401fcf7:	or     ecx,ecx
6401fcf9:	jmp    0x6401fcfd
6401fcfb:	sub    ecx,eax
6401fcfd:	lea    eax,[ebp-0x30]
6401fd00:	push   eax
6401fd01:	push   DWORD PTR [ebp+0x14]
6401fd04:	push   ecx
6401fd05:	push   edi
6401fd06:	call   0x64020039
6401fd0b:	add    esp,0x10
6401fd0e:	cmp    eax,ebx
6401fd10:	je     0x6401fd16
6401fd12:	mov    BYTE PTR [esi],bl
6401fd14:	jmp    0x6401fd6e
6401fd16:	mov    eax,DWORD PTR [ebp-0x2c]
6401fd19:	dec    eax
6401fd1a:	cmp    DWORD PTR [ebp-0x20],eax
6401fd1d:	setl   cl
6401fd20:	cmp    eax,0xfffffffc
6401fd23:	jl     0x6401fd52
6401fd25:	cmp    eax,DWORD PTR [ebp+0x14]
6401fd28:	jge    0x6401fd52
6401fd2a:	cmp    cl,bl
6401fd2c:	je     0x6401fd38
6401fd2e:	mov    al,BYTE PTR [edi]
6401fd30:	inc    edi
6401fd31:	test   al,al
6401fd33:	jne    0x6401fd2e
6401fd35:	mov    BYTE PTR [edi-0x2],bl
6401fd38:	push   DWORD PTR [ebp+0x1c]
6401fd3b:	lea    eax,[ebp-0x30]
6401fd3e:	push   0x1
6401fd40:	push   DWORD PTR [ebp+0x14]
6401fd43:	mov    ecx,esi
6401fd45:	push   DWORD PTR [ebp+0x10]
6401fd48:	call   0x6401fad7
6401fd4d:	add    esp,0x10
6401fd50:	jmp    0x6401fd6e
6401fd52:	push   DWORD PTR [ebp+0x1c]
6401fd55:	lea    eax,[ebp-0x30]
6401fd58:	push   0x1
6401fd5a:	push   eax
6401fd5b:	push   DWORD PTR [ebp+0x18]
6401fd5e:	mov    eax,esi
6401fd60:	push   DWORD PTR [ebp+0x14]
6401fd63:	push   DWORD PTR [ebp+0x10]
6401fd66:	call   0x6401f50d
6401fd6b:	add    esp,0x18
6401fd6e:	mov    ecx,DWORD PTR [ebp-0x4]
6401fd71:	pop    edi
6401fd72:	pop    esi
6401fd73:	xor    ecx,ebp
6401fd75:	pop    ebx
6401fd76:	call   0x64012e6c
6401fd7b:	leave  
6401fd7c:	ret    
6401fd7d:	push   ebp
6401fd7e:	mov    ebp,esp
6401fd80:	mov    eax,DWORD PTR [ebp+0x14]
6401fd83:	cmp    eax,0x65
6401fd86:	je     0x6401fde7
6401fd88:	cmp    eax,0x45
6401fd8b:	je     0x6401fde7
6401fd8d:	cmp    eax,0x66
6401fd90:	jne    0x6401fdab
6401fd92:	push   DWORD PTR [ebp+0x20]
6401fd95:	push   DWORD PTR [ebp+0x18]
6401fd98:	push   DWORD PTR [ebp+0x10]
6401fd9b:	push   DWORD PTR [ebp+0xc]
6401fd9e:	push   DWORD PTR [ebp+0x8]
6401fda1:	call   0x6401fbcc
6401fda6:	add    esp,0x14
6401fda9:	pop    ebp
6401fdaa:	ret    
6401fdab:	cmp    eax,0x61
6401fdae:	je     0x6401fdce
6401fdb0:	cmp    eax,0x41
6401fdb3:	je     0x6401fdce
6401fdb5:	push   DWORD PTR [ebp+0x20]
6401fdb8:	push   DWORD PTR [ebp+0x1c]
6401fdbb:	push   DWORD PTR [ebp+0x18]
6401fdbe:	push   DWORD PTR [ebp+0x10]
6401fdc1:	push   DWORD PTR [ebp+0xc]
6401fdc4:	push   DWORD PTR [ebp+0x8]
6401fdc7:	call   0x6401fc85
6401fdcc:	jmp    0x6401fdfe
6401fdce:	push   DWORD PTR [ebp+0x20]
6401fdd1:	push   DWORD PTR [ebp+0x1c]
6401fdd4:	push   DWORD PTR [ebp+0x18]
6401fdd7:	push   DWORD PTR [ebp+0x10]
6401fdda:	push   DWORD PTR [ebp+0xc]
6401fddd:	push   DWORD PTR [ebp+0x8]
6401fde0:	call   0x6401f766
6401fde5:	jmp    0x6401fdfe
6401fde7:	push   DWORD PTR [ebp+0x20]
6401fdea:	push   DWORD PTR [ebp+0x1c]
6401fded:	push   DWORD PTR [ebp+0x18]
6401fdf0:	push   DWORD PTR [ebp+0x10]
6401fdf3:	push   DWORD PTR [ebp+0xc]
6401fdf6:	push   DWORD PTR [ebp+0x8]
6401fdf9:	call   0x6401f67a
6401fdfe:	add    esp,0x18
6401fe01:	pop    ebp
6401fe02:	ret    
6401fe03:	push   ebp
6401fe04:	mov    ebp,esp
6401fe06:	push   0x0
6401fe08:	push   DWORD PTR [ebp+0x1c]
6401fe0b:	push   DWORD PTR [ebp+0x18]
6401fe0e:	push   DWORD PTR [ebp+0x14]
6401fe11:	push   DWORD PTR [ebp+0x10]
6401fe14:	push   DWORD PTR [ebp+0xc]
6401fe17:	push   DWORD PTR [ebp+0x8]
6401fe1a:	call   0x6401fd7d
6401fe1f:	add    esp,0x1c
6401fe22:	pop    ebp
6401fe23:	ret    
6401fe24:	push   esi
6401fe25:	push   0x30000
6401fe2a:	push   0x10000
6401fe2f:	xor    esi,esi
6401fe31:	push   esi
6401fe32:	call   0x6402033f
6401fe37:	add    esp,0xc
6401fe3a:	test   eax,eax
6401fe3c:	je     0x6401fe4b
6401fe3e:	push   esi
6401fe3f:	push   esi
6401fe40:	push   esi
6401fe41:	push   esi
6401fe42:	push   esi
6401fe43:	call   0x640128a8
6401fe48:	add    esp,0x14
6401fe4b:	pop    esi
6401fe4c:	ret    
6401fe4d:	push   ebp
6401fe4e:	mov    ebp,esp
6401fe50:	sub    esp,0x18
6401fe53:	fld    QWORD PTR ds:0x640275f8
6401fe59:	fstp   QWORD PTR [ebp-0x10]
6401fe5c:	fld    QWORD PTR ds:0x640275f0
6401fe62:	fstp   QWORD PTR [ebp-0x18]
6401fe65:	fld    QWORD PTR [ebp-0x18]
6401fe68:	fdiv   QWORD PTR [ebp-0x10]
6401fe6b:	fmul   QWORD PTR [ebp-0x10]
6401fe6e:	fsubr  QWORD PTR [ebp-0x18]
6401fe71:	fstp   QWORD PTR [ebp-0x8]
6401fe74:	fld1   
6401fe76:	fcomp  QWORD PTR [ebp-0x8]
6401fe79:	fnstsw ax
6401fe7b:	test   ah,0x5
6401fe7e:	jp     0x6401fe85
6401fe80:	xor    eax,eax
6401fe82:	inc    eax
6401fe83:	leave  
6401fe84:	ret    
6401fe85:	xor    eax,eax
6401fe87:	leave  
6401fe88:	ret    
6401fe89:	push   0x6402761c
6401fe8e:	call   DWORD PTR ds:0x64025130
6401fe94:	test   eax,eax
6401fe96:	je     0x6401fead
6401fe98:	push   0x64027600
6401fe9d:	push   eax
6401fe9e:	call   DWORD PTR ds:0x64025014
6401fea4:	test   eax,eax
6401fea6:	je     0x6401fead
6401fea8:	push   0x0
6401feaa:	call   eax
6401feac:	ret    
6401fead:	jmp    0x6401fe4d
6401feb2:	int3   
6401feb3:	int3   
6401feb4:	int3   
6401feb5:	int3   
6401feb6:	int3   
6401feb7:	int3   
6401feb8:	int3   
6401feb9:	int3   
6401feba:	int3   
6401febb:	int3   
6401febc:	int3   
6401febd:	int3   
6401febe:	int3   
6401febf:	int3   
6401fec0:	push   ebp
6401fec1:	mov    ebp,esp
6401fec3:	push   edi
6401fec4:	mov    edi,DWORD PTR [ebp+0x8]
6401fec7:	xor    eax,eax
6401fec9:	or     ecx,0xffffffff
6401fecc:	repnz scas al,BYTE PTR es:[edi]
6401fece:	add    ecx,0x1
6401fed1:	neg    ecx
6401fed3:	sub    edi,0x1
6401fed6:	mov    al,BYTE PTR [ebp+0xc]
6401fed9:	std    
6401feda:	repnz scas al,BYTE PTR es:[edi]
6401fedc:	add    edi,0x1
6401fedf:	cmp    BYTE PTR [edi],al
6401fee1:	je     0x6401fee7
6401fee3:	xor    eax,eax
6401fee5:	jmp    0x6401fee9
6401fee7:	mov    eax,edi
6401fee9:	cld    
6401feea:	pop    edi
6401feeb:	leave  
6401feec:	ret    
6401feed:	push   ebp
6401feee:	mov    ebp,esp
6401fef0:	sub    esp,0x28
6401fef3:	mov    eax,ds:0x6402d09c
6401fef8:	xor    eax,ebp
6401fefa:	mov    DWORD PTR [ebp-0x4],eax
6401fefd:	push   ebx
6401fefe:	push   esi
6401feff:	mov    esi,DWORD PTR [ebp+0x8]
6401ff02:	push   edi
6401ff03:	push   DWORD PTR [ebp+0x10]
6401ff06:	mov    edi,DWORD PTR [ebp+0xc]
6401ff09:	lea    ecx,[ebp-0x24]
6401ff0c:	call   0x6401300f
6401ff11:	lea    eax,[ebp-0x24]
6401ff14:	push   eax
6401ff15:	xor    ebx,ebx
6401ff17:	push   ebx
6401ff18:	push   ebx
6401ff19:	push   ebx
6401ff1a:	push   ebx
6401ff1b:	push   edi
6401ff1c:	lea    eax,[ebp-0x28]
6401ff1f:	push   eax
6401ff20:	lea    eax,[ebp-0x10]
6401ff23:	push   eax
6401ff24:	call   0x64020e2d
6401ff29:	mov    DWORD PTR [ebp-0x14],eax
6401ff2c:	lea    eax,[ebp-0x10]
6401ff2f:	push   esi
6401ff30:	push   eax
6401ff31:	call   0x640203a9
6401ff36:	add    esp,0x28
6401ff39:	test   BYTE PTR [ebp-0x14],0x3
6401ff3d:	jne    0x6401ff6a
6401ff3f:	cmp    eax,0x1
6401ff42:	jne    0x6401ff55
6401ff44:	cmp    BYTE PTR [ebp-0x18],bl
6401ff47:	je     0x6401ff50
6401ff49:	mov    eax,DWORD PTR [ebp-0x1c]
6401ff4c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff50:	push   0x3
6401ff52:	pop    eax
6401ff53:	jmp    0x6401ff84
6401ff55:	cmp    eax,0x2
6401ff58:	jne    0x6401ff76
6401ff5a:	cmp    BYTE PTR [ebp-0x18],bl
6401ff5d:	je     0x6401ff66
6401ff5f:	mov    eax,DWORD PTR [ebp-0x1c]
6401ff62:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff66:	push   0x4
6401ff68:	jmp    0x6401ff52
6401ff6a:	test   BYTE PTR [ebp-0x14],0x1
6401ff6e:	jne    0x6401ff5a
6401ff70:	test   BYTE PTR [ebp-0x14],0x2
6401ff74:	jne    0x6401ff44
6401ff76:	cmp    BYTE PTR [ebp-0x18],bl
6401ff79:	je     0x6401ff82
6401ff7b:	mov    eax,DWORD PTR [ebp-0x1c]
6401ff7e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff82:	xor    eax,eax
6401ff84:	mov    ecx,DWORD PTR [ebp-0x4]
6401ff87:	pop    edi
6401ff88:	pop    esi
6401ff89:	xor    ecx,ebp
6401ff8b:	pop    ebx
6401ff8c:	call   0x64012e6c
6401ff91:	leave  
6401ff92:	ret    
6401ff93:	push   ebp
6401ff94:	mov    ebp,esp
6401ff96:	sub    esp,0x28
6401ff99:	mov    eax,ds:0x6402d09c
6401ff9e:	xor    eax,ebp
6401ffa0:	mov    DWORD PTR [ebp-0x4],eax
6401ffa3:	push   ebx
6401ffa4:	push   esi
6401ffa5:	mov    esi,DWORD PTR [ebp+0x8]
6401ffa8:	push   edi
6401ffa9:	push   DWORD PTR [ebp+0x10]
6401ffac:	mov    edi,DWORD PTR [ebp+0xc]
6401ffaf:	lea    ecx,[ebp-0x24]
6401ffb2:	call   0x6401300f
6401ffb7:	lea    eax,[ebp-0x24]
6401ffba:	push   eax
6401ffbb:	xor    ebx,ebx
6401ffbd:	push   ebx
6401ffbe:	push   ebx
6401ffbf:	push   ebx
6401ffc0:	push   ebx
6401ffc1:	push   edi
6401ffc2:	lea    eax,[ebp-0x28]
6401ffc5:	push   eax
6401ffc6:	lea    eax,[ebp-0x10]
6401ffc9:	push   eax
6401ffca:	call   0x64020e2d
6401ffcf:	mov    DWORD PTR [ebp-0x14],eax
6401ffd2:	lea    eax,[ebp-0x10]
6401ffd5:	push   esi
6401ffd6:	push   eax
6401ffd7:	call   0x640208eb
6401ffdc:	add    esp,0x28
6401ffdf:	test   BYTE PTR [ebp-0x14],0x3
6401ffe3:	jne    0x64020010
6401ffe5:	cmp    eax,0x1
6401ffe8:	jne    0x6401fffb
6401ffea:	cmp    BYTE PTR [ebp-0x18],bl
6401ffed:	je     0x6401fff6
6401ffef:	mov    eax,DWORD PTR [ebp-0x1c]
6401fff2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fff6:	push   0x3
6401fff8:	pop    eax
6401fff9:	jmp    0x6402002a
6401fffb:	cmp    eax,0x2
6401fffe:	jne    0x6402001c
64020000:	cmp    BYTE PTR [ebp-0x18],bl
64020003:	je     0x6402000c
64020005:	mov    eax,DWORD PTR [ebp-0x1c]
64020008:	and    DWORD PTR [eax+0x70],0xfffffffd
6402000c:	push   0x4
6402000e:	jmp    0x6401fff8
64020010:	test   BYTE PTR [ebp-0x14],0x1
64020014:	jne    0x64020000
64020016:	test   BYTE PTR [ebp-0x14],0x2
6402001a:	jne    0x6401ffea
6402001c:	cmp    BYTE PTR [ebp-0x18],bl
6402001f:	je     0x64020028
64020021:	mov    eax,DWORD PTR [ebp-0x1c]
64020024:	and    DWORD PTR [eax+0x70],0xfffffffd
64020028:	xor    eax,eax
6402002a:	mov    ecx,DWORD PTR [ebp-0x4]
6402002d:	pop    edi
6402002e:	pop    esi
6402002f:	xor    ecx,ebp
64020031:	pop    ebx
64020032:	call   0x64012e6c
64020037:	leave  
64020038:	ret    
64020039:	push   ebp
6402003a:	mov    ebp,esp
6402003c:	mov    ecx,DWORD PTR [ebp+0x14]
6402003f:	push   ebx
64020040:	push   esi
64020041:	mov    esi,DWORD PTR [ebp+0x8]
64020044:	xor    ebx,ebx
64020046:	cmp    esi,ebx
64020048:	push   edi
64020049:	mov    edi,DWORD PTR [ecx+0xc]
6402004c:	jne    0x6402006c
6402004e:	call   0x64014c30
64020053:	push   0x16
64020055:	pop    esi
64020056:	mov    DWORD PTR [eax],esi
64020058:	push   ebx
64020059:	push   ebx
6402005a:	push   ebx
6402005b:	push   ebx
6402005c:	push   ebx
6402005d:	call   0x640129a4
64020062:	add    esp,0x14
64020065:	mov    eax,esi
64020067:	jmp    0x640200f1
6402006c:	cmp    DWORD PTR [ebp+0xc],ebx
6402006f:	jbe    0x6402004e
64020071:	mov    edx,DWORD PTR [ebp+0x10]
64020074:	cmp    edx,ebx
64020076:	mov    BYTE PTR [esi],bl
64020078:	jle    0x6402007e
6402007a:	mov    eax,edx
6402007c:	jmp    0x64020080
6402007e:	xor    eax,eax
64020080:	inc    eax
64020081:	cmp    DWORD PTR [ebp+0xc],eax
64020084:	ja     0x64020094
64020086:	call   0x64014c30
6402008b:	push   0x22
6402008d:	pop    ecx
6402008e:	mov    DWORD PTR [eax],ecx
64020090:	mov    esi,ecx
64020092:	jmp    0x64020058
64020094:	cmp    edx,ebx
64020096:	mov    BYTE PTR [esi],0x30
64020099:	lea    eax,[esi+0x1]
6402009c:	jle    0x640200b8
6402009e:	mov    cl,BYTE PTR [edi]
640200a0:	cmp    cl,bl
640200a2:	je     0x640200aa
640200a4:	movsx  ecx,cl
640200a7:	inc    edi
640200a8:	jmp    0x640200ad
640200aa:	push   0x30
640200ac:	pop    ecx
640200ad:	mov    BYTE PTR [eax],cl
640200af:	inc    eax
640200b0:	dec    edx
640200b1:	cmp    edx,ebx
640200b3:	jg     0x6402009e
640200b5:	mov    ecx,DWORD PTR [ebp+0x14]
640200b8:	cmp    edx,ebx
640200ba:	mov    BYTE PTR [eax],bl
640200bc:	jl     0x640200d0
640200be:	cmp    BYTE PTR [edi],0x35
640200c1:	jl     0x640200d0
640200c3:	jmp    0x640200c8
640200c5:	mov    BYTE PTR [eax],0x30
640200c8:	dec    eax
640200c9:	cmp    BYTE PTR [eax],0x39
640200cc:	je     0x640200c5
640200ce:	inc    BYTE PTR [eax]
640200d0:	cmp    BYTE PTR [esi],0x31
640200d3:	jne    0x640200da
640200d5:	inc    DWORD PTR [ecx+0x4]
640200d8:	jmp    0x640200ef
640200da:	lea    edi,[esi+0x1]
640200dd:	push   edi
640200de:	call   0x64014630
640200e3:	inc    eax
640200e4:	push   eax
640200e5:	push   edi
640200e6:	push   esi
640200e7:	call   0x64013eb0
640200ec:	add    esp,0x10
640200ef:	xor    eax,eax
640200f1:	pop    edi
640200f2:	pop    esi
640200f3:	pop    ebx
640200f4:	pop    ebp
640200f5:	ret    
640200f6:	push   ebp
640200f7:	mov    ebp,esp
640200f9:	push   ecx
640200fa:	mov    edx,DWORD PTR [ebp+0xc]
640200fd:	movzx  eax,WORD PTR [edx+0x6]
64020101:	push   ebx
64020102:	mov    ecx,eax
64020104:	push   esi
64020105:	push   edi
64020106:	shr    ecx,0x4
64020109:	and    eax,0x8000
6402010e:	mov    edi,0x7ff
64020113:	and    ecx,edi
64020115:	mov    DWORD PTR [ebp+0xc],eax
64020118:	mov    eax,DWORD PTR [edx+0x4]
6402011b:	mov    edx,DWORD PTR [edx]
6402011d:	movzx  ebx,cx
64020120:	mov    esi,0x80000000
64020125:	and    eax,0xfffff
6402012a:	test   ebx,ebx
6402012c:	mov    DWORD PTR [ebp-0x4],esi
6402012f:	je     0x64020144
64020131:	cmp    ebx,edi
64020133:	je     0x6402013d
64020135:	add    ecx,0x3c00
6402013b:	jmp    0x64020165
6402013d:	mov    edi,0x7fff
64020142:	jmp    0x64020168
64020144:	xor    ebx,ebx
64020146:	cmp    eax,ebx
64020148:	jne    0x6402015c
6402014a:	cmp    edx,ebx
6402014c:	jne    0x6402015c
6402014e:	mov    eax,DWORD PTR [ebp+0x8]
64020151:	mov    cx,WORD PTR [ebp+0xc]
64020155:	mov    DWORD PTR [eax+0x4],ebx
64020158:	mov    DWORD PTR [eax],ebx
6402015a:	jmp    0x640201a8
6402015c:	add    ecx,0x3c01
64020162:	mov    DWORD PTR [ebp-0x4],ebx
64020165:	movzx  edi,cx
64020168:	mov    ecx,edx
6402016a:	shr    ecx,0x15
6402016d:	shl    eax,0xb
64020170:	or     ecx,eax
64020172:	or     ecx,DWORD PTR [ebp-0x4]
64020175:	mov    eax,DWORD PTR [ebp+0x8]
64020178:	shl    edx,0xb
6402017b:	test   esi,ecx
6402017d:	mov    DWORD PTR [eax+0x4],ecx
64020180:	mov    DWORD PTR [eax],edx
64020182:	jne    0x640201a3
64020184:	mov    ecx,DWORD PTR [eax]
64020186:	mov    edx,DWORD PTR [eax+0x4]
64020189:	mov    ebx,ecx
6402018b:	add    edx,edx
6402018d:	shr    ebx,0x1f
64020190:	or     edx,ebx
64020192:	add    ecx,ecx
64020194:	add    edi,0xffff
6402019a:	test   esi,edx
6402019c:	mov    DWORD PTR [eax+0x4],edx
6402019f:	mov    DWORD PTR [eax],ecx
640201a1:	je     0x64020184
640201a3:	mov    ecx,DWORD PTR [ebp+0xc]
640201a6:	or     ecx,edi
640201a8:	pop    edi
640201a9:	pop    esi
640201aa:	mov    WORD PTR [eax+0x8],cx
640201ae:	pop    ebx
640201af:	leave  
640201b0:	ret    
640201b1:	push   ebp
640201b2:	mov    ebp,esp
640201b4:	sub    esp,0x30
640201b7:	mov    eax,ds:0x6402d09c
640201bc:	xor    eax,ebp
640201be:	mov    DWORD PTR [ebp-0x4],eax
640201c1:	mov    eax,DWORD PTR [ebp+0x14]
640201c4:	push   ebx
640201c5:	mov    ebx,DWORD PTR [ebp+0x10]
640201c8:	push   esi
640201c9:	mov    DWORD PTR [ebp-0x30],eax
640201cc:	push   edi
640201cd:	lea    eax,[ebp+0x8]
640201d0:	push   eax
640201d1:	lea    eax,[ebp-0x10]
640201d4:	push   eax
640201d5:	call   0x640200f6
640201da:	pop    ecx
640201db:	pop    ecx
640201dc:	lea    eax,[ebp-0x2c]
640201df:	push   eax
640201e0:	push   0x0
640201e2:	push   0x11
640201e4:	sub    esp,0xc
640201e7:	lea    esi,[ebp-0x10]
640201ea:	mov    edi,esp
640201ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640201ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640201ee:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
640201f0:	call   0x640214ed
640201f5:	mov    esi,DWORD PTR [ebp-0x30]
640201f8:	mov    DWORD PTR [ebx+0x8],eax
640201fb:	movsx  eax,BYTE PTR [ebp-0x2a]
640201ff:	mov    DWORD PTR [ebx],eax
64020201:	movsx  eax,WORD PTR [ebp-0x2c]
64020205:	mov    DWORD PTR [ebx+0x4],eax
64020208:	lea    eax,[ebp-0x28]
6402020b:	push   eax
6402020c:	push   DWORD PTR [ebp+0x18]
6402020f:	push   esi
64020210:	call   0x64014828
64020215:	add    esp,0x24
64020218:	test   eax,eax
6402021a:	je     0x6402022b
6402021c:	xor    eax,eax
6402021e:	push   eax
6402021f:	push   eax
64020220:	push   eax
64020221:	push   eax
64020222:	push   eax
64020223:	call   0x640128a8
64020228:	add    esp,0x14
6402022b:	mov    ecx,DWORD PTR [ebp-0x4]
6402022e:	pop    edi
6402022f:	mov    DWORD PTR [ebx+0xc],esi
64020232:	pop    esi
64020233:	mov    eax,ebx
64020235:	xor    ecx,ebp
64020237:	pop    ebx
64020238:	call   0x64012e6c
6402023d:	leave  
6402023e:	ret    
6402023f:	int3   
64020240:	push   edi
64020241:	push   esi
64020242:	push   ebp
64020243:	xor    edi,edi
64020245:	xor    ebp,ebp
64020247:	mov    eax,DWORD PTR [esp+0x14]
6402024b:	or     eax,eax
6402024d:	jge    0x64020264
6402024f:	inc    edi
64020250:	inc    ebp
64020251:	mov    edx,DWORD PTR [esp+0x10]
64020255:	neg    eax
64020257:	neg    edx
64020259:	sbb    eax,0x0
6402025c:	mov    DWORD PTR [esp+0x14],eax
64020260:	mov    DWORD PTR [esp+0x10],edx
64020264:	mov    eax,DWORD PTR [esp+0x1c]
64020268:	or     eax,eax
6402026a:	jge    0x64020280
6402026c:	inc    edi
6402026d:	mov    edx,DWORD PTR [esp+0x18]
64020271:	neg    eax
64020273:	neg    edx
64020275:	sbb    eax,0x0
64020278:	mov    DWORD PTR [esp+0x1c],eax
6402027c:	mov    DWORD PTR [esp+0x18],edx
64020280:	or     eax,eax
64020282:	jne    0x640202ac
64020284:	mov    ecx,DWORD PTR [esp+0x18]
64020288:	mov    eax,DWORD PTR [esp+0x14]
6402028c:	xor    edx,edx
6402028e:	div    ecx
64020290:	mov    ebx,eax
64020292:	mov    eax,DWORD PTR [esp+0x10]
64020296:	div    ecx
64020298:	mov    esi,eax
6402029a:	mov    eax,ebx
6402029c:	mul    DWORD PTR [esp+0x18]
640202a0:	mov    ecx,eax
640202a2:	mov    eax,esi
640202a4:	mul    DWORD PTR [esp+0x18]
640202a8:	add    edx,ecx
640202aa:	jmp    0x640202f3
640202ac:	mov    ebx,eax
640202ae:	mov    ecx,DWORD PTR [esp+0x18]
640202b2:	mov    edx,DWORD PTR [esp+0x14]
640202b6:	mov    eax,DWORD PTR [esp+0x10]
640202ba:	shr    ebx,1
640202bc:	rcr    ecx,1
640202be:	shr    edx,1
640202c0:	rcr    eax,1
640202c2:	or     ebx,ebx
640202c4:	jne    0x640202ba
640202c6:	div    ecx
640202c8:	mov    esi,eax
640202ca:	mul    DWORD PTR [esp+0x1c]
640202ce:	mov    ecx,eax
640202d0:	mov    eax,DWORD PTR [esp+0x18]
640202d4:	mul    esi
640202d6:	add    edx,ecx
640202d8:	jb     0x640202e8
640202da:	cmp    edx,DWORD PTR [esp+0x14]
640202de:	ja     0x640202e8
640202e0:	jb     0x640202f1
640202e2:	cmp    eax,DWORD PTR [esp+0x10]
640202e6:	jbe    0x640202f1
640202e8:	dec    esi
640202e9:	sub    eax,DWORD PTR [esp+0x18]
640202ed:	sbb    edx,DWORD PTR [esp+0x1c]
640202f1:	xor    ebx,ebx
640202f3:	sub    eax,DWORD PTR [esp+0x10]
640202f7:	sbb    edx,DWORD PTR [esp+0x14]
640202fb:	dec    ebp
640202fc:	jns    0x64020305
640202fe:	neg    edx
64020300:	neg    eax
64020302:	sbb    edx,0x0
64020305:	mov    ecx,edx
64020307:	mov    edx,ebx
64020309:	mov    ebx,ecx
6402030b:	mov    ecx,eax
6402030d:	mov    eax,esi
6402030f:	dec    edi
64020310:	jne    0x64020319
64020312:	neg    edx
64020314:	neg    eax
64020316:	sbb    edx,0x0
64020319:	pop    ebp
6402031a:	pop    esi
6402031b:	pop    edi
6402031c:	ret    0x10
6402031f:	int3   
64020320:	cmp    cl,0x40
64020323:	jae    0x6402033a
64020325:	cmp    cl,0x20
64020328:	jae    0x64020330
6402032a:	shrd   eax,edx,cl
6402032d:	shr    edx,cl
6402032f:	ret    
64020330:	mov    eax,edx
64020332:	xor    edx,edx
64020334:	and    cl,0x1f
64020337:	shr    eax,cl
64020339:	ret    
6402033a:	xor    eax,eax
6402033c:	xor    edx,edx
6402033e:	ret    
6402033f:	push   ebp
64020340:	mov    ebp,esp
64020342:	mov    eax,DWORD PTR [ebp+0x10]
64020345:	mov    ecx,DWORD PTR [ebp+0xc]
64020348:	and    eax,0xfff7ffff
6402034d:	and    ecx,eax
6402034f:	test   ecx,0xfcf0fce0
64020355:	push   esi
64020356:	je     0x64020389
64020358:	push   edi
64020359:	mov    edi,DWORD PTR [ebp+0x8]
6402035c:	xor    esi,esi
6402035e:	cmp    edi,esi
64020360:	je     0x6402036d
64020362:	push   esi
64020363:	push   esi
64020364:	call   0x64021ee1
64020369:	pop    ecx
6402036a:	pop    ecx
6402036b:	mov    DWORD PTR [edi],eax
6402036d:	call   0x64014c30
64020372:	push   0x16
64020374:	pop    edi
64020375:	push   esi
64020376:	push   esi
64020377:	push   esi
64020378:	push   esi
64020379:	push   esi
6402037a:	mov    DWORD PTR [eax],edi
6402037c:	call   0x640129a4
64020381:	add    esp,0x14
64020384:	mov    eax,edi
64020386:	pop    edi
64020387:	jmp    0x640203a6
64020389:	mov    esi,DWORD PTR [ebp+0x8]
6402038c:	test   esi,esi
6402038e:	push   eax
6402038f:	push   DWORD PTR [ebp+0xc]
64020392:	je     0x6402039d
64020394:	call   0x64021ee1
64020399:	mov    DWORD PTR [esi],eax
6402039b:	jmp    0x640203a2
6402039d:	call   0x64021ee1
640203a2:	pop    ecx
640203a3:	pop    ecx
640203a4:	xor    eax,eax
640203a6:	pop    esi
640203a7:	pop    ebp
640203a8:	ret    
640203a9:	push   ebp
640203aa:	mov    ebp,esp
640203ac:	sub    esp,0x2c
640203af:	mov    eax,DWORD PTR [ebp+0x8]
640203b2:	movzx  ecx,WORD PTR [eax+0xa]
640203b6:	push   ebx
640203b7:	mov    ebx,ecx
640203b9:	and    ecx,0x8000
640203bf:	mov    DWORD PTR [ebp-0x14],ecx
640203c2:	mov    ecx,DWORD PTR [eax+0x6]
640203c5:	mov    DWORD PTR [ebp-0x20],ecx
640203c8:	mov    ecx,DWORD PTR [eax+0x2]
640203cb:	movzx  eax,WORD PTR [eax]
640203ce:	and    ebx,0x7fff
640203d4:	sub    ebx,0x3fff
640203da:	shl    eax,0x10
640203dd:	cmp    ebx,0xffffc001
640203e3:	push   edi
640203e4:	mov    DWORD PTR [ebp-0x1c],ecx
640203e7:	mov    DWORD PTR [ebp-0x18],eax
640203ea:	jne    0x64020413
640203ec:	xor    ebx,ebx
640203ee:	xor    eax,eax
640203f0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
640203f4:	jne    0x64020403
640203f6:	inc    eax
640203f7:	cmp    eax,0x3
640203fa:	jl     0x640203f0
640203fc:	xor    eax,eax
640203fe:	jmp    0x640208a8
64020403:	xor    eax,eax
64020405:	lea    edi,[ebp-0x20]
64020408:	stos   DWORD PTR es:[edi],eax
64020409:	stos   DWORD PTR es:[edi],eax
6402040a:	push   0x2
6402040c:	stos   DWORD PTR es:[edi],eax
6402040d:	pop    eax
6402040e:	jmp    0x640208a8
64020413:	and    DWORD PTR [ebp+0x8],0x0
64020417:	push   esi
64020418:	lea    esi,[ebp-0x20]
6402041b:	lea    edi,[ebp-0x2c]
6402041e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402041f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020421:	mov    esi,DWORD PTR ds:0x6402e078
64020427:	dec    esi
64020428:	lea    ecx,[esi+0x1]
6402042b:	mov    eax,ecx
6402042d:	cdq    
6402042e:	and    edx,0x1f
64020431:	add    eax,edx
64020433:	sar    eax,0x5
64020436:	mov    edx,ecx
64020438:	and    edx,0x8000001f
6402043e:	mov    DWORD PTR [ebp-0x10],ebx
64020441:	mov    DWORD PTR [ebp-0xc],eax
64020444:	jns    0x6402044b
64020446:	dec    edx
64020447:	or     edx,0xffffffe0
6402044a:	inc    edx
6402044b:	lea    edi,[ebp+eax*4-0x20]
6402044f:	push   0x1f
64020451:	xor    eax,eax
64020453:	pop    ecx
64020454:	sub    ecx,edx
64020456:	inc    eax
64020457:	shl    eax,cl
64020459:	mov    DWORD PTR [ebp-0x8],ecx
6402045c:	test   DWORD PTR [edi],eax
6402045e:	je     0x640204f1
64020464:	mov    eax,DWORD PTR [ebp-0xc]
64020467:	or     edx,0xffffffff
6402046a:	shl    edx,cl
6402046c:	not    edx
6402046e:	test   DWORD PTR [ebp+eax*4-0x20],edx
64020472:	jmp    0x64020479
64020474:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020479:	jne    0x64020483
6402047b:	inc    eax
6402047c:	cmp    eax,0x3
6402047f:	jl     0x64020474
64020481:	jmp    0x640204f1
64020483:	mov    eax,esi
64020485:	cdq    
64020486:	push   0x1f
64020488:	pop    ecx
64020489:	and    edx,ecx
6402048b:	add    eax,edx
6402048d:	sar    eax,0x5
64020490:	and    esi,0x8000001f
64020496:	jns    0x6402049d
64020498:	dec    esi
64020499:	or     esi,0xffffffe0
6402049c:	inc    esi
6402049d:	and    DWORD PTR [ebp-0x4],0x0
640204a1:	sub    ecx,esi
640204a3:	xor    edx,edx
640204a5:	inc    edx
640204a6:	shl    edx,cl
640204a8:	lea    ecx,[ebp+eax*4-0x20]
640204ac:	mov    esi,DWORD PTR [ecx]
640204ae:	add    esi,edx
640204b0:	mov    DWORD PTR [ebp+0x8],esi
640204b3:	mov    esi,DWORD PTR [ecx]
640204b5:	cmp    DWORD PTR [ebp+0x8],esi
640204b8:	jb     0x640204dc
640204ba:	cmp    DWORD PTR [ebp+0x8],edx
640204bd:	jmp    0x640204da
640204bf:	test   ecx,ecx
640204c1:	je     0x640204ee
640204c3:	and    DWORD PTR [ebp-0x4],0x0
640204c7:	lea    ecx,[ebp+eax*4-0x20]
640204cb:	mov    edx,DWORD PTR [ecx]
640204cd:	lea    esi,[edx+0x1]
640204d0:	cmp    esi,edx
640204d2:	mov    DWORD PTR [ebp+0x8],esi
640204d5:	jb     0x640204dc
640204d7:	cmp    esi,0x1
640204da:	jae    0x640204e3
640204dc:	mov    DWORD PTR [ebp-0x4],0x1
640204e3:	dec    eax
640204e4:	mov    edx,DWORD PTR [ebp+0x8]
640204e7:	mov    DWORD PTR [ecx],edx
640204e9:	mov    ecx,DWORD PTR [ebp-0x4]
640204ec:	jns    0x640204bf
640204ee:	mov    DWORD PTR [ebp+0x8],ecx
640204f1:	mov    ecx,DWORD PTR [ebp-0x8]
640204f4:	or     eax,0xffffffff
640204f7:	shl    eax,cl
640204f9:	and    DWORD PTR [edi],eax
640204fb:	mov    eax,DWORD PTR [ebp-0xc]
640204fe:	inc    eax
640204ff:	cmp    eax,0x3
64020502:	jge    0x64020511
64020504:	push   0x3
64020506:	pop    ecx
64020507:	lea    edi,[ebp+eax*4-0x20]
6402050b:	sub    ecx,eax
6402050d:	xor    eax,eax
6402050f:	rep stos DWORD PTR es:[edi],eax
64020511:	cmp    DWORD PTR [ebp+0x8],0x0
64020515:	je     0x64020518
64020517:	inc    ebx
64020518:	mov    eax,ds:0x6402e074
6402051d:	mov    ecx,eax
6402051f:	sub    ecx,DWORD PTR ds:0x6402e078
64020525:	cmp    ebx,ecx
64020527:	jge    0x64020536
64020529:	xor    eax,eax
6402052b:	lea    edi,[ebp-0x20]
6402052e:	stos   DWORD PTR es:[edi],eax
6402052f:	stos   DWORD PTR es:[edi],eax
64020530:	stos   DWORD PTR es:[edi],eax
64020531:	jmp    0x64020743
64020536:	cmp    ebx,eax
64020538:	jg     0x6402074d
6402053e:	sub    eax,DWORD PTR [ebp-0x10]
64020541:	lea    esi,[ebp-0x2c]
64020544:	mov    ecx,eax
64020546:	lea    edi,[ebp-0x20]
64020549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402054a:	cdq    
6402054b:	and    edx,0x1f
6402054e:	add    eax,edx
64020550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020551:	mov    edx,ecx
64020553:	sar    eax,0x5
64020556:	and    edx,0x8000001f
6402055c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402055d:	jns    0x64020564
6402055f:	dec    edx
64020560:	or     edx,0xffffffe0
64020563:	inc    edx
64020564:	and    DWORD PTR [ebp-0xc],0x0
64020568:	and    DWORD PTR [ebp+0x8],0x0
6402056c:	or     edi,0xffffffff
6402056f:	mov    ecx,edx
64020571:	shl    edi,cl
64020573:	mov    DWORD PTR [ebp-0x4],0x20
6402057a:	sub    DWORD PTR [ebp-0x4],edx
6402057d:	not    edi
6402057f:	mov    ebx,DWORD PTR [ebp+0x8]
64020582:	lea    ebx,[ebp+ebx*4-0x20]
64020586:	mov    esi,DWORD PTR [ebx]
64020588:	mov    ecx,esi
6402058a:	and    ecx,edi
6402058c:	mov    DWORD PTR [ebp-0x10],ecx
6402058f:	mov    ecx,edx
64020591:	shr    esi,cl
64020593:	mov    ecx,DWORD PTR [ebp-0x4]
64020596:	or     esi,DWORD PTR [ebp-0xc]
64020599:	mov    DWORD PTR [ebx],esi
6402059b:	mov    esi,DWORD PTR [ebp-0x10]
6402059e:	shl    esi,cl
640205a0:	inc    DWORD PTR [ebp+0x8]
640205a3:	cmp    DWORD PTR [ebp+0x8],0x3
640205a7:	mov    DWORD PTR [ebp-0xc],esi
640205aa:	jl     0x6402057f
640205ac:	mov    esi,eax
640205ae:	push   0x2
640205b0:	shl    esi,0x2
640205b3:	lea    ecx,[ebp-0x18]
640205b6:	pop    edx
640205b7:	sub    ecx,esi
640205b9:	cmp    edx,eax
640205bb:	jl     0x640205c5
640205bd:	mov    esi,DWORD PTR [ecx]
640205bf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640205c3:	jmp    0x640205ca
640205c5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640205ca:	dec    edx
640205cb:	sub    ecx,0x4
640205ce:	test   edx,edx
640205d0:	jge    0x640205b9
640205d2:	mov    esi,DWORD PTR ds:0x6402e078
640205d8:	dec    esi
640205d9:	lea    ecx,[esi+0x1]
640205dc:	mov    eax,ecx
640205de:	cdq    
640205df:	and    edx,0x1f
640205e2:	add    eax,edx
640205e4:	sar    eax,0x5
640205e7:	mov    edx,ecx
640205e9:	and    edx,0x8000001f
640205ef:	mov    DWORD PTR [ebp-0xc],eax
640205f2:	jns    0x640205f9
640205f4:	dec    edx
640205f5:	or     edx,0xffffffe0
640205f8:	inc    edx
640205f9:	push   0x1f
640205fb:	pop    ecx
640205fc:	sub    ecx,edx
640205fe:	xor    edx,edx
64020600:	inc    edx
64020601:	shl    edx,cl
64020603:	lea    ebx,[ebp+eax*4-0x20]
64020607:	mov    DWORD PTR [ebp-0x10],ecx
6402060a:	test   DWORD PTR [ebx],edx
6402060c:	je     0x64020694
64020612:	or     edx,0xffffffff
64020615:	shl    edx,cl
64020617:	not    edx
64020619:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402061d:	jmp    0x64020624
6402061f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020624:	jne    0x6402062e
64020626:	inc    eax
64020627:	cmp    eax,0x3
6402062a:	jl     0x6402061f
6402062c:	jmp    0x64020694
6402062e:	mov    eax,esi
64020630:	cdq    
64020631:	push   0x1f
64020633:	pop    ecx
64020634:	and    edx,ecx
64020636:	add    eax,edx
64020638:	sar    eax,0x5
6402063b:	and    esi,0x8000001f
64020641:	jns    0x64020648
64020643:	dec    esi
64020644:	or     esi,0xffffffe0
64020647:	inc    esi
64020648:	and    DWORD PTR [ebp+0x8],0x0
6402064c:	xor    edx,edx
6402064e:	sub    ecx,esi
64020650:	inc    edx
64020651:	shl    edx,cl
64020653:	lea    ecx,[ebp+eax*4-0x20]
64020657:	mov    esi,DWORD PTR [ecx]
64020659:	lea    edi,[esi+edx*1]
6402065c:	cmp    edi,esi
6402065e:	jb     0x64020664
64020660:	cmp    edi,edx
64020662:	jae    0x6402066b
64020664:	mov    DWORD PTR [ebp+0x8],0x1
6402066b:	mov    DWORD PTR [ecx],edi
6402066d:	mov    ecx,DWORD PTR [ebp+0x8]
64020670:	jmp    0x64020691
64020672:	test   ecx,ecx
64020674:	je     0x64020694
64020676:	lea    ecx,[ebp+eax*4-0x20]
6402067a:	mov    edx,DWORD PTR [ecx]
6402067c:	lea    esi,[edx+0x1]
6402067f:	xor    edi,edi
64020681:	cmp    esi,edx
64020683:	jb     0x6402068a
64020685:	cmp    esi,0x1
64020688:	jae    0x6402068d
6402068a:	xor    edi,edi
6402068c:	inc    edi
6402068d:	mov    DWORD PTR [ecx],esi
6402068f:	mov    ecx,edi
64020691:	dec    eax
64020692:	jns    0x64020672
64020694:	mov    ecx,DWORD PTR [ebp-0x10]
64020697:	or     eax,0xffffffff
6402069a:	shl    eax,cl
6402069c:	and    DWORD PTR [ebx],eax
6402069e:	mov    eax,DWORD PTR [ebp-0xc]
640206a1:	inc    eax
640206a2:	cmp    eax,0x3
640206a5:	jge    0x640206b4
640206a7:	push   0x3
640206a9:	pop    ecx
640206aa:	lea    edi,[ebp+eax*4-0x20]
640206ae:	sub    ecx,eax
640206b0:	xor    eax,eax
640206b2:	rep stos DWORD PTR es:[edi],eax
640206b4:	mov    ecx,DWORD PTR ds:0x6402e07c
640206ba:	inc    ecx
640206bb:	mov    eax,ecx
640206bd:	cdq    
640206be:	and    edx,0x1f
640206c1:	add    eax,edx
640206c3:	mov    edx,ecx
640206c5:	sar    eax,0x5
640206c8:	and    edx,0x8000001f
640206ce:	jns    0x640206d5
640206d0:	dec    edx
640206d1:	or     edx,0xffffffe0
640206d4:	inc    edx
640206d5:	and    DWORD PTR [ebp-0xc],0x0
640206d9:	and    DWORD PTR [ebp+0x8],0x0
640206dd:	or     edi,0xffffffff
640206e0:	mov    ecx,edx
640206e2:	shl    edi,cl
640206e4:	mov    DWORD PTR [ebp-0x4],0x20
640206eb:	sub    DWORD PTR [ebp-0x4],edx
640206ee:	not    edi
640206f0:	mov    ebx,DWORD PTR [ebp+0x8]
640206f3:	lea    ebx,[ebp+ebx*4-0x20]
640206f7:	mov    esi,DWORD PTR [ebx]
640206f9:	mov    ecx,esi
640206fb:	and    ecx,edi
640206fd:	mov    DWORD PTR [ebp-0x10],ecx
64020700:	mov    ecx,edx
64020702:	shr    esi,cl
64020704:	mov    ecx,DWORD PTR [ebp-0x4]
64020707:	or     esi,DWORD PTR [ebp-0xc]
6402070a:	mov    DWORD PTR [ebx],esi
6402070c:	mov    esi,DWORD PTR [ebp-0x10]
6402070f:	shl    esi,cl
64020711:	inc    DWORD PTR [ebp+0x8]
64020714:	cmp    DWORD PTR [ebp+0x8],0x3
64020718:	mov    DWORD PTR [ebp-0xc],esi
6402071b:	jl     0x640206f0
6402071d:	mov    esi,eax
6402071f:	push   0x2
64020721:	shl    esi,0x2
64020724:	lea    ecx,[ebp-0x18]
64020727:	pop    edx
64020728:	sub    ecx,esi
6402072a:	cmp    edx,eax
6402072c:	jl     0x64020736
6402072e:	mov    esi,DWORD PTR [ecx]
64020730:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020734:	jmp    0x6402073b
64020736:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402073b:	dec    edx
6402073c:	sub    ecx,0x4
6402073f:	test   edx,edx
64020741:	jge    0x6402072a
64020743:	push   0x2
64020745:	xor    ebx,ebx
64020747:	pop    eax
64020748:	jmp    0x640208a7
6402074d:	cmp    ebx,DWORD PTR ds:0x6402e070
64020753:	mov    ecx,DWORD PTR ds:0x6402e07c
64020759:	jl     0x6402080c
6402075f:	xor    eax,eax
64020761:	lea    edi,[ebp-0x20]
64020764:	stos   DWORD PTR es:[edi],eax
64020765:	stos   DWORD PTR es:[edi],eax
64020766:	stos   DWORD PTR es:[edi],eax
64020767:	or     DWORD PTR [ebp-0x20],0x80000000
6402076e:	mov    eax,ecx
64020770:	cdq    
64020771:	and    edx,0x1f
64020774:	add    eax,edx
64020776:	mov    edx,ecx
64020778:	sar    eax,0x5
6402077b:	and    edx,0x8000001f
64020781:	jns    0x64020788
64020783:	dec    edx
64020784:	or     edx,0xffffffe0
64020787:	inc    edx
64020788:	and    DWORD PTR [ebp-0xc],0x0
6402078c:	and    DWORD PTR [ebp+0x8],0x0
64020790:	or     edi,0xffffffff
64020793:	mov    ecx,edx
64020795:	shl    edi,cl
64020797:	mov    DWORD PTR [ebp-0x4],0x20
6402079e:	sub    DWORD PTR [ebp-0x4],edx
640207a1:	not    edi
640207a3:	mov    ebx,DWORD PTR [ebp+0x8]
640207a6:	lea    ebx,[ebp+ebx*4-0x20]
640207aa:	mov    esi,DWORD PTR [ebx]
640207ac:	mov    ecx,esi
640207ae:	and    ecx,edi
640207b0:	mov    DWORD PTR [ebp-0x10],ecx
640207b3:	mov    ecx,edx
640207b5:	shr    esi,cl
640207b7:	mov    ecx,DWORD PTR [ebp-0x4]
640207ba:	or     esi,DWORD PTR [ebp-0xc]
640207bd:	mov    DWORD PTR [ebx],esi
640207bf:	mov    esi,DWORD PTR [ebp-0x10]
640207c2:	shl    esi,cl
640207c4:	inc    DWORD PTR [ebp+0x8]
640207c7:	cmp    DWORD PTR [ebp+0x8],0x3
640207cb:	mov    DWORD PTR [ebp-0xc],esi
640207ce:	jl     0x640207a3
640207d0:	mov    esi,eax
640207d2:	push   0x2
640207d4:	shl    esi,0x2
640207d7:	lea    ecx,[ebp-0x18]
640207da:	pop    edx
640207db:	sub    ecx,esi
640207dd:	cmp    edx,eax
640207df:	jl     0x640207e9
640207e1:	mov    esi,DWORD PTR [ecx]
640207e3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640207e7:	jmp    0x640207ee
640207e9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640207ee:	dec    edx
640207ef:	sub    ecx,0x4
640207f2:	test   edx,edx
640207f4:	jge    0x640207dd
640207f6:	mov    eax,ds:0x6402e070
640207fb:	mov    ecx,DWORD PTR ds:0x6402e084
64020801:	lea    ebx,[ecx+eax*1]
64020804:	xor    eax,eax
64020806:	inc    eax
64020807:	jmp    0x640208a7
6402080c:	mov    eax,ds:0x6402e084
64020811:	and    DWORD PTR [ebp-0x20],0x7fffffff
64020818:	add    ebx,eax
6402081a:	mov    eax,ecx
6402081c:	cdq    
6402081d:	and    edx,0x1f
64020820:	add    eax,edx
64020822:	mov    edx,ecx
64020824:	sar    eax,0x5
64020827:	and    edx,0x8000001f
6402082d:	jns    0x64020834
6402082f:	dec    edx
64020830:	or     edx,0xffffffe0
64020833:	inc    edx
64020834:	and    DWORD PTR [ebp-0xc],0x0
64020838:	and    DWORD PTR [ebp+0x8],0x0
6402083c:	or     esi,0xffffffff
6402083f:	mov    ecx,edx
64020841:	shl    esi,cl
64020843:	mov    DWORD PTR [ebp-0x4],0x20
6402084a:	sub    DWORD PTR [ebp-0x4],edx
6402084d:	not    esi
6402084f:	mov    ecx,DWORD PTR [ebp+0x8]
64020852:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64020856:	mov    ecx,edi
64020858:	and    ecx,esi
6402085a:	mov    DWORD PTR [ebp-0x10],ecx
6402085d:	mov    ecx,edx
6402085f:	shr    edi,cl
64020861:	mov    ecx,DWORD PTR [ebp+0x8]
64020864:	or     edi,DWORD PTR [ebp-0xc]
64020867:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6402086b:	mov    edi,DWORD PTR [ebp-0x10]
6402086e:	mov    ecx,DWORD PTR [ebp-0x4]
64020871:	shl    edi,cl
64020873:	inc    DWORD PTR [ebp+0x8]
64020876:	cmp    DWORD PTR [ebp+0x8],0x3
6402087a:	mov    DWORD PTR [ebp-0xc],edi
6402087d:	jl     0x6402084f
6402087f:	mov    esi,eax
64020881:	push   0x2
64020883:	shl    esi,0x2
64020886:	lea    ecx,[ebp-0x18]
64020889:	pop    edx
6402088a:	sub    ecx,esi
6402088c:	cmp    edx,eax
6402088e:	jl     0x64020898
64020890:	mov    esi,DWORD PTR [ecx]
64020892:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020896:	jmp    0x6402089d
64020898:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402089d:	dec    edx
6402089e:	sub    ecx,0x4
640208a1:	test   edx,edx
640208a3:	jge    0x6402088c
640208a5:	xor    eax,eax
640208a7:	pop    esi
640208a8:	push   0x1f
640208aa:	pop    ecx
640208ab:	sub    ecx,DWORD PTR ds:0x6402e07c
640208b1:	shl    ebx,cl
640208b3:	mov    ecx,DWORD PTR [ebp-0x14]
640208b6:	neg    ecx
640208b8:	sbb    ecx,ecx
640208ba:	and    ecx,0x80000000
640208c0:	or     ebx,ecx
640208c2:	mov    ecx,DWORD PTR ds:0x6402e080
640208c8:	or     ebx,DWORD PTR [ebp-0x20]
640208cb:	cmp    ecx,0x40
640208ce:	jne    0x640208dd
640208d0:	mov    ecx,DWORD PTR [ebp+0xc]
640208d3:	mov    edx,DWORD PTR [ebp-0x1c]
640208d6:	mov    DWORD PTR [ecx+0x4],ebx
640208d9:	mov    DWORD PTR [ecx],edx
640208db:	jmp    0x640208e7
640208dd:	cmp    ecx,0x20
640208e0:	jne    0x640208e7
640208e2:	mov    ecx,DWORD PTR [ebp+0xc]
640208e5:	mov    DWORD PTR [ecx],ebx
640208e7:	pop    edi
640208e8:	pop    ebx
640208e9:	leave  
640208ea:	ret    
640208eb:	push   ebp
640208ec:	mov    ebp,esp
640208ee:	sub    esp,0x2c
640208f1:	mov    eax,DWORD PTR [ebp+0x8]
640208f4:	movzx  ecx,WORD PTR [eax+0xa]
640208f8:	push   ebx
640208f9:	mov    ebx,ecx
640208fb:	and    ecx,0x8000
64020901:	mov    DWORD PTR [ebp-0x14],ecx
64020904:	mov    ecx,DWORD PTR [eax+0x6]
64020907:	mov    DWORD PTR [ebp-0x20],ecx
6402090a:	mov    ecx,DWORD PTR [eax+0x2]
6402090d:	movzx  eax,WORD PTR [eax]
64020910:	and    ebx,0x7fff
64020916:	sub    ebx,0x3fff
6402091c:	shl    eax,0x10
6402091f:	cmp    ebx,0xffffc001
64020925:	push   edi
64020926:	mov    DWORD PTR [ebp-0x1c],ecx
64020929:	mov    DWORD PTR [ebp-0x18],eax
6402092c:	jne    0x64020955
6402092e:	xor    ebx,ebx
64020930:	xor    eax,eax
64020932:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64020936:	jne    0x64020945
64020938:	inc    eax
64020939:	cmp    eax,0x3
6402093c:	jl     0x64020932
6402093e:	xor    eax,eax
64020940:	jmp    0x64020dea
64020945:	xor    eax,eax
64020947:	lea    edi,[ebp-0x20]
6402094a:	stos   DWORD PTR es:[edi],eax
6402094b:	stos   DWORD PTR es:[edi],eax
6402094c:	push   0x2
6402094e:	stos   DWORD PTR es:[edi],eax
6402094f:	pop    eax
64020950:	jmp    0x64020dea
64020955:	and    DWORD PTR [ebp+0x8],0x0
64020959:	push   esi
6402095a:	lea    esi,[ebp-0x20]
6402095d:	lea    edi,[ebp-0x2c]
64020960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020963:	mov    esi,DWORD PTR ds:0x6402e090
64020969:	dec    esi
6402096a:	lea    ecx,[esi+0x1]
6402096d:	mov    eax,ecx
6402096f:	cdq    
64020970:	and    edx,0x1f
64020973:	add    eax,edx
64020975:	sar    eax,0x5
64020978:	mov    edx,ecx
6402097a:	and    edx,0x8000001f
64020980:	mov    DWORD PTR [ebp-0x10],ebx
64020983:	mov    DWORD PTR [ebp-0xc],eax
64020986:	jns    0x6402098d
64020988:	dec    edx
64020989:	or     edx,0xffffffe0
6402098c:	inc    edx
6402098d:	lea    edi,[ebp+eax*4-0x20]
64020991:	push   0x1f
64020993:	xor    eax,eax
64020995:	pop    ecx
64020996:	sub    ecx,edx
64020998:	inc    eax
64020999:	shl    eax,cl
6402099b:	mov    DWORD PTR [ebp-0x8],ecx
6402099e:	test   DWORD PTR [edi],eax
640209a0:	je     0x64020a33
640209a6:	mov    eax,DWORD PTR [ebp-0xc]
640209a9:	or     edx,0xffffffff
640209ac:	shl    edx,cl
640209ae:	not    edx
640209b0:	test   DWORD PTR [ebp+eax*4-0x20],edx
640209b4:	jmp    0x640209bb
640209b6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
640209bb:	jne    0x640209c5
640209bd:	inc    eax
640209be:	cmp    eax,0x3
640209c1:	jl     0x640209b6
640209c3:	jmp    0x64020a33
640209c5:	mov    eax,esi
640209c7:	cdq    
640209c8:	push   0x1f
640209ca:	pop    ecx
640209cb:	and    edx,ecx
640209cd:	add    eax,edx
640209cf:	sar    eax,0x5
640209d2:	and    esi,0x8000001f
640209d8:	jns    0x640209df
640209da:	dec    esi
640209db:	or     esi,0xffffffe0
640209de:	inc    esi
640209df:	and    DWORD PTR [ebp-0x4],0x0
640209e3:	sub    ecx,esi
640209e5:	xor    edx,edx
640209e7:	inc    edx
640209e8:	shl    edx,cl
640209ea:	lea    ecx,[ebp+eax*4-0x20]
640209ee:	mov    esi,DWORD PTR [ecx]
640209f0:	add    esi,edx
640209f2:	mov    DWORD PTR [ebp+0x8],esi
640209f5:	mov    esi,DWORD PTR [ecx]
640209f7:	cmp    DWORD PTR [ebp+0x8],esi
640209fa:	jb     0x64020a1e
640209fc:	cmp    DWORD PTR [ebp+0x8],edx
640209ff:	jmp    0x64020a1c
64020a01:	test   ecx,ecx
64020a03:	je     0x64020a30
64020a05:	and    DWORD PTR [ebp-0x4],0x0
64020a09:	lea    ecx,[ebp+eax*4-0x20]
64020a0d:	mov    edx,DWORD PTR [ecx]
64020a0f:	lea    esi,[edx+0x1]
64020a12:	cmp    esi,edx
64020a14:	mov    DWORD PTR [ebp+0x8],esi
64020a17:	jb     0x64020a1e
64020a19:	cmp    esi,0x1
64020a1c:	jae    0x64020a25
64020a1e:	mov    DWORD PTR [ebp-0x4],0x1
64020a25:	dec    eax
64020a26:	mov    edx,DWORD PTR [ebp+0x8]
64020a29:	mov    DWORD PTR [ecx],edx
64020a2b:	mov    ecx,DWORD PTR [ebp-0x4]
64020a2e:	jns    0x64020a01
64020a30:	mov    DWORD PTR [ebp+0x8],ecx
64020a33:	mov    ecx,DWORD PTR [ebp-0x8]
64020a36:	or     eax,0xffffffff
64020a39:	shl    eax,cl
64020a3b:	and    DWORD PTR [edi],eax
64020a3d:	mov    eax,DWORD PTR [ebp-0xc]
64020a40:	inc    eax
64020a41:	cmp    eax,0x3
64020a44:	jge    0x64020a53
64020a46:	push   0x3
64020a48:	pop    ecx
64020a49:	lea    edi,[ebp+eax*4-0x20]
64020a4d:	sub    ecx,eax
64020a4f:	xor    eax,eax
64020a51:	rep stos DWORD PTR es:[edi],eax
64020a53:	cmp    DWORD PTR [ebp+0x8],0x0
64020a57:	je     0x64020a5a
64020a59:	inc    ebx
64020a5a:	mov    eax,ds:0x6402e08c
64020a5f:	mov    ecx,eax
64020a61:	sub    ecx,DWORD PTR ds:0x6402e090
64020a67:	cmp    ebx,ecx
64020a69:	jge    0x64020a78
64020a6b:	xor    eax,eax
64020a6d:	lea    edi,[ebp-0x20]
64020a70:	stos   DWORD PTR es:[edi],eax
64020a71:	stos   DWORD PTR es:[edi],eax
64020a72:	stos   DWORD PTR es:[edi],eax
64020a73:	jmp    0x64020c85
64020a78:	cmp    ebx,eax
64020a7a:	jg     0x64020c8f
64020a80:	sub    eax,DWORD PTR [ebp-0x10]
64020a83:	lea    esi,[ebp-0x2c]
64020a86:	mov    ecx,eax
64020a88:	lea    edi,[ebp-0x20]
64020a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020a8c:	cdq    
64020a8d:	and    edx,0x1f
64020a90:	add    eax,edx
64020a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020a93:	mov    edx,ecx
64020a95:	sar    eax,0x5
64020a98:	and    edx,0x8000001f
64020a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020a9f:	jns    0x64020aa6
64020aa1:	dec    edx
64020aa2:	or     edx,0xffffffe0
64020aa5:	inc    edx
64020aa6:	and    DWORD PTR [ebp-0xc],0x0
64020aaa:	and    DWORD PTR [ebp+0x8],0x0
64020aae:	or     edi,0xffffffff
64020ab1:	mov    ecx,edx
64020ab3:	shl    edi,cl
64020ab5:	mov    DWORD PTR [ebp-0x4],0x20
64020abc:	sub    DWORD PTR [ebp-0x4],edx
64020abf:	not    edi
64020ac1:	mov    ebx,DWORD PTR [ebp+0x8]
64020ac4:	lea    ebx,[ebp+ebx*4-0x20]
64020ac8:	mov    esi,DWORD PTR [ebx]
64020aca:	mov    ecx,esi
64020acc:	and    ecx,edi
64020ace:	mov    DWORD PTR [ebp-0x10],ecx
64020ad1:	mov    ecx,edx
64020ad3:	shr    esi,cl
64020ad5:	mov    ecx,DWORD PTR [ebp-0x4]
64020ad8:	or     esi,DWORD PTR [ebp-0xc]
64020adb:	mov    DWORD PTR [ebx],esi
64020add:	mov    esi,DWORD PTR [ebp-0x10]
64020ae0:	shl    esi,cl
64020ae2:	inc    DWORD PTR [ebp+0x8]
64020ae5:	cmp    DWORD PTR [ebp+0x8],0x3
64020ae9:	mov    DWORD PTR [ebp-0xc],esi
64020aec:	jl     0x64020ac1
64020aee:	mov    esi,eax
64020af0:	push   0x2
64020af2:	shl    esi,0x2
64020af5:	lea    ecx,[ebp-0x18]
64020af8:	pop    edx
64020af9:	sub    ecx,esi
64020afb:	cmp    edx,eax
64020afd:	jl     0x64020b07
64020aff:	mov    esi,DWORD PTR [ecx]
64020b01:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020b05:	jmp    0x64020b0c
64020b07:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020b0c:	dec    edx
64020b0d:	sub    ecx,0x4
64020b10:	test   edx,edx
64020b12:	jge    0x64020afb
64020b14:	mov    esi,DWORD PTR ds:0x6402e090
64020b1a:	dec    esi
64020b1b:	lea    ecx,[esi+0x1]
64020b1e:	mov    eax,ecx
64020b20:	cdq    
64020b21:	and    edx,0x1f
64020b24:	add    eax,edx
64020b26:	sar    eax,0x5
64020b29:	mov    edx,ecx
64020b2b:	and    edx,0x8000001f
64020b31:	mov    DWORD PTR [ebp-0xc],eax
64020b34:	jns    0x64020b3b
64020b36:	dec    edx
64020b37:	or     edx,0xffffffe0
64020b3a:	inc    edx
64020b3b:	push   0x1f
64020b3d:	pop    ecx
64020b3e:	sub    ecx,edx
64020b40:	xor    edx,edx
64020b42:	inc    edx
64020b43:	shl    edx,cl
64020b45:	lea    ebx,[ebp+eax*4-0x20]
64020b49:	mov    DWORD PTR [ebp-0x10],ecx
64020b4c:	test   DWORD PTR [ebx],edx
64020b4e:	je     0x64020bd6
64020b54:	or     edx,0xffffffff
64020b57:	shl    edx,cl
64020b59:	not    edx
64020b5b:	test   DWORD PTR [ebp+eax*4-0x20],edx
64020b5f:	jmp    0x64020b66
64020b61:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020b66:	jne    0x64020b70
64020b68:	inc    eax
64020b69:	cmp    eax,0x3
64020b6c:	jl     0x64020b61
64020b6e:	jmp    0x64020bd6
64020b70:	mov    eax,esi
64020b72:	cdq    
64020b73:	push   0x1f
64020b75:	pop    ecx
64020b76:	and    edx,ecx
64020b78:	add    eax,edx
64020b7a:	sar    eax,0x5
64020b7d:	and    esi,0x8000001f
64020b83:	jns    0x64020b8a
64020b85:	dec    esi
64020b86:	or     esi,0xffffffe0
64020b89:	inc    esi
64020b8a:	and    DWORD PTR [ebp+0x8],0x0
64020b8e:	xor    edx,edx
64020b90:	sub    ecx,esi
64020b92:	inc    edx
64020b93:	shl    edx,cl
64020b95:	lea    ecx,[ebp+eax*4-0x20]
64020b99:	mov    esi,DWORD PTR [ecx]
64020b9b:	lea    edi,[esi+edx*1]
64020b9e:	cmp    edi,esi
64020ba0:	jb     0x64020ba6
64020ba2:	cmp    edi,edx
64020ba4:	jae    0x64020bad
64020ba6:	mov    DWORD PTR [ebp+0x8],0x1
64020bad:	mov    DWORD PTR [ecx],edi
64020baf:	mov    ecx,DWORD PTR [ebp+0x8]
64020bb2:	jmp    0x64020bd3
64020bb4:	test   ecx,ecx
64020bb6:	je     0x64020bd6
64020bb8:	lea    ecx,[ebp+eax*4-0x20]
64020bbc:	mov    edx,DWORD PTR [ecx]
64020bbe:	lea    esi,[edx+0x1]
64020bc1:	xor    edi,edi
64020bc3:	cmp    esi,edx
64020bc5:	jb     0x64020bcc
64020bc7:	cmp    esi,0x1
64020bca:	jae    0x64020bcf
64020bcc:	xor    edi,edi
64020bce:	inc    edi
64020bcf:	mov    DWORD PTR [ecx],esi
64020bd1:	mov    ecx,edi
64020bd3:	dec    eax
64020bd4:	jns    0x64020bb4
64020bd6:	mov    ecx,DWORD PTR [ebp-0x10]
64020bd9:	or     eax,0xffffffff
64020bdc:	shl    eax,cl
64020bde:	and    DWORD PTR [ebx],eax
64020be0:	mov    eax,DWORD PTR [ebp-0xc]
64020be3:	inc    eax
64020be4:	cmp    eax,0x3
64020be7:	jge    0x64020bf6
64020be9:	push   0x3
64020beb:	pop    ecx
64020bec:	lea    edi,[ebp+eax*4-0x20]
64020bf0:	sub    ecx,eax
64020bf2:	xor    eax,eax
64020bf4:	rep stos DWORD PTR es:[edi],eax
64020bf6:	mov    ecx,DWORD PTR ds:0x6402e094
64020bfc:	inc    ecx
64020bfd:	mov    eax,ecx
64020bff:	cdq    
64020c00:	and    edx,0x1f
64020c03:	add    eax,edx
64020c05:	mov    edx,ecx
64020c07:	sar    eax,0x5
64020c0a:	and    edx,0x8000001f
64020c10:	jns    0x64020c17
64020c12:	dec    edx
64020c13:	or     edx,0xffffffe0
64020c16:	inc    edx
64020c17:	and    DWORD PTR [ebp-0xc],0x0
64020c1b:	and    DWORD PTR [ebp+0x8],0x0
64020c1f:	or     edi,0xffffffff
64020c22:	mov    ecx,edx
64020c24:	shl    edi,cl
64020c26:	mov    DWORD PTR [ebp-0x4],0x20
64020c2d:	sub    DWORD PTR [ebp-0x4],edx
64020c30:	not    edi
64020c32:	mov    ebx,DWORD PTR [ebp+0x8]
64020c35:	lea    ebx,[ebp+ebx*4-0x20]
64020c39:	mov    esi,DWORD PTR [ebx]
64020c3b:	mov    ecx,esi
64020c3d:	and    ecx,edi
64020c3f:	mov    DWORD PTR [ebp-0x10],ecx
64020c42:	mov    ecx,edx
64020c44:	shr    esi,cl
64020c46:	mov    ecx,DWORD PTR [ebp-0x4]
64020c49:	or     esi,DWORD PTR [ebp-0xc]
64020c4c:	mov    DWORD PTR [ebx],esi
64020c4e:	mov    esi,DWORD PTR [ebp-0x10]
64020c51:	shl    esi,cl
64020c53:	inc    DWORD PTR [ebp+0x8]
64020c56:	cmp    DWORD PTR [ebp+0x8],0x3
64020c5a:	mov    DWORD PTR [ebp-0xc],esi
64020c5d:	jl     0x64020c32
64020c5f:	mov    esi,eax
64020c61:	push   0x2
64020c63:	shl    esi,0x2
64020c66:	lea    ecx,[ebp-0x18]
64020c69:	pop    edx
64020c6a:	sub    ecx,esi
64020c6c:	cmp    edx,eax
64020c6e:	jl     0x64020c78
64020c70:	mov    esi,DWORD PTR [ecx]
64020c72:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020c76:	jmp    0x64020c7d
64020c78:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020c7d:	dec    edx
64020c7e:	sub    ecx,0x4
64020c81:	test   edx,edx
64020c83:	jge    0x64020c6c
64020c85:	push   0x2
64020c87:	xor    ebx,ebx
64020c89:	pop    eax
64020c8a:	jmp    0x64020de9
64020c8f:	cmp    ebx,DWORD PTR ds:0x6402e088
64020c95:	mov    ecx,DWORD PTR ds:0x6402e094
64020c9b:	jl     0x64020d4e
64020ca1:	xor    eax,eax
64020ca3:	lea    edi,[ebp-0x20]
64020ca6:	stos   DWORD PTR es:[edi],eax
64020ca7:	stos   DWORD PTR es:[edi],eax
64020ca8:	stos   DWORD PTR es:[edi],eax
64020ca9:	or     DWORD PTR [ebp-0x20],0x80000000
64020cb0:	mov    eax,ecx
64020cb2:	cdq    
64020cb3:	and    edx,0x1f
64020cb6:	add    eax,edx
64020cb8:	mov    edx,ecx
64020cba:	sar    eax,0x5
64020cbd:	and    edx,0x8000001f
64020cc3:	jns    0x64020cca
64020cc5:	dec    edx
64020cc6:	or     edx,0xffffffe0
64020cc9:	inc    edx
64020cca:	and    DWORD PTR [ebp-0xc],0x0
64020cce:	and    DWORD PTR [ebp+0x8],0x0
64020cd2:	or     edi,0xffffffff
64020cd5:	mov    ecx,edx
64020cd7:	shl    edi,cl
64020cd9:	mov    DWORD PTR [ebp-0x4],0x20
64020ce0:	sub    DWORD PTR [ebp-0x4],edx
64020ce3:	not    edi
64020ce5:	mov    ebx,DWORD PTR [ebp+0x8]
64020ce8:	lea    ebx,[ebp+ebx*4-0x20]
64020cec:	mov    esi,DWORD PTR [ebx]
64020cee:	mov    ecx,esi
64020cf0:	and    ecx,edi
64020cf2:	mov    DWORD PTR [ebp-0x10],ecx
64020cf5:	mov    ecx,edx
64020cf7:	shr    esi,cl
64020cf9:	mov    ecx,DWORD PTR [ebp-0x4]
64020cfc:	or     esi,DWORD PTR [ebp-0xc]
64020cff:	mov    DWORD PTR [ebx],esi
64020d01:	mov    esi,DWORD PTR [ebp-0x10]
64020d04:	shl    esi,cl
64020d06:	inc    DWORD PTR [ebp+0x8]
64020d09:	cmp    DWORD PTR [ebp+0x8],0x3
64020d0d:	mov    DWORD PTR [ebp-0xc],esi
64020d10:	jl     0x64020ce5
64020d12:	mov    esi,eax
64020d14:	push   0x2
64020d16:	shl    esi,0x2
64020d19:	lea    ecx,[ebp-0x18]
64020d1c:	pop    edx
64020d1d:	sub    ecx,esi
64020d1f:	cmp    edx,eax
64020d21:	jl     0x64020d2b
64020d23:	mov    esi,DWORD PTR [ecx]
64020d25:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020d29:	jmp    0x64020d30
64020d2b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020d30:	dec    edx
64020d31:	sub    ecx,0x4
64020d34:	test   edx,edx
64020d36:	jge    0x64020d1f
64020d38:	mov    eax,ds:0x6402e088
64020d3d:	mov    ecx,DWORD PTR ds:0x6402e09c
64020d43:	lea    ebx,[ecx+eax*1]
64020d46:	xor    eax,eax
64020d48:	inc    eax
64020d49:	jmp    0x64020de9
64020d4e:	mov    eax,ds:0x6402e09c
64020d53:	and    DWORD PTR [ebp-0x20],0x7fffffff
64020d5a:	add    ebx,eax
64020d5c:	mov    eax,ecx
64020d5e:	cdq    
64020d5f:	and    edx,0x1f
64020d62:	add    eax,edx
64020d64:	mov    edx,ecx
64020d66:	sar    eax,0x5
64020d69:	and    edx,0x8000001f
64020d6f:	jns    0x64020d76
64020d71:	dec    edx
64020d72:	or     edx,0xffffffe0
64020d75:	inc    edx
64020d76:	and    DWORD PTR [ebp-0xc],0x0
64020d7a:	and    DWORD PTR [ebp+0x8],0x0
64020d7e:	or     esi,0xffffffff
64020d81:	mov    ecx,edx
64020d83:	shl    esi,cl
64020d85:	mov    DWORD PTR [ebp-0x4],0x20
64020d8c:	sub    DWORD PTR [ebp-0x4],edx
64020d8f:	not    esi
64020d91:	mov    ecx,DWORD PTR [ebp+0x8]
64020d94:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64020d98:	mov    ecx,edi
64020d9a:	and    ecx,esi
64020d9c:	mov    DWORD PTR [ebp-0x10],ecx
64020d9f:	mov    ecx,edx
64020da1:	shr    edi,cl
64020da3:	mov    ecx,DWORD PTR [ebp+0x8]
64020da6:	or     edi,DWORD PTR [ebp-0xc]
64020da9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
64020dad:	mov    edi,DWORD PTR [ebp-0x10]
64020db0:	mov    ecx,DWORD PTR [ebp-0x4]
64020db3:	shl    edi,cl
64020db5:	inc    DWORD PTR [ebp+0x8]
64020db8:	cmp    DWORD PTR [ebp+0x8],0x3
64020dbc:	mov    DWORD PTR [ebp-0xc],edi
64020dbf:	jl     0x64020d91
64020dc1:	mov    esi,eax
64020dc3:	push   0x2
64020dc5:	shl    esi,0x2
64020dc8:	lea    ecx,[ebp-0x18]
64020dcb:	pop    edx
64020dcc:	sub    ecx,esi
64020dce:	cmp    edx,eax
64020dd0:	jl     0x64020dda
64020dd2:	mov    esi,DWORD PTR [ecx]
64020dd4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020dd8:	jmp    0x64020ddf
64020dda:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020ddf:	dec    edx
64020de0:	sub    ecx,0x4
64020de3:	test   edx,edx
64020de5:	jge    0x64020dce
64020de7:	xor    eax,eax
64020de9:	pop    esi
64020dea:	push   0x1f
64020dec:	pop    ecx
64020ded:	sub    ecx,DWORD PTR ds:0x6402e094
64020df3:	shl    ebx,cl
64020df5:	mov    ecx,DWORD PTR [ebp-0x14]
64020df8:	neg    ecx
64020dfa:	sbb    ecx,ecx
64020dfc:	and    ecx,0x80000000
64020e02:	or     ebx,ecx
64020e04:	mov    ecx,DWORD PTR ds:0x6402e098
64020e0a:	or     ebx,DWORD PTR [ebp-0x20]
64020e0d:	cmp    ecx,0x40
64020e10:	jne    0x64020e1f
64020e12:	mov    ecx,DWORD PTR [ebp+0xc]
64020e15:	mov    edx,DWORD PTR [ebp-0x1c]
64020e18:	mov    DWORD PTR [ecx+0x4],ebx
64020e1b:	mov    DWORD PTR [ecx],edx
64020e1d:	jmp    0x64020e29
64020e1f:	cmp    ecx,0x20
64020e22:	jne    0x64020e29
64020e24:	mov    ecx,DWORD PTR [ebp+0xc]
64020e27:	mov    DWORD PTR [ecx],ebx
64020e29:	pop    edi
64020e2a:	pop    ebx
64020e2b:	leave  
64020e2c:	ret    
64020e2d:	push   ebp
64020e2e:	mov    ebp,esp
64020e30:	sub    esp,0x7c
64020e33:	mov    eax,ds:0x6402d09c
64020e38:	xor    eax,ebp
64020e3a:	mov    DWORD PTR [ebp-0x4],eax
64020e3d:	mov    eax,DWORD PTR [ebp+0x8]
64020e40:	push   ebx
64020e41:	xor    ebx,ebx
64020e43:	push   esi
64020e44:	xor    esi,esi
64020e46:	mov    DWORD PTR [ebp-0x7c],eax
64020e49:	mov    eax,DWORD PTR [ebp+0xc]
64020e4c:	inc    esi
64020e4d:	xor    ecx,ecx
64020e4f:	cmp    DWORD PTR [ebp+0x24],ebx
64020e52:	push   edi
64020e53:	mov    DWORD PTR [ebp-0x70],eax
64020e56:	lea    edi,[ebp-0x20]
64020e59:	mov    DWORD PTR [ebp-0x74],ebx
64020e5c:	mov    DWORD PTR [ebp-0x68],esi
64020e5f:	mov    DWORD PTR [ebp-0x4c],ebx
64020e62:	mov    DWORD PTR [ebp-0x58],ebx
64020e65:	mov    DWORD PTR [ebp-0x5c],ebx
64020e68:	mov    DWORD PTR [ebp-0x60],ebx
64020e6b:	mov    DWORD PTR [ebp-0x64],ebx
64020e6e:	mov    DWORD PTR [ebp-0x50],ebx
64020e71:	mov    DWORD PTR [ebp-0x6c],ebx
64020e74:	jne    0x64020e95
64020e76:	call   0x64014c30
64020e7b:	push   ebx
64020e7c:	push   ebx
64020e7d:	push   ebx
64020e7e:	push   ebx
64020e7f:	push   ebx
64020e80:	mov    DWORD PTR [eax],0x16
64020e86:	call   0x640129a4
64020e8b:	add    esp,0x14
64020e8e:	xor    eax,eax
64020e90:	jmp    0x640214ae
64020e95:	mov    edx,DWORD PTR [ebp+0x10]
64020e98:	mov    DWORD PTR [ebp-0x54],edx
64020e9b:	mov    al,BYTE PTR [edx]
64020e9d:	cmp    al,0x20
64020e9f:	je     0x64020ead
64020ea1:	cmp    al,0x9
64020ea3:	je     0x64020ead
64020ea5:	cmp    al,0xa
64020ea7:	je     0x64020ead
64020ea9:	cmp    al,0xd
64020eab:	jne    0x64020eb0
64020ead:	inc    edx
64020eae:	jmp    0x64020e9b
64020eb0:	mov    bl,0x30
64020eb2:	mov    al,BYTE PTR [edx]
64020eb4:	inc    edx
64020eb5:	cmp    ecx,0xb
64020eb8:	ja     0x640210ed
64020ebe:	jmp    DWORD PTR [ecx*4+0x640214bd]
64020ec5:	mov    cl,al
64020ec7:	sub    cl,0x31
64020eca:	cmp    cl,0x8
64020ecd:	ja     0x64020ed5
64020ecf:	push   0x3
64020ed1:	pop    ecx
64020ed2:	dec    edx
64020ed3:	jmp    0x64020eb2
64020ed5:	mov    ecx,DWORD PTR [ebp+0x24]
64020ed8:	mov    ecx,DWORD PTR [ecx]
64020eda:	mov    ecx,DWORD PTR [ecx+0xbc]
64020ee0:	mov    ecx,DWORD PTR [ecx]
64020ee2:	cmp    al,BYTE PTR [ecx]
64020ee4:	jne    0x64020eeb
64020ee6:	push   0x5
64020ee8:	pop    ecx
64020ee9:	jmp    0x64020eb2
64020eeb:	movsx  eax,al
64020eee:	sub    eax,0x2b
64020ef1:	je     0x64020f10
64020ef3:	dec    eax
64020ef4:	dec    eax
64020ef5:	je     0x64020f04
64020ef7:	sub    eax,0x3
64020efa:	jne    0x6402108b
64020f00:	mov    ecx,esi
64020f02:	jmp    0x64020eb2
64020f04:	push   0x2
64020f06:	pop    ecx
64020f07:	mov    DWORD PTR [ebp-0x74],0x8000
64020f0e:	jmp    0x64020eb2
64020f10:	and    DWORD PTR [ebp-0x74],0x0
64020f14:	push   0x2
64020f16:	pop    ecx
64020f17:	jmp    0x64020eb2
64020f19:	mov    cl,al
64020f1b:	sub    cl,0x31
64020f1e:	cmp    cl,0x8
64020f21:	mov    DWORD PTR [ebp-0x58],esi
64020f24:	jbe    0x64020ecf
64020f26:	mov    ecx,DWORD PTR [ebp+0x24]
64020f29:	mov    ecx,DWORD PTR [ecx]
64020f2b:	mov    ecx,DWORD PTR [ecx+0xbc]
64020f31:	mov    ecx,DWORD PTR [ecx]
64020f33:	cmp    al,BYTE PTR [ecx]
64020f35:	jne    0x64020f3b
64020f37:	push   0x4
64020f39:	jmp    0x64020ee8
64020f3b:	cmp    al,0x2b
64020f3d:	je     0x64020f67
64020f3f:	cmp    al,0x2d
64020f41:	je     0x64020f67
64020f43:	cmp    al,bl
64020f45:	je     0x64020f00
64020f47:	cmp    al,0x43
64020f49:	jle    0x6402108b
64020f4f:	cmp    al,0x45
64020f51:	jle    0x64020f63
64020f53:	cmp    al,0x63
64020f55:	jle    0x6402108b
64020f5b:	cmp    al,0x65
64020f5d:	jg     0x6402108b
64020f63:	push   0x6
64020f65:	jmp    0x64020ee8
64020f67:	dec    edx
64020f68:	push   0xb
64020f6a:	jmp    0x64020ee8
64020f6f:	mov    cl,al
64020f71:	sub    cl,0x31
64020f74:	cmp    cl,0x8
64020f77:	jbe    0x64020ecf
64020f7d:	mov    ecx,DWORD PTR [ebp+0x24]
64020f80:	mov    ecx,DWORD PTR [ecx]
64020f82:	mov    ecx,DWORD PTR [ecx+0xbc]
64020f88:	mov    ecx,DWORD PTR [ecx]
64020f8a:	cmp    al,BYTE PTR [ecx]
64020f8c:	je     0x64020ee6
64020f92:	cmp    al,bl
64020f94:	je     0x64020f00
64020f9a:	mov    edx,DWORD PTR [ebp-0x54]
64020f9d:	jmp    0x640210b6
64020fa2:	mov    DWORD PTR [ebp-0x58],esi
64020fa5:	jmp    0x64020fc1
64020fa7:	cmp    al,0x39
64020fa9:	jg     0x64020fc5
64020fab:	cmp    DWORD PTR [ebp-0x4c],0x19
64020faf:	jae    0x64020fbb
64020fb1:	inc    DWORD PTR [ebp-0x4c]
64020fb4:	sub    al,bl
64020fb6:	mov    BYTE PTR [edi],al
64020fb8:	inc    edi
64020fb9:	jmp    0x64020fbe
64020fbb:	inc    DWORD PTR [ebp-0x50]
64020fbe:	mov    al,BYTE PTR [edx]
64020fc0:	inc    edx
64020fc1:	cmp    al,bl
64020fc3:	jge    0x64020fa7
64020fc5:	mov    ecx,DWORD PTR [ebp+0x24]
64020fc8:	mov    ecx,DWORD PTR [ecx]
64020fca:	mov    ecx,DWORD PTR [ecx+0xbc]
64020fd0:	mov    ecx,DWORD PTR [ecx]
64020fd2:	cmp    al,BYTE PTR [ecx]
64020fd4:	je     0x64020f37
64020fda:	cmp    al,0x2b
64020fdc:	je     0x64020f67
64020fde:	cmp    al,0x2d
64020fe0:	je     0x64020f67
64020fe2:	jmp    0x64020f47
64020fe7:	cmp    DWORD PTR [ebp-0x4c],0x0
64020feb:	mov    DWORD PTR [ebp-0x58],esi
64020fee:	mov    DWORD PTR [ebp-0x5c],esi
64020ff1:	jne    0x64021019
64020ff3:	jmp    0x64020ffb
64020ff5:	dec    DWORD PTR [ebp-0x50]
64020ff8:	mov    al,BYTE PTR [edx]
64020ffa:	inc    edx
64020ffb:	cmp    al,bl
64020ffd:	je     0x64020ff5
64020fff:	jmp    0x64021019
64021001:	cmp    al,0x39
64021003:	jg     0x64020fda
64021005:	cmp    DWORD PTR [ebp-0x4c],0x19
64021009:	jae    0x64021016
6402100b:	inc    DWORD PTR [ebp-0x4c]
6402100e:	sub    al,bl
64021010:	mov    BYTE PTR [edi],al
64021012:	inc    edi
64021013:	dec    DWORD PTR [ebp-0x50]
64021016:	mov    al,BYTE PTR [edx]
64021018:	inc    edx
64021019:	cmp    al,bl
6402101b:	jge    0x64021001
6402101d:	jmp    0x64020fda
6402101f:	sub    al,bl
64021021:	cmp    al,0x9
64021023:	mov    DWORD PTR [ebp-0x5c],esi
64021026:	ja     0x64020f9a
6402102c:	push   0x4
6402102e:	jmp    0x64020ed1
64021033:	lea    ecx,[edx-0x2]
64021036:	mov    DWORD PTR [ebp-0x54],ecx
64021039:	mov    cl,al
6402103b:	sub    cl,0x31
6402103e:	cmp    cl,0x8
64021041:	ja     0x6402104a
64021043:	push   0x9
64021045:	jmp    0x64020ed1
6402104a:	movsx  eax,al
6402104d:	sub    eax,0x2b
64021050:	je     0x64021072
64021052:	dec    eax
64021053:	dec    eax
64021054:	je     0x64021066
64021056:	sub    eax,0x3
64021059:	jne    0x64020f9a
6402105f:	push   0x8
64021061:	jmp    0x64020ee8
64021066:	or     DWORD PTR [ebp-0x68],0xffffffff
6402106a:	push   0x7
6402106c:	pop    ecx
6402106d:	jmp    0x64020eb2
64021072:	push   0x7
64021074:	jmp    0x64020ee8
64021079:	mov    DWORD PTR [ebp-0x60],esi
6402107c:	jmp    0x64021081
6402107e:	mov    al,BYTE PTR [edx]
64021080:	inc    edx
64021081:	cmp    al,bl
64021083:	je     0x6402107e
64021085:	sub    al,0x31
64021087:	cmp    al,0x8
64021089:	jbe    0x64021043
6402108b:	dec    edx
6402108c:	jmp    0x640210b6
6402108e:	mov    cl,al
64021090:	sub    cl,0x31
64021093:	cmp    cl,0x8
64021096:	jbe    0x64021043
64021098:	cmp    al,bl
6402109a:	jmp    0x64021059
6402109c:	cmp    DWORD PTR [ebp+0x20],0x0
640210a0:	je     0x640210e9
640210a2:	movsx  eax,al
640210a5:	sub    eax,0x2b
640210a8:	lea    ecx,[edx-0x1]
640210ab:	mov    DWORD PTR [ebp-0x54],ecx
640210ae:	je     0x64021072
640210b0:	dec    eax
640210b1:	dec    eax
640210b2:	je     0x64021066
640210b4:	mov    edx,ecx
640210b6:	cmp    DWORD PTR [ebp-0x58],0x0
640210ba:	mov    eax,DWORD PTR [ebp-0x70]
640210bd:	mov    DWORD PTR [eax],edx
640210bf:	je     0x64021469
640210c5:	push   0x18
640210c7:	pop    eax
640210c8:	cmp    DWORD PTR [ebp-0x4c],eax
640210cb:	jbe    0x640210dd
640210cd:	cmp    BYTE PTR [ebp-0x9],0x5
640210d1:	jl     0x640210d6
640210d3:	inc    BYTE PTR [ebp-0x9]
640210d6:	dec    edi
640210d7:	inc    DWORD PTR [ebp-0x50]
640210da:	mov    DWORD PTR [ebp-0x4c],eax
640210dd:	cmp    DWORD PTR [ebp-0x4c],0x0
640210e1:	jbe    0x64021490
640210e7:	jmp    0x64021142
640210e9:	push   0xa
640210eb:	pop    ecx
640210ec:	dec    edx
640210ed:	cmp    ecx,0xa
640210f0:	jne    0x64020eb2
640210f6:	jmp    0x640210b6
640210f8:	mov    DWORD PTR [ebp-0x60],esi
640210fb:	xor    ecx,ecx
640210fd:	jmp    0x64021118
640210ff:	cmp    al,0x39
64021101:	jg     0x64021123
64021103:	imul   ecx,ecx,0xa
64021106:	movsx  esi,al
64021109:	lea    ecx,[ecx+esi*1-0x30]
6402110d:	cmp    ecx,0x1450
64021113:	jg     0x6402111e
64021115:	mov    al,BYTE PTR [edx]
64021117:	inc    edx
64021118:	cmp    al,bl
6402111a:	jge    0x640210ff
6402111c:	jmp    0x64021123
6402111e:	mov    ecx,0x1451
64021123:	mov    DWORD PTR [ebp-0x64],ecx
64021126:	jmp    0x64021133
64021128:	cmp    al,0x39
6402112a:	jg     0x6402108b
64021130:	mov    al,BYTE PTR [edx]
64021132:	inc    edx
64021133:	cmp    al,bl
64021135:	jge    0x64021128
64021137:	jmp    0x6402108b
6402113c:	dec    DWORD PTR [ebp-0x4c]
6402113f:	inc    DWORD PTR [ebp-0x50]
64021142:	dec    edi
64021143:	cmp    BYTE PTR [edi],0x0
64021146:	je     0x6402113c
64021148:	lea    eax,[ebp-0x3c]
6402114b:	push   eax
6402114c:	push   DWORD PTR [ebp-0x4c]
6402114f:	lea    eax,[ebp-0x20]
64021152:	push   eax
64021153:	call   0x640221e4
64021158:	mov    eax,DWORD PTR [ebp-0x64]
6402115b:	xor    ecx,ecx
6402115d:	add    esp,0xc
64021160:	cmp    DWORD PTR [ebp-0x68],ecx
64021163:	jge    0x64021167
64021165:	neg    eax
64021167:	add    eax,DWORD PTR [ebp-0x50]
6402116a:	cmp    DWORD PTR [ebp-0x60],ecx
6402116d:	jne    0x64021172
6402116f:	add    eax,DWORD PTR [ebp+0x18]
64021172:	cmp    DWORD PTR [ebp-0x5c],ecx
64021175:	jne    0x6402117a
64021177:	sub    eax,DWORD PTR [ebp+0x1c]
6402117a:	cmp    eax,0x1450
6402117f:	jg     0x64021472
64021185:	cmp    eax,0xffffebb0
6402118a:	jl     0x64021489
64021190:	mov    esi,0x6402e0a0
64021195:	sub    esi,0x60
64021198:	cmp    eax,ecx
6402119a:	mov    DWORD PTR [ebp-0x54],eax
6402119d:	je     0x64021457
640211a3:	jge    0x640211b2
640211a5:	neg    eax
640211a7:	mov    esi,0x6402e200
640211ac:	mov    DWORD PTR [ebp-0x54],eax
640211af:	sub    esi,0x60
640211b2:	cmp    DWORD PTR [ebp+0x14],ecx
640211b5:	jne    0x640211bb
640211b7:	mov    WORD PTR [ebp-0x3c],cx
640211bb:	cmp    DWORD PTR [ebp-0x54],ecx
640211be:	je     0x64021457
640211c4:	mov    eax,DWORD PTR [ebp-0x54]
640211c7:	sar    DWORD PTR [ebp-0x54],0x3
640211cb:	add    esi,0x54
640211ce:	and    eax,0x7
640211d1:	test   eax,eax
640211d3:	mov    DWORD PTR [ebp-0x4c],esi
640211d6:	je     0x6402144d
640211dc:	imul   eax,eax,0xc
640211df:	add    eax,esi
640211e1:	mov    ebx,eax
640211e3:	cmp    WORD PTR [ebx],0x8000
640211e8:	mov    DWORD PTR [ebp-0x70],ebx
640211eb:	jb     0x64021201
640211ed:	mov    esi,ebx
640211ef:	lea    edi,[ebp-0x48]
640211f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640211f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640211f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640211f5:	dec    DWORD PTR [ebp-0x46]
640211f8:	mov    esi,DWORD PTR [ebp-0x4c]
640211fb:	lea    ebx,[ebp-0x48]
640211fe:	mov    DWORD PTR [ebp-0x70],ebx
64021201:	movzx  edx,WORD PTR [ebx+0xa]
64021205:	mov    ecx,DWORD PTR [ebp-0x32]
64021208:	xor    eax,eax
6402120a:	mov    DWORD PTR [ebp-0x50],eax
6402120d:	mov    DWORD PTR [ebp-0x2c],eax
64021210:	mov    DWORD PTR [ebp-0x28],eax
64021213:	mov    DWORD PTR [ebp-0x24],eax
64021216:	mov    eax,edx
64021218:	mov    edi,0x7fff
6402121d:	xor    eax,ecx
6402121f:	and    ecx,edi
64021221:	and    edx,edi
64021223:	and    eax,0x8000
64021228:	cmp    cx,0x7fff
6402122d:	lea    edi,[edx+ecx*1]
64021230:	movzx  edi,di
64021233:	jae    0x64021433
64021239:	cmp    dx,0x7fff
6402123e:	jae    0x64021433
64021244:	cmp    di,0xbffd
64021249:	ja     0x64021433
6402124f:	cmp    di,0x3fbf
64021254:	ja     0x64021263
64021256:	xor    eax,eax
64021258:	mov    DWORD PTR [ebp-0x38],eax
6402125b:	mov    DWORD PTR [ebp-0x3c],eax
6402125e:	jmp    0x6402144a
64021263:	test   cx,cx
64021266:	jne    0x64021287
64021268:	inc    edi
64021269:	test   DWORD PTR [ebp-0x34],0x7fffffff
64021270:	jne    0x64021287
64021272:	cmp    DWORD PTR [ebp-0x38],0x0
64021276:	jne    0x64021287
64021278:	cmp    DWORD PTR [ebp-0x3c],0x0
6402127c:	jne    0x64021287
6402127e:	and    WORD PTR [ebp-0x32],cx
64021282:	jmp    0x6402144d
64021287:	xor    ecx,ecx
64021289:	cmp    dx,cx
6402128c:	jne    0x640212af
6402128e:	inc    edi
6402128f:	test   DWORD PTR [ebx+0x8],0x7fffffff
64021296:	jne    0x640212af
64021298:	cmp    DWORD PTR [ebx+0x4],ecx
6402129b:	jne    0x640212af
6402129d:	cmp    DWORD PTR [ebx],ecx
6402129f:	jne    0x640212af
640212a1:	mov    DWORD PTR [ebp-0x34],ecx
640212a4:	mov    DWORD PTR [ebp-0x38],ecx
640212a7:	mov    DWORD PTR [ebp-0x3c],ecx
640212aa:	jmp    0x6402144d
640212af:	and    DWORD PTR [ebp-0x68],ecx
640212b2:	lea    esi,[ebp-0x28]
640212b5:	mov    DWORD PTR [ebp-0x58],0x5
640212bc:	mov    ecx,DWORD PTR [ebp-0x68]
640212bf:	mov    edx,DWORD PTR [ebp-0x58]
640212c2:	add    ecx,ecx
640212c4:	test   edx,edx
640212c6:	mov    DWORD PTR [ebp-0x64],edx
640212c9:	jle    0x64021320
640212cb:	lea    ecx,[ebp+ecx*1-0x3c]
640212cf:	add    ebx,0x8
640212d2:	mov    DWORD PTR [ebp-0x5c],ecx
640212d5:	mov    DWORD PTR [ebp-0x60],ebx
640212d8:	mov    ecx,DWORD PTR [ebp-0x60]
640212db:	mov    edx,DWORD PTR [ebp-0x5c]
640212de:	movzx  edx,WORD PTR [edx]
640212e1:	movzx  ecx,WORD PTR [ecx]
640212e4:	and    DWORD PTR [ebp-0x78],0x0
640212e8:	imul   ecx,edx
640212eb:	mov    edx,DWORD PTR [esi-0x4]
640212ee:	lea    ebx,[edx+ecx*1]
640212f1:	cmp    ebx,edx
640212f3:	jb     0x640212f9
640212f5:	cmp    ebx,ecx
640212f7:	jae    0x64021300
640212f9:	mov    DWORD PTR [ebp-0x78],0x1
64021300:	cmp    DWORD PTR [ebp-0x78],0x0
64021304:	mov    DWORD PTR [esi-0x4],ebx
64021307:	je     0x6402130c
64021309:	inc    WORD PTR [esi]
6402130c:	add    DWORD PTR [ebp-0x5c],0x2
64021310:	sub    DWORD PTR [ebp-0x60],0x2
64021314:	dec    DWORD PTR [ebp-0x64]
64021317:	cmp    DWORD PTR [ebp-0x64],0x0
6402131b:	jg     0x640212d8
6402131d:	mov    ebx,DWORD PTR [ebp-0x70]
64021320:	inc    esi
64021321:	inc    esi
64021322:	inc    DWORD PTR [ebp-0x68]
64021325:	dec    DWORD PTR [ebp-0x58]
64021328:	cmp    DWORD PTR [ebp-0x58],0x0
6402132c:	jg     0x640212bc
6402132e:	add    edi,0xc002
64021334:	test   di,di
64021337:	jle    0x64021374
64021339:	test   DWORD PTR [ebp-0x24],0x80000000
64021340:	jne    0x6402136f
64021342:	mov    esi,DWORD PTR [ebp-0x28]
64021345:	mov    ecx,DWORD PTR [ebp-0x2c]
64021348:	shl    DWORD PTR [ebp-0x2c],1
6402134b:	shr    ecx,0x1f
6402134e:	mov    edx,esi
64021350:	add    esi,esi
64021352:	or     esi,ecx
64021354:	mov    ecx,DWORD PTR [ebp-0x24]
64021357:	shr    edx,0x1f
6402135a:	add    ecx,ecx
6402135c:	or     ecx,edx
6402135e:	add    edi,0xffff
64021364:	test   di,di
64021367:	mov    DWORD PTR [ebp-0x28],esi
6402136a:	mov    DWORD PTR [ebp-0x24],ecx
6402136d:	jg     0x64021339
6402136f:	test   di,di
64021372:	jg     0x640213c1
64021374:	add    edi,0xffff
6402137a:	test   di,di
6402137d:	jge    0x640213c1
6402137f:	mov    ecx,edi
64021381:	neg    ecx
64021383:	movzx  esi,cx
64021386:	add    edi,esi
64021388:	test   BYTE PTR [ebp-0x2c],0x1
6402138c:	je     0x64021391
6402138e:	inc    DWORD PTR [ebp-0x50]
64021391:	mov    ecx,DWORD PTR [ebp-0x24]
64021394:	mov    ebx,DWORD PTR [ebp-0x28]
64021397:	mov    edx,DWORD PTR [ebp-0x28]
6402139a:	shr    DWORD PTR [ebp-0x24],1
6402139d:	shl    ecx,0x1f
640213a0:	shr    ebx,1
640213a2:	or     ebx,ecx
640213a4:	mov    ecx,DWORD PTR [ebp-0x2c]
640213a7:	shl    edx,0x1f
640213aa:	shr    ecx,1
640213ac:	or     ecx,edx
640213ae:	dec    esi
640213af:	mov    DWORD PTR [ebp-0x28],ebx
640213b2:	mov    DWORD PTR [ebp-0x2c],ecx
640213b5:	jne    0x64021388
640213b7:	cmp    DWORD PTR [ebp-0x50],esi
640213ba:	je     0x640213c1
640213bc:	or     WORD PTR [ebp-0x2c],0x1
640213c1:	cmp    WORD PTR [ebp-0x2c],0x8000
640213c7:	ja     0x640213da
640213c9:	mov    ecx,DWORD PTR [ebp-0x2c]
640213cc:	and    ecx,0x1ffff
640213d2:	cmp    ecx,0x18000
640213d8:	jne    0x6402140d
640213da:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
640213de:	jne    0x6402140a
640213e0:	and    DWORD PTR [ebp-0x2a],0x0
640213e4:	cmp    DWORD PTR [ebp-0x26],0xffffffff
640213e8:	jne    0x64021405
640213ea:	and    DWORD PTR [ebp-0x26],0x0
640213ee:	cmp    WORD PTR [ebp-0x22],0xffff
640213f4:	jne    0x640213ff
640213f6:	mov    WORD PTR [ebp-0x22],0x8000
640213fc:	inc    edi
640213fd:	jmp    0x6402140d
640213ff:	inc    WORD PTR [ebp-0x22]
64021403:	jmp    0x6402140d
64021405:	inc    DWORD PTR [ebp-0x26]
64021408:	jmp    0x6402140d
6402140a:	inc    DWORD PTR [ebp-0x2a]
6402140d:	cmp    di,0x7fff
64021412:	mov    esi,DWORD PTR [ebp-0x4c]
64021415:	jae    0x64021433
64021417:	mov    cx,WORD PTR [ebp-0x2a]
6402141b:	mov    WORD PTR [ebp-0x3c],cx
6402141f:	mov    ecx,DWORD PTR [ebp-0x28]
64021422:	mov    DWORD PTR [ebp-0x3a],ecx
64021425:	mov    ecx,DWORD PTR [ebp-0x24]
64021428:	or     edi,eax
6402142a:	mov    DWORD PTR [ebp-0x36],ecx
6402142d:	mov    WORD PTR [ebp-0x32],di
64021431:	jmp    0x6402144d
64021433:	neg    ax
64021436:	sbb    eax,eax
64021438:	and    DWORD PTR [ebp-0x38],0x0
6402143c:	and    eax,0x80000000
64021441:	add    eax,0x7fff8000
64021446:	and    DWORD PTR [ebp-0x3c],0x0
6402144a:	mov    DWORD PTR [ebp-0x34],eax
6402144d:	cmp    DWORD PTR [ebp-0x54],0x0
64021451:	jne    0x640211c4
64021457:	mov    eax,DWORD PTR [ebp-0x34]
6402145a:	movzx  ecx,WORD PTR [ebp-0x3c]
6402145e:	mov    esi,DWORD PTR [ebp-0x3a]
64021461:	mov    edx,DWORD PTR [ebp-0x36]
64021464:	shr    eax,0x10
64021467:	jmp    0x64021498
64021469:	mov    DWORD PTR [ebp-0x6c],0x4
64021470:	jmp    0x64021490
64021472:	xor    esi,esi
64021474:	mov    eax,0x7fff
64021479:	mov    edx,0x80000000
6402147e:	xor    ecx,ecx
64021480:	mov    DWORD PTR [ebp-0x6c],0x2
64021487:	jmp    0x64021498
64021489:	mov    DWORD PTR [ebp-0x6c],0x1
64021490:	xor    ecx,ecx
64021492:	xor    eax,eax
64021494:	xor    edx,edx
64021496:	xor    esi,esi
64021498:	mov    edi,DWORD PTR [ebp-0x7c]
6402149b:	or     eax,DWORD PTR [ebp-0x74]
6402149e:	mov    WORD PTR [edi],cx
640214a1:	mov    WORD PTR [edi+0xa],ax
640214a5:	mov    eax,DWORD PTR [ebp-0x6c]
640214a8:	mov    DWORD PTR [edi+0x2],esi
640214ab:	mov    DWORD PTR [edi+0x6],edx
640214ae:	mov    ecx,DWORD PTR [ebp-0x4]
640214b1:	pop    edi
640214b2:	pop    esi
640214b3:	xor    ecx,ebp
640214b5:	pop    ebx
640214b6:	call   0x64012e6c
640214bb:	leave  
640214bc:	ret    
640214bd:	lds    ecx,FWORD PTR [esi]
640214bf:	add    ah,BYTE PTR [ecx+ebx*1+0xf]
640214c3:	add    ah,BYTE PTR [edi+ebp*2+0xf]
640214c7:	add    ah,BYTE PTR [edx+eiz*4+0xf]
640214cb:	add    ah,BYTE PTR [edi+eiz*8+0xf]
640214cf:	add    ah,BYTE PTR [edi+ebx*1+0x10]
640214d3:	add    ah,BYTE PTR [ebx+esi*1+0x10]
640214d7:	add    ah,BYTE PTR [esi+ecx*4+0x10]
640214db:	add    ah,BYTE PTR [ecx+edi*2+0x10]
640214df:	add    ah,BYTE PTR [eax+edi*8+0x10]
640214e3:	add    ah,BYTE PTR [ebp+ebp*8+0x10]
640214e7:	add    ah,BYTE PTR [esp+ebx*4+0x10]
640214eb:	add    ah,BYTE PTR [ebp+edx*2-0x75]
640214ef:	in     al,dx
640214f0:	sub    esp,0x74
640214f3:	mov    eax,ds:0x6402d09c
640214f8:	xor    eax,ebp
640214fa:	mov    DWORD PTR [ebp-0x4],eax
640214fd:	push   ebx
640214fe:	mov    ebx,DWORD PTR [ebp+0x1c]
64021501:	push   esi
64021502:	push   edi
64021503:	lea    esi,[ebp+0x8]
64021506:	lea    edi,[ebp-0x10]
64021509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402150a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402150b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6402150d:	mov    edx,DWORD PTR [ebp-0x8]
64021510:	mov    ecx,edx
64021512:	mov    eax,0x8000
64021517:	and    ecx,eax
64021519:	and    edx,0x7fff
6402151f:	test   cx,cx
64021522:	mov    DWORD PTR [ebp-0x60],ebx
64021525:	mov    BYTE PTR [ebp-0x30],0xcc
64021529:	mov    BYTE PTR [ebp-0x2f],0xcc
6402152d:	mov    BYTE PTR [ebp-0x2e],0xcc
64021531:	mov    BYTE PTR [ebp-0x2d],0xcc
64021535:	mov    BYTE PTR [ebp-0x2c],0xcc
64021539:	mov    BYTE PTR [ebp-0x2b],0xcc
6402153d:	mov    BYTE PTR [ebp-0x2a],0xcc
64021541:	mov    BYTE PTR [ebp-0x29],0xcc
64021545:	mov    BYTE PTR [ebp-0x28],0xcc
64021549:	mov    BYTE PTR [ebp-0x27],0xcc
6402154d:	mov    BYTE PTR [ebp-0x26],0xfb
64021551:	mov    BYTE PTR [ebp-0x25],0x3f
64021555:	mov    DWORD PTR [ebp-0x74],0x1
6402155c:	mov    DWORD PTR [ebp-0x6c],ecx
6402155f:	je     0x64021567
64021561:	mov    BYTE PTR [ebx+0x2],0x2d
64021565:	jmp    0x6402156b
64021567:	mov    BYTE PTR [ebx+0x2],0x20
6402156b:	test   dx,dx
6402156e:	mov    esi,DWORD PTR [ebp-0xc]
64021571:	mov    edi,DWORD PTR [ebp-0x10]
64021574:	jne    0x640215a4
64021576:	test   esi,esi
64021578:	jne    0x640215a4
6402157a:	test   edi,edi
6402157c:	jne    0x640215a4
6402157e:	and    WORD PTR [ebx],di
64021581:	cmp    cx,ax
64021584:	setne  al
64021587:	dec    al
64021589:	and    al,0xd
6402158b:	add    al,0x20
6402158d:	mov    BYTE PTR [ebx+0x2],al
64021590:	mov    BYTE PTR [ebx+0x3],0x1
64021594:	mov    BYTE PTR [ebx+0x4],0x30
64021598:	mov    BYTE PTR [ebx+0x5],0x0
6402159c:	xor    eax,eax
6402159e:	inc    eax
6402159f:	jmp    0x64021d6b
640215a4:	cmp    dx,0x7fff
640215a9:	jne    0x6402164d
640215af:	mov    eax,0x80000000
640215b4:	cmp    esi,eax
640215b6:	mov    WORD PTR [ebx],0x1
640215bb:	jne    0x640215c1
640215bd:	test   edi,edi
640215bf:	je     0x640215d0
640215c1:	test   esi,0x40000000
640215c7:	jne    0x640215d0
640215c9:	push   0x64027640
640215ce:	jmp    0x64021621
640215d0:	test   cx,cx
640215d3:	je     0x640215e8
640215d5:	cmp    esi,0xc0000000
640215db:	jne    0x640215e8
640215dd:	test   edi,edi
640215df:	jne    0x6402161c
640215e1:	push   0x64027638
640215e6:	jmp    0x640215f5
640215e8:	cmp    esi,eax
640215ea:	jne    0x6402161c
640215ec:	test   edi,edi
640215ee:	jne    0x6402161c
640215f0:	push   0x64027630
640215f5:	lea    eax,[ebx+0x4]
640215f8:	push   0x16
640215fa:	push   eax
640215fb:	call   0x64014828
64021600:	add    esp,0xc
64021603:	xor    esi,esi
64021605:	test   eax,eax
64021607:	je     0x64021616
64021609:	push   esi
6402160a:	push   esi
6402160b:	push   esi
6402160c:	push   esi
6402160d:	push   esi
6402160e:	call   0x640128a8
64021613:	add    esp,0x14
64021616:	mov    BYTE PTR [ebx+0x3],0x5
6402161a:	jmp    0x64021646
6402161c:	push   0x64027628
64021621:	lea    eax,[ebx+0x4]
64021624:	push   0x16
64021626:	push   eax
64021627:	call   0x64014828
6402162c:	add    esp,0xc
6402162f:	xor    esi,esi
64021631:	test   eax,eax
64021633:	je     0x64021642
64021635:	push   esi
64021636:	push   esi
64021637:	push   esi
64021638:	push   esi
64021639:	push   esi
6402163a:	call   0x640128a8
6402163f:	add    esp,0x14
64021642:	mov    BYTE PTR [ebx+0x3],0x6
64021646:	xor    eax,eax
64021648:	jmp    0x64021d6b
6402164d:	movzx  ecx,dx
64021650:	mov    ebx,ecx
64021652:	imul   ecx,ecx,0x4d10
64021658:	shr    ebx,0x8
6402165b:	mov    eax,esi
6402165d:	shr    eax,0x18
64021660:	lea    eax,[ebx+eax*2]
64021663:	imul   eax,eax,0x4d
64021666:	lea    eax,[eax+ecx*1-0x134312f4]
6402166d:	sar    eax,0x10
64021670:	movzx  ecx,ax
64021673:	movsx  ebx,cx
64021676:	mov    DWORD PTR [ebp-0x4c],ecx
64021679:	xor    eax,eax
6402167b:	mov    ecx,0x6402e0a0
64021680:	neg    ebx
64021682:	sub    ecx,0x60
64021685:	cmp    ebx,eax
64021687:	mov    WORD PTR [ebp-0x16],dx
6402168b:	mov    DWORD PTR [ebp-0x1a],esi
6402168e:	mov    DWORD PTR [ebp-0x1e],edi
64021691:	mov    WORD PTR [ebp-0x20],ax
64021695:	mov    DWORD PTR [ebp-0x68],ecx
64021698:	je     0x6402194c
6402169e:	jge    0x640216ad
640216a0:	mov    ecx,0x6402e200
640216a5:	neg    ebx
640216a7:	sub    ecx,0x60
640216aa:	mov    DWORD PTR [ebp-0x68],ecx
640216ad:	cmp    ebx,eax
640216af:	je     0x6402194c
640216b5:	add    DWORD PTR [ebp-0x68],0x54
640216b9:	mov    ecx,ebx
640216bb:	and    ecx,0x7
640216be:	sar    ebx,0x3
640216c1:	test   ecx,ecx
640216c3:	je     0x64021942
640216c9:	imul   ecx,ecx,0xc
640216cc:	add    ecx,DWORD PTR [ebp-0x68]
640216cf:	cmp    WORD PTR [ecx],0x8000
640216d4:	mov    DWORD PTR [ebp-0x64],ecx
640216d7:	jb     0x640216ec
640216d9:	mov    esi,ecx
640216db:	lea    edi,[ebp-0x3c]
640216de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640216df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640216e0:	lea    eax,[ebp-0x3c]
640216e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640216e4:	dec    DWORD PTR [ebp-0x3a]
640216e7:	mov    DWORD PTR [ebp-0x64],eax
640216ea:	mov    ecx,eax
640216ec:	movzx  edi,WORD PTR [ecx+0xa]
640216f0:	mov    edx,DWORD PTR [ebp-0x16]
640216f3:	xor    eax,eax
640216f5:	mov    ecx,edi
640216f7:	mov    esi,0x7fff
640216fc:	xor    ecx,edx
640216fe:	and    edx,esi
64021700:	and    edi,esi
64021702:	mov    DWORD PTR [ebp-0x48],eax
64021705:	mov    DWORD PTR [ebp-0x10],eax
64021708:	mov    DWORD PTR [ebp-0xc],eax
6402170b:	mov    DWORD PTR [ebp-0x8],eax
6402170e:	and    ecx,0x8000
64021714:	cmp    dx,si
64021717:	lea    eax,[edi+edx*1]
6402171a:	movzx  eax,ax
6402171d:	jae    0x64021926
64021723:	cmp    di,si
64021726:	jae    0x64021926
6402172c:	cmp    ax,0xbffd
64021730:	ja     0x64021926
64021736:	cmp    ax,0x3fbf
6402173a:	ja     0x6402174c
6402173c:	xor    eax,eax
6402173e:	mov    DWORD PTR [ebp-0x18],eax
64021741:	mov    DWORD PTR [ebp-0x1c],eax
64021744:	mov    DWORD PTR [ebp-0x20],eax
64021747:	jmp    0x64021942
6402174c:	xor    esi,esi
6402174e:	cmp    dx,si
64021751:	jne    0x64021770
64021753:	inc    eax
64021754:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402175b:	jne    0x64021770
6402175d:	cmp    DWORD PTR [ebp-0x1c],esi
64021760:	jne    0x64021770
64021762:	cmp    DWORD PTR [ebp-0x20],esi
64021765:	jne    0x64021770
64021767:	mov    WORD PTR [ebp-0x16],si
6402176b:	jmp    0x64021942
64021770:	cmp    di,si
64021773:	jne    0x64021799
64021775:	mov    edx,DWORD PTR [ebp-0x64]
64021778:	inc    eax
64021779:	test   DWORD PTR [edx+0x8],0x7fffffff
64021780:	jne    0x64021799
64021782:	cmp    DWORD PTR [edx+0x4],esi
64021785:	jne    0x64021799
64021787:	cmp    DWORD PTR [edx],esi
64021789:	jne    0x64021799
6402178b:	mov    DWORD PTR [ebp-0x18],esi
6402178e:	mov    DWORD PTR [ebp-0x1c],esi
64021791:	mov    DWORD PTR [ebp-0x20],esi
64021794:	jmp    0x64021942
64021799:	lea    edi,[ebp-0xc]
6402179c:	mov    DWORD PTR [ebp-0x5c],esi
6402179f:	mov    DWORD PTR [ebp-0x44],edi
640217a2:	mov    DWORD PTR [ebp-0x40],0x5
640217a9:	mov    edx,DWORD PTR [ebp-0x5c]
640217ac:	mov    esi,DWORD PTR [ebp-0x40]
640217af:	add    edx,edx
640217b1:	test   esi,esi
640217b3:	mov    DWORD PTR [ebp-0x50],esi
640217b6:	jle    0x64021810
640217b8:	lea    edx,[ebp+edx*1-0x20]
640217bc:	mov    DWORD PTR [ebp-0x58],edx
640217bf:	mov    edx,DWORD PTR [ebp-0x64]
640217c2:	add    edx,0x8
640217c5:	mov    DWORD PTR [ebp-0x54],edx
640217c8:	mov    edx,DWORD PTR [ebp-0x58]
640217cb:	mov    esi,DWORD PTR [ebp-0x54]
640217ce:	movzx  esi,WORD PTR [esi]
640217d1:	movzx  edx,WORD PTR [edx]
640217d4:	mov    edi,DWORD PTR [edi-0x4]
640217d7:	imul   edx,esi
640217da:	and    DWORD PTR [ebp-0x70],0x0
640217de:	lea    esi,[edi+edx*1]
640217e1:	cmp    esi,edi
640217e3:	jb     0x640217e9
640217e5:	cmp    esi,edx
640217e7:	jae    0x640217f0
640217e9:	mov    DWORD PTR [ebp-0x70],0x1
640217f0:	cmp    DWORD PTR [ebp-0x70],0x0
640217f4:	mov    edi,DWORD PTR [ebp-0x44]
640217f7:	mov    DWORD PTR [edi-0x4],esi
640217fa:	je     0x640217ff
640217fc:	inc    WORD PTR [edi]
640217ff:	add    DWORD PTR [ebp-0x58],0x2
64021803:	sub    DWORD PTR [ebp-0x54],0x2
64021807:	dec    DWORD PTR [ebp-0x50]
6402180a:	cmp    DWORD PTR [ebp-0x50],0x0
6402180e:	jg     0x640217c8
64021810:	inc    edi
64021811:	inc    edi
64021812:	inc    DWORD PTR [ebp-0x5c]
64021815:	dec    DWORD PTR [ebp-0x40]
64021818:	cmp    DWORD PTR [ebp-0x40],0x0
6402181c:	mov    DWORD PTR [ebp-0x44],edi
6402181f:	jg     0x640217a9
64021821:	add    eax,0xc002
64021826:	test   ax,ax
64021829:	jle    0x64021866
6402182b:	test   DWORD PTR [ebp-0x8],0x80000000
64021832:	jne    0x64021861
64021834:	mov    edx,DWORD PTR [ebp-0x10]
64021837:	mov    edi,DWORD PTR [ebp-0xc]
6402183a:	mov    esi,DWORD PTR [ebp-0xc]
6402183d:	shl    DWORD PTR [ebp-0x10],1
64021840:	shr    edx,0x1f
64021843:	add    edi,edi
64021845:	or     edi,edx
64021847:	mov    edx,DWORD PTR [ebp-0x8]
6402184a:	shr    esi,0x1f
6402184d:	add    edx,edx
6402184f:	or     edx,esi
64021851:	add    eax,0xffff
64021856:	test   ax,ax
64021859:	mov    DWORD PTR [ebp-0xc],edi
6402185c:	mov    DWORD PTR [ebp-0x8],edx
6402185f:	jg     0x6402182b
64021861:	test   ax,ax
64021864:	jg     0x640218b8
64021866:	add    eax,0xffff
6402186b:	test   ax,ax
6402186e:	jge    0x640218b8
64021870:	mov    edx,eax
64021872:	neg    edx
64021874:	movzx  edx,dx
64021877:	mov    DWORD PTR [ebp-0x44],edx
6402187a:	add    eax,edx
6402187c:	test   BYTE PTR [ebp-0x10],0x1
64021880:	je     0x64021885
64021882:	inc    DWORD PTR [ebp-0x48]
64021885:	mov    edx,DWORD PTR [ebp-0x8]
64021888:	mov    edi,DWORD PTR [ebp-0xc]
6402188b:	mov    esi,DWORD PTR [ebp-0xc]
6402188e:	shr    DWORD PTR [ebp-0x8],1
64021891:	shl    edx,0x1f
64021894:	shr    edi,1
64021896:	or     edi,edx
64021898:	mov    edx,DWORD PTR [ebp-0x10]
6402189b:	shl    esi,0x1f
6402189e:	shr    edx,1
640218a0:	or     edx,esi
640218a2:	dec    DWORD PTR [ebp-0x44]
640218a5:	mov    DWORD PTR [ebp-0xc],edi
640218a8:	mov    DWORD PTR [ebp-0x10],edx
640218ab:	jne    0x6402187c
640218ad:	cmp    DWORD PTR [ebp-0x48],0x0
640218b1:	je     0x640218b8
640218b3:	or     WORD PTR [ebp-0x10],0x1
640218b8:	cmp    WORD PTR [ebp-0x10],0x8000
640218be:	ja     0x640218d1
640218c0:	mov    edx,DWORD PTR [ebp-0x10]
640218c3:	and    edx,0x1ffff
640218c9:	cmp    edx,0x18000
640218cf:	jne    0x64021904
640218d1:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640218d5:	jne    0x64021901
640218d7:	and    DWORD PTR [ebp-0xe],0x0
640218db:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640218df:	jne    0x640218fc
640218e1:	and    DWORD PTR [ebp-0xa],0x0
640218e5:	cmp    WORD PTR [ebp-0x6],0xffff
640218eb:	jne    0x640218f6
640218ed:	mov    WORD PTR [ebp-0x6],0x8000
640218f3:	inc    eax
640218f4:	jmp    0x64021904
640218f6:	inc    WORD PTR [ebp-0x6]
640218fa:	jmp    0x64021904
640218fc:	inc    DWORD PTR [ebp-0xa]
640218ff:	jmp    0x64021904
64021901:	inc    DWORD PTR [ebp-0xe]
64021904:	cmp    ax,0x7fff
64021908:	jae    0x64021926
6402190a:	mov    dx,WORD PTR [ebp-0xe]
6402190e:	mov    WORD PTR [ebp-0x20],dx
64021912:	mov    edx,DWORD PTR [ebp-0xc]
64021915:	mov    DWORD PTR [ebp-0x1e],edx
64021918:	mov    edx,DWORD PTR [ebp-0x8]
6402191b:	or     eax,ecx
6402191d:	mov    DWORD PTR [ebp-0x1a],edx
64021920:	mov    WORD PTR [ebp-0x16],ax
64021924:	jmp    0x64021942
64021926:	neg    cx
64021929:	sbb    ecx,ecx
6402192b:	and    DWORD PTR [ebp-0x1c],0x0
6402192f:	and    ecx,0x80000000
64021935:	add    ecx,0x7fff8000
6402193b:	and    DWORD PTR [ebp-0x20],0x0
6402193f:	mov    DWORD PTR [ebp-0x18],ecx
64021942:	test   ebx,ebx
64021944:	jne    0x640216b5
6402194a:	xor    eax,eax
6402194c:	mov    ecx,DWORD PTR [ebp-0x18]
6402194f:	shr    ecx,0x10
64021952:	cmp    cx,0x3fff
64021957:	mov    ebx,0x7fff
6402195c:	jb     0x64021baa
64021962:	mov    esi,DWORD PTR [ebp-0x26]
64021965:	inc    DWORD PTR [ebp-0x4c]
64021968:	movzx  edx,cx
6402196b:	mov    ecx,esi
6402196d:	xor    ecx,edx
6402196f:	and    edx,ebx
64021971:	and    esi,ebx
64021973:	and    ecx,0x8000
64021979:	cmp    dx,bx
6402197c:	lea    edi,[esi+edx*1]
6402197f:	mov    DWORD PTR [ebp-0x58],eax
64021982:	mov    DWORD PTR [ebp-0x10],eax
64021985:	mov    DWORD PTR [ebp-0xc],eax
64021988:	mov    DWORD PTR [ebp-0x8],eax
6402198b:	movzx  edi,di
6402198e:	jae    0x64021b90
64021994:	cmp    si,bx
64021997:	jae    0x64021b90
6402199d:	cmp    di,0xbffd
640219a2:	ja     0x64021b90
640219a8:	cmp    di,0x3fbf
640219ad:	ja     0x640219b7
640219af:	mov    DWORD PTR [ebp-0x18],eax
640219b2:	jmp    0x64021ba4
640219b7:	cmp    dx,ax
640219ba:	jne    0x640219d9
640219bc:	inc    edi
640219bd:	test   DWORD PTR [ebp-0x18],0x7fffffff
640219c4:	jne    0x640219d9
640219c6:	cmp    DWORD PTR [ebp-0x1c],eax
640219c9:	jne    0x640219d9
640219cb:	cmp    DWORD PTR [ebp-0x20],eax
640219ce:	jne    0x640219d9
640219d0:	mov    WORD PTR [ebp-0x16],ax
640219d4:	jmp    0x64021baa
640219d9:	cmp    si,ax
640219dc:	jne    0x640219f2
640219de:	inc    edi
640219df:	test   DWORD PTR [ebp-0x28],0x7fffffff
640219e6:	jne    0x640219f2
640219e8:	cmp    DWORD PTR [ebp-0x2c],eax
640219eb:	jne    0x640219f2
640219ed:	cmp    DWORD PTR [ebp-0x30],eax
640219f0:	je     0x640219af
640219f2:	and    DWORD PTR [ebp-0x54],0x0
640219f6:	lea    eax,[ebp-0xc]
640219f9:	mov    DWORD PTR [ebp-0x40],0x5
64021a00:	mov    edx,DWORD PTR [ebp-0x54]
64021a03:	mov    esi,DWORD PTR [ebp-0x40]
64021a06:	add    edx,edx
64021a08:	test   esi,esi
64021a0a:	mov    DWORD PTR [ebp-0x50],esi
64021a0d:	jle    0x64021a61
64021a0f:	lea    esi,[ebp-0x28]
64021a12:	lea    edx,[ebp+edx*1-0x20]
64021a16:	mov    DWORD PTR [ebp-0x5c],esi
64021a19:	mov    DWORD PTR [ebp-0x48],edx
64021a1c:	mov    edx,DWORD PTR [ebp-0x5c]
64021a1f:	mov    esi,DWORD PTR [ebp-0x48]
64021a22:	movzx  esi,WORD PTR [esi]
64021a25:	movzx  edx,WORD PTR [edx]
64021a28:	and    DWORD PTR [ebp-0x44],0x0
64021a2c:	imul   edx,esi
64021a2f:	mov    esi,DWORD PTR [eax-0x4]
64021a32:	lea    ebx,[esi+edx*1]
64021a35:	cmp    ebx,esi
64021a37:	jb     0x64021a3d
64021a39:	cmp    ebx,edx
64021a3b:	jae    0x64021a44
64021a3d:	mov    DWORD PTR [ebp-0x44],0x1
64021a44:	cmp    DWORD PTR [ebp-0x44],0x0
64021a48:	mov    DWORD PTR [eax-0x4],ebx
64021a4b:	je     0x64021a50
64021a4d:	inc    WORD PTR [eax]
64021a50:	add    DWORD PTR [ebp-0x48],0x2
64021a54:	sub    DWORD PTR [ebp-0x5c],0x2
64021a58:	dec    DWORD PTR [ebp-0x50]
64021a5b:	cmp    DWORD PTR [ebp-0x50],0x0
64021a5f:	jg     0x64021a1c
64021a61:	inc    eax
64021a62:	inc    eax
64021a63:	inc    DWORD PTR [ebp-0x54]
64021a66:	dec    DWORD PTR [ebp-0x40]
64021a69:	cmp    DWORD PTR [ebp-0x40],0x0
64021a6d:	jg     0x64021a00
64021a6f:	add    edi,0xc002
64021a75:	xor    eax,eax
64021a77:	cmp    di,ax
64021a7a:	jle    0x64021ab8
64021a7c:	test   DWORD PTR [ebp-0x8],0x80000000
64021a83:	jne    0x64021ab3
64021a85:	mov    edx,DWORD PTR [ebp-0x10]
64021a88:	mov    ebx,DWORD PTR [ebp-0xc]
64021a8b:	mov    esi,DWORD PTR [ebp-0xc]
64021a8e:	shl    DWORD PTR [ebp-0x10],1
64021a91:	shr    edx,0x1f
64021a94:	add    ebx,ebx
64021a96:	or     ebx,edx
64021a98:	mov    edx,DWORD PTR [ebp-0x8]
64021a9b:	shr    esi,0x1f
64021a9e:	add    edx,edx
64021aa0:	or     edx,esi
64021aa2:	add    edi,0xffff
64021aa8:	cmp    di,ax
64021aab:	mov    DWORD PTR [ebp-0xc],ebx
64021aae:	mov    DWORD PTR [ebp-0x8],edx
64021ab1:	jg     0x64021a7c
64021ab3:	cmp    di,ax
64021ab6:	jg     0x64021b05
64021ab8:	add    edi,0xffff
64021abe:	cmp    di,ax
64021ac1:	jge    0x64021b05
64021ac3:	mov    eax,edi
64021ac5:	neg    eax
64021ac7:	movzx  eax,ax
64021aca:	add    edi,eax
64021acc:	test   BYTE PTR [ebp-0x10],0x1
64021ad0:	je     0x64021ad5
64021ad2:	inc    DWORD PTR [ebp-0x58]
64021ad5:	mov    edx,DWORD PTR [ebp-0x8]
64021ad8:	mov    ebx,DWORD PTR [ebp-0xc]
64021adb:	mov    esi,DWORD PTR [ebp-0xc]
64021ade:	shr    DWORD PTR [ebp-0x8],1
64021ae1:	shl    edx,0x1f
64021ae4:	shr    ebx,1
64021ae6:	or     ebx,edx
64021ae8:	mov    edx,DWORD PTR [ebp-0x10]
64021aeb:	shl    esi,0x1f
64021aee:	shr    edx,1
64021af0:	or     edx,esi
64021af2:	dec    eax
64021af3:	mov    DWORD PTR [ebp-0xc],ebx
64021af6:	mov    DWORD PTR [ebp-0x10],edx
64021af9:	jne    0x64021acc
64021afb:	cmp    DWORD PTR [ebp-0x58],eax
64021afe:	je     0x64021b05
64021b00:	or     WORD PTR [ebp-0x10],0x1
64021b05:	cmp    WORD PTR [ebp-0x10],0x8000
64021b0b:	ja     0x64021b1e
64021b0d:	mov    edx,DWORD PTR [ebp-0x10]
64021b10:	and    edx,0x1ffff
64021b16:	cmp    edx,0x18000
64021b1c:	jne    0x64021b4f
64021b1e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64021b22:	jne    0x64021b4c
64021b24:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64021b28:	mov    DWORD PTR [ebp-0xe],eax
64021b2b:	jne    0x64021b47
64021b2d:	cmp    WORD PTR [ebp-0x6],0xffff
64021b33:	mov    DWORD PTR [ebp-0xa],eax
64021b36:	jne    0x64021b41
64021b38:	mov    WORD PTR [ebp-0x6],0x8000
64021b3e:	inc    edi
64021b3f:	jmp    0x64021b4f
64021b41:	inc    WORD PTR [ebp-0x6]
64021b45:	jmp    0x64021b4f
64021b47:	inc    DWORD PTR [ebp-0xa]
64021b4a:	jmp    0x64021b4f
64021b4c:	inc    DWORD PTR [ebp-0xe]
64021b4f:	cmp    di,0x7fff
64021b54:	jb     0x64021b74
64021b56:	neg    cx
64021b59:	mov    DWORD PTR [ebp-0x1c],eax
64021b5c:	mov    DWORD PTR [ebp-0x20],eax
64021b5f:	sbb    ecx,ecx
64021b61:	and    ecx,0x80000000
64021b67:	add    ecx,0x7fff8000
64021b6d:	mov    DWORD PTR [ebp-0x18],ecx
64021b70:	xor    eax,eax
64021b72:	jmp    0x64021baa
64021b74:	mov    ax,WORD PTR [ebp-0xe]
64021b78:	mov    WORD PTR [ebp-0x20],ax
64021b7c:	mov    eax,DWORD PTR [ebp-0xc]
64021b7f:	mov    DWORD PTR [ebp-0x1e],eax
64021b82:	mov    eax,DWORD PTR [ebp-0x8]
64021b85:	or     edi,ecx
64021b87:	mov    DWORD PTR [ebp-0x1a],eax
64021b8a:	mov    WORD PTR [ebp-0x16],di
64021b8e:	jmp    0x64021b70
64021b90:	neg    cx
64021b93:	sbb    ecx,ecx
64021b95:	and    ecx,0x80000000
64021b9b:	add    ecx,0x7fff8000
64021ba1:	mov    DWORD PTR [ebp-0x18],ecx
64021ba4:	mov    DWORD PTR [ebp-0x1c],eax
64021ba7:	mov    DWORD PTR [ebp-0x20],eax
64021baa:	test   BYTE PTR [ebp+0x18],0x1
64021bae:	mov    edx,DWORD PTR [ebp-0x60]
64021bb1:	mov    ecx,DWORD PTR [ebp-0x4c]
64021bb4:	mov    WORD PTR [edx],cx
64021bb7:	je     0x64021beb
64021bb9:	movsx  ecx,cx
64021bbc:	add    DWORD PTR [ebp+0x14],ecx
64021bbf:	cmp    DWORD PTR [ebp+0x14],eax
64021bc2:	jg     0x64021beb
64021bc4:	and    WORD PTR [edx],0x0
64021bc8:	cmp    WORD PTR [ebp-0x6c],0x8000
64021bce:	mov    BYTE PTR [edx+0x3],0x1
64021bd2:	setne  al
64021bd5:	dec    al
64021bd7:	and    al,0xd
64021bd9:	add    al,0x20
64021bdb:	mov    BYTE PTR [edx+0x2],al
64021bde:	mov    BYTE PTR [edx+0x4],0x30
64021be2:	mov    BYTE PTR [edx+0x5],0x0
64021be6:	jmp    0x6402159c
64021beb:	push   0x15
64021bed:	pop    ecx
64021bee:	cmp    DWORD PTR [ebp+0x14],ecx
64021bf1:	jle    0x64021bf6
64021bf3:	mov    DWORD PTR [ebp+0x14],ecx
64021bf6:	mov    esi,DWORD PTR [ebp-0x18]
64021bf9:	shr    esi,0x10
64021bfc:	push   0x8
64021bfe:	sub    esi,0x3ffe
64021c04:	mov    WORD PTR [ebp-0x16],ax
64021c08:	pop    ebx
64021c09:	mov    eax,DWORD PTR [ebp-0x20]
64021c0c:	mov    edi,DWORD PTR [ebp-0x1c]
64021c0f:	mov    ecx,DWORD PTR [ebp-0x1c]
64021c12:	shl    DWORD PTR [ebp-0x20],1
64021c15:	shr    eax,0x1f
64021c18:	add    edi,edi
64021c1a:	or     edi,eax
64021c1c:	mov    eax,DWORD PTR [ebp-0x18]
64021c1f:	shr    ecx,0x1f
64021c22:	add    eax,eax
64021c24:	or     eax,ecx
64021c26:	dec    ebx
64021c27:	mov    DWORD PTR [ebp-0x1c],edi
64021c2a:	mov    DWORD PTR [ebp-0x18],eax
64021c2d:	jne    0x64021c09
64021c2f:	test   esi,esi
64021c31:	jge    0x64021c65
64021c33:	neg    esi
64021c35:	and    esi,0xff
64021c3b:	jle    0x64021c65
64021c3d:	mov    eax,DWORD PTR [ebp-0x18]
64021c40:	mov    edi,DWORD PTR [ebp-0x1c]
64021c43:	mov    ecx,DWORD PTR [ebp-0x1c]
64021c46:	shr    DWORD PTR [ebp-0x18],1
64021c49:	shl    eax,0x1f
64021c4c:	shr    edi,1
64021c4e:	or     edi,eax
64021c50:	mov    eax,DWORD PTR [ebp-0x20]
64021c53:	shl    ecx,0x1f
64021c56:	shr    eax,1
64021c58:	or     eax,ecx
64021c5a:	dec    esi
64021c5b:	test   esi,esi
64021c5d:	mov    DWORD PTR [ebp-0x1c],edi
64021c60:	mov    DWORD PTR [ebp-0x20],eax
64021c63:	jg     0x64021c3d
64021c65:	mov    eax,DWORD PTR [ebp+0x14]
64021c68:	inc    eax
64021c69:	test   eax,eax
64021c6b:	lea    ebx,[edx+0x4]
64021c6e:	mov    DWORD PTR [ebp-0x40],ebx
64021c71:	mov    DWORD PTR [ebp-0x4c],eax
64021c74:	jle    0x64021d2f
64021c7a:	mov    edx,DWORD PTR [ebp-0x20]
64021c7d:	mov    eax,DWORD PTR [ebp-0x1c]
64021c80:	lea    esi,[ebp-0x20]
64021c83:	lea    edi,[ebp-0x3c]
64021c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c89:	shl    DWORD PTR [ebp-0x20],1
64021c8c:	mov    edi,DWORD PTR [ebp-0x20]
64021c8f:	shl    DWORD PTR [ebp-0x20],1
64021c92:	shr    edx,0x1f
64021c95:	lea    ecx,[eax+eax*1]
64021c98:	or     ecx,edx
64021c9a:	mov    edx,DWORD PTR [ebp-0x18]
64021c9d:	mov    esi,eax
64021c9f:	shr    esi,0x1f
64021ca2:	add    edx,edx
64021ca4:	or     edx,esi
64021ca6:	mov    eax,ecx
64021ca8:	lea    esi,[ecx+ecx*1]
64021cab:	shr    eax,0x1f
64021cae:	lea    ecx,[edx+edx*1]
64021cb1:	mov    edx,DWORD PTR [ebp-0x3c]
64021cb4:	shr    edi,0x1f
64021cb7:	or     ecx,eax
64021cb9:	mov    eax,DWORD PTR [ebp-0x20]
64021cbc:	or     esi,edi
64021cbe:	lea    edi,[edx+eax*1]
64021cc1:	cmp    edi,eax
64021cc3:	jb     0x64021cc9
64021cc5:	cmp    edi,edx
64021cc7:	jae    0x64021ce1
64021cc9:	lea    eax,[esi+0x1]
64021ccc:	xor    edx,edx
64021cce:	cmp    eax,esi
64021cd0:	jb     0x64021cd7
64021cd2:	cmp    eax,0x1
64021cd5:	jae    0x64021cda
64021cd7:	xor    edx,edx
64021cd9:	inc    edx
64021cda:	test   edx,edx
64021cdc:	mov    esi,eax
64021cde:	je     0x64021ce1
64021ce0:	inc    ecx
64021ce1:	mov    eax,DWORD PTR [ebp-0x38]
64021ce4:	lea    edx,[eax+esi*1]
64021ce7:	cmp    edx,esi
64021ce9:	mov    DWORD PTR [ebp-0x44],edx
64021cec:	jb     0x64021cf2
64021cee:	cmp    edx,eax
64021cf0:	jae    0x64021cf3
64021cf2:	inc    ecx
64021cf3:	add    ecx,DWORD PTR [ebp-0x34]
64021cf6:	shr    edx,0x1f
64021cf9:	add    ecx,ecx
64021cfb:	or     ecx,edx
64021cfd:	lea    esi,[edi+edi*1]
64021d00:	mov    DWORD PTR [ebp-0x20],esi
64021d03:	mov    esi,DWORD PTR [ebp-0x44]
64021d06:	mov    DWORD PTR [ebp-0x18],ecx
64021d09:	shr    ecx,0x18
64021d0c:	add    esi,esi
64021d0e:	add    cl,0x30
64021d11:	mov    eax,edi
64021d13:	shr    eax,0x1f
64021d16:	or     esi,eax
64021d18:	mov    BYTE PTR [ebx],cl
64021d1a:	inc    ebx
64021d1b:	dec    DWORD PTR [ebp-0x4c]
64021d1e:	cmp    DWORD PTR [ebp-0x4c],0x0
64021d22:	mov    DWORD PTR [ebp-0x1c],esi
64021d25:	mov    BYTE PTR [ebp-0x15],0x0
64021d29:	jg     0x64021c7a
64021d2f:	dec    ebx
64021d30:	mov    al,BYTE PTR [ebx]
64021d32:	dec    ebx
64021d33:	cmp    al,0x35
64021d35:	jge    0x64021d45
64021d37:	mov    ecx,DWORD PTR [ebp-0x40]
64021d3a:	jmp    0x64021d80
64021d3c:	cmp    BYTE PTR [ebx],0x39
64021d3f:	jne    0x64021d4a
64021d41:	mov    BYTE PTR [ebx],0x30
64021d44:	dec    ebx
64021d45:	cmp    ebx,DWORD PTR [ebp-0x40]
64021d48:	jae    0x64021d3c
64021d4a:	cmp    ebx,DWORD PTR [ebp-0x40]
64021d4d:	mov    eax,DWORD PTR [ebp-0x60]
64021d50:	jae    0x64021d56
64021d52:	inc    ebx
64021d53:	inc    WORD PTR [eax]
64021d56:	inc    BYTE PTR [ebx]
64021d58:	sub    bl,al
64021d5a:	sub    bl,0x3
64021d5d:	movsx  ecx,bl
64021d60:	mov    BYTE PTR [eax+0x3],bl
64021d63:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
64021d68:	mov    eax,DWORD PTR [ebp-0x74]
64021d6b:	mov    ecx,DWORD PTR [ebp-0x4]
64021d6e:	pop    edi
64021d6f:	pop    esi
64021d70:	xor    ecx,ebp
64021d72:	pop    ebx
64021d73:	call   0x64012e6c
64021d78:	leave  
64021d79:	ret    
64021d7a:	cmp    BYTE PTR [ebx],0x30
64021d7d:	jne    0x64021d84
64021d7f:	dec    ebx
64021d80:	cmp    ebx,ecx
64021d82:	jae    0x64021d7a
64021d84:	cmp    ebx,ecx
64021d86:	mov    eax,DWORD PTR [ebp-0x60]
64021d89:	jae    0x64021d58
64021d8b:	and    WORD PTR [eax],0x0
64021d8f:	cmp    WORD PTR [ebp-0x6c],0x8000
64021d95:	mov    BYTE PTR [eax+0x3],0x1
64021d99:	setne  dl
64021d9c:	dec    dl
64021d9e:	and    dl,0xd
64021da1:	add    dl,0x20
64021da4:	mov    BYTE PTR [eax+0x2],dl
64021da7:	mov    BYTE PTR [ecx],0x30
64021daa:	mov    BYTE PTR [eax+0x5],0x0
64021dae:	jmp    0x6402159c
64021db3:	xor    eax,eax
64021db5:	test   bl,0x10
64021db8:	je     0x64021dbb
64021dba:	inc    eax
64021dbb:	test   bl,0x8
64021dbe:	je     0x64021dc3
64021dc0:	or     eax,0x4
64021dc3:	test   bl,0x4
64021dc6:	je     0x64021dcb
64021dc8:	or     eax,0x8
64021dcb:	test   bl,0x2
64021dce:	je     0x64021dd3
64021dd0:	or     eax,0x10
64021dd3:	test   bl,0x1
64021dd6:	je     0x64021ddb
64021dd8:	or     eax,0x20
64021ddb:	test   ebx,0x80000
64021de1:	je     0x64021de6
64021de3:	or     eax,0x2
64021de6:	mov    ecx,ebx
64021de8:	mov    edx,0x300
64021ded:	and    ecx,edx
64021def:	push   esi
64021df0:	mov    esi,0x200
64021df5:	je     0x64021e1a
64021df7:	cmp    ecx,0x100
64021dfd:	je     0x64021e15
64021dff:	cmp    ecx,esi
64021e01:	je     0x64021e0e
64021e03:	cmp    ecx,edx
64021e05:	jne    0x64021e1a
64021e07:	or     eax,0xc00
64021e0c:	jmp    0x64021e1a
64021e0e:	or     eax,0x800
64021e13:	jmp    0x64021e1a
64021e15:	or     eax,0x400
64021e1a:	mov    ecx,ebx
64021e1c:	and    ecx,0x30000
64021e22:	je     0x64021e30
64021e24:	cmp    ecx,0x10000
64021e2a:	jne    0x64021e32
64021e2c:	or     eax,esi
64021e2e:	jmp    0x64021e32
64021e30:	or     eax,edx
64021e32:	test   ebx,0x40000
64021e38:	pop    esi
64021e39:	je     0x64021e40
64021e3b:	or     eax,0x1000
64021e40:	ret    
64021e41:	xor    eax,eax
64021e43:	test   dl,0x10
64021e46:	je     0x64021e4d
64021e48:	mov    eax,0x80
64021e4d:	test   dl,0x8
64021e50:	push   ebx
64021e51:	push   esi
64021e52:	push   edi
64021e53:	mov    ebx,0x200
64021e58:	je     0x64021e5c
64021e5a:	or     eax,ebx
64021e5c:	test   dl,0x4
64021e5f:	je     0x64021e66
64021e61:	or     eax,0x400
64021e66:	test   dl,0x2
64021e69:	je     0x64021e70
64021e6b:	or     eax,0x800
64021e70:	test   dl,0x1
64021e73:	je     0x64021e7a
64021e75:	or     eax,0x1000
64021e7a:	test   edx,0x80000
64021e80:	mov    edi,0x100
64021e85:	je     0x64021e89
64021e87:	or     eax,edi
64021e89:	mov    ecx,edx
64021e8b:	mov    esi,0x300
64021e90:	and    ecx,esi
64021e92:	je     0x64021eb3
64021e94:	cmp    ecx,edi
64021e96:	je     0x64021eae
64021e98:	cmp    ecx,ebx
64021e9a:	je     0x64021ea7
64021e9c:	cmp    ecx,esi
64021e9e:	jne    0x64021eb3
64021ea0:	or     eax,0x6000
64021ea5:	jmp    0x64021eb3
64021ea7:	or     eax,0x4000
64021eac:	jmp    0x64021eb3
64021eae:	or     eax,0x2000
64021eb3:	mov    ecx,0x3000000
64021eb8:	pop    edi
64021eb9:	and    edx,ecx
64021ebb:	cmp    edx,0x1000000
64021ec1:	pop    esi
64021ec2:	pop    ebx
64021ec3:	je     0x64021edb
64021ec5:	cmp    edx,0x2000000
64021ecb:	je     0x64021ed7
64021ecd:	cmp    edx,ecx
64021ecf:	jne    0x64021ee0
64021ed1:	or     eax,0x8000
64021ed6:	ret    
64021ed7:	or     eax,0x40
64021eda:	ret    
64021edb:	or     eax,0x8040
64021ee0:	ret    
64021ee1:	sub    esp,0x10
64021ee4:	push   ebx
64021ee5:	push   ebp
64021ee6:	push   esi
64021ee7:	push   edi
64021ee8:	fstcw  WORD PTR [esp+0x14]
64021eed:	mov    ebx,DWORD PTR [esp+0x14]
64021ef1:	xor    edx,edx
64021ef3:	test   bl,0x1
64021ef6:	je     0x64021efb
64021ef8:	push   0x10
64021efa:	pop    edx
64021efb:	test   bl,0x4
64021efe:	je     0x64021f03
64021f00:	or     edx,0x8
64021f03:	test   bl,0x8
64021f06:	je     0x64021f0b
64021f08:	or     edx,0x4
64021f0b:	test   bl,0x10
64021f0e:	je     0x64021f13
64021f10:	or     edx,0x2
64021f13:	test   bl,0x20
64021f16:	je     0x64021f1b
64021f18:	or     edx,0x1
64021f1b:	test   bl,0x2
64021f1e:	je     0x64021f26
64021f20:	or     edx,0x80000
64021f26:	movzx  ecx,bx
64021f29:	mov    eax,ecx
64021f2b:	mov    edi,0xc00
64021f30:	and    eax,edi
64021f32:	mov    ebp,0x300
64021f37:	mov    esi,0x200
64021f3c:	je     0x64021f5e
64021f3e:	cmp    eax,0x400
64021f43:	je     0x64021f58
64021f45:	cmp    eax,0x800
64021f4a:	je     0x64021f54
64021f4c:	cmp    eax,edi
64021f4e:	jne    0x64021f5e
64021f50:	or     edx,ebp
64021f52:	jmp    0x64021f5e
64021f54:	or     edx,esi
64021f56:	jmp    0x64021f5e
64021f58:	or     edx,0x100
64021f5e:	and    ecx,ebp
64021f60:	je     0x64021f6e
64021f62:	cmp    ecx,esi
64021f64:	jne    0x64021f74
64021f66:	or     edx,0x10000
64021f6c:	jmp    0x64021f74
64021f6e:	or     edx,0x20000
64021f74:	test   bx,0x1000
64021f79:	je     0x64021f81
64021f7b:	or     edx,0x40000
64021f81:	mov    esi,DWORD PTR [esp+0x28]
64021f85:	mov    ecx,DWORD PTR [esp+0x24]
64021f89:	mov    eax,esi
64021f8b:	not    eax
64021f8d:	and    eax,edx
64021f8f:	and    ecx,esi
64021f91:	or     eax,ecx
64021f93:	cmp    eax,edx
64021f95:	mov    DWORD PTR [esp+0x1c],eax
64021f99:	je     0x64022049
64021f9f:	mov    ebx,eax
64021fa1:	call   0x64021db3
64021fa6:	movzx  eax,ax
64021fa9:	mov    DWORD PTR [esp+0x10],eax
64021fad:	fldcw  WORD PTR [esp+0x10]
64021fb1:	fstcw  WORD PTR [esp+0x10]
64021fb6:	mov    ebx,DWORD PTR [esp+0x10]
64021fba:	xor    edx,edx
64021fbc:	test   bl,0x1
64021fbf:	je     0x64021fc4
64021fc1:	push   0x10
64021fc3:	pop    edx
64021fc4:	test   bl,0x4
64021fc7:	je     0x64021fcc
64021fc9:	or     edx,0x8
64021fcc:	test   bl,0x8
64021fcf:	je     0x64021fd4
64021fd1:	or     edx,0x4
64021fd4:	test   bl,0x10
64021fd7:	je     0x64021fdc
64021fd9:	or     edx,0x2
64021fdc:	test   bl,0x20
64021fdf:	je     0x64021fe4
64021fe1:	or     edx,0x1
64021fe4:	test   bl,0x2
64021fe7:	je     0x64021fef
64021fe9:	or     edx,0x80000
64021fef:	movzx  ecx,bx
64021ff2:	mov    eax,ecx
64021ff4:	and    eax,edi
64021ff6:	je     0x6402201c
64021ff8:	cmp    eax,0x400
64021ffd:	je     0x64022016
64021fff:	cmp    eax,0x800
64022004:	je     0x6402200e
64022006:	cmp    eax,edi
64022008:	jne    0x6402201c
6402200a:	or     edx,ebp
6402200c:	jmp    0x6402201c
6402200e:	or     edx,0x200
64022014:	jmp    0x6402201c
64022016:	or     edx,0x100
6402201c:	and    ecx,ebp
6402201e:	je     0x64022030
64022020:	cmp    ecx,0x200
64022026:	jne    0x64022036
64022028:	or     edx,0x10000
6402202e:	jmp    0x64022036
64022030:	or     edx,0x20000
64022036:	test   bx,0x1000
6402203b:	je     0x64022043
6402203d:	or     edx,0x40000
64022043:	mov    eax,edx
64022045:	mov    DWORD PTR [esp+0x1c],edx
64022049:	cmp    DWORD PTR ds:0x64032604,0x0
64022050:	je     0x640221dc
64022056:	and    esi,0x308031f
6402205c:	mov    edi,esi
6402205e:	stmxcsr DWORD PTR [esp+0x18]
64022063:	mov    eax,DWORD PTR [esp+0x18]
64022067:	xor    esi,esi
64022069:	test   al,al
6402206b:	jns    0x64022070
6402206d:	push   0x10
6402206f:	pop    esi
64022070:	test   ax,0x200
64022074:	je     0x64022079
64022076:	or     esi,0x8
64022079:	test   ax,0x400
6402207d:	je     0x64022082
6402207f:	or     esi,0x4
64022082:	test   ax,0x800
64022086:	je     0x6402208b
64022088:	or     esi,0x2
6402208b:	test   ax,0x1000
6402208f:	je     0x64022094
64022091:	or     esi,0x1
64022094:	test   ax,0x100
64022098:	je     0x640220a0
6402209a:	or     esi,0x80000
640220a0:	mov    ecx,eax
640220a2:	mov    ebp,0x6000
640220a7:	and    ecx,ebp
640220a9:	je     0x640220d5
640220ab:	cmp    ecx,0x2000
640220b1:	je     0x640220cf
640220b3:	cmp    ecx,0x4000
640220b9:	je     0x640220c7
640220bb:	cmp    ecx,ebp
640220bd:	jne    0x640220d5
640220bf:	or     esi,0x300
640220c5:	jmp    0x640220d5
640220c7:	or     esi,0x200
640220cd:	jmp    0x640220d5
640220cf:	or     esi,0x100
640220d5:	mov    ebx,0x8040
640220da:	and    eax,ebx
640220dc:	sub    eax,0x40
640220df:	je     0x640220fd
640220e1:	sub    eax,0x7fc0
640220e6:	je     0x640220f5
640220e8:	sub    eax,0x40
640220eb:	jne    0x64022103
640220ed:	or     esi,0x1000000
640220f3:	jmp    0x64022103
640220f5:	or     esi,0x3000000
640220fb:	jmp    0x64022103
640220fd:	or     esi,0x2000000
64022103:	mov    edx,edi
64022105:	and    edi,DWORD PTR [esp+0x24]
64022109:	not    edx
6402210b:	and    edx,esi
6402210d:	or     edx,edi
6402210f:	cmp    edx,esi
64022111:	jne    0x6402211a
64022113:	mov    eax,esi
64022115:	jmp    0x640221c5
6402211a:	call   0x64021e41
6402211f:	push   eax
64022120:	mov    DWORD PTR [esp+0x2c],eax
64022124:	call   0x640223b0
64022129:	pop    ecx
6402212a:	stmxcsr DWORD PTR [esp+0x28]
6402212f:	mov    eax,DWORD PTR [esp+0x28]
64022133:	xor    edx,edx
64022135:	test   al,al
64022137:	jns    0x6402213c
64022139:	push   0x10
6402213b:	pop    edx
6402213c:	mov    edi,0x200
64022141:	test   edi,eax
64022143:	je     0x64022148
64022145:	or     edx,0x8
64022148:	test   ax,0x400
6402214c:	je     0x64022151
6402214e:	or     edx,0x4
64022151:	test   ax,0x800
64022155:	je     0x6402215a
64022157:	or     edx,0x2
6402215a:	test   ax,0x1000
6402215e:	je     0x64022163
64022160:	or     edx,0x1
64022163:	mov    esi,0x100
64022168:	test   esi,eax
6402216a:	je     0x64022172
6402216c:	or     edx,0x80000
64022172:	mov    ecx,eax
64022174:	and    ecx,ebp
64022176:	je     0x6402219a
64022178:	cmp    ecx,0x2000
6402217e:	je     0x64022198
64022180:	cmp    ecx,0x4000
64022186:	je     0x64022194
64022188:	cmp    ecx,ebp
6402218a:	jne    0x6402219a
6402218c:	or     edx,0x300
64022192:	jmp    0x6402219a
64022194:	or     edx,edi
64022196:	jmp    0x6402219a
64022198:	or     edx,esi
6402219a:	and    eax,ebx
6402219c:	sub    eax,0x40
6402219f:	je     0x640221bd
640221a1:	sub    eax,0x7fc0
640221a6:	je     0x640221b5
640221a8:	sub    eax,0x40
640221ab:	jne    0x640221c3
640221ad:	or     edx,0x1000000
640221b3:	jmp    0x640221c3
640221b5:	or     edx,0x3000000
640221bb:	jmp    0x640221c3
640221bd:	or     edx,0x2000000
640221c3:	mov    eax,edx
640221c5:	mov    ecx,DWORD PTR [esp+0x1c]
640221c9:	mov    edx,eax
640221cb:	xor    edx,ecx
640221cd:	or     eax,ecx
640221cf:	test   edx,0x8031f
640221d5:	je     0x640221dc
640221d7:	or     eax,0x80000000
640221dc:	pop    edi
640221dd:	pop    esi
640221de:	pop    ebp
640221df:	pop    ebx
640221e0:	add    esp,0x10
640221e3:	ret    
640221e4:	push   ebp
640221e5:	mov    ebp,esp
640221e7:	sub    esp,0x18
640221ea:	mov    eax,ds:0x6402d09c
640221ef:	xor    eax,ebp
640221f1:	mov    DWORD PTR [ebp-0x4],eax
640221f4:	mov    eax,DWORD PTR [ebp+0x10]
640221f7:	push   ebx
640221f8:	push   esi
640221f9:	xor    esi,esi
640221fb:	cmp    DWORD PTR [ebp+0xc],esi
640221fe:	push   edi
640221ff:	mov    DWORD PTR [ebp-0x18],0x404e
64022206:	mov    DWORD PTR [eax],esi
64022208:	mov    DWORD PTR [eax+0x4],esi
6402220b:	mov    DWORD PTR [eax+0x8],esi
6402220e:	jbe    0x6402235a
64022214:	mov    edx,DWORD PTR [eax]
64022216:	mov    ebx,DWORD PTR [eax+0x4]
64022219:	mov    esi,eax
6402221b:	lea    edi,[ebp-0x10]
6402221e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402221f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022221:	mov    ecx,edx
64022223:	shr    ecx,0x1f
64022226:	lea    edi,[edx+edx*1]
64022229:	lea    edx,[ebx+ebx*1]
6402222c:	or     edx,ecx
6402222e:	mov    ecx,DWORD PTR [eax+0x8]
64022231:	mov    esi,ebx
64022233:	shr    esi,0x1f
64022236:	add    ecx,ecx
64022238:	or     ecx,esi
6402223a:	mov    DWORD PTR [ebp-0x14],edi
6402223d:	mov    esi,edi
6402223f:	and    DWORD PTR [ebp-0x14],0x0
64022243:	mov    ebx,edx
64022245:	shr    ebx,0x1f
64022248:	add    ecx,ecx
6402224a:	shr    edi,0x1f
6402224d:	or     ecx,ebx
6402224f:	mov    ebx,DWORD PTR [ebp-0x10]
64022252:	add    esi,esi
64022254:	add    edx,edx
64022256:	or     edx,edi
64022258:	lea    edi,[esi+ebx*1]
6402225b:	cmp    edi,esi
6402225d:	mov    DWORD PTR [eax],esi
6402225f:	mov    DWORD PTR [eax+0x4],edx
64022262:	mov    DWORD PTR [eax+0x8],ecx
64022265:	jb     0x6402226b
64022267:	cmp    edi,ebx
64022269:	jae    0x64022272
6402226b:	mov    DWORD PTR [ebp-0x14],0x1
64022272:	xor    ebx,ebx
64022274:	cmp    DWORD PTR [ebp-0x14],ebx
64022277:	mov    DWORD PTR [eax],edi
64022279:	je     0x64022295
6402227b:	lea    esi,[edx+0x1]
6402227e:	cmp    esi,edx
64022280:	jb     0x64022287
64022282:	cmp    esi,0x1
64022285:	jae    0x6402228a
64022287:	xor    ebx,ebx
64022289:	inc    ebx
6402228a:	test   ebx,ebx
6402228c:	mov    DWORD PTR [eax+0x4],esi
6402228f:	je     0x64022295
64022291:	inc    ecx
64022292:	mov    DWORD PTR [eax+0x8],ecx
64022295:	mov    ecx,DWORD PTR [eax+0x4]
64022298:	mov    edx,DWORD PTR [ebp-0xc]
6402229b:	lea    ebx,[ecx+edx*1]
6402229e:	xor    esi,esi
640222a0:	cmp    ebx,ecx
640222a2:	jb     0x640222a8
640222a4:	cmp    ebx,edx
640222a6:	jae    0x640222ab
640222a8:	xor    esi,esi
640222aa:	inc    esi
640222ab:	test   esi,esi
640222ad:	mov    DWORD PTR [eax+0x4],ebx
640222b0:	je     0x640222b5
640222b2:	inc    DWORD PTR [eax+0x8]
640222b5:	mov    ecx,DWORD PTR [ebp-0x8]
640222b8:	add    DWORD PTR [eax+0x8],ecx
640222bb:	and    DWORD PTR [ebp-0x14],0x0
640222bf:	lea    ecx,[edi+edi*1]
640222c2:	mov    edx,edi
640222c4:	shr    edx,0x1f
640222c7:	lea    edi,[ebx+ebx*1]
640222ca:	or     edi,edx
640222cc:	mov    edx,DWORD PTR [eax+0x8]
640222cf:	mov    esi,ebx
640222d1:	shr    esi,0x1f
640222d4:	lea    ebx,[edx+edx*1]
640222d7:	mov    edx,DWORD PTR [ebp+0x8]
640222da:	or     ebx,esi
640222dc:	mov    DWORD PTR [eax],ecx
640222de:	mov    DWORD PTR [eax+0x4],edi
640222e1:	mov    DWORD PTR [eax+0x8],ebx
640222e4:	movsx  edx,BYTE PTR [edx]
640222e7:	lea    esi,[ecx+edx*1]
640222ea:	cmp    esi,ecx
640222ec:	mov    DWORD PTR [ebp-0x10],edx
640222ef:	jb     0x640222f5
640222f1:	cmp    esi,edx
640222f3:	jae    0x640222fc
640222f5:	mov    DWORD PTR [ebp-0x14],0x1
640222fc:	cmp    DWORD PTR [ebp-0x14],0x0
64022300:	mov    DWORD PTR [eax],esi
64022302:	je     0x64022320
64022304:	lea    ecx,[edi+0x1]
64022307:	xor    edx,edx
64022309:	cmp    ecx,edi
6402230b:	jb     0x64022312
6402230d:	cmp    ecx,0x1
64022310:	jae    0x64022315
64022312:	xor    edx,edx
64022314:	inc    edx
64022315:	test   edx,edx
64022317:	mov    DWORD PTR [eax+0x4],ecx
6402231a:	je     0x64022320
6402231c:	inc    ebx
6402231d:	mov    DWORD PTR [eax+0x8],ebx
64022320:	dec    DWORD PTR [ebp+0xc]
64022323:	inc    DWORD PTR [ebp+0x8]
64022326:	cmp    DWORD PTR [ebp+0xc],0x0
6402232a:	ja     0x64022214
64022330:	xor    esi,esi
64022332:	jmp    0x6402235a
64022334:	mov    ecx,DWORD PTR [eax+0x4]
64022337:	mov    edx,ecx
64022339:	shr    edx,0x10
6402233c:	mov    DWORD PTR [eax+0x8],edx
6402233f:	mov    edx,DWORD PTR [eax]
64022341:	mov    edi,edx
64022343:	shl    ecx,0x10
64022346:	shr    edi,0x10
64022349:	or     ecx,edi
6402234b:	shl    edx,0x10
6402234e:	add    DWORD PTR [ebp-0x18],0xfff0
64022355:	mov    DWORD PTR [eax+0x4],ecx
64022358:	mov    DWORD PTR [eax],edx
6402235a:	cmp    DWORD PTR [eax+0x8],esi
6402235d:	je     0x64022334
6402235f:	mov    ebx,0x8000
64022364:	test   DWORD PTR [eax+0x8],ebx
64022367:	jne    0x64022399
64022369:	mov    esi,DWORD PTR [eax]
6402236b:	mov    edi,DWORD PTR [eax+0x4]
6402236e:	add    DWORD PTR [ebp-0x18],0xffff
64022375:	mov    ecx,esi
64022377:	add    esi,esi
64022379:	shr    ecx,0x1f
6402237c:	mov    DWORD PTR [eax],esi
6402237e:	lea    esi,[edi+edi*1]
64022381:	or     esi,ecx
64022383:	mov    ecx,DWORD PTR [eax+0x8]
64022386:	mov    edx,edi
64022388:	shr    edx,0x1f
6402238b:	add    ecx,ecx
6402238d:	or     ecx,edx
6402238f:	test   ebx,ecx
64022391:	mov    DWORD PTR [eax+0x4],esi
64022394:	mov    DWORD PTR [eax+0x8],ecx
64022397:	je     0x64022369
64022399:	mov    cx,WORD PTR [ebp-0x18]
6402239d:	mov    WORD PTR [eax+0xa],cx
640223a1:	mov    ecx,DWORD PTR [ebp-0x4]
640223a4:	pop    edi
640223a5:	pop    esi
640223a6:	xor    ecx,ebp
640223a8:	pop    ebx
640223a9:	call   0x64012e6c
640223ae:	leave  
640223af:	ret    
640223b0:	push   0x8
640223b2:	push   0x6402a9c8
640223b7:	call   0x64014430
640223bc:	xor    eax,eax
640223be:	cmp    DWORD PTR ds:0x64032604,eax
640223c4:	je     0x6402241c
640223c6:	test   BYTE PTR [ebp+0x8],0x40
640223ca:	je     0x64022414
640223cc:	cmp    DWORD PTR ds:0x6402e374,eax
640223d2:	je     0x64022414
640223d4:	mov    DWORD PTR [ebp-0x4],eax
640223d7:	ldmxcsr DWORD PTR [ebp+0x8]
640223db:	jmp    0x6402240b
640223dd:	mov    eax,DWORD PTR [ebp-0x14]
640223e0:	mov    eax,DWORD PTR [eax]
640223e2:	mov    eax,DWORD PTR [eax]
640223e4:	cmp    eax,0xc0000005
640223e9:	je     0x640223f5
640223eb:	cmp    eax,0xc000001d
640223f0:	je     0x640223f5
640223f2:	xor    eax,eax
640223f4:	ret    
640223f5:	xor    eax,eax
640223f7:	inc    eax
640223f8:	ret    
640223f9:	mov    esp,DWORD PTR [ebp-0x18]
640223fc:	and    DWORD PTR ds:0x6402e374,0x0
64022403:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022407:	ldmxcsr DWORD PTR [ebp+0x8]
6402240b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022412:	jmp    0x6402241c
64022414:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022418:	ldmxcsr DWORD PTR [ebp+0x8]
6402241c:	call   0x64014475
64022421:	ret    
64022422:	int3   
64022423:	int3   
64022424:	int3   
64022425:	int3   
64022426:	int3   
64022427:	int3   
64022428:	int3   
64022429:	int3   
6402242a:	int3   
6402242b:	int3   
6402242c:	int3   
6402242d:	int3   
6402242e:	int3   
6402242f:	int3   
64022430:	mov    eax,DWORD PTR [ebp-0x10]
64022433:	and    eax,0x1
64022436:	je     0x64022448
6402243c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64022440:	mov    ecx,DWORD PTR [ebp+0x4]
64022443:	jmp    0x64001930
64022448:	ret    
64022449:	mov    edx,DWORD PTR [esp+0x8]
6402244d:	lea    eax,[edx-0xc]
64022450:	mov    ecx,DWORD PTR [edx-0x10]
64022453:	xor    ecx,eax
64022455:	call   0x64012e6c
6402245a:	mov    eax,0x64029f88
6402245f:	jmp    0x64012b2e
64022464:	int3   
64022465:	int3   
64022466:	int3   
64022467:	int3   
64022468:	int3   
64022469:	int3   
6402246a:	int3   
6402246b:	int3   
6402246c:	int3   
6402246d:	int3   
6402246e:	int3   
6402246f:	int3   
64022470:	mov    eax,DWORD PTR [ebp-0x10]
64022473:	and    eax,0x1
64022476:	je     0x64022488
6402247c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64022480:	mov    ecx,DWORD PTR [ebp+0x4]
64022483:	jmp    0x64001930
64022488:	ret    
64022489:	mov    edx,DWORD PTR [esp+0x8]
6402248d:	lea    eax,[edx-0x10]
64022490:	mov    ecx,DWORD PTR [edx-0x14]
64022493:	xor    ecx,eax
64022495:	call   0x64012e6c
6402249a:	mov    eax,0x64029fb4
6402249f:	jmp    0x64012b2e
640224a4:	int3   
640224a5:	int3   
640224a6:	int3   
640224a7:	int3   
640224a8:	int3   
640224a9:	int3   
640224aa:	int3   
640224ab:	int3   
640224ac:	int3   
640224ad:	int3   
640224ae:	int3   
640224af:	int3   
640224b0:	lea    ecx,[ebp-0x50]
640224b3:	jmp    0x64001650
640224b8:	mov    edx,DWORD PTR [esp+0x8]
640224bc:	lea    eax,[edx-0x44]
640224bf:	mov    ecx,DWORD PTR [edx-0x48]
640224c2:	xor    ecx,eax
640224c4:	call   0x64012e6c
640224c9:	mov    eax,0x6402a038
640224ce:	jmp    0x64012b2e
640224d3:	int3   
640224d4:	int3   
640224d5:	int3   
640224d6:	int3   
640224d7:	int3   
640224d8:	int3   
640224d9:	int3   
640224da:	int3   
640224db:	int3   
640224dc:	int3   
640224dd:	int3   
640224de:	int3   
640224df:	int3   
640224e0:	lea    ecx,[ebp-0x98]
640224e6:	jmp    0x6400fe40
640224eb:	lea    ecx,[ebp-0x94]
640224f1:	jmp    0x64001650
640224f6:	lea    ecx,[ebp-0x78]
640224f9:	jmp    0x64001650
640224fe:	mov    edx,DWORD PTR [esp+0x8]
64022502:	lea    eax,[edx-0xa8]
64022508:	mov    ecx,DWORD PTR [edx-0xac]
6402250e:	xor    ecx,eax
64022510:	call   0x64012e6c
64022515:	mov    eax,0x6402a084
6402251a:	jmp    0x64012b2e
6402251f:	int3   
64022520:	lea    ecx,[ebp+0x38]
64022523:	jmp    0x64006910
64022528:	lea    ecx,[ebp-0x38]
6402252b:	jmp    0x6400fe60
64022530:	lea    ecx,[ebp+0x10]
64022533:	jmp    0x64001930
64022538:	lea    ecx,[ebp+0x14]
6402253b:	jmp    0x64001930
64022540:	lea    ecx,[ebp+0x18]
64022543:	jmp    0x64001930
64022548:	lea    ecx,[ebp+0xc]
6402254b:	jmp    0x64001930
64022550:	lea    ecx,[ebp+0x8]
64022553:	jmp    0x64001930
64022558:	lea    ecx,[ebp+0x4]
6402255b:	jmp    0x64001930
64022560:	lea    ecx,[ebp+0x1c]
64022563:	jmp    0x64001650
64022568:	mov    edx,DWORD PTR [esp+0x8]
6402256c:	lea    eax,[edx+0xc]
6402256f:	mov    ecx,DWORD PTR [edx-0x80]
64022572:	xor    ecx,eax
64022574:	call   0x64012e6c
64022579:	mov    ecx,DWORD PTR [edx+0x7c]
6402257c:	xor    ecx,eax
6402257e:	call   0x64012e6c
64022583:	mov    eax,0x6402a0f4
64022588:	jmp    0x64012b2e
6402258d:	int3   
6402258e:	int3   
6402258f:	int3   
64022590:	mov    eax,ds:0x6402e4c8
64022595:	and    eax,0xfffffffe
64022598:	mov    ds:0x6402e4c8,eax
6402259d:	ret    
6402259e:	mov    edx,DWORD PTR [esp+0x8]
640225a2:	lea    eax,[edx-0x10]
640225a5:	mov    ecx,DWORD PTR [edx-0x14]
640225a8:	xor    ecx,eax
640225aa:	call   0x64012e6c
640225af:	mov    eax,0x6402a1b8
640225b4:	jmp    0x64012b2e
640225b9:	int3   
640225ba:	int3   
640225bb:	int3   
640225bc:	int3   
640225bd:	int3   
640225be:	int3   
640225bf:	int3   
640225c0:	lea    ecx,[ebp-0x14]
640225c3:	jmp    0x640093d0
640225c8:	mov    edx,DWORD PTR [esp+0x8]
640225cc:	lea    eax,[edx+0xc]
640225cf:	mov    ecx,DWORD PTR [edx-0x18]
640225d2:	xor    ecx,eax
640225d4:	call   0x64012e6c
640225d9:	mov    eax,0x6402a218
640225de:	jmp    0x64012b2e
640225e3:	int3   
640225e4:	int3   
640225e5:	int3   
640225e6:	int3   
640225e7:	int3   
640225e8:	int3   
640225e9:	int3   
640225ea:	int3   
640225eb:	int3   
640225ec:	int3   
640225ed:	int3   
640225ee:	int3   
640225ef:	int3   
640225f0:	lea    ecx,[ebp-0x10]
640225f3:	jmp    0x64001930
640225f8:	mov    edx,DWORD PTR [esp+0x8]
640225fc:	lea    eax,[edx-0x8]
640225ff:	mov    ecx,DWORD PTR [edx-0xc]
64022602:	xor    ecx,eax
64022604:	call   0x64012e6c
64022609:	mov    eax,0x6402a244
6402260e:	jmp    0x64012b2e
64022613:	int3   
64022614:	int3   
64022615:	int3   
64022616:	int3   
64022617:	int3   
64022618:	int3   
64022619:	int3   
6402261a:	int3   
6402261b:	int3   
6402261c:	int3   
6402261d:	int3   
6402261e:	int3   
6402261f:	int3   
64022620:	lea    ecx,[ebp-0x10]
64022623:	jmp    0x64001680
64022628:	lea    ecx,[ebp-0x14]
6402262b:	jmp    0x64001930
64022630:	mov    edx,DWORD PTR [esp+0x8]
64022634:	lea    eax,[edx-0x14]
64022637:	mov    ecx,DWORD PTR [edx-0x18]
6402263a:	xor    ecx,eax
6402263c:	call   0x64012e6c
64022641:	mov    eax,0x6402a278
64022646:	jmp    0x64012b2e
6402264b:	int3   
6402264c:	int3   
6402264d:	int3   
6402264e:	int3   
6402264f:	int3   
64022650:	mov    eax,DWORD PTR [ebp-0x50]
64022653:	and    eax,0x1
64022656:	je     0x64022668
6402265c:	and    DWORD PTR [ebp-0x50],0xfffffffe
64022660:	mov    ecx,DWORD PTR [ebp-0x58]
64022663:	jmp    0x64001930
64022668:	ret    
64022669:	lea    ecx,[ebp-0x4c]
6402266c:	jmp    0x64001930
64022671:	lea    ecx,[ebp-0x54]
64022674:	jmp    0x64001930
64022679:	lea    ecx,[ebp-0x10]
6402267c:	jmp    0x64001930
64022681:	lea    ecx,[ebp-0x10]
64022684:	jmp    0x64001930
64022689:	lea    ecx,[ebp-0x28]
6402268c:	jmp    0x64001930
64022691:	lea    ecx,[ebp-0x48]
64022694:	jmp    0x64001930
64022699:	lea    ecx,[ebp-0x24]
6402269c:	jmp    0x64001930
640226a1:	lea    ecx,[ebp-0x14]
640226a4:	jmp    0x64001930
640226a9:	lea    ecx,[ebp-0x18]
640226ac:	jmp    0x64001930
640226b1:	lea    ecx,[ebp-0x10]
640226b4:	jmp    0x64001930
640226b9:	lea    ecx,[ebp-0x10]
640226bc:	jmp    0x64001930
640226c1:	lea    ecx,[ebp-0x18]
640226c4:	jmp    0x64001930
640226c9:	lea    ecx,[ebp-0x14]
640226cc:	jmp    0x64001930
640226d1:	lea    ecx,[ebp-0x10]
640226d4:	jmp    0x64001930
640226d9:	lea    ecx,[ebp-0x3c]
640226dc:	jmp    0x64010c40
640226e1:	lea    ecx,[ebp-0x14]
640226e4:	jmp    0x64001930
640226e9:	lea    ecx,[ebp-0x10]
640226ec:	jmp    0x64001930
640226f1:	lea    ecx,[ebp-0x20]
640226f4:	jmp    0x64001930
640226f9:	lea    ecx,[ebp-0x10]
640226fc:	jmp    0x64001930
64022701:	lea    ecx,[ebp-0x18]
64022704:	jmp    0x64001930
64022709:	lea    ecx,[ebp-0x14]
6402270c:	jmp    0x64001930
64022711:	lea    ecx,[ebp-0x10]
64022714:	jmp    0x64001930
64022719:	lea    ecx,[ebp-0x1c]
6402271c:	jmp    0x64001930
64022721:	lea    ecx,[ebp-0x2c]
64022724:	jmp    0x64001930
64022729:	lea    ecx,[ebp-0x18]
6402272c:	jmp    0x64001930
64022731:	lea    ecx,[ebp-0x10]
64022734:	jmp    0x64001930
64022739:	lea    ecx,[ebp-0x2c]
6402273c:	jmp    0x64001930
64022741:	lea    ecx,[ebp-0x1c]
64022744:	jmp    0x64001930
64022749:	lea    ecx,[ebp-0x1c]
6402274c:	jmp    0x64001930
64022751:	mov    edx,DWORD PTR [esp+0x8]
64022755:	lea    eax,[edx+0xc]
64022758:	mov    ecx,DWORD PTR [edx-0xa0]
6402275e:	xor    ecx,eax
64022760:	call   0x64012e6c
64022765:	mov    ecx,DWORD PTR [edx+0x130]
6402276b:	xor    ecx,eax
6402276d:	call   0x64012e6c
64022772:	mov    eax,0x6402a29c
64022777:	jmp    0x64012b2e
6402277c:	int3   
6402277d:	int3   
6402277e:	int3   
6402277f:	int3   
64022780:	lea    ecx,[ebp-0x30]
64022783:	jmp    0x64001930
64022788:	lea    ecx,[ebp-0x2c]
6402278b:	jmp    0x64001650
64022790:	lea    ecx,[ebp-0x5c]
64022793:	jmp    0x64001650
64022798:	mov    edx,DWORD PTR [esp+0x8]
6402279c:	lea    eax,[edx+0xc]
6402279f:	mov    ecx,DWORD PTR [edx-0x60]
640227a2:	xor    ecx,eax
640227a4:	call   0x64012e6c
640227a9:	mov    ecx,DWORD PTR [edx-0x4]
640227ac:	xor    ecx,eax
640227ae:	call   0x64012e6c
640227b3:	mov    eax,0x6402a3c8
640227b8:	jmp    0x64012b2e
640227bd:	lea    ecx,[ebp-0x28]
640227c0:	jmp    0x64001650
640227c5:	mov    edx,DWORD PTR [esp+0x8]
640227c9:	lea    eax,[edx+0xc]
640227cc:	mov    ecx,DWORD PTR [edx-0x54]
640227cf:	xor    ecx,eax
640227d1:	call   0x64012e6c
640227d6:	mov    eax,0x6402a414
640227db:	jmp    0x64012b2e
640227e0:	lea    ecx,[ebp-0x28]
640227e3:	jmp    0x64001650
640227e8:	mov    edx,DWORD PTR [esp+0x8]
640227ec:	lea    eax,[edx+0xc]
640227ef:	mov    ecx,DWORD PTR [edx-0x54]
640227f2:	xor    ecx,eax
640227f4:	call   0x64012e6c
640227f9:	mov    eax,0x6402a440
640227fe:	jmp    0x64012b2e
64022803:	mov    edx,DWORD PTR [esp+0x8]
64022807:	lea    eax,[edx+0xc]
6402280a:	mov    ecx,DWORD PTR [edx-0x14]
6402280d:	xor    ecx,eax
6402280f:	call   0x64012e6c
64022814:	mov    eax,0x6402a5e8
64022819:	jmp    0x64012b2e
6402281e:	int3   
6402281f:	int3   
64022820:	mov    eax,DWORD PTR [ebp+0x4]
64022823:	push   eax
64022824:	call   0x64012612
64022829:	pop    ecx
6402282a:	ret    
6402282b:	mov    edx,DWORD PTR [esp+0x8]
6402282f:	lea    eax,[edx-0x8]
64022832:	mov    ecx,DWORD PTR [edx-0xc]
64022835:	xor    ecx,eax
64022837:	call   0x64012e6c
6402283c:	mov    eax,0x6402ab40
64022841:	jmp    0x64012b2e
64022846:	int3   
64022847:	int3   
64022848:	int3   
64022849:	int3   
6402284a:	int3   
6402284b:	int3   
6402284c:	int3   
6402284d:	int3   
6402284e:	int3   
6402284f:	int3   
64022850:	mov    eax,DWORD PTR [ebp+0x4]
64022853:	push   eax
64022854:	call   0x64012612
64022859:	pop    ecx
6402285a:	ret    
6402285b:	mov    edx,DWORD PTR [esp+0x8]
6402285f:	lea    eax,[edx-0x8]
64022862:	mov    ecx,DWORD PTR [edx-0xc]
64022865:	xor    ecx,eax
64022867:	call   0x64012e6c
6402286c:	mov    eax,0x6402ab6c
64022871:	jmp    0x64012b2e
64022876:	int3   
64022877:	int3   
64022878:	int3   
64022879:	int3   
6402287a:	int3   
6402287b:	int3   
6402287c:	int3   
6402287d:	int3   
6402287e:	int3   
6402287f:	int3   
64022880:	mov    eax,DWORD PTR [ebp-0x10]
64022883:	push   eax
64022884:	call   0x64012612
64022889:	pop    ecx
6402288a:	ret    
6402288b:	mov    edx,DWORD PTR [esp+0x8]
6402288f:	lea    eax,[edx-0x8]
64022892:	mov    ecx,DWORD PTR [edx-0xc]
64022895:	xor    ecx,eax
64022897:	call   0x64012e6c
6402289c:	mov    eax,0x6402ab98
640228a1:	jmp    0x64012b2e
640228a6:	int3   
640228a7:	int3   
640228a8:	int3   
640228a9:	int3   
640228aa:	int3   
640228ab:	int3   
640228ac:	int3   
640228ad:	int3   
640228ae:	int3   
640228af:	int3   
640228b0:	mov    eax,DWORD PTR [ebp-0x10]
640228b3:	push   eax
640228b4:	call   0x64012612
640228b9:	pop    ecx
640228ba:	ret    
640228bb:	mov    edx,DWORD PTR [esp+0x8]
640228bf:	lea    eax,[edx-0xc]
640228c2:	mov    ecx,DWORD PTR [edx-0x10]
640228c5:	xor    ecx,eax
640228c7:	call   0x64012e6c
640228cc:	mov    eax,0x6402abc4
640228d1:	jmp    0x64012b2e
640228d6:	int3   
640228d7:	int3   
640228d8:	int3   
640228d9:	int3   
640228da:	int3   
640228db:	int3   
640228dc:	int3   
640228dd:	int3   
640228de:	int3   
640228df:	int3   
640228e0:	lea    ecx,[ebp-0x144]
640228e6:	jmp    0x64002760
640228eb:	mov    edx,DWORD PTR [esp+0x8]
640228ef:	lea    eax,[edx-0x144]
640228f5:	mov    ecx,DWORD PTR [edx-0x148]
640228fb:	xor    ecx,eax
640228fd:	call   0x64012e6c
64022902:	add    eax,0xc
64022905:	mov    ecx,DWORD PTR [edx-0x4]
64022908:	xor    ecx,eax
6402290a:	call   0x64012e6c
6402290f:	mov    eax,0x6402abf0
64022914:	jmp    0x64012b2e
64022919:	int3   
6402291a:	int3   
6402291b:	int3   
6402291c:	int3   
6402291d:	int3   
6402291e:	int3   
6402291f:	int3   
64022920:	lea    ecx,[ebp-0x20]
64022923:	jmp    0x64009ff0
64022928:	mov    edx,DWORD PTR [esp+0x8]
6402292c:	lea    eax,[edx-0x1c]
6402292f:	mov    ecx,DWORD PTR [edx-0x20]
64022932:	xor    ecx,eax
64022934:	call   0x64012e6c
64022939:	mov    eax,0x6402ac1c
6402293e:	jmp    0x64012b2e
64022943:	int3   
64022944:	int3   
64022945:	int3   
64022946:	int3   
64022947:	int3   
64022948:	int3   
64022949:	int3   
6402294a:	int3   
6402294b:	int3   
6402294c:	int3   
6402294d:	int3   
6402294e:	int3   
6402294f:	int3   
64022950:	mov    eax,DWORD PTR [ebp-0x10]
64022953:	and    eax,0x1
64022956:	je     0x64022968
6402295c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64022960:	mov    edi,DWORD PTR [ebp+0x8]
64022963:	jmp    0x64009c80
64022968:	ret    
64022969:	mov    edx,DWORD PTR [esp+0x8]
6402296d:	lea    eax,[edx-0x8]
64022970:	mov    ecx,DWORD PTR [edx-0xc]
64022973:	xor    ecx,eax
64022975:	call   0x64012e6c
6402297a:	mov    eax,0x6402ac48
6402297f:	jmp    0x64012b2e
64022984:	int3   
64022985:	int3   
64022986:	int3   
64022987:	int3   
64022988:	int3   
64022989:	int3   
6402298a:	int3   
6402298b:	int3   
6402298c:	int3   
6402298d:	int3   
6402298e:	int3   
6402298f:	int3   
64022990:	mov    edx,DWORD PTR [esp+0x8]
64022994:	lea    eax,[edx+0xc]
64022997:	mov    ecx,DWORD PTR [edx-0x2c]
6402299a:	xor    ecx,eax
6402299c:	call   0x64012e6c
640229a1:	mov    eax,0x6402acd4
640229a6:	jmp    0x64012b2e
640229ab:	int3   
640229ac:	int3   
640229ad:	int3   
640229ae:	int3   
640229af:	int3   
640229b0:	mov    eax,DWORD PTR [ebp-0x18]
640229b3:	push   eax
640229b4:	mov    ecx,DWORD PTR [ebp-0x1c]
640229b7:	push   ecx
640229b8:	call   0x64002c70
640229bd:	add    esp,0x8
640229c0:	ret    
640229c1:	mov    edx,DWORD PTR [esp+0x8]
640229c5:	lea    eax,[edx+0xc]
640229c8:	mov    ecx,DWORD PTR [edx-0x20]
640229cb:	xor    ecx,eax
640229cd:	call   0x64012e6c
640229d2:	mov    eax,0x6402ad34
640229d7:	jmp    0x64012b2e
640229dc:	int3   
640229dd:	int3   
640229de:	int3   
640229df:	int3   
640229e0:	lea    ecx,[ebp-0x28]
640229e3:	jmp    0x64001650
640229e8:	mov    edx,DWORD PTR [esp+0x8]
640229ec:	lea    eax,[edx-0x28]
640229ef:	mov    ecx,DWORD PTR [edx-0x2c]
640229f2:	xor    ecx,eax
640229f4:	call   0x64012e6c
640229f9:	mov    eax,0x6402ad60
640229fe:	jmp    0x64012b2e
64022a03:	int3   
64022a04:	int3   
64022a05:	int3   
64022a06:	int3   
64022a07:	int3   
64022a08:	int3   
64022a09:	int3   
64022a0a:	int3   
64022a0b:	int3   
64022a0c:	int3   
64022a0d:	int3   
64022a0e:	int3   
64022a0f:	int3   
64022a10:	mov    ecx,DWORD PTR [ebp-0x10]
64022a13:	jmp    0x64001650
64022a18:	mov    edx,DWORD PTR [esp+0x8]
64022a1c:	lea    eax,[edx-0x10]
64022a1f:	mov    ecx,DWORD PTR [edx-0x14]
64022a22:	xor    ecx,eax
64022a24:	call   0x64012e6c
64022a29:	mov    eax,0x6402ad8c
64022a2e:	jmp    0x64012b2e
64022a33:	int3   
64022a34:	int3   
64022a35:	int3   
64022a36:	int3   
64022a37:	int3   
64022a38:	int3   
64022a39:	int3   
64022a3a:	int3   
64022a3b:	int3   
64022a3c:	int3   
64022a3d:	int3   
64022a3e:	int3   
64022a3f:	int3   
64022a40:	mov    edx,DWORD PTR [esp+0x8]
64022a44:	lea    eax,[edx+0xc]
64022a47:	mov    ecx,DWORD PTR [edx-0x1c]
64022a4a:	xor    ecx,eax
64022a4c:	call   0x64012e6c
64022a51:	mov    eax,0x6402ae18
64022a56:	jmp    0x64012b2e
64022a5b:	int3   
64022a5c:	int3   
64022a5d:	int3   
64022a5e:	int3   
64022a5f:	int3   
64022a60:	mov    eax,DWORD PTR [ebp-0x14]
64022a63:	push   eax
64022a64:	mov    ecx,DWORD PTR [ebp-0x18]
64022a67:	push   ecx
64022a68:	call   0x64002c70
64022a6d:	add    esp,0x8
64022a70:	ret    
64022a71:	mov    edx,DWORD PTR [esp+0x8]
64022a75:	lea    eax,[edx+0xc]
64022a78:	mov    ecx,DWORD PTR [edx-0x1c]
64022a7b:	xor    ecx,eax
64022a7d:	call   0x64012e6c
64022a82:	mov    eax,0x6402ae78
64022a87:	jmp    0x64012b2e
64022a8c:	int3   
64022a8d:	int3   
64022a8e:	int3   
64022a8f:	int3   
64022a90:	mov    ecx,DWORD PTR [ebp-0x10]
64022a93:	jmp    0x64001650
64022a98:	mov    edx,DWORD PTR [esp+0x8]
64022a9c:	lea    eax,[edx-0xc]
64022a9f:	mov    ecx,DWORD PTR [edx-0x10]
64022aa2:	xor    ecx,eax
64022aa4:	call   0x64012e6c
64022aa9:	mov    eax,0x6402aea4
64022aae:	jmp    0x64012b2e
64022ab3:	int3   
64022ab4:	int3   
64022ab5:	int3   
64022ab6:	int3   
64022ab7:	int3   
64022ab8:	int3   
64022ab9:	int3   
64022aba:	int3   
64022abb:	int3   
64022abc:	int3   
64022abd:	int3   
64022abe:	int3   
64022abf:	int3   
64022ac0:	mov    eax,DWORD PTR [ebp-0x14]
64022ac3:	push   eax
64022ac4:	mov    ecx,DWORD PTR [ebp-0x18]
64022ac7:	push   ecx
64022ac8:	call   0x64002c70
64022acd:	add    esp,0x8
64022ad0:	ret    
64022ad1:	mov    edx,DWORD PTR [esp+0x8]
64022ad5:	lea    eax,[edx+0xc]
64022ad8:	mov    ecx,DWORD PTR [edx-0x1c]
64022adb:	xor    ecx,eax
64022add:	call   0x64012e6c
64022ae2:	mov    eax,0x6402af04
64022ae7:	jmp    0x64012b2e
64022aec:	int3   
64022aed:	int3   
64022aee:	int3   
64022aef:	int3   
64022af0:	lea    ecx,[ebp+0x8]
64022af3:	jmp    0x640066e0
64022af8:	mov    edx,DWORD PTR [esp+0x8]
64022afc:	lea    eax,[edx-0x14]
64022aff:	mov    ecx,DWORD PTR [edx-0x18]
64022b02:	xor    ecx,eax
64022b04:	call   0x64012e6c
64022b09:	mov    eax,0x6402af30
64022b0e:	jmp    0x64012b2e
64022b13:	int3   
64022b14:	int3   
64022b15:	int3   
64022b16:	int3   
64022b17:	int3   
64022b18:	int3   
64022b19:	int3   
64022b1a:	int3   
64022b1b:	int3   
64022b1c:	int3   
64022b1d:	int3   
64022b1e:	int3   
64022b1f:	int3   
64022b20:	lea    ecx,[ebp+0x8]
64022b23:	jmp    0x64001650
64022b28:	mov    edx,DWORD PTR [esp+0x8]
64022b2c:	lea    eax,[edx-0x14]
64022b2f:	mov    ecx,DWORD PTR [edx-0x18]
64022b32:	xor    ecx,eax
64022b34:	call   0x64012e6c
64022b39:	mov    eax,0x6402af5c
64022b3e:	jmp    0x64012b2e
64022b43:	int3   
64022b44:	int3   
64022b45:	int3   
64022b46:	int3   
64022b47:	int3   
64022b48:	int3   
64022b49:	int3   
64022b4a:	int3   
64022b4b:	int3   
64022b4c:	int3   
64022b4d:	int3   
64022b4e:	int3   
64022b4f:	int3   
64022b50:	mov    ecx,DWORD PTR [ebp-0x10]
64022b53:	jmp    0x6401272b
64022b58:	mov    edx,DWORD PTR [esp+0x8]
64022b5c:	lea    eax,[edx-0xc]
64022b5f:	mov    ecx,DWORD PTR [edx-0x10]
64022b62:	xor    ecx,eax
64022b64:	call   0x64012e6c
64022b69:	mov    eax,0x6402af88
64022b6e:	jmp    0x64012b2e
64022b73:	int3   
64022b74:	int3   
64022b75:	int3   
64022b76:	int3   
64022b77:	int3   
64022b78:	int3   
64022b79:	int3   
64022b7a:	int3   
64022b7b:	int3   
64022b7c:	int3   
64022b7d:	int3   
64022b7e:	int3   
64022b7f:	int3   
64022b80:	mov    ecx,DWORD PTR [ebp-0x10]
64022b83:	jmp    0x6401272b
64022b88:	mov    edx,DWORD PTR [esp+0x8]
64022b8c:	lea    eax,[edx-0x8]
64022b8f:	mov    ecx,DWORD PTR [edx-0xc]
64022b92:	xor    ecx,eax
64022b94:	call   0x64012e6c
64022b99:	mov    eax,0x6402afb4
64022b9e:	jmp    0x64012b2e
64022ba3:	int3   
64022ba4:	int3   
64022ba5:	int3   
64022ba6:	int3   
64022ba7:	int3   
64022ba8:	int3   
64022ba9:	int3   
64022baa:	int3   
64022bab:	int3   
64022bac:	int3   
64022bad:	int3   
64022bae:	int3   
64022baf:	int3   
64022bb0:	mov    ecx,DWORD PTR [ebp-0x10]
64022bb3:	jmp    0x6401272b
64022bb8:	mov    edx,DWORD PTR [esp+0x8]
64022bbc:	lea    eax,[edx-0xc]
64022bbf:	mov    ecx,DWORD PTR [edx-0x10]
64022bc2:	xor    ecx,eax
64022bc4:	call   0x64012e6c
64022bc9:	mov    eax,0x6402afe0
64022bce:	jmp    0x64012b2e
64022bd3:	int3   
64022bd4:	int3   
64022bd5:	int3   
64022bd6:	int3   
64022bd7:	int3   
64022bd8:	int3   
64022bd9:	int3   
64022bda:	int3   
64022bdb:	int3   
64022bdc:	int3   
64022bdd:	int3   
64022bde:	int3   
64022bdf:	int3   
64022be0:	mov    ecx,DWORD PTR [ebp-0x10]
64022be3:	jmp    0x6401272b
64022be8:	mov    edx,DWORD PTR [esp+0x8]
64022bec:	lea    eax,[edx-0x8]
64022bef:	mov    ecx,DWORD PTR [edx-0xc]
64022bf2:	xor    ecx,eax
64022bf4:	call   0x64012e6c
64022bf9:	mov    eax,0x6402b00c
64022bfe:	jmp    0x64012b2e
64022c03:	int3   
64022c04:	int3   
64022c05:	int3   
64022c06:	int3   
64022c07:	int3   
64022c08:	int3   
64022c09:	int3   
64022c0a:	int3   
64022c0b:	int3   
64022c0c:	int3   
64022c0d:	int3   
64022c0e:	int3   
64022c0f:	int3   
64022c10:	mov    eax,DWORD PTR [ebp-0x34]
64022c13:	and    eax,0x1
64022c16:	je     0x64022c28
64022c1c:	and    DWORD PTR [ebp-0x34],0xfffffffe
64022c20:	mov    ecx,DWORD PTR [ebp-0x30]
64022c23:	jmp    0x64001650
64022c28:	ret    
64022c29:	lea    ecx,[ebp-0x2c]
64022c2c:	jmp    0x64001650
64022c31:	lea    ecx,[ebp-0x3c]
64022c34:	jmp    0x64001930
64022c39:	lea    ecx,[ebp-0x2c]
64022c3c:	jmp    0x64001650
64022c41:	lea    ecx,[ebp-0x3c]
64022c44:	jmp    0x64001930
64022c49:	lea    ecx,[ebp-0x2c]
64022c4c:	jmp    0x64001650
64022c51:	lea    ecx,[ebp-0x2c]
64022c54:	jmp    0x64001650
64022c59:	mov    edx,DWORD PTR [esp+0x8]
64022c5d:	lea    eax,[edx-0x40]
64022c60:	mov    ecx,DWORD PTR [edx-0x44]
64022c63:	xor    ecx,eax
64022c65:	call   0x64012e6c
64022c6a:	add    eax,0x10
64022c6d:	mov    ecx,DWORD PTR [edx-0x4]
64022c70:	xor    ecx,eax
64022c72:	call   0x64012e6c
64022c77:	mov    eax,0x6402b068
64022c7c:	jmp    0x64012b2e
64022c81:	int3   
64022c82:	int3   
64022c83:	int3   
64022c84:	int3   
64022c85:	int3   
64022c86:	int3   
64022c87:	int3   
64022c88:	int3   
64022c89:	int3   
64022c8a:	int3   
64022c8b:	int3   
64022c8c:	int3   
64022c8d:	int3   
64022c8e:	int3   
64022c8f:	int3   
64022c90:	lea    ecx,[ebp-0x30]
64022c93:	jmp    0x64001650
64022c98:	mov    eax,DWORD PTR [ebp-0x4c]
64022c9b:	push   eax
64022c9c:	mov    ecx,DWORD PTR [ebp-0x50]
64022c9f:	push   ecx
64022ca0:	call   0x64002c70
64022ca5:	add    esp,0x8
64022ca8:	ret    
64022ca9:	mov    edx,DWORD PTR [esp+0x8]
64022cad:	lea    eax,[edx+0xc]
64022cb0:	mov    ecx,DWORD PTR [edx-0x54]
64022cb3:	xor    ecx,eax
64022cb5:	call   0x64012e6c
64022cba:	mov    ecx,DWORD PTR [edx-0x8]
64022cbd:	xor    ecx,eax
64022cbf:	call   0x64012e6c
64022cc4:	mov    eax,0x6402b0d8
64022cc9:	jmp    0x64012b2e
64022cce:	int3   
64022ccf:	int3   
64022cd0:	mov    ecx,DWORD PTR [ebp-0x10]
64022cd3:	jmp    0x640066e0
64022cd8:	mov    edx,DWORD PTR [esp+0x8]
64022cdc:	lea    eax,[edx-0x10]
64022cdf:	mov    ecx,DWORD PTR [edx-0x14]
64022ce2:	xor    ecx,eax
64022ce4:	call   0x64012e6c
64022ce9:	mov    eax,0x6402b104
64022cee:	jmp    0x64012b2e
64022cf3:	int3   
64022cf4:	int3   
64022cf5:	int3   
64022cf6:	int3   
64022cf7:	int3   
64022cf8:	int3   
64022cf9:	int3   
64022cfa:	int3   
64022cfb:	int3   
64022cfc:	int3   
64022cfd:	int3   
64022cfe:	int3   
64022cff:	int3   
64022d00:	mov    eax,DWORD PTR [ebp-0x14]
64022d03:	push   eax
64022d04:	mov    ecx,DWORD PTR [ebp-0x18]
64022d07:	push   ecx
64022d08:	call   0x64002c70
64022d0d:	add    esp,0x8
64022d10:	ret    
64022d11:	mov    edx,DWORD PTR [esp+0x8]
64022d15:	lea    eax,[edx+0xc]
64022d18:	mov    ecx,DWORD PTR [edx-0x1c]
64022d1b:	xor    ecx,eax
64022d1d:	call   0x64012e6c
64022d22:	mov    eax,0x6402b164
64022d27:	jmp    0x64012b2e
64022d2c:	int3   
64022d2d:	int3   
64022d2e:	int3   
64022d2f:	int3   
64022d30:	mov    ecx,DWORD PTR [ebp-0x10]
64022d33:	jmp    0x640066e0
64022d38:	mov    edx,DWORD PTR [esp+0x8]
64022d3c:	lea    eax,[edx-0xc]
64022d3f:	mov    ecx,DWORD PTR [edx-0x10]
64022d42:	xor    ecx,eax
64022d44:	call   0x64012e6c
64022d49:	mov    eax,0x6402b190
64022d4e:	jmp    0x64012b2e
64022d53:	int3   
64022d54:	int3   
64022d55:	int3   
64022d56:	int3   
64022d57:	int3   
64022d58:	int3   
64022d59:	int3   
64022d5a:	int3   
64022d5b:	int3   
64022d5c:	int3   
64022d5d:	int3   
64022d5e:	int3   
64022d5f:	int3   
64022d60:	lea    eax,[ebp-0x10]
64022d63:	jmp    0x640016b0
64022d68:	mov    edx,DWORD PTR [esp+0x8]
64022d6c:	lea    eax,[edx-0x34]
64022d6f:	mov    ecx,DWORD PTR [edx-0x38]
64022d72:	xor    ecx,eax
64022d74:	call   0x64012e6c
64022d79:	mov    eax,0x6402b1bc
64022d7e:	jmp    0x64012b2e
64022d83:	int3   
64022d84:	int3   
64022d85:	int3   
64022d86:	int3   
64022d87:	int3   
64022d88:	int3   
64022d89:	int3   
64022d8a:	int3   
64022d8b:	int3   
64022d8c:	int3   
64022d8d:	int3   
64022d8e:	int3   
64022d8f:	int3   
64022d90:	lea    ecx,[ebp-0x54]
64022d93:	jmp    0x64001650
64022d98:	mov    edx,DWORD PTR [esp+0x8]
64022d9c:	lea    eax,[edx-0x4c]
64022d9f:	mov    ecx,DWORD PTR [edx-0x50]
64022da2:	xor    ecx,eax
64022da4:	call   0x64012e6c
64022da9:	mov    eax,0x6402b1e8
64022dae:	jmp    0x64012b2e
64022db3:	int3   
64022db4:	int3   
64022db5:	int3   
64022db6:	int3   
64022db7:	int3   
64022db8:	int3   
64022db9:	int3   
64022dba:	int3   
64022dbb:	int3   
64022dbc:	int3   
64022dbd:	int3   
64022dbe:	int3   
64022dbf:	int3   
64022dc0:	lea    ecx,[ebp-0x30]
64022dc3:	jmp    0x64001650
64022dc8:	mov    edx,DWORD PTR [esp+0x8]
64022dcc:	lea    eax,[edx+0xc]
64022dcf:	mov    ecx,DWORD PTR [edx-0x44]
64022dd2:	xor    ecx,eax
64022dd4:	call   0x64012e6c
64022dd9:	mov    ecx,DWORD PTR [edx-0x8]
64022ddc:	xor    ecx,eax
64022dde:	call   0x64012e6c
64022de3:	mov    eax,0x6402b27c
64022de8:	jmp    0x64012b2e
64022ded:	int3   
64022dee:	int3   
64022def:	int3   
64022df0:	lea    ecx,[ebp-0x54]
64022df3:	jmp    0x64001650
64022df8:	mov    edx,DWORD PTR [esp+0x8]
64022dfc:	lea    eax,[edx-0x5c]
64022dff:	mov    ecx,DWORD PTR [edx-0x60]
64022e02:	xor    ecx,eax
64022e04:	call   0x64012e6c
64022e09:	mov    eax,0x6402b2a8
64022e0e:	jmp    0x64012b2e
64022e13:	int3   
64022e14:	int3   
64022e15:	int3   
64022e16:	int3   
64022e17:	int3   
64022e18:	int3   
64022e19:	int3   
64022e1a:	int3   
64022e1b:	int3   
64022e1c:	int3   
64022e1d:	int3   
64022e1e:	int3   
64022e1f:	int3   
64022e20:	lea    ecx,[ebp-0x54]
64022e23:	jmp    0x64001650
64022e28:	mov    edx,DWORD PTR [esp+0x8]
64022e2c:	lea    eax,[edx-0x5c]
64022e2f:	mov    ecx,DWORD PTR [edx-0x60]
64022e32:	xor    ecx,eax
64022e34:	call   0x64012e6c
64022e39:	mov    eax,0x6402b2d4
64022e3e:	jmp    0x64012b2e
64022e43:	int3   
64022e44:	int3   
64022e45:	int3   
64022e46:	int3   
64022e47:	int3   
64022e48:	int3   
64022e49:	int3   
64022e4a:	int3   
64022e4b:	int3   
64022e4c:	int3   
64022e4d:	int3   
64022e4e:	int3   
64022e4f:	int3   
64022e50:	lea    ecx,[ebp-0x54]
64022e53:	jmp    0x64001650
64022e58:	mov    edx,DWORD PTR [esp+0x8]
64022e5c:	lea    eax,[edx-0x5c]
64022e5f:	mov    ecx,DWORD PTR [edx-0x60]
64022e62:	xor    ecx,eax
64022e64:	call   0x64012e6c
64022e69:	mov    eax,0x6402b300
64022e6e:	jmp    0x64012b2e
64022e73:	int3   
64022e74:	int3   
64022e75:	int3   
64022e76:	int3   
64022e77:	int3   
64022e78:	int3   
64022e79:	int3   
64022e7a:	int3   
64022e7b:	int3   
64022e7c:	int3   
64022e7d:	int3   
64022e7e:	int3   
64022e7f:	int3   
64022e80:	lea    ecx,[ebp-0x54]
64022e83:	jmp    0x64001650
64022e88:	mov    edx,DWORD PTR [esp+0x8]
64022e8c:	lea    eax,[edx-0x5c]
64022e8f:	mov    ecx,DWORD PTR [edx-0x60]
64022e92:	xor    ecx,eax
64022e94:	call   0x64012e6c
64022e99:	mov    eax,0x6402b32c
64022e9e:	jmp    0x64012b2e
64022ea3:	int3   
64022ea4:	int3   
64022ea5:	int3   
64022ea6:	int3   
64022ea7:	int3   
64022ea8:	int3   
64022ea9:	int3   
64022eaa:	int3   
64022eab:	int3   
64022eac:	int3   
64022ead:	int3   
64022eae:	int3   
64022eaf:	int3   
64022eb0:	lea    ecx,[ebp-0x50]
64022eb3:	jmp    0x64001650
64022eb8:	mov    edx,DWORD PTR [esp+0x8]
64022ebc:	lea    eax,[edx-0x54]
64022ebf:	mov    ecx,DWORD PTR [edx-0x58]
64022ec2:	xor    ecx,eax
64022ec4:	call   0x64012e6c
64022ec9:	mov    eax,0x6402b358
64022ece:	jmp    0x64012b2e
64022ed3:	int3   
64022ed4:	int3   
64022ed5:	int3   
64022ed6:	int3   
64022ed7:	int3   
64022ed8:	int3   
64022ed9:	int3   
64022eda:	int3   
64022edb:	int3   
64022edc:	int3   
64022edd:	int3   
64022ede:	int3   
64022edf:	int3   
64022ee0:	lea    ecx,[ebp-0x64]
64022ee3:	jmp    0x640066e0
64022ee8:	lea    ecx,[ebp-0x48]
64022eeb:	jmp    0x64006960
64022ef0:	mov    edx,DWORD PTR [esp+0x8]
64022ef4:	lea    eax,[edx-0x6c]
64022ef7:	mov    ecx,DWORD PTR [edx-0x70]
64022efa:	xor    ecx,eax
64022efc:	call   0x64012e6c
64022f01:	mov    eax,0x6402b38c
64022f06:	jmp    0x64012b2e
64022f0b:	int3   
64022f0c:	int3   
64022f0d:	int3   
64022f0e:	int3   
64022f0f:	int3   
64022f10:	lea    ecx,[ebp-0x64]
64022f13:	jmp    0x64001650
64022f18:	lea    ecx,[ebp-0x48]
64022f1b:	jmp    0x64006910
64022f20:	mov    edx,DWORD PTR [esp+0x8]
64022f24:	lea    eax,[edx-0x6c]
64022f27:	mov    ecx,DWORD PTR [edx-0x70]
64022f2a:	xor    ecx,eax
64022f2c:	call   0x64012e6c
64022f31:	mov    eax,0x6402b3c0
64022f36:	jmp    0x64012b2e
64022f3b:	int3   
64022f3c:	int3   
64022f3d:	int3   
64022f3e:	int3   
64022f3f:	int3   
64022f40:	lea    ecx,[ebp-0x50]
64022f43:	jmp    0x64001650
64022f48:	mov    edx,DWORD PTR [esp+0x8]
64022f4c:	lea    eax,[edx-0x54]
64022f4f:	mov    ecx,DWORD PTR [edx-0x58]
64022f52:	xor    ecx,eax
64022f54:	call   0x64012e6c
64022f59:	mov    eax,0x6402b3ec
64022f5e:	jmp    0x64012b2e
64022f63:	int3   
64022f64:	int3   
64022f65:	int3   
64022f66:	int3   
64022f67:	int3   
64022f68:	int3   
64022f69:	int3   
64022f6a:	int3   
64022f6b:	int3   
64022f6c:	int3   
64022f6d:	int3   
64022f6e:	int3   
64022f6f:	int3   
64022f70:	mov    eax,ds:0x64031338
64022f75:	and    eax,0xfffffffe
64022f78:	mov    ds:0x64031338,eax
64022f7d:	ret    
64022f7e:	mov    edx,DWORD PTR [esp+0x8]
64022f82:	lea    eax,[edx]
64022f84:	mov    ecx,DWORD PTR [edx-0x4]
64022f87:	xor    ecx,eax
64022f89:	call   0x64012e6c
64022f8e:	mov    eax,0x6402b418
64022f93:	jmp    0x64012b2e
64022f98:	int3   
64022f99:	int3   
64022f9a:	int3   
64022f9b:	int3   
64022f9c:	int3   
64022f9d:	int3   
64022f9e:	int3   
64022f9f:	int3   
64022fa0:	mov    eax,ds:0x6403133c
64022fa5:	and    eax,0xfffffffe
64022fa8:	mov    ds:0x6403133c,eax
64022fad:	ret    
64022fae:	mov    edx,DWORD PTR [esp+0x8]
64022fb2:	lea    eax,[edx]
64022fb4:	mov    ecx,DWORD PTR [edx-0x4]
64022fb7:	xor    ecx,eax
64022fb9:	call   0x64012e6c
64022fbe:	mov    eax,0x6402b444
64022fc3:	jmp    0x64012b2e
64022fc8:	int3   
64022fc9:	int3   
64022fca:	int3   
64022fcb:	int3   
64022fcc:	int3   
64022fcd:	int3   
64022fce:	int3   
64022fcf:	int3   
64022fd0:	int3   
64022fd1:	int3   
64022fd2:	int3   
64022fd3:	int3   
64022fd4:	int3   
64022fd5:	int3   
64022fd6:	int3   
64022fd7:	int3   
64022fd8:	int3   
64022fd9:	int3   
64022fda:	int3   
64022fdb:	int3   
64022fdc:	int3   
64022fdd:	int3   
64022fde:	int3   
64022fdf:	int3   
64022fe0:	lea    ecx,[ebp-0x4c]
64022fe3:	jmp    0x640066e0
64022fe8:	lea    ecx,[ebp-0x30]
64022feb:	jmp    0x640066e0
64022ff0:	mov    edx,DWORD PTR [esp+0x8]
64022ff4:	lea    eax,[edx-0x5c]
64022ff7:	mov    ecx,DWORD PTR [edx-0x60]
64022ffa:	xor    ecx,eax
64022ffc:	call   0x64012e6c
64023001:	add    eax,0xc
64023004:	mov    ecx,DWORD PTR [edx-0x8]
64023007:	xor    ecx,eax
64023009:	call   0x64012e6c
6402300e:	mov    eax,0x6402b478
64023013:	jmp    0x64012b2e
64023018:	int3   
64023019:	int3   
6402301a:	int3   
6402301b:	int3   
6402301c:	int3   
6402301d:	int3   
6402301e:	int3   
6402301f:	int3   
64023020:	lea    ecx,[ebp-0x4c]
64023023:	jmp    0x64001650
64023028:	lea    ecx,[ebp-0x30]
6402302b:	jmp    0x64001650
64023030:	mov    edx,DWORD PTR [esp+0x8]
64023034:	lea    eax,[edx-0x5c]
64023037:	mov    ecx,DWORD PTR [edx-0x60]
6402303a:	xor    ecx,eax
6402303c:	call   0x64012e6c
64023041:	add    eax,0xc
64023044:	mov    ecx,DWORD PTR [edx-0x8]
64023047:	xor    ecx,eax
64023049:	call   0x64012e6c
6402304e:	mov    eax,0x6402b4ac
64023053:	jmp    0x64012b2e
64023058:	int3   
64023059:	int3   
6402305a:	int3   
6402305b:	int3   
6402305c:	int3   
6402305d:	int3   
6402305e:	int3   
6402305f:	int3   
64023060:	lea    ecx,[ebp+0x4]
64023063:	jmp    0x64001930
64023068:	mov    edx,DWORD PTR [esp+0x8]
6402306c:	lea    eax,[edx-0x30]
6402306f:	mov    ecx,DWORD PTR [edx-0x34]
64023072:	xor    ecx,eax
64023074:	call   0x64012e6c
64023079:	add    eax,0xc
6402307c:	mov    ecx,DWORD PTR [edx-0x4]
6402307f:	xor    ecx,eax
64023081:	call   0x64012e6c
64023086:	mov    eax,0x6402b4d8
6402308b:	jmp    0x64012b2e
64023090:	mov    ecx,DWORD PTR [ebp-0x10]
64023093:	jmp    0x64001930
64023098:	mov    edx,DWORD PTR [esp+0x8]
6402309c:	lea    eax,[edx-0xc]
6402309f:	mov    ecx,DWORD PTR [edx-0x10]
640230a2:	xor    ecx,eax
640230a4:	call   0x64012e6c
640230a9:	mov    eax,0x6402b504
640230ae:	jmp    0x64012b2e
640230b3:	int3   
640230b4:	int3   
640230b5:	int3   
640230b6:	int3   
640230b7:	int3   
640230b8:	int3   
640230b9:	int3   
640230ba:	int3   
640230bb:	int3   
640230bc:	int3   
640230bd:	int3   
640230be:	int3   
640230bf:	int3   
640230c0:	lea    ecx,[ebp-0x10]
640230c3:	jmp    0x64001930
640230c8:	mov    edx,DWORD PTR [esp+0x8]
640230cc:	lea    eax,[edx-0x8]
640230cf:	mov    ecx,DWORD PTR [edx-0xc]
640230d2:	xor    ecx,eax
640230d4:	call   0x64012e6c
640230d9:	mov    eax,0x6402b530
640230de:	jmp    0x64012b2e
640230e3:	int3   
640230e4:	int3   
640230e5:	int3   
640230e6:	int3   
640230e7:	int3   
640230e8:	int3   
640230e9:	int3   
640230ea:	int3   
640230eb:	int3   
640230ec:	int3   
640230ed:	int3   
640230ee:	int3   
640230ef:	int3   
640230f0:	mov    ecx,DWORD PTR [ebp-0x10]
640230f3:	jmp    0x64001930
640230f8:	mov    edx,DWORD PTR [esp+0x8]
640230fc:	lea    eax,[edx-0xc]
640230ff:	mov    ecx,DWORD PTR [edx-0x10]
64023102:	xor    ecx,eax
64023104:	call   0x64012e6c
64023109:	mov    eax,0x6402b55c
6402310e:	jmp    0x64012b2e
64023113:	int3   
64023114:	int3   
64023115:	int3   
64023116:	int3   
64023117:	int3   
64023118:	int3   
64023119:	int3   
6402311a:	int3   
6402311b:	int3   
6402311c:	int3   
6402311d:	int3   
6402311e:	int3   
6402311f:	int3   
64023120:	mov    eax,ds:0x6403135c
64023125:	and    eax,0xfffffffe
64023128:	mov    ds:0x6403135c,eax
6402312d:	ret    
6402312e:	mov    edx,DWORD PTR [esp+0x8]
64023132:	lea    eax,[edx-0xc]
64023135:	mov    ecx,DWORD PTR [edx-0x10]
64023138:	xor    ecx,eax
6402313a:	call   0x64012e6c
6402313f:	mov    eax,0x6402b588
64023144:	jmp    0x64012b2e
64023149:	int3   
6402314a:	int3   
6402314b:	int3   
6402314c:	int3   
6402314d:	int3   
6402314e:	int3   
6402314f:	int3   
64023150:	mov    eax,ds:0x64031364
64023155:	and    eax,0xfffffffe
64023158:	mov    ds:0x64031364,eax
6402315d:	ret    
6402315e:	mov    edx,DWORD PTR [esp+0x8]
64023162:	lea    eax,[edx-0xc]
64023165:	mov    ecx,DWORD PTR [edx-0x10]
64023168:	xor    ecx,eax
6402316a:	call   0x64012e6c
6402316f:	mov    eax,0x6402b5b4
64023174:	jmp    0x64012b2e
64023179:	int3   
6402317a:	int3   
6402317b:	int3   
6402317c:	int3   
6402317d:	int3   
6402317e:	int3   
6402317f:	int3   
64023180:	mov    eax,ds:0x6403136c
64023185:	and    eax,0xfffffffe
64023188:	mov    ds:0x6403136c,eax
6402318d:	ret    
6402318e:	mov    edx,DWORD PTR [esp+0x8]
64023192:	lea    eax,[edx-0xc]
64023195:	mov    ecx,DWORD PTR [edx-0x10]
64023198:	xor    ecx,eax
6402319a:	call   0x64012e6c
6402319f:	mov    eax,0x6402b5e0
640231a4:	jmp    0x64012b2e
640231a9:	int3   
640231aa:	int3   
640231ab:	int3   
640231ac:	int3   
640231ad:	int3   
640231ae:	int3   
640231af:	int3   
640231b0:	mov    eax,ds:0x64031374
640231b5:	and    eax,0xfffffffe
640231b8:	mov    ds:0x64031374,eax
640231bd:	ret    
640231be:	mov    edx,DWORD PTR [esp+0x8]
640231c2:	lea    eax,[edx-0xc]
640231c5:	mov    ecx,DWORD PTR [edx-0x10]
640231c8:	xor    ecx,eax
640231ca:	call   0x64012e6c
640231cf:	mov    eax,0x6402b60c
640231d4:	jmp    0x64012b2e
640231d9:	int3   
640231da:	int3   
640231db:	int3   
640231dc:	int3   
640231dd:	int3   
640231de:	int3   
640231df:	int3   
640231e0:	mov    eax,ds:0x6403137c
640231e5:	and    eax,0xfffffffe
640231e8:	mov    ds:0x6403137c,eax
640231ed:	ret    
640231ee:	mov    edx,DWORD PTR [esp+0x8]
640231f2:	lea    eax,[edx-0xc]
640231f5:	mov    ecx,DWORD PTR [edx-0x10]
640231f8:	xor    ecx,eax
640231fa:	call   0x64012e6c
640231ff:	mov    eax,0x6402b638
64023204:	jmp    0x64012b2e
64023209:	int3   
6402320a:	int3   
6402320b:	int3   
6402320c:	int3   
6402320d:	int3   
6402320e:	int3   
6402320f:	int3   
64023210:	mov    eax,ds:0x64031384
64023215:	and    eax,0xfffffffe
64023218:	mov    ds:0x64031384,eax
6402321d:	ret    
6402321e:	mov    edx,DWORD PTR [esp+0x8]
64023222:	lea    eax,[edx-0xc]
64023225:	mov    ecx,DWORD PTR [edx-0x10]
64023228:	xor    ecx,eax
6402322a:	call   0x64012e6c
6402322f:	mov    eax,0x6402b664
64023234:	jmp    0x64012b2e
64023239:	int3   
6402323a:	int3   
6402323b:	int3   
6402323c:	int3   
6402323d:	int3   
6402323e:	int3   
6402323f:	int3   
64023240:	mov    eax,ds:0x6403138c
64023245:	and    eax,0xfffffffe
64023248:	mov    ds:0x6403138c,eax
6402324d:	ret    
6402324e:	mov    edx,DWORD PTR [esp+0x8]
64023252:	lea    eax,[edx-0xc]
64023255:	mov    ecx,DWORD PTR [edx-0x10]
64023258:	xor    ecx,eax
6402325a:	call   0x64012e6c
6402325f:	mov    eax,0x6402b690
64023264:	jmp    0x64012b2e
64023269:	int3   
6402326a:	int3   
6402326b:	int3   
6402326c:	int3   
6402326d:	int3   
6402326e:	int3   
6402326f:	int3   
64023270:	mov    eax,ds:0x64031394
64023275:	and    eax,0xfffffffe
64023278:	mov    ds:0x64031394,eax
6402327d:	ret    
6402327e:	mov    edx,DWORD PTR [esp+0x8]
64023282:	lea    eax,[edx-0xc]
64023285:	mov    ecx,DWORD PTR [edx-0x10]
64023288:	xor    ecx,eax
6402328a:	call   0x64012e6c
6402328f:	mov    eax,0x6402b6bc
64023294:	jmp    0x64012b2e
64023299:	int3   
6402329a:	int3   
6402329b:	int3   
6402329c:	int3   
6402329d:	int3   
6402329e:	int3   
6402329f:	int3   
640232a0:	mov    eax,ds:0x6403139c
640232a5:	and    eax,0xfffffffe
640232a8:	mov    ds:0x6403139c,eax
640232ad:	ret    
640232ae:	mov    edx,DWORD PTR [esp+0x8]
640232b2:	lea    eax,[edx-0xc]
640232b5:	mov    ecx,DWORD PTR [edx-0x10]
640232b8:	xor    ecx,eax
640232ba:	call   0x64012e6c
640232bf:	mov    eax,0x6402b6e8
640232c4:	jmp    0x64012b2e
640232c9:	int3   
640232ca:	int3   
640232cb:	int3   
640232cc:	int3   
640232cd:	int3   
640232ce:	int3   
640232cf:	int3   
640232d0:	mov    eax,ds:0x640313a4
640232d5:	and    eax,0xfffffffe
640232d8:	mov    ds:0x640313a4,eax
640232dd:	ret    
640232de:	mov    edx,DWORD PTR [esp+0x8]
640232e2:	lea    eax,[edx-0xc]
640232e5:	mov    ecx,DWORD PTR [edx-0x10]
640232e8:	xor    ecx,eax
640232ea:	call   0x64012e6c
640232ef:	mov    eax,0x6402b714
640232f4:	jmp    0x64012b2e
640232f9:	int3   
640232fa:	int3   
640232fb:	int3   
640232fc:	int3   
640232fd:	int3   
640232fe:	int3   
640232ff:	int3   
64023300:	mov    eax,ds:0x640313ac
64023305:	and    eax,0xfffffffe
64023308:	mov    ds:0x640313ac,eax
6402330d:	ret    
6402330e:	mov    edx,DWORD PTR [esp+0x8]
64023312:	lea    eax,[edx-0xc]
64023315:	mov    ecx,DWORD PTR [edx-0x10]
64023318:	xor    ecx,eax
6402331a:	call   0x64012e6c
6402331f:	mov    eax,0x6402b740
64023324:	jmp    0x64012b2e
64023329:	int3   
6402332a:	int3   
6402332b:	int3   
6402332c:	int3   
6402332d:	int3   
6402332e:	int3   
6402332f:	int3   
64023330:	mov    eax,ds:0x640313b4
64023335:	and    eax,0xfffffffe
64023338:	mov    ds:0x640313b4,eax
6402333d:	ret    
6402333e:	mov    edx,DWORD PTR [esp+0x8]
64023342:	lea    eax,[edx-0xc]
64023345:	mov    ecx,DWORD PTR [edx-0x10]
64023348:	xor    ecx,eax
6402334a:	call   0x64012e6c
6402334f:	mov    eax,0x6402b76c
64023354:	jmp    0x64012b2e
64023359:	int3   
6402335a:	int3   
6402335b:	int3   
6402335c:	int3   
6402335d:	int3   
6402335e:	int3   
6402335f:	int3   
64023360:	mov    eax,ds:0x640313bc
64023365:	and    eax,0xfffffffe
64023368:	mov    ds:0x640313bc,eax
6402336d:	ret    
6402336e:	mov    edx,DWORD PTR [esp+0x8]
64023372:	lea    eax,[edx-0xc]
64023375:	mov    ecx,DWORD PTR [edx-0x10]
64023378:	xor    ecx,eax
6402337a:	call   0x64012e6c
6402337f:	mov    eax,0x6402b798
64023384:	jmp    0x64012b2e
64023389:	int3   
6402338a:	int3   
6402338b:	int3   
6402338c:	int3   
6402338d:	int3   
6402338e:	int3   
6402338f:	int3   
64023390:	mov    eax,ds:0x640313c4
64023395:	and    eax,0xfffffffe
64023398:	mov    ds:0x640313c4,eax
6402339d:	ret    
6402339e:	mov    edx,DWORD PTR [esp+0x8]
640233a2:	lea    eax,[edx-0xc]
640233a5:	mov    ecx,DWORD PTR [edx-0x10]
640233a8:	xor    ecx,eax
640233aa:	call   0x64012e6c
640233af:	mov    eax,0x6402b7c4
640233b4:	jmp    0x64012b2e
640233b9:	int3   
640233ba:	int3   
640233bb:	int3   
640233bc:	int3   
640233bd:	int3   
640233be:	int3   
640233bf:	int3   
640233c0:	mov    eax,ds:0x640313cc
640233c5:	and    eax,0xfffffffe
640233c8:	mov    ds:0x640313cc,eax
640233cd:	ret    
640233ce:	mov    edx,DWORD PTR [esp+0x8]
640233d2:	lea    eax,[edx-0xc]
640233d5:	mov    ecx,DWORD PTR [edx-0x10]
640233d8:	xor    ecx,eax
640233da:	call   0x64012e6c
640233df:	mov    eax,0x6402b7f0
640233e4:	jmp    0x64012b2e
640233e9:	int3   
640233ea:	int3   
640233eb:	int3   
640233ec:	int3   
640233ed:	int3   
640233ee:	int3   
640233ef:	int3   
640233f0:	mov    eax,ds:0x640313d4
640233f5:	and    eax,0xfffffffe
640233f8:	mov    ds:0x640313d4,eax
640233fd:	ret    
640233fe:	mov    edx,DWORD PTR [esp+0x8]
64023402:	lea    eax,[edx-0xc]
64023405:	mov    ecx,DWORD PTR [edx-0x10]
64023408:	xor    ecx,eax
6402340a:	call   0x64012e6c
6402340f:	mov    eax,0x6402b81c
64023414:	jmp    0x64012b2e
64023419:	int3   
6402341a:	int3   
6402341b:	int3   
6402341c:	int3   
6402341d:	int3   
6402341e:	int3   
6402341f:	int3   
64023420:	mov    eax,ds:0x640313dc
64023425:	and    eax,0xfffffffe
64023428:	mov    ds:0x640313dc,eax
6402342d:	ret    
6402342e:	mov    edx,DWORD PTR [esp+0x8]
64023432:	lea    eax,[edx-0xc]
64023435:	mov    ecx,DWORD PTR [edx-0x10]
64023438:	xor    ecx,eax
6402343a:	call   0x64012e6c
6402343f:	mov    eax,0x6402b848
64023444:	jmp    0x64012b2e
64023449:	int3   
6402344a:	int3   
6402344b:	int3   
6402344c:	int3   
6402344d:	int3   
6402344e:	int3   
6402344f:	int3   
64023450:	mov    eax,ds:0x640313e4
64023455:	and    eax,0xfffffffe
64023458:	mov    ds:0x640313e4,eax
6402345d:	ret    
6402345e:	mov    edx,DWORD PTR [esp+0x8]
64023462:	lea    eax,[edx-0xc]
64023465:	mov    ecx,DWORD PTR [edx-0x10]
64023468:	xor    ecx,eax
6402346a:	call   0x64012e6c
6402346f:	mov    eax,0x6402b874
64023474:	jmp    0x64012b2e
64023479:	int3   
6402347a:	int3   
6402347b:	int3   
6402347c:	int3   
6402347d:	int3   
6402347e:	int3   
6402347f:	int3   
64023480:	mov    eax,ds:0x640313ec
64023485:	and    eax,0xfffffffe
64023488:	mov    ds:0x640313ec,eax
6402348d:	ret    
6402348e:	mov    edx,DWORD PTR [esp+0x8]
64023492:	lea    eax,[edx-0xc]
64023495:	mov    ecx,DWORD PTR [edx-0x10]
64023498:	xor    ecx,eax
6402349a:	call   0x64012e6c
6402349f:	mov    eax,0x6402b8a0
640234a4:	jmp    0x64012b2e
640234a9:	int3   
640234aa:	int3   
640234ab:	int3   
640234ac:	int3   
640234ad:	int3   
640234ae:	int3   
640234af:	int3   
640234b0:	mov    eax,ds:0x640313f4
640234b5:	and    eax,0xfffffffe
640234b8:	mov    ds:0x640313f4,eax
640234bd:	ret    
640234be:	mov    edx,DWORD PTR [esp+0x8]
640234c2:	lea    eax,[edx-0xc]
640234c5:	mov    ecx,DWORD PTR [edx-0x10]
640234c8:	xor    ecx,eax
640234ca:	call   0x64012e6c
640234cf:	mov    eax,0x6402b8cc
640234d4:	jmp    0x64012b2e
640234d9:	int3   
640234da:	int3   
640234db:	int3   
640234dc:	int3   
640234dd:	int3   
640234de:	int3   
640234df:	int3   
640234e0:	mov    eax,ds:0x640313fc
640234e5:	and    eax,0xfffffffe
640234e8:	mov    ds:0x640313fc,eax
640234ed:	ret    
640234ee:	mov    edx,DWORD PTR [esp+0x8]
640234f2:	lea    eax,[edx-0xc]
640234f5:	mov    ecx,DWORD PTR [edx-0x10]
640234f8:	xor    ecx,eax
640234fa:	call   0x64012e6c
640234ff:	mov    eax,0x6402b8f8
64023504:	jmp    0x64012b2e
64023509:	int3   
6402350a:	int3   
6402350b:	int3   
6402350c:	int3   
6402350d:	int3   
6402350e:	int3   
6402350f:	int3   
64023510:	mov    eax,ds:0x64031404
64023515:	and    eax,0xfffffffe
64023518:	mov    ds:0x64031404,eax
6402351d:	ret    
6402351e:	mov    edx,DWORD PTR [esp+0x8]
64023522:	lea    eax,[edx-0xc]
64023525:	mov    ecx,DWORD PTR [edx-0x10]
64023528:	xor    ecx,eax
6402352a:	call   0x64012e6c
6402352f:	mov    eax,0x6402b924
64023534:	jmp    0x64012b2e
64023539:	int3   
6402353a:	int3   
6402353b:	int3   
6402353c:	int3   
6402353d:	int3   
6402353e:	int3   
6402353f:	int3   
64023540:	mov    eax,ds:0x6403140c
64023545:	and    eax,0xfffffffe
64023548:	mov    ds:0x6403140c,eax
6402354d:	ret    
6402354e:	mov    edx,DWORD PTR [esp+0x8]
64023552:	lea    eax,[edx-0xc]
64023555:	mov    ecx,DWORD PTR [edx-0x10]
64023558:	xor    ecx,eax
6402355a:	call   0x64012e6c
6402355f:	mov    eax,0x6402b950
64023564:	jmp    0x64012b2e
64023569:	int3   
6402356a:	int3   
6402356b:	int3   
6402356c:	int3   
6402356d:	int3   
6402356e:	int3   
6402356f:	int3   
64023570:	mov    eax,ds:0x64031414
64023575:	and    eax,0xfffffffe
64023578:	mov    ds:0x64031414,eax
6402357d:	ret    
6402357e:	mov    edx,DWORD PTR [esp+0x8]
64023582:	lea    eax,[edx-0xc]
64023585:	mov    ecx,DWORD PTR [edx-0x10]
64023588:	xor    ecx,eax
6402358a:	call   0x64012e6c
6402358f:	mov    eax,0x6402b97c
64023594:	jmp    0x64012b2e
64023599:	int3   
6402359a:	int3   
6402359b:	int3   
6402359c:	int3   
6402359d:	int3   
6402359e:	int3   
6402359f:	int3   
640235a0:	mov    eax,ds:0x6403141c
640235a5:	and    eax,0xfffffffe
640235a8:	mov    ds:0x6403141c,eax
640235ad:	ret    
640235ae:	mov    edx,DWORD PTR [esp+0x8]
640235b2:	lea    eax,[edx-0xc]
640235b5:	mov    ecx,DWORD PTR [edx-0x10]
640235b8:	xor    ecx,eax
640235ba:	call   0x64012e6c
640235bf:	mov    eax,0x6402b9a8
640235c4:	jmp    0x64012b2e
640235c9:	int3   
640235ca:	int3   
640235cb:	int3   
640235cc:	int3   
640235cd:	int3   
640235ce:	int3   
640235cf:	int3   
640235d0:	mov    eax,ds:0x64031424
640235d5:	and    eax,0xfffffffe
640235d8:	mov    ds:0x64031424,eax
640235dd:	ret    
640235de:	mov    edx,DWORD PTR [esp+0x8]
640235e2:	lea    eax,[edx-0xc]
640235e5:	mov    ecx,DWORD PTR [edx-0x10]
640235e8:	xor    ecx,eax
640235ea:	call   0x64012e6c
640235ef:	mov    eax,0x6402b9d4
640235f4:	jmp    0x64012b2e
640235f9:	int3   
640235fa:	int3   
640235fb:	int3   
640235fc:	int3   
640235fd:	int3   
640235fe:	int3   
640235ff:	int3   
64023600:	mov    eax,ds:0x6403142c
64023605:	and    eax,0xfffffffe
64023608:	mov    ds:0x6403142c,eax
6402360d:	ret    
6402360e:	mov    edx,DWORD PTR [esp+0x8]
64023612:	lea    eax,[edx-0xc]
64023615:	mov    ecx,DWORD PTR [edx-0x10]
64023618:	xor    ecx,eax
6402361a:	call   0x64012e6c
6402361f:	mov    eax,0x6402ba00
64023624:	jmp    0x64012b2e
64023629:	int3   
6402362a:	int3   
6402362b:	int3   
6402362c:	int3   
6402362d:	int3   
6402362e:	int3   
6402362f:	int3   
64023630:	mov    eax,ds:0x64031434
64023635:	and    eax,0xfffffffe
64023638:	mov    ds:0x64031434,eax
6402363d:	ret    
6402363e:	mov    edx,DWORD PTR [esp+0x8]
64023642:	lea    eax,[edx-0xc]
64023645:	mov    ecx,DWORD PTR [edx-0x10]
64023648:	xor    ecx,eax
6402364a:	call   0x64012e6c
6402364f:	mov    eax,0x6402ba2c
64023654:	jmp    0x64012b2e
64023659:	int3   
6402365a:	int3   
6402365b:	int3   
6402365c:	int3   
6402365d:	int3   
6402365e:	int3   
6402365f:	int3   
64023660:	mov    eax,ds:0x6403143c
64023665:	and    eax,0xfffffffe
64023668:	mov    ds:0x6403143c,eax
6402366d:	ret    
6402366e:	mov    edx,DWORD PTR [esp+0x8]
64023672:	lea    eax,[edx-0xc]
64023675:	mov    ecx,DWORD PTR [edx-0x10]
64023678:	xor    ecx,eax
6402367a:	call   0x64012e6c
6402367f:	mov    eax,0x6402ba58
64023684:	jmp    0x64012b2e
64023689:	int3   
6402368a:	int3   
6402368b:	int3   
6402368c:	int3   
6402368d:	int3   
6402368e:	int3   
6402368f:	int3   
64023690:	mov    eax,ds:0x64031444
64023695:	and    eax,0xfffffffe
64023698:	mov    ds:0x64031444,eax
6402369d:	ret    
6402369e:	mov    edx,DWORD PTR [esp+0x8]
640236a2:	lea    eax,[edx-0xc]
640236a5:	mov    ecx,DWORD PTR [edx-0x10]
640236a8:	xor    ecx,eax
640236aa:	call   0x64012e6c
640236af:	mov    eax,0x6402ba84
640236b4:	jmp    0x64012b2e
640236b9:	int3   
640236ba:	int3   
640236bb:	int3   
640236bc:	int3   
640236bd:	int3   
640236be:	int3   
640236bf:	int3   
640236c0:	mov    eax,ds:0x6403144c
640236c5:	and    eax,0xfffffffe
640236c8:	mov    ds:0x6403144c,eax
640236cd:	ret    
640236ce:	mov    edx,DWORD PTR [esp+0x8]
640236d2:	lea    eax,[edx-0xc]
640236d5:	mov    ecx,DWORD PTR [edx-0x10]
640236d8:	xor    ecx,eax
640236da:	call   0x64012e6c
640236df:	mov    eax,0x6402bab0
640236e4:	jmp    0x64012b2e
640236e9:	int3   
640236ea:	int3   
640236eb:	int3   
640236ec:	int3   
640236ed:	int3   
640236ee:	int3   
640236ef:	int3   
640236f0:	mov    eax,ds:0x64031454
640236f5:	and    eax,0xfffffffe
640236f8:	mov    ds:0x64031454,eax
640236fd:	ret    
640236fe:	mov    edx,DWORD PTR [esp+0x8]
64023702:	lea    eax,[edx-0xc]
64023705:	mov    ecx,DWORD PTR [edx-0x10]
64023708:	xor    ecx,eax
6402370a:	call   0x64012e6c
6402370f:	mov    eax,0x6402badc
64023714:	jmp    0x64012b2e
64023719:	int3   
6402371a:	int3   
6402371b:	int3   
6402371c:	int3   
6402371d:	int3   
6402371e:	int3   
6402371f:	int3   
64023720:	mov    eax,ds:0x6403145c
64023725:	and    eax,0xfffffffe
64023728:	mov    ds:0x6403145c,eax
6402372d:	ret    
6402372e:	mov    edx,DWORD PTR [esp+0x8]
64023732:	lea    eax,[edx-0xc]
64023735:	mov    ecx,DWORD PTR [edx-0x10]
64023738:	xor    ecx,eax
6402373a:	call   0x64012e6c
6402373f:	mov    eax,0x6402bb08
64023744:	jmp    0x64012b2e
64023749:	int3   
6402374a:	int3   
6402374b:	int3   
6402374c:	int3   
6402374d:	int3   
6402374e:	int3   
6402374f:	int3   
64023750:	mov    eax,ds:0x64031464
64023755:	and    eax,0xfffffffe
64023758:	mov    ds:0x64031464,eax
6402375d:	ret    
6402375e:	mov    edx,DWORD PTR [esp+0x8]
64023762:	lea    eax,[edx-0xc]
64023765:	mov    ecx,DWORD PTR [edx-0x10]
64023768:	xor    ecx,eax
6402376a:	call   0x64012e6c
6402376f:	mov    eax,0x6402bb34
64023774:	jmp    0x64012b2e
64023779:	int3   
6402377a:	int3   
6402377b:	int3   
6402377c:	int3   
6402377d:	int3   
6402377e:	int3   
6402377f:	int3   
64023780:	mov    eax,ds:0x6403146c
64023785:	and    eax,0xfffffffe
64023788:	mov    ds:0x6403146c,eax
6402378d:	ret    
6402378e:	mov    edx,DWORD PTR [esp+0x8]
64023792:	lea    eax,[edx-0xc]
64023795:	mov    ecx,DWORD PTR [edx-0x10]
64023798:	xor    ecx,eax
6402379a:	call   0x64012e6c
6402379f:	mov    eax,0x6402bb60
640237a4:	jmp    0x64012b2e
640237a9:	int3   
640237aa:	int3   
640237ab:	int3   
640237ac:	int3   
640237ad:	int3   
640237ae:	int3   
640237af:	int3   
640237b0:	mov    eax,ds:0x64031474
640237b5:	and    eax,0xfffffffe
640237b8:	mov    ds:0x64031474,eax
640237bd:	ret    
640237be:	mov    edx,DWORD PTR [esp+0x8]
640237c2:	lea    eax,[edx-0xc]
640237c5:	mov    ecx,DWORD PTR [edx-0x10]
640237c8:	xor    ecx,eax
640237ca:	call   0x64012e6c
640237cf:	mov    eax,0x6402bb8c
640237d4:	jmp    0x64012b2e
640237d9:	int3   
640237da:	int3   
640237db:	int3   
640237dc:	int3   
640237dd:	int3   
640237de:	int3   
640237df:	int3   
640237e0:	mov    eax,ds:0x6403147c
640237e5:	and    eax,0xfffffffe
640237e8:	mov    ds:0x6403147c,eax
640237ed:	ret    
640237ee:	mov    edx,DWORD PTR [esp+0x8]
640237f2:	lea    eax,[edx-0xc]
640237f5:	mov    ecx,DWORD PTR [edx-0x10]
640237f8:	xor    ecx,eax
640237fa:	call   0x64012e6c
640237ff:	mov    eax,0x6402bbb8
64023804:	jmp    0x64012b2e
64023809:	int3   
6402380a:	int3   
6402380b:	int3   
6402380c:	int3   
6402380d:	int3   
6402380e:	int3   
6402380f:	int3   
64023810:	mov    eax,ds:0x64031484
64023815:	and    eax,0xfffffffe
64023818:	mov    ds:0x64031484,eax
6402381d:	ret    
6402381e:	mov    edx,DWORD PTR [esp+0x8]
64023822:	lea    eax,[edx-0xc]
64023825:	mov    ecx,DWORD PTR [edx-0x10]
64023828:	xor    ecx,eax
6402382a:	call   0x64012e6c
6402382f:	mov    eax,0x6402bbe4
64023834:	jmp    0x64012b2e
64023839:	int3   
6402383a:	int3   
6402383b:	int3   
6402383c:	int3   
6402383d:	int3   
6402383e:	int3   
6402383f:	int3   
64023840:	mov    eax,ds:0x6403148c
64023845:	and    eax,0xfffffffe
64023848:	mov    ds:0x6403148c,eax
6402384d:	ret    
6402384e:	mov    edx,DWORD PTR [esp+0x8]
64023852:	lea    eax,[edx-0xc]
64023855:	mov    ecx,DWORD PTR [edx-0x10]
64023858:	xor    ecx,eax
6402385a:	call   0x64012e6c
6402385f:	mov    eax,0x6402bc10
64023864:	jmp    0x64012b2e
64023869:	int3   
6402386a:	int3   
6402386b:	int3   
6402386c:	int3   
6402386d:	int3   
6402386e:	int3   
6402386f:	int3   
64023870:	mov    eax,ds:0x64031494
64023875:	and    eax,0xfffffffe
64023878:	mov    ds:0x64031494,eax
6402387d:	ret    
6402387e:	mov    edx,DWORD PTR [esp+0x8]
64023882:	lea    eax,[edx-0xc]
64023885:	mov    ecx,DWORD PTR [edx-0x10]
64023888:	xor    ecx,eax
6402388a:	call   0x64012e6c
6402388f:	mov    eax,0x6402bc3c
64023894:	jmp    0x64012b2e
64023899:	int3   
6402389a:	int3   
6402389b:	int3   
6402389c:	int3   
6402389d:	int3   
6402389e:	int3   
6402389f:	int3   
640238a0:	mov    eax,ds:0x6403149c
640238a5:	and    eax,0xfffffffe
640238a8:	mov    ds:0x6403149c,eax
640238ad:	ret    
640238ae:	mov    edx,DWORD PTR [esp+0x8]
640238b2:	lea    eax,[edx-0xc]
640238b5:	mov    ecx,DWORD PTR [edx-0x10]
640238b8:	xor    ecx,eax
640238ba:	call   0x64012e6c
640238bf:	mov    eax,0x6402bc68
640238c4:	jmp    0x64012b2e
640238c9:	int3   
640238ca:	int3   
640238cb:	int3   
640238cc:	int3   
640238cd:	int3   
640238ce:	int3   
640238cf:	int3   
640238d0:	lea    edi,[ebp-0x58]
640238d3:	jmp    0x64009c80
640238d8:	lea    edi,[ebp-0x40]
640238db:	jmp    0x64009c80
640238e0:	lea    edi,[ebp-0x38]
640238e3:	jmp    0x64009c80
640238e8:	lea    edi,[ebp-0x3c]
640238eb:	jmp    0x64009c80
640238f0:	lea    edi,[ebp-0x40]
640238f3:	jmp    0x64009c80
640238f8:	lea    ecx,[ebp-0x24]
640238fb:	jmp    0x64009ff0
64023900:	mov    edx,DWORD PTR [esp+0x8]
64023904:	lea    eax,[edx-0x60]
64023907:	mov    ecx,DWORD PTR [edx-0x64]
6402390a:	xor    ecx,eax
6402390c:	call   0x64012e6c
64023911:	mov    eax,0x6402bcbc
64023916:	jmp    0x64012b2e
6402391b:	int3   
6402391c:	int3   
6402391d:	int3   
6402391e:	int3   
6402391f:	int3   
64023920:	lea    eax,[ebp-0x24]
64023923:	jmp    0x6400ab10
64023928:	lea    ecx,[ebp-0x10]
6402392b:	jmp    0x64001930
64023930:	lea    ecx,[ebp-0x18]
64023933:	jmp    0x64001930
64023938:	lea    ecx,[ebp-0x40]
6402393b:	jmp    0x64001650
64023940:	mov    edx,DWORD PTR [esp+0x8]
64023944:	lea    eax,[edx+0xc]
64023947:	mov    ecx,DWORD PTR [edx-0x44]
6402394a:	xor    ecx,eax
6402394c:	call   0x64012e6c
64023951:	mov    ecx,DWORD PTR [edx+0x294]
64023957:	xor    ecx,eax
64023959:	call   0x64012e6c
6402395e:	mov    eax,0x6402bd00
64023963:	jmp    0x64012b2e
64023968:	int3   
64023969:	int3   
6402396a:	int3   
6402396b:	int3   
6402396c:	int3   
6402396d:	int3   
6402396e:	int3   
6402396f:	int3   
64023970:	lea    ecx,[ebp-0x1005c]
64023976:	jmp    0x64001650
6402397b:	lea    ecx,[ebp-0x10074]
64023981:	jmp    0x64002760
64023986:	lea    ecx,[ebp-0x10074]
6402398c:	jmp    0x64002760
64023991:	lea    ecx,[ebp-0x1005c]
64023997:	jmp    0x64001650
6402399c:	mov    edx,DWORD PTR [esp+0x8]
640239a0:	lea    eax,[edx-0x10084]
640239a6:	mov    ecx,DWORD PTR [edx-0x10088]
640239ac:	xor    ecx,eax
640239ae:	call   0x64012e6c
640239b3:	add    eax,0x10
640239b6:	mov    ecx,DWORD PTR [edx-0x4]
640239b9:	xor    ecx,eax
640239bb:	call   0x64012e6c
640239c0:	mov    eax,0x6402bd44
640239c5:	jmp    0x64012b2e
640239ca:	int3   
640239cb:	int3   
640239cc:	int3   
640239cd:	int3   
640239ce:	int3   
640239cf:	int3   
640239d0:	lea    ecx,[ebp-0x30]
640239d3:	jmp    0x64001650
640239d8:	lea    ecx,[ebp-0x5c]
640239db:	jmp    0x64001650
640239e0:	mov    edx,DWORD PTR [esp+0x8]
640239e4:	lea    eax,[edx-0x74]
640239e7:	mov    ecx,DWORD PTR [edx-0x78]
640239ea:	xor    ecx,eax
640239ec:	call   0x64012e6c
640239f1:	add    eax,0xc
640239f4:	mov    ecx,DWORD PTR [edx-0x8]
640239f7:	xor    ecx,eax
640239f9:	call   0x64012e6c
640239fe:	mov    eax,0x6402bd78
64023a03:	jmp    0x64012b2e
64023a08:	int3   
64023a09:	int3   
64023a0a:	int3   
64023a0b:	int3   
64023a0c:	int3   
64023a0d:	int3   
64023a0e:	int3   
64023a0f:	int3   
64023a10:	mov    ecx,DWORD PTR [ebp-0x10]
64023a13:	jmp    0x64001930
64023a18:	mov    edx,DWORD PTR [esp+0x8]
64023a1c:	lea    eax,[edx-0xc]
64023a1f:	mov    ecx,DWORD PTR [edx-0x10]
64023a22:	xor    ecx,eax
64023a24:	call   0x64012e6c
64023a29:	mov    eax,0x6402bda4
64023a2e:	jmp    0x64012b2e
64023a33:	int3   
64023a34:	int3   
64023a35:	int3   
64023a36:	int3   
64023a37:	int3   
64023a38:	int3   
64023a39:	int3   
64023a3a:	int3   
64023a3b:	int3   
64023a3c:	int3   
64023a3d:	int3   
64023a3e:	int3   
64023a3f:	int3   
64023a40:	lea    ecx,[ebp-0x1c]
64023a43:	jmp    0x64001930
64023a48:	mov    edx,DWORD PTR [esp+0x8]
64023a4c:	lea    eax,[edx-0x1c]
64023a4f:	mov    ecx,DWORD PTR [edx-0x20]
64023a52:	xor    ecx,eax
64023a54:	call   0x64012e6c
64023a59:	mov    eax,0x6402bdd0
64023a5e:	jmp    0x64012b2e
64023a63:	int3   
64023a64:	int3   
64023a65:	int3   
64023a66:	int3   
64023a67:	int3   
64023a68:	int3   
64023a69:	int3   
64023a6a:	int3   
64023a6b:	int3   
64023a6c:	int3   
64023a6d:	int3   
64023a6e:	int3   
64023a6f:	int3   
64023a70:	mov    edx,DWORD PTR [esp+0x8]
64023a74:	lea    eax,[edx+0xc]
64023a77:	mov    ecx,DWORD PTR [edx-0x16c]
64023a7d:	xor    ecx,eax
64023a7f:	call   0x64012e6c
64023a84:	mov    ecx,DWORD PTR [edx-0x8]
64023a87:	xor    ecx,eax
64023a89:	call   0x64012e6c
64023a8e:	mov    eax,0x6402be28
64023a93:	jmp    0x64012b2e
64023a98:	int3   
64023a99:	int3   
64023a9a:	int3   
64023a9b:	int3   
64023a9c:	int3   
64023a9d:	int3   
64023a9e:	int3   
64023a9f:	int3   
64023aa0:	lea    ecx,[ebp+0x828]
64023aa6:	jmp    0x64001930
64023aab:	mov    eax,ds:0x640314ac
64023ab0:	and    eax,0xfffffffe
64023ab3:	mov    ds:0x640314ac,eax
64023ab8:	ret    
64023ab9:	lea    eax,[ebp-0x1c]
64023abc:	jmp    0x64004c90
64023ac1:	lea    ecx,[ebp-0x44]
64023ac4:	jmp    0x64001650
64023ac9:	lea    ecx,[ebp+0x0]
64023acc:	jmp    0x64001650
64023ad1:	lea    ecx,[ebp-0x44]
64023ad4:	jmp    0x64001650
64023ad9:	lea    ecx,[ebp-0x44]
64023adc:	jmp    0x64001650
64023ae1:	mov    edx,DWORD PTR [esp+0x8]
64023ae5:	lea    eax,[edx+0xc]
64023ae8:	mov    ecx,DWORD PTR [edx-0x54]
64023aeb:	xor    ecx,eax
64023aed:	call   0x64012e6c
64023af2:	mov    ecx,DWORD PTR [edx+0x828]
64023af8:	xor    ecx,eax
64023afa:	call   0x64012e6c
64023aff:	mov    eax,0x6402be84
64023b04:	jmp    0x64012b2e
64023b09:	int3   
64023b0a:	int3   
64023b0b:	int3   
64023b0c:	int3   
64023b0d:	int3   
64023b0e:	int3   
64023b0f:	int3   
64023b10:	lea    ecx,[ebp+0x828]
64023b16:	jmp    0x64001930
64023b1b:	mov    eax,ds:0x640314b0
64023b20:	and    eax,0xfffffffe
64023b23:	mov    ds:0x640314b0,eax
64023b28:	ret    
64023b29:	lea    eax,[ebp-0x34]
64023b2c:	jmp    0x64004c90
64023b31:	lea    ecx,[ebp-0x28]
64023b34:	jmp    0x64001650
64023b39:	lea    ecx,[ebp-0x28]
64023b3c:	jmp    0x64001650
64023b41:	lea    ecx,[ebp-0x28]
64023b44:	jmp    0x64001650
64023b49:	lea    ecx,[ebp-0x28]
64023b4c:	jmp    0x64001650
64023b51:	lea    ecx,[ebp-0x28]
64023b54:	jmp    0x64001650
64023b59:	lea    ecx,[ebp-0x28]
64023b5c:	jmp    0x64001650
64023b61:	lea    ecx,[ebp-0x28]
64023b64:	jmp    0x64001650
64023b69:	lea    ecx,[ebp-0x28]
64023b6c:	jmp    0x64001650
64023b71:	lea    ecx,[ebp-0x28]
64023b74:	jmp    0x64001650
64023b79:	lea    ecx,[ebp-0x28]
64023b7c:	jmp    0x64001650
64023b81:	lea    ecx,[ebp-0x28]
64023b84:	jmp    0x64001650
64023b89:	lea    ecx,[ebp-0x28]
64023b8c:	jmp    0x64001650
64023b91:	lea    ecx,[ebp-0x28]
64023b94:	jmp    0x64001650
64023b99:	lea    ecx,[ebp-0x28]
64023b9c:	jmp    0x64001650
64023ba1:	lea    ecx,[ebp-0x28]
64023ba4:	jmp    0x64001650
64023ba9:	lea    ecx,[ebp-0x28]
64023bac:	jmp    0x64001650
64023bb1:	lea    ecx,[ebp-0x28]
64023bb4:	jmp    0x64001650
64023bb9:	lea    ecx,[ebp-0x28]
64023bbc:	jmp    0x64001650
64023bc1:	lea    ecx,[ebp-0x28]
64023bc4:	jmp    0x64001650
64023bc9:	lea    ecx,[ebp-0x28]
64023bcc:	jmp    0x64001650
64023bd1:	lea    ecx,[ebp-0x28]
64023bd4:	jmp    0x64001650
64023bd9:	lea    ecx,[ebp-0x28]
64023bdc:	jmp    0x64001650
64023be1:	lea    ecx,[ebp+0x0]
64023be4:	jmp    0x64001650
64023be9:	lea    ecx,[ebp+0x0]
64023bec:	jmp    0x64001650
64023bf1:	lea    ecx,[ebp+0x0]
64023bf4:	jmp    0x64001650
64023bf9:	lea    ecx,[ebp+0x0]
64023bfc:	jmp    0x64001650
64023c01:	lea    ecx,[ebp+0x0]
64023c04:	jmp    0x64001650
64023c09:	lea    ecx,[ebp+0x0]
64023c0c:	jmp    0x64001650
64023c11:	lea    ecx,[ebp+0x0]
64023c14:	jmp    0x64001650
64023c19:	lea    ecx,[ebp+0x0]
64023c1c:	jmp    0x64001650
64023c21:	lea    ecx,[ebp+0x0]
64023c24:	jmp    0x64001650
64023c29:	lea    ecx,[ebp+0x0]
64023c2c:	jmp    0x64001650
64023c31:	lea    ecx,[ebp+0x0]
64023c34:	jmp    0x64001650
64023c39:	lea    ecx,[ebp+0x0]
64023c3c:	jmp    0x64001650
64023c41:	lea    ecx,[ebp+0x0]
64023c44:	jmp    0x64001650
64023c49:	lea    ecx,[ebp+0x0]
64023c4c:	jmp    0x64001650
64023c51:	lea    ecx,[ebp+0x0]
64023c54:	jmp    0x64001650
64023c59:	lea    ecx,[ebp+0x0]
64023c5c:	jmp    0x64001650
64023c61:	lea    ecx,[ebp+0x0]
64023c64:	jmp    0x64001650
64023c69:	lea    ecx,[ebp-0x28]
64023c6c:	jmp    0x64001650
64023c71:	lea    ecx,[ebp-0x28]
64023c74:	jmp    0x64001650
64023c79:	mov    edx,DWORD PTR [esp+0x8]
64023c7d:	lea    eax,[edx+0xc]
64023c80:	mov    ecx,DWORD PTR [edx-0x54]
64023c83:	xor    ecx,eax
64023c85:	call   0x64012e6c
64023c8a:	mov    ecx,DWORD PTR [edx+0x828]
64023c90:	xor    ecx,eax
64023c92:	call   0x64012e6c
64023c97:	mov    eax,0x6402c008
64023c9c:	jmp    0x64012b2e
64023ca1:	int3   
64023ca2:	int3   
64023ca3:	int3   
64023ca4:	int3   
64023ca5:	int3   
64023ca6:	int3   
64023ca7:	int3   
64023ca8:	int3   
64023ca9:	int3   
64023caa:	int3   
64023cab:	int3   
64023cac:	int3   
64023cad:	int3   
64023cae:	int3   
64023caf:	int3   
64023cb0:	lea    esi,[ebp-0x840]
64023cb6:	jmp    0x64002bd0
64023cbb:	lea    ecx,[ebp-0x848]
64023cc1:	jmp    0x64001930
64023cc6:	mov    edx,DWORD PTR [esp+0x8]
64023cca:	lea    eax,[edx-0x84c]
64023cd0:	mov    ecx,DWORD PTR [edx-0x850]
64023cd6:	xor    ecx,eax
64023cd8:	call   0x64012e6c
64023cdd:	add    eax,0xc
64023ce0:	mov    ecx,DWORD PTR [edx-0x8]
64023ce3:	xor    ecx,eax
64023ce5:	call   0x64012e6c
64023cea:	mov    eax,0x6402c03c
64023cef:	jmp    0x64012b2e
64023cf4:	int3   
64023cf5:	int3   
64023cf6:	int3   
64023cf7:	int3   
64023cf8:	int3   
64023cf9:	int3   
64023cfa:	int3   
64023cfb:	int3   
64023cfc:	int3   
64023cfd:	int3   
64023cfe:	int3   
64023cff:	int3   
64023d00:	mov    eax,DWORD PTR [ebp-0x54]
64023d03:	and    eax,0x1
64023d06:	je     0x64023d18
64023d0c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64023d10:	mov    ecx,DWORD PTR [ebp+0x4]
64023d13:	jmp    0x64001930
64023d18:	ret    
64023d19:	lea    ecx,[ebp-0x50]
64023d1c:	jmp    0x64001650
64023d21:	lea    ecx,[ebp-0x50]
64023d24:	jmp    0x64001650
64023d29:	mov    edx,DWORD PTR [esp+0x8]
64023d2d:	lea    eax,[edx-0x54]
64023d30:	mov    ecx,DWORD PTR [edx-0x58]
64023d33:	xor    ecx,eax
64023d35:	call   0x64012e6c
64023d3a:	mov    eax,0x6402c078
64023d3f:	jmp    0x64012b2e
64023d44:	int3   
64023d45:	int3   
64023d46:	int3   
64023d47:	int3   
64023d48:	int3   
64023d49:	int3   
64023d4a:	int3   
64023d4b:	int3   
64023d4c:	int3   
64023d4d:	int3   
64023d4e:	int3   
64023d4f:	int3   
64023d50:	lea    ecx,[ebp+0x4]
64023d53:	jmp    0x64001930
64023d58:	lea    ecx,[ebp-0x58]
64023d5b:	jmp    0x64001680
64023d60:	lea    ecx,[ebp-0x50]
64023d63:	jmp    0x64001650
64023d68:	lea    ecx,[ebp-0x50]
64023d6b:	jmp    0x64001650
64023d70:	mov    edx,DWORD PTR [esp+0x8]
64023d74:	lea    eax,[edx-0x58]
64023d77:	mov    ecx,DWORD PTR [edx-0x5c]
64023d7a:	xor    ecx,eax
64023d7c:	call   0x64012e6c
64023d81:	mov    eax,0x6402c0bc
64023d86:	jmp    0x64012b2e
64023d8b:	int3   
64023d8c:	int3   
64023d8d:	int3   
64023d8e:	int3   
64023d8f:	int3   
64023d90:	lea    ecx,[ebp-0x428]
64023d96:	jmp    0x64001930
64023d9b:	mov    edx,DWORD PTR [esp+0x8]
64023d9f:	lea    eax,[edx-0x42c]
64023da5:	mov    ecx,DWORD PTR [edx-0x430]
64023dab:	xor    ecx,eax
64023dad:	call   0x64012e6c
64023db2:	add    eax,0x10
64023db5:	mov    ecx,DWORD PTR [edx-0x4]
64023db8:	xor    ecx,eax
64023dba:	call   0x64012e6c
64023dbf:	mov    eax,0x6402c0e8
64023dc4:	jmp    0x64012b2e
64023dc9:	int3   
64023dca:	int3   
64023dcb:	int3   
64023dcc:	int3   
64023dcd:	int3   
64023dce:	int3   
64023dcf:	int3   
64023dd0:	lea    edi,[ebp-0x18]
64023dd3:	jmp    0x64009c80
64023dd8:	lea    edi,[ebp-0x1c]
64023ddb:	jmp    0x64009c80
64023de0:	lea    edi,[ebp-0x14]
64023de3:	jmp    0x64009c80
64023de8:	mov    edx,DWORD PTR [esp+0x8]
64023dec:	lea    eax,[edx-0x1c]
64023def:	mov    ecx,DWORD PTR [edx-0x20]
64023df2:	xor    ecx,eax
64023df4:	call   0x64012e6c
64023df9:	mov    eax,0x6402c134
64023dfe:	jmp    0x64012b2e
64023e03:	int3   
64023e04:	int3   
64023e05:	int3   
64023e06:	int3   
64023e07:	int3   
64023e08:	int3   
64023e09:	int3   
64023e0a:	int3   
64023e0b:	int3   
64023e0c:	int3   
64023e0d:	int3   
64023e0e:	int3   
64023e0f:	int3   
64023e10:	mov    eax,DWORD PTR [ebp-0x54]
64023e13:	and    eax,0x1
64023e16:	je     0x64023e28
64023e1c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64023e20:	mov    ecx,DWORD PTR [ebp+0x4]
64023e23:	jmp    0x64001930
64023e28:	ret    
64023e29:	lea    ecx,[ebp-0x50]
64023e2c:	jmp    0x64001650
64023e31:	mov    edx,DWORD PTR [esp+0x8]
64023e35:	lea    eax,[edx-0x58]
64023e38:	mov    ecx,DWORD PTR [edx-0x5c]
64023e3b:	xor    ecx,eax
64023e3d:	call   0x64012e6c
64023e42:	mov    eax,0x6402c168
64023e47:	jmp    0x64012b2e
64023e4c:	int3   
64023e4d:	int3   
64023e4e:	int3   
64023e4f:	int3   
64023e50:	mov    eax,DWORD PTR [ebp-0x28]
64023e53:	and    eax,0x1
64023e56:	je     0x64023e68
64023e5c:	and    DWORD PTR [ebp-0x28],0xfffffffe
64023e60:	mov    ecx,DWORD PTR [ebp+0x4]
64023e63:	jmp    0x64001930
64023e68:	ret    
64023e69:	lea    ecx,[ebp-0x24]
64023e6c:	jmp    0x64001930
64023e71:	lea    ecx,[ebp-0x20]
64023e74:	jmp    0x64001930
64023e79:	lea    ecx,[ebp-0x1c]
64023e7c:	jmp    0x64001930
64023e81:	lea    ecx,[ebp-0x18]
64023e84:	jmp    0x64001930
64023e89:	lea    ecx,[ebp-0x14]
64023e8c:	jmp    0x64001930
64023e91:	lea    ecx,[ebp-0x10]
64023e94:	jmp    0x64001930
64023e99:	mov    edx,DWORD PTR [esp+0x8]
64023e9d:	lea    eax,[edx-0x30]
64023ea0:	mov    ecx,DWORD PTR [edx-0x34]
64023ea3:	xor    ecx,eax
64023ea5:	call   0x64012e6c
64023eaa:	mov    eax,0x6402c1c4
64023eaf:	jmp    0x64012b2e
64023eb4:	int3   
64023eb5:	int3   
64023eb6:	int3   
64023eb7:	int3   
64023eb8:	int3   
64023eb9:	int3   
64023eba:	int3   
64023ebb:	int3   
64023ebc:	int3   
64023ebd:	int3   
64023ebe:	int3   
64023ebf:	int3   
64023ec0:	mov    eax,DWORD PTR [ebp-0x3c]
64023ec3:	and    eax,0x1
64023ec6:	je     0x64023ed8
64023ecc:	and    DWORD PTR [ebp-0x3c],0xfffffffe
64023ed0:	mov    ecx,DWORD PTR [ebp+0x4]
64023ed3:	jmp    0x64001930
64023ed8:	ret    
64023ed9:	lea    ecx,[ebp-0x50]
64023edc:	jmp    0x64001930
64023ee1:	lea    ecx,[ebp-0x38]
64023ee4:	jmp    0x64001930
64023ee9:	mov    edx,DWORD PTR [esp+0x8]
64023eed:	lea    eax,[edx-0x54]
64023ef0:	mov    ecx,DWORD PTR [edx-0x58]
64023ef3:	xor    ecx,eax
64023ef5:	call   0x64012e6c
64023efa:	mov    eax,0x6402c200
64023eff:	jmp    0x64012b2e
64023f04:	int3   
64023f05:	int3   
64023f06:	int3   
64023f07:	int3   
64023f08:	int3   
64023f09:	int3   
64023f0a:	int3   
64023f0b:	int3   
64023f0c:	int3   
64023f0d:	int3   
64023f0e:	int3   
64023f0f:	int3   
64023f10:	lea    ecx,[ebp+0xc]
64023f13:	jmp    0x64001930
64023f18:	lea    ecx,[ebp-0x28]
64023f1b:	jmp    0x64001650
64023f20:	lea    ecx,[ebp-0x6c]
64023f23:	jmp    0x64001650
64023f28:	lea    ecx,[ebp-0x88]
64023f2e:	jmp    0x64001650
64023f33:	lea    ecx,[ebp-0xc0]
64023f39:	jmp    0x64001650
64023f3e:	lea    ecx,[ebp-0xa4]
64023f44:	jmp    0x64001650
64023f49:	mov    edx,DWORD PTR [esp+0x8]
64023f4d:	lea    eax,[edx+0xc]
64023f50:	mov    ecx,DWORD PTR [edx-0xc4]
64023f56:	xor    ecx,eax
64023f58:	call   0x64012e6c
64023f5d:	mov    ecx,DWORD PTR [edx+0x80]
64023f63:	xor    ecx,eax
64023f65:	call   0x64012e6c
64023f6a:	mov    eax,0x6402c254
64023f6f:	jmp    0x64012b2e
64023f74:	int3   
64023f75:	int3   
64023f76:	int3   
64023f77:	int3   
64023f78:	int3   
64023f79:	int3   
64023f7a:	int3   
64023f7b:	int3   
64023f7c:	int3   
64023f7d:	int3   
64023f7e:	int3   
64023f7f:	int3   
64023f80:	call   0x6400cc10
64023f85:	mov    ds:0x64031294,eax
64023f8a:	ret    
64023f8b:	int3   
64023f8c:	int3   
64023f8d:	int3   
64023f8e:	int3   
64023f8f:	int3   
64023f90:	call   0x6400ccf0
64023f95:	mov    ds:0x640312ec,eax
64023f9a:	ret    
64023f9b:	int3   
64023f9c:	int3   
64023f9d:	int3   
64023f9e:	int3   
64023f9f:	int3   
64023fa0:	call   0x6400cdd0
64023fa5:	mov    ds:0x64031300,eax
64023faa:	ret    
64023fab:	int3   
64023fac:	int3   
64023fad:	int3   
64023fae:	int3   
64023faf:	int3   
64023fb0:	call   0x6400ceb0
64023fb5:	mov    ds:0x64031284,eax
64023fba:	ret    
64023fbb:	int3   
64023fbc:	int3   
64023fbd:	int3   
64023fbe:	int3   
64023fbf:	int3   
64023fc0:	call   0x6400cf90
64023fc5:	mov    ds:0x64031304,eax
64023fca:	ret    
64023fcb:	int3   
64023fcc:	int3   
64023fcd:	int3   
64023fce:	int3   
64023fcf:	int3   
64023fd0:	call   0x6400d070
64023fd5:	mov    ds:0x64031280,eax
64023fda:	ret    
64023fdb:	int3   
64023fdc:	int3   
64023fdd:	int3   
64023fde:	int3   
64023fdf:	int3   
64023fe0:	call   0x6400d150
64023fe5:	mov    ds:0x640312b0,eax
64023fea:	ret    
64023feb:	int3   
64023fec:	int3   
64023fed:	int3   
64023fee:	int3   
64023fef:	int3   
64023ff0:	call   0x6400d230
64023ff5:	mov    ds:0x640312e0,eax
64023ffa:	ret    
64023ffb:	int3   
64023ffc:	int3   
64023ffd:	int3   
64023ffe:	int3   
64023fff:	int3   
64024000:	call   0x6400d310
64024005:	mov    ds:0x64031308,eax
6402400a:	ret    
6402400b:	int3   
6402400c:	int3   
6402400d:	int3   
6402400e:	int3   
6402400f:	int3   
64024010:	call   0x6400d3f0
64024015:	mov    ds:0x640312e8,eax
6402401a:	ret    
6402401b:	int3   
6402401c:	int3   
6402401d:	int3   
6402401e:	int3   
6402401f:	int3   
64024020:	call   0x6400d4d0
64024025:	mov    ds:0x640312bc,eax
6402402a:	ret    
6402402b:	int3   
6402402c:	int3   
6402402d:	int3   
6402402e:	int3   
6402402f:	int3   
64024030:	call   0x6400d5b0
64024035:	mov    ds:0x6403129c,eax
6402403a:	ret    
6402403b:	int3   
6402403c:	int3   
6402403d:	int3   
6402403e:	int3   
6402403f:	int3   
64024040:	call   0x6400d690
64024045:	mov    ds:0x640312d4,eax
6402404a:	ret    
6402404b:	int3   
6402404c:	int3   
6402404d:	int3   
6402404e:	int3   
6402404f:	int3   
64024050:	call   0x6400d770
64024055:	mov    ds:0x6403128c,eax
6402405a:	ret    
6402405b:	int3   
6402405c:	int3   
6402405d:	int3   
6402405e:	int3   
6402405f:	int3   
64024060:	call   0x6400d850
64024065:	mov    ds:0x6403127c,eax
6402406a:	ret    
6402406b:	int3   
6402406c:	int3   
6402406d:	int3   
6402406e:	int3   
6402406f:	int3   
64024070:	call   0x6400d930
64024075:	mov    ds:0x640312f4,eax
6402407a:	ret    
6402407b:	int3   
6402407c:	int3   
6402407d:	int3   
6402407e:	int3   
6402407f:	int3   
64024080:	call   0x6400da10
64024085:	mov    ds:0x640312b8,eax
6402408a:	ret    
6402408b:	int3   
6402408c:	int3   
6402408d:	int3   
6402408e:	int3   
6402408f:	int3   
64024090:	call   0x6400daf0
64024095:	mov    ds:0x640312dc,eax
6402409a:	ret    
6402409b:	int3   
6402409c:	int3   
6402409d:	int3   
6402409e:	int3   
6402409f:	int3   
640240a0:	call   0x6400dbd0
640240a5:	mov    ds:0x64031278,eax
640240aa:	ret    
640240ab:	int3   
640240ac:	int3   
640240ad:	int3   
640240ae:	int3   
640240af:	int3   
640240b0:	call   0x6400dcb0
640240b5:	mov    ds:0x640312f0,eax
640240ba:	ret    
640240bb:	int3   
640240bc:	int3   
640240bd:	int3   
640240be:	int3   
640240bf:	int3   
640240c0:	call   0x6400dd90
640240c5:	mov    ds:0x640312ac,eax
640240ca:	ret    
640240cb:	int3   
640240cc:	int3   
640240cd:	int3   
640240ce:	int3   
640240cf:	int3   
640240d0:	call   0x6400de70
640240d5:	mov    ds:0x64031290,eax
640240da:	ret    
640240db:	int3   
640240dc:	int3   
640240dd:	int3   
640240de:	int3   
640240df:	int3   
640240e0:	call   0x6400df50
640240e5:	mov    ds:0x64031298,eax
640240ea:	ret    
640240eb:	int3   
640240ec:	int3   
640240ed:	int3   
640240ee:	int3   
640240ef:	int3   
640240f0:	call   0x6400e030
640240f5:	mov    ds:0x64031314,eax
640240fa:	ret    
640240fb:	int3   
640240fc:	int3   
640240fd:	int3   
640240fe:	int3   
640240ff:	int3   
64024100:	call   0x6400e110
64024105:	mov    ds:0x640312a4,eax
6402410a:	ret    
6402410b:	int3   
6402410c:	int3   
6402410d:	int3   
6402410e:	int3   
6402410f:	int3   
64024110:	call   0x6400e1f0
64024115:	mov    ds:0x640312d8,eax
6402411a:	ret    
6402411b:	int3   
6402411c:	int3   
6402411d:	int3   
6402411e:	int3   
6402411f:	int3   
64024120:	call   0x6400e2d0
64024125:	mov    ds:0x64031288,eax
6402412a:	ret    
6402412b:	int3   
6402412c:	int3   
6402412d:	int3   
6402412e:	int3   
6402412f:	int3   
64024130:	call   0x6400e3b0
64024135:	mov    ds:0x640312e4,eax
6402413a:	ret    
6402413b:	int3   
6402413c:	int3   
6402413d:	int3   
6402413e:	int3   
6402413f:	int3   
64024140:	call   0x6400e490
64024145:	mov    ds:0x640312c8,eax
6402414a:	ret    
6402414b:	int3   
6402414c:	int3   
6402414d:	int3   
6402414e:	int3   
6402414f:	int3   
64024150:	call   0x6400e570
64024155:	mov    ds:0x640312b4,eax
6402415a:	ret    
6402415b:	int3   
6402415c:	int3   
6402415d:	int3   
6402415e:	int3   
6402415f:	int3   
64024160:	call   0x6400e650
64024165:	mov    ds:0x640312d0,eax
6402416a:	ret    
6402416b:	int3   
6402416c:	int3   
6402416d:	int3   
6402416e:	int3   
6402416f:	int3   
64024170:	call   0x6400e730
64024175:	mov    ds:0x640312cc,eax
6402417a:	ret    
6402417b:	int3   
6402417c:	int3   
6402417d:	int3   
6402417e:	int3   
6402417f:	int3   
64024180:	call   0x6400e810
64024185:	mov    ds:0x640312c0,eax
6402418a:	ret    
6402418b:	int3   
6402418c:	int3   
6402418d:	int3   
6402418e:	int3   
6402418f:	int3   
64024190:	call   0x6400e8f0
64024195:	mov    ds:0x6403130c,eax
6402419a:	ret    
6402419b:	int3   
6402419c:	int3   
6402419d:	int3   
6402419e:	int3   
6402419f:	int3   
640241a0:	call   0x6400e9d0
640241a5:	mov    ds:0x64031318,eax
640241aa:	ret    
640241ab:	int3   
640241ac:	int3   
640241ad:	int3   
640241ae:	int3   
640241af:	int3   
640241b0:	call   0x6400eab0
640241b5:	mov    ds:0x640312a0,eax
640241ba:	ret    
640241bb:	int3   
640241bc:	int3   
640241bd:	int3   
640241be:	int3   
640241bf:	int3   
640241c0:	call   0x6400eb90
640241c5:	mov    ds:0x640312a8,eax
640241ca:	ret    
640241cb:	int3   
640241cc:	int3   
640241cd:	int3   
640241ce:	int3   
640241cf:	int3   
640241d0:	call   0x6400ec70
640241d5:	mov    ds:0x640312fc,eax
640241da:	ret    
640241db:	int3   
640241dc:	int3   
640241dd:	int3   
640241de:	int3   
640241df:	int3   
640241e0:	call   0x6400ed50
640241e5:	mov    ds:0x64031310,eax
640241ea:	ret    
640241eb:	int3   
640241ec:	int3   
640241ed:	int3   
640241ee:	int3   
640241ef:	int3   
640241f0:	call   0x6400ee30
640241f5:	mov    ds:0x640312c4,eax
640241fa:	ret    
640241fb:	int3   
640241fc:	int3   
640241fd:	int3   
640241fe:	int3   
640241ff:	int3   
64024200:	call   0x6400ef10
64024205:	mov    ds:0x640312f8,eax
6402420a:	ret    
6402420b:	mov    ecx,0x6402e4cc
64024210:	call   0x640122bd
64024215:	push   0x64024381
6402421a:	call   0x64012f9f
6402421f:	pop    ecx
64024220:	ret    
64024221:	mov    ecx,0x6402e508
64024226:	call   0x64012297
6402422b:	push   0x6402438b
64024230:	call   0x64012f9f
64024235:	pop    ecx
64024236:	ret    
64024237:	call   DWORD PTR ds:0x64025110
6402423d:	push   0x64024395
64024242:	mov    DWORD PTR ds:0x6402e534,0x64025c20
6402424c:	mov    ds:0x6402e538,eax
64024251:	mov    BYTE PTR ds:0x6402e53c,0x0
64024258:	call   0x64012f9f
6402425d:	pop    ecx
6402425e:	ret    
6402425f:	push   0x6402e534
64024264:	mov    ecx,0x6402e540
64024269:	call   0x64012430
6402426e:	push   0x6402439f
64024273:	call   0x64012f9f
64024278:	pop    ecx
64024279:	ret    
6402427a:	int3   
6402427b:	int3   
6402427c:	int3   
6402427d:	int3   
6402427e:	int3   
6402427f:	int3   
64024280:	push   0x640243c0
64024285:	call   0x64012f9f
6402428a:	pop    ecx
6402428b:	ret    
6402428c:	int3   
6402428d:	int3   
6402428e:	int3   
6402428f:	int3   
64024290:	mov    eax,0x6403134c
64024295:	jmp    0x640063e0
6402429a:	int3   
6402429b:	int3   
6402429c:	int3   
6402429d:	int3   
6402429e:	int3   
6402429f:	int3   
640242a0:	mov    eax,0x640314a0
640242a5:	jmp    0x640063e0
640242aa:	int3   
640242ab:	int3   
640242ac:	int3   
640242ad:	int3   
640242ae:	int3   
640242af:	int3   
640242b0:	push   ebp
640242b1:	mov    ebp,esp
640242b3:	and    esp,0xfffffff8
640242b6:	mov    eax,ds:0x64031330
640242bb:	mov    edx,DWORD PTR [eax]
640242bd:	sub    esp,0xc
640242c0:	push   esi
640242c1:	push   eax
640242c2:	mov    ecx,0x6403132c
640242c7:	push   ecx
640242c8:	push   edx
640242c9:	mov    esi,ecx
640242cb:	push   esi
640242cc:	lea    eax,[esp+0x18]
640242d0:	push   eax
640242d1:	call   0x64008490
640242d6:	mov    ecx,DWORD PTR ds:0x64031330
640242dc:	push   ecx
640242dd:	call   0x64012612
640242e2:	add    esp,0x4
640242e5:	xor    eax,eax
640242e7:	mov    ds:0x64031330,eax
640242ec:	mov    ds:0x64031334,eax
640242f1:	pop    esi
640242f2:	mov    esp,ebp
640242f4:	pop    ebp
640242f5:	ret    
640242f6:	int3   
640242f7:	int3   
640242f8:	int3   
640242f9:	int3   
640242fa:	int3   
640242fb:	int3   
640242fc:	int3   
640242fd:	int3   
640242fe:	int3   
640242ff:	int3   
64024300:	push   ebp
64024301:	mov    ebp,esp
64024303:	and    esp,0xfffffff8
64024306:	mov    eax,ds:0x64031324
6402430b:	mov    edx,DWORD PTR [eax]
6402430d:	sub    esp,0xc
64024310:	push   esi
64024311:	push   eax
64024312:	mov    ecx,0x64031320
64024317:	push   ecx
64024318:	push   edx
64024319:	mov    esi,ecx
6402431b:	push   esi
6402431c:	lea    eax,[esp+0x18]
64024320:	push   eax
64024321:	call   0x64008190
64024326:	mov    ecx,DWORD PTR ds:0x64031324
6402432c:	push   ecx
6402432d:	call   0x64012612
64024332:	add    esp,0x4
64024335:	xor    eax,eax
64024337:	mov    ds:0x64031324,eax
6402433c:	mov    ds:0x64031328,eax
64024341:	pop    esi
64024342:	mov    esp,ebp
64024344:	pop    ebp
64024345:	ret    
64024346:	int3   
64024347:	int3   
64024348:	int3   
64024349:	int3   
6402434a:	int3   
6402434b:	int3   
6402434c:	int3   
6402434d:	int3   
6402434e:	int3   
6402434f:	int3   
64024350:	mov    eax,ds:0x6402e4bc
64024355:	test   eax,eax
64024357:	je     0x64024362
64024359:	push   eax
6402435a:	call   0x64012612
6402435f:	add    esp,0x4
64024362:	mov    DWORD PTR ds:0x6402e4bc,0x0
6402436c:	mov    DWORD PTR ds:0x6402e4c0,0x0
64024376:	mov    DWORD PTR ds:0x6402e4c4,0x0
64024380:	ret    
64024381:	mov    ecx,0x6402e4cc
64024386:	jmp    0x6401222b
6402438b:	mov    ecx,0x6402e508
64024390:	jmp    0x6401236c
64024395:	mov    ecx,0x6402e534
6402439a:	jmp    0x64012384
6402439f:	mov    DWORD PTR ds:0x6402e540,0x64025c34
640243a9:	ret    
640243aa:	mov    DWORD PTR ds:0x6402e560,0x64025304
640243b4:	mov    ecx,0x6402e560
640243b9:	jmp    0x6401272b
640243be:	int3   
640243bf:	int3   
640243c0:	push   0x6402e030
640243c5:	call   DWORD PTR ds:0x640251a0
640243cb:	ret    
