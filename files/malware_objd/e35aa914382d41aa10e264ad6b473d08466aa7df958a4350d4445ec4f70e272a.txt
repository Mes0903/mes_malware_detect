
e35aa914382d41aa10e264ad6b473d08466aa7df958a4350d4445ec4f70e272a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a2f5
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	push   esi
  401250:	adc    al,0x32
  401252:	xchg   esp,eax
  401253:	jnp    0x4012d0
  401255:	jnp    0x4012d2
  401257:	mov    ch,0x9e
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   bl,al
  401265:	mov    BYTE PTR [edi-0x74737126],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0xf9d9bed7,eax
  401302:	in     eax,0x61
  401304:	cwde   
  401305:	je     0x401381
  401307:	add    al,0x8b
  401309:	inc    ebp
  40130a:	pop    es
  40130b:	mov    bl,0xd5
  40130d:	aas    
  40130e:	mov    al,ds:0x914c8053
  401313:	pop    ebp
  401314:	push   esp
  401315:	idiv   BYTE PTR [ecx]
  401317:	sbb    bh,BYTE PTR [ecx+0x2ce32a42]
  40131d:	fs inc ebp
  40131f:	xchg   ebx,eax
  401320:	add    cl,BYTE PTR [esi]
  401322:	je     0x40133b
  401324:	test   al,0x17
  401326:	outs   dx,BYTE PTR ds:[esi]
  401327:	ss inc edi
  401329:	and    al,0xab
  40132b:	ins    DWORD PTR es:[edi],dx
  40132c:	inc    edi
  40132d:	pop    esp
  40132e:	mov    ah,0xa7
  401330:	bound  esp,QWORD PTR [edx+0x5b]
  401333:	test   al,0x88
  401335:	fild   WORD PTR [esi+0x29c9e9df]
  40133b:	xchg   ecx,eax
  40133c:	lea    edx,ds:0xdfd2293f
  401342:	test   DWORD PTR [eax],esi
  401344:	cwde   
  401345:	sub    ebp,DWORD PTR [eax-0x45]
  401348:	push   ebp
  401349:	addr16 pop esi
  40134b:	pushf  
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	inc    eax
  40134e:	sub    bl,BYTE PTR [ebx]
  401350:	or     al,0xed
  401352:	xor    ebp,ebx
  401354:	ins    DWORD PTR es:[edi],dx
  401355:	(bad)  
  401356:	cli    
  401357:	jne    0x401357
  401359:	in     eax,0xbd
  40135b:	nop
  40135c:	aaa    
  40135d:	lock push cs
  40135f:	lds    ecx,FWORD PTR [edx+0x20bb168b]
  401365:	mov    ch,0xd3
  401367:	fcomp  DWORD PTR [eax+0x112bca]
  40136d:	jne    0x40132b
  40136f:	push   es
  401370:	mov    ah,0xb7
  401372:	pop    ecx
  401373:	nop
  401374:	xor    ah,bl
  401376:	jo     0x401334
  401378:	sbb    DWORD PTR [ecx-0x5c1e1fee],0xffffffc3
  40137f:	lds    edi,FWORD PTR [ebx-0xf]
  401382:	mov    al,0xba
  401384:	inc    ebp
  401385:	call   0x5e7680d
  40138a:	cmp    BYTE PTR [ecx],dl
  40138c:	add    eax,0xffffff9b
  40138f:	jns    0x4013d7
  401391:	cwde   
  401392:	stos   BYTE PTR es:[edi],al
  401393:	mov    bl,0xe5
  401395:	inc    esp
  401396:	xor    eax,0xc6de9473
  40139b:	cwde   
  40139c:	adc    DWORD PTR [edx+ecx*8+0x3f],ebx
  4013a0:	xor    eax,0x496c8046
  4013a5:	or     al,0x73
  4013a7:	cmp    BYTE PTR [ebp-0x7b],bl
  4013aa:	push   esp
  4013ab:	ret    0x5524
  4013ae:	fs mov al,ah
  4013b1:	pop    ecx
  4013b2:	gs retw 0xc2c0
  4013b7:	fwait
  4013b8:	jmp    0x4013e7
  4013ba:	into   
  4013bb:	test   ch,ch
  4013bd:	sub    ah,BYTE PTR [edi]
  4013bf:	sub    DWORD PTR [ebx+ebx*1],esi
  4013c2:	pop    ebx
  4013c3:	icebp  
  4013c4:	cmp    eax,0x64a44a83
  4013c9:	xchg   DWORD PTR [edi],ebp
  4013cb:	mov    dh,0x84
  4013cd:	jb     0x401437
  4013cf:	lods   al,BYTE PTR ds:[esi]
  4013d0:	inc    ebp
  4013d1:	outs   dx,BYTE PTR ds:[esi]
  4013d2:	jmp    DWORD PTR [edi-0x20]
  4013d5:	sahf   
  4013d6:	pop    ebx
  4013d7:	or     edi,ebp
  4013d9:	adc    BYTE PTR [ebx],al
  4013db:	mov    bh,0x52
  4013dd:	push   ds
  4013de:	bound  edx,QWORD PTR ds:0x70145957
  4013e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013e5:	sub    bh,BYTE PTR [ecx]
  4013e7:	sbb    al,0xe4
  4013e9:	cli    
  4013ea:	hlt    
  4013eb:	inc    eax
  4013ec:	lahf   
  4013ed:	mov    ds:0x3f0e3991,eax
  4013f2:	into   
  4013f3:	sbb    edi,eax
  4013f5:	cmp    BYTE PTR cs:[edi],cl
  4013f8:	loopne 0x4013e0
  4013fa:	out    0x2a,eax
  4013fc:	push   edi
  4013fd:	mov    ebx,0x9c02d5f
  401402:	sub    eax,0x6d4a71ce
  401407:	repnz enter 0x826e,0x9f
  40140c:	push   ecx
  40140d:	data16 xor bl,0xab
  401411:	clc    
  401412:	into   
  401413:	cmc    
  401414:	aad    0x1c
  401416:	mov    ds:0xfdd3ba54,al
  40141b:	mov    cl,0x76
  40141d:	shl    bh,0x98
  401420:	inc    esi
  401421:	gs mov cl,0xdb
  401424:	jp     0x4013fd
  401426:	xchg   BYTE PTR [edi],cl
  401428:	shr    BYTE PTR [esi-0x7a],0xd1
  40142c:	stos   DWORD PTR es:[edi],eax
  40142d:	mov    DWORD PTR [edx-0x5e825c89],esi
  401433:	leave  
  401434:	sbb    BYTE PTR [edi+0x5d53b3b2],cl
  40143a:	mov    bh,0xcd
  40143c:	aam    0x8
  40143e:	xor    ebp,edi
  401440:	sbb    al,0x3d
  401442:	xlat   BYTE PTR ds:[ebx]
  401443:	jecxz  0x401428
  401445:	aam    0x7
  401447:	push   0x5f2cfc6e
  40144c:	pusha  
  40144d:	dec    ecx
  40144e:	and    al,0x1c
  401450:	pop    ecx
  401451:	mov    dh,0x0
  401453:	out    0x69,eax
  401455:	shl    edi,cl
  401457:	out    dx,eax
  401458:	adc    BYTE PTR [ebp+0xf],0x2f
  40145c:	shl    BYTE PTR [ebp-0x24],cl
  40145f:	and    al,dl
  401461:	xlat   BYTE PTR ds:[ebx]
  401462:	retf   
  401463:	cmp    DWORD PTR [esi+0x63a4dcb0],esi
  401469:	lahf   
  40146a:	ins    DWORD PTR es:[edi],dx
  40146b:	imul   DWORD PTR [edi]
  40146d:	sub    eax,0x2aa01dc0
  401472:	xchg   esi,eax
  401473:	or     eax,DWORD PTR [edx-0x45]
  401476:	aam    0x25
  401478:	aad    0xc8
  40147a:	cmp    ebx,edx
  40147c:	jle    0x4014c0
  40147e:	and    eax,0x2f43e2b2
  401483:	push   ecx
  401484:	inc    edx
  401485:	sti    
  401486:	xchg   edi,eax
  401487:	mov    BYTE PTR [edi+0x6],dl
  40148a:	fsqrt  
  40148c:	mov    dl,0xd8
  40148e:	rol    DWORD PTR [ecx],cl
  401490:	mov    ah,0x15
  401492:	lock pushf 
  401494:	sbb    ebx,DWORD PTR [ecx+0x56ca9914]
  40149a:	fistp  QWORD PTR [ecx]
  40149c:	sub    ah,BYTE PTR [eax]
  40149e:	leave  
  40149f:	retf   
  4014a0:	mov    ch,BYTE PTR [edi]
  4014a2:	adc    BYTE PTR [esi+0x7a],ah
  4014a5:	test   DWORD PTR [edx-0x4fa27715],eax
  4014ab:	fidiv  WORD PTR [edi-0x2da8f437]
  4014b1:	jl     0x401472
  4014b3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4014b5:	xor    BYTE PTR [esp+edi*4+0x4e],0xc6
  4014ba:	push   edx
  4014bb:	outs   dx,BYTE PTR ds:[esi]
  4014bc:	xor    eax,0x9fefdeed
  4014c1:	addr16 pop edx
  4014c3:	pop    es
  4014c4:	cmp    bh,ah
  4014c6:	out    dx,eax
  4014c7:	cmc    
  4014c8:	enter  0x9e1d,0x5d
  4014cc:	xchg   edx,eax
  4014cd:	imul   ecx,DWORD PTR [edx+0x4524f599],0xffffffe1
  4014d4:	pop    edx
  4014d5:	je     0x401530
  4014d7:	aas    
  4014d8:	dec    edi
  4014d9:	fisub  WORD PTR [ebp+0xd4a20de]
  4014df:	stc    
  4014e0:	dec    ecx
  4014e1:	loope  0x401503
  4014e3:	lods   al,BYTE PTR ds:[esi]
  4014e4:	add    al,0x50
  4014e6:	ds in  eax,0x3d
  4014e9:	mov    cl,0x85
  4014eb:	sub    BYTE PTR [eax],cl
  4014ed:	cmp    eax,0x62a7c02a
  4014f2:	(bad)  [ebp-0x3cd4b868]
  4014f8:	xor    BYTE PTR [edx*4+0x36b33676],bl
  4014ff:	xor    eax,0xf39d6465
  401504:	std    
  401505:	sub    ah,dh
  401507:	xlat   BYTE PTR ds:[ebx]
  401508:	(bad)
  40150d:	(bad)
  401510:	dec    esp
  401511:	test   ah,cl
  401513:	push   esp
  401514:	ret    
  401515:	mov    ch,0x64
  401517:	sbb    cl,BYTE PTR [edi-0x3afb7ffc]
  40151d:	fcom   QWORD PTR [ecx-0x32]
  401520:	and    bl,0xd4
  401523:	and    eax,0xf8e1f327
  401528:	mov    WORD PTR [esi-0x59],cs
  40152b:	ret    
  40152c:	mov    al,ds:0xc8b5223d
  401531:	aas    
  401532:	je     0x401576
  401534:	xlat   BYTE PTR ds:[ebx]
  401535:	imul   edx,DWORD PTR [esi+eax*2-0x73],0x6aec2143
  40153d:	int3   
  40153e:	add    al,0xa5
  401540:	mov    edi,0x1755fd94
  401545:	scas   al,BYTE PTR es:[edi]
  401546:	inc    edi
  401547:	adc    DWORD PTR [esp+ebx*1+0x15],esi
  40154b:	xchg   edx,eax
  40154c:	add    DWORD PTR [ebp-0x7],esp
  40154f:	sbb    DWORD PTR [esi+0x38],eax
  401552:	dec    esi
  401553:	ins    DWORD PTR es:[edi],dx
  401554:	jb     0x4014ed
  401556:	push   cs
  401557:	pop    ebx
  401558:	mov    ch,0xe8
  40155a:	mov    BYTE PTR [esi],dl
  40155c:	push   es
  40155d:	inc    esi
  40155e:	or     al,BYTE PTR [eax-0x17]
  401561:	dec    edi
  401562:	add    al,0x4f
  401564:	inc    ecx
  401565:	or     bh,BYTE PTR [esi]
  401567:	xor    cl,bl
  401569:	cld    
  40156a:	sti    
  40156b:	cld    
  40156c:	sahf   
  40156d:	inc    esi
  40156e:	loope  0x4015cf
  401570:	das    
  401571:	xor    DWORD PTR [edx+0x50],0x948a5d8e
  401578:	fcom   DWORD PTR [esi+esi*8-0x7f]
  40157c:	out    0xeb,al
  40157e:	bound  ebx,QWORD PTR [ebp-0xd72d845]
  401584:	cwde   
  401585:	sbb    DWORD PTR gs:[ebx-0x136b06d7],edx
  40158c:	cwde   
  40158d:	and    edi,DWORD PTR [ebx]
  40158f:	sbb    BYTE PTR [ebx],0x2
  401592:	in     eax,dx
  401593:	cmp    ebx,DWORD PTR [ebp-0x4fceea2d]
  401599:	mov    dh,0x25
  40159b:	jnp    0x401609
  40159d:	into   
  40159e:	vxorps ymm6,ymm4,YMMWORD PTR [eax-0x5cc7f92d]
  4015a6:	xlat   BYTE PTR ds:[ebx]
  4015a7:	jne    0x401594
  4015a9:	mov    esp,0x42273f51
  4015ae:	data16 sbb bh,BYTE PTR [ecx]
  4015b1:	test   al,0x68
  4015b3:	pop    ds
  4015b4:	and    esp,esp
  4015b6:	sub    bl,ah
  4015b8:	jmp    0x26a9:0x2e8ba76c
  4015bf:	mov    BYTE PTR [eax-0x6747a1ec],dl
  4015c5:	xor    eax,0x3fde22d5
  4015ca:	sbb    bl,BYTE PTR ds:0x3355abff
  4015d0:	pop    ds
  4015d1:	adc    cl,bl
  4015d3:	sar    BYTE PTR gs:[ecx],cl
  4015d6:	mul    BYTE PTR [ecx+0x67]
  4015d9:	xchg   esi,eax
  4015da:	iret   
  4015db:	push   esi
  4015dc:	je     0x40162b
  4015de:	mov    bl,dh
  4015e0:	cld    
  4015e1:	fst    DWORD PTR [ecx-0x16]
  4015e4:	adc    esp,DWORD PTR [edx+0x6e8462c2]
  4015ea:	xor    edi,esp
  4015ec:	lods   eax,DWORD PTR ds:[esi]
  4015ed:	test   al,0xbf
  4015ef:	add    DWORD PTR [ebp-0x6296bd4e],esp
  4015f5:	int    0x84
  4015f7:	std    
  4015f8:	push   esi
  4015f9:	xchg   edx,eax
  4015fa:	leave  
  4015fb:	out    0x9b,eax
  4015fd:	aad    0xe5
  4015ff:	adc    BYTE PTR [ebx-0x78],cl
  401602:	xor    al,BYTE PTR [ecx+0x21]
  401605:	inc    edi
  401606:	or     cl,BYTE PTR [ebp-0x5b2068cf]
  40160c:	push   cs
  40160d:	xchg   ebp,eax
  40160e:	dec    eax
  40160f:	jle    0x401652
  401611:	and    edi,DWORD PTR [ebx+eax*2-0x551dd2f]
  401618:	nop
  401619:	imul   edi,DWORD PTR [esi-0x417ec1a9],0xffffffbd
  401620:	lods   eax,DWORD PTR ds:[esi]
  401621:	sbb    eax,0xcfe01c63
  401626:	jp     0x401678
  401628:	retf   0x7210
  40162b:	aad    0x67
  40162d:	pop    edi
  40162e:	in     al,dx
  40162f:	test   dh,0x7b
  401632:	mov    eax,0x3d6bfaf8
  401637:	mov    ebp,0xa4fc5244
  40163c:	out    dx,eax
  40163d:	stc    
  40163e:	loopne 0x401697
  401640:	repnz xchg esi,eax
  401642:	loop   0x4016b3
  401644:	mov    ds,WORD PTR [edx-0x118d64b1]
  40164a:	push   cs
  40164b:	(bad)  [eax+eiz*2+0x688fd921]
  401652:	mov    ebx,0x5e325913
  401657:	sbb    ah,ch
  401659:	std    
  40165a:	cld    
  40165b:	sbb    BYTE PTR [eax+0x278319e6],dl
  401661:	cs dec ebp
  401663:	xchg   ecx,eax
  401664:	jns    0x4015e8
  401666:	push   0xe92eab8e
  40166b:	stos   BYTE PTR es:[edi],al
  40166c:	cmc    
  40166d:	test   eax,0x440a258a
  401672:	or     al,0x4
  401674:	pop    ds
  401675:	and    bl,ch
  401677:	or     edx,DWORD PTR [edi+eax*2-0x20]
  40167b:	es mov esp,0xb6e52139
  401681:	mov    ss,WORD PTR [edi]
  401683:	call   0xc301ec7a
  401688:	outs   dx,BYTE PTR ds:[esi]
  401689:	mov    ds:0x7a9f7ef0,eax
  40168e:	repnz loope 0x401633
  401691:	scas   al,BYTE PTR es:[edi]
  401692:	add    al,0x13
  401694:	push   cs
  401695:	xchg   esp,eax
  401696:	cmp    cl,BYTE PTR [esi]
  401698:	test   BYTE PTR [ecx+ebx*2],0xc2
  40169c:	and    DWORD PTR [edx],ecx
  40169e:	inc    ecx
  40169f:	or     BYTE PTR ds:0xec243467,cl
  4016a5:	mov    dh,0x21
  4016a7:	std    
  4016a8:	jg     0x401679
  4016aa:	rcl    cl,1
  4016ac:	inc    ecx
  4016ad:	push   ebp
  4016ae:	in     eax,0xa1
  4016b0:	(bad)  
  4016b1:	mov    ah,ch
  4016b3:	push   0x16
  4016b5:	es int3 
  4016b7:	push   esp
  4016b8:	mov    bh,0x35
  4016ba:	xor    dh,cl
  4016bc:	sbb    al,0x3e
  4016be:	ja     0x40169b
  4016c0:	xchg   ebx,eax
  4016c1:	ss pusha 
  4016c3:	and    DWORD PTR [eax-0x7b1080e4],ecx
  4016c9:	bound  ebp,QWORD PTR [ebp-0x4c]
  4016cc:	add    ah,cl
  4016ce:	sub    DWORD PTR [esp+eax*1],ecx
  4016d1:	outs   dx,DWORD PTR ds:[esi]
  4016d2:	push   ebx
  4016d3:	push   edi
  4016d4:	fcmovnu st,st(3)
  4016d6:	not    dh
  4016d8:	adc    ebx,ebp
  4016da:	cmc    
  4016db:	mov    dl,0x5b
  4016dd:	xchg   ecx,eax
  4016de:	sbb    DWORD PTR [edx-0x25],ecx
  4016e1:	in     al,dx
  4016e2:	adc    BYTE PTR ds:0x4eca7e76,bh
  4016e8:	jg     0x401718
  4016ea:	jl     0x401715
  4016ec:	jne    0x401729
  4016ee:	or     bl,al
  4016f0:	int3   
  4016f1:	and    BYTE PTR [ecx+0x5f],al
  4016f4:	mov    dh,0x67
  4016f6:	icebp  
  4016f7:	or     al,0x89
  4016f9:	out    dx,al
  4016fa:	enter  0x1c5d,0x98
  4016fe:	stc    
  4016ff:	outs   dx,BYTE PTR ds:[esi]
  401700:	inc    edi
  401701:	cmp    dh,ah
  401703:	sar    DWORD PTR [esi-0x61],1
  401706:	xor    al,0xe3
  401708:	and    al,0x47
  40170a:	aas    
  40170b:	lods   al,BYTE PTR ds:[esi]
  40170c:	fisttp DWORD PTR [ebx-0x5e]
  40170f:	outs   dx,DWORD PTR ds:[esi]
  401710:	in     al,0x85
  401712:	jge    0x401697
  401714:	push   eax
  401715:	sbb    esi,DWORD PTR [ebx+0x4c]
  401718:	and    BYTE PTR [ecx],dh
  40171a:	retf   0xe856
  40171d:	loop   0x40175f
  40171f:	dec    ebp
  401720:	pop    esi
  401721:	pop    ss
  401722:	xchg   BYTE PTR [ebx],cl
  401724:	(bad)  
  401725:	or     ch,BYTE PTR fs:[ecx]
  401728:	or     al,0x67
  40172a:	(bad)  
  40172b:	push   cs
  40172c:	sbb    DWORD PTR [ecx],edi
  40172e:	push   ebp
  40172f:	sub    al,0x22
  401731:	sar    DWORD PTR [esi+0x3bdda53f],1
  401737:	mov    ah,bl
  401739:	jae    0x4016bc
  40173b:	pop    ebx
  40173c:	das    
  40173d:	loope  0x401717
  40173f:	sbb    eax,0xf58f4a77
  401744:	sbb    al,0x25
  401746:	sub    BYTE PTR [edx],al
  401748:	cmc    
  401749:	push   esp
  40174a:	fadd   QWORD PTR [esi-0x2d86cbdf]
  401750:	fbstp  TBYTE PTR fs:[eax+ecx*8]
  401754:	(bad)  
  401755:	sti    
  401756:	scas   eax,DWORD PTR es:[edi]
  401757:	imul   esi,esi,0x28
  40175a:	add    ebp,DWORD PTR [eax+0x7eef2c65]
  401760:	inc    ecx
  401761:	icebp  
  401762:	jmp    0x4ba2:0xe23de4dc
  401769:	or     bl,BYTE PTR [esi-0x61]
  40176c:	xlat   BYTE PTR ds:[ebx]
  40176d:	mov    dh,0x93
  40176f:	ficom  DWORD PTR [ebp+0x15]
  401772:	or     bh,ch
  401774:	stos   BYTE PTR es:[edi],al
  401775:	xchg   esi,eax
  401776:	pushf  
  401777:	pop    eax
  401778:	mov    ah,0x84
  40177a:	push   eax
  40177b:	into   
  40177c:	jle    0x401791
  40177e:	mov    ebp,0x98b2ba3c
  401783:	icebp  
  401784:	retf   0x1108
  401787:	retf   
  401788:	jae    0x40179c
  40178a:	push   0x8ce9dd6f
  40178f:	fwait
  401790:	lods   eax,DWORD PTR ds:[esi]
  401791:	mov    edi,0x659a4da1
  401796:	loop   0x4017cc
  401798:	fisttp DWORD PTR [eax+0x73]
  40179b:	cs dec ecx
  40179d:	sahf   
  40179e:	sub    esi,edx
  4017a0:	nop
  4017a1:	int3   
  4017a2:	inc    ecx
  4017a3:	push   ebp
  4017a4:	adc    esp,DWORD PTR [edx+esi*8+0x59]
  4017a8:	sub    dh,BYTE PTR [ecx]
  4017aa:	add    al,BYTE PTR [edx+0x14c457e9]
  4017b0:	loop   0x40180b
  4017b2:	inc    edx
  4017b3:	call   0x4507:0x5883bd78
  4017ba:	sbb    al,dh
  4017bc:	mov    ch,0x8c
  4017be:	ret    0xffb9
  4017c1:	push   edx
  4017c2:	pushf  
  4017c3:	mov    edx,0x98ab4422
  4017c8:	out    dx,eax
  4017c9:	rol    DWORD PTR [eax+eax*4],cl
  4017cc:	xchg   edx,eax
  4017cd:	sub    cl,BYTE PTR [edx-0x68]
  4017d0:	stc    
  4017d1:	inc    eax
  4017d2:	ret    
  4017d3:	fdiv   DWORD PTR ds:0xf0e4ee9b
  4017d9:	mov    al,ds:0x65e3fa17
  4017de:	jp     0x401852
  4017e0:	loope  0x40176f
  4017e2:	inc    ebx
  4017e3:	mov    edi,0x4bb77e8d
  4017e8:	mov    ebp,0xffd84ba8
  4017ed:	dec    ebp
  4017ee:	icebp  
  4017ef:	lds    esp,FWORD PTR [ebp+0x30]
  4017f2:	sahf   
  4017f3:	fcmovu st,st(2)
  4017f5:	push   ecx
  4017f6:	push   edx
  4017f7:	hlt    
  4017f8:	scas   eax,DWORD PTR es:[edi]
  4017f9:	sub    edx,DWORD PTR [edx+ebx*1+0x88b69c5]
  401800:	sbb    ah,BYTE PTR [eax+0x61f649bf]
  401806:	sbb    al,0x49
  401808:	jo     0x40181d
  40180a:	push   ds
  40180b:	ftst   
  40180d:	(bad)  
  40180e:	dec    esp
  40180f:	(bad)  
  401810:	mov    ss,WORD PTR [esi+0x55]
  401813:	xchg   ecx,eax
  401814:	outs   dx,BYTE PTR ds:[esi]
  401815:	iret   
  401816:	sbb    ch,BYTE PTR [ebp-0x6e]
  401819:	inc    ecx
  40181a:	pop    esp
  40181b:	je     0x401886
  40181d:	sbb    al,0x41
  40181f:	fdivrp st(6),st
  401821:	push   ss
  401822:	int3   
  401823:	push   ebx
  401824:	outs   dx,BYTE PTR ds:[esi]
  401825:	jl     0x40183e
  401827:	cmp    dl,BYTE PTR [esp+ebx*1+0x57]
  40182b:	jns    0x4017e1
  40182d:	sub    ch,dl
  40182f:	leave  
  401830:	fdiv   st,st(1)
  401832:	add    bh,ch
  401834:	js     0x40189a
  401836:	push   cs
  401837:	gs cdq 
  401839:	or     edi,DWORD PTR [edi-0x4ff7ce1f]
  40183f:	mov    eax,ds:0x365f260c
  401844:	test   eax,0xb319d2ba
  401849:	pop    ss
  40184a:	data16 in al,dx
  40184c:	std    
  40184d:	mov    BYTE PTR [ecx+0x3f8f8a84],bl
  401853:	outs   dx,BYTE PTR ds:[esi]
  401854:	pusha  
  401855:	loop   0x4018b3
  401857:	iret   
  401858:	into   
  401859:	sub    DWORD PTR [ecx+0x44282723],ebx
  40185f:	cmp    BYTE PTR [eax+0x5aeca282],al
  401865:	inc    ecx
  401866:	shl    BYTE PTR [ebp+0x41c005f7],cl
  40186c:	mov    dl,0xd7
  40186e:	fadd   st,st(2)
  401870:	popa   
  401871:	std    
  401872:	add    BYTE PTR [edi],ch
  401874:	push   ds
  401875:	add    DWORD PTR [ecx+0x35311226],0xffffffeb
  40187c:	push   eax
  40187d:	mov    ebp,0x708d753e
  401882:	push   ebp
  401883:	pusha  
  401884:	cmc    
  401885:	xchg   DWORD PTR [esi],edx
  401887:	outs   dx,BYTE PTR ds:[esi]
  401888:	(bad)  
  401889:	hlt    
  40188a:	out    0x64,al
  40188c:	xor    BYTE PTR [ecx+esi*4-0x4],dh
  401890:	retf   0x2bf
  401893:	xor    cl,cl
  401895:	mov    ecx,0x82c78cf2
  40189a:	and    eax,0x8d4291e4
  40189f:	int    0x93
  4018a1:	shl    BYTE PTR [edi+0x1874c739],cl
  4018a7:	push   0xffffffb4
  4018a9:	mov    ebp,0xd5715c52
  4018ae:	jecxz  0x401873
  4018b0:	sbb    eax,0xba2642a7
  4018b5:	sbb    al,0x6e
  4018b7:	xor    al,0x13
  4018b9:	fwait
  4018ba:	jecxz  0x401870
  4018bc:	xchg   ebx,eax
  4018bd:	out    0x96,eax
  4018bf:	xchg   edx,eax
  4018c0:	jmp    0x21b3cd9b
  4018c5:	cdq    
  4018c6:	cmp    DWORD PTR [edx-0x42],ecx
  4018c9:	pop    esp
  4018ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018cb:	nop
  4018cc:	cmp    BYTE PTR ds:0x1ae742f8,bh
  4018d2:	shl    DWORD PTR [edx],cl
  4018d4:	sub    edi,ebx
  4018d6:	xor    esp,DWORD PTR [ebx+0x2fb3b3e3]
  4018dc:	or     edx,DWORD PTR [edi+edx*8+0x7db00f8a]
  4018e3:	inc    edx
  4018e4:	in     eax,0xdd
  4018e6:	pop    esp
  4018e7:	jns    0x40186d
  4018e9:	cwde   
  4018ea:	retf   0xb3d3
  4018ed:	lock fmul QWORD PTR [ecx-0x2d686b3a]
  4018f4:	sub    eax,0xc8973003
  4018f9:	fisub  WORD PTR [esp+esi*2-0x4c]
  4018fd:	dec    ebp
  4018fe:	mov    eax,DWORD PTR [edi-0xa3fa9e8]
  401904:	pop    eax
  401905:	neg    BYTE PTR [ecx+0x2f]
  401908:	adc    eax,0x9f1c3c83
  40190d:	bound  eax,QWORD PTR [esi-0x73f00e1c]
  401913:	mov    eax,ds:0x14bfe741
  401918:	cmp    al,0xac
  40191a:	adc    al,0xac
  40191c:	imul   edi,DWORD PTR [esi+0x3f41a7ee],0xc219c38
  401926:	fstp   QWORD PTR [ebx+0x6]
  401929:	mov    al,0x6
  40192b:	fwait
  40192c:	rol    DWORD PTR [esi],cl
  40192e:	fs xchg ecx,eax
  401930:	stos   BYTE PTR es:[edi],al
  401931:	shl    BYTE PTR [eax+0x346c857c],1
  401937:	cmp    BYTE PTR [ebx+0x318050b],ch
  40193d:	add    al,0xf2
  40193f:	out    dx,eax
  401940:	leave  
  401941:	mov    esi,0x3ce0d0e3
  401946:	arpl   WORD PTR ds:0x459c05be,bx
  40194c:	popa   
  40194d:	fimul  DWORD PTR [ebp+0x2992b75c]
  401953:	dec    esi
  401954:	push   ebx
  401955:	push   ss
  401956:	xchg   ebx,eax
  401957:	pop    ecx
  401958:	inc    ebx
  401959:	sahf   
  40195a:	xchg   edi,eax
  40195b:	push   ds
  40195c:	scas   eax,DWORD PTR es:[edi]
  40195d:	cmp    al,0xc4
  40195f:	cmp    BYTE PTR [esi],ah
  401961:	(bad)  
  401962:	jns    0x401919
  401964:	inc    eax
  401965:	pop    ebp
  401966:	outs   dx,BYTE PTR ds:[esi]
  401967:	inc    esi
  401968:	jno    0x401995
  40196a:	jle    0x4019e4
  40196c:	xchg   edi,eax
  40196d:	xchg   DWORD PTR [eax+0x50],ebp
  401970:	jmp    0xc609:0x3740532f
  401977:	outs   dx,BYTE PTR ds:[esi]
  401978:	cmp    ch,BYTE PTR [ebx+0x52]
  40197b:	jb     0x4019ac
  40197d:	mov    al,0xe5
  40197f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401980:	pop    edi
  401981:	add    al,0x24
  401983:	mov    cl,0x41
  401985:	mov    WORD PTR [ecx+0x61],ss
  401988:	mov    esi,0xa4c013ff
  40198d:	cmp    al,0x4f
  40198f:	aad    0x4
  401991:	pusha  
  401992:	call   FWORD PTR [ebp+0x5d]
  401995:	(bad)  
  401996:	xchg   ebp,eax
  401997:	mov    edx,0x15679844
  40199c:	jp     0x40192b
  40199e:	push   0x49
  4019a0:	jno    0x401a04
  4019a2:	mov    al,ds:0x2de9ae4c
  4019a7:	push   es
  4019a8:	das    
  4019a9:	and    dl,ah
  4019ab:	shr    DWORD PTR [ebp+0x33],0x27
  4019af:	daa    
  4019b0:	mov    al,0x2d
  4019b2:	or     esp,DWORD PTR [eax+0x7c376d47]
  4019b8:	pop    ebx
  4019b9:	cmp    DWORD PTR [edx+0x5c],ecx
  4019bc:	pop    edi
  4019bd:	inc    eax
  4019be:	out    dx,al
  4019bf:	iret   
  4019c0:	loopne 0x401947
  4019c2:	mov    esi,0xdab43972
  4019c7:	mov    al,0xf7
  4019c9:	pushf  
  4019ca:	mov    ch,0xc
  4019cc:	imul   eax,DWORD PTR [esi+0x76656b6d],0xff95dd4a
  4019d6:	imul   esp,DWORD PTR [ecx-0x6a],0xffffffe3
  4019da:	(bad)  
  4019db:	sbb    edx,ecx
  4019dd:	lea    esi,[ecx+0x28]
  4019e0:	mov    BYTE PTR [ebx+0x404db667],al
  4019e6:	fist   DWORD PTR [esi+0x89e90df]
  4019ec:	retf   
  4019ed:	lods   al,BYTE PTR ds:[esi]
  4019ee:	out    dx,eax
  4019ef:	push   0xffffff94
  4019f1:	fwait
  4019f2:	lods   al,BYTE PTR ds:[esi]
  4019f3:	jge    0x40198f
  4019f5:	xor    bl,bh
  4019f7:	push   ecx
  4019f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019f9:	hlt    
  4019fa:	sbb    ebp,edi
  4019fc:	rol    esp,cl
  4019fe:	iret   
  4019ff:	mov    bh,0x7
  401a01:	(bad)  
  401a02:	mov    ch,0x7c
  401a04:	fcomp  QWORD PTR [ebx+0x5fe5690a]
  401a0a:	fidiv  WORD PTR ds:0x4c46dbaa
  401a10:	test   BYTE PTR [ebx],ah
  401a12:	pop    edx
  401a13:	fist   WORD PTR [ecx-0x35ab11b4]
  401a19:	pop    es
  401a1a:	mov    ah,0x8a
  401a1c:	clc    
  401a1d:	dec    esi
  401a1e:	leave  
  401a1f:	dec    eax
  401a20:	leave  
  401a21:	xchg   esi,eax
  401a22:	dec    eax
  401a23:	rol    DWORD PTR [edx-0x76],1
  401a26:	popf   
  401a27:	sbb    esp,ecx
  401a29:	into   
  401a2a:	mov    ebp,0x4867986f
  401a2f:	fmul   st,st(1)
  401a31:	and    al,0xe2
  401a33:	dec    esp
  401a34:	test   BYTE PTR [edx-0x7c0ef31],dh
  401a3a:	or     BYTE PTR [edi+0x3b],0x19
  401a3e:	pushf  
  401a3f:	stos   BYTE PTR es:[edi],al
  401a40:	cmp    al,0xff
  401a42:	inc    ebp
  401a43:	into   
  401a44:	pop    ds
  401a45:	(bad)  
  401a46:	jmp    0x401a00
  401a48:	rcl    BYTE PTR [ebx],cl
  401a4a:	mov    ecx,eax
  401a4c:	outs   dx,BYTE PTR ds:[esi]
  401a4d:	fsub   QWORD PTR [edi]
  401a4f:	pop    ecx
  401a50:	jne    0x401a38
  401a52:	call   0x5498:0xae35b9c4
  401a59:	les    eax,FWORD PTR [eax+0x16]
  401a5c:	scas   al,BYTE PTR es:[edi]
  401a5d:	les    edi,FWORD PTR [edi+0x140e2ff8]
  401a63:	stos   BYTE PTR es:[edi],al
  401a64:	cmp    BYTE PTR [eax+0x3e2c4eac],dh
  401a6a:	add    edi,DWORD PTR [esi-0x32c1265b]
  401a70:	mov    BYTE PTR [eax+eax*4],ch
  401a73:	rcl    BYTE PTR [edx],0x2b
  401a76:	aad    0xc5
  401a78:	(bad)  
  401a79:	xchg   edi,eax
  401a7a:	cmp    eax,DWORD PTR [eax+0x54d8883c]
  401a80:	mov    edx,0x2e23309a
  401a85:	fdiv   DWORD PTR [esp+ebp*1+0x77465b18]
  401a8c:	dec    edi
  401a8d:	mov    edi,0xaab2ef14
  401a92:	fisubr DWORD PTR [ebx+0x4ab746e0]
  401a98:	mov    ds:0x397ef2b,al
  401a9d:	add    edi,edi
  401a9f:	sbb    al,0x11
  401aa1:	fadd   st(0),st
  401aa3:	shl    dh,0x7
  401aa6:	nop
  401aa7:	sbb    al,0x25
  401aa9:	inc    ecx
  401aaa:	mov    eax,ds:0x2b135233
  401aaf:	popa   
  401ab0:	outs   dx,DWORD PTR ds:[esi]
  401ab1:	sar    BYTE PTR [ecx+0x42e34858],1
  401ab7:	dec    ebx
  401ab8:	ins    BYTE PTR es:[edi],dx
  401ab9:	pop    ebp
  401aba:	sahf   
  401abb:	in     eax,0x45
  401abd:	mov    dh,0xec
  401abf:	std    
  401ac0:	add    dh,0xb3
  401ac3:	scas   eax,DWORD PTR es:[edi]
  401ac4:	inc    ebp
  401ac5:	dec    ebx
  401ac6:	pop    esp
  401ac7:	out    dx,eax
  401ac8:	popf   
  401ac9:	dec    edi
  401aca:	xor    eax,0xefa83333
  401acf:	adc    eax,0xe52e32b7
  401ad4:	lahf   
  401ad5:	or     DWORD PTR [eax],esp
  401ad7:	cli    
  401ad8:	jl     0x401a61
  401ada:	pop    es
  401adb:	lds    ecx,FWORD PTR [ecx+0x26926070]
  401ae1:	jg     0x401ac7
  401ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae4:	(bad)  
  401ae5:	jbe    0x401adb
  401ae7:	mov    esp,0x9bed85bd
  401aec:	mov    edx,0x11262523
  401af1:	jnp    0x401a76
  401af3:	fld    QWORD PTR [ecx-0x40cb8fb6]
  401af9:	jo     0x401b4d
  401afb:	mov    bh,ch
  401afd:	push   ebp
  401afe:	shl    ah,0xf0
  401b01:	inc    esp
  401b02:	test   BYTE PTR [eax],al
  401b04:	int    0x8
  401b06:	or     edi,ecx
  401b08:	fnstenv ds:0x5a2514cc
  401b0e:	and    al,0xb
  401b10:	push   es
  401b11:	push   ebx
  401b12:	pop    ss
  401b13:	mov    ecx,0x789293e0
  401b18:	stos   DWORD PTR es:[edi],eax
  401b19:	sti    
  401b1a:	enter  0x939d,0x50
  401b1e:	addr16 xchg edi,eax
  401b20:	or     al,0x6
  401b22:	mov    ecx,edi
  401b24:	arpl   bx,ax
  401b26:	adc    al,0x95
  401b28:	pop    edi
  401b29:	pop    edx
  401b2a:	adc    bl,BYTE PTR [ebp-0x50835a34]
  401b30:	sbb    bl,cl
  401b32:	and    DWORD PTR [ebx],0x76b544ac
  401b38:	push   edi
  401b39:	int    0xb3
  401b3b:	bound  esi,QWORD PTR [ebp-0x283bec22]
  401b41:	pop    edi
  401b42:	xchg   esp,eax
  401b43:	mov    BYTE PTR [edx-0x5a],bl
  401b46:	les    esi,FWORD PTR [eax+0x26b04ab8]
  401b4c:	mov    eax,ds:0x9364f37e
  401b51:	pop    ecx
  401b52:	dec    edx
  401b53:	sub    esp,DWORD PTR [ebx]
  401b55:	jns    0x401b33
  401b57:	stos   BYTE PTR es:[edi],al
  401b58:	cmp    DWORD PTR [esi+ecx*1],eax
  401b5b:	adc    eax,0x7e06507d
  401b60:	jmp    0x61725b2b
  401b65:	xchg   DWORD PTR [ebx+0x22],esp
  401b68:	cmp    BYTE PTR [edx-0x1da85b74],ch
  401b6e:	sub    BYTE PTR [edx-0x3f],0xb9
  401b72:	inc    esp
  401b73:	inc    esi
  401b74:	add    al,BYTE PTR [ebp+0x1d1092ca]
  401b7a:	inc    ecx
  401b7b:	cmp    esi,DWORD PTR [ebx]
  401b7d:	rcl    dh,0x6
  401b80:	sbb    ecx,ebp
  401b82:	push   cs
  401b83:	sbb    DWORD PTR [edi-0x1ce340ce],esp
  401b89:	and    esp,eax
  401b8b:	dec    esi
  401b8c:	enter  0xf4ea,0xc6
  401b90:	in     al,dx
  401b91:	div    BYTE PTR [ecx*8-0x39112239]
  401b98:	leave  
  401b99:	(bad)  
  401b9a:	stc    
  401b9b:	push   esp
  401b9c:	fstp   DWORD PTR [ebp+0x16997be7]
  401ba2:	sub    dl,BYTE PTR [edi+ecx*8+0x63]
  401ba6:	call   0xba1b:0x7b102f78
  401bad:	stc    
  401bae:	push   0x39
  401bb0:	ja     0x401bf0
  401bb2:	push   ecx
  401bb3:	out    dx,al
  401bb4:	sub    al,ah
  401bb6:	punpckhbw mm5,QWORD PTR [eax]
  401bb9:	mov    bl,0x97
  401bbb:	js     0x401b93
  401bbd:	xchg   ecx,eax
  401bbe:	mov    esp,0x7b540c64
  401bc3:	aad    0x7a
  401bc5:	imul   esi,DWORD PTR [esi],0x2
  401bc8:	shl    edi,cl
  401bca:	inc    edx
  401bcb:	bound  esi,QWORD PTR [ecx+0x32]
  401bce:	(bad)  
  401bcf:	jno    0x401bc9
  401bd1:	out    0x4,al
  401bd3:	pop    edi
  401bd4:	jmp    0x9b11:0xa22c2a0e
  401bdb:	loope  0x401c16
  401bdd:	sub    bl,BYTE PTR [edx]
  401bdf:	mov    WORD PTR [edi],?
  401be1:	mov    bl,0x17
  401be3:	sbb    al,0xb7
  401be5:	push   edi
  401be6:	mov    bl,0x30
  401be8:	cdq    
  401be9:	jmp    0xda0182f1
  401bee:	loope  0x401b81
  401bf0:	pop    eax
  401bf1:	jnp    0x401c6e
  401bf3:	add    esp,ecx
  401bf5:	call   FWORD PTR [ebp-0x18d05e63]
  401bfb:	sub    BYTE PTR [esi+0x7b],ah
  401bfe:	pop    ebx
  401bff:	inc    eax
  401c00:	icebp  
  401c01:	sub    BYTE PTR [edx],0x21
  401c04:	cld    
  401c05:	push   ss
  401c06:	cwde   
  401c07:	lods   al,BYTE PTR ds:[esi]
  401c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c09:	shl    ah,cl
  401c0b:	test   eax,0x5e69552a
  401c10:	pushf  
  401c11:	push   edx
  401c12:	mov    ebp,0x6736b043
  401c17:	pop    ebp
  401c18:	enter  0x88d9,0x5
  401c1c:	fistp  DWORD PTR [eax+0x1c3a0f86]
  401c22:	add    ebp,DWORD PTR [eax+eax*1+0xc]
  401c26:	in     eax,dx
  401c27:	(bad)  
  401c29:	or     eax,0xcdd50037
  401c2e:	out    dx,eax
  401c2f:	ficomp WORD PTR [ecx-0x6c]
  401c32:	sub    DWORD PTR [esi+0x52b62921],edx
  401c38:	sbb    eax,0xd4fb8c91
  401c3d:	mov    eax,ds:0x3dc9049f
  401c42:	xchg   dl,bl
  401c44:	jle    0x401c45
  401c46:	out    dx,al
  401c47:	loope  0x401c8c
  401c49:	xor    edi,DWORD PTR [edx+ebp*8-0x71]
  401c4d:	test   al,0xa1
  401c4f:	aad    0x7e
  401c51:	push   edi
  401c52:	das    
  401c53:	rcr    BYTE PTR [ebx+0x1761762a],cl
  401c59:	nop
  401c5a:	test   eax,0xac199df9
  401c5f:	mov    edi,0x42cceb0a
  401c64:	or     al,0x8f
  401c66:	ins    DWORD PTR es:[edi],dx
  401c67:	and    al,bh
  401c69:	fsub   DWORD PTR [ebx+esi*1-0x2]
  401c6d:	dec    ebx
  401c6e:	xor    al,0x7
  401c70:	into   
  401c71:	mov    ebx,0x81dfb387
  401c76:	pusha  
  401c77:	bound  ebx,QWORD PTR [edx+0x6e]
  401c7a:	inc    ebx
  401c7b:	jns    0x401c5e
  401c7d:	ret    0xbb60
  401c80:	jbe    0x401cda
  401c82:	aas    
  401c83:	sbb    ch,dl
  401c85:	xchg   esp,eax
  401c86:	inc    edx
  401c87:	push   ecx
  401c88:	mov    edi,0xa721932f
  401c8d:	loopne 0x401c72
  401c8f:	lock mov esp,0xdbe0758e
  401c95:	(bad)  
  401c96:	jmp    0x401d15
  401c98:	or     BYTE PTR [eax-0x6ba949dd],al
  401c9e:	sub    BYTE PTR [ebp+eax*1+0x26],bl
  401ca2:	jmp    0xfdf44a3a
  401ca7:	mov    bh,0xe6
  401ca9:	ins    BYTE PTR es:[edi],dx
  401caa:	pcmpeqw mm5,QWORD PTR [ebp-0x7aad18a2]
  401cb1:	pop    ebx
  401cb2:	aaa    
  401cb3:	adc    dh,cl
  401cb5:	(bad)  
  401cb6:	mov    esp,0xb64aee5a
  401cbb:	xor    DWORD PTR [eax-0x54],ecx
  401cbe:	aad    0x1
  401cc0:	mov    ebp,0x5ad1a4a1
  401cc5:	in     eax,0x12
  401cc7:	add    ebp,ebp
  401cc9:	pop    ds
  401cca:	popf   
  401ccb:	fbstp  TBYTE PTR [ebx+eiz*1-0x3bd68ef4]
  401cd2:	jecxz  0x401cec
  401cd4:	push   edx
  401cd5:	outs   dx,BYTE PTR ds:[esi]
  401cd6:	retf   
  401cd7:	sbb    al,0xcc
  401cd9:	add    DWORD PTR [eax-0xb86b3df],esp
  401cdf:	push   esi
  401ce0:	test   al,0xb6
  401ce2:	call   0xc01a2a1b
  401ce7:	(bad)  
  401ce8:	test   eax,0x11783112
  401ced:	inc    ebp
  401cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cef:	int    0x98
  401cf1:	or     cl,cl
  401cf3:	iret   
  401cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cf5:	xchg   ecx,eax
  401cf6:	sbb    eax,DWORD PTR [ebp-0x52]
  401cf9:	out    0x3,al
  401cfb:	enter  0x2537,0x4f
  401cff:	mov    edi,0xb80d01b6
  401d04:	clc    
  401d05:	jo     0x401d0a
  401d07:	mov    bh,0xaf
  401d09:	outs   dx,BYTE PTR ds:[esi]
  401d0a:	and    bh,bh
  401d0c:	arpl   WORD PTR [edi-0x4b],di
  401d0f:	and    BYTE PTR [edi+0x73db4b8d],al
  401d15:	daa    
  401d16:	add    al,0x45
  401d18:	jmp    0x401d56
  401d1a:	add    al,0xeb
  401d1c:	adc    esp,ebx
  401d1e:	jl     0x401ca0
  401d20:	mov    eax,0xc0ba5bfb
  401d25:	and    DWORD PTR [ebx+edi*1],0x46
  401d29:	push   ecx
  401d2a:	or     esi,0x54d2fce
  401d30:	daa    
  401d31:	(bad)  
  401d33:	repz mov dh,BYTE PTR [esi]
  401d36:	test   DWORD PTR [ecx-0x663e89dd],edi
  401d3c:	sub    al,0x40
  401d3e:	dec    edx
  401d3f:	jns    0x401ce5
  401d41:	cmp    ch,bh
  401d43:	mov    edi,0x184c12bf
  401d48:	addr16 sbb ecx,esp
  401d4b:	ror    WORD PTR [edx],cl
  401d4e:	adc    eax,0xbd14f326
  401d53:	fld    TBYTE PTR [edi]
  401d55:	push   edi
  401d56:	jmp    0x401cf7
  401d58:	popa   
  401d59:	jmp    0x401d7e
  401d5b:	ret    
  401d5c:	sub    bh,ah
  401d5e:	aas    
  401d5f:	pop    ecx
  401d60:	loopne 0x401de0
  401d62:	into   
  401d63:	jmp    0x18d0:0xf08c972f
  401d6a:	inc    edi
  401d6b:	stos   BYTE PTR es:[edi],al
  401d6c:	mov    dl,0xab
  401d6e:	xlat   BYTE PTR ds:[ebx]
  401d6f:	dec    BYTE PTR [edi]
  401d71:	in     eax,dx
  401d72:	xor    DWORD PTR [ebx],ebx
  401d74:	in     eax,dx
  401d75:	bound  ebx,QWORD PTR [ecx-0x269b6be0]
  401d7b:	adc    BYTE PTR [ebp-0xe],bl
  401d7e:	ror    al,0xe9
  401d81:	popf   
  401d82:	or     DWORD PTR [edx+0x70],eax
  401d85:	(bad)  
  401d86:	cwde   
  401d87:	icebp  
  401d88:	adc    cl,ch
  401d8a:	pop    ds
  401d8b:	jp     0x401e05
  401d8d:	push   esi
  401d8e:	loop   0x401dfb
  401d90:	ret    
  401d91:	(bad)  
  401d92:	les    edx,FWORD PTR [ebp+0x255100de]
  401d98:	cld    
  401d99:	bound  edx,QWORD PTR ss:[ecx+0x1c]
  401d9d:	inc    esp
  401d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d9f:	inc    edi
  401da0:	inc    edx
  401da1:	push   ss
  401da2:	mov    ebx,0xebbeed54
  401da7:	hlt    
  401da8:	sbb    al,BYTE PTR [esi]
  401daa:	out    dx,al
  401dab:	lock into 
  401dad:	mov    ch,0xcc
  401daf:	ss xchg edx,eax
  401db1:	int    0x23
  401db3:	aam    0xc7
  401db5:	shl    DWORD PTR [ecx-0x13f5fd1e],1
  401dbb:	or     eax,DWORD PTR ds:0x876a0bc6
  401dc1:	loopne 0x401e14
  401dc3:	and    ch,BYTE PTR [esi+0x5]
  401dc6:	sub    eax,0xa79653df
  401dcb:	pop    ds
  401dcc:	test   DWORD PTR [eax],edi
  401dce:	sub    DWORD PTR [ecx+0x19],eax
  401dd1:	mov    edi,0xe047dc81
  401dd6:	dec    edi
  401dd7:	or     BYTE PTR ds:0x7d9d1bcd,0x84
  401dde:	in     al,dx
  401ddf:	in     al,0xa4
  401de1:	iret   
  401de2:	ins    BYTE PTR es:[edi],dx
  401de3:	mov    ch,cl
  401de5:	out    dx,al
  401de6:	call   0x4352799b
  401deb:	dec    ebx
  401dec:	call   DWORD PTR [ebp-0x72703df3]
  401df2:	pusha  
  401df3:	mov    ebp,0x3b9974c1
  401df8:	jno    0x401d85
  401dfa:	adc    BYTE PTR [edx],0x78
  401dfd:	loope  0x401e3d
  401dff:	enter  0xca3b,0xef
  401e03:	fwait
  401e04:	mov    bh,0xe6
  401e06:	ins    DWORD PTR es:[edi],dx
  401e07:	or     dl,bl
  401e09:	lea    ecx,[edi]
  401e0b:	add    DWORD PTR [edx],edi
  401e0d:	mov    dh,0xad
  401e0f:	test   cl,dh
  401e11:	std    
  401e12:	mov    ebx,0xdd999845
  401e17:	clc    
  401e18:	mov    ch,0x47
  401e1a:	fiadd  WORD PTR [eax+edx*2]
  401e1d:	ss test al,0x98
  401e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e21:	es clc 
  401e23:	retf   0x60fc
  401e26:	cld    
  401e27:	or     DWORD PTR [ebx],eax
  401e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e2a:	ins    BYTE PTR es:[edi],dx
  401e2b:	dec    edi
  401e2c:	dec    edi
  401e2d:	repnz scas al,BYTE PTR es:[edi]
  401e2f:	out    0xd9,al
  401e31:	sub    DWORD PTR [ebx+0x5ea0635a],edi
  401e37:	and    al,0x1c
  401e39:	xor    eax,DWORD PTR [ecx-0x62]
  401e3c:	addr16 dec esi
  401e3e:	xchg   edi,eax
  401e3f:	xchg   BYTE PTR [ebx-0x2],cl
  401e42:	xchg   esp,eax
  401e43:	mov    edx,0x62537289
  401e48:	std    
  401e49:	mov    cl,0xd
  401e4b:	movhps xmm5,QWORD PTR [ecx]
  401e4e:	push   0x3c
  401e50:	test   esi,ebp
  401e52:	mov    ecx,0x65514e31
  401e57:	lods   al,BYTE PTR ds:[esi]
  401e58:	(bad)  
  401e59:	popf   
  401e5a:	fdiv   DWORD PTR [ebx-0x4a50af4]
  401e60:	push   esi
  401e61:	sbb    eax,0x2477af33
  401e66:	test   al,0xd8
  401e68:	jns    0x401ebb
  401e6a:	enter  0xb18b,0xcd
  401e6e:	ins    BYTE PTR es:[edi],dx
  401e6f:	ror    DWORD PTR [edi-0x4a],0xc2
  401e73:	jae    0x401ee8
  401e75:	dec    esp
  401e76:	imul   ebp,ecx,0xffffffba
  401e79:	and    bl,BYTE PTR [esi-0x36463478]
  401e7f:	push   ebx
  401e80:	inc    ebx
  401e81:	(bad)  
  401e82:	into   
  401e83:	dec    edi
  401e84:	xchg   BYTE PTR [edi-0x7c5f9ebf],bh
  401e8a:	push   edi
  401e8b:	sahf   
  401e8c:	les    esp,FWORD PTR [esi+0x1d1aac]
  401e92:	test   cl,bl
  401e94:	push   es
  401e95:	xchg   edx,eax
  401e96:	fiadd  WORD PTR [ebx-0x2910ded0]
  401e9c:	mov    WORD PTR [ecx+0x6f],cs
  401e9f:	call   0x36cac9fc
  401ea4:	push   0xd197c9a2
  401ea9:	(bad)  
  401eaa:	mov    bh,0xf4
  401eac:	call   0xf9a7:0x801e1c8c
  401eb3:	fcom   DWORD PTR ds:0xd341c3ec
  401eb9:	xor    bh,al
  401ebb:	lea    ebp,ds:[edx+0x3c]
  401ebf:	ss dec eax
  401ec1:	push   ebp
  401ec2:	adc    eax,0x8cac40b0
  401ec7:	dec    ebp
  401ec8:	jge    0x401ef2
  401eca:	dec    esi
  401ecb:	and    DWORD PTR [edi-0x19],eax
  401ece:	int    0x17
  401ed0:	push   ebx
  401ed1:	add    ecx,DWORD PTR [ebx]
  401ed3:	adc    eax,0x309aa2e3
  401ed8:	test   eax,0xef178edf
  401edd:	aaa    
  401ede:	lahf   
  401edf:	mov    bl,0x8b
  401ee1:	pop    DWORD PTR [esi+eiz*8+0x78b890c8]
  401ee8:	aas    
  401ee9:	sbb    BYTE PTR [eax+0x7df15885],dh
  401eef:	sahf   
  401ef0:	in     eax,0xc5
  401ef2:	add    DWORD PTR [eax-0x85fcd8d],0x4d
  401ef9:	mov    edx,0x732f9684
  401efe:	mov    ecx,0x929dbb22
  401f03:	jp     0x401f65
  401f05:	jg     0x401f4b
  401f07:	imul   edi,ebx,0x1b267a91
  401f0d:	xlat   BYTE PTR ds:[ebx]
  401f0e:	push   edi
  401f0f:	repz push eax
  401f11:	sub    ah,BYTE PTR ds:0xd5eaa384
  401f17:	popf   
  401f18:	loope  0x401efd
  401f1a:	and    esi,DWORD PTR [edx+0x2b]
  401f1d:	sbb    BYTE PTR [ebp+0x44],ch
  401f20:	pop    esi
  401f21:	pushf  
  401f22:	ret    
  401f23:	add    dh,BYTE PTR [edi+ecx*8-0x4c]
  401f27:	je     0x401ee4
  401f29:	data16 std 
  401f2b:	or     eax,0x9d4b1573
  401f30:	test   DWORD PTR [ecx-0x1c84def2],0xfdafc77d
  401f3a:	cmp    ah,bh
  401f3c:	push   ds
  401f3d:	icebp  
  401f3e:	sub    ah,BYTE PTR [edx-0x7fcb7dad]
  401f44:	(bad)  
  401f45:	es (bad) 
  401f47:	push   edi
  401f48:	jae    0x401ecc
  401f4a:	pop    es
  401f4b:	adc    ah,BYTE PTR [ebx-0x2a37a82d]
  401f51:	lock jbe 0x401f96
  401f54:	adc    ebx,DWORD PTR [edi+0x755ce906]
  401f5a:	adc    ecx,DWORD PTR [edx-0x1]
  401f5d:	sbb    DWORD PTR [ebx-0x563a048],ecx
  401f63:	mov    esp,0x3074d8a6
  401f68:	jb     0x401f90
  401f6a:	sbb    ch,BYTE PTR [eax]
  401f6c:	xchg   ebp,esi
  401f6e:	cli    
  401f6f:	(bad)  
  401f70:	xor    bh,BYTE PTR [edi+0x47f0308f]
  401f76:	nop
  401f77:	addr16 jl 0x401f20
  401f7a:	cwde   
  401f7b:	jg     0x401f36
  401f7d:	test   ecx,ecx
  401f7f:	inc    ecx
  401f80:	mov    ch,0xde
  401f82:	cli    
  401f83:	xchg   esp,eax
  401f84:	push   esp
  401f85:	jno    0x8af7aff4
  401f8b:	fisttp QWORD PTR [edi]
  401f8d:	xor    al,0xaf
  401f8f:	jl     0x401f29
  401f91:	test   al,0xad
  401f93:	xchg   edi,eax
  401f94:	fs ret 
  401f96:	fsub   QWORD PTR [edi+eiz*4+0x24]
  401f9a:	leave  
  401f9b:	mov    BYTE PTR [eax],cl
  401f9d:	test   eax,0x3bf56dea
  401fa2:	popa   
  401fa3:	loope  0x401f84
  401fa5:	and    al,0x7a
  401fa7:	pop    ebx
  401fa8:	mov    ?,WORD PTR [edi-0x7a9aa245]
  401fae:	nop
  401faf:	lods   al,BYTE PTR ds:[esi]
  401fb0:	(bad)  
  401fb1:	mov    ah,0xe8
  401fb3:	xchg   esi,eax
  401fb4:	neg    DWORD PTR [ebp-0x61f1a238]
  401fba:	into   
  401fbb:	jl     0x401f8a
  401fbd:	jne    0x401fcb
  401fbf:	push   esp
  401fc0:	out    0x59,eax
  401fc2:	out    0x16,eax
  401fc4:	stos   BYTE PTR es:[edi],al
  401fc5:	sbb    DWORD PTR [edx],edi
  401fc7:	and    dl,bh
  401fc9:	push   ds
  401fca:	std    
  401fcb:	int3   
  401fcc:	dec    eax
  401fcd:	test   BYTE PTR [esp+ebx*8],al
  401fd0:	xor    DWORD PTR [ecx+0x49],eax
  401fd3:	fild   WORD PTR ds:0xf2ac5a24
  401fd9:	lods   al,BYTE PTR ds:[esi]
  401fda:	sub    eax,0x65d1581a
  401fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fe0:	push   cs
  401fe1:	jg     0x40202d
  401fe3:	inc    ebx
  401fe4:	call   0xb150:0x6742312c
  401feb:	xchg   edx,ebx
  401fed:	data16 fisttp QWORD PTR [edx+eax*4-0x7]
  401ff2:	lds    ebx,FWORD PTR [ebp+0x7e]
  401ff5:	pop    ebp
  401ff6:	dec    esi
  401ff7:	xchg   edx,eax
  401ff8:	call   0xfb27:0x4a330b2c
  401fff:	cli    
  402000:	and    esp,DWORD PTR [edi+0x4d]
  402003:	cmp    eax,0xe84da22b
  402008:	cmp    dl,BYTE PTR [ecx+esi*1]
  40200b:	(bad)  
  40200d:	xor    BYTE PTR [ebx-0x3f],0xe5
  402011:	hlt    
  402012:	repnz mov ds:0xd9581416,al
  402018:	fldenv [edx+0x2e37f25c]
  40201e:	sub    eax,0xa94d8c38
  402023:	lahf   
  402024:	into   
  402025:	pop    esp
  402026:	popf   
  402027:	inc    ebp
  402028:	push   ds
  402029:	mov    edi,DWORD PTR [eax+ebp*8-0x70ac1615]
  402030:	xor    ch,BYTE PTR ds:0x201e4057
  402036:	test   DWORD PTR [ecx],eax
  402038:	mov    ch,0x1b
  40203b:	clc    
  40203c:	push   cs
  40203d:	clc    
  40203e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40203f:	mov    ch,ch
  402041:	div    BYTE PTR ds:0xca640414
  402047:	mov    cl,0x8e
  402049:	mov    dh,0xff
  40204b:	jle    0x4020a5
  40204d:	loope  0x40206b
  40204f:	add    esi,DWORD PTR [ecx+ebx*1+0x5d08c314]
  402056:	mov    eax,ds:0x99b233c5
  40205b:	ja     0x401fe8
  40205d:	stc    
  40205e:	rcl    DWORD PTR [ebx],0xe7
  402061:	dec    BYTE PTR [edi+0x4cce4692]
  402067:	ss add edx,edx
  40206a:	xchg   ebp,eax
  40206b:	(bad)  
  40206c:	adc    ah,bh
  40206e:	or     eax,0xa87fecc1
  402073:	push   cs
  402074:	or     BYTE PTR [ebx-0x26a2c203],dh
  40207a:	mov    ds:0x61a32e5e,eax
  40207f:	push   ecx
  402080:	sbb    al,0xbf
  402082:	add    DWORD PTR [eax+eax*8],eax
  402085:	xor    eax,0xb690a539
  40208a:	cmp    ch,BYTE PTR ds:0x8b3b1508
  402090:	pusha  
  402091:	xor    ebp,DWORD PTR [edx]
  402093:	ror    ch,0x38
  402096:	jl     0x402051
  402098:	frstor [edx]
  40209a:	pop    ebp
  40209b:	or     al,0x72
  40209d:	jl     0x402092
  40209f:	ret    
  4020a0:	fdivr  QWORD PTR [esi-0x5ce74e7b]
  4020a6:	mov    ds:0x3448a56b,eax
  4020ab:	mov    fs,WORD PTR [eax-0x34d7a42a]
  4020b1:	pop    ds
  4020b2:	sub    edi,DWORD PTR [ecx+0xf8298d6]
  4020b8:	sub    ebx,0x7f
  4020bb:	mov    DWORD PTR [esi+edi*4-0x77d4537d],edi
  4020c2:	fstp   TBYTE PTR [esi-0x2df16d80]
  4020c8:	sbb    al,0xf
  4020ca:	cld    
  4020cb:	popf   
  4020cc:	rcl    BYTE PTR [edi-0x5d],1
  4020cf:	cmp    al,0x69
  4020d1:	add    eax,0xd94d6d5d
  4020d6:	sbb    al,0x60
  4020d8:	icebp  
  4020d9:	fisubr DWORD PTR [edi-0xc61c398]
  4020df:	aam    0xad
  4020e1:	xor    dl,BYTE PTR [eax-0x6c]
  4020e4:	es test eax,0x93f556a1
  4020ea:	fsubr  QWORD PTR [esi-0x1b]
  4020ed:	fcomp  DWORD PTR [esi-0x72]
  4020f0:	push   eax
  4020f1:	neg    DWORD PTR [eax-0x6855cc15]
  4020f7:	stos   DWORD PTR es:[edi],eax
  4020f8:	(bad)  
  4020f9:	js     0x402106
  4020fb:	pop    esi
  4020fc:	inc    ecx
  4020fd:	popf   
  4020fe:	pusha  
  4020ff:	aad    0x22
  402101:	rcl    BYTE PTR [ecx],0x80
  402104:	mov    bl,0xc
  402106:	xchg   esi,eax
  402107:	adc    bl,dl
  402109:	enter  0xaf2d,0xdf
  40210d:	inc    edi
  40210e:	dec    ecx
  40210f:	xchg   esi,eax
  402110:	fwait
  402111:	mov    edi,0x6eda6296
  402116:	scas   eax,DWORD PTR es:[edi]
  402117:	inc    ebp
  402118:	jmp    0x405a33e7
  40211d:	aas    
  40211e:	mov    bh,0xa7
  402120:	loope  0x40219d
  402122:	hlt    
  402123:	mov    edx,0x1262df00
  402128:	cmp    bl,BYTE PTR [eax-0x35209728]
  40212e:	adc    al,0xca
  402130:	loop   0x40215d
  402132:	inc    esp
  402133:	out    dx,al
  402134:	out    0x33,al
  402136:	pop    ds
  402137:	pop    esi
  402138:	mov    cs,WORD PTR [ecx]
  40213a:	mov    edx,0x743142e3
  40213f:	fsubr  QWORD PTR [edi+ebx*1+0x55]
  402143:	sub    eax,0xb1a7b1f
  402148:	or     al,BYTE PTR [esi+0x9f676ab]
  40214e:	jns    0x40210f
  402150:	mov    DWORD PTR ds:0xcace2bff,esp
  402156:	add    al,0x68
  402158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402159:	addr16 xchg esp,eax
  40215b:	aad    0x54
  40215d:	dec    ecx
  40215e:	bound  ebx,QWORD PTR [eax+0x6c0de722]
  402164:	scas   al,BYTE PTR es:[edi]
  402165:	shr    DWORD PTR cs:[ecx-0x30],cl
  402169:	adc    eax,0xd725e97b
  40216e:	adc    edi,DWORD PTR [ebx+0x0]
  402171:	sub    BYTE PTR [edx+0x1e],dl
  402174:	mov    ch,0x3b
  402176:	sub    DWORD PTR [edi-0x10],0xae739c84
  40217d:	js     0x4021dd
  40217f:	shr    ebx,0xed
  402182:	loopne 0x4021f5
  402184:	sub    eax,0x7991e26c
  402189:	mov    BYTE PTR [edx+0x4777fcb6],dh
  40218f:	mov    bh,0x1b
  402191:	adc    esp,DWORD PTR [edi-0x32]
  402194:	mov    bh,0xce
  402196:	xchg   DWORD PTR [ebx+edx*1-0x5c],esp
  40219a:	jns    0x402133
  40219c:	and    DWORD PTR [eax+edx*2+0x44702edb],ebp
  4021a3:	xchg   bh,bh
  4021a5:	loop   0x402199
  4021a7:	and    edx,DWORD PTR [eax]
  4021a9:	daa    
  4021aa:	sbb    bl,ch
  4021ac:	mov    al,ds:0x90cf0b12
  4021b1:	or     BYTE PTR [eax+0x7],ch
  4021b4:	dec    edx
  4021b5:	pop    ebx
  4021b6:	inc    edx
  4021b7:	aas    
  4021b8:	pushf  
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	dec    eax
  4021bb:	scas   al,BYTE PTR es:[edi]
  4021bc:	xor    BYTE PTR ds:0x8d9a89ea,ch
  4021c2:	and    edi,DWORD PTR [esi+edi*4]
  4021c5:	jge    0x40214f
  4021c7:	inc    eax
  4021c8:	xchg   ecx,eax
  4021c9:	or     al,BYTE PTR [ebx+0x14d334f4]
  4021cf:	sbb    eax,0xa814272e
  4021d4:	stc    
  4021d5:	adc    bl,BYTE PTR [esi+0x636a8f0]
  4021db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021dc:	xchg   ebp,eax
  4021dd:	out    dx,eax
  4021de:	push   ecx
  4021df:	and    DWORD PTR [eax+edx*8+0x39],esp
  4021e3:	test   BYTE PTR [edi-0x5610aa5d],dh
  4021e9:	dec    ebx
  4021ea:	mov    ds:0x4527158a,eax
  4021ef:	imul   esi,DWORD PTR [esi-0x4a],0x521f9826
  4021f6:	and    edx,0xf629cb8c
  4021fc:	fild   WORD PTR [ecx-0x44]
  4021ff:	leave  
  402200:	popa   
  402201:	shl    DWORD PTR [edi-0x3d],cl
  402204:	fwait
  402205:	dec    ebx
  402206:	nop
  402207:	lods   al,BYTE PTR ds:[esi]
  402208:	pop    edx
  402209:	aas    
  40220a:	xor    dl,BYTE PTR [ebp-0x14]
  40220d:	imul   edx,esp,0xffffffe8
  402210:	gs clc 
  402212:	jmp    0xd6e6c6dd
  402217:	mov    ch,0x55
  402219:	mov    eax,ds:0xcc7c24b3
  40221e:	sbb    bh,BYTE PTR [edi]
  402220:	and    cl,dh
  402222:	mov    bl,BYTE PTR [edx-0x47]
  402225:	jmp    FWORD PTR [ecx]
  402227:	dec    ebx
  402228:	xchg   edi,eax
  402229:	rcr    BYTE PTR [eax-0x484b115b],cl
  40222f:	cdq    
  402230:	lods   eax,DWORD PTR ds:[esi]
  402231:	pop    edx
  402232:	pop    es
  402233:	sbb    DWORD PTR [ebx+0x61],ecx
  402236:	fmulp  st(5),st
  402238:	sbb    edx,eax
  40223a:	jecxz  0x4021fb
  40223c:	mov    ah,0x4d
  40223e:	mov    ch,0x28
  402240:	test   DWORD PTR ds:0x810190b9,0x500e5453
  40224a:	xor    al,0x29
  40224c:	and    DWORD PTR [ebp+ebx*2+0x29],0x859292c4
  402254:	mov    esi,0x3ce881a7
  402259:	test   BYTE PTR [eax],ah
  40225b:	test   al,0xb0
  40225d:	(bad)  
  40225e:	mov    dh,0x97
  402260:	dec    esp
  402261:	test   al,0x7e
  402263:	inc    edi
  402264:	push   edi
  402265:	mov    al,ds:0xa971f6e6
  40226a:	data16 outs dx,BYTE PTR gs:[esi]
  40226d:	fwait
  40226e:	add    ecx,DWORD PTR [edx-0x6c4f6f75]
  402274:	mov    cl,0xa8
  402276:	push   eax
  402277:	sub    dl,bl
  402279:	std    
  40227a:	jmp    0x9aedd840
  40227f:	inc    esp
  402280:	ja     0x402259
  402282:	inc    ecx
  402283:	sti    
  402284:	imul   esi,DWORD PTR [edx+ebp*8-0x4df44cce],0xffffffa5
  40228c:	std    
  40228d:	inc    ebx
  40228e:	cmp    eax,0xf6da71a7
  402293:	mov    ebp,0x985a5115
  402298:	je     0x4022ea
  40229a:	retf   
  40229b:	cmp    al,0x5a
  40229d:	cmc    
  40229e:	into   
  40229f:	and    al,0x98
  4022a1:	daa    
  4022a2:	int3   
  4022a3:	icebp  
  4022a4:	ins    DWORD PTR es:[edi],dx
  4022a5:	test   al,0x31
  4022a7:	xlat   BYTE PTR ds:[ebx]
  4022a8:	sub    eax,0xf605de92
  4022ad:	xchg   ebx,eax
  4022ae:	mov    esi,DWORD PTR [edi+0x51680859]
  4022b4:	jns    0x40232c
  4022b6:	shl    BYTE PTR [eax+0x5b],cl
  4022b9:	xor    ebx,eax
  4022bb:	xchg   ebx,eax
  4022bc:	push   ebp
  4022bd:	xchg   ebp,eax
  4022be:	bound  esp,QWORD PTR [edi+0x7a]
  4022c1:	repnz and eax,0x33c7b7bf
  4022c7:	cmp    bh,BYTE PTR [edi-0x8]
  4022ca:	xor    DWORD PTR [ecx],esp
  4022cc:	sbb    eax,0xcc7b56e4
  4022d1:	or     ch,al
  4022d3:	cmp    BYTE PTR [edx+0x44],dh
  4022d6:	std    
  4022d7:	and    eax,0xadced072
  4022dc:	lahf   
  4022dd:	dec    esp
  4022de:	cmpps  xmm7,XMMWORD PTR [ecx-0x18],0x8
  4022e3:	mov    cl,0x5a
  4022e5:	sbb    esi,DWORD PTR [edx+0x18]
  4022e8:	xor    eax,DWORD PTR [ecx+0x17]
  4022eb:	inc    esp
  4022ec:	pop    ss
  4022ed:	ror    DWORD PTR [edx+eax*1-0x7f],1
  4022f1:	mov    ch,0xc6
  4022f3:	repnz and al,0x5e
  4022f7:	lods   al,BYTE PTR ds:[esi]
  4022f8:	les    esp,FWORD PTR [esi]
  4022fa:	xor    ch,BYTE PTR [ecx+0x48682451]
  402300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402301:	inc    ebp
  402302:	shr    DWORD PTR [ebx+0x49],0x4e
  402306:	mov    esp,0x85d3dae0
  40230b:	ds cmp al,0x3d
  40230e:	sub    BYTE PTR [edx-0x23],al
  402311:	push   ss
  402312:	and    al,BYTE PTR [edi+eiz*2+0x33]
  402316:	stc    
  402317:	jg     0x4022ea
  402319:	mov    bl,0x8a
  40231b:	ret    
  40231c:	push   ds
  40231d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231e:	mov    ah,0xf0
  402320:	jg     0x40238d
  402322:	les    ebx,FWORD PTR [ebx]
  402324:	jbe    0x4022f5
  402326:	inc    ecx
  402327:	adc    DWORD PTR [ebx+0x68298871],0x3015e88b
  402331:	ja     0x4022da
  402333:	in     al,dx
  402334:	rcr    DWORD PTR [edi],0x8
  402337:	inc    eax
  402338:	je     0x402350
  40233a:	mov    ecx,DWORD PTR [ecx+edx*8+0x5d]
  40233e:	mov    eax,0x54befa82
  402343:	in     al,dx
  402344:	ror    BYTE PTR [ebx+0x37dfd6a0],1
  40234a:	mov    bl,BYTE PTR [ecx-0x31]
  40234d:	out    dx,eax
  40234e:	push   ds
  40234f:	jecxz  0x4022f4
  402351:	mov    esi,0xe526ada9
  402356:	fdivp  st(4),st
  402358:	shl    ebp,1
  40235a:	add    edi,DWORD PTR [ebx-0x72a6dec5]
  402360:	dec    eax
  402361:	push   edx
  402362:	sbb    al,al
  402364:	push   esi
  402365:	and    esi,edi
  402367:	test   eax,0x60ba2fb1
  40236c:	mov    DWORD PTR [esp+eax*4+0x2e],0xc2b30645
  402374:	mov    ebx,?
  402376:	push   eax
  402377:	inc    esi
  402378:	xchg   ebp,eax
  402379:	lahf   
  40237a:	mov    ebx,0x70a4e6cc
  40237f:	mov    ch,0xbd
  402381:	das    
  402382:	jno    0x40235b
  402384:	push   0x17
  402386:	inc    esp
  402387:	iret   
  402388:	jno    0x402330
  40238a:	mov    ss,WORD PTR [ebx-0x3e]
  40238d:	dec    ebp
  40238e:	call   0x37cdb510
  402393:	pop    edx
  402394:	ret    0x8dac
  402397:	imul   bh
  402399:	jnp    0x402334
  40239b:	push   0xafee7c07
  4023a0:	mov    dh,BYTE PTR [ebp-0x26]
  4023a3:	popf   
  4023a4:	js     0x4023a9
  4023a6:	retf   
  4023a7:	pop    ss
  4023a8:	jl     0x4023c7
  4023aa:	mov    BYTE PTR [eax],0xf6
  4023ad:	pop    ebx
  4023ae:	jb     0x402341
  4023b0:	push   cs
  4023b1:	dec    esi
  4023b2:	push   ecx
  4023b3:	int    0xe3
  4023b5:	sti    
  4023b6:	clc    
  4023b7:	mov    bh,BYTE PTR [ecx-0xa]
  4023ba:	pop    ebx
  4023bb:	out    dx,eax
  4023bc:	mov    eax,ds:0xdafb27b5
  4023c1:	shl    BYTE PTR [ebx+0x6a625e5b],1
  4023c7:	xchg   esp,eax
  4023c8:	test   DWORD PTR [esi],edx
  4023ca:	ja     0x402355
  4023cc:	rcr    BYTE PTR [ecx],1
  4023ce:	loope  0x402424
  4023d0:	ds pop ecx
  4023d2:	dec    ebp
  4023d3:	stos   DWORD PTR es:[edi],eax
  4023d4:	inc    edx
  4023d5:	lea    ecx,[ebp+0x15]
  4023d8:	mov    ds:0xeeb4a854,al
  4023dd:	js     0x4023f8
  4023df:	xor    eax,0x4b8d22c7
  4023e4:	cld    
  4023e5:	sub    BYTE PTR [edi-0x6ebf25c9],bh
  4023eb:	add    ecx,DWORD PTR [ecx]
  4023ed:	xor    esi,esp
  4023ef:	loope  0x4023b8
  4023f1:	mov    bl,0x56
  4023f3:	pop    esp
  4023f4:	lock xor eax,eax
  4023f7:	lea    esi,[ebp+0x28207831]
  4023fd:	pop    DWORD PTR [edi-0x1ecb5760]
  402403:	jno    0x402415
  402405:	xor    BYTE PTR [ecx+0x5],0x49
  402409:	sbb    DWORD PTR [ebx+0x455eca32],esp
  40240f:	imul   edx,ebp,0xbc032e94
  402415:	repnz repz or esi,DWORD PTR [eax+eax*1+0x19]
  40241b:	and    eax,0x78cde1b5
  402420:	daa    
  402421:	push   es
  402422:	xchg   edx,eax
  402423:	add    bh,dh
  402425:	fld    st(4)
  402427:	xchg   ebx,eax
  402428:	test   DWORD PTR gs:[esp+eiz*4+0x12],edi
  40242d:	cmp    ebx,DWORD PTR [ebx]
  40242f:	inc    ecx
  402430:	scas   al,BYTE PTR es:[edi]
  402431:	cli    
  402432:	sbb    eax,0x1ec7a0bc
  402437:	fwait
  402438:	jge    0x4024a7
  40243a:	retf   
  40243b:	mov    eax,0x35180490
  402440:	mov    cl,0xb8
  402442:	shl    BYTE PTR [edi],1
  402444:	in     al,0xdc
  402446:	test   dl,dh
  402448:	les    ebx,FWORD PTR [esi]
  40244a:	loopne 0x4023dd
  40244c:	or     DWORD PTR [edi+0x67],edx
  40244f:	and    ebp,DWORD PTR [edx-0x6b]
  402452:	or     BYTE PTR [ebx+eiz*8+0x66f77be6],0x18
  40245a:	and    cl,ch
  40245c:	sub    ebp,DWORD PTR [edx+0x421ff6f]
  402462:	addr16 sub al,0x7f
  402465:	mov    WORD PTR [ecx],ds
  402467:	jno    0x4024a0
  402469:	outs   dx,DWORD PTR ss:[esi]
  40246b:	fcomp  st(6)
  40246d:	jge    0x402477
  40246f:	cmp    dh,BYTE PTR [ebx+0xc]
  402472:	jns    0x402407
  402474:	push   ebx
  402475:	repnz pop ebx
  402477:	mov    dl,0xf
  402479:	or     eax,0x64369f56
  40247e:	fstp   QWORD PTR [eax]
  402480:	into   
  402481:	(bad)
  402484:	push   esp
  402485:	cdq    
  402486:	mov    ch,0xeb
  402488:	add    ah,BYTE PTR [ecx+ebp*1+0x1e]
  40248c:	rol    BYTE PTR [esi],0xca
  40248f:	outs   dx,DWORD PTR ds:[esi]
  402490:	into   
  402491:	ret    
  402492:	addr16 in al,dx
  402494:	call   0x2e1c9eba
  402499:	mov    ss,ebx
  40249b:	fimul  WORD PTR [ecx+0x69]
  40249e:	ins    BYTE PTR es:[edi],dx
  40249f:	jb     0x4024fd
  4024a1:	ins    BYTE PTR es:[edi],dx
  4024a2:	mov    ds:0xc8e600ce,al
  4024a7:	pop    eax
  4024a8:	push   ss
  4024a9:	jb     0x402434
  4024ab:	dec    eax
  4024ac:	popf   
  4024ad:	data16 xchg BYTE PTR [esi+eax*2-0x2d606ccb],dh
  4024b5:	cmp    ecx,DWORD PTR [esi]
  4024b7:	pop    esp
  4024b8:	xor    al,0x0
  4024ba:	sub    DWORD PTR [esi+0x50cadbe1],esi
  4024c0:	jmp    0x87ca3d7c
  4024c5:	rcl    BYTE PTR [eax-0x6cda4795],cl
  4024cb:	pop    edi
  4024cc:	test   BYTE PTR [ebp-0x69],al
  4024cf:	xor    eax,0xc5996255
  4024d4:	fnsave [bx-0x7125]
  4024d9:	push   ss
  4024da:	push   es
  4024db:	jmp    0xf46366d
  4024e0:	pop    esi
  4024e1:	mov    ebx,ebx
  4024e3:	imul   BYTE PTR [ebp+0x47cc311d]
  4024e9:	in     eax,dx
  4024ea:	or     dl,BYTE PTR [ebx]
  4024ec:	sbb    al,0x5b
  4024ee:	shr    bh,1
  4024f0:	sub    edx,DWORD PTR [eax+eax*8-0x28]
  4024f4:	imul   ebx,DWORD PTR [ecx+0xffc8d7f],0xb96a9c11
  4024fe:	ss int3 
  402500:	imul   edi,DWORD PTR ds:0x1119c6d6,0xffffffbb
  402507:	mov    ah,BYTE PTR [edi+0x64]
  40250a:	dec    eax
  40250b:	dec    ebx
  40250c:	dec    ecx
  40250d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40250e:	cmp    eax,0xe68cdf76
  402513:	out    dx,al
  402514:	jnp    0x402531
  402516:	call   0xccbf:0x27503605
  40251d:	jne    0x4024ee
  40251f:	xor    BYTE PTR [ecx-0x4f],cl
  402522:	test   DWORD PTR [edi],esp
  402524:	jo     0x40259e
  402526:	cmp    eax,0xb0e92f6e
  40252b:	popf   
  40252c:	inc    ecx
  40252d:	mov    DWORD PTR ds:0x8e7c8629,eax
  402533:	and    al,BYTE PTR cs:[bx+si]
  402537:	xchg   ecx,eax
  402538:	gs mov esi,es
  40253b:	jb     0x402549
  40253d:	mov    esp,0x69187a30
  402542:	(bad)  
  402544:	jne    0x4025b1
  402546:	add    DWORD PTR ds:0xa3c66c79,0x3d915cec
  402550:	adc    DWORD PTR [eax+0x9],ecx
  402553:	push   0x74
  402555:	mov    dl,0xdb
  402557:	stc    
  402558:	xor    ah,bl
  40255a:	and    ah,BYTE PTR [edx+0x6e]
  40255d:	ror    BYTE PTR [edx+0x401e110e],1
  402563:	or     dh,cl
  402565:	push   eax
  402566:	repnz test eax,0x1ef27afa
  40256c:	pushf  
  40256d:	lods   al,BYTE PTR ds:[esi]
  40256e:	jb     0x402593
  402570:	and    bl,bl
  402572:	lahf   
  402573:	rcl    DWORD PTR ss:[edi+0x63],0x8e
  402578:	ins    DWORD PTR es:[edi],dx
  402579:	mov    edx,0xb3ce5492
  40257e:	cmp    bl,al
  402580:	push   esi
  402581:	pop    ss
  402582:	jmp    0x6e38efb
  402587:	jle    0x40252f
  402589:	hlt    
  40258a:	out    0xbe,eax
  40258c:	(bad)  
  40258d:	out    0xd9,al
  40258f:	outs   dx,BYTE PTR ds:[esi]
  402590:	pop    edi
  402591:	jo     0x40255c
  402593:	aad    0x34
  402595:	outs   dx,BYTE PTR ds:[esi]
  402596:	mov    al,0x17
  402598:	push   esp
  402599:	icebp  
  40259a:	dec    esi
  40259b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40259c:	out    0x23,eax
  40259e:	jmp    0xae4e:0x58eefdb1
  4025a5:	mov    WORD PTR [ebp-0x1b],fs
  4025a8:	pop    es
  4025a9:	mov    ebp,DWORD PTR [esi-0x5c]
  4025ac:	jo     0x402595
  4025ae:	int    0xf
  4025b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b1:	in     al,0xfd
  4025b3:	push   es
  4025b4:	xchg   edi,eax
  4025b5:	or     BYTE PTR [edx],ch
  4025b7:	pop    es
  4025b8:	js     0x40253e
  4025ba:	and    dh,al
  4025bc:	push   es
  4025bd:	cmp    al,0x4e
  4025bf:	ds pop ds
  4025c1:	sub    BYTE PTR [ebx-0x6a],al
  4025c4:	mov    esp,0x361cdf3
  4025c9:	sets   ah
  4025cc:	xor    DWORD PTR [eax],ebp
  4025ce:	test   BYTE PTR [eax+edi*1-0x49],al
  4025d2:	sub    edx,esp
  4025d4:	imul   ecx,DWORD PTR [eax-0x142e1808],0x6f
  4025db:	cs arpl cx,di
  4025de:	loop   0x4025d7
  4025e0:	xor    cl,BYTE PTR [ebx+0x2598ae67]
  4025e6:	cmp    al,0xf8
  4025e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025e9:	pop    esp
  4025ea:	mov    DWORD PTR [edi+0x23],eax
  4025ed:	dec    ebx
  4025ee:	push   ss
  4025ef:	dec    eax
  4025f0:	jno    0x4025e8
  4025f2:	cmp    bl,BYTE PTR [ebx-0x5e]
  4025f5:	adc    DWORD PTR [ebx+eax*4-0x71],edx
  4025f9:	retf   0x2eab
  4025fc:	icebp  
  4025fd:	(bad)  
  4025fe:	sbb    eax,0xc3838168
  402603:	sub    eax,0xd2b5d164
  402608:	outs   dx,DWORD PTR ds:[esi]
  402609:	cmp    al,0xa6
  40260b:	ds ins BYTE PTR es:[edi],dx
  40260d:	or     DWORD PTR [eax],eax
  40260f:	ja     0x4025f5
  402611:	hlt    
  402612:	int    0xb2
  402614:	pop    ss
  402615:	out    dx,eax
  402616:	dec    eax
  402617:	xor    eax,0x8233b772
  40261c:	push   edi
  40261d:	cmp    WORD PTR [edi-0x43ac8e55],cx
  402624:	retf   
  402625:	jp     0x402648
  402627:	add    esp,0x60a19c07
  40262d:	pushf  
  40262e:	mov    eax,ds:0x2a994510
  402633:	call   DWORD PTR [edx+ecx*8+0x43]
  402637:	sub    DWORD PTR [ebp+0x78427a55],0xffffff9b
  40263e:	pop    ds
  40263f:	shr    bl,cl
  402641:	aam    0x46
  402643:	scas   eax,DWORD PTR es:[edi]
  402644:	adc    DWORD PTR [ebx-0xade59f3],eax
  40264a:	push   esi
  40264b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40264d:	sub    eax,0x309bc90
  402652:	stos   BYTE PTR es:[edi],al
  402653:	ins    BYTE PTR es:[edi],dx
  402654:	mov    ebp,DWORD PTR [edx-0x5a856f7a]
  40265a:	imul   esp,DWORD PTR [edx+esi*2],0xffffffe3
  40265e:	pop    edx
  40265f:	daa    
  402660:	out    0x0,al
  402662:	lahf   
  402663:	leave  
  402664:	sbb    BYTE PTR [edx],dh
  402666:	pushf  
  402667:	leave  
  402668:	jne    0x40269f
  40266a:	sbb    ebp,DWORD PTR [edx]
  40266c:	icebp  
  40266d:	mov    eax,ds:0xa30bb70
  402672:	int3   
  402673:	jp     0x40266f
  402675:	inc    esi
  402676:	ret    0x86d1
  402679:	lock and eax,0xb68ea44b
  40267f:	pusha  
  402680:	repnz xchg ebx,eax
  402682:	loopne 0x40269d
  402684:	loopne 0x4026e6
  402686:	jo     0x4026d6
  402688:	cdq    
  402689:	ret    
  40268a:	bound  ecx,QWORD PTR [esi+0x2]
  40268d:	fcomp  DWORD PTR [ecx-0x890f7df]
  402693:	pop    esp
  402694:	fisubr WORD PTR ds:0xf8764513
  40269a:	push   edx
  40269b:	das    
  40269c:	bound  esi,QWORD PTR [ecx]
  40269e:	fld    QWORD PTR [eax]
  4026a0:	fidiv  WORD PTR [esi-0x7b809252]
  4026a6:	ins    BYTE PTR es:[edi],dx
  4026a7:	push   0x8efc6344
  4026ac:	mul    BYTE PTR [edi]
  4026ae:	mov    ecx,0xe7eff594
  4026b3:	cmp    DWORD PTR [ebp-0x37],ebx
  4026b6:	enter  0xc76c,0x5a
  4026ba:	mov    al,0xe
  4026bc:	fnstcw WORD PTR [ebx+0x19]
  4026bf:	fwait
  4026c0:	inc    edi
  4026c1:	mov    esp,0x147a18b6
  4026c6:	rcl    DWORD PTR [edx-0x9],0x74
  4026ca:	(bad)  
  4026cb:	iret   
  4026cc:	bnd jo 0x40269a
  4026cf:	jmp    0x440f7134
  4026d4:	fsubp  st(0),st
  4026d6:	call   0xcebed2f3
  4026db:	lahf   
  4026dc:	icebp  
  4026dd:	daa    
  4026de:	loopne 0x4026f0
  4026e0:	les    ecx,FWORD PTR [edx-0x25]
  4026e3:	pusha  
  4026e4:	jg     0x40275f
  4026e6:	jno    0x4026ed
  4026e8:	cwd    
  4026ea:	fistp  QWORD PTR [ecx+0x1a122cb9]
  4026f0:	and    BYTE PTR [esi],0x72
  4026f3:	mov    DWORD PTR [ebx],0xd5ca3071
  4026f9:	jno    0x4026fc
  4026fb:	mov    BYTE PTR [esi-0x1911c03a],ch
  402701:	shl    ch,0x41
  402704:	jo     0x402689
  402706:	hlt    
  402707:	sub    al,0x8f
  402709:	(bad)  
  40270a:	aad    0x3d
  40270c:	fidiv  DWORD PTR [eax+0x1b]
  40270f:	ret    
  402710:	push   edi
  402711:	and    ebx,DWORD PTR [esi+0x23]
  402714:	mov    edx,0x5d50ae2
  402719:	call   0x746d7c9a
  40271e:	push   edx
  40271f:	adc    al,0x52
  402721:	push   edi
  402722:	push   0xa8cbd8c0
  402727:	dec    ecx
  402728:	add    al,0x84
  40272a:	fwait
  40272b:	xor    al,0x5d
  40272d:	mov    esi,0x23d951
  402733:	daa    
  402734:	je     0x40272a
  402736:	cld    
  402737:	dec    ecx
  402738:	inc    eax
  402739:	fbld   TBYTE PTR [ecx+0x48]
  40273c:	xchg   ecx,eax
  40273d:	hlt    
  40273e:	pop    ecx
  40273f:	into   
  402740:	pop    ebx
  402741:	cld    
  402742:	pop    edx
  402743:	lock xor edi,edi
  402746:	mov    dh,0xd5
  402748:	cmp    DWORD PTR [ecx],esp
  40274a:	adc    DWORD PTR [edi+0x29],ebx
  40274d:	xchg   edi,eax
  40274e:	scas   al,BYTE PTR es:[edi]
  40274f:	cs adc dl,al
  402752:	data16 add BYTE PTR [ecx+0x47],bh
  402756:	jg     0x4026f7
  402758:	push   eax
  402759:	jge    0x4027b1
  40275b:	dec    eax
  40275c:	mov    DWORD PTR [ecx+0xc],edx
  40275f:	scas   al,BYTE PTR es:[edi]
  402760:	and    eax,0x58dbfcd3
  402765:	sbb    ah,dh
  402767:	cs cmp eax,0x27bbb413
  40276d:	mul    BYTE PTR ss:[eax-0x27]
  402771:	pop    ebx
  402772:	xchg   ebp,eax
  402773:	pop    eax
  402774:	lea    esi,[eax]
  402776:	and    ebx,edi
  402778:	push   0x5c96f2e9
  40277d:	fisubr DWORD PTR [edx+0x420f245e]
  402783:	jb     0x402771
  402785:	cmp    eax,0xb27511ad
  40278a:	dec    ebx
  40278b:	mov    edi,0xcb1c0b59
  402790:	push   cs
  402791:	or     ebp,DWORD PTR [esi+0x3c]
  402794:	sub    BYTE PTR [eax+0x35],0xe8
  402798:	jle    0x40274a
  40279a:	daa    
  40279b:	or     BYTE PTR [edi+eax*8-0x282c2c28],dh
  4027a2:	pop    ecx
  4027a3:	mov    esi,0xb06a3e65
  4027a8:	stos   DWORD PTR es:[edi],eax
  4027a9:	sub    edi,DWORD PTR [eax+esi*8]
  4027ac:	add    BYTE PTR [esi-0x52],al
  4027af:	and    BYTE PTR [ebx],dh
  4027b1:	dec    ecx
  4027b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b3:	(bad)  [ebx]
  4027b5:	push   0x70
  4027b7:	lock retf 0x50dd
  4027bb:	call   0x2f58:0xd00d6efe
  4027c2:	cmp    eax,0x3c3ce76d
  4027c7:	(bad)  
  4027c8:	push   ss
  4027c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ca:	aaa    
  4027cb:	fwait
  4027cc:	push   cs
  4027cd:	mov    dh,0xbd
  4027cf:	xchg   esi,eax
  4027d0:	imul   ebp,esi,0xf107cc63
  4027d6:	sahf   
  4027d7:	or     DWORD PTR ds:0x4116cf35,ebx
  4027dd:	xchg   DWORD PTR [edi+0x41a27478],ebx
  4027e3:	fmul   DWORD PTR [edi]
  4027e5:	lds    edi,FWORD PTR [ebx]
  4027e7:	inc    BYTE PTR [ebx-0x4d]
  4027ea:	fidiv  DWORD PTR [ebp+0x5177f12c]
  4027f0:	jp     0x4027c7
  4027f2:	outs   dx,BYTE PTR ds:[esi]
  4027f3:	aas    
  4027f4:	repz je 0x40279c
  4027f7:	nop
  4027f8:	jmp    0x7a7329b1
  4027fd:	js     0x40285c
  4027ff:	mov    esp,0xb5185ec8
  402804:	adc    DWORD PTR [edx-0x5ca41824],edx
  40280a:	xor    DWORD PTR [eax+0x20],esp
  40280d:	jle    0x402833
  40280f:	sub    DWORD PTR [ecx+0x9],edi
  402812:	jg     0x402892
  402814:	mov    bh,0xee
  402816:	mov    bl,0xec
  402818:	aad    0x4c
  40281a:	mov    cl,BYTE PTR [eax+edi*4-0x45]
  40281e:	sub    ebx,DWORD PTR [edx]
  402820:	xchg   ebx,ebp
  402822:	cmp    DWORD PTR [edx-0x6b02284e],edx
  402828:	sbb    dh,al
  40282a:	xchg   esp,eax
  40282b:	jae    0x4028a0
  40282d:	jne    0x4027e8
  40282f:	outs   dx,DWORD PTR ds:[esi]
  402830:	pop    esp
  402831:	call   0x559f0213
  402836:	sar    DWORD PTR [ecx-0x50],0x1f
  40283a:	push   esi
  40283b:	cmp    DWORD PTR [edx],0xd
  40283e:	loopne 0x40281e
  402840:	test   eax,0xc374f553
  402845:	cdq    
  402846:	mov    dh,0x25
  402848:	cmp    esp,0xfffffff7
  40284b:	sar    BYTE PTR [ebx-0x33793024],0xf1
  402852:	das    
  402853:	arpl   WORD PTR gs:[ebx+0x2e],bx
  402857:	mov    edi,0xed6dc362
  40285c:	mov    ah,0x74
  40285e:	cmp    BYTE PTR [esi],cl
  402860:	mov    edx,0xa22664d0
  402865:	sbb    ebx,edi
  402867:	push   0x86d1f3d
  40286c:	sbb    al,0x88
  40286e:	push   cs
  40286f:	je     0x402816
  402871:	nop
  402872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402873:	mov    WORD PTR [eax+0x44],gs
  402876:	int3   
  402877:	outs   dx,DWORD PTR ds:[esi]
  402878:	mov    dh,0x5e
  40287a:	dec    eax
  40287b:	xor    bl,dh
  40287d:	daa    
  40287e:	into   
  40287f:	and    al,BYTE PTR [edi-0x48]
  402882:	xchg   DWORD PTR [ebp-0x6e21a1c8],ebx
  402888:	inc    edi
  402889:	jle    0x4028cd
  40288b:	and    eax,0x42d6aa70
  402890:	fbstp  TBYTE PTR [edi]
  402892:	repz into 
  402894:	jbe    0x402896
  402896:	mov    dl,0x98
  402898:	fsub   st,st(0)
  40289a:	mov    ah,0xaa
  40289c:	mov    ch,0xbd
  40289e:	push   esp
  40289f:	adc    DWORD PTR [eax],0x30
  4028a2:	push   0x3eba8acc
  4028a7:	and    ebp,DWORD PTR [edx]
  4028a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028aa:	adc    ax,0x9898
  4028ae:	xchg   edx,eax
  4028af:	pop    ebp
  4028b0:	addr16 mov edi,0xaf874283
  4028b6:	sub    eax,0xe78e918c
  4028bb:	dec    ebp
  4028bc:	call   0xeac9fe1b
  4028c1:	aaa    
  4028c2:	mov    ?,eax
  4028c4:	pop    esi
  4028c5:	ficomp DWORD PTR [esi+esi*4]
  4028c8:	sbb    edi,DWORD PTR [ebp+0x5]
  4028cb:	sbb    DWORD PTR [edi+0x623bfe29],0xffffffe1
  4028d2:	out    0x23,al
  4028d4:	push   eax
  4028d5:	popf   
  4028d6:	ror    BYTE PTR [edi-0x2f],0x4e
  4028da:	mov    ch,0xb8
  4028dc:	sbb    DWORD PTR [edi+ebx*4+0x53],esi
  4028e0:	jecxz  0x402961
  4028e2:	scas   eax,DWORD PTR es:[edi]
  4028e3:	mov    ah,0x31
  4028e5:	xor    al,0x6e
  4028e7:	adc    edx,DWORD PTR [eax+0x52483ad5]
  4028ed:	push   edi
  4028ee:	fwait
  4028ef:	or     eax,0xc0909c36
  4028f4:	mov    gs,WORD PTR [esi+edx*2+0x5df05a10]
  4028fb:	ret    0xf093
  4028fe:	mov    ds:0x71a447cb,eax
  402903:	push   esp
  402904:	ins    BYTE PTR es:[edi],dx
  402905:	pop    es
  402906:	dec    esp
  402907:	cmc    
  402908:	or     al,0xc7
  40290a:	and    al,0x84
  40290c:	scas   eax,DWORD PTR es:[edi]
  40290d:	and    DWORD PTR [ecx],0xa3284ce4
  402913:	in     eax,0x43
  402915:	ret    0x3af9
  402918:	sub    ebp,esp
  40291a:	jmp    0x402968
  40291c:	xchg   esi,eax
  40291d:	in     al,dx
  40291e:	arpl   cx,bp
  402920:	jae    0x402903
  402922:	pushf  
  402923:	popf   
  402924:	mov    al,ds:0xa45feaaa
  402929:	adc    DWORD PTR [edi+0x5],0x72
  40292d:	xlat   BYTE PTR ds:[ebx]
  40292e:	int    0x9d
  402930:	or     al,0xae
  402932:	push   ecx
  402933:	fdiv   st,st(2)
  402935:	xchg   esi,eax
  402936:	adc    eax,0x90af0c3b
  40293b:	jecxz  0x4028c1
  40293d:	outs   dx,DWORD PTR ds:[esi]
  40293e:	aaa    
  40293f:	adc    edi,esp
  402941:	out    0xa6,eax
  402943:	mov    ds:0x59ed6e0e,al
  402948:	push   esi
  402949:	cmp    DWORD PTR [eax],0xffffffbc
  40294c:	(bad)  
  40294d:	out    dx,eax
  40294e:	inc    edx
  40294f:	js     0x4028de
  402951:	push   ds
  402952:	int    0x92
  402954:	xchg   ecx,eax
  402955:	sahf   
  402956:	(bad)  
  402959:	lahf   
  40295a:	cmc    
  40295b:	aam    0x1c
  40295d:	jnp    0x402925
  40295f:	loop   0x40297d
  402961:	adc    eax,0x23155b1e
  402966:	jmp    0x852f13c1
  40296b:	ret    0x6c76
  40296e:	cmp    al,0xbd
  402970:	test   BYTE PTR [ebp+0x16],dl
  402973:	adc    DWORD PTR [ebx+0xe21bc00],ebx
  402979:	xor    eax,0xe1e759a0
  40297e:	(bad)  
  40297f:	jge    0x402975
  402981:	ins    DWORD PTR es:[edi],dx
  402982:	cwde   
  402983:	test   ebx,0x56c9700d
  402989:	repz and esp,DWORD PTR [eax-0x74]
  40298d:	pop    ebx
  40298e:	push   0xcbc679f6
  402993:	dec    esi
  402994:	ins    DWORD PTR es:[edi],dx
  402995:	(bad)  
  402996:	cmp    BYTE PTR [edx-0x55],dh
  402999:	je     0x4029bb
  40299b:	adc    DWORD PTR [ebp-0x34],eax
  40299e:	fcomip st,st(3)
  4029a0:	or     eax,0x48ae0c21
  4029a5:	int    0x7c
  4029a7:	mov    edx,0x6739e396
  4029ac:	adc    BYTE PTR [edi+0x46f6cba1],bh
  4029b2:	lock fbld TBYTE PTR [edi+ebx*1+0x45]
  4029b7:	jl     0x402a09
  4029b9:	or     edi,DWORD PTR [edi+eax*1+0x62]
  4029bd:	jmp    0x402a03
  4029bf:	mov    ds:0x764bbc0a,eax
  4029c4:	aad    0xe4
  4029c6:	jecxz  0x402a1f
  4029c8:	ds ret 0x64bd
  4029cc:	mov    ch,0x9
  4029ce:	xchg   edx,eax
  4029cf:	test   eax,0xe204205
  4029d5:	nop
  4029d6:	mov    ?,WORD PTR ds:0xfac8902e
  4029dc:	add    bh,BYTE PTR [eax]
  4029de:	lea    edx,[edx+ecx*4-0x7580fbf9]
  4029e5:	jmp    0xfb74:0x979809c5
  4029ec:	add    eax,0x1d81d682
  4029f1:	and    BYTE PTR [eax+0x14f77502],0xca
  4029f8:	mov    ch,0x81
  4029fa:	pop    edi
  4029fb:	inc    DWORD PTR [edi+0x5b9f8395]
  402a01:	dec    ebx
  402a02:	and    ebp,edx
  402a04:	nop
  402a05:	call   0x4e26f3d7
  402a0a:	jbe    0x4029ec
  402a0c:	cs out 0xc0,eax
  402a0f:	bound  esi,QWORD PTR [esi]
  402a11:	dec    ecx
  402a12:	jle    0x402a40
  402a14:	sub    eax,0xf0a023bb
  402a19:	call   0x85f4:0x65d4e09b
  402a20:	aad    0x7f
  402a22:	jecxz  0x402a94
  402a24:	mov    al,0x6f
  402a26:	dec    ebx
  402a27:	mov    al,BYTE PTR [edx+0x13]
  402a2a:	mov    cl,0x31
  402a2c:	fst    QWORD PTR ds:0x23798a9
  402a32:	data16 cs jle 0x402a85
  402a36:	xchg   edx,eax
  402a37:	mov    bh,0xca
  402a39:	dec    ebp
  402a3a:	stc    
  402a3b:	mov    ds:0xb4855433,al
  402a40:	xchg   esp,eax
  402a41:	push   ss
  402a42:	into   
  402a43:	outs   dx,DWORD PTR ds:[esi]
  402a44:	aaa    
  402a45:	pextrw esp,(bad),0xc5
  402a47:	and    al,0x9c
  402a49:	and    eax,0x196442b
  402a4e:	add    al,BYTE PTR [ebx]
  402a50:	loop   0x4029e9
  402a52:	sub    ebp,0x53
  402a55:	sub    DWORD PTR [ebp-0x724c468],0x5b
  402a5c:	and    esi,DWORD PTR ds:0x6bf2466f
  402a62:	xlat   BYTE PTR ds:[ebx]
  402a63:	lods   eax,DWORD PTR ds:[esi]
  402a64:	cld    
  402a65:	out    0xbb,al
  402a67:	push   ebx
  402a68:	and    eax,0xdbc79431
  402a6d:	pop    esp
  402a6e:	pop    ebx
  402a6f:	mov    bl,0x1b
  402a71:	test   DWORD PTR [eax+ecx*2+0x6fe56879],esp
  402a78:	loop   0x402a5b
  402a7a:	and    al,0xaf
  402a7c:	loope  0x402aab
  402a7e:	cmp    cl,BYTE PTR [eax]
  402a80:	and    dl,BYTE PTR [esi+esi*2+0x6c]
  402a84:	fimul  DWORD PTR [esi+0x63]
  402a87:	mov    ecx,0xd6d8e88b
  402a8c:	or     esp,esp
  402a8e:	(bad)  
  402a8f:	les    esp,FWORD PTR [edx]
  402a91:	call   0x6524:0xdd260225
  402a98:	push   eax
  402a99:	rcr    ebx,1
  402a9b:	leave  
  402a9c:	daa    
  402a9d:	mov    al,0xcc
  402a9f:	dec    eax
  402aa0:	stos   DWORD PTR es:[edi],eax
  402aa1:	pusha  
  402aa2:	and    DWORD PTR [eax-0x1e],eax
  402aa5:	sti    
  402aa6:	push   0xffffffda
  402aa8:	xchg   esi,eax
  402aa9:	or     ebx,DWORD PTR [ebp-0x62b98f36]
  402aaf:	fcom   DWORD PTR [edi]
  402ab1:	jo     0x402ac7
  402ab3:	ret    0x163
  402ab6:	fimul  WORD PTR [eax]
  402ab8:	adc    al,0xa
  402aba:	cld    
  402abb:	loop   0x402b39
  402abd:	out    0x40,al
  402abf:	push   ebp
  402ac0:	fld    DWORD PTR ds:0xb7cc7c1f
  402ac6:	push   edi
  402ac7:	sub    al,0x2c
  402ac9:	std    
  402aca:	mov    WORD PTR [ebx],es
  402acc:	xabort 0x6a
  402acf:	leave  
  402ad0:	pop    edx
  402ad1:	in     eax,dx
  402ad2:	out    0x50,eax
  402ad4:	(bad)  [ecx]
  402ad6:	(bad)  
  402ad7:	int3   
  402ad8:	add    BYTE PTR [ebx+eiz*4+0x3add7ab4],dh
  402adf:	push   cs
  402ae0:	cmp    eax,0x2aba6a1
  402ae5:	add    esi,ebx
  402ae7:	neg    DWORD PTR [edx]
  402ae9:	xor    eax,0x8b6e2cb8
  402aee:	jle    0x402b4c
  402af0:	enter  0x1e23,0x6f
  402af4:	daa    
  402af5:	push   ds
  402af6:	mov    eax,ds:0x1131b56f
  402afb:	push   ecx
  402afc:	or     esi,eax
  402afe:	lods   al,BYTE PTR ds:[esi]
  402aff:	sub    al,0x7b
  402b01:	pop    ebp
  402b02:	jo     0x402b3c
  402b04:	jl     0x402aec
  402b06:	out    0xce,eax
  402b08:	dec    edx
  402b09:	arpl   sp,bx
  402b0b:	pfmin  mm0,QWORD PTR [ebx-0x7f]
  402b10:	lock or al,0x4
  402b13:	rol    DWORD PTR ds:0x68ed3718,cl
  402b19:	mov    esi,edx
  402b1b:	jmp    0x402b4f
  402b1d:	cmp    DWORD PTR [eax-0x1acb2e27],0xefc19ca9
  402b27:	add    eax,DWORD PTR [esi+0x4bbb12e8]
  402b2d:	adc    BYTE PTR [ecx-0x22],dh
  402b30:	fnsave [ebp+ebx*8+0x1e]
  402b34:	push   0x2
  402b36:	(bad)  [edi+0x4822d81c]
  402b3c:	retf   0x37a5
  402b3f:	jl     0x402b77
  402b41:	in     eax,dx
  402b42:	jp     0x402afb
  402b44:	adc    ebx,DWORD PTR [eax-0x4b0cd9d2]
  402b4a:	cli    
  402b4b:	lods   al,BYTE PTR ds:[esi]
  402b4c:	and    edi,DWORD PTR ss:[edx]
  402b4f:	xor    BYTE PTR [edi],dh
  402b51:	fstp   QWORD PTR [edi-0x52915581]
  402b57:	mov    WORD PTR [ebp+0x693e03a7],ss
  402b5d:	cli    
  402b5e:	int    0xb
  402b60:	jmp    0x402baa
  402b62:	mov    esi,edx
  402b64:	xor    BYTE PTR [eax*8-0x6d25d235],ah
  402b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6c:	pop    edi
  402b6d:	xor    BYTE PTR [esi+eiz*4-0x19],al
  402b71:	lds    ebp,FWORD PTR [edi-0x74338605]
  402b77:	sti    
  402b78:	and    edx,eax
  402b7a:	push   esi
  402b7b:	xchg   edi,eax
  402b7c:	stc    
  402b7d:	pushf  
  402b7e:	std    
  402b7f:	pop    esp
  402b80:	jge    0x402b19
  402b82:	add    ecx,DWORD PTR ss:[edx-0x21]
  402b86:	xor    BYTE PTR [ecx+0x25],dh
  402b89:	mov    ds:0x6c9b16,al
  402b8e:	idiv   DWORD PTR [edx+0x54]
  402b91:	mov    dl,0xb8
  402b93:	sub    eax,0x7e81619b
  402b98:	mov    ebp,0x90e10218
  402b9d:	out    0xb5,al
  402b9f:	push   0xffffffcc
  402ba1:	sbb    bh,BYTE PTR [ebp+0x4d382e44]
  402ba7:	icebp  
  402ba8:	popf   
  402ba9:	das    
  402baa:	loopne 0x402c28
  402bac:	jecxz  0x402bdf
  402bae:	fidivr WORD PTR [eax]
  402bb0:	arpl   dx,si
  402bb2:	inc    ebx
  402bb3:	xor    BYTE PTR [eax+0x8],cl
  402bb6:	and    BYTE PTR [edx-0x6bce0eb4],al
  402bbc:	jo     0x402bf6
  402bbe:	pushf  
  402bbf:	adc    eax,0xa3e54ad9
  402bc4:	test   BYTE PTR [ecx],ah
  402bc6:	fisttp DWORD PTR [esi-0x34]
  402bc9:	loop   0x402b6f
  402bcb:	mov    WORD PTR [eax],gs
  402bcd:	mov    esp,0x11b9d3fa
  402bd2:	xor    ch,BYTE PTR [ecx-0x3c]
  402bd5:	stos   DWORD PTR es:[edi],eax
  402bd6:	mov    ah,0x82
  402bd8:	inc    esp
  402bd9:	or     eax,0x81e6c759
  402bde:	xchg   BYTE PTR [edi],al
  402be0:	in     al,0x1f
  402be2:	loope  0x402bae
  402be4:	xchg   DWORD PTR [ebx+0x0],edx
  402be7:	mov    BYTE PTR [edi+edi*4-0x287b1272],bl
  402bee:	push   ebp
  402bef:	(bad)  
  402bf0:	lea    eax,[ebp+0x73d3ab07]
  402bf6:	scas   al,BYTE PTR es:[edi]
  402bf7:	inc    esi
  402bf8:	retf   
  402bf9:	push   edx
  402bfa:	pop    esp
  402bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bfc:	fild   QWORD PTR [edi-0xe]
  402bff:	mov    ds:0x8a07111c,eax
  402c04:	mov    cl,0x20
  402c06:	mov    ds:0xf213ee39,al
  402c0b:	ret    
  402c0c:	sbb    eax,0x78f76eb9
  402c11:	xchg   ebp,eax
  402c12:	cmp    esi,edx
  402c14:	or     DWORD PTR [esi-0x37],0x0
  402c18:	js     0x402c79
  402c1a:	sbb    dh,al
  402c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1d:	xchg   edx,eax
  402c1e:	pop    edi
  402c1f:	pop    eax
  402c20:	retf   
  402c21:	xlat   BYTE PTR ds:[ebx]
  402c22:	aaa    
  402c23:	sbb    ch,dh
  402c25:	jmp    0x402bcb
  402c27:	sbb    dl,0x11
  402c2a:	stos   BYTE PTR es:[edi],al
  402c2b:	fs push ss
  402c2d:	fwait
  402c2e:	jg     0x402c6a
  402c30:	xchg   ebp,eax
  402c31:	jmp    0x4724:0x5f922ab0
  402c38:	ds jb  0x402bfe
  402c3b:	push   ebx
  402c3c:	or     DWORD PTR [ebx-0x38],ecx
  402c3f:	or     DWORD PTR [eax-0x12441a19],edx
  402c45:	cld    
  402c46:	enter  0xd4a4,0xbb
  402c4a:	std    
  402c4b:	push   ss
  402c4c:	adc    al,0x9c
  402c4e:	or     eax,DWORD PTR [ebx+0x22]
  402c51:	pop    edx
  402c52:	jmp    DWORD PTR [ebp+0xe7df522]
  402c58:	sbb    BYTE PTR [ebx],cl
  402c5a:	mov    esi,0x5384d668
  402c5f:	add    ebx,ebx
  402c61:	shl    DWORD PTR [ebx+0x3109b7db],1
  402c67:	sbb    ebp,ebp
  402c69:	fidivr DWORD PTR [ebp+0x6acdde6]
  402c6f:	jno    0x402c3d
  402c71:	fistp  DWORD PTR [esi+0x35ba93e8]
  402c77:	mov    ax,0xa95e
  402c7b:	pop    ebp
  402c7c:	pop    ebx
  402c7d:	jp     0x402cd9
  402c7f:	xlat   BYTE PTR ds:[ebx]
  402c80:	inc    edi
  402c81:	or     esi,eax
  402c83:	push   ecx
  402c84:	sbb    ch,BYTE PTR [ebx]
  402c86:	xor    dh,BYTE PTR [eax-0x73]
  402c89:	add    al,0x63
  402c8b:	pop    ebp
  402c8c:	push   edx
  402c8d:	lea    edx,[ebx]
  402c8f:	mov    DWORD PTR [ebx+0x7b],edi
  402c92:	xchg   ecx,eax
  402c93:	mov    esi,DWORD PTR [ecx-0x7e]
  402c96:	stos   DWORD PTR es:[edi],eax
  402c97:	mov    WORD PTR [esi+0x3d],ss
  402c9a:	xor    eax,0x61a1b6f
  402c9f:	and    BYTE PTR [ecx+0x3eab1e9a],bl
  402ca5:	jl     0x402d11
  402ca7:	ins    DWORD PTR es:[edi],dx
  402ca8:	fimul  WORD PTR [edx+0x1d9ea90c]
  402cae:	mov    al,0x37
  402cb0:	fistp  QWORD PTR [edx]
  402cb2:	cmp    ah,al
  402cb4:	retf   
  402cb5:	jge    0x402d33
  402cb7:	jecxz  0x402d26
  402cb9:	sbb    al,BYTE PTR [ecx+edx*1]
  402cbc:	aam    0x62
  402cbe:	(bad)  [ebx-0x290ddc1a]
  402cc4:	dec    eax
  402cc5:	enter  0x4a71,0x8e
  402cc9:	dec    ebx
  402cca:	in     al,0xad
  402ccc:	mov    cs,WORD PTR [eax]
  402cce:	call   0x8b7674fd
  402cd3:	repnz adc al,BYTE PTR [ebp+0x2e6d12bc]
  402cda:	jp     0x402d0e
  402cdc:	fdiv   DWORD PTR [edi-0xcbebf0e]
  402ce2:	and    eax,DWORD PTR [ebx+0x22]
  402ce5:	cmp    ebp,DWORD PTR [esi]
  402ce7:	mov    esp,0x25020cdb
  402cec:	imul   esp,DWORD PTR [ecx-0x34dbd4f0],0x6f
  402cf3:	(bad)  
  402cf4:	(bad)  
  402cf5:	mov    ?,WORD PTR ds:0xfba69301
  402cfb:	sbb    DWORD PTR [eax+0x7ec8203c],ecx
  402d01:	call   0xb2fe9df9
  402d06:	(bad)  
  402d07:	lea    ebp,[edx-0x62]
  402d0a:	xchg   BYTE PTR [edi],dl
  402d0c:	sahf   
  402d0d:	test   BYTE PTR [ebp-0x61],0xca
  402d11:	xor    BYTE PTR [esi+0xb],cl
  402d14:	inc    esi
  402d15:	retf   
  402d16:	popa   
  402d17:	imul   esi,ecx,0x13109afc
  402d1d:	(bad)  
  402d1e:	loopne 0x402d6e
  402d20:	jmp    0x4056:0x650f3863
  402d27:	mov    ch,0x67
  402d29:	(bad)  
  402d2a:	add    eax,0xa01a2978
  402d2f:	scas   eax,DWORD PTR es:[edi]
  402d30:	jnp    0x402d9f
  402d32:	push   es
  402d33:	or     esp,esi
  402d35:	mov    cl,0x6a
  402d37:	add    eax,0xf2c6cbb8
  402d3c:	add    DWORD PTR [ecx+0x45],0x14
  402d40:	in     eax,0x29
  402d42:	mov    edx,0x11bf8c4a
  402d47:	pusha  
  402d48:	jne    0x402dac
  402d4a:	fisubr DWORD PTR [eax]
  402d4c:	push   ds
  402d4d:	pusha  
  402d4e:	push   ebx
  402d4f:	(bad)  [edi-0x19]
  402d52:	fild   WORD PTR [eax]
  402d54:	(bad)  
  402d55:	cmp    DWORD PTR [edx+0x71543a00],esp
  402d5b:	sub    edx,ebx
  402d5d:	push   es
  402d5e:	(bad)  
  402d5f:	pop    edi
  402d60:	test   BYTE PTR [edx+0x1257e021],cl
  402d66:	ins    BYTE PTR es:[edi],dx
  402d67:	mov    ch,0xd4
  402d69:	jp     0x402d20
  402d6b:	or     eax,0xe86ba22f
  402d70:	pop    esp
  402d71:	stc    
  402d72:	mov    edx,ebp
  402d74:	lahf   
  402d75:	mov    esi,0x1fc8d238
  402d7a:	dec    ecx
  402d7b:	add    BYTE PTR [esi+0x36c6ca06],ch
  402d81:	jle    0x402d4b
  402d83:	and    esp,DWORD PTR [esi-0x798f5801]
  402d89:	sub    BYTE PTR [edi+0x5a],bh
  402d8c:	sub    ecx,DWORD PTR [eax-0x5a]
  402d8f:	(bad)  
  402d90:	mov    ebx,0x68bee00b
  402d95:	pop    eax
  402d96:	or     al,0x6e
  402d98:	xor    BYTE PTR [ebp-0x60e9fb7a],ah
  402d9e:	mov    al,0x9e
  402da0:	ins    DWORD PTR es:[edi],dx
  402da1:	add    al,0xa3
  402da3:	das    
  402da4:	pop    eax
  402da5:	cld    
  402da6:	sub    eax,0x3ff793df
  402dab:	daa    
  402dac:	or     DWORD PTR [eax-0x72334b79],esp
  402db2:	les    ebp,FWORD PTR [edx-0x5a]
  402db5:	jg     0x402d6a
  402db7:	push   es
  402db8:	pop    eax
  402db9:	mov    ?,ebp
  402dbb:	jl     0x402e26
  402dbd:	ror    DWORD PTR [edi+0x8],0x64
  402dc1:	dec    edi
  402dc2:	in     eax,dx
  402dc3:	xor    DWORD PTR [eax+0xd],0x10
  402dc7:	loop   0x402d7f
  402dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dca:	pop    edx
  402dcb:	fxch   st(4)
  402dcd:	sbb    DWORD PTR [ebp+0x39c849bf],edi
  402dd3:	out    dx,eax
  402dd4:	sub    eax,0xf24656ae
  402dd9:	cwde   
  402dda:	sub    eax,0x67ed9f40
  402ddf:	inc    esi
  402de0:	js     0x402d67
  402de2:	inc    ebp
  402de3:	xor    bh,BYTE PTR [ebp-0x2cfe47e8]
  402de9:	mov    cl,0x97
  402deb:	sub    ecx,DWORD PTR [ecx+0x2218f554]
  402df1:	sti    
  402df2:	int    0x8c
  402df4:	mov    WORD PTR [ebp-0x2c4c203b],es
  402dfa:	xchg   esi,eax
  402dfb:	xchg   esp,eax
  402dfc:	jmp    0x159693f8
  402e01:	jno    0x402e48
  402e03:	pop    ebx
  402e04:	xor    esi,DWORD PTR [esi-0x76]
  402e07:	mov    dh,0xb6
  402e09:	jecxz  0x402e3a
  402e0b:	or     DWORD PTR [ebx-0x2],0x3386bb2b
  402e12:	mov    cl,0x58
  402e14:	dec    ebx
  402e15:	cmp    DWORD PTR [edi],0xbe6fedee
  402e1b:	lds    eax,FWORD PTR ss:[edx]
  402e1e:	add    edx,DWORD PTR [esi+0x2]
  402e21:	cs pop edi
  402e23:	inc    ebp
  402e24:	cmp    al,0x41
  402e26:	mov    cl,0x12
  402e28:	nop
  402e29:	popa   
  402e2a:	int3   
  402e2b:	xchg   DWORD PTR [esi-0x7a6e34b4],edx
  402e31:	inc    edx
  402e32:	adc    esi,DWORD PTR [esi+0x4e5fe863]
  402e38:	jbe    0x402e07
  402e3a:	dec    edx
  402e3b:	jne    0x402eb0
  402e3d:	pop    ebx
  402e3e:	xchg   BYTE PTR [ecx-0x3c787f8c],ch
  402e44:	scas   eax,DWORD PTR es:[edi]
  402e45:	mul    DWORD PTR [esi-0x27]
  402e48:	adc    DWORD PTR [edx],edx
  402e4a:	inc    esp
  402e4b:	and    eax,0x184be357
  402e50:	sub    al,bh
  402e52:	and    dl,BYTE PTR [ebp-0x68]
  402e55:	or     eax,0xb0f122b4
  402e5a:	mov    eax,ds:0x24164809
  402e5f:	and    al,0x4d
  402e61:	mov    ds:0x9369ff24,al
  402e66:	push   0xffffff88
  402e68:	push   ecx
  402e69:	dec    ebx
  402e6a:	out    dx,al
  402e6b:	ret    0x4a98
  402e6e:	push   edx
  402e6f:	(bad)  
  402e70:	aam    0xd5
  402e72:	pop    edi
  402e73:	call   0xd1125673
  402e78:	cdq    
  402e79:	out    dx,eax
  402e7a:	pushf  
  402e7b:	dec    edi
  402e7c:	lahf   
  402e7d:	dec    edx
  402e7e:	mov    es:0x518acb1a,eax
  402e84:	leave  
  402e85:	clc    
  402e86:	ins    DWORD PTR es:[edi],dx
  402e87:	mov    dh,0x5
  402e89:	jnp    0x402ee5
  402e8b:	popf   
  402e8c:	jno    0x402e97
  402e8e:	xlat   BYTE PTR ds:[ebx]
  402e8f:	loope  0x402ed5
  402e91:	xor    ebp,DWORD PTR [esi+0x5df416ed]
  402e97:	add    esi,ecx
  402e99:	pop    es
  402e9a:	in     al,dx
  402e9b:	jmp    0xeaa5c824
  402ea0:	adc    eax,0xc116feca
  402ea5:	jnp    0x402e5a
  402ea7:	xor    al,0xb8
  402ea9:	add    bl,bh
  402eab:	xor    cl,0x97
  402eae:	in     al,dx
  402eaf:	sub    al,BYTE PTR [ebx]
  402eb1:	aaa    
  402eb2:	out    0x81,al
  402eb4:	popa   
  402eb5:	inc    ebx
  402eb6:	mov    DWORD PTR [edx-0x7b73b4d8],edx
  402ebc:	push   cs
  402ebd:	dec    ebp
  402ebe:	mov    ds:0xb4092f42,eax
  402ec3:	fmul   QWORD PTR [ecx-0x77716341]
  402ec9:	xchg   ebx,eax
  402eca:	and    BYTE PTR [ebx+0x7c],dh
  402ecd:	sub    BYTE PTR [edi],bl
  402ecf:	lock and DWORD PTR [ebx-0x6887e5aa],eax
  402ed6:	fs (bad) 
  402ed8:	cmp    DWORD PTR [eax-0x5e51d195],edx
  402ede:	dec    esp
  402edf:	sub    ah,BYTE PTR [edx+0x5e]
  402ee2:	into   
  402ee3:	mov    WORD PTR [esi-0x637d73c7],cs
  402ee9:	pop    edi
  402eea:	inc    ebp
  402eeb:	jmp    0x7578ccce
  402ef0:	sub    DWORD PTR ds:[eax-0x42a51af0],ecx
  402ef7:	icebp  
  402ef8:	pop    edx
  402ef9:	icebp  
  402efa:	loop   0x402eed
  402efc:	ret    
  402efd:	mov    ebx,ebp
  402eff:	add    DWORD PTR [esi+0x4c],esp
  402f02:	loope  0x402ede
  402f04:	stos   DWORD PTR es:[edi],eax
  402f05:	(bad)  
  402f06:	jns    0x402ef7
  402f08:	xor    edx,eax
  402f0a:	fs mov edx,0x3a3098ee
  402f10:	mov    esp,0xabd16157
  402f15:	iret   
  402f16:	call   0x9579:0x8abb180
  402f1d:	or     BYTE PTR [edi+ebx*1],cl
  402f20:	ins    BYTE PTR es:[edi],dx
  402f21:	xor    BYTE PTR [ecx-0x18dcc7f7],bl
  402f27:	push   ebp
  402f28:	mov    esi,0xba579c3
  402f2d:	loopne 0x402f89
  402f2f:	jnp    0x402f50
  402f31:	or     DWORD PTR [esi+0x48b6798b],edx
  402f37:	pusha  
  402f38:	test   BYTE PTR [eax],bl
  402f3a:	aad    0x5c
  402f3c:	sbb    eax,DWORD PTR [ebp+0x698fb9be]
  402f42:	dec    edi
  402f43:	ds pusha 
  402f45:	cmp    dl,ah
  402f47:	sub    al,bl
  402f49:	nop
  402f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f4b:	stos   BYTE PTR es:[edi],al
  402f4c:	adc    eax,0x31c319d8
  402f51:	mov    BYTE PTR [ebp-0x31],ch
  402f54:	fwait
  402f55:	retf   
  402f56:	cdq    
  402f57:	and    DWORD PTR [ebx-0x80ec3cf],eax
  402f5d:	jp     0x402fb3
  402f5f:	iret   
  402f60:	jno    0x402f56
  402f62:	lea    eax,[edx]
  402f64:	mov    ah,BYTE PTR [edi]
  402f66:	sub    al,0x46
  402f68:	cmp    esp,DWORD PTR [edx-0xa7dea1e]
  402f6e:	into   
  402f6f:	add    DWORD PTR es:[esi],ebx
  402f72:	xor    DWORD PTR [eax+0x6ae97165],ebp
  402f78:	jnp    0x402f51
  402f7a:	sahf   
  402f7b:	cmp    eax,0xc804e19c
  402f80:	xchg   DWORD PTR [ebp+0x3d12b3b],eax
  402f86:	test   BYTE PTR [eax],ch
  402f88:	cs cdq 
  402f8a:	(bad)  
  402f8b:	adc    eax,0x91f35f37
  402f90:	mov    WORD PTR [edi],gs
  402f92:	(bad)  
  402f93:	loopne 0x402f8e
  402f95:	mov    WORD PTR [edx+0x2657f7e2],es
  402f9b:	jo     0x40300d
  402f9d:	scas   al,BYTE PTR es:[edi]
  402f9e:	daa    
  402f9f:	and    dl,BYTE PTR [ecx-0x3d2d31dd]
  402fa5:	add    edx,edx
  402fa7:	mov    DWORD PTR [ecx],ebp
  402fa9:	dec    ebp
  402faa:	nop
  402fab:	ss mov ah,0xf1
  402fae:	shl    BYTE PTR [ecx],0xfa
  402fb1:	push   0xffffffa4
  402fb3:	pop    ss
  402fb4:	or     cl,BYTE PTR [ebp-0x7e151aa2]
  402fba:	shl    DWORD PTR [edx+0x53b43054],0x91
  402fc1:	cmp    al,0xa6
  402fc3:	retf   
  402fc4:	fs push ds
  402fc6:	mov    bh,0x36
  402fc8:	sbb    dh,ch
  402fca:	mov    ds:0x87ecfbde,eax
  402fcf:	cmp    al,0x8
  402fd1:	mov    dl,0x49
  402fd3:	out    dx,al
  402fd4:	xor    esp,esp
  402fd6:	and    DWORD PTR [ebx+0x12],ebx
  402fd9:	and    BYTE PTR [ebp+edi*4+0x17984bad],0x9a
  402fe1:	ja     0x402fab
  402fe3:	fidivr WORD PTR [ecx]
  402fe5:	xor    BYTE PTR [eax+0xef1218d],dh
  402feb:	mov    edx,0x37a0d8dd
  402ff0:	cmp    DWORD PTR ds:0x10542099,edi
  402ff6:	sbb    ecx,DWORD PTR [edx]
  402ff8:	fimul  WORD PTR [ebp+0x9]
  402ffb:	mov    ecx,0x627a33ef
  403000:	hlt    
  403001:	pop    eax
  403002:	retf   
  403003:	sbb    BYTE PTR [eax+0x3d],bh
  403006:	dec    ecx
  403007:	dec    edx
  403008:	mov    esp,0xf78d9923
  40300d:	or     edi,ecx
  40300f:	call   0xea75:0xb1a9d123
  403016:	push   es
  403017:	fcomp  QWORD PTR ds:0x8693da4f
  40301d:	ror    DWORD PTR [edi+0x76419c98],1
  403023:	or     ecx,0xffffffde
  403026:	mov    bl,0x44
  403028:	push   es
  403029:	jmp    0x403041
  40302b:	pop    ss
  40302c:	fwait
  40302d:	push   gs
  40302f:	dec    esi
  403030:	enter  0x57d,0x70
  403034:	mov    cl,0x22
  403036:	xchg   esp,eax
  403037:	jmp    0x29c:0x4ed2e63
  40303e:	loope  0x40304e
  403040:	and    edx,esi
  403042:	lahf   
  403043:	dec    edi
  403044:	in     al,dx
  403045:	test   al,0xbf
  403047:	xchg   ebp,eax
  403048:	push   0x9d2046d9
  40304d:	add    ecx,DWORD PTR [eax-0x31]
  403050:	xchg   esi,eax
  403051:	sbb    DWORD PTR [edi],ecx
  403053:	sbb    DWORD PTR [esi-0x9],ebx
  403056:	push   cs
  403057:	rcr    BYTE PTR [ebx+0x49c1b0ac],1
  40305d:	(bad)  
  40305f:	mov    ds:0x2f40df6e,al
  403064:	xchg   esi,eax
  403065:	dec    edi
  403066:	xchg   BYTE PTR [edi],bl
  403068:	std    
  403069:	dec    BYTE PTR [eax]
  40306b:	fist   WORD PTR [ecx-0x59]
  40306e:	retf   
  40306f:	je     0x40306d
  403071:	data16 rcr BYTE PTR [ecx+0x71e4fdbf],1
  403078:	push   edi
  403079:	mov    edx,0xe6543537
  40307e:	(bad)  
  40307f:	jmp    FWORD PTR [ebx]
  403081:	mov    bl,0x17
  403083:	std    
  403084:	push   0x4500108e
  403089:	pop    ebx
  40308a:	outs   dx,BYTE PTR ds:[esi]
  40308b:	inc    ebp
  40308c:	idiv   DWORD PTR [edi]
  40308e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40308f:	ins    BYTE PTR es:[edi],dx
  403090:	xor    eax,0x78d6f7
  403095:	ficom  DWORD PTR [ebp-0x6f]
  403098:	dec    eax
  403099:	mov    ebx,0x292cb5a1
  40309e:	retf   
  40309f:	pop    ecx
  4030a0:	mov    ecx,0x2bde7746
  4030a5:	mov    bh,0x8
  4030a7:	jbe    0x40305e
  4030a9:	imul   esi,edi,0xef452351
  4030af:	xor    bh,BYTE PTR [esp+ebx*8]
  4030b2:	enter  0x595a,0x81
  4030b6:	stc    
  4030b7:	and    al,0xe3
  4030b9:	(bad)  
  4030ba:	(bad)  
  4030bb:	and    eax,ebp
  4030bd:	imul   edi,DWORD PTR [edx+ebx*1+0x3c24da6f],0x4e
  4030c5:	adc    eax,0x9fd4c9b8
  4030ca:	ror    edi,cl
  4030cc:	or     DWORD PTR [ebp-0x25],0x8db2b4dd
  4030d3:	xor    DWORD PTR [ebx+0x500c77f9],edi
  4030d9:	jo     0x4030d3
  4030db:	jmp    0x97155038
  4030e0:	data16 int 0x60
  4030e3:	sub    ch,bh
  4030e5:	mov    edi,0x73105c32
  4030ea:	shl    DWORD PTR fs:[eax+0x73b4e9a8],cl
  4030f1:	dec    esi
  4030f2:	test   al,0x93
  4030f4:	popa   
  4030f5:	mov    WORD PTR [edx+0x6c3ef27b],fs
  4030fb:	fst    DWORD PTR [eax]
  4030fd:	popa   
  4030fe:	fisttp WORD PTR es:[eax-0x8]
  403102:	sbb    al,0xd1
  403104:	sbb    cl,BYTE PTR ds:0xe9f582e4
  40310a:	cmp    eax,0x60a77895
  40310f:	add    eax,0x7daab6ea
  403114:	stc    
  403115:	ret    
  403116:	leave  
  403117:	fadd   QWORD PTR [ebx+edi*4+0x69]
  40311b:	cld    
  40311c:	js     0x403166
  40311e:	mov    al,0x3a
  403121:	mov    ebp,0xa8ed9879
  403126:	sub    eax,0x94799a78
  40312b:	cwde   
  40312c:	jge    0x40315f
  40312e:	imul   ebp,DWORD PTR [ebp-0x4160aa72],0xffffff8a
  403135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403136:	ficomp DWORD PTR [ecx+0x57ad9494]
  40313c:	xchg   BYTE PTR [edi],ah
  40313e:	ins    BYTE PTR es:[edi],dx
  40313f:	mov    ebx,0x84041855
  403144:	test   al,0x99
  403146:	sub    DWORD PTR [edx+esi*2+0xa],0xffffffa7
  40314b:	aas    
  40314c:	fadd   DWORD PTR ds:0x8cbb89d8
  403152:	test   BYTE PTR [ebp-0x51f99b6c],0x97
  403159:	dec    edx
  40315a:	xchg   DWORD PTR [esi+0x727f676d],eax
  403160:	ret    
  403161:	nop
  403162:	test   BYTE PTR [edi],ch
  403164:	dec    esi
  403165:	in     eax,dx
  403166:	jecxz  0x403114
  403168:	mov    cl,0xca
  40316a:	mov    esi,esp
  40316c:	xchg   DWORD PTR [edi-0x3ef47c98],eax
  403172:	pop    esi
  403173:	pop    ds
  403174:	rcpps  xmm3,xmm0
  403177:	outs   dx,DWORD PTR ds:[esi]
  403178:	and    al,0xda
  40317a:	dec    ebp
  40317b:	in     eax,dx
  40317c:	addr16 mov cl,0x57
  40317f:	jne    0x4031dc
  403181:	jno    0x40313d
  403183:	mov    WORD PTR [eax+0x1],ss
  403186:	pop    esi
  403187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403188:	cmp    al,0xa0
  40318a:	in     al,dx
  40318b:	or     al,0x15
  40318d:	and    DWORD PTR [edx+edi*8-0x4d],edi
  403191:	adc    eax,0xd8654396
  403196:	push   ecx
  403197:	push   ds
  403198:	mov    eax,ds:0x5510f7f5
  40319d:	ret    
  40319e:	sub    eax,0x2a8e7cfc
  4031a3:	pusha  
  4031a4:	ja     0x403189
  4031a6:	int3   
  4031a7:	dec    ecx
  4031a8:	jno    0x403168
  4031aa:	aaa    
  4031ab:	mov    ch,0xd1
  4031ad:	sub    esp,DWORD PTR [edx+0x5e8aba02]
  4031b3:	lock jns 0x4031a4
  4031b6:	xchg   edx,eax
  4031b7:	pusha  
  4031b8:	mov    BYTE PTR [edi-0x3c7c8f5],cl
  4031be:	pop    edx
  4031bf:	cdq    
  4031c0:	loop   0x403170
  4031c2:	aas    
  4031c3:	push   ecx
  4031c4:	dec    edx
  4031c5:	adc    DWORD PTR [ecx+esi*8-0x66],eax
  4031c9:	push   edx
  4031ca:	gs cmp eax,0x989633e1
  4031d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031d1:	and    eax,0x97d0f573
  4031d6:	ret    
  4031d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d8:	cli    
  4031d9:	dec    ecx
  4031da:	stc    
  4031db:	popf   
  4031dc:	xor    edi,DWORD PTR [edx]
  4031de:	or     sp,bx
  4031e1:	sbb    eax,0x3982dfd7
  4031e6:	cmp    edi,esp
  4031e8:	not    DWORD PTR [ebx-0x351b5da1]
  4031ee:	ss push ds
  4031f0:	gs sbb al,0x95
  4031f3:	xor    eax,0xd340d9e2
  4031f8:	mov    bl,0x2a
  4031fa:	setle  bh
  4031fd:	mov    ebp,0x83103c12
  403202:	jo     0x403247
  403204:	sbb    BYTE PTR [eax+0x6f50a691],0xd0
  40320b:	sbb    al,0xa0
  40320d:	jl     0x403232
  40320f:	pop    ebx
  403210:	and    ebx,DWORD PTR [ebx+0x28]
  403213:	add    eax,0x6e91d575
  403218:	aaa    
  403219:	pop    ss
  40321a:	mov    eax,ds:0xa4e0f387
  40321f:	sbb    edi,eax
  403221:	jmp    0x40320b
  403223:	pop    ebx
  403224:	clc    
  403225:	sbb    dl,dl
  403227:	xor    al,0x99
  403229:	inc    edi
  40322a:	sub    al,0x0
  40322c:	repz aam 0xf9
  40322f:	xchg   ebx,eax
  403230:	add    ah,0x53
  403233:	sbb    ebx,edx
  403235:	pop    edx
  403236:	shl    DWORD PTR [edx+0x54b42b4c],1
  40323c:	xchg   ecx,eax
  40323d:	xchg   ecx,eax
  40323e:	xor    BYTE PTR [ebx],0x8c
  403241:	dec    ebx
  403242:	fmul   QWORD PTR [ecx-0x6764a7be]
  403248:	arpl   WORD PTR [eax-0x55],sp
  40324b:	push   0xffffff98
  40324d:	adc    eax,0xd48d10c0
  403252:	lods   al,BYTE PTR ds:[esi]
  403253:	nop
  403254:	push   edx
  403255:	mov    gs,WORD PTR [ebx+0x7e]
  403258:	or     esp,edx
  40325a:	out    dx,eax
  40325b:	sub    DWORD PTR [ebp+0x34],0x5
  40325f:	das    
  403260:	std    
  403261:	test   DWORD PTR [ecx+edx*2+0x40aa86e8],edx
  403268:	jge    0x403257
  40326a:	mov    ch,0xfa
  40326c:	scas   eax,DWORD PTR es:[edi]
  40326d:	or     BYTE PTR [ebp-0x1c],cl
  403270:	push   edx
  403271:	jae    0x4032d1
  403273:	stc    
  403274:	int3   
  403275:	fstp   DWORD PTR [ebp+edi*4+0x173e16c1]
  40327c:	sbb    BYTE PTR [eax+0x6d],ch
  40327f:	jmp    0x403280
  403281:	cmp    BYTE PTR [edi-0x598199e5],bl
  403287:	sub    al,0x22
  403289:	mov    edi,0x99160e1d
  40328e:	ret    0xa98e
  403291:	data16 icebp 
  403293:	scas   eax,DWORD PTR es:[edi]
  403294:	lahf   
  403295:	in     al,0xb9
  403297:	mov    bl,0xbd
  403299:	cmp    bh,BYTE PTR [eax+esi*4]
  40329c:	jmp    0xd0b9:0x5c003799
  4032a3:	cmp    DWORD PTR cs:[ecx-0xf7feaad],0xffffffe0
  4032ab:	mov    al,0xfd
  4032ad:	int    0x85
  4032af:	repnz cmp BYTE PTR [ebx-0x34],bh
  4032b3:	sub    BYTE PTR [edi+0x79a057e7],0xa2
  4032ba:	jmp    0x40331d
  4032bc:	out    0xc1,al
  4032be:	sbb    dh,dh
  4032c0:	(bad)  
  4032c2:	xor    al,0x82
  4032c4:	enter  0x6dc9,0xe2
  4032c8:	pop    esp
  4032c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ca:	in     eax,0xe
  4032cc:	add    ebp,ebp
  4032ce:	iret   
  4032cf:	or     ecx,DWORD PTR [edx-0x7]
  4032d2:	pop    eax
  4032d3:	or     BYTE PTR [edi+eiz*4-0x4b7e01db],0xc6
  4032db:	jns    0x4032a2
  4032dd:	jnp    0x4032eb
  4032df:	adc    eax,0xb0ee9b9e
  4032e4:	or     al,0xe5
  4032e6:	daa    
  4032e7:	outs   dx,BYTE PTR ds:[esi]
  4032e8:	ds inc ecx
  4032ea:	pop    ss
  4032eb:	retf   
  4032ec:	sub    BYTE PTR [esp+eiz*2],ah
  4032ef:	imul   ebx,DWORD PTR [ebx],0x4416a204
  4032f5:	sahf   
  4032f6:	mov    dh,0x70
  4032f8:	adc    BYTE PTR [ebx*8-0x2df2bdf4],dh
  4032ff:	sub    al,0x93
  403301:	xor    eax,0x350a4f37
  403306:	mov    ?,WORD PTR ss:[esi]
  403309:	mov    ecx,DWORD PTR [esi+0x15532397]
  40330f:	jecxz  0x40330f
  403311:	(bad)  
  403312:	fcmovnu st,st(3)
  403314:	inc    ebx
  403315:	call   0x41a6:0xeb38000a
  40331c:	out    0x5d,eax
  40331e:	and    ch,ch
  403320:	retf   0xa43a
  403323:	adc    al,0x11
  403325:	jg     0x403367
  403327:	xchg   esi,eax
  403328:	xlat   BYTE PTR ds:[ebx]
  403329:	sbb    ch,BYTE PTR [ecx-0x1f]
  40332c:	cld    
  40332d:	mov    eax,0xf39c142d
  403332:	and    dl,BYTE PTR [ebx-0x48]
  403335:	jmp    0x403314
  403337:	je     0x4032ec
  403339:	or     BYTE PTR [ebx+0x282ed1fa],bl
  40333f:	leave  
  403340:	pop    esi
  403341:	jmp    0x403328
  403343:	ret    
  403344:	stos   DWORD PTR es:[edi],eax
  403345:	or     eax,edi
  403347:	jge    0x4032d4
  403349:	jno    0x4033be
  40334b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40334c:	imul   esi,DWORD PTR [ebx+0x4],0xf437139d
  403353:	outs   dx,BYTE PTR ds:[esi]
  403354:	leave  
  403355:	ss aam 0x2a
  403358:	adc    al,0x28
  40335a:	sbb    edi,esi
  40335c:	xchg   esi,eax
  40335d:	push   0xffffffe3
  40335f:	jne    0x40339a
  403361:	mov    ebp,0x25134247
  403366:	icebp  
  403367:	inc    ebp
  403368:	or     ch,bh
  40336a:	jo     0x4033a1
  40336c:	or     eax,0x58bcfb66
  403371:	or     DWORD PTR [ebx+0x37],edi
  403374:	(bad)  
  403375:	jbe    0x403371
  403377:	js     0x403309
  403379:	ret    
  40337a:	and    al,0xb3
  40337c:	adc    edi,DWORD PTR [edi]
  40337e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40337f:	jb     0x403367
  403381:	ss (bad) 
  403384:	or     eax,0x856f5268
  403389:	sti    
  40338a:	xchg   BYTE PTR [edi],ch
  40338c:	cdq    
  40338d:	dec    edi
  40338e:	nop
  40338f:	enter  0x115d,0x94
  403393:	pop    ebx
  403394:	iret   
  403395:	xor    ebx,ebp
  403397:	dec    ebp
  403398:	pop    ss
  403399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40339a:	pop    ebx
  40339b:	in     al,0xed
  40339d:	les    esi,FWORD PTR [edx]
  40339f:	or     eax,0xeefbdea2
  4033a4:	lods   al,BYTE PTR ds:[esi]
  4033a5:	xor    DWORD PTR [edi+edi*1+0x52],esi
  4033a9:	mov    bl,BYTE PTR [ecx-0x20fcd3fa]
  4033af:	fcom   DWORD PTR [esp+eiz*4+0x4b]
  4033b3:	mov    eax,ds:0x43a8033
  4033b8:	sar    bh,cl
  4033ba:	test   al,0xe8
  4033bc:	cmp    ecx,DWORD PTR [edi-0x309b2300]
  4033c2:	into   
  4033c3:	out    dx,al
  4033c4:	push   ebx
  4033c5:	jge    0x40342e
  4033c7:	xchg   edi,eax
  4033c8:	fisub  WORD PTR [ebx]
  4033ca:	int3   
  4033cb:	add    eax,0x732f3fe9
  4033d0:	call   0x9ad5:0x8dd172cd
  4033d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d8:	aad    0xff
  4033da:	loopne 0x403385
  4033dc:	add    al,BYTE PTR [ebx]
  4033de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033df:	lea    edi,[esi-0x4b]
  4033e2:	pop    edx
  4033e3:	cmp    al,0xa5
  4033e5:	mov    bh,0xa8
  4033e7:	dec    esi
  4033e8:	test   BYTE PTR [edi+ebx*4-0x1c],dh
  4033ec:	sbb    cl,bh
  4033ee:	cld    
  4033ef:	sbb    ebx,DWORD PTR [ebp+0x4e]
  4033f2:	scas   al,BYTE PTR es:[edi]
  4033f3:	not    cl
  4033f5:	adc    eax,0x442989d1
  4033fa:	xlat   BYTE PTR ds:[ebx]
  4033fb:	dec    edi
  4033fc:	mov    bh,ch
  4033fe:	js     0x4033cc
  403400:	mov    esp,0xeab4c839
  403405:	cmp    BYTE PTR [esi-0x42a872c8],cl
  40340b:	push   cs
  40340c:	xchg   DWORD PTR [edx+0x68],eax
  40340f:	sbb    bl,BYTE PTR ds:0xb2b28ad0
  403415:	push   ecx
  403416:	cwde   
  403417:	dec    ebx
  403418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403419:	pop    ds
  40341a:	sub    ch,ch
  40341c:	jmp    0x26a:0xf8c1bcef
  403423:	retf   
  403424:	jp     0x40343b
  403426:	mov    esi,esi
  403428:	enter  0xc1e1,0x3d
  40342c:	mov    eax,ds:0x967cf270
  403431:	ret    
  403432:	aad    0x8e
  403434:	sub    DWORD PTR [ecx-0x362e8360],0xc3ad1282
  40343e:	data16 xchg BYTE PTR [esp+ebx*2+0x5f],dl
  403443:	and    cl,BYTE PTR [ecx+0x3f]
  403446:	pusha  
  403447:	sahf   
  403448:	mov    eax,0xac069194
  40344d:	cld    
  40344e:	loopne 0x40348d
  403450:	dec    esi
  403451:	adc    eax,0xe739eacb
  403456:	dec    ecx
  403457:	lods   eax,DWORD PTR ds:[esi]
  403458:	mov    esi,0x762307c3
  40345d:	push   edx
  40345e:	cwde   
  40345f:	adc    BYTE PTR [esi-0x50d079c0],al
  403465:	jp     0x40349d
  403467:	imul   eax,DWORD PTR [ebx-0x2f],0xd7dc4dea
  40346e:	mov    bh,ah
  403470:	loop   0x4034f0
  403472:	pop    edx
  403473:	mov    DWORD PTR [edi-0x33],ebx
  403476:	aam    0x7b
  403478:	call   0xfceb:0x4c54ed59
  40347f:	add    eax,0xd1593f8e
  403484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403485:	inc    esp
  403486:	mov    ds:0x893d96f2,eax
  40348b:	imul   ecx
  40348d:	inc    ebx
  40348e:	je     0x4034d5
  403490:	jno    0x40341b
  403492:	(bad)  
  403494:	clc    
  403495:	add    edx,ecx
  403497:	sbb    DWORD PTR [esi],ebp
  403499:	pop    esi
  40349a:	cmp    bh,BYTE PTR [edi+0x4c]
  40349d:	push   ecx
  40349e:	imul   esp,DWORD PTR [edx],0xffffffd4
  4034a1:	ja     0x403462
  4034a3:	mov    cl,0xd9
  4034a5:	jge    0x403512
  4034a7:	cmp    dh,al
  4034a9:	aad    0x49
  4034ab:	inc    esp
  4034ac:	in     eax,dx
  4034ad:	cs mov esi,0x1cb56d4a
  4034b3:	shl    ebx,cl
  4034b5:	stos   BYTE PTR es:[edi],al
  4034b6:	ret    0x2504
  4034b9:	mov    al,ds:0x61595521
  4034be:	fs int3 
  4034c0:	xor    ch,BYTE PTR [edx-0x2f]
  4034c3:	or     esp,edi
  4034c5:	cs int3 
  4034c7:	pop    edx
  4034c8:	inc    esp
  4034c9:	pop    es
  4034ca:	pop    ecx
  4034cb:	pop    ds
  4034cc:	mov    DWORD PTR [eax-0x76],ecx
  4034cf:	stos   BYTE PTR es:[edi],al
  4034d0:	daa    
  4034d1:	mov    ebx,0x7341e9a6
  4034d6:	ss xchg ebx,eax
  4034d8:	cli    
  4034d9:	fld    TBYTE PTR [ecx-0x47ff252c]
  4034df:	push   ss
  4034e0:	dec    eax
  4034e1:	repz add eax,0x4505ec04
  4034e7:	and    eax,DWORD PTR ds:0x6cd3d2b7
  4034ed:	imul   ebp,DWORD PTR [ebx],0xffffffbf
  4034f0:	shl    BYTE PTR [edx+0x1731fcf5],0x8a
  4034f7:	fcmovnbe st,st(3)
  4034f9:	or     BYTE PTR [ebx],cl
  4034fb:	out    0x42,al
  4034fd:	push   ebp
  4034ff:	or     eax,0x2f3f009e
  403504:	jg     0x403561
  403506:	test   ebp,0x69ab583a
  40350c:	mov    al,0x10
  40350e:	mov    dh,0x9e
  403510:	xor    eax,0x64918389
  403515:	xor    eax,0x322c979c
  40351a:	pusha  
  40351b:	ret    0xd45e
  40351e:	lahf   
  40351f:	outs   dx,DWORD PTR ds:[esi]
  403520:	retf   
  403521:	push   cs
  403522:	fisttp DWORD PTR [ecx+0xb0af450]
  403528:	add    DWORD PTR [esi-0x50],ebp
  40352b:	retf   
  40352c:	mov    ds:0xe5ba12dc,al
  403531:	push   0xffffffcf
  403533:	jmp    0xb76e:0xe2ab537d
  40353a:	sbb    BYTE PTR [ebp+0x5c72c716],bl
  403540:	dec    esi
  403541:	cdq    
  403542:	jecxz  0x4034ed
  403544:	test   eax,0x43e54b3d
  403549:	pop    edi
  40354a:	aam    0x4f
  40354c:	mov    ecx,0x9573a27b
  403551:	pop    edx
  403552:	pushf  
  403553:	imul   eax,DWORD PTR [ebp-0x28],0x62
  403557:	jg     0x403582
  403559:	pop    edx
  40355a:	sbb    BYTE PTR [edi+0x2e9bc6c],bh
  403560:	pop    ds
  403561:	mov    dl,0xb7
  403563:	inc    esi
  403564:	into   
  403565:	jecxz  0x403582
  403567:	shl    al,cl
  403569:	lahf   
  40356a:	jae    0x403500
  40356c:	repnz and eax,0xe04ae811
  403572:	sbb    BYTE PTR [ebx+0xfa2b126],0x21
  403579:	leave  
  40357a:	lahf   
  40357b:	ret    
  40357c:	mov    ss,edi
  40357e:	in     eax,0xb2
  403580:	cmp    al,0x8f
  403582:	inc    eax
  403583:	xchg   edi,eax
  403584:	pop    esp
  403585:	in     al,0xe9
  403587:	xor    ch,BYTE PTR [ebp+0x39]
  40358a:	sub    al,0xf7
  40358c:	cli    
  40358d:	test   al,0x24
  40358f:	inc    esi
  403590:	xchg   ebp,eax
  403591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403592:	(bad)  
  403593:	push   es
  403594:	ret    0x46a
  403597:	pop    ecx
  403598:	and    DWORD PTR ds:0x428e5d,0x744e
  4035a2:	sub    ecx,eax
  4035a4:	and    DWORD PTR ds:0x428e5d,0x0
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x429395
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x429399
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429dc5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0x4e770752
  403d86:	retf   
  403d87:	and    DWORD PTR [ebp-0x4a848462],esi
  403d8d:	sahf   
  403d8e:	jnp    0x403e0b
  403d90:	xor    DWORD PTR [edx+0x1c],0x73265216
  403d97:	(bad)  
  403d98:	sti    
  403d99:	and    DWORD PTR [esi+0x11],edx
  403d9c:	repnz or eax,0xee97b9a5
  403da2:	add    edi,DWORD PTR [esi]
  403da4:	ins    DWORD PTR es:[edi],dx
  403da5:	push   ds
  403da6:	rcl    DWORD PTR es:[esi+ebx*2],1
  403daa:	mov    ch,0x4b
  403dac:	imul   eax,DWORD PTR [esi],0x5bc35d31
  403db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db3:	(bad)
  403db6:	hlt    
  403db7:	mov    eax,0xa5baba37
  403dbc:	xchg   ebx,eax
  403dbd:	pop    ebp
  403dbe:	xor    al,0xeb
  403dc0:	push   ss
  403dc1:	or     eax,0x4d819cdd
  403dc6:	mov    ds:0x3880ba3f,eax
  403dcb:	or     DWORD PTR [edi-0x18],0x78
  403dcf:	scas   eax,DWORD PTR es:[edi]
  403dd0:	push   cs
  403dd1:	test   DWORD PTR [edx+0x71],eax
  403dd4:	sub    eax,0x83d34ba6
  403dd9:	pop    eax
  403dda:	jne    0x403e25
  403ddc:	and    al,bl
  403dde:	mov    al,0x5
  403de0:	push   esp
  403de1:	aad    0x29
  403de3:	xor    eax,0xae385fe8
  403de8:	pusha  
  403de9:	fisttp QWORD PTR [eax]
  403deb:	test   BYTE PTR [esi+0x75924ba4],bh
  403df1:	xchg   esi,eax
  403df2:	clc    
  403df3:	ins    BYTE PTR es:[edi],dx
  403df4:	out    0x7f,eax
  403df6:	jno    0x403dfc
  403df8:	mov    eax,0xaa68abb0
  403dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dfe:	jb     0x403d85
  403e00:	iret   
  403e01:	call   0x643c3c7c
  403e06:	(bad)
  403e09:	daa    
  403e0a:	jp     0x403d95
  403e0c:	or     ah,BYTE PTR [ebx+0x71]
  403e0f:	sbb    al,ah
  403e11:	nop
  403e12:	pop    edx
  403e13:	adc    al,0x65
  403e15:	add    dl,dh
  403e17:	mov    DWORD PTR [ebp-0x4e],esi
  403e1a:	or     BYTE PTR [edi+0xb07e558],cl
  403e20:	sahf   
  403e21:	not    BYTE PTR [ebp+0x1cd4ade6]
  403e27:	stos   DWORD PTR es:[edi],eax
  403e28:	adc    eax,esp
  403e2a:	pop    ebx
  403e2b:	pop    ebp
  403e2c:	or     ah,BYTE PTR [edx-0x7d6fb18e]
  403e32:	pop    eax
  403e33:	lods   al,BYTE PTR ds:[esi]
  403e34:	adc    dl,BYTE PTR [ebx-0x1c]
  403e37:	mov    al,ds:0x9b463f0c
  403e3c:	pop    esi
  403e3d:	jmp    0x22396b47
  403e42:	sub    al,0xbe
  403e44:	add    DWORD PTR [edi],ebx
  403e46:	test   al,0x11
  403e48:	test   eax,0x75d1a4a2
  403e4d:	lea    edi,[edi-0x7e095ed2]
  403e53:	jmp    0x67b6:0x24aa6321
  403e5a:	add    BYTE PTR [esi],al
  403e5c:	aam    0x30
  403e5e:	or     DWORD PTR [eax+ecx*4],edx
  403e61:	aaa    
  403e62:	adc    al,BYTE PTR [ebp+0x6e31dc35]
  403e68:	cld    
  403e69:	ror    edx,cl
  403e6b:	or     BYTE PTR [ebp-0x4fd3bdac],ah
  403e71:	mov    ch,bl
  403e73:	jnp    0x403e89
  403e75:	lds    esp,FWORD PTR [ecx]
  403e77:	lods   al,BYTE PTR ds:[esi]
  403e78:	inc    esp
  403e79:	js     0x403e49
  403e7b:	lea    ecx,[ebp+0x56]
  403e7e:	mov    esp,0x80cc7ff2
  403e83:	jbe    0x403ee6
  403e85:	je     0x403ea0
  403e87:	sbb    esp,DWORD PTR ds:0xfe49699c
  403e8d:	cmp    BYTE PTR [edi-0x1e],bh
  403e90:	iret   
  403e91:	sti    
  403e92:	push   es
  403e93:	cmp    al,0xa8
  403e95:	out    dx,al
  403e96:	xchg   BYTE PTR [eax+0x4b],al
  403e99:	ss mov ebp,0x1e407293
  403e9f:	int    0xab
  403ea1:	imul   ebp,DWORD PTR [eax],0x71fffaa2
  403ea7:	sbb    esi,DWORD PTR [edi+ebp*8]
  403eaa:	sub    edx,edx
  403eac:	nop
  403ead:	push   ecx
  403eae:	mov    ds:0x2d818c6c,al
  403eb3:	test   BYTE PTR [ebx],dh
  403eb5:	sbb    ch,BYTE PTR [ebx]
  403eb7:	dec    edi
  403eb8:	jnp    0x403e8d
  403eba:	stc    
  403ebb:	(bad)  
  403ebc:	repz push 0x72
  403ebf:	fidiv  WORD PTR [ebp-0x80]
  403ec2:	mov    esi,0xa3a6bfd7
  403ec7:	mov    bl,BYTE PTR [ebx+edi*4]
  403eca:	xor    edi,ebp
  403ecc:	in     al,dx
  403ecd:	jl     0x403f2b
  403ecf:	or     DWORD PTR fs:[edi-0x3c],ecx
  403ed3:	inc    eax
  403ed4:	repz mov bl,0x8c
  403ed7:	jl     0x403ebf
  403ed9:	jae    0x403e6b
  403edb:	loopne 0x403f34
  403edd:	adc    dl,BYTE PTR [ebx+eiz*2+0x4031d8a5]
  403ee4:	fisubr WORD PTR [ebx-0x60902da6]
  403eea:	inc    ebx
  403eeb:	test   BYTE PTR [ecx-0x3f],bh
  403eee:	mov    bh,0x35
  403ef0:	sbb    ebp,DWORD PTR [edi]
  403ef2:	push   edx
  403ef3:	push   ss
  403ef4:	loop   0x403f3a
  403ef6:	xchg   ecx,eax
  403ef7:	jmp    0x92b:0x6d19b164
  403efe:	xchg   edx,eax
  403eff:	pop    ecx
  403f00:	pop    ss
  403f01:	add    al,0xb0
  403f03:	adc    ebx,DWORD PTR [edi-0x3f]
  403f06:	arpl   WORD PTR [edi],di
  403f08:	or     edi,DWORD PTR [ecx]
  403f0a:	cmp    DWORD PTR [bx-0x3b],0x1d
  403f0f:	aaa    
  403f10:	nop
  403f11:	xchg   ebp,eax
  403f12:	ret    
  403f13:	pop    es
  403f14:	in     al,dx
  403f15:	inc    edi
  403f16:	jmp    0xf805:0x16986faf
  403f1d:	push   ebp
  403f1e:	inc    ebx
  403f1f:	inc    ebp
  403f20:	jecxz  0x403ec7
  403f22:	xor    eax,0xd588c73d
  403f27:	ror    BYTE PTR [ecx],1
  403f29:	inc    ebp
  403f2a:	pop    ds
  403f2b:	rol    al,0x4e
  403f2e:	xor    edx,esi
  403f30:	stos   DWORD PTR es:[edi],eax
  403f31:	jno    0x403f82
  403f33:	mov    edx,0x6a3f918b
  403f38:	or     ebp,ebp
  403f3a:	add    eax,DWORD PTR [ecx+0x15d0c26d]
  403f40:	adc    BYTE PTR [edx-0x7eb395b6],0xdd
  403f47:	xor    eax,0xe972a146
  403f4c:	cmp    eax,0x10bc372e
  403f51:	dec    ebx
  403f52:	pop    ebp
  403f53:	in     al,dx
  403f54:	and    al,cl
  403f56:	jno    0x403f8e
  403f58:	push   ebp
  403f59:	cmp    edi,ebx
  403f5b:	pushf  
  403f5c:	xor    BYTE PTR [bx],dl
  403f5f:	jecxz  0x403f99
  403f61:	je     0x403f06
  403f63:	or     edx,DWORD PTR [ebx+0x49]
  403f66:	add    DWORD PTR [edx],0x45
  403f69:	in     eax,dx
  403f6a:	mov    al,BYTE PTR [ebx-0x7f892b89]
  403f70:	out    dx,al
  403f71:	or     al,0x97
  403f73:	xor    BYTE PTR [ebp+0x5419d363],ah
  403f79:	sbb    bl,ch
  403f7b:	das    
  403f7c:	cmp    edx,DWORD PTR ds:0x6fcf9d9c
  403f82:	push   ebp
  403f83:	scas   al,BYTE PTR es:[edi]
  403f84:	adc    bh,BYTE PTR [edi]
  403f86:	repz pop ds
  403f88:	fdiv   DWORD PTR ds:0xf4abbbcc
  403f8e:	pop    ss
  403f8f:	(bad)  [edi]
  403f91:	dec    DWORD PTR [eax+0x43]
  403f94:	adc    bl,BYTE PTR [ecx+0x50e22966]
  403f9a:	jnp    0x403fd1
  403f9c:	int    0xea
  403f9e:	das    
  403f9f:	pop    eax
  403fa0:	push   cs
  403fa1:	cdq    
  403fa2:	mov    WORD PTR [ebp+0x7],es
  403fa5:	cmp    BYTE PTR [ebx-0x45],dl
  403fa8:	(bad)  
  403fa9:	and    DWORD PTR [edx],edx
  403fab:	ins    DWORD PTR es:[edi],dx
  403fac:	adc    ebp,ebp
  403fae:	cmp    eax,0x7f04f234
  403fb3:	mov    ds:0xc5f283cf,eax
  403fb8:	je     0x403f3f
  403fba:	retf   0xf0ec
  403fbd:	enter  0xe7bc,0x40
  403fc1:	loop   0x403fef
  403fc3:	add    BYTE PTR [edi-0x6348836d],bh
  403fc9:	jo     0x403ff9
  403fcb:	mov    edx,0x6f76db9c
  403fd0:	adc    eax,0x8d87e006
  403fd5:	fs ret 
  403fd7:	clc    
  403fd8:	push   0x54
  403fda:	push   ss
  403fdb:	jae    0x403f85
  403fdd:	sbb    eax,DWORD PTR [ecx+eax*4-0x6b]
  403fe1:	enter  0xcf31,0x21
  403fe5:	aaa    
  403fe6:	dec    esi
  403fe7:	xlat   BYTE PTR ds:[ebx]
  403fe8:	mov    db3,esi
  403feb:	pop    es
  403fec:	das    
  403fed:	clc    
  403fee:	and    DWORD PTR [ebp+0x65],edi
  403ff1:	mov    ebp,0xc62f54c1
  403ff6:	inc    ebp
  403ff7:	loop   0x404074
  403ff9:	arpl   WORD PTR ds:0x6057ad11,sp
  403fff:	mov    ecx,0x495f2f3a
  404004:	clc    
  404005:	push   ebx
  404006:	or     al,0x35
  404008:	cmp    DWORD PTR [edi+0x39],edx
  40400b:	fs mov cl,0xdd
  40400e:	dec    ecx
  40400f:	inc    edx
  404010:	xor    BYTE PTR [edi],0x82
  404013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404014:	xor    eax,0x1519c512
  404019:	cmc    
  40401a:	push   es
  40401b:	pop    ebp
  40401c:	lea    edi,[edx+edi*8+0x2e1e7051]
  404023:	adc    ecx,DWORD PTR [ecx]
  404025:	jo     0x403ff0
  404027:	iret   
  404028:	adc    DWORD PTR [edi+0x17c7582a],ecx
  40402e:	dec    esi
  40402f:	mov    edi,DWORD PTR [edx-0x28]
  404032:	xchg   esp,eax
  404033:	retf   
  404034:	popf   
  404035:	push   es
  404036:	dec    ebx
  404037:	ss mov al,0xe2
  40403a:	inc    ebp
  40403b:	push   ebp
  40403c:	(bad)  
  40403d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40403e:	mov    esi,0x27db4c79
  404043:	xor    ch,BYTE PTR [esi+0x271ac25c]
  404049:	(bad)  
  40404b:	rep stos BYTE PTR es:[edi],al
  40404d:	ins    DWORD PTR es:[edi],dx
  40404e:	fnsave [edi+0x301da193]
  404054:	push   ebx
  404055:	or     DWORD PTR [ebx],ecx
  404057:	sbb    ebx,DWORD PTR [ebx]
  404059:	push   ebp
  40405a:	and    edx,DWORD PTR [esi+0x578e1e85]
  404060:	jecxz  0x40400f
  404062:	int3   
  404063:	test   eax,0x187ac67
  404068:	imul   eax,DWORD PTR [ebp+0x21b72c6a],0xa213ab00
  404072:	inc    edi
  404073:	adc    al,0x45
  404076:	ss xchg ebx,eax
  404078:	adc    BYTE PTR [edi],dl
  40407a:	jne    0x4040b3
  40407c:	inc    edx
  40407d:	and    ebp,esp
  40407f:	push   ebp
  404080:	cmp    BYTE PTR ds:0x8215f527,ah
  404086:	and    al,0xff
  404088:	add    DWORD PTR [esi+0x4a],ebx
  40408b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408c:	xchg   esi,eax
  40408d:	xor    al,0xf2
  40408f:	sub    al,0x9a
  404091:	mov    ?,WORD PTR [eax+0x4c222197]
  404097:	cmc    
  404098:	pop    ecx
  404099:	test   eax,0x9e77b42a
  40409e:	lahf   
  40409f:	popa   
  4040a0:	or     al,0x9c
  4040a2:	mov    ds:0xa7f6f653,al
  4040a7:	fiadd  DWORD PTR [ebx+0x4e]
  4040aa:	leave  
  4040ab:	pop    edx
  4040ac:	and    DWORD PTR [ebx-0x3adc310a],esp
  4040b2:	mov    dh,0xc0
  4040b4:	sbb    DWORD PTR [edi],0x1f895b3c
  4040ba:	ret    
  4040bb:	xor    BYTE PTR [edx+edx*4],ah
  4040be:	jne    0x4040d3
  4040c0:	xchg   DWORD PTR [ecx+0x65],edx
  4040c3:	rcl    edi,1
  4040c5:	xor    edx,ebx
  4040c7:	in     eax,dx
  4040c8:	test   esi,edi
  4040ca:	lahf   
  4040cb:	sbb    eax,esp
  4040cd:	scas   al,BYTE PTR es:[edi]
  4040ce:	jle    0x404141
  4040d0:	jl     0x40406e
  4040d2:	sbb    DWORD PTR [edx-0x40],esi
  4040d5:	sbb    al,0xdb
  4040d7:	or     BYTE PTR [ecx],ah
  4040d9:	retf   
  4040da:	jecxz  0x404156
  4040dc:	mov    ds:0x1f074a1a,eax
  4040e1:	sbb    edx,DWORD PTR [ebx]
  4040e3:	sbb    ah,BYTE PTR [ecx-0x60235fdb]
  4040e9:	xor    eax,ecx
  4040eb:	popf   
  4040ec:	out    dx,eax
  4040ed:	lods   al,BYTE PTR ds:[esi]
  4040ee:	clc    
  4040ef:	(bad)  
  4040f0:	dec    edi
  4040f1:	mov    fs,WORD PTR [edx+edx*2+0x26]
  4040f5:	xor    esi,DWORD PTR [edi-0x3afcd225]
  4040fb:	stc    
  4040fc:	inc    edi
  4040fd:	mov    ah,BYTE PTR [ebx]
  4040ff:	mov    eax,ds:0x576bb6a3
  404104:	sub    BYTE PTR [edx],ch
  404106:	stos   DWORD PTR es:[edi],eax
  404107:	push   edx
  404108:	daa    
  404109:	push   cs
  40410a:	lods   eax,DWORD PTR ds:[esi]
  40410b:	ins    DWORD PTR es:[edi],dx
  40410c:	jno    0x404182
  40410e:	dec    eax
  40410f:	xchg   ebx,eax
  404110:	mov    dh,0x96
  404112:	pop    esi
  404113:	xchg   edi,eax
  404114:	and    edx,esi
  404116:	aam    0x2a
  404118:	add    dl,BYTE PTR [ecx-0x57]
  40411b:	sub    dh,ah
  40411d:	inc    eax
  40411e:	adc    al,0xf6
  404120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404121:	lods   al,BYTE PTR ds:[esi]
  404122:	jns    0x4040d8
  404124:	bound  eax,QWORD PTR [ecx+esi*1-0x2deaeb39]
  40412b:	sub    DWORD PTR ds:0xee0e6fd8,ebp
  404131:	sbb    BYTE PTR [ecx+0x72],cl
  404134:	cmp    BYTE PTR ds:0x358927ae,ah
  40413a:	jl     0x40413e
  40413c:	push   ss
  40413d:	sar    ah,cl
  40413f:	repz add dl,BYTE PTR [edi+0x40e12cb2]
  404146:	adc    ebp,DWORD PTR [esi+0x7725a02]
  40414c:	retf   
  40414d:	pusha  
  40414e:	call   0xabfbe1c3
  404153:	in     eax,0x1d
  404155:	sub    BYTE PTR [esi-0x19],dh
  404158:	xor    eax,0x60a1986
  40415d:	mov    ebx,0xc05e7e3e
  404162:	imul   ebp,DWORD PTR [ebp+0x16],0x459ec5ed
  404169:	lds    ecx,FWORD PTR [eax+ebp*2]
  40416c:	mov    bh,0x18
  40416e:	iret   
  40416f:	jle    0x40416c
  404171:	pop    es
  404172:	ret    
  404173:	arpl   di,sp
  404175:	loopne 0x40415d
  404177:	aam    0x7f
  404179:	loope  0x404196
  40417b:	sar    BYTE PTR [ecx],0x1e
  40417e:	shl    BYTE PTR [ecx],cl
  404180:	ror    DWORD PTR [edi-0x3a],1
  404183:	aam    0x59
  404185:	inc    ebp
  404186:	fs push ss
  404188:	push   eax
  404189:	add    eax,0x42f7addd
  40418e:	ret    0x550b
  404191:	inc    esi
  404192:	xchg   ebp,eax
  404193:	mov    dl,0x85
  404195:	cmp    DWORD PTR [ecx+0x7d7d97c4],esp
  40419b:	outs   dx,DWORD PTR ds:[esi]
  40419c:	test   BYTE PTR [eax],bl
  40419e:	mov    edi,0x84de644b
  4041a3:	(bad)  
  4041a4:	pop    ds
  4041a5:	div    DWORD PTR [eax]
  4041a7:	adc    BYTE PTR [edx-0x4e],bl
  4041aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041ab:	or     al,0x79
  4041ad:	dec    ebp
  4041ae:	bound  esp,QWORD PTR ss:[ecx-0x23]
  4041b2:	and    BYTE PTR [edx+0x69],dh
  4041b5:	jbe    0x404232
  4041b7:	icebp  
  4041b8:	pop    edi
  4041b9:	sub    BYTE PTR [edx-0x6b],dl
  4041bc:	fucomi st,st(5)
  4041be:	add    bl,BYTE PTR [esi-0x2]
  4041c1:	in     eax,0x83
  4041c3:	mov    ch,0xac
  4041c5:	inc    ebp
  4041c6:	add    BYTE PTR [esi-0x304a4e17],cl
  4041cc:	inc    edi
  4041cd:	ja     0x4041c1
  4041cf:	pop    esp
  4041d0:	adc    BYTE PTR [esi+0x1e],dh
  4041d3:	sbb    esp,DWORD PTR [ebp+0x1d]
  4041d6:	enter  0xabe0,0xf4
  4041da:	sbb    cl,BYTE PTR [ebx+0x1a270c10]
  4041e0:	lea    ebx,[esi+0x78f5a11c]
  4041e6:	push   ebx
  4041e7:	mov    ds:0x21250bf2,eax
  4041ec:	inc    edx
  4041ed:	shr    BYTE PTR [esi+ebx*1],cl
  4041f0:	xchg   ebx,eax
  4041f1:	cmp    BYTE PTR [edx],0x76
  4041f4:	shr    BYTE PTR [eax],0xe
  4041f7:	fucom  st(1)
  4041f9:	pop    ds
  4041fa:	xor    al,0xee
  4041fc:	adc    DWORD PTR [edx+eiz*2+0x5],esp
  404200:	jmp    0x4041ce
  404202:	add    dl,BYTE PTR [ebx+ebp*1]
  404205:	jecxz  0x404192
  404207:	lock xor esi,DWORD PTR [ebx+0x447c19a]
  40420e:	and    BYTE PTR [edx+0x4d28e6ea],al
  404214:	retf   0x673b
  404217:	je     0x4041dd
  404219:	inc    eax
  40421a:	adc    eax,0x3fdfdcd8
  40421f:	pop    ecx
  404220:	xlat   BYTE PTR ds:[ebx]
  404221:	mov    al,0xa0
  404223:	test   ah,cl
  404225:	lds    ecx,FWORD PTR [ebx]
  404227:	sbb    edx,DWORD PTR [edi]
  404229:	ret    
  40422a:	fdivr  DWORD PTR [edi+0x26]
  40422d:	pop    edi
  40422e:	inc    edx
  40422f:	adc    edi,DWORD PTR ds:0x8c58362d
  404235:	test   eax,0xd34386e3
  40423a:	jbe    0x404261
  40423c:	not    DWORD PTR [ecx+eiz*8+0x39487af9]
  404243:	push   esi
  404244:	jb     0x40428a
  404246:	test   al,0x86
  404248:	inc    ecx
  404249:	dec    esi
  40424a:	js     0x4041d7
  40424c:	out    dx,eax
  40424d:	push   0x12b347f4
  404252:	ins    BYTE PTR es:[edi],dx
  404253:	gs jl  0x4042a2
  404256:	fsub   st(5),st
  404258:	test   al,0x88
  40425a:	aad    0xce
  40425c:	cmp    esp,esp
  40425e:	xchg   ebp,eax
  40425f:	sub    al,0x7b
  404261:	aas    
  404262:	cdq    
  404263:	sbb    BYTE PTR [esi+esi*8-0x40],dl
  404267:	mov    WORD PTR ds:0xcfa635ba,?
  40426d:	and    al,0xa8
  40426f:	add    ebx,DWORD PTR [edx+0x112e6497]
  404275:	fldl2e 
  404277:	(bad)  
  404278:	mov    edx,0x9aa67112
  40427d:	sub    eax,0x52276337
  404282:	and    DWORD PTR [edi],edx
  404284:	enter  0xdd25,0xe0
  404288:	popf   
  404289:	inc    esp
  40428a:	js     0x4042c0
  40428c:	std    
  40428d:	inc    ebp
  40428e:	je     0x404254
  404290:	(bad)  
  404291:	sti    
  404292:	int    0x80
  404294:	std    
  404295:	inc    ebp
  404296:	ja     0x4042ca
  404298:	add    eax,0x271cafbc
  40429d:	sub    ebp,DWORD PTR [esi+edx*8]
  4042a0:	in     al,0x0
  4042a2:	ret    
  4042a3:	mov    ebx,0xb3f0e086
  4042a8:	stc    
  4042a9:	inc    ebp
  4042aa:	dec    edx
  4042ab:	or     DWORD PTR [ecx+edi*4-0xcdc3b89],ebp
  4042b2:	std    
  4042b3:	jmp    0x432631e
  4042b8:	dec    ebx
  4042b9:	cmp    DWORD PTR [ebx+0x56a401df],esp
  4042bf:	jge    0x40432d
  4042c1:	push   ds
  4042c2:	add    cl,ch
  4042c4:	xlat   BYTE PTR ds:[ebx]
  4042c5:	xchg   ecx,eax
  4042c6:	adc    BYTE PTR [edi+0x7f],0xad
  4042ca:	call   0xc09c5045
  4042cf:	arpl   WORD PTR [eax-0x29f3e076],dx
  4042d5:	sub    al,0x9a
  4042d7:	or     dl,BYTE PTR [ecx-0x17593867]
  4042dd:	iret   
  4042de:	mov    cl,0x48
  4042e0:	cmc    
  4042e1:	mov    ecx,ebp
  4042e3:	int3   
  4042e4:	enter  0x302e,0x9c
  4042e8:	push   ds
  4042e9:	mov    edx,ebx
  4042eb:	dec    eax
  4042ec:	sbb    BYTE PTR [ecx+edi*4-0x101d8c69],0x89
  4042f4:	mov    ch,0x53
  4042f6:	shr    BYTE PTR [ecx-0x43],cl
  4042f9:	test   BYTE PTR [edx-0x4391cbd7],bl
  4042ff:	jge    0x40434d
  404301:	into   
  404302:	cmp    edx,DWORD PTR [edi-0x1db5adfe]
  404308:	fcmove st,st(3)
  40430a:	fnstsw WORD PTR [edx]
  40430c:	pop    ecx
  40430d:	xor    DWORD PTR [ebx+0x12],eax
  404310:	sahf   
  404311:	sub    BYTE PTR [ebp+0x70473bce],ch
  404317:	gs (bad) 
  404319:	aaa    
  40431a:	sub    DWORD PTR [ebp-0x31],edi
  40431d:	stos   DWORD PTR es:[edi],eax
  40431e:	xor    al,0x9
  404320:	addr16 add eax,0x411a83ef
  404326:	push   edi
  404327:	mov    edi,0x4075742b
  40432c:	jmp    DWORD PTR [eax-0x3e62897a]
  404332:	jmp    DWORD PTR [edi]
  404334:	fmulp  st(1),st
  404336:	inc    edx
  404337:	rol    BYTE PTR [ecx-0x30],cl
  40433a:	xor    BYTE PTR [esi+0x3b],bl
  40433d:	mov    ebx,0x7c2fd343
  404342:	retf   0x6012
  404345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404346:	adc    dl,BYTE PTR [edx+0x1a7c2b9f]
  40434c:	or     DWORD PTR [ebx+ebp*1],ebx
  40434f:	mov    edx,0x15e0078a
  404354:	hlt    
  404355:	test   al,0xd9
  404357:	mov    eax,0x6087db2c
  40435c:	pop    ebp
  40435d:	gs inc edx
  40435f:	xor    edx,esp
  404361:	xlat   BYTE PTR ds:[ebx]
  404362:	out    dx,eax
  404363:	push   es
  404364:	inc    ebx
  404365:	inc    ebp
  404366:	jecxz  0x4042fd
  404368:	or     edx,DWORD PTR [ecx+0x32]
  40436b:	(bad)
  40436e:	pushf  
  40436f:	aad    0x41
  404371:	sbb    dh,BYTE PTR [bp+di]
  404374:	inc    ebx
  404375:	(bad)  
  404376:	xor    cl,0xa
  404379:	dec    ebx
  40437a:	mov    eax,ds:0xb53df803
  40437f:	or     esi,DWORD PTR [edx+0x55]
  404382:	loop   0x4043b0
  404384:	xchg   edi,eax
  404385:	fisub  DWORD PTR [ebx-0x21001bd3]
  40438b:	or     DWORD PTR [edx+0x3],edi
  40438e:	fiadd  WORD PTR [edx+0x6b485af3]
  404394:	add    BYTE PTR [edi],bl
  404396:	ror    DWORD PTR [ecx],0x6b
  404399:	shr    BYTE PTR [edi],cl
  40439b:	call   0x1cfa:0xf7b20333
  4043a2:	xchg   ebp,eax
  4043a3:	scas   eax,DWORD PTR es:[edi]
  4043a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a5:	imul   ebx,DWORD PTR [eax+edx*8],0xe
  4043a9:	mov    al,BYTE PTR ds:0xac8cd819
  4043af:	lahf   
  4043b0:	dec    esp
  4043b1:	adc    cl,bl
  4043b3:	xchg   esp,eax
  4043b4:	arpl   WORD PTR [eax-0xff4358f],ax
  4043ba:	fs xchg ebx,eax
  4043bc:	shl    DWORD PTR [edi-0x48efdf33],1
  4043c2:	lods   al,BYTE PTR ds:[esi]
  4043c3:	jnp    0x40438d
  4043c5:	add    esi,edi
  4043c7:	or     al,0xf8
  4043c9:	adc    edx,DWORD PTR [ecx+0x7f]
  4043cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043cd:	cld    
  4043ce:	and    bh,BYTE PTR [edx]
  4043d0:	fld    TBYTE PTR [edx+0x70c00191]
  4043d6:	dec    eax
  4043d7:	popf   
  4043d8:	push   0xd78b9c53
  4043dd:	inc    edi
  4043de:	ja     0x404403
  4043e0:	fisttp DWORD PTR [ebp-0x1f]
  4043e3:	pop    esp
  4043e4:	retf   
  4043e5:	mov    ch,0xe8
  4043e7:	in     eax,dx
  4043e8:	add    eax,0x973d120b
  4043ed:	(bad)  
  4043ef:	xor    DWORD PTR [eax-0x6],eax
  4043f2:	rcr    DWORD PTR [esi-0x48],0xdc
  4043f6:	adc    WORD PTR [ecx-0x61],si
  4043fa:	pop    ebx
  4043fb:	fchs   
  4043fd:	sti    
  4043fe:	push   ebp
  4043ff:	pop    ebx
  404400:	daa    
  404401:	xchg   esi,eax
  404402:	loop   0x40446b
  404404:	jp     0x4043eb
  404406:	fsubr  QWORD PTR [edi]
  404408:	sub    bh,BYTE PTR [eax+0x4730a787]
  40440e:	or     dh,al
  404410:	mov    ah,0x54
  404412:	jmp    0x4043dd
  404414:	out    dx,eax
  404415:	mov    ah,0xd9
  404417:	mov    bl,0x30
  404419:	jle    0x404448
  40441b:	pop    eax
  40441c:	cld    
  40441d:	pop    es
  40441e:	inc    esp
  40441f:	cmp    BYTE PTR [ebx],bl
  404421:	or     bh,bh
  404423:	xor    DWORD PTR [ebx-0x40],0x43
  404427:	mov    bl,BYTE PTR [eax]
  404429:	scas   al,BYTE PTR es:[edi]
  40442a:	add    eax,0x37
  40442d:	jecxz  0x40441e
  40442f:	cli    
  404430:	mov    bh,0xcf
  404432:	cs dec esi
  404434:	dec    BYTE PTR [ecx-0x22]
  404437:	test   BYTE PTR [ebx-0x40],dl
  40443a:	xor    DWORD PTR [ebx+0x3352826a],0xffffffbf
  404441:	popf   
  404442:	jl     0x404480
  404444:	int    0x64
  404446:	(bad)  
  404447:	jle    0x404446
  404449:	inc    esi
  40444a:	outs   dx,BYTE PTR ds:[esi]
  40444b:	dec    edi
  40444c:	jg     0x40445d
  40444e:	sub    al,0x53
  404450:	mov    edi,0x25a04f7
  404455:	or     al,0x6b
  404457:	push   es
  404458:	popa   
  404459:	mov    edx,0x1c5414cb
  40445e:	pushf  
  40445f:	or     eax,0xa56f7e82
  404464:	jne    0x4043f4
  404466:	imul   edi,DWORD PTR [ebx-0x8],0xfffffffc
  40446a:	fidiv  DWORD PTR [eax+0x2ca1c1bf]
  404470:	pop    ds
  404471:	sbb    DWORD PTR [ecx+0x48670a22],esp
  404477:	or     BYTE PTR [ebp+0x375d527a],cl
  40447d:	push   es
  40447e:	push   0xa8c3e83a
  404483:	jge    0x404499
  404485:	dec    ebp
  404486:	out    0x8f,al
  404488:	test   BYTE PTR [eax+ecx*8-0x536b9a24],bh
  40448f:	inc    ebp
  404490:	test   al,0xa2
  404492:	js     0x404458
  404494:	inc    ecx
  404495:	sbb    al,0x56
  404497:	pop    ebp
  404498:	mov    eax,ds:0x9c3527ff
  40449d:	or     al,0xb0
  40449f:	pop    es
  4044a0:	or     DWORD PTR ss:[ecx],ebp
  4044a3:	pop    esp
  4044a4:	(bad)  
  4044a5:	mov    ds:0xb44f1078,al
  4044aa:	push   cs
  4044ab:	ja     0x4044a1
  4044ad:	adc    dh,bh
  4044af:	sbb    dh,BYTE PTR [ecx+esi*4+0x6a]
  4044b3:	mov    cl,0xd2
  4044b5:	sub    al,ch
  4044b7:	sub    eax,ebp
  4044b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ba:	or     BYTE PTR [esi+edx*4-0x31],0x89
  4044bf:	mov    fs,eax
  4044c1:	cmp    al,0x9d
  4044c3:	sbb    al,0xec
  4044c5:	push   0x436ee760
  4044ca:	jecxz  0x404521
  4044cc:	cwde   
  4044cd:	xchg   ebx,eax
  4044ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044cf:	and    dl,BYTE PTR [ebp+0x7a]
  4044d2:	sbb    al,0xb2
  4044d4:	je     0x40452e
  4044d6:	mov    ds:0x892954ed,eax
  4044db:	dec    ebx
  4044dc:	in     al,0xfd
  4044de:	scas   al,BYTE PTR es:[edi]
  4044df:	sbb    esi,ebp
  4044e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044e2:	out    dx,al
  4044e3:	cmp    al,BYTE PTR [ecx+edx*2+0x260ea99e]
  4044ea:	hlt    
  4044eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ec:	nop
  4044ed:	xor    edi,ebx
  4044ef:	mov    bh,0xd7
  4044f1:	fs call 0x857a:0xf0963e58
  4044f9:	jmp    0x66c7:0x4ee0730b
  404500:	pop    edx
  404501:	jno    0x404484
  404503:	pop    es
  404504:	(bad)  
  404505:	popf   
  404506:	push   0x195624f4
  40450b:	or     eax,0xff70aac6
  404510:	test   eax,0x4db2ed1e
  404515:	sbb    cl,BYTE PTR [esi+0x371e6cd3]
  40451b:	jne    0x4044e0
  40451d:	mov    edi,0x2743b15
  404522:	stc    
  404523:	es in  al,0xde
  404526:	and    dh,BYTE PTR [edx]
  404528:	adc    al,0x3f
  40452a:	fstp   TBYTE PTR [eax+0x21796c88]
  404530:	in     al,dx
  404531:	ret    0xdb93
  404534:	ss lahf 
  404536:	sub    BYTE PTR [ebx],dh
  404538:	and    DWORD PTR [ebx+0x46bb6be3],esp
  40453e:	shl    DWORD PTR [ebp-0x3a198322],0xce
  404545:	or     DWORD PTR [edx],ebp
  404547:	xchg   ecx,eax
  404548:	mov    edi,0xa1175a37
  40454d:	das    
  40454e:	(bad)  
  40454f:	in     eax,0xbd
  404551:	loope  0x4044e4
  404553:	add    dl,cl
  404555:	mulps  xmm3,XMMWORD PTR [eax-0x3aaf8f86]
  40455c:	pushf  
  40455d:	jg     0x404527
  40455f:	or     eax,0xd0315688
  404564:	stc    
  404565:	mov    ah,0xef
  404567:	inc    eax
  404568:	std    
  404569:	das    
  40456a:	popa   
  40456b:	inc    esi
  40456c:	out    dx,eax
  40456d:	jae    0x4045ca
  40456f:	cld    
  404570:	jp     0x404556
  404572:	aam    0x92
  404574:	lahf   
  404575:	dec    ebp
  404576:	loopne 0x404565
  404578:	sti    
  404579:	xchg   esi,eax
  40457a:	mov    ds:0xdcde8162,al
  40457f:	hlt    
  404580:	fadd   QWORD PTR [ecx+eax*2+0x4f365570]
  404587:	mov    eax,0xadade976
  40458c:	inc    edx
  40458d:	bound  edi,QWORD PTR [eax-0x3f]
  404590:	idiv   BYTE PTR es:[edx-0x2e5201c9]
  404597:	dec    edi
  404598:	stos   DWORD PTR es:[edi],eax
  404599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40459a:	dec    ecx
  40459b:	aaa    
  40459c:	dec    esi
  40459d:	inc    edi
  40459e:	jno    0x40454a
  4045a0:	and    eax,0xcfca6311
  4045a5:	pop    ebx
  4045a6:	mov    WORD PTR [edi],ss
  4045a8:	test   al,0xbe
  4045aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ab:	push   esp
  4045ac:	ret    0x247c
  4045af:	jne    0x404598
  4045b1:	dec    edi
  4045b2:	jns    0x4045ed
  4045b4:	mov    DWORD PTR [ecx],ebx
  4045b6:	lods   eax,DWORD PTR ds:[esi]
  4045b7:	fld    DWORD PTR [esi-0x5d7e65f8]
  4045bd:	jo     0x40460a
  4045bf:	cld    
  4045c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c1:	jecxz  0x404640
  4045c3:	jae    0x4045c5
  4045c5:	dec    esp
  4045c6:	fdiv   st(3),st
  4045c8:	mov    cl,0x14
  4045ca:	sar    DWORD PTR [ebp-0x6f],cl
  4045cd:	xchg   di,ax
  4045cf:	and    BYTE PTR [ebx+0x7fe67cd9],bh
  4045d5:	sbb    DWORD PTR [ecx],esi
  4045d7:	and    cl,BYTE PTR [ebx-0x244a86c8]
  4045dd:	inc    ebx
  4045de:	out    dx,eax
  4045df:	nop    DWORD PTR [ebx+0x4c62a76]
  4045e6:	lods   al,BYTE PTR ds:[esi]
  4045e7:	aas    
  4045e8:	daa    
  4045e9:	xchg   esp,eax
  4045ea:	dec    eax
  4045eb:	in     eax,0xc2
  4045ed:	adc    ebp,ecx
  4045ef:	ds or  bh,al
  4045f2:	add    bl,BYTE PTR [ebp+eax*4-0x48ae93a8]
  4045f9:	call   DWORD PTR [ebx]
  4045fb:	aas    
  4045fc:	cmp    DWORD PTR [ebx+0x3171957],ecx
  404602:	in     al,0x9b
  404604:	movmskps eax,xmm5
  404607:	adc    bh,BYTE PTR [edx+0x25edf58f]
  40460d:	sar    DWORD PTR ds:0x31734df2,1
  404613:	test   DWORD PTR [ebp+0x1c62fd8a],eax
  404619:	sub    esp,DWORD PTR [edi+0x2b0c2c72]
  40461f:	leave  
  404620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404621:	mov    eax,DWORD PTR [eax+0x1d258e2b]
  404627:	sbb    eax,0x3d4be897
  40462c:	cmc    
  40462d:	stos   BYTE PTR es:[edi],al
  40462e:	push   cs
  40462f:	dec    edx
  404630:	mov    ds:0x2264a13d,al
  404635:	lahf   
  404636:	cs pushf 
  404638:	jnp    0x40468c
  40463a:	inc    edi
  40463b:	xlat   BYTE PTR ds:[ebx]
  40463c:	sbb    BYTE PTR [ecx-0x27c103a],bh
  404642:	mov    dh,0xc4
  404644:	jg     0x4045f5
  404646:	data16 loopne 0x4045d3
  404649:	mov    ds:0x7c0f7923,eax
  40464e:	lods   al,BYTE PTR ds:[esi]
  40464f:	mov    al,0x36
  404651:	pop    esp
  404652:	loop   0x4046d0
  404654:	fisub  WORD PTR [eax+0x55]
  404657:	sub    BYTE PTR [ecx-0x69],al
  40465a:	out    0x74,eax
  40465c:	push   esi
  40465d:	(bad)  
  40465e:	mov    bh,0x1a
  404660:	xor    DWORD PTR [ecx],ebp
  404662:	(bad)  
  404664:	popf   
  404665:	call   0xdc88:0x1b1bf61a
  40466c:	in     eax,0x61
  40466e:	cwde   
  40466f:	cmp    eax,0x96513528
  404674:	sub    eax,0xae4d78da
  404679:	repz ret 0x706b
  40467d:	push   0xa663d8eb
  404682:	rcl    al,0xc1
  404685:	push   ecx
  404686:	ins    DWORD PTR es:[edi],dx
  404687:	push   0x25
  404689:	mov    DWORD PTR [edi],eax
  40468b:	xor    DWORD PTR [edx-0x46],ecx
  40468e:	mov    gs,esp
  404690:	dec    esp
  404691:	or     al,0x3b
  404693:	mov    cl,0x55
  404695:	xchg   esp,eax
  404696:	fdivr  DWORD PTR [edx-0x5b40287e]
  40469c:	and    BYTE PTR [esi+0x42],dl
  40469f:	sbb    bh,BYTE PTR [eax+0x140111b4]
  4046a5:	rcr    DWORD PTR [ecx+eiz*8],cl
  4046a8:	loope  0x404637
  4046aa:	xor    DWORD PTR [ebx+edi*2-0x6aa0cafe],0x5aa20c96
  4046b5:	stc    
  4046b6:	fld    TBYTE PTR [edi+0x6e]
  4046b9:	(bad)  
  4046ba:	jnp    0x40472a
  4046bc:	jnp    0x404691
  4046be:	rol    DWORD PTR [edi+edi*2+0x39],0xd6
  4046c3:	xchg   esp,eax
  4046c4:	(bad)  
  4046c5:	xchg   esi,eax
  4046c6:	adc    eax,0xa889ff13
  4046cb:	push   esp
  4046cc:	loop   0x404698
  4046ce:	(bad)  
  4046cf:	jl     0x40469c
  4046d1:	popf   
  4046d2:	cmc    
  4046d3:	cli    
  4046d4:	dec    ecx
  4046d5:	into   
  4046d6:	mov    ds:0x8096fceb,al
  4046db:	test   DWORD PTR [eax+ebp*1-0x5b],eax
  4046df:	jmp    0x11185a9f
  4046e4:	mov    ebx,0x8fa9e94f
  4046e9:	push   eax
  4046ea:	les    esi,FWORD PTR [ebx]
  4046ec:	inc    edx
  4046ed:	js     0x404754
  4046ef:	pop    ss
  4046f0:	mov    esp,0x12cab388
  4046f5:	retf   
  4046f6:	int    0xe6
  4046f8:	pop    esi
  4046f9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4046fb:	xor    DWORD PTR [edi],ebp
  4046fd:	pop    ecx
  4046fe:	ins    BYTE PTR es:[edi],dx
  4046ff:	pop    esp
  404700:	ret    
  404701:	cdq    
  404702:	fist   DWORD PTR [eax]
  404704:	jg     0x40468b
  404706:	add    eax,0x486703f4
  40470b:	or     BYTE PTR [edi+0x78c78413],bl
  404711:	sub    BYTE PTR [edi-0x285b07ae],cl
  404717:	or     DWORD PTR [ecx*1-0x14a5781b],ebx
  40471e:	jecxz  0x404720
  404720:	in     eax,dx
  404721:	jmp    0x404741
  404723:	test   al,0x20
  404725:	push   edi
  404726:	iret   
  404727:	sub    ebx,DWORD PTR [ecx]
  404729:	inc    esi
  40472a:	cmp    al,0xe6
  40472c:	sbb    eax,0x8a300014
  404731:	inc    esi
  404732:	and    eax,0x687ce5c7
  404737:	nop
  404738:	repnz pushf 
  40473a:	fdivr  DWORD PTR ds:0xa4b5acd9
  404740:	mov    al,ds:0xd0071e19
  404745:	inc    ecx
  404746:	pop    es
  404747:	pop    es
  404748:	mov    al,0x34
  40474a:	hlt    
  40474b:	fucom  st(6)
  40474d:	pop    eax
  40474e:	jmp    0x15493826
  404753:	popa   
  404754:	dec    ebp
  404755:	jne    0x4047c5
  404757:	ins    DWORD PTR es:[edi],dx
  404758:	test   DWORD PTR [ecx-0x358c9295],ebx
  40475e:	pop    edx
  40475f:	aaa    
  404760:	mov    bl,0xcb
  404762:	iret   
  404763:	mov    cl,0x84
  404765:	shl    BYTE PTR [ecx-0x28],1
  404768:	fwait
  404769:	test   eax,0xa4e200e6
  40476e:	in     al,0x1d
  404770:	cld    
  404771:	stc    
  404772:	or     al,0xa6
  404774:	pop    ss
  404775:	inc    ebp
  404776:	or     BYTE PTR [esi+0x2e],bh
  404779:	inc    esi
  40477a:	adc    eax,0x88b9364f
  40477f:	imul   ebx,DWORD PTR [esi],0x21
  404782:	jo     0x404771
  404784:	add    bh,BYTE PTR [esi]
  404786:	pop    edi
  404787:	popf   
  404788:	mov    eax,0x33140661
  40478d:	or     cl,BYTE PTR [bx+si+0x4ceb]
  404792:	sar    edx,cl
  404794:	jp     0x4047c9
  404796:	out    dx,eax
  404797:	ffreep st(0)
  404799:	add    DWORD PTR [ebp+eiz*4-0x11],0xda2f713
  4047a1:	adc    esi,DWORD PTR [ecx-0xf7ce57d]
  4047a7:	push   esi
  4047a8:	xchg   esi,eax
  4047a9:	jmp    0xbbadf627
  4047ae:	jnp    0x404760
  4047b0:	inc    esi
  4047b1:	bound  eax,QWORD PTR [edx-0x7bad4fe3]
  4047b7:	leave  
  4047b8:	sub    ecx,ebp
  4047ba:	push   esp
  4047bb:	(bad)  
  4047bc:	xchg   edi,eax
  4047bd:	setne  bl
  4047c0:	(bad)  
  4047c1:	mov    bh,0xc7
  4047c3:	ins    DWORD PTR es:[edi],dx
  4047c4:	test   al,0x10
  4047c6:	pop    edx
  4047c7:	pusha  
  4047c8:	xchg   ebp,eax
  4047c9:	add    eax,0xc2a500c
  4047ce:	mov    ebx,esp
  4047d0:	adc    BYTE PTR [edi-0x2a],ch
  4047d3:	imul   eax,DWORD PTR [edx+0x7e],0x17
  4047d7:	ins    BYTE PTR es:[edi],dx
  4047d8:	push   esi
  4047d9:	xchg   ebp,eax
  4047da:	jmp    0x8d14ccc
  4047df:	xchg   edx,eax
  4047e0:	ja     0x4047f0
  4047e2:	outs   dx,DWORD PTR ds:[esi]
  4047e3:	and    ecx,DWORD PTR [edx+0xba8d983]
  4047e9:	and    BYTE PTR [ecx],al
  4047eb:	(bad)  
  4047ec:	shr    DWORD PTR [edx+0x7b02f6ad],1
  4047f2:	add    dh,BYTE PTR [esi]
  4047f4:	cli    
  4047f5:	imul   eax,DWORD PTR [ebx],0x73
  4047f8:	jecxz  0x404787
  4047fa:	adc    ebx,DWORD PTR [esi-0x57]
  4047fd:	les    ebx,FWORD PTR [edx-0x73]
  404800:	out    dx,al
  404801:	popa   
  404802:	mov    ebx,DWORD PTR [edi+edi*8+0x32]
  404806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404807:	sbb    ax,0x105b
  40480b:	out    dx,eax
  40480c:	into   
  40480d:	pop    esi
  40480e:	cmp    al,0xcf
  404810:	test   al,0x1
  404812:	stos   DWORD PTR es:[edi],eax
  404813:	push   0x45
  404815:	or     BYTE PTR [eax],bh
  404817:	mov    ecx,0x2e5db6ab
  40481c:	test   eax,0x5393bbe5
  404821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404822:	test   DWORD PTR [ebp-0xe2a58e7],eax
  404828:	adc    ecx,DWORD PTR [ebp+0x122814e1]
  40482e:	loope  0x404805
  404830:	std    
  404831:	mov    edx,0x7bfd653c
  404836:	repnz xor eax,DWORD PTR [esi]
  404839:	scas   eax,DWORD PTR es:[edi]
  40483a:	cs clc 
  40483c:	mov    ds:0x910e1e3a,eax
  404841:	out    dx,eax
  404842:	repnz aaa 
  404844:	mov    eax,ds:0x42a80f2c
  404849:	mov    eax,0xd3d6a688
  40484e:	and    ebx,edi
  404850:	sahf   
  404851:	fadd   DWORD PTR [ebp+0x13]
  404854:	cmc    
  404855:	add    al,0x87
  404857:	pop    esi
  404858:	je     0x4047dd
  40485a:	and    BYTE PTR [edi],ah
  40485c:	stos   BYTE PTR es:[edi],al
  40485d:	sbb    cl,BYTE PTR [ebx-0x2]
  404860:	arpl   di,ax
  404862:	jmp    0x4048d4
  404864:	and    ch,ah
  404866:	ds push ds
  404868:	xchg   esi,eax
  404869:	mov    ah,0xe0
  40486b:	mov    ebp,0x73b9c87c
  404870:	xlat   BYTE PTR ds:[ebx]
  404871:	bound  ebp,QWORD PTR [ebp-0x2d414ced]
  404877:	jg     0x4048d3
  404879:	or     eax,DWORD PTR [esi+ecx*4]
  40487c:	xchg   esi,eax
  40487d:	push   ds
  40487e:	das    
  40487f:	xor    ecx,DWORD PTR [edx]
  404881:	mov    es,WORD PTR [edx+ecx*2-0x2]
  404885:	xor    eax,0xb3ec531d
  40488a:	dec    ecx
  40488b:	adc    al,0xd9
  40488d:	cmp    ebp,esp
  40488f:	cmp    eax,0x3ee98246
  404894:	push   esp
  404895:	adc    ebx,ecx
  404897:	pop    ss
  404898:	call   ecx
  40489a:	xlat   BYTE PTR ds:[ebx]
  40489b:	leave  
  40489c:	jmp    0x40486a
  40489e:	out    0xd4,al
  4048a0:	fucomip st,st(6)
  4048a2:	or     dh,dh
  4048a4:	adc    BYTE PTR [edx+0xd],dl
  4048a7:	(bad)  
  4048a9:	jbe    0x40489d
  4048ab:	push   eax
  4048ac:	push   ebp
  4048ad:	dec    edi
  4048ae:	sar    BYTE PTR [eax],0x25
  4048b1:	xchg   ebx,eax
  4048b2:	pop    esi
  4048b3:	pop    eax
  4048b4:	les    ebp,FWORD PTR [ebx]
  4048b6:	imul   ecx,DWORD PTR [edi-0x5d],0xd3432845
  4048bd:	icebp  
  4048be:	shl    DWORD PTR gs:[ebx-0x6f],0xc9
  4048c3:	push   ebx
  4048c4:	adc    eax,0xe9d575e4
  4048c9:	enter  0x1b5c,0xb9
  4048cd:	mov    cl,0xf3
  4048cf:	pop    eax
  4048d0:	or     DWORD PTR [ecx+ecx*2],ebx
  4048d3:	sbb    DWORD PTR ds:0x72ccb7e6,esp
  4048d9:	cmp    DWORD PTR [esi-0x3a7f7787],ebp
  4048df:	pop    ebx
  4048e0:	js     0x404898
  4048e2:	push   ecx
  4048e3:	pop    ebp
  4048e4:	leave  
  4048e5:	push   edi
  4048e6:	pusha  
  4048e7:	loopne 0x40493e
  4048e9:	push   es
  4048ea:	mov    ch,0xdf
  4048ec:	sub    bh,ch
  4048ee:	rcl    BYTE PTR [edi-0x5b],cl
  4048f1:	and    edx,eax
  4048f3:	inc    ebx
  4048f4:	test   al,0x34
  4048f6:	cld    
  4048f7:	jae    0x4048be
  4048f9:	lds    esp,FWORD PTR [ebp+0x2bdcfaae]
  4048ff:	jmp    0xf9f82dfb
  404904:	pop    eax
  404905:	or     esp,DWORD PTR [edi]
  404907:	call   0xfcff:0x67ead3be
  40490e:	jmp    0x804e497d
  404913:	ds inc edx
  404915:	shl    DWORD PTR [edi+0x49],cl
  404918:	mov    eax,0x5f314cff
  40491d:	cmp    esp,DWORD PTR [edx]
  40491f:	mov    esi,0x9c629c02
  404924:	je     0x4048ca
  404926:	add    eax,0x3402d2b0
  40492b:	ins    DWORD PTR es:[edi],dx
  40492c:	adc    edi,ebp
  40492e:	xchg   DWORD PTR [edx-0x7945afbe],ebx
  404934:	ss mov ebp,0x217f9f4e
  40493a:	pop    ecx
  40493b:	xor    BYTE PTR [ebp+0x6],al
  40493e:	lea    ebp,[ecx+0x13ebf6a4]
  404944:	std    
  404945:	fiadd  DWORD PTR [esi+ecx*1+0x32]
  404949:	add    eax,edi
  40494b:	stos   DWORD PTR es:[edi],eax
  40494c:	je     0x6c32b528
  404952:	js     0x404924
  404954:	jmp    0x277f:0x9374e2
  40495b:	lods   al,BYTE PTR ds:[esi]
  40495c:	cmp    DWORD PTR ss:[eax],esi
  40495f:	mov    dh,0x63
  404961:	and    BYTE PTR [ebp-0x6f],cl
  404964:	add    esp,ebp
  404966:	sbb    dh,dl
  404968:	das    
  404969:	sbb    al,0x48
  40496b:	push   esp
  40496c:	xlat   BYTE PTR ds:[ebx]
  40496d:	outs   dx,DWORD PTR ds:[esi]
  40496e:	mov    ebp,0x9506d390
  404973:	cmc    
  404974:	push   0xfaa96774
  404979:	xor    bh,0xe8
  40497c:	and    eax,0xf0d5fef2
  404981:	idiv   DWORD PTR [ebp+0x5e]
  404984:	scas   al,BYTE PTR es:[edi]
  404985:	dec    ebx
  404986:	mov    BYTE PTR [eax-0xd3f92f3],ch
  40498c:	push   eax
  40498d:	jp     0x4049ac
  40498f:	imul   edi,DWORD PTR [ecx+0x2b],0xd527c655
  404996:	inc    ebx
  404997:	jl     0x404a11
  404999:	(bad)
  40499e:	push   esi
  40499f:	(bad)  
  4049a0:	sti    
  4049a1:	jle    0x40495c
  4049a3:	das    
  4049a4:	lods   al,BYTE PTR ds:[esi]
  4049a5:	pushf  
  4049a6:	int    0xa4
  4049a8:	call   0x29e3c8a5
  4049ad:	mov    dh,0x9
  4049af:	fldenv [edx-0x681591c]
  4049b5:	sub    eax,0x968096ca
  4049ba:	lods   eax,DWORD PTR ds:[esi]
  4049bb:	sbb    al,0xc
  4049bd:	loope  0x40498e
  4049bf:	sbb    cl,bh
  4049c1:	div    bl
  4049c3:	jb     0x40496c
  4049c5:	xchg   ebx,eax
  4049c6:	dec    esi
  4049c7:	pop    ss
  4049c8:	pop    edx
  4049c9:	cmp    esp,DWORD PTR [esi+0x37]
  4049cc:	pusha  
  4049cd:	pop    es
  4049ce:	mov    edx,0xe18ccdab
  4049d3:	xchg   esi,eax
  4049d4:	adc    eax,0xa0fd1fd6
  4049d9:	sub    eax,0x80dda754
  4049de:	jno    0x404998
  4049e0:	xchg   edx,eax
  4049e1:	mov    esi,DWORD PTR [edi]
  4049e3:	pop    edi
  4049e4:	push   0x43a90819
  4049e9:	xor    al,0x18
  4049eb:	push   ebp
  4049ec:	mov    esi,0x240252d2
  4049f1:	xchg   edi,eax
  4049f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f3:	sub    cl,BYTE PTR [edx]
  4049f5:	lods   al,BYTE PTR ds:[esi]
  4049f6:	add    BYTE PTR [ebp-0x16],dh
  4049f9:	sub    eax,0x1c06e375
  4049fe:	mov    WORD PTR [edi+edx*1+0x31958b10],?
  404a05:	sub    eax,0xb4c108ad
  404a0a:	adc    ah,BYTE PTR [ebx+0x5b]
  404a0d:	push   0xffffffc3
  404a0f:	or     dh,dl
  404a11:	xchg   DWORD PTR [edx+ebp*1+0x72],ecx
  404a15:	pushf  
  404a16:	ins    DWORD PTR es:[edi],dx
  404a17:	cmp    DWORD PTR [ebx+0x3a69481a],esp
  404a1d:	repz adc bh,bl
  404a20:	(bad)  
  404a21:	mov    cl,0x8d
  404a23:	(bad)  
  404a25:	adc    DWORD PTR [ecx-0x7442ab2e],0x57
  404a2c:	push   edx
  404a2d:	popf   
  404a2e:	out    dx,al
  404a2f:	(bad)  
  404a30:	xchg   esi,eax
  404a31:	xchg   ecx,ecx
  404a33:	cmp    ch,BYTE PTR [ebx-0x2369edfc]
  404a39:	pop    eax
  404a3a:	dec    esp
  404a3b:	(bad)  
  404a3c:	stc    
  404a3d:	ret    
  404a3e:	rcl    BYTE PTR [esi-0x28b4a2e3],1
  404a44:	mov    esp,0x5e9a48a3
  404a49:	sub    dl,0x92
  404a4c:	xchg   esp,eax
  404a4d:	sbb    DWORD PTR [eax-0x4c],esi
  404a50:	outs   dx,DWORD PTR ds:[esi]
  404a51:	xchg   ebp,eax
  404a52:	xchg   BYTE PTR [esi-0x5d],dh
  404a55:	mov    bl,BYTE PTR [esi-0x56]
  404a58:	shl    edi,cl
  404a5a:	pushf  
  404a5b:	and    al,0xb8
  404a5d:	bnd jmp 0x404a01
  404a60:	std    
  404a61:	cmp    al,0xf2
  404a63:	enter  0xd85,0x59
  404a67:	out    dx,eax
  404a68:	inc    esp
  404a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a6a:	enter  0x83e7,0x3f
  404a6e:	aas    
  404a6f:	xor    ebp,DWORD PTR [edi-0x31545c38]
  404a75:	retf   0x5434
  404a78:	push   esp
  404a79:	pop    ebp
  404a7a:	mov    eax,0xcc8ed865
  404a7f:	dec    eax
  404a80:	mov    dh,0x3d
  404a82:	lea    edi,[ebp+0x6bbde2db]
  404a88:	mov    ds,WORD PTR [eax]
  404a8a:	push   edx
  404a8b:	sbb    bh,al
  404a8d:	retf   0x8bfd
  404a90:	test   DWORD PTR [ebp-0x26],ecx
  404a93:	sbb    dl,BYTE PTR [ebp-0x4e]
  404a96:	push   ss
  404a97:	(bad)  
  404a98:	jmp    0x71b47426
  404a9d:	test   BYTE PTR [ebx-0x4],0x77
  404aa1:	sbb    DWORD PTR [ebx-0x15cc9eb2],0x48a6f326
  404aab:	shr    BYTE PTR [esi+0x3739a565],cl
  404ab1:	ja     0x404a6b
  404ab3:	or     al,0x30
  404ab5:	pop    esp
  404ab6:	cmp    ch,BYTE PTR [edi-0x35b04997]
  404abc:	sbb    ebx,DWORD PTR [ebp-0x67]
  404abf:	push   edi
  404ac0:	sbb    BYTE PTR ds:[edi+0x1f],0x6d
  404ac5:	inc    ecx
  404ac6:	pop    eax
  404ac7:	mov    ch,0x32
  404ac9:	push   eax
  404aca:	clc    
  404acb:	push   0xdc4eb07e
  404ad0:	pop    bx
  404ad2:	or     BYTE PTR [eax+0x2e985e89],0xad
  404ad9:	fcom   DWORD PTR [ecx+0x42e24c1c]
  404adf:	ret    
  404ae0:	inc    ebx
  404ae1:	je     0x404ae7
  404ae3:	sub    eax,0x40d81078
  404ae8:	push   es
  404ae9:	xor    ecx,edi
  404aeb:	in     al,dx
  404aec:	sbb    edi,DWORD PTR [ebp+0x57]
  404aef:	loope  0x404ae1
  404af1:	sbb    DWORD PTR [eax-0x69bae395],ecx
  404af7:	jbe    0x404ae4
  404af9:	xchg   ecx,eax
  404afa:	mov    ?,WORD PTR [ebx]
  404afc:	dec    DWORD PTR [ebp-0x436631b1]
  404b02:	mov    ah,0xeb
  404b04:	pop    eax
  404b05:	popf   
  404b06:	adc    cl,ah
  404b08:	mov    al,0x36
  404b0a:	idiv   DWORD PTR [ebp-0x43b9e1eb]
  404b10:	sub    bl,BYTE PTR [edi-0x40172156]
  404b16:	lock fwait
  404b18:	xlat   BYTE PTR ds:[ebx]
  404b19:	jle    0x404ad5
  404b1b:	jl     0x404acf
  404b1d:	sbb    BYTE PTR [ebx],ah
  404b1f:	adc    DWORD PTR [edi+0x5c],ebx
  404b22:	int3   
  404b23:	inc    ebp
  404b24:	sub    DWORD PTR [esi+0x32],0xffffffd9
  404b28:	mov    cl,al
  404b2a:	mov    ecx,0xed7b4c83
  404b2f:	ror    DWORD PTR ds:0xa8652453,0x36
  404b36:	jmp    0x404ac8
  404b38:	retf   0x978d
  404b3b:	pop    ebx
  404b3c:	mov    ah,0x29
  404b3e:	call   0x59b41278
  404b43:	dec    esp
  404b44:	fmul   QWORD PTR [esi]
  404b46:	dec    esi
  404b47:	fs je  0x404b87
  404b4a:	push   ss
  404b4b:	mov    ds:0x2ed322c2,al
  404b50:	jbe    0x404b10
  404b52:	pop    edx
  404b53:	lea    ecx,[ecx+0x3d950265]
  404b59:	ins    DWORD PTR es:[edi],dx
  404b5a:	push   eax
  404b5b:	xchg   edx,eax
  404b5c:	sub    edi,ebx
  404b5e:	xor    edx,eax
  404b60:	pusha  
  404b61:	push   ecx
  404b62:	mov    bl,al
  404b64:	xor    edx,DWORD PTR [edi+esi*2+0x282a2929]
  404b6b:	fadd   QWORD PTR [edi+0x3c]
  404b6e:	mov    dh,0x1
  404b70:	lods   eax,DWORD PTR ds:[esi]
  404b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b73:	aas    
  404b74:	mov    edi,0xa26a82c2
  404b79:	push   0xffffffd8
  404b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b7c:	push   edx
  404b7d:	fabs   
  404b7f:	pop    ebp
  404b80:	mov    ds,WORD PTR cs:[ebx]
  404b83:	cdq    
  404b84:	enter  0xa50d,0xd6
  404b88:	popa   
  404b89:	pop    esi
  404b8a:	pushf  
  404b8b:	mov    bh,0xf9
  404b8d:	jnp    0x404b79
  404b8f:	outs   dx,BYTE PTR es:[esi]
  404b91:	push   0xdeb9d12f
  404b96:	lock arpl cx,sp
  404b99:	add    ch,BYTE PTR [ebx]
  404b9b:	fnstsw WORD PTR [edi]
  404b9d:	mov    ah,0x25
  404b9f:	cmp    BYTE PTR [ebp-0x2b872820],bl
  404ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba6:	or     bh,BYTE PTR [edi-0x4852a81a]
  404bac:	mov    edx,0x67f95218
  404bb1:	(bad)  
  404bb3:	sti    
  404bb4:	adc    eax,0xff1f104e
  404bb9:	bound  esi,QWORD PTR [eax]
  404bbb:	push   DWORD PTR [eax+0x1b7664bd]
  404bc1:	test   al,0x41
  404bc3:	pushf  
  404bc4:	jns    0x404bd4
  404bc6:	inc    BYTE PTR [ebx-0x1da8ac62]
  404bcc:	out    0x56,eax
  404bce:	xor    dh,BYTE PTR [esi]
  404bd0:	test   DWORD PTR ds:0x3f5cce4d,ecx
  404bd6:	lods   eax,DWORD PTR ds:[esi]
  404bd7:	jae    0x404c01
  404bd9:	nop
  404bda:	push   esi
  404bdb:	cmp    dh,dh
  404bdd:	or     al,0xf4
  404bdf:	xchg   ecx,eax
  404be0:	cmp    al,0x5c
  404be2:	ror    DWORD PTR [ebp+0x15],1
  404be5:	add    eax,0x4ad01b02
  404bea:	mov    edx,0x75d0135c
  404bef:	lods   al,BYTE PTR ds:[esi]
  404bf0:	fld    TBYTE PTR [edi]
  404bf2:	pop    esp
  404bf3:	cdq    
  404bf4:	mov    al,0x89
  404bf6:	push   eax
  404bf7:	xchg   ecx,eax
  404bf8:	jae    0x404be2
  404bfa:	dec    ecx
  404bfb:	mov    edi,0x8d8dd136
  404c00:	add    al,0x63
  404c02:	fucomip st,st(7)
  404c04:	ins    DWORD PTR es:[edi],dx
  404c05:	and    BYTE PTR [ebx+0x281fb44],bh
  404c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c0c:	pop    esp
  404c0d:	call   0xf770021
  404c12:	xor    BYTE PTR [ebx+0x1e],0xa2
  404c16:	fld    TBYTE PTR [ebx+0x85f0746]
  404c1c:	pop    ebx
  404c1d:	dec    ecx
  404c1e:	cwde   
  404c1f:	mov    dh,BYTE PTR [ecx+0x29]
  404c22:	call   FWORD PTR [ebx]
  404c24:	and    BYTE PTR [edx+0x3b6af510],0x33
  404c2b:	aas    
  404c2c:	pop    esp
  404c2d:	jg     0x404c17
  404c2f:	push   eax
  404c30:	gs clc 
  404c32:	xchg   DWORD PTR [eax+ebp*1],ebp
  404c35:	je     0x404c07
  404c37:	pop    ebp
  404c38:	aad    0x82
  404c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c3b:	scas   eax,DWORD PTR es:[edi]
  404c3c:	mov    ah,al
  404c3e:	xor    esi,DWORD PTR [ebx-0x3f6f5b0c]
  404c44:	cmp    al,0x94
  404c46:	pop    edi
  404c47:	ds lahf 
  404c49:	outs   dx,DWORD PTR ds:[esi]
  404c4a:	mov    ds:0xe6b4a403,eax
  404c4f:	sbb    al,0xd3
  404c51:	xor    al,0x93
  404c53:	inc    edx
  404c54:	xchg   edi,eax
  404c55:	fcomp  QWORD PTR [edx]
  404c57:	jecxz  0x404cca
  404c59:	arpl   WORD PTR [ebx+0x728153dd],si
  404c5f:	lock jle 0x404c9b
  404c62:	xor    esi,DWORD PTR [esp+ecx*4-0x1c]
  404c66:	mov    fs,WORD PTR [eax+0x3889de14]
  404c6c:	mov    ah,0x23
  404c6e:	sahf   
  404c6f:	loopne 0x404c45
  404c71:	and    al,0x7a
  404c74:	gs jbe 0x404ca7
  404c77:	cwde   
  404c78:	push   esp
  404c79:	mov    tr3,edi
  404c7c:	lods   eax,DWORD PTR ds:[esi]
  404c7d:	jb     0x404c89
  404c7f:	aas    
  404c80:	dec    ebx
  404c81:	stos   BYTE PTR es:[edi],al
  404c82:	gs sub eax,0x18ec639d
  404c88:	(bad)  
  404c89:	jmp    0x404c18
  404c8b:	(bad)  
  404c8c:	inc    bx
  404c8e:	mov    ds:0xc0be58a8,al
  404c93:	not    DWORD PTR [esi-0x3377d432]
  404c99:	push   0x25
  404c9b:	jecxz  0x404c55
  404c9d:	inc    eax
  404c9e:	cmp    al,BYTE PTR [eax]
  404ca0:	ror    BYTE PTR [ecx],1
  404ca2:	push   0xffffff92
  404ca4:	rcr    BYTE PTR [esi-0x7a],cl
  404ca7:	mov    cl,0x15
  404ca9:	out    dx,al
  404caa:	jmp    0x8de43d5c
  404caf:	(bad)  
  404cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb1:	and    DWORD PTR [ebp+0x348d71c0],esi
  404cb7:	icebp  
  404cb8:	test   al,0x87
  404cba:	popf   
  404cbb:	int3   
  404cbc:	jecxz  0x404cc9
  404cbe:	sbb    eax,0x4d3e2275
  404cc3:	pop    edx
  404cc4:	dec    edx
  404cc5:	icebp  
  404cc6:	jecxz  0x404cdd
  404cc8:	test   eax,0xcac524c6
  404ccd:	xor    DWORD PTR [edi-0x66],ebx
  404cd0:	sub    al,BYTE PTR [eax]
  404cd2:	xor    bh,BYTE PTR [ebp-0x71]
  404cd5:	pushf  
  404cd6:	int3   
  404cd7:	jge    0x404c90
  404cd9:	inc    ebx
  404cda:	dec    ebp
  404cdb:	and    eax,0x3f61c3ab
  404ce0:	jae    0x404cb0
  404ce2:	jno    0x404c90
  404ce4:	push   edx
  404ce5:	fadd   QWORD PTR [ebp+0x11]
  404ce8:	add    BYTE PTR [ebx-0x31],0x38
  404cec:	dec    esi
  404ced:	icebp  
  404cee:	adc    DWORD PTR [ecx],ebp
  404cf0:	xor    BYTE PTR [ebx-0x4],dh
  404cf3:	imul   ebx,DWORD PTR [ebp+0x1b462479],0xffffff89
  404cfa:	mov    esp,0xbc41d975
  404cff:	ror    ah,cl
  404d01:	xchg   esp,eax
  404d02:	push   eax
  404d03:	mul    esi
  404d05:	adc    ebx,DWORD PTR [ebx]
  404d07:	xchg   esi,eax
  404d08:	cmp    edx,DWORD PTR [ebx+0x65a230d0]
  404d0e:	stc    
  404d0f:	or     eax,0xa571986a
  404d14:	dec    ebp
  404d15:	jo     0x404cdc
  404d17:	or     BYTE PTR [esi+0x4d],dl
  404d1a:	aad    0x39
  404d1c:	lock aas 
  404d1e:	(bad)  
  404d1f:	les    ebx,FWORD PTR [eax-0x8a98a3]
  404d25:	mov    ss,WORD PTR [esi-0x6c]
  404d28:	pop    ebp
  404d29:	jp     0x404d53
  404d2b:	adc    esi,0xc45f3fb5
  404d31:	jp     0x404dab
  404d33:	dec    ecx
  404d34:	out    dx,eax
  404d35:	xchg   esi,eax
  404d36:	sbb    BYTE PTR ds:0x963db16a,ah
  404d3c:	mov    edi,0xcd20945b
  404d41:	adc    DWORD PTR ds:0xbc156887,eax
  404d47:	outs   dx,BYTE PTR ds:[esi]
  404d48:	ret    
  404d49:	add    BYTE PTR [ebx],0xe9
  404d4c:	test   eax,0x556ff6e5
  404d51:	push   ss
  404d52:	push   cs
  404d53:	jle    0x404d66
  404d55:	mov    ah,0xff
  404d58:	rol    DWORD PTR [esi+edi*8-0x692ecaa7],1
  404d5f:	fst    QWORD PTR [edi]
  404d62:	xor    BYTE PTR [ebx],bh
  404d64:	and    eax,0xe88d7fa7
  404d69:	xchg   BYTE PTR [esi-0x19],dl
  404d6c:	rcr    bh,cl
  404d6e:	and    bl,0x94
  404d71:	dec    esi
  404d72:	ret    0x621d
  404d75:	iret   
  404d76:	popf   
  404d77:	retf   
  404d78:	addr16 and eax,0x5d026487
  404d7e:	loopne 0x404d45
  404d80:	out    0xce,al
  404d82:	sbb    BYTE PTR [ebx+0x45499721],bh
  404d88:	mov    ds,WORD PTR ds:0x7b8e12c
  404d8e:	ffreep st(2)
  404d90:	mov    ah,0x8e
  404d92:	ins    BYTE PTR es:[edi],dx
  404d93:	and    ch,BYTE PTR [ebp+esi*1+0x44f6cf10]
  404d9a:	push   ecx
  404d9b:	das    
  404d9c:	stc    
  404d9d:	mov    edx,0xca2c93c
  404da2:	mov    BYTE PTR [edi-0x2ad4ed05],dh
  404da8:	dec    eax
  404da9:	adc    ecx,DWORD PTR [esi+eax*8+0x5f92704b]
  404db0:	int    0x61
  404db2:	lods   al,BYTE PTR ds:[esi]
  404db3:	push   ds
  404db4:	mov    edx,0x31c193c9
  404db9:	sub    eax,0x23a66ce7
  404dbe:	hlt    
  404dbf:	fsubr  st(4),st
  404dc1:	aam    0xda
  404dc3:	in     al,dx
  404dc4:	cdq    
  404dc5:	push   edx
  404dc6:	cmp    ebx,DWORD PTR [edi+0x56543e98]
  404dcc:	xchg   esi,eax
  404dcd:	les    edi,FWORD PTR [ecx]
  404dcf:	jmp    0x6bb1:0x22da7269
  404dd6:	dec    esi
  404dd7:	xor    edi,DWORD PTR [ecx]
  404dd9:	jo     0x404da0
  404ddb:	icebp  
  404ddc:	aad    0x38
  404dde:	pop    ss
  404ddf:	or     esp,DWORD PTR [edi-0x20]
  404de2:	mov    ch,0xec
  404de4:	jl     0x404db5
  404de6:	ins    DWORD PTR es:[edi],dx
  404de7:	(bad)  
  404de8:	jmp    0x404e4f
  404dea:	sbb    BYTE PTR [esi-0x40e796e7],0xf3
  404df1:	in     eax,dx
  404df2:	cdq    
  404df3:	cmp    BYTE PTR [esi+ecx*2-0xf],bl
  404df7:	dec    esi
  404df8:	ja     0x404ddf
  404dfa:	js     0x404dd1
  404dfc:	aaa    
  404dfd:	push   edi
  404dfe:	xchg   BYTE PTR [ebx+0x46],al
  404e01:	xor    eax,0x9a65e719
  404e06:	mov    DWORD PTR [edx],ebp
  404e08:	cld    
  404e09:	jns    0x404e8a
  404e0b:	cmp    BYTE PTR [eax],bl
  404e0d:	je     0x404df9
  404e0f:	pop    ss
  404e10:	pop    bp
  404e12:	jecxz  0x404e3a
  404e14:	jb     0x404e0a
  404e16:	jb     0x404dfd
  404e18:	outs   dx,BYTE PTR ds:[esi]
  404e19:	jnp    0x404dbd
  404e1b:	lods   eax,DWORD PTR ds:[esi]
  404e1c:	mov    ch,0x9f
  404e1e:	adc    dl,cl
  404e20:	dec    esp
  404e21:	dec    esp
  404e22:	jns    0x404e13
  404e24:	daa    
  404e25:	jae    0x404ddf
  404e27:	retf   
  404e28:	mov    DWORD PTR [edi],0xd305075a
  404e2e:	cmp    ecx,DWORD PTR [eax]
  404e30:	sbb    al,0xed
  404e32:	out    dx,al
  404e33:	test   BYTE PTR [edx-0x20e8d3e5],ch
  404e39:	out    0x7f,eax
  404e3b:	and    BYTE PTR [edi-0x7f],dh
  404e3e:	push   edi
  404e3f:	fild   DWORD PTR [esi-0xa]
  404e42:	outs   dx,DWORD PTR ds:[esi]
  404e43:	stos   BYTE PTR es:[edi],al
  404e44:	(bad)  
  404e45:	in     al,0x6a
  404e47:	mov    esp,0x8650ba84
  404e4c:	or     eax,0x3ef0533c
  404e51:	inc    ebp
  404e52:	mov    ebx,0x3dcafd05
  404e57:	fmul   DWORD PTR [ecx]
  404e59:	jnp    0x404e67
  404e5b:	dec    edi
  404e5c:	and    DWORD PTR [ecx],esi
  404e5e:	loope  0x404e4d
  404e60:	jo     0x404e5f
  404e62:	cmp    eax,0xc757365c
  404e67:	loope  0x404e50
  404e69:	arpl   WORD PTR [ebx-0x3a],bp
  404e6c:	sbb    eax,0x18b4d57d
  404e71:	lock cmp al,0xa7
  404e74:	retf   
  404e75:	rol    ebp,1
  404e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e78:	scas   al,BYTE PTR es:[edi]
  404e79:	add    ecx,ecx
  404e7b:	inc    eax
  404e7c:	bound  esp,QWORD PTR [ecx-0x1f]
  404e7f:	test   al,0xbe
  404e81:	in     al,dx
  404e82:	pop    ds
  404e83:	jne    0x404eaa
  404e85:	mov    dh,BYTE PTR [ebx+0x668ef539]
  404e8b:	mov    edx,0x59bdc0a2
  404e90:	pop    ds
  404e91:	out    0x7b,eax
  404e93:	pusha  
  404e94:	dec    ebx
  404e95:	mov    ch,0xd1
  404e97:	mov    eax,ds:0xc70a5de6
  404e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e9d:	loope  0x404ec5
  404e9f:	std    
  404ea0:	adc    dh,dl
  404ea2:	add    ebx,ebp
  404ea4:	xor    ebp,DWORD PTR [ecx]
  404ea6:	aaa    
  404ea7:	repz pop esp
  404ea9:	mov    ebx,0xfe11110d
  404eae:	jmp    0xcf0e:0xb0f23939
  404eb5:	jno    0x404e5b
  404eb7:	je     0x404e7b
  404eb9:	xor    DWORD PTR [ebx+0x6b],0x7b
  404ebd:	mov    cl,0x5
  404ebf:	repnz sbb ecx,ecx
  404ec2:	sar    BYTE PTR [esi],cl
  404ec4:	mov    ds:0x7221d69,eax
  404ec9:	fcmove st,st(3)
  404ecb:	stos   BYTE PTR es:[edi],al
  404ecc:	sbb    DWORD PTR [ebx+0x236ffa1a],0x39
  404ed3:	loop   0x404efa
  404ed5:	and    al,0xe7
  404ed7:	add    al,0xe5
  404ed9:	aam    0x87
  404edb:	cs dec ecx
  404edd:	mov    ds:0xcbb41138,eax
  404ee2:	loope  0x404f4b
  404ee4:	sub    esi,edx
  404ee6:	cld    
  404ee7:	lock data16 sub al,0x33
  404eeb:	push   esi
  404eec:	jle    0x404ef9
  404eee:	ret    0x756d
  404ef1:	stos   DWORD PTR es:[edi],eax
  404ef2:	push   ss
  404ef3:	test   cl,bh
  404ef5:	arpl   WORD PTR [esi],di
  404ef7:	and    ebp,DWORD PTR [eax+edi*4-0x2a]
  404efb:	push   esi
  404efc:	scas   al,BYTE PTR es:[edi]
  404efd:	lock push eax
  404eff:	dec    esi
  404f00:	fmul   QWORD PTR [edx+0x68c5f33b]
  404f06:	mov    bh,bl
  404f08:	dec    ecx
  404f09:	out    dx,eax
  404f0a:	sub    BYTE PTR [ebp+0x5e],bl
  404f0d:	shl    DWORD PTR ds:0x7695787f,cl
  404f13:	aam    0x47
  404f15:	dec    eax
  404f16:	cmp    al,0xf8
  404f18:	sub    al,0xf9
  404f1a:	out    dx,al
  404f1b:	lea    esi,[ebx-0x28]
  404f1e:	je     0x404ecc
  404f20:	xchg   esi,eax
  404f21:	push   cs
  404f22:	lds    ecx,FWORD PTR [edx-0x42]
  404f25:	pop    esi
  404f26:	xchg   edi,eax
  404f27:	ins    BYTE PTR es:[edi],dx
  404f28:	or     BYTE PTR [eax],cl
  404f2a:	inc    ebx
  404f2b:	and    al,ch
  404f2d:	or     al,0x9c
  404f2f:	jae    0x404f7f
  404f31:	out    dx,al
  404f32:	and    al,0x9d
  404f34:	std    
  404f35:	(bad)  
  404f36:	scas   eax,DWORD PTR es:[edi]
  404f37:	shl    ebx,0xe3
  404f3a:	xchg   ebp,eax
  404f3b:	inc    ebx
  404f3c:	fs dec esp
  404f3e:	cs push ecx
  404f40:	jl     0x404f57
  404f42:	ror    BYTE PTR [ecx+0x65a24152],1
  404f48:	or     al,0xc9
  404f4a:	xor    eax,DWORD PTR [edi]
  404f4c:	push   es
  404f4d:	in     eax,dx
  404f4e:	cmp    al,0x4d
  404f50:	sub    DWORD PTR [edi+0x317ec0b3],eax
  404f56:	das    
  404f57:	jecxz  0x404f2a
  404f59:	pop    esi
  404f5a:	mov    BYTE PTR [edi-0x2b],bl
  404f5d:	ret    0xb4c5
  404f60:	or     al,0x58
  404f62:	mov    esp,0x79ae500
  404f67:	call   0xc891:0x54cadf56
  404f6e:	jl     0x404fdd
  404f70:	ss clc 
  404f72:	lea    ebp,[edi-0x22639e74]
  404f78:	cmp    BYTE PTR [esi-0x50d2197b],ah
  404f7e:	lods   eax,DWORD PTR ds:[esi]
  404f7f:	scas   eax,DWORD PTR es:[edi]
  404f80:	pusha  
  404f81:	push   ds
  404f82:	and    esi,esp
  404f84:	int3   
  404f85:	inc    edx
  404f86:	dec    ebx
  404f87:	clc    
  404f88:	mov    bl,0xe8
  404f8a:	lods   eax,DWORD PTR ds:[esi]
  404f8b:	or     bl,ah
  404f8d:	in     eax,dx
  404f8e:	stc    
  404f8f:	mov    ds:0xf89cc870,eax
  404f94:	or     esp,ebx
  404f96:	ss popf 
  404f98:	push   ss
  404f99:	mov    ds:0x2e62925b,al
  404f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f9f:	push   cs
  404fa0:	fnsave [edx]
  404fa2:	xor    DWORD PTR [esi+0x36],ebp
  404fa5:	fwait
  404fa6:	out    dx,eax
  404fa7:	sub    ecx,edx
  404fa9:	push   ebp
  404faa:	and    al,BYTE PTR [edx+0x3c]
  404fad:	repnz push ds
  404faf:	pop    ebx
  404fb0:	sbb    al,0x47
  404fb2:	fnstenv [esi+eiz*4+0x109aeba3]
  404fb9:	cdq    
  404fba:	adc    ebp,DWORD PTR [edi-0x55]
  404fbd:	sbb    BYTE PTR [ebp-0x3f],bh
  404fc0:	repnz es sbb eax,DWORD PTR cs:[ebp+0x43]
  404fc6:	sbb    ecx,ebp
  404fc8:	add    BYTE PTR ds:0x27e11c35,bh
  404fce:	test   BYTE PTR [edx+0x29],bh
  404fd1:	inc    esi
  404fd2:	and    al,0xd2
  404fd4:	add    DWORD PTR [esi],esp
  404fd6:	dec    edx
  404fd7:	push   ds
  404fd8:	cmpxchg BYTE PTR ds:0xfd6e996b,cl
  404fdf:	push   0xffffffaf
  404fe1:	stos   DWORD PTR es:[edi],eax
  404fe2:	mov    gs,WORD PTR [esp+edx*8-0x3410137b]
  404fe9:	cs xor eax,0x7077fe6f
  404fef:	(bad)  
  404ff0:	mov    ah,0xf2
  404ff2:	mov    ebp,DWORD PTR [ebp-0x57]
  404ff5:	enter  0x79c1,0x4e
  404ff9:	add    BYTE PTR gs:0xb2cbb0ea,dh
  405000:	xor    al,0x2
  405002:	dec    ebx
  405003:	add    eax,0xbce87eb1
  405008:	mov    cl,0xae
  40500a:	pop    ss
  40500b:	cmp    bl,bh
  40500d:	clc    
  40500e:	cdq    
  40500f:	mov    ecx,0x268112a2
  405014:	sbb    eax,0xb20053c
  405019:	xchg   ecx,eax
  40501a:	xor    dh,dl
  40501c:	ins    BYTE PTR es:[edi],dx
  40501d:	jne    0x405042
  40501f:	xor    esi,DWORD PTR [edi]
  405021:	adc    BYTE PTR [esi-0x797eee42],al
  405027:	inc    ebx
  405028:	pop    esp
  405029:	add    eax,0xb3825ab2
  40502e:	dec    esp
  40502f:	xor    eax,DWORD PTR [ebx+0x12]
  405032:	das    
  405033:	xchg   esi,eax
  405034:	mov    ds:0xfcbe8612,eax
  405039:	(bad)  
  40503a:	shl    DWORD PTR [eax-0x60],cl
  40503d:	inc    ch
  40503f:	sub    dh,BYTE PTR [ecx+0x7cdecf21]
  405045:	daa    
  405046:	rol    DWORD PTR [edx],0xd
  405049:	cmp    cl,BYTE PTR [ebx-0xe2e6405]
  40504f:	sbb    BYTE PTR [esi+eax*2],ah
  405052:	mov    ch,0x6a
  405054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405055:	mov    WORD PTR [ebx],es
  405057:	xor    al,0x7d
  405059:	jge    0x4050bd
  40505b:	mov    edx,0xf705b85e
  405060:	in     al,0x58
  405062:	enter  0xeba2,0xca
  405066:	ret    0xda46
  405069:	(bad)  
  40506a:	retf   
  40506b:	in     al,dx
  40506c:	mov    eax,ds:0x75ea8996
  405071:	lea    esi,ds:0x4caad1f4
  405077:	in     eax,0xd4
  405079:	gs out dx,al
  40507b:	jns    0x40505b
  40507d:	sbb    al,0x9a
  40507f:	test   DWORD PTR [ebx+eax*1+0x36],esi
  405083:	push   0x79b34574
  405088:	shl    BYTE PTR [ecx-0x54],1
  40508b:	dec    edi
  40508c:	mov    ds:0x3af2866d,eax
  405091:	sbb    esi,DWORD PTR [edi+eax*8+0x2]
  405095:	mov    ecx,0xc408b89e
  40509a:	sub    esi,DWORD PTR [ecx+0x14]
  40509d:	pop    edx
  40509e:	pusha  
  40509f:	pop    esp
  4050a0:	enter  0x6017,0x9e
  4050a4:	jo     0x4050a8
  4050a6:	mov    dh,0x10
  4050a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a9:	xchg   esp,eax
  4050aa:	jne    0x4050d8
  4050ac:	retf   
  4050ad:	xor    DWORD PTR [esi+0x72a19436],edx
  4050b3:	xchg   edx,eax
  4050b4:	fcom   QWORD PTR [edi+0x3ddcc9e7]
  4050ba:	sub    edx,DWORD PTR [ecx-0x11d2f6cd]
  4050c0:	adc    edx,DWORD PTR [esi-0x1c]
  4050c3:	or     BYTE PTR [ebx-0x8],ch
  4050c6:	dec    edi
  4050c7:	addr16 inc edi
  4050c9:	mov    ebp,0x6551a69
  4050ce:	shl    BYTE PTR [ebx-0x14a648c],0xbe
  4050d5:	in     eax,0x8b
  4050d7:	mov    eax,0x7d036093
  4050dc:	(bad)  
  4050dd:	outs   dx,BYTE PTR ds:[esi]
  4050de:	cwde   
  4050df:	cmp    al,bl
  4050e1:	push   ebp
  4050e2:	fucom  st(1)
  4050e4:	jno    0x405111
  4050e6:	pop    es
  4050e7:	push   0xffffffa8
  4050e9:	outs   dx,DWORD PTR ds:[esi]
  4050ea:	mov    cl,0xc6
  4050ec:	mov    WORD PTR [bx],?
  4050ef:	idiv   BYTE PTR [ecx+0xae86e09]
  4050f5:	enter  0xd5ce,0xb0
  4050f9:	dec    esp
  4050fa:	into   
  4050fb:	cmp    eax,0x80a6a602
  405100:	stos   BYTE PTR es:[edi],al
  405101:	push   0xffffffad
  405103:	das    
  405104:	addr16 inc edx
  405106:	shl    BYTE PTR [ebx-0x26],cl
  405109:	xchg   esp,eax
  40510a:	retf   
  40510b:	loope  0x4050ec
  40510d:	lahf   
  40510e:	data16 jp 0x405139
  405111:	scas   eax,DWORD PTR es:[edi]
  405112:	xchg   edx,eax
  405113:	cs pop es
  405115:	in     eax,dx
  405116:	mov    edx,0x94cac65a
  40511b:	loopne 0x405175
  40511d:	sub    eax,0x3d455bd6
  405122:	(bad)  
  405123:	mov    esi,0xf9aa585f
  405128:	jbe    0x405112
  40512a:	sub    BYTE PTR [ebp-0x5ed44977],al
  405130:	dec    edx
  405131:	adc    BYTE PTR [ecx+0x35a69ee2],cl
  405137:	lds    ebx,FWORD PTR [esi+0x5043aaa7]
  40513d:	pop    edx
  40513e:	or     BYTE PTR [eax-0x343a148c],0xd5
  405145:	dec    esi
  405146:	lods   eax,DWORD PTR ds:[esi]
  405147:	std    
  405148:	jo     0x4050e9
  40514a:	pushf  
  40514b:	dec    eax
  40514c:	sbb    al,0xd6
  40514e:	add    ebp,esi
  405150:	mov    DWORD PTR [ecx+0x2a],ebp
  405153:	push   ebx
  405154:	pop    ds
  405155:	xor    al,0xd7
  405157:	and    DWORD PTR [esi+ecx*4-0x3b],ecx
  40515b:	jmp    0xdf3bd1f4
  405160:	dec    ebx
  405161:	scas   eax,DWORD PTR es:[edi]
  405162:	xchg   DWORD PTR [ecx-0x45b22b4c],ebx
  405168:	xchg   ecx,eax
  405169:	out    dx,eax
  40516a:	mov    al,0x31
  40516c:	repz mov ds:0xb7702962,eax
  405172:	or     esi,edi
  405174:	jbe    0x405136
  405176:	cmp    al,0xe6
  405178:	xor    esp,DWORD PTR [edx]
  40517a:	jg     0x4051b9
  40517c:	jbe    0x405116
  40517e:	test   DWORD PTR [edx+0x21],eax
  405181:	or     al,0x66
  405183:	and    ebx,DWORD PTR [ebx]
  405185:	pop    ss
  405186:	push   es
  405187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405188:	add    DWORD PTR [edi-0x67ece919],0x50f44c62
  405192:	xor    eax,DWORD PTR [eax-0x12]
  405195:	xchg   ebp,eax
  405196:	bound  ebp,QWORD PTR [eax-0x368745f9]
  40519c:	or     eax,0x23999e6e
  4051a1:	pop    ecx
  4051a2:	ficomp DWORD PTR [ecx+0x14]
  4051a5:	xor    eax,ebx
  4051a7:	loopne 0x405210
  4051a9:	mov    al,ds:0xdc1b13be
  4051ae:	xchg   BYTE PTR [edi+0x2a],ah
  4051b1:	sbb    DWORD PTR [ecx-0x39f4142d],edi
  4051b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051b8:	sbb    esi,DWORD PTR [edi]
  4051ba:	adc    al,bh
  4051bc:	sbb    al,0xf4
  4051be:	dec    ebx
  4051bf:	sub    ebp,DWORD PTR [ebp-0x1bd07a96]
  4051c5:	test   eax,0xe93780be
  4051ca:	out    dx,al
  4051cb:	out    dx,al
  4051cc:	gs (bad) 
  4051ce:	jmp    0x40521f
  4051d0:	pop    ebp
  4051d1:	push   ds
  4051d2:	cmovno ecx,DWORD PTR [eax+edx*4-0x8f10ece]
  4051da:	in     eax,0xc9
  4051dc:	add    edx,DWORD PTR [eax+0x58]
  4051df:	sbb    edi,edi
  4051e1:	ficomp WORD PTR [edx+0x1a]
  4051e4:	shl    DWORD PTR [edx+0x7e959556],0xb3
  4051eb:	out    dx,al
  4051ec:	popf   
  4051ed:	dec    esp
  4051ee:	dec    esp
  4051ef:	push   ecx
  4051f0:	stc    
  4051f1:	rcr    DWORD PTR [ecx+0x1b87263c],0x3c
  4051f8:	sti    
  4051f9:	jg     0x4051c7
  4051fb:	xor    DWORD PTR [esi+ecx*1-0x13],edx
  4051ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405200:	mov    ah,0x35
  405202:	out    dx,al
  405203:	in     al,0x1e
  405205:	sbb    BYTE PTR [esi+0x2],0x56
  405209:	xor    esi,DWORD PTR [edx-0x44]
  40520c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40520d:	ror    ebx,cl
  40520f:	dec    ecx
  405210:	jp     0x405234
  405212:	or     DWORD PTR [esp+esi*2],edi
  405215:	loopne 0x40525f
  405217:	pusha  
  405218:	rcl    DWORD PTR [esi+0x227924bc],0xb6
  40521f:	mul    DWORD PTR [ebp+0xefe0507]
  405225:	push   eax
  405226:	mov    eax,ds:0xb07adcf0
  40522b:	xchg   ebx,eax
  40522c:	cmc    
  40522d:	pop    eax
  40522e:	mov    dh,0xd7
  405230:	and    eax,DWORD PTR [edx+eax*4+0x31]
  405234:	sar    al,0x89
  405237:	xor    BYTE PTR [edx],0xb1
  40523a:	ret    0x66bc
  40523d:	and    eax,0xc571347d
  405242:	jg     0x40528c
  405244:	pop    ebx
  405245:	test   ebx,edi
  405247:	push   fs
  405249:	mov    bh,0x1d
  40524b:	sbb    cl,BYTE PTR [ebp+0x28]
  40524e:	fisubr DWORD PTR [edi-0x3ce28e88]
  405254:	(bad)  
  405256:	mov    cl,0x5e
  405258:	mov    eax,ds:0x78fd7577
  40525d:	dec    ebx
  40525e:	ret    0x2999
  405261:	add    dh,BYTE PTR [ecx-0x2107b4c1]
  405267:	sbb    al,0xd8
  405269:	ins    DWORD PTR es:[edi],dx
  40526a:	aaa    
  40526b:	and    eax,0x67af3d4c
  405270:	in     eax,dx
  405271:	sbb    al,0x80
  405273:	jmp    0x405230
  405275:	fcomp  QWORD PTR [edx+0x28]
  405278:	in     al,dx
  405279:	xchg   ebx,eax
  40527a:	dec    esi
  40527b:	ja     0x405284
  40527d:	and    al,0x59
  40527f:	imul   eax,DWORD PTR [edi+ebx*4-0x6e],0xffffff80
  405284:	and    eax,0xc2d091d6
  405289:	clc    
  40528a:	rep outs dx,BYTE PTR cs:[esi]
  40528d:	xor    DWORD PTR [ebx-0x59],esp
  405290:	jnp    0x40524e
  405292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405293:	push   edi
  405294:	fmul   QWORD PTR [eax+ebx*2]
  405297:	jb     0x405284
  405299:	xor    edx,esp
  40529b:	int3   
  40529c:	out    0x92,eax
  40529e:	xor    eax,0x31d89273
  4052a3:	xchg   edx,eax
  4052a4:	mov    ebx,0x9cc1b221
  4052a9:	test   dh,ch
  4052ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ac:	xor    ebx,DWORD PTR [ebx]
  4052ae:	jne    0x4052d1
  4052b0:	push   ebp
  4052b1:	loopne 0x40526e
  4052b3:	push   edi
  4052b4:	(bad)  
  4052b5:	jecxz  0x405276
  4052b7:	push   eax
  4052b8:	sbb    edi,ecx
  4052ba:	out    dx,al
  4052bb:	(bad)  
  4052bc:	lds    ecx,FWORD PTR [edi+0x2f4d9a6b]
  4052c2:	and    DWORD PTR [edx],ecx
  4052c4:	or     BYTE PTR [ecx+0x72],bh
  4052c7:	cmp    DWORD PTR ds:0x40a8ae93,edx
  4052cd:	sbb    BYTE PTR [ecx-0x33],al
  4052d0:	outs   dx,BYTE PTR ds:[esi]
  4052d1:	scas   al,BYTE PTR es:[edi]
  4052d2:	loopne 0x405281
  4052d4:	mov    eax,ss:0x2088e28c
  4052da:	mov    BYTE PTR [ebx-0x75c33adc],al
  4052e0:	sub    al,BYTE PTR [esi-0x2]
  4052e3:	jmp    DWORD PTR [edx]
  4052e5:	mov    ah,0xfc
  4052e7:	or     esi,DWORD PTR [edx]
  4052e9:	xor    al,0xb8
  4052eb:	in     eax,0xd0
  4052ed:	mov    eax,0xf9dd450a
  4052f2:	ja     0x405317
  4052f4:	mul    DWORD PTR [esi-0x35]
  4052f7:	adc    eax,0xce29b95e
  4052fc:	inc    esp
  4052fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052fe:	inc    ecx
  4052ff:	pop    eax
  405300:	gs clc 
  405302:	dec    BYTE PTR [ebx+edi*2]
  405305:	pop    ss
  405306:	call   0x3b1:0x5eb64ec5
  40530d:	(bad)  
  40530e:	jp     0x405300
  405310:	pop    ecx
  405311:	or     dl,ch
  405313:	inc    ecx
  405314:	les    esp,FWORD PTR [edx-0x7920725a]
  40531a:	pop    esi
  40531b:	(bad)  
  40531c:	mov    ebx,0x4440db6d
  405321:	mov    bh,0x14
  405323:	jnp    0x4052fb
  405325:	add    edi,DWORD PTR [esi+0x3e]
  405328:	jg     0x405335
  40532a:	leave  
  40532b:	xor    esp,ebp
  40532d:	popf   
  40532e:	or     al,0x8b
  405330:	ss addr16 jle 0x4053a5
  405334:	ds (bad) 
  405336:	mov    al,ds:0x60367b12
  40533b:	sub    DWORD PTR ds:0xc7fa97f1,esp
  405341:	inc    esp
  405342:	stos   DWORD PTR es:[edi],eax
  405343:	stos   DWORD PTR es:[edi],eax
  405344:	sbb    bl,bl
  405346:	popf   
  405347:	jbe    0x405346
  405349:	jno    0x405326
  40534b:	xor    BYTE PTR [eax],bh
  40534d:	stos   BYTE PTR es:[edi],al
  40534e:	jns    0x4052ef
  405350:	lahf   
  405351:	adc    BYTE PTR [ebp+0x13],cl
  405354:	adc    BYTE PTR [ebx],bl
  405356:	call   0x8b1c:0xad44eae8
  40535d:	iret   
  40535e:	jl     0x405369
  405360:	in     eax,0x89
  405362:	mov    esi,edx
  405364:	or     bl,0x6c
  405367:	push   edx
  405368:	in     al,dx
  405369:	cmp    cl,BYTE PTR [edx+eax*8]
  40536c:	outs   dx,BYTE PTR ds:[esi]
  40536d:	mov    dh,0xa3
  40536f:	mov    eax,0xe7481b0e
  405374:	mov    al,ds:0x7cdca3cf
  405379:	add    ah,0x15
  40537c:	aad    0x2f
  40537e:	inc    edx
  40537f:	or     eax,0xc33a58d8
  405384:	push   eax
  405385:	xchg   esi,eax
  405386:	jae    0x40539b
  405388:	popf   
  405389:	sub    eax,0x66982efd
  40538e:	(bad)  
  40538f:	mov    ah,BYTE PTR [esi-0x4778e74a]
  405395:	inc    ebp
  405396:	sub    al,0x93
  405398:	dec    ebx
  405399:	xor    BYTE PTR fs:[esi+0x4f],0x22
  40539e:	add    ah,bl
  4053a0:	push   edx
  4053a1:	xor    eax,0xe2311ac5
  4053a6:	inc    ecx
  4053a7:	and    DWORD PTR [eax],ebx
  4053a9:	pusha  
  4053aa:	outs   dx,DWORD PTR ds:[esi]
  4053ab:	and    DWORD PTR [esi-0x5c],edi
  4053ae:	mov    bl,0xbc
  4053b0:	push   ss
  4053b1:	xor    BYTE PTR [edi+0x182d6c90],bh
  4053b7:	and    dl,0x26
  4053ba:	retf   0xa407
  4053bd:	test   DWORD PTR [eax+0x48262900],eax
  4053c3:	adc    eax,0xc48cd94a
  4053c8:	ret    0xc3b9
  4053cb:	add    BYTE PTR [esi-0x7d9b18c1],bl
  4053d1:	inc    ebx
  4053d2:	mov    ch,0x7b
  4053d4:	nop
  4053d5:	xchg   edx,eax
  4053d6:	push   eax
  4053d7:	inc    esp
  4053d8:	test   BYTE PTR [edi+0xb],dh
  4053db:	sub    BYTE PTR [edi+0x34c2acab],dh
  4053e1:	push   ds
  4053e2:	pop    esi
  4053e3:	cmp    DWORD PTR [ecx-0x4b],ebp
  4053e6:	xor    eax,0x7d5bc405
  4053eb:	xchg   ecx,eax
  4053ec:	sub    al,0x27
  4053ee:	mov    ah,0xe5
  4053f0:	add    al,0x46
  4053f2:	adc    BYTE PTR [ebx+0x3f83f138],dl
  4053f8:	nop
  4053f9:	lock push ecx
  4053fb:	ret    0x2341
  4053fe:	pusha  
  4053ff:	fld    QWORD PTR [ebp+0xa]
  405402:	adc    ecx,eax
  405404:	js     0x4053db
  405406:	inc    ebx
  405407:	aas    
  405408:	and    ah,BYTE PTR [edx-0x1b]
  40540b:	repz loope 0x405426
  40540e:	sbb    al,0x83
  405410:	lods   eax,DWORD PTR ds:[esi]
  405411:	pusha  
  405412:	(bad)  
  405413:	cmp    cl,BYTE PTR [edi+0x43]
  405416:	xor    eax,0xffffff99
  405419:	sbb    ch,BYTE PTR [ebp-0x5]
  40541c:	xchg   edx,eax
  40541d:	shl    bh,0x8f
  405420:	rcl    BYTE PTR [esi-0x24e66743],0xc0
  405427:	rcl    DWORD PTR [ebp-0x4cd43358],cl
  40542d:	loop   0x405474
  40542f:	push   ebp
  405430:	push   ebx
  405431:	pop    eax
  405432:	adc    BYTE PTR [ebp-0xa7ea35a],bh
  405438:	cmp    DWORD PTR [ebx],ebx
  40543a:	mov    ebp,?
  40543c:	adc    BYTE PTR ds:0x7cbb5a71,bh
  405442:	call   0xbc28c0b0
  405447:	and    eax,DWORD PTR [eax+0x71]
  40544a:	mov    ds:0x1f59c9ee,al
  40544f:	pop    esp
  405450:	(bad)  
  405451:	in     eax,0x4e
  405453:	or     al,0x5
  405455:	pop    ss
  405456:	pop    ebx
  405457:	fnstsw WORD PTR [ecx+0x2b81a890]
  40545d:	lock adc BYTE PTR [ebp+0x360ad82],0xd2
  405465:	cwde   
  405466:	mov    dh,0xa0
  405468:	mov    WORD PTR [eax+0x44],?
  40546b:	cmp    ecx,ebp
  40546d:	mov    ebp,0x6fc6a275
  405472:	cmp    ebx,DWORD PTR [esp+ecx*4-0xbcd8a68]
  405479:	outs   dx,DWORD PTR ds:[esi]
  40547a:	dec    esi
  40547b:	add    al,BYTE PTR [ebx-0x2521b78c]
  405481:	aas    
  405482:	(bad)  
  405483:	xchg   ecx,eax
  405484:	jo     0x40542f
  405486:	xchg   esi,eax
  405487:	push   ebx
  405488:	mov    edx,0x991345e1
  40548d:	aad    0x68
  40548f:	sahf   
  405490:	add    eax,0x3d6b4347
  405495:	xchg   BYTE PTR [edx-0x26a9d976],bl
  40549b:	aas    
  40549c:	push   ss
  40549d:	pop    esp
  40549e:	dec    esi
  40549f:	push   es
  4054a0:	dec    esp
  4054a1:	daa    
  4054a2:	call   0x59b2:0x441135fb
  4054a9:	imul   ecx
  4054ab:	clc    
  4054ac:	dec    ecx
  4054ad:	mov    al,ds:0x7ba0cf1d
  4054b2:	push   ebp
  4054b3:	iret   
  4054b4:	xchg   edx,eax
  4054b5:	les    eax,FWORD PTR [ecx+0x6b2f563d]
  4054bb:	test   al,0xfc
  4054bd:	xchg   ebx,eax
  4054be:	cli    
  4054bf:	xchg   BYTE PTR [edx],cl
  4054c1:	push   eax
  4054c2:	pop    edx
  4054c3:	int3   
  4054c4:	icebp  
  4054c5:	int3   
  4054c6:	retf   0xa37
  4054c9:	sahf   
  4054ca:	and    eax,0xb48220d0
  4054cf:	aad    0xee
  4054d1:	cmp    DWORD PTR [ebx+0x29],eax
  4054d4:	push   edx
  4054d5:	cmp    edi,DWORD PTR [edx]
  4054d7:	adc    eax,DWORD PTR [ebp-0x761c78bd]
  4054dd:	pop    esp
  4054de:	shl    DWORD PTR [ebx+0x76cb09a1],1
  4054e4:	jno    0x405471
  4054e6:	inc    esp
  4054e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e8:	icebp  
  4054e9:	jge    0x4054f5
  4054eb:	jns    0x405507
  4054ed:	imul   eax,DWORD PTR [eax],0xceeab6b2
  4054f3:	pop    eax
  4054f4:	aad    0xca
  4054f6:	icebp  
  4054f7:	(bad)  
  4054f8:	arpl   WORD PTR [eax+0x29976d62],bp
  4054fe:	mov    DWORD PTR [esi+0x10],esp
  405501:	and    al,0xd3
  405503:	test   dh,dl
  405505:	mov    ah,0x2e
  405507:	xchg   BYTE PTR [edi],dh
  405509:	cmp    BYTE PTR [esi+0x18],dh
  40550c:	push   ebp
  40550d:	(bad)  
  40550e:	in     al,dx
  40550f:	fistp  DWORD PTR [ebp-0x507e16c6]
  405515:	sbb    al,0x3c
  405517:	(bad)  
  405518:	mov    esp,0xb0f5b76e
  40551d:	jnp    0x4054dc
  40551f:	push   esp
  405520:	dec    ecx
  405521:	pop    ebp
  405522:	pop    ds
  405523:	sub    BYTE PTR [esi-0x4fc1ee5a],0xc8
  40552a:	into   
  40552b:	nop
  40552c:	jmp    0xdda5cf84
  405531:	jmp    0x6eae:0xba62a22f
  405538:	push   es
  405539:	fadd   st(6),st
  40553b:	push   0x13a214a7
  405540:	inc    eax
  405541:	je     0x405567
  405543:	stos   DWORD PTR es:[edi],eax
  405544:	dec    ebp
  405545:	imul   BYTE PTR [esp+eax*2]
  405548:	(bad)  
  405549:	aaa    
  40554a:	mov    edx,0x7689b439
  40554f:	mov    eax,ds:0xeecc7942
  405554:	mov    ah,dl
  405556:	pop    ebx
  405557:	push   ebx
  405558:	les    edi,FWORD PTR [ebx]
  40555a:	imul   ecx,DWORD PTR [ecx-0x2077d5fb],0xffffffb5
  405561:	cmp    al,0x5c
  405563:	sub    DWORD PTR [ebp+0x24],ecx
  405566:	mov    dl,0x86
  405568:	push   0xbf725620
  40556d:	std    
  40556e:	imul   esp,DWORD PTR [ebx+0x53],0x9c46236
  405575:	or     bh,BYTE PTR [ecx+0x5d]
  405578:	ret    0x3915
  40557b:	mov    eax,ds:0x410f2838
  405580:	dec    ecx
  405581:	jbe    0x405590
  405583:	(bad)  
  405584:	xchg   esp,eax
  405585:	cmc    
  405586:	add    eax,0x195ebe3
  40558b:	retf   0x32ca
  40558e:	in     eax,dx
  40558f:	rcl    BYTE PTR [eax+ebx*4-0x11f6a621],0x8c
  405597:	(bad)  
  405599:	mov    DWORD PTR [eax+0x9],ecx
  40559c:	mov    al,ds:0xd6e78418
  4055a1:	jl     0x405590
  4055a3:	mov    ds:0xf6983775,al
  4055a8:	je     0x40561b
  4055aa:	xchg   ecx,eax
  4055ab:	xor    cl,BYTE PTR [eax+ebp*2-0x518a60b4]
  4055b2:	or     DWORD PTR [edx],0xffffffcc
  4055b5:	stos   BYTE PTR es:[edi],al
  4055b6:	cmp    eax,0xbb739cd
  4055bb:	adc    BYTE PTR [edx-0x72],dh
  4055be:	dec    ebx
  4055bf:	mov    bl,0x79
  4055c1:	pusha  
  4055c2:	iret   
  4055c3:	jmp    0x40d7:0x3ec5ebb8
  4055ca:	mov    ah,BYTE PTR [edi-0x45]
  4055cd:	outs   dx,BYTE PTR ds:[esi]
  4055ce:	push   0xa871ffcd
  4055d3:	cmp    BYTE PTR [ebp+esi*1+0x3a9dcb2b],dl
  4055da:	call   0x2d33:0x529beba8
  4055e1:	push   0x61752a7c
  4055e6:	cdq    
  4055e7:	aam    0xa0
  4055e9:	inc    edi
  4055ea:	xlat   BYTE PTR ds:[ebx]
  4055eb:	out    dx,eax
  4055ec:	mov    WORD PTR [ebx],ds
  4055ee:	fadd   st,st(6)
  4055f0:	daa    
  4055f1:	add    edx,0xffffff8c
  4055f4:	rcr    ch,0x46
  4055f7:	lods   al,BYTE PTR ds:[esi]
  4055f8:	imul   ebx,DWORD PTR [ecx+0x7c40567b],0xffffffe2
  4055ff:	jg     0x4055c7
  405601:	rcr    DWORD PTR ds:0xf1bfbfdf,cl
  405607:	mov    al,0x84
  405609:	clc    
  40560a:	in     eax,0x80
  40560c:	shl    BYTE PTR [eax],0x62
  40560f:	(bad)  
  405610:	rol    BYTE PTR [ebx+edi*8+0x42],cl
  405614:	push   edi
  405615:	scas   al,BYTE PTR es:[edi]
  405616:	pusha  
  405617:	sub    DWORD PTR [esi],ebx
  405619:	mov    DWORD PTR [edi+0x2131fbaf],edx
  40561f:	sahf   
  405620:	daa    
  405621:	mov    eax,0x370fb852
  405626:	(bad)  
  405627:	pop    edi
  405628:	adc    esi,0x8bc205dc
  40562e:	sbb    ebx,DWORD PTR [esi+0x7c44cece]
  405634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405635:	mov    ch,BYTE PTR [ecx+0x779fe420]
  40563b:	mov    ch,0x34
  40563d:	and    BYTE PTR [ecx],0xf4
  405640:	test   DWORD PTR [ebp+0x52],0xd6512029
  405647:	pusha  
  405648:	pop    edi
  405649:	and    eax,0x3ffacb9e
  40564e:	out    0x3e,al
  405650:	jb     0x405671
  405652:	xor    eax,0x1cc9d304
  405657:	dec    ebp
  405658:	pop    es
  405659:	fld    TBYTE PTR [eax+0x4a]
  40565c:	cmp    bl,BYTE PTR [esi-0x12]
  40565f:	push   eax
  405660:	adc    al,ah
  405662:	mov    dl,0x5c
  405664:	jne    0x40564a
  405666:	mov    eax,0x148c8a9d
  40566b:	mov    bl,0x2c
  40566d:	das    
  40566e:	and    dh,BYTE PTR [edx-0x7d01a7bd]
  405674:	mov    ebx,DWORD PTR [edi]
  405676:	dec    eax
  405677:	add    bh,ah
  405679:	into   
  40567a:	test   bl,dh
  40567c:	(bad)
  40567f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405680:	pop    ss
  405681:	dec    eax
  405682:	mov    bl,0xcb
  405684:	clc    
  405685:	mov    eax,ds:0x37d40227
  40568a:	icebp  
  40568b:	aaa    
  40568c:	nop
  40568d:	jmp    0x4056bb
  40568f:	add    ebx,DWORD PTR [esi+0x51bb4279]
  405695:	sahf   
  405696:	push   0xf7d4a85e
  40569b:	and    eax,DWORD PTR [ebx-0x4b]
  40569e:	pop    esi
  40569f:	push   0x65
  4056a1:	outs   dx,DWORD PTR ds:[esi]
  4056a2:	jne    0x40568a
  4056a4:	(bad)  
  4056a5:	xchg   ebx,edi
  4056a7:	cmp    DWORD PTR [eax],ecx
  4056a9:	push   ebx
  4056aa:	xchg   edx,eax
  4056ab:	add    eax,0x7e309ccf
  4056b0:	or     al,0xae
  4056b2:	call   0x4c3fa4ec
  4056b7:	popf   
  4056b8:	jmp    0x8dda:0x7d80b667
  4056bf:	xor    BYTE PTR [edi+edi*4-0x74177735],cl
  4056c6:	or     BYTE PTR [esi+0x1d],bh
  4056c9:	adc    ecx,DWORD PTR [ecx-0x29]
  4056cc:	mov    al,bl
  4056ce:	(bad)  
  4056cf:	cs sar al,cl
  4056d2:	add    bl,BYTE PTR ds:0x3b24fea1
  4056d8:	add    al,BYTE PTR [ebp+0x3c2b8f6f]
  4056de:	xchg   ebx,eax
  4056df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056e0:	mov    dl,0x5a
  4056e2:	imul   ebx,DWORD PTR [ecx],0x64
  4056e5:	push   edi
  4056e6:	mov    ds:0x7df127eb,al
  4056eb:	or     DWORD PTR [eax+ebp*1],ecx
  4056ee:	push   edx
  4056ef:	ss pop es
  4056f1:	lods   eax,DWORD PTR ds:[esi]
  4056f2:	in     al,0xa3
  4056f4:	lds    ebp,FWORD PTR [ecx+0x72]
  4056f7:	mov    edi,ebp
  4056f9:	mov    esp,DWORD PTR [ebp+0x2d]
  4056fc:	push   edx
  4056fd:	ja     0x405737
  4056ff:	pusha  
  405700:	xchg   ebp,eax
  405701:	jmp    0x40568d
  405703:	push   ds
  405704:	cdq    
  405705:	jae    0x4056f0
  405707:	inc    esi
  405708:	push   esp
  405709:	(bad)  
  40570a:	add    eax,esp
  40570c:	enter  0xbc54,0x86
  405710:	stc    
  405711:	mov    ds:0x8f85c769,al
  405716:	xchg   BYTE PTR [ebp+0x2d],al
  405719:	xor    eax,DWORD PTR [esi-0x38a0185a]
  40571f:	outs   dx,BYTE PTR ds:[esi]
  405720:	imul   esp,DWORD PTR [esi-0x3f],0x27
  405724:	iret   
  405725:	push   ss
  405726:	data16 fidivr DWORD PTR [edx]
  405729:	adc    ch,BYTE PTR [edx]
  40572b:	test   al,0x8e
  40572d:	into   
  40572e:	sbb    DWORD PTR [edi+0x64],edx
  405731:	dec    ecx
  405732:	rcl    BYTE PTR fs:0xbb8d7806,1
  405739:	sub    BYTE PTR ds:0xdbad8c6a,bl
  40573f:	sub    cl,BYTE PTR [esi-0x52]
  405742:	add    cl,dl
  405744:	stos   BYTE PTR es:[edi],al
  405745:	mov    ebp,0x4927d322
  40574a:	mov    bh,0x6
  40574c:	xor    BYTE PTR [edi-0x25ceb3fc],bh
  405752:	sbb    eax,0x2a3b79d3
  405757:	into   
  405758:	pop    esi
  405759:	pop    ss
  40575a:	(bad)  
  40575b:	loope  0x4057ab
  40575d:	call   0x68d3:0xd4a0954b
  405764:	out    0x7d,al
  405766:	and    bl,bh
  405768:	adc    eax,0x72a2d1d
  40576d:	aaa    
  40576e:	dec    ebp
  40576f:	dec    edx
  405770:	push   di
  405772:	push   ebp
  405773:	call   0x708f:0xcb01c444
  40577a:	mov    ebp,0xa7973232
  40577f:	ror    DWORD PTR [eax+0x61],0xce
  405783:	inc    ebx
  405784:	xchg   esi,eax
  405785:	jb     0x40576e
  405787:	data16 jne 0x4057d9
  40578a:	test   WORD PTR [edx-0x7f],ax
  40578e:	leave  
  40578f:	dec    ebp
  405790:	in     al,0x4f
  405792:	cs and eax,0x8c0045a7
  405798:	mov    al,0x87
  40579a:	add    al,0x28
  40579c:	cmc    
  40579d:	pop    ebx
  40579e:	mov    ah,0x56
  4057a0:	jb     0x405740
  4057a2:	xchg   ebx,eax
  4057a3:	shr    edi,cl
  4057a5:	das    
  4057a6:	xchg   edi,eax
  4057a7:	cmp    al,0x40
  4057aa:	dec    edi
  4057ab:	and    BYTE PTR [esi+ecx*8+0x4e],bl
  4057af:	test   ebx,edx
  4057b1:	iret   
  4057b2:	inc    ecx
  4057b3:	out    0x5a,eax
  4057b5:	mov    bh,0x97
  4057b7:	xor    cl,BYTE PTR [eax-0x21d208a1]
  4057bd:	loopne 0x40577f
  4057bf:	jo     0x40582f
  4057c1:	mov    BYTE PTR [ecx+0x56],al
  4057c4:	dec    edx
  4057c5:	jnp    0x40581d
  4057c7:	and    DWORD PTR [esi+0x265782e8],eax
  4057cd:	in     al,dx
  4057ce:	pop    es
  4057cf:	or     eax,0x1c6eff83
  4057d4:	mov    bh,0x33
  4057d6:	and    bl,ch
  4057d8:	or     esp,ebx
  4057da:	push   ds
  4057db:	jle    0x405844
  4057dd:	popa   
  4057de:	add    eax,0x1143793a
  4057e3:	lea    eax,[esi]
  4057e5:	cmp    eax,0x9f10c602
  4057ea:	push   edi
  4057eb:	adc    eax,esp
  4057ed:	in     al,dx
  4057ee:	iret   
  4057ef:	ja     0x40585a
  4057f1:	mov    BYTE PTR [esi+0x15],bh
  4057f4:	mov    ch,0x21
  4057f6:	xchg   ebx,eax
  4057f7:	xchg   DWORD PTR [edi+0x70ae5719],ecx
  4057fd:	das    
  4057fe:	int3   
  4057ff:	mov    ah,0x6b
  405801:	inc    ecx
  405802:	daa    
  405803:	adc    eax,0x9e872f45
  405808:	shl    DWORD PTR [eax-0x27],0x5a
  40580c:	aas    
  40580d:	and    al,0x5a
  40580f:	xchg   ecx,eax
  405810:	pop    ds
  405811:	lods   eax,DWORD PTR ds:[esi]
  405812:	jecxz  0x405890
  405814:	into   
  405815:	xor    eax,0x907bab6d
  40581a:	jbe    0x4057bc
  40581c:	cmp    edx,DWORD PTR [ecx+0x6d929769]
  405822:	and    eax,0xa66f1960
  405827:	fcom   QWORD PTR [ebp+0x51]
  40582a:	jp     0x4057e1
  40582c:	cmc    
  40582d:	pop    esi
  40582e:	fdivr  DWORD PTR [esp+ebp*8+0x74]
  405832:	ret    0x263c
  405835:	js     0x4057d3
  405837:	jmp    0x3626f36
  40583c:	call   0x9d82:0x20528d72
  405843:	mov    edx,0xcdfe8f4b
  405848:	pop    edx
  405849:	push   edi
  40584a:	jl     0x4057f7
  40584c:	mov    esp,0xaf532ed9
  405851:	dec    edi
  405852:	inc    eax
  405853:	xchg   ecx,eax
  405854:	push   ecx
  405855:	dec    eax
  405856:	xor    esi,DWORD PTR [ecx]
  405858:	popf   
  405859:	cli    
  40585a:	cmp    DWORD PTR [ecx-0x365230f0],edi
  405860:	retf   0x9ab9
  405863:	jb     0x405859
  405865:	or     eax,0x25cc894d
  40586a:	retf   0xe31e
  40586d:	xor    al,0x39
  40586f:	add    BYTE PTR [ebp-0x6c6e5bd9],dh
  405875:	icebp  
  405876:	enter  0xe089,0x25
  40587a:	push   ss
  40587b:	sbb    bl,al
  40587d:	fsubrp st(3),st
  40587f:	rcr    al,0xa9
  405882:	add    DWORD PTR [esp+eax*8-0x2],ebp
  405886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405887:	rcl    BYTE PTR [edx],1
  405889:	gs dec edi
  40588b:	mov    DWORD PTR [esi],esp
  40588d:	shl    BYTE PTR [ebx-0x1d],1
  405890:	push   0xc0823010
  405895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405896:	aas    
  405897:	dec    edx
  405898:	jge    0x4058c3
  40589a:	loop   0x4058b1
  40589c:	xchg   DWORD PTR [esi+edi*8],ebp
  40589f:	mov    WORD PTR [ebp+0x2f7b7d59],ss
  4058a5:	inc    edi
  4058a6:	dec    esp
  4058a7:	mov    al,0x18
  4058a9:	inc    edi
  4058aa:	loope  0x40582c
  4058ac:	or     DWORD PTR [edx],edx
  4058ae:	add    BYTE PTR [ebx+ebx*4+0x68],0xd
  4058b3:	sbb    al,0xb7
  4058b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b6:	push   ebp
  4058b7:	xlat   BYTE PTR ds:[ebx]
  4058b8:	xchg   esp,eax
  4058b9:	shl    cl,0xd1
  4058bc:	mov    ds:0x19f7a109,al
  4058c1:	ror    ebx,0xf2
  4058c4:	pop    eax
  4058c5:	or     dl,BYTE PTR [esi-0x6d612d2e]
  4058cb:	nop
  4058cc:	cs mov dl,0xdb
  4058cf:	out    dx,al
  4058d0:	int    0xea
  4058d2:	sbb    bh,BYTE PTR [ecx]
  4058d4:	sub    dl,BYTE PTR [ecx-0x7fb69800]
  4058da:	mov    WORD PTR [esi-0x29],es
  4058dd:	cmp    ah,BYTE PTR [ebp+0x3d]
  4058e0:	dec    esi
  4058e1:	mov    ds:0x12a7948,eax
  4058e6:	pop    esp
  4058e7:	inc    edi
  4058e8:	cmp    eax,0x3ee4e918
  4058ed:	outs   dx,DWORD PTR ds:[esi]
  4058ee:	cli    
  4058ef:	fbld   TBYTE PTR [esp+eiz*4-0x4d]
  4058f3:	imul   edi,DWORD PTR [edx+ebp*4],0xffffffdd
  4058f7:	and    DWORD PTR [esi],edx
  4058f9:	fwait
  4058fa:	cmp    al,0xf0
  4058fc:	dec    esp
  4058fd:	push   es
  4058fe:	pop    es
  4058ff:	push   ebx
  405900:	pop    ebx
  405901:	out    dx,al
  405902:	retf   0x7202
  405905:	ins    BYTE PTR es:[edi],dx
  405906:	inc    esp
  405907:	aad    0xf3
  405909:	xchg   esi,eax
  40590a:	add    ch,BYTE PTR ds:[esi+0x14]
  40590e:	outs   dx,BYTE PTR ds:[esi]
  40590f:	sahf   
  405910:	sub    BYTE PTR [esi+0x119c26c2],bl
  405916:	or     cl,BYTE PTR [edi+ecx*4+0x56]
  40591a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40591b:	add    eax,0x13886ad6
  405920:	push   esp
  405921:	je     0x4058f6
  405923:	mov    al,ds:0x5498e52d
  405928:	push   ebp
  405929:	outs   dx,DWORD PTR ds:[esi]
  40592a:	lods   al,BYTE PTR ds:[esi]
  40592b:	lea    esi,[ebp+0x1ec95d44]
  405931:	jge    0x405983
  405933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405934:	lahf   
  405935:	jno    0x40595e
  405937:	push   esi
  405938:	mul    BYTE PTR [edx+0x67]
  40593b:	mov    esi,0xb2928e0
  405940:	mov    ebp,0xa6d4276c
  405945:	adc    ebx,ebp
  405947:	fs aam 0x43
  40594a:	pop    es
  40594b:	das    
  40594c:	inc    edx
  40594d:	fcom   st(1)
  40594f:	bound  ebp,QWORD PTR [esp+edx*1-0x9]
  405953:	jmp    edi
  405955:	icebp  
  405956:	mov    esi,0x7642e4b0
  40595b:	loope  0x40595b
  40595d:	pop    es
  40595e:	sti    
  40595f:	mov    bl,0x73
  405961:	ins    BYTE PTR es:[edi],dx
  405962:	jmp    0x405991
  405964:	xor    eax,DWORD PTR [eax]
  405966:	lods   al,BYTE PTR ds:[esi]
  405967:	sahf   
  405968:	add    al,0x82
  40596a:	shr    BYTE PTR [edx],0xa
  40596d:	aaa    
  40596e:	je     0x405959
  405970:	loopne 0x405977
  405972:	bndldx bnd0,[eax-0x3f]
  405976:	mov    fs:0x319c4096,eax
  40597c:	dec    eax
  40597d:	scas   al,BYTE PTR es:[edi]
  40597e:	mov    ebx,0x2eeb46f3
  405983:	imul   ebp,esp,0x907e94da
  405989:	fidivr DWORD PTR [ebp+0x18]
  40598c:	mov    al,ds:0xa496ce5e
  405991:	mov    bl,0xef
  405993:	fild   QWORD PTR [ebx+0x56b3d534]
  405999:	sub    BYTE PTR [eax+0x42],al
  40599c:	ss dec ecx
  40599e:	test   al,0x7c
  4059a0:	mov    bl,0x57
  4059a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a3:	mov    edx,0x9ec9abd1
  4059a8:	inc    ecx
  4059a9:	std    
  4059aa:	nop
  4059ab:	jnp    0x405956
  4059ad:	push   edi
  4059ae:	imul   esp,DWORD PTR [edx-0x3011fa40],0x4841b74
  4059b8:	(bad)  
  4059b9:	adc    BYTE PTR [ebx-0x42],dh
  4059bc:	push   ss
  4059bd:	mov    eax,ds:0x422af275
  4059c2:	xor    DWORD PTR [ebp+0x398e80b7],0x2a
  4059c9:	(bad)  
  4059ca:	push   0x8f24868a
  4059cf:	test   bl,dl
  4059d1:	stos   BYTE PTR es:[edi],al
  4059d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059d3:	jne    0x405a3b
  4059d5:	shl    BYTE PTR [edi],1
  4059d7:	cs dec esi
  4059d9:	jb     0x405a0e
  4059db:	xchg   BYTE PTR cs:[esi+0x1aba2f0b],cl
  4059e2:	push   0x2a
  4059e4:	pop    esi
  4059e5:	sub    DWORD PTR [ecx+0x5116ccc9],0x7be31584
  4059ef:	mov    ds:0x2354b6f8,eax
  4059f4:	xchg   BYTE PTR [esp+ecx*2],bl
  4059f7:	xor    al,0x98
  4059f9:	jg     0x405a36
  4059fb:	lds    esi,FWORD PTR [esi-0x345ec333]
  405a01:	and    DWORD PTR [ebp-0x51c08a56],ebp
  405a07:	mov    ah,0x31
  405a09:	call   0xe00e:0x8defb074
  405a10:	(bad)  
  405a12:	hlt    
  405a13:	sub    al,0x78
  405a15:	outs   dx,BYTE PTR ds:[esi]
  405a16:	xor    al,0xd9
  405a18:	repnz xchg ebx,eax
  405a1a:	gs sbb al,0xb0
  405a1d:	das    
  405a1e:	push   eax
  405a1f:	pop    esp
  405a20:	ret    0x255d
  405a23:	loopne 0x405a0a
  405a25:	sub    eax,0x6db320aa
  405a2a:	dec    esi
  405a2b:	(bad)  
  405a2d:	jecxz  0x405a61
  405a2f:	jno    0x405a3f
  405a31:	into   
  405a32:	xchg   ecx,eax
  405a33:	lods   eax,DWORD PTR ds:[esi]
  405a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a35:	jae    0x4059e4
  405a37:	adc    eax,0x77ac4aa7
  405a3c:	outs   dx,BYTE PTR ds:[esi]
  405a3d:	inc    ebp
  405a3e:	xchg   DWORD PTR cs:[ecx],ebx
  405a41:	(bad)  
  405a42:	ss mov edi,0xb3450c1d
  405a48:	rsqrtps xmm5,XMMWORD PTR [ebx-0x2a]
  405a4c:	aas    
  405a4d:	add    eax,0xeb2ad161
  405a52:	ret    
  405a53:	inc    ebp
  405a54:	sub    edx,esp
  405a56:	jmp    0x405a3a
  405a58:	mov    edx,0x4dfafe0
  405a5d:	mov    edx,cs
  405a5f:	xor    DWORD PTR [ebx-0x78122a8f],ebp
  405a65:	cmp    al,dl
  405a67:	pop    es
  405a68:	cwde   
  405a69:	out    dx,al
  405a6a:	and    ah,ah
  405a6c:	add    al,0x87
  405a6e:	xchg   edx,eax
  405a6f:	sbb    bl,cl
  405a71:	push   esi
  405a72:	mov    eax,ds:0xdb6ae8f3
  405a77:	aam    0x1c
  405a79:	and    DWORD PTR [edx+ebp*1],esi
  405a7c:	loope  0x405aa0
  405a7e:	cmp    DWORD PTR ds:0x92b6fea3,0xffffff89
  405a85:	fs jp  0x405a14
  405a88:	pop    edi
  405a89:	retf   0x3faa
  405a8c:	pop    edi
  405a8d:	sar    BYTE PTR [eax-0x18e30f09],1
  405a93:	inc    ecx
  405a94:	mov    eax,DWORD PTR [edi-0x482d42ae]
  405a9a:	std    
  405a9b:	and    BYTE PTR [esp+esi*1+0x42],ch
  405a9f:	adc    dl,ch
  405aa1:	jecxz  0x405b07
  405aa3:	push   eax
  405aa4:	jns    0x405a2f
  405aa6:	pop    ss
  405aa7:	pop    esp
  405aa8:	sub    ecx,eax
  405aaa:	test   eax,0x9ec3225d
  405aaf:	mov    ah,0xa3
  405ab1:	popa   
  405ab2:	outs   dx,DWORD PTR ds:[esi]
  405ab3:	xor    eax,0x9efab70
  405ab8:	cmp    ah,bl
  405aba:	jb     0x405a53
  405abc:	fimul  WORD PTR [ecx+ebp*4+0x6083c8ef]
  405ac3:	stc    
  405ac4:	pop    esi
  405ac5:	shl    DWORD PTR [esp+ebx*1+0x24],cl
  405ac9:	push   ecx
  405aca:	jmp    0xd07c298a
  405acf:	jle    0x405b40
  405ad1:	jbe    0x405b2f
  405ad3:	imul   ecx,DWORD PTR [ecx+0x24],0x769b0864
  405ada:	add    DWORD PTR [esi+0xf4ff282],0x85d4c579
  405ae4:	fdivr  QWORD PTR [ecx+0x7274a8f7]
  405aea:	push   ecx
  405aeb:	loope  0x405b40
  405aed:	rcr    dh,cl
  405aef:	jp     0x405a8c
  405af1:	div    DWORD PTR [edi-0xd1b5735]
  405af7:	popa   
  405af8:	leave  
  405af9:	mov    al,0x9
  405afb:	mov    bh,0x7b
  405afd:	(bad)  
  405afe:	adc    ebp,DWORD PTR [esi-0x79]
  405b01:	jle    0x405b3a
  405b03:	scas   eax,DWORD PTR es:[edi]
  405b04:	es (bad) 
  405b06:	(bad)  
  405b07:	xor    al,0x4d
  405b09:	mov    gs,WORD PTR [ebp+0x67]
  405b0c:	jmp    FWORD PTR [ecx+0x3d803bba]
  405b12:	fimul  WORD PTR [esi-0x36]
  405b15:	popf   
  405b16:	(bad)  
  405b17:	in     eax,0xbf
  405b19:	pop    ecx
  405b1a:	and    eax,0xc2f7423d
  405b1f:	iret   
  405b20:	xor    DWORD PTR [ebp+0x2ffa0966],ebx
  405b26:	xchg   edx,eax
  405b27:	or     ebp,DWORD PTR [ebp+0x70]
  405b2a:	dec    ecx
  405b2b:	sub    eax,0xd37af444
  405b30:	xor    eax,0x36c8a832
  405b35:	mov    bh,0xf5
  405b37:	mov    esi,0xb596d7d0
  405b3c:	sbb    al,0x99
  405b3e:	cmp    ax,0xa41
  405b42:	mov    ds:0xa14733a1,eax
  405b47:	push   edx
  405b48:	out    dx,eax
  405b49:	sub    edi,DWORD PTR [esi-0x3f]
  405b4c:	pop    ss
  405b4d:	test   bh,cl
  405b4f:	or     al,0xe4
  405b51:	loopne 0x405b13
  405b53:	inc    ebx
  405b54:	test   BYTE PTR [edx+edx*1+0x14],0x6
  405b59:	mov    DWORD PTR [esi+0x4e9f6a4f],edx
  405b5f:	push   ecx
  405b60:	loope  0x405bd9
  405b62:	(bad)  
  405b63:	jne    0x405bc5
  405b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b66:	pusha  
  405b67:	test   DWORD PTR [ecx],eax
  405b69:	mov    ebp,0xfa86f03
  405b6e:	cmc    
  405b6f:	(bad)  
  405b70:	push   ecx
  405b71:	mov    WORD PTR [edx+ebp*8+0x8],?
  405b75:	xor    eax,DWORD PTR [ecx+0x1f]
  405b78:	mov    ecx,0xd25be6d0
  405b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b7e:	sub    ah,BYTE PTR [esi-0x31be936]
  405b84:	cmp    BYTE PTR [esi+0x5919d65a],bl
  405b8a:	sbb    dl,BYTE PTR [ebx-0x3f690744]
  405b90:	in     al,0x2b
  405b92:	xor    esp,DWORD PTR [edi-0x60e1eeb0]
  405b98:	cli    
  405b99:	(bad)  
  405b9a:	icebp  
  405b9b:	add    al,0x1a
  405b9d:	or     cl,BYTE PTR [eax]
  405b9f:	pushf  
  405ba0:	jnp    0x405b44
  405ba2:	inc    edx
  405ba3:	mov    esi,0x23c047e1
  405ba8:	jecxz  0x405bfb
  405baa:	shl    dl,cl
  405bac:	pop    edi
  405bad:	cwde   
  405bae:	js     0x405c2c
  405bb0:	sub    BYTE PTR [esi+eiz*2+0x3769ddc],al
  405bb7:	mov    al,BYTE PTR [eax+edx*8]
  405bba:	sar    BYTE PTR [esp+eax*1-0x6d5e20e2],0x81
  405bc2:	pop    esi
  405bc3:	sbb    edi,edx
  405bc5:	jmp    0x5e950340
  405bca:	mov    al,0x7b
  405bcc:	push   edx
  405bce:	(bad)  
  405bcf:	mov    dh,0x75
  405bd1:	dec    cx
  405bd3:	iret   
  405bd4:	nop
  405bd5:	pop    ebp
  405bd6:	out    dx,al
  405bd7:	pop    ss
  405bd8:	mov    ds:0xbadb80d0,eax
  405bdd:	pop    esi
  405bde:	jmp    0x6c13:0xc3da677a
  405be5:	ret    0x48f0
  405be8:	inc    edi
  405be9:	push   esi
  405bea:	mov    BYTE PTR [edi+0x14],bh
  405bed:	pop    edi
  405bee:	xchg   ecx,eax
  405bef:	je     0x405c2d
  405bf1:	shl    ebx,1
  405bf3:	addr16 sbb eax,0x75f7d07
  405bf9:	call   0x5ab6461
  405bfe:	call   0x6704:0x1f7265c7
  405c05:	das    
  405c06:	inc    esp
  405c07:	dec    esp
  405c08:	retf   0x81bc
  405c0b:	mov    WORD PTR [ebp+0x7d],?
  405c0e:	dec    eax
  405c0f:	xchg   dh,al
  405c11:	sahf   
  405c12:	mov    ds:0xbb000466,eax
  405c17:	lods   al,BYTE PTR ds:[esi]
  405c18:	getsec 
  405c1a:	mov    ecx,0xf49e0d67
  405c1f:	sub    bl,dl
  405c21:	jo     0x405c6c
  405c23:	jp     0x405c65
  405c25:	adc    DWORD PTR [ecx+eiz*2],ebp
  405c28:	dec    eax
  405c29:	adc    DWORD PTR [edx],ecx
  405c2b:	sub    BYTE PTR [ecx-0x7d1da970],cl
  405c31:	fst    DWORD PTR es:[ebx+0x69d24a0c]
  405c38:	(bad)  [esi+0x1d]
  405c3b:	mov    al,0x70
  405c3d:	push   ecx
  405c3e:	popa   
  405c3f:	adc    BYTE PTR [edi],cl
  405c41:	push   ds
  405c42:	shr    DWORD PTR [edi+ebx*1-0x1d],0x71
  405c47:	dec    edi
  405c48:	stos   BYTE PTR es:[edi],al
  405c49:	push   esp
  405c4a:	add    eax,0xa95b6192
  405c4f:	es test eax,0xe79db4ea
  405c55:	dec    ebx
  405c56:	stc    
  405c57:	or     al,0xe4
  405c59:	ins    BYTE PTR es:[edi],dx
  405c5a:	fnsave [esi]
  405c5c:	mov    al,0x3e
  405c5e:	adc    dl,dl
  405c60:	out    0x9f,al
  405c62:	(bad)  
  405c63:	jne    0x405bf3
  405c65:	jl     0x405cc1
  405c67:	inc    esi
  405c68:	adc    edi,ebp
  405c6a:	cld    
  405c6b:	fcomp  DWORD PTR [edi-0x6f34cf87]
  405c71:	mov    ch,0xcd
  405c73:	xor    al,0x69
  405c75:	dec    ebx
  405c76:	ja     0x405cc2
  405c78:	mov    bl,0xaa
  405c7a:	rcl    DWORD PTR [esi+0x6b87b6f6],0x64
  405c81:	push   0xf
  405c83:	dec    esp
  405c84:	jns    0x405c1f
  405c86:	rcl    BYTE PTR [edx+0x1],0x1e
  405c8a:	jae    0x405c96
  405c8c:	stos   BYTE PTR es:[edi],al
  405c8d:	test   eax,0x33d318d5
  405c92:	sub    BYTE PTR [ecx],ah
  405c94:	sub    al,0xe6
  405c96:	ja     0x405ce0
  405c98:	dec    ebx
  405c99:	cmp    al,0xf9
  405c9b:	sub    eax,0xc6dadec6
  405ca0:	inc    esi
  405ca1:	lods   al,BYTE PTR ds:[esi]
  405ca2:	push   0x828b0b1e
  405ca7:	and    al,0xad
  405ca9:	mov    cs,WORD PTR [edx-0x59]
  405cac:	and    al,0x88
  405cae:	mov    al,0xfe
  405cb0:	jmp    0x63bc:0x9e17bebe
  405cb7:	gs ret 0xd1b0
  405cbb:	cmp    al,0x91
  405cbd:	or     edx,ecx
  405cbf:	popa   
  405cc0:	jno    0x405c5f
  405cc2:	mov    ch,0x25
  405cc4:	jmp    0xaac0:0xeda155ec
  405ccb:	ficom  DWORD PTR [edx]
  405ccd:	popa   
  405cce:	pop    ebx
  405ccf:	lea    edx,[ebp-0x8]
  405cd2:	xor    cl,BYTE PTR [ebx]
  405cd4:	neg    BYTE PTR [esi-0x74]
  405cd7:	pop    edx
  405cd8:	inc    esp
  405cd9:	inc    ebx
  405cda:	stos   BYTE PTR es:[edi],al
  405cdb:	push   ebx
  405cdc:	jle    0x405cd1
  405cde:	dec    eax
  405cdf:	enter  0x790c,0x3a
  405ce3:	hlt    
  405ce4:	jb     0x405c9c
  405ce6:	push   ebp
  405ce7:	mov    bl,0x32
  405ce9:	dec    ecx
  405cea:	std    
  405ceb:	push   edx
  405cec:	or     eax,0x3305ed3f
  405cf1:	sub    DWORD PTR [ebx-0x1cf66bb2],edi
  405cf7:	mov    esi,0xc30968f9
  405cfc:	rcl    DWORD PTR [esi+0x42b97935],cl
  405d02:	int    0x6b
  405d04:	fmulp  st(3),st
  405d06:	das    
  405d07:	mov    al,ds:0xb20648f9
  405d0c:	out    0xc5,eax
  405d0e:	arpl   WORD PTR [ebx],dx
  405d10:	aas    
  405d11:	or     DWORD PTR [esi+0x155f514b],ebp
  405d17:	jl     0x405d44
  405d19:	bound  eax,QWORD PTR [esi+0x40]
  405d1c:	mov    bl,0x47
  405d1e:	mov    dh,0x5f
  405d20:	retf   
  405d21:	shl    DWORD PTR [eax],0xb6
  405d24:	sbb    esp,DWORD PTR [esp+ebp*4]
  405d27:	gs inc esp
  405d29:	clc    
  405d2a:	jg     0x405d79
  405d2c:	mov    esp,0x4d2016f4
  405d31:	dec    edi
  405d32:	cmp    esi,DWORD PTR [eax]
  405d34:	and    eax,ebx
  405d36:	(bad)  
  405d37:	test   eax,0xe38afef3
  405d3c:	retf   0x8ec1
  405d3f:	add    BYTE PTR [edx],0x26
  405d42:	popa   
  405d43:	or     BYTE PTR [ebx],cl
  405d45:	and    BYTE PTR [esi+0x3449feab],al
  405d4b:	push   ss
  405d4c:	das    
  405d4d:	jecxz  0x405d4d
  405d4f:	mov    ds:0xf793304e,eax
  405d54:	jl     0x405d37
  405d56:	inc    edx
  405d57:	loope  0x405d1f
  405d59:	stc    
  405d5a:	mov    eax,ds:0xaa22f9a3
  405d5f:	cmp    ebp,DWORD PTR [esi+edi*2+0x6ddf3162]
  405d66:	repz sub bp,si
  405d6a:	fwait
  405d6b:	adc    DWORD PTR [ecx+0x27],ebx
  405d6e:	sub    BYTE PTR ds:0x277e373a,ah
  405d74:	adc    BYTE PTR [ecx-0x6baeb616],dh
  405d7a:	xchg   DWORD PTR [ebp+0x2e],ebx
  405d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7e:	sti    
  405d7f:	cmp    dh,BYTE PTR [edx]
  405d81:	test   BYTE PTR [ecx+0x35],dh
  405d84:	les    ecx,FWORD PTR [edx+0x3d]
  405d87:	push   esp
  405d88:	popaw  
  405d8a:	div    DWORD PTR [ebx]
  405d8c:	(bad)  
  405d8d:	je     0x405d82
  405d8f:	test   DWORD PTR [esi+0x5a546cf8],ebx
  405d95:	(bad)  
  405d96:	aad    0x1c
  405d98:	push   ss
  405d99:	pop    ss
  405d9a:	jl     0x405d69
  405d9c:	add    bh,BYTE PTR [ecx+0x71da5579]
  405da2:	int3   
  405da3:	(bad)  
  405da4:	std    
  405da5:	xchg   ecx,eax
  405da6:	mov    ebx,DWORD PTR [edx+0x7d]
  405da9:	outs   dx,DWORD PTR ds:[esi]
  405daa:	jmp    0x405d52
  405dac:	push   edi
  405dad:	mov    ds:0x769c6cf3,al
  405db2:	dec    edi
  405db3:	aam    0x5
  405db5:	xchg   BYTE PTR [eax-0x26],cl
  405db8:	fwait
  405db9:	mov    ebp,0x3caa0df2
  405dbe:	add    ah,BYTE PTR [edx]
  405dc0:	int    0x96
  405dc2:	xchg   esi,eax
  405dc3:	xchg   ebx,eax
  405dc4:	push   es
  405dc5:	sbb    DWORD PTR [edx-0x4e],ebp
  405dc8:	clc    
  405dc9:	mov    eax,0x72836b5f
  405dce:	call   0x491474bf
  405dd3:	sub    DWORD PTR [eax+0x2a],edx
  405dd6:	mov    edx,0x33517db5
  405ddb:	stc    
  405ddc:	cdq    
  405ddd:	test   eax,0xcdf22488
  405de2:	or     bl,BYTE PTR [ebx]
  405de4:	ins    DWORD PTR es:[edi],dx
  405de5:	cli    
  405de6:	jno    0x405d80
  405de8:	or     ebp,DWORD PTR [ebp+0x17]
  405deb:	(bad)  
  405dec:	mov    ds:0x6858412c,eax
  405df1:	ret    0x1595
  405df4:	ds sbb cl,dh
  405df7:	lahf   
  405df8:	dec    edi
  405df9:	(bad)  
  405dfa:	aad    0xe8
  405dfc:	push   eax
  405dfd:	sbb    DWORD PTR [ecx-0x371ad2ad],edx
  405e03:	scas   al,BYTE PTR es:[edi]
  405e04:	mov    edi,DWORD PTR [ebx+0x6cdae1f3]
  405e0a:	aaa    
  405e0b:	dec    esi
  405e0c:	(bad)  
  405e0d:	int    0x94
  405e0f:	pop    ecx
  405e10:	ss adc eax,0x3b4ef12c
  405e16:	pop    eax
  405e17:	dec    ebx
  405e18:	inc    esi
  405e19:	out    0xa6,eax
  405e1b:	fsubr  QWORD PTR [edi-0x6f]
  405e1e:	mov    dh,0xf8
  405e20:	retf   
  405e21:	jmp    0x405e22
  405e23:	clc    
  405e24:	pop    edi
  405e25:	aas    
  405e26:	mov    ch,0x55
  405e28:	mov    bh,0xd0
  405e2a:	fcmovbe st,st(4)
  405e2c:	stos   BYTE PTR es:[edi],al
  405e2d:	sbb    eax,0xbbaacfa2
  405e32:	sar    esi,0x0
  405e35:	retf   
  405e36:	mov    ebx,0x442690d9
  405e3b:	call   0x7076:0xd379a12a
  405e42:	pop    ds
  405e43:	ret    
  405e44:	push   cs
  405e45:	shl    BYTE PTR [ebx+0x9d05438],cl
  405e4b:	dec    ebx
  405e4c:	ins    DWORD PTR es:[edi],dx
  405e4d:	adc    esi,ebx
  405e4f:	xor    DWORD PTR [ecx+0x8],0x7d
  405e53:	icebp  
  405e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e55:	pop    edi
  405e56:	test   DWORD PTR [edi],ebx
  405e58:	push   ss
  405e59:	dec    eax
  405e5a:	pmaxsw mm2,mm5
  405e5d:	fwait
  405e5e:	mov    edi,0xc9833eb5
  405e63:	adc    al,0x3b
  405e65:	jo     0x405eaa
  405e67:	push   esp
  405e68:	cld    
  405e69:	cmp    dl,BYTE PTR [ebp+0xf5d4ac0]
  405e6f:	pop    ds
  405e70:	pop    esp
  405e71:	pop    es
  405e72:	xor    BYTE PTR [edx+esi*8],0xbd
  405e76:	sar    DWORD PTR [ecx+0x2cad1ffb],cl
  405e7c:	std    
  405e7d:	jmp    0x405e03
  405e7f:	arpl   WORD PTR [ebx+ebx*4],bx
  405e82:	test   al,0x5e
  405e84:	inc    esi
  405e85:	xor    BYTE PTR [eax+eax*1-0x20f2b4f9],dl
  405e8c:	aas    
  405e8d:	scas   eax,DWORD PTR es:[edi]
  405e8e:	push   ecx
  405e8f:	dec    ebx
  405e90:	mov    ecx,DWORD PTR [ebp+0x64]
  405e93:	inc    esp
  405e95:	mov    ds:0x4bc24b18,eax
  405e9a:	ss add al,0x9d
  405e9d:	inc    edi
  405e9e:	or     al,0x4a
  405ea0:	mov    bl,0xc7
  405ea2:	or     eax,0xce3d2e4a
  405ea7:	scas   eax,DWORD PTR es:[edi]
  405ea8:	ret    
  405ea9:	cmp    al,0x46
  405eab:	cs aam 0x6
  405eae:	addr16 adc ch,dl
  405eb1:	in     al,dx
  405eb2:	xchg   edx,eax
  405eb3:	adc    esp,DWORD PTR [edi]
  405eb5:	push   0x46fb1d26
  405eba:	fimul  WORD PTR [ebx+eax*4]
  405ebd:	inc    eax
  405ebe:	popa   
  405ebf:	and    ch,al
  405ec1:	ficom  DWORD PTR [ebp-0x7d]
  405ec4:	xor    DWORD PTR [esi+edi*4+0x2f],0x72
  405ec9:	popf   
  405eca:	inc    edx
  405ecb:	shl    BYTE PTR [ebx],cl
  405ecd:	dec    edx
  405ece:	dec    esi
  405ecf:	add    al,0x59
  405ed1:	(bad)  
  405ed2:	xlat   BYTE PTR ds:[ebx]
  405ed3:	int    0x93
  405ed5:	ds push edi
  405ed7:	and    cl,BYTE PTR [edi]
  405ed9:	iret   
  405eda:	daa    
  405edb:	mov    esp,0x4f53f481
  405ee0:	jmp    0x60834328
  405ee5:	jb     0x405ea5
  405ee7:	push   ss
  405ee8:	pushf  
  405ee9:	mov    eax,ds:0x4b6064d9
  405eee:	(bad)
  405ef2:	and    DWORD PTR [ebp+0xf780255],ebx
  405ef8:	dec    esp
  405ef9:	mov    dh,0x19
  405efb:	call   DWORD PTR [ecx+0x3f50dca6]
  405f01:	sub    ecx,DWORD PTR [ebx]
  405f03:	and    DWORD PTR [eax+0x1a],ebp
  405f06:	and    BYTE PTR [edi],bl
  405f08:	sbb    eax,0xd116d36e
  405f0d:	inc    eax
  405f0e:	pop    ecx
  405f0f:	les    eax,FWORD PTR [esi]
  405f11:	xchg   edi,eax
  405f12:	les    ecx,FWORD PTR [esi-0x384afb93]
  405f18:	jnp    0x405f93
  405f1a:	mov    al,0x9e
  405f1c:	mov    dl,0xdc
  405f1e:	aad    0x85
  405f20:	retf   0xc92c
  405f23:	icebp  
  405f24:	mov    ds:0x8feca19e,al
  405f29:	dec    eax
  405f2a:	or     DWORD PTR [edx+0x1],edi
  405f2d:	popa   
  405f2e:	lea    edx,[eax-0x74e72522]
  405f34:	stc    
  405f35:	ds imul ebp,esi,0xdb3a3a77
  405f3c:	sti    
  405f3d:	push   es
  405f3e:	sbb    ah,dl
  405f40:	cmp    al,0xc0
  405f42:	pushf  
  405f43:	(bad)  
  405f44:	lock xrelease sub BYTE PTR cs:[eax+0x3ed5a6be],ah
  405f4d:	ins    DWORD PTR es:[edi],dx
  405f4e:	xor    DWORD PTR [edx-0x58e4acf1],esp
  405f54:	cld    
  405f55:	stc    
  405f56:	jg     0x405ee2
  405f58:	lods   al,BYTE PTR ds:[esi]
  405f59:	fwait
  405f5a:	(bad)  
  405f5b:	sbb    edi,DWORD PTR [eax-0x1e]
  405f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f5f:	sub    al,0xe3
  405f61:	mov    ah,0x77
  405f63:	fnstcw WORD PTR [edi]
  405f65:	push   esp
  405f66:	cli    
  405f67:	imul   eax,DWORD PTR ds:0xa2d655ce,0x2a
  405f6e:	dec    ecx
  405f6f:	cmp    cl,0x37
  405f72:	mov    edi,0xfd1ab034
  405f77:	push   esp
  405f78:	add    DWORD PTR [esi+esi*8],edi
  405f7b:	popf   
  405f7c:	std    
  405f7d:	sti    
  405f7e:	mov    dh,0x3d
  405f80:	out    0x1f,eax
  405f82:	xor    DWORD PTR [eax-0x62ea9e6c],esp
  405f88:	lahf   
  405f89:	icebp  
  405f8a:	xchg   edx,eax
  405f8b:	fdivr  QWORD PTR [ecx-0x17]
  405f8e:	enter  0x3985,0x73
  405f92:	pop    ecx
  405f93:	outs   dx,DWORD PTR ds:[esi]
  405f94:	(bad)  
  405f96:	jo     0x405f81
  405f98:	call   0x5f29:0xcfe4864f
  405f9f:	pop    eax
  405fa0:	pop    ss
  405fa1:	mov    al,0xa3
  405fa3:	cmp    al,0xac
  405fa5:	jp     0x405fd5
  405fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa8:	outs   dx,BYTE PTR ds:[esi]
  405fa9:	dec    DWORD PTR [edx+0x6c2795b4]
  405faf:	adc    al,0xc
  405fb1:	jmp    0x405f3c
  405fb3:	dec    ebx
  405fb4:	outs   dx,BYTE PTR ds:[esi]
  405fb5:	dec    ebx
  405fb6:	dec    esp
  405fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb8:	stos   DWORD PTR es:[edi],eax
  405fb9:	dec    edi
  405fba:	sti    
  405fbb:	mov    al,ds:0x679750d
  405fc0:	inc    esi
  405fc1:	jnp    0x405fa9
  405fc3:	dec    edi
  405fc4:	mov    WORD PTR [ebx-0x44],fs
  405fc7:	mov    cs,WORD PTR [esi+0x2c473bab]
  405fcd:	int3   
  405fce:	sbb    BYTE PTR [edi-0x5377b312],al
  405fd4:	push   esi
  405fd5:	and    BYTE PTR [ecx],ah
  405fd7:	xor    al,0x4f
  405fd9:	and    al,0xea
  405fdb:	push   ds
  405fdc:	in     al,dx
  405fdd:	cmc    
  405fde:	or     cl,BYTE PTR [ebx+0x798e4c3e]
  405fe4:	mov    edx,0x4a031c13
  405fe9:	adc    eax,0x182967a9
  405fee:	jnp    0x405ff9
  405ff0:	pop    edi
  405ff1:	xchg   ebp,eax
  405ff2:	repnz push 0xfffffff9
  405ff5:	imul   edx,DWORD PTR [ebx-0x35],0x92db65c9
  405ffc:	icebp  
  405ffd:	mov    ch,0xe2
  405fff:	popa   
  406000:	push   edi
  406001:	mov    ecx,0x65fd124f
  406006:	adc    DWORD PTR [esi+ecx*8-0x348b3745],eax
  40600d:	mov    bh,dl
  40600f:	jmp    0x406053
  406011:	(bad)  
  406012:	cmp    eax,0x3a4214fe
  406017:	add    edx,esp
  406019:	sub    eax,edi
  40601b:	xchg   edx,eax
  40601c:	add    esp,DWORD PTR [eax-0x150f6919]
  406022:	jge    0x406042
  406024:	cwde   
  406025:	cmp    eax,0xb82d35e0
  40602a:	fwait
  40602b:	mov    BYTE PTR [edx+eiz*1],bh
  40602e:	lods   eax,DWORD PTR ds:[esi]
  40602f:	sahf   
  406030:	dec    ecx
  406031:	mov    esp,0x4956b46c
  406036:	mov    cl,0x75
  406038:	mov    eax,0x3b0ef539
  40603d:	xlat   BYTE PTR ds:[ebx]
  40603e:	addr16 sbb al,0x3d
  406041:	inc    esi
  406042:	jmp    FWORD PTR [edx]
  406044:	test   BYTE PTR [edx+0x61],cl
  406047:	imul   edi,DWORD PTR [edi+eax*2+0x613d965],0xeb1d509c
  406052:	jbe    0x405fdf
  406054:	icebp  
  406055:	mov    bh,0x17
  406057:	int3   
  406058:	add    bh,BYTE PTR [edi-0x2b043b00]
  40605e:	mov    BYTE PTR [ecx+ebp*1+0x1cfd828],0xc0
  406066:	in     eax,0x5a
  406068:	(bad)  
  40606a:	imul   esp,DWORD PTR [eax],0xffffffca
  40606d:	mov    esi,ebp
  40606f:	pop    edx
  406070:	pop    ecx
  406071:	inc    edx
  406072:	es sub al,al
  406075:	repz test BYTE PTR ds:0xc3f17a55,0x67
  40607d:	je     0x40608f
  40607f:	mov    al,bl
  406081:	pop    ebp
  406082:	std    
  406083:	(bad)  
  406084:	or     al,0x7e
  406086:	rcl    DWORD PTR [eax+0x5a],1
  406089:	mov    ds:0xb0b44863,eax
  40608e:	lea    eax,[edi]
  406090:	adc    esi,DWORD PTR [ecx-0x696cc565]
  406096:	sub    al,0x72
  406098:	jmp    DWORD PTR [ecx+0x4223f314]
  40609e:	fistp  WORD PTR [eax]
  4060a0:	loop   0x4060f8
  4060a2:	test   eax,0x2f660a62
  4060a7:	mov    BYTE PTR [eax-0x4d35d434],dh
  4060ad:	imul   esi,DWORD PTR [ebp-0x577968e],0xe
  4060b4:	fs inc edi
  4060b6:	lahf   
  4060b7:	xchg   ebp,eax
  4060b8:	test   DWORD PTR [edi+eiz*1+0x48],edi
  4060bc:	(bad)  
  4060bd:	ds push 0x527f673f
  4060c3:	lahf   
  4060c4:	mov    edx,0xffbe03e0
  4060c9:	add    BYTE PTR [ebx-0x39cc0bab],cl
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	xor    al,0xe3
  40611e:	mov    bh,0xaf
  406120:	out    dx,eax
  406121:	sar    DWORD PTR [ebx+0x7b],0xb5
  406125:	sahf   
  406126:	jnp    0x4061a3
  406128:	pop    ds
  406129:	adc    ch,ch
  40612b:	enter  0x1e21,0x3e
  40612f:	loop   0x406118
  406131:	fwait
  406132:	inc    edi
  406133:	aad    0x96
  406135:	int    0x6a
  406137:	or     ch,dh
  406139:	arpl   bp,bp
  40613b:	das    
  40613c:	jb     0x4060c7
  40613e:	test   DWORD PTR [edx],edi
  406140:	sub    BYTE PTR [ebp-0x52f5608b],bh
  406146:	xchg   esi,eax
  406147:	int    0x8c
  406149:	stos   BYTE PTR es:[edi],al
  40614a:	dec    ebp
  40614b:	in     eax,dx
  40614c:	cdq    
  40614d:	add    BYTE PTR [esi+0x56],0xef
  406151:	fcomi  st,st(5)
  406153:	and    eax,0x2a84c318
  406158:	mov    dh,0xdb
  40615a:	add    DWORD PTR [ebx-0x6f],eax
  40615d:	mov    ch,0xf7
  40615f:	mov    eax,ds:0xac151f64
  406164:	add    al,0x48
  406166:	mov    esi,0x833d92a0
  40616b:	dec    ebp
  40616c:	imul   ebx,DWORD PTR [edx],0x35
  40616f:	in     al,dx
  406170:	and    bl,ch
  406172:	loope  0x40613c
  406174:	retf   
  406175:	std    
  406176:	in     al,0xb8
  406178:	jmp    0xc970d049
  40617d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40617e:	and    esp,edi
  406180:	mov    BYTE PTR [edx-0x1d41063f],0xdd
  406187:	push   ds
  406188:	lea    edi,[ebp+0x38]
  40618b:	push   es
  40618c:	xor    ecx,DWORD PTR [ecx]
  40618e:	ins    DWORD PTR es:[edi],dx
  40618f:	hlt    
  406190:	das    
  406191:	jnp    0x4061fe
  406193:	mov    cl,0xf
  406195:	out    0x3d,al
  406197:	cmp    BYTE PTR [eax-0x1504b84d],bh
  40619d:	jnp    0x4061fb
  40619f:	cld    
  4061a0:	jnp    0x4061cf
  4061a2:	ss popa 
  4061a4:	retf   
  4061a5:	shr    DWORD PTR [ecx],cl
  4061a7:	das    
  4061a8:	xchg   ebx,eax
  4061a9:	rol    BYTE PTR [ebp-0x5fb2b259],1
  4061af:	pop    ebp
  4061b0:	xchg   ecx,eax
  4061b1:	pusha  
  4061b2:	mov    cl,0xa3
  4061b4:	pop    ebx
  4061b5:	mov    DWORD PTR ds:0x76931869,edx
  4061bb:	loop   0x406192
  4061bd:	pop    edx
  4061be:	sbb    DWORD PTR [ebp+0x19b3efdf],ebp
  4061c4:	inc    esi
  4061c5:	push   eax
  4061c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c7:	mov    bh,0x55
  4061c9:	dec    ebx
  4061ca:	dec    esp
  4061cb:	dec    ebp
  4061cc:	fisubr WORD PTR [ecx+ecx*1-0x5867586c]
  4061d3:	bound  esp,QWORD PTR [eax+0x42e1a21f]
  4061d9:	in     eax,dx
  4061da:	xor    esi,DWORD PTR [esi+0x35]
  4061dd:	(bad)  
  4061df:	or     ch,BYTE PTR [edx]
  4061e1:	lahf   
  4061e2:	cld    
  4061e3:	fmulp  st(0),st
  4061e5:	ins    BYTE PTR es:[edi],dx
  4061e6:	es ja  0x40625a
  4061e9:	xchg   edx,eax
  4061ea:	or     eax,0x9e8d3e06
  4061ef:	add    edi,DWORD PTR [ecx-0x1ce48719]
  4061f5:	jmp    0xea6eaae7
  4061fa:	sbb    eax,0xb1897fb9
  4061ff:	sahf   
  406200:	xchg   esp,eax
  406201:	fnstenv [edi+0x77d2121]
  406207:	pop    ebx
  406208:	adc    ecx,DWORD PTR [ebx]
  40620a:	and    eax,DWORD PTR [edi-0x618e8686]
  406210:	test   BYTE PTR [edi+0x2a],ah
  406213:	int3   
  406214:	or     dl,BYTE PTR [ebx-0x2b53479f]
  40621a:	jo     0x406251
  40621c:	mov    ah,0x37
  40621e:	sahf   
  40621f:	pop    ss
  406220:	out    0x7e,eax
  406222:	pop    ecx
  406223:	jnp    0x406295
  406225:	rcr    BYTE PTR [ebp-0x4188c3e7],1
  40622b:	adc    DWORD PTR es:[ecx+0x59df6ff5],ecx
  406232:	fbld   TBYTE PTR [edx-0x68576d70]
  406238:	in     eax,dx
  406239:	xchg   ebp,eax
  40623a:	fld    QWORD PTR [edi-0x76]
  40623d:	fucomp st(3)
  40623f:	scas   eax,DWORD PTR es:[edi]
  406240:	jno    0x406203
  406242:	jle    0x40628b
  406244:	mov    ah,BYTE PTR [ecx+0x1c]
  406247:	and    edx,ebx
  406249:	pop    eax
  40624a:	jae    0x4062bf
  40624c:	jae    0x4062b0
  40624e:	je     0x40626b
  406250:	fld    TBYTE PTR [ebp+0x77]
  406253:	imul   ecx,DWORD PTR [ebx],0xc3ae7c28
  406259:	xchg   edi,eax
  40625a:	or     BYTE PTR [ebx-0x22],0x85
  40625e:	stos   BYTE PTR es:[edi],al
  40625f:	dec    ah
  406261:	popf   
  406262:	ret    0x8416
  406265:	dec    esp
  406266:	mov    ecx,0x8451b32b
  40626b:	clc    
  40626c:	ja     0x406277
  40626e:	sahf   
  40626f:	pushf  
  406270:	mov    al,0xd4
  406272:	xlat   BYTE PTR ds:[ebx]
  406273:	rcl    DWORD PTR [ebp-0x3f],0x51
  406277:	fmul   QWORD PTR [esi+0x22]
  40627a:	xchg   edx,eax
  40627b:	xchg   edx,eax
  40627c:	push   ebp
  40627d:	sar    DWORD PTR [ebx],0x1d
  406280:	sbb    esi,DWORD PTR [ecx+0x37]
  406283:	cmc    
  406284:	lahf   
  406285:	fcmovnb st,st(6)
  406287:	jne    0x406266
  406289:	xchg   ebp,eax
  40628a:	add    al,cl
  40628c:	add    DWORD PTR [edx],edx
  40628e:	les    ebx,FWORD PTR [edi]
  406290:	repnz cld 
  406292:	mov    cl,0x30
  406294:	jmp    0x4062ef
  406296:	inc    eax
  406297:	dec    eax
  406298:	fdiv   DWORD PTR [ebp+ecx*1-0x3f7cf1f1]
  40629f:	shr    DWORD PTR [esi+0x2b1f91c0],1
  4062a5:	mov    ds:0x9b2e7dec,al
  4062aa:	ja     0x4062a3
  4062ac:	dec    eax
  4062ad:	ret    0x7303
  4062b0:	ss pop ds
  4062b2:	sbb    eax,0x253d0292
  4062b7:	add    eax,0x30cad432
  4062bc:	stc    
  4062bd:	inc    eax
  4062be:	popf   
  4062bf:	pusha  
  4062c0:	pop    ss
  4062c1:	mov    ebp,0xe0fddff5
  4062c6:	mov    edx,0x37d45f17
  4062cb:	sub    al,dl
  4062cd:	jb     0x406290
  4062cf:	ins    BYTE PTR es:[edi],dx
  4062d0:	sbb    eax,0x17338506
  4062d5:	add    esp,DWORD PTR gs:[eax-0x25]
  4062d9:	xor    edx,esp
  4062db:	lods   al,BYTE PTR ds:[esi]
  4062dc:	adc    al,0xd7
  4062de:	and    al,0xf4
  4062e0:	(bad)  
  4062e1:	ds out 0xf8,eax
  4062e4:	iret   
  4062e5:	mov    al,ds:0x8a01c9ab
  4062ea:	add    al,0xad
  4062ec:	adc    edi,ebx
  4062ee:	call   0x73b9f12f
  4062f3:	fsubr  DWORD PTR [esi]
  4062f5:	mov    dh,ah
  4062f7:	arpl   WORD PTR [ebx+eax*8],bx
  4062fa:	ret    
  4062fb:	cmp    DWORD PTR [ecx+0x58da8d09],esp
  406301:	in     eax,dx
  406302:	jb     0x406379
  406304:	cmc    
  406305:	push   ebp
  406306:	push   edx
  406307:	xchg   edi,eax
  406308:	jnp    0x406298
  40630a:	mov    ch,0xe3
  40630c:	mov    BYTE PTR [edi],bh
  40630e:	(bad)  
  40630f:	scas   eax,DWORD PTR es:[edi]
  406310:	add    ah,BYTE PTR [esi+0x5c]
  406313:	mov    bh,0xc8
  406315:	aas    
  406316:	mov    ds:0xd4803d4e,eax
  40631b:	fisubr WORD PTR [edi]
  40631d:	ja     0x406321
  40631f:	cmc    
  406320:	push   ds
  406321:	std    
  406322:	cli    
  406323:	jecxz  0x406374
  406325:	pop    ebx
  406327:	xchg   BYTE PTR [edx-0x2e2bb869],ah
  40632d:	dec    ecx
  40632e:	add    DWORD PTR [esi],eax
  406330:	loopne 0x40633e
  406332:	mov    bl,0xbe
  406334:	into   
  406335:	or     DWORD PTR [eax-0x4c5c30eb],0x57
  40633c:	popa   
  40633d:	(bad)  
  40633e:	aam    0xe3
  406340:	xor    al,0xb0
  406342:	lods   eax,DWORD PTR ds:[esi]
  406343:	jmp    0x406384
  406345:	mov    ecx,0x348972dd
  40634a:	loop   0x406304
  40634c:	xchg   esp,eax
  40634d:	pop    es
  40634e:	sbb    BYTE PTR [ebx],ch
  406350:	add    BYTE PTR [ecx],bh
  406352:	mov    al,ds:0x51687b4f
  406357:	and    bl,bl
  406359:	scas   eax,DWORD PTR es:[edi]
  40635a:	cmc    
  40635b:	mov    cl,BYTE PTR [edi]
  40635d:	fs xor al,0x2f
  406360:	mov    esp,0x391ddeba
  406365:	xor    DWORD PTR [ecx+esi*2+0x4d],ebx
  406369:	in     al,0x45
  40636b:	je     0x4062fc
  40636d:	cld    
  40636e:	mov    ds:0x818bb274,eax
  406373:	in     al,0xcb
  406375:	jg     0x4063e7
  406377:	or     ebp,eax
  406379:	dec    edx
  40637a:	leave  
  40637b:	outs   dx,BYTE PTR ds:[esi]
  40637c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40637d:	mov    BYTE PTR [esi-0x75],cl
  406380:	pop    ebx
  406381:	imul   eax,DWORD PTR [ecx-0x4eedbe46],0xea5ebff1
  40638b:	test   eax,0xb77db056
  406390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406391:	popa   
  406392:	sbb    DWORD PTR [ebp+0xe3b6465],edi
  406398:	ja     0x40639e
  40639a:	xchg   ebx,eax
  40639b:	mov    eax,0x8e5a5346
  4063a0:	inc    edi
  4063a1:	das    
  4063a2:	fldenv fs:[edi]
  4063a5:	js     0x40636c
  4063a7:	(bad)  [edx]
  4063a9:	lock inc ecx
  4063ab:	inc    ebx
  4063ac:	mov    gs,edi
  4063ae:	add    bh,ch
  4063b0:	(bad)  
  4063b1:	push   ss
  4063b2:	mov    ebp,DWORD PTR [edi-0x48101afc]
  4063b8:	inc    ecx
  4063b9:	sbb    esi,DWORD PTR [edx+eax*1]
  4063bc:	adc    DWORD PTR [eax],eax
  4063be:	cmp    BYTE PTR [ebx+0x13],0x5f
  4063c2:	xchg   ebp,eax
  4063c3:	pop    edx
  4063c4:	dec    edx
  4063c5:	sahf   
  4063c6:	jge    0x4063cc
  4063c8:	push   edx
  4063c9:	repnz sbb al,0xa4
  4063cc:	(bad)  
  4063cd:	mov    ch,0x18
  4063cf:	in     eax,dx
  4063d0:	dec    eax
  4063d1:	fst    DWORD PTR [ebp+0xfd61c6b]
  4063d7:	mov    esp,DWORD PTR [esi]
  4063d9:	pushf  
  4063da:	(bad)  [edx-0x46]
  4063dd:	leave  
  4063de:	test   BYTE PTR ds:0x2933cfea,cl
  4063e4:	cld    
  4063e5:	out    dx,al
  4063e6:	xor    cl,BYTE PTR [edi]
  4063e8:	mov    ebp,0x2c1e9e92
  4063ed:	or     ch,al
  4063ef:	jae    0x40645a
  4063f1:	ja     0x40643c
  4063f3:	call   0x2542:0x3268a7af
  4063fa:	jmp    esp
  4063fc:	stos   BYTE PTR es:[edi],al
  4063fd:	xchg   edx,edx
  4063ff:	cwde   
  406400:	stos   DWORD PTR es:[edi],eax
  406401:	adc    BYTE PTR [eax+ecx*4],ch
  406404:	minps  xmm7,XMMWORD PTR [edx+eax*8+0x13d3ddfe]
  40640c:	ins    DWORD PTR es:[edi],dx
  40640d:	mov    ecx,edi
  40640f:	fidiv  DWORD PTR [edx+0x24818f30]
  406415:	adc    al,BYTE PTR [ebx+0x7458c4a4]
  40641b:	dec    edx
  40641c:	stos   BYTE PTR es:[edi],al
  40641d:	mov    BYTE PTR [eax+esi*2+0x14],ah
  406421:	push   ebp
  406422:	cwde   
  406423:	fldenv [esi+eiz*2+0x41]
  406427:	xchg   edi,eax
  406428:	imul   ebx,DWORD PTR [ecx+0x63],0xa1718eb3
  40642f:	out    dx,eax
  406430:	xor    eax,0xc6ba9269
  406435:	pop    ebx
  406436:	(bad)  
  406437:	call   0xd5eb85fc
  40643c:	mov    BYTE PTR [edi+0x18fbe382],bl
  406442:	ret    0xa8fd
  406445:	cmp    ebx,ecx
  406447:	jl     0x4063ea
  406449:	jmp    FWORD PTR [edi+0x74]
  40644c:	jle    0x406439
  40644e:	adc    ecx,edi
  406450:	cmp    eax,0x89aa8cde
  406455:	mov    ecx,0xc696ef12
  40645a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645b:	xor    eax,DWORD PTR [ecx+0x77]
  40645e:	mov    WORD PTR [esi+eax*1],ds
  406461:	fnsave [esp+edi*4+0x73493cce]
  406468:	adc    DWORD PTR [ebx],0xcb8f9ec6
  40646e:	fnstenv [eax]
  406470:	inc    ecx
  406471:	loop   0x40646d
  406473:	cdq    
  406474:	loopne 0x406429
  406476:	push   eax
  406477:	jns    0x406478
  406479:	push   esi
  40647a:	cmp    cl,dl
  40647c:	and    bh,BYTE PTR [esi]
  40647e:	jns    0x406468
  406480:	pushf  
  406481:	mov    ds:0x1b100d27,eax
  406486:	cmc    
  406487:	pop    esp
  406488:	ins    BYTE PTR es:[edi],dx
  406489:	scas   al,BYTE PTR es:[edi]
  40648a:	loop   0x406499
  40648c:	sub    bh,al
  40648e:	js     0x4064dc
  406490:	std    
  406491:	(bad)  
  406492:	pop    ebx
  406493:	sbb    DWORD PTR [edi-0x2317e38e],esp
  406499:	pusha  
  40649a:	test   BYTE PTR [ecx+ebp*8+0x12],dl
  40649e:	sub    al,0xdf
  4064a0:	dec    eax
  4064a1:	adc    BYTE PTR [esi-0x7f],ah
  4064a4:	sub    eax,0xfb3aef8c
  4064a9:	and    eax,0xf3f3033e
  4064ae:	sbb    al,0x53
  4064b0:	sub    ah,dl
  4064b2:	xchg   DWORD PTR [ecx+0x21a7b15e],edi
  4064b8:	inc    si
  4064ba:	push   ds
  4064bb:	jmp    0x14f1:0x82d537fa
  4064c2:	push   cs
  4064c3:	or     BYTE PTR [edx+0x4dc21d0b],bl
  4064c9:	jg     0x406537
  4064cb:	(bad)  
  4064cd:	push   esi
  4064ce:	add    BYTE PTR [edi],ch
  4064d0:	xchg   ebx,eax
  4064d1:	mov    ebx,0xb28eb730
  4064d6:	add    ebp,0x83ca050c
  4064dc:	stos   DWORD PTR es:[edi],eax
  4064dd:	sbb    al,0xff
  4064df:	or     al,0xdb
  4064e1:	int3   
  4064e2:	push   0xa16a144c
  4064e7:	(bad)  [esi]
  4064e9:	or     DWORD PTR [eax+0x1c],0x5b3bb7fb
  4064f0:	sbb    ebx,DWORD PTR [eax+0x313a71d1]
  4064f6:	mov    ecx,0x9dab29e5
  4064fb:	gs sti 
  4064fd:	jnp    0x4064a6
  4064ff:	dec    esi
  406500:	or     BYTE PTR [ebx],bh
  406502:	scas   al,BYTE PTR es:[edi]
  406503:	inc    edx
  406504:	or     DWORD PTR [ebp+0x61ac72bb],0xa4b7f5a7
  40650e:	or     esp,ebp
  406510:	push   esi
  406511:	mov    ebp,DWORD PTR [ecx+0x9]
  406514:	cmp    BYTE PTR [esi+0x59ae9ae1],ch
  40651a:	xchg   ecx,eax
  40651b:	sbb    al,0x98
  40651d:	jg     0x40654a
  40651f:	mov    edi,0x288a3bbd
  406524:	pushf  
  406525:	adc    DWORD PTR [edi+ebp*4-0x56f816f9],0x3c75cf74
  406530:	adc    esi,DWORD PTR [ebx-0x776b9cba]
  406536:	cmp    BYTE PTR [edx+0x3a],cl
  406539:	xchg   DWORD PTR [edi-0x6],esp
  40653c:	shl    ebp,1
  40653e:	xor    ebp,eax
  406540:	popa   
  406541:	and    BYTE PTR [edx+0x4ebe5cef],bl
  406547:	dec    edx
  406548:	mov    eax,ds:0xac1565cd
  40654d:	xchg   edi,eax
  40654e:	push   edi
  40654f:	scas   eax,DWORD PTR es:[edi]
  406550:	inc    ebx
  406551:	jge    0x40656f
  406553:	xlat   BYTE PTR ds:[ebx]
  406554:	fnsave [edi-0x3]
  406557:	ss out dx,al
  406559:	push   ebx
  40655a:	fistp  QWORD PTR [eax]
  40655c:	mov    bl,ah
  40655e:	and    esp,DWORD PTR [bp+si]
  406561:	dec    ebp
  406562:	mov    BYTE PTR [eax],al
  406564:	inc    eax
  406565:	or     DWORD PTR [edx+ecx*1+0x2],ecx
  406569:	mov    ebx,DWORD PTR [ebp-0x5e126441]
  40656f:	sbb    BYTE PTR [ebx+0x70c58410],ch
  406575:	pop    esp
  406576:	dec    eax
  406577:	sbb    dl,dl
  406579:	xchg   edi,eax
  40657a:	daa    
  40657b:	mov    dl,BYTE PTR [ecx-0xb]
  40657e:	adc    eax,0xdf00f90
  406583:	xchg   ebx,eax
  406584:	ret    
  406585:	stc    
  406586:	lods   eax,DWORD PTR ds:[esi]
  406587:	in     eax,0xfb
  406589:	scas   eax,DWORD PTR es:[edi]
  40658a:	push   cs
  40658b:	sahf   
  40658c:	into   
  40658d:	je     0x4065d0
  40658f:	ror    BYTE PTR [esp+esi*8],cl
  406592:	fidivr WORD PTR [ecx+0x35]
  406595:	and    eax,0x6e2b17b8
  40659a:	adc    al,0x7b
  40659c:	ins    BYTE PTR es:[edi],dx
  40659d:	int    0x29
  40659f:	out    dx,al
  4065a0:	adc    edi,DWORD PTR [ebx+0x23]
  4065a3:	add    al,0x1b
  4065a5:	inc    eax
  4065a6:	enter  0x1cc2,0xe7
  4065aa:	std    
  4065ab:	or     esp,0xffffff91
  4065ae:	mov    al,ds:0x870fad51
  4065b3:	outs   dx,BYTE PTR ds:[esi]
  4065b4:	lods   eax,DWORD PTR ds:[esi]
  4065b5:	retf   
  4065b6:	xor    ecx,DWORD PTR [ebx+edi*8]
  4065b9:	and    dl,ch
  4065bb:	jge    0x40654e
  4065bd:	cmc    
  4065be:	cld    
  4065bf:	push   ebp
  4065c0:	gs dec edi
  4065c2:	int    0xda
  4065c4:	(bad)  
  4065c5:	call   0xf79bdbe
  4065ca:	sub    ah,BYTE PTR [edi]
  4065cc:	push   eax
  4065cd:	xlat   BYTE PTR ds:[ebx]
  4065ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065cf:	mov    DWORD PTR [ecx],esp
  4065d1:	pushf  
  4065d2:	imul   esp,DWORD PTR [eax],0x7db73dd8
  4065d8:	pusha  
  4065d9:	xchg   ebx,eax
  4065da:	arpl   WORD PTR [edi-0x59],dx
  4065dd:	adc    edi,edx
  4065df:	stos   DWORD PTR es:[edi],eax
  4065e0:	in     eax,dx
  4065e1:	(bad)  
  4065e2:	(bad)  
  4065e3:	imul   BYTE PTR [edx+esi*4-0xc]
  4065e7:	mov    esi,0x4cb2a464
  4065ec:	daa    
  4065ed:	push   ebx
  4065ee:	adc    BYTE PTR [edx+0x2cb93165],cl
  4065f4:	dec    edi
  4065f5:	jecxz  0x4065b0
  4065f7:	iret   
  4065f8:	add    esi,DWORD PTR [edi]
  4065fa:	aas    
  4065fb:	cs push ebx
  4065fd:	sbb    DWORD PTR [eax+0x39],ebx
  406600:	add    cl,BYTE PTR [ebp+0x5d2e0d40]
  406606:	pop    es
  406607:	pop    es
  406608:	push   edi
  406609:	push   ecx
  40660a:	push   0x36cb72c6
  40660f:	pusha  
  406610:	ds leave 
  406612:	(bad)  
  406613:	jle    0x40665e
  406615:	mov    DWORD PTR gs:0x36d3fd59,0xfd1d3fc9
  406620:	sub    BYTE PTR [edi],al
  406622:	xor    al,0xfa
  406624:	xchg   esi,eax
  406625:	mov    cl,0x42
  406627:	or     BYTE PTR [ebp+0x43],ch
  40662a:	(bad)  
  40662b:	aaa    
  40662c:	hlt    
  40662d:	test   eax,0xe82b3f7d
  406632:	rol    dl,1
  406634:	dec    ecx
  406635:	bnd jb 0x4065e3
  406638:	xchg   ebp,eax
  406639:	or     dl,BYTE PTR [ebx+0x5fecd990]
  40663f:	cmp    eax,0xa7a0b3ac
  406644:	stc    
  406645:	outs   dx,BYTE PTR ds:[esi]
  406646:	in     al,dx
  406647:	scas   eax,DWORD PTR es:[edi]
  406648:	sahf   
  406649:	aad    0x17
  40664b:	dec    esi
  40664c:	cmp    BYTE PTR [edx],cl
  40664e:	mov    eax,ds:0xdef320f2
  406653:	int3   
  406654:	cmp    edi,DWORD PTR [ebx]
  406656:	dec    ecx
  406657:	in     eax,0x7b
  406659:	out    dx,eax
  40665a:	jns    0x406683
  40665c:	sub    dh,BYTE PTR [esi+0xb]
  40665f:	mov    ecx,0x3b02d0c7
  406664:	dec    ecx
  406665:	hlt    
  406666:	xlat   BYTE PTR ds:[ebx]
  406667:	mov    ebp,0x9b4d344a
  40666c:	cdq    
  40666d:	in     al,dx
  40666e:	enter  0xcefb,0xa3
  406672:	cmp    eax,0x7d4f5a06
  406677:	jecxz  0x4066d4
  406679:	inc    edi
  40667a:	test   eax,0x665d5810
  40667f:	dec    esi
  406680:	sbb    al,0x3d
  406682:	push   0xa4b9d15d
  406687:	retf   
  406688:	sti    
  406689:	outs   dx,DWORD PTR ds:[esi]
  40668a:	lods   al,BYTE PTR cs:[esi]
  40668c:	(bad)  
  40668d:	bound  esi,QWORD PTR [ecx]
  40668f:	adc    BYTE PTR [edi-0x44c2f16e],0x81
  406696:	pop    eax
  406697:	(bad)  
  406698:	in     eax,0xcb
  40669a:	out    0x6,eax
  40669c:	sbb    dh,BYTE PTR [edx+0x129fa817]
  4066a2:	lods   al,BYTE PTR ds:[esi]
  4066a3:	jp     0x4066ac
  4066a5:	jno    0x4066ef
  4066a7:	jp     0x4066f3
  4066a9:	xchg   ebp,eax
  4066aa:	sub    edi,ebp
  4066ac:	jmp    0x40671c
  4066ae:	ja     0x406668
  4066b0:	push   esp
  4066b1:	mov    WORD PTR [esi+0x7adcf05d],?
  4066b7:	dec    ebp
  4066b8:	addr16 push 0x15
  4066bb:	mov    ebx,0x4ee5996d
  4066c0:	sbb    al,0xd4
  4066c2:	fdivr  QWORD PTR [edx]
  4066c4:	mov    ebx,0x26458186
  4066c9:	nop
  4066ca:	lea    esi,[ebx+ebx*1]
  4066cd:	mov    ebx,0xd31dcec9
  4066d2:	xor    BYTE PTR [esp+esi*2],dh
  4066d5:	popf   
  4066d6:	adc    edx,eax
  4066d8:	ja     0x40668d
  4066da:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4066dc:	sbb    DWORD PTR [ebx-0x48],eax
  4066df:	sahf   
  4066e0:	call   0x76a99c82
  4066e5:	jecxz  0x406757
  4066e7:	out    0x97,eax
  4066e9:	clc    
  4066ea:	xchg   esp,eax
  4066eb:	or     BYTE PTR [ecx+0x15],dh
  4066ee:	adc    BYTE PTR ss:[edi-0xb],cl
  4066f2:	push   0x49
  4066f4:	rcl    DWORD PTR [edi+0xf],cl
  4066f7:	in     eax,dx
  4066f8:	or     ebx,ebx
  4066fa:	ins    DWORD PTR es:[edi],dx
  4066fb:	test   DWORD PTR [edx],esp
  4066fd:	fist   DWORD PTR ds:0xb35b467
  406703:	mov    bh,0xcf
  406705:	mov    ch,0x40
  406707:	adc    esi,esi
  406709:	and    dh,dh
  40670b:	mov    dl,0xc5
  40670d:	xchg   esi,eax
  40670e:	mov    ebx,0x462ee363
  406713:	xchg   esp,eax
  406714:	(bad)  
  406715:	or     BYTE PTR [ebx*2+0x4d6187d6],0xd9
  40671d:	mov    bl,0x88
  40671f:	je     0x40670f
  406721:	jp     0x4066fb
  406723:	paddusw mm2,QWORD PTR es:[eax]
  406727:	adc    al,0x36
  406729:	mov    fs,WORD PTR [esi]
  40672b:	sti    
  40672c:	push   0x3b63caa1
  406731:	pop    esi
  406732:	inc    edx
  406733:	pop    ss
  406734:	xchg   esi,eax
  406735:	push   edx
  406736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406737:	(bad)  
  406738:	pusha  
  406739:	xor    edx,DWORD PTR [edi+ebx*4-0x2305a513]
  406740:	push   ecx
  406741:	add    al,0x12
  406743:	mov    DWORD PTR [edx+0x2ccbf919],ebp
  406749:	mov    dl,0x8b
  40674b:	mov    edi,0xf62f3f9c
  406750:	xor    DWORD PTR [eax],esi
  406752:	popa   
  406753:	inc    esp
  406754:	and    DWORD PTR [edi-0x1e],0x1b
  406758:	lahf   
  406759:	sbb    ah,dl
  40675b:	das    
  40675c:	pop    ss
  40675d:	xchg   dx,bp
  406760:	dec    esi
  406761:	inc    esp
  406762:	cmp    BYTE PTR [ebp-0x7a358984],bl
  406768:	test   DWORD PTR [edx],ebx
  40676a:	sbb    DWORD PTR [esi-0x56],eax
  40676d:	arpl   WORD PTR [eax-0x4a],dx
  406770:	rcl    BYTE PTR [edx],0xf9
  406773:	fwait
  406774:	cmp    ebp,DWORD PTR [eax]
  406776:	fsub   st(2),st
  406778:	mov    BYTE PTR [ecx],al
  40677a:	sbb    BYTE PTR [ecx+ebp*4-0x5bc1a2c3],bh
  406781:	fbld   TBYTE PTR [ebx+0x42171d22]
  406787:	mul    DWORD PTR ds:0xfeb72f4e
  40678d:	or     DWORD PTR [ebx-0x75],ecx
  406790:	mov    bh,0x47
  406792:	(bad)  
  406793:	sub    al,0x27
  406795:	arpl   WORD PTR [eax-0x7168c4e0],di
  40679b:	sub    esi,edx
  40679d:	(bad)
  4067a0:	push   ds
  4067a1:	in     al,0x81
  4067a3:	pop    ecx
  4067a4:	in     al,dx
  4067a5:	fld    DWORD PTR [edx]
  4067a7:	in     eax,dx
  4067a8:	sbb    BYTE PTR [eax-0x5f5f2914],dh
  4067ae:	mov    dh,0x1b
  4067b0:	aaa    
  4067b1:	sub    edi,DWORD PTR [ebp+ebx*1-0x1352e46f]
  4067b8:	(bad)  
  4067b9:	call   0xf2132d62
  4067be:	hlt    
  4067bf:	push   cs
  4067c0:	rol    BYTE PTR [edi-0x41],cl
  4067c3:	lds    edi,FWORD PTR [edx+edx*2-0x27]
  4067c7:	cld    
  4067c8:	push   ss
  4067c9:	lahf   
  4067ca:	ins    DWORD PTR es:[edi],dx
  4067cb:	adc    BYTE PTR [eax+0x3b],ch
  4067ce:	pop    ebx
  4067cf:	and    DWORD PTR [ecx],0xffffffb0
  4067d2:	jecxz  0x406785
  4067d4:	mov    dh,0xf1
  4067d6:	dec    ecx
  4067d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d8:	inc    edx
  4067d9:	xor    ecx,edi
  4067db:	out    0xaf,al
  4067dd:	inc    esi
  4067de:	pop    ss
  4067df:	das    
  4067e0:	mov    ch,0x73
  4067e2:	and    al,0xfa
  4067e4:	adc    al,0xe8
  4067e6:	xor    ah,BYTE PTR [edx+0x68edbf62]
  4067ec:	(bad)  
  4067ed:	push   0xfffffffe
  4067ef:	or     eax,0x8f8255d3
  4067f4:	mov    dl,0x80
  4067f6:	out    dx,al
  4067f7:	popf   
  4067f8:	jl     0x406787
  4067fa:	add    DWORD PTR [ecx],0x57
  4067fd:	and    al,0xfa
  4067ff:	fsubr  DWORD PTR [eax-0x25]
  406802:	xor    cl,ah
  406804:	xor    al,BYTE PTR [ebx+0x18]
  406807:	adc    eax,0xb46d913a
  40680c:	outs   dx,DWORD PTR ds:[esi]
  40680d:	bnd ret 
  40680f:	(bad)  
  406810:	mov    ebx,0xaf981350
  406815:	xchg   edx,eax
  406816:	outs   dx,BYTE PTR ds:[esi]
  406817:	out    dx,eax
  406818:	adc    al,0x4c
  40681a:	or     esp,0x52
  40681d:	repz dec edi
  40681f:	mov    ?,WORD PTR [ebp+0x40]
  406822:	lods   al,BYTE PTR ds:[esi]
  406823:	cdq    
  406824:	mov    ebp,0x178b31a5
  406829:	ss fs or al,0x1a
  40682d:	dec    ebx
  40682e:	jmp    0xd5180091
  406833:	repz jo 0x406877
  406836:	jecxz  0x40684a
  406838:	cmovne edx,ecx
  40683b:	inc    ebp
  40683c:	push   esi
  40683d:	retf   0x7125
  406840:	xor    DWORD PTR [ecx+ebx*8+0x55],ebx
  406844:	xchg   edi,eax
  406845:	dec    ecx
  406846:	inc    ecx
  406847:	lock imul ecx,edx,0xffffffe6
  40684b:	(bad)  
  40684c:	adc    eax,0x4f7a054d
  406851:	push   esi
  406852:	ret    0xeae2
  406855:	push   0xa466ea24
  40685a:	adc    esp,ebp
  40685c:	shr    BYTE PTR [ecx+0x2d288d48],0xce
  406863:	icebp  
  406864:	test   DWORD PTR [esp+ebp*8-0x46],ebx
  406868:	in     al,0xc5
  40686a:	out    0xbf,eax
  40686c:	push   edx
  40686d:	inc    cl
  40686f:	lds    eax,FWORD PTR [ecx+0x7b53c4c3]
  406875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406876:	imul   ebp,edx,0x3d
  406879:	lahf   
  40687a:	lock and BYTE PTR ds:0x309af12a,cl
  406881:	jl     0x4068a3
  406883:	push   0xbe5ae462
  406888:	xchg   esi,eax
  406889:	dec    esp
  40688a:	shl    BYTE PTR [ebp-0x6d91f62c],0x54
  406891:	mov    ch,0xb1
  406893:	inc    ecx
  406894:	pop    eax
  406895:	shl    BYTE PTR [ebp+0x12],cl
  406898:	dec    esp
  406899:	jmp    0xabc242b6
  40689e:	xchg   ebx,eax
  40689f:	add    ch,al
  4068a1:	and    ebp,ebx
  4068a3:	ret    0xe2fa
  4068a6:	aad    0x84
  4068a8:	cli    
  4068a9:	mov    dl,0x21
  4068ab:	hlt    
  4068ac:	int3   
  4068ad:	xchg   esp,eax
  4068ae:	imul   ebp,ebx,0xffffffd2
  4068b1:	or     DWORD PTR [ecx+0x50],eax
  4068b4:	into   
  4068b5:	retf   
  4068b6:	sub    DWORD PTR [edi-0x68],eax
  4068b9:	nop
  4068ba:	and    ebp,DWORD PTR [eax+0x6e8152fe]
  4068c0:	hlt    
  4068c1:	xor    eax,0x5f2dee96
  4068c6:	sub    esp,DWORD PTR [ecx]
  4068c8:	add    al,0xd0
  4068ca:	jl     0x406872
  4068cc:	out    0xa6,eax
  4068ce:	not    BYTE PTR [ebx]
  4068d0:	xor    BYTE PTR ds:0x13f11a34,dl
  4068d6:	dec    edx
  4068d7:	add    al,0x23
  4068d9:	and    esi,DWORD PTR [esi-0x1f3696da]
  4068df:	int    0x70
  4068e1:	mov    ebx,?
  4068e3:	dec    ebx
  4068e4:	jl     0x4068f1
  4068e6:	aaa    
  4068e7:	push   esp
  4068e8:	mov    esp,edi
  4068ea:	fidiv  WORD PTR [ebx]
  4068ec:	mov    BYTE PTR [ebp-0x7713f3aa],ch
  4068f2:	push   esp
  4068f3:	jno    0x406954
  4068f5:	or     dh,dh
  4068f7:	ret    
  4068f8:	call   0x8581:0xc765d123
  4068ff:	mov    esp,0xff008e19
  406904:	icebp  
  406905:	sbb    cl,BYTE PTR [ecx+0x26422bc4]
  40690b:	into   
  40690c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690e:	scas   eax,DWORD PTR es:[edi]
  40690f:	xor    BYTE PTR [ebp+0x4f],bl
  406912:	pusha  
  406913:	retf   
  406914:	outs   dx,DWORD PTR ds:[esi]
  406915:	and    DWORD PTR [eax],eax
  406917:	ficom  WORD PTR [ecx]
  406919:	mov    ah,0x47
  40691b:	loopne 0x40699a
  40691d:	ds stos DWORD PTR es:[edi],eax
  40691f:	ins    DWORD PTR es:[edi],dx
  406920:	and    al,0x4e
  406922:	mov    ebx,DWORD PTR [edi+0x71f39b05]
  406928:	mov    dl,0x27
  40692a:	(bad)  
  40692c:	dec    ebp
  40692d:	adc    eax,0xfbef4fc9
  406932:	push   edi
  406933:	out    dx,eax
  406934:	clc    
  406935:	or     al,0x51
  406937:	dec    ebx
  406938:	inc    edx
  406939:	inc    edx
  40693a:	stc    
  40693b:	(bad)  
  40693c:	mov    eax,0x123918e2
  406941:	(bad)  
  406942:	std    
  406943:	add    DWORD PTR [ebx],ecx
  406945:	pop    ebp
  406946:	popa   
  406947:	sbb    BYTE PTR [ecx-0x2ee7e868],0x7d
  40694e:	push   ebp
  40694f:	sub    DWORD PTR [ebx-0x922e286],ecx
  406955:	mov    esi,0xce58bbed
  40695a:	ret    
  40695b:	mov    eax,ds:0x72f49f8f
  406960:	mov    edi,0x86508e85
  406965:	xor    esi,DWORD PTR [edi]
  406967:	int3   
  406968:	jno    0x4069be
  40696a:	mov    ebx,es
  40696c:	jne    0x406924
  40696e:	shl    DWORD PTR [edi+edx*4-0x3f71b58b],0x68
  406976:	mov    DWORD PTR [ebp-0x68],ecx
  406979:	lods   eax,DWORD PTR ds:[esi]
  40697a:	adc    al,0x4
  40697c:	jmp    0x40697c
  40697e:	cli    
  40697f:	lea    ebp,[edi]
  406981:	jp     0x4069c9
  406983:	sar    DWORD PTR [eax-0x740bd82e],1
  406989:	adc    ch,BYTE PTR [esi+0x57961bec]
  40698f:	outs   dx,DWORD PTR ds:[esi]
  406990:	sub    DWORD PTR [ebp-0x3060299],edi
  406996:	out    dx,eax
  406997:	loopne 0x4069ee
  406999:	ret    0x19af
  40699c:	mov    eax,ds:0x33d4e63b
  4069a1:	cmp    ebx,DWORD PTR [edi+0x35d863de]
  4069a7:	mov    bh,0xee
  4069a9:	adc    dl,BYTE PTR [ecx+0x5]
  4069ac:	call   0x23778bae
  4069b1:	std    
  4069b2:	inc    edi
  4069b3:	aas    
  4069b4:	sub    ecx,DWORD PTR [edx-0x58]
  4069b7:	(bad)  
  4069b8:	out    dx,al
  4069b9:	dec    esi
  4069ba:	push   ecx
  4069bb:	and    ecx,DWORD PTR [esi+0x24]
  4069be:	cmp    BYTE PTR [esi],cl
  4069c0:	dec    esp
  4069c1:	ins    BYTE PTR es:[edi],dx
  4069c2:	sub    DWORD PTR [ecx-0x36],esp
  4069c5:	into   
  4069c6:	jecxz  0x40698e
  4069c8:	ret    0x1ca8
  4069cb:	out    0xf6,eax
  4069cd:	(bad)  
  4069ce:	and    ah,ch
  4069d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d1:	test   eax,0xf0cb4fbb
  4069d6:	fisub  DWORD PTR [edx*2+0x666a6cb]
  4069dd:	in     eax,0x88
  4069df:	fsubr  DWORD PTR [ebx+eiz*4+0x61]
  4069e3:	xor    al,0x95
  4069e5:	shr    BYTE PTR [edx],cl
  4069e7:	pop    eax
  4069e8:	and    eax,0x83cfba4e
  4069ed:	cs inc edi
  4069ef:	cwde   
  4069f0:	dec    eax
  4069f1:	loop   0x4069f0
  4069f3:	jne    0x406981
  4069f5:	and    eax,0x77dd7889
  4069fa:	inc    edx
  4069fb:	aad    0x3a
  4069fd:	outs   dx,DWORD PTR ds:[esi]
  4069fe:	mov    ch,0xb9
  406a00:	ficom  DWORD PTR [esi-0x237d2082]
  406a06:	fdivr  QWORD PTR [ecx]
  406a08:	xor    DWORD PTR [ebp+0x6a],ebp
  406a0b:	ret    0x3e02
  406a0e:	mov    dh,BYTE PTR [ecx]
  406a10:	adc    dl,al
  406a12:	into   
  406a13:	fstp   QWORD PTR [eax+ebp*2]
  406a16:	sti    
  406a17:	xchg   esi,eax
  406a18:	add    dl,ch
  406a1a:	ss inc ecx
  406a1c:	push   edi
  406a1d:	sbb    eax,0x917accfb
  406a22:	push   ss
  406a23:	mov    WORD PTR [edx+esi*1+0x4d2de66d],?
  406a2a:	mov    dh,cl
  406a2c:	ret    0xb914
  406a2f:	and    DWORD PTR [ecx+0x4b],edx
  406a32:	xchg   DWORD PTR [esi+0x35],eax
  406a35:	mov    dl,0x8d
  406a37:	ficomp WORD PTR [edi+0x372da8ea]
  406a3d:	sbb    al,0x50
  406a3f:	adc    BYTE PTR [edx+0x219e2c70],cl
  406a45:	bound  ebx,QWORD PTR [eax]
  406a47:	mov    esp,0x4396302b
  406a4c:	jne    0x4069e0
  406a4e:	mov    dl,0x57
  406a50:	add    DWORD PTR [ecx+0x35bb2f2a],edi
  406a56:	dec    edx
  406a57:	iret   
  406a58:	fstp   QWORD PTR [esi+edi*8+0x499fd53]
  406a5f:	stc    
  406a60:	mov    bl,0xc9
  406a62:	sahf   
  406a63:	scas   eax,DWORD PTR es:[edi]
  406a64:	xchg   ebx,eax
  406a65:	mov    esi,0xce3614b9
  406a6a:	jno    0x406a5d
  406a6c:	add    dh,BYTE PTR [eax+0x72a567b7]
  406a72:	gs cwde 
  406a74:	call   DWORD PTR [ecx]
  406a76:	pop    ss
  406a77:	push   esi
  406a78:	dec    edi
  406a79:	fldcw  WORD PTR [esi+ebx*4-0x3b775050]
  406a80:	adc    al,0xf7
  406a82:	fldcw  WORD PTR [esp+ecx*1-0x61]
  406a86:	inc    edx
  406a87:	push   esi
  406a88:	mov    ebx,0x364fafbc
  406a8d:	jbe    0x406a7b
  406a8f:	sub    DWORD PTR [edx+0x48],esp
  406a92:	sbb    eax,0xfbdf5486
  406a97:	in     eax,0x98
  406a99:	xor    ebp,esp
  406a9b:	dec    ecx
  406a9c:	jg     0x406a81
  406a9e:	fidivr WORD PTR [ebx+0x19]
  406aa1:	dec    eax
  406aa2:	push   ebx
  406aa3:	mov    cl,0x80
  406aa5:	cmp    dl,BYTE PTR [ebp+0x1d]
  406aa8:	mov    fs,WORD PTR es:[esp+edx*1]
  406aac:	push   esp
  406aad:	mov    ebp,0xa070f532
  406ab2:	idiv   BYTE PTR [ecx]
  406ab4:	(bad)  
  406ab6:	outs   dx,DWORD PTR ds:[esi]
  406ab7:	push   edx
  406ab8:	mov    esi,0x1c466c3a
  406abd:	int    0x9
  406abf:	mov    dh,0xd0
  406ac1:	outs   dx,BYTE PTR ds:[esi]
  406ac2:	cmp    edx,edi
  406ac4:	jbe    0x406af3
  406ac6:	adc    ch,BYTE PTR [eax+0x39]
  406ac9:	mov    bh,BYTE PTR [ebp-0x360268cb]
  406acf:	mov    BYTE PTR [ecx-0x50],ch
  406ad2:	xchg   esp,eax
  406ad3:	in     al,dx
  406ad4:	imul   ebp,ebx,0xffffffc7
  406ad7:	jmp    0x8aed7b58
  406adc:	add    eax,0x3d8a974f
  406ae1:	jle    0x406a90
  406ae3:	cmp    eax,0xc9b31f52
  406ae8:	dec    edi
  406ae9:	rcr    BYTE PTR [edx-0x3034dc70],1
  406aef:	js     0x406b63
  406af1:	(bad)  
  406af3:	outs   dx,BYTE PTR ds:[esi]
  406af4:	pusha  
  406af5:	push   edi
  406af6:	stc    
  406af7:	push   ebp
  406af8:	out    0x6,eax
  406afa:	jle    0x406b41
  406afc:	daa    
  406afd:	ins    BYTE PTR es:[edi],dx
  406afe:	mov    al,ds:0x676eac0a
  406b03:	jp     0x406b7f
  406b05:	xchg   BYTE PTR [ecx-0x1034c328],ah
  406b0b:	and    DWORD PTR [ebx+0x10],esp
  406b0e:	push   ebp
  406b0f:	iret   
  406b10:	lods   al,BYTE PTR ds:[esi]
  406b11:	push   esi
  406b12:	ret    0x9f02
  406b15:	and    al,0xf
  406b17:	neg    BYTE PTR [edi]
  406b19:	loope  0x406b3a
  406b1b:	xchg   ebx,eax
  406b1c:	pop    ebx
  406b1d:	sub    al,0x9c
  406b1f:	loopne 0x406b9d
  406b21:	sbb    bh,ah
  406b23:	stc    
  406b24:	stc    
  406b25:	out    dx,eax
  406b26:	jnp    0x406b85
  406b28:	jno    0x406ba9
  406b2a:	iret   
  406b2b:	xchg   esi,eax
  406b2c:	pop    ecx
  406b2d:	jb     0x406b14
  406b2f:	jns    0x406ac8
  406b31:	call   0x5d7f665
  406b36:	inc    ebp
  406b37:	das    
  406b38:	out    dx,eax
  406b39:	sub    eax,0x0
  406b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b3d:	push   ss
  406b3e:	out    dx,eax
  406b3f:	cwde   
  406b40:	ds push ds
  406b42:	(bad)  
  406b43:	mov    bh,0xee
  406b45:	loopne 0x406ad2
  406b47:	ja     0x406b68
  406b49:	inc    ecx
  406b4a:	les    ebp,FWORD PTR es:[esi-0x32]
  406b4e:	mov    bl,0x60
  406b50:	pop    eax
  406b51:	cmc    
  406b52:	xor    DWORD PTR [ebp-0x45b3e5ba],edx
  406b58:	aam    0x1f
  406b5a:	ret    0x6803
  406b5d:	sbb    DWORD PTR ds:0xd8d955af,edi
  406b63:	cmp    al,0x6a
  406b65:	mov    es,WORD PTR [ebp-0x15]
  406b68:	mov    dh,0x40
  406b6a:	test   al,0xf0
  406b6c:	cmp    al,0xdc
  406b6e:	cs cli 
  406b70:	rcl    DWORD PTR [ebx],0x36
  406b73:	call   0xce4a:0x8e8a402e
  406b7a:	sub    eax,0xb4b60c7e
  406b7f:	jg     0x406b69
  406b81:	(bad)  
  406b82:	xor    al,0x35
  406b84:	rcr    DWORD PTR [edi],cl
  406b86:	push   0x63
  406b88:	leave  
  406b89:	inc    edi
  406b8a:	mov    dh,0xd1
  406b8c:	pop    ecx
  406b8d:	in     al,0xb6
  406b8f:	sub    BYTE PTR [ebp-0x21],ah
  406b92:	in     al,0xc6
  406b94:	es inc ebp
  406b96:	push   0x6c51e2ef
  406b9b:	jle    0x406c10
  406b9d:	xchg   ebx,eax
  406b9e:	jecxz  0x406b80
  406ba0:	push   ecx
  406ba1:	xchg   ebx,eax
  406ba2:	and    al,0xec
  406ba4:	inc    esi
  406ba5:	out    dx,al
  406ba6:	pop    ss
  406ba7:	sbb    dl,BYTE PTR [ebp-0x3f]
  406baa:	test   BYTE PTR [edi+0x2fa7ed80],0xff
  406bb1:	xchg   edi,eax
  406bb2:	add    ebp,ebp
  406bb4:	xor    esi,DWORD PTR [edx-0x36f82e0d]
  406bba:	lahf   
  406bbb:	nop
  406bbc:	push   ds
  406bbd:	mov    ?,esi
  406bbf:	cld    
  406bc0:	shl    BYTE PTR [edx],0x33
  406bc3:	inc    ebx
  406bc4:	fistp  DWORD PTR [eax]
  406bc6:	not    DWORD PTR [edx-0x6d1905b3]
  406bcc:	cmc    
  406bcd:	lock das 
  406bcf:	cld    
  406bd0:	push   0x61b8bdcb
  406bd5:	shr    BYTE PTR [eax-0x27],1
  406bd8:	cwde   
  406bd9:	stos   BYTE PTR es:[edi],al
  406bda:	push   eax
  406bdb:	out    0xe5,al
  406bdd:	aas    
  406bde:	push   0xa6d5d586
  406be3:	popf   
  406be4:	mov    bh,0xe
  406be6:	add    al,0x1a
  406be8:	sub    esp,DWORD PTR [eax+0x1a]
  406beb:	mov    eax,0xdd984856
  406bf0:	cvtps2pi mm5,QWORD PTR [eax+0x58f4093a]
  406bf7:	fistp  QWORD PTR [eax+ecx*2-0x6b99134b]
  406bfe:	or     al,0x2f
  406c00:	jns    0x406b8c
  406c02:	repnz (bad) 
  406c04:	hlt    
  406c05:	push   eax
  406c06:	add    BYTE PTR [edx],al
  406c08:	mov    eax,ds:0x9b3fb217
  406c0d:	dec    ecx
  406c0e:	push   cs
  406c0f:	loope  0x406bb9
  406c11:	loope  0x406bcf
  406c13:	cmp    BYTE PTR [eax+0x50a35aae],dh
  406c19:	fisttp DWORD PTR fs:[edi]
  406c1c:	test   al,0x4a
  406c1e:	sub    DWORD PTR [esi+0x5618cb76],ebp
  406c24:	inc    BYTE PTR [eax-0x6c]
  406c27:	jp     0x406c2c
  406c29:	sti    
  406c2a:	test   DWORD PTR [esi-0x50f56e4b],edx
  406c30:	pop    es
  406c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c32:	aaa    
  406c33:	pop    ecx
  406c34:	pushf  
  406c35:	rol    DWORD PTR [edi],0x3d
  406c38:	inc    dx
  406c3a:	icebp  
  406c3b:	stos   BYTE PTR es:[edi],al
  406c3c:	pop    esp
  406c3d:	shl    DWORD PTR [edi-0x2f906b9a],0x50
  406c44:	sbb    esp,edx
  406c46:	out    0x1f,al
  406c48:	pop    es
  406c49:	push   ebx
  406c4a:	fisttp DWORD PTR [eax-0xc]
  406c4d:	mov    ds:0x75ff3322,al
  406c52:	clc    
  406c53:	cmp    al,0xf9
  406c55:	xchg   ecx,eax
  406c56:	mov    edi,fs
  406c58:	imul   eax,DWORD PTR [ecx-0x43],0x13
  406c5c:	push   esp
  406c5d:	lods   eax,DWORD PTR ds:[esi]
  406c5e:	test   DWORD PTR [esi-0x1d],esp
  406c61:	aaa    
  406c62:	inc    edi
  406c63:	test   eax,0x2e84d4ea
  406c68:	lahf   
  406c69:	ror    BYTE PTR [ebp+0x17cc88fc],cl
  406c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c70:	shl    BYTE PTR [esi],cl
  406c72:	xchg   ebx,eax
  406c73:	inc    esp
  406c74:	mov    edx,?
  406c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c77:	addr16 dec edi
  406c79:	into   
  406c7a:	jbe    0x406c60
  406c7c:	gs jecxz 0x406cdc
  406c7f:	and    DWORD PTR [eax+0x36],ebx
  406c82:	xlat   BYTE PTR ds:[ebx]
  406c83:	and    ch,BYTE PTR [edi-0x1e]
  406c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c87:	in     al,0x87
  406c89:	sbb    DWORD PTR [eax],ebp
  406c8b:	into   
  406c8c:	sar    DWORD PTR [eax-0x15599477],1
  406c92:	adc    eax,0xe25b28b6
  406c97:	pusha  
  406c98:	test   BYTE PTR [edi+esi*1-0xe6793a5],bl
  406c9f:	or     DWORD PTR [eax-0x7c],ebp
  406ca2:	pop    ebp
  406ca3:	je     0x406c77
  406ca5:	inc    ecx
  406ca6:	bound  edx,QWORD PTR [edx]
  406ca8:	and    DWORD PTR [ebx+0x775991b2],esi
  406cae:	add    al,0x42
  406cb0:	retf   0x452a
  406cb3:	popf   
  406cb4:	push   ecx
  406cb5:	or     eax,0x99c6c92a
  406cba:	mov    cl,0xeb
  406cbc:	mov    edi,DWORD PTR [edi-0x17]
  406cbf:	mov    eax,0xf07b43b9
  406cc4:	imul   edx,DWORD PTR [edx+eiz*1+0x39],0x60
  406cc9:	dec    ebx
  406cca:	dec    ecx
  406ccb:	lods   al,BYTE PTR ds:[esi]
  406ccc:	lds    esi,FWORD PTR [edx+0x2d]
  406ccf:	enter  0x7db4,0x6f
  406cd3:	mov    bl,BYTE PTR [edx+edx*4+0xe49c987]
  406cda:	inc    edi
  406cdb:	and    DWORD PTR [edx-0x2d],esp
  406cde:	psllw  mm3,QWORD PTR [ebp-0x19]
  406ce2:	aad    0x9f
  406ce4:	imul   ecx,DWORD PTR [ecx],0xd0089853
  406cea:	outs   dx,DWORD PTR ds:[esi]
  406ceb:	js     0x406ce5
  406ced:	pushf  
  406cee:	test   al,0x88
  406cf0:	adc    DWORD PTR ds:0x824b9c04,edx
  406cf6:	add    BYTE PTR [ebx-0x5ff429bb],ah
  406cfc:	(bad)  
  406cfd:	cmp    ebp,DWORD PTR ds:0xf295902
  406d03:	es daa 
  406d05:	adc    ebp,DWORD PTR [ebp+eax*2+0x74]
  406d09:	xor    eax,0x405e8feb
  406d0e:	js     0x406d18
  406d10:	adc    dl,bl
  406d12:	add    al,0x1b
  406d14:	ins    BYTE PTR es:[edi],dx
  406d15:	dec    edi
  406d16:	push   eax
  406d17:	or     DWORD PTR [ecx],eax
  406d19:	outs   dx,BYTE PTR ds:[esi]
  406d1a:	pop    esp
  406d1b:	cdq    
  406d1c:	outs   dx,BYTE PTR ds:[esi]
  406d1d:	and    eax,0x3505c817
  406d22:	push   edi
  406d23:	push   edx
  406d24:	adc    ah,BYTE PTR [esi-0x53]
  406d27:	je     0x406cf9
  406d29:	sbb    eax,0x25db5481
  406d2e:	xchg   esi,eax
  406d2f:	fistp  QWORD PTR [esi]
  406d31:	xor    al,0x2b
  406d33:	pop    ecx
  406d34:	dec    edx
  406d35:	fwait
  406d36:	jge    0x406da1
  406d38:	inc    esp
  406d39:	cmp    al,0xe0
  406d3b:	sahf   
  406d3c:	dec    edx
  406d3d:	inc    edi
  406d3e:	test   al,0x8b
  406d41:	xor    BYTE PTR [edi],0x19
  406d44:	mov    cl,0x15
  406d46:	mov    ds,edi
  406d48:	jne    0x406cfa
  406d4a:	jmp    0x406dca
  406d4c:	push   eax
  406d4d:	retf   
  406d4e:	and    BYTE PTR [esi],dl
  406d50:	jp     0x406d3c
  406d52:	push   0x60ac06db
  406d57:	add    eax,0x44d4ec43
  406d5c:	and    dh,BYTE PTR [edx]
  406d5e:	add    DWORD PTR [edx-0x46],edi
  406d61:	das    
  406d62:	mov    bh,0x9
  406d64:	push   ebp
  406d65:	mov    cl,0x76
  406d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d68:	(bad)
  406d6b:	data16 or bh,cl
  406d6e:	rol    DWORD PTR [edx],cl
  406d70:	clc    
  406d71:	fiadd  DWORD PTR [esp+eiz*4+0x205c97ec]
  406d78:	hlt    
  406d79:	pop    ss
  406d7a:	in     al,dx
  406d7b:	retf   
  406d7c:	(bad)  
  406d7d:	jge    0x406d92
  406d7f:	(bad)  
  406d80:	(bad)  
  406d81:	in     eax,0xc8
  406d83:	jns    0x406e04
  406d85:	test   eax,0x14d8aa1e
  406d8a:	mov    ebx,0x9f3f93b8
  406d8f:	jg     0x406db7
  406d91:	data16 xor ah,ch
  406d94:	loop   0x406d47
  406d96:	xchg   BYTE PTR [ebx+eax*1],al
  406d99:	shl    ecx,1
  406d9b:	dec    edi
  406d9c:	xor    eax,0xf185a7a7
  406da1:	fucomp st(7)
  406da3:	push   0xcf5a13da
  406da8:	xlat   BYTE PTR ds:[ebx]
  406da9:	mov    DWORD PTR [eax+0x20],eax
  406dac:	sbb    eax,0xd26bc9b9
  406db1:	push   edx
  406db2:	mov    esp,DWORD PTR ds:0x675b6c99
  406db8:	xlat   BYTE PTR ds:[ebx]
  406db9:	mov    esp,0xba74e882
  406dbe:	pop    ds
  406dbf:	push   edi
  406dc0:	sub    eax,DWORD PTR [edi-0x50]
  406dc3:	mov    eax,0xcf5d3737
  406dc8:	stos   BYTE PTR es:[edi],al
  406dc9:	das    
  406dca:	dec    esp
  406dcb:	push   ecx
  406dcc:	sbb    ebp,ecx
  406dce:	and    edx,esi
  406dd0:	jns    0x406db2
  406dd2:	ret    0xdd9e
  406dd5:	scas   al,BYTE PTR es:[edi]
  406dd6:	fidivr WORD PTR [edx-0x3cdf640e]
  406ddc:	xor    al,0xb3
  406dde:	dec    edx
  406ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406de1:	sbb    bl,BYTE PTR [edx]
  406de3:	ds push 0x30
  406de6:	cmp    cl,ah
  406de8:	loop   0x406e2e
  406dea:	pop    esi
  406deb:	mov    eax,0x5a7fdab
  406df0:	xchg   edi,eax
  406df1:	les    edx,FWORD PTR [esi]
  406df3:	mov    cl,0x47
  406df5:	shl    DWORD PTR [ebx+0x4bfdc39b],0x2e
  406dfc:	sbb    eax,0x5dab1563
  406e01:	pop    ss
  406e02:	dec    ebp
  406e03:	pop    eax
  406e04:	fild   WORD PTR [eax-0x58b4543a]
  406e0a:	sbb    dl,cl
  406e0c:	scas   al,BYTE PTR es:[edi]
  406e0d:	popa   
  406e0e:	fstp   st(1)
  406e10:	ret    
  406e11:	fdivr  QWORD PTR [eax+0x3f]
  406e14:	jns    0x406e00
  406e16:	mov    ch,0x19
  406e18:	xchg   BYTE PTR [edx+edx*8-0x43],dh
  406e1c:	(bad)  
  406e1d:	push   eax
  406e1e:	jne    0x406dba
  406e20:	pop    esp
  406e21:	iret   
  406e22:	in     al,dx
  406e23:	mov    es,edx
  406e25:	and    dl,BYTE PTR [edi+0x68]
  406e28:	xor    al,0xfc
  406e2a:	(bad)
  406e2d:	mov    ch,0xf9
  406e2f:	push   0x50c3c38d
  406e34:	test   eax,0xa272c6e3
  406e39:	out    dx,eax
  406e3a:	xor    edi,ebp
  406e3c:	mov    DWORD PTR [ebp+0xf68059b],ecx
  406e42:	pop    edx
  406e43:	and    dl,BYTE PTR [edx+0x37]
  406e46:	iret   
  406e47:	cwde   
  406e48:	inc    ebx
  406e49:	(bad)  
  406e4a:	pop    esi
  406e4b:	xchg   ebp,eax
  406e4c:	into   
  406e4d:	je     0x406e40
  406e4f:	mov    dl,0x39
  406e51:	xchg   DWORD PTR [esi-0x44],esi
  406e54:	out    0xeb,eax
  406e56:	fdivr  QWORD PTR [ebx+0x62]
  406e59:	jmp    0xa43b:0x16663e72
  406e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e61:	sub    al,BYTE PTR [ecx+0x18c47d6d]
  406e67:	rcr    BYTE PTR [eax+0x519f9ef0],cl
  406e6d:	ja     0x406e1c
  406e6f:	ret    0xd8c7
  406e72:	mov    al,0xe4
  406e74:	in     eax,dx
  406e75:	pushf  
  406e76:	mov    ds:0x41f854db,al
  406e7b:	and    BYTE PTR [edx+0x7d],dl
  406e7e:	in     eax,0x87
  406e80:	sar    BYTE PTR [eax+0x4484513b],cl
  406e86:	into   
  406e87:	add    esi,DWORD PTR [esp+0xd]
  406e8b:	fs ds push ebx
  406e8e:	mov    ch,BYTE PTR [edx+0x386f3fac]
  406e94:	push   ss
  406e95:	cwde   
  406e96:	sar    BYTE PTR fs:[edx+eiz*4+0x120bcfef],0xe2
  406e9f:	add    BYTE PTR [edi],al
  406ea1:	mov    BYTE PTR [esi-0x6a],dl
  406ea4:	push   ecx
  406ea5:	ja     0x406e6c
  406ea7:	xchg   esp,eax
  406ea8:	or     dh,BYTE PTR [ebp-0xa]
  406eab:	ror    BYTE PTR [ebx+edx*8],1
  406eae:	(bad)  
  406eaf:	in     eax,0xf2
  406eb1:	lds    esp,FWORD PTR es:[eax]
  406eb4:	sbb    ah,dl
  406eb6:	sbb    DWORD PTR [edi],ebp
  406eb8:	dec    ebx
  406eb9:	int    0xa0
  406ebb:	adc    al,0x10
  406ebd:	jnp    0x406e5a
  406ebf:	lahf   
  406ec0:	faddp  st(3),st
  406ec2:	cwde   
  406ec3:	popa   
  406ec4:	test   al,0x28
  406ec6:	(bad)  
  406ec7:	repz or eax,0x93570012
  406ecd:	inc    ecx
  406ece:	mov    esp,0x1f31a89e
  406ed3:	mov    eax,0x7d01a3a7
  406ed8:	rol    DWORD PTR [ebx],cl
  406eda:	push   ecx
  406edb:	mov    ds:0xd5400bc,al
  406ee0:	mov    ch,0xf9
  406ee2:	or     BYTE PTR [edx+eiz*1+0x59],ah
  406ee6:	cmp    BYTE PTR [ebx-0x3e22152],0xe1
  406eed:	add    bl,BYTE PTR [ecx+0x15]
  406ef0:	in     eax,dx
  406ef1:	adc    BYTE PTR [ebp+edi*1+0x57],ah
  406ef5:	jmp    0x8ca7e8a6
  406efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406efb:	into   
  406efc:	mov    esp,DWORD PTR [edi+edx*4+0x56]
  406f00:	jle    0x406ef5
  406f02:	pop    eax
  406f03:	or     eax,0xfc482442
  406f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f09:	push   ecx
  406f0a:	aas    
  406f0b:	sbb    dh,BYTE PTR [edx+0x10]
  406f0e:	int3   
  406f0f:	mov    edi,0xe05d912d
  406f14:	sbb    dh,BYTE PTR [eax+0x0]
  406f17:	out    dx,al
  406f18:	retf   0x8960
  406f1b:	mov    ch,0x95
  406f1d:	bnd jns 0x406eef
  406f20:	inc    edi
  406f21:	and    DWORD PTR gs:[ebx+0x5a],esi
  406f25:	rcr    edx,0xe0
  406f28:	and    eax,0x36a5e822
  406f2d:	mov    ah,0x7f
  406f2f:	rcl    DWORD PTR [ebp+0x5397bc99],cl
  406f35:	ror    DWORD PTR [edx+0x1941c9ec],1
  406f3b:	imul   esp,DWORD PTR [edx-0x3],0x6a2ad5fd
  406f42:	xor    BYTE PTR [esi+0x30],dl
  406f45:	push   ecx
  406f46:	dec    edx
  406f47:	es add al,0x7a
  406f4b:	pop    eax
  406f4c:	mov    eax,ds:0x728831d8
  406f51:	cmp    ecx,DWORD PTR [edx-0x5932c75c]
  406f57:	dec    edi
  406f58:	ins    BYTE PTR es:[edi],dx
  406f59:	imul   esp,DWORD PTR [eax+ecx*4-0x3e],0xffffffa1
  406f5e:	push   edi
  406f5f:	adc    bh,bh
  406f61:	dec    ebx
  406f62:	push   ebx
  406f63:	not    DWORD PTR [esi]
  406f65:	gs mov al,0x1e
  406f68:	das    
  406f69:	cmp    al,0x67
  406f6b:	xlat   BYTE PTR ds:[ebx]
  406f6c:	add    BYTE PTR [ebp+eax*4-0x67],dl
  406f70:	mov    BYTE PTR [ebp-0x35],0x6c
  406f74:	push   ds
  406f75:	push   es
  406f76:	leave  
  406f77:	(bad)  
  406f78:	sti    
  406f79:	push   eax
  406f7a:	mov    dh,0x94
  406f7c:	icebp  
  406f7d:	mov    cl,0x58
  406f7f:	nop
  406f80:	daa    
  406f81:	xlat   BYTE PTR ds:[ebx]
  406f82:	mov    eax,0xa4645150
  406f87:	add    ah,dh
  406f89:	stos   BYTE PTR es:[edi],al
  406f8a:	sbb    ch,BYTE PTR [ebp-0x4]
  406f8d:	adc    esi,DWORD PTR [ecx]
  406f8f:	xchg   DWORD PTR [esi+0x68d4aedc],ecx
  406f95:	cmp    eax,0x2a3ce97c
  406f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f9b:	cmc    
  406f9c:	jmp    0x406f7d
  406f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f9f:	pop    ebp
  406fa0:	js     0x406f5f
  406fa2:	mov    al,0xfa
  406fa4:	imul   BYTE PTR [edx+0xb]
  406fa7:	push   cs
  406fa8:	add    dl,ah
  406faa:	fs mov eax,0x9cdd48e3
  406fb0:	inc    edi
  406fb1:	retf   
  406fb2:	jns    0x406fc3
  406fb4:	inc    ebp
  406fb5:	leave  
  406fb6:	cdq    
  406fb7:	fistp  WORD PTR [edx-0x6a]
  406fba:	and    eax,0xf707281b
  406fbf:	mov    eax,edi
  406fc1:	(bad)
  406fc4:	retf   0x293c
  406fc7:	mov    bh,0x8c
  406fc9:	scas   al,BYTE PTR es:[edi]
  406fca:	jmp    0x32d34c36
  406fcf:	adc    bh,BYTE PTR [eax-0x1b]
  406fd2:	loopne 0x407049
  406fd4:	sub    al,BYTE PTR [ebx+0x2c]
  406fd7:	imul   edx,esp,0x1d2e1eb2
  406fdd:	gs push esp
  406fdf:	imul   eax,DWORD PTR [eax-0x36994263],0x7561b8
  406fe9:	in     al,dx
  406fea:	adc    edi,DWORD PTR [ecx+0x38]
  406fed:	jle    0x406f90
  406fef:	xchg   edx,eax
  406ff0:	(bad)  
  406ff1:	icebp  
  406ff2:	loope  0x406fdd
  406ff4:	add    al,0x3
  406ff6:	out    0x4c,eax
  406ff8:	test   eax,0xd215d12a
  406ffd:	cdq    
  406ffe:	jmp    0xb957:0xb02675ec
  407005:	or     edx,esp
  407007:	lock mov ebp,0xa4aaecb7
  40700d:	xchg   BYTE PTR [eax+0x3ac6d36e],cl
  407013:	cmp    BYTE PTR [edi+0x6456c1c],dl
  407019:	adc    al,0x35
  40701b:	push   ss
  40701c:	in     eax,dx
  40701d:	xchg   ebp,eax
  40701e:	lods   eax,DWORD PTR ds:[esi]
  40701f:	ins    BYTE PTR es:[edi],dx
  407020:	dec    edx
  407021:	cmp    BYTE PTR [edi],dh
  407023:	mov    bl,0x4
  407025:	push   esi
  407026:	lods   al,BYTE PTR ds:[esi]
  407027:	rcl    DWORD PTR [ebx-0x287d9a1f],0xa4
  40702e:	xchg   esp,eax
  40702f:	or     eax,0x87583fa7
  407034:	arpl   WORD PTR [ebx-0x208cf9dd],si
  40703a:	(bad)  
  40703b:	mov    al,ds:0xb338ff16
  407040:	mov    al,0x85
  407042:	adc    DWORD PTR [ebp+0x31],edx
  407045:	and    DWORD PTR [edx],edi
  407047:	push   esp
  407048:	fist   DWORD PTR [esp]
  40704b:	xchg   edi,eax
  40704c:	xor    eax,DWORD PTR [ebx]
  40704e:	inc    edi
  40704f:	ret    
  407050:	ss jno 0x4070ad
  407053:	loop   0x40703a
  407055:	push   ebx
  407056:	popf   
  407057:	(bad)  
  407058:	cmp    DWORD PTR [edi+0x3293c13b],esp
  40705e:	sbb    ecx,DWORD PTR [ecx+0x7d46aef2]
  407064:	add    DWORD PTR [ebx+0x53ff6a8e],edx
  40706a:	std    
  40706b:	inc    edx
  40706c:	mov    edi,0x856f17cb
  407071:	rcr    DWORD PTR [esi+edi*8],cl
  407074:	adc    DWORD PTR ds:0xa93d8af4,ebx
  40707a:	push   0xbe277d13
  40707f:	xor    ah,BYTE PTR [ecx-0x7b]
  407082:	imul   ebx,DWORD PTR [ecx+0x55435968],0x6f
  407089:	adc    dh,BYTE PTR ds:0xf83baae1
  40708f:	cmp    cl,0x76
  407092:	cmp    eax,0xc6b44c1b
  407097:	xor    DWORD PTR [ecx],0x4f4ca818
  40709d:	push   esi
  40709e:	bound  ebx,QWORD PTR fs:[ecx+0x5397ab7f]
  4070a5:	push   eax
  4070a6:	psrlw  mm4,QWORD PTR [ebx+esi*8]
  4070aa:	aaa    
  4070ab:	call   0xbef0:0x80a0db74
  4070b2:	xor    al,0x86
  4070b4:	hlt    
  4070b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b6:	popa   
  4070b7:	js     0x407072
  4070b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ba:	and    eax,0x3add431c
  4070bf:	push   es
  4070c0:	lea    ecx,[eax+0x601d3cfb]
  4070c6:	mov    ebx,ecx
  4070c8:	xlat   BYTE PTR ds:[ebx]
  4070c9:	or     ebp,DWORD PTR [ebx-0x2dfc1711]
  4070cf:	xor    al,0x8c
  4070d1:	call   0x3a8c:0x102789c5
  4070d8:	sbb    eax,0xe7cf4c2
  4070dd:	repnz dec ebx
  4070df:	add    BYTE PTR [ecx+ebx*8+0x746b3637],ch
  4070e6:	int3   
  4070e7:	ins    BYTE PTR es:[edi],dx
  4070e8:	cmp    eax,0x59a82c4b
  4070ed:	popa   
  4070ee:	call   0x79355441
  4070f3:	hlt    
  4070f4:	loopne 0x4070f3
  4070f6:	int    0x8d
  4070f8:	pusha  
  4070f9:	cmp    al,0x45
  4070fb:	out    0x5a,al
  4070fd:	adc    BYTE PTR [edi],0xa6
  407100:	daa    
  407101:	sub    BYTE PTR [ebx],al
  407103:	jnp    0x407117
  407105:	(bad)  
  407106:	iret   
  407107:	popf   
  407108:	mov    DWORD PTR [eax],eax
  40710a:	xchg   cl,al
  40710c:	test   eax,0xf53bd62
  407111:	add    BYTE PTR [ecx],dl
  407113:	mov    ds:0xe695827f,eax
  407118:	jae    0x4070fc
  40711a:	(bad)  
  40711b:	mov    DWORD PTR [edi+0x4f],esp
  40711e:	fs push 0xffffffdf
  407121:	stos   BYTE PTR es:[edi],al
  407122:	dec    edi
  407123:	cmp    BYTE PTR [esi+ebp*1-0x33],ah
  407127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407128:	push   ss
  407129:	fs pop edx
  40712b:	gs pop edx
  40712d:	rcr    DWORD PTR [esi+0x18],cl
  407130:	int    0x71
  407132:	dec    ebp
  407133:	scas   eax,DWORD PTR es:[edi]
  407134:	inc    ebp
  407135:	addr16 push esi
  407137:	and    eax,0x711b4ab0
  40713c:	pop    es
  40713d:	cmp    eax,0x59ce9df3
  407142:	call   0xff606fb6
  407147:	mov    eax,0x2dee2556
  40714c:	or     cl,BYTE PTR [edx]
  40714e:	in     eax,dx
  40714f:	xor    ecx,DWORD PTR ds:0xc4ce8fba
  407155:	ret    
  407156:	jg     0x407119
  407158:	and    DWORD PTR [edx-0x7e],ecx
  40715b:	sbb    eax,0xbe06a692
  407160:	sub    al,0x35
  407162:	dec    esi
  407163:	jb     0x407184
  407165:	push   edx
  407166:	fstp   TBYTE PTR [esi+0x8882ab4]
  40716c:	mov    esi,0xf5aa5fb7
  407171:	xor    eax,0xb2c7d7af
  407176:	add    edx,ebp
  407178:	pop    esi
  407179:	mov    eax,ecx
  40717b:	out    0x3e,eax
  40717d:	test   eax,0x66bbdeee
  407182:	pop    esp
  407183:	adc    al,0xd0
  407185:	jp     0x40718a
  407187:	addr16 add esi,ebp
  40718a:	cwde   
  40718b:	cdq    
  40718c:	push   ds
  40718d:	clc    
  40718e:	test   bl,al
  407190:	sub    eax,0x45fce59b
  407195:	mov    bh,0x37
  407197:	js     0x4071dc
  407199:	mov    al,0x54
  40719b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40719c:	sub    al,0x39
  40719e:	daa    
  40719f:	(bad)  
  4071a0:	mov    dl,0x17
  4071a2:	int    0x5d
  4071a4:	cmp    ecx,edi
  4071a6:	and    DWORD PTR [esi-0x1d],esp
  4071a9:	daa    
  4071aa:	push   ss
  4071ab:	cmp    DWORD PTR [edi],esp
  4071ad:	mov    edi,0x468cb7e
  4071b2:	mov    dh,0x2e
  4071b4:	jmp    0xdcb7e1c7
  4071b9:	sub    eax,0x6adaf1d6
  4071be:	mov    dh,0x4
  4071c0:	jnp    0x4071f1
  4071c2:	out    0xb8,eax
  4071c4:	imul   eax,DWORD PTR [eax+0x7377138b],0xa099ff7b
  4071ce:	retf   
  4071cf:	sub    edi,DWORD PTR [ecx-0x7e]
  4071d2:	sub    BYTE PTR [edx+0x72820305],bl
  4071d8:	mov    eax,0x3de6e08a
  4071dd:	out    dx,al
  4071de:	ss pop ecx
  4071e0:	fst    QWORD PTR [ecx+0x3cb173de]
  4071e6:	or     BYTE PTR [esi-0x5e650497],cl
  4071ec:	dec    ebp
  4071ed:	ret    
  4071ee:	dec    ebx
  4071ef:	shl    DWORD PTR [ecx],cl
  4071f1:	mov    ebp,0x7de0ddba
  4071f6:	xchg   edx,eax
  4071f7:	icebp  
  4071f8:	adc    dh,BYTE PTR [eax-0x5d2a5222]
  4071fe:	sbb    al,0xaf
  407200:	mov    al,0xd5
  407202:	xor    eax,0xe759ca0c
  407207:	push   edx
  407208:	jg     0x40723d
  40720a:	gs jno 0x407220
  40720d:	cmp    al,0x9b
  40720f:	mov    bl,0xfb
  407211:	aam    0x1e
  407213:	jmp    ebp
  407215:	ss cmp eax,0xff31c809
  40721b:	loopne 0x40725a
  40721d:	and    cl,ch
  40721f:	lahf   
  407220:	dec    esi
  407221:	lahf   
  407222:	inc    edi
  407223:	out    0xed,eax
  407225:	(bad)  
  407226:	in     eax,0x97
  407228:	(bad)  
  407229:	jmp    0xe18c:0x6075457f
  407230:	dec    edx
  407231:	mov    bh,0x65
  407233:	addr16 jne 0x4071de
  407236:	aas    
  407237:	fild   DWORD PTR [ecx-0x27280cf5]
  40723d:	jg     0x4071d8
  40723f:	mov    ch,0x31
  407241:	add    BYTE PTR [esi-0x58],al
  407244:	xchg   bl,ch
  407246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407247:	sbb    BYTE PTR [eax-0x66],dl
  40724a:	jecxz  0x4071f6
  40724c:	xchg   esi,eax
  40724d:	and    ch,BYTE PTR [edi-0x4b43e378]
  407253:	aad    0x9c
  407255:	mov    ecx,0xbf8f1341
  40725a:	lds    ecx,FWORD PTR [esi+0x2c03acb]
  407260:	icebp  
  407261:	out    0x41,al
  407263:	pop    ss
  407264:	popa   
  407265:	jge    0x407206
  407267:	sbb    eax,DWORD PTR [ebx]
  407269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40726a:	mov    ecx,0x9e2ce612
  40726f:	enter  0xf276,0x11
  407273:	push   ds
  407274:	icebp  
  407275:	mov    WORD PTR [ebp-0x5026e6cb],ds
  40727b:	lods   al,BYTE PTR ds:[esi]
  40727c:	aas    
  40727d:	xchg   edi,eax
  40727e:	push   ebp
  40727f:	pop    ebx
  407280:	retf   
  407281:	icebp  
  407282:	dec    edi
  407283:	je     0x4072ec
  407285:	aas    
  407286:	adc    al,0x71
  407288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407289:	es imul ebp,eax,0x11
  40728d:	mov    cl,0x3d
  40728f:	and    al,0x36
  407291:	rol    BYTE PTR [esi+0x178fa18],cl
  407297:	bound  eax,QWORD PTR [esi-0x31]
  40729a:	pop    es
  40729b:	stc    
  40729c:	cmp    ebp,DWORD PTR ds:0x7707f0d5
  4072a2:	in     al,0x21
  4072a4:	push   ebp
  4072a5:	cld    
  4072a6:	out    0x4f,al
  4072a8:	lock jns 0x4072f8
  4072ab:	cld    
  4072ac:	lahf   
  4072ad:	ret    
  4072ae:	(bad)  
  4072b0:	push   ss
  4072b1:	push   ecx
  4072b2:	xchg   BYTE PTR [ebx+0x76],dh
  4072b5:	ins    DWORD PTR es:[edi],dx
  4072b6:	or     al,BYTE PTR [edx+0x40]
  4072b9:	cwde   
  4072ba:	mov    ah,0xff
  4072bd:	inc    edx
  4072be:	xchg   esi,eax
  4072bf:	lock inc ebx
  4072c1:	push   ebp
  4072c2:	inc    ecx
  4072c3:	and    DWORD PTR [ebp-0x57646cae],eax
  4072c9:	and    al,al
  4072cb:	add    eax,0x5a8e36a6
  4072d0:	imul   ecx,DWORD PTR [eax+0x5eeb3cd5],0xffffffc1
  4072d7:	daa    
  4072d8:	gs stos BYTE PTR es:[edi],al
  4072da:	xchg   DWORD PTR [eax-0x41db5ce6],ecx
  4072e0:	jecxz  0x407327
  4072e2:	sbb    DWORD PTR ds:0x39e2c2eb,eax
  4072e8:	lods   eax,DWORD PTR ds:[esi]
  4072e9:	mov    ch,0x38
  4072eb:	cmc    
  4072ec:	pop    esp
  4072ed:	in     eax,0xfd
  4072ef:	mov    DWORD PTR [ebx-0x29],esp
  4072f2:	enter  0xca44,0x86
  4072f6:	test   BYTE PTR [ebx+0x42c41f6],al
  4072fc:	pop    ebx
  4072fd:	pop    es
  4072fe:	jb     0x40733d
  407300:	icebp  
  407301:	cs fcomip st,st(5)
  407304:	add    dl,BYTE PTR [esi]
  407306:	jl     0x4072f4
  407308:	and    cl,BYTE PTR [ecx+0x3]
  40730b:	test   DWORD PTR [ecx],ecx
  40730d:	add    DWORD PTR [ecx],0x1535de5b
  407313:	lahf   
  407314:	dec    ecx
  407315:	enter  0x6b80,0x51
  407319:	call   0x37d5:0x51a11a7c
  407320:	(bad)  
  407321:	sub    DWORD PTR [esi+0x65],edx
  407324:	cs and ebx,esp
  407327:	ret    
  407328:	test   al,0x9a
  40732b:	cmp    eax,0x72db069d
  407330:	jp     0x407337
  407332:	je     0x4073af
  407334:	ja     0x40731b
  407336:	cmp    ch,bl
  407338:	push   cs
  407339:	and    BYTE PTR [edi+0x4c69bc57],0x4e
  407340:	mov    ebp,0x902d8c65
  407345:	cmp    esp,DWORD PTR [ebx+ebx*1-0x29]
  407349:	pop    edx
  40734a:	loopne 0x407334
  40734c:	adc    eax,0x435587
  407351:	aas    
  407352:	into   
  407353:	sbb    ebp,DWORD PTR [esi+0x74afffca]
  407359:	dec    ecx
  40735a:	ret    
  40735b:	repnz aam 0xc9
  40735e:	frstor [esi-0x637e1010]
  407364:	test   al,0xa9
  407366:	mov    dl,0xf2
  407368:	fmul   st,st(4)
  40736a:	xchg   dl,dl
  40736c:	jg     0x4073d1
  40736e:	hlt    
  40736f:	ror    DWORD PTR [eax],cl
  407371:	imul   esp,DWORD PTR [esi+0x2a],0x28
  407375:	jle    0x407327
  407377:	push   ebx
  407378:	js     0x407300
  40737a:	jle    0x40732e
  40737c:	mov    edx,0x4749c0f4
  407381:	push   ebp
  407382:	inc    eax
  407383:	cdq    
  407384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407385:	fnstenv [ebx+0x44712dd9]
  40738b:	pop    edx
  40738c:	or     al,0xc5
  40738e:	iret   
  40738f:	cdq    
  407390:	mov    ah,BYTE PTR [esi+0x2e3c8614]
  407396:	mov    ebx,0x23dec71a
  40739b:	sbb    DWORD PTR [eax],ebp
  40739d:	mov    ds:0x51f1965b,al
  4073a2:	push   0x1f608b12
  4073a7:	pop    esi
  4073a8:	test   al,0x7f
  4073aa:	xor    DWORD PTR fs:[edx-0x54],0xffffffd2
  4073af:	cmp    ah,BYTE PTR [ecx]
  4073b1:	fcom   QWORD PTR [edi+0x505d80d9]
  4073b7:	(bad)  [ecx]
  4073b9:	sub    BYTE PTR [ecx+0x2c],al
  4073bc:	test   BYTE PTR ds:0xd3c542c0,dh
  4073c2:	fwait
  4073c3:	stos   BYTE PTR es:[edi],al
  4073c4:	dec    esp
  4073c5:	xchg   ebp,eax
  4073c6:	(bad)  
  4073c7:	f2xm1  
  4073c9:	pop    es
  4073ca:	pop    esi
  4073cb:	cdq    
  4073cc:	sub    eax,0x522a06d5
  4073d1:	push   ss
  4073d2:	pop    edi
  4073d3:	(bad)  
  4073d4:	inc    edx
  4073d5:	test   al,0x7f
  4073d7:	jmp    0xe899:0x48f28eca
  4073de:	adc    BYTE PTR [ebx+0x3c],ch
  4073e1:	jbe    0x407433
  4073e3:	fs inc ebx
  4073e5:	and    BYTE PTR ds:0x4a13bc32,dh
  4073eb:	je     0x407407
  4073ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ee:	add    ecx,DWORD PTR [edx+0x5a8d7bb]
  4073f4:	test   eax,0x7937c5c6
  4073f9:	adc    dx,WORD PTR [eax+0x21]
  4073fd:	jo     0x40744e
  4073ff:	(bad)  
  407400:	call   0x1bfb780d
  407405:	push   esi
  407406:	jmp    esp
  407408:	ds loope 0x40741b
  40740b:	and    eax,0xb15a0e78
  407410:	data16 jne 0x407443
  407413:	or     DWORD PTR [ebx],edi
  407415:	aas    
  407416:	push   0xa80bc2e2
  40741b:	ret    0xf4d3
  40741e:	mov    ds,ebx
  407420:	and    BYTE PTR [edi-0x7dfef619],ch
  407426:	sti    
  407427:	mov    BYTE PTR [ebx-0x73761bfa],dl
  40742d:	jbe    0x407442
  40742f:	stos   BYTE PTR es:[edi],al
  407430:	jl     0x4073ca
  407432:	mov    ch,0xe3
  407434:	xchg   ch,bl
  407436:	mov    ebx,?
  407438:	xchg   ebx,eax
  407439:	and    dl,ah
  40743b:	sar    BYTE PTR [esi+0x58],1
  40743e:	lods   al,BYTE PTR ds:[esi]
  40743f:	aad    0xc
  407441:	lods   eax,DWORD PTR ds:[esi]
  407442:	inc    DWORD PTR [eax]
  407444:	cli    
  407445:	and    DWORD PTR [ebx-0x73],edi
  407448:	das    
  407449:	fsub   DWORD PTR [esi]
  40744b:	sub    esp,esp
  40744d:	push   eax
  40744e:	cdq    
  40744f:	call   0xbe49:0x72fd7221
  407456:	je     0x407499
  407458:	mov    bl,0x46
  40745a:	inc    ebx
  40745b:	jle    0x407416
  40745d:	mov    al,ds:0x29c89502
  407462:	jp     0x407475
  407464:	xor    bl,ch
  407466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407467:	inc    esp
  407468:	inc    ecx
  407469:	scas   al,BYTE PTR es:[edi]
  40746a:	aaa    
  40746b:	rcr    BYTE PTR [eax+0x3e],0x30
  40746f:	pusha  
  407470:	xor    DWORD PTR [edx],eax
  407472:	xchg   ebp,eax
  407473:	xor    ch,al
  407475:	test   BYTE PTR [ebx],dl
  407477:	mov    eax,0x9f310f62
  40747c:	int3   
  40747d:	cld    
  40747e:	xchg   ebx,eax
  40747f:	mov    bl,0xc4
  407481:	imul   edi,ebp,0x24ef496f
  407487:	adc    eax,0x610c7cb3
  40748c:	inc    dl
  40748e:	xchg   ebp,eax
  40748f:	(bad)  
  407490:	leave  
  407491:	lods   al,BYTE PTR ds:[esi]
  407492:	outs   dx,DWORD PTR ds:[esi]
  407493:	gs pause 
  407496:	mov    al,ds:0x4b8a172
  40749b:	aam    0xc6
  40749d:	mov    ds:0x9546c0d8,al
  4074a2:	mov    ds:0x7bdbf098,eax
  4074a7:	dec    eax
  4074a8:	div    BYTE PTR [esi+0x4115c28a]
  4074ae:	fist   WORD PTR [ebp+0x55]
  4074b1:	mov    edx,0xadfaaf7f
  4074b6:	shr    eax,1
  4074b8:	inc    eax
  4074b9:	mov    dh,0xc4
  4074bb:	dec    esi
  4074bc:	popa   
  4074bd:	retf   0xe508
  4074c0:	and    esi,DWORD PTR [ecx-0x16]
  4074c3:	inc    edi
  4074c4:	pop    ebp
  4074c5:	cmp    DWORD PTR [ebx+0x52600535],esi
  4074cb:	into   
  4074cc:	sub    BYTE PTR [ebx+0x6],ch
  4074cf:	jp     0x407481
  4074d1:	sbb    bh,bh
  4074d3:	imul   esp,DWORD PTR [ebp+ebx*1+0x199b87b1],0x99b1cf71
  4074de:	ja     0x4074c2
  4074e0:	add    bh,ah
  4074e2:	int3   
  4074e3:	adc    ebp,DWORD PTR ds:0x35577189
  4074e9:	pop    ebx
  4074ea:	push   ds
  4074eb:	mov    ebx,0x5bb893cd
  4074f0:	mov    esp,0x8cf73066
  4074f5:	pop    eax
  4074f6:	push   esp
  4074f7:	cld    
  4074f8:	and    ah,BYTE PTR [edx]
  4074fa:	cmp    al,0xc6
  4074fc:	dec    esp
  4074fd:	lods   eax,DWORD PTR ds:[esi]
  4074fe:	sbb    BYTE PTR [ebx],ch
  407500:	mov    edi,0xc3467aa6
  407505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407506:	xchg   edi,eax
  407507:	pop    edi
  407508:	es adc eax,0xa532b31e
  40750e:	and    DWORD PTR [eax+0xa],ebp
  407511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407512:	push   0xffffff80
  407514:	icebp  
  407515:	cmp    edi,edi
  407517:	push   eax
  407518:	mov    ds:0x7b840602,al
  40751d:	push   edx
  40751e:	lock pushf 
  407520:	ret    0xcb6
  407523:	call   0x6990:0x428539a2
  40752a:	dec    BYTE PTR [eax+0x2ce766a0]
  407530:	cdq    
  407531:	fdiv   st,st(4)
  407533:	push   ss
  407534:	in     al,dx
  407535:	nop
  407536:	or     DWORD PTR [esi-0x26],eax
  407539:	xchg   dl,bh
  40753b:	mov    eax,0xca46fcbf
  407540:	or     edi,DWORD PTR [ecx-0x23]
  407543:	idiv   dh
  407545:	ja     0x4074f4
  407547:	xor    cl,BYTE PTR [esi+eiz*4+0x556fd6a5]
  40754e:	jbe    0x407527
  407550:	stos   DWORD PTR es:[edi],eax
  407551:	dec    eax
  407552:	mov    dh,0xc4
  407554:	scas   eax,DWORD PTR es:[edi]
  407555:	push   es
  407556:	repnz pop esi
  407558:	test   eax,0xbc02ca70
  40755d:	stos   DWORD PTR es:[edi],eax
  40755e:	xor    dh,BYTE PTR [edx+0x3c]
  407561:	mov    eax,DWORD PTR [edx+ebx*4-0x7d]
  407565:	popa   
  407566:	and    esp,DWORD PTR [eax-0x5d]
  407569:	data16 cmp dh,BYTE PTR [edi+0x3c10069a]
  407570:	in     eax,0xab
  407572:	xchg   esi,eax
  407573:	shl    BYTE PTR [ebp+0x4b4610eb],1
  407579:	out    0x7,al
  40757b:	and    al,0xab
  40757d:	into   
  40757e:	add    DWORD PTR [edi-0x7a8d88ae],ebx
  407584:	out    0x50,al
  407586:	inc    esi
  407587:	push   ecx
  407588:	out    dx,al
  407589:	inc    edi
  40758a:	mov    al,0xd0
  40758c:	inc    ecx
  40758d:	pop    ds
  40758e:	retf   0x11bc
  407591:	jg     0x407534
  407593:	lods   al,BYTE PTR ds:[esi]
  407594:	aad    0x4f
  407596:	js     0x407544
  407598:	xchg   esp,eax
  407599:	inc    ebx
  40759a:	inc    ecx
  40759b:	sahf   
  40759c:	lock push ss
  40759e:	dec    ebx
  40759f:	and    BYTE PTR [edi-0x28],bh
  4075a2:	inc    ecx
  4075a3:	jmp    0x7621:0xa7a81ead
  4075aa:	jl     0x4075d4
  4075ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ad:	mov    BYTE PTR [ecx+0x3f],dh
  4075b0:	rol    al,0x52
  4075b3:	mov    eax,ds:0x16b29110
  4075b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b9:	ret    
  4075ba:	xchg   esp,eax
  4075bb:	outs   dx,BYTE PTR ds:[esi]
  4075bc:	popf   
  4075bd:	in     al,dx
  4075be:	mov    al,0x54
  4075c0:	dec    ebp
  4075c1:	mov    eax,0xcafe884f
  4075c6:	xor    al,0x19
  4075c8:	and    BYTE PTR [edi+0x44],cl
  4075cb:	popa   
  4075cc:	mov    ds:0xde88271,al
  4075d1:	add    al,bl
  4075d3:	ret    
  4075d4:	xlat   BYTE PTR ds:[ebx]
  4075d5:	retf   
  4075d6:	dec    edx
  4075d7:	xor    esi,0x4a
  4075da:	add    BYTE PTR [eax+edx*1],cl
  4075dd:	sbb    al,0xf4
  4075df:	mov    bl,0x4e
  4075e1:	data16 mov ah,0x4f
  4075e4:	pop    ecx
  4075e5:	jp     0x407625
  4075e7:	push   edi
  4075e8:	(bad)  
  4075e9:	psraw  mm0,QWORD PTR es:[ebx]
  4075ed:	cmc    
  4075ee:	push   esi
  4075ef:	sar    DWORD PTR [ebx+0x628d1d56],cl
  4075f5:	jecxz  0x4075ca
  4075f7:	xchg   esp,eax
  4075f8:	mov    esp,DWORD PTR [edi-0x5871b6b]
  4075fe:	adc    eax,0xb3ae973b
  407603:	push   ds
  407604:	fstp   QWORD PTR [esi+0x2c]
  407607:	mov    ds:0x5e2ee1c8,eax
  40760c:	retf   
  40760d:	test   al,0xd5
  40760f:	xor    BYTE PTR [esi+0x68],dl
  407612:	pop    edx
  407613:	jle    0x407648
  407615:	(bad)
  407619:	sub    BYTE PTR [edi],al
  40761b:	or     al,0x6
  40761d:	pop    eax
  40761e:	shl    BYTE PTR [ecx],0x75
  407621:	ds inc ebp
  407623:	fs mov ebx,0xd181094
  407629:	test   eax,0xe74fe843
  40762e:	or     DWORD PTR [eax+edx*8+0xa23980e],eax
  407635:	das    
  407636:	xor    esp,DWORD PTR [esi]
  407638:	lock std 
  40763a:	ins    DWORD PTR es:[edi],dx
  40763b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40763c:	call   0x9498406d
  407641:	stos   DWORD PTR es:[edi],eax
  407642:	cmp    al,0x8c
  407644:	jmp    0x12bc:0x53c7231e
  40764b:	fcom   DWORD PTR [edx]
  40764d:	in     al,0x9b
  40764f:	inc    eax
  407650:	pop    eax
  407651:	adc    dh,BYTE PTR [ecx]
  407653:	mov    bl,0xfe
  407655:	and    DWORD PTR [edi],eax
  407657:	jl     0x407647
  407659:	mov    BYTE PTR [ebp+0x5b],bh
  40765c:	ins    DWORD PTR es:[edi],dx
  40765d:	in     eax,0x91
  40765f:	cwde   
  407660:	fidivr WORD PTR [esi-0x62]
  407663:	repz mov al,ds:0x8ae0c50
  407669:	leave  
  40766a:	out    dx,eax
  40766b:	(bad)  
  40766c:	push   ds
  40766d:	pusha  
  40766e:	shl    ah,cl
  407670:	aad    0x41
  407672:	adc    ebp,DWORD PTR [edx+esi*4-0x39]
  407676:	scas   eax,DWORD PTR es:[edi]
  407677:	mov    dh,0x88
  407679:	push   ecx
  40767a:	pop    eax
  40767b:	enter  0x21f1,0x57
  40767f:	adc    ecx,DWORD PTR [ebx-0x50d605da]
  407685:	xchg   ecx,eax
  407686:	inc    edx
  407687:	cmp    ch,al
  407689:	ret    0xdc91
  40768c:	xchg   ebp,eax
  40768d:	aam    0x52
  40768f:	mov    bh,0x4d
  407691:	sub    al,0x8a
  407693:	in     eax,0xda
  407695:	add    ebp,DWORD PTR [ebp-0x5a]
  407698:	sti    
  407699:	out    0x27,eax
  40769b:	inc    ecx
  40769c:	pop    esp
  40769d:	les    ebx,FWORD PTR [ecx+0x21a71ead]
  4076a3:	push   ss
  4076a4:	xchg   ecx,eax
  4076a5:	leave  
  4076a6:	push   edi
  4076a7:	and    esp,DWORD PTR [ebx]
  4076a9:	add    ecx,esp
  4076ab:	das    
  4076ac:	cmp    eax,0x5358ab10
  4076b1:	sbb    cl,BYTE PTR [ecx+0xf]
  4076b4:	popf   
  4076b5:	retf   
  4076b6:	sbb    eax,0xf833b178
  4076bb:	and    eax,ecx
  4076bd:	into   
  4076be:	adc    DWORD PTR [di+0x7449],ecx
  4076c3:	xchg   ecx,eax
  4076c4:	pusha  
  4076c5:	call   0xfb55:0x9323d8ae
  4076cc:	mov    edx,0xe37105ee
  4076d1:	fidiv  DWORD PTR [ecx-0x1a]
  4076d4:	loop   0x407744
  4076d6:	sahf   
  4076d7:	je     0x4076d4
  4076d9:	push   0xffffffbc
  4076db:	xchg   edx,eax
  4076dc:	push   dx
  4076de:	xor    al,0x8d
  4076e0:	or     BYTE PTR [esi+esi*8+0x7c],bl
  4076e4:	and    BYTE PTR [edi-0x7],cl
  4076e7:	leave  
  4076e8:	ins    DWORD PTR es:[edi],dx
  4076e9:	jl     0x407733
  4076eb:	test   BYTE PTR [edi+0x58fa0e02],dl
  4076f1:	inc    ecx
  4076f2:	cmp    BYTE PTR ds:0xf1ef216d,ch
  4076f8:	mov    eax,ds:0xf6d8dd0f
  4076fd:	stos   DWORD PTR es:[edi],eax
  4076fe:	or     ecx,DWORD PTR [si-0x4897]
  407703:	test   DWORD PTR [eax+0x7e],0xbd65a02a
  40770a:	adc    bh,bh
  40770c:	pop    eax
  40770d:	ds stc 
  40770f:	arpl   WORD PTR ds:0x365845c7,bp
  407715:	mov    al,0x2f
  407717:	(bad)  
  407718:	dec    ebp
  407719:	add    DWORD PTR [ebp-0x6009c890],0x49
  407720:	xchg   ecx,eax
  407721:	imul   ebx,DWORD PTR ds:0xdd0feb8f,0x54
  407728:	dec    esp
  407729:	push   eax
  40772a:	dec    esp
  40772b:	ja     0x40775b
  40772d:	sbb    ebx,DWORD PTR [eax-0x5f]
  407730:	sar    BYTE PTR [eax+0x19fbcf9a],0x81
  407737:	fs push ebp
  407739:	inc    al
  40773b:	dec    eax
  40773c:	mov    al,ds:0x555d649f
  407741:	adc    al,0xad
  407743:	clc    
  407744:	mov    gs,eax
  407746:	push   esi
  407747:	mov    dh,bh
  407749:	push   0xb2624f28
  40774e:	mov    BYTE PTR [ebx+ecx*2-0x13],bh
  407752:	and    ebx,DWORD PTR [esi]
  407754:	shr    DWORD PTR [ecx],1
  407756:	cli    
  407757:	stos   BYTE PTR es:[edi],al
  407758:	fsubr  QWORD PTR [edx-0x3c]
  40775b:	mov    esp,0xe2e56c61
  407760:	or     eax,0x191d7802
  407765:	int    0xfc
  407767:	outs   dx,BYTE PTR ds:[esi]
  407768:	dec    ebp
  407769:	jmp    0x407743
  40776b:	jmp    0xe53e69ea
  407770:	cmp    ebx,DWORD PTR [edx-0x28]
  407773:	mov    edi,0x8dca6a22
  407779:	test   bl,0xa1
  40777c:	add    eax,0x7ae87fc9
  407781:	retf   
  407782:	call   0xb435:0xb37ca381
  407789:	push   ecx
  40778a:	test   BYTE PTR [eax],al
  40778c:	jmp    0x407713
  40778e:	es nop
  407790:	pop    esi
  407791:	xor    BYTE PTR [edi-0x3],al
  407794:	or     DWORD PTR [esi+0x4f],0x9fd9c7e5
  40779b:	adc    DWORD PTR [eax],ebp
  40779d:	dec    esi
  40779e:	push   edi
  40779f:	lods   al,BYTE PTR ds:[esi]
  4077a0:	cmp    ah,BYTE PTR [esi]
  4077a2:	xchg   esi,eax
  4077a3:	dec    esi
  4077a4:	rol    eax,0x73
  4077a7:	ins    DWORD PTR es:[edi],dx
  4077a8:	pop    esi
  4077a9:	lds    ecx,FWORD PTR [edx+0x15f43512]
  4077af:	shr    BYTE PTR [esi-0x24],1
  4077b2:	aam    0x2a
  4077b4:	sahf   
  4077b5:	add    BYTE PTR [ecx-0x30],0x94
  4077b9:	aad    0xad
  4077bb:	push   ds
  4077bc:	xchg   DWORD PTR [esi-0x6a],ecx
  4077bf:	mov    eax,ds:0x45850abd
  4077c4:	inc    ecx
  4077c5:	pop    es
  4077c6:	or     al,0xbd
  4077c8:	arpl   si,bx
  4077ca:	lods   eax,DWORD PTR ds:[esi]
  4077cb:	mov    ds:0x8c99e908,al
  4077d0:	hlt    
  4077d1:	or     edx,DWORD PTR [ebx-0x1]
  4077d4:	in     eax,0x6e
  4077d6:	add    eax,0x5fd2a5fb
  4077db:	popa   
  4077dc:	popa   
  4077dd:	scas   eax,DWORD PTR es:[edi]
  4077de:	xor    eax,DWORD PTR [ecx+0x32b35f7e]
  4077e4:	add    dh,BYTE PTR [eax+ebp*4]
  4077e7:	nop
  4077e8:	callw  0x35dd
  4077ec:	in     al,0x1e
  4077ee:	sbb    DWORD PTR [eax+0x2e],eax
  4077f1:	mov    ah,bl
  4077f3:	scas   eax,DWORD PTR es:[edi]
  4077f4:	ss inc ebp
  4077f6:	xchg   edx,eax
  4077f7:	jno    0x40782d
  4077f9:	add    al,0xcd
  4077fb:	push   ecx
  4077fc:	pusha  
  4077fd:	adc    eax,0x5d98a7aa
  407802:	pop    edi
  407803:	mov    bh,0xff
  407805:	lahf   
  407806:	cmp    DWORD PTR [ecx-0x2e],eax
  407809:	mov    BYTE PTR [ecx],bl
  40780b:	xor    eax,DWORD PTR [edi-0x28]
  40780e:	jg     0x407854
  407810:	ficom  WORD PTR [esi+eax*1-0x36]
  407814:	mov    al,ds:0x9d095246
  407819:	xor    eax,0xf80c50f0
  40781e:	outs   dx,BYTE PTR ds:[esi]
  40781f:	jbe    0x40783c
  407821:	imul   edi,DWORD PTR [esi+0x540388f2],0x71b66ec
  40782b:	enter  0x64ca,0xf2
  40782f:	inc    edx
  407830:	inc    edi
  407831:	sbb    esi,DWORD PTR [eax]
  407833:	pushf  
  407834:	fiadd  WORD PTR [edx-0x179c4d0b]
  40783a:	xor    al,ah
  40783c:	sti    
  40783d:	into   
  40783e:	pop    edx
  40783f:	mov    ds:0x69183377,eax
  407844:	dec    ebp
  407845:	or     bh,ch
  407847:	test   al,0xee
  407849:	xchg   ecx,eax
  40784a:	and    edx,0x3a883e07
  407850:	int3   
  407851:	scas   al,BYTE PTR es:[edi]
  407852:	popa   
  407853:	push   esp
  407854:	or     edx,DWORD PTR [eax+0x75f02102]
  40785a:	push   ebx
  40785b:	cmc    
  40785c:	mov    ebp,0xfb74748d
  407861:	(bad)  
  407862:	mov    edx,0x313ab70a
  407867:	mov    edx,0x9792d3cd
  40786c:	(bad)  
  40786d:	fs into 
  40786f:	out    0x12,eax
  407871:	mov    bh,0x78
  407873:	aad    0xd8
  407875:	xchg   esp,eax
  407876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407877:	data16 clc 
  407879:	xor    eax,0xdc2c3ced
  40787e:	outs   dx,DWORD PTR ds:[esi]
  40787f:	stos   DWORD PTR es:[edi],eax
  407880:	xor    bh,BYTE PTR [esi+0x5507d926]
  407886:	mov    ecx,0x9113e057
  40788b:	(bad)  [ecx+0x5de6dee8]
  407891:	xchg   edi,eax
  407892:	test   eax,0x5a83b843
  407897:	retf   
  407898:	xor    al,0x72
  40789a:	push   ebx
  40789b:	sub    esi,esi
  40789d:	je     0x407897
  40789f:	sbb    eax,0x68522e9a
  4078a4:	rcr    DWORD PTR [ecx+0x476f06fc],1
  4078aa:	mov    bh,0x7f
  4078ac:	imul   edi,DWORD PTR [edx+0x57],0x44
  4078b0:	rcl    DWORD PTR [eax],cl
  4078b2:	jo     0x407875
  4078b4:	mov    bh,0x7c
  4078b6:	and    BYTE PTR [edi-0x6a],ch
  4078b9:	jg     0x40793a
  4078bb:	and    DWORD PTR [esi+edi*1-0x6b],ecx
  4078bf:	aas    
  4078c0:	add    DWORD PTR [ebp-0x139840d3],esp
  4078c6:	xchg   esi,eax
  4078c7:	mov    BYTE PTR [ebp+0x349ab29d],cl
  4078cd:	mov    ah,0x2b
  4078cf:	add    eax,0x217d3365
  4078d4:	int3   
  4078d5:	xor    dh,al
  4078d7:	sub    ah,BYTE PTR [edi]
  4078d9:	and    al,0xb5
  4078db:	gs pushf 
  4078dd:	(bad)  
  4078de:	cmp    ebp,DWORD PTR [edi]
  4078e0:	or     al,0xec
  4078e2:	and    al,0x79
  4078e4:	push   eax
  4078e5:	push   0xaa36e59e
  4078ea:	cld    
  4078eb:	add    BYTE PTR [edx+0x4884e784],al
  4078f1:	sub    al,0x5d
  4078f3:	outs   dx,DWORD PTR ds:[esi]
  4078f4:	mov    dl,BYTE PTR [edx-0x6a99ad87]
  4078fa:	out    dx,eax
  4078fb:	mov    cl,0x38
  4078fd:	ins    DWORD PTR es:[edi],dx
  4078fe:	sahf   
  4078ff:	push   ecx
  407900:	mov    bl,0x4f
  407902:	rcr    DWORD PTR [eax],0xa4
  407905:	cmp    eax,0xf4398edd
  40790a:	dec    esi
  40790b:	inc    edx
  40790c:	(bad)  
  40790d:	ficom  WORD PTR [edx+0x57053dc9]
  407913:	outs   dx,DWORD PTR ds:[esi]
  407914:	call   0x9455:0x6ef4ee45
  40791b:	jmp    0x4078b6
  40791d:	mov    ebx,0xce84fd7
  407922:	pushf  
  407923:	jne    0x40799b
  407925:	pushf  
  407926:	pop    esi
  407927:	(bad)  
  407928:	mov    dh,0x8d
  40792a:	mov    ah,0xb3
  40792c:	and    ebp,eax
  40792e:	in     ax,0xda
  407931:	nop
  407932:	mov    ebx,ebp
  407934:	mov    ah,0xf2
  407936:	xchg   esi,eax
  407937:	in     al,0x6e
  407939:	mov    ebp,0xa46e6d08
  40793e:	push   ss
  40793f:	and    ebx,ebx
  407941:	in     al,dx
  407942:	ss or  al,0x10
  407945:	lods   al,BYTE PTR ds:[esi]
  407946:	pop    edx
  407947:	div    BYTE PTR [edi+0x45]
  40794a:	retf   0xdb5b
  40794d:	xchg   DWORD PTR [edx],esi
  40794f:	aam    0xc
  407951:	xchg   ebp,eax
  407952:	into   
  407953:	cdq    
  407954:	in     eax,dx
  407955:	cmp    DWORD PTR [ecx],ebp
  407957:	icebp  
  407958:	dec    ebp
  407959:	push   ss
  40795a:	addr16 or ecx,esi
  40795d:	pop    ecx
  40795e:	or     al,0xd3
  407960:	scas   al,BYTE PTR es:[edi]
  407961:	ins    DWORD PTR es:[edi],dx
  407962:	inc    esi
  407963:	outs   dx,DWORD PTR ds:[esi]
  407964:	pop    eax
  407965:	mov    di,0xf844
  407969:	xor    al,BYTE PTR [ebx+0x72]
  40796c:	xor    DWORD PTR [ebx-0x78],ebp
  40796f:	retf   0xd30c
  407972:	neg    bl
  407974:	adc    eax,0x7c5b3abd
  407979:	jle    0x407932
  40797b:	mov    esi,0xee92b40a
  407980:	adc    eax,0x6680a909
  407985:	(bad)  
  407986:	sub    esp,DWORD PTR [bp+si]
  407989:	mov    esi,0x6e2e70d3
  40798e:	aas    
  40798f:	and    BYTE PTR [esi],al
  407991:	popa   
  407992:	cmp    edi,DWORD PTR [ecx]
  407994:	lods   eax,DWORD PTR ds:[esi]
  407995:	test   al,0x61
  407997:	mov    ds:0xd0cc59c3,eax
  40799c:	sahf   
  40799d:	sub    ah,bh
  40799f:	dec    eax
  4079a0:	int3   
  4079a1:	ja     0x407947
  4079a3:	jmp    0x4079e1
  4079a5:	push   ds
  4079a6:	icebp  
  4079a7:	into   
  4079a8:	cmp    eax,0xed95c3f0
  4079ad:	inc    esi
  4079ae:	lock xor eax,DWORD PTR [edi]
  4079b1:	dec    edi
  4079b2:	mov    eax,DWORD PTR [eax+ecx*2]
  4079b5:	xor    esi,DWORD PTR [edi-0xc]
  4079b8:	jae    0x407945
  4079ba:	xor    ax,0x2cd6
  4079be:	in     eax,0x87
  4079c0:	fisttp DWORD PTR [ebp+0x2a]
  4079c3:	cwde   
  4079c4:	pop    ebp
  4079c5:	out    0x1e,eax
  4079c7:	fld    TBYTE PTR [eax]
  4079c9:	xchg   esi,eax
  4079ca:	push   0x170672e5
  4079cf:	sbb    al,0x6a
  4079d1:	xchg   edx,eax
  4079d2:	and    DWORD PTR [edi-0x27],0x7bd1a778
  4079d9:	leave  
  4079da:	(bad)  
  4079db:	cmp    ebx,DWORD PTR [esi-0x55]
  4079de:	xchg   edi,eax
  4079df:	mov    ebp,0x2b42e6dd
  4079e4:	retf   
  4079e5:	xchg   edi,eax
  4079e6:	sbb    esp,DWORD PTR [ebp+edi*8-0x2eaea3cf]
  4079ed:	cmp    eax,0x11c43dac
  4079f2:	sub    esi,DWORD PTR [ebx-0x3e]
  4079f5:	cmp    dl,BYTE PTR [edx-0x39cd2c4d]
  4079fb:	mov    ds:0xb9fd26f9,al
  407a00:	push   0x5cd8b8ab
  407a05:	mov    cl,0xf7
  407a07:	inc    DWORD PTR [edx]
  407a09:	rcr    DWORD PTR [edi-0x7f97674b],1
  407a0f:	sub    al,0x8e
  407a11:	sbb    al,0xc3
  407a13:	dec    edx
  407a14:	adc    al,0xe8
  407a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a17:	int    0x37
  407a19:	loop   0x407a3f
  407a1b:	add    eax,edi
  407a1d:	push   ebp
  407a1e:	cmc    
  407a1f:	jb     0x4079df
  407a21:	sbb    al,0x96
  407a23:	adc    eax,0xb4ab0786
  407a28:	jns    0x4079cf
  407a2a:	imul   edi,DWORD PTR [edi],0xa5af8bde
  407a30:	ja     0x407aa1
  407a32:	mov    al,ds:0x3a544ee8
  407a37:	inc    esi
  407a38:	retf   
  407a39:	ja     0x407a1d
  407a3b:	add    al,0x1d
  407a3d:	push   edx
  407a3e:	les    ecx,FWORD PTR [esi-0x7b182e1]
  407a44:	and    BYTE PTR [ebp+0x69],0x8d
  407a48:	sbb    DWORD PTR [eax-0x3cbedbb1],edx
  407a4e:	fwait
  407a4f:	and    eax,0x5774393a
  407a54:	and    ah,al
  407a56:	stc    
  407a57:	rol    DWORD PTR [ebp+0x5de7ecb0],1
  407a5d:	sbb    eax,esp
  407a5f:	loopne 0x407a01
  407a61:	push   0x6ac3605c
  407a66:	xchg   esi,eax
  407a67:	mov    eax,ds:0x35900a0b
  407a6c:	xchg   cl,ch
  407a6e:	fild   WORD PTR [edi+0x2640b896]
  407a74:	jg     0x4079f9
  407a76:	pop    esi
  407a77:	sub    edi,DWORD PTR [eax+esi*1]
  407a7a:	fs loope 0x407ac2
  407a7d:	int3   
  407a7e:	sti    
  407a7f:	rol    DWORD PTR [edx+0x76],1
  407a82:	jbe    0x407aae
  407a84:	cwde   
  407a85:	xor    DWORD PTR [edx+0x6d05bf20],ebx
  407a8b:	pop    ecx
  407a8c:	dec    eax
  407a8d:	mov    esi,0x822cef59
  407a92:	daa    
  407a93:	jo     0x407a54
  407a95:	test   eax,0x7881a82
  407a9a:	xchg   ebx,eax
  407a9b:	mov    edx,0x5504534e
  407aa0:	retf   
  407aa1:	ret    0x62a0
  407aa4:	jmp    0x407a2b
  407aa6:	and    al,0x7b
  407aa8:	adc    dh,BYTE PTR [edi-0x6a480cd6]
  407aae:	push   eax
  407aaf:	dec    edx
  407ab0:	pop    esp
  407ab1:	add    BYTE PTR [ecx-0x5beef935],0x83
  407ab8:	mov    DWORD PTR [ebp+0xc25f3ea],esp
  407abe:	jbe    0x407a6c
  407ac0:	add    eax,0xe4657efa
  407ac5:	mov    WORD PTR [edx],ss
  407ac7:	test   eax,0xd565fe07
  407acc:	aas    
  407acd:	repz add DWORD PTR [edi],esp
  407ad0:	push   edi
  407ad1:	aaa    
  407ad2:	(bad)  
  407ad3:	fsubr  QWORD PTR [edi*2-0x5ae69896]
  407ada:	cmp    BYTE PTR [edi-0x2e],bh
  407add:	ss mov cl,0xd2
  407ae0:	scas   eax,DWORD PTR es:[edi]
  407ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae2:	cmc    
  407ae3:	add    al,0x58
  407ae5:	adc    edi,DWORD PTR [eax-0x28]
  407ae8:	jbe    0x407a6f
  407aea:	jp     0x407b57
  407aec:	add    ebx,DWORD PTR [ebx+0x6a9b67cd]
  407af2:	ss xchg edi,eax
  407af4:	loope  0x407a7d
  407af6:	or     eax,0x51708507
  407afb:	and    BYTE PTR [edi+0x5edace95],0x90
  407b02:	sub    eax,0xfcf1ee5e
  407b07:	bound  ecx,QWORD PTR [eax+eiz*8-0x39ff14a]
  407b0e:	sbb    DWORD PTR [ebx-0x5bab674d],edx
  407b14:	das    
  407b15:	push   esp
  407b16:	retf   0x6ccb
  407b19:	outs   dx,DWORD PTR ds:[esi]
  407b1a:	or     ebx,edi
  407b1c:	mov    es,WORD PTR [edx]
  407b1e:	push   0x23
  407b20:	mov    ds:0x1b958279,eax
  407b25:	js     0x407b8b
  407b27:	inc    DWORD PTR [ecx]
  407b29:	xchg   ebp,eax
  407b2a:	sbb    DWORD PTR [ecx-0x56],edx
  407b2d:	pop    ecx
  407b2e:	jle    0x407b64
  407b30:	fwait
  407b31:	or     al,0x6a
  407b33:	or     BYTE PTR [edx+0x7e],cl
  407b36:	imul   ebx,DWORD PTR [ecx+0x53e1cc90],0xbcbb5b48
  407b40:	in     eax,0x7d
  407b42:	xor    bh,BYTE PTR [esi+ebx*2]
  407b45:	xor    dl,BYTE PTR [esi]
  407b47:	lock imul edi,DWORD PTR [eax],0xaeea458a
  407b4e:	outs   dx,BYTE PTR ds:[esi]
  407b4f:	pop    edx
  407b50:	popa   
  407b51:	call   0x3a387d3c
  407b56:	jno    0x407ae4
  407b58:	dec    ebx
  407b59:	fs aad 0x2c
  407b5c:	cmp    al,BYTE PTR [ebx-0x32]
  407b5f:	hlt    
  407b60:	mov    bh,0xf0
  407b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b63:	and    DWORD PTR [edi+0x15f33116],ecx
  407b69:	fcom   QWORD PTR [ebp+0x2b0539d9]
  407b6f:	(bad)  
  407b70:	ja     0x407ba4
  407b72:	icebp  
  407b73:	xchg   ecx,eax
  407b74:	mov    al,0xcb
  407b76:	dec    ecx
  407b77:	out    dx,eax
  407b78:	push   0x1eb924c4
  407b7d:	imul   dh
  407b7f:	xor    al,0x64
  407b81:	push   ebx
  407b82:	or     bh,al
  407b84:	push   es
  407b85:	push   ebx
  407b86:	dec    esi
  407b87:	mov    eax,ds:0x5096d5e7
  407b8c:	imul   ebp,DWORD PTR [eax],0x75f5a5c2
  407b92:	sbb    eax,0xe6eedb3d
  407b97:	jmp    0x9ccb:0xa4395c21
  407b9e:	xor    ecx,ebp
  407ba0:	sbb    al,BYTE PTR [edi]
  407ba2:	or     edx,ebx
  407ba4:	xor    edx,DWORD PTR [ecx+0x4cfb225c]
  407baa:	(bad)  
  407bab:	xchg   esp,eax
  407bac:	int    0x68
  407bae:	lods   al,BYTE PTR ds:[esi]
  407baf:	or     ch,dl
  407bb1:	outs   dx,BYTE PTR ds:[esi]
  407bb2:	inc    edi
  407bb3:	push   0xca552c84
  407bb8:	mov    esp,0x1bbd9b0a
  407bbd:	push   ebp
  407bbe:	test   eax,ecx
  407bc0:	imul   eax,edi,0x8c2318e9
  407bc6:	add    BYTE PTR [ebx+0x7b],0x25
  407bca:	sub    eax,0x39cfe4eb
  407bcf:	sub    esp,DWORD PTR [ecx+0x3e]
  407bd2:	or     di,WORD PTR [eax-0x2]
  407bd6:	aaa    
  407bd7:	push   ecx
  407bd8:	(bad)  [esi]
  407bda:	mov    eax,ds:0xc4d644ee
  407bdf:	mov    ecx,DWORD PTR [esi+0x546e8d9c]
  407be5:	daa    
  407be6:	jl     0x407b7f
  407be8:	or     al,0xb7
  407bea:	(bad)  
  407beb:	jle    0x407b92
  407bed:	dec    edx
  407bee:	jne    0x407bf7
  407bf0:	clc    
  407bf1:	xchg   BYTE PTR [esi],dh
  407bf3:	mov    ecx,0xe7b5edfa
  407bf8:	adc    edx,ebp
  407bfa:	test   DWORD PTR [esp+0x31e54743],ebx
  407c01:	outs   dx,DWORD PTR ds:[esi]
  407c02:	jg     0x407b9b
  407c04:	imul   edx,DWORD PTR [edi+eax*8+0x22],0xe1ff446b
  407c0c:	cli    
  407c0d:	mov    ch,0xea
  407c0f:	mov    ah,0x85
  407c11:	sahf   
  407c12:	dec    DWORD PTR [edx+eax*1+0x6c]
  407c16:	addr16 mov ebx,0xc8f95e74
  407c1c:	in     eax,dx
  407c1d:	xchg   ecx,eax
  407c1e:	icebp  
  407c1f:	sub    edi,eax
  407c21:	xchg   BYTE PTR [ebp+0x2e91b2c9],dh
  407c27:	das    
  407c28:	pop    eax
  407c29:	push   edi
  407c2a:	sbb    ebp,DWORD PTR [ecx+0x2f]
  407c2d:	xchg   edi,eax
  407c2e:	jb     0xe1abea4a
  407c34:	add    ebx,DWORD PTR [esi]
  407c36:	aaa    
  407c37:	scas   al,BYTE PTR es:[edi]
  407c38:	add    DWORD PTR [edi+0x1c264412],ecx
  407c3e:	mov    eax,0xa7ace61d
  407c43:	fnstsw WORD PTR [edx]
  407c45:	sbb    ecx,edx
  407c47:	push   ebp
  407c48:	pop    ds
  407c49:	loope  0x407c37
  407c4b:	stos   DWORD PTR es:[edi],eax
  407c4c:	outs   dx,BYTE PTR ds:[esi]
  407c4d:	lahf   
  407c4e:	shl    BYTE PTR [edx+0x72],0x59
  407c52:	stc    
  407c53:	fstp   QWORD PTR [edx]
  407c55:	xchg   edi,eax
  407c56:	cmc    
  407c57:	push   ebp
  407c58:	fisub  WORD PTR [eax+0x6381f95f]
  407c5e:	mov    ebp,0xaf462876
  407c63:	xchg   dl,cl
  407c65:	shl    DWORD PTR [eax-0xd94d7a],1
  407c6b:	fsubr  st(4),st
  407c6d:	test   eax,0xe5f30aa0
  407c72:	fcmovu st,st(7)
  407c74:	add    eax,0x3067d620
  407c79:	(bad)  
  407c7a:	xchg   ebp,eax
  407c7b:	dec    ecx
  407c7c:	pop    es
  407c7d:	xchg   edi,eax
  407c7e:	ss adc eax,eax
  407c81:	adc    DWORD PTR [ecx],ebp
  407c83:	div    DWORD PTR [ecx-0x72]
  407c86:	xor    BYTE PTR [ecx],ah
  407c88:	lahf   
  407c89:	fsubr  st(6),st
  407c8b:	je     0x407c45
  407c8d:	andnps xmm7,XMMWORD PTR [eiz*4+0x6d8a2ee5]
  407c95:	int    0x33
  407c97:	icebp  
  407c98:	icebp  
  407c99:	sub    BYTE PTR [ebx-0x294c0ce0],ah
  407c9f:	xchg   ebx,eax
  407ca0:	scas   al,BYTE PTR es:[edi]
  407ca1:	or     al,0xbc
  407ca3:	stc    
  407ca4:	sbb    BYTE PTR [edi+0x34],0x97
  407ca8:	cli    
  407ca9:	ins    BYTE PTR es:[edi],dx
  407caa:	and    eax,0xb82a0a2b
  407caf:	fidivr WORD PTR [ecx+0x11a647c6]
  407cb5:	cli    
  407cb6:	xchg   edi,eax
  407cb7:	pop    es
  407cb8:	xchg   ebx,eax
  407cb9:	and    ebp,DWORD PTR [eax]
  407cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cbc:	shl    bh,0x87
  407cbf:	or     DWORD PTR [edi+0x67],edi
  407cc2:	mov    ecx,0xb446a208
  407cc7:	inc    esi
  407cc8:	js     0x407c4d
  407cca:	cwde   
  407ccb:	iret   
  407ccc:	jg     0x407c6b
  407cce:	daa    
  407ccf:	aaa    
  407cd0:	lds    edx,FWORD PTR [ebx+0x2f262490]
  407cd6:	scas   eax,DWORD PTR es:[edi]
  407cd7:	jle    0x407d13
  407cd9:	or     eax,0x2fdbd1f2
  407cde:	jbe    0x407cba
  407ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce1:	sbb    al,dh
  407ce3:	inc    esi
  407ce4:	jne    0x407cd8
  407ce6:	sbb    ebp,DWORD PTR [eax+esi*4+0x1a253891]
  407ced:	inc    eax
  407cee:	fucom  st(0)
  407cf0:	mov    ch,0xc9
  407cf2:	in     eax,dx
  407cf3:	ror    ebx,1
  407cf5:	ins    BYTE PTR es:[edi],dx
  407cf6:	es lock popf 
  407cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cfa:	fidivr DWORD PTR [edx-0x61]
  407cfd:	sub    al,0xe2
  407cff:	mov    ds:0x8df527d,eax
  407d04:	retf   
  407d05:	test   DWORD PTR [edx+0xa],eax
  407d08:	mov    ds,WORD PTR [ecx+esi*4-0xa89af34]
  407d0f:	stos   DWORD PTR es:[edi],eax
  407d10:	aad    0x61
  407d12:	cmp    al,0x5f
  407d14:	add    BYTE PTR [edi+0x37],dh
  407d17:	mov    eax,0xbc0b8b90
  407d1c:	int    0x1
  407d1e:	leave  
  407d1f:	lock xor al,0x9f
  407d22:	ins    BYTE PTR es:[edi],dx
  407d23:	mov    al,0xca
  407d25:	sbb    dl,dh
  407d27:	ret    0xaf9d
  407d2a:	stc    
  407d2b:	add    ecx,esi
  407d2d:	(bad)  
  407d2e:	fcmovbe st,st(4)
  407d30:	call   0x1d1c58b0
  407d35:	cmc    
  407d36:	scas   eax,DWORD PTR es:[edi]
  407d37:	fldcw  WORD PTR [eax+0x4a]
  407d3a:	mov    cl,bh
  407d3c:	jl     0x407cde
  407d3e:	lods   al,BYTE PTR ds:[esi]
  407d3f:	push   edx
  407d40:	sar    ebp,0x36
  407d43:	movups xmm1,XMMWORD PTR ds:0x9b923087
  407d4a:	pop    ecx
  407d4b:	pop    edx
  407d4c:	or     al,BYTE PTR [edi+ebx*1-0x47]
  407d50:	call   0xe3a4:0x952f5a12
  407d57:	pop    es
  407d58:	repnz sar DWORD PTR ds:0xd734506d,1
  407d5f:	into   
  407d60:	inc    edi
  407d61:	xor    eax,0x805bb409
  407d66:	nop
  407d67:	pop    ds
  407d68:	setle  BYTE PTR ds:0xc072d046
  407d6f:	dec    esp
  407d70:	and    DWORD PTR [edx-0xc],esp
  407d73:	fs (bad) 
  407d75:	ret    
  407d76:	and    eax,0xac0b2b19
  407d7b:	adc    al,BYTE PTR [edi+0x4e]
  407d7e:	dec    esi
  407d7f:	mov    bl,0xa2
  407d81:	sbb    bh,BYTE PTR [edi-0x4c]
  407d84:	and    DWORD PTR [edi+0x1a0c4f70],edi
  407d8a:	aam    0x3a
  407d8c:	and    eax,0x5178a956
  407d91:	pusha  
  407d92:	fs pop ecx
  407d94:	mov    cl,0xff
  407d96:	inc    ebx
  407d97:	clc    
  407d98:	xor    ch,dh
  407d9a:	push   ds
  407d9b:	fwait
  407d9c:	xchg   DWORD PTR [esp+esi*4],ecx
  407d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da0:	sub    cl,ah
  407da2:	push   0x49
  407da4:	and    ecx,DWORD PTR [ecx+0x479620ec]
  407daa:	inc    edx
  407dab:	enter  0x5f82,0x19
  407daf:	sbb    esp,DWORD PTR [eax]
  407db1:	sub    al,0xd3
  407db3:	cmp    edi,ecx
  407db5:	mov    ebp,0xbc6c2d87
  407dba:	stc    
  407dbb:	jo     0x407d4f
  407dbd:	mov    dl,0x60
  407dbf:	mov    BYTE PTR [eax],bl
  407dc1:	cmp    DWORD PTR [ebx],esp
  407dc3:	inc    eax
  407dc4:	mov    eax,ds:0x6bfa6257
  407dc9:	je     0x407d7a
  407dcb:	inc    edx
  407dcc:	add    BYTE PTR [ebx-0xbe9b8b],ch
  407dd2:	push   esi
  407dd3:	jnp    0x407da2
  407dd5:	fcom   QWORD PTR [edx-0x15]
  407dd8:	and    ebx,DWORD PTR [edi]
  407dda:	test   ecx,0xbad0a9de
  407de0:	and    eax,0x6321c51f
  407de5:	nop
  407de6:	push   0x399eb6a2
  407deb:	inc    edi
  407dec:	pop    esi
  407ded:	sub    ah,al
  407def:	jbe    0x407d87
  407df1:	ret    
  407df2:	pop    ss
  407df3:	mov    ?,WORD PTR [ecx+edi*4]
  407df6:	jmp    0xa6a1c539
  407dfb:	sub    al,0x34
  407dfd:	adc    al,0x1f
  407dff:	xchg   edi,eax
  407e00:	fsubr  DWORD PTR [ebx+ebx*1]
  407e03:	mov    al,0x9c
  407e05:	mov    ebp,0x255061df
  407e0a:	xchg   edx,eax
  407e0b:	daa    
  407e0c:	idiv   DWORD PTR [ebp+0x1b]
  407e0f:	arpl   WORD PTR [ebx+0x57],dx
  407e12:	cmp    al,0x91
  407e14:	in     al,0x12
  407e16:	ror    BYTE PTR [edx+0x11],cl
  407e19:	and    bh,dl
  407e1b:	imul   eax,edx,0xd86b5d31
  407e21:	adc    BYTE PTR [edx-0x43],dl
  407e24:	jb     0x407e65
  407e26:	and    al,dh
  407e28:	loope  0x407e1a
  407e2a:	jg     0x407ddf
  407e2c:	push   cs
  407e2d:	push   es
  407e2e:	repz jne 0x407e51
  407e31:	pop    edx
  407e32:	ins    DWORD PTR es:[edi],dx
  407e33:	ficomp DWORD PTR [ecx+0x46]
  407e36:	ins    DWORD PTR es:[edi],dx
  407e37:	shl    dl,1
  407e39:	adc    al,0x7a
  407e3b:	pop    eax
  407e3c:	iret   
  407e3d:	in     eax,dx
  407e3e:	adc    al,0x82
  407e40:	pusha  
  407e41:	jmp    0x407dc6
  407e43:	jae    0x407e05
  407e45:	inc    edx
  407e46:	mov    ds:0x55cccf61,eax
  407e4b:	mov    cl,0xb1
  407e4d:	sub    BYTE PTR [ecx+0x15c84870],ah
  407e53:	cmp    eax,0xe3195963
  407e58:	test   eax,0xe45b86b9
  407e5d:	inc    edx
  407e5e:	mov    DWORD PTR [ebp+0x7a],esi
  407e61:	cmpxchg eax,edx
  407e64:	pop    esp
  407e65:	jmp    0xe8781238
  407e6a:	rcr    DWORD PTR [eax],1
  407e6c:	sub    bh,BYTE PTR [edi]
  407e6e:	in     eax,dx
  407e6f:	jg     0x407ed8
  407e71:	ds daa 
  407e73:	dec    esi
  407e74:	ds (bad) 
  407e76:	outs   dx,DWORD PTR ds:[esi]
  407e77:	jl     0x407edc
  407e79:	stos   DWORD PTR es:[edi],eax
  407e7a:	out    0x4,eax
  407e7c:	jns    0x407ee5
  407e7e:	sahf   
  407e7f:	pop    edx
  407e80:	push   ebp
  407e81:	mov    eax,0xad64d50c
  407e86:	loop   0x407e5f
  407e88:	iret   
  407e89:	push   esi
  407e8a:	xchg   edi,eax
  407e8b:	dec    ebx
  407e8c:	stos   DWORD PTR es:[edi],eax
  407e8d:	daa    
  407e8e:	inc    ebp
  407e8f:	push   es
  407e90:	lsl    esi,WORD PTR [edx+0x4c]
  407e94:	inc    ebp
  407e95:	lods   eax,DWORD PTR ds:[esi]
  407e96:	jecxz  0x407e26
  407e98:	or     DWORD PTR [ecx],ebp
  407e9a:	inc    ebx
  407e9b:	or     BYTE PTR [ebp+0x4779c9c8],ch
  407ea1:	call   0x847a:0xcd5e4e18
  407ea8:	int    0xc3
  407eaa:	test   eax,0x429c1737
  407eaf:	mov    ecx,0xa9608584
  407eb4:	add    DWORD PTR [ecx-0x35],0x3556aa74
  407ebb:	not    BYTE PTR [ecx-0x7c6a51ae]
  407ec1:	jnp    0x407f3d
  407ec3:	cli    
  407ec4:	outs   dx,DWORD PTR ds:[esi]
  407ec5:	daa    
  407ec6:	mov    fs,WORD PTR [esi]
  407ec8:	(bad)  
  407ec9:	retf   
  407eca:	icebp  
  407ecb:	adc    edi,DWORD PTR [esi+ecx*2-0x79647f60]
  407ed2:	ror    BYTE PTR [edx-0x11aa0110],cl
  407ed8:	mov    ds:0x41d46b54,eax
  407edd:	cmp    dh,BYTE PTR [eax]
  407edf:	stos   DWORD PTR es:[edi],eax
  407ee0:	dec    esi
  407ee1:	cwde   
  407ee2:	mov    edi,0x91300ef0
  407ee7:	jp     0x407f35
  407ee9:	fstp   QWORD PTR [edx-0x3e250803]
  407eef:	div    BYTE PTR [ebp-0x11]
  407ef2:	sbb    eax,0xdf0159b0
  407ef7:	push   es
  407ef8:	pop    ss
  407ef9:	dec    esp
  407efa:	cli    
  407efb:	addr16 hlt 
  407efd:	sti    
  407efe:	adc    eax,0x9913e682
  407f03:	fisttp DWORD PTR [ebx-0x46]
  407f06:	xor    al,0x95
  407f08:	mov    ebx,0x31351173
  407f0d:	jecxz  0x407f8c
  407f0f:	inc    edx
  407f10:	jecxz  0x407f67
  407f12:	cmp    BYTE PTR [ecx+0x4b],bl
  407f15:	adc    al,0x8a
  407f17:	jl     0x407eec
  407f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f1a:	test   eax,0x2a6a364e
  407f1f:	dec    edi
  407f20:	std    
  407f21:	hlt    
  407f22:	pop    esp
  407f23:	sbb    DWORD PTR [edi+0x3c538c8a],esp
  407f29:	fucomi st,st(0)
  407f2b:	(bad)  
  407f2c:	das    
  407f2d:	push   es
  407f2e:	dec    ebp
  407f2f:	test   dh,cl
  407f31:	mov    cl,0x2d
  407f33:	or     edx,ecx
  407f35:	jbe    0x407f3f
  407f37:	enter  0x693a,0x97
  407f3b:	sbb    bl,dh
  407f3d:	inc    edi
  407f3e:	ss retf 0x7817
  407f42:	inc    ebp
  407f43:	mov    al,ds:0xbbe28e25
  407f48:	jb     0x407f2a
  407f4a:	add    eax,0x91843b37
  407f4f:	gs pop edx
  407f51:	jmp    FWORD PTR [edi+0x78]
  407f54:	pop    es
  407f55:	xor    ecx,DWORD PTR ss:[ecx-0x68]
  407f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f5a:	add    eax,0x91082054
  407f5f:	jmp    0x407f49
  407f61:	stos   BYTE PTR es:[edi],al
  407f62:	in     al,dx
  407f63:	cld    
  407f64:	fwait
  407f65:	repnz mov esi,0x59d5d930
  407f6b:	(bad)  
  407f6d:	mov    esp,0xe462154f
  407f72:	mov    ch,0xdc
  407f74:	adc    eax,0x97b21106
  407f79:	jmp    0x407f86
  407f7b:	mov    bl,0x5d
  407f7d:	pop    esp
  407f7e:	xor    al,0xf8
  407f80:	data16 and BYTE PTR [ecx*4+0x57fdae7],bl
  407f88:	dec    edi
  407f89:	sbb    BYTE PTR [eax-0x711d0f6d],ah
  407f8f:	lods   eax,DWORD PTR ds:[esi]
  407f90:	mov    bh,BYTE PTR [edi-0x49]
  407f93:	bound  esp,QWORD PTR [esi+0x71]
  407f96:	js     0x407f5d
  407f98:	or     al,0x7a
  407f9a:	xchg   esi,eax
  407f9b:	ror    BYTE PTR [edi+0xcd83d82],1
  407fa1:	jno    0x407fb2
  407fa3:	mov    edx,0x15fcf23e
  407fa8:	fidiv  WORD PTR [ebx-0x5b]
  407fab:	in     eax,0x45
  407fad:	lahf   
  407fae:	imul   edx,eax,0x1e
  407fb1:	jno    0x407f54
  407fb3:	mov    al,0xa1
  407fb5:	jge    0x407f96
  407fb7:	sub    esp,DWORD PTR [edx]
  407fb9:	sbb    esi,ecx
  407fbb:	jmp    0x342:0x8173295d
  407fc2:	xchg   ecx,eax
  407fc3:	pop    edi
  407fc4:	mov    ah,0xa3
  407fc6:	mov    DWORD PTR [eax],ebp
  407fc8:	adc    eax,0x35a14618
  407fcd:	push   0x15
  407fcf:	ss int 0x2c
  407fd2:	das    
  407fd3:	inc    esi
  407fd4:	sub    eax,0xbb20e9e0
  407fd9:	sbb    ch,BYTE PTR [edx-0x43]
  407fdc:	je     0x413e540d
  407fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe3:	jg     0x407feb
  407fe5:	clc    
  407fe6:	lea    edx,[esi]
  407fe8:	add    edi,DWORD PTR [ecx]
  407fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407feb:	int3   
  407fec:	aam    0xfa
  407fee:	xchg   ecx,eax
  407fef:	dec    ebx
  407ff0:	test   eax,0xe0ca22da
  407ff5:	cmp    dl,ch
  407ff7:	add    BYTE PTR [edx+0xb],al
  407ffa:	shl    edx,1
  407ffc:	fwait
  407ffd:	mov    edx,0xae13e0ad
  408002:	dec    esi
  408003:	shl    bh,1
  408005:	xor    DWORD PTR [edi+edi*1+0x1aff20c8],0x5b
  40800d:	ror    dl,cl
  40800f:	cmp    al,0x39
  408011:	sub    ebp,DWORD PTR [eax+0x71]
  408014:	jno    0x407fc3
  408016:	jno    0x408010
  408018:	inc    ebp
  408019:	push   edx
  40801a:	dec    eax
  40801b:	jl     0x408045
  40801d:	cwde   
  40801e:	mov    esi,0x8e3144cb
  408023:	test   eax,0x49e046f8
  408028:	cmp    DWORD PTR [ecx],edi
  40802a:	jmp    0x1aff9bd
  40802f:	fstp   TBYTE PTR [ebx+0x5ab9ae0a]
  408035:	hlt    
  408036:	js     0x407fec
  408038:	inc    ebp
  408039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40803a:	mov    bl,0x73
  40803c:	fstp   TBYTE PTR [edi-0x25]
  40803f:	repnz inc eax
  408041:	and    al,0xba
  408043:	or     DWORD PTR [ecx],esi
  408045:	cli    
  408046:	adc    BYTE PTR ss:[edi+ebx*4-0x16],al
  40804b:	lea    edx,[ebx-0x2f2a0a32]
  408051:	scas   al,BYTE PTR es:[edi]
  408052:	jne    0x4080a7
  408054:	je     0x40809d
  408056:	dec    ecx
  408057:	jge    0x4080c3
  408059:	jl     0x408010
  40805b:	lea    ecx,[ecx]
  40805d:	xor    ebx,DWORD PTR [ebx]
  40805f:	and    BYTE PTR [edx],dh
  408061:	xor    al,0x50
  408063:	cs in  eax,dx
  408065:	cld    
  408066:	push   es
  408067:	push   ecx
  408068:	inc    ebp
  408069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40806a:	(bad)  
  40806c:	add    esp,DWORD PTR [edx-0x1a253cdb]
  408072:	pop    eax
  408073:	jecxz  0x4080ad
  408075:	out    dx,eax
  408076:	inc    esp
  408077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408078:	imul   eax,DWORD PTR [ebp+0x5840c407],0xba7d1bd3
  408082:	push   ebp
  408083:	mov    al,ds:0xfb03f514
  408088:	outs   dx,BYTE PTR ds:[esi]
  408089:	sahf   
  40808a:	jecxz  0x40805d
  40808c:	xor    al,bl
  40808e:	(bad)  
  40808f:	cmp    eax,0xfc3dc5a6
  408094:	test   al,0x96
  408096:	fs call 0x1257:0x6ccb4fd5
  40809e:	push   ss
  40809f:	and    dh,BYTE PTR [edi-0x52]
  4080a2:	in     eax,0x65
  4080a4:	and    esp,DWORD PTR [eax+0x2]
  4080a7:	and    al,BYTE PTR gs:[edi-0x37e1b73e]
  4080ae:	lods   eax,DWORD PTR ds:[esi]
  4080af:	cwde   
  4080b0:	aaa    
  4080b1:	aaa    
  4080b2:	loope  0x4080e0
  4080b4:	push   ecx
  4080b5:	out    0xdf,al
  4080b7:	sub    ch,ah
  4080b9:	and    ecx,ecx
  4080bb:	mov    ebp,0x5af567e2
  4080c0:	aas    
  4080c1:	sar    al,cl
  4080c3:	xchg   esp,eax
  4080c4:	xor    eax,0x3a2ad271
  4080c9:	mov    ds:0x3978f409,al
  4080ce:	mov    ds:0xfbb12459,eax
  4080d3:	sbb    ch,ch
  4080d5:	or     dh,bl
  4080d7:	mov    ah,0xc1
  4080d9:	pop    esi
  4080da:	push   eax
  4080db:	call   0x1ea79a5b
  4080e0:	dec    ecx
  4080e1:	inc    ebx
  4080e2:	nop
  4080e3:	pusha  
  4080e4:	lds    esi,FWORD PTR [ebx-0x413bae4a]
  4080ea:	in     al,dx
  4080eb:	sbb    eax,DWORD PTR [ebp-0x7c]
  4080ee:	jmp    0x8ed0:0xc72ec4b
  4080f5:	xchg   edx,eax
  4080f6:	mov    esi,0x856bc533
  4080fb:	nop
  4080fc:	mov    dl,0xb
  4080fe:	sbb    ah,BYTE PTR [esi-0x7e]
  408101:	xor    DWORD PTR [ebp+0x76],edi
  408104:	jecxz  0x4080c4
  408106:	inc    edi
  408107:	fidivr DWORD PTR [ebx+0x38a8de22]
  40810d:	repnz fld TBYTE PTR [edi-0x56ee6a6a]
  408114:	out    dx,al
  408115:	aas    
  408116:	jecxz  0x4080f5
  408118:	test   eax,0x2c9ea35b
  40811d:	(bad)  
  40811e:	and    DWORD PTR [edx-0x65],ebx
  408121:	push   es
  408122:	cld    
  408123:	es popf 
  408125:	cmp    edx,edi
  408127:	and    eax,0xa094cad0
  40812c:	pushf  
  40812d:	loope  0x40816a
  40812f:	add    eax,0x5919ec6b
  408134:	std    
  408135:	and    dh,ch
  408137:	test   DWORD PTR [edx+0x1e9b96c],ebp
  40813d:	mov    ebp,0x446eff28
  408142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408143:	ins    DWORD PTR es:[edi],dx
  408144:	cmp    bl,ch
  408146:	stos   BYTE PTR es:[edi],al
  408147:	sub    cl,BYTE PTR [esi]
  408149:	xchg   edx,eax
  40814a:	pop    ds
  40814b:	in     eax,0x40
  40814d:	sbb    al,0x49
  40814f:	fnstcw WORD PTR [eax]
  408151:	shr    BYTE PTR [esp+ebx*1],cl
  408154:	cmp    DWORD PTR [edi-0x13],0xc7c39932
  40815b:	aad    0xf8
  40815d:	ds adc ah,bl
  408160:	cwde   
  408161:	sahf   
  408162:	gs popa 
  408164:	bnd jg 0x4081b6
  408167:	lds    esi,FWORD PTR [esi-0x12]
  40816a:	pop    ecx
  40816b:	retf   
  40816c:	jnp    0x408191
  40816e:	inc    edi
  40816f:	cmp    eax,0xdc32d610
  408174:	cmp    ebx,DWORD PTR [edx-0x4bfb49be]
  40817a:	mov    ebx,DWORD PTR [edx+0x75]
  40817d:	xchg   esp,eax
  40817e:	popa   
  40817f:	ds cmp eax,0x6001aa12
  408185:	and    eax,0x3d2ef0dc
  40818a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40818b:	xlat   BYTE PTR ds:[ebx]
  40818c:	cld    
  40818d:	lods   al,BYTE PTR ds:[esi]
  40818e:	xor    eax,DWORD PTR [ecx+0x4a]
  408191:	ret    
  408192:	adc    dl,BYTE PTR [ecx]
  408194:	push   ebp
  408195:	pop    ss
  408196:	xchg   ebp,eax
  408197:	or     al,0x3a
  408199:	out    0xbf,eax
  40819b:	push   ebx
  40819c:	fstp   QWORD PTR [eax+esi*8-0x74]
  4081a0:	out    0xb2,al
  4081a2:	add    DWORD PTR [eax],ecx
  4081a4:	fstp   DWORD PTR [esi-0x44eb747c]
  4081aa:	mov    WORD PTR [eax],fs
  4081ac:	clc    
  4081ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ae:	jle    0x408173
  4081b0:	sub    cl,BYTE PTR ds:0x6431ff7a
  4081b6:	fisttp DWORD PTR [ebx+0x56546fe8]
  4081bc:	adc    eax,0xb385ed96
  4081c1:	pusha  
  4081c2:	pop    ebx
  4081c3:	push   0xef892d13
  4081c8:	mov    eax,DWORD PTR [esi]
  4081ca:	mov    fs,WORD PTR [ebx-0x5c]
  4081cd:	or     DWORD PTR [edx+ebx*2+0x60f953bd],edx
  4081d4:	inc    eax
  4081d5:	not    DWORD PTR [ebx-0x45]
  4081d8:	pop    esi
  4081d9:	mov    ah,0xe5
  4081db:	call   0x651a:0xe2a22a81
  4081e2:	xor    eax,0x18d77558
  4081e7:	jmp    0x408253
  4081e9:	mov    esi,0x4d122b4c
  4081ee:	in     al,0xd
  4081f0:	in     eax,dx
  4081f1:	jno    0x4081ad
  4081f3:	jg     0x4081bc
  4081f5:	xchg   ebp,eax
  4081f6:	mov    dh,0xb3
  4081f8:	jnp    0x40817d
  4081fa:	fbstp  TBYTE PTR [esi-0x2b]
  4081fd:	loop   0x40820a
  4081ff:	xor    al,0xc9
  408201:	mov    ch,0x3
  408203:	jl     0x40822a
  408205:	mov    al,ds:0x8f5db1f5
  40820a:	sbb    edi,DWORD PTR [ebp-0x30]
  40820d:	mov    esi,0xde6996dd
  408212:	bnd jmp 0x4081bf
  408215:	enter  0x8ad1,0xf9
  408219:	icebp  
  40821a:	mov    dl,0xae
  40821c:	adc    BYTE PTR [esi-0x8],bh
  40821f:	pop    es
  408220:	loop   0x408248
  408222:	xor    cl,dh
  408224:	xchg   DWORD PTR [bp+si],edi
  408227:	add    al,0xed
  408229:	outs   dx,BYTE PTR ds:[esi]
  40822a:	out    0xf9,eax
  40822c:	cs cmp ch,al
  40822f:	cs or  eax,0xe55865c2
  408235:	sub    eax,0xa8dfe8d5
  40823a:	adc    BYTE PTR [eax-0x61c866da],bl
  408240:	fwait
  408241:	ret    0x5682
  408244:	xchg   ebp,eax
  408245:	dec    edi
  408246:	jns    0x4081de
  408248:	cmp    al,0xb
  40824a:	in     al,dx
  40824b:	xlat   BYTE PTR ds:[ebx]
  40824c:	cmp    ch,BYTE PTR [ecx-0x45f31bd]
  408252:	mov    bl,0x92
  408254:	fwait
  408255:	add    bh,ah
  408257:	js     0x4082ae
  408259:	scas   al,BYTE PTR es:[di]
  40825b:	(bad)  
  40825d:	pop    edx
  40825e:	push   ss
  40825f:	xchg   BYTE PTR [edx],cl
  408261:	sub    cl,BYTE PTR [edi-0x56]
  408264:	cmp    eax,0x6db34cb4
  408269:	sti    
  40826a:	enter  0x7e0,0x99
  40826e:	mov    ebx,0x97f08f39
  408273:	inc    esp
  408274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408275:	fstp   DWORD PTR [edi]
  408278:	cwde   
  408279:	out    dx,al
  40827a:	shl    BYTE PTR [edi],1
  40827c:	stc    
  40827d:	or     bl,cl
  40827f:	dec    ebx
  408280:	adc    cl,BYTE PTR [ebp-0x11876755]
  408286:	dec    esi
  408287:	iret   
  408288:	dec    esi
  408289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40828a:	xchg   DWORD PTR [ebp-0x58bafd7e],ecx
  408290:	or     ah,dl
  408292:	jae    0x4082e7
  408294:	in     eax,0xf9
  408296:	xchg   edx,eax
  408297:	mov    edx,0x794f0620
  40829c:	or     BYTE PTR [ebp+0x47],dl
  40829f:	jnp    0x4082df
  4082a1:	cli    
  4082a2:	xchg   ecx,eax
  4082a3:	add    eax,0xdf60bae9
  4082a8:	loopne 0x408313
  4082aa:	repnz or ch,dl
  4082ad:	jmp    0x40825c
  4082af:	out    0x0,eax
  4082b1:	inc    edi
  4082b2:	dec    ecx
  4082b3:	aas    
  4082b4:	daa    
  4082b5:	xor    cl,BYTE PTR [eax+0x46]
  4082b8:	fst    DWORD PTR [edx]
  4082ba:	test   al,0x53
  4082bc:	mov    ah,0xea
  4082be:	iret   
  4082bf:	jmp    0x75b1:0xb74770b1
  4082c6:	outs   dx,DWORD PTR ds:[esi]
  4082c7:	lods   al,BYTE PTR ds:[esi]
  4082c8:	scas   al,BYTE PTR es:[edi]
  4082c9:	and    al,0xf6
  4082cb:	je     0x4082b7
  4082cd:	stos   DWORD PTR es:[edi],eax
  4082ce:	int3   
  4082cf:	jbe    0x408256
  4082d1:	xchg   ebx,eax
  4082d2:	aas    
  4082d3:	lock std 
  4082d5:	in     eax,dx
  4082d6:	cli    
  4082d7:	mov    DWORD PTR [ecx+0x3e],eax
  4082da:	mov    ?,edx
  4082dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082dd:	mov    ah,0xd3
  4082df:	int    0xaa
  4082e1:	xor    dl,ah
  4082e3:	push   0xa43fbf8d
  4082e8:	inc    edx
  4082e9:	mov    ebx,0xb8dc7b7b
  4082ee:	lods   al,BYTE PTR ds:[esi]
  4082ef:	clc    
  4082f0:	(bad)  
  4082f2:	sub    eax,0xdf8c936b
  4082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f8:	or     BYTE PTR [eax+0x3d46e7fc],bl
  4082fe:	pop    ecx
  4082ff:	cmp    BYTE PTR [ebp-0x6b],ch
  408302:	dec    ebx
  408303:	test   DWORD PTR [ebp+0x7f13427d],eax
  408309:	pop    eax
  40830a:	in     eax,dx
  40830b:	pop    ds
  40830c:	jp     0x4082a7
  40830e:	lmsw   WORD PTR [esi+0x72]
  408312:	cwde   
  408313:	jo     0x408351
  408315:	add    DWORD PTR ds:0x645e3845,ebx
  40831b:	shl    ecx,0xda
  40831e:	xchg   ebx,eax
  40831f:	jb     0x40833f
  408321:	out    0x81,eax
  408323:	mov    WORD PTR [eax-0x1e1d16b0],ds
  408329:	shl    BYTE PTR [edx],cl
  40832b:	pop    ss
  40832c:	rol    bl,1
  40832e:	mov    bl,0x48
  408330:	pop    ebx
  408331:	(bad)  
  408332:	aam    0x6e
  408334:	cmp    al,0xc6
  408336:	nop
  408337:	pop    eax
  408338:	add    BYTE PTR [eax-0x6ad4bf42],0x6c
  40833f:	loop   0x4082cd
  408341:	inc    ebp
  408342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408343:	fdiv   DWORD PTR [edi-0x55b84347]
  408349:	add    DWORD PTR [eax-0x34],eax
  40834c:	jge    0x40831b
  40834e:	mov    dl,0xbb
  408350:	into   
  408351:	fwait
  408352:	add    bl,BYTE PTR [edx-0x794ab8f3]
  408358:	sbb    al,BYTE PTR [edi+0x68ed43cc]
  40835e:	les    ebp,FWORD PTR [eax+0x60598232]
  408364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408365:	les    eax,FWORD PTR [ebx+eiz*8-0x16ebe43f]
  40836c:	ja     0x408380
  40836e:	push   edi
  40836f:	out    dx,al
  408370:	out    dx,eax
  408371:	outs   dx,WORD PTR ds:[esi]
  408373:	leave  
  408374:	adc    ah,BYTE PTR [edi-0x2f]
  408377:	loopne 0x408349
  408379:	lahf   
  40837a:	int3   
  40837b:	mov    ds:0x43d53673,eax
  408380:	jo     0x4083d8
  408382:	add    eax,0x3df02ef3
  408387:	or     DWORD PTR [esi-0x21],0xfa409e7b
  40838e:	fnsave [eax]
  408390:	fidivr WORD PTR [edi-0x629e06fd]
  408396:	add    al,ah
  408398:	retf   0x99fd
  40839b:	rcl    dh,cl
  40839d:	jbe    0x40840c
  40839f:	fld    DWORD PTR [esi-0x56]
  4083a2:	add    ch,BYTE PTR [bp+si-0x1e92]
  4083a7:	int3   
  4083a8:	xor    esi,edx
  4083aa:	dec    esp
  4083ab:	add    al,0xb2
  4083ad:	xchg   DWORD PTR [edi],esp
  4083af:	inc    ebp
  4083b0:	xchg   edi,eax
  4083b1:	and    DWORD PTR [edi+eax*2-0x67],ebx
  4083b5:	scas   al,BYTE PTR es:[edi]
  4083b6:	retf   0xe19e
  4083b9:	mov    cl,ch
  4083bb:	(bad)  
  4083bc:	aas    
  4083bd:	jmp    0x5d0:0xbf0fabc
  4083c4:	inc    ecx
  4083c5:	sub    edx,ebx
  4083c7:	int3   
  4083c8:	out    0x59,al
  4083ca:	xor    eax,0xb52e2fee
  4083cf:	mov    bl,0xf1
  4083d1:	pop    es
  4083d2:	scas   eax,DWORD PTR es:[edi]
  4083d3:	sbb    bl,BYTE PTR [esi+0x11960c9a]
  4083d9:	popa   
  4083da:	fiadd  DWORD PTR [edi+0x53669bbe]
  4083e0:	push   ecx
  4083e1:	jo     0x4083ac
  4083e3:	or     ecx,eax
  4083e5:	inc    ebp
  4083e6:	push   0xb9fdae41
  4083eb:	sbb    bh,BYTE PTR [eax+0xa]
  4083ee:	sahf   
  4083ef:	test   BYTE PTR [ecx+0x77d02333],dl
  4083f5:	dec    ebp
  4083f6:	les    esp,FWORD PTR [edi+0x6fb2e92]
  4083fc:	sub    DWORD PTR [ecx-0x5a981c30],esi
  408402:	mov    ecx,0x12da47bd
  408407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408408:	(bad)  
  408409:	xlat   BYTE PTR ds:[ebx]
  40840a:	and    edx,DWORD PTR [ecx+0x18]
  40840d:	dec    ebp
  40840e:	outs   dx,BYTE PTR ds:[esi]
  40840f:	xchg   ebx,eax
  408410:	push   ebx
  408411:	les    eax,FWORD PTR [esi+0x29c7163f]
  408417:	or     DWORD PTR [edi],esi
  408419:	div    DWORD PTR [ebp-0x2b]
  40841c:	xor    al,bl
  40841e:	sub    dl,cl
  408420:	mov    cl,0xcf
  408422:	jmp    0x9aee7bba
  408427:	rcr    DWORD PTR [eax],1
  408429:	mov    al,0x5c
  40842b:	ja     0x4083c3
  40842d:	ins    DWORD PTR es:[edi],dx
  40842e:	shl    esi,cl
  408430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408431:	leave  
  408432:	ins    BYTE PTR es:[edi],dx
  408433:	push   eax
  408434:	pop    edx
  408435:	call   0xb50b8113
  40843a:	mov    dl,0x15
  40843c:	cwde   
  40843d:	ds or  al,0x3d
  408440:	jmp    0xb22d:0xf9136ead
  408447:	int    0x14
  408449:	psubd  mm3,QWORD PTR [edi-0x6f8baad]
  408450:	adc    al,ch
  408452:	test   al,0x9d
  408454:	cmc    
  408455:	iret   
  408456:	dec    edi
  408457:	fdivr  QWORD PTR [ebp-0x70135af1]
  40845d:	nop
  40845e:	push   ebp
  40845f:	mov    ds:0x5d8ba661,al
  408464:	clc    
  408465:	mov    BYTE PTR [edx+ebx*1],al
  408468:	mov    eax,DWORD PTR [ebp-0x40]
  40846b:	mov    edx,DWORD PTR [ebp-0x28]
  40846e:	xor    eax,esi
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx+0x34]
  408b1b:	repnz enter 0x296b,0xe4
  408b20:	jnp    0x408b9d
  408b22:	(bad)  
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	dec    esi
  408b27:	cld    
  408b28:	xlat   BYTE PTR ds:[ebx]
  408b29:	fcom   QWORD PTR [ebx+0x48]
  408b2c:	lock xor al,0x7f
  408b2f:	push   edx
  408b30:	(bad)  
  408b31:	cli    
  408b32:	loopne 0x408afa
  408b34:	xor    al,0xe1
  408b36:	stos   BYTE PTR es:[edi],al
  408b37:	and    ch,bl
  408b39:	aas    
  408b3a:	out    dx,al
  408b3b:	mov    ah,0x74
  408b3d:	or     bh,BYTE PTR ds:0x64c5ba98
  408b43:	ja     0x408b40
  408b45:	push   es
  408b46:	push   es
  408b47:	out    dx,eax
  408b48:	enter  0xe536,0xac
  408b4c:	cli    
  408b4d:	jb     0x408bbc
  408b4f:	into   
  408b50:	mov    eax,0x423e4c84
  408b55:	and    cl,0x93
  408b58:	inc    edx
  408b59:	push   eax
  408b5a:	pop    ss
  408b5b:	adc    edx,DWORD PTR [ebx]
  408b5d:	repz ror BYTE PTR [edx-0x85128a2],cl
  408b64:	mov    ds:0xb7e90185,al
  408b69:	sbb    ch,0x86
  408b6c:	lahf   
  408b6d:	pusha  
  408b6e:	ret    0x89bb
  408b71:	pop    esi
  408b72:	add    DWORD PTR [bx-0x4],esi
  408b76:	aam    0xae
  408b78:	mov    dh,0x3d
  408b7a:	fwait
  408b7b:	jne    0x408b03
  408b7d:	out    dx,eax
  408b7e:	dec    esp
  408b7f:	jp     0x408bc4
  408b81:	nop
  408b82:	xchg   esp,eax
  408b83:	loope  0x408b57
  408b85:	push   esi
  408b86:	pusha  
  408b87:	push   ebx
  408b88:	stos   BYTE PTR es:[edi],al
  408b89:	test   ch,dh
  408b8b:	sahf   
  408b8c:	inc    eax
  408b8d:	rep lods eax,DWORD PTR ds:[esi]
  408b8f:	scas   eax,DWORD PTR es:[edi]
  408b90:	int    0xfe
  408b92:	adc    dl,BYTE PTR [eax-0x134887ce]
  408b98:	xor    eax,0xe38f814f
  408b9d:	out    dx,al
  408b9e:	int3   
  408b9f:	aaa    
  408ba0:	enter  0xb7b6,0xe0
  408ba4:	popf   
  408ba5:	xor    al,0x35
  408ba7:	pop    es
  408ba8:	in     eax,0x2d
  408baa:	sbb    dl,BYTE PTR [eax+0x2d]
  408bad:	(bad)  
  408bae:	into   
  408baf:	push   edi
  408bb0:	cmp    BYTE PTR [edx-0x73],ch
  408bb3:	jae    0x408b3e
  408bb5:	mov    bh,0xf4
  408bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb8:	ret    
  408bb9:	int    0xb3
  408bbb:	mov    ss,WORD PTR [esp+edx*1+0x35796612]
  408bc2:	leave  
  408bc3:	jg     0x408bbd
  408bc5:	mov    WORD PTR [ecx-0x50],gs
  408bc8:	daa    
  408bc9:	mov    esp,0x1423f8f4
  408bce:	repnz out dx,eax
  408bd0:	xchg   ecx,eax
  408bd1:	sub    ecx,DWORD PTR [esi]
  408bd3:	push   cs
  408bd4:	push   esi
  408bd5:	out    0x6,eax
  408bd7:	add    esp,DWORD PTR [esi]
  408bd9:	mov    dl,0x2c
  408bdb:	sub    edi,ebx
  408bdd:	rcr    DWORD PTR [ebx+0x59],cl
  408be0:	jg     0x408c13
  408be2:	fld    DWORD PTR [ecx*2-0x1f1c8ab]
  408be9:	stos   BYTE PTR es:[edi],al
  408bea:	iret   
  408beb:	mov    al,0x8c
  408bed:	fcmovbe st,st(7)
  408bef:	sub    eax,0x842abbb
  408bf4:	adc    cl,cl
  408bf6:	sahf   
  408bf7:	iret   
  408bf8:	mov    edx,DWORD PTR [esi+0x2a]
  408bfb:	push   ebx
  408bfc:	cli    
  408bfd:	repnz out 0xa4,eax
  408c00:	fs mov edx,0x1ee7869d
  408c06:	pop    esi
  408c07:	sub    al,0x11
  408c09:	das    
  408c0a:	mov    ds:0xbc60659c,al
  408c0f:	loop   0x408bdc
  408c11:	ret    
  408c12:	mov    DWORD PTR [eax],ebx
  408c14:	mov    eax,ds:0xb5ef2a2a
  408c19:	jl     0x408c68
  408c1b:	add    BYTE PTR [esi],ch
  408c1d:	sti    
  408c1e:	ficomp DWORD PTR [ebx]
  408c20:	sbb    BYTE PTR [ebx],al
  408c22:	daa    
  408c23:	jmp    DWORD PTR [ebp-0x6b]
  408c26:	(bad)  gs:[ecx+0xe]
  408c2a:	mov    ebp,DWORD PTR [edi+0x3c]
  408c2d:	mov    edx,0xef003d92
  408c32:	sbb    ah,BYTE PTR [ecx+ecx*8+0x7b]
  408c36:	retf   0x3115
  408c39:	retf   0x5795
  408c3c:	enter  0xe85f,0x9
  408c40:	mov    esi,0x2689afdd
  408c45:	(bad)  
  408c46:	xlat   BYTE PTR ds:[ebx]
  408c47:	in     al,0xa5
  408c49:	leave  
  408c4a:	bound  esi,QWORD PTR [ecx+0x21]
  408c4d:	pop    es
  408c4e:	fldcw  WORD PTR [edi-0x11]
  408c51:	jecxz  0x408c1f
  408c53:	cmovae ebx,DWORD PTR [ebx+0xb]
  408c57:	cmp    BYTE PTR [esi],al
  408c59:	std    
  408c5a:	(bad)  
  408c5b:	or     bh,BYTE PTR [edx-0x6]
  408c5e:	test   eax,0xc25ff469
  408c63:	jb     0x408c6b
  408c65:	push   eax
  408c66:	xor    cl,BYTE PTR [eax]
  408c68:	mov    al,ds:0xa8940cda
  408c6d:	out    dx,al
  408c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c6f:	cmp    esi,DWORD PTR [esi]
  408c71:	pop    esp
  408c72:	push   ebx
  408c73:	out    dx,al
  408c74:	add    al,0x63
  408c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c77:	add    BYTE PTR [esi-0x271946f7],bl
  408c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7e:	nop
  408c7f:	retf   
  408c80:	pop    esi
  408c81:	add    DWORD PTR [esi+ebp*4+0x27],edi
  408c85:	push   edi
  408c86:	mov    edi,DWORD PTR ds:0xb520da7b
  408c8c:	sahf   
  408c8d:	push   0x691a60e3
  408c92:	pushf  
  408c93:	test   al,0x6b
  408c95:	cmp    eax,0x6aab571e
  408c9a:	je     0x408c93
  408c9c:	pop    edi
  408c9d:	mov    esi,ebp
  408c9f:	mov    BYTE PTR [eax+0x6c],ah
  408ca2:	int3   
  408ca3:	out    0x34,eax
  408ca5:	ss out dx,eax
  408ca7:	call   FWORD PTR ds:0x5c4a52e
  408cad:	ret    0xe33c
  408cb0:	inc    ecx
  408cb1:	inc    edi
  408cb2:	call   0x9d8f43b0
  408cb7:	js     0x408c9f
  408cb9:	rol    DWORD PTR [eax+0x6a],0xda
  408cbd:	jp     0x408d02
  408cbf:	lods   al,BYTE PTR ds:[esi]
  408cc0:	scas   eax,DWORD PTR es:[edi]
  408cc1:	cmc    
  408cc2:	inc    ecx
  408cc3:	out    0xb3,al
  408cc5:	jge    0x408cb6
  408cc7:	add    dl,BYTE PTR [edi]
  408cc9:	hlt    
  408cca:	jo     0x408cda
  408ccc:	(bad)  
  408ccd:	jmp    0x27609347
  408cd2:	(bad)  
  408cd3:	(bad)  
  408cd4:	xchg   ecx,eax
  408cd5:	or     esi,ebx
  408cd7:	or     BYTE PTR [edx-0x4],ch
  408cda:	ror    DWORD PTR [esi+ecx*4+0x5533a336],0x86
  408ce2:	dec    ebp
  408ce3:	pop    ebx
  408ce4:	push   ss
  408ce5:	in     al,0xdb
  408ce7:	xlat   BYTE PTR ds:[ebx]
  408ce8:	shl    BYTE PTR [ecx+0x18b1fa07],1
  408cee:	fiadd  DWORD PTR [esi+edi*8]
  408cf1:	push   ss
  408cf2:	dec    ebx
  408cf3:	mov    ds:0x88cb1df5,al
  408cf8:	fsub   QWORD PTR [esi]
  408cfa:	dec    ebx
  408cfb:	jnp    0x408d3b
  408cfd:	adc    eax,0xda20c74d
  408d02:	in     eax,0x48
  408d04:	rol    DWORD PTR [ebx+0x5d],0xde
  408d08:	enter  0xc566,0x72
  408d0c:	mov    ch,0xfd
  408d0e:	icebp  
  408d0f:	loopne 0x408c94
  408d11:	int3   
  408d12:	dec    ebp
  408d13:	(bad)  
  408d14:	test   al,0xfd
  408d16:	pusha  
  408d17:	jno    0x408d41
  408d19:	lahf   
  408d1a:	aas    
  408d1b:	push   esp
  408d1c:	add    esi,DWORD PTR [edx-0x42]
  408d1f:	jbe    0x408cdd
  408d21:	dec    edi
  408d22:	mov    ecx,0xd27d412d
  408d27:	pop    eax
  408d28:	inc    esp
  408d29:	std    
  408d2a:	xor    al,0xc8
  408d2c:	(bad)  
  408d2d:	cli    
  408d2e:	pop    ebx
  408d2f:	test   dl,bh
  408d31:	bound  eax,QWORD PTR [ecx]
  408d33:	jle    0x408d36
  408d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d36:	js     0x408d86
  408d38:	xor    BYTE PTR [esi],ah
  408d3a:	ds dec edi
  408d3c:	pop    eax
  408d3d:	xchg   ecx,eax
  408d3e:	push   ss
  408d3f:	xchg   edx,eax
  408d40:	adc    al,0x15
  408d42:	int    0x9
  408d44:	retf   0x3dd8
  408d47:	dec    eax
  408d48:	loopne 0x408d49
  408d4a:	ja     0x408d8c
  408d4c:	loop   0x408cf0
  408d4e:	dec    ebp
  408d4f:	sbb    dh,BYTE PTR [ecx-0x6be44d07]
  408d55:	mov    esp,esp
  408d57:	and    eax,eax
  408d59:	sub    BYTE PTR [ebx+eax*2],ch
  408d5c:	or     edi,DWORD PTR [eax]
  408d5e:	adc    BYTE PTR [ebx+0x584d3cdd],0x94
  408d65:	xchg   BYTE PTR [edi-0x57428492],bh
  408d6b:	out    0x2b,al
  408d6d:	shr    DWORD PTR [esi+0x2],1
  408d70:	inc    ecx
  408d71:	adc    edi,ecx
  408d73:	push   ebx
  408d74:	cdq    
  408d75:	dec    esi
  408d76:	xor    eax,0xd0a969dc
  408d7b:	gs jmp 0x3a578147
  408d81:	loopne 0x408d71
  408d83:	xchg   edi,eax
  408d84:	sbb    al,0x58
  408d86:	mov    esi,0xb88a062e
  408d8b:	loop   0x408db4
  408d8d:	mov    bh,0x3e
  408d8f:	jnp    0x408d59
  408d91:	or     ch,BYTE PTR [eax+0x26a9ff05]
  408d97:	loope  0x408d22
  408d99:	fs xchg esp,eax
  408d9b:	and    ah,BYTE PTR [edi+esi*1]
  408d9e:	jne    0x408d3b
  408da0:	call   0x42c4:0x13034a9
  408da7:	cwde   
  408da8:	test   al,0xac
  408daa:	and    ah,ah
  408dac:	retf   0xdae
  408daf:	cwde   
  408db0:	cmp    eax,0x87da7aa1
  408db5:	or     DWORD PTR [eax+0x6b8ee116],ebp
  408dbb:	inc    edx
  408dbc:	es sbb al,0xec
  408dbf:	or     eax,0xc98e6e9
  408dc4:	xor    esp,0x1
  408dc7:	lods   al,BYTE PTR ds:[esi]
  408dc8:	jmp    0x408d96
  408dca:	cdq    
  408dcb:	push   esi
  408dcc:	jne    0x408d9a
  408dce:	lea    esi,[ebp+0x51076fe4]
  408dd4:	icebp  
  408dd5:	push   ds
  408dd6:	push   edx
  408dd7:	xchg   BYTE PTR [edx+ebx*8+0x15],cl
  408ddb:	inc    edx
  408ddc:	out    0xca,al
  408dde:	mov    WORD PTR [edx+0x41f07f5f],gs
  408de4:	sbb    ebp,ebp
  408de6:	popf   
  408de7:	fistp  QWORD PTR [edi]
  408de9:	aad    0xf7
  408deb:	adc    eax,0x97176a28
  408df0:	lock xor esp,DWORD PTR [eax-0x1e426e54]
  408df7:	sub    BYTE PTR [esi],dh
  408df9:	inc    ebp
  408dfa:	lea    edx,[ebp+0x57bf69ed]
  408e00:	mov    eax,ds:0x7b5bc268
  408e05:	repnz nop
  408e07:	add    al,0xa1
  408e09:	sbb    edx,DWORD PTR [ebp-0x5b]
  408e0c:	jle    0x408dd2
  408e0e:	add    ebp,ebx
  408e10:	mov    cl,0x12
  408e12:	rcr    DWORD PTR [eax-0x62703ff5],1
  408e18:	pop    esi
  408e19:	xchg   ecx,eax
  408e1a:	rcl    al,0x99
  408e1d:	aam    0xb8
  408e1f:	cmp    BYTE PTR ds:0x8f1f4d6d,0xd5
  408e26:	or     DWORD PTR [ecx+edx*2],0x2982b13c
  408e2d:	aaa    
  408e2e:	pop    eax
  408e2f:	xchg   ebp,eax
  408e30:	xlat   BYTE PTR ds:[ebx]
  408e31:	sub    BYTE PTR [ebp+esi*8+0x44a74e48],bl
  408e38:	dec    ebp
  408e39:	outs   dx,DWORD PTR ds:[esi]
  408e3a:	out    0x78,al
  408e3c:	cmp    BYTE PTR [ebx+0x7d],0xc7
  408e40:	pusha  
  408e41:	lea    esi,[ebp-0x24]
  408e44:	(bad)  
  408e45:	mov    edi,0xe33b432d
  408e4a:	pop    esi
  408e4b:	mov    ecx,0x634cc5d5
  408e50:	push   cs
  408e51:	pop    edx
  408e52:	cwde   
  408e53:	nop
  408e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e55:	stc    
  408e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e57:	and    DWORD PTR [esi-0x13],esi
  408e5a:	xchg   ecx,eax
  408e5b:	pusha  
  408e5c:	pusha  
  408e5d:	add    eax,0x33b399ba
  408e62:	(bad)  
  408e63:	mov    WORD PTR [ebp+0x41f10f04],?
  408e69:	cmc    
  408e6a:	pop    sp
  408e6c:	pop    edx
  408e6d:	sub    BYTE PTR [edi-0x1f],ch
  408e70:	jbe    0x408e60
  408e72:	sar    DWORD PTR [esi],1
  408e74:	loop   0x408e17
  408e76:	cmp    al,0x7d
  408e78:	mov    edx,0xbff93e00
  408e7d:	fmul   QWORD PTR [esi+0x25]
  408e80:	push   0x42ee768a
  408e85:	inc    ebx
  408e86:	pop    edx
  408e87:	xor    eax,0x26560e95
  408e8c:	fwait
  408e8d:	int    0xaa
  408e8f:	fwait
  408e90:	retf   0xba67
  408e93:	mov    dh,0xea
  408e95:	pop    eax
  408e96:	xchg   edx,eax
  408e97:	popa   
  408e98:	mov    ecx,0xceb3a530
  408e9d:	pop    ds
  408e9e:	pop    es
  408e9f:	dec    ecx
  408ea0:	std    
  408ea1:	sbb    BYTE PTR [eax-0x6a8111c],ch
  408ea7:	pop    edi
  408ea8:	lock test DWORD PTR [edx-0x80],0xc77dfb4e
  408eb0:	outs   dx,BYTE PTR ds:[esi]
  408eb1:	xor    eax,0xb014c0f7
  408eb6:	adc    ebp,DWORD PTR [ebp+0xa]
  408eb9:	mov    ah,BYTE PTR [ebp+0x7a]
  408ebc:	(bad)  
  408ebd:	xor    BYTE PTR [edi-0x27efa43a],dl
  408ec3:	mov    cs,WORD PTR [edi]
  408ec5:	arpl   ax,si
  408ec7:	aas    
  408ec8:	ja     0x408f15
  408eca:	or     BYTE PTR [ebp+0x78],0x51
  408ece:	sti    
  408ecf:	sti    
  408ed0:	pop    eax
  408ed1:	inc    eax
  408ed2:	into   
  408ed3:	lock es sub cl,ch
  408ed7:	fimul  DWORD PTR [ecx-0x2a6aa8bc]
  408edd:	test   DWORD PTR [ecx],ecx
  408edf:	xor    edx,DWORD PTR [edi]
  408ee1:	jp     0x408ec4
  408ee3:	sti    
  408ee4:	mov    BYTE PTR [ebp+0x64],ah
  408ee7:	jle    0x408f55
  408ee9:	in     eax,dx
  408eea:	and    DWORD PTR [edi],esp
  408eec:	js     0x408f32
  408eee:	xchg   ebx,eax
  408eef:	daa    
  408ef0:	dec    ebx
  408ef1:	push   es
  408ef2:	mov    dh,0xc6
  408ef4:	call   0xc5dd:0xaf502790
  408efb:	dec    esi
  408efc:	cld    
  408efd:	push   cs
  408efe:	jge    0x408ed9
  408f00:	and    esi,edi
  408f02:	js     0x408f26
  408f04:	mov    ebx,0xab742642
  408f09:	cmp    esi,eax
  408f0b:	dec    ebx
  408f0c:	cmp    al,0x64
  408f0e:	test   BYTE PTR [esi+edx*2+0x43],0x74
  408f13:	mov    ecx,0x2ebaddb
  408f18:	jne    0x408ef4
  408f1a:	push   ss
  408f1b:	ja     0x408f47
  408f1d:	sub    BYTE PTR [ecx-0x39],0x33
  408f21:	clc    
  408f22:	(bad)  
  408f23:	jecxz  0x408f1b
  408f25:	ss dec esp
  408f27:	jg     0x408ed6
  408f29:	stos   DWORD PTR es:[edi],eax
  408f2a:	adc    al,0xb0
  408f2c:	lods   eax,DWORD PTR ds:[esi]
  408f2d:	jmp    0xc621009f
  408f32:	(bad)  
  408f33:	bndstx [edx],bnd2
  408f36:	imul   ecx,ecx,0x10
  408f39:	or     esp,DWORD PTR [esi+esi*8]
  408f3c:	xchg   ecx,eax
  408f3d:	test   BYTE PTR [eax+0x1c],bl
  408f40:	dec    ebp
  408f41:	xor    cl,al
  408f43:	fst    QWORD PTR [eax-0x2dca0da4]
  408f49:	icebp  
  408f4a:	stos   BYTE PTR es:[edi],al
  408f4b:	test   al,0xe3
  408f4d:	xchg   ebx,eax
  408f4e:	(bad)  
  408f4f:	fnsave cs:[ecx+0x10de0266]
  408f56:	xchg   ebp,eax
  408f57:	add    DWORD PTR [ecx],ebp
  408f59:	adc    ah,BYTE PTR [esi-0x595b4570]
  408f5f:	ins    BYTE PTR es:[edi],dx
  408f60:	push   0x6e
  408f62:	int    0x90
  408f64:	jmp    0x408f9c
  408f66:	stos   DWORD PTR es:[edi],eax
  408f67:	xchg   esp,eax
  408f68:	inc    ecx
  408f69:	and    edx,ecx
  408f6b:	cmp    ebp,DWORD PTR [edx+0x25001705]
  408f71:	add    ecx,eax
  408f73:	or     eax,0x4b2f17c0
  408f78:	pop    es
  408f79:	mov    eax,0x9f0bb613
  408f7e:	dec    edx
  408f7f:	mov    ch,0x4f
  408f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f82:	or     dl,BYTE PTR [ecx+0x29]
  408f85:	sub    ebp,edi
  408f87:	imul   ecx,ebp,0x2
  408f8a:	xchg   BYTE PTR [edx-0x2d],ch
  408f8d:	push   ds
  408f8e:	and    eax,0xc5208dde
  408f93:	loopne 0x408f2e
  408f95:	mov    dh,BYTE PTR [ebp-0x41]
  408f98:	ins    BYTE PTR es:[edi],dx
  408f99:	fcom   DWORD PTR [edi+0x2a]
  408f9c:	aam    0xf8
  408f9e:	xor    DWORD PTR [di+0x3ebc],ebp
  408fa3:	arpl   WORD PTR [edi],bx
  408fa5:	cld    
  408fa6:	sub    BYTE PTR [ecx+0x41],bl
  408fa9:	aaa    
  408faa:	call   0x636e:0xbc309b7
  408fb1:	daa    
  408fb2:	stos   DWORD PTR es:[edi],eax
  408fb3:	test   eax,0x2eaada0f
  408fb8:	out    0xa9,al
  408fba:	popf   
  408fbb:	lahf   
  408fbc:	jb     0x408f8c
  408fbe:	loop   0x409008
  408fc0:	jg     0x409012
  408fc2:	lock sbb ecx,DWORD PTR [ebp+0x400f4609]
  408fc9:	sub    ch,BYTE PTR [edi-0x54]
  408fcc:	hlt    
  408fcd:	sub    esp,edx
  408fcf:	jecxz  0x408f93
  408fd1:	cmc    
  408fd2:	mov    esp,ebx
  408fd4:	pushf  
  408fd5:	pop    edx
  408fd6:	rol    DWORD PTR [ecx],1
  408fd8:	push   ebx
  408fd9:	lahf   
  408fda:	(bad)  
  408fdb:	pop    edi
  408fdc:	cmp    dl,cl
  408fde:	popf   
  408fdf:	add    al,0x36
  408fe1:	ficom  DWORD PTR [eax+ebp*2]
  408fe4:	(bad)  
  408fe6:	sbb    DWORD PTR [ebp+0x49],ecx
  408fe9:	sub    ebp,esp
  408feb:	cmp    edi,DWORD PTR [esi+esi*1]
  408fee:	jg     0x408ff0
  408ff0:	sbb    DWORD PTR [ebx+0x43],ebp
  408ff3:	push   edx
  408ff4:	mov    esi,0x1b5ccfc2
  408ff9:	pop    ss
  408ffa:	push   ebp
  408ffb:	adc    dh,BYTE PTR [edx]
  408ffd:	inc    edx
  408ffe:	and    ebx,DWORD PTR [eax-0x7e]
  409001:	ds dec ecx
  409003:	add    BYTE PTR [ebp-0x58f53f30],ch
  409009:	outs   dx,DWORD PTR ss:[esi]
  40900b:	inc    ecx
  40900c:	and    BYTE PTR ds:0x16b92936,cl
  409012:	(bad)  ds:0xa30c71e4
  409018:	out    dx,eax
  409019:	loopne 0x409015
  40901b:	stc    
  40901c:	or     DWORD PTR [esi+0x13],ebp
  40901f:	sti    
  409020:	inc    esp
  409021:	inc    edx
  409022:	xchg   esi,eax
  409023:	jecxz  0x40901c
  409025:	imul   edi,edi,0xdd8cafc
  40902b:	cld    
  40902c:	xchg   ebp,eax
  40902d:	xor    BYTE PTR [ecx+0x2d],dl
  409030:	fldcw  WORD PTR [eax+0x7466d8dc]
  409036:	sub    BYTE PTR [edi-0x8c55c1e],al
  40903c:	(bad)  
  40903d:	cli    
  40903e:	push   es
  40903f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409040:	inc    esp
  409041:	xor    ecx,DWORD PTR [ebx+0x12e5f623]
  409047:	add    ch,BYTE PTR [eax+0x3c8b125]
  40904d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40904e:	push   esp
  40904f:	and    dl,BYTE PTR [ebp-0x36030699]
  409055:	jae    0x409096
  409057:	(bad)  
  409059:	lds    esp,FWORD PTR [eax+eiz*2-0x286e063f]
  409060:	jge    0x4090b4
  409062:	ret    
  409063:	imul   ecx,DWORD PTR [ebx+0x28],0xffffffdd
  409067:	cmc    
  409068:	mov    bl,0x3
  40906a:	sbb    edx,DWORD PTR [eax+0x9266dec]
  409070:	pop    ecx
  409071:	inc    esi
  409072:	addr16 pusha 
  409074:	int    0x34
  409076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409077:	push   edi
  409078:	cld    
  409079:	cli    
  40907a:	out    dx,eax
  40907b:	adc    ebp,DWORD PTR [ecx-0x57]
  40907e:	hlt    
  40907f:	ror    dl,cl
  409081:	iret   
  409082:	ret    
  409083:	cmp    BYTE PTR [ebx+eiz*4],bh
  409086:	out    dx,al
  409087:	inc    ebx
  409088:	jl     0x4090ea
  40908a:	int3   
  40908b:	mov    cl,0x58
  40908d:	push   ds
  40908e:	adc    al,0xe3
  409090:	repnz inc ebp
  409092:	mov    dl,0x74
  409094:	pushf  
  409095:	pop    ebp
  409096:	cmp    esi,esi
  409098:	jmp    0xf381:0x50524c24
  40909f:	mul    dl
  4090a1:	in     al,0x3a
  4090a3:	leave  
  4090a4:	push   0xb54b1ce6
  4090a9:	loopne 0x409068
  4090ab:	push   cs
  4090ac:	mov    ebx,0x43b00f18
  4090b1:	aam    0x3a
  4090b3:	mov    bh,0x50
  4090b5:	mov    BYTE PTR [esi+0x178dc859],bh
  4090bb:	test   dl,0x21
  4090be:	sub    ah,BYTE PTR fs:[esi]
  4090c1:	sub    BYTE PTR [esi],0xe9
  4090c4:	cli    
  4090c5:	xchg   ecx,eax
  4090c6:	aad    0x65
  4090c8:	fnsave [eax+0x1b]
  4090cb:	neg    esp
  4090cd:	pop    ss
  4090ce:	mov    al,ds:0x44e8e74b
  4090d3:	retf   
  4090d4:	and    BYTE PTR [ebx+0x69],bh
  4090d7:	push   eax
  4090d8:	out    dx,al
  4090d9:	mov    ds:0x98c9a5a6,eax
  4090de:	out    0x81,eax
  4090e0:	fisttp WORD PTR [esi]
  4090e2:	ficomp WORD PTR [ebp+0x8]
  4090e5:	and    BYTE PTR [ecx+0x5a],0xf3
  4090e9:	jo     0x4090fc
  4090eb:	pusha  
  4090ec:	aam    0x88
  4090ee:	adc    ch,BYTE PTR [edi+0x1acfcb5d]
  4090f4:	jb     0x409129
  4090f6:	mov    eax,0xa75c566f
  4090fb:	sub    DWORD PTR [ebx+edi*2+0x5d266fc2],esp
  409102:	pop    eax
  409103:	inc    ebx
  409104:	pop    edx
  409105:	adc    dh,cl
  409107:	or     dl,dl
  409109:	jnp    0x409136
  40910b:	in     eax,dx
  40910c:	lds    edx,FWORD PTR [edx-0x3266fb7]
  409112:	mov    esp,DWORD PTR [ebp-0x15d8d0e2]
  409118:	loopne 0x4090ac
  40911a:	loop   0x4090f1
  40911c:	call   0x3368:0x398bb44d
  409123:	lods   al,BYTE PTR ds:[esi]
  409124:	sbb    eax,0x7ea3b072
  409129:	js     0x409101
  40912b:	xchg   ebp,eax
  40912c:	cmp    al,0x7a
  40912e:	cmp    eax,0xfb77224d
  409133:	test   al,0xb1
  409135:	mov    WORD PTR [edi-0x3741008c],?
  40913b:	adc    BYTE PTR [eax-0xb],bl
  40913e:	cmp    DWORD PTR [esi+0x8fb624d],edx
  409144:	xchg   edi,eax
  409145:	arpl   si,si
  409147:	or     eax,0xae31a399
  40914c:	enter  0x4fbe,0xc
  409150:	sbb    dh,BYTE PTR gs:[ecx-0x5f]
  409154:	mov    edx,0x552e560e
  409159:	mov    dh,0x68
  40915b:	div    BYTE PTR [ebp+0x76518c0a]
  409161:	gs jmp 0x3a6d7989
  409167:	lods   al,BYTE PTR ds:[esi]
  409168:	clc    
  409169:	fist   WORD PTR [esi-0x5430b10b]
  40916f:	sub    edi,DWORD PTR [ebx+0x7d]
  409172:	rol    DWORD PTR [ebx+0x30],cl
  409175:	lea    esi,[edx+0x7e]
  409178:	jns    0x409165
  40917a:	popa   
  40917b:	push   es
  40917c:	xor    ecx,DWORD PTR ds:0xc662ee88
  409182:	cmp    eax,0x82e7aa37
  409187:	and    esi,DWORD PTR [esi]
  409189:	dec    edx
  40918a:	std    
  40918b:	imul   esp,DWORD PTR [esi-0x33d425aa],0xe4b4e409
  409195:	add    eax,0x9ce855e2
  40919a:	xchg   DWORD PTR [esi+0x65],edi
  40919d:	or     al,0x61
  40919f:	push   edx
  4091a0:	cli    
  4091a1:	out    dx,al
  4091a2:	jge    0x409179
  4091a4:	cmp    al,0x92
  4091a6:	inc    ecx
  4091a7:	xchg   edi,eax
  4091a8:	inc    BYTE PTR [edi]
  4091aa:	add    al,0xcb
  4091ac:	mov    bl,0xa7
  4091ae:	sub    esi,ebx
  4091b0:	mov    ds:0x97f11973,eax
  4091b5:	cld    
  4091b6:	(bad)
  4091b9:	cmp    BYTE PTR [eax],dl
  4091bb:	jo     0x4091c1
  4091bd:	and    eax,0x3eb60e30
  4091c2:	sar    DWORD PTR [esi-0x57],cl
  4091c5:	inc    eax
  4091c6:	(bad)  
  4091c7:	sub    ebx,ebp
  4091c9:	fdivr  QWORD PTR ds:0x55270266
  4091cf:	out    0x58,al
  4091d1:	and    DWORD PTR [ebx],ecx
  4091d3:	jmp    0x49b9:0x8c73df53
  4091da:	cdq    
  4091db:	stc    
  4091dc:	fsubr  st,st(1)
  4091de:	daa    
  4091df:	push   ds
  4091e0:	mov    dl,0x91
  4091e2:	scas   eax,DWORD PTR es:[edi]
  4091e3:	ss pop ds
  4091e5:	xchg   ebp,eax
  4091e6:	inc    edx
  4091e7:	mov    ds:0x3fdd56ff,eax
  4091ec:	pop    ebx
  4091ed:	pushf  
  4091ee:	sbb    BYTE PTR [edx-0x2c],dl
  4091f1:	pop    ebp
  4091f2:	aas    
  4091f3:	pop    ebp
  4091f4:	psraw  mm2,QWORD PTR [ecx]
  4091f7:	inc    ebp
  4091f8:	or     eax,0x89a14de9
  4091fd:	jb     0x40924f
  4091ff:	push   eax
  409200:	mov    esi,0x10c86f65
  409205:	and    DWORD PTR [ebp-0xa2748f8],ecx
  40920b:	(bad)  
  40920c:	or     bh,cl
  40920e:	wrmsr  
  409210:	add    eax,0x7b92a20f
  409215:	mov    eax,0xed0849e0
  40921a:	add    ebx,DWORD PTR [edi-0x1f]
  40921d:	pop    ebp
  40921e:	sub    al,0xb3
  409220:	faddp  st(6),st
  409222:	pop    ebp
  409223:	and    al,0x68
  409225:	lock xchg esi,eax
  409227:	fld    TBYTE PTR [esi-0x565b23c]
  40922d:	fwait
  40922e:	mov    ah,0xa6
  409230:	std    
  409231:	in     al,0x1
  409233:	loope  0x40928c
  409235:	xor    bl,dl
  409237:	arpl   WORD PTR [edx+0x5491a55f],ax
  40923d:	mov    WORD PTR [ebp-0x3f],es
  409240:	call   0xf7f5:0xbacd2f04
  409247:	lock out dx,eax
  409249:	cvtpi2ps xmm2,QWORD PTR [edi+0x5c]
  40924d:	aas    
  40924e:	sub    eax,0xd08b837c
  409253:	int3   
  409254:	int    0x15
  409256:	inc    eax
  409257:	hlt    
  409258:	mov    al,ds:0xaaaab209
  40925d:	jle    0x4091fa
  40925f:	push   edi
  409260:	aas    
  409261:	and    eax,esp
  409263:	loop   0x4092bd
  409265:	push   ds
  409266:	and    BYTE PTR [edi],dl
  409268:	fadd   QWORD PTR [ebp+0x30]
  40926b:	call   0x882bcc73
  409270:	aaa    
  409271:	jp     0x409251
  409273:	and    dh,BYTE PTR fs:[ebp+0x2]
  409277:	inc    ecx
  409278:	push   ebx
  409279:	mov    esi,0x27a48912
  40927e:	in     eax,dx
  40927f:	xlat   BYTE PTR ds:[ebx]
  409280:	pushf  
  409281:	test   al,0x16
  409283:	inc    ecx
  409284:	int    0xc2
  409286:	(bad)  
  409288:	arpl   WORD PTR [eax-0x6990067d],cx
  40928e:	sub    cl,dl
  409290:	idiv   BYTE PTR [ecx+0x56]
  409293:	cmp    esp,eax
  409295:	mov    esi,0x76eab18f
  40929a:	xchg   esi,eax
  40929b:	jl     0x409315
  40929d:	push   ecx
  40929e:	stc    
  40929f:	dec    ebp
  4092a0:	inc    ebp
  4092a1:	cli    
  4092a2:	mov    cl,0x24
  4092a4:	cmp    bh,al
  4092a6:	mov    edi,0xaeb92499
  4092ab:	mov    bh,0xa0
  4092ad:	stos   DWORD PTR es:[edi],eax
  4092ae:	adc    bh,BYTE PTR [edi+edi*2]
  4092b1:	sub    edi,edi
  4092b3:	pop    esi
  4092b4:	fcom   st(5)
  4092b6:	sti    
  4092b7:	inc    eax
  4092b8:	retf   
  4092b9:	jno    0x4092e6
  4092bb:	mov    bh,0x8d
  4092bd:	inc    esi
  4092be:	dec    DWORD PTR [esi]
  4092c0:	in     eax,dx
  4092c1:	aaa    
  4092c2:	push   es
  4092c3:	xchg   BYTE PTR [edi],dl
  4092c5:	jb     0x409341
  4092c7:	sub    eax,DWORD PTR [ebx+0x2cacdbb7]
  4092cd:	inc    esp
  4092ce:	push   esi
  4092cf:	in     al,0x2b
  4092d1:	es jne 0x40929b
  4092d4:	push   ebp
  4092d5:	fucomip st,st(0)
  4092d7:	sbb    eax,0x8637ef6e
  4092dc:	or     esp,DWORD PTR [esi+0x48717ad]
  4092e2:	fcomi  st,st(4)
  4092e4:	aad    0x3e
  4092e6:	mov    cl,0xf7
  4092e8:	or     al,0xcf
  4092ea:	mov    ah,0x45
  4092ec:	add    eax,0x645310c1
  4092f1:	push   0x9f6c862b
  4092f6:	loop   0x409331
  4092f8:	mov    edx,0x719cb57e
  4092fd:	mov    edx,0xfb32fb4c
  409302:	sar    bh,cl
  409304:	adc    edi,DWORD PTR [ebx]
  409306:	jae    0x409343
  409308:	retf   
  409309:	sbb    BYTE PTR [edx+0x41],0xfd
  40930d:	enter  0x52a9,0xbe
  409311:	js     0x409367
  409313:	dec    ebx
  409314:	cmp    ecx,edi
  409316:	aas    
  409317:	xor    ah,BYTE PTR ss:[ebx+0xf]
  40931b:	je     0x409305
  40931d:	fsubrp st(0),st
  40931f:	cld    
  409320:	iret   
  409321:	add    DWORD PTR [esi-0x30342e87],edi
  409327:	jmp    0x90410500
  40932c:	inc    ecx
  40932d:	inc    esp
  40932e:	xor    ch,BYTE PTR ds:0xcf39e979
  409334:	loopne 0x4093af
  409336:	idiv   esp
  409338:	mov    bl,0xe7
  40933a:	popf   
  40933b:	dec    ebx
  40933c:	jns    0x409376
  40933e:	in     al,dx
  40933f:	mov    dh,BYTE PTR [esi-0x77]
  409342:	ret    
  409343:	das    
  409344:	into   
  409345:	lea    ebp,[eax-0x2badfe05]
  40934b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40934c:	lods   eax,DWORD PTR ds:[esi]
  40934d:	loope  0x4093bc
  40934f:	in     eax,0x2b
  409351:	fucomip st,st(0)
  409353:	mov    dl,al
  409355:	inc    ecx
  409356:	lods   eax,DWORD PTR ds:[esi]
  409357:	mov    ch,0x76
  409359:	xchg   edx,eax
  40935a:	inc    esp
  40935b:	mov    cl,0xbd
  40935d:	lods   eax,DWORD PTR ds:[esi]
  40935f:	retf   0x3a9
  409362:	mov    DWORD PTR [esi-0x1528a3b4],ebx
  409368:	and    eax,0xfd212fa3
  40936d:	imul   ebp,DWORD PTR [ecx-0x3582895b],0xeaeb4c11
  409377:	inc    esp
  409378:	mov    edx,0xc6d6d544
  40937d:	repnz test DWORD PTR [ebp-0x5213c654],edi
  409384:	imul   ebp,DWORD PTR [ebp+0x43],0x6e
  409388:	clc    
  409389:	int3   
  40938a:	clc    
  40938b:	xchg   ebp,eax
  40938c:	lods   eax,DWORD PTR ds:[esi]
  40938d:	test   DWORD PTR [edx],ebp
  40938f:	fs ins BYTE PTR es:[edi],dx
  409391:	dec    eax
  409392:	push   0x79
  409394:	clc    
  409395:	je     0x4093f4
  409397:	inc    edi
  409398:	dec    esi
  409399:	or     cl,BYTE PTR [ecx+ebp*4-0x2]
  40939d:	pop    ecx
  40939e:	pop    edx
  40939f:	cmp    eax,0x17c6f2aa
  4093a4:	jp     0x409403
  4093a6:	adc    bx,WORD PTR [esi]
  4093a9:	fdiv   QWORD PTR [ecx+0xd]
  4093ac:	adc    dh,BYTE PTR [ebx+eiz*2-0x4a528200]
  4093b3:	dec    eax
  4093b4:	lahf   
  4093b5:	pusha  
  4093b6:	pop    esp
  4093b7:	mov    ebx,0xde398197
  4093bc:	scas   al,BYTE PTR es:[edi]
  4093bd:	loope  0x40943c
  4093bf:	in     al,dx
  4093c0:	test   eax,0xf1b50368
  4093c5:	popf   
  4093c6:	lea    esi,[ecx+0x7]
  4093c9:	fsubr  st,st(7)
  4093cb:	sbb    BYTE PTR [edi+0x4a066e9d],cl
  4093d1:	push   ebp
  4093d2:	daa    
  4093d3:	push   esi
  4093d4:	or     BYTE PTR [ebx+edi*4],dh
  4093d7:	mov    ds:0x9c81db54,al
  4093dc:	jg     0x409396
  4093de:	call   0x6e20:0x66d4d3
  4093e5:	shr    DWORD PTR [ebx+eax*1+0x3e],1
  4093e9:	jecxz  0x409465
  4093eb:	dec    ebx
  4093ec:	lock mov BYTE PTR [esi+ebx*8+0xff52bae],dl
  4093f4:	sbb    eax,0xf9a5348b
  4093f9:	(bad)  
  4093fa:	je     0x40939c
  4093fc:	ss and ch,ch
  4093ff:	je     0x40943e
  409401:	xchg   ebp,eax
  409402:	sahf   
  409403:	shr    DWORD PTR [edi],1
  409405:	dec    ecx
  409406:	xchg   ecx,eax
  409407:	jno    0x4093d1
  409409:	mov    al,0xe0
  40940b:	pop    ds
  40940c:	xchg   DWORD PTR [esi],ebp
  40940e:	in     eax,dx
  40940f:	outs   dx,DWORD PTR ds:[esi]
  409410:	mov    ch,0xcc
  409412:	pop    esp
  409413:	pop    esi
  409414:	retf   0x7054
  409417:	mov    eax,ds:0xd27f48fb
  40941c:	sub    al,0x2c
  40941e:	jo     0x4093f9
  409420:	inc    eax
  409421:	cmp    edx,eax
  409423:	xlat   BYTE PTR ds:[ebx]
  409424:	mov    cl,0xb
  409426:	xchg   esi,eax
  409427:	aaa    
  409428:	nop
  409429:	add    BYTE PTR [eax],bl
  40942b:	sahf   
  40942c:	js     0x4093c7
  40942e:	dec    ebp
  40942f:	stos   DWORD PTR es:[edi],eax
  409430:	imul   ecx,DWORD PTR [ebp-0x55e5c3f],0x36
  409437:	mov    bl,0x31
  409439:	lods   al,BYTE PTR ds:[esi]
  40943a:	in     al,0xd1
  40943c:	jmp    0x409422
  40943e:	loopne 0x409436
  409440:	int3   
  409441:	fcmovbe st,st(4)
  409443:	(bad)  
  409444:	jno    0x4094b8
  409446:	cs push 0x3fbef93a
  40944c:	dec    ebp
  40944d:	stos   DWORD PTR es:[edi],eax
  40944e:	fidivr WORD PTR [esi]
  409450:	in     al,0x2a
  409452:	std    
  409453:	stos   BYTE PTR es:[edi],al
  409454:	jne    0x4094a0
  409456:	add    BYTE PTR [edi-0x4d484e03],dl
  40945c:	sub    al,BYTE PTR [eax-0x7f804a22]
  409462:	adc    ebx,DWORD PTR [ecx]
  409464:	ss jbe 0x40943e
  409467:	jmp    0x409420
  409469:	scas   al,BYTE PTR es:[edi]
  40946a:	mov    WORD PTR [edx+0x20fbc24a],gs
  409470:	mov    ch,0xee
  409472:	out    0xa9,eax
  409474:	dec    edi
  409475:	sbb    dh,BYTE PTR [esi+eax*1]
  409478:	inc    ebp
  409479:	pop    ds
  40947a:	or     eax,0xd11081b0
  40947f:	xor    DWORD PTR [edi+0x6e],0x33dad9f9
  409486:	lahf   
  409487:	pop    esi
  409488:	repnz ror DWORD PTR [ebx],cl
  40948b:	dec    ecx
  40948c:	jo     0x40943e
  40948e:	neg    DWORD PTR ss:[edi+0x20da548d]
  409495:	lods   al,BYTE PTR ds:[esi]
  409496:	or     eax,0x3926d02a
  40949b:	xor    al,0x8d
  40949d:	popa   
  40949e:	and    BYTE PTR es:[esi],cl
  4094a1:	in     eax,dx
  4094a2:	add    edi,esp
  4094a4:	jns    0x4094c1
  4094a6:	pop    ecx
  4094a7:	popf   
  4094a8:	sub    DWORD PTR [eax],edi
  4094aa:	das    
  4094ab:	aaa    
  4094ac:	jp     0x409452
  4094ae:	jmp    0xb41:0x4f233c68
  4094b5:	jno    0x409447
  4094b7:	push   0xffffffbf
  4094b9:	loopne 0x40949c
  4094bb:	daa    
  4094bc:	jmp    0xce9968bd
  4094c1:	sbb    ah,cl
  4094c3:	fist   WORD PTR [edx+0x50c6e2e1]
  4094c9:	jmp    0x5d35:0x8330776d
  4094d0:	int    0x22
  4094d2:	mov    ebx,DWORD PTR ds:0x8251cc2
  4094d8:	mov    edx,DWORD PTR [ecx+ebp*4-0x5a12aa07]
  4094df:	inc    edi
  4094e0:	and    dh,cl
  4094e2:	push   es
  4094e3:	inc    ebp
  4094e4:	cmp    esp,eax
  4094e6:	mov    ecx,DWORD PTR [edi+0x28dabe4c]
  4094ec:	mov    al,0x29
  4094ee:	shr    cl,0x80
  4094f1:	inc    eax
  4094f3:	and    eax,0x86bf34ac
  4094f8:	push   ss
  4094f9:	ja     0x4094cf
  4094fb:	sub    al,0xbf
  4094fd:	(bad)  
  4094fe:	mov    esi,0xd0c7e7e1
  409503:	lock adc ebp,DWORD PTR [edx-0x4b945317]
  40950a:	mov    esi,0x385a8da9
  40950f:	into   
  409510:	loope  0x4094bb
  409512:	ret    0xfb06
  409515:	add    DWORD PTR [edx-0x67c3962e],ecx
  40951b:	dec    edx
  40951c:	adc    al,0x1d
  40951e:	xor    BYTE PTR [esi+0x62],bl
  409521:	inc    esp
  409522:	mov    ch,ah
  409524:	dec    ebx
  409525:	fs cdq 
  409527:	dec    eax
  409528:	jno    0x409587
  40952a:	inc    ebp
  40952b:	or     DWORD PTR [edx+ecx*8-0x4f],ecx
  40952f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409530:	mov    ?,WORD PTR [ecx-0x58fd4d42]
  409536:	addr16 inc eax
  409538:	(bad)  
  409539:	(bad)  
  40953a:	jmp    0x96ea6eab
  40953f:	scas   al,BYTE PTR es:[edi]
  409540:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409542:	in     al,0xd1
  409544:	mov    edi,0xac93112d
  409549:	xchg   ecx,eax
  40954a:	cmp    bl,BYTE PTR [esi]
  40954c:	mov    bh,0xc8
  40954e:	adc    al,0xdd
  409550:	cmp    al,bh
  409552:	mov    ecx,0xd6e97ded
  409557:	int    0xba
  409559:	into   
  40955a:	jns    0x40957a
  40955c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40955d:	adc    DWORD PTR [ebp+eiz*2-0x27fb21c2],edi
  409564:	dec    ebx
  409565:	loope  0x409551
  409567:	repnz fucom st(6)
  40956a:	(bad)  
  40956c:	imul   BYTE PTR [ecx+0x53]
  40956f:	(bad)  
  409570:	rcl    BYTE PTR [edx-0x74650857],0x61
  409577:	jge    0x4095a2
  409579:	ret    
  40957a:	fwait
  40957b:	retf   
  40957c:	push   ss
  40957d:	mov    al,ds:0xaf4800ba
  409583:	pop    es
  409584:	adc    DWORD PTR [edi],esp
  409586:	in     al,dx
  409587:	mov    eax,0x65c7ab1e
  40958c:	jbe    0x40953a
  40958e:	call   0xd21c:0x2006866e
  409595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409596:	ffree  st(4)
  409598:	xchg   esp,eax
  409599:	(bad)  
  40959a:	push   ds
  40959b:	adc    ebp,DWORD PTR [ecx+0x18570d31]
  4095a1:	or     DWORD PTR [eax-0x1a4e8f7f],edi
  4095a7:	fidiv  DWORD PTR [edx-0x10]
  4095aa:	or     BYTE PTR [edx+0x47c38952],cl
  4095b0:	sub    eax,0xbed5ef8a
  4095b5:	jp     0x4095b4
  4095b7:	rcr    BYTE PTR [ebx-0x7],0x15
  4095bb:	dec    edx
  4095bc:	repz aas 
  4095be:	fld    TBYTE PTR [eax-0x5098f975]
  4095c4:	ror    edx,0xba
  4095c7:	and    dl,BYTE PTR [ebx-0x454c8bfc]
  4095cd:	test   DWORD PTR [esi-0x75],ebp
  4095d0:	pop    esp
  4095d1:	fcomip st,st(5)
  4095d3:	inc    ebx
  4095d4:	inc    edx
  4095d5:	cmp    al,0x1a
  4095d7:	mov    dh,BYTE PTR [edi]
  4095d9:	add    al,0x84
  4095db:	hlt    
  4095dc:	pop    ecx
  4095dd:	lds    ebx,FWORD PTR [edx+0x6]
  4095e0:	std    
  4095e1:	sub    DWORD PTR [eax+0xd920fd9],eax
  4095e7:	imul   ebp,ebx,0x8201cb6a
  4095ed:	aam    0x51
  4095ef:	lods   eax,DWORD PTR ds:[esi]
  4095f0:	in     al,dx
  4095f1:	jecxz  0x4095fa
  4095f3:	sbb    al,ch
  4095f5:	icebp  
  4095f6:	mov    al,ds:0xca17f779
  4095fb:	jp     0x409661
  4095fd:	or     BYTE PTR [esi],0xc5
  409600:	dec    edx
  409601:	data16 or ch,dl
  409604:	std    
  409605:	jmp    0x35334ebb
  40960a:	jbe    0x4095ff
  40960c:	cmp    bl,dl
  40960e:	push   es
  40960f:	push   es
  409610:	or     ch,BYTE PTR [edi]
  409612:	jmp    0x9d37:0x5688d8d8
  409619:	pop    ss
  40961a:	mov    al,ds:0xb4fa43b3
  40961f:	stos   DWORD PTR es:[edi],eax
  409620:	ds cli 
  409622:	test   DWORD PTR [ecx],0xdb9960c2
  409628:	xchg   ebp,eax
  409629:	lods   eax,DWORD PTR ds:[esi]
  40962a:	push   eax
  40962b:	xchg   ebx,eax
  40962c:	call   0xdb08e0a1
  409631:	fmul   QWORD PTR [edi]
  409633:	sbb    al,0xed
  409635:	int3   
  409636:	push   0x3d
  409638:	stos   BYTE PTR es:[edi],al
  409639:	nop
  40963a:	inc    esp
  40963b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40963c:	jbe    0x40965d
  40963e:	mov    eax,0x61a9ff10
  409643:	sub    edi,DWORD PTR [esi+0x783da081]
  409649:	xor    DWORD PTR [ebx+0x75713891],edx
  40964f:	or     eax,0xb7596037
  409654:	ja     0x4096d4
  409656:	ins    DWORD PTR es:[edi],dx
  409657:	sti    
  409658:	xchg   ebp,esp
  40965a:	mov    edx,0x65ad1aab
  40965f:	adc    BYTE PTR [ecx+0x5b],ah
  409662:	lock rol DWORD PTR [esi-0x1ecc45b3],1
  409669:	adc    eax,0x8f352f64
  40966e:	mov    ch,0xc3
  409670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409671:	mov    eax,ds:0x27b9af32
  409676:	adc    dh,cl
  409678:	mov    al,ds:0xa397abf0
  40967d:	mov    edi,DWORD PTR [edi+ebx*1+0xe]
  409681:	mov    bh,0xd4
  409683:	xor    eax,0xadaa3fa2
  409688:	add    DWORD PTR [ebp-0x2e584a25],edi
  40968e:	mov    ch,0xb9
  409690:	xchg   BYTE PTR [ebx+0x7],bl
  409693:	aad    0x12
  409695:	sbb    DWORD PTR [edi-0x50],0x1f862186
  40969c:	outs   dx,BYTE PTR ds:[esi]
  40969d:	xor    DWORD PTR [edx+0x5f],edi
  4096a0:	dec    ebx
  4096a1:	bound  ecx,QWORD PTR [edx-0x1543420e]
  4096a7:	retf   
  4096a8:	rcl    BYTE PTR ds:0x38bc86e6,cl
  4096ae:	(bad)  
  4096af:	fdivr  QWORD PTR [esi+eiz*8]
  4096b2:	cmovp  ebx,ebp
  4096b5:	pop    es
  4096b6:	jbe    0x4096ba
  4096b8:	mov    esi,edi
  4096ba:	inc    ebx
  4096bb:	mov    DWORD PTR [ecx],0xab7d1228
  4096c1:	mov    ebp,0x4ea293f9
  4096c6:	daa    
  4096c7:	cdq    
  4096c8:	jnp    0x40970d
  4096ca:	leave  
  4096cb:	nop
  4096cc:	add    DWORD PTR [eax+0x11],ebp
  4096cf:	xchg   edi,eax
  4096d0:	sbb    eax,0x64957d0a
  4096d5:	xchg   ebx,eax
  4096d6:	adc    dl,BYTE PTR [esi-0x24]
  4096d9:	loope  0x409669
  4096db:	add    eax,DWORD PTR [edi]
  4096dd:	ds call 0x44b6:0x3ba0ecac
  4096e5:	(bad)  
  4096e6:	and    eax,0x88a441eb
  4096eb:	push   eax
  4096ec:	fs push ecx
  4096ee:	pop    ss
  4096ef:	add    DWORD PTR [ecx-0x3c11e858],esi
  4096f5:	mov    al,bh
  4096f7:	imul   edx,DWORD PTR [eax-0x5],0xffffffa0
  4096fb:	cdq    
  4096fc:	jbe    0x4096a5
  4096fe:	(bad)  
  4096ff:	or     al,0x17
  409701:	inc    edi
  409702:	cmp    eax,0xe376fb1a
  409707:	lods   al,BYTE PTR ds:[esi]
  409708:	or     DWORD PTR [ecx+0x3c58330],ecx
  40970e:	mov    ebp,0x72698077
  409713:	push   ebp
  409714:	packuswb mm4,mm3
  409717:	sbb    BYTE PTR [eax],dl
  409719:	xor    esi,esp
  40971b:	or     cl,cl
  40971d:	pushf  
  40971e:	push   ebp
  40971f:	scas   al,BYTE PTR es:[edi]
  409720:	push   ebp
  409721:	pop    esp
  409722:	cmp    al,0xbf
  409724:	mov    al,0xde
  409726:	xor    esi,DWORD PTR [ebx+0x553b42b8]
  40972c:	mov    WORD PTR [edi],ss
  40972e:	shl    esp,1
  409730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409731:	mov    ecx,0x7acbbbba
  409736:	std    
  409737:	je     0x40971a
  409739:	out    0x8f,al
  40973b:	sbb    al,0x16
  40973d:	fldenv [ecx]
  40973f:	cmp    eax,eax
  409741:	and    BYTE PTR [esi-0x5175c5ee],0x42
  409748:	or     ebx,DWORD PTR [edi]
  40974a:	cmp    al,0x85
  40974c:	inc    esp
  40974d:	shr    BYTE PTR [ebp+0x28],1
  409750:	shr    DWORD PTR [ebp-0x33],1
  409753:	inc    ebp
  409754:	fstp   DWORD PTR [edi]
  409756:	stc    
  409757:	xor    BYTE PTR [ecx+0x4ba77113],dl
  40975d:	fmulp  st(6),st
  40975f:	jg     0x4097a1
  409761:	retf   
  409762:	fisttp QWORD PTR [ebx+0x3dc172ac]
  409768:	test   eax,0xe7c1eca0
  40976d:	xchg   ebp,eax
  40976e:	dec    ebx
  40976f:	ss push ebp
  409771:	pop    esp
  409772:	inc    ebx
  409773:	push   ss
  409774:	sar    DWORD PTR [edi+0x17366a78],cl
  40977a:	xchg   dl,dl
  40977c:	popf   
  40977d:	xchg   esp,eax
  40977e:	aaa    
  40977f:	cmp    ecx,DWORD PTR ds:0xf458b03a
  409785:	mov    ds:0x849b345e,al
  40978a:	push   esi
  40978b:	sub    eax,0x8ec7fc07
  409790:	cmp    eax,0x63f7ad6e
  409795:	ret    
  409796:	mov    ecx,edx
  409798:	xlat   BYTE PTR gs:[ebx]
  40979a:	push   ecx
  40979b:	aaa    
  40979c:	stos   BYTE PTR es:[edi],al
  40979d:	push   eax
  40979e:	cmp    bh,al
  4097a0:	xchg   ebp,eax
  4097a1:	xchg   DWORD PTR [eax],eax
  4097a3:	scas   eax,DWORD PTR es:[edi]
  4097a4:	xchg   DWORD PTR [ebp-0x61e572ee],ebp
  4097aa:	sahf   
  4097ab:	push   0xbdf5cca1
  4097b0:	mov    ah,cl
  4097b2:	jnp    0x409792
  4097b4:	dec    esp
  4097b6:	jp     0x409809
  4097b8:	mov    dh,0x92
  4097ba:	pop    eax
  4097bb:	jbe    0x4097d8
  4097bd:	nop
  4097be:	shl    edx,0x2f
  4097c1:	sbb    eax,0x26f372e1
  4097c6:	(bad)  
  4097c7:	(bad)  
  4097c8:	fwait
  4097c9:	or     dl,BYTE PTR [ecx+ebx*8+0x3b8ac403]
  4097d0:	and    al,al
  4097d2:	xor    eax,0x55c6a9ce
  4097d7:	imul   esi,DWORD PTR [eax+eiz*1-0x5],0x55c5014b
  4097df:	mov    al,0xcf
  4097e1:	sti    
  4097e2:	in     eax,0x32
  4097e4:	push   ds
  4097e5:	cmp    dl,BYTE PTR [edx+eax*4+0x132b3e93]
  4097ec:	xor    BYTE PTR [edx],bl
  4097ee:	mov    ch,0x5b
  4097f0:	sbb    eax,0xc4eeaf24
  4097f5:	out    0x4f,al
  4097f7:	imul   ecx,DWORD PTR [ebx],0x7c884b57
  4097fd:	std    
  4097fe:	push   ebp
  4097ff:	int3   
  409800:	mov    esp,0x43240e59
  409805:	(bad)  
  409806:	leave  
  409807:	pop    edx
  409808:	jb     0x4097a1
  40980a:	cmc    
  40980b:	pop    eax
  40980c:	dec    ecx
  40980d:	aad    0xb2
  40980f:	dec    edx
  409810:	jmp    0x4097d8
  409812:	(bad)  
  409813:	mov    ss,WORD PTR [ecx+0x44d2ab21]
  409819:	jmp    0x4097c8
  40981b:	(bad)  
  40981c:	fcomp  QWORD PTR [ebp-0x5b4ff44f]
  409822:	xor    BYTE PTR [ecx-0x7987db63],cl
  409828:	inc    edx
  409829:	jnp    0x409898
  40982b:	ret    
  40982c:	stos   BYTE PTR es:[edi],al
  40982d:	cld    
  40982e:	and    bh,BYTE PTR [esp+ebp*1+0x2cd763fa]
  409835:	ret    0xb35d
  409838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409839:	outs   dx,BYTE PTR ds:[esi]
  40983a:	xchg   dh,cl
  40983c:	or     ah,BYTE PTR [ebp+0x6d]
  40983f:	stos   BYTE PTR es:[edi],al
  409840:	sub    BYTE PTR [esi*2-0x59f186c5],cl
  409847:	ins    BYTE PTR es:[edi],dx
  409848:	or     bl,bl
  40984a:	pusha  
  40984b:	cli    
  40984c:	sbb    dh,cl
  40984e:	add    DWORD PTR [ecx],edx
  409850:	add    ch,BYTE PTR ds:0xa5b59951
  409856:	enter  0x44b0,0xfc
  40985a:	lods   eax,DWORD PTR ds:[esi]
  40985b:	les    edx,FWORD PTR [ebx-0x4f]
  40985e:	aaa    
  40985f:	inc    edx
  409860:	dec    ebp
  409861:	xchg   edi,eax
  409862:	mov    ecx,0x9f2fe9a4
  409867:	lds    ecx,FWORD PTR [edi]
  409869:	daa    
  40986a:	mov    bl,0x5a
  40986c:	jns    0x409846
  40986e:	adc    DWORD PTR [edx+0x7a02b2ca],esi
  409874:	outs   dx,DWORD PTR ds:[esi]
  409875:	xchg   esi,eax
  409876:	pop    esi
  409877:	int    0xee
  409879:	dec    eax
  40987a:	ficomp WORD PTR [ecx+0x2d59405f]
  409880:	sub    ah,bl
  409882:	add    BYTE PTR [ebx+0x2b],bl
  409885:	or     al,0xf6
  409887:	icebp  
  409888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409889:	xchg   ch,al
  40988b:	mov    ebp,0xeb98767e
  409890:	adc    ebp,DWORD PTR [eax]
  409892:	cmp    BYTE PTR [ebx+0x3],bl
  409895:	repz cmp al,0x86
  409898:	out    0x94,al
  40989a:	mov    ds:0x39ca5737,al
  40989f:	xor    al,0x81
  4098a1:	inc    esp
  4098a2:	push   ecx
  4098a3:	mov    ecx,0x1eedc6da
  4098a8:	in     al,dx
  4098a9:	mov    cl,0x33
  4098ab:	arpl   WORD PTR [esp+esi*2-0x37f8a1d3],dx
  4098b2:	lods   eax,DWORD PTR ds:[esi]
  4098b3:	jbe    0x409835
  4098b5:	repz mov al,ds:0x1ad2bdf5
  4098bb:	int3   
  4098bc:	pop    esi
  4098bd:	ret    
  4098be:	mov    esp,0xfc2639f6
  4098c3:	cs dec edi
  4098c5:	lock xchg DWORD PTR [esi*8+0x184c1fe6],esp
  4098cd:	cwde   
  4098ce:	xchg   esi,eax
  4098cf:	int3   
  4098d0:	rcl    DWORD PTR [eax+0x7],0x59
  4098d4:	push   ebp
  4098d5:	jae    0x40992f
  4098d7:	aaa    
  4098d8:	xor    DWORD PTR [esi-0x27ea609e],edx
  4098de:	cmp    DWORD PTR ds:[ebx],esp
  4098e1:	jno    0x4098cb
  4098e3:	stc    
  4098e4:	lea    edx,[edi+ebp*8]
  4098e7:	mov    dl,0xde
  4098e9:	push   es
  4098ea:	test   BYTE PTR [esi+0x2b],dl
  4098ed:	(bad)  
  4098ee:	loop   0x4098ff
  4098f0:	xchg   ebx,eax
  4098f1:	mov    cl,0x83
  4098f3:	pop    esp
  4098f4:	pop    ecx
  4098f5:	mov    ebx,0xfc1f5119
  4098fa:	icebp  
  4098fb:	cdq    
  4098fc:	(bad)  
  4098fd:	retf   0x1f09
  409900:	test   al,0xfc
  409902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409903:	pop    esi
  409904:	pop    esi
  409905:	push   ss
  409906:	ror    bh,cl
  409908:	in     al,0xb9
  40990a:	mov    bl,0x13
  40990c:	jmp    DWORD PTR [ebx+0x6b9332f4]
  409912:	jecxz  0x409993
  409914:	sub    DWORD PTR [ecx*1-0x6a3b6627],0x24c578b7
  40991f:	iret   
  409920:	rol    DWORD PTR [edx+0x7f],cl
  409923:	or     eax,0x6a33cfd3
  409928:	rol    DWORD PTR [ebp+0x1e],cl
  40992b:	je     0x4099a5
  40992d:	xchg   ebx,eax
  40992e:	add    dl,BYTE PTR ds:0x565a61d3
  409934:	pop    ebx
  409935:	xlat   BYTE PTR ds:[ebx]
  409936:	push   ecx
  409937:	ja     0x409932
  409939:	or     DWORD PTR [ecx+0x6ef4c9f2],eax
  40993f:	mov    ch,0xc0
  409941:	stos   BYTE PTR es:[edi],al
  409942:	fild   QWORD PTR [edx]
  409944:	sub    cl,BYTE PTR [edx+0x4628eded]
  40994a:	std    
  40994b:	adc    edi,DWORD PTR [ebx]
  40994d:	rol    DWORD PTR [eax+0x5d16cb8d],0xac
  409954:	ror    BYTE PTR [eax-0x1],cl
  409957:	ficom  WORD PTR [edx]
  409959:	or     cl,al
  40995b:	mov    ch,0x99
  40995d:	das    
  40995e:	cmp    bh,bl
  409960:	mov    DWORD PTR [ecx-0x57],esi
  409963:	xchg   edi,eax
  409964:	inc    ecx
  409965:	inc    esi
  409966:	jmp    0x225c1ba2
  40996b:	or     BYTE PTR [ecx+esi*1-0x10dbd734],bh
  409972:	or     eax,ecx
  409974:	fldenv cs:[ebx+0x5592feb]
  40997b:	pop    ecx
  40997c:	mov    dh,0xc5
  40997e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40997f:	xchg   ebp,eax
  409980:	jns    0x40997e
  409982:	jmp    0x6e9c:0xe25d8b4d
  409989:	aam    0x61
  40998b:	mov    ch,0xfc
  40998d:	jmp    0xc0b2b940
  409992:	push   0x47ecb8c2
  409997:	repnz cld 
  409999:	ftst   
  40999b:	fwait
  40999c:	outs   dx,BYTE PTR ds:[esi]
  40999d:	xchg   ebx,eax
  40999e:	outs   dx,DWORD PTR ds:[esi]
  40999f:	mov    ds:0xec55279f,eax
  4099a4:	lods   al,BYTE PTR ds:[esi]
  4099a5:	or     eax,0x1ec709e8
  4099aa:	or     eax,0x65ee1791
  4099af:	dec    edx
  4099b0:	fiadd  WORD PTR [ebx+0x9f8f2bd]
  4099b6:	xor    dl,bh
  4099b8:	fpatan 
  4099ba:	xor    BYTE PTR [ebx],dh
  4099bc:	mov    esp,0xded6e57b
  4099c1:	sahf   
  4099c2:	mov    dl,0x36
  4099c4:	out    0x85,eax
  4099c6:	sub    eax,0x68198c66
  4099cb:	mov    ?,WORD PTR [ecx+edi*4+0x49]
  4099cf:	push   cs
  4099d0:	mov    ebx,0x9358b36d
  4099d5:	sub    dl,bl
  4099d7:	ds in  al,0x19
  4099da:	add    BYTE PTR [eax],dh
  4099dc:	inc    edx
  4099dd:	test   BYTE PTR [eax],dh
  4099df:	add    DWORD PTR [ebx+eiz*2-0x7b267a5a],edx
  4099e6:	sbb    eax,0xb2593d18
  4099eb:	shr    ebp,1
  4099ed:	cmp    ch,BYTE PTR [edx+0x27ced97b]
  4099f3:	retf   0x20fd
  4099f6:	adc    esi,esi
  4099f8:	xchg   BYTE PTR [eax],dl
  4099fa:	adc    BYTE PTR [ecx],bl
  4099fc:	call   0xea1b3099
  409a01:	sub    edx,DWORD PTR [esi]
  409a03:	clc    
  409a04:	pusha  
  409a05:	mov    ch,0x83
  409a07:	hlt    
  409a08:	pop    ebp
  409a09:	fisttp WORD PTR [ecx-0x32b557a7]
  409a0f:	xor    ebx,DWORD PTR [eax]
  409a11:	pusha  
  409a12:	stos   BYTE PTR es:[edi],al
  409a13:	scas   eax,DWORD PTR es:[edi]
  409a14:	call   0x7b52fb2f
  409a19:	cwde   
  409a1a:	jmp    0x1256917d
  409a1f:	(bad)  
  409a22:	popa   
  409a23:	aad    0x9a
  409a25:	ds jno 0x409a72
  409a28:	sbb    eax,0x5bf02ca8
  409a2d:	sbb    BYTE PTR [edi],cl
  409a2f:	shr    DWORD PTR [ebx],1
  409a31:	ja     0x409a8f
  409a33:	sahf   
  409a34:	pop    ecx
  409a35:	adc    DWORD PTR [esi-0x7dedb352],edx
  409a3b:	stos   BYTE PTR es:[edi],al
  409a3c:	daa    
  409a3d:	pop    edi
  409a3e:	mov    eax,ds:0x3879553c
  409a43:	stos   BYTE PTR es:[edi],al
  409a44:	bound  ebp,QWORD PTR [edx+0x34550253]
  409a4a:	lock dec eax
  409a4c:	sub    eax,0x4783b28
  409a51:	adc    ebx,0xce87b45c
  409a57:	pop    eax
  409a58:	stos   DWORD PTR es:[edi],eax
  409a59:	into   
  409a5a:	jecxz  0x409a6f
  409a5c:	aas    
  409a5d:	daa    
  409a5e:	outs   dx,DWORD PTR ds:[esi]
  409a5f:	fldenv [ecx-0x5de3a037]
  409a65:	inc    ecx
  409a66:	(bad)  
  409a67:	pop    ebx
  409a68:	mul    eax
  409a6a:	push   ds
  409a6b:	loop   0x409a86
  409a6d:	cmp    esp,DWORD PTR [eax-0x3a976e82]
  409a73:	jb     0x409af1
  409a75:	jns    0x409ac3
  409a77:	push   esp
  409a78:	(bad)  
  409a7a:	(bad)  
  409a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a7c:	sbb    BYTE PTR [ebx],cl
  409a7e:	shld   ecx,eax,0xdf
  409a82:	dec    edi
  409a83:	iret   
  409a84:	push   0x2f
  409a86:	lods   eax,DWORD PTR ds:[esi]
  409a87:	xchg   esp,eax
  409a88:	dec    ebx
  409a89:	cmp    eax,0xe87e439
  409a8e:	pop    ss
  409a8f:	inc    edx
  409a90:	xchg   esi,eax
  409a91:	xchg   BYTE PTR [eax-0x76],bh
  409a94:	cld    
  409a95:	ficom  DWORD PTR [ecx+0x5f]
  409a98:	xchg   DWORD PTR [ecx-0x78],edi
  409a9b:	lock inc ebx
  409a9d:	xor    esp,DWORD PTR ds:0x4d86558e
  409aa3:	hlt    
  409aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa5:	xor    ebp,DWORD PTR ds:0x83af19a4
  409aab:	pop    esp
  409aac:	(bad)  
  409aad:	fcmovnbe st,st(4)
  409aaf:	retf   
  409ab0:	sub    eax,0x90de0cd8
  409ab5:	into   
  409ab6:	mov    ebx,0x11057ab6
  409abb:	les    esp,FWORD PTR [ebx-0x6d873013]
  409ac1:	jne    0x409b12
  409ac3:	mov    esi,0xe856d51e
  409ac8:	js     0x409b46
  409aca:	mov    dl,0x66
  409acc:	mov    al,0x90
  409ace:	mov    al,ds:0xb58ddf8a
  409ad3:	retf   0xe188
  409ad6:	dec    edx
  409ad7:	pop    ecx
  409ad8:	cdq    
  409ad9:	jge    0x409aae
  409adb:	lods   eax,DWORD PTR ds:[esi]
  409adc:	call   0x46c9:0x8756beb2
  409ae3:	mov    eax,ds:0xdbd72e5a
  409ae8:	retf   
  409ae9:	mov    ebx,0x8cf90e4b
  409aee:	add    al,BYTE PTR [edi-0x3c65c3a3]
  409af4:	jno    0x409b6d
  409af6:	scas   al,BYTE PTR es:[edi]
  409af7:	cld    
  409af8:	inc    ecx
  409af9:	dec    ecx
  409afa:	xor    eax,0xbc49914b
  409aff:	inc    edi
  409b00:	mov    al,ds:0xf499622a
  409b05:	cli    
  409b06:	loopne 0x409b00
  409b08:	and    BYTE PTR [edx-0x3f70f0f],0x4d
  409b0f:	inc    ecx
  409b10:	jb     0x409b0a
  409b12:	mov    eax,ds:0x9edee729
  409b17:	xchg   ebp,eax
  409b18:	ins    BYTE PTR es:[edi],dx
  409b19:	mov    edi,0x3b3f3530
  409b1e:	sub    al,0xc
  409b20:	enter  0x4ea9,0x88
  409b24:	inc    esp
  409b25:	in     al,dx
  409b26:	cmc    
  409b27:	jno    0x409b13
  409b29:	pop    ss
  409b2a:	dec    eax
  409b2b:	dec    edx
  409b2c:	popf   
  409b2d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409b2f:	test   BYTE PTR [ebp+ebx*2-0x10],0x88
  409b34:	outs   dx,DWORD PTR ds:[esi]
  409b35:	sub    ch,BYTE PTR [edi]
  409b37:	mov    ?,WORD PTR [ecx-0x18]
  409b3a:	in     eax,dx
  409b3b:	cmp    eax,0xcbfcaeff
  409b40:	sbb    ebx,edx
  409b42:	mov    ah,0xad
  409b44:	jb     0x409b7c
  409b46:	jle    0x409b6e
  409b48:	into   
  409b49:	hlt    
  409b4a:	jg     0x409b7b
  409b4c:	or     ebx,DWORD PTR [esi+0x57]
  409b4f:	stos   BYTE PTR es:[edi],al
  409b50:	mov    eax,0x89cb3fab
  409b55:	enter  0x9a9,0x37
  409b59:	int3   
  409b5a:	push   ds
  409b5b:	cmp    DWORD PTR [ecx+0x6e7269c4],edi
  409b61:	inc    esi
  409b62:	gs dec ecx
  409b64:	or     al,0xcd
  409b66:	jmp    0x409b78
  409b68:	add    al,0xfd
  409b6a:	out    dx,eax
  409b6b:	pop    esi
  409b6c:	pop    eax
  409b6d:	call   esi
  409b6f:	or     al,0x7a
  409b71:	stc    
  409b72:	fs mov dl,0x25
  409b75:	adc    BYTE PTR [ebx+ecx*2],ah
  409b78:	jmp    0x409b2a
  409b7a:	and    DWORD PTR [eax],0x825569c4
  409b80:	pop    edx
  409b81:	das    
  409b82:	mov    ds:0x6d92d5fc,eax
  409b87:	mov    dh,0xf2
  409b89:	test   eax,0xefda5f20
  409b8e:	cmp    eax,0xb2de5602
  409b93:	ds xchg edi,eax
  409b95:	in     eax,dx
  409b96:	adc    eax,esp
  409b98:	pop    esp
  409b99:	adc    ebx,DWORD PTR [esi-0x3ccc67c]
  409b9f:	xor    al,0x35
  409ba1:	stc    
  409ba2:	add    BYTE PTR [eax+0x5f],dh
  409ba5:	jns    0x409c03
  409ba7:	xchg   ebx,eax
  409ba8:	test   al,0xe9
  409baa:	push   ds
  409bab:	leave  
  409bac:	cs movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409baf:	mov    ds:0xad05f04,eax
  409bb4:	add    ebx,esi
  409bb6:	ss loope 0x409b68
  409bb9:	fstp   TBYTE PTR [ebp-0x5b0028ca]
  409bbf:	sbb    BYTE PTR [edx+0x6f479c72],ch
  409bc5:	mov    dl,0x8a
  409bc7:	imul   edx,DWORD PTR [ecx],0xbd941e29
  409bcd:	mov    bl,0xcd
  409bcf:	ror    DWORD PTR [edi+0x79],cl
  409bd2:	lds    edi,FWORD PTR [edi]
  409bd4:	loope  0x409c04
  409bd6:	hlt    
  409bd7:	add    BYTE PTR [esi+ecx*2],cl
  409bda:	(bad)  
  409bdb:	push   edi
  409bdc:	std    
  409bdd:	push   edi
  409bde:	sub    DWORD PTR [edx-0x51],0xf23cc429
  409be5:	jne    0x409be6
  409be7:	adc    al,0xea
  409be9:	jl     0x409bbe
  409beb:	xor    al,0xd6
  409bed:	fist   WORD PTR [edi+0x20]
  409bf0:	cmp    BYTE PTR [edx+0x21d74040],bh
  409bf6:	mov    dl,0xf2
  409bf8:	loop   0x409be7
  409bfa:	jmp    0x7479351c
  409bff:	call   0xac6cf1af
  409c04:	sub    al,0xde
  409c06:	into   
  409c07:	(bad)  
  409c08:	(bad)  [esi]
  409c0a:	ret    
  409c0b:	xchg   edi,eax
  409c0c:	(bad)  
  409c0d:	ins    BYTE PTR es:[edi],dx
  409c0e:	scas   al,BYTE PTR es:[edi]
  409c0f:	fidivr WORD PTR [ecx-0x1]
  409c12:	dec    esi
  409c13:	mov    esi,0xc70e57ea
  409c18:	push   eax
  409c19:	or     esp,DWORD PTR [ebp+0x53]
  409c1c:	scas   eax,DWORD PTR es:[edi]
  409c1d:	mov    dh,0x83
  409c1f:	mov    ebx,0xba9f0c63
  409c24:	repnz push esp
  409c26:	rcl    BYTE PTR [ecx+edi*4],0xee
  409c2a:	xchg   edi,eax
  409c2b:	loopne 0x409c23
  409c2d:	iret   
  409c2e:	xchg   esi,eax
  409c2f:	scas   eax,DWORD PTR es:[edi]
  409c30:	icebp  
  409c31:	dec    ebp
  409c32:	jmp    0x7a01:0xbf07f664
  409c39:	and    eax,ebx
  409c3b:	sub    al,BYTE PTR [edx]
  409c3d:	xchg   BYTE PTR [edx],dl
  409c3f:	pushf  
  409c40:	stc    
  409c41:	imul   edx,DWORD PTR [ebx],0xc79dc285
  409c47:	jmp    0x577f:0x962153b2
  409c4e:	and    dl,ch
  409c50:	mov    eax,0x67d1a195
  409c55:	xchg   esi,eax
  409c56:	adc    BYTE PTR [edi+0x124df357],0xa1
  409c5d:	lahf   
  409c5e:	mov    ah,0x8a
  409c60:	adc    bh,BYTE PTR [eax]
  409c62:	sub    eax,0x844b32d4
  409c67:	lea    eax,[ebx]
  409c69:	and    al,0xb7
  409c6b:	ss ror edi,1
  409c6e:	hlt    
  409c6f:	je     0x409bfa
  409c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c72:	xchg   ebx,eax
  409c73:	or     edi,edi
  409c75:	inc    edi
  409c76:	push   0xffffffee
  409c78:	push   es
  409c79:	push   ss
  409c7a:	sbb    ebx,ecx
  409c7c:	pusha  
  409c7d:	sbb    bl,ah
  409c7f:	jp     0x409c4d
  409c81:	mov    al,BYTE PTR [edi-0x44]
  409c84:	fistp  DWORD PTR ds:0x648f5313
  409c8a:	data16 jl 0x409cfb
  409c8d:	(bad)  
  409c8e:	in     al,0x24
  409c90:	mov    bh,0x10
  409c92:	in     eax,0x14
  409c94:	pushf  
  409c95:	or     BYTE PTR [ebx+0x26],bh
  409c98:	mov    al,0xfe
  409c9a:	pop    esi
  409c9b:	je     0x409d0f
  409c9d:	add    dl,ah
  409c9f:	pop    ebp
  409ca0:	xchg   DWORD PTR [eax-0x22f1a455],ebp
  409ca6:	(bad)  
  409ca7:	cdq    
  409ca8:	sti    
  409ca9:	inc    eax
  409caa:	inc    esp
  409cab:	in     al,0x7d
  409cad:	add    BYTE PTR [esi+ebx*1+0x4b],dl
  409cb1:	sbb    esp,esi
  409cb3:	stos   BYTE PTR es:[edi],al
  409cb4:	or     ah,BYTE PTR [ebp+esi*1-0x3]
  409cb8:	push   ebp
  409cb9:	(bad)  
  409cba:	sbb    eax,0x56de3003
  409cbf:	mov    dh,0xaa
  409cc1:	pop    ds
  409cc2:	out    0xd,al
  409cc4:	fs dec esi
  409cc6:	pushf  
  409cc7:	dec    ebx
  409cc8:	push   ebp
  409cc9:	repz sub al,BYTE PTR [edx-0x431a021d]
  409cd0:	cmp    eax,DWORD PTR [edx+0x61]
  409cd3:	fist   WORD PTR [ecx+0x20]
  409cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd7:	sbb    DWORD PTR [eax-0x2c],edi
  409cda:	aad    0x9
  409cdc:	out    0x9f,eax
  409cde:	inc    esp
  409cdf:	outs   dx,DWORD PTR ds:[esi]
  409ce0:	xchg   esi,eax
  409ce1:	push   ecx
  409ce2:	adc    al,0x32
  409ce4:	or     cl,cl
  409ce6:	add    ch,BYTE PTR [esp+ebp*8+0x4]
  409cea:	push   ebp
  409ceb:	test   al,0xb7
  409ced:	repz mov bl,0x6a
  409cf0:	inc    ecx
  409cf1:	shr    BYTE PTR [edi+ebp*2-0x7374484],cl
  409cf8:	cmp    DWORD PTR [ebx],edi
  409cfa:	jle    0x409cc8
  409cfc:	cmp    al,0x1a
  409cfe:	mov    edi,esp
  409d00:	or     eax,0x8931c98
  409d05:	stos   DWORD PTR es:[edi],eax
  409d06:	dec    ebp
  409d07:	inc    esi
  409d08:	jb     0x409d63
  409d0a:	ror    BYTE PTR [esi],1
  409d0c:	mov    eax,eax
  409d0e:	or     eax,0xb09ca785
  409d13:	xchg   edx,eax
  409d14:	and    esi,DWORD PTR es:[ebx]
  409d17:	sub    esp,DWORD PTR [edx+0x4ca3b9eb]
  409d1d:	je     0x409caa
  409d1f:	shr    DWORD PTR [edx-0x25],cl
  409d22:	and    cl,BYTE PTR [edx+0x200f2421]
  409d28:	jo     0x409d56
  409d2a:	or     edi,DWORD PTR [ebp-0x77]
  409d2d:	data16 xlat BYTE PTR ds:[ebx]
  409d2f:	add    cl,BYTE PTR [eax-0x58dc287]
  409d35:	sbb    eax,0x1579e04c
  409d3a:	add    BYTE PTR [esi-0x29],ah
  409d3d:	cmp    eax,0x78af0385
  409d42:	xlat   BYTE PTR ds:[ebx]
  409d43:	jns    0x409db5
  409d45:	fst    st(4)
  409d47:	imul   ebp,ebx,0x687445f2
  409d4d:	retf   
  409d4e:	out    dx,eax
  409d4f:	dec    ebx
  409d50:	mov    edx,0xd4c5028e
  409d55:	mov    cl,BYTE PTR [edx]
  409d57:	icebp  
  409d58:	call   0xb0c4dde0
  409d5d:	xchg   esi,eax
  409d5e:	pop    ss
  409d5f:	dec    ebx
  409d60:	mov    eax,DWORD PTR [edi-0x65]
  409d63:	mov    dh,0x19
  409d65:	in     al,dx
  409d66:	inc    edx
  409d67:	dec    eax
  409d68:	and    edx,DWORD PTR [edx+0x5664f4bb]
  409d6e:	cmp    BYTE PTR [edi],0xfe
  409d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d72:	pop    ebx
  409d73:	stos   DWORD PTR es:[edi],eax
  409d74:	xchg   edx,eax
  409d75:	cli    
  409d76:	or     al,0x4c
  409d78:	or     eax,0xce0b3ef7
  409d7d:	mov    dh,BYTE PTR [eax-0x49d32e89]
  409d83:	or     BYTE PTR [edx+0xc],dl
  409d86:	iret   
  409d87:	xlat   BYTE PTR ds:[ebx]
  409d88:	cmp    ebx,eax
  409d8a:	imul   edi,esp,0xffffffa8
  409d8d:	or     BYTE PTR [esi-0x43],al
  409d90:	xchg   edx,eax
  409d91:	arpl   bx,di
  409d93:	hlt    
  409d94:	dec    eax
  409d95:	xlat   BYTE PTR ds:[ebx]
  409d96:	je     0x409e0a
  409d98:	xor    ebx,ebx
  409d9a:	jl     0x409d91
  409d9c:	(bad)  
  409d9e:	jmp    0xde77:0xa3d5f89d
  409da5:	mov    esp,0x31b70299
  409daa:	ja     0x409dd0
  409dac:	js     0x409d44
  409dae:	call   0x655f9d03
  409db3:	int    0xc9
  409db5:	cli    
  409db6:	inc    ebx
  409db7:	sbb    eax,0xd95bdd41
  409dbc:	jns    0x409dc9
  409dbe:	sbb    ebp,esi
  409dc0:	xchg   esp,eax
  409dc1:	xlat   BYTE PTR ds:[ebx]
  409dc2:	rcr    bh,cl
  409dc4:	outs   dx,DWORD PTR ds:[esi]
  409dc5:	dec    ebx
  409dc6:	shl    BYTE PTR [esi+0x3e],1
  409dc9:	mov    ebx,DWORD PTR [ebx]
  409dcb:	outs   dx,BYTE PTR ds:[esi]
  409dcc:	cs adc edi,esp
  409dcf:	xchg   DWORD PTR [esi+0x198acfde],esi
  409dd5:	adc    ah,BYTE PTR [esp+ecx*1-0x7b]
  409dd9:	lock test al,0x43
  409ddc:	inc    ebx
  409ddd:	jg     0x409e1c
  409ddf:	mov    dl,BYTE PTR [eax+0x2b8c08ae]
  409de5:	mov    ebp,0x7f066710
  409dea:	ins    BYTE PTR es:[edi],dx
  409deb:	and    bl,BYTE PTR [ebx+0xe]
  409dee:	dec    edx
  409def:	not    BYTE PTR ds:0x8a97e5f8
  409df5:	pop    ebx
  409df6:	jb     0x409dc1
  409df8:	test   eax,0x3d8b4d8
  409dfd:	outs   dx,BYTE PTR ds:[esi]
  409dfe:	mov    edi,0x3e4e55f8
  409e03:	lods   eax,DWORD PTR ds:[esi]
  409e04:	mov    cl,0xd4
  409e06:	iret   
  409e07:	and    eax,0xddbe300
  409e0c:	in     al,dx
  409e0d:	pop    ecx
  409e0e:	out    dx,al
  409e0f:	adc    DWORD PTR [esi+ebx*1-0x9],ebx
  409e13:	xchg   BYTE PTR [ebx],ah
  409e15:	cs out 0xa4,al
  409e18:	xchg   edx,eax
  409e19:	mov    edx,0xedea87b2
  409e1e:	ja     0x409e83
  409e20:	repz sub BYTE PTR [ebp-0x40b1f991],bl
  409e27:	ins    BYTE PTR es:[edi],dx
  409e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e29:	bound  sp,DWORD PTR [bx+di+0x51e7]
  409e2f:	std    
  409e30:	jle    0x409e69
  409e32:	and    ch,BYTE PTR [ebp-0x13]
  409e35:	inc    esi
  409e36:	imul   edx,DWORD PTR [edi-0x51e6010d],0xffffffe9
  409e3d:	xchg   edx,eax
  409e3e:	jecxz  0x409dcd
  409e40:	into   
  409e41:	outs   dx,DWORD PTR ds:[esi]
  409e42:	dec    esp
  409e43:	pop    eax
  409e44:	lds    esi,FWORD PTR [edx]
  409e46:	pop    esp
  409e47:	push   esi
  409e48:	addr16 out dx,al
  409e4a:	mov    ebx,0x531b90db
  409e4f:	shr    BYTE PTR [ebx],1
  409e51:	ds (bad) 
  409e53:	push   edx
  409e54:	rep ins DWORD PTR es:[edi],dx
  409e56:	aaa    
  409e57:	dec    esp
  409e58:	out    0xfc,eax
  409e5a:	and    DWORD PTR [edi-0x30],ebx
  409e5d:	jle    0x409e8c
  409e5f:	mov    ebp,0x86d21a88
  409e64:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409e66:	push   edi
  409e67:	inc    edi
  409e68:	(bad)  
  409e69:	aam    0x55
  409e6b:	sti    
  409e6c:	ins    BYTE PTR es:[edi],dx
  409e6d:	clc    
  409e6e:	retf   
  409e6f:	sbb    al,0x64
  409e71:	jb     0x409ecc
  409e73:	nop
  409e74:	xchg   ecx,ebx
  409e76:	icebp  
  409e77:	sar    BYTE PTR [edx+0x3ce1418c],cl
  409e7d:	scas   eax,DWORD PTR es:[edi]
  409e7e:	leave  
  409e7f:	pop    eax
  409e80:	(bad)  
  409e81:	push   ecx
  409e82:	test   eax,0xa004e02e
  409e87:	out    0xb4,eax
  409e89:	sub    DWORD PTR [edi+0x50],ebp
  409e8c:	in     al,dx
  409e8d:	repz or cl,ch
  409e90:	add    bh,BYTE PTR [edi-0x11]
  409e93:	test   BYTE PTR [ebp+0x4e],bl
  409e96:	scas   eax,DWORD PTR es:[edi]
  409e97:	stc    
  409e98:	jge    0x409ec4
  409e9a:	popa   
  409e9b:	cmp    DWORD PTR [ebx+ecx*4-0x1b9d45b3],ecx
  409ea2:	or     DWORD PTR [ebp-0x5994fe31],ebx
  409ea8:	stc    
  409ea9:	fsubp  st(7),st
  409eab:	rcr    DWORD PTR [ebx-0x5],cl
  409eae:	add    DWORD PTR [ebp-0x16e32361],edx
  409eb4:	pop    edi
  409eb5:	sub    cl,cl
  409eb7:	int    0x70
  409eb9:	mov    dl,0xe3
  409ebb:	in     al,0xf8
  409ebd:	adc    al,cl
  409ebf:	hlt    
  409ec0:	or     eax,0xa2e8e2d1
  409ec5:	xchg   edx,eax
  409ec6:	push   esp
  409ec7:	jbe    0x409ef2
  409ec9:	xor    edi,edi
  409ecb:	outs   dx,BYTE PTR ds:[esi]
  409ecc:	cdq    
  409ecd:	and    BYTE PTR es:[ebp-0x5],0xc9
  409ed2:	pop    ebx
  409ed3:	stc    
  409ed4:	dec    ebp
  409ed5:	aam    0x91
  409ed7:	xor    al,0x26
  409ed9:	inc    edi
  409eda:	popf   
  409edb:	ror    bl,0xbb
  409ede:	sub    edi,esi
  409ee0:	cs and al,0x50
  409ee3:	add    al,0x12
  409ee5:	inc    ecx
  409ee6:	lods   eax,DWORD PTR ds:[esi]
  409ee7:	xor    al,0xb2
  409ee9:	sbb    ah,ah
  409eeb:	loope  0x409ee7
  409eed:	pushf  
  409eee:	push   ecx
  409eef:	sub    bl,BYTE PTR [ecx]
  409ef1:	daa    
  409ef2:	push   ebx
  409ef3:	pop    ecx
  409ef4:	xlat   BYTE PTR ds:[ebx]
  409ef5:	push   esi
  409ef6:	push   edi
  409ef7:	inc    ebx
  409ef8:	xor    edx,DWORD PTR [ecx]
  409efa:	in     al,dx
  409efb:	repnz and eax,0x96df4b0f
  409f01:	sub    eax,0xa40360e4
  409f06:	lea    esp,[edi-0x5353206d]
  409f0c:	stos   BYTE PTR es:[edi],al
  409f0d:	or     DWORD PTR ds:0x318e41b6,ebx
  409f13:	repnz enter 0x1451,0x65
  409f18:	(bad)  
  409f19:	les    edx,FWORD PTR [eax]
  409f1b:	add    BYTE PTR ds:0x3bc685f1,bh
  409f21:	jge    0x409eb5
  409f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f24:	and    BYTE PTR [ebx],0x15
  409f27:	test   eax,0xfecf8692
  409f2c:	jle    0x409fa5
  409f2e:	dec    ebx
  409f2f:	inc    esp
  409f30:	mov    eax,0xdfe80d39
  409f35:	cli    
  409f36:	shl    edi,cl
  409f38:	imul   eax,DWORD PTR [ecx+0x5b0dc696],0x989acdc2
  409f42:	sbb    eax,0x9f8354cf
  409f47:	out    dx,eax
  409f48:	mov    al,ds:0x9ea7960b
  409f4d:	fsubr  QWORD PTR [eax]
  409f4f:	fild   QWORD PTR [edi-0x12bf9edb]
  409f55:	add    eax,0x2e06c596
  409f5a:	jl     0x409f8e
  409f5c:	(bad)  
  409f5d:	hlt    
  409f5e:	push   ebp
  409f5f:	and    al,BYTE PTR [ebx]
  409f61:	mov    al,ds:0x1acb0b33
  409f66:	std    
  409f67:	lea    eax,[edx-0x5f5a36bc]
  409f6d:	xchg   ecx,eax
  409f6e:	aad    0x5c
  409f70:	int3   
  409f71:	out    dx,eax
  409f72:	jae    0x409f5d
  409f74:	icebp  
  409f75:	pop    esp
  409f76:	scas   eax,DWORD PTR es:[edi]
  409f77:	adc    dh,BYTE PTR [esp+edi*2+0x426d4cb1]
  409f7e:	outs   dx,BYTE PTR ds:[esi]
  409f7f:	out    0xa0,al
  409f81:	cli    
  409f82:	xchg   edx,eax
  409f83:	xor    DWORD PTR [esi+eax*4+0x2c39a368],0x7
  409f8b:	rol    BYTE PTR ds:[ebx],0x53
  409f8f:	jns    0x409f75
  409f91:	lods   al,BYTE PTR ds:[esi]
  409f92:	lahf   
  409f93:	das    
  409f94:	outs   dx,BYTE PTR ds:[esi]
  409f95:	push   esp
  409f96:	mul    bh
  409f98:	(bad)  
  409f99:	lahf   
  409f9a:	outs   dx,DWORD PTR ds:[esi]
  409f9b:	(bad)  
  409f9c:	scas   eax,DWORD PTR es:[edi]
  409f9d:	rol    edi,1
  409f9f:	fdivr  QWORD PTR [ebx+0x7f778697]
  409fa5:	mov    bl,0x92
  409fa7:	add    dh,ch
  409fa9:	in     al,dx
  409faa:	leave  
  409fab:	icebp  
  409fac:	adc    ebp,DWORD PTR [eax]
  409fae:	mov    ch,0xbe
  409fb0:	mov    edx,0x980975c9
  409fb5:	jb     0x409fff
  409fb7:	loopne 0x409f80
  409fb9:	call   0x731f66a1
  409fbe:	(bad)  
  409fbf:	retf   0xdb75
  409fc2:	leave  
  409fc3:	sbb    al,0x25
  409fc5:	sbb    ebx,DWORD PTR [ecx]
  409fc7:	pop    ebp
  409fc8:	test   al,0x8
  409fca:	cmp    cl,0x89
  409fcd:	and    eax,0x48957692
  409fd2:	dec    ebp
  409fd3:	leave  
  409fd4:	and    ebp,edi
  409fd6:	mov    ecx,0x61a76e36
  409fdb:	jb     0x409f76
  409fdd:	sti    
  409fde:	mov    eax,0x6dbdd85c
  409fe3:	shl    BYTE PTR [edx],1
  409fe5:	aam    0x4c
  409fe7:	add    al,0xb7
  409fe9:	mov    bh,0x5e
  409feb:	lea    ecx,[eax]
  409fed:	mov    ds:0xdd8c99bb,eax
  409ff2:	xchg   edi,eax
  409ff3:	push   eax
  409ff4:	inc    edi
  409ff5:	mov    cl,0xad
  409ff7:	jno    0x40a047
  409ff9:	jb     0x40a046
  409ffb:	aam    0x2a
  409ffd:	xchg   ecx,eax
  409ffe:	(bad)
  40a001:	outs   dx,BYTE PTR ds:[esi]
  40a002:	sub    BYTE PTR [esi],0x21
  40a005:	jecxz  0x409fe1
  40a007:	retf   0xa2fd
  40a00a:	adc    eax,0x7d8d13e9
  40a00f:	ins    DWORD PTR es:[edi],dx
  40a010:	jns    0xf0f5537f
  40a016:	fistp  WORD PTR [eax]
  40a018:	and    al,0x8
  40a01a:	pop    esp
  40a01b:	push   esi
  40a01c:	xor    DWORD PTR [ebx+0x71],ebp
  40a01f:	inc    esp
  40a020:	test   al,0xb7
  40a022:	das    
  40a023:	xchg   esi,eax
  40a024:	inc    esi
  40a025:	out    0x6,al
  40a027:	cmc    
  40a028:	push   edx
  40a029:	push   ds
  40a02a:	xor    BYTE PTR [ecx],bl
  40a02c:	push   0x14
  40a02e:	sbb    BYTE PTR [eax-0x72b75267],0xb0
  40a035:	test   eax,0x9f012511
  40a03a:	js     0x40a0b3
  40a03c:	or     DWORD PTR [ebx+edx*2-0x4da80eef],ecx
  40a043:	jae    0x40a020
  40a045:	fadd   QWORD PTR [ebp-0x69d0cac8]
  40a04b:	push   es
  40a04c:	sub    eax,0x9165ea4f
  40a051:	dec    ebp
  40a052:	fstp   QWORD PTR [eax-0x27]
  40a055:	adc    DWORD PTR [ebp-0x54],edx
  40a058:	sbb    al,0xf
  40a05a:	shr    DWORD PTR [esi],0x88
  40a05d:	push   ebp
  40a05e:	adc    BYTE PTR [edx+0x47],ch
  40a061:	bound  ebp,QWORD PTR [edx-0x1f]
  40a064:	or     bh,BYTE PTR [ebx]
  40a066:	jne    0x40a0a5
  40a068:	inc    ebx
  40a069:	retf   
  40a06a:	xor    eax,0xe3c46126
  40a06f:	loop   0x40a080
  40a071:	pop    es
  40a072:	add    eax,0x13dac485
  40a077:	rcr    DWORD PTR [esi],1
  40a079:	xchg   edi,eax
  40a07a:	dec    ebp
  40a07b:	jo     0x40a03e
  40a07d:	push   ss
  40a07e:	(bad)  
  40a07f:	cmp    BYTE PTR [esi],0x42
  40a082:	test   dh,cl
  40a084:	xchg   DWORD PTR [edx],eax
  40a086:	and    eax,0xceef6e1e
  40a08b:	xor    DWORD PTR [eax+ebp*8],ecx
  40a08e:	sub    eax,0x2962a529
  40a093:	jg     0x40a06f
  40a095:	jmp    0x40a0d5
  40a097:	(bad)  
  40a098:	xchg   ebp,eax
  40a099:	xchg   ecx,eax
  40a09a:	inc    esi
  40a09b:	imul   edi,edx,0xffffff9f
  40a09e:	stos   DWORD PTR es:[edi],eax
  40a09f:	adc    eax,0x3414d7a8
  40a0a4:	jne    0x40a0dc
  40a0a6:	push   ds
  40a0a7:	or     eax,0x23402090
  40a0ac:	idiv   ecx
  40a0ae:	stc    
  40a0af:	cmp    al,0x88
  40a0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b2:	or     BYTE PTR [ecx+0xc],ah
  40a0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b6:	scas   al,BYTE PTR es:[edi]
  40a0b7:	jno    0x40a127
  40a0b9:	pop    ecx
  40a0ba:	jo     0x40a042
  40a0bc:	mov    DWORD PTR [ebx],eax
  40a0be:	(bad)
  40a0c1:	loopne 0x40a0f5
  40a0c3:	sub    ah,dh
  40a0c5:	mov    bh,0xfb
  40a0c7:	outs   dx,DWORD PTR ds:[esi]
  40a0c8:	jecxz  0x40a0e1
  40a0ca:	inc    ebp
  40a0cb:	and    al,0x42
  40a0cd:	vxorps xmm4,xmm5,XMMWORD PTR [ecx]
  40a0d1:	clc    
  40a0d2:	mov    dl,0x46
  40a0d4:	sbb    eax,0x857c1b28
  40a0d9:	icebp  
  40a0da:	pop    esi
  40a0db:	in     al,dx
  40a0dc:	cmp    al,0x36
  40a0de:	jl     0x40a06e
  40a0e0:	adc    cl,BYTE PTR [edi+0x2c]
  40a0e3:	lock outs dx,BYTE PTR ds:[esi]
  40a0e5:	or     al,0xa6
  40a0e7:	neg    eax
  40a0e9:	add    DWORD PTR [ebp-0x6524b5e9],ebp
  40a0ef:	psraw  mm1,QWORD PTR [eiz*2+0x1107e1e8]
  40a0f7:	ret    0x6b12
  40a0fa:	jecxz  0x40a0e6
  40a0fc:	out    0xe1,al
  40a0fe:	or     eax,0x2ae1e95b
  40a103:	sbb    ecx,0x6deeae8a
  40a109:	fbstp  TBYTE PTR [esi]
  40a10b:	aam    0x17
  40a10d:	xor    ebx,eax
  40a10f:	sahf   
  40a110:	and    BYTE PTR [ebx+0x206db6e4],al
  40a116:	jge    0x40a12b
  40a118:	jo     0x40a0dc
  40a11a:	(bad)  
  40a11b:	in     al,dx
  40a11c:	test   eax,0x913f21ff
  40a121:	xchg   edi,eax
  40a122:	mov    bl,0x19
  40a124:	sub    cl,dh
  40a126:	mov    bh,0x56
  40a128:	sti    
  40a129:	(bad)  
  40a12a:	lahf   
  40a12b:	jbe    0x40a134
  40a12d:	int    0xb9
  40a12f:	loopne 0x40a0cb
  40a131:	push   esi
  40a132:	out    0x8d,al
  40a134:	ffreep st(2)
  40a136:	(bad)  
  40a137:	mov    ecx,0xc5ac7f15
  40a13c:	(bad)  
  40a13d:	xlat   BYTE PTR ds:[ebx]
  40a13e:	sub    eax,DWORD PTR [ebx+edx*8]
  40a141:	xlat   BYTE PTR ds:[ebx]
  40a142:	jbe    0x40a0f2
  40a144:	ins    DWORD PTR es:[edi],dx
  40a145:	loop   0x40a171
  40a147:	jle    0x40a127
  40a149:	inc    BYTE PTR [eax-0x55437679]
  40a14f:	nop
  40a150:	sar    DWORD PTR [ebp-0x7d],0xe2
  40a154:	inc    ecx
  40a155:	adc    ebx,DWORD PTR [edx]
  40a157:	sub    eax,0xdfdbe714
  40a15c:	cdq    
  40a15d:	mov    ds:0x13380dd3,eax
  40a162:	in     al,0x22
  40a164:	jo     0x40a11e
  40a166:	arpl   ax,bp
  40a168:	in     al,0xd2
  40a16a:	aam    0xa5
  40a16c:	mov    ds:0x5d146ec6,eax
  40a171:	and    al,ch
  40a173:	pop    ebp
  40a174:	jbe    0x40a123
  40a176:	push   DWORD PTR [ebx+0x2b56d661]
  40a17c:	mov    ch,bh
  40a17e:	(bad)  
  40a17f:	and    cl,cl
  40a181:	dec    ebp
  40a182:	test   DWORD PTR [ecx-0x6a0f0868],ebx
  40a188:	lock sub ch,BYTE PTR cs:[ebp-0x2a]
  40a18d:	dec    ebp
  40a18e:	mov    dl,0xe8
  40a190:	adc    esi,eax
  40a192:	cdq    
  40a193:	adc    dl,al
  40a195:	cmp    DWORD PTR [ecx+0x4ab36b24],eax
  40a19b:	xor    esp,eax
  40a19d:	dec    esp
  40a19e:	outs   dx,DWORD PTR ds:[esi]
  40a19f:	in     eax,0xb
  40a1a1:	xchg   BYTE PTR [edi+0x3a9c68d2],al
  40a1a7:	repnz mov eax,esi
  40a1aa:	sahf   
  40a1ab:	cmp    BYTE PTR [eax+0x46c531b],dh
  40a1b1:	sub    al,0xb2
  40a1b3:	or     esi,DWORD PTR [ebx+eax*1]
  40a1b6:	or     BYTE PTR [edi],0x9f
  40a1b9:	add    ebp,esp
  40a1bb:	or     edi,DWORD PTR [ebx]
  40a1bd:	inc    edi
  40a1be:	imul   ebx,ecx,0xffffffdf
  40a1c1:	stos   DWORD PTR es:[edi],eax
  40a1c2:	loope  0x40a1ac
  40a1c4:	sar    BYTE PTR [eax-0x240c7601],1
  40a1ca:	mov    edi,0x65ad53c4
  40a1cf:	xchg   eax,esp
  40a1d1:	add    BYTE PTR [edx+0x9],dl
  40a1d4:	clc    
  40a1d5:	jo     0x40a20a
  40a1d7:	out    dx,eax
  40a1d8:	fmul   st,st(3)
  40a1da:	jge    0x40a16a
  40a1dc:	outs   dx,BYTE PTR ds:[esi]
  40a1dd:	mov    edi,0x1a08cfde
  40a1e2:	stc    
  40a1e3:	push   esi
  40a1e4:	enter  0x73b5,0x4a
  40a1e8:	sub    ch,BYTE PTR [ecx+ebp*8]
  40a1eb:	retf   0x21a1
  40a1ee:	push   esp
  40a1ef:	les    ebp,FWORD PTR [eax+0x4c]
  40a1f2:	mov    al,0x88
  40a1f4:	mov    bh,0x6a
  40a1f6:	push   eax
  40a1f7:	and    edx,ebx
  40a1f9:	xor    al,0x27
  40a1fb:	pushf  
  40a1fc:	in     al,dx
  40a1fd:	mov    ah,0xda
  40a1ff:	xor    BYTE PTR [ebx-0x89c46e2],0xe3
  40a206:	xchg   edi,eax
  40a207:	fst    DWORD PTR [edx]
  40a209:	jns    0x40a19b
  40a20b:	cmp    BYTE PTR [ecx],cl
  40a20d:	in     eax,dx
  40a20e:	aad    0x60
  40a210:	add    al,0xc2
  40a212:	outs   dx,BYTE PTR ds:[esi]
  40a213:	adc    DWORD PTR [edi-0x17],0xffffffb8
  40a217:	pop    ds
  40a218:	push   eax
  40a219:	loope  0x40a1af
  40a21b:	sar    BYTE PTR [esi-0x11],0x9b
  40a21f:	mov    eax,0x656bfb8a
  40a224:	mov    al,ds:0x21af705a
  40a229:	jge    0x40a241
  40a22b:	popf   
  40a22c:	mov    cs,WORD PTR [esi-0x738230f4]
  40a232:	(bad)  
  40a233:	aam    0x82
  40a235:	lahf   
  40a236:	mov    esp,0xc9625b44
  40a23b:	sti    
  40a23c:	add    al,0xc3
  40a23e:	push   edi
  40a23f:	mov    eax,ds:0xe2c9f95f
  40a244:	in     eax,dx
  40a245:	rcl    DWORD PTR [edx-0x34],1
  40a248:	dec    eax
  40a249:	cli    
  40a24a:	ret    
  40a24b:	mov    al,0x77
  40a24d:	test   al,0x77
  40a24f:	jns    0x40a283
  40a251:	aas    
  40a252:	and    eax,0xc1a83c30
  40a257:	fdiv   st(3),st
  40a259:	test   al,0x42
  40a25b:	push   ds
  40a25c:	push   ebp
  40a25d:	test   eax,0xc579b625
  40a262:	cdq    
  40a263:	imul   ecx,DWORD PTR [eax],0xffffffad
  40a266:	lahf   
  40a267:	aas    
  40a268:	rcl    BYTE PTR [ebx+0x9],cl
  40a26b:	mov    bh,0x76
  40a26d:	mov    ebp,DWORD PTR [edx+0x79a068b4]
  40a273:	jb     0x40a255
  40a275:	inc    edx
  40a276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a277:	fadd   DWORD PTR [ebp-0x296ecaa9]
  40a27d:	push   ebx
  40a27e:	fsubr  QWORD PTR [esi+0x4b998f04]
  40a284:	jle    0x40a267
  40a286:	ret    
  40a287:	pop    ebp
  40a288:	jmp    0x40a289
  40a28a:	mov    cl,0x14
  40a28c:	cli    
  40a28d:	adc    esi,edi
  40a28f:	call   0x7bdf:0x83d41884
  40a296:	add    ah,BYTE PTR [edx]
  40a298:	fs jo  0x40a22f
  40a29b:	sub    BYTE PTR [ecx],dl
  40a29d:	push   0x94c6e23e
  40a2a2:	add    ebp,DWORD PTR [ebx+0x5d]
  40a2a5:	pusha  
  40a2a6:	popf   
  40a2a7:	adc    ebp,DWORD PTR [edx-0x62]
  40a2aa:	adc    DWORD PTR [edx-0x1f89c926],edx
  40a2b0:	inc    esi
  40a2b1:	push   edx
  40a2b3:	and    ch,BYTE PTR [ecx-0x3b]
  40a2b6:	das    
  40a2b7:	out    0x1e,al
  40a2b9:	inc    eax
  40a2ba:	jecxz  0x40a2b4
  40a2bc:	out    dx,eax
  40a2bd:	aas    
  40a2be:	aas    
  40a2bf:	jmp    0x40a25d
  40a2c1:	jl     0x40a2bb
  40a2c3:	lds    eax,FWORD PTR [edi+0x3b12df26]
  40a2c9:	or     eax,0xe5fad362
  40a2ce:	push   eax
  40a2cf:	sbb    cl,BYTE PTR ds:0x4009264a
  40a2d5:	sbb    al,0x1b
  40a2d7:	and    BYTE PTR ds:0x63db236,al
  40a2dd:	rcr    ebx,0xe9
  40a2e0:	out    0x64,eax
  40a2e2:	scas   eax,DWORD PTR es:[edi]
  40a2e3:	aaa    
  40a2e4:	out    dx,al
  40a2e5:	and    DWORD PTR [edi+0x743da935],0x86cc008a
  40a2ef:	sbb    cl,BYTE PTR [eax-0x1d]
  40a2f2:	icebp  
  40a2f3:	push   es
  40a2f4:	xchg   BYTE PTR [edi-0x567c0651],al
  40a2fa:	mov    DWORD PTR [eax-0x220304ac],edx
  40a300:	mov    bh,0x5b
  40a302:	adc    ebx,DWORD PTR [edi]
  40a304:	test   al,0xa6
  40a306:	cwde   
  40a307:	pop    esi
  40a308:	and    ch,BYTE PTR [esi+eiz*4-0x9]
  40a30c:	xchg   esp,eax
  40a30d:	jnp    0x40a2d4
  40a30f:	shl    eax,cl
  40a311:	xor    al,0x82
  40a313:	into   
  40a314:	lds    esi,FWORD PTR [edi+esi*4+0x3]
  40a318:	shl    esi,cl
  40a31a:	push   edx
  40a31b:	mov    eax,ds:0xe06432ca
  40a320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a321:	pop    esi
  40a322:	mov    al,BYTE PTR [esi-0x75]
  40a325:	mov    ds:0xd9b26b5,al
  40a32a:	jo     0x40a344
  40a32c:	loop   0x40a374
  40a32e:	mov    eax,ds:0x70f3a40e
  40a333:	pop    esp
  40a334:	pop    ds
  40a335:	mov    edi,0xecebea8d
  40a33a:	sar    BYTE PTR [esi+ebx*1],0x13
  40a33e:	push   ebx
  40a33f:	push   ebx
  40a340:	sbb    eax,0x2a183c1
  40a345:	jae    0x40a2cf
  40a347:	cs push ecx
  40a349:	pop    ds
  40a34a:	mov    esi,0x36df46bc
  40a34f:	lods   al,BYTE PTR ds:[esi]
  40a350:	cs jns 0x40a30e
  40a353:	xor    al,0xc1
  40a355:	mov    ecx,0xd63edb5
  40a35a:	xor    eax,0x63302644
  40a35f:	mov    WORD PTR [eax-0x5],fs
  40a362:	out    0x7f,al
  40a364:	fs loopne 0x40a31e
  40a367:	cmp    eax,ecx
  40a369:	call   0xdb5:0xb868dd77
  40a370:	and    DWORD PTR [edx-0xc30914a],ebx
  40a376:	repz test eax,0x8b58f802
  40a37c:	adc    al,0xa3
  40a37e:	add    eax,0x1e7d3b6a
  40a383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a384:	adc    eax,ebp
  40a386:	add    al,0x1c
  40a389:	sbb    BYTE PTR [ecx],ch
  40a38b:	inc    edx
  40a38c:	xchg   edi,ecx
  40a38e:	in     eax,dx
  40a38f:	mov    bl,BYTE PTR [esi+0x72]
  40a392:	add    eax,0xf1985e2e
  40a397:	(bad)  
  40a398:	retf   
  40a399:	imul   ebx,DWORD PTR [ebx-0x10f44f12],0xffffff84
  40a3a0:	outs   dx,DWORD PTR ds:[esi]
  40a3a1:	inc    esi
  40a3a2:	jmp    0x5466e34a
  40a3a7:	out    dx,al
  40a3a8:	not    DWORD PTR [ebp-0x6189d322]
  40a3ae:	lods   eax,DWORD PTR ds:[esi]
  40a3af:	adc    al,0xf
  40a3b1:	or     ebx,esi
  40a3b3:	adc    al,BYTE PTR [esi+0x12]
  40a3b6:	mov    DWORD PTR [ecx-0x23],0xecb17e86
  40a3bd:	push   ecx
  40a3be:	xchg   edi,eax
  40a3bf:	xlat   BYTE PTR ds:[ebx]
  40a3c0:	mov    eax,0xfe878e16
  40a3c5:	mov    ah,0xd4
  40a3c7:	mov    eax,ds:0x9710d796
  40a3cc:	aam    0xc0
  40a3ce:	inc    esi
  40a3cf:	pop    edi
  40a3d0:	and    DWORD PTR [ebp-0x64ab4ed2],eax
  40a3d6:	ror    DWORD PTR [ebx],0x4b
  40a3d9:	cld    
  40a3da:	mov    esi,0x732f713b
  40a3df:	fnsave [esi+0x6caa3a19]
  40a3e5:	mov    dh,0x76
  40a3e7:	mov    BYTE PTR [esp+eiz*2+0x6f],cl
  40a3eb:	ins    BYTE PTR es:[edi],dx
  40a3ec:	jmp    0xaae6:0xf39c28bb
  40a3f3:	in     al,0x15
  40a3f5:	fstp   st(3)
  40a3f7:	sti    
  40a3f8:	push   cs
  40a3f9:	xchg   edx,eax
  40a3fa:	das    
  40a3fb:	mov    ch,0x46
  40a3fe:	mov    ch,0xc5
  40a400:	out    0x84,al
  40a402:	sbb    eax,eax
  40a404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a405:	(bad)  [edi+0x51]
  40a408:	mov    ebp,0xb75b3fb6
  40a40d:	jns    0x40a412
  40a40f:	fs mov eax,0x872264d8
  40a415:	adc    eax,0xf2ae7775
  40a41a:	or     bh,BYTE PTR [ecx]
  40a41c:	jle    0x40a411
  40a41e:	fidivr DWORD PTR [edx-0x8]
  40a421:	loop   0x40a3f5
  40a423:	or     bl,BYTE PTR [ecx+0x462ddcd3]
  40a429:	adc    al,0x76
  40a42b:	cmp    eax,0x8d2482f3
  40a430:	shr    BYTE PTR [ebx+0x7e],cl
  40a433:	and    al,0xcb
  40a435:	cmp    ch,BYTE PTR [esi]
  40a437:	outs   dx,DWORD PTR ds:[esi]
  40a438:	mov    esi,0x5ecedcd3
  40a43d:	mov    bh,0x11
  40a43f:	mov    bh,0x44
  40a441:	enter  0x4565,0x27
  40a445:	jno    0x40a3fe
  40a447:	inc    ebx
  40a448:	scas   al,BYTE PTR es:[edi]
  40a449:	xchg   edi,eax
  40a44a:	mov    ch,BYTE PTR ds:0xc15a0311
  40a450:	popa   
  40a451:	dec    edx
  40a452:	or     eax,0x4459d444
  40a457:	mov    edi,0xb1eed582
  40a45c:	push   ebp
  40a45d:	mov    ecx,0xfc84c74c
  40a462:	jne    0x40a477
  40a464:	push   ebp
  40a465:	mov    eax,0xefb1279c
  40a46a:	pop    ss
  40a46b:	and    BYTE PTR [ebp+0x1b],cl
  40a46e:	xor    cl,dh
  40a470:	sbb    eax,DWORD PTR [ecx+0x67]
  40a473:	imul   esp,edi,0xffffffdb
  40a476:	je     0x40a4c9
  40a478:	mov    bl,0xdd
  40a47a:	int    0xf
  40a47c:	pop    ecx
  40a47d:	sub    dh,dl
  40a47f:	and    DWORD PTR ss:[ebx+edx*2+0x36f35239],eax
  40a487:	int3   
  40a488:	ror    DWORD PTR ds:0x71de546,1
  40a48e:	jecxz  0x40a509
  40a490:	lock (bad) 
  40a492:	jle    0x40a43a
  40a494:	enter  0xbfcc,0xee
  40a498:	hlt    
  40a499:	sbb    al,0x1d
  40a49b:	lock stc 
  40a49d:	aaa    
  40a49e:	lahf   
  40a49f:	ss mov eax,0x63ced63a
  40a4a5:	sbb    DWORD PTR [ebp-0x6a3b20e0],0xb3accf76
  40a4af:	sbb    BYTE PTR [ebx-0x7f],0xa6
  40a4b3:	jae    0x40a491
  40a4b5:	add    edi,esi
  40a4b7:	imul   edx,eax,0x68a95402
  40a4bd:	adc    al,0xdc
  40a4bf:	inc    ecx
  40a4c0:	stos   DWORD PTR es:[edi],eax
  40a4c1:	push   0x7d889f80
  40a4c6:	jp     0x40a49e
  40a4c8:	rol    esp,cl
  40a4ca:	ins    DWORD PTR es:[edi],dx
  40a4cb:	adc    ah,bh
  40a4cd:	jb     0x40a46b
  40a4cf:	xor    edx,eax
  40a4d1:	sbb    DWORD PTR [ebp+0x1b538812],edi
  40a4d7:	inc    edi
  40a4d8:	sbb    ebp,DWORD PTR [esi-0x3c]
  40a4db:	mov    esi,0xb83999c1
  40a4e0:	sbb    esp,DWORD PTR [ebx+0x106b4b33]
  40a4e6:	cmc    
  40a4e7:	fwait
  40a4e8:	mov    ecx,0x6f66edd9
  40a4ed:	and    esi,esi
  40a4ef:	pop    edi
  40a4f0:	mov    edi,esi
  40a4f2:	aad    0xb6
  40a4f4:	les    edi,FWORD PTR [edi+0x385e0769]
  40a4fa:	sbb    eax,0x7c447e45
  40a4ff:	adc    DWORD PTR [ebp-0xd69b31c],esp
  40a505:	adc    eax,0x68d2d192
  40a50a:	outs   dx,BYTE PTR ds:[esi]
  40a50b:	mov    eax,0x49e2d866
  40a510:	dec    ebx
  40a511:	je     0x40a511
  40a513:	or     DWORD PTR [ecx],edx
  40a515:	mov    ebx,0x59c5b42a
  40a51a:	xchg   esp,eax
  40a51b:	lods   al,BYTE PTR ds:[esi]
  40a51c:	cwde   
  40a51d:	repnz xor dl,cl
  40a520:	or     eax,0x786ebefd
  40a525:	je     0x40a595
  40a527:	fwait
  40a528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a529:	mov    bh,0x17
  40a52b:	xchg   eax,eax
  40a52d:	cmp    eax,0xf8630806
  40a532:	jae    0x40a4ee
  40a534:	mov    bl,0xf5
  40a536:	jp     0x40a50e
  40a538:	mov    BYTE PTR [eax+0x1218b8a2],ch
  40a53e:	ficom  WORD PTR [eax-0x49]
  40a541:	dec    edi
  40a542:	xchg   edx,eax
  40a543:	mov    dl,0x47
  40a545:	xchg   esi,eax
  40a546:	jnp    0x40a535
  40a548:	adc    ah,BYTE PTR [ebx]
  40a54a:	mov    ?,WORD PTR [edx-0x4e]
  40a54d:	sub    eax,0x3e0e66e
  40a552:	jmp    0x40a579
  40a554:	(bad)  
  40a555:	icebp  
  40a556:	push   ecx
  40a557:	sbb    ebp,0x2f143db3
  40a55d:	jmp    0xe6a6:0x6c113604
  40a564:	cmc    
  40a565:	daa    
  40a566:	std    
  40a567:	inc    esi
  40a568:	or     DWORD PTR ss:[ebx-0x1f817435],eax
  40a56f:	bound  edx,QWORD PTR [edx+0x62]
  40a572:	sbb    eax,0x5390e933
  40a577:	push   es
  40a578:	add    cl,al
  40a57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a57b:	mov    dh,BYTE PTR ds:0x93724972
  40a581:	inc    edx
  40a582:	mov    edi,0x4e089469
  40a587:	inc    ebx
  40a588:	jmp    0x40a5f9
  40a58a:	fbstp  TBYTE PTR [esi+0x7a]
  40a58d:	fisubr DWORD PTR [edi+ebp*1+0x5c77a136]
  40a594:	lods   al,BYTE PTR ds:[esi]
  40a595:	push   ss
  40a596:	mov    eax,ds:0xd7645968
  40a59b:	psubusb mm6,QWORD PTR [edx+0x6d]
  40a59f:	jae    0x40a617
  40a5a1:	fsub   st,st(1)
  40a5a3:	ret    
  40a5a4:	cld    
  40a5a5:	mov    cl,0x47
  40a5a7:	ss cmp al,0x9
  40a5aa:	push   cs
  40a5ab:	inc    esp
  40a5ac:	mov    ah,0xa4
  40a5ae:	loop   0x40a544
  40a5b0:	xchg   esi,eax
  40a5b1:	data16 mov ch,0x71
  40a5b4:	cdq    
  40a5b5:	push   esp
  40a5b6:	sar    DWORD PTR [eax-0x3],1
  40a5b9:	fcomp  DWORD PTR [edx-0xf]
  40a5bc:	cmp    eax,0x20a508e8
  40a5c1:	fstp   TBYTE PTR [edx]
  40a5c3:	mov    BYTE PTR [ebp-0x2e9e6a4],ah
  40a5c9:	add    al,BYTE PTR [edi]
  40a5cb:	aam    0xbe
  40a5cd:	xchg   DWORD PTR [esi-0x5821518],eax
  40a5d3:	and    DWORD PTR [ecx-0x510b0566],edi
  40a5d9:	lods   eax,DWORD PTR ds:[esi]
  40a5da:	das    
  40a5db:	aad    0x85
  40a5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5de:	icebp  
  40a5df:	int3   
  40a5e0:	adc    DWORD PTR [edx+0x61],ebx
  40a5e3:	cmc    
  40a5e4:	mov    BYTE PTR [eax],ch
  40a5e6:	add    BYTE PTR [ebp-0xcbb347f],al
  40a5ec:	inc    eax
  40a5ed:	jmp    0x6f52:0x56f606aa
  40a5f4:	adc    bh,al
  40a5f6:	(bad)  
  40a5f7:	or     DWORD PTR [ecx],ecx
  40a5f9:	jp     0x40a5a9
  40a5fb:	xor    eax,0x555209ff
  40a600:	sbb    edx,esp
  40a602:	mov    edi,0x248c879
  40a607:	in     al,dx
  40a608:	dec    edi
  40a609:	push   ebx
  40a60a:	adc    BYTE PTR [esi-0x209633f0],bh
  40a610:	dec    ebx
  40a611:	rcr    BYTE PTR [bx+di+0x701],0xb5
  40a617:	dec    ebp
  40a618:	and    BYTE PTR [ebx+eax*1-0xe],0x8c
  40a61d:	sub    DWORD PTR [esi-0x2357a836],ebx
  40a623:	xor    esp,DWORD PTR [esi+0x6f]
  40a626:	xchg   di,ax
  40a628:	pop    edi
  40a629:	push   edx
  40a62a:	(bad)  
  40a62c:	adc    eax,0x3eed10c7
  40a631:	push   edi
  40a632:	inc    ebx
  40a633:	ror    BYTE PTR [eax-0x62d9c907],1
  40a639:	jmp    0x15e9396f
  40a63e:	daa    
  40a63f:	ins    BYTE PTR es:[edi],dx
  40a640:	sub    ch,BYTE PTR [esi+0x37]
  40a643:	jle    0x40a65a
  40a645:	cdq    
  40a646:	pop    ds
  40a647:	das    
  40a648:	inc    edx
  40a649:	in     al,dx
  40a64a:	xlat   BYTE PTR ds:[ebx]
  40a64b:	retf   0xcefb
  40a64e:	cld    
  40a64f:	mov    eax,0x2fc4060c
  40a654:	cs pop esi
  40a656:	out    0x7c,eax
  40a658:	push   ds
  40a659:	xor    al,0xdc
  40a65b:	and    al,cl
  40a65d:	cmp    BYTE PTR [edi+esi*2-0x48],al
  40a661:	inc    ecx
  40a662:	mov    eax,0xbee719d8
  40a667:	add    bh,0x14
  40a66a:	mov    eax,ds:0xcb0d8524
  40a66f:	push   eax
  40a670:	mov    ebp,0xed28c197
  40a675:	loope  0x40a6ec
  40a677:	sahf   
  40a678:	call   DWORD PTR [esp+ecx*8]
  40a67b:	das    
  40a67c:	sar    BYTE PTR [eax],0xa1
  40a67f:	mov    ds:0x43935c4,eax
  40a684:	pop    edi
  40a685:	cmc    
  40a686:	sbb    al,BYTE PTR [ebp+0x77]
  40a689:	xlat   BYTE PTR ds:[ebx]
  40a68a:	sub    al,BYTE PTR [esi]
  40a68c:	out    dx,eax
  40a68d:	aad    0x33
  40a68f:	sbb    al,0xe1
  40a691:	fs jbe 0x40a621
  40a694:	outs   dx,DWORD PTR ds:[esi]
  40a695:	aam    0x8c
  40a697:	add    DWORD PTR [eax],ebx
  40a699:	sahf   
  40a69a:	std    
  40a69b:	and    BYTE PTR [ebx+ebx*1-0x1c],dl
  40a69f:	cmp    ebp,esp
  40a6a1:	pop    ebx
  40a6a2:	pop    esp
  40a6a3:	mov    cs,WORD PTR [eax+0x63]
  40a6a6:	cdq    
  40a6a7:	cmp    cl,ah
  40a6a9:	cli    
  40a6aa:	enter  0xf0d5,0x0
  40a6ae:	imul   ecx,DWORD PTR [eax+0x62f53cb2],0x7c
  40a6b5:	inc    BYTE PTR ds:0xeaa1aa0f
  40a6bb:	pop    edi
  40a6bc:	pop    es
  40a6bd:	cmp    BYTE PTR [eax-0x3bb09d12],ah
  40a6c3:	and    eax,0xdb10b4e9
  40a6c8:	xor    DWORD PTR [ecx+eax*1],ecx
  40a6cb:	or     eax,DWORD PTR [eax+esi*4]
  40a6ce:	or     eax,0x8c76fa41
  40a6d3:	(bad)  
  40a6d4:	push   edx
  40a6d5:	mov    ds:0xeef21015,al
  40a6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6db:	push   eax
  40a6dc:	mov    ah,0xf9
  40a6de:	rol    BYTE PTR [edi+0x67],1
  40a6e1:	xor    BYTE PTR [ecx],0x8f
  40a6e4:	inc    ebp
  40a6e5:	xor    eax,0xcb212398
  40a6ea:	sbb    cl,0xa1
  40a6ed:	xor    al,0x84
  40a6ef:	mov    WORD PTR [ebp-0x28668a52],gs
  40a6f5:	cld    
  40a6f6:	aad    0xcf
  40a6f8:	sub    bh,bh
  40a6fa:	pusha  
  40a6fb:	push   0xffffffe3
  40a6fd:	out    0xa5,al
  40a6ff:	cli    
  40a700:	nop
  40a701:	call   0x7e21c17f
  40a706:	inc    ebx
  40a707:	pop    esi
  40a708:	imul   ebx,esp,0xfffffffc
  40a70b:	jecxz  0x40a6c8
  40a70d:	sub    eax,0xe4e6c983
  40a712:	fcmovnu st,st(4)
  40a714:	ret    0x2aaf
  40a717:	push   ebx
  40a718:	sbb    al,0x3b
  40a71a:	dec    ecx
  40a71b:	sti    
  40a71c:	sbb    BYTE PTR [ebx-0x35],al
  40a71f:	call   0x52ef2864
  40a724:	or     al,0xa7
  40a726:	xor    al,0x90
  40a728:	mov    dh,0xf
  40a72a:	fst    QWORD PTR [edi+ebx*2-0x1ec8d365]
  40a731:	jecxz  0x40a70e
  40a733:	ins    BYTE PTR es:[edi],dx
  40a734:	dec    edi
  40a735:	outs   dx,BYTE PTR ds:[esi]
  40a736:	int3   
  40a737:	(bad)  
  40a738:	or     eax,0xe1e0bb24
  40a73d:	in     al,0x63
  40a73f:	and    BYTE PTR [ebx-0x28021ba7],dh
  40a745:	push   ds
  40a746:	nop
  40a747:	(bad)  
  40a748:	xor    BYTE PTR [ebp-0x39721a1c],ah
  40a74e:	cwde   
  40a74f:	hlt    
  40a750:	pop    es
  40a751:	jo     0x40a7b3
  40a753:	test   eax,0x5dd23716
  40a758:	daa    
  40a759:	mov    WORD PTR [ebx],es
  40a75b:	xchg   edx,eax
  40a75c:	adc    DWORD PTR [edx],esi
  40a75e:	loope  0x40a7cc
  40a760:	dec    edi
  40a761:	into   
  40a762:	jmp    0xf86e:0x9e3e672a
  40a769:	sub    DWORD PTR ss:[ecx-0x55],edi
  40a76d:	hlt    
  40a76e:	and    esi,DWORD PTR [ebp+0x6049f3cb]
  40a774:	cwde   
  40a775:	and    eax,DWORD PTR [esi-0x27e411ee]
  40a77b:	sbb    DWORD PTR [eax+0x27],0xa05ed0d8
  40a782:	ins    BYTE PTR es:[edi],dx
  40a783:	loope  0x40a7d1
  40a785:	sbb    DWORD PTR [edi+ebp*8+0x1f],0xcbef8091
  40a78d:	stc    
  40a78e:	mov    ebx,esp
  40a790:	push   eax
  40a791:	push   edi
  40a792:	push   edi
  40a793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a794:	ins    BYTE PTR es:[edi],dx
  40a795:	adc    DWORD PTR [esi],edi
  40a797:	data16 and al,0x54
  40a79a:	cmp    DWORD PTR [edi],ecx
  40a79c:	test   DWORD PTR [edi+0x3d61082f],ebp
  40a7a2:	shl    BYTE PTR [edx],0xa0
  40a7a5:	jl     0x40a75a
  40a7a7:	pushf  
  40a7a8:	jmp    0xc18b357e
  40a7ad:	fwait
  40a7ae:	cmp    BYTE PTR [esi-0x23bc3aa4],dh
  40a7b4:	(bad)  
  40a7b5:	cmp    esi,eax
  40a7b7:	imul   edx,DWORD PTR [ebp+0x3f7ac598],0x18b29521
  40a7c1:	repnz mov al,0xeb
  40a7c4:	clc    
  40a7c5:	and    BYTE PTR [eax-0x21dab90f],al
  40a7cb:	ret    
  40a7cc:	push   es
  40a7cd:	popf   
  40a7ce:	pusha  
  40a7cf:	dec    ebp
  40a7d0:	js     0x40a810
  40a7d2:	mov    ds:0x9b88dc1d,al
  40a7d7:	fild   QWORD PTR [edx+ebp*2-0x3d]
  40a7db:	stos   DWORD PTR es:[edi],eax
  40a7dc:	jmp    0x40a7be
  40a7de:	aas    
  40a7df:	hlt    
  40a7e0:	pusha  
  40a7e1:	daa    
  40a7e2:	fwait
  40a7e3:	scas   eax,DWORD PTR es:[edi]
  40a7e4:	add    ecx,0x76583f08
  40a7ea:	or     BYTE PTR [esi+0x659e224a],0x3f
  40a7f1:	(bad)  
  40a7f3:	int    0xe7
  40a7f5:	lods   al,BYTE PTR ds:[esi]
  40a7f6:	cdq    
  40a7f7:	leave  
  40a7f8:	arpl   WORD PTR [ecx+0x110909a2],sp
  40a7fe:	retf   
  40a7ff:	clc    
  40a800:	clc    
  40a801:	mov    cl,0xfd
  40a803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a804:	scas   eax,DWORD PTR es:[edi]
  40a805:	xor    esi,DWORD PTR [edi+0x71]
  40a808:	or     DWORD PTR [ebx+0x13],ebx
  40a80b:	and    ebx,edi
  40a80d:	jmp    0x9a23:0x9aa183fe
  40a814:	jle    0x40a7a2
  40a816:	pop    edi
  40a817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a818:	mov    esp,0xfe4ea153
  40a81d:	pop    ecx
  40a81e:	mov    ebx,0x5b657b3b
  40a823:	mov    ebp,0x1eb7d4d7
  40a828:	xor    eax,0x3b934cad
  40a82d:	mov    ebp,DWORD PTR [edi+0x619efa39]
  40a833:	xchg   BYTE PTR [esi+0x2d03106f],bh
  40a839:	adc    eax,ebp
  40a83b:	adc    al,0x3b
  40a83d:	in     eax,dx
  40a83e:	out    0x3f,al
  40a840:	sub    cl,BYTE PTR [edx]
  40a842:	inc    esp
  40a843:	fisttp QWORD PTR [ebx]
  40a845:	cld    
  40a846:	add    DWORD PTR [ecx],esi
  40a848:	je     0x40a7f5
  40a84a:	add    bl,ah
  40a84c:	sub    eax,0x14d1b49a
  40a851:	outs   dx,BYTE PTR ds:[esi]
  40a852:	jbe    0x40a843
  40a854:	pop    edi
  40a855:	xchg   DWORD PTR [ecx],ebx
  40a857:	push   0xd8bb84e6
  40a85c:	pop    ss
  40a85d:	jmp    0x3957f4bc
  40a862:	jge    0x40a7fd
  40a864:	adc    eax,0xf108c5ee
  40a869:	fnstcw WORD PTR [ebx-0x62]
  40a86c:	jge    0x40a893
  40a86e:	mov    edi,0x8541b49e
  40a873:	stc    
  40a874:	add    eax,0x210be69d
  40a879:	into   
  40a87a:	ss cdq 
  40a87c:	add    ah,cl
  40a87e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a87f:	xor    ebx,ebx
  40a881:	or     BYTE PTR [edi+0x3b],bh
  40a884:	into   
  40a885:	jno    0x40a80e
  40a887:	xchg   esi,eax
  40a888:	lock scas al,BYTE PTR es:[edi]
  40a88a:	shr    BYTE PTR [ecx+0x236bd460],1
  40a890:	jbe    0x40a8d4
  40a892:	inc    esi
  40a893:	jmp    0xa238f7a1
  40a898:	out    dx,eax
  40a899:	shl    BYTE PTR [esi+0x5a13edea],cl
  40a89f:	xchg   ecx,eax
  40a8a0:	retf   0x70d4
  40a8a3:	stos   BYTE PTR es:[edi],al
  40a8a4:	adc    al,0xba
  40a8a6:	pop    es
  40a8a7:	pop    eax
  40a8a8:	sahf   
  40a8a9:	or     DWORD PTR cs:[esi*8-0xbb281ae],edi
  40a8b1:	into   
  40a8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8b3:	or     BYTE PTR [ecx],cl
  40a8b5:	(bad)  
  40a8b6:	mov    ds:0xc3f4273f,al
  40a8bb:	sti    
  40a8bc:	xchg   esi,eax
  40a8bd:	mov    dl,0xd3
  40a8bf:	sub    BYTE PTR [eax],al
  40a8c1:	push   0xf91ccda0
  40a8c6:	scas   al,BYTE PTR es:[edi]
  40a8c7:	iret   
  40a8c8:	dec    ebp
  40a8c9:	sub    eax,0xbdc564bc
  40a8ce:	nop
  40a8cf:	sahf   
  40a8d0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d2:	es hlt 
  40a8d4:	or     ch,BYTE PTR [edi+0xb]
  40a8d7:	mov    ds:0xe8e5c502,al
  40a8dc:	sbb    bl,cl
  40a8de:	out    0xeb,al
  40a8e0:	add    edi,DWORD PTR [eax-0x54]
  40a8e3:	fstp   QWORD PTR [edx]
  40a8e5:	jl     0x40a891
  40a8e7:	and    esi,DWORD PTR [ebx+edx*1]
  40a8ea:	lahf   
  40a8eb:	xchg   esp,eax
  40a8ec:	outs   dx,BYTE PTR ds:[esi]
  40a8ed:	cs jmp 0x3304:0xfd40ef5f
  40a8f5:	std    
  40a8f6:	push   es
  40a8f7:	or     DWORD PTR [edi-0x15512da3],ebx
  40a8fd:	or     al,0xae
  40a8ff:	jne    0x40a947
  40a901:	mov    edx,0x8401e218
  40a906:	loope  0x40a911
  40a908:	mov    bl,0xf0
  40a90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90b:	xchg   ebx,eax
  40a90c:	fisub  WORD PTR [edi-0x20]
  40a90f:	cs sti 
  40a911:	or     ch,BYTE PTR [ebp+0x38]
  40a914:	xchg   edx,eax
  40a915:	jae    0x40a8b1
  40a917:	mov    ecx,0xbb78a9f7
  40a91c:	push   ds
  40a91d:	cdq    
  40a91e:	int3   
  40a91f:	jne    0x40a97e
  40a921:	loop   0x40a972
  40a923:	jmp    0xdccc5c0
  40a928:	mov    ds:0x5f40b485,al
  40a92d:	push   esp
  40a92e:	mov    esi,0x5c845796
  40a933:	call   0xc3a710b9
  40a938:	mov    BYTE PTR [ebx],0x85
  40a93b:	addr16 jle 0x40a92c
  40a93e:	dec    esi
  40a93f:	aas    
  40a940:	pushf  
  40a941:	mov    ds:0x1bb4a0d3,eax
  40a946:	push   ebx
  40a947:	enter  0x58cc,0x2b
  40a94b:	push   eax
  40a94c:	test   DWORD PTR [esi+esi*1-0x3a],edi
  40a950:	ret    0x9db4
  40a953:	fdiv   st(0),st
  40a955:	cmc    
  40a956:	(bad)  
  40a957:	(bad)  [esi-0x1f6d6b2a]
  40a95d:	add    eax,0x434035b8
  40a962:	mov    bl,0xd8
  40a964:	push   eax
  40a965:	scas   eax,DWORD PTR es:[edi]
  40a966:	mov    DWORD PTR [esi-0x20],ebx
  40a969:	mov    bh,0x3f
  40a96b:	mov    esp,0x2a590a8e
  40a970:	ror    BYTE PTR [ebx+edx*1],cl
  40a973:	outs   dx,BYTE PTR ds:[esi]
  40a974:	int3   
  40a975:	dec    edi
  40a976:	scas   al,BYTE PTR es:[edi]
  40a977:	sbb    eax,DWORD PTR [ebp+0x4fbd34fa]
  40a97d:	pop    es
  40a97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a97f:	cmp    DWORD PTR ds:0x5ed9f14e,edi
  40a985:	mul    BYTE PTR [ebp-0x42b7bbc]
  40a98b:	mov    ah,0xdd
  40a98d:	shl    BYTE PTR [ebp-0x2c8035ca],cl
  40a993:	ror    BYTE PTR [edi+edi*2],0xdb
  40a997:	test   bh,0xc3
  40a99a:	inc    ebp
  40a99b:	(bad)  
  40a99c:	xor    ebp,eax
  40a99e:	add    BYTE PTR [edx-0x5a42d56e],0x39
  40a9a5:	fsub   DWORD PTR [edx]
  40a9a7:	and    edx,ebx
  40a9a9:	push   es
  40a9aa:	ja     0x40a961
  40a9ac:	or     esi,edx
  40a9ae:	pop    ecx
  40a9af:	xchg   ebx,eax
  40a9b0:	outs   dx,BYTE PTR ds:[esi]
  40a9b1:	mov    edx,0x4869526a
  40a9b6:	dec    eax
  40a9b7:	mov    esi,0x6baf96b6
  40a9bc:	aam    0x3c
  40a9be:	push   edi
  40a9bf:	out    dx,al
  40a9c0:	test   DWORD PTR [ebp-0xd9f65d3],0xfd83ae28
  40a9ca:	or     al,0x13
  40a9cc:	hlt    
  40a9cd:	mov    al,0xcc
  40a9cf:	(bad)  
  40a9d1:	pop    ecx
  40a9d2:	mov    al,0xea
  40a9d4:	and    al,0x7
  40a9d6:	(bad)  
  40a9d7:	aas    
  40a9d8:	xor    BYTE PTR [esp+ebx*2+0x73],bl
  40a9dc:	into   
  40a9dd:	mov    al,0x6a
  40a9df:	fisttp QWORD PTR [esp+edx*1+0x7b]
  40a9e3:	mov    ebp,0xd97f42d7
  40a9e8:	adc    eax,0xfbb7495c
  40a9ed:	adc    BYTE PTR [eax-0x62],dh
  40a9f0:	mov    ecx,0x24c19624
  40a9f5:	and    eax,0xab0874ee
  40a9fa:	cmc    
  40a9fb:	jae    0x40a9fa
  40a9fd:	lahf   
  40a9fe:	in     al,dx
  40a9ff:	push   esp
  40aa00:	pop    eax
  40aa01:	out    0x27,al
  40aa03:	xor    DWORD PTR [edi+0x4077213b],eax
  40aa09:	into   
  40aa0a:	sti    
  40aa0b:	and    eax,0x12bf3417
  40aa10:	aas    
  40aa11:	sub    eax,ecx
  40aa13:	cdq    
  40aa14:	adc    eax,0xe37089fb
  40aa19:	addr16 jnp 0x40a99f
  40aa1c:	cmc    
  40aa1d:	fadd   st(1),st
  40aa20:	or     DWORD PTR [eax-0x548ece44],esp
  40aa26:	shl    BYTE PTR [ebp-0x33447d4d],0xac
  40aa2d:	inc    ecx
  40aa2e:	cdq    
  40aa2f:	cwde   
  40aa30:	jmp    0x8a20:0xc941773
  40aa37:	xor    BYTE PTR [ebx],ch
  40aa39:	jmp    0xe79e872e
  40aa3e:	jp     0x40aa99
  40aa40:	xor    esi,DWORD PTR [eax]
  40aa42:	fstp   st(2)
  40aa44:	add    eax,0xcd756007
  40aa49:	jno    0x40a9cc
  40aa4b:	push   ss
  40aa4c:	pop    ebp
  40aa4d:	dec    ebp
  40aa4e:	push   0xba7b03d9
  40aa53:	repz sbb al,0x63
  40aa56:	jmp    0x40aa9a
  40aa58:	ror    BYTE PTR [edi],1
  40aa5a:	or     DWORD PTR [edx],ecx
  40aa5c:	repz adc bl,BYTE PTR [ecx-0x34]
  40aa60:	xor    al,0xa0
  40aa62:	xlat   BYTE PTR ds:[ebx]
  40aa63:	pop    esp
  40aa64:	test   DWORD PTR [esi-0x4ec4ea4],eax
  40aa6a:	cmp    esp,DWORD PTR [eax]
  40aa6c:	(bad)  
  40aa6d:	imul   edi,DWORD PTR [ebx+ebp*2-0x42],0xffffffda
  40aa72:	dec    esp
  40aa73:	loopne 0x40aae1
  40aa75:	imul   DWORD PTR [esi+0x6d45d6e8]
  40aa7b:	mov    DWORD PTR [edi-0x39],edx
  40aa7e:	iret   
  40aa7f:	fs iret 
  40aa81:	jne    0x40aab3
  40aa83:	aam    0xfb
  40aa85:	popa   
  40aa86:	inc    DWORD PTR [ebx+0x761a20b7]
  40aa8c:	in     eax,dx
  40aa8d:	mov    edi,0x88b42f16
  40aa92:	ins    DWORD PTR es:[edi],dx
  40aa93:	(bad)  
  40aa95:	mov    ds:0xfa339726,eax
  40aa9a:	hlt    
  40aa9b:	bound  ecx,QWORD PTR [eax-0x79e761d9]
  40aaa1:	mov    eax,0xe4a192e0
  40aaa6:	or     ecx,edi
  40aaa8:	pusha  
  40aaa9:	push   ss
  40aaaa:	sbb    ebp,DWORD PTR ds:0xf7dcb015
  40aab0:	xor    DWORD PTR [edx],eax
  40aab2:	dec    ebp
  40aab3:	xchg   edi,eax
  40aab4:	cli    
  40aab5:	addr16 mov eax,0x5f0315f2
  40aabb:	cli    
  40aabc:	imul   edi,DWORD PTR [esi],0x2c
  40aabf:	aaa    
  40aac0:	cdq    
  40aac1:	pop    ebp
  40aac2:	int3   
  40aac3:	mov    eax,ds:0xc33b69f5
  40aac8:	mov    ecx,0xbd94ccca
  40aacd:	xchg   ebp,eax
  40aace:	push   ecx
  40aacf:	and    eax,0x757537ba
  40aad4:	pop    ecx
  40aad5:	addr16 inc edx
  40aad7:	cdq    
  40aad8:	or     DWORD PTR [ebx-0x68],edx
  40aadb:	mov    ecx,ecx
  40aadd:	mov    ebx,0x536e2de1
  40aae2:	ja     0x40aabe
  40aae4:	push   eax
  40aae5:	scas   eax,DWORD PTR es:[edi]
  40aae6:	inc    edx
  40aae7:	push   ebx
  40aae8:	pusha  
  40aae9:	cmp    ah,BYTE PTR [esi-0x67]
  40aaec:	in     al,0x49
  40aaee:	popf   
  40aaef:	or     BYTE PTR [ecx+edi*2+0x12a62c2a],cl
  40aaf6:	(bad)  
  40aaf7:	leave  
  40aaf8:	pop    edi
  40aaf9:	lods   eax,DWORD PTR ds:[esi]
  40aafa:	aas    
  40aafb:	sub    al,0x25
  40aafd:	ins    BYTE PTR es:[edi],dx
  40aafe:	enter  0x3b76,0x74
  40ab02:	dec    esp
  40ab03:	jge    0x40ab21
  40ab05:	mov    esp,0x1edfea99
  40ab0a:	jg     0x40aab8
  40ab0c:	lahf   
  40ab0d:	or     eax,0xcfb2b95
  40ab12:	je     0x40aad4
  40ab14:	pop    ds
  40ab15:	loope  0x40aaef
  40ab17:	jnp    0x40ab61
  40ab19:	(bad)  
  40ab1b:	lods   eax,DWORD PTR ds:[esi]
  40ab1c:	jmp    0x1481:0x445c3789
  40ab23:	push   edx
  40ab24:	sti    
  40ab25:	adc    DWORD PTR [eax+0x7c],ebp
  40ab28:	or     eax,DWORD PTR [ecx+0x16]
  40ab2b:	sub    al,0x54
  40ab2d:	pop    ecx
  40ab2e:	mov    dl,0x47
  40ab30:	hlt    
  40ab31:	jnp    0x40ab55
  40ab33:	test   DWORD PTR [ebx-0x3808810a],edi
  40ab39:	sar    DWORD PTR [edi-0x1e],cl
  40ab3c:	mov    al,0x5
  40ab3e:	out    0xd3,eax
  40ab40:	push   ebp
  40ab41:	sub    eax,0xd49786cf
  40ab46:	mov    bh,0x7
  40ab48:	ficom  WORD PTR [ebx-0x65400154]
  40ab4e:	cmp    bl,BYTE PTR [edx]
  40ab50:	in     eax,dx
  40ab51:	sti    
  40ab52:	dec    esi
  40ab53:	dec    ebp
  40ab54:	xchg   ecx,edx
  40ab56:	pop    edi
  40ab57:	xchg   ebx,eax
  40ab58:	xlat   BYTE PTR ds:[ebx]
  40ab59:	ret    
  40ab5a:	call   0x7ab9:0x7bf918ab
  40ab61:	lea    ebx,[esi+ebx*1-0x23]
  40ab65:	dec    ebx
  40ab66:	(bad)
  40ab6a:	push   ecx
  40ab6b:	jg     0x40ab4f
  40ab6d:	jne    0x40aba3
  40ab6f:	add    al,0xe7
  40ab71:	xor    esi,DWORD PTR [eax-0xba3a2e1]
  40ab77:	(bad)  
  40ab78:	jo     0x40ab73
  40ab7a:	adc    DWORD PTR [eax],ebp
  40ab7c:	clc    
  40ab7d:	push   esp
  40ab7f:	loope  0x40ab26
  40ab81:	es call 0x7247:0x9c2803a7
  40ab89:	dec    edx
  40ab8a:	jno    0x40ab61
  40ab8c:	dec    esp
  40ab8d:	adc    ah,BYTE PTR [ebp-0x69f47434]
  40ab93:	jae    0x40ac0f
  40ab95:	cmp    BYTE PTR [edx+0x6bd98cd2],bl
  40ab9b:	pop    es
  40ab9c:	pop    edi
  40ab9d:	rcr    DWORD PTR [esi+0x7e],0x60
  40aba1:	sar    BYTE PTR [edx+0x2da99c3d],cl
  40aba7:	mov    edi,0xb3b6de0f
  40abac:	sub    esp,DWORD PTR [edx+0x56]
  40abaf:	push   eax
  40abb0:	or     esp,DWORD PTR [edi-0x41f6b1db]
  40abb6:	xor    ecx,esp
  40abb8:	pushf  
  40abb9:	and    ch,BYTE PTR [ecx]
  40abbb:	jae    0x40ab7f
  40abbd:	or     ch,BYTE PTR [eax+0x54]
  40abc0:	lea    eax,ds:0x8c0bab76
  40abc6:	ins    DWORD PTR es:[edi],dx
  40abc7:	test   BYTE PTR [edx+eax*1+0x34],al
  40abcb:	mov    ebx,0x65862eea
  40abd0:	sbb    BYTE PTR [ebx-0x61],bl
  40abd3:	sub    cl,dh
  40abd5:	cwde   
  40abd6:	es scas al,BYTE PTR es:[edi]
  40abd8:	out    dx,al
  40abd9:	call   0x7d2cef0
  40abde:	ret    0xe407
  40abe1:	inc    eax
  40abe2:	aas    
  40abe3:	cwde   
  40abe4:	call   0xbd4a:0xea43899
  40abeb:	and    edi,esp
  40abed:	xor    BYTE PTR [esi+0x5],0xa6
  40abf1:	aas    
  40abf2:	lock pop ebp
  40abf4:	jnp    0x40ac37
  40abf6:	addr16 jmp 0x44b1:0x785dcd2a
  40abfe:	imul   DWORD PTR [eax+0x74]
  40ac01:	test   edi,esi
  40ac03:	xor    bh,ah
  40ac05:	mov    ch,0xaa
  40ac07:	scas   eax,DWORD PTR es:[edi]
  40ac08:	fcmove st,st(3)
  40ac0a:	icebp  
  40ac0b:	cs jecxz 0x40abd8
  40ac0e:	mov    ah,0x43
  40ac10:	jo     0x40ac89
  40ac12:	adc    DWORD PTR [edi],ecx
  40ac14:	sbb    esi,DWORD PTR [edx+0x63]
  40ac17:	test   DWORD PTR [edx-0x4e],0xea3c342
  40ac1e:	in     eax,dx
  40ac1f:	and    eax,0x39d14fe9
  40ac24:	and    al,0x89
  40ac26:	cld    
  40ac27:	inc    edx
  40ac28:	popa   
  40ac29:	cld    
  40ac2a:	repz dec ecx
  40ac2c:	hlt    
  40ac2d:	mov    ecx,0x485e26ae
  40ac32:	sub    eax,0xce127fa5
  40ac37:	out    0x4b,al
  40ac39:	or     cl,BYTE PTR [edx]
  40ac3b:	fwait
  40ac3c:	inc    esp
  40ac3d:	mov    ds:0x5d4e01f6,al
  40ac42:	fwait
  40ac43:	xchg   ecx,eax
  40ac44:	pop    esi
  40ac45:	cld    
  40ac46:	push   ds
  40ac47:	and    BYTE PTR [ebp-0x2b19ad98],al
  40ac4d:	jle    0x40abd6
  40ac4f:	iret   
  40ac50:	jmp    0xc43331eb
  40ac55:	mov    esp,?
  40ac57:	rcl    dl,0x78
  40ac5a:	jle    0x40accf
  40ac5c:	div    eax
  40ac5e:	aam    0x18
  40ac60:	mov    ch,BYTE PTR [edi+0x123506c0]
  40ac66:	mov    ds:0x81f11482,al
  40ac6b:	jbe    0x40aca0
  40ac6d:	and    DWORD PTR [ecx-0x61],esi
  40ac70:	sub    DWORD PTR [edi],esp
  40ac72:	xchg   ebp,eax
  40ac73:	mov    al,ds:0x73b3ee15
  40ac78:	stc    
  40ac79:	mov    al,ds:0xc0bef0b6
  40ac7e:	push   0xcc57d00
  40ac83:	mov    ds:0xd6fafc25,al
  40ac88:	int    0x60
  40ac8a:	lods   eax,DWORD PTR ds:[esi]
  40ac8b:	xor    BYTE PTR [esi+0x3fdf1256],dh
  40ac91:	loopne 0x40ac7f
  40ac93:	pop    ecx
  40ac94:	or     cl,ah
  40ac96:	stos   DWORD PTR es:[edi],eax
  40ac97:	data16 imul BYTE PTR [esi+0x38b33974]
  40ac9e:	push   esp
  40ac9f:	aaa    
  40aca0:	shl    BYTE PTR [ecx-0x62],cl
  40aca3:	jle    0x40ac3c
  40aca5:	push   ss
  40aca6:	or     al,0xef
  40aca8:	push   0x42
  40acaa:	lods   al,BYTE PTR ds:[esi]
  40acab:	or     al,0xed
  40acad:	cmp    al,0xd9
  40acaf:	aam    0xff
  40acb1:	add    al,0x21
  40acb3:	outs   dx,BYTE PTR ds:[esi]
  40acb4:	imul   eax,DWORD PTR [edi-0x699035b9],0x9391673a
  40acbe:	data16 jp 0x40acab
  40acc1:	aaa    
  40acc2:	cli    
  40acc3:	out    0xf5,al
  40acc5:	mov    ah,0xd9
  40acc7:	out    0xc6,al
  40acc9:	xlat   BYTE PTR ds:[ebx]
  40acca:	lahf   
  40accb:	xchg   BYTE PTR [eax],dl
  40accd:	dec    esi
  40acce:	push   esp
  40accf:	and    eax,0xc4917a9c
  40acd4:	out    0x6d,eax
  40acd6:	adc    eax,0xbc5ceab2
  40acdb:	lahf   
  40acdc:	or     eax,0xac33d418
  40ace1:	xchg   ebp,eax
  40ace2:	xor    DWORD PTR [ebx-0x7f346b91],ebp
  40ace8:	or     eax,0x20def318
  40aced:	das    
  40acee:	mov    dl,0x50
  40acf0:	int    0xdc
  40acf2:	pop    esp
  40acf3:	mov    dl,0xfb
  40acf5:	adc    eax,0x6fa630f
  40acfa:	jle    0x40ad42
  40acfc:	mov    ebx,0x635048d9
  40ad01:	clc    
  40ad02:	into   
  40ad03:	fild   QWORD PTR [ebx]
  40ad05:	xchg   ecx,eax
  40ad06:	push   0xffffffd5
  40ad08:	and    al,0xc6
  40ad0a:	fs cdq 
  40ad0c:	mov    ecx,0xc4adf82
  40ad11:	in     eax,0x1a
  40ad13:	fld    DWORD PTR [edi-0xb70af2]
  40ad19:	jno    0x40ad4f
  40ad1b:	daa    
  40ad1c:	push   eax
  40ad1d:	cwde   
  40ad1e:	outs   dx,BYTE PTR ds:[esi]
  40ad1f:	xchg   esi,eax
  40ad20:	inc    eax
  40ad21:	cmc    
  40ad22:	push   edx
  40ad23:	add    bh,BYTE PTR [ecx+0x1d]
  40ad26:	pop    edx
  40ad27:	iret   
  40ad28:	(bad)  
  40ad29:	xor    esp,edx
  40ad2b:	out    dx,al
  40ad2c:	mov    bl,0x9a
  40ad2e:	adc    eax,edx
  40ad30:	mov    bh,0x35
  40ad32:	add    DWORD PTR [edx],edi
  40ad34:	lods   al,BYTE PTR ds:[esi]
  40ad35:	adc    DWORD PTR [ebp+0x27],edi
  40ad38:	xchg   edi,eax
  40ad39:	pop    ss
  40ad3a:	out    dx,eax
  40ad3b:	xor    DWORD PTR [ebp+0x9477b76],edx
  40ad41:	jle    0x40ad19
  40ad43:	lock out 0x9f,al
  40ad46:	test   eax,0x65652bb2
  40ad4b:	inc    edi
  40ad4c:	scas   eax,DWORD PTR es:[edi]
  40ad4d:	sar    DWORD PTR [edi+ecx*2-0x2327f72f],cl
  40ad54:	inc    ecx
  40ad55:	xchg   edi,eax
  40ad56:	xchg   esp,eax
  40ad57:	adc    DWORD PTR [esi],esp
  40ad59:	xchg   edi,eax
  40ad5a:	add    BYTE PTR [ebx],dh
  40ad5c:	cmp    BYTE PTR [ecx],ch
  40ad5e:	ret    
  40ad5f:	mov    edi,0xe71d27ec
  40ad64:	mov    ebp,0x44e0ab87
  40ad69:	arpl   bp,ax
  40ad6b:	in     ax,0x42
  40ad6e:	call   0xc9bd7f98
  40ad73:	das    
  40ad74:	cmp    BYTE PTR [ebx],dl
  40ad76:	loope  0x40ad60
  40ad78:	stos   BYTE PTR es:[edi],al
  40ad79:	dec    esi
  40ad7a:	lock mov ebx,DWORD PTR [ecx-0x7d]
  40ad7e:	and    esp,ebp
  40ad80:	or     al,0x81
  40ad82:	mov    ds:0x6e94359b,eax
  40ad87:	dec    ebx
  40ad88:	retf   0x54e6
  40ad8b:	aam    0xd6
  40ad8d:	lahf   
  40ad8e:	adc    eax,0x4d7eddb7
  40ad93:	or     bh,BYTE PTR [edx]
  40ad95:	jge    0x40ad43
  40ad97:	(bad)  
  40ad98:	fcomp  QWORD PTR [ebp+0x27bfaf7b]
  40ad9e:	aam    0x95
  40ada0:	and    esi,edi
  40ada2:	fiadd  DWORD PTR [esi+0x42]
  40ada5:	xchg   ebx,eax
  40ada6:	out    dx,eax
  40ada7:	jp     0x40ad74
  40ada9:	xlat   BYTE PTR ds:[ebx]
  40adaa:	je     0x40ad55
  40adac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adad:	aas    
  40adae:	dec    ecx
  40adaf:	push   0x3e
  40adb1:	ja     0x40adfa
  40adb3:	jl     0x40ad74
  40adb5:	stos   BYTE PTR es:[edi],al
  40adb6:	mov    ds:0xe4756796,al
  40adbb:	sbb    eax,DWORD PTR [ebp+0x5d1b6f69]
  40adc1:	mov    ecx,0xf54ec331
  40adc6:	adc    al,0x20
  40adc8:	pop    esi
  40adc9:	inc    ebx
  40adca:	dec    ecx
  40adcb:	dec    edi
  40adcc:	cdq    
  40adcd:	or     al,0x17
  40adcf:	js     0x40ad76
  40add1:	mov    ds:0xaf634d7e,al
  40add6:	leave  
  40add7:	mov    edi,0x2a2b40ff
  40addc:	jbe    0x40adf0
  40adde:	loopne 0x40adce
  40ade0:	fs gs (bad) 
  40ade4:	cmp    bl,bl
  40ade6:	lods   eax,DWORD PTR ds:[esi]
  40ade7:	cwde   
  40ade8:	int3   
  40ade9:	out    0x1d,al
  40adeb:	nop
  40adec:	and    edi,DWORD PTR [eax-0x5dcba9e6]
  40adf2:	sub    ebp,DWORD PTR ds:0x2b6e8c5f
  40adf8:	fld    TBYTE PTR [edx-0xdf9ba3d]
  40adfe:	pop    edx
  40adff:	fs js  0x40ae01
  40ae02:	sbb    eax,0x87a33f89
  40ae07:	and    esp,DWORD PTR [edi-0x4ff5f8f1]
  40ae0d:	bswap  esi
  40ae0f:	cld    
  40ae10:	leave  
  40ae11:	pop    ds
  40ae12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae13:	pop    edi
  40ae14:	jb     0x40ae2c
  40ae16:	sbb    cl,0x1b
  40ae19:	shl    DWORD PTR [ecx+0x4d05ff68],0xaf
  40ae20:	arpl   sp,dx
  40ae22:	adc    edi,DWORD PTR [edi]
  40ae24:	popf   
  40ae25:	jnp    0x40adae
  40ae27:	test   al,0xa5
  40ae29:	dec    edi
  40ae2a:	shl    dl,1
  40ae2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae2d:	mov    ds:0x7a670a6b,eax
  40ae32:	mov    eax,ebx
  40ae34:	pop    esi
  40ae35:	popa   
  40ae36:	popa   
  40ae37:	test   eax,0x10b380fa
  40ae3c:	sub    edx,ebp
  40ae3e:	xor    bh,BYTE PTR ds:0x647cf851
  40ae44:	pop    edx
  40ae45:	dec    ebx
  40ae46:	clc    
  40ae47:	sti    
  40ae48:	xor    eax,DWORD PTR [eax-0x77]
  40ae4b:	cmp    dl,BYTE PTR [ebp+ebx*1-0x7f]
  40ae4f:	add    dh,BYTE PTR [edi+0x2c]
  40ae52:	lahf   
  40ae53:	leave  
  40ae54:	sbb    al,BYTE PTR [ebp+eax*4-0x6e]
  40ae58:	pop    ds
  40ae59:	jl     0x40aeba
  40ae5b:	leave  
  40ae5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5d:	mov    DWORD PTR [ecx+0x2f9e8b2c],edx
  40ae63:	dec    ebx
  40ae64:	mov    eax,ds:0xf6539319
  40ae69:	xor    DWORD PTR [ebp-0x21],0x39543c54
  40ae70:	aam    0x12
  40ae72:	ds mov edi,0xc5fc8681
  40ae78:	inc    edi
  40ae79:	inc    esi
  40ae7b:	mov    bl,0x71
  40ae7d:	xchg   ebx,eax
  40ae7e:	scas   eax,DWORD PTR es:[edi]
  40ae7f:	stos   BYTE PTR es:[edi],al
  40ae80:	cwde   
  40ae81:	jmp    0x40ae89
  40ae83:	mov    ds:0xc917e048,eax
  40ae88:	jnp    0x40aeb5
  40ae8a:	ss ret 
  40ae8c:	mov    BYTE PTR [ebp-0x5c],dh
  40ae8f:	imul   edx,ebp,0x816b60c0
  40ae95:	add    al,0x73
  40ae97:	je     0x40ae27
  40ae99:	enter  0x494c,0xef
  40ae9d:	sub    ch,ch
  40ae9f:	jecxz  0x40aed7
  40aea1:	in     eax,0x38
  40aea3:	push   es
  40aea4:	aam    0x12
  40aea6:	loop   0x40ae36
  40aea8:	clc    
  40aea9:	mov    DWORD PTR [edx+ecx*4],eax
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    edx,DWORD PTR [eax+0x6b]
  40aee6:	lods   al,BYTE PTR ds:[esi]
  40aee7:	shrd   DWORD PTR [eax],ecx,0x7b
  40aeeb:	jnp    0x40aeeb
  40aeed:	sahf   
  40aeee:	jnp    0x40af6b
  40aef0:	adc    eax,0x2ee4d3d
  40aef5:	adc    bl,BYTE PTR [ebx+0x75]
  40aef8:	sahf   
  40aef9:	cld    
  40aefa:	pop    ds
  40aefb:	adc    eax,0xb373a721
  40af00:	addr16 pop edx
  40af02:	and    eax,0xd776fb7e
  40af07:	pop    edi
  40af08:	rcr    ah,0x14
  40af0b:	inc    edi
  40af0c:	inc    ebp
  40af0d:	jnp    0x40af7d
  40af0f:	sbb    ebx,DWORD PTR [eax+edx*8+0x1d]
  40af13:	pop    es
  40af14:	sbb    ch,BYTE PTR [ebx-0x27]
  40af17:	outs   dx,BYTE PTR ds:[esi]
  40af18:	nop
  40af19:	sub    DWORD PTR [edx+0x2fbf37ab],ecx
  40af1f:	sbb    DWORD PTR ds:0xc666868f,0xd849e096
  40af29:	sahf   
  40af2a:	sbb    eax,0x20cb82d5
  40af2f:	aad    0x7d
  40af31:	xchg   ebp,eax
  40af32:	inc    eax
  40af33:	push   esp
  40af34:	mov    edx,0x50c0473d
  40af39:	sub    ah,BYTE PTR [ecx]
  40af3b:	sub    eax,0xfa174116
  40af40:	imul   esp,DWORD PTR [eax+0x7cfc3419],0x8bb95761
  40af4a:	outs   dx,BYTE PTR ds:[esi]
  40af4b:	pop    ebx
  40af4c:	xchg   esi,eax
  40af4d:	outs   dx,BYTE PTR ds:[esi]
  40af4e:	push   ebp
  40af4f:	aam    0xfe
  40af51:	add    al,0xe8
  40af53:	push   cs
  40af54:	pop    es
  40af55:	ret    
  40af56:	popa   
  40af57:	push   edx
  40af58:	call   0x691013f7
  40af5d:	dec    ebx
  40af5e:	adc    esi,ebp
  40af60:	mul    BYTE PTR [edi+ebp*1-0x5cda5bc8]
  40af67:	scas   eax,DWORD PTR es:[edi]
  40af68:	sbb    eax,0x296ecee2
  40af6d:	cld    
  40af6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af6f:	push   esi
  40af70:	das    
  40af71:	(bad)  
  40af72:	pop    esp
  40af73:	jnp    0x40afaa
  40af75:	xor    eax,edx
  40af77:	or     al,0x98
  40af79:	test   al,0x5f
  40af7b:	sbb    BYTE PTR [esi-0x193a6b40],dl
  40af81:	rcl    eax,0x89
  40af84:	(bad)  
  40af85:	(bad)  
  40af86:	fsub   QWORD PTR ds:0xf26961a0
  40af8c:	cwde   
  40af8d:	scas   eax,DWORD PTR es:[edi]
  40af8e:	aam    0x1f
  40af90:	push   DWORD PTR [eax]
  40af92:	sbb    eax,0xbf4fd15c
  40af97:	gs mov bl,0x9
  40af9a:	sbb    eax,0xc79403d9
  40af9f:	shl    BYTE PTR [edi-0x2],cl
  40afa2:	push   ds
  40afa3:	add    eax,0x22bf5984
  40afa8:	and    eax,DWORD PTR [edi+0x49c6ccd7]
  40afae:	test   BYTE PTR [ecx-0x4a4e4d71],0x21
  40afb5:	inc    edi
  40afb6:	jp     0x40b015
  40afb8:	std    
  40afb9:	out    dx,al
  40afba:	ret    0xaa3
  40afbd:	dec    ebp
  40afbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afbf:	push   ebx
  40afc0:	mov    al,0x49
  40afc2:	mov    ebx,0xe2631a3c
  40afc7:	add    eax,0xa4e56ac9
  40afcc:	push   ecx
  40afcd:	adc    al,0x14
  40afcf:	cs ret 0x4a7b
  40afd3:	add    al,al
  40afd5:	jmp    0x40b051
  40afd7:	iret   
  40afd8:	add    dh,BYTE PTR [ebp-0x7fe724a0]
  40afde:	test   BYTE PTR [edx],dh
  40afe0:	jl     0x40af9e
  40afe2:	push   0xffffffe1
  40afe4:	sub    BYTE PTR [esi],bh
  40afe6:	mov    ah,0x2b
  40afe8:	push   esp
  40afe9:	inc    ebp
  40afea:	and    BYTE PTR [ebx],cl
  40afec:	mov    cs,esi
  40afee:	inc    edi
  40afef:	push   ecx
  40aff0:	cmc    
  40aff1:	mov    al,0x74
  40aff3:	mov    bl,0x34
  40aff5:	push   ebx
  40aff6:	data16 loop 0x40afbe
  40aff9:	dec    esi
  40affa:	and    bh,cl
  40affc:	push   ecx
  40affd:	mov    ah,0xf0
  40afff:	(bad)  
  40b000:	adc    BYTE PTR [ebp+0x760038b7],ah
  40b006:	dec    edi
  40b007:	or     esp,edi
  40b009:	or     al,0x79
  40b00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b00c:	lods   eax,DWORD PTR ds:[esi]
  40b00d:	in     al,0x67
  40b00f:	(bad)  
  40b010:	iret   
  40b011:	jb     0x40aff4
  40b013:	jbe    0x40b038
  40b015:	mov    dh,0xcb
  40b017:	add    DWORD PTR [esi-0x594a6a09],esi
  40b01d:	dec    ecx
  40b01e:	fidiv  DWORD PTR [ebx+0x7b2b3ef4]
  40b024:	push   esi
  40b025:	jbe    0x40b050
  40b027:	pop    edi
  40b028:	mov    esp,0x82297cd9
  40b02d:	pop    eax
  40b02e:	fld    TBYTE PTR [ebx+edi*1+0x19]
  40b032:	mov    DWORD PTR [edi-0x5a],0x4170a2e5
  40b039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03a:	test   BYTE PTR [ebp-0x130ecb6c],ah
  40b040:	sub    dl,ah
  40b042:	mov    dh,0x5b
  40b044:	gs pusha 
  40b046:	pop    edx
  40b047:	mov    esp,0xf4a0655b
  40b04c:	mov    bl,0xe6
  40b04e:	mov    ah,0x35
  40b050:	rcl    BYTE PTR ds:0xaa60c9f0,0x12
  40b057:	sub    al,0xda
  40b059:	push   ds
  40b05a:	inc    edi
  40b05b:	sub    ch,BYTE PTR ds:0x36e5670e
  40b061:	retf   0x894
  40b064:	imul   DWORD PTR cs:[ecx-0x1d]
  40b068:	push   ebx
  40b069:	dec    esi
  40b06a:	mov    eax,esp
  40b06c:	pop    es
  40b06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b06e:	sub    eax,0xe02f60e2
  40b073:	sbb    cl,BYTE PTR [esi+0x6001b18d]
  40b079:	dec    ecx
  40b07a:	and    dl,cl
  40b07c:	or     dh,BYTE PTR [ebx+0x425254b3]
  40b082:	(bad)  
  40b083:	xor    eax,0x4e89d656
  40b088:	sub    al,0x14
  40b08a:	or     BYTE PTR [eax-0x3],ah
  40b08d:	aaa    
  40b08e:	jns    0x40b0f2
  40b090:	sub    edi,DWORD PTR [edx+eax*1]
  40b093:	sbb    DWORD PTR [ecx],ebx
  40b095:	mov    ebx,0xb6748921
  40b09a:	xchg   edi,eax
  40b09b:	cmc    
  40b09c:	out    dx,eax
  40b09d:	add    edx,DWORD PTR [ebp+edx*1+0x35]
  40b0a1:	xor    ebx,DWORD PTR [ecx-0x68]
  40b0a4:	rcr    dh,1
  40b0a6:	cmp    al,ch
  40b0a8:	les    edx,FWORD PTR [edx+0x7a]
  40b0ab:	mov    ds:0xfbd0d5ee,al
  40b0b0:	loope  0x40b10a
  40b0b2:	cs daa 
  40b0b4:	test   BYTE PTR [eax-0x757fd25b],ah
  40b0ba:	scas   al,BYTE PTR es:[edi]
  40b0bb:	push   0x1a
  40b0bd:	mov    esp,0x2f6a4ae5
  40b0c2:	or     eax,ebx
  40b0c4:	sub    ebx,edi
  40b0c6:	jb     0x40b13e
  40b0c8:	loopne 0x40b107
  40b0ca:	sbb    DWORD PTR [esi],ecx
  40b0cc:	jbe    0x40b0b4
  40b0ce:	or     ebx,DWORD PTR [ecx-0x7a]
  40b0d1:	adc    eax,0xbf9f3fe2
  40b0d6:	sahf   
  40b0d7:	test   eax,0x17508a3c
  40b0dc:	jb     0x40b139
  40b0de:	pop    ds
  40b0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e0:	push   edi
  40b0e1:	daa    
  40b0e2:	pop    esp
  40b0e3:	push   eax
  40b0e4:	clc    
  40b0e5:	or     DWORD PTR [esp+edx*2-0x219c43ff],edi
  40b0ec:	push   eax
  40b0ed:	and    cl,BYTE PTR [ecx-0x7d]
  40b0f0:	mov    ds:0x20d5753c,eax
  40b0f5:	ss daa 
  40b0f7:	add    esp,eax
  40b0f9:	sbb    ebx,DWORD PTR [ecx+0x19]
  40b0fc:	inc    ecx
  40b0fd:	add    eax,0xbcc9c8da
  40b102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b103:	dec    eax
  40b104:	sahf   
  40b105:	mov    edi,0x4f66154f
  40b10a:	lock push ebx
  40b10c:	popa   
  40b10d:	popf   
  40b10e:	cld    
  40b10f:	sub    BYTE PTR [esi-0x79],dl
  40b112:	test   DWORD PTR [ebp-0x18],esp
  40b115:	dec    esi
  40b116:	xor    al,0x52
  40b118:	fs in  al,0x24
  40b11b:	sub    ch,bh
  40b11d:	repz shr dl,1
  40b120:	(bad)  
  40b121:	mov    ebx,0x2c4b9719
  40b126:	sahf   
  40b127:	pushf  
  40b128:	arpl   WORD PTR [edi],bx
  40b12a:	jmp    0x1f12634
  40b12f:	xchg   BYTE PTR [edi],bh
  40b131:	or     eax,0x7e6addbd
  40b136:	rcl    BYTE PTR [ecx],0xb2
  40b139:	pop    ss
  40b13a:	sbb    ecx,DWORD PTR [ecx+0x495e367]
  40b140:	xor    al,0xe2
  40b142:	push   ss
  40b143:	hlt    
  40b144:	adc    al,dl
  40b146:	push   esi
  40b147:	lahf   
  40b148:	mov    esp,0xb792f96e
  40b14d:	leave  
  40b14e:	les    esi,FWORD PTR ds:0x7195f848
  40b154:	and    edi,DWORD PTR [esi+0x52]
  40b157:	and    DWORD PTR [edx-0x63],esi
  40b15a:	mov    bl,0x38
  40b15c:	mov    al,BYTE PTR [ebp-0xda5cef6]
  40b162:	push   cs
  40b163:	mov    WORD PTR [esi],?
  40b165:	jmp    0xae30ed96
  40b16a:	push   es
  40b16b:	sti    
  40b16c:	xchg   edi,eax
  40b16d:	or     al,0xcc
  40b16f:	stos   DWORD PTR es:[edi],eax
  40b170:	(bad)  
  40b171:	fbld   TBYTE PTR [esi-0x558e249]
  40b177:	or     al,0x2c
  40b179:	dec    edi
  40b17a:	popf   
  40b17b:	xchg   esi,edi
  40b17d:	pop    ecx
  40b17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b17f:	pop    ecx
  40b180:	scas   eax,DWORD PTR es:[edi]
  40b181:	push   ebx
  40b182:	mov    bh,0x3b
  40b184:	iret   
  40b185:	mov    esp,0x2ac7764
  40b18a:	and    eax,0x38fc1f36
  40b18f:	ficomp DWORD PTR [ebp-0x5c]
  40b192:	pop    es
  40b193:	ja     0x40b20e
  40b195:	(bad)  
  40b196:	enter  0x8bac,0xd0
  40b19a:	mov    edi,0x87c8fb07
  40b19f:	dec    eax
  40b1a0:	push   ebp
  40b1a1:	and    DWORD PTR [ebx-0x53],edx
  40b1a4:	add    al,0x8e
  40b1a6:	push   cs
  40b1a7:	icebp  
  40b1a8:	mov    ds:0x19826a80,eax
  40b1ad:	jno    0x40b1ef
  40b1af:	icebp  
  40b1b0:	jo     0x40b21a
  40b1b2:	add    ah,BYTE PTR [esi-0x7f]
  40b1b5:	cdq    
  40b1b6:	pop    ebp
  40b1b7:	jns    0x40b1ec
  40b1b9:	mov    fs,WORD PTR [eax+0x5e24ff68]
  40b1bf:	sub    eax,0x4d7704fa
  40b1c4:	leave  
  40b1c5:	pop    ecx
  40b1c6:	das    
  40b1c7:	add    eax,0xb5234fdb
  40b1cc:	dec    ebp
  40b1cd:	push   ecx
  40b1ce:	int3   
  40b1cf:	stos   BYTE PTR es:[edi],al
  40b1d0:	dec    edi
  40b1d1:	cs pop edi
  40b1d3:	or     DWORD PTR [edi+0x4246060c],ebp
  40b1d9:	test   eax,0xbbe09c44
  40b1de:	mov    ?,WORD PTR [esi-0x2938915e]
  40b1e4:	sbb    eax,0x74e3e8d0
  40b1e9:	mov    dh,0x71
  40b1eb:	daa    
  40b1ec:	pop    ecx
  40b1ed:	dec    ecx
  40b1ee:	test   eax,0xdf801f73
  40b1f3:	les    ebp,FWORD PTR [ecx+0x39]
  40b1f6:	retf   
  40b1f7:	push   esp
  40b1f8:	push   edx
  40b1f9:	mov    cl,0x51
  40b1fb:	xchg   esp,eax
  40b1fc:	stos   DWORD PTR es:[edi],eax
  40b1fd:	sub    edx,0x6e
  40b200:	bound  eax,QWORD PTR [edi-0xe6aabf0]
  40b206:	cdq    
  40b207:	mov    BYTE PTR [edx+ebx*4],ch
  40b20a:	call   0xa137:0xaba9d6f4
  40b211:	jmp    0xb794:0xe5f4940a
  40b218:	out    dx,eax
  40b219:	mov    ch,0xd5
  40b21b:	add    eax,0xfb1515a3
  40b220:	xchg   esi,eax
  40b221:	xor    BYTE PTR [eax-0x10],bh
  40b224:	mov    ebx,0x668d8873
  40b229:	pop    eax
  40b22a:	pop    DWORD PTR [ebp+0x49]
  40b22d:	pusha  
  40b22e:	mov    ah,0x7b
  40b230:	hlt    
  40b231:	fld    QWORD PTR [edx+0x1b2d5e5c]
  40b237:	paddw  mm7,QWORD PTR [edx-0x6d808f9d]
  40b23e:	out    0xce,al
  40b240:	pop    ds
  40b241:	push   ebx
  40b242:	mov    dh,0x27
  40b244:	fldlg2 
  40b246:	adc    eax,0x81cbe9a9
  40b24b:	mov    BYTE PTR [ebx],dl
  40b24d:	nop
  40b24e:	xchg   ebx,eax
  40b24f:	imul   esi,edx,0x30e86683
  40b255:	mov    ecx,0xcdf5eacf
  40b25a:	xchg   ebp,eax
  40b25b:	push   esp
  40b25c:	mov    dl,0x29
  40b25e:	retf   
  40b25f:	ficom  DWORD PTR [edx]
  40b261:	je     0x40b226
  40b263:	pop    esi
  40b264:	jg     0x40b2d5
  40b266:	sahf   
  40b267:	fstp   st(6)
  40b269:	pop    ds
  40b26a:	icebp  
  40b26b:	jno    0x40b2d1
  40b26d:	sti    
  40b26e:	addr16 pop ecx
  40b270:	adc    eax,0xcc962e9e
  40b275:	or     DWORD PTR [edx-0x1c],0xccf7062b
  40b27c:	aad    0xb7
  40b27e:	cwde   
  40b27f:	cmovbe esi,DWORD PTR [esi+0x67]
  40b283:	mov    ch,0x75
  40b285:	pop    ebp
  40b286:	and    DWORD PTR [edi+0x72379265],esp
  40b28c:	push   edi
  40b28d:	rcl    DWORD PTR [esi-0x1a],0x36
  40b291:	in     eax,dx
  40b292:	and    eax,0xb99a9037
  40b297:	adc    edx,DWORD PTR [ecx-0x46]
  40b29a:	add    BYTE PTR [edi+0x3ddd592],dl
  40b2a0:	mov    ecx,0x49932e69
  40b2a5:	shl    DWORD PTR [edi],cl
  40b2a7:	cmp    ah,ah
  40b2a9:	or     al,0xef
  40b2ab:	ror    dl,0xe1
  40b2ae:	push   eax
  40b2af:	fistp  DWORD PTR [esi-0x48fc14e0]
  40b2b5:	push   ss
  40b2b6:	adc    eax,DWORD PTR [edx-0x5fea126c]
  40b2bc:	clc    
  40b2bd:	scas   eax,DWORD PTR es:[edi]
  40b2be:	mul    DWORD PTR [ecx+edx*4]
  40b2c1:	jo     0x40b2aa
  40b2c3:	mov    edx,0x809aa4d1
  40b2c8:	or     al,0xf
  40b2ca:	mov    ebp,0x105c76ef
  40b2cf:	and    eax,0xa272ea61
  40b2d4:	imul   DWORD PTR [edi+0x5f]
  40b2d7:	mov    ecx,esi
  40b2d9:	mul    DWORD PTR [edi+0x11160eab]
  40b2df:	sbb    DWORD PTR [ebx-0x2f3b1693],edx
  40b2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e6:	fwait
  40b2e7:	jle    0x40b317
  40b2e9:	fisub  DWORD PTR [ebx+0x1b35d1b]
  40b2ef:	push   0x70fb9b18
  40b2f4:	mov    cl,0xb7
  40b2f6:	das    
  40b2f7:	adc    al,0x95
  40b2f9:	cld    
  40b2fa:	das    
  40b2fb:	or     DWORD PTR [edx-0x2ef6cf5e],ecx
  40b301:	aad    0xa9
  40b303:	mov    edx,0xb3c9d49f
  40b308:	or     BYTE PTR [edx+ebp*8],bl
  40b30b:	sbb    ecx,DWORD PTR [ebx]
  40b30d:	push   0xffffff9a
  40b30f:	jmp    0xac33:0x7f687dc5
  40b316:	pop    ebx
  40b317:	adc    BYTE PTR [ecx+0x521fbdc0],0x3
  40b31e:	mul    BYTE PTR [esi+0x3483b5a3]
  40b324:	neg    DWORD PTR [ecx-0x2704804d]
  40b32a:	rcl    ebp,1
  40b32c:	pop    ecx
  40b32d:	or     dh,dh
  40b32f:	sub    dh,BYTE PTR [eax]
  40b331:	lock pop es
  40b333:	out    0x17,eax
  40b335:	jecxz  0x40b381
  40b337:	mov    edi,0xc0df562d
  40b33c:	xor    DWORD PTR [edx-0x77],ecx
  40b33f:	pop    ecx
  40b340:	dec    DWORD PTR [ebx+0x14b8c3dc]
  40b346:	xor    ch,bh
  40b348:	xor    BYTE PTR [ecx+edx*1],ch
  40b34b:	sub    edx,DWORD PTR [ebx+0x5dd39fec]
  40b351:	jecxz  0x40b355
  40b353:	sahf   
  40b354:	push   ss
  40b355:	fimul  DWORD PTR [edi*2-0xe983f85]
  40b35c:	push   eax
  40b35d:	dec    ecx
  40b35e:	lds    ebp,FWORD PTR [ebp+esi*1+0x45b89aa8]
  40b365:	add    cl,BYTE PTR [edi]
  40b367:	out    dx,eax
  40b368:	lahf   
  40b369:	and    al,BYTE PTR [esi+eiz*8-0x7270184d]
  40b370:	iret   
  40b371:	xor    ah,dl
  40b373:	jae    0x40b3a7
  40b375:	push   edi
  40b376:	shr    DWORD PTR [ebx+ebx*8],1
  40b379:	mov    ebp,0x735a6165
  40b37e:	popa   
  40b37f:	mov    bl,0x16
  40b381:	leave  
  40b382:	ret    0x975c
  40b385:	adc    BYTE PTR [ebx-0x354e5e06],dl
  40b38b:	sbb    eax,0x160bdae0
  40b390:	lds    edi,FWORD PTR [esi]
  40b392:	aas    
  40b393:	mov    esp,0xf3acdcfb
  40b398:	pop    es
  40b399:	push   edi
  40b39a:	test   eax,0xefd4706a
  40b39f:	push   0x280a824c
  40b3a4:	sub    esp,DWORD PTR [edi-0x7cd75546]
  40b3aa:	mov    ah,BYTE PTR [esi-0x5e]
  40b3ad:	js     0x40b3f5
  40b3af:	shr    dh,cl
  40b3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b2:	jge    0x40b364
  40b3b4:	cmp    al,0x34
  40b3b6:	in     al,0xc3
  40b3b8:	sbb    al,BYTE PTR [ecx]
  40b3ba:	lods   eax,DWORD PTR ds:[esi]
  40b3bb:	stc    
  40b3bc:	push   eax
  40b3bd:	and    DWORD PTR [esi*1-0x97f24c7],esp
  40b3c4:	hlt    
  40b3c5:	ins    DWORD PTR es:[edi],dx
  40b3c6:	arpl   WORD PTR [ebx-0x72],di
  40b3c9:	xchg   ebx,eax
  40b3ca:	cmp    eax,0xc2dc9650
  40b3cf:	inc    ebp
  40b3d0:	or     cl,BYTE PTR [edx+ecx*1+0x47]
  40b3d4:	push   esp
  40b3d5:	retf   
  40b3d6:	retf   
  40b3d7:	jmp    0x40b3c3
  40b3d9:	adc    al,0x96
  40b3db:	ds cs inc ebp
  40b3de:	mov    dl,0xce
  40b3e0:	cmp    al,0x11
  40b3e2:	and    DWORD PTR [ebx+eiz*2],0xffffffbe
  40b3e6:	gs and al,0xa3
  40b3e9:	mov    ebx,0xc092a581
  40b3ee:	push   ebx
  40b3ef:	sbb    eax,0x57c2d86f
  40b3f4:	sahf   
  40b3f5:	jp     0x40b401
  40b3f7:	mov    bh,0xe0
  40b3f9:	mov    ebp,0xb6580db3
  40b3fe:	shl    edx,0x71
  40b401:	cmp    al,0x7e
  40b403:	sub    ecx,ebp
  40b405:	lock add eax,0xd0e3c679
  40b40b:	jl     0x40b461
  40b40d:	(bad)  
  40b40e:	dec    ebp
  40b40f:	ret    
  40b410:	and    eax,0x4d364287
  40b415:	bound  ebx,QWORD PTR [edi]
  40b417:	fcomp  DWORD PTR [edx+0x5a]
  40b41a:	fsubr  QWORD PTR ds:0xfc004ae2
  40b420:	xor    esp,DWORD PTR [ecx+ebx*1-0x42a745f6]
  40b427:	nop
  40b428:	(bad)  
  40b42a:	retf   0x21d6
  40b42d:	mov    WORD PTR [edi],ds
  40b42f:	aas    
  40b430:	aaa    
  40b431:	ret    0xf94d
  40b434:	cmp    al,0xfa
  40b436:	das    
  40b437:	xlat   BYTE PTR ds:[ebx]
  40b438:	stos   BYTE PTR es:[edi],al
  40b439:	push   cs
  40b43a:	xchg   ecx,eax
  40b43b:	call   0x46de41c
  40b440:	add    eax,0xfa691eff
  40b445:	jnp    0x40b3ca
  40b447:	or     BYTE PTR [eax+0x37],dh
  40b44a:	popf   
  40b44b:	mov    eax,0x6f369a66
  40b450:	push   edi
  40b451:	das    
  40b452:	shr    DWORD PTR [ebp-0x24bb2b35],cl
  40b458:	out    dx,eax
  40b459:	retf   
  40b45a:	push   eax
  40b45b:	jmp    esp
  40b45d:	add    esi,esi
  40b45f:	(bad)  
  40b460:	rcl    DWORD PTR [edx],1
  40b462:	fxch   st(4)
  40b464:	push   ss
  40b465:	rcl    edx,cl
  40b467:	jecxz  0x40b462
  40b469:	out    0xb4,al
  40b46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b46c:	xchg   ebp,eax
  40b46d:	test   BYTE PTR [ebx],dl
  40b46f:	fidivr WORD PTR [esi+0x1c]
  40b472:	sti    
  40b473:	add    bh,BYTE PTR [ebx+esi*1+0x31]
  40b477:	jmp    0x40b438
  40b479:	inc    ebx
  40b47a:	push   DWORD PTR [esp+edi*1-0x7e]
  40b47e:	rol    BYTE PTR [edi+0x6c],0x38
  40b482:	inc    eax
  40b483:	add    BYTE PTR [edx+0x38de8f93],ah
  40b489:	sbb    al,BYTE PTR [eax+0x34637eaf]
  40b48f:	xchg   ecx,eax
  40b490:	adc    eax,0xf6555f01
  40b495:	sub    BYTE PTR [ecx-0x64],0x52
  40b499:	mov    WORD PTR [esi-0x78],?
  40b49c:	nop
  40b49d:	nop
  40b49e:	jo     0x40b51d
  40b4a0:	test   BYTE PTR [edx-0x3f],bl
  40b4a3:	and    al,0x1e
  40b4a5:	adc    DWORD PTR [ecx],esp
  40b4a7:	loope  0x40b4b5
  40b4a9:	add    DWORD PTR [edi+0x5d603185],0x6ec8d61c
  40b4b3:	ja     0x40b497
  40b4b5:	fisttp WORD PTR [ebx+ecx*1+0x2c3bbcb9]
  40b4bc:	jg     0x40b447
  40b4be:	pop    esp
  40b4bf:	dec    ebp
  40b4c0:	les    ecx,FWORD PTR [esi+0x2a7710b4]
  40b4c6:	and    edx,DWORD PTR [ecx+0x67ac2952]
  40b4cc:	enter  0xca1f,0xbe
  40b4d0:	inc    esi
  40b4d1:	and    eax,esi
  40b4d3:	fcomi  st,st(1)
  40b4d5:	ja     0x40b50a
  40b4d7:	jg     0x40b4b8
  40b4d9:	dec    eax
  40b4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4db:	adc    esi,esp
  40b4dd:	push   cs
  40b4de:	mov    ecx,esi
  40b4e0:	out    0xcf,eax
  40b4e2:	jnp    0x40b53b
  40b4e4:	test   al,0x95
  40b4e6:	pop    eax
  40b4e7:	out    dx,al
  40b4e8:	nop
  40b4e9:	jno    0x40b4ed
  40b4eb:	or     bx,WORD PTR fs:[ebx-0x1aa68b89]
  40b4f3:	inc    esp
  40b4f4:	cmp    DWORD PTR [ecx],edx
  40b4f6:	sbb    BYTE PTR [ecx+eiz*4-0x461d697d],bl
  40b4fd:	out    dx,eax
  40b4fe:	mov    edi,edx
  40b500:	or     DWORD PTR [edi],edx
  40b502:	add    dh,cl
  40b504:	jae    0x40b569
  40b506:	dec    edx
  40b507:	mov    ecx,0xcf03f55f
  40b50c:	sub    BYTE PTR [edi+0x6199a230],ah
  40b512:	adc    eax,0x8bee7f33
  40b517:	or     DWORD PTR [ebx+0x6d],esi
  40b51a:	aam    0xdd
  40b51c:	pop    esp
  40b51d:	dec    eax
  40b51e:	gs pop edi
  40b520:	lahf   
  40b521:	aam    0x5e
  40b523:	pop    ecx
  40b524:	dec    edx
  40b525:	mov    bh,0x9c
  40b527:	fsub   st,st(2)
  40b529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52a:	pop    ss
  40b52b:	xchg   edi,eax
  40b52c:	mov    ecx,ds
  40b52e:	sbb    eax,0xe2e1a7e0
  40b533:	push   ds
  40b534:	sbb    BYTE PTR [eax-0x34bf1dcb],0xc3
  40b53b:	fsub   DWORD PTR [ebx+0x1]
  40b53e:	jnp    0x40b4d5
  40b540:	pop    esp
  40b541:	mov    eax,ds:0x3313ecb2
  40b546:	call   0xdbfe5ca3
  40b54b:	sbb    bl,cl
  40b54d:	dec    eax
  40b54e:	xchg   ecx,eax
  40b54f:	jbe    0x40b53d
  40b551:	ret    0xecd6
  40b554:	rcr    BYTE PTR [ebx-0x1589560e],1
  40b55a:	sahf   
  40b55b:	sbb    ecx,DWORD PTR [edx+0x18]
  40b55e:	mov    cl,0xcc
  40b560:	dec    esp
  40b561:	mov    eax,0x29c94d45
  40b566:	mov    ch,0x95
  40b568:	nop
  40b569:	pop    ds
  40b56a:	pop    ebp
  40b56b:	push   cs
  40b56c:	adc    al,0x1b
  40b56e:	js     0x40b5a1
  40b570:	and    bh,BYTE PTR [esi-0x3c]
  40b573:	xchg   esi,eax
  40b574:	adc    ebp,DWORD PTR [eax+eax*2+0x128fbe07]
  40b57b:	sbb    ah,ch
  40b57d:	jae    0x40b5ad
  40b57f:	pusha  
  40b580:	pop    ds
  40b581:	in     al,dx
  40b582:	or     dh,BYTE PTR [esi-0x2f8f74bd]
  40b588:	jmp    0x40b5f1
  40b58a:	add    BYTE PTR [esi],bl
  40b58c:	in     al,0x83
  40b58e:	xchg   DWORD PTR [eax+0x60],esi
  40b591:	repz adc BYTE PTR [ecx],0x98
  40b595:	cmp    al,0x16
  40b597:	dec    edx
  40b598:	push   ecx
  40b599:	mov    BYTE PTR [eax-0x46ba2745],0x5f
  40b5a0:	and    al,BYTE PTR [ecx]
  40b5a2:	sbb    BYTE PTR [edi-0x4d9bea86],ch
  40b5a8:	dec    ebx
  40b5a9:	jo     0x40b61b
  40b5ab:	sub    DWORD PTR [edx],0x647db207
  40b5b1:	cmp    al,0x5d
  40b5b3:	iret   
  40b5b4:	call   0xea5bec49
  40b5b9:	cmp    ah,dl
  40b5bb:	icebp  
  40b5bc:	call   0x9e8a:0xb69a023f
  40b5c3:	and    ebx,DWORD PTR [edi-0x59a84fcd]
  40b5c9:	mov    ebx,0xd7452d68
  40b5ce:	xchg   edx,eax
  40b5cf:	das    
  40b5d0:	imul   ebx,DWORD PTR [ebp+0x2c],0xffffffde
  40b5d4:	mul    BYTE PTR [eax+0x6f629bf7]
  40b5da:	push   ebp
  40b5db:	mov    ecx,0xb37b6c99
  40b5e0:	aas    
  40b5e1:	mov    ecx,0x6dbd82dc
  40b5e6:	es jo  0x40b5bb
  40b5e9:	iret   
  40b5ea:	pop    ds
  40b5eb:	sbb    DWORD PTR [edx-0x5c],ebx
  40b5ee:	mov    al,0xde
  40b5f0:	push   ebx
  40b5f1:	adc    al,0x7e
  40b5f3:	pop    ds
  40b5f4:	arpl   WORD PTR ds:0xf834aff4,dx
  40b5fa:	or     edi,eax
  40b5fc:	jns    0x40b667
  40b5fe:	xor    BYTE PTR [ebx-0x53],al
  40b601:	and    ecx,DWORD PTR [eax]
  40b603:	xchg   esp,eax
  40b604:	mov    edi,0x7c36e5c2
  40b609:	ficomp WORD PTR [ebp+0x4b5fc7ac]
  40b60f:	push   ds
  40b610:	call   FWORD PTR [esi]
  40b612:	adc    bh,BYTE PTR [edx-0x413f0bb3]
  40b618:	pop    ecx
  40b619:	xor    ecx,DWORD PTR es:[ebx+0x41561402]
  40b620:	add    DWORD PTR [ecx-0x15c60aef],ecx
  40b626:	pop    ebp
  40b627:	jecxz  0x40b5d6
  40b629:	or     al,0xe1
  40b62b:	fst    st(3)
  40b62d:	clc    
  40b62e:	and    BYTE PTR [esp+eax*1],dl
  40b631:	dec    ebp
  40b632:	jmp    0x40b655
  40b634:	das    
  40b635:	ret    0xdfdb
  40b638:	in     eax,0xba
  40b63a:	sbb    dl,BYTE PTR [ecx+0x1a]
  40b63d:	jbe    0x40b665
  40b63f:	inc    eax
  40b640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b641:	push   ebx
  40b642:	mov    eax,ds:0x7dea49d6
  40b647:	inc    edi
  40b648:	xor    DWORD PTR [edi],ebx
  40b64a:	jno    0x40b68b
  40b64c:	push   edi
  40b64d:	cli    
  40b64e:	das    
  40b64f:	test   eax,0x32b5f241
  40b654:	add    BYTE PTR [edi],ah
  40b656:	dec    ebp
  40b657:	mov    ch,0x2d
  40b659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65a:	mov    ah,0x1a
  40b65c:	add    eax,DWORD PTR [ecx-0x11]
  40b65f:	push   es
  40b660:	xchg   edx,eax
  40b661:	out    0xaf,al
  40b663:	inc    ebp
  40b664:	mov    ebp,0x33f744a
  40b669:	lods   eax,DWORD PTR ds:[esi]
  40b66a:	enter  0x1c16,0x20
  40b66e:	sub    bh,BYTE PTR [ebp+0x4f]
  40b671:	mov    bh,0xd1
  40b673:	arpl   di,si
  40b675:	sub    esi,DWORD PTR [ebp+0x7f767cfa]
  40b67b:	sbb    bl,BYTE PTR [ebx-0x70]
  40b67e:	call   0x73b0:0xde8fd99f
  40b685:	inc    ebp
  40b686:	sbb    DWORD PTR [ecx-0x75d766d],ecx
  40b68c:	dec    esi
  40b68d:	sub    BYTE PTR [esi+ebp*4-0x7aa4be3a],bh
  40b694:	outs   dx,DWORD PTR ds:[esi]
  40b695:	adc    edi,DWORD PTR [ecx+ecx*8]
  40b698:	and    ecx,ebp
  40b69a:	sbb    al,0x47
  40b69c:	mov    esp,DWORD PTR [edi+0x732d9683]
  40b6a2:	mov    al,0xf
  40b6a4:	fadd   DWORD PTR ds:0x33ad0750
  40b6aa:	mov    ch,0xf7
  40b6ac:	test   BYTE PTR [ebx+ecx*2-0x67],0x33
  40b6b1:	icebp  
  40b6b2:	loope  0x40b681
  40b6b4:	jmp    0x3e959367
  40b6b9:	icebp  
  40b6ba:	jmp    0x40b6f9
  40b6bc:	arpl   WORD PTR [eax-0x7a],cx
  40b6bf:	shl    BYTE PTR [eax],cl
  40b6c1:	cli    
  40b6c2:	int    0x3f
  40b6c4:	add    BYTE PTR [edi+0x4d00b13b],0x82
  40b6cb:	into   
  40b6cc:	jae    0x40b6f3
  40b6ce:	inc    ecx
  40b6cf:	jl     0x40b651
  40b6d1:	sub    eax,0x5de7f23
  40b6d6:	outs   dx,BYTE PTR ds:[esi]
  40b6d7:	ds aaa 
  40b6d9:	cmp    al,ah
  40b6db:	mov    WORD PTR [esi+0x44],es
  40b6de:	push   cs
  40b6df:	out    dx,eax
  40b6e0:	sub    DWORD PTR [ebx+esi*1],edi
  40b6e3:	(bad)  
  40b6e4:	sahf   
  40b6e5:	adc    al,BYTE PTR [edx-0x57ad9030]
  40b6eb:	mov    bh,BYTE PTR [ebp*8+0x91f02d2]
  40b6f2:	mov    ds:0x11ef8e35,eax
  40b6f7:	inc    edi
  40b6f8:	sub    DWORD PTR [ecx-0x65e8db65],esi
  40b6fe:	mov    eax,ds:0x9148a373
  40b703:	xor    edx,DWORD PTR [ebx]
  40b705:	pop    edi
  40b706:	mov    WORD PTR [eax+0x61],ss
  40b709:	jmp    0x40b6b4
  40b70b:	add    eax,0xae74626b
  40b710:	mov    ecx,0x8b5eac68
  40b715:	xor    dl,BYTE PTR [ebp+ebx*1-0x58]
  40b719:	rcl    BYTE PTR [eax+ebx*8],cl
  40b71c:	mul    BYTE PTR [edi]
  40b71e:	ss pop esp
  40b720:	imul   edi,DWORD PTR [ebp-0x614d9e48],0xdd25841c
  40b72a:	ds jge 0x40b71b
  40b72d:	mov    BYTE PTR [esi-0x73],dh
  40b730:	dec    edi
  40b731:	cmp    bh,BYTE PTR [esi+0x76c594d]
  40b737:	jge    0x40b79a
  40b739:	and    DWORD PTR [edi],ebp
  40b73b:	inc    edx
  40b73c:	fnstenv ds:0xea43ef2e
  40b742:	lds    ebp,FWORD PTR [edx-0x7c5c5736]
  40b748:	aaa    
  40b749:	jmp    0xc62:0x3037720f
  40b750:	jnp    0x40b73e
  40b752:	sbb    esp,DWORD PTR [ebp-0x58]
  40b755:	mov    eax,ds:0x90ed65a
  40b75a:	or     al,0xee
  40b75c:	sbb    al,0x58
  40b75e:	daa    
  40b75f:	adc    esp,ebx
  40b761:	dec    edi
  40b762:	rcr    DWORD PTR ds:0x4ce72847,0x36
  40b769:	sbb    BYTE PTR [eax],dh
  40b76b:	imul   ebx,ebp,0x2a
  40b76e:	pop    eax
  40b76f:	mov    ebp,0x2e8f3693
  40b774:	cld    
  40b775:	dec    esp
  40b776:	sub    DWORD PTR [ecx+0x27],esi
  40b779:	and    bl,BYTE PTR [eax]
  40b77b:	fs popa 
  40b77d:	leave  
  40b77e:	out    0x3a,eax
  40b780:	add    eax,0x3b9e1b44
  40b785:	cmp    ecx,DWORD PTR [esi]
  40b787:	jle    0x40b7fe
  40b789:	das    
  40b78a:	dec    edi
  40b78b:	mov    esp,DWORD PTR [edi+0x4739456d]
  40b791:	adc    edi,edi
  40b793:	cld    
  40b794:	sub    BYTE PTR [eax+ecx*4],0xf4
  40b798:	mov    ss,WORD PTR [ecx+0x66c685cb]
  40b79e:	mov    ebx,0x1937f9fe
  40b7a3:	push   ebx
  40b7a4:	push   ss
  40b7a5:	in     eax,0xa7
  40b7a7:	pop    edx
  40b7a8:	std    
  40b7a9:	push   ecx
  40b7aa:	ss js  0x40b803
  40b7ad:	mov    eax,ds:0x6d6bc2b6
  40b7b2:	fisttp WORD PTR [ecx-0x446a4682]
  40b7b8:	jo     0x40b7d5
  40b7ba:	push   cs
  40b7bb:	jle    0x40b7d6
  40b7bd:	sub    ah,BYTE PTR [ebp+0x77]
  40b7c0:	ror    ecx,cl
  40b7c2:	cmc    
  40b7c3:	ins    DWORD PTR es:[edi],dx
  40b7c4:	dec    esp
  40b7c5:	test   al,0x5b
  40b7c7:	lock popf 
  40b7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ca:	ss ins DWORD PTR es:[edi],dx
  40b7cc:	lods   al,BYTE PTR ds:[esi]
  40b7cd:	jecxz  0x40b803
  40b7cf:	addr16 ss aad 0x12
  40b7d3:	aad    0x90
  40b7d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d6:	pop    esp
  40b7d7:	sub    al,0x38
  40b7d9:	jle    0x40b822
  40b7db:	rcl    BYTE PTR [esi-0x2c],0xa9
  40b7df:	lea    esi,[eax-0x783cf950]
  40b7e5:	inc    eax
  40b7e6:	xchg   DWORD PTR [esi],ebx
  40b7e8:	faddp  st(1),st
  40b7ea:	dec    eax
  40b7eb:	push   esi
  40b7ec:	(bad)  
  40b7ed:	hlt    
  40b7ee:	inc    esp
  40b7ef:	mov    cl,0x75
  40b7f1:	cdq    
  40b7f2:	arpl   WORD PTR [esi],si
  40b7f4:	dec    eax
  40b7f5:	xchg   edx,eax
  40b7f6:	fxch   st(3)
  40b7f8:	out    0xa2,al
  40b7fa:	dec    esp
  40b7fb:	clc    
  40b7fc:	fdivr  DWORD PTR [ecx+0x3cdbfbeb]
  40b802:	lock in eax,0xdd
  40b805:	btr    DWORD PTR [ecx+0x7f60ab05],esi
  40b80c:	xchg   BYTE PTR [ecx+0x8],ch
  40b80f:	out    0x73,al
  40b811:	addr16 ret 
  40b813:	pop    edx
  40b814:	aaa    
  40b815:	lods   al,BYTE PTR ds:[esi]
  40b816:	mov    edi,0x9c32c47e
  40b81b:	enter  0x67c1,0xf5
  40b81f:	mov    fs,ax
  40b822:	(bad)
  40b825:	aaa    
  40b826:	pop    esp
  40b827:	leave  
  40b828:	adc    al,0x5b
  40b82a:	mov    ah,0x37
  40b82c:	pop    ebp
  40b82d:	add    al,0x66
  40b82f:	fsubr  QWORD PTR ss:[ebp+ebp*4-0x22]
  40b834:	mov    ebp,cr0
  40b837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b838:	lods   eax,DWORD PTR ds:[esi]
  40b839:	ins    DWORD PTR es:[edi],dx
  40b83a:	mov    ebp,0x1147ea14
  40b83f:	push   0xffffffbe
  40b841:	mov    ah,0x29
  40b843:	and    BYTE PTR [eax+ecx*2],bl
  40b846:	gs mov dl,0x48
  40b849:	jmp    0x71356e17
  40b84e:	cmp    dh,BYTE PTR [esi-0x70e3c967]
  40b854:	int3   
  40b855:	popa   
  40b856:	in     eax,0x4
  40b858:	xor    al,0xf9
  40b85a:	dec    esp
  40b85b:	sub    eax,0x7550e37c
  40b860:	in     al,dx
  40b861:	mov    ?,WORD PTR [edi+0x22c5ece9]
  40b867:	jge    0x40b831
  40b869:	mov    ah,0x30
  40b86b:	xor    ch,BYTE PTR [ebx-0x11]
  40b86e:	mov    esi,0x3789ce1a
  40b873:	xchg   ebp,eax
  40b874:	pop    edx
  40b875:	dec    ebx
  40b876:	ins    BYTE PTR es:[edi],dx
  40b877:	jb     0x40b836
  40b879:	mov    ch,0xa8
  40b87b:	add    eax,0x39e67da0
  40b880:	and    al,0xc7
  40b882:	mov    eax,ds:0xf2fdbf41
  40b887:	sub    eax,0xde9e8892
  40b88c:	daa    
  40b88d:	xchg   ecx,eax
  40b88e:	aas    
  40b88f:	push   esi
  40b890:	rcl    BYTE PTR [ebp+0x4d],0xe4
  40b894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b895:	pop    eax
  40b896:	push   edi
  40b897:	cs test eax,0x133793ff
  40b89d:	add    esp,DWORD PTR [ecx+0x53]
  40b8a0:	mov    esi,DWORD PTR [esi-0x2759167c]
  40b8a6:	xchg   edx,eax
  40b8a7:	sbb    BYTE PTR [ecx],al
  40b8a9:	rol    DWORD PTR [edi+0x62072616],cl
  40b8af:	sub    ch,BYTE PTR [ecx]
  40b8b1:	or     bl,BYTE PTR [eax+0x2ef8c56d]
  40b8b7:	ja     0x40b840
  40b8b9:	dec    ecx
  40b8ba:	mov    ah,0x11
  40b8bc:	aam    0x5f
  40b8be:	(bad)  [edi+0x599f3977]
  40b8c4:	cli    
  40b8c5:	sbb    DWORD PTR [eax-0x1a],eax
  40b8c8:	add    al,0x98
  40b8ca:	popa   
  40b8cb:	inc    esp
  40b8cc:	add    ah,cl
  40b8ce:	dec    edi
  40b8cf:	js     0x40b8bf
  40b8d1:	fidiv  DWORD PTR [ebp+0xa]
  40b8d4:	xchg   edi,eax
  40b8d5:	add    dl,BYTE PTR [eax+0x75]
  40b8d8:	fistp  WORD PTR [edx]
  40b8da:	lods   al,BYTE PTR ds:[esi]
  40b8db:	cwde   
  40b8dc:	adc    al,BYTE PTR [edi+0x22dffaba]
  40b8e2:	push   ebx
  40b8e3:	mov    ah,0xf
  40b8e5:	in     eax,0xb0
  40b8e7:	pop    edi
  40b8e8:	(bad)  
  40b8e9:	cld    
  40b8ea:	or     DWORD PTR [edi+0x53],0x44
  40b8ee:	sbb    ch,BYTE PTR [esi+0x53be120f]
  40b8f4:	scas   eax,DWORD PTR es:[edi]
  40b8f5:	jno    0x40b889
  40b8f7:	push   ds
  40b8f8:	pop    esp
  40b8f9:	or     esp,DWORD PTR [ebp-0x1100fa4d]
  40b8ff:	and    esp,DWORD PTR [ecx]
  40b901:	fiadd  DWORD PTR [ecx+0xa]
  40b904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b905:	imul   ebp,esi,0x5445603c
  40b90b:	popa   
  40b90c:	shr    BYTE PTR [esi+0x37],1
  40b90f:	lods   eax,DWORD PTR ds:[esi]
  40b910:	mov    ecx,0x7481f8e
  40b915:	cmp    DWORD PTR [edx-0x2c],esp
  40b918:	jo     0x40b8bb
  40b91a:	mov    eax,ds:0xb2ed1591
  40b91f:	or     ecx,ecx
  40b921:	call   0xc0d8db3f
  40b926:	cmp    edx,DWORD PTR [ebp+ebp*2+0x4f]
  40b92a:	mov    bh,0x7d
  40b92c:	mov    ?,WORD PTR [ebx]
  40b92e:	lock jns 0x40b8dd
  40b931:	mov    ebp,0xffbed559
  40b936:	push   eax
  40b937:	iret   
  40b938:	xor    esi,0x42
  40b93b:	add    eax,0x83d9a441
  40b940:	xor    ebx,ebp
  40b942:	jg     0x40b90a
  40b944:	mov    BYTE PTR [ebx],0x83
  40b947:	and    dl,dh
  40b949:	pushf  
  40b94a:	fist   DWORD PTR [eax]
  40b94c:	lods   eax,DWORD PTR ds:[esi]
  40b94d:	xchg   edi,eax
  40b94e:	retf   
  40b94f:	lds    esp,FWORD PTR [ebx]
  40b951:	mov    ah,BYTE PTR [ebx+0x56ddc631]
  40b957:	mov    WORD PTR [esi-0x92b5fe3],?
  40b95d:	xchg   esp,eax
  40b95e:	mov    ebx,DWORD PTR [edx]
  40b960:	cmp    ecx,DWORD PTR [ebx-0x3f]
  40b963:	stc    
  40b964:	pop    ebp
  40b965:	or     eax,0x8f794832
  40b96a:	cmp    eax,0x49b2b7d5
  40b96f:	aad    0x6
  40b971:	inc    edi
  40b972:	inc    edx
  40b973:	jmp    0xf141:0xb07d1a5f
  40b97a:	xchg   ebx,eax
  40b97b:	mov    ebx,0x20bd882f
  40b980:	stos   BYTE PTR es:[edi],al
  40b981:	sbb    BYTE PTR [eax+0x3a7fb1be],ch
  40b987:	das    
  40b988:	xor    DWORD PTR [esi+0x1bc184b3],edx
  40b98e:	fstp   TBYTE PTR [edi-0xe]
  40b991:	and    eax,0x9c1fb938
  40b996:	sub    DWORD PTR [ebx-0x80],ecx
  40b999:	inc    esp
  40b99a:	push   0x29
  40b99c:	mov    ds:0xec4035cf,eax
  40b9a1:	jecxz  0x40b9ef
  40b9a3:	add    DWORD PTR [esi+0x3c],0x3b
  40b9a7:	dec    edi
  40b9a8:	inc    ebx
  40b9a9:	and    eax,0x657f36d9
  40b9ae:	mov    ds:0xd1397531,al
  40b9b3:	fiadd  DWORD PTR [esi+eiz*2+0x6]
  40b9b7:	sbb    dh,bh
  40b9b9:	rcl    BYTE PTR [edi+0x6a],cl
  40b9bc:	mov    bl,0x6b
  40b9be:	pop    ebx
  40b9bf:	fs loope 0x40b942
  40b9c2:	dec    ecx
  40b9c3:	gs pop esp
  40b9c5:	into   
  40b9c6:	push   ss
  40b9c7:	movq   QWORD PTR [esi],mm0
  40b9ca:	add    DWORD PTR [ebp-0x55],ebp
  40b9cd:	sub    bl,BYTE PTR [ecx]
  40b9cf:	sub    eax,0x958478fa
  40b9d4:	daa    
  40b9d5:	test   al,0x66
  40b9d7:	ficom  DWORD PTR [esi+0x48444cd7]
  40b9dd:	jg     0x40b9b9
  40b9df:	push   edi
  40b9e0:	enter  0xf602,0x56
  40b9e4:	aad    0x17
  40b9e6:	adc    al,0xf4
  40b9e8:	fsub   st,st(1)
  40b9ea:	jo     0x40ba17
  40b9ec:	sar    DWORD PTR [esi+0x109a4793],0x81
  40b9f3:	xchg   edx,eax
  40b9f4:	dec    ebp
  40b9f5:	add    ebx,0xfffffffa
  40b9f8:	xchg   ebp,eax
  40b9f9:	sub    dl,BYTE PTR [edi]
  40b9fb:	icebp  
  40b9fc:	fs jns 0x40b9dc
  40b9ff:	stos   DWORD PTR es:[edi],eax
  40ba00:	mov    dl,0x63
  40ba02:	pop    es
  40ba03:	out    0xe5,al
  40ba05:	cmp    eax,0x60f0aee1
  40ba0a:	mov    eax,ds:0xa9c89d6e
  40ba0f:	add    edi,0x76e6026e
  40ba15:	dec    edi
  40ba17:	leave  
  40ba18:	adc    DWORD PTR [esi+0x7dbd7ea],eax
  40ba1e:	mov    BYTE PTR [ebx+ebp*1-0x54f0daa2],al
  40ba25:	or     ah,BYTE PTR [esi]
  40ba27:	add    DWORD PTR ss:[edi+0x60],ebx
  40ba2b:	pop    ebp
  40ba2c:	data16 or bh,dl
  40ba2f:	fwait
  40ba30:	mov    dh,0x3d
  40ba32:	retf   0x5377
  40ba35:	add    al,0xe4
  40ba37:	lahf   
  40ba38:	repnz mov bl,0x52
  40ba3b:	jecxz  0x40baba
  40ba3d:	jne    0x40ba5a
  40ba3f:	popa   
  40ba40:	lahf   
  40ba41:	inc    esp
  40ba42:	add    BYTE PTR [eax-0x735e3388],bh
  40ba48:	mov    ebx,0xccf25e13
  40ba4d:	std    
  40ba4e:	xlat   BYTE PTR es:[ebx]
  40ba50:	push   esp
  40ba51:	int3   
  40ba52:	and    eax,0x611a88c5
  40ba57:	inc    ebp
  40ba58:	sub    DWORD PTR [eax+0x3a7088fb],ecx
  40ba5e:	or     DWORD PTR [esi-0x3db19f03],esp
  40ba64:	push   cs
  40ba65:	xchg   esi,eax
  40ba66:	fild   WORD PTR [ecx+0x26]
  40ba69:	push   ss
  40ba6a:	xchg   BYTE PTR [eax+ebx*8-0x59],dh
  40ba6e:	mov    al,0x3c
  40ba70:	fcomp  QWORD PTR [eax-0x60baeb3]
  40ba76:	jl     0x40ba5f
  40ba78:	fdivr  QWORD PTR [edi]
  40ba7a:	xor    al,0x21
  40ba7c:	les    esi,FWORD PTR [edi]
  40ba7e:	sar    edx,cl
  40ba80:	xchg   ecx,eax
  40ba81:	sahf   
  40ba82:	rcr    DWORD PTR [edi],1
  40ba84:	jbe    0x40bac7
  40ba86:	add    BYTE PTR [eax+0x11],0x2a
  40ba8a:	sbb    eax,0x640dacf6
  40ba8f:	jno    0x40ba97
  40ba91:	push   ecx
  40ba92:	lods   eax,DWORD PTR ds:[esi]
  40ba93:	call   0xc590:0xfb0782d9
  40ba9a:	inc    eax
  40ba9b:	mov    eax,ds:0x2669ecd4
  40baa0:	sbb    al,BYTE PTR [ebp+ebp*8-0x5e]
  40baa4:	stos   BYTE PTR es:[edi],al
  40baa5:	fistp  DWORD PTR [edi-0xb]
  40baa8:	mov    dh,0xdc
  40baaa:	jmp    0x40ba83
  40baac:	gs pop ds
  40baae:	jmp    0x932a:0x80e6b950
  40bab5:	mov    dh,0x61
  40bab7:	xchg   esp,eax
  40bab8:	mov    ah,0x4c
  40baba:	clc    
  40babb:	mov    ebx,eax
  40babd:	mov    BYTE PTR [esp+ecx*4-0x1afb14cc],dl
  40bac4:	mov    WORD PTR es:[edx-0x2ad028f7],fs
  40bacb:	out    dx,eax
  40bacc:	gs xchg esi,eax
  40bace:	leave  
  40bacf:	dec    esi
  40bad0:	(bad)  
  40bad1:	int3   
  40bad2:	fadd   QWORD PTR [ebx-0x69]
  40bad5:	jl     0x40baca
  40bad7:	jae    0x40ba9d
  40bad9:	cdq    
  40bada:	adc    eax,0xb3191af9
  40badf:	cmc    
  40bae0:	scas   al,BYTE PTR es:[edi]
  40bae1:	xchg   edx,eax
  40bae2:	shl    BYTE PTR [edi+0x5d],1
  40bae5:	std    
  40bae6:	mov    edx,0x58444c9f
  40baeb:	add    eax,0x227de5ed
  40baf0:	mov    cl,0x24
  40baf2:	mov    dl,0xb7
  40baf4:	mov    edi,DWORD PTR [ebx+0x42]
  40baf7:	adc    BYTE PTR es:[edi+0x3fb5f01a],cl
  40bafe:	retf   0xfd30
  40bb01:	imul   eax,edi,0x79a24a37
  40bb07:	adc    bh,BYTE PTR [esi]
  40bb09:	ror    BYTE PTR [esi+ebx*2-0x65f22470],1
  40bb10:	pop    eax
  40bb11:	fcomp  DWORD PTR [edi+eax*1-0x3ede6326]
  40bb18:	out    0x9a,eax
  40bb1a:	jmp    0x8454:0x78d1e1ea
  40bb21:	jo     0xab58ea8c
  40bb27:	dec    edx
  40bb28:	aaa    
  40bb29:	adc    BYTE PTR es:[edi],ah
  40bb2c:	std    
  40bb2d:	(bad)  
  40bb2e:	enter  0xef59,0x99
  40bb32:	ret    0xf328
  40bb35:	sub    ebx,eax
  40bb37:	inc    ebp
  40bb38:	and    ah,BYTE PTR [esi]
  40bb3a:	pop    ecx
  40bb3b:	fisub  DWORD PTR [ebx-0x45]
  40bb3e:	rcl    DWORD PTR [ebp-0x3c],1
  40bb41:	mov    bl,0x70
  40bb43:	sub    eax,0xf7213728
  40bb48:	or     DWORD PTR [ebx-0x1c15c82f],edx
  40bb4e:	jo     0x40bae8
  40bb50:	mov    bl,0xad
  40bb52:	repnz sahf 
  40bb54:	test   DWORD PTR [eax+edi*4-0x53],ebp
  40bb58:	in     eax,dx
  40bb59:	add    eax,0x4dd2803f
  40bb5e:	and    DWORD PTR [edx+0x22cf5b32],0xffffffa5
  40bb65:	imul   ebp,DWORD PTR [eax],0x1b496095
  40bb6b:	adc    ecx,DWORD PTR [ebp+0x22]
  40bb6e:	sbb    DWORD PTR [edx-0x63a654fb],esi
  40bb74:	jnp    0x40bb1e
  40bb76:	(bad)  
  40bb77:	out    dx,eax
  40bb78:	test   ah,bh
  40bb7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb7b:	cmp    eax,0x571e0b53
  40bb80:	retf   0xf6cb
  40bb83:	pop    es
  40bb84:	bound  edi,QWORD PTR [edi-0x4c]
  40bb87:	mov    dh,0x7b
  40bb89:	das    
  40bb8a:	cmp    DWORD PTR [ebx+0x6d],ebp
  40bb8d:	inc    ecx
  40bb8e:	pop    ebx
  40bb8f:	inc    esi
  40bb90:	mov    ds:0xfd09167d,eax
  40bb95:	mov    ch,0x5a
  40bb97:	xchg   esp,eax
  40bb98:	push   es
  40bb99:	and    al,0xb6
  40bb9b:	cmp    ah,BYTE PTR [ebx]
  40bb9d:	int3   
  40bb9e:	xor    al,0x43
  40bba0:	mov    WORD PTR [ebx-0x30],?
  40bba3:	pop    ds
  40bba4:	dec    edi
  40bba5:	ins    BYTE PTR es:[edi],dx
  40bba6:	mov    bh,BYTE PTR [esi-0x2880f6e8]
  40bbac:	(bad)  
  40bbad:	xchg   ebp,eax
  40bbae:	iret   
  40bbaf:	and    BYTE PTR [ebp+0x6f831e02],dl
  40bbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbb6:	nop
  40bbb7:	mov    ebx,0x8e5c9f96
  40bbbc:	and    eax,0xf89a451
  40bbc1:	xchg   ecx,eax
  40bbc2:	aam    0xa0
  40bbc4:	mov    ch,0x79
  40bbc6:	or     DWORD PTR [esi-0x801d11e],edx
  40bbcc:	cmp    dl,BYTE PTR [eax+0x44]
  40bbcf:	int    0xc9
  40bbd1:	add    dl,BYTE PTR [ebp+0x38]
  40bbd4:	xchg   esp,eax
  40bbd5:	xchg   edi,eax
  40bbd6:	ficomp DWORD PTR [ebp-0x50365971]
  40bbdc:	mov    edx,0x54b09146
  40bbe1:	xor    DWORD PTR [ebx+0x6c],0xc27af9fc
  40bbe8:	pop    ebx
  40bbe9:	loopne 0x40bc30
  40bbeb:	loope  0x40bbe7
  40bbed:	(bad)  
  40bbee:	imul   eax,edi,0xffffffd3
  40bbf1:	cmp    BYTE PTR [ebp+esi*8+0x38803a83],bh
  40bbf8:	dec    edi
  40bbf9:	(bad)  
  40bbfa:	(bad)  
  40bbfb:	int3   
  40bbfc:	inc    eax
  40bbfd:	and    DWORD PTR [ebx-0x19],ebp
  40bc00:	dec    edx
  40bc01:	and    BYTE PTR [esi+0x54],ch
  40bc04:	idiv   esi
  40bc06:	stc    
  40bc07:	mov    ebx,0x5b16b699
  40bc0c:	ins    BYTE PTR es:[edi],dx
  40bc0d:	ja     0x40bc6e
  40bc0f:	mov    BYTE PTR [eax+0x97b7536],dh
  40bc15:	and    BYTE PTR [edi],cl
  40bc17:	or     ah,BYTE PTR [esi+0x0]
  40bc1a:	dec    ebp
  40bc1b:	(bad)  
  40bc1c:	xor    al,0x2d
  40bc1e:	fiadd  WORD PTR [eax+ebp*1+0x1f]
  40bc22:	cmp    ah,0xb2
  40bc25:	ds jo  0x40bbe5
  40bc28:	xor    edx,ecx
  40bc2a:	push   edx
  40bc2b:	adc    eax,0x7902b255
  40bc30:	std    
  40bc31:	jbe    0x40bc11
  40bc33:	adc    BYTE PTR [edx-0x3d0f18d7],ch
  40bc39:	fcom   QWORD PTR [ebx-0x4899e60]
  40bc3f:	loopne 0x40bc3b
  40bc41:	ins    BYTE PTR es:[edi],dx
  40bc42:	fbld   TBYTE PTR [ecx-0x24]
  40bc45:	pminsw mm1,QWORD PTR ds:0xf1f4c52e
  40bc4c:	arpl   WORD PTR [edi+ecx*1-0x35],sp
  40bc50:	aad    0xf9
  40bc52:	pop    ss
  40bc53:	pop    ebx
  40bc54:	push   ecx
  40bc55:	cmp    DWORD PTR [edi+0x3b],edi
  40bc58:	push   ss
  40bc59:	mov    esi,0x3ca2dfa1
  40bc5e:	shr    DWORD PTR [eax+0x5e9f851d],1
  40bc64:	mov    ecx,0x565197a5
  40bc69:	sbb    edx,esi
  40bc6b:	daa    
  40bc6c:	test   eax,0x221b193b
  40bc71:	push   edi
  40bc72:	js     0x40bc00
  40bc74:	dec    eax
  40bc75:	xchg   edx,eax
  40bc76:	shl    BYTE PTR [ebx],cl
  40bc78:	xor    eax,0xbdca0bdc
  40bc7d:	push   esp
  40bc7e:	ins    BYTE PTR es:[edi],dx
  40bc7f:	mov    dl,0xb6
  40bc81:	addr16 pop es
  40bc83:	push   0xfffffffd
  40bc85:	aam    0xee
  40bc87:	cmp    eax,0xdc1f2bc7
  40bc8c:	adc    esp,DWORD PTR [ebx-0x3eaaeb44]
  40bc92:	daa    
  40bc93:	pop    ebx
  40bc94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc95:	xchg   ecx,eax
  40bc96:	and    BYTE PTR [ecx-0x485a7723],cl
  40bc9c:	pop    ss
  40bc9d:	cld    
  40bc9e:	dec    ebp
  40bc9f:	xor    eax,0xcc498549
  40bca4:	popa   
  40bca5:	xchg   edx,eax
  40bca6:	mov    edx,0x8783c107
  40bcab:	push   ecx
  40bcac:	dec    ebx
  40bcad:	repnz fistp WORD PTR es:[di]
  40bcb2:	stc    
  40bcb3:	xchg   DWORD PTR [edx+ebx*8],eax
  40bcb6:	cmp    ebp,DWORD PTR [ecx-0x4e]
  40bcb9:	iret   
  40bcba:	add    al,0xde
  40bcbc:	outs   dx,BYTE PTR ds:[esi]
  40bcbd:	cmp    dh,BYTE PTR [edx+0x17d62d72]
  40bcc3:	sub    al,0xef
  40bcc5:	(bad)  [edx-0x199d819c]
  40bccb:	inc    edi
  40bccc:	mov    esi,0xc2bef133
  40bcd1:	pop    ss
  40bcd2:	sti    
  40bcd3:	imul   ebx,DWORD PTR [ecx],0x59
  40bcd6:	and    eax,0x556d536d
  40bcdb:	adc    eax,0x415e2315
  40bce0:	repnz (bad) 
  40bce4:	pop    ds
  40bce5:	fwait
  40bce6:	xchg   edx,eax
  40bce7:	mov    ebp,0x4a97f7ad
  40bcec:	loope  0x40bcf1
  40bcee:	pop    edx
  40bcef:	lds    ecx,FWORD PTR [ecx-0x62b2a9eb]
  40bcf5:	pop    esp
  40bcf6:	inc    esi
  40bcf7:	leave  
  40bcf8:	fs jae 0x40bd17
  40bcfb:	fadd   DWORD PTR [edi-0x3e]
  40bcfe:	scas   eax,DWORD PTR es:[edi]
  40bcff:	jne    0x40bd70
  40bd01:	sbb    ecx,DWORD PTR [ebx+0x55a64065]
  40bd07:	into   
  40bd08:	pop    esi
  40bd09:	xchg   esp,eax
  40bd0a:	or     eax,0xfd90ae5
  40bd0f:	jl     0x40bcaf
  40bd11:	test   BYTE PTR [ebp-0x57799fb3],al
  40bd17:	lea    ebp,[eax]
  40bd19:	pop    ebx
  40bd1a:	js     0x40bd3f
  40bd1c:	adc    al,0x62
  40bd1e:	or     ecx,DWORD PTR [esi]
  40bd20:	pop    ss
  40bd21:	stos   DWORD PTR es:[edi],eax
  40bd22:	adc    ebp,esi
  40bd24:	adc    al,0xd7
  40bd26:	pop    edx
  40bd27:	aaa    
  40bd28:	mov    ds:0xfa638196,eax
  40bd2d:	mov    ecx,gs
  40bd2f:	in     al,0x57
  40bd31:	sbb    bh,BYTE PTR [ebx-0x5d863a6f]
  40bd37:	push   esi
  40bd38:	(bad)  [edx+edi*1+0x6a]
  40bd3c:	mov    ds:0x66037328,al
  40bd41:	cmc    
  40bd42:	xor    ebx,DWORD PTR [esi-0x1b]
  40bd45:	out    0xd0,eax
  40bd47:	loope  0x40bd93
  40bd49:	in     eax,0x5e
  40bd4b:	cmc    
  40bd4c:	shl    BYTE PTR ds:0xf518fa86,0xd7
  40bd53:	xor    dl,BYTE PTR [ebx-0x64]
  40bd56:	cs xor al,0xf2
  40bd59:	ds pop ebp
  40bd5b:	lock bound ebp,QWORD PTR cs:[edx+ebx*4+0x62]
  40bd61:	xchg   edi,eax
  40bd62:	imul   esi,DWORD PTR [eax+0x31],0xffffffe5
  40bd66:	pop    esp
  40bd67:	mov    dl,0x79
  40bd69:	out    0xec,al
  40bd6b:	or     al,0x55
  40bd6d:	mov    al,0xad
  40bd6f:	out    0xb8,eax
  40bd71:	iret   
  40bd72:	pop    ds
  40bd73:	and    ah,dh
  40bd75:	jbe    0x40bd55
  40bd77:	xchg   edi,eax
  40bd78:	xchg   ecx,eax
  40bd79:	pop    ecx
  40bd7a:	jg     0x40bdf7
  40bd7c:	out    0xda,eax
  40bd7e:	adc    BYTE PTR [esi+0x59],ch
  40bd81:	mov    bp,WORD PTR [edi+0x4a5ba72d]
  40bd88:	fdiv   st(7),st
  40bd8a:	jae    0x40bd6d
  40bd8c:	xchg   ebp,eax
  40bd8d:	and    eax,0x805738b8
  40bd92:	add    ch,BYTE PTR [edi+edx*2+0x7d]
  40bd96:	popf   
  40bd97:	stc    
  40bd98:	xchg   edx,eax
  40bd99:	test   DWORD PTR [ebp+0x235dbccb],ebp
  40bd9f:	cli    
  40bda0:	bound  ecx,QWORD PTR [ebx]
  40bda2:	sbb    DWORD PTR ds:0x553ad2fc,ecx
  40bda8:	clc    
  40bda9:	jmp    0x9cf7:0x7273376b
  40bdb0:	sbb    eax,0x5d616ebb
  40bdb5:	add    al,0xa5
  40bdb7:	arpl   WORD PTR [ecx+0x26],dx
  40bdba:	ror    DWORD PTR [eax+0x6f],1
  40bdbd:	xor    BYTE PTR [edi-0x578ef858],ah
  40bdc3:	cld    
  40bdc4:	jns    0x40bda1
  40bdc6:	pop    esp
  40bdc7:	repnz adc eax,0x8f2cd41e
  40bdcd:	pop    esi
  40bdce:	push   esi
  40bdcf:	push   ebp
  40bdd0:	pop    esi
  40bdd1:	push   es
  40bdd2:	lahf   
  40bdd3:	jmp    0x40bdfc
  40bdd5:	mov    dh,0xef
  40bdd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd8:	clc    
  40bdd9:	dec    esp
  40bdda:	xor    DWORD PTR [edx+0x5f3d8bf4],eax
  40bde0:	xchg   edi,eax
  40bde1:	outs   dx,BYTE PTR ds:[esi]
  40bde2:	sbb    BYTE PTR [esp+eiz*8+0x19],ch
  40bde6:	(bad)  
  40bde7:	push   0x8c4bca32
  40bdec:	and    DWORD PTR ds:0x17f3a22,esp
  40bdf2:	jno    0x40bdfa
  40bdf4:	jp     0x40be1a
  40bdf6:	sub    BYTE PTR [bp+0x4a4a],ch
  40bdfb:	mov    al,0x36
  40bdfd:	shl    BYTE PTR ds:0x372d26c6,1
  40be03:	aas    
  40be04:	jo     0x40bd9d
  40be06:	add    ah,BYTE PTR [edx]
  40be08:	mov    edi,0xf8765a2a
  40be0d:	add    al,0xba
  40be0f:	ss shl cl,1
  40be12:	fiadd  WORD PTR ds:0xa683baf7
  40be18:	add    cl,dl
  40be1a:	xlat   BYTE PTR ds:[ebx]
  40be1b:	cwde   
  40be1c:	push   0xffffffef
  40be1e:	out    dx,al
  40be1f:	loope  0x40be41
  40be21:	push   esi
  40be22:	mov    eax,?
  40be24:	popa   
  40be25:	loope  0x40be94
  40be27:	mov    ecx,0x6850b786
  40be2c:	push   0x63
  40be2e:	pop    es
  40be2f:	push   0x5c19dcb0
  40be34:	sbb    eax,0xad440023
  40be39:	addr16 jp 0x40be6e
  40be3c:	ret    0xed2a
  40be3f:	cli    
  40be40:	mov    edx,0x86688b5d
  40be45:	pop    edx
  40be46:	ins    BYTE PTR es:[edi],dx
  40be47:	mov    eax,ds:0x2f900c05
  40be4c:	cs xchg esi,ebp
  40be4f:	outs   dx,BYTE PTR ds:[esi]
  40be50:	jne    0x40be90
  40be52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be53:	bound  ebp,QWORD PTR [ecx+0x74d1718c]
  40be59:	push   esp
  40be5a:	pop    edi
  40be5b:	shl    DWORD PTR [edi+0x2e],cl
  40be5e:	jge    0x40becb
  40be60:	psubusw mm4,QWORD PTR [ebp-0x78]
  40be64:	int    0x3a
  40be66:	or     ebx,DWORD PTR [eax+0x310e5b59]
  40be6c:	adc    cl,0x9a
  40be6f:	fisub  DWORD PTR [eax]
  40be71:	push   edi
  40be72:	adc    ah,dh
  40be74:	adc    ecx,DWORD PTR [esp+ebp*8+0x23]
  40be78:	pop    ds
  40be79:	cmp    al,dl
  40be7b:	fdiv   DWORD PTR ds:0x9b0c1888
  40be81:	cmp    eax,0x744a395a
  40be86:	ficom  DWORD PTR [edi+0x2e]
  40be89:	or     DWORD PTR [ecx-0xd],edx
  40be8c:	cmp    esi,DWORD PTR [esp+ebx*8-0x4e]
  40be90:	aas    
  40be91:	cmc    
  40be92:	lock inc eax
  40be94:	cld    
  40be95:	fwait
  40be96:	push   es
  40be97:	cmp    BYTE PTR [edi],ch
  40be99:	out    0x0,eax
  40be9b:	mov    ebp,0x7e11f9c4
  40bea0:	or     ah,BYTE PTR [ecx-0x2d]
  40bea3:	dec    ecx
  40bea4:	push   ecx
  40bea5:	mov    al,ds:0x97bca9e6
  40beaa:	inc    edi
  40beab:	ret    0xc482
  40beae:	popa   
  40beaf:	mov    dh,0xb1
  40beb1:	push   ds
  40beb2:	xchg   DWORD PTR [ebx+0x5a],eax
  40beb5:	dec    esp
  40beb6:	je     0x40bebb
  40beb8:	jb     0x40bf07
  40beba:	lds    edx,FWORD PTR [ecx-0x6fcc212a]
  40bec0:	jno    0x40bf22
  40bec2:	or     eax,0xa8e989a5
  40bec7:	div    BYTE PTR [esi+0x52]
  40beca:	dec    ecx
  40becb:	cmp    DWORD PTR ds:0x7f0ce860,edx
  40bed1:	add    ebx,DWORD PTR [eax+0x28]
  40bed4:	mov    ah,0x16
  40bed6:	call   0x241a:0x6806a879
  40bedd:	xchg   BYTE PTR [edi+0x4601fd3d],bh
  40bee3:	push   ss
  40bee4:	inc    eax
  40bee5:	retf   0xf6d1
  40bee8:	sahf   
  40bee9:	or     DWORD PTR [edi],0x662e6834
  40beef:	xchg   ebp,eax
  40bef0:	mov    al,ds:0x61900574
  40bef5:	push   ss
  40bef6:	pop    es
  40bef7:	pop    esi
  40bef8:	fld    QWORD PTR [ecx+ebp*1]
  40befb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40befc:	fldcw  WORD PTR [ebx+0x29e4b0a9]
  40bf02:	aaa    
  40bf03:	xor    BYTE PTR [esi+edx*4],bh
  40bf06:	or     BYTE PTR [ecx+0x23f4da41],dl
  40bf0c:	cld    
  40bf0d:	in     eax,0xcc
  40bf0f:	xchg   ecx,eax
  40bf10:	ror    BYTE PTR [edx-0x1f],0x64
  40bf14:	cmp    ch,BYTE PTR [eax-0x2152b730]
  40bf1a:	jmp    0x65c2603c
  40bf1f:	mov    edx,eax
  40bf21:	and    BYTE PTR [eax-0x4177a077],al
  40bf27:	lock in eax,dx
  40bf29:	jb     0x40bf7a
  40bf2b:	push   ss
  40bf2c:	mov    al,0xb4
  40bf2e:	push   ebx
  40bf2f:	sahf   
  40bf30:	fadd   st(3),st
  40bf32:	(bad)  
  40bf34:	aaa    
  40bf35:	lods   al,BYTE PTR ds:[esi]
  40bf36:	in     eax,dx
  40bf37:	xor    ebp,DWORD PTR [edi-0x4c]
  40bf3a:	cmp    edx,DWORD PTR [edi-0x2]
  40bf3d:	(bad)  
  40bf3e:	fisubr DWORD PTR [esi-0x7f]
  40bf41:	adc    eax,0xe8ef5405
  40bf46:	in     al,0x92
  40bf48:	scas   al,BYTE PTR es:[edi]
  40bf49:	dec    ecx
  40bf4a:	push   esi
  40bf4b:	idiv   DWORD PTR [eax]
  40bf4d:	adc    DWORD PTR [esi],edi
  40bf4f:	mov    ds:0x144ea3ee,al
  40bf54:	sti    
  40bf55:	das    
  40bf56:	push   edi
  40bf57:	push   ss
  40bf58:	xchg   edx,eax
  40bf59:	adc    eax,0xc17f8309
  40bf5e:	sbb    BYTE PTR [eax+0x31],bl
  40bf61:	or     al,0x59
  40bf63:	das    
  40bf64:	inc    esi
  40bf65:	adc    ebx,DWORD PTR ds:0xa85e2204
  40bf6b:	fiadd  DWORD PTR [edx+0xd]
  40bf6e:	(bad)  
  40bf6f:	je     0x40bf55
  40bf71:	jne    0x40bfc9
  40bf73:	cmp    al,0xcd
  40bf75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf76:	scas   al,BYTE PTR es:[edi]
  40bf77:	ds daa 
  40bf79:	js     0x40bfd6
  40bf7b:	sar    DWORD PTR [ebp-0xe8d7d8a],0x8
  40bf82:	jp     0x40bff9
  40bf84:	call   0xa611fe58
  40bf89:	adc    ecx,esp
  40bf8b:	ss dec ebp
  40bf8d:	lds    eax,FWORD PTR [ecx+0x17ed045]
  40bf93:	rcr    DWORD PTR gs:[eax-0x3],1
  40bf97:	outs   dx,BYTE PTR ds:[esi]
  40bf98:	and    al,0x29
  40bf9a:	loope  0x40bf9d
  40bf9c:	and    esi,eax
  40bf9e:	jmp    0x40bf51
  40bfa0:	sbb    DWORD PTR [ebp+0x3e],ebx
  40bfa3:	(bad)  
  40bfa4:	xchg   esp,eax
  40bfa5:	inc    edi
  40bfa6:	addr16 or al,0xa2
  40bfa9:	cmp    DWORD PTR cs:[esi+ebx*2+0x5371350e],eax
  40bfb1:	loopne 0x40bfc0
  40bfb3:	ret    
  40bfb4:	pop    ss
  40bfb5:	pop    ecx
  40bfb6:	pushf  
  40bfb7:	pop    ebp
  40bfb8:	repz sub al,dl
  40bfbb:	push   cs
  40bfbc:	xor    al,dl
  40bfbe:	jne    0x40bfd5
  40bfc0:	jo     0x40bf4b
  40bfc2:	aam    0x7a
  40bfc4:	mov    ebp,DWORD PTR [edi-0x2f]
  40bfc7:	jmp    0x6da81a67
  40bfcc:	push   ebx
  40bfcd:	xor    BYTE PTR [eax],0x21
  40bfd0:	into   
  40bfd1:	aad    0xd6
  40bfd3:	fs jg  0x40bfb3
  40bfd6:	pop    ecx
  40bfd7:	mov    ebp,0x8a9a5d68
  40bfdc:	xchg   edi,eax
  40bfdd:	out    dx,al
  40bfde:	shl    bh,0x48
  40bfe1:	imul   DWORD PTR [eax+0x5be4ba4f]
  40bfe7:	call   0x494bb1c7
  40bfec:	mov    edi,0x503e2555
  40bff1:	xchg   bh,ch
  40bff3:	pop    esp
  40bff4:	xchg   esi,esp
  40bff6:	push   eax
  40bff7:	icebp  
  40bff8:	mov    eax,es:0xbe35422c
  40bffe:	aam    0x85
  40c000:	or     DWORD PTR [eax+esi*2],ecx
  40c003:	outs   dx,DWORD PTR ds:[esi]
  40c004:	clc    
  40c005:	mov    edi,0x9923aa3a
  40c00a:	in     eax,dx
  40c00b:	fcom   st(7)
  40c00d:	and    DWORD PTR [eax],edx
  40c00f:	mov    eax,?
  40c011:	xchg   DWORD PTR [ebx-0x22],ecx
  40c014:	adc    dl,bl
  40c016:	rcl    DWORD PTR [ecx-0x7818b3d8],1
  40c01c:	pop    ebp
  40c01d:	jg     0x40bfd9
  40c01f:	mov    cl,0x94
  40c021:	cli    
  40c022:	mov    edx,0x5f477a90
  40c027:	or     DWORD PTR [edx-0x4a129b5d],ebp
  40c02d:	retf   0x45c4
  40c030:	sbb    edx,DWORD PTR [edi-0x36eca409]
  40c036:	repz dec ecx
  40c038:	mov    edi,0xc15aa23a
  40c03d:	xchg   esp,eax
  40c03e:	sbb    bh,BYTE PTR [ebx+edx*8]
  40c041:	iret   
  40c042:	jbe    0x40c0aa
  40c044:	jns    0x40bff7
  40c046:	sub    eax,0x78a4eab5
  40c04b:	jle    0x40c025
  40c04d:	std    
  40c04e:	sub    edi,ebx
  40c050:	fistp  QWORD PTR cs:[ebp+0x48da9fb9]
  40c057:	stos   DWORD PTR es:[edi],eax
  40c058:	cmp    eax,0x10547d04
  40c05d:	pusha  
  40c05e:	aas    
  40c05f:	push   ds
  40c060:	xchg   BYTE PTR [ebp-0x5e38853d],ah
  40c066:	bt     DWORD PTR [esi],edi
  40c069:	sbb    BYTE PTR [eax+0x62],0x4b
  40c06d:	add    BYTE PTR [eax-0x30],bh
  40c070:	add    BYTE PTR [esi],bh
  40c072:	sub    BYTE PTR [ecx],dl
  40c074:	into   
  40c075:	(bad)  
  40c076:	pop    ebx
  40c077:	clc    
  40c078:	xor    BYTE PTR [edi-0x49],ch
  40c07b:	xchg   ebx,eax
  40c07c:	jne    0x40c089
  40c07e:	test   DWORD PTR ds:0xeb17cba3,ebx
  40c084:	lds    esp,FWORD PTR [edx+0x1d2cf269]
  40c08a:	inc    ebp
  40c08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c08c:	sbb    DWORD PTR [eax-0x4a589895],esi
  40c092:	mov    cl,0xca
  40c094:	xchg   esi,eax
  40c095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c096:	loop   0x40c10b
  40c098:	repnz stos BYTE PTR es:[edi],al
  40c09a:	call   0x4282:0x4c6efa63
  40c0a1:	xor    eax,0xc9fe1f8d
  40c0a6:	fld    TBYTE PTR [ecx+ebx*2]
  40c0a9:	pusha  
  40c0aa:	xchg   ebx,eax
  40c0ab:	pop    ebx
  40c0ac:	sar    DWORD PTR [edi-0xd012eb7],cl
  40c0b2:	mov    ebx,0x695c154a
  40c0b7:	fild   QWORD PTR [edx-0x4bc22d8a]
  40c0bd:	ficomp WORD PTR [edx-0x27e38156]
  40c0c3:	cmp    DWORD PTR [esp+ecx*8+0x5cb5c39b],esp
  40c0ca:	(bad)  
  40c0cb:	cmc    
  40c0cc:	or     ebp,DWORD PTR [ebp-0x78766e38]
  40c0d2:	rcl    DWORD PTR [ecx-0x59],0x1
  40c0d6:	mov    eax,ds:0xee352df4
  40c0db:	sahf   
  40c0dc:	push   edi
  40c0dd:	in     al,dx
  40c0de:	sbb    bh,ah
  40c0e0:	repz mov edx,0x3a6bdf4b
  40c0e6:	pop    ds
  40c0e7:	jmp    0x40c158
  40c0e9:	jmp    0xb0be65a7
  40c0ee:	arpl   WORD PTR [edi],dx
  40c0f0:	xchg   edx,eax
  40c0f1:	cdq    
  40c0f2:	xchg   ebp,eax
  40c0f3:	imul   ebp,DWORD PTR [edx+edi*2+0x55],0xc517e281
  40c0fb:	fistp  DWORD PTR [ecx]
  40c0fd:	(bad)  
  40c0fe:	adc    eax,0xf5b85fae
  40c103:	sub    edi,DWORD PTR [eax-0x297118ac]
  40c109:	pop    ebp
  40c10a:	xor    al,0xe1
  40c10c:	popa   
  40c10d:	push   esi
  40c10e:	mov    al,0x2a
  40c110:	fst    DWORD PTR [edx+eax*2-0x38]
  40c114:	mov    esp,0x5e2a635c
  40c119:	push   esi
  40c11a:	jae    0x40c170
  40c11c:	and    DWORD PTR [esi],ebx
  40c11e:	push   edx
  40c11f:	nop
  40c120:	dec    ebp
  40c121:	lahf   
  40c122:	jnp    0x40c12d
  40c124:	adc    esp,DWORD PTR [esi]
  40c126:	adc    al,0x3c
  40c128:	cmp    DWORD PTR [eax],edx
  40c12a:	nop
  40c12b:	stos   DWORD PTR es:[edi],eax
  40c12c:	lods   eax,DWORD PTR ds:[esi]
  40c12d:	out    dx,al
  40c12e:	clc    
  40c12f:	dec    si
  40c131:	fmul   st(4),st
  40c133:	pop    edx
  40c134:	sbb    bl,ch
  40c136:	nop
  40c137:	xor    eax,0xf08c3136
  40c13c:	ficom  DWORD PTR [ebp+0x26661368]
  40c142:	xchg   BYTE PTR [edi+0x41],ch
  40c145:	cmp    bl,BYTE PTR [edx+0x53]
  40c148:	or     BYTE PTR [eax+0x16],bl
  40c14b:	mov    WORD PTR [edi+esi*1+0x5e],es
  40c14f:	inc    edi
  40c150:	push   ss
  40c151:	in     al,0xe2
  40c153:	shl    DWORD PTR [edx],1
  40c155:	jg     0x40c143
  40c157:	adc    ah,bh
  40c159:	mov    cl,0xab
  40c15b:	dec    ecx
  40c15c:	xor    eax,0xd2705001
  40c161:	sub    edx,DWORD PTR [edx+0x74872fec]
  40c167:	data16 jecxz 0x40c175
  40c16a:	stos   DWORD PTR es:[edi],eax
  40c16b:	and    BYTE PTR [eax+0x12],ah
  40c16e:	loope  0x40c1a2
  40c170:	add    DWORD PTR [edi+0x528a6de9],ebx
  40c176:	in     eax,0xb
  40c178:	daa    
  40c179:	inc    edi
  40c17a:	lock cs add al,0xfc
  40c17e:	sub    cl,bh
  40c180:	ja     0x40c117
  40c182:	std    
  40c183:	sub    ebx,ebp
  40c185:	stc    
  40c186:	xor    DWORD PTR [ebp-0x9],esi
  40c189:	xor    al,0xb5
  40c18b:	inc    ecx
  40c18c:	xor    DWORD PTR [edx+esi*2-0x39],0x77
  40c191:	rol    DWORD PTR [edi+0x12],0xc5
  40c195:	add    al,0x21
  40c197:	ret    0x53a2
  40c19a:	mov    es,WORD PTR [ecx+0x1e]
  40c19d:	mov    DWORD PTR [eax],esp
  40c19f:	sub    bh,BYTE PTR [ecx+0x12d0fba4]
  40c1a5:	xchg   edx,eax
  40c1a6:	pop    ss
  40c1a7:	inc    esp
  40c1a8:	int3   
  40c1a9:	out    0x5,eax
  40c1ab:	adc    al,0x7
  40c1ad:	ret    0x4e4e
  40c1b0:	or     al,0x8
  40c1b2:	cmp    BYTE PTR [ebx+0x6d105129],0x7e
  40c1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ba:	push   ds
  40c1bb:	mov    esp,esp
  40c1bd:	lahf   
  40c1be:	mov    esp,0x6bf9ba6e
  40c1c3:	into   
  40c1c4:	shl    BYTE PTR [eax],0xd1
  40c1c7:	jmp    0x91a7e620
  40c1cc:	pop    esp
  40c1cd:	clc    
  40c1ce:	repz into 
  40c1d0:	outs   dx,DWORD PTR ds:[esi]
  40c1d1:	mov    ?,WORD PTR [ebx]
  40c1d3:	(bad)  
  40c1d4:	xlat   BYTE PTR ds:[ebx]
  40c1d5:	ror    DWORD PTR [eax-0x5c],1
  40c1d8:	sbb    DWORD PTR [edi-0x17],0x50
  40c1dc:	outs   dx,DWORD PTR ds:[esi]
  40c1dd:	xchg   ebx,eax
  40c1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1df:	dec    ebp
  40c1e0:	das    
  40c1e1:	ds push cs
  40c1e3:	rol    BYTE PTR [esi+0x26],0xc3
  40c1e7:	(bad)  
  40c1e9:	cmp    cl,BYTE PTR [esi-0x3dde55cf]
  40c1ef:	inc    ebp
  40c1f0:	test   BYTE PTR [ecx-0x62],dh
  40c1f3:	out    dx,eax
  40c1f4:	xor    BYTE PTR [eax+0x60],dh
  40c1f7:	call   0xdc27fe8
  40c1fc:	sti    
  40c1fd:	push   edi
  40c1fe:	repnz pop ebp
  40c200:	dec    ebx
  40c201:	jmp    0x9f01c0b3
  40c206:	stos   DWORD PTR es:[edi],eax
  40c207:	jmp    0x957844e6
  40c20c:	xchg   DWORD PTR [ebx+0x10b89612],ebp
  40c212:	sbb    eax,0x23b92a4c
  40c217:	mov    ecx,0x3406569b
  40c21c:	cmp    al,0x8f
  40c21e:	outs   dx,DWORD PTR ds:[esi]
  40c21f:	cdq    
  40c220:	or     eax,0x3d2ed137
  40c225:	or     ebx,DWORD PTR [eax]
  40c227:	clc    
  40c228:	das    
  40c229:	leave  
  40c22a:	loopne 0x40c27e
  40c22c:	add    al,ah
  40c22e:	popa   
  40c22f:	pop    es
  40c230:	pop    esp
  40c231:	sbb    al,ch
  40c233:	imul   esp,DWORD PTR [edi-0x32],0x7c
  40c237:	adc    eax,0x6eec962
  40c23c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c23d:	aam    0xee
  40c23f:	inc    eax
  40c240:	dec    eax
  40c241:	inc    edx
  40c242:	mov    esp,0x1697f287
  40c247:	and    edi,DWORD PTR [ebx+ebx*1+0x1f]
  40c24b:	cmp    bh,BYTE PTR [ebx]
  40c24d:	scas   al,BYTE PTR es:[edi]
  40c24e:	and    BYTE PTR [edi],0x33
  40c251:	enter  0xec06,0x23
  40c255:	sbb    al,0xa3
  40c257:	mov    bh,0x11
  40c259:	rcl    BYTE PTR [eax+0x5d],0xac
  40c25d:	rcl    BYTE PTR [ecx+eiz*8-0x5c3c2b73],cl
  40c264:	mov    edi,0x1a75b577
  40c269:	fistp  QWORD PTR [ebx+esi*2]
  40c26c:	mov    dh,0x88
  40c26e:	push   ds
  40c26f:	dec    edx
  40c270:	push   0x18
  40c272:	mov    eax,0x6b531a56
  40c277:	into   
  40c278:	cmp    DWORD PTR [eax-0x10],0xc0280d0c
  40c27f:	sub    edx,DWORD PTR [edx+edx*2-0x11ec7433]
  40c286:	cld    
  40c287:	call   0x2aaa:0xb88a2156
  40c28e:	inc    ecx
  40c28f:	(bad)  [ebx+0x3fd6605b]
  40c295:	inc    edi
  40c296:	mov    cl,0x2e
  40c298:	jecxz  0x40c2da
  40c29a:	adc    al,0x4f
  40c29c:	jmp    0x8d7e:0xb878c578
  40c2a3:	imul   edi,DWORD PTR [edx+0x7],0xe0d55836
  40c2aa:	add    al,0xb7
  40c2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ad:	push   0xffffffe4
  40c2af:	cld    
  40c2b0:	mul    cl
  40c2b2:	mov    dl,BYTE PTR [esi-0x61d074d1]
  40c2b8:	shr    BYTE PTR [edi-0x12],0xc5
  40c2bc:	addr16 pusha 
  40c2be:	in     eax,dx
  40c2bf:	sub    edi,ecx
  40c2c1:	fadd   QWORD PTR [edx+0x648b2f1f]
  40c2c7:	mov    esi,0x5ae8700
  40c2cc:	mov    bh,0xcd
  40c2ce:	pop    ebx
  40c2cf:	test   BYTE PTR [ecx+0x4376e0f0],cl
  40c2d5:	test   bh,bh
  40c2d7:	call   0xc4717ef8
  40c2dc:	dec    ecx
  40c2dd:	scas   al,BYTE PTR es:[edi]
  40c2de:	xchg   esi,eax
  40c2df:	jl     0x40c32c
  40c2e1:	fwait
  40c2e2:	lods   eax,DWORD PTR ds:[esi]
  40c2e3:	inc    esp
  40c2e4:	cmp    dh,BYTE PTR [edi]
  40c2e6:	stos   BYTE PTR es:[edi],al
  40c2e7:	and    esp,DWORD PTR [eax-0x79]
  40c2ea:	add    eax,0x86d994fb
  40c2ef:	ret    
  40c2f0:	popa   
  40c2f1:	mov    al,ds:0xde8d77b1
  40c2f6:	iret   
  40c2f7:	jg     0x40c2be
  40c2f9:	mov    dl,0xaa
  40c2fb:	xchg   edx,eax
  40c2fc:	dec    ebp
  40c2fd:	push   ss
  40c2fe:	lahf   
  40c2ff:	shl    DWORD PTR [edx-0x114d39d0],0x42
  40c306:	arpl   WORD PTR ds:0x32d2e7be,bp
  40c30c:	pop    ds
  40c30d:	mov    dl,0xfd
  40c30f:	or     cl,dl
  40c311:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40c313:	ret    0x4afb
  40c316:	or     DWORD PTR [esi-0x58],esp
  40c319:	aam    0x70
  40c31b:	adc    al,0x7f
  40c31d:	ret    0xb4cb
  40c320:	adc    eax,0xf46f75cb
  40c325:	jg     0x40c2fc
  40c327:	mov    ecx,0x654be2cd
  40c32c:	sbb    DWORD PTR [ebx+ebp*8-0x92e7ded],ebx
  40c333:	pop    ebp
  40c334:	xchg   edx,eax
  40c335:	push   edi
  40c336:	pop    edx
  40c337:	repnz into 
  40c339:	ret    0xc8db
  40c33c:	je     0x40c2c5
  40c33e:	mov    eax,ds:0x3c02ee93
  40c343:	or     al,0xae
  40c345:	push   esi
  40c346:	(bad)  
  40c347:	jmp    0xb889:0xe41b8b7a
  40c34e:	dec    ebx
  40c34f:	hlt    
  40c350:	mov    ah,0x25
  40c352:	xor    al,0xc6
  40c354:	push   eax
  40c355:	fcom   DWORD PTR [edi-0x62136c85]
  40c35b:	ret    
  40c35c:	push   ebp
  40c35d:	fbld   TBYTE PTR [ecx]
  40c35f:	sbb    bh,dh
  40c361:	mov    eax,0xeb5b2db
  40c366:	push   eax
  40c367:	cmc    
  40c368:	cmp    cl,dh
  40c36a:	push   ds
  40c36b:	out    dx,eax
  40c36c:	or     ebp,DWORD PTR [ebp+0x3260e027]
  40c372:	jnp    0x40c2f9
  40c374:	sub    BYTE PTR [eax],ch
  40c376:	lahf   
  40c377:	push   0x51
  40c379:	jl     0x40c36f
  40c37b:	xor    DWORD PTR [edi],ebp
  40c37d:	or     eax,0x48e86eca
  40c382:	jo     0x40c3b6
  40c384:	cmp    ecx,DWORD PTR [ebp+0xce5a444]
  40c38a:	std    
  40c38b:	push   ebx
  40c38c:	add    eax,DWORD PTR [edx-0x5fd54130]
  40c392:	jle    0x40c3a9
  40c394:	and    eax,0xfead47ad
  40c399:	jbe    0x40c39d
  40c39b:	aas    
  40c39c:	dec    eax
  40c39d:	inc    esi
  40c39e:	pop    ecx
  40c39f:	jg     0x40c365
  40c3a1:	cmp    edx,DWORD PTR [edx+0x6c424e24]
  40c3a7:	stos   DWORD PTR es:[edi],eax
  40c3a8:	inc    ecx
  40c3a9:	push   DWORD PTR [ebx+0x646524a2]
  40c3af:	jne    0x40c417
  40c3b1:	imul   eax,DWORD PTR [edx+0x353d81f0],0x24efa1c
  40c3bb:	lock xlat BYTE PTR ds:[ebx]
  40c3bd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3bf:	rcl    BYTE PTR [ecx],cl
  40c3c1:	push   0x3768e157
  40c3c6:	xor    BYTE PTR [ebx],ah
  40c3c8:	and    eax,0x29fb12f8
  40c3cd:	inc    ecx
  40c3ce:	stos   BYTE PTR es:[edi],al
  40c3cf:	dec    edi
  40c3d0:	cmp    eax,0x557dc7f6
  40c3d5:	mov    ebx,0x5192e06c
  40c3da:	cmp    DWORD PTR [ecx-0x5eae5db7],ebp
  40c3e0:	pop    esp
  40c3e1:	lods   al,BYTE PTR ds:[esi]
  40c3e2:	adc    al,0x18
  40c3e4:	daa    
  40c3e5:	nop
  40c3e6:	cs jnp 0x40c3e4
  40c3e9:	dec    eax
  40c3ea:	dec    edx
  40c3eb:	stos   DWORD PTR es:[edi],eax
  40c3ec:	gs pop ds
  40c3ee:	pushf  
  40c3ef:	and    dl,BYTE PTR [edx]
  40c3f1:	mov    eax,0x18da66ae
  40c3f6:	mov    eax,ds:0x55e59cb7
  40c3fb:	sti    
  40c3fc:	nop
  40c3fd:	hlt    
  40c3fe:	xchg   edx,eax
  40c3ff:	xor    eax,0x699ecc8a
  40c404:	xchg   ebx,eax
  40c405:	out    0xb2,al
  40c407:	xor    BYTE PTR [ecx],0xc8
  40c40a:	aaa    
  40c40b:	arpl   WORD PTR [eax-0x2d18ad63],cx
  40c411:	push   ebx
  40c412:	adc    DWORD PTR [ebp+0x47],0x88a1805e
  40c419:	mov    bh,0x91
  40c41b:	inc    edi
  40c41c:	in     al,0x29
  40c41e:	add    eax,DWORD PTR [edi]
  40c420:	jge    0x40c440
  40c422:	mov    esp,0x5ec3301d
  40c427:	mov    dl,0x8a
  40c429:	ficomp DWORD PTR ds:0x9e77a3eb
  40c42f:	dec    edi
  40c430:	mov    dl,BYTE PTR [ebx+0x3da6490f]
  40c436:	ret    
  40c437:	push   ecx
  40c438:	jne    0x40c41b
  40c43a:	push   DWORD PTR [ebx]
  40c43c:	or     bh,bh
  40c43e:	cdq    
  40c43f:	jecxz  0x40c426
  40c441:	(bad)  
  40c442:	pusha  
  40c443:	shr    edx,1
  40c445:	add    BYTE PTR [ecx+0x53e6cea0],bh
  40c44b:	aas    
  40c44c:	or     eax,0x9440eddd
  40c451:	test   eax,0x8fab3bf8
  40c456:	call   FWORD PTR [eax-0x3a]
  40c459:	fwait
  40c45a:	or     DWORD PTR [ebx],0xe922ffc3
  40c460:	pop    ebp
  40c461:	sbb    dh,BYTE PTR ds:0xe26f46c9
  40c467:	out    0xdb,eax
  40c469:	pop    ebp
  40c46a:	das    
  40c46b:	mov    DWORD PTR [edi+0x1],edi
  40c46e:	jno    0x40c4c1
  40c470:	js     0x40c49b
  40c472:	push   0x45c7c6a0
  40c477:	pop    edi
  40c478:	jmp    0x40c48d
  40c47a:	jge    0x40c42f
  40c47c:	mov    eax,ds:0xef9ba813
  40c481:	(bad)  
  40c483:	jg     0x40c410
  40c485:	sar    dl,0x9c
  40c488:	shl    DWORD PTR [edi],1
  40c48a:	mov    bl,0x4e
  40c48c:	push   ds
  40c48d:	mov    edx,0x5d402872
  40c492:	mov    esp,0x94347f02
  40c497:	or     BYTE PTR [ebx+0x5c],al
  40c49a:	aaa    
  40c49b:	in     eax,dx
  40c49c:	push   0x1d48f073
  40c4a1:	rcl    ecx,cl
  40c4a3:	imul   DWORD PTR [edx+0x594aa5a5]
  40c4a9:	xchg   esp,eax
  40c4aa:	loope  0x40c455
  40c4ac:	ret    
  40c4ad:	mov    ds:0xe6b8adcc,eax
  40c4b2:	mov    ds:0x8bea618e,eax
  40c4b7:	pop    eax
  40c4b8:	xchg   esp,eax
  40c4b9:	or     BYTE PTR [edx],cl
  40c4bb:	(bad)  
  40c4bc:	enter  0x5005,0x17
  40c4c0:	leave  
  40c4c1:	sbb    BYTE PTR [eax+0x264d4463],dl
  40c4c7:	jae    0x40c44f
  40c4c9:	call   0x1696:0x66f5a6e2
  40c4d0:	(bad)  
  40c4d1:	addr16 inc eax
  40c4d3:	dec    edx
  40c4d4:	aad    0x19
  40c4d6:	or     al,0x5f
  40c4d8:	fnstcw WORD PTR [esi-0x67]
  40c4db:	pop    ds
  40c4dc:	sbb    ecx,DWORD PTR [edx-0x2297621d]
  40c4e2:	pusha  
  40c4e3:	idiv   BYTE PTR [esi-0x4e54f4a7]
  40c4e9:	(bad)  
  40c4ea:	iret   
  40c4eb:	jb     0x40c4f0
  40c4ed:	lds    esp,FWORD PTR ds:0x73f97e54
  40c4f3:	adc    esi,DWORD PTR [ecx]
  40c4f5:	leave  
  40c4f6:	sbb    al,0xde
  40c4f8:	mov    bh,0x2d
  40c4fa:	loopne 0x40c4db
  40c4fc:	outs   dx,DWORD PTR ds:[esi]
  40c4fd:	adc    BYTE PTR [ecx+0x26],ah
  40c500:	jle    0x40c4f2
  40c502:	sahf   
  40c503:	xor    edi,DWORD PTR [ecx-0x16]
  40c506:	xchg   eax,ecx
  40c508:	mov    eax,cr3
  40c50b:	lods   al,BYTE PTR ds:[esi]
  40c50c:	ret    
  40c50d:	pop    edi
  40c50e:	cmp    DWORD PTR [eax-0x60],esp
  40c511:	sub    BYTE PTR [eax-0x3945773e],al
  40c517:	pop    ds
  40c518:	icebp  
  40c519:	mov    ah,0x2a
  40c51b:	mov    esp,0x2d84012b
  40c520:	jge    0x40c5a1
  40c522:	out    0x51,eax
  40c524:	in     eax,0x5f
  40c526:	and    bl,dl
  40c528:	push   ebp
  40c529:	clc    
  40c52a:	mov    edi,0xf13dc57b
  40c52f:	cmc    
  40c530:	mov    BYTE PTR [edi+0x3726285d],ch
  40c536:	cmp    ebx,DWORD PTR [eax]
  40c538:	fild   QWORD PTR [edi+0x36]
  40c53b:	and    esi,0x5f
  40c53e:	jl     0x40c4c0
  40c540:	mov    esp,0x1af27536
  40c545:	ret    0x5515
  40c548:	out    dx,eax
  40c549:	aad    0xd4
  40c54b:	lds    esi,FWORD PTR [ecx+ebx*8+0x6a]
  40c54f:	cdq    
  40c550:	cmp    al,0x49
  40c552:	mov    DWORD PTR [edx],eax
  40c554:	(bad)  
  40c555:	gs jb  0x40c584
  40c558:	and    al,0x74
  40c55a:	inc    ecx
  40c55b:	xchg   ebp,eax
  40c55c:	mov    al,ds:0x17ad97fe
  40c561:	shr    BYTE PTR [ebx-0x16353648],0xd6
  40c568:	bound  ebp,QWORD PTR [esi+ebx*8]
  40c56b:	std    
  40c56c:	dec    eax
  40c56d:	jmp    0x40c567
  40c56f:	add    dh,BYTE PTR [ebx+0x23]
  40c572:	jge    0x40c569
  40c574:	jbe    0x40c5c4
  40c576:	mov    bl,dh
  40c578:	shl    BYTE PTR [ecx],1
  40c57a:	outs   dx,BYTE PTR ds:[esi]
  40c57b:	in     al,0x1b
  40c57d:	(bad)  
  40c57f:	pop    edi
  40c580:	ins    DWORD PTR es:[edi],dx
  40c581:	add    ebx,DWORD PTR [edx-0x4f6d563e]
  40c587:	push   eax
  40c588:	pushf  
  40c589:	push   esp
  40c58a:	ja     0x40c5f6
  40c58c:	push   esi
  40c58d:	sbb    ebp,DWORD PTR [esi+ebp*2-0x27]
  40c591:	cs cmp al,0xf5
  40c594:	rcl    DWORD PTR [esi+0x5b33a937],1
  40c59a:	dec    esi
  40c59b:	je     0x40c555
  40c59d:	sbb    al,0x1c
  40c59f:	mov    ebp,0x9fab1268
  40c5a4:	and    eax,0xed0f2b4a
  40c5a9:	cdq    
  40c5aa:	repz inc ebx
  40c5ac:	mov    edi,0x7b94f42c
  40c5b1:	dec    ecx
  40c5b2:	pop    ebp
  40c5b3:	ror    DWORD PTR [eax-0x3d],cl
  40c5b6:	push   esp
  40c5b7:	mov    eax,0x21509dc0
  40c5bc:	lods   al,BYTE PTR ds:[esi]
  40c5bd:	mov    al,0x9c
  40c5bf:	enter  0x883e,0x9
  40c5c3:	pop    ebx
  40c5c4:	hlt    
  40c5c5:	xor    ah,0x7d
  40c5c8:	push   esi
  40c5c9:	repz dec ecx
  40c5cb:	push   ss
  40c5cc:	jmp    0x3277ff42
  40c5d1:	add    edx,DWORD PTR [ecx]
  40c5d3:	inc    esp
  40c5d4:	lock and edx,DWORD PTR [eax]
  40c5d7:	mov    ds:0xe1d089c,eax
  40c5dc:	pusha  
  40c5dd:	mov    cl,al
  40c5df:	push   edi
  40c5e0:	and    ah,BYTE PTR [ebx+edi*2+0x64]
  40c5e4:	jmp    0x59a1:0xe94583c4
  40c5eb:	lahf   
  40c5ec:	lods   al,BYTE PTR ds:[esi]
  40c5ed:	ja     0x40c592
  40c5ef:	push   edi
  40c5f0:	xor    eax,0x83e3160a
  40c5f5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c5f7:	jp     0x40c603
  40c5f9:	add    al,0x8e
  40c5fb:	inc    esp
  40c5fc:	rcl    DWORD PTR [eax-0x51],cl
  40c5ff:	and    cl,BYTE PTR [eax]
  40c601:	in     eax,dx
  40c602:	stos   BYTE PTR es:[edi],al
  40c603:	popf   
  40c604:	cmp    esp,eax
  40c606:	cld    
  40c607:	add    DWORD PTR [esi-0x16],ebx
  40c60a:	loopne 0x40c63c
  40c60c:	pushf  
  40c60d:	adc    eax,DWORD PTR [edi+ebx*8+0x7b]
  40c611:	mov    ds:0x366aaef3,al
  40c616:	loopne 0x40c5ad
  40c618:	popf   
  40c619:	xor    DWORD PTR ds:0xba047082,ecx
  40c61f:	test   al,0x19
  40c621:	jnp    0x40c5be
  40c623:	mov    DWORD PTR [ecx],ebx
  40c625:	out    dx,al
  40c626:	mov    esi,0xcbf87fc8
  40c62b:	cmp    ecx,esp
  40c62d:	dec    esp
  40c62e:	jecxz  0x40c65d
  40c630:	ret    
  40c631:	mov    ebp,0xb1972f47
  40c636:	inc    edx
  40c637:	rol    DWORD PTR [ebp+eax*1-0x489232eb],cl
  40c63e:	adc    al,0x9
  40c640:	adc    ch,BYTE PTR [edi+ebp*1]
  40c643:	push   DWORD PTR [edi-0x12548852]
  40c649:	addr16 jbe 0x40c63d
  40c64c:	ds xor eax,0x86146676
  40c652:	jb     0x40c650
  40c654:	sbb    eax,0x4641e634
  40c659:	stos   BYTE PTR es:[edi],al
  40c65a:	int    0xcd
  40c65c:	and    eax,DWORD PTR [edx-0x6b]
  40c65f:	out    dx,ax
  40c661:	mov    al,0xfe
  40c663:	imul   edx,ebp,0x6
  40c666:	xchg   esi,eax
  40c667:	call   0xbb74:0x44860a21
  40c66e:	lock aam 0x97
  40c671:	aam    0xd2
  40c673:	pmulhuw mm4,QWORD PTR [ecx]
  40c676:	sbb    DWORD PTR [eax+0x14],0x5
  40c67a:	call   0xf7a8cdbb
  40c67f:	call   0xae4d389c
  40c684:	jecxz  0x40c60f
  40c686:	push   ecx
  40c687:	inc    ebx
  40c688:	mov    al,ds:0x94e21767
  40c68d:	jge    0x40c6d9
  40c68f:	ja     0x40c6c5
  40c691:	push   cs
  40c692:	and    edi,DWORD PTR [ebx+0x40]
  40c695:	popa   
  40c696:	repnz scas al,BYTE PTR es:[edi]
  40c698:	ja     0x40c6a7
  40c69a:	imul   eax,eax,0xffffffdb
  40c69d:	ret    
  40c69e:	jnp    0x40c68f
  40c6a0:	pop    ss
  40c6a1:	ret    0x7716
  40c6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a5:	clc    
  40c6a6:	inc    ebx
  40c6a7:	sub    ch,BYTE PTR [edi]
  40c6a9:	ror    dl,cl
  40c6ab:	inc    eax
  40c6ac:	sub    edi,DWORD PTR [ebp-0x7ec04692]
  40c6b2:	sti    
  40c6b3:	or     DWORD PTR [ebx],esi
  40c6b5:	pop    ds
  40c6b6:	or     ch,dl
  40c6b8:	pop    edi
  40c6b9:	add    al,0x3a
  40c6bb:	xor    DWORD PTR [ecx],esi
  40c6bd:	fwait
  40c6be:	xchg   edi,eax
  40c6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c1:	dec    BYTE PTR ds:0x1e44c27
  40c6c7:	pop    ebx
  40c6c8:	lods   al,BYTE PTR ds:[esi]
  40c6c9:	xchg   edx,eax
  40c6ca:	into   
  40c6cb:	push   esi
  40c6cc:	adc    DWORD PTR [edi-0x2b8722e2],0xffffff8c
  40c6d3:	push   ebx
  40c6d4:	pop    ds
  40c6d5:	cmp    ecx,edx
  40c6d7:	cld    
  40c6d8:	push   eax
  40c6d9:	pusha  
  40c6da:	aaa    
  40c6db:	xor    al,0xab
  40c6dd:	inc    esi
  40c6de:	ffreep st(0)
  40c6e0:	ds fs scas eax,DWORD PTR es:[edi]
  40c6e3:	sahf   
  40c6e4:	mov    ebx,0xfb64a819
  40c6e9:	add    ebx,DWORD PTR [edi+0x5e]
  40c6ec:	jle    0x40c754
  40c6ee:	mov    edx,0x1106c1e9
  40c6f3:	and    eax,0xe3a8ddd2
  40c6f8:	icebp  
  40c6f9:	adc    bh,BYTE PTR [eax+ebp*2]
  40c6fc:	or     dl,BYTE PTR [edx+ebx*8-0x65]
  40c700:	sub    edi,ecx
  40c702:	stos   DWORD PTR es:[edi],eax
  40c703:	imul   esp,esi,0xffffff87
  40c706:	shl    ch,1
  40c708:	push   esp
  40c709:	fwait
  40c70a:	mov    ah,0x54
  40c70c:	pop    esi
  40c70d:	jecxz  0x40c77a
  40c70f:	out    0xed,al
  40c711:	(bad)  
  40c712:	addr16 push edi
  40c714:	pop    esi
  40c715:	jo     0x40c71e
  40c717:	mov    edi,0xd645572a
  40c71c:	ins    BYTE PTR es:[edi],dx
  40c71d:	in     al,0x15
  40c71f:	mov    al,ds:0x9d1d5d7a
  40c724:	pop    eax
  40c725:	lds    esp,FWORD PTR [edi]
  40c727:	test   eax,0x6f2945ea
  40c72c:	gs jle 0x40c758
  40c72f:	xchg   edx,eax
  40c730:	mov    ds:0x873c13be,al
  40c735:	inc    edi
  40c736:	not    DWORD PTR [eax+0x2c]
  40c739:	daa    
  40c73a:	in     eax,dx
  40c73b:	fld    QWORD PTR [ecx+0x3e]
  40c73e:	push   0xd1a1307c
  40c743:	jb     0x40c712
  40c745:	inc    ecx
  40c746:	jnp    0x40c6d0
  40c748:	cmp    esp,DWORD PTR ds:[eax+0x63]
  40c74c:	aam    0x6
  40c74e:	scas   al,BYTE PTR es:[edi]
  40c74f:	stc    
  40c750:	or     BYTE PTR ds:0xbec6333b,ch
  40c756:	cmp    eax,0x4f81230b
  40c75b:	sub    dl,BYTE PTR [esi-0x2acc68da]
  40c761:	fwait
  40c762:	aad    0xa1
  40c764:	cmp    BYTE PTR [ebp+0x5c],al
  40c767:	mov    ebx,0x1080d4b3
  40c76c:	loope  0x40c77c
  40c76e:	or     DWORD PTR [esi],ecx
  40c770:	push   0x7f
  40c772:	rol    bl,0x25
  40c775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c776:	sub    eax,0xab0c83
  40c77b:	sub    DWORD PTR ds:0xdce19ab4,0x36dd2c01
  40c785:	push   ebx
  40c786:	pop    ss
  40c787:	cwde   
  40c788:	inc    ecx
  40c789:	idiv   bh
  40c78b:	dec    ecx
  40c78c:	push   cs
  40c78d:	imul   DWORD PTR [eax]
  40c78f:	and    eax,0x8de609ea
  40c794:	loopne 0x40c7a1
  40c796:	mov    si,0xfd1d
  40c79a:	or     eax,0xbd35db8c
  40c79f:	pop    edx
  40c7a0:	xor    BYTE PTR [eax],dl
  40c7a2:	in     eax,dx
  40c7a3:	add    eax,0x8ceb1eff
  40c7a8:	mov    esi,0xe8665272
  40c7ad:	and    al,0xe7
  40c7af:	mov    edx,eax
  40c7b1:	push   eax
  40c7b2:	out    0x8a,al
  40c7b4:	mov    cl,0xf5
  40c7b6:	push   edx
  40c7b7:	adc    dh,BYTE PTR ds:0x7cc1cba1
  40c7bd:	and    cl,dl
  40c7bf:	in     al,dx
  40c7c0:	xchg   ebx,eax
  40c7c1:	dec    eax
  40c7c2:	xchg   DWORD PTR [edx-0x53],ebx
  40c7c5:	push   edx
  40c7c6:	push   ebx
  40c7c7:	push   0x55
  40c7c9:	cmp    esp,DWORD PTR ds:0x7f15b00d
  40c7cf:	inc    ebp
  40c7d0:	sbb    ebx,ebx
  40c7d2:	jl     0x40c84e
  40c7d4:	or     al,0x67
  40c7d6:	xor    BYTE PTR ds:0xa888eb36,dh
  40c7dc:	test   BYTE PTR [edx+esi*4-0x68],al
  40c7e0:	call   0xf9ee:0x24e91972
  40c7e7:	inc    ebp
  40c7e8:	xchg   edi,eax
  40c7e9:	(bad)  
  40c7ea:	pop    ss
  40c7eb:	jle    0x40c7ef
  40c7ed:	and    BYTE PTR [eax],ch
  40c7ef:	ss inc esi
  40c7f1:	sbb    BYTE PTR [ebx],ch
  40c7f3:	adc    edx,DWORD PTR [ecx]
  40c7f5:	js     0x40c802
  40c7f7:	dec    eax
  40c7f8:	sub    ch,dh
  40c7fa:	or     al,0x85
  40c7fc:	cmp    BYTE PTR [ebx+0x4c1eff00],bl
  40c802:	in     al,0xef
  40c804:	sbb    edi,edi
  40c806:	imul   ecx,ecx,0x512c92ee
  40c80c:	jns    0x40c87c
  40c80e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80f:	dec    edx
  40c810:	jmp    0xd1636552
  40c815:	pop    es
  40c816:	dec    edi
  40c817:	scas   al,BYTE PTR es:[edi]
  40c818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c819:	pop    esp
  40c81a:	adc    eax,0x51258ee9
  40c81f:	fist   DWORD PTR [eax]
  40c821:	pop    eax
  40c822:	sub    DWORD PTR [ecx-0x15],esi
  40c825:	fucom  st(4)
  40c827:	mov    esp,0x3146729
  40c82c:	sub    dl,cl
  40c82e:	push   ds
  40c82f:	mov    ecx,0x5e63f5ae
  40c834:	jmp    0xe938:0x3a5eb28c
  40c83b:	fmul   DWORD PTR [ebx+ebp*4]
  40c83e:	in     al,dx
  40c83f:	or     ah,dl
  40c841:	push   es
  40c842:	test   dh,ah
  40c844:	push   ebp
  40c845:	repnz in eax,0xa7
  40c848:	ds inc eax
  40c84a:	mov    ecx,0xc2e98bb1
  40c84f:	mov    DWORD PTR [ebx],ecx
  40c851:	xchg   esi,eax
  40c852:	jg     0x40c883
  40c854:	mov    eax,ecx
  40c856:	dec    edi
  40c857:	inc    eax
  40c858:	xor    DWORD PTR [eax-0x80],0xffffff9a
  40c85c:	ficom  WORD PTR [esp+eiz*4-0x3b]
  40c860:	dec    ebp
  40c861:	jmp    0x39af4d79
  40c866:	jge    0x40c8b6
  40c868:	ins    BYTE PTR es:[edi],dx
  40c869:	inc    DWORD PTR [eax-0x299bbbd]
  40c86f:	fbstp  TBYTE PTR [edi-0x62d5f11]
  40c875:	push   ss
  40c876:	out    0x68,al
  40c878:	jnp    0x40c81f
  40c87a:	bound  esp,QWORD PTR [eax]
  40c87c:	scas   al,BYTE PTR es:[edi]
  40c87d:	adc    DWORD PTR [edx+ebx*1-0x46eee925],ebx
  40c884:	in     eax,0x8
  40c886:	add    al,0x3b
  40c888:	xchg   edi,eax
  40c889:	inc    ecx
  40c88a:	clc    
  40c88b:	call   0xf793:0x4fdbcf4f
  40c892:	or     eax,0x433010a0
  40c897:	pop    edx
  40c898:	rcr    BYTE PTR [ebp+0x55],0x3c
  40c89c:	ins    BYTE PTR es:[edi],dx
  40c89d:	and    dh,dh
  40c89f:	in     al,0xde
  40c8a1:	mov    dl,BYTE PTR [eax-0x3ca4aad2]
  40c8a7:	loop   0x40c891
  40c8a9:	xchg   esi,eax
  40c8aa:	ret    
  40c8ab:	adc    al,0x63
  40c8ad:	add    ah,BYTE PTR [edx+0x4e4867d4]
  40c8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b4:	pop    edx
  40c8b5:	xor    BYTE PTR [ecx+0x2c],ah
  40c8b8:	push   esi
  40c8b9:	cmp    dl,0x1e
  40c8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8bd:	stc    
  40c8be:	pop    ss
  40c8bf:	xor    BYTE PTR [esi+edi*4+0x1523aeaf],0x2b
  40c8c7:	add    ecx,DWORD PTR [ecx-0x4e]
  40c8ca:	jl     0x40c93e
  40c8cc:	outs   dx,DWORD PTR ds:[esi]
  40c8cd:	arpl   si,sp
  40c8cf:	push   es
  40c8d0:	pop    ecx
  40c8d1:	lea    esi,[ecx-0x1cd8e14c]
  40c8d7:	and    BYTE PTR [edi+0x2bfa09b6],dl
  40c8dd:	mov    DWORD PTR [edx-0x7b],esp
  40c8e0:	rcl    DWORD PTR [eax+0x32],1
  40c8e3:	adc    DWORD PTR [eax+0x26],esi
  40c8e6:	loope  0x40c8bc
  40c8e8:	cmp    DWORD PTR [edx+0x74b68be8],edi
  40c8ee:	adc    ecx,edx
  40c8f0:	xor    BYTE PTR [edx+0x589f79e8],ah
  40c8f6:	inc    edx
  40c8f7:	sbb    DWORD PTR [edi+eax*1+0x5d],0x4b183bdc
  40c8ff:	push   esi
  40c900:	pop    ss
  40c901:	daa    
  40c902:	xlat   BYTE PTR ds:[ebx]
  40c903:	jnp    0x40c89e
  40c905:	retf   
  40c906:	out    0x25,eax
  40c908:	jmp    0x16fb:0x46c95595
  40c90f:	(bad)  
  40c910:	loope  0x40c8b2
  40c912:	add    al,0x3f
  40c914:	(bad)  
  40c915:	push   esp
  40c916:	pop    es
  40c917:	mov    ebx,DWORD PTR [esi]
  40c919:	je     0x40c93e
  40c91b:	cmp    al,0x7c
  40c91d:	rcr    DWORD PTR [ecx+edx*2-0x49],cl
  40c921:	sub    al,0xb3
  40c923:	dec    edx
  40c924:	adc    al,0x1b
  40c926:	inc    ebx
  40c927:	sbb    al,0x26
  40c929:	or     DWORD PTR [edx+eax*1+0xa19fa2b],esp
  40c930:	or     ebx,edi
  40c932:	add    DWORD PTR [eax+0x46992b44],esi
  40c938:	push   ds
  40c939:	add    dl,BYTE PTR [esi-0x1107b66c]
  40c93f:	push   ss
  40c940:	out    dx,eax
  40c941:	sbb    BYTE PTR cs:[ecx+eax*8-0x67],dh
  40c946:	xor    edx,ebx
  40c948:	repnz dec ecx
  40c94a:	pop    ebx
  40c94b:	sbb    BYTE PTR [eax-0x2a26a6b7],al
  40c951:	push   ebp
  40c952:	ret    
  40c953:	pop    ss
  40c954:	mov    eax,ds:0xa7dd548c
  40c959:	push   0x264f169d
  40c95e:	xchg   esp,eax
  40c95f:	loope  0x40c9aa
  40c961:	mov    esi,0x82dff9a3
  40c966:	pop    ss
  40c967:	add    ah,ch
  40c969:	dec    edi
  40c96a:	sti    
  40c96b:	nop
  40c96c:	mov    BYTE PTR [edi-0x56],0x86
  40c970:	repnz push esp
  40c972:	pushf  
  40c973:	es loop 0x40c9e8
  40c976:	bound  ebx,QWORD PTR [esi-0x600a5259]
  40c97c:	push   edx
  40c97d:	inc    ecx
  40c97e:	inc    edx
  40c97f:	adc    al,0x81
  40c981:	pop    DWORD PTR [edi-0x49]
  40c984:	and    al,0x55
  40c986:	sub    ebx,DWORD PTR [esi-0x52]
  40c989:	cmp    eax,0x9458a36c
  40c98e:	inc    esp
  40c98f:	mov    ah,0x2c
  40c991:	cmp    eax,esi
  40c993:	sbb    ebx,DWORD PTR [eax]
  40c995:	out    0x3e,eax
  40c997:	das    
  40c998:	mov    ebp,0x8ca078d9
  40c99d:	sbb    al,0x85
  40c99f:	in     al,dx
  40c9a0:	imul   ebp,DWORD PTR [edi-0x3416989d],0x2e5d9607
  40c9aa:	sar    DWORD PTR [ecx],0xd9
  40c9ad:	and    eax,0x431731a2
  40c9b2:	sahf   
  40c9b3:	push   0xe6063ea7
  40c9b8:	retf   
  40c9b9:	sub    edi,DWORD PTR [ebp+0x7ebe59e4]
  40c9bf:	jae    0x40c960
  40c9c1:	xlat   BYTE PTR ds:[ebx]
  40c9c2:	mov    eax,ds:0x85305851
  40c9c7:	cmp    edi,DWORD PTR [eax]
  40c9c9:	sti    
  40c9ca:	loopne 0x40c9ac
  40c9cc:	clc    
  40c9cd:	mov    edx,0x3e48df0b
  40c9d2:	dec    eax
  40c9d3:	mov    BYTE PTR [esp+edi*2],al
  40c9d6:	iret   
  40c9d7:	and    eax,0xcfd55339
  40c9dc:	or     al,0xba
  40c9de:	es push ebp
  40c9e0:	xchg   edi,eax
  40c9e1:	call   0xac5978a4
  40c9e6:	or     al,0xb3
  40c9e8:	adc    esi,esp
  40c9ea:	test   DWORD PTR [edi+esi*4],ebx
  40c9ed:	xor    eax,0xe64acd43
  40c9f2:	sub    BYTE PTR [ecx],ah
  40c9f4:	std    
  40c9f5:	dec    ebp
  40c9f6:	push   ecx
  40c9f7:	fiadd  WORD PTR [ecx+0x3f]
  40c9fa:	pop    es
  40c9fb:	js     0x40ca0d
  40c9fd:	repnz fsub QWORD PTR [eax-0x5907865f]
  40ca04:	int3   
  40ca05:	xor    BYTE PTR [ecx-0x4842c8ee],ch
  40ca0b:	inc    eax
  40ca0c:	xchg   BYTE PTR [esi-0x42],ch
  40ca0f:	popf   
  40ca10:	(bad)  
  40ca12:	lock jne 0x40c9b8
  40ca15:	sbb    eax,0xc959914b
  40ca1a:	lods   eax,DWORD PTR ds:[esi]
  40ca1b:	add    edx,DWORD PTR ds:0x7f8ba727
  40ca21:	(bad)  
  40ca22:	sbb    DWORD PTR ss:[ecx-0xb95e243],ecx
  40ca29:	out    0xa4,eax
  40ca2b:	jns    0x40ca18
  40ca2d:	daa    
  40ca2e:	je     0x40caad
  40ca30:	add    ah,BYTE PTR [esi]
  40ca32:	dec    esi
  40ca33:	mov    edi,0x9c98795b
  40ca38:	or     ebx,esi
  40ca3a:	ds jecxz 0x40c9d0
  40ca3d:	xchg   al,bh
  40ca3f:	or     eax,0xe8b35a42
  40ca44:	xchg   BYTE PTR [edi],ah
  40ca46:	ret    
  40ca47:	inc    edi
  40ca48:	pop    edi
  40ca49:	fwait
  40ca4a:	pop    esp
  40ca4b:	bound  edx,QWORD PTR [eax-0x3e]
  40ca4e:	fs (bad) 
  40ca50:	rcr    al,0xac
  40ca53:	inc    edx
  40ca54:	clc    
  40ca55:	pop    edi
  40ca56:	pop    ebx
  40ca57:	mov    al,0x1e
  40ca59:	and    eax,DWORD PTR [ecx]
  40ca5b:	call   DWORD PTR [edi-0x67b5dfd3]
  40ca61:	jo     0x40ca61
  40ca63:	or     ecx,DWORD PTR [ebp+0x34f48163]
  40ca69:	fs pop ss
  40ca6b:	arpl   WORD PTR [ebx-0x7c],cx
  40ca6e:	es leave 
  40ca70:	sbb    bl,bh
  40ca72:	out    0xae,eax
  40ca74:	les    ebx,FWORD PTR ds:0xe4bbc21d
  40ca7a:	mov    WORD PTR [ebp-0x7fda76f8],fs
  40ca80:	test   al,0x24
  40ca82:	(bad)
  40ca85:	retf   0x34b7
  40ca88:	adc    eax,esi
  40ca8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca8b:	pop    esi
  40ca8c:	out    dx,al
  40ca8d:	in     eax,0xb8
  40ca8f:	cmp    ch,BYTE PTR [edi+0x2b]
  40ca92:	ds jp  0x40ca16
  40ca95:	cdq    
  40ca96:	(bad)  
  40ca97:	push   ebx
  40ca98:	(bad)  
  40ca99:	dec    esp
  40ca9a:	pop    esi
  40ca9b:	lds    eax,FWORD PTR [esi+0x77]
  40ca9e:	jno    0x40cb00
  40caa0:	ss je  0x40ca44
  40caa3:	ficomp WORD PTR [edx-0x35]
  40caa6:	push   ss
  40caa7:	mov    ds:0xce92b057,al
  40caac:	sub    ebx,DWORD PTR [edi+0x42]
  40caaf:	es jno 0x40ca63
  40cab2:	and    dh,BYTE PTR [eax-0x29]
  40cab5:	add    eax,0xb1eb0d8e
  40caba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cabb:	sub    al,BYTE PTR [ebp+0x47]
  40cabe:	sbb    al,ch
  40cac0:	jmp    0x9d1dc070
  40cac5:	adc    bl,BYTE PTR [edi-0x5f73615c]
  40cacb:	mov    ah,0xf3
  40cacd:	jmp    0xd2c5:0x91330e01
  40cad4:	(bad)  
  40cad5:	call   0xd9f302b3
  40cada:	push   ss
  40cadb:	and    BYTE PTR [ebx],0xd8
  40cade:	push   0x384ade17
  40cae3:	cld    
  40cae4:	mov    eax,ds:0x6c91200b
  40cae9:	repnz mov eax,ds:0xff85ca21
  40caef:	dec    esi
  40caf0:	mov    cl,0x6a
  40caf2:	or     al,0xc
  40caf4:	cld    
  40caf5:	pusha  
  40caf6:	push   ds
  40caf7:	fld    TBYTE PTR [edx-0x7bcc220]
  40cafd:	jmp    0x40cb0e
  40caff:	daa    
  40cb00:	add    DWORD PTR [ebx-0x69],esp
  40cb03:	sbb    eax,0x85986bfd
  40cb08:	lock add DWORD PTR [eax-0x4a],eax
  40cb0c:	jbe    0x40cb8d
  40cb0e:	(bad)  
  40cb0f:	mov    al,ds:0x868030dd
  40cb14:	xchg   edi,eax
  40cb15:	in     al,dx
  40cb16:	std    
  40cb17:	retf   
  40cb18:	jecxz  0x40cac0
  40cb1a:	(bad)  
  40cb1b:	push   0xffffff80
  40cb1d:	dec    DWORD PTR [esi]
  40cb1f:	loope  0x40cb03
  40cb21:	sub    dh,0xb
  40cb24:	sbb    BYTE PTR ds:0xd2804202,0x19
  40cb2b:	loopne 0x40cba0
  40cb2d:	cmp    al,0xad
  40cb2f:	push   ss
  40cb30:	mov    esi,?
  40cb32:	inc    esi
  40cb33:	mov    eax,ds:0x848e9625
  40cb38:	or     BYTE PTR [eax+0x6780e626],bl
  40cb3e:	iret   
  40cb3f:	sbb    al,0x2b
  40cb41:	jns    0x40cb90
  40cb43:	out    dx,eax
  40cb44:	dec    esi
  40cb45:	loope  0x40cba1
  40cb47:	mov    dl,0xd2
  40cb49:	xchg   edi,eax
  40cb4a:	not    dl
  40cb4c:	cwde   
  40cb4d:	popf   
  40cb4e:	sbb    edi,DWORD PTR [eax]
  40cb50:	fild   QWORD PTR [esi+0x3f3cbf9]
  40cb56:	sbb    edi,DWORD PTR [esi+0x71a0a2d0]
  40cb5c:	dec    esi
  40cb5d:	pop    ebx
  40cb5e:	aad    0x26
  40cb60:	call   0xa5b23035
  40cb65:	imul   ecx,DWORD PTR [ecx-0x2198ccc5],0xffffffc7
  40cb6c:	(bad)  
  40cb6d:	or     ch,BYTE PTR [edx+0x13f4959b]
  40cb73:	lea    edi,[ebx-0x78644558]
  40cb79:	cli    
  40cb7a:	pop    ds
  40cb7b:	data16 loop 0x40cbca
  40cb7e:	(bad)  ds:0xf7e8b257
  40cb84:	jmp    0xe6fcfa9c
  40cb89:	xor    esp,DWORD PTR [ecx-0x6e01546f]
  40cb8f:	jmp    0xbd251470
  40cb94:	xchg   ebp,eax
  40cb95:	sahf   
  40cb96:	inc    eax
  40cb97:	mov    dl,0xcb
  40cb99:	push   ebp
  40cb9a:	sbb    ebx,DWORD PTR [eax]
  40cb9c:	sbb    ecx,DWORD PTR [ebp+0x527b6cca]
  40cba2:	add    eax,0x6a199ff3
  40cba7:	aas    
  40cba8:	mov    edx,0x1d9a08e8
  40cbad:	mov    al,ds:0x3958287a
  40cbb2:	repnz xchg ebx,eax
  40cbb4:	jae    0x40cb68
  40cbb6:	es and eax,0xc507adb
  40cbbc:	xchg   ecx,eax
  40cbbd:	imul   ecx,ebx,0x83ae1ed5
  40cbc3:	xchg   DWORD PTR [edx+0x5f49b08d],ecx
  40cbc9:	adc    edi,DWORD PTR [ebx-0x7]
  40cbcc:	test   DWORD PTR [edi-0x439b848a],0x71600dc5
  40cbd6:	shl    BYTE PTR [ebp-0x52e17979],0xe4
  40cbdd:	imul   DWORD PTR [ebx]
  40cbdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe0:	add    cl,dh
  40cbe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe3:	mov    ah,dl
  40cbe5:	adc    dh,BYTE PTR [edi+0x14781015]
  40cbeb:	test   al,0x19
  40cbed:	mov    al,ds:0x61ea9563
  40cbf2:	sbb    dh,dh
  40cbf4:	jo     0x40cbb2
  40cbf6:	mov    ah,0xa
  40cbf8:	dec    eax
  40cbf9:	mov    ?,WORD PTR [ebx+ebx*8-0x3]
  40cbfd:	enter  0x72a9,0xfd
  40cc01:	dec    ebx
  40cc02:	sbb    DWORD PTR [eax],0x70
  40cc05:	ds mov bh,0xfa
  40cc08:	dec    ebp
  40cc09:	mov    ebp,0x13349f23
  40cc0e:	and    al,0xeb
  40cc10:	xchg   esp,eax
  40cc12:	jl     0x40cbc4
  40cc14:	inc    eax
  40cc15:	enter  0x4528,0x11
  40cc19:	cmp    BYTE PTR [esi+0x49],dl
  40cc1c:	test   al,0xef
  40cc1e:	js     0x40cc36
  40cc20:	icebp  
  40cc21:	sub    bl,dl
  40cc23:	push   ss
  40cc24:	lea    edi,[ebx+0x7e]
  40cc27:	ja     0x40cbbb
  40cc29:	aaa    
  40cc2a:	sub    al,BYTE PTR [esi-0xcf48c47]
  40cc30:	sub    DWORD PTR [esi-0x2d78d476],0x3220e450
  40cc3a:	ins    BYTE PTR es:[edi],dx
  40cc3b:	push   ecx
  40cc3c:	xchg   edi,eax
  40cc3d:	dec    eax
  40cc3e:	dec    eax
  40cc3f:	xor    eax,0xb8c42b05
  40cc44:	(bad)  
  40cc46:	jp     0x40cc41
  40cc48:	shl    DWORD PTR [eax*4+0x5c8b7364],0x75
  40cc50:	or     DWORD PTR [ebx],eax
  40cc52:	jae    0x40cc13
  40cc54:	test   eax,0x57669716
  40cc59:	fwait
  40cc5a:	retf   0x9f6
  40cc5d:	mov    esi,0xea13dbe4
  40cc62:	mov    al,ds:0x79d1d286
  40cc67:	cmp    DWORD PTR ds:[ebp+0x4f42115b],0x60
  40cc6f:	je     0x40cc9d
  40cc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc72:	adc    esp,DWORD PTR [edx]
  40cc74:	add    al,0xea
  40cc76:	xchg   edx,eax
  40cc77:	sar    BYTE PTR [bx],cl
  40cc7a:	sbb    ebp,DWORD PTR [eax-0x26]
  40cc7d:	stos   BYTE PTR es:[edi],al
  40cc7e:	call   0xe82e:0xeb300244
  40cc85:	cld    
  40cc86:	cmc    
  40cc87:	mul    DWORD PTR [edi+eiz*8-0x3d1707bc]
  40cc8e:	call   0x7f73:0x74519766
  40cc95:	rcl    al,cl
  40cc97:	in     eax,dx
  40cc98:	adc    BYTE PTR [edx+esi*2+0x79],cl
  40cc9c:	xor    DWORD PTR [eax],ebx
  40cc9e:	je     0x40cc60
  40cca0:	push   ebx
  40cca1:	scas   eax,DWORD PTR es:[edi]
  40cca2:	int3   
  40cca3:	sub    esp,eax
  40cca5:	and    DWORD PTR [edx+0x1a1e7c1a],edi
  40ccab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccac:	idiv   DWORD PTR [ebx+0x6f1b1476]
  40ccb2:	xor    ebx,DWORD PTR [ebp+ecx*8+0x56f34cc]
  40ccb9:	outs   dx,DWORD PTR ds:[esi]
  40ccba:	cmp    al,0x6e
  40ccbc:	retf   0x930f
  40ccbf:	push   ss
  40ccc0:	repz out dx,eax
  40ccc2:	jne    0x40cc88
  40ccc4:	add    al,0x7e
  40ccc6:	sbb    eax,0x4db5835a
  40cccb:	xor    al,0x57
  40cccd:	imul   edx,edi,0x9f8fbdd
  40ccd3:	jl     0x40cd10
  40ccd5:	cmp    esi,DWORD PTR [edi+0x56]
  40ccd8:	sub    esp,DWORD PTR [esi-0x5d55c485]
  40ccde:	and    eax,0x3fed0963
  40cce3:	mov    ch,0x59
  40cce5:	dec    esi
  40cce6:	lea    ebp,[edx-0x5e]
  40cce9:	mov    bl,0xc6
  40cceb:	(bad)  
  40cced:	shl    DWORD PTR [edi+eiz*1],cl
  40ccf0:	ret    
  40ccf1:	add    ebx,ebx
  40ccf3:	jg     0x40cd67
  40ccf5:	adc    eax,0x33951c57
  40ccfa:	xor    bl,BYTE PTR [esi]
  40ccfc:	ret    0xe757
  40ccff:	or     DWORD PTR [ecx+0x75608b96],esi
  40cd05:	outs   dx,BYTE PTR ds:[esi]
  40cd06:	mov    esp,0x44ed2caa
  40cd0b:	xor    al,0x3f
  40cd0d:	pop    es
  40cd0e:	cmp    edi,DWORD PTR [ecx+0x1b771270]
  40cd14:	daa    
  40cd15:	sti    
  40cd16:	data16 ds push bx
  40cd1a:	stos   BYTE PTR es:[edi],al
  40cd1b:	and    ebp,DWORD PTR [eax+0x2c]
  40cd1e:	mov    ah,0x19
  40cd20:	sbb    eax,0x7e604d91
  40cd25:	ror    BYTE PTR [ebp+0x3a],cl
  40cd28:	push   es
  40cd29:	in     al,0x3d
  40cd2b:	mov    eax,0x2cd4c1a7
  40cd30:	nop
  40cd31:	ds mov ch,0xa1
  40cd34:	or     al,0x72
  40cd36:	jbe    0x40ccba
  40cd38:	nop
  40cd39:	add    BYTE PTR [ebp+0x6566f0cb],0x46
  40cd40:	nop
  40cd41:	addr16 dec ebp
  40cd43:	add    BYTE PTR [edi+0x43],0x81
  40cd47:	das    
  40cd48:	jbe    0x40cd59
  40cd4a:	rol    BYTE PTR [ebx+0x5704c1c7],1
  40cd50:	rcl    DWORD PTR [edx+edx*1],1
  40cd53:	pop    ebp
  40cd54:	xor    ch,dh
  40cd56:	lods   eax,DWORD PTR ds:[esi]
  40cd57:	cdq    
  40cd58:	je     0x40ccf9
  40cd5a:	xlat   BYTE PTR ds:[ebx]
  40cd5b:	jnp    0x40cd04
  40cd5d:	cs ret 0x1db5
  40cd61:	cmp    al,0x14
  40cd63:	or     BYTE PTR [ecx+0x23],bh
  40cd66:	repnz test DWORD PTR [esi],ebp
  40cd69:	and    eax,0x5225b213
  40cd6e:	or     BYTE PTR [esi],dh
  40cd70:	call   0x792dfe3
  40cd75:	push   esp
  40cd76:	nop
  40cd77:	pusha  
  40cd78:	xlat   BYTE PTR ds:[ebx]
  40cd79:	push   ss
  40cd7a:	repnz add ah,BYTE PTR [edx+edx*8]
  40cd7e:	arpl   WORD PTR [ecx+0x3c],ax
  40cd81:	xlat   BYTE PTR ds:[ebx]
  40cd82:	pop    eax
  40cd83:	xchg   edi,eax
  40cd84:	inc    ebx
  40cd85:	fisttp DWORD PTR ds:0x4d7735b4
  40cd8b:	sub    BYTE PTR [ebp+0x785684c2],0x6e
  40cd92:	enter  0xfe9f,0xee
  40cd96:	dec    edx
  40cd97:	add    BYTE PTR [esi+eax*2+0xd396a96],bh
  40cd9e:	mov    ecx,0xb888f7ae
  40cda3:	pusha  
  40cda4:	nop    DWORD PTR [edi]
  40cda7:	iret   
  40cda8:	lods   al,BYTE PTR ds:[esi]
  40cda9:	mov    esi,0xa4338192
  40cdae:	pop    ss
  40cdaf:	imul   ebx,DWORD PTR [ecx-0x74d0659a],0xe473d75c
  40cdb9:	std    
  40cdba:	sbb    al,0xb0
  40cdbc:	pop    esp
  40cdbd:	xor    cl,BYTE PTR [esp+eiz*8]
  40cdc0:	pusha  
  40cdc1:	add    BYTE PTR ds:0x85ef5480,dh
  40cdc7:	cmp    eax,edi
  40cdc9:	sbb    BYTE PTR [ebx],al
  40cdcb:	pusha  
  40cdcc:	push   eax
  40cdcd:	jo     0x40cdd9
  40cdcf:	pop    ebp
  40cdd0:	jle    0x40cdab
  40cdd2:	push   ds
  40cdd3:	xchg   esi,eax
  40cdd4:	cmp    BYTE PTR [eax+0x71c6876a],al
  40cdda:	in     eax,0x47
  40cddc:	add    edx,esi
  40cdde:	sub    eax,0x40bb630b
  40cde3:	jb     0x40cdef
  40cde5:	stc    
  40cde6:	test   ecx,0x8cd098ce
  40cdec:	call   0x2d46:0x613c37ea
  40cdf3:	(bad)  
  40cdf4:	std    
  40cdf5:	mov    ah,0x30
  40cdf7:	mul    ebx
  40cdf9:	sub    al,0x63
  40cdfb:	out    0xdc,al
  40cdfd:	sub    al,0x86
  40cdff:	data16 mov bh,0x8b
  40ce02:	stc    
  40ce03:	pop    es
  40ce04:	mov    ecx,cs
  40ce06:	in     al,dx
  40ce07:	loop   0x40cde4
  40ce09:	js     0x40cdd4
  40ce0b:	dec    ebp
  40ce0c:	xchg   edi,eax
  40ce0d:	es pop edi
  40ce0f:	add    BYTE PTR [ebp+0x1e8180f5],al
  40ce15:	call   0xeaef:0xe32f6fb5
  40ce1c:	dec    eax
  40ce1d:	ds ins BYTE PTR es:[edi],dx
  40ce1f:	xlat   BYTE PTR ds:[ebx]
  40ce20:	cs jge 0x40cda9
  40ce23:	mov    ebp,0x10b617a7
  40ce28:	xor    eax,0x2d32601e
  40ce2d:	leave  
  40ce2e:	shr    BYTE PTR [esi],cl
  40ce30:	test   eax,0xe5ed8051
  40ce35:	xor    dl,ah
  40ce37:	cld    
  40ce38:	xchg   ah,bh
  40ce3a:	in     eax,0x88
  40ce3c:	xor    ecx,eax
  40ce3e:	fs xor cl,cl
  40ce41:	pop    ecx
  40ce42:	jg     0x40ce47
  40ce44:	sbb    DWORD PTR [ebp+0x140cb99d],0xffffff80
  40ce4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce4c:	and    DWORD PTR [ecx+0x6c],0xa45cb417
  40ce53:	pusha  
  40ce54:	leave  
  40ce55:	lds    edi,FWORD PTR [ebx-0x5dc322d5]
  40ce5b:	xchg   bh,dh
  40ce5d:	fdiv   st(0),st
  40ce5f:	cmp    ecx,DWORD PTR [edx+0x1f]
  40ce62:	mov    bh,0xf2
  40ce64:	outs   dx,DWORD PTR ds:[esi]
  40ce65:	xchg   esp,eax
  40ce66:	repz call 0xe83ce9b0
  40ce6c:	pop    esp
  40ce6d:	into   
  40ce6e:	stos   DWORD PTR es:[edi],eax
  40ce6f:	(bad)  
  40ce70:	std    
  40ce71:	push   esi
  40ce72:	push   0xffffff96
  40ce74:	popa   
  40ce75:	add    al,0xc8
  40ce77:	xor    edx,DWORD PTR [ebx+eax*4-0x452b9389]
  40ce7e:	xchg   edx,eax
  40ce7f:	jb     0x40cef5
  40ce81:	sub    eax,ebx
  40ce83:	aam    0xb3
  40ce85:	fsub   DWORD PTR [esi+eiz*2-0x7174cebe]
  40ce8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce8d:	sbb    edi,eax
  40ce8f:	sub    al,0x82
  40ce91:	mov    ebx,0xa4f15ee6
  40ce96:	neg    DWORD PTR [ebx-0x203a734d]
  40ce9c:	outs   dx,BYTE PTR ds:[esi]
  40ce9d:	fisubr WORD PTR ss:[edx-0x1d90bb89]
  40cea4:	inc    edi
  40cea5:	daa    
  40cea6:	mov    dl,0xdf
  40cea8:	in     al,dx
  40cea9:	add    eax,0x69259e42
  40ceae:	out    0x4f,eax
  40ceb0:	jne    0x40ce73
  40ceb2:	cmc    
  40ceb3:	adc    ah,al
  40ceb5:	scas   eax,DWORD PTR es:[edi]
  40ceb6:	adc    eax,0xb49aeb59
  40cebb:	jnp    0x40cefb
  40cebd:	xchg   ebx,eax
  40cebe:	and    eax,0xb2b65f37
  40cec3:	and    ah,0xe3
  40cec6:	push   eax
  40cec7:	push   ds
  40cec8:	btc    edx,0xc4
  40cecc:	sub    bx,WORD PTR [edx+ecx*1+0x11]
  40ced1:	pushf  
  40ced2:	rol    dh,1
  40ced4:	mov    di,0x698e
  40ced8:	sub    dh,0x1b
  40cedb:	add    BYTE PTR [ecx+0x2ded2a68],ah
  40cee1:	mov    edx,0xeee2d95
  40cee6:	shr    DWORD PTR [ebx+0x7f4cca6],1
  40ceec:	xchg   edi,eax
  40ceed:	adc    al,BYTE PTR [edi-0x61af6ac8]
  40cef3:	sar    DWORD PTR [ebp-0x7a],0xc3
  40cef7:	xchg   ecx,eax
  40cef8:	or     BYTE PTR [esi+0x5],al
  40cefb:	push   eax
  40cefc:	mov    ecx,0xcae7af63
  40cf01:	aam    0x24
  40cf03:	mov    eax,0xe1d02d63
  40cf08:	xchg   edx,eax
  40cf09:	sub    edx,esi
  40cf0b:	lods   eax,DWORD PTR ds:[esi]
  40cf0c:	inc    ebp
  40cf0d:	cmp    DWORD PTR [eax*8-0x78656798],ecx
  40cf14:	jp     0x40cf62
  40cf16:	mov    ecx,DWORD PTR [edx-0x7f]
  40cf19:	inc    esi
  40cf1a:	das    
  40cf1b:	loopne 0x40cec0
  40cf1d:	mov    dh,dl
  40cf1f:	mov    dh,0xa4
  40cf21:	jnp    0x40cf3e
  40cf23:	jb     0x40cf4e
  40cf25:	sub    eax,0x37bd49a8
  40cf2a:	mov    DWORD PTR [ebx],0xcc0cb273
  40cf30:	or     esp,DWORD PTR [ebx]
  40cf32:	xor    bl,BYTE PTR [esi]
  40cf34:	in     al,0x9b
  40cf36:	out    0x4e,al
  40cf38:	jmp    0x40cf8f
  40cf3a:	je     0x40cf75
  40cf3c:	(bad)  [edx-0x7]
  40cf3f:	xor    DWORD PTR [edi-0x759bc5f2],ecx
  40cf45:	sbb    ah,bl
  40cf47:	pop    ecx
  40cf48:	push   ss
  40cf49:	cdq    
  40cf4a:	mov    edi,0xb050024f
  40cf4f:	push   ebp
  40cf50:	add    ebp,DWORD PTR [ecx-0x67153ef7]
  40cf56:	fadd   DWORD PTR [ebx-0x18]
  40cf59:	ret    
  40cf5a:	sub    eax,0xa5e4a717
  40cf5f:	sbb    edx,DWORD PTR [ecx+ebx*4-0x7]
  40cf63:	fcomp  QWORD PTR [ecx-0x62]
  40cf66:	mov    eax,0x7db5bdca
  40cf6b:	dec    esi
  40cf6c:	(bad)  [edx-0x19]
  40cf6f:	fild   QWORD PTR [eax+0x19]
  40cf72:	leave  
  40cf73:	push   0xe3cc1c7d
  40cf78:	jg     0x40cf16
  40cf7a:	xchg   DWORD PTR ss:[esp+ebp*8-0x39],ecx
  40cf7f:	mov    ebp,0x630f4241
  40cf84:	pop    ss
  40cf85:	jnp    0x40cff5
  40cf87:	cwde   
  40cf88:	inc    edx
  40cf89:	mov    ebp,0x2f544df5
  40cf8e:	xor    cl,BYTE PTR [edx+0x24]
  40cf91:	jo     0x40cfd5
  40cf93:	jne    0x40cf6e
  40cf95:	adc    BYTE PTR [ebx],dh
  40cf97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf98:	mov    dl,cl
  40cf9a:	dec    ecx
  40cf9b:	out    0x57,eax
  40cf9d:	stos   BYTE PTR es:[edi],al
  40cf9e:	sub    edx,DWORD PTR [esi+0x75]
  40cfa1:	out    0xd4,eax
  40cfa3:	pop    ss
  40cfa4:	jne    0x40cfb9
  40cfa6:	dec    esi
  40cfa7:	pop    ebx
  40cfa8:	cmp    ch,BYTE PTR [edx+esi*2+0x35e06a35]
  40cfaf:	pop    ebx
  40cfb0:	retf   
  40cfb1:	jge    0x40cfdf
  40cfb3:	js     0x40cfb8
  40cfb5:	pop    edx
  40cfb6:	mov    edi,0xdf18fe63
  40cfbb:	in     al,0x94
  40cfbd:	int    0xe8
  40cfbf:	inc    ebp
  40cfc0:	cld    
  40cfc1:	jmp    0x40d038
  40cfc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfc4:	enter  0xf033,0x92
  40cfc8:	xchg   esp,eax
  40cfc9:	xlat   BYTE PTR ds:[ebx]
  40cfca:	scas   eax,DWORD PTR es:[edi]
  40cfcb:	inc    BYTE PTR [eax]
  40cfcd:	imul   edi,esp,0xffffffc4
  40cfd0:	cmc    
  40cfd1:	je     0x40d005
  40cfd3:	ins    BYTE PTR es:[edi],dx
  40cfd4:	pop    es
  40cfd5:	mul    ebx
  40cfd7:	call   0xaaa4:0xf3ece06
  40cfde:	arpl   cx,cx
  40cfe0:	cmp    dh,BYTE PTR [edx]
  40cfe2:	mov    esp,0xfa874b4d
  40cfe7:	add    BYTE PTR [edi],bh
  40cfe9:	or     eax,0xf20ba2a3
  40cfee:	popa   
  40cfef:	pop    ds
  40cff0:	jb     0x40cffc
  40cff2:	mov    ah,0x9a
  40cff4:	jno    0x40d03f
  40cff6:	sbb    al,BYTE PTR [ebx+ebx*4-0xb342001]
  40cffd:	iret   
  40cffe:	ret    
  40cfff:	cli    
  40d000:	cmp    ebp,DWORD PTR [ecx+0x18]
  40d003:	sbb    eax,0xb26c8560
  40d008:	imul   ebx,DWORD PTR [edx+0x7f],0x11
  40d00c:	mov    edi,0xf9ea6363
  40d011:	mov    edx,0x997f5942
  40d016:	test   eax,0xa810ca0c
  40d01b:	outs   dx,BYTE PTR ds:[esi]
  40d01c:	jne    0x40d096
  40d01e:	lock lds ecx,FWORD PTR [edi+0x25]
  40d022:	into   
  40d023:	or     DWORD PTR [ebx],edi
  40d025:	xchg   ebx,eax
  40d026:	xor    eax,0x9ffc0f6c
  40d02b:	outs   dx,BYTE PTR ds:[esi]
  40d02c:	push   DWORD PTR [eax-0x4e]
  40d02f:	or     edx,ebp
  40d031:	js     0x40d05c
  40d033:	push   ebx
  40d034:	iret   
  40d035:	cmc    
  40d036:	cmc    
  40d037:	call   0x46114226
  40d03c:	les    edi,FWORD PTR [edx-0x11]
  40d03f:	fild   WORD PTR [ecx]
  40d041:	push   0x3f
  40d043:	push   esi
  40d044:	cmp    eax,0x603f2263
  40d049:	in     eax,dx
  40d04a:	outs   dx,BYTE PTR ds:[esi]
  40d04b:	bound  edx,QWORD PTR [edx+0x2c]
  40d04e:	and    eax,0xb8e6c507
  40d053:	mov    ebp,DWORD PTR ds:0xe698cb4a
  40d059:	cmp    BYTE PTR es:[eax],bl
  40d05c:	mov    dl,0x68
  40d05e:	jp     0x40d06d
  40d060:	push   0x13f30121
  40d065:	je     0x40d0df
  40d067:	je     0x40d0dc
  40d069:	and    ah,cl
  40d06b:	iret   
  40d06c:	sub    BYTE PTR [ecx-0x3832531b],cl
  40d072:	or     ch,0xe2
  40d075:	add    al,0xe6
  40d077:	pop    DWORD PTR ds:0x49d8ea77
  40d07d:	sbb    cl,cl
  40d07f:	aas    
  40d080:	add    DWORD PTR [eax+0x611f3c25],ecx
  40d086:	xchg   ecx,eax
  40d087:	cmp    cl,BYTE PTR cs:[edi-0xb42e356]
  40d08e:	ss aam 0x4e
  40d091:	sub    eax,0xdd29293f
  40d096:	call   0x8c8d3838
  40d09b:	fmul   QWORD PTR ds:0xd9084cb
  40d0a1:	jo     0x40d0c0
  40d0a3:	mov    ecx,0x9cbd5b26
  40d0a8:	clc    
  40d0a9:	sbb    al,0xc4
  40d0ab:	loop   0x40d0f2
  40d0ad:	xor    bl,BYTE PTR [ebx-0x2649012d]
  40d0b3:	mov    ebx,0x234e10f9
  40d0b8:	mov    DWORD PTR [edi-0x70b834b7],esi
  40d0be:	pop    edx
  40d0bf:	mov    ebx,esp
  40d0c1:	or     al,BYTE PTR [edx]
  40d0c3:	in     al,dx
  40d0c4:	push   edx
  40d0c5:	jno    0x40d0e9
  40d0c7:	add    ah,al
  40d0c9:	inc    ecx
  40d0ca:	jb     0x40d069
  40d0cc:	and    eax,0x3e3eb47a
  40d0d1:	adc    bl,BYTE PTR [edi-0x48f60b82]
  40d0d7:	mov    ebp,0xce50e80c
  40d0dc:	dec    esi
  40d0dd:	test   DWORD PTR [ecx],ecx
  40d0df:	out    dx,al
  40d0e0:	es iret 
  40d0e2:	add    esi,DWORD PTR [edx]
  40d0e4:	popa   
  40d0e5:	iret   
  40d0e6:	add    ebp,DWORD PTR [ebx-0x2e410e3e]
  40d0ec:	nop
  40d0ed:	adc    esp,DWORD PTR [edx+ecx*8]
  40d0f0:	sahf   
  40d0f1:	pop    ebx
  40d0f3:	add    DWORD PTR [edi-0x4fdd1b9c],edi
  40d0f9:	push   ebx
  40d0fa:	loop   0x40d0b1
  40d0fc:	jmp    0x8505:0x5fe19084
  40d103:	(bad)  
  40d104:	cld    
  40d105:	cmp    eax,0x40b497b6
  40d10a:	dec    esi
  40d10b:	sar    edi,cl
  40d10d:	inc    edi
  40d10e:	inc    ecx
  40d10f:	lock pop esi
  40d111:	cmp    al,0x4e
  40d113:	cmp    al,bh
  40d115:	mov    cl,0x51
  40d117:	outs   dx,BYTE PTR ds:[esi]
  40d118:	retf   
  40d119:	fisubr WORD PTR [edx+0x25]
  40d11c:	iret   
  40d11d:	cmp    dh,cl
  40d11f:	(bad)  
  40d120:	sbb    eax,DWORD PTR [ebx]
  40d122:	ret    0x4f4e
  40d125:	push   esi
  40d126:	out    dx,eax
  40d127:	gs xchg edi,eax
  40d129:	rcr    BYTE PTR [ecx+0x30d6656d],cl
  40d12f:	adc    ecx,esp
  40d131:	(bad)  
  40d132:	fcomp  DWORD PTR [ebp-0xb]
  40d135:	push   esp
  40d136:	adc    ah,cl
  40d138:	sub    edx,DWORD PTR [edx]
  40d13a:	mov    ds:0x9e242564,eax
  40d13f:	(bad)  
  40d140:	out    dx,eax
  40d141:	xchg   esp,eax
  40d142:	mov    ebp,0x934ef16d
  40d147:	inc    esp
  40d148:	out    0xab,al
  40d14a:	out    dx,eax
  40d14b:	outs   dx,BYTE PTR ds:[esi]
  40d14c:	xchg   ebp,eax
  40d14d:	adc    esi,DWORD PTR [ebx]
  40d14f:	or     eax,0x54a4e137
  40d154:	fld    TBYTE PTR [edi-0x31]
  40d157:	jnp    0x40d165
  40d159:	adc    ebp,DWORD PTR [edi-0x3d]
  40d15c:	or     DWORD PTR [eax],eax
  40d15e:	aaa    
  40d15f:	popf   
  40d160:	add    ebx,DWORD PTR [ecx-0x468791eb]
  40d166:	idiv   BYTE PTR [eax-0x17cc1db9]
  40d16c:	cmc    
  40d16d:	sbb    ah,BYTE PTR [ebx+edi*8]
  40d170:	pop    esi
  40d171:	sub    eax,0x16babb52
  40d176:	pop    edx
  40d177:	adc    esi,DWORD PTR [esi+0x5d]
  40d17a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d17b:	xchg   esi,eax
  40d17c:	rol    DWORD PTR [ecx+ebx*1-0x56d90b4d],cl
  40d183:	out    0x60,eax
  40d185:	xchg   ecx,eax
  40d186:	xchg   esi,eax
  40d187:	pop    eax
  40d188:	inc    ebx
  40d189:	cmp    ah,bl
  40d18b:	aaa    
  40d18c:	or     al,0xa8
  40d18e:	mov    esp,ds
  40d190:	call   0x881a8ac7
  40d195:	xor    BYTE PTR [ebp-0x4d22f010],ah
  40d19b:	hlt    
  40d19c:	pop    es
  40d19d:	inc    eax
  40d19e:	sahf   
  40d19f:	pop    ebp
  40d1a0:	or     eax,0x750c9214
  40d1a5:	mov    dh,0xd3
  40d1a7:	push   0x1e
  40d1a9:	or     DWORD PTR [ecx],eax
  40d1ab:	stos   BYTE PTR es:[edi],al
  40d1ac:	and    bh,BYTE PTR [esi]
  40d1ae:	aaa    
  40d1af:	shl    BYTE PTR [ebx+eax*4],0x43
  40d1b3:	xor    cl,dh
  40d1b5:	call   0xfc53:0xc8138939
  40d1bc:	adc    DWORD PTR [ebx-0x612c8e91],0xbf5b0aa9
  40d1c6:	add    edi,ebx
  40d1c8:	fiadd  DWORD PTR [ebp-0x59]
  40d1cb:	inc    ebx
  40d1cc:	cmp    eax,esp
  40d1ce:	mov    bl,0x91
  40d1d0:	daa    
  40d1d1:	add    DWORD PTR [eax+0xd52b557],esi
  40d1d7:	(bad)  
  40d1d8:	fwait
  40d1d9:	in     eax,dx
  40d1da:	arpl   WORD PTR [edi+0x765ff74a],bx
  40d1e0:	inc    ebx
  40d1e2:	repz adc BYTE PTR [ebp+0x55],ch
  40d1e6:	fsub   DWORD PTR ds:[edi]
  40d1e9:	inc    ecx
  40d1ea:	pusha  
  40d1eb:	sbb    esp,ebp
  40d1ed:	push   esp
  40d1ee:	or     al,0x63
  40d1f0:	jge    0x40d197
  40d1f2:	mov    bl,0xb
  40d1f4:	adc    DWORD PTR [ebx+0x2c],edx
  40d1f7:	cmp    DWORD PTR [ecx+ecx*1-0x47],edx
  40d1fb:	cmp    al,0x90
  40d1fd:	cmp    BYTE PTR ds:0xcbaa4666,cl
  40d203:	ds inc eax
  40d205:	popf   
  40d206:	xchg   BYTE PTR [edx+0x1d41e27e],bl
  40d20c:	mov    dl,0xc3
  40d20e:	nop
  40d20f:	test   al,0xaa
  40d211:	clc    
  40d212:	jnp    0x40d26c
  40d214:	xchg   esp,edi
  40d216:	sbb    eax,0x82e72017
  40d21b:	shl    dl,1
  40d21d:	pop    edx
  40d21e:	retf   
  40d21f:	adc    edx,DWORD PTR [edx-0x425e907d]
  40d225:	inc    eax
  40d226:	sbb    al,0xcb
  40d228:	ins    BYTE PTR es:[edi],dx
  40d229:	xchg   edi,eax
  40d22a:	in     eax,dx
  40d22b:	pop    eax
  40d22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22d:	daa    
  40d22e:	dec    edx
  40d22f:	aaa    
  40d230:	int    0x7f
  40d232:	sub    al,0x9f
  40d234:	pushf  
  40d235:	push   cs
  40d236:	(bad)  
  40d237:	iret   
  40d238:	mov    esp,0xb7f3e35
  40d23d:	aaa    
  40d23e:	mov    bh,0xe1
  40d240:	and    al,bh
  40d242:	push   esp
  40d243:	sub    edi,0x6a03c6f9
  40d249:	sbb    eax,0xbc6d1d4e
  40d24e:	in     eax,dx
  40d24f:	gs or  eax,0x89dd010f
  40d255:	pusha  
  40d256:	pop    ds
  40d257:	ds shl esi,cl
  40d25a:	xchg   ebx,eax
  40d25b:	in     al,0x6
  40d25d:	dec    ecx
  40d25e:	pop    edi
  40d25f:	add    ch,ah
  40d261:	fmul   QWORD PTR [edx+0x7b]
  40d264:	test   al,0x7d
  40d266:	test   DWORD PTR [ebp-0x47],0x6552beb2
  40d26d:	add    al,0x82
  40d26f:	mov    ch,0x91
  40d271:	mov    ah,0x62
  40d273:	lea    ecx,[ecx+edx*1+0x3272f8]
  40d27a:	cmp    ecx,eax
  40d27c:	jne    0x408ae2
  40d282:	mov    eax,DWORD PTR [ebp-0x4]
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     ah,BYTE PTR [edi]
  40d2a9:	add    bh,BYTE PTR [edi+esi*1+0x2f]
  40d2ad:	sub    edi,DWORD PTR [ebx+0x7b]
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	leave  
  40d2b5:	xor    bh,BYTE PTR [ebx-0x23995346]
  40d2bb:	fiadd  WORD PTR [ebp-0x4b]
  40d2be:	jnp    0x40d285
  40d2c0:	adc    al,0xb8
  40d2c2:	lds    ebp,FWORD PTR [ecx+0x7ecd1021]
  40d2c8:	into   
  40d2c9:	xor    bl,BYTE PTR [ecx+0x5e530763]
  40d2cf:	shl    edi,cl
  40d2d1:	adc    BYTE PTR [ecx-0x75],dh
  40d2d4:	dec    edx
  40d2d5:	add    BYTE PTR [ebx-0x3b7aa875],ch
  40d2db:	data16 adc al,0x52
  40d2de:	adc    bl,ch
  40d2e0:	dec    edi
  40d2e1:	adc    DWORD PTR [edi],esi
  40d2e3:	mov    esp,0x8e47a460
  40d2e8:	(bad)  
  40d2e9:	(bad)  
  40d2ea:	add    edx,DWORD PTR [esi-0x5c2ce008]
  40d2f0:	aas    
  40d2f1:	ret    
  40d2f2:	jmp    DWORD PTR [edx+0x626ce6e6]
  40d2f8:	inc    ecx
  40d2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2fa:	add    ah,cl
  40d2fc:	mov    cl,0x65
  40d2fe:	xchg   ebx,eax
  40d2ff:	mov    bl,0xcc
  40d301:	xchg   ebp,eax
  40d302:	in     al,dx
  40d303:	int    0x5e
  40d305:	js     0x40d36c
  40d307:	aad    0xd8
  40d309:	pop    ebp
  40d30a:	cmp    cl,BYTE PTR [eax]
  40d30c:	jmp    0x40d358
  40d30e:	dec    ebx
  40d30f:	arpl   di,bp
  40d311:	lods   eax,DWORD PTR ds:[esi]
  40d312:	push   ebx
  40d313:	ss xchg esp,eax
  40d315:	pushf  
  40d316:	adc    al,0xe9
  40d318:	sub    BYTE PTR [ebp+0x11],bh
  40d31b:	mov    ah,dl
  40d31d:	sbb    eax,0xeafe1bd2
  40d322:	cmp    al,0xea
  40d324:	es call 0xec2d1ed2
  40d32a:	sbb    al,dh
  40d32c:	cmp    eax,0x2dcda6b5
  40d331:	aas    
  40d332:	or     eax,edi
  40d334:	fisub  WORD PTR [eax-0x297a7a01]
  40d33a:	fs pop ds
  40d33c:	jmp    0x6717:0x68a66fd
  40d343:	jl     0x40d301
  40d345:	and    edi,DWORD PTR ds:0x7b25681f
  40d34b:	pop    ebp
  40d34c:	data16 (bad) 
  40d34e:	sbb    eax,0xd9c8463b
  40d353:	xor    al,ch
  40d355:	out    0xdb,al
  40d357:	inc    ebp
  40d358:	test   ah,0xef
  40d35b:	or     eax,0xe533bb25
  40d360:	mov    DWORD PTR [edi-0xf],esp
  40d363:	aam    0x96
  40d365:	outs   dx,BYTE PTR ds:[esi]
  40d366:	xor    DWORD PTR [ecx+0x5444f79a],0xffffffeb
  40d36d:	dec    ecx
  40d36e:	mov    al,0x76
  40d370:	mov    ebp,0xeacbea12
  40d375:	lahf   
  40d376:	loopne 0x40d392
  40d378:	fadd   QWORD PTR [ebx+ebp*4-0x790900d6]
  40d37f:	add    eax,0xe63ba84
  40d384:	mov    ch,0x16
  40d386:	(bad)  
  40d387:	jecxz  0x40d37a
  40d389:	dec    ebp
  40d38a:	xchg   ecx,eax
  40d38b:	aas    
  40d38c:	aad    0x64
  40d38e:	sbb    bh,bh
  40d390:	dec    ecx
  40d391:	mov    bl,0x22
  40d393:	add    DWORD PTR [ebx+0x64371b50],edx
  40d399:	inc    ecx
  40d39a:	in     eax,dx
  40d39b:	push   esp
  40d39c:	int3   
  40d39d:	imul   eax,edi,0xffffffb1
  40d3a0:	sti    
  40d3a1:	test   eax,0xe4a57412
  40d3a6:	push   0xffffffc8
  40d3a8:	add    edi,esp
  40d3aa:	add    eax,0x8100536d
  40d3af:	push   cs
  40d3b0:	pop    ebx
  40d3b1:	in     eax,dx
  40d3b2:	mov    ebx,edx
  40d3b4:	xchg   WORD PTR [edi-0x3410746d],si
  40d3bb:	mov    ecx,0x69dbe731
  40d3c0:	fidivr WORD PTR [edx-0x5cf0db72]
  40d3c6:	mov    esp,0xf4239ccc
  40d3cb:	cwde   
  40d3cc:	pop    es
  40d3cd:	dec    edx
  40d3ce:	mov    eax,ds:0xfcc847a1
  40d3d3:	test   al,0x7a
  40d3d5:	push   ebp
  40d3d6:	or     bl,BYTE PTR [ebx+0x31]
  40d3d9:	inc    ecx
  40d3da:	xor    DWORD PTR [ecx],esi
  40d3dc:	clc    
  40d3dd:	sub    cl,BYTE PTR [esi]
  40d3df:	in     al,dx
  40d3e0:	fistp  DWORD PTR [edi+0x6a]
  40d3e3:	cli    
  40d3e4:	add    eax,0x1ed0569a
  40d3e9:	cmp    bh,dl
  40d3eb:	pop    ebp
  40d3ec:	std    
  40d3ed:	sbb    DWORD PTR [ebx-0x6754b69c],eax
  40d3f3:	gs pop ecx
  40d3f5:	adc    BYTE PTR [ecx+0x53],dh
  40d3f8:	aaa    
  40d3f9:	lods   al,BYTE PTR ds:[esi]
  40d3fa:	xchg   esp,eax
  40d3fb:	ja     0x40d474
  40d3fd:	hlt    
  40d3fe:	adc    eax,0x9dcc8b40
  40d403:	sub    ecx,0x172d58ef
  40d409:	mov    dh,0x24
  40d40b:	ds cmp ah,ah
  40d40e:	push   ds
  40d40f:	adc    edi,0x5
  40d412:	retf   0x1284
  40d415:	pop    ecx
  40d416:	mov    edi,0xb271470d
  40d41b:	out    0x6f,al
  40d41d:	jp     0x40d444
  40d41f:	dec    edi
  40d420:	call   0xe66e146c
  40d425:	hlt    
  40d426:	jmp    0xbb0d:0xfdc0c37f
  40d42d:	sti    
  40d42e:	push   edx
  40d42f:	popf   
  40d430:	mov    al,0x82
  40d432:	stos   DWORD PTR es:[edi],eax
  40d433:	inc    ebx
  40d434:	dec    ebx
  40d435:	push   ecx
  40d436:	std    
  40d437:	or     BYTE PTR ds:0xcf804250,bh
  40d43d:	std    
  40d43e:	call   0xf1d5:0x746a5a23
  40d445:	mov    ecx,0xe99950d0
  40d44a:	mov    ds:0x86484303,eax
  40d44f:	add    dh,BYTE PTR [ecx+0x5f]
  40d452:	call   0x279a:0xe8ecfa12
  40d459:	mov    ecx,DWORD PTR [ebx-0x7aa7d89c]
  40d45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d461:	adc    al,0xfc
  40d463:	inc    esi
  40d464:	pop    esp
  40d465:	xor    DWORD PTR [ebp+0x21],eax
  40d468:	mov    ah,0xcb
  40d46a:	adc    DWORD PTR [ecx+0x304d6d95],edx
  40d470:	fsubr  QWORD PTR [ebp-0x64ab9448]
  40d476:	push   ebx
  40d478:	call   0x3fb5:0x2e22180e
  40d47f:	repnz mov dh,0xf8
  40d482:	fild   DWORD PTR [ebx]
  40d484:	cmc    
  40d485:	jmp    FWORD PTR gs:[ebx-0x45b70131]
  40d48c:	dec    eax
  40d48d:	in     al,dx
  40d48e:	arpl   WORD PTR [ebp-0x45dfa3d5],dx
  40d494:	shl    BYTE PTR [esi+0x4d],cl
  40d497:	pop    esp
  40d498:	(bad)  
  40d499:	adc    eax,edx
  40d49b:	icebp  
  40d49c:	push   esi
  40d49d:	push   ds
  40d49e:	xchg   esi,eax
  40d49f:	lods   al,BYTE PTR ds:[esi]
  40d4a0:	jbe    0x40d48c
  40d4a2:	mov    ah,0x54
  40d4a4:	cld    
  40d4a5:	push   esp
  40d4a6:	jns    0x40d450
  40d4a8:	retf   
  40d4a9:	inc    esi
  40d4aa:	out    dx,eax
  40d4ab:	(bad)  
  40d4ac:	imul   edx,esi,0x1937530c
  40d4b2:	xor    cl,BYTE PTR [ecx]
  40d4b4:	cld    
  40d4b5:	and    eax,0xd8633a4a
  40d4ba:	inc    DWORD PTR [edx+0x29b5acfb]
  40d4c0:	xchg   BYTE PTR [ecx-0x42],al
  40d4c3:	clc    
  40d4c4:	lds    esp,FWORD PTR [edx+0x6c]
  40d4c7:	mov    al,ds:0xfa8820eb
  40d4cc:	mov    bh,0x9a
  40d4ce:	mov    ebp,0x837ee6c0
  40d4d3:	cmp    edi,ebp
  40d4d5:	jno    0x40d47c
  40d4d7:	mov    edi,0xa0aa4c9
  40d4dc:	mov    BYTE PTR [ecx],bl
  40d4de:	or     al,ah
  40d4e0:	dec    ebp
  40d4e1:	mov    cs,ecx
  40d4e3:	mov    BYTE PTR [eax-0x6f410142],cl
  40d4e9:	sbb    bh,dl
  40d4eb:	stos   DWORD PTR es:[di],eax
  40d4ed:	ror    BYTE PTR [eax-0x782f4c1c],1
  40d4f3:	enter  0x9c06,0x16
  40d4f7:	pop    edi
  40d4f8:	aas    
  40d4f9:	fidivr WORD PTR [ecx+ebx*1+0x782ef231]
  40d500:	ja     0x40d552
  40d502:	xchg   BYTE PTR [edx+0x24],bl
  40d505:	sti    
  40d506:	int3   
  40d507:	das    
  40d508:	in     eax,0x1b
  40d50a:	shr    DWORD PTR [eax],0x42
  40d50d:	sub    BYTE PTR [edi+0x39c94dc],0x76
  40d514:	or     ah,BYTE PTR [ebx]
  40d516:	(bad)  
  40d518:	cld    
  40d519:	mov    dl,0x6f
  40d51b:	das    
  40d51c:	adc    dl,BYTE PTR [ebx]
  40d51e:	xchg   esi,eax
  40d51f:	add    eax,0xfc2d724
  40d524:	std    
  40d525:	sub    al,0x8f
  40d527:	shl    cl,cl
  40d529:	or     DWORD PTR [edi+0x3a],esp
  40d52c:	arpl   WORD PTR [ecx-0x45ea5181],bp
  40d532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d533:	pop    ebp
  40d534:	iret   
  40d535:	rol    WORD PTR [eax+0x5873c8e3],1
  40d53c:	lds    edx,FWORD PTR [eax]
  40d53e:	push   esp
  40d53f:	pop    ds
  40d540:	mov    dl,0xd0
  40d542:	jg     0x40d52b
  40d544:	or     BYTE PTR [ebp-0x4d28d3a2],dl
  40d54a:	jl     0x40d536
  40d54c:	call   0xc2d:0x46569ddb
  40d553:	add    esp,ebx
  40d555:	pop    ebx
  40d556:	xor    ah,BYTE PTR [ebp-0x38d2dbd7]
  40d55c:	je     0x40d571
  40d55e:	dec    edx
  40d55f:	inc    edi
  40d560:	push   cs
  40d561:	in     eax,dx
  40d562:	test   BYTE PTR [edi],al
  40d564:	dec    ebp
  40d565:	mov    dh,0x9
  40d567:	inc    esi
  40d568:	mov    WORD PTR [edi+eiz*8-0x381a8b72],?
  40d56f:	mov    WORD PTR [eax+ebp*4+0x3b0317a],es
  40d576:	shl    BYTE PTR [edi],cl
  40d578:	inc    esp
  40d579:	lods   al,BYTE PTR ds:[esi]
  40d57a:	mov    al,0x86
  40d57c:	je     0x40d5b6
  40d57e:	mov    eax,0x4e587f3a
  40d583:	jle    0x40d5c9
  40d585:	pusha  
  40d586:	mov    edi,0xa000bbad
  40d58b:	fdivr  DWORD PTR [edx]
  40d58d:	scas   al,BYTE PTR es:[edi]
  40d58e:	cmp    BYTE PTR [edi],al
  40d590:	or     al,0x1e
  40d592:	popf   
  40d593:	fcomip st,st(1)
  40d595:	jae    0x40d5d2
  40d597:	xor    ecx,DWORD PTR [esi-0x659c9c79]
  40d59d:	nop
  40d59e:	sbb    cl,al
  40d5a0:	sub    al,0x12
  40d5a2:	push   es
  40d5a3:	cmp    al,0x33
  40d5a5:	sbb    al,0x59
  40d5a7:	and    al,0xd
  40d5a9:	add    al,BYTE PTR [eax-0x1e01ab86]
  40d5af:	enter  0xba92,0x75
  40d5b3:	loopne 0x40d606
  40d5b5:	dec    eax
  40d5b6:	popa   
  40d5b7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b9:	ds xchg ebp,eax
  40d5bb:	mov    ?,WORD PTR [edx]
  40d5bd:	push   eax
  40d5be:	mov    dh,0x41
  40d5c0:	aas    
  40d5c1:	mov    ebx,0xa3a553d4
  40d5c6:	sub    ch,dl
  40d5c8:	lock outs dx,DWORD PTR ds:[esi]
  40d5ca:	dec    ebx
  40d5cb:	or     al,0x6f
  40d5cd:	arpl   WORD PTR [ebx-0x19],si
  40d5d0:	add    dl,ah
  40d5d2:	vpcmov xmm3,xmm5,xmm4,xmm5
  40d5d8:	mov    BYTE PTR [edx],ah
  40d5da:	stc    
  40d5db:	xchg   esi,eax
  40d5dc:	inc    ebx
  40d5dd:	push   ebp
  40d5de:	add    eax,0xf30f981a
  40d5e3:	xor    DWORD PTR [edx+edx*4-0x3f2fc737],edi
  40d5ea:	sar    BYTE PTR [ecx+edx*8+0x57a9c4db],0x10
  40d5f2:	pop    ds
  40d5f3:	add    DWORD PTR [eax+eiz*8+0x20],ebx
  40d5f7:	enter  0x23f6,0x3c
  40d5fb:	jno    0x40d5c3
  40d5fd:	pop    edi
  40d5fe:	mov    ds:0xdb8760cc,al
  40d603:	cmc    
  40d604:	cmp    eax,0x7494c754
  40d609:	stos   DWORD PTR es:[edi],eax
  40d60a:	fbld   TBYTE PTR [ecx]
  40d60c:	jo     0x40d61b
  40d60e:	add    dh,0xe9
  40d611:	mov    ah,BYTE PTR [edx-0x69]
  40d614:	ret    
  40d615:	aad    0x4f
  40d617:	adc    DWORD PTR [esi],ecx
  40d619:	xor    edx,DWORD PTR [edx-0x4b588772]
  40d61f:	jmp    0x924067a8
  40d624:	lods   al,BYTE PTR ds:[esi]
  40d625:	pop    edx
  40d626:	dec    edx
  40d627:	das    
  40d628:	leave  
  40d629:	out    0x60,eax
  40d62b:	(bad)  
  40d62c:	push   ss
  40d62d:	je     0x40d6a4
  40d62f:	push   edi
  40d630:	or     al,0xee
  40d632:	call   0xf0ba17d0
  40d637:	push   es
  40d638:	fisttp DWORD PTR [esi]
  40d63a:	iret   
  40d63b:	cli    
  40d63c:	dec    ebx
  40d63d:	mov    al,0x13
  40d63f:	inc    ebp
  40d640:	adc    eax,0x1ea0d289
  40d645:	shr    esp,cl
  40d647:	dec    eax
  40d648:	leave  
  40d649:	and    BYTE PTR [edx+0x60],dh
  40d64c:	stos   DWORD PTR es:[edi],eax
  40d64d:	xchg   ecx,eax
  40d64e:	mov    al,ds:0xc770af9f
  40d653:	mov    esi,0x1fd37124
  40d658:	test   eax,0x893df828
  40d65d:	jmp    0x40d6b3
  40d65f:	dec    eax
  40d660:	jne    0x40d674
  40d662:	mov    esp,0xf2a38120
  40d667:	mov    al,0x64
  40d669:	cmp    al,ch
  40d66b:	and    ch,BYTE PTR [ebx+0x7b7d06d0]
  40d671:	dec    esi
  40d672:	push   ebx
  40d673:	dec    edi
  40d674:	ror    BYTE PTR [ebp-0x1b],cl
  40d677:	pop    ss
  40d678:	(bad)  
  40d679:	cmp    ebp,DWORD PTR [eax+ecx*1]
  40d67c:	sub    eax,0xc1fbaf61
  40d681:	add    DWORD PTR [eax+0x4b80e8b0],ebp
  40d687:	stc    
  40d688:	adc    DWORD PTR [edi],ebp
  40d68a:	adc    DWORD PTR [ecx],edi
  40d68c:	ja     0x40d694
  40d68e:	xor    ecx,DWORD PTR [edi-0x7b]
  40d691:	ror    DWORD PTR [ecx+0x78ab8958],1
  40d697:	xchg   ebx,eax
  40d698:	add    ebp,ecx
  40d69a:	jecxz  0x40d719
  40d69c:	xor    dh,dl
  40d69e:	punpckldq mm2,DWORD PTR [ebp-0x7d2befba]
  40d6a5:	pop    ebx
  40d6a6:	dec    eax
  40d6a7:	sub    al,0xdb
  40d6a9:	rcl    BYTE PTR [esi],1
  40d6ab:	ins    DWORD PTR es:[edi],dx
  40d6ac:	cld    
  40d6ad:	stc    
  40d6ae:	(bad)  
  40d6af:	push   edi
  40d6b0:	int    0xb2
  40d6b2:	mov    ah,0xd5
  40d6b4:	dec    edi
  40d6b5:	pushf  
  40d6b6:	fsqrt  
  40d6b8:	in     al,dx
  40d6b9:	pop    es
  40d6ba:	and    al,0x1d
  40d6bc:	mov    ch,BYTE PTR [edi+0x7d]
  40d6bf:	aam    0x7a
  40d6c1:	out    dx,al
  40d6c2:	push   esi
  40d6c3:	inc    edi
  40d6c4:	sub    ch,al
  40d6c6:	add    DWORD PTR [edi-0x3d],ebx
  40d6c9:	in     al,0xca
  40d6cb:	lea    edx,[edi+0x11]
  40d6ce:	jg     0x40d70e
  40d6d0:	and    al,0x3b
  40d6d2:	test   DWORD PTR [eax],esi
  40d6d4:	and    al,0xe0
  40d6d6:	adc    BYTE PTR [eax-0x33975758],0x82
  40d6dd:	mov    edi,0x2866758d
  40d6e2:	pusha  
  40d6e3:	adc    edi,0x5
  40d6e6:	inc    eax
  40d6e7:	sahf   
  40d6e8:	cmp    BYTE PTR [eax-0x28],cl
  40d6eb:	fimul  DWORD PTR [eax]
  40d6ed:	es ret 
  40d6ef:	sar    bl,0xca
  40d6f2:	add    BYTE PTR [edx-0x38cff9d1],ah
  40d6f8:	sbb    DWORD PTR [ebp+ebp*1-0x25c5a0f7],edi
  40d6ff:	jmp    0xfd34:0xaa3aaedf
  40d706:	dec    edx
  40d707:	sub    eax,0xce86749b
  40d70c:	push   esp
  40d70d:	mov    esi,0xe11d5951
  40d712:	push   ebx
  40d713:	repz lds ebp,FWORD PTR [ebp+0x38b0d48f]
  40d71a:	pusha  
  40d71b:	lods   al,BYTE PTR ds:[esi]
  40d71c:	ins    DWORD PTR es:[edi],dx
  40d71d:	cmp    al,BYTE PTR [edi-0x4d]
  40d720:	xchg   edi,eax
  40d721:	sbb    BYTE PTR [edi-0x156518fd],bh
  40d727:	push   edi
  40d728:	scas   eax,DWORD PTR es:[edi]
  40d729:	push   esi
  40d72a:	call   0xb74d:0x8709daf2
  40d731:	jmp    0xd51e1839
  40d736:	daa    
  40d737:	push   esp
  40d738:	test   BYTE PTR [esi],bl
  40d73a:	mov    cl,0xe5
  40d73c:	aas    
  40d73d:	jge    0x40d783
  40d73f:	cmp    DWORD PTR [edx-0x63],eax
  40d742:	mov    bl,0xc8
  40d744:	cmp    DWORD PTR [esi+0x7],ecx
  40d747:	mov    esp,0xcff199e7
  40d74c:	call   0xebdc:0x4e2d6d58
  40d753:	ds std 
  40d755:	fstp   TBYTE PTR [eax+0x51]
  40d758:	sar    DWORD PTR [ebx],cl
  40d75a:	sbb    BYTE PTR [eax+0x4e7ac845],0xaa
  40d761:	jb     0x40d7d8
  40d763:	dec    esp
  40d764:	call   0xf9c941b9
  40d769:	nop/reserved BYTE PTR [edi+esi*8]
  40d76d:	(bad)  ss:[esi+0x41]
  40d771:	fld    DWORD PTR [esi-0x73]
  40d774:	jae    0x40d7a9
  40d776:	enter  0x2563,0x5d
  40d77a:	imul   edx,eax,0x4d0d50b3
  40d780:	lods   al,BYTE PTR ds:[esi]
  40d781:	xchg   edi,eax
  40d782:	test   DWORD PTR [esi-0x4cc69fab],ebp
  40d788:	jne    0x40d7b7
  40d78a:	sub    dh,0x84
  40d78d:	mov    eax,0x3e35a1e
  40d792:	mov    ecx,0x50ce5caa
  40d797:	pop    es
  40d798:	enter  0xacd3,0x9
  40d79c:	adc    eax,0xc011b469
  40d7a1:	or     ebx,edx
  40d7a3:	cmp    al,0xdd
  40d7a5:	out    dx,al
  40d7a6:	rcl    dl,1
  40d7a8:	arpl   WORD PTR [esi-0x6d6b70fd],sp
  40d7ae:	sub    cl,BYTE PTR [edi-0x43d32982]
  40d7b4:	data16 xor BYTE PTR [edi],ch
  40d7b7:	test   BYTE PTR [esi+0x1f],0x7f
  40d7bb:	adc    BYTE PTR [edx+0x4a907d47],0x3e
  40d7c2:	jg     0x40d7b7
  40d7c4:	popa   
  40d7c5:	xchg   edi,eax
  40d7c6:	or     bh,BYTE PTR [ebp-0x5d]
  40d7c9:	mov    bh,BYTE PTR [edi-0x16273848]
  40d7cf:	add    al,0xa7
  40d7d1:	mov    BYTE PTR [ebx+0x3920be5],0xa9
  40d7d8:	icebp  
  40d7d9:	mov    ebp,0xf830b814
  40d7df:	inc    edx
  40d7e0:	xor    bl,BYTE PTR [ebx+0x25]
  40d7e3:	jae    0x40d801
  40d7e5:	mov    al,es:0x1d5c2d9b
  40d7eb:	popa   
  40d7ec:	mov    edx,0x32462c15
  40d7f1:	push   ebp
  40d7f2:	mov    esi,0xffb0cf43
  40d7f7:	iret   
  40d7f8:	dec    ebp
  40d7f9:	push   ebx
  40d7fa:	adc    BYTE PTR [eax],bh
  40d7fc:	sbb    DWORD PTR [esi+0x6bf680c9],ebp
  40d802:	inc    BYTE PTR [edi+0x46]
  40d805:	out    dx,eax
  40d806:	mov    al,ds:0x12437c7d
  40d80b:	inc    ecx
  40d80c:	inc    eax
  40d80d:	xchg   ebx,eax
  40d80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80f:	scas   eax,DWORD PTR es:[edi]
  40d810:	mov    BYTE PTR [ecx+ebx*8-0x7b8fb433],bh
  40d817:	icebp  
  40d818:	jne    0x40d850
  40d81a:	call   0xf53f:0xb6e4230d
  40d821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d822:	add    eax,0xd0d1fc9a
  40d827:	sbb    eax,0x74296181
  40d82c:	clc    
  40d82d:	add    eax,0x8a3568e0
  40d832:	mov    dh,0xec
  40d834:	jmp    0x40d7c7
  40d836:	repnz ss ins DWORD PTR es:[edi],dx
  40d839:	sar    DWORD PTR ds:0xf612bf83,0x80
  40d840:	adc    ecx,DWORD PTR [eax+0x69a9e23d]
  40d846:	cmp    DWORD PTR [ebx+edx*8+0x38633379],0x5a
  40d84e:	cwde   
  40d84f:	mov    esi,0x1a4579d2
  40d854:	test   al,0x69
  40d856:	lock (bad) 
  40d858:	sub    eax,0x806eec0a
  40d85d:	lods   al,BYTE PTR ds:[esi]
  40d85e:	dec    eax
  40d85f:	adc    BYTE PTR [ebp+0x4b2069ce],bh
  40d865:	push   edx
  40d866:	ret    0x5846
  40d869:	xlat   BYTE PTR ds:[ebx]
  40d86a:	jl     0x40d88f
  40d86c:	inc    ebp
  40d86d:	add    BYTE PTR [ebx],al
  40d86f:	sbb    ch,bl
  40d871:	(bad)  
  40d872:	mov    ds:0x25c2f4d,al
  40d877:	mov    eax,ss:0xb6c376a8
  40d87d:	fisttp WORD PTR [edx-0x2588fa0]
  40d883:	fidivr WORD PTR [eax]
  40d885:	nop
  40d886:	lock mov edi,0xea2b07a4
  40d88c:	jb     0x40d872
  40d88e:	test   eax,0xd56b3bf4
  40d893:	dec    esi
  40d894:	push   edx
  40d895:	scas   al,BYTE PTR es:[edi]
  40d896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d897:	and    ebx,DWORD PTR [eax]
  40d899:	test   DWORD PTR [edi+0x26],ecx
  40d89c:	add    DWORD PTR ds:0x46cea88f,ebp
  40d8a2:	jo     0x40d837
  40d8a4:	adc    dl,bh
  40d8a6:	loop   0x40d8c1
  40d8a8:	mov    edx,0x97100c15
  40d8ad:	iret   
  40d8ae:	pop    ecx
  40d8af:	outs   dx,DWORD PTR ds:[esi]
  40d8b0:	(bad)  
  40d8b1:	jno    0x40d8d5
  40d8b3:	add    esi,DWORD PTR [edi+0x7d]
  40d8b6:	inc    ecx
  40d8b7:	mov    edx,0x4434005a
  40d8bc:	les    ebp,FWORD PTR [edx+edi*8+0x66]
  40d8c0:	rcl    BYTE PTR [ebx-0x3e],cl
  40d8c3:	pop    ecx
  40d8c4:	or     eax,0xe72bd28b
  40d8c9:	ret    0x77
  40d8cc:	mov    ah,0x61
  40d8ce:	stos   BYTE PTR es:[edi],al
  40d8cf:	inc    ebx
  40d8d0:	test   eax,0x4a852a4f
  40d8d5:	and    BYTE PTR [ebp+0x56c28b2f],ah
  40d8db:	ins    BYTE PTR es:[edi],dx
  40d8dc:	call   0x9780:0x4e4314f
  40d8e3:	les    ebx,FWORD PTR [ebx+0x35]
  40d8e6:	repnz popf 
  40d8e8:	xor    esp,DWORD PTR ds:0x3247ac6f
  40d8ee:	push   esp
  40d8ef:	sbb    ebx,esp
  40d8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f2:	daa    
  40d8f3:	cld    
  40d8f4:	pop    ecx
  40d8f5:	jge    0x40d8c6
  40d8f7:	pop    edi
  40d8f8:	int    0x19
  40d8fa:	adc    al,0xea
  40d8fc:	ror    bh,0xfa
  40d8ff:	int    0xd2
  40d901:	fwait
  40d902:	push   cs
  40d903:	enter  0x415d,0xda
  40d907:	cmp    DWORD PTR [eax+eiz*2],esp
  40d90a:	popf   
  40d90b:	pop    esi
  40d90c:	push   esp
  40d90d:	pusha  
  40d90e:	aaa    
  40d90f:	dec    edi
  40d910:	add    BYTE PTR [ebx-0x4c04b328],0x2a
  40d917:	pop    ds
  40d918:	dec    ebx
  40d919:	stc    
  40d91a:	in     al,dx
  40d91b:	test   DWORD PTR [ecx],esi
  40d91d:	inc    ecx
  40d91e:	ret    0x64ed
  40d921:	jl     0x40d961
  40d923:	mov    bl,0xa7
  40d925:	nop
  40d926:	out    0x21,al
  40d928:	dec    edi
  40d929:	in     al,0x76
  40d92b:	fisttp QWORD PTR [edx-0x28]
  40d92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d92f:	iret   
  40d930:	pop    ds
  40d931:	int    0x5e
  40d933:	pushf  
  40d934:	test   eax,0xed847809
  40d939:	inc    esi
  40d93a:	in     eax,0x54
  40d93c:	dec    esi
  40d93d:	sbb    bh,0x50
  40d940:	xchg   ebp,eax
  40d941:	push   0x1f
  40d943:	mov    ?,edx
  40d945:	xchg   BYTE PTR [ebx],al
  40d947:	jmp    0x40d9a7
  40d949:	xchg   ebx,eax
  40d94a:	lods   al,BYTE PTR ds:[esi]
  40d94b:	shr    DWORD PTR [edx],1
  40d94d:	fisttp QWORD PTR ss:[ecx-0x47]
  40d951:	push   ecx
  40d952:	sbb    DWORD PTR [ecx],eax
  40d954:	inc    edx
  40d955:	call   0x7d405aaf
  40d95a:	(bad)  
  40d95b:	jmp    0x40d958
  40d95d:	push   ds
  40d95e:	fwait
  40d95f:	out    dx,eax
  40d960:	xchg   ecx,eax
  40d961:	mov    ds:0x8ef1effb,eax
  40d966:	pop    ds
  40d967:	lock xchg ecx,eax
  40d969:	les    ecx,FWORD PTR [edx]
  40d96b:	mov    al,ds:0xadea9f49
  40d970:	rol    DWORD PTR [ecx],cl
  40d972:	imul   esi,DWORD PTR [ebx-0x148205f5],0x737d235c
  40d97c:	fmul   st,st(1)
  40d97e:	dec    edx
  40d97f:	sub    BYTE PTR [edi],bl
  40d981:	lahf   
  40d982:	test   al,0x23
  40d984:	and    cl,BYTE PTR [ebp+0x788d968d]
  40d98a:	push   0xa6d961e3
  40d98f:	mov    dl,0xc
  40d991:	dec    edi
  40d992:	ja     0x40d9bd
  40d994:	push   0xffffffdd
  40d996:	adc    DWORD PTR [ebp-0x71780881],ecx
  40d99c:	or     al,cl
  40d99e:	call   0x8d4f:0x8dfd3d9d
  40d9a5:	ds pop ebx
  40d9a7:	mov    ds:0x5c77d794,eax
  40d9ac:	mov    edx,0x8abc017d
  40d9b1:	dec    ebp
  40d9b2:	outs   dx,DWORD PTR ds:[esi]
  40d9b3:	dec    ebp
  40d9b4:	adc    ebx,DWORD PTR [edx-0x1a67eeb3]
  40d9ba:	inc    esi
  40d9bb:	or     eax,0xdbb82e1b
  40d9c0:	outs   dx,DWORD PTR ds:[esi]
  40d9c1:	fdivr  QWORD PTR [eax]
  40d9c3:	dec    edx
  40d9c4:	mov    edx,0xaed66623
  40d9c9:	push   edx
  40d9ca:	aam    0x90
  40d9cc:	out    dx,eax
  40d9cd:	sti    
  40d9ce:	xchg   DWORD PTR [eax+edi*4+0x4c76400c],edx
  40d9d5:	out    0x3c,eax
  40d9d7:	imul   esi,DWORD PTR [edx-0x69cc7a3d],0x2b
  40d9de:	xor    eax,0x72fe6019
  40d9e3:	cmc    
  40d9e4:	jmp    0x84deb7cb
  40d9e9:	add    cl,dh
  40d9eb:	ror    DWORD PTR ds:0x4386bbd4,cl
  40d9f1:	mov    gs,WORD PTR [ebx+0x54]
  40d9f4:	push   ebx
  40d9f5:	or     ch,ah
  40d9f7:	in     al,dx
  40d9f8:	fwait
  40d9f9:	push   edx
  40d9fa:	mov    ah,0x62
  40d9fc:	push   cs
  40d9fd:	cmc    
  40d9fe:	test   BYTE PTR [esp+edx*2],dh
  40da01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da02:	inc    edx
  40da03:	mov    edx,0xc2581a07
  40da08:	adc    BYTE PTR [ebp-0x3e],ah
  40da0b:	in     al,0x1d
  40da0d:	jns    0x40da58
  40da0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da10:	pop    ebp
  40da11:	mov    bh,0xd0
  40da13:	adc    edx,DWORD PTR [edx+ecx*4-0x34ab1514]
  40da1a:	scas   eax,DWORD PTR es:[edi]
  40da1b:	outs   dx,BYTE PTR ds:[esi]
  40da1c:	std    
  40da1d:	cmp    edi,DWORD PTR [eax+edx*4-0x5aa4a3f3]
  40da24:	fsubrp st(5),st
  40da26:	stc    
  40da27:	add    cl,BYTE PTR [eax]
  40da29:	mov    WORD PTR [edi],es
  40da2b:	lods   eax,DWORD PTR ds:[esi]
  40da2c:	cmp    cl,BYTE PTR [eax+eax*4-0x7c929f78]
  40da33:	fwait
  40da34:	hlt    
  40da35:	ins    DWORD PTR es:[edi],dx
  40da36:	(bad)  
  40da37:	sub    BYTE PTR [ecx-0x5],dh
  40da3a:	ror    DWORD PTR [edx],1
  40da3c:	or     al,0x95
  40da3e:	ja     0x40d9ca
  40da40:	mov    eax,ds:0xb86d6906
  40da45:	mov    ah,0x78
  40da47:	fs jns 0x40da3d
  40da4a:	fbstp  TBYTE PTR [esi+0x42]
  40da4d:	lds    edi,FWORD PTR [ebp+0x676e83b2]
  40da53:	cmp    al,0x8e
  40da55:	dec    esp
  40da56:	repnz test al,0x37
  40da59:	fisub  WORD PTR [edi+0x4b852db6]
  40da5f:	shr    DWORD PTR [eax-0x5daadd4],1
  40da65:	hlt    
  40da66:	pop    edx
  40da67:	shr    eax,cl
  40da69:	fst    QWORD PTR [esp+ecx*2-0x38]
  40da6d:	das    
  40da6e:	inc    esp
  40da6f:	sbb    bh,bh
  40da71:	into   
  40da72:	push   ebp
  40da73:	mov    eax,0xb5abdc64
  40da78:	dec    esi
  40da79:	pop    ds
  40da7a:	outs   dx,DWORD PTR ds:[esi]
  40da7b:	pop    ebx
  40da7c:	js     0x40da10
  40da7e:	shl    ebx,cl
  40da80:	js     0x40dad7
  40da82:	out    0x87,al
  40da84:	das    
  40da85:	add    ch,BYTE PTR [esi]
  40da87:	xlat   BYTE PTR ds:[ebx]
  40da88:	inc    eax
  40da89:	inc    ebx
  40da8a:	inc    ebx
  40da8b:	lods   al,BYTE PTR ds:[esi]
  40da8c:	pop    edx
  40da8d:	clc    
  40da8e:	sub    al,0x5a
  40da90:	pop    esi
  40da91:	adc    eax,DWORD PTR [edx+0x1a]
  40da94:	jb     0x40da23
  40da96:	sub    eax,0xd387b37e
  40da9b:	int    0x38
  40da9d:	sub    BYTE PTR ds:0x9f3d9394,dl
  40daa3:	lea    ecx,[esi]
  40daa5:	pop    edi
  40daa6:	push   0xffffffaa
  40daa8:	jmp    FWORD PTR ds:0x7e8a602f
  40daae:	xchg   ecx,eax
  40daaf:	and    eax,edx
  40dab1:	jmp    0x195d105
  40dab6:	mov    dh,0x7f
  40dab8:	mov    BYTE PTR [ecx],cl
  40daba:	mov    ecx,0x347a0d95
  40dabf:	lods   eax,DWORD PTR ds:[esi]
  40dac0:	cmp    eax,DWORD PTR [edi+0x70af2e88]
  40dac6:	cmp    al,0xec
  40dac8:	sbb    BYTE PTR [esi-0x218b6ba8],bh
  40dace:	(bad)  
  40dacf:	and    ch,dh
  40dad1:	or     eax,DWORD PTR [ecx+eax*1+0x40]
  40dad5:	into   
  40dad6:	es and al,0xc1
  40dad9:	in     al,dx
  40dada:	or     BYTE PTR [ebx+ebx*4],dl
  40dadd:	loope  0x40da64
  40dadf:	and    DWORD PTR [ecx+0xb76f97b],ecx
  40dae5:	xor    DWORD PTR [eax-0x26],0xffffffe4
  40dae9:	xor    esp,DWORD PTR [ebp+0x10]
  40daec:	enter  0x3359,0x42
  40daf0:	les    ebx,FWORD PTR [eax]
  40daf2:	xchg   esi,eax
  40daf3:	inc    ecx
  40daf4:	stc    
  40daf5:	xchg   edi,eax
  40daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf7:	fimul  DWORD PTR [eax-0x17]
  40dafa:	mov    BYTE PTR [esi],al
  40dafc:	pop    edx
  40dafd:	xor    eax,0x2536411b
  40db02:	fild   QWORD PTR gs:[eax-0x8ebf80e]
  40db09:	loop   0x40db84
  40db0b:	or     BYTE PTR [ebx+ebp*2+0x20da521e],0x50
  40db13:	ret    
  40db14:	mov    bl,0x8b
  40db16:	xor    dh,dl
  40db18:	js     0x40daeb
  40db1a:	mov    edi,0x4a1f1a5f
  40db1f:	cwde   
  40db20:	push   esi
  40db21:	mov    esp,0xda76fdd4
  40db26:	out    0xe5,al
  40db28:	ret    
  40db29:	sbb    ebx,edx
  40db2b:	push   0x2e
  40db2d:	cdq    
  40db2e:	fistp  QWORD PTR [edx-0x7c39b3a5]
  40db34:	aaa    
  40db35:	lods   eax,DWORD PTR ds:[esi]
  40db36:	jecxz  0x40db16
  40db38:	pop    edx
  40db39:	sbb    BYTE PTR [edx-0x581b29e5],ch
  40db3f:	es jb  0x40db0c
  40db42:	test   BYTE PTR [ecx+esi*1],0x83
  40db46:	popa   
  40db47:	ficom  WORD PTR [ebp-0x417b151d]
  40db4d:	(bad)  
  40db4e:	cmp    esi,edi
  40db50:	mov    dl,0xdc
  40db52:	sbb    bl,ah
  40db54:	in     al,0x9d
  40db56:	mov    ecx,0x15bc0a8e
  40db5b:	and    edx,edi
  40db5d:	pop    ebp
  40db5e:	in     al,dx
  40db5f:	retf   0x454f
  40db62:	popf   
  40db63:	cmp    DWORD PTR [edx],0x3e
  40db66:	(bad)  
  40db67:	aad    0x9b
  40db69:	xor    eax,0x460b986c
  40db6e:	or     ah,ah
  40db70:	loopne 0x40dbb6
  40db72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db73:	mov    ecx,0x7144b3a5
  40db78:	pushf  
  40db79:	dec    ebp
  40db7b:	push   edi
  40db7c:	dec    ebp
  40db7d:	scas   eax,DWORD PTR es:[edi]
  40db7e:	in     eax,0x4e
  40db80:	fs inc eax
  40db82:	arpl   WORD PTR [ecx-0x23c25f1d],di
  40db88:	sub    BYTE PTR [esp+ecx*8+0x55a33bc9],dl
  40db8f:	bound  esi,QWORD PTR [ebx]
  40db91:	fucomi st,st(1)
  40db93:	mov    bl,0x65
  40db95:	cmp    edi,DWORD PTR [esi]
  40db97:	pop    ecx
  40db98:	clc    
  40db99:	pop    es
  40db9a:	push   cs
  40db9b:	sbb    ecx,DWORD PTR [edi-0x74]
  40db9e:	imul   ebx,DWORD PTR [ecx-0x6c],0x8e544bc8
  40dba5:	daa    
  40dba6:	mov    ch,0xd4
  40dba8:	sbb    eax,0xe54b9344
  40dbad:	es int 0x14
  40dbb0:	push   ds
  40dbb1:	(bad)  
  40dbb2:	push   edi
  40dbb3:	loop   0x40dc1d
  40dbb5:	inc    edi
  40dbb6:	mov    esp,0xb9be50c3
  40dbbb:	clc    
  40dbbc:	out    0xec,al
  40dbbe:	les    ebp,FWORD PTR ds:0x4a2705c8
  40dbc4:	mov    ds:0x7b46fa6b,al
  40dbc9:	dec    edx
  40dbca:	cli    
  40dbcb:	mov    ch,0x8b
  40dbcd:	mov    esp,0xbc6cdc20
  40dbd2:	retf   
  40dbd3:	sub    esp,eax
  40dbd5:	daa    
  40dbd6:	xchg   dl,dl
  40dbd8:	push   ebp
  40dbd9:	push   esp
  40dbda:	mov    eax,ds:0x5083af30
  40dbdf:	cmp    BYTE PTR [ebp-0x5346c336],ah
  40dbe5:	es call 0x5b63c87b
  40dbeb:	lods   eax,DWORD PTR ds:[esi]
  40dbec:	das    
  40dbed:	jmp    0xeeb7:0x863cacdc
  40dbf4:	xlat   BYTE PTR ds:[ebx]
  40dbf5:	jb     0x40dba6
  40dbf7:	xor    dh,BYTE PTR [ecx-0x4d]
  40dbfa:	xor    DWORD PTR ds:0x1cb209f0,esp
  40dc00:	xor    DWORD PTR [ebp-0x3d],ecx
  40dc03:	cli    
  40dc04:	inc    ecx
  40dc05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc06:	enter  0x27a5,0xed
  40dc0a:	jae    0x40db96
  40dc0c:	stos   BYTE PTR es:[edi],al
  40dc0d:	call   0xc506:0x66f6a4e4
  40dc14:	mov    ebx,0x6d56680
  40dc19:	xor    DWORD PTR [ebp-0x2cf565f8],edi
  40dc1f:	jecxz  0x40dba1
  40dc21:	jno    0x40dbf0
  40dc23:	repz mov esp,0x68280648
  40dc29:	jmp    0x84a252f3
  40dc2e:	imul   DWORD PTR ds:0x9ad87683
  40dc34:	bound  esp,QWORD PTR [esi-0x7a4157f2]
  40dc3a:	ins    BYTE PTR es:[edi],dx
  40dc3b:	sub    cl,BYTE PTR [eax-0x76b1aa41]
  40dc41:	shr    bl,0x3b
  40dc44:	jg     0x40dbf4
  40dc46:	loop   0x40dc16
  40dc48:	pop    esi
  40dc49:	(bad)  
  40dc4a:	leave  
  40dc4b:	add    esi,DWORD PTR [ebx-0x387ed7d8]
  40dc51:	or     al,0xeb
  40dc53:	jbe    0x40dca9
  40dc55:	stos   DWORD PTR es:[edi],eax
  40dc56:	popf   
  40dc57:	je     0x40dc5f
  40dc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5a:	(bad)
  40dc5e:	mov    al,cl
  40dc60:	mov    edx,0x99d8269a
  40dc65:	addr16 mov esp,0xfa0037fb
  40dc6b:	push   esi
  40dc6c:	sbb    BYTE PTR [ebx+0x17a11363],dh
  40dc72:	add    al,0x4f
  40dc74:	stc    
  40dc75:	lods   eax,DWORD PTR ds:[esi]
  40dc76:	pop    ss
  40dc77:	test   BYTE PTR [edx+0x7e],cl
  40dc7a:	test   DWORD PTR [ecx+edx*1-0x69ae3df5],ebx
  40dc81:	jp     0x40dc42
  40dc83:	push   edi
  40dc84:	aaa    
  40dc85:	jae    0x40dcf2
  40dc87:	or     ecx,DWORD PTR ds:0xfee16886
  40dc8d:	fist   DWORD PTR [edx]
  40dc8f:	mov    edi,0xf0e83171
  40dc94:	imul   ebp,DWORD PTR [ebp-0x41a325af],0x1c11ba3a
  40dc9e:	mov    eax,ds:0xa67ad699
  40dca3:	loope  0x40dca0
  40dca5:	aad    0xb5
  40dca7:	pop    ebp
  40dca8:	stos   BYTE PTR es:[edi],al
  40dca9:	and    BYTE PTR [esi],bh
  40dcab:	aas    
  40dcac:	pop    ebx
  40dcad:	jae    0x40dd19
  40dcaf:	mov    ebp,0xb2478951
  40dcb4:	xor    DWORD PTR [esi],ebp
  40dcb6:	int    0xa9
  40dcb8:	rcl    eax,1
  40dcba:	mov    ebp,0x76dafdc4
  40dcbf:	ins    BYTE PTR es:[edi],dx
  40dcc0:	fstp   QWORD PTR [esi-0x4a1cacff]
  40dcc6:	pop    ds
  40dcc7:	ins    BYTE PTR es:[edi],dx
  40dcc8:	mov    WORD PTR ds:0xd7e636e7,ss
  40dcce:	jne    0x40dcee
  40dcd0:	loope  0x40dc70
  40dcd2:	xchg   edi,eax
  40dcd3:	push   edi
  40dcd4:	lods   al,BYTE PTR ds:[esi]
  40dcd5:	sub    dl,al
  40dcd7:	fnsave [edi-0x3a36bc91]
  40dcdd:	adc    dh,ch
  40dcdf:	mov    edi,0xd54f8247
  40dce4:	dec    DWORD PTR [esi-0x65]
  40dce7:	ret    
  40dce8:	jno    0x40dd4c
  40dcea:	jg     0x40dce5
  40dcec:	call   0xdac4ee8e
  40dcf1:	shl    ch,cl
  40dcf3:	fwait
  40dcf4:	pop    edi
  40dcf5:	hlt    
  40dcf6:	mov    ds:0x52d75c61,eax
  40dcfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcfc:	stos   DWORD PTR es:[edi],eax
  40dcfd:	or     al,0xda
  40dcff:	(bad)  
  40dd00:	scas   al,BYTE PTR es:[edi]
  40dd01:	jmp    0x40dca5
  40dd03:	and    al,0x2a
  40dd05:	xor    DWORD PTR [esi-0x63],0xffffffce
  40dd09:	adc    DWORD PTR [edx],esi
  40dd0b:	mov    ds:0x229323e8,eax
  40dd10:	mov    eax,ds:0x9859feee
  40dd15:	mov    al,ds:0x2abcbdea
  40dd1a:	mov    fs,esp
  40dd1c:	fdiv   QWORD PTR [ecx-0x46]
  40dd1f:	push   ebx
  40dd20:	dec    esi
  40dd21:	addr16 mov al,0xb7
  40dd24:	sahf   
  40dd25:	add    eax,0xbd64d527
  40dd2a:	(bad)  
  40dd2c:	xchg   esi,eax
  40dd2d:	inc    edi
  40dd2e:	dec    esi
  40dd2f:	mov    bh,0x81
  40dd31:	in     al,dx
  40dd32:	sbb    al,al
  40dd34:	pop    edx
  40dd35:	pop    ebp
  40dd36:	shr    BYTE PTR [esi+0x49],cl
  40dd39:	mov    dl,0xa7
  40dd3b:	add    BYTE PTR [eax],bl
  40dd3d:	div    BYTE PTR [eax]
  40dd3f:	popf   
  40dd40:	and    ecx,eax
  40dd42:	stc    
  40dd43:	retf   
  40dd44:	pop    ss
  40dd45:	shl    BYTE PTR [ecx+0x3d448e4f],cl
  40dd4b:	sbb    al,0xb1
  40dd4d:	je     0x40dcd4
  40dd4f:	sub    edx,DWORD PTR [eax]
  40dd51:	mov    ebp,esi
  40dd53:	pop    eax
  40dd54:	adc    BYTE PTR [edi-0x6],0x22
  40dd58:	hlt    
  40dd59:	loopne 0x40dd13
  40dd5b:	aas    
  40dd5c:	xchg   al,al
  40dd5e:	mov    ds:0x7fd3b39a,al
  40dd63:	sahf   
  40dd64:	std    
  40dd65:	stos   BYTE PTR es:[edi],al
  40dd66:	bound  esi,QWORD PTR [esi+0x4f60394d]
  40dd6c:	fldcw  WORD PTR [bx+si+0x32]
  40dd70:	cmp    eax,0x8de23746
  40dd75:	dec    esp
  40dd76:	and    DWORD PTR [ecx],esp
  40dd78:	mov    ch,0x61
  40dd7a:	xor    al,0xc6
  40dd7c:	pop    edi
  40dd7d:	xor    esp,eax
  40dd7f:	psllq  mm0,QWORD PTR [eax-0x71]
  40dd83:	jmp    0x40dd4c
  40dd85:	mov    bh,dh
  40dd87:	and    ebx,ebp
  40dd89:	adc    BYTE PTR [ebp-0x7c311ea8],0x28
  40dd90:	lea    esi,[ebx]
  40dd92:	(bad)  
  40dd93:	cmp    eax,0x1d92725c
  40dd98:	hlt    
  40dd99:	dec    edx
  40dd9a:	sbb    DWORD PTR [edx-0x53cbd108],0x224c1d03
  40dda4:	jg     0x40ddae
  40dda6:	dec    ebp
  40dda7:	pop    ds
  40dda8:	loop   0x40dddb
  40ddaa:	ins    DWORD PTR es:[edi],dx
  40ddab:	sbb    ah,cl
  40ddad:	sub    al,0xf9
  40ddaf:	push   eax
  40ddb0:	loope  0x40dd49
  40ddb2:	jns    0x40de2a
  40ddb4:	ja     0x40de30
  40ddb6:	xchg   esi,eax
  40ddb7:	and    al,0x79
  40ddb9:	push   es
  40ddba:	cmc    
  40ddbb:	sub    eax,0x748690d6
  40ddc0:	xchg   edi,eax
  40ddc1:	out    0x35,al
  40ddc3:	push   esi
  40ddc4:	cmp    ch,BYTE PTR [edx-0x6a]
  40ddc7:	daa    
  40ddc8:	dec    eax
  40ddc9:	cmc    
  40ddca:	dec    edx
  40ddcb:	push   0xffffff82
  40ddcd:	pop    es
  40ddce:	out    dx,eax
  40ddcf:	fs sub ebx,edi
  40ddd2:	mov    edx,0xddea1464
  40ddd7:	pusha  
  40ddd8:	or     eax,DWORD PTR [ecx+0x7ddc2e33]
  40ddde:	adc    BYTE PTR [edx+edx*2+0x30],ch
  40dde2:	cld    
  40dde3:	sub    BYTE PTR [eax+0x59],al
  40dde6:	outs   dx,BYTE PTR ds:[esi]
  40dde7:	retf   0x15db
  40ddea:	jo     0x40de06
  40ddec:	pop    esi
  40dded:	xor    al,0x70
  40ddef:	cmp    al,BYTE PTR [eax-0x34602d3f]
  40ddf5:	pop    ds
  40ddf6:	pop    esi
  40ddf7:	pop    ds
  40ddf8:	inc    ebx
  40ddf9:	mov    ds:0xf4e8f656,eax
  40ddfe:	mov    ebx,0x94ca6797
  40de03:	les    edi,FWORD PTR [ecx-0x73eea8cc]
  40de09:	xchg   ebp,eax
  40de0a:	inc    eax
  40de0b:	dec    esp
  40de0c:	sbb    edi,DWORD PTR [eax-0x163a60ac]
  40de12:	pop    ebx
  40de13:	cmp    DWORD PTR [esi],ecx
  40de15:	jmp    0x54a58d28
  40de1a:	stc    
  40de1b:	ins    DWORD PTR es:[edi],dx
  40de1c:	call   0x7b12:0x573eda8
  40de23:	jg     0x40de8e
  40de25:	xchg   ebp,eax
  40de26:	mov    eax,ds:0xfc8f4982
  40de2b:	nop
  40de2c:	jp     0x40dde6
  40de2e:	in     al,dx
  40de2f:	adc    ah,ah
  40de31:	or     bl,BYTE PTR [eax-0x5d9105d3]
  40de37:	retf   0xea72
  40de3a:	inc    ebp
  40de3b:	(bad)  
  40de3c:	shr    DWORD PTR [eax],1
  40de3e:	jmp    0x40de67
  40de40:	mov    esi,0xbc928d28
  40de45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de46:	scas   al,BYTE PTR es:[edi]
  40de47:	mov    esi,0xfcb4f697
  40de4c:	pop    ss
  40de4d:	mov    ebp,0xda2828b9
  40de52:	jns    0x40dde7
  40de54:	sbb    ah,dh
  40de56:	sbb    al,0x3b
  40de58:	pop    es
  40de59:	push   0xffffffa3
  40de5b:	hlt    
  40de5c:	loop   0x40de89
  40de5e:	pop    ecx
  40de5f:	xor    al,0x59
  40de61:	fdivr  st(2),st
  40de63:	xor    edi,ecx
  40de65:	xchg   ebx,eax
  40de66:	mov    esi,0x37ddabcd
  40de6b:	jns    0x40de4b
  40de6d:	lahf   
  40de6e:	push   es
  40de6f:	pop    ds
  40de70:	fiadd  WORD PTR [ecx-0x7a04a5dd]
  40de76:	mov    ss,ebp
  40de78:	adc    ecx,edi
  40de7a:	xor    eax,0xef7de308
  40de7f:	or     al,0x1b
  40de81:	(bad)  [ecx+0x5b]
  40de84:	pop    ss
  40de85:	and    al,0xa1
  40de87:	mov    ds:0xc19fb097,eax
  40de8c:	cs inc edx
  40de8e:	and    ch,cl
  40de90:	lods   al,BYTE PTR ds:[esi]
  40de91:	outs   dx,BYTE PTR ds:[esi]
  40de92:	xchg   esp,eax
  40de93:	popa   
  40de94:	ffreep st(1)
  40de96:	and    BYTE PTR [edi-0x24fb1915],0xd7
  40de9d:	xor    eax,0x633abdf4
  40dea2:	stos   BYTE PTR es:[edi],al
  40dea3:	sub    al,0x37
  40dea5:	jmp    0x40de85
  40dea7:	lds    ebp,FWORD PTR [edi+ecx*8]
  40deaa:	sub    al,0x33
  40deac:	out    0x26,eax
  40deae:	jl     0x40de30
  40deb0:	mov    ecx,0xdbc29272
  40deb5:	xor    DWORD PTR [ebx+edx*4-0x64],esi
  40deb9:	xor    al,0xb9
  40debb:	jnp    0x40dec2
  40debd:	repz jecxz 0x40de8c
  40dec0:	push   cs
  40dec1:	mov    ds:0xc354d36f,al
  40dec6:	in     al,dx
  40dec7:	xor    esp,ebx
  40dec9:	add    dl,0xaa
  40decc:	push   0x6c
  40dece:	test   eax,0xf3564415
  40ded3:	jg     0x40debb
  40ded5:	inc    eax
  40ded6:	cdq    
  40ded7:	sbb    ebp,DWORD PTR [ebx+0x20]
  40deda:	not    BYTE PTR [eax+eiz*2-0x3d606ae4]
  40dee1:	loope  0x40def4
  40dee3:	lahf   
  40dee4:	imul   ebx,DWORD PTR [ecx-0x224a58df],0xffffffa2
  40deeb:	out    0xdd,eax
  40deed:	sbb    al,0x53
  40deef:	rcl    BYTE PTR [esi+0x63],1
  40def2:	mov    bh,0x2d
  40def4:	fidivr WORD PTR [edi+0x5d2531ed]
  40defa:	lock (bad) [ebx+0x5d4f7516]
  40df01:	in     eax,0x1f
  40df03:	sbb    al,0x99
  40df05:	rcr    BYTE PTR [esp+eiz*4],cl
  40df08:	mov    al,cs:0x9c46b99c
  40df0e:	scas   al,BYTE PTR es:[edi]
  40df0f:	scas   al,BYTE PTR es:[edi]
  40df10:	ret    0x4d7a
  40df13:	ret    0xf4eb
  40df16:	push   cs
  40df17:	dec    esi
  40df18:	adc    al,0xec
  40df1a:	cmp    al,0x22
  40df1c:	imul   ebx,DWORD PTR [ecx+ebx*1+0x3f],0xffffff84
  40df21:	and    ecx,ebx
  40df23:	je     0x40dead
  40df25:	rcl    DWORD PTR [esi],0x65
  40df28:	imul   edi,DWORD PTR [edi+0x20],0xffffffde
  40df2c:	jmp    0x40df31
  40df2e:	xchg   esp,eax
  40df2f:	mov    BYTE PTR [ebp+0xa],ch
  40df32:	mov    edx,0xdf245c7e
  40df37:	xchg   edx,eax
  40df38:	ds mov bh,0x97
  40df3b:	std    
  40df3c:	scas   al,BYTE PTR es:[edi]
  40df3d:	test   al,0x7b
  40df3f:	mov    ds:0x446b3bff,al
  40df44:	push   cs
  40df45:	xor    eax,0x3a
  40df48:	(bad)  
  40df49:	push   edx
  40df4a:	pcmpgtb mm5,QWORD PTR ds:[ecx+0x6e906102]
  40df52:	in     eax,0xca
  40df54:	lea    edx,[ecx]
  40df56:	xlat   BYTE PTR ds:[ebx]
  40df57:	into   
  40df58:	xchg   ecx,eax
  40df59:	sbb    BYTE PTR [edx-0x79],cl
  40df5c:	ins    DWORD PTR es:[edi],dx
  40df5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5e:	inc    eax
  40df5f:	shl    BYTE PTR [esi],1
  40df61:	fdivrp st(6),st
  40df63:	dec    ebp
  40df64:	fcmovb st,st(6)
  40df66:	dec    ebx
  40df67:	add    al,0xe5
  40df69:	xchg   ecx,eax
  40df6a:	mov    eax,ds:0xd051d0b4
  40df6f:	sbb    edx,DWORD PTR [ecx-0x63237509]
  40df75:	xchg   ebp,eax
  40df76:	xchg   ebx,eax
  40df77:	dec    eax
  40df78:	ja     0x40dfd9
  40df7a:	into   
  40df7b:	adc    dl,BYTE PTR [si-0x35]
  40df7f:	dec    ecx
  40df80:	sub    al,0xc0
  40df82:	setno  al
  40df85:	lahf   
  40df86:	xchg   DWORD PTR [ecx],edx
  40df88:	mov    bl,0x4f
  40df8a:	pop    ecx
  40df8b:	jnp    0x40df97
  40df8d:	scas   al,BYTE PTR es:[edi]
  40df8e:	mov    al,ds:0x70e3fdd2
  40df93:	xchg   esp,eax
  40df94:	add    ah,ch
  40df96:	jno    0x40df75
  40df98:	inc    eax
  40df99:	repnz xor al,0x84
  40df9c:	(bad)  
  40df9d:	pusha  
  40df9e:	cmp    esp,edi
  40dfa0:	push   0xf05d313b
  40dfa5:	and    eax,0xc696f5c7
  40dfaa:	mov    cl,0x3a
  40dfac:	hlt    
  40dfad:	add    ch,dh
  40dfaf:	mov    dh,0xf3
  40dfb1:	stos   BYTE PTR es:[edi],al
  40dfb2:	es push eax
  40dfb4:	aaa    
  40dfb5:	shl    DWORD PTR [edi+0x5a],cl
  40dfb8:	lock mov cl,0xae
  40dfbb:	inc    ecx
  40dfbc:	sub    eax,0xf4b30013
  40dfc1:	jnp    0x40e03e
  40dfc3:	mov    dl,0x73
  40dfc5:	mov    edx,0x355a10a4
  40dfca:	dec    ecx
  40dfcb:	mov    ebx,0x87a93e92
  40dfd0:	push   cs
  40dfd1:	cwde   
  40dfd2:	xchg   esi,eax
  40dfd3:	rcr    BYTE PTR [edx-0xe9c579d],1
  40dfd9:	xor    DWORD PTR [eax-0x721bea6],0xffffff8e
  40dfe0:	retf   
  40dfe1:	test   al,0xb8
  40dfe3:	pop    ss
  40dfe4:	add    BYTE PTR [ebx-0x18acc6f4],dl
  40dfea:	pop    eax
  40dfeb:	push   ss
  40dfec:	scas   eax,DWORD PTR es:[edi]
  40dfed:	outs   dx,DWORD PTR ds:[esi]
  40dfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfef:	pop    ecx
  40dff0:	push   cs
  40dff1:	clc    
  40dff2:	hlt    
  40dff3:	sbb    DWORD PTR [edi],edi
  40dff5:	mov    ?,eax
  40dff7:	inc    ebp
  40dff8:	jb     0x40e045
  40dffa:	cmp    eax,0xc2b11d38
  40dfff:	dec    eax
  40e000:	iret   
  40e001:	dec    edx
  40e002:	nop
  40e003:	mov    bl,0x81
  40e005:	repnz inc edx
  40e007:	leave  
  40e008:	mov    DWORD PTR [edi],esi
  40e00a:	out    0x3e,eax
  40e00c:	cld    
  40e00d:	jbe    0x40e00d
  40e00f:	adc    DWORD PTR [ecx+0x798e0324],esi
  40e015:	ja     0x40dfdb
  40e017:	pop    edi
  40e018:	icebp  
  40e019:	call   0x81485d70
  40e01e:	add    ebx,ebp
  40e020:	add    bl,BYTE PTR [ebp-0x27cda16d]
  40e026:	cdq    
  40e027:	mov    edx,0xfa75c216
  40e02c:	(bad)
  40e02f:	push   ss
  40e030:	or     cl,al
  40e032:	inc    esi
  40e033:	mov    ebx,0xcf787009
  40e038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e039:	sub    eax,0xbc5ea6a8
  40e03e:	es shr ebx,1
  40e041:	jbe    0x40dff3
  40e043:	xchg   ebp,eax
  40e044:	rcpps  xmm4,XMMWORD PTR [eax+0x426909ad]
  40e04b:	out    dx,al
  40e04c:	jb     0x40e07f
  40e04e:	or     edx,ebp
  40e050:	mov    eax,0xb097e04e
  40e055:	push   ebp
  40e056:	lea    ecx,[ebx]
  40e058:	dec    ebx
  40e059:	mov    ds:0xa5bb5476,eax
  40e05e:	cmp    eax,0x2933334f
  40e063:	(bad)  
  40e064:	sahf   
  40e065:	jg     0x40e071
  40e067:	mov    bh,0xbe
  40e069:	xchg   esi,eax
  40e06a:	(bad)  
  40e06b:	adc    eax,0x176f4302
  40e070:	ins    BYTE PTR es:[edi],dx
  40e071:	xor    BYTE PTR [edi-0x2bbfb65f],ch
  40e077:	stc    
  40e078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e079:	cwde   
  40e07a:	popa   
  40e07b:	cmp    bl,BYTE PTR [esi+eiz*2]
  40e07e:	ror    BYTE PTR [eax+0x43],cl
  40e081:	push   0x367f5546
  40e086:	retf   0x6b5b
  40e089:	sar    bl,1
  40e08b:	adc    eax,0xa7d57d28
  40e090:	(bad)
  40e093:	push   ecx
  40e094:	sub    ebx,eax
  40e096:	hlt    
  40e097:	push   edi
  40e098:	les    esi,FWORD PTR [ecx+0x0]
  40e09b:	add    eax,0x7f263415
  40e0a0:	jmp    0x40e0f6
  40e0a2:	jnp    0x40e083
  40e0a4:	sub    ebx,ebp
  40e0a6:	call   esp
  40e0a8:	(bad)
  40e0ac:	jl     0x40e0f7
  40e0ae:	xor    DWORD PTR ds:0xa21eec8f,0xfffffffb
  40e0b5:	inc    ecx
  40e0b6:	push   edx
  40e0b7:	pop    es
  40e0b8:	lock jmp 0xcf5e67df
  40e0be:	ficom  DWORD PTR [ebx]
  40e0c0:	mov    ds:0xdd36ee8d,eax
  40e0c5:	std    
  40e0c6:	out    dx,eax
  40e0c7:	rcl    bl,0xe3
  40e0ca:	sub    DWORD PTR [esi+ebp*8+0x6e112a8d],ebp
  40e0d1:	mov    ?,WORD PTR [esi+0x45231df2]
  40e0d7:	pop    ebx
  40e0d8:	cmp    BYTE PTR [edi+0x76],bh
  40e0db:	loope  0x40e126
  40e0dd:	shl    BYTE PTR [edx-0x8d46795],1
  40e0e3:	sub    esp,DWORD PTR [ebx+0x55e99bde]
  40e0e9:	fst    st(4)
  40e0eb:	push   ebx
  40e0ec:	aas    
  40e0ed:	data16 clc 
  40e0ef:	stos   DWORD PTR es:[edi],eax
  40e0f0:	mov    dl,0x5f
  40e0f2:	nop
  40e0f3:	mov    ds,WORD PTR [edx+edx*8+0x6ebe00e5]
  40e0fa:	mov    ch,0xb2
  40e0fc:	add    DWORD PTR [esi],ecx
  40e0fe:	push   edi
  40e0ff:	(bad)  
  40e100:	pusha  
  40e101:	jb     0x40e09e
  40e103:	inc    edx
  40e104:	data16 jne 0x40e175
  40e107:	or     ecx,DWORD PTR [ecx]
  40e109:	and    BYTE PTR [ebx+0x30],cl
  40e10c:	pushf  
  40e10d:	jl     0x40e0d6
  40e10f:	cli    
  40e110:	or     DWORD PTR [eax+edi*2+0x57],esp
  40e114:	jp     0x40e0d8
  40e116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e117:	mov    eax,ds:0xa44ea5ac
  40e11c:	lea    eax,[edi]
  40e11e:	push   ecx
  40e11f:	sub    eax,0xa533c777
  40e124:	loope  0x40e0c9
  40e126:	outs   dx,BYTE PTR ds:[esi]
  40e127:	xchg   esi,eax
  40e128:	push   ebx
  40e129:	stc    
  40e12a:	loope  0x40e126
  40e12c:	(bad)  
  40e12e:	repz cmc 
  40e130:	cmp    ecx,edi
  40e132:	add    DWORD PTR [edx+ebp*4],esp
  40e135:	outs   dx,DWORD PTR ds:[esi]
  40e136:	or     DWORD PTR [edi+0x4b],0x5
  40e13a:	xchg   ebx,eax
  40e13b:	sub    eax,edx
  40e13d:	xchg   DWORD PTR [ecx-0x53],ebp
  40e140:	jl     0x40e17d
  40e142:	xchg   DWORD PTR ds:[ecx],eax
  40e145:	in     eax,0xf1
  40e147:	fcomp  st(6)
  40e149:	pushf  
  40e14a:	outs   dx,DWORD PTR ds:[esi]
  40e14b:	and    esp,edi
  40e14d:	cld    
  40e14e:	int    0xcf
  40e150:	mov    ecx,0xba3e56db
  40e155:	jmp    0x40e156
  40e157:	out    dx,al
  40e158:	fistp  DWORD PTR [ecx+ecx*2+0x108ae708]
  40e15f:	into   
  40e160:	shr    dh,cl
  40e162:	aad    0xb1
  40e164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e166:	dec    ebx
  40e167:	xor    ebx,ebx
  40e169:	push   0x28
  40e16b:	sar    BYTE PTR [edx],0x43
  40e16e:	xchg   DWORD PTR [eax+0x100884cd],eax
  40e174:	xor    ebx,DWORD PTR [esi]
  40e176:	mov    ebx,DWORD PTR [edi]
  40e178:	cmp    eax,0xeeba1831
  40e17d:	mov    dl,BYTE PTR [ecx-0x33]
  40e180:	jnp    0x40e129
  40e182:	sub    al,0xff
  40e184:	mov    bl,BYTE PTR [ebx-0x48]
  40e187:	mov    DWORD PTR [edx],edx
  40e189:	jle    0x40e1b5
  40e18b:	shr    DWORD PTR [ebx-0x1907eae3],cl
  40e191:	repnz sbb edx,ecx
  40e194:	jae    0x40e1dd
  40e196:	inc    eax
  40e197:	cdq    
  40e198:	test   eax,0x11dff46e
  40e19d:	or     al,0x69
  40e19f:	sub    DWORD PTR [ecx-0x21],esp
  40e1a2:	xor    al,0xb4
  40e1a4:	add    eax,0x40fa5f25
  40e1a9:	stc    
  40e1aa:	shl    BYTE PTR [ebx],1
  40e1ac:	add    edi,DWORD PTR [eax]
  40e1ae:	push   edx
  40e1af:	or     al,0xeb
  40e1b1:	xchg   ebp,eax
  40e1b2:	call   0xeb90:0x7e942abb
  40e1b9:	pop    esi
  40e1ba:	jae    0x40e1af
  40e1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1bd:	mov    ss,ebp
  40e1bf:	imul   edx,DWORD PTR [ebx+0x68],0x9236e3fe
  40e1c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c7:	mov    al,ds:0x328bb355
  40e1cc:	sar    BYTE PTR [eax-0x68],0x1e
  40e1d0:	das    
  40e1d1:	or     DWORD PTR [esi+edx*1-0x11],edi
  40e1d5:	push   0x18
  40e1d7:	add    eax,0xcc857f79
  40e1dc:	add    BYTE PTR [edi],bh
  40e1de:	cwde   
  40e1df:	mov    ebx,0xcdcdae4c
  40e1e4:	cmp    edi,DWORD PTR [edx+eiz*2+0x503b121f]
  40e1eb:	and    eax,0xbd47b538
  40e1f0:	adc    al,0x0
  40e1f2:	sub    BYTE PTR [eax],al
  40e1f4:	sbb    edx,esp
  40e1f6:	push   esi
  40e1f7:	scas   eax,DWORD PTR es:[edi]
  40e1f8:	xor    BYTE PTR [ebp-0x4c1d93d4],0x6f
  40e1ff:	aad    0x49
  40e201:	stos   BYTE PTR es:[edi],al
  40e202:	setle  BYTE PTR [ebp+0x10]
  40e206:	stos   BYTE PTR es:[edi],al
  40e207:	aam    0x18
  40e209:	or     DWORD PTR [edi-0x13],ecx
  40e20c:	jl     0x40e25f
  40e20e:	clc    
  40e20f:	or     edx,DWORD PTR [edx+0x1589514f]
  40e215:	dec    esi
  40e216:	mov    dh,0xc9
  40e218:	jbe    0x40e19b
  40e21a:	xor    eax,0x7d202954
  40e21f:	mov    ebp,0xd161e9b9
  40e224:	rcl    dl,1
  40e226:	cmp    DWORD PTR [ecx+0x44],ecx
  40e229:	test   DWORD PTR [edx+0x7f409fb6],ebx
  40e22f:	cmc    
  40e230:	cmp    eax,0x1d8f3ef8
  40e235:	js     0x40e2af
  40e237:	(bad)  
  40e238:	in     eax,dx
  40e239:	jl     0x40e21b
  40e23b:	stc    
  40e23c:	mov    ebx,DWORD PTR [eax-0x6de9375e]
  40e242:	pop    ebp
  40e243:	pop    edx
  40e244:	xlat   BYTE PTR ds:[ebx]
  40e245:	cmp    esi,DWORD PTR [edx]
  40e247:	sbb    eax,0x847f010a
  40e24c:	mov    ebx,0x84c4557c
  40e251:	leave  
  40e252:	scas   eax,DWORD PTR es:[edi]
  40e253:	lods   eax,DWORD PTR ds:[esi]
  40e254:	mov    esp,0xdbf774e1
  40e259:	sub    ebp,DWORD PTR [eax+0x104c7c41]
  40e25f:	pop    esi
  40e260:	ret    0xb59
  40e263:	test   DWORD PTR [edi+edi*1-0x49a36b82],0x5ef45340
  40e26e:	xchg   edx,eax
  40e26f:	cld    
  40e270:	aaa    
  40e271:	int3   
  40e272:	jbe    0x40e242
  40e274:	pop    ss
  40e275:	cmp    eax,0x5e6ed136
  40e27a:	(bad)  
  40e27b:	dec    esp
  40e27c:	fwait
  40e27d:	push   ebx
  40e27e:	mov    esp,ecx
  40e280:	and    al,BYTE PTR [eax]
  40e282:	test   ebx,ecx
  40e284:	jg     0x40e239
  40e286:	pop    eax
  40e287:	lahf   
  40e288:	dec    ebx
  40e289:	pop    edi
  40e28a:	or     al,0x6c
  40e28c:	add    BYTE PTR [edx+0x401c4a75],ch
  40e292:	pop    esi
  40e293:	push   edx
  40e294:	icebp  
  40e295:	stos   BYTE PTR es:[edi],al
  40e296:	ret    0xc64b
  40e299:	cmc    
  40e29a:	jno    0x40e2bb
  40e29c:	fs push ecx
  40e29e:	jo     0x40e2b6
  40e2a0:	dec    edx
  40e2a1:	ss in  al,0x92
  40e2a4:	call   0x114d:0x8a34f8fa
  40e2ab:	lock (bad) 
  40e2ad:	int3   
  40e2ae:	rcr    DWORD PTR [esi],cl
  40e2b0:	push   ss
  40e2b1:	adc    DWORD PTR [ecx-0x5d],ebp
  40e2b4:	lds    edx,FWORD PTR [edi]
  40e2b6:	cli    
  40e2b7:	cdq    
  40e2b8:	pushf  
  40e2b9:	fsub   QWORD PTR [eax]
  40e2bb:	ins    BYTE PTR es:[edi],dx
  40e2bc:	stos   DWORD PTR es:[edi],eax
  40e2bd:	pop    es
  40e2be:	push   ebp
  40e2bf:	jb     0x40e337
  40e2c1:	pop    es
  40e2c2:	or     BYTE PTR [edi],bh
  40e2c4:	lods   al,BYTE PTR ds:[esi]
  40e2c5:	sti    
  40e2c6:	repz mov dh,0x16
  40e2c9:	outs   dx,DWORD PTR ds:[esi]
  40e2ca:	test   eax,0xfd5cf1e3
  40e2cf:	call   0x966746ce
  40e2d4:	pop    edx
  40e2d5:	mov    ecx,0xfb26f932
  40e2da:	push   eax
  40e2db:	pop    ss
  40e2dc:	pop    ecx
  40e2dd:	enter  0xf757,0x57
  40e2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2e2:	or     cl,bh
  40e2e4:	cmp    ah,BYTE PTR [edx]
  40e2e6:	jmp    0x40e2ce
  40e2e8:	sbb    al,0xc5
  40e2ea:	imul   BYTE PTR [edx+0x4fe3fcfa]
  40e2f0:	clc    
  40e2f1:	adc    dl,0x19
  40e2f4:	int3   
  40e2f5:	(bad)  
  40e2f6:	adc    esi,DWORD PTR [ebx]
  40e2f8:	popf   
  40e2f9:	out    0x2d,eax
  40e2fb:	scas   eax,DWORD PTR es:[edi]
  40e2fc:	xchg   ebx,eax
  40e2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2fe:	add    DWORD PTR [edi+0x61],ebp
  40e301:	(bad)  
  40e302:	jp     0x40e310
  40e304:	idiv   DWORD PTR [edi+esi*4-0x1733db93]
  40e30b:	jle    0x40e336
  40e30d:	ja     0x40e330
  40e30f:	adc    cl,dl
  40e311:	push   edi
  40e312:	sbb    edi,esp
  40e314:	loop   0x40e38b
  40e316:	test   al,0x36
  40e318:	jne    0x40e2bf
  40e31a:	cmc    
  40e31b:	inc    edi
  40e31c:	jns    0x40e2e2
  40e31e:	cdq    
  40e31f:	ja     0x40e324
  40e321:	out    0x2f,al
  40e323:	jno    0x40e392
  40e325:	neg    BYTE PTR [ebx-0x5e]
  40e328:	dec    esi
  40e329:	adc    eax,0x8b742bd1
  40e32e:	popf   
  40e32f:	pop    edx
  40e330:	push   ebp
  40e331:	lods   eax,DWORD PTR ds:[esi]
  40e332:	xchg   ebp,eax
  40e333:	mov    bh,0x3d
  40e335:	(bad)  
  40e336:	fiadd  DWORD PTR [eax]
  40e338:	and    al,0x14
  40e33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33b:	out    0xc4,eax
  40e33d:	jecxz  0x40e36f
  40e33f:	pop    eax
  40e340:	xchg   esi,eax
  40e341:	dec    ebp
  40e342:	int    0x14
  40e344:	dec    esp
  40e345:	aaa    
  40e346:	in     al,0x8c
  40e348:	mov    ds,WORD PTR [edi+ecx*8+0x52151b7c]
  40e34f:	dec    eax
  40e350:	mov    al,0x44
  40e352:	sbb    esi,DWORD PTR [ecx+ebx*8]
  40e355:	sti    
  40e356:	fst    QWORD PTR [eax-0x6ce409dc]
  40e35c:	test   eax,0x65751660
  40e361:	inc    edx
  40e362:	ja     0x40e372
  40e364:	mov    edi,0xa4b9e995
  40e369:	mov    bl,0xcd
  40e36b:	pop    ds
  40e36c:	nop
  40e36d:	shl    BYTE PTR [edx-0x4c0d8c30],0x7a
  40e374:	rcl    BYTE PTR [esi+0x1817dd99],cl
  40e37a:	mov    ?,WORD PTR [ebx-0x7b06542a]
  40e380:	inc    edx
  40e381:	lods   al,BYTE PTR ds:[esi]
  40e382:	loope  0x40e3a2
  40e384:	cdq    
  40e385:	fisub  DWORD PTR [ecx+0x1f]
  40e388:	sub    bh,BYTE PTR ds:0xd5690069
  40e38e:	out    0xa1,al
  40e390:	mov    dh,0xcc
  40e392:	mov    dh,0xa2
  40e394:	fcom   st(0)
  40e396:	fisttp QWORD PTR [edx+0x2d]
  40e399:	cs mov ebx,0x79622fb
  40e39f:	jmp    0x40e366
  40e3a1:	mov    eax,gs:0xe1bdebe0
  40e3a7:	pop    ds
  40e3a8:	push   ss
  40e3a9:	int3   
  40e3aa:	test   BYTE PTR [edx],cl
  40e3ac:	rcr    esi,cl
  40e3ae:	xor    DWORD PTR [ecx],esi
  40e3b0:	out    0x4d,al
  40e3b2:	add    eax,0xf7a108c0
  40e3b7:	ds sbb ecx,DWORD PTR ss:[ebx+edx*1]
  40e3bc:	jnp    0x40e394
  40e3be:	xor    BYTE PTR [edx+ebp*8],0x78
  40e3c2:	add    eax,0x249a3c10
  40e3c7:	test   BYTE PTR [ebx],al
  40e3c9:	pop    es
  40e3ca:	jns    0x40e361
  40e3cc:	push   ecx
  40e3cd:	adc    BYTE PTR [esp+edx*4],dl
  40e3d0:	repnz push edi
  40e3d2:	pop    ds
  40e3d3:	and    esi,DWORD PTR [edi+0x3a]
  40e3d6:	mov    gs:0xca88cae3,eax
  40e3dc:	daa    
  40e3dd:	in     al,dx
  40e3de:	inc    edi
  40e3df:	adc    DWORD PTR [ebp+0x40f62443],ebx
  40e3e5:	xor    bh,BYTE PTR [eax-0x1c]
  40e3e8:	mov    edx,ebp
  40e3ea:	sub    eax,esp
  40e3ec:	imul   esi,ebx,0x5b
  40e3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f0:	into   
  40e3f1:	mov    ds:0x3f45c000,al
  40e3f6:	icebp  
  40e3f7:	(bad)  
  40e3f8:	in     eax,0xc8
  40e3fa:	sub    esp,DWORD PTR [ecx+eax*4+0x62]
  40e3fe:	mov    esp,0xb399733
  40e403:	mov    ebx,esp
  40e405:	jns    0x40e3ba
  40e407:	and    BYTE PTR [esi+eiz*8+0x35],bl
  40e40b:	push   es
  40e40c:	imul   esp,DWORD PTR [edx+0x41],0xffffff83
  40e410:	aas    
  40e411:	dec    eax
  40e412:	pop    ecx
  40e413:	test   eax,0x6a63b2ea
  40e418:	xor    cl,BYTE PTR ds:0x295d9042
  40e41e:	jmp    FWORD PTR [edi]
  40e420:	ss shl eax,cl
  40e423:	ror    BYTE PTR [edx],1
  40e425:	(bad)  
  40e426:	leave  
  40e427:	or     esp,DWORD PTR [eax-0x59285151]
  40e42d:	js     0x40e4ae
  40e42f:	and    eax,0xff9661b5
  40e434:	fcom   QWORD PTR [ebx]
  40e436:	imul   edi,eax,0x65acd6d2
  40e43c:	(bad)  
  40e43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e43f:	test   DWORD PTR [edx],esi
  40e441:	push   ss
  40e442:	imul   esp,DWORD PTR [ebx+0x3d],0xd
  40e446:	(bad)  
  40e448:	xor    ebx,0x4fd87b40
  40e44e:	mov    dl,0xa3
  40e450:	cwde   
  40e451:	lods   eax,DWORD PTR ds:[esi]
  40e452:	mov    al,ds:0x5d57d357
  40e457:	jbe    0x40e43a
  40e459:	shl    DWORD PTR [edx+ebx*8],0xed
  40e45d:	imul   edi,DWORD PTR [edx],0xffffffad
  40e460:	or     al,0x27
  40e462:	jle    0x40e442
  40e464:	das    
  40e465:	xor    BYTE PTR [ebp-0xd],0x56
  40e469:	jno    0x40e48b
  40e46b:	lea    eax,[ebx+eax*2+0x5c2e4acd]
  40e472:	and    al,0x74
  40e474:	jp     0x40e4ef
  40e476:	into   
  40e477:	icebp  
  40e478:	fbld   TBYTE PTR [edx-0x40]
  40e47b:	scas   eax,DWORD PTR es:[edi]
  40e47c:	add    eax,0x58f96fd1
  40e481:	stc    
  40e482:	ficom  WORD PTR [edx-0x50]
  40e485:	xchg   DWORD PTR [esi+0x57faaad0],edi
  40e48b:	mov    ebp,0x98d261cd
  40e490:	imul   edx,DWORD PTR ds:0x53f1381a
  40e497:	pop    es
  40e498:	addr16 aad 0xef
  40e49b:	in     al,0xa6
  40e49d:	adc    eax,0xb01e1845
  40e4a2:	xchg   edi,eax
  40e4a3:	iret   
  40e4a4:	test   eax,0xaa968484
  40e4a9:	inc    edi
  40e4aa:	pop    ebp
  40e4ab:	xor    bl,bh
  40e4ad:	dec    esi
  40e4ae:	pusha  
  40e4af:	push   esp
  40e4b0:	loopne 0x40e4e9
  40e4b2:	xcrypt-ofb (bad)
  40e4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b4:	sub    al,0x14
  40e4b6:	sbb    al,0xed
  40e4b8:	shl    cl,1
  40e4ba:	xchg   ebp,eax
  40e4bb:	test   eax,0x3fda4c16
  40e4c0:	arpl   WORD PTR [ebx-0x6d],cx
  40e4c3:	inc    ebx
  40e4c4:	repnz or DWORD PTR [edx-0x7a],edx
  40e4c8:	ror    edi,0xe5
  40e4cb:	add    cl,BYTE PTR fs:[ecx-0x9]
  40e4cf:	xor    DWORD PTR [ebx-0x15],ebp
  40e4d2:	mov    al,0x8f
  40e4d4:	push   edi
  40e4d5:	mov    ecx,0x71f82716
  40e4da:	inc    edx
  40e4db:	pushf  
  40e4dc:	sbb    eax,0xc218d9ea
  40e4e1:	and    dl,BYTE PTR [eax+0x5061f840]
  40e4e7:	adc    al,0x2d
  40e4e9:	inc    edx
  40e4ea:	push   0x704c0689
  40e4ef:	push   eax
  40e4f0:	js     0x40e484
  40e4f2:	dec    ebx
  40e4f3:	push   cs
  40e4f4:	dec    eax
  40e4f5:	arpl   cx,dx
  40e4f7:	inc    ecx
  40e4f8:	das    
  40e4f9:	xchg   edx,eax
  40e4fa:	fld    DWORD PTR [edi]
  40e4fc:	xchg   esi,eax
  40e4fd:	push   edi
  40e4fe:	in     eax,0xa5
  40e500:	xchg   ebp,eax
  40e501:	push   0xffffffe4
  40e503:	dec    ecx
  40e504:	cli    
  40e505:	and    DWORD PTR [edx+0x2e],edi
  40e508:	mov    dh,0x4
  40e50a:	mov    eax,ds:0x7e9037c0
  40e50f:	(bad)  
  40e511:	jecxz  0x40e4da
  40e513:	ret    0x2b1e
  40e516:	pusha  
  40e517:	sbb    ecx,DWORD PTR [edx]
  40e519:	icebp  
  40e51a:	stc    
  40e51b:	(bad)  
  40e51e:	enter  0x5502,0x57
  40e522:	and    al,0x90
  40e524:	add    BYTE PTR [edi-0x4b],ah
  40e527:	inc    edi
  40e528:	jae    0x40e50c
  40e52a:	(bad)  
  40e52b:	xchg   edx,eax
  40e52c:	dec    ebp
  40e52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e52e:	fimul  DWORD PTR [ebx-0x272a8638]
  40e534:	jecxz  0x40e571
  40e536:	or     DWORD PTR ds:0xad089455,0xffffff94
  40e53d:	ja     0x40e590
  40e53f:	gs dec edi
  40e541:	mov    BYTE PTR [ebx-0x22],al
  40e544:	jg     0x40e533
  40e546:	in     al,0xc5
  40e548:	xor    eax,0x90e5531f
  40e54d:	dec    ecx
  40e54e:	hlt    
  40e54f:	dec    edx
  40e550:	dec    esi
  40e551:	jno    0x40e5d2
  40e553:	dec    esp
  40e554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e555:	(bad)  
  40e556:	and    dl,BYTE PTR [ebx-0x855b217]
  40e55c:	enter  0x958b,0x8d
  40e560:	test   BYTE PTR [esi+0x35ce635d],bl
  40e566:	(bad)  
  40e567:	int3   
  40e568:	leave  
  40e569:	cld    
  40e56a:	push   DWORD PTR [edx-0xc]
  40e56d:	jae    0x40e5b9
  40e56f:	and    al,0x79
  40e571:	daa    
  40e572:	push   ebp
  40e573:	sbb    eax,0xbd4fcea9
  40e578:	add    al,0xfb
  40e57a:	imul   edx,DWORD PTR [edi+eiz*4+0x51166d0b],0xffffff87
  40e582:	aas    
  40e583:	jne    0x40e5ef
  40e585:	pushf  
  40e586:	test   DWORD PTR [edx],0x1940a53f
  40e58c:	cld    
  40e58d:	jmp    0x940312e0
  40e592:	push   0xb0ef7834
  40e597:	push   esi
  40e598:	cmp    BYTE PTR [ecx+0x71c3df96],ch
  40e59e:	stc    
  40e59f:	inc    esi
  40e5a0:	sub    al,0x68
  40e5a2:	outs   dx,BYTE PTR ds:[esi]
  40e5a3:	dec    ebp
  40e5a4:	push   0x4f677718
  40e5a9:	pop    ebx
  40e5aa:	xchg   esi,eax
  40e5ab:	clc    
  40e5ac:	jo     0x40e5c8
  40e5ae:	jne    0x40e5d8
  40e5b0:	lods   al,BYTE PTR ds:[esi]
  40e5b1:	cdq    
  40e5b2:	test   al,0x60
  40e5b4:	jns    0x40e57f
  40e5b6:	stc    
  40e5b7:	and    DWORD PTR [edx],edx
  40e5b9:	ins    DWORD PTR es:[edi],dx
  40e5ba:	adc    edi,edx
  40e5bc:	fucom  st(0)
  40e5be:	xchg   ecx,eax
  40e5bf:	mov    ebp,?
  40e5c1:	xchg   esi,eax
  40e5c2:	xchg   DWORD PTR cs:[edi+0x2a],esp
  40e5c6:	imul   edi,DWORD PTR [ebx],0xffffffc4
  40e5c9:	cli    
  40e5ca:	(bad)  
  40e5cb:	mov    al,0x25
  40e5cd:	xchg   ebx,eax
  40e5ce:	ret    0x62c9
  40e5d1:	aam    0x9e
  40e5d3:	aas    
  40e5d4:	lods   eax,DWORD PTR ds:[esi]
  40e5d5:	pop    esi
  40e5d6:	cs (bad) 
  40e5d8:	jle    0x40e64d
  40e5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5db:	xor    eax,0x33457424
  40e5e0:	mov    bh,0xdb
  40e5e2:	push   ebx
  40e5e3:	jnp    0x40e569
  40e5e5:	lock mov WORD PTR [esi+0x39],ss
  40e5e9:	dec    ebp
  40e5ea:	xchg   ebp,eax
  40e5eb:	fcom   DWORD PTR [ecx]
  40e5ed:	aas    
  40e5ee:	add    al,0x7f
  40e5f0:	xor    eax,0xaa109b1c
  40e5f5:	fiadd  WORD PTR ss:[edi-0x52]
  40e5f9:	call   0x1d020722
  40e5fe:	loope  0x40e5d5
  40e600:	es inc ecx
  40e602:	mov    ch,cl
  40e604:	aaa    
  40e605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e606:	push   cs
  40e607:	add    DWORD PTR [edx],0x24
  40e60a:	scas   al,BYTE PTR es:[edi]
  40e60b:	pushf  
  40e60c:	in     eax,0xa1
  40e60e:	repnz mov edx,0xb8cbeef1
  40e614:	cs adc al,0xbd
  40e617:	jno    0x40e5c6
  40e619:	xchg   ebx,eax
  40e61a:	xlat   BYTE PTR ds:[ebx]
  40e61b:	(bad)  
  40e61c:	jle    0x40e5ce
  40e61e:	fwait
  40e61f:	sahf   
  40e620:	int3   
  40e621:	mov    dl,0x30
  40e623:	hlt    
  40e624:	inc    eax
  40e625:	cmp    al,0x7d
  40e627:	mov    esi,0xb550ed56
  40e62c:	add    esi,DWORD PTR [esi+0x3a6ab6be]
  40e632:	test   BYTE PTR [ebx+0xa],0x4e
  40e636:	dec    edx
  40e637:	xchg   ebp,eax
  40e638:	(bad)  
  40e639:	retf   0xc0c1
  40e63c:	and    eax,0x82c52157
  40e641:	(bad)
  40e645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e646:	jg     0x40e6a9
  40e648:	rcr    BYTE PTR [eax+0x7623317e],0x7b
  40e64f:	xor    DWORD PTR [edi],edx
  40e651:	cmp    al,0x2d
  40e653:	sub    ah,BYTE PTR [ecx]
  40e655:	pop    ebp
  40e656:	loopne 0x40e61f
  40e658:	mov    esi,DWORD PTR [ecx-0x7f7a557e]
  40e65e:	outs   dx,DWORD PTR ds:[esi]
  40e65f:	or     BYTE PTR [edx-0x1c373acc],dl
  40e665:	ja     0x40e62b
  40e667:	call   0x9b75b7b3
  40e66c:	mov    dh,0x36
  40e66e:	mov    BYTE PTR ss:[eax+0x6f3e8c14],dl
  40e675:	xchg   ebx,eax
  40e676:	xchg   BYTE PTR [esi-0x2c2c8245],cl
  40e67c:	sti    
  40e67d:	jbe    0x40e635
  40e67f:	retf   0x8bc0
  40e682:	or     dl,BYTE PTR [ecx+0x726938ba]
  40e688:	test   eax,0x4d311f9e
  40e68d:	sub    eax,0xad3f6847
  40e692:	fld    DWORD PTR [ecx]
  40e694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e695:	jmp    0x4f24:0x15104212
  40e69c:	sub    al,0x7
  40e69e:	iret   
  40e69f:	dec    edi
  40e6a0:	mov    bl,0x37
  40e6a2:	retf   
  40e6a3:	test   al,0xf6
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	add    eax,0x9259c067
  40e6ab:	sbb    eax,0x787589f8
  40e6b0:	push   cs
  40e6b1:	push   ebp
  40e6b2:	dec    edx
  40e6b3:	xor    eax,0xf066d988
  40e6b8:	xchg   esp,eax
  40e6b9:	jmp    DWORD PTR [esi+0x6acb61aa]
  40e6bf:	mov    esi,0xd3b12eec
  40e6c4:	jmp    0x8c2c:0xe5d57a03
  40e6cb:	xchg   BYTE PTR [edx-0x2d],dl
  40e6ce:	mov    edx,0xebd8d076
  40e6d3:	xor    BYTE PTR [esi],bl
  40e6d5:	test   al,0xc8
  40e6d7:	into   
  40e6d8:	push   cs
  40e6d9:	mov    eax,0x686a6b56
  40e6de:	lea    eax,[eax-0x74]
  40e6e1:	pop    esp
  40e6e2:	inc    esp
  40e6e3:	adc    BYTE PTR [ecx-0x20aede5d],dh
  40e6e9:	arpl   WORD PTR [ebp+0x29],cx
  40e6ec:	mov    esp,DWORD PTR [ebx+0x90d594d]
  40e6f2:	fs jmp 0x40e748
  40e6f5:	xchg   esi,eax
  40e6f6:	mov    ds:0x7e76954f,eax
  40e6fb:	push   edi
  40e6fc:	dec    edi
  40e6fd:	pop    es
  40e6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ff:	lods   eax,DWORD PTR ds:[esi]
  40e701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e702:	jbe    0x40e69d
  40e704:	xor    ah,bl
  40e706:	adc    ecx,ecx
  40e708:	sti    
  40e709:	xor    ebp,DWORD PTR [ebp-0x25]
  40e70c:	adc    BYTE PTR [edx+0x10],dl
  40e70f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e710:	pop    esi
  40e711:	dec    ebx
  40e712:	or     ah,BYTE PTR [ebx]
  40e714:	and    BYTE PTR [edi],bh
  40e716:	dec    edi
  40e717:	jmp    0x2277:0xf613177
  40e71e:	inc    esi
  40e71f:	lds    edx,FWORD PTR [edx+0x3d9707a9]
  40e725:	adc    ebx,eax
  40e727:	std    
  40e728:	ins    DWORD PTR es:[edi],dx
  40e729:	cwde   
  40e72a:	cwde   
  40e72b:	cdq    
  40e72c:	ret    0xf94a
  40e72f:	mov    ch,0x1a
  40e731:	xchg   BYTE PTR [ebx],ch
  40e733:	xchg   ebx,eax
  40e734:	xor    DWORD PTR [ecx*8-0x171d8b60],ebx
  40e73b:	adc    al,0xeb
  40e73d:	pop    ss
  40e73e:	stos   DWORD PTR es:[edi],eax
  40e73f:	int    0x2b
  40e741:	mov    al,ds:0xe25c5170
  40e746:	cmc    
  40e747:	xchg   esp,eax
  40e748:	test   DWORD PTR [ebx+eax*4-0x454be6b6],0xfe44a64d
  40e753:	fidiv  DWORD PTR [ecx]
  40e755:	mov    ds:0x1348899c,al
  40e75a:	frstpm(287 only) 
  40e75c:	jmp    0x40e7d0
  40e75e:	sti    
  40e75f:	or     al,0xbc
  40e761:	stos   BYTE PTR es:[edi],al
  40e762:	xor    edi,DWORD PTR [eax-0x5974367b]
  40e768:	dec    ebp
  40e769:	fdivr  st,st(4)
  40e76b:	inc    ecx
  40e76c:	push   ebp
  40e76d:	jbe    0x40e70c
  40e76f:	dec    esp
  40e770:	or     eax,DWORD PTR ds:0x86fa2e90
  40e776:	loope  0x40e764
  40e778:	enter  0x913b,0xa6
  40e77c:	xor    BYTE PTR [edi+0x1d],dh
  40e77f:	or     eax,0xfca1783b
  40e784:	mov    ah,0x37
  40e786:	pop    es
  40e787:	test   DWORD PTR [edx+0x54e5524b],esi
  40e78d:	push   0x70
  40e78f:	aaa    
  40e790:	ins    DWORD PTR es:[edi],dx
  40e791:	xchg   ebp,eax
  40e792:	dec    edx
  40e793:	mov    cl,0xa2
  40e795:	jecxz  0x40e796
  40e797:	lea    edx,[esp+edi*4-0x61]
  40e79b:	test   eax,0xef6be157
  40e7a0:	jecxz  0x40e811
  40e7a2:	jg     0x40e75c
  40e7a4:	ins    DWORD PTR es:[edi],dx
  40e7a5:	stos   DWORD PTR es:[edi],eax
  40e7a6:	mov    bl,0x7a
  40e7a8:	retf   
  40e7a9:	je     0x40e821
  40e7ab:	push   0xfc772223
  40e7b0:	ja     0x40e81b
  40e7b2:	mov    eax,0x355ff2c8
  40e7b7:	adc    esp,DWORD PTR [ecx+ebx*4-0x49]
  40e7bb:	jmp    0x40e810
  40e7bd:	pop    esi
  40e7be:	pop    edx
  40e7bf:	test   eax,0x77b8cd7c
  40e7c4:	cmp    bh,BYTE PTR [ecx]
  40e7c6:	cmp    al,0xd7
  40e7c8:	and    cl,BYTE PTR [edi-0x17]
  40e7cb:	mov    DWORD PTR [ebx+0x3d],esi
  40e7ce:	pop    edx
  40e7cf:	pop    edx
  40e7d0:	sti    
  40e7d1:	pop    ebx
  40e7d2:	jmp    esp
  40e7d4:	or     ebx,0xffffffbf
  40e7d7:	mov    gs,ecx
  40e7d9:	ret    0x3d5b
  40e7dc:	sbb    DWORD PTR [ebx+ebp*2],0x4293cc7e
  40e7e3:	imul   edi,DWORD PTR [ebx],0xc074de43
  40e7e9:	stc    
  40e7ea:	jle    0x40e836
  40e7ec:	paddsb mm2,QWORD PTR [esi+0x78b3696d]
  40e7f3:	pop    ebp
  40e7f4:	and    eax,edi
  40e7f6:	mov    al,0xd3
  40e7f8:	call   0xe75df958
  40e7fd:	std    
  40e7fe:	ins    DWORD PTR es:[edi],dx
  40e7ff:	mov    al,0x27
  40e801:	pop    esi
  40e802:	lds    esp,FWORD PTR gs:[edx-0x7e]
  40e806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e807:	sub    al,0xc5
  40e809:	rol    esi,0x20
  40e80c:	add    eax,0xc22ca20d
  40e811:	xchg   BYTE PTR [edx+0x666c92a2],al
  40e817:	into   
  40e818:	dec    esi
  40e819:	stos   BYTE PTR es:[edi],al
  40e81a:	adc    eax,0xe1214540
  40e81f:	outs   dx,DWORD PTR ds:[esi]
  40e820:	inc    edx
  40e821:	inc    esp
  40e822:	mov    ebp,0x914da3de
  40e827:	add    DWORD PTR [ebx+0x2a06316b],ebx
  40e82d:	jno    0x40e89e
  40e82f:	mov    ah,0x18
  40e831:	add    BYTE PTR [ecx-0x13aad3f2],dh
  40e837:	xor    al,0xbc
  40e839:	jns    0x40e870
  40e83b:	xchg   ebx,eax
  40e83c:	sub    eax,0x7ed7489d
  40e841:	or     eax,0x89f53322
  40e846:	mov    fs,WORD PTR [edi]
  40e848:	push   es
  40e849:	test   al,0xfd
  40e84b:	ss out 0x5a,eax
  40e84e:	lock mov al,BYTE PTR cs:[ebx-0x1e1c20a4]
  40e856:	pop    edx
  40e857:	sbb    ch,ah
  40e859:	fbstp  TBYTE PTR [ebx-0xed77e2e]
  40e85f:	push   edx
  40e860:	cmp    bl,BYTE PTR [ecx+0x54a93dfc]
  40e866:	mov    edi,0x7623dfec
  40e86b:	out    dx,al
  40e86c:	mov    ds:0xc7f05802,al
  40e871:	sub    BYTE PTR [ebx-0x6999a51e],dh
  40e877:	lahf   
  40e878:	adc    dl,BYTE PTR [eax-0x4f0a41f5]
  40e87e:	add    eax,0xbec4de0c
  40e883:	in     eax,0xe2
  40e885:	fmul   QWORD PTR [edx]
  40e887:	aaa    
  40e888:	inc    esp
  40e889:	outs   dx,BYTE PTR ds:[esi]
  40e88a:	test   al,0x5
  40e88c:	jmp    0x83fb:0x698f14d0
  40e893:	dec    ebx
  40e894:	into   
  40e895:	and    bl,BYTE PTR [edx-0x2b]
  40e898:	push   0x5d
  40e89a:	sub    BYTE PTR [ecx+0x3b],bl
  40e89d:	mov    edi,0x45c6c57f
  40e8a2:	pop    es
  40e8a3:	outs   dx,BYTE PTR ds:[esi]
  40e8a4:	dec    edx
  40e8a5:	or     BYTE PTR [edx+0x6d3cb796],bh
  40e8ab:	je     0x40e86e
  40e8ad:	inc    edx
  40e8ae:	cdq    
  40e8af:	loope  0x40e84a
  40e8b1:	inc    ebx
  40e8b2:	xor    eax,0xfe2b3a2d
  40e8b7:	js     0x40e921
  40e8b9:	pop    esi
  40e8ba:	pop    es
  40e8bb:	add    ecx,esp
  40e8bd:	data16 (bad) 
  40e8bf:	(bad)  
  40e8c0:	ffreep st(4)
  40e8c2:	gs mov cl,0x5e
  40e8c5:	or     bh,dl
  40e8c7:	push   esi
  40e8c8:	arpl   cx,si
  40e8ca:	adc    cl,dh
  40e8cc:	sbb    ecx,edi
  40e8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8cf:	enter  0xf110,0x47
  40e8d3:	dec    edx
  40e8d4:	mov    esi,0x6ad33332
  40e8d9:	jl     0x40e873
  40e8db:	jmp    0x3c283689
  40e8e0:	ret    0x197f
  40e8e3:	outs   dx,DWORD PTR ds:[esi]
  40e8e4:	pop    ss
  40e8e5:	jecxz  0x40e8ea
  40e8e7:	aaa    
  40e8e8:	jge    0x40e92b
  40e8ea:	les    esi,FWORD PTR [ebx]
  40e8ec:	pop    eax
  40e8ed:	test   DWORD PTR [ecx-0x7a],esp
  40e8f0:	sbb    DWORD PTR ds:0x705efb8,edi
  40e8f6:	sub    bh,BYTE PTR [ebp-0x46c8916d]
  40e8fc:	ins    BYTE PTR es:[edi],dx
  40e8fd:	mov    eax,0xade4af7
  40e902:	mov    WORD PTR [eax+0x55aa0b25],fs
  40e908:	or     ecx,DWORD PTR [ebp+0x7032e045]
  40e90e:	lahf   
  40e90f:	add    BYTE PTR [eax+0x199fe768],ch
  40e915:	adc    cl,BYTE PTR [edx-0x13]
  40e918:	std    
  40e919:	lock ds mov ebp,0xe886aed0
  40e920:	aam    0xf7
  40e922:	mov    ah,BYTE PTR [edi+0x7d]
  40e925:	push   edi
  40e926:	mov    al,0x93
  40e928:	shl    DWORD PTR [esi+0x78],1
  40e92b:	mov    ah,0xb4
  40e92d:	mov    ds:0xca6f2da8,al
  40e932:	ins    BYTE PTR es:[edi],dx
  40e933:	clc    
  40e934:	add    ebx,esp
  40e936:	js     0x40e96c
  40e938:	and    DWORD PTR [edx+0x5],0xe82cff23
  40e93f:	xchg   esp,eax
  40e940:	and    esp,esp
  40e942:	test   eax,0xa1f6329f
  40e947:	lahf   
  40e948:	jbe    0x40e90a
  40e94a:	lods   eax,DWORD PTR ds:[esi]
  40e94b:	outs   dx,BYTE PTR ds:[esi]
  40e94c:	push   edi
  40e94d:	std    
  40e94e:	cwde   
  40e94f:	cwde   
  40e950:	(bad)  
  40e951:	cmp    edi,ecx
  40e953:	pop    es
  40e954:	mov    esi,0x1c398de
  40e959:	arpl   ax,cx
  40e95b:	shl    DWORD PTR [ebx-0x4c],1
  40e95e:	(bad)  
  40e95f:	call   0x872507d4
  40e964:	add    esp,DWORD PTR [ebx]
  40e966:	dec    esi
  40e967:	mov    eax,ds:0xc92b46e9
  40e96c:	bound  eax,QWORD PTR [eax]
  40e96e:	and    eax,0x13ea2709
  40e973:	sub    eax,0x50e4ca
  40e978:	push   esp
  40e979:	ds jns 0x40e94f
  40e97c:	adc    eax,0x6fde6772
  40e981:	xchg   edx,eax
  40e982:	mov    eax,ds:0xdc2c1aca
  40e987:	push   esi
  40e988:	(bad)  
  40e98a:	cli    
  40e98b:	adc    ecx,0xfffffffd
  40e98e:	cld    
  40e98f:	fbstp  TBYTE PTR [ecx]
  40e991:	mov    ebp,0xee73cbdc
  40e996:	xor    dh,BYTE PTR [ebp-0x487c541c]
  40e99c:	jo     0x40e9d0
  40e99e:	sbb    ah,bl
  40e9a0:	push   ecx
  40e9a1:	shl    DWORD PTR [esi-0x30],0x54
  40e9a5:	dec    ebx
  40e9a6:	sub    edx,ebp
  40e9a8:	inc    ebx
  40e9a9:	mov    esp,0x88171e92
  40e9ae:	hlt    
  40e9af:	adc    esp,DWORD PTR ds:0x4cd485d5
  40e9b5:	mov    ds,WORD PTR [esi]
  40e9b7:	je     0x40e944
  40e9b9:	dec    ecx
  40e9ba:	pop    ebp
  40e9bb:	fsubr  st(0),st
  40e9bd:	stos   DWORD PTR es:[edi],eax
  40e9be:	xor    BYTE PTR [ebp+eiz*8+0x79],ch
  40e9c2:	mov    eax,ds:0x78848f91
  40e9c7:	mul    BYTE PTR [edx-0x24]
  40e9ca:	or     eax,0x21355a35
  40e9cf:	rcl    DWORD PTR [esi-0x45],0x74
  40e9d3:	in     eax,0x52
  40e9d5:	lahf   
  40e9d6:	push   ecx
  40e9d7:	sub    BYTE PTR [ecx-0x5],cl
  40e9da:	(bad)  
  40e9dc:	pop    ss
  40e9dd:	xchg   ebp,eax
  40e9de:	stos   BYTE PTR es:[edi],al
  40e9df:	es sub ecx,esi
  40e9e2:	into   
  40e9e3:	dec    edx
  40e9e4:	jno    0x40e9be
  40e9e6:	add    ebp,0x788ad97d
  40e9ec:	adc    BYTE PTR [esi],0x5d
  40e9ef:	data16 icebp 
  40e9f1:	mov    ah,al
  40e9f3:	test   al,0x85
  40e9f5:	int3   
  40e9f6:	or     DWORD PTR [esi-0x5e680f1],edx
  40e9fc:	pushf  
  40e9fd:	test   DWORD PTR [esi+0x2b],esi
  40ea00:	sub    eax,0x5f06df80
  40ea05:	lock xchg ebx,eax
  40ea07:	mov    dl,0x35
  40ea09:	into   
  40ea0a:	bnd jno 0x40e99c
  40ea0d:	leave  
  40ea0e:	or     bh,bl
  40ea10:	push   edx
  40ea11:	outs   dx,BYTE PTR ds:[esi]
  40ea12:	std    
  40ea13:	adc    ah,BYTE PTR [ebx]
  40ea15:	jo     0x40ea4e
  40ea17:	adc    BYTE PTR [esi+0x5e],ch
  40ea1a:	or     cl,ch
  40ea1c:	pusha  
  40ea1d:	sub    DWORD PTR [edi+eiz*8-0x51736e95],edi
  40ea24:	mov    ch,BYTE PTR [ebp-0x36bef9b4]
  40ea2a:	aaa    
  40ea2b:	jb     0x40ea9e
  40ea2d:	sbb    ah,BYTE PTR [esi+0xf]
  40ea30:	daa    
  40ea31:	cdq    
  40ea32:	dec    edx
  40ea33:	call   0x4053:0xd4fe9590
  40ea3a:	push   ecx
  40ea3b:	xor    DWORD PTR [edx-0x25f68792],eax
  40ea41:	daa    
  40ea42:	ds pushf 
  40ea44:	cmp    BYTE PTR [ebp-0xd],0xfe
  40ea48:	lock fild WORD PTR [eax+0x64]
  40ea4c:	xchg   edi,eax
  40ea4d:	test   al,0x7b
  40ea4f:	dec    edi
  40ea50:	(bad)  
  40ea51:	jle    0x40ea2b
  40ea53:	and    eax,0x1a27f523
  40ea58:	add    al,0x15
  40ea5a:	inc    esi
  40ea5b:	pop    ss
  40ea5c:	inc    BYTE PTR [ebp+ebp*8+0x13]
  40ea60:	imul   ebp,DWORD PTR [ecx-0x124cdd13],0x7e
  40ea67:	mov    edx,0xb53f892a
  40ea6c:	inc    edi
  40ea6d:	mov    edx,0x70b14aae
  40ea72:	pop    ebp
  40ea73:	push   esi
  40ea74:	mov    cl,BYTE PTR [ebp+0x6b]
  40ea77:	push   0x7f
  40ea79:	cmp    al,0xe0
  40ea7b:	fistp  QWORD PTR [esi+0x5fdf155e]
  40ea81:	jns    0x40ea66
  40ea83:	data16 xchg BYTE PTR [edi],bl
  40ea86:	and    ebx,DWORD PTR [ebx+0x31b4b1ac]
  40ea8c:	ja     0x40eac1
  40ea8e:	dec    DWORD PTR [edi]
  40ea90:	add    bl,cl
  40ea92:	ret    0xb3ed
  40ea95:	dec    esi
  40ea96:	push   ecx
  40ea97:	push   ebx
  40ea98:	push   edi
  40ea99:	test   eax,0xb7cef500
  40ea9e:	ins    BYTE PTR es:[edi],dx
  40ea9f:	test   BYTE PTR [edx],bl
  40eaa1:	push   esp
  40eaa2:	mov    BYTE PTR ss:[edi],bl
  40eaa5:	mov    bh,0xad
  40eaa7:	mov    al,0x72
  40eaa9:	mov    dl,0x2b
  40eaab:	mov    esi,0x9e203a9b
  40eab0:	lock mov eax,ds:0xddfd6cf7
  40eab6:	popf   
  40eab7:	leave  
  40eab8:	repz icebp 
  40eaba:	lds    ebx,FWORD PTR ds:0xbe4b65ce
  40eac0:	pushf  
  40eac1:	rcr    dl,cl
  40eac3:	or     edx,DWORD PTR [esi]
  40eac5:	sub    al,0x85
  40eac7:	lods   eax,DWORD PTR ds:[esi]
  40eac8:	or     eax,DWORD PTR [ecx]
  40eaca:	xchg   esi,eax
  40eacb:	pop    es
  40eacc:	stos   DWORD PTR es:[edi],eax
  40eacd:	xor    edi,0xf6bd503d
  40ead3:	inc    edx
  40ead4:	xor    eax,0xea0b080e
  40ead9:	sti    
  40eada:	mov    DWORD PTR [ecx],ecx
  40eadc:	sub    ch,BYTE PTR [edi]
  40eade:	jl     0x40eb4a
  40eae0:	xchg   edx,eax
  40eae1:	fidiv  DWORD PTR [eax+0x5ea7a146]
  40eae7:	sar    DWORD PTR [eax-0x3c2d6f00],cl
  40eaed:	jmp    0xae57:0x72857973
  40eaf4:	jns    0x40eaaf
  40eaf6:	pop    edx
  40eaf7:	fst    DWORD PTR [edx+0x1d6846f]
  40eafd:	push   ds
  40eafe:	vmread ebp,eax
  40eb01:	sbb    eax,0x2e46380b
  40eb06:	popa   
  40eb07:	mov    esp,0x9cf73c26
  40eb0c:	add    bl,BYTE PTR [ebp-0x60]
  40eb0f:	sbb    BYTE PTR [eax-0x2],dl
  40eb12:	push   ebp
  40eb13:	fbstp  TBYTE PTR [ecx-0x57]
  40eb16:	call   0xe65c:0xeb26d1c0
  40eb1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb1e:	pop    edi
  40eb1f:	cmp    al,0x6e
  40eb21:	cmp    DWORD PTR [ebx+edx*8+0x13],edi
  40eb25:	pushf  
  40eb26:	pop    ss
  40eb27:	mov    ch,0x73
  40eb29:	jmp    0x40eae2
  40eb2b:	or     al,0x8
  40eb2d:	fs (bad) 
  40eb2f:	inc    edi
  40eb30:	js     0x40eb04
  40eb32:	jge    0x40eafb
  40eb34:	mov    ds:0xb2e4a83c,al
  40eb39:	imul   esp,DWORD PTR [esi+0x332a371],0xffffff84
  40eb40:	xchg   ebp,eax
  40eb41:	xor    ch,BYTE PTR [ecx-0xb]
  40eb44:	xor    BYTE PTR [eax+edx*1],ah
  40eb47:	repz and al,0xff
  40eb4a:	jae    0x40eae3
  40eb4c:	cld    
  40eb4d:	or     eax,0x33aa609a
  40eb52:	adc    al,0x86
  40eb54:	adc    BYTE PTR [ebp+0x4331750f],ch
  40eb5a:	xor    eax,0xe3c76dd9
  40eb5f:	sbb    ah,BYTE PTR [ebp-0x68]
  40eb62:	jnp    0x40eb33
  40eb64:	mov    ebx,0xef6a2494
  40eb69:	adc    eax,0x9aed64ff
  40eb6e:	scas   al,BYTE PTR es:[edi]
  40eb6f:	fwait
  40eb70:	inc    esi
  40eb71:	push   0xd2451c8f
  40eb76:	xchg   ebp,eax
  40eb77:	lock pop ss
  40eb79:	cmp    ebx,DWORD PTR [ecx+0x1b]
  40eb7c:	test   DWORD PTR [ebp+edi*2-0x72e93365],ecx
  40eb83:	fbld   TBYTE PTR [ebx-0x68]
  40eb86:	push   edi
  40eb87:	mov    bl,0x36
  40eb89:	outs   dx,DWORD PTR ds:[esi]
  40eb8a:	jmp    0x29be2b4a
  40eb8f:	retf   0xcfca
  40eb92:	lods   eax,DWORD PTR ds:[esi]
  40eb93:	and    BYTE PTR [esi],cl
  40eb95:	ror    DWORD PTR [ecx+eax*4],1
  40eb98:	outs   dx,DWORD PTR ds:[esi]
  40eb99:	mov    ah,0x16
  40eb9b:	scas   eax,DWORD PTR es:[edi]
  40eb9c:	cld    
  40eb9d:	xor    BYTE PTR [ecx],bl
  40eb9f:	popa   
  40eba0:	jmp    0x568bd974
  40eba5:	int3   
  40eba6:	(bad)  
  40eba7:	lds    ecx,FWORD PTR [ecx]
  40eba9:	ins    BYTE PTR es:[edi],dx
  40ebaa:	iret   
  40ebab:	lods   al,BYTE PTR ds:[esi]
  40ebac:	push   0xffffffd4
  40ebae:	hlt    
  40ebaf:	inc    ebx
  40ebb0:	or     BYTE PTR [esi],0x97
  40ebb3:	stc    
  40ebb4:	stos   DWORD PTR es:[edi],eax
  40ebb5:	cmp    eax,0xb1a5f43c
  40ebba:	mov    eax,0x8b6d9b69
  40ebbf:	xor    dh,BYTE PTR [edx-0x38]
  40ebc2:	repz or BYTE PTR [ecx+0x3f033fc9],al
  40ebc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebca:	adc    cl,ch
  40ebcc:	adc    esi,0xfffffff7
  40ebcf:	xchg   ebx,eax
  40ebd0:	xor    BYTE PTR [edx-0x650bcab9],ah
  40ebd6:	mov    ds:0xfa1695a1,eax
  40ebdb:	cmp    ebp,ebp
  40ebdd:	inc    eax
  40ebde:	ins    BYTE PTR es:[edi],dx
  40ebdf:	mov    eax,ds:0xdb93fbfe
  40ebe4:	cmp    al,0x8e
  40ebe6:	cwde   
  40ebe7:	sub    eax,0xbdec6a87
  40ebec:	pusha  
  40ebed:	ret    
  40ebee:	mov    ah,0xef
  40ebf0:	mov    ch,0x29
  40ebf2:	aam    0x70
  40ebf4:	sub    BYTE PTR [eax+ecx*1-0x7d],0x38
  40ebf9:	push   ss
  40ebfa:	push   eax
  40ebfb:	or     BYTE PTR [eax-0x30],bh
  40ebfe:	imul   esi,edi,0xf805f5e8
  40ec04:	in     eax,dx
  40ec05:	ja     0x40eba7
  40ec07:	packssdw mm3,mm7
  40ec0a:	jno    0x40ec5c
  40ec0c:	test   al,0x27
  40ec0e:	sar    BYTE PTR [ecx-0x727c89ab],1
  40ec14:	ror    BYTE PTR [edx+ecx*4],1
  40ec17:	int    0xeb
  40ec19:	div    BYTE PTR [ebx]
  40ec1b:	ret    
  40ec1c:	sbb    BYTE PTR [edi+0x70],al
  40ec1f:	hlt    
  40ec20:	lods   eax,DWORD PTR ds:[esi]
  40ec21:	lock push es
  40ec23:	sahf   
  40ec24:	ja     0x40ebdd
  40ec26:	enter  0xf754,0x5a
  40ec2a:	int3   
  40ec2b:	and    al,0xe9
  40ec2d:	clc    
  40ec2e:	fwait
  40ec2f:	pop    ss
  40ec30:	mov    edi,0x8fbd1be7
  40ec35:	pop    ebp
  40ec36:	mov    dh,0xf0
  40ec38:	rol    ecx,cl
  40ec3a:	std    
  40ec3b:	jge    0x40ec53
  40ec3d:	mov    al,ds:0xa5989ebd
  40ec42:	push   0x704d13c3
  40ec47:	sub    al,0xcc
  40ec49:	retf   0x3e18
  40ec4c:	pushf  
  40ec4d:	push   ebx
  40ec4e:	or     cl,bh
  40ec50:	into   
  40ec51:	clc    
  40ec52:	enter  0xf69a,0x5b
  40ec56:	push   ecx
  40ec57:	push   ebx
  40ec58:	dec    eax
  40ec59:	and    edi,DWORD PTR [esi+0x6f8ff5bd]
  40ec5f:	stc    
  40ec60:	jl     0x40ec68
  40ec62:	lock icebp 
  40ec64:	gs popf 
  40ec66:	neg    BYTE PTR [edx-0x2b]
  40ec69:	es mov dl,0x11
  40ec6c:	icebp  
  40ec6d:	pop    ebx
  40ec6e:	ins    DWORD PTR es:[edi],dx
  40ec6f:	xchg   ecx,eax
  40ec70:	into   
  40ec71:	inc    ecx
  40ec72:	push   0x5b
  40ec74:	aad    0x56
  40ec76:	push   esp
  40ec77:	dec    esi
  40ec78:	iret   
  40ec79:	fstp   TBYTE PTR [edx]
  40ec7b:	and    eax,0xcd57182b
  40ec80:	jb     0x40ece1
  40ec82:	xor    edx,DWORD PTR [edx]
  40ec84:	iret   
  40ec85:	xchg   ebx,eax
  40ec86:	jecxz  0x40eced
  40ec88:	cmp    al,0xf
  40ec8a:	and    ebp,edi
  40ec8c:	pop    ebp
  40ec8d:	sub    ecx,ebp
  40ec8f:	xchg   BYTE PTR [edi],ah
  40ec91:	push   0x5e
  40ec93:	dec    ecx
  40ec94:	sub    al,0x5d
  40ec96:	inc    edi
  40ec97:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ec99:	div    dl
  40ec9b:	in     al,0xfc
  40ec9d:	stos   DWORD PTR es:[edi],eax
  40ec9e:	or     ebx,ebp
  40eca0:	jae    0x40ec84
  40eca2:	fdiv   DWORD PTR [edi-0x5c]
  40eca5:	popa   
  40eca6:	mov    ds:0x8c2fbceb,ax
  40ecac:	push   es
  40ecad:	mov    al,0x4e
  40ecaf:	pop    edx
  40ecb0:	sub    eax,0xe427b583
  40ecb5:	(bad)  [edi]
  40ecb7:	fsubrp st(3),st
  40ecb9:	pop    ebx
  40ecba:	mov    esi,0xd2b99bb8
  40ecbf:	bound  ecx,QWORD PTR [eax+0x57]
  40ecc2:	mov    esp,0x63fd27fd
  40ecc7:	loop   0x40ec9e
  40ecc9:	mov    bl,0x34
  40eccb:	retf   
  40eccc:	add    al,0x61
  40ecce:	dec    ebx
  40eccf:	fidivr DWORD PTR [eax+0xd]
  40ecd2:	loope  0x40ec77
  40ecd4:	add    BYTE PTR [ebx],al
  40ecd6:	push   edi
  40ecd7:	push   cs
  40ecd8:	ins    DWORD PTR es:[edi],dx
  40ecd9:	test   eax,0x840b4752
  40ecde:	test   eax,0x347869c
  40ece3:	cmp    dl,ah
  40ece5:	jb     0x40ec8c
  40ece7:	add    ecx,esp
  40ece9:	stos   DWORD PTR es:[edi],eax
  40ecea:	rol    BYTE PTR [esi-0x73],0xc9
  40ecee:	ja     0x40ed4f
  40ecf0:	jmp    0x510fadf4
  40ecf5:	(bad)  
  40ecf6:	add    al,BYTE PTR [edi+0x6b2fe40b]
  40ecfc:	jne    0x40eca9
  40ecfe:	adc    al,0xa0
  40ed00:	jmp    0x55e383ca
  40ed05:	jnp    0x40ed82
  40ed07:	cmp    eax,0x4ef695e
  40ed0c:	ret    
  40ed0d:	mov    al,ds:0xff68cfde
  40ed12:	ret    0xbcc8
  40ed15:	xchg   ebx,eax
  40ed16:	call   0xa05b554
  40ed1b:	xchg   esp,eax
  40ed1c:	cmp    esp,DWORD PTR [esi-0x1d]
  40ed1f:	in     al,dx
  40ed20:	push   ebx
  40ed21:	aam    0xc0
  40ed23:	mov    ds:0x21b80038,eax
  40ed28:	frstor [ecx]
  40ed2a:	xchg   edx,eax
  40ed2b:	iret   
  40ed2c:	test   DWORD PTR [edx-0x1d2d688a],esi
  40ed32:	fisubr DWORD PTR [ecx+eiz*8+0x32b9af41]
  40ed39:	rcl    BYTE PTR ds:0xe6097b00,cl
  40ed3f:	push   ds
  40ed40:	mov    ecx,cs
  40ed42:	stc    
  40ed43:	push   ebx
  40ed44:	or     eax,DWORD PTR [ebp+0x1069de3]
  40ed4a:	rcr    DWORD PTR [esi-0x20f5e7d8],1
  40ed50:	fnstsw WORD PTR [esi-0x40]
  40ed53:	pop    ss
  40ed54:	sub    BYTE PTR [ebx-0x63],0xd5
  40ed58:	jge    0x40ed58
  40ed5a:	loop   0x40ed86
  40ed5c:	arpl   WORD PTR ds:0xe97a2816,cx
  40ed62:	pop    ebx
  40ed63:	cld    
  40ed64:	jno    0x40ed40
  40ed66:	jle    0x40ed3a
  40ed68:	fnsetpm(287 only) 
  40ed6a:	jmp    FWORD PTR [ecx-0x2d]
  40ed6d:	clc    
  40ed6e:	jecxz  0x40ed65
  40ed70:	jb     0x40ed87
  40ed72:	cmc    
  40ed73:	loop   0x40edab
  40ed75:	dec    esi
  40ed76:	ja     0x40ed52
  40ed78:	cmp    esp,DWORD PTR [edi+0x371df1b5]
  40ed7e:	aad    0xa2
  40ed80:	popf   
  40ed81:	jp     0x40edf1
  40ed83:	into   
  40ed84:	into   
  40ed85:	xchg   edi,eax
  40ed86:	imul   ebx,ebp,0x282ed58f
  40ed8c:	adc    DWORD PTR [esi-0x1e2db80e],esp
  40ed92:	mov    dl,0xc7
  40ed94:	jns    0x40edde
  40ed96:	out    dx,al
  40ed97:	sbb    dh,dl
  40ed99:	les    esp,FWORD PTR [edx+0x6b]
  40ed9c:	ret    0x4c5
  40ed9f:	push   eax
  40eda0:	inc    edx
  40eda1:	push   es
  40eda2:	retf   0x4a84
  40eda5:	(bad)
  40eda9:	xchg   DWORD PTR [esi-0x75],esi
  40edac:	loopne 0x40eda9
  40edae:	and    BYTE PTR [esp+esi*8+0x8b6b55a],bh
  40edb5:	pop    eax
  40edb6:	fisttp QWORD PTR [ebp+0x52]
  40edb9:	dec    ebx
  40edba:	jae    0x40ee1c
  40edbc:	sti    
  40edbd:	cli    
  40edbe:	imul   BYTE PTR [ebx+0x383fbf]
  40edc4:	ins    BYTE PTR es:[edi],dx
  40edc5:	aas    
  40edc6:	xlat   BYTE PTR ds:[ebx]
  40edc7:	iret   
  40edc8:	lahf   
  40edc9:	pop    es
  40edca:	cmp    eax,0xcb22260b
  40edcf:	jmp    0x40ed9e
  40edd1:	sbb    DWORD PTR [esi-0x3d],edi
  40edd4:	pop    edi
  40edd5:	(bad)  
  40edd6:	xchg   esi,eax
  40edd7:	(bad)  [edx]
  40edd9:	call   0xfbc7:0x325a87c2
  40ede0:	jmp    0x40edbf
  40ede2:	pop    ss
  40ede3:	jae    0x40ee48
  40ede5:	mov    BYTE PTR [edx+edx*8],bl
  40ede8:	pop    edx
  40ede9:	add    edi,DWORD PTR [ebx-0x1a8e0eb5]
  40edef:	lahf   
  40edf0:	add    bl,al
  40edf2:	bsf    eax,DWORD PTR [esi+0x10374bbd]
  40edf9:	popa   
  40edfa:	jnp    0x40edca
  40edfc:	inc    edi
  40edfd:	and    ah,BYTE PTR [edi]
  40edff:	int3   
  40ee00:	xchg   ecx,eax
  40ee01:	jno    0x40ed95
  40ee03:	pusha  
  40ee04:	mov    ebp,0x14aac765
  40ee09:	or     esp,DWORD PTR ds:0x8661aef0
  40ee0f:	push   ebp
  40ee10:	aaa    
  40ee11:	push   cs
  40ee12:	adc    al,0xa7
  40ee14:	adc    dl,BYTE PTR [edx]
  40ee16:	fst    st(3)
  40ee18:	xlat   BYTE PTR ds:[ebx]
  40ee19:	aam    0xc4
  40ee1b:	ret    
  40ee1c:	test   BYTE PTR [eax+0x46223bc3],0xd9
  40ee23:	iret   
  40ee24:	mov    ds:0x8d5983bf,eax
  40ee29:	xchg   ebx,eax
  40ee2a:	inc    edi
  40ee2b:	adc    BYTE PTR [ecx+0x6ccc5346],bl
  40ee31:	jnp    0x40ee9c
  40ee33:	jecxz  0x40ee72
  40ee35:	mov    ch,0x7
  40ee37:	repz aas 
  40ee39:	(bad)  
  40ee3a:	pop    ss
  40ee3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3c:	mov    dl,0x88
  40ee3e:	sbb    eax,0x8f74bdae
  40ee43:	stos   DWORD PTR es:[edi],eax
  40ee44:	sbb    al,0x51
  40ee46:	dec    esp
  40ee47:	dec    ebx
  40ee48:	inc    eax
  40ee49:	retf   0xe69
  40ee4c:	cwde   
  40ee4d:	sahf   
  40ee4e:	dec    eax
  40ee4f:	ret    0xf03a
  40ee52:	outs   dx,BYTE PTR ds:[esi]
  40ee53:	push   ds
  40ee54:	mov    WORD PTR [ecx+eax*1],cs
  40ee57:	test   DWORD PTR [ecx-0x1d],ebx
  40ee5a:	sub    al,BYTE PTR [esi+0x14644f8d]
  40ee60:	adc    al,0x3a
  40ee62:	shl    ax,0x34
  40ee66:	dec    edi
  40ee67:	loop   0x40ee04
  40ee69:	mov    DWORD PTR [ebp-0x4f],ebp
  40ee6c:	lea    edx,[ecx]
  40ee6e:	outs   dx,DWORD PTR gs:[esi]
  40ee70:	and    eax,DWORD PTR [ebp+0x40]
  40ee73:	arpl   WORD PTR [ecx],ax
  40ee75:	je     0x40ee88
  40ee77:	pop    ds
  40ee78:	fist   WORD PTR [ebx-0x4b]
  40ee7b:	dec    ecx
  40ee7c:	sub    DWORD PTR [ebx-0x36],eax
  40ee7f:	mov    ds,WORD PTR [ebp-0x1b2afe25]
  40ee85:	xchg   ebp,eax
  40ee86:	xor    edi,ecx
  40ee88:	mov    ecx,0x9cd40a13
  40ee8d:	adc    ebx,DWORD PTR [edi-0x73ec3173]
  40ee93:	fcmovnbe st,st(0)
  40ee95:	push   cs
  40ee96:	push   0xe24bebaf
  40ee9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee9c:	inc    esi
  40ee9d:	adc    eax,0x888df88f
  40eea2:	or     eax,0x7b1457f4
  40eea7:	sub    ch,BYTE PTR cs:[edx]
  40eeaa:	(bad)  
  40eeab:	js     0x40ee85
  40eead:	jns    0x40eeb8
  40eeaf:	dec    edx
  40eeb0:	loopne 0x40ef0f
  40eeb2:	call   0x351:0x1b45aeb3
  40eeb9:	ins    DWORD PTR es:[edi],dx
  40eeba:	mov    WORD PTR [ebx+0x21],?
  40eebd:	es inc ecx
  40eebf:	sub    bh,BYTE PTR [esi-0x31020b4f]
  40eec5:	adc    BYTE PTR [esi*8+0x3314f834],bl
  40eecc:	sbb    eax,0xaaab8a9b
  40eed1:	popf   
  40eed2:	hlt    
  40eed3:	fdiv   QWORD PTR [edi]
  40eed5:	gs repnz fcmovbe st,st(3)
  40eed9:	test   DWORD PTR [esp+esi*8+0x890b270],0x12498320
  40eee4:	inc    esi
  40eee5:	icebp  
  40eee6:	dec    dl
  40eee8:	fiadd  DWORD PTR [ebx-0x40bfb927]
  40eeee:	bound  ecx,QWORD PTR [edi+0x45cfb426]
  40eef4:	vp4dpwssd zmm3{k2},zmm7,xmm3
  40eefa:	fisttp WORD PTR [ebp+0x70]
  40eefd:	mov    edx,0xdcabd5a9
  40ef02:	mov    bl,0xee
  40ef04:	idiv   DWORD PTR [ecx+0x3113931d]
  40ef0a:	adc    ch,0x68
  40ef0d:	sub    esp,DWORD PTR [esi-0x67]
  40ef10:	adc    BYTE PTR [edx+0x73],dh
  40ef13:	push   ebp
  40ef14:	repz rcr DWORD PTR [esi-0x187eb7fe],cl
  40ef1b:	rcr    al,1
  40ef1d:	(bad)  
  40ef1e:	push   edx
  40ef1f:	(bad)  
  40ef20:	in     al,0x85
  40ef22:	ret    
  40ef23:	sub    BYTE PTR [ecx+0x12],cl
  40ef26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef27:	pop    edi
  40ef28:	cmp    ebx,edi
  40ef2a:	jno    0x40ef6d
  40ef2c:	adc    ah,BYTE PTR [edx-0x71]
  40ef2f:	pop    es
  40ef30:	retf   
  40ef31:	and    eax,0x89ee29d8
  40ef36:	mov    bl,0x68
  40ef38:	mov    bh,0x6a
  40ef3a:	push   0xffffffc1
  40ef3c:	out    0x8e,al
  40ef3e:	mov    bl,0x1
  40ef40:	push   edi
  40ef41:	mov    bl,0x62
  40ef43:	pop    edi
  40ef44:	dec    esp
  40ef45:	ret    
  40ef46:	mov    dl,BYTE PTR ds:[ecx]
  40ef49:	mov    cl,0x28
  40ef4b:	and    DWORD PTR [eax+0x5d5e5b3f],ebx
  40ef51:	xchg   esi,eax
  40ef52:	xor    DWORD PTR [eax+0x60],0xffffffff
  40ef56:	lock into 
  40ef58:	adc    ebp,DWORD PTR [edi]
  40ef5a:	xor    DWORD PTR [eax-0x4443582],esi
  40ef60:	in     eax,0x35
  40ef62:	mov    al,0x28
  40ef64:	test   esp,ecx
  40ef66:	inc    eax
  40ef67:	add    eax,0x9c38c594
  40ef6c:	add    DWORD PTR ss:[eax-0x6b],ebx
  40ef70:	imul   edi,DWORD PTR [ecx+eiz*1-0x6c],0x3d
  40ef75:	ja     0x40ef30
  40ef77:	outs   dx,DWORD PTR ds:[esi]
  40ef78:	int    0x2b
  40ef7a:	push   esi
  40ef7b:	std    
  40ef7c:	jb     0x40ef6e
  40ef7e:	test   eax,0xd862269f
  40ef83:	fwait
  40ef84:	aad    0x73
  40ef86:	and    DWORD PTR [eax+0x3969a465],esi
  40ef8c:	mov    esi,0x41f6fc0e
  40ef91:	mov    bh,0xb1
  40ef93:	jns    0x40ef20
  40ef95:	in     al,dx
  40ef96:	add    al,dl
  40ef98:	mov    esp,0xc048fb05
  40ef9d:	pop    ss
  40ef9e:	fs inc ecx
  40efa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efa1:	mov    ecx,0x8a834045
  40efa6:	mov    ebp,0xc7909cf1
  40efab:	mov    bl,0x33
  40efad:	or     DWORD PTR [ecx-0x21f17f67],0xffffff85
  40efb4:	dec    ecx
  40efb5:	add    ch,BYTE PTR [eax]
  40efb7:	jecxz  0x40ef4f
  40efb9:	sub    DWORD PTR [edx+0x6b],edi
  40efbc:	mov    fs,WORD PTR [ebp+0x10874a8a]
  40efc2:	jg     0x40ef7f
  40efc4:	xor    BYTE PTR [edx-0x35de7957],ch
  40efca:	pop    ebx
  40efcb:	popf   
  40efcc:	pusha  
  40efcd:	(bad)
  40efd0:	mov    ch,0xfd
  40efd2:	add    al,0xc8
  40efd4:	fs cmc 
  40efd6:	mov    ss,WORD PTR [ecx+0x4d]
  40efd9:	pop    ss
  40efda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efdb:	(bad)  
  40efdc:	imul   edi,DWORD PTR [ebp+esi*2+0x7b],0xb5fb74be
  40efe4:	je     0x40f019
  40efe6:	push   0xffffff8e
  40efe8:	sbb    al,0x88
  40efea:	inc    ecx
  40efeb:	xor    bh,BYTE PTR [eax-0x38f30a63]
  40eff1:	aaa    
  40eff2:	and    ebp,DWORD PTR [eax+ebp*4]
  40eff5:	cmp    DWORD PTR [eax+0x72e27f6b],ebp
  40effb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40effc:	sub    al,0x19
  40effe:	ss or  al,0x4
  40f001:	push   ds
  40f002:	xor    ebx,edi
  40f004:	jno    0x40f068
  40f006:	cmp    DWORD PTR [ebx+esi*8+0x66],0x7a8d7e5f
  40f00e:	test   BYTE PTR ds:0xe07b3af7,bl
  40f014:	mov    edi,0xb71a0521
  40f019:	mov    ds:0x34b42eb1,eax
  40f01e:	dec    edi
  40f01f:	fld    QWORD PTR [edi-0x54]
  40f022:	mov    dh,0x3c
  40f024:	cld    
  40f025:	jl     0x40f008
  40f027:	push   0xffffffca
  40f029:	or     dh,BYTE PTR [eax-0x1607b319]
  40f02f:	repz and ebp,DWORD PTR [ebx+0x2304712b]
  40f036:	and    BYTE PTR [edi],cl
  40f038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f039:	sub    DWORD PTR ds:0x1d15d970,edx
  40f03f:	ins    BYTE PTR es:[edi],dx
  40f040:	imul   edi,DWORD PTR [ebp+0x5d],0x583c250
  40f047:	inc    ecx
  40f048:	push   ss
  40f049:	xchg   esp,eax
  40f04a:	xchg   DWORD PTR [ebp-0x44],esp
  40f04d:	adc    eax,0x41157a1
  40f052:	mov    DWORD PTR [ecx+0x5b],0x66d926af
  40f059:	pop    eax
  40f05a:	into   
  40f05b:	(bad)  
  40f05c:	(bad)  [edx+0x22]
  40f05f:	pop    eax
  40f060:	xchg   ebp,eax
  40f061:	pop    ebx
  40f062:	dec    edi
  40f063:	dec    esp
  40f064:	and    cl,ch
  40f066:	popf   
  40f067:	add    cl,BYTE PTR [ebx+0xb]
  40f06a:	dec    edi
  40f06b:	mov    edi,DWORD PTR [eax+0x70]
  40f06e:	jae    0x40f0e0
  40f070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f071:	scas   eax,DWORD PTR es:[edi]
  40f072:	sbb    eax,0x6c27bc6c
  40f077:	adc    eax,0x7a2d12c6
  40f07c:	ret    0xe5d6
  40f07f:	mov    dx,0x9bd1
  40f083:	std    
  40f084:	jne    0x40f090
  40f086:	pusha  
  40f087:	add    eax,0xd5ee7bcd
  40f08c:	int3   
  40f08d:	or     ebp,0xffffffb6
  40f090:	push   ebx
  40f091:	outs   dx,BYTE PTR ds:[esi]
  40f092:	xor    eax,0x5a63a3e4
  40f097:	enter  0xad11,0xc3
  40f09b:	lahf   
  40f09c:	jl     0x40f04e
  40f09e:	loopne 0x40f09c
  40f0a0:	sbb    ch,dl
  40f0a2:	loop   0x40f067
  40f0a4:	fist   WORD PTR [eiz*4-0x43fde463]
  40f0ab:	mov    edx,0x16b02ded
  40f0b0:	das    
  40f0b1:	jl     0x40f047
  40f0b3:	jno    0x40f12b
  40f0b5:	adc    BYTE PTR [edx-0x33],bl
  40f0b8:	jnp    0x40f127
  40f0ba:	dec    eax
  40f0bb:	cli    
  40f0bc:	jnp    0x40f13b
  40f0be:	loop   0x40f11d
  40f0c0:	jae    0x40f05f
  40f0c2:	pop    edi
  40f0c3:	push   esi
  40f0c4:	fdivrp st(4),st
  40f0c6:	aad    0x6
  40f0c8:	add    ebx,DWORD PTR [edx+0x7b]
  40f0cb:	rol    BYTE PTR [esi+0x51],0x92
  40f0cf:	lock and dl,0x86
  40f0d3:	sti    
  40f0d4:	out    0xaf,al
  40f0d6:	test   DWORD PTR [ebx],edx
  40f0d8:	push   cs
  40f0d9:	jns    0x40f0da
  40f0db:	xor    esi,ecx
  40f0dd:	and    esp,0x1a
  40f0e0:	in     al,0xcf
  40f0e2:	sub    al,0x9b
  40f0e4:	xchg   ebp,eax
  40f0e5:	gs loopne 0x40f107
  40f0e8:	pop    ds
  40f0e9:	int3   
  40f0ea:	dec    ebx
  40f0eb:	sbb    al,0x2a
  40f0ed:	adc    al,0x84
  40f0ef:	rcr    DWORD PTR [edx],cl
  40f0f1:	push   ds
  40f0f2:	sub    al,0x78
  40f0f4:	xor    al,0x1a
  40f0f6:	dec    esp
  40f0f7:	pop    ebp
  40f0f8:	dec    esp
  40f0f9:	imul   ebx,DWORD PTR [edi-0x4fcd8ce2],0xffffffa6
  40f100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f101:	stc    
  40f102:	sti    
  40f103:	jnp    0x40f0f6
  40f105:	xchg   ecx,eax
  40f106:	cmp    eax,DWORD PTR [esi+0x397fbb24]
  40f10c:	fwait
  40f10d:	xchg   edi,eax
  40f10e:	fs dec esp
  40f110:	(bad)  
  40f111:	out    0x7d,eax
  40f113:	ss cmp eax,0x8f27ae43
  40f119:	cmp    DWORD PTR [eax+esi*8+0x6b70f7fe],0xffffffa4
  40f121:	push   ebp
  40f122:	call   0x2fc03ad0
  40f127:	das    
  40f128:	retf   0x1a41
  40f12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12c:	jno    0x40f14e
  40f12e:	mov    ch,0x56
  40f130:	out    dx,eax
  40f131:	mov    edi,DWORD PTR [esp+edi*1+0x50]
  40f135:	push   edx
  40f136:	popa   
  40f137:	in     al,0xea
  40f139:	sbb    BYTE PTR [ecx-0x624951a1],0xca
  40f140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f142:	or     eax,0x946eae40
  40f147:	push   ss
  40f148:	adc    al,0x7c
  40f14a:	xor    ch,BYTE PTR [esi]
  40f14c:	shr    DWORD PTR [ecx-0x4d],0xba
  40f150:	fidivr WORD PTR [ecx+ebp*4+0x50]
  40f154:	loopne 0x40f0e2
  40f156:	das    
  40f157:	jno    0x40f1b7
  40f159:	add    ecx,0x603cc1a8
  40f15f:	not    BYTE PTR [edi]
  40f161:	scas   al,BYTE PTR es:[edi]
  40f162:	sub    DWORD PTR [edx-0x304995c1],ebx
  40f168:	jae    0x40f180
  40f16a:	jb     0x40f0f5
  40f16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16d:	xchg   ebx,eax
  40f16e:	jp     0x40f10a
  40f170:	jo     0x40f1a3
  40f172:	push   ebx
  40f173:	out    dx,al
  40f174:	test   bl,al
  40f176:	jp     0x40f153
  40f178:	mov    esi,0x28c7f628
  40f17d:	sbb    ch,bh
  40f17f:	shl    esp,0xcf
  40f182:	sub    BYTE PTR [ebx-0x59aff7af],dl
  40f188:	pushf  
  40f189:	jno    0x40f1ca
  40f18b:	jle    0x40f146
  40f18d:	dec    esi
  40f18e:	popa   
  40f18f:	xor    eax,0x7479073f
  40f194:	dec    edx
  40f195:	and    al,0xcc
  40f198:	int3   
  40f199:	add    cl,ch
  40f19b:	scas   al,BYTE PTR es:[edi]
  40f19c:	jmp    0xee70:0x1a87af2e
  40f1a3:	je     0x40f1ab
  40f1a5:	aaa    
  40f1a6:	addr16 or eax,0xfd7fdaa5
  40f1ac:	sub    BYTE PTR [edx+ecx*1],dh
  40f1af:	cmp    eax,0x2cba7ddf
  40f1b4:	adc    BYTE PTR [ebp-0x34],0xd5
  40f1b8:	add    al,0xe5
  40f1ba:	arpl   WORD PTR [edx],ax
  40f1bc:	repnz mov al,ds:0xb0be0d6d
  40f1c2:	jns    0x40f189
  40f1c4:	jle    0x40f182
  40f1c6:	(bad)  
  40f1c7:	hlt    
  40f1c8:	sti    
  40f1c9:	xor    cl,cl
  40f1cb:	xchg   ebp,eax
  40f1cc:	outs   dx,DWORD PTR ds:[esi]
  40f1cd:	test   bh,cl
  40f1cf:	dec    esi
  40f1d0:	fld    TBYTE PTR [ebp+0x1a]
  40f1d3:	jnp    0x40f1c9
  40f1d5:	sahf   
  40f1d6:	mov    DWORD PTR [edx],ebx
  40f1d8:	test   al,0xf4
  40f1da:	shr    al,cl
  40f1dc:	ins    DWORD PTR es:[edi],dx
  40f1dd:	jns    0x40f17d
  40f1df:	push   0xfffffffa
  40f1e1:	mov    ecx,0xbf9bb74
  40f1e6:	sahf   
  40f1e7:	add    dl,bh
  40f1e9:	shr    BYTE PTR [esi-0x56],0x49
  40f1ed:	fistp  WORD PTR [ebp+edi*4+0x5f]
  40f1f1:	pop    ebp
  40f1f2:	sahf   
  40f1f3:	in     eax,dx
  40f1f4:	call   0xb4e0d646
  40f1f9:	fwait
  40f1fa:	mov    ebx,0xd1881c8d
  40f1ff:	mov    al,ds:0xa59d9d75
  40f204:	dec    ecx
  40f205:	pop    ds
  40f206:	jnp    0x40f1bb
  40f208:	cmc    
  40f209:	ret    0x71df
  40f20c:	cmp    BYTE PTR [esp+ebp*4+0x72fa1200],cl
  40f213:	xchg   ebx,eax
  40f214:	mov    esp,0x8eec3cb5
  40f219:	xchg   edi,eax
  40f21a:	and    edx,DWORD PTR [esi+0x4633722f]
  40f220:	mov    bh,0x9
  40f222:	cmp    al,0x56
  40f224:	fistp  WORD PTR [edx]
  40f226:	cmp    al,0xf6
  40f228:	or     DWORD PTR [eax+0x41940cba],0xc97c119c
  40f232:	add    bl,BYTE PTR [eiz*4+0x33868c37]
  40f239:	inc    ecx
  40f23a:	retf   0xb57b
  40f23d:	or     ecx,DWORD PTR [edi-0x6726e4d5]
  40f243:	dec    ecx
  40f244:	pop    ds
  40f245:	je     0x40f2ae
  40f247:	lock out dx,al
  40f249:	push   edi
  40f24a:	mov    bh,0x5a
  40f24c:	fwait
  40f24d:	or     BYTE PTR [esi-0x72],cl
  40f250:	icebp  
  40f251:	mov    bl,0x2
  40f253:	pushf  
  40f254:	push   ecx
  40f255:	push   edx
  40f256:	sub    al,0x31
  40f258:	cmp    eax,ecx
  40f25a:	aam    0x50
  40f25c:	sub    DWORD PTR [edi-0x1a],edx
  40f25f:	test   al,0x20
  40f261:	rol    dh,1
  40f263:	lea    edx,[esi]
  40f265:	jge    0x40f2aa
  40f267:	jo     0x40f248
  40f269:	test   eax,0x864a9e00
  40f26e:	ret    0x88ac
  40f271:	pop    es
  40f272:	cld    
  40f273:	dec    ecx
  40f274:	adc    DWORD PTR ds:0xb8f85e72,esp
  40f27a:	pop    ss
  40f27b:	mov    ch,0xde
  40f27d:	adc    edx,DWORD PTR [ecx+0x37]
  40f280:	stos   BYTE PTR es:[edi],al
  40f281:	dec    edi
  40f282:	retf   0x86d9
  40f285:	mov    ebx,0x2acc17a9
  40f28a:	mov    cl,0xe3
  40f28c:	clc    
  40f28d:	aas    
  40f28e:	sub    DWORD PTR [edx-0x21],ebp
  40f291:	xor    ebx,esi
  40f293:	sbb    DWORD PTR [esi-0x79e230c6],edx
  40f299:	fld    QWORD PTR [ecx+0x1]
  40f29c:	pusha  
  40f29d:	sub    ecx,0xf1830eb1
  40f2a3:	test   BYTE PTR [edx],ch
  40f2a5:	cmc    
  40f2a6:	push   0x31
  40f2a8:	xor    al,0xa4
  40f2aa:	iret   
  40f2ab:	(bad)  
  40f2ac:	int    0xda
  40f2ae:	dec    eax
  40f2af:	push   esi
  40f2b0:	loopne 0x40f2d0
  40f2b2:	inc    edi
  40f2b3:	imul   ebx,DWORD PTR [ebp+0x23],0x98c58733
  40f2ba:	ins    DWORD PTR es:[edi],dx
  40f2bb:	lods   al,BYTE PTR ds:[esi]
  40f2bc:	adc    DWORD PTR [esi-0x598f6e8a],esp
  40f2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c3:	mov    edx,0x882375ce
  40f2c8:	mov    ebx,0x71aae8fa
  40f2cd:	mov    cs,WORD PTR [ecx-0x53d013e7]
  40f2d3:	jns    0x40f34d
  40f2d5:	ss mov esp,0x6ea3d4ec
  40f2db:	in     eax,dx
  40f2dc:	stos   DWORD PTR es:[edi],eax
  40f2dd:	lods   eax,DWORD PTR ds:[esi]
  40f2de:	or     DWORD PTR [edx],ebp
  40f2e0:	mov    eax,ds:0xa77d7df8
  40f2e5:	rol    DWORD PTR [esi+0x737dd807],1
  40f2eb:	inc    ecx
  40f2ec:	fstp   DWORD PTR [edx]
  40f2ee:	pop    esp
  40f2ef:	and    al,0x24
  40f2f1:	sub    BYTE PTR [eax+0x73],0x82
  40f2f5:	js     0x40f27c
  40f2f7:	add    eax,0xf5f73400
  40f2fc:	adc    edi,esi
  40f2fe:	(bad)  
  40f2ff:	test   al,0x69
  40f301:	data16 icebp 
  40f303:	pop    es
  40f304:	pop    eax
  40f305:	mov    bh,0x5b
  40f307:	out    dx,eax
  40f308:	data16 scas al,BYTE PTR es:[edi]
  40f30a:	mov    DWORD PTR [esi],edx
  40f30c:	ds mov eax,0xcf1255a2
  40f312:	(bad)  
  40f313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f314:	test   eax,0x6725b9aa
  40f319:	mov    edi,0x16b87af4
  40f31e:	xchg   ecx,eax
  40f31f:	dec    esp
  40f320:	inc    edx
  40f321:	inc    esp
  40f322:	popa   
  40f323:	lea    ebx,[ecx+0x203771]
  40f329:	jns    0x40f307
  40f32b:	scas   al,BYTE PTR es:[edi]
  40f32c:	out    dx,eax
  40f32d:	adc    DWORD PTR [ebx-0x37],0x25
  40f331:	shl    edi,1
  40f333:	mov    BYTE PTR [eax],0xb9
  40f336:	dec    ebp
  40f337:	arpl   WORD PTR [eax],sp
  40f339:	aad    0x2d
  40f33b:	call   0x8c9ec56a
  40f340:	mov    ah,ch
  40f342:	push   ecx
  40f343:	jb     0x40f30a
  40f345:	xlat   BYTE PTR ds:[ebx]
  40f346:	mov    eax,cr1
  40f349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f34a:	adc    ebp,DWORD PTR [ebx]
  40f34c:	adc    edi,DWORD PTR [ebx+eax*2-0xef869b8]
  40f353:	push   edx
  40f354:	xchg   BYTE PTR [ebp+0x12],dh
  40f357:	dec    ebp
  40f358:	pop    ss
  40f359:	push   esi
  40f35a:	ret    
  40f35b:	push   ebp
  40f35c:	mov    bh,bl
  40f35e:	or     BYTE PTR [ebx-0x4b0d3511],0x99
  40f365:	pop    edx
  40f366:	pop    ds
  40f367:	dec    ebp
  40f368:	dec    ebp
  40f369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f36a:	scas   al,BYTE PTR es:[edi]
  40f36b:	mov    ah,0x1d
  40f36d:	push   es
  40f36e:	jg     0x40f343
  40f370:	arpl   bp,bx
  40f372:	div    BYTE PTR ds:0x992a8637
  40f378:	shl    DWORD PTR [eax+0x4ccb118a],0xaf
  40f37f:	dec    edx
  40f380:	mov    es,WORD PTR [edi]
  40f382:	mov    al,0x57
  40f384:	jno    0x40f3a5
  40f386:	push   edx
  40f387:	mov    es,WORD PTR [ecx+edx*8+0x1625adb6]
  40f38e:	xchg   edx,eax
  40f38f:	push   ebx
  40f390:	push   cs
  40f391:	xchg   edx,eax
  40f392:	rcl    DWORD PTR [ebp-0x7f4a544f],0xdb
  40f399:	shl    BYTE PTR [esi],1
  40f39b:	dec    ecx
  40f39c:	lds    ebx,FWORD PTR [edx+0x6b]
  40f39f:	pop    edx
  40f3a0:	xchg   edx,eax
  40f3a1:	sub    eax,0xb04e7be8
  40f3a6:	stc    
  40f3a7:	stos   DWORD PTR es:[edi],eax
  40f3a8:	cmp    dl,0x96
  40f3ab:	sbb    ecx,DWORD PTR [edi]
  40f3ad:	pop    es
  40f3ae:	push   edi
  40f3af:	cmp    DWORD PTR [edx+0x5d],ebx
  40f3b2:	out    0x2d,al
  40f3b4:	fild   QWORD PTR [edi-0x17effd70]
  40f3ba:	push   ss
  40f3bb:	inc    edx
  40f3bc:	xchg   ebp,eax
  40f3bd:	adc    esi,DWORD PTR [ebx-0x46806f6e]
  40f3c3:	pushf  
  40f3c4:	xor    BYTE PTR [ebp-0x7],dh
  40f3c7:	inc    esp
  40f3c8:	fisubr WORD PTR ds:0x63e0d586
  40f3ce:	nop
  40f3cf:	popf   
  40f3d0:	jmp    0xc7a07408
  40f3d5:	pop    edi
  40f3d6:	pop    esp
  40f3d7:	fwait
  40f3d8:	fwait
  40f3d9:	and    DWORD PTR [esp+ecx*1],edx
  40f3dc:	push   edx
  40f3dd:	ja     0x40f396
  40f3df:	in     eax,0xa1
  40f3e1:	popf   
  40f3e2:	lods   al,BYTE PTR ds:[esi]
  40f3e3:	(bad)  
  40f3e4:	dec    esp
  40f3e5:	cwde   
  40f3e6:	sbb    al,0xe7
  40f3e8:	jecxz  0x40f45a
  40f3ea:	xor    al,0x81
  40f3ec:	in     eax,0x6e
  40f3ee:	push   ecx
  40f3ef:	sbb    esi,DWORD PTR [ebx]
  40f3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f2:	or     edx,esp
  40f3f4:	adc    al,BYTE PTR ds:0xe0b6c784
  40f3fa:	add    BYTE PTR [ecx-0x7b],ch
  40f3fd:	enter  0x8ae3,0x69
  40f401:	jb     0x40f457
  40f403:	rcr    DWORD PTR [edi-0x68],0x6a
  40f407:	mov    ds:0x548d1d00,eax
  40f40c:	add    DWORD PTR [edi],ebx
  40f40e:	xchg   ecx,eax
  40f40f:	pop    ebx
  40f410:	repnz dec esi
  40f412:	push   esi
  40f413:	sub    DWORD PTR [ebx-0x3979185b],esi
  40f419:	hlt    
  40f41a:	jmp    0x9c19da53
  40f41f:	xchg   ebx,eax
  40f420:	add    esi,DWORD PTR [esi-0x7e]
  40f423:	xchg   ebp,eax
  40f424:	shl    al,1
  40f426:	xchg   ecx,eax
  40f427:	dec    ebp
  40f428:	sub    eax,0xc62834f
  40f42d:	sub    al,0xc9
  40f42f:	das    
  40f430:	sub    al,0xf7
  40f432:	lahf   
  40f433:	lods   al,BYTE PTR ds:[esi]
  40f434:	imul   edx,esp,0x9bbd4f53
  40f43a:	clc    
  40f43b:	cmp    ebp,DWORD PTR [edx]
  40f43d:	icebp  
  40f43e:	mov    dl,0x8f
  40f440:	cwde   
  40f441:	xchg   esp,eax
  40f442:	push   edx
  40f443:	push   ss
  40f444:	test   DWORD PTR [edi-0x2404ffe0],edi
  40f44a:	sahf   
  40f44b:	fcom   QWORD PTR [esi-0x72]
  40f44e:	add    bh,BYTE PTR [edi+0x7b585c3e]
  40f454:	push   cs
  40f455:	shl    BYTE PTR [edx+0x429e24e],0x33
  40f45c:	jne    0x40f419
  40f45e:	dec    DWORD PTR [ebp-0x1b]
  40f461:	push   0x3f468331
  40f466:	les    edi,FWORD PTR fs:[ecx]
  40f469:	(bad)  
  40f46a:	out    0x11,eax
  40f46c:	and    DWORD PTR [eax-0x40],esi
  40f46f:	ins    BYTE PTR es:[edi],dx
  40f470:	out    0xec,eax
  40f472:	mov    bl,0x77
  40f474:	mov    esi,DWORD PTR [ebx+ebp*1-0x3a31bd59]
  40f47b:	jne    0x40f433
  40f47d:	stos   BYTE PTR es:[edi],al
  40f47e:	imul   ebx,DWORD PTR [eax+0x6f],0x67311152
  40f485:	add    cl,BYTE PTR [edx-0x24]
  40f488:	arpl   WORD PTR [edi],cx
  40f48a:	cmc    
  40f48b:	inc    edi
  40f48c:	jge    0x40f438
  40f48e:	icebp  
  40f48f:	inc    ebx
  40f490:	fisub  WORD PTR [esi-0xc291955]
  40f496:	cmp    al,0x91
  40f498:	call   0x3ae874e2
  40f49d:	and    BYTE PTR [esi-0x7b],ah
  40f4a0:	push   cs
  40f4a1:	inc    ebx
  40f4a2:	sub    eax,0xf42e98ae
  40f4a7:	sbb    esi,ebp
  40f4a9:	xchg   esp,eax
  40f4aa:	jns    0x40f4e0
  40f4ac:	xor    eax,0x2c6a9ec6
  40f4b1:	adc    cl,bh
  40f4b3:	sub    eax,0x5183940a
  40f4b8:	jb     0x40f4f8
  40f4ba:	adc    al,0xb3
  40f4bc:	add    ax,0x9707
  40f4c0:	ja     0x40f4dc
  40f4c2:	adc    DWORD PTR [esi-0x55],ecx
  40f4c5:	dec    edi
  40f4c6:	neg    DWORD PTR [ebx+0x1e]
  40f4c9:	popa   
  40f4ca:	mov    ebp,0xabed9252
  40f4cf:	and    ah,BYTE PTR [ebp+0x34]
  40f4d2:	gs push ebx
  40f4d4:	jg     0x40f45b
  40f4d6:	push   ebx
  40f4d7:	cld    
  40f4d8:	daa    
  40f4d9:	add    DWORD PTR [ebx-0x6c8364e8],ecx
  40f4df:	(bad)  
  40f4e0:	daa    
  40f4e1:	push   ss
  40f4e2:	test   eax,0xcfbfb911
  40f4e7:	cmc    
  40f4e8:	neg    DWORD PTR [eax]
  40f4ea:	push   ebx
  40f4eb:	lahf   
  40f4ec:	fldcw  WORD PTR [edi+0x71]
  40f4ef:	es js  0x40f4e3
  40f4f2:	ficomp WORD PTR [esi+0x17]
  40f4f5:	fisub  DWORD PTR [ecx]
  40f4f7:	add    BYTE PTR [ebx],ah
  40f4f9:	inc    ebx
  40f4fa:	in     al,dx
  40f4fb:	inc    esi
  40f4fc:	xor    ch,dh
  40f4fe:	adc    al,0x20
  40f500:	jae    0x40f4e1
  40f502:	icebp  
  40f503:	pop    ebp
  40f504:	mov    fs,WORD PTR [edi-0x51]
  40f507:	das    
  40f508:	cwde   
  40f509:	cli    
  40f50a:	outs   dx,BYTE PTR ds:[esi]
  40f50b:	sti    
  40f50c:	dec    esi
  40f50d:	push   cs
  40f50e:	loope  0x40f51a
  40f510:	xchg   edi,eax
  40f511:	push   esi
  40f512:	fldl2e 
  40f514:	sbb    al,dh
  40f516:	or     eax,0xeebf654c
  40f51b:	call   0xea18:0xff2d2b22
  40f522:	ss mov ch,0xe8
  40f525:	jmp    0xeb1c:0xae736025
  40f52c:	xchg   edx,eax
  40f52d:	sar    bl,0xfb
  40f530:	mov    DWORD PTR [esi],esp
  40f532:	pop    edi
  40f533:	inc    ebx
  40f534:	fldenv [eax]
  40f536:	sbb    al,0x7f
  40f538:	mov    WORD PTR gs:[ecx-0x50],ds
  40f53c:	push   0x1e97ca9d
  40f541:	lods   al,BYTE PTR ds:[esi]
  40f542:	or     ch,ch
  40f544:	mov    ds:0xbf3a8f7b,eax
  40f549:	dec    esp
  40f54a:	mov    ah,0x98
  40f54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f54d:	imul   esp
  40f54f:	mov    ecx,0x94257ca3
  40f554:	dec    edi
  40f555:	cmp    BYTE PTR [edi],dh
  40f557:	retf   
  40f558:	jp     0x40f530
  40f55a:	pusha  
  40f55b:	int    0x5f
  40f55d:	retf   
  40f55e:	fs pop esi
  40f560:	xchg   BYTE PTR ds:0x77d73a59,dh
  40f566:	shl    DWORD PTR [ecx+0x60c6053],0xd3
  40f56d:	mov    cl,0x5d
  40f56f:	mov    ah,0x58
  40f571:	xor    bl,0x2c
  40f574:	sbb    eax,0x4d4acc4
  40f579:	mov    eax,0x26cf1fb4
  40f57e:	adc    DWORD PTR [ecx+0x43],esi
  40f581:	test   DWORD PTR [edx+0x46],ebp
  40f584:	test   DWORD PTR [esi+0x65],edi
  40f587:	test   ebx,esp
  40f589:	repnz int3 
  40f58b:	test   al,0x16
  40f58d:	add    DWORD PTR [edi-0x19],0xc2bf02e0
  40f594:	ror    edi,cl
  40f596:	and    edx,ebp
  40f598:	mov    DWORD PTR [eax-0x7a012ea5],edx
  40f59e:	jbe    0x40f5ec
  40f5a0:	mov    ecx,edx
  40f5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a3:	mov    ecx,0x1da2b6a1
  40f5a8:	cmc    
  40f5a9:	std    
  40f5aa:	sub    eax,0xb18acbb5
  40f5af:	or     eax,0xec561df1
  40f5b4:	pop    ds
  40f5b5:	arpl   bx,sp
  40f5b7:	inc    ebp
  40f5b8:	dec    eax
  40f5b9:	imul   esp,ebp,0xab7b021c
  40f5bf:	sbb    DWORD PTR [esi-0x58],ebp
  40f5c2:	sub    eax,0x238279e
  40f5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5c8:	mov    bh,0xa9
  40f5ca:	loop   0x40f57f
  40f5cc:	xchg   edx,eax
  40f5cd:	or     eax,0xb876fd5f
  40f5d2:	cdq    
  40f5d3:	sub    DWORD PTR [ecx],esi
  40f5d5:	xor    DWORD PTR [ebx],ebx
  40f5d7:	cmp    edx,DWORD PTR [edi]
  40f5d9:	cmp    dh,al
  40f5db:	xchg   edi,eax
  40f5dc:	(bad)  
  40f5dd:	cdq    
  40f5de:	shl    BYTE PTR [ebp+0x3160394b],1
  40f5e4:	fsubr  QWORD PTR [edi]
  40f5e6:	mov    al,ds:0x535e08b0
  40f5eb:	push   edi
  40f5ec:	fs xor edx,ecx
  40f5ef:	dec    eax
  40f5f0:	shr    DWORD PTR [ecx+edx*4+0x2c],0x4a
  40f5f5:	pushf  
  40f5f6:	jmp    0x40f5dd
  40f5f8:	sbb    BYTE PTR [ebx],ch
  40f5fa:	inc    ecx
  40f5fb:	lock and eax,0x2e93d735
  40f601:	cmp    DWORD PTR [edx],ebp
  40f603:	push   0xffffff90
  40f605:	clc    
  40f606:	lahf   
  40f607:	mov    gs,WORD PTR [edx-0x36]
  40f60a:	xchg   esp,eax
  40f60b:	jnp    0x40f644
  40f60d:	jmp    0x40f5b7
  40f60f:	pop    ds
  40f610:	fdivr  DWORD PTR [edi+0x7a6911ce]
  40f616:	inc    ebx
  40f617:	xlat   BYTE PTR ds:[ebx]
  40f618:	sbb    BYTE PTR [eax],dh
  40f61a:	std    
  40f61b:	pop    ecx
  40f61c:	loopne 0x40f5e4
  40f61e:	mov    edx,0x69941083
  40f623:	cmc    
  40f624:	ret    0x1c90
  40f627:	lods   eax,DWORD PTR ds:[esi]
  40f628:	xchg   esp,eax
  40f629:	sbb    DWORD PTR [esi+0x13],edi
  40f62c:	jo     0x40f65f
  40f62e:	test   eax,0x2e0066c1
  40f633:	cdq    
  40f634:	sub    bl,0x45
  40f637:	xchg   ebx,esi
  40f639:	xor    ebx,ebx
  40f63b:	push   esi
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	je     0x40fe5b
  40fde2:	imul   ebx,esi,0x7b7b4fb2
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	push   esp
  40fded:	push   eax
  40fdee:	ret    0xaf0
  40fdf1:	and    BYTE PTR [eax],dh
  40fdf3:	lahf   
  40fdf4:	sahf   
  40fdf5:	xchg   esp,eax
  40fdf6:	xchg   ebp,eax
  40fdf7:	xor    al,0x89
  40fdf9:	sti    
  40fdfa:	mov    dl,0x1e
  40fdfc:	cwde   
  40fdfd:	clc    
  40fdfe:	pop    ecx
  40fdff:	add    DWORD PTR [edx],0xffffff81
  40fe02:	jp     0x40fddd
  40fe04:	push   ebp
  40fe05:	scas   eax,DWORD PTR es:[edi]
  40fe06:	mov    dl,0x0
  40fe08:	cdq    
  40fe09:	dec    edx
  40fe0a:	mov    ah,0xa5
  40fe0c:	dec    eax
  40fe0d:	cmc    
  40fe0e:	push   cs
  40fe0f:	hlt    
  40fe10:	daa    
  40fe11:	fwait
  40fe12:	add    BYTE PTR [esp],ah
  40fe15:	add    ecx,DWORD PTR [ecx+edi*1]
  40fe18:	arpl   WORD PTR [esi],dx
  40fe1a:	add    al,0xc1
  40fe1c:	call   0x1709:0x6d58c092
  40fe23:	lods   eax,DWORD PTR ds:[esi]
  40fe24:	adc    eax,0x17337ffc
  40fe29:	int3   
  40fe2a:	mov    ds:0x1f80b64d,eax
  40fe2f:	daa    
  40fe30:	repz jnp 0x40fe94
  40fe33:	out    dx,al
  40fe34:	lods   al,BYTE PTR ds:[esi]
  40fe35:	enter  0x4738,0x73
  40fe39:	push   ss
  40fe3a:	retf   
  40fe3b:	xchg   esi,eax
  40fe3c:	jne    0x40fe2b
  40fe3e:	inc    BYTE PTR [ecx-0x5f]
  40fe41:	frstor [eax+0x3a]
  40fe44:	sub    eax,0x4217ffb1
  40fe49:	mov    esp,0x9a073287
  40fe4e:	addr16 dec esp
  40fe50:	cdq    
  40fe51:	add    al,0x96
  40fe53:	cli    
  40fe54:	jp     0x40fe6c
  40fe56:	push   esi
  40fe57:	not    DWORD PTR [ebx+0x37b34d0e]
  40fe5d:	sbb    bl,bl
  40fe5f:	(bad)  
  40fe60:	leave  
  40fe61:	scas   al,BYTE PTR es:[edi]
  40fe62:	jb     0x40fe9d
  40fe64:	out    0x55,al
  40fe66:	and    eax,0xfa1bb721
  40fe6b:	les    ecx,FWORD PTR [ebx-0x23686a33]
  40fe71:	mov    esp,0xfe73b726
  40fe76:	mov    DWORD PTR [ebx+0x28],edx
  40fe79:	(bad)  
  40fe7b:	into   
  40fe7c:	stc    
  40fe7d:	(bad)  [ebx-0xc]
  40fe80:	push   edi
  40fe81:	inc    edi
  40fe82:	sbb    al,0xe3
  40fe84:	sbb    eax,0xab12a608
  40fe89:	jmp    0x40fed2
  40fe8b:	pop    ds
  40fe8c:	mov    ebp,0x8c1ae6b7
  40fe91:	lahf   
  40fe92:	(bad)  
  40fe93:	lods   al,BYTE PTR ds:[esi]
  40fe94:	mov    bl,0xb8
  40fe96:	test   al,0xc8
  40fe98:	xor    al,0x5b
  40fe9a:	xlat   BYTE PTR ss:[ebx]
  40fe9c:	vmovmskps esp,xmm7
  40fea0:	xlat   BYTE PTR ds:[ebx]
  40fea1:	cmp    al,0xcb
  40fea3:	mov    dl,dh
  40fea5:	pop    ds
  40fea6:	cdq    
  40fea7:	ss inc ebp
  40fea9:	add    bl,0xa4
  40feac:	push   ecx
  40fead:	xor    al,0x97
  40feaf:	mov    ch,0xda
  40feb1:	ret    
  40feb2:	in     eax,0x59
  40feb4:	push   ds
  40feb5:	pusha  
  40feb6:	pop    es
  40feb7:	(bad)  
  40feb8:	dec    ebx
  40feb9:	or     ah,BYTE PTR [eax]
  40febb:	loopne 0x40feef
  40febd:	call   0xb61d:0xacba3f97
  40fec4:	fsubr  DWORD PTR [eax+0x17]
  40fec7:	jne    0x40fefb
  40fec9:	not    DWORD PTR [esi+0x360e6a1a]
  40fecf:	nop
  40fed0:	addr16 push es
  40fed2:	ja     0x40ff1e
  40fed4:	daa    
  40fed5:	mov    eax,0x9ee53b1f
  40feda:	add    edi,DWORD PTR [ebx]
  40fedc:	push   esi
  40fedd:	jb     0x40fef2
  40fedf:	jmp    0xdba4b43e
  40fee4:	das    
  40fee5:	scas   al,BYTE PTR es:[edi]
  40fee6:	(bad)  [edx-0x58]
  40fee9:	add    BYTE PTR [esi],0xe
  40feec:	dec    esi
  40feed:	fwait
  40feee:	pop    edx
  40feef:	arpl   WORD PTR [ebp+0x7884c25e],bx
  40fef5:	add    BYTE PTR ds:0x74813d46,bh
  40fefb:	inc    ecx
  40fefc:	mov    bh,0xd3
  40fefe:	(bad)  
  40feff:	mov    ds,WORD PTR [ecx]
  40ff01:	xchg   edx,eax
  40ff02:	fidivr DWORD PTR [ecx-0xd]
  40ff05:	jmp    DWORD PTR [eax+0x54]
  40ff08:	jb     0x40ff3c
  40ff0a:	xchg   esp,eax
  40ff0b:	push   esp
  40ff0c:	jae    0x40fec2
  40ff0e:	fstp   QWORD PTR [esi+0x4a]
  40ff11:	xor    BYTE PTR [ecx+0x168ae4c1],bh
  40ff17:	repz fwait
  40ff19:	mov    ch,0x16
  40ff1b:	dec    edi
  40ff1c:	repnz shl ch,1
  40ff1f:	adc    BYTE PTR [esi+0x4d],ch
  40ff22:	xchg   esp,eax
  40ff23:	jp     0x40ff6c
  40ff25:	sti    
  40ff26:	or     DWORD PTR [edi],edi
  40ff28:	stc    
  40ff29:	sbb    BYTE PTR [edi+0x519d5efc],bl
  40ff2f:	lahf   
  40ff30:	cmp    ecx,DWORD PTR [esi]
  40ff32:	push   ebx
  40ff33:	push   ebp
  40ff34:	es ret 
  40ff36:	jge    0x40ff89
  40ff38:	bound  edx,QWORD PTR [edi-0x9]
  40ff3b:	mov    ebx,ss
  40ff3d:	dec    ecx
  40ff3e:	frstor [edi-0x7f897ee3]
  40ff44:	test   ah,cl
  40ff46:	xchg   ebx,eax
  40ff47:	stos   BYTE PTR es:[edi],al
  40ff48:	jbe    0x40ff0d
  40ff4a:	cmp    eax,0xeba60812
  40ff4f:	shl    DWORD PTR [ebx],1
  40ff51:	mov    edi,0x84743955
  40ff56:	dec    ecx
  40ff57:	and    DWORD PTR [edx+eax*1],eax
  40ff5a:	adc    eax,0xbe40c5d8
  40ff5f:	bound  eax,QWORD PTR [esi-0x15]
  40ff62:	push   ebp
  40ff63:	ret    
  40ff64:	xchg   edx,eax
  40ff65:	addr16 mov edi,0x36420ef0
  40ff6b:	cs dec eax
  40ff6d:	int3   
  40ff6e:	call   0x5676:0xf3285543
  40ff75:	sti    
  40ff76:	pop    ebp
  40ff77:	mov    ah,0xe
  40ff79:	aam    0x81
  40ff7b:	adc    al,0xaf
  40ff7d:	pop    ss
  40ff7e:	jmp    0x40ffc3
  40ff80:	mov    al,0x3c
  40ff82:	cmp    al,0x79
  40ff84:	mov    ebp,0xc72ca1b3
  40ff89:	(bad)  
  40ff8a:	jp     0x40ffea
  40ff8c:	jle    0x40ff97
  40ff8e:	cmp    DWORD PTR [eax-0x577b7fd4],esp
  40ff94:	xchg   ecx,eax
  40ff95:	xor    bl,0xaf
  40ff98:	fwait
  40ff99:	bnd jo 0x40ffd5
  40ff9c:	retf   0x80a9
  40ff9f:	js     0x40ff46
  40ffa1:	jmp    0x40ff3b
  40ffa3:	cs sub al,0x34
  40ffa6:	cs pop ebp
  40ffa8:	jae    0x41001b
  40ffaa:	hlt    
  40ffab:	mov    bl,0x67
  40ffad:	push   ds
  40ffae:	jo     0x40ffdc
  40ffb0:	dec    esi
  40ffb1:	retf   
  40ffb2:	inc    edx
  40ffb3:	rol    BYTE PTR [edi+0x37],1
  40ffb6:	mov    eax,0xaa55da16
  40ffbb:	fsubrp st(0),st
  40ffbd:	jne    0x40ff68
  40ffbf:	sub    eax,0x417c98eb
  40ffc4:	fidiv  WORD PTR [eax]
  40ffc6:	pop    edi
  40ffc7:	arpl   WORD PTR [esi],bp
  40ffc9:	sbb    DWORD PTR ds:[ecx],esi
  40ffcc:	out    0x48,al
  40ffce:	cmp    DWORD PTR [ebx-0x66],ebx
  40ffd1:	jmp    0x40ff8a
  40ffd3:	add    BYTE PTR ds:0x4a1b7f33,dh
  40ffd9:	xchg   esi,eax
  40ffda:	inc    ecx
  40ffdb:	addr16 sahf 
  40ffdd:	or     BYTE PTR [eax-0x69e42ff7],dl
  40ffe3:	push   cs
  40ffe4:	sbb    al,0xc1
  40ffe6:	dec    edx
  40ffe7:	mov    bh,0xc5
  40ffe9:	int3   
  40ffea:	sahf   
  40ffeb:	pop    esi
  40ffec:	and    DWORD PTR [esi+0x4d],edi
  40ffef:	lods   al,BYTE PTR es:[esi]
  40fff1:	dec    esp
  40fff2:	xchg   edi,eax
  40fff3:	sti    
  40fff4:	mov    eax,0xbab0407d
  40fff9:	repnz xchg ebp,eax
  40fffb:	cmp    BYTE PTR [ebx],bl
  40fffd:	inc    edi
  40fffe:	mov    WORD PTR [ecx],cs
  410000:	outs   dx,BYTE PTR ds:[esi]
  410001:	loop   0x40ffb2
  410003:	daa    
  410004:	sar    esi,cl
  410006:	inc    eax
  410007:	sbb    ch,BYTE PTR [ebx+0x39]
  41000a:	xor    eax,0xfe972cc7
  41000f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410010:	outs   dx,DWORD PTR ds:[esi]
  410011:	adc    al,al
  410013:	or     al,0x36
  410015:	inc    ebx
  410016:	outs   dx,BYTE PTR ds:[esi]
  410017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410018:	inc    ebp
  410019:	nop
  41001a:	push   ecx
  41001b:	fwait
  41001c:	adc    al,0xb2
  41001e:	inc    esp
  41001f:	fldenv [ebx+eiz*8+0x3e5bfca8]
  410026:	jp     0x41000d
  410028:	mov    bh,BYTE PTR [edi+0x55]
  41002b:	or     al,0x91
  41002d:	or     BYTE PTR [ebx-0x6f3ca068],bl
  410033:	dec    esi
  410034:	loop   0x410017
  410036:	adc    al,0xa5
  410038:	ins    BYTE PTR es:[edi],dx
  410039:	add    eax,0xb05920a0
  41003e:	jb     0x410006
  410040:	das    
  410041:	popf   
  410042:	xchg   edx,eax
  410043:	call   0xd0d8f0a1
  410048:	or     ebx,eax
  41004a:	and    BYTE PTR [ecx+0x71],dl
  41004d:	pushf  
  41004e:	popf   
  41004f:	nop
  410050:	xchg   BYTE PTR [esi],bh
  410052:	or     al,0x39
  410054:	adc    ebx,DWORD PTR [ecx+0x4882b8af]
  41005a:	nop
  41005b:	loop   0x40ffef
  41005d:	sbb    BYTE PTR [eax+0x2a],ch
  410060:	push   esi
  410061:	outs   dx,DWORD PTR ds:[esi]
  410062:	mov    edx,0x4c7141b8
  410067:	ins    BYTE PTR es:[edi],dx
  410068:	gs xor ax,0x21ab
  41006d:	sahf   
  41006e:	fldcw  WORD PTR [ecx-0x7a8681fe]
  410074:	pop    ebp
  410075:	(bad)  
  410077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410078:	out    dx,al
  410079:	not    BYTE PTR [eax-0x60794cc9]
  41007f:	push   esp
  410080:	inc    esi
  410081:	xor    al,0x6f
  410083:	ins    DWORD PTR es:[di],dx
  410085:	call   0x183:0xdc4da37
  41008c:	outs   dx,BYTE PTR ds:[esi]
  41008d:	dec    ecx
  41008e:	sahf   
  41008f:	in     eax,dx
  410090:	mov    ds:0xa9b932ad,al
  410095:	pop    es
  410096:	popa   
  410097:	mov    al,ds:0xaa71f2f8
  41009c:	xchg   esp,eax
  41009d:	cmp    al,0xee
  41009f:	push   edi
  4100a0:	xchg   ebx,eax
  4100a1:	pop    edx
  4100a2:	jno    0x410072
  4100a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100a5:	je     0x41007c
  4100a7:	jnp    0x41002b
  4100a9:	repz adc BYTE PTR [edi+0x5f],dh
  4100ad:	inc    edx
  4100ae:	mov    eax,ds:0xbec0efcb
  4100b3:	xor    eax,0xbc7f0785
  4100b8:	cmp    al,0x9
  4100ba:	mov    ds:0xf867fcf0,eax
  4100bf:	mov    dh,al
  4100c1:	rcl    DWORD PTR [esi-0x36],cl
  4100c4:	cmp    al,0xc7
  4100c6:	scas   al,BYTE PTR es:[edi]
  4100c7:	fstp   TBYTE PTR [ecx-0x7ec6389e]
  4100cd:	iret   
  4100ce:	and    edi,ebp
  4100d0:	test   al,0x91
  4100d2:	ret    
  4100d3:	addr16 call 0xe665:0x25043ac4
  4100db:	(bad)  
  4100dc:	jo     0x4100b8
  4100de:	fs out dx,al
  4100e0:	sahf   
  4100e1:	jmp    0x79963582
  4100e6:	xor    al,0x99
  4100e8:	jmp    0x66d62e89
  4100ed:	lods   eax,DWORD PTR ds:[esi]
  4100ee:	(bad)  
  4100ef:	xor    dl,al
  4100f1:	jns    0x410163
  4100f3:	mov    ss,WORD PTR [eax+0x3474589]
  4100f9:	push   0x7fb1356c
  4100fe:	call   0x1b9c6976
  410103:	cmp    esi,ecx
  410105:	adc    DWORD PTR [ebx+0x99e2789],ebp
  41010b:	push   es
  41010c:	leave  
  41010d:	out    dx,eax
  41010e:	test   DWORD PTR [edx],eax
  410110:	xchg   edi,eax
  410111:	xchg   esp,eax
  410112:	pop    ebp
  410113:	mov    cl,0xe1
  410115:	mov    ds:0x9032b953,al
  41011a:	in     eax,dx
  41011b:	xadd   DWORD PTR [edi],ebx
  41011e:	lods   eax,DWORD PTR ds:[esi]
  41011f:	pop    edx
  410120:	and    al,0xcf
  410122:	inc    BYTE PTR [edi-0x26a192fc]
  410128:	leave  
  410129:	xor    al,0xc5
  41012b:	dec    edi
  41012c:	fbstp  TBYTE PTR [ecx+0x39a81292]
  410132:	mov    WORD PTR [ecx],es
  410134:	push   ebx
  410135:	int    0xd4
  410137:	sbb    al,0x41
  410139:	mov    esp,0x12e4e1f4
  41013e:	push   ds
  41013f:	pushf  
  410140:	jns    0x4100e2
  410142:	sar    BYTE PTR [edx],0xe5
  410145:	mov    dl,0x1a
  410147:	add    al,0xb6
  410149:	push   ss
  41014a:	add    eax,0x4d7ca68b
  41014f:	mov    ds:0x69e5b473,al
  410154:	adc    al,0xa7
  410156:	mov    ah,0x37
  410158:	or     al,0x2e
  41015a:	sub    BYTE PTR [edi+ebx*8],0x38
  41015e:	pusha  
  41015f:	adc    BYTE PTR [ecx+0x14],dh
  410162:	mov    esi,0xa01a740e
  410167:	arpl   WORD PTR [ebx+0x36ae9024],bp
  41016d:	in     eax,0xd2
  41016f:	jp     0x4101db
  410171:	rcl    BYTE PTR [esi+0x59711469],0x4f
  410178:	imul   edi,DWORD PTR [edi+0x69],0x5251ed4f
  41017f:	shr    BYTE PTR [esi],0x37
  410182:	adc    ah,BYTE PTR [esi*8-0x65f54417]
  410189:	jmp    0x121a:0x63ff3df0
  410190:	push   esp
  410191:	or     DWORD PTR [ecx+ecx*8+0x73],eax
  410195:	mov    ds:0xc8c4a4b,al
  41019a:	mov    ah,0x7
  41019c:	stos   BYTE PTR es:[edi],al
  41019d:	gs inc ebx
  41019f:	mov    bh,0x99
  4101a1:	mov    dl,0x2f
  4101a3:	xor    ebx,eax
  4101a5:	ret    
  4101a6:	dec    edi
  4101a7:	loop   0x41019b
  4101a9:	loop   0x410218
  4101ab:	xchg   edx,eax
  4101ac:	rol    DWORD PTR [ebx],1
  4101ae:	ja     0x410210
  4101b0:	and    DWORD PTR [edi+ecx*2-0x4c],ebx
  4101b4:	sub    ah,BYTE PTR [edi+0x24]
  4101b7:	arpl   WORD PTR [eax-0x35],cx
  4101ba:	imul   eax,DWORD PTR [ebx+0x598ce43],0x18
  4101c1:	xor    al,al
  4101c3:	mov    ds:0xf5af1972,eax
  4101c8:	dec    edx
  4101c9:	rcl    BYTE PTR [ebx+0x4f],1
  4101cc:	rcl    dh,1
  4101ce:	push   DWORD PTR [eax-0x74]
  4101d1:	lahf   
  4101d2:	aas    
  4101d3:	sub    BYTE PTR [eax],dl
  4101d5:	sahf   
  4101d6:	fistp  WORD PTR [eax-0x1d]
  4101d9:	xchg   ebx,eax
  4101da:	data16 mov al,0x71
  4101dd:	dec    ebx
  4101de:	push   0x3267656c
  4101e3:	gs pop edx
  4101e5:	out    dx,eax
  4101e6:	mov    esp,0x79d4a888
  4101eb:	xor    cl,bh
  4101ed:	mov    BYTE PTR [edx+0x18],dh
  4101f0:	in     eax,dx
  4101f1:	(bad)  [eax]
  4101f3:	outs   dx,BYTE PTR ds:[esi]
  4101f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f5:	in     al,0x31
  4101f7:	arpl   di,si
  4101f9:	cmc    
  4101fa:	fdiv   DWORD PTR [edi+0x3dd8e916]
  410200:	fistp  QWORD PTR [eax-0x20]
  410203:	xchg   ecx,eax
  410204:	sbb    al,0x26
  410206:	fnsave [edi+0x43]
  410209:	lods   al,BYTE PTR ds:[esi]
  41020a:	mov    ecx,0x7d28ec76
  41020f:	jp     0x4101c7
  410211:	jmp    0x4101fb
  410213:	fist   DWORD PTR [esi+0x6a]
  410216:	sbb    DWORD PTR [edx-0x234c09da],ecx
  41021c:	cmc    
  41021d:	mov    eax,ds:0xe08927a1
  410222:	xchg   edi,eax
  410223:	test   BYTE PTR [edi+0x7d],ch
  410226:	loope  0x41023d
  410228:	mov    ebp,DWORD PTR [ecx+edx*2-0x57]
  41022c:	test   al,0xf9
  41022e:	out    0xc1,eax
  410230:	xor    eax,edi
  410232:	lea    edi,[eax]
  410234:	(bad)  
  410235:	faddp  st(7),st
  410237:	xor    al,BYTE PTR [edi+0x8353f2]
  41023d:	mov    dl,0xf5
  41023f:	jg     0x41029e
  410241:	adc    BYTE PTR [eax],0xfc
  410244:	idiv   cl
  410246:	mov    ebp,0xa61d8da
  41024b:	ja     0x410231
  41024d:	ficomp DWORD PTR [ebx+0x1d]
  410250:	pop    edi
  410251:	push   0x86fbeca4
  410256:	mov    esp,0x9895b844
  41025b:	inc    edx
  41025c:	mov    ds:0xb93d5720,eax
  410261:	pushw  cs
  410263:	sub    eax,0xffffffd7
  410266:	call   0x6365433c
  41026b:	mov    ?,WORD PTR fs:[ebx-0x3c]
  41026f:	pop    ebx
  410270:	je     0x41023e
  410272:	fsubr  QWORD PTR [ecx-0x1a02d345]
  410278:	call   0xd7545ea2
  41027d:	test   DWORD PTR [ebp+ebp*8-0x72db2e7e],0x7b9e4a6f
  410288:	cmp    al,0x83
  41028a:	and    DWORD PTR [ecx],esp
  41028c:	jp     0x4102dc
  41028e:	mov    ch,0x83
  410290:	int    0xfa
  410292:	(bad)
  410295:	bound  edi,QWORD PTR [ecx]
  410297:	mov    dl,0x56
  410299:	mov    ah,BYTE PTR [edi]
  41029b:	sbb    al,0x36
  41029d:	(bad)  
  41029e:	lock mov bl,0x25
  4102a1:	test   BYTE PTR [ecx+eiz*4],ch
  4102a4:	mov    bl,0x77
  4102a6:	(bad)  
  4102a7:	mov    ds:0xe69902c5,al
  4102ac:	fistp  QWORD PTR [ebx-0x60050982]
  4102b2:	xor    al,0x2c
  4102b4:	adc    bh,0x76
  4102b7:	add    al,0xb6
  4102b9:	xor    al,0xa2
  4102bb:	xor    al,0x62
  4102bd:	dec    edi
  4102be:	in     al,dx
  4102bf:	imul   DWORD PTR [esi+eax*1-0x37f238ec]
  4102c6:	ins    DWORD PTR es:[edi],dx
  4102c7:	pop    esp
  4102c8:	aad    0xbf
  4102ca:	es mov ecx,0x40c658c2
  4102d0:	sti    
  4102d1:	cwde   
  4102d2:	iret   
  4102d3:	mov    ebp,0x49c02ff8
  4102d8:	ror    BYTE PTR [edx+0x5466f338],0x75
  4102df:	jmp    0xdaebe70c
  4102e4:	xchg   edx,eax
  4102e5:	fsqrt  
  4102e7:	aaa    
  4102e8:	loope  0x4102dc
  4102ea:	ds inc esp
  4102ec:	and    DWORD PTR [ecx+0x2c],edx
  4102ef:	mov    ds:0xa8ac564c,eax
  4102f4:	data16 adc BYTE PTR [edx],ah
  4102f7:	adc    esp,DWORD PTR [edx+0x32]
  4102fa:	xchg   esp,eax
  4102fb:	loop   0x410335
  4102fd:	arpl   WORD PTR [ebx+0x33b75fa6],dx
  410303:	push   eax
  410304:	pusha  
  410305:	mov    bl,0x12
  410307:	push   eax
  410308:	lods   eax,DWORD PTR ds:[esi]
  410309:	aam    0xdf
  41030b:	sub    al,0xfe
  41030d:	int    0xad
  41030f:	lock fs adc dh,bl
  410313:	les    ebx,FWORD PTR [eax+ebx*1]
  410316:	cmp    bl,BYTE PTR [edx+0x16]
  410319:	fistp  QWORD PTR [edx]
  41031b:	adc    dl,ah
  41031d:	or     BYTE PTR [edi],0x12
  410320:	jbe    0x410317
  410322:	push   eax
  410323:	and    esp,DWORD PTR [esi+0x72]
  410326:	fnstsw WORD PTR [ebx+0x19]
  410329:	ja     0x4102c0
  41032b:	add    eax,0x30a5f8cf
  410330:	or     al,0x8e
  410332:	call   0x16aa:0x73fa038f
  410339:	add    bl,BYTE PTR [esi-0x37c036af]
  41033f:	mov    al,0x34
  410341:	pop    edi
  410342:	xor    eax,0xde66dfa5
  410347:	xchg   edi,eax
  410348:	mov    dh,0x83
  41034a:	sub    DWORD PTR [ebx-0x19],esp
  41034d:	nop
  41034e:	and    eax,0x1956157e
  410353:	ficomp DWORD PTR [edi+esi*2+0x19db8df2]
  41035a:	icebp  
  41035b:	fidiv  DWORD PTR ds:0xba633c64
  410361:	jp     0x4103dd
  410363:	dec    ebp
  410364:	dec    edi
  410365:	xor    ebp,ebp
  410367:	xchg   edx,eax
  410368:	mov    al,0xd7
  41036a:	sub    eax,0xdb0e28ed
  41036f:	pop    ecx
  410370:	inc    edx
  410371:	nop    edx
  410374:	out    0x3b,eax
  410376:	(bad)  
  410377:	test   BYTE PTR [edi-0x74bb7115],dl
  41037d:	and    al,0x8c
  41037f:	mov    esi,DWORD PTR [ebx-0x64348408]
  410385:	jae    0x410308
  410387:	pop    es
  410388:	ficomp WORD PTR [ebx-0x47]
  41038b:	dec    edx
  41038c:	in     eax,dx
  41038d:	(bad)  
  41038e:	fdiv   DWORD PTR [esi-0x1]
  410391:	xchg   ebp,eax
  410392:	sahf   
  410393:	mov    bh,0xb7
  410395:	(bad)  
  410396:	loope  0x4103a2
  410398:	cmc    
  410399:	fsub   DWORD PTR [ecx+0x17]
  41039c:	mov    esp,0x41085d55
  4103a1:	mov    esp,0xa7924714
  4103a6:	push   0x87f62541
  4103ab:	dec    eax
  4103ac:	sub    BYTE PTR [esi],cl
  4103ae:	sub    edi,ebx
  4103b0:	mov    ah,0x95
  4103b2:	mov    esp,0xd1d663f8
  4103b7:	adc    dh,BYTE PTR [edi-0x6c5d020a]
  4103bd:	in     eax,0x87
  4103bf:	pop    eax
  4103c0:	mov    ebp,0xcafd99e5
  4103c5:	ror    DWORD PTR [esi+0x3d],1
  4103c8:	xor    DWORD PTR [ebx-0x40],eax
  4103cb:	popa   
  4103cc:	stc    
  4103cd:	fild   DWORD PTR [eax]
  4103cf:	sbb    DWORD PTR [edi],eax
  4103d1:	into   
  4103d2:	add    DWORD PTR [edi],edx
  4103d4:	jle    0x4103c9
  4103d6:	jno    0x410421
  4103d8:	mov    esi,0xb6f5f9ed
  4103dd:	adc    al,0x7c
  4103df:	das    
  4103e0:	retf   
  4103e1:	call   0x5b901da9
  4103e6:	cmp    DWORD PTR [edi+0x14a7e69d],edi
  4103ec:	cmp    eax,0x6d0e0d3
  4103f1:	js     0x4103db
  4103f3:	jno    0x4103fc
  4103f5:	xlat   BYTE PTR ss:[ebx]
  4103f7:	ret    0xadec
  4103fa:	mov    eax,ds:0xfef5056
  4103ff:	mov    ebx,0x70369e19
  410404:	in     eax,0x13
  410406:	std    
  410407:	fdiv   QWORD PTR [ebp-0x507fbde3]
  41040d:	xchg   ebp,eax
  41040e:	mov    ch,0x0
  410410:	out    dx,eax
  410411:	push   ss
  410412:	and    DWORD PTR [ecx+ebp*1-0x63cade8a],esp
  410419:	imul   bh
  41041b:	aam    0xc5
  41041d:	mov    DWORD PTR [ebx],esp
  41041f:	jp     0x410449
  410421:	dec    ebp
  410422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410423:	fdiv   QWORD PTR [ecx-0x61]
  410426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410427:	test   esi,esp
  410429:	fcom   QWORD PTR [eax+0x349e72ba]
  41042f:	inc    ebx
  410430:	jns    0x41040f
  410432:	jl     0x4103ea
  410434:	lds    ebx,FWORD PTR [esp+esi*1]
  410437:	sbb    eax,0xc69799e5
  41043c:	ror    bh,cl
  41043e:	add    al,0xf2
  410440:	jne    0x410492
  410442:	popf   
  410443:	test   BYTE PTR [ecx+0x70],dl
  410446:	mov    esi,0xfc39051a
  41044b:	pop    esi
  41044c:	call   0x51cd6136
  410451:	pop    ss
  410452:	jb     0x41040c
  410454:	xchg   esi,eax
  410455:	outs   dx,DWORD PTR ds:[esi]
  410456:	fs xchg esp,eax
  410458:	mov    ch,0x8f
  41045a:	and    dl,ch
  41045c:	mov    ebp,0x1c801bd
  410461:	shr    BYTE PTR ss:[ecx+0x6126fe5b],0xf9
  410469:	inc    ecx
  41046a:	sbb    dl,BYTE PTR gs:[eax]
  41046d:	xchg   ecx,eax
  41046e:	test   al,0xe7
  410470:	gs pop esp
  410472:	dec    esp
  410473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410474:	xchg   edx,eax
  410475:	jecxz  0x410451
  410477:	std    
  410478:	fidivr WORD PTR [edx]
  41047a:	xor    edi,edx
  41047c:	test   eax,0xfc60c048
  410481:	shl    BYTE PTR [ebx-0x74],1
  410484:	(bad)  
  410485:	jae    0x41044e
  410487:	gs (bad) 
  410489:	fbld   TBYTE PTR [ecx+0x3583c0ca]
  41048f:	hlt    
  410490:	add    BYTE PTR [eax+eax*1],0xcc
  410494:	inc    ebp
  410495:	addr16 pushf 
  410497:	xor    BYTE PTR cs:[edx-0x21273a7],bh
  41049e:	idiv   esp
  4104a0:	(bad)  
  4104a1:	push   0x34
  4104a3:	or     DWORD PTR [edi+0x5f],esi
  4104a6:	loopne 0x410465
  4104a8:	es adc al,0xe2
  4104ab:	cs xor edi,DWORD PTR ss:[esi+0x1df66c10]
  4104b3:	mov    dl,0xf4
  4104b5:	or     DWORD PTR [edi],esi
  4104b7:	adc    al,0x6a
  4104b9:	dec    edx
  4104ba:	or     esp,0xffffff99
  4104bd:	pop    esi
  4104be:	mov    eax,0xf1add0e
  4104c3:	ret    0x5a7b
  4104c6:	aas    
  4104c7:	call   0xc35a:0x3928f8fe
  4104ce:	pusha  
  4104cf:	xchg   cl,cl
  4104d1:	xchg   ecx,eax
  4104d2:	aam    0x15
  4104d4:	(bad)  
  4104d5:	sbb    eax,0x261fbddf
  4104da:	retf   
  4104db:	ins    DWORD PTR es:[edi],dx
  4104dc:	test   DWORD PTR [ecx+ebp*8+0x49],0x8996620e
  4104e4:	sbb    edx,DWORD PTR [ecx+0xabe89c0]
  4104ea:	stos   BYTE PTR es:[edi],al
  4104eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104ec:	xlat   BYTE PTR ds:[ebx]
  4104ed:	repz shl BYTE PTR [edi+0x2],cl
  4104f1:	and    bh,BYTE PTR [esp+edx*4-0x768a6b69]
  4104f8:	jp     0x410557
  4104fa:	les    esp,FWORD PTR [ebx]
  4104fc:	sbb    al,dh
  4104fe:	es dec ecx
  410500:	sar    BYTE PTR [edi-0x69275c02],cl
  410506:	xor    BYTE PTR [esi-0x42],dh
  410509:	cmp    BYTE PTR [ecx+esi*2-0x5a],0xc3
  41050e:	sar    BYTE PTR [esi],1
  410510:	cli    
  410511:	mov    ah,0x9a
  410513:	loop   0x410541
  410515:	sbb    eax,0x4352e9e2
  41051a:	sahf   
  41051b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41051c:	test   al,0x27
  41051e:	inc    esi
  41051f:	popa   
  410520:	dec    eax
  410521:	mov    esp,0x91a8b39c
  410526:	(bad)  
  410527:	iret   
  410528:	dec    edx
  410529:	adc    eax,0xcffe1795
  41052e:	sub    BYTE PTR [esi-0x43],dl
  410531:	rol    BYTE PTR [esi],1
  410533:	fcmove st,st(0)
  410535:	push   0x5c00533c
  41053a:	ret    0xb864
  41053d:	sub    DWORD PTR [esi],ecx
  41053f:	mov    ch,0x9f
  410541:	jp     0x410548
  410543:	iret   
  410544:	mov    bl,0x3d
  410546:	out    dx,eax
  410547:	out    0x4b,al
  410549:	lock dec ecx
  41054b:	push   ecx
  41054c:	or     DWORD PTR [ebx+0x44],0x1f88e1ea
  410553:	aam    0xff
  410555:	call   0xb6a2:0xc79d6635
  41055c:	mov    ebp,0xaa44ffd1
  410561:	nop
  410562:	leave  
  410563:	aam    0x4e
  410565:	shr    DWORD PTR [ecx],1
  410567:	idiv   DWORD PTR [ebp-0x5fd842b]
  41056d:	and    eax,0xa73ccc26
  410572:	lea    esi,[edx-0x72]
  410575:	jns    0x4105b5
  410577:	jae    0x410517
  410579:	dec    eax
  41057a:	sbb    DWORD PTR [edi],esi
  41057c:	test   eax,0x5d699fd9
  410581:	cld    
  410582:	push   eax
  410583:	outs   dx,DWORD PTR ds:[esi]
  410584:	xor    edi,DWORD PTR [edi]
  410586:	xchg   ecx,eax
  410587:	jo     0x4105b0
  410589:	in     eax,0x56
  41058b:	push   ebp
  41058c:	fist   WORD PTR [edx]
  41058e:	dec    eax
  41058f:	sar    DWORD PTR cs:[ebp-0x41e11808],0xd
  410597:	mov    gs,edi
  410599:	sbb    BYTE PTR [esi],al
  41059b:	popa   
  41059c:	test   al,0xa7
  41059e:	addr16 dec esp
  4105a0:	add    al,0xf6
  4105a2:	sbb    esi,0xdccde62e
  4105a8:	pop    edx
  4105a9:	or     edi,edx
  4105ab:	retf   
  4105ac:	xor    DWORD PTR [ecx+0x61],0xc18e4170
  4105b3:	or     edx,esp
  4105b5:	iret   
  4105b6:	push   ecx
  4105b7:	jmp    0x124e:0x232606b2
  4105be:	cmc    
  4105bf:	adc    DWORD PTR [edx],ebx
  4105c1:	jl     0x41061a
  4105c3:	sbb    al,0x0
  4105c5:	jo     0x410613
  4105c7:	xchg   ebx,eax
  4105c8:	push   edi
  4105c9:	pop    edx
  4105ca:	leave  
  4105cb:	icebp  
  4105cc:	sub    dh,BYTE PTR [edi]
  4105ce:	ins    DWORD PTR es:[edi],dx
  4105cf:	(bad)  
  4105d1:	idiv   BYTE PTR [ecx]
  4105d3:	jmp    0x410572
  4105d5:	jno    0x4105d4
  4105d7:	mov    ebx,0xa918d5d
  4105dc:	sti    
  4105dd:	hlt    
  4105de:	mov    ecx,0x64dca347
  4105e3:	mov    ebp,0xbd966e71
  4105e8:	(bad)  
  4105ea:	call   0x356a:0x339ea6c7
  4105f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f2:	call   0xbf1e:0xbe6515df
  4105f9:	(bad)  
  4105fa:	pop    es
  4105fb:	pop    ds
  4105fc:	(bad)  
  4105fd:	in     eax,dx
  4105fe:	ins    DWORD PTR es:[edi],dx
  4105ff:	mov    esi,ebp
  410601:	push   ebx
  410602:	xchg   ebp,eax
  410603:	xlat   BYTE PTR ds:[ebx]
  410604:	shl    BYTE PTR [eax+edx*4],cl
  410607:	inc    ebp
  410608:	ja     0x410621
  41060a:	dec    ebp
  41060b:	mov    WORD PTR [eax+0x41151ba2],?
  410611:	stos   BYTE PTR es:[edi],al
  410612:	mov    al,ds:0xbd1217b1
  410617:	dec    ebp
  410618:	dec    edi
  410619:	jae    0x4105b6
  41061b:	iret   
  41061c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41061d:	cmp    BYTE PTR [ecx],al
  41061f:	retf   0xff4d
  410622:	mov    WORD PTR [ebx+0x4ad64153],gs
  410628:	aaa    
  410629:	(bad)  
  41062a:	call   0x1329:0xe3ed756b
  410631:	jnp    0x410696
  410633:	xor    eax,DWORD PTR [bx+0x51]
  410637:	imul   esi,esi,0xffffff89
  41063a:	mov    edx,0xbecd22f0
  41063f:	cmp    ecx,ebx
  410641:	fwait
  410642:	jae    0x410619
  410644:	enterw 0x9c6d,0x99
  410649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41064a:	cmp    DWORD PTR [ecx+0x4e],ebx
  41064d:	cmp    ebp,DWORD PTR [eax-0x45]
  410650:	aas    
  410651:	retf   
  410652:	shl    DWORD PTR [ebx-0x56d740b3],cl
  410658:	mov    ah,0x7c
  41065a:	ds xchg edi,eax
  41065c:	scas   al,BYTE PTR es:[edi]
  41065d:	mov    eax,ds:0x886ad14c
  410662:	adc    BYTE PTR [edi],al
  410664:	(bad)  
  410665:	enter  0x336e,0xe0
  410669:	or     ch,bl
  41066b:	dec    esp
  41066c:	dec    esi
  41066d:	out    0x91,eax
  41066f:	cmp    esi,ebp
  410671:	push   edi
  410672:	lahf   
  410673:	mov    ebx,0x345dc11d
  410678:	loope  0x4106b0
  41067a:	xlat   BYTE PTR ds:[ebx]
  41067b:	mov    ds:0x169d1014,eax
  410680:	aad    0xe1
  410682:	js     0x4106f9
  410684:	sub    al,0xc8
  410686:	mov    WORD PTR [esi],ds
  410688:	popa   
  410689:	jg     0x410700
  41068b:	mov    eax,ds:0xf3351f3c
  410690:	xor    al,0x4e
  410692:	mov    ebp,0x1be83c75
  410697:	call   0x53e2b5b6
  41069c:	cmovae ebx,DWORD PTR [ebx]
  41069f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a0:	jg     0x4106a0
  4106a2:	cs aam 0x88
  4106a5:	adc    al,0x26
  4106a7:	adc    DWORD PTR ds:0xba46d78f,0xfddd8f80
  4106b1:	add    edi,DWORD PTR [ebx+0x16]
  4106b4:	daa    
  4106b5:	in     eax,dx
  4106b6:	add    DWORD PTR [eax-0x335f09d3],edx
  4106bc:	leave  
  4106bd:	inc    eax
  4106be:	enter  0xb135,0x2b
  4106c2:	data16 std 
  4106c4:	xor    BYTE PTR [edi-0x56],al
  4106c7:	retf   0xef8f
  4106ca:	jae    0x4106d9
  4106cc:	imul   esi,DWORD PTR [esi+0x5d],0xffffff81
  4106d0:	retf   0x9e47
  4106d3:	arpl   WORD PTR [eax+0x2d],si
  4106d6:	jo     0x410747
  4106d8:	std    
  4106d9:	jns    0x41066b
  4106db:	lds    esi,FWORD PTR es:[edi]
  4106de:	in     al,0x81
  4106e0:	inc    ebp
  4106e1:	lods   al,BYTE PTR ds:[esi]
  4106e2:	hlt    
  4106e3:	sbb    al,BYTE PTR [eax+ecx*2+0x1af82064]
  4106ea:	jp     0x4106e9
  4106ec:	adc    BYTE PTR [edx+0x47a30fe8],bh
  4106f2:	xor    eax,0x2cdb0310
  4106f7:	popf   
  4106f8:	sub    eax,0x8e699dde
  4106fd:	fld    QWORD PTR ds:0xbe734f3
  410703:	push   cs
  410704:	ret    
  410705:	or     BYTE PTR [edx-0x35313059],bl
  41070b:	cld    
  41070c:	push   edx
  41070d:	sub    BYTE PTR es:[esi],ah
  410710:	stos   BYTE PTR es:[edi],al
  410711:	push   edx
  410712:	in     eax,0xbf
  410714:	push   ss
  410715:	xchg   ebp,eax
  410716:	out    0x3,eax
  410718:	(bad)  
  41071a:	xchg   ebp,eax
  41071b:	push   ebx
  41071c:	leave  
  41071d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41071e:	lock adc ebx,DWORD PTR [ebp+0x77936801]
  410725:	sbb    ebp,DWORD PTR [ebp-0x63]
  410728:	outs   dx,BYTE PTR ds:[esi]
  410729:	jns    0x410798
  41072b:	xor    eax,0xea835fe9
  410730:	fild   DWORD PTR [ecx+0xc8268bb]
  410736:	xchg   ebp,eax
  410737:	mov    DWORD PTR [eax+0x71],esi
  41073a:	(bad)  
  41073c:	in     eax,0x85
  41073e:	add    al,0xf1
  410740:	cmc    
  410741:	inc    edi
  410742:	xor    BYTE PTR [esi],ah
  410744:	adc    bl,BYTE PTR [edi-0x69]
  410747:	mov    esi,0xa6b7365a
  41074c:	outs   dx,BYTE PTR ds:[esi]
  41074d:	xchg   edi,eax
  41074e:	mov    eax,0x3c426ed6
  410753:	call   0xe3ebddf7
  410758:	push   edi
  410759:	out    0xe6,al
  41075b:	sbb    DWORD PTR [edx],ebp
  41075d:	pop    ds
  41075e:	lods   al,BYTE PTR ds:[esi]
  41075f:	aaa    
  410760:	hlt    
  410761:	adc    ebx,esi
  410763:	imul   DWORD PTR [edx+esi*2]
  410766:	inc    edx
  410767:	mov    BYTE PTR [edi],bh
  410769:	fcom   QWORD PTR [edi+0x35]
  41076c:	dec    ebp
  41076d:	rol    BYTE PTR [edx],0xf2
  410770:	call   0xda5c3a75
  410775:	in     al,dx
  410776:	push   esi
  410777:	ror    cl,0xed
  41077a:	loopne 0x410724
  41077c:	dec    edi
  41077d:	aad    0x88
  41077f:	mov    DWORD PTR [ecx+edx*1],ecx
  410782:	rsqrtps xmm1,XMMWORD PTR [esi+0x11f8e5e5]
  410789:	mov    ds:0x106ea6c2,al
  41078e:	stos   BYTE PTR es:[edi],al
  41078f:	sub    esi,DWORD PTR [edi]
  410791:	pop    ds
  410792:	sbb    esp,esp
  410794:	outs   dx,BYTE PTR ds:[esi]
  410795:	pop    ebx
  410796:	jne    0x4107c9
  410798:	aaa    
  410799:	je     0x4107af
  41079b:	xchg   esp,eax
  41079c:	cmp    al,0x1e
  41079e:	inc    esp
  41079f:	fmul   DWORD PTR [ebx-0x79]
  4107a2:	mov    ds:0xdccb45df,al
  4107a7:	pop    eax
  4107a8:	or     ah,cl
  4107aa:	out    dx,eax
  4107ab:	mov    cl,0x55
  4107ad:	gs sub al,0x2
  4107b0:	inc    esi
  4107b1:	sbb    edi,DWORD PTR [ebp-0x26]
  4107b4:	and    ah,BYTE PTR [edx-0x35]
  4107b7:	mov    ds:0x382b2336,al
  4107bc:	es out dx,eax
  4107be:	adc    esp,edi
  4107c0:	xchg   ebx,eax
  4107c1:	fbld   TBYTE PTR [eax-0x6a]
  4107c4:	mov    DWORD PTR [ebx+0x40],edx
  4107c7:	daa    
  4107c8:	sbb    ebp,DWORD PTR [ecx]
  4107ca:	not    BYTE PTR [esi+0x64]
  4107cd:	push   esp
  4107ce:	es ins DWORD PTR es:[edi],dx
  4107d0:	xlat   BYTE PTR ds:[ebx]
  4107d1:	inc    edx
  4107d2:	outs   dx,BYTE PTR ds:[esi]
  4107d3:	jns    0x410759
  4107d5:	or     DWORD PTR [ecx+0x5a],ebx
  4107d8:	add    al,0xa4
  4107da:	xchg   BYTE PTR [eax+eax*2+0x4],bl
  4107de:	push   edi
  4107df:	dec    esi
  4107e0:	dec    ecx
  4107e1:	lds    ebp,FWORD PTR [ecx+0x32]
  4107e4:	popa   
  4107e5:	sti    
  4107e6:	fs jb  0x41079f
  4107e9:	cmp    DWORD PTR [ebx-0xd3c94b6],edx
  4107ef:	or     DWORD PTR [esi],0xce610a29
  4107f5:	mov    dh,0x7c
  4107f7:	or     DWORD PTR [ecx-0x3b],esi
  4107fa:	push   ss
  4107fb:	mov    dl,0x24
  4107fd:	push   eax
  4107fe:	inc    edx
  4107ff:	or     BYTE PTR [eax-0x43],dl
  410802:	add    edx,DWORD PTR es:[eax-0x1c]
  410806:	xor    ebx,DWORD PTR [edi-0x702d2679]
  41080c:	pop    es
  41080d:	sub    eax,0x20702722
  410812:	scas   eax,DWORD PTR es:[edi]
  410813:	leave  
  410814:	retf   0x4b8c
  410817:	mov    ebp,DWORD PTR [esp+edi*4-0x3d]
  41081b:	mov    ds:0x5a2009f0,eax
  410820:	int3   
  410821:	test   DWORD PTR [ecx+0x43654e2],0xec1e4ab9
  41082b:	push   cs
  41082c:	stos   BYTE PTR es:[edi],al
  41082d:	sbb    dl,BYTE PTR [edx-0x3515bf1d]
  410833:	inc    eax
  410834:	cmp    BYTE PTR [edx],dh
  410836:	mov    ds,ecx
  410838:	sar    ebp,cl
  41083a:	cmp    eax,0x66167646
  41083f:	pop    esi
  410840:	cmp    eax,DWORD PTR [ebp-0xa1ed19e]
  410846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410847:	inc    esp
  410848:	push   ebx
  410849:	pop    esp
  41084a:	or     ebp,esp
  41084c:	aam    0xc0
  41084e:	sub    BYTE PTR [ebp-0x5b],dl
  410851:	cmp    DWORD PTR [ecx],ecx
  410853:	mov    ecx,edi
  410855:	out    dx,al
  410856:	in     al,dx
  410857:	fisub  DWORD PTR [ebx-0x63d67c37]
  41085d:	adc    ecx,esi
  41085f:	dec    edx
  410860:	dec    eax
  410861:	pop    eax
  410862:	stc    
  410863:	retf   
  410864:	adc    al,0xe
  410866:	add    ecx,DWORD PTR [edx+0x7597823e]
  41086c:	inc    eax
  41086d:	repz aad 0x6a
  410870:	cli    
  410871:	mov    dh,0xbf
  410873:	scas   al,BYTE PTR es:[edi]
  410874:	jecxz  0x4108e6
  410876:	int    0xd7
  410878:	leave  
  410879:	mov    ch,0x2a
  41087b:	mov    dh,0xc5
  41087d:	icebp  
  41087e:	push   ds
  41087f:	mov    edi,0x429b1a51
  410884:	gs out 0x47,al
  410887:	sub    DWORD PTR [edi-0x64c0111f],eax
  41088d:	leave  
  41088e:	sar    esp,0xb6
  410891:	push   ebx
  410892:	das    
  410893:	in     eax,0x47
  410895:	xchg   esp,eax
  410896:	rol    bl,1
  410898:	(bad)  
  410899:	mov    fs,WORD PTR [edi-0x50e31a05]
  41089f:	scas   eax,DWORD PTR es:[edi]
  4108a0:	test   ah,0x11
  4108a3:	dec    ebx
  4108a4:	cli    
  4108a5:	fwait
  4108a6:	popa   
  4108a7:	fwait
  4108a8:	sub    esp,DWORD PTR [edi-0x2527b40e]
  4108ae:	lods   eax,DWORD PTR ds:[esi]
  4108af:	dec    ebx
  4108b0:	mov    ah,0x9a
  4108b2:	dec    ecx
  4108b3:	push   eax
  4108b4:	cdq    
  4108b5:	fimul  DWORD PTR [esi]
  4108b7:	mov    ds,WORD PTR [edi+0x5cdb7754]
  4108bd:	ret    0x9172
  4108c0:	sahf   
  4108c1:	adc    al,0x1c
  4108c3:	jb     0x410935
  4108c5:	out    dx,eax
  4108c6:	inc    ebx
  4108c7:	call   0xcc2b7d4
  4108cc:	cli    
  4108cd:	xchg   esi,esi
  4108cf:	sbb    edx,DWORD PTR [esi]
  4108d1:	sahf   
  4108d2:	loope  0x4108be
  4108d4:	mov    ebx,0xbe98ceec
  4108d9:	hlt    
  4108da:	jge    0x410909
  4108dc:	cdq    
  4108dd:	dec    edx
  4108de:	(bad)  [eax+0x4428df25]
  4108e4:	test   dl,0x21
  4108e7:	gs in  al,dx
  4108e9:	jle    0x4108f8
  4108eb:	in     al,dx
  4108ec:	or     al,0xcd
  4108ee:	inc    edx
  4108ef:	mov    ecx,0x1329facd
  4108f4:	out    dx,eax
  4108f5:	add    esp,DWORD PTR [ebx+0x47]
  4108f8:	lahf   
  4108f9:	aaa    
  4108fa:	add    DWORD PTR [eax-0x50],0xffffffd8
  4108fe:	retf   
  4108ff:	fcmovu st,st(0)
  410901:	mov    ds:0xf1517766,al
  410906:	stc    
  410907:	repz enter 0x9742,0x92
  41090c:	mov    dh,0x86
  41090e:	ret    
  41090f:	inc    eax
  410910:	xchg   edx,eax
  410911:	popa   
  410912:	mov    WORD PTR [ecx+0x4941b441],gs
  410918:	ss nop
  41091a:	shl    BYTE PTR [ecx+0x63530fa2],cl
  410920:	xor    al,0x9f
  410922:	push   DWORD PTR [edi+0x23113691]
  410928:	add    DWORD PTR [ebp-0x565b4d40],ecx
  41092e:	aad    0xa8
  410930:	fs (bad) 
  410933:	add    edi,ebp
  410935:	mov    cl,0x2f
  410937:	ret    
  410938:	dec    ebx
  410939:	push   esi
  41093a:	push   0x7beccd40
  41093f:	jmp    0x4108dd
  410941:	push   ds
  410942:	arpl   WORD PTR [ebx-0xb],sp
  410945:	in     al,dx
  410946:	or     BYTE PTR [esi-0xb],bh
  410949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41094a:	adc    dl,BYTE PTR [ebp-0x65]
  41094d:	sbb    al,BYTE PTR [esi-0x785b7e7c]
  410953:	xor    esi,DWORD PTR [ecx-0x7bcc0179]
  410959:	mov    ebp,0x36cc838e
  41095e:	test   edx,edx
  410960:	xchg   ecx,eax
  410961:	outs   dx,DWORD PTR ds:[esi]
  410962:	iret   
  410963:	sbb    esp,eax
  410965:	sbb    DWORD PTR [ebx+0x45c44e54],esi
  41096b:	shr    DWORD PTR [ebp-0x14a10c62],0x21
  410972:	(bad)  
  410973:	sbb    ah,ch
  410975:	aas    
  410976:	clc    
  410977:	addr16 push esp
  410979:	pop    ebp
  41097a:	leave  
  41097b:	not    DWORD PTR [esi]
  41097d:	mov    bl,0xb2
  41097f:	loopne 0x410935
  410981:	imul   edi,DWORD PTR [esi-0x71315194],0x2d
  410988:	call   FWORD PTR [ebx-0x5ab22649]
  41098e:	push   esi
  41098f:	mov    DWORD PTR [esi-0x2f0e2a6e],eax
  410995:	ja     0x4109e0
  410997:	push   ecx
  410998:	(bad)  
  410999:	in     al,dx
  41099a:	or     BYTE PTR [ecx+edi*2+0x7c],0xe8
  41099f:	cmp    bh,bh
  4109a1:	adc    dl,BYTE PTR [esi-0x5fd7827c]
  4109a7:	fadd   DWORD PTR [edi+0x42]
  4109aa:	ss jg  0x4109b1
  4109ad:	out    dx,al
  4109ae:	pop    eax
  4109af:	out    dx,al
  4109b0:	push   0xffffffb0
  4109b2:	cli    
  4109b3:	sub    BYTE PTR [ecx],ch
  4109b5:	jae    0x410982
  4109b7:	dec    esi
  4109b8:	add    ecx,ebp
  4109ba:	(bad)  
  4109bb:	cmp    DWORD PTR [ebx+0x56],ecx
  4109be:	in     al,dx
  4109bf:	ja     0x4109b3
  4109c1:	sbb    esi,ebx
  4109c3:	dec    ebp
  4109c4:	in     al,dx
  4109c5:	mov    bl,0xc9
  4109c7:	pop    edx
  4109c8:	mov    ch,0x8e
  4109ca:	cmp    edx,0x3652bb8b
  4109d0:	lahf   
  4109d1:	sub    BYTE PTR [ebx],al
  4109d3:	mov    al,ds:0x8765642f
  4109d8:	push   0x4afe3746
  4109dd:	xor    ah,al
  4109df:	jmp    0x148f:0xdd58d54c
  4109e6:	pop    ds
  4109e7:	in     al,dx
  4109e8:	fstp   st(3)
  4109ea:	push   0xffffffde
  4109ec:	imul   edx,DWORD PTR [eax+0x5af5931c],0x1a
  4109f3:	sub    cl,BYTE PTR [esi]
  4109f5:	xchg   ebx,eax
  4109f6:	sub    ch,BYTE PTR [edx-0x37f7d8ab]
  4109fc:	jmp    0x5cec:0xf54cc10b
  410a03:	pusha  
  410a04:	fstp   QWORD PTR [eax+0x25]
  410a07:	fisubr DWORD PTR [ebp+ecx*4+0xe]
  410a0b:	gs inc edi
  410a0d:	inc    ecx
  410a0e:	scas   al,BYTE PTR es:[edi]
  410a0f:	lea    ecx,[eax]
  410a11:	hlt    
  410a12:	inc    ecx
  410a13:	push   es
  410a14:	cmp    eax,0x5eb60c4d
  410a19:	loopne 0x4109db
  410a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a1c:	push   ss
  410a1d:	push   edx
  410a1e:	cmp    al,0x42
  410a20:	sti    
  410a21:	jne    0x4109ac
  410a23:	jp     0x410a51
  410a25:	lahf   
  410a26:	call   DWORD PTR [ecx+0x3646c9d4]
  410a2c:	arpl   WORD PTR [ecx+0x21],di
  410a2f:	idiv   ah
  410a31:	imul   edi,DWORD PTR [ebx-0x17],0x7bad3825
  410a38:	aaa    
  410a39:	mov    ds:0x1d30f5a8,eax
  410a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a3f:	or     BYTE PTR [edx],0x4e
  410a42:	into   
  410a43:	pop    edi
  410a44:	jl     0x410a68
  410a46:	das    
  410a47:	fist   WORD PTR [esi+ecx*4]
  410a4a:	xor    al,0xb2
  410a4c:	lods   eax,DWORD PTR ds:[esi]
  410a4d:	popf   
  410a4e:	inc    eax
  410a4f:	mov    dh,0x18
  410a51:	(bad)  
  410a52:	out    dx,al
  410a53:	je     0x410ab0
  410a55:	nop
  410a56:	fisub  WORD PTR [ebp-0x720d29ac]
  410a5c:	lea    edi,[ebp-0x68]
  410a5f:	and    ebx,esp
  410a61:	push   edx
  410a62:	pop    es
  410a63:	dec    ebx
  410a64:	outs   dx,DWORD PTR ds:[esi]
  410a65:	adc    edx,eax
  410a67:	fisub  WORD PTR [ecx]
  410a69:	sub    BYTE PTR [ecx+0x797f7e73],dh
  410a6f:	clts   
  410a71:	(bad)  [ebx+0x13]
  410a74:	push   edx
  410a75:	add    DWORD PTR [esi+eax*2-0x1b840af7],esi
  410a7c:	add    BYTE PTR [ecx+ebx*1-0x769295f8],ah
  410a83:	pop    esp
  410a84:	stos   DWORD PTR es:[edi],eax
  410a85:	xchg   ecx,eax
  410a86:	cmovle edx,DWORD PTR [ecx-0x7ac9f9d9]
  410a8d:	jmp    0x410a8d
  410a8f:	dec    DWORD PTR [eax+0x61]
  410a92:	jg     0x410a34
  410a94:	out    0x86,eax
  410a96:	jno    0x410b08
  410a98:	test   DWORD PTR [esi],edx
  410a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a9b:	pusha  
  410a9c:	in     eax,dx
  410a9d:	pop    esi
  410a9e:	sub    eax,0x25b4d0b2
  410aa3:	shl    DWORD PTR [ebx-0x34dc04ad],1
  410aa9:	mov    ah,0x96
  410aab:	xlat   BYTE PTR ds:[ebx]
  410aac:	sbb    DWORD PTR es:[edi],edi
  410aaf:	icebp  
  410ab0:	pop    ds
  410ab1:	inc    edx
  410ab2:	imul   ebp,DWORD PTR [esi],0x43586e5
  410ab8:	call   DWORD PTR [edi-0x2f]
  410abb:	das    
  410abc:	jbe    0x410a53
  410abe:	mov    al,0xe5
  410ac0:	addr16 test eax,0x970e3b7b
  410ac6:	aad    0x7
  410ac8:	aaa    
  410ac9:	stos   BYTE PTR es:[edi],al
  410aca:	xor    al,0x2e
  410acc:	jmp    0xa40f:0x1fdd0abe
  410ad3:	adc    ecx,edx
  410ad5:	xchg   esp,eax
  410ad6:	adc    al,0xce
  410ad8:	adc    eax,0x252104af
  410add:	cmc    
  410ade:	aaa    
  410adf:	xor    dl,BYTE PTR [esi]
  410ae1:	test   ebx,ecx
  410ae3:	sar    DWORD PTR [ebx+0x4d],0x8b
  410ae7:	sbb    BYTE PTR [ebx+0x2cd2d44d],0xa9
  410aee:	mov    ds:0x8f573b24,eax
  410af3:	test   BYTE PTR [eax+0x16],0x54
  410af7:	outs   dx,BYTE PTR ds:[esi]
  410af8:	push   ebx
  410af9:	das    
  410afa:	cli    
  410afb:	pusha  
  410afc:	mov    ds:0x3ef49f8e,eax
  410b01:	add    eax,0x6fa0afcc
  410b06:	or     eax,0x2347f243
  410b0b:	mov    ecx,0xff852fdf
  410b10:	in     al,dx
  410b11:	les    esi,FWORD PTR [ecx]
  410b13:	std    
  410b14:	pop    esi
  410b15:	fs adc eax,0xc0015db0
  410b1b:	and    eax,0x1f24c971
  410b20:	dec    esi
  410b21:	(bad)  
  410b23:	jg     0x410b81
  410b25:	outs   dx,DWORD PTR ds:[esi]
  410b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b27:	(bad)  
  410b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b2a:	(bad)
  410b2e:	hlt    
  410b2f:	call   FWORD PTR [eax]
  410b31:	xor    eax,0xa45aba73
  410b36:	popf   
  410b37:	lods   eax,DWORD PTR ds:[esi]
  410b38:	adc    dl,BYTE PTR [edx]
  410b3a:	leave  
  410b3b:	in     eax,dx
  410b3c:	pop    ebx
  410b3d:	daa    
  410b3e:	aas    
  410b3f:	das    
  410b40:	pop    edi
  410b41:	clc    
  410b42:	sbb    ch,BYTE PTR [ecx-0x585af714]
  410b48:	adc    ah,BYTE PTR [edx-0x22]
  410b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4c:	ror    DWORD PTR [esi],1
  410b4e:	outs   dx,BYTE PTR ds:[esi]
  410b4f:	jge    0x410bba
  410b51:	test   DWORD PTR [ecx-0x1e],esi
  410b54:	shl    DWORD PTR [eax+0x31dc0412],1
  410b5a:	inc    eax
  410b5b:	sub    dh,BYTE PTR [eax+edi*2+0x7dce8aaf]
  410b62:	jmp    0x410bdb
  410b64:	adc    DWORD PTR [edx-0x3af22306],esi
  410b6a:	mov    esi,0x1a934eef
  410b6f:	xlat   BYTE PTR ds:[ebx]
  410b70:	(bad)  
  410b71:	idiv   BYTE PTR [ebp+0x6feefec1]
  410b77:	xchg   esi,eax
  410b78:	push   ds
  410b79:	aam    0xc0
  410b7b:	sbb    eax,DWORD PTR [ebx-0x4f]
  410b7e:	or     ebp,DWORD PTR [eax-0x532ba31f]
  410b84:	mov    esi,DWORD PTR [edx]
  410b86:	fisttp QWORD PTR [edx+0x62]
  410b89:	cmp    ah,bl
  410b8b:	adc    ebp,DWORD PTR [ecx-0x26]
  410b8e:	stos   BYTE PTR es:[edi],al
  410b8f:	rcr    eax,cl
  410b91:	loope  0x410b6e
  410b93:	stc    
  410b94:	xor    BYTE PTR [ebx],0x4b
  410b97:	popa   
  410b98:	mov    DWORD PTR [esi-0x70653ea2],edi
  410b9e:	aaa    
  410b9f:	lods   al,BYTE PTR ds:[esi]
  410ba0:	mov    ebp,DWORD PTR [ebx]
  410ba2:	test   DWORD PTR [ebx-0x22ba0b20],eax
  410ba8:	lods   eax,DWORD PTR ds:[esi]
  410ba9:	loope  0x410ba8
  410bab:	or     edi,DWORD PTR [esp+edx*4-0x45cad6cd]
  410bb2:	cmp    al,0x67
  410bb4:	mov    bl,0x66
  410bb6:	pop    edi
  410bb7:	retf   0xbee8
  410bba:	out    dx,al
  410bbb:	push   edi
  410bbc:	mov    eax,0xb0f8ea73
  410bc1:	jb     0x410bf1
  410bc3:	xor    dl,BYTE PTR [eax-0x44]
  410bc6:	mov    bh,0x22
  410bc8:	mov    ch,0x1b
  410bca:	out    0x91,al
  410bcc:	and    cl,dl
  410bce:	pop    ds
  410bcf:	xor    DWORD PTR [edx+ebp*8-0x73],esi
  410bd3:	adc    esp,DWORD PTR [ebp-0x692cc8db]
  410bd9:	fs push esi
  410bdb:	daa    
  410bdc:	add    ecx,DWORD PTR [ebx-0x5926f344]
  410be2:	sbb    ah,BYTE PTR ds:0xe99ac671
  410be8:	(bad)  [ecx-0x11db5317]
  410bee:	call   DWORD PTR [ebp+0x3b62b924]
  410bf4:	fisub  WORD PTR [ecx+ecx*1-0x540bd4c6]
  410bfb:	add    eax,0xc10ce150
  410c00:	sub    eax,ecx
  410c02:	popa   
  410c03:	cs jmp 0x8bf9:0x58100b2c
  410c0b:	pop    ss
  410c0c:	bound  eax,QWORD PTR [edi]
  410c0e:	push   ecx
  410c0f:	mov    esi,0xaf08fff6
  410c14:	mov    ah,0x8a
  410c16:	test   al,0x7e
  410c18:	ret    
  410c19:	add    eax,0x7219277c
  410c1e:	sub    BYTE PTR es:[esi],0xe
  410c22:	repz das 
  410c24:	out    0xa2,eax
  410c26:	push   ds
  410c27:	loopne 0x410c97
  410c29:	mov    edx,0xa7861c70
  410c2e:	xchg   ecx,eax
  410c2f:	sar    BYTE PTR [esi-0x23],0x7f
  410c33:	stos   BYTE PTR es:[edi],al
  410c34:	xor    DWORD PTR [esi-0x4ab93b53],esi
  410c3a:	fistp  WORD PTR [edx-0x61]
  410c3d:	pop    ss
  410c3e:	lea    esp,ds:0xbc71b326
  410c44:	pop    ds
  410c45:	pop    es
  410c46:	sbb    eax,0xec430e61
  410c4b:	sbb    dl,0x48
  410c4e:	xlat   BYTE PTR ds:[ebx]
  410c4f:	or     ebp,edx
  410c51:	push   esi
  410c52:	imul   esp,DWORD PTR [esi+0x5],0xd9fe7a92
  410c59:	repz or BYTE PTR [esi+0x2b],cl
  410c5d:	daa    
  410c5e:	les    esp,FWORD PTR [ebx]
  410c60:	shr    DWORD PTR [esi+esi*2+0x700d916f],1
  410c67:	jle    0x410c2f
  410c69:	xchg   ebx,eax
  410c6a:	(bad)  
  410c6b:	outs   dx,DWORD PTR ds:[esi]
  410c6c:	xchg   ebp,eax
  410c6d:	test   eax,0x81e6a4a4
  410c72:	inc    eax
  410c73:	xchg   ebx,eax
  410c74:	dec    ebp
  410c75:	xchg   edi,eax
  410c76:	adc    DWORD PTR [ecx+0x6540f2bf],0x6cba880e
  410c80:	xchg   esi,eax
  410c81:	mov    edx,0x8108862
  410c86:	pop    ebx
  410c87:	jmp    DWORD PTR [esi+0x7fb74641]
  410c8d:	mov    ecx,DWORD PTR [edi+0x18]
  410c90:	jno    0x410c6b
  410c92:	mov    edx,0xff6badb7
  410c97:	lods   al,BYTE PTR ds:[esi]
  410c98:	repnz xchg ebx,eax
  410c9a:	fs sbb al,0x92
  410c9d:	test   eax,0xa37f3957
  410ca2:	mov    esi,0x62dbd44e
  410ca7:	cmp    ecx,DWORD PTR [eax-0x30]
  410caa:	sbb    ecx,DWORD PTR [eax]
  410cac:	test   BYTE PTR [ecx+esi*8+0x4c6795d0],dl
  410cb3:	or     ch,0x88
  410cb6:	lds    eax,FWORD PTR [eax+edi*1+0x128d258a]
  410cbd:	fwait
  410cbe:	or     al,0xa0
  410cc0:	jns    0x410c67
  410cc2:	xchg   esp,eax
  410cc3:	mov    es,edx
  410cc5:	xor    BYTE PTR [esi],0x2
  410cc8:	popf   
  410cc9:	jne    0x410cd8
  410ccb:	out    dx,eax
  410ccc:	jecxz  0x410c61
  410cce:	push   ebp
  410ccf:	add    eax,0x694c509a
  410cd4:	and    ah,BYTE PTR [esi]
  410cd6:	pop    eax
  410cd7:	aam    0x3a
  410cd9:	into   
  410cda:	adc    al,0x70
  410cdc:	adc    al,0x8b
  410cde:	mov    ebp,DWORD PTR [eax-0x79b34ed2]
  410ce4:	jmp    FWORD PTR [edx+0x39]
  410ce7:	mov    eax,ds:0xd4725670
  410cec:	dec    edx
  410ced:	mov    eax,ds:0x21853d0a
  410cf2:	sahf   
  410cf3:	mov    eax,0x1bc52478
  410cf8:	pop    edi
  410cf9:	cmp    dl,bh
  410cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cfc:	(bad)  
  410cfd:	call   0x774d3a6f
  410d02:	data16 rcr BYTE PTR [edi+esi*2],cl
  410d06:	or     DWORD PTR [edi+esi*1],0xffffffd0
  410d0a:	sahf   
  410d0b:	(bad)  
  410d0d:	cmp    ebx,eax
  410d0f:	cwde   
  410d10:	shl    BYTE PTR [ebx],1
  410d12:	cmp    edi,ebp
  410d14:	xchg   DWORD PTR [eax-0x412cebc2],edx
  410d1a:	stc    
  410d1b:	xchg   edi,eax
  410d1c:	mov    eax,0x7baecfba
  410d21:	inc    esi
  410d22:	ds ja  0x410d3c
  410d25:	fsubp  st(1),st
  410d27:	and    al,0xb
  410d29:	xchg   ebp,eax
  410d2a:	not    BYTE PTR [ebx+0x6cd25620]
  410d30:	pop    esi
  410d31:	cld    
  410d32:	jp     0x410d85
  410d34:	push   es
  410d35:	sub    DWORD PTR [ebp+0x6acb7800],ebx
  410d3b:	fwait
  410d3c:	les    ecx,FWORD PTR [ecx]
  410d3e:	pop    eax
  410d3f:	and    al,0x8b
  410d41:	dec    esp
  410d42:	mov    ebp,0xa4933231
  410d47:	cmp    BYTE PTR [esi+0x47ba495f],0x32
  410d4e:	xor    ah,dh
  410d50:	cmp    ah,BYTE PTR [eax-0x12]
  410d53:	das    
  410d54:	mov    esi,0x899adbbf
  410d59:	mov    DWORD PTR [ecx+edx*2-0x5fd5664],ebx
  410d60:	fadd   DWORD PTR [eax+0x37]
  410d63:	test   eax,0x45b71643
  410d68:	(bad)  
  410d6a:	sub    eax,0x2bb3cb37
  410d6f:	call   FWORD PTR [edx-0x76b5606e]
  410d75:	pushf  
  410d76:	das    
  410d77:	add    dl,bl
  410d79:	push   es
  410d7a:	sbb    esp,DWORD PTR [eax+edi*8]
  410d7d:	sti    
  410d7e:	pop    edx
  410d7f:	ror    BYTE PTR [ecx-0x6a],1
  410d82:	add    al,0x80
  410d84:	add    eax,0xeefa914f
  410d89:	adc    BYTE PTR [esi],0x66
  410d8c:	mov    WORD PTR [eax+0x61243dad],cs
  410d92:	cld    
  410d93:	xor    al,BYTE PTR [edi+0xf]
  410d96:	int    0x7
  410d98:	inc    edx
  410d99:	jns    0x410deb
  410d9b:	mov    ah,0xed
  410d9d:	nop
  410d9e:	call   0x47f8:0x30dff297
  410da5:	enter  0x9160,0x94
  410da9:	bound  ebx,QWORD PTR [edx]
  410dab:	jno    0x410d9f
  410dad:	lods   eax,DWORD PTR ds:[esi]
  410dae:	mov    ebx,0x9ec9cb0e
  410db3:	mov    eax,?
  410db5:	push   edx
  410db6:	arpl   WORD PTR [edi],cx
  410db8:	fldenv [edi-0x29]
  410dbb:	sub    eax,0x674ebe71
  410dc0:	mov    edi,0x5737df7c
  410dc5:	aaa    
  410dc6:	mov    al,0x73
  410dc8:	xor    esi,DWORD PTR [edx-0x67]
  410dcb:	arpl   bp,dx
  410dcd:	push   ebp
  410dce:	xchg   ecx,edx
  410dd0:	adc    cl,dh
  410dd2:	shl    BYTE PTR [ecx-0x10061c8e],cl
  410dd8:	or     al,0xd2
  410dda:	nop    esp
  410ddd:	fidiv  WORD PTR cs:0xd3c1acae
  410de4:	sub    eax,0xeb1f95c3
  410de9:	shl    DWORD PTR [ebx],0xe6
  410dec:	xor    esi,DWORD PTR [edx-0x11]
  410def:	rcl    BYTE PTR [ebp+0x43],cl
  410df2:	popa   
  410df3:	or     eax,0x6615cfce
  410df8:	add    DWORD PTR [ebx],edx
  410dfa:	push   cs
  410dfb:	out    0xff,eax
  410dfd:	mov    es,ebx
  410dff:	jbe    0x410d9a
  410e01:	cmc    
  410e02:	ret    0xbe6c
  410e05:	push   ss
  410e06:	jp     0x410d9f
  410e08:	xchg   ebp,eax
  410e09:	mov    gs,WORD PTR [edi-0xdf91217]
  410e0f:	jmp    0xe5a61dd9
  410e14:	es pop esi
  410e16:	xchg   BYTE PTR [edi-0x2b],bl
  410e19:	pop    ss
  410e1a:	push   ebx
  410e1b:	push   es
  410e1c:	adc    DWORD PTR [ecx],0xcc03a4b8
  410e22:	gs or  ecx,edx
  410e25:	mov    cl,BYTE PTR [edi]
  410e27:	dec    esp
  410e28:	shl    edx,1
  410e2a:	mov    esp,0x51e02329
  410e2f:	cdq    
  410e30:	xchg   BYTE PTR [edx],ch
  410e32:	clc    
  410e33:	imul   ebx,DWORD PTR [esp+edx*2+0xd620d90],0xb6e0603d
  410e3e:	add    BYTE PTR [edi+0x11],bh
  410e41:	pop    esi
  410e42:	cli    
  410e43:	cs stos DWORD PTR es:[edi],eax
  410e45:	pop    ecx
  410e46:	std    
  410e47:	fiadd  DWORD PTR [ebx]
  410e49:	pop    es
  410e4a:	lods   eax,DWORD PTR ds:[esi]
  410e4b:	cdq    
  410e4c:	jle    0x410dcf
  410e4e:	push   ds
  410e4f:	(bad)  
  410e50:	popf   
  410e51:	pop    ebp
  410e52:	mov    BYTE PTR [eax+0xb],bh
  410e55:	sub    DWORD PTR [edi-0xbce0119],edx
  410e5b:	aad    0xc9
  410e5d:	mov    dl,0x30
  410e5f:	add    eax,0x843f49eb
  410e64:	pop    edi
  410e65:	icebp  
  410e66:	mov    esp,0xd1a18618
  410e6b:	mov    ah,BYTE PTR [eax+0x44]
  410e6e:	mov    ch,0xc0
  410e70:	mov    esp,0xa5fdac24
  410e75:	xchg   ecx,eax
  410e76:	and    al,0x68
  410e78:	sub    bx,cx
  410e7b:	adc    edi,esp
  410e7d:	(bad)  
  410e7e:	out    0x41,al
  410e80:	xlat   BYTE PTR ds:[ebx]
  410e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e82:	mov    eax,0x1a91cb3d
  410e87:	adc    al,BYTE PTR [esi-0x6]
  410e8a:	sbb    bh,ah
  410e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e8d:	jae    0x410f0c
  410e8f:	pop    edi
  410e90:	mov    cl,0x17
  410e92:	inc    esi
  410e93:	out    0xee,eax
  410e95:	adc    DWORD PTR [esp+edi*4],eax
  410e98:	das    
  410e99:	rcl    BYTE PTR [edi],cl
  410e9b:	out    0x29,al
  410e9d:	mov    dl,0xd8
  410e9f:	(bad)  
  410ea0:	push   esp
  410ea1:	(bad)  
  410ea2:	mov    esp,0xc0b1d2ef
  410ea7:	in     eax,dx
  410ea8:	dec    edi
  410ea9:	add    DWORD PTR [ebp+0x497e4580],ebx
  410eaf:	xchg   esp,eax
  410eb0:	aad    0x73
  410eb2:	adc    DWORD PTR [eax+0x570a4225],eax
  410eb8:	sub    edi,DWORD PTR [eax]
  410eba:	lods   eax,DWORD PTR ds:[esi]
  410ebb:	int    0x8d
  410ebd:	nop
  410ebe:	xchg   edi,eax
  410ebf:	mov    bl,0x3f
  410ec1:	retf   0x64c6
  410ec4:	out    0x84,al
  410ec6:	push   0xb
  410ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ec9:	sub    DWORD PTR [ebx+0x17],edx
  410ecc:	shl    DWORD PTR [ebx],cl
  410ece:	mov    eax,ds:0x41ef4aa6
  410ed3:	push   esi
  410ed4:	outs   dx,DWORD PTR ds:[esi]
  410ed5:	(bad)  
  410ed6:	inc    ebp
  410ed7:	out    dx,al
  410ed8:	test   BYTE PTR [ebx-0x3c],cl
  410edb:	in     eax,0x9b
  410edd:	push   0xb5dfd7ac
  410ee2:	adc    BYTE PTR [esi-0x58bc2927],bl
  410ee8:	jns    0x410ee5
  410eea:	retf   
  410eeb:	adc    al,0xdb
  410eed:	add    ecx,DWORD PTR [ecx]
  410eef:	scas   ax,WORD PTR es:[edi]
  410ef1:	pop    esp
  410ef2:	pop    edx
  410ef3:	dec    ebp
  410ef4:	xchg   ebx,eax
  410ef5:	mov    cl,0x5
  410ef7:	hlt    
  410ef8:	pop    ebx
  410ef9:	pushf  
  410efa:	ficomp WORD PTR [eax]
  410efc:	popa   
  410efd:	mov    eax,ds:0xa18c13ac
  410f02:	rol    BYTE PTR [ebx+0x12cb7156],0x6b
  410f09:	sub    al,0xbb
  410f0b:	dec    ecx
  410f0c:	xor    edi,DWORD PTR [edi]
  410f0e:	or     al,0x38
  410f10:	mov    esi,0xee132cb2
  410f15:	xchg   BYTE PTR [eax-0x6beed0ee],al
  410f1b:	inc    ecx
  410f1c:	pop    edx
  410f1d:	mov    eax,0xa8a01e03
  410f22:	stos   DWORD PTR es:[edi],eax
  410f23:	(bad)
  410f26:	lock sub bh,ah
  410f29:	cli    
  410f2a:	(bad)  
  410f2b:	mov    ebx,0xe92d931
  410f30:	sbb    al,0xdf
  410f32:	les    edi,FWORD PTR [edx-0x43c5fb52]
  410f38:	jecxz  0x410f13
  410f3a:	push   eax
  410f3b:	fsubr  QWORD PTR [esi-0x5d]
  410f3e:	dec    ebx
  410f3f:	ins    BYTE PTR es:[edi],dx
  410f40:	dec    esi
  410f41:	jbe    0x410ef1
  410f43:	pop    esp
  410f44:	and    eax,0xb478a32b
  410f49:	hlt    
  410f4a:	xor    DWORD PTR [ebp-0x337d8c7c],esi
  410f50:	pop    ds
  410f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f52:	aad    0x8e
  410f54:	retf   
  410f55:	pop    edi
  410f56:	push   0x56
  410f58:	mov    dh,0x84
  410f5a:	push   es
  410f5b:	jmp    0x5eb83f00
  410f60:	sbb    BYTE PTR [edi+edx*8+0x4b8c2e44],dh
  410f67:	cdq    
  410f68:	dec    edx
  410f69:	push   eax
  410f6a:	mov    ecx,0xec0efdec
  410f6f:	xchg   edi,eax
  410f70:	pop    esp
  410f71:	ja     0x410f9d
  410f73:	leave  
  410f74:	pop    ebp
  410f75:	sbb    bh,BYTE PTR [esi+0x3717c8d0]
  410f7b:	(bad)  
  410f7c:	mov    bh,0xda
  410f7e:	jl     0x410ffa
  410f80:	xor    bh,ah
  410f82:	mov    ah,0xec
  410f84:	arpl   bp,ax
  410f86:	add    eax,0xfac1cfbd
  410f8b:	call   0x9f0:0xe2f9b769
  410f92:	lahf   
  410f93:	lods   eax,DWORD PTR ds:[esi]
  410f94:	cmc    
  410f95:	out    dx,eax
  410f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f97:	mov    ebx,0x4a836d7
  410f9c:	sbb    DWORD PTR [ecx],ecx
  410f9e:	add    ch,dl
  410fa0:	jae    0x41100e
  410fa2:	pop    ds
  410fa3:	jmp    0xc6ddaa2e
  410fa8:	jle    0x410fb1
  410faa:	or     eax,0x9f52f06a
  410faf:	xor    DWORD PTR [ecx],edi
  410fb1:	adc    BYTE PTR [esi-0xd1ac7d6],bh
  410fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb8:	je     0x410f73
  410fba:	stos   BYTE PTR es:[edi],al
  410fbb:	into   
  410fbc:	jbe    0x410f5c
  410fbe:	xor    ecx,edi
  410fc0:	or     al,0x12
  410fc2:	mov    esp,DWORD PTR [ebx]
  410fc4:	(bad)  
  410fc6:	ficomp DWORD PTR [ebx]
  410fc8:	jae    0x410fa4
  410fca:	loope  0x410fdc
  410fcc:	leave  
  410fcd:	add    BYTE PTR [edx+0x4cc81430],dh
  410fd3:	popf   
  410fd4:	(bad)  
  410fd5:	lds    edx,FWORD PTR [edx-0x3]
  410fd8:	cmp    BYTE PTR [edi-0x6dce0ea8],ah
  410fde:	call   0x4fd8e169
  410fe3:	nop
  410fe4:	xor    DWORD PTR [eax-0x58daae71],esp
  410fea:	js     0x411007
  410fec:	and    BYTE PTR ds:0x30d217cf,dl
  410ff2:	and    DWORD PTR [ebx-0xdc73873],0xffffff85
  410ff9:	mov    ds:0x1313ff78,al
  410ffe:	retf   
  410fff:	pop    esp
  411000:	mov    ss,WORD PTR [esi+esi*4+0x64705a09]
  411007:	inc    edx
  411008:	cmp    cl,BYTE PTR [edx]
  41100a:	ja     0x411020
  41100c:	inc    eax
  41100d:	mov    ebx,0xa120837
  411012:	pushf  
  411013:	mov    al,0x3b
  411015:	jg     0x410fa8
  411017:	ds ss jns 0x410fcc
  41101b:	jg     0x410fc4
  41101d:	push   ds
  41101e:	sbb    esi,edx
  411020:	sbb    edi,DWORD PTR [esi]
  411022:	bound  ecx,QWORD PTR [edx+ecx*2-0xa]
  411026:	or     al,0x4
  411028:	ss cmc 
  41102a:	xchg   DWORD PTR [edi+0xace944a],ebp
  411030:	pop    ds
  411031:	sub    eax,0x193f41e1
  411036:	inc    edi
  411037:	or     eax,0x8cc23915
  41103c:	sub    al,0xab
  41103e:	inc    edx
  41103f:	jae    0x41106d
  411041:	je     0x410fd3
  411043:	mov    dh,BYTE PTR [edx]
  411045:	and    al,bl
  411047:	test   eax,0xdc1747ad
  41104c:	dec    eax
  41104d:	mov    esi,0xbb0d0754
  411052:	cmp    ah,cl
  411054:	pop    ebx
  411055:	enter  0x3697,0x3a
  411059:	adc    eax,0x77ded187
  41105e:	xchg   edx,eax
  41105f:	sub    bh,ah
  411061:	sti    
  411062:	hlt    
  411063:	sub    al,0xa9
  411065:	push   esi
  411066:	push   es
  411067:	and    esi,0xfffffff6
  41106a:	ret    
  41106b:	call   0x543:0x28845611
  411072:	popf   
  411073:	sbb    al,BYTE PTR [ebx+eiz*4]
  411076:	mov    DWORD PTR [eax-0x77],ebx
  411079:	pop    eax
  41107a:	aad    0x93
  41107c:	sti    
  41107d:	xor    DWORD PTR ds:0xd0f4c0f0,esp
  411083:	pop    ebp
  411084:	cli    
  411085:	(bad)  
  411087:	add    BYTE PTR [ebp+0x5d],cl
  41108a:	fisttp DWORD PTR [ebp+0x448d8bfb]
  411090:	or     cl,BYTE PTR [edi-0x43]
  411093:	push   es
  411094:	pop    es
  411095:	out    dx,eax
  411096:	push   ebp
  411097:	clc    
  411098:	cmp    al,BYTE PTR [ebx]
  41109a:	cmp    DWORD PTR [edi],0xffffffca
  41109d:	push   ebp
  41109e:	cmp    al,0x19
  4110a0:	xor    dl,BYTE PTR [edx-0x287f97f]
  4110a6:	ror    DWORD PTR [edx+0x6ffa4336],1
  4110ac:	xor    al,0x9f
  4110ae:	push   ss
  4110af:	jnp    0x4110b0
  4110b1:	loopne 0x41104b
  4110b3:	stos   DWORD PTR es:[edi],eax
  4110b4:	mov    edx,0x9f57a0f4
  4110b9:	sub    eax,0x9c62b2a7
  4110be:	dec    ebx
  4110bf:	xchg   ebx,eax
  4110c0:	push   0x16
  4110c2:	daa    
  4110c3:	aaa    
  4110c4:	mov    al,ds:0x5fe5fc8c
  4110c9:	lahf   
  4110ca:	lock test dl,al
  4110cd:	fmul   DWORD PTR [ecx-0x770a987a]
  4110d3:	dec    ebx
  4110d4:	xor    DWORD PTR [edx],edi
  4110d6:	jbe    0x411072
  4110d8:	out    dx,eax
  4110d9:	mov    ch,0x7e
  4110db:	loope  0x411119
  4110dd:	lds    esp,FWORD PTR [edi-0x5c]
  4110e0:	stos   DWORD PTR es:[edi],eax
  4110e1:	rol    DWORD PTR [ecx-0x6d],1
  4110e4:	jmp    0x411126
  4110e6:	xchg   ebx,eax
  4110e7:	fcom   QWORD PTR [esi-0x60fecb0a]
  4110ed:	aam    0x27
  4110ef:	shr    BYTE PTR [eax+0x70],1
  4110f2:	repnz loop 0x4110d7
  4110f5:	mov    ?,edi
  4110f7:	add    al,0xed
  4110f9:	mov    ds:0xb04a8753,eax
  4110fe:	mov    dl,0x34
  411100:	jmp    0x4110ac
  411102:	sahf   
  411103:	xor    al,0xea
  411105:	fnsave [edx+0x63219a8c]
  41110b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41110c:	xchg   ebx,eax
  41110d:	mov    cl,0xc0
  41110f:	or     DWORD PTR [eax-0x57],esp
  411112:	daa    
  411113:	mov    WORD PTR [ebp*1+0x3ee9abaa],?
  41111a:	sbb    DWORD PTR [eax+0x1e],esp
  41111d:	cmp    BYTE PTR [edx+0x7a3d61b8],ah
  411123:	jmp    0x2648cc99
  411128:	mov    ds:0x65b196b4,eax
  41112d:	enter  0x514f,0xbf
  411131:	inc    edx
  411132:	aad    0xd8
  411134:	sub    BYTE PTR [eax+0x15cb028d],0xfc
  41113b:	out    0xd8,al
  41113d:	pop    esp
  41113e:	inc    ecx
  41113f:	lock xlat BYTE PTR ds:[ebx]
  411141:	push   0x2e
  411143:	lock cdq 
  411145:	jae    0x411145
  411147:	stos   DWORD PTR es:[edi],eax
  411148:	in     eax,dx
  411149:	cmp    dh,ah
  41114b:	fadd   DWORD PTR [ebx+0xd7a19fb]
  411151:	popf   
  411152:	int3   
  411153:	inc    edx
  411154:	sub    bh,al
  411156:	jnp    0x4111b2
  411158:	pop    ss
  411159:	push   esi
  41115a:	pop    eax
  41115b:	add    eax,0xf8e0138b
  411160:	jp     0x41117b
  411162:	pop    ebx
  411163:	outs   dx,DWORD PTR ds:[esi]
  411164:	mov    cl,0x28
  411166:	add    ah,bh
  411168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411169:	cmp    eax,0xce4e908c
  41116e:	scas   al,BYTE PTR es:[edi]
  41116f:	(bad)  
  411170:	ficom  WORD PTR ds:0x86fddb22
  411176:	daa    
  411177:	gs jb  0x4111f9
  41117a:	lahf   
  41117b:	dec    DWORD PTR [esi-0x3818b8ac]
  411181:	inc    ecx
  411182:	add    al,0x56
  411184:	rol    DWORD PTR [esi-0x47],cl
  411187:	and    al,0x5b
  411189:	(bad)  
  41118a:	out    dx,eax
  41118b:	aas    
  41118c:	push   ecx
  41118d:	popf   
  41118e:	sar    esi,1
  411190:	dec    edx
  411191:	xor    al,BYTE PTR [ebx-0x4438f28e]
  411197:	sub    bh,al
  411199:	popa   
  41119a:	inc    edi
  41119b:	mov    bl,0xe1
  41119d:	cmp    al,BYTE PTR ds:0x8ba300a2
  4111a3:	and    esp,DWORD PTR [esi+0x4]
  4111a6:	adc    eax,0xe32f95e7
  4111ab:	das    
  4111ac:	cdq    
  4111ad:	mov    esp,0xe950e429
  4111b2:	xlat   BYTE PTR gs:[ebx]
  4111b4:	shl    BYTE PTR [eax],cl
  4111b6:	cld    
  4111b7:	jae    0x4111e9
  4111b9:	add    bh,BYTE PTR [edi+0x5b]
  4111bc:	jbe    0x411211
  4111be:	mov    bl,0x6a
  4111c0:	mov    ecx,0x22b35438
  4111c5:	dec    edi
  4111c6:	ror    DWORD PTR [edx+edi*8+0x54],1
  4111ca:	popf   
  4111cb:	das    
  4111cc:	cwde   
  4111cd:	jmp    DWORD PTR [edx+0x65]
  4111d0:	out    0x42,eax
  4111d2:	ficomp DWORD PTR [edi]
  4111d4:	cdq    
  4111d5:	push   0x6b
  4111d7:	aaa    
  4111d8:	es ret 0x697b
  4111dc:	and    DWORD PTR [ecx+0x53b6b1ef],eax
  4111e2:	std    
  4111e3:	sbb    edx,esi
  4111e5:	adc    BYTE PTR [edx+0x73],al
  4111e8:	pop    ebp
  4111e9:	sub    BYTE PTR [ecx+0x61],0xc0
  4111ed:	outs   dx,DWORD PTR ds:[esi]
  4111ee:	rol    dh,0x43
  4111f1:	sub    dl,0x31
  4111f4:	xchg   esi,eax
  4111f5:	fisttp DWORD PTR [ebx+0x6a921dbf]
  4111fb:	xor    eax,0xc6f17530
  411200:	jnp    0x41127a
  411202:	push   ds
  411203:	sti    
  411204:	mov    bl,0xac
  411206:	gs in  al,dx
  411208:	test   BYTE PTR [eax],dl
  41120a:	push   edi
  41120b:	jbe    0x4111b8
  41120d:	call   0x4abb:0x74e20823
  411214:	(bad)  
  411215:	in     eax,dx
  411216:	or     al,0xd2
  411218:	push   ss
  411219:	lahf   
  41121a:	mov    edx,0x8486bab
  41121f:	pushf  
  411220:	mov    ?,WORD PTR [ecx]
  411222:	mov    ebx,0xd79a8e03
  411227:	mov    ch,0xc2
  411229:	dec    ebp
  41122a:	lea    edi,[ecx+0x65]
  41122d:	mov    al,0x76
  41122f:	mov    ?,WORD PTR [ecx]
  411231:	xchg   ebx,eax
  411232:	int3   
  411233:	mov    ah,0x22
  411235:	(bad)  
  411236:	and    BYTE PTR [edi-0x27],cl
  411239:	and    al,0xd4
  41123c:	enter  0xf692,0x18
  411240:	mov    ah,BYTE PTR [esp+ebp*2+0x5e]
  411244:	pop    ebx
  411245:	pop    eax
  411246:	add    al,0xa5
  411248:	daa    
  411249:	mov    edx,0xc7465b4d
  41124e:	inc    eax
  41124f:	pop    esi
  411250:	mov    edx,DWORD PTR [edi]
  411252:	mov    edx,0x1360c2c2
  411257:	sti    
  411258:	xor    al,0x7e
  41125a:	dec    ebx
  41125b:	gs mov cl,0x1d
  41125e:	inc    ecx
  41125f:	lea    esi,[ebx]
  411261:	popa   
  411262:	or     BYTE PTR [edx+0x8],bh
  411265:	dec    edi
  411266:	mov    esp,0x1938f78c
  41126b:	leave  
  41126c:	(bad)  
  41126d:	adc    esp,DWORD PTR [ebx+0x2262dc4b]
  411273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411274:	inc    esp
  411275:	rcr    DWORD PTR [edi+0x71],0x95
  411279:	lods   al,BYTE PTR ds:[esi]
  41127a:	fwait
  41127b:	push   cs
  41127c:	sbb    bl,cl
  41127e:	mov    edi,ebx
  411280:	mov    ah,0x1
  411282:	or     ch,BYTE PTR [edx-0x639a1c18]
  411288:	add    edi,DWORD PTR ds:0xef0d862b
  41128e:	ss das 
  411290:	cmp    BYTE PTR [eax],dh
  411292:	dec    ebx
  411293:	pushf  
  411294:	sahf   
  411295:	data16 mov cl,0x3c
  411298:	std    
  411299:	jb     0x411292
  41129b:	pop    ebp
  41129c:	sbb    eax,0x181c1279
  4112a1:	stos   BYTE PTR es:[edi],al
  4112a2:	sti    
  4112a3:	ret    0xddb9
  4112a6:	repz xlat BYTE PTR ds:[bx]
  4112a9:	mul    DWORD PTR [esi]
  4112ab:	pop    ds
  4112ac:	mov    ch,al
  4112ae:	jle    0x41129d
  4112b0:	jnp    0x411320
  4112b2:	loope  0x4112e9
  4112b4:	and    ebx,DWORD PTR [ebx-0xb]
  4112b7:	call   0x8a1a:0xeb591d8
  4112be:	xchg   edx,eax
  4112bf:	mov    WORD PTR [edi],?
  4112c1:	jg     0x4112d9
  4112c3:	cdq    
  4112c4:	mov    eax,ds:0xc2399632
  4112c9:	xor    ch,BYTE PTR [ecx+0x5b]
  4112cc:	jae    0x41126c
  4112ce:	fcom   DWORD PTR [edi]
  4112d0:	inc    ecx
  4112d1:	mov    al,0xa8
  4112d3:	inc    ecx
  4112d4:	cmp    ebx,DWORD PTR [edx+esi*1+0x4ef95ff3]
  4112db:	mov    cl,0x24
  4112dd:	lea    edx,[eax+0xe]
  4112e0:	sahf   
  4112e1:	mov    dh,0xf7
  4112e3:	call   0x17c914ad
  4112e8:	ins    BYTE PTR es:[edi],dx
  4112e9:	sbb    BYTE PTR [ebp+0x32],0xa1
  4112ed:	cli    
  4112ee:	in     eax,0x8d
  4112f0:	or     cl,BYTE PTR [eax+0x46]
  4112f3:	out    0x62,al
  4112f5:	lock sar BYTE PTR [ecx-0xc10ef54],cl
  4112fc:	clc    
  4112fd:	dec    edx
  4112fe:	pop    edi
  4112ff:	int    0xe3
  411301:	jae    0x4112d3
  411303:	jge    0x4112ed
  411305:	inc    ebp
  411306:	sub    eax,0x69404dbe
  41130b:	mov    BYTE PTR [ecx+edi*1-0x1b4de808],0x58
  411313:	add    DWORD PTR [esi-0x42fda8a7],eax
  411319:	pop    ds
  41131a:	inc    edi
  41131b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41131c:	push   cs
  41131d:	xor    BYTE PTR [ecx+0x594ef385],bh
  411323:	xchg   esp,eax
  411324:	iret   
  411325:	jp     0x411339
  411327:	stc    
  411328:	arpl   WORD PTR ds:0xb21ee3cf,si
  41132e:	fs add eax,0x74857e13
  411334:	daa    
  411335:	xchg   edi,eax
  411336:	sahf   
  411337:	push   edi
  411338:	or     DWORD PTR [bx+0x3aba],esi
  41133d:	fidiv  WORD PTR [eax+0x62c9d1d]
  411343:	aam    0x53
  411345:	push   ebp
  411346:	jge    0x411399
  411348:	das    
  411349:	shr    BYTE PTR [edi+0x19],cl
  41134c:	inc    edx
  41134d:	cwde   
  41134e:	(bad)  
  41134f:	sbb    BYTE PTR [ecx],0xff
  411352:	add    al,0xe8
  411354:	mov    dh,0xfc
  411356:	hlt    
  411357:	mov    BYTE PTR [ebp+0x38a0249],cl
  41135d:	pop    ecx
  41135e:	scas   eax,DWORD PTR es:[edi]
  41135f:	push   ebp
  411360:	ret    
  411361:	adc    bl,ch
  411363:	popa   
  411364:	loope  0x41139b
  411366:	jno    0x411300
  411368:	jno    0x4113a6
  41136a:	ret    
  41136b:	jmp    0x7697:0xd504d03e
  411372:	and    ch,BYTE PTR [ebx+0x31]
  411375:	in     al,0xbe
  411377:	pop    ds
  411378:	pop    edx
  411379:	lds    edx,FWORD PTR [ecx+0x246c3df8]
  41137f:	xor    bl,BYTE PTR [esi+0x2b7aaf89]
  411385:	out    0x66,al
  411387:	in     al,0x39
  411389:	cwde   
  41138a:	fs and al,0x16
  41138d:	push   esi
  41138e:	pop    ecx
  41138f:	imul   eax,DWORD PTR [eax+0x7a936efd],0x13e8ff70
  411399:	lea    ebx,[eax-0x15]
  41139c:	xchg   edi,eax
  41139d:	icebp  
  41139e:	pop    eax
  41139f:	(bad)
  4113a2:	nop
  4113a3:	mov    esi,DWORD PTR [edi+ebx*2]
  4113a6:	pop    ebp
  4113a7:	xor    DWORD PTR [ecx+ebp*2-0x1e],esi
  4113ab:	out    dx,al
  4113ac:	sti    
  4113ad:	out    dx,eax
  4113ae:	arpl   ax,bx
  4113b0:	(bad)  
  4113b2:	imul   esp,esp,0xd223c2e8
  4113b8:	leave  
  4113b9:	xchg   ecx,eax
  4113ba:	in     al,dx
  4113bb:	sbb    ah,BYTE PTR [ecx]
  4113bd:	mov    ebp,0xb24871a1
  4113c2:	and    DWORD PTR [ebp+esi*2-0x2d201c4c],ebx
  4113c9:	outs   dx,BYTE PTR ds:[esi]
  4113ca:	inc    esi
  4113cb:	aad    0x1d
  4113cd:	mov    DWORD PTR [esi],ebx
  4113cf:	lods   al,BYTE PTR ds:[esi]
  4113d0:	retf   0x2acc
  4113d3:	add    al,BYTE PTR [ebx]
  4113d5:	push   0xf
  4113d7:	ss fsin 
  4113da:	in     eax,dx
  4113db:	(bad)  
  4113dc:	mov    ecx,0xd9660739
  4113e1:	cmp    ebp,DWORD PTR [ebx+0x35]
  4113e4:	mov    ebx,ecx
  4113e6:	mov    ah,0x18
  4113e8:	daa    
  4113e9:	scas   al,BYTE PTR es:[edi]
  4113ea:	test   DWORD PTR ds:[eax+edi*1+0x62474299],ecx
  4113f2:	or     dh,ah
  4113f4:	inc    edx
  4113f5:	in     eax,0x6b
  4113f7:	cdq    
  4113f8:	xor    BYTE PTR [esi],0xe9
  4113fb:	in     al,dx
  4113fc:	aas    
  4113fd:	and    al,0x58
  4113ff:	xchg   edi,eax
  411400:	add    eax,0x8ae25025
  411405:	(bad)  
  411406:	sbb    dl,BYTE PTR [ebx+0x2a730495]
  41140c:	push   ecx
  41140d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41140e:	add    al,0x2a
  411410:	ret    
  411411:	lahf   
  411412:	sar    BYTE PTR [eax],cl
  411414:	xchg   cl,al
  411416:	fmul   st,st(2)
  411418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411419:	xchg   DWORD PTR [eax+0x2f],eax
  41141c:	fimul  DWORD PTR [eax+esi*2-0x2a087322]
  411423:	inc    esi
  411424:	dec    esp
  411425:	retf   
  411426:	clc    
  411427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411428:	data16 mov ss,WORD PTR [ebx]
  41142b:	jne    0x411418
  41142d:	hlt    
  41142e:	repz gs in eax,dx
  411431:	icebp  
  411432:	add    al,0xc2
  411434:	xchg   edi,eax
  411435:	mov    esi,0x9ddfc48e
  41143a:	int3   
  41143b:	sbb    eax,0xba991d66
  411440:	jno    0x4114ab
  411442:	inc    ebp
  411443:	test   BYTE PTR [eax-0x14],ah
  411446:	pcmpgtb mm5,QWORD PTR [eax+0x796358ba]
  41144d:	mov    ebp,0x4270e8f4
  411452:	jns    0x411478
  411454:	out    0x53,al
  411456:	cmp    eax,0x2902cc06
  41145b:	jbe    0x411486
  41145d:	push   esp
  41145e:	dec    esp
  41145f:	sbb    esi,edx
  411461:	aad    0xe8
  411463:	mov    bl,0x84
  411465:	icebp  
  411466:	rcr    DWORD PTR [ebx+ebp*2+0x2ff65354],1
  41146d:	xor    eax,0xf66c1d2c
  411472:	mov    ecx,0x101d4612
  411477:	leave  
  411478:	and    al,0x94
  41147a:	les    esp,FWORD PTR [edi+0x2d]
  41147d:	fsubr  st(5),st
  41147f:	test   eax,0x39c26bf
  411484:	pop    eax
  411485:	enter  0x80e2,0x7f
  411489:	enter  0x87f,0x4b
  41148d:	nop
  41148e:	sbb    BYTE PTR [ebp+0x71],0x30
  411492:	sar    BYTE PTR [ebx],0xad
  411495:	stos   BYTE PTR es:[edi],al
  411496:	xlat   BYTE PTR ds:[ebx]
  411497:	sbb    BYTE PTR [ebx+ebp*4-0x13],cl
  41149b:	sbb    edi,ecx
  41149d:	stos   BYTE PTR es:[edi],al
  41149e:	cli    
  41149f:	dec    eax
  4114a0:	(bad)  
  4114a1:	ficomp WORD PTR [ebx+ebp*8+0x467cde3b]
  4114a8:	test   DWORD PTR [eax+0x1c2b008b],ebx
  4114ae:	push   0x11de55c1
  4114b3:	aaa    
  4114b4:	ror    DWORD PTR [ecx-0x10b300d4],cl
  4114ba:	iret   
  4114bb:	pop    esp
  4114bc:	inc    edi
  4114bd:	or     dh,BYTE PTR [edx-0x2f89bbd8]
  4114c3:	dec    esp
  4114c4:	xor    ebp,DWORD PTR [edi-0x42b08cb7]
  4114ca:	push   es
  4114cb:	jae    0x41151d
  4114cd:	in     al,dx
  4114ce:	add    BYTE PTR [eax+edx*4+0x3a],cl
  4114d2:	pop    esp
  4114d3:	and    BYTE PTR [edi+0x41],dl
  4114d6:	sbb    DWORD PTR [esi],ebp
  4114d8:	or     DWORD PTR [edx-0x30],esi
  4114db:	and    al,BYTE PTR [esi]
  4114dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114de:	dec    esi
  4114df:	or     DWORD PTR [esp+ecx*1-0x58],eax
  4114e3:	jmp    0x8a98996b
  4114e8:	addr16 sbb al,0x44
  4114eb:	shr    BYTE PTR [ebx],0x33
  4114ee:	scas   al,BYTE PTR es:[edi]
  4114ef:	cs dec esi
  4114f1:	scas   eax,DWORD PTR es:[edi]
  4114f2:	mov    ecx,0x614aab36
  4114f7:	jmp    0x41150b
  4114f9:	xor    al,0x8a
  4114fb:	and    ch,BYTE PTR [ecx+0x42a1f271]
  411501:	shl    al,0x4f
  411504:	sar    DWORD PTR [ecx],0xaa
  411507:	int3   
  411508:	cli    
  411509:	(bad)  
  41150a:	mov    al,0x7a
  41150c:	leave  
  41150d:	mov    DWORD PTR [eax],ebx
  41150f:	add    al,0x26
  411511:	jecxz  0x411512
  411513:	ds jbe 0x411530
  411516:	shr    BYTE PTR [edx+esi*2],1
  411519:	mov    dh,BYTE PTR [eax]
  41151b:	in     al,0x9b
  41151d:	jb     0x411540
  41151f:	push   ds
  411520:	das    
  411521:	xor    eax,DWORD PTR [edx+ebx*8]
  411524:	and    bl,BYTE PTR ds:0x109fff3c
  41152a:	and    al,0x46
  41152c:	sub    DWORD PTR [esi],esp
  41152e:	dec    esp
  41152f:	jns    0x4114ff
  411531:	es (bad) 
  411533:	mov    ds:0x9d49b76d,eax
  411538:	lods   al,BYTE PTR ds:[esi]
  411539:	inc    ebx
  41153a:	sub    edi,esi
  41153c:	fwait
  41153d:	scas   eax,DWORD PTR es:[edi]
  41153e:	gs popf 
  411540:	cmp    DWORD PTR [ebp-0x73],0xffffffaf
  411544:	add    eax,0x902dfa4f
  411549:	ss push ss
  41154b:	push   ss
  41154c:	call   0xef09f802
  411551:	sbb    eax,0x511287c0
  411556:	inc    ecx
  411557:	mov    ebp,0x93df7f72
  41155c:	mov    fs,WORD PTR [ecx+0x6972eb07]
  411562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411563:	mov    dl,0x6e
  411565:	pop    ss
  411566:	movups xmm2,XMMWORD PTR [ecx+0x4b791783]
  41156d:	dec    eax
  41156e:	mov    ecx,0x7442a64f
  411573:	popa   
  411574:	outs   dx,BYTE PTR ds:[esi]
  411575:	ret    0xd36a
  411578:	enter  0x8110,0x5a
  41157c:	lahf   
  41157d:	jg     0x411578
  41157f:	and    BYTE PTR [ebx+eax*2+0xf],dl
  411583:	cmp    ebx,ebx
  411585:	je     0x4115f9
  411587:	call   0x3c285d15
  41158c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158d:	sbb    BYTE PTR [edx+0x5609ca71],bl
  411593:	addr16 sub al,0xdb
  411596:	adc    ch,al
  411598:	jp     0x4115a5
  41159a:	xchg   esp,eax
  41159b:	mov    ebx,es
  41159d:	pushf  
  41159e:	in     eax,0xed
  4115a0:	mov    eax,edx
  4115a2:	jnp    0x4115f3
  4115a4:	or     al,0x11
  4115a6:	dec    esi
  4115a7:	aas    
  4115a8:	adc    cl,BYTE PTR [bp+di]
  4115ab:	cli    
  4115ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ad:	jl     0x411625
  4115af:	dec    ebx
  4115b0:	out    0x11,al
  4115b2:	pop    ebp
  4115b3:	stc    
  4115b4:	mov    cl,0xc0
  4115b6:	out    0xc2,al
  4115b8:	or     ah,BYTE PTR [ebp+ecx*1-0x3a95850]
  4115bf:	dec    ebx
  4115c0:	add    ah,dh
  4115c2:	mov    ch,0xab
  4115c4:	xchg   ecx,eax
  4115c5:	fdivr  QWORD PTR [ecx+edi*1]
  4115c8:	pop    edx
  4115c9:	dec    al
  4115cb:	inc    edx
  4115cc:	adc    bh,BYTE PTR [ecx]
  4115ce:	das    
  4115cf:	gs inc edi
  4115d1:	out    dx,al
  4115d2:	mov    ds:0x36c75971,al
  4115d7:	xor    al,0x17
  4115d9:	jmp    0x6fed7bd7
  4115de:	into   
  4115df:	outs   dx,BYTE PTR ds:[esi]
  4115e0:	push   ebp
  4115e1:	or     ah,BYTE PTR [esi]
  4115e3:	mov    al,ds:0x6163c36a
  4115e8:	and    BYTE PTR [ebx-0x54e9f956],ah
  4115ee:	hlt    
  4115ef:	bsr    ebp,edx
  4115f2:	xchg   edi,eax
  4115f3:	in     eax,dx
  4115f4:	gs mov bh,0x51
  4115f7:	je     0x411619
  4115f9:	(bad)  
  4115fb:	inc    esp
  4115fc:	int    0x4f
  4115fe:	fild   WORD PTR [edi]
  411600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411601:	and    cl,dh
  411603:	mov    ecx,DWORD PTR [ecx+0x2ad682b3]
  411609:	inc    ebp
  41160a:	inc    eax
  41160b:	mov    cl,0xd7
  41160d:	sbb    ebx,DWORD PTR [ecx-0x26]
  411610:	call   0x8e099650
  411615:	outs   dx,BYTE PTR ds:[esi]
  411616:	es sub eax,0xbf7727f7
  41161c:	sub    ah,BYTE PTR [edi]
  41161e:	dec    ebp
  41161f:	inc    ebx
  411620:	sub    DWORD PTR [ebx-0x9],edi
  411623:	adc    al,0x9e
  411625:	push   esp
  411626:	fiadd  DWORD PTR [eax-0x59fbe583]
  41162c:	popf   
  41162d:	(bad)  
  41162e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41162f:	mov    ebp,DWORD PTR [ecx]
  411631:	xchg   BYTE PTR [eax+0x273a2c43],dh
  411637:	repnz add ebx,edx
  41163a:	xlat   BYTE PTR ds:[ebx]
  41163b:	push   eax
  41163c:	test   BYTE PTR [esi+0x6dd40868],dl
  411642:	fs jmp 0x4073b110
  411648:	pop    esi
  411649:	mov    bh,0xa0
  41164b:	dec    ebx
  41164c:	cli    
  41164d:	cld    
  41164e:	mov    al,0x4d
  411650:	jne    0x411632
  411652:	gs adc esp,ecx
  411655:	call   0x6ac9e701
  41165a:	sbb    eax,0xdcf220eb
  41165f:	add    ch,BYTE PTR [edi]
  411661:	aad    0x3f
  411663:	push   ss
  411664:	dec    ebx
  411665:	data16 (bad) 
  411667:	das    
  411668:	fmul   QWORD PTR [eax]
  41166a:	inc    eax
  41166b:	xor    eax,0xa4c590e5
  411670:	ror    BYTE PTR [edi+0x52],0xdb
  411674:	mov    bh,0x7a
  411676:	shl    ah,1
  411678:	int    0xe3
  41167a:	add    al,0x45
  41167c:	dec    edi
  41167d:	xor    BYTE PTR [edi+0x3f6f1c1b],ch
  411683:	jnp    0x411683
  411685:	(bad)  
  411686:	sub    eax,0xa1647ab9
  41168b:	call   0x76f0:0x6de19a1a
  411692:	mov    al,0x4b
  411694:	xor    al,0xa0
  411696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411697:	and    BYTE PTR [edi+0x3b99b1b0],al
  41169d:	outs   dx,DWORD PTR ds:[esi]
  41169e:	cmp    BYTE PTR [edx-0x1d123c53],ah
  4116a4:	add    BYTE PTR [edx+0x6a1f16d3],al
  4116aa:	mov    ebx,0x88ccb2db
  4116af:	push   ds
  4116b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b1:	std    
  4116b2:	xchg   esp,eax
  4116b3:	retf   
  4116b4:	iret   
  4116b5:	fwait
  4116b6:	mov    edi,0xdfc5798e
  4116bb:	cmp    eax,0xd5ec3bbf
  4116c0:	scas   eax,DWORD PTR es:[edi]
  4116c1:	sub    al,0xec
  4116c3:	fisttp DWORD PTR [ebx+ecx*1]
  4116c6:	in     eax,0xc6
  4116c8:	mov    WORD PTR [ecx+0x6f],cs
  4116cb:	and    BYTE PTR [edi-0x2b],bl
  4116ce:	or     ebp,ecx
  4116d0:	jbe    0x411711
  4116d2:	xchg   esi,eax
  4116d3:	imul   BYTE PTR [edi-0x5dcd94e9]
  4116d9:	sub    edx,edi
  4116db:	call   0x729ec5f7
  4116e0:	ret    0xb369
  4116e3:	sub    eax,0xf0c48805
  4116e8:	leave  
  4116e9:	jnp    0x41174c
  4116eb:	inc    dh
  4116ed:	fwait
  4116ee:	gs into 
  4116f0:	lea    esi,[eax]
  4116f2:	add    ah,dl
  4116f4:	jno    0x411745
  4116f6:	sub    eax,0xef1df55c
  4116fb:	ret    
  4116fc:	dec    edi
  4116fd:	jbe    0x411724
  4116ff:	mov    esp,0x49f84db9
  411704:	dec    DWORD PTR [ebp*1-0x707bd13]
  41170b:	mov    ebx,0xb59f919d
  411710:	jge    0x411786
  411712:	push   cs
  411713:	ja     0x4116f9
  411715:	hlt    
  411716:	xchg   esp,eax
  411717:	mov    al,BYTE PTR [esi-0x2b]
  41171a:	xchg   esi,esp
  41171c:	sub    al,0x57
  41171e:	mov    al,0x66
  411720:	inc    esp
  411721:	xor    ebp,DWORD PTR ds:0x39c9b258
  411727:	jae    0x4116f5
  411729:	lds    esp,FWORD PTR [esi]
  41172b:	push   es
  41172c:	sbb    BYTE PTR [ebp-0x37],0xec
  411730:	(bad)  
  411731:	leave  
  411732:	rcl    DWORD PTR [ebp-0x4f],0x15
  411736:	test   DWORD PTR [eax+0x52],esi
  411739:	icebp  
  41173a:	dec    esp
  41173b:	xor    eax,0xdc072ea0
  411740:	inc    ecx
  411741:	daa    
  411742:	mov    ds:0x97a75572,al
  411747:	addr16 das 
  411749:	xor    dh,BYTE PTR [edi-0x56]
  41174c:	addr16 xchg esp,eax
  41174e:	test   BYTE PTR [edi-0xb63742],dh
  411754:	ja     0x4116d9
  411756:	cmc    
  411757:	mov    ds:0xb64ff61c,al
  41175c:	mov    al,ds:0xfd526146
  411761:	cmp    esi,DWORD PTR [ecx+0x223e5ec2]
  411767:	inc    edx
  411768:	mov    ebp,0x9b9ab1c
  41176d:	adc    ah,dl
  41176f:	adc    BYTE PTR [ecx],bh
  411771:	jbe    0x4117b2
  411773:	jle    0x4116f8
  411775:	call   0x9b13ef16
  41177a:	jns    0x41172a
  41177c:	pop    ecx
  41177d:	add    DWORD PTR [ecx-0x6b938a47],edi
  411783:	aad    0x63
  411785:	push   es
  411786:	xor    al,0xb0
  411788:	dec    esi
  411789:	add    esi,edi
  41178b:	scas   al,BYTE PTR es:[edi]
  41178c:	pop    esi
  41178d:	arpl   ax,sp
  41178f:	pop    edi
  411790:	lea    esi,[esi-0x407e576b]
  411796:	cmp    DWORD PTR [esp+edi*1],ebx
  411799:	ss fwait
  41179b:	mov    edx,0x8a29fec0
  4117a0:	addr16 repz fsub st,st(6)
  4117a4:	fstp   TBYTE PTR [eax-0xc]
  4117a7:	add    esp,DWORD PTR [esi-0x1162eb8e]
  4117ad:	or     al,0x86
  4117af:	pop    ds
  4117b0:	stc    
  4117b1:	push   esi
  4117b2:	xor    BYTE PTR [edi],ch
  4117b4:	pop    eax
  4117b5:	nop
  4117b6:	inc    ebx
  4117b7:	mov    esp,DWORD PTR [ebx+eiz*2+0x3a060ba8]
  4117be:	cmp    BYTE PTR [ebx],0x76
  4117c1:	in     al,0x74
  4117c3:	inc    ecx
  4117c4:	clc    
  4117c5:	pop    eax
  4117c6:	mov    ch,0xc5
  4117c8:	dec    edx
  4117c9:	mov    dl,0x9
  4117cb:	test   ch,al
  4117cd:	enter  0x1e19,0x42
  4117d1:	fcmovnb st,st(3)
  4117d3:	outs   dx,DWORD PTR ds:[esi]
  4117d4:	aad    0xde
  4117d6:	xor    esp,DWORD PTR [edx]
  4117d8:	and    dl,BYTE PTR [ebx+0x73]
  4117db:	pop    ebx
  4117dc:	mov    ebp,0xa8776d81
  4117e1:	xor    al,BYTE PTR [esi+esi*8]
  4117e4:	popa   
  4117e5:	add    eax,0xbb9d5597
  4117ea:	fwait
  4117eb:	or     eax,0x3a5990bc
  4117f0:	inc    esi
  4117f1:	imul   ebp,edx,0xa3ba35df
  4117f7:	pop    esi
  4117f8:	sti    
  4117f9:	imul   edi,ebx,0xffffffcf
  4117fc:	and    edx,DWORD PTR [esi-0x53]
  4117ff:	(bad)  
  411800:	std    
  411801:	cmp    BYTE PTR [ebx-0x8],al
  411804:	ficomp DWORD PTR [edx-0x5d718388]
  41180a:	shl    DWORD PTR [ecx],1
  41180c:	dec    esp
  41180d:	or     ah,ah
  41180f:	xor    ebp,ebx
  411811:	xlat   BYTE PTR ds:[ebx]
  411812:	and    esp,DWORD PTR [ebx*8+0x52dae2e7]
  411819:	jbe    0x41180e
  41181b:	or     al,0x8e
  41181d:	push   ecx
  41181e:	mov    bl,0xd2
  411820:	adc    al,0x26
  411822:	in     eax,0x6f
  411824:	pop    ds
  411825:	xor    DWORD PTR [ebx+0x6f11d5bb],0x22
  41182c:	push   ds
  41182d:	loopne 0x4117c7
  41182f:	sbb    eax,0x650c6cb3
  411834:	jl     0x4117cb
  411836:	push   ebp
  411837:	or     DWORD PTR [eax+0x79],0x41
  41183b:	fwait
  41183c:	push   esp
  41183d:	sahf   
  41183e:	enter  0xdbde,0x12
  411842:	sub    DWORD PTR [esi-0x33],esi
  411845:	loop   0x4118b4
  411847:	xchg   DWORD PTR [edx],esi
  411849:	test   al,0xfa
  41184b:	outs   dx,DWORD PTR ds:[esi]
  41184c:	adc    dh,BYTE PTR [edx+0x3904834a]
  411852:	dec    esp
  411853:	cli    
  411854:	fcomp  DWORD PTR [eax-0x3f54fdd9]
  41185a:	(bad)  
  41185c:	jne    0x411880
  41185e:	cli    
  41185f:	loope  0x41184f
  411861:	add    dh,bh
  411863:	cmc    
  411864:	rol    esi,cl
  411866:	mov    eax,0xa16e2b70
  41186b:	push   cs
  41186c:	ret    0x1770
  41186f:	imul   edi,edi,0x15
  411872:	cwde   
  411873:	pop    ds
  411874:	idiv   DWORD PTR [eax]
  411876:	call   0xb877:0xf2b87497
  41187d:	mov    ah,0xff
  41187f:	lock fstp TBYTE PTR [ebx]
  411882:	cmp    ebp,DWORD PTR [esi-0x6d]
  411885:	add    eax,0x29c31e3d
  41188a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188b:	enter  0x232c,0x94
  41188f:	outs   dx,BYTE PTR ds:[esi]
  411890:	xor    al,0xac
  411892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411893:	or     eax,0xc44b09
  411898:	ins    BYTE PTR es:[edi],dx
  411899:	push   0xb9c1c6bc
  41189e:	test   BYTE PTR [eax],cl
  4118a0:	inc    edi
  4118a1:	fcmovne st,st(0)
  4118a3:	ds call 0xc39eef48
  4118a9:	push   0x589c8d86
  4118ae:	push   ss
  4118af:	repnz xchg ecx,eax
  4118b1:	pusha  
  4118b2:	sub    BYTE PTR [ecx],ch
  4118b4:	adc    edx,DWORD PTR [esi-0x2ca748d6]
  4118ba:	test   eax,0x8d30a351
  4118bf:	pop    ss
  4118c0:	mov    al,BYTE PTR [edx]
  4118c2:	add    BYTE PTR [eax+0x49],cl
  4118c5:	add    edx,DWORD PTR [esi]
  4118c7:	sub    ah,al
  4118c9:	dec    eax
  4118ca:	retf   
  4118cb:	loop   0x411890
  4118cd:	in     al,dx
  4118ce:	mov    eax,ds:0x7cd55b3f
  4118d3:	jl     0x411897
  4118d5:	jae    0x411889
  4118d7:	push   cs
  4118d8:	mov    al,0x29
  4118da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118db:	in     al,dx
  4118dc:	test   ch,dl
  4118de:	pop    esi
  4118df:	dec    edx
  4118e0:	sar    bh,cl
  4118e2:	pop    esi
  4118e3:	cmp    eax,0xd7fabd34
  4118e8:	je     0x411931
  4118ea:	sti    
  4118eb:	cmp    al,0x48
  4118ed:	out    0xec,al
  4118ef:	jbe    0x411953
  4118f1:	xor    esp,DWORD PTR [ebx+0x35]
  4118f4:	mov    esp,0xa0ee27a
  4118f9:	cld    
  4118fa:	iret   
  4118fb:	js     0x411966
  4118fd:	fsub   QWORD PTR [ecx]
  4118ff:	call   0x8c6701
  411904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411905:	cmp    esp,DWORD PTR [ebp+0x29]
  411908:	push   es
  411909:	push   cs
  41190a:	into   
  41190b:	dec    ecx
  41190c:	dec    ebx
  41190d:	push   es
  41190e:	clc    
  41190f:	mov    ds:0x5c16457f,al
  411914:	push   ds
  411915:	fs icebp 
  411917:	xchg   ebp,eax
  411918:	add    eax,0x13d0a7b0
  41191d:	out    dx,eax
  41191e:	in     al,0x5b
  411920:	mov    eax,ds:0x2c2b6568
  411925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411926:	into   
  411927:	cmp    DWORD PTR [edx+0x4d],edi
  41192a:	mov    ch,0x24
  41192c:	aas    
  41192d:	ds inc eax
  41192f:	mov    eax,esp
  411931:	ret    
  411932:	aaa    
  411933:	dec    ebp
  411934:	inc    esi
  411935:	push   ecx
  411936:	pop    eax
  411937:	jge    0x411985
  411939:	fbld   TBYTE PTR [edi-0x5c8d676f]
  41193f:	inc    edi
  411940:	inc    esi
  411941:	div    DWORD PTR [edx+0x1a]
  411944:	pop    eax
  411945:	or     DWORD PTR [ecx-0x202a6755],edx
  41194b:	mov    fs,WORD PTR [edx-0x2b]
  41194e:	and    eax,esi
  411950:	test   dh,dh
  411952:	cmp    ebx,DWORD PTR [ebx]
  411954:	ins    BYTE PTR es:[edi],dx
  411955:	xor    dh,BYTE PTR [ebp-0x7ed69a22]
  41195b:	mov    ch,0x1b
  41195d:	ret    
  41195e:	cmp    DWORD PTR [ecx],esp
  411960:	das    
  411961:	bnd jae 0x4119d2
  411964:	add    BYTE PTR [esi+0x3f],dl
  411967:	fnstsw WORD PTR [ebp-0x784107d4]
  41196d:	jmp    0x41193f
  41196f:	dec    ebx
  411970:	retf   0x8658
  411973:	pop    ecx
  411974:	or     dh,bh
  411976:	(bad)  
  411977:	push   ds
  411978:	adc    eax,DWORD PTR [edx+0x4f]
  41197b:	cmp    ebp,DWORD PTR ds:0x911ea959
  411981:	jno    0x411914
  411983:	add    BYTE PTR [edi+0x5b401126],bl
  411989:	jo     0x41198f
  41198b:	arpl   WORD PTR [edi+0x45],cx
  41198e:	mov    ds:0xe0a08b06,al
  411993:	xchg   edi,eax
  411994:	sbb    eax,0xb692d664
  411999:	cmp    dl,BYTE PTR [esi]
  41199b:	cmp    al,0x43
  41199d:	aaa    
  41199e:	push   ss
  41199f:	sub    edi,esp
  4119a1:	popf   
  4119a2:	dec    esi
  4119a3:	dec    esi
  4119a4:	mov    ch,0x68
  4119a6:	adc    DWORD PTR [ebx],ecx
  4119a8:	lods   al,BYTE PTR ds:[esi]
  4119a9:	jnp    0x4119d7
  4119ab:	adc    DWORD PTR [edi+ecx*4-0x76],ecx
  4119af:	nop
  4119b0:	xchg   ecx,eax
  4119b1:	pop    edx
  4119b2:	dec    eax
  4119b3:	sbb    dh,0x8f
  4119b6:	stc    
  4119b7:	add    BYTE PTR [ecx+0x7bb767df],dl
  4119bd:	inc    ebp
  4119be:	ds xor ch,dh
  4119c1:	adc    DWORD PTR [ecx-0x80],ecx
  4119c4:	sub    eax,0x5c31ae97
  4119c9:	mov    ds,ebx
  4119cb:	dec    ebp
  4119cc:	pop    ds
  4119cd:	jae    0x411a3c
  4119cf:	neg    BYTE PTR [edx-0x21]
  4119d2:	xchg   BYTE PTR ds:0xd9421325,bl
  4119d8:	arpl   si,dx
  4119da:	outs   dx,BYTE PTR ds:[esi]
  4119db:	add    eax,0xc11849b3
  4119e0:	add    dh,BYTE PTR [ecx-0x14d8558f]
  4119e6:	sub    ebp,DWORD PTR [eax]
  4119e8:	mov    eax,0xf0129712
  4119ed:	retf   0xae47
  4119f0:	jl     0x411990
  4119f2:	cmp    esi,DWORD PTR [esi+0x37]
  4119f5:	pusha  
  4119f6:	test   al,0xd3
  4119f8:	pop    eax
  4119f9:	or     eax,0x474dea8
  4119fe:	add    eax,0x6b0fdcd3
  411a03:	mov    eax,0xbb8a4d76
  411a08:	jnp    0x4119b8
  411a0a:	cmp    bl,ah
  411a0c:	and    eax,0xa5179982
  411a11:	inc    ecx
  411a12:	jmp    0x9c15:0x3a81aed1
  411a19:	adc    DWORD PTR [edx],ecx
  411a1b:	xchg   ebx,eax
  411a1c:	mov    ebp,0x3df78909
  411a21:	cmp    ecx,DWORD PTR [esp-0x53]
  411a25:	cmp    ecx,DWORD PTR [edi-0x2c6f26a1]
  411a2b:	add    al,0x5f
  411a2d:	sub    al,0xc6
  411a2f:	ficom  DWORD PTR [edi+0x61]
  411a32:	mov    ebp,0x68b851d0
  411a37:	add    DWORD PTR [esi],edx
  411a39:	fdiv   QWORD PTR [eax+0x67]
  411a3c:	(bad)  
  411a3d:	ror    esp,1
  411a3f:	test   eax,0x294d369f
  411a44:	push   cs
  411a45:	dec    ebp
  411a46:	pop    ecx
  411a47:	mov    ecx,0xb9a8c729
  411a4c:	or     BYTE PTR [edi+0x59b291d7],bh
  411a52:	cmp    al,0xfc
  411a54:	scas   al,BYTE PTR es:[edi]
  411a55:	fdiv   DWORD PTR [edi+edi*4+0x2c14245f]
  411a5c:	aas    
  411a5d:	je     0x411abf
  411a5f:	into   
  411a60:	mov    esp,0x74d78119
  411a65:	add    eax,0x1e895195
  411a6a:	aam    0x2d
  411a6c:	dec    ecx
  411a6d:	dec    ebx
  411a6e:	xlat   BYTE PTR ds:[ebx]
  411a6f:	dec    esp
  411a70:	mov    eax,0xdfad3582
  411a75:	repz sub al,BYTE PTR [ebx+0x8]
  411a79:	(bad)  
  411a7a:	xchg   ebx,eax
  411a7b:	nop
  411a7c:	cs ret 
  411a7e:	rcl    BYTE PTR [bp+di],cl
  411a81:	rcr    bh,1
  411a83:	imul   edi,DWORD PTR [eax-0x25],0xdf2c708a
  411a8a:	stc    
  411a8b:	pop    ebp
  411a8c:	cmp    DWORD PTR [edx-0x23],0xffffff88
  411a90:	in     eax,dx
  411a91:	adc    BYTE PTR [edi-0x58],dl
  411a94:	out    dx,eax
  411a95:	xor    cl,al
  411a97:	sahf   
  411a98:	sbb    dl,BYTE PTR [edi-0x74]
  411a9b:	xor    DWORD PTR [edi],0x6c186c8e
  411aa1:	hlt    
  411aa2:	cmp    ah,BYTE PTR [edi-0x51130ef2]
  411aa8:	push   esp
  411aa9:	or     dh,BYTE PTR [esi-0x61]
  411aac:	push   0xb9dffe6c
  411ab1:	iret   
  411ab2:	sub    DWORD PTR [esi-0x10],ecx
  411ab5:	nop
  411ab6:	push   esp
  411ab7:	adc    al,0x7a
  411ab9:	and    esp,DWORD PTR [ebx-0x72]
  411abc:	pop    ebp
  411abd:	cmp    DWORD PTR [edx+0x4d],esp
  411ac0:	ret    0xb646
  411ac3:	(bad)  
  411ac4:	les    esi,FWORD PTR [eax-0x5fb8f91]
  411aca:	shl    DWORD PTR [eax*2+0x7081603f],cl
  411ad1:	ret    
  411ad2:	not    BYTE PTR [ebx]
  411ad4:	push   ebx
  411ad5:	or     BYTE PTR [ebx+esi*2+0x5a],dl
  411ad9:	aam    0xb8
  411adb:	into   
  411adc:	cmp    al,0xca
  411ade:	and    eax,0x3adafca2
  411ae3:	ja     0x411b23
  411ae5:	test   eax,0xaca8162a
  411aea:	cmp    bh,BYTE PTR [ecx]
  411aec:	cmp    eax,0x8a6a4f60
  411af1:	dec    edi
  411af2:	or     al,ah
  411af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af5:	xchg   edx,eax
  411af6:	ror    DWORD PTR [ebp-0x57db13e5],cl
  411afc:	div    BYTE PTR [ecx-0x2d5397c5]
  411b02:	sub    edx,esi
  411b04:	scas   eax,DWORD PTR es:[edi]
  411b05:	loop   0x411a9a
  411b07:	adc    eax,DWORD PTR [eax-0x2d4d2b83]
  411b0d:	mov    ch,0x9c
  411b0f:	repnz xchg eax,ebp
  411b12:	mov    bl,dl
  411b14:	lea    edx,[edx+eax*8]
  411b17:	cld    
  411b18:	dec    edx
  411b19:	retf   0x71bd
  411b1c:	push   edx
  411b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b1e:	mov    bh,0xff
  411b20:	dec    edi
  411b21:	push   cs
  411b22:	dec    ebx
  411b23:	cli    
  411b24:	popa   
  411b25:	into   
  411b26:	lahf   
  411b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b28:	mov    ds:0x4f94a4c2,eax
  411b2d:	lods   eax,DWORD PTR ds:[esi]
  411b2e:	rcl    BYTE PTR ds:0x99a4e6c1,1
  411b34:	inc    edi
  411b35:	sub    ecx,DWORD PTR [ebx-0x63a163ad]
  411b3b:	pop    eax
  411b3c:	mov    ebx,0x68a65370
  411b41:	rcr    BYTE PTR [edi-0x6d4538e4],cl
  411b47:	pop    ds
  411b48:	cmp    al,0x8e
  411b4a:	cli    
  411b4b:	push   edx
  411b4c:	bound  edi,QWORD PTR [eax]
  411b4e:	mov    ebp,0x87f4b4d1
  411b53:	fistp  QWORD PTR [esi+0x47517769]
  411b59:	pushf  
  411b5a:	jl     0x411b8e
  411b5c:	or     dh,ah
  411b5e:	mov    ebp,0x85274172
  411b63:	dec    ebp
  411b64:	rol    ch,0xec
  411b67:	fld    DWORD PTR [ecx-0x7bb28062]
  411b6d:	xchg   edx,eax
  411b6e:	push   eax
  411b6f:	or     eax,0xe91bd619
  411b74:	jle    0x411bac
  411b76:	or     BYTE PTR [ecx],bh
  411b78:	cmc    
  411b79:	mov    esi,0xebff9e75
  411b7e:	outs   dx,DWORD PTR ds:[esi]
  411b7f:	imul   eax,edx,0xa8265488
  411b85:	leave  
  411b86:	iret   
  411b87:	aam    0xd
  411b89:	ret    0x8e56
  411b8c:	pop    edi
  411b8d:	sub    bl,BYTE PTR [edx-0x49]
  411b90:	pop    esi
  411b91:	pop    eax
  411b92:	int    0x73
  411b94:	push   esi
  411b95:	push   ebx
  411b96:	mov    ah,0xdd
  411b98:	mov    dl,0xaf
  411b9a:	mov    bh,0x10
  411b9c:	push   0xede6480f
  411ba1:	xchg   BYTE PTR [edi],dl
  411ba3:	leave  
  411ba4:	mov    esp,DWORD PTR [ebx]
  411ba6:	test   eax,0xdd00eb80
  411bab:	mov    dh,0x72
  411bad:	adc    eax,0xb9ff1552
  411bb2:	add    bl,ch
  411bb4:	dec    ecx
  411bb5:	mov    ebx,0x17ea783
  411bba:	arpl   WORD PTR [edi],bx
  411bbc:	jae    0x411b56
  411bbe:	xchg   esp,eax
  411bbf:	push   ecx
  411bc0:	es pop esp
  411bc2:	icebp  
  411bc3:	(bad)  
  411bc4:	adc    al,0x6f
  411bc6:	hlt    
  411bc7:	js     0x411be5
  411bc9:	push   eax
  411bca:	mov    eax,0xb3f10bae
  411bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd0:	sub    eax,edx
  411bd2:	fwait
  411bd3:	adc    eax,0x317d61db
  411bd8:	cli    
  411bd9:	inc    ebx
  411bda:	test   eax,0x27810a34
  411bdf:	cmp    eax,0x397f227e
  411be4:	ja     0x411c5d
  411be6:	ret    
  411be7:	push   eax
  411be8:	mov    al,0x4e
  411bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411beb:	out    dx,al
  411bec:	or     DWORD PTR [esi-0xb],0x405c277c
  411bf3:	inc    ebp
  411bf4:	inc    ebx
  411bf5:	xlat   BYTE PTR ds:[ebx]
  411bf6:	stos   DWORD PTR es:[edi],eax
  411bf7:	cmp    BYTE PTR [eax],al
  411bf9:	cmp    edi,DWORD PTR [ecx+esi*2]
  411bfc:	test   BYTE PTR [ecx+edx*2+0x1a],dl
  411c00:	add    cl,BYTE PTR [edi]
  411c02:	je     0x411be5
  411c04:	fnstsw WORD PTR ds:0xefa4870c
  411c0a:	or     esp,ebx
  411c0c:	adc    al,0x7b
  411c0e:	mov    BYTE PTR [ebx-0x6703f81c],bl
  411c14:	inc    ebp
  411c15:	(bad)  
  411c16:	outs   dx,BYTE PTR ds:[esi]
  411c17:	stos   DWORD PTR es:[edi],eax
  411c18:	out    0x24,al
  411c1a:	mov    dh,0x5e
  411c1c:	aas    
  411c1d:	cmp    edi,DWORD PTR [esi+0x14]
  411c20:	lods   eax,DWORD PTR ds:[esi]
  411c21:	into   
  411c22:	cli    
  411c23:	push   0x2
  411c25:	rcr    DWORD PTR ss:[ecx],1
  411c28:	(bad)  
  411c29:	mov    bl,0x50
  411c2b:	pop    ds
  411c2c:	and    ecx,DWORD PTR [edx]
  411c2e:	call   0xf4a:0x55d80504
  411c35:	lods   al,BYTE PTR ds:[esi]
  411c36:	inc    ebx
  411c37:	and    ecx,ebx
  411c39:	cmp    eax,0xb1de7037
  411c3e:	add    al,0x51
  411c40:	sub    BYTE PTR [ecx+0x75],bl
  411c43:	xchg   esp,eax
  411c44:	xor    DWORD PTR [ebx],0x2d
  411c47:	sbb    ah,BYTE PTR [ecx+0x68]
  411c4a:	push   cs
  411c4b:	dec    esp
  411c4c:	das    
  411c4d:	inc    edi
  411c4e:	ja     0x411c30
  411c50:	pop    esi
  411c51:	sbb    DWORD PTR [eax-0x2d],ecx
  411c54:	xchg   ecx,eax
  411c55:	dec    esp
  411c57:	and    edx,ebx
  411c59:	mov    bl,0x57
  411c5b:	pusha  
  411c5c:	popf   
  411c5d:	add    al,BYTE PTR [edx]
  411c5f:	outs   dx,BYTE PTR ds:[esi]
  411c60:	mov    dh,0x69
  411c62:	adc    eax,0xff9730a7
  411c67:	mov    ds:0xb8af91b0,al
  411c6c:	test   BYTE PTR [edi],dh
  411c6e:	mov    edi,0x42df3996
  411c73:	ret    
  411c74:	sub    BYTE PTR [eax-0x4c787954],bl
  411c7a:	xlat   BYTE PTR ds:[ebx]
  411c7b:	sub    BYTE PTR ds:0x14172687,0xcb
  411c82:	cs push ecx
  411c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c85:	ins    BYTE PTR es:[edi],dx
  411c86:	inc    eax
  411c87:	repnz fimul WORD PTR [ecx]
  411c8a:	xor    ax,0xf60b
  411c8e:	push   edi
  411c8f:	imul   edi,DWORD PTR [ebp+0x7c013390],0xffffff8f
  411c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c97:	fucomp st(7)
  411c99:	cs dec eax
  411c9b:	xlat   BYTE PTR ds:[ebx]
  411c9c:	mov    bh,0xb8
  411c9e:	test   esp,0x774ba01e
  411ca4:	and    cl,BYTE PTR [edi+0x1968aa00]
  411caa:	pop    ss
  411cab:	jge    0x411d0c
  411cad:	lods   eax,DWORD PTR ds:[esi]
  411cae:	fcom   QWORD PTR [eax-0x33dcbacb]
  411cb4:	fist   DWORD PTR [ebx]
  411cb6:	sub    al,0x28
  411cb8:	stos   DWORD PTR es:[edi],eax
  411cb9:	dec    esp
  411cba:	xchg   ecx,eax
  411cbb:	in     eax,dx
  411cbc:	xchg   ecx,eax
  411cbd:	cdq    
  411cbe:	inc    esi
  411cbf:	stos   DWORD PTR es:[edi],eax
  411cc0:	adc    eax,0xef497ebf
  411cc5:	adc    eax,0xe058d67f
  411cca:	in     al,0x2b
  411ccc:	lods   eax,DWORD PTR gs:[esi]
  411cce:	arpl   WORD PTR [edx],dx
  411cd0:	test   bl,dh
  411cd2:	je     0x411d0a
  411cd4:	mov    al,0xf9
  411cd6:	push   es
  411cd7:	scas   eax,DWORD PTR es:[edi]
  411cd8:	pop    DWORD PTR [eax+edi*1]
  411cdb:	inc    esp
  411cdc:	mov    BYTE PTR [esi+0x41106e84],dl
  411ce2:	or     edi,ebx
  411ce4:	mov    esi,0xd19fa079
  411ce9:	dec    ebx
  411cea:	mov    dh,0x2c
  411cec:	hlt    
  411ced:	(bad)  
  411cee:	retf   0xf6f9
  411cf1:	jle    0x411d55
  411cf3:	mov    WORD PTR [edi-0x17276cf8],es
  411cf9:	and    al,0x10
  411cfb:	into   
  411cfc:	sahf   
  411cfd:	les    ebx,FWORD PTR [ebp+edx*8+0x106a605a]
  411d04:	jg     0x411d1c
  411d06:	mov    dl,0x3a
  411d08:	gs in  eax,0xda
  411d0b:	jns    0x411cde
  411d0d:	add    al,0x12
  411d0f:	aad    0xac
  411d11:	int3   
  411d12:	popf   
  411d13:	sbb    BYTE PTR [ebp+0x4b6d14ed],0x2a
  411d1a:	inc    eax
  411d1b:	cmp    eax,DWORD PTR es:[edi+0x69e76b66]
  411d22:	sub    DWORD PTR [ecx-0x3e58253d],ecx
  411d28:	sub    ecx,DWORD PTR [ebx]
  411d2a:	dec    esp
  411d2b:	(bad)  
  411d2c:	cli    
  411d2d:	cmp    BYTE PTR ds:0x3a7626b9,ch
  411d33:	(bad)  
  411d34:	jp     0x411cea
  411d36:	int3   
  411d37:	loope  0x411d42
  411d39:	rol    DWORD PTR [ecx+0x977f7b9],1
  411d3f:	(bad)  
  411d40:	cdq    
  411d41:	mov    esi,eax
  411d43:	sbb    ah,BYTE PTR [edx+0x2]
  411d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d47:	sbb    edi,DWORD PTR ds:0x192d33cd
  411d4d:	or     BYTE PTR [edx-0x11],ch
  411d50:	mov    eax,ds:0x251ef6df
  411d55:	sub    dh,BYTE PTR [eax]
  411d57:	or     al,0x46
  411d59:	in     eax,0x78
  411d5b:	repnz and DWORD PTR [eax],0x989140e8
  411d62:	jp     0x411da6
  411d64:	dec    edi
  411d65:	adc    BYTE PTR [ebx-0x73de996f],dl
  411d6b:	shr    BYTE PTR [eax-0x3],0x6d
  411d6f:	in     eax,0x8f
  411d71:	inc    edi
  411d72:	add    al,0x85
  411d74:	mov    bl,0x90
  411d76:	xchg   DWORD PTR [ebp+0x56],edi
  411d79:	pop    ds
  411d7a:	push   cs
  411d7b:	mov    dh,0x87
  411d7d:	push   edi
  411d7e:	push   esp
  411d7f:	mov    ecx,0x23a8a967
  411d84:	add    eax,0xb82315a4
  411d89:	sub    esp,DWORD PTR [ecx]
  411d8b:	and    bh,al
  411d8d:	cli    
  411d8e:	in     al,0x56
  411d90:	test   eax,0xa64bacf2
  411d95:	xchg   DWORD PTR gs:0x9072ee77,esp
  411d9c:	dec    ebx
  411d9d:	mov    edx,0xa417b3f9
  411da2:	fisttp WORD PTR [eax+edi*4+0x2a898499]
  411da9:	push   0xffffffa1
  411dab:	leave  
  411dac:	mov    esp,DWORD PTR [edi-0x27]
  411daf:	add    DWORD PTR [esp+ecx*8-0x3bb18d4e],ecx
  411db6:	xchg   esi,eax
  411db7:	mov    al,0x4b
  411db9:	(bad)  
  411dba:	fcomi  st,st(3)
  411dbc:	bound  edi,QWORD PTR [eax-0x55]
  411dbf:	out    0x30,eax
  411dc1:	rol    BYTE PTR [edi-0x5b4f1a2c],1
  411dc7:	(bad)  
  411dc8:	ds (bad) 
  411dca:	daa    
  411dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dcc:	or     eax,0x9a27c57
  411dd1:	adc    BYTE PTR [ecx+0x6d0934ba],0xa8
  411dd8:	mov    bh,0x38
  411dda:	or     al,0xe0
  411ddc:	and    eax,DWORD PTR [edi]
  411dde:	xor    al,0xce
  411de0:	shr    dl,1
  411de2:	pop    ebp
  411de3:	addr16 dec ebx
  411de5:	call   0x326735c
  411dea:	push   esp
  411deb:	sub    ecx,0xffffffbe
  411dee:	out    0x41,eax
  411df0:	retf   
  411df1:	adc    ch,BYTE PTR [eax+0x2343bb6]
  411df7:	cmc    
  411df8:	fcom   st(7)
  411dfa:	neg    DWORD PTR [edx]
  411dfc:	dec    ecx
  411dfd:	cmp    bl,ah
  411dff:	outs   dx,DWORD PTR ds:[esi]
  411e00:	test   al,bl
  411e02:	sbb    edx,DWORD PTR [esi]
  411e04:	in     eax,dx
  411e05:	mov    dh,0xd4
  411e07:	retf   0x844c
  411e0a:	sub    eax,0x2039b413
  411e0f:	jns    0x411d9e
  411e11:	mov    bl,0x2c
  411e13:	mov    edx,0x6855724f
  411e18:	fldenv [eax-0x6]
  411e1b:	fst    QWORD PTR [ebp-0x1e]
  411e1e:	mov    DWORD PTR [esi-0x5c],ecx
  411e21:	in     eax,0x68
  411e23:	cwde   
  411e24:	mov    BYTE PTR [esi+0x58],0x74
  411e28:	into   
  411e29:	mov    bl,0xb
  411e2b:	mov    BYTE PTR ds:0xe459c9ab,bl
  411e31:	add    DWORD PTR [edi+ebx*4+0x75],ebp
  411e35:	inc    eax
  411e36:	cli    
  411e37:	dec    ecx
  411e38:	mov    edi,0x45ab2326
  411e3d:	loopne 0x411e24
  411e3f:	dec    ebp
  411e40:	add    dl,BYTE PTR [esi-0x1aa28bd5]
  411e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e47:	pop    esp
  411e48:	sub    al,ah
  411e4a:	aaa    
  411e4b:	cmp    ah,BYTE PTR [ebx+eiz*1]
  411e4e:	dec    esi
  411e4f:	dec    edx
  411e50:	aam    0x18
  411e52:	mov    al,ds:0x27ed7fa6
  411e57:	mov    eax,ds:0x6e094b3c
  411e5c:	sbb    al,0xfd
  411e5e:	pop    es
  411e5f:	mov    edi,0xf3e0677
  411e64:	sub    eax,0xfc00d11d
  411e69:	lock sub esp,DWORD PTR [ebx-0x46c23565]
  411e70:	sti    
  411e71:	loope  0x411e42
  411e73:	dec    ecx
  411e74:	(bad)  
  411e75:	out    dx,eax
  411e76:	add    ebx,DWORD PTR [esi-0x49]
  411e79:	leave  
  411e7a:	push   esi
  411e7b:	pmulhw mm2,QWORD PTR [esi]
  411e7e:	call   0xa4ca3081
  411e83:	mov    esp,0x3ac423e2
  411e88:	mov    dl,0x7b
  411e8a:	xor    dh,ch
  411e8c:	cmc    
  411e8d:	es pop eax
  411e8f:	sahf   
  411e90:	pop    ecx
  411e91:	jl     0x411e55
  411e93:	test   BYTE PTR [ebp-0x19ffa7d3],ch
  411e99:	xchg   edi,eax
  411e9a:	in     eax,0xb4
  411e9c:	in     al,dx
  411e9d:	cmp    esi,DWORD PTR [edi]
  411e9f:	sub    DWORD PTR [ecx-0x165b9a8d],ecx
  411ea5:	and    ch,BYTE PTR [ebx]
  411ea7:	inc    eax
  411ea8:	(bad)  
  411ea9:	outs   dx,DWORD PTR ds:[esi]
  411eaa:	out    0x6e,al
  411eac:	xchg   BYTE PTR [ebx+0x70903d3],dl
  411eb2:	retf   
  411eb3:	loop   0x411e9c
  411eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb6:	xor    al,0x3
  411eb8:	test   edx,eax
  411eba:	aam    0xef
  411ebc:	dec    eax
  411ebd:	lods   eax,DWORD PTR ds:[esi]
  411ebe:	or     ebx,edx
  411ec0:	ss adc al,0x5b
  411ec3:	loop   0x411e7b
  411ec5:	loope  0x411f04
  411ec7:	sbb    BYTE PTR [eax],cl
  411ec9:	xchg   edi,eax
  411eca:	xchg   ebx,eax
  411ecb:	inc    edi
  411ecc:	test   DWORD PTR [ecx+0x33a13942],ebx
  411ed2:	outs   dx,BYTE PTR ds:[esi]
  411ed3:	sub    DWORD PTR [ebx-0x23cea5d5],eax
  411ed9:	out    dx,eax
  411eda:	mov    ecx,0xe3c6eeb5
  411edf:	adc    BYTE PTR [edi-0x29],al
  411ee2:	ficomp WORD PTR [ebx]
  411ee4:	inc    edi
  411ee5:	mov    dl,cl
  411ee7:	ss out 0xee,al
  411eea:	ficom  DWORD PTR [edx-0x5337fb2f]
  411ef0:	inc    ebp
  411ef1:	pop    edx
  411ef2:	aam    0x88
  411ef4:	ffreep st(5)
  411ef6:	xor    al,0x24
  411ef8:	mov    edi,0xfa8bee9
  411efd:	add    DWORD PTR [ecx],edx
  411eff:	in     al,0xb1
  411f01:	out    dx,eax
  411f02:	cmp    BYTE PTR [eax],al
  411f04:	pop    esp
  411f05:	ins    BYTE PTR es:[edi],dx
  411f06:	test   BYTE PTR [ecx],ch
  411f08:	inc    esi
  411f09:	xor    eax,0xec011f5e
  411f0e:	fst    st(4)
  411f10:	or     eax,0x7b59cb3e
  411f15:	push   DWORD PTR [ecx+0x5618eba3]
  411f1b:	shr    BYTE PTR ds:0x6567c2a6,0x61
  411f22:	out    0xc1,al
  411f24:	jg     0x411f7c
  411f26:	jne    0x411f93
  411f28:	fadd   st(0),st
  411f2a:	push   ebp
  411f2b:	std    
  411f2c:	and    dh,BYTE PTR [esi]
  411f2e:	ins    BYTE PTR es:[edi],dx
  411f2f:	imul   esi,DWORD PTR [ebp+0x6e822534],0x1c
  411f36:	cmc    
  411f37:	sub    eax,ebp
  411f39:	cmp    DWORD PTR [eax],esp
  411f3b:	ins    BYTE PTR es:[edi],dx
  411f3c:	(bad)
  411f3f:	aam    0x41
  411f41:	jl     0x411f56
  411f43:	jp     0x411edf
  411f45:	mov    esp,0x952bf7b8
  411f4a:	aaa    
  411f4b:	pop    esp
  411f4c:	fbld   TBYTE PTR [edx+0x2ae88925]
  411f52:	dec    ebx
  411f53:	xor    bl,dl
  411f55:	adc    ah,BYTE PTR [eax+ecx*4]
  411f58:	pop    ss
  411f59:	pop    eax
  411f5a:	adc    dh,ah
  411f5c:	jp     0x411efe
  411f5e:	cmp    dh,BYTE PTR [ebx+0x7e]
  411f61:	bound  ecx,QWORD PTR [ebp-0x436271e8]
  411f67:	sbb    al,0x38
  411f69:	pop    edx
  411f6a:	hlt    
  411f6b:	sti    
  411f6c:	xor    eax,ebx
  411f6e:	bound  esp,QWORD PTR [ecx-0x7a201e11]
  411f74:	ins    BYTE PTR es:[edi],dx
  411f75:	bound  edi,QWORD PTR [esi+0x6f]
  411f78:	or     ebp,ebx
  411f7a:	sub    ah,dl
  411f7c:	lahf   
  411f7d:	xchg   esp,eax
  411f7e:	mov    ah,0x8a
  411f80:	xor    cl,cl
  411f82:	and    eax,0x4bd4e5aa
  411f87:	mov    ecx,0x501d2a69
  411f8c:	sub    cl,al
  411f8e:	ffreep st(0)
  411f90:	add    DWORD PTR [edx+0x4d],eax
  411f93:	push   edi
  411f94:	push   edx
  411f95:	and    al,0xa7
  411f97:	lods   eax,DWORD PTR ds:[esi]
  411f98:	sahf   
  411f99:	rcl    BYTE PTR [ecx+eiz*4-0x18f8533d],cl
  411fa0:	in     eax,dx
  411fa1:	pop    edi
  411fa2:	shl    BYTE PTR [edx+0x15],1
  411fa5:	mov    esi,0xd285532b
  411faa:	loop   0x411ffb
  411fac:	(bad)  
  411fad:	div    ebx
  411faf:	imul   DWORD PTR [ebp+0x7e]
  411fb2:	idiv   DWORD PTR [ebx+0x72]
  411fb5:	out    dx,al
  411fb6:	call   0x2124:0x32f107de
  411fbd:	(bad)  
  411fbe:	lock sar BYTE PTR fs:[edi-0x78],cl
  411fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc4:	pop    edx
  411fc5:	sbb    BYTE PTR [edx+0x189ea2ce],dl
  411fcb:	sbb    ah,bh
  411fcd:	enter  0xd211,0x8e
  411fd1:	out    dx,al
  411fd2:	cld    
  411fd3:	nop
  411fd4:	sahf   
  411fd5:	or     eax,0xa9dbc905
  411fda:	dec    eax
  411fdb:	(bad)  
  411fdc:	mov    esp,0x3c4369d6
  411fe1:	xchg   BYTE PTR [edi-0x293609d6],bh
  411fe7:	adc    bl,bl
  411fe9:	ror    BYTE PTR es:[edi],1
  411fec:	add    DWORD PTR [eax+0x7a24f7f0],ebx
  411ff2:	ret    0xb77a
  411ff5:	popa   
  411ff6:	in     eax,0x78
  411ff8:	ret    
  411ff9:	dec    ecx
  411ffa:	dec    ebp
  411ffb:	or     DWORD PTR [edi+0x44],eax
  411ffe:	hlt    
  411fff:	jae    0x412042
  412001:	sub    BYTE PTR [ebp-0x7d],ch
  412004:	dec    eax
  412005:	xor    bl,BYTE PTR [esi-0x5f8e0796]
  41200b:	jecxz  0x411ff9
  41200d:	xchg   eax,ebp
  41200f:	in     eax,dx
  412010:	iret   
  412011:	js     0x412086
  412013:	mov    DWORD PTR [eax],edi
  412015:	cwde   
  412016:	int    0xe8
  412018:	mov    edx,0xbbd0b197
  41201d:	test   ecx,esp
  41201f:	sub    eax,DWORD PTR [eax-0x2a]
  412022:	sub    DWORD PTR [esi],0x70
  412025:	sbb    BYTE PTR [ebp-0x47],cl
  412028:	push   edi
  412029:	fld    QWORD PTR [edi-0x11]
  41202c:	pop    eax
  41202d:	and    ebx,DWORD PTR [edx]
  41202f:	shl    BYTE PTR [ecx+0x63fcc24c],1
  412035:	ins    DWORD PTR es:[edi],dx
  412036:	leave  
  412037:	sbb    BYTE PTR [ebx-0x2fac2a05],ch
  41203d:	std    
  41203e:	scas   al,BYTE PTR es:[edi]
  41203f:	xor    al,0x20
  412041:	jge    0x412012
  412043:	push   esp
  412044:	out    dx,eax
  412045:	ss pop edi
  412047:	test   DWORD PTR [ebx-0x7],ecx
  41204a:	sti    
  41204b:	mov    ch,0x77
  41204d:	ficomp WORD PTR [ecx-0x7d]
  412050:	and    al,0x34
  412052:	popf   
  412053:	dec    eax
  412054:	adc    DWORD PTR [esi+0x7632cf5d],ebx
  41205a:	push   ecx
  41205b:	imul   ecx,DWORD PTR [ecx+0x3b53758b],0x447bec10
  412065:	ja     0x412019
  412067:	test   BYTE PTR [eax+ebx*8],0xb5
  41206b:	enter  0xe142,0xed
  41206f:	cmp    DWORD PTR [ecx],esp
  412071:	and    al,0x51
  412073:	push   es
  412074:	mov    ds:0x139780ad,eax
  412079:	inc    edx
  41207a:	loop   0x4120b7
  41207c:	aaa    
  41207d:	js     0x412013
  41207f:	push   edx
  412080:	add    esi,0xffffffe6
  412083:	call   0x6969d286
  412088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412089:	cmp    bh,BYTE PTR [edi+0x6e4d8648]
  41208f:	pop    ds
  412090:	add    cl,BYTE PTR es:[ecx-0x45]
  412094:	jmp    0x6f6d:0x98e87f4b
  41209b:	stos   BYTE PTR es:[edi],al
  41209c:	dec    esp
  41209d:	xchg   edi,eax
  41209e:	dec    edi
  41209f:	lods   eax,DWORD PTR ds:[esi]
  4120a0:	cmp    esi,DWORD PTR [esi+0x73]
  4120a3:	add    al,0xf2
  4120a5:	ret    
  4120a6:	ja     0x4120aa
  4120a8:	mov    ds:0x61a74ac8,al
  4120ad:	cmp    edi,DWORD PTR [edx-0x40ece52b]
  4120b3:	rcr    DWORD PTR [esi],cl
  4120b5:	repz leave 
  4120b7:	sti    
  4120b8:	in     al,0xa1
  4120ba:	into   
  4120bb:	xchg   ecx,eax
  4120bc:	dec    esp
  4120bd:	xlat   BYTE PTR ds:[ebx]
  4120be:	pop    ecx
  4120bf:	mov    al,0xc4
  4120c1:	cmp    ebx,edx
  4120c3:	dec    eax
  4120c4:	sub    al,0xbd
  4120c6:	cmp    edx,esp
  4120c8:	jge    0x4120fd
  4120ca:	xchg   BYTE PTR [esi],dh
  4120cc:	dec    ecx
  4120cd:	cmp    eax,0xfcf24379
  4120d2:	(bad)  
  4120d4:	cwde   
  4120d5:	fadd   st,st(3)
  4120d7:	cmp    eax,0x9e3fcdb3
  4120dc:	pop    es
  4120dd:	sbb    eax,0xe2ff434b
  4120e2:	adc    cl,0x8
  4120e5:	jl     0x4120b9
  4120e7:	iret   
  4120e8:	add    eax,0x466ebcbf
  4120ed:	(bad)  
  4120ee:	pop    esp
  4120ef:	sbb    DWORD PTR [eax-0x3252c664],0x8c8ef67f
  4120f9:	rol    ch,1
  4120fb:	(bad)  
  4120fc:	lods   al,BYTE PTR ds:[esi]
  4120fd:	lea    edi,[edx]
  4120ff:	sbb    edi,DWORD PTR [eax-0x40]
  412102:	jo     0x4120b2
  412104:	(bad)  
  412105:	push   eax
  412106:	aaa    
  412107:	shl    BYTE PTR [eax+eax*8],1
  41210a:	adc    BYTE PTR [edi+0x3aa50c57],dl
  412110:	dec    esi
  412111:	inc    esp
  412112:	aam    0xb8
  412114:	in     eax,0x1a
  412116:	push   ecx
  412117:	mov    cl,dh
  412119:	in     eax,0x2b
  41211b:	add    dh,BYTE PTR [edi]
  41211d:	stos   BYTE PTR es:[edi],al
  41211e:	(bad)  
  41211f:	xchg   ebx,ebx
  412121:	iret   
  412122:	adc    eax,0x25faba4
  412127:	stos   BYTE PTR es:[edi],al
  412128:	lds    esp,FWORD PTR [ecx+0x56]
  41212b:	jmp    0x41211b
  41212d:	inc    esi
  41212e:	jp     0x41211d
  412130:	mov    eax,0xb399c0ae
  412135:	push   edx
  412136:	test   eax,0x30dd92d2
  41213b:	shl    DWORD PTR [ebp+0x3a711287],0xc1
  412142:	cdq    
  412143:	and    dl,0x9
  412146:	popa   
  412147:	bound  ecx,QWORD PTR [ecx-0x24ec4fab]
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	fucomp st(2)
  412720:	push   0xffffff8f
  412722:	push   cs
  412723:	jb     0x4127a0
  412725:	jnp    0x4126fe
  412727:	sahf   
  412728:	jnp    0x4127a5
  41272a:	push   cs
  41272b:	inc    esp
  41272c:	into   
  41272d:	jns    0x41279b
  41272f:	sub    ebx,edx
  412731:	fistp  WORD PTR [esi-0x314ed094]
  412737:	dec    edi
  412738:	jmp    0x4665:0x2c23c2d0
  41273f:	popa   
  412740:	or     DWORD PTR [ecx-0x28f8dbb9],0xb82a687
  41274a:	xor    edi,DWORD PTR [edi]
  41274c:	(bad)  
  41274e:	mov    dl,0xe4
  412750:	rcl    DWORD PTR [edi],1
  412752:	sbb    DWORD PTR [edi-0x47],edi
  412755:	push   0x5d70d035
  41275a:	in     eax,dx
  41275b:	pop    ds
  41275c:	ret    0x33af
  41275f:	cmp    ah,BYTE PTR [ecx]
  412761:	or     eax,0x5c7862ab
  412766:	cmc    
  412767:	xor    DWORD PTR [eiz*4+0x4aa2b907],ecx
  41276e:	bound  esi,QWORD PTR [esi+0x22]
  412771:	mov    ?,WORD PTR ss:[eax]
  412774:	call   0xb936:0xc76ff346
  41277b:	ds pop edi
  41277d:	pop    ebx
  41277e:	mov    edx,edi
  412780:	add    esp,DWORD PTR [ebp-0x51e079dc]
  412786:	pop    DWORD PTR [eax+0x14]
  412789:	sbb    eax,0x7909fe7b
  41278e:	ins    BYTE PTR es:[edi],dx
  41278f:	pop    ecx
  412790:	push   ss
  412791:	outs   dx,BYTE PTR ds:[esi]
  412792:	scas   eax,DWORD PTR es:[edi]
  412793:	xlat   BYTE PTR ds:[ebx]
  412794:	cmp    bl,BYTE PTR [ecx+0x61881e03]
  41279a:	jnp    0x412733
  41279c:	rcl    ah,cl
  41279e:	out    0x4f,eax
  4127a0:	xor    DWORD PTR [ecx+0x64143ce4],edx
  4127a6:	pop    ss
  4127a7:	sub    eax,0x555d78fb
  4127ac:	jo     0x412778
  4127ae:	mov    ebx,0xab9664df
  4127b3:	xchg   esi,eax
  4127b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b5:	pop    ebx
  4127b6:	sar    BYTE PTR [ebp-0x6],0x1e
  4127ba:	xchg   edi,eax
  4127bb:	fisubr WORD PTR [esp+ecx*2]
  4127be:	and    dh,BYTE PTR [esp+edi*1]
  4127c1:	pusha  
  4127c2:	clc    
  4127c3:	int3   
  4127c4:	jns    0x4127c1
  4127c6:	cmp    BYTE PTR [eax+0x55],0x80
  4127ca:	test   al,0x8
  4127cc:	or     ah,ah
  4127ce:	xor    DWORD PTR [esi+0x50],edi
  4127d1:	(bad)  
  4127d2:	out    dx,eax
  4127d3:	lods   al,BYTE PTR ds:[esi]
  4127d4:	xchg   BYTE PTR [ebp+0x6351deb3],bl
  4127da:	pop    es
  4127db:	mov    esp,0x21fbd145
  4127e0:	cli    
  4127e1:	jmp    0x1b60bc3b
  4127e6:	cmc    
  4127e7:	sub    eax,0x1830619a
  4127ec:	add    dh,BYTE PTR [eax]
  4127ee:	shl    BYTE PTR [ecx+0x53dfec7d],cl
  4127f4:	icebp  
  4127f5:	in     al,dx
  4127f6:	dec    ecx
  4127f7:	jne    0x412779
  4127f9:	test   ebp,esp
  4127fb:	mov    BYTE PTR [esi+0x4e5053e4],ah
  412801:	dec    edx
  412802:	xlat   BYTE PTR ds:[ebx]
  412803:	mov    esi,0xe3ba6c63
  412808:	sub    dl,BYTE PTR [edi]
  41280a:	ficomp WORD PTR ds:0x6d764bf5
  412810:	pop    esp
  412811:	lds    ecx,FWORD PTR [esi-0x11]
  412814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412815:	test   eax,0x11367cb3
  41281a:	inc    edi
  41281b:	jb     0x4127c6
  41281d:	adc    eax,0x4367746c
  412822:	sub    BYTE PTR [esi-0x2c61d64f],dh
  412828:	mov    cl,BYTE PTR [eax]
  41282a:	test   al,0x7
  41282c:	xchg   ebx,eax
  41282d:	les    esp,FWORD PTR [edx]
  41282f:	out    dx,eax
  412830:	lock jg 0x4128a4
  412833:	call   0x1c87:0x7d367a52
  41283a:	rcl    BYTE PTR [esi+eax*8-0x6547fdf3],cl
  412841:	jo     0x412898
  412843:	or     al,0x7e
  412845:	mov    dh,0xb1
  412847:	dec    edx
  412848:	mov    eax,ds:0x9d198545
  41284d:	mov    ch,0xf
  41284f:	xor    BYTE PTR [ecx-0x212780fa],0x39
  412856:	mov    edx,0x28fecc61
  41285b:	jno    0x3ef6034
  412861:	inc    esp
  412862:	sub    BYTE PTR [edi-0x20bb3e50],dl
  412868:	jecxz  0x41285c
  41286a:	loopne 0x412839
  41286c:	int    0xb1
  41286e:	scas   eax,DWORD PTR es:[edi]
  41286f:	xchg   esp,eax
  412870:	inc    ebp
  412871:	or     ecx,edx
  412873:	jmp    0x4128dd
  412875:	fmul   DWORD PTR [edx-0x515f309]
  41287b:	mov    al,0x93
  41287d:	dec    edx
  41287e:	and    BYTE PTR [eax+edx*8],ch
  412881:	xor    al,0xcd
  412883:	dec    ecx
  412884:	lea    esi,[eax+0x4a5f65e0]
  41288a:	jmp    edx
  41288c:	mov    dh,0x75
  41288e:	push   es
  41288f:	mov    al,0x76
  412891:	scas   al,BYTE PTR es:[edi]
  412892:	sbb    DWORD PTR [edi+0x5f],ebp
  412895:	std    
  412896:	jno    0x412849
  412898:	push   eax
  412899:	mov    cl,0x75
  41289b:	bound  esi,QWORD PTR [eax]
  41289d:	into   
  41289e:	scas   eax,DWORD PTR es:[edi]
  41289f:	mov    esp,0xd76e9a6a
  4128a4:	cmp    ah,BYTE PTR ss:[ebp-0x5d]
  4128a8:	in     eax,dx
  4128a9:	ja     0x41282d
  4128ab:	cmc    
  4128ac:	push   ecx
  4128ad:	xor    al,0x67
  4128af:	fld    QWORD PTR [eax]
  4128b1:	retf   
  4128b2:	mov    dl,ah
  4128b4:	jecxz  0x4128c8
  4128b6:	push   cs
  4128b7:	test   eax,0x649ebd6e
  4128bc:	lock (bad) 
  4128be:	adc    dh,BYTE PTR [edi+eax*8+0x3f]
  4128c2:	add    DWORD PTR [edx],edi
  4128c4:	xchg   edx,eax
  4128c5:	cmp    ebx,DWORD PTR [ebp-0x2cc8d09d]
  4128cb:	jns    0x4128a3
  4128cd:	mov    ds:0x9d9b8e84,al
  4128d2:	jle    0x4128e8
  4128d4:	fidivr WORD PTR [ebp+0x348fec46]
  4128da:	mov    bl,0xd
  4128dc:	mov    bl,0xc6
  4128de:	add    al,0x57
  4128e0:	retf   
  4128e1:	loope  0x4128e0
  4128e3:	mov    bh,0x6d
  4128e5:	(bad)  [ecx-0x4f7f8ee9]
  4128eb:	jns    0x412941
  4128ed:	clc    
  4128ee:	mov    WORD PTR [edx+0x319abdcc],cs
  4128f4:	aaa    
  4128f5:	or     al,0xd6
  4128f7:	dec    ebx
  4128f8:	out    dx,al
  4128f9:	mov    ds:0x6d03c279,eax
  4128fe:	fadd   DWORD PTR [edi+0x61e1e80e]
  412904:	sahf   
  412905:	jmp    0xa60e0baa
  41290a:	pop    eax
  41290b:	out    dx,eax
  41290c:	daa    
  41290d:	cwde   
  41290e:	pop    ebx
  41290f:	outs   dx,BYTE PTR ds:[esi]
  412910:	mov    ch,0xc0
  412912:	pop    eax
  412913:	test   al,0xc0
  412915:	push   esi
  412916:	jae    0x412981
  412918:	push   ecx
  412919:	sub    eax,0x1063fd24
  41291e:	mov    ebx,0x2cb4ed98
  412923:	add    esp,edi
  412925:	xchg   ah,al
  412927:	push   0x5d
  412929:	xchg   esi,eax
  41292a:	stc    
  41292b:	mov    bl,0xf1
  41292d:	cmp    al,BYTE PTR [ebx-0x6b1d026c]
  412933:	ret    0xa5bc
  412936:	jp     0x412991
  412938:	mov    ch,0xb3
  41293a:	add    al,0x5a
  41293c:	(bad)  
  41293d:	lahf   
  41293e:	sbb    DWORD PTR [ebx-0x74],ebx
  412941:	sbb    DWORD PTR [ecx-0xa],edx
  412944:	aas    
  412945:	cmp    al,0x98
  412947:	ror    BYTE PTR [edi+0x3910c8a7],1
  41294d:	add    DWORD PTR [eax],0x1e
  412950:	jnp    0x4129b7
  412952:	pushf  
  412953:	imul   esi,DWORD PTR [ecx+0x1e945a],0x11
  41295a:	mov    ch,0xdf
  41295c:	mov    BYTE PTR [edx-0x7a],0x69
  412960:	cmc    
  412961:	push   ebp
  412962:	scas   eax,DWORD PTR es:[edi]
  412963:	adc    al,0x9e
  412965:	ficom  DWORD PTR [edx-0x299712b0]
  41296b:	xchg   edx,eax
  41296c:	mov    ch,0x9a
  41296e:	add    ch,bl
  412970:	int3   
  412971:	jle    0x41294d
  412973:	ret    0xbe06
  412976:	lods   eax,DWORD PTR ds:[esi]
  412977:	mov    esp,0x702a88e5
  41297c:	push   0x2f
  41297e:	mov    esi,0xa4e98753
  412983:	retf   
  412984:	dec    esp
  412985:	or     edx,ebp
  412987:	sbb    BYTE PTR [ebx+0x664c4271],bh
  41298d:	sbb    BYTE PTR [edx+ebx*2+0x7eeb217f],cl
  412994:	xor    ebx,DWORD PTR [esi+0x700c1928]
  41299a:	mov    ebp,0x326e6964
  41299f:	push   esp
  4129a0:	push   ds
  4129a1:	dec    BYTE PTR [edi]
  4129a3:	adc    BYTE PTR [esi-0x626edfc5],bl
  4129a9:	sub    DWORD PTR [ebx],ebp
  4129ab:	mov    eax,0x98990bda
  4129b0:	in     al,0x9f
  4129b2:	les    edi,FWORD PTR [esi+0x17]
  4129b5:	push   cs
  4129b6:	inc    edi
  4129b7:	into   
  4129b8:	ret    
  4129b9:	sub    BYTE PTR [edx+0x41],bl
  4129bc:	test   BYTE PTR [ebx],dl
  4129be:	fisub  DWORD PTR [eax+0x7e]
  4129c1:	inc    esp
  4129c2:	test   al,0x43
  4129c4:	sub    eax,0x80180105
  4129c9:	mov    bh,0x49
  4129cb:	out    0x4c,eax
  4129cd:	or     cl,dl
  4129cf:	mov    ebx,0x23d81e84
  4129d4:	pop    ebx
  4129d5:	sbb    ebx,DWORD PTR [esi-0xf]
  4129d8:	repz data16 stc 
  4129db:	sbb    BYTE PTR [edx-0x703835d5],cl
  4129e1:	dec    BYTE PTR [edi]
  4129e3:	out    0xce,eax
  4129e5:	in     al,0xaa
  4129e7:	ret    0x2089
  4129ea:	mov    esp,0x79d5ff82
  4129ef:	mov    WORD PTR [ecx],es
  4129f1:	push   0xffffff94
  4129f3:	jns    0x412a0d
  4129f5:	mov    ebp,edx
  4129f7:	stos   DWORD PTR es:[edi],eax
  4129f8:	mov    dl,0xf0
  4129fa:	(bad)  
  4129fb:	mov    bh,0x93
  4129fd:	xchg   DWORD PTR [ebx+0x146dfc1b],ebp
  412a03:	dec    edi
  412a04:	rcr    BYTE PTR [bp+si-0x46],0x43
  412a09:	dec    ebx
  412a0a:	popa   
  412a0b:	cld    
  412a0c:	push   edi
  412a0d:	sub    al,0x66
  412a0f:	aad    0xb9
  412a11:	mov    ecx,0x43843468
  412a16:	xlat   BYTE PTR ds:[ebx]
  412a17:	popa   
  412a18:	inc    edx
  412a19:	dec    esp
  412a1a:	or     bl,BYTE PTR [edx]
  412a1c:	pop    edx
  412a1d:	scas   al,BYTE PTR es:[edi]
  412a1e:	outs   dx,WORD PTR ds:[esi]
  412a20:	pop    ecx
  412a21:	sar    BYTE PTR [eax],1
  412a23:	and    BYTE PTR [ebx],dl
  412a25:	xor    DWORD PTR [eax],edi
  412a27:	push   ebp
  412a28:	pop    edi
  412a29:	xor    BYTE PTR [edx],0x41
  412a2c:	(bad)  
  412a2d:	pushf  
  412a2e:	stc    
  412a2f:	test   BYTE PTR [edi+eax*1-0x22],0x32
  412a34:	sbb    esp,DWORD PTR [ebx+0x49]
  412a37:	mov    ecx,0xf7606c6
  412a3c:	cmp    bp,sp
  412a3f:	in     eax,0xd1
  412a41:	or     ebx,esi
  412a43:	test   BYTE PTR [esi],dh
  412a45:	arpl   di,dx
  412a47:	leave  
  412a48:	pop    ebp
  412a49:	pushf  
  412a4a:	push   edx
  412a4b:	push   DWORD PTR [esi+0x6258f357]
  412a51:	fisub  WORD PTR [ecx]
  412a53:	enter  0x708e,0xf6
  412a57:	es inc esp
  412a59:	mov    eax,ds:0x19979e0f
  412a5e:	pop    eax
  412a5f:	jmp    0xbd30:0x233e9a09
  412a66:	sqrtps xmm7,xmm0
  412a69:	sub    edx,0xede8b96e
  412a6f:	pop    ds
  412a70:	mov    ss,WORD PTR [ebx]
  412a72:	adc    esi,edx
  412a74:	pop    esp
  412a75:	xor    esi,edi
  412a77:	ret    0xa030
  412a7a:	rcr    al,1
  412a7c:	mov    esi,0x9bc5a52e
  412a81:	lock outs dx,BYTE PTR ds:[esi]
  412a83:	in     al,0x3c
  412a85:	cmp    BYTE PTR [eax+0x19b82d55],cl
  412a8b:	jecxz  0x412a34
  412a8d:	dec    esp
  412a8e:	ror    DWORD PTR [ecx+0x44ae4c00],cl
  412a94:	imul   edi,DWORD PTR [edi+0x5afd4437],0xf
  412a9b:	shl    ecx,cl
  412a9d:	pop    ds
  412a9e:	retf   0x6d78
  412aa1:	and    edx,DWORD PTR [edx+ebx*1]
  412aa4:	jmp    0x860c:0xba5df72
  412aab:	mov    DWORD PTR [ebx+eax*4-0x1729f35f],ebx
  412ab2:	outs   dx,BYTE PTR ds:[esi]
  412ab3:	xchg   esp,eax
  412ab4:	push   edi
  412ab5:	and    ebx,esi
  412ab7:	mov    ch,0xe1
  412ab9:	repnz retf 0x65e
  412abd:	stos   DWORD PTR es:[edi],eax
  412abe:	inc    ebp
  412abf:	mov    al,ds:0x7ff0334d
  412ac4:	dec    esp
  412ac5:	push   0x11
  412ac7:	sti    
  412ac8:	inc    ebp
  412ac9:	sahf   
  412aca:	pop    ss
  412acb:	sbb    al,BYTE PTR [edi]
  412acd:	(bad)  
  412ace:	cmp    al,ah
  412ad0:	xor    al,0x66
  412ad2:	ret    
  412ad3:	adc    eax,0x538b8d2e
  412ad8:	and    ch,BYTE PTR [ebx]
  412ada:	push   esi
  412adb:	xchg   DWORD PTR [ecx-0x2a],eax
  412ade:	fmul   st(4),st
  412ae0:	repnz arpl WORD PTR [edi-0x298cbce2],bx
  412ae7:	mov    ch,dh
  412ae9:	lds    edx,FWORD PTR [ecx+ebx*1]
  412aec:	sbb    eax,0xbc0d35c2
  412af1:	in     eax,dx
  412af2:	fs lock adc esi,DWORD PTR ds:[ecx+0x7bc489d0]
  412afb:	jmp    0xb1ae5bd2
  412b00:	mov    cl,0xa6
  412b02:	repz bswap edx
  412b05:	jge    0x412b3c
  412b07:	dec    ebp
  412b08:	sub    BYTE PTR [ebx],dl
  412b0a:	mov    esp,0x186ad8a9
  412b0f:	xchg   edx,eax
  412b10:	jg     0x412af0
  412b12:	or     al,0x2e
  412b14:	jbe    0x412b6b
  412b16:	fcom   DWORD PTR [esi+0x53c707d7]
  412b1c:	sbb    eax,0x26cd8e4b
  412b21:	lds    edi,FWORD PTR [edi]
  412b23:	xchg   ebp,eax
  412b24:	(bad)  
  412b25:	jmp    0x6702:0x2129ee2a
  412b2c:	sub    dl,BYTE PTR [ebx+0x670313a8]
  412b32:	cmp    DWORD PTR [edx],edx
  412b34:	or     al,0x36
  412b36:	add    BYTE PTR [ebx+0x561da71e],dl
  412b3c:	sahf   
  412b3d:	xchg   edi,eax
  412b3e:	push   ss
  412b3f:	scas   al,BYTE PTR es:[edi]
  412b40:	fs push esi
  412b42:	ss out dx,al
  412b44:	js     0x412af0
  412b46:	push   esp
  412b47:	sub    eax,0x949b8603
  412b4c:	sbb    eax,DWORD PTR [eax-0x356a1910]
  412b52:	sbb    BYTE PTR ds:0xdeaad4b3,bh
  412b58:	ret    0xcdc2
  412b5b:	dec    ecx
  412b5c:	dec    esp
  412b5d:	scas   eax,DWORD PTR es:[edi]
  412b5e:	jmp    0x412b77
  412b60:	ror    BYTE PTR [ebx+0x77],0x4d
  412b64:	arpl   WORD PTR [esi-0x11],bx
  412b67:	jnp    0x412b7d
  412b69:	sbb    al,0x56
  412b6b:	lods   eax,DWORD PTR ds:[esi]
  412b6c:	push   ss
  412b6d:	inc    edx
  412b6e:	inc    BYTE PTR [eax+edi*2]
  412b71:	pop    ebp
  412b72:	inc    ecx
  412b73:	daa    
  412b74:	mov    eax,ds:0x4e52fd47
  412b79:	and    ah,dh
  412b7b:	mov    dl,0x48
  412b7d:	adc    DWORD PTR [edx],ebx
  412b7f:	xor    ebp,DWORD PTR [ecx+0x61]
  412b82:	adc    al,0xc
  412b84:	mov    cl,0x32
  412b86:	xor    eax,esp
  412b88:	mov    ss,WORD PTR [edi-0x76]
  412b8b:	sbb    cl,BYTE PTR [ebx-0x4e]
  412b8e:	pusha  
  412b8f:	cdq    
  412b90:	outs   dx,BYTE PTR ds:[esi]
  412b91:	push   edi
  412b92:	dec    ebx
  412b93:	mov    dl,0x6d
  412b95:	cmc    
  412b96:	cmp    cl,BYTE PTR [esp+esi*1]
  412b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9a:	lea    ecx,[ebx]
  412b9c:	retf   
  412b9d:	and    DWORD PTR [eax-0x35],0x50a9e01d
  412ba4:	enter  0x470c,0xf4
  412ba8:	pandn  mm1,mm0
  412bab:	ds add WORD PTR es:[eax],cx
  412bb0:	and    DWORD PTR [esi+ecx*8-0x59197256],0xffffffb6
  412bb8:	or     eax,0x274c1964
  412bbd:	cmp    esp,DWORD PTR [ebx]
  412bbf:	and    edi,DWORD PTR [ecx+0x5da678e8]
  412bc5:	jmp    0xcfdd:0xed060b59
  412bcc:	lods   eax,DWORD PTR ds:[esi]
  412bcd:	pop    ds
  412bce:	loop   0x412c12
  412bd0:	inc    ecx
  412bd1:	sub    DWORD PTR [esi],edx
  412bd3:	adc    al,0x96
  412bd5:	fisttp WORD PTR [ecx+0x19bdcaf0]
  412bdb:	popa   
  412bdc:	pop    eax
  412bdd:	sbb    eax,0x8122b1fa
  412be2:	mov    al,0x31
  412be4:	ficomp WORD PTR [ecx]
  412be6:	icebp  
  412be7:	xchg   ebp,eax
  412be8:	sbb    al,0xda
  412bea:	daa    
  412beb:	xchg   ebp,eax
  412bec:	and    ch,BYTE PTR [edx-0x14]
  412bef:	in     al,0xb4
  412bf1:	xchg   esi,eax
  412bf2:	dec    esi
  412bf3:	or     eax,0xa1e2696d
  412bf8:	sti    
  412bf9:	loop   0x412b8f
  412bfb:	retf   0x2f7d
  412bfe:	test   eax,0x3e2443f6
  412c03:	pop    ss
  412c04:	or     eax,0xc1ff9f53
  412c09:	pop    ss
  412c0a:	cmp    eax,0x1b56db46
  412c0f:	inc    edx
  412c10:	add    al,0x5c
  412c12:	cmp    ch,BYTE PTR [edx]
  412c14:	or     eax,DWORD PTR [ecx-0x3c]
  412c17:	popa   
  412c18:	ret    
  412c19:	or     ah,BYTE PTR [ebp-0x5a6d5ad9]
  412c1f:	mov    ebp,0x801f96f3
  412c24:	xchg   ebp,edx
  412c26:	fwait
  412c27:	dec    esi
  412c28:	mov    bl,0xa
  412c2a:	daa    
  412c2b:	loop   0x412c06
  412c2d:	call   0xee13:0x981d2f27
  412c34:	mov    eax,ds:0x9a6bbbf5
  412c39:	jbe    0x412c61
  412c3b:	dec    edi
  412c3c:	push   0xfffffff2
  412c3e:	jns    0x412bf5
  412c40:	dec    edi
  412c41:	add    al,0x4a
  412c43:	fild   WORD PTR [ecx+0x11]
  412c46:	out    dx,eax
  412c47:	inc    ecx
  412c48:	ins    DWORD PTR es:[edi],dx
  412c49:	push   ds
  412c4a:	cld    
  412c4b:	mov    DWORD PTR [ecx-0x5ef0c474],eax
  412c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c52:	sub    DWORD PTR [eax+0x19],0x5a710503
  412c59:	pop    edx
  412c5a:	cmc    
  412c5b:	push   ss
  412c5c:	inc    eax
  412c5d:	and    al,0xb4
  412c5f:	fild   QWORD PTR ds:[edx+0x28]
  412c63:	div    DWORD PTR [edi]
  412c65:	xchg   ebx,eax
  412c66:	jb     0x412c68
  412c68:	pop    ebx
  412c69:	xchg   BYTE PTR [ecx+eax*1],cl
  412c6c:	shl    eax,1
  412c6e:	inc    esi
  412c6f:	aam    0xc5
  412c71:	or     eax,0x8ca26de1
  412c76:	pop    ebp
  412c77:	stos   BYTE PTR es:[edi],al
  412c78:	xchg   ebx,eax
  412c79:	cmp    ebp,DWORD PTR [eax+0x70b34fb5]
  412c7f:	dec    ecx
  412c80:	pop    ebx
  412c81:	cmp    eax,0xc59250e
  412c86:	inc    DWORD PTR [edi-0x6c]
  412c89:	lea    esi,[ebp+eax*8+0x3d]
  412c8d:	mul    BYTE PTR [eax]
  412c8f:	ins    BYTE PTR es:[edi],dx
  412c90:	xor    esi,DWORD PTR [edx-0xa7cf63d]
  412c96:	xor    BYTE PTR [edi-0x32],cl
  412c99:	add    BYTE PTR [edi+0x3f],ch
  412c9c:	or     al,0x42
  412c9e:	mov    ds:0xd772b3d7,eax
  412ca3:	push   cs
  412ca4:	xor    BYTE PTR [edx+0x2a],dh
  412ca7:	xor    al,0x92
  412ca9:	mov    es,WORD PTR [edx+0x3d]
  412cac:	mov    eax,0x79de1343
  412cb1:	enter  0x8698,0x95
  412cb5:	jle    0x412c83
  412cb7:	push   es
  412cb8:	in     al,dx
  412cb9:	imul   eax,ebx,0xa66740b7
  412cbf:	cmp    edx,DWORD PTR [esi]
  412cc1:	icebp  
  412cc2:	and    edx,ebx
  412cc4:	push   ebp
  412cc5:	gs and eax,ebx
  412cc8:	mov    esi,0xbe3e8c29
  412ccd:	cs push eax
  412ccf:	xor    bh,bh
  412cd1:	shl    BYTE PTR [eax-0x3363a815],1
  412cd7:	sbb    eax,0x7611bb07
  412cdc:	mov    esp,0x5b71f891
  412ce1:	and    DWORD PTR [edx+esi*8],eax
  412ce4:	out    dx,al
  412ce5:	lods   al,BYTE PTR ds:[esi]
  412ce6:	mov    ?,WORD PTR [edi+esi*4+0x5]
  412cea:	adc    al,0xfe
  412cec:	cmp    ecx,DWORD PTR [esi-0x284c8b76]
  412cf2:	jmp    0xd91e:0xefc08261
  412cf9:	inc    eax
  412cfa:	inc    edx
  412cfb:	cmp    DWORD PTR [edx],edx
  412cfd:	mov    ebp,0xc5a9f3f6
  412d02:	sub    BYTE PTR [ebx-0x15],ch
  412d05:	ror    DWORD PTR [esi-0x544414a2],1
  412d0b:	mov    ebp,0xe42eec55
  412d10:	sbb    BYTE PTR [ebx],cl
  412d12:	retf   
  412d13:	add    edx,DWORD PTR [ebx+0x36566c39]
  412d19:	nop
  412d1a:	int3   
  412d1b:	mov    ds:0xa16cbcb5,eax
  412d20:	jge    0x412d81
  412d22:	sbb    eax,0x8860fd1f
  412d27:	xchg   edi,eax
  412d28:	push   edx
  412d29:	loop   0x412d5a
  412d2b:	and    bl,bh
  412d2d:	pop    edx
  412d2e:	retf   0xd6e
  412d31:	out    0x3c,al
  412d33:	cmp    al,0xec
  412d35:	jne    0x412cf4
  412d37:	data16 sahf 
  412d39:	cmp    al,0xf7
  412d3b:	jl     0x412d10
  412d3d:	addr16 pop ss
  412d3f:	sar    BYTE PTR [edx-0x1501375f],0x7b
  412d46:	out    dx,eax
  412d47:	sub    DWORD PTR [edx+0x5154146e],0x3f
  412d4e:	out    0x32,al
  412d50:	mov    ah,0xdd
  412d52:	xchg   esi,eax
  412d53:	xor    esp,eax
  412d55:	inc    ecx
  412d56:	addr16 sahf 
  412d58:	xchg   ecx,eax
  412d59:	lock cmp al,0xbd
  412d5c:	sbb    al,0x2b
  412d5e:	ds repz leave 
  412d61:	xor    al,0x23
  412d63:	ins    DWORD PTR es:[edi],dx
  412d64:	push   ebx
  412d65:	mov    ?,WORD PTR [esi-0x722f5a98]
  412d6b:	ss push esp
  412d6d:	push   ds
  412d6e:	push   esi
  412d6f:	cmc    
  412d70:	adc    dh,BYTE PTR [ebp+0x1f]
  412d73:	sti    
  412d74:	and    al,0xa7
  412d76:	mov    ecx,0x59ddfdae
  412d7b:	or     esp,0x26
  412d7e:	pop    ss
  412d7f:	repnz xchg edi,eax
  412d81:	int    0x9e
  412d83:	inc    eax
  412d84:	add    edi,DWORD PTR [eax-0x65caab4e]
  412d8a:	jb     0x412def
  412d8c:	dec    edx
  412d8d:	jmp    0x3aaf62ce
  412d92:	lods   al,BYTE PTR ds:[esi]
  412d93:	mov    eax,DWORD PTR [ebx-0x26927c4d]
  412d99:	or     eax,0x102b3dca
  412d9e:	test   eax,esp
  412da0:	mov    bh,0x42
  412da2:	scas   eax,DWORD PTR es:[edi]
  412da3:	mov    ah,0xab
  412da5:	leave  
  412da6:	(bad)  
  412da8:	icebp  
  412da9:	in     al,dx
  412daa:	push   es
  412dab:	cmp    ah,al
  412dad:	jne    0x412d30
  412daf:	jne    0x412d4f
  412db1:	cli    
  412db2:	mov    eax,ds:0xf84052c6
  412db7:	sbb    ebp,DWORD PTR [edi+0x9]
  412dba:	idiv   DWORD PTR [edi+edi*4+0x70]
  412dbe:	xor    BYTE PTR [esi+0x2a],dh
  412dc1:	xchg   esp,eax
  412dc2:	push   ss
  412dc3:	dec    eax
  412dc4:	dec    esp
  412dc5:	ins    DWORD PTR es:[edi],dx
  412dc6:	and    DWORD PTR [edi+eax*2],ebp
  412dc9:	push   ebx
  412dca:	test   DWORD PTR [ecx],eax
  412dcc:	sbb    bh,cl
  412dce:	push   es
  412dcf:	or     edx,edi
  412dd1:	arpl   WORD PTR [ecx],dx
  412dd3:	pop    ss
  412dd4:	add    eax,0xb71dee47
  412dd9:	repz pop ecx
  412ddb:	jge    0x412d98
  412ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dde:	outs   dx,DWORD PTR ds:[esi]
  412ddf:	call   0x99:0x4702722a
  412de6:	dec    eax
  412de7:	into   
  412de8:	(bad)  
  412dea:	add    ebx,edx
  412dec:	mov    WORD PTR [edx],?
  412dee:	retf   
  412def:	ss int3 
  412df1:	mov    al,ds:0xc9b1e405
  412df6:	icebp  
  412df7:	das    
  412df8:	aas    
  412df9:	ret    0xd67
  412dfc:	lods   eax,DWORD PTR ds:[esi]
  412dfd:	ret    0xa69
  412e00:	sti    
  412e01:	mov    dh,0x1d
  412e03:	dec    edx
  412e04:	test   al,0x8d
  412e06:	jle    0x412e45
  412e08:	xor    eax,0x3e84e144
  412e0d:	stc    
  412e0e:	test   al,0x89
  412e10:	(bad)  
  412e11:	aad    0xf9
  412e13:	aas    
  412e14:	(bad)  
  412e15:	or     eax,0x3a56aff1
  412e1a:	cmp    DWORD PTR [ecx+eiz*2-0x2c],ebp
  412e1e:	or     eax,0x9cfefb74
  412e23:	pushf  
  412e24:	jbe    0x412e5a
  412e26:	mov    ebx,ss
  412e28:	and    eax,DWORD PTR [ecx-0x3a]
  412e2b:	and    esp,DWORD PTR [esp+esi*2-0x5f38cdc3]
  412e32:	adc    edi,DWORD PTR [ebp+edi*1+0x46]
  412e36:	retf   
  412e37:	aam    0xf3
  412e39:	inc    eax
  412e3a:	lea    esi,[edi-0x3f8496c3]
  412e40:	push   eax
  412e41:	mov    esi,DWORD PTR [edx]
  412e43:	jnp    0x412e79
  412e45:	call   0x3c702347
  412e4a:	cli    
  412e4b:	mov    ch,0xb2
  412e4d:	mov    ebp,fs
  412e4f:	xlat   BYTE PTR ds:[ebx]
  412e50:	mov    BYTE PTR [esp+esi*4-0x21],ch
  412e54:	inc    ebp
  412e55:	test   DWORD PTR [edx],0x5064482f
  412e5b:	sbb    BYTE PTR [ecx+0x5cdd18f5],bl
  412e61:	not    DWORD PTR [ebx]
  412e63:	xor    cl,dl
  412e65:	and    esi,esp
  412e67:	iret   
  412e68:	inc    edx
  412e69:	jg     0x412ec9
  412e6b:	pop    eax
  412e6c:	ds rcl ecx,1
  412e6f:	aad    0x15
  412e71:	ficom  WORD PTR ds:0x4543fe6d
  412e77:	cmp    esp,ebx
  412e79:	idiv   DWORD PTR [ebx-0x6]
  412e7c:	or     esi,DWORD PTR [edi-0x23]
  412e7f:	jge    0x412e79
  412e81:	ins    DWORD PTR es:[edi],dx
  412e82:	fnstsw WORD PTR [edi-0x261ef967]
  412e88:	push   ebp
  412e89:	and    al,0xba
  412e8b:	jecxz  0x412ec4
  412e8d:	and    ah,BYTE PTR [esi+0x484b2c3a]
  412e93:	or     al,0x2a
  412e95:	mov    ebx,0xbb7fe2ac
  412e9a:	or     cl,0x4f
  412e9d:	push   ss
  412e9e:	imul   ebx,DWORD PTR [ebx],0x648d384a
  412ea4:	in     al,0xa0
  412ea6:	mov    eax,ds:0xe4dde262
  412eab:	jnp    0x412e78
  412ead:	or     eax,0x67837015
  412eb2:	lahf   
  412eb3:	ret    
  412eb4:	xchg   ecx,eax
  412eb5:	sahf   
  412eb6:	cmp    ebp,DWORD PTR [ebx]
  412eb8:	adc    eax,0xb49fc685
  412ebd:	adc    BYTE PTR [edx+eax*8+0x60],cl
  412ec1:	in     eax,dx
  412ec2:	les    ecx,FWORD PTR [edx+0x8]
  412ec5:	mov    ah,BYTE PTR [ecx-0x474d63f2]
  412ecb:	fsubr  DWORD PTR [eax]
  412ecd:	jg     0x412e6d
  412ecf:	(bad)  
  412ed0:	cld    
  412ed1:	aam    0xba
  412ed3:	fistp  WORD PTR [ecx-0x43]
  412ed6:	add    DWORD PTR [eax],esp
  412ed8:	jne    0x412f58
  412eda:	and    dl,bl
  412edc:	rol    DWORD PTR [ecx-0x17],0x4d
  412ee0:	sbb    DWORD PTR ds:0xbd39ff23,ecx
  412ee6:	das    
  412ee7:	cli    
  412ee8:	adc    ebx,DWORD PTR [ebx]
  412eea:	nop
  412eeb:	pop    eax
  412eec:	mov    dl,0x9e
  412eee:	sbb    ebx,edi
  412ef0:	mov    ch,0x2b
  412ef2:	mov    ss,eax
  412ef4:	lods   al,BYTE PTR ds:[esi]
  412ef5:	mov    BYTE PTR [edx],bl
  412ef7:	cs mov esp,edx
  412efa:	cmp    BYTE PTR [esi-0x49],bh
  412efd:	shl    DWORD PTR ds:0x814243e1,1
  412f03:	or     edx,edx
  412f05:	jecxz  0x412f26
  412f07:	pop    ss
  412f08:	mov    al,0x81
  412f0a:	xchg   DWORD PTR [edx],ebx
  412f0c:	enter  0x800c,0x22
  412f10:	inc    ebp
  412f11:	push   ss
  412f12:	out    0x1f,eax
  412f14:	xor    esp,DWORD PTR [edx-0x7d]
  412f17:	dec    esi
  412f19:	mov    ds:0x48dd3228,eax
  412f1e:	pusha  
  412f1f:	sub    bl,dl
  412f21:	test   BYTE PTR [ebx+0x1],ah
  412f24:	mul    edi
  412f26:	jmp    FWORD PTR [edx]
  412f28:	cwde   
  412f29:	ins    BYTE PTR es:[edi],dx
  412f2a:	jecxz  0x412f94
  412f2c:	aas    
  412f2d:	and    BYTE PTR [edx],dh
  412f2f:	dec    DWORD PTR [esi-0x325b0d43]
  412f35:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f37:	sbb    eax,0x5a727ada
  412f3c:	mov    eax,ds:0x13f891d3
  412f41:	aam    0x99
  412f43:	nop
  412f44:	mov    eax,ds:0x9a18feeb
  412f49:	cmp    eax,0x3694121f
  412f4e:	je     0x412f74
  412f50:	test   DWORD PTR [edi+0x46655c94],ecx
  412f56:	aas    
  412f57:	push   0xac5d42d5
  412f5c:	call   0x308b2ed4
  412f61:	hlt    
  412f62:	jno    0x412fc8
  412f64:	arpl   WORD PTR [eax],si
  412f66:	xor    BYTE PTR [ecx-0x4aaf99f9],bh
  412f6c:	mov    ds:0x1aa83bd9,eax
  412f71:	aam    0xae
  412f73:	xchg   ebp,eax
  412f74:	mov    WORD PTR [bx+di+0x3d],fs
  412f78:	sub    BYTE PTR [ebx+edi*4+0x7a],dl
  412f7c:	sub    esi,DWORD PTR [edi+0x11dd12c3]
  412f82:	cmp    bl,BYTE PTR [ecx-0x34d0c927]
  412f88:	call   0x3ea6:0x15243c9f
  412f8f:	iret   
  412f90:	xchg   DWORD PTR [eax+0xbad555a],ebp
  412f96:	call   0xdd62:0xcf2fac09
  412f9d:	stos   BYTE PTR es:[edi],al
  412f9e:	fwait
  412f9f:	push   edi
  412fa0:	imul   edx,ecx,0xffffff90
  412fa3:	dec    eax
  412fa4:	ret    
  412fa5:	xor    eax,0x78af5b92
  412fab:	test   bh,bl
  412fad:	ins    DWORD PTR es:[edi],dx
  412fae:	mov    WORD PTR [ebx+0x2cfeb82e],gs
  412fb4:	mov    cl,BYTE PTR [esi+0x2]
  412fb7:	popa   
  412fb8:	ret    0xbc53
  412fbb:	fmul   st,st(2)
  412fbd:	mov    BYTE PTR [esi],bh
  412fbf:	and    eax,0x31b72559
  412fc4:	loopne 0x412f56
  412fc6:	call   0x97b6:0x1958ba7f
  412fcd:	in     eax,dx
  412fce:	js     0x412f9c
  412fd0:	push   0x1a
  412fd2:	xor    eax,0xd5df8ccc
  412fd7:	dec    esi
  412fd8:	imul   ebx,DWORD PTR [ebx-0x512bad5c],0xbd4785be
  412fe2:	and    DWORD PTR [eax],esi
  412fe4:	pop    edx
  412fe5:	push   cs
  412fe6:	(bad)  
  412fe7:	cmp    DWORD PTR [ebx-0x690bbc20],esp
  412fed:	lods   eax,DWORD PTR ds:[esi]
  412fee:	aaa    
  412fef:	aad    0xa5
  412ff1:	shl    BYTE PTR [esi+0x5e],0x11
  412ff5:	sub    al,0x84
  412ff7:	arpl   di,si
  412ff9:	daa    
  412ffa:	pop    edi
  412ffb:	adc    al,0x56
  412ffd:	addr16 out 0xa1,eax
  413000:	jl     0x412fca
  413002:	cmp    esp,DWORD PTR ds:0x1522cb96
  413008:	cmp    eax,0x7155ed5
  41300d:	inc    eax
  41300e:	mov    eax,0x93df3fdb
  413013:	add    ch,BYTE PTR [esi]
  413015:	cmp    al,0x9c
  413017:	into   
  413018:	mov    dl,BYTE PTR [ebx-0x49827f0f]
  41301e:	inc    esp
  41301f:	push   edx
  413020:	inc    ebx
  413021:	xlat   BYTE PTR ds:[ebx]
  413022:	gs adc ecx,edx
  413025:	rol    DWORD PTR [edi-0x41],cl
  413028:	out    0x2d,al
  41302a:	push   esp
  41302b:	loope  0x41300c
  41302d:	push   0xffffffef
  41302f:	scas   eax,DWORD PTR es:[edi]
  413030:	mov    cl,0xf6
  413032:	push   edx
  413033:	inc    ecx
  413034:	test   al,0x7b
  413036:	scas   eax,DWORD PTR es:[edi]
  413037:	push   ss
  413038:	or     ah,BYTE PTR [esp+ebp*1+0x52]
  41303c:	call   0xfd9e:0xeaffc4ff
  413043:	in     eax,dx
  413044:	jmp    0x1dbf:0x9436eb32
  41304b:	loope  0x4130c9
  41304d:	cmc    
  41304e:	inc    edi
  41304f:	cmp    bh,BYTE PTR [ebx-0x75]
  413052:	push   ds
  413053:	and    eax,0xc969687
  413058:	push   ds
  413059:	mov    ch,0x97
  41305b:	push   0xd53962ec
  413060:	jo     0x4130dc
  413062:	and    eax,0x95f915d6
  413067:	dec    edi
  413068:	xor    ah,BYTE PTR [edi+0x7c]
  41306b:	adc    dh,BYTE PTR [ecx]
  41306d:	mov    ebp,0xe35f3197
  413072:	mov    eax,0x736e9855
  413077:	xor    dl,dl
  413079:	pop    es
  41307a:	pop    ss
  41307b:	xchg   edx,eax
  41307c:	jae    0x41300f
  41307e:	std    
  41307f:	sbb    dl,BYTE PTR [edi+0x40]
  413082:	mov    bl,0xad
  413084:	clc    
  413085:	inc    esi
  413086:	js     0x413065
  413088:	es clc 
  41308a:	jmp    0x2cd8:0x4481abcb
  413091:	fidivr WORD PTR [edi+ebx*4+0x40]
  413095:	or     al,0x79
  413097:	mov    dh,0x55
  413099:	hlt    
  41309a:	pushf  
  41309b:	repnz loope 0x4130e0
  41309e:	loope  0x4130ea
  4130a0:	cmp    DWORD PTR [edx],0x26f8ea73
  4130a6:	inc    esp
  4130a7:	and    eax,0x8249043b
  4130ac:	mov    bh,0x83
  4130ae:	pop    ds
  4130af:	sbb    bl,BYTE PTR [eax-0x24]
  4130b2:	jbe    0x413066
  4130b4:	push   ds
  4130b5:	cld    
  4130b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b7:	and    ch,dl
  4130b9:	daa    
  4130ba:	mov    eax,0x4c0c8266
  4130bf:	inc    esi
  4130c0:	mov    bh,0x6d
  4130c2:	mov    eax,0x5f03d55b
  4130c7:	fnstsw WORD PTR ds:0x80361000
  4130cd:	push   ecx
  4130ce:	dec    esp
  4130cf:	xchg   esi,eax
  4130d0:	mov    eax,0x35159a4b
  4130d5:	nop
  4130d6:	or     eax,0xffbb0307
  4130db:	cwde   
  4130dc:	mul    DWORD PTR [ebx+0x9]
  4130df:	sti    
  4130e0:	dec    eax
  4130e1:	jo     0x41311b
  4130e3:	and    BYTE PTR [ecx],ah
  4130e5:	sti    
  4130e6:	push   edx
  4130e7:	xchg   edi,eax
  4130e8:	test   DWORD PTR [esi],edx
  4130ea:	aas    
  4130eb:	or     al,0x98
  4130ed:	sbb    al,0x49
  4130ef:	or     ebx,eax
  4130f1:	aas    
  4130f2:	cs inc esi
  4130f4:	sbb    BYTE PTR [edx-0x11040b17],0x11
  4130fb:	(bad)  
  4130fc:	es aam 0xc7
  4130ff:	daa    
  413100:	(bad)  
  413101:	sub    al,0x11
  413103:	test   eax,0xd99c538a
  413108:	call   0x1224:0xac74e738
  41310f:	pushf  
  413110:	push   ss
  413111:	loope  0x413097
  413113:	out    0x87,al
  413115:	sub    edi,DWORD PTR [esi]
  413117:	dec    dh
  413119:	inc    esi
  41311a:	jge    0x41313a
  41311c:	inc    ebx
  41311d:	jg     0x4130f6
  41311f:	or     al,0x36
  413121:	div    BYTE PTR [edx+eax*2]
  413124:	jo     0x41311f
  413126:	loop   0x4130d1
  413128:	jmp    0x2201:0x676791df
  41312f:	sub    DWORD PTR [ecx-0x23],edi
  413132:	push   cs
  413133:	and    BYTE PTR [eax],ch
  413135:	(bad)  
  413136:	scas   al,BYTE PTR es:[edi]
  413137:	les    ecx,FWORD PTR [edi+0x9]
  41313a:	dec    edi
  41313b:	add    dh,BYTE PTR [esi+0x59]
  41313e:	bound  esp,QWORD PTR [ecx]
  413140:	int3   
  413141:	adc    al,0xf3
  413143:	adc    dh,al
  413145:	jnp    0x413191
  413147:	pop    es
  413148:	jb     0x41310f
  41314a:	lods   al,BYTE PTR ds:[esi]
  41314b:	pop    ecx
  41314c:	inc    esp
  41314d:	add    ah,al
  41314f:	jl     0x4130e9
  413151:	dec    esp
  413152:	aaa    
  413153:	mov    esp,0xd990e359
  413158:	lods   al,BYTE PTR ds:[esi]
  413159:	push   edx
  41315a:	hlt    
  41315b:	ins    BYTE PTR es:[edi],dx
  41315c:	test   eax,0x10cfa8bf
  413161:	sub    eax,0x108bf6cb
  413166:	xchg   edx,eax
  413167:	cld    
  413168:	mov    cl,0xd2
  41316a:	cmp    esp,edx
  41316c:	jae    0x413179
  41316e:	stc    
  41316f:	mov    al,0xfe
  413171:	jnp    0x413168
  413173:	and    eax,0xd612588f
  413178:	jl     0x4131f8
  41317a:	mov    al,ds:0xe4196bb1
  41317f:	push   0xb0cc3015
  413184:	cli    
  413185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413186:	sub    dh,BYTE PTR [esi-0x109a27b2]
  41318c:	jg     0x4131a3
  41318e:	not    DWORD PTR [ecx]
  413190:	push   ecx
  413192:	jp     0x413130
  413194:	sti    
  413195:	sbb    esp,DWORD PTR [esi+0x6e681c6]
  41319b:	and    BYTE PTR [edi],dh
  41319d:	mov    WORD PTR [edi+0x4948b3b2],gs
  4131a3:	hlt    
  4131a4:	sub    eax,0x1f48841b
  4131a9:	push   ebx
  4131aa:	mov    al,0xce
  4131ac:	dec    ecx
  4131ad:	leave  
  4131ae:	pop    ecx
  4131af:	inc    ebx
  4131b0:	push   es
  4131b1:	lahf   
  4131b2:	pop    ecx
  4131b3:	and    ebp,esi
  4131b5:	shl    BYTE PTR [ecx+ecx*8-0x75],1
  4131b9:	and    BYTE PTR [eax+0x35],bh
  4131bc:	sbb    esi,DWORD PTR [ecx-0x1b]
  4131bf:	mov    ?,WORD PTR [ecx]
  4131c1:	xor    BYTE PTR [esi-0x50ba1b7f],al
  4131c7:	icebp  
  4131c8:	mov    dl,BYTE PTR [ebp+0x61]
  4131cb:	add    DWORD PTR [ecx+edx*1],ebx
  4131ce:	nop
  4131cf:	jo     0x41321d
  4131d1:	inc    eax
  4131d2:	or     BYTE PTR [esi+0x6dbb76b5],0xd4
  4131d9:	xor    dl,BYTE PTR [edi]
  4131db:	push   eax
  4131dc:	adc    BYTE PTR [edi-0x26548325],0x2f
  4131e3:	and    BYTE PTR [edx+eiz*2+0x41],ah
  4131e7:	(bad)  [edi]
  4131e9:	call   0x69b1:0x2a2260
  4131f0:	mov    eax,0x37107484
  4131f5:	stos   BYTE PTR es:[edi],al
  4131f6:	or     ebx,DWORD PTR [ebp-0x50]
  4131f9:	xor    eax,ecx
  4131fb:	jp     0x4131dc
  4131fd:	ds push ecx
  4131ff:	xchg   DWORD PTR [ecx+0xb],eax
  413202:	fld    QWORD PTR [esi-0x34dcc301]
  413208:	mov    bh,0x77
  41320a:	cmp    bh,BYTE PTR [eax+eax*8]
  41320d:	addr16 inc esp
  41320f:	(bad)
  413212:	sbb    eax,0x1ab14098
  413217:	ret    
  413218:	jl     0x41325e
  41321a:	sbb    DWORD PTR [ebp-0x7a6cff9],edi
  413220:	out    dx,eax
  413221:	aaa    
  413222:	xor    eax,DWORD PTR [ecx+0x41]
  413225:	or     BYTE PTR [esi+0x52777c0a],dl
  41322b:	xor    BYTE PTR [eax+0xb],al
  41322e:	retf   
  41322f:	shl    DWORD PTR [esp+eiz*2+0x4347625a],1
  413236:	int    0x47
  413238:	or     cl,dh
  41323a:	test   eax,0x53bd1cb5
  41323f:	in     al,0xe0
  413241:	(bad)  
  413243:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413245:	lods   al,BYTE PTR ss:[esi]
  413247:	xchg   edi,eax
  413248:	jg     0x413201
  41324a:	adc    eax,0x11d3943a
  41324f:	out    0x1c,eax
  413251:	adc    dl,al
  413253:	js     0x413245
  413255:	sub    BYTE PTR [edx+0x33],cl
  413258:	out    0xc7,al
  41325a:	dec    ebx
  41325b:	mov    ds:0xa741f097,al
  413260:	lods   eax,DWORD PTR ds:[esi]
  413261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413262:	aas    
  413263:	stc    
  413264:	mov    ds:0x71ba2114,eax
  413269:	sub    ebx,DWORD PTR [ebx+0x5a]
  41326c:	leave  
  41326d:	stos   BYTE PTR es:[edi],al
  41326e:	adc    bh,ch
  413270:	sub    bl,ah
  413272:	xlat   BYTE PTR ds:[ebx]
  413273:	les    ecx,FWORD PTR [ebx+0x67]
  413276:	sar    esi,1
  413278:	(bad)  
  413279:	aad    0xa6
  41327b:	(bad)  
  41327c:	xor    eax,DWORD PTR [eax+0x5a]
  41327f:	mov    al,ds:0x291b6e88
  413284:	dec    ebp
  413285:	pop    esp
  413286:	repz ds dec ecx
  413289:	std    
  41328a:	leave  
  41328b:	mov    edi,0xad6ade6e
  413290:	dec    ebp
  413291:	aad    0x28
  413293:	retf   0xfbf9
  413296:	or     esp,DWORD PTR [edx+0x2f33c7ad]
  41329c:	pop    ebp
  41329d:	fidiv  DWORD PTR [edx+eax*1]
  4132a0:	ins    DWORD PTR es:[edi],dx
  4132a1:	in     eax,0xfe
  4132a3:	fadd   QWORD PTR [ebp+0x6b]
  4132a6:	cwde   
  4132a7:	mov    edi,0x99743ca1
  4132ac:	xchg   edx,eax
  4132ad:	imul   eax,eax,0x8051adb6
  4132b3:	jl     0x413292
  4132b5:	ss sti 
  4132b7:	sub    al,0x93
  4132ba:	inc    edi
  4132bb:	xor    bl,BYTE PTR [ecx-0x7c989028]
  4132c1:	scas   eax,DWORD PTR es:[edi]
  4132c2:	cmp    eax,DWORD PTR [ecx+esi*1]
  4132c5:	ss loop 0x413269
  4132c8:	cwde   
  4132c9:	scas   al,BYTE PTR es:[edi]
  4132ca:	jnp    0x4132ae
  4132cc:	add    DWORD PTR [eax+eax*8+0x72],edx
  4132d0:	inc    ebp
  4132d1:	imul   esi,DWORD PTR [edi],0xe6ef30bb
  4132d7:	ror    BYTE PTR [ebx],cl
  4132d9:	sbb    BYTE PTR [edi-0x51cb2b88],0x28
  4132e0:	mov    al,0x93
  4132e2:	js     0x41330f
  4132e4:	mov    bl,0xba
  4132e6:	push   ss
  4132e7:	lea    esi,[ebp-0x1c]
  4132ea:	mov    esi,0x24ec4f6f
  4132ef:	clc    
  4132f0:	jb     0x4132e3
  4132f2:	add    BYTE PTR [edi+0x6a0f545d],bl
  4132f8:	inc    edi
  4132f9:	add    DWORD PTR [esi+0x66],esp
  4132fc:	adc    ch,0x74
  4132ff:	into   
  413300:	sbb    DWORD PTR [esi],eax
  413302:	jbe    0x4132aa
  413304:	add    ah,BYTE PTR [edi-0x7c]
  413307:	outs   dx,BYTE PTR ds:[esi]
  413308:	lds    edx,FWORD PTR [bx+di]
  41330b:	push   es
  41330c:	xor    ecx,DWORD PTR [ecx-0x10]
  41330f:	add    ecx,DWORD PTR [ebx-0x3325f32d]
  413315:	jo     0x413319
  413317:	mov    cl,BYTE PTR [ebp+0x1522c3c9]
  41331d:	shr    BYTE PTR [edx-0x2fa4c51b],1
  413323:	je     0x4132ea
  413325:	int    0x84
  413327:	cmp    DWORD PTR [eax+0x49],edx
  41332a:	mov    edx,0x731bb558
  41332f:	mov    ds:0x51c2d255,al
  413334:	std    
  413335:	sub    bl,BYTE PTR [ecx+eiz*8+0x39]
  413339:	push   ecx
  41333a:	popf   
  41333b:	mov    BYTE PTR [ebx-0x77],0xe2
  41333f:	and    DWORD PTR [ebx-0x60],edx
  413342:	(bad)  [eax+0x306d7a8f]
  413348:	xor    al,0x4c
  41334a:	sub    BYTE PTR [ebx+0x1e],bl
  41334d:	fiadd  WORD PTR [edx+0x4f]
  413350:	test   BYTE PTR [esi-0xb],bh
  413353:	push   ss
  413354:	or     bh,dl
  413356:	inc    ecx
  413357:	in     eax,0x8d
  413359:	jo     0x4132f2
  41335b:	dec    edx
  41335c:	stos   BYTE PTR es:[edi],al
  41335d:	call   0xc75e5ee0
  413362:	jns    0x4132ef
  413364:	pop    esi
  413365:	vpaddsb xmm1,xmm2,XMMWORD PTR [esi]
  413369:	inc    ecx
  41336a:	inc    ebx
  41336b:	mov    edx,0x16f959c7
  413370:	dec    ebp
  413371:	imul   edi,DWORD PTR [ecx],0x13
  413374:	mov    ch,0x2e
  413376:	and    ebx,DWORD PTR [eax+eiz*4-0x6d]
  41337a:	fisttp QWORD PTR [ebp-0x7f9d3f02]
  413380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413381:	pusha  
  413382:	and    DWORD PTR [ebx-0x36],ecx
  413385:	test   ch,bh
  413387:	dec    ebp
  413388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413389:	adc    dh,BYTE PTR [esi+0x56]
  41338c:	cld    
  41338d:	sbb    eax,0xb1272ce6
  413392:	sub    DWORD PTR [esi+0x681b7618],esi
  413398:	lods   eax,DWORD PTR ds:[esi]
  413399:	icebp  
  41339a:	ret    
  41339b:	imul   esi,DWORD PTR [edi],0x5d
  41339e:	jmp    0xc79a5191
  4133a3:	pop    ds
  4133a4:	gs mov ebp,0xe347e1c4
  4133aa:	scas   al,BYTE PTR es:[edi]
  4133ab:	addr16 mov eax,0xfc344773
  4133b1:	sub    edi,DWORD PTR [edi+0x33]
  4133b4:	cmp    dh,al
  4133b6:	in     al,0xbc
  4133b8:	mov    ds:0x6f9d19c8,eax
  4133bd:	and    bh,dh
  4133bf:	cmp    ebp,eax
  4133c1:	mov    al,ds:0xf66f538c
  4133c6:	and    esi,DWORD PTR fs:[edx+0x7786117d]
  4133cd:	xor    al,0x51
  4133cf:	ins    DWORD PTR es:[edi],dx
  4133d0:	mov    bh,0xb6
  4133d2:	stos   BYTE PTR es:[edi],al
  4133d3:	ss xchg esi,eax
  4133d5:	sbb    eax,0x64f0f231
  4133da:	dec    cl
  4133dc:	retf   
  4133dd:	shl    BYTE PTR [edx+eiz*4+0x1f],cl
  4133e1:	cwde   
  4133e2:	jecxz  0x4133c7
  4133e4:	(bad)  
  4133e5:	into   
  4133e6:	sub    bh,ah
  4133e8:	push   cs
  4133e9:	mov    bh,BYTE PTR [eax]
  4133eb:	jns    0x4133f6
  4133ed:	xor    esp,DWORD PTR [edx-0x717df9c8]
  4133f3:	and    BYTE PTR ds:0xcff2de2e,bl
  4133f9:	fwait
  4133fa:	sub    eax,0xd055992a
  4133ff:	nop
  413400:	adc    BYTE PTR [edi],dl
  413402:	push   ss
  413403:	fcomp  QWORD PTR [edi+ebp*4+0x6e77981b]
  41340a:	mov    ebp,0x28d10f0f
  41340f:	mov    eax,0xc4e0da58
  413414:	mov    al,0x40
  413416:	cwde   
  413417:	lods   al,BYTE PTR ds:[esi]
  413418:	shr    BYTE PTR [edx+0x57],cl
  41341b:	mov    ds:0xf685d2ae,al
  413420:	push   0xfffffffd
  413422:	xor    al,0x56
  413424:	or     ebp,esp
  413426:	mov    ecx,0xb37d847c
  41342b:	stos   DWORD PTR es:[edi],eax
  41342c:	add    bh,BYTE PTR [ecx-0x23]
  41342f:	out    0xd,al
  413431:	add    bl,BYTE PTR [esi]
  413433:	jecxz  0x4133ee
  413435:	inc    ebp
  413436:	test   edi,0xa8aed574
  41343c:	push   ecx
  41343d:	jg     0x413487
  41343f:	(bad)  
  413440:	fcomp  DWORD PTR [ebx-0x14]
  413443:	retf   
  413444:	or     esi,DWORD PTR [ebx]
  413446:	dec    ebp
  413447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413448:	aaa    
  413449:	ss push esi
  41344b:	xchg   DWORD PTR [ecx-0x27ea9f99],esp
  413451:	vmwrite esp,DWORD PTR [edx+0x5cad93b6]
  413458:	add    DWORD PTR [esi+esi*4],edx
  41345b:	jno    0x413469
  41345d:	rcl    BYTE PTR [eax+ebp*4+0x34],0xaa
  413462:	jno    0x413468
  413464:	call   0x802fb678
  413469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346a:	lock jge 0x41343d
  41346d:	adc    al,0xbc
  41346f:	add    bl,BYTE PTR [ebx+0x49]
  413472:	add    eax,0xe95d63f0
  413477:	jl     0x413422
  413479:	stc    
  41347a:	xor    eax,0x6fa9f83a
  41347f:	ja     0x41345b
  413481:	push   es
  413482:	stos   BYTE PTR es:[edi],al
  413483:	fstp   TBYTE PTR [ebx+0x32]
  413486:	test   BYTE PTR [eax-0x12faec2a],cl
  41348c:	fcmovu st,st(7)
  41348e:	popf   
  41348f:	mov    cl,0x5c
  413491:	jns    0x413491
  413493:	mov    BYTE PTR [ebp-0x11041f67],ch
  413499:	or     BYTE PTR [esi],bl
  41349b:	shr    BYTE PTR [esi+0x79],cl
  41349e:	push   0xfffffff3
  4134a0:	outs   dx,DWORD PTR ds:[esi]
  4134a1:	and    ebp,DWORD PTR [eax-0xc]
  4134a4:	sbb    cl,al
  4134a6:	dec    esp
  4134a7:	xchg   edx,eax
  4134a8:	bound  ecx,QWORD PTR [ecx-0x1681f8ea]
  4134ae:	pop    esp
  4134af:	imul   edi,DWORD PTR [ebx],0x7f
  4134b2:	push   ebp
  4134b3:	jmp    0x31317569
  4134b8:	jne    0x41344c
  4134ba:	aaa    
  4134bb:	fwait
  4134bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134bd:	adc    BYTE PTR [ebp-0x1333973f],ch
  4134c3:	aaa    
  4134c4:	dec    edx
  4134c5:	adc    al,0x7
  4134c7:	sbb    eax,0xc068f5b4
  4134cc:	(bad)  
  4134cd:	test   al,0xf6
  4134cf:	(bad)  
  4134d0:	int3   
  4134d1:	cld    
  4134d2:	cdq    
  4134d3:	pusha  
  4134d4:	icebp  
  4134d5:	or     BYTE PTR [edx+0x67],ah
  4134d8:	or     eax,0x1e2dfa1d
  4134dd:	stc    
  4134de:	sub    eax,0xe1d596ea
  4134e3:	xchg   DWORD PTR [edx],ebp
  4134e5:	je     0x413506
  4134e7:	xlat   BYTE PTR ds:[ebx]
  4134e8:	scas   eax,DWORD PTR es:[edi]
  4134e9:	add    ecx,DWORD PTR [esp+eax*4+0x4c]
  4134ed:	fcom   QWORD PTR ds:0x1bcf042e
  4134f3:	add    esi,DWORD PTR [eax+eax*2]
  4134f6:	aad    0x1c
  4134f8:	inc    ebx
  4134f9:	mov    WORD PTR [ecx+0x1],gs
  4134fc:	leave  
  4134fd:	sub    BYTE PTR [edx+0x7c],al
  413500:	and    DWORD PTR [esi],esp
  413502:	mov    eax,0xc2077ab1
  413507:	ins    DWORD PTR es:[edi],dx
  413508:	hlt    
  413509:	daa    
  41350a:	sub    esi,ebp
  41350c:	call   0x4c05:0x8f06f260
  413513:	adc    eax,0x60a678d9
  413518:	imul   ebp,DWORD PTR [edx-0x58322414],0x32
  41351f:	mov    esi,0xb0874af1
  413524:	inc    ebx
  413525:	adc    eax,0xa6db1880
  41352a:	push   ss
  41352b:	mov    edx,0x6b2de283
  413530:	inc    edi
  413531:	push   esp
  413532:	lea    ebp,[eax-0x35382726]
  413538:	cmc    
  413539:	adc    edx,DWORD PTR [eax]
  41353b:	add    DWORD PTR [esi-0x4bb1142c],ebp
  413541:	add    al,0x35
  413543:	sub    eax,0x3d925cb3
  413548:	xchg   edx,eax
  413549:	ret    
  41354a:	sub    al,BYTE PTR [eax+0x22]
  41354d:	sahf   
  41354e:	xchg   ecx,esi
  413550:	jmp    0xa56f91a1
  413555:	mov    al,ds:0x259e893a
  41355a:	mov    ds:0x2a98c032,al
  41355f:	test   eax,0x508df520
  413564:	and    dl,BYTE PTR [esi-0x284c2c94]
  41356a:	in     eax,0x59
  41356c:	mov    ah,0xbf
  41356e:	fnsave [edi-0x3a]
  413571:	je     0x4135cd
  413573:	pop    esi
  413574:	push   eax
  413575:	add    BYTE PTR [edi+eax*2+0x25df268],bh
  41357c:	lock aam 0xe8
  41357f:	cdq    
  413580:	xor    bh,dl
  413582:	xchg   ebp,eax
  413583:	cmp    BYTE PTR [eax-0x4f],bl
  413586:	repz fist DWORD PTR [edi+0x57b9c5e4]
  41358d:	cmp    edx,0x4c
  413590:	inc    edi
  413591:	pusha  
  413592:	jle    0x4135c1
  413594:	arpl   WORD PTR [edx-0x11],di
  413597:	ds sub ebx,ecx
  41359a:	repz into 
  41359c:	or     dl,dl
  41359e:	mov    edi,0x2920551d
  4135a3:	or     eax,0xcf9acfc2
  4135a8:	add    ebx,DWORD PTR [eax]
  4135aa:	sub    eax,0xc081af5f
  4135af:	mov    bh,0x9a
  4135b1:	mov    ah,0xbc
  4135b3:	call   0x3e0d556c
  4135b8:	std    
  4135b9:	pop    ss
  4135ba:	out    0xc4,eax
  4135bc:	gs dec ebp
  4135be:	daa    
  4135bf:	ret    
  4135c0:	push   esp
  4135c1:	jo     0x41357f
  4135c3:	pop    edx
  4135c4:	fist   DWORD PTR [ebx+0x69]
  4135c7:	sti    
  4135c8:	repnz outs dx,DWORD PTR ds:[esi]
  4135ca:	xchg   edx,eax
  4135cb:	fs mov dh,ah
  4135ce:	sbb    BYTE PTR [ebp+eiz*2+0x62831f03],dl
  4135d5:	mov    al,ds:0xeb64053
  4135da:	jo     0x41362e
  4135dc:	xchg   ebp,eax
  4135dd:	out    0x1a,eax
  4135df:	pop    edi
  4135e0:	xchg   ecx,eax
  4135e1:	sbb    eax,0x2125607e
  4135e6:	jecxz  0x4135d7
  4135e8:	loop   0x4135b6
  4135ea:	or     DWORD PTR [esi],ecx
  4135ec:	xor    eax,0x3cf10605
  4135f1:	in     al,dx
  4135f2:	adc    DWORD PTR [esi+ebp*4-0x5e94a61b],ecx
  4135f9:	pop    esi
  4135fa:	daa    
  4135fb:	arpl   WORD PTR [eax-0x67],si
  4135fe:	add    eax,0xd20088f5
  413603:	jo     0x4135d2
  413605:	jmp    0xacc:0xecfe2e8
  41360c:	or     al,al
  41360e:	push   edx
  41360f:	(bad)  
  413610:	adc    edx,DWORD PTR [eax]
  413612:	sbb    cl,ah
  413614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413615:	jg     0x4135e8
  413617:	inc    edx
  413618:	imul   eax,DWORD PTR [ebx],0x3c
  41361b:	mov    al,0xd3
  41361d:	mov    ch,BYTE PTR [esi-0x49]
  413620:	mov    ebx,eax
  413622:	xchg   ecx,eax
  413623:	mov    eax,0xd1f5ca59
  413628:	sbb    DWORD PTR [eax-0x4d],ebx
  41362b:	jb     0x41369e
  41362d:	cmp    ecx,DWORD PTR [eax-0x3b]
  413630:	sbb    al,0xdc
  413632:	inc    ebx
  413633:	fidiv  WORD PTR [ebx-0x2c39d426]
  413639:	sub    al,0xa5
  41363b:	mov    bl,0x64
  41363d:	jo     0x413696
  41363f:	pop    esp
  413640:	scas   eax,DWORD PTR es:[edi]
  413641:	out    dx,eax
  413642:	sbb    bh,al
  413644:	xchg   edi,eax
  413645:	icebp  
  413646:	mov    ah,0xaa
  413648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41364a:	stos   BYTE PTR es:[edi],al
  41364b:	push   esp
  41364c:	out    dx,eax
  41364d:	daa    
  41364e:	pop    ss
  41364f:	cmp    BYTE PTR [edi-0x260020db],cl
  413655:	(bad)  
  413656:	fnstenv [esp+esi*1]
  413659:	fscale 
  41365b:	inc    esi
  41365c:	cmp    ch,dl
  41365e:	retf   0xda00
  413661:	xchg   esi,eax
  413662:	push   cs
  413663:	retf   0xe807
  413666:	sahf   
  413667:	rol    BYTE PTR [ebx+0x58],1
  41366a:	dec    esi
  41366b:	xor    ebx,ebx
  41366d:	lods   al,BYTE PTR ds:[esi]
  41366e:	sub    ebp,ecx
  413670:	sti    
  413671:	les    ebx,FWORD PTR [ebx+0x35]
  413674:	and    esp,DWORD PTR [edx-0x311b465a]
  41367a:	fwait
  41367b:	scas   eax,DWORD PTR es:[edi]
  41367c:	stos   DWORD PTR es:[edi],eax
  41367d:	push   ebx
  41367e:	int    0xd6
  413680:	jne    0x4136f9
  413682:	push   eax
  413683:	aaa    
  413684:	ror    BYTE PTR [eax-0x5c],1
  413687:	xor    DWORD PTR [ebp-0x3adb71c8],eax
  41368d:	and    DWORD PTR [eax-0x25],ebp
  413690:	mov    edx,0x124a2fa9
  413695:	pop    ebx
  413696:	sar    BYTE PTR [ebx+0x1b],cl
  413699:	xchg   ecx,eax
  41369a:	inc    eax
  41369b:	pop    ecx
  41369c:	es sub bh,al
  41369f:	dec    ebx
  4136a0:	mov    fs,WORD PTR gs:[ecx]
  4136a3:	wbinvd 
  4136a5:	test   BYTE PTR [esi],0xca
  4136a8:	pop    esi
  4136a9:	cmp    BYTE PTR [edi],ch
  4136ab:	mov    ch,0x9b
  4136ad:	mov    ah,BYTE PTR [ecx-0x1308789a]
  4136b3:	stos   BYTE PTR es:[edi],al
  4136b4:	mov    cl,0x57
  4136b6:	sti    
  4136b7:	popf   
  4136b8:	pop    edx
  4136b9:	sti    
  4136ba:	outs   dx,BYTE PTR ds:[esi]
  4136bb:	sbb    ch,0xf5
  4136be:	scas   eax,DWORD PTR es:[edi]
  4136bf:	dec    eax
  4136c0:	daa    
  4136c1:	jmp    0x86a28f07
  4136c6:	cmp    eax,0xb60a2be3
  4136cb:	mov    BYTE PTR [ebp-0x55],dl
  4136ce:	nop
  4136cf:	xor    BYTE PTR [ecx+0x70],dl
  4136d2:	sbb    BYTE PTR [ebx],bl
  4136d4:	mov    bh,0x74
  4136d6:	xchg   DWORD PTR [ebp-0x573ceade],ebx
  4136dc:	ret    
  4136dd:	mov    ebx,0x78bb308c
  4136e2:	add    al,0x1d
  4136e4:	stos   BYTE PTR es:[edi],al
  4136e5:	das    
  4136e6:	sbb    bl,BYTE PTR [edx-0x2ec2c8aa]
  4136ec:	repz leave 
  4136ee:	sahf   
  4136ef:	and    dh,bl
  4136f1:	mov    ebx,0xc79778fb
  4136f6:	add    DWORD PTR [edi+0x198578ea],ebx
  4136fc:	xor    esp,DWORD PTR [ebp+0x18093e3a]
  413702:	add    al,0x6e
  413704:	xchg   esp,eax
  413705:	jge    0x41368b
  413707:	cwde   
  413708:	dec    ecx
  413709:	sbb    ch,cl
  41370b:	retf   0x78d
  41370e:	in     eax,dx
  41370f:	dec    ebp
  413710:	aad    0xd1
  413712:	jns    0x4136f7
  413714:	xchg   esi,eax
  413715:	jge    0x41373f
  413717:	test   bl,bh
  413719:	nop
  41371a:	test   eax,0xbc1897e
  41371f:	jg     0x413738
  413721:	jmp    0x9d86:0xce47c30a
  413728:	out    0x66,al
  41372a:	adc    DWORD PTR [esi-0x7b3a841b],ebx
  413730:	les    esp,FWORD PTR [eax-0x26]
  413733:	push   ebp
  413734:	sub    eax,0x372c0013
  413739:	call   0xc913eee
  41373e:	mov    eax,ds:0xb25e18be
  413743:	jmp    0xec0ca3f4
  413748:	or     ch,BYTE PTR [ebx+0x73740d52]
  41374e:	les    edx,FWORD PTR [ebx+0x25]
  413751:	mov    esi,0x6108ed62
  413756:	mov    eax,0x1b66dd1e
  41375b:	mov    gs,edi
  41375d:	stos   BYTE PTR es:[edi],al
  41375e:	xchg   esi,eax
  41375f:	ss jnp 0x413724
  413762:	mov    bl,0x26
  413764:	or     eax,esi
  413766:	jg     0x41379a
  413768:	xor    ecx,edx
  41376a:	data16 sbb al,0x5d
  41376d:	cmp    eax,0x46f92835
  413772:	mov    ds:0x2408cf0a,al
  413777:	pop    ds
  413778:	mov    dl,0x1d
  41377a:	shl    DWORD PTR [ebp-0x47],1
  41377d:	or     DWORD PTR [ebp+0x263fde4b],0x4d
  413784:	clc    
  413785:	adc    al,0xe
  413787:	ins    BYTE PTR es:[edi],dx
  413788:	xor    dl,cl
  41378a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378b:	pusha  
  41378c:	sbb    al,0xe
  41378e:	ror    DWORD PTR [edi],0x90
  413791:	xor    bl,BYTE PTR [esi+0x1e27bc7f]
  413797:	add    ebp,0xffffffb5
  41379a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41379b:	test   ch,0xd6
  41379e:	lods   eax,DWORD PTR ds:[esi]
  41379f:	dec    ebx
  4137a0:	cs aad 0x2f
  4137a3:	and    al,0x8
  4137a5:	mov    BYTE PTR [edi+0x49],ah
  4137a8:	or     esp,edi
  4137aa:	push   edi
  4137ab:	out    0x42,al
  4137ad:	dec    eax
  4137ae:	stc    
  4137af:	arpl   WORD PTR [ebx+ebp*8+0x8e39982],sp
  4137b6:	in     al,0x7f
  4137b8:	sbb    eax,0x24df1c49
  4137bd:	js     0x41379f
  4137bf:	xor    ch,ch
  4137c1:	dec    ebp
  4137c2:	add    BYTE PTR [edx-0x3],dh
  4137c5:	(bad)  
  4137c6:	jnp    0x413845
  4137c8:	lods   al,BYTE PTR ds:[esi]
  4137c9:	or     al,0x44
  4137cb:	inc    eax
  4137cc:	int    0xd2
  4137ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137cf:	xor    dl,al
  4137d1:	les    ecx,FWORD PTR [ebx]
  4137d3:	sbb    BYTE PTR [ecx-0x1f],0x75
  4137d7:	jp     0x41375d
  4137d9:	enter  0x88b2,0x5b
  4137dd:	mov    dh,BYTE PTR [ebx-0x64]
  4137e0:	push   esi
  4137e1:	les    edi,FWORD PTR [esi-0x39049a2]
  4137e7:	add    al,0x31
  4137e9:	aam    0x3
  4137eb:	sahf   
  4137ec:	jae    0x4137c3
  4137ee:	lods   al,BYTE PTR ds:[esi]
  4137ef:	pop    es
  4137f0:	push   edx
  4137f1:	add    ah,dh
  4137f3:	add    ebx,DWORD PTR [edx]
  4137f5:	sar    BYTE PTR [ebx+0x3d13b2b4],1
  4137fb:	push   ss
  4137fc:	adc    eax,edi
  4137fe:	and    eax,DWORD PTR [esi-0x2b]
  413801:	dec    esi
  413802:	in     al,0x9
  413804:	push   ds
  413805:	push   0xd7c9c6ff
  41380a:	test   bl,cl
  41380c:	add    eax,ebp
  41380e:	mov    esi,0xdb8f983c
  413813:	mov    al,0xae
  413815:	aad    0x74
  413817:	and    ah,0x8a
  41381a:	(bad)  [ecx+0x23]
  41381d:	dec    ebx
  41381e:	int    0x72
  413820:	jp     0x41386e
  413822:	cmc    
  413823:	mov    ch,0x8e
  413825:	jnp    0x413844
  413827:	sar    DWORD PTR [eax+eiz*2-0x28b5b71d],cl
  41382e:	mov    ebx,0x4fb1ce0e
  413833:	aad    0xe3
  413835:	daa    
  413836:	xlat   BYTE PTR ds:[ebx]
  413837:	enter  0xab31,0x64
  41383b:	ret    
  41383c:	aad    0x63
  41383e:	lds    esp,FWORD PTR [ebx-0x32]
  413841:	das    
  413842:	hlt    
  413843:	out    0x76,eax
  413845:	pushf  
  413846:	xor    bh,ch
  413848:	pushf  
  413849:	inc    edi
  41384a:	pushf  
  41384b:	add    BYTE PTR [eax-0x45],bl
  41384e:	xor    eax,0x2e46b8cd
  413853:	or     BYTE PTR [esp+edi*8+0x72a6566],al
  41385a:	pop    es
  41385b:	jbe    0x413830
  41385d:	jle    0x41381b
  41385f:	jmp    0x946d6e3b
  413864:	or     edx,DWORD PTR [ecx+0x134074f2]
  41386a:	mov    esp,edi
  41386c:	mov    ebx,0x107bd111
  413871:	fwait
  413872:	mov    edi,0x82e3640a
  413877:	mov    bh,0x30
  413879:	mov    si,0x5730
  41387d:	add    DWORD PTR [esi+esi*8+0x3417f238],eax
  413884:	pusha  
  413885:	in     eax,0xda
  413887:	fwait
  413888:	ss pushf 
  41388a:	stos   DWORD PTR es:[edi],eax
  41388b:	ror    BYTE PTR [esi],0x95
  41388e:	push   ecx
  41388f:	dec    ebp
  413890:	test   eax,0x1b06931a
  413895:	add    eax,0xc8438bc8
  41389a:	cwde   
  41389b:	shr    DWORD PTR [ebx],1
  41389d:	test   DWORD PTR [edx+0x76],ebx
  4138a0:	add    al,0xf1
  4138a2:	dec    ebp
  4138a3:	imul   edx,DWORD PTR [ebx-0x7f],0x36
  4138a7:	js     0x413878
  4138a9:	out    dx,al
  4138aa:	mov    bl,0x12
  4138ac:	fisttp WORD PTR [ebx+ecx*8-0x7dd13a5c]
  4138b3:	mov    esp,0xc46951ab
  4138b8:	pop    esi
  4138b9:	jnp    0x413865
  4138bb:	jae    0x413883
  4138bd:	call   0x57a3:0x732e1158
  4138c4:	adc    edi,edx
  4138c6:	inc    ebp
  4138c7:	dec    ecx
  4138c8:	or     al,0xb0
  4138ca:	add    DWORD PTR [ebp+ebx*1+0x47],0x78
  4138cf:	fs pop ecx
  4138d1:	sub    eax,0x6d5c89b9
  4138d6:	mov    eax,ds:0xfc433893
  4138db:	push   ss
  4138dc:	jmp    0x47ad:0x49a13914
  4138e3:	shl    DWORD PTR [ebp+0x6f],0x47
  4138e7:	or     al,0x7f
  4138e9:	jle    0x413933
  4138eb:	mov    BYTE PTR [eax],bh
  4138ed:	and    BYTE PTR [ebx-0x2eac8120],dl
  4138f3:	mov    ebx,0x498908c4
  4138f8:	and    ah,dh
  4138fa:	lods   al,BYTE PTR ds:[esi]
  4138fb:	call   0x8592bd4a
  413900:	test   BYTE PTR [eax],ah
  413902:	mul    BYTE PTR [ebp+0x38]
  413905:	sub    ah,BYTE PTR [esi+edi*2]
  413908:	sti    
  413909:	dec    edi
  41390a:	call   0x531b:0xde79fd02
  413911:	gs jnp 0x41393c
  413914:	nop
  413915:	jno    0x41395b
  413917:	stc    
  413918:	loopne 0x4138f0
  41391a:	mov    ds:0x7e26c6e1,eax
  41391f:	das    
  413920:	into   
  413921:	fwait
  413922:	jecxz  0x4138fd
  413924:	jno    0x413978
  413926:	push   ebp
  413927:	je     0x413941
  413929:	mov    esp,0xebfad65
  41392e:	adc    DWORD PTR gs:[ecx],ecx
  413931:	push   cs
  413932:	mov    DWORD PTR [ebp*8-0x122e87d5],ebx
  413939:	jg     0x413916
  41393b:	jo     0x413915
  41393d:	mov    es,WORD PTR [eax-0x74]
  413940:	mov    ebx,0x82032a31
  413945:	loop   0x41397c
  413947:	int    0xdd
  413949:	adc    BYTE PTR [eax+0x4a9dd2cd],ah
  41394f:	sbb    DWORD PTR [esi+0x4],ebp
  413952:	xor    BYTE PTR [ebx],dh
  413954:	ret    0x85e6
  413957:	xor    DWORD PTR gs:[edi+eiz*1+0x18],ebx
  41395c:	retf   0x6ac1
  41395f:	sbb    eax,0x1fdec20d
  413964:	and    dl,BYTE PTR [edi-0x6f811cf9]
  41396a:	mov    ecx,0x76363eaa
  41396f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413970:	cmp    bl,BYTE PTR [edi+edx*2-0x56]
  413974:	lea    edx,[edi]
  413976:	fidivr DWORD PTR [esi+esi*2-0x72]
  41397a:	fnsave [ebp-0x77e44d61]
  413980:	outs   dx,DWORD PTR ds:[esi]
  413981:	xlat   BYTE PTR ds:[ebx]
  413982:	mov    bl,0x54
  413984:	xchg   ecx,eax
  413985:	les    ebp,FWORD PTR [edi]
  413987:	out    0x2b,eax
  413989:	mov    DWORD PTR [ecx+0x51060ec8],eax
  41398f:	inc    edi
  413990:	out    dx,eax
  413991:	jae    0x41397f
  413993:	mov    esp,0x14f03232
  413998:	push   edi
  413999:	fcom   DWORD PTR [ebx]
  41399b:	ins    DWORD PTR es:[edi],dx
  41399c:	dec    ebp
  41399d:	xor    al,0x81
  41399f:	cs and al,0xa6
  4139a2:	mov    BYTE PTR [ebp+0x36],ah
  4139a5:	jge    0x413991
  4139a7:	xchg   edx,eax
  4139a8:	stos   BYTE PTR es:[edi],al
  4139a9:	call   0xff3b16de
  4139ae:	int    0xa
  4139b0:	js     0x4139c9
  4139b2:	jbe    0x4139fe
  4139b4:	pop    ebx
  4139b5:	xor    DWORD PTR [ecx+esi*8+0x4e3a8489],eax
  4139bc:	or     al,0x16
  4139be:	ja     0x4139e8
  4139c0:	mov    ebx,0x7319a7f1
  4139c5:	fwait
  4139c6:	shl    DWORD PTR [ecx-0x62],1
  4139c9:	stos   DWORD PTR es:[edi],eax
  4139ca:	iret   
  4139cb:	push   ss
  4139cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139cd:	xor    al,0xd0
  4139cf:	xchg   ecx,eax
  4139d0:	icebp  
  4139d1:	retf   0x352f
  4139d4:	pop    esp
  4139d5:	mov    edx,0x86ec9090
  4139da:	cmp    al,0xc4
  4139dc:	jnp    0x413a23
  4139de:	dec    ebp
  4139df:	cli    
  4139e0:	xchg   DWORD PTR [esi-0x54],edx
  4139e3:	cmp    al,0x5c
  4139e5:	push   edi
  4139e6:	sub    al,bl
  4139e8:	fstp   TBYTE PTR [ebp+0x7033706]
  4139ee:	arpl   WORD PTR [esi],bx
  4139f0:	ret    0x8e24
  4139f3:	mov    bl,0x80
  4139f5:	cli    
  4139f6:	pop    ecx
  4139f7:	mov    cl,0x4c
  4139f9:	pop    ds
  4139fa:	(bad)  
  4139fb:	test   eax,0x6da61961
  413a00:	push   esi
  413a01:	sti    
  413a02:	mov    edi,0x207089a3
  413a07:	cs in  eax,dx
  413a09:	imul   cl
  413a0b:	loope  0x413a5b
  413a0d:	cdq    
  413a0e:	add    ebp,esi
  413a10:	push   edx
  413a11:	mov    ebx,0x5dad5de0
  413a16:	jb     0x413a19
  413a18:	inc    esi
  413a19:	inc    edi
  413a1a:	sbb    eax,0x734a106b
  413a1f:	push   ecx
  413a20:	cs pop eax
  413a22:	out    0xdf,al
  413a24:	out    0xb7,al
  413a26:	stos   DWORD PTR es:[edi],eax
  413a27:	retf   0x8a0c
  413a2a:	sub    eax,0xfb3d4510
  413a2f:	arpl   WORD PTR [edx+0x25d48880],bx
  413a35:	mov    cl,0x62
  413a37:	int    0xcd
  413a39:	mov    al,ds:0xa429763d
  413a3e:	jnp    0x4139da
  413a40:	push   cs
  413a41:	mov    al,ds:0x44e02c6e
  413a46:	(bad)  
  413a47:	test   ebp,0xa0e7b8c2
  413a4d:	and    ah,BYTE PTR [esi-0x3a]
  413a50:	(bad)  
  413a51:	lock imul esp,DWORD PTR [eax],0x67974bc6
  413a58:	and    eax,0x9db1d711
  413a5d:	clc    
  413a5e:	inc    edi
  413a5f:	cmp    ebp,DWORD PTR [eax-0x29ee0300]
  413a65:	adc    ebx,eax
  413a67:	ins    DWORD PTR es:[edi],dx
  413a68:	jnp    0x413ad2
  413a6a:	add    dh,ch
  413a6c:	jmp    0x97eca9ba
  413a71:	repnz lea eax,[ebp*1+0x3bf74cf4]
  413a79:	(bad)  
  413a7a:	xor    al,0x0
  413a7c:	or     BYTE PTR [ecx-0x6f],dl
  413a7f:	sub    BYTE PTR [edx],dh
  413a81:	push   0x25
  413a83:	daa    
  413a84:	aas    
  413a85:	sub    al,0x23
  413a87:	pop    ecx
  413a88:	sub    eax,DWORD PTR [ebx+0x4f689b2a]
  413a8e:	mov    ch,0x15
  413a90:	fist   WORD PTR fs:[edi+0x4b]
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	mov    esi,DWORD PTR [esi+0x3eb1abd0]
  413a9b:	adc    BYTE PTR [esi+0x65a9ed0d],0x9f
  413aa2:	daa    
  413aa3:	xlat   BYTE PTR ds:[ebx]
  413aa4:	cwde   
  413aa5:	pushw  ds
  413aa7:	scas   eax,DWORD PTR es:[edi]
  413aa8:	lods   eax,DWORD PTR ds:[esi]
  413aa9:	outs   dx,DWORD PTR ds:[esi]
  413aaa:	xchg   ebx,eax
  413aab:	rol    BYTE PTR [ebp+eiz*1-0x5c],1
  413aaf:	icebp  
  413ab0:	xor    eax,0xd0ee2480
  413ab5:	test   al,0x5c
  413ab7:	or     BYTE PTR [edi-0x28f2ef1f],dh
  413abd:	mov    bh,0xf6
  413abf:	mov    dl,0x1c
  413ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac3:	xor    al,0x94
  413ac5:	xor    eax,0x1dedc810
  413aca:	(bad)  
  413acb:	hlt    
  413acc:	dec    eax
  413acd:	or     eax,0x81f39974
  413ad2:	xor    cl,BYTE PTR ds:0xe2c6deb6
  413ad8:	jl     0x413b31
  413ada:	mov    esi,0x6468e9f1
  413adf:	jnp    0x413b56
  413ae1:	inc    edi
  413ae2:	mov    edi,0xc9ec4cad
  413ae7:	call   0xf3fbe6d9
  413aec:	and    ax,0x8dda
  413af0:	dec    ecx
  413af1:	or     ch,BYTE PTR [ecx-0x71425b7a]
  413af7:	pushf  
  413af8:	aaa    
  413af9:	clc    
  413afa:	aas    
  413afb:	or     BYTE PTR [ecx],dl
  413afd:	(bad)  
  413afe:	fsubr  QWORD PTR [ebp-0x6ea485a0]
  413b04:	aaa    
  413b05:	out    0xa3,al
  413b07:	jne    0x413b01
  413b09:	cmc    
  413b0a:	in     eax,dx
  413b0b:	cmc    
  413b0c:	inc    ebp
  413b0d:	leave  
  413b0e:	enter  0x5647,0x61
  413b12:	imul   esi,edx,0xffffffdd
  413b15:	sbb    ebp,DWORD PTR [edi+0x6b]
  413b18:	mov    edi,0x1babc8b7
  413b1d:	or     cl,cl
  413b1f:	out    0x81,al
  413b21:	xchg   ebx,eax
  413b22:	mul    esi
  413b24:	jecxz  0x413b1c
  413b26:	out    dx,eax
  413b27:	add    al,0x46
  413b29:	repz cwde 
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    DWORD PTR [esi-0x10],0x2b3cdf40
  413b33:	xor    BYTE PTR [edi+esi*1+0x7a9d27cd],ch
  413b3a:	dec    edx
  413b3b:	push   es
  413b3c:	jbe    0x413bb4
  413b3e:	inc    edi
  413b3f:	xchg   ebx,eax
  413b40:	push   eax
  413b41:	mov    DWORD PTR [eax+0x1839e002],ebx
  413b47:	pop    DWORD PTR [edi]
  413b49:	xchg   ebp,eax
  413b4a:	jp     0x413b8b
  413b4c:	or     esp,DWORD PTR [edi]
  413b4e:	call   0xe39093f3
  413b53:	rcl    BYTE PTR [edx+0x3d889f02],0x5e
  413b5a:	dec    edx
  413b5b:	ins    BYTE PTR es:[edi],dx
  413b5c:	sbb    al,0xb6
  413b5e:	cmp    dl,ch
  413b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b61:	(bad)  
  413b62:	mov    ebp,0xa69339bb
  413b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b68:	loope  0x413b06
  413b6a:	mov    ecx,0xec6a52c7
  413b6f:	mov    ebp,0x4506d6b5
  413b74:	mov    DWORD PTR [ebp+0x2a5a392],edi
  413b7a:	ds out 0x25,eax
  413b7d:	push   ebx
  413b7e:	mov    ebp,0x9444b5bd
  413b83:	add    bh,0x5b
  413b86:	(bad)  
  413b87:	iret   
  413b88:	rcl    bh,cl
  413b8a:	(bad)  
  413b8b:	mov    bl,BYTE PTR [ebp+0x68985d82]
  413b91:	dec    edx
  413b92:	(bad)  
  413b93:	mov    dh,cl
  413b95:	or     DWORD PTR [ebp-0x52],esp
  413b98:	xor    edx,ecx
  413b9a:	in     al,dx
  413b9b:	repz ja 0x413bde
  413b9e:	(bad)  
  413b9f:	mov    WORD PTR [eax-0x4c],es
  413ba2:	inc    ecx
  413ba3:	pusha  
  413ba4:	fistp  DWORD PTR [esp+eiz*4]
  413ba7:	cli    
  413ba8:	sub    al,BYTE PTR [ebx-0x19]
  413bab:	in     eax,dx
  413bac:	pop    ebp
  413bad:	mov    bh,dl
  413baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb1:	dec    ebp
  413bb2:	mov    DWORD PTR [eax],edx
  413bb4:	rcl    BYTE PTR [edx-0x612c904e],cl
  413bba:	lea    esi,fs:[eax]
  413bbd:	dec    esp
  413bbe:	inc    ecx
  413bbf:	xor    eax,0xf8b486e0
  413bc4:	fst    DWORD PTR [esi-0x71]
  413bc7:	mov    ds:0xbe825d80,eax
  413bcc:	cli    
  413bcd:	popa   
  413bce:	mov    edi,0xa0e39951
  413bd3:	push   ebp
  413bd4:	leave  
  413bd5:	cmp    BYTE PTR [ebx],bl
  413bd7:	and    eax,0xfb623429
  413bdc:	cdq    
  413bdd:	fist   DWORD PTR [esi-0x5c0a96cb]
  413be3:	(bad)  
  413be4:	repnz hlt 
  413be6:	push   0xbe71a334
  413beb:	cmp    al,0xf5
  413bed:	cmp    DWORD PTR [ecx+0x22],esi
  413bf0:	inc    edx
  413bf1:	rcl    DWORD PTR [edi+0x49dd6b68],cl
  413bf7:	nop
  413bf8:	xor    BYTE PTR fs:[edi+0x6cf0fa17],bl
  413bff:	jl     0x413ba2
  413c01:	jecxz  0x413c81
  413c03:	push   cs
  413c04:	jl     0x413c10
  413c06:	sbb    dh,BYTE PTR [edx+ecx*1+0x4]
  413c0a:	aad    0x23
  413c0c:	mov    cl,0x5b
  413c0e:	mov    al,0x7
  413c10:	jo     0x413bc9
  413c12:	call   0x1643a3c1
  413c17:	xor    al,0x31
  413c19:	scas   al,BYTE PTR es:[edi]
  413c1a:	adc    edi,DWORD PTR [edi-0x1fbaab72]
  413c20:	jno    0x413c04
  413c22:	stos   BYTE PTR es:[edi],al
  413c23:	or     al,0xfe
  413c25:	ins    DWORD PTR es:[edi],dx
  413c26:	fmul   QWORD PTR [ecx]
  413c28:	push   esi
  413c29:	push   esp
  413c2a:	or     DWORD PTR [ecx],0x8becb8e9
  413c30:	add    eax,0xdf63b034
  413c35:	jge    0x413c8a
  413c37:	push   ecx
  413c38:	je     0x413c1a
  413c3a:	or     al,0xfb
  413c3c:	jl     0x413be7
  413c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c3f:	mov    dh,0x56
  413c41:	sahf   
  413c42:	xor    al,0x16
  413c44:	xchg   ebx,eax
  413c45:	popa   
  413c46:	mov    dl,al
  413c48:	pop    esp
  413c49:	fistp  DWORD PTR [esi+0x7]
  413c4c:	call   0xe18b:0x5e5d0f
  413c53:	icebp  
  413c54:	inc    ebx
  413c55:	and    edi,esi
  413c57:	adc    esp,ebx
  413c59:	and    edx,esi
  413c5b:	sahf   
  413c5c:	adc    esp,DWORD PTR ds:0x9002a0ac
  413c62:	cmovne esi,DWORD PTR [ecx+0x5f]
  413c66:	push   ss
  413c67:	jbe    0x413c37
  413c69:	aaa    
  413c6a:	sbb    edi,DWORD PTR ds:0x8808b385
  413c70:	mov    DWORD PTR ds:0x51324db9,ebx
  413c76:	mov    ebx,0x4f6dffc3
  413c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c7c:	sbb    DWORD PTR [eax],edx
  413c7e:	repz jmp 0x8800bff4
  413c84:	mov    ds:0xd2894993,al
  413c89:	xchg   esi,eax
  413c8a:	sub    DWORD PTR [edx],eax
  413c8c:	inc    ebp
  413c8d:	stos   DWORD PTR es:[edi],eax
  413c8e:	add    esi,esi
  413c90:	xchg   ebx,eax
  413c91:	dec    edi
  413c92:	xor    eax,0x216f9227
  413c97:	test   al,0x2f
  413c99:	xor    BYTE PTR [ebx-0x6fee9956],ah
  413c9f:	inc    esp
  413ca0:	loope  0x413cc6
  413ca2:	and    BYTE PTR [eax*8+0x1494e98b],0x8
  413caa:	push   0x9760bff9
  413caf:	inc    esp
  413cb0:	sub    BYTE PTR [ebx-0x1d],dh
  413cb3:	xor    DWORD PTR [edi],ebp
  413cb5:	sub    BYTE PTR [ecx],ch
  413cb7:	je     0x413ca6
  413cb9:	mov    ebx,0x3a529760
  413cbe:	pslld  mm7,mm5
  413cc1:	fidivr DWORD PTR [ebx-0xc9f521a]
  413cc7:	push   0x83f7b4cc
  413ccc:	jmp    0x413d12
  413cce:	mov    DWORD PTR [eax],ebx
  413cd0:	retf   0xdc10
  413cd3:	std    
  413cd4:	in     eax,0xf7
  413cd6:	lds    edx,FWORD PTR [ebp+0x53f04606]
  413cdc:	jl     0x413ce4
  413cde:	dec    esi
  413cdf:	ins    BYTE PTR es:[edi],dx
  413ce0:	pop    esi
  413ce1:	pushf  
  413ce2:	loopne 0x413c90
  413ce4:	push   ss
  413ce5:	adc    BYTE PTR [edi+0x56],bl
  413ce8:	mov    edx,esp
  413cea:	fsub   QWORD PTR [edi]
  413cec:	das    
  413ced:	es pop ds
  413cef:	scas   eax,DWORD PTR es:[edi]
  413cf0:	(bad)  
  413cf1:	(bad)  
  413cf2:	adc    al,0xe6
  413cf4:	nop
  413cf5:	fwait
  413cf6:	dec    ebp
  413cf7:	push   edx
  413cf8:	sbb    eax,0xce9a9e41
  413cfd:	pop    ss
  413cfe:	shr    DWORD PTR [edx],1
  413d00:	(bad)  
  413d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d02:	test   ebp,edx
  413d04:	and    al,0x8e
  413d06:	dec    ecx
  413d07:	push   edx
  413d08:	xchg   edi,eax
  413d09:	inc    edi
  413d0a:	outs   dx,BYTE PTR ds:[esi]
  413d0b:	ss mov ebx,0xd9eba57f
  413d11:	(bad)  
  413d12:	mov    edi,0xe1b7b43f
  413d17:	or     al,0x27
  413d19:	xchg   ecx,eax
  413d1a:	dec    esi
  413d1b:	pusha  
  413d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d1d:	cmp    cl,BYTE PTR [edx+0x5]
  413d20:	repz pop ds
  413d22:	pop    edx
  413d23:	(bad)  
  413d24:	cld    
  413d25:	pop    es
  413d26:	mov    bh,0xe9
  413d28:	in     eax,dx
  413d29:	sub    eax,0xaf60cadd
  413d2e:	adc    esp,ebx
  413d30:	aam    0x5b
  413d32:	or     al,0xd1
  413d34:	sahf   
  413d35:	cwde   
  413d36:	call   0x9d00:0xce9980a1
  413d3d:	ror    BYTE PTR [edi],1
  413d3f:	add    eax,0xd3843bff
  413d44:	loopne 0x413cd3
  413d46:	and    ebp,0x79
  413d49:	sbb    ebp,DWORD PTR [ecx-0x28]
  413d4c:	fsub   DWORD PTR [esi+0x8]
  413d4f:	sbb    DWORD PTR [edi+0x3a],0xffffff98
  413d53:	ins    DWORD PTR es:[edi],dx
  413d54:	pop    esi
  413d55:	jb     0x413dce
  413d57:	sub    bh,BYTE PTR ds:0xb977b94d
  413d5d:	mov    WORD PTR [edi+ebx*4+0x1a13acf0],es
  413d64:	and    DWORD PTR [eax+0x3d],edi
  413d67:	mov    eax,edi
  413d69:	add    DWORD PTR [edi],edx
  413d6b:	cmp    eax,0x6ee1f70c
  413d70:	dec    edi
  413d71:	mov    ds:0xa80a5a38,al
  413d76:	lahf   
  413d77:	je     0x413d1f
  413d79:	retf   0x19b2
  413d7c:	add    ah,dl
  413d7e:	dec    esp
  413d7f:	jb     0x413d7a
  413d81:	push   edi
  413d82:	pop    esi
  413d83:	pop    ebx
  413d84:	adc    al,BYTE PTR [eax]
  413d86:	stos   DWORD PTR es:[edi],eax
  413d87:	in     al,dx
  413d88:	mov    bh,0x90
  413d8a:	sbb    bl,ch
  413d8c:	sar    BYTE PTR [esi+0x4d],0x73
  413d90:	xchg   ebx,eax
  413d92:	push   0x7584e0ed
  413d97:	inc    esp
  413d98:	std    
  413d99:	mov    cl,0xba
  413d9b:	and    ebp,ebp
  413d9d:	into   
  413d9e:	adc    al,0x57
  413da0:	mov    ah,BYTE PTR [ebx]
  413da2:	jle    0x413dab
  413da4:	jo     0x413d94
  413da6:	or     DWORD PTR [edi+esi*4-0x4c7daccc],esp
  413dad:	inc    ebp
  413dae:	inc    BYTE PTR [edx-0x13]
  413db1:	dec    ecx
  413db2:	rcl    dl,cl
  413db4:	add    cl,BYTE PTR [eax-0x4d9f7ef1]
  413dba:	xor    ecx,DWORD PTR [ebx]
  413dbc:	inc    ebp
  413dbd:	loope  0x413db4
  413dbf:	call   FWORD PTR [ecx+0x5d1cb4c0]
  413dc5:	fistp  DWORD PTR [esi+0x9bc9c04]
  413dcb:	dec    ebx
  413dcc:	pop    ecx
  413dcd:	sti    
  413dce:	mov    edx,DWORD PTR [edi+0x4a3cd767]
  413dd4:	in     al,dx
  413dd5:	push   eax
  413dd6:	inc    esi
  413dd7:	retf   0x4ecb
  413dda:	mov    eax,0x80470856
  413ddf:	(bad)  
  413de0:	test   DWORD PTR [edx],0xbe05630e
  413de6:	xchg   edi,eax
  413de7:	fsubr  st(1),st
  413de9:	sbb    ebp,DWORD PTR [ecx+0x54]
  413dec:	mov    dh,0x16
  413dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413def:	aas    
  413df0:	mov    ah,0x8b
  413df2:	adc    edi,ecx
  413df4:	stc    
  413df5:	jne    0x413d86
  413df7:	jne    0x413d8f
  413df9:	(bad)  
  413dfa:	rcl    BYTE PTR ds:0x39ccff6,1
  413e00:	add    DWORD PTR [ecx],edi
  413e02:	ss loope 0x413dbd
  413e05:	repnz stos BYTE PTR es:[edi],al
  413e07:	sahf   
  413e08:	xor    edx,esp
  413e0a:	call   0x65e985e2
  413e0f:	xchg   esi,eax
  413e10:	ds pop esp
  413e12:	fiadd  DWORD PTR [eax+0x0]
  413e15:	lea    edi,[edx+0x4ae2119]
  413e1b:	cdq    
  413e1c:	cmp    al,0x64
  413e1e:	in     al,0x97
  413e20:	and    BYTE PTR [edx+ebx*8-0x42],cl
  413e24:	scas   eax,DWORD PTR es:[edi]
  413e25:	cmc    
  413e26:	ss (bad) 
  413e28:	in     al,0x7b
  413e2a:	mov    ebx,DWORD PTR fs:[eax-0x56]
  413e2e:	and    BYTE PTR [esp+ecx*1+0x62],dl
  413e32:	pop    ebx
  413e33:	push   edx
  413e34:	(bad)  [edx-0x38044075]
  413e3a:	stc    
  413e3b:	push   esi
  413e3c:	and    ebp,esi
  413e3e:	inc    ebx
  413e3f:	stc    
  413e40:	or     BYTE PTR [ebx-0x48],0x97
  413e44:	sub    DWORD PTR ds:0x62d65a93,esi
  413e4a:	jmp    0x413e89
  413e4c:	add    ebx,DWORD PTR [ebp+0x44]
  413e4f:	jno    0x413e26
  413e51:	mov    edi,0xb0a1a531
  413e56:	push   edx
  413e57:	pop    edi
  413e58:	adc    al,0xa
  413e5a:	pop    eax
  413e5b:	fst    QWORD PTR [eax+0x8]
  413e5e:	xchg   ebp,eax
  413e5f:	mov    DWORD PTR [esi+0x6b],ebp
  413e62:	inc    eax
  413e63:	xlat   BYTE PTR ds:[ebx]
  413e64:	iret   
  413e65:	pop    esi
  413e66:	hlt    
  413e67:	cmc    
  413e68:	xchg   esp,eax
  413e69:	sub    al,BYTE PTR [ebx-0x59]
  413e6c:	(bad)  
  413e6d:	repz mov ecx,es
  413e70:	into   
  413e71:	imul   esi,DWORD PTR [esi+0x35],0xffffffbf
  413e75:	xchg   dh,cl
  413e77:	mov    dl,BYTE PTR [ecx+edi*4+0x6d23e7b2]
  413e7e:	or     eax,DWORD PTR [ebx+0x13ec5aa3]
  413e84:	or     eax,0x5c0b9bc7
  413e89:	cmp    ebp,ebx
  413e8b:	or     DWORD PTR [ebx],ebp
  413e8d:	(bad)  
  413e8e:	daa    
  413e8f:	repz jae 0x413e96
  413e92:	into   
  413e93:	pop    edx
  413e94:	or     ah,BYTE PTR [esi-0x94c720a]
  413e9a:	shl    DWORD PTR [eax-0x3a],0xe7
  413e9e:	cmp    DWORD PTR [ebx+0x483f73cc],ebx
  413ea4:	mov    bl,0x3a
  413ea6:	or     bh,dl
  413ea8:	mov    esi,0x409acdd8
  413ead:	sbb    al,0xe
  413eaf:	jne    0x413ee9
  413eb1:	fst    QWORD PTR [edx+0x33]
  413eb4:	pushf  
  413eb5:	ins    BYTE PTR es:[edi],dx
  413eb6:	adc    dh,bl
  413eb8:	int3   
  413eb9:	xchg   ebx,eax
  413eba:	mov    eax,0xeb6954d4
  413ebf:	arpl   WORD PTR [edi-0x4f8bebbf],dx
  413ec5:	mov    edi,0x1f2ab06a
  413eca:	inc    edi
  413ecb:	pop    ebx
  413ecc:	scas   al,BYTE PTR es:[edi]
  413ecd:	mov    WORD PTR [si+0x5f82],ss
  413ed2:	add    eax,0x140c17ac
  413ed7:	push   eax
  413ed8:	pop    edi
  413ed9:	(bad)  
  413eda:	jmp    0x413f31
  413edc:	out    dx,eax
  413edd:	sbb    DWORD PTR [ebp+0x4a],edx
  413ee0:	adc    BYTE PTR [ecx+0x31],ch
  413ee3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee5:	out    dx,al
  413ee6:	inc    ebp
  413ee7:	push   ecx
  413ee8:	pop    edx
  413ee9:	pop    ebx
  413eea:	inc    esp
  413eeb:	jnp    0x413ebc
  413eed:	jbe    0x413f20
  413eef:	popa   
  413ef0:	ins    BYTE PTR es:[edi],dx
  413ef1:	imul   edx,ebx,0xffffffc2
  413ef4:	xchg   ecx,eax
  413ef5:	and    DWORD PTR [ebx],0xb7498818
  413efb:	nop
  413efc:	pop    es
  413efd:	xor    al,0xd1
  413eff:	(bad)  
  413f00:	xor    bh,ch
  413f02:	cwde   
  413f03:	into   
  413f04:	popa   
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	movntq QWORD PTR [edx],mm3
  413f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f0a:	mov    esi,0x50c00a33
  413f0f:	inc    esi
  413f10:	hlt    
  413f11:	adc    dl,dh
  413f13:	push   ebx
  413f14:	scas   eax,DWORD PTR es:[edi]
  413f15:	dec    ebx
  413f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f17:	or     BYTE PTR [edx+0x23],al
  413f1a:	dec    esp
  413f1b:	mov    eax,0x6432c31d
  413f20:	push   esp
  413f21:	or     BYTE PTR [ebp-0x49],cl
  413f24:	mov    bh,0xef
  413f26:	mov    ds,WORD PTR [esi-0x72]
  413f29:	mov    BYTE PTR [edx],al
  413f2b:	jmp    0x7aa3875b
  413f30:	add    ecx,DWORD PTR [edx+0x55]
  413f33:	xor    eax,0x17722d2f
  413f38:	bound  edx,QWORD PTR [eax-0x4453cffe]
  413f3e:	dec    edi
  413f3f:	mov    ecx,0xc2b51bdf
  413f44:	sbb    DWORD PTR [ebp+0x48613142],ebp
  413f4a:	push   cs
  413f4b:	lods   al,BYTE PTR ds:[esi]
  413f4c:	xor    DWORD PTR [ebp-0x67],edi
  413f4f:	fild   QWORD PTR [esi]
  413f51:	mov    DWORD PTR cs:0xc717682e,edi
  413f58:	xlat   BYTE PTR ds:[ebx]
  413f59:	xchg   edx,eax
  413f5a:	in     al,dx
  413f5b:	cmp    bl,ch
  413f5d:	pop    ss
  413f5e:	pop    esi
  413f5f:	jecxz  0x413f18
  413f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f62:	popa   
  413f63:	add    DWORD PTR [eax+0x675c4f7c],esi
  413f69:	test   ebp,esi
  413f6b:	cwde   
  413f6c:	(bad)
  413f70:	in     eax,0x75
  413f72:	or     DWORD PTR [edx-0x76],0x54
  413f76:	push   esp
  413f77:	leave  
  413f78:	push   edi
  413f79:	add    BYTE PTR [esp+ebp*2-0x5e],bh
  413f7d:	mov    WORD PTR [ebp-0x2e],ss
  413f80:	outs   dx,BYTE PTR ds:[esi]
  413f81:	adc    BYTE PTR [esi-0x12],bl
  413f84:	sbb    al,0x64
  413f86:	mov    eax,ds:0x86cfb987
  413f8b:	repnz mov dh,0xef
  413f8e:	mov    edi,DWORD PTR [ecx+0x5409f7a1]
  413f94:	arpl   WORD PTR [edx],sp
  413f96:	jae    0x413f22
  413f98:	test   BYTE PTR [ecx-0x295691de],bh
  413f9e:	(bad)  
  413f9f:	int    0xa2
  413fa1:	gs inc ebp
  413fa3:	mov    ch,dh
  413fa5:	dec    esi
  413fa6:	pop    esi
  413fa7:	ds pop ss
  413fa9:	xchg   ebp,eax
  413faa:	lea    ebp,[eax]
  413fac:	add    BYTE PTR [edi],dl
  413fae:	stos   BYTE PTR es:[edi],al
  413faf:	fld    st(4)
  413fb1:	mov    ch,0x8
  413fb3:	or     dh,al
  413fb5:	xchg   esi,eax
  413fb6:	and    al,0xa0
  413fb8:	jno    0x414013
  413fba:	out    0x33,eax
  413fbc:	in     eax,0x66
  413fbe:	or     BYTE PTR [ebp-0x36],dh
  413fc1:	jo     0x413fbc
  413fc3:	adc    al,0x12
  413fc5:	mov    edi,0x1bdcf7e
  413fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcb:	push   ebx
  413fcc:	mov    ebp,0x759ddbc8
  413fd1:	and    eax,0x1074d7c1
  413fd6:	idiv   BYTE PTR ds:0xddd92ee1
  413fdc:	sub    ebp,esp
  413fde:	mov    dh,0x86
  413fe0:	lea    ebp,ds:0x588ad4e6
  413fe6:	push   ecx
  413fe7:	dec    ebx
  413fe8:	pop    eax
  413fe9:	jmp    0x41403c
  413feb:	out    dx,eax
  413fec:	dec    esp
  413fed:	rcr    BYTE PTR [ebx+0x1fae552c],cl
  413ff3:	sub    al,0xa9
  413ff5:	mov    ebp,0xda03c9b
  413ffa:	je     0x414007
  413ffc:	les    eax,FWORD PTR [esi]
  413ffe:	or     esp,DWORD PTR [ebp+0x31]
  414001:	lock scas eax,DWORD PTR es:[edi]
  414003:	fistp  WORD PTR [edx+0x453ec01a]
  414009:	or     DWORD PTR [edi-0x75],ecx
  41400c:	jle    0x413ff2
  41400e:	lds    edi,FWORD PTR [esi]
  414010:	fmul   DWORD PTR [eax-0x53]
  414013:	hlt    
  414014:	xchg   DWORD PTR [eax],esi
  414016:	ins    DWORD PTR es:[edi],dx
  414017:	int    0x9b
  414019:	(bad)  
  41401a:	pusha  
  41401b:	pop    ebp
  41401c:	in     eax,dx
  41401d:	outs   dx,DWORD PTR ds:[esi]
  41401e:	add    al,0xb
  414020:	ds push ecx
  414022:	xor    ecx,ecx
  414024:	sub    BYTE PTR [ecx+0x5aadff36],bh
  41402a:	mov    eax,ds:0x52c20299
  41402f:	and    eax,0x7dcdda9b
  414034:	adc    DWORD PTR [ecx],0x3f4df6a1
  41403a:	pop    esi
  41403b:	(bad)  
  41403c:	in     al,0xc9
  41403e:	pop    ecx
  41403f:	enter  0x8878,0xbe
  414043:	lods   al,BYTE PTR ds:[esi]
  414044:	mov    edx,0x6d5bdf84
  414049:	sbb    BYTE PTR [eax-0x2b],dh
  41404c:	pop    esi
  41404d:	or     dh,BYTE PTR [ecx+0x75100785]
  414053:	mov    eax,DWORD PTR [eax-0x20ddebf2]
  414059:	enter  0x4762,0xd2
  41405d:	scas   al,BYTE PTR es:[edi]
  41405e:	mov    esp,0xe80c5357
  414063:	mov    edx,DWORD PTR [ebx+0x63]
  414066:	add    eax,0x928439d7
  41406b:	add    ebp,ebx
  41406d:	xchg   bl,bh
  41406f:	je     0x41407c
  414071:	fidivr DWORD PTR [ebp-0x29]
  414074:	aam    0xc2
  414076:	cli    
  414077:	mov    ds:0x27ead02d,eax
  41407c:	dec    edx
  41407d:	or     edi,DWORD PTR [ecx-0x4f3f5daf]
  414083:	frstor [eax-0x24126bd0]
  414089:	inc    esp
  41408a:	sbb    edi,edi
  41408c:	dec    esp
  41408d:	mov    edi,DWORD PTR [esi+0x30]
  414090:	popa   
  414091:	idiv   DWORD PTR [edx-0x289cfe0b]
  414097:	mov    ch,bl
  414099:	xchg   esi,eax
  41409a:	nop
  41409b:	dec    edx
  41409c:	mov    dl,BYTE PTR [ecx+0x2880ca83]
  4140a2:	mov    esp,0x6545ac22
  4140a7:	fwait
  4140a8:	rcl    DWORD PTR ds:0xbbc59dac,cl
  4140ae:	fdivr  DWORD PTR [eax+eiz*4]
  4140b1:	jp     0x414051
  4140b3:	mov    dh,0x2f
  4140b5:	jb     0x41412c
  4140b7:	neg    esp
  4140b9:	mov    ds:0x312a0c28,eax
  4140be:	cmp    edi,DWORD PTR [ecx]
  4140c0:	cmp    al,0x73
  4140c2:	mov    al,0x28
  4140c4:	adc    ebx,DWORD PTR [ecx+0x62]
  4140c7:	xor    ah,bh
  4140c9:	or     DWORD PTR [edx],esp
  4140cb:	inc    esi
  4140cc:	add    edx,esi
  4140ce:	add    eax,0xa2b87606
  4140d3:	xchg   BYTE PTR [ebx-0x4bbb8890],ch
  4140d9:	arpl   WORD PTR [eax],ax
  4140db:	push   ss
  4140dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140dd:	pop    ebp
  4140de:	sub    al,BYTE PTR [edx-0x4f706a94]
  4140e4:	sbb    dh,al
  4140e6:	push   0x698ad95a
  4140eb:	inc    edx
  4140ec:	mov    ebp,0xb1dd020a
  4140f1:	scas   eax,DWORD PTR es:[edi]
  4140f2:	mov    BYTE PTR [ecx+0x5b],ch
  4140f5:	push   eax
  4140f6:	mov    ebx,0x9997f187
  4140fb:	push   cs
  4140fc:	cmp    DWORD PTR [ecx-0x24],0x63b27db7
  414103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414104:	push   0xa5bbe4d4
  414109:	mov    ebx,0x86bbbfb5
  41410e:	pand   mm6,QWORD PTR [esi+0x137d4972]
  414115:	push   ecx
  414116:	outs   dx,DWORD PTR ds:[si]
  414118:	pop    es
  414119:	arpl   WORD PTR [eax+ebp*4-0xa5b8416],dx
  414120:	hlt    
  414121:	or     esp,eax
  414123:	ds sbb ah,al
  414126:	ret    
  414127:	test   al,0x39
  414129:	mov    ecx,0xeda9c361
  41412e:	mov    ah,0x75
  414130:	push   0xffffffdf
  414132:	or     eax,0xb76f266a
  414137:	adc    ebp,DWORD PTR [esi+0x55]
  41413a:	jns    0x4140da
  41413c:	sub    BYTE PTR [ecx-0x53f7da1b],0xd7
  414143:	lods   al,BYTE PTR ds:[esi]
  414144:	sbb    BYTE PTR [ecx],al
  414146:	inc    ebx
  414147:	mov    DWORD PTR [ebx],edi
  414149:	xor    al,0xd4
  41414b:	popf   
  41414c:	mov    ch,0xd1
  41414e:	cmp    bl,BYTE PTR [eax-0x9e4d5e2]
  414154:	mul    ecx
  414156:	das    
  414157:	cwde   
  414158:	dec    esi
  414159:	mov    dl,0xef
  41415b:	sbb    ecx,esp
  41415d:	xor    ch,ah
  41415f:	ret    0x4532
  414162:	fnstenv [edi+0xc]
  414165:	test   DWORD PTR [esp+esi*8],0x1d6f88dc
  41416c:	dec    esp
  41416d:	xchg   edx,eax
  41416e:	imul   ecx,DWORD PTR [eax-0x6a],0x47
  414172:	pop    ds
  414173:	pop    ebx
  414174:	sahf   
  414175:	out    dx,al
  414176:	ret    
  414177:	clc    
  414178:	sub    dl,BYTE PTR [ebp-0x45be781a]
  41417e:	xchg   ebx,eax
  41417f:	push   cs
  414180:	push   ss
  414181:	and    BYTE PTR [ebp+0xb],0x68
  414185:	and    bl,BYTE PTR [ebx-0x11]
  414188:	cmp    eax,esi
  41418a:	sbb    edx,DWORD PTR [edx-0x1f]
  41418d:	fbstp  TBYTE PTR [eax]
  41418f:	xor    edx,DWORD PTR [eax+edi*1+0x16]
  414193:	sbb    dl,ah
  414195:	scas   al,BYTE PTR es:[edi]
  414196:	daa    
  414197:	sub    eax,0x42f80510
  41419c:	push   cs
  41419d:	pop    eax
  41419e:	jmp    0x41418e
  4141a0:	test   al,0x18
  4141a2:	fwait
  4141a3:	out    0x1f,eax
  4141a5:	addr16 test eax,0x97b6a21d
  4141ab:	stos   BYTE PTR es:[edi],al
  4141ac:	(bad)  
  4141ad:	in     eax,0x6e
  4141af:	xor    DWORD PTR [ecx-0x40],esi
  4141b2:	adc    al,0x94
  4141b4:	div    BYTE PTR [esi+0x23]
  4141b7:	lea    edi,[esi-0x26]
  4141ba:	arpl   WORD PTR [esi],di
  4141bc:	sbb    eax,0xda328433
  4141c1:	nop
  4141c2:	lods   eax,DWORD PTR ds:[esi]
  4141c3:	rcr    DWORD PTR [ebx-0x26],1
  4141c6:	jnp    0x414196
  4141c8:	test   DWORD PTR [ebp+0x185cfa56],0xd560a4b4
  4141d2:	xchg   esi,eax
  4141d3:	xchg   BYTE PTR [esp+ecx*4],ah
  4141d6:	mov    edi,0xb7b8afe9
  4141db:	push   0xfffffff9
  4141dd:	push   ebp
  4141de:	int3   
  4141df:	aaa    
  4141e0:	pop    ebp
  4141e1:	ja     0x41424c
  4141e3:	add    BYTE PTR [ebx-0x65],cl
  4141e6:	fist   DWORD PTR [esi+0x16]
  4141e9:	ret    
  4141ea:	pop    edx
  4141eb:	shl    BYTE PTR [esi],0x67
  4141ee:	jmp    0xea7e659f
  4141f3:	cmp    bl,BYTE PTR [edi]
  4141f5:	leave  
  4141f6:	xor    eax,0x73fd6a55
  4141fb:	pop    ebp
  4141fc:	mov    ebx,0x510c0726
  414201:	pusha  
  414202:	jp     0x4141ad
  414204:	sbb    dl,al
  414206:	mov    ?,WORD PTR [ecx]
  414208:	call   0x7f361789
  41420d:	shr    DWORD PTR ds:0xe85211df,1
  414213:	push   edx
  414214:	mov    eax,ds:0xdf07c754
  414219:	adc    BYTE PTR [ebx-0x39],dl
  41421c:	lds    esp,FWORD PTR [ebp+0x5c]
  41421f:	push   esp
  414220:	sub    edx,DWORD PTR [esi+0x22]
  414223:	and    eax,0xe416f722
  414228:	xor    bh,dl
  41422a:	outs   dx,BYTE PTR ds:[esi]
  41422b:	test   BYTE PTR [edx+0x3b],0x59
  41422f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414230:	loopne 0x4141cb
  414232:	scas   al,BYTE PTR es:[edi]
  414233:	sbb    dh,BYTE PTR ds:0x684e6ceb
  414239:	std    
  41423a:	enter  0xfa7d,0x1f
  41423e:	or     ah,BYTE PTR [eax+edi*1+0x6c]
  414242:	fdivr  DWORD PTR [edx-0x50]
  414245:	bound  ebx,QWORD PTR [eax+ebp*2]
  414248:	jb     0x4142aa
  41424a:	dec    ebx
  41424b:	mov    ds:0xaae723c1,al
  414250:	push   0x63
  414252:	dec    edx
  414253:	repz pop ebx
  414255:	retf   0x7a2
  414258:	xor    DWORD PTR [esi+0x446e523c],edi
  41425e:	cli    
  41425f:	inc    ebp
  414260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414261:	ficomp DWORD PTR [ebx]
  414263:	jno    0x414274
  414265:	call   0xa58d0ba4
  41426a:	adc    BYTE PTR [ebx+esi*4+0x53444705],0x51
  414272:	xchg   ebp,eax
  414273:	mov    ds,WORD PTR [ebx-0x4]
  414276:	jbe    0x4142b3
  414278:	inc    ebp
  414279:	mov    ecx,0x2e94569f
  41427e:	mov    BYTE PTR [ebx],bl
  414280:	dec    edx
  414281:	(bad)  
  414282:	retf   
  414283:	movnti DWORD PTR [edi],ebp
  414286:	or     al,0x60
  414288:	pop    ecx
  414289:	add    BYTE PTR [ecx-0x3f953c11],bl
  41428f:	mov    ebp,0xb61c0736
  414294:	and    al,0xf5
  414296:	stos   DWORD PTR es:[edi],eax
  414297:	loopne 0x4142d2
  414299:	jb     0x414227
  41429b:	sbb    eax,0x1a1163d1
  4142a0:	sbb    DWORD PTR [esi+0x17ec5a9a],eax
  4142a6:	fsubr  QWORD PTR [ebx+0xf]
  4142a9:	loopne 0x41430f
  4142ab:	mov    cl,0xe6
  4142ad:	aas    
  4142ae:	jns    0x414282
  4142b0:	jp     0x41432d
  4142b2:	lods   eax,DWORD PTR ds:[esi]
  4142b3:	xor    ebx,DWORD PTR [ebx]
  4142b5:	(bad)  [edi]
  4142b7:	dec    ebp
  4142b8:	mov    bh,BYTE PTR [ebp+0x5b]
  4142bb:	cwde   
  4142bc:	jb     0x414254
  4142be:	inc    ebp
  4142bf:	mov    bl,0x30
  4142c1:	shr    cl,1
  4142c3:	mov    ah,0x8c
  4142c5:	push   ds
  4142c6:	dec    edi
  4142c7:	pop    ebp
  4142c8:	call   0x412b:0x3fa440e5
  4142cf:	shr    dh,1
  4142d1:	xor    edx,DWORD PTR [eax]
  4142d3:	test   eax,0x81d9d81e
  4142d8:	inc    ebp
  4142d9:	dec    ecx
  4142da:	sub    eax,DWORD PTR [edi+0x4e]
  4142dd:	(bad)  
  4142de:	pushaw 
  4142e0:	xlat   BYTE PTR ds:[ebx]
  4142e1:	jae    0x4142b6
  4142e3:	(bad)  
  4142e4:	out    dx,eax
  4142e5:	dec    ecx
  4142e6:	sub    DWORD PTR [edi-0x61],esi
  4142e9:	mov    ah,0x59
  4142eb:	int3   
  4142ec:	(bad)  
  4142ed:	es jmp 0x2fd6:0xcf812a01
  4142f5:	inc    eax
  4142f6:	or     BYTE PTR [ebx],0x50
  4142f9:	shr    BYTE PTR ds:0x5762ce2d,1
  4142ff:	dec    ebx
  414300:	outs   dx,BYTE PTR ds:[esi]
  414301:	js     0x41432a
  414303:	dec    BYTE PTR [esi]
  414305:	jmp    0x4142fb
  414307:	jp     0x41432f
  414309:	daa    
  41430a:	stos   BYTE PTR es:[edi],al
  41430b:	push   ds
  41430c:	test   BYTE PTR [ecx-0x3eb412d3],bl
  414312:	jmp    0xbab08924
  414317:	pop    eax
  414318:	sub    BYTE PTR [eax-0x4e495a4f],dh
  41431e:	std    
  41431f:	scas   eax,DWORD PTR es:[edi]
  414320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414321:	dec    ebp
  414322:	jmp    0x47466746
  414327:	push   esp
  414328:	pop    esp
  414329:	dec    esp
  41432a:	cmp    edi,DWORD PTR [ebp+0x77]
  41432d:	pop    edi
  41432e:	cdq    
  41432f:	lds    esp,FWORD PTR [edi]
  414331:	jno    0x4142fc
  414333:	(bad)  [edi-0x30]
  414336:	rcl    BYTE PTR [edx+0x46],cl
  414339:	push   ecx
  41433a:	mov    ds:0x1b4c09c4,eax
  41433f:	jmp    0x73b492c1
  414344:	stos   BYTE PTR es:[edi],al
  414345:	cmp    BYTE PTR [ebx+0x6c],0x50
  414349:	(bad)  
  41434b:	scas   eax,DWORD PTR es:[edi]
  41434c:	push   ebx
  41434d:	loope  0x4142f5
  41434f:	pop    ebx
  414350:	dec    eax
  414351:	pushf  
  414352:	mov    esi,0x7bb73c65
  414357:	(bad)  
  414358:	aaa    
  414359:	(bad)  
  41435b:	adc    bl,BYTE PTR [eax+0x157b28a4]
  414361:	mov    al,ds:0xe82df21a
  414366:	dec    edi
  414367:	mov    cs,WORD PTR [eax-0x7e77067]
  41436d:	clc    
  41436e:	mov    ch,cl
  414370:	adc    eax,0x52b76dd2
  414375:	inc    esi
  414376:	dec    edi
  414377:	or     DWORD PTR [eax-0x27fdae65],ebx
  41437d:	mul    BYTE PTR [esi]
  41437f:	xchg   ecx,eax
  414380:	mov    dh,0x8f
  414382:	and    al,dl
  414384:	add    eax,0xd31d0fa4
  414389:	mov    ebp,0x1eb1be99
  41438e:	xor    ebx,DWORD PTR [ecx]
  414390:	mov    ah,0xf9
  414392:	cmp    al,0xf9
  414394:	rcr    ecx,1
  414396:	jle    0x414392
  414398:	or     BYTE PTR [ebx-0x7c61b2e],dl
  41439e:	xor    BYTE PTR [esi+esi*2-0x74564253],dh
  4143a5:	dec    edx
  4143a6:	mov    dl,0x8c
  4143a8:	pop    ds
  4143a9:	loope  0x4143bd
  4143ab:	imul   edi,DWORD PTR [edx-0x45],0xffffffc7
  4143af:	inc    edi
  4143b0:	mov    al,ds:0x75c18614
  4143b5:	lods   eax,DWORD PTR ds:[esi]
  4143b6:	or     eax,0x1b6eabd7
  4143bb:	es push edi
  4143bd:	call   0xe3ebaeba
  4143c2:	pop    ebp
  4143c3:	loopne 0x414371
  4143c5:	shr    BYTE PTR [ebx],0x2c
  4143c8:	xor    BYTE PTR [edi-0x53],bh
  4143cb:	retf   
  4143cc:	fmul   QWORD PTR [edi]
  4143ce:	retf   0xdc7c
  4143d1:	xchg   edi,eax
  4143d2:	les    eax,FWORD PTR [eax+ebx*1+0x6b0966c3]
  4143d9:	imul   edx,DWORD PTR [edi+0x3691d18a],0x744bacee
  4143e3:	ins    DWORD PTR es:[edi],dx
  4143e4:	out    dx,eax
  4143e5:	scas   al,BYTE PTR es:[edi]
  4143e6:	popa   
  4143e7:	(bad)  
  4143e9:	(bad)  
  4143ea:	or     BYTE PTR [edx],ah
  4143ec:	jno    0x4143d7
  4143ee:	pop    es
  4143ef:	jmp    0x8ef6:0xe24a53cc
  4143f6:	out    dx,al
  4143f7:	out    dx,al
  4143f8:	inc    edx
  4143f9:	mov    esp,0xdc5a6537
  4143fe:	mov    DWORD PTR [ebx],edi
  414400:	les    esi,FWORD PTR [edx-0x683a26b]
  414406:	fs sahf 
  414408:	aas    
  414409:	mov    ecx,DWORD PTR [eax+edi*4]
  41440c:	mov    dl,0x39
  41440e:	mov    bl,BYTE PTR [esi-0x18]
  414411:	hlt    
  414412:	push   esp
  414413:	sahf   
  414414:	sbb    al,0x28
  414416:	cli    
  414417:	or     bh,BYTE PTR [ebx-0x74]
  41441a:	scas   al,BYTE PTR es:[edi]
  41441b:	aas    
  41441c:	sahf   
  41441d:	adc    BYTE PTR [eax-0x642a72ca],bl
  414423:	mov    BYTE PTR [ebx],bh
  414425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414426:	call   0x5108024d
  41442b:	sub    BYTE PTR [esi+eiz*1-0x7a],dl
  41442f:	push   cs
  414430:	mov    cl,0x16
  414432:	dec    edx
  414433:	js     0x414484
  414435:	aad    0x2f
  414437:	iret   
  414438:	or     BYTE PTR [esi+0x3c975104],dh
  41443e:	test   ch,dl
  414440:	ins    BYTE PTR es:[edi],dx
  414441:	jle    0x414441
  414443:	or     DWORD PTR [ebp+ecx*4-0x61],0x5c
  414448:	loop   0x414462
  41444a:	push   eax
  41444b:	enter  0x9935,0x74
  41444f:	daa    
  414450:	push   edx
  414451:	xchg   ecx,eax
  414452:	and    al,0x12
  414454:	dec    eax
  414455:	xchg   edx,eax
  414456:	int3   
  414457:	push   ebp
  414458:	stc    
  414459:	xor    al,0xa4
  41445b:	mov    edx,DWORD PTR [ebp+0x2d]
  41445e:	xchg   esp,eax
  41445f:	(bad)
  414462:	stos   DWORD PTR es:[edi],eax
  414463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414464:	cmp    bl,BYTE PTR [esi+0x5b]
  414467:	test   DWORD PTR [esi-0x47],edx
  41446a:	(bad)  
  41446b:	hlt    
  41446c:	mov    ds:0x5c64c2d5,eax
  414471:	xchg   ecx,eax
  414472:	jg     0x4144e7
  414474:	leave  
  414475:	(bad)
  414478:	adc    dl,BYTE PTR [edx]
  41447a:	push   eax
  41447b:	imul   ebp,DWORD PTR [esi],0x726658bf
  414481:	jecxz  0x414442
  414483:	jmp    0x41443d
  414485:	jnp    0x4144d0
  414487:	sbb    ecx,DWORD PTR [eax-0x6]
  41448a:	clc    
  41448b:	jl     0x4144ee
  41448d:	pop    ss
  41448e:	xlat   BYTE PTR ds:[ebx]
  41448f:	pop    esi
  414490:	dec    esp
  414491:	xchg   edi,eax
  414492:	fwait
  414493:	jmp    0x41450e
  414495:	fisub  WORD PTR [esi+eiz*2-0x54]
  414499:	dec    eax
  41449a:	aam    0x40
  41449c:	add    DWORD PTR [eax+0x78],0xeeca39ec
  4144a3:	adc    BYTE PTR [edi-0x32],dh
  4144a6:	inc    esi
  4144a7:	aaa    
  4144a8:	xchg   esp,eax
  4144a9:	or     BYTE PTR [ebx+0x42daf100],dl
  4144af:	test   al,0xb2
  4144b1:	das    
  4144b2:	dec    eax
  4144b3:	inc    esi
  4144b4:	and    al,0xcd
  4144b6:	sar    DWORD PTR [edi],0xcf
  4144b9:	pop    edx
  4144ba:	xchg   ebp,eax
  4144bb:	outs   dx,DWORD PTR ds:[esi]
  4144bc:	sub    al,0xe7
  4144be:	xchg   ebx,eax
  4144bf:	idiv   BYTE PTR [esi+0x67]
  4144c2:	inc    esp
  4144c3:	(bad)  
  4144c4:	(bad)  
  4144c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c6:	xchg   ebx,eax
  4144c7:	or     BYTE PTR [esi-0xd6a0796],cl
  4144cd:	mov    ecx,0x8679e945
  4144d2:	fmul   QWORD PTR [ecx-0x209fd516]
  4144d8:	adc    DWORD PTR [ebp-0x44d1e3a6],eax
  4144de:	mov    ebx,0x700767bf
  4144e3:	popa   
  4144e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144e5:	add    al,0x91
  4144e7:	jmp    0x8ea3e66b
  4144ec:	call   0x1e032cf9
  4144f1:	in     eax,0xde
  4144f3:	nop
  4144f4:	loop   0x4144cb
  4144f6:	dec    ecx
  4144f7:	cmp    esp,DWORD PTR [eax]
  4144f9:	mov    edi,0x424b015
  4144fe:	ret    
  4144ff:	int    0xae
  414501:	aaa    
  414502:	push   ebp
  414503:	mov    dh,0x53
  414505:	pop    es
  414506:	inc    ecx
  414507:	jnp    0x4144e8
  414509:	sar    DWORD PTR [esi],0xf4
  41450c:	sub    esi,DWORD PTR [ebp-0x14574d8]
  414512:	rol    BYTE PTR [ebp-0xa],cl
  414515:	inc    ebp
  414516:	lock rcl ecx,0xdd
  41451a:	adc    DWORD PTR [eax+0x2b1d3a4e],0xf12e9e04
  414524:	add    eax,0x615e0993
  414529:	and    eax,0x76b3ccea
  41452e:	mov    edx,DWORD PTR [eax+0x48]
  414531:	and    al,0x93
  414533:	xchg   edi,eax
  414534:	sbb    eax,0x3d3ccf2f
  414539:	sahf   
  41453a:	mov    bl,0xb6
  41453c:	xor    al,bh
  41453e:	push   ecx
  41453f:	xor    BYTE PTR [ecx],dh
  414541:	sub    edi,DWORD PTR ds:0x6c237ec8
  414547:	loop   0x4144d2
  414549:	retf   0xe677
  41454c:	pop    ds
  41454d:	push   0x3e
  41454f:	retf   
  414550:	fdiv   st,st(0)
  414552:	inc    ecx
  414553:	mov    al,0x76
  414555:	or     DWORD PTR [ebp-0x6b],esp
  414558:	inc    edx
  414559:	dec    edx
  41455a:	cmp    DWORD PTR [ebx+eax*2-0x2e7eaa30],ebx
  414561:	out    dx,al
  414562:	add    DWORD PTR [ecx+0x36],ecx
  414565:	cmp    al,BYTE PTR [edi+0x70728ace]
  41456b:	in     eax,dx
  41456c:	sub    ebx,DWORD PTR [ebp+ebp*1-0x5b3efd66]
  414573:	jae    0x4145ed
  414575:	inc    esp
  414576:	xor    eax,0xc239615e
  41457b:	mov    esp,0xaa242c11
  414580:	imul   bl
  414582:	sub    DWORD PTR [edx-0x42270b09],0x5771ca2
  41458c:	or     edx,esi
  41458e:	fadd   QWORD PTR [esi]
  414590:	mov    ch,0x27
  414592:	push   es
  414593:	lods   al,BYTE PTR ds:[esi]
  414594:	jne    0x414537
  414596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414597:	popf   
  414598:	add    ebx,DWORD PTR [eax-0x17]
  41459b:	adc    dl,bh
  41459d:	aam    0x9
  41459f:	mov    ds,WORD PTR cs:[esp+ebp*4-0x9]
  4145a4:	outs   dx,DWORD PTR ds:[esi]
  4145a5:	int3   
  4145a6:	pop    esi
  4145a7:	mov    ebx,0xd5fbe853
  4145ac:	enter  0xe55c,0xcf
  4145b0:	stc    
  4145b1:	sbb    eax,0x94a18bd5
  4145b6:	jg     0x4145c9
  4145b8:	fs loopne 0x414587
  4145bb:	sbb    eax,0x4b8fc1a9
  4145c0:	cmp    DWORD PTR [ebx-0x1d],ecx
  4145c3:	sbb    al,0x36
  4145c5:	out    0x19,al
  4145c7:	mov    eax,ds:0x28ecb62d
  4145cc:	push   edi
  4145cd:	aas    
  4145ce:	sbb    eax,esp
  4145d0:	add    esi,ebx
  4145d2:	xchg   ebx,eax
  4145d3:	sub    dl,dh
  4145d5:	out    dx,eax
  4145d6:	call   0x1f785552
  4145db:	mov    esp,0xce1e9d3f
  4145e0:	mov    esi,0xdceb3b6e
  4145e5:	dec    edx
  4145e6:	fs mov cl,0xb1
  4145e9:	or     eax,0x1a04578e
  4145ee:	retf   0x89a0
  4145f1:	jne    0x41463e
  4145f3:	mov    DWORD PTR [eax-0x10fbed71],ebx
  4145f9:	push   0x1
  4145fb:	in     al,dx
  4145fc:	cmp    BYTE PTR [edx],dl
  4145fe:	retf   0xdfbf
  414601:	stc    
  414602:	loope  0x414665
  414604:	mov    BYTE PTR ds:0xfe16f42d,cl
  41460a:	adc    cl,bh
  41460c:	loop   0x4145f8
  41460e:	mov    DWORD PTR [eax-0x6c222116],edi
  414614:	imul   esp,DWORD PTR [esi],0xffffffdd
  414617:	mov    edi,0x943dee9
  41461c:	ins    BYTE PTR es:[edi],dx
  41461d:	inc    edx
  41461e:	retf   
  41461f:	cmp    edi,DWORD PTR [edi+eax*1-0x58812bbc]
  414626:	and    al,0xf2
  414628:	mov    ch,0x46
  41462a:	cwde   
  41462b:	mov    ebx,0xf90472d2
  414630:	imul   esi,DWORD PTR [ebp-0x30],0x3c11698e
  414637:	dec    esp
  414638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414639:	or     al,BYTE PTR [edi-0x4be9d6ba]
  41463f:	sub    al,0x65
  414641:	xor    dh,dh
  414643:	fadd   QWORD PTR [esp+eiz*8]
  414646:	les    esp,FWORD PTR [esp+edi*1+0x1f00dc44]
  41464d:	xor    edi,DWORD PTR [edi-0x57]
  414650:	cmp    edx,edi
  414652:	add    BYTE PTR [eax-0x4849c05f],0x99
  414659:	xor    DWORD PTR [ebx+edx*2],eax
  41465c:	mov    WORD PTR ds:0xfaf940cc,gs
  414662:	pop    esi
  414663:	xor    edi,0xfffffff6
  414666:	adc    dh,bl
  414668:	popa   
  414669:	add    DWORD PTR [ecx],edx
  41466b:	sub    ah,0x85
  41466e:	mov    bh,0xd1
  414670:	int3   
  414671:	aad    0xd2
  414673:	inc    ebx
  414674:	mov    ecx,DWORD PTR [edi]
  414676:	adc    DWORD PTR [edi+eax*4+0x3d],ebx
  41467a:	mov    cl,0x87
  41467c:	add    DWORD PTR [ebx],edx
  41467e:	mov    esp,0x4d241804
  414683:	retf   
  414684:	mov    DWORD PTR fs:[ebx-0x50],ebp
  414688:	push   0xf03dea7f
  41468d:	imul   ebp,DWORD PTR [edx+0x69],0xe2a6df9
  414694:	mov    esi,0x5588b826
  414699:	sbb    esp,esp
  41469b:	xor    BYTE PTR [esi-0x33ccc95],ch
  4146a1:	jbe    0x414693
  4146a3:	adc    eax,0x776aabf5
  4146a8:	std    
  4146a9:	jmp    0x659e:0x66b99fb0
  4146b0:	add    BYTE PTR es:[eax+0x3910288b],bh
  4146b7:	push   ebp
  4146b8:	pop    ds
  4146b9:	sub    BYTE PTR [ebp-0x4d],bl
  4146bc:	cmp    eax,0x5f4e48b7
  4146c1:	cmp    DWORD PTR [esi-0x4f],ebp
  4146c4:	ficomp WORD PTR [esi-0x5c]
  4146c7:	int    0x1a
  4146c9:	pushf  
  4146ca:	retf   0xcb40
  4146cd:	js     0x414684
  4146cf:	and    bl,al
  4146d1:	in     al,dx
  4146d2:	inc    edx
  4146d3:	mov    al,0x9d
  4146d5:	addr16 xchg ebx,eax
  4146d7:	in     al,dx
  4146d8:	test   al,0x9c
  4146da:	lods   eax,DWORD PTR ds:[esi]
  4146db:	sar    DWORD PTR [edx-0x6e],1
  4146de:	enter  0xca1a,0xf6
  4146e2:	retf   0xf7c
  4146e5:	jbe    0x41470f
  4146e7:	add    al,0xed
  4146e9:	sar    DWORD PTR [ebp+0x73],1
  4146ec:	mov    bl,BYTE PTR [eax]
  4146ee:	ins    DWORD PTR es:[edi],dx
  4146ef:	inc    ebx
  4146f0:	fs mov esi,0xfc4fbbc6
  4146f6:	adc    al,cl
  4146f8:	outs   dx,BYTE PTR ds:[esi]
  4146f9:	shl    esi,0xd3
  4146fc:	xor    DWORD PTR [esi],ebp
  4146fe:	ret    0x28b1
  414701:	pop    edx
  414702:	ror    BYTE PTR [esi+0x687e349b],cl
  414708:	ja     0x4146fd
  41470a:	push   edx
  41470b:	fmul   DWORD PTR [ebx-0x71d41cdb]
  414711:	stos   DWORD PTR es:[edi],eax
  414712:	cmp    esi,edi
  414714:	fnstcw WORD PTR [ebp+0x75]
  414717:	stc    
  414718:	out    dx,eax
  414719:	out    0xf0,eax
  41471b:	dec    ebp
  41471c:	mov    ds:0xec7b4015,eax
  414721:	dec    eax
  414722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414723:	daa    
  414724:	xor    BYTE PTR ds:0x8506fd5,0xbd
  41472b:	fadd   QWORD PTR [ebx+0x23]
  41472e:	cwde   
  41472f:	push   cs
  414730:	je     0x414743
  414732:	test   DWORD PTR [edx],0x3bc33bc9
  414738:	sub    BYTE PTR [esi-0x334acbbb],ch
  41473e:	and    DWORD PTR [ebp-0x2ae885b0],0xea5bb1bc
  414748:	fmulp  st(6),st
  41474a:	mov    DWORD PTR [ebp-0x80],ecx
  41474d:	cmp    ecx,DWORD PTR [edx+0x5f6a2369]
  414753:	call   0x9e88175f
  414758:	fmul   QWORD PTR [eax+0x280fc2d7]
  41475e:	xchg   DWORD PTR [ebp-0x57318441],ebx
  414764:	pop    edi
  414765:	xchg   edx,eax
  414766:	mov    eax,ds:0x6b22c83b
  41476b:	cmp    eax,0x505f5766
  414770:	push   esp
  414771:	lock (bad) 
  414773:	xchg   edi,eax
  414774:	sbb    bl,BYTE PTR [ebx-0x16cc2f87]
  41477a:	cmp    DWORD PTR ds:0xfacfef1f,ebx
  414780:	dec    eax
  414781:	xlat   BYTE PTR ds:[ebx]
  414782:	mov    ah,0xa6
  414784:	xchg   esi,eax
  414785:	in     al,0xd0
  414787:	cs call 0xd7b55e9b
  41478d:	int    0xea
  41478f:	fs int3 
  414791:	sbb    dh,cl
  414793:	mov    dl,0x22
  414795:	(bad)  
  414796:	pop    ds
  414797:	cmp    esp,DWORD PTR [ebx]
  414799:	mov    esi,0x99292dc9
  41479e:	cmp    bl,bl
  4147a0:	lods   al,BYTE PTR ds:[esi]
  4147a1:	out    0x96,al
  4147a3:	call   0x5ec67e76
  4147a8:	xlat   BYTE PTR ds:[ebx]
  4147a9:	pop    esi
  4147aa:	mov    edi,DWORD PTR [ecx+eiz*4]
  4147ad:	xchg   esp,eax
  4147ae:	mov    esp,0xcb5da686
  4147b3:	es je  0x4147ab
  4147b6:	sbb    eax,0x87fb868e
  4147bb:	jle    0x41476c
  4147bd:	(bad)  
  4147bf:	sbb    DWORD PTR [ebp-0x3cae3e96],edx
  4147c5:	jno    0x414829
  4147c7:	adc    BYTE PTR [ecx+0x19ea16de],0xae
  4147ce:	sbb    DWORD PTR [edx+0x405467f9],eax
  4147d4:	and    eax,0xfcd66267
  4147d9:	dec    ebx
  4147da:	mov    bh,0x9d
  4147dc:	mov    bl,0xd0
  4147de:	loope  0x41479c
  4147e0:	jae    0x4147d3
  4147e2:	dec    eax
  4147e3:	sub    bh,BYTE PTR [edx-0x6f]
  4147e6:	aad    0x69
  4147e8:	cmc    
  4147e9:	pop    ecx
  4147ea:	cmp    DWORD PTR [edi+0x3b],ebp
  4147ed:	mov    ebp,0x48f4f31d
  4147f2:	xor    eax,0xe771a913
  4147f7:	nop
  4147f8:	cs cmp eax,0x16b819ef
  4147fe:	jmp    0xec42a905
  414803:	(bad)  
  414804:	mov    ebp,0xfa1f0717
  414809:	gs cmp al,0x9e
  41480c:	mov    ch,0x7
  41480e:	out    dx,eax
  41480f:	push   ss
  414810:	fdiv   st(4),st
  414812:	fwait
  414813:	push   edi
  414814:	ret    0x1f83
  414817:	in     al,0x7d
  414819:	adc    cl,dl
  41481b:	lea    eax,[ebx+eax*4+0x2]
  41481f:	or     DWORD PTR [ebp-0x57],ebp
  414822:	int3   
  414823:	mov    esi,0x1111b8ec
  414828:	inc    edx
  414829:	lds    ebp,FWORD PTR [ebx]
  41482b:	das    
  41482c:	cmp    eax,0x4484f353
  414831:	fistp  WORD PTR [edi+0x38112d71]
  414837:	fiadd  DWORD PTR [bp+di+0x6c53]
  41483c:	jecxz  0x414847
  41483e:	outs   dx,DWORD PTR ds:[esi]
  41483f:	in     al,0x73
  414841:	das    
  414842:	jno    0x414840
  414844:	sub    BYTE PTR [esi+0x59],0xf1
  414848:	pop    ds
  414849:	mov    edx,DWORD PTR [edi+0x1a7480f1]
  41484f:	out    dx,al
  414850:	mov    esi,0x641ff7df
  414855:	aam    0xe4
  414857:	ficomp DWORD PTR [edx]
  414859:	mov    dl,0xf5
  41485b:	adc    edi,edx
  41485d:	cs leave 
  41485f:	push   ss
  414860:	mov    edx,0x8d93a73f
  414865:	call   0x36d9cfb2
  41486a:	loop   0x4148bf
  41486c:	mov    WORD PTR [esi*2+0x5bff1b66],ds
  414873:	js     0x414846
  414875:	xchg   edi,eax
  414876:	cmp    DWORD PTR [ecx+0x7bc0e480],edi
  41487c:	jge    0x4148e7
  41487e:	rol    DWORD PTR [ebx],cl
  414880:	sub    al,0x3b
  414882:	push   ebp
  414883:	mul    DWORD PTR [esi+0x24]
  414886:	(bad)  
  414887:	jecxz  0x41480b
  414889:	or     edx,DWORD PTR [ecx+0x58]
  41488c:	test   eax,0x9248515a
  414891:	fcom   QWORD PTR [esi]
  414893:	cmp    eax,DWORD PTR [ecx+edi*1]
  414896:	scas   al,BYTE PTR es:[edi]
  414897:	out    0xaa,al
  414899:	mov    ebx,0x7110f418
  41489e:	dec    esi
  41489f:	icebp  
  4148a0:	mov    bl,0x6
  4148a2:	(bad)  
  4148a3:	div    esp
  4148a5:	cmp    eax,0xe2286ea1
  4148aa:	and    BYTE PTR [ebp+0x16],dh
  4148ad:	das    
  4148ae:	mov    BYTE PTR [edi],dl
  4148b0:	out    0x9c,eax
  4148b2:	pop    eax
  4148b3:	mov    edx,0xdf8df7f8
  4148b8:	ds pop ss
  4148ba:	jle    0x4148a2
  4148bc:	loope  0x41487c
  4148be:	xchg   ecx,eax
  4148bf:	push   cs
  4148c0:	inc    edx
  4148c1:	xchg   edx,eax
  4148c2:	aad    0xb8
  4148c4:	cs repnz daa 
  4148c7:	cli    
  4148c8:	jmp    0xb2bfaf86
  4148cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ce:	xor    al,0x79
  4148d0:	call   0x6c34a460
  4148d5:	js     0x41488c
  4148d7:	repnz int3 
  4148d9:	and    eax,0xf1318de9
  4148de:	cmp    ah,BYTE PTR [edx]
  4148e0:	aas    
  4148e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148e2:	pop    edx
  4148e3:	mov    ecx,0x804043c5
  4148e8:	mul    DWORD PTR [edx+esi*4]
  4148eb:	inc    edi
  4148ec:	mov    ?,WORD PTR [edi-0x22]
  4148ef:	jae    0x41490d
  4148f1:	lods   eax,DWORD PTR ds:[esi]
  4148f2:	dec    ebx
  4148f3:	or     esi,edx
  4148f5:	add    al,0xcd
  4148f7:	sbb    dl,BYTE PTR [ebp-0x70b58308]
  4148fd:	pop    esi
  4148fe:	sbb    al,0xda
  414900:	sbb    DWORD PTR [ecx-0x409d1830],esp
  414906:	mov    ch,BYTE PTR [esi+ebx*8-0x61ff3718]
  41490d:	sbb    al,0xdb
  41490f:	leave  
  414910:	add    al,0x4d
  414912:	cld    
  414913:	(bad)  
  414914:	lods   al,BYTE PTR ds:[esi]
  414915:	mov    BYTE PTR [esi+0x7f],dh
  414918:	mov    eax,ds:0xd61422a5
  41491d:	out    dx,al
  41491e:	jecxz  0x4148b7
  414920:	xor    ecx,DWORD PTR [esi+0x4e04010c]
  414926:	sbb    BYTE PTR [edi+0x5bd671c5],0xf5
  41492d:	sub    dh,BYTE PTR [eax-0x7a]
  414930:	mov    ds:0xa90ba8a5,al
  414935:	cmc    
  414936:	jne    0x41497b
  414938:	mov    ds:0x89d4a80c,eax
  41493d:	aas    
  41493e:	aaa    
  41493f:	push   esi
  414940:	cmp    eax,0xae25df9e
  414945:	pop    esp
  414946:	loope  0x4149ab
  414948:	sub    esp,DWORD PTR cs:[eax+0x215e3d9c]
  41494f:	push   0x2e897d86
  414954:	xor    al,0xf9
  414956:	xor    esp,esp
  414958:	add    ecx,DWORD PTR [esi]
  41495a:	cmc    
  41495b:	fwait
  41495c:	aad    0xa5
  41495e:	xor    al,0xb9
  414960:	loop   0x41499f
  414962:	xlat   BYTE PTR ds:[ebx]
  414963:	add    al,0x12
  414965:	lods   al,BYTE PTR ds:[esi]
  414966:	mov    dh,0x31
  414968:	out    dx,eax
  414969:	jnp    0x414920
  41496b:	cwde   
  41496c:	jnp    0x41493e
  41496e:	pop    esi
  41496f:	nop
  414970:	mov    ah,0x57
  414972:	add    cl,bl
  414974:	xor    al,0xce
  414976:	sub    al,BYTE PTR [eax+0x24]
  414979:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41497b:	push   esp
  41497c:	in     al,dx
  41497d:	push   0x13
  41497f:	add    DWORD PTR [edi+0x47386c5f],0x64
  414986:	mov    DWORD PTR [ebp-0x51480989],esp
  41498c:	mov    ebx,DWORD PTR [eax-0x6a]
  41498f:	lock je 0x414a03
  414992:	jns    0x4149a8
  414994:	xchg   ebx,eax
  414995:	je     0x414924
  414997:	jns    0x414975
  414999:	dec    edi
  41499a:	shl    BYTE PTR gs:[edi],cl
  41499d:	jne    0x4149b3
  41499f:	xchg   ebx,eax
  4149a0:	xchg   ecx,eax
  4149a1:	mov    cx,0x34f
  4149a5:	adc    BYTE PTR [esi+edx*2],ch
  4149a8:	test   eax,0x9bd1796c
  4149ad:	imul   ebp,DWORD PTR [esi+0x3c],0xdea4ab47
  4149b4:	adc    ch,dh
  4149b6:	mov    eax,ds:0x1a4606ee
  4149bb:	sbb    eax,0x6b61913e
  4149c0:	inc    esi
  4149c1:	call   0x9728f92c
  4149c6:	into   
  4149c7:	shr    BYTE PTR [eax],1
  4149c9:	add    DWORD PTR [edx+edi*8+0x7b],ecx
  4149cd:	clc    
  4149ce:	mov    bl,0x86
  4149d0:	(bad)  
  4149d1:	xchg   ebx,eax
  4149d2:	add    al,0x40
  4149d4:	push   ebx
  4149d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d6:	jg     0x414a17
  4149d8:	and    ah,bl
  4149da:	ds repz loop 0x414a06
  4149de:	mov    ch,0x4a
  4149e0:	fcmovnbe st,st(2)
  4149e2:	mov    bh,0x92
  4149e4:	push   eax
  4149e5:	dec    edx
  4149e6:	es mov ch,0xd0
  4149e9:	arpl   WORD PTR [edx+0x148685a1],ax
  4149ef:	mov    ch,0x56
  4149f1:	cs dec ebx
  4149f3:	jbe    0x4149f9
  4149f5:	xchg   esp,eax
  4149f6:	ja     0x4149dc
  4149f8:	data16 (bad) 
  4149fa:	mov    bh,0x1f
  4149fc:	push   eax
  4149fd:	imul   ecx,DWORD PTR [ebp+eax*4-0x8],0x19
  414a02:	jl     0x4149d2
  414a04:	(bad)  
  414a06:	lods   al,BYTE PTR ds:[esi]
  414a07:	int    0xe6
  414a09:	aas    
  414a0a:	jb     0x414a4a
  414a0c:	inc    esi
  414a0d:	gs jb  0x414a72
  414a10:	sub    eax,0x7c3cc836
  414a15:	cmp    bl,ah
  414a17:	pop    es
  414a18:	(bad)  
  414a19:	sbb    eax,0x129a398c
  414a1e:	lods   al,BYTE PTR ds:[esi]
  414a1f:	dec    ecx
  414a20:	fist   DWORD PTR [eax+0x4e4ad7fa]
  414a26:	pop    ecx
  414a27:	out    0x7f,al
  414a29:	or     BYTE PTR [ebp+0x54],bl
  414a2c:	sbb    eax,0xd6044bd4
  414a31:	mov    cl,0x79
  414a33:	add    esp,DWORD PTR ds:0xbd563559
  414a39:	xchg   esi,eax
  414a3a:	mov    eax,0x4f4bce0f
  414a3f:	daa    
  414a40:	repz jo 0x414a02
  414a43:	ror    DWORD PTR [ecx+eiz*4],1
  414a46:	mov    bl,0x11
  414a48:	lock jmp 0xf474:0xb489acd5
  414a50:	aad    0xb8
  414a52:	fmul   st(7),st
  414a54:	jmp    FWORD PTR [esi+0x224594bf]
  414a5a:	mov    ds:0x3837240c,al
  414a5f:	jb     0x414a73
  414a61:	sti    
  414a62:	aam    0xdc
  414a64:	and    al,0xb8
  414a66:	xor    cl,BYTE PTR [edx-0x59]
  414a69:	inc    edi
  414a6a:	xchg   edx,eax
  414a6b:	dec    edx
  414a6c:	xchg   bh,cl
  414a6e:	aas    
  414a6f:	gs scas eax,DWORD PTR es:[edi]
  414a71:	push   es
  414a72:	scas   al,BYTE PTR es:[edi]
  414a73:	jl     0x414a5c
  414a75:	scas   eax,DWORD PTR es:[edi]
  414a76:	test   BYTE PTR [ebx*4+0x437e94fc],bl
  414a7d:	ror    DWORD PTR [eax+0x47a8803b],cl
  414a83:	cmp    ah,BYTE PTR [ebx+0x2]
  414a86:	mov    DWORD PTR [ebp-0x4c],ecx
  414a89:	mov    ecx,DWORD PTR [ebp+0x8]
  414a8c:	mov    edx,0xfdbe0321
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a2f9
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a2fd
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x429395
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429dd5
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	push   ds
  414dd8:	fadd   QWORD PTR [ebx+0x7c956a9b]
  414dde:	jnp    0x414d9b
  414de0:	sahf   
  414de1:	jnp    0x414e5e
  414de3:	pop    edx
  414de4:	add    BYTE PTR [ebx],bh
  414de6:	in     eax,0x3d
  414de8:	fwait
  414de9:	mov    al,ds:0xa6d53e59
  414dee:	and    ebp,DWORD PTR [edx-0x5c]
  414df1:	out    dx,al
  414df2:	jmp    0x47a8acfd
  414df7:	clc    
  414df8:	loopne 0x414d9d
  414dfa:	jbe    0x414ddd
  414dfc:	fdivr  DWORD PTR [ebp-0x70]
  414dff:	ds pop ss
  414e01:	fist   WORD PTR [edx]
  414e03:	jge    0x414dde
  414e05:	js     0x414e32
  414e07:	lahf   
  414e08:	leave  
  414e09:	xor    BYTE PTR [ebp-0x21e7bf24],dh
  414e0f:	sub    dl,ah
  414e11:	sub    al,0xa1
  414e13:	pusha  
  414e14:	stc    
  414e15:	out    0xcc,al
  414e17:	test   bl,ch
  414e19:	sahf   
  414e1a:	into   
  414e1b:	adc    ah,cl
  414e1d:	push   eax
  414e1e:	loopne 0x414e2f
  414e20:	and    BYTE PTR [esi+0x7812c854],dh
  414e26:	xchg   BYTE PTR [edi-0x30],dl
  414e29:	loop   0x414df8
  414e2b:	je     0x414e63
  414e2d:	pop    ebp
  414e2e:	imul   edi,DWORD PTR [eax-0x5e],0x2941968b
  414e35:	adc    al,0x0
  414e37:	sar    BYTE PTR ss:[esp+edx*1-0x15],cl
  414e3c:	cs add esp,DWORD PTR gs:[ecx-0x3a]
  414e41:	add    ecx,DWORD PTR [ebx+esi*2]
  414e44:	push   eax
  414e45:	stos   DWORD PTR es:[edi],eax
  414e46:	sbb    bh,BYTE PTR [edi+0x5c066761]
  414e4c:	or     al,BYTE PTR [eax]
  414e4e:	ja     0x414e02
  414e50:	lods   al,BYTE PTR ds:[esi]
  414e51:	and    ebx,DWORD PTR [ecx+0x77]
  414e54:	iret   
  414e55:	pop    ecx
  414e56:	outs   dx,DWORD PTR ds:[esi]
  414e57:	or     DWORD PTR [ebx+ebx*1-0x36a6efb1],ecx
  414e5e:	push   ss
  414e5f:	lock or al,0xf1
  414e62:	fldcw  WORD PTR [edi-0x51]
  414e65:	dec    ecx
  414e66:	or     eax,0xdb9d3ebf
  414e6b:	in     eax,0xe0
  414e6d:	mov    bh,0xf1
  414e6f:	dec    esp
  414e70:	int    0x6c
  414e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e73:	out    0x1,al
  414e75:	std    
  414e76:	xchg   edx,eax
  414e77:	xlat   BYTE PTR ds:[ebx]
  414e78:	fcomp  DWORD PTR [edi+0xd]
  414e7b:	dec    ecx
  414e7c:	mov    ebp,0x940281a1
  414e81:	inc    ebx
  414e82:	inc    ecx
  414e83:	das    
  414e84:	retf   
  414e85:	rol    BYTE PTR [edx-0x1490577a],cl
  414e8b:	repz cmp DWORD PTR ds:0x9470f2e6,esi
  414e92:	fs ja  0x414ead
  414e95:	mov    dl,0x48
  414e97:	dec    edx
  414e98:	pop    es
  414e99:	(bad)  
  414e9a:	imul   esi,DWORD PTR [esi+0x4cad1af4],0x6a38f85
  414ea4:	pop    edi
  414ea5:	cmp    DWORD PTR [ebp-0x5c],ebp
  414ea8:	das    
  414ea9:	dec    edi
  414eaa:	pusha  
  414eab:	add    BYTE PTR [eax-0x35],dl
  414eae:	ins    DWORD PTR es:[edi],dx
  414eaf:	retf   
  414eb0:	sbb    ebp,DWORD PTR [edx-0x544ee680]
  414eb6:	fisub  DWORD PTR [edx-0x2ccf45ae]
  414ebc:	inc    esi
  414ebd:	das    
  414ebe:	lds    ebp,FWORD PTR [edi+0x1e]
  414ec1:	popf   
  414ec2:	dec    esp
  414ec3:	push   0xffffffad
  414ec5:	push   edx
  414ec6:	shl    DWORD PTR ds:0xb165482,1
  414ecc:	js     0x414e57
  414ece:	pop    ebx
  414ecf:	arpl   bp,sp
  414ed1:	stos   BYTE PTR es:[edi],al
  414ed2:	jb     0x414f4f
  414ed4:	xor    dh,0x26
  414ed7:	xchg   ebx,eax
  414ed8:	mov    ah,0x91
  414eda:	cmp    eax,0xb35e29a2
  414edf:	and    eax,0x55429621
  414ee4:	outs   dx,DWORD PTR ds:[esi]
  414ee5:	add    ecx,ecx
  414ee7:	add    al,0xe
  414ee9:	mov    ch,0x4f
  414eeb:	or     al,0xf0
  414eed:	mov    ecx,0xe94b0b38
  414ef2:	ret    0xe135
  414ef5:	mov    dh,0xbc
  414ef7:	cmc    
  414ef8:	leave  
  414ef9:	sub    DWORD PTR [ebx],esp
  414efb:	push   edx
  414efc:	push   esp
  414efd:	pop    DWORD PTR [ecx+ebx*4+0x73]
  414f01:	rol    bh,1
  414f03:	mov    ch,0xdb
  414f05:	and    dh,BYTE PTR [edx-0x58]
  414f08:	and    bh,BYTE PTR [edx+eax*2-0x7a1d8f79]
  414f0f:	sub    BYTE PTR [ebx-0x51],dh
  414f12:	(bad)  
  414f13:	push   ebx
  414f14:	out    dx,al
  414f15:	ret    0x8107
  414f18:	xchg   ebp,eax
  414f19:	push   edi
  414f1a:	mov    edx,0x648d640f
  414f1f:	jb     0x414f17
  414f21:	lds    edx,FWORD PTR fs:[edx]
  414f24:	test   eax,0x26a3e26c
  414f29:	jmp    0x414fa7
  414f2b:	retf   
  414f2c:	ret    0x51ba
  414f2f:	adc    al,0xed
  414f31:	mov    esp,0x3d1eb030
  414f36:	pop    eax
  414f37:	add    BYTE PTR [edi-0xd0bc2f6],bl
  414f3d:	icebp  
  414f3e:	adc    eax,0xb4284476
  414f43:	adc    eax,0x1e23e28a
  414f48:	push   esp
  414f49:	out    dx,al
  414f4a:	mov    BYTE PTR [ebp-0x7],ah
  414f4d:	jae    0x414f86
  414f4f:	dec    esi
  414f50:	sar    BYTE PTR [eax+0xb],0x51
  414f54:	pop    ecx
  414f55:	sub    al,0x81
  414f57:	cmp    al,0xa
  414f59:	mov    cl,0xe5
  414f5b:	movnti DWORD PTR [edx],ebp
  414f5e:	jbe    0x414f92
  414f60:	jg     0x414fd5
  414f62:	lea    eax,[ebx+ecx*1]
  414f65:	add    dl,BYTE PTR [ecx]
  414f67:	out    0x21,eax
  414f69:	cmc    
  414f6a:	pop    ds
  414f6b:	hlt    
  414f6c:	scas   eax,DWORD PTR es:[edi]
  414f6d:	push   ds
  414f6e:	out    dx,al
  414f6f:	cmp    bh,BYTE PTR [ebx]
  414f71:	scas   al,BYTE PTR es:[edi]
  414f72:	inc    ebp
  414f73:	sub    eax,0x91bd0c69
  414f78:	jae    0x414f6c
  414f7a:	loope  0x414fc1
  414f7c:	addr16 (bad) 
  414f7e:	fild   QWORD PTR [ebp+eiz*4+0x7a]
  414f82:	test   eax,0x1e596ccd
  414f87:	xlat   BYTE PTR ds:[ebx]
  414f88:	xchg   ebx,eax
  414f89:	and    BYTE PTR [esi],cl
  414f8b:	call   DWORD PTR [edi]
  414f8d:	fbstp  TBYTE PTR [eax+0x60]
  414f90:	mov    dh,0xd
  414f92:	into   
  414f93:	adc    eax,0x1211b726
  414f98:	jmp    0x41500a
  414f9a:	cmp    al,0xb8
  414f9c:	adc    DWORD PTR [ebp+0x7b0f0895],ebx
  414fa2:	popf   
  414fa3:	lds    esi,FWORD PTR [esi+0x1e]
  414fa6:	add    ebx,eax
  414fa8:	test   DWORD PTR [edi+0x2e],ebx
  414fab:	imul   edx,edx,0x13
  414fae:	cmp    al,BYTE PTR [ebx]
  414fb0:	or     eax,0x61ecdc59
  414fb5:	adc    ebp,DWORD PTR [eax]
  414fb7:	shl    DWORD PTR [eax],0x1b
  414fba:	pop    ecx
  414fbb:	aad    0xf3
  414fbd:	ins    DWORD PTR es:[edi],dx
  414fbe:	ret    0x243d
  414fc1:	ficom  WORD PTR [esi+eiz*1+0x4eaebac9]
  414fc8:	pop    edx
  414fc9:	leave  
  414fca:	push   edi
  414fcb:	cmp    BYTE PTR ds:0xd2905f09,0x24
  414fd2:	mov    esp,0x6e40b670
  414fd7:	or     ecx,DWORD PTR [ebx+0xb]
  414fda:	dec    edi
  414fdb:	add    edi,DWORD PTR [ebx+0x1efc7959]
  414fe1:	outs   dx,BYTE PTR ds:[esi]
  414fe2:	sub    ebx,DWORD PTR [eax]
  414fe4:	and    al,0x56
  414fe6:	xor    al,0x68
  414fe8:	repnz std 
  414fea:	aaa    
  414feb:	rcl    BYTE PTR ds:[esi+0x1c933c6e],cl
  414ff2:	cmp    esp,DWORD PTR [esi]
  414ff4:	mov    esi,0xc51fb2d
  414ff9:	das    
  414ffa:	popa   
  414ffb:	pusha  
  414ffc:	add    BYTE PTR [ebx-0x4ed44449],ch
  415002:	mov    edx,0x718a41a5
  415007:	mov    ch,0x1f
  415009:	outs   dx,DWORD PTR ds:[esi]
  41500a:	cmp    dl,BYTE PTR [eax]
  41500c:	int3   
  41500d:	aad    0x2b
  41500f:	ret    
  415010:	pop    ss
  415011:	(bad)  
  415012:	xchg   ebx,eax
  415013:	mov    ecx,0x4324c6c3
  415018:	inc    edi
  415019:	rcr    DWORD PTR [ecx-0x760a400d],0x68
  415020:	in     al,dx
  415021:	fisttp WORD PTR [ebx]
  415023:	cdq    
  415024:	xor    DWORD PTR [ebp+0x3ab85cd7],edx
  41502a:	dec    ecx
  41502b:	fisubr DWORD PTR [ebx]
  41502d:	aam    0x1
  41502f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415030:	xchg   ebp,eax
  415031:	adc    al,0x46
  415033:	mov    al,ds:0xf04f6251
  415038:	fisub  DWORD PTR [ebp-0xd]
  41503b:	dec    edi
  41503c:	hlt    
  41503d:	test   BYTE PTR [ebx],dl
  41503f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415040:	sar    ebp,1
  415042:	gs out 0x17,eax
  415045:	fwait
  415046:	or     ah,BYTE PTR [ebp*2+0x44de1718]
  41504d:	mov    ch,0x50
  41504f:	retf   
  415050:	mov    esi,0x30b6e0d0
  415055:	mov    bl,0xc5
  415057:	not    DWORD PTR [edx]
  415059:	or     eax,0x7c6c1dc3
  41505e:	pop    esi
  41505f:	push   ds
  415060:	add    DWORD PTR ds:0x4ce18c03,esi
  415066:	scas   al,BYTE PTR es:[edi]
  415067:	cvtps2pi mm0,QWORD PTR [ebp+edi*1-0x31]
  41506c:	(bad)  
  41506d:	daa    
  41506e:	push   es
  41506f:	cs enter 0x7cd4,0x2e
  415074:	sti    
  415075:	arpl   WORD PTR [edx+0x57eb4264],sp
  41507b:	test   eax,0x851cc964
  415080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415081:	inc    ebp
  415082:	cmp    DWORD PTR [eax-0x2f00fc15],esi
  415088:	cwde   
  415089:	inc    ecx
  41508a:	cmp    al,0x4f
  41508c:	and    cl,BYTE PTR [ecx+ebp*1]
  41508f:	pop    ebx
  415090:	out    dx,eax
  415091:	sbb    al,0x4b
  415093:	(bad)  
  415094:	loop   0x4150fe
  415096:	mov    WORD PTR [esi],?
  415098:	test   eax,0xbe7dba38
  41509d:	xor    DWORD PTR [ecx-0x7f],eax
  4150a0:	stos   BYTE PTR es:[edi],al
  4150a1:	jnp    0x4150fa
  4150a3:	mov    al,ds:0x1f292103
  4150a8:	push   ss
  4150a9:	xchg   edx,eax
  4150aa:	jne    0x415122
  4150ac:	fs add al,0x14
  4150af:	jns    0x415106
  4150b1:	test   eax,0x84767689
  4150b6:	xlat   BYTE PTR gs:[ebx]
  4150b8:	loopne 0x415073
  4150ba:	push   esi
  4150bb:	pop    ss
  4150bc:	scas   eax,DWORD PTR es:[edi]
  4150bd:	daa    
  4150be:	adc    BYTE PTR ds:0xaade270d,cl
  4150c4:	push   es
  4150c5:	sub    BYTE PTR [edi+eiz*1+0x11],bh
  4150c9:	cwde   
  4150ca:	shl    BYTE PTR [ecx-0x334d0ba4],0x5
  4150d1:	adc    ebp,DWORD PTR [ebx]
  4150d3:	test   al,ch
  4150d5:	xchg   edi,eax
  4150d6:	mov    fs,WORD PTR fs:[ecx+eax*2-0xb]
  4150db:	ss pop esi
  4150dd:	cmc    
  4150de:	push   edx
  4150df:	sub    al,0x6c
  4150e1:	fistp  DWORD PTR [ebx]
  4150e3:	out    dx,al
  4150e4:	sub    ebp,esi
  4150e6:	push   0x6b3a20db
  4150eb:	jge    0x41516b
  4150ed:	push   ds
  4150ee:	or     edx,DWORD PTR [edi]
  4150f0:	stos   BYTE PTR es:[edi],al
  4150f1:	mov    bh,0x43
  4150f3:	pop    ss
  4150f4:	adc    ebx,DWORD PTR [esi+0x4b]
  4150f7:	xor    al,0x6d
  4150f9:	dec    ebp
  4150fa:	cmp    DWORD PTR [edx-0x27422d44],0x0
  415101:	mov    ah,0x47
  415103:	loop   0x415161
  415105:	xchg   esi,eax
  415106:	test   cl,ch
  415108:	xor    BYTE PTR [ebp+0x57],dl
  41510b:	push   eax
  41510c:	or     esi,ecx
  41510e:	(bad)  
  41510f:	jbe    0x415168
  415111:	sub    BYTE PTR [ebx-0x72],dh
  415114:	and    BYTE PTR [edi],0xb7
  415117:	xor    al,BYTE PTR [edi-0x47]
  41511a:	imul   ecx,edi,0x717fedf
  415120:	push   ebx
  415121:	fcom   DWORD PTR [ecx+ebx*4-0x34262723]
  415128:	dec    edx
  415129:	dec    ebx
  41512a:	pushf  
  41512b:	mov    esp,0xae6ad65f
  415130:	les    ebx,FWORD PTR [edx-0x3a]
  415133:	mov    ds:0xafbd935e,eax
  415138:	xor    cl,BYTE PTR [esi+edx*4+0x74]
  41513c:	dec    edi
  41513d:	xlat   BYTE PTR ds:[ebx]
  41513e:	xchg   BYTE PTR [edi],bl
  415140:	pusha  
  415141:	add    BYTE PTR [esi+eax*2-0x55],0x5
  415146:	stos   DWORD PTR es:[edi],eax
  415147:	sbb    BYTE PTR [ebx-0x42],ch
  41514a:	xchg   DWORD PTR [eax],esi
  41514c:	retf   
  41514d:	mov    ecx,0x7afc4f4b
  415152:	sbb    al,BYTE PTR [ecx]
  415154:	lods   al,BYTE PTR ds:[esi]
  415155:	mov    BYTE PTR [edi+0xc],0x88
  415159:	pop    ds
  41515a:	cmp    al,0xb3
  41515c:	pop    ss
  41515d:	sar    BYTE PTR [edi+0x33],1
  415160:	test   DWORD PTR [ecx],0x73c97ed9
  415166:	dec    edx
  415167:	pop    sp
  415169:	shl    BYTE PTR [ecx],1
  41516b:	loop   0x4151c0
  41516d:	push   eax
  41516e:	adc    eax,0xc68c6187
  415173:	out    dx,al
  415174:	popf   
  415175:	out    0x3f,eax
  415177:	jmp    0x415158
  415179:	test   al,0xdf
  41517b:	std    
  41517c:	stc    
  41517d:	mov    al,ds:0xd8efad2a
  415182:	loopne 0x4151fe
  415184:	push   ebp
  415185:	adc    DWORD PTR [esi+0x50e41980],ecx
  41518b:	jo     0x4151ca
  41518d:	sub    BYTE PTR [ebp-0x1e],al
  415190:	pushf  
  415191:	jge    0x415179
  415193:	push   ebx
  415194:	mov    dl,0xc6
  415196:	xor    al,0x3a
  415198:	jecxz  0x415146
  41519a:	sbb    eax,0xfaa603fb
  41519f:	cmp    eax,0x79a52798
  4151a4:	stos   BYTE PTR es:[edi],al
  4151a5:	leave  
  4151a6:	jle    0x415160
  4151a8:	jmp    DWORD PTR [ecx+esi*4+0x19]
  4151ac:	gs pop ebx
  4151ae:	inc    bp
  4151b0:	nop    DWORD PTR [esi-0x1026d02c]
  4151b7:	jb     0x415145
  4151b9:	(bad)  [ebx+0x28dbd16e]
  4151bf:	cwde   
  4151c0:	bound  edx,QWORD PTR [ecx-0x76]
  4151c3:	and    ebp,DWORD PTR [eax+0x101dbbb6]
  4151c9:	xchg   ch,dl
  4151cb:	std    
  4151cc:	inc    esp
  4151cd:	mov    ecx,DWORD PTR [esi-0x17]
  4151d0:	mov    ds:0x55d7136d,eax
  4151d5:	jg     0x4151fd
  4151d7:	gs cmp dl,al
  4151da:	pop    es
  4151db:	jg     0x4151b7
  4151dd:	popa   
  4151de:	jmp    0xf1a6ce7
  4151e3:	xor    al,0xe3
  4151e5:	fcmove st,st(5)
  4151e7:	xor    bl,al
  4151e9:	(bad)  
  4151eb:	jmp    0x3ea5:0x9bf91de1
  4151f2:	test   eax,0x6ebe0be1
  4151f7:	jmp    0x415192
  4151f9:	jg     0x415265
  4151fb:	int3   
  4151fc:	push   eax
  4151fd:	sbb    ah,ah
  4151ff:	jecxz  0x41527e
  415201:	adc    eax,DWORD PTR [ecx]
  415203:	sbb    al,0xde
  415205:	xchg   esi,eax
  415206:	call   0xc2888020
  41520b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41520c:	jo     0x4151df
  41520e:	xor    bl,bh
  415210:	or     BYTE PTR [esp+edi*8-0x26],0xff
  415215:	mov    dl,0xc8
  415217:	rcr    BYTE PTR [edi-0x5d14c5a],cl
  41521d:	sub    ah,ch
  41521f:	call   0x32d3:0xa54e7826
  415226:	and    BYTE PTR [esi],dl
  415228:	imul   eax,DWORD PTR ds:0x9c01cf0a,0x25cad97e
  415232:	fstp   TBYTE PTR [ebx+0x4b9f3ce4]
  415238:	pop    ds
  415239:	fwait
  41523a:	lahf   
  41523b:	setns  BYTE PTR [edi+ebp*1+0x4791712]
  415243:	sub    ah,BYTE PTR [esi+eax*8+0xec1bc29]
  41524a:	fnstsw WORD PTR [esi]
  41524c:	pop    esi
  41524d:	arpl   cx,cx
  41524f:	xchg   ecx,eax
  415250:	loope  0x4152a4
  415252:	les    ecx,FWORD PTR [edi]
  415254:	rol    DWORD PTR [ecx-0x23],cl
  415257:	popf   
  415258:	mov    al,ds:0xf36c95c9
  41525d:	or     edi,esi
  41525f:	dec    ebx
  415260:	jns    0x415253
  415262:	popa   
  415263:	mov    DWORD PTR [eax],esi
  415265:	jge    0x4151f7
  415267:	xchg   edi,eax
  415268:	je     0x415291
  41526a:	mov    edx,0xd5992898
  41526f:	jmp    0xa2b1:0x2939d060
  415276:	mov    esp,eax
  415278:	jecxz  0x41529f
  41527a:	(bad)  
  41527b:	dec    ebx
  41527c:	xchg   ebx,eax
  41527d:	aam    0xb6
  41527f:	fwait
  415280:	add    dl,BYTE PTR ds:0x4e010183
  415286:	push   esp
  415287:	scas   al,BYTE PTR es:[edi]
  415288:	adc    DWORD PTR [ebp-0x14cb88eb],edi
  41528e:	fsub   DWORD PTR [ebp+0xcb4bd89]
  415294:	push   es
  415295:	aas    
  415296:	add    bl,BYTE PTR [edi+eax*4+0x6631ce71]
  41529d:	adc    edi,DWORD PTR [ecx-0x71]
  4152a0:	cmp    DWORD PTR ds:0x540bd6c3,0xd5d3570c
  4152aa:	pop    es
  4152ab:	es jns 0x4152fd
  4152ae:	repz mov dl,0xb8
  4152b1:	loop   0x415277
  4152b3:	out    0xb5,eax
  4152b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b6:	push   ecx
  4152b7:	and    DWORD PTR [edi-0x44b8ac5a],0xe0ca449c
  4152c1:	sbb    DWORD PTR [edx-0x28],ecx
  4152c4:	jae    0x415321
  4152c6:	out    0xc0,al
  4152c8:	inc    eax
  4152c9:	sbb    BYTE PTR [ebp-0xac7a1bf],bl
  4152cf:	outs   dx,DWORD PTR ds:[esi]
  4152d0:	mov    ebp,DWORD PTR [ecx+ecx*2]
  4152d3:	jae    0x4152fc
  4152d5:	arpl   bx,ax
  4152d7:	xchg   ecx,eax
  4152d8:	fcom   QWORD PTR [eax]
  4152da:	adc    al,0xac
  4152dc:	xor    DWORD PTR [ecx],edi
  4152de:	xchg   esi,eax
  4152df:	xor    BYTE PTR [ebx+0x403653a5],0xa
  4152e6:	jns    0x41532d
  4152e8:	jae    0x41535a
  4152ea:	push   esp
  4152eb:	pop    ds
  4152ec:	jmp    0xd635:0xe6d152fe
  4152f3:	mov    eax,ds:0x847f44ed
  4152f8:	fidivr DWORD PTR [edi]
  4152fa:	sbb    DWORD PTR [edx+0x2],eax
  4152fd:	jg     0x4152dd
  4152ff:	repz add eax,0x254817ca
  415305:	push   ds
  415306:	push   0xffffff80
  415308:	dec    edi
  415309:	pop    eax
  41530a:	jle    0x41528d
  41530c:	hlt    
  41530d:	js     0x415308
  41530f:	sub    DWORD PTR [ecx],esp
  415311:	xchg   edi,eax
  415312:	clc    
  415313:	pop    eax
  415314:	xchg   esp,eax
  415315:	in     eax,dx
  415316:	lock inc ebp
  415318:	mov    ebx,0x73086d90
  41531d:	enter  0x6147,0xe5
  415321:	cmp    cl,BYTE PTR [esi]
  415323:	into   
  415324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415325:	fyl2x  
  415327:	(bad)  
  415328:	pop    edx
  415329:	and    eax,0xeb32826f
  41532e:	cmc    
  41532f:	mov    cl,0xfd
  415331:	mov    ch,0x9c
  415333:	adc    dh,BYTE PTR ds:0x731ec4e6
  415339:	es or  eax,0x1724267
  41533f:	ins    BYTE PTR es:[edi],dx
  415340:	leave  
  415341:	jge    0x415350
  415343:	test   eax,0x4213dad8
  415348:	xchg   BYTE PTR [ecx],dh
  41534a:	adc    eax,0xebef7fa1
  41534f:	jge    0x41536e
  415351:	fucomp st(3)
  415353:	lock mov al,0xd3
  415356:	pushf  
  415357:	mul    BYTE PTR [esi-0xb55c466]
  41535d:	rcl    BYTE PTR [esp+esi*2+0x1d95c4b1],1
  415364:	std    
  415365:	ins    DWORD PTR es:[edi],dx
  415366:	jnp    0x415399
  415368:	hlt    
  415369:	je     0x4153c1
  41536b:	push   cs
  41536c:	pop    ss
  41536d:	mov    esi,DWORD PTR [ecx-0x1d5b9076]
  415373:	inc    edx
  415374:	adc    bh,BYTE PTR [esp+esi*8+0x5d]
  415378:	loope  0x415357
  41537a:	sub    bl,BYTE PTR [ecx-0x4]
  41537d:	dec    esi
  41537e:	pushf  
  41537f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415380:	xlat   BYTE PTR ds:[ebx]
  415381:	ja     0x415392
  415383:	cmp    eax,0x4891f8eb
  415388:	out    dx,eax
  415389:	mov    WORD PTR [esi+0x5],fs
  41538c:	and    eax,0x4f3b4e5b
  415391:	xor    al,0xc8
  415393:	dec    esp
  415394:	jmp    0x415343
  415396:	pop    eax
  415397:	inc    ebx
  415398:	mov    dh,0xec
  41539a:	lods   al,BYTE PTR gs:[esi]
  41539c:	pop    esi
  41539d:	xor    eax,0xaac5b1ef
  4153a2:	cmp    ch,bl
  4153a4:	and    al,0xdc
  4153a6:	stos   DWORD PTR es:[edi],eax
  4153a7:	mov    esi,0xa8e113a6
  4153ac:	popf   
  4153ad:	xor    esp,DWORD PTR [edx-0x101a9437]
  4153b3:	and    DWORD PTR [esi+0x6098e373],edx
  4153b9:	push   ebp
  4153ba:	and    ch,ah
  4153bc:	loope  0x415383
  4153be:	mov    ds:0x696cd46,eax
  4153c3:	sbb    eax,DWORD PTR [ebp-0x4e6927e2]
  4153c9:	daa    
  4153ca:	sub    BYTE PTR [edx+0x5a],dl
  4153cd:	int    0x95
  4153cf:	hlt    
  4153d0:	push   edi
  4153d1:	or     bl,BYTE PTR [ecx+0xe33099d]
  4153d7:	scas   eax,DWORD PTR es:[edi]
  4153d8:	retf   
  4153d9:	inc    esp
  4153da:	xchg   ebp,eax
  4153db:	pop    ebp
  4153dc:	inc    edx
  4153dd:	adc    ecx,ebp
  4153df:	push   0xe6397d9a
  4153e4:	call   0x9dfe6f60
  4153e9:	mov    edi,0xb9d54e3
  4153ee:	fcomip st,st(3)
  4153f0:	push   edx
  4153f1:	inc    edx
  4153f2:	es push 0xffffffa0
  4153f5:	js     0x41541c
  4153f7:	xchg   al,bh
  4153f9:	sub    ch,dl
  4153fb:	jns    0x4153c3
  4153fd:	mov    edx,0xd3e36323
  415402:	dec    edx
  415403:	mov    ch,0xfe
  415405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415406:	pop    ds
  415407:	cld    
  415408:	aas    
  415409:	icebp  
  41540a:	test   eax,0xeb459529
  41540f:	jns    0x4153bd
  415411:	lods   eax,DWORD PTR ds:[esi]
  415412:	mov    ecx,0x60f3408c
  415417:	cmp    eax,0x2268057
  41541d:	jle    0x415423
  41541f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415420:	and    BYTE PTR [eax-0x5e3c98cf],dl
  415426:	jae    0x4153eb
  415428:	jge    0x4153fb
  41542a:	lahf   
  41542b:	lods   eax,DWORD PTR ds:[esi]
  41542c:	mov    ebp,DWORD PTR [edi]
  41542e:	cmp    DWORD PTR [eax-0x7f],edx
  415431:	push   esi
  415432:	jmp    0x95afc4dc
  415437:	popf   
  415438:	in     eax,dx
  415439:	test   BYTE PTR [eax+0x3c1293bb],ch
  41543f:	jnp    0x415478
  415441:	xchg   DWORD PTR [esi+0x61bd5e15],esp
  415447:	xor    eax,0x7cfec5cd
  41544c:	and    ebp,esp
  41544e:	inc    BYTE PTR [edi+0x36f127c]
  415454:	cmp    DWORD PTR [edi-0x39],0x2
  415458:	adc    DWORD PTR [edi+0x33],0x56
  41545c:	int3   
  41545d:	test   BYTE PTR es:[ecx+0x6bc17b08],dl
  415464:	es leave 
  415466:	in     eax,0x92
  415468:	dec    edx
  415469:	adc    BYTE PTR [eax-0x629f2051],0xea
  415470:	(bad)  
  415471:	push   eax
  415472:	xchg   BYTE PTR [ebx],ch
  415474:	inc    esi
  415475:	lods   eax,DWORD PTR ds:[esi]
  415476:	iret   
  415477:	fidiv  WORD PTR [edx-0x7b]
  41547a:	pop    esi
  41547b:	in     al,dx
  41547c:	pcmpeqw mm7,QWORD PTR [edi]
  41547f:	adc    ch,BYTE PTR [esi]
  415481:	inc    esi
  415482:	push   0xffffff9b
  415484:	das    
  415485:	mov    eax,ds:0xa249ac97
  41548a:	push   edi
  41548b:	bound  edx,QWORD PTR [ebp-0x3f6dce61]
  415491:	and    DWORD PTR [ebp+0x37],0x101d8e2b
  415498:	jp     0x415435
  41549a:	jmp    0x415501
  41549c:	pushf  
  41549d:	lock cmp DWORD PTR [eax+0x3bbf68a0],0x24
  4154a5:	scas   eax,DWORD PTR es:[edi]
  4154a6:	add    eax,0xb8feac86
  4154ab:	jmp    0x655d2e52
  4154b0:	out    0xda,eax
  4154b2:	mov    ecx,0x234a6957
  4154b7:	or     ebx,esp
  4154b9:	lea    ecx,[ebp-0x56f8b7e1]
  4154bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c0:	inc    esp
  4154c1:	call   0xcb0c:0x1e80a2c9
  4154c8:	and    bl,al
  4154ca:	ss out 0xc2,al
  4154cd:	mov    bh,0x32
  4154cf:	push   edx
  4154d0:	in     al,0x72
  4154d2:	(bad)  
  4154d3:	dec    ebx
  4154d4:	dec    esi
  4154d5:	xchg   esi,eax
  4154d6:	ret    
  4154d7:	mov    DWORD PTR [esi+0x7e],ecx
  4154da:	mov    eax,ds:0x4a2de299
  4154df:	cmp    al,0xea
  4154e1:	std    
  4154e2:	in     al,0xcd
  4154e4:	into   
  4154e5:	or     DWORD PTR [esi],0xffffffb2
  4154e8:	lock sbb eax,0x5e7d83d9
  4154ee:	push   0x820e52d3
  4154f3:	rol    BYTE PTR [eax+eax*4],0xf8
  4154f7:	and    esp,DWORD PTR [edi+0x13c55691]
  4154fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fe:	sub    eax,esi
  415500:	or     esp,ecx
  415502:	or     BYTE PTR [eax+eiz*8],ah
  415505:	push   es
  415506:	stos   DWORD PTR es:[edi],eax
  415507:	mov    edi,DWORD PTR [edx+0x60]
  41550a:	test   al,0x35
  41550d:	mov    bl,0x62
  41550f:	loopne 0x4154d2
  415511:	cli    
  415512:	stos   BYTE PTR es:[edi],al
  415513:	mov    ecx,0xbd4a3451
  415518:	jne    0x4154f7
  41551a:	fbstp  TBYTE PTR [edx]
  41551c:	inc    ecx
  41551d:	mov    edx,ebp
  41551f:	mov    esi,0xeaabd96f
  415524:	jmp    0x41558c
  415526:	or     DWORD PTR [eax-0x7c771d82],ecx
  41552c:	(bad)  
  41552d:	loopne 0x415562
  41552f:	enter  0x42f5,0x9c
  415533:	int    0x3c
  415535:	das    
  415536:	adc    DWORD PTR [ebp+0x29],0x74
  41553a:	mov    ebx,DWORD PTR [ecx+0x29bdd385]
  415540:	jmp    0x36798698
  415545:	stos   DWORD PTR es:[edi],eax
  415546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415547:	call   0x6be:0x4d2342b1
  41554e:	jae    0x41553d
  415550:	mov    al,0x54
  415552:	push   esp
  415553:	ja     0x4155a0
  415555:	test   al,0x18
  415557:	push   edi
  415558:	stos   DWORD PTR es:[edi],eax
  415559:	or     al,BYTE PTR [ebx-0x7a4e6f7b]
  41555f:	adc    eax,0xd8917df1
  415564:	mov    ch,dh
  415566:	jns    0x4154f5
  415568:	mov    al,0xb8
  41556a:	fst    QWORD PTR [esi+0x6]
  41556d:	sbb    al,0xae
  41556f:	neg    BYTE PTR [edx+0x27983775]
  415575:	test   al,0xe9
  415577:	int3   
  415578:	scas   eax,DWORD PTR es:[edi]
  415579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557a:	jl     0x415549
  41557c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41557d:	inc    edx
  41557e:	fs ja  0x415508
  415581:	out    0xa6,eax
  415583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415584:	fstp   st(4)
  415586:	out    dx,eax
  415587:	mov    esi,0x991df0a8
  41558c:	sub    BYTE PTR [esi-0x2],ah
  41558f:	(bad)  
  415591:	cli    
  415592:	mov    BYTE PTR [esi+0x57cab67f],dh
  415598:	pop    esp
  415599:	div    DWORD PTR [edi-0x5d]
  41559c:	adc    ebx,0x9733f36e
  4155a2:	adc    al,0x65
  4155a4:	ficom  DWORD PTR [eax-0xf]
  4155a7:	sub    dh,BYTE PTR [eax]
  4155a9:	js     0x41556b
  4155ab:	jle    0x41560c
  4155ad:	pushf  
  4155ae:	mov    WORD PTR [edi],?
  4155b0:	(bad)  
  4155b1:	adc    DWORD PTR [edi+eax*1+0x72],ebx
  4155b5:	xlat   BYTE PTR ds:[ebx]
  4155b6:	ret    0x473e
  4155b9:	sbb    eax,0x46408915
  4155be:	jo     0x415549
  4155c0:	jmp    0x2112a772
  4155c5:	or     bh,BYTE PTR ds:0x88ccd13e
  4155cb:	and    eax,0x44082614
  4155d0:	sub    eax,0xac2a46d1
  4155d5:	(bad)  ds:[esp+eiz*8+0x33]
  4155da:	ja     0x4155db
  4155dc:	and    BYTE PTR [edx+0x4a],ah
  4155df:	mov    cl,0x76
  4155e1:	cmp    DWORD PTR [edi+0x1b281ba9],ebp
  4155e7:	xchg   edx,eax
  4155e8:	push   cs
  4155e9:	test   DWORD PTR [edx],0xbe55dba9
  4155ef:	adc    ecx,DWORD PTR [eax]
  4155f1:	and    BYTE PTR [edx+ebx*8],bl
  4155f4:	pop    es
  4155f5:	or     edx,DWORD PTR [esi+ebx*4+0x72]
  4155f9:	jge    0x415655
  4155fb:	or     BYTE PTR [eax-0x36],0x51
  4155ff:	pop    esi
  415600:	(bad)  
  415601:	jns    0x4155e6
  415603:	sub    BYTE PTR [ebp+0x7abf165c],bl
  415609:	mov    dl,0x33
  41560b:	pop    esi
  41560c:	rcl    BYTE PTR [ebx],1
  41560e:	rol    BYTE PTR [edx],0x9d
  415611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415612:	ss out 0x78,eax
  415615:	add    edi,esi
  415617:	out    dx,eax
  415618:	inc    esp
  415619:	inc    esp
  41561a:	in     al,dx
  41561b:	sub    DWORD PTR [edi+0x60],ebx
  41561e:	dec    ecx
  41561f:	test   DWORD PTR [esi+0x2f532f26],ebx
  415625:	fwait
  415626:	jmp    0x415614
  415628:	shl    BYTE PTR [eax],cl
  41562a:	cmp    dl,BYTE PTR [esi+eax*1+0x8]
  41562e:	push   ss
  41562f:	dec    BYTE PTR [edx+0x7c55557]
  415635:	lods   eax,DWORD PTR ds:[esi]
  415636:	shr    DWORD PTR [esp+edi*1+0x53],cl
  41563a:	mov    bl,0xfa
  41563c:	and    eax,0xe27e1e76
  415641:	mov    ebp,0xd2633566
  415646:	push   ss
  415647:	push   eax
  415648:	out    0xbc,al
  41564a:	mov    ebx,0xc69b9ab4
  41564f:	dec    ebx
  415650:	sbb    dl,BYTE PTR ds:0x708380e
  415656:	xchg   BYTE PTR [ebx+0x65],ch
  415659:	cs pop edi
  41565b:	inc    eax
  41565c:	nop
  41565d:	lods   al,BYTE PTR ds:[esi]
  41565e:	mov    esp,0x90ca3213
  415663:	fistp  WORD PTR [eax]
  415665:	mov    ds:0xe1927cdc,eax
  41566a:	sub    BYTE PTR [ebx],0x49
  41566d:	fidiv  DWORD PTR [ecx+0x37c4c6ae]
  415673:	inc    ecx
  415674:	sbb    eax,0xd72b5063
  415679:	fidivr WORD PTR [esi-0x1e]
  41567c:	clc    
  41567d:	and    BYTE PTR [eax-0x4c],bl
  415680:	sbb    BYTE PTR [ecx-0x7],ah
  415683:	push   eax
  415684:	push   ebp
  415685:	cwde   
  415686:	push   ds
  415687:	mov    ebx,0x4b258
  41568c:	mov    cs,WORD PTR [ebx+edi*8-0x6813dafa]
  415693:	out    0x99,al
  415695:	xchg   edx,eax
  415696:	in     eax,dx
  415697:	jbe    0x4156d1
  415699:	je     0x415641
  41569b:	mov    al,ds:0x3ffe2dbb
  4156a0:	or     eax,0x287cd2f0
  4156a5:	fld    st(3)
  4156a7:	pop    ecx
  4156a8:	leave  
  4156a9:	mov    ecx,0x27b38bbf
  4156ae:	add    eax,0x721f054f
  4156b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b4:	add    esi,DWORD PTR [ecx+0x7d2a120e]
  4156ba:	inc    ebx
  4156bb:	fdiv   st(5),st
  4156bd:	ret    0x3b80
  4156c0:	push   es
  4156c1:	inc    edx
  4156c2:	shl    ebp,1
  4156c4:	bound  ecx,QWORD PTR [ebx]
  4156c6:	sbb    al,0x42
  4156c8:	pop    ds
  4156c9:	loope  0x4156d7
  4156cb:	inc    ebx
  4156cc:	or     esp,edi
  4156ce:	mov    ebp,ebp
  4156d0:	push   es
  4156d1:	test   bh,dh
  4156d3:	test   al,dh
  4156d5:	(bad)  
  4156d6:	adc    eax,0x9faef6db
  4156db:	retf   0x43e5
  4156de:	sti    
  4156df:	cmp    ebx,DWORD PTR [ecx+0xba2230c]
  4156e5:	pop    edx
  4156e6:	xor    al,0xf3
  4156e8:	mov    edi,0x1d0a2430
  4156ed:	cmp    ecx,DWORD PTR [esp+eax*8-0xa8a9d06]
  4156f4:	not    al
  4156f6:	cmc    
  4156f7:	push   eax
  4156f8:	mov    dh,dl
  4156fa:	leave  
  4156fb:	sti    
  4156fc:	add    eax,0x46a6e51f
  415701:	add    eax,0xeb0c0706
  415706:	retf   
  415707:	jle    0x41573e
  415709:	mov    dl,0x6b
  41570b:	mov    esp,DWORD PTR [ebx+0x67bf2e31]
  415711:	sub    BYTE PTR [ecx+0x75],al
  415714:	mov    ds:0x5a5adb75,al
  415719:	dec    edx
  41571a:	mov    DWORD PTR [edi],esp
  41571c:	mov    ch,BYTE PTR [ebp-0x565e438d]
  415722:	shr    BYTE PTR [ecx+esi*8+0x30],cl
  415726:	scas   eax,DWORD PTR es:[edi]
  415727:	mov    ebx,0xbb856ee8
  41572c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572d:	cli    
  41572e:	mov    ah,ah
  415730:	popa   
  415731:	ss xchg ebp,eax
  415733:	push   cs
  415734:	div    DWORD PTR ds:0x427a97e7
  41573a:	popf   
  41573b:	mov    esi,0xb6dc79f4
  415740:	ja     0x415741
  415742:	push   es
  415743:	(bad)  
  415744:	dec    edi
  415745:	dec    edx
  415746:	leave  
  415747:	inc    esi
  415748:	xchg   DWORD PTR gs:[eax],ebp
  41574b:	sbb    DWORD PTR ds:0xfc0f458a,ebp
  415751:	mov    ah,0xfa
  415753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415754:	in     eax,dx
  415755:	dec    edi
  415756:	sub    BYTE PTR [edx+0x5a],al
  415759:	mov    esi,0xb5f82cb5
  41575e:	sar    BYTE PTR [eax-0x38],1
  415761:	std    
  415762:	jo     0x415719
  415764:	adc    BYTE PTR [esp+edi*1+0x50],cl
  415768:	mov    al,ds:0x609c3ee3
  41576d:	in     eax,dx
  41576e:	rcr    BYTE PTR [edx+0x16],1
  415771:	cmp    eax,0x594c75d8
  415776:	std    
  415777:	ins    DWORD PTR es:[edi],dx
  415778:	add    DWORD PTR ds:0xef0a877c,ebx
  41577e:	(bad)  
  41577f:	call   0x8e00:0xf7ad28a5
  415786:	imul   DWORD PTR [edx-0x7ac36cd1]
  41578c:	popa   
  41578d:	popf   
  41578e:	retf   0xe204
  415791:	xor    esi,DWORD PTR gs:[edx]
  415794:	fcom   QWORD PTR [edx-0xb2a5b7]
  41579a:	into   
  41579b:	adc    cl,bh
  41579d:	or     al,0x58
  41579f:	jae    0x41579d
  4157a1:	int3   
  4157a2:	push   esi
  4157a3:	(bad)  
  4157a5:	jle    0x415754
  4157a7:	push   edi
  4157a8:	scas   eax,DWORD PTR es:[edi]
  4157a9:	push   eax
  4157aa:	cli    
  4157ab:	mov    esi,esi
  4157ad:	xor    ah,al
  4157af:	xchg   ebp,eax
  4157b0:	or     eax,0x13d01eb4
  4157b5:	retf   0x6263
  4157b8:	mov    ch,0x8
  4157ba:	jmp    0x8be4:0x2b5a6fe3
  4157c1:	cli    
  4157c2:	mov    al,ds:0xd99bd5ff
  4157c7:	scas   al,BYTE PTR es:[edi]
  4157c8:	lds    ebp,FWORD PTR [ebx-0x34]
  4157cb:	push   esi
  4157cc:	aam    0x6
  4157ce:	cmp    eax,0x1c75c929
  4157d3:	push   edi
  4157d4:	aas    
  4157d5:	mov    bl,ah
  4157d7:	xchg   esp,eax
  4157d8:	test   al,0xe8
  4157da:	mov    al,ds:0x227109f0
  4157df:	gs dec edi
  4157e1:	inc    edx
  4157e2:	sub    BYTE PTR [edx],bl
  4157e4:	add    BYTE PTR [ecx-0x4c52c3d5],dl
  4157ea:	(bad)  
  4157ec:	stos   DWORD PTR es:[edi],eax
  4157ed:	xchg   edi,eax
  4157ee:	or     BYTE PTR [edi-0x3a],bh
  4157f1:	pop    ds
  4157f2:	fidivr DWORD PTR [eax+ebx*8]
  4157f5:	push   ebx
  4157f6:	mov    DWORD PTR [ebx],esp
  4157f8:	xchg   ecx,eax
  4157f9:	stos   DWORD PTR es:[edi],eax
  4157fa:	rol    BYTE PTR [esi+0x12],cl
  4157fd:	cmp    DWORD PTR [edx],eax
  4157ff:	push   ss
  415800:	pop    eax
  415801:	add    DWORD PTR [ebp-0xc],edi
  415804:	mov    WORD PTR [ebp+0x2b],es
  415807:	test   eax,0xf36b9bef
  41580c:	lds    edx,FWORD PTR [edx-0x2f]
  41580f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415810:	and    cl,BYTE PTR [eax]
  415812:	xchg   ebx,eax
  415813:	mov    eax,ds:0x772cc716
  415818:	or     BYTE PTR ds:0xb464c5f,0x8b
  41581f:	pop    eax
  415820:	icebp  
  415821:	rol    esi,0x92
  415824:	test   BYTE PTR [edx],0x5
  415827:	dec    ebp
  415828:	std    
  415829:	hlt    
  41582a:	push   edx
  41582b:	jmp    0x4157b2
  41582d:	(bad)  
  41582e:	mov    eax,0xca849c51
  415833:	lods   al,BYTE PTR ds:[esi]
  415834:	cmp    eax,0x96888af5
  415839:	ins    DWORD PTR es:[edi],dx
  41583a:	push   ss
  41583b:	fs rcr ecx,cl
  41583e:	retf   
  41583f:	add    dh,cl
  415841:	sahf   
  415842:	push   si
  415844:	div    BYTE PTR [ebx]
  415846:	call   0x9b98552
  41584b:	jo     0x41585d
  41584d:	(bad)  
  41584e:	mov    cl,0x67
  415850:	mov    dh,0x80
  415852:	cmp    ch,ch
  415854:	fadd   DWORD PTR [eax]
  415856:	std    
  415857:	out    0x4,eax
  415859:	push   0xfffffff9
  41585b:	jbe    0x415845
  41585d:	jmp    0x2a0c:0x15320cb0
  415864:	sbb    al,0x97
  415866:	shr    DWORD PTR [edi+ecx*4+0x49],1
  41586a:	fistp  QWORD PTR [eax]
  41586c:	shr    DWORD PTR [eax],cl
  41586e:	pop    edx
  41586f:	int3   
  415870:	dec    edi
  415871:	sysret 
  415873:	cdq    
  415874:	xor    BYTE PTR [ebx-0x2b],0x4a
  415878:	(bad)  
  415879:	lods   al,BYTE PTR ds:[esi]
  41587a:	jmp    0xe7942bba
  41587f:	cs cli 
  415881:	jge    0x415847
  415883:	jp     0x4158d9
  415885:	xchg   ebx,eax
  415886:	in     eax,0xb
  415888:	(bad)  
  415889:	je     0x415893
  41588b:	fnstsw WORD PTR [edx]
  41588d:	pop    esp
  41588e:	add    bh,bh
  415890:	fstp   DWORD PTR [ebx+0x30]
  415893:	call   0x602b:0xe6a5ad5a
  41589a:	adc    al,0x6c
  41589c:	test   ecx,eax
  41589e:	aas    
  41589f:	jl     0x415919
  4158a1:	jbe    0x41588b
  4158a3:	cmp    BYTE PTR [ebx-0xc],ah
  4158a6:	pusha  
  4158a7:	rcr    DWORD PTR [esi],cl
  4158a9:	clts   
  4158ab:	mov    ds:0xb9218964,eax
  4158b0:	test   bh,dh
  4158b2:	inc    edi
  4158b3:	add    BYTE PTR [edi],dl
  4158b5:	sub    ch,ch
  4158b7:	sbb    esp,DWORD PTR [esi]
  4158b9:	inc    ebp
  4158ba:	and    dh,dl
  4158bc:	sbb    DWORD PTR [eax-0x7a],ebx
  4158bf:	xchg   DWORD PTR [ebx+0x37247596],ecx
  4158c5:	cld    
  4158c6:	addr16 push 0xffffffef
  4158c9:	(bad)  
  4158ca:	cmp    al,BYTE PTR [edi-0x8]
  4158cd:	xor    BYTE PTR [ecx],dh
  4158cf:	mov    edx,0x9e605496
  4158d4:	outs   dx,DWORD PTR ds:[esi]
  4158d5:	pop    ebp
  4158d6:	sbb    eax,0x4f7f92f9
  4158db:	ret    
  4158dc:	dec    esp
  4158dd:	inc    edi
  4158de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158df:	jg     0x4158e7
  4158e1:	arpl   WORD PTR [ebx],dx
  4158e3:	mov    ds:0xb92323b4,al
  4158e8:	mov    DWORD PTR [edi+eax*2],edx
  4158eb:	push   ss
  4158ec:	mov    bl,0xf2
  4158ee:	adc    eax,edi
  4158f0:	and    bh,bl
  4158f2:	enter  0x3cb8,0xf3
  4158f6:	je     0x415888
  4158f8:	xor    eax,0x7c6c9df
  4158fd:	jnp    0x415936
  4158ff:	sar    ch,0xd0
  415902:	mov    ebp,0x442ad805
  415907:	fwait
  415908:	lahf   
  415909:	lahf   
  41590a:	dec    ecx
  41590b:	xchg   BYTE PTR [ebx+0x7ccf49b6],cl
  415911:	mov    WORD PTR [edi],es
  415913:	xchg   edx,eax
  415914:	mov    BYTE PTR [eax],dl
  415916:	mov    dh,dh
  415918:	(bad)  
  415919:	and    bh,BYTE PTR [ebx+0x4f]
  41591c:	out    dx,al
  41591d:	nop
  41591e:	loop   0x4158a6
  415920:	xor    ch,BYTE PTR [ebx+0x30]
  415923:	sbb    DWORD PTR [eax+ecx*2-0x155077f9],esp
  41592a:	(bad)  
  41592b:	arpl   WORD PTR [edx+edx*8+0x6e],sp
  41592f:	push   ecx
  415930:	push   ds
  415931:	mov    bl,0x5c
  415933:	push   ds
  415934:	add    al,0x4
  415936:	cli    
  415937:	pop    ss
  415938:	dec    edi
  415939:	mov    ebp,0x2591f948
  41593e:	xor    bl,bh
  415940:	(bad)  
  415941:	out    dx,al
  415942:	mov    cl,BYTE PTR [esi]
  415944:	sub    eax,0x391776c0
  415949:	sbb    ebp,DWORD PTR [ecx-0x55]
  41594c:	sbb    al,0x8
  41594e:	mov    ebp,0xc269afc4
  415953:	mov    DWORD PTR [edx+eax*1-0x68],0xd2c932d2
  41595b:	inc    esp
  41595c:	mov    edx,0x750bfea0
  415961:	inc    esi
  415962:	loop   0x41598a
  415964:	mov    dh,0x75
  415966:	pusha  
  415967:	cmp    cl,bh
  415969:	in     eax,0x17
  41596b:	or     DWORD PTR [ecx],edi
  41596d:	pop    es
  41596e:	div    BYTE PTR [eax-0x3b]
  415971:	outs   dx,DWORD PTR ds:[esi]
  415972:	loope  0x415988
  415974:	ins    BYTE PTR es:[edi],dx
  415975:	pop    edi
  415976:	imul   edi
  415978:	nop
  415979:	or     DWORD PTR [eax],ebp
  41597b:	stos   BYTE PTR es:[edi],al
  41597c:	xor    cl,BYTE PTR [ebp-0x3f336da4]
  415982:	sub    al,0xfa
  415984:	ins    DWORD PTR es:[edi],dx
  415985:	fild   DWORD PTR [ecx]
  415987:	aad    0x21
  415989:	add    ebx,ebx
  41598b:	mov    ah,BYTE PTR [ecx+0x57]
  41598e:	adc    al,0x90
  415990:	in     al,0xb6
  415992:	dec    ecx
  415993:	pusha  
  415994:	shl    BYTE PTR [ecx-0x6930abff],1
  41599a:	or     ecx,edi
  41599c:	rol    BYTE PTR [edx-0x4],cl
  41599f:	inc    esp
  4159a0:	mov    ebx,0x65790f81
  4159a5:	ret    
  4159a6:	nop
  4159a7:	push   ss
  4159a8:	dec    esi
  4159a9:	fwait
  4159aa:	cwde   
  4159ab:	pop    edx
  4159ac:	fdiv   QWORD PTR [esi]
  4159ae:	jae    0x4159ed
  4159b0:	or     ebx,DWORD PTR [edx-0x5b]
  4159b3:	sar    DWORD PTR [edi+edx*8],1
  4159b6:	ds sar cl,0xac
  4159ba:	aas    
  4159bb:	bound  edi,QWORD PTR [ebx]
  4159bd:	mov    esp,0x52bbb919
  4159c2:	mov    es,WORD PTR [edx+0x64]
  4159c5:	ret    
  4159c6:	sbb    eax,0xe569eed4
  4159cb:	mov    ch,ch
  4159cd:	xor    BYTE PTR [ecx-0x56],0xec
  4159d1:	cmp    al,0xb3
  4159d3:	mov    DWORD PTR [edi+eax*2-0x32],esi
  4159d7:	and    al,0x27
  4159d9:	pop    ecx
  4159da:	jb     0x415a1b
  4159dc:	lods   eax,DWORD PTR ds:[esi]
  4159dd:	xor    DWORD PTR [edx],0xdec61b40
  4159e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159e4:	jmp    0xda6e:0x7ec99328
  4159eb:	mov    bl,0xb
  4159ed:	dec    ebx
  4159ee:	(bad)  
  4159f0:	loopne 0x4159c5
  4159f2:	dec    ecx
  4159f3:	inc    ebp
  4159f4:	cli    
  4159f5:	bound  ecx,QWORD PTR [edi-0x6d]
  4159f8:	seto   BYTE PTR [ebp+0x30]
  4159fc:	or     DWORD PTR [edx-0x4f],ebp
  4159ff:	out    dx,ax
  415a01:	loop   0x415a45
  415a03:	xchg   DWORD PTR [ecx-0x731033cd],esi
  415a09:	mov    si,0x6377
  415a0d:	add    DWORD PTR [edi+0x51],edi
  415a10:	and    bh,bh
  415a12:	adc    DWORD PTR [eax],eax
  415a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a15:	push   ss
  415a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a17:	jne    0x4159c9
  415a19:	push   esp
  415a1a:	ret    0xf266
  415a1d:	jno    0x415a8c
  415a1f:	xlat   BYTE PTR ds:[ebx]
  415a20:	out    dx,al
  415a21:	sub    ebp,DWORD PTR [esp+esi*2]
  415a24:	bsr    ebp,DWORD PTR [edi-0x5]
  415a28:	lods   al,BYTE PTR ds:[esi]
  415a29:	ret    
  415a2a:	icebp  
  415a2b:	fsubr  QWORD PTR [eax+0x54]
  415a2e:	jne    0x4159e6
  415a30:	clc    
  415a31:	xchg   DWORD PTR [ecx],ebx
  415a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a34:	ror    BYTE PTR [eax+0x72],cl
  415a37:	into   
  415a38:	add    cl,BYTE PTR [ebp+0x452d648c]
  415a3e:	loope  0x415a3b
  415a40:	pop    esp
  415a41:	cmp    DWORD PTR [edx-0x2b],ebx
  415a44:	adc    eax,0x8ee134cf
  415a49:	push   esp
  415a4a:	push   0x6da48675
  415a4f:	jno    0x415a1d
  415a51:	sbb    ah,BYTE PTR [edi]
  415a53:	push   0x72a15a08
  415a58:	cmc    
  415a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5a:	in     al,0xc5
  415a5c:	loopne 0x415a3a
  415a5e:	test   BYTE PTR [ebp-0x3d],cl
  415a61:	(bad)  
  415a62:	jmp    0x415a0f
  415a64:	xchg   edx,eax
  415a65:	xchg   edi,eax
  415a66:	adc    al,0x20
  415a68:	mov    ch,0x8d
  415a6a:	jae    0x4159f9
  415a6c:	pop    ebx
  415a6d:	lods   eax,DWORD PTR ds:[esi]
  415a6e:	sahf   
  415a6f:	popf   
  415a70:	idiv   ebp
  415a72:	xchg   esp,eax
  415a73:	dec    ebp
  415a74:	sbb    DWORD PTR [ecx+esi*8+0x7038f1b2],0x7f33405a
  415a7f:	push   edx
  415a80:	mov    ds:0x1007c7e6,al
  415a85:	dec    ebp
  415a86:	ret    0x91b7
  415a89:	popf   
  415a8a:	pop    ecx
  415a8b:	les    edx,FWORD PTR [esi-0x51]
  415a8e:	pop    ss
  415a8f:	or     al,0xae
  415a91:	and    DWORD PTR [esp+esi*8+0x36d7eb15],edx
  415a98:	frstor [ebx+0x7bdf76c]
  415a9e:	(bad)
  415aa1:	add    DWORD PTR [ebx+0x56],ecx
  415aa4:	or     DWORD PTR [ebx+0x2679e520],ecx
  415aaa:	or     eax,0x1c20b111
  415aaf:	aad    0xfe
  415ab1:	in     al,0xf5
  415ab3:	fmul   DWORD PTR [edx]
  415ab5:	mov    ah,0x6e
  415ab7:	pop    esp
  415ab8:	dec    esi
  415ab9:	sub    DWORD PTR [ebp+0x620ed90e],esp
  415abf:	leave  
  415ac0:	iret   
  415ac1:	int3   
  415ac2:	jns    0x415a5a
  415ac4:	jp     0x415b18
  415ac6:	sbb    bl,BYTE PTR [ebx-0x77a19267]
  415acc:	and    dh,cl
  415ace:	ret    
  415acf:	dec    edi
  415ad0:	xchg   ebp,eax
  415ad1:	(bad)  
  415ad2:	cmp    al,dl
  415ad4:	int3   
  415ad5:	add    eax,DWORD PTR [esi]
  415ad7:	dec    ebp
  415ad8:	ins    DWORD PTR es:[edi],dx
  415ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ada:	cwde   
  415adb:	adc    dl,ah
  415add:	stc    
  415ade:	aaa    
  415adf:	sub    eax,0xb68fe818
  415ae4:	addr16 jmp 0x415b26
  415ae7:	int    0x58
  415ae9:	loopne 0x415b4a
  415aeb:	xchg   dh,dl
  415aed:	add    DWORD PTR [ecx-0x2268c3ca],ebx
  415af3:	mov    ds:0x8e501fa3,eax
  415af8:	dec    ebp
  415af9:	lds    edx,FWORD PTR [eax]
  415afb:	mov    al,BYTE PTR [eax+0x4bb1fa5b]
  415b01:	mov    al,0x97
  415b03:	retf   
  415b04:	or     BYTE PTR [ebx-0xc],bl
  415b07:	pop    ds
  415b08:	jmp    0x8282e06d
  415b0d:	out    dx,eax
  415b0e:	fnstsw WORD PTR [esi+edx*2]
  415b11:	dec    edx
  415b12:	lods   al,BYTE PTR ds:[esi]
  415b13:	mov    bh,0xe1
  415b15:	lods   al,BYTE PTR ds:[esi]
  415b16:	retf   0x5041
  415b19:	aaa    
  415b1a:	popa   
  415b1b:	test   eax,0x1689c4ed
  415b20:	and    DWORD PTR [ebp+0x55fc9a41],eax
  415b26:	pushf  
  415b27:	mov    dh,0xef
  415b29:	lea    ecx,ds:0xb3c70554
  415b2f:	stos   DWORD PTR es:[edi],eax
  415b30:	repz call 0xddf8:0x31cd2dd5
  415b38:	ret    0x3cbf
  415b3b:	dec    edx
  415b3c:	fdivr  QWORD PTR [ebx-0x717dc220]
  415b42:	xchg   esp,eax
  415b43:	ror    ecx,0xcf
  415b46:	push   edx
  415b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b48:	or     DWORD PTR [ebx+0x59],esp
  415b4b:	pop    ebp
  415b4c:	jbe    0x415afe
  415b4e:	xchg   ebx,eax
  415b4f:	jno    0x415bc0
  415b51:	aaa    
  415b52:	test   ebx,eax
  415b54:	mov    edx,0x3b5c5f2d
  415b59:	jmp    0xc20c:0xb8f21fcd
  415b60:	xlat   BYTE PTR ds:[ebx]
  415b61:	data16 fbld TBYTE PTR [edx+ecx*2+0x2b]
  415b66:	rol    DWORD PTR [ecx-0xf694ad6],1
  415b6c:	sbb    al,0x7e
  415b6e:	pop    ebx
  415b6f:	daa    
  415b70:	xchg   ebp,eax
  415b71:	ins    BYTE PTR es:[edi],dx
  415b72:	adc    bl,BYTE PTR [edi]
  415b74:	test   BYTE PTR [eax-0x5d39b800],0x24
  415b7b:	push   esi
  415b7c:	popa   
  415b7d:	mov    dl,0x71
  415b7f:	push   edx
  415b80:	dec    ecx
  415b81:	je     0x415b52
  415b83:	pushf  
  415b84:	adc    BYTE PTR [esi+edx*4],dh
  415b87:	inc    ecx
  415b88:	daa    
  415b89:	xchg   DWORD PTR [edx+ecx*4-0x19],ecx
  415b8d:	aam    0x7e
  415b8f:	xor    al,0x6c
  415b91:	das    
  415b92:	fcomip st,st(2)
  415b94:	jmp    0x2b75:0x1b5aac47
  415b9b:	dec    ebx
  415b9c:	mov    ds,WORD PTR [edi]
  415b9e:	push   ss
  415b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba0:	shl    DWORD PTR [edx],1
  415ba2:	or     dl,bl
  415ba4:	sub    ebp,DWORD PTR [ebx-0x358a2a63]
  415baa:	aam    0x2f
  415bac:	mov    edi,0x1cebf8fb
  415bb1:	lea    esi,[edx+0x4]
  415bb4:	mov    dh,0xfc
  415bb6:	fdivp  st(6),st
  415bb8:	sub    DWORD PTR [ebx-0x2313ce65],ebx
  415bbe:	jne    0x415b9e
  415bc0:	pop    ebx
  415bc1:	add    bl,al
  415bc3:	test   BYTE PTR [ebx+0x5e8b0454],0x4b
  415bca:	pop    esi
  415bcb:	mov    ds:0xb436f850,eax
  415bd0:	out    0xc0,al
  415bd2:	adc    esi,DWORD PTR [edx]
  415bd4:	popf   
  415bd5:	adc    edi,ebx
  415bd7:	dec    edi
  415bd8:	not    BYTE PTR [ebx+0x1f]
  415bdb:	sar    dl,cl
  415bdd:	inc    ebx
  415bde:	rol    BYTE PTR [esi],cl
  415be0:	retf   
  415be1:	dec    ecx
  415be2:	addr16 retf 0x983d
  415be6:	jecxz  0x415c37
  415be8:	or     dh,cl
  415bea:	mov    ch,0x2b
  415bec:	add    esp,ecx
  415bee:	(bad)  
  415bef:	ja     0x415c37
  415bf1:	or     ecx,ebx
  415bf3:	add    BYTE PTR [ecx],dh
  415bf5:	adc    al,0xb3
  415bf7:	test   DWORD PTR [esi+eiz*4-0x719ef40],esi
  415bfe:	xchg   edx,eax
  415bff:	in     al,dx
  415c00:	icebp  
  415c01:	mov    ah,0x81
  415c03:	mov    ds:0x6af0ee5f,eax
  415c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c09:	sub    DWORD PTR [ebx+0x3e9f82a7],esp
  415c0f:	jae    0x415c02
  415c11:	ds mov ch,0xf5
  415c14:	jmp    0xec:0x92ee0c5c
  415c1b:	dec    edx
  415c1c:	mov    ah,0x57
  415c1e:	cmc    
  415c1f:	outs   dx,BYTE PTR ds:[esi]
  415c20:	push   0xd9ca1985
  415c25:	mov    esp,0xf2d58471
  415c2a:	int    0xa9
  415c2c:	dec    eax
  415c2d:	loop   0x415ca4
  415c2f:	call   0xc2b3:0xeba8afd7
  415c36:	mov    esp,0x5d0b5d17
  415c3b:	rcl    ecx,cl
  415c3d:	pop    ebx
  415c3e:	mov    dl,ch
  415c40:	xchg   esp,eax
  415c41:	or     al,0x58
  415c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c44:	push   esp
  415c45:	add    BYTE PTR [esi-0x7bb1be16],bl
  415c4b:	test   eax,0x761c4e3d
  415c50:	mov    ch,0xd1
  415c52:	push   eax
  415c53:	inc    edx
  415c54:	cmp    eax,DWORD PTR [edx+0xdcbbefe]
  415c5a:	outs   dx,BYTE PTR ds:[esi]
  415c5b:	out    0x3e,al
  415c5d:	jae    0x415bee
  415c5f:	mov    ds:0x21e5243,al
  415c64:	pop    ebp
  415c65:	adc    al,0x6f
  415c67:	test   eax,0x691ab32
  415c6c:	stos   BYTE PTR es:[edi],al
  415c6d:	sub    ebx,edi
  415c6f:	add    BYTE PTR [edx-0x59],ah
  415c72:	bound  ecx,QWORD PTR [ebp-0x18]
  415c75:	jbe    0x415cd5
  415c77:	mov    bl,0x59
  415c79:	adc    BYTE PTR ds:0x783b8a66,dl
  415c7f:	pop    edi
  415c80:	out    dx,eax
  415c81:	or     al,0xe9
  415c83:	loope  0x415c54
  415c85:	dec    edx
  415c86:	std    
  415c87:	ss retf 0x50ce
  415c8b:	push   eax
  415c8c:	arpl   WORD PTR [esi],bx
  415c8e:	dec    esi
  415c8f:	cwde   
  415c90:	icebp  
  415c91:	lahf   
  415c92:	xchg   esi,eax
  415c93:	in     eax,0xf2
  415c95:	lea    edi,[ecx*8+0xa541a8f]
  415c9c:	mov    BYTE PTR [esi+0x44],bl
  415c9f:	scas   eax,DWORD PTR es:[edi]
  415ca0:	je     0x415c4f
  415ca2:	push   edi
  415ca3:	mov    dl,0xcd
  415ca5:	movups xmm3,XMMWORD PTR gs:[edx]
  415ca9:	mov    dl,0x54
  415cab:	dec    esi
  415cac:	out    dx,al
  415cad:	mov    cs,edi
  415caf:	mov    edx,0xef28b0cf
  415cb4:	jp     0x415d22
  415cb6:	sbb    dl,dl
  415cb8:	aam    0x45
  415cba:	adc    BYTE PTR [esi-0x2b],ah
  415cbd:	rcr    BYTE PTR [edx-0x67687590],0x4c
  415cc4:	and    DWORD PTR [eax],ebp
  415cc6:	or     DWORD PTR [edi],eax
  415cc8:	xchg   edx,eax
  415cc9:	push   esp
  415cca:	js     0x415cba
  415ccc:	xchg   esi,eax
  415ccd:	in     al,dx
  415cce:	ins    DWORD PTR es:[edi],dx
  415ccf:	xchg   edi,eax
  415cd0:	xor    eax,0xb1722603
  415cd5:	push   esi
  415cd6:	pop    ebx
  415cd7:	jl     0x415d1b
  415cd9:	loopne 0x415d27
  415cdb:	idiv   DWORD PTR ds:[edi]
  415cde:	inc    ecx
  415cdf:	fcmovu st,st(7)
  415ce1:	dec    edx
  415ce2:	arpl   ax,dx
  415ce4:	pop    ebp
  415ce5:	dec    ebx
  415ce6:	mov    ebx,0x4e62807f
  415ceb:	lahf   
  415cec:	jbe    0x415d5c
  415cee:	or     BYTE PTR [ecx+0x385b56be],bh
  415cf4:	xchg   edx,eax
  415cf5:	fst    DWORD PTR [edi+0x752d12f8]
  415cfb:	rcr    dh,0x8
  415cfe:	icebp  
  415cff:	sbb    eax,0x6e6d716
  415d04:	mov    al,0xd3
  415d06:	dec    edi
  415d07:	rcr    BYTE PTR [ecx+0xdc4e25f],0xf6
  415d0e:	arpl   bx,dx
  415d10:	(bad)  
  415d11:	in     al,0xf6
  415d13:	jo     0x415d74
  415d15:	or     dh,BYTE PTR [ecx+0x55]
  415d18:	sti    
  415d19:	popf   
  415d1a:	xchg   ecx,eax
  415d1b:	shr    BYTE PTR [ebp-0x2e],0xc2
  415d1f:	jb     0x415d97
  415d21:	and    DWORD PTR [edx],ebp
  415d23:	lods   al,BYTE PTR ds:[esi]
  415d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d25:	adc    cl,BYTE PTR [edi+0x28]
  415d28:	sub    eax,0x4f43f726
  415d2d:	jg     0x415d23
  415d2f:	pop    eax
  415d30:	fistp  DWORD PTR [edx-0x427e465b]
  415d37:	mov    ah,0x9b
  415d39:	cs out dx,eax
  415d3b:	push   esp
  415d3c:	mov    cl,0x0
  415d3e:	outs   dx,BYTE PTR ds:[esi]
  415d3f:	lods   eax,DWORD PTR ds:[esi]
  415d40:	jmp    0x415d1a
  415d42:	mov    WORD PTR [eax+0x32d3e67e],es
  415d48:	ja     0x415d2b
  415d4a:	pop    edi
  415d4b:	cmp    edx,DWORD PTR [esi+eax*8]
  415d4e:	popa   
  415d4f:	ds dec esp
  415d51:	test   ebp,ecx
  415d53:	pop    eax
  415d54:	push   es
  415d55:	cmp    DWORD PTR [eax],edx
  415d57:	pop    ds
  415d58:	adc    BYTE PTR [edi+0xd3145d0],ah
  415d5e:	es pop ss
  415d60:	div    DWORD PTR [ebp+0x3d]
  415d63:	sbb    eax,0x3c534b51
  415d68:	das    
  415d69:	pop    edx
  415d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d6b:	sahf   
  415d6c:	out    0x7d,eax
  415d6e:	push   esp
  415d6f:	mov    esi,0xc58def66
  415d74:	sub    dl,BYTE PTR [eax-0x62]
  415d77:	shl    DWORD PTR [esi-0x1cbef5a0],0x75
  415d7e:	pop    ss
  415d7f:	pop    ebp
  415d80:	fld    TBYTE PTR [edx-0x4f]
  415d83:	addr16 mov bh,0xf3
  415d86:	retf   0x62c5
  415d89:	aaa    
  415d8a:	rcr    BYTE PTR ds:0x3c1f2df4,cl
  415d90:	sbb    esp,eax
  415d92:	test   eax,0xc21c3462
  415d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d98:	sar    BYTE PTR [ebx],cl
  415d9a:	popf   
  415d9b:	(bad)  
  415d9c:	faddp  st(0),st
  415d9e:	pop    edi
  415d9f:	rcl    DWORD PTR [ecx+esi*2-0x731cea13],cl
  415da6:	adc    esi,DWORD PTR [eax+0x5bfd89b0]
  415dac:	mov    DWORD PTR [ebp+0x12e2b298],ebx
  415db2:	cli    
  415db3:	hlt    
  415db4:	push   edi
  415db5:	dec    ebp
  415db6:	sub    DWORD PTR [edi+0x48d1d128],ecx
  415dbc:	retf   
  415dbd:	pop    edi
  415dbe:	sahf   
  415dbf:	stos   DWORD PTR es:[edi],eax
  415dc0:	adc    al,0xa6
  415dc2:	rcl    DWORD PTR [ecx+0x43946ef5],1
  415dc8:	dec    ebp
  415dc9:	mov    es,WORD PTR [ebx-0x2a]
  415dcc:	dec    edx
  415dcd:	fcmovnb st,st(5)
  415dcf:	loope  0x415e05
  415dd1:	push   esp
  415dd2:	push   edi
  415dd3:	mov    ebp,fs
  415dd5:	fimul  WORD PTR [edx-0x1fa2317f]
  415ddb:	adc    eax,0x6f2e85de
  415de0:	or     esp,DWORD PTR [eax-0x21]
  415de3:	aad    0x20
  415de5:	add    dh,dl
  415de7:	adc    ch,dh
  415de9:	rcr    ah,0x16
  415dec:	and    al,0xd9
  415dee:	test   al,0x60
  415df0:	cmp    BYTE PTR ds:0x6a58dd76,0xc0
  415df7:	mov    ah,0xe7
  415df9:	mov    eax,0xab1d7aab
  415dfe:	imul   ebx,DWORD PTR [ecx-0x79ac6423],0x3b
  415e05:	push   cs
  415e06:	lods   al,BYTE PTR ds:[esi]
  415e07:	jl     0x415e78
  415e09:	outs   dx,BYTE PTR ds:[esi]
  415e0a:	retf   0x3b92
  415e0d:	jne    0x415e30
  415e0f:	xor    eax,0xb26fe39b
  415e14:	add    eax,0x1ada1bf6
  415e19:	mov    ch,0xb0
  415e1b:	sub    dh,dh
  415e1d:	daa    
  415e1e:	(bad)  
  415e1f:	fcmovnbe st,st(1)
  415e21:	mov    edx,0xc162a793
  415e26:	mov    WORD PTR [ebp+0x2e],ss
  415e29:	rol    DWORD PTR [ebp-0x40],0x82
  415e2d:	jae    0x415e74
  415e2f:	cmp    al,0xfe
  415e31:	mov    ecx,0x6b7c3dd3
  415e36:	hlt    
  415e37:	mov    ah,0xe3
  415e39:	pop    edx
  415e3a:	popa   
  415e3b:	mov    dh,0x64
  415e3d:	dec    ecx
  415e3e:	sub    eax,0x53682b32
  415e43:	aaa    
  415e44:	dec    esi
  415e45:	cmp    ebp,DWORD PTR [edx]
  415e47:	dec    edi
  415e48:	add    eax,0x4da5ba8b
  415e4d:	loop   0x415e5e
  415e4f:	scas   eax,DWORD PTR es:[edi]
  415e50:	jle    0x415e40
  415e52:	jmp    0x4419:0xa7b9270f
  415e59:	dec    edi
  415e5a:	xor    DWORD PTR [eax+0x4e],ebx
  415e5d:	nop
  415e5e:	(bad)  
  415e5f:	retf   0x54aa
  415e62:	xlat   BYTE PTR ds:[ebx]
  415e63:	mov    ds:0x6e123eb9,al
  415e68:	xchg   BYTE PTR ds:0x595c4e34,ch
  415e6e:	sbb    edi,ecx
  415e70:	xor    bh,dl
  415e72:	addr16 int3 
  415e74:	mov    DWORD PTR [ecx+edx*4+0x44],esp
  415e78:	imul   DWORD PTR [edi+edi*1-0x45]
  415e7c:	lds    eax,FWORD PTR [edx+0x69858a6b]
  415e82:	outs   dx,BYTE PTR ds:[esi]
  415e83:	ret    0x1efe
  415e86:	stc    
  415e87:	cli    
  415e88:	xchg   esp,eax
  415e89:	dec    edi
  415e8a:	rol    BYTE PTR cs:[edi-0xbcb26e],cl
  415e91:	sti    
  415e92:	inc    ebx
  415e93:	mov    esp,0x32f7df20
  415e98:	popa   
  415e99:	xchg   ebp,eax
  415e9a:	scas   eax,DWORD PTR es:[edi]
  415e9b:	xchg   edi,eax
  415e9c:	sub    eax,0xb5247585
  415ea1:	lea    esp,[esi-0x29]
  415ea4:	lods   eax,DWORD PTR ds:[esi]
  415ea5:	mov    ch,0xc7
  415ea7:	aaa    
  415ea8:	retf   0x17b7
  415eab:	or     esi,DWORD PTR [ecx]
  415ead:	gs scas al,BYTE PTR es:[edi]
  415eaf:	jb     0x415e5d
  415eb1:	inc    ecx
  415eb2:	ss xchg esp,eax
  415eb4:	xor    ah,cl
  415eb6:	fwait
  415eb7:	mov    al,ds:0xff75e1c
  415ebc:	add    eax,0x1fdf4142
  415ec1:	adc    bl,BYTE PTR [edi+0x28]
  415ec4:	mov    edi,0xd942b0d3
  415ec9:	sub    al,0x94
  415ecb:	sti    
  415ecc:	repz mov ch,0x94
  415ecf:	jl     0x415e82
  415ed1:	mov    DWORD PTR ds:0x13c2e9dd,0x96663bc9
  415edb:	dec    ebx
  415edc:	out    0x44,al
  415ede:	adc    eax,0xc1217875
  415ee3:	fidiv  WORD PTR [edx-0x10]
  415ee6:	jo     0x415f49
  415ee8:	pop    ebp
  415ee9:	aaa    
  415eea:	iret   
  415eeb:	fcmovnu st,st(0)
  415eed:	mov    ds:0x9117bb9e,al
  415ef2:	push   esp
  415ef3:	stos   DWORD PTR es:[edi],eax
  415ef4:	(bad)  
  415ef5:	stc    
  415ef6:	pop    ecx
  415ef7:	arpl   WORD PTR [ebx],sp
  415ef9:	push   ebp
  415efa:	stc    
  415efb:	push   ebp
  415efc:	cmc    
  415efd:	addr16 jge 0x415f66
  415f00:	les    eax,FWORD PTR [esp+edi*2]
  415f03:	pop    ebp
  415f04:	jle    0x415f5c
  415f06:	jle    0x415ea7
  415f08:	mov    edx,0xdf04c64a
  415f0d:	push   ecx
  415f0e:	pop    ecx
  415f0f:	aad    0xe4
  415f11:	lock jb 0x415ef6
  415f14:	mov    dl,cl
  415f16:	mov    al,0x29
  415f18:	(bad)  
  415f1a:	mov    edx,0x87e0405c
  415f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f20:	fsubrp st(6),st
  415f22:	je     0x415f78
  415f24:	leave  
  415f25:	mov    esp,0x9abce393
  415f2a:	pop    edi
  415f2b:	mov    ebp,0x7bb050e
  415f30:	iret   
  415f31:	sbb    esi,DWORD PTR [edx+0x4f]
  415f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f35:	loop   0x415eea
  415f37:	jmp    0x1a308f4
  415f3c:	fisttp QWORD PTR [ebx-0x26c326f5]
  415f42:	mov    edi,0x537e96c0
  415f47:	dec    edi
  415f48:	(bad)  
  415f49:	lahf   
  415f4a:	out    dx,al
  415f4b:	add    eax,0x6d8bc28d
  415f50:	fistp  DWORD PTR [ebx-0x1e]
  415f53:	sahf   
  415f54:	mov    WORD PTR [edi-0x7fe9784b],gs
  415f5a:	jge    0x415f47
  415f5c:	pop    edx
  415f5d:	dec    eax
  415f5e:	sbb    al,0x3f
  415f60:	xor    esp,DWORD PTR [ecx-0x190eec2e]
  415f66:	mov    ebp,0x39c5c135
  415f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6d:	hlt    
  415f6e:	aas    
  415f6f:	add    al,0x4d
  415f71:	or     DWORD PTR [esi-0x65],edx
  415f74:	in     eax,0x53
  415f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f77:	or     eax,0x5ab1b5d1
  415f7c:	mov    eax,ds:0xe41b9554
  415f81:	sbb    eax,0x8811751d
  415f86:	and    esp,ebx
  415f88:	inc    esi
  415f89:	or     BYTE PTR [edi],bl
  415f8b:	xor    dl,BYTE PTR [eax+0x25]
  415f8e:	test   DWORD PTR [esi-0x1b8762fd],esp
  415f94:	sbb    eax,0xb633f027
  415f99:	aad    0x17
  415f9b:	fmul   DWORD PTR [ebp+eax*2+0x7]
  415f9f:	cmp    cl,BYTE PTR [ebp+0x254df267]
  415fa5:	xchg   esp,eax
  415fa6:	out    0xbc,eax
  415fa8:	sbb    DWORD PTR [edx],edi
  415faa:	mov    edi,0x480441e8
  415faf:	ja     0x415f56
  415fb1:	stos   BYTE PTR es:[edi],al
  415fb2:	hlt    
  415fb3:	xor    eax,0x6e357aa8
  415fb8:	in     eax,dx
  415fb9:	mov    ebx,0x5fdc4fea
  415fbe:	dec    esi
  415fbf:	out    dx,eax
  415fc0:	jg     0x415fc8
  415fc2:	pop    ebp
  415fc3:	and    eax,0x216fcb64
  415fc8:	push   ebp
  415fc9:	mov    edx,0xc07117cb
  415fce:	outs   dx,DWORD PTR ds:[esi]
  415fcf:	dec    ecx
  415fd0:	mov    cl,0x2c
  415fd2:	gs mov edx,0x82f935e1
  415fd8:	(bad)  
  415fd9:	lahf   
  415fda:	sub    ebp,esi
  415fdc:	sub    DWORD PTR [eax+0x37984cf7],eax
  415fe2:	(bad)  
  415fe3:	fbstp  TBYTE PTR [eax+0x7bbb43e4]
  415fe9:	sub    al,0x43
  415feb:	mov    ebp,0xfaa7416c
  415ff0:	mov    ch,0xee
  415ff2:	cdq    
  415ff3:	pop    ebx
  415ff4:	int3   
  415ff5:	cmp    BYTE PTR [edi-0x7d558a7f],bh
  415ffb:	dec    ecx
  415ffc:	hlt    
  415ffd:	add    al,BYTE PTR [edi+0x56]
  416000:	je     0x415fea
  416002:	xor    BYTE PTR [esi-0x2cfa6836],bh
  416008:	int    0xfa
  41600a:	sub    eax,ecx
  41600c:	mov    dl,0x6b
  41600e:	jmp    0x416073
  416010:	arpl   WORD PTR [edx],bx
  416012:	test   al,0xac
  416014:	xchg   bh,ch
  416016:	jmp    FWORD PTR [eax]
  416018:	push   eax
  416019:	int3   
  41601a:	fidiv  DWORD PTR [ecx+ebp*2]
  41601d:	xor    ah,bl
  41601f:	mov    eax,0xc0d45bf0
  416024:	pusha  
  416025:	fadd   DWORD PTR [eax]
  416027:	hlt    
  416028:	je     0x416055
  41602a:	into   
  41602b:	lods   al,BYTE PTR ds:[esi]
  41602c:	imul   edi,edx,0x61
  41602f:	jnp    0x415fec
  416031:	xchg   edi,eax
  416032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416033:	inc    edx
  416034:	call   0x34f03b03
  416039:	push   esp
  41603a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41603b:	push   ebp
  41603c:	mov    esi,0x5d662b5f
  416041:	pop    ecx
  416042:	jmp    0xe30fd6a8
  416047:	cdq    
  416048:	sub    BYTE PTR [ebp+0x59],bl
  41604b:	or     ah,dh
  41604d:	div    DWORD PTR [ebx]
  41604f:	pushf  
  416050:	test   BYTE PTR [edx-0x22],cl
  416053:	out    dx,eax
  416054:	in     eax,dx
  416055:	cmc    
  416056:	into   
  416057:	pop    edx
  416058:	pushf  
  416059:	dec    esi
  41605a:	pop    ecx
  41605b:	lahf   
  41605c:	loopne 0x4160a8
  41605e:	jnp    0x41605c
  416060:	dec    ecx
  416061:	mov    al,0xef
  416063:	xchg   edx,eax
  416064:	test   DWORD PTR [ebx+0x232896a1],0x54064ebf
  41606e:	ret    
  41606f:	ds cmp ah,ah
  416072:	in     eax,0x8a
  416074:	pusha  
  416075:	frstor [eax+0x1f184668]
  41607b:	mov    ecx,0xf527fe53
  416080:	jp     0x4160a3
  416082:	sub    al,0x4e
  416084:	pop    ebx
  416085:	test   DWORD PTR [ebx-0x42f6e1a0],ebx
  41608b:	inc    BYTE PTR [edx+0x38fdae2a]
  416091:	clc    
  416092:	inc    eax
  416093:	mov    esp,0xecff3b6
  416098:	pop    esi
  416099:	or     eax,0x2239bd67
  41609e:	je     0x416110
  4160a0:	push   esp
  4160a1:	or     al,0x50
  4160a3:	in     al,dx
  4160a4:	pop    eax
  4160a5:	xchg   edi,eax
  4160a6:	lods   al,BYTE PTR ds:[esi]
  4160a7:	jmp    0x4160ed
  4160a9:	add    bl,BYTE PTR [edx-0x5ad6befd]
  4160af:	call   0xe6626c37
  4160b4:	mov    esi,0xf70f45a4
  4160b9:	push   ds
  4160ba:	outs   dx,DWORD PTR ds:[esi]
  4160bb:	mov    ds,WORD PTR [esi+eax*4]
  4160be:	(bad)  
  4160bf:	or     al,0x97
  4160c1:	sbb    esp,esp
  4160c3:	inc    ebx
  4160c4:	jmp    0x7da393d9
  4160c9:	loope  0x4160d9
  4160cb:	inc    ecx
  4160cc:	and    ah,BYTE PTR [esi+0x62797272]
  4160d2:	push   edi
  4160d3:	sub    BYTE PTR [eax+esi*1+0x63e34fe8],bh
  4160da:	daa    
  4160db:	push   ebp
  4160dc:	test   eax,0x7940ca35
  4160e1:	repz mul BYTE PTR [esi-0x461669bb]
  4160e8:	mov    ds:0x65a6d6cc,al
  4160ed:	aad    0x1b
  4160ef:	rcl    edx,cl
  4160f1:	push   ds
  4160f2:	fistp  QWORD PTR [ebp-0x19e179a3]
  4160f8:	cmc    
  4160f9:	pop    ebp
  4160fa:	pop    ss
  4160fb:	xor    eax,0xc835002d
  416100:	sbb    DWORD PTR [esi+0x47],ecx
  416103:	iret   
  416104:	ss mov esi,0xb9cf5f6f
  41610a:	pop    ebp
  41610b:	clc    
  41610c:	pop    ds
  41610d:	mov    ah,0x46
  41610f:	mov    edx,0x9b178dc
  416114:	aas    
  416115:	adc    BYTE PTR [ecx],bl
  416117:	xlat   BYTE PTR ds:[ebx]
  416118:	inc    esp
  416119:	pop    esp
  41611a:	pop    edx
  41611b:	in     eax,dx
  41611c:	mov    ch,BYTE PTR [eax+0x38e64810]
  416122:	sub    edx,DWORD PTR [esi-0x39]
  416125:	mov    dl,0x66
  416127:	nop
  416128:	in     al,0xa
  41612a:	mov    ch,0xc3
  41612c:	aad    0x37
  41612e:	imul   ebp,ebx,0x7b
  416131:	cmp    eax,DWORD PTR [ebp*8+0xa9853e7]
  416138:	push   es
  416139:	sbb    DWORD PTR ds:0xca9cc060,esi
  41613f:	adc    BYTE PTR [eax-0x7b],bl
  416142:	mov    bl,0x19
  416144:	jle    0x416177
  416146:	pop    ds
  416147:	clc    
  416148:	ins    DWORD PTR es:[edi],dx
  416149:	xchg   BYTE PTR [edx+ecx*4+0x49682b37],ah
  416150:	es jo  0x4160df
  416153:	inc    ecx
  416154:	in     al,0x40
  416156:	dec    eax
  416157:	lock aad 0x15
  41615a:	cmp    BYTE PTR [eax-0x3e],al
  41615d:	loop   0x416182
  41615f:	sbb    eax,0x274813be
  416164:	dec    edx
  416165:	nop
  416166:	in     al,0x56
  416168:	cs icebp 
  41616a:	xor    al,0x64
  41616c:	mov    edi,?
  41616e:	mov    ecx,0xce0086b4
  416173:	popa   
  416174:	adc    BYTE PTR [ebx],bl
  416176:	fs jg  0x41615e
  416179:	jg     0x4161d9
  41617b:	add    cl,bh
  41617d:	cld    
  41617e:	pop    esp
  41617f:	pop    esi
  416180:	dec    DWORD PTR [edx]
  416182:	mov    dh,0x80
  416184:	jo     0x416184
  416186:	inc    edi
  416187:	add    ch,BYTE PTR [eax]
  416189:	bound  edi,QWORD PTR [ecx]
  41618b:	icebp  
  41618c:	std    
  41618d:	push   es
  41618e:	jg     0x4161a1
  416190:	push   0x856f5697
  416195:	dec    ebp
  416196:	inc    ebx
  416197:	or     al,0x74
  416199:	nop
  41619a:	int3   
  41619b:	outs   dx,DWORD PTR ds:[esi]
  41619c:	ss cwde 
  41619e:	xchg   ebx,eax
  41619f:	xchg   ecx,eax
  4161a0:	lods   al,BYTE PTR ds:[esi]
  4161a1:	mov    eax,ds:0x8bdca44b
  4161a6:	out    dx,eax
  4161a7:	and    BYTE PTR [edx+0x79ce9b91],0x4f
  4161ae:	mov    edx,DWORD PTR [esi]
  4161b0:	xor    al,BYTE PTR [ecx+0x7f]
  4161b3:	adc    al,0xbd
  4161b5:	push   ebx
  4161b6:	out    dx,al
  4161b7:	cmp    eax,0xd7002e59
  4161bc:	dec    ebx
  4161bd:	jbe    0x416161
  4161bf:	imul   eax,DWORD PTR [ebx],0x76
  4161c2:	adc    eax,0x7dafe2c2
  4161c7:	aaa    
  4161c8:	rcl    bl,1
  4161ca:	hlt    
  4161cb:	xor    ebx,ebp
  4161cd:	xchg   DWORD PTR [ebp+0x61e2628d],edx
  4161d3:	iret   
  4161d4:	daa    
  4161d5:	enter  0x905a,0xe3
  4161d9:	xor    DWORD PTR [edi],esp
  4161db:	es pop eax
  4161dd:	dec    esi
  4161de:	shl    DWORD PTR [esp+edx*8+0x7ca2f050],1
  4161e5:	rcr    BYTE PTR [ebp-0x32],0xba
  4161e9:	mov    bl,0xa1
  4161eb:	lods   eax,DWORD PTR ds:[esi]
  4161ec:	push   DWORD PTR [ebx]
  4161ee:	loope  0x416172
  4161f0:	inc    edi
  4161f1:	adc    dh,cl
  4161f3:	push   edx
  4161f4:	xor    eax,0x50
  4161f7:	dec    esi
  4161f8:	fdiv   st(1),st
  4161fa:	add    BYTE PTR ds:0x21612484,dh
  416200:	pop    ss
  416201:	add    al,0x3b
  416203:	pop    esp
  416204:	mov    ecx,0xb7da47b7
  416209:	push   ebx
  41620a:	cli    
  41620b:	jae    0x4161f5
  41620d:	jecxz  0x4161d3
  41620f:	sbb    DWORD PTR [ecx+esi*4],esp
  416212:	imul   edi,DWORD PTR [bx+si-0x688b],0x37
  416218:	fcmove st,st(2)
  41621a:	pop    es
  41621b:	xchg   ecx,eax
  41621c:	or     eax,0x2f26e49a
  416221:	mov    edi,0xfbfb20e4
  416226:	nop
  416227:	and    ch,dl
  416229:	inc    eax
  41622a:	cmp    BYTE PTR [ecx+0xd],dh
  41622d:	fs repz sti 
  416230:	inc    esi
  416231:	xchg   BYTE PTR [esi],al
  416233:	stos   BYTE PTR es:[edi],al
  416234:	(bad)  
  416235:	aam    0x9e
  416237:	jo     0x41622c
  416239:	add    eax,0x3112ea57
  41623e:	dec    esp
  41623f:	scas   al,BYTE PTR es:[edi]
  416240:	and    al,0xae
  416242:	retf   
  416243:	cli    
  416244:	dec    ebx
  416245:	cmp    BYTE PTR ds:0x2763fe2b,ah
  41624b:	and    eax,0x1e334bb
  416250:	sub    eax,0x50bcd4b6
  416255:	xchg   ecx,eax
  416256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416257:	sbb    al,0x52
  416259:	jnp    0x416217
  41625b:	lods   al,BYTE PTR ds:[esi]
  41625c:	mov    eax,0x5be645b9
  416261:	mov    bh,0xa5
  416263:	call   0x3d83ddfe
  416268:	aad    0x40
  41626a:	test   al,0xbb
  41626c:	cmp    ebp,DWORD PTR [edx-0x64]
  41626f:	sbb    eax,0x607ebc41
  416274:	adc    al,BYTE PTR [ebp+0x44331797]
  41627a:	fdivr  DWORD PTR [eax+0x30]
  41627d:	dec    edx
  41627e:	fwait
  41627f:	jg     0x416240
  416281:	jmp    0x416297
  416283:	adc    al,0x79
  416285:	mov    esi,0x10dbf775
  41628a:	stc    
  41628b:	jbe    0x41625f
  41628d:	inc    ebp
  41628e:	sub    eax,0x1ce65268
  416293:	stos   DWORD PTR es:[edi],eax
  416294:	add    eax,0x154af83d
  416299:	xchg   ebp,eax
  41629a:	adc    BYTE PTR [edx+0x63c19c73],bl
  4162a0:	or     DWORD PTR [edi-0x70],edi
  4162a3:	repnz out dx,al
  4162a5:	jmp    0x5ab5b243
  4162aa:	sub    ebx,esi
  4162ac:	sub    bl,BYTE PTR [edx+0x6eed3c1d]
  4162b2:	das    
  4162b3:	imul   esp,DWORD PTR [ecx],0x535a8152
  4162b9:	mov    eax,ds:0x57de5aa6
  4162be:	mov    ds:0x594fc2a0,eax
  4162c3:	sti    
  4162c4:	sbb    dh,BYTE PTR [edx]
  4162c6:	call   0xafc2f938
  4162cb:	jne    0x416332
  4162cd:	in     eax,dx
  4162ce:	inc    ebx
  4162cf:	cdq    
  4162d0:	add    eax,0xe0af4c67
  4162d5:	push   0x2
  4162d7:	and    esp,0x53
  4162da:	test   BYTE PTR [edx+0x69],dl
  4162dd:	shr    esi,0xd2
  4162e0:	icebp  
  4162e1:	push   esp
  4162e2:	cmp    BYTE PTR [ecx+edi*8],dl
  4162e5:	pop    es
  4162e6:	int3   
  4162e7:	aad    0x3a
  4162e9:	push   ecx
  4162ea:	data16 jl 0x4162dc
  4162ed:	fincstp 
  4162ef:	and    al,0xff
  4162f1:	into   
  4162f2:	dec    ebx
  4162f3:	fdivr  st,st(1)
  4162f5:	cs xchg edx,eax
  4162f7:	sub    bh,0x5f
  4162fa:	dec    esi
  4162fb:	mov    eax,0x6821afb5
  416300:	and    eax,0x18959418
  416305:	push   es
  416306:	mov    edx,0xa4592b4f
  41630b:	mov    bl,0xbe
  41630d:	or     al,0xbe
  41630f:	aam    0xc9
  416311:	mov    WORD PTR [edi],?
  416313:	ds je  0x4162df
  416316:	aaa    
  416317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416318:	or     esi,DWORD PTR [ecx]
  41631a:	sbb    ebx,edx
  41631c:	sbb    al,0xe0
  41631e:	cdq    
  41631f:	popf   
  416320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416321:	fwait
  416322:	inc    esi
  416323:	xor    ebp,ebx
  416325:	ret    
  416326:	(bad)  
  416327:	adc    DWORD PTR [esi],eax
  416329:	(bad)  
  41632a:	pushf  
  41632b:	push   es
  41632c:	ja     0x416356
  41632e:	ret    0x54d3
  416331:	inc    esi
  416332:	test   eax,0x6ce9c798
  416337:	xchg   BYTE PTR [esi],ch
  416339:	jo     0x416330
  41633b:	clc    
  41633c:	cli    
  41633d:	int3   
  41633e:	dec    ecx
  41633f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416340:	cs in  eax,0x1d
  416343:	adc    eax,0xd1dd52f2
  416348:	mov    ch,0xdc
  41634a:	out    dx,al
  41634b:	xchg   BYTE PTR [eax-0x7122dac8],dh
  416351:	inc    ecx
  416352:	icebp  
  416353:	repz sahf 
  416355:	or     eax,0xf75a795
  41635a:	xchg   DWORD PTR [edx],esi
  41635c:	test   DWORD PTR [ecx+0x68],ebp
  41635f:	add    esp,ecx
  416361:	(bad)  
  416362:	sbb    DWORD PTR [ecx+edx*4+0x3095c968],eax
  416369:	cmc    
  41636a:	push   eax
  41636b:	push   esi
  41636c:	mov    dh,0xe5
  41636e:	inc    DWORD PTR [ebx]
  416370:	add    dl,BYTE PTR [esi+0x1189bb00]
  416376:	add    al,0xc1
  416378:	cmc    
  416379:	scas   al,BYTE PTR es:[edi]
  41637a:	stos   DWORD PTR es:[edi],eax
  41637b:	and    esp,edx
  41637d:	(bad)  
  41637e:	lods   al,BYTE PTR ds:[esi]
  41637f:	mov    eax,ds:0x84b815f1
  416384:	cmp    ch,dl
  416386:	sub    edx,0x3bd5008
  41638c:	dec    esi
  41638d:	xor    eax,0xf6811f68
  416392:	in     eax,dx
  416393:	push   ecx
  416394:	stos   BYTE PTR es:[edi],al
  416395:	lds    ebp,FWORD PTR [edi+0x22143865]
  41639b:	jns    0x4163e1
  41639d:	mov    esi,0x68262a2b
  4163a2:	inc    esp
  4163a3:	adc    BYTE PTR [eax+edx*2],dh
  4163a6:	lock fldenv [esi-0x2899d2c7]
  4163ad:	jo     0x416365
  4163af:	push   edi
  4163b0:	dec    edx
  4163b1:	mov    ah,0x2e
  4163b3:	xchg   BYTE PTR [eax+0x4a],al
  4163b6:	aaa    
  4163b7:	push   ebx
  4163b8:	mov    eax,ds:0xef012365
  4163bd:	ret    0xf6ec
  4163c0:	inc    esp
  4163c1:	nop
  4163c2:	sub    DWORD PTR [edx],edi
  4163c4:	scas   al,BYTE PTR es:[edi]
  4163c5:	pop    es
  4163c6:	push   DWORD PTR [edx]
  4163c8:	test   eax,0x17093b29
  4163cd:	push   esi
  4163ce:	les    eax,FWORD PTR [ecx-0x124120c9]
  4163d4:	mov    ds:0x1e8be0c9,al
  4163d9:	dec    eax
  4163da:	leave  
  4163db:	(bad)  
  4163dc:	popa   
  4163dd:	lock gs je 0x41638a
  4163e1:	out    0x36,al
  4163e3:	pop    esp
  4163e4:	inc    si
  4163e6:	ins    BYTE PTR es:[edi],dx
  4163e7:	adc    eax,0xe9f38e3f
  4163ec:	mov    esi,0xb426e9d5
  4163f1:	pop    ecx
  4163f2:	add    BYTE PTR [edx-0x8],bl
  4163f5:	aad    0x87
  4163f7:	or     DWORD PTR [edx+0x16f348c6],eax
  4163fd:	ins    DWORD PTR es:[edi],dx
  4163fe:	sbb    eax,0xb1424d92
  416403:	test   eax,0xe157b713
  416408:	repnz inc edi
  41640a:	jecxz  0x4163d4
  41640c:	pop    es
  41640d:	cli    
  41640e:	loope  0x416456
  416410:	jne    0x41641e
  416412:	and    dh,BYTE PTR [ecx+0x11]
  416415:	mov    ds:0x9aa81375,al
  41641a:	mov    al,ds:0xd16e7601
  41641f:	sbb    al,0x6f
  416421:	jmp    0xc88951c9
  416426:	and    eax,0x205ce97c
  41642b:	pop    ebx
  41642c:	cmp    BYTE PTR [edx+ecx*2-0x77],bl
  416430:	loop   0x4163bc
  416432:	adc    BYTE PTR [eax+ebx*8-0x36],al
  416436:	jge    0x4163ff
  416438:	jns    0x41644f
  41643a:	xchg   esp,eax
  41643b:	inc    ecx
  41643c:	push   0x5ae3505b
  416441:	ret    
  416442:	les    edi,FWORD PTR ds:0x1d4d556c
  416448:	(bad)  
  416449:	iret   
  41644a:	mov    edi,esp
  41644c:	mov    esi,DWORD PTR [ecx+0x4415baf8]
  416452:	ja     0x416460
  416454:	adc    eax,DWORD PTR [ecx]
  416456:	in     al,0xf4
  416458:	cwde   
  416459:	inc    esi
  41645a:	jp     0x416406
  41645c:	test   al,0x5f
  41645e:	jmp    0xb29e:0xdfd00a46
  416465:	cmp    BYTE PTR [ebx],dh
  416467:	jns    0x4164e3
  416469:	imul   ebx,DWORD PTR [eax],0x64baf006
  41646f:	nop
  416470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416471:	test   eax,0x6302fb8
  416476:	retf   
  416477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416478:	or     ecx,DWORD PTR [edi-0x6a8c50ad]
  41647e:	mov    cs,edi
  416480:	cmp    eax,0x3e278ba5
  416485:	mov    bh,0x4d
  416487:	inc    DWORD PTR [ebp+0x17]
  41648a:	repz inc ebx
  41648c:	dec    ebp
  41648d:	dec    ecx
  41648e:	inc    esi
  41648f:	out    dx,eax
  416490:	enter  0x77f9,0xb7
  416494:	(bad)  
  416495:	jl     0x416498
  416497:	out    0x9,al
  416499:	and    DWORD PTR [eax-0x55],0xd
  41649d:	mov    ebp,DWORD PTR [edx]
  41649f:	push   esp
  4164a0:	and    ah,BYTE PTR ss:[edx+0x65]
  4164a4:	xor    ebp,DWORD PTR [edi+0x679613fb]
  4164aa:	arpl   WORD PTR [edx+0x4560633d],dx
  4164b0:	sub    eax,DWORD PTR [ebx+0x69ad078e]
  4164b6:	add    al,0xd2
  4164b8:	cmp    eax,edi
  4164ba:	lahf   
  4164bb:	imul   eax,DWORD PTR [esi+0x1bc58342],0xffffffdd
  4164c2:	adc    al,0x87
  4164c5:	test   BYTE PTR [edx],bh
  4164c7:	and    DWORD PTR [ebx],ebp
  4164c9:	outs   dx,BYTE PTR ds:[esi]
  4164ca:	mov    edi,0xbb115923
  4164cf:	sar    dh,1
  4164d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d2:	jb     0x41649c
  4164d4:	or     edi,DWORD PTR [ebp+eiz*1+0x24]
  4164d8:	jge    0x416557
  4164da:	add    DWORD PTR [ecx+0x5b83c294],eax
  4164e0:	in     al,dx
  4164e1:	jmp    0x9737:0xa9c2e56f
  4164e8:	jns    0x41652c
  4164ea:	(bad)  
  4164eb:	out    0x5f,al
  4164ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ee:	adc    al,0x4
  4164f0:	or     dl,al
  4164f2:	cmp    BYTE PTR [ecx-0x50],0x5d
  4164f6:	mov    bh,0x19
  4164f8:	add    ch,BYTE PTR [eax+ebx*2+0x14fff6cd]
  4164ff:	jae    0x41655e
  416501:	sbb    ebp,edx
  416503:	(bad)  
  416504:	aad    0x81
  416506:	push   0xffffffcf
  416508:	xor    esi,DWORD PTR [edx-0x5f]
  41650b:	pop    eax
  41650c:	or     DWORD PTR [edi-0x25d7a6f7],ebp
  416512:	imul   edx,DWORD PTR [edi-0x43],0xdeeae2e1
  416519:	loope  0x4164d9
  41651b:	pop    ebp
  41651c:	iret   
  41651d:	sub    BYTE PTR [edi+0x404c5539],ch
  416523:	or     BYTE PTR [eax+0xe3829d9],cl
  416529:	into   
  41652a:	cwde   
  41652b:	mov    edx,0x4a234a44
  416530:	cld    
  416531:	cmp    DWORD PTR [eax-0x19],ebx
  416534:	daa    
  416535:	scas   eax,DWORD PTR es:[edi]
  416536:	jne    0x41651a
  416538:	dec    ebx
  416539:	icebp  
  41653a:	sahf   
  41653b:	inc    ecx
  41653c:	xchg   ebp,eax
  41653d:	dec    edx
  41653e:	push   esi
  41653f:	mov    ds:0xa216b9e4,al
  416544:	dec    eax
  416545:	pop    es
  416546:	aam    0x14
  416548:	mov    eax,ds:0x3689bc53
  41654d:	cli    
  41654e:	inc    edi
  41654f:	add    dl,BYTE PTR [ecx-0x35]
  416552:	xchg   esi,eax
  416553:	fdivr  DWORD PTR [edx+0x34]
  416556:	jb     0x41659a
  416558:	into   
  416559:	and    DWORD PTR [eax-0x1],ebp
  41655c:	sbb    al,0xb8
  41655e:	push   ebp
  41655f:	pop    edi
  416560:	call   0x8718:0xc3100b2f
  416567:	popa   
  416568:	xor    eax,0x1e8624b1
  41656d:	data16 add bh,BYTE PTR [esi-0x21ddd325]
  416574:	add    edi,DWORD PTR [ebp+0x33]
  416577:	mov    ah,0x7b
  416579:	mov    ch,0x18
  41657b:	daa    
  41657c:	xlat   BYTE PTR ds:[ebx]
  41657d:	pop    esp
  41657e:	(bad)  
  41657f:	in     eax,0xc6
  416581:	dec    eax
  416582:	inc    esi
  416583:	push   ss
  416584:	xor    eax,0xecfdb4ca
  416589:	enter  0x8b99,0xd9
  41658d:	mov    ecx,0xa245e9e8
  416592:	fidiv  WORD PTR [edx-0x16]
  416595:	es jb  0x416566
  416598:	retf   0xacf9
  41659b:	into   
  41659c:	daa    
  41659d:	xor    ch,BYTE PTR [ebp+ebx*2+0x30]
  4165a1:	jl     0x4165be
  4165a3:	xchg   cl,al
  4165a5:	sahf   
  4165a6:	(bad)  
  4165a7:	lahf   
  4165a8:	or     eax,0xfc825a83
  4165ad:	ins    BYTE PTR es:[edi],dx
  4165ae:	ss ret 
  4165b0:	vdivss xmm2,xmm0,DWORD PTR [si]
  4165b5:	or     bh,bh
  4165b7:	adc    DWORD PTR [edx+0x34ef8c2c],ecx
  4165bd:	xor    eax,0x5bbc5aca
  4165c2:	fsubrp st(0),st
  4165c4:	mov    bh,0x87
  4165c6:	mov    esp,0xe6cee56
  4165cb:	loopne 0x4165a6
  4165cd:	pop    ebp
  4165ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165cf:	aas    
  4165d0:	test   DWORD PTR [ebx+0x3a],esi
  4165d3:	pop    esi
  4165d4:	loopne 0x4165c8
  4165d6:	sbb    eax,0x97949ab4
  4165db:	scas   eax,DWORD PTR es:[edi]
  4165dc:	sub    edi,DWORD PTR [eax]
  4165de:	mov    esp,0xa7a452ba
  4165e3:	je     0x416654
  4165e5:	pop    ds
  4165e6:	xor    BYTE PTR [edi+ecx*2],0x5c
  4165ea:	popw   ds
  4165ec:	mov    ch,0xb4
  4165ee:	adc    DWORD PTR [edx+0x7e],esi
  4165f1:	dec    ebx
  4165f2:	mov    bh,0xab
  4165f4:	jo     0x416596
  4165f6:	int    0x7e
  4165f8:	popf   
  4165f9:	xor    ecx,eax
  4165fb:	loopne 0x41666e
  4165fd:	loope  0x41661e
  4165ff:	popf   
  416600:	xchg   edx,eax
  416601:	call   0xe3126782
  416606:	push   ds
  416607:	scas   eax,DWORD PTR es:[edi]
  416608:	rol    DWORD PTR [ebx+0x65],cl
  41660b:	rcr    BYTE PTR [edi+0x7ea2b60d],1
  416611:	push   ds
  416612:	sub    ebp,DWORD PTR [edx-0x6281e223]
  416618:	push   edi
  416619:	xor    cl,BYTE PTR [eax]
  41661b:	out    dx,al
  41661c:	mov    cl,0x19
  41661e:	and    ebx,edx
  416620:	popf   
  416621:	cmp    edi,DWORD PTR [esi+0x2a]
  416624:	mov    esi,0x6fa3c059
  416629:	fbstp  TBYTE PTR [ebx+0x60148eaf]
  41662f:	arpl   WORD PTR [edi+0x4a77a861],sp
  416635:	adc    BYTE PTR [esi+0x52d26229],cl
  41663b:	repnz sub al,0x2
  41663e:	fsubr  QWORD PTR [ebp+0x31]
  416641:	(bad)  
  416644:	sub    DWORD PTR [ecx-0x28],0x72
  416648:	pop    ecx
  416649:	pushf  
  41664a:	cdq    
  41664b:	clc    
  41664c:	fdivr  st,st(4)
  41664e:	clc    
  41664f:	in     eax,dx
  416650:	retf   0x5eac
  416653:	mov    eax,0x81134e90
  416658:	push   edi
  416659:	inc    edx
  41665a:	push   ss
  41665b:	cld    
  41665c:	mov    esi,0x729e2f1a
  416661:	inc    edi
  416662:	adc    BYTE PTR [edi-0x3b],ch
  416665:	push   0x74f79d15
  41666a:	popa   
  41666b:	test   BYTE PTR [edi-0x4a],0x61
  41666f:	fs mov dl,0x1b
  416672:	xchg   esi,eax
  416673:	sub    al,0xfc
  416675:	mov    edx,0x3503a7ba
  41667a:	(bad)  
  41667b:	shl    BYTE PTR [edi+ebx*1],cl
  41667e:	cmp    cl,BYTE PTR [edi+0x13]
  416681:	cmp    BYTE PTR [edx-0x54],al
  416684:	rcl    esi,0x21
  416687:	test   eax,0x68da9bf8
  41668c:	int    0x3d
  41668e:	push   ds
  41668f:	mov    ?,ecx
  416691:	test   al,0xe8
  416693:	mov    BYTE PTR [esi+0x57],al
  416696:	xchg   edx,eax
  416697:	jp     0x4166f9
  416699:	jmp    0x4166ed
  41669b:	sub    ecx,DWORD PTR [eax]
  41669d:	sub    al,0x16
  41669f:	in     al,0xd8
  4166a1:	(bad)  
  4166a2:	js     0x41669b
  4166a4:	lahf   
  4166a5:	dec    eax
  4166a6:	pop    ecx
  4166a7:	popf   
  4166a8:	xor    dh,BYTE PTR [edx-0x76a99ecf]
  4166ae:	dec    esi
  4166af:	cwde   
  4166b0:	jo     0x41668a
  4166b2:	push   es
  4166b3:	inc    eax
  4166b4:	stos   BYTE PTR es:[edi],al
  4166b5:	jb     0x4166f8
  4166b7:	pop    ecx
  4166b8:	cs xchg ecx,eax
  4166ba:	outs   dx,DWORD PTR ds:[esi]
  4166bb:	xor    edi,esp
  4166bd:	lock out 0x6f,al
  4166c0:	fisub  DWORD PTR [esi]
  4166c2:	xor    eax,0xd51ddd52
  4166c7:	scas   eax,DWORD PTR es:[edi]
  4166c8:	inc    eax
  4166c9:	sbb    edx,DWORD PTR [edi-0x24]
  4166cc:	cwde   
  4166cd:	das    
  4166ce:	cmp    ch,BYTE PTR ds:0x29df2553
  4166d4:	pop    es
  4166d5:	cld    
  4166d6:	jmp    0xda52:0xd5b4c7d2
  4166dd:	(bad)  [edx]
  4166df:	xlat   BYTE PTR ds:[ebx]
  4166e0:	sti    
  4166e1:	loopne 0x4166bd
  4166e3:	(bad)  
  4166e4:	pop    ebx
  4166e5:	int3   
  4166e6:	xchg   ecx,eax
  4166e7:	mov    dl,0x48
  4166e9:	pop    edx
  4166ea:	ins    DWORD PTR es:[edi],dx
  4166eb:	pop    esp
  4166ec:	jns    0x41672a
  4166ee:	sbb    esi,eax
  4166f0:	add    ch,BYTE PTR [ecx+0x39374e9]
  4166f6:	mov    eax,ds:0xd261555e
  4166fb:	inc    ecx
  4166fd:	mov    ch,0x4d
  4166ff:	fsubr  QWORD PTR [ecx+0x27ccecfb]
  416705:	inc    ebx
  416706:	lock or eax,0x8fe2cd64
  41670c:	sbb    ah,BYTE PTR [edi+0x2e899d7d]
  416712:	test   BYTE PTR [ecx+esi*2+0x40],al
  416716:	repz loope 0x4166b0
  416719:	jmp    0x768e9fbd
  41671e:	jecxz  0x416737
  416720:	xchg   ebx,eax
  416721:	mov    eax,ds:0x72a760f0
  416726:	xchg   edx,eax
  416727:	mov    al,BYTE PTR [ebp+0xa1e8f1b]
  41672d:	popf   
  41672e:	sar    dl,cl
  416730:	pop    edi
  416731:	and    bh,ch
  416733:	pop    eax
  416734:	gs (bad) 
  416736:	int3   
  416737:	pop    ebp
  416738:	sar    BYTE PTR [edi+eax*1+0x6a],0xac
  41673d:	test   DWORD PTR [edi-0x2356ffba],0xf7dc7830
  416747:	pop    ebx
  416748:	mov    ah,0x51
  41674a:	jno    0x416752
  41674c:	es push edi
  41674f:	(bad)  
  416750:	and    DWORD PTR [edx+0x391d6134],edi
  416756:	jle    0x416790
  416758:	scas   al,BYTE PTR es:[edi]
  416759:	sub    eax,0x8a430756
  41675e:	cmp    al,0x6c
  416760:	repnz lds esi,FWORD PTR [esi-0x201bf1e]
  416767:	js     0x416718
  416769:	push   edi
  41676a:	inc    ecx
  41676b:	and    al,BYTE PTR [ebx-0x6e6d3fa7]
  416771:	outs   dx,DWORD PTR ds:[esi]
  416772:	xor    al,0x6d
  416774:	jae    0x41670b
  416776:	xor    bl,BYTE PTR [ecx-0x417053f5]
  41677c:	inc    esi
  41677d:	sub    bh,BYTE PTR [edx-0x78]
  416780:	jmp    0x78cecb4b
  416785:	test   eax,0xc9efbc01
  41678a:	push   ebp
  41678b:	xor    ecx,ebx
  41678d:	imul   esp,DWORD PTR [eax+edx*2+0x67],0x5e
  416792:	addr16 (bad) 
  416794:	mul    DWORD PTR [esi]
  416796:	or     BYTE PTR [edx-0x72],ch
  416799:	mul    DWORD PTR [edx]
  41679b:	(bad)  
  41679c:	cmp    BYTE PTR [ebp-0x18],dl
  41679f:	push   cs
  4167a0:	in     eax,0x74
  4167a2:	fwait
  4167a3:	in     al,0xc4
  4167a5:	jmp    0x416744
  4167a7:	inc    eax
  4167a8:	clc    
  4167a9:	cmp    BYTE PTR [ecx+0x57],0x51
  4167ad:	sub    edi,edi
  4167af:	dec    ecx
  4167b0:	mov    ah,BYTE PTR [ebp+0x5e868b0c]
  4167b6:	out    0xd4,al
  4167b8:	std    
  4167b9:	jg     0x4167c8
  4167bb:	nop
  4167bc:	in     al,dx
  4167bd:	ins    BYTE PTR es:[edi],dx
  4167be:	loop   0x41683e
  4167c0:	or     BYTE PTR [esi-0x5b],ah
  4167c3:	jl     0x416751
  4167c5:	fstp   DWORD PTR [ebp+0x4a]
  4167c8:	cmp    BYTE PTR [ecx+0x103b8b37],0xa
  4167cf:	jle    0x416804
  4167d1:	jg     0x4167f8
  4167d3:	std    
  4167d4:	inc    esi
  4167d5:	stc    
  4167d6:	dec    eax
  4167d7:	sti    
  4167d8:	shr    DWORD PTR [edx*1-0x6d4e4e2c],1
  4167df:	adc    al,ch
  4167e1:	mov    esi,0xab45627d
  4167e6:	repz pop eax
  4167e8:	or     cl,bh
  4167ea:	outs   dx,BYTE PTR ds:[esi]
  4167eb:	mov    eax,0xe173dbcd
  4167f0:	sar    cl,cl
  4167f2:	mov    esp,0x567da25c
  4167f7:	xchg   ebp,eax
  4167f8:	sub    al,0xea
  4167fa:	scas   al,BYTE PTR es:[edi]
  4167fb:	mov    eax,0x55ec4953
  416800:	cmp    DWORD PTR [esp+ecx*1],eax
  416803:	test   al,0xf1
  416805:	fs cwde 
  416807:	sbb    BYTE PTR [ecx+ebp*8+0x7610213],0xd5
  41680f:	out    0x8c,al
  416811:	mul    BYTE PTR [edx+ebp*8]
  416814:	cmp    BYTE PTR [eax+0x56674d12],ah
  41681a:	sbb    DWORD PTR [edx-0x9e9e99c],ecx
  416820:	jmp    0xcaa4e5fb
  416825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416826:	outs   dx,DWORD PTR ds:[esi]
  416827:	mov    al,ds:0x63b126fa
  41682c:	fdiv   DWORD PTR ds:0xfdd5c0ce
  416832:	cld    
  416833:	inc    eax
  416834:	repz sub eax,0xdb018800
  41683a:	jecxz  0x4167e1
  41683c:	or     dh,bh
  41683e:	lock add BYTE PTR [ecx-0x55b9dbdb],0xc1
  416846:	push   eax
  416847:	inc    edx
  416848:	pop    edi
  416849:	pop    ss
  41684a:	sti    
  41684b:	pop    ds
  41684c:	jbe    0x4168c1
  41684e:	mov    ds,WORD PTR [eax+0x1a]
  416851:	xchg   ebp,eax
  416852:	fwait
  416853:	xor    ebp,ecx
  416855:	push   esi
  416856:	call   0x3c645cb0
  41685b:	fld    QWORD PTR [ecx-0x67ba5a98]
  416861:	scas   eax,DWORD PTR es:[edi]
  416862:	mov    ch,0xb6
  416864:	ror    BYTE PTR [esi+edi*1],cl
  416867:	sub    eax,0xfbb521e2
  41686c:	push   esp
  41686d:	add    esi,DWORD PTR [ebp-0x13]
  416870:	lahf   
  416871:	test   eax,0xf3da67a7
  416876:	hlt    
  416877:	jmp    0xebbdc39d
  41687c:	out    dx,eax
  41687d:	rol    BYTE PTR [esi],1
  41687f:	jnp    0x41686a
  416881:	or     ah,BYTE PTR [ecx+0x4d1411ef]
  416887:	lea    edx,[edx-0x2]
  41688a:	dec    ebp
  41688b:	and    esi,ebx
  41688d:	mov    ch,0xfa
  41688f:	and    al,0x33
  416891:	(bad)  
  416892:	sub    al,0x3c
  416894:	mov    ecx,DWORD PTR [esi]
  416896:	cmp    BYTE PTR [ebx-0x1f],ah
  416899:	(bad)
  41689d:	and    BYTE PTR [ebp-0x4ede3bc3],al
  4168a3:	xchg   esi,eax
  4168a4:	cmc    
  4168a5:	push   ebp
  4168a6:	pop    esp
  4168a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a8:	loop   0x416885
  4168aa:	dec    edi
  4168ab:	sub    DWORD PTR [ebp-0x23],0x68fd08fb
  4168b2:	in     al,dx
  4168b3:	inc    edi
  4168b4:	sbb    al,0xe7
  4168b6:	clc    
  4168b7:	mov    ebx,0xe9a42817
  4168bc:	mov    bl,0xdf
  4168be:	outs   dx,DWORD PTR ds:[esi]
  4168bf:	push   edx
  4168c0:	or     esp,DWORD PTR [esi-0xfdaf271]
  4168c6:	or     al,0x35
  4168c8:	adc    esp,ebx
  4168ca:	jmp    0x2e20786a
  4168cf:	fidivr WORD PTR [esi+0x7a]
  4168d2:	popa   
  4168d3:	sbb    BYTE PTR [esi-0x1e],al
  4168d6:	cld    
  4168d7:	or     esp,DWORD PTR [eax-0x68]
  4168da:	les    ebp,FWORD PTR [esp+ebp*2-0x5b]
  4168de:	test   eax,0xe5efff05
  4168e3:	sbb    BYTE PTR [ecx],dl
  4168e5:	xchg   esp,eax
  4168e6:	(bad)  
  4168e8:	mov    ecx,0xd1561089
  4168ed:	mov    ch,0x4a
  4168ef:	ret    0xd14e
  4168f2:	add    eax,0xe44ff6f7
  4168f7:	add    DWORD PTR [ecx-0x10],0xffffffcf
  4168fb:	or     eax,0xcc251743
  416900:	and    eax,0x874775a4
  416905:	pop    eax
  416906:	push   ebx
  416907:	adc    eax,0xaf44424d
  41690c:	int3   
  41690d:	add    DWORD PTR [edi],edi
  41690f:	out    dx,eax
  416910:	ss fdivrp st(1),st
  416913:	xchg   dh,bl
  416915:	xor    al,0xe4
  416917:	inc    eax
  416918:	adc    bl,dl
  41691a:	push   es
  41691b:	inc    ebx
  41691c:	inc    edi
  41691d:	es test al,0x57
  416920:	repz retf 0xd655
  416924:	je     0x416968
  416926:	nop
  416927:	out    0x7f,al
  416929:	mov    ds:0x966a193e,eax
  41692e:	mov    bh,0x81
  416930:	cmp    ecx,DWORD PTR [ecx+ebx*4]
  416933:	mov    bh,0xe2
  416935:	xchg   esp,eax
  416936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416937:	je     0x4168dd
  416939:	mov    eax,ds:0xcb3a9a59
  41693e:	jmp    0xffc4:0xa521b9fc
  416945:	xchg   dh,ch
  416947:	jg     0x41692d
  416949:	pop    es
  41694a:	xchg   edi,eax
  41694b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694c:	add    cl,ch
  41694e:	test   DWORD PTR [edx],edi
  416950:	inc    edi
  416951:	xchg   DWORD PTR [ecx+0x3aa1dfcc],ecx
  416957:	lea    ecx,[edi-0x15e24324]
  41695d:	repz cs inc ecx
  416960:	inc    esp
  416961:	scas   al,BYTE PTR es:[edi]
  416962:	sbb    eax,0x73cf93b8
  416967:	push   ebp
  416968:	aam    0x96
  41696a:	push   esi
  41696b:	stos   BYTE PTR es:[edi],al
  41696c:	and    ch,ah
  41696e:	shl    BYTE PTR [ebx-0x40],0x4c
  416972:	push   edx
  416973:	(bad)  
  416974:	adc    edx,ecx
  416976:	imul   ecx,DWORD PTR [ecx+0x26],0x16
  41697a:	jbe    0x416988
  41697c:	fnsave [eax+esi*4-0x38ba5d11]
  416983:	xor    BYTE PTR [esi-0x3bc96b6a],cl
  416989:	and    DWORD PTR [edi-0x1c],edi
  41698c:	ret    0x5dc4
  41698f:	in     al,dx
  416990:	pop    eax
  416991:	xchg   BYTE PTR [eax],ch
  416993:	add    ebp,DWORD PTR [ebx-0x10e00455]
  416999:	push   eax
  41699a:	int    0x59
  41699c:	xchg   ebp,eax
  41699d:	jno    0x416a06
  41699f:	mov    dl,0x51
  4169a1:	jle    0x416937
  4169a3:	mov    bh,0x99
  4169a6:	loop   0x416988
  4169a8:	ror    ah,1
  4169aa:	(bad)  
  4169ab:	fs std 
  4169ad:	mov    ecx,0x15756443
  4169b2:	mov    ecx,0xd90cb64
  4169b7:	pop    ecx
  4169b8:	repnz test eax,0xd541cbdb
  4169be:	fistp  QWORD PTR [ebx+0x0]
  4169c1:	sub    al,0xb2
  4169c3:	dec    edx
  4169c4:	jne    0x416a0a
  4169c6:	cmp    edi,ecx
  4169c8:	xor    ebp,esp
  4169ca:	popa   
  4169cb:	loopne 0x4169aa
  4169cd:	mov    DWORD PTR [edx],ebx
  4169cf:	jo     0x416a4e
  4169d1:	addr16 push esi
  4169d3:	mov    esi,0x54be4c63
  4169d8:	mov    ebx,0x4c96f0b4
  4169dd:	ror    BYTE PTR [eax],cl
  4169df:	sub    al,0x24
  4169e1:	push   ss
  4169e2:	cmp    ecx,esi
  4169e4:	sub    al,0xda
  4169e6:	push   ebp
  4169e7:	jp     0x4169c2
  4169e9:	adc    bh,BYTE PTR ds:0xc5fd66d5
  4169ef:	mov    BYTE PTR [ebx+0x6b],al
  4169f2:	push   esi
  4169f3:	fild   QWORD PTR [ebx+0x18]
  4169f6:	sub    DWORD PTR [ebp+edi*2+0x25],eax
  4169fa:	add    DWORD PTR [ebx-0x67f83446],0xffffffcb
  416a01:	xlat   BYTE PTR ds:[ebx]
  416a02:	mov    DWORD PTR [edi-0x14fc6808],esp
  416a08:	mov    bh,0x78
  416a0a:	xchg   edi,eax
  416a0b:	mov    gs,WORD PTR [edx+0x60ad3755]
  416a11:	adc    al,0x88
  416a13:	ret    
  416a14:	jmp    0x7e04:0x2b2794ea
  416a1b:	int3   
  416a1c:	dec    ebp
  416a1d:	aaa    
  416a1e:	sti    
  416a1f:	adc    esp,0x74113641
  416a25:	cmp    al,BYTE PTR [esi-0x458fa4f2]
  416a2b:	dec    edi
  416a2c:	rol    BYTE PTR [edi-0xdf61637],1
  416a32:	jecxz  0x416a96
  416a34:	mov    dh,0xfb
  416a36:	(bad)  
  416a37:	cmp    WORD PTR [eax+edi*2],0x1a
  416a3c:	jne    0x416a51
  416a3e:	mov    dh,BYTE PTR [ebx+0x3e]
  416a41:	aaa    
  416a42:	jnp    0x416a35
  416a44:	jae    0x416a4e
  416a46:	cld    
  416a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a48:	call   0x4cd375be
  416a4d:	jle    0x416a0d
  416a4f:	data16 das 
  416a51:	jns    0x4169f6
  416a53:	cmp    ebx,DWORD PTR [ebx]
  416a55:	repz push 0x9d5f7085
  416a5b:	les    ebx,FWORD PTR [ebx+0x46]
  416a5e:	jmp    0xd399253d
  416a63:	cmp    ch,BYTE PTR fs:[edx+0x1f]
  416a67:	ins    BYTE PTR es:[edi],dx
  416a68:	add    eax,0xead9213c
  416a6d:	outs   dx,DWORD PTR ds:[esi]
  416a6e:	mov    bh,0x31
  416a70:	mov    esi,0x872b63ff
  416a75:	imul   esi,DWORD PTR [ecx-0x39],0xc70af800
  416a7c:	sbb    al,0x9a
  416a7e:	adc    al,0x41
  416a80:	mov    DWORD PTR [esi+0xe1d3552],ebx
  416a86:	(bad)  
  416a87:	mov    esi,0xf83d2228
  416a8c:	das    
  416a8d:	js     0x416a44
  416a8f:	cmp    eax,DWORD PTR [esi]
  416a91:	fwait
  416a92:	xchg   esi,eax
  416a93:	cmp    BYTE PTR [esp+eiz*8-0x20],0xd4
  416a98:	add    DWORD PTR [esi+eax*2+0x4b],edi
  416a9c:	je     0x416a2c
  416a9e:	xchg   eax,ebx
  416aa0:	outs   dx,BYTE PTR ds:[esi]
  416aa1:	(bad)  
  416aa2:	mul    BYTE PTR [edx+eiz*1+0x29]
  416aa6:	mov    ch,0x71
  416aa8:	inc    ebx
  416aa9:	aaa    
  416aaa:	arpl   si,bx
  416aac:	push   edi
  416aad:	ja     0x416a95
  416aaf:	push   edi
  416ab0:	aad    0x76
  416ab2:	dec    ecx
  416ab3:	(bad)  
  416ab4:	pop    eax
  416ab5:	xor    eax,0xa35f0b88
  416aba:	pop    ds
  416abb:	in     eax,dx
  416abc:	(bad)  
  416abd:	or     al,0x2f
  416abf:	sub    esp,DWORD PTR [edi+0x3c]
  416ac2:	mov    ah,0xb5
  416ac4:	pop    eax
  416ac5:	ficomp WORD PTR [ebx+0x1f]
  416ac8:	je     0x416b48
  416aca:	dec    ebp
  416acb:	test   eax,0x57ebc5bf
  416ad0:	push   0xbff3446d
  416ad5:	xor    eax,0xe4af2a82
  416ada:	lds    edx,FWORD PTR [edi-0x67f05557]
  416ae0:	sbb    al,BYTE PTR [eax-0x6f]
  416ae3:	retf   0x69e
  416ae6:	mov    ah,0x8a
  416ae8:	sbb    esi,edx
  416aea:	mov    esi,DWORD PTR [esi-0x6]
  416aed:	(bad)  
  416aee:	outs   dx,BYTE PTR ds:[esi]
  416aef:	outs   dx,BYTE PTR ds:[esi]
  416af0:	sub    BYTE PTR [edi],dh
  416af2:	shr    BYTE PTR [edi-0x2a592416],cl
  416af8:	mov    eax,0xe1dcef36
  416afd:	imul   edx,edi,0xfffffff3
  416b00:	inc    esp
  416b01:	imul   esp,edx,0x4b
  416b04:	std    
  416b05:	jnp    0x416aa5
  416b07:	mov    ch,dh
  416b09:	push   cs
  416b0a:	pushf  
  416b0b:	mov    dl,0x41
  416b0d:	dec    eax
  416b0e:	push   ds
  416b0f:	pusha  
  416b10:	mov    ebp,DWORD PTR [eax]
  416b12:	pop    es
  416b13:	dec    esp
  416b14:	les    ebx,FWORD PTR ds:[edx+0x70]
  416b18:	scas   al,BYTE PTR es:[edi]
  416b19:	aam    0x80
  416b1b:	push   ebx
  416b1c:	adc    dl,ah
  416b1e:	pop    eax
  416b1f:	ds sbb ebx,edx
  416b22:	shr    DWORD PTR [ebp-0x4e608f2e],0x6e
  416b29:	inc    ecx
  416b2a:	scas   eax,DWORD PTR es:[edi]
  416b2b:	jg     0x416b18
  416b2d:	fisttp WORD PTR [ebx-0x7e41eaa0]
  416b33:	sub    eax,0x9db08b43
  416b38:	dec    ebp
  416b39:	(bad)  
  416b3a:	cmp    DWORD PTR [esp+eax*2],esi
  416b3d:	fcmovu st,st(5)
  416b3f:	mul    DWORD PTR [esi]
  416b41:	pop    ss
  416b42:	lods   al,BYTE PTR ds:[esi]
  416b43:	scas   eax,DWORD PTR es:[edi]
  416b44:	(bad)  
  416b45:	jecxz  0x416b0a
  416b47:	pusha  
  416b48:	pop    edi
  416b49:	mov    edx,0x176e617b
  416b4e:	push   0xffffffc5
  416b50:	js     0x416b20
  416b52:	mov    ds:0x29d6ff44,eax
  416b57:	arpl   bp,bx
  416b59:	in     al,dx
  416b5a:	das    
  416b5b:	retf   0x7d42
  416b5e:	ss xchg ebx,eax
  416b60:	sbb    eax,0xb619f148
  416b65:	or     al,0x9b
  416b67:	pop    esi
  416b68:	stos   BYTE PTR es:[edi],al
  416b69:	aas    
  416b6a:	lea    ebx,[ecx-0x7e]
  416b6d:	push   ecx
  416b6e:	icebp  
  416b6f:	retf   
  416b70:	lea    ecx,[edi]
  416b72:	(bad)  
  416b73:	jne    0x416ba6
  416b75:	sbb    DWORD PTR [eax-0x74],ecx
  416b78:	pop    ds
  416b79:	and    BYTE PTR [edx-0x52884672],dl
  416b7f:	lea    edi,[esi-0x42]
  416b82:	call   0x8d10:0x298d33b0
  416b89:	mov    esp,DWORD PTR [edx-0x24]
  416b8c:	push   ebp
  416b8d:	mov    al,0x77
  416b8f:	pinsrw mm3,WORD PTR ds:0x55077cd0,0x90
  416b97:	data16 mov BYTE PTR [eax-0x7f3ec719],cl
  416b9e:	xor    ch,dh
  416ba0:	fidiv  DWORD PTR [edx+0x4a]
  416ba3:	popa   
  416ba4:	inc    ecx
  416ba5:	mov    dl,0x70
  416ba7:	push   esi
  416ba8:	jns    0x416bfb
  416baa:	mov    eax,ds:0x111ff8f0
  416baf:	clc    
  416bb0:	push   esi
  416bb1:	test   BYTE PTR [ebx-0x5c],ah
  416bb4:	(bad)  
  416bb5:	fwait
  416bb6:	jno    0x416b4b
  416bb8:	xchg   ecx,eax
  416bb9:	pushf  
  416bba:	aad    0xd5
  416bbc:	call   0x821e654e
  416bc1:	fcomp  DWORD PTR [eax]
  416bc3:	call   0xe4112839
  416bc8:	jg     0x416b93
  416bca:	jg     0x416bdd
  416bcc:	(bad)  
  416bcd:	fiadd  DWORD PTR [edx+0x50]
  416bd0:	out    0xc7,eax
  416bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd3:	inc    ebp
  416bd4:	xchg   edi,eax
  416bd5:	add    eax,DWORD PTR [ecx+0x630d23d4]
  416bdb:	push   ebp
  416bdc:	push   edx
  416bdd:	mov    esp,0xc3d03553
  416be2:	inc    ecx
  416be3:	shr    esi,0xd5
  416be6:	sub    edx,ebp
  416be8:	ja     0x416c29
  416bea:	mov    esp,0xb9e2fe71
  416bef:	cmp    BYTE PTR [eax-0x2f],0xaa
  416bf3:	dec    eax
  416bf4:	stos   DWORD PTR es:[edi],eax
  416bf5:	ja     0x416be7
  416bf7:	inc    ebp
  416bf8:	dec    esi
  416bf9:	div    esi
  416bfb:	js     0x416b7e
  416bfd:	inc    edi
  416bfe:	mov    DWORD PTR [edi],esp
  416c00:	outs   dx,DWORD PTR ds:[esi]
  416c01:	lea    edi,[eax+0x6e]
  416c04:	dec    ebp
  416c05:	xor    DWORD PTR [esi+0x48c99d23],0xffffff8e
  416c0c:	(bad)  
  416c0d:	(bad)  
  416c0e:	sbb    ah,cl
  416c10:	imul   eax,DWORD PTR [ecx+0x68520c9b],0x6d
  416c17:	aad    0xe7
  416c19:	push   eax
  416c1a:	xchg   eax,esi
  416c1c:	adc    eax,DWORD PTR [edx]
  416c1e:	xchg   ebx,eax
  416c1f:	shr    DWORD PTR ds:0x270c3f9e,0xa
  416c26:	adc    edx,edi
  416c28:	cmp    DWORD PTR [ebx-0xde6225b],edx
  416c2e:	aas    
  416c2f:	xor    ecx,eax
  416c31:	faddp  st(4),st
  416c33:	shr    al,1
  416c35:	enter  0x5e7f,0xc6
  416c39:	cwde   
  416c3a:	and    DWORD PTR [esi],edi
  416c3c:	pop    es
  416c3d:	js     0x416c66
  416c3f:	pop    ds
  416c40:	or     ch,ah
  416c42:	fcom   DWORD PTR [edx]
  416c44:	mov    ch,0x16
  416c46:	adc    dh,BYTE PTR [edi]
  416c48:	outs   dx,DWORD PTR ds:[esi]
  416c49:	stos   BYTE PTR es:[edi],al
  416c4a:	call   0x6687:0x8e398eb9
  416c51:	pusha  
  416c52:	dec    esi
  416c53:	sub    BYTE PTR [ecx],dh
  416c55:	loope  0x416c5c
  416c57:	popf   
  416c58:	and    ch,ah
  416c5a:	jo     0x416cc1
  416c5c:	dec    esi
  416c5d:	pop    edx
  416c5e:	and    ebp,ecx
  416c60:	scas   eax,DWORD PTR es:[edi]
  416c61:	sbb    eax,0xd5194f41
  416c66:	dec    edi
  416c67:	repnz pop esi
  416c69:	mov    WORD PTR [edi-0x4d],ss
  416c6c:	retf   
  416c6d:	push   esp
  416c6e:	retf   0x9b15
  416c71:	sbb    BYTE PTR [esi-0x7d194f26],0xc9
  416c78:	mov    BYTE PTR ds:0x9bfb5f34,al
  416c7e:	mov    ecx,0xb203375a
  416c83:	dec    edi
  416c84:	fild   DWORD PTR [esi-0x23873a5a]
  416c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c8b:	std    
  416c8c:	bound  ebx,QWORD PTR [ebx]
  416c8e:	fist   WORD PTR [ebp+0x5c]
  416c91:	aam    0xc4
  416c93:	call   0xdcc8:0x690c62bc
  416c9a:	jnp    0x416d07
  416c9c:	dec    ebp
  416c9d:	jae    0x416cd9
  416c9f:	aaa    
  416ca0:	in     eax,0xcb
  416ca2:	in     eax,0x65
  416ca4:	out    0x9d,al
  416ca6:	push   ds
  416ca7:	(bad)  
  416ca8:	outs   dx,DWORD PTR ds:[esi]
  416ca9:	sub    eax,0x62e50fcd
  416cae:	push   ss
  416caf:	adc    ch,dh
  416cb1:	imul   ebx,DWORD PTR [edx-0x2b],0xffffff98
  416cb5:	mul    DWORD PTR [esp+edi*2-0x11]
  416cb9:	adc    BYTE PTR [edx+0x68f3621a],dh
  416cbf:	scas   eax,DWORD PTR es:[edi]
  416cc0:	sub    DWORD PTR [ecx-0x70],ecx
  416cc3:	test   al,0x3d
  416cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cc6:	shl    BYTE PTR [edx],cl
  416cc8:	rcr    dl,cl
  416cca:	fisttp WORD PTR [ebx+0x7289db46]
  416cd0:	mov    dh,0x9c
  416cd2:	sub    DWORD PTR [edx-0x697e7350],ebp
  416cd8:	mov    esi,0x6ce28343
  416cdd:	lds    eax,FWORD PTR [edi+0x1fdd6de9]
  416ce3:	dec    ebp
  416ce4:	ss adc eax,0xd07daab8
  416cea:	fwait
  416ceb:	fs lock jg 0x416d6e
  416cef:	fsubr  QWORD PTR [ecx+0x4b]
  416cf2:	sahf   
  416cf3:	outs   dx,DWORD PTR ds:[esi]
  416cf4:	imul   ebx,DWORD PTR [edx+0x2abcbe26],0xf947169b
  416cfe:	jl     0x416d7a
  416d00:	call   0x1dba:0x9b174169
  416d07:	sbb    edx,esi
  416d09:	mov    ecx,esp
  416d0b:	xor    ch,dl
  416d0d:	xchg   BYTE PTR [ecx],dl
  416d0f:	sbb    eax,0x69d7450d
  416d14:	lock je 0x416c9a
  416d17:	mov    dh,0xae
  416d19:	jle    0x416d4c
  416d1b:	ficomp DWORD PTR [ecx+0x19]
  416d1e:	lea    eax,[ebx-0x68341788]
  416d24:	xor    ecx,DWORD PTR [bp+di-0x3f1]
  416d29:	or     BYTE PTR [esi+0x18b138fc],dh
  416d2f:	ins    BYTE PTR es:[edi],dx
  416d30:	shl    DWORD PTR [ecx+edi*2+0x2],1
  416d34:	mov    ah,0x58
  416d36:	sub    al,0xd9
  416d38:	jns    0x416d76
  416d3a:	icebp  
  416d3b:	call   FWORD PTR [eax+0x26b478a2]
  416d41:	lea    ebx,ds:0x6fe47cfc
  416d47:	call   0xf6e1f190
  416d4c:	popa   
  416d4d:	(bad)  
  416d4e:	shl    ebx,1
  416d50:	xor    BYTE PTR [edi],0xbc
  416d53:	fstp   DWORD PTR [eax-0x354ad80f]
  416d59:	or     al,0xb8
  416d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d5c:	nop
  416d5d:	sbb    esp,DWORD PTR [ebx+0x37]
  416d60:	mul    DWORD PTR [ecx+0x3c53a0d6]
  416d66:	adc    DWORD PTR [ebp+0x7587043f],0x1d
  416d6d:	push   edx
  416d6e:	fadd   QWORD PTR [ebx-0x7ccadbd4]
  416d74:	mov    eax,ds:0x16722e59
  416d79:	add    eax,0xabeaca2c
  416d7e:	cmp    esp,DWORD PTR [edx+0x4]
  416d81:	ds adc al,0x46
  416d84:	scas   al,BYTE PTR es:[edi]
  416d85:	dec    eax
  416d86:	out    0x94,al
  416d88:	jecxz  0x416e04
  416d8a:	push   cs
  416d8b:	popf   
  416d8c:	dec    edx
  416d8d:	loop   0x416db5
  416d8f:	jmp    0x2ed0:0x852384d5
  416d96:	push   edi
  416d97:	xor    eax,0xebadbb9e
  416d9c:	or     al,0x78
  416d9e:	stc    
  416d9f:	dec    edx
  416da0:	call   0xa895c548
  416da5:	sbb    eax,DWORD PTR [esi]
  416da7:	ret    0x1c62
  416daa:	aaa    
  416dab:	jl     0x416db3
  416dad:	sub    eax,0xac787ab0
  416db2:	les    ecx,FWORD PTR [ebp-0x75]
  416db5:	inc    ebp
  416db6:	fwait
  416db7:	imul   esi,DWORD PTR [edx+0x5a36427e],0x38
  416dbe:	dec    ebp
  416dbf:	adc    DWORD PTR [eax-0x8],esi
  416dc2:	aam    0x4c
  416dc4:	xchg   BYTE PTR [ebx-0x14c146b5],ah
  416dca:	ss or  eax,0x1361c0d
  416dd0:	and    bl,0x94
  416dd3:	lods   al,BYTE PTR ds:[esi]
  416dd4:	leave  
  416dd5:	mov    ds:0x693476eb,al
  416dda:	jae    0x416dff
  416ddc:	lods   al,BYTE PTR ds:[esi]
  416ddd:	sbb    ebp,DWORD PTR [esi+0x567b2c39]
  416de3:	pop    ebp
  416de4:	push   0x4609a09c
  416de9:	fbld   TBYTE PTR [ecx+esi*1]
  416dec:	loop   0x416dc0
  416dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416def:	jmp    0x177d9e17
  416df4:	mov    ebx,0x5fa1e62a
  416df9:	dec    DWORD PTR [ecx+ebx*2-0x44]
  416dfd:	aad    0x1a
  416dff:	into   
  416e00:	inc    eax
  416e01:	or     edx,DWORD PTR es:[edi]
  416e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e05:	rol    BYTE PTR [edi+0x22c14db4],0xad
  416e0c:	fisttp QWORD PTR [edx]
  416e0e:	mov    bh,ah
  416e10:	aas    
  416e11:	adc    eax,0xcb9cd4e1
  416e16:	cmp    cl,bh
  416e18:	cmp    al,0xd2
  416e1a:	mov    ebp,0xbb732d0a
  416e1f:	loope  0x416e67
  416e21:	popf   
  416e22:	in     al,0xa7
  416e24:	scas   al,BYTE PTR es:[edi]
  416e25:	in     al,0x6b
  416e27:	jnp    0x416df3
  416e29:	test   BYTE PTR [ecx],cl
  416e2b:	adc    ebp,eax
  416e2d:	sbb    eax,0x801595d8
  416e32:	mov    ch,0x97
  416e34:	sti    
  416e35:	lea    eax,ss:[esi]
  416e38:	inc    BYTE PTR [edi]
  416e3a:	jo     0x416e54
  416e3c:	push   esp
  416e3d:	push   esp
  416e3e:	jmp    0x416ea2
  416e40:	and    BYTE PTR [ebp+0x2f0c11be],al
  416e46:	cli    
  416e47:	push   edx
  416e48:	xchg   dh,bl
  416e4a:	in     al,0x8f
  416e4c:	and    esp,ebx
  416e4e:	push   edi
  416e4f:	les    esi,FWORD PTR [edx+0x4]
  416e52:	ss jg  0x416ea6
  416e55:	daa    
  416e56:	xchg   ebx,eax
  416e57:	fmul   st,st(0)
  416e59:	cmp    al,0x58
  416e5b:	or     DWORD PTR [esi*1-0x37d12c36],edx
  416e62:	mov    eax,0x96073dec
  416e67:	sbb    DWORD PTR [ebx],ebx
  416e69:	jb     0x416e90
  416e6b:	scas   al,BYTE PTR es:[edi]
  416e6c:	jg     0x416ed8
  416e6e:	pop    ebx
  416e6f:	mov    edi,DWORD PTR [ebx]
  416e71:	adc    dl,BYTE PTR cs:[esi+0x49f816f5]
  416e78:	(bad)  
  416e79:	js     0x416e0c
  416e7b:	push   0xffffff82
  416e7d:	mov    ebx,0x18e9a2f0
  416e82:	aam    0x3
  416e84:	sbb    al,0xe7
  416e86:	ret    0x9957
  416e89:	test   BYTE PTR [eax+0x5a],dl
  416e8c:	mov    esi,0x3d44dc92
  416e91:	fs push esi
  416e93:	and    DWORD PTR [ebx+0x5ea17d4],0xffffff94
  416e9a:	bound  edx,QWORD PTR [ecx+0x57754c16]
  416ea0:	xchg   ebp,eax
  416ea1:	retf   
  416ea2:	mov    dh,0xc9
  416ea4:	popf   
  416ea5:	ds push ebx
  416ea7:	rcr    DWORD PTR ds:0x8f37a858,cl
  416ead:	and    DWORD PTR [edx+0x51],ebp
  416eb0:	sbb    BYTE PTR [edi-0x5bfe065b],ah
  416eb6:	add    BYTE PTR ds:0x519ed46c,dh
  416ebc:	imul   edi,DWORD PTR [ebx+0x53c600f3],0x2c5aa829
  416ec6:	jno    0x416e76
  416ec8:	outs   dx,BYTE PTR ds:[esi]
  416ec9:	jno    0x416f16
  416ecb:	jo     0x416e86
  416ecd:	(bad)  
  416ece:	sbb    al,0x2a
  416ed0:	jmp    0xb81c:0x1ab1c1c4
  416ed7:	arpl   WORD PTR [edi+0x6431092b],si
  416edd:	fstp   st(6)
  416edf:	stos   BYTE PTR es:[edi],al
  416ee0:	and    dh,BYTE PTR [edx-0x5d]
  416ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ee4:	mov    ds:0x5dffbc3a,al
  416ee9:	imul   eax
  416eeb:	sub    al,0x9f
  416eed:	icebp  
  416eee:	adc    eax,0x133d303b
  416ef3:	call   0xc971:0x7db9438
  416efa:	aaa    
  416efb:	pop    es
  416efc:	fst    QWORD PTR [edi+0x1e]
  416eff:	xor    ah,ch
  416f01:	xchg   esi,eax
  416f02:	loopne 0x416f61
  416f04:	test   BYTE PTR [ebx-0x65779d24],al
  416f0a:	retf   0x74ea
  416f0d:	or     ch,ah
  416f0f:	mov    esp,0xb970a2d1
  416f14:	add    DWORD PTR [eax-0x71ae93c5],esi
  416f1a:	or     al,0x73
  416f1c:	ss mov al,al
  416f1f:	loopne 0x416ef4
  416f21:	sbb    BYTE PTR [edi+0x3749a7b],bl
  416f27:	and    bl,BYTE PTR [esi+0x5cd63177]
  416f2d:	xchg   DWORD PTR [esi+0x50eff7ce],esp
  416f33:	leave  
  416f34:	mov    esi,0x29518a8
  416f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f3a:	fldenv [ebx+0x7b]
  416f3d:	hlt    
  416f3e:	inc    ecx
  416f3f:	add    BYTE PTR [ebx+eiz*8],cl
  416f42:	push   ecx
  416f43:	and    al,0xea
  416f45:	inc    edi
  416f46:	xchg   DWORD PTR [ebp-0x20],edi
  416f49:	push   gs
  416f4b:	cmp    BYTE PTR [ecx],cl
  416f4d:	dec    esp
  416f4e:	stos   DWORD PTR es:[edi],eax
  416f4f:	adc    DWORD PTR ds:0x1c9109c4,edi
  416f55:	daa    
  416f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f57:	and    eax,ebx
  416f59:	sbb    DWORD PTR [ecx+eax*4-0x3f],ebx
  416f5d:	dec    esp
  416f5e:	push   ss
  416f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f60:	push   esi
  416f61:	jle    0x416f52
  416f63:	and    BYTE PTR [ebx],bh
  416f65:	xor    eax,0x4b5c9637
  416f6a:	sbb    eax,0xbbcca75e
  416f6f:	mov    dl,0xa7
  416f71:	dec    ebp
  416f72:	add    BYTE PTR [eax],0xa3
  416f75:	cdq    
  416f76:	out    0x3e,eax
  416f78:	icebp  
  416f79:	ret    0x6c83
  416f7c:	add    ebx,edi
  416f7e:	cmp    al,BYTE PTR [ebx]
  416f80:	test   DWORD PTR [ebp+0x7bc9df5a],ecx
  416f86:	fnstcw WORD PTR ds:0x736b89ec
  416f8c:	lock push esp
  416f8e:	ds lahf 
  416f90:	mov    ds:0x9bfb1c45,eax
  416f95:	aam    0x57
  416f97:	cmp    dh,ch
  416f99:	in     al,0x5
  416f9b:	shl    DWORD PTR [eax+edx*1-0x28a63210],0x46
  416fa3:	rcr    dh,1
  416fa5:	and    al,0xf6
  416fa7:	loope  0x41701b
  416fa9:	mov    al,0x4e
  416fab:	sub    DWORD PTR [ebx],eax
  416fad:	shr    ecx,1
  416faf:	add    edi,DWORD PTR [eax]
  416fb1:	in     eax,dx
  416fb2:	mov    cl,0x6c
  416fb4:	stc    
  416fb5:	add    ebp,DWORD PTR [ebp+ebp*1-0x63]
  416fb9:	pop    ss
  416fba:	das    
  416fbb:	mov    cl,0x77
  416fbd:	jge    0x416f5d
  416fbf:	arpl   WORD PTR [edx],dx
  416fc1:	mov    edx,0xe853a339
  416fc6:	(bad)  
  416fc7:	loope  0x416ff3
  416fc9:	sub    dh,dh
  416fcb:	pop    esi
  416fcc:	sub    ch,BYTE PTR [edx-0x40b2fe4a]
  416fd2:	jle    0x41701c
  416fd4:	pusha  
  416fd5:	jmp    0x41701d
  416fd7:	mov    bh,0xfe
  416fd9:	clc    
  416fda:	shl    BYTE PTR [ecx],cl
  416fdc:	xor    DWORD PTR [eax-0x6c],eax
  416fdf:	neg    BYTE PTR [ebp-0x3bb8f93b]
  416fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe6:	ins    DWORD PTR es:[edi],dx
  416fe7:	mov    bh,0xd6
  416fe9:	out    dx,eax
  416fea:	icebp  
  416feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fec:	je     0x417049
  416fee:	mov    cl,0x35
  416ff0:	fwait
  416ff1:	push   ebx
  416ff2:	test   eax,0x3827ed7c
  416ff7:	mov    esp,0x6cec45d0
  416ffc:	cld    
  416ffd:	mov    eax,0xf21c6b4f
  417002:	ret    0xd03f
  417005:	shr    DWORD PTR [ebx+eiz*1-0x39],cl
  417009:	fstp   DWORD PTR [edx]
  41700b:	cld    
  41700c:	mov    DWORD PTR [eax-0x24],eax
  41700f:	ror    BYTE PTR [ebx-0x1621a871],1
  417015:	test   al,0x7a
  417017:	mov    WORD PTR [ebx+ebp*4+0x176bb87c],ss
  41701e:	jbe    0x417088
  417020:	(bad)  
  417021:	mov    dl,0xc4
  417023:	push   ds
  417024:	jp     0x41705b
  417026:	inc    esp
  417027:	(bad)  
  417028:	fild   DWORD PTR [eax+ecx*4+0xe]
  41702c:	sub    al,0xdc
  41702e:	std    
  41702f:	int    0x1b
  417031:	xchg   esp,eax
  417032:	dec    edx
  417033:	lahf   
  417034:	mov    ds:0x24db1da9,al
  417039:	sar    DWORD PTR [ecx],0x91
  41703c:	push   esi
  41703d:	dec    esi
  41703e:	mov    fs,ebx
  417040:	sbb    BYTE PTR [esi],bl
  417042:	xor    esp,DWORD PTR [ecx]
  417044:	call   0xf936:0xdf738824
  41704b:	fisub  WORD PTR [esi]
  41704d:	int    0x9a
  41704f:	out    dx,eax
  417050:	xchg   edx,eax
  417051:	loopne 0x417081
  417053:	push   esp
  417054:	shl    DWORD PTR [edi-0x3d24c504],0x4f
  41705b:	mov    ds:0x5cf76287,al
  417060:	jge    0x417073
  417062:	and    bh,BYTE PTR [edx+ecx*4]
  417065:	mov    esp,0x923d1bc7
  41706a:	lods   eax,DWORD PTR ds:[esi]
  41706b:	pop    ecx
  41706c:	and    eax,0xe8533415
  417071:	xchg   ebx,eax
  417072:	cmp    al,0xce
  417074:	cdq    
  417075:	inc    eax
  417076:	dec    ebp
  417077:	mov    ds,WORD PTR ds:0xd4aa39cb
  41707d:	push   esp
  41707e:	mov    DWORD PTR fs:[edi],ebx
  417081:	int3   
  417082:	hlt    
  417083:	pop    es
  417084:	jmp    0xc9cc:0xe96def8f
  41708b:	jmp    0xf1a3:0xd37e35c
  417092:	mov    dl,0x81
  417094:	push   cs
  417095:	push   0xf78e882f
  41709a:	mov    DWORD PTR [esi],eax
  41709c:	mov    edi,0xf1117b1b
  4170a1:	ja     0x41710b
  4170a3:	loopne 0x4170bb
  4170a5:	inc    edx
  4170a6:	arpl   WORD PTR ds:0x5681e43b,di
  4170ac:	push   edx
  4170ad:	xlat   BYTE PTR ds:[ebx]
  4170ae:	js     0x41709f
  4170b0:	repnz push ss
  4170b2:	xchg   esi,eax
  4170b3:	mov    ds:0xdeb84073,al
  4170b8:	ins    DWORD PTR es:[edi],dx
  4170b9:	and    DWORD PTR [ebp-0x19],ebp
  4170bc:	in     al,dx
  4170bd:	inc    esi
  4170be:	les    esp,FWORD PTR [edx-0x6d3425ec]
  4170c4:	pop    edi
  4170c5:	imul   esp,DWORD PTR [edi+0x9abba56],0x33
  4170cc:	cmp    ecx,0xcf0dc33b
  4170d2:	neg    DWORD PTR [edx+0x3fb5d1b4]
  4170d8:	jl     0x41709b
  4170da:	shl    bh,cl
  4170dc:	(bad)  
  4170dd:	pop    ecx
  4170de:	sahf   
  4170df:	xchg   ebx,eax
  4170e0:	or     eax,0xe751fbd5
  4170e5:	jb     0x417095
  4170e7:	adc    eax,0xba3bc520
  4170ec:	arpl   WORD PTR [ecx+eiz*1],bx
  4170ef:	push   edx
  4170f0:	(bad)  
  4170f1:	mov    ebx,0x1eb7493c
  4170f6:	cmp    DWORD PTR [edi-0x50],esp
  4170f9:	rol    DWORD PTR [ebp+0x5c],cl
  4170fc:	fwait
  4170fd:	pop    eax
  4170fe:	xlat   BYTE PTR ds:[ebx]
  4170ff:	loopne 0x41714f
  417101:	imul   esi,ebx,0x54
  417104:	aad    0x93
  417106:	adc    al,bl
  417108:	lea    ebp,[esi+0x594217c]
  41710e:	push   esp
  41710f:	dec    ecx
  417110:	test   al,0x61
  417112:	retf   0xe708
  417115:	std    
  417116:	dec    ebp
  417117:	stos   DWORD PTR es:[edi],eax
  417118:	cmc    
  417119:	mov    ecx,DWORD PTR [esi+0x7db75000]
  41711f:	inc    edi
  417120:	not    ebp
  417122:	mov    al,ds:0x4589c12b
  417127:	clc    
  417128:	mov    ecx,DWORD PTR [ebp-0x4]
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	repnz mov WORD PTR [ecx+0x7cb9aabf],?
  417748:	jnp    0x417762
  41774a:	sahf   
  41774b:	jnp    0x4177c8
  41774d:	call   0xff24a347
  417752:	inc    edx
  417753:	scas   al,BYTE PTR es:[edi]
  417754:	sub    ch,ch
  417756:	scas   al,BYTE PTR es:[edi]
  417757:	or     edi,DWORD PTR [edi+0x6e]
  41775a:	mov    BYTE PTR [edx-0x3a],ah
  41775d:	and    al,0xd2
  41775f:	push   edi
  417760:	fld    DWORD PTR [ebx-0xf]
  417763:	push   es
  417764:	mov    ebx,0xa12f609
  417769:	adc    bl,BYTE PTR [edi+0x11dcaab8]
  41776f:	pop    eax
  417770:	ds loope 0x4176fe
  417773:	pusha  
  417774:	xlat   BYTE PTR ds:[ebx]
  417775:	push   ss
  417776:	call   0x302:0x218e090a
  41777d:	dec    edi
  41777e:	push   eax
  41777f:	mov    eax,DWORD PTR [bp-0x6d95]
  417784:	pop    ss
  417785:	push   ds
  417786:	jmp    0x90db6bcc
  41778b:	ret    
  41778c:	cmp    DWORD PTR [edx],0xeffd15a3
  417792:	mov    ebp,0x625a7b9c
  417797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417798:	and    eax,0x14
  41779b:	bound  ecx,QWORD PTR [edx]
  41779d:	and    DWORD PTR [ebp+0xf],eax
  4177a0:	dec    esp
  4177a1:	popf   
  4177a2:	test   DWORD PTR [edi+0x2d],esp
  4177a5:	fisttp QWORD PTR [edx+0x55dfcbb3]
  4177ab:	cmp    ecx,esp
  4177ad:	cmp    esi,DWORD PTR [esp+edi*8-0x6b]
  4177b1:	sub    DWORD PTR [edx+0x2e],0xf25049cd
  4177b8:	cli    
  4177b9:	into   
  4177ba:	mov    al,0x50
  4177bc:	mov    dh,0xfa
  4177be:	cmp    al,0x7
  4177c0:	loop   0x4177f9
  4177c2:	js     0x4177f3
  4177c4:	dec    eax
  4177c5:	sub    al,0x24
  4177c7:	xchg   BYTE PTR [ebx],al
  4177c9:	jle    0x417841
  4177cb:	mov    eax,0x70f44478
  4177d0:	lods   eax,DWORD PTR ds:[esi]
  4177d1:	jno    0x417834
  4177d3:	adc    eax,ecx
  4177d5:	and    al,0x23
  4177d7:	cmp    bh,al
  4177d9:	sbb    DWORD PTR [ebp+0x688678f],eax
  4177df:	mov    al,ds:0xacd81ba7
  4177e4:	test   BYTE PTR [ecx-0x19],cl
  4177e7:	mov    es,WORD PTR [ebx-0xbc6aa09]
  4177ed:	cmp    BYTE PTR [ecx+eax*4-0x31],cl
  4177f1:	mov    BYTE PTR [eax+0x35],bh
  4177f4:	shr    edx,1
  4177f6:	lock add ebp,DWORD PTR [eax]
  4177f9:	mov    al,0xc1
  4177fb:	xor    al,0x87
  4177fd:	and    BYTE PTR [esi+0x3ccebb46],ah
  417803:	call   0x4fe3111a
  417808:	jmp    0x4c66:0xe286a4e9
  41780f:	xchg   DWORD PTR [ebx-0x1c],ecx
  417812:	inc    eax
  417813:	lea    esi,[ebx+0x71b9cd81]
  417819:	xchg   BYTE PTR [ebp-0x77720237],bh
  41781f:	retf   
  417820:	ret    
  417821:	ret    0x6725
  417824:	push   ebx
  417825:	je     0x417867
  417827:	icebp  
  417828:	pop    ebp
  417829:	stos   BYTE PTR es:[edi],al
  41782a:	mov    edi,0x820ed92e
  41782f:	ins    DWORD PTR es:[edi],dx
  417830:	mov    esp,0x103c25cd
  417835:	dec    eax
  417836:	cmp    ebx,DWORD PTR [edx+edi*2]
  417839:	push   eax
  41783a:	push   ecx
  41783b:	in     eax,0xd1
  41783d:	retf   0xe838
  417840:	and    dh,bh
  417842:	sub    esi,DWORD PTR [edi-0x52]
  417845:	pop    ds
  417846:	leave  
  417847:	add    DWORD PTR [eax+0x4040040b],0xcd3df6fe
  417851:	fidivr DWORD PTR [esi+0x52]
  417854:	cmp    eax,0x89aac9db
  417859:	mov    WORD PTR [edx+eiz*8-0x7b84dda5],ds
  417860:	push   ds
  417861:	adc    ah,BYTE PTR [ecx+0x45504118]
  417867:	ja     0x417883
  417869:	jns    0x417815
  41786b:	cmp    DWORD PTR [edx-0x34],esi
  41786e:	inc    eax
  41786f:	into   
  417870:	in     al,dx
  417871:	icebp  
  417872:	push   ebp
  417873:	sbb    ah,BYTE PTR [edx]
  417875:	nop
  417876:	mov    cl,0x2a
  417878:	or     eax,0x56f18e37
  41787d:	loope  0x41783d
  41787f:	in     al,dx
  417880:	clc    
  417881:	xor    BYTE PTR [ecx-0x48b81e7e],bh
  417887:	ins    BYTE PTR es:[edi],dx
  417888:	pushf  
  417889:	mov    bl,0x17
  41788b:	cmp    ah,BYTE PTR [edx]
  41788d:	mov    esi,gs
  41788f:	fsubr  QWORD PTR [ecx]
  417891:	inc    esi
  417892:	es icebp 
  417894:	pop    es
  417895:	in     al,0x11
  417897:	and    esp,DWORD PTR [esp+edi*1]
  41789a:	jle    0x417867
  41789c:	and    al,0x26
  41789e:	inc    eax
  41789f:	stc    
  4178a0:	adc    al,0x74
  4178a2:	pop    ecx
  4178a3:	cmp    cl,BYTE PTR [ebx-0xf81575b]
  4178a9:	xlat   BYTE PTR ds:[ebx]
  4178aa:	int3   
  4178ab:	pop    esp
  4178ac:	and    al,0xd0
  4178ae:	sbb    DWORD PTR [ecx*4-0x1a47d4],0x9
  4178b6:	pop    ebp
  4178b7:	(bad)  
  4178b8:	fs jno 0x417886
  4178bb:	xor    DWORD PTR [edi-0x2bee1cdd],esi
  4178c1:	jmp    0x417898
  4178c3:	ins    BYTE PTR es:[edi],dx
  4178c4:	xchg   edx,eax
  4178c5:	jmp    0x9fcdda55
  4178ca:	mov    al,0x3d
  4178cc:	cli    
  4178cd:	ins    DWORD PTR es:[edi],dx
  4178ce:	xchg   ebp,eax
  4178cf:	push   edx
  4178d0:	loopne 0x4178bb
  4178d2:	shl    DWORD PTR [eax],0xe7
  4178d5:	loop   0x4178f6
  4178d7:	iret   
  4178d8:	rol    DWORD PTR [edi+edx*4-0x29],cl
  4178dc:	xchg   ebx,eax
  4178dd:	inc    eax
  4178de:	dec    edi
  4178df:	inc    ebx
  4178e0:	call   0x28494cb9
  4178e5:	lds    ebx,FWORD PTR [ebp-0x459a1012]
  4178eb:	arpl   WORD PTR [edi+0x5d8989ff],di
  4178f1:	js     0x4178b8
  4178f3:	sbb    al,0xe
  4178f5:	xlat   BYTE PTR ds:[ebx]
  4178f6:	es push ss
  4178f8:	das    
  4178f9:	and    DWORD PTR [esi+0x23],ebp
  4178fc:	mov    esp,0x808553b3
  417901:	or     BYTE PTR [eax],ah
  417903:	push   0x4452a564
  417908:	stos   BYTE PTR es:[edi],al
  417909:	scas   eax,DWORD PTR es:[edi]
  41790a:	xor    BYTE PTR [esi],bh
  41790c:	sub    BYTE PTR [ecx+0x74],cl
  41790f:	sahf   
  417910:	lock neg ch
  417913:	adc    edi,DWORD PTR ds:0x6d0f2004
  417919:	shl    BYTE PTR [edi+0x54d8df7],cl
  41791f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417920:	mov    fs,WORD PTR [esp+eax*1-0x1540b6ff]
  417927:	popf   
  417928:	adc    eax,edx
  41792a:	minps  xmm3,XMMWORD PTR [ebx-0x1a4935e0]
  417931:	xor    dl,bl
  417933:	xchg   cl,dl
  417935:	add    al,BYTE PTR [edx+0x38]
  417938:	mov    ch,BYTE PTR [ecx]
  41793a:	dec    BYTE PTR [ecx]
  41793c:	in     eax,dx
  41793d:	dec    edi
  41793e:	dec    DWORD PTR [bp-0xdab]
  417943:	adc    edi,DWORD PTR [ebp+ebp*1-0x37]
  417947:	xchg   DWORD PTR [ecx+0x68abc0cd],eax
  41794d:	setge  BYTE PTR [eax*4-0x2bf7b683]
  417955:	out    0xe0,eax
  417957:	cmp    dl,BYTE PTR [eax+eiz*4-0x56b0f175]
  41795e:	sti    
  41795f:	sub    al,0xc7
  417961:	imul   esi,edi,0xf0746944
  417967:	pop    ebp
  417968:	sbb    eax,0x42fdfe0d
  41796d:	call   0x7c08820f
  417972:	js     0x41798c
  417974:	(bad)  
  417975:	ficom  WORD PTR [ebx+0x69]
  417978:	sbb    BYTE PTR [ebx],dl
  41797a:	add    eax,0xb725c16a
  41797f:	mov    dl,0x61
  417981:	pop    edi
  417982:	or     ebp,DWORD PTR [ecx]
  417984:	xor    edi,DWORD PTR [ecx]
  417986:	jle    0x417918
  417988:	jbe    0x417984
  41798a:	jb     0x417944
  41798c:	retf   0x3aba
  41798f:	add    eax,0x1b02b65e
  417994:	call   0x1c95:0x1d88348
  41799b:	cmp    al,0xfe
  41799d:	push   esi
  41799e:	sti    
  41799f:	scas   al,BYTE PTR es:[edi]
  4179a0:	fst    DWORD PTR [ebp-0x31]
  4179a3:	xchg   BYTE PTR [ebx+eiz*8+0x7a],dl
  4179a7:	dec    edi
  4179a8:	rcl    ebp,1
  4179aa:	retf   
  4179ab:	pop    ds
  4179ac:	add    ah,BYTE PTR [ebp-0x1]
  4179af:	mov    fs,WORD PTR [ecx+0x6ace9ca1]
  4179b5:	lahf   
  4179b6:	or     ecx,DWORD PTR [edi+edi*2-0x3c6d6d3a]
  4179bd:	sbb    DWORD PTR ds:0x985248bf,edi
  4179c3:	inc    eax
  4179c4:	ins    BYTE PTR es:[edi],dx
  4179c5:	into   
  4179c6:	out    dx,eax
  4179c7:	mov    ds:0x486dea47,eax
  4179cc:	pop    ebp
  4179cd:	sti    
  4179ce:	outs   dx,DWORD PTR ds:[esi]
  4179cf:	sub    edi,DWORD PTR [esi+0x25]
  4179d2:	out    0x9e,al
  4179d4:	sub    DWORD PTR [ecx-0x2ca955b8],0xffffffcb
  4179db:	inc    ebx
  4179dc:	dec    edi
  4179dd:	stos   BYTE PTR es:[edi],al
  4179de:	dec    ecx
  4179df:	js     0x4179b2
  4179e1:	mov    esp,0xbec45363
  4179e6:	jo     0x417a31
  4179e8:	cmp    ah,bh
  4179ea:	adc    edi,DWORD PTR [edx+0x28d48807]
  4179f0:	ins    BYTE PTR es:[edi],dx
  4179f1:	mov    cl,0xbd
  4179f3:	and    DWORD PTR gs:[ebx+0x13a522f6],ecx
  4179fa:	mov    bh,0x16
  4179fc:	retf   0x6f4b
  4179ff:	adc    DWORD PTR [ebp-0x34af3966],edi
  417a05:	jmp    0x6482b980
  417a0a:	cdq    
  417a0b:	xchg   ebx,eax
  417a0c:	div    BYTE PTR [esi+esi*2+0xc]
  417a10:	jmp    FWORD PTR [edx-0x61a2b80c]
  417a16:	add    esi,edi
  417a18:	jns    0x417a83
  417a1a:	mov    ds:0xaa38abbf,eax
  417a1f:	xor    al,0x5b
  417a21:	stc    
  417a22:	cmp    BYTE PTR [esi+0x45],dh
  417a25:	js     0x4179e5
  417a27:	mov    edi,0x9180f4a9
  417a2c:	inc    ebp
  417a2d:	or     cl,BYTE PTR [ebp*1+0x4df42e5]
  417a34:	mov    eax,ds:0x409a6e70
  417a39:	push   ss
  417a3a:	mov    DWORD PTR [eax+0x8de6aa4],ecx
  417a40:	stc    
  417a41:	js     0x417a78
  417a43:	xchg   ecx,eax
  417a44:	arpl   si,bp
  417a46:	and    dl,BYTE PTR [edi]
  417a48:	sub    dl,BYTE PTR [esi]
  417a4a:	sbb    edx,DWORD PTR [ebx]
  417a4c:	aad    0x29
  417a4e:	push   ecx
  417a4f:	or     dl,BYTE PTR [esi+0x29]
  417a52:	push   ecx
  417a53:	aam    0x1b
  417a55:	fldcw  WORD PTR [esp+ebp*1]
  417a58:	int3   
  417a59:	in     al,0xc8
  417a5b:	enter  0x6976,0xe
  417a5f:	jge    0x417ab8
  417a61:	lds    ebx,FWORD PTR [ebx]
  417a63:	add    al,dl
  417a65:	pop    ds
  417a66:	jmp    0x1478:0x8e6e128f
  417a6d:	push   edi
  417a6e:	xlat   BYTE PTR ds:[ebx]
  417a6f:	mov    cl,0xd0
  417a71:	add    al,BYTE PTR [edi+0x7b]
  417a74:	shr    DWORD PTR [ebx+eax*8+0xc],0x34
  417a79:	dec    edi
  417a7a:	cli    
  417a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7c:	pop    ss
  417a7d:	inc    esi
  417a7e:	push   ecx
  417a7f:	mov    al,ds:0xd3ac5d8
  417a84:	jbe    0x417a2d
  417a86:	sbb    esp,0x74
  417a89:	mov    ebp,0x817471e1
  417a8e:	fisttp QWORD PTR [eax+0x5c]
  417a91:	stos   DWORD PTR es:[edi],eax
  417a92:	xchg   ebp,eax
  417a93:	cmp    DWORD PTR [edx-0x6f90a4c5],0x9d851f6b
  417a9d:	cmp    esp,eax
  417a9f:	jo     0x417a33
  417aa1:	jge    0x417a8a
  417aa3:	xlat   BYTE PTR ds:[ebx]
  417aa4:	mov    bh,0x69
  417aa6:	pop    es
  417aa7:	jnp    0x417ab8
  417aa9:	add    ebx,DWORD PTR [ebp+0x44]
  417aac:	rcl    BYTE PTR [ecx-0x72],cl
  417aaf:	mov    BYTE PTR [esi],dh
  417ab1:	xor    BYTE PTR [eax+0x57],ch
  417ab4:	retf   0x6a8f
  417ab7:	adc    eax,0x7a08eb1a
  417abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417abd:	sub    al,0xa4
  417abf:	fadd   DWORD PTR [edi+0x7d]
  417ac2:	outs   dx,DWORD PTR ds:[esi]
  417ac3:	rol    DWORD PTR [ebx],1
  417ac5:	xchg   DWORD PTR [esi+esi*1-0x4c],esi
  417ac9:	push   ecx
  417aca:	je     0x417aad
  417acc:	xchg   esi,eax
  417acd:	push   ecx
  417ace:	mov    DWORD PTR [edx-0x70d0ab76],edi
  417ad4:	jns    0x417a66
  417ad6:	jmp    0x5d07:0x4748cf07
  417add:	mov    ecx,0x183ebe84
  417ae2:	ins    BYTE PTR es:[edi],dx
  417ae3:	fnstenv [ebx+eax*8+0x45]
  417ae7:	mov    esi,0x629eb79d
  417aec:	xchg   edi,eax
  417aed:	mov    es,WORD PTR [ebx+eax*1-0x10]
  417af1:	mov    ecx,0xf9a84632
  417af6:	leave  
  417af7:	cmp    al,0xb7
  417af9:	mov    eax,0x28df6a9b
  417afe:	out    dx,eax
  417aff:	sbb    al,0xda
  417b01:	inc    ecx
  417b02:	pop    ecx
  417b03:	addr16 das 
  417b05:	retf   0x3985
  417b08:	mov    dl,0x16
  417b0a:	ins    DWORD PTR es:[edi],dx
  417b0b:	adc    DWORD PTR [eiz*4-0x2b37a034],esp
  417b12:	data16 sub cl,BYTE PTR [ebx+0x28]
  417b16:	ja     0x417aa1
  417b18:	cdq    
  417b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b1a:	les    esi,FWORD PTR [ebx-0x17]
  417b1d:	loope  0x417add
  417b1f:	or     al,0xf7
  417b21:	fimul  WORD PTR [edi+0x5e]
  417b24:	enter  0x88a6,0xf6
  417b28:	lods   al,BYTE PTR ds:[esi]
  417b29:	call   0xe6dfd2b6
  417b2e:	mov    esi,0x54bf51dd
  417b33:	int3   
  417b34:	sti    
  417b35:	mov    ebp,0x582170a2
  417b3a:	sub    BYTE PTR [edx+0x16caef0],bh
  417b40:	cmp    al,0x54
  417b42:	or     edx,edi
  417b44:	nop
  417b45:	loopne 0x417b53
  417b47:	sbb    DWORD PTR [ebp-0x6f],edi
  417b4a:	jmp    0x417b04
  417b4c:	push   0xba43703a
  417b51:	push   esp
  417b52:	mov    eax,ds:0x22e5bccf
  417b57:	out    dx,eax
  417b58:	mov    ch,bh
  417b5a:	call   0x8a6:0x530d0d07
  417b61:	mov    ah,0x71
  417b63:	ret    0xbc6e
  417b66:	push   ebp
  417b67:	gs push 0x7b
  417b6a:	mov    al,0xb7
  417b6c:	retf   0xd1ea
  417b6f:	adc    BYTE PTR [ebx+0x4ef2f700],ah
  417b75:	mov    ebp,0x13858753
  417b7a:	or     bh,BYTE PTR ss:[eax+esi*2]
  417b7e:	mov    ch,0x4b
  417b80:	fst    st(3)
  417b82:	mov    dl,BYTE PTR [ebx-0x139f42b0]
  417b88:	adc    edx,edx
  417b8a:	inc    esi
  417b8b:	test   DWORD PTR [edi+0x651265a6],esi
  417b91:	repnz add al,0xd0
  417b94:	pop    esi
  417b95:	or     al,0x87
  417b97:	jb     0x417b24
  417b99:	leave  
  417b9a:	addr16 mov dh,0x3e
  417b9d:	and    ah,ah
  417b9f:	mov    DWORD PTR [eax+eiz*4],0x2053d11d
  417ba6:	pop    edi
  417ba7:	hlt    
  417ba8:	std    
  417ba9:	xchg   ebp,eax
  417baa:	mov    dh,0x58
  417bac:	push   ss
  417bad:	leave  
  417bae:	inc    edi
  417baf:	or     BYTE PTR [eax+0x4ffede07],0xda
  417bb6:	cmp    eax,0x69b44267
  417bbb:	into   
  417bbc:	arpl   bp,ax
  417bbe:	cmp    bl,BYTE PTR [ebx]
  417bc0:	in     eax,dx
  417bc1:	(bad)  
  417bc2:	sahf   
  417bc3:	push   edi
  417bc4:	enter  0xa3b4,0xae
  417bc8:	xor    al,0x2c
  417bca:	push   ebx
  417bcb:	lods   al,BYTE PTR ds:[esi]
  417bcc:	dec    edi
  417bcd:	sub    DWORD PTR [ebx+0x45],0x427f1fd9
  417bd4:	adc    esi,esp
  417bd6:	mov    ds:0x1dfbbdf7,eax
  417bdb:	nop
  417bdc:	das    
  417bdd:	imul   edx,DWORD PTR [ecx-0x18],0x27
  417be1:	inc    edx
  417be2:	push   ds
  417be3:	jb     0x417c1b
  417be5:	aas    
  417be6:	in     eax,0x85
  417be8:	ins    DWORD PTR es:[edi],dx
  417be9:	cmp    ebp,DWORD PTR ds:0x887c8052
  417bef:	bnd jp 0x417be4
  417bf2:	hlt    
  417bf3:	clc    
  417bf4:	sub    cl,ah
  417bf6:	push   ds
  417bf7:	fistp  WORD PTR [ebx+0x57]
  417bfa:	push   ebp
  417bfb:	jmp    0x505ec10e
  417c00:	imul   eax,DWORD PTR [ebx],0x72
  417c03:	push   eax
  417c04:	pusha  
  417c05:	inc    ebp
  417c06:	add    DWORD PTR [edi],ecx
  417c08:	dec    DWORD PTR [ebp-0x2fb46785]
  417c0e:	push   ebp
  417c0f:	inc    ebx
  417c10:	bound  edi,QWORD PTR ds:0xbaf6da2f
  417c16:	(bad)  
  417c17:	lods   eax,DWORD PTR ds:[esi]
  417c18:	sahf   
  417c19:	xchg   esi,eax
  417c1a:	inc    edi
  417c1b:	jp     0x417c3f
  417c1d:	ret    0xe0f6
  417c20:	xchg   DWORD PTR [edx-0x447bac31],ecx
  417c26:	bnd jo 0x417bb7
  417c29:	clc    
  417c2a:	push   esp
  417c2b:	xor    DWORD PTR [edx+edx*2+0x3f],0xb7e30706
  417c33:	push   es
  417c34:	mov    edx,0xe171f228
  417c39:	lds    edx,FWORD PTR [eax]
  417c3b:	rcl    DWORD PTR [ecx+0x6c5f4dbe],1
  417c41:	daa    
  417c42:	icebp  
  417c43:	retf   0x6e46
  417c46:	sbb    al,0x1a
  417c48:	jae    0x417c47
  417c4a:	cli    
  417c4b:	mov    ds:0xbe80c84d,al
  417c50:	fs pop edi
  417c52:	gs mov esi,0x83f06a84
  417c58:	xchg   esp,eax
  417c59:	dec    ebx
  417c5a:	lds    ecx,FWORD PTR [eax+0x33]
  417c5d:	fwait
  417c5e:	lea    ebp,[ecx]
  417c60:	loope  0x417cd6
  417c62:	sbb    ah,al
  417c64:	mov    bh,0x1d
  417c66:	shl    BYTE PTR [esi+0xdc0e38c],1
  417c6c:	add    DWORD PTR [edi+0x6edb1f7f],ebp
  417c72:	test   DWORD PTR [ebp-0x26cdeed5],edi
  417c78:	xor    bl,BYTE PTR [ebp+0x39]
  417c7b:	in     eax,0x18
  417c7d:	test   cl,bl
  417c7f:	je     0x417c8d
  417c81:	pusha  
  417c82:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c84:	(bad)
  417c87:	pop    esi
  417c88:	sub    cl,BYTE PTR [edi]
  417c8a:	popf   
  417c8b:	hlt    
  417c8c:	pop    esi
  417c8d:	in     al,0x1f
  417c8f:	xchg   esp,eax
  417c90:	adc    DWORD PTR [ebp-0x8],esi
  417c93:	imul   esi,DWORD PTR [ebx+0x66eeeb41],0x55901ae9
  417c9d:	idiv   DWORD PTR ds:0x6b9093f7
  417ca3:	scas   al,BYTE PTR es:[edi]
  417ca4:	stos   BYTE PTR es:[edi],al
  417ca5:	mov    edi,0x13e66426
  417caa:	shl    BYTE PTR [edx+eiz*8+0xa0da0df],1
  417cb1:	or     al,BYTE PTR [ebx+0x3395a340]
  417cb7:	push   ebp
  417cb8:	push   ss
  417cb9:	jmp    0x417d17
  417cbb:	push   ecx
  417cbc:	cmp    eax,0x2154773d
  417cc1:	cwde   
  417cc2:	ficomp WORD PTR [ebp-0xd]
  417cc5:	mov    WORD PTR [esi-0x2ff414d0],fs
  417ccb:	out    dx,eax
  417ccc:	adc    BYTE PTR [esi-0x77],ah
  417ccf:	out    0xa8,eax
  417cd1:	xor    al,0x29
  417cd3:	cmp    BYTE PTR [edx+0x58],dh
  417cd6:	mov    WORD PTR [esi],ds
  417cd8:	mov    al,0x45
  417cda:	out    dx,al
  417cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdc:	fbstp  TBYTE PTR [esp+ebp*2-0x6a]
  417ce0:	std    
  417ce1:	mov    eax,0x9031bdad
  417ce6:	push   edi
  417ce7:	adc    ebx,DWORD PTR [ebp+0x26353440]
  417ced:	out    0xa1,al
  417cef:	add    eax,0x32f22615
  417cf4:	adc    dh,dl
  417cf6:	push   esi
  417cf7:	add    BYTE PTR [ecx-0x6271361e],cl
  417cfd:	push   0xfffffffa
  417cff:	shl    BYTE PTR [edi],1
  417d01:	push   0x33
  417d03:	cli    
  417d04:	sub    BYTE PTR [eax],bl
  417d06:	pop    esp
  417d07:	mov    al,0x45
  417d09:	mov    esi,0xe0ac7359
  417d0e:	push   eax
  417d0f:	out    dx,al
  417d10:	stos   BYTE PTR es:[edi],al
  417d11:	pop    ebx
  417d12:	mov    dh,0x53
  417d14:	mov    dl,0x83
  417d16:	sub    eax,0xf99520f6
  417d1b:	jnp    0x417d5f
  417d1d:	ins    BYTE PTR es:[edi],dx
  417d1e:	jo     0x417cca
  417d20:	inc    esp
  417d21:	cdq    
  417d22:	nop
  417d23:	mov    dh,0xb
  417d25:	mov    eax,0x635f6e5b
  417d2a:	loopne 0x417d2e
  417d2c:	adc    eax,DWORD PTR [esi-0x66]
  417d2f:	nop
  417d30:	into   
  417d31:	out    0xe9,eax
  417d33:	mov    edi,0x29e374d8
  417d38:	hlt    
  417d39:	and    DWORD PTR [ebx],edi
  417d3b:	sbb    BYTE PTR [ecx+0x2],cl
  417d3e:	mov    esp,0x2355e49a
  417d43:	jne    0x417d62
  417d45:	sbb    BYTE PTR [edx-0x5fbd97de],dl
  417d4b:	dec    ebx
  417d4c:	icebp  
  417d4d:	fucomp st(4)
  417d4f:	pusha  
  417d50:	stos   DWORD PTR es:[edi],eax
  417d51:	sbb    eax,0x47e45398
  417d56:	mov    edx,0xe88170d
  417d5b:	mov    edi,0x37b54ede
  417d60:	loope  0x417d6c
  417d62:	mov    esi,0x32d5535a
  417d67:	inc    edi
  417d68:	jg     0x417d4f
  417d6a:	pop    ds
  417d6b:	or     DWORD PTR [edx-0x1d3aaf1d],eax
  417d71:	dec    edx
  417d72:	stos   BYTE PTR es:[edi],al
  417d73:	stos   DWORD PTR es:[edi],eax
  417d74:	ret    0x1ef2
  417d77:	inc    esp
  417d78:	loopne 0x417d2f
  417d7a:	hlt    
  417d7b:	loope  0x417d1a
  417d7d:	icebp  
  417d7e:	jp     0x417d1e
  417d80:	xlat   BYTE PTR ds:[ebx]
  417d81:	out    0x48,al
  417d83:	jo     0x417dda
  417d85:	cmp    al,0xa5
  417d87:	ret    
  417d88:	leave  
  417d89:	jge    0x417d98
  417d8b:	call   DWORD PTR [edx-0x60]
  417d8e:	sub    dl,BYTE PTR [eax+0x2e654a0a]
  417d94:	hlt    
  417d95:	add    esi,DWORD PTR [edi]
  417d97:	fsubr  DWORD PTR ds:0xdfa3a6bf
  417d9d:	inc    esi
  417d9e:	mov    esi,esp
  417da0:	out    0xd9,al
  417da2:	fnsave [ebx+0x6a]
  417da5:	aam    0x21
  417da7:	pop    ss
  417da8:	(bad)  
  417da9:	in     al,dx
  417daa:	out    0x86,eax
  417dac:	push   0x505b4bf9
  417db1:	dec    ebx
  417db2:	das    
  417db3:	pop    es
  417db4:	mov    ch,0xff
  417db6:	mov    ebx,0xafa2e337
  417dbb:	mov    ds:0xe253baf0,al
  417dc0:	(bad)  [esi-0x67]
  417dc3:	addr16 mov ds:0xfa2c,al
  417dc7:	fidiv  DWORD PTR [edx+eax*2]
  417dca:	cld    
  417dcb:	push   ebp
  417dcc:	or     eax,0xd8f942f6
  417dd1:	inc    edi
  417dd2:	jo     0x417de3
  417dd4:	add    dl,BYTE PTR [ecx+0x1bde6561]
  417dda:	add    esp,DWORD PTR [edx]
  417ddc:	xchg   esp,eax
  417ddd:	mov    edi,eax
  417ddf:	dec    esp
  417de0:	ret    
  417de1:	fisttp DWORD PTR [ebp-0x2806f592]
  417de7:	mov    ds:0x9e87f3f5,eax
  417dec:	cwde   
  417ded:	inc    esi
  417dee:	ret    0xd75e
  417df1:	shr    BYTE PTR [ecx],cl
  417df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df4:	and    esi,DWORD PTR [ebp-0x43d3e15]
  417dfa:	and    al,0xa5
  417dfc:	xchg   ecx,eax
  417dfd:	pop    ss
  417dfe:	xchg   esi,eax
  417dff:	push   ebp
  417e00:	inc    edx
  417e01:	cmp    al,0x9a
  417e03:	cwde   
  417e04:	sahf   
  417e05:	lock std 
  417e07:	pop    edx
  417e08:	xor    BYTE PTR ss:[ecx+0x1],bl
  417e0c:	mov    eax,ds:0x8e243f66
  417e11:	clc    
  417e12:	fsubr  QWORD PTR [eax-0x54]
  417e15:	mov    esi,0x56fef5e9
  417e1a:	mov    cl,0xe7
  417e1c:	mov    esp,0x4801aed5
  417e21:	std    
  417e22:	sbb    al,0x3
  417e24:	dec    edi
  417e25:	les    esi,FWORD PTR [edi-0x22]
  417e28:	and    bl,dh
  417e2a:	push   0xa12a0c7d
  417e2f:	mov    al,ds:0x1d8f6233
  417e34:	inc    edi
  417e35:	add    BYTE PTR [eax],0xd6
  417e38:	sti    
  417e39:	or     al,0xfc
  417e3b:	push   ebp
  417e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3d:	imul   ecx,DWORD PTR [edi],0xffffffd8
  417e40:	adc    DWORD PTR [eax],esi
  417e42:	ror    BYTE PTR [edx],cl
  417e44:	inc    ebx
  417e45:	dec    eax
  417e46:	or     esp,esp
  417e48:	mov    esp,0x5567ac3f
  417e4d:	xchg   esi,eax
  417e4e:	rol    al,1
  417e50:	xor    eax,0x794f6c9f
  417e55:	cmp    al,0xe6
  417e57:	pop    esi
  417e58:	(bad)  
  417e59:	or     eax,0xd2d32fc6
  417e5e:	xchg   esp,eax
  417e5f:	lods   eax,DWORD PTR ds:[esi]
  417e60:	in     eax,0xf
  417e62:	rcr    DWORD PTR [edx+0x146cc692],0x18
  417e69:	fidivr WORD PTR [esi+0x501e1b18]
  417e6f:	pop    ss
  417e70:	int    0x53
  417e72:	ins    BYTE PTR es:[edi],dx
  417e73:	aad    0xb8
  417e75:	out    dx,al
  417e76:	bound  edi,QWORD PTR [esi-0x7c]
  417e79:	xor    eax,0x90382460
  417e7e:	pushf  
  417e7f:	sbb    eax,esp
  417e81:	sbb    BYTE PTR [esi+0x7b8f7b43],0x17
  417e88:	test   dl,0x45
  417e8b:	and    eax,0x90002039
  417e90:	test   eax,0x76fb4f30
  417e95:	push   edi
  417e96:	add    BYTE PTR [ecx],bl
  417e98:	inc    BYTE PTR [ebx+0x11]
  417e9b:	jl     0x417e64
  417e9d:	int    0xa7
  417e9f:	ret    0x2c17
  417ea2:	sbb    dl,BYTE PTR [eax]
  417ea4:	or     BYTE PTR [ecx],al
  417ea6:	sahf   
  417ea7:	mov    esi,esi
  417ea9:	enter  0x2af2,0x15
  417ead:	sub    bl,BYTE PTR ds:0xd3b1c976
  417eb3:	xlat   BYTE PTR ds:[ebx]
  417eb4:	sub    DWORD PTR [ebx+0x28],eax
  417eb7:	jp     0x417f15
  417eb9:	push   esi
  417eba:	push   0x9d73990d
  417ebf:	jmp    0x9bdf2a17
  417ec4:	mov    eax,0xc4bffae8
  417ec9:	push   edx
  417eca:	pop    esp
  417ecb:	or     eax,0x300863d3
  417ed0:	push   cs
  417ed1:	rcr    BYTE PTR [ecx],cl
  417ed3:	adc    BYTE PTR gs:[ecx-0x61d0dcdc],dh
  417eda:	stos   DWORD PTR es:[edi],eax
  417edb:	jle    0x417f16
  417edd:	test   al,0x8e
  417edf:	xlat   BYTE PTR ds:[ebx]
  417ee0:	or     al,BYTE PTR [ecx+0x3e]
  417ee3:	call   DWORD PTR [ecx+0x61]
  417ee6:	std    
  417ee7:	(bad)  
  417ee8:	call   0xee8f59bf
  417eed:	sahf   
  417eee:	out    0x50,al
  417ef0:	sub    edi,DWORD PTR [ebx-0x14]
  417ef3:	out    dx,eax
  417ef4:	out    dx,al
  417ef5:	sti    
  417ef6:	cmp    eax,0x9a83f03a
  417efb:	inc    eax
  417efc:	xchg   esi,eax
  417efd:	mov    esp,0x56a1996e
  417f02:	clc    
  417f03:	xchg   ebp,eax
  417f04:	cmp    al,0xd2
  417f06:	(bad)  
  417f07:	fsub   DWORD PTR [ebx-0x51f7b749]
  417f0d:	out    dx,eax
  417f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f0f:	jl     0x417ea5
  417f11:	pop    esp
  417f12:	adc    al,0xcb
  417f14:	mov    edx,0x4915bde4
  417f19:	ret    
  417f1a:	cmp    eax,0xca2a3b13
  417f1f:	(bad)  
  417f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f21:	and    eax,0xcfaecd63
  417f26:	cld    
  417f27:	call   0xeff5:0x6e1c67e9
  417f2e:	sti    
  417f2f:	xlat   BYTE PTR ds:[ebx]
  417f30:	inc    esp
  417f31:	push   edx
  417f32:	shl    BYTE PTR [esi-0x7727dbee],cl
  417f38:	rcr    al,0xcc
  417f3b:	outs   dx,BYTE PTR ds:[esi]
  417f3c:	push   DWORD PTR [edi+ecx*4]
  417f3f:	mov    esp,0xc822eac4
  417f44:	mov    ebx,0xe2205790
  417f49:	dec    esi
  417f4a:	lahf   
  417f4b:	dec    esi
  417f4c:	std    
  417f4d:	mov    ch,0x48
  417f4f:	inc    esi
  417f50:	inc    edx
  417f51:	dec    ebx
  417f52:	jecxz  0x417ee6
  417f54:	jmp    0x417edb
  417f56:	fsub   QWORD PTR [ebp-0x4263496a]
  417f5c:	inc    eax
  417f5d:	lock mov DWORD PTR [edx-0x10],ecx
  417f61:	daa    
  417f62:	rcl    bl,cl
  417f64:	jnp    0x417f42
  417f66:	mov    bh,0x40
  417f68:	lahf   
  417f69:	loope  0x417f35
  417f6b:	mov    BYTE PTR [edx-0x2f42a75b],dh
  417f71:	xchg   esp,eax
  417f72:	fld    DWORD PTR [eax-0x363807fe]
  417f78:	sub    bl,BYTE PTR ds:0xca52cd49
  417f7e:	and    DWORD PTR [eax-0x1641e27f],esi
  417f84:	inc    eax
  417f85:	sahf   
  417f86:	pop    ebp
  417f87:	aad    0xd9
  417f89:	pusha  
  417f8a:	daa    
  417f8b:	leave  
  417f8c:	inc    edx
  417f8d:	sub    al,0xfa
  417f8f:	mov    edi,0xd5d228b8
  417f94:	jne    0x417f1c
  417f96:	sbb    DWORD PTR [edi+0x6b],ebp
  417f99:	popf   
  417f9a:	add    cl,0xe1
  417f9d:	xor    eax,0x2051edbf
  417fa2:	dec    ebp
  417fa3:	icebp  
  417fa4:	cmp    dl,BYTE PTR ss:[edi]
  417fa7:	clc    
  417fa8:	rol    DWORD PTR [ebp+0x763fe990],0x96
  417faf:	cli    
  417fb0:	xchg   esp,eax
  417fb1:	sub    bh,BYTE PTR [edx+ebx*4-0x1af9bdb5]
  417fb8:	mov    edi,0x4b941cf4
  417fbd:	les    eax,FWORD PTR [ebx-0x49]
  417fc0:	xor    eax,esi
  417fc2:	lods   eax,DWORD PTR ds:[esi]
  417fc3:	add    dh,al
  417fc5:	fs fs mov ch,0xa3
  417fc9:	cmp    al,BYTE PTR [edi+0x2658bb56]
  417fcf:	adc    eax,esp
  417fd1:	nop
  417fd2:	jnp    0x418017
  417fd4:	add    cl,ah
  417fd6:	sub    BYTE PTR [eax],dl
  417fd8:	dec    ebp
  417fd9:	mov    bh,0x39
  417fdb:	mov    ebp,0x9ff06700
  417fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fe1:	add    cl,BYTE PTR [ebx]
  417fe3:	jmp    0x8786d7b4
  417fe8:	dec    ebx
  417fe9:	mov    ebp,0xdd699f90
  417fee:	jae    0x41800b
  417ff0:	xor    DWORD PTR [edx],esp
  417ff2:	push   es
  417ff3:	lds    esi,FWORD PTR [ebx+0x3a7b58b8]
  417ff9:	xchg   edx,eax
  417ffa:	add    eax,0x7baf75f1
  417fff:	push   esp
  418000:	or     bl,ch
  418002:	pop    edi
  418003:	jl     0x418048
  418005:	sbb    BYTE PTR [edi-0x18],ah
  418008:	aaa    
  418009:	in     eax,0xdd
  41800b:	je     0x41803d
  41800d:	sbb    DWORD PTR [edx],0x24
  418010:	mov    edi,0x976cc4cd
  418015:	sbb    DWORD PTR [edi-0x77b124e2],esi
  41801b:	sahf   
  41801c:	test   DWORD PTR [eax-0x105b21b6],edi
  418022:	ss pop edi
  418024:	push   edx
  418025:	jnp    0x418046
  418027:	pop    ds
  418028:	add    BYTE PTR [esi+0x2e],bl
  41802b:	test   BYTE PTR [edi+0x1c2ea4a1],0x68
  418032:	jae    0x418022
  418034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418035:	test   eax,0xcc3a9819
  41803a:	pop    esi
  41803b:	and    DWORD PTR [eax],edx
  41803d:	iret   
  41803e:	push   0x153e3d53
  418043:	push   0x138e6629
  418048:	test   al,0x31
  41804a:	mov    edx,0xc44c3a22
  41804f:	jle    0x418062
  418051:	sbb    cl,BYTE PTR [ebp+0x1e]
  418054:	and    al,0x75
  418056:	mov    edi,0xcbb97dc
  41805b:	scas   al,BYTE PTR es:[edi]
  41805c:	stc    
  41805d:	adc    bl,BYTE PTR [esi-0x141e2a81]
  418063:	pop    esi
  418064:	mov    ds:0xa394e895,eax
  418069:	pop    esi
  41806a:	gs test eax,0xfbfc349e
  418070:	pop    ebx
  418071:	arpl   WORD PTR [edx-0x60e4f5fa],di
  418077:	cwde   
  418078:	rol    al,0xce
  41807b:	fstp   TBYTE PTR [esi+0x59c58da0]
  418081:	add    DWORD PTR [esi-0x849fa8f],edi
  418087:	stos   DWORD PTR es:[edi],eax
  418088:	cmp    ecx,DWORD PTR [eax+0x46970760]
  41808e:	dec    ecx
  41808f:	les    edi,FWORD PTR [ecx+0x5a964769]
  418095:	lds    esp,FWORD PTR ds:0xa487bed3
  41809b:	mov    ecx,0xf74d8b79
  4180a0:	sti    
  4180a1:	shl    DWORD PTR [esi-0x56],cl
  4180a4:	mov    ebp,0x9df59d8b
  4180a9:	sbb    DWORD PTR ss:[edi],ebp
  4180ac:	mov    eax,ds:0xdd923e1d
  4180b1:	add    ebp,ecx
  4180b3:	adc    eax,DWORD PTR [edi]
  4180b5:	sub    al,0xec
  4180b7:	sahf   
  4180b8:	shl    BYTE PTR [edx],cl
  4180ba:	cmp    DWORD PTR [ebx+0x6d750bf2],0xf1ee73e
  4180c4:	fcom   st(5)
  4180c6:	cmp    cl,BYTE PTR [esi-0x685b504d]
  4180cc:	fadd   QWORD PTR [ebx-0x53]
  4180cf:	aad    0xfb
  4180d1:	fsubr  st,st(5)
  4180d3:	pushf  
  4180d4:	mov    edx,0x6dfade55
  4180d9:	jbe    0x41809a
  4180db:	(bad)  
  4180dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180de:	iret   
  4180df:	mov    eax,0x1b0dd51c
  4180e4:	push   ebp
  4180e5:	mov    edx,0xcef5a66d
  4180ea:	test   BYTE PTR [ecx+edx*2-0x1a],dl
  4180ee:	or     DWORD PTR [esi+0x31],0xffffffdb
  4180f2:	adc    ecx,DWORD PTR [eax-0x66708929]
  4180f8:	xor    BYTE PTR [eax*2-0x1b9bb3fc],al
  4180ff:	push   es
  418100:	sub    BYTE PTR [ebx+0x54],0x77
  418104:	loop   0x418178
  418106:	jecxz  0x4180b2
  418108:	iret   
  418109:	mov    ds:0xc7795a54,eax
  41810e:	xchg   edx,eax
  41810f:	lds    ebp,FWORD PTR [edx-0x58ad4843]
  418115:	push   esp
  418116:	pop    edx
  418117:	adc    edi,DWORD PTR [esi-0x17e2a6db]
  41811d:	mov    bh,0x37
  41811f:	mov    WORD PTR [ebp+0x76],ss
  418122:	fldcw  WORD PTR ds:0x555a9a3f
  418128:	lods   eax,DWORD PTR ds:[esi]
  418129:	ins    BYTE PTR es:[edi],dx
  41812a:	lahf   
  41812b:	xchg   edi,eax
  41812c:	xor    DWORD PTR [ebx+0x32],0x4d5e40dd
  418133:	xchg   ebp,eax
  418134:	icebp  
  418135:	sbb    DWORD PTR [edi],esp
  418137:	pop    edi
  418138:	dec    esi
  418139:	stc    
  41813a:	cld    
  41813b:	and    cl,bl
  41813d:	mov    ch,0x3
  41813f:	aad    0x65
  418141:	xor    bh,bh
  418143:	sub    eax,0xfc8e6f82
  418148:	xchg   edi,eax
  418149:	and    al,0x39
  41814b:	daa    
  41814c:	mov    eax,0x8156dad8
  418151:	test   al,0x43
  418153:	pop    eax
  418154:	fwait
  418155:	inc    eax
  418156:	add    al,0xb
  418158:	sbb    al,BYTE PTR fs:[esi]
  41815b:	mov    dl,0x89
  41815d:	out    dx,al
  41815e:	or     esi,DWORD PTR [ecx+ecx*4]
  418161:	cwde   
  418162:	push   0x16f0725f
  418167:	push   cs
  418168:	pop    ebx
  418169:	cmp    ch,BYTE PTR [edx-0x21]
  41816c:	scas   eax,DWORD PTR es:[edi]
  41816d:	repz push esp
  41816f:	pop    ebx
  418170:	pop    edx
  418171:	jbe    0x41811e
  418173:	inc    ebp
  418174:	sbb    esp,ebp
  418176:	gs pop esi
  418178:	xor    eax,0x23ccbffe
  41817d:	cmp    DWORD PTR [eax+0x657c37fd],ebx
  418183:	add    DWORD PTR [ebx+0x5d],esp
  418186:	shl    DWORD PTR gs:[esi+esi*8+0x4ca8204f],0x7f
  41818f:	jnp    0x418127
  418191:	mov    WORD PTR [edx-0x38],?
  418194:	xchg   esp,eax
  418195:	gs gs fs mov bl,0xb0
  41819a:	inc    edi
  41819b:	dec    ebp
  41819c:	(bad)  [ebx-0x4b]
  41819f:	fild   DWORD PTR es:[edi]
  4181a2:	mov    ecx,0x368cf56
  4181a7:	push   edi
  4181a8:	mov    bl,0x7b
  4181aa:	jbe    0x4181dd
  4181ac:	icebp  
  4181ad:	shl    ebp,1
  4181af:	xchg   edi,eax
  4181b0:	(bad)  [eax+0x5a5ca107]
  4181b6:	icebp  
  4181b7:	adc    ch,BYTE PTR [ebx+ebp*1]
  4181ba:	and    DWORD PTR [esi+esi*1+0xbdffb7b],eax
  4181c1:	std    
  4181c2:	push   ebx
  4181c3:	ret    0xd2e4
  4181c6:	sbb    al,0x8e
  4181c8:	jno    0x4181e9
  4181ca:	jg     0x418217
  4181cc:	popa   
  4181cd:	cmp    DWORD PTR [edx+0x4d],0xa95e39e4
  4181d4:	das    
  4181d5:	out    dx,al
  4181d6:	mov    dl,0x3c
  4181d8:	sbb    al,0xa3
  4181da:	lock cmp al,0x56
  4181dd:	pop    eax
  4181de:	mov    bl,0xa4
  4181e0:	push   esp
  4181e1:	jnp    0x41818d
  4181e3:	sbb    BYTE PTR [edi],cl
  4181e5:	push   eax
  4181e6:	or     eax,0x2c0e61a8
  4181eb:	jge    0x41824d
  4181ed:	inc    edi
  4181ee:	nop
  4181ef:	xor    eax,0xeb6d6143
  4181f4:	pop    ss
  4181f5:	in     eax,dx
  4181f6:	scas   eax,DWORD PTR es:[edi]
  4181f7:	xchg   ah,dl
  4181f9:	xchg   edx,eax
  4181fa:	call   0x449f:0xcecdac5d
  418201:	rol    BYTE PTR [ebx],0xae
  418204:	mov    eax,ds:0x2510a8e9
  418209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820a:	xchg   esi,eax
  41820b:	fsubr  QWORD PTR [ebx+0x31]
  41820e:	xor    al,0xa5
  418210:	jp     0x418217
  418212:	(bad)  
  418215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418216:	sar    BYTE PTR [edx-0x289a0d02],0x28
  41821d:	jae    0x4181b5
  41821f:	call   0x8bc5:0x7784753b
  418226:	iret   
  418227:	mov    bh,0x6a
  418229:	mov    al,0x61
  41822b:	ja     0x418237
  41822d:	xchg   ebx,eax
  41822e:	sbb    bh,BYTE PTR [esi-0x792e18e3]
  418234:	fst    DWORD PTR [esi]
  418236:	sahf   
  418237:	(bad)  
  418238:	or     cl,dh
  41823a:	lods   al,BYTE PTR ds:[esi]
  41823b:	in     eax,0x89
  41823d:	jecxz  0x4182b9
  41823f:	(bad)  
  418240:	call   0x7611f813
  418245:	mov    eax,ds:0xd7af80fb
  41824a:	cdq    
  41824b:	mov    edx,0x3af8b76f
  418250:	stos   BYTE PTR es:[edi],al
  418251:	sub    cl,dh
  418253:	pop    eax
  418254:	out    dx,al
  418255:	mov    edx,0xe585a494
  41825a:	arpl   sp,cx
  41825c:	mov    dl,0x89
  41825e:	cmp    BYTE PTR [ebp+ecx*8-0x7d66a50a],0x18
  418266:	sub    edx,DWORD PTR [ecx]
  418268:	jmp    0x13b:0x50352bb6
  41826f:	pop    esi
  418270:	jp     0x4182b2
  418272:	jae    0x418217
  418274:	mov    dh,0x82
  418276:	daa    
  418277:	add    DWORD PTR [edx+0x38b83e78],esi
  41827d:	xchg   edi,eax
  41827e:	(bad)  
  41827f:	leave  
  418280:	and    ebx,DWORD PTR [edi+0xf8ecd2e]
  418286:	mov    ds:0x3742c84f,al
  41828b:	fld    TBYTE PTR [ebp+0x63]
  41828e:	leave  
  41828f:	lahf   
  418290:	bound  esp,QWORD PTR [edx-0x155f9c05]
  418296:	out    dx,al
  418297:	jl     0x4182ed
  418299:	mov    esi,0x16a8aa75
  41829e:	mov    edi,0xfa1927ff
  4182a3:	push   ebx
  4182a4:	leave  
  4182a5:	or     eax,0x156f317f
  4182aa:	push   ds
  4182ab:	mov    edi,0xde741efe
  4182b0:	mov    eax,ds:0xcc36c9e5
  4182b5:	fst    st(4)
  4182b7:	call   0xbe012cf9
  4182bc:	in     al,dx
  4182bd:	add    bh,bl
  4182bf:	aam    0xdf
  4182c1:	call   0x84dd:0xa7fe8c7
  4182c8:	addr16 setle dh
  4182cc:	adc    al,0x25
  4182ce:	xor    eax,0x2b0cfe32
  4182d3:	xchg   ebx,eax
  4182d4:	adc    eax,0xdd1b7468
  4182d9:	popa   
  4182da:	and    DWORD PTR [ecx-0x73],ecx
  4182dd:	in     al,0xe9
  4182df:	sub    DWORD PTR [edx],ebp
  4182e1:	adc    DWORD PTR [ecx-0x3e],edi
  4182e4:	jmp    0x4182a3
  4182e6:	inc    ecx
  4182e7:	xor    BYTE PTR [ecx+0x5d424632],al
  4182ed:	scas   eax,DWORD PTR es:[edi]
  4182ee:	mov    dh,0xb8
  4182f0:	mov    ebx,0xd6f547aa
  4182f5:	xchg   esi,eax
  4182f6:	cs dec ecx
  4182f8:	xchg   edi,eax
  4182f9:	or     DWORD PTR [edx],eax
  4182fb:	in     al,0xea
  4182fd:	pop    ebp
  4182fe:	push   eax
  4182ff:	add    bl,dl
  418301:	adc    DWORD PTR [eax+edx*4],esp
  418304:	jno    0x4182bb
  418306:	imul   edi
  418308:	hlt    
  418309:	das    
  41830a:	sub    bh,BYTE PTR [edx]
  41830c:	(bad)  
  41830d:	mov    ebp,ds
  41830f:	call   0xea45:0xe77d9656
  418316:	mov    ds:0x307afd88,al
  41831b:	push   0xe2552108
  418320:	cmc    
  418321:	cwde   
  418322:	lahf   
  418323:	(bad)  
  418324:	in     eax,0x6e
  418326:	jg     0x4182b1
  418328:	lods   al,BYTE PTR ds:[esi]
  418329:	sbb    ebp,DWORD PTR [ecx+0x61d31d27]
  41832f:	mov    ah,0xa8
  418331:	inc    esi
  418332:	mov    WORD PTR [edx],ds
  418334:	xor    ecx,0x66
  418337:	std    
  418338:	pop    ss
  418339:	stos   BYTE PTR es:[edi],al
  41833a:	mov    ?,WORD PTR cs:[edi+0x65b749b5]
  418341:	push   ds
  418342:	test   ebx,edi
  418344:	xor    DWORD PTR [ecx+eax*8],ecx
  418347:	cs mov ecx,0x89473b7d
  41834d:	fbstp  TBYTE PTR [eax-0x6d4dd3d7]
  418353:	cwde   
  418354:	jne    0x41835f
  418356:	cld    
  418357:	pop    ecx
  418358:	jae    0x4183d8
  41835a:	stc    
  41835b:	ss jns 0x418366
  41835e:	mov    bl,0xa4
  418360:	arpl   WORD PTR [edi],cx
  418362:	aas    
  418363:	inc    eax
  418364:	iret   
  418365:	test   BYTE PTR [eax-0x225ed338],ah
  41836b:	in     eax,dx
  41836c:	ror    BYTE PTR [edi-0x7c0726d5],cl
  418372:	sbb    BYTE PTR [ebx],0x3f
  418375:	daa    
  418376:	out    dx,al
  418377:	nop
  418378:	inc    ebp
  418379:	not    BYTE PTR [edx+0x9]
  41837c:	in     al,dx
  41837d:	xchg   ecx,eax
  41837e:	xchg   esi,eax
  41837f:	adc    al,0xf6
  418381:	addr16 push ds
  418383:	sbb    al,0x22
  418385:	lods   eax,DWORD PTR ds:[esi]
  418386:	cmp    BYTE PTR [ebp-0x545c5612],bh
  41838c:	into   
  41838d:	leave  
  41838e:	mov    ebp,0x76ca799f
  418393:	xchg   DWORD PTR [esi+0x6f240fdb],ecx
  418399:	mov    eax,ds:0x424c1e5d
  41839e:	(bad)  
  41839f:	sbb    eax,edx
  4183a1:	and    eax,0x61f42755
  4183a6:	xchg   edi,eax
  4183a7:	inc    ecx
  4183a8:	cmp    BYTE PTR [edx],al
  4183aa:	jecxz  0x418389
  4183ac:	sbb    al,0x73
  4183ae:	scas   eax,DWORD PTR es:[edi]
  4183af:	inc    ecx
  4183b0:	(bad)  
  4183b1:	in     al,0x6
  4183b3:	cmp    DWORD PTR ds:0x7d7b099f,ebx
  4183b9:	adc    al,0xaf
  4183bb:	jns    0x41836d
  4183bd:	inc    esi
  4183be:	push   edx
  4183bf:	and    ch,BYTE PTR [ebx+0x6f]
  4183c2:	mov    edx,0xc47d564
  4183c7:	call   0x61cc:0x2336b8ca
  4183ce:	out    dx,eax
  4183cf:	xchg   BYTE PTR [edx+0x7a5681f5],dh
  4183d5:	retf   0x7dc4
  4183d8:	(bad)  
  4183da:	and    DWORD PTR [edx],ecx
  4183dc:	sub    BYTE PTR [eax+0x6c],ah
  4183df:	enter  0x3a2,0xe4
  4183e3:	ins    DWORD PTR es:[edi],dx
  4183e4:	jg     0x41836a
  4183e6:	or     dl,dh
  4183e8:	cmp    BYTE PTR [edx+eax*1+0x3be7ac95],dl
  4183ef:	mov    ecx,0xe79aae1d
  4183f4:	xchg   esi,eax
  4183f5:	leave  
  4183f6:	cdq    
  4183f7:	es jae 0x41842d
  4183fa:	jns    0x418458
  4183fc:	pushf  
  4183fd:	push   ds
  4183fe:	dec    ebp
  4183ff:	push   0xb1902441
  418404:	sbb    ecx,DWORD PTR [edi+edx*4-0x39be8d38]
  41840b:	nop
  41840c:	mov    ds:0x7d75ec05,al
  418411:	or     eax,0xdfe459cf
  418416:	adc    al,0x41
  418418:	jp     0x418463
  41841a:	sub    ch,BYTE PTR [esi-0xc61da21]
  418420:	pop    ecx
  418421:	ja     0x41844a
  418423:	in     al,dx
  418424:	adc    al,0x6d
  418426:	jne    0x418418
  418428:	push   eax
  418429:	jns    0x418415
  41842b:	xchg   ecx,eax
  41842c:	repz mov edi,0x4a076e9c
  418432:	aas    
  418433:	(bad)  
  418434:	out    dx,al
  418435:	mov    ebx,0xbe3a004e
  41843a:	fsub   st(1),st
  41843c:	cmc    
  41843d:	test   al,0xf7
  41843f:	adc    DWORD PTR [edi-0x506a5021],ecx
  418445:	inc    esi
  418446:	fstp   QWORD PTR [ebp+0x5c7fed52]
  41844c:	mov    ds:0xae47b420,eax
  418451:	das    
  418452:	in     eax,dx
  418453:	iret   
  418454:	mov    WORD PTR [ebp-0x71],?
  418457:	pop    edi
  418458:	xlat   BYTE PTR ds:[ebx]
  418459:	popf   
  41845a:	add    al,0x45
  41845c:	cmc    
  41845d:	xlat   BYTE PTR ds:[ebx]
  41845e:	sub    edi,DWORD PTR [edx]
  418460:	hlt    
  418461:	std    
  418462:	cdq    
  418463:	lds    esi,FWORD PTR [edi+0x2c]
  418466:	xor    al,0x37
  418468:	add    ebx,ebx
  41846a:	in     al,0x93
  41846c:	addr16 pop esi
  41846e:	push   eax
  41846f:	std    
  418470:	pop    ebp
  418471:	push   es
  418472:	call   0xe6b:0xa757f5c8
  418479:	or     ebx,eax
  41847b:	sbb    BYTE PTR [edi-0x73a06543],bh
  418481:	imul   BYTE PTR [eax+0x17]
  418484:	sub    edi,ebx
  418486:	les    eax,FWORD PTR ds:0x3a0c90f0
  41848c:	(bad)  
  41848d:	and    al,0xa2
  41848f:	cmp    eax,0x5a1f4d8c
  418494:	stos   BYTE PTR es:[edi],al
  418495:	pop    eax
  418496:	std    
  418497:	gs mov ah,0x73
  41849a:	(bad)  
  41849b:	(bad)  
  41849d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41849e:	leave  
  41849f:	retf   
  4184a0:	out    0x62,al
  4184a2:	or     al,0x81
  4184a4:	mov    dl,0x11
  4184a6:	scas   al,BYTE PTR es:[edi]
  4184a7:	lock push ebp
  4184a9:	mov    ebx,DWORD PTR [edx+0x34]
  4184ac:	inc    ecx
  4184ad:	adc    eax,0x6df8847a
  4184b2:	jmp    0x2d94e197
  4184b7:	sub    ch,ch
  4184b9:	mov    eax,ds:0x8fed7cbf
  4184be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c0:	mov    ah,0x6c
  4184c2:	cdq    
  4184c3:	pop    eax
  4184c4:	rcr    BYTE PTR [ecx+0x79],0xc2
  4184c8:	jae    0x41853d
  4184ca:	dec    ebp
  4184cb:	xchg   ebx,eax
  4184cc:	push   esp
  4184cd:	xor    al,0xe6
  4184cf:	push   cs
  4184d0:	ss clc 
  4184d2:	lock ja 0x418552
  4184d5:	and    al,0x45
  4184d7:	ds pop ss
  4184d9:	sbb    DWORD PTR [esi-0x3dd63895],0xffffffee
  4184e0:	(bad)  
  4184e1:	jbe    0x4184d2
  4184e3:	xor    edx,DWORD PTR [ebp-0x1c]
  4184e6:	xchg   esi,eax
  4184e7:	mov    ds:0x9c23da3c,al
  4184ec:	cmp    al,0x3b
  4184ee:	leave  
  4184ef:	bound  eax,QWORD PTR [edi+0x4f5ac092]
  4184f5:	sar    BYTE PTR [ebp-0x59],1
  4184f8:	add    DWORD PTR [ebx],0x51
  4184fb:	out    0x1b,eax
  4184fd:	fwait
  4184fe:	sbb    ch,al
  418500:	mov    ah,0x6f
  418502:	pop    eax
  418503:	xor    DWORD PTR gs:[eax+edi*4],0x950389
  41850b:	scas   al,BYTE PTR es:[edi]
  41850c:	xchg   ecx,eax
  41850d:	xor    eax,0x4bb37675
  418512:	call   0x25a02972
  418517:	hlt    
  418518:	sbb    eax,0xe89bbfb3
  41851d:	or     eax,0xb1a308fe
  418522:	sub    BYTE PTR [edx-0x30],0x38
  418526:	sub    eax,0x398bdb6b
  41852b:	std    
  41852c:	xchg   edx,eax
  41852d:	pop    esp
  41852e:	add    eax,0x63db21c8
  418533:	inc    ebp
  418534:	push   0xffffffe2
  418536:	retf   0x85e3
  418539:	lahf   
  41853a:	aam    0x29
  41853c:	push   ecx
  41853d:	cdq    
  41853e:	mov    al,0xfc
  418540:	jmp    0x964b:0xf5aceb9
  418547:	call   0xdb59:0xd4b24bdc
  41854e:	mov    ebx,DWORD PTR [esi]
  418550:	xor    al,0x6e
  418552:	mov    ds:0x3b71a5a9,eax
  418557:	test   BYTE PTR [edx+eax*2],ah
  41855a:	js     0x418565
  41855c:	inc    ebx
  41855d:	or     DWORD PTR [eax+0x44],ecx
  418560:	push   cs
  418561:	adc    ah,BYTE PTR [edx+0x58]
  418564:	and    cl,BYTE PTR [edi+eax*8]
  418567:	mov    eax,0x7d45b29e
  41856c:	ins    DWORD PTR es:[edi],dx
  41856d:	daa    
  41856e:	push   edi
  41856f:	mov    ebx,DWORD PTR [edx]
  418571:	jb     0x4184f4
  418573:	in     al,dx
  418574:	xchg   ecx,eax
  418575:	inc    esp
  418576:	mov    eax,ds:0xe1c8b867
  41857b:	sub    al,0x35
  41857d:	sub    ah,BYTE PTR [ebp-0x5b]
  418580:	pusha  
  418581:	dec    ecx
  418582:	mov    ebx,0xd903e62b
  418587:	es mov ah,0x25
  41858a:	test   BYTE PTR [ecx+edi*2-0x2c],ch
  41858e:	mov    ds:0x188cc554,al
  418593:	in     al,0x16
  418595:	and    edx,ebp
  418597:	mov    dl,0x9e
  418599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41859a:	(bad)  [ecx]
  41859c:	(bad)  
  41859d:	lods   eax,DWORD PTR ds:[esi]
  41859e:	lock imul ebp,DWORD PTR cs:[ebp+0x5],0xb1ff9999
  4185a7:	pop    eax
  4185a8:	scas   eax,DWORD PTR es:[edi]
  4185a9:	in     eax,0x7a
  4185ab:	and    ah,ch
  4185ad:	stos   DWORD PTR es:[edi],eax
  4185ae:	pop    esi
  4185af:	jbe    0x418597
  4185b1:	jae    0x4185bb
  4185b3:	les    ecx,FWORD PTR [eax+0x453e914]
  4185b9:	fsub   QWORD PTR [edi+eiz*2-0x65]
  4185bd:	scas   al,BYTE PTR es:[edi]
  4185be:	test   BYTE PTR [eax],cl
  4185c0:	aas    
  4185c1:	jae    0x418575
  4185c3:	call   0x624a:0x225a1c25
  4185ca:	arpl   si,cx
  4185cc:	hlt    
  4185cd:	cmc    
  4185ce:	xor    eax,0x824f415f
  4185d3:	dec    eax
  4185d4:	or     BYTE PTR [ebx],bl
  4185d6:	ins    DWORD PTR es:[edi],dx
  4185d7:	xor    bh,BYTE PTR [eax]
  4185d9:	mov    bh,0x7d
  4185db:	ret    
  4185dc:	jge    0x4185f9
  4185de:	(bad)  
  4185e0:	mov    ch,dh
  4185e2:	mov    edx,DWORD PTR [esi]
  4185e4:	add    al,ah
  4185e6:	jl     0x41861b
  4185e8:	jl     0x41864c
  4185ea:	adc    DWORD PTR [edi-0x23],eax
  4185ed:	xor    bh,al
  4185ef:	and    ch,0x5d
  4185f2:	vshufpd xmm6,xmm2,xmm3,0x8b
  4185f7:	or     BYTE PTR ds:0x2c5db92,0xdb
  4185fe:	sub    al,0x80
  418600:	mov    ecx,0x76826cb
  418606:	adc    BYTE PTR [ecx+ebp*4+0x54],bl
  41860a:	mov    edx,0x3cdcc0bb
  41860f:	fcom   DWORD PTR [edi]
  418611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418613:	sbb    BYTE PTR [eax+0x5e],bh
  418616:	call   0x6f2a:0x2070bc8a
  41861d:	test   DWORD PTR [esi],edi
  41861f:	ror    BYTE PTR ds:0x3a03db29,cl
  418625:	or     eax,0x48e7c33f
  41862a:	sar    BYTE PTR [ebx-0x1efdf7b],0xf0
  418631:	pop    esi
  418632:	rcr    DWORD PTR ds:[ebp-0x793aafd2],0xfb
  41863a:	push   edi
  41863b:	jmp    0x5531a63a
  418640:	enter  0xdea4,0xb3
  418644:	xchg   esp,eax
  418645:	inc    eax
  418646:	jp     0x418616
  418648:	adc    esi,esp
  41864a:	shl    DWORD PTR [ebx-0xd],cl
  41864d:	mov    dl,0xea
  41864f:	cmp    eax,0xdd69b96b
  418654:	cmp    bl,BYTE PTR [esi-0x1d7d7cd7]
  41865a:	inc    ecx
  41865b:	xor    al,0x8f
  41865d:	dec    ebp
  41865e:	xor    DWORD PTR [ecx-0x6d],ebp
  418661:	nop
  418662:	xor    al,dl
  418664:	add    eax,esp
  418666:	arpl   WORD PTR [ebp+ecx*2+0x62],si
  41866a:	mov    eax,ds:0xe0a9d25e
  41866f:	sbb    DWORD PTR [ecx],eax
  418671:	call   0xbabc:0xa899bcf5
  418678:	cld    
  418679:	inc    ecx
  41867a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41867b:	mov    ah,ch
  41867d:	call   0x809c84e5
  418682:	out    dx,eax
  418683:	repz or ch,BYTE PTR [ebx-0xeee95c5]
  41868a:	sub    al,0x3e
  41868c:	mov    ebp,ebx
  41868e:	shr    cl,0x13
  418691:	fld    DWORD PTR [eax+0x69377ad6]
  418697:	pusha  
  418698:	push   edi
  418699:	sar    DWORD PTR [eax-0x6d],1
  41869c:	rcl    BYTE PTR [ebp+0x56],0xb4
  4186a0:	lahf   
  4186a1:	sbb    ebx,DWORD PTR [ebp+0x24]
  4186a4:	add    BYTE PTR ds:[edi],bh
  4186a7:	inc    BYTE PTR [ebp+0x2a]
  4186aa:	cs jp  0x41870f
  4186ad:	push   es
  4186ae:	mov    edx,0x7317610
  4186b3:	fbld   TBYTE PTR [ebp+0xd14bc43]
  4186b9:	les    ebx,FWORD PTR [eax-0x37]
  4186bc:	shr    BYTE PTR [ebx-0x6b],cl
  4186bf:	jns    0x4186d8
  4186c1:	imul   esi,DWORD PTR [ebx+0x69],0x615f2ea4
  4186c8:	sbb    al,0x11
  4186ca:	push   ebx
  4186cb:	mov    esi,0xefcbdeed
  4186d0:	xor    BYTE PTR [esi+edx*2-0x2ca9d2fa],0x0
  4186d8:	push   0xa5fe2d16
  4186dd:	test   BYTE PTR [edx+0xa2b20ac],ah
  4186e3:	or     ebp,DWORD PTR [edi+0x3a]
  4186e6:	dec    ecx
  4186e7:	xchg   ebx,eax
  4186e8:	ins    DWORD PTR es:[edi],dx
  4186e9:	fdiv   DWORD PTR [ebx-0x30]
  4186ec:	test   DWORD PTR [ecx+0x72],ebx
  4186ef:	(bad)  
  4186f0:	jae    0x418712
  4186f2:	popf   
  4186f3:	jb     0x41871b
  4186f5:	push   0x648a65f9
  4186fa:	mov    esp,cs
  4186fc:	pop    ecx
  4186fd:	mov    BYTE PTR [ecx],dh
  4186ff:	add    ch,al
  418701:	fs jmp 0x65fb:0xefab88ed
  418709:	inc    eax
  41870a:	add    dl,BYTE PTR [esi+ebp*2]
  41870d:	shl    ah,cl
  41870f:	jno    0x41873d
  418711:	into   
  418712:	and    al,0xca
  418714:	sub    eax,0x14e0e7d6
  418719:	scas   al,BYTE PTR es:[edi]
  41871a:	xor    eax,0x7192b4a8
  41871f:	add    ebx,0x7
  418722:	jbe    0x41874c
  418724:	xor    al,0xd0
  418726:	jns    0x4187a6
  418728:	cwde   
  418729:	pop    ds
  41872a:	add    bh,bh
  41872c:	in     eax,0xd4
  41872e:	inc    ebx
  41872f:	cs jo  0x418778
  418732:	inc    eax
  418733:	js     0x4186bc
  418735:	jp     0x418712
  418737:	pop    edi
  418738:	into   
  418739:	(bad)  
  41873a:	and    DWORD PTR [eax-0x21ead08a],edx
  418740:	mov    ds:0xd90687dc,al
  418745:	fs stos DWORD PTR es:[edi],eax
  418747:	lea    edx,[edi+eiz*4+0xb84fed8]
  41874e:	je     0x41873e
  418750:	div    esi
  418752:	retw   
  418754:	xor    eax,0x8b1d7ea5
  418759:	ja     0x4186ff
  41875b:	push   0xba7309c1
  418760:	or     eax,0x2fafd0f5
  418765:	loopne 0x4186e7
  418767:	in     eax,0x5c
  418769:	jae    0x41878b
  41876b:	sub    al,0x51
  41876d:	push   es
  41876e:	pusha  
  41876f:	pushf  
  418770:	fimul  WORD PTR [edi]
  418772:	or     ch,dl
  418774:	add    bl,bl
  418776:	aaa    
  418777:	inc    ebx
  418778:	xor    dl,dh
  41877a:	pop    edx
  41877b:	mov    ecx,0xa0dd890e
  418780:	imul   ebp,DWORD PTR [eax+0x35daa4bb],0xa478cdbb
  41878a:	lods   eax,DWORD PTR ds:[esi]
  41878b:	cmp    ebp,edx
  41878d:	and    eax,DWORD PTR [edx+0x44aea7ec]
  418793:	push   edi
  418794:	inc    ebp
  418795:	icebp  
  418796:	fmul   DWORD PTR [edi]
  418798:	xor    ah,bh
  41879a:	pop    ebx
  41879b:	repz pop ebx
  41879d:	adc    al,0xb3
  41879f:	cmp    ebx,DWORD PTR [esi-0x50]
  4187a2:	jg     0x418783
  4187a4:	and    esi,DWORD PTR [esi]
  4187a6:	mov    ds:0x35b2255,eax
  4187ab:	pusha  
  4187ac:	js     0x4187e4
  4187ae:	pusha  
  4187af:	retf   
  4187b0:	xor    eax,0xa049a85
  4187b5:	dec    esi
  4187b6:	mov    ebp,0xccf7153e
  4187bb:	mov    bh,0x8b
  4187bd:	imul   edi,DWORD PTR [edx],0x8a3a3a6e
  4187c3:	out    dx,al
  4187c4:	mov    fs,edx
  4187c6:	cmp    edi,DWORD PTR [edi-0x1086f621]
  4187cc:	loop   0x41875a
  4187ce:	enter  0x1a09,0x12
  4187d2:	hlt    
  4187d3:	outs   dx,DWORD PTR ds:[esi]
  4187d4:	imul   ebp,DWORD PTR [ebp+0x55],0xffffff87
  4187d8:	dec    esi
  4187d9:	add    eax,0x62f6c8a0
  4187de:	pop    edx
  4187df:	add    al,0x7
  4187e1:	push   ds
  4187e2:	(bad)  [ebp+eiz*8+0x203cc21f]
  4187e9:	pop    ds
  4187ea:	cwde   
  4187eb:	fldenv [ebp+0x2c]
  4187ee:	aas    
  4187ef:	push   es
  4187f0:	imul   edx,DWORD PTR [eax],0x914d0589
  4187f6:	inc    edi
  4187f7:	and    eax,DWORD PTR [esi+0x79]
  4187fa:	jp     0x4187ac
  4187fc:	sbb    eax,0x3f21b50c
  418801:	rol    BYTE PTR [ebp+0x55],1
  418804:	mov    ch,0xb6
  418806:	xchg   ecx,eax
  418808:	add    DWORD PTR [ecx],0xffffffdc
  41880b:	jae    0x418880
  41880d:	not    BYTE PTR ds:0x3fec18dc
  418813:	push   es
  418814:	mov    ebp,0xb2b3b481
  418819:	or     esp,ecx
  41881b:	aad    0x1
  41881d:	mov    ebp,0x65242ce9
  418822:	adc    BYTE PTR [ebx-0x14],ch
  418825:	icebp  
  418826:	(bad)  
  418827:	adc    DWORD PTR [edi],esi
  418829:	sub    esi,ecx
  41882b:	mov    ds:0xf461af79,al
  418830:	add    ecx,ecx
  418832:	out    0xb3,eax
  418834:	push   edx
  418835:	push   0x9d4ad5f
  41883a:	adc    BYTE PTR [ecx+0x20be239d],bl
  418840:	test   BYTE PTR [ebx+edi*8+0xfacfaa2],ah
  418847:	push   ecx
  418848:	hlt    
  418849:	mov    ebx,0x7bf3f572
  41884e:	or     eax,0xcb34c3e2
  418853:	xchg   ebx,eax
  418854:	jge    0x41887c
  418856:	jae    0x418887
  418858:	inc    ebx
  418859:	jl     0x4188d6
  41885b:	popa   
  41885c:	adc    eax,0xccaf9a4c
  418861:	into   
  418862:	mov    ebx,DWORD PTR [ecx]
  418864:	mov    bh,0x3c
  418866:	leave  
  418867:	ret    0xeaa4
  41886a:	icebp  
  41886b:	push   eax
  41886c:	data16 loopne 0x4188e9
  41886f:	sbb    bl,BYTE PTR [ebx+0x7b]
  418872:	dec    ebp
  418873:	nop
  418874:	shl    DWORD PTR ds:0x11b16d7f,0xfe
  41887b:	jmp    0x4188eb
  41887d:	lock fst QWORD PTR [esi+0x4ea820f5]
  418884:	loope  0x418813
  418886:	mov    edx,esp
  418888:	ret    0x5c99
  41888b:	and    al,0xac
  41888d:	ret    0x478c
  418890:	imul   edi,DWORD PTR [eax+0x22],0xffffffc3
  418894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418895:	sbb    cl,dl
  418897:	sub    eax,0x9420d0c9
  41889c:	repz scas al,BYTE PTR es:[di]
  41889f:	ja     0x418915
  4188a1:	(bad)  
  4188a2:	ins    DWORD PTR es:[edi],dx
  4188a3:	jg     0x418906
  4188a5:	clc    
  4188a6:	das    
  4188a7:	(bad)  
  4188a8:	sub    dl,dl
  4188aa:	xchg   edx,eax
  4188ab:	test   DWORD PTR [ebp+0x77cff6ca],0xbabbf32f
  4188b5:	(bad)  
  4188b6:	(bad)  
  4188b7:	hlt    
  4188b8:	add    esp,DWORD PTR ds:0xbb52c9db
  4188be:	(bad)
  4188c1:	push   eax
  4188c2:	cmp    DWORD PTR [eax+ecx*1-0x47],edi
  4188c6:	push   es
  4188c7:	sbb    al,BYTE PTR [ebp+0x1ac38489]
  4188cd:	jb     0x41892d
  4188cf:	cmp    ecx,DWORD PTR [eax]
  4188d1:	imul   ebx,esp,0xa03ea5cb
  4188d7:	in     al,dx
  4188d8:	test   eax,0x31e24f88
  4188dd:	shr    DWORD PTR [edi+0x30],1
  4188e0:	adc    eax,0x4660713f
  4188e5:	adc    eax,0x2119fcc0
  4188ea:	pop    eax
  4188eb:	jno    0x4188c1
  4188ed:	pusha  
  4188ee:	std    
  4188ef:	xchg   ecx,eax
  4188f0:	cmp    edx,DWORD PTR [ebx]
  4188f2:	int    0xe8
  4188f4:	retf   
  4188f5:	cmp    DWORD PTR [ecx+ebp*2],ebp
  4188f8:	dec    edi
  4188f9:	mov    dl,0xe7
  4188fb:	stc    
  4188fc:	pop    edi
  4188fd:	sbb    DWORD PTR [eax],esi
  4188ff:	xor    BYTE PTR [edi+0x35fc1d72],ah
  418905:	jge    0x418964
  418907:	fist   WORD PTR [ebx]
  418909:	jno    0x4188b6
  41890b:	pushf  
  41890c:	add    ah,BYTE PTR [eax+0x25]
  41890f:	dec    esp
  418910:	sbb    ebx,esp
  418912:	sahf   
  418913:	mov    dh,0xb
  418915:	push   ss
  418916:	mov    BYTE PTR fs:[ecx+ebx*8],ah
  41891a:	mov    eax,0x19832093
  41891f:	xor    DWORD PTR [esi+0x5a28958],esp
  418925:	mov    al,0xd0
  418927:	mov    BYTE PTR [edx+0x4d],bl
  41892a:	(bad)  
  41892e:	xchg   ebp,eax
  41892f:	mov    ?,edi
  418931:	sbb    eax,0x5d440951
  418936:	sub    DWORD PTR [eax+0x1e6df94d],esi
  41893c:	hlt    
  41893d:	mov    BYTE PTR gs:[edi-0x61],ah
  418941:	mov    al,0xa
  418943:	daa    
  418944:	inc    esi
  418945:	std    
  418946:	sub    al,ah
  418948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418949:	popf   
  41894a:	cmp    DWORD PTR [ebx-0x31],0xf7fabd37
  418951:	jns    0x41890a
  418953:	sbb    eax,0x1ba81ccb
  418958:	cs je  0x41890e
  41895b:	or     DWORD PTR [edi-0x37a54f40],edx
  418961:	popf   
  418962:	repz push 0x31d6c4b
  418968:	xchg   ecx,eax
  418969:	(bad)  [ebx-0x1e]
  41896c:	or     eax,0x5eefca4e
  418971:	into   
  418972:	test   eax,0x3d153f4c
  418977:	and    BYTE PTR [edi+0x6a34123e],cl
  41897d:	mov    al,0x9d
  41897f:	lods   eax,DWORD PTR ds:[esi]
  418980:	sbb    eax,0x96ba3dc0
  418985:	pop    edi
  418986:	(bad)  
  418987:	shr    BYTE PTR [edi],1
  418989:	add    eax,0x45a6a4a1
  41898e:	push   esp
  41898f:	(bad)  
  418990:	jmp    0x1ad4:0x23ab4892
  418997:	dec    esi
  418998:	ret    0x3b1e
  41899b:	adc    al,0x1e
  41899d:	sti    
  41899e:	pop    ebx
  41899f:	bound  edi,QWORD PTR [ecx]
  4189a1:	outs   dx,DWORD PTR ds:[esi]
  4189a2:	sub    al,0x5e
  4189a4:	sti    
  4189a5:	ret    
  4189a6:	aam    0x96
  4189a8:	dec    edi
  4189a9:	mov    ecx,0xd39a9905
  4189ae:	out    dx,eax
  4189af:	and    dl,BYTE PTR [ebp+0x6b]
  4189b2:	push   es
  4189b3:	mov    al,ds:0xcaa519d4
  4189b8:	add    BYTE PTR [eax+0x6],0xb3
  4189bc:	cmp    DWORD PTR [edi],0x6e
  4189bf:	jno    0x4189a8
  4189c1:	ffree  st(5)
  4189c3:	xchg   edi,eax
  4189c4:	bound  edx,QWORD PTR [esi+0x21]
  4189c7:	ror    BYTE PTR [ebx-0x3f],0x7c
  4189cb:	punpcklbw mm1,DWORD PTR [ebx]
  4189ce:	sbb    al,0xc3
  4189d0:	fsub   DWORD PTR [eax]
  4189d2:	cmp    al,0xab
  4189d4:	mov    dh,0x1e
  4189d6:	and    eax,0xacc2f39b
  4189db:	(bad)  
  4189dc:	lods   al,BYTE PTR ds:[esi]
  4189dd:	ins    BYTE PTR es:[edi],dx
  4189de:	aad    0x13
  4189e0:	lods   eax,DWORD PTR ds:[esi]
  4189e1:	xchg   esp,eax
  4189e2:	mov    ebp,0x51cd16d
  4189e7:	adc    ch,BYTE PTR [ebx]
  4189e9:	pop    edx
  4189ea:	mov    bl,0x72
  4189ec:	(bad)  
  4189ed:	mov    edx,0x6c76a833
  4189f2:	int    0xfc
  4189f4:	jbe    0x4189ed
  4189f6:	sbb    BYTE PTR [edi+0x7c270b05],bl
  4189fc:	inc    ebx
  4189fd:	xor    cl,BYTE PTR [ecx-0x66]
  418a00:	shl    BYTE PTR [ecx],1
  418a02:	test   bl,cl
  418a04:	fld    DWORD PTR [eax]
  418a06:	or     bh,BYTE PTR [ecx+0x36a07c3]
  418a0c:	jae    0x4189c4
  418a0e:	xor    ah,BYTE PTR [edi+0x79]
  418a11:	popa   
  418a12:	mov    bl,0xe0
  418a14:	push   cs
  418a15:	mov    bl,0x9a
  418a17:	jno    0x4189e9
  418a19:	jge    0x4189ee
  418a1b:	js     0x418a16
  418a1d:	jmp    0x4189e6
  418a1f:	jmp    0x4189fa
  418a21:	pop    ebp
  418a22:	jne    0x418a62
  418a24:	std    
  418a25:	mov    esp,0x986b1d78
  418a2a:	ja     0x4189d0
  418a2c:	ins    DWORD PTR es:[edi],dx
  418a2d:	nop
  418a2e:	addr16 call 0x8f864307
  418a34:	push   edi
  418a35:	push   es
  418a36:	aam    0x8c
  418a38:	sub    ebp,DWORD PTR [ebp-0x6963ec37]
  418a3e:	pop    edi
  418a3f:	cli    
  418a40:	sub    eax,0xd6b919bb
  418a45:	aad    0x0
  418a47:	push   ecx
  418a48:	push   0x35
  418a4a:	test   al,0x7a
  418a4c:	aas    
  418a4d:	sbb    DWORD PTR [edi],0x28257bcd
  418a53:	xchg   esp,eax
  418a54:	repz pop ebp
  418a56:	mov    eax,ds:0xdaeaba44
  418a5b:	popa   
  418a5c:	adc    al,0x57
  418a5e:	ds dec ecx
  418a60:	mov    eax,0xce676a00
  418a65:	fsub   QWORD PTR [edi]
  418a67:	popa   
  418a68:	pop    eax
  418a69:	and    BYTE PTR [edi],0x9d
  418a6c:	(bad)  
  418a6d:	cmp    al,0x24
  418a6f:	clc    
  418a70:	push   esp
  418a71:	push   cs
  418a72:	xchg   esi,eax
  418a73:	or     al,0x5f
  418a75:	pop    esp
  418a76:	dec    esp
  418a77:	xchg   ecx,eax
  418a78:	mov    edx,gs
  418a7a:	xchg   esp,eax
  418a7b:	mov    al,0x33
  418a7d:	sub    eax,0xec619cdc
  418a82:	or     al,0xf
  418a84:	inc    edx
  418a85:	push   ss
  418a86:	xor    eax,0xa3e0c589
  418a8b:	lods   al,BYTE PTR ds:[esi]
  418a8c:	xchg   ecx,eax
  418a8d:	pop    edi
  418a8e:	sub    DWORD PTR [esi+ebx*8+0x6f],esp
  418a92:	jp     0x418a9c
  418a94:	mov    ebp,eax
  418a96:	inc    eax
  418a97:	push   ss
  418a98:	loopne 0x418a59
  418a9a:	fidivr DWORD PTR [eax+0x4b16c91a]
  418aa0:	hlt    
  418aa1:	cld    
  418aa2:	sbb    al,0x52
  418aa4:	sahf   
  418aa5:	add    BYTE PTR [ebp+ebx*2+0x51],ch
  418aa9:	pop    ebx
  418aaa:	dec    edx
  418aab:	in     eax,0x87
  418aad:	or     DWORD PTR [ecx-0x27],esp
  418ab0:	aas    
  418ab1:	loopne 0x418ab6
  418ab3:	xor    BYTE PTR [esi],0x36
  418ab6:	sub    al,0xc2
  418ab8:	sti    
  418ab9:	(bad)  [eax-0x43]
  418abc:	shl    BYTE PTR [edi-0x5e],0x66
  418ac0:	push   es
  418ac1:	in     al,0x3b
  418ac3:	push   esp
  418ac4:	fdivr  DWORD PTR [ebp-0x713a2b4d]
  418aca:	sub    ch,BYTE PTR [ebx+ecx*4]
  418acd:	dec    ebx
  418ace:	push   ss
  418acf:	scas   eax,DWORD PTR es:[edi]
  418ad0:	rol    esi,1
  418ad2:	outs   dx,BYTE PTR ds:[esi]
  418ad3:	dec    ebp
  418ad4:	ret    0x9028
  418ad7:	dec    edx
  418ad8:	mov    al,BYTE PTR [ebp-0x726666b0]
  418ade:	xchg   BYTE PTR [ebx-0x69dfeb24],bh
  418ae4:	mov    esp,0x4d201660
  418ae9:	jmp    0x4cd6:0x81475d8c
  418af0:	aaa    
  418af1:	inc    esi
  418af2:	cmp    ebp,esi
  418af4:	jb     0x418ac6
  418af6:	dec    ebx
  418af7:	jne    0x418adb
  418af9:	sti    
  418afa:	in     eax,0x16
  418afc:	add    al,0x3e
  418afe:	xor    al,dh
  418b00:	xchg   ebx,eax
  418b01:	ds add ax,0xc09e
  418b06:	ins    DWORD PTR es:[edi],dx
  418b07:	jp     0x418b3e
  418b09:	jecxz  0x418ae3
  418b0b:	setb   BYTE PTR [eax-0x7]
  418b0f:	ror    ebp,1
  418b11:	cs push 0x71
  418b14:	aad    0x86
  418b16:	repnz imul DWORD PTR [eax-0x29d9fa70]
  418b1d:	mov    BYTE PTR [ecx-0x1f],bl
  418b20:	dec    esi
  418b21:	iret   
  418b22:	jb     0x418b69
  418b24:	addr16 mov ebp,0x76d5eeea
  418b2a:	arpl   WORD PTR [ecx-0x44],ax
  418b2d:	add    edx,DWORD PTR [ebx+ebx*8]
  418b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b31:	fcomi  st,st(0)
  418b33:	fcmove st,st(2)
  418b35:	push   es
  418b36:	adc    DWORD PTR [ecx+edx*4+0x63],esi
  418b3a:	pop    esp
  418b3b:	ins    DWORD PTR es:[edi],dx
  418b3c:	cmp    ebx,eax
  418b3e:	sti    
  418b3f:	adc    ebp,esp
  418b41:	sub    bl,cl
  418b43:	cmp    eax,0x64d36a40
  418b48:	sub    DWORD PTR [ebp-0x12],eax
  418b4b:	mov    esp,0xd745ce41
  418b50:	inc    ecx
  418b51:	stc    
  418b52:	cwde   
  418b53:	call   edi
  418b55:	mov    ecx,0x711495ad
  418b5a:	pop    edx
  418b5b:	adc    bl,BYTE PTR [edx]
  418b5d:	fnstsw WORD PTR [eax-0x273c01b1]
  418b63:	rcr    DWORD PTR [eax-0x24607ae4],cl
  418b69:	imul   ebx,ebx,0x7fa840b2
  418b6f:	adc    eax,0x93dea77
  418b74:	mov    ch,0x6b
  418b76:	xor    BYTE PTR [esi],ah
  418b78:	adc    ebp,DWORD PTR [eax+0x47edfaab]
  418b7e:	addr16 adc ebp,ebp
  418b81:	cli    
  418b82:	into   
  418b83:	mov    ?,WORD PTR [edi+0x0]
  418b86:	mov    cl,0x45
  418b88:	ret    
  418b89:	mov    DWORD PTR [ecx+edx*4],ecx
  418b8c:	mov    ds:0x985e28c0,al
  418b91:	inc    edi
  418b92:	sub    BYTE PTR [edx+0x3244bc76],0x52
  418b99:	lods   eax,DWORD PTR ds:[esi]
  418b9a:	imul   eax,DWORD PTR [eax-0x6f],0x7
  418b9e:	les    ebp,FWORD PTR [ebx+eiz*1-0x10f733a]
  418ba5:	pop    es
  418ba6:	and    DWORD PTR [edx-0x51],ebx
  418ba9:	push   ebx
  418baa:	(bad)  
  418bac:	mul    DWORD PTR cs:[esi+0x35ed6459]
  418bb3:	mov    ah,0xa8
  418bb5:	jl     0x418c01
  418bb7:	fnsave [edx+esi*8]
  418bba:	fiadd  WORD PTR [edx+ebp*4-0x7451f609]
  418bc1:	xchg   ebx,eax
  418bc2:	dec    edi
  418bc3:	cmp    DWORD PTR [ebp+0x2a99df7],ebx
  418bc9:	mov    dl,0x38
  418bcb:	pushf  
  418bcc:	fadd   st(5),st
  418bce:	cmc    
  418bcf:	push   0xffffffbf
  418bd1:	fistp  WORD PTR [eax-0x6e692c23]
  418bd7:	outs   dx,BYTE PTR ds:[esi]
  418bd8:	fld    QWORD PTR [esi-0x1d]
  418bdb:	dec    esi
  418bdc:	loopne 0x418b7f
  418bde:	sub    ecx,DWORD PTR [eax-0x13]
  418be1:	fidivr DWORD PTR [ebp+eax*4+0x46]
  418be5:	inc    edi
  418be6:	in     al,dx
  418be7:	mov    BYTE PTR [ebx-0x20274037],bl
  418bed:	add    dl,al
  418bef:	daa    
  418bf0:	add    dl,BYTE PTR ds:0xdb491590
  418bf6:	pusha  
  418bf7:	adc    esi,DWORD PTR [edx-0x7f03b9e2]
  418bfd:	dec    edi
  418bfe:	ins    BYTE PTR es:[edi],dx
  418bff:	mov    ecx,0x65035ad6
  418c04:	mov    edi,0xe09ca0e
  418c09:	jb     0x418c2a
  418c0b:	xor    eax,0xe10b83b3
  418c10:	cmp    eax,DWORD PTR [eax]
  418c12:	test   DWORD PTR [esi],0x1cfac330
  418c18:	sahf   
  418c19:	retf   
  418c1a:	enter  0x3467,0x83
  418c1e:	cli    
  418c1f:	and    DWORD PTR [esi+0x2e8e9bcc],esp
  418c25:	cmp    ebx,eax
  418c27:	mov    dh,0x2e
  418c29:	lahf   
  418c2a:	add    ebx,DWORD PTR [ebp+0x3]
  418c2d:	adc    DWORD PTR [esi],esp
  418c2f:	nop
  418c30:	push   cs
  418c31:	cmp    edi,eax
  418c33:	bound  esp,QWORD PTR [eax+0x33d90300]
  418c39:	mov    ch,0x7f
  418c3b:	ret    
  418c3c:	mov    esi,0xcd5fb4ba
  418c41:	push   0x44
  418c43:	push   ecx
  418c44:	lds    esi,FWORD PTR [eax+0x5d6497e7]
  418c4a:	ins    DWORD PTR es:[edi],dx
  418c4b:	lea    edx,[ebx+ebx*2]
  418c4e:	cs inc edx
  418c50:	add    esp,DWORD PTR [eax-0x191476d8]
  418c56:	jmp    0x418c0d
  418c58:	into   
  418c59:	enter  0x13bd,0x8b
  418c5d:	ret    0xc9d1
  418c60:	fwait
  418c61:	and    DWORD PTR [eax+0x41ad9fd7],0x7c
  418c68:	cli    
  418c69:	dec    esp
  418c6a:	jmp    FWORD PTR [esi+0x20f36e88]
  418c70:	cld    
  418c71:	shl    BYTE PTR [ecx],0x94
  418c74:	xor    DWORD PTR [ecx],esp
  418c76:	dec    ecx
  418c77:	sbb    eax,0x57b88b31
  418c7c:	and    BYTE PTR [edx+ecx*2+0x19],bl
  418c80:	and    ecx,DWORD PTR [esi+0x2b469fac]
  418c86:	rcr    DWORD PTR [edx-0x14d719e5],cl
  418c8c:	mov    eax,0xb43427eb
  418c91:	jge    0x418c7b
  418c93:	nop
  418c94:	cli    
  418c95:	inc    esp
  418c96:	jne    0x418c99
  418c98:	or     al,0x24
  418c9a:	add    BYTE PTR [edx-0x3e],0x31
  418c9e:	push   esp
  418c9f:	sbb    cl,BYTE PTR [esi-0x79]
  418ca2:	mov    dh,0xd5
  418ca4:	ret    
  418ca5:	ret    
  418ca6:	xchg   ebx,eax
  418ca7:	retf   0x69d1
  418caa:	retf   
  418cab:	mov    ecx,0x3c75a7ca
  418cb0:	div    BYTE PTR [esi+0x630cf1f8]
  418cb6:	shl    esp,1
  418cb8:	xor    al,0x26
  418cba:	push   ebx
  418cbb:	int    0x9
  418cbd:	inc    ebp
  418cbe:	and    cl,BYTE PTR [eax+0x389a6a7a]
  418cc4:	les    ecx,FWORD PTR [edx+0x1b]
  418cc7:	dec    esi
  418cc8:	pop    edi
  418cc9:	push   es
  418cca:	pop    edi
  418ccb:	sbb    esp,DWORD PTR [edi]
  418ccd:	aaa    
  418cce:	mov    BYTE PTR [ecx],bl
  418cd0:	jbe    0x418cf6
  418cd2:	test   al,0xb9
  418cd4:	mov    ah,BYTE PTR [edi]
  418cd6:	dec    ax
  418cd9:	fiadd  DWORD PTR [esi-0xba52073]
  418cdf:	jl     0x418cc1
  418ce1:	sbb    edi,DWORD PTR [edi-0x12c25f52]
  418ce7:	sti    
  418ce8:	leave  
  418ce9:	pop    edi
  418cea:	and    dl,BYTE PTR [esi-0x3ef6ea69]
  418cf0:	pop    ds
  418cf1:	add    DWORD PTR [ebp+ebp*8+0x6d],ecx
  418cf5:	imul   ebp,DWORD PTR [eax+0x3355556f],0xaa454adb
  418cff:	push   0xbe36cab5
  418d04:	pop    esi
  418d05:	add    esp,DWORD PTR [ebx+0x13]
  418d08:	popa   
  418d09:	retf   
  418d0a:	mov    dh,cl
  418d0c:	adc    BYTE PTR [esi+0x1bbc9fd7],ch
  418d12:	pop    esi
  418d13:	push   edx
  418d14:	gs sahf 
  418d16:	and    eax,0x8cd4a6e2
  418d1b:	adc    BYTE PTR [ebp-0x17],dh
  418d1e:	es adc eax,0x8a8fb9a
  418d24:	jns    0x418cf9
  418d26:	int3   
  418d27:	sbb    al,0x59
  418d29:	adc    edx,DWORD PTR [ebp+0x4f251b3f]
  418d2f:	and    eax,0xa3516746
  418d34:	pop    eax
  418d35:	jnp    0x418d55
  418d37:	das    
  418d38:	xchg   ebp,eax
  418d39:	nop
  418d3a:	and    al,0xfd
  418d3c:	int3   
  418d3d:	ror    BYTE PTR [esi+0x7f],1
  418d40:	not    ebp
  418d42:	mov    esp,DWORD PTR [edx+0xd2c9578]
  418d48:	into   
  418d49:	pop    ebp
  418d4a:	jbe    0x418d0e
  418d4c:	sar    DWORD PTR [esi+ebp*8-0x11],cl
  418d50:	push   esi
  418d51:	mov    bh,0x8b
  418d53:	cld    
  418d54:	sub    al,BYTE PTR [esp+edx*1]
  418d57:	aaa    
  418d58:	pop    eax
  418d59:	test   al,0x14
  418d5b:	das    
  418d5c:	xchg   ecx,eax
  418d5d:	aam    0xa4
  418d5f:	cdq    
  418d60:	mov    fs,esp
  418d62:	xchg   DWORD PTR [ebp-0x67],ebp
  418d65:	pop    edi
  418d66:	imul   ebx,edx,0x40
  418d69:	shl    BYTE PTR [edi+0x4e483b09],cl
  418d6f:	es lock cmp al,ah
  418d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d74:	mov    dl,0x7
  418d76:	xchg   esi,eax
  418d77:	xor    al,0xe7
  418d79:	push   esi
  418d7a:	lock mov eax,0x9e9596da
  418d80:	jnp    0x418dd5
  418d82:	ds daa 
  418d84:	clc    
  418d85:	mov    DWORD PTR [ebx-0x41854dfa],ebx
  418d8b:	retf   
  418d8c:	push   ebx
  418d8d:	daa    
  418d8e:	mov    al,BYTE PTR [edi]
  418d90:	les    eax,FWORD PTR [eiz*1-0x62500619]
  418d97:	rol    BYTE PTR [edi+0x36],0x95
  418d9b:	aam    0xe2
  418d9d:	outs   dx,BYTE PTR ds:[esi]
  418d9e:	mov    ecx,0xe3b5fa3c
  418da3:	std    
  418da4:	shl    ebx,1
  418da6:	adc    eax,0xf4dcb288
  418dab:	mov    bl,cl
  418dad:	mov    al,ds:0x71b0bc31
  418db2:	lock in eax,dx
  418db4:	(bad)
  418db8:	sub    eax,0x360ffb6
  418dbd:	or     bl,BYTE PTR [edi+0x4a]
  418dc0:	daa    
  418dc1:	int    0xbb
  418dc3:	aam    0xbb
  418dc5:	xchg   edi,eax
  418dc6:	sbb    eax,0xabaf13af
  418dcb:	aas    
  418dcc:	jbe    0x418e17
  418dce:	not    BYTE PTR [ebp+0x5d]
  418dd1:	mov    edi,0xbf2a1b4e
  418dd6:	inc    esi
  418dd7:	dec    esi
  418dd8:	jecxz  0x418dfb
  418dda:	push   edi
  418ddb:	sahf   
  418ddc:	fstp   TBYTE PTR [edx]
  418dde:	in     eax,dx
  418ddf:	repnz in eax,dx
  418de1:	inc    ebx
  418de2:	shr    BYTE PTR [ebx],0x4a
  418de5:	xchg   ebx,eax
  418de6:	jbe    0x418dbe
  418de8:	pop    esp
  418de9:	and    DWORD PTR [ecx],ecx
  418deb:	lods   eax,DWORD PTR ds:[esi]
  418dec:	or     eax,0xde02d60a
  418df1:	jl     0x418e14
  418df3:	retf   0x19c7
  418df6:	stos   DWORD PTR es:[edi],eax
  418df7:	cwde   
  418df8:	lock lods eax,DWORD PTR ds:[esi]
  418dfa:	dec    edi
  418dfb:	or     BYTE PTR [eax+0x24fff205],ah
  418e01:	cwde   
  418e02:	jb     0x418e20
  418e04:	div    al
  418e06:	ret    
  418e07:	out    0xf5,eax
  418e09:	(bad)  
  418e0a:	(bad)  [ecx-0x178aab5b]
  418e10:	iret   
  418e11:	jno    0x418e7a
  418e13:	jp     0x418dfb
  418e15:	jg     0x418dd2
  418e17:	(bad)  
  418e18:	in     eax,0x2a
  418e1a:	and    al,0xda
  418e1c:	(bad)  
  418e1d:	(bad)  
  418e1e:	add    eax,0x7b072a66
  418e23:	lods   eax,DWORD PTR ds:[esi]
  418e24:	sub    DWORD PTR [edx],edx
  418e26:	inc    eax
  418e27:	jge    0x418e1b
  418e29:	dec    ecx
  418e2a:	mov    DWORD PTR cs:[edx],ebp
  418e2d:	ds inc eax
  418e2f:	xchg   edi,eax
  418e30:	xchg   esi,eax
  418e31:	data16 (bad) 
  418e33:	loopne 0x418e76
  418e35:	iret   
  418e36:	aad    0x6a
  418e38:	xor    ebx,ebx
  418e3a:	sbb    al,bl
  418e3c:	sub    BYTE PTR [eax],cl
  418e3e:	mov    al,0x46
  418e40:	mov    ebp,DWORD PTR [ecx+0x7]
  418e43:	xchg   esi,eax
  418e44:	push   ecx
  418e45:	push   ds
  418e46:	(bad)  
  418e47:	idiv   BYTE PTR [ebp-0xd]
  418e4a:	int3   
  418e4b:	mov    esi,0xb2f17270
  418e50:	mov    eax,0x8fd0c724
  418e55:	pop    esp
  418e56:	mov    ds:0xf00c063d,al
  418e5b:	int3   
  418e5c:	xor    BYTE PTR [ecx+0x7],dl
  418e5f:	mov    cl,0x32
  418e61:	mov    ah,0x80
  418e63:	mov    esp,0x604db360
  418e68:	xor    bl,bl
  418e6a:	push   esi
  418e6b:	sbb    esi,edi
  418e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e6e:	mov    ah,0x5d
  418e70:	mov    DWORD PTR [ebp+0x3a2ecc7a],esp
  418e76:	add    esi,edx
  418e78:	icebp  
  418e79:	fisttp QWORD PTR [eax-0x4303ecfe]
  418e7f:	cli    
  418e80:	fst    DWORD PTR [edx-0x778bacab]
  418e86:	imul   edi,DWORD PTR [edi-0x55],0x63
  418e8a:	dec    edx
  418e8b:	sub    ah,BYTE PTR [ebp+0x15759342]
  418e91:	dec    edi
  418e92:	lods   al,BYTE PTR ds:[esi]
  418e93:	xlat   BYTE PTR ds:[ebx]
  418e94:	xchg   edx,eax
  418e95:	into   
  418e96:	hlt    
  418e97:	adc    DWORD PTR [ebx],eax
  418e99:	inc    ecx
  418e9a:	xchg   esp,eax
  418e9b:	jmp    0xd298:0x9249d6b2
  418ea2:	fs lock push edx
  418ea5:	cmp    al,0x83
  418ea7:	cmc    
  418ea8:	jmp    0x9fbc:0x4d3bb9c9
  418eaf:	sub    edx,DWORD PTR ds:0x587b146e
  418eb5:	stos   DWORD PTR es:[edi],eax
  418eb6:	xchg   edx,eax
  418eb7:	retf   
  418eb8:	scas   al,BYTE PTR es:[edi]
  418eb9:	mov    gs,WORD PTR [ebx+0x54c43d2a]
  418ebf:	add    ch,BYTE PTR [ebp+0x72]
  418ec2:	sub    al,0x78
  418ec4:	cmp    dh,ah
  418ec6:	mov    ecx,?
  418ec8:	popf   
  418ec9:	(bad)  
  418eca:	dec    ebp
  418ecb:	xchg   ebp,eax
  418ecc:	mov    cl,0x12
  418ece:	dec    eax
  418ecf:	mov    ecx,0x4942865a
  418ed4:	jb     0x418ef8
  418ed6:	xchg   DWORD PTR [edx-0x23],esi
  418ed9:	push   es
  418eda:	sar    BYTE PTR [ecx-0x45f8a353],0x59
  418ee1:	hlt    
  418ee2:	jno    0x418ebf
  418ee4:	retf   
  418ee5:	lods   eax,DWORD PTR ds:[esi]
  418ee6:	jmp    0x23dfdcde
  418eeb:	push   eax
  418eec:	cld    
  418eed:	into   
  418eee:	int3   
  418eef:	cmp    al,0x22
  418ef1:	popa   
  418ef2:	push   edi
  418ef3:	jle    0x418ee2
  418ef5:	adc    BYTE PTR [edx],ch
  418ef7:	daa    
  418ef8:	cmp    eax,0x5fd27222
  418efd:	push   edi
  418efe:	inc    ecx
  418eff:	or     DWORD PTR [edx],esp
  418f01:	in     al,0xf7
  418f03:	sbb    eax,0xf50c2524
  418f08:	das    
  418f09:	lock cmp ecx,edi
  418f0c:	test   eax,0x8e25337f
  418f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f12:	repnz cmp ch,BYTE PTR [ecx+0x731958c8]
  418f19:	sub    eax,0x8973d966
  418f1e:	push   ds
  418f1f:	adc    al,0x39
  418f21:	mov    ah,0x78
  418f23:	imul   dh
  418f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f26:	xor    eax,0x598521e8
  418f2b:	test   BYTE PTR [edi],ah
  418f2d:	mov    ah,0xf4
  418f2f:	xchg   ecx,eax
  418f30:	push   0x26782e52
  418f35:	and    BYTE PTR ds:0xf999e135,dl
  418f3b:	das    
  418f3c:	pop    es
  418f3d:	add    BYTE PTR [esi-0x3e],dl
  418f40:	(bad)  
  418f41:	enter  0xfe2f,0x55
  418f45:	sar    DWORD PTR [si+0x1c],1
  418f49:	jecxz  0x418f46
  418f4b:	or     BYTE PTR [eax+0x7b],al
  418f4e:	push   edi
  418f4f:	aad    0x9
  418f51:	push   es
  418f52:	jne    0x418f42
  418f54:	and    ecx,ebx
  418f56:	mov    esi,DWORD PTR [esi-0x36de3a02]
  418f5c:	pop    ebx
  418f5d:	mov    cl,0xb4
  418f5f:	mov    ch,0xf
  418f61:	imul   edi,DWORD PTR [eax-0x2],0xb77e8eb8
  418f68:	or     BYTE PTR ds:0xf62ffe88,al
  418f6e:	push   es
  418f6f:	xor    al,0x33
  418f71:	ror    ebp,cl
  418f73:	cmp    ecx,DWORD PTR [esi+ebp*4-0x49]
  418f77:	pop    edx
  418f78:	aad    0xb0
  418f7a:	mov    dh,0xcf
  418f7c:	shl    BYTE PTR [eax],0xd6
  418f7f:	or     al,0x8
  418f81:	out    dx,al
  418f82:	sub    al,BYTE PTR [esi+edi*4-0x5cf3e0c4]
  418f89:	aam    0x59
  418f8b:	pushf  
  418f8c:	lds    edi,FWORD PTR [esi+0x7aec9dc2]
  418f92:	inc    edi
  418f93:	ds ret 
  418f95:	jecxz  0x418ff1
  418f97:	mov    ebx,0x165d2d7f
  418f9c:	jp     0x418f36
  418f9e:	xchg   esi,eax
  418f9f:	xor    DWORD PTR [ecx-0x72],esi
  418fa2:	ja     0x419020
  418fa4:	daa    
  418fa5:	dec    esi
  418fa6:	xor    al,0x5f
  418fa8:	lods   eax,DWORD PTR ds:[esi]
  418fa9:	inc    esp
  418faa:	jmp    0x418f85
  418fac:	(bad)  
  418fad:	xchg   esp,eax
  418fae:	adc    al,BYTE PTR [ebp+0x7c]
  418fb1:	dec    ebp
  418fb2:	ret    0x1f92
  418fb5:	ss pop esp
  418fb7:	inc    ebx
  418fb8:	adc    BYTE PTR [ebp-0x2b],dh
  418fbb:	jle    0x418f86
  418fbd:	sbb    eax,0x827995dc
  418fc2:	mov    ds:0xe752f32e,eax
  418fc7:	sub    al,0x2a
  418fc9:	mov    bl,0xb5
  418fcb:	sub    eax,0x5fb5ab2b
  418fd0:	in     eax,0x53
  418fd2:	add    esp,ebx
  418fd4:	popa   
  418fd5:	fcom   DWORD PTR [edx+0x7d89302]
  418fdb:	les    esp,FWORD PTR [ebx-0x465b8cb2]
  418fe1:	not    BYTE PTR [eax-0x23]
  418fe4:	and    al,0xf0
  418fe6:	(bad)  
  418fe7:	aaa    
  418fe8:	sahf   
  418fe9:	(bad)  
  418fea:	outs   dx,BYTE PTR ds:[esi]
  418feb:	stos   BYTE PTR es:[edi],al
  418fec:	inc    esp
  418fed:	dec    eax
  418fee:	sub    BYTE PTR [esi],ah
  418ff0:	jmp    DWORD PTR [edx+0x3c8a3ff9]
  418ff6:	adc    al,bh
  418ff8:	in     eax,0x4c
  418ffa:	mov    eax,0xdd628109
  418fff:	sub    ecx,DWORD PTR [ecx-0x6c]
  419002:	push   0x24
  419004:	das    
  419005:	outs   dx,DWORD PTR ds:[esi]
  419006:	add    dh,ch
  419008:	xor    BYTE PTR [edx+0x49],cl
  41900b:	xlat   BYTE PTR ds:[ebx]
  41900c:	xor    DWORD PTR [eax+0x5c],edx
  41900f:	or     eax,0xc0bcd533
  419014:	adc    eax,0x1e7dfbed
  419019:	sahf   
  41901a:	pop    esp
  41901b:	lods   al,BYTE PTR ds:[esi]
  41901c:	inc    DWORD PTR [edx+0x24f2e2a0]
  419022:	out    0xda,eax
  419024:	jmp    0x8bbc4cd5
  419029:	and    eax,0x3e345336
  41902f:	inc    ecx
  419030:	push   ss
  419031:	pop    edx
  419032:	out    0x2d,eax
  419034:	dec    eax
  419035:	mov    ah,0x23
  419037:	pop    esp
  419038:	pop    ss
  419039:	mov    dh,0x4d
  41903b:	mul    BYTE PTR [esi-0x397f3337]
  419041:	mov    al,ds:0x899e579
  419046:	mov    edi,0x18dad4da
  41904b:	sar    DWORD PTR [ecx-0x7],1
  41904e:	adc    al,0xad
  419050:	add    DWORD PTR [edi],0x25d67f92
  419056:	mov    ebp,0xf8b8b4cb
  41905b:	pop    ebx
  41905c:	shl    BYTE PTR [edx+0x19],cl
  41905f:	cmc    
  419060:	sbb    edi,DWORD PTR [ebx-0x72]
  419063:	push   ds
  419064:	xor    al,0x91
  419066:	dec    edx
  419067:	and    BYTE PTR [edi],cl
  419069:	adc    al,0xc9
  41906b:	or     dh,BYTE PTR [ebx-0x5b]
  41906e:	mov    edi,DWORD PTR [esi+esi*2+0x24]
  419072:	push   0x69
  419074:	int3   
  419075:	inc    edx
  419076:	and    al,0xd6
  419078:	ins    BYTE PTR es:[edi],dx
  419079:	arpl   cx,si
  41907b:	xchg   ebp,eax
  41907c:	cmp    eax,0xce14135
  419081:	inc    edx
  419082:	xchg   esp,eax
  419083:	clc    
  419084:	fs fcmovnb st,st(2)
  419087:	addr16 pop edi
  419089:	dec    esp
  41908a:	or     BYTE PTR [edi],ah
  41908c:	shr    bl,0x4c
  41908f:	out    dx,al
  419090:	xchg   DWORD PTR [ecx+edx*1-0x6b],edx
  419094:	test   al,0xbd
  419096:	mov    ch,0x8a
  419098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419099:	fdivrp st(2),st
  41909b:	mov    edi,0x33261e20
  4190a0:	(bad)  
  4190a1:	mov    edx,0x5b14e614
  4190a6:	push   ds
  4190a7:	jbe    0x419095
  4190a9:	push   ecx
  4190aa:	mov    bh,0x2
  4190ac:	jecxz  0x4190dc
  4190ae:	scas   eax,DWORD PTR es:[edi]
  4190af:	call   0x697:0x8aa0b643
  4190b6:	dec    ecx
  4190b7:	cdq    
  4190b8:	shl    BYTE PTR [esi],1
  4190ba:	push   ds
  4190bb:	mov    esp,0x5d9c7486
  4190c0:	je     0x419055
  4190c2:	inc    esp
  4190c3:	cmc    
  4190c4:	dec    eax
  4190c5:	xor    eax,0x3096fe03
  4190ca:	cmc    
  4190cb:	xor    cl,BYTE PTR [edi+edi*8+0x3a21bb8c]
  4190d2:	into   
  4190d3:	mov    DWORD PTR [eax],ebp
  4190d5:	sub    al,0x64
  4190d7:	pop    ebx
  4190d8:	push   ecx
  4190d9:	bnd jbe 0x4190d8
  4190dc:	jns    0x419069
  4190de:	xchg   edx,eax
  4190df:	imul   edx,DWORD PTR [esi],0x50
  4190e2:	mov    bh,0x81
  4190e4:	jno    0x4190de
  4190e6:	sub    eax,0xca6ab1e0
  4190eb:	std    
  4190ec:	adc    ebp,DWORD PTR [edx]
  4190ee:	and    BYTE PTR [ecx+0x5e],bh
  4190f1:	push   cs
  4190f2:	icebp  
  4190f3:	icebp  
  4190f4:	daa    
  4190f5:	jp     0x419147
  4190f7:	inc    ecx
  4190f8:	fsub   DWORD PTR [ebp+ecx*2+0x64]
  4190fc:	push   ecx
  4190fd:	jo     0x419100
  4190ff:	in     eax,0x5d
  419101:	sbb    ch,BYTE PTR [ebx-0x1a]
  419104:	arpl   WORD PTR [ebx-0x21],dx
  419107:	mov    al,0x8a
  419109:	retf   0xcb15
  41910c:	or     eax,0x549a9c0a
  419111:	enter  0x6d99,0x21
  419115:	mov    dl,0x94
  419117:	imul   ebp,DWORD PTR ds:0x5096306a,0xe57cf29e
  419121:	mov    ecx,0x9f958b5a
  419126:	and    cl,BYTE PTR [ecx-0x5aca7204]
  41912c:	push   0x28
  41912e:	jae    0x419115
  419130:	aas    
  419131:	mov    eax,DWORD PTR [ecx-0x55]
  419134:	test   BYTE PTR [ecx-0x50b2469b],dh
  41913a:	push   ebp
  41913b:	leave  
  41913c:	or     eax,0x37951f25
  419141:	mov    al,ds:0xa275628b
  419146:	out    dx,eax
  419147:	dec    edx
  419148:	int    0x9b
  41914a:	mov    ecx,0x62df84b3
  41914f:	push   cs
  419150:	xor    al,0xbf
  419152:	inc    esi
  419153:	mov    cl,0xa4
  419155:	adc    bh,BYTE PTR [edx+ebp*1]
  419158:	in     al,0xd8
  41915a:	add    al,0xf1
  41915c:	mov    ebp,0xf983b8f0
  419161:	aas    
  419162:	sahf   
  419163:	mov    ah,0xa9
  419165:	adc    DWORD PTR [edi+0x427116e8],0x3f
  41916c:	cmp    esi,ecx
  41916e:	nop
  41916f:	mov    ebp,0x1333bd53
  419174:	in     al,0xd6
  419176:	aaa    
  419177:	inc    edi
  419178:	jl     0x4191c5
  41917a:	xlat   BYTE PTR ds:[ebx]
  41917b:	das    
  41917c:	or     ebp,esp
  41917e:	jae    0x41911d
  419180:	hlt    
  419181:	and    al,0xf7
  419183:	and    BYTE PTR [ebp+0x3188b797],bh
  419189:	dec    ecx
  41918a:	inc    ecx
  41918b:	xor    cl,BYTE PTR [ebx-0x66]
  41918e:	out    0x27,al
  419190:	jg     0x4191d6
  419192:	xor    eax,0x7bb893d4
  419197:	push   ds
  419198:	fsub   st,st(1)
  41919a:	jmp    DWORD PTR [ecx-0x20]
  41919d:	xor    eax,0x8564d846
  4191a2:	out    0x40,al
  4191a4:	ins    BYTE PTR es:[edi],dx
  4191a5:	adc    ah,al
  4191a7:	dec    edx
  4191a8:	pop    edi
  4191a9:	or     ah,dl
  4191ab:	jbe    0x419227
  4191ad:	ss jecxz 0x41918c
  4191b0:	pop    es
  4191b1:	call   0xa4ab:0x4343d276
  4191b8:	xor    dh,BYTE PTR [edx+0x795d2fd3]
  4191be:	arpl   sp,sp
  4191c0:	rcr    eax,cl
  4191c2:	xor    al,0x9e
  4191c4:	(bad)  
  4191c5:	test   DWORD PTR [eax+eiz*8-0x5ff717fb],0x14a91624
  4191d0:	icebp  
  4191d1:	push   eax
  4191d2:	in     al,dx
  4191d3:	ret    0xcb7d
  4191d6:	jg     0x419168
  4191d8:	rcr    BYTE PTR [ebx+0x46],0xfc
  4191dc:	lahf   
  4191dd:	mov    dh,0xad
  4191df:	enter  0x1e75,0xbc
  4191e3:	mov    ch,0x24
  4191e5:	add    BYTE PTR [eax-0x369b2274],0x30
  4191ec:	pop    edi
  4191ed:	nop
  4191ee:	out    0x61,al
  4191f0:	loope  0x419220
  4191f2:	pop    esp
  4191f3:	ret    
  4191f4:	jo     0x4191c4
  4191f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f7:	out    dx,eax
  4191f8:	fsub   DWORD PTR [ebx]
  4191fa:	ret    
  4191fb:	mov    eax,ds:0x9177dcfa
  419200:	and    ebp,edx
  419202:	and    eax,0xd19f97d0
  419207:	(bad)  
  419208:	push   ebx
  419209:	std    
  41920a:	and    bh,BYTE PTR [eax-0x4e36458a]
  419210:	in     eax,dx
  419211:	aaa    
  419212:	sub    DWORD PTR [eax],edi
  419214:	ds rcl esp,1
  419217:	sbb    eax,0xfb6872e4
  41921c:	loope  0x4191fc
  41921e:	mov    bh,BYTE PTR ss:[edi+0x55a0bbef]
  419225:	sub    BYTE PTR [edx-0x66],0x69
  419229:	scas   eax,DWORD PTR es:[edi]
  41922a:	(bad)  [edi-0x460bc01c]
  419230:	or     al,0x49
  419232:	fmul   QWORD PTR [esi-0x35]
  419235:	add    eax,0x52135331
  41923a:	xor    al,0xeb
  41923c:	jecxz  0x419294
  41923e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419240:	ins    BYTE PTR es:[edi],dx
  419241:	sub    ah,BYTE PTR ss:[ecx-0x34]
  419245:	leave  
  419246:	shr    DWORD PTR [edx+0x996b086],0xa7
  41924d:	sbb    BYTE PTR [eax+0x71],0x9b
  419251:	rol    BYTE PTR [esi+0x922b0ef],0xbb
  419258:	test   al,0xd0
  41925a:	push   ebx
  41925b:	mov    ch,0x1b
  41925d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41925e:	cmp    al,0x99
  419260:	mov    ecx,0xe8d46f94
  419265:	sbb    eax,0xa21a03c
  41926a:	adc    BYTE PTR [esi-0x17d9efa1],dh
  419270:	sar    BYTE PTR [eax],1
  419272:	push   ecx
  419273:	jmp    0x5b4:0xb62241
  41927a:	dec    esp
  41927b:	dec    esp
  41927c:	addr16 pusha 
  41927e:	xor    BYTE PTR [esi],al
  419280:	mov    ch,0x75
  419282:	jmp    0x419248
  419284:	je     0x41924e
  419286:	(bad)
  419289:	(bad)  
  41928a:	and    eax,0x670438f0
  41928f:	dec    esi
  419290:	pop    esi
  419291:	pop    ss
  419292:	stc    
  419293:	cmc    
  419294:	sbb    ch,BYTE PTR es:[ebp+0x364b4391]
  41929b:	xor    al,0xd6
  41929d:	push   DWORD PTR [esi-0x6df9a7c3]
  4192a3:	fiadd  DWORD PTR [edi-0x3e]
  4192a6:	ja     0x41927c
  4192a8:	inc    edx
  4192a9:	xchg   esp,eax
  4192aa:	mov    eax,0xb7ff91e8
  4192af:	pop    edi
  4192b0:	leave  
  4192b1:	scas   al,BYTE PTR es:[edi]
  4192b2:	scas   al,BYTE PTR es:[edi]
  4192b3:	fiadd  DWORD PTR ds:0xe0129862
  4192b9:	inc    esp
  4192ba:	in     al,0x52
  4192bc:	pop    edx
  4192bd:	shl    DWORD PTR [eax-0x3fbc71da],1
  4192c3:	mov    al,ds:0xfb2c6fe6
  4192c8:	cmp    DWORD PTR [esi-0x16200595],ecx
  4192ce:	in     eax,dx
  4192cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d0:	and    BYTE PTR [ecx],dl
  4192d2:	es sbb dl,ch
  4192d5:	inc    esp
  4192d6:	into   
  4192d7:	shl    BYTE PTR ds:0x777ec76a,cl
  4192dd:	(bad)  
  4192de:	and    bl,BYTE PTR [eax+eax*4-0x15]
  4192e2:	icebp  
  4192e3:	push   ecx
  4192e4:	ficom  DWORD PTR [edi]
  4192e6:	mov    eax,ds:0xb84cfe53
  4192eb:	aaa    
  4192ec:	pop    ebp
  4192ed:	mov    esi,0xde66bdf7
  4192f2:	add    edi,DWORD PTR [edx]
  4192f4:	add    cl,BYTE PTR [edi+0x37]
  4192f7:	test   DWORD PTR [esi-0x3],ebx
  4192fa:	lock jmp 0x8783171b
  419300:	outs   dx,DWORD PTR ds:[esi]
  419301:	jge    0x419378
  419303:	cmc    
  419304:	mov    cl,0x9f
  419306:	xchg   esi,eax
  419307:	inc    edi
  419308:	fsub   DWORD PTR [ecx+0x69]
  41930b:	xor    eax,0x39ca139a
  419310:	and    BYTE PTR [edx-0x3a],dh
  419313:	cmc    
  419314:	sub    esi,DWORD PTR [ecx-0x42]
  419317:	ret    
  419318:	mov    edi,0xb54b0837
  41931d:	pop    edx
  41931e:	mov    eax,ds:0x7429da70
  419323:	pop    ebx
  419324:	mov    ds:0xd1adbfc5,eax
  419329:	ins    DWORD PTR es:[edi],dx
  41932a:	dec    ebx
  41932b:	inc    ebx
  41932c:	jbe    0x4192dc
  41932e:	stc    
  41932f:	outs   dx,BYTE PTR ds:[esi]
  419330:	(bad)  
  419331:	into   
  419332:	fs gs es ss mov edx,0x15a214dc
  41933b:	add    DWORD PTR [esi+0x63],edi
  41933e:	mov    eax,ds:0x3c906e2a
  419343:	xchg   esp,eax
  419344:	js     0x4193a3
  419346:	mov    ds:0xa2f072dc,eax
  41934b:	mov    dh,0x98
  41934d:	dec    ecx
  41934e:	lods   eax,DWORD PTR ds:[esi]
  41934f:	mov    eax,0x3ed3605a
  419354:	es cmp eax,0x2af637dd
  41935a:	jae    0x419339
  41935c:	and    eax,0x63cd8d32
  419361:	mov    dh,dl
  419363:	fiadd  WORD PTR [esi-0x2caa559a]
  419369:	stos   DWORD PTR es:[edi],eax
  41936a:	add    al,0xcc
  41936c:	shl    DWORD PTR [ebp+0xd02c5e2],cl
  419372:	xor    al,cl
  419374:	loopne 0x4193a7
  419376:	js     0x4193f1
  419378:	pop    ebx
  419379:	cmp    bh,bl
  41937b:	xor    bl,BYTE PTR ds:0x684730d8
  419381:	dec    esi
  419382:	ja     0x41935a
  419384:	outs   dx,BYTE PTR ds:[esi]
  419385:	or     eax,0xf43fb67c
  41938a:	mov    ebp,fs
  41938c:	inc    edx
  41938d:	retf   
  41938e:	icebp  
  41938f:	adc    dh,dl
  419391:	dec    edx
  419392:	int3   
  419393:	fcomp  DWORD PTR [ecx+0x350ea6c7]
  419399:	out    dx,al
  41939a:	adc    BYTE PTR [eax+0x79d5e2c0],bh
  4193a0:	cmp    al,0xc0
  4193a2:	jge    0x4193f3
  4193a4:	inc    edx
  4193a5:	dec    edi
  4193a6:	call   FWORD PTR [ebx]
  4193a8:	stos   DWORD PTR es:[edi],eax
  4193a9:	push   cs
  4193aa:	adc    al,0xec
  4193ac:	pop    edx
  4193ad:	and    eax,0xde9e48e3
  4193b2:	leave  
  4193b3:	inc    BYTE PTR ds:0xee699d70
  4193b9:	dec    eax
  4193ba:	dec    edx
  4193bb:	xchg   edi,eax
  4193bc:	sbb    eax,0xce5a6416
  4193c1:	adc    BYTE PTR [esi+0x6f6e087a],cl
  4193c7:	iret   
  4193c8:	push   ds
  4193c9:	iret   
  4193ca:	xor    DWORD PTR [edi],esp
  4193cc:	mov    ds:0x65451458,al
  4193d1:	scas   al,BYTE PTR es:[edi]
  4193d2:	dec    ecx
  4193d3:	cmp    ebx,DWORD PTR [edx-0x74]
  4193d6:	mov    WORD PTR [eax],cs
  4193d8:	loopne 0x419455
  4193da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193db:	pop    ebp
  4193dc:	mov    eax,0x511e4627
  4193e1:	pop    ecx
  4193e2:	jecxz  0x419411
  4193e4:	das    
  4193e5:	out    0xd3,eax
  4193e7:	ds xchg ecx,eax
  4193e9:	adc    eax,0xb0cf4959
  4193ee:	test   esp,0xbc6c9849
  4193f4:	xor    DWORD PTR [esi],esi
  4193f6:	push   edx
  4193f7:	or     ebp,edi
  4193f9:	cmp    eax,0x8e516def
  4193fe:	jb     0x419381
  419400:	mov    ebx,0x9b7e49ff
  419405:	xor    bh,BYTE PTR [ecx-0x1d15362b]
  41940b:	das    
  41940c:	jb     0x4193a1
  41940e:	mov    gs,WORD PTR [ebx-0x59]
  419411:	push   ecx
  419412:	pop    ebx
  419413:	ficomp DWORD PTR [edx+ecx*8+0x11]
  419417:	and    dl,BYTE PTR [edi-0x50]
  41941a:	dec    ecx
  41941b:	and    ecx,0xe8602cb4
  419421:	ins    BYTE PTR es:[edi],dx
  419422:	je     0x419414
  419424:	mov    al,0xca
  419426:	mov    ebx,0x3b263f71
  41942b:	push   0x40
  41942d:	ret    0x5c1
  419430:	inc    DWORD PTR [esi]
  419432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419433:	jmp    FWORD PTR [ecx-0x4b]
  419436:	sub    bl,BYTE PTR [edi-0x5ed2714c]
  41943c:	cmp    dl,dl
  41943e:	pushf  
  41943f:	add    al,0x68
  419441:	je     0x419476
  419443:	pop    ebx
  419444:	test   eax,0x2915bfa6
  419449:	scas   al,BYTE PTR es:[edi]
  41944a:	out    0x81,eax
  41944c:	mov    bh,bh
  41944e:	jne    0x4194c3
  419450:	clc    
  419451:	mov    cl,0x91
  419453:	daa    
  419454:	xlat   BYTE PTR ds:[ebx]
  419455:	mov    esi,0xa12286a2
  41945a:	inc    ecx
  41945b:	mov    ebx,0xa25f0999
  419460:	sar    BYTE PTR [esi+0x36e56006],cl
  419466:	leave  
  419467:	cli    
  419468:	or     BYTE PTR [ecx+0xc7ef628],al
  41946e:	mov    eax,0x358de518
  419473:	mov    ebx,0xd09352be
  419478:	push   edi
  419479:	cmp    BYTE PTR [eax-0x2c3a64d4],bh
  41947f:	(bad)  
  419481:	mov    edi,0xf8125d52
  419486:	(bad)  
  419487:	lea    edi,es:[esi-0x18]
  41948b:	push   esp
  41948c:	fdivr  QWORD PTR [ebx+0x6a]
  41948f:	jmp    0x5537c3dc
  419494:	push   DWORD PTR [ebx]
  419496:	sbb    eax,0xc24ccf13
  41949b:	or     al,0x2b
  41949d:	inc    esp
  41949e:	sbb    bh,BYTE PTR [edi+0x40]
  4194a1:	dec    ebp
  4194a2:	imul   edx,DWORD PTR [ebx-0x34185242],0xd
  4194a9:	fwait
  4194aa:	aad    0xd5
  4194ac:	(bad)  
  4194ad:	popf   
  4194ae:	and    ah,BYTE PTR [eax+edi*4+0x3d]
  4194b2:	test   BYTE PTR [ebx],cl
  4194b4:	and    ebp,DWORD PTR [ebx-0xf78b176]
  4194ba:	scas   al,BYTE PTR es:[edi]
  4194bb:	adc    dh,0xa3
  4194be:	lds    edx,FWORD PTR [edx+0x79a16734]
  4194c4:	out    0x4e,eax
  4194c6:	adc    ecx,ecx
  4194c8:	ret    0xda65
  4194cb:	xchg   edx,eax
  4194cc:	mov    dl,cl
  4194ce:	fcomip st,st(5)
  4194d0:	retf   0x5c4e
  4194d3:	add    BYTE PTR [ebp+0x4f510b49],ch
  4194d9:	popa   
  4194da:	mov    WORD PTR [edx],cs
  4194dc:	cli    
  4194dd:	xor    DWORD PTR [ecx-0x32],esp
  4194e0:	mov    dl,al
  4194e2:	out    0x48,eax
  4194e4:	add    eax,0x5ee80b7a
  4194e9:	cmp    DWORD PTR [esp+ebx*2-0x54],esp
  4194ed:	mov    ebx,0x762fb8d
  4194f2:	mov    bh,0xc8
  4194f4:	sbb    ebx,DWORD PTR [edx+0x54]
  4194f7:	xchg   DWORD PTR [edi+0x60],edx
  4194fa:	adc    eax,0x9193645
  4194ff:	test   eax,0xd2c299f4
  419504:	imul   ebp,DWORD PTR [ecx+0x30],0x929bf5c1
  41950b:	xor    ebx,eax
  41950d:	jbe    0x419586
  41950f:	rcl    eax,1
  419511:	push   eax
  419512:	push   ss
  419513:	out    dx,al
  419514:	test   DWORD PTR [esi-0xc0bc0e],ecx
  41951a:	aas    
  41951b:	push   ebx
  41951c:	mov    ds:0x247f5283,eax
  419521:	lock (bad) 
  419524:	and    eax,0xce796aa
  419529:	cmp    esp,DWORD PTR [ebx+0x15]
  41952c:	call   0x6f90a7a5
  419531:	loopne 0x4194c8
  419533:	mov    edi,eax
  419535:	mov    bh,0x3a
  419537:	mov    ah,0x65
  419539:	pop    ecx
  41953a:	jmp    0x1560:0xec5fe1a0
  419541:	and    ecx,edx
  419543:	fiadd  DWORD PTR [ebp+0x7b]
  419546:	jmp    0x4194f6
  419548:	(bad)  
  419549:	cmp    al,0x75
  41954b:	mov    al,ds:0x898078b
  419550:	loope  0x4195a9
  419552:	js     0x4195bb
  419554:	ror    DWORD PTR [eax-0x49],cl
  419557:	and    eax,0xf5aa346a
  41955c:	das    
  41955d:	outs   dx,BYTE PTR ds:[esi]
  41955e:	in     al,0x9e
  419560:	rcl    BYTE PTR [eax-0x41c4506c],cl
  419566:	push   ecx
  419567:	add    BYTE PTR [eax-0x55b85f61],ah
  41956d:	sbb    eax,0xfb6ad47e
  419572:	icebp  
  419573:	sbb    DWORD PTR cs:0xcf7fb7a0,ebx
  41957a:	add    ch,bl
  41957c:	data16 shl dh,1
  41957f:	enter  0xffa4,0xe1
  419583:	sti    
  419584:	jl     0x41951a
  419586:	dec    eax
  419587:	cmp    cl,BYTE PTR [eax+0x57]
  41958a:	jmp    0x9a509b37
  41958f:	cld    
  419590:	lds    ecx,FWORD PTR [ecx-0x6]
  419593:	inc    edi
  419594:	jnp    0x419585
  419596:	push   0xffffff83
  419598:	push   ds
  419599:	mov    cl,0x86
  41959b:	jp     0x4195f1
  41959d:	mov    esi,0xbcbd1630
  4195a2:	popa   
  4195a3:	add    al,0x6c
  4195a5:	inc    edi
  4195a6:	jge    0x41952d
  4195a8:	test   BYTE PTR [edx+0x4acb3bb6],0x47
  4195af:	xor    BYTE PTR [esi],dh
  4195b1:	jle    0x419625
  4195b3:	sbb    BYTE PTR [eax-0x1a],bh
  4195b6:	ror    DWORD PTR [ebx+0x6dd1900],0xb8
  4195bd:	jg     0x419565
  4195bf:	and    eax,0xa2ff3bd1
  4195c4:	sbb    esp,edx
  4195c6:	in     eax,dx
  4195c7:	add    ah,cl
  4195c9:	mov    ds:0x5d8f1ed7,al
  4195ce:	jo     0x419620
  4195d0:	and    BYTE PTR [esi+0x2b],dl
  4195d3:	js     0x419616
  4195d5:	mov    WORD PTR [ebx],gs
  4195d7:	adc    al,0xf4
  4195d9:	pop    es
  4195da:	or     esp,DWORD PTR [ecx+ecx*2+0x39840bb1]
  4195e1:	mov    ah,0x8f
  4195e3:	mov    ebx,0xc2cf4069
  4195e8:	(bad)  
  4195e9:	lods   al,BYTE PTR ds:[esi]
  4195ea:	int3   
  4195eb:	retf   
  4195ec:	mov    esi,0x26a3a55c
  4195f1:	int3   
  4195f2:	sar    BYTE PTR [edi+0x1093e2d2],1
  4195f8:	inc    ebp
  4195f9:	rcr    BYTE PTR [ebx+0x49122ca7],0x9e
  419600:	push   0x82410ccf
  419605:	(bad)  
  419607:	adc    BYTE PTR [eax-0x6c],ah
  41960a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41960b:	outs   dx,DWORD PTR ds:[esi]
  41960c:	stc    
  41960d:	vpminsw xmm2,xmm4,XMMWORD PTR [edx-0x5b]
  419612:	add    dl,BYTE PTR [eax]
  419614:	push   esi
  419615:	sar    DWORD PTR [edx+0x7a1e70d3],cl
  41961b:	int    0x6c
  41961d:	inc    eax
  41961e:	jle    0x4195dc
  419620:	inc    eax
  419621:	sbb    ebx,DWORD PTR [ecx+0x42c149c2]
  419627:	ins    DWORD PTR es:[edi],dx
  419628:	sub    DWORD PTR [esp+ecx*4+0x69],edi
  41962c:	and    dl,BYTE PTR [edx+0x18]
  41962f:	lahf   
  419630:	sbb    BYTE PTR [eax-0x6d],ch
  419633:	jne    0x419641
  419635:	cld    
  419636:	xchg   edx,eax
  419637:	dec    edx
  419638:	(bad)  [ebp-0x6c973da]
  41963e:	shr    BYTE PTR [ebx],cl
  419640:	sbb    eax,0x1ffe516a
  419645:	out    0xed,eax
  419647:	jle    0x4195f5
  419649:	xchg   ebp,eax
  41964a:	cmp    ebx,DWORD PTR [ecx]
  41964c:	dec    ecx
  41964d:	(bad)  
  41964f:	(bad)  
  419650:	mov    cl,0xeb
  419652:	pushf  
  419653:	pushf  
  419654:	fprem1 
  419656:	mov    al,ds:0xf5e11911
  41965b:	fcomp  DWORD PTR [edi-0x22895a5b]
  419661:	loop   0x4196bc
  419663:	sar    DWORD PTR [ebx+0x5c],0xd6
  419667:	mov    dh,0x17
  419669:	ins    DWORD PTR es:[edi],dx
  41966a:	sub    BYTE PTR [edx+0x6],bl
  41966d:	sahf   
  41966e:	loopne 0x4196a9
  419670:	cmc    
  419671:	rcl    DWORD PTR [edi+ebx*8+0x6682d93b],1
  419678:	sbb    BYTE PTR [edi],ch
  41967a:	lods   eax,DWORD PTR ds:[esi]
  41967b:	inc    ecx
  41967c:	and    DWORD PTR [ebx+0x39b2b104],esi
  419682:	jp     0x4196f2
  419684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419685:	bound  ecx,QWORD PTR [edx]
  419687:	add    eax,0xcea29894
  41968c:	loop   0x4196e6
  41968e:	jae    0x419674
  419690:	push   0x198bd30b
  419695:	clc    
  419696:	cs add edi,ebx
  419699:	out    0xf7,eax
  41969b:	add    esp,ebp
  41969d:	add    BYTE PTR [ebx-0x24d715f8],0xc3
  4196a4:	push   cs
  4196a5:	stc    
  4196a6:	lahf   
  4196a7:	add    DWORD PTR ds:0xf79728dc,ebx
  4196ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ae:	icebp  
  4196af:	xor    edi,edx
  4196b1:	inc    ecx
  4196b2:	dec    ecx
  4196b3:	cs dec esp
  4196b5:	jnp    0x41965f
  4196b7:	jp     0x4196ab
  4196b9:	sbb    dl,BYTE PTR cs:0x778e9fd1
  4196c0:	je     0x419700
  4196c2:	scas   eax,DWORD PTR es:[edi]
  4196c3:	and    eax,0x9e398959
  4196c8:	int    0xb5
  4196ca:	lods   eax,DWORD PTR ds:[esi]
  4196cb:	sbb    ebx,DWORD PTR [edx]
  4196cd:	jno    0x41967e
  4196cf:	les    ebp,FWORD PTR [ecx]
  4196d1:	ret    0xc2e3
  4196d4:	loopne 0x41973d
  4196d6:	mov    ebx,ecx
  4196d8:	mov    bl,0x8b
  4196da:	sub    ebp,ebp
  4196dc:	dec    esp
  4196dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196de:	adc    eax,0xb9202e92
  4196e3:	shr    esi,1
  4196e5:	outs   dx,BYTE PTR ds:[esi]
  4196e6:	pop    edx
  4196e7:	push   0xefd824af
  4196ec:	mov    bh,BYTE PTR [edi+0x1655db43]
  4196f2:	xchg   ebp,eax
  4196f3:	add    eax,0xd4b7315
  4196f8:	xchg   edi,eax
  4196f9:	jg     0x41974d
  4196fb:	xchg   edx,ecx
  4196fd:	pushf  
  4196fe:	pop    edx
  4196ff:	ss xor eax,0x9863710
  419705:	outs   dx,DWORD PTR ds:[esi]
  419706:	mov    WORD PTR [ebx-0x2383e141],?
  41970c:	fisubr WORD PTR [ebp+0x41]
  41970f:	push   es
  419710:	sbb    dl,BYTE PTR gs:[ecx]
  419713:	test   edi,0xc365d3d0
  419719:	mov    ebp,ebp
  41971b:	adc    DWORD PTR ds:0x7bc9114d,ecx
  419721:	fwait
  419722:	into   
  419723:	inc    eax
  419724:	sub    ah,cl
  419726:	xchg   BYTE PTR [edx+0xb5a7f5],dh
  41972c:	add    eax,esp
  41972e:	bound  esi,QWORD PTR [edi+0xedb3773]
  419734:	dec    edi
  419735:	pop    es
  419736:	(bad)
  41973a:	mov    eax,0xcd9e2b51
  41973f:	sahf   
  419740:	stos   BYTE PTR es:[edi],al
  419741:	outs   dx,BYTE PTR ds:[esi]
  419742:	mov    ecx,0x832e9fad
  419747:	jb     0x41977b
  419749:	mov    ecx,0x5d17dadc
  41974e:	mov    al,0x77
  419750:	das    
  419751:	mov    dl,dl
  419753:	in     eax,dx
  419754:	push   esp
  419755:	pop    edx
  419756:	mov    DWORD PTR [ecx-0x1cc7374e],esp
  41975c:	xlat   BYTE PTR ds:[ebx]
  41975d:	ins    DWORD PTR es:[edi],dx
  41975e:	lods   al,BYTE PTR ds:[esi]
  41975f:	daa    
  419760:	retf   
  419761:	mov    al,0x58
  419763:	pop    esp
  419764:	shl    DWORD PTR [edi],1
  419766:	dec    edi
  419767:	cwde   
  419768:	repnz sub BYTE PTR [edi+ebx*8-0xc1fdbed],0x55
  419771:	pop    edx
  419772:	mov    edx,0x8141eeec
  419777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419778:	retf   
  419779:	aad    0x5e
  41977b:	dec    esp
  41977c:	pop    ebp
  41977d:	lods   eax,DWORD PTR ds:[esi]
  41977e:	sbb    bl,BYTE PTR [ecx-0x6f4daf4b]
  419784:	test   DWORD PTR [ebx],eax
  419786:	icebp  
  419787:	imul   esi,esi,0xffffff9c
  41978a:	inc    ebp
  41978b:	pusha  
  41978c:	xchg   ebp,eax
  41978d:	fld    QWORD PTR [ebp-0x57]
  419790:	or     DWORD PTR [eax-0x57b2585b],ecx
  419796:	shl    DWORD PTR [esi+0xdf7d6cb],1
  41979c:	pop    ss
  41979d:	fst    QWORD PTR [ebx+ebx*2-0x1e]
  4197a1:	pop    es
  4197a2:	sub    BYTE PTR [ecx+eiz*4-0x6d],dl
  4197a6:	out    dx,eax
  4197a7:	xlat   BYTE PTR ds:[ebx]
  4197a8:	push   0x5c
  4197aa:	mov    al,0xa8
  4197ac:	das    
  4197ad:	shr    al,cl
  4197af:	arpl   WORD PTR [edi],bx
  4197b1:	cwde   
  4197b2:	sub    BYTE PTR [edx-0x4a43d23b],bh
  4197b8:	js     0x4197f2
  4197ba:	mov    ds:0xc4ff9424,eax
  4197bf:	pop    edx
  4197c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c1:	outs   dx,DWORD PTR ds:[esi]
  4197c2:	dec    esp
  4197c3:	leave  
  4197c4:	jne    0x4197c4
  4197c6:	push   eax
  4197c7:	dec    ebp
  4197c8:	mov    dl,0x5b
  4197ca:	test   al,0xe3
  4197cc:	push   esp
  4197cd:	sub    BYTE PTR [ebx],dl
  4197cf:	test   BYTE PTR [esi],al
  4197d1:	dec    ecx
  4197d2:	test   DWORD PTR [ebx],ebp
  4197d4:	jno    0x419839
  4197d6:	xchg   ebx,eax
  4197d7:	push   ss
  4197d8:	loopne 0x419809
  4197da:	pop    ss
  4197db:	(bad)  
  4197dd:	arpl   WORD PTR [edx],ax
  4197df:	add    dh,BYTE PTR [ebp-0x6996fa13]
  4197e5:	aaa    
  4197e6:	jo     0x4197b7
  4197e8:	pop    ebx
  4197e9:	and    esp,ecx
  4197eb:	add    dh,dl
  4197ed:	add    eax,0xed29b767
  4197f2:	aas    
  4197f3:	stos   DWORD PTR es:[edi],eax
  4197f4:	clc    
  4197f5:	int3   
  4197f6:	sti    
  4197f7:	push   ebp
  4197f8:	nop
  4197f9:	inc    ebp
  4197fa:	cmp    BYTE PTR [ecx],ch
  4197fc:	mov    ds:0x6ccf2390,al
  419801:	and    DWORD PTR [ecx-0x3b227cb7],esp
  419807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419808:	daa    
  419809:	cli    
  41980a:	adc    eax,0x414e3ed8
  41980f:	lahf   
  419810:	mov    ch,0x37
  419812:	inc    ebp
  419813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419814:	(bad)  
  419815:	icebp  
  419816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419817:	push   0x804f9618
  41981c:	push   esp
  41981d:	leave  
  41981e:	mov    bl,BYTE PTR [ebx+0x71]
  419821:	pop    ds
  419822:	pop    edi
  419823:	push   esi
  419824:	mov    bl,0x74
  419826:	repnz mov eax,ds:0x357bec79
  41982c:	loopne 0x419877
  41982e:	jns    0x41980b
  419830:	out    dx,eax
  419831:	cld    
  419832:	xor    eax,0xb1fe2fd6
  419837:	out    0x20,eax
  419839:	dec    ecx
  41983a:	pop    ss
  41983b:	cmp    BYTE PTR [esi+0x59d27a28],al
  419841:	int3   
  419842:	mov    DWORD PTR [eax-0x49],0x3c1bbe08
  419849:	pop    edi
  41984a:	or     dl,ah
  41984c:	pop    edi
  41984d:	fmul   DWORD PTR ds:0x99a5e7a0
  419853:	push   esp
  419854:	push   eax
  419855:	mov    ecx,0xb2b6a092
  41985a:	push   0xfc85d490
  41985f:	push   edx
  419860:	test   DWORD PTR [edi+0x485b257d],ebp
  419866:	inc    ebx
  419867:	dec    esp
  419868:	adc    al,0x4f
  41986a:	gs loope 0x419869
  41986d:	xor    dl,al
  41986f:	sbb    DWORD PTR [esi+0x4e1f12c4],eax
  419875:	adc    BYTE PTR [esi-0x21],0x92
  419879:	push   ebp
  41987a:	imul   ecx,DWORD PTR [ecx-0xe],0x52e2594a
  419881:	jno    0x4198d9
  419883:	fwait
  419884:	jp     0x41989f
  419886:	fsubr  DWORD PTR [esp+eiz*8-0x17530223]
  41988d:	or     DWORD PTR [ecx],ebx
  41988f:	(bad)  
  419890:	int    0xd4
  419892:	push   es
  419893:	push   ebx
  419894:	das    
  419895:	cmp    DWORD PTR [ebx+0x11b33556],eax
  41989b:	shl    BYTE PTR [esi+0x22],cl
  41989e:	push   0x9f521953
  4198a3:	mov    esi,0x86f7ba08
  4198a8:	sbb    dh,BYTE PTR [ecx+0x7b415cec]
  4198ae:	mov    WORD PTR [ecx+eiz*4+0x7bb10132],cs
  4198b5:	jns    0x4198cd
  4198b7:	in     eax,0xf3
  4198b9:	xor    ah,BYTE PTR [esi+0x4b]
  4198bc:	cmc    
  4198bd:	aad    0x8f
  4198bf:	mov    dh,bl
  4198c1:	sub    DWORD PTR [edi-0x6e],0x6f
  4198c5:	nop
  4198c6:	popf   
  4198c7:	and    ebx,eax
  4198c9:	mov    ebx,0x157df4c2
  4198ce:	jb     0x419878
  4198d0:	pop    esp
  4198d1:	xor    dl,BYTE PTR [edx-0x669ab5d4]
  4198d7:	(bad)  
  4198d8:	enter  0x7e6,0x59
  4198dc:	(bad)  
  4198dd:	addr16 pop ebx
  4198df:	or     al,0x58
  4198e1:	xchg   ebx,eax
  4198e2:	xor    bl,BYTE PTR [esi]
  4198e4:	sbb    eax,0x24a21fc3
  4198e9:	ja     0x419917
  4198eb:	push   eax
  4198ec:	inc    ebp
  4198ee:	cmp    DWORD PTR [eax+0x183744a1],edi
  4198f4:	popa   
  4198f5:	xlat   BYTE PTR ds:[ebx]
  4198f6:	rcr    DWORD PTR [ecx+ebx*8+0x59],1
  4198fa:	shl    DWORD PTR [esi+edx*2-0x6e2167d4],0x78
  419902:	cmp    al,0x42
  419904:	leave  
  419905:	dec    ebx
  419906:	mov    ecx,0x5e0b909d
  41990b:	or     ecx,DWORD PTR [eax]
  41990d:	fimul  DWORD PTR [esi+0x21c50691]
  419913:	sub    dh,BYTE PTR [ebx-0x61]
  419916:	inc    esi
  419917:	lods   eax,DWORD PTR ds:[esi]
  419918:	mov    ds:0x335d11de,eax
  41991d:	or     eax,0xc6894bef
  419922:	mov    fs,WORD PTR [ebx+0x3]
  419925:	inc    eax
  419926:	add    al,BYTE PTR [edi+0x63]
  419929:	(bad)  
  41992a:	stos   DWORD PTR es:[edi],eax
  41992b:	call   0x45b83497
  419930:	cmp    edx,ecx
  419932:	(bad)  
  419933:	retf   
  419934:	dec    esp
  419935:	push   esi
  419936:	jp     0x419909
  419938:	jmp    0x4198c3
  41993a:	mov    ah,0x84
  41993c:	dec    edx
  41993d:	retf   
  41993e:	gs pusha 
  419940:	inc    ebp
  419941:	push   esi
  419942:	mov    eax,0x6581ce4c
  419947:	sar    BYTE PTR [eax+0x240656f4],1
  41994d:	outs   dx,BYTE PTR ds:[esi]
  41994e:	in     eax,0xc7
  419950:	test   edx,esp
  419952:	addr16 jb 0x41992c
  419955:	les    ebp,FWORD PTR [ebx+0x6b09df51]
  41995b:	daa    
  41995c:	stos   BYTE PTR es:[edi],al
  41995d:	inc    esp
  41995e:	mov    ebx,DWORD PTR [edx-0x2ee147c]
  419964:	jecxz  0x41998f
  419966:	out    0xe6,al
  419968:	push   cs
  419969:	mov    DWORD PTR [ebx-0x1c006a7b],ecx
  41996f:	fstp   DWORD PTR fs:[edx+esi*1+0x1a52f055]
  419977:	mov    edx,0xdb0f7f18
  41997c:	lods   al,BYTE PTR ds:[esi]
  41997d:	out    dx,eax
  41997e:	mov    dl,0xf8
  419980:	std    
  419981:	pop    eax
  419982:	ins    BYTE PTR es:[edi],dx
  419983:	repz pop ss
  419985:	js     0x419992
  419987:	fisttp DWORD PTR [eax-0x6db44ddc]
  41998d:	pop    ecx
  41998e:	rcr    DWORD PTR [edi],0x89
  419991:	cmp    BYTE PTR [ebp-0x76],dh
  419994:	xchg   esi,eax
  419995:	push   esp
  419996:	push   eax
  419997:	adc    eax,0xc3f39f23
  41999c:	jns    0x41998b
  41999e:	xor    ecx,DWORD PTR cs:[edx]
  4199a1:	sub    DWORD PTR [ecx-0x235b2a2a],eax
  4199a7:	sub    BYTE PTR [eax-0x56aa67b5],dh
  4199ad:	(bad)  
  4199ae:	in     al,dx
  4199af:	mov    edx,0x8697c43f
  4199b4:	and    dh,dh
  4199b6:	mov    es,WORD PTR [esp+ebp*2]
  4199b9:	xchg   ecx,eax
  4199ba:	sub    eax,0xe8037063
  4199bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199c0:	jmp    0x1ab8:0x53af2965
  4199c7:	shl    DWORD PTR [ecx],1
  4199c9:	mov    esi,0x815115de
  4199ce:	enter  0x37bf,0x4e
  4199d2:	xchg   edi,eax
  4199d3:	sbb    cl,BYTE PTR [ecx+0x4e]
  4199d6:	sbb    BYTE PTR [eax+0x3f],ch
  4199d9:	mov    edx,0xa16e7c0f
  4199de:	mov    ecx,0x11bcf8f4
  4199e3:	sahf   
  4199e4:	xchg   esi,eax
  4199e5:	inc    ebp
  4199e6:	and    eax,0x1bf68040
  4199eb:	mov    ch,0x4f
  4199ed:	pusha  
  4199ee:	int3   
  4199ef:	(bad)  
  4199f0:	cmp    ebp,ebx
  4199f2:	fisubr WORD PTR [ecx-0x64]
  4199f5:	inc    edi
  4199f6:	mov    ah,0x90
  4199f8:	mov    ebp,0xa7564387
  4199fd:	inc    ebx
  4199fe:	shl    ecx,cl
  419a00:	mov    BYTE PTR [esi],ch
  419a02:	jno    0x4199cc
  419a04:	test   DWORD PTR [ebx],eax
  419a06:	and    bl,bl
  419a08:	add    eax,0x4079d02a
  419a0d:	je     0x4199d9
  419a0f:	ins    BYTE PTR es:[edi],dx
  419a10:	sbb    esp,DWORD PTR [ecx-0x2ea7f8d9]
  419a16:	push   cs
  419a17:	dec    esi
  419a18:	mov    ah,0xae
  419a1a:	fdivr  DWORD PTR [esi-0x171759b7]
  419a20:	popf   
  419a21:	or     BYTE PTR [ecx+0x5ef5a13c],bh
  419a27:	sbb    bl,BYTE PTR [ebx-0x22]
  419a2a:	into   
  419a2b:	call   DWORD PTR [edx]
  419a2d:	fnstcw WORD PTR [eax]
  419a2f:	rcl    BYTE PTR ds:0x60e22dd7,0x93
  419a36:	push   eax
  419a37:	addr16 mov al,0xb4
  419a3a:	enter  0x6021,0xf
  419a3e:	(bad)  
  419a3f:	dec    edi
  419a40:	fs push es
  419a42:	or     esi,esi
  419a44:	jp     0x419a59
  419a46:	pusha  
  419a47:	adc    dl,al
  419a49:	wbinvd 
  419a4b:	pop    esp
  419a4c:	mov    eax,0xa9daa128
  419a51:	les    ebp,FWORD PTR [edx+0x104c854d]
  419a57:	jo     0x419a65
  419a59:	and    ebp,DWORD PTR [ebp+edx*1-0x12]
  419a5d:	loop   0x419ab6
  419a5f:	icebp  
  419a60:	ss dec edi
  419a62:	push   0x78d61e53
  419a67:	fcomp  DWORD PTR [esi-0x23]
  419a6a:	push   es
  419a6b:	hlt    
  419a6c:	ss jmp 0xe33ce323
  419a72:	shr    DWORD PTR [ebx+0x78f25c42],cl
  419a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a79:	div    DWORD PTR [si-0x73]
  419a7d:	imul   edx,DWORD PTR [ebx+0x33098ba1],0x67
  419a84:	jecxz  0x419ae5
  419a86:	rcr    BYTE PTR [ebp-0x7818fd6],0xae
  419a8d:	adc    edi,DWORD PTR [eax-0x67]
  419a90:	and    ecx,eax
  419a92:	mov    ds:0xffc044ad,al
  419a97:	cwde   
  419a98:	int3   
  419a99:	test   eax,0x1b5b716e
  419a9e:	jns    0x419a52
  419aa0:	push   edi
  419aa1:	adc    DWORD PTR [ecx-0x428b4aa0],ebx
  419aa7:	push   cs
  419aa8:	xor    al,BYTE PTR [edi-0x1c452d4e]
  419aae:	adc    al,0xca
  419ab0:	fs push es
  419ab2:	retf   0x2853
  419ab5:	jl     0x419ad4
  419ab7:	dec    ecx
  419ab8:	imul   BYTE PTR [eax]
  419aba:	cli    
  419abb:	dec    ebx
  419abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abd:	scas   al,BYTE PTR es:[edi]
  419abe:	imul   edi,DWORD PTR [eax-0x732facb5],0xffffffa1
  419ac5:	xchg   esi,eax
  419ac6:	jno    0x419aea
  419ac8:	test   DWORD PTR [ecx],edx
  419aca:	fistp  WORD PTR [edx+0x1cbca464]
  419ad0:	inc    edi
  419ad1:	fsub   st,st(6)
  419ad3:	test   al,0x59
  419ad5:	inc    edx
  419ad6:	das    
  419ad7:	cmp    al,0xb4
  419ad9:	pushf  
  419ada:	push   0x57
  419adc:	and    eax,0x3b77bce8
  419ae1:	cmp    al,0x75
  419ae3:	rol    edx,0x9a
  419ae6:	cmp    BYTE PTR [eax-0xecc38ca],bh
  419aec:	sub    esi,eax
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	dec    edx
  419b13:	pop    ebp
  419b14:	mov    esp,0x7cdc47ad
  419b19:	jnp    0x419b33
  419b1b:	sahf   
  419b1c:	jnp    0x419b99
  419b1e:	test   al,0xb5
  419b20:	icebp  
  419b21:	stos   BYTE PTR es:[edi],al
  419b22:	dec    edi
  419b23:	ret    
  419b24:	push   es
  419b25:	fisttp WORD PTR [eax+0x4cb2a4d6]
  419b2b:	dec    edi
  419b2c:	add    bh,BYTE PTR [esi]
  419b2e:	mov    bl,0x4f
  419b30:	or     cl,dl
  419b32:	inc    esp
  419b33:	jp     0x419b76
  419b35:	vpunpckhdq ymm7,ymm6,YMMWORD PTR [ebx+0x33a191c3]
  419b3d:	cmp    bh,dl
  419b3f:	ret    0xdd45
  419b42:	pop    edx
  419b43:	push   ebp
  419b44:	ds hlt 
  419b46:	dec    ebp
  419b47:	les    eax,FWORD PTR [edx+edi*8-0x15db4cbb]
  419b4e:	mov    ebp,0x9c751e3f
  419b53:	adc    al,0x9f
  419b55:	add    DWORD PTR [edi+0x5e],ecx
  419b58:	pushf  
  419b59:	add    edi,eax
  419b5b:	push   0xc5d069a2
  419b60:	sbb    BYTE PTR ss:[eax+0x6dbf953],dh
  419b67:	cdq    
  419b68:	scas   al,BYTE PTR es:[edi]
  419b69:	dec    eax
  419b6a:	mov    ds,WORD PTR [ebx+0x552dafa3]
  419b70:	adc    esp,ecx
  419b72:	sbb    DWORD PTR [edi],ecx
  419b74:	mov    al,ds:0x14c953ea
  419b79:	inc    edx
  419b7a:	or     BYTE PTR ds:0xccfc1171,ch
  419b80:	sub    ebp,esi
  419b82:	ins    BYTE PTR es:[edi],dx
  419b83:	das    
  419b84:	cli    
  419b85:	or     ebx,0xffffffda
  419b88:	pop    ebx
  419b89:	pop    es
  419b8a:	fs pop ebp
  419b8c:	sbb    al,0xe7
  419b8e:	mov    esi,DWORD PTR gs:[ebx+0x64]
  419b92:	and    ebp,DWORD PTR [ebp+edi*8+0x7d]
  419b96:	pop    edx
  419b97:	jno    0x419bac
  419b99:	mov    dl,0xd4
  419b9b:	jo     0x419baa
  419b9d:	jmp    0x419b9d
  419b9f:	or     BYTE PTR [ebx+0x3ed12348],dl
  419ba5:	retf   0x6bae
  419ba8:	dec    ebx
  419ba9:	cmp    DWORD PTR [edx+edx*4+0x2d5badf3],ebx
  419bb0:	cwde   
  419bb1:	mov    al,0xf
  419bb3:	in     al,0xce
  419bb5:	(bad)  
  419bb6:	mov    ecx,0x29a0722b
  419bbb:	push   0x3743832c
  419bc0:	cmp    DWORD PTR [eax-0x2adb8665],eax
  419bc6:	pop    edi
  419bc7:	fwait
  419bc8:	cs dec edx
  419bca:	faddp  st(2),st
  419bcc:	cld    
  419bcd:	or     bl,BYTE PTR [edx+0x2cc088f3]
  419bd3:	or     ecx,DWORD PTR [edx]
  419bd5:	sar    al,1
  419bd7:	jne    0x419be1
  419bd9:	push   ebp
  419bda:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bdc:	int    0x1e
  419bde:	in     eax,0xfa
  419be0:	inc    ebx
  419be1:	xlat   BYTE PTR ds:[ebx]
  419be2:	mov    edi,0xe79ed680
  419be7:	(bad)  
  419be9:	popf   
  419bea:	pop    ds
  419beb:	jmp    0x419b8b
  419bed:	add    eax,0xa2952b5a
  419bf2:	scas   al,BYTE PTR es:[edi]
  419bf3:	inc    ecx
  419bf4:	retf   0x6a82
  419bf7:	adc    ah,BYTE PTR [ebx]
  419bf9:	sub    edi,edi
  419bfb:	inc    esi
  419bfc:	sub    ch,bh
  419bfe:	int3   
  419bff:	or     al,0x7b
  419c01:	dec    edi
  419c02:	or     BYTE PTR [ebx+ecx*2+0xe],ch
  419c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c07:	xchg   ecx,eax
  419c08:	das    
  419c09:	lods   eax,DWORD PTR ds:[esi]
  419c0a:	je     0x419bd7
  419c0c:	stos   DWORD PTR es:[edi],eax
  419c0d:	push   0x32
  419c0f:	cwde   
  419c10:	cmp    ebx,DWORD PTR [esp+eiz*4-0x5b7ca9c]
  419c17:	scas   al,BYTE PTR es:[edi]
  419c18:	fstp   st(0)
  419c1a:	scas   eax,DWORD PTR es:[edi]
  419c1b:	xor    eax,0xbfd6c6c8
  419c20:	fwait
  419c21:	sar    DWORD PTR [edx-0x4e4cecab],0x6b
  419c28:	xor    edi,ecx
  419c2a:	xchg   esp,eax
  419c2b:	dec    edi
  419c2c:	in     al,dx
  419c2d:	pop    edi
  419c2e:	dec    eax
  419c2f:	addr16 lock out dx,al
  419c32:	scas   al,BYTE PTR es:[edi]
  419c33:	pop    ebx
  419c34:	cwde   
  419c35:	add    BYTE PTR [edx],al
  419c37:	aad    0xc1
  419c39:	hlt    
  419c3a:	call   0x79c2ea60
  419c3f:	xchg   ebx,eax
  419c40:	lods   al,BYTE PTR ds:[esi]
  419c42:	ficomp DWORD PTR [ecx+0x61]
  419c45:	jbe    0x419c77
  419c47:	ror    DWORD PTR [ebx+0xe],cl
  419c4a:	mov    al,0x31
  419c4c:	lock loope 0x419bdb
  419c4f:	fmul   st(1),st
  419c51:	ror    ebp,1
  419c53:	jg     0x419c31
  419c55:	out    0x8,al
  419c57:	je     0x419c83
  419c59:	call   0x9d3e9d23
  419c5e:	xchg   BYTE PTR [eax+ecx*1+0x76],bh
  419c62:	lock pop esp
  419c64:	int    0xcb
  419c66:	jle    0x419cb0
  419c68:	and    DWORD PTR [ecx-0x2c7f7219],ebx
  419c6e:	in     eax,dx
  419c6f:	add    cl,bl
  419c71:	retf   0x77e4
  419c74:	and    eax,0xbb14c172
  419c79:	push   0x7b3b4b2b
  419c7e:	pushf  
  419c7f:	in     al,0xbd
  419c81:	icebp  
  419c82:	dec    esi
  419c83:	ins    BYTE PTR es:[edi],dx
  419c84:	adc    al,0xda
  419c86:	call   DWORD PTR [ebp+0x46cb398e]
  419c8c:	adc    bh,BYTE PTR [edi+0x5e]
  419c8f:	add    eax,DWORD PTR [ebx]
  419c91:	mov    eax,ds:0x893c7ad6
  419c96:	out    0x6c,al
  419c98:	adc    eax,0x660244f3
  419c9d:	inc    esi
  419c9e:	adc    esp,DWORD PTR [ebx]
  419ca0:	adc    ecx,edi
  419ca2:	xor    al,0x8c
  419ca4:	in     al,0x6c
  419ca6:	cmp    eax,0xa2aed6ff
  419cab:	xchg   DWORD PTR [ecx],esp
  419cad:	jbe    0x419c32
  419caf:	jns    0x419c34
  419cb1:	inc    ebp
  419cb2:	dec    eax
  419cb3:	lahf   
  419cb4:	outs   dx,DWORD PTR ds:[esi]
  419cb5:	sub    ch,BYTE PTR [edx+edx*1]
  419cb8:	mov    esi,DWORD PTR [eax]
  419cba:	mov    dl,0x1c
  419cbc:	sub    bl,BYTE PTR ds:0x3b4b6b49
  419cc2:	push   ss
  419cc3:	jb     0x419d14
  419cc5:	aaa    
  419cc6:	fisub  WORD PTR [eax+0x7d566a63]
  419ccc:	xchg   esi,eax
  419ccd:	add    esp,edx
  419ccf:	inc    esp
  419cd0:	in     eax,0x4
  419cd2:	in     eax,dx
  419cd3:	les    edi,FWORD PTR [eax-0x46]
  419cd6:	ds pop edi
  419cd8:	push   eax
  419cd9:	mov    esi,0x855e2500
  419cde:	stos   BYTE PTR es:[edi],al
  419cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce0:	jl     0x419d51
  419ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce3:	iret   
  419ce4:	dec    ebp
  419ce5:	jnp    0x419d23
  419ce7:	into   
  419ce8:	sar    BYTE PTR [edx],1
  419cea:	dec    ebp
  419ceb:	imul   ecx,DWORD PTR [ecx],0x7
  419cee:	xor    eax,0x8a6628c
  419cf3:	ret    
  419cf4:	dec    edi
  419cf5:	call   0xc391:0x4408c9e7
  419cfc:	fcom   DWORD PTR [eax]
  419cfe:	sbb    DWORD PTR [ebx-0x406d79cc],eax
  419d04:	pop    esi
  419d05:	push   ecx
  419d06:	mov    ?,esi
  419d08:	sbb    DWORD PTR [edx+ebp*2+0x2a84cc4e],ebp
  419d0f:	inc    esi
  419d10:	inc    BYTE PTR [edi-0x540b1a9d]
  419d16:	dec    edi
  419d17:	and    bl,BYTE PTR [edi-0x2536a093]
  419d1d:	xchg   ebp,eax
  419d1e:	mov    eax,0xa51d484a
  419d23:	cmc    
  419d24:	sbb    al,0xa3
  419d26:	push   esp
  419d27:	sub    eax,0xf255faad
  419d2c:	das    
  419d2d:	jle    0x419d95
  419d2f:	mov    eax,0xa1f80073
  419d34:	push   esi
  419d35:	cmp    al,0x27
  419d37:	jns    0x419d22
  419d39:	push   ss
  419d3a:	fld    QWORD PTR ds:0x7937b74d
  419d40:	xor    ch,bh
  419d42:	cmp    BYTE PTR [edi],cl
  419d44:	inc    edx
  419d45:	mov    al,ds:0xbfdc9a71
  419d4a:	jmp    FWORD PTR [edx+0x3]
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	push   ebx
  419d4f:	ins    DWORD PTR es:[edi],dx
  419d50:	push   ebp
  419d51:	or     bl,BYTE PTR [eax+eiz*1-0x7c]
  419d55:	xchg   esi,eax
  419d56:	ret    0x5d94
  419d59:	jo     0x419dae
  419d5b:	xchg   edi,ebp
  419d5d:	rcl    DWORD PTR fs:[ecx],1
  419d60:	(bad)  
  419d61:	stc    
  419d62:	mov    dl,0xd9
  419d64:	jb     0x419d49
  419d66:	sbb    DWORD PTR [edi+0x3936941c],0x33d8a90c
  419d70:	pop    eax
  419d71:	aaa    
  419d72:	adc    ecx,DWORD PTR [edi+0x19]
  419d75:	jbe    0x419d4c
  419d77:	push   cs
  419d78:	xor    BYTE PTR [ebx],cl
  419d7a:	(bad)  
  419d7b:	xor    eax,0xf4c5e506
  419d80:	popa   
  419d81:	dec    ebx
  419d82:	mov    bh,0xef
  419d84:	jge    0x419d37
  419d86:	mov    eax,ds:0xf9e40680
  419d8b:	imul   esi,DWORD PTR [eax-0x24aa54e5],0x71
  419d92:	sbb    DWORD PTR [eax-0x6b],esi
  419d95:	xor    dh,BYTE PTR [ebx+eax*2]
  419d98:	mov    BYTE PTR [ebp+0x514bdedd],dh
  419d9e:	imul   esi,DWORD PTR [ecx+0x75c9390e],0x59da2c58
  419da8:	sbb    BYTE PTR [edi],0xed
  419dab:	and    ah,dl
  419dad:	jmp    0xd867861
  419db2:	les    ebx,FWORD PTR [ebx+0x12]
  419db5:	jno    0x419d84
  419db7:	pop    esi
  419db8:	sbb    edx,esp
  419dba:	jo     0x419df2
  419dbc:	ja     0x419d81
  419dbe:	pop    ebp
  419dbf:	jecxz  0x419d9f
  419dc1:	jge    0x419dee
  419dc3:	inc    DWORD PTR [edi+esi*8]
  419dc6:	xchg   edx,eax
  419dc7:	xchg   bh,ch
  419dc9:	jl     0x419d8b
  419dcb:	scas   eax,DWORD PTR es:[edi]
  419dcc:	mov    BYTE PTR [ebx+0x58],dl
  419dcf:	les    eax,FWORD PTR [ecx+0x77d73e90]
  419dd5:	pop    esp
  419dd6:	out    0x67,al
  419dd8:	rcr    edx,0xb8
  419ddb:	loop   0x419dfe
  419ddd:	pop    eax
  419dde:	ds xchg ecx,eax
  419de0:	push   ecx
  419de1:	mov    dh,0x19
  419de3:	or     DWORD PTR [edx-0x28b3af96],esp
  419de9:	std    
  419dea:	mov    edx,DWORD PTR [ebp+0x6b]
  419ded:	call   0x80980c34
  419df2:	mov    cl,0x93
  419df4:	cmp    BYTE PTR [ebx-0x57],ch
  419df7:	pop    ebp
  419df8:	sbb    DWORD PTR [eax+0x6d7e766c],esp
  419dfe:	mov    ebx,0x4fc2625c
  419e03:	add    edx,edi
  419e05:	push   ebx
  419e06:	cwde   
  419e07:	dec    edx
  419e08:	add    BYTE PTR [esp+ebx*2],ah
  419e0b:	lea    esi,[edi-0x6c]
  419e0e:	jge    0x419db0
  419e10:	xlat   BYTE PTR ds:[ebx]
  419e11:	aad    0xbb
  419e13:	add    al,0xfe
  419e15:	ins    BYTE PTR es:[edi],dx
  419e16:	enter  0xaa66,0x19
  419e1a:	test   edi,edi
  419e1c:	test   DWORD PTR [eax],0x58e5d7d1
  419e22:	jmp    0x2120:0x1d8ef6bb
  419e29:	retf   
  419e2a:	adc    esp,ebp
  419e2c:	push   cs
  419e2d:	dec    edx
  419e2e:	adc    DWORD PTR [ebx+0x79d795a8],edx
  419e34:	out    dx,al
  419e35:	test   BYTE PTR [ecx],dh
  419e37:	adc    edx,edx
  419e39:	loope  0x419eb1
  419e3b:	push   edx
  419e3c:	xchg   esp,eax
  419e3d:	out    dx,al
  419e3e:	mov    dl,0xbb
  419e40:	adc    ebx,esp
  419e42:	les    esi,FWORD PTR [ebp+0x6b4e9e58]
  419e48:	add    al,bl
  419e4a:	hlt    
  419e4b:	popa   
  419e4c:	enter  0x64de,0x21
  419e50:	retf   0x351b
  419e53:	nop
  419e54:	inc    ecx
  419e55:	jmp    0x6ce0:0x467398ff
  419e5c:	inc    esi
  419e5d:	(bad)  
  419e5e:	loop   0x419e8e
  419e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e61:	pusha  
  419e62:	pop    edx
  419e63:	mov    ebx,0x34715a67
  419e68:	imul   edi,DWORD PTR [edx-0x50925028],0xffffff88
  419e6f:	rol    BYTE PTR [esi+edi*4],1
  419e72:	gs mov al,0x10
  419e75:	push   edi
  419e76:	and    edx,DWORD PTR [edx+0x31]
  419e79:	daa    
  419e7a:	push   edx
  419e7b:	add    al,BYTE PTR [ebx+0xc]
  419e7e:	sti    
  419e7f:	jp     0x419e24
  419e81:	dec    esi
  419e82:	adc    BYTE PTR [ecx],bl
  419e84:	rcr    BYTE PTR [edi-0x26],1
  419e87:	lods   al,BYTE PTR ds:[esi]
  419e88:	jmp    0x1af5:0xdbd7288c
  419e8f:	loop   0x419eb4
  419e91:	cs pop ebp
  419e93:	pusha  
  419e94:	in     eax,dx
  419e95:	loopne 0x419e58
  419e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e98:	ds (bad) 
  419e9a:	pusha  
  419e9b:	cmp    eax,0xd5727cf6
  419ea0:	jmp    0xed4a463c
  419ea5:	dec    esi
  419ea6:	pop    esi
  419ea7:	xchg   edi,eax
  419ea8:	cmp    dl,bl
  419eaa:	sti    
  419eab:	or     dh,bh
  419ead:	int    0x49
  419eaf:	sub    dh,BYTE PTR [ebx+0x56]
  419eb2:	repnz rol BYTE PTR [edi],1
  419eb5:	adc    BYTE PTR [ecx+0x53],ah
  419eb8:	cmp    al,ch
  419eba:	jmp    0xb23e:0x593f1f6b
  419ec1:	sar    DWORD PTR [esp+edx*4+0x45],cl
  419ec5:	xlat   BYTE PTR ds:[ebx]
  419ec6:	fst    QWORD PTR [eax+0x552f70f]
  419ecc:	or     DWORD PTR [esi-0x35],ebx
  419ecf:	loopne 0x419ed3
  419ed1:	fmul   QWORD PTR [esi]
  419ed3:	loope  0x419f12
  419ed5:	mov    esi,0xba067f25
  419eda:	fcomp  st(7)
  419edc:	jle    0x419f4f
  419ede:	ins    DWORD PTR es:[edi],dx
  419edf:	or     ecx,DWORD PTR [eax+eiz*2+0x59]
  419ee3:	fwait
  419ee4:	pop    esp
  419ee5:	(bad)  [ecx-0x1f]
  419ee8:	jno    0x419ebd
  419eea:	daa    
  419eeb:	or     eax,0x692feb91
  419ef0:	and    edi,DWORD PTR [edi+0x6b69c90c]
  419ef6:	pop    ebp
  419ef7:	pop    ss
  419ef8:	je     0x419f69
  419efa:	mov    edx,0x2a329a84
  419eff:	xor    bh,BYTE PTR [edi]
  419f01:	loope  0x419f71
  419f03:	xchg   esp,eax
  419f04:	aaa    
  419f05:	cld    
  419f06:	mov    ds:0x3ef1fcf9,al
  419f0b:	pop    edi
  419f0c:	pop    edx
  419f0d:	jno    0x419f6d
  419f0f:	test   eax,0xc9418ef
  419f14:	adc    DWORD PTR [edi*1-0x38b4873d],edx
  419f1b:	cmc    
  419f1c:	jge    0x419f0e
  419f1e:	retf   
  419f1f:	shl    eax,1
  419f21:	pop    esp
  419f22:	sbb    al,0xc4
  419f24:	adc    al,0xe
  419f26:	sti    
  419f27:	inc    edx
  419f28:	hlt    
  419f29:	ds cld 
  419f2b:	mov    bl,0xa9
  419f2d:	mov    dl,0x52
  419f2f:	mov    edx,0x5c93f19b
  419f34:	stos   DWORD PTR es:[edi],eax
  419f35:	in     al,dx
  419f36:	sub    al,0xa3
  419f38:	loope  0x419f44
  419f3a:	push   eax
  419f3b:	aas    
  419f3c:	fldenv [edi-0x7bf48a03]
  419f42:	mov    al,ds:0x29924e98
  419f47:	add    al,0xbb
  419f49:	mov    esi,0x604b7e64
  419f4e:	ins    BYTE PTR es:[edi],dx
  419f4f:	fidivr DWORD PTR [esi+0x1]
  419f52:	lods   al,BYTE PTR ds:[esi]
  419f53:	jno    0x419f4f
  419f55:	or     BYTE PTR [ecx+ebx*2-0x30a2af88],0xcc
  419f5d:	arpl   di,di
  419f5f:	cdq    
  419f60:	retf   0x8987
  419f63:	lock push edi
  419f65:	dec    ebx
  419f66:	push   esi
  419f67:	add    eax,0x875fc3d3
  419f6c:	mov    ecx,0xfbe1a0a6
  419f71:	mov    al,0xf
  419f73:	push   edx
  419f74:	cs out 0x51,al
  419f77:	mov    esi,0x5b6d981f
  419f7c:	cld    
  419f7d:	xor    cl,BYTE PTR [ecx]
  419f7f:	jg     0x419fed
  419f81:	psubusw mm3,QWORD PTR [esi-0x4b]
  419f85:	mov    al,0x0
  419f87:	add    DWORD PTR [esi],0xffffff96
  419f8a:	inc    esp
  419f8b:	inc    al
  419f8d:	xchg   DWORD PTR [eax+0x5c],edx
  419f90:	push   cs
  419f91:	push   ds
  419f92:	jecxz  0x419fb4
  419f94:	ret    
  419f95:	ret    0x8202
  419f98:	mov    bl,0x59
  419f9a:	sub    esi,DWORD PTR [ecx-0x776972ff]
  419fa0:	and    al,0x34
  419fa2:	fwait
  419fa3:	(bad)  
  419fa4:	sti    
  419fa5:	and    ebx,DWORD PTR [ebp+0x6d6e93e0]
  419fab:	iret   
  419fac:	jmp    0x419f67
  419fae:	fs or  ch,bl
  419fb1:	hlt    
  419fb2:	enter  0xeeb9,0xb7
  419fb6:	or     DWORD PTR [ecx+0x28],esp
  419fb9:	dec    ebx
  419fba:	int    0x47
  419fbc:	cdq    
  419fbd:	fbld   TBYTE PTR [ebx-0x67]
  419fc0:	fiadd  WORD PTR ds:0xc858564
  419fc6:	pop    esp
  419fc7:	outs   dx,DWORD PTR ds:[esi]
  419fc8:	mov    al,BYTE PTR [edx+0x643b767f]
  419fce:	div    BYTE PTR [esi]
  419fd0:	jno    0x41a044
  419fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd3:	test   DWORD PTR [ebp+0x71],esp
  419fd6:	jbe    0x41a021
  419fd8:	adc    BYTE PTR [edi],ah
  419fda:	jne    0x419f8f
  419fdc:	lock icebp 
  419fde:	add    eax,0xf77e6f55
  419fe3:	add    DWORD PTR [ebx],ecx
  419fe5:	out    0xc3,al
  419fe7:	pusha  
  419fe8:	jp     0x41a010
  419fea:	xor    al,0x3
  419fec:	cs xor eax,0x7a66f0a5
  419ff2:	popa   
  419ff3:	cmp    al,0x5d
  419ff5:	shr    BYTE PTR [eax+0x68],0x1
  419ff9:	fist   DWORD PTR [edx-0x1d]
  419ffc:	add    ecx,0xf
  419fff:	inc    eax
  41a000:	dec    ebp
  41a001:	dec    eax
  41a002:	cwde   
  41a003:	les    esi,FWORD PTR [ebp-0x241142eb]
  41a009:	mov    esi,0xb05f9372
  41a00e:	add    BYTE PTR [edx-0x7ccbcce5],al
  41a014:	add    dl,BYTE PTR [esi-0x5e]
  41a017:	arpl   WORD PTR ds:0x945d34d,ax
  41a01d:	sti    
  41a01e:	add    dl,BYTE PTR [edx+0x24]
  41a021:	mov    esi,0xf6f1fc22
  41a026:	push   0xc588a35f
  41a02b:	add    eax,0x7f2c057c
  41a030:	jnp    0x41a073
  41a032:	inc    ecx
  41a033:	push   esi
  41a034:	mov    esp,0xb2fd4a8d
  41a039:	mov    cl,0x93
  41a03b:	add    bl,dl
  41a03d:	and    ebx,DWORD PTR [eax+0x364175db]
  41a043:	int3   
  41a044:	add    al,0x31
  41a046:	test   eax,0x2542943a
  41a04b:	popa   
  41a04c:	(bad)  
  41a04e:	or     esp,DWORD PTR [ebx+ecx*1-0x2d]
  41a052:	sub    esp,0x3ac410bb
  41a058:	cmp    DWORD PTR [esi-0x5b],esi
  41a05b:	sbb    BYTE PTR [ecx+0x7],0xcb
  41a05f:	or     eax,0x2a42e8d1
  41a064:	adc    DWORD PTR [esi-0x16],edx
  41a067:	cmp    bl,0x94
  41a06a:	xlat   BYTE PTR ds:[ebx]
  41a06b:	pop    ebx
  41a06c:	stos   BYTE PTR es:[edi],al
  41a06d:	push   edx
  41a06e:	iret   
  41a06f:	sub    dh,BYTE PTR [edx-0x746786e4]
  41a075:	adc    ebp,DWORD PTR [ebx+esi*4]
  41a078:	retf   0x2d1b
  41a07b:	ficomp WORD PTR [esi+0x31]
  41a07e:	ss push 0xce345e10
  41a084:	enter  0x1b3c,0x23
  41a088:	and    dl,BYTE PTR cs:[ebp-0x7d]
  41a08c:	dec    ecx
  41a08d:	and    eax,0x1726301e
  41a092:	rcr    DWORD PTR [edx+edi*1-0x23076a87],1
  41a099:	push   ds
  41a09a:	ja     0x41a020
  41a09c:	pop    ebx
  41a09d:	arpl   WORD PTR [ebx-0x3a],di
  41a0a0:	ins    BYTE PTR es:[edi],dx
  41a0a1:	(bad)  
  41a0a2:	push   ds
  41a0a3:	sbb    al,0x9c
  41a0a5:	sbb    al,0xcd
  41a0a7:	jmp    0x372a:0x7a0c8e90
  41a0ae:	sar    BYTE PTR [eax-0x68],0x7d
  41a0b2:	data16 je 0x41a09e
  41a0b5:	add    al,0xdd
  41a0b7:	arpl   WORD PTR [eax+0x6a9c08fd],bp
  41a0bd:	sbb    al,0x4d
  41a0bf:	push   ecx
  41a0c0:	adc    DWORD PTR [edi-0x2acf8b17],edi
  41a0c6:	iret   
  41a0c7:	les    esp,FWORD PTR [ecx-0x51775d93]
  41a0cd:	shl    DWORD PTR [eax+eiz*2],1
  41a0d0:	fist   DWORD PTR [ebx+edx*8]
  41a0d3:	shr    DWORD PTR [edi],1
  41a0d5:	pop    ebp
  41a0d6:	and    DWORD PTR [esi],edi
  41a0d8:	shr    DWORD PTR [ecx+0x2c320f6f],1
  41a0de:	sub    BYTE PTR [esp+eiz*2-0x40],ah
  41a0e2:	xor    ch,BYTE PTR [ecx+0x405a3e1d]
  41a0e8:	pop    esp
  41a0e9:	test   eax,0x1303a2a5
  41a0ee:	push   edx
  41a0ef:	lods   eax,DWORD PTR ds:[esi]
  41a0f0:	jg     0x41a085
  41a0f2:	fnstsw WORD PTR [ebp-0x48]
  41a0f5:	push   eax
  41a0f6:	pusha  
  41a0f7:	inc    ebx
  41a0f8:	aad    0xbe
  41a0fa:	or     DWORD PTR [esp+ecx*8],0xffffff83
  41a0fe:	imul   eax,DWORD PTR cs:[eax+edx*4-0x60ec8535],0x414ad94a
  41a10a:	and    edx,DWORD PTR ss:[ebp-0x35]
  41a10e:	cdq    
  41a10f:	pop    esi
  41a110:	mov    al,0xc3
  41a112:	into   
  41a113:	xor    eax,0xec6879c5
  41a118:	jl     0x41a163
  41a11a:	popa   
  41a11b:	int    0x4e
  41a11d:	lahf   
  41a11e:	int3   
  41a11f:	fcomip st,st(0)
  41a121:	jmp    DWORD PTR [ebx-0x18]
  41a124:	sub    eax,edi
  41a126:	repz sbb cl,BYTE PTR [ebp-0x1c]
  41a12a:	mov    edi,0x986a623c
  41a12f:	sub    BYTE PTR [edx],bh
  41a131:	sub    al,0x9f
  41a133:	push   es
  41a134:	sub    cl,BYTE PTR [ebx]
  41a136:	xchg   ebp,eax
  41a137:	call   0x9ad54244
  41a13c:	(bad)  
  41a13d:	mov    edi,0xbb245a04
  41a142:	or     al,0x2f
  41a144:	mov    ebx,0x39d1ee61
  41a149:	cld    
  41a14a:	addr16 into 
  41a14c:	pusha  
  41a14d:	push   ebp
  41a14e:	sub    eax,0xf20297ae
  41a153:	sub    cl,ch
  41a155:	mov    al,ds:0x30c3957
  41a15a:	xchg   ecx,eax
  41a15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a15c:	sbb    al,0x42
  41a15e:	add    BYTE PTR [edi-0x508af84b],al
  41a164:	loope  0x41a13f
  41a166:	cld    
  41a167:	lods   eax,DWORD PTR ds:[esi]
  41a168:	test   DWORD PTR [edi-0x21b40735],ebx
  41a16e:	push   bp
  41a170:	call   0xcbab20fa
  41a175:	repnz aas 
  41a177:	push   0xffffff9e
  41a179:	dec    ebp
  41a17a:	and    esi,esi
  41a17c:	and    BYTE PTR [ebx+0x741084f8],0x69
  41a183:	fnstenv [ecx+edi*2-0x93dd80]
  41a18a:	sub    eax,0x9ac3a3f5
  41a18f:	hlt    
  41a190:	or     ah,BYTE PTR [ecx-0x20176e54]
  41a196:	xchg   eax,esi
  41a198:	pop    edx
  41a199:	add    cl,BYTE PTR [edi-0x757fe399]
  41a19f:	ins    BYTE PTR es:[edi],dx
  41a1a0:	imul   edx,DWORD PTR [eax-0x77],0x1d814eaf
  41a1a7:	pop    ecx
  41a1a8:	xor    bh,dh
  41a1aa:	pop    ecx
  41a1ab:	push   ss
  41a1ac:	push   ebx
  41a1ad:	xor    DWORD PTR [esi+0x1460dd92],ecx
  41a1b3:	mov    bh,0x64
  41a1b5:	dec    esi
  41a1b6:	xchg   edx,eax
  41a1b7:	dec    ecx
  41a1b8:	div    DWORD PTR ds:0x12009467
  41a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1bf:	jl     0x41a226
  41a1c1:	enter  0xa199,0xef
  41a1c5:	xor    eax,0xec6c2800
  41a1ca:	(bad)  [ebx+0x3e845ab]
  41a1d0:	or     BYTE PTR [esi],bl
  41a1d2:	out    0xfe,eax
  41a1d4:	xchg   al,al
  41a1d6:	(bad)  
  41a1d7:	push   ebp
  41a1d8:	int3   
  41a1d9:	scas   eax,DWORD PTR es:[edi]
  41a1da:	rcl    BYTE PTR [ecx+0x67],1
  41a1dd:	dec    edi
  41a1de:	imul   ebp,DWORD PTR [esi],0x778b33f8
  41a1e4:	(bad)  [esi-0x27]
  41a1e7:	jno    0x41a216
  41a1e9:	add    ah,ah
  41a1eb:	out    0x8b,eax
  41a1ed:	sub    al,BYTE PTR [edi+0x74]
  41a1f0:	stos   BYTE PTR es:[edi],al
  41a1f1:	xchg   edx,eax
  41a1f2:	pop    esp
  41a1f3:	or     BYTE PTR [ebx+0x45],bh
  41a1f6:	and    dh,0x6
  41a1f9:	cmp    bl,BYTE PTR [edx]
  41a1fb:	loope  0x41a1bb
  41a1fd:	and    bh,BYTE PTR [ebp+ebp*2-0xf]
  41a201:	push   eax
  41a202:	push   ebx
  41a203:	aad    0x49
  41a205:	dec    ebp
  41a206:	(bad)  
  41a207:	cld    
  41a208:	adc    eax,DWORD PTR [edx-0x15]
  41a20b:	jecxz  0x41a24c
  41a20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a20e:	daa    
  41a20f:	and    dl,BYTE PTR [ecx]
  41a211:	xchg   ecx,eax
  41a212:	adc    al,0xbf
  41a214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a215:	test   eax,0x9b264700
  41a21a:	mov    bl,0xe7
  41a21c:	or     ch,BYTE PTR [edx-0x2c281cc5]
  41a222:	or     al,0x37
  41a224:	dec    esi
  41a225:	scas   eax,DWORD PTR es:[edi]
  41a226:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a228:	sub    ecx,0x6764bc35
  41a22e:	mov    dl,0xd
  41a230:	(bad)  
  41a231:	xchg   ecx,eax
  41a232:	(bad)  
  41a233:	ficomp DWORD PTR [edi]
  41a235:	sahf   
  41a236:	repnz dec DWORD PTR [eax+0x273e6396]
  41a23d:	mov    ds:0xe83598b0,al
  41a242:	pop    edi
  41a243:	and    ebx,DWORD PTR [ecx-0x5d]
  41a246:	rcr    BYTE PTR [ebp-0x30da77],1
  41a24c:	mov    dl,0xf5
  41a24e:	fs cmp DWORD PTR es:[ecx+0x7cc04f4a],0x230624a9
  41a25a:	mov    dl,0x16
  41a25c:	into   
  41a25d:	mov    bh,0xec
  41a25f:	xor    al,0x76
  41a261:	pop    ecx
  41a262:	push   cs
  41a263:	lods   eax,DWORD PTR ds:[esi]
  41a264:	xchg   ecx,eax
  41a265:	push   es
  41a266:	call   0x446e:0xc1a226e5
  41a26d:	sbb    ch,BYTE PTR [esi]
  41a26f:	loope  0x41a2df
  41a271:	jno    0x41a2a4
  41a273:	mov    al,cs:0x8a11fe16
  41a279:	cmp    BYTE PTR [ebx],0xdd
  41a27c:	inc    esi
  41a27d:	xchg   edi,eax
  41a27e:	in     al,dx
  41a27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a280:	xor    ebx,DWORD PTR [eax-0x63]
  41a283:	fidivr WORD PTR [eax]
  41a285:	push   ebp
  41a286:	xchg   ebp,eax
  41a287:	fsub   QWORD PTR gs:[ecx+0x55346faf]
  41a28e:	rol    DWORD PTR [ebp+0x463b2049],cl
  41a294:	retf   0x53c
  41a297:	sub    cl,BYTE PTR [ebx-0x4d]
  41a29a:	jg     0x41a25d
  41a29c:	js     0x41a2fe
  41a29e:	jl     0x41a242
  41a2a0:	xchg   edx,eax
  41a2a1:	fmulp  st(1),st
  41a2a3:	adc    BYTE PTR [esp+edx*4],dl
  41a2a6:	out    dx,eax
  41a2a7:	adc    DWORD PTR [esi],edx
  41a2a9:	pop    ds
  41a2aa:	enter  0x17e0,0x43
  41a2ae:	lahf   
  41a2af:	ret    
  41a2b0:	out    0x90,al
  41a2b2:	in     al,0x8
  41a2b4:	dec    esp
  41a2b5:	scas   al,BYTE PTR es:[edi]
  41a2b6:	sub    dl,BYTE PTR [esi]
  41a2b8:	test   BYTE PTR [ebp+0x5a6ae012],bh
  41a2be:	add    BYTE PTR [ebx+0x2d],0x86
  41a2c2:	lea    esi,[ebx-0x10acfc38]
  41a2c8:	adc    DWORD PTR [esi-0x3cfb8a80],edi
  41a2ce:	mov    DWORD PTR [ebp+0x63e0936c],edx
  41a2d4:	and    si,WORD PTR [ecx+0x229ed964]
  41a2db:	push   edx
  41a2dc:	(bad)  
  41a2dd:	mov    eax,0xdce1bfe1
  41a2e2:	inc    ecx
  41a2e3:	mov    esi,0x60467975
  41a2e8:	ja     0x41a2ef
  41a2ea:	mov    bl,0xd4
  41a2ec:	sub    eax,0x29faf413
  41a2f1:	loopne 0x41a355
  41a2f3:	add    ebx,edi
  41a2f5:	push   es
  41a2f6:	mov    esp,0xcfca10a4
  41a2fb:	push   ds
  41a2fc:	lods   al,BYTE PTR ds:[esi]
  41a2fd:	push   esp
  41a2fe:	pop    eax
  41a2ff:	xchg   DWORD PTR [ebx+esi*8+0x5eb1b9a0],esi
  41a306:	sbb    BYTE PTR [ebx],ah
  41a308:	cmp    esi,DWORD PTR [ecx-0x69]
  41a30b:	test   al,0xd6
  41a30e:	frstor [eax+0x57edae6]
  41a314:	outs   dx,DWORD PTR ds:[esi]
  41a315:	loop   0x41a2ed
  41a317:	dec    eax
  41a318:	and    ecx,DWORD PTR [ebx]
  41a31a:	retf   0xe75f
  41a31d:	push   0xc0d12030
  41a322:	scas   eax,DWORD PTR es:[edi]
  41a323:	mov    ds:0x48c39e85,al
  41a328:	push   eax
  41a329:	push   ecx
  41a32a:	gs push ds
  41a32c:	pop    ecx
  41a32d:	in     al,dx
  41a32e:	xor    al,bh
  41a330:	dec    edx
  41a331:	push   edi
  41a332:	(bad)  
  41a334:	ret    
  41a335:	popa   
  41a336:	test   eax,0xede970d9
  41a33b:	jbe    0x41a2f4
  41a33d:	jno    0x41a2c8
  41a33f:	push   ebp
  41a340:	js     0x41a2ec
  41a342:	push   ss
  41a343:	sub    DWORD PTR [edx],ebp
  41a345:	retf   
  41a346:	sub    eax,0x4321d42d
  41a34b:	jns    0x41a338
  41a34d:	repnz fnstenv [edi+0x6dcd08fd]
  41a354:	arpl   WORD PTR [edi+0x6ef62c22],bx
  41a35a:	jbe    0x41a31b
  41a35c:	leave  
  41a35d:	into   
  41a35e:	jmp    0x41a346
  41a360:	cmp    DWORD PTR [ebp-0x69ee8965],ecx
  41a366:	pushf  
  41a367:	fadd   DWORD PTR ds:0xef9c027b
  41a36d:	or     DWORD PTR [esi+esi*8],eax
  41a370:	pop    ebp
  41a371:	push   esi
  41a372:	inc    ebx
  41a373:	(bad)  
  41a374:	jmp    FWORD PTR [ebp-0x6b3b1e76]
  41a37a:	xor    al,0x91
  41a37c:	bound  ecx,QWORD PTR [ebx]
  41a37e:	retf   0x3bde
  41a381:	int3   
  41a382:	push   edx
  41a383:	inc    esi
  41a384:	jmp    0x6699:0xc0110d91
  41a38b:	add    DWORD PTR [edx+0x6381b87a],0xffffffb1
  41a392:	mov    ch,0x4e
  41a394:	dec    edi
  41a395:	mov    DWORD PTR [eax+0x5923165],esp
  41a39b:	sbb    al,BYTE PTR [ebp-0xcb90ac4]
  41a3a1:	aas    
  41a3a2:	mov    dl,0x65
  41a3a4:	mov    edx,0xe69384e6
  41a3a9:	dec    eax
  41a3aa:	dec    esi
  41a3ab:	mov    al,ds:0xdf9fd5de
  41a3b0:	jb     0x41a422
  41a3b2:	leave  
  41a3b3:	imul   BYTE PTR [edi+0x66865cbe]
  41a3b9:	in     eax,dx
  41a3ba:	mov    ebp,0x10ade71e
  41a3bf:	repnz xchg ebp,eax
  41a3c1:	out    0x4,al
  41a3c3:	retf   
  41a3c4:	mov    WORD PTR [edi+0x3],gs
  41a3c7:	or     bl,BYTE PTR [eax+ebp*2+0x1d]
  41a3cb:	adc    eax,0x6ff80334
  41a3d0:	and    esp,ebx
  41a3d2:	ret    0x951f
  41a3d5:	dec    edx
  41a3d6:	ins    DWORD PTR es:[edi],dx
  41a3d7:	stos   DWORD PTR es:[edi],eax
  41a3d8:	repz out 0x53,eax
  41a3db:	or     al,0xa4
  41a3dd:	test   BYTE PTR [edi-0x7316b19e],bl
  41a3e3:	jo     0x41a383
  41a3e5:	pop    eax
  41a3e6:	int    0x7a
  41a3e8:	shr    BYTE PTR [edi],0x10
  41a3eb:	dec    esi
  41a3ec:	ss cli 
  41a3ee:	inc    esp
  41a3ef:	pop    ebp
  41a3f0:	mov    al,0x29
  41a3f2:	test   eax,0x56fb961a
  41a3f7:	dec    edx
  41a3f8:	jae    0x41a473
  41a3fa:	test   BYTE PTR [edi+ebp*1],0x67
  41a3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ff:	and    eax,0xdac5203f
  41a404:	add    dl,BYTE PTR [edi-0x3b]
  41a407:	push   edi
  41a408:	push   ecx
  41a409:	in     eax,0xc9
  41a40b:	cmp    edi,DWORD PTR [ebx-0x36e4bd18]
  41a411:	mov    bh,0x96
  41a413:	cmp    bh,BYTE PTR [ebx+0x24]
  41a416:	mov    dl,0x33
  41a418:	jb     0x41a480
  41a41a:	mov    dh,0x16
  41a41c:	es cmc 
  41a41e:	retf   0x7fc0
  41a421:	(bad)  
  41a424:	(bad)  
  41a425:	dec    edi
  41a426:	pop    esi
  41a427:	and    eax,0xffffffc5
  41a42a:	mov    edi,0x6538d964
  41a42f:	sub    al,0x9
  41a431:	dec    eax
  41a432:	jae    0x41a45c
  41a434:	imul   esi,DWORD PTR [esi-0xd],0xffffff98
  41a438:	in     eax,0x16
  41a43a:	retf   0x24e3
  41a43d:	sbb    al,0x2e
  41a43f:	mov    ds:0x3d136fe5,eax
  41a444:	ds xchg ecx,eax
  41a446:	adc    eax,0x7701057a
  41a44b:	loopne 0x41a401
  41a44d:	std    
  41a44e:	sub    ch,BYTE PTR [ebx-0x72eb445b]
  41a454:	mov    esp,0x533082ca
  41a459:	shr    DWORD PTR [ecx+ebx*1+0x57],cl
  41a45d:	xlat   BYTE PTR ds:[ebx]
  41a45e:	sub    DWORD PTR gs:[ebp+0x32460f5d],ecx
  41a465:	aaa    
  41a466:	test   DWORD PTR [ebp+0x7d893c10],esp
  41a46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a46d:	pop    esp
  41a46e:	(bad)  
  41a46f:	cmp    al,BYTE PTR [eax+0x1c5b54d5]
  41a475:	int    0xd9
  41a477:	stos   BYTE PTR es:[edi],al
  41a478:	adc    BYTE PTR [edi],cl
  41a47a:	popa   
  41a47b:	mov    edx,DWORD PTR [eax-0x13ee77c5]
  41a481:	jmp    0x3472:0x54028299
  41a488:	popa   
  41a489:	mov    al,0xd8
  41a48b:	xchg   ebx,eax
  41a48c:	imul   eax,DWORD PTR [eax+0x2002e7b2],0x332a4566
  41a496:	pop    ecx
  41a497:	cmc    
  41a498:	cdq    
  41a499:	mov    gs,WORD PTR [ebx+0x50]
  41a49c:	rcl    cl,cl
  41a49e:	and    BYTE PTR [esi],bl
  41a4a0:	imul   edi,DWORD PTR [ebx-0x52d2cb8e],0xffffff84
  41a4a7:	dec    edi
  41a4a8:	sub    DWORD PTR [esi+0x38e7001a],eax
  41a4ae:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a4b0:	ins    DWORD PTR es:[edi],dx
  41a4b1:	dec    ebp
  41a4b2:	out    dx,eax
  41a4b3:	sbb    bh,BYTE PTR [ebp+0x36]
  41a4b6:	stos   DWORD PTR es:[edi],eax
  41a4b7:	adc    BYTE PTR [ecx+0x41cf6755],al
  41a4bd:	pop    ecx
  41a4be:	and    BYTE PTR [edi],ah
  41a4c0:	sub    BYTE PTR ds:0x3a729634,bh
  41a4c6:	int3   
  41a4c7:	sub    ecx,esp
  41a4c9:	add    ebp,0xbc9971a9
  41a4cf:	(bad)  
  41a4d0:	dec    esi
  41a4d1:	inc    ebx
  41a4d2:	mov    esi,DWORD PTR ds:0x11ab7660
  41a4d8:	jnp    0x41a529
  41a4da:	xchg   ebp,eax
  41a4db:	pinsrw mm4,eax,0x9b
  41a4df:	js     0x41a4d2
  41a4e1:	mov    ds:0x202732e,eax
  41a4e6:	leave  
  41a4e7:	dec    eax
  41a4e8:	call   0x5f8fd0bc
  41a4ed:	mov    dh,0x7a
  41a4ef:	sub    DWORD PTR [ecx-0x160137e2],edi
  41a4f5:	add    ebx,DWORD PTR [eax]
  41a4f7:	test   al,0xe0
  41a4f9:	mov    eax,ds:0xb64254fe
  41a4fe:	fist   DWORD PTR [edx]
  41a500:	dec    eax
  41a501:	inc    edi
  41a502:	mov    DWORD PTR ds:0x29cdd64b,ecx
  41a508:	xchg   DWORD PTR [ebp-0x2819fce0],ecx
  41a50e:	ror    BYTE PTR ds:[eax],cl
  41a511:	adc    eax,0xcb165303
  41a516:	mov    edi,0xec3e4cb6
  41a51b:	xor    eax,0x72931883
  41a520:	xchg   esi,esi
  41a522:	mov    ebp,0x32c3b28f
  41a527:	sbb    eax,ebp
  41a529:	mov    ch,0xd
  41a52b:	pop    ebp
  41a52c:	nop
  41a52d:	scas   al,BYTE PTR es:[edi]
  41a52e:	int    0x5d
  41a530:	sbb    BYTE PTR [esi+0x43],bh
  41a533:	sub    DWORD PTR [eax],eax
  41a535:	pop    ebx
  41a536:	and    eax,0x40a16ff
  41a53b:	inc    ebx
  41a53c:	pusha  
  41a53d:	xor    al,0xc2
  41a53f:	ja     0x41a572
  41a541:	jno    0x41a4e7
  41a543:	out    dx,eax
  41a544:	icebp  
  41a545:	pop    edx
  41a546:	push   ebp
  41a547:	cmp    BYTE PTR [eax+0x267c9162],dh
  41a54d:	mov    bh,0xab
  41a54f:	jno    0x3b95a493
  41a555:	fisttp QWORD PTR [edi]
  41a557:	nop
  41a558:	jbe    0x41a5d5
  41a55a:	jno    0x41a500
  41a55c:	in     al,0xe6
  41a55e:	pop    ecx
  41a55f:	xchg   ebx,eax
  41a560:	inc    ebp
  41a561:	xchg   ebp,eax
  41a562:	push   es
  41a563:	pop    ss
  41a564:	mov    esp,edx
  41a566:	imul   ebp,DWORD PTR [eax+0x70f216e8],0x742cc3d5
  41a570:	mov    al,ds:0xf664c6e2
  41a575:	inc    eax
  41a576:	dec    ebx
  41a577:	xchg   esp,eax
  41a578:	addr16 pop ecx
  41a57a:	mov    bl,0x12
  41a57c:	pop    edx
  41a57d:	scas   eax,DWORD PTR es:[edi]
  41a57e:	sub    al,0xc
  41a580:	and    al,0x9e
  41a582:	mov    ah,0x9a
  41a584:	add    DWORD PTR [ecx-0x71],0xffffffb1
  41a588:	sub    eax,0xd1ed7fec
  41a58d:	mov    bl,0x33
  41a58f:	sub    DWORD PTR [ebx-0x62],ebp
  41a592:	scas   al,BYTE PTR es:[edi]
  41a593:	xor    DWORD PTR [esi+ebx*2-0x66],ebx
  41a597:	or     al,0x45
  41a599:	test   DWORD PTR [ecx],edx
  41a59b:	xchg   DWORD PTR [esp+esi*8+0x0],edi
  41a59f:	sub    eax,DWORD PTR [eax]
  41a5a1:	pop    esi
  41a5a2:	test   DWORD PTR [ebx-0x1f],esp
  41a5a5:	out    dx,al
  41a5a6:	xor    al,BYTE PTR es:[eax+ecx*1+0xc]
  41a5ab:	bound  edi,QWORD PTR [eax+0x168b7f68]
  41a5b1:	pop    es
  41a5b2:	daa    
  41a5b3:	adc    dh,BYTE PTR fs:[ebp+0x1d0a9940]
  41a5ba:	cmp    ecx,ecx
  41a5bc:	mov    ds:0x9dcdc2df,eax
  41a5c1:	push   esp
  41a5c2:	xor    al,0x61
  41a5c4:	xchg   ebp,eax
  41a5c5:	push   edx
  41a5c6:	fwait
  41a5c7:	loopne 0x41a5a7
  41a5c9:	jno    0x41a562
  41a5cb:	push   ebx
  41a5cc:	addr16 jmp 0x41a5bc
  41a5cf:	mov    ah,0xab
  41a5d1:	enter  0x6a60,0x6b
  41a5d5:	pop    es
  41a5d6:	dec    ecx
  41a5d7:	pop    edx
  41a5d8:	fisubr DWORD PTR [edi+0x3197e182]
  41a5de:	cmp    BYTE PTR [ebx],0x72
  41a5e1:	adc    DWORD PTR [edi],ecx
  41a5e3:	ret    
  41a5e4:	test   al,0xbc
  41a5e6:	shl    edi,0xe3
  41a5e9:	jl     0x41a5f8
  41a5eb:	mov    esi,0x43d9d7c9
  41a5f0:	(bad)  
  41a5f1:	ins    BYTE PTR es:[edi],dx
  41a5f2:	loope  0x41a57b
  41a5f4:	scas   eax,DWORD PTR es:[edi]
  41a5f5:	xchg   edi,eax
  41a5f6:	mov    edx,0x2d024d77
  41a5fb:	and    cl,dl
  41a5fd:	jb     0x41a5ee
  41a5ff:	ss (bad) 
  41a601:	jmp    FWORD PTR [edi-0x2c61509a]
  41a607:	cdq    
  41a608:	loop   0x41a5e7
  41a60a:	pop    DWORD PTR [eax+0x64]
  41a60d:	clc    
  41a60e:	sar    DWORD PTR [ebx-0x58],1
  41a611:	fld    TBYTE PTR [ecx]
  41a613:	mov    edi,0x9fa4a953
  41a618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a619:	mov    eax,ds:0x8af39170
  41a61e:	mov    al,ds:0xd029b30d
  41a623:	fmul   DWORD PTR [edi-0x4b]
  41a626:	and    bh,bh
  41a628:	int3   
  41a629:	xor    bh,cl
  41a62b:	dec    edx
  41a62c:	mov    BYTE PTR [esi+eiz*1+0x29ac8847],dl
  41a633:	lods   al,BYTE PTR ds:[esi]
  41a634:	jbe    0x41a63d
  41a636:	retf   
  41a637:	push   0x85cd7a85
  41a63c:	and    ebx,DWORD PTR [ebp+0x3e6964a7]
  41a642:	xor    al,0xf6
  41a644:	js     0x41a664
  41a646:	xchg   ebx,eax
  41a647:	add    eax,0xaf7bf94
  41a64c:	ret    
  41a64d:	outs   dx,DWORD PTR ds:[esi]
  41a64e:	dec    ebx
  41a64f:	sub    al,BYTE PTR [eax+0x5b]
  41a652:	or     dl,BYTE PTR [ebx]
  41a654:	dec    ecx
  41a655:	sub    eax,0x2ea8f8ff
  41a65a:	sbb    WORD PTR [ebx-0x5bc87698],di
  41a661:	mov    ecx,DWORD PTR [esi]
  41a663:	mov    dl,0x7a
  41a665:	clc    
  41a666:	and    dl,BYTE PTR [esi+ecx*4+0x5a40f4bb]
  41a66d:	push   esp
  41a66e:	adc    eax,0xbef12691
  41a673:	mov    dh,0x88
  41a675:	sbb    ebx,DWORD PTR [esi+0x21d7e2fe]
  41a67b:	inc    ebp
  41a67c:	cli    
  41a67d:	lock jne 0x41a676
  41a680:	push   edx
  41a681:	and    al,0x27
  41a683:	add    bl,cl
  41a685:	xchg   edi,eax
  41a686:	push   eax
  41a687:	ja     0x41a677
  41a689:	xor    dl,BYTE PTR [ecx+0x55f3ff27]
  41a68f:	cdq    
  41a690:	or     eax,edx
  41a692:	pop    esp
  41a693:	mov    eax,ds:0x622f9216
  41a698:	add    DWORD PTR [ecx+0x20578431],esp
  41a69e:	push   ecx
  41a69f:	dec    edi
  41a6a0:	in     al,dx
  41a6a1:	loop   0x41a6d0
  41a6a3:	xchg   edi,eax
  41a6a4:	sub    edi,ecx
  41a6a6:	mov    WORD PTR [ecx+0x1b],ss
  41a6a9:	lock pop eax
  41a6ab:	aad    0x2e
  41a6ad:	jge    0x41a6e8
  41a6af:	bound  esp,QWORD PTR [ecx-0x55f855d1]
  41a6b5:	int    0x40
  41a6b7:	mov    eax,0xe196622d
  41a6bc:	inc    ebp
  41a6bd:	ja     0x41a685
  41a6bf:	add    dh,al
  41a6c1:	dec    edi
  41a6c2:	stos   BYTE PTR es:[edi],al
  41a6c3:	dec    esp
  41a6c4:	aas    
  41a6c5:	xor    eax,0xcf0f6941
  41a6ca:	xor    al,0x8d
  41a6cc:	and    eax,0xac94c835
  41a6d1:	clc    
  41a6d2:	jnp    0x41a70b
  41a6d4:	pop    ss
  41a6d5:	add    ecx,esi
  41a6d7:	xlat   BYTE PTR ds:[ebx]
  41a6d8:	xlat   BYTE PTR ds:[ebx]
  41a6d9:	sub    al,0x1c
  41a6db:	mov    ?,WORD PTR [esi+0x30a7592a]
  41a6e1:	cs xchg ebx,eax
  41a6e3:	inc    ecx
  41a6e4:	sbb    al,0xb4
  41a6e6:	xchg   ecx,eax
  41a6e7:	push   0xffffffc4
  41a6e9:	jbe    0x41a6ae
  41a6eb:	push   ds
  41a6ec:	mov    ds:0x51eeb748,al
  41a6f1:	js     0x41a721
  41a6f3:	jno    0x41a6d3
  41a6f5:	sub    al,0xda
  41a6f7:	dec    eax
  41a6f8:	cmp    DWORD PTR [ebx+ecx*8],eax
  41a6fb:	jne    0x41a685
  41a6fd:	int    0x80
  41a6ff:	fwait
  41a700:	addr16 dec eax
  41a702:	xchg   esi,eax
  41a703:	dec    eax
  41a704:	ret    0x1939
  41a707:	shr    DWORD PTR [eax],0x18
  41a70a:	pop    esi
  41a70b:	stos   BYTE PTR es:[edi],al
  41a70c:	and    al,0x7c
  41a70e:	push   ds
  41a70f:	pop    esi
  41a710:	leave  
  41a711:	push   ebp
  41a712:	inc    esp
  41a713:	pop    ds
  41a714:	cld    
  41a715:	ror    DWORD PTR [edi-0x2d42991b],0xba
  41a71c:	jle    0x41a718
  41a71e:	es loope 0x41a6b3
  41a721:	xchg   ebp,eax
  41a722:	retf   
  41a723:	xchg   ebx,eax
  41a724:	jmp    0x9066edd5
  41a729:	inc    ebx
  41a72a:	fsubr  st,st(5)
  41a72c:	pop    ebp
  41a72d:	inc    ebx
  41a72e:	loope  0x41a6e3
  41a730:	push   ecx
  41a731:	fs mov cl,0x62
  41a734:	test   BYTE PTR [edi],bh
  41a736:	ins    BYTE PTR es:[edi],dx
  41a737:	jb     0x41a78b
  41a739:	xchg   DWORD PTR [edx-0x39],ebp
  41a73c:	push   ds
  41a73d:	xchg   ecx,eax
  41a73e:	jmp    0x41a754
  41a740:	jecxz  0x41a795
  41a742:	retf   
  41a743:	std    
  41a744:	mov    ds:0xdc64048,eax
  41a749:	jns    0x41a714
  41a74b:	mov    ds:0x192dc9d1,al
  41a750:	(bad)  
  41a753:	adc    dh,dl
  41a755:	ja     0x41a7ad
  41a757:	xchg   ebx,eax
  41a758:	aad    0x6
  41a75a:	cli    
  41a75b:	aas    
  41a75c:	push   eax
  41a75d:	push   ds
  41a75e:	or     DWORD PTR [edx],ecx
  41a760:	dec    edi
  41a761:	gs mov edi,0x44cff145
  41a767:	daa    
  41a768:	ret    
  41a769:	imul   edi,DWORD PTR [edx],0x81d7d453
  41a76f:	dec    edi
  41a770:	cmp    eax,0x7ef396be
  41a775:	loope  0x41a76a
  41a777:	adc    BYTE PTR [esp+ebx*1],al
  41a77a:	retf   
  41a77b:	pusha  
  41a77c:	shr    DWORD PTR [edx-0x382b4935],cl
  41a782:	pop    ebp
  41a783:	adc    BYTE PTR [edx],bh
  41a785:	pop    ss
  41a786:	cld    
  41a787:	xor    esi,DWORD PTR [eax+0x5c]
  41a78a:	enter  0x3e25,0x24
  41a78e:	dec    esp
  41a78f:	(bad)  
  41a790:	mov    dh,0x37
  41a792:	mov    dl,0xc
  41a794:	stos   DWORD PTR es:[edi],eax
  41a795:	push   eax
  41a796:	inc    esp
  41a797:	ja     0x41a789
  41a799:	jp     0x41a803
  41a79b:	mov    ch,0xfe
  41a79d:	add    ah,dh
  41a79f:	pop    ebx
  41a7a0:	xor    BYTE PTR [edx-0x3d59f0df],bl
  41a7a6:	scas   eax,DWORD PTR es:[edi]
  41a7a7:	pop    edx
  41a7a8:	ror    esi,0xc
  41a7ab:	cmp    eax,ecx
  41a7ad:	enter  0x8840,0x43
  41a7b1:	mov    dl,0x6
  41a7b3:	scas   al,BYTE PTR es:[edi]
  41a7b4:	mov    esi,0xed213f0d
  41a7b9:	out    0x17,eax
  41a7bb:	jo     0x41a7ec
  41a7bd:	enter  0xaff8,0xa5
  41a7c1:	xor    eax,DWORD PTR [eax-0x6f]
  41a7c4:	or     eax,0x1639930e
  41a7c9:	and    eax,0x8a36e1e9
  41a7ce:	aas    
  41a7cf:	ds mov al,0xb
  41a7d2:	nop
  41a7d3:	mov    DWORD PTR [ebx],eax
  41a7d5:	cmp    DWORD PTR [esi+ecx*4-0x7a],ecx
  41a7d9:	jl     0x41a7dd
  41a7db:	test   al,0x9
  41a7dd:	test   BYTE PTR [edx],ch
  41a7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e0:	das    
  41a7e1:	lods   al,BYTE PTR ds:[esi]
  41a7e2:	imul   eax,DWORD PTR [eax],0xf323081a
  41a7e8:	sbb    ah,BYTE PTR [ebp+0x508f45ea]
  41a7ee:	xor    DWORD PTR [eax],ecx
  41a7f0:	add    ecx,esi
  41a7f2:	push   edi
  41a7f3:	lods   eax,DWORD PTR ds:[esi]
  41a7f4:	cmp    edi,esp
  41a7f6:	jg     0x41a783
  41a7f8:	fucomip st,st(7)
  41a7fa:	adc    eax,0xbd5e06d
  41a7ff:	xchg   edx,eax
  41a800:	sbb    esi,DWORD PTR [edx]
  41a802:	xchg   esp,eax
  41a803:	sbb    ebp,eax
  41a805:	loope  0x41a861
  41a807:	jge    0x41a794
  41a809:	or     DWORD PTR [ebx-0x73],edx
  41a80c:	pusha  
  41a80d:	mov    bl,0x1b
  41a80f:	enter  0xd074,0x3b
  41a813:	pop    ebp
  41a814:	fwait
  41a815:	cmp    ah,ah
  41a817:	in     al,0xd8
  41a819:	(bad)  
  41a81a:	aam    0x63
  41a81c:	clc    
  41a81d:	pop    edx
  41a81e:	ins    BYTE PTR es:[edi],dx
  41a81f:	mov    bh,0x41
  41a821:	sbb    eax,0x5aa7167
  41a826:	add    BYTE PTR [edi],ah
  41a828:	push   0xf8edf078
  41a82d:	xor    DWORD PTR [ebp+0x2a],esp
  41a830:	call   0x82136612
  41a835:	js     0x41a834
  41a837:	shr    ah,1
  41a839:	or     esp,esp
  41a83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a83c:	out    0xe2,al
  41a83e:	shl    dh,0xa8
  41a841:	mov    BYTE PTR [edx-0x6a9dcca2],bh
  41a847:	in     eax,dx
  41a848:	xor    BYTE PTR [ecx+0x3be70020],cl
  41a84e:	push   edi
  41a84f:	sbb    ecx,0xfdefbd57
  41a855:	out    dx,eax
  41a856:	stos   BYTE PTR es:[edi],al
  41a857:	cmp    bl,BYTE PTR [esi-0x6b]
  41a85a:	xchg   esi,eax
  41a85b:	test   DWORD PTR [ecx+eax*2+0x38],esi
  41a85f:	pop    edi
  41a860:	xchg   bl,ah
  41a862:	mov    al,0x53
  41a864:	and    BYTE PTR [ecx+0x47],dh
  41a867:	cmc    
  41a868:	out    dx,eax
  41a869:	cmp    DWORD PTR [edi+0x69145b4f],ecx
  41a86f:	in     al,dx
  41a870:	and    dh,BYTE PTR [esi+0x79]
  41a873:	ins    BYTE PTR es:[edi],dx
  41a874:	pop    ds
  41a875:	mov    ds:0x5e9bf6ff,al
  41a87a:	jno    0x7ed9d06e
  41a880:	cs xchg edi,eax
  41a882:	or     DWORD PTR [eax+0x2fdc7bd4],esi
  41a888:	and    DWORD PTR [ebx+0x6bf532d5],ebp
  41a88e:	adc    al,0x7e
  41a890:	shl    DWORD PTR [esi],cl
  41a892:	mov    bh,0x8f
  41a894:	mov    dh,0x86
  41a896:	cld    
  41a897:	enter  0x8d73,0xbd
  41a89b:	stos   DWORD PTR es:[edi],eax
  41a89c:	mov    al,0x45
  41a89e:	pop    edx
  41a89f:	das    
  41a8a0:	xor    cl,BYTE PTR [esi-0x38]
  41a8a3:	mov    BYTE PTR [edi],ch
  41a8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a6:	es xchg ebp,eax
  41a8a8:	mov    eax,ds:0x6d619686
  41a8ad:	arpl   cx,ax
  41a8af:	mov    BYTE PTR [edi+0x3a],ch
  41a8b2:	inc    esp
  41a8b3:	push   0x80e00e9f
  41a8b8:	sbb    ebx,edi
  41a8ba:	or     ecx,0xffffffd7
  41a8bd:	mov    edx,0xe9e320f6
  41a8c2:	adc    BYTE PTR [esi-0x15c37f38],cl
  41a8c8:	out    dx,eax
  41a8c9:	push   edi
  41a8ca:	or     BYTE PTR [ebx-0x7e],bl
  41a8cd:	ins    DWORD PTR es:[edi],dx
  41a8ce:	ins    DWORD PTR es:[edi],dx
  41a8cf:	add    al,0x73
  41a8d1:	sub    eax,0x28fa1e73
  41a8d6:	inc    esi
  41a8d7:	es push ebx
  41a8d9:	shl    bh,1
  41a8db:	inc    esp
  41a8dc:	and    DWORD PTR [ecx+0x5],edi
  41a8df:	pop    esi
  41a8e0:	loope  0x41a91c
  41a8e2:	cmp    DWORD PTR [ebp+0x41],esp
  41a8e5:	into   
  41a8e6:	int    0x69
  41a8e8:	push   edi
  41a8e9:	repnz and bl,cl
  41a8ec:	leave  
  41a8ed:	js     0x41a8c8
  41a8ef:	and    ecx,eax
  41a8f1:	add    ah,al
  41a8f3:	inc    eax
  41a8f4:	bound  eax,QWORD PTR [esp+ebx*8]
  41a8f7:	fnstsw WORD PTR [ecx-0x56]
  41a8fa:	idiv   DWORD PTR ds:0x6298f4b2
  41a900:	(bad)  
  41a902:	or     al,0xfe
  41a904:	cs mov dl,0xa6
  41a907:	out    dx,al
  41a908:	dec    ecx
  41a909:	ret    
  41a90a:	push   0x9fdd58c9
  41a90f:	adc    DWORD PTR [eax],edi
  41a911:	adc    al,0xbd
  41a913:	call   0x4901eb50
  41a918:	mov    edi,0xfa87f280
  41a91d:	cmp    DWORD PTR ds:0xd51edf0,esi
  41a923:	sub    al,0x9c
  41a925:	add    DWORD PTR [ebx-0x4],esi
  41a928:	and    dh,BYTE PTR [eax-0x64]
  41a92b:	mov    eax,0x61f393e
  41a930:	or     ebx,edx
  41a932:	pop    ebp
  41a933:	xchg   edi,eax
  41a934:	or     bl,BYTE PTR [esi*2-0x1d0d23cf]
  41a93b:	inc    ecx
  41a93c:	sbb    DWORD PTR [ecx],edi
  41a93e:	inc    ebp
  41a93f:	push   ecx
  41a940:	mov    ch,0xee
  41a942:	out    0x2b,eax
  41a944:	call   0x2163:0xe8f2d1c2
  41a94b:	push   ebx
  41a94c:	int    0x32
  41a94e:	jae    0x41a9b2
  41a950:	cdq    
  41a951:	test   cl,ah
  41a953:	call   0x652e:0x495bb478
  41a95a:	jl     0x41a943
  41a95c:	jmp    0x101c:0xda36e0d3
  41a963:	fstp   QWORD PTR [ebx]
  41a965:	outs   dx,DWORD PTR ds:[esi]
  41a966:	sub    BYTE PTR [edi],bh
  41a968:	jno    0x41a90a
  41a96a:	push   ds
  41a96b:	hlt    
  41a96c:	leave  
  41a96d:	mov    cl,0x78
  41a96f:	or     DWORD PTR [eax-0x7e3898f3],ebx
  41a975:	dec    edi
  41a976:	mov    al,0xc0
  41a978:	mov    ds:0x89373575,al
  41a97d:	out    dx,eax
  41a97e:	test   edx,esp
  41a980:	iret   
  41a981:	jmp    0xfc31db07
  41a986:	in     eax,dx
  41a987:	inc    edi
  41a988:	pusha  
  41a989:	adc    bl,ah
  41a98b:	dec    ebx
  41a98c:	ret    0x15ed
  41a98f:	mov    esp,0x24bc1d65
  41a994:	jbe    0x41a9ab
  41a996:	sub    bl,BYTE PTR ds:0x525bc798
  41a99c:	(bad)  
  41a99d:	push   0xffffff9f
  41a99f:	jmp    0x41a938
  41a9a1:	rcr    DWORD PTR [esi],1
  41a9a3:	inc    esi
  41a9a4:	xor    cl,BYTE PTR [ecx+edi*1+0x1c]
  41a9a8:	ds into 
  41a9aa:	cmp    al,BYTE PTR [ebx+ebp*2-0x22]
  41a9ae:	pop    ss
  41a9af:	fmul   DWORD PTR [ebx]
  41a9b1:	(bad)  
  41a9b3:	ja     0x41a9e3
  41a9b5:	cmp    bl,BYTE PTR [edi+0x79d57700]
  41a9bb:	ja     0x41a9f9
  41a9bd:	jl     0x41aa3b
  41a9bf:	fidivr WORD PTR [ebx]
  41a9c1:	mov    edi,cs
  41a9c3:	xor    DWORD PTR [edi],edx
  41a9c5:	mov    esi,0x10c117ba
  41a9ca:	jge    0x41aa44
  41a9cc:	inc    ebx
  41a9cd:	mov    ebx,0x7eb2fae9
  41a9d2:	test   ch,bh
  41a9d4:	cmc    
  41a9d5:	test   bl,bl
  41a9d7:	jbe    0x41a9fd
  41a9d9:	mov    bl,0x91
  41a9db:	jns    0x41aa43
  41a9dd:	shl    DWORD PTR [eax],1
  41a9df:	nop
  41a9e0:	sbb    eax,0x2b0b9193
  41a9e5:	rcl    BYTE PTR [ecx*8+0x4d52bbdb],0x5a
  41a9ed:	cwde   
  41a9ee:	xor    edx,DWORD PTR [ecx]
  41a9f0:	retf   0xbf37
  41a9f3:	mov    edx,0x77c5aa15
  41a9f8:	pushf  
  41a9f9:	(bad)  
  41a9fa:	mov    eax,ds:0xa100886e
  41a9ff:	jno    0x41a98b
  41aa01:	adc    cl,bh
  41aa03:	mov    ebp,0xad18a00a
  41aa08:	popa   
  41aa09:	mov    ah,0x6
  41aa0b:	icebp  
  41aa0c:	mov    esp,cs
  41aa0e:	ficomp DWORD PTR [ebx+0x4b1975f7]
  41aa14:	and    eax,0xd483725e
  41aa19:	stos   BYTE PTR es:[edi],al
  41aa1a:	inc    ecx
  41aa1b:	inc    eax
  41aa1c:	fmul   DWORD PTR [edx]
  41aa1e:	int3   
  41aa1f:	out    dx,al
  41aa20:	int    0xeb
  41aa22:	cs jbe 0x41a9b8
  41aa25:	ficom  DWORD PTR [edi+0x2f877d82]
  41aa2b:	adc    DWORD PTR [ebp+eiz*2-0x7b],eax
  41aa2f:	pushf  
  41aa30:	(bad)  
  41aa31:	call   0xdd33:0x506ebb9f
  41aa38:	jmp    0x41aa48
  41aa3a:	mov    edi,DWORD PTR [ecx-0x54454174]
  41aa40:	jg     0x41a9d7
  41aa42:	cli    
  41aa43:	jecxz  0x41aaaa
  41aa45:	xor    DWORD PTR [edi+0x3c],ebp
  41aa48:	popa   
  41aa49:	fnstenv [eax+0x4413f572]
  41aa4f:	jg     0x41aa20
  41aa51:	or     ch,bh
  41aa53:	mov    DWORD PTR [edi+0x54179f9e],ebx
  41aa59:	jp     0x41aa04
  41aa5b:	mov    eax,ds:0xd81ee2d0
  41aa60:	cmc    
  41aa61:	fs rcr BYTE PTR fs:[ecx+ebp*4-0x5cd790cb],cl
  41aa6a:	inc    dh
  41aa6c:	cli    
  41aa6d:	inc    ebx
  41aa6e:	test   al,0x57
  41aa70:	ja     0x41aa10
  41aa72:	out    0xf6,eax
  41aa74:	mov    fs,WORD PTR [edx]
  41aa76:	aam    0xb1
  41aa78:	and    edx,esi
  41aa7a:	fwait
  41aa7b:	in     al,dx
  41aa7c:	jl     0x41aa00
  41aa7e:	cmp    eax,DWORD PTR [ecx-0x1f0bb7aa]
  41aa84:	adc    cl,BYTE PTR [ebp-0xb0357c2]
  41aa8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa8b:	arpl   si,ax
  41aa8d:	arpl   WORD PTR [edi+0x1e],cx
  41aa90:	idiv   BYTE PTR [esi]
  41aa92:	out    0x66,al
  41aa94:	loope  0x41ab0a
  41aa96:	(bad)  
  41aa97:	in     eax,dx
  41aa98:	test   eax,0x414483e9
  41aa9d:	daa    
  41aa9e:	sbb    cl,BYTE PTR ds:0x25df8f10
  41aaa4:	mov    esi,0xe9bf685a
  41aaa9:	test   BYTE PTR [ecx-0x2006e332],bl
  41aaaf:	ret    0x21ad
  41aab2:	and    eax,0xce2183e0
  41aab7:	cdq    
  41aab8:	shr    DWORD PTR [edi-0x13f00221],0xfe
  41aabf:	cmc    
  41aac0:	pop    ebx
  41aac1:	cmp    DWORD PTR [esi+0x3c112ae4],eax
  41aac7:	mov    al,ds:0x1ba27b59
  41aacc:	fist   DWORD PTR [esp+eiz*8-0x3729b415]
  41aad3:	adc    bl,ah
  41aad5:	dec    esi
  41aad6:	add    al,0xf2
  41aad8:	inc    edi
  41aad9:	mov    dh,bl
  41aadb:	call   0xe99a567d
  41aae0:	mov    esp,0x579221
  41aae5:	jmp    0x6210:0x283ac192
  41aaec:	mov    ch,0x39
  41aaee:	and    DWORD PTR [ebx-0x61034700],ebp
  41aaf4:	cmp    BYTE PTR [esi],ah
  41aaf6:	xor    DWORD PTR [ecx-0x5d],ecx
  41aaf9:	jns    0x41ab6e
  41aafb:	mov    ds:0x170ddb87,eax
  41ab00:	fiadd  WORD PTR [ebx-0x34]
  41ab03:	or     al,0xdf
  41ab05:	jmp    0x7f31687b
  41ab0a:	push   cs
  41ab0b:	pop    eax
  41ab0c:	idiv   BYTE PTR [edx+0x7545a9d1]
  41ab12:	(bad)  
  41ab13:	xchg   edx,eax
  41ab14:	xchg   ecx,eax
  41ab15:	dec    esi
  41ab16:	leave  
  41ab17:	test   al,0xec
  41ab19:	pop    ss
  41ab1a:	(bad)  
  41ab1b:	pop    ss
  41ab1c:	rcl    DWORD PTR [esi],1
  41ab1e:	jg     0x41ab49
  41ab20:	push   edx
  41ab21:	je     0x41aaf8
  41ab23:	cmp    DWORD PTR [eax-0xee00112],esi
  41ab29:	loop   0x41aad1
  41ab2b:	enter  0x6b00,0xa9
  41ab2f:	inc    ebx
  41ab30:	and    al,0x63
  41ab32:	call   0x4ecc1dd1
  41ab37:	or     ecx,DWORD PTR [esi]
  41ab39:	xchg   ebp,eax
  41ab3a:	xchg   esi,eax
  41ab3b:	fidiv  DWORD PTR [edx+ebp*4-0x4acf1741]
  41ab42:	add    esp,DWORD PTR [edi]
  41ab44:	sub    eax,0x1cc710de
  41ab49:	ja     0x41abba
  41ab4b:	je     0x41aaf5
  41ab4d:	dec    esi
  41ab4e:	adc    eax,0x6438bc3c
  41ab53:	inc    esp
  41ab54:	adc    eax,0x321c3b7b
  41ab59:	push   0x23
  41ab5b:	mov    al,ds:0xe48565aa
  41ab60:	sbb    cl,BYTE PTR [esi-0x29]
  41ab63:	xor    BYTE PTR [edx+ebx*1+0x7f9b7784],al
  41ab6a:	stc    
  41ab6b:	outs   dx,BYTE PTR ds:[esi]
  41ab6c:	jb     0x41ab24
  41ab6e:	or     ebx,ebp
  41ab70:	scas   eax,DWORD PTR es:[edi]
  41ab71:	mov    ecx,0xe0f2f382
  41ab76:	and    DWORD PTR [edi-0xe4f229d],ebp
  41ab7c:	lock ins BYTE PTR es:[edi],dx
  41ab7e:	(bad)  
  41ab7f:	sub    DWORD PTR [edx+0x3c66c978],ebp
  41ab85:	mov    WORD PTR [edi],?
  41ab87:	jbe    0x41ab17
  41ab89:	push   esi
  41ab8a:	std    
  41ab8b:	outs   dx,DWORD PTR ds:[esi]
  41ab8c:	jns    0x41abf8
  41ab8e:	iret   
  41ab8f:	fdivr  QWORD PTR [eax-0xc]
  41ab92:	sbb    edx,ebx
  41ab94:	xchg   BYTE PTR [ecx+0x633d1c3a],dl
  41ab9a:	popa   
  41ab9b:	shr    BYTE PTR [ebx+0x12],cl
  41ab9e:	dec    eax
  41ab9f:	push   esp
  41aba0:	frstor [edi-0x5b0b0b00]
  41aba6:	jmp    FWORD PTR [ebp-0x6d73a687]
  41abac:	ins    BYTE PTR es:[edi],dx
  41abad:	mov    al,ds:0x7daae4d5
  41abb2:	pop    esp
  41abb3:	and    BYTE PTR [edx],dh
  41abb5:	inc    edi
  41abb6:	call   0xc99a0127
  41abbb:	shr    BYTE PTR [edi],1
  41abbd:	enter  0xb5dd,0xad
  41abc1:	pop    esi
  41abc2:	sub    edx,DWORD PTR [ebx]
  41abc4:	out    dx,al
  41abc5:	add    eax,0xdd1509d6
  41abca:	jae    0x41ac22
  41abcc:	sub    eax,0x849e7aab
  41abd1:	ss xchg ecx,eax
  41abd3:	retf   0xc4ab
  41abd6:	inc    esi
  41abd7:	xchg   ebp,eax
  41abd8:	mov    ah,0xe3
  41abda:	xor    al,0x3a
  41abdc:	cmp    DWORD PTR [ecx],esi
  41abde:	jne    0x41ac24
  41abe0:	inc    ebp
  41abe1:	lods   al,BYTE PTR ss:[esi]
  41abe3:	jecxz  0x41abf5
  41abe5:	ret    0x4b2c
  41abe8:	jge    0x41ac54
  41abea:	int3   
  41abeb:	call   0xe7bc:0x876f71b0
  41abf2:	retf   0x313c
  41abf5:	ja     0x41ac68
  41abf7:	dec    ecx
  41abf8:	dec    eax
  41abf9:	cld    
  41abfa:	out    dx,al
  41abfb:	push   esp
  41abfc:	out    dx,al
  41abfd:	ucomiss xmm3,DWORD PTR [eax+0x44c6697a]
  41ac04:	sti    
  41ac05:	mov    eax,0x54649e4c
  41ac0a:	inc    esp
  41ac0b:	push   edi
  41ac0c:	rep lods al,BYTE PTR ds:[esi]
  41ac0e:	outs   dx,BYTE PTR ds:[esi]
  41ac0f:	(bad)  
  41ac10:	cmp    DWORD PTR [ebx+0x48a68c3d],ebp
  41ac16:	mov    esi,DWORD PTR [edx-0x2c]
  41ac19:	jg     0x41ac74
  41ac1b:	test   DWORD PTR [ebp-0x54aea18b],edi
  41ac21:	push   ds
  41ac22:	int    0x6a
  41ac24:	scas   eax,DWORD PTR es:[edi]
  41ac25:	imul   esp,DWORD PTR [esi],0xffffffe3
  41ac28:	dec    esp
  41ac29:	pop    esp
  41ac2a:	jecxz  0x41ac99
  41ac2c:	out    0x46,eax
  41ac2e:	push   ss
  41ac2f:	fnstenv [edx-0x578fcd88]
  41ac35:	adc    BYTE PTR [esi+0x5f],bl
  41ac38:	and    eax,0x2db6b0ec
  41ac3d:	add    edx,DWORD PTR [eax]
  41ac3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac40:	push   eax
  41ac41:	rcr    BYTE PTR [edx],0x65
  41ac44:	nop
  41ac45:	pusha  
  41ac46:	pop    ecx
  41ac47:	fcmovbe st,st(3)
  41ac49:	or     eax,0xda122f04
  41ac4e:	out    dx,eax
  41ac4f:	and    bh,dl
  41ac51:	mov    ds:0xd65fc392,eax
  41ac56:	lahf   
  41ac57:	in     al,0xca
  41ac59:	sbb    dh,BYTE PTR [edi+esi*8-0x41]
  41ac5d:	sbb    BYTE PTR [esi-0x37887987],bh
  41ac63:	adc    DWORD PTR [edx+edi*2],ecx
  41ac66:	lahf   
  41ac67:	call   0x6b60c705
  41ac6c:	int3   
  41ac6d:	xor    eax,DWORD PTR [edi+0x2ed01cdf]
  41ac73:	mul    ecx
  41ac75:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41ac77:	and    ch,ch
  41ac79:	div    BYTE PTR [ebx]
  41ac7b:	pop    edx
  41ac7c:	ret    
  41ac7d:	pop    edi
  41ac7e:	arpl   di,ax
  41ac80:	mov    edi,0x18eec38
  41ac85:	popf   
  41ac86:	pop    es
  41ac87:	inc    eax
  41ac88:	add    bh,cl
  41ac8a:	sbb    eax,0xffc14318
  41ac8f:	shr    bl,1
  41ac91:	dec    ecx
  41ac92:	fcom   DWORD PTR [eax+0x6e]
  41ac95:	xchg   ecx,eax
  41ac96:	add    BYTE PTR [esi+0x5e],dl
  41ac99:	and    DWORD PTR [ebp-0x263839ae],esi
  41ac9f:	sbb    ch,BYTE PTR [edx+0x1dce833e]
  41aca5:	dec    esp
  41aca6:	adc    DWORD PTR [edx-0x6e12b0bf],edx
  41acac:	int    0x6
  41acae:	sti    
  41acaf:	inc    ebx
  41acb0:	jmp    0xf9a5c58b
  41acb5:	adc    ebp,DWORD PTR [ecx+ebx*4]
  41acb8:	mov    BYTE PTR [edx-0x26],bl
  41acbb:	repz shl DWORD PTR [ecx-0x60f3bc90],cl
  41acc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acc4:	jg     0x41ad28
  41acc6:	push   edi
  41acc7:	(bad)  
  41acc8:	pop    esp
  41acc9:	push   0xffffffe3
  41accb:	sub    BYTE PTR [ecx+0x53e25dd7],al
  41acd1:	ja     0x41acd0
  41acd3:	std    
  41acd4:	test   BYTE PTR [edi+0x7c],ch
  41acd7:	jmp    0x41ac73
  41acd9:	repnz add eax,0x3ce34a4a
  41acdf:	loopne 0x41ace8
  41ace1:	adc    al,0x6c
  41ace3:	ds je  0x41ac8e
  41ace6:	daa    
  41ace7:	cmp    eax,0x4a9dfbdd
  41acec:	repnz or bh,BYTE PTR [edi]
  41acef:	iret   
  41acf0:	mov    ch,0x33
  41acf2:	pop    edx
  41acf3:	and    dh,BYTE PTR [ebx-0x490d5e9a]
  41acf9:	loope  0x41acec
  41acfb:	ins    DWORD PTR es:[edi],dx
  41acfc:	and    al,0x21
  41acfe:	std    
  41acff:	sti    
  41ad00:	imul   esi,DWORD PTR [ecx-0x615ed671],0xffffffa0
  41ad07:	jno    0x41ac9b
  41ad09:	push   edx
  41ad0a:	sub    eax,0x5b748c5d
  41ad0f:	call   0x77d3c0dd
  41ad14:	lea    edi,[esi+ebp*1+0x36]
  41ad18:	xor    DWORD PTR [ebx+0x17],eax
  41ad1b:	lahf   
  41ad1c:	xchg   BYTE PTR [ebp-0x1a],dl
  41ad1f:	loop   0x41ad28
  41ad21:	xchg   ecx,eax
  41ad22:	rcl    DWORD PTR [esi-0x75],0x4
  41ad26:	ret    
  41ad27:	xchg   ecx,eax
  41ad28:	inc    edx
  41ad29:	call   0x2777:0x88e38a06
  41ad30:	loopne 0x41ad77
  41ad32:	or     DWORD PTR [ebp+0x4e],0xffffff85
  41ad36:	jge    0x41acc7
  41ad38:	(bad)  
  41ad39:	ins    DWORD PTR es:[edi],dx
  41ad3a:	shl    BYTE PTR [esi+ebp*2-0x54],0x5
  41ad3f:	jns    0x41ad9d
  41ad41:	add    bh,ah
  41ad43:	adc    BYTE PTR [ecx-0x55],dh
  41ad46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad47:	add    BYTE PTR [ebp-0x1df6e472],bh
  41ad4d:	loope  0x41ad74
  41ad4f:	pushf  
  41ad50:	dec    edx
  41ad51:	nop
  41ad52:	cmp    eax,0x2a6ae7f6
  41ad57:	lea    edi,[edi]
  41ad59:	into   
  41ad5a:	and    BYTE PTR [edx-0x53d185ee],cl
  41ad60:	xchg   DWORD PTR [ecx],edx
  41ad62:	int    0x3a
  41ad64:	shl    DWORD PTR [eax-0x32f150a9],cl
  41ad6a:	mov    ?,WORD PTR [esi-0x6275eccc]
  41ad70:	scas   eax,DWORD PTR es:[edi]
  41ad71:	sub    al,0xb2
  41ad73:	push   0xfffffffb
  41ad75:	sahf   
  41ad76:	xlat   BYTE PTR ds:[ebx]
  41ad77:	sub    bh,BYTE PTR [esi-0x3876e616]
  41ad7d:	xchg   ecx,eax
  41ad7e:	je     0x41ad97
  41ad80:	xchg   ebx,eax
  41ad81:	adc    al,0x72
  41ad83:	pop    ecx
  41ad84:	fstp   TBYTE PTR [edx+0x6114bb1d]
  41ad8a:	pop    ss
  41ad8b:	je     0x41ad88
  41ad8d:	sbb    DWORD PTR [edi+0x652e8ec5],edi
  41ad93:	jle    0x41adaf
  41ad95:	daa    
  41ad96:	(bad)  
  41ad97:	shr    BYTE PTR [eax-0x51],1
  41ad9a:	repz in eax,dx
  41ad9c:	cmp    eax,0xf6eea6dd
  41ada1:	loopne 0x41ad4c
  41ada3:	fild   QWORD PTR [eax+0x16f09d33]
  41ada9:	mov    al,0x5b
  41adab:	addr16 rdmsr 
  41adae:	xchg   esp,eax
  41adaf:	inc    ebx
  41adb0:	shl    eax,0x55
  41adb3:	push   es
  41adb4:	mov    BYTE PTR [eax],bh
  41adb6:	dec    eax
  41adb7:	dec    eax
  41adb8:	cmp    al,0x2d
  41adba:	and    dl,0x5b
  41adbd:	cmp    eax,0x3e0b559a
  41adc2:	pop    edi
  41adc3:	iret   
  41adc4:	sub    eax,0x8fd612a5
  41adc9:	test   eax,0x7873931c
  41adce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adcf:	in     al,0xab
  41add1:	dec    esp
  41add2:	dec    ecx
  41add3:	xchg   DWORD PTR [ebp+0x46208a98],ebx
  41add9:	inc    ebx
  41adda:	clc    
  41addb:	enter  0x7bbd,0xa3
  41addf:	sub    esi,esp
  41ade1:	outs   dx,DWORD PTR ds:[esi]
  41ade2:	mov    dh,0x98
  41ade4:	int    0x63
  41ade6:	addr16 ret 
  41ade8:	sbb    eax,0x8cd8b798
  41aded:	pop    ss
  41adee:	scas   al,BYTE PTR es:[edi]
  41adef:	aas    
  41adf0:	dec    ebx
  41adf1:	push   ebx
  41adf2:	fcomp  DWORD PTR [edi-0x62]
  41adf5:	repz es push ebx
  41adf8:	(bad)  
  41adf9:	mov    esp,0xf2c4b59c
  41adfe:	sub    ebx,ecx
  41ae00:	outs   dx,DWORD PTR ds:[esi]
  41ae01:	and    BYTE PTR [esi+eiz*4+0x16],cl
  41ae05:	adc    BYTE PTR [esi-0x46],bl
  41ae08:	adc    al,0x69
  41ae0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae0b:	neg    BYTE PTR [eax-0x4c27b55]
  41ae11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae12:	out    dx,al
  41ae13:	jmp    0x9abdfa0c
  41ae18:	xchg   edx,eax
  41ae19:	icebp  
  41ae1a:	inc    esi
  41ae1b:	jmp    0x41addb
  41ae1d:	mov    esi,esp
  41ae1f:	popa   
  41ae20:	cmp    eax,0xf61f7304
  41ae25:	inc    eax
  41ae26:	mov    bh,0xef
  41ae28:	in     al,dx
  41ae29:	sbb    BYTE PTR [esp+esi*1-0x3b],0x45
  41ae2e:	retf   0x43c0
  41ae31:	scas   al,BYTE PTR es:[edi]
  41ae32:	adc    al,BYTE PTR [edi]
  41ae34:	cmp    eax,0x9835b6af
  41ae39:	add    al,0xdd
  41ae3b:	(bad)  [edi-0x6f]
  41ae3e:	push   edx
  41ae3f:	or     esp,ebx
  41ae41:	outs   dx,BYTE PTR ds:[esi]
  41ae42:	js     0x41aebe
  41ae44:	and    bh,ah
  41ae46:	loopne 0x41ae3d
  41ae48:	push   ds
  41ae49:	jns    0x41ae59
  41ae4b:	das    
  41ae4c:	cmc    
  41ae4d:	lea    eax,[eax]
  41ae4f:	scas   eax,DWORD PTR es:[edi]
  41ae50:	das    
  41ae51:	cmp    BYTE PTR [ecx-0x59],bl
  41ae54:	repnz fsub st,st(6)
  41ae57:	dec    edi
  41ae58:	(bad)  
  41ae59:	pop    esi
  41ae5a:	add    DWORD PTR [ecx],ebp
  41ae5c:	retf   0x52f5
  41ae5f:	sbb    BYTE PTR [ebx+0x35],ch
  41ae62:	pusha  
  41ae63:	nop
  41ae64:	out    0xeb,eax
  41ae66:	cmc    
  41ae67:	loope  0x41ae8b
  41ae69:	stos   BYTE PTR es:[edi],al
  41ae6a:	icebp  
  41ae6b:	stc    
  41ae6c:	ret    0xb718
  41ae6f:	push   ebp
  41ae70:	mov    dl,0xd6
  41ae72:	popa   
  41ae73:	es out dx,al
  41ae75:	std    
  41ae76:	test   edi,eax
  41ae78:	cmp    al,0x58
  41ae7a:	cdq    
  41ae7b:	dec    edx
  41ae7c:	or     BYTE PTR [ecx-0x3f30fce5],dl
  41ae82:	ss loope 0x41af00
  41ae85:	rcl    BYTE PTR [edx-0x36],cl
  41ae88:	(bad)  
  41ae89:	sub    ch,dl
  41ae8b:	and    al,0xd3
  41ae8d:	out    dx,al
  41ae8e:	clc    
  41ae8f:	jg     0x41ae3e
  41ae91:	mov    WORD PTR [edx],gs
  41ae93:	mov    al,0x19
  41ae95:	fadd   DWORD PTR ds:0x2038a063
  41ae9b:	mov    BYTE PTR [edi+ebx*8-0x4],ch
  41ae9f:	das    
  41aea0:	fcomp  DWORD PTR [ecx]
  41aea2:	jp     0x41ae79
  41aea4:	(bad)  
  41aea5:	scas   al,BYTE PTR es:[edi]
  41aea6:	mov    ah,0x42
  41aea8:	xlat   BYTE PTR ds:[ebx]
  41aea9:	mov    cl,0x17
  41aeab:	cs iret 
  41aead:	mov    al,0x32
  41aeaf:	mov    bh,BYTE PTR [esi+0x49cba30c]
  41aeb5:	data16 jge 0x41ae8a
  41aeb8:	loop   0x41ae7d
  41aeba:	arpl   WORD PTR [edx+0x14],di
  41aebd:	or     al,0xb5
  41aebf:	addr16 sub cl,ch
  41aec2:	fs jne 0x41aed5
  41aec5:	adc    BYTE PTR [esi],dl
  41aec7:	add    eax,0x22f0e36f
  41aecc:	inc    ebx
  41aecd:	inc    ecx
  41aece:	sbb    DWORD PTR [edi-0x3e],ebp
  41aed1:	push   esp
  41aed2:	retf   
  41aed3:	into   
  41aed4:	jge    0x41af16
  41aed6:	mov    eax,ds:0x4e5945ca
  41aedb:	and    eax,0xf67c84b7
  41aee0:	popa   
  41aee1:	sub    eax,0x8c852efd
  41aee6:	add    eax,0x61dc34f8
  41aeeb:	cdq    
  41aeec:	push   edi
  41aeed:	and    BYTE PTR [edx+0x51],bl
  41aef0:	call   0x5922782e
  41aef5:	jbe    0x41ae99
  41aef7:	lea    edi,[esi+0x7e]
  41aefa:	dec    esi
  41aefb:	fadd   DWORD PTR [edi-0x73]
  41aefe:	aas    
  41aeff:	ret    
  41af00:	dec    esp
  41af01:	dec    esi
  41af02:	clc    
  41af03:	xchg   esi,eax
  41af04:	mov    ecx,0x2de842b1
  41af09:	pmulhuw mm5,mm7
  41af0c:	cmp    al,dh
  41af0e:	dec    esp
  41af0f:	out    dx,al
  41af10:	add    edx,DWORD PTR [ebx-0x38203a76]
  41af16:	out    0xc6,eax
  41af18:	lahf   
  41af19:	pop    edi
  41af1a:	and    dh,BYTE PTR [eax-0x2f]
  41af1d:	call   0x2f8894e1
  41af22:	pusha  
  41af23:	hlt    
  41af24:	jp     0x41af72
  41af26:	mov    ebp,0xc74ba20b
  41af2b:	lds    edi,FWORD PTR ds:0x3811c73f
  41af31:	sbb    DWORD PTR [edi+eax*1],edx
  41af34:	pop    esp
  41af35:	neg    DWORD PTR [ebx+0x75]
  41af38:	mov    ebx,DWORD PTR [ecx]
  41af3a:	sar    BYTE PTR [ecx-0x56],0xb1
  41af3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af3f:	xlat   BYTE PTR ds:[ebx]
  41af40:	ret    
  41af41:	rcr    BYTE PTR [ecx+0x369c5a08],cl
  41af47:	into   
  41af48:	aam    0x46
  41af4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af4b:	mov    cl,0x3c
  41af4d:	pop    es
  41af4e:	mov    al,0x2e
  41af50:	sbb    edx,ecx
  41af52:	stos   DWORD PTR es:[edi],eax
  41af53:	and    al,0xdc
  41af55:	popa   
  41af56:	mov    eax,0x35849b5
  41af5b:	enter  0x31e7,0x5f
  41af5f:	jnp    0x41aeec
  41af61:	sbb    eax,0x519a63f1
  41af66:	ror    BYTE PTR [esp+edx*1-0x37966ba0],cl
  41af6d:	imul   ax,ax,0xadaa
  41af72:	add    esp,DWORD PTR [ecx]
  41af74:	push   esp
  41af75:	call   0x7ce7:0x751bf289
  41af7c:	out    0x1e,eax
  41af7e:	xor    eax,DWORD PTR [ebx+eiz*2]
  41af81:	(bad)  
  41af82:	xchg   edi,eax
  41af83:	retf   0x3a46
  41af86:	mov    DWORD PTR [eax],esi
  41af88:	aad    0xfd
  41af8a:	mov    bh,0x21
  41af8c:	cdq    
  41af8d:	scas   al,BYTE PTR es:[edi]
  41af8e:	or     dh,al
  41af90:	jg     0x41af7d
  41af92:	ds mov bl,0xf9
  41af95:	xchg   edi,eax
  41af96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af97:	mov    dh,0x3f
  41af99:	add    ebx,0xffffffce
  41af9c:	inc    ebp
  41af9d:	pop    edi
  41af9e:	repz adc ebx,DWORD PTR [ebx]
  41afa1:	pop    esp
  41afa2:	mov    al,ds:0x7ba23526
  41afa7:	adc    eax,0x160957a4
  41afac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afad:	fs push ebp
  41afaf:	loopne 0x41af6e
  41afb1:	sbb    BYTE PTR [eax+0x78],bh
  41afb4:	stc    
  41afb5:	xchg   edx,eax
  41afb6:	std    
  41afb7:	dec    ecx
  41afb8:	je     0x41afd4
  41afba:	loop   0x41b016
  41afbc:	xchg   esp,eax
  41afbd:	call   0x9a67:0x1562d439
  41afc4:	push   esi
  41afc5:	clc    
  41afc6:	add    eax,0x60a710af
  41afcb:	sti    
  41afcc:	and    BYTE PTR [edx+0x55e89ed],bh
  41afd2:	xor    ebp,DWORD PTR [esi]
  41afd4:	mov    dl,0xe1
  41afd6:	jmp    0x9bc03711
  41afdb:	mov    esi,0x455a47bd
  41afe0:	jl     0x41afeb
  41afe2:	cmc    
  41afe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe4:	and    al,0x48
  41afe6:	jno    0x41b058
  41afe8:	cmp    al,0x3b
  41afea:	jno    0x41af7b
  41afec:	mov    ecx,0xe71c68cf
  41aff1:	cmp    eax,0x43c70387
  41aff6:	mov    dh,al
  41aff8:	jae    0x41b010
  41affa:	dec    eax
  41affb:	adc    ebp,DWORD PTR [eax-0x1f]
  41affe:	dec    ecx
  41afff:	push   edi
  41b000:	or     ebx,DWORD PTR [ebx+0x3b]
  41b003:	and    BYTE PTR [edx],dl
  41b005:	cmp    DWORD PTR [ebx+0x5819d4ef],0x69f3e465
  41b00f:	sub    al,0xe7
  41b011:	adc    bl,ch
  41b013:	adc    eax,edx
  41b015:	cwde   
  41b016:	xchg   esp,eax
  41b017:	cmp    eax,0x43030093
  41b01c:	mov    ebx,0x209bf616
  41b021:	repz adc bh,0x6c
  41b025:	mov    cl,bl
  41b027:	push   ebx
  41b028:	jp     0x41afb0
  41b02a:	pop    eax
  41b02b:	mov    bl,0x1
  41b02d:	or     al,0x16
  41b02f:	add    cl,bh
  41b031:	xchg   edx,eax
  41b032:	inc    edx
  41b033:	sti    
  41b034:	sbb    eax,0xbb8a3119
  41b039:	pop    es
  41b03a:	mov    edi,esi
  41b03c:	ja     0x41b00d
  41b03e:	les    esp,FWORD PTR [ebx-0x2ed2330e]
  41b044:	dec    si
  41b046:	or     eax,0x89d0ef8a
  41b04b:	xlat   BYTE PTR ds:[ebx]
  41b04c:	mov    dh,0xd1
  41b04e:	call   0x75f8:0x50d43961
  41b055:	xchg   ebp,eax
  41b056:	in     eax,0xfc
  41b058:	xchg   edx,eax
  41b059:	lods   eax,DWORD PTR ds:[esi]
  41b05a:	jp     0x41b0c6
  41b05c:	xor    edx,DWORD PTR [edi]
  41b05e:	mov    ch,0x45
  41b060:	mov    ds:0x25ffd372,eax
  41b065:	(bad)  
  41b066:	in     eax,dx
  41b067:	push   cs
  41b068:	sahf   
  41b069:	(bad)  
  41b06a:	fnsave [ecx]
  41b06c:	pop    ecx
  41b06d:	cmp    al,0xdb
  41b06f:	cmp    BYTE PTR [eax],0xbb
  41b072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b073:	call   FWORD PTR [edx+0x3f]
  41b076:	and    eax,0xccdd22d4
  41b07b:	xor    DWORD PTR [esi+0x7f],ecx
  41b07e:	(bad)  
  41b07f:	popf   
  41b080:	retf   0xccb
  41b083:	jmp    0xe3040873
  41b088:	stc    
  41b089:	push   esi
  41b08a:	das    
  41b08b:	aas    
  41b08c:	adc    ecx,DWORD PTR [ebp-0x278e4524]
  41b092:	xor    eax,0xc5296dbe
  41b097:	push   ecx
  41b098:	add    edx,ebp
  41b09a:	push   edx
  41b09b:	js     0x41b04d
  41b09d:	das    
  41b09e:	mov    dl,0x16
  41b0a0:	mov    DWORD PTR [ebp-0x6a45c704],ebx
  41b0a6:	pop    eax
  41b0a7:	sub    DWORD PTR [ebx+0x52],eax
  41b0aa:	pop    ebx
  41b0ab:	(bad)  
  41b0ac:	nop
  41b0ad:	inc    eax
  41b0ae:	dec    eax
  41b0af:	cmp    al,0xc3
  41b0b1:	adc    DWORD PTR [ecx-0x8121707],0x3fd09533
  41b0bb:	xchg   ecx,eax
  41b0bc:	cmc    
  41b0bd:	push   esp
  41b0be:	test   eax,0xc2a40b18
  41b0c3:	add    dl,BYTE PTR [ebp-0x5591745c]
  41b0c9:	in     al,dx
  41b0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0cb:	out    0xd5,eax
  41b0cd:	test   eax,0x19029017
  41b0d2:	dec    eax
  41b0d3:	cdq    
  41b0d4:	xchg   cl,ch
  41b0d6:	adc    al,0x7d
  41b0d8:	adc    ah,BYTE PTR [ebx+0x6b]
  41b0db:	sahf   
  41b0dc:	leave  
  41b0dd:	fisub  WORD PTR [ebx-0x7e]
  41b0e0:	test   BYTE PTR [ebp-0xfba6dc1],0x10
  41b0e7:	cmp    BYTE PTR [edi-0x67],bl
  41b0ea:	push   cs
  41b0eb:	lods   al,BYTE PTR ds:[esi]
  41b0ec:	push   cs
  41b0ed:	xchg   edx,eax
  41b0ee:	add    al,0x33
  41b0f0:	mov    dl,0xa5
  41b0f2:	retf   
  41b0f3:	jns    0x41b14c
  41b0f5:	xor    DWORD PTR [ecx+0x38],edx
  41b0f8:	test   BYTE PTR [edi-0x3d],ch
  41b0fb:	sbb    al,0x1a
  41b0fd:	sbb    BYTE PTR [edx+0x57],0x38
  41b101:	jae    0x41b0af
  41b103:	test   DWORD PTR [edi+eiz*8],edx
  41b106:	sub    eax,0x5c72e2b7
  41b10b:	popa   
  41b10c:	repz jge 0x41b0c6
  41b10f:	cld    
  41b110:	arpl   WORD PTR [ebp+0x49],sp
  41b113:	mov    ch,0x4
  41b115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b116:	stos   BYTE PTR es:[edi],al
  41b117:	mov    ebp,0xfc6e90b3
  41b11c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41b11e:	mov    al,al
  41b120:	or     bl,BYTE PTR [esi]
  41b122:	cli    
  41b123:	dec    edx
  41b124:	lods   al,BYTE PTR ds:[esi]
  41b125:	adc    al,BYTE PTR [esi]
  41b127:	and    BYTE PTR [ebx+0x50a691ef],0x41
  41b12e:	fisubr WORD PTR [eax]
  41b130:	and    cl,BYTE PTR [ebp+0xc]
  41b133:	(bad)  
  41b134:	sbb    edx,DWORD PTR ds:0xd1f2c193
  41b13a:	jno    0x41b18e
  41b13c:	jo     0x41b115
  41b13e:	in     eax,0xdd
  41b140:	mov    ds:0x9d936b2c,al
  41b145:	in     eax,0x80
  41b147:	pop    ss
  41b148:	pop    esi
  41b149:	push   esp
  41b14a:	mov    edi,0x4a053d25
  41b14f:	mov    ebx,0xada2f4b9
  41b154:	dec    esp
  41b155:	or     al,0x1e
  41b157:	mov    ah,BYTE PTR [ebp-0x7b303566]
  41b15d:	in     eax,0x1c
  41b15f:	sbb    DWORD PTR [esi+0x47],esp
  41b162:	popf   
  41b163:	sbb    al,0x6
  41b165:	(bad)  
  41b166:	icebp  
  41b167:	test   ebx,edi
  41b169:	js     0x41b106
  41b16b:	aad    0xde
  41b16d:	cmp    DWORD PTR [ebx-0x7b],eax
  41b170:	push   edx
  41b171:	jne    0x41b156
  41b173:	pop    ecx
  41b174:	mov    eax,ds:0x91e61db1
  41b179:	adc    eax,0x2b3e15e4
  41b17e:	clc    
  41b17f:	clc    
  41b180:	xor    dl,BYTE PTR [esi-0x78e7d0b1]
  41b186:	(bad)  
  41b187:	mov    eax,ds:0xe517af9
  41b18c:	or     al,0xc4
  41b18e:	mov    cl,0x61
  41b190:	popa   
  41b191:	ins    DWORD PTR es:[edi],dx
  41b192:	pop    edx
  41b193:	jne    0x41b15f
  41b195:	jmp    0xb5f596e9
  41b19a:	sbb    bh,ch
  41b19c:	jmp    0x41b177
  41b19e:	int3   
  41b19f:	sub    al,0xff
  41b1a1:	jecxz  0x41b202
  41b1a3:	pop    edi
  41b1a4:	fldenv [ebx]
  41b1a6:	loop   0x41b156
  41b1a8:	scas   al,BYTE PTR es:[edi]
  41b1a9:	mov    ebp,0xa8d454d
  41b1ae:	dec    edi
  41b1af:	cmp    cl,BYTE PTR [esp+eax*2+0x65]
  41b1b3:	ror    BYTE PTR [esi],0xef
  41b1b6:	jbe    0x41b1a8
  41b1b8:	sub    esp,DWORD PTR [edi-0x306431fc]
  41b1be:	xor    al,0x7a
  41b1c0:	or     eax,0xc092fd64
  41b1c5:	test   DWORD PTR [ecx+edi*2-0x2d5161e6],edx
  41b1cc:	iret   
  41b1cd:	and    eax,DWORD PTR [esi-0x5]
  41b1d0:	cmp    BYTE PTR [eax-0x2],ch
  41b1d3:	sbb    dh,cl
  41b1d5:	pop    edi
  41b1d6:	rcl    DWORD PTR [esi],1
  41b1d8:	inc    esp
  41b1d9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b1db:	scas   eax,DWORD PTR es:[edi]
  41b1dc:	repz (bad) 
  41b1de:	cdq    
  41b1df:	mov    ebx,esp
  41b1e1:	jmp    0x17c7aae8
  41b1e6:	sub    DWORD PTR [edi+0x24],0x666adff5
  41b1ed:	xchg   ecx,eax
  41b1ee:	push   ds
  41b1ef:	adc    eax,0x7b5bbe30
  41b1f4:	sub    eax,0xe770d5a6
  41b1f9:	adc    eax,0x6e9f02ed
  41b1fe:	pop    es
  41b1ff:	ror    DWORD PTR [ebx],1
  41b201:	add    ecx,esi
  41b203:	mov    ds:0x1eeaf463,eax
  41b208:	rcr    ebp,cl
  41b20a:	daa    
  41b20b:	retf   
  41b20c:	mov    edi,0x7df9cdd8
  41b211:	dec    eax
  41b212:	pop    esp
  41b213:	sbb    eax,0x28798c82
  41b218:	mov    bl,0x9f
  41b21a:	loopne 0x41b1c1
  41b21c:	or     al,0xac
  41b21e:	adc    edx,ebx
  41b220:	loop   0x41b25e
  41b222:	pmovmskb esp,mm5
  41b225:	jl     0x41b1c8
  41b227:	rcl    DWORD PTR [ebp-0x63],1
  41b22a:	pusha  
  41b22b:	aam    0xaf
  41b22d:	les    edx,FWORD PTR [ebx-0x39faa126]
  41b233:	jp     0x41b1be
  41b235:	stos   DWORD PTR es:[edi],eax
  41b236:	pop    es
  41b237:	mov    bl,BYTE PTR [ebp-0x7e]
  41b23a:	mov    ebp,0x471e3a94
  41b23f:	xlat   BYTE PTR ds:[ebx]
  41b240:	xor    al,0xea
  41b242:	jmp    0x7996:0x49ab3920
  41b249:	mov    ds:0x263f8998,al
  41b24e:	mov    ds:0x3eb19191,eax
  41b253:	mov    dh,0x96
  41b255:	jmp    0x72ae:0x82e30de1
  41b25c:	loop   0x41b243
  41b25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b25f:	xchg   BYTE PTR [edi],bl
  41b261:	(bad)  
  41b262:	xchg   edi,eax
  41b263:	mov    esi,0x54baced9
  41b268:	adc    cl,BYTE PTR [ecx+ebp*1+0x1d]
  41b26c:	inc    ebx
  41b26d:	inc    eax
  41b26e:	pop    ss
  41b26f:	stc    
  41b270:	mov    edx,0x104e5058
  41b275:	ins    DWORD PTR es:[edi],dx
  41b276:	or     edi,DWORD PTR [esi+0x3bd07d83]
  41b27c:	and    BYTE PTR [ecx+0x13],bh
  41b27f:	call   0x62b4d1a9
  41b284:	add    eax,0x673417eb
  41b289:	cmc    
  41b28a:	clc    
  41b28b:	out    dx,eax
  41b28c:	(bad)  
  41b28d:	mov    esp,ebx
  41b28f:	cli    
  41b290:	(bad)  
  41b291:	mov    eax,DWORD PTR [ecx]
  41b293:	push   eax
  41b294:	mov    WORD PTR [esi],?
  41b296:	jle    0x41b2a7
  41b298:	push   0x34
  41b29a:	dec    esi
  41b29b:	leave  
  41b29c:	aaa    
  41b29d:	jae    0x41b2d9
  41b29f:	(bad)  
  41b2a0:	jl     0x41b305
  41b2a2:	retf   
  41b2a3:	push   ss
  41b2a4:	dec    esi
  41b2a5:	dec    edi
  41b2a6:	pop    ebx
  41b2a7:	sbb    al,0xd5
  41b2a9:	not    DWORD PTR [edi]
  41b2ab:	pop    ebx
  41b2ac:	nop
  41b2ad:	sbb    esi,edx
  41b2af:	cmp    BYTE PTR [esi],0xd1
  41b2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b3:	rol    BYTE PTR [ebp+ecx*8-0x4a],0xfc
  41b2b8:	loopne 0x41b25a
  41b2ba:	or     eax,0x151e3b39
  41b2bf:	dec    ecx
  41b2c0:	and    cl,BYTE PTR [eax+0x5c]
  41b2c3:	aad    0x73
  41b2c5:	mov    dl,0x5c
  41b2c7:	sub    ecx,DWORD PTR [ecx+ebp*2]
  41b2ca:	mov    ecx,0x8914f133
  41b2cf:	dec    edx
  41b2d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d1:	je     0x41b2c8
  41b2d3:	xor    dh,BYTE PTR [ecx-0x6c]
  41b2d6:	jmp    0x41b2a7
  41b2d8:	cmp    al,0xbe
  41b2da:	inc    ebx
  41b2db:	sbb    BYTE PTR [ebp+0x698fab9d],bh
  41b2e1:	cli    
  41b2e2:	fsubr  QWORD PTR [eax+ecx*4+0x5b]
  41b2e6:	mov    dh,0xf1
  41b2e8:	rcl    ch,0x81
  41b2eb:	retf   
  41b2ec:	xchg   ebx,eax
  41b2ed:	mov    ah,0xa5
  41b2ef:	sbb    esp,ecx
  41b2f1:	pop    ss
  41b2f2:	jb     0x41b285
  41b2f4:	cli    
  41b2f5:	sbb    DWORD PTR [edx],ecx
  41b2f7:	lock int 0x35
  41b2fa:	(bad)  
  41b2fb:	or     eax,0x5f76593a
  41b300:	xchg   ebp,eax
  41b301:	hlt    
  41b302:	sbb    eax,0x65df2ab8
  41b307:	(bad)  
  41b308:	cdq    
  41b309:	xchg   ecx,eax
  41b30a:	or     edx,DWORD PTR [ecx+ecx*8+0x6d]
  41b30e:	mov    edx,DWORD PTR [eax-0x1b705bad]
  41b314:	int    0x46
  41b316:	js     0x41b2f2
  41b318:	sahf   
  41b319:	mov    ebx,0x5a552c0
  41b31e:	stos   DWORD PTR es:[edi],eax
  41b31f:	loopne 0x41b32a
  41b321:	ja     0x41b2af
  41b323:	sub    eax,0x89bfbf24
  41b328:	mov    ebp,0xd3405abd
  41b32d:	jo     0x41b3aa
  41b32f:	(bad)  
  41b331:	push   ss
  41b332:	sub    al,0xac
  41b334:	mov    esp,0x36edc285
  41b339:	mov    ah,0xd3
  41b33b:	and    ah,dh
  41b33d:	xchg   esp,eax
  41b33e:	cmc    
  41b33f:	in     eax,0xb1
  41b341:	aam    0x7c
  41b343:	or     esi,DWORD PTR ds:0x119a286c
  41b349:	jne    0x41b3a5
  41b34b:	jecxz  0x41b3ab
  41b34d:	(bad)  
  41b34e:	jmp    0xc629:0x7979902f
  41b355:	or     BYTE PTR [ecx],ch
  41b357:	dec    esp
  41b358:	hlt    
  41b359:	dec    ecx
  41b35a:	dec    edx
  41b35b:	cdq    
  41b35c:	jno    0x41b2eb
  41b35e:	jmp    0xc83d:0xb3e9611
  41b365:	cli    
  41b366:	cmp    BYTE PTR [ecx],cl
  41b368:	popf   
  41b369:	test   al,0xaa
  41b36b:	cmp    al,0xf1
  41b36d:	dec    ebp
  41b36e:	or     DWORD PTR [eax-0x3ef27d8a],esi
  41b374:	sub    DWORD PTR [esi+0x687117d7],ebx
  41b37a:	shl    DWORD PTR [eax],1
  41b37c:	jmp    0xf9d68595
  41b381:	dec    ecx
  41b382:	inc    ebx
  41b383:	(bad)  
  41b384:	and    DWORD PTR [esi-0x42],ebx
  41b387:	dec    ecx
  41b388:	xor    al,0xf1
  41b38a:	mov    dl,bl
  41b38c:	inc    edx
  41b38d:	mov    dh,0x32
  41b38f:	push   edx
  41b390:	(bad)  
  41b391:	sub    al,0xfa
  41b393:	xchg   esi,eax
  41b394:	sub    eax,0xe322c265
  41b399:	fs jg  0x41b3de
  41b39c:	adc    DWORD PTR [ebx],0xed9ded98
  41b3a2:	add    eax,0xab9a37b4
  41b3a7:	or     edx,esi
  41b3a9:	sub    eax,esi
  41b3ab:	mov    ebx,0x5a0f0f1c
  41b3b0:	push   esp
  41b3b1:	push   ebp
  41b3b2:	jecxz  0x41b3e8
  41b3b4:	pop    eax
  41b3b5:	push   0xfb743c96
  41b3ba:	lods   al,BYTE PTR ds:[esi]
  41b3bb:	and    edi,edx
  41b3bd:	push   ebx
  41b3be:	fnstcw WORD PTR [ebx]
  41b3c0:	das    
  41b3c1:	test   DWORD PTR [esi+0x4b2c50e6],0x1252fb1d
  41b3cb:	mov    al,BYTE PTR [eax]
  41b3cd:	retf   
  41b3ce:	stc    
  41b3cf:	or     al,0x1a
  41b3d1:	mov    dl,0xdc
  41b3d3:	retf   0x424d
  41b3d6:	pop    edi
  41b3d7:	xchg   BYTE PTR [ecx],cl
  41b3d9:	or     BYTE PTR [ebx-0x34],cl
  41b3dc:	add    BYTE PTR fs:[edx+edi*2+0x237c020e],al
  41b3e4:	aas    
  41b3e5:	dec    ebx
  41b3e6:	aad    0xb5
  41b3e8:	push   0x71e74681
  41b3ed:	push   es
  41b3ee:	sub    BYTE PTR [edx],cl
  41b3f0:	aaa    
  41b3f1:	dec    eax
  41b3f2:	or     DWORD PTR [ebx+0x4a4db67],esp
  41b3f8:	jl     0x41b476
  41b3fa:	sub    al,0x7
  41b3fc:	sub    esi,DWORD PTR [edx]
  41b3fe:	inc    ecx
  41b3ff:	jl     0x41b3e7
  41b401:	outs   dx,DWORD PTR ds:[esi]
  41b402:	add    eax,0x9037947b
  41b407:	mov    ds:0x991ac3ca,eax
  41b40c:	jmp    0xb6aa0d1e
  41b411:	push   edx
  41b412:	mov    esp,edi
  41b414:	dec    ebx
  41b415:	xchg   edx,eax
  41b416:	int3   
  41b417:	bound  esi,QWORD PTR [ebp-0x2a]
  41b41a:	push   0xffffffca
  41b41c:	adc    eax,0x9facd02e
  41b421:	iret   
  41b422:	cdq    
  41b423:	xor    al,0x45
  41b425:	pusha  
  41b426:	adc    bh,BYTE PTR [esi]
  41b428:	out    dx,al
  41b429:	test   eax,0x547a586b
  41b42e:	sbb    BYTE PTR [ebx+0x5c51de72],0xe
  41b435:	out    0x65,eax
  41b437:	xchg   edx,eax
  41b438:	stos   DWORD PTR es:[edi],eax
  41b439:	jo     0x41b45b
  41b43b:	call   0xe7451c1b
  41b440:	push   edx
  41b441:	jno    0x41b3dc
  41b443:	fld    QWORD PTR [edi+esi*1-0x45f97b81]
  41b44a:	mov    BYTE PTR [ecx],dh
  41b44c:	dec    ebp
  41b44d:	test   BYTE PTR [esi-0x63],bh
  41b450:	shr    BYTE PTR [esi+0x50644a75],cl
  41b456:	add    esi,edi
  41b458:	mov    BYTE PTR [esi+edi*4+0x63],0x36
  41b45d:	push   edx
  41b45e:	iret   
  41b45f:	pop    es
  41b460:	mov    ch,0x44
  41b462:	hlt    
  41b463:	pop    ebx
  41b464:	jo     0x41b4a6
  41b466:	jns    0x41b412
  41b468:	sahf   
  41b469:	inc    ebx
  41b46a:	sbb    BYTE PTR [ecx-0x3bf7a451],al
  41b470:	xor    esp,DWORD PTR [ecx+0x2d]
  41b473:	hlt    
  41b474:	push   ebp
  41b475:	in     al,0xd5
  41b477:	or     DWORD PTR [ebx+0x222f4d9b],esp
  41b47d:	push   edx
  41b47e:	sbb    ebx,DWORD PTR [esi]
  41b480:	pop    edx
  41b481:	jo     0x41b4f1
  41b483:	mov    edi,eax
  41b485:	sub    ebp,DWORD PTR [edi+0x35f8f5de]
  41b48b:	dec    esp
  41b48c:	iret   
  41b48d:	xor    BYTE PTR [esi],0x98
  41b490:	inc    ecx
  41b491:	sbb    cl,dl
  41b493:	sbb    DWORD PTR [ecx],ebp
  41b495:	fwait
  41b496:	and    al,0x5c
  41b498:	jle    0x41b484
  41b49a:	mov    eax,ds:0xeff5b8f4
  41b49f:	mov    ecx,0x6f4153cf
  41b4a4:	aam    0x75
  41b4a6:	fwait
  41b4a7:	js     0x41b472
  41b4a9:	test   DWORD PTR [ecx-0x7c],esi
  41b4ac:	sahf   
  41b4ad:	dec    esp
  41b4ae:	dec    ebp
  41b4af:	mov    esi,esp
  41b4b1:	xor    BYTE PTR [ebx+0x645366e1],ah
  41b4b7:	in     al,dx
  41b4b8:	dec    edx
  41b4b9:	mov    bl,0xc9
  41b4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4bc:	and    DWORD PTR [esi-0x58],ebp
  41b4bf:	jle    0x41b510
  41b4c1:	push   0xf42fcca2
  41b4c6:	push   esi
  41b4c7:	ret    
  41b4c8:	inc    ecx
  41b4c9:	xor    eax,0xdf5a4dac
  41b4ce:	loope  0x41b4b6
  41b4d0:	mov    al,0x1b
  41b4d2:	addr16 mov bl,0xf5
  41b4d5:	mov    ds:0xa89fac5c,eax
  41b4da:	fadd   QWORD PTR [ebp+0x46]
  41b4dd:	mov    ch,0xe3
  41b4df:	adc    al,0xe6
  41b4e1:	lahf   
  41b4e2:	fs mov edi,0xa7c4909a
  41b4e8:	in     eax,0xc3
  41b4ea:	xor    ch,0xa4
  41b4ed:	xor    BYTE PTR [edi],cl
  41b4ef:	pushf  
  41b4f0:	test   BYTE PTR [ebx+eax*4-0x4809bcb1],0x16
  41b4f8:	or     DWORD PTR [esi+0x48],ebx
  41b4fb:	jae    0x41b57a
  41b4fd:	or     dh,BYTE PTR [edx+ebx*4+0x3]
  41b501:	mov    bl,0xe6
  41b503:	push   ecx
  41b504:	cmp    eax,0x5a462e98
  41b509:	ret    0x6e
  41b50c:	sbb    al,0x6b
  41b50e:	jno    0x41b557
  41b510:	sub    dh,bl
  41b512:	push   esp
  41b513:	mov    ebx,0xe16e82b2
  41b518:	mov    eax,ds:0x2e1ad114
  41b51d:	sahf   
  41b51e:	pop    ss
  41b51f:	(bad)  
  41b520:	xchg   ecx,eax
  41b521:	call   0x1e8:0xb7259800
  41b528:	lahf   
  41b529:	xchg   edi,eax
  41b52a:	mov    dh,0x1b
  41b52c:	daa    
  41b52d:	push   ecx
  41b52e:	fbstp  TBYTE PTR [eax+0x4e565821]
  41b534:	outs   dx,BYTE PTR ds:[esi]
  41b535:	gs dec esp
  41b537:	out    0x93,al
  41b539:	dec    edi
  41b53a:	out    dx,eax
  41b53b:	or     ch,BYTE PTR [eax]
  41b53d:	ror    BYTE PTR [ebp+ecx*2-0x61755d8],1
  41b544:	gs jo  0x41b535
  41b547:	pop    ebp
  41b548:	test   DWORD PTR [ebx-0x39],esp
  41b54b:	ss test eax,0xabb049a6
  41b551:	into   
  41b552:	push   eax
  41b553:	and    al,0xdf
  41b555:	sub    ebp,DWORD PTR [ecx+0x79]
  41b558:	(bad)  [ebx+edi*1]
  41b55b:	fcom   DWORD PTR [ebx]
  41b55d:	mov    es,WORD PTR [ecx]
  41b55f:	push   esp
  41b560:	adc    eax,0xcb3b207d
  41b565:	mov    al,al
  41b567:	mov    BYTE PTR [edx-0x6f],cl
  41b56a:	out    0xa8,al
  41b56c:	push   edi
  41b56d:	(bad)  
  41b56f:	paddb  mm2,QWORD PTR [edi-0x5]
  41b573:	mov    DWORD PTR [eax+0x7b],ebp
  41b576:	neg    DWORD PTR [ecx]
  41b578:	jle    0x41b51f
  41b57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b57b:	fs mov ebp,0xf5e979d5
  41b581:	hlt    
  41b582:	ds sub eax,0x6294cdd6
  41b588:	sar    DWORD PTR [ebx-0x2a],0x8d
  41b58c:	in     al,0xa
  41b58e:	ja     0x41b5cd
  41b590:	adc    ebx,DWORD PTR [esi]
  41b592:	fisttp DWORD PTR [ebx]
  41b594:	je     0x41b600
  41b596:	cwde   
  41b597:	push   esp
  41b598:	cmp    eax,0x69ba66a2
  41b59d:	les    ecx,FWORD PTR [esi+0x29]
  41b5a0:	dec    ebx
  41b5a1:	fstp   st(1)
  41b5a3:	cld    
  41b5a4:	or     ebp,eax
  41b5a6:	inc    ecx
  41b5a7:	pusha  
  41b5a8:	scas   al,BYTE PTR es:[edi]
  41b5a9:	jae    0x41b54e
  41b5ab:	aad    0xe7
  41b5ad:	xor    DWORD PTR [edi+eax*8-0x5d],edi
  41b5b1:	iret   
  41b5b2:	mov    esp,0x259bca14
  41b5b7:	dec    ebx
  41b5b8:	jmp    0x41b614
  41b5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bb:	mov    bh,0xf4
  41b5bd:	in     eax,0xe1
  41b5bf:	call   0x17de:0x69c79448
  41b5c6:	arpl   sp,bp
  41b5c8:	add    eax,0x9ef65261
  41b5cd:	sub    al,0x4c
  41b5cf:	and    eax,0x1d31362c
  41b5d4:	div    DWORD PTR [ecx+0x3ada588f]
  41b5da:	test   eax,0x34ff082d
  41b5df:	pop    ebp
  41b5e0:	mov    esi,0x746ad6b4
  41b5e5:	ja     0x41b5bd
  41b5e7:	mov    eax,ds:0x90f83c9e
  41b5ec:	jno    0x41b5d9
  41b5ee:	hlt    
  41b5ef:	jbe    0x41b647
  41b5f1:	call   0x83de033f
  41b5f6:	or     DWORD PTR [ebp+0x4878b061],ebp
  41b5fc:	mov    BYTE PTR [eax+ecx*4+0x10],dh
  41b600:	push   esi
  41b601:	xchg   edx,eax
  41b602:	jmp    0x6f90c15a
  41b607:	je     0x41b5b0
  41b609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b60a:	mov    esp,0x2a419cd6
  41b60f:	adc    BYTE PTR [edi+eax*4-0x213fe1cc],dh
  41b616:	inc    edx
  41b617:	add    DWORD PTR [ecx-0x448bf20d],ecx
  41b61d:	hlt    
  41b61e:	or     BYTE PTR [ebx+0x247e280a],bh
  41b624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b625:	add    dl,al
  41b627:	xor    BYTE PTR [edi+0x6dc161af],dl
  41b62d:	repz loope 0x41b5cf
  41b630:	stos   DWORD PTR es:[edi],eax
  41b631:	inc    esp
  41b632:	or     al,0x50
  41b634:	cli    
  41b635:	xchg   edx,eax
  41b636:	repz push ds
  41b638:	and    esp,ebp
  41b63a:	inc    eax
  41b63b:	lock pop ss
  41b63d:	inc    esp
  41b63e:	arpl   WORD PTR [ecx+0x62],di
  41b641:	jae    0x41b691
  41b643:	or     eax,0x2567fb81
  41b648:	fistp  WORD PTR [ecx-0xcaaf944]
  41b64e:	aaa    
  41b64f:	inc    edi
  41b650:	inc    eax
  41b651:	pop    ecx
  41b652:	jns    0x41b6af
  41b654:	imul   edx,DWORD PTR [edx+0x74],0xde7da435
  41b65b:	push   0x6561d163
  41b660:	dec    ebp
  41b661:	push   0xffffffc2
  41b663:	push   ecx
  41b664:	pop    edx
  41b665:	fwait
  41b666:	dec    ecx
  41b667:	fadd   QWORD PTR [ecx+0x35955911]
  41b66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66e:	mov    ebp,0x3782d984
  41b673:	fstp   DWORD PTR [esi+eax*8]
  41b676:	dec    edi
  41b677:	cmc    
  41b678:	rcl    DWORD PTR [eax-0x12],0xd1
  41b67c:	or     esp,esp
  41b67e:	dec    ecx
  41b67f:	add    BYTE PTR [edi+0x48],ah
  41b682:	scas   al,BYTE PTR es:[edi]
  41b683:	aaa    
  41b684:	popf   
  41b685:	mov    esp,0x57572684
  41b68a:	adc    ebx,DWORD PTR [ebx+0x2cc8f446]
  41b690:	out    0x5f,eax
  41b692:	xchg   edx,eax
  41b693:	cmc    
  41b694:	push   ebp
  41b695:	sub    esi,ebp
  41b697:	sbb    dh,BYTE PTR [ebp+0x72]
  41b69a:	and    al,0xb
  41b69c:	loop   0x41b6c5
  41b69e:	aam    0x3b
  41b6a0:	(bad)  
  41b6a1:	push   esi
  41b6a2:	js     0x41b6bf
  41b6a4:	pop    eax
  41b6a5:	lea    ebx,[ebx+0x7c]
  41b6a8:	cmp    bl,dh
  41b6aa:	mov    al,0x82
  41b6ac:	push   es
  41b6ad:	cmp    BYTE PTR [esp+eax*4+0x46],0xa4
  41b6b2:	mov    ch,0xec
  41b6b4:	popf   
  41b6b5:	fdivr  DWORD PTR [edx]
  41b6b7:	or     edx,DWORD PTR [edx]
  41b6b9:	popa   
  41b6ba:	push   ss
  41b6bb:	aad    0xf5
  41b6bd:	pushf  
  41b6be:	enter  0x3ee3,0x63
  41b6c2:	jmp    0x41b665
  41b6c4:	pop    ds
  41b6c5:	sti    
  41b6c6:	std    
  41b6c7:	jns    0x41b6ca
  41b6c9:	bound  esi,QWORD PTR [esi]
  41b6cb:	fsubr  QWORD PTR [ecx]
  41b6cd:	mov    dh,0xbc
  41b6cf:	inc    ebp
  41b6d0:	lds    esi,FWORD PTR [eax+0x61af1adc]
  41b6d6:	ror    DWORD PTR [ebp+eax*1+0x58],cl
  41b6da:	inc    ecx
  41b6db:	push   es
  41b6dc:	or     eax,0xec75c721
  41b6e1:	pop    esi
  41b6e2:	push   cs
  41b6e3:	test   BYTE PTR [edi-0x45],dl
  41b6e6:	fs adc al,0x39
  41b6e9:	jne    0x41b6ea
  41b6eb:	scas   al,BYTE PTR es:[edi]
  41b6ec:	sar    BYTE PTR [eax+0x65],1
  41b6ef:	mov    edi,0x9b69d674
  41b6f4:	xor    ah,BYTE PTR [eax+0x37c78036]
  41b6fa:	neg    dh
  41b6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6fd:	jg     0x41b682
  41b6ff:	xchg   BYTE PTR [eax],dl
  41b701:	dec    esi
  41b702:	ss inc edi
  41b704:	xor    bl,BYTE PTR [ebx+0x60d69f0f]
  41b70a:	retf   
  41b70b:	xor    BYTE PTR [edi],al
  41b70d:	jge    0x41b77b
  41b70f:	rcr    DWORD PTR [ebp-0x31d84b07],1
  41b715:	gs cmc 
  41b717:	sbb    DWORD PTR [esi*8-0x13de7e59],esi
  41b71e:	jns    0x41b756
  41b720:	inc    ebx
  41b721:	adc    eax,0x250b0ad8
  41b726:	or     al,0xc
  41b729:	add    dh,cl
  41b72b:	fidivr WORD PTR [ebp+0x68]
  41b72e:	je     0x41b79e
  41b730:	cmp    eax,0xf2035dd
  41b735:	inc    esp
  41b736:	add    al,0x42
  41b738:	sub    BYTE PTR [edi+0x26],dh
  41b73b:	aaa    
  41b73c:	repnz pop edx
  41b73e:	xchg   DWORD PTR [ebx-0x73],ebp
  41b741:	xor    edx,DWORD PTR [edx]
  41b743:	mov    ah,BYTE PTR [edx+0x79]
  41b746:	js     0x41b7aa
  41b748:	inc    ebp
  41b749:	cmp    eax,0xbab5a148
  41b74e:	dec    edi
  41b74f:	stc    
  41b750:	fadd   QWORD PTR [esi+esi*1]
  41b753:	sub    eax,0x5934e2b6
  41b758:	leave  
  41b759:	mov    DWORD PTR [edx-0x5f8e7174],esi
  41b75f:	sub    DWORD PTR [ecx+0x76],ebp
  41b762:	xchg   esi,eax
  41b763:	out    0xb6,al
  41b765:	jmp    0xe28cffe0
  41b76a:	push   ecx
  41b76b:	call   0xb158614
  41b770:	pop    ds
  41b771:	ss jg  0x41b72e
  41b774:	xchg   edx,eax
  41b775:	test   eax,0x7279868b
  41b77a:	cld    
  41b77b:	add    BYTE PTR [ebx+ecx*8+0x56],dh
  41b77f:	jmp    0x41b79c
  41b781:	inc    ebx
  41b782:	inc    esp
  41b783:	js     0x41b7c3
  41b785:	inc    ecx
  41b786:	ss jl  0x41b762
  41b789:	cmp    BYTE PTR [edx-0x5eef87e6],ch
  41b78f:	(bad)  
  41b790:	mov    ebx,0x63785281
  41b795:	cmc    
  41b796:	mov    eax,ds:0xc398212f
  41b79b:	bound  esp,QWORD PTR [esi+0x30281cdd]
  41b7a1:	add    al,0x31
  41b7a3:	scas   eax,DWORD PTR es:[edi]
  41b7a4:	pop    eax
  41b7a5:	lods   eax,DWORD PTR ds:[esi]
  41b7a6:	icebp  
  41b7a7:	and    BYTE PTR [ebx+0x1e74b8d],ch
  41b7ad:	and    ah,BYTE PTR [edi+0x48cab8ae]
  41b7b3:	and    al,0x23
  41b7b5:	loop   0x41b7b8
  41b7b7:	and    edi,DWORD PTR ds:0xbcd659d5
  41b7bd:	clc    
  41b7be:	sahf   
  41b7bf:	push   cs
  41b7c0:	es dec ecx
  41b7c2:	push   esi
  41b7c3:	xchg   edx,eax
  41b7c4:	adc    DWORD PTR ds:[ecx+0x1ccbfcb0],ebx
  41b7cb:	or     DWORD PTR [ebp-0x82a4fca],eax
  41b7d1:	sbb    eax,0x315f4c5c
  41b7d6:	add    BYTE PTR [bx+di+0x61],0x52
  41b7db:	(bad)  
  41b7de:	aad    0x43
  41b7e0:	ja     0x41b7db
  41b7e2:	adc    ah,BYTE PTR [esi+0x40]
  41b7e5:	adc    eax,DWORD PTR [ecx-0x34]
  41b7e8:	dec    eax
  41b7e9:	ins    DWORD PTR es:[edi],dx
  41b7ea:	sub    edi,DWORD PTR [ebx+0x4c]
  41b7ed:	clc    
  41b7ee:	sbb    dh,BYTE PTR [edx-0x30]
  41b7f1:	mov    ah,0xa7
  41b7f3:	shl    BYTE PTR [ecx-0x355d148f],cl
  41b7f9:	xchg   ebp,eax
  41b7fa:	fmul   DWORD PTR [ecx+0x4d]
  41b7fd:	dec    edx
  41b7fe:	or     eax,0xca668a36
  41b803:	and    BYTE PTR [edx],ah
  41b805:	(bad)  
  41b806:	xlat   BYTE PTR ds:[ebx]
  41b807:	shl    BYTE PTR [esi+0x68],0x46
  41b80b:	int    0x78
  41b80d:	fnstsw WORD PTR [edx]
  41b80f:	bound  ebx,QWORD PTR [esi]
  41b811:	cdq    
  41b812:	or     eax,0x785bcc2b
  41b817:	pop    esi
  41b818:	repnz int3 
  41b81a:	mov    esi,0x86ac999
  41b81f:	pop    ds
  41b820:	(bad)  
  41b821:	pop    edi
  41b822:	hlt    
  41b823:	ret    0x38b6
  41b826:	cwde   
  41b827:	dec    edi
  41b828:	push   es
  41b829:	int    0xe3
  41b82b:	sub    al,0xa6
  41b82d:	sbb    DWORD PTR [esi+eax*2+0x4f36a0ca],ebx
  41b834:	fs push esp
  41b836:	fcom   QWORD PTR [ebx-0x283c3609]
  41b83c:	inc    ecx
  41b83d:	mov    esi,0xd5322c1
  41b842:	fcom   QWORD PTR [esi+0x17]
  41b845:	jno    0x41b893
  41b847:	mov    dl,0x4
  41b849:	iret   
  41b84a:	loope  0x41b8ab
  41b84c:	mov    esp,0x7f36d949
  41b851:	push   0xffffffe9
  41b853:	inc    ebx
  41b854:	mov    DWORD PTR [ebx+0x1b],0x72115ef
  41b85b:	add    bl,ch
  41b85d:	sbb    al,0xc1
  41b85f:	dec    edx
  41b860:	std    
  41b861:	jge    0x41b8d7
  41b863:	jmp    0x41b870
  41b865:	push   esi
  41b866:	in     al,0x57
  41b868:	xchg   esi,eax
  41b869:	sbb    ebp,DWORD PTR [ebx+edx*2]
  41b86c:	cmc    
  41b86d:	popf   
  41b86e:	push   ds
  41b86f:	cmp    BYTE PTR [eax],ch
  41b871:	jbe    0x41b890
  41b873:	fldenv [esi+0x61]
  41b876:	mov    edx,0xd8bed4e
  41b87b:	and    dl,BYTE PTR [ecx-0x9]
  41b87e:	adc    eax,0xe68f4d8
  41b883:	(bad)  
  41b884:	sub    bl,BYTE PTR [ecx+0xdfb9d5]
  41b88a:	popf   
  41b88b:	fsub   DWORD PTR [edi]
  41b88d:	popf   
  41b88e:	mov    bl,0xe0
  41b890:	in     al,0xda
  41b892:	mov    ebp,0x9fdf0dd
  41b897:	jo     0x41b8a9
  41b899:	mov    es,WORD PTR [ebx-0x46]
  41b89c:	pop    es
  41b89d:	nop
  41b89e:	jmp    0x41b903
  41b8a0:	outs   dx,DWORD PTR ds:[esi]
  41b8a1:	xor    DWORD PTR [edx+ebp*1-0x3c],ebx
  41b8a5:	jge    0x41b8b5
  41b8a7:	popf   
  41b8a8:	or     eax,0x78d8d242
  41b8ad:	inc    esi
  41b8ae:	imul   esi,DWORD PTR [edx],0x203557a9
  41b8b4:	addr16 and ah,bh
  41b8b7:	xor    esi,DWORD PTR [ecx+0x8]
  41b8ba:	cli    
  41b8bb:	stos   BYTE PTR es:[edi],al
  41b8bc:	jp     0x41b89d
  41b8be:	mov    eax,0xf3d7280a
  41b8c3:	sti    
  41b8c4:	sbb    ah,al
  41b8c6:	sbb    eax,0x1536b622
  41b8cb:	xor    ebx,ebp
  41b8cd:	ss ja  0x41b852
  41b8d0:	(bad)  
  41b8d1:	(bad)  
  41b8d2:	sbb    eax,esp
  41b8d4:	jle    0x41b8e3
  41b8d6:	packsswb mm5,mm7
  41b8d9:	stc    
  41b8da:	ja     0x41b92d
  41b8dc:	mov    bl,0xf1
  41b8de:	scas   eax,DWORD PTR es:[edi]
  41b8df:	mov    cl,0x5b
  41b8e1:	jnp    0x41b913
  41b8e3:	(bad)  
  41b8e4:	mov    eax,ds:0x8dbd0332
  41b8e9:	xlat   BYTE PTR ds:[ebx]
  41b8ea:	dec    ecx
  41b8eb:	cmc    
  41b8ec:	sbb    al,0x2b
  41b8ee:	lods   eax,DWORD PTR ds:[esi]
  41b8ef:	mov    esi,0xe3364671
  41b8f4:	cmp    eax,0x674d8261
  41b8f9:	or     ah,BYTE PTR [ebp+0x1ed0a3e8]
  41b8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b900:	iret   
  41b901:	jl     0x41b8b9
  41b903:	xchg   edi,eax
  41b904:	sub    BYTE PTR [ebp-0x71],0xc7
  41b908:	addr16 mov edi,0x8a395f63
  41b90e:	cmp    DWORD PTR [edx-0x25c6926d],0xc8077aeb
  41b918:	and    eax,0x496f806a
  41b91d:	idiv   BYTE PTR ds:0x64c3de8d
  41b923:	pop    esp
  41b924:	into   
  41b925:	push   DWORD PTR [ecx+0x6bd22870]
  41b92b:	inc    esp
  41b92c:	xor    eax,eax
  41b92e:	add    edx,DWORD PTR [ebp+eax*1+0x20]
  41b932:	xor    DWORD PTR [ecx],0xee995695
  41b938:	inc    ebp
  41b939:	xchg   esp,eax
  41b93a:	mov    edi,0x710b426a
  41b93f:	add    ch,0xb0
  41b942:	iret   
  41b943:	fs aam 0xfc
  41b946:	iret   
  41b947:	push   edi
  41b948:	std    
  41b949:	inc    eax
  41b94a:	(bad)  
  41b94b:	retf   0x5e7d
  41b94e:	mov    WORD PTR ds:0xb4ff87c3,cs
  41b954:	mov    ebp,cs
  41b956:	rcr    bh,0x8a
  41b959:	pop    edi
  41b95a:	repz sbb DWORD PTR [si],esi
  41b95e:	xchg   esp,eax
  41b95f:	test   al,0xa5
  41b961:	jne    0x41b9dc
  41b963:	lahf   
  41b964:	push   ss
  41b965:	mov    ds:0x946e7f8a,al
  41b96a:	mov    esi,0xe9214d50
  41b96f:	fwait
  41b970:	loope  0x41b985
  41b972:	push   edx
  41b973:	jbe    0x41b9d7
  41b975:	dec    esi
  41b976:	movs   DWORD PTR es:[di],DWORD PTR gs:[si]
  41b979:	aas    
  41b97a:	jg     0x41b9ba
  41b97c:	ss adc eax,0x58ee58a4
  41b982:	ret    0x341b
  41b985:	adc    dh,dl
  41b987:	test   eax,0x3b340b3e
  41b98c:	jmp    0x1d00:0x9cf43e3
  41b993:	in     al,dx
  41b994:	pop    ebp
  41b995:	std    
  41b996:	xor    al,0x79
  41b998:	stc    
  41b999:	jg     0x41b94e
  41b99b:	and    DWORD PTR [ebp+0x6],edi
  41b99e:	test   eax,0x3e7df503
  41b9a3:	push   DWORD PTR [ebp+0x73]
  41b9a6:	jp     0x41b953
  41b9a8:	shr    DWORD PTR [ebx+0x7d5f8408],0xf4
  41b9af:	adc    edx,esi
  41b9b1:	in     al,0x25
  41b9b3:	pop    ds
  41b9b4:	ins    DWORD PTR es:[edi],dx
  41b9b5:	out    0x2d,eax
  41b9b7:	sub    DWORD PTR [ebx+ebx*4+0x1],esp
  41b9bb:	cmp    esp,DWORD PTR [ebx-0x7c]
  41b9be:	and    edi,DWORD PTR [esi]
  41b9c0:	and    eax,0x47d42bca
  41b9c5:	jne    0x41ba2f
  41b9c7:	jg     0x41b9d2
  41b9c9:	mov    bh,0x8d
  41b9cb:	enter  0x4752,0x11
  41b9cf:	inc    esp
  41b9d0:	mov    al,ds:0x8428fe66
  41b9d5:	sub    ebx,DWORD PTR [ebx]
  41b9d7:	out    dx,al
  41b9d8:	sbb    esp,DWORD PTR [edi+0x31]
  41b9db:	jns    0x41b9a1
  41b9dd:	or     ch,bh
  41b9df:	int3   
  41b9e0:	retf   
  41b9e1:	push   edx
  41b9e2:	(bad)  
  41b9e3:	stos   BYTE PTR es:[edi],al
  41b9e4:	dec    ebx
  41b9e5:	fcom   DWORD PTR [ecx]
  41b9e7:	sbb    esp,edx
  41b9e9:	dec    esp
  41b9ea:	or     DWORD PTR [edi+esi*1],ecx
  41b9ed:	pop    esi
  41b9ee:	cli    
  41b9ef:	mov    eax,0x2b6238a3
  41b9f4:	(bad)  
  41b9f5:	imul   ecx,DWORD PTR [edi],0x1e
  41b9f8:	mov    WORD PTR [eax+edx*8-0x70ac76d4],gs
  41b9ff:	and    ch,bh
  41ba01:	retf   
  41ba02:	cmp    al,0x1e
  41ba04:	ins    DWORD PTR es:[edi],dx
  41ba05:	shl    BYTE PTR [ecx+0x1d3c57c6],0xbf
  41ba0c:	mov    al,0xc5
  41ba0e:	jmp    0x77316f9d
  41ba13:	je     0x41b9dd
  41ba15:	enter  0xb3a,0xfc
  41ba19:	das    
  41ba1a:	ret    
  41ba1b:	ja     0x41ba3e
  41ba1d:	mov    edx,?
  41ba1f:	cmp    eax,0xd6eed9ab
  41ba24:	sar    BYTE PTR [esi+0x1e],1
  41ba27:	push   ss
  41ba28:	cs xchg esp,eax
  41ba2a:	clc    
  41ba2b:	cdq    
  41ba2c:	rcl    ch,1
  41ba2e:	push   ds
  41ba2f:	mov    al,ds:0x987ef5d7
  41ba34:	mov    ebx,DWORD PTR [ecx]
  41ba36:	jnp    0x41ba02
  41ba38:	pop    esi
  41ba39:	mov    dl,0xea
  41ba3b:	les    edi,FWORD PTR [ebp-0x591da5c]
  41ba41:	jle    0x41ba42
  41ba43:	pushf  
  41ba44:	sub    BYTE PTR [esi],0xc8
  41ba47:	jbe    0x41ba1a
  41ba49:	retf   0x2ff8
  41ba4c:	jg     0x41ba33
  41ba4e:	inc    esp
  41ba4f:	aad    0xe9
  41ba51:	push   ecx
  41ba52:	popf   
  41ba53:	and    DWORD PTR [ecx],0x27beae49
  41ba59:	ins    BYTE PTR es:[edi],dx
  41ba5a:	adc    dh,BYTE PTR [esp+ebp*8+0x59]
  41ba5e:	fdivr  QWORD PTR [ebx-0xf]
  41ba61:	jne    0x41bad9
  41ba63:	jmp    0xde8b:0x9834c67c
  41ba6a:	test   al,0x59
  41ba6c:	xchg   ebx,eax
  41ba6d:	sub    eax,0x52a4992b
  41ba72:	dec    BYTE PTR [esi+0x5d]
  41ba75:	loopne 0x41ba05
  41ba77:	aam    0xa5
  41ba79:	sub    DWORD PTR [esi-0x1a95ec93],esp
  41ba7f:	cli    
  41ba80:	push   ebx
  41ba81:	mov    cl,0x5c
  41ba83:	mov    ch,0x20
  41ba85:	into   
  41ba86:	mov    al,0xd3
  41ba88:	or     al,0x87
  41ba8a:	repnz cwde 
  41ba8c:	mov    esp,0x992f15a7
  41ba91:	repnz mov ah,bh
  41ba94:	or     DWORD PTR [esi-0x26],esi
  41ba97:	xor    al,0xcb
  41ba99:	das    
  41ba9a:	cmp    edi,DWORD PTR [esi+0x5a]
  41ba9d:	shl    DWORD PTR [edx+edi*1],0xfc
  41baa1:	dec    esi
  41baa2:	inc    edx
  41baa3:	pop    esp
  41baa4:	mov    BYTE PTR fs:[ebp+0x7a523b75],bl
  41baab:	inc    ebp
  41baac:	hlt    
  41baad:	fcmove st,st(7)
  41baaf:	dec    ebp
  41bab0:	jg     0x41ba91
  41bab2:	ret    
  41bab3:	push   es
  41bab4:	mov    ebx,0x7620c51f
  41bab9:	inc    ecx
  41baba:	mov    esi,0x29a22c93
  41babf:	sub    BYTE PTR [esi+0x228c69b0],dl
  41bac5:	and    BYTE PTR [esi-0x509edc79],cl
  41bacb:	mov    ecx,0xf26a9526
  41bad0:	xchg   esp,eax
  41bad1:	into   
  41bad2:	ret    
  41bad3:	or     eax,0xda682e33
  41bad8:	icebp  
  41bad9:	inc    eax
  41bada:	fldz   
  41badc:	inc    dl
  41bade:	jbe    0x41bb29
  41bae0:	lahf   
  41bae1:	mov    esp,0x4e95728a
  41bae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bae7:	ret    0x8067
  41baea:	sub    bl,BYTE PTR [ebx-0x46]
  41baed:	ss mov al,0xb1
  41baf0:	aad    0x93
  41baf2:	ja     0x41bb59
  41baf4:	and    BYTE PTR ds:0xc1e19a0,ah
  41bafa:	mov    esi,0x43a43e09
  41baff:	mov    cl,0x1f
  41bb01:	add    eax,0x3e8af5a4
  41bb06:	repnz xchg ebx,eax
  41bb08:	xlat   BYTE PTR ds:[ebx]
  41bb09:	jge    0x41bab9
  41bb0b:	stos   BYTE PTR es:[edi],al
  41bb0c:	push   eax
  41bb0d:	stc    
  41bb0e:	or     bl,BYTE PTR [ebx+0x78]
  41bb11:	dec    esp
  41bb12:	sub    eax,DWORD PTR [ecx]
  41bb14:	ret    
  41bb15:	mov    eax,ds:0x7b624327
  41bb1a:	rol    DWORD PTR [ebp-0x1555542b],cl
  41bb20:	push   0xfc0c0886
  41bb25:	fiadd  DWORD PTR [esi]
  41bb27:	leave  
  41bb28:	cmp    dl,bl
  41bb2a:	lahf   
  41bb2b:	cdq    
  41bb2c:	mov    edi,0x53f0ce08
  41bb31:	in     al,0x8f
  41bb33:	js     0x41bb1e
  41bb35:	cmp    DWORD PTR [edi],ecx
  41bb37:	pop    ds
  41bb38:	mov    cl,bh
  41bb3a:	div    BYTE PTR [edx+0xb]
  41bb3d:	leave  
  41bb3e:	pusha  
  41bb3f:	pop    ebp
  41bb41:	pop    eax
  41bb42:	xor    edx,edi
  41bb44:	push   esi
  41bb45:	xor    eax,0x6adb3fb5
  41bb4a:	or     DWORD PTR [ecx-0x2f],edx
  41bb4d:	or     DWORD PTR [ebx-0x7e79bdee],0x42
  41bb54:	jge    0x41bb87
  41bb56:	push   0xffffffbb
  41bb58:	push   es
  41bb59:	fwait
  41bb5a:	xchg   ebx,eax
  41bb5b:	rcr    BYTE PTR [eax+0x1cf9f6d6],0xb0
  41bb62:	push   edx
  41bb63:	xor    BYTE PTR cs:[esi+0x41],ch
  41bb67:	xor    ah,0x7e
  41bb6a:	loopne 0x41bb44
  41bb6c:	ficomp DWORD PTR [edx+0x28]
  41bb6f:	fsub   QWORD PTR [edx-0x428f4d6]
  41bb75:	loope  0x41bbc5
  41bb77:	loop   0x41bb22
  41bb79:	sbb    eax,0x351eda08
  41bb7e:	jmp    0x41bba0
  41bb80:	push   ebx
  41bb81:	add    DWORD PTR [edx-0xc],ecx
  41bb84:	imul   edx,DWORD PTR [ebx-0x2c3a7fd6],0xffffffe9
  41bb8b:	das    
  41bb8c:	jecxz  0x41bba0
  41bb8e:	pop    ecx
  41bb8f:	test   dl,0x85
  41bb92:	ins    BYTE PTR es:[edi],dx
  41bb93:	sub    eax,0x949bb2d6
  41bb98:	sbb    eax,0xce82497
  41bb9d:	jmp    0x41bc18
  41bb9f:	es in  eax,0x90
  41bba2:	repz xor dl,BYTE PTR [ebx+0x589f01b4]
  41bba9:	jg     0x41bb34
  41bbab:	inc    eax
  41bbac:	xchg   ecx,eax
  41bbad:	jge    0x41bb40
  41bbaf:	sbb    eax,0x98325b21
  41bbb4:	push   ss
  41bbb5:	sub    DWORD PTR [ebp-0x557ce481],eax
  41bbbb:	icebp  
  41bbbc:	pop    ss
  41bbbd:	(bad)  
  41bbbf:	stos   BYTE PTR es:[edi],al
  41bbc0:	arpl   WORD PTR [eax-0x35],si
  41bbc3:	mov    ebx,0x4469d4a5
  41bbc8:	xchg   DWORD PTR [ebx+ecx*4+0x45],ebx
  41bbcc:	dec    eax
  41bbcd:	sbb    BYTE PTR ds:0x5f0d2c0d,ch
  41bbd3:	add    BYTE PTR fs:[eax-0x573ac076],ch
  41bbda:	lahf   
  41bbdb:	sub    DWORD PTR [ebx+0x7f7072ae],ebp
  41bbe1:	cli    
  41bbe2:	jno    0x41bbe7
  41bbe4:	push   0xda6ac92
  41bbe9:	lds    ebx,FWORD PTR [ebp+ebp*4-0x60]
  41bbed:	nop
  41bbee:	iret   
  41bbef:	lds    esi,FWORD PTR [eax+0x1aea2f2d]
  41bbf5:	fwait
  41bbf6:	jecxz  0x41bc08
  41bbf8:	sub    ch,BYTE PTR [edi]
  41bbfa:	(bad)  
  41bbfb:	inc    esp
  41bbfc:	jmp    0x41bba3
  41bbfe:	pop    DWORD PTR [edx]
  41bc00:	dec    edx
  41bc01:	rol    DWORD PTR [edi],1
  41bc03:	ret    0x7e46
  41bc06:	(bad)  
  41bc08:	lods   al,BYTE PTR ds:[esi]
  41bc09:	mov    WORD PTR ds:0x5b58946c,?
  41bc0f:	js     0x41bc5c
  41bc11:	push   ebx
  41bc12:	loope  0x41bc0a
  41bc14:	pop    esi
  41bc15:	popa   
  41bc16:	dec    esp
  41bc17:	and    cl,BYTE PTR [esi]
  41bc19:	mov    ah,BYTE PTR [esi]
  41bc1b:	cli    
  41bc1c:	push   cs
  41bc1d:	mov    ah,0xff
  41bc1f:	inc    edi
  41bc20:	aas    
  41bc21:	xor    eax,0x50c67fd5
  41bc26:	dec    ebp
  41bc27:	add    bh,ah
  41bc29:	push   0x80667c82
  41bc2e:	inc    sp
  41bc30:	arpl   bp,sp
  41bc32:	ja     0x41bc76
  41bc34:	loop   0x41bcac
  41bc36:	cwde   
  41bc37:	dec    esp
  41bc38:	std    
  41bc39:	dec    esp
  41bc3a:	div    DWORD PTR [ebx]
  41bc3c:	addr16 and eax,edi
  41bc3f:	dec    edi
  41bc40:	xchg   ecx,eax
  41bc41:	je     0x41bc81
  41bc43:	or     ebx,DWORD PTR [edx-0x20]
  41bc46:	pop    ebp
  41bc47:	mov    edi,0x18ad5146
  41bc4c:	mov    ah,0x7d
  41bc4e:	sbb    bh,BYTE PTR [ecx+0x60]
  41bc51:	mov    WORD PTR [edi+0x24],cs
  41bc54:	cmp    esp,eax
  41bc56:	ret    0xe037
  41bc59:	(bad)  
  41bc5b:	and    ebp,DWORD PTR [ecx-0x1]
  41bc5e:	mov    ecx,0xcb3930b9
  41bc63:	xchg   ebx,eax
  41bc64:	xor    eax,ebp
  41bc66:	or     eax,0x1dabe43
  41bc6b:	adc    al,BYTE PTR cs:[ecx+0x46]
  41bc6f:	test   eax,0xa862f462
  41bc74:	pop    eax
  41bc75:	cmp    al,0x19
  41bc77:	outs   dx,DWORD PTR ds:[esi]
  41bc78:	(bad)  
  41bc79:	enter  0xf983,0x1a
  41bc7d:	mov    al,0xa8
  41bc7f:	jle    0x41bcdd
  41bc81:	adc    al,0xc5
  41bc83:	cwde   
  41bc84:	adc    BYTE PTR [ebp+0x509ad268],cl
  41bc8a:	xchg   ecx,eax
  41bc8b:	sub    DWORD PTR [edx],ebp
  41bc8d:	xor    eax,ebp
  41bc8f:	jmp    0x41bc1f
  41bc91:	add    al,0xe4
  41bc93:	jmp    0x41bcdf
  41bc95:	(bad)  
  41bc96:	and    al,0x4a
  41bc98:	add    ah,BYTE PTR [ebx]
  41bc9a:	retf   0x2632
  41bc9d:	rcr    BYTE PTR [esi-0x66],1
  41bca0:	or     DWORD PTR [ecx],ecx
  41bca2:	arpl   WORD PTR [esi],bx
  41bca4:	mov    edx,0xa2bad674
  41bca9:	jg     0x41bd23
  41bcab:	call   0x7ea7:0xb91b4394
  41bcb2:	je     0x41bcbd
  41bcb4:	jno    0x41bd27
  41bcb6:	es test eax,0x84bc11f0
  41bcbc:	xchg   esp,eax
  41bcbd:	loope  0x41bd02
  41bcbf:	cs push ecx
  41bcc1:	inc    eax
  41bcc2:	push   esp
  41bcc3:	into   
  41bcc4:	das    
  41bcc5:	jno    0x41bce2
  41bcc7:	lds    ebp,FWORD PTR [edi]
  41bcc9:	jne    0x41bd37
  41bccb:	mov    eax,0x1e1041b
  41bcd0:	push   ebp
  41bcd1:	xor    edi,DWORD PTR [esi+0x43a0303a]
  41bcd7:	lods   al,BYTE PTR ds:[esi]
  41bcd8:	add    BYTE PTR [eax],ch
  41bcda:	shr    DWORD PTR [edi+0x1134ee0f],0xd
  41bce1:	cmc    
  41bce2:	shl    DWORD PTR [edx-0x3f390a16],0xe8
  41bce9:	pushf  
  41bcea:	nop
  41bceb:	retf   0xb287
  41bcee:	iret   
  41bcef:	lahf   
  41bcf0:	fild   DWORD PTR [edi+0x37]
  41bcf3:	jmp    0xd84e:0xc8525bde
  41bcfa:	mov    ds:0xba794df,al
  41bcff:	call   0x5227ae28
  41bd04:	stc    
  41bd05:	sub    ah,BYTE PTR [ebp-0x13a2039b]
  41bd0b:	and    al,0xd3
  41bd0d:	mov    fs,WORD PTR [ecx]
  41bd0f:	mov    ch,0x8e
  41bd11:	push   cs
  41bd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd13:	fcom   st(0)
  41bd15:	hlt    
  41bd16:	push   ds
  41bd17:	fwait
  41bd18:	push   0xffffffdd
  41bd1a:	rcl    BYTE PTR [edi+0x10],0x74
  41bd1e:	fsub   QWORD PTR [edi]
  41bd20:	scas   al,BYTE PTR es:[edi]
  41bd21:	dec    esi
  41bd22:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd24:	inc    edi
  41bd25:	dec    ecx
  41bd26:	punpckhbw mm0,QWORD PTR [ebx-0x8]
  41bd2a:	cli    
  41bd2b:	stos   DWORD PTR es:[edi],eax
  41bd2c:	mov    bh,0x41
  41bd2e:	(bad)  
  41bd2f:	daa    
  41bd30:	sub    eax,0xc5c88569
  41bd35:	loope  0x41bd5c
  41bd37:	push   edx
  41bd38:	mov    edi,0xb57b5933
  41bd3d:	dec    edx
  41bd3e:	pop    es
  41bd3f:	pop    DWORD PTR [edi]
  41bd41:	lock imul edx,DWORD PTR [ebp+0x39],0xa35ceea0
  41bd49:	icebp  
  41bd4a:	sub    eax,0x713aee3b
  41bd4f:	mov    bh,0x9d
  41bd51:	jp     0x41bda2
  41bd53:	inc    eax
  41bd54:	xor    BYTE PTR [eax],bl
  41bd56:	mov    cl,0xe1
  41bd58:	mov    ecx,0xd1a0b385
  41bd5d:	(bad)  
  41bd5e:	call   0x9851dca1
  41bd63:	(bad)  
  41bd65:	xchg   ebx,eax
  41bd66:	mov    esi,0x87312f0c
  41bd6b:	xchg   ebp,ebx
  41bd6d:	sub    DWORD PTR [edi],edi
  41bd6f:	pop    ds
  41bd70:	xchg   esi,eax
  41bd71:	repnz add DWORD PTR [ebx+ebp*2],0xffffffb7
  41bd76:	mov    eax,ds:0x2da34b6f
  41bd7b:	cmp    eax,DWORD PTR [ebx-0x1c85e10d]
  41bd81:	mov    eax,ds:0x866562e1
  41bd86:	cmp    dl,BYTE PTR [esi+0x61749e00]
  41bd8c:	jmp    0x6b15:0x12e88475
  41bd93:	cmp    ch,BYTE PTR [edx-0x62ed6454]
  41bd99:	adc    dh,BYTE PTR [edi]
  41bd9b:	jge    0x41bdb5
  41bd9d:	jecxz  0x41bdd2
  41bd9f:	cmp    bl,BYTE PTR [edi+0x1e]
  41bda2:	out    dx,eax
  41bda3:	sub    DWORD PTR [ebx-0x41ac5235],esp
  41bda9:	fcmovb st,st(7)
  41bdab:	clc    
  41bdac:	div    BYTE PTR ds:0x1ce5f6a
  41bdb2:	add    BYTE PTR [edi-0x7065eb83],bh
  41bdb8:	mov    al,0xda
  41bdba:	mov    bl,0xd0
  41bdbc:	pop    edx
  41bdbd:	xor    BYTE PTR [eiz*1-0xa90aa6c],dh
  41bdc4:	push   ebx
  41bdc5:	xor    eax,0xd811694c
  41bdca:	xchg   esp,eax
  41bdcb:	outs   dx,DWORD PTR ds:[esi]
  41bdcc:	mov    ds:0xb5df7a19,eax
  41bdd1:	push   eax
  41bdd2:	or     ecx,eax
  41bdd4:	aas    
  41bdd5:	push   esi
  41bdd6:	jo     0x41bdfc
  41bdd8:	in     al,dx
  41bdd9:	and    BYTE PTR [ebx-0x10],dh
  41bddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bddd:	std    
  41bdde:	push   0x19b5576e
  41bde3:	inc    ebp
  41bde4:	inc    ecx
  41bde5:	mov    dl,0x6
  41bde7:	push   ds
  41bde8:	imul   edi,DWORD PTR [ebx],0x56e4d1d
  41bdee:	add    ch,BYTE PTR [ebp+eiz*1-0x60]
  41bdf2:	pop    ecx
  41bdf3:	hlt    
  41bdf4:	out    dx,eax
  41bdf5:	gs stc 
  41bdf7:	ins    BYTE PTR es:[edi],dx
  41bdf8:	add    DWORD PTR [ebx],edx
  41bdfa:	jmp    0x10d5b063
  41bdff:	mov    ebx,0x26527a81
  41be04:	mov    ds:0x3142fd1a,al
  41be09:	xchg   ebx,eax
  41be0a:	fs mov ebp,0x5bcd0b88
  41be10:	loopne 0x41be4f
  41be12:	push   0x78
  41be14:	fmul   QWORD PTR [eax]
  41be16:	bound  edx,QWORD PTR [eax+edi*8+0x65412247]
  41be1d:	cmp    al,0x54
  41be1f:	mov    esp,0x2fd05a53
  41be24:	sub    ch,BYTE PTR ds:0x49014e59
  41be2a:	(bad)  
  41be2b:	aas    
  41be2c:	fmul   DWORD PTR [ebp+0x75]
  41be2f:	imul   ecx,DWORD PTR [ebx-0x5e],0x643fc0a5
  41be36:	or     dl,BYTE PTR [ebx+0x44]
  41be39:	es retf 
  41be3b:	je     0x41bde6
  41be3d:	sti    
  41be3e:	or     esi,DWORD PTR [ecx+0x263d3870]
  41be44:	xchg   edx,eax
  41be45:	test   BYTE PTR [ecx-0x21],ch
  41be48:	std    
  41be49:	ds in  eax,0x4b
  41be4c:	push   ebp
  41be4d:	xchg   esp,eax
  41be4e:	mov    ds:0x82b6eb2a,al
  41be53:	je     0x41bed2
  41be55:	sahf   
  41be56:	mov    ds:0x814ce91f,al
  41be5b:	add    al,BYTE PTR [ebx+0x13e8372d]
  41be61:	std    
  41be62:	inc    ebx
  41be63:	sub    ebx,DWORD PTR [edx-0x43818d92]
  41be69:	call   0x3dc:0x5e7075c7
  41be70:	jge    0x41bdf9
  41be72:	popf   
  41be73:	dec    esi
  41be74:	icebp  
  41be75:	cmp    BYTE PTR [ebx-0x3d],dh
  41be78:	inc    eax
  41be79:	push   0x3d267b5a
  41be7e:	sbb    ebp,ebx
  41be80:	in     al,dx
  41be81:	aad    0x5c
  41be83:	adc    edi,esp
  41be85:	mov    eax,0x1ff3f327
  41be8a:	mov    cl,0x35
  41be8c:	push   esi
  41be8d:	in     al,dx
  41be8e:	add    eax,0xdb0af63e
  41be93:	dec    eax
  41be94:	(bad)  
  41be95:	mov    bh,0xaa
  41be97:	adc    BYTE PTR [ebx-0x2462de79],dh
  41be9d:	mov    dl,0xa5
  41be9f:	jns    0x41be69
  41bea1:	in     eax,0x5f
  41bea3:	mov    ds:0xbde18548,eax
  41bea8:	mov    eax,ds:0xc1f6a3db
  41bead:	cmp    al,0x4
  41beaf:	sbb    eax,0xf1349840
  41beb4:	outs   dx,BYTE PTR ds:[esi]
  41beb5:	and    bh,BYTE PTR [edi-0x6]
  41beb8:	xlat   BYTE PTR ds:[ebx]
  41beb9:	xor    DWORD PTR [ebx],eax
  41bebb:	xor    esi,ecx
  41bebd:	mov    edi,0xffcd8d08
  41bec2:	sub    edi,esi
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	sub    al,BYTE PTR [ecx-0x13]
  41bf73:	gs in  al,0x0
  41bf76:	jl     0x41bff3
  41bf78:	sbb    BYTE PTR [esi-0x4f778485],bl
  41bf7e:	call   0x27f917cd
  41bf83:	popf   
  41bf84:	xor    dl,BYTE PTR [ebp+0x7]
  41bf87:	xchg   esi,eax
  41bf88:	daa    
  41bf89:	(bad)  
  41bf8a:	push   ebp
  41bf8b:	cmc    
  41bf8c:	mov    ds:0x6cb94d67,eax
  41bf91:	sar    BYTE PTR [ebp+eax*1+0x17],1
  41bf95:	psadbw mm6,QWORD PTR [ebx+0x794def1b]
  41bf9c:	pushf  
  41bf9d:	mov    al,ds:0xefd42dd0
  41bfa2:	and    BYTE PTR [edi-0x61],cl
  41bfa5:	aas    
  41bfa6:	xor    BYTE PTR [esi-0x80],ch
  41bfa9:	in     eax,dx
  41bfaa:	mov    dh,0x51
  41bfac:	cmp    DWORD PTR [ecx-0x589aac11],0x6f
  41bfb3:	xchg   edx,eax
  41bfb4:	push   esp
  41bfb5:	cmc    
  41bfb6:	data16 aas 
  41bfb8:	sbb    bl,BYTE PTR [eax-0x46927157]
  41bfbe:	push   edi
  41bfbf:	popa   
  41bfc0:	inc    ebp
  41bfc1:	adc    ebx,eax
  41bfc3:	dec    esp
  41bfc4:	mov    esi,0x9068f59d
  41bfc9:	dec    edx
  41bfca:	mov    eax,DWORD PTR [edx-0x41]
  41bfcd:	gs xchg ecx,eax
  41bfcf:	enter  0xb450,0x10
  41bfd3:	cmp    eax,0xc098670d
  41bfd8:	push   edi
  41bfd9:	mov    ah,0xf5
  41bfdb:	js     0x41c018
  41bfdd:	mov    esp,?
  41bfdf:	add    DWORD PTR [eax-0x22],ebp
  41bfe2:	jmp    0x41bfe0
  41bfe4:	sub    al,0x2f
  41bfe6:	test   al,0xbe
  41bfe8:	dec    ebx
  41bfe9:	shr    DWORD PTR [ecx+edx*2],1
  41bfec:	in     al,dx
  41bfed:	out    dx,al
  41bfee:	fld    DWORD PTR [edi]
  41bff0:	push   ecx
  41bff1:	(bad)  [ebx-0x67]
  41bff4:	jg     0x41c011
  41bff6:	cdq    
  41bff7:	mov    edi,0x221a4f08
  41bffc:	add    cl,0x9c
  41bfff:	aad    0x27
  41c001:	loope  0x41bff6
  41c003:	bound  esi,QWORD PTR [esp+edi*8]
  41c006:	inc    eax
  41c007:	das    
  41c008:	ret    0xa441
  41c00b:	sbb    BYTE PTR [esi-0x58],0x88
  41c00f:	(bad)  
  41c010:	cmp    ch,BYTE PTR [edx]
  41c012:	mov    fs,WORD PTR [esi+0x2f]
  41c015:	jmp    FWORD PTR [esi]
  41c017:	push   esi
  41c018:	ficom  DWORD PTR [ebx]
  41c01a:	cmp    eax,0xeb5a7bdb
  41c01f:	jne    0x41c05a
  41c021:	(bad)  
  41c022:	cmc    
  41c023:	push   0x3
  41c025:	dec    edi
  41c026:	cdq    
  41c027:	jb     0x41bfc0
  41c029:	jl     0x41c018
  41c02b:	adc    eax,0x66c08e6e
  41c030:	inc    esi
  41c031:	data16 add dl,BYTE PTR [ecx+0x48]
  41c035:	adc    dl,BYTE PTR [ebp+ebx*4+0x33]
  41c039:	(bad)  
  41c03a:	fsub   QWORD PTR [edx+edx*8]
  41c03d:	mov    ch,0xad
  41c03f:	in     eax,0x5a
  41c041:	fabs   
  41c043:	retf   0x4f2c
  41c046:	jb     0x41bfd9
  41c048:	sbb    BYTE PTR [ebx+ecx*4],0xbe
  41c04c:	cmp    DWORD PTR ds:[ebp-0x8],ebx
  41c050:	cld    
  41c051:	int3   
  41c052:	jle    0x41c075
  41c054:	pop    ebx
  41c055:	lea    edi,[esi]
  41c057:	xor    BYTE PTR [ebx-0x5f9abd24],dh
  41c05d:	outs   dx,DWORD PTR ds:[esi]
  41c05e:	lea    ecx,ds:0x6a086cdd
  41c064:	adc    DWORD PTR ds:[ebp+0x26],esp
  41c068:	push   esi
  41c069:	mov    eax,0x7e8baab7
  41c06e:	sub    BYTE PTR [edx+0x3c5d8b14],0xb2
  41c075:	and    eax,0x8978dbd9
  41c07a:	inc    esp
  41c07b:	mov    ebp,0x82ca0258
  41c080:	ins    DWORD PTR es:[edi],dx
  41c081:	jl     0x41c040
  41c083:	in     al,dx
  41c084:	mov    bl,0x20
  41c086:	mov    eax,ds:0xea444e68
  41c08b:	dec    ebx
  41c08c:	or     eax,0x93cc0995
  41c091:	into   
  41c092:	fsub   DWORD PTR [eax]
  41c094:	push   ecx
  41c095:	xchg   ebx,eax
  41c096:	aaa    
  41c097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c098:	sbb    al,0xb1
  41c09a:	push   cs
  41c09b:	cmc    
  41c09c:	loop   0x41c112
  41c09e:	popa   
  41c09f:	lock lods al,BYTE PTR ds:[esi]
  41c0a1:	inc    edx
  41c0a2:	mov    esp,0xddb283ad
  41c0a7:	pop    ebx
  41c0a8:	js     0x41c052
  41c0aa:	jns    0x41c0a3
  41c0ac:	xchg   ecx,eax
  41c0ad:	adc    al,0xf3
  41c0af:	loope  0x41c04e
  41c0b1:	pop    edi
  41c0b2:	push   ebp
  41c0b3:	in     eax,dx
  41c0b4:	outs   dx,DWORD PTR ds:[esi]
  41c0b5:	mov    ?,WORD PTR [ebx+ebx*1-0x68cb9b24]
  41c0bc:	cli    
  41c0bd:	ret    0x1c8d
  41c0c0:	pushf  
  41c0c1:	sub    edx,DWORD PTR [edi-0x7e1bcc7]
  41c0c7:	sub    BYTE PTR [edx+0x30],bl
  41c0ca:	push   edi
  41c0cb:	mov    ebx,0xb67262ce
  41c0d0:	cmp    al,0xe2
  41c0d2:	sti    
  41c0d3:	call   0xa56389e5
  41c0d8:	inc    ebp
  41c0d9:	push   es
  41c0da:	and    eax,0x1907df47
  41c0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e0:	mul    DWORD PTR [esi]
  41c0e2:	pop    ebp
  41c0e3:	push   ds
  41c0e4:	mov    ds:0x82c33f9b,al
  41c0e9:	jmp    0x6cfc:0x4a513af0
  41c0f0:	pop    edi
  41c0f1:	mov    ch,0x2b
  41c0f3:	retf   0x87e4
  41c0f6:	mov    WORD PTR [ebx-0x7e4a4c22],ds
  41c0fc:	inc    eax
  41c0fd:	(bad)  
  41c0fe:	xor    ecx,esi
  41c100:	mov    al,ds:0x5b90463e
  41c105:	ss add al,0xe6
  41c108:	add    BYTE PTR [eax-0x469adc34],0x96
  41c10f:	bound  ecx,QWORD PTR [ebx-0x1c]
  41c112:	sub    cl,BYTE PTR [esi+0x66801054]
  41c118:	pop    es
  41c119:	mov    ebp,0x41fd8c42
  41c11e:	cdq    
  41c11f:	mov    dh,0x19
  41c121:	into   
  41c122:	loopne 0x41c112
  41c124:	or     edi,ebp
  41c126:	mov    dh,0xd5
  41c128:	jle    0x41c10a
  41c12a:	mov    al,ds:0xd0e3b022
  41c12f:	sbb    edx,ecx
  41c131:	mov    ah,0x7e
  41c133:	push   0xa
  41c135:	mov    ch,0x61
  41c137:	ins    DWORD PTR es:[edi],dx
  41c138:	cmp    al,bl
  41c13a:	xchg   edi,eax
  41c13b:	pop    ecx
  41c13c:	iret   
  41c13d:	sub    al,0x22
  41c13f:	ja     0x41c169
  41c141:	lea    ecx,[ebx+ebp*8-0x25882c2e]
  41c148:	pop    edx
  41c149:	and    DWORD PTR [edx-0x34],ebx
  41c14c:	mov    ds:0xd434dbdf,eax
  41c151:	mov    eax,0x2a33a8
  41c156:	mov    ecx,0x3dc4dfc1
  41c15b:	sbb    dl,BYTE PTR [edi+ecx*2]
  41c15e:	mov    esi,0x2272d5a0
  41c163:	sbb    esi,DWORD PTR ds:0x5aaeb5b3
  41c169:	popf   
  41c16a:	pop    ecx
  41c16b:	adc    BYTE PTR [edi+0x67],cl
  41c16e:	mov    ds:0x6e956a67,eax
  41c173:	or     ecx,DWORD PTR [esi+0x45]
  41c176:	call   0xac186641
  41c17b:	and    bl,BYTE PTR [ecx+0x5f67f92b]
  41c181:	xor    al,0x46
  41c183:	jl     0x41c188
  41c185:	fs scas eax,DWORD PTR es:[edi]
  41c187:	outs   dx,DWORD PTR ds:[esi]
  41c188:	fstp   TBYTE PTR [eax+0x22]
  41c18b:	mov    al,0x12
  41c18d:	out    0xed,al
  41c18f:	aaa    
  41c190:	jg     0x41c1e1
  41c192:	ins    DWORD PTR es:[edi],dx
  41c193:	div    DWORD PTR [edx+0x18]
  41c196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c197:	add    ch,bl
  41c199:	scas   al,BYTE PTR es:[edi]
  41c19a:	popa   
  41c19b:	test   eax,0xec80e3e0
  41c1a0:	or     DWORD PTR [edi-0x56095936],ebp
  41c1a6:	test   BYTE PTR [ecx+0x1d9580a7],bl
  41c1ac:	inc    eax
  41c1ad:	popa   
  41c1ae:	sub    DWORD PTR [edx],esp
  41c1b0:	aas    
  41c1b1:	xchg   esi,eax
  41c1b2:	jmp    0x3bde64c5
  41c1b7:	pop    ebx
  41c1b8:	jns    0x41c1d2
  41c1ba:	fimul  WORD PTR [ebx-0x4ffb5cf9]
  41c1c0:	sub    esp,ebx
  41c1c2:	(bad)  
  41c1c3:	fmul   QWORD PTR [ebx+0x541433a6]
  41c1c9:	cwde   
  41c1ca:	cmp    al,0xcb
  41c1cc:	inc    esp
  41c1cd:	shr    BYTE PTR [esi-0x4e6c5679],1
  41c1d3:	sti    
  41c1d4:	jns    0x41c186
  41c1d6:	daa    
  41c1d7:	jecxz  0x41c1dc
  41c1d9:	mov    bl,0x83
  41c1db:	ret    
  41c1dc:	fbstp  TBYTE PTR [edx]
  41c1de:	pop    edx
  41c1df:	cmp    BYTE PTR [edi],al
  41c1e1:	pusha  
  41c1e2:	push   esp
  41c1e3:	and    al,0xfa
  41c1e5:	sbb    DWORD PTR [eax-0x3fd1aa67],eax
  41c1eb:	pop    ecx
  41c1ec:	sub    eax,0x7729dbea
  41c1f1:	and    al,0x8
  41c1f3:	cmp    ecx,DWORD PTR ds:0x3d1b10f7
  41c1f9:	ret    0xe3a2
  41c1fc:	cmp    cl,BYTE PTR [edx]
  41c1fe:	ins    BYTE PTR es:[edi],dx
  41c1ff:	cmp    eax,0xa3a709fa
  41c204:	xor    al,0xf9
  41c206:	dec    ebx
  41c207:	les    edx,FWORD PTR [ebx]
  41c209:	cld    
  41c20a:	push   ebp
  41c20b:	adc    ch,BYTE PTR [ecx]
  41c20d:	fst    DWORD PTR [ebx-0x3030876a]
  41c213:	jnp    0x41c1fe
  41c215:	mov    cl,0x83
  41c217:	test   BYTE PTR [eax+0x71ac1ba5],ch
  41c21d:	ins    DWORD PTR es:[edi],dx
  41c21e:	outs   dx,BYTE PTR ds:[esi]
  41c21f:	xchg   edx,eax
  41c220:	dec    eax
  41c221:	loopne 0x41c1f2
  41c223:	shl    bl,cl
  41c225:	shl    BYTE PTR [eax],1
  41c227:	shl    BYTE PTR [ecx+0x76a4a089],1
  41c22d:	out    0xf3,eax
  41c22f:	test   eax,0x99d4ab11
  41c234:	sub    al,0xc1
  41c236:	sub    BYTE PTR [edx+esi*8-0x3ee3759b],dl
  41c23d:	push   0xfffffffb
  41c23f:	mov    esp,DWORD PTR [ecx]
  41c241:	mov    BYTE PTR ds:0x3b0d3e1,ch
  41c247:	loopne 0x41c2af
  41c249:	fs inc ebp
  41c24b:	retf   
  41c24c:	out    dx,eax
  41c24d:	push   ss
  41c24e:	and    esp,DWORD PTR [esi]
  41c250:	and    eax,0xad38d443
  41c255:	or     esp,DWORD PTR [esp+eax*2-0x362ec747]
  41c25c:	das    
  41c25d:	int    0x17
  41c25f:	pop    eax
  41c260:	add    ah,cl
  41c262:	dec    esp
  41c263:	outs   dx,BYTE PTR ds:[esi]
  41c264:	imul   eax,DWORD PTR [esi-0x6e59df10],0xfffffff0
  41c26b:	xor    DWORD PTR [ebp-0x57f706ad],edi
  41c271:	push   edx
  41c272:	sub    edx,0x5765e1
  41c278:	fistp  DWORD PTR [edi]
  41c27a:	out    0xaf,eax
  41c27c:	xchg   edx,eax
  41c27d:	jae    0x41c2c8
  41c27f:	int    0x52
  41c281:	cli    
  41c282:	and    BYTE PTR [esi+0x7d17b619],0x76
  41c289:	retf   
  41c28a:	in     eax,dx
  41c28b:	adc    eax,0xebec8b61
  41c290:	jg     0x41c281
  41c292:	cdq    
  41c293:	sub    DWORD PTR [esi-0x4],0x3e17cce3
  41c29a:	(bad)  
  41c29b:	(bad)  
  41c29c:	xor    dh,ah
  41c29e:	daa    
  41c29f:	in     eax,dx
  41c2a0:	and    eax,0x1c371462
  41c2a5:	push   edi
  41c2a6:	mov    ds:0xde15a49e,eax
  41c2ab:	mov    eax,0xdc35a797
  41c2b0:	in     eax,dx
  41c2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b2:	xor    eax,0xa8cb7d0
  41c2b7:	popf   
  41c2b8:	ins    DWORD PTR es:[edi],dx
  41c2b9:	mov    ebx,DWORD PTR [ecx+ecx*4+0x4e]
  41c2bd:	jb     0x41c2c7
  41c2bf:	fcmovu st,st(0)
  41c2c1:	mov    WORD PTR [ecx+eax*2+0x41bfccb5],ds
  41c2c8:	loope  0x41c27a
  41c2ca:	dec    esi
  41c2cb:	imul   ebp,ebp,0x3774793d
  41c2d1:	sbb    BYTE PTR [ebx+edx*8+0x1abfca66],0xc3
  41c2d9:	stos   BYTE PTR es:[edi],al
  41c2da:	cmc    
  41c2db:	mov    al,ds:0x9ca745a4
  41c2e0:	outs   dx,BYTE PTR ds:[esi]
  41c2e1:	inc    ecx
  41c2e2:	(bad)  
  41c2e3:	pop    ebx
  41c2e4:	mov    edi,0x603d6cff
  41c2e9:	pop    edi
  41c2ea:	jae    0x41c285
  41c2ec:	or     ebx,DWORD PTR [eax+0x62d7d86b]
  41c2f2:	jle    0x41c2b7
  41c2f4:	outs   dx,DWORD PTR ds:[esi]
  41c2f5:	mov    eax,ds:0x584f860a
  41c2fa:	and    BYTE PTR [edi+0x7c684d41],bl
  41c300:	adc    DWORD PTR [esi],ebx
  41c302:	add    ah,0xf9
  41c305:	leave  
  41c306:	push   esi
  41c307:	test   DWORD PTR [ecx+0x4d],ecx
  41c30a:	jne    0x41c37c
  41c30c:	lock imul esi,esp,0x623079c6
  41c313:	add    edi,esp
  41c315:	xor    BYTE PTR [edx+ebx*2],0xc8
  41c319:	cs sub eax,0x4cbd9272
  41c31f:	stos   DWORD PTR es:[edi],eax
  41c320:	cmp    BYTE PTR [ebp-0x14146405],al
  41c326:	pop    ds
  41c327:	or     BYTE PTR [ebx+0x9],al
  41c32a:	out    dx,eax
  41c32b:	daa    
  41c32c:	xchg   edx,eax
  41c32d:	retf   0xd6bc
  41c330:	mov    esi,0xfecfcb10
  41c335:	dec    edi
  41c336:	test   DWORD PTR [edi+0x228977f],esp
  41c33c:	lock sbb al,0xe5
  41c33f:	xor    dh,BYTE PTR [ebx]
  41c341:	sar    BYTE PTR [edi+ebp*1],0x2e
  41c345:	imul   ebx,DWORD PTR [ebx+0x18],0x4
  41c349:	aaa    
  41c34a:	mov    ebx,esi
  41c34c:	pushf  
  41c34d:	xchg   ebx,eax
  41c34e:	add    ebp,ebp
  41c350:	(bad)  
  41c351:	pop    eax
  41c352:	sbb    al,0xc7
  41c354:	mov    dl,0xb8
  41c356:	ins    DWORD PTR es:[edi],dx
  41c357:	pop    dx
  41c359:	out    dx,al
  41c35a:	test   BYTE PTR [eax],0xa0
  41c35d:	adc    bh,BYTE PTR [esi+ebp*4]
  41c360:	cdq    
  41c361:	inc    edi
  41c362:	or     DWORD PTR [esp+ecx*4+0x4acf1f5a],eax
  41c369:	sbb    al,dl
  41c36b:	sub    DWORD PTR [ebx+0x61ddf3d3],edi
  41c371:	cmp    BYTE PTR [eax+edi*4],ch
  41c374:	jbe    0x41c2fc
  41c376:	xor    eax,0x6aa16fbf
  41c37b:	fnstenv [ebx+0x22]
  41c37e:	les    eax,FWORD PTR [ebx+edx*1]
  41c381:	fs rcr bl,1
  41c384:	push   0x153c232e
  41c389:	or     DWORD PTR [ebp-0x7edb6714],ecx
  41c38f:	sbb    esi,edi
  41c391:	(bad)  
  41c392:	push   es
  41c393:	imul   ecx,DWORD PTR ds:0xf62c224f,0x83e3d711
  41c39d:	test   DWORD PTR [esi+eax*4-0x2e],ebx
  41c3a1:	cmc    
  41c3a2:	mov    al,ds:0xa6dc6e91
  41c3a7:	icebp  
  41c3a8:	mov    ds:0xd38c8c0c,al
  41c3ad:	dec    esi
  41c3ae:	jb     0x41c3f4
  41c3b0:	and    cl,bl
  41c3b2:	jmp    0x41c35f
  41c3b4:	cwde   
  41c3b5:	or     BYTE PTR [edi+0x5105eeae],0xb8
  41c3bc:	in     al,dx
  41c3bd:	pop    esi
  41c3be:	mov    ebp,?
  41c3c0:	bound  edx,QWORD PTR [esi+0x71]
  41c3c3:	push   ds
  41c3c4:	fwait
  41c3c5:	test   DWORD PTR [edi+0x59],esi
  41c3c8:	add    BYTE PTR [eax],dh
  41c3ca:	sti    
  41c3cb:	or     al,0x2e
  41c3cd:	mov    eax,ds:0x635c729a
  41c3d2:	jno    0x41c37d
  41c3d4:	dec    esi
  41c3d5:	lods   al,BYTE PTR ds:[esi]
  41c3d6:	add    eax,DWORD PTR [esp+edi*2]
  41c3d9:	imul   esp,DWORD PTR [edx-0x76],0x29d617e0
  41c3e0:	call   0x8c1f:0x66045dcf
  41c3e7:	test   DWORD PTR [ebp-0x48],0x3ee825ae
  41c3ee:	das    
  41c3ef:	push   0x45a5aebb
  41c3f4:	sbb    DWORD PTR [esi],ebp
  41c3f6:	mov    edi,0xdf1347af
  41c3fb:	mov    eax,ds:0x58428e37
  41c400:	xchg   edi,eax
  41c401:	rcl    DWORD PTR [edx],1
  41c403:	sbb    DWORD PTR [ecx-0x3929b89f],eax
  41c409:	cld    
  41c40a:	lods   eax,DWORD PTR ds:[esi]
  41c40b:	das    
  41c40c:	fs das 
  41c40e:	mov    ax,ds:0x48b39776
  41c414:	adc    ecx,DWORD PTR [ecx]
  41c416:	popf   
  41c417:	mov    ah,0x4f
  41c419:	fnsave [ebx+eiz*1]
  41c41c:	pop    edi
  41c41d:	add    ebp,ebx
  41c41f:	xchg   esp,eax
  41c420:	in     eax,dx
  41c421:	add    al,0x7
  41c423:	adc    DWORD PTR [eax+0x4],esi
  41c426:	add    ecx,ebx
  41c428:	div    DWORD PTR [ebx+ebp*4+0x3cfaaa37]
  41c42f:	and    al,0xfc
  41c431:	es ret 0x8477
  41c435:	jmp    0x41c3f6
  41c437:	out    dx,al
  41c438:	int    0xca
  41c43a:	das    
  41c43b:	(bad)  
  41c43c:	dec    bh
  41c43e:	sub    edx,DWORD PTR [ecx-0x1aec621c]
  41c444:	lods   eax,DWORD PTR ds:[esi]
  41c445:	xor    ah,ch
  41c447:	stos   DWORD PTR es:[edi],eax
  41c448:	mov    DWORD PTR [esi-0x9d58a65],ecx
  41c44e:	in     eax,0xf
  41c450:	call   FWORD PTR [ebx+0x78c2f276]
  41c456:	test   al,0x10
  41c458:	mov    eax,0x78496a44
  41c45d:	sbb    DWORD PTR [ebx+0x2099f44c],esp
  41c463:	rol    DWORD PTR [ebx-0x27a3aa32],0xa3
  41c46a:	cli    
  41c46b:	nop
  41c46c:	pop    edx
  41c46d:	and    al,0xb2
  41c46f:	mov    esp,0x983c681f
  41c474:	push   eax
  41c475:	retf   
  41c476:	cdq    
  41c477:	mov    ds:0x98570eba,eax
  41c47c:	shl    BYTE PTR [ecx],0x46
  41c47f:	mov    dl,0x18
  41c481:	jl     0x41c432
  41c483:	sub    bh,BYTE PTR [edi-0x34]
  41c486:	test   al,0x5b
  41c488:	out    dx,al
  41c489:	mov    ebp,ebp
  41c48b:	xchg   dl,ch
  41c48d:	cdq    
  41c48e:	shr    BYTE PTR [ecx],1
  41c490:	cmp    eax,0xa8575ac
  41c495:	xor    BYTE PTR [esi-0x208df7b1],cl
  41c49b:	add    al,0x8d
  41c49d:	test   eax,0xac707c2c
  41c4a2:	ror    DWORD PTR [edx],1
  41c4a4:	add    al,0x2e
  41c4a6:	ins    BYTE PTR es:[edi],dx
  41c4a7:	stc    
  41c4a8:	inc    edx
  41c4a9:	(bad)  
  41c4aa:	out    dx,eax
  41c4ab:	sub    al,0x79
  41c4ad:	add    eax,0x25c8d99
  41c4b2:	add    al,0xe2
  41c4b4:	addr16 sbb edi,0x6c324347
  41c4bb:	or     DWORD PTR [esi+eiz*2],edi
  41c4be:	push   es
  41c4bf:	int    0x28
  41c4c1:	test   eax,0xd412d295
  41c4c6:	lock jg 0x41c4f4
  41c4c9:	ret    
  41c4ca:	adc    bl,BYTE PTR [esi]
  41c4cc:	les    edx,FWORD PTR [ebx+eax*4]
  41c4cf:	or     cl,0x86
  41c4d2:	ret    
  41c4d3:	or     DWORD PTR [ebx+0x43],edx
  41c4d6:	mov    al,0x2d
  41c4d8:	sbb    ebp,0xffffffec
  41c4db:	jl     0x41c530
  41c4dd:	jbe    0x41c4a7
  41c4df:	nop
  41c4e0:	sbb    BYTE PTR [edx-0x2b],0xe6
  41c4e4:	or     al,0x5b
  41c4e6:	jne    0x41c502
  41c4e8:	push   ebp
  41c4e9:	pop    ss
  41c4ea:	mov    ecx,0x4172acbf
  41c4ef:	lea    edx,[ebp+ebx*8+0x6e]
  41c4f3:	jge    0x41c515
  41c4f5:	jbe    0x41c55d
  41c4f7:	cmp    esi,DWORD PTR [edx+0x1f886db7]
  41c4fd:	cli    
  41c4fe:	cs jmp 0xed05:0xe83d1dfa
  41c506:	mov    bh,0xc8
  41c508:	adc    BYTE PTR ds:0xd40e0d8,0xbe
  41c50f:	fsubr  QWORD PTR [ecx+esi*4]
  41c512:	imul   ebp,DWORD PTR [esi+0x228f745f],0xffffffa6
  41c519:	dec    esi
  41c51a:	out    0x75,al
  41c51c:	and    dh,BYTE PTR [edi-0xfec3630]
  41c522:	outs   dx,DWORD PTR ds:[esi]
  41c523:	adc    ebp,DWORD PTR [edi-0x65]
  41c526:	dec    ecx
  41c527:	sbb    edx,ecx
  41c529:	and    ebp,ebx
  41c52b:	pusha  
  41c52c:	fisttp WORD PTR [ecx]
  41c52e:	enter  0x2381,0x21
  41c532:	push   0x376ab751
  41c537:	ffree  st(7)
  41c539:	dec    eax
  41c53a:	out    dx,eax
  41c53b:	jp     0x41c531
  41c53d:	jno    0x41c4ce
  41c53f:	xchg   ebx,eax
  41c540:	mov    WORD PTR [ebx+ecx*1+0x464ea92c],ds
  41c547:	jae    0x41c563
  41c549:	dec    DWORD PTR [edi-0x33]
  41c54c:	(bad)  
  41c54d:	dec    edx
  41c54e:	mov    bl,0xe2
  41c550:	sbb    BYTE PTR [edx-0x24],bh
  41c553:	ja     0x41c5b6
  41c555:	neg    DWORD PTR [ebx]
  41c557:	mov    dh,0x34
  41c559:	daa    
  41c55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c55b:	push   cs
  41c55c:	cmp    edx,DWORD PTR [ebx+0x7b06ff32]
  41c562:	stos   DWORD PTR es:[edi],eax
  41c563:	mov    cl,0xa8
  41c565:	out    0xf4,al
  41c567:	xor    al,0x52
  41c569:	jle    0x41c553
  41c56b:	mov    DWORD PTR [esi+0x7a],esi
  41c56e:	dec    edx
  41c56f:	mov    BYTE PTR [ebx-0x658facd4],dl
  41c575:	test   DWORD PTR fs:[esi+0x31],ebx
  41c579:	je     0x41c5f3
  41c57b:	jl     0x41c5d6
  41c57d:	lods   al,BYTE PTR ds:[esi]
  41c57e:	pop    ds
  41c57f:	push   ecx
  41c580:	or     ebx,edi
  41c582:	sar    BYTE PTR [eax],1
  41c584:	cmp    esi,esp
  41c586:	inc    ecx
  41c587:	jns    0x41c58c
  41c589:	sahf   
  41c58a:	das    
  41c58b:	ja     0x41c550
  41c58d:	lods   eax,DWORD PTR ds:[esi]
  41c58e:	sahf   
  41c58f:	jp     0x41c568
  41c591:	pop    es
  41c592:	mov    ebx,0xf1a88f5c
  41c597:	ins    BYTE PTR es:[edi],dx
  41c598:	xor    eax,0xf10ebced
  41c59d:	cmp    ecx,DWORD PTR [edi]
  41c59f:	nop
  41c5a0:	sub    edx,DWORD PTR [ebp-0x437d171d]
  41c5a6:	hlt    
  41c5a7:	aam    0xcb
  41c5a9:	push   ecx
  41c5aa:	cmp    BYTE PTR [esp+ebx*4],dl
  41c5ad:	jns    0x41c61f
  41c5af:	iret   
  41c5b0:	dec    BYTE PTR [ebx]
  41c5b2:	fidivr WORD PTR [edi+0x524623af]
  41c5b8:	jmp    0x41c587
  41c5ba:	dec    esp
  41c5bb:	pop    ss
  41c5bc:	sub    bh,0x97
  41c5bf:	prefetch BYTE PTR [edi+0x32]
  41c5c3:	int    0xdb
  41c5c5:	pusha  
  41c5c6:	adc    al,0xd1
  41c5c8:	sub    ch,BYTE PTR [eax+0x69]
  41c5cb:	scas   al,BYTE PTR es:[edi]
  41c5cc:	mov    eax,DWORD PTR [esi+0x7c13c0aa]
  41c5d2:	mov    cl,bl
  41c5d4:	pop    edi
  41c5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d6:	pop    edi
  41c5d7:	loope  0x41c630
  41c5d9:	xchg   esp,eax
  41c5da:	adc    al,0x89
  41c5dc:	scas   al,BYTE PTR es:[edi]
  41c5dd:	scas   eax,DWORD PTR es:[edi]
  41c5de:	sub    ch,BYTE PTR [edi-0x73]
  41c5e1:	adc    ebp,ebp
  41c5e3:	ins    BYTE PTR es:[edi],dx
  41c5e4:	jp     0x41c5ff
  41c5e6:	jg     0x41c5c1
  41c5e8:	and    ecx,DWORD PTR [ebp+0x51307b0d]
  41c5ee:	dec    ebx
  41c5ef:	ret    0x9687
  41c5f2:	add    al,0x9
  41c5f4:	cmp    dh,BYTE PTR [ebx-0x67048d99]
  41c5fa:	out    dx,eax
  41c5fb:	sbb    dl,BYTE PTR [eax]
  41c5fd:	add    DWORD PTR [ebx+edx*4+0x1f],ebx
  41c601:	cmp    ch,BYTE PTR [ecx+eax*4]
  41c604:	(bad)  
  41c605:	loopne 0x41c593
  41c607:	mov    ah,0x7c
  41c609:	jp     0x41c5ee
  41c60b:	aas    
  41c60c:	add    eax,0x11fdcdf0
  41c611:	out    0x21,al
  41c613:	bound  edx,QWORD PTR [edx*8-0x15119576]
  41c61a:	mov    ecx,0x1e99ca92
  41c61f:	out    dx,al
  41c620:	xchg   DWORD PTR [eax-0x6d592136],eax
  41c626:	fsubr  DWORD PTR [ecx]
  41c628:	push   ecx
  41c629:	call   0xd24a:0xb94e2a9f
  41c630:	push   edi
  41c631:	inc    esp
  41c632:	mov    ch,0xe7
  41c634:	in     eax,0xc4
  41c636:	xlat   BYTE PTR ds:[ebx]
  41c637:	and    al,0xca
  41c639:	and    DWORD PTR [edx+0x24a8ad73],esp
  41c63f:	jb     0x41c5e0
  41c641:	xor    dl,0xb3
  41c644:	loopne 0x41c65c
  41c646:	ins    DWORD PTR es:[edi],dx
  41c647:	adc    bh,cl
  41c649:	mov    al,0x8e
  41c64b:	mov    ds:0x4199328,eax
  41c650:	iret   
  41c651:	mov    dl,0xce
  41c653:	adc    al,0x9e
  41c655:	cli    
  41c656:	mov    edi,0xdea3b6b
  41c65b:	sub    DWORD PTR [esi+0x3299f1cf],esi
  41c661:	jne    0x41c64d
  41c663:	push   ds
  41c664:	loopne 0x41c60c
  41c666:	xchg   ebx,eax
  41c667:	dec    ebx
  41c668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c669:	dec    eax
  41c66a:	mov    eax,ds:0x3e2f2937
  41c66f:	test   eax,0xd6319ba4
  41c674:	pushf  
  41c675:	scas   al,BYTE PTR es:[edi]
  41c676:	mov    dh,0xc5
  41c678:	in     al,0xf4
  41c67a:	xchg   esp,eax
  41c67b:	cmp    ebp,ebx
  41c67d:	pop    ds
  41c67e:	dec    edi
  41c67f:	mov    ebx,0xcd8fe63e
  41c684:	repnz dec eax
  41c686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c687:	(bad)  
  41c688:	jo     0x41c69b
  41c68a:	mov    cl,0x3d
  41c68c:	les    esi,FWORD PTR ss:[ecx+ebx*8-0x405c1b49]
  41c694:	cmp    eax,0xcaddcc75
  41c699:	xlat   BYTE PTR ds:[ebx]
  41c69a:	sub    ah,BYTE PTR [edi+0xb1e96f6]
  41c6a0:	leave  
  41c6a1:	mov    WORD PTR [edi+0x91ed7ce],?
  41c6a7:	cmp    al,0xd5
  41c6a9:	mov    dl,0x32
  41c6ab:	and    DWORD PTR [edi-0x68],ecx
  41c6ae:	cmp    eax,0x4cec1bcc
  41c6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6b4:	int3   
  41c6b5:	mov    BYTE PTR [ebx*2-0x51dd6de],ch
  41c6bc:	dec    esi
  41c6bd:	mov    ds:0x5822e02c,eax
  41c6c2:	(bad)  
  41c6c3:	leave  
  41c6c4:	mov    ecx,0xf092e71f
  41c6c9:	in     al,0xb8
  41c6cb:	add    eax,0x707f4f29
  41c6d0:	test   DWORD PTR [edx-0x4d],esi
  41c6d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d4:	add    esi,ecx
  41c6d6:	xchg   esp,eax
  41c6d7:	jmp    0x41c6e5
  41c6d9:	gs dec ebx
  41c6db:	cwde   
  41c6dc:	ins    DWORD PTR es:[edi],dx
  41c6dd:	out    0x60,eax
  41c6df:	adc    bh,BYTE PTR [eax+0x1cfda3c4]
  41c6e5:	scas   eax,DWORD PTR es:[edi]
  41c6e6:	popa   
  41c6e7:	or     ch,cl
  41c6e9:	cmovl  esi,ebp
  41c6ec:	sub    eax,0x395c1047
  41c6f1:	retf   0x3fa6
  41c6f4:	neg    DWORD PTR [esi]
  41c6f6:	push   ebp
  41c6f7:	fwait
  41c6f8:	and    ah,ch
  41c6fa:	xchg   ebx,eax
  41c6fb:	fwait
  41c6fc:	fwait
  41c6fd:	in     eax,0x7e
  41c6ff:	arpl   WORD PTR [esi+0x32ab48b7],sp
  41c705:	or     bh,BYTE PTR ds:0x50da492f
  41c70b:	cmp    BYTE PTR ds:0xd532200,dl
  41c711:	jne    0x41c6b0
  41c713:	cmc    
  41c714:	adc    BYTE PTR [ebx+edi*2],dh
  41c717:	dec    edx
  41c718:	cwde   
  41c719:	in     eax,0x2e
  41c71b:	fs inc eax
  41c71d:	mov    bh,0x33
  41c71f:	jb     0x41c724
  41c721:	(bad)  [ebx-0x336d8b2c]
  41c727:	adc    eax,0x5e199820
  41c72c:	fiadd  DWORD PTR [ecx+0x11]
  41c72f:	mov    edi,0xf6395db3
  41c734:	std    
  41c735:	not    BYTE PTR [ebx-0x63]
  41c738:	cwde   
  41c739:	loop   0x41c6d5
  41c73b:	loope  0x41c768
  41c73d:	bound  ebp,QWORD PTR [ecx]
  41c73f:	daa    
  41c740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c741:	mov    DWORD PTR [esi-0x4085fff5],ebp
  41c747:	ror    DWORD PTR [ecx+0x24],1
  41c74a:	and    eax,0x190f8529
  41c74f:	add    al,0xda
  41c751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c752:	jnp    0x41c704
  41c754:	ret    
  41c755:	sbb    DWORD PTR [edi],edi
  41c757:	pop    ds
  41c758:	fldl2e 
  41c75a:	mov    al,ds:0x1c586de9
  41c75f:	fdiv   DWORD PTR [edx]
  41c761:	adc    DWORD PTR [ebx+ebp*2-0x6a],esi
  41c765:	iret   
  41c766:	out    dx,al
  41c767:	sahf   
  41c768:	sbb    BYTE PTR [esi-0x35],al
  41c76b:	pop    es
  41c76c:	mov    ds:0x1fe8c06e,al
  41c771:	ret    0x63f9
  41c774:	mov    ecx,0x85b9b29b
  41c779:	and    DWORD PTR [esi+0x17],0x4ecfe156
  41c780:	lods   al,BYTE PTR ds:[esi]
  41c781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c782:	sub    BYTE PTR [edi+0x2e587948],dh
  41c788:	cmp    al,0xbc
  41c78a:	stc    
  41c78b:	pop    ss
  41c78c:	repnz pop esp
  41c78e:	push   es
  41c78f:	fstp   QWORD PTR fs:[esi-0x26d9414c]
  41c796:	pop    edx
  41c797:	enter  0x1fa8,0x9a
  41c79b:	leave  
  41c79c:	pop    ecx
  41c79d:	push   ebp
  41c79e:	mov    ds:0x1080179d,al
  41c7a3:	cmp    dh,BYTE PTR [eax-0x41]
  41c7a6:	out    dx,al
  41c7a7:	addr16 (bad) 
  41c7a9:	popa   
  41c7aa:	jb     0x41c793
  41c7ac:	jmp    0x41c813
  41c7ae:	(bad)  
  41c7af:	(bad)  [ebx+0x4782dd4d]
  41c7b5:	xchg   edi,eax
  41c7b6:	stos   BYTE PTR es:[edi],al
  41c7b7:	fld    TBYTE PTR [ecx+0x1e]
  41c7ba:	test   al,0xad
  41c7bc:	loope  0x41c7e4
  41c7be:	les    esp,FWORD PTR [edx+edx*2]
  41c7c1:	nop
  41c7c2:	loopne 0x41c776
  41c7c4:	ins    BYTE PTR es:[edi],dx
  41c7c5:	ja     0x41c749
  41c7c7:	and    edx,DWORD PTR [eax+0x36f98e5d]
  41c7cd:	dec    esp
  41c7ce:	pop    eax
  41c7cf:	sub    BYTE PTR cs:[esi],0xbd
  41c7d3:	enter  0x7afb,0x88
  41c7d7:	push   0xffffffe3
  41c7d9:	mov    ah,bh
  41c7db:	cmp    eax,0xd9d5254c
  41c7e0:	mov    bl,0xea
  41c7e2:	ja     0x41c839
  41c7e4:	add    eax,eax
  41c7e6:	inc    ebp
  41c7e7:	out    0x61,eax
  41c7e9:	stc    
  41c7ea:	mov    dl,0xdd
  41c7ec:	call   DWORD PTR [edi]
  41c7ee:	addr16 xchg esi,eax
  41c7f0:	cmp    eax,esp
  41c7f2:	cmp    edi,ecx
  41c7f4:	ret    0x4ec4
  41c7f7:	adc    ebp,DWORD PTR [ecx+0x5f]
  41c7fa:	psllq  mm3,mm6
  41c7fd:	mov    dl,0xd2
  41c7ff:	push   esp
  41c800:	and    eax,0x5cc782dc
  41c805:	add    BYTE PTR [ecx],ah
  41c807:	jge    0x41c85b
  41c809:	adc    eax,0xb71ab41
  41c80e:	mov    dl,0xc0
  41c810:	mov    dh,BYTE PTR [edx-0x17c247b3]
  41c816:	loopne 0x41c7f4
  41c818:	adc    BYTE PTR [edx],0x68
  41c81b:	(bad)  
  41c81c:	cmp    bh,BYTE PTR [ebp+0x5c2e21b5]
  41c822:	sti    
  41c823:	pop    esp
  41c824:	jmp    0xfc95:0x57f5dced
  41c82b:	pop    ss
  41c82c:	xor    cl,BYTE PTR gs:[ecx-0x701a17b2]
  41c833:	xchg   esi,eax
  41c834:	add    dl,0xd4
  41c837:	lock push ss
  41c839:	mov    ecx,0x7c440a53
  41c83e:	xchg   BYTE PTR es:[eax],dh
  41c841:	jg     0x41c7fe
  41c843:	push   esp
  41c844:	mov    DWORD PTR [ebp+eax*8-0x682b3ad7],ebx
  41c84b:	mov    al,ds:0xbaeaf64d
  41c850:	push   ds
  41c851:	cmp    al,BYTE PTR [ebx-0x6b]
  41c854:	sub    DWORD PTR [eax],eax
  41c856:	mov    esp,DWORD PTR [ecx+0x5]
  41c859:	sbb    eax,0x71dc699a
  41c85e:	push   cs
  41c85f:	mov    edx,DWORD PTR ds:0xce377386
  41c865:	xchg   ecx,eax
  41c866:	push   0xffffffe8
  41c868:	push   0x5a
  41c86a:	fwait
  41c86b:	mov    ds:0x8072f1d6,al
  41c870:	loop   0x41c87b
  41c872:	lods   al,BYTE PTR ds:[esi]
  41c873:	adc    DWORD PTR [edx+eiz*8],eax
  41c876:	mov    es,edi
  41c878:	mov    bl,0x3d
  41c87a:	dec    ebx
  41c87b:	out    0x2b,eax
  41c87d:	arpl   WORD PTR [ecx],bp
  41c87f:	xchg   ebx,eax
  41c880:	push   ecx
  41c881:	inc    ecx
  41c882:	push   ss
  41c883:	mov    eax,0x329f0863
  41c888:	pop    es
  41c889:	inc    edx
  41c88a:	stos   BYTE PTR es:[edi],al
  41c88b:	aaa    
  41c88c:	repnz gs xor bh,bl
  41c890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c891:	arpl   WORD PTR [eax],si
  41c893:	retf   0x39c3
  41c896:	jge    0x41c831
  41c898:	cmp    al,0x2a
  41c89a:	call   0x26b0:0xf5340123
  41c8a1:	xchg   cl,bh
  41c8a3:	daa    
  41c8a4:	mov    ds:0x1840824f,eax
  41c8a9:	popa   
  41c8aa:	rcl    ah,1
  41c8ac:	fmul   DWORD PTR [esp+ebp*1]
  41c8af:	sbb    al,BYTE PTR [ecx+0x3aafec4a]
  41c8b5:	out    dx,eax
  41c8b6:	cmp    eax,eax
  41c8b8:	or     bl,BYTE PTR [ebp+0x6d]
  41c8bb:	inc    ebx
  41c8bc:	int    0xfb
  41c8be:	xor    dh,BYTE PTR [esi+0x66]
  41c8c1:	pop    ds
  41c8c2:	and    al,0x3e
  41c8c4:	mov    dl,0x21
  41c8c6:	lock inc esp
  41c8c8:	out    0x84,al
  41c8ca:	cmp    bl,cl
  41c8cc:	mov    DWORD PTR [ebx-0x78722642],esi
  41c8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d3:	mov    esp,0xe758e087
  41c8d8:	pop    esi
  41c8d9:	push   eax
  41c8da:	cs out 0x53,al
  41c8dd:	and    eax,0x94c82c49
  41c8e2:	(bad)  
  41c8e3:	in     eax,0x80
  41c8e5:	and    al,0xf1
  41c8e7:	push   ds
  41c8e8:	out    dx,eax
  41c8e9:	or     eax,ebx
  41c8eb:	js     0x41c942
  41c8ed:	outs   dx,DWORD PTR ds:[esi]
  41c8ee:	mov    al,0x51
  41c8f0:	push   ebp
  41c8f1:	jo     0x41c8fb
  41c8f3:	and    bl,BYTE PTR [edi-0x69]
  41c8f6:	pop    esp
  41c8f7:	pop    esp
  41c8f8:	xchg   edi,eax
  41c8f9:	or     DWORD PTR ds:[ecx-0x63],ecx
  41c8fd:	shr    DWORD PTR [eax],cl
  41c8ff:	(bad)  
  41c900:	dec    edi
  41c901:	add    al,0x81
  41c903:	add    DWORD PTR [ebp-0x60],ebp
  41c906:	popa   
  41c907:	xchg   bl,cl
  41c909:	push   ebx
  41c90a:	dec    ebp
  41c90b:	sbb    bh,BYTE PTR [esi+0x42f9b902]
  41c911:	imul   esp,ebp,0xffffffb2
  41c914:	mov    BYTE PTR [ebp-0x66],dl
  41c917:	stos   DWORD PTR es:[edi],eax
  41c918:	adc    ecx,eax
  41c91a:	fucomip st,st(6)
  41c91c:	cmp    DWORD PTR [edi-0x1cc1a969],ebx
  41c922:	xchg   ebp,eax
  41c923:	add    BYTE PTR [edx],ah
  41c925:	push   0xb22dc90c
  41c92a:	test   eax,edx
  41c92c:	or     BYTE PTR [edi+0x24d077a2],0xbc
  41c933:	xchg   ebp,eax
  41c934:	sbb    ecx,edx
  41c936:	or     bh,BYTE PTR gs:[ebp-0x6ad36b89]
  41c93d:	sbb    eax,0x449db30e
  41c942:	clc    
  41c943:	adc    al,BYTE PTR [edi+0x77]
  41c946:	mov    cl,0xa1
  41c948:	sbb    BYTE PTR [edi+0x1e],bl
  41c94b:	mov    eax,0x91f0d55f
  41c950:	ja     0x41c8d6
  41c952:	enter  0x17f7,0x30
  41c956:	mov    esi,DWORD PTR [edi+esi*4+0x43]
  41c95a:	adc    al,0xa6
  41c95c:	rcl    ebx,0x66
  41c95f:	ret    0xe86b
  41c962:	les    ebp,FWORD PTR [edi+0x1f2a9564]
  41c968:	and    eax,0x8ff599d2
  41c96d:	or     dl,BYTE PTR [edx]
  41c96f:	dec    ebp
  41c970:	dec    edi
  41c971:	mov    esp,0x7c8a5594
  41c976:	mov    edx,0xe8e5846b
  41c97b:	loope  0x41c9e6
  41c97d:	mov    eax,0x46931bc6
  41c982:	js     0x41c990
  41c984:	and    al,0x5
  41c986:	dec    eax
  41c987:	xor    dl,BYTE PTR [esp+edi*8+0x69]
  41c98b:	and    ebp,eax
  41c98d:	mov    esp,0xf2afef75
  41c992:	(bad)  
  41c993:	call   0x355d:0xe54bc9d
  41c99a:	and    eax,0x1b5157ec
  41c99f:	ret    
  41c9a0:	dec    edi
  41c9a1:	std    
  41c9a2:	(bad)  
  41c9a3:	cmp    ebp,ebp
  41c9a5:	add    ebx,DWORD PTR [esi+0x538705db]
  41c9ab:	popa   
  41c9ac:	in     eax,0x18
  41c9ae:	out    0xf5,eax
  41c9b0:	mov    dh,BYTE PTR [ecx]
  41c9b2:	xlat   BYTE PTR ds:[ebx]
  41c9b3:	jmp    0x8035d419
  41c9b8:	fsubr  QWORD PTR [ebp+0x5]
  41c9bb:	cmc    
  41c9bc:	xchg   ebp,eax
  41c9bd:	mov    WORD PTR [edi],?
  41c9bf:	lods   al,BYTE PTR ds:[esi]
  41c9c0:	int3   
  41c9c1:	sbb    al,BYTE PTR [edx+0x2e04970b]
  41c9c7:	dec    esi
  41c9c8:	lods   eax,DWORD PTR ds:[esi]
  41c9c9:	adc    BYTE PTR [ecx+0x76],bh
  41c9cc:	rcl    BYTE PTR [eax-0x54],1
  41c9cf:	retf   
  41c9d0:	lea    eax,[esi+0x303dab9d]
  41c9d6:	test   BYTE PTR [esi+0x7e],0xd9
  41c9da:	add    DWORD PTR [ebx],ebp
  41c9dc:	adc    DWORD PTR [ebx-0x57],0x5aefb4ab
  41c9e3:	push   ebp
  41c9e4:	arpl   WORD PTR [ebx-0x920e274],bp
  41c9ea:	cdq    
  41c9eb:	push   edi
  41c9ec:	repnz push ebx
  41c9ee:	fmul   st(5),st
  41c9f0:	(bad)  
  41c9f2:	enter  0x1898,0x5e
  41c9f6:	add    eax,0xecf5296e
  41c9fb:	jecxz  0x41c98b
  41c9fd:	(bad)  
  41c9fe:	pushf  
  41c9ff:	fs push ds
  41ca01:	mov    bl,0x97
  41ca03:	ins    DWORD PTR es:[edi],dx
  41ca04:	cs xchg ebx,eax
  41ca06:	dec    ecx
  41ca07:	dec    edx
  41ca08:	push   esp
  41ca09:	and    BYTE PTR [ecx],0x87
  41ca0c:	mov    dl,0x5b
  41ca0e:	mov    al,ds:0xfb935617
  41ca13:	xor    DWORD PTR [ebp+0x32d6cdb8],ebx
  41ca19:	sahf   
  41ca1a:	sbb    BYTE PTR [ecx],0xde
  41ca1d:	mov    cs,WORD PTR [edx-0x6b]
  41ca20:	fldl2t 
  41ca22:	and    al,0x7b
  41ca24:	pop    esp
  41ca25:	and    cl,BYTE PTR [eax-0x21]
  41ca28:	sysenter 
  41ca2a:	push   esp
  41ca2b:	xlat   BYTE PTR ds:[ebx]
  41ca2c:	pop    edi
  41ca2d:	inc    ebp
  41ca2e:	jecxz  0x41ca98
  41ca30:	mov    esp,0x74d0d48f
  41ca35:	arpl   sp,bp
  41ca37:	shl    DWORD PTR [edi-0x223b83ef],1
  41ca3d:	sbb    edi,DWORD PTR [edx]
  41ca3f:	xor    eax,0xe966ed18
  41ca44:	mov    ch,0xa9
  41ca46:	jae    0x41ca97
  41ca48:	sub    BYTE PTR [edx-0xc],ah
  41ca4b:	jo     0x41cab2
  41ca4d:	cmp    ch,cl
  41ca4f:	and    DWORD PTR [edi],ecx
  41ca51:	out    dx,al
  41ca52:	pusha  
  41ca53:	adc    DWORD PTR [ebp+0x5c],esp
  41ca56:	shl    BYTE PTR [edi+0x13],0x5
  41ca5a:	(bad)  
  41ca5b:	ins    BYTE PTR es:[edi],dx
  41ca5c:	xchg   ebp,eax
  41ca5d:	sub    DWORD PTR [ebx+0x3a],edx
  41ca60:	lea    edx,[ebp+0x5cdc76f4]
  41ca66:	(bad)  
  41ca67:	push   ebp
  41ca68:	outs   dx,BYTE PTR ds:[esi]
  41ca69:	adc    bh,BYTE PTR [edx-0x1f]
  41ca6c:	dec    ecx
  41ca6d:	cmp    eax,0x90e92beb
  41ca72:	lods   eax,DWORD PTR ds:[esi]
  41ca73:	call   0x7d60accc
  41ca78:	call   0xde03d261
  41ca7d:	test   bh,ch
  41ca7f:	or     edi,DWORD PTR [edi-0x23]
  41ca82:	mov    dh,0xfc
  41ca84:	fwait
  41ca85:	jp     0x41ca49
  41ca87:	or     eax,0xc15d074e
  41ca8c:	add    dl,ch
  41ca8e:	clc    
  41ca8f:	das    
  41ca90:	or     al,dl
  41ca92:	imul   esp,edi,0x181c6d5d
  41ca98:	ret    0x3b1c
  41ca9b:	pop    ds
  41ca9c:	sbb    BYTE PTR [edx+0x72],cl
  41ca9f:	or     eax,0x53359bd4
  41caa4:	adc    ebx,ebx
  41caa6:	call   0xf4b8fa9e
  41caab:	xchg   esi,eax
  41caac:	test   esi,ebp
  41caae:	ret    
  41caaf:	and    BYTE PTR [edx-0x78053455],al
  41cab5:	rcl    al,0xdf
  41cab8:	xchg   BYTE PTR [eax+ecx*8+0x3],cl
  41cabc:	xchg   cl,al
  41cabe:	sub    ah,cl
  41cac0:	and    esp,DWORD PTR [ecx+ebx*2+0x4f9e7bac]
  41cac7:	shr    BYTE PTR ds:0x7c6ed4b3,1
  41cacd:	inc    ebx
  41cace:	sti    
  41cacf:	inc    edi
  41cad0:	fstp   TBYTE PTR [ebx+0x27]
  41cad3:	sti    
  41cad4:	ret    
  41cad5:	pop    edi
  41cad6:	add    eax,0x55f9c132
  41cadb:	into   
  41cadc:	push   ss
  41cadd:	pop    es
  41cade:	aam    0xff
  41cae0:	mov    edi,0x78756399
  41cae5:	fst    QWORD PTR [edx+0x1]
  41cae8:	ja     0x41ca6b
  41caea:	push   es
  41caeb:	jmp    DWORD PTR [esi]
  41caed:	repz mov ecx,0x849e043a
  41caf3:	in     al,0x99
  41caf5:	jmp    0xb7f70279
  41cafa:	shl    esp,0x36
  41cafd:	sahf   
  41cafe:	pop    ebp
  41caff:	and    DWORD PTR [esi+edi*2],ebp
  41cb02:	pop    ds
  41cb03:	pop    ds
  41cb04:	sar    eax,0x7d
  41cb07:	push   0x3a5c3bb8
  41cb0c:	xchg   ebx,esp
  41cb0e:	ror    eax,cl
  41cb10:	ins    BYTE PTR es:[edi],dx
  41cb11:	jbe    0x41cad7
  41cb13:	not    BYTE PTR [edi-0x3a4dfbe2]
  41cb19:	sti    
  41cb1a:	and    BYTE PTR ds:0xaac2e1ab,bh
  41cb20:	and    esi,ecx
  41cb22:	int    0xcb
  41cb24:	ins    BYTE PTR es:[edi],dx
  41cb25:	retf   
  41cb26:	or     BYTE PTR [ecx-0x44],ch
  41cb29:	jge    0x41cacd
  41cb2b:	and    DWORD PTR [edi+edx*8],ecx
  41cb2e:	xchg   esi,eax
  41cb2f:	shr    BYTE PTR [edx-0x13],1
  41cb32:	jno    0x41cb0f
  41cb34:	icebp  
  41cb35:	mov    edx,0x1fdea3a
  41cb3a:	(bad)  
  41cb3b:	es jae 0x41cb00
  41cb3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb3f:	and    BYTE PTR [ebp-0x55182036],ah
  41cb45:	push   es
  41cb46:	jecxz  0x41cadb
  41cb48:	push   eax
  41cb49:	leave  
  41cb4a:	arpl   WORD PTR [edx+eiz*8],bp
  41cb4d:	fs xchg dl,al
  41cb50:	mov    ebx,0xf4253fc4
  41cb55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb56:	fs jmp 0x38ce:0xba0ac36f
  41cb5e:	(bad)  
  41cb60:	inc    esi
  41cb61:	pop    edi
  41cb62:	dec    edx
  41cb63:	jns    0x41cb79
  41cb65:	stc    
  41cb66:	cmp    al,BYTE PTR [edx-0x2aacd38a]
  41cb6c:	loopne 0x41cb2f
  41cb6e:	or     eax,0x728b1e61
  41cb73:	jmp    0x6eb1:0x95076e02
  41cb7a:	xchg   edi,eax
  41cb7b:	outs   dx,DWORD PTR ds:[esi]
  41cb7c:	(bad)  
  41cb7d:	test   eax,0x81ef8821
  41cb82:	fucomip st,st(0)
  41cb84:	outs   dx,BYTE PTR ds:[esi]
  41cb85:	inc    ebp
  41cb86:	or     DWORD PTR [edi-0x5d7702e6],esi
  41cb8c:	leave  
  41cb8d:	sbb    ch,BYTE PTR [edi]
  41cb8f:	call   DWORD PTR [esi]
  41cb91:	adc    eax,0x4685d4a8
  41cb96:	mov    esp,0x74ae686d
  41cb9b:	pop    eax
  41cb9c:	or     al,BYTE PTR [ebp+0x51d573b8]
  41cba2:	push   edx
  41cba3:	loope  0x41cb27
  41cba5:	sbb    al,0xe7
  41cba7:	pushf  
  41cba8:	push   ebp
  41cba9:	aaa    
  41cbaa:	lea    edi,[ecx]
  41cbac:	pop    ecx
  41cbad:	retf   0x3ec7
  41cbb0:	pop    edx
  41cbb1:	out    dx,eax
  41cbb2:	mov    al,0x96
  41cbb4:	gs fs retf 0x7da1
  41cbb9:	push   esi
  41cbba:	mov    ah,bh
  41cbbc:	int    0xe6
  41cbbe:	test   DWORD PTR [edi],eax
  41cbc0:	xchg   ebx,eax
  41cbc1:	stos   BYTE PTR es:[edi],al
  41cbc2:	cs mul ecx
  41cbc5:	out    0xab,al
  41cbc7:	mov    cl,0x97
  41cbc9:	sar    BYTE PTR [ecx-0x50],cl
  41cbcc:	mov    edx,0x9024326a
  41cbd1:	xlat   BYTE PTR ds:[ebx]
  41cbd2:	imul   esi,eax,0xaf688a1d
  41cbd8:	aaa    
  41cbd9:	idiv   BYTE PTR [esi]
  41cbdb:	test   ch,ah
  41cbdd:	pop    edx
  41cbde:	ficom  WORD PTR [ecx-0x42]
  41cbe1:	jne    0x41cbfa
  41cbe3:	lds    edx,FWORD PTR [ebp+0x2e5ce21]
  41cbe9:	int    0xb1
  41cbeb:	(bad)  [esi+0x4a566cba]
  41cbf1:	inc    eax
  41cbf2:	hlt    
  41cbf3:	jl     0x41cc09
  41cbf5:	retf   
  41cbf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbf7:	dec    edx
  41cbf8:	les    esi,FWORD PTR [esi]
  41cbfa:	in     eax,0x2a
  41cbfc:	jns    0x41cb99
  41cbfe:	push   ebx
  41cbff:	lds    edx,FWORD PTR [esi+0x65]
  41cc02:	jnp    0x41cbc8
  41cc04:	mov    WORD PTR [ebx+0x5aa543ce],?
  41cc0a:	add    esi,DWORD PTR [edx+0x7d]
  41cc0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc0e:	retf   
  41cc0f:	ss ins DWORD PTR es:[edi],dx
  41cc11:	xor    BYTE PTR [esp+eax*2],0xf2
  41cc15:	rcl    DWORD PTR [ecx+0xc5345d3],cl
  41cc1b:	xchg   edi,eax
  41cc1c:	mov    bl,0xf8
  41cc1e:	out    dx,al
  41cc1f:	pop    edi
  41cc20:	shl    DWORD PTR [ecx+0x4c],0x60
  41cc24:	and    edx,ecx
  41cc26:	ret    0x587a
  41cc29:	mov    eax,ds:0x95ea7aa
  41cc2e:	jg     0x41cbea
  41cc30:	jge    0x41cbc1
  41cc32:	sar    BYTE PTR [ecx+0x2bca5ea0],cl
  41cc38:	out    0x2e,al
  41cc3a:	enter  0x2e3d,0x21
  41cc3e:	mov    eax,ds:0xf07cf06b
  41cc43:	xchg   esi,eax
  41cc44:	cmc    
  41cc45:	fucomi st,st(6)
  41cc48:	pusha  
  41cc49:	and    bl,BYTE PTR [ebx+eiz*2-0x7a]
  41cc4d:	loope  0x41cc69
  41cc4f:	popa   
  41cc50:	cmp    DWORD PTR [esi-0x2d12c3d8],esp
  41cc56:	dec    eax
  41cc57:	cmp    al,0x7b
  41cc59:	mov    esp,0xf9137dbb
  41cc5e:	pop    ds
  41cc5f:	adc    edx,ebp
  41cc61:	xor    al,0x99
  41cc63:	imul   DWORD PTR [edx+0xbbc6547]
  41cc69:	pushf  
  41cc6a:	sar    cl,0x8
  41cc6d:	into   
  41cc6e:	mov    dl,0xa7
  41cc70:	stc    
  41cc71:	sbb    BYTE PTR [ecx],0x4b
  41cc74:	mov    ebx,ebp
  41cc76:	call   0xcca0c3c7
  41cc7b:	bound  esp,QWORD PTR [edi+0x5e]
  41cc7e:	jb     0x41cc85
  41cc80:	jecxz  0x41cce4
  41cc82:	xchg   ebp,eax
  41cc83:	mov    edx,0x6fe51a61
  41cc88:	or     bl,BYTE PTR [ebx+edi*1-0x36]
  41cc8c:	adc    dl,BYTE PTR [edx-0x92984b8]
  41cc92:	mov    WORD PTR [ebx],ss
  41cc94:	imul   eax,DWORD PTR [eax-0x22],0xffffff9c
  41cc98:	int3   
  41cc99:	(bad)  
  41cc9a:	mov    ah,0xaa
  41cc9c:	and    edi,DWORD PTR [ebx-0x4d7b497]
  41cca2:	push   es
  41cca3:	scas   al,BYTE PTR es:[edi]
  41cca4:	rcr    DWORD PTR [edi+0x2e],0x1
  41cca8:	stos   BYTE PTR es:[edi],al
  41cca9:	pop    esp
  41ccaa:	daa    
  41ccab:	pop    ds
  41ccac:	aas    
  41ccad:	push   ds
  41ccae:	xor    al,0x95
  41ccb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb1:	mov    ebp,0xa02a3e08
  41ccb6:	fistp  DWORD PTR [esi+eax*8+0x8]
  41ccba:	sub    eax,0xc3107bc6
  41ccbf:	xlat   BYTE PTR ds:[ebx]
  41ccc0:	(bad)  
  41ccc1:	das    
  41ccc2:	cmp    BYTE PTR [edx],ah
  41ccc4:	(bad)  
  41ccc5:	xor    dh,ah
  41ccc7:	add    esi,DWORD PTR [ebp+0x7de83589]
  41cccd:	mov    cl,0x93
  41cccf:	cs retf 0x36e6
  41ccd3:	loopne 0x41ccd0
  41ccd5:	test   al,0x30
  41ccd7:	mov    ah,0x42
  41ccd9:	jo     0x41cc70
  41ccdb:	int    0x9b
  41ccdd:	xchg   BYTE PTR [esp+eax*1-0x5531954c],bh
  41cce4:	mov    eax,ds:0xaddadccc
  41cce9:	ds stc 
  41cceb:	inc    esp
  41ccec:	mov    ebx,0x2fc76f6
  41ccf1:	out    0x3a,al
  41ccf3:	mov    DWORD PTR [ecx-0x73914f4b],ecx
  41ccf9:	mov    dl,0xfd
  41ccfb:	js     0x41ccf4
  41ccfd:	clc    
  41ccfe:	mov    dl,0x8c
  41cd00:	(bad)  
  41cd02:	jmp    0xda7df4f4
  41cd07:	jle    0x41cd10
  41cd09:	(bad)  
  41cd0a:	and    bl,BYTE PTR [ebx]
  41cd0c:	inc    BYTE PTR ds:0x3dd4e1a2
  41cd12:	cld    
  41cd13:	aas    
  41cd14:	jg     0x41cd21
  41cd16:	jb     0x41ccc4
  41cd18:	sbb    edx,DWORD PTR [edi]
  41cd1a:	mov    esi,0x72e2082d
  41cd1f:	int3   
  41cd20:	or     eax,esi
  41cd22:	jl     0x41cd3f
  41cd24:	xor    dl,BYTE PTR [esi+0x28ec7c12]
  41cd2a:	xor    eax,0xf0c82175
  41cd2f:	sbb    BYTE PTR ds:[eax+0x4fa36d9b],bl
  41cd36:	and    ah,BYTE PTR [eax+0x7e5d795a]
  41cd3c:	mov    ds:0x1dbfe03f,eax
  41cd41:	xor    DWORD PTR [ebx],esp
  41cd43:	mov    bh,0xdd
  41cd45:	loop   0x41cd5d
  41cd47:	cmp    eax,ebp
  41cd49:	fisubr WORD PTR [edx+0xf388f12]
  41cd4f:	push   0x1604aee9
  41cd54:	repz inc eax
  41cd56:	rcl    DWORD PTR [edx-0x11],1
  41cd59:	add    BYTE PTR [esi+0x4b],ah
  41cd5c:	push   0xa6030f28
  41cd61:	das    
  41cd62:	jp     0x41cd16
  41cd64:	mov    bh,0xe0
  41cd66:	ror    ah,0x8
  41cd69:	scas   eax,DWORD PTR es:[edi]
  41cd6a:	cmp    BYTE PTR ss:[ebx],0xc2
  41cd6e:	or     eax,0xbe7de472
  41cd73:	jns    0x41cd9b
  41cd75:	xchg   edi,eax
  41cd76:	aas    
  41cd77:	(bad)  
  41cd78:	cmp    al,0x88
  41cd7a:	mov    ds:0x6c247708,eax
  41cd7f:	jmp    0x480f:0x97904ca3
  41cd86:	add    DWORD PTR [edi],ebp
  41cd88:	xlat   BYTE PTR ds:[ebx]
  41cd89:	and    DWORD PTR [ecx],0xd5e34f71
  41cd8f:	inc    eax
  41cd90:	enter  0x400d,0x5d
  41cd94:	xchg   edi,eax
  41cd95:	or     bh,BYTE PTR [esi]
  41cd97:	add    DWORD PTR [ebx-0x23],ebx
  41cd9a:	jb     0x41cd68
  41cd9c:	inc    edi
  41cd9d:	pop    esp
  41cd9e:	xor    al,0xb7
  41cda0:	ret    
  41cda1:	leave  
  41cda2:	mov    edx,ecx
  41cda4:	mov    cl,0xe1
  41cda6:	or     DWORD PTR [edx],esi
  41cda8:	mov    esi,0x3f161df7
  41cdad:	add    bh,al
  41cdaf:	in     al,dx
  41cdb0:	dec    DWORD PTR [edx]
  41cdb2:	shl    DWORD PTR [eax],0x78
  41cdb5:	mov    ah,0x7c
  41cdb7:	jmp    0x534cefe3
  41cdbc:	jbe    0x41ce30
  41cdbe:	data16 aaa 
  41cdc0:	mov    ch,0xde
  41cdc2:	inc    edx
  41cdc3:	xchg   ecx,eax
  41cdc4:	and    BYTE PTR [esi-0x63116a38],bl
  41cdca:	mov    esi,0xce65456b
  41cdcf:	aaa    
  41cdd0:	aas    
  41cdd1:	ja     0x41ce0f
  41cdd3:	pop    es
  41cdd4:	or     BYTE PTR [eax-0x71a6bd7],al
  41cdda:	pop    es
  41cddb:	pop    eax
  41cddc:	add    ebp,DWORD PTR [eax+ecx*1+0x70]
  41cde0:	repnz loopne 0x41cdc3
  41cde3:	fsubr  DWORD PTR [edi+edi*2]
  41cde6:	xlat   BYTE PTR ds:[ebx]
  41cde7:	sbb    esi,DWORD PTR [esp+esi*2-0x5ead6c38]
  41cdee:	push   ebx
  41cdef:	mov    dh,0x1f
  41cdf1:	sbb    eax,0x23243590
  41cdf6:	push   0x26
  41cdf8:	ret    
  41cdf9:	ins    BYTE PTR es:[edi],dx
  41cdfa:	(bad)  
  41cdfb:	les    ecx,FWORD PTR [ecx+0x79]
  41cdfe:	ins    DWORD PTR es:[edi],dx
  41cdff:	cli    
  41ce00:	mov    ?,WORD PTR [ebx-0xc]
  41ce03:	imul   edi,DWORD PTR [edi-0x351b565f],0x43
  41ce0a:	inc    esi
  41ce0b:	xor    DWORD PTR [ecx+eax*8-0x7a],ebx
  41ce0f:	fwait
  41ce10:	mov    ch,0x7f
  41ce12:	sti    
  41ce13:	sbb    bh,BYTE PTR [ebx+0x77]
  41ce16:	mov    ds:0x29bdb4dd,al
  41ce1b:	and    al,0x0
  41ce1d:	push   edx
  41ce1e:	sub    esi,DWORD PTR [ebp-0x5c]
  41ce21:	into   
  41ce22:	xchg   edx,eax
  41ce23:	arpl   di,bx
  41ce25:	(bad)  
  41ce26:	out    dx,eax
  41ce27:	cmp    BYTE PTR [edx],dh
  41ce29:	cmc    
  41ce2a:	inc    esp
  41ce2b:	inc    ebp
  41ce2c:	mov    cl,0xea
  41ce2e:	mov    ch,0x6b
  41ce30:	sub    DWORD PTR [eax],eax
  41ce32:	inc    ebx
  41ce33:	and    esp,DWORD PTR [esp+eiz*4]
  41ce36:	ss (bad) 
  41ce38:	repnz and BYTE PTR [ecx-0x77ecf197],bh
  41ce3f:	fadd   st(4),st
  41ce41:	mov    esi,0x875877ae
  41ce46:	jno    0x41ce2d
  41ce48:	mov    ch,0xfb
  41ce4a:	inc    edi
  41ce4b:	jnp    0x41ce68
  41ce4d:	mov    ah,0xf3
  41ce4f:	or     DWORD PTR [edi+0x1e],edx
  41ce52:	div    BYTE PTR [edx+ecx*4-0x43394e4f]
  41ce59:	popf   
  41ce5a:	mov    bh,0x6e
  41ce5c:	mov    bh,0x8
  41ce5e:	mov    eax,ds:0xf1f48da5
  41ce63:	sar    bh,0x98
  41ce66:	sbb    BYTE PTR [ebp-0x7680b8dd],al
  41ce6c:	cmp    edx,DWORD PTR [ebp+0x3ab69152]
  41ce72:	aas    
  41ce73:	cmp    dl,ch
  41ce75:	adc    DWORD PTR [edi-0x37],esp
  41ce78:	adc    eax,0xe96e392b
  41ce7d:	jmp    0x1cb81e30
  41ce82:	or     dh,BYTE PTR [eax+0x643c968c]
  41ce88:	loope  0x41cef2
  41ce8a:	fist   WORD PTR ds:[ebp-0x63]
  41ce8e:	inc    esp
  41ce8f:	push   esi
  41ce90:	pop    edi
  41ce91:	mov    dl,0x18
  41ce93:	cdq    
  41ce94:	call   0xc4de669a
  41ce99:	or     eax,0x3171d343
  41ce9e:	xchg   BYTE PTR ds:0x7d343d92,dl
  41cea4:	mov    ah,0x6b
  41cea6:	shl    BYTE PTR [ebp-0x6f],cl
  41cea9:	hlt    
  41ceaa:	test   BYTE PTR [esi+0xdfb546d],cl
  41ceb0:	into   
  41ceb1:	adc    eax,0x69c932b3
  41ceb6:	push   esi
  41ceb7:	cmc    
  41ceb8:	and    al,0x6
  41ceba:	loopne 0x41ce6d
  41cebc:	adc    BYTE PTR [edi+0x11],cl
  41cebf:	(bad)  [eax]
  41cec1:	sbb    bl,BYTE PTR [esi-0x486103e9]
  41cec7:	imul   BYTE PTR [eax+edx*1]
  41ceca:	aad    0xca
  41cecc:	jnp    0x41ce55
  41cece:	int    0x29
  41ced0:	adc    DWORD PTR [edx],edi
  41ced2:	jb     0x41ceb0
  41ced4:	int    0x54
  41ced6:	push   es
  41ced7:	mov    edi,0x59887732
  41cedc:	ret    0x6d1d
  41cedf:	neg    BYTE PTR [ebx+0x2c]
  41cee2:	pop    edx
  41cee3:	adc    DWORD PTR [edi+0x35],eax
  41cee6:	inc    esp
  41cee7:	pop    edx
  41cee8:	adc    ebx,DWORD PTR [eax]
  41ceea:	test   eax,0x190bf98f
  41ceef:	outs   dx,DWORD PTR ds:[esi]
  41cef0:	dec    eax
  41cef1:	xor    dh,BYTE PTR [ebx-0x59]
  41cef4:	push   edx
  41cef5:	dec    ecx
  41cef6:	js     0x41cf67
  41cef8:	mov    dh,0x54
  41cefa:	dec    ebx
  41cefb:	push   edx
  41cefc:	stc    
  41cefd:	(bad)  
  41cefe:	sub    DWORD PTR [ecx-0x2a10336],edx
  41cf04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf05:	cmp    eax,0xa15627e
  41cf0a:	mov    ds:0xe7e56e9d,eax
  41cf0f:	and    ebx,DWORD PTR [edx+0x191ac828]
  41cf15:	inc    ecx
  41cf16:	je     0x41cf27
  41cf18:	push   ebp
  41cf19:	jns    0x41ceb7
  41cf1b:	sub    BYTE PTR [ecx+0x42],ch
  41cf1e:	push   esp
  41cf1f:	fldcw  WORD PTR [edx-0x47c7c6e0]
  41cf25:	pushf  
  41cf26:	test   DWORD PTR [ecx+ebx*1+0x34],edi
  41cf2a:	fwait
  41cf2b:	mov    WORD PTR [edx+0x7b5c55a9],?
  41cf31:	sbb    bl,BYTE PTR [ebp+ebp*2+0x24fadfca]
  41cf38:	sub    al,0xd1
  41cf3a:	xchg   edx,eax
  41cf3b:	sti    
  41cf3c:	pushf  
  41cf3d:	in     eax,0xf
  41cf3f:	call   0x9b86:0x29d9fb4e
  41cf46:	push   ds
  41cf47:	pop    ss
  41cf48:	or     eax,0x7629eb50
  41cf4d:	test   eax,0xf1b9e5da
  41cf52:	add    eax,0x135da879
  41cf57:	mov    ds:0xab3e142e,eax
  41cf5c:	mov    ebp,0x3c1dcc37
  41cf61:	shl    DWORD PTR [eax+0x3a61a311],0x31
  41cf68:	ins    DWORD PTR es:[edi],dx
  41cf69:	jge    0x41cf36
  41cf6b:	add    al,0xb8
  41cf6d:	sub    al,0xe4
  41cf6f:	jnp    0x41cf40
  41cf71:	dec    ebp
  41cf72:	push   ebx
  41cf73:	sbb    eax,0x3f91a88
  41cf78:	xor    ah,BYTE PTR [ebp+0x6f]
  41cf7b:	aam    0x66
  41cf7d:	retf   0x1c11
  41cf80:	addr16 mov bl,0xe3
  41cf83:	sbb    DWORD PTR [eax],ebp
  41cf85:	mov    ebp,0x21d8f1ff
  41cf8a:	push   esp
  41cf8b:	test   eax,0xc3b9f8b8
  41cf90:	sub    eax,0x688fdc69
  41cf95:	and    DWORD PTR [esi-0x7ccc224b],0x59
  41cf9c:	ficom  DWORD PTR [edx+edi*4+0x2739934f]
  41cfa3:	inc    esi
  41cfa4:	mov    DWORD PTR [ebx+0x6c],0x4ba7c61a
  41cfab:	in     eax,dx
  41cfac:	aaa    
  41cfad:	(bad)  
  41cfaf:	retf   
  41cfb0:	daa    
  41cfb1:	mov    dl,0xde
  41cfb3:	jle    0x41d031
  41cfb5:	push   esp
  41cfb6:	push   ds
  41cfb7:	dec    esi
  41cfb8:	mov    ecx,0xdc6ef199
  41cfbd:	xor    eax,0x6867e972
  41cfc2:	stos   BYTE PTR es:[edi],al
  41cfc3:	add    ebx,DWORD PTR [ebx-0x5abba884]
  41cfc9:	shl    dh,0x66
  41cfcc:	bswap  ebx
  41cfce:	add    esi,DWORD PTR [esi+0x46]
  41cfd1:	pop    esi
  41cfd2:	cmp    BYTE PTR [esi-0x31f4c490],0xb
  41cfd9:	push   ebx
  41cfdb:	icebp  
  41cfdc:	jmp    0x8e89:0x6911aa34
  41cfe3:	xchg   esi,eax
  41cfe4:	push   ds
  41cfe5:	xchg   al,ah
  41cfe7:	pop    edi
  41cfe8:	inc    ecx
  41cfe9:	push   ebp
  41cfea:	jmp    0xcdf2:0x33606bfb
  41cff1:	pop    ebp
  41cff2:	fs loopne 0x41d02b
  41cff5:	sahf   
  41cff6:	jp     0x41d052
  41cff8:	or     al,0x50
  41cffa:	sub    BYTE PTR ds:0xb939205a,cl
  41d000:	cmp    dh,0x4b
  41d003:	imul   eax,DWORD PTR fs:[edx+0x1d],0x48
  41d008:	jp     0x41cfd5
  41d00a:	inc    eax
  41d00b:	jbe    0x41cf8d
  41d00d:	fistp  DWORD PTR [eax+0x7ae803bb]
  41d013:	addr16 cwde 
  41d015:	mov    eax,ds:0xfd2833c6
  41d01a:	push   ecx
  41d01b:	in     al,dx
  41d01c:	jmp    0x41cfe7
  41d01e:	aam    0xf2
  41d020:	sbb    eax,0x927c7e30
  41d025:	xor    al,0xc9
  41d027:	lock loope 0x41cfb8
  41d02a:	aaa    
  41d02b:	jp     0x41cfed
  41d02d:	jns    0x8e73d1b
  41d033:	pop    eax
  41d034:	mov    al,ds:0xffe7cc7f
  41d039:	fbstp  TBYTE PTR [ebx]
  41d03b:	mov    esp,0x9e650692
  41d040:	jp     0x41cfec
  41d042:	stos   DWORD PTR es:[edi],eax
  41d043:	cmp    BYTE PTR [ecx+0x2d352a84],0x7f
  41d04a:	(bad)  
  41d04c:	ins    BYTE PTR es:[edi],dx
  41d04d:	inc    edx
  41d04e:	out    dx,eax
  41d04f:	imul   ebx,DWORD PTR [ecx],0x9023e12a
  41d055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d056:	jbe    0x41d07d
  41d058:	xchg   edi,eax
  41d059:	sbb    al,0xcc
  41d05b:	mov    ds:0xa8393e4f,eax
  41d060:	xchg   DWORD PTR [esi-0x36add1df],edi
  41d066:	xchg   ecx,eax
  41d067:	mov    eax,ds:0x5a154435
  41d06c:	in     eax,dx
  41d06d:	outs   dx,BYTE PTR ds:[esi]
  41d06e:	and    eax,0x2717de93
  41d073:	arpl   WORD PTR [edi-0x62b36fad],bx
  41d079:	cmp    cl,BYTE PTR [edx]
  41d07b:	mov    cl,0x94
  41d07d:	jg     0x41d059
  41d07f:	ret    0x58ce
  41d082:	outs   dx,DWORD PTR ds:[esi]
  41d083:	xor    eax,ecx
  41d085:	imul   esi,DWORD PTR [edi-0x6d5641e5],0x56
  41d08c:	mov    edx,0x60b744bb
  41d091:	fidiv  WORD PTR [ebx+0x54]
  41d094:	or     eax,0x7b00e5ed
  41d099:	or     ebx,DWORD PTR [ebx-0x270e11bf]
  41d09f:	mov    ch,0x33
  41d0a1:	rcr    edx,cl
  41d0a3:	and    ebp,DWORD PTR [eax+0x33]
  41d0a6:	mov    ah,0x2b
  41d0a8:	rcl    BYTE PTR [edi],0x1f
  41d0ab:	jle    0x41d0b0
  41d0ad:	popa   
  41d0ae:	sbb    ecx,DWORD PTR [edi-0x59a9a69e]
  41d0b4:	aad    0x92
  41d0b6:	ss push edi
  41d0b8:	mov    bl,0xda
  41d0ba:	mov    ebp,0x9a33494e
  41d0bf:	jae    0x41d11e
  41d0c1:	daa    
  41d0c2:	mov    ecx,0x5a4a441b
  41d0c7:	inc    esi
  41d0c8:	pop    edx
  41d0c9:	mov    dl,0xb
  41d0cb:	dec    ebx
  41d0cc:	adc    eax,DWORD PTR [ecx+0x3d]
  41d0cf:	xchg   ebx,eax
  41d0d0:	cmc    
  41d0d1:	lods   eax,DWORD PTR ds:[esi]
  41d0d2:	in     al,0x18
  41d0d4:	sub    al,0x71
  41d0d6:	aam    0xa0
  41d0d8:	test   DWORD PTR [esi-0x326be207],ebx
  41d0de:	iret   
  41d0df:	call   0x16079686
  41d0e4:	into   
  41d0e5:	imul   edx,DWORD PTR [esi-0x48],0x89f5506a
  41d0ec:	arpl   WORD PTR [ebx-0x65],di
  41d0ef:	cmp    dl,BYTE PTR [edx+edx*1+0x6a1eef2c]
  41d0f6:	popa   
  41d0f7:	ins    DWORD PTR es:[edi],dx
  41d0f8:	mov    ecx,0xc06c5c91
  41d0fd:	dec    edi
  41d0fe:	jecxz  0x41d0ca
  41d100:	push   0x205892ab
  41d105:	push   ss
  41d106:	mov    ds:0xac9bfdb4,eax
  41d10b:	pusha  
  41d10c:	jns    0x41d0d5
  41d10e:	sahf   
  41d10f:	pusha  
  41d110:	mov    eax,0x14a1b9a
  41d115:	fisubr DWORD PTR [eax]
  41d117:	outs   dx,BYTE PTR ds:[esi]
  41d118:	call   FWORD PTR [ebx+0x1e]
  41d11b:	jle    0x41d145
  41d11d:	repz cmp ah,BYTE PTR [ecx+0x1ccc90d8]
  41d124:	mov    esi,0x9ff82314
  41d129:	lock enter 0x3ac8,0x60
  41d12e:	(bad)  
  41d12f:	jae    0x41d0d7
  41d131:	xchg   edi,eax
  41d132:	mov    edx,0x5ca8fd6f
  41d137:	jecxz  0x41d15f
  41d139:	pushf  
  41d13a:	cmp    eax,0xe07287d6
  41d13f:	out    0xc4,al
  41d141:	mov    ebx,0x9ca43501
  41d146:	or     eax,0xc8812ea7
  41d14b:	or     BYTE PTR [edi+ecx*1-0x3684b123],0xee
  41d153:	jae    0x41d136
  41d155:	shl    BYTE PTR [ecx-0x52],cl
  41d158:	cmp    al,0x5c
  41d15a:	rcr    BYTE PTR ds:0x9d6bdf65,0xb3
  41d161:	fisttp QWORD PTR [eax]
  41d163:	mov    ebx,0x1fe771c1
  41d168:	repnz lods al,BYTE PTR ds:[esi]
  41d16a:	sti    
  41d16b:	mov    ss,edi
  41d16d:	sub    BYTE PTR [edx-0x6c],bl
  41d170:	cmp    al,BYTE PTR [ebp+0x20]
  41d173:	dec    edx
  41d174:	sub    eax,0x5821ef8
  41d179:	pop    eax
  41d17a:	call   0x7631:0xfd5b743b
  41d181:	arpl   cx,di
  41d183:	inc    esp
  41d184:	cmp    eax,0x6439156b
  41d189:	jae    0x41d1ce
  41d18b:	pop    edx
  41d18d:	not    ch
  41d18f:	fwait
  41d190:	mov    ebp,0x36f7f147
  41d195:	inc    esi
  41d196:	rol    DWORD PTR [eax+0x4f],1
  41d199:	mov    ah,0xef
  41d19b:	push   ds
  41d19c:	or     eax,0xfaf99fa9
  41d1a1:	jb     0x41d204
  41d1a3:	mov    ecx,0x3154767f
  41d1a8:	push   0xffffffa9
  41d1aa:	arpl   di,dx
  41d1ac:	bound  ebx,QWORD PTR ds:[ecx]
  41d1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b0:	sub    edi,esp
  41d1b2:	repnz xor edx,DWORD PTR [edi]
  41d1b5:	mov    ecx,0x2c09d70a
  41d1ba:	aaa    
  41d1bb:	adc    al,0xcf
  41d1bd:	mov    al,0x59
  41d1bf:	or     eax,0x3e70da34
  41d1c4:	mov    ebx,0xebd08b84
  41d1c9:	fistp  QWORD PTR [edx-0x481b4a7a]
  41d1cf:	fcom   QWORD PTR [eax+eiz*4-0x68]
  41d1d3:	(bad)  
  41d1d4:	mov    fs,WORD PTR [ecx+0x50]
  41d1d7:	test   ecx,esp
  41d1d9:	add    ch,dl
  41d1db:	or     bh,BYTE PTR [ebx+ecx*8+0x9c6b6b]
  41d1e2:	cmp    dl,bl
  41d1e4:	je     0x41d1ea
  41d1e6:	test   edi,edx
  41d1e8:	mov    eax,es:0xa977e352
  41d1ee:	lods   eax,DWORD PTR ds:[esi]
  41d1ef:	xchg   ecx,eax
  41d1f0:	xchg   edx,eax
  41d1f1:	mov    al,0x81
  41d1f3:	aam    0xd2
  41d1f5:	push   edx
  41d1f6:	mov    dl,BYTE PTR [ebp-0x6de40b43]
  41d1fc:	gs das 
  41d1fe:	test   al,0x89
  41d200:	or     BYTE PTR [edi-0x6d0609c3],bh
  41d206:	mov    dh,0xba
  41d208:	jo     0x41d1f6
  41d20a:	mov    edx,0x3a65c20e
  41d20f:	jne    0x41d203
  41d211:	jp     0x41d207
  41d213:	nop
  41d214:	mov    BYTE PTR [ecx],bh
  41d216:	push   ss
  41d217:	cmp    DWORD PTR [ecx-0x36da2df],0x8
  41d21e:	sbb    DWORD PTR [ebx],eax
  41d220:	nop
  41d221:	repz xor eax,0xd4435121
  41d227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d228:	jmp    0x8e4c:0x67a730d3
  41d22f:	mov    esi,0xa2ae221b
  41d234:	adc    BYTE PTR [edx+ecx*1],ch
  41d237:	ss inc esp
  41d239:	adc    bl,bh
  41d23b:	hlt    
  41d23c:	inc    esp
  41d23d:	(bad)  
  41d23e:	retf   
  41d23f:	pop    es
  41d240:	jbe    0x41d1c6
  41d242:	sub    ah,dh
  41d244:	jecxz  0x41d210
  41d246:	pop    ds
  41d247:	cmp    ch,BYTE PTR [esi-0x28]
  41d24a:	pop    ebx
  41d24b:	sub    ebp,esi
  41d24d:	stos   DWORD PTR es:[edi],eax
  41d24e:	(bad)  
  41d24f:	mov    ecx,0xeea21f23
  41d254:	lahf   
  41d255:	pop    ecx
  41d256:	mul    DWORD PTR [edi]
  41d258:	test   ecx,eax
  41d25a:	jo     0x41d2cb
  41d25c:	jl     0x41d290
  41d25e:	dec    eax
  41d25f:	pop    ecx
  41d260:	or     al,0x78
  41d262:	inc    esp
  41d263:	sbb    al,0x9c
  41d265:	inc    ebp
  41d266:	cwde   
  41d267:	dec    esi
  41d268:	xor    al,0x68
  41d26a:	enter  0x3f72,0xb7
  41d26e:	push   ds
  41d26f:	fld    TBYTE PTR [ebx]
  41d271:	push   cs
  41d272:	cmp    al,0x57
  41d274:	push   edx
  41d275:	mov    esi,0xa9ab5666
  41d27a:	imul   edi,DWORD PTR [ebx+0x52eb3cb5],0xffffffc5
  41d281:	and    dl,BYTE PTR [ebp+0x30]
  41d284:	push   0x35e3f8cb
  41d289:	mov    ds:0xa9b7bdce,eax
  41d28e:	dec    esp
  41d28f:	test   edx,edi
  41d291:	mov    cl,0xc
  41d293:	push   ebx
  41d294:	inc    ecx
  41d295:	mov    eax,ds:0x13066b89
  41d29a:	cs retf 0x6127
  41d29e:	adc    DWORD PTR [ebx+0x47],ecx
  41d2a1:	mov    esi,0xf4a5ab3c
  41d2a6:	jnp    0x41d2f7
  41d2a8:	cmp    ch,BYTE PTR [ecx+0x41]
  41d2ab:	pop    edi
  41d2ac:	xor    al,0x2a
  41d2ae:	push   cs
  41d2af:	xor    cl,bh
  41d2b1:	jne    0x41d26b
  41d2b3:	aam    0x63
  41d2b5:	mov    eax,0x259af7b6
  41d2ba:	test   DWORD PTR [edi-0x4653df7e],ecx
  41d2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c1:	add    ebx,0x50
  41d2c4:	xchg   esi,eax
  41d2c5:	mov    cl,0x94
  41d2c7:	mov    ds:0xa3420d93,al
  41d2cc:	xor    edx,ebx
  41d2ce:	mov    esp,0xe34d48c3
  41d2d3:	inc    esp
  41d2d4:	adc    edx,DWORD PTR [ebx+0xbae5aa]
  41d2da:	into   
  41d2db:	cli    
  41d2dc:	adc    al,0xd9
  41d2de:	sbb    DWORD PTR [edx-0x30],ebp
  41d2e1:	xor    DWORD PTR ds:0xd19990ba,eax
  41d2e7:	xchg   esp,eax
  41d2e8:	sub    DWORD PTR [eax],ecx
  41d2ea:	jg     0x41d367
  41d2ec:	lods   al,BYTE PTR ds:[esi]
  41d2ed:	jmp    0x41d2f5
  41d2ef:	jnp    0x41d306
  41d2f1:	add    bh,BYTE PTR [edi]
  41d2f3:	bound  esp,QWORD PTR [esi+0x7d04468f]
  41d2f9:	xor    esp,DWORD PTR [edx-0x80]
  41d2fc:	out    0x6d,eax
  41d2fe:	push   esp
  41d2ff:	ins    BYTE PTR es:[edi],dx
  41d300:	shl    eax,cl
  41d302:	jae    0x41d36f
  41d304:	ja     0x41d33e
  41d306:	jge    0x41d35e
  41d308:	test   eax,0x763cd7a0
  41d30d:	loopne 0x41d298
  41d30f:	jno    0x41d37d
  41d311:	sbb    BYTE PTR [ebx],0x24
  41d314:	test   edi,esp
  41d316:	lahf   
  41d317:	push   ebp
  41d318:	into   
  41d319:	dec    ecx
  41d31a:	xor    eax,0x1256dc22
  41d31f:	mov    edi,0x39287cd7
  41d324:	mov    ch,BYTE PTR [edi-0x60]
  41d327:	bound  esp,QWORD PTR [ebx+0x6c]
  41d32a:	scas   eax,DWORD PTR es:[edi]
  41d32b:	or     al,0xa2
  41d32d:	mov    bl,0x23
  41d32f:	int3   
  41d330:	ins    DWORD PTR es:[edi],dx
  41d331:	add    eax,0xc21a5afe
  41d336:	mov    ebx,0xe03cf9d2
  41d33b:	dec    ebx
  41d33c:	cmc    
  41d33d:	mov    edx,0xb57eb989
  41d342:	push   ebp
  41d343:	ror    BYTE PTR [esp+ebp*8+0x79],1
  41d347:	sub    eax,0x43668a8d
  41d34c:	and    BYTE PTR [eax],dl
  41d34e:	loopne 0x41d3be
  41d350:	imul   ecx,edx,0xf2f23d9c
  41d356:	loopne 0x41d324
  41d358:	retf   0xc62a
  41d35b:	nop
  41d35c:	sbb    BYTE PTR [ebx],dh
  41d35e:	mov    edi,0x4d784138
  41d363:	jl     0x41d3e0
  41d365:	iret   
  41d366:	or     eax,0xba239165
  41d36b:	push   eax
  41d36c:	mov    ?,WORD PTR [edx+0x6a4da7f0]
  41d372:	js     0x41d383
  41d374:	in     al,dx
  41d375:	and    edx,DWORD PTR [esp+edi*1]
  41d378:	jmp    0xd946abfd
  41d37d:	cs cmp ecx,esp
  41d380:	xchg   ecx,eax
  41d381:	retf   0xfd73
  41d384:	aad    0xf9
  41d386:	arpl   WORD PTR ss:[ecx+0x7c68787e],sp
  41d38d:	test   DWORD PTR [ebx],esi
  41d38f:	(bad)  
  41d390:	fidiv  WORD PTR gs:[ebp+0x1e676106]
  41d397:	sub    eax,0xb8d0d6e1
  41d39c:	imul   edx,DWORD PTR [esi],0x1f9ca626
  41d3a2:	in     eax,0xe7
  41d3a4:	add    eax,0xc66dcd4f
  41d3a9:	cwde   
  41d3aa:	add    al,BYTE PTR [edx+0xf938fae]
  41d3b0:	mov    bl,0xdd
  41d3b2:	sub    esp,DWORD PTR [esi]
  41d3b4:	inc    esi
  41d3b5:	call   0xeb556c4f
  41d3ba:	inc    eax
  41d3bb:	mov    bh,BYTE PTR [ebp+0x2b23946]
  41d3c1:	dec    eax
  41d3c2:	and    DWORD PTR [esi-0x27e19d61],0x50
  41d3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ca:	dec    eax
  41d3cb:	jmp    0x6a9f:0x5e6d0e77
  41d3d2:	pushf  
  41d3d3:	aas    
  41d3d4:	jmp    0x1bf9:0x2bc1e85
  41d3db:	pop    ebx
  41d3dc:	sub    al,0xa5
  41d3de:	jg     0x41d453
  41d3e0:	sub    al,0x5e
  41d3e2:	dec    edi
  41d3e3:	adc    DWORD PTR [esi+0x637fb57d],ecx
  41d3e9:	adc    bh,dh
  41d3eb:	loopne 0x41d438
  41d3ed:	sbb    al,0x73
  41d3ef:	repz inc ecx
  41d3f1:	dec    esp
  41d3f2:	mov    ecx,0x2c45f34a
  41d3f7:	loop   0x41d40e
  41d3f9:	out    0x13,eax
  41d3fb:	aaa    
  41d3fc:	pop    esp
  41d3fd:	jns    0x41d42b
  41d3ff:	mov    DWORD PTR [ebp+0x5475436e],edi
  41d405:	jmp    0x85c04a4
  41d40a:	stc    
  41d40b:	(bad)  
  41d40c:	sub    esp,DWORD PTR [ebx-0x1e]
  41d40f:	pop    ebx
  41d410:	lahf   
  41d411:	sti    
  41d412:	(bad)  
  41d416:	(bad)  
  41d417:	mov    ds:0x225ab2d0,al
  41d41c:	inc    ecx
  41d41d:	repz sub DWORD PTR [ecx-0x2e],edx
  41d421:	clc    
  41d422:	outs   dx,DWORD PTR ds:[esi]
  41d423:	popf   
  41d424:	and    bl,BYTE PTR [ebp+eax*2+0x375807f1]
  41d42b:	jno    0x41d40f
  41d42d:	test   DWORD PTR [esi+0x5b],edx
  41d430:	lock pop edi
  41d432:	std    
  41d433:	cmp    esp,DWORD PTR [ecx]
  41d435:	mov    esi,0x37b0b74e
  41d43a:	(bad)  
  41d43b:	jl     0x41d494
  41d43d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d43e:	push   ebp
  41d43f:	sar    edx,1
  41d441:	inc    ecx
  41d442:	adc    DWORD PTR [esi+edx*8+0x70],ebx
  41d446:	out    dx,eax
  41d447:	cmp    al,0x7
  41d449:	cmp    ah,bl
  41d44b:	pop    edi
  41d44c:	mov    ch,0xfd
  41d44e:	mov    edi,DWORD PTR [ecx-0x63bed8e9]
  41d454:	and    edx,DWORD PTR [edx-0x30]
  41d457:	dec    esi
  41d458:	enter  0x7001,0x27
  41d45c:	push   ebx
  41d45d:	mov    al,0x45
  41d45f:	(bad)
  41d462:	loope  0x41d488
  41d464:	data16 or al,0xd
  41d467:	cmp    ecx,ebp
  41d469:	inc    edi
  41d46a:	sbb    BYTE PTR [eax-0x2b],bh
  41d46d:	cmp    BYTE PTR [ecx-0x47d4baef],al
  41d473:	xchg   edi,eax
  41d474:	push   ebp
  41d475:	mov    edi,0x115a02c2
  41d47a:	fwait
  41d47b:	sbb    BYTE PTR [edx+0x1d],bl
  41d47e:	(bad)  
  41d47f:	cmp    eax,0xca86631
  41d484:	xor    BYTE PTR [eax+0x9122e3],cl
  41d48a:	push   eax
  41d48b:	test   eax,0xf6028224
  41d490:	jae    0x41d44d
  41d492:	xchg   ebp,eax
  41d493:	daa    
  41d494:	jne    0x41d46a
  41d496:	add    ebp,DWORD PTR [ebx-0x3d]
  41d499:	xchg   BYTE PTR [esi],al
  41d49b:	add    edx,DWORD PTR [edi]
  41d49d:	jl     0x41d49a
  41d49f:	push   ds
  41d4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4a1:	inc    ebx
  41d4a2:	cmp    ebx,DWORD PTR [ebx+0x238156df]
  41d4a8:	mov    al,ds:0x8aa30ea1
  41d4ad:	dec    esi
  41d4ae:	call   0x74e48ff5
  41d4b3:	push   esi
  41d4b4:	pop    ebx
  41d4b5:	jb     0x41d4f0
  41d4b7:	adc    ch,BYTE PTR [esi]
  41d4b9:	xor    al,0x1c
  41d4bb:	lahf   
  41d4bc:	mov    eax,0xab7c2ddf
  41d4c1:	adc    eax,0xc2c9b3cb
  41d4c6:	push   es
  41d4c7:	popf   
  41d4c8:	test   ch,dl
  41d4ca:	fidivr WORD PTR [ebp-0x9b40350]
  41d4d0:	inc    bp
  41d4d2:	std    
  41d4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d4:	int3   
  41d4d5:	xchg   ebp,eax
  41d4d6:	jo     0x41d4d5
  41d4d8:	js     0x41d547
  41d4da:	jo     0x41d4cd
  41d4dc:	add    dh,BYTE PTR ds:0xf632
  41d4e1:	add    ebp,DWORD PTR [ecx]
  41d4e3:	call   0x9a02:0x30af5fb5
  41d4ea:	mov    dh,BYTE PTR ds:0xdbfea73a
  41d4f0:	and    al,0xe8
  41d4f2:	sbb    eax,0xb051ce2f
  41d4f7:	lea    esp,[ebx-0x51]
  41d4fa:	push   0x271da2f4
  41d4ff:	adc    ecx,edx
  41d501:	mov    eax,ds:0xc84b0ed8
  41d506:	hlt    
  41d507:	push   ss
  41d508:	push   ss
  41d509:	dec    eax
  41d50a:	iret   
  41d50b:	inc    edx
  41d50c:	out    0x84,eax
  41d50e:	js     0x41d528
  41d510:	push   edi
  41d511:	inc    esi
  41d512:	pop    ss
  41d513:	push   esi
  41d514:	sbb    al,dl
  41d516:	xchg   edx,eax
  41d517:	fisubr WORD PTR [edi+0x46]
  41d51a:	mov    esi,DWORD PTR ds:0xd07909cf
  41d520:	pop    ss
  41d521:	popa   
  41d522:	aam    0x76
  41d524:	int3   
  41d525:	mov    al,0x8c
  41d527:	mov    bl,0x2b
  41d529:	mov    DWORD PTR [edx+0x7d],esi
  41d52c:	push   0x2cb34321
  41d531:	mov    ch,0xd8
  41d533:	ds and bl,al
  41d536:	fnstcw WORD PTR [esi-0x6b]
  41d539:	lea    ebp,[ebx+eiz*1-0x1d]
  41d53d:	sub    al,bl
  41d53f:	add    DWORD PTR [ebx+0x63],edx
  41d542:	mov    al,0xbf
  41d544:	push   esp
  41d545:	add    ax,0xac83
  41d549:	in     al,dx
  41d54a:	cwde   
  41d54b:	mov    cl,0xaa
  41d54d:	loop   0x41d566
  41d54f:	mov    ah,0x90
  41d551:	lods   al,BYTE PTR ds:[esi]
  41d552:	ret    
  41d553:	mov    esp,0x7b22b659
  41d558:	push   DWORD PTR [ebx-0x1f2cee93]
  41d55e:	in     eax,0xee
  41d560:	pop    eax
  41d561:	mov    dh,bl
  41d563:	xchg   ebx,eax
  41d564:	jl     0x41d520
  41d566:	mov    ?,ebp
  41d568:	jne    0x41d5d9
  41d56a:	mov    cl,0x90
  41d56c:	call   0xae23:0xdff6832f
  41d573:	pop    edi
  41d574:	sbb    DWORD PTR [edi+0xd],ebp
  41d577:	cmp    eax,0x2fd1cf5e
  41d57c:	aad    0x4b
  41d57e:	addr16 int3 
  41d580:	imul   ecx,DWORD PTR [esi-0x68b540a8],0x3d
  41d587:	jl     0x41d5f1
  41d589:	add    dh,bl
  41d58b:	xlat   BYTE PTR ds:[ebx]
  41d58c:	push   edx
  41d58d:	xchg   edi,eax
  41d58e:	jae    0x41d5cb
  41d590:	mov    bl,0x52
  41d592:	mov    ebp,0x5ec658b5
  41d597:	jne    0x41d59f
  41d599:	dec    ecx
  41d59a:	lock (bad) 
  41d59c:	xor    DWORD PTR [esi],edi
  41d59e:	aaa    
  41d59f:	xor    eax,DWORD PTR [ecx+0x4f43b6b6]
  41d5a5:	scas   eax,DWORD PTR es:[edi]
  41d5a6:	fdivr  QWORD PTR [edx]
  41d5a8:	das    
  41d5a9:	aas    
  41d5aa:	sub    esi,DWORD PTR [eax+0x26d1c421]
  41d5b0:	sub    eax,0x8b4e2456
  41d5b5:	cli    
  41d5b6:	dec    ebp
  41d5b7:	(bad)  [eax-0x6e]
  41d5ba:	push   0x27a7553f
  41d5bf:	enter  0x2371,0x68
  41d5c3:	sbb    eax,0x78ffd112
  41d5c8:	dec    eax
  41d5c9:	pop    ss
  41d5ca:	mov    esp,0xe0e0ae3f
  41d5cf:	in     eax,dx
  41d5d0:	cmp    DWORD PTR [eax],eax
  41d5d2:	out    dx,al
  41d5d3:	xchg   DWORD PTR [ecx-0x604605af],eax
  41d5d9:	data16 jecxz 0x41d659
  41d5dc:	and    al,0x13
  41d5de:	sub    al,0x76
  41d5e0:	cmp    DWORD PTR [edi+edx*2-0x25aabc1c],edi
  41d5e7:	add    al,0xe4
  41d5e9:	mov    ch,BYTE PTR [edi-0x2]
  41d5ec:	lock gs push ecx
  41d5ef:	cmp    al,0x3c
  41d5f1:	inc    ecx
  41d5f2:	jmp    0x41d622
  41d5f4:	add    al,0x5a
  41d5f6:	inc    edx
  41d5f7:	push   eax
  41d5f8:	dec    ebp
  41d5f9:	add    eax,0xc3e721c5
  41d5fe:	cdq    
  41d5ff:	das    
  41d600:	jle    0x41d59c
  41d602:	inc    edx
  41d603:	enter  0x274,0x30
  41d607:	lods   eax,DWORD PTR ds:[esi]
  41d608:	cwde   
  41d609:	sbb    eax,0x86fd3440
  41d60e:	inc    ecx
  41d60f:	(bad)  
  41d610:	daa    
  41d611:	add    eax,0xc6b26353
  41d617:	cmp    BYTE PTR [ecx+eiz*1-0x56ea870],bh
  41d61e:	mov    dl,0xe5
  41d620:	mov    edx,0xadd3bfeb
  41d625:	lea    edx,[esi+0x13]
  41d628:	xchg   esp,eax
  41d629:	jl     0x41d68a
  41d62b:	inc    ebx
  41d62c:	jmp    0x9fa6d789
  41d631:	aas    
  41d632:	or     al,0x59
  41d634:	push   edi
  41d635:	pop    ecx
  41d636:	(bad)  
  41d637:	ret    0x67a8
  41d63a:	mov    edi,0xa8cd3be1
  41d63f:	stos   DWORD PTR es:[edi],eax
  41d640:	out    0x72,al
  41d642:	pop    eax
  41d643:	lea    esp,[ebx+0x2f14a2ef]
  41d649:	mov    esi,0x8a78630c
  41d64e:	mov    ds:0x98bfc6f2,al
  41d653:	popf   
  41d654:	pop    edx
  41d655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d656:	jge    0x41d5f7
  41d658:	push   esi
  41d659:	pop    ds
  41d65a:	lock repz jmp 0x41d636
  41d65e:	xor    BYTE PTR [ecx+0x6a570f07],0x65
  41d665:	dec    edi
  41d666:	xor    eax,DWORD PTR [edx+0x39]
  41d669:	lods   eax,DWORD PTR ds:[esi]
  41d66a:	fcom   QWORD PTR [edx]
  41d66c:	push   esp
  41d66d:	fcmove st,st(7)
  41d66f:	sub    al,0xdf
  41d671:	xchg   DWORD PTR [ebp+0x58],ecx
  41d674:	bound  eax,QWORD PTR [ecx+0x79]
  41d677:	test   eax,0xf22b60de
  41d67c:	(bad)  
  41d67d:	jmp    0x41d68f
  41d67f:	jg     0x41d677
  41d681:	jecxz  0x41d6a6
  41d683:	add    eax,0x9172afa9
  41d688:	sub    DWORD PTR [edx-0x24aa6ea],ebp
  41d68e:	fmul   QWORD PTR [edx+0x7]
  41d691:	push   edi
  41d692:	jp     0x41d634
  41d694:	in     al,dx
  41d695:	cs pop ds
  41d697:	ret    
  41d698:	xor    eax,0xab7d5fea
  41d69d:	push   ecx
  41d69e:	or     DWORD PTR ds:0x93d7c9ec,0x28
  41d6a5:	and    esi,ebp
  41d6a7:	(bad)  
  41d6a8:	int    0xff
  41d6aa:	jb     0x41d6d9
  41d6ac:	das    
  41d6ad:	fmul   DWORD PTR [edi-0x4c]
  41d6b0:	push   ebp
  41d6b1:	(bad)  
  41d6b2:	int    0x49
  41d6b4:	push   0xb65458a2
  41d6b9:	dec    ebx
  41d6ba:	fistp  WORD PTR [ebp+0x83f0b3f]
  41d6c0:	int    0x28
  41d6c2:	push   cs
  41d6c3:	mov    ebp,0x86dd37e9
  41d6c8:	pop    ebx
  41d6c9:	cmp    BYTE PTR [esi],cl
  41d6cb:	add    BYTE PTR [edx+0x22],al
  41d6ce:	repz push eax
  41d6d0:	or     bh,BYTE PTR [esi+0x6ba88df4]
  41d6d6:	imul   ecx,DWORD PTR [edx-0x5eeb2da5],0xb5aaa9fb
  41d6e0:	adc    al,0xbb
  41d6e2:	jnp    0x41d6ab
  41d6e4:	xlat   BYTE PTR ds:[ebx]
  41d6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6e6:	cwde   
  41d6e7:	aaa    
  41d6e8:	xor    eax,0xdf16c01b
  41d6ed:	ss imul edx,esi,0x217baa6b
  41d6f4:	mov    ebp,0x4d48d8cb
  41d6f9:	xor    ebp,DWORD PTR [edi+0x4f292231]
  41d6ff:	lock ror DWORD PTR [ebx],cl
  41d702:	test   ebx,ebx
  41d704:	sub    eax,0xd0f6ba4
  41d709:	sahf   
  41d70a:	xlat   BYTE PTR ds:[ebx]
  41d70b:	push   esi
  41d70c:	and    ch,BYTE PTR [esi+0x63]
  41d70f:	icebp  
  41d710:	in     al,0x68
  41d712:	jmp    0xbca1bd04
  41d717:	or     al,0x7
  41d719:	outs   dx,DWORD PTR ds:[esi]
  41d71a:	stc    
  41d71b:	jp     0x41d6f1
  41d71d:	xchg   BYTE PTR [ebp+0x68c863a3],bh
  41d723:	not    DWORD PTR [ebp-0x62]
  41d726:	test   eax,0xdd8c2b66
  41d72b:	fs es out dx,ax
  41d72f:	sbb    eax,0x93b14ab5
  41d734:	push   DWORD PTR [eax+0x1a]
  41d737:	xor    eax,0x82ebf0ae
  41d73c:	dec    edx
  41d73d:	inc    esp
  41d73e:	mov    al,ds:0x8f2e8f93
  41d743:	scas   eax,DWORD PTR es:[edi]
  41d744:	loop   0x41d77a
  41d746:	mov    WORD PTR [edx],es
  41d748:	cmp    al,0x37
  41d74a:	jne    0x41d77e
  41d74c:	sbb    edi,DWORD PTR [edi+0x77]
  41d74f:	stos   BYTE PTR es:[edi],al
  41d750:	xchg   edx,eax
  41d751:	mov    edx,0x3a20dbb9
  41d756:	mov    ebx,0x5eaa9024
  41d75b:	or     ecx,DWORD PTR [ebp-0x6329ca51]
  41d761:	xchg   edi,eax
  41d762:	cs dec edx
  41d764:	rcr    BYTE PTR [ebx+0x7658841b],0x89
  41d76b:	push   ss
  41d76c:	lock and BYTE PTR [edi-0x23],0xa0
  41d771:	and    al,0xf8
  41d773:	xchg   ebp,eax
  41d774:	rol    BYTE PTR [edx-0x60],0xa8
  41d778:	xor    ebp,esp
  41d77a:	call   DWORD PTR [esp+ecx*1-0x5]
  41d77e:	pop    esp
  41d77f:	bound  esp,QWORD PTR [esi-0x7f15b573]
  41d785:	pop    ebp
  41d786:	icebp  
  41d787:	mov    ah,0x3c
  41d789:	xchg   edi,eax
  41d78a:	cmp    edi,edi
  41d78c:	jo     0x41d779
  41d78e:	cld    
  41d78f:	dec    ecx
  41d790:	push   ecx
  41d791:	sbb    eax,0xeb770648
  41d796:	pop    ds
  41d797:	ins    DWORD PTR es:[edi],dx
  41d798:	lods   al,BYTE PTR ds:[esi]
  41d799:	aaa    
  41d79a:	dec    ecx
  41d79b:	add    DWORD PTR [esi+0x31],edi
  41d79e:	push   ecx
  41d79f:	nop
  41d7a0:	rcl    BYTE PTR [ecx+esi*2-0x16],0xe9
  41d7a5:	fadd   QWORD PTR [ebx-0x3e]
  41d7a8:	lea    esi,[edi-0x234f222]
  41d7ae:	nop
  41d7af:	xor    esi,0xbbf7412e
  41d7b5:	outs   dx,BYTE PTR ds:[esi]
  41d7b6:	adc    bh,BYTE PTR [edx+0x4e]
  41d7b9:	test   ch,al
  41d7bb:	lds    edi,FWORD PTR [edx]
  41d7bd:	dec    eax
  41d7be:	or     esi,ecx
  41d7c0:	cmp    WORD PTR [ebp+0x4b],si
  41d7c4:	push   ds
  41d7c5:	or     cl,ah
  41d7c7:	xor    dl,BYTE PTR [ebx+0x2c]
  41d7ca:	dec    ebx
  41d7cb:	add    BYTE PTR [ecx+0x1e],dh
  41d7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7cf:	xchg   ebx,eax
  41d7d0:	mov    ds:0x9c139177,eax
  41d7d5:	call   0xdf79:0x294a8417
  41d7dc:	and    ch,BYTE PTR [edx+0x3c]
  41d7df:	dec    ebp
  41d7e0:	jae    0x41d7fc
  41d7e2:	je     0x41d7cf
  41d7e4:	leave  
  41d7e5:	out    dx,al
  41d7e6:	js     0x41d7f3
  41d7e8:	emms   
  41d7ea:	push   ebp
  41d7eb:	sbb    DWORD PTR [eax-0x38675429],ebp
  41d7f1:	cmp    DWORD PTR [eax+0x5c],0x16
  41d7f5:	add    BYTE PTR [edx],cl
  41d7f7:	dec    ebx
  41d7f8:	call   0xa2a063e2
  41d7fd:	aam    0xa1
  41d7ff:	rol    ch,0x6b
  41d802:	mov    dl,0xf7
  41d804:	outs   dx,DWORD PTR ds:[esi]
  41d805:	cmc    
  41d806:	dec    esi
  41d807:	or     BYTE PTR [edx+0x46],bh
  41d80a:	(bad)  
  41d80b:	loop   0x41d86a
  41d80d:	rol    edi,0x5c
  41d810:	icebp  
  41d811:	test   DWORD PTR [eax+0x38],edx
  41d814:	out    dx,al
  41d815:	adc    bh,dl
  41d817:	mov    cl,0xfb
  41d819:	xor    al,BYTE PTR [edi+0x77]
  41d81c:	das    
  41d81d:	daa    
  41d81e:	ret    0x71f2
  41d821:	mul    esp
  41d823:	jg     0x41d86a
  41d825:	mov    esp,0x630578d2
  41d82a:	jl     0x41d88d
  41d82c:	jb     0x41d828
  41d82e:	xchg   edi,eax
  41d82f:	jecxz  0x41d7fa
  41d831:	fs mov esp,?
  41d834:	inc    eax
  41d835:	add    dl,BYTE PTR [ecx]
  41d837:	or     edx,DWORD PTR [ebx]
  41d839:	ds xor al,0x60
  41d83c:	pop    ecx
  41d83d:	retf   
  41d83e:	jne    0x41d855
  41d840:	pop    es
  41d841:	dec    ebp
  41d842:	sub    al,0x4f
  41d844:	sbb    eax,0xb9041f12
  41d849:	push   ss
  41d84a:	in     eax,0x22
  41d84c:	xchg   esp,eax
  41d84d:	xchg   edi,eax
  41d84e:	stos   DWORD PTR es:[edi],eax
  41d84f:	in     al,0x9c
  41d851:	xchg   esi,eax
  41d852:	cmp    al,0x82
  41d854:	mov    edx,0x9534c8ab
  41d859:	imul   esi,DWORD PTR [esi-0x7c],0x2d
  41d85d:	sub    ebp,DWORD PTR [eax-0x14]
  41d860:	xchg   bh,bl
  41d862:	push   edi
  41d863:	data16 stc 
  41d865:	cwde   
  41d866:	mov    edx,0x36e52251
  41d86b:	in     al,0xe7
  41d86d:	inc    ebp
  41d86e:	ret    0x6dc0
  41d871:	mov    bl,BYTE PTR [ebx+0x19fcf7fe]
  41d877:	mov    eax,0xa0e28b37
  41d87c:	in     al,0x32
  41d87e:	(bad)  
  41d87f:	mov    bl,0xd3
  41d881:	mov    ecx,0x8ba2c714
  41d886:	cmp    eax,esi
  41d888:	ds popa 
  41d88a:	fadd   DWORD PTR [ebp+0x4d]
  41d88d:	je     0x41d864
  41d88f:	cmp    BYTE PTR [edx],dl
  41d891:	dec    edx
  41d892:	add    eax,0x486a33f
  41d897:	ds jne 0x41d876
  41d89a:	retf   
  41d89b:	fnstcw WORD PTR [esi+0x18]
  41d89e:	clc    
  41d89f:	daa    
  41d8a0:	push   cs
  41d8a1:	xor    DWORD PTR [eax+0x2e],eax
  41d8a4:	mov    ebx,0x3265f43f
  41d8a9:	inc    BYTE PTR [edx-0x7f]
  41d8ac:	xor    BYTE PTR [edi],bl
  41d8ae:	inc    esi
  41d8af:	mov    cl,0xcb
  41d8b1:	sub    esi,DWORD PTR [eax+0x6c576725]
  41d8b7:	jb     0x41d933
  41d8b9:	dec    ecx
  41d8ba:	push   edx
  41d8bb:	jl     0x41d91f
  41d8bd:	mov    ch,0xd
  41d8bf:	mov    dl,0x56
  41d8c1:	xor    al,0xcf
  41d8c3:	dec    edx
  41d8c4:	inc    esp
  41d8c5:	popf   
  41d8c6:	mov    al,ds:0x698227de
  41d8cb:	shl    DWORD PTR [ebp+0x30e12836],1
  41d8d1:	sub    eax,DWORD PTR ds:0x41539988
  41d8d7:	in     eax,dx
  41d8d8:	sub    DWORD PTR [edx-0x5cabfeaf],0xffffffdf
  41d8df:	(bad)  
  41d8e0:	sar    ecx,1
  41d8e2:	shl    ah,0x23
  41d8e5:	xlat   BYTE PTR ds:[ebx]
  41d8e6:	mov    ds:0x95e617c,al
  41d8eb:	mov    edi,0xb2e298c9
  41d8f0:	adc    DWORD PTR [ebx-0x2e9f4b69],0x65d87c7f
  41d8fa:	scas   al,BYTE PTR es:[edi]
  41d8fb:	aaa    
  41d8fc:	es aaa 
  41d8fe:	adc    BYTE PTR [edx+0x2],al
  41d901:	scas   al,BYTE PTR es:[edi]
  41d902:	imul   eax,DWORD PTR [edx+0x24],0x9a213baf
  41d909:	lods   eax,DWORD PTR ds:[esi]
  41d90a:	push   edx
  41d90b:	test   DWORD PTR [esi-0x362a18e5],eax
  41d911:	mov    al,0x58
  41d913:	add    BYTE PTR [esi+esi*2+0x217ca301],ah
  41d91a:	and    edi,DWORD PTR [ebx]
  41d91c:	mov    eax,0xcf773669
  41d921:	enter  0x906f,0xb9
  41d925:	cli    
  41d926:	mov    ds:0x267b8ec3,eax
  41d92b:	ss dec ebp
  41d92d:	push   ds
  41d92e:	lahf   
  41d92f:	into   
  41d930:	rcr    BYTE PTR [esi],cl
  41d932:	xchg   esp,eax
  41d933:	repnz fiadd DWORD PTR [ebx-0x17]
  41d937:	pop    eax
  41d938:	out    dx,eax
  41d939:	stos   BYTE PTR es:[edi],al
  41d93a:	rol    esi,1
  41d93c:	pop    ecx
  41d93d:	fidivr DWORD PTR [ebx]
  41d93f:	daa    
  41d940:	sahf   
  41d941:	imul   esi,ebx,0x7b
  41d944:	dec    eax
  41d945:	jecxz  0x41d985
  41d947:	push   esi
  41d948:	ins    BYTE PTR es:[edi],dx
  41d949:	sbb    eax,0xbfe53381
  41d94e:	sbb    ah,bl
  41d950:	dec    ebp
  41d951:	pop    ss
  41d952:	mov    bh,0xe1
  41d954:	lods   al,BYTE PTR ds:[esi]
  41d955:	push   0x4d
  41d957:	mov    ebx,0x9b62c12
  41d95c:	fwait
  41d95d:	out    0xa9,eax
  41d95f:	cmp    DWORD PTR [eax+0xda0abe7],0x17
  41d966:	(bad)  
  41d967:	test   dl,0x8f
  41d96a:	fsubr  DWORD PTR [edi-0x514cc018]
  41d970:	mov    bl,0x77
  41d972:	mov    bh,0x7d
  41d974:	xchg   edi,eax
  41d975:	jmp    0x3017:0x8b4d4d1d
  41d97c:	inc    eax
  41d97d:	ins    DWORD PTR es:[edi],dx
  41d97e:	outs   dx,BYTE PTR ds:[esi]
  41d97f:	in     eax,dx
  41d980:	stos   DWORD PTR es:[edi],eax
  41d981:	cdq    
  41d982:	js     0x41d95c
  41d984:	out    0x17,eax
  41d986:	pop    ds
  41d987:	cmp    ecx,DWORD PTR [edi+0x428e33c6]
  41d98d:	aas    
  41d98e:	inc    DWORD PTR [ebx-0x80]
  41d991:	xchg   esi,eax
  41d992:	mov    esp,0xc5384c42
  41d997:	add    eax,esi
  41d999:	jmp    0xf19a4c9e
  41d99e:	jbe    0x41d9b5
  41d9a0:	jp     0x41d9db
  41d9a2:	mov    esi,0x61ff156f
  41d9a7:	mov    DWORD PTR [eax+0x6331c749],edi
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	cwde   
  41d9af:	push   ecx
  41d9b0:	inc    esi
  41d9b1:	mov    WORD PTR [edi+0x41],fs
  41d9b4:	mov    esp,0xe06b384f
  41d9b9:	xlat   BYTE PTR ds:[ebx]
  41d9ba:	lea    ecx,[ebp-0x70]
  41d9bd:	push   ecx
  41d9be:	xchg   esi,eax
  41d9bf:	repz sub BYTE PTR [edi+0x4d6032c],ah
  41d9c6:	mov    al,ds:0x4c7dc92a
  41d9cb:	pushf  
  41d9cc:	xchg   ecx,eax
  41d9cd:	imul   esi,DWORD PTR [eax],0xffffff8f
  41d9d0:	sbb    al,0x38
  41d9d2:	or     ah,BYTE PTR [edx]
  41d9d4:	or     al,0x64
  41d9d6:	mov    esp,0xa0dd0732
  41d9db:	and    edx,DWORD PTR [ebp-0x275594cc]
  41d9e1:	test   bl,dh
  41d9e3:	pop    ss
  41d9e4:	lods   al,BYTE PTR ds:[esi]
  41d9e5:	adc    BYTE PTR [ebx],al
  41d9e7:	or     eax,DWORD PTR [ecx+0xe412f22]
  41d9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ee:	das    
  41d9ef:	xchg   ecx,eax
  41d9f0:	inc    ecx
  41d9f1:	sub    eax,0x5c976106
  41d9f6:	jmp    0x88ef914e
  41d9fb:	or     al,0x5e
  41d9fd:	or     ch,BYTE PTR [esi+edi*8-0x28bd8c54]
  41da04:	dec    eax
  41da05:	and    DWORD PTR [eax-0x6c0d1287],0xffffffc1
  41da0c:	ss clc 
  41da0e:	test   eax,0x26a387f1
  41da13:	pushf  
  41da14:	or     eax,0xa5ace15e
  41da19:	xor    al,0x2
  41da1b:	jns    0x41d9a7
  41da1d:	out    dx,eax
  41da1e:	daa    
  41da1f:	test   eax,0xcc25a105
  41da24:	push   eax
  41da25:	cwde   
  41da26:	pop    ebx
  41da27:	jg     0x41da16
  41da29:	sub    eax,DWORD PTR [ebx-0x58f6fb95]
  41da2f:	les    esi,FWORD PTR [edx+0x1653a010]
  41da35:	ret    
  41da36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da37:	mov    bh,0xd2
  41da39:	dec    ebp
  41da3a:	dec    DWORD PTR [edi+0x80f7901]
  41da40:	cmp    esp,DWORD PTR [edi+0x16ce865]
  41da46:	jnp    0x41da36
  41da48:	sti    
  41da49:	mov    bh,0x65
  41da4b:	mov    eax,ds:0xa913c546
  41da50:	xchg   ecx,eax
  41da51:	out    0x2c,eax
  41da53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da54:	mov    edi,0xb400e112
  41da59:	repnz sub eax,0xd4018549
  41da5f:	jp     0x41d9ef
  41da61:	mov    eax,0xe7379210
  41da66:	sbb    DWORD PTR ds:0xeff67952,ecx
  41da6c:	dec    esi
  41da6d:	fmul   DWORD PTR [ebx-0x67]
  41da70:	repnz aad 0xb4
  41da73:	fdivr  DWORD PTR [ecx+ecx*4-0x56ddc287]
  41da7a:	xchg   edi,eax
  41da7b:	push   ebx
  41da7c:	mov    DWORD PTR [edx+0x5f7347a0],ebx
  41da82:	fcomp  QWORD PTR [ebp+ecx*8-0x37]
  41da86:	popa   
  41da87:	repz push eax
  41da89:	lds    esp,FWORD PTR [ecx]
  41da8b:	inc    esp
  41da8c:	push   ecx
  41da8d:	mov    bl,0xc0
  41da8f:	dec    BYTE PTR [eax-0xc]
  41da92:	push   ebp
  41da93:	test   DWORD PTR [edi-0x682b014],0x285ca8c2
  41da9d:	xor    eax,0xc77ae381
  41daa2:	jae    0x41daba
  41daa4:	push   edi
  41daa5:	xor    al,0x52
  41daa7:	pushf  
  41daa8:	xchg   esi,eax
  41daa9:	cdq    
  41daaa:	adc    cl,ch
  41daac:	mov    ah,ah
  41daae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daaf:	adc    eax,0x14d53540
  41dab4:	jle    0x41da8e
  41dab6:	add    al,0xc7
  41dab8:	add    DWORD PTR [esi+ebp*4-0x69fe3868],0xe9e6f1b8
  41dac3:	jmp    0x2b31a2a1
  41dac8:	mov    esp,0x4a8516d1
  41dacd:	adc    eax,DWORD PTR [esi]
  41dacf:	lock pusha 
  41dad1:	add    BYTE PTR [ebx+eiz*1-0x43fe1784],dh
  41dad8:	adc    al,0x60
  41dada:	(bad)  
  41dadb:	(bad)  
  41dadc:	and    ebp,DWORD PTR ds:0x772e7c9c
  41dae2:	fcmovbe st,st(2)
  41dae4:	imul   edx,DWORD PTR [ebx],0xa24ae7f4
  41daea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daeb:	mov    esp,DWORD PTR [ebx-0x6586f177]
  41daf1:	sbb    DWORD PTR [edi+0x4f],ecx
  41daf4:	ja     0x41db23
  41daf6:	push   esp
  41daf7:	mov    ds:0xfca79fb2,al
  41dafc:	pop    ecx
  41dafd:	(bad)  
  41daff:	std    
  41db00:	inc    edx
  41db01:	inc    ecx
  41db02:	dec    esp
  41db03:	cmp    ah,BYTE PTR [ebx]
  41db05:	lods   eax,DWORD PTR ds:[esi]
  41db06:	or     DWORD PTR [ecx],ecx
  41db08:	push   0x56dab5f1
  41db0d:	add    eax,0x6220193e
  41db12:	pop    ecx
  41db13:	imul   esp,DWORD PTR [ecx],0xffffff80
  41db16:	pop    esi
  41db17:	mov    dh,0x39
  41db19:	inc    ebx
  41db1a:	ror    DWORD PTR ds:0x2dd87009,cl
  41db20:	mov    esi,0x5ee7d4d
  41db25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db26:	or     ecx,eax
  41db28:	push   0xfb9a5f8f
  41db2d:	jne    0x41db96
  41db2f:	sbb    esp,DWORD PTR [esi-0x6fe29849]
  41db35:	push   ebp
  41db36:	cmp    eax,DWORD PTR [eax-0x33]
  41db39:	jg     0x41db3c
  41db3b:	xchg   edx,eax
  41db3c:	jb     0x41db0d
  41db3e:	cwde   
  41db3f:	aam    0xa1
  41db41:	idiv   BYTE PTR [ecx+0x17]
  41db44:	shl    BYTE PTR [ebp-0x71],1
  41db47:	xchg   esi,eax
  41db48:	fbld   TBYTE PTR [ebp+0x34]
  41db4b:	xchg   edx,eax
  41db4c:	sbb    DWORD PTR [esi+0x2a],esi
  41db4f:	and    eax,0x5f8b4749
  41db54:	(bad)  
  41db55:	cmp    eax,0x6cb67e4d
  41db5a:	das    
  41db5b:	pop    ebx
  41db5c:	lods   al,BYTE PTR ds:[esi]
  41db5d:	aaa    
  41db5e:	or     al,0x7b
  41db60:	jbe    0x41db8f
  41db62:	cdq    
  41db63:	xchg   esp,eax
  41db64:	rol    BYTE PTR [eax],1
  41db66:	lds    edx,FWORD PTR [edi-0x57cb4cd4]
  41db6c:	push   eax
  41db6d:	stos   BYTE PTR es:[edi],al
  41db6e:	adc    DWORD PTR [ebx-0x27186a2a],edx
  41db74:	pop    ebx
  41db75:	ret    0x88e8
  41db78:	test   eax,0xd290ba5a
  41db7d:	adc    ah,dl
  41db7f:	pop    edi
  41db80:	imul   esi,DWORD PTR [esi],0x78498320
  41db86:	sub    ch,0xa3
  41db89:	xchg   edi,eax
  41db8a:	inc    esp
  41db8b:	xchg   ebp,eax
  41db8c:	fdiv   QWORD PTR [ecx+0x2b]
  41db8f:	outs   dx,DWORD PTR ds:[esi]
  41db90:	call   0xa666:0x9c176b87
  41db97:	retf   0x96d6
  41db9a:	add    eax,0xb821b28b
  41db9f:	xor    BYTE PTR [esi-0x27cd0376],dl
  41dba5:	add    BYTE PTR [esi],0x79
  41dba8:	imul   eax,edx,0xffffffee
  41dbab:	pop    ebx
  41dbac:	inc    esi
  41dbad:	push   0x71
  41dbaf:	jb     0x41db7b
  41dbb1:	mov    dl,0x5c
  41dbb3:	icebp  
  41dbb4:	pop    es
  41dbb5:	sbb    esi,ecx
  41dbb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbb8:	in     eax,dx
  41dbb9:	adc    BYTE PTR [eax-0x63],bh
  41dbbc:	sar    DWORD PTR [edx-0x1c03cd44],0x8a
  41dbc3:	fs repnz pop es
  41dbc6:	dec    edx
  41dbc7:	xor    DWORD PTR [edx],0x57f5d35a
  41dbcd:	nop
  41dbce:	xor    cl,BYTE PTR [ebx+0x3fe0b5be]
  41dbd4:	xor    al,0x39
  41dbd6:	das    
  41dbd7:	arpl   WORD PTR [esi+0x5e391329],si
  41dbdd:	xlat   BYTE PTR ds:[ebx]
  41dbde:	pop    ebx
  41dbdf:	bound  edi,QWORD PTR [ebp-0x41a2f3b4]
  41dbe5:	dec    esp
  41dbe6:	nop
  41dbe7:	pop    ebx
  41dbe8:	sub    DWORD PTR [esi-0x307ae20e],esp
  41dbee:	lea    edi,[ebx-0x682d32da]
  41dbf4:	ja     0x41dc04
  41dbf6:	or     BYTE PTR [ecx],0x1f
  41dbf9:	fild   WORD PTR [eax]
  41dbfb:	jo     0x41dc40
  41dbfd:	dec    esi
  41dbfe:	inc    ebp
  41dbff:	adc    eax,DWORD PTR [eax+0x5b]
  41dc02:	dec    ebx
  41dc03:	or     ecx,DWORD PTR [eax]
  41dc05:	ret    
  41dc06:	push   ds
  41dc07:	rsqrtps xmm4,XMMWORD PTR [eax]
  41dc0a:	test   BYTE PTR [eax],cl
  41dc0c:	mov    BYTE PTR [bx+si+0x72],0x7
  41dc11:	imul   ebx,DWORD PTR [edi+0x6606ad45],0xffffffe2
  41dc18:	add    eax,0xb29e5024
  41dc1d:	push   ds
  41dc1e:	jge    0x41dc98
  41dc20:	cmp    al,0x1f
  41dc22:	cmp    al,0xd7
  41dc24:	mov    dl,0xbb
  41dc26:	jg     0x41dc9f
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	cmp    BYTE PTR [eax+0x28179ccf],al
  41dc2f:	or     DWORD PTR [edi+0xa],0xffffffac
  41dc33:	lods   al,BYTE PTR ds:[esi]
  41dc34:	push   esi
  41dc35:	pop    ecx
  41dc36:	push   ecx
  41dc37:	push   esp
  41dc38:	les    edx,FWORD PTR [eax+0x4a]
  41dc3b:	(bad)  
  41dc3c:	call   0x736ca919
  41dc41:	pop    edx
  41dc42:	(bad)  
  41dc43:	shl    DWORD PTR [esp+ebp*2+0x74979211],1
  41dc4a:	or     BYTE PTR [ecx+0x1e21edb9],0x41
  41dc51:	retf   
  41dc52:	mov    ecx,0x4cb801ed
  41dc57:	jb     0x41dc9f
  41dc59:	jno    0x41dc93
  41dc5b:	mov    esi,ebx
  41dc5d:	push   edi
  41dc5e:	mov    ds:0x2ea0d748,al
  41dc63:	xchg   edx,eax
  41dc64:	inc    esi
  41dc65:	xrelease xchg BYTE PTR [eax-0x1b],dl
  41dc69:	mov    eax,0xa264d49
  41dc6e:	xchg   ax,ax
  41dc70:	xor    BYTE PTR [edi-0x5d],ah
  41dc73:	ror    dl,1
  41dc75:	inc    ecx
  41dc76:	xlat   BYTE PTR ds:[ebx]
  41dc77:	mov    dl,0x8f
  41dc79:	mov    esi,0x484a94c6
  41dc7e:	mov    ecx,0x687e9f6
  41dc83:	(bad)  
  41dc85:	pop    ecx
  41dc86:	push   ebx
  41dc87:	sbb    ch,0x84
  41dc8a:	and    esp,DWORD PTR [eax+ebx*8-0x23]
  41dc8e:	adc    BYTE PTR [ebp+edi*2-0x79],ch
  41dc92:	dec    edi
  41dc93:	pop    ss
  41dc94:	mov    ds:0x976af053,eax
  41dc99:	shr    dh,0x82
  41dc9c:	mov    edi,?
  41dc9e:	pop    es
  41dc9f:	push   ds
  41dca0:	mov    eax,0x60caf9b7
  41dca5:	lock in al,0xbd
  41dca8:	add    esp,DWORD PTR [edi+0x39871ebc]
  41dcae:	mov    ds:0xa94ecaa1,eax
  41dcb3:	pop    edx
  41dcb4:	sbb    eax,0xcb1bc76f
  41dcb9:	es mov edx,0x7047a57f
  41dcbf:	adc    ch,0x49
  41dcc2:	sbb    eax,0xa53aaaf
  41dcc7:	lock test BYTE PTR [eax],cl
  41dcca:	mov    ch,0x27
  41dccc:	into   
  41dccd:	push   ecx
  41dcce:	pop    esp
  41dccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd0:	ret    0x8c38
  41dcd3:	sub    ch,BYTE PTR [edx]
  41dcd5:	sti    
  41dcd6:	out    0xf9,al
  41dcd8:	scas   eax,DWORD PTR es:[edi]
  41dcd9:	push   esp
  41dcda:	add    BYTE PTR [ecx],bh
  41dcdc:	in     eax,0x17
  41dcde:	push   ds
  41dcdf:	mov    esp,0x51d87389
  41dce4:	inc    esp
  41dce5:	sub    bl,BYTE PTR [ebx+0x28]
  41dce8:	stc    
  41dce9:	scas   eax,DWORD PTR es:[edi]
  41dcea:	pusha  
  41dceb:	bound  ecx,QWORD PTR [ecx]
  41dced:	sti    
  41dcee:	xor    al,0xde
  41dcf0:	mov    bl,0xae
  41dcf2:	dec    ebx
  41dcf3:	scas   al,BYTE PTR es:[edi]
  41dcf4:	mov    ebx,0xec45cc73
  41dcf9:	inc    ebp
  41dcfa:	sbb    al,0x5c
  41dcfc:	pop    edi
  41dcfd:	mov    edx,0x59df0ef6
  41dd02:	loopne 0x41dc9a
  41dd04:	jnp    0x41dcf6
  41dd06:	fcom   QWORD PTR [edx+0x7dd53018]
  41dd0c:	daa    
  41dd0d:	sub    eax,DWORD PTR [ebx-0x3c]
  41dd10:	xchg   ebp,eax
  41dd11:	out    dx,eax
  41dd12:	ins    BYTE PTR es:[edi],dx
  41dd13:	pushf  
  41dd14:	icebp  
  41dd15:	lahf   
  41dd16:	and    al,0xe9
  41dd18:	jg     0x41dd83
  41dd1a:	jmp    0x41dcec
  41dd1c:	pushf  
  41dd1d:	pop    edx
  41dd1e:	cmp    al,0x5f
  41dd21:	mov    esi,0xc1700aa3
  41dd26:	rol    BYTE PTR ds:0x6118a336,cl
  41dd2c:	ss (bad) 
  41dd2e:	les    ebx,FWORD PTR [ecx]
  41dd30:	mov    esp,0xbb9f51fa
  41dd35:	sahf   
  41dd36:	das    
  41dd37:	lahf   
  41dd38:	or     al,0x30
  41dd3a:	and    al,0x29
  41dd3c:	(bad)  
  41dd3d:	loope  0x41dd7c
  41dd3f:	mov    esp,0x2c60054a
  41dd44:	xchg   ebx,eax
  41dd45:	icebp  
  41dd46:	adc    esi,DWORD PTR [ebx+0x20]
  41dd49:	push   edi
  41dd4a:	mov    esi,edi
  41dd4c:	inc    DWORD PTR ds:0x1c5c2d9b
  41dd52:	adc    ebx,DWORD PTR ds:0xbfb26834
  41dd58:	out    0xe8,al
  41dd5a:	jae    0x41dce5
  41dd5c:	je     0x41ddca
  41dd5e:	or     ecx,edx
  41dd60:	sbb    al,0x2
  41dd62:	sti    
  41dd63:	mov    al,ds:0x5f603524
  41dd68:	mov    bh,0x21
  41dd6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd6b:	and    edx,0xffffff90
  41dd6e:	or     BYTE PTR [edx-0x5371b588],bh
  41dd74:	sbb    DWORD PTR [ecx+0x7b],edi
  41dd77:	cli    
  41dd78:	std    
  41dd79:	lock or BYTE PTR [ebx],al
  41dd7c:	xor    edi,DWORD PTR cs:[edx-0x1d]
  41dd80:	xor    ch,BYTE PTR [ecx+edi*4]
  41dd83:	or     DWORD PTR [edx-0x27],ecx
  41dd86:	mov    bl,0x13
  41dd88:	push   esp
  41dd89:	inc    ebx
  41dd8a:	pop    ebp
  41dd8b:	inc    ecx
  41dd8c:	add    DWORD PTR [edi],eax
  41dd8e:	lock inc ecx
  41dd90:	jl     0x41dd4c
  41dd92:	mov    eax,ds:0x428af120
  41dd97:	and    DWORD PTR [ecx+0x3c],ebx
  41dd9a:	and    dh,cl
  41dd9c:	sahf   
  41dd9d:	out    0xd0,al
  41dd9f:	xor    esp,DWORD PTR [edx+0x298c218e]
  41dda5:	or     edi,esi
  41dda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dda8:	dec    eax
  41dda9:	ins    BYTE PTR es:[edi],dx
  41ddaa:	add    edi,DWORD PTR [edx-0x4e9fc99c]
  41ddb0:	cmp    eax,0xa82b17bd
  41ddb5:	jmp    0x41dd95
  41ddb7:	lock jecxz 0x41dd5f
  41ddba:	mov    al,ds:0x5134cb93
  41ddbf:	cmp    ecx,DWORD PTR [ebx-0x40793f4c]
  41ddc5:	push   ebx
  41ddc6:	jae    0x41ddde
  41ddc8:	dec    edx
  41ddc9:	test   eax,0x7233b534
  41ddce:	lods   eax,DWORD PTR ds:[esi]
  41ddcf:	pushf  
  41ddd0:	into   
  41ddd1:	in     al,dx
  41ddd2:	and    BYTE PTR [eax-0x4],cl
  41ddd5:	clc    
  41ddd6:	loopne 0x41dd62
  41ddd8:	outs   dx,BYTE PTR ds:[esi]
  41ddd9:	es scas al,BYTE PTR es:[edi]
  41dddb:	push   es
  41dddc:	(bad)  
  41dddd:	sbb    BYTE PTR [eax],bl
  41dddf:	push   0x9e9bbcb2
  41dde4:	xchg   ecx,eax
  41dde5:	clc    
  41dde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde7:	and    al,0xdc
  41dde9:	cmp    BYTE PTR [esi+0x299e60e7],bh
  41ddef:	(bad)  
  41ddf0:	adc    BYTE PTR [ebx+0x59],al
  41ddf3:	pop    ecx
  41ddf4:	imul   ebp,ecx,0x5c6a9d4c
  41ddfa:	push   ss
  41ddfb:	cmp    esi,edi
  41ddfd:	add    eax,0xebefd63a
  41de02:	daa    
  41de03:	in     eax,0x22
  41de05:	and    BYTE PTR ss:[eax],bh
  41de08:	(bad)  
  41de09:	xchg   edi,eax
  41de0a:	adc    ch,BYTE PTR [eax+edx*4-0x3e]
  41de0e:	cwde   
  41de0f:	aad    0x95
  41de11:	or     ebx,ebx
  41de13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de14:	push   cs
  41de15:	test   BYTE PTR ds:0xdc0a8751,bl
  41de1c:	jbe    0x41de44
  41de1e:	mov    ecx,0xdb1e0d97
  41de23:	into   
  41de24:	(bad)  [edi+0x906d118]
  41de2a:	lds    eax,FWORD PTR [eax]
  41de2c:	jb     0x41de64
  41de2e:	aad    0x39
  41de30:	dec    eax
  41de31:	jnp    0x41ddf0
  41de33:	xchg   BYTE PTR [edx+edx*4-0x55],dl
  41de37:	xchg   esi,esp
  41de39:	xor    eax,0x2828fb6f
  41de3e:	in     al,dx
  41de3f:	jb     0x41ddc9
  41de41:	cmp    BYTE PTR [edi+eax*8],bl
  41de44:	push   es
  41de45:	sub    eax,0x829f30a
  41de4a:	(bad)  
  41de4b:	scas   al,BYTE PTR es:[edi]
  41de4c:	mov    ?,WORD PTR ds:0xc128a89c
  41de52:	push   ecx
  41de53:	push   cs
  41de54:	xor    eax,0x14bacce0
  41de59:	loop   0x41de2f
  41de5b:	adc    al,0x8a
  41de5d:	or     DWORD PTR [edi+0x5270ad2a],ebx
  41de63:	call   0xec25:0xc4508c0a
  41de6a:	dec    eax
  41de6b:	cmp    DWORD PTR [ecx+0xc93e10],esi
  41de71:	adc    dh,BYTE PTR [esi-0x5ef2155d]
  41de77:	ficom  DWORD PTR [ebp-0x2]
  41de7a:	cs pop ecx
  41de7c:	or     DWORD PTR ds:0x231e0fd8,edx
  41de82:	daa    
  41de83:	das    
  41de84:	fimul  WORD PTR [ebp+ecx*1+0x52]
  41de88:	fimul  DWORD PTR [ecx+0x73]
  41de8b:	xchg   ebx,eax
  41de8c:	mov    BYTE PTR [esi+0x24841aa3],cl
  41de92:	mov    ah,0x4
  41de94:	mov    ch,0x2
  41de96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de97:	cwde   
  41de98:	mov    edx,0xc2450db2
  41de9d:	cmp    BYTE PTR [ecx+0x1],bh
  41dea0:	outs   dx,DWORD PTR ds:[esi]
  41dea1:	pop    edi
  41dea2:	mov    cl,0xad
  41dea4:	xchg   DWORD PTR [eax+0x3005879c],ecx
  41deaa:	outs   dx,BYTE PTR ds:[esi]
  41deab:	mov    bh,0x78
  41dead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deae:	xchg   BYTE PTR [ebp-0x467e8fcd],bl
  41deb4:	lea    esp,[eax]
  41deb6:	push   eax
  41deb7:	and    BYTE PTR [edx],0x51
  41deba:	xchg   ebx,eax
  41debb:	dec    ecx
  41debc:	ja     0x41df06
  41debe:	hlt    
  41debf:	outs   dx,DWORD PTR ds:[esi]
  41dec0:	test   BYTE PTR ds:[ebx-0x364f597b],ch
  41dec7:	imul   esp,DWORD PTR [edi+0x55],0x7c
  41decb:	fld    DWORD PTR [edi]
  41decd:	repz inc ebx
  41decf:	xor    al,0x1e
  41ded1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ded2:	lea    eax,[edx]
  41ded4:	lea    edx,[ecx+0x1]
  41ded7:	(bad)  
  41ded8:	aas    
  41ded9:	ror    BYTE PTR [ebp-0x11397221],1
  41dedf:	xchg   edx,eax
  41dee0:	aam    0x37
  41dee2:	adc    BYTE PTR [esi],ch
  41dee4:	sbb    BYTE PTR [ecx-0x63],dh
  41dee7:	shl    ecx,0x13
  41deea:	xchg   BYTE PTR ds:0x86b928ef,al
  41def0:	xlat   BYTE PTR ds:[ebx]
  41def1:	xor    al,0xbd
  41def3:	cdq    
  41def4:	push   eax
  41def5:	xchg   ebp,eax
  41def6:	fdivr  QWORD PTR [ebx]
  41def8:	outs   dx,BYTE PTR ds:[esi]
  41def9:	test   al,cl
  41defb:	sbb    bl,BYTE PTR [eax+0x4]
  41defe:	mov    al,0x88
  41df00:	iret   
  41df01:	xor    DWORD PTR [ebp+ebx*4+0xba34a97],0x4f
  41df09:	enter  0x9e11,0xd0
  41df0d:	fbld   TBYTE PTR [esi]
  41df0f:	sti    
  41df10:	outs   dx,BYTE PTR ds:[esi]
  41df11:	dec    edi
  41df12:	dec    eax
  41df13:	or     BYTE PTR [eax],al
  41df15:	in     eax,0xbb
  41df17:	daa    
  41df18:	push   0xffffffbb
  41df1a:	push   0x5b3c7957
  41df1f:	cmp    al,0xf7
  41df21:	das    
  41df22:	xchg   ebx,eax
  41df23:	xchg   esp,eax
  41df24:	mov    ds:0x799b3266,al
  41df29:	outs   dx,DWORD PTR ds:[esi]
  41df2a:	push   eax
  41df2b:	es jmp 0x80ec:0xdc7d8e46
  41df33:	fwait
  41df34:	push   edx
  41df35:	mov    ch,0xea
  41df37:	push   esp
  41df38:	add    ah,BYTE PTR [eax+0xf87f558]
  41df3e:	retf   0xd107
  41df41:	sub    ah,BYTE PTR [esi-0x7d]
  41df44:	mov    esp,0x9da225c7
  41df49:	xor    BYTE PTR [ebx],bh
  41df4b:	into   
  41df4c:	or     BYTE PTR [edi+ebp*2],bl
  41df4f:	jp     0x41df2c
  41df51:	mov    ds:0x8dc2afcd,eax
  41df56:	jnp    0x41df50
  41df58:	mov    dh,0xaf
  41df5a:	add    bl,BYTE PTR [ebx+0x75]
  41df5d:	nop
  41df5e:	ret    0xded9
  41df61:	and    al,0xde
  41df63:	mov    edi,0x46f2d404
  41df68:	xor    dl,BYTE PTR [edi]
  41df6a:	test   eax,0x7b49b0ec
  41df6f:	push   ebx
  41df70:	lods   al,BYTE PTR ds:[esi]
  41df71:	xor    DWORD PTR [edx-0x35],esi
  41df74:	ror    BYTE PTR ds:0x506ae783,0xea
  41df7b:	popf   
  41df7c:	clc    
  41df7d:	push   0x6e
  41df7f:	and    al,0xf9
  41df81:	retf   
  41df82:	jns    0x41df29
  41df84:	and    esp,DWORD PTR [ebx+ebx*4]
  41df87:	loop   0x41dffd
  41df89:	mov    esp,0x61b32fcc
  41df8e:	and    bl,BYTE PTR ds:0xd340d5fa
  41df94:	mov    DWORD PTR [ecx+eiz*2-0x31],esi
  41df98:	lods   eax,DWORD PTR ds:[esi]
  41df99:	(bad)  
  41df9a:	(bad)  
  41df9b:	sbb    eax,0x497ebf54
  41dfa0:	out    0x68,al
  41dfa2:	adc    al,0x21
  41dfa4:	dec    ecx
  41dfa5:	cs mov bh,0xc8
  41dfa8:	cdq    
  41dfa9:	mov    edi,0xadc71e30
  41dfae:	lea    eax,[ebx+eiz*4+0x68]
  41dfb2:	cld    
  41dfb3:	inc    esp
  41dfb4:	jnp    0x41df73
  41dfb6:	add    esp,DWORD PTR [edx]
  41dfb8:	jecxz  0x41dfc1
  41dfba:	ja     0x41df94
  41dfbc:	in     al,0x83
  41dfbe:	pop    edi
  41dfbf:	mov    al,ds:0x37a84a76
  41dfc4:	xchg   DWORD PTR ds:0xc9af2596,edx
  41dfca:	cmp    ebp,DWORD PTR [ebx-0x46]
  41dfcd:	popf   
  41dfce:	xor    eax,0x2ef25d6c
  41dfd3:	out    0x44,al
  41dfd5:	add    BYTE PTR [eax+0x4a],ch
  41dfd8:	test   BYTE PTR [ebx],dh
  41dfda:	jp     0x41dfc0
  41dfdc:	icebp  
  41dfdd:	in     al,0x7b
  41dfdf:	hlt    
  41dfe0:	mov    bh,0xaa
  41dfe2:	idiv   DWORD PTR [ecx]
  41dfe4:	and    BYTE PTR [esi],ch
  41dfe6:	dec    ecx
  41dfe7:	leave  
  41dfe8:	popf   
  41dfe9:	push   ss
  41dfea:	lods   al,BYTE PTR ds:[esi]
  41dfeb:	dec    esi
  41dfec:	jmp    0x41dff1
  41dfee:	ins    BYTE PTR es:[edi],dx
  41dfef:	pushw  es
  41dff1:	jmp    0x41e02d
  41dff3:	mov    cl,0xc5
  41dff5:	mov    bh,0xfc
  41dff7:	ficomp DWORD PTR [edi+eiz*4]
  41dffa:	imul   ecx,DWORD PTR gs:[edx+ecx*2-0x6df57ba3],0xaeddb4c
  41e006:	outs   dx,BYTE PTR ds:[esi]
  41e007:	aam    0x65
  41e009:	mov    bl,0x67
  41e00b:	jl     0x41e05d
  41e00d:	inc    ebp
  41e00e:	aad    0x9c
  41e010:	sti    
  41e011:	push   ebp
  41e012:	xchg   edi,eax
  41e013:	cmp    bl,BYTE PTR [ecx-0x61]
  41e016:	jae    0x41dfb2
  41e018:	mov    DWORD PTR [ebp-0x5e],eax
  41e01b:	jns    0x41dfb0
  41e01d:	inc    eax
  41e01e:	lea    ebx,[edx-0x5e3dc4a5]
  41e024:	adc    BYTE PTR [esi-0x16bb5e32],0x45
  41e02b:	jns    0x41e03b
  41e02d:	leave  
  41e02e:	jae    0x41dfbf
  41e030:	out    0x7f,al
  41e032:	or     DWORD PTR [edx-0x18],esp
  41e035:	test   eax,0x9b0f0983
  41e03a:	xchg   esi,eax
  41e03b:	(bad)  
  41e03c:	fnstenv [ecx-0x22a0b334]
  41e042:	fdecstp 
  41e044:	call   0x855e:0xd460bc19
  41e04b:	push   cs
  41e04c:	pop    edi
  41e04d:	add    al,0x2c
  41e04f:	loopne 0x41dfda
  41e051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e052:	mov    esi,0x49f7e09
  41e057:	repnz push edi
  41e059:	mov    dh,0xa
  41e05b:	(bad)  
  41e05c:	ss push esi
  41e05e:	pop    ss
  41e05f:	jns    0x41e0bf
  41e061:	add    al,0xa4
  41e063:	sub    ebp,DWORD PTR [eax+0x1b]
  41e066:	mov    dh,BYTE PTR [esp+esi*1-0x35e68161]
  41e06d:	mov    ds:0x2dabd3d4,al
  41e072:	mov    ch,0x1b
  41e074:	dec    ecx
  41e075:	in     eax,dx
  41e076:	loope  0x41e0c9
  41e078:	leave  
  41e079:	xchg   ebp,eax
  41e07a:	push   ebp
  41e07b:	imul   esi,DWORD PTR [ebp+0x17],0xdba6ddd4
  41e082:	fcom   st(1)
  41e084:	add    al,0x41
  41e086:	out    0x9d,al
  41e088:	mov    DWORD PTR [ecx+0x37f7e3bb],edx
  41e08e:	int3   
  41e08f:	cmp    bh,BYTE PTR [eax]
  41e091:	leave  
  41e092:	imul   esp,DWORD PTR ds:0x6550e9a8,0xbb7183a9
  41e09c:	sbb    DWORD PTR [edx],0xffffffb5
  41e09f:	xchg   edi,ecx
  41e0a1:	push   ecx
  41e0a3:	sbb    BYTE PTR [eax],al
  41e0a5:	pop    eax
  41e0a6:	push   ecx
  41e0a7:	cmovnp ecx,ecx
  41e0aa:	shr    DWORD PTR [ebp-0x47],cl
  41e0ad:	push   gs
  41e0af:	in     al,dx
  41e0b0:	push   cs
  41e0b1:	xchg   ecx,eax
  41e0b2:	cli    
  41e0b3:	lock dec edx
  41e0b5:	push   eax
  41e0b6:	fs xor al,0x18
  41e0b9:	stc    
  41e0ba:	mov    ds:0xda87e11,eax
  41e0bf:	push   esp
  41e0c0:	inc    ecx
  41e0c1:	daa    
  41e0c2:	lds    eax,FWORD PTR [ebx+0x58a97c3f]
  41e0c8:	nop
  41e0c9:	xchg   ebp,eax
  41e0ca:	push   ds
  41e0cb:	xchg   ebp,eax
  41e0cc:	dec    ebp
  41e0cd:	inc    eax
  41e0ce:	sub    eax,DWORD PTR [esp+ebp*1]
  41e0d1:	in     al,0x26
  41e0d3:	in     eax,dx
  41e0d4:	scas   eax,DWORD PTR es:[edi]
  41e0d5:	fbstp  TBYTE PTR [ebx-0x6]
  41e0d8:	loope  0x41e0ff
  41e0da:	jmp    0x41e0cb
  41e0dc:	inc    ebp
  41e0dd:	fadd   st,st(7)
  41e0df:	stc    
  41e0e0:	pcmpgtw mm3,QWORD PTR [eax-0x21c66df8]
  41e0e7:	sub    al,0xc6
  41e0e9:	mov    ?,WORD PTR [esi+0x36]
  41e0ec:	sub    edi,DWORD PTR [ecx+0x18]
  41e0ef:	xor    cl,BYTE PTR [eax+edx*1-0x254268ca]
  41e0f6:	int    0xe4
  41e0f8:	(bad)  
  41e0f9:	and    bl,BYTE PTR [esi-0x1269da72]
  41e0ff:	push   edx
  41e100:	cmc    
  41e101:	neg    BYTE PTR [ebp+0x2]
  41e104:	adc    BYTE PTR [ecx+eax*8],ch
  41e107:	jb     0x41e137
  41e109:	dec    eax
  41e10a:	jbe    0x41e100
  41e10c:	adc    dh,dl
  41e10e:	adc    eax,0x8e917dd5
  41e113:	test   eax,0x4d82a150
  41e118:	adc    edi,DWORD PTR [ecx+0x56]
  41e11b:	(bad)  
  41e11c:	sbb    BYTE PTR [ebp-0x2b081806],dl
  41e122:	out    0xd4,al
  41e124:	mov    al,ds:0x78a841e5
  41e129:	call   0xad30015d
  41e12e:	mov    WORD PTR [ebx-0x34897e97],?
  41e134:	pop    ss
  41e135:	addr16 jle 0x41e10f
  41e138:	xor    esi,DWORD PTR [ecx]
  41e13a:	clc    
  41e13b:	bound  eax,QWORD PTR [esi+0x6a]
  41e13e:	test   DWORD PTR [ebp+0x66],edi
  41e141:	dec    esp
  41e142:	test   al,ch
  41e144:	(bad)  
  41e146:	ins    BYTE PTR es:[edi],dx
  41e147:	mov    edi,0xacd6af62
  41e14c:	jmp    0xfc774baf
  41e151:	rcr    esp,0x44
  41e154:	(bad)  
  41e155:	outs   dx,BYTE PTR ds:[esi]
  41e156:	inc    ecx
  41e157:	mov    esi,ds
  41e159:	pop    esp
  41e15a:	popa   
  41e15b:	shr    DWORD PTR [edi+0x6c],0x73
  41e15f:	jbe    0x41e121
  41e161:	out    dx,eax
  41e162:	push   es
  41e163:	push   ebp
  41e164:	inc    eax
  41e165:	sahf   
  41e166:	and    eax,ebp
  41e168:	xor    DWORD PTR [ebx+0x77865d6b],ebx
  41e16e:	mov    BYTE PTR [esi+0x7b8eda0e],0x6f
  41e175:	popa   
  41e176:	dec    esi
  41e177:	shr    dl,1
  41e179:	adc    edi,DWORD PTR [esi-0x17]
  41e17c:	fisub  WORD PTR [edi-0x80]
  41e17f:	push   0xcbbbff5c
  41e184:	scas   al,BYTE PTR es:[edi]
  41e185:	adc    bl,BYTE PTR [ebx]
  41e187:	fincstp 
  41e189:	mov    ch,0xb7
  41e18b:	and    BYTE PTR [edi+0x7e],bl
  41e18e:	in     eax,dx
  41e18f:	xchg   DWORD PTR [ebp+0x6e],esi
  41e192:	pop    ss
  41e193:	mov    WORD PTR [edi],fs
  41e195:	cli    
  41e196:	mov    esp,0xb8ce5039
  41e19b:	push   cs
  41e19c:	adc    al,0x85
  41e19e:	pop    edx
  41e19f:	inc    ebx
  41e1a0:	(bad)  
  41e1a3:	(bad)  
  41e1a4:	adc    DWORD PTR [edx],ecx
  41e1a6:	cs push cs
  41e1a8:	cld    
  41e1a9:	lds    eax,FWORD PTR [ebx+0x7703a05e]
  41e1af:	ret    
  41e1b0:	rcl    DWORD PTR [edi+0x6],0x12
  41e1b4:	bound  ebx,QWORD PTR [edx]
  41e1b6:	sub    BYTE PTR [edx+0x8],ch
  41e1b9:	and    DWORD PTR ds:0x8de2aed3,ecx
  41e1bf:	dec    edi
  41e1c0:	mov    dh,0x9d
  41e1c2:	stos   BYTE PTR es:[edi],al
  41e1c3:	push   ecx
  41e1c4:	jl     0x808317b4
  41e1ca:	mov    esp,0xaa3e8cea
  41e1cf:	int    0x19
  41e1d1:	(bad)  
  41e1d2:	int    0x88
  41e1d4:	fbld   TBYTE PTR [edx]
  41e1d6:	xor    edi,DWORD PTR [edi]
  41e1d8:	loope  0x41e1ce
  41e1da:	jmp    0xe3de53b
  41e1df:	cdq    
  41e1e0:	ja     0x41e1f9
  41e1e2:	in     al,dx
  41e1e3:	xor    eax,0x191618da
  41e1e8:	(bad)  [ecx]
  41e1ea:	fdivr  DWORD PTR [ebp-0x7435561a]
  41e1f0:	arpl   WORD PTR [edi],bx
  41e1f2:	push   0xa0d1361
  41e1f7:	dec    esi
  41e1f8:	cs and al,0xfb
  41e1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1fc:	and    cl,bh
  41e1fe:	add    BYTE PTR [ebp-0x5d],bl
  41e201:	into   
  41e202:	xchg   DWORD PTR [edx-0x8],ebp
  41e205:	fwait
  41e206:	jb     0x41e1b6
  41e208:	shl    DWORD PTR [ebp+0x65],1
  41e20b:	adc    BYTE PTR [eax],dl
  41e20d:	push   0x7d54290f
  41e212:	pop    esi
  41e213:	icebp  
  41e214:	mov    al,ds:0xe2275052
  41e219:	dec    ecx
  41e21a:	mov    bl,0xde
  41e21c:	xchg   BYTE PTR [edi-0x321b7b52],ah
  41e222:	ret    0x9672
  41e225:	hlt    
  41e226:	or     al,0xb1
  41e228:	dec    ecx
  41e229:	lds    ebp,FWORD PTR [esi+0x37]
  41e22c:	jmp    0x41e26b
  41e22e:	sbb    ch,dl
  41e230:	(bad)  
  41e231:	jge    0x41e296
  41e233:	push   esi
  41e234:	pop    ebx
  41e235:	in     al,0xc
  41e237:	stc    
  41e238:	push   cs
  41e239:	retf   0x8a70
  41e23c:	or     BYTE PTR [edx],0x2f
  41e23f:	sub    bl,BYTE PTR [edx+ebp*4]
  41e242:	fcom   DWORD PTR [esp+eax*2-0x5393c71c]
  41e249:	add    al,0xd7
  41e24b:	pop    ds
  41e24c:	add    eax,0x9025f0ee
  41e251:	dec    edx
  41e252:	outs   dx,BYTE PTR ds:[esi]
  41e253:	jecxz  0x41e2cf
  41e255:	jmp    0xdb30:0x83ddd0cc
  41e25c:	pop    edi
  41e25d:	mov    bh,0x24
  41e25f:	sbb    BYTE PTR [ecx-0x433ce54],dl
  41e265:	jmp    esp
  41e267:	sbb    al,BYTE PTR [edx-0x13]
  41e26a:	xchg   ecx,eax
  41e26b:	cmp    al,0x61
  41e26d:	repnz les ecx,FWORD PTR [edi]
  41e270:	pop    eax
  41e271:	aaa    
  41e272:	fcom   DWORD PTR [edi]
  41e274:	out    dx,eax
  41e275:	inc    esp
  41e276:	mov    ch,0x20
  41e278:	sti    
  41e279:	mov    eax,0xbd61c973
  41e27e:	ss push ebx
  41e280:	jle    0x41e27a
  41e282:	sbb    BYTE PTR [edx],dl
  41e284:	test   DWORD PTR [ecx-0x1f],edx
  41e287:	push   eax
  41e288:	shl    dh,1
  41e28a:	stos   DWORD PTR es:[edi],eax
  41e28b:	jmp    0x41e26b
  41e28d:	je     0x41e2af
  41e28f:	xor    DWORD PTR [esi-0x2126f6ea],ebp
  41e295:	mov    ebp,0x4fc2dfa8
  41e29a:	icebp  
  41e29b:	xor    DWORD PTR [eax],edx
  41e29d:	scas   eax,DWORD PTR es:[edi]
  41e29e:	dec    ebp
  41e29f:	xor    eax,0xacd0891d
  41e2a4:	mov    ebx,0x90db9a72
  41e2a9:	cmp    DWORD PTR [ecx],ebp
  41e2ab:	in     eax,dx
  41e2ac:	mov    dh,0x43
  41e2ae:	ret    
  41e2af:	and    al,ch
  41e2b1:	mov    edi,0xfe8656e5
  41e2b6:	imul   ecx,DWORD PTR [edi-0x2dc7970c],0xffffffc6
  41e2bd:	out    dx,eax
  41e2be:	push   edx
  41e2bf:	lock jo 0x41e2a0
  41e2c2:	and    al,0xf9
  41e2c4:	rcr    ah,0x38
  41e2c7:	inc    edx
  41e2c8:	repz cmp al,0x83
  41e2cb:	dec    eax
  41e2cc:	ins    DWORD PTR es:[edi],dx
  41e2cd:	stos   BYTE PTR es:[edi],al
  41e2ce:	jae    0x41e26e
  41e2d0:	ror    DWORD PTR [ebp-0x3076b5],1
  41e2d6:	mov    eax,ds:0x179f5acc
  41e2db:	out    0xb6,al
  41e2dd:	jne    0x41e2b7
  41e2df:	sub    edx,0xdcf8f7f
  41e2e5:	add    DWORD PTR [esi],edx
  41e2e7:	jno    0x41e2b2
  41e2e9:	dec    ebx
  41e2ea:	shl    BYTE PTR [ebp+ebp*2+0x26d79a96],0x4a
  41e2f2:	pop    es
  41e2f3:	jge    0x41e275
  41e2f5:	lods   al,BYTE PTR ds:[esi]
  41e2f6:	add    bh,BYTE PTR [edi+0x36]
  41e2f9:	dec    ebx
  41e2fa:	jb     0x41e320
  41e2fc:	les    edx,FWORD PTR [edx]
  41e2fe:	loope  0x41e36b
  41e300:	cdq    
  41e301:	inc    ebp
  41e302:	sub    esi,0xe324f4a0
  41e308:	ror    esp,0x28
  41e30b:	mov    bl,BYTE PTR [esi-0x59]
  41e30e:	xchg   ebp,eax
  41e30f:	pop    ss
  41e310:	or     esp,DWORD PTR [esi+0x4d]
  41e313:	lahf   
  41e314:	repnz loopne 0x41e2da
  41e317:	out    0x5a,al
  41e319:	mov    edi,DWORD PTR [edi]
  41e31b:	mov    ebx,DWORD PTR [eax+0x3c]
  41e31e:	lea    edi,[ebx+edi*8+0x78]
  41e322:	mov    edi,DWORD PTR [edi+eax*1]
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0x55990de9
  41f721:	nop
  41f722:	and    BYTE PTR [ecx+0x1d7b7c24],al
  41f728:	sahf   
  41f729:	jnp    0x41f7a6
  41f72b:	pop    ds
  41f72c:	data16 lahf 
  41f72e:	scas   al,BYTE PTR es:[edi]
  41f72f:	shr    BYTE PTR [edi+0x523f54b8],cl
  41f735:	pop    esp
  41f736:	sahf   
  41f737:	push   es
  41f738:	adc    DWORD PTR [edx+0x33983013],edx
  41f73e:	sub    al,0x50
  41f741:	inc    edi
  41f742:	jp     0x41f77d
  41f744:	fdivr  DWORD PTR [esi]
  41f746:	or     al,BYTE PTR [edx]
  41f748:	mov    ah,0x98
  41f74a:	pop    esi
  41f74b:	inc    esi
  41f74c:	repz xchg edx,eax
  41f74e:	mov    edi,0x8277574
  41f753:	imul   eax
  41f755:	push   ds
  41f756:	inc    edi
  41f757:	lds    esi,FWORD PTR [ecx+0x5b5835b3]
  41f75d:	rcl    DWORD PTR [ecx+0x794a7a13],0x32
  41f764:	inc    eax
  41f765:	pop    esp
  41f766:	xor    al,0xb2
  41f768:	xor    al,0x1a
  41f76a:	or     ah,ch
  41f76c:	add    edi,edi
  41f76e:	cmp    DWORD PTR [edx-0x35],ebx
  41f771:	mov    al,ds:0xf59890e9
  41f776:	dec    esi
  41f777:	add    al,0x2f
  41f779:	int    0xc
  41f77b:	inc    ebx
  41f77c:	mov    edx,0xec2e2fd2
  41f781:	ret    0x3a33
  41f784:	sti    
  41f785:	mov    ebx,0xd6d43f08
  41f78a:	cwde   
  41f78b:	jnp    0x41f773
  41f78d:	dec    edi
  41f78e:	into   
  41f78f:	les    ebp,FWORD PTR [edi+0x572ebf23]
  41f795:	xor    al,0x9c
  41f797:	shl    BYTE PTR [ecx-0x10f3ae8],0xb2
  41f79e:	sti    
  41f79f:	into   
  41f7a0:	in     eax,dx
  41f7a1:	and    DWORD PTR [edi+0x5bd9ea6f],esp
  41f7a7:	(bad)  
  41f7a8:	push   esi
  41f7a9:	(bad)  
  41f7aa:	in     al,0xdc
  41f7ac:	(bad)  
  41f7ad:	loope  0x41f7ea
  41f7af:	(bad)  
  41f7b0:	jmp    edx
  41f7b2:	jmp    0xc2fe21b6
  41f7b7:	scas   al,BYTE PTR es:[edi]
  41f7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b9:	jp     0x41f800
  41f7bb:	ins    DWORD PTR es:[edi],dx
  41f7bc:	pop    ebx
  41f7bd:	dec    DWORD PTR [ebx+0x108fd71c]
  41f7c3:	in     eax,dx
  41f7c4:	pop    edx
  41f7c5:	jecxz  0x41f75d
  41f7c7:	cdq    
  41f7c8:	mov    fs,WORD PTR [ebx-0x16]
  41f7cb:	inc    eax
  41f7cc:	cdq    
  41f7cd:	dec    DWORD PTR [eax+0x3e7069b5]
  41f7d3:	pop    ss
  41f7d4:	cmp    al,dl
  41f7d6:	iret   
  41f7d7:	bound  ebp,QWORD PTR [ecx-0x53]
  41f7da:	gs adc al,al
  41f7dd:	mov    al,ds:0xcf9d8d4a
  41f7e2:	out    0x1e,eax
  41f7e4:	or     al,0x3c
  41f7e6:	cld    
  41f7e7:	jmp    0x7fca:0x6e1316d1
  41f7ee:	sbb    eax,0x598a1f92
  41f7f3:	cmp    BYTE PTR [ebx-0x18],0x16
  41f7f7:	je     0x41f7e8
  41f7f9:	scas   eax,DWORD PTR es:[edi]
  41f7fa:	and    eax,0x2bfe6ec
  41f7ff:	mov    edi,0x8870f44a
  41f804:	jle    0x41f859
  41f806:	js     0x41f869
  41f808:	int    0x72
  41f80a:	or     edi,DWORD PTR [edx-0x24]
  41f80d:	mov    ds:0x38a88b1f,al
  41f812:	cli    
  41f813:	repz (bad) [esi+0x66a7afbb]
  41f81a:	and    edi,DWORD PTR [ecx-0x5409371d]
  41f820:	retf   
  41f821:	je     0x41f7e5
  41f823:	fidiv  DWORD PTR [ecx]
  41f825:	dec    ecx
  41f826:	int    0x15
  41f828:	mul    DWORD PTR [edx]
  41f82a:	xlat   BYTE PTR ds:[ebx]
  41f82b:	pop    ebx
  41f82c:	jb     0x41f80d
  41f82e:	js     0x41f88d
  41f830:	pop    edi
  41f831:	xor    eax,0xc2518824
  41f836:	push   esp
  41f837:	xchg   DWORD PTR [ecx],esp
  41f839:	fcom   DWORD PTR [edx+0x7a]
  41f83c:	mov    esp,0x71254ebf
  41f841:	xor    al,0xb5
  41f843:	xor    eax,0xb65f9c0b
  41f848:	pop    esi
  41f849:	call   0x219c410c
  41f84e:	jns    0x41f89f
  41f850:	mov    ebp,0x2172b94d
  41f855:	jle    0x41f7f1
  41f857:	inc    ebp
  41f858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f859:	jmp    0x2591a957
  41f85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85f:	shr    DWORD PTR [eax-0x1a],cl
  41f862:	sub    eax,0x4bb9d380
  41f867:	loop   0x41f831
  41f869:	mov    bl,0xd2
  41f86b:	fwait
  41f86c:	(bad)  
  41f86d:	ja     0x41f869
  41f86f:	and    edi,ebp
  41f871:	cli    
  41f872:	xchg   esp,eax
  41f873:	daa    
  41f874:	(bad)  
  41f875:	mov    al,ds:0x18c96c4a
  41f87a:	popa   
  41f87b:	pop    esp
  41f87c:	out    dx,al
  41f87d:	jle    0x41f8e5
  41f87f:	mov    esp,0x324ba37
  41f884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f885:	mov    es,WORD PTR [esi-0x2cad433c]
  41f88b:	adc    eax,0xc5d82410
  41f890:	stos   DWORD PTR es:[edi],eax
  41f891:	and    BYTE PTR [eax-0xd8f4992],ah
  41f897:	out    0x6b,al
  41f899:	adc    edx,DWORD PTR [esi]
  41f89b:	mul    DWORD PTR [ecx]
  41f89d:	aas    
  41f89e:	or     al,0xb1
  41f8a0:	jae    0x41f858
  41f8a2:	(bad)  
  41f8a3:	sub    al,0xd5
  41f8a5:	ret    
  41f8a6:	shl    ebx,0x9e
  41f8a9:	clc    
  41f8aa:	cwde   
  41f8ab:	rol    dl,1
  41f8ad:	ja     0x41f872
  41f8af:	fist   DWORD PTR [esi+0x378bf728]
  41f8b5:	dec    eax
  41f8b6:	pop    ss
  41f8b7:	add    esp,DWORD PTR [edi+0x22654624]
  41f8bd:	xor    BYTE PTR [esi+ecx*4+0x35247281],0x92
  41f8c5:	rcl    BYTE PTR [ecx+0x72934be0],1
  41f8cb:	mov    WORD PTR [edi],cs
  41f8cd:	in     eax,0x59
  41f8cf:	fld    st(5)
  41f8d1:	loop   0x41f874
  41f8d3:	outs   dx,BYTE PTR ds:[esi]
  41f8d4:	aad    0x7f
  41f8d6:	xchg   ecx,eax
  41f8d7:	and    BYTE PTR [edx+eax*2+0x33],bh
  41f8db:	sbb    ecx,DWORD PTR [edx+edx*8+0x6f]
  41f8df:	test   eax,0x1d97e1c
  41f8e4:	sbb    BYTE PTR [esi+esi*4-0x7bbdeeb8],bh
  41f8eb:	adc    BYTE PTR [ebp+0x44],ah
  41f8ee:	(bad)  
  41f8ef:	ds inc edi
  41f8f1:	test   eax,0x47bdb04d
  41f8f6:	lods   eax,DWORD PTR ds:[esi]
  41f8f7:	push   ebp
  41f8f8:	sbb    BYTE PTR [eax-0x18e10651],al
  41f8fe:	(bad)  
  41f8ff:	mov    edx,0x91e28015
  41f904:	shufps xmm1,xmm6,0x3a
  41f908:	inc    esi
  41f909:	mov    gs,eax
  41f90b:	or     al,0x4c
  41f90d:	stos   DWORD PTR es:[edi],eax
  41f90e:	mov    ds:0xfacafe0a,al
  41f913:	in     al,dx
  41f914:	scas   al,BYTE PTR es:[edi]
  41f915:	xchg   BYTE PTR [edi+0x7f],bl
  41f918:	in     eax,0x42
  41f91a:	rcr    DWORD PTR [edi+0x3],1
  41f91d:	add    eax,0x183e5a6e
  41f922:	lds    esi,FWORD PTR [eax+0x40]
  41f925:	pop    ebp
  41f926:	jle    0x41f8ee
  41f928:	dec    esi
  41f929:	xchg   DWORD PTR [ebp+edi*4+0x17a3cdd0],edi
  41f930:	push   esp
  41f931:	iret   
  41f932:	xor    ch,BYTE PTR [edx+0x4a]
  41f935:	jnp    0x41f8de
  41f937:	fdivr  DWORD PTR [ecx]
  41f939:	in     al,0xe0
  41f93b:	add    eax,0x2
  41f93e:	cmp    cl,bh
  41f940:	and    al,0xa0
  41f942:	test   eax,0x7b8aa157
  41f947:	mov    ds:0xd8220c72,al
  41f94c:	xchg   edx,eax
  41f94d:	test   eax,0x43a9c7a7
  41f952:	mov    eax,0x70067766
  41f957:	imul   esp,DWORD PTR [edi],0xffffffe3
  41f95a:	jnp    0x41f934
  41f95c:	pop    ss
  41f95d:	fs push esp
  41f95f:	cwde   
  41f960:	mov    WORD PTR [esp+edx*2-0x7ec46173],es
  41f967:	leave  
  41f968:	sub    edx,0xf99b586b
  41f96e:	mov    ebx,esp
  41f970:	add    bl,ah
  41f972:	cmp    eax,DWORD PTR [ecx-0x7b]
  41f975:	out    0x60,eax
  41f977:	repnz push es
  41f979:	test   eax,0xfc4c2f6f
  41f97e:	jecxz  0x41f984
  41f980:	and    cl,BYTE PTR [ebx+0x1]
  41f983:	or     al,0xc7
  41f985:	popf   
  41f986:	fwait
  41f987:	dec    edi
  41f988:	pop    edx
  41f989:	test   BYTE PTR [esi+0x22],bl
  41f98c:	pop    es
  41f98d:	out    0xe4,al
  41f98f:	call   0x1180:0x703306b3
  41f996:	int3   
  41f997:	jno    0x41f955
  41f999:	push   cs
  41f99a:	test   DWORD PTR [ecx],esp
  41f99c:	lds    edi,FWORD PTR [ecx+0x40bc1116]
  41f9a2:	or     al,0x17
  41f9a4:	aaa    
  41f9a5:	pop    ebx
  41f9a6:	jmp    0x41f9a0
  41f9a8:	xchg   esp,eax
  41f9a9:	fcmovnu st,st(2)
  41f9ab:	(bad)  
  41f9ac:	fsub   DWORD PTR [ebx+0x179190cc]
  41f9b2:	icebp  
  41f9b3:	in     al,dx
  41f9b4:	ficomp WORD PTR [ebx]
  41f9b6:	aas    
  41f9b7:	dec    ecx
  41f9b8:	(bad)  
  41f9b9:	ins    BYTE PTR es:[edi],dx
  41f9ba:	(bad)  
  41f9bb:	outs   dx,DWORD PTR ds:[esi]
  41f9bc:	cmp    BYTE PTR [esi-0x4a0f4ae9],cl
  41f9c2:	sti    
  41f9c3:	cmp    ebp,edx
  41f9c5:	xlat   BYTE PTR ds:[ebx]
  41f9c6:	lods   al,BYTE PTR ss:[esi]
  41f9c8:	mov    ebx,0x70e2d40b
  41f9cd:	nop
  41f9ce:	dec    ebp
  41f9cf:	(bad)  
  41f9d0:	fisttp WORD PTR [ebp-0x40]
  41f9d3:	push   ecx
  41f9d4:	fldl2e 
  41f9d6:	mov    bl,0xce
  41f9d8:	test   al,0x74
  41f9da:	outs   dx,DWORD PTR es:[esi]
  41f9dc:	inc    ebx
  41f9dd:	test   eax,0xaa28f568
  41f9e2:	retf   
  41f9e3:	xchg   ebp,eax
  41f9e4:	adc    BYTE PTR [edi-0x59],0xea
  41f9e8:	mul    bl
  41f9ea:	inc    ebx
  41f9eb:	push   ds
  41f9ec:	push   ds
  41f9ed:	adc    edx,0xf60c0cce
  41f9f3:	mov    ch,0x2b
  41f9f5:	enter  0xef7c,0x1e
  41f9f9:	mov    edi,0xe228e9af
  41f9fe:	mov    esi,0xba2a0c34
  41fa03:	mov    WORD PTR [ecx],cs
  41fa05:	and    DWORD PTR [ebx+0x6d8a1fdf],ecx
  41fa0b:	lods   eax,DWORD PTR ds:[esi]
  41fa0c:	jmp    0x41fa2c
  41fa0e:	push   es
  41fa0f:	ins    DWORD PTR es:[edi],dx
  41fa10:	mov    esi,0x6d427616
  41fa15:	xor    bh,BYTE PTR ds:0xaf57a026
  41fa1b:	rcr    BYTE PTR [ebx+0x165e2f70],0xbf
  41fa22:	pop    ebp
  41fa23:	dec    eax
  41fa24:	stos   DWORD PTR es:[edi],eax
  41fa25:	mov    ebx,0xd98b95c0
  41fa2a:	shl    ebx,0x56
  41fa2d:	inc    esp
  41fa2e:	ret    
  41fa2f:	scas   al,BYTE PTR es:[edi]
  41fa30:	dec    ecx
  41fa31:	mov    eax,ebp
  41fa33:	mul    BYTE PTR [ebx+0x3e]
  41fa36:	pop    ds
  41fa37:	adc    BYTE PTR [eax+ecx*1-0x7],0x7d
  41fa3c:	bswap  ebx
  41fa3e:	xor    esi,ebx
  41fa40:	popa   
  41fa41:	jmp    0x41f9c5
  41fa43:	add    BYTE PTR [ecx-0x2b4a1d07],dl
  41fa49:	fisub  WORD PTR [ecx+0x16]
  41fa4c:	dec    esp
  41fa4d:	test   BYTE PTR [esi+0x2d],bl
  41fa50:	lea    ebx,[edi]
  41fa52:	sub    eax,DWORD PTR [ebx+0xb]
  41fa55:	scas   eax,DWORD PTR es:[edi]
  41fa56:	sbb    cl,BYTE PTR [edi-0x582882e1]
  41fa5c:	lods   eax,DWORD PTR ds:[esi]
  41fa5d:	mov    ebx,?
  41fa5f:	cmp    DWORD PTR [ecx-0x41b87a2d],edi
  41fa65:	in     al,0x86
  41fa67:	and    ax,0x849c
  41fa6b:	or     eax,0xb9c24f74
  41fa70:	jb     0x41fa8e
  41fa72:	daa    
  41fa73:	call   0xe6fd1112
  41fa78:	dec    ebp
  41fa79:	jg     0x41fa2a
  41fa7b:	mov    esp,0x38a7ed07
  41fa80:	mov    ecx,0x98f33068
  41fa85:	push   ebp
  41fa86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa87:	adc    cl,bh
  41fa89:	ror    DWORD PTR [ebx-0x42],0xb3
  41fa8d:	dec    esi
  41fa8e:	jmp    0x41faa2
  41fa90:	pop    edi
  41fa91:	pusha  
  41fa92:	(bad)  
  41fa93:	push   edx
  41fa94:	lds    esp,FWORD PTR es:[edx+ebp*4+0x47]
  41fa99:	sahf   
  41fa9a:	mov    ds:0x923ef180,al
  41fa9f:	jle    0x41fa90
  41faa1:	test   BYTE PTR [eax+0x76],cl
  41faa4:	sbb    bl,0xc5
  41faa7:	mov    ah,0xf1
  41faa9:	pop    edi
  41faaa:	jbe    0x41faf8
  41faac:	add    al,0x71
  41faae:	icebp  
  41faaf:	pop    esi
  41fab0:	xchg   ecx,eax
  41fab1:	mov    edx,0x28d1b797
  41fab6:	in     eax,dx
  41fab7:	sub    DWORD PTR [eax],edx
  41fab9:	pop    ss
  41faba:	es loop 0x41fb37
  41fabd:	inc    edx
  41fabe:	addr16 xor eax,ecx
  41fac1:	mov    es,WORD PTR [eax]
  41fac3:	dec    esp
  41fac4:	push   eax
  41fac5:	push   es
  41fac6:	jno    0x41fb44
  41fac8:	jns    0x41fa5a
  41faca:	inc    edx
  41facb:	cld    
  41facc:	not    BYTE PTR [ebx+0x18]
  41facf:	(bad)  
  41fad0:	call   0xb1396ac5
  41fad5:	outs   dx,BYTE PTR ds:[esi]
  41fad6:	sub    eax,0x1a7e50d1
  41fadb:	xor    bh,BYTE PTR [edi]
  41fadd:	gs test al,0x72
  41fae0:	(bad)  
  41fae1:	xchg   edi,eax
  41fae2:	inc    ebp
  41fae3:	push   ebp
  41fae4:	sub    eax,0x58873a63
  41fae9:	stos   BYTE PTR es:[edi],al
  41faea:	cmp    ebp,DWORD PTR [ecx+0x2c9f6f43]
  41faf0:	and    DWORD PTR [ebx+ebx*2+0x7c5df587],edi
  41faf7:	mov    ebx,0xa59cabf3
  41fafc:	xor    ah,ch
  41fafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faff:	out    0xbc,al
  41fb01:	xchg   ecx,eax
  41fb02:	add    eax,0xbf4bbaca
  41fb07:	mov    eax,ds:0xf3586e9
  41fb0c:	arpl   WORD PTR [ebp-0x7d],di
  41fb0f:	nop
  41fb10:	(bad)  
  41fb11:	jl     0x41fb51
  41fb13:	out    dx,al
  41fb14:	sub    DWORD PTR [esi+ebx*2],edi
  41fb17:	or     BYTE PTR [edx-0xf9579fa],dh
  41fb1d:	or     DWORD PTR [edx-0x74816835],edx
  41fb23:	and    BYTE PTR [esi+0xcf64249],0x5e
  41fb2a:	arpl   WORD PTR [edx-0x79],dx
  41fb2d:	stc    
  41fb2e:	pop    ebx
  41fb2f:	out    dx,al
  41fb30:	mov    dh,0xcd
  41fb32:	jmp    0x41fb61
  41fb34:	(bad)  
  41fb35:	mov    edx,0xd2b97434
  41fb3a:	sub    al,0xcd
  41fb3c:	clc    
  41fb3d:	sahf   
  41fb3e:	xor    DWORD PTR [edx+0x7a],esi
  41fb41:	cdq    
  41fb42:	clc    
  41fb43:	or     eax,0x8fb2fac4
  41fb48:	pop    ebp
  41fb49:	mov    edx,ebx
  41fb4b:	jecxz  0x41fb29
  41fb4d:	rcr    BYTE PTR [edi-0x72],cl
  41fb50:	push   ss
  41fb51:	inc    eax
  41fb52:	popa   
  41fb53:	mov    ds:0xc9334cd0,eax
  41fb58:	out    0x1e,eax
  41fb5a:	(bad)  
  41fb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5c:	pushf  
  41fb5d:	addr16 mov al,0xf4
  41fb60:	out    0x76,al
  41fb62:	cwde   
  41fb63:	std    
  41fb64:	adc    eax,0xcc0ad8e9
  41fb69:	push   ebp
  41fb6a:	lea    edi,[ecx+0x222aedd5]
  41fb70:	leave  
  41fb71:	mov    bh,0x6b
  41fb73:	fldz   
  41fb75:	jbe    0x41fb0b
  41fb77:	aaa    
  41fb78:	setae  BYTE PTR [esi-0x7b5e151f]
  41fb7f:	inc    ebx
  41fb80:	cs (bad) 
  41fb82:	dec    esp
  41fb83:	sbb    eax,ebp
  41fb85:	jl     0x41fb8e
  41fb87:	popa   
  41fb88:	(bad)  
  41fb89:	retf   
  41fb8a:	or     eax,0xea94efbb
  41fb8f:	scas   al,BYTE PTR es:[edi]
  41fb90:	add    eax,0x5d9d646f
  41fb95:	adc    al,0x1c
  41fb97:	stos   BYTE PTR es:[edi],al
  41fb98:	(bad)  
  41fb99:	stc    
  41fb9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb9b:	das    
  41fb9c:	loop   0x41fbd1
  41fb9e:	nop
  41fb9f:	(bad)  
  41fba0:	in     eax,0x8e
  41fba2:	mov    dl,0x2f
  41fba4:	sbb    eax,DWORD PTR [ebx+edx*2-0x2c]
  41fba8:	pusha  
  41fba9:	aaa    
  41fbaa:	inc    esi
  41fbab:	test   BYTE PTR [ebp+0x763f492e],ah
  41fbb1:	lods   eax,DWORD PTR ds:[esi]
  41fbb2:	pusha  
  41fbb3:	mov    edi,0x6528db22
  41fbb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb9:	pusha  
  41fbba:	sti    
  41fbbb:	inc    esp
  41fbbc:	jne    0x41fb74
  41fbbe:	sub    BYTE PTR [edx+edi*8-0x25],al
  41fbc2:	push   ss
  41fbc3:	add    DWORD PTR [edx+edx*4+0x5e18cd3e],edi
  41fbca:	sar    BYTE PTR [ebx+0x6],0x25
  41fbce:	cmp    ebp,DWORD PTR [edi+ebx*8]
  41fbd1:	test   BYTE PTR [ecx],dh
  41fbd3:	ret    
  41fbd4:	cmc    
  41fbd5:	call   0x1aa5:0x59a94cc0
  41fbdc:	ret    
  41fbdd:	mov    ecx,0x9f69ee66
  41fbe2:	(bad)  
  41fbe4:	fisubr WORD PTR [esp+ebp*2]
  41fbe7:	ds mov cl,0x2d
  41fbea:	adc    dl,cl
  41fbec:	mov    BYTE PTR [ebx+0x5a],cl
  41fbef:	mov    ?,esp
  41fbf1:	shl    DWORD PTR [edi+0x1f],0xee
  41fbf5:	sar    BYTE PTR [eax-0x4a],0x7b
  41fbf9:	inc    esi
  41fbfa:	arpl   WORD PTR [ecx-0x5eb8c71c],dx
  41fc00:	sar    BYTE PTR [ebp-0x11],0xe5
  41fc04:	call   0x1f18089b
  41fc09:	sti    
  41fc0a:	lea    esi,[ebx]
  41fc0c:	lods   al,BYTE PTR ds:[esi]
  41fc0d:	adc    ebx,edx
  41fc0f:	adc    eax,0x8be28e35
  41fc14:	shr    DWORD PTR [eax+0x67],1
  41fc17:	bound  ebp,QWORD PTR [ecx+ebp*8-0x4b]
  41fc1b:	xchg   BYTE PTR [eax+ebp*2-0x56],al
  41fc1f:	sahf   
  41fc20:	adc    esi,DWORD PTR [ebx+0x72]
  41fc23:	push   es
  41fc24:	into   
  41fc25:	mov    BYTE PTR [bx+0x398],0x35
  41fc2b:	call   0x972d1f4f
  41fc30:	out    dx,al
  41fc31:	mov    ebx,0x1c7d1d08
  41fc36:	(bad)  ds:[esp+ebx*8]
  41fc3a:	xchg   ecx,eax
  41fc3b:	and    al,0xda
  41fc3d:	fwait
  41fc3e:	or     BYTE PTR [esi+0x41e931a4],bh
  41fc44:	nop
  41fc45:	(bad)  
  41fc46:	sti    
  41fc47:	jg     0x41fc54
  41fc49:	add    ch,bl
  41fc4b:	dec    edx
  41fc4c:	(bad)  
  41fc4d:	sahf   
  41fc4e:	in     eax,dx
  41fc4f:	inc    ecx
  41fc50:	adc    BYTE PTR [bx+si-0x3f4b],ah
  41fc55:	pop    edi
  41fc56:	retf   0xf828
  41fc59:	dec    ecx
  41fc5a:	mov    ebx,0xef6552e1
  41fc5f:	aas    
  41fc60:	jle    0x41fbf7
  41fc62:	inc    edx
  41fc63:	in     al,dx
  41fc64:	pop    edx
  41fc65:	add    ecx,ebx
  41fc67:	inc    edi
  41fc68:	mov    dl,0x15
  41fc6a:	(bad)  
  41fc6b:	mov    ebx,0x7cfd84d8
  41fc70:	adc    eax,0x72e7351a
  41fc75:	and    al,0x26
  41fc77:	pop    ecx
  41fc78:	mov    eax,DWORD PTR [edx+ebx*8]
  41fc7b:	iret   
  41fc7c:	adc    BYTE PTR [ebx],dh
  41fc7e:	enter  0xa548,0x27
  41fc82:	sub    al,0xcd
  41fc84:	xchg   edi,eax
  41fc85:	sbb    ecx,DWORD PTR ds:0x3012fb31
  41fc8b:	fist   WORD PTR [esi-0x7b]
  41fc8e:	jo     0x41fce9
  41fc90:	out    dx,al
  41fc91:	dec    ebx
  41fc92:	jmp    0x247241e2
  41fc97:	inc    esi
  41fc98:	xchg   esi,eax
  41fc99:	in     eax,0x8b
  41fc9b:	(bad)  
  41fc9c:	jp     0x41fc29
  41fc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc9f:	push   esp
  41fca0:	ins    BYTE PTR es:[edi],dx
  41fca1:	mov    ebp,0x93ef9cf3
  41fca6:	cdq    
  41fca7:	cmp    eax,0xd4806907
  41fcac:	mov    ch,dh
  41fcae:	xor    bh,BYTE PTR [eax+0x79508aa7]
  41fcb4:	mov    al,ds:0x1eeb8150
  41fcb9:	shr    DWORD PTR [eax],cl
  41fcbb:	adc    ch,BYTE PTR [esi*1+0x30c3cc09]
  41fcc2:	pop    ecx
  41fcc3:	test   al,0x5a
  41fcc5:	adc    dl,BYTE PTR [esi]
  41fcc7:	xchg   ebx,eax
  41fcc8:	js     0x41fcd2
  41fcca:	pop    ecx
  41fccb:	adc    ebp,eax
  41fccd:	(bad)
  41fcd0:	jp     0x41fc6c
  41fcd2:	and    ebp,eax
  41fcd4:	out    0x8c,eax
  41fcd6:	shl    DWORD PTR [eax-0x40],0x9d
  41fcda:	test   al,0x93
  41fcdc:	adc    esp,ecx
  41fcde:	(bad)  
  41fcdf:	sbb    ah,BYTE PTR [edi]
  41fce1:	test   eax,0xae210c8a
  41fce6:	push   0x366642a9
  41fceb:	mov    bh,0x83
  41fced:	add    BYTE PTR [ebx],al
  41fcef:	jp     0x41fc71
  41fcf1:	jl     0x41fce7
  41fcf3:	jmp    0x6366ae66
  41fcf8:	jecxz  0x41fcb7
  41fcfa:	adc    edi,DWORD PTR [ebp+0x3d]
  41fcfd:	push   ds
  41fcfe:	movlps QWORD PTR [esi-0x7e107377],xmm7
  41fd05:	fimul  WORD PTR [esi+0x7a]
  41fd08:	lahf   
  41fd09:	int3   
  41fd0a:	jl     0x41fcc4
  41fd0c:	call   0x3a479fe9
  41fd11:	inc    edx
  41fd12:	sar    BYTE PTR [eax+edx*4+0x6a],cl
  41fd16:	mov    ah,0x82
  41fd18:	loopne 0x41fd99
  41fd1a:	push   0x5d
  41fd1c:	stos   BYTE PTR es:[edi],al
  41fd1d:	jg     0x41fca2
  41fd1f:	and    dl,ch
  41fd21:	xor    al,0xfb
  41fd23:	sbb    eax,0x4ccb7b00
  41fd28:	fwait
  41fd29:	mov    ch,0xb2
  41fd2b:	sti    
  41fd2c:	lods   eax,DWORD PTR ds:[esi]
  41fd2d:	arpl   WORD PTR [ebx-0x41f1be40],bx
  41fd33:	adc    BYTE PTR [esi+0x43],0xe0
  41fd37:	inc    esi
  41fd38:	jg     0x41fce8
  41fd3a:	ins    DWORD PTR es:[edi],dx
  41fd3b:	sub    al,0x2e
  41fd3d:	icebp  
  41fd3e:	call   0xae04b8f3
  41fd43:	sub    esi,0x65
  41fd46:	sbb    BYTE PTR [edi+0x65f022dc],bl
  41fd4c:	mov    al,0xc5
  41fd4e:	add    ebx,DWORD PTR [esi-0x68]
  41fd51:	cmp    BYTE PTR [eax-0x5f],0xb3
  41fd55:	mov    esi,DWORD PTR [edx+edx*4+0x4e]
  41fd59:	mov    eax,0xe481ca14
  41fd5e:	js     0x41fd8f
  41fd60:	jl     0x41fd7c
  41fd62:	ror    DWORD PTR [edx],0xa8
  41fd65:	pushw  ss
  41fd67:	sbb    al,0x37
  41fd69:	repnz and DWORD PTR [esi-0x22],esp
  41fd6d:	(bad)  
  41fd6e:	and    edi,DWORD PTR [eax]
  41fd70:	pop    esp
  41fd71:	hlt    
  41fd72:	inc    esp
  41fd73:	pop    esi
  41fd74:	out    dx,eax
  41fd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd76:	sub    bh,dl
  41fd78:	pop    ecx
  41fd79:	lods   eax,DWORD PTR ds:[esi]
  41fd7a:	outs   dx,DWORD PTR ds:[esi]
  41fd7b:	mov    al,ds:0xcd3e8a78
  41fd80:	int    0x49
  41fd82:	inc    eax
  41fd83:	cmp    DWORD PTR [eax+ebp*1+0xf9a7736],0x5c4ecca7
  41fd8e:	pop    edi
  41fd8f:	jp     0x41fdc4
  41fd91:	and    ebp,DWORD PTR [ecx+0x56a98629]
  41fd97:	xlat   BYTE PTR ds:[ebx]
  41fd98:	xor    eax,0x4b71509f
  41fd9d:	push   eax
  41fd9e:	outs   dx,BYTE PTR ds:[esi]
  41fd9f:	cmp    esp,edi
  41fda1:	mov    bh,0x52
  41fda3:	mov    ah,0xa1
  41fda5:	cmp    eax,0x6b1e5b7a
  41fdaa:	nop
  41fdab:	rol    BYTE PTR [esi+0x5c],1
  41fdae:	ja     0x41fe1e
  41fdb0:	and    al,0x98
  41fdb2:	pop    ecx
  41fdb3:	mov    WORD PTR [esi],ds
  41fdb5:	outs   dx,DWORD PTR ds:[esi]
  41fdb6:	push   esp
  41fdb7:	mov    ecx,?
  41fdb9:	imul   ebp,DWORD PTR [ecx],0x3e
  41fdbc:	(bad)  [ecx+0x55]
  41fdbf:	dec    edx
  41fdc0:	and    dh,BYTE PTR [edx-0x1dff08b2]
  41fdc6:	pop    ebx
  41fdc7:	push   ebx
  41fdc8:	lea    ecx,[ebp-0x2a]
  41fdcb:	clc    
  41fdcc:	push   ecx
  41fdcd:	sbb    ebx,DWORD PTR [ecx]
  41fdcf:	icebp  
  41fdd0:	sub    ah,BYTE PTR [eax]
  41fdd2:	outs   dx,DWORD PTR ds:[esi]
  41fdd3:	fbld   TBYTE PTR [eax]
  41fdd5:	mov    ecx,0xab0d3db0
  41fdda:	sbb    eax,0x5e726fe5
  41fddf:	popf   
  41fde0:	lds    ebx,FWORD PTR [ebx]
  41fde2:	mov    bl,BYTE PTR [ebx]
  41fde4:	call   0x4c079051
  41fde9:	out    dx,al
  41fdea:	(bad)  
  41fdeb:	mov    WORD PTR [ebx],cs
  41fded:	fadd   st,st(3)
  41fdef:	push   ecx
  41fdf0:	clc    
  41fdf1:	ret    
  41fdf2:	das    
  41fdf3:	mov    bl,0x97
  41fdf5:	stos   BYTE PTR es:[edi],al
  41fdf6:	push   ebp
  41fdf7:	add    BYTE PTR [edi+0x30a68106],bh
  41fdfd:	dec    ecx
  41fdfe:	xchg   ebp,eax
  41fdff:	pushf  
  41fe00:	les    ebx,FWORD PTR [esi+0x32]
  41fe03:	adc    DWORD PTR [edx+0xa],ecx
  41fe06:	sbb    dl,0x33
  41fe09:	push   eax
  41fe0a:	and    eax,0x4c775bcd
  41fe0f:	dec    esp
  41fe10:	in     eax,0x9d
  41fe12:	std    
  41fe13:	mov    ebx,0x7a9e6cea
  41fe18:	jns    0x41fde3
  41fe1a:	ins    DWORD PTR es:[edi],dx
  41fe1b:	dec    edx
  41fe1c:	xchg   edx,eax
  41fe1d:	es inc edx
  41fe1f:	xchg   esp,eax
  41fe20:	out    0xce,eax
  41fe22:	mov    eax,ds:0x47e25db9
  41fe27:	sar    BYTE PTR [edi-0x57],cl
  41fe2a:	pop    ebx
  41fe2b:	xchg   ebp,eax
  41fe2c:	outs   dx,BYTE PTR ds:[esi]
  41fe2d:	iret   
  41fe2e:	jg     0x41fe3e
  41fe30:	add    eax,ebx
  41fe32:	xor    eax,0xf3e27897
  41fe37:	pop    esi
  41fe38:	dec    ecx
  41fe39:	(bad)  
  41fe3a:	mov    WORD PTR [edi+0xcd56079],fs
  41fe40:	mov    ecx,0x2b87ece1
  41fe45:	loope  0x41fdcd
  41fe47:	mov    DWORD PTR [ebp-0x524757ef],edx
  41fe4d:	push   ss
  41fe4e:	and    BYTE PTR [edi-0x23],ch
  41fe51:	push   esp
  41fe52:	mov    ebp,0xdf5cb798
  41fe57:	dec    ebx
  41fe58:	stos   BYTE PTR es:[edi],al
  41fe59:	push   esp
  41fe5a:	and    eax,0x12ee13a7
  41fe5f:	or     eax,edx
  41fe61:	push   0xffb6a785
  41fe66:	fwait
  41fe67:	or     ecx,DWORD PTR [esi+0x608f8b4b]
  41fe6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6f:	(bad)  
  41fe70:	jae    0x41fe52
  41fe72:	test   BYTE PTR [esi-0x70bf79a8],bl
  41fe78:	jmp    0x6aeae8d1
  41fe7d:	mov    al,0x65
  41fe7f:	cmp    BYTE PTR [ebx+esi*2-0x42068e93],cl
  41fe86:	jmp    0x47c88bf7
  41fe8b:	test   al,0xb4
  41fe8d:	jbe    0x41fe49
  41fe8f:	inc    ebx
  41fe90:	(bad)  
  41fe91:	loop   0x41fe31
  41fe93:	push   edi
  41fe94:	retf   0x2003
  41fe97:	mov    dl,0x1
  41fe99:	push   esp
  41fe9a:	xor    al,0x91
  41fe9c:	popa   
  41fe9d:	ss or  edx,edi
  41fea0:	dec    ebp
  41fea1:	mov    bl,0x4a
  41fea3:	arpl   WORD PTR [ecx],cx
  41fea5:	in     al,0x24
  41fea7:	ret    0x754b
  41feaa:	mov    ds:0x339b93fc,al
  41feaf:	enter  0x4dae,0xae
  41feb3:	test   eax,0x1a180097
  41feb8:	into   
  41feb9:	fnstenv [edi+0x301a6df8]
  41febf:	adc    ah,0x97
  41fec2:	call   0xf067a42f
  41fec7:	aad    0xd7
  41fec9:	icebp  
  41feca:	mov    al,ds:0x8603fa40
  41fecf:	retf   
  41fed0:	dec    eax
  41fed1:	or     eax,0xa3fef266
  41fed6:	jp     0x41ff52
  41fed8:	pop    ecx
  41fed9:	shr    DWORD PTR ds:0x43be0580,0xec
  41fee0:	ret    
  41fee1:	or     al,0xab
  41fee3:	xlat   BYTE PTR ds:[ebx]
  41fee4:	add    eax,0xf2d88858
  41fee9:	or     eax,DWORD PTR [esi-0x58]
  41feec:	cmc    
  41feed:	or     BYTE PTR [ebx+0x117f8c5],ah
  41fef3:	jae    0x41ff25
  41fef5:	ins    DWORD PTR es:[edi],dx
  41fef6:	test   BYTE PTR [ecx],0xc5
  41fef9:	inc    ebx
  41fefa:	xchg   edx,eax
  41fefb:	and    dh,BYTE PTR [ebx]
  41fefd:	dec    ebp
  41fefe:	gs cmp eax,0x312cacf3
  41ff04:	imul   ebx
  41ff06:	hlt    
  41ff07:	test   BYTE PTR [ecx],al
  41ff09:	inc    edi
  41ff0a:	ins    DWORD PTR es:[edi],dx
  41ff0b:	(bad)  [edx+esi*4+0x769ef673]
  41ff12:	or     esi,edx
  41ff14:	in     eax,0x3f
  41ff16:	jne    0x41fe9d
  41ff18:	lds    eax,FWORD PTR [ebx+0x3b]
  41ff1b:	jo     0x41fed5
  41ff1d:	inc    esp
  41ff1e:	pusha  
  41ff1f:	xor    dl,al
  41ff21:	and    DWORD PTR ds:0xa3d81963,ebx
  41ff27:	inc    edi
  41ff28:	jle    0x41ff16
  41ff2a:	popf   
  41ff2b:	adc    dh,dl
  41ff2d:	stos   BYTE PTR es:[edi],al
  41ff2e:	jbe    0x41ff76
  41ff30:	push   ecx
  41ff31:	add    DWORD PTR [eax-0x80],edi
  41ff34:	jg     0x41ff61
  41ff36:	add    bh,cl
  41ff38:	ins    DWORD PTR es:[edi],dx
  41ff39:	jle    0x41ff29
  41ff3b:	push   0x17
  41ff3d:	adc    eax,0xcef5e2cb
  41ff42:	dec    DWORD PTR [bx+di-0x44d1]
  41ff47:	in     eax,0x31
  41ff49:	inc    ecx
  41ff4a:	jmp    FWORD PTR fs:[edi-0x7e06c321]
  41ff51:	outs   dx,BYTE PTR ds:[esi]
  41ff52:	repz push esp
  41ff54:	mov    edx,DWORD PTR [eax+0x452a443d]
  41ff5a:	aam    0x97
  41ff5c:	mov    dl,0x6a
  41ff5e:	adc    BYTE PTR [ecx+0x60],dh
  41ff61:	call   0xce84c094
  41ff66:	and    al,0xfd
  41ff68:	in     eax,dx
  41ff69:	sbb    DWORD PTR [edx+0x42],0x2c
  41ff6d:	pushf  
  41ff6e:	repnz scas al,BYTE PTR es:[edi]
  41ff70:	and    al,0x80
  41ff72:	inc    esp
  41ff73:	fwait
  41ff74:	sbb    DWORD PTR [ebx+0x2f],ebp
  41ff77:	mov    ah,0x6b
  41ff79:	daa    
  41ff7a:	addr16 mov dh,bl
  41ff7d:	sbb    dh,BYTE PTR [esi]
  41ff7f:	mov    ecx,0xac45364d
  41ff84:	jecxz  0x41ff12
  41ff86:	hlt    
  41ff87:	mov    ebp,0x4203a8b1
  41ff8c:	cli    
  41ff8d:	pop    esp
  41ff8e:	into   
  41ff8f:	sub    bl,bh
  41ff91:	scas   eax,DWORD PTR es:[edi]
  41ff92:	xor    ah,BYTE PTR [edi-0x3402e837]
  41ff98:	cwde   
  41ff99:	add    eax,DWORD PTR [eax-0xa4aecb3]
  41ff9f:	out    0x5d,eax
  41ffa1:	lods   al,BYTE PTR ds:[esi]
  41ffa2:	push   es
  41ffa3:	dec    ebx
  41ffa4:	mov    ebx,DWORD PTR [ebp-0x2994ea0]
  41ffaa:	ds leave 
  41ffac:	push   sp
  41ffae:	cmp    ebx,edi
  41ffb0:	jmp    0xd61e:0xdcb0d4d8
  41ffb7:	mov    edi,0xab70c383
  41ffbc:	xchg   ebx,eax
  41ffbd:	sbb    eax,0xffffff98
  41ffc0:	jmp    0xbee5:0xb8e4af13
  41ffc7:	push   esp
  41ffc8:	test   DWORD PTR [ecx+0x4e3c4ecf],edx
  41ffce:	mov    cl,bh
  41ffd0:	(bad)  
  41ffd1:	pusha  
  41ffd2:	nop
  41ffd3:	fbstp  TBYTE PTR [eax+ebp*4-0x5e5fa618]
  41ffda:	push   ebx
  41ffdb:	ins    BYTE PTR es:[edi],dx
  41ffdc:	out    0xb2,eax
  41ffde:	jl     0x41ffea
  41ffe0:	and    al,BYTE PTR [edx+0x572d5ac7]
  41ffe6:	cmp    al,0x37
  41ffe8:	mov    esi,0xbbfbc64a
  41ffed:	cdq    
  41ffee:	mov    DWORD PTR [esi+0x47],esp
  41fff1:	jecxz  0x41ff93
  41fff3:	jg     0x41ffcb
  41fff5:	ins    BYTE PTR es:[edi],dx
  41fff6:	or     eax,0xd4768def
  41fffb:	das    
  41fffc:	leave  
  41fffd:	push   esp
  41fffe:	fild   DWORD PTR [esi+0x4c1bb1b0]
  420004:	imul   edx,DWORD PTR [esi],0xea05c2f2
  42000a:	and    dl,BYTE PTR [ecx]
  42000c:	aas    
  42000d:	dec    edx
  42000e:	ss and eax,0x875c8ffb
  420014:	in     eax,0x17
  420016:	jg     0x41fff3
  420018:	jbe    0x420009
  42001a:	mov    dh,0x81
  42001c:	dec    ebp
  42001d:	not    DWORD PTR [edi+0x50915916]
  420023:	xchg   ebp,eax
  420024:	fwait
  420025:	call   0x2dd5920
  42002a:	in     eax,dx
  42002b:	pop    edi
  42002c:	push   ss
  42002d:	xor    dl,BYTE PTR [edi+ebx*4+0x5c2ff70b]
  420034:	rcr    BYTE PTR [ebx+0x6e5e68fd],0x1b
  42003b:	scas   al,BYTE PTR es:[edi]
  42003c:	pop    es
  42003d:	xor    BYTE PTR [edi+ebx*1+0x3671712f],cl
  420044:	sub    ebp,0xaa07d168
  42004a:	int3   
  42004b:	out    dx,eax
  42004c:	push   ss
  42004d:	mov    dh,bh
  42004f:	jbe    0x420016
  420051:	aas    
  420052:	out    0xec,eax
  420054:	leave  
  420055:	inc    eax
  420056:	js     0x4200a4
  420058:	js     0x420083
  42005a:	and    BYTE PTR [ebx-0x40ee2884],ah
  420060:	fstp   TBYTE PTR [edx+0x44]
  420063:	jg     0x42001e
  420065:	sbb    ah,BYTE PTR [ecx+ebp*4]
  420068:	imul   esi,DWORD PTR [ecx+0x1fb431e5],0xffffff81
  42006f:	aaa    
  420070:	xor    eax,0xfa453290
  420075:	add    dl,ch
  420077:	add    al,0x6c
  420079:	call   0xb82d:0xcf4c146e
  420080:	cld    
  420081:	dec    edi
  420082:	adc    bl,ch
  420084:	je     0x42001e
  420086:	mov    cl,0x6e
  420088:	lahf   
  420089:	inc    DWORD PTR [esi+0x5a]
  42008c:	mov    ds:0x22de9fff,eax
  420091:	ffree  st(4)
  420093:	pop    ds
  420094:	(bad)  
  420096:	add    BYTE PTR [edi],0x86
  420099:	leave  
  42009a:	cmp    al,BYTE PTR [esi]
  42009c:	pop    ss
  42009d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42009e:	out    dx,eax
  42009f:	xlat   BYTE PTR ds:[ebx]
  4200a0:	mov    ebx,0x7d8f12de
  4200a5:	cmp    DWORD PTR [eax+0x72],ebp
  4200a8:	lea    edx,[eax-0x64454e4c]
  4200ae:	mov    ecx,0x29f8b956
  4200b3:	js     0x42009d
  4200b5:	xlat   BYTE PTR ds:[ebx]
  4200b6:	add    esp,edx
  4200b8:	mov    dl,0xfd
  4200ba:	aad    0xf8
  4200bc:	or     ah,BYTE PTR [eax-0x1af09a19]
  4200c2:	jp     0x4200b3
  4200c4:	and    eax,0xab83c1f8
  4200c9:	ins    BYTE PTR es:[edi],dx
  4200ca:	mov    eax,0x3570dc48
  4200cf:	jo     0x42005c
  4200d1:	ret    
  4200d2:	sbb    BYTE PTR ds:0xc4c338a5,0x9a
  4200d9:	xor    cl,BYTE PTR [eax+0x59f0a7b6]
  4200df:	adc    eax,0x604d3ca6
  4200e4:	mov    dh,0x70
  4200e6:	and    al,0x38
  4200e8:	inc    ebp
  4200e9:	lahf   
  4200ea:	ins    BYTE PTR es:[edi],dx
  4200eb:	fidiv  DWORD PTR [ecx+0x53]
  4200ee:	stos   DWORD PTR es:[edi],eax
  4200ef:	or     DWORD PTR [esp+esi*4-0x53964eed],ebp
  4200f6:	inc    edi
  4200f7:	dec    esp
  4200f8:	retf   0xa815
  4200fb:	imul   edx,DWORD PTR [edx-0x8248405],0xc
  420102:	xchg   esi,eax
  420103:	push   ss
  420104:	sbb    eax,0x7ad21998
  420109:	adc    DWORD PTR [esi-0x114c5285],esp
  42010f:	add    DWORD PTR [esi+0x1],esi
  420112:	dec    eax
  420113:	push   cs
  420114:	pop    ebx
  420115:	enter  0x8597,0xa
  420119:	inc    esp
  42011a:	inc    edx
  42011b:	adc    eax,0xe2c688e7
  420120:	fdivr  DWORD PTR [esi]
  420122:	jo     0x420104
  420124:	pop    edi
  420125:	(bad)  
  420126:	pop    eax
  420127:	imul   ecx,DWORD PTR [esi-0x4b2ddb79],0x2f3bdae
  420131:	cmp    al,0xed
  420133:	test   DWORD PTR [edi+edi*4-0x8],ebp
  420137:	aad    0xf0
  420139:	sbb    eax,eax
  42013b:	inc    esp
  42013c:	mov    ah,0xe3
  42013e:	jecxz  0x4201b1
  420140:	or     dh,BYTE PTR [esi+0x2801ad4e]
  420146:	rcr    BYTE PTR [ebp+0xb384a6],0x7
  42014d:	call   0x10e4:0x5d948bdf
  420154:	aam    0x3e
  420156:	mov    ecx,0x407c03ec
  42015b:	and    cl,BYTE PTR [edx-0x52e8e456]
  420161:	leave  
  420162:	push   ebx
  420163:	mov    ebx,0x1866de1b
  420168:	cmp    BYTE PTR [ebx],ah
  42016a:	pusha  
  42016b:	stos   DWORD PTR es:[edi],eax
  42016c:	jne    0x420132
  42016e:	sbb    ebp,DWORD PTR [ecx+0x3b]
  420171:	mov    ds:0xfba975f8,eax
  420176:	test   BYTE PTR [ecx+esi*8-0x71],al
  42017a:	mov    bh,0x7b
  42017c:	cmp    eax,0x718c1448
  420181:	stos   BYTE PTR es:[edi],al
  420182:	push   edx
  420183:	pop    ds
  420184:	mov    al,ds:0xf16794fb
  420189:	inc    edx
  42018a:	aaa    
  42018b:	int3   
  42018c:	or     ah,0xe7
  42018f:	mov    ah,0xd9
  420191:	fadd   DWORD PTR [esi]
  420193:	(bad)  
  420195:	cwde   
  420196:	repnz pop ds
  420198:	retf   
  420199:	mov    es,WORD PTR [edi-0x6c2746fc]
  42019f:	scas   eax,DWORD PTR es:[edi]
  4201a0:	pop    ebx
  4201a1:	retf   
  4201a2:	(bad)  
  4201a3:	jno    0x420193
  4201a5:	or     ebp,esp
  4201a7:	sahf   
  4201a8:	ror    eax,1
  4201aa:	fistp  WORD PTR [edx+0x1]
  4201ad:	call   0xcc77:0xa867eab
  4201b4:	pop    edi
  4201b5:	(bad)  
  4201b6:	rcl    BYTE PTR [eax-0x7a],1
  4201b9:	sbb    DWORD PTR [edx+edx*8+0x6a],edx
  4201bd:	out    0x43,al
  4201bf:	ins    DWORD PTR es:[edi],dx
  4201c0:	mov    esp,0x253b8f7a
  4201c5:	out    dx,eax
  4201c6:	push   cs
  4201c7:	mov    bh,0xd5
  4201c9:	dec    ebx
  4201ca:	loopne 0x420193
  4201cc:	cmp    BYTE PTR [esp+ecx*8+0x538eefc0],0x26
  4201d4:	outs   dx,DWORD PTR ds:[esi]
  4201d5:	push   esi
  4201d6:	fisub  DWORD PTR [ebp+0x2314c062]
  4201dc:	xchg   edi,eax
  4201dd:	dec    eax
  4201de:	jl     0x420218
  4201e0:	sbb    ebp,esi
  4201e2:	rcl    ch,cl
  4201e4:	leave  
  4201e5:	loop   0x4201aa
  4201e7:	jo     0x42025c
  4201e9:	out    0x8a,eax
  4201eb:	xor    DWORD PTR [edx+0x15],esp
  4201ee:	in     al,dx
  4201ef:	push   ds
  4201f0:	jmp    0x4201ff
  4201f2:	out    dx,eax
  4201f3:	xor    DWORD PTR [ebx+0x71],edx
  4201f6:	ror    al,0x89
  4201f9:	cmp    DWORD PTR [edi+0x6efccc67],edi
  4201ff:	push   es
  420200:	daa    
  420201:	mov    ds:0x18c89ee3,eax
  420206:	xchg   cl,dh
  420208:	fld    TBYTE PTR [ecx-0x35]
  42020b:	jg     0x42021c
  42020d:	mov    esi,0xa2731961
  420212:	fisttp WORD PTR [esi+0x3a8c1a9a]
  420218:	pop    ds
  420219:	cmp    ebx,0x5e
  42021c:	push   0x231422b1
  420221:	sub    al,0x35
  420223:	fist   DWORD PTR [esi+edx*4-0x79af3b07]
  42022a:	mov    esp,0x524de77d
  42022f:	xlat   BYTE PTR ds:[ebx]
  420230:	jae    0x4201de
  420232:	sbb    bl,dl
  420234:	ins    BYTE PTR es:[edi],dx
  420235:	aad    0xc5
  420237:	rol    BYTE PTR [eax-0x11],cl
  42023a:	inc    edx
  42023b:	loop   0x420289
  42023d:	xor    eax,0xac5c3ac5
  420242:	dec    edx
  420243:	sahf   
  420244:	jbe    0x420211
  420246:	dec    ecx
  420247:	lods   eax,DWORD PTR cs:[esi]
  420249:	adc    cl,0xeb
  42024c:	mov    cl,0x30
  42024e:	ficomp WORD PTR [edx-0x2f7b6f0]
  420254:	pop    es
  420255:	mov    ebp,0xc718e920
  42025a:	jbe    0x420243
  42025c:	pop    ecx
  42025d:	jns    0x42023a
  42025f:	pushf  
  420260:	fistp  WORD PTR [esi-0x557a77da]
  420266:	icebp  
  420267:	xchg   ecx,eax
  420268:	jbe    0x420280
  42026a:	pop    ss
  42026b:	sar    DWORD PTR [edi-0x26],1
  42026e:	xor    ch,dl
  420270:	std    
  420271:	xor    eax,0xc147509c
  420276:	xor    ebp,DWORD PTR [ecx+0x42fcaf9e]
  42027c:	repnz add ecx,DWORD PTR [ecx+esi*1-0x69]
  420281:	add    bh,BYTE PTR ds:0x3d31d36b
  420287:	jle    0x420286
  420289:	pop    edi
  42028a:	retf   0x641e
  42028d:	dec    eax
  42028e:	lahf   
  42028f:	dec    ebx
  420290:	pop    esp
  420291:	retf   
  420292:	mov    eax,0x9abf8f08
  420297:	mov    edi,0x49b6e8aa
  42029c:	fs mov eax,0xf6e4750b
  4202a2:	dec    eax
  4202a3:	retf   
  4202a4:	cmp    BYTE PTR ds:0xd516d1c0,cl
  4202aa:	leave  
  4202ab:	push   eax
  4202ac:	push   es
  4202ad:	mov    ds:0xc673cc82,eax
  4202b2:	sbb    BYTE PTR [ebp+0x1d0bee8d],dl
  4202b8:	dec    esi
  4202ba:	mov    edi,0x95307565
  4202bf:	pop    esi
  4202c0:	lods   eax,DWORD PTR ds:[esi]
  4202c1:	fs push esi
  4202c3:	aas    
  4202c4:	ror    BYTE PTR [ecx],0x5e
  4202c7:	dec    ecx
  4202c8:	xchg   ebp,eax
  4202c9:	cmp    BYTE PTR [ecx+edi*1-0x42],0x40
  4202ce:	test   dl,dl
  4202d0:	sub    BYTE PTR [ebp-0x689fa7a1],dl
  4202d6:	jmp    0x29c92bf1
  4202db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202dc:	cmp    al,0xfb
  4202de:	(bad)  
  4202df:	test   BYTE PTR [esi-0xdb6327e],ch
  4202e5:	mov    cl,0x8
  4202e7:	fwait
  4202e8:	inc    eax
  4202e9:	outs   dx,BYTE PTR ds:[esi]
  4202ea:	xchg   esi,eax
  4202eb:	ss stc 
  4202ed:	mov    al,ds:0x9a489b19
  4202f2:	push   0xffffffc1
  4202f4:	shl    DWORD PTR [esi],1
  4202f6:	iret   
  4202f7:	(bad)  
  4202f8:	jmp    0x7e9c9631
  4202fd:	jle    0x4202ce
  4202ff:	dec    eax
  420300:	sub    al,0x6d
  420302:	seto   BYTE PTR [edi-0x1bb1c9d9]
  420309:	in     eax,0x3
  42030b:	add    cl,BYTE PTR [ebx+ecx*1-0x22b46a22]
  420312:	xor    al,0x67
  420314:	mov    ch,0xae
  420316:	sahf   
  420317:	mov    eax,ds:0x46159b13
  42031c:	imul   esp,DWORD PTR [ebx+0x623bb80a],0x55
  420323:	inc    edi
  420324:	push   edi
  420325:	shl    DWORD PTR [ebp*8+0x2516a38],0x13
  42032d:	fld    TBYTE PTR [edi+0x7414c92a]
  420333:	adc    eax,0xeaeb2dc9
  420338:	lods   eax,DWORD PTR ds:[esi]
  420339:	retf   0xb653
  42033c:	ss std 
  42033e:	sbb    ebx,DWORD PTR [ebx+ecx*8+0x34]
  420342:	test   DWORD PTR [esp+ecx*4-0x62],eax
  420346:	sub    al,BYTE PTR [esi-0x1b]
  420349:	add    bh,cl
  42034b:	into   
  42034c:	add    bh,dh
  42034e:	jmp    0x2d63:0xc2eea45
  420355:	jne    0x4202da
  420357:	inc    edx
  420358:	xor    edi,DWORD PTR [esi-0x697991b5]
  42035e:	push   es
  42035f:	xor    al,0xe6
  420361:	mov    DWORD PTR [esi],0x14a482e3
  420367:	jbe    0x4203db
  420369:	jp     0x420345
  42036b:	push   ss
  42036c:	in     al,0xbe
  42036e:	mov    bh,0x8b
  420370:	addr16 into 
  420372:	lea    ebx,[edi-0x1a]
  420375:	aam    0xa9
  420377:	cmp    eax,0x2bd4bf5c
  42037c:	adc    eax,0xd721a3db
  420381:	push   0xffffff90
  420383:	stc    
  420384:	inc    edx
  420385:	mov    dh,0x70
  420387:	fsub   DWORD PTR [esi+eiz*8-0x7f]
  42038b:	out    dx,eax
  42038c:	xor    BYTE PTR [ecx],ah
  42038e:	(bad)  
  42038f:	mov    dh,BYTE PTR [edx+esi*1]
  420392:	and    dh,BYTE PTR [edi]
  420394:	int3   
  420395:	bound  ebp,QWORD PTR [ebp+edx*8-0x7b]
  420399:	mov    eax,0x699d1cac
  42039e:	mov    al,ds:0x242a8a3b
  4203a3:	jmp    0x420357
  4203a5:	imul   ebp,DWORD PTR [edx],0x7a02c9e3
  4203ab:	adc    esp,edi
  4203ad:	xchg   ecx,eax
  4203ae:	inc    esp
  4203af:	repz jp 0x420404
  4203b2:	or     cl,BYTE PTR [eax+0x6ad06bee]
  4203b8:	or     eax,0x93553e3f
  4203bd:	jno    0x420411
  4203bf:	(bad)
  4203c2:	fwait
  4203c3:	loop   0x420431
  4203c5:	aad    0x46
  4203c7:	lods   al,BYTE PTR ds:[esi]
  4203c8:	ins    DWORD PTR es:[edi],dx
  4203c9:	retf   0x7b59
  4203cc:	fld    QWORD PTR [edx+edx*2-0x3c]
  4203d0:	push   ebp
  4203d1:	mov    eax,0x469366cd
  4203d6:	jae    0x42042c
  4203d8:	xor    BYTE PTR [ebx],ah
  4203da:	nop
  4203db:	cld    
  4203dc:	inc    edi
  4203dd:	xchg   esp,eax
  4203de:	inc    ebx
  4203df:	ja     0x420382
  4203e1:	xor    BYTE PTR [ebp-0x54],al
  4203e4:	jg     0x420431
  4203e6:	lods   al,BYTE PTR ds:[esi]
  4203e7:	ja     0x42038a
  4203e9:	idiv   BYTE PTR [esi+0xd]
  4203ec:	icebp  
  4203ed:	cwde   
  4203ee:	xchg   ecx,eax
  4203ef:	cmp    al,0x74
  4203f1:	popf   
  4203f2:	sbb    BYTE PTR [ebx-0x583c68a8],cl
  4203f8:	push   0x478a4983
  4203fd:	cmp    al,0x6a
  4203ff:	adc    DWORD PTR [eax],edx
  420401:	pop    es
  420402:	pop    ecx
  420403:	fmul   DWORD PTR [eax]
  420405:	sbb    DWORD PTR [edi-0x2b43c9e5],edi
  42040b:	mov    eax,ds:0x539e10b4
  420410:	lea    ebp,[ebx-0x6981a491]
  420416:	imul   ecx,DWORD PTR [edi],0xd6b1893e
  42041c:	cmp    al,0xe8
  42041e:	repnz add DWORD PTR [edi+0x6f],ebp
  420422:	pop    es
  420423:	xor    BYTE PTR [edx-0x201f7c27],0xab
  42042a:	adc    DWORD PTR [edx-0x2fab3922],ebp
  420430:	scas   al,BYTE PTR es:[edi]
  420431:	adc    eax,eax
  420433:	inc    edi
  420434:	jae    0x4203bd
  420436:	xor    al,bl
  420438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420439:	retf   
  42043a:	call   0xa7c770bf
  42043f:	jne    0x42044b
  420441:	sub    eax,0xb7b214a0
  420446:	repz jge 0x42044a
  420449:	and    ebx,ebp
  42044b:	dec    ebx
  42044c:	in     al,dx
  42044d:	fs (bad) 
  42044f:	(bad)  
  420451:	cli    
  420452:	and    DWORD PTR ds:0xef79225e,ebx
  420458:	stos   BYTE PTR es:[edi],al
  420459:	scas   al,BYTE PTR es:[edi]
  42045a:	xor    BYTE PTR [esi+0x7f],ch
  42045d:	aaa    
  42045e:	pop    eax
  42045f:	push   ebx
  420460:	cs fcmovnbe st,st(2)
  420463:	popf   
  420464:	fisub  DWORD PTR [ebx+0x3994c134]
  42046a:	sub    eax,DWORD PTR [edx+ebx*4-0x73]
  42046e:	or     al,0xad
  420470:	and    eax,0x1e8e2438
  420475:	xor    edi,ebp
  420477:	retf   
  420478:	aas    
  420479:	or     DWORD PTR [ebx],esp
  42047b:	push   edx
  42047c:	sub    edx,DWORD PTR [edx]
  42047e:	bound  edi,QWORD PTR [ecx+0x11]
  420481:	fucomi st,st(0)
  420483:	sbb    esp,DWORD PTR [ecx+edi*1-0x1f6153be]
  42048a:	or     al,0xe8
  42048c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048d:	adc    BYTE PTR [edi+0x20],dh
  420490:	int    0x12
  420492:	rcl    BYTE PTR [edi+0x55],cl
  420495:	pop    ebx
  420496:	xor    al,0x33
  420498:	push   ebx
  420499:	mov    ecx,0x526a8ad1
  42049e:	xchg   ebx,eax
  42049f:	retf   0xb99c
  4204a2:	xchg   esp,eax
  4204a3:	jecxz  0x420499
  4204a5:	dec    ebp
  4204a6:	imul   DWORD PTR [edx-0x3e741ae4]
  4204ac:	push   ecx
  4204ad:	inc    esi
  4204ae:	cmp    al,0xa4
  4204b0:	sbb    ah,cl
  4204b2:	mov    al,ds:0xed1acea
  4204b7:	jl     0x420460
  4204b9:	sbb    al,0x50
  4204bb:	xor    eax,0x941f8a64
  4204c0:	pusha  
  4204c1:	inc    edx
  4204c2:	dec    ebx
  4204c4:	cwde   
  4204c5:	ror    DWORD PTR [edi-0x68102e63],cl
  4204cb:	aad    0x17
  4204cd:	mov    fs,WORD PTR [edx-0x19]
  4204d0:	dec    edi
  4204d1:	push   ebx
  4204d2:	push   0xaafa634e
  4204d7:	xchg   edx,eax
  4204d8:	push   ebx
  4204d9:	mov    ebx,0x2b1e370a
  4204de:	inc    edi
  4204df:	fisub  WORD PTR [eax+0x72]
  4204e2:	add    dh,dl
  4204e4:	cmp    eax,0xc8fc5258
  4204e9:	jmp    0x2548:0x92e70535
  4204f0:	jbe    0x4204db
  4204f2:	xchg   esi,eax
  4204f3:	mov    cl,0x9f
  4204f5:	int3   
  4204f6:	es in  eax,0x46
  4204f9:	push   ebx
  4204fa:	outs   dx,DWORD PTR ds:[esi]
  4204fb:	jl     0x420484
  4204fd:	fidivr DWORD PTR [ecx-0x45300711]
  420503:	ret    
  420504:	inc    esi
  420505:	shr    DWORD PTR [ebp+0xb8b11fd],1
  42050b:	idiv   BYTE PTR [ebx+0x23]
  42050e:	icebp  
  42050f:	adc    BYTE PTR [esi-0x4d69696d],al
  420515:	out    dx,al
  420516:	clc    
  420517:	dec    esp
  420518:	ins    BYTE PTR es:[edi],dx
  420519:	(bad)  
  42051a:	push   edi
  42051b:	inc    ecx
  42051c:	push   ds
  42051d:	mov    edi,0xcee2c601
  420522:	pushf  
  420523:	shl    BYTE PTR [edx],1
  420525:	xchg   ecx,eax
  420526:	push   edx
  420527:	mov    DWORD PTR ds:0x20c043c7,esp
  42052d:	shrd   DWORD PTR [edi-0x564583a1],eax,cl
  420534:	dec    esi
  420535:	popf   
  420536:	xchg   edi,eax
  420537:	rcr    edx,1
  420539:	jg     0x4205b6
  42053b:	add    BYTE PTR [ecx+0x57],cl
  42053e:	retf   
  42053f:	jp     0x42051f
  420541:	push   esi
  420542:	xor    DWORD PTR ss:[ebx],esi
  420545:	retf   
  420546:	inc    ebp
  420547:	js     0x420544
  420549:	pop    edx
  42054a:	mov    edx,0x754cfb8f
  42054f:	xchg   ecx,eax
  420550:	push   ds
  420551:	int3   
  420552:	call   0xcd8801dd
  420557:	out    dx,eax
  420558:	lods   eax,DWORD PTR ds:[esi]
  420559:	jo     0x42055b
  42055b:	or     BYTE PTR [ebp-0x6c],bh
  42055e:	jmp    0x4204e9
  420560:	xchg   edx,eax
  420561:	adc    bl,al
  420563:	mov    edx,0x9c83b3ab
  420568:	leave  
  420569:	mov    ebp,0xf9e555f5
  42056e:	sub    BYTE PTR [ecx+0x32],dh
  420571:	leave  
  420572:	lods   al,BYTE PTR ds:[esi]
  420573:	add    eax,DWORD PTR [ebp+0x37]
  420576:	xor    al,0xb9
  420578:	call   0xae43ce78
  42057d:	dec    ebx
  42057e:	jg     0x42057f
  420580:	mov    eax,0x9e6143d8
  420585:	xor    edi,DWORD PTR [esi+0x7f]
  420588:	inc    ch
  42058a:	clc    
  42058b:	hlt    
  42058c:	out    dx,eax
  42058d:	mov    edi,0xb8caa2a4
  420592:	out    dx,eax
  420593:	dec    esp
  420594:	mov    ecx,0x22e3f248
  420599:	clc    
  42059a:	test   al,0xe8
  42059c:	pop    ebx
  42059d:	rol    BYTE PTR [edx+0x3c],0x34
  4205a1:	nop
  4205a2:	iret   
  4205a3:	or     eax,ecx
  4205a5:	test   esp,esp
  4205a7:	jle    0x420582
  4205a9:	inc    edx
  4205aa:	fisubr DWORD PTR ds:0x84ef32a8
  4205b0:	retf   0x2999
  4205b3:	mov    WORD PTR [ecx+0x4c],fs
  4205b6:	or     esi,0xffffff9d
  4205b9:	jno    0x420615
  4205bb:	and    edx,DWORD PTR [eax+0x3983f152]
  4205c1:	lahf   
  4205c2:	sbb    al,0xec
  4205c4:	add    ebx,esi
  4205c6:	xor    ecx,DWORD PTR [esp+edi*8+0x22]
  4205ca:	fld    DWORD PTR [edi-0x1f3f2d77]
  4205d0:	pop    ebx
  4205d1:	mov    bh,0x57
  4205d3:	out    dx,al
  4205d4:	lds    edx,FWORD PTR [eax]
  4205d6:	mov    ds:0xc85b92a4,eax
  4205db:	stos   BYTE PTR es:[edi],al
  4205dc:	xor    eax,0x69dedcb7
  4205e1:	aaa    
  4205e2:	or     al,0x5e
  4205e4:	dec    ebp
  4205e5:	adc    bh,BYTE PTR [eax]
  4205e7:	adc    esp,DWORD PTR [eax-0x6b615836]
  4205ed:	mov    edx,0x8305c718
  4205f2:	add    al,dl
  4205f4:	push   esi
  4205f5:	or     eax,0x4cc3750d
  4205fa:	adc    al,0xa5
  4205fc:	adc    esi,edx
  4205fe:	adc    al,0xa8
  420600:	cmp    ecx,DWORD PTR [edx-0x2aa72f62]
  420606:	dec    ebx
  420607:	je     0x42059f
  420609:	mov    bl,0x6b
  42060b:	iret   
  42060c:	mov    ch,al
  42060e:	push   ebx
  42060f:	js     0x420640
  420611:	es jmp 0x4205b8
  420614:	xor    BYTE PTR ds:0x480dffd5,bh
  42061a:	inc    esp
  42061b:	test   eax,0x40b2d0d5
  420620:	inc    edi
  420621:	aas    
  420622:	leave  
  420623:	cdq    
  420624:	or     eax,0x46aff915
  420629:	stos   DWORD PTR es:[edi],eax
  42062a:	dec    esp
  42062b:	mov    bl,0x2
  42062d:	inc    esi
  42062e:	mov    al,0xa7
  420630:	jnp    0x420601
  420632:	add    DWORD PTR cs:[ebx-0x53],esp
  420636:	xchg   ebp,esi
  420638:	imul   ecx,DWORD PTR [ecx+ebx*1+0x3e995a3c],0x934ebd9
  420643:	xor    cl,BYTE PTR [edx-0x77]
  420646:	lahf   
  420647:	int    0xff
  420649:	pop    ebp
  42064a:	sar    BYTE PTR [ebp+0xe],0xf5
  42064e:	inc    esp
  42064f:	sbb    ecx,DWORD PTR [edi-0x42]
  420652:	add    al,0x9f
  420654:	pop    edx
  420655:	jnp    0x42069e
  420657:	push   cs
  420658:	jo     0x420663
  42065a:	mov    edx,0x13058605
  42065f:	xor    DWORD PTR [edx],ebp
  420661:	cmp    bh,bl
  420663:	add    edx,DWORD PTR [edi+0x74812eeb]
  420669:	mov    eax,0x18ead963
  42066e:	fcom   st(4)
  420670:	cmp    eax,DWORD PTR [edx+0x10a37cda]
  420676:	retf   
  420677:	xor    al,BYTE PTR [ecx]
  420679:	sbb    ch,BYTE PTR [edx-0x2a]
  42067c:	push   ss
  42067d:	and    DWORD PTR [ebx],edi
  42067f:	xor    al,0xd
  420681:	pop    ebx
  420682:	sbb    ebp,DWORD PTR [esi+0x48]
  420685:	xor    DWORD PTR [ecx],0x84f79e7c
  42068b:	gs lahf 
  42068d:	addr16 out dx,al
  42068f:	sub    al,0x7
  420691:	(bad)  
  420692:	test   al,0x5f
  420694:	shl    BYTE PTR [ebx],cl
  420696:	cld    
  420697:	nop
  420698:	sub    eax,0x3de22fee
  42069d:	sbb    al,0xb1
  42069f:	mov    BYTE PTR [esp+ecx*1],dh
  4206a2:	sbb    edi,esi
  4206a4:	xor    al,0x5e
  4206a6:	dec    edi
  4206a7:	sub    edi,0x3030c030
  4206ad:	pop    ecx
  4206ae:	lods   al,BYTE PTR ds:[esi]
  4206af:	mov    esi,0xdeaf2a20
  4206b4:	ret    0x716
  4206b7:	js     0x4206fe
  4206b9:	add    al,0xb8
  4206bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206bc:	mov    esp,0x4b513dda
  4206c1:	mov    ds:0x5e276c7b,eax
  4206c6:	jne    0x4206a3
  4206c8:	xchg   ebp,eax
  4206c9:	aam    0xe
  4206cb:	test   DWORD PTR [esp+edx*8+0x11c988d1],ebp
  4206d2:	(bad)  
  4206d4:	jno    0x4206a2
  4206d6:	inc    edx
  4206d7:	pop    ebp
  4206d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206d9:	scas   eax,DWORD PTR es:[edi]
  4206da:	pop    ebp
  4206db:	pop    ebp
  4206dc:	pop    edx
  4206dd:	fbstp  TBYTE PTR [ebp-0x2db31516]
  4206e3:	arpl   WORD PTR [ebx],dx
  4206e5:	ret    
  4206e6:	xor    eax,0xc2b69ac4
  4206eb:	cli    
  4206ec:	and    BYTE PTR [ebp-0x392041d8],0xf0
  4206f3:	fst    DWORD PTR [ebx]
  4206f5:	xor    bl,BYTE PTR [ebp-0x3c4e3417]
  4206fb:	sbb    ch,BYTE PTR [esi]
  4206fd:	push   ecx
  4206fe:	and    eax,0xecf8cf38
  420703:	jbe    0x420766
  420705:	push   edi
  420706:	inc    edx
  420707:	dec    ecx
  420708:	cmp    BYTE PTR [esi-0x5f],dh
  42070b:	(bad)  
  42070c:	cdq    
  42070d:	mov    ah,0x4d
  42070f:	push   ds
  420710:	stos   DWORD PTR es:[edi],eax
  420711:	test   eax,0xfe110d8c
  420716:	lahf   
  420717:	push   ebx
  420718:	inc    ecx
  420719:	clc    
  42071a:	clc    
  42071b:	lahf   
  42071c:	dec    esp
  42071d:	inc    edx
  42071e:	add    esi,esi
  420720:	bnd jge 0x4206ca
  420723:	pop    esp
  420724:	fld    QWORD PTR [ecx-0x67]
  420727:	dec    esi
  420728:	imul   ebp,DWORD PTR [eax+0x5683bff9],0x14
  42072f:	push   eax
  420730:	add    BYTE PTR [ebp-0x64f47f4f],al
  420736:	jae    0x4206bf
  420738:	hlt    
  420739:	test   al,0xf7
  42073c:	inc    edx
  42073d:	leave  
  42073e:	pop    eax
  42073f:	ret    0x32a8
  420742:	jnp    0x4207b2
  420744:	mov    edi,0xbcdce995
  420749:	fild   DWORD PTR [esi+0x69544917]
  42074f:	push   eax
  420750:	push   ss
  420751:	mov    edi,0x5ae7879
  420756:	sbb    cl,0xd8
  420759:	or     BYTE PTR [esi+0x1],0x49
  42075d:	repz in al,0x8c
  420760:	cmp    edi,DWORD PTR [eax+ecx*1-0x2f]
  420764:	out    dx,al
  420765:	repnz stos DWORD PTR es:[edi],eax
  420767:	adc    DWORD PTR [eax-0x20],0x38a10de5
  42076e:	jmp    0x2c7d0696
  420773:	cmp    eax,0x9f3f6f9
  420778:	(bad)  [ebp+eiz*2-0x3e078d85]
  42077f:	stos   DWORD PTR es:[edi],eax
  420780:	and    DWORD PTR [edx+0x3d],edi
  420783:	pop    edx
  420784:	call   0xf0efed35
  420789:	dec    eax
  42078a:	out    0x37,eax
  42078c:	popa   
  42078d:	mov    ds:0x3c0ac54f,al
  420792:	inc    esp
  420793:	xchg   edx,eax
  420794:	and    eax,0xa540528d
  420799:	(bad)  
  42079a:	mov    esp,0x8740eb2
  42079f:	and    dl,BYTE PTR [edx+0x464438eb]
  4207a5:	aad    0xdc
  4207a7:	jbe    0x4207c2
  4207a9:	and    eax,0x4d1b4919
  4207ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207af:	xor    ecx,DWORD PTR [edi]
  4207b1:	test   BYTE PTR [esi-0x4b],ch
  4207b4:	paddusw mm1,QWORD PTR [eax+0x1a]
  4207b8:	jnp    0x42074c
  4207ba:	cmp    DWORD PTR [esi+0x1ad02979],edx
  4207c0:	push   es
  4207c1:	jle    0x4207f1
  4207c3:	cmp    bh,BYTE PTR [ebp-0x46]
  4207c6:	mov    al,BYTE PTR [eax+0x4a0ad3bf]
  4207cc:	imul   eax,esp,0x5d427c
  4207d2:	push   esp
  4207d3:	nop
  4207d4:	cmp    BYTE PTR ds:0x54281884,0x23
  4207db:	adc    cl,BYTE PTR [ecx+esi*1]
  4207de:	aaa    
  4207df:	stos   DWORD PTR es:[edi],eax
  4207e0:	into   
  4207e1:	loope  0x42076f
  4207e3:	stos   BYTE PTR es:[edi],al
  4207e4:	dec    eax
  4207e5:	cli    
  4207e6:	in     al,0xac
  4207e8:	pop    ebx
  4207e9:	mov    eax,0xaac489f3
  4207ee:	pop    ebp
  4207ef:	stc    
  4207f0:	sbb    ebx,0x7d
  4207f3:	xor    BYTE PTR [ecx-0x71],0xa9
  4207f7:	aad    0x8b
  4207f9:	lods   al,BYTE PTR ds:[esi]
  4207fa:	cmp    BYTE PTR [edx-0x4be64f67],dh
  420800:	test   DWORD PTR [eax-0x36],edi
  420803:	in     eax,0xdd
  420805:	aaa    
  420806:	inc    edx
  420807:	jne    0x420834
  420809:	jmp    0x50e45780
  42080e:	cmc    
  42080f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420810:	jmp    0x4207e5
  420812:	mov    dl,0x2d
  420814:	int    0xf0
  420816:	ror    ebp,cl
  420818:	add    eax,edx
  42081a:	mov    gs,ebx
  42081c:	and    ecx,DWORD PTR [edi-0x55]
  42081f:	out    dx,al
  420820:	inc    edx
  420821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420822:	out    dx,al
  420823:	imul   esp,edx,0xffffffae
  420826:	iret   
  420827:	dec    ecx
  420828:	fnstcw WORD PTR [edx]
  42082a:	rcr    DWORD PTR [ecx+eiz*8-0x157fc3b],cl
  420831:	push   ds
  420832:	mov    dl,0x24
  420834:	in     al,0xee
  420836:	xchg   bx,ax
  420838:	bound  ecx,QWORD PTR [ebp-0x1778fa47]
  42083e:	xor    ebp,DWORD PTR [ebp-0x2b446d21]
  420844:	or     eax,0x3fa7bcd5
  420849:	sbb    eax,0x29d518b7
  42084e:	dec    esp
  42084f:	add    BYTE PTR [esi-0x4a13af98],0xc5
  420856:	sbb    cl,BYTE PTR [edi+0x37]
  420859:	mov    ah,0xfa
  42085b:	add    DWORD PTR [ebx],0xffffffd5
  42085e:	jne    0x4208c9
  420860:	or     cl,BYTE PTR ds:0x89857ae4
  420866:	mov    ah,0x37
  420868:	js     0x4208bf
  42086a:	inc    DWORD PTR [edx-0x60b73a9b]
  420870:	ret    0xb9f8
  420873:	out    dx,al
  420874:	jbe    0x4208a8
  420876:	fcmovbe st,st(2)
  420878:	cmp    eax,0xf1716773
  42087d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42087e:	inc    edx
  42087f:	mov    cl,0x14
  420881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420882:	pop    ss
  420883:	mov    WORD PTR [edi],fs
  420885:	dec    ebp
  420886:	mov    edi,0x85c64e76
  42088b:	mov    ah,0x67
  42088d:	xor    al,0xa4
  42088f:	std    
  420890:	sub    ecx,DWORD PTR [edx+0x6fa123e5]
  420896:	shl    DWORD PTR [esi],1
  420898:	in     al,0x27
  42089a:	cmp    al,0xad
  42089c:	enter  0x6a2,0x86
  4208a0:	mov    es,esp
  4208a2:	jmp    0x4ca2ae4a
  4208a7:	mov    bh,0xe1
  4208a9:	jmp    0xa790725a
  4208ae:	in     eax,dx
  4208af:	xchg   ebx,eax
  4208b0:	jecxz  0x420847
  4208b2:	fsubr  DWORD PTR [edx]
  4208b4:	pop    ss
  4208b5:	pop    ds
  4208b6:	inc    ebp
  4208b7:	add    al,BYTE PTR [ecx-0x3ac192fb]
  4208bd:	pusha  
  4208be:	in     eax,dx
  4208bf:	push   ds
  4208c0:	jns    0x420903
  4208c2:	lods   eax,DWORD PTR ds:[esi]
  4208c3:	inc    esi
  4208c4:	fadd   st(0),st
  4208c6:	add    bh,bh
  4208c8:	fsub   QWORD PTR [ecx-0x66e899ba]
  4208ce:	lds    esp,FWORD PTR [edx-0x79]
  4208d1:	cmc    
  4208d2:	loopne 0x4208c6
  4208d4:	pop    ds
  4208d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d6:	out    dx,al
  4208d7:	push   esp
  4208d8:	adc    ebx,DWORD PTR [ebx-0x31]
  4208db:	aas    
  4208dc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208de:	push   0x40c2881e
  4208e3:	mov    ds:0x7eb53a9,al
  4208e8:	mov    DWORD PTR [edi+0x7a],edi
  4208eb:	clc    
  4208ec:	sahf   
  4208ed:	fcmove st,st(7)
  4208ef:	jo     0x42092a
  4208f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f2:	ret    0x8d32
  4208f5:	jmp    0x26a6:0x15f047b2
  4208fc:	pop    ds
  4208fd:	pusha  
  4208fe:	jnp    0x4208d7
  420900:	rcl    DWORD PTR [esi+0x62],cl
  420903:	jg     0x420915
  420905:	in     eax,0xdc
  420907:	dec    eax
  420908:	call   0xb67:0xa332ff9b
  42090f:	push   0xffffffea
  420911:	cld    
  420912:	cmc    
  420913:	imul   eax,DWORD PTR [eax-0x52],0xb5e5ba8d
  42091a:	or     eax,0x7f180dba
  42091f:	mov    ch,0x80
  420921:	xchg   ecx,eax
  420922:	mov    cl,0xe2
  420924:	jno    0x420907
  420926:	in     al,dx
  420927:	add    al,0xb0
  420929:	sbb    BYTE PTR [eax+0x6d],0x3
  42092d:	call   0x3f7085c8
  420932:	cwde   
  420933:	adc    DWORD PTR [edi+0x79],ecx
  420936:	pop    ecx
  420937:	lahf   
  420938:	aad    0x94
  42093a:	jne    0x42098e
  42093c:	clc    
  42093d:	shl    ebx,1
  42093f:	in     eax,dx
  420940:	aad    0x9
  420942:	in     eax,0x3a
  420944:	aam    0x92
  420946:	cdq    
  420947:	sar    BYTE PTR [eax+0x3f8272f5],cl
  42094d:	call   0x594d:0xc81906ee
  420954:	sbb    BYTE PTR [edx-0x2a],0x8d
  420958:	loopne 0x4208ff
  42095a:	out    dx,eax
  42095b:	xchg   edx,eax
  42095c:	jg     0x42095a
  42095e:	test   al,0xc8
  420960:	pop    esi
  420961:	cmp    BYTE PTR [esi+edi*2-0x7fd05e51],al
  420968:	sahf   
  420969:	add    DWORD PTR [esi-0x3d7c9c86],0x75951962
  420973:	mov    cl,0x35
  420975:	retf   
  420976:	cld    
  420977:	or     BYTE PTR [ecx+edi*8-0x14bc7400],ah
  42097e:	shl    DWORD PTR [eax-0x3c],0x3
  420982:	das    
  420983:	cmp    al,BYTE PTR ds:0x125823ff
  420989:	daa    
  42098a:	xor    eax,0xffffffeb
  42098d:	test   DWORD PTR [ebp-0x6],ebx
  420990:	loopne 0x42099b
  420992:	pop    edi
  420993:	sbb    ah,BYTE PTR [edx-0x2bba3abe]
  420999:	(bad)  
  42099a:	fsubr  DWORD PTR [edx+0x55]
  42099d:	adc    DWORD PTR [ebp+0x63],ecx
  4209a0:	xchg   esi,eax
  4209a1:	das    
  4209a2:	add    BYTE PTR [ecx+ebx*4],bh
  4209a5:	pop    es
  4209a6:	and    eax,0xbcaa2c2c
  4209ab:	xchg   ecx,eax
  4209ac:	int3   
  4209ad:	dec    BYTE PTR [esp+esi*2-0x47]
  4209b1:	jle    0x420a32
  4209b3:	mov    dh,0xd2
  4209b5:	adc    esi,ebp
  4209b7:	(bad)  
  4209b9:	rol    BYTE PTR [edi],cl
  4209bb:	pop    edx
  4209bc:	mov    esi,0xfb26fcb6
  4209c1:	add    cl,al
  4209c3:	add    al,0x82
  4209c5:	lods   eax,DWORD PTR ds:[esi]
  4209c6:	iret   
  4209c7:	mov    ch,0x39
  4209c9:	int    0xb2
  4209cb:	ins    DWORD PTR es:[edi],dx
  4209cc:	and    eax,0x8174997d
  4209d1:	lahf   
  4209d2:	xchg   ecx,eax
  4209d3:	dec    eax
  4209d4:	cld    
  4209d5:	iret   
  4209d6:	nop
  4209d7:	inc    ebx
  4209d8:	xchg   edx,eax
  4209d9:	in     al,dx
  4209da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209db:	xor    eax,0x97b17be4
  4209e0:	add    eax,0xc82e108b
  4209e5:	mov    edi,0x8e514f60
  4209ea:	mov    bh,0xdd
  4209ec:	ret    0xa3cb
  4209ef:	out    dx,al
  4209f0:	jp     0x420a13
  4209f2:	jle    0x4209da
  4209f4:	and    al,0x92
  4209f6:	in     al,dx
  4209f7:	mov    ch,0x2
  4209f9:	cmp    ebp,ebp
  4209fb:	xor    eax,0xea630495
  420a00:	xor    edx,DWORD PTR [edx]
  420a02:	cmp    ebp,DWORD PTR [edx+edx*4-0xa]
  420a06:	dec    esp
  420a07:	addr16 push edx
  420a09:	push   esi
  420a0a:	xchg   esp,eax
  420a0b:	adc    esp,DWORD PTR [ecx]
  420a0d:	adc    ah,BYTE PTR [edi]
  420a0f:	aaa    
  420a10:	jg     0x420a4b
  420a12:	les    ebx,FWORD PTR [edx+0x2e]
  420a15:	xchg   ecx,eax
  420a16:	xchg   dl,dl
  420a18:	sbb    eax,DWORD PTR [edx+0x2f]
  420a1b:	pop    esp
  420a1c:	jl     0x420a59
  420a1e:	sbb    esi,edi
  420a20:	mov    bl,0x2c
  420a22:	inc    ebp
  420a23:	stos   BYTE PTR es:[edi],al
  420a24:	sub    edi,DWORD PTR [eax-0x27]
  420a27:	jg     0x4209cb
  420a29:	mov    bl,0xa8
  420a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a2c:	cli    
  420a2d:	test   bh,0xbf
  420a30:	inc    eax
  420a31:	mov    eax,ds:0xff757426
  420a36:	jne    0x420a8f
  420a38:	es aas 
  420a3a:	jge    0x420a5e
  420a3c:	jl     0x420aa9
  420a3e:	dec    esp
  420a3f:	xchg   esp,eax
  420a40:	sbb    DWORD PTR [eax],ebp
  420a42:	mov    edx,0xcc3ab176
  420a47:	or     al,0xd1
  420a49:	loop   0x420aca
  420a4b:	push   0x15a410b0
  420a50:	fisubr DWORD PTR [edi]
  420a52:	fdivr  DWORD PTR [esi-0x55]
  420a55:	add    eax,0x9878c6d3
  420a5a:	inc    ebp
  420a5b:	mov    esi,0x63637c31
  420a60:	jbe    0x4209f6
  420a62:	ins    DWORD PTR es:[edi],dx
  420a63:	aad    0x18
  420a65:	and    dh,dl
  420a67:	jns    0x4209f9
  420a69:	aad    0x2
  420a6b:	test   DWORD PTR [eax+0x508b338d],eax
  420a71:	sub    esp,DWORD PTR [eax+0x2c]
  420a74:	inc    ecx
  420a75:	enter  0x19e3,0xce
  420a79:	shl    DWORD PTR [edx+0x13ea6df9],cl
  420a7f:	dec    ecx
  420a80:	mov    ds:0xa9a4d053,eax
  420a85:	je     0x420a3e
  420a87:	sbb    BYTE PTR [esi],dh
  420a89:	fadd   DWORD PTR [edi+ebx*2]
  420a8c:	js     0x420a9e
  420a8e:	fistp  DWORD PTR [ecx+0x7c]
  420a91:	sbb    eax,0x1776d0a8
  420a96:	mov    fs,edi
  420a98:	(bad)  
  420a9b:	cmp    al,0x41
  420a9d:	mov    ebp,0xddca1fbe
  420aa2:	and    eax,0x97e92578
  420aa7:	sti    
  420aa8:	jbe    0x420ace
  420aaa:	pop    ds
  420aab:	jp     0x420b03
  420aad:	jne    0x420b0f
  420aaf:	cmc    
  420ab0:	mov    cl,0x54
  420ab2:	xchg   ebx,eax
  420ab3:	call   0xd9fc:0xca759207
  420aba:	xchg   DWORD PTR [ebx+edx*2],ebp
  420abd:	xchg   BYTE PTR [ebp+0x53],bl
  420ac0:	scas   eax,DWORD PTR es:[edi]
  420ac1:	ror    BYTE PTR [edx],1
  420ac3:	jl     0x420a85
  420ac5:	mov    esi,0x6c4fb6c0
  420aca:	ins    BYTE PTR es:[edi],dx
  420acb:	adc    al,0xce
  420acd:	mov    ch,0x35
  420acf:	dec    ebx
  420ad0:	aaa    
  420ad1:	iret   
  420ad2:	(bad)
  420ad5:	push   0xb84e21d4
  420ada:	xchg   edx,eax
  420adb:	add    eax,0xd730fb51
  420ae0:	ds iret 
  420ae2:	test   al,0xac
  420ae4:	scas   eax,DWORD PTR es:[edi]
  420ae5:	nop
  420ae6:	sbb    BYTE PTR [ebx+0x23],bh
  420ae9:	les    eax,FWORD PTR [edx+0x22]
  420aec:	addr16 jno 0x420afb
  420aef:	clc    
  420af0:	xor    eax,0x83386471
  420af5:	sti    
  420af6:	pop    eax
  420af7:	inc    eax
  420af8:	ss inc ebp
  420afa:	jbe    0x420af6
  420afc:	mov    BYTE PTR [eax+eax*4+0x5d],ah
  420b00:	imul   ebx,DWORD PTR [eax],0xc3a7d3b5
  420b06:	out    dx,eax
  420b07:	mov    cl,0x99
  420b09:	add    bl,BYTE PTR [ebx+edx*2+0x7f2dfc44]
  420b10:	inc    ecx
  420b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b12:	shl    BYTE PTR [edx+0x32],1
  420b15:	mov    ah,0xaf
  420b17:	lods   eax,DWORD PTR ds:[esi]
  420b18:	push   edi
  420b19:	sub    BYTE PTR [ebx-0x681ce78c],bl
  420b1f:	mov    edx,ebp
  420b21:	pushf  
  420b22:	mov    al,0x86
  420b24:	inc    esi
  420b25:	adc    bh,BYTE PTR ds:0x22709fa0
  420b2b:	fs or  eax,0xc05b34ae
  420b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b32:	rcr    DWORD PTR [eax+ebx*4-0x5c],cl
  420b36:	mov    DWORD PTR [ebx],ebp
  420b38:	fcomi  st,st(2)
  420b3a:	mov    ebp,DWORD PTR [ecx-0x4abbe8ea]
  420b40:	add    BYTE PTR [ebx+0x4fb5c23c],al
  420b46:	add    eax,0x77c9373
  420b4b:	adc    eax,0x7c124d15
  420b50:	xlat   BYTE PTR ds:[ebx]
  420b51:	addr16 sub eax,0x8cac21ff
  420b57:	dec    ebp
  420b58:	push   ecx
  420b59:	retf   
  420b5a:	pop    ss
  420b5b:	add    eax,ebx
  420b5d:	ins    DWORD PTR es:[edi],dx
  420b5e:	or     DWORD PTR [ecx+0x25],esi
  420b61:	(bad)  
  420b62:	sbb    DWORD PTR [di+0x2830],ebx
  420b67:	sbb    BYTE PTR [edx-0x4c],bl
  420b6a:	push   0x38
  420b6c:	mov    ah,0x87
  420b6e:	fadd   QWORD PTR [ebx]
  420b70:	mov    edi,0xb431bc2c
  420b75:	push   cs
  420b76:	xchg   edx,eax
  420b77:	or     bl,cl
  420b79:	and    ecx,edi
  420b7b:	adc    esp,DWORD PTR [ebp+0x73]
  420b7e:	sub    DWORD PTR [ebx+eiz*2-0x4],ebx
  420b82:	arpl   WORD PTR [esi+eiz*2-0x51],dx
  420b86:	cld    
  420b87:	sahf   
  420b88:	cmp    esi,DWORD PTR [edx+0xc10e1b7]
  420b8e:	add    al,BYTE PTR [eax]
  420b90:	and    esi,eax
  420b92:	mov    dl,0x4d
  420b94:	add    eax,0x876adc14
  420b99:	loopne 0x420bf7
  420b9b:	(bad)  
  420b9c:	fstp   DWORD PTR [edi+0x12ca53b2]
  420ba2:	cmp    ebx,ebp
  420ba4:	mov    esi,0xa72d97eb
  420ba9:	push   ebx
  420baa:	fsubr  DWORD PTR [eax+edi*4+0x2a864ea]
  420bb1:	sbb    BYTE PTR [ebp+esi*1-0x51],cl
  420bb5:	out    0xa9,al
  420bb7:	jl     0x420bb2
  420bb9:	pop    esi
  420bba:	in     al,0x1b
  420bbc:	adc    edx,DWORD PTR [ebx-0x41]
  420bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc0:	retf   
  420bc1:	jmp    FWORD PTR [ecx]
  420bc3:	dec    esp
  420bc4:	cmp    DWORD PTR [esi],esp
  420bc6:	xlat   BYTE PTR ds:[ebx]
  420bc7:	sub    DWORD PTR [ecx+edi*2],0x654640ff
  420bce:	mov    eax,0x5af2ffa0
  420bd3:	jbe    0x420b90
  420bd5:	pop    ss
  420bd6:	outs   dx,BYTE PTR ds:[esi]
  420bd7:	push   esi
  420bd8:	mul    ch
  420bda:	mov    ch,BYTE PTR [edx]
  420bdc:	call   0x93db:0x33972e51
  420be3:	mov    al,0x66
  420be5:	xchg   edi,eax
  420be6:	and    BYTE PTR ds:0x8ac89a0f,0x8a
  420bed:	jae    0x420c36
  420bef:	mov    bl,0x7e
  420bf1:	test   eax,0x97d8d4f5
  420bf6:	jl     0x420bf7
  420bf8:	ror    BYTE PTR [edi-0x4a],1
  420bfb:	jbe    0x420c41
  420bfd:	push   ecx
  420bfe:	cmp    al,0x4e
  420c00:	cli    
  420c01:	mov    DWORD PTR [bx+di],ecx
  420c04:	jmp    0x1248001d
  420c09:	retf   0x496d
  420c0c:	push   0xfffffff7
  420c0e:	fbld   TBYTE PTR [ebp-0x15]
  420c11:	inc    esp
  420c12:	fisttp WORD PTR [esi+0x3d94d012]
  420c18:	jle    0x420bad
  420c1a:	leave  
  420c1b:	test   BYTE PTR [esi],dl
  420c1d:	(bad)  
  420c1e:	sbb    al,0x88
  420c20:	call   0x7f8ee704
  420c25:	cmc    
  420c26:	sti    
  420c27:	lods   al,BYTE PTR ds:[esi]
  420c28:	aam    0xa8
  420c2a:	mov    bl,0xc4
  420c2c:	leave  
  420c2d:	mov    esp,0x6d815f75
  420c32:	stos   DWORD PTR es:[edi],eax
  420c33:	sbb    esi,DWORD PTR [esi-0x40]
  420c36:	int3   
  420c37:	pop    ds
  420c38:	lea    eax,[ebx+0x7237e604]
  420c3e:	inc    ebx
  420c3f:	mov    bh,0x2
  420c41:	pop    edi
  420c42:	or     eax,0x90f230a6
  420c47:	call   0x4089816
  420c4c:	pop    esi
  420c4d:	into   
  420c4e:	in     eax,0x2f
  420c50:	jne    0x420c08
  420c52:	aaa    
  420c53:	and    cl,BYTE PTR [edi]
  420c55:	ds mov cl,dl
  420c58:	or     al,0x37
  420c5a:	adc    DWORD PTR [ecx-0x5c8e8ff7],ebp
  420c60:	jb     0x420c8b
  420c62:	pop    ss
  420c63:	xchg   BYTE PTR [edi+0x50e542d0],al
  420c69:	pop    ss
  420c6a:	xchg   ecx,eax
  420c6b:	inc    ebx
  420c6c:	cmc    
  420c6d:	clc    
  420c6e:	sub    eax,0x88433609
  420c73:	int    0x59
  420c75:	add    eax,0xce398a5
  420c7a:	add    ebx,ecx
  420c7c:	push   esp
  420c7d:	cmp    edx,0xefc07360
  420c83:	je     0x420cfd
  420c85:	pop    esp
  420c86:	lds    edi,FWORD PTR [ebp-0x2d]
  420c89:	adc    al,0x25
  420c8b:	push   0x560a9f47
  420c90:	inc    DWORD PTR [esi+0x6b]
  420c93:	adc    al,0x49
  420c95:	fst    DWORD PTR [eax-0x12]
  420c98:	test   dl,bh
  420c9a:	retf   
  420c9b:	mov    ecx,0xd9bf1ca
  420ca0:	(bad)  
  420ca1:	leave  
  420ca2:	xor    eax,0x93359677
  420ca7:	cmp    eax,0x1f287e2e
  420cac:	lods   al,BYTE PTR ds:[esi]
  420cad:	inc    esp
  420cae:	ret    0xeedf
  420cb1:	and    DWORD PTR [edi-0x1b309fd4],edi
  420cb7:	cmp    al,0x12
  420cb9:	mov    bh,0x89
  420cbb:	xor    al,0xed
  420cbd:	outs   dx,BYTE PTR ds:[esi]
  420cbe:	cmp    bl,BYTE PTR [esi+esi*1+0x5f]
  420cc2:	and    al,0xaa
  420cc4:	jg     0x420c8f
  420cc6:	sbb    esi,eax
  420cc8:	jecxz  0x420d3c
  420cca:	leave  
  420ccb:	imul   esp,ebx,0x22
  420cce:	outs   dx,DWORD PTR ds:[esi]
  420ccf:	dec    edx
  420cd0:	push   edi
  420cd1:	mov    bl,0x1e
  420cd3:	call   0xf8b41ce9
  420cd8:	inc    esi
  420cd9:	shl    DWORD PTR [eax+edi*2],cl
  420cdc:	in     eax,0xd6
  420cde:	adc    al,0x4c
  420ce0:	push   cs
  420ce1:	inc    ecx
  420ce2:	xor    al,0x1d
  420ce4:	pop    ebp
  420ce5:	dec    ebx
  420ce6:	out    0xb5,al
  420ce8:	jae    0x420d3a
  420cea:	std    
  420ceb:	pop    ebp
  420cec:	test   DWORD PTR [esi],ebx
  420cee:	(bad)  
  420cef:	jo     0x420cf6
  420cf1:	jp     0x420d0e
  420cf3:	ret    
  420cf4:	xchg   ebx,eax
  420cf5:	int    0x99
  420cf7:	dec    ecx
  420cf8:	sbb    esp,DWORD PTR [eax-0x2507e1f1]
  420cfe:	test   BYTE PTR [edx],bh
  420d00:	das    
  420d01:	sub    esi,DWORD PTR [esi-0x4c]
  420d04:	ins    BYTE PTR es:[edi],dx
  420d05:	scas   al,BYTE PTR es:[edi]
  420d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d07:	xor    bl,BYTE PTR [ebx+0x30f965bd]
  420d0d:	(bad)  
  420d0e:	jns    0x420d70
  420d10:	adc    DWORD PTR [ecx+0x5ee4ba4f],0x5e01206b
  420d1a:	cmp    ecx,eax
  420d1c:	pop    edx
  420d1d:	xchg   DWORD PTR fs:[esi-0x45],edi
  420d21:	sub    DWORD PTR [eax+0x2c],0xfffffffa
  420d25:	gs fdiv st(5),st
  420d28:	jecxz  0x420d8d
  420d2a:	push   ebx
  420d2b:	mov    dl,0x65
  420d2d:	mov    al,0x81
  420d2f:	retf   
  420d30:	rcl    DWORD PTR [esi],0x76
  420d33:	mov    eax,0x26ceda92
  420d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d39:	mov    bh,0x30
  420d3b:	inc    esi
  420d3c:	fstp   QWORD PTR [edx-0x27]
  420d3f:	stc    
  420d40:	test   BYTE PTR [eax+0x72d49cfb],al
  420d46:	fdiv   DWORD PTR gs:[eax+0x4d856e1a]
  420d4d:	not    ch
  420d4f:	xor    DWORD PTR [esi+0x2d],esp
  420d52:	push   ds
  420d53:	out    dx,eax
  420d54:	fimul  DWORD PTR [ebx+0x3c]
  420d57:	int3   
  420d58:	pop    esi
  420d59:	jmp    0x420d68
  420d5b:	in     eax,0x3f
  420d5d:	push   ecx
  420d5e:	push   cs
  420d5f:	popf   
  420d60:	not    DWORD PTR [esi]
  420d62:	hlt    
  420d63:	jp     0x420d68
  420d65:	push   edi
  420d66:	mov    ebx,edi
  420d68:	add    al,0x35
  420d6a:	lods   eax,DWORD PTR ds:[esi]
  420d6b:	and    dh,0x2c
  420d6e:	dec    ebx
  420d6f:	dec    ebx
  420d70:	imul   edi,DWORD PTR [ecx+ecx*4+0x160de03e],0xf14a8a42
  420d7b:	lods   al,BYTE PTR ds:[esi]
  420d7c:	ins    BYTE PTR es:[edi],dx
  420d7d:	inc    esi
  420d7e:	rcl    BYTE PTR [ebx-0x1c9eb006],cl
  420d84:	cwde   
  420d85:	ds test eax,0x50d9e120
  420d8b:	(bad)  
  420d8c:	pop    edi
  420d8d:	inc    eax
  420d8e:	(bad)  
  420d8f:	jecxz  0x420e04
  420d91:	dec    ebx
  420d92:	fidiv  DWORD PTR [edx-0x31]
  420d95:	cmp    eax,0xfc654cd3
  420d9a:	and    al,0x7e
  420d9c:	lock xlat BYTE PTR ds:[ebx]
  420d9e:	add    eax,0xf2317eb8
  420da3:	jns    0x420dd6
  420da5:	jp     0x420db4
  420da7:	loope  0x420da3
  420da9:	jbe    0x420de9
  420dab:	nop
  420dac:	idiv   DWORD PTR [eax+0x437800b5]
  420db2:	mov    dl,0x1d
  420db4:	dec    ebp
  420db5:	sbb    DWORD PTR [edx-0x17],ecx
  420db8:	(bad)  
  420db9:	cmp    al,al
  420dbb:	fstp   QWORD PTR [edx-0x51d3dc01]
  420dc1:	push   0x7f
  420dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dc4:	fst    QWORD PTR [esi-0x5]
  420dc7:	neg    BYTE PTR [esi+0x2e26d049]
  420dcd:	pushf  
  420dce:	test   al,0x8a
  420dd0:	dec    esp
  420dd1:	inc    edx
  420dd2:	sub    ebx,ebx
  420dd4:	jns    0x420dc6
  420dd6:	add    al,0xbf
  420dd8:	lea    edi,[esi+ebp*1-0x7bc7d938]
  420ddf:	xchg   esp,eax
  420de0:	or     al,0xdd
  420de2:	fwait
  420de3:	ror    DWORD PTR ds:0xbafda2ea,1
  420de9:	nop
  420dea:	dec    ecx
  420deb:	xchg   edx,eax
  420dec:	mov    ah,0x71
  420dee:	mov    ah,0xab
  420df0:	mov    DWORD PTR [ebx+0x7b240161],eax
  420df6:	test   eax,0xf1ed4165
  420dfb:	aad    0x3b
  420dfd:	stc    
  420dfe:	push   es
  420dff:	mov    BYTE PTR [edx+edx*2+0x34fa7405],ah
  420e06:	fistp  QWORD PTR [ecx]
  420e08:	fcom   QWORD PTR [ebp+0x66]
  420e0b:	outs   dx,DWORD PTR ds:[esi]
  420e0c:	xor    bh,dh
  420e0e:	and    DWORD PTR [ecx-0x19cef080],edx
  420e14:	lods   eax,DWORD PTR ds:[esi]
  420e15:	adc    cl,BYTE PTR [edi+0x61ce2ce1]
  420e1b:	mov    BYTE PTR ds:0x13a0cc2f,al
  420e21:	jl     0x420e1b
  420e23:	clc    
  420e24:	loope  0x420e13
  420e26:	enter  0x7e5c,0xd6
  420e2a:	arpl   WORD PTR [ebx+0x2f],bp
  420e2d:	xor    al,0x6a
  420e2f:	push   ds
  420e30:	xor    bl,dl
  420e32:	jns    0x420e86
  420e34:	and    BYTE PTR [ecx],ah
  420e36:	push   ebx
  420e37:	xor    ecx,ebx
  420e39:	test   BYTE PTR [edi+0x72170843],ch
  420e3f:	xor    DWORD PTR [edi],ecx
  420e41:	mov    cl,0x3f
  420e43:	pop    ds
  420e44:	leave  
  420e45:	in     al,dx
  420e46:	cmp    al,0x4f
  420e48:	fwait
  420e49:	mov    ebx,0x30fd5138
  420e4e:	fisubr WORD PTR [edi+0x6a3592d7]
  420e54:	(bad)  
  420e55:	loope  0x420e4b
  420e57:	push   ebx
  420e58:	fsub   st,st(1)
  420e5a:	fisub  DWORD PTR [ecx-0x71]
  420e5d:	pop    esi
  420e5e:	in     eax,dx
  420e5f:	add    dl,BYTE PTR [edx*2+0x720e01ee]
  420e66:	dec    esi
  420e67:	ja     0x420e70
  420e69:	fs aad 0x7a
  420e6c:	es jmp 0x5f07fafe
  420e72:	or     eax,0xfa12c60
  420e77:	jp     0x420e39
  420e79:	mov    WORD PTR [esp+edx*4-0x5f],ds
  420e7d:	xchg   edx,eax
  420e7e:	dec    ecx
  420e7f:	out    0x8f,al
  420e81:	and    BYTE PTR [ebx+0x74],bl
  420e84:	sbb    edi,esi
  420e86:	push   edi
  420e87:	popa   
  420e88:	es pop ebx
  420e8a:	xchg   ebp,eax
  420e8b:	sbb    eax,0x6d588854
  420e90:	xchg   esp,eax
  420e91:	mov    dh,0xd
  420e93:	cld    
  420e94:	mov    edi,0xbbc61218
  420e99:	mov    dh,BYTE PTR [esi+ebp*2-0x3b54c9f3]
  420ea0:	sub    DWORD PTR [esi+0x74],eax
  420ea3:	in     eax,0xd7
  420ea5:	cli    
  420ea6:	jno    0x420f09
  420ea8:	or     ecx,ebp
  420eaa:	push   ds
  420eab:	add    dh,al
  420ead:	stc    
  420eae:	jmp    0x420e5d
  420eb0:	mov    al,0x6b
  420eb2:	push   ebx
  420eb3:	or     bl,dh
  420eb5:	shr    eax,1
  420eb7:	pop    ds
  420eb8:	xor    bh,BYTE PTR [edx-0x76]
  420ebb:	loopne 0x420e5c
  420ebd:	cmp    ebx,DWORD PTR [ebx+0x640874a3]
  420ec3:	shl    BYTE PTR [eax-0x2c9ca72e],0xe7
  420eca:	mov    dl,BYTE PTR [edi]
  420ecc:	test   DWORD PTR [edi],edi
  420ece:	add    al,0x48
  420ed0:	sbb    al,0x85
  420ed2:	push   edx
  420ed3:	mov    edi,cs
  420ed5:	mov    ecx,0x390a54f7
  420eda:	dec    edx
  420edb:	ins    DWORD PTR es:[edi],dx
  420edc:	ss or  eax,0x7dc3a2b5
  420ee2:	or     esi,ebp
  420ee4:	js     0x420f1a
  420ee6:	rcr    BYTE PTR [edx+ebp*2-0x2ca57404],1
  420eed:	pushf  
  420eee:	dec    esi
  420eef:	xor    DWORD PTR [edi],ebp
  420ef1:	iret   
  420ef2:	push   0xffffffd5
  420ef4:	leave  
  420ef5:	call   0x4f48:0x52fef572
  420efc:	jmp    0xfa66:0xd11c2c9d
  420f03:	jno    0x420f53
  420f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f06:	mov    bl,0x95
  420f08:	or     ebp,DWORD PTR [ebx+ecx*4-0x58]
  420f0c:	aas    
  420f0d:	mov    al,ds:0xc09b5f7b
  420f12:	jnp    0x420f46
  420f14:	push   es
  420f15:	(bad)  
  420f16:	pop    ecx
  420f17:	adc    DWORD PTR [esi+esi*8],esp
  420f1a:	test   al,0x30
  420f1c:	xor    eax,0x28de117f
  420f21:	ds ins DWORD PTR es:[edi],dx
  420f23:	jbe    0x420ebc
  420f25:	lea    esp,[eax-0x26506a10]
  420f2b:	jns    0x420f75
  420f2d:	push   ss
  420f2e:	std    
  420f2f:	mov    ds:0x5a3e658d,al
  420f34:	rcr    DWORD PTR [edx+0x66],0x23
  420f38:	add    DWORD PTR [edx+0x141c8244],esp
  420f3e:	outs   dx,DWORD PTR ds:[esi]
  420f3f:	lea    esi,[edi-0x27429471]
  420f45:	pop    ecx
  420f46:	push   esi
  420f47:	inc    edi
  420f48:	adc    eax,0x8c9a127f
  420f4d:	repz fnstsw WORD PTR [edx]
  420f50:	sar    BYTE PTR [eax],cl
  420f52:	mov    ds:0x4c550e2b,al
  420f57:	jbe    0x420f2f
  420f59:	ins    DWORD PTR es:[edi],dx
  420f5a:	cs mov bl,0x87
  420f5d:	or     al,0x55
  420f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f60:	pop    ecx
  420f61:	outs   dx,BYTE PTR ds:[esi]
  420f62:	mov    bh,0xe7
  420f64:	cdq    
  420f65:	xchg   ah,dl
  420f67:	inc    esi
  420f68:	xchg   DWORD PTR [ebx+0x7a],ebp
  420f6b:	mov    edx,0x240eca3
  420f70:	sbb    bl,BYTE PTR [ebx-0x80]
  420f73:	test   DWORD PTR [eax],0x72afcbb6
  420f79:	push   eax
  420f7a:	push   edx
  420f7b:	cmp    BYTE PTR [ebp+0x2a],0x6a
  420f7f:	inc    edx
  420f80:	sbb    bl,bl
  420f82:	mov    dl,0x2a
  420f84:	retf   0xdeba
  420f87:	pop    edx
  420f88:	sahf   
  420f89:	and    BYTE PTR [edx+edi*4+0x6189bb08],dl
  420f90:	test   BYTE PTR [edi],ch
  420f92:	push   ecx
  420f93:	xor    esi,DWORD PTR [eax-0x54]
  420f96:	arpl   cx,cx
  420f98:	or     DWORD PTR [ecx+0x5b],edx
  420f9b:	adc    esi,DWORD PTR [eax]
  420f9d:	scas   al,BYTE PTR es:[edi]
  420f9e:	hlt    
  420f9f:	test   al,0xbd
  420fa1:	push   0xffffffde
  420fa3:	int    0xa8
  420fa5:	cdq    
  420fa6:	rol    BYTE PTR ds:0x2526880c,0x4e
  420fad:	or     esi,DWORD PTR [edx-0x22]
  420fb0:	mov    eax,ds:0xe434299d
  420fb5:	xor    edi,DWORD PTR [edi-0x57]
  420fb8:	push   ecx
  420fb9:	push   cs
  420fba:	push   0x3354bd06
  420fbf:	and    edi,ecx
  420fc1:	jge    0x420f69
  420fc3:	inc    ecx
  420fc4:	xchg   ecx,eax
  420fc5:	mov    ch,dh
  420fc7:	pop    edi
  420fc8:	lea    ecx,[eax-0x31]
  420fcb:	sbb    BYTE PTR [eax+0x595389e5],ch
  420fd1:	add    edi,DWORD PTR [ebp+0x2a]
  420fd4:	xor    eax,0x76614067
  420fd9:	xor    al,0x27
  420fdb:	fptan  
  420fdd:	inc    ebp
  420fde:	sar    ebp,0x97
  420fe1:	fcomi  st,st(2)
  420fe3:	jns    0x420f6a
  420fe5:	push   edx
  420fe6:	repz push ecx
  420fe8:	cvtps2pi mm1,QWORD PTR [esi+0x742ed279]
  420fef:	ret    0xca44
  420ff2:	jns    0x421035
  420ff4:	sub    ch,BYTE PTR [ecx-0x65e4b7db]
  420ffa:	or     al,0xa0
  420ffc:	loopne 0x421024
  420ffe:	je     0x420ff0
  421000:	push   0xf5b66393
  421005:	addr16 call 0xff2cbeab
  42100b:	push   0x430c8e78
  421010:	iret   
  421011:	sahf   
  421012:	addr16 jmp 0x421028
  421015:	push   0x51
  421017:	push   ss
  421018:	sbb    al,0xed
  42101a:	outs   dx,BYTE PTR ds:[esi]
  42101b:	adc    eax,0xe674d82d
  421020:	mov    ah,0x19
  421022:	sub    BYTE PTR [edx-0x3ece6bbb],dh
  421028:	lahf   
  421029:	aam    0x88
  42102b:	push   cs
  42102c:	sub    edx,DWORD PTR [ebx+0x3d]
  42102f:	stc    
  421030:	cs pusha 
  421032:	xor    DWORD PTR [edx+0x3d],esi
  421035:	sbb    BYTE PTR [edi-0x11],al
  421038:	xchg   ecx,eax
  421039:	jl     0x421068
  42103b:	js     0x421030
  42103d:	jmp    0x77a3:0x36cc9dca
  421044:	xchg   ecx,eax
  421045:	mov    ?,ecx
  421047:	jno    0x421036
  421049:	loopne 0x420ffc
  42104b:	into   
  42104c:	mov    DWORD PTR [ebx],ecx
  42104e:	inc    edi
  42104f:	fidivr DWORD PTR [eax]
  421051:	pop    ecx
  421052:	or     cl,BYTE PTR [ecx+0x59920038]
  421058:	fldcw  WORD PTR [ebp-0x27ac4fe8]
  42105e:	pusha  
  42105f:	jae    0x42109d
  421061:	dec    edx
  421062:	pop    esi
  421063:	pushf  
  421064:	xor    esi,DWORD PTR [eax]
  421066:	(bad)  
  421067:	sub    al,0xf6
  421069:	xchg   ebp,eax
  42106a:	cmp    eax,0x11a23ac4
  42106f:	mov    bh,0x7f
  421071:	cmp    ah,BYTE PTR [edi+0x4b]
  421074:	dec    esp
  421075:	(bad)  
  421076:	rcr    DWORD PTR [edx-0x58],0x8f
  42107a:	push   0xffffffab
  42107c:	dec    esi
  42107d:	or     edi,DWORD PTR [ebp+eax*1-0xb]
  421081:	fidivr DWORD PTR [esi-0x6e275759]
  421087:	mul    DWORD PTR [ebp-0x64]
  42108a:	mov    esp,0x1963d9c5
  42108f:	fistp  QWORD PTR [ebx-0x7c03de6f]
  421095:	and    BYTE PTR [ebx],al
  421097:	xchg   edi,eax
  421098:	inc    edi
  421099:	daa    
  42109a:	mov    edi,0x4de24bc5
  42109f:	outs   dx,DWORD PTR ds:[esi]
  4210a0:	cmp    DWORD PTR [esi-0x2bdd1011],ebp
  4210a6:	dec    edx
  4210a7:	repnz icebp 
  4210a9:	dec    ebp
  4210aa:	js     0x42110b
  4210ac:	push   eax
  4210ad:	ror    BYTE PTR [esi-0x62bc365],cl
  4210b3:	fist   DWORD PTR [ebp+ebp*1-0x5d]
  4210b7:	jmp    0x1cea:0x3968f524
  4210be:	xlat   BYTE PTR ds:[ebx]
  4210bf:	adc    edi,edi
  4210c1:	adc    BYTE PTR [ebp-0x7f],0x65
  4210c5:	add    dl,ch
  4210c7:	mov    ds:0xdc413aed,al
  4210cc:	fsubr  DWORD PTR [edx+eax*8]
  4210cf:	fbld   TBYTE PTR [ecx-0x2]
  4210d2:	push   ss
  4210d3:	push   ebx
  4210d4:	mov    ah,BYTE PTR [edi-0x2f]
  4210d7:	sub    cl,BYTE PTR [edi-0x77f885c6]
  4210dd:	repnz repz mov ss,WORD PTR [esi]
  4210e1:	mov    BYTE PTR [esi+0xe3ced27],dl
  4210e7:	aam    0xbc
  4210e9:	fnstsw WORD PTR [ecx]
  4210eb:	shl    BYTE PTR [ecx],1
  4210ed:	mov    bl,0x60
  4210ef:	jo     0x4210bc
  4210f1:	bound  esp,QWORD PTR [si-0x6a]
  4210f5:	fisttp WORD PTR [edi-0x1e948e69]
  4210fb:	jp     0x421175
  4210fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210fe:	aas    
  4210ff:	test   eax,0x7ab396c8
  421104:	xchg   edi,eax
  421105:	jne    0x42110a
  421107:	je     0x42109a
  421109:	mov    bl,BYTE PTR [esi-0x62425acb]
  42110f:	dec    esp
  421110:	adc    bl,dh
  421112:	mov    ecx,0x9e50f012
  421117:	mov    ds:0x5d05b8d9,al
  42111c:	mov    edx,0x11897ce4
  421121:	add    bl,BYTE PTR [edi]
  421123:	leave  
  421124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421125:	or     al,0xba
  421127:	push   0xffffffd6
  421129:	inc    ecx
  42112a:	sbb    ch,0x30
  42112d:	push   edi
  42112e:	addr16 push ebp
  421130:	scas   al,BYTE PTR es:[edi]
  421131:	fdiv   QWORD PTR [edx+0x3cd3dfc1]
  421137:	jne    0x42115d
  421139:	pusha  
  42113a:	jl     0x4210ce
  42113c:	mov    esp,edi
  42113e:	inc    edx
  42113f:	mov    ds:0x10eef92,al
  421144:	loope  0x4210e1
  421146:	pop    eax
  421147:	sti    
  421148:	mov    DWORD PTR [ebx+ebp*4-0x2d48d925],edx
  42114f:	icebp  
  421150:	loopne 0x421169
  421152:	and    eax,0x1f0e812e
  421157:	mov    esi,0xce0d845c
  42115c:	cmp    DWORD PTR [edx-0x2013e357],ebx
  421162:	mov    eax,ds:0xf6ecfc56
  421167:	adc    dh,BYTE PTR [eax]
  421169:	mov    ds,esi
  42116b:	cmp    ah,al
  42116d:	push   ecx
  42116e:	loop   0x421182
  421170:	push   es
  421171:	fsubr  DWORD PTR [edi]
  421173:	dec    ebx
  421174:	outs   dx,DWORD PTR ds:[esi]
  421175:	test   eax,0x5ba2f6bb
  42117a:	mov    bl,bh
  42117c:	xlat   BYTE PTR ds:[ebx]
  42117d:	jge    0x4211aa
  42117f:	div    BYTE PTR [bx+0x632e]
  421184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421185:	push   esi
  421186:	addr16 (bad) 
  421188:	mov    eax,ss:0x9b028fbe
  42118e:	test   al,0x99
  421190:	and    bh,al
  421192:	dec    esp
  421193:	stos   BYTE PTR es:[edi],al
  421194:	test   BYTE PTR [ebp-0x341f5696],ch
  42119a:	les    edi,FWORD PTR [esi]
  42119c:	adc    esi,DWORD PTR ds:0xc1bbce2
  4211a2:	adc    BYTE PTR [ebp-0x16374926],dl
  4211a8:	inc    ebp
  4211a9:	sbb    dh,bl
  4211ab:	test   eax,0x9aeb988e
  4211b0:	cdq    
  4211b1:	rol    dh,0x8a
  4211b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211b5:	pop    es
  4211b6:	dec    eax
  4211b7:	xchg   BYTE PTR [esi+0x43ac8068],cl
  4211bd:	push   edx
  4211be:	in     al,0xe0
  4211c0:	test   BYTE PTR [eax-0xe],cl
  4211c3:	gs popa 
  4211c5:	(bad)  
  4211c6:	stos   BYTE PTR es:[edi],al
  4211c7:	sbb    al,0x2d
  4211c9:	(bad)  
  4211cb:	sar    DWORD PTR [ebx+edi*2-0x14],cl
  4211cf:	rcl    DWORD PTR [eax+0x6a8c7332],cl
  4211d5:	call   0xa219:0x3283dac5
  4211dc:	cmc    
  4211dd:	mov    DWORD PTR [eax-0x4f],ebp
  4211e0:	lock mov cl,0x48
  4211e3:	aaa    
  4211e4:	jbe    0x421227
  4211e6:	xchg   edi,eax
  4211e7:	(bad)  
  4211e8:	outs   dx,DWORD PTR ds:[esi]
  4211e9:	out    0x7e,eax
  4211eb:	and    BYTE PTR [ecx+ebp*2+0x1c],0xa0
  4211f0:	inc    eax
  4211f1:	push   esp
  4211f2:	leave  
  4211f3:	dec    ebx
  4211f4:	mov    edi,ebx
  4211f6:	leave  
  4211f7:	outs   dx,BYTE PTR ds:[esi]
  4211f8:	jge    0x421267
  4211fa:	jl     0x421191
  4211fc:	(bad)  
  4211fd:	fistp  QWORD PTR [eax]
  4211ff:	sub    bl,BYTE PTR [esi-0x3e]
  421202:	ds retf 0xee8d
  421206:	xor    bl,BYTE PTR [edi+0x56b48aa4]
  42120c:	mov    BYTE PTR [eax],ch
  42120e:	fisub  WORD PTR ds:0xd4bc70ea
  421214:	pop    esi
  421215:	pop    edi
  421216:	push   eax
  421217:	das    
  421218:	mov    ds:0xcdd61309,eax
  42121d:	neg    BYTE PTR [ebp+0x6c0a7782]
  421223:	mov    DWORD PTR [edx*8+0x6cd9ce98],edx
  42122a:	fwait
  42122b:	jne    0x42128a
  42122d:	mov    ecx,0xf723cb45
  421232:	sahf   
  421233:	fsubr  QWORD PTR [ecx+eax*8-0x25]
  421237:	mov    al,BYTE PTR [esi]
  421239:	dec    edi
  42123a:	fisttp DWORD PTR gs:[eax+0x564d1e14]
  421241:	test   eax,0x4d56de3a
  421246:	popf   
  421247:	adc    eax,0xc9d61737
  42124c:	xor    DWORD PTR [edi],ebp
  42124e:	xor    dl,BYTE PTR [esi-0x6f8f0ac6]
  421254:	int3   
  421255:	dec    esp
  421256:	add    esi,esp
  421258:	or     DWORD PTR [ebx-0x45],edx
  42125b:	mov    ds:0x5be123cd,eax
  421260:	or     eax,0xad2a178
  421265:	pop    edi
  421266:	mov    ds:0x4e3a22e4,al
  42126b:	mov    al,ds:0x3310699d
  421270:	mov    dl,BYTE PTR [esi-0x74bc11ae]
  421276:	or     cl,BYTE PTR [edi+eiz*1]
  421279:	into   
  42127a:	and    al,0x1d
  42127c:	cmp    bh,BYTE PTR [edx+edi*1-0x2d236ae9]
  421283:	or     al,0x95
  421285:	sbb    al,0x84
  421287:	and    edi,esp
  421289:	cmp    BYTE PTR [edx+ecx*8],bl
  42128c:	xchg   esp,eax
  42128d:	mov    edx,0x40ca036d
  421292:	fild   QWORD PTR [ebx+0x4c]
  421295:	jno    0x4212e4
  421297:	lahf   
  421298:	call   0x67b05e44
  42129d:	xor    DWORD PTR [edx],edx
  42129f:	mov    bl,0xdf
  4212a1:	sbb    ch,bl
  4212a3:	ret    
  4212a4:	push   edi
  4212a5:	add    esi,eax
  4212a7:	popa   
  4212a8:	inc    ebx
  4212a9:	dec    ebp
  4212aa:	add    eax,esi
  4212ac:	jp     0x4212dd
  4212ae:	out    0x43,al
  4212b0:	hlt    
  4212b1:	ss xchg ecx,eax
  4212b3:	cmp    edi,DWORD PTR [ebx]
  4212b5:	cmp    bl,ch
  4212b7:	xor    eax,edx
  4212b9:	push   edx
  4212ba:	test   eax,0x40f241bb
  4212bf:	xchg   edi,eax
  4212c0:	(bad)  
  4212c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212c3:	mov    dh,0x5e
  4212c5:	push   ds
  4212c6:	cmp    ebp,DWORD PTR [esi]
  4212c8:	jae    0x42129b
  4212ca:	mov    BYTE PTR [edx-0x55],bh
  4212cd:	test   DWORD PTR ds:0x520324fb,ebp
  4212d3:	test   BYTE PTR [eax+0x54aaf433],bl
  4212d9:	push   esp
  4212da:	push   cs
  4212db:	pop    eax
  4212dc:	adc    bh,al
  4212de:	leave  
  4212df:	push   edi
  4212e0:	mov    al,ds:0x20febce4
  4212e5:	test   DWORD PTR [edi],eax
  4212e7:	cli    
  4212e8:	out    0x54,eax
  4212ea:	nop
  4212eb:	outs   dx,DWORD PTR ds:[esi]
  4212ec:	(bad)  
  4212ed:	cmp    eax,0x4483c68
  4212f2:	jne    0x4212f9
  4212f4:	mov    ebp,DWORD PTR [ebx-0x336161d7]
  4212fa:	dec    esp
  4212fb:	lods   eax,DWORD PTR ds:[esi]
  4212fc:	pop    esi
  4212fd:	xor    bl,ch
  4212ff:	fstp   st(3)
  421301:	pushf  
  421302:	stos   BYTE PTR es:[edi],al
  421303:	sub    DWORD PTR [ebx+0x29f37a56],ebx
  421309:	mov    al,0xe8
  42130b:	imul   ebp,DWORD PTR [ecx],0xffffffbc
  42130e:	lds    esp,FWORD PTR [ebx]
  421310:	and    eax,DWORD PTR [ebx-0x37]
  421313:	fstp   DWORD PTR [ebx]
  421315:	mov    al,0x78
  421317:	jge    0x4212b3
  421319:	jg     0x42138c
  42131b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42131c:	jo     0x42139b
  42131e:	push   edi
  42131f:	ins    BYTE PTR es:[edi],dx
  421320:	stc    
  421321:	xor    BYTE PTR [edx],al
  421323:	or     esi,DWORD PTR [edi-0x2d]
  421326:	in     eax,0xc1
  421328:	in     al,0xd
  42132a:	es xchg ecx,eax
  42132c:	xor    bl,BYTE PTR [edi-0x794594c5]
  421332:	ins    BYTE PTR es:[edi],dx
  421333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421334:	adc    DWORD PTR [ebx-0x56],ebp
  421337:	lahf   
  421338:	xor    ah,BYTE PTR [edx]
  42133a:	jmp    0xb61a:0xe39c0d3c
  421341:	lods   al,BYTE PTR ds:[esi]
  421342:	add    ebp,DWORD PTR [ecx]
  421344:	mov    ah,0xa7
  421346:	test   DWORD PTR [ebx-0x282af10f],edi
  42134c:	mov    ah,0xf
  42134e:	ja     0x4213ae
  421350:	and    eax,0x1c6f6fb3
  421355:	jle    0x421317
  421357:	push   cs
  421358:	pop    edi
  421359:	sub    al,0x11
  42135b:	test   BYTE PTR [edx],dh
  42135d:	ins    DWORD PTR es:[edi],dx
  42135e:	mov    ah,0xc6
  421360:	adc    BYTE PTR [esi],bl
  421362:	mov    ds:0xa1455553,al
  421367:	dec    edi
  421368:	pop    ss
  421369:	mov    al,0xf2
  42136b:	mov    ebp,0x92e129af
  421370:	fdivr  DWORD PTR [esi+0xe3e4ed]
  421376:	add    edi,DWORD PTR [edi]
  421378:	fbld   TBYTE PTR [ecx]
  42137a:	push   edi
  42137b:	push   esp
  42137c:	add    esi,ecx
  42137e:	adc    BYTE PTR [ebx],al
  421380:	jmp    0xf0c9f4c5
  421385:	add    eax,0x18975d6d
  42138a:	adc    ebp,esp
  42138c:	daa    
  42138d:	je     0xdcd4c138
  421393:	inc    ebp
  421394:	enter  0xf599,0x54
  421398:	fcom   DWORD PTR [esi+0x79]
  42139b:	xor    cl,BYTE PTR [esi]
  42139d:	cmp    ebp,DWORD PTR [ecx+0x36]
  4213a0:	scas   al,BYTE PTR es:[edi]
  4213a1:	mov    al,0xcf
  4213a3:	sub    DWORD PTR [edi],0xdd82dc5c
  4213a9:	lahf   
  4213aa:	cmc    
  4213ab:	sahf   
  4213ac:	in     eax,dx
  4213ad:	iret   
  4213ae:	jbe    0x4213ed
  4213b0:	cwde   
  4213b1:	or     ebp,esi
  4213b3:	gs push esi
  4213b5:	or     DWORD PTR [ecx],ebp
  4213b7:	out    dx,al
  4213b8:	inc    ebp
  4213b9:	addr16 mov ds:0x94ed,al
  4213bd:	mov    edx,0x219355f0
  4213c2:	retf   0x19d8
  4213c5:	cmp    esp,0xffffff81
  4213c8:	stos   BYTE PTR es:[edi],al
  4213c9:	das    
  4213ca:	(bad)  
  4213cb:	mov    ecx,edi
  4213cd:	test   al,0x40
  4213cf:	xor    DWORD PTR ds:0xc92d38a9,eax
  4213d5:	aad    0x74
  4213d7:	sahf   
  4213d8:	out    dx,eax
  4213d9:	xchg   ebx,eax
  4213da:	cmp    esi,DWORD PTR [edx]
  4213dc:	sahf   
  4213dd:	(bad)  
  4213de:	test   DWORD PTR [edx+edi*1+0x3a722545],0x6bbec84a
  4213e9:	(bad)  
  4213ea:	or     edx,DWORD PTR [esi-0x6c]
  4213ed:	mov    fs,WORD PTR [edi-0x5e]
  4213f0:	cmp    ecx,DWORD PTR [edi+0x2102bcbb]
  4213f6:	or     BYTE PTR [ecx+eiz*1],dh
  4213f9:	popa   
  4213fa:	dec    ebp
  4213fb:	(bad)  
  4213fc:	xchg   ecx,eax
  4213fd:	retf   0x7e82
  421400:	stc    
  421401:	jge    0x4213d0
  421403:	shl    BYTE PTR [esp+esi*4],0xfe
  421407:	mov    ch,0x62
  421409:	rol    DWORD PTR [eax+edi*1],0x2c
  42140d:	mov    ?,WORD PTR [eax]
  42140f:	test   BYTE PTR [edx],dh
  421411:	push   0x12
  421413:	adc    bh,BYTE PTR [eax+0xea5f278]
  421419:	jle    0x4213e7
  42141b:	add    al,0xe3
  42141d:	pusha  
  42141e:	stos   BYTE PTR es:[edi],al
  42141f:	sub    DWORD PTR [esi+0x664def27],ecx
  421425:	pushf  
  421426:	sar    DWORD PTR [edx+0x522a1ded],cl
  42142c:	out    dx,eax
  42142d:	cmp    dl,BYTE PTR [edx+0x76]
  421430:	adc    al,0xf4
  421432:	jns    0x42149b
  421434:	shl    edx,1
  421436:	jno    0x4213bb
  421438:	js     0x421448
  42143a:	mov    BYTE PTR [esp+ecx*8],cl
  42143d:	cdq    
  42143e:	pop    edx
  42143f:	repnz pop eax
  421441:	sbb    BYTE PTR [ebx],ch
  421443:	add    BYTE PTR [esi],cl
  421445:	mov    edi,0x39b9eb29
  42144a:	scas   al,BYTE PTR es:[edi]
  42144b:	mov    DWORD PTR [ebx],ebx
  42144d:	and    ebx,DWORD PTR [ebx-0x362fb92a]
  421453:	es xchg edx,eax
  421455:	cdq    
  421456:	outs   dx,DWORD PTR ds:[esi]
  421457:	(bad)  
  421458:	into   
  421459:	pushf  
  42145a:	push   es
  42145b:	shl    BYTE PTR [ebx],1
  42145d:	aad    0xee
  42145f:	xor    DWORD PTR [ecx],esi
  421461:	in     al,dx
  421462:	add    esp,esp
  421464:	xor    ch,BYTE PTR [edx]
  421466:	std    
  421467:	jp     0x4214a2
  421469:	retf   
  42146a:	mov    eax,DWORD PTR [ebx]
  42146c:	sbb    al,0xaf
  42146e:	xlat   BYTE PTR ds:[ebx]
  42146f:	jl     0x4213f3
  421471:	std    
  421472:	dec    edx
  421473:	push   es
  421474:	pop    esi
  421475:	test   DWORD PTR [eax],ebp
  421477:	jl     0x421442
  421479:	sub    eax,0x406500ca
  42147e:	stos   DWORD PTR es:[edi],eax
  42147f:	push   cs
  421480:	mov    ebx,0xae057088
  421485:	push   ebp
  421486:	jns    0x42149f
  421488:	call   0x8ac2:0x1348749b
  42148f:	seto   BYTE PTR [edx-0x7e]
  421493:	fisttp QWORD PTR [ebp+0x4b]
  421496:	cmp    bh,bh
  421498:	test   al,0xde
  42149a:	gs mov esi,0x7279ebfc
  4214a0:	jbe    0x421494
  4214a2:	xchg   esp,eax
  4214a3:	pop    eax
  4214a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a5:	mov    ch,0xf2
  4214a7:	repz inc esi
  4214a9:	and    dh,BYTE PTR [edx-0xaf5a9d]
  4214af:	fadd   st(3),st
  4214b1:	out    dx,al
  4214b2:	cli    
  4214b3:	retf   0xf670
  4214b6:	cmp    dl,BYTE PTR [eax]
  4214b8:	mov    esi,0xa052c486
  4214bd:	in     al,dx
  4214be:	into   
  4214bf:	pop    ss
  4214c0:	push   eax
  4214c1:	cmp    DWORD PTR [ebx*2+0x29a30bcf],ebx
  4214c8:	(bad)  
  4214c9:	(bad)  
  4214ca:	xchg   ebx,eax
  4214cb:	mov    edx,0x8e97d561
  4214d0:	cmp    BYTE PTR [edi],0xd0
  4214d3:	icebp  
  4214d4:	fist   DWORD PTR [ebx]
  4214d6:	pop    ds
  4214d7:	inc    ebp
  4214d8:	pop    ds
  4214d9:	fisubr DWORD PTR [edx-0x6a7e0c7]
  4214df:	lock out dx,eax
  4214e1:	out    dx,al
  4214e2:	out    dx,eax
  4214e3:	sti    
  4214e4:	aas    
  4214e5:	and    al,0x7
  4214e7:	mov    BYTE PTR ds:0x598be78c,bl
  4214ed:	push   esi
  4214ee:	jp     0x421562
  4214f0:	cmc    
  4214f1:	sti    
  4214f2:	in     al,0xfd
  4214f4:	popa   
  4214f5:	ret    0xed2d
  4214f8:	(bad)  
  4214f9:	and    al,0xf0
  4214fb:	mov    DWORD PTR [ecx-0x760b8166],ebp
  421501:	test   eax,0xa504fb47
  421506:	prefetch BYTE PTR [ebp+0x7880e98b]
  42150d:	pop    eax
  42150f:	aaa    
  421510:	out    dx,eax
  421511:	scas   al,BYTE PTR es:[edi]
  421512:	pop    ds
  421513:	shl    BYTE PTR [esi+0x6c],0x56
  421517:	test   al,0x3f
  421519:	iret   
  42151a:	aam    0xe6
  42151c:	dec    BYTE PTR ds:[eax]
  42151f:	or     BYTE PTR [edx-0x9],al
  421522:	ret    0x1172
  421525:	or     eax,0x4d083164
  42152a:	rcr    DWORD PTR [esi+eax*8+0x49],1
  42152e:	sti    
  42152f:	lahf   
  421530:	(bad)  
  421531:	imul   edi,DWORD PTR [ebx],0x38
  421534:	mov    al,ds:0x791ae197
  421539:	imul   ecx,eax,0x45
  42153c:	jmp    0xe1398186
  421541:	in     eax,dx
  421542:	pop    ebp
  421543:	out    0x5,eax
  421545:	aas    
  421546:	xor    ah,BYTE PTR [esi-0x70]
  421549:	call   0x4684c2d2
  42154e:	dec    edi
  42154f:	or     eax,0x7e0cf19e
  421554:	int    0xc3
  421556:	scas   eax,DWORD PTR es:[edi]
  421557:	les    ebp,FWORD PTR [ebp-0x38]
  42155a:	daa    
  42155b:	(bad)  
  42155c:	gs push cs
  42155e:	daa    
  42155f:	add    al,BYTE PTR [esi+0x188c4569]
  421565:	cmp    BYTE PTR [ebx+0x5a],ah
  421568:	(bad)  
  421569:	push   edi
  42156a:	jnp    0x42158d
  42156c:	jb     0x4215c1
  42156e:	pusha  
  42156f:	adc    al,0xdb
  421571:	inc    ecx
  421572:	xor    eax,0x89bf6a04
  421577:	sub    ah,BYTE PTR [esi-0x7eee4b8e]
  42157d:	xchg   edi,eax
  42157e:	fld    DWORD PTR es:[eax+0x2791416f]
  421585:	loopne 0x4215e6
  421587:	dec    ebx
  421588:	mov    WORD PTR [ecx+0x8],?
  42158b:	lock dec ecx
  42158d:	(bad)  
  42158e:	lds    ebp,FWORD PTR [esi-0x450bbea6]
  421594:	call   0x22c8:0xa15daaad
  42159b:	inc    eax
  42159c:	pop    ecx
  42159d:	mov    dh,0xae
  42159f:	sbb    BYTE PTR [esi],dl
  4215a1:	pop    ebp
  4215a2:	sub    eax,0xc33fd955
  4215a7:	sub    ebx,ecx
  4215a9:	pop    ecx
  4215aa:	mov    eax,ds:0xaf7b5114
  4215af:	jecxz  0x4215cf
  4215b1:	jbe    0x4215ae
  4215b3:	rcl    BYTE PTR [edx],cl
  4215b5:	rcr    edi,1
  4215b7:	pop    ds
  4215b8:	jae    0x421625
  4215ba:	(bad)  
  4215bb:	lods   eax,DWORD PTR ds:[esi]
  4215bc:	xor    al,0xc3
  4215be:	inc    eax
  4215bf:	or     bl,BYTE PTR [edi-0x6e]
  4215c2:	dec    edi
  4215c3:	push   ebp
  4215c4:	push   DWORD PTR [edi-0x11a4a1bb]
  4215ca:	ds jnp 0x421614
  4215cd:	jne    0x42164c
  4215cf:	xlat   BYTE PTR ds:[ebx]
  4215d0:	arpl   WORD PTR [esi-0x7],sp
  4215d3:	pop    esp
  4215d4:	cld    
  4215d5:	xchg   ebp,eax
  4215d6:	cmp    ebx,DWORD PTR [ecx-0x6c51efc7]
  4215dc:	ret    0x434b
  4215df:	mov    edx,0xf87e8637
  4215e4:	(bad)  
  4215e5:	call   0xd3b61001
  4215ea:	out    0x9c,eax
  4215ec:	jge    0x421631
  4215ee:	mov    edx,0x4464ae46
  4215f3:	push   edi
  4215f4:	and    eax,0xabadf259
  4215f9:	xor    esi,DWORD PTR [edi+0x1ad39a4d]
  4215ff:	fild   DWORD PTR [edi+0x32d1c7f1]
  421605:	sub    DWORD PTR [edx-0x4d09a10e],ecx
  42160b:	sbb    eax,0xb71ab7fa
  421610:	imul   ebx,DWORD PTR [edi],0xffffffb0
  421613:	daa    
  421614:	cmp    ebx,DWORD PTR [esi+0x26776a57]
  42161a:	repnz shl ebp,1
  42161d:	imul   ebx,DWORD PTR [eax],0x5e0116a8
  421623:	test   al,0xbb
  421625:	pop    ebx
  421626:	or     al,0x72
  421628:	push   0x38f87668
  42162d:	clc    
  42162e:	sub    BYTE PTR [ebx-0x4422da0b],bl
  421634:	mov    ebx,0x6e6a2ff7
  421639:	adc    ch,BYTE PTR [esi+0x2a]
  42163c:	pop    ss
  42163d:	ja     0x4216bc
  42163f:	ret    0xc11a
  421642:	jge    0x421627
  421644:	das    
  421645:	daa    
  421646:	fsub   QWORD PTR [esi]
  421648:	add    eax,0x3d5a79d1
  42164d:	add    DWORD PTR [edi-0x492dc294],edi
  421653:	inc    eax
  421654:	shl    DWORD PTR [edx],1
  421656:	mov    dl,0x5a
  421658:	scas   eax,DWORD PTR es:[edi]
  421659:	jnp    0x4216c4
  42165b:	inc    edx
  42165c:	cs add al,0xfd
  42165f:	adc    DWORD PTR [edx],edi
  421661:	imul   ecx,DWORD PTR [eax+ecx*8],0xffffff92
  421665:	aam    0x0
  421667:	adc    DWORD PTR cs:[esi+0x13940bb0],edi
  42166e:	xchg   ebp,eax
  42166f:	icebp  
  421670:	jmp    0x81b4:0x66a41f81
  421677:	add    al,0x57
  421679:	cmp    ch,bh
  42167b:	adc    BYTE PTR [eax+ebx*1+0x45c98d7f],0xa7
  421683:	ror    BYTE PTR [ebp-0x64],0x58
  421687:	xchg   ecx,eax
  421688:	rcl    DWORD PTR [eax-0x5f],cl
  42168b:	sub    al,0xb0
  42168d:	je     0x4216c0
  42168f:	xchg   esi,eax
  421690:	fmul   st,st(6)
  421692:	cs mov edx,0xd3710e8f
  421698:	pop    ebx
  421699:	das    
  42169a:	nop
  42169b:	xchg   DWORD PTR fs:[esi],ecx
  42169e:	aaa    
  42169f:	pop    eax
  4216a0:	push   esp
  4216a1:	cdq    
  4216a2:	(bad)  
  4216a3:	lods   al,BYTE PTR ds:[esi]
  4216a4:	cmp    eax,0xe402a17f
  4216a9:	mov    gs,WORD PTR [edx-0x66276889]
  4216af:	pop    ecx
  4216b0:	mov    bl,0xfb
  4216b2:	inc    ebp
  4216b3:	jl     0x4216aa
  4216b5:	out    dx,al
  4216b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216b7:	xchg   edx,eax
  4216b8:	test   BYTE PTR cs:[edi],al
  4216bb:	icebp  
  4216bc:	test   eax,0x2459999b
  4216c1:	(bad)  
  4216c2:	loopne 0x4216ee
  4216c4:	adc    al,0x34
  4216c6:	in     eax,0x72
  4216c8:	xlat   BYTE PTR ds:[ebx]
  4216c9:	cld    
  4216ca:	jne    0x421733
  4216cc:	mov    BYTE PTR [ebx+0x727fcb5f],ch
  4216d2:	sub    ch,0xc9
  4216d5:	not    ch
  4216d7:	cwde   
  4216d8:	xchg   BYTE PTR [edx+ebx*2-0x13e38585],ah
  4216df:	fnsave [edx+0x704cb044]
  4216e5:	popf   
  4216e6:	lock push esi
  4216e8:	and    DWORD PTR [esp+edi*1-0x56],ecx
  4216ec:	mov    edx,0x4e3ef82d
  4216f1:	pop    edx
  4216f2:	out    dx,eax
  4216f3:	icebp  
  4216f4:	mov    eax,0xd64b2a41
  4216f9:	pop    ebp
  4216fa:	jl     0x42176f
  4216fc:	or     al,0x1
  4216fe:	les    ebx,FWORD PTR [ebx+0x23]
  421701:	xlat   BYTE PTR ds:[ebx]
  421702:	xor    ecx,edx
  421704:	aaa    
  421705:	and    dh,ch
  421707:	mov    ds:0x6c0e976f,eax
  42170c:	in     al,dx
  42170d:	mov    ebx,0x93a84d9b
  421712:	mov    dh,0xb2
  421714:	sbb    DWORD PTR [ecx],esi
  421716:	jae    0x4216f7
  421718:	xor    edi,DWORD PTR [ecx+0x29245530]
  42171e:	int3   
  42171f:	mov    ecx,DWORD PTR ss:[eax-0x10]
  421723:	imul   edx,DWORD PTR [edi],0xffffffc9
  421726:	xor    edx,edi
  421728:	mov    dl,0xb
  42172a:	xchg   BYTE PTR [edx-0x17],cl
  42172d:	pop    esp
  42172e:	mov    eax,ds:0x240721c9
  421733:	in     al,0x54
  421735:	cmp    bh,BYTE PTR [ebp+0x2]
  421738:	mov    ebp,0x30ecf12c
  42173d:	or     BYTE PTR [eax-0x2e],cl
  421740:	test   al,0xed
  421742:	jne    0x421753
  421744:	retf   
  421745:	stc    
  421746:	int3   
  421747:	add    eax,DWORD PTR [edi-0x42135a16]
  42174d:	xor    ebx,DWORD PTR [ecx+0x637a944e]
  421753:	jge    0x4216dc
  421755:	add    BYTE PTR [esi+ecx*4-0x36],0xcc
  42175a:	shr    DWORD PTR [esp+ecx*2-0x64],0xe7
  42175f:	inc    eax
  421760:	xchg   esi,eax
  421761:	jl     0x421779
  421763:	lods   eax,DWORD PTR ds:[esi]
  421764:	loope  0x421756
  421766:	mov    al,ds:0x643d0796
  42176b:	in     al,0xcf
  42176d:	push   edi
  42176e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42176f:	and    eax,0xf316cd66
  421774:	jl     0x421736
  421776:	inc    edx
  421777:	stos   BYTE PTR es:[edi],al
  421778:	cld    
  421779:	inc    edx
  42177a:	jb     0x4217f8
  42177c:	xor    al,0x52
  42177e:	arpl   WORD PTR [ebp-0x76f5b2b6],bx
  421784:	fs loop 0x4217b9
  421787:	je     0x42173b
  421789:	int3   
  42178a:	pushw  ss
  42178c:	or     edi,edx
  42178e:	imul   eax,ecx,0x9c4b39f2
  421794:	inc    edx
  421795:	les    edi,FWORD PTR [ebp-0x14]
  421798:	jo     0x4217e5
  42179a:	lods   al,BYTE PTR ds:[esi]
  42179b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42179c:	or     al,al
  42179e:	inc    ecx
  42179f:	and    eax,0xcf4d4093
  4217a4:	jae    0x4217a5
  4217a6:	ins    BYTE PTR es:[edi],dx
  4217a7:	mov    ch,0x56
  4217a9:	ret    
  4217aa:	mov    al,0x6f
  4217ac:	and    al,0x22
  4217ae:	dec    ebp
  4217af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217b0:	cdq    
  4217b1:	jmp    0x9a56:0x4871304b
  4217b8:	sbb    ecx,DWORD PTR [edx]
  4217ba:	mov    gs,WORD PTR [ebx]
  4217bc:	outs   dx,DWORD PTR ds:[esi]
  4217bd:	out    dx,eax
  4217be:	aas    
  4217bf:	sub    edx,DWORD PTR [ebp+0x3f3ab1c1]
  4217c5:	fdivr  st,st(6)
  4217c7:	jge    0x421805
  4217c9:	leave  
  4217ca:	sub    eax,DWORD PTR [ebp-0x20]
  4217cd:	add    eax,0xa1295467
  4217d2:	imul   ebp,DWORD PTR [edi-0x4f097ae1],0xffffff8d
  4217d9:	mov    ds:0x85466986,al
  4217de:	xor    BYTE PTR [edi+ebp*2],ch
  4217e1:	loop   0x4217fa
  4217e3:	sbb    ecx,DWORD PTR [eax]
  4217e5:	cmp    edx,edi
  4217e7:	pushf  
  4217e8:	fs mov bh,0xb2
  4217eb:	pop    edx
  4217ec:	xchg   ebx,eax
  4217ed:	ret    0x1799
  4217f0:	or     DWORD PTR [eax+0x3d],0xffffffc9
  4217f4:	fwait
  4217f5:	aas    
  4217f6:	fistp  DWORD PTR [edx]
  4217f8:	add    BYTE PTR [ebp-0x4c],bh
  4217fb:	pop    ebp
  4217fc:	xchg   edi,eax
  4217fd:	adc    cl,BYTE PTR [ebx-0x5d]
  421800:	stc    
  421801:	aaa    
  421802:	xor    edi,edx
  421804:	mov    esi,0x4c52453f
  421809:	lock adc ah,BYTE PTR [ebx-0x1e211e8b]
  421810:	mov    dh,0x9b
  421812:	js     0x42187f
  421814:	jno    0x4217b2
  421816:	mov    ch,0x64
  421818:	jmp    0x48a6:0x17803710
  42181f:	ss pop edi
  421821:	cmp    ah,BYTE PTR [eax-0x3c1e4166]
  421827:	xor    al,0xee
  421829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42182a:	cmp    DWORD PTR [esi+0x3],ebx
  42182d:	cmp    al,0x99
  42182f:	lahf   
  421830:	push   ebp
  421831:	dec    edx
  421832:	or     BYTE PTR [esi+eiz*8],dl
  421835:	cmp    BYTE PTR [ebx+0x3df3447e],dl
  42183b:	(bad)  
  42183c:	pop    ebp
  42183d:	adc    al,cl
  42183f:	ret    0xadfe
  421842:	sbb    DWORD PTR [ecx-0x34],ebx
  421845:	fisttp WORD PTR [ecx]
  421847:	mov    esp,0xcc50c75e
  42184c:	ror    BYTE PTR [ebp-0x4bb71715],1
  421852:	imul   edi,DWORD PTR ds:[edx-0x2a],0xffffff8b
  421857:	xchg   esp,eax
  421858:	retf   0xa1aa
  42185b:	inc    edi
  42185c:	inc    edx
  42185d:	pop    ds
  42185e:	mov    ds:0xa4a54bf,eax
  421863:	inc    eax
  421864:	adc    al,0xb4
  421866:	fdivr  QWORD PTR [edi]
  421868:	fwait
  421869:	push   edi
  42186a:	mov    al,0xbe
  42186c:	cmp    BYTE PTR [ebx+0x27ccf443],cl
  421872:	push   edi
  421873:	out    0x12,al
  421875:	jl     0x4218bf
  421877:	and    al,0x7a
  421879:	pop    ecx
  42187a:	sar    cl,0xa0
  42187d:	inc    esp
  42187e:	inc    esp
  42187f:	pop    es
  421880:	inc    ebp
  421881:	das    
  421882:	mov    ebx,0xce1f7dc7
  421887:	arpl   WORD PTR [esi],dx
  421889:	push   ecx
  42188a:	neg    BYTE PTR [edi-0x11b0920c]
  421890:	xchg   edi,eax
  421891:	cs jno 0x4218f8
  421894:	pop    edi
  421895:	ficom  WORD PTR [eax]
  421897:	inc    esp
  421898:	in     eax,0x9e
  42189a:	or     BYTE PTR [ecx-0x3c],bh
  42189d:	icebp  
  42189e:	sub    ah,ah
  4218a0:	and    al,0x45
  4218a2:	sub    al,0x84
  4218a4:	ja     0x421867
  4218a6:	cmp    DWORD PTR [edx-0x784863d0],ebx
  4218ac:	mov    ah,dl
  4218ae:	jb     0x4218f8
  4218b0:	js     0x421858
  4218b2:	jp     0x4218f4
  4218b4:	add    bl,BYTE PTR [ebx-0x2de8ee18]
  4218ba:	ss jmp 0xf7fe:0xfb1a837a
  4218c2:	bound  eax,QWORD PTR [edx]
  4218c4:	(bad)  
  4218c5:	fst    DWORD PTR [edx]
  4218c7:	mov    ebp,0xc905c6b1
  4218cc:	add    al,BYTE PTR [ebx+0x2fbc61bd]
  4218d2:	push   ss
  4218d3:	pop    eax
  4218d4:	xor    DWORD PTR [esi+0x53],edx
  4218d7:	out    0xf1,eax
  4218d9:	scas   al,BYTE PTR es:[edi]
  4218da:	mov    ah,BYTE PTR [ecx-0x6d6e3bfe]
  4218e0:	aam    0xbf
  4218e2:	imul   ecx,DWORD PTR [edx-0x7f],0x3cd109ad
  4218e9:	repz xor esi,0x1a
  4218ed:	jb     0x4218b5
  4218ef:	popa   
  4218f0:	jmp    0x4c7652e9
  4218f5:	jno    0x42189f
  4218f7:	and    eax,0x837a3ca4
  4218fc:	xor    bh,cl
  4218fe:	and    al,BYTE PTR [ecx+0x1c80c063]
  421904:	adc    cl,cl
  421906:	rcl    ch,0x2c
  421909:	scas   al,BYTE PTR es:[edi]
  42190a:	fistp  QWORD PTR [ebp-0x2ab2ff5]
  421910:	adc    bh,cl
  421912:	fdiv   QWORD PTR [ebx]
  421914:	inc    edi
  421915:	cmp    eax,0x5aa70c66
  42191a:	adc    dh,BYTE PTR [ebp+0x78]
  42191d:	push   0xffffff97
  42191f:	mov    ah,BYTE PTR [ebx+0x3f]
  421922:	in     eax,dx
  421923:	or     eax,0xad33e45a
  421928:	ja     0x4218f7
  42192a:	and    al,0x67
  42192c:	ds aas 
  42192e:	or     BYTE PTR [edi+0x1c],0x4e
  421932:	mov    dl,0xd3
  421934:	sbb    BYTE PTR ds:0xa4eb0907,dl
  42193a:	cmp    al,0xcb
  42193c:	cmp    al,0xf3
  42193e:	dec    eax
  42193f:	dec    edx
  421940:	xchg   ch,ah
  421942:	int    0x1a
  421944:	mov    WORD PTR [eax+esi*2],gs
  421947:	enter  0x5956,0x33
  42194b:	and    BYTE PTR [ebp-0x2a2252b7],bl
  421951:	das    
  421952:	push   0xfffffff3
  421954:	daa    
  421955:	or     eax,0xac59f7af
  42195a:	in     al,0x80
  42195c:	(bad)  
  42195d:	cdq    
  42195e:	test   eax,0xa8bb4178
  421963:	cld    
  421964:	push   edi
  421965:	sbb    BYTE PTR [ebx-0x5b],al
  421968:	mov    esp,0xf7249c0c
  42196d:	out    dx,eax
  42196e:	dec    edx
  42196f:	sub    DWORD PTR [ebx],ebx
  421971:	sub    BYTE PTR [edi+0x74],ah
  421974:	mov    ch,0xbf
  421976:	icebp  
  421977:	(bad)
  42197b:	jmp    0xc88e:0xf9f46dda
  421982:	inc    ecx
  421983:	jge    0x4219cf
  421985:	jmp    0xc1cc9f1b
  42198a:	sbb    DWORD PTR [ebx],esp
  42198c:	lds    edx,FWORD PTR [edx+0x20]
  42198f:	sbb    BYTE PTR [edi],bl
  421991:	retf   0xaeae
  421994:	ret    0xadd6
  421997:	iret   
  421998:	jo     0x42193c
  42199a:	sbb    al,0x60
  42199c:	ss sbb eax,0xad6e6820
  4219a2:	sti    
  4219a3:	mov    WORD PTR [eax-0x12],fs
  4219a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219a7:	repnz test DWORD PTR [eax],esp
  4219aa:	arpl   WORD PTR [esi],dx
  4219ac:	mov    dl,0x6f
  4219ae:	jl     0x421972
  4219b0:	or     ebp,DWORD PTR ds:0x1e41e9e2
  4219b6:	fwait
  4219b7:	sar    ecx,0x7
  4219ba:	mov    eax,ds:0x33839755
  4219bf:	xlat   BYTE PTR ds:[ebx]
  4219c0:	push   0xffffff8a
  4219c2:	inc    eax
  4219c3:	push   edx
  4219c4:	ror    bl,1
  4219c6:	out    dx,eax
  4219c7:	into   
  4219c8:	inc    edx
  4219c9:	lods   eax,DWORD PTR ds:[esi]
  4219ca:	shl    DWORD PTR [ebx],1
  4219cc:	int    0x9f
  4219ce:	dec    edx
  4219cf:	test   BYTE PTR [edx+0x6d],bh
  4219d2:	aad    0x9
  4219d4:	sbb    esp,DWORD PTR [edi-0x28]
  4219d7:	sbb    eax,0xa31f7278
  4219dc:	mov    ecx,DWORD PTR [esi-0x607ab17]
  4219e2:	aad    0x67
  4219e4:	and    DWORD PTR [ebx+0x2b],esi
  4219e7:	test   eax,0x7068cff3
  4219ec:	ret    0x3c37
  4219ef:	enter  0xd1c4,0x54
  4219f3:	adc    eax,0xcd74616f
  4219f8:	jecxz  0x421a35
  4219fa:	lea    ecx,[edi+0x75]
  4219fd:	pop    esp
  4219fe:	pop    edx
  4219ff:	fild   QWORD PTR [ebx]
  421a01:	or     ecx,DWORD PTR [edx+ebx*1-0x7a2c4440]
  421a08:	sbb    al,0x93
  421a0a:	(bad)  
  421a0b:	sti    
  421a0c:	jns    0xed5c7286
  421a12:	jno    0x421a08
  421a14:	pop    edi
  421a15:	adc    al,0x9e
  421a17:	or     bl,BYTE PTR [eax-0x29]
  421a1a:	ja     0x4219cf
  421a1c:	sub    DWORD PTR [ebp+0x5],edx
  421a1f:	push   0xffffffea
  421a21:	outs   dx,BYTE PTR ds:[esi]
  421a22:	push   eax
  421a23:	jns    0x4219e4
  421a25:	xchg   esi,eax
  421a26:	mov    edx,DWORD PTR [esi-0x7557769d]
  421a2c:	daa    
  421a2d:	cwde   
  421a2e:	scas   eax,DWORD PTR es:[edi]
  421a2f:	clc    
  421a30:	mov    ebx,0x5d5a8639
  421a35:	pop    edi
  421a36:	outs   dx,DWORD PTR ds:[esi]
  421a37:	nop
  421a38:	xchg   esi,eax
  421a39:	mov    edi,eax
  421a3b:	add    al,0xcc
  421a3d:	mov    ds:0x8ce29ccf,eax
  421a42:	or     al,BYTE PTR [eax+0x3da80313]
  421a48:	inc    edi
  421a49:	data16 xor BYTE PTR [ecx-0x52],0xdd
  421a4e:	ficom  WORD PTR [eax+0x64]
  421a51:	shl    DWORD PTR ds:0x1eba8d9a,0xd9
  421a58:	and    ecx,0x75cba5b4
  421a5e:	aaa    
  421a5f:	mov    dh,0xb1
  421a61:	and    ebx,DWORD PTR [ebx-0x6332d438]
  421a67:	jbe    0x421a4e
  421a69:	ss mov bh,0x3c
  421a6c:	xchg   BYTE PTR [esi],ah
  421a6e:	rcr    bl,1
  421a70:	inc    esi
  421a71:	popf   
  421a72:	or     edx,DWORD PTR [eax]
  421a74:	xchg   ecx,eax
  421a75:	inc    edx
  421a76:	sbb    DWORD PTR fs:[edi+ecx*1],0x7bf0999
  421a7e:	mov    WORD PTR [esi],?
  421a80:	stos   DWORD PTR es:[edi],eax
  421a81:	inc    ecx
  421a82:	data16 shl dh,0xc5
  421a86:	adc    esp,DWORD PTR [eax+0x6b650d68]
  421a8c:	jle    0x421a52
  421a8e:	fld    DWORD PTR [eax*1+0x522ec0e4]
  421a95:	mov    ecx,?
  421a97:	fidiv  DWORD PTR [ebx+0x6f]
  421a9a:	jmp    0x174b5bf3
  421a9f:	push   ecx
  421aa0:	adc    BYTE PTR [edi],dl
  421aa2:	sbb    esp,DWORD PTR [esi-0x3ce9f60e]
  421aa8:	inc    eax
  421aa9:	sbb    BYTE PTR [edi+ebp*4+0x2450b589],bl
  421ab0:	mov    edx,0xa0f672b7
  421ab5:	data16 cli 
  421ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ab8:	js     0x421b26
  421aba:	pop    esp
  421abb:	sbb    edx,DWORD PTR [ebp+edx*4+0xec809ac]
  421ac2:	push   0xffffffb9
  421ac4:	xchg   esi,eax
  421ac5:	xor    edi,DWORD PTR [esi-0x1853d85b]
  421acb:	scas   al,BYTE PTR es:[edi]
  421acc:	add    eax,0x13850f
  421ad1:	add    BYTE PTR [eax],al
  421ad3:	cmp    ebx,DWORD PTR [ebp-0xc]
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	out    0x3b,al
  421b3c:	fs jns 0x421b62
  421b3f:	inc    edi
  421b40:	jl     0x421bbd
  421b42:	sbb    eax,0x657b7b9e
  421b47:	enter  0x5754,0x23
  421b4b:	dec    ebx
  421b4c:	or     DWORD PTR [edx+0x75],ecx
  421b4f:	jmp    0x16dd6f77
  421b54:	loope  0x421b9c
  421b56:	dec    esp
  421b57:	xor    ecx,esp
  421b59:	pop    eax
  421b5a:	mov    ds:0x3e03076,eax
  421b5f:	fisub  WORD PTR [eax+0x3c]
  421b62:	mov    dh,0x65
  421b64:	ins    BYTE PTR es:[edi],dx
  421b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b66:	xchg   ebp,eax
  421b67:	dec    edx
  421b68:	stos   DWORD PTR es:[edi],eax
  421b69:	into   
  421b6a:	loop   0x421bd7
  421b6c:	fld    QWORD PTR ds:0x6f0851ed
  421b72:	ss mov esp,0xd26f8f68
  421b78:	add    BYTE PTR [ebp+0x6a],bl
  421b7b:	xchg   DWORD PTR [edx+0x2d],ebx
  421b7e:	cmp    edi,DWORD PTR [ecx]
  421b80:	push   cs
  421b81:	jo     0x421bae
  421b83:	push   ecx
  421b84:	(bad)  
  421b86:	cmc    
  421b87:	pop    edi
  421b88:	or     DWORD PTR [edi],eax
  421b8a:	mov    dl,0x10
  421b8c:	jae    0x421bcf
  421b8e:	fdiv   st,st(5)
  421b90:	add    eax,0x93f29a49
  421b95:	js     0x421b39
  421b97:	and    al,0x35
  421b99:	xchg   ecx,eax
  421b9a:	ret    
  421b9b:	shr    BYTE PTR [ebp-0x68],1
  421b9e:	adc    al,BYTE PTR [esp+eiz*2+0x3f]
  421ba2:	pop    eax
  421ba3:	shl    DWORD PTR [ebx+0x65b902a1],cl
  421ba9:	mov    ds:0x134189a1,al
  421bae:	mov    ebx,0xf83454d9
  421bb3:	mov    ch,0xa8
  421bb5:	dec    ebx
  421bb6:	adc    BYTE PTR [ebx+0x12c6b8de],ch
  421bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bbd:	std    
  421bbe:	retf   0x4e83
  421bc1:	ret    0x3d8a
  421bc4:	in     eax,0xf1
  421bc6:	call   0xf6710ea4
  421bcb:	adc    al,0x70
  421bcd:	rol    DWORD PTR [eax],1
  421bcf:	(bad)  
  421bd0:	push   edi
  421bd1:	in     eax,0xf4
  421bd3:	fwait
  421bd4:	stos   BYTE PTR es:[edi],al
  421bd5:	xchg   esi,eax
  421bd6:	jmp    0xa02d:0xd63563e6
  421bdd:	push   esi
  421bde:	pop    ebx
  421bdf:	adc    dh,BYTE PTR [edx+ebp*1-0x79b10d60]
  421be6:	jp     0x421c4e
  421be8:	cmp    al,BYTE PTR [edx-0x4bfe11fb]
  421bee:	mul    DWORD PTR [edx+0x69]
  421bf1:	add    BYTE PTR [ebx-0x4e],0x65
  421bf5:	or     edi,DWORD PTR [esi+eiz*2-0x3534bddd]
  421bfc:	mov    esp,0x94fa70d0
  421c01:	or     al,0x9f
  421c03:	out    0x9c,eax
  421c05:	(bad)  
  421c06:	mov    al,ds:0x152680c3
  421c0b:	and    eax,0x93c65a09
  421c10:	sub    BYTE PTR ds:0xb71ff678,0x37
  421c17:	mov    WORD PTR [ecx-0x5a],ds
  421c1a:	jl     0x421bed
  421c1c:	xchg   ecx,eax
  421c1d:	push   ebp
  421c1e:	in     eax,0x77
  421c20:	xor    dl,cl
  421c22:	pop    ecx
  421c23:	popa   
  421c24:	aad    0x16
  421c26:	adc    edx,0xffffffdb
  421c29:	call   0x2cd1f32f
  421c2e:	or     DWORD PTR [ecx+0x2],ebp
  421c31:	mov    DWORD PTR [edi],esi
  421c33:	mov    edx,0xe0bedb69
  421c38:	dec    ebp
  421c39:	and    eax,0xfb9bff17
  421c3e:	outs   dx,DWORD PTR cs:[esi]
  421c40:	sub    al,0x25
  421c42:	pop    ds
  421c43:	pop    edi
  421c44:	pop    ds
  421c45:	iret   
  421c46:	inc    DWORD PTR [ebp-0x428a0353]
  421c4c:	jmp    0x50b67d2e
  421c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c52:	cmp    eax,0x6bf0a55c
  421c57:	call   0xec92:0x8e85af8c
  421c5e:	pop    ebx
  421c5f:	repz cmp esp,ecx
  421c62:	fnsave [esi]
  421c64:	fist   WORD PTR [edx+0x4c72777d]
  421c6a:	outs   dx,BYTE PTR ds:[esi]
  421c6b:	call   0xdb43:0x37269a18
  421c72:	xor    BYTE PTR [edx+edi*1],al
  421c75:	mov    ah,bh
  421c77:	push   es
  421c78:	pop    esi
  421c79:	out    0x45,al
  421c7b:	mov    al,ds:0x34ff8a55
  421c80:	jno    0x421cbf
  421c82:	dec    edx
  421c83:	into   
  421c84:	int3   
  421c85:	jp     0x421c53
  421c87:	mov    DWORD PTR [edi+0x21f5d85d],edx
  421c8d:	jno    0x421cc7
  421c8f:	push   edx
  421c90:	rol    ah,0x56
  421c93:	scas   eax,DWORD PTR es:[edi]
  421c94:	jle    0x421d0c
  421c96:	cwde   
  421c97:	pop    edx
  421c98:	lds    esp,FWORD PTR [ebp-0x62]
  421c9b:	cmp    eax,0x5319cb08
  421ca0:	adc    DWORD PTR [esi],eax
  421ca2:	mov    dl,0x85
  421ca4:	push   es
  421ca5:	and    al,0x56
  421ca7:	mov    cl,0xec
  421ca9:	stos   DWORD PTR es:[edi],eax
  421caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cab:	push   cs
  421cac:	shl    dl,1
  421cae:	ja     0x421cfd
  421cb0:	scas   eax,DWORD PTR es:[edi]
  421cb1:	cmp    ah,ah
  421cb3:	inc    edx
  421cb4:	cmc    
  421cb5:	retf   0xe3bf
  421cb8:	ss (bad) 
  421cbb:	dec    esi
  421cbc:	push   es
  421cbd:	(bad)  
  421cbe:	lock pop ss
  421cc0:	push   esi
  421cc1:	xor    esi,DWORD PTR [ecx-0x6f4852b6]
  421cc7:	add    al,BYTE PTR [ecx+0x0]
  421cca:	pop    es
  421ccb:	rcr    BYTE PTR [edi+0x20],0xc3
  421ccf:	int3   
  421cd0:	clc    
  421cd1:	out    dx,eax
  421cd2:	inc    esp
  421cd3:	adc    al,0xa8
  421cd5:	xor    al,0xe0
  421cd7:	call   0x480db5f
  421cdc:	repz test bl,dl
  421cdf:	ror    esp,cl
  421ce1:	dec    eax
  421ce2:	pop    ebp
  421ce3:	nop
  421ce4:	push   ebp
  421ce5:	enter  0x2a34,0x8f
  421ce9:	jge    0x421d53
  421ceb:	jno    0x421d2a
  421ced:	retf   
  421cee:	or     eax,0x9d986595
  421cf3:	sbb    eax,0x2f934c84
  421cf8:	fistp  WORD PTR fs:[eax-0x6f124eec]
  421cff:	ret    0xc67f
  421d02:	into   
  421d03:	pop    ebp
  421d04:	jecxz  0x421d7e
  421d06:	stos   DWORD PTR es:[edi],eax
  421d07:	mov    ds:0xc0cad10c,al
  421d0c:	cmc    
  421d0d:	or     bh,ch
  421d0f:	add    ebx,ebx
  421d11:	mov    ecx,0xe562482
  421d16:	cmc    
  421d17:	shl    BYTE PTR [edx],cl
  421d19:	pushf  
  421d1a:	mov    edx,0xb7c9ac4b
  421d1f:	and    ch,cl
  421d21:	add    al,0xbc
  421d23:	push   ds
  421d24:	sub    cl,BYTE PTR [edx-0x63]
  421d27:	loope  0x421d31
  421d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d2a:	in     eax,0x92
  421d2c:	mov    edi,esi
  421d2e:	sbb    al,0x8d
  421d30:	pushf  
  421d31:	dec    edi
  421d32:	fwait
  421d33:	ja     0x421cfc
  421d35:	loope  0x421d98
  421d37:	or     DWORD PTR [ebx+0x49],0xe9d12935
  421d3e:	push   esp
  421d3f:	mov    esi,0xdcf8e2ee
  421d44:	icebp  
  421d45:	inc    ecx
  421d46:	jg     0x421ce4
  421d48:	sar    edi,cl
  421d4a:	inc    edx
  421d4b:	scas   eax,DWORD PTR es:[edi]
  421d4c:	mov    edx,0x40aea6bd
  421d51:	in     al,dx
  421d52:	ret    
  421d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d54:	and    BYTE PTR [ecx+ecx*2],dh
  421d57:	mov    al,ds:0x6aad9ce6
  421d5c:	mov    ch,0xd8
  421d5e:	add    al,0x73
  421d60:	loope  0x421d70
  421d62:	mov    esp,0x31809336
  421d67:	adc    al,0x67
  421d69:	xchg   ebp,eax
  421d6a:	dec    edx
  421d6b:	in     al,0xb
  421d6d:	push   es
  421d6e:	fs fs pop ss
  421d71:	push   ecx
  421d72:	or     esi,DWORD PTR [edx-0x69222770]
  421d78:	imul   ecx,DWORD PTR ds:0xd79a5fbf,0x1b4d5b42
  421d82:	and    ebp,DWORD PTR [edi-0x16]
  421d85:	call   FWORD PTR [esi]
  421d87:	(bad)  
  421d88:	ss pop esp
  421d8a:	cmp    eax,0x6b328f31
  421d8f:	imul   eax,esp,0x44
  421d92:	xor    bl,0xa
  421d95:	(bad)  
  421d96:	(bad)  
  421d98:	ss ins BYTE PTR es:[edi],dx
  421d9a:	lods   al,BYTE PTR ds:[esi]
  421d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d9c:	test   al,0x2e
  421d9e:	call   DWORD PTR [edx*4-0x344f9daa]
  421da5:	xor    DWORD PTR [edx],ebp
  421da7:	gs jmp 0x3c31:0x4d73
  421dae:	loope  0x421d77
  421db0:	pop    ss
  421db1:	sbb    dl,BYTE PTR [ebx+esi*4-0x3a0021a8]
  421db8:	or     bh,BYTE PTR [esi]
  421dba:	(bad)  
  421dbb:	pop    eax
  421dbc:	fistp  WORD PTR ds:0xbea9eadd
  421dc2:	xchg   ecx,eax
  421dc3:	jbe    0x421d8e
  421dc5:	daa    
  421dc6:	pop    edi
  421dc7:	(bad)  
  421dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc9:	out    0x12,al
  421dcb:	je     0x421d83
  421dcd:	sbb    BYTE PTR [eax],0x9c
  421dd0:	mov    esp,0x14e42dd4
  421dd5:	cmp    ah,ah
  421dd7:	or     ebp,edx
  421dd9:	jmp    0x421daa
  421ddb:	push   cs
  421ddc:	dec    edx
  421ddd:	sub    cl,bh
  421ddf:	pop    ecx
  421de0:	adc    eax,0xeae10227
  421de5:	or     bh,bh
  421de7:	adc    al,0xf1
  421de9:	mov    cl,0x95
  421deb:	mov    ebp,0xff8f0cfb
  421df0:	push   eax
  421df1:	pusha  
  421df2:	sub    eax,0xfa2f8206
  421df7:	std    
  421df8:	add    DWORD PTR [esi-0x4c919dd9],0x68
  421dff:	jmp    0x421e2a
  421e01:	repz pop esp
  421e03:	jle    0x421db2
  421e05:	cld    
  421e06:	test   BYTE PTR [eax+0x63b92443],al
  421e0c:	mov    edx,0x2e591ca8
  421e11:	xor    eax,0x8977353e
  421e16:	inc    BYTE PTR [ebx]
  421e18:	in     eax,dx
  421e19:	add    edx,DWORD PTR ds:0xe278057d
  421e1f:	adc    BYTE PTR [ecx-0x3d],al
  421e22:	xor    esp,DWORD PTR [ebx]
  421e24:	adc    al,0xf1
  421e26:	push   ds
  421e27:	enter  0xac74,0x2a
  421e2b:	jp     0x421de0
  421e2d:	mov    ebp,0x160fcd0f
  421e32:	sub    cl,BYTE PTR [eax-0x3]
  421e35:	jbe    0x421ea0
  421e37:	imul   eax,DWORD PTR [edi+0x39],0x5cdc5b78
  421e3e:	cmp    bl,BYTE PTR [eax]
  421e40:	int3   
  421e41:	aam    0x57
  421e43:	ja     0x421e19
  421e45:	dec    eax
  421e46:	push   ecx
  421e47:	int3   
  421e48:	xchg   edx,eax
  421e49:	ret    
  421e4a:	(bad)  
  421e4b:	xor    cl,BYTE PTR [edi+0x1ab77721]
  421e51:	fsub   QWORD PTR [edi-0x3b63eb6b]
  421e57:	cmp    DWORD PTR [edx],esi
  421e59:	fld    QWORD PTR [edi+edi*2+0x1]
  421e5d:	sub    DWORD PTR [esi],eax
  421e5f:	mov    al,0x14
  421e61:	retf   
  421e62:	mov    bl,0x62
  421e64:	rcl    esi,cl
  421e66:	repnz cmp eax,0xccc40cff
  421e6c:	sub    eax,0xbea84e05
  421e71:	push   ecx
  421e72:	outs   dx,BYTE PTR ds:[esi]
  421e73:	add    dh,dh
  421e75:	(bad)  
  421e76:	xlat   BYTE PTR ds:[ebx]
  421e77:	push   0x5b724c04
  421e7c:	fnsave [esi+0x4cd9d3c5]
  421e82:	lock retf 0x9328
  421e86:	lds    esp,FWORD PTR ds:0x722ec63c
  421e8c:	sub    eax,0x65
  421e8f:	test   BYTE PTR [eax+0x4],al
  421e92:	pop    ebx
  421e93:	out    0x83,al
  421e95:	pop    ebp
  421e96:	das    
  421e97:	cdq    
  421e98:	and    DWORD PTR [eax-0x39b27dba],ebx
  421e9e:	aad    0xc0
  421ea0:	mov    edi,0x35ebc4f8
  421ea5:	mov    ebp,0xc381a091
  421eaa:	add    cl,dl
  421eac:	repnz adc BYTE PTR [esi+0x72],bh
  421eb0:	retf   0xa342
  421eb3:	mov    BYTE PTR [eax+0x3d],0xd9
  421eb7:	test   eax,0x59d55bdc
  421ebc:	xchg   esi,eax
  421ebd:	sbb    DWORD PTR [ebx],0x32
  421ec0:	ret    0xd140
  421ec3:	or     eax,0x18a86692
  421ec8:	sbb    DWORD PTR [esi],edi
  421eca:	mov    eax,0x6f84679f
  421ecf:	mov    esi,0x7d8868e3
  421ed4:	push   edx
  421ed5:	push   es
  421ed6:	mov    dl,0x54
  421ed8:	xorps  xmm4,XMMWORD PTR [edx-0x6d]
  421edc:	pop    ebx
  421edd:	cmp    BYTE PTR [edx+0x3],cl
  421ee0:	xchg   edi,eax
  421ee1:	mov    esi,0x3f5b5eeb
  421ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee7:	out    dx,al
  421ee8:	push   esp
  421ee9:	les    edx,FWORD PTR [ebx-0x15]
  421eec:	rcl    ebx,cl
  421eee:	or     BYTE PTR [edx],al
  421ef0:	sub    eax,0xaaa8f947
  421ef5:	stc    
  421ef6:	cld    
  421ef7:	loop   0x421ef4
  421ef9:	out    dx,al
  421efa:	sbb    ebp,0x70
  421efd:	push   edx
  421efe:	pop    eax
  421eff:	jo     0x421f03
  421f01:	es sub eax,ecx
  421f04:	jl     0x421e8e
  421f06:	iret   
  421f07:	lds    edi,FWORD PTR [edx+edi*2]
  421f0a:	dec    esi
  421f0b:	(bad)  
  421f0c:	xchg   ebp,eax
  421f0d:	not    BYTE PTR [ebp-0x24b47f9]
  421f13:	mov    edx,0x6ee2f8ee
  421f18:	mov    dl,0x99
  421f1a:	pop    ss
  421f1b:	adc    cl,cl
  421f1d:	inc    ecx
  421f1e:	in     al,dx
  421f1f:	adc    bl,BYTE PTR ds:0xe175abd
  421f25:	div    ch
  421f27:	add    DWORD PTR [esi+0x492cefaf],edx
  421f2d:	fldcw  WORD PTR [eax-0xa]
  421f30:	syscall 
  421f32:	aas    
  421f33:	pop    DWORD PTR [edx]
  421f35:	(bad)  
  421f36:	push   ebp
  421f37:	jno    0x421eef
  421f39:	push   edi
  421f3a:	push   ecx
  421f3b:	mov    al,ds:0x49175b12
  421f40:	fist   DWORD PTR [ecx+0x55]
  421f43:	mov    bh,0x59
  421f45:	mov    eax,ds:0xe1a5a429
  421f4a:	in     eax,0xfb
  421f4c:	ds dec edi
  421f4e:	js     0x421ed1
  421f50:	addr16 pop esi
  421f52:	mov    ebx,0x41f2415e
  421f57:	sbb    DWORD PTR [ecx],edi
  421f59:	loopne 0x421fa6
  421f5b:	sbb    ebp,DWORD PTR [ecx-0x31]
  421f5e:	std    
  421f5f:	mov    DWORD PTR [edx],ecx
  421f61:	fidivr DWORD PTR [eax-0x65212146]
  421f67:	ja     0x421fb3
  421f69:	xchg   ebx,eax
  421f6a:	pop    ecx
  421f6b:	shl    BYTE PTR [ebx+0x2d4357fa],0xe8
  421f72:	xchg   edx,eax
  421f73:	xor    eax,0xf68b04b8
  421f78:	mov    bh,0x48
  421f7a:	mov    ch,0x1f
  421f7c:	call   0x67e:0xda9dbe83
  421f83:	icebp  
  421f84:	(bad)  
  421f85:	mov    esi,DWORD PTR [edx+ecx*8+0x58f28380]
  421f8c:	(bad)  
  421f8d:	jg     0x421ffd
  421f8f:	ss aaa 
  421f91:	xchg   ecx,eax
  421f92:	mov    DWORD PTR [edx],0x1edeb08d
  421f98:	fld    DWORD PTR [ebx+0x697831ce]
  421f9e:	(bad)  
  421f9f:	cdq    
  421fa0:	push   cs
  421fa1:	xor    ebx,esp
  421fa3:	ins    DWORD PTR es:[edi],dx
  421fa4:	(bad)  
  421fa5:	cs cwde 
  421fa7:	inc    eax
  421fa8:	sub    bh,BYTE PTR [ebx-0x2778a00f]
  421fae:	rol    DWORD PTR ds:0xf84d9ba5,cl
  421fb4:	mov    BYTE PTR [edx+0x27a96026],0xf9
  421fbb:	xchg   ebp,eax
  421fbc:	fld    QWORD PTR [esi+0x7]
  421fbf:	out    0x40,al
  421fc1:	mov    dl,0x92
  421fc3:	in     al,0xa0
  421fc5:	je     0x421fdc
  421fc7:	bound  edi,QWORD PTR [ecx+esi*4]
  421fca:	add    al,0x28
  421fcc:	jmp    0xb8a5d731
  421fd1:	(bad)  
  421fd2:	sti    
  421fd3:	aad    0x6
  421fd5:	retf   0xcb8f
  421fd8:	xor    eax,0xa4576bde
  421fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fde:	retf   0x71e1
  421fe1:	dec    esp
  421fe2:	jb     0x421f6d
  421fe4:	xchg   edx,eax
  421fe5:	jno    0x421faf
  421fe7:	push   ebp
  421fe8:	in     eax,dx
  421fe9:	push   ecx
  421fea:	arpl   cx,di
  421fec:	xor    al,BYTE PTR [eax]
  421fee:	mov    ebp,0x70f13001
  421ff3:	dec    ebx
  421ff4:	push   esp
  421ff5:	push   edx
  421ff6:	push   edx
  421ff7:	jo     0x422069
  421ff9:	xchg   DWORD PTR [esi+0x65],ebp
  421ffc:	rcl    DWORD PTR [ebx+0x55b3687],cl
  422002:	mov    al,ds:0x296854bc
  422007:	jmp    0xe85e:0xa9f2f1bc
  42200e:	add    BYTE PTR [eax],ch
  422010:	sub    eax,0x61eb3ebb
  422015:	call   0x8a9eded4
  42201a:	std    
  42201b:	(bad)
  42201e:	in     eax,0x54
  422020:	je     0x421fab
  422022:	cmp    eax,0x1556e90b
  422027:	daa    
  422028:	rcl    BYTE PTR [edx],cl
  42202a:	jge    0x422092
  42202c:	xchg   edi,eax
  42202d:	aaa    
  42202e:	mov    dl,ch
  422030:	icebp  
  422031:	or     DWORD PTR [ebx+0x9c387be],edx
  422037:	mov    ecx,0x77121e7f
  42203c:	or     al,0x61
  42203e:	(bad)  
  422040:	push   cs
  422041:	pop    esp
  422042:	push   ecx
  422043:	lock jecxz 0x421fd8
  422046:	jmp    0x42206f
  422048:	fwait
  422049:	cmp    cl,BYTE PTR [edi+0x6e]
  42204c:	ja     0x42200b
  42204e:	jb     0x422095
  422050:	jle    0x421ff0
  422052:	pop    esi
  422053:	and    ch,0x7d
  422056:	lods   eax,DWORD PTR ds:[esi]
  422057:	dec    ebx
  422058:	xchg   cx,ax
  42205a:	mov    al,0x1d
  42205c:	js     0x422093
  42205e:	sub    DWORD PTR [eax-0x4107a57a],ebp
  422064:	loope  0x422019
  422066:	mov    ebx,0x51ceef65
  42206b:	test   bl,dh
  42206d:	pushf  
  42206e:	popf   
  42206f:	sub    al,0x91
  422071:	shl    BYTE PTR [ebx+edi*4-0x66bb282],1
  422078:	scas   eax,DWORD PTR es:[edi]
  422079:	and    BYTE PTR [ebx+eax*1-0x43878c7b],ch
  422080:	pop    ss
  422081:	xor    eax,0x30fedee
  422086:	into   
  422087:	dec    ebp
  422088:	xor    al,0xca
  42208a:	and    DWORD PTR [eax+0x7e],esi
  42208d:	dec    edi
  42208e:	sbb    DWORD PTR [esi-0x7e],eax
  422091:	mov    al,0x34
  422093:	leave  
  422094:	push   edi
  422095:	inc    edi
  422096:	adc    DWORD PTR [edx],edx
  422098:	push   edi
  422099:	fidiv  WORD PTR [ebx]
  42209b:	xlat   BYTE PTR ds:[ebx]
  42209c:	jmp    0x9bd1fdb0
  4220a1:	hlt    
  4220a2:	(bad)  
  4220a3:	enter  0x95d,0xe4
  4220a7:	mov    eax,ds:0xffc82260
  4220ac:	pop    ecx
  4220ad:	in     al,dx
  4220ae:	or     eax,0x9120a2ae
  4220b3:	cdq    
  4220b4:	push   ss
  4220b5:	cmp    cl,ch
  4220b7:	sar    DWORD PTR [ebp+0x71],1
  4220ba:	sbb    edx,ecx
  4220bc:	repnz int3 
  4220be:	inc    edi
  4220bf:	xor    ecx,DWORD PTR es:[edi]
  4220c2:	cvtps2pi mm3,QWORD PTR [eax+0x53aa990f]
  4220c9:	sbb    eax,0xb045082a
  4220ce:	sbb    al,0x8c
  4220d0:	pop    esi
  4220d1:	mov    dh,ah
  4220d3:	dec    ebp
  4220d4:	push   eax
  4220d5:	pop    eax
  4220d6:	dec    esp
  4220d7:	push   ss
  4220d8:	cli    
  4220d9:	sbb    esi,DWORD PTR [esi+0x4]
  4220dc:	and    ah,BYTE PTR cs:[esi+eiz*2]
  4220e0:	sahf   
  4220e1:	cld    
  4220e2:	retf   0x2180
  4220e5:	mov    dh,0xb
  4220e7:	fadd   st(0),st
  4220e9:	fcom   QWORD PTR [eax-0x78d03b63]
  4220ef:	das    
  4220f0:	add    ah,ah
  4220f2:	mov    edi,0x48729902
  4220f7:	imul   eax,esi,0xffffffa2
  4220fa:	jo     0x4220e0
  4220fc:	cwde   
  4220fd:	sti    
  4220fe:	(bad)
  422102:	sar    ecx,1
  422104:	xor    ecx,DWORD PTR [ecx]
  422106:	mov    ecx,0x4eb3702d
  42210b:	adc    esp,DWORD PTR [esi+0x70]
  42210e:	loopne 0x4220f6
  422110:	push   esp
  422111:	mov    ebx,0x59d4824b
  422116:	adc    dl,dl
  422118:	int    0x70
  42211a:	mov    edx,0x1a6f6dc6
  42211f:	dec    edi
  422120:	scas   al,BYTE PTR es:[edi]
  422121:	or     BYTE PTR [eax],0xef
  422124:	cmp    eax,0x28b4648a
  422129:	into   
  42212a:	scas   eax,DWORD PTR es:[edi]
  42212b:	fcomip st,st(0)
  42212d:	retf   
  42212e:	jecxz  0x422173
  422130:	xchg   ebx,eax
  422131:	cmp    eax,0x841fa33c
  422136:	pop    ecx
  422137:	push   ss
  422138:	icebp  
  422139:	push   ebp
  42213a:	jmp    DWORD PTR [ebp-0x2778859c]
  422140:	test   al,0xb8
  422142:	sub    eax,0xc34b55af
  422147:	mov    dh,0xc6
  422149:	or     al,0x15
  42214b:	jmp    0x422135
  42214d:	data16 test al,0x6b
  422150:	cmp    bh,BYTE PTR [esi+0x4c]
  422153:	adc    esp,DWORD PTR [edi]
  422155:	aad    0xc3
  422157:	in     eax,0x91
  422159:	gs push 0xfd59ea6e
  42215f:	and    BYTE PTR [edi+0x918e66b],bh
  422165:	pop    ecx
  422166:	popf   
  422167:	jne    0x422113
  422169:	adc    bl,bl
  42216b:	sub    dh,bl
  42216d:	mov    cl,0xfe
  42216f:	xchg   esp,eax
  422170:	(bad)  
  422171:	enter  0x5f6,0x65
  422175:	pop    ecx
  422176:	aaa    
  422177:	pop    ds
  422178:	add    al,0x29
  42217a:	retf   
  42217b:	cmp    bh,BYTE PTR [edi]
  42217d:	push   esi
  42217e:	push   edi
  42217f:	js     0x4221b8
  422181:	es hlt 
  422183:	aaa    
  422184:	test   al,0x22
  422186:	sub    BYTE PTR [edx],0x59
  422189:	push   eax
  42218a:	mov    eax,0x43a03cf4
  42218f:	rcl    DWORD PTR [esi+edi*8-0x56],0x96
  422194:	inc    ecx
  422195:	and    DWORD PTR [esi],ebp
  422197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422198:	loop   0x4221c9
  42219a:	adc    eax,0xe2887a04
  42219f:	gs cmc 
  4221a1:	fwait
  4221a2:	ror    DWORD PTR [eax-0x161da233],cl
  4221a8:	sbb    DWORD PTR [ebx+0x33c3af8],0x8204c61e
  4221b2:	and    al,cl
  4221b4:	sbb    bh,BYTE PTR [esi]
  4221b6:	retf   
  4221b7:	hlt    
  4221b8:	adc    al,0x10
  4221ba:	pushf  
  4221bb:	inc    eax
  4221bc:	inc    ebp
  4221bd:	dec    esi
  4221be:	pop    esi
  4221bf:	ret    0x49c3
  4221c2:	push   ds
  4221c3:	dec    esp
  4221c4:	std    
  4221c5:	lea    esi,[ecx-0x57d0e4d]
  4221cb:	sbb    BYTE PTR [ebp+0x5f],0xc8
  4221cf:	rcr    DWORD PTR [eax+0x39],0xb6
  4221d3:	push   esp
  4221d4:	or     bh,bl
  4221d6:	or     BYTE PTR [eax],0x23
  4221d9:	dec    ecx
  4221da:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221dc:	push   ds
  4221dd:	fist   DWORD PTR [edx]
  4221df:	mov    ecx,0xdb32f5b3
  4221e4:	ja     0x42223a
  4221e6:	xchg   BYTE PTR [esp+ecx*4-0x6d9c33a2],al
  4221ed:	int    0xc7
  4221ef:	jecxz  0x422241
  4221f1:	sar    BYTE PTR [ecx],cl
  4221f3:	inc    ecx
  4221f4:	out    0xf1,eax
  4221f6:	mov    esi,0xc5fccf8
  4221fb:	fst    st(5)
  4221fd:	sahf   
  4221fe:	data16 fisttp DWORD PTR [edx+eiz*1]
  422202:	pushf  
  422203:	leave  
  422204:	jno    0x422234
  422206:	xor    BYTE PTR [ecx+0xb],dl
  422209:	push   ds
  42220a:	ins    DWORD PTR es:[edi],dx
  42220b:	inc    esi
  42220c:	jl     0x422241
  42220e:	les    eax,FWORD PTR [esi-0x38fe558e]
  422214:	mov    bl,0x2a
  422216:	or     al,0x8c
  422218:	mov    ecx,0x1c90e7f5
  42221d:	cmp    eax,0x62ca851
  422222:	mov    dl,0xe8
  422224:	xor    dl,BYTE PTR [esi]
  422226:	(bad)  
  422227:	sti    
  422228:	je     0x4221b8
  42222a:	inc    ecx
  42222b:	addr16 cli 
  42222d:	aad    0xfc
  42222f:	mov    fs,WORD PTR [ebx]
  422231:	cmp    BYTE PTR [ecx],dh
  422233:	push   ds
  422234:	jg     0x4221b9
  422236:	fwait
  422237:	cs jmp 0xb0e4:0x4e4dec93
  42223f:	test   DWORD PTR [ecx-0x37],ebx
  422242:	sbb    DWORD PTR [edx+0x21],ebx
  422245:	inc    ecx
  422247:	clc    
  422248:	ins    DWORD PTR es:[edi],dx
  422249:	dec    eax
  42224a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42224b:	xchg   ebx,eax
  42224c:	cli    
  42224d:	les    esi,FWORD PTR [eax]
  42224f:	push   edx
  422250:	jge    0x4221f2
  422252:	das    
  422253:	xor    BYTE PTR [ebp+0x255ff737],bl
  422259:	shl    DWORD PTR [esi-0x593ce841],cl
  42225f:	test   BYTE PTR ds:0xd02c9dbd,bl
  422265:	jp     0x4221f6
  422267:	push   ds
  422268:	push   edx
  422269:	(bad)  
  42226a:	pop    ss
  42226b:	shr    ebx,cl
  42226d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226e:	test   al,0x34
  422270:	jge    0x4222b2
  422272:	ficomp DWORD PTR ds:0xc7b06f1a
  422278:	popa   
  422279:	jecxz  0x4222c4
  42227b:	mov    bl,0x85
  42227d:	xor    al,0x73
  42227f:	ja     0x4222e4
  422281:	and    edx,DWORD PTR [edx+0x7c]
  422284:	rol    DWORD PTR [eax+ebx*2-0x11782dbf],1
  42228b:	dec    edi
  42228c:	and    dh,0xb4
  42228f:	jnp    0x422289
  422291:	out    dx,al
  422292:	(bad)  
  422293:	arpl   bx,dx
  422295:	stos   BYTE PTR es:[edi],al
  422296:	retf   
  422297:	and    eax,DWORD PTR [eax-0x34]
  42229a:	lahf   
  42229b:	cmp    al,0x4
  42229d:	popa   
  42229e:	sub    eax,0xbfc188a9
  4222a3:	clc    
  4222a4:	mul    DWORD PTR [ecx*1+0x75c9f427]
  4222ab:	dec    ebp
  4222ac:	xchg   esp,eax
  4222ad:	(bad)  
  4222ae:	adc    eax,0xc200e00b
  4222b3:	and    BYTE PTR [esi+0x2fa5dda8],0xd7
  4222ba:	inc    esp
  4222bb:	xchg   esp,eax
  4222bc:	sub    cl,BYTE PTR [edx+0x56c83506]
  4222c2:	std    
  4222c3:	sub    DWORD PTR [ecx-0x3],ebx
  4222c6:	fld    DWORD PTR [ebp+0x5a]
  4222c9:	pop    ds
  4222ca:	sub    dh,ah
  4222cc:	jns    0x4222e3
  4222ce:	pop    edi
  4222cf:	lods   al,BYTE PTR ds:[esi]
  4222d0:	sub    edi,DWORD PTR [esi]
  4222d2:	sahf   
  4222d3:	pop    ebx
  4222d4:	add    DWORD PTR [edx+0xd3676a6],esp
  4222da:	push   eax
  4222db:	xor    al,0x67
  4222dd:	jbe    0x422331
  4222df:	jle    0x42231e
  4222e1:	or     eax,0xe660cb55
  4222e6:	fwait
  4222e7:	jns    0x4222f1
  4222e9:	test   eax,0xe321788c
  4222ee:	sub    DWORD PTR [edi+0x6b54b36d],0xf6e1effc
  4222f8:	cwde   
  4222f9:	xchg   ecx,eax
  4222fa:	bound  ebp,QWORD PTR [edx]
  4222fc:	rcl    edi,1
  4222fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ff:	xrelease mov BYTE PTR cs:[eax-0xf],bl
  422304:	inc    esi
  422305:	mov    dl,0xe4
  422307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422308:	pop    ds
  422309:	test   BYTE PTR [ecx+0x32],bh
  42230c:	iret   
  42230d:	das    
  42230e:	imul   edx,DWORD PTR [eax],0x2c
  422311:	or     eax,0x223cca8c
  422316:	out    dx,eax
  422317:	call   FWORD PTR [esi]
  422319:	loope  0x422328
  42231b:	ret    
  42231c:	in     eax,0x80
  42231e:	test   DWORD PTR [ebx+0x2f],0x8c8537af
  422325:	in     al,dx
  422326:	test   eax,0xdc6ce3c0
  42232b:	jae    0x422336
  42232d:	mov    ecx,DWORD PTR [edx+edi*1]
  422330:	loop   0x42230d
  422332:	dec    ebx
  422333:	psrld  mm1,mm7
  422336:	sub    BYTE PTR [ecx+0x9a61a6a],bh
  42233c:	std    
  42233d:	mov    bh,BYTE PTR [esi-0x18]
  422340:	or     bh,BYTE PTR [ecx]
  422342:	sub    esi,DWORD PTR [eax-0x52]
  422345:	or     DWORD PTR [ebp-0x11f03bae],edx
  42234b:	jp     0x42238c
  42234d:	jmp    0x4223b3
  42234f:	ins    DWORD PTR es:[edi],dx
  422350:	mov    WORD PTR [ecx+0x14],?
  422353:	jbe    0x4223c7
  422355:	mov    eax,0x6b5ed008
  42235a:	fcmovnbe st,st(0)
  42235c:	fimul  DWORD PTR [eax+ebx*4+0x32ab88bb]
  422363:	pusha  
  422364:	cmp    eax,0x9a43874f
  422369:	fnstcw WORD PTR [edi+edi*8]
  42236c:	fwait
  42236d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42236e:	lea    ecx,[ecx]
  422370:	jg     0x4223a3
  422372:	push   eax
  422373:	test   al,0xd0
  422375:	loop   0x4223c4
  422377:	or     dl,BYTE PTR [ebp+0x4f]
  42237a:	daa    
  42237b:	lock or eax,0x12472cc1
  422381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422382:	xchg   ebp,eax
  422383:	scas   al,BYTE PTR es:[edi]
  422384:	xchg   esp,eax
  422385:	jne    0x422358
  422387:	je     0x422358
  422389:	push   cs
  42238a:	or     esi,ecx
  42238c:	jle    0x4223fa
  42238e:	push   esp
  42238f:	fidiv  WORD PTR [ebx]
  422391:	xor    eax,0xce35f650
  422396:	xor    DWORD PTR [esi+0x43],edx
  422399:	add    al,0x34
  42239b:	mov    dh,0xac
  42239d:	cmp    al,0xf1
  42239f:	xchg   DWORD PTR [edx+edx*4],edi
  4223a2:	dec    esp
  4223a3:	jmp    0xef82d7fb
  4223a8:	out    0x73,eax
  4223aa:	(bad)  
  4223ab:	repz and BYTE PTR [edi],bl
  4223ae:	retf   
  4223af:	or     dh,BYTE PTR [esi+ebp*1+0x23af9eff]
  4223b6:	jecxz  0x4223c4
  4223b8:	dec    ebp
  4223b9:	sub    al,0xf7
  4223bb:	sub    BYTE PTR [edi-0x59],dl
  4223be:	repnz rcl DWORD PTR ds:0x90612586,0x0
  4223c6:	test   al,0x2b
  4223c8:	out    dx,eax
  4223c9:	jo     0x4223cd
  4223cb:	sub    eax,0x4a40741e
  4223d0:	int3   
  4223d1:	mov    al,ah
  4223d3:	into   
  4223d4:	gs xchg ecx,eax
  4223d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223d7:	out    0x64,al
  4223d9:	and    eax,0x448e14d0
  4223de:	subps  xmm0,XMMWORD PTR [edi]
  4223e1:	adc    eax,0xb3848d54
  4223e6:	in     al,dx
  4223e7:	stos   DWORD PTR es:[edi],eax
  4223e8:	xchg   esi,eax
  4223e9:	dec    edi
  4223ea:	jmp    0xf4b3ee9a
  4223ef:	and    eax,0x3c8ac236
  4223f4:	retf   0x4d18
  4223f7:	adc    ah,BYTE PTR ds:[edi+0x4d38dd98]
  4223fe:	repz out 0x4b,al
  422401:	and    edi,DWORD PTR [eax]
  422403:	or     ecx,ecx
  422405:	in     al,dx
  422406:	imul   edi,DWORD PTR [ebx],0x26aa45ed
  42240c:	or     ch,dh
  42240e:	add    bl,dl
  422410:	outs   dx,DWORD PTR ds:[esi]
  422411:	ds lahf 
  422413:	dec    edx
  422414:	or     DWORD PTR [eax],ebp
  422416:	sbb    eax,0x1e1ecb84
  42241b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241c:	int    0x8a
  42241e:	mov    ds:0x9a473b04,eax
  422423:	add    DWORD PTR [edx-0xa775981],esp
  422429:	pop    edi
  42242a:	push   es
  42242b:	jbe    0x42243f
  42242d:	cmp    eax,0xe3350396
  422432:	mov    bh,0x8
  422434:	and    dh,BYTE PTR ds:0xd6ebd7fd
  42243a:	xchg   ebx,eax
  42243b:	push   edi
  42243c:	call   0x738f:0x93c6aec5
  422443:	sbb    ebp,DWORD PTR [edi]
  422445:	sahf   
  422446:	jbe    0x42247f
  422448:	shl    al,1
  42244a:	sbb    ch,ch
  42244c:	xchg   esp,eax
  42244d:	jne    0x422471
  42244f:	add    al,0xe3
  422451:	cmp    al,0x43
  422453:	xor    eax,edi
  422455:	out    dx,eax
  422456:	cdq    
  422457:	xchg   DWORD PTR [ecx-0x64],ebx
  42245a:	xchg   edx,eax
  42245b:	int3   
  42245c:	arpl   WORD PTR [edx-0x2c7456ec],si
  422462:	imul   eax,DWORD PTR [edx],0x5e
  422465:	in     ax,dx
  422467:	xlat   BYTE PTR ds:[ebx]
  422468:	mov    dl,0xf2
  42246a:	sub    DWORD PTR [edi+0x5c],ebp
  42246d:	and    ebp,DWORD PTR [ecx]
  42246f:	das    
  422470:	inc    esi
  422471:	gs pop ss
  422473:	test   BYTE PTR [ecx],0x9e
  422476:	jb     0x4224e4
  422478:	push   cs
  422479:	imul   edx,DWORD PTR [edx-0x2e18bf35],0x7d7bf81a
  422483:	and    esi,DWORD PTR [eax-0x15eca25a]
  422489:	jbe    0x422453
  42248b:	shl    DWORD PTR [ebp+0x3e],0x88
  42248f:	loopne 0x42249c
  422491:	daa    
  422492:	loopne 0x42248a
  422494:	fwait
  422495:	ret    
  422496:	ds push edx
  422498:	(bad)  
  422499:	mov    ch,0xaa
  42249b:	imul   ecx,DWORD PTR [ecx+0x29],0x95f97a78
  4224a2:	fistp  QWORD PTR [esi]
  4224a4:	push   0x4d
  4224a6:	adc    eax,0x3a4d986e
  4224ab:	xor    DWORD PTR [eax+0x5b],0x6f4c2eac
  4224b2:	aas    
  4224b3:	dec    edx
  4224b4:	es cli 
  4224b6:	mov    edx,0x9b738b84
  4224bb:	popa   
  4224bc:	sar    DWORD PTR [ebx],0x14
  4224bf:	jl     0x4224fe
  4224c1:	les    esp,FWORD PTR ds:0xf38aa903
  4224c7:	sar    BYTE PTR [edx],1
  4224c9:	idiv   BYTE PTR [ebx]
  4224cb:	popa   
  4224cc:	fistp  DWORD PTR [edi+0x1]
  4224cf:	sub    al,0x5
  4224d1:	cmp    al,0xe5
  4224d3:	aam    0xc6
  4224d5:	lahf   
  4224d6:	(bad)  
  4224d8:	dec    edi
  4224d9:	xchg   esp,eax
  4224da:	out    0x74,al
  4224dc:	cmp    BYTE PTR [edi],ch
  4224de:	aad    0x4c
  4224e0:	push   eax
  4224e1:	add    al,BYTE PTR [eax+0x65]
  4224e4:	inc    esi
  4224e5:	call   0xc806:0xd0aa45bc
  4224ec:	pop    ebp
  4224ed:	cwde   
  4224ee:	div    esp
  4224f0:	rol    DWORD PTR [edi+ebp*4+0x24],0x18
  4224f5:	push   0xffffffc9
  4224f7:	jb     0x4224aa
  4224f9:	jp     0x42255e
  4224fb:	scas   al,BYTE PTR es:[edi]
  4224fc:	adc    ch,BYTE PTR [edi-0x2d]
  4224ff:	mov    dh,0x29
  422501:	rcr    BYTE PTR [esi],1
  422503:	shr    BYTE PTR [edi+0x5133271d],0x37
  42250a:	sub    DWORD PTR [edi],eax
  42250c:	mov    esi,?
  42250e:	mov    edi,0x502ab238
  422513:	jmp    DWORD PTR [edi+0x26c2219e]
  422519:	xchg   ebx,eax
  42251a:	int3   
  42251b:	sbb    edx,DWORD PTR [edx]
  42251d:	mov    eax,0xf9842487
  422522:	pop    esi
  422523:	dec    esp
  422524:	les    edi,FWORD PTR [edi+0x797f7915]
  42252a:	fwait
  42252b:	mov    eax,ds:0xf28a3561
  422530:	pop    es
  422531:	add    eax,0x774db308
  422536:	inc    ebp
  422537:	sahf   
  422538:	pop    esi
  422539:	stos   BYTE PTR es:[edi],al
  42253a:	ret    
  42253b:	in     eax,dx
  42253c:	or     ebx,0x1ad3c795
  422542:	push   edx
  422543:	jnp    0x422557
  422545:	fld    TBYTE PTR [eax]
  422547:	mov    ebx,0x64a82bf0
  42254c:	ret    
  42254d:	ds push esi
  42254f:	fmul   QWORD PTR [ebx]
  422551:	inc    ecx
  422552:	dec    esi
  422553:	mov    cl,BYTE PTR [edx-0x8ea80fd]
  422559:	mov    dh,0x84
  42255b:	loope  0x422504
  42255d:	dec    ebx
  42255e:	mov    bl,0x75
  422560:	mov    dh,BYTE PTR [ebx]
  422562:	rcl    BYTE PTR [esi-0x193ffb8c],0x91
  422569:	test   eax,0xaa3ee903
  42256e:	add    dh,bl
  422570:	in     al,dx
  422571:	daa    
  422572:	sti    
  422573:	repz mov esp,0xb943eecc
  422579:	popf   
  42257a:	pop    es
  42257b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42257c:	push   cs
  42257d:	inc    edi
  42257e:	cmp    al,BYTE PTR [edi+0x2a4af3b1]
  422584:	nop
  422585:	cld    
  422586:	mov    DWORD PTR [ecx-0x47],esi
  422589:	cmp    eax,0xda32966a
  42258e:	mov    edi,DWORD PTR [edi+0x22]
  422591:	cld    
  422592:	test   ecx,edi
  422594:	jmp    DWORD PTR [ebx]
  422596:	mov    ah,0x14
  422598:	aaa    
  422599:	mov    ds:0xdf96c056,al
  42259e:	popf   
  42259f:	call   0xd2f6:0xd159f546
  4225a6:	and    al,0x3b
  4225a8:	leave  
  4225a9:	mov    bl,0x14
  4225ab:	sub    DWORD PTR [edi-0x68],ebp
  4225ae:	mov    esi,0xaed8200e
  4225b3:	xchg   BYTE PTR [eax+0x2ff4991e],cl
  4225b9:	(bad)  
  4225ba:	push   ebx
  4225bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225bc:	imul   esp,ebp,0x1a4ab8b2
  4225c2:	jecxz  0x4225dc
  4225c4:	push   es
  4225c5:	ins    BYTE PTR es:[edi],dx
  4225c6:	mov    bh,0x7
  4225c8:	jecxz  0x422565
  4225ca:	mov    edi,0xde1c17b2
  4225cf:	aam    0xf5
  4225d1:	push   eax
  4225d2:	call   FWORD PTR [edx+0x395b066b]
  4225d8:	pop    ss
  4225d9:	push   esp
  4225da:	pop    esp
  4225db:	mov    dl,0x4
  4225dd:	lods   eax,DWORD PTR ds:[esi]
  4225de:	pop    ebp
  4225df:	cli    
  4225e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e1:	iret   
  4225e2:	pushf  
  4225e3:	cs es xchg ebx,eax
  4225e6:	(bad)  
  4225e7:	fwait
  4225e8:	jne    0x42260f
  4225ea:	mov    ebp,0x5351a032
  4225ef:	push   es
  4225f0:	or     BYTE PTR [ebx+0x2ed87af2],ch
  4225f6:	ja     0x42266e
  4225f8:	leave  
  4225f9:	sbb    eax,0xa0f22e54
  4225fe:	pop    edi
  4225ff:	sti    
  422600:	lods   eax,DWORD PTR ds:[esi]
  422601:	stos   DWORD PTR es:[edi],eax
  422602:	popf   
  422603:	stos   BYTE PTR es:[edi],al
  422604:	add    eax,0x83a3b3ef
  422609:	enter  0xc697,0xe6
  42260d:	and    eax,0x56c65f37
  422612:	outs   dx,DWORD PTR ds:[esi]
  422613:	pop    ebp
  422614:	in     al,dx
  422615:	sbb    al,0xea
  422617:	sub    dl,bl
  422619:	xchg   ecx,eax
  42261a:	imul   esi,DWORD PTR [edi-0xce9f6ac],0xfffffffe
  422621:	mov    ds:0x5c879c53,eax
  422626:	out    dx,eax
  422627:	dec    ecx
  422628:	jns    0x422697
  42262a:	test   BYTE PTR [edx],bl
  42262c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42262d:	fwait
  42262e:	mov    esi,0x25a4b088
  422633:	(bad)
  422637:	add    dl,BYTE PTR [edx]
  422639:	pop    esp
  42263a:	lds    ebp,FWORD PTR [edx+0x35]
  42263d:	ins    BYTE PTR es:[edi],dx
  42263e:	cli    
  42263f:	mov    al,0xe3
  422641:	jae    0x4226b9
  422643:	mov    eax,ds:0xca601e96
  422648:	aaa    
  422649:	inc    ebp
  42264a:	xchg   DWORD PTR [edx+0x63],ecx
  42264d:	lods   al,BYTE PTR ds:[esi]
  42264e:	out    dx,eax
  42264f:	out    dx,al
  422650:	mov    dl,al
  422652:	xlat   BYTE PTR ds:[ebx]
  422653:	shl    DWORD PTR [ebp+eax*2-0x624e30d6],0xc9
  42265b:	aas    
  42265c:	stos   BYTE PTR es:[edi],al
  42265d:	mov    ecx,0x7357f36a
  422662:	mov    bl,dl
  422664:	push   ebx
  422665:	lods   eax,DWORD PTR ds:[esi]
  422666:	xchg   ecx,eax
  422667:	hlt    
  422668:	adc    cl,BYTE PTR [ecx-0x3e4e6ba7]
  42266e:	arpl   WORD PTR cs:[bp-0x61],bx
  422673:	bound  eax,QWORD PTR ds:0xfa86457d
  422679:	aas    
  42267a:	mov    ecx,DWORD PTR [edx-0x28]
  42267d:	jmp    0x8efecae0
  422682:	jp     0x4226bf
  422684:	and    DWORD PTR [ebp-0x66],0x97b9af09
  42268b:	retf   
  42268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42268d:	cmp    BYTE PTR [esi+0x643c3c24],cl
  422693:	in     eax,dx
  422694:	js     0x4226b9
  422696:	push   ecx
  422697:	mov    dh,0x3c
  422699:	xchg   edi,eax
  42269a:	jg     0x422650
  42269c:	jo     0x4226ee
  42269e:	ds xchg edi,eax
  4226a0:	mov    esp,0x7f9b0a58
  4226a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a6:	nop
  4226a7:	jmp    0x4226d1
  4226a9:	out    dx,eax
  4226aa:	or     DWORD PTR [edx],ecx
  4226ac:	(bad)  
  4226ae:	xor    ch,BYTE PTR [ecx+edi*1]
  4226b1:	mov    esi,esp
  4226b3:	dec    ebx
  4226b4:	stos   BYTE PTR es:[edi],al
  4226b5:	dec    edi
  4226b6:	(bad)  
  4226b7:	js     0x4226f7
  4226b9:	pop    eax
  4226ba:	mov    ds:0x25c678b3,al
  4226bf:	sysenter 
  4226c1:	loope  0x4226db
  4226c3:	jecxz  0x4226c6
  4226c5:	into   
  4226c6:	imul   esp,DWORD PTR [edx],0xffffff8d
  4226c9:	and    eax,0xd4413519
  4226ce:	xchg   ebx,eax
  4226cf:	fmulp  st(5),st
  4226d1:	xchg   esi,eax
  4226d2:	push   0x614ee56c
  4226d7:	mov    ah,0x41
  4226d9:	jne    0x4226b4
  4226db:	(bad)  
  4226dc:	mov    ebp,0x2bb49898
  4226e1:	inc    esi
  4226e2:	jecxz  0x4226b3
  4226e4:	pslld  mm2,QWORD PTR [ebp-0x5c]
  4226e8:	fs sbb eax,0x898ecfa
  4226ee:	inc    ebx
  4226ef:	push   ebp
  4226f0:	push   es
  4226f1:	jo     0x422762
  4226f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f4:	shl    BYTE PTR [ebx-0x47],0x4f
  4226f8:	sub    cl,bl
  4226fa:	out    0xed,eax
  4226fc:	mov    edx,0x1b37d94a
  422701:	pop    esp
  422702:	ds scas eax,DWORD PTR es:[edi]
  422704:	inc    edi
  422705:	scas   eax,DWORD PTR es:[edi]
  422706:	adc    BYTE PTR [ebx-0x30],ch
  422709:	cmp    ah,al
  42270b:	into   
  42270c:	cli    
  42270d:	pop    edx
  42270f:	fwait
  422710:	inc    ebx
  422711:	mov    BYTE PTR [eax],ah
  422713:	sbb    ecx,esi
  422715:	push   eax
  422716:	loop   0x4226af
  422718:	clc    
  422719:	aad    0xb3
  42271b:	mov    dl,0x5
  42271d:	lods   al,BYTE PTR ds:[esi]
  42271e:	fwait
  42271f:	xchg   edx,eax
  422720:	dec    esp
  422721:	inc    eax
  422722:	push   edi
  422723:	out    dx,eax
  422724:	mov    bl,0x46
  422726:	mov    ah,0x8b
  422728:	adc    al,BYTE PTR [esi+0x5e]
  42272b:	pop    ebp
  42272c:	jae    0x42271e
  42272e:	loop   0x4226d4
  422730:	mov    cl,0x35
  422732:	gs jno 0x42276f
  422735:	adc    bh,bl
  422737:	mov    esp,0xa4bc629c
  42273c:	xchg   edi,eax
  42273d:	xor    dh,BYTE PTR [edi-0x5c4fc76d]
  422743:	ror    edi,0x66
  422746:	cmp    dh,BYTE PTR gs:[edi]
  422749:	ds ret 
  42274b:	fnstcw WORD PTR [esi]
  42274d:	jmp    0x5dc0d987
  422752:	aas    
  422753:	jo     0x422711
  422755:	push   cs
  422756:	pop    es
  422757:	lods   eax,DWORD PTR ds:[esi]
  422758:	add    al,0x89
  42275a:	mov    ds:0xb2d8a7e5,al
  42275f:	cmp    DWORD PTR [edi+ecx*8],esp
  422762:	in     al,dx
  422763:	out    dx,al
  422764:	mov    bl,0x36
  422766:	jo     0x42278c
  422768:	mov    esi,0x69569778
  42276d:	jno    0x422754
  42276f:	nop
  422770:	and    ebp,DWORD PTR [edx+0x8]
  422773:	and    al,0xa1
  422775:	in     al,0xe1
  422777:	shr    DWORD PTR [edi-0x62],1
  42277a:	fistp  WORD PTR [edi+0x6d]
  42277d:	mov    ds:0xae9be73f,al
  422782:	repz or DWORD PTR gs:[edi+esi*4-0x6785154f],edi
  42278b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42278c:	and    esi,DWORD PTR ds:0x3e899eb3
  422792:	pushf  
  422793:	(bad)  
  422794:	fmulp  st(0),st
  422796:	retf   
  422797:	sub    DWORD PTR [ecx+0x17ef3d7b],edx
  42279d:	xor    edx,DWORD PTR [eax-0x4a]
  4227a0:	cli    
  4227a1:	leave  
  4227a2:	div    DWORD PTR [edi]
  4227a4:	push   cs
  4227a5:	push   eax
  4227a6:	arpl   WORD PTR [edx],dx
  4227a8:	push   ss
  4227a9:	out    dx,al
  4227aa:	sbb    esp,0x79161d41
  4227b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b1:	aad    0x97
  4227b3:	push   ds
  4227b4:	popa   
  4227b5:	and    dl,BYTE PTR ds:0xdb4d41b
  4227bb:	shl    BYTE PTR [edi+0x31ff89da],cl
  4227c1:	mov    BYTE PTR [ebx],cl
  4227c3:	in     al,0xdf
  4227c5:	test   DWORD PTR [edi-0x19bce8],ebx
  4227cb:	imul   ebx,DWORD PTR [ebx+ecx*1-0x64],0x98411179
  4227d3:	fs gs data16 (bad) 
  4227d7:	nop
  4227d8:	xor    eax,0xdfdd6317
  4227dd:	rcl    DWORD PTR [eax-0x5f68539f],cl
  4227e3:	xor    eax,0xdbcff05
  4227e8:	adc    al,0x1a
  4227ea:	push   ebx
  4227eb:	std    
  4227ec:	shl    ah,cl
  4227ee:	and    edi,DWORD PTR [ebx+0x7db15282]
  4227f4:	ss (bad) 
  4227f6:	iret   
  4227f7:	ds or  al,0x1c
  4227fa:	mov    edi,?
  4227fc:	push   0xe709d49e
  422801:	js     0x42280e
  422803:	jp     0x4227c2
  422805:	(bad)  
  422806:	sbb    dl,dh
  422808:	sub    DWORD PTR [esi-0x67f8e0b4],esp
  42280e:	sahf   
  42280f:	push   0xffffffba
  422811:	mov    WORD PTR [ebx],?
  422813:	dec    ebx
  422814:	mov    bl,0x5c
  422816:	jno    0x42280c
  422818:	idiv   BYTE PTR [edx+edi*2-0x38b8910c]
  42281f:	sbb    bl,BYTE PTR [edi+0x87af740]
  422825:	lds    ecx,FWORD PTR [esi+0x56]
  422828:	push   ebp
  422829:	add    al,0xef
  42282b:	out    0x9b,al
  42282d:	(bad)  
  42282e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42282f:	jmp    FWORD PTR [esi-0x586d0e3e]
  422835:	add    eax,0xbe71ec9d
  42283a:	xchg   esp,eax
  42283b:	aas    
  42283c:	push   ss
  42283d:	or     ecx,esp
  42283f:	adc    BYTE PTR ds:0x58b3,ah
  422844:	jl     0x422836
  422846:	int3   
  422847:	repz out dx,al
  422849:	mov    edx,0x699ab27a
  42284e:	mov    al,ds:0xc0516ba7
  422853:	inc    BYTE PTR [ebx]
  422855:	sub    eax,0xccb07233
  42285a:	call   0x6bd4fdd3
  42285f:	add    ebx,ebp
  422861:	(bad)
  422864:	leave  
  422865:	adc    al,0x63
  422867:	or     edi,DWORD PTR [ebx+0x62]
  42286a:	jle    0x4228b6
  42286c:	pop    edx
  42286d:	jne    0x42286a
  42286f:	aas    
  422870:	cmp    bl,dh
  422872:	int    0x76
  422874:	test   al,0x47
  422876:	lahf   
  422877:	jnp    0x422832
  422879:	lahf   
  42287a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42287b:	mov    ecx,0x615a4092
  422880:	xor    BYTE PTR [ebp-0x10af10c3],ch
  422886:	jnp    0x42286a
  422888:	loope  0x4228e5
  42288a:	jmp    0x8474f5c1
  42288f:	pop    ebx
  422890:	call   0xc3bfac43
  422895:	pop    ss
  422896:	rol    BYTE PTR [ecx+0x43],cl
  422899:	dec    esp
  42289a:	or     BYTE PTR [edi+eiz*2],bh
  42289d:	inc    ebp
  42289e:	iret   
  42289f:	fldcw  WORD PTR [eax]
  4228a1:	retf   0xe874
  4228a4:	cwde   
  4228a5:	and    eax,0xb5838cb6
  4228aa:	(bad)  
  4228ac:	xchg   DWORD PTR [eax+0x5b260d89],esp
  4228b2:	xchg   ecx,eax
  4228b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228b4:	mov    edx,0x4cbb77e7
  4228b9:	shr    DWORD PTR [ecx+0x19],1
  4228bc:	xchg   BYTE PTR [edx+0x60b768fc],ah
  4228c2:	dec    ebp
  4228c3:	out    dx,al
  4228c4:	adc    BYTE PTR [edx+0x2c],al
  4228c7:	and    al,0x99
  4228c9:	or     ch,ch
  4228cb:	in     eax,dx
  4228cc:	lea    eax,[ecx+0x68f5cffb]
  4228d2:	ds cmp al,0x12
  4228d5:	les    edi,FWORD PTR [esi]
  4228d7:	sti    
  4228d8:	pop    ebx
  4228d9:	cld    
  4228da:	xchg   ebp,eax
  4228db:	div    DWORD PTR [eax+0xb]
  4228de:	mov    ds:0xce14a057,eax
  4228e3:	sub    eax,0xdef315e0
  4228e8:	mov    al,ds:0x7f8feff5
  4228ed:	cmp    esi,0x41
  4228f0:	(bad)  
  4228f2:	iret   
  4228f3:	adc    cl,BYTE PTR [esi-0x2e]
  4228f6:	(bad)  
  4228f7:	jmp    0x42289b
  4228f9:	sub    BYTE PTR [ecx-0x64],bl
  4228fc:	std    
  4228fd:	adc    al,0x4c
  4228ff:	xor    BYTE PTR [ebx-0x6b7edac4],0x70
  422906:	(bad)  
  422907:	push   0xee526c51
  42290c:	bound  esi,QWORD PTR [edi-0x60]
  42290f:	cmp    esp,DWORD PTR [edx+eiz*8-0x4c]
  422913:	int    0x6d
  422915:	addr16 jge 0x4228bb
  422918:	(bad)  
  422919:	adc    eax,0xdbcd4315
  42291e:	repz adc edi,ecx
  422921:	(bad)  
  422922:	retf   
  422923:	lahf   
  422924:	mov    al,ds:0x4c9a409c
  422929:	xor    ch,BYTE PTR [ecx+0x408fa402]
  42292f:	inc    eax
  422930:	out    dx,al
  422931:	jo     0x4229aa
  422933:	and    al,0x34
  422935:	ins    BYTE PTR es:[edi],dx
  422936:	pop    es
  422937:	add    eax,DWORD PTR [eax+ecx*8-0x71d16c22]
  42293e:	or     DWORD PTR [ecx],ebx
  422940:	clc    
  422941:	outs   dx,DWORD PTR ds:[esi]
  422942:	xor    DWORD PTR [ecx],edx
  422944:	mov    eax,0x858d4f2a
  422949:	div    DWORD PTR [esi+0x77]
  42294c:	jbe    0x42294b
  42294e:	scas   eax,DWORD PTR es:[edi]
  42294f:	enter  0xda97,0x2c
  422953:	adc    eax,0x44c2e823
  422958:	sti    
  422959:	adc    eax,DWORD PTR [esi+ecx*4+0x2157ea34]
  422960:	loop   0x4228ed
  422962:	jae    0x42295a
  422964:	js     0x4229c4
  422966:	int3   
  422967:	cli    
  422968:	ins    BYTE PTR es:[edi],dx
  422969:	xchg   ecx,eax
  42296a:	sub    bl,0x3b
  42296d:	stos   BYTE PTR es:[edi],al
  42296e:	mov    dl,0x51
  422970:	mov    bh,0xeb
  422972:	fstp   DWORD PTR [esp+edi*8]
  422975:	jp     0x422969
  422977:	mov    ebp,0x36d4e9f9
  42297c:	lods   eax,DWORD PTR ds:[esi]
  42297d:	cmp    esi,esi
  42297f:	adc    eax,0x7594fc0b
  422984:	jg     0x42298d
  422986:	imul   edx,DWORD PTR [edx],0xfbbe5dc9
  42298c:	adc    DWORD PTR [ecx+0x45ebe16b],esi
  422992:	add    al,0xd3
  422994:	retf   0xbe10
  422997:	xchg   DWORD PTR [ebx+ecx*2+0x48eef8c6],eax
  42299e:	cmp    BYTE PTR [esi-0x49],0x78
  4229a2:	rcl    BYTE PTR [esi-0x53],1
  4229a5:	lods   eax,DWORD PTR cs:[si]
  4229a8:	(bad)  
  4229a9:	or     eax,0xc9200a85
  4229ae:	add    eax,0xc25bd96a
  4229b3:	pop    ebp
  4229b4:	bnd jo 0x422a1c
  4229b7:	jb     0x422989
  4229b9:	out    dx,al
  4229ba:	xchg   ecx,eax
  4229bb:	idiv   BYTE PTR [eax+eiz*1+0x470bb7cd]
  4229c2:	sbb    BYTE PTR [ebx],ah
  4229c4:	push   0xffffffc6
  4229c6:	inc    edx
  4229c7:	shl    BYTE PTR [esi],cl
  4229c9:	mov    ah,0xb4
  4229cb:	cmp    ebx,DWORD PTR [ecx-0x3beac6bd]
  4229d1:	ret    
  4229d2:	mov    al,0xcb
  4229d4:	jnp    0x422a30
  4229d6:	leave  
  4229d7:	les    esi,FWORD PTR [eax-0x7e983a03]
  4229dd:	dec    eax
  4229de:	fsub   QWORD PTR [edi]
  4229e0:	fs inc eax
  4229e2:	push   ebp
  4229e3:	fwait
  4229e4:	cmc    
  4229e5:	pop    esp
  4229e6:	sbb    eax,0x35cb162
  4229eb:	mov    bl,dh
  4229ed:	outs   dx,BYTE PTR ds:[esi]
  4229ee:	fs jl  0x4229c6
  4229f1:	cld    
  4229f2:	out    dx,al
  4229f3:	sysenter 
  4229f5:	fdivr  QWORD PTR [ebp-0x2d]
  4229f8:	ja     0x4229f3
  4229fa:	xchg   esp,eax
  4229fb:	outs   dx,BYTE PTR ds:[esi]
  4229fc:	test   DWORD PTR [ebp+edi*2+0x2684f107],ebx
  422a03:	xchg   ebp,eax
  422a04:	iret   
  422a05:	pop    edx
  422a06:	dec    esi
  422a07:	sub    al,0xc1
  422a09:	notrack call edx
  422a0c:	xor    DWORD PTR [eax],esp
  422a0e:	neg    ch
  422a10:	mov    esp,0xb62b1da6
  422a15:	and    DWORD PTR [esi+0x5d401e03],0xbad0bdd8
  422a1f:	sbb    al,0x7f
  422a21:	push   ebp
  422a22:	shl    DWORD PTR [ebx],0xe6
  422a25:	out    0xb0,eax
  422a27:	nop
  422a28:	and    edi,ebx
  422a2a:	or     bh,ch
  422a2c:	sbb    al,0xa2
  422a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a2f:	jnp    0x422a95
  422a31:	or     DWORD PTR [edi],edx
  422a33:	sub    eax,0x12911ee2
  422a38:	int3   
  422a39:	out    0xd0,al
  422a3b:	pop    ss
  422a3c:	sbb    bl,bh
  422a3e:	or     eax,0x86cb5b42
  422a43:	rdtsc  
  422a45:	data16 or BYTE PTR [ebx],0xff
  422a49:	das    
  422a4a:	inc    eax
  422a4b:	inc    ecx
  422a4c:	sbb    esi,DWORD PTR [ebp+0x6c0ae553]
  422a52:	shr    DWORD PTR [esi+0x15831a44],1
  422a58:	mov    esp,0x83c5d205
  422a5d:	jbe    0x422aa0
  422a5f:	enter  0x2ab0,0xe
  422a63:	mov    bh,0x3f
  422a65:	adc    edi,esi
  422a67:	or     DWORD PTR [esi],esp
  422a69:	retf   
  422a6a:	sub    esi,ecx
  422a6c:	xlat   BYTE PTR ds:[ebx]
  422a6d:	sbb    BYTE PTR [ebp+0xa],al
  422a70:	jl     0x4229f4
  422a72:	add    bl,BYTE PTR [ebp-0x45ba2713]
  422a78:	into   
  422a79:	add    ah,BYTE PTR [esi-0x3575cbb]
  422a7f:	loop   0x422a2e
  422a81:	jne    0x422abf
  422a83:	loopne 0x422a2a
  422a85:	test   al,0x36
  422a87:	out    dx,al
  422a88:	test   eax,0x588404b8
  422a8d:	mov    ah,al
  422a8f:	push   ebx
  422a90:	(bad)  [esi]
  422a92:	mov    al,0x51
  422a94:	jne    0x422ae0
  422a96:	fdivp  st(0),st
  422a98:	mov    ch,0xcb
  422a9a:	into   
  422a9b:	mov    edx,esp
  422a9d:	pop    esp
  422a9e:	data16 lahf 
  422aa0:	lahf   
  422aa1:	in     al,dx
  422aa2:	shl    al,cl
  422aa4:	add    BYTE PTR [ebx],bh
  422aa6:	fwait
  422aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aa8:	pushf  
  422aa9:	pop    ss
  422aaa:	mov    esi,DWORD PTR [eax]
  422aac:	push   ds
  422aad:	data16 div BYTE PTR [ecx]
  422ab0:	xchg   ebp,eax
  422ab1:	jmp    0x422aef
  422ab3:	fs xchg ecx,eax
  422ab5:	inc    esp
  422ab6:	pop    ebx
  422ab7:	ret    0xb720
  422aba:	cld    
  422abb:	js     0x422a84
  422abd:	pop    ds
  422abe:	jg     0x422b10
  422ac0:	inc    esp
  422ac1:	(bad)  
  422ac2:	dec    edi
  422ac3:	repnz fsubr QWORD PTR [ebp+0x1e]
  422ac7:	xchg   ebx,eax
  422ac8:	fwait
  422ac9:	jl     0x422af9
  422acb:	adc    edi,DWORD PTR [edx-0x66dc7dff]
  422ad1:	sub    al,0x27
  422ad3:	xor    DWORD PTR [eax+0x64],esp
  422ad6:	adc    eax,0x2ccd26b4
  422adb:	stos   BYTE PTR es:[edi],al
  422adc:	imul   eax,DWORD PTR [ebp+0x5e],0xcfcab8a0
  422ae3:	inc    ecx
  422ae4:	(bad)  
  422ae5:	jg     0x422aa2
  422ae7:	pop    eax
  422ae8:	xchg   ebx,eax
  422ae9:	xor    al,0xa3
  422aeb:	gs mov cl,0x59
  422aee:	clc    
  422aef:	and    dl,al
  422af1:	push   ds
  422af2:	and    DWORD PTR gs:0x6f5c0cf7,ecx
  422af9:	inc    eax
  422afa:	ret    
  422afb:	imul   dl
  422afd:	inc    eax
  422afe:	or     eax,0x5800bcce
  422b03:	xor    eax,0x337dbd8e
  422b08:	inc    esp
  422b09:	rol    BYTE PTR [ecx],1
  422b0b:	add    edi,DWORD PTR ds:0x5806a86d
  422b11:	ja     0x422b35
  422b13:	push   ds
  422b14:	push   ss
  422b15:	jae    0x422b4e
  422b17:	fild   QWORD PTR [ecx+0x3c]
  422b1a:	or     esi,DWORD PTR [eax-0x31]
  422b1d:	sbb    eax,0x234340c6
  422b22:	std    
  422b23:	mov    gs:0x8f328d33,al
  422b29:	mov    DWORD PTR [ecx-0xa],esi
  422b2c:	inc    esp
  422b2d:	pop    edi
  422b2e:	lahf   
  422b2f:	hlt    
  422b30:	retf   0x8808
  422b33:	inc    ebp
  422b34:	test   DWORD PTR [ebx+0x42a11306],ecx
  422b3a:	mov    ah,0x68
  422b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b3d:	push   edx
  422b3e:	(bad)  
  422b3f:	add    BYTE PTR [esi+0x75],al
  422b42:	outs   dx,BYTE PTR ds:[esi]
  422b43:	jnp    0x422b2c
  422b45:	add    DWORD PTR [eax-0x54332f71],ebp
  422b4b:	cwde   
  422b4c:	es dec eax
  422b4e:	fsub   DWORD PTR [ebx+edx*2+0x6c]
  422b52:	or     al,0xe7
  422b54:	pop    ebx
  422b55:	popa   
  422b56:	push   edx
  422b57:	(bad)  
  422b58:	call   DWORD PTR [ebx-0x48]
  422b5b:	push   esi
  422b5c:	mov    dh,0x6
  422b5e:	or     DWORD PTR [esi+ebp*8],esi
  422b61:	sub    al,0x44
  422b63:	sub    al,0x95
  422b65:	scas   eax,DWORD PTR es:[edi]
  422b66:	into   
  422b67:	sub    DWORD PTR [edi+0x6fd772f1],edx
  422b6d:	into   
  422b6e:	mov    DWORD PTR [ecx],0x9a4d8dfb
  422b74:	mov    ecx,0x4d0bc353
  422b79:	jg     0x422b6b
  422b7b:	div    BYTE PTR [ecx-0x34]
  422b7e:	retf   
  422b7f:	cmp    al,0xb0
  422b81:	mov    eax,0x5390524f
  422b86:	pmulhrw mm1,QWORD PTR [edx-0x3b]
  422b8b:	or     eax,0xb1c942dd
  422b90:	xchg   ebx,eax
  422b91:	fwait
  422b92:	cdq    
  422b93:	retf   
  422b94:	aad    0xf6
  422b96:	dec    eax
  422b97:	xchg   ecx,eax
  422b98:	daa    
  422b99:	cmp    DWORD PTR [edi+ebx*4-0x23],edi
  422b9d:	sub    edi,ebp
  422b9f:	mov    ch,0xc8
  422ba1:	mov    dh,0x72
  422ba3:	adc    ch,ch
  422ba5:	out    dx,eax
  422ba6:	call   0x3972:0xbace7d6d
  422bad:	mov    DWORD PTR [ebx-0x344e3339],edi
  422bb3:	dec    ebx
  422bb4:	ret    
  422bb5:	je     0x422c2f
  422bb7:	sub    DWORD PTR es:[esi+0x20946856],edx
  422bbe:	icebp  
  422bbf:	repnz dec edx
  422bc1:	cmp    al,0xc9
  422bc3:	ret    
  422bc4:	mov    bl,0x71
  422bc6:	dec    esi
  422bc7:	and    ah,dh
  422bc9:	mov    ecx,0x4c24dab7
  422bce:	mov    dl,0x29
  422bd0:	mov    ds:0xf1b40f31,eax
  422bd5:	out    0xca,al
  422bd7:	hlt    
  422bd8:	push   esi
  422bd9:	push   es
  422bda:	cmp    al,0x6d
  422bdc:	mov    ch,0x80
  422bde:	pop    ds
  422bdf:	(bad)  
  422be0:	int    0xf1
  422be2:	jne    0x422b96
  422be4:	clc    
  422be5:	sbb    al,0x6
  422be7:	inc    esi
  422be8:	jnp    0x422b8a
  422bea:	mov    cl,0x8e
  422bec:	jmp    0x141d:0xf64c2cdb
  422bf3:	mov    esi,edi
  422bf5:	cwde   
  422bf6:	rcr    DWORD PTR [ebx],1
  422bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bf9:	pop    ss
  422bfa:	pop    es
  422bfb:	add    esi,eax
  422bfd:	and    ch,ch
  422bff:	adc    DWORD PTR [bp+di],edi
  422c02:	xchg   edx,eax
  422c03:	adc    edi,DWORD PTR [ecx]
  422c05:	das    
  422c06:	lds    ecx,FWORD PTR [ebx+0x76ac258c]
  422c0c:	sbb    al,0x5a
  422c0e:	call   0xf33bdac4
  422c13:	mov    bl,BYTE PTR [edx+0x18]
  422c16:	xchg   edi,eax
  422c17:	pop    eax
  422c18:	sub    al,0x1e
  422c1a:	les    ebp,FWORD PTR [eax+eax*8-0x2f]
  422c1e:	or     DWORD PTR [esi-0x354200fa],0xffffff84
  422c25:	in     al,0x13
  422c27:	cmp    al,ch
  422c29:	(bad)  
  422c2a:	call   0xe081da2c
  422c2f:	mov    eax,0xb835abf5
  422c34:	cmp    ebp,edx
  422c36:	mov    bl,0x80
  422c38:	xor    al,0x9e
  422c3a:	sbb    eax,0x79614cc4
  422c3f:	or     al,0x8
  422c41:	pop    ebx
  422c42:	add    al,0xb2
  422c44:	lods   eax,DWORD PTR ds:[esi]
  422c45:	xchg   edi,eax
  422c46:	mov    cl,BYTE PTR [edx-0x59f0f648]
  422c4c:	ficomp DWORD PTR [esp+ebp*1]
  422c4f:	jl     0x422c7d
  422c51:	fisubr WORD PTR [ebx+0x6a]
  422c54:	jl     0x422c82
  422c56:	neg    BYTE PTR [ecx+0x62]
  422c59:	in     eax,dx
  422c5a:	pop    esi
  422c5b:	mov    edi,0xdb43dc3c
  422c60:	addr16 push ss
  422c62:	call   0xc7eb2fb8
  422c67:	cli    
  422c68:	cmp    BYTE PTR [esi],0xf
  422c6b:	adc    DWORD PTR fs:[esi-0x7a],edi
  422c6f:	scas   eax,DWORD PTR es:[edi]
  422c70:	jp     0x422c9f
  422c72:	jmp    0xc84e:0xf6ddfd76
  422c79:	cld    
  422c7a:	xchg   ebp,eax
  422c7b:	or     BYTE PTR [ebx-0x45279c49],cl
  422c81:	jbe    0x422c3d
  422c83:	lods   al,BYTE PTR ds:[esi]
  422c84:	push   ss
  422c85:	dec    edi
  422c86:	inc    esp
  422c87:	mov    dl,0xe3
  422c89:	push   0x103831ae
  422c8e:	ficomp DWORD PTR [esi-0x1a81cc23]
  422c94:	xchg   DWORD PTR [eax],ebp
  422c96:	mov    ss,WORD PTR [ecx]
  422c98:	cli    
  422c99:	jae    0x422c30
  422c9b:	cdq    
  422c9c:	fwait
  422c9d:	(bad)  
  422c9e:	in     eax,dx
  422c9f:	jb     0x422c80
  422ca1:	push   esi
  422ca2:	mov    ebp,0x6c5c9f01
  422ca7:	xor    al,0x30
  422ca9:	pop    eax
  422caa:	push   ebp
  422cab:	stos   DWORD PTR es:[edi],eax
  422cac:	fisttp WORD PTR [edx]
  422cae:	cld    
  422caf:	jg     0x422c6e
  422cb1:	mov    ebx,0x839a1535
  422cb6:	add    eax,0x4d99c350
  422cbb:	dec    esp
  422cbc:	leave  
  422cbd:	sbb    DWORD PTR ds:0xb71c7acc,0xffffff88
  422cc4:	xor    eax,0x337306fd
  422cc9:	ins    DWORD PTR es:[edi],dx
  422cca:	stos   DWORD PTR es:[edi],eax
  422ccb:	in     al,dx
  422ccc:	daa    
  422ccd:	(bad)  
  422cce:	adc    bl,BYTE PTR [ebp+eiz*1-0x54]
  422cd2:	adc    eax,0x9f43f661
  422cd7:	jae    0x422cbb
  422cd9:	sub    DWORD PTR ds:[eax],esi
  422cdc:	fsubr  QWORD PTR [edi-0x4988f51d]
  422ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ce3:	pop    edx
  422ce4:	mov    DWORD PTR [edx-0x1d],esi
  422ce7:	mov    ebx,0x27f0d3bf
  422cec:	jmp    0x422ce0
  422cee:	or     al,0x10
  422cf0:	das    
  422cf1:	and    edi,DWORD PTR [edi+0x37]
  422cf4:	or     al,0x84
  422cf6:	shr    DWORD PTR [esi],cl
  422cf8:	repz scas eax,DWORD PTR es:[edi]
  422cfa:	stos   DWORD PTR es:[edi],eax
  422cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cfc:	adc    al,0xc
  422cfe:	leave  
  422cff:	jb     0x422cc3
  422d01:	fdiv   QWORD PTR [ebx]
  422d03:	lods   al,BYTE PTR ds:[esi]
  422d04:	jp     0x422d3e
  422d06:	push   edi
  422d07:	ficom  WORD PTR ds:0x78faaf4e
  422d0d:	scas   eax,DWORD PTR es:[edi]
  422d0e:	(bad)  
  422d0f:	sub    edi,DWORD PTR [ecx+0x5c]
  422d12:	fcom   DWORD PTR [edx-0x58]
  422d15:	in     al,dx
  422d16:	aad    0x21
  422d18:	ins    DWORD PTR es:[edi],dx
  422d19:	fisttp WORD PTR [ecx-0x4487b578]
  422d1f:	sahf   
  422d20:	and    ecx,edx
  422d22:	jb     0x422d4b
  422d24:	lods   eax,DWORD PTR ds:[esi]
  422d25:	dec    eax
  422d26:	jne    0x422ccb
  422d28:	push   ecx
  422d29:	xchg   ebx,eax
  422d2a:	stos   DWORD PTR es:[edi],eax
  422d2b:	cmp    al,bh
  422d2d:	retf   
  422d2e:	sar    DWORD PTR ds:0xfe2ce5b3,cl
  422d34:	scas   eax,DWORD PTR es:[edi]
  422d35:	lods   al,BYTE PTR ds:[esi]
  422d36:	jl     0x422d58
  422d38:	loop   0x422d21
  422d3a:	rcr    BYTE PTR [eax],1
  422d3c:	mov    BYTE PTR [edi],bh
  422d3e:	xchg   ebp,eax
  422d3f:	jp     0x422d51
  422d41:	mov    esi,0x8eadc5cb
  422d46:	lds    eax,FWORD PTR [edx+0x3d]
  422d49:	jle    0x422da8
  422d4b:	or     bh,BYTE PTR [eax+ecx*1]
  422d4e:	mov    esp,0xcd256419
  422d53:	(bad)  
  422d54:	inc    ebx
  422d55:	sbb    DWORD PTR [edi+eax*2+0x4e214a9a],0xb4d884e9
  422d60:	pop    ds
  422d61:	in     eax,dx
  422d62:	daa    
  422d63:	push   ds
  422d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d65:	pop    eax
  422d66:	sub    DWORD PTR [edx+0x254677a4],edx
  422d6c:	add    cl,al
  422d6e:	and    dh,BYTE PTR [ebx+0x26]
  422d71:	imul   ebp,ecx,0xffffff86
  422d74:	call   0x92eccd6e
  422d79:	mov    al,0x1d
  422d7b:	scas   al,BYTE PTR es:[edi]
  422d7c:	rcr    DWORD PTR [edx],1
  422d7e:	aas    
  422d7f:	mov    ecx,0x4c2ff737
  422d84:	cmp    dl,ch
  422d86:	jbe    0x422dcd
  422d88:	call   DWORD PTR ds:0x87af0050
  422d8e:	pop    ds
  422d8f:	push   es
  422d90:	hlt    
  422d91:	pop    es
  422d92:	inc    ecx
  422d93:	and    eax,0x84ba7e6
  422d98:	xchg   BYTE PTR [edx+0x4282acb4],cl
  422d9e:	jmp    0x7ca3ee6a
  422da3:	stos   DWORD PTR es:[edi],eax
  422da4:	push   esi
  422da5:	mov    eax,ds:0x2eccd0ed
  422daa:	imul   ebp,DWORD PTR [eax-0x32],0xcc377919
  422db1:	and    BYTE PTR [edx-0x1f],cl
  422db4:	mov    ebx,DWORD PTR [ebx-0x20]
  422db7:	push   ebp
  422db8:	pop    ebp
  422db9:	mov    ecx,0x1edd3f8a
  422dbe:	retf   
  422dbf:	(bad)  
  422dc0:	call   FWORD PTR [ecx+0xc]
  422dc3:	sub    al,0xbf
  422dc5:	sbb    eax,0x8be36247
  422dca:	xor    BYTE PTR [edi-0x2c4edbc5],0xa4
  422dd1:	(bad)
  422dd4:	dec    ebp
  422dd5:	std    
  422dd6:	in     al,dx
  422dd7:	sahf   
  422dd8:	dec    edi
  422dd9:	inc    edi
  422dda:	sbb    BYTE PTR [esi-0x150a8002],ah
  422de0:	push   ss
  422de1:	idiv   BYTE PTR [edi+0xbec2b67]
  422de7:	lahf   
  422de8:	sbb    ecx,DWORD PTR [eax-0x4e]
  422deb:	dec    edx
  422dec:	xchg   ebp,eax
  422ded:	daa    
  422dee:	xchg   ecx,eax
  422def:	sub    edi,ecx
  422df1:	pop    es
  422df2:	call   0x51908e13
  422df7:	(bad)  
  422df9:	push   0xda576fad
  422dfe:	fist   DWORD PTR [edx-0x48]
  422e01:	mov    esi,0x26005b12
  422e06:	mov    ds:0xdf529a52,al
  422e0b:	sub    al,0xda
  422e0d:	pusha  
  422e0e:	jge    0x422e00
  422e10:	jle    0x422dd2
  422e12:	xchg   ecx,eax
  422e13:	or     ebp,ebx
  422e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e16:	sbb    al,dh
  422e18:	inc    ecx
  422e19:	jmp    0x6574:0x8a25a041
  422e20:	test   edx,ecx
  422e22:	loop   0x422e21
  422e24:	lea    eax,[esp+ebp*8+0x8cfe260]
  422e2b:	popa   
  422e2c:	call   0x6c24e1df
  422e31:	xor    al,BYTE PTR [edx+0x44e950c8]
  422e37:	xor    BYTE PTR [ecx+0x53],dh
  422e3a:	jecxz  0x422e11
  422e3c:	retf   
  422e3d:	out    0x36,al
  422e3f:	das    
  422e40:	js     0x422df7
  422e42:	sbb    DWORD PTR [eax+0x10],edi
  422e45:	push   edi
  422e46:	mov    WORD PTR [edx-0x59],gs
  422e49:	les    ebx,FWORD PTR [ecx]
  422e4b:	sbb    al,0xdb
  422e4d:	fdivr  DWORD PTR [esi]
  422e4f:	pop    ebp
  422e50:	imul   ecx,DWORD PTR [ecx-0x16],0xffffffd9
  422e54:	push   esp
  422e55:	xchg   esi,eax
  422e56:	scas   al,BYTE PTR es:[edi]
  422e57:	nop
  422e58:	or     BYTE PTR [edi+0x4],ah
  422e5b:	adc    ah,BYTE PTR [ebp+edi*1-0xb]
  422e5f:	jg     0x422e73
  422e61:	dec    esp
  422e62:	sub    esi,esp
  422e64:	dec    eax
  422e65:	mov    ds,WORD PTR [edi]
  422e67:	ret    0x304
  422e6a:	fld    DWORD PTR [ebp+0x16]
  422e6d:	ss pop ecx
  422e6f:	mov    ch,0xb6
  422e71:	enter  0x806c,0x6e
  422e75:	lods   al,BYTE PTR ds:[esi]
  422e76:	mov    bl,0xb0
  422e78:	retf   
  422e79:	ror    DWORD PTR [eax-0x7a],1
  422e7c:	xchg   ebp,eax
  422e7d:	rcr    ecx,0x2e
  422e80:	xchg   esi,eax
  422e81:	out    0x32,eax
  422e83:	adc    bl,BYTE PTR [esi]
  422e85:	fisub  WORD PTR [edx-0x2def5576]
  422e8b:	xor    al,0x93
  422e8d:	es hlt 
  422e8f:	mov    ds:0x4bfd050,al
  422e94:	xor    BYTE PTR [edx+0x67f41a98],0x80
  422e9b:	dec    ebx
  422e9c:	into   
  422e9d:	(bad)  
  422e9e:	pusha  
  422e9f:	in     al,0xb0
  422ea1:	popf   
  422ea2:	jne    0x422f0e
  422ea4:	dec    edx
  422ea5:	xchg   DWORD PTR [eax-0x24],esi
  422ea8:	mov    al,0xf6
  422eaa:	fisub  WORD PTR [eax]
  422eac:	stos   BYTE PTR es:[edi],al
  422ead:	call   DWORD PTR [edi-0x6ac2a61f]
  422eb3:	inc    ebp
  422eb4:	in     eax,0x9a
  422eb6:	sbb    eax,0x70436a91
  422ebb:	out    dx,eax
  422ebc:	inc    esp
  422ebd:	je     0x422f3e
  422ebf:	js     0x422e4e
  422ec1:	jg     0x422e47
  422ec3:	leave  
  422ec4:	adc    DWORD PTR ds:0x991ee143,0x34668008
  422ece:	dec    ebx
  422ecf:	imul   esi,DWORD PTR [esp+ebx*8+0x39],0x70
  422ed4:	xor    eax,0xd66cddf0
  422ed9:	cmp    DWORD PTR [edi-0x7b80058],edi
  422edf:	push   edx
  422ee0:	pop    edx
  422ee1:	mov    bh,0xbd
  422ee3:	mov    ebx,0xa0a5a987
  422ee8:	nop
  422ee9:	jbe    0x422f2c
  422eeb:	(bad)  
  422eec:	push   edx
  422eed:	ins    BYTE PTR es:[edi],dx
  422eee:	jg     0x422f52
  422ef0:	ja     0x422f65
  422ef2:	jle    0x422f52
  422ef4:	out    0x74,eax
  422ef6:	test   DWORD PTR [edi-0x5b2b4e5d],esi
  422efc:	pop    ebx
  422efd:	jl     0x422f30
  422eff:	popf   
  422f00:	or     al,0xaa
  422f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f03:	adc    bh,BYTE PTR [ecx+ebp*8]
  422f06:	xor    DWORD PTR [edx+ebp*1],eax
  422f09:	icebp  
  422f0a:	and    eax,0x7dd64e0f
  422f0f:	jns    0x422f0e
  422f11:	adc    DWORD PTR [edx+0x4e],edx
  422f14:	shl    DWORD PTR [eax+0x7dce57fc],0xa2
  422f1b:	ror    BYTE PTR [ebp-0x5e0cad00],0xe9
  422f22:	mov    al,0x52
  422f24:	mov    bl,0x32
  422f26:	lds    ecx,FWORD PTR [esi]
  422f28:	call   ebx
  422f2a:	mov    bl,0x15
  422f2c:	jo     0x422ed9
  422f2e:	dec    edi
  422f2f:	xchg   ebp,eax
  422f30:	dec    ecx
  422f31:	popa   
  422f32:	jecxz  0x422edd
  422f34:	hlt    
  422f35:	imul   edx,DWORD PTR [edx],0x15da151e
  422f3b:	(bad)  
  422f3c:	cmp    DWORD PTR [ebp+0x27e086e3],ebp
  422f42:	int3   
  422f43:	fist   DWORD PTR [edi]
  422f45:	aad    0xc0
  422f47:	fwait
  422f48:	push   edi
  422f49:	ret    
  422f4a:	mov    ebx,0x21fde7ae
  422f4f:	call   0x823b:0xa74c99dd
  422f56:	cmp    ah,BYTE PTR [esi-0x80]
  422f59:	mov    ebx,0xa255b870
  422f5e:	loope  0x422fbb
  422f60:	xchg   DWORD PTR [ebx+0x1],ebx
  422f63:	jno    0x422fa6
  422f65:	js     0x422f94
  422f67:	and    eax,0x6d3a67a3
  422f6c:	xchg   ebp,eax
  422f6d:	jmp    0x422f6a
  422f6f:	icebp  
  422f70:	aaa    
  422f71:	sub    cl,BYTE PTR [ebx]
  422f73:	shr    BYTE PTR [edx+0x5045428d],cl
  422f79:	sbb    ebx,DWORD PTR [esi]
  422f7b:	ror    al,0x42
  422f7e:	add    DWORD PTR [esp+esi*8-0x71f4f505],ebx
  422f85:	lea    ebx,[eax]
  422f87:	cdq    
  422f88:	fisub  DWORD PTR [edx]
  422f8a:	hlt    
  422f8b:	(bad)  
  422f8c:	cmc    
  422f8d:	pop    DWORD PTR [ebx+0x265bc44]
  422f93:	dec    ebx
  422f94:	fwait
  422f95:	mov    edi,0x7d6d5689
  422f9a:	mov    ds:0x9524599c,al
  422f9f:	bound  ecx,QWORD PTR [ecx]
  422fa1:	loop   0x422f5a
  422fa3:	shl    cl,1
  422fa5:	stos   DWORD PTR es:[edi],eax
  422fa6:	dec    esp
  422fa7:	int3   
  422fa8:	in     eax,0x3a
  422faa:	(bad)
  422fad:	cmp    al,0xda
  422faf:	mov    dl,0x97
  422fb1:	mov    eax,ds:0x953b86d0
  422fb6:	xchg   edx,eax
  422fb7:	out    dx,eax
  422fb8:	hlt    
  422fb9:	pop    ebx
  422fba:	mov    edx,0xb597ccea
  422fbf:	xor    eax,0xd4e3d623
  422fc4:	mov    bl,0x2
  422fc6:	inc    edi
  422fc7:	or     DWORD PTR [ebx+edx*1+0x601b0a21],eax
  422fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fcf:	mov    dl,0xef
  422fd1:	call   0xbba:0x73c7e98d
  422fd8:	cdq    
  422fd9:	shl    BYTE PTR [eax-0x34],cl
  422fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fdd:	pop    ds
  422fde:	ins    BYTE PTR es:[edi],dx
  422fdf:	inc    esi
  422fe0:	cli    
  422fe1:	clc    
  422fe2:	jno    0x422f84
  422fe4:	pop    ebx
  422fe5:	outs   dx,BYTE PTR ds:[esi]
  422fe6:	pop    ecx
  422fe7:	ja     0x422fe4
  422fe9:	jecxz  0x423037
  422feb:	sub    BYTE PTR [edx-0x45],0x56
  422fef:	aam    0xdb
  422ff1:	fimul  DWORD PTR [ebp+0xeff3ee2]
  422ff7:	cmp    dh,BYTE PTR [eax]
  422ff9:	fmul   st(1),st
  422ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ffc:	scas   al,BYTE PTR es:[edi]
  422ffd:	cmp    al,0x34
  422fff:	addr16 sub eax,ecx
  423002:	jns    0x42303c
  423004:	push   ecx
  423005:	sbb    edi,DWORD PTR [esi+0x72]
  423008:	in     al,dx
  423009:	xchg   BYTE PTR [edx+0x7798d578],ch
  42300f:	fisttp WORD PTR [edx]
  423011:	mov    dh,0x5a
  423013:	cmp    al,0xc2
  423015:	mov    edi,DWORD PTR [edi]
  423017:	clc    
  423018:	xchg   ecx,eax
  423019:	nop
  42301a:	mov    ebp,0x75d76ff6
  42301f:	mov    edx,0x680e97b
  423024:	mov    ah,0x3c
  423026:	cmp    al,0x28
  423028:	bound  ebx,QWORD PTR [ebx-0x2aa915ad]
  42302e:	outs   dx,DWORD PTR ds:[esi]
  42302f:	xor    eax,0x67f153b0
  423034:	cmc    
  423035:	(bad)  
  423037:	mov    dh,0xca
  423039:	xchg   ecx,eax
  42303a:	push   edi
  42303b:	and    DWORD PTR [ebp*1+0x40e63916],ecx
  423042:	in     al,dx
  423043:	mov    ebp,0x7538daf8
  423048:	sbb    al,0x61
  42304a:	in     al,0x10
  42304c:	pop    ebx
  42304d:	pushf  
  42304e:	pop    ebx
  42304f:	out    0x6a,al
  423051:	jle    0x423085
  423053:	jp     0x42305e
  423055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423056:	scas   eax,DWORD PTR es:[edi]
  423057:	mov    eax,0x4b6c6f40
  42305c:	ins    DWORD PTR es:[edi],dx
  42305d:	out    dx,eax
  42305e:	gs in  al,dx
  423060:	mov    dl,0x32
  423062:	mov    al,ds:0x2df53214
  423067:	sbb    dh,BYTE PTR [ecx+0x23]
  42306a:	push   ds
  42306b:	hlt    
  42306c:	out    0x71,al
  42306e:	cld    
  42306f:	ja     0x423022
  423071:	add    eax,0xbc22fb53
  423076:	mov    bh,0x56
  423078:	or     al,0xf7
  42307a:	ret    0x21f6
  42307d:	jge    0x423058
  42307f:	sub    ah,BYTE PTR [eax-0x2a83b797]
  423085:	inc    ebx
  423086:	int3   
  423087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423088:	fadd   QWORD PTR [eax-0xfae61af]
  42308e:	fnsave [edi-0x5d9ecc73]
  423094:	push   esi
  423095:	in     al,dx
  423096:	pop    ss
  423097:	in     eax,0xd1
  423099:	les    edi,FWORD PTR [eax]
  42309b:	(bad)  
  42309c:	outs   dx,DWORD PTR ds:[esi]
  42309d:	mov    bl,0xa7
  42309f:	mov    esp,0x142fc696
  4230a4:	int    0xa7
  4230a6:	addr16 cs mov bl,0x9e
  4230aa:	clc    
  4230ab:	paddd  mm6,QWORD PTR [ebx+ebp*4]
  4230af:	dec    ecx
  4230b0:	sbb    BYTE PTR [edi+eiz*8],ch
  4230b3:	mov    bh,0x19
  4230b5:	push   esi
  4230b6:	or     BYTE PTR [ebp+0x433b4d2b],ch
  4230bc:	inc    eax
  4230bd:	jecxz  0x42307d
  4230bf:	mov    dh,0x37
  4230c1:	das    
  4230c2:	mov    esi,0x8f97c928
  4230c7:	sahf   
  4230c8:	in     eax,0xf4
  4230ca:	jmp    DWORD PTR [edi-0x5b]
  4230cd:	mov    dl,0x1f
  4230cf:	sub    bl,BYTE PTR [edx]
  4230d1:	pop    ss
  4230d2:	cmp    DWORD PTR [edi+0xb76df9],ebp
  4230d8:	mov    edi,DWORD PTR [esi+edx*1-0x3af29d88]
  4230df:	cmovbe ebp,DWORD PTR [esi]
  4230e2:	sub    ebx,DWORD PTR [ebx-0x10fc6aec]
  4230e8:	xor    al,0xab
  4230ea:	or     BYTE PTR [edx-0x12324a2b],cl
  4230f0:	xor    eax,0xfe1c803d
  4230f5:	and    BYTE PTR [eax+0xa],dl
  4230f8:	mov    ds:0x871168bc,eax
  4230fd:	sbb    edx,DWORD PTR [esi-0x28]
  423100:	hlt    
  423101:	stos   DWORD PTR es:[edi],eax
  423102:	cmp    BYTE PTR [ecx],ch
  423104:	pop    ebp
  423105:	sub    al,0xf2
  423107:	jecxz  0x423113
  423109:	mov    dh,0x1d
  42310b:	pop    ss
  42310c:	fprem  
  42310e:	test   DWORD PTR [edx+0x1da1db6c],ecx
  423114:	sbb    ebp,edx
  423116:	inc    esp
  423117:	push   esp
  423118:	pop    es
  423119:	jb     0x423136
  42311b:	mov    ecx,0x5f9db91e
  423120:	test   BYTE PTR [eax-0x3b6a60cc],ch
  423126:	int    0xb3
  423128:	sbb    DWORD PTR [ecx],esi
  42312a:	mov    ebp,0x5304b095
  42312f:	mov    cs,esi
  423131:	sbb    BYTE PTR [ecx+esi*1],bh
  423134:	mov    es,WORD PTR [edi-0x6867c4e9]
  42313a:	mov    ecx,0x9e418ca7
  42313f:	sti    
  423140:	int3   
  423141:	sbb    DWORD PTR [edx+0x45],0xffffffeb
  423145:	aad    0x99
  423147:	fs pop esp
  423149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42314a:	or     al,0x98
  42314c:	adc    BYTE PTR [ecx+0x3a],dl
  42314f:	jmp    0x4231be
  423151:	inc    edx
  423152:	pop    esp
  423153:	push   0x654fe908
  423158:	inc    ecx
  423159:	popf   
  42315a:	nop
  42315b:	jmp    0x21e85842
  423160:	retf   0x5b
  423163:	jle    0x4230f5
  423165:	bound  eax,QWORD PTR [ebx]
  423167:	inc    ecx
  423168:	sbb    dh,BYTE PTR [edi]
  42316a:	add    ebp,DWORD PTR [edi]
  42316c:	dec    ecx
  42316d:	outs   dx,DWORD PTR ds:[esi]
  42316e:	or     ecx,ebx
  423170:	iret   
  423171:	dec    eax
  423172:	xor    ah,BYTE PTR [esi+0x6472806f]
  423178:	dec    ebp
  423179:	hlt    
  42317a:	in     al,dx
  42317b:	fs dec eax
  42317d:	mov    ebx,0x87f3b6dc
  423182:	push   edi
  423183:	jo     0x423134
  423185:	in     al,dx
  423186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423187:	ins    DWORD PTR es:[edi],dx
  423188:	arpl   WORD PTR [edx+0x48febbd],ax
  42318e:	call   0xcd4d:0x165625eb
  423195:	gs dec edi
  423197:	jp     0x423204
  423199:	(bad)  
  42319a:	mov    ah,0x21
  42319c:	cmp    WORD PTR [esi+0x2d],ax
  4231a0:	iret   
  4231a1:	ins    BYTE PTR es:[edi],dx
  4231a2:	enter  0xde00,0xfa
  4231a6:	test   DWORD PTR [ecx-0x4806be52],edi
  4231ac:	ror    BYTE PTR [esi+0x78],0x67
  4231b0:	fiadd  WORD PTR [eax-0x6df5f65a]
  4231b6:	in     eax,0xe5
  4231b8:	mov    ds:0xadeaa54e,eax
  4231bd:	inc    esp
  4231be:	out    dx,al
  4231bf:	pop    edx
  4231c0:	push   cs
  4231c1:	popf   
  4231c2:	jae    0x42319f
  4231c4:	jmp    0xb38b:0xefe13aa
  4231cb:	imul   BYTE PTR [ebp-0x54db0a9c]
  4231d1:	xor    BYTE PTR [eax+eiz*2-0x40],bh
  4231d5:	je     0x4231e2
  4231d7:	sub    BYTE PTR [ebp+0x25c1bcd9],al
  4231dd:	ds stos BYTE PTR es:[edi],al
  4231df:	adc    dl,BYTE PTR [edx+0x38662c7c]
  4231e5:	or     BYTE PTR [ebx],0x50
  4231e8:	jmp    0x18fc:0x9b0cc4a9
  4231ef:	jp     0x42319e
  4231f1:	hlt    
  4231f2:	inc    eax
  4231f3:	call   0x8635:0x976fcf1f
  4231fa:	cmp    al,BYTE PTR [edx+0x23]
  4231fd:	add    al,0x18
  4231ff:	mov    al,0x68
  423201:	adc    ecx,DWORD PTR [esi]
  423203:	lods   al,BYTE PTR ds:[esi]
  423204:	cmp    ebp,edi
  423206:	dec    eax
  423207:	mov    bh,0x26
  423209:	cmp    al,0x4a
  42320b:	lds    eax,FWORD PTR [ecx]
  42320d:	imul   esi,DWORD PTR [edi-0x34ef1f14],0x5e9284fd
  423217:	xchg   esi,eax
  423218:	push   ebp
  423219:	push   0x48
  42321b:	cwde   
  42321c:	fistp  QWORD PTR [eax+0x3a4496cf]
  423222:	jp     0x42326e
  423224:	or     al,0x9d
  423226:	mov    WORD PTR [ebx],ss
  423228:	push   edx
  423229:	push   es
  42322a:	or     esp,DWORD PTR [esi-0x4]
  42322d:	add    BYTE PTR ds:0x650952de,dl
  423233:	fst    QWORD PTR [edx-0x21]
  423236:	(bad)  
  423238:	(bad)  
  423239:	and    eax,0x9963577
  42323e:	push   esi
  42323f:	lahf   
  423240:	rol    DWORD PTR [ebx-0x53],1
  423243:	scas   al,BYTE PTR es:[edi]
  423244:	mov    ds:0xbb1bbc5d,al
  423249:	stos   DWORD PTR es:[edi],eax
  42324a:	sub    DWORD PTR [esi],eax
  42324c:	add    dl,ah
  42324e:	fist   DWORD PTR [ebx]
  423250:	leave  
  423251:	dec    eax
  423252:	sbb    ecx,edx
  423254:	stc    
  423255:	pusha  
  423256:	push   0x3d
  423258:	gs aaa 
  42325a:	rol    DWORD PTR [ebp+0x7f1f767f],1
  423260:	stos   DWORD PTR es:[edi],eax
  423261:	mov    al,0x56
  423263:	and    BYTE PTR [ebx+ebx*2+0x7e],ch
  423267:	mov    WORD PTR [edx+edi*8+0x60],ss
  42326b:	mov    ah,0x24
  42326d:	adc    WORD PTR [ecx-0x134c8d65],bx
  423274:	aam    0x87
  423276:	faddp  st(7),st
  423278:	or     dh,al
  42327a:	in     al,0x2d
  42327c:	push   es
  42327d:	aam    0x3d
  42327f:	icebp  
  423280:	clc    
  423281:	sub    BYTE PTR [edx+0x5f],bh
  423284:	xor    al,0xfb
  423286:	mov    cl,0xc5
  423288:	dec    ebx
  423289:	mov    ds:0x3308e81e,eax
  42328e:	icebp  
  42328f:	adc    eax,0x93eed502
  423294:	mov    ecx,0x303b6b08
  423299:	mov    ds:0x2a86e414,eax
  42329e:	loop   0x42328d
  4232a0:	mov    WORD PTR [esp+edi*2+0x6f],?
  4232a4:	stos   DWORD PTR es:[edi],eax
  4232a5:	mov    esp,0x56ab9a88
  4232aa:	and    al,0x86
  4232ac:	lods   al,BYTE PTR ds:[esi]
  4232ad:	xchg   ecx,eax
  4232ae:	pop    eax
  4232af:	mov    ebx,edi
  4232b1:	popa   
  4232b2:	cmp    DWORD PTR [ebp-0x50],edi
  4232b5:	sti    
  4232b6:	inc    esi
  4232b7:	xchg   esp,eax
  4232b8:	cs js  0x423318
  4232bb:	pop    edi
  4232bc:	add    cl,0xc1
  4232bf:	sbb    bh,BYTE PTR [edx+eax*1]
  4232c2:	or     al,0x8
  4232c4:	pushf  
  4232c5:	pop    ecx
  4232c6:	scas   eax,DWORD PTR es:[edi]
  4232c7:	cmp    DWORD PTR [edx],esp
  4232c9:	pushf  
  4232ca:	in     al,dx
  4232cb:	pushf  
  4232cc:	in     al,0xdc
  4232ce:	neg    DWORD PTR [esi+0x30ea0423]
  4232d4:	xchg   esi,eax
  4232d5:	stos   DWORD PTR es:[edi],eax
  4232d6:	fs mov bl,0xe
  4232d9:	loop   0x423326
  4232db:	xor    BYTE PTR [edi+0x2],dh
  4232de:	out    dx,al
  4232df:	in     al,dx
  4232e0:	loop   0x423297
  4232e2:	lods   al,BYTE PTR ds:[esi]
  4232e3:	xor    al,BYTE PTR [ecx-0x23]
  4232e6:	sbb    eax,0x27fb2c49
  4232eb:	stc    
  4232ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ed:	push   es
  4232ee:	sbb    BYTE PTR [edx],dl
  4232f0:	or     eax,0xeff7325d
  4232f5:	mov    ah,0xc9
  4232f7:	sub    bh,BYTE PTR es:[eax-0x2c]
  4232fb:	jge    0x4232a8
  4232fd:	mov    eax,ds:0x4d07cfc9
  423302:	frstor [esp+ecx*1]
  423305:	dec    ebx
  423306:	or     DWORD PTR [edx+0x1],edi
  423309:	or     BYTE PTR [edx+0x30],dl
  42330c:	loopne 0x42330d
  42330e:	aad    0xbe
  423310:	imul   ecx,edx,0x6d
  423313:	cmp    cl,ch
  423315:	mov    eax,0xabd31dfd
  42331a:	jae    0x4232b1
  42331c:	xor    DWORD PTR [ecx],0x48
  42331f:	cmp    al,0x7f
  423321:	sub    BYTE PTR [esi+0x45],dl
  423324:	scas   al,BYTE PTR es:[edi]
  423325:	lods   al,BYTE PTR ds:[esi]
  423326:	mov    edx,0x8f544014
  42332b:	adc    edi,ebx
  42332d:	dec    eax
  42332e:	push   esp
  42332f:	stos   DWORD PTR es:[edi],eax
  423330:	push   esp
  423331:	ja     0x423377
  423333:	fild   QWORD PTR [eax+0x37]
  423336:	out    dx,eax
  423337:	pop    esp
  423338:	jne    0x423369
  42333a:	aam    0x46
  42333c:	push   0x6c04a477
  423341:	or     edi,ebx
  423343:	lock mov edx,0x8c10bf2e
  423349:	fist   DWORD PTR [ecx+eiz*8]
  42334c:	test   BYTE PTR ds:0x981f09c9,dh
  423352:	pop    ds
  423353:	imul   esi,DWORD PTR [edi],0x26
  423356:	(bad)  
  423357:	call   0xd238b1b7
  42335c:	movd   DWORD PTR [eax-0x68],mm1
  423360:	dec    ecx
  423361:	jno    0x423308
  423363:	pop    esp
  423364:	cld    
  423365:	ret    
  423366:	adc    BYTE PTR ds:0xcdaa06ba,bh
  42336c:	mov    bh,0x91
  42336e:	pusha  
  42336f:	aas    
  423370:	iret   
  423371:	call   0xedcb:0x3925a14
  423378:	int    0x63
  42337a:	jae    0x4233aa
  42337c:	imul   ecx,ebx,0xfe66c684
  423382:	mov    esp,0xe6106575
  423387:	test   edi,ebp
  423389:	ins    BYTE PTR es:[edi],dx
  42338a:	popa   
  42338b:	test   eax,0x24f7e5b5
  423390:	test   al,0x79
  423392:	and    BYTE PTR [esi],bl
  423394:	jnp    0x42338f
  423396:	push   esi
  423397:	add    ch,BYTE PTR [edi]
  423399:	pop    eax
  42339a:	push   edi
  42339c:	cdq    
  42339d:	and    dh,dl
  42339f:	imul   ecx,DWORD PTR [ebp+0x66],0xacf2a18c
  4233a6:	lea    edi,[ebx]
  4233a8:	aas    
  4233a9:	cmp    al,0x68
  4233ab:	scas   eax,DWORD PTR es:[edi]
  4233ac:	adc    eax,0x5aa977c3
  4233b1:	or     DWORD PTR [edi-0x6],0x996c3c21
  4233b8:	loop   0x423417
  4233ba:	test   al,0x36
  4233bc:	adc    ecx,DWORD PTR [edi]
  4233be:	loope  0x4233ad
  4233c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233c1:	mov    ds:0x1f97a53d,al
  4233c6:	or     eax,0xa960e82b
  4233cb:	rcr    esi,cl
  4233cd:	cli    
  4233ce:	inc    edx
  4233cf:	cmc    
  4233d0:	sete   BYTE PTR [edx]
  4233d3:	repnz inc ebp
  4233d5:	dec    esp
  4233d6:	pusha  
  4233d7:	lds    esi,FWORD PTR [ebx-0x2c2d6bc7]
  4233dd:	push   0x1b
  4233df:	into   
  4233e0:	pop    ecx
  4233e1:	mov    ecx,0xae33cdf9
  4233e6:	(bad)  
  4233e7:	call   0xd4ed:0x4528d198
  4233ee:	mov    bh,cl
  4233f0:	ja     0x423372
  4233f2:	push   0xcf1d2318
  4233f7:	test   eax,0x4ae2ccd6
  4233fc:	enter  0x9e4a,0x16
  423400:	and    BYTE PTR ds:0x16450c93,ah
  423406:	cmc    
  423407:	arpl   WORD PTR [eax-0x111cf990],bp
  42340d:	es and al,0x56
  423410:	jge    0x42343c
  423412:	popf   
  423413:	add    BYTE PTR [ebx+ebp*4-0x6a],dh
  423417:	(bad)  
  423419:	lock in al,0x48
  42341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42341d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42341e:	sub    cl,dl
  423420:	xor    al,ch
  423422:	mov    ebx,0x63b93252
  423427:	dec    edi
  423428:	xor    DWORD PTR [edi],ecx
  42342a:	mov    ch,0xe4
  42342c:	imul   eax,ebp,0x798bced
  423432:	pushf  
  423433:	or     dl,bh
  423435:	jmp    0x1428:0x6b126566
  42343c:	repz sbb dh,BYTE PTR [ecx-0x41]
  423440:	aam    0xde
  423442:	mov    esi,0x677ae466
  423447:	pop    esp
  423448:	mul    DWORD PTR [ebx+edx*4-0x59]
  42344c:	sub    eax,0x4da1bb15
  423451:	jp     0x4233f3
  423453:	or     BYTE PTR [edx-0x73e881da],0x37
  42345a:	jge    0x423429
  42345c:	mov    edx,0xd2e6de64
  423461:	test   al,0x32
  423463:	xchg   esp,eax
  423464:	fsubp  st(7),st
  423466:	bound  ebx,QWORD PTR [ebx]
  423468:	ret    
  423469:	push   cs
  42346a:	in     eax,dx
  42346b:	push   ebp
  42346c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42346d:	pop    ss
  42346e:	jl     0x42346f
  423470:	pop    esi
  423471:	xor    ax,0xb64b
  423475:	jns    0x4234db
  423477:	inc    esp
  423478:	mov    bh,0xe2
  42347a:	mov    dh,0x73
  42347c:	jle    0x423474
  42347e:	add    BYTE PTR ds:0x6a602b20,bl
  423484:	fs or  al,0x27
  423487:	(bad)  [edi-0x55]
  42348a:	jno    0x423479
  42348c:	pop    edx
  42348d:	cmp    ebp,edx
  42348f:	cmp    eax,0x6adfb381
  423494:	iret   
  423495:	iret   
  423496:	cs mov eax,0x8cc5e5ef
  42349c:	cmp    bh,BYTE PTR [eax]
  42349e:	dec    ebx
  42349f:	imul   edx,DWORD PTR [esi],0x44
  4234a2:	repz enter 0xa2f2,0xff
  4234a7:	push   0xffffffb9
  4234a9:	and    dl,BYTE PTR [esi+ebp*4]
  4234ac:	inc    ebp
  4234ad:	cs out dx,al
  4234af:	lahf   
  4234b0:	nop
  4234b1:	pop    edx
  4234b2:	mov    cl,0x45
  4234b4:	push   ebx
  4234b5:	cmp    dh,bh
  4234b7:	mov    al,bl
  4234b9:	sbb    BYTE PTR [eax+0x77],al
  4234bc:	jmp    DWORD PTR [ebx]
  4234be:	mov    esi,0x56fcc2d
  4234c3:	and    BYTE PTR [ebp+0x2d7ac60f],0x0
  4234ca:	and    eax,0xf6bdeea0
  4234cf:	repz mov ecx,0xc2d995d3
  4234d5:	xor    eax,0x51024ae0
  4234da:	mov    eax,ds:0x6dbd3a36
  4234df:	popa   
  4234e0:	xchg   BYTE PTR [ecx],ch
  4234e2:	xchg   BYTE PTR [edi+0x43],bh
  4234e5:	sbb    eax,DWORD PTR [ebx+0x7f]
  4234e8:	cmc    
  4234e9:	sahf   
  4234ea:	jmp    0x423481
  4234ec:	mov    edx,0xbbe34110
  4234f1:	adc    DWORD PTR [ecx],ecx
  4234f3:	or     edx,DWORD PTR ds:0x909c2677
  4234f9:	(bad)  
  4234fa:	fst    DWORD PTR [edi-0x52137bbe]
  423500:	ret    0x4f4b
  423503:	arpl   WORD PTR [ebp-0x4caf4be7],si
  423509:	jne    0x4234cc
  42350b:	je     0x423496
  42350d:	inc    ecx
  42350e:	or     al,0x23
  423510:	sub    esp,esi
  423512:	mov    bl,0x9c
  423514:	scas   eax,DWORD PTR es:[edi]
  423515:	jne    0x42353a
  423517:	inc    ebx
  423518:	ja     0x42358a
  42351a:	and    DWORD PTR [eax+0x229877d7],ebx
  423520:	and    eax,0x4866659b
  423525:	in     eax,0x98
  423527:	xchg   esp,eax
  423528:	ror    DWORD PTR [edi],cl
  42352a:	mov    fs,WORD PTR [eax-0x17e7585b]
  423530:	ja     0x423578
  423532:	push   edx
  423533:	push   ds
  423534:	out    0x9e,eax
  423536:	adc    ah,BYTE PTR [esi-0x5cd3c880]
  42353c:	ins    BYTE PTR es:[edi],dx
  42353d:	inc    ebx
  42353f:	(bad)  
  423540:	ret    
  423541:	push   fs
  423543:	(bad)  
  423544:	fcmovb st,st(0)
  423546:	shr    BYTE PTR [ecx+0x6ef1dfb0],0xd5
  42354d:	lahf   
  42354e:	pop    edi
  42354f:	test   DWORD PTR [eax+eax*1],0x88c8cd7e
  423556:	and    DWORD PTR [edx+0x4],esp
  423559:	fadd   QWORD PTR [ebp+edi*8+0x19]
  42355d:	shl    BYTE PTR [edi+0x32e80fa5],1
  423563:	and    al,cl
  423565:	or     BYTE PTR [edi],ch
  423567:	and    dh,al
  423569:	rcl    BYTE PTR [edi-0x24],0x5c
  42356d:	sbb    esi,edx
  42356f:	sbb    eax,0xb98023db
  423574:	les    ebp,FWORD PTR [edx]
  423576:	ins    BYTE PTR es:[edi],dx
  423577:	popa   
  423578:	pop    ecx
  423579:	mul    DWORD PTR [ebx*1+0x13ba0b0b]
  423580:	inc    edx
  423581:	adc    eax,0x2c433ce9
  423586:	push   0x36b23d3b
  42358b:	loop   0x4235ae
  42358d:	sbb    al,0x17
  42358f:	push   es
  423590:	cdq    
  423591:	cmp    BYTE PTR ds:0x7b41d28d,al
  423597:	ss add eax,0x838f9889
  42359d:	mov    al,ds:0x48b89cb0
  4235a2:	out    dx,al
  4235a3:	rcr    DWORD PTR [ebx],1
  4235a5:	sbb    eax,0x7ffb451a
  4235aa:	fwait
  4235ab:	cmp    DWORD PTR [ebp-0x7a3ce4d1],ecx
  4235b1:	fs retf 
  4235b3:	add    esi,DWORD PTR [ebx-0x44]
  4235b6:	xchg   ebp,eax
  4235b7:	fst    DWORD PTR [edx+0x25473203]
  4235bd:	or     ecx,DWORD PTR [ebx]
  4235bf:	stos   DWORD PTR es:[edi],eax
  4235c0:	shr    BYTE PTR [eax],cl
  4235c2:	xchg   ecx,eax
  4235c3:	ss mov esi,0x384e6166
  4235c9:	cs addr16 inc eax
  4235cc:	push   ss
  4235cd:	cs jae 0x4235e4
  4235d0:	test   eax,0xa641297d
  4235d5:	push   cs
  4235d6:	mov    bl,BYTE PTR [ecx-0x392b0925]
  4235dc:	out    dx,eax
  4235dd:	clc    
  4235de:	(bad)  
  4235df:	sar    DWORD PTR [ecx],1
  4235e1:	or     edi,DWORD PTR [edi]
  4235e3:	mov    edi,0xb85ff7ae
  4235e8:	mov    eax,0x3a057f4c
  4235ed:	sub    dh,BYTE PTR [esi]
  4235ef:	xor    edx,DWORD PTR [edx]
  4235f1:	ins    DWORD PTR es:[edi],dx
  4235f2:	mov    ecx,0xca824067
  4235f7:	in     al,dx
  4235f8:	pushf  
  4235f9:	retf   0x6232
  4235fc:	pop    esi
  4235fd:	icebp  
  4235fe:	sbb    edi,edi
  423600:	sti    
  423601:	or     BYTE PTR [ebp+0x6235d589],bh
  423607:	jae    0x4235ed
  423609:	jmp    0x4edf86fd
  42360e:	or     al,BYTE PTR [ecx+edx*1+0x76]
  423612:	push   0xffffffa1
  423614:	jae    0x423636
  423616:	mov    cl,0x4b
  423618:	lea    edi,[ebx+eiz*4]
  42361b:	retf   
  42361c:	cmc    
  42361d:	repz pop eax
  42361f:	sbb    eax,0x12341141
  423624:	add    eax,0xfc4c5704
  423629:	add    ebp,DWORD PTR [ebp+0x47]
  42362c:	sub    DWORD PTR [edi],ebp
  42362e:	sbb    eax,0x324fc3bd
  423633:	stos   DWORD PTR es:[edi],eax
  423634:	jecxz  0x4236b0
  423636:	in     al,0x5f
  423638:	jno    0x4235df
  42363a:	add    DWORD PTR [ecx+0x36],edi
  42363d:	cs lahf 
  42363f:	cmp    BYTE PTR [edx],bl
  423641:	dec    esi
  423642:	mov    dh,0x41
  423644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423645:	mov    edi,0xffd1c6ce
  42364a:	sbb    al,0x66
  42364c:	jnp    0x423662
  42364e:	add    BYTE PTR [edx-0x78c18b52],dh
  423654:	ret    0x34f1
  423657:	fdiv   DWORD PTR [ebx-0x7a37d189]
  42365d:	pop    ecx
  42365e:	mov    ch,0x67
  423660:	mov    ebx,0x5ce76f48
  423665:	(bad)  
  423666:	inc    ecx
  423667:	(bad)  
  423668:	add    eax,0xee29ea83
  42366d:	repnz test DWORD PTR [edi-0x64],ebp
  423671:	aad    0x3e
  423673:	adc    al,0x4b
  423675:	dec    edx
  423676:	xlat   BYTE PTR ds:[ebx]
  423677:	cmc    
  423678:	jle    0x4236a9
  42367a:	cmp    eax,0x9f3224ce
  42367f:	xchg   cl,cl
  423681:	xchg   esi,eax
  423682:	mov    cl,0x39
  423684:	pop    esi
  423685:	jae    0x423664
  423687:	pop    es
  423688:	cmc    
  423689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42368a:	cwde   
  42368b:	jle    0x423654
  42368d:	pop    ss
  42368e:	and    BYTE PTR [eax+0x2c0cbea6],cl
  423694:	xor    eax,0xdf7b2af9
  423699:	cld    
  42369a:	jecxz  0x42366d
  42369c:	jb     0x4236c4
  42369e:	in     eax,dx
  42369f:	push   ecx
  4236a0:	test   ah,0xbd
  4236a3:	imul   BYTE PTR [esi-0x67af69b0]
  4236a9:	sbb    al,dh
  4236ab:	cwde   
  4236ac:	nop
  4236ad:	adc    al,0x48
  4236af:	shl    BYTE PTR ds:0x1fb478ed,0x46
  4236b6:	push   ecx
  4236b7:	fs es jae 0x4236a2
  4236bb:	das    
  4236bc:	cmp    eax,0xc76e7acf
  4236c1:	push   edx
  4236c2:	push   eax
  4236c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c4:	popf   
  4236c5:	and    al,0xad
  4236c7:	pop    esp
  4236c8:	add    al,0xe7
  4236ca:	sbb    eax,0x2c7b9c73
  4236cf:	jmp    0x4b9d:0x33e38b34
  4236d6:	mov    edx,0xd99c2ab6
  4236db:	scas   al,BYTE PTR es:[edi]
  4236dc:	scas   eax,DWORD PTR es:[edi]
  4236dd:	addr16 inc edx
  4236e0:	in     al,dx
  4236e1:	adc    DWORD PTR [eax-0x38154bec],0x64
  4236e8:	mov    ds,WORD PTR [ebx]
  4236ea:	push   ebp
  4236eb:	shl    BYTE PTR [esi-0x51],0x78
  4236ef:	leave  
  4236f0:	xor    BYTE PTR [eax-0x4bfe92b8],ah
  4236f6:	daa    
  4236f7:	jge    0x4236fb
  4236f9:	sub    dl,0xb8
  4236fc:	test   eax,0x8e7c7cf2
  423701:	jg     0x42372b
  423703:	push   0x65
  423705:	inc    ecx
  423706:	push   ebx
  423707:	in     al,dx
  423708:	jp     0x4236b1
  42370a:	push   cs
  42370b:	add    BYTE PTR [ecx-0xb5f62b4],0x3f
  423712:	xor    ah,bl
  423714:	icebp  
  423715:	fwait
  423716:	xor    DWORD PTR [edi+0x20],ecx
  423719:	fsubr  QWORD PTR [ebp-0x15]
  42371c:	push   esi
  42371d:	les    eax,FWORD PTR [ebx+0x72]
  423720:	push   cs
  423721:	cdq    
  423722:	fwait
  423723:	cmc    
  423724:	mov    ebp,0x23eb65fb
  423729:	aad    0xae
  42372b:	out    0xfa,al
  42372d:	xchg   ebp,eax
  42372e:	cmp    ch,bh
  423730:	cmp    al,0xad
  423732:	out    dx,al
  423733:	jno    0x423717
  423735:	arpl   WORD PTR [ebx],sp
  423737:	jb     0x4236cb
  423739:	pop    edi
  42373a:	icebp  
  42373b:	mov    ah,0xf9
  42373d:	sti    
  42373e:	and    al,0x93
  423740:	dec    eax
  423741:	push   ds
  423742:	mov    edx,0x559501c7
  423747:	imul   eax,DWORD PTR [eax],0x1d
  42374a:	gs stos DWORD PTR es:[edi],eax
  42374c:	mov    ebx,0x53dd90fb
  423751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423752:	ja     0x4236ec
  423754:	into   
  423755:	push   ss
  423756:	pop    ebp
  423757:	push   eax
  423758:	sbb    ebp,DWORD PTR [ebp-0x2e]
  42375b:	dec    ebp
  42375c:	push   edx
  42375d:	adc    edx,esi
  42375f:	sub    DWORD PTR [edi+0x27ced13c],edi
  423765:	js     0x4236ef
  423767:	inc    ebx
  423768:	mov    ds:0x18b6815a,eax
  42376d:	jge    0x42374d
  42376f:	mov    esi,0x2f7e67c9
  423774:	xchg   ebx,eax
  423775:	push   ss
  423776:	aas    
  423777:	mov    dl,0x99
  423779:	aaa    
  42377a:	(bad)  
  42377c:	out    0x67,al
  42377e:	mov    esi,DWORD PTR [ebp-0x4c]
  423781:	dec    ebp
  423782:	sub    cl,0x80
  423785:	dec    ecx
  423786:	push   esi
  423787:	jnp    0x423756
  423789:	mov    cl,0xf0
  42378b:	sub    DWORD PTR [ebx+0x2fc955ab],ebp
  423791:	arpl   WORD PTR [eax+0x5cdc3062],cx
  423797:	mov    WORD PTR [esi],es
  423799:	cmp    al,0x6b
  42379b:	xor    DWORD PTR [esi+0x495be81],eax
  4237a1:	aad    0x5a
  4237a3:	adc    esi,ebx
  4237a5:	imul   ebp,DWORD PTR [edi],0x694ce797
  4237ab:	imul   edx,edx,0x21
  4237ae:	into   
  4237af:	push   edi
  4237b0:	ffreep st(6)
  4237b2:	cmc    
  4237b3:	stos   DWORD PTR es:[edi],eax
  4237b4:	loop   0x423769
  4237b6:	(bad)  
  4237b7:	retf   0xfb3b
  4237ba:	aam    0x36
  4237bc:	push   cs
  4237bd:	sti    
  4237be:	int    0x84
  4237c0:	mov    al,ds:0xd703b783
  4237c5:	mov    eax,ds:0xffa25993
  4237ca:	fisubr DWORD PTR [eax-0x7b]
  4237cd:	rcl    BYTE PTR [esi],0xee
  4237d0:	rcl    BYTE PTR [ebp-0x16],1
  4237d3:	cmp    al,0x57
  4237d5:	scas   al,BYTE PTR es:[edi]
  4237d6:	or     BYTE PTR [eax+edi*2-0x6bca1588],bh
  4237dd:	pushf  
  4237de:	mov    ds:0xbc677224,eax
  4237e3:	inc    edi
  4237e4:	jb     0x423807
  4237e6:	out    dx,al
  4237e7:	xchg   esi,eax
  4237e8:	js     0x423843
  4237ea:	out    dx,al
  4237eb:	(bad)  
  4237ec:	aam    0xae
  4237ee:	sar    DWORD PTR [edi-0x13],0x87
  4237f2:	fidivr WORD PTR [ecx-0x439c0383]
  4237f8:	outs   dx,DWORD PTR ds:[esi]
  4237f9:	dec    esi
  4237fa:	add    eax,0x3480ba2c
  4237ff:	rol    BYTE PTR [ecx+0x5b96de6a],cl
  423805:	mov    eax,ds:0xaf861802
  42380a:	push   ebx
  42380b:	mov    ebp,0x33d91cd1
  423810:	mov    dh,0xb2
  423812:	aas    
  423813:	sbb    DWORD PTR [edi+0x6af7cac4],ebp
  423819:	sub    DWORD PTR [ecx*2-0x7e29f31],0xbd7ed0c6
  423824:	mov    al,0x76
  423826:	popa   
  423827:	push   0x3a
  423829:	xor    eax,0xa3922f60
  42382e:	mov    ds:0x2070e433,al
  423833:	xchg   ebx,eax
  423834:	gs cld 
  423836:	xor    esi,DWORD PTR [edx]
  423838:	sub    DWORD PTR es:[eax],eax
  42383b:	lock xchg edx,eax
  42383d:	push   edi
  42383e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42383f:	dec    esi
  423840:	xchg   esp,eax
  423841:	xchg   ebx,eax
  423842:	pushf  
  423843:	hlt    
  423844:	aas    
  423845:	push   eax
  423846:	xchg   esi,eax
  423847:	push   ds
  423848:	pop    eax
  423849:	xor    BYTE PTR [edx],ah
  42384b:	loop   0x4238b9
  42384d:	je     0x423835
  42384f:	scas   eax,DWORD PTR es:[edi]
  423850:	mov    ?,WORD PTR [esp+ecx*2+0x1f925425]
  423857:	sub    bl,BYTE PTR [edx-0x353bb92e]
  42385d:	out    0xc2,eax
  42385f:	sbb    ah,dh
  423861:	jns    0x423840
  423863:	sar    DWORD PTR [ebp-0x160d396f],1
  423869:	test   DWORD PTR [ebp+0x1be08006],ecx
  42386f:	imul   edi,DWORD PTR [ecx+0x49],0xa7a0a713
  423876:	xchg   edx,eax
  423877:	daa    
  423878:	mov    bh,al
  42387a:	and    al,0xee
  42387c:	in     eax,0x9
  42387e:	cld    
  42387f:	in     eax,dx
  423880:	sbb    eax,0x2045eaf3
  423885:	jo     0x423859
  423887:	adc    dl,BYTE PTR [ebx+eiz*8]
  42388a:	adc    edx,DWORD PTR [esi]
  42388c:	ins    BYTE PTR es:[edi],dx
  42388d:	(bad)  
  42388e:	cld    
  42388f:	xchg   edi,eax
  423890:	ror    BYTE PTR [ebx+0x23468a7],cl
  423896:	jecxz  0x42390b
  423898:	xor    al,0xda
  42389a:	dec    edx
  42389b:	stos   BYTE PTR es:[edi],al
  42389c:	(bad)  
  42389e:	adc    bl,BYTE PTR [ecx+0x59]
  4238a1:	adc    eax,0x8134a130
  4238a6:	fimul  WORD PTR [ebx]
  4238a8:	(bad)  
  4238a9:	or     DWORD PTR [ebx-0x5a0ad3d5],esp
  4238af:	lea    ebx,[ebx+0x51]
  4238b2:	push   ds
  4238b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b4:	sbb    al,0xe3
  4238b6:	mov    esi,0xebd3f35a
  4238bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238bc:	mov    ?,WORD PTR [eax]
  4238be:	outs   dx,BYTE PTR ds:[esi]
  4238bf:	sar    DWORD PTR [ebp-0x6a],cl
  4238c2:	pusha  
  4238c3:	and    ah,BYTE PTR [ecx]
  4238c5:	fisttp DWORD PTR [edi]
  4238c7:	xlat   BYTE PTR ds:[ebx]
  4238c8:	(bad)  
  4238c9:	(bad)  
  4238cb:	sub    al,bl
  4238cd:	mov    al,ds:0xc8b8d751
  4238d2:	daa    
  4238d3:	ss (bad) 
  4238d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d6:	inc    ebx
  4238d7:	test   eax,0x2eaf115a
  4238dc:	add    eax,DWORD PTR [esi]
  4238de:	jae    0x4238bb
  4238e0:	arpl   WORD PTR [edx+0x4b934e36],ax
  4238e6:	int3   
  4238e7:	rol    BYTE PTR [eax-0x30033254],cl
  4238ed:	or     BYTE PTR [edx-0x167ab80e],0xaa
  4238f4:	mov    ch,0xb
  4238f6:	jns    0x423899
  4238f8:	arpl   WORD PTR [ebx-0x6a],bp
  4238fb:	mov    bh,0xc
  4238fd:	ror    DWORD PTR [eax-0x736863c3],cl
  423903:	test   BYTE PTR [ebx+0x7346cf6],cl
  423909:	dec    edi
  42390a:	out    dx,al
  42390b:	fisubr WORD PTR [eax+ebp*2-0x2450f3b8]
  423912:	jns    0x423939
  423914:	mov    eax,0xfae67d95
  423919:	sbb    esp,ebp
  42391b:	sti    
  42391c:	mov    edx,0x457651df
  423921:	mov    edx,0x539e3970
  423926:	inc    eax
  423927:	scas   eax,DWORD PTR es:[edi]
  423928:	sbb    edi,DWORD PTR [ecx+0x17acb81]
  42392e:	popa   
  42392f:	loope  0x423901
  423931:	sbb    al,0xfd
  423933:	dec    edi
  423934:	or     DWORD PTR [ebx],ebp
  423936:	popf   
  423937:	xlat   BYTE PTR ds:[ebx]
  423938:	addr16 push edx
  42393a:	std    
  42393b:	lahf   
  42393c:	lds    esp,FWORD PTR [esi+ecx*2]
  42393f:	call   0x4540:0x86eb690a
  423946:	jne    0x4238d3
  423948:	test   BYTE PTR [edi+0x378ce694],ah
  42394e:	pop    ss
  42394f:	test   BYTE PTR [ebx-0x6d414d5d],al
  423955:	xchg   ebp,eax
  423956:	mov    ds:0xbbb9f342,eax
  42395b:	and    al,0xb1
  42395d:	pop    DWORD PTR [ecx+0x27949caa]
  423963:	ret    0x3799
  423966:	(bad)  
  423967:	lods   eax,DWORD PTR fs:[esi]
  423969:	(bad)
  42396c:	ficomp WORD PTR [ebp+0x51]
  42396f:	leave  
  423970:	and    bl,BYTE PTR [esi]
  423972:	xor    al,BYTE PTR [ebp-0x7a]
  423975:	sub    BYTE PTR ds:0xe4fe6aef,dh
  42397b:	cmp    BYTE PTR [ebx],0x7e
  42397e:	push   ebp
  42397f:	mov    eax,0x9780f5c2
  423984:	rol    BYTE PTR [esi+0x6b],0x6e
  423988:	sub    bh,BYTE PTR [esp+edx*2+0x3f]
  42398c:	ins    DWORD PTR es:[edi],dx
  42398d:	sbb    BYTE PTR [ecx+0x3057ce50],cl
  423993:	sub    ebp,DWORD PTR [ebx-0x7c]
  423996:	mov    edi,0xdbe38176
  42399b:	in     al,dx
  42399c:	in     al,0x10
  42399e:	stc    
  42399f:	push   ecx
  4239a0:	or     BYTE PTR [ecx+0x37a5b777],dh
  4239a6:	rep ins DWORD PTR es:[edi],dx
  4239a8:	mov    ch,0xc0
  4239aa:	jbe    0x4239a2
  4239ac:	loop   0x423931
  4239ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239af:	push   edx
  4239b0:	dec    ebx
  4239b1:	rol    BYTE PTR [edx],1
  4239b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b4:	xcrypt-ctr 
  4239b7:	jne    0x4239c1
  4239b9:	leave  
  4239ba:	jl     0x423a35
  4239bc:	jl     0x423944
  4239be:	in     al,dx
  4239bf:	fisubr WORD PTR [esp+ebx*4+0x17]
  4239c3:	mov    al,ds:0x2b1cc253
  4239c8:	stos   BYTE PTR es:[edi],al
  4239c9:	lea    edi,[esi-0x48cd8065]
  4239cf:	lods   al,BYTE PTR ds:[esi]
  4239d0:	loopne 0x423991
  4239d2:	inc    esi
  4239d3:	add    DWORD PTR [eax-0x4d3288ec],eax
  4239d9:	retf   
  4239da:	outs   dx,DWORD PTR ds:[esi]
  4239db:	and    edi,edx
  4239dd:	xor    al,0xc6
  4239df:	(bad)  
  4239e0:	clc    
  4239e1:	dec    ecx
  4239e2:	jge    0x423a2c
  4239e4:	pop    ss
  4239e5:	outs   dx,DWORD PTR ds:[esi]
  4239e6:	sbb    BYTE PTR [esi-0x75],bl
  4239e9:	std    
  4239ea:	das    
  4239eb:	jns    0x4239d5
  4239ed:	mov    bh,0x4
  4239ef:	cld    
  4239f0:	pop    DWORD PTR [esi-0x3110a538]
  4239f6:	mov    edi,DWORD PTR [esi+0x72]
  4239f9:	dec    eax
  4239fa:	das    
  4239fb:	popf   
  4239fc:	mov    al,0x10
  4239fe:	in     eax,dx
  4239ff:	test   DWORD PTR [ebp+edi*4+0x16447b91],0xca9bc118
  423a0a:	out    0x1f,al
  423a0c:	mov    ecx,0xbbd6aa69
  423a11:	mov    dl,cl
  423a13:	fimul  WORD PTR [ecx+0x68]
  423a16:	data16 jge 0x423a26
  423a19:	xor    BYTE PTR [ebp+0x55e84e54],cl
  423a1f:	aad    0x9b
  423a21:	cmp    eax,0xd007c38
  423a26:	inc    ebp
  423a27:	(bad)  
  423a28:	stos   DWORD PTR es:[edi],eax
  423a29:	out    0x3e,eax
  423a2b:	inc    edx
  423a2c:	test   DWORD PTR [ebp+0x3f4e7d5a],ebp
  423a32:	lds    ebx,FWORD PTR [eax-0x2b]
  423a35:	jbe    0x4239c1
  423a37:	scas   al,BYTE PTR es:[edi]
  423a38:	add    al,0x48
  423a3a:	mov    al,ds:0xab74b797
  423a3f:	push   es
  423a40:	stc    
  423a41:	leave  
  423a42:	pop    esp
  423a43:	mov    eax,0x8fa94fb9
  423a48:	mov    dh,0xf6
  423a4a:	or     edx,ecx
  423a4c:	outs   dx,DWORD PTR ds:[esi]
  423a4d:	aam    0x93
  423a4f:	call   0x512f960a
  423a54:	jecxz  0x423a20
  423a56:	jo     0x423a1b
  423a58:	leave  
  423a59:	jmp    0xb513686
  423a5e:	cmp    eax,0xeafdb3ef
  423a63:	popa   
  423a64:	outs   dx,BYTE PTR ds:[esi]
  423a65:	add    DWORD PTR [edi+0x4da77e3c],ebx
  423a6b:	push   edx
  423a6c:	repnz xchg ebx,eax
  423a6e:	push   0xa4bf5bb3
  423a73:	cld    
  423a74:	push   ebp
  423a75:	xor    ah,bh
  423a77:	cdq    
  423a78:	mov    WORD PTR [edx+ebp*1-0x65224225],ds
  423a7f:	mov    ds:0xb806324e,eax
  423a84:	or     eax,0xb7fcd6ea
  423a89:	or     DWORD PTR [ebp+0x3907f7e],0xb91011f1
  423a93:	sub    dl,bl
  423a95:	mov    al,BYTE PTR [ebp-0xd2badbf]
  423a9b:	sub    dh,bl
  423a9d:	sub    DWORD PTR [edi-0x43],0xb42e5b9d
  423aa4:	and    eax,edi
  423aa6:	clc    
  423aa7:	mov    ?,WORD PTR [esi+0x53]
  423aaa:	or     al,0x5e
  423aac:	das    
  423aad:	xor    ch,ch
  423aaf:	std    
  423ab0:	fs adc bh,bh
  423ab3:	pop    eax
  423ab4:	push   ds
  423ab5:	lds    esi,FWORD PTR [ebx-0x80]
  423ab8:	stos   DWORD PTR es:[edi],eax
  423ab9:	mov    edx,eax
  423abb:	cmp    eax,0x3e0c2607
  423ac0:	jne    0x423a84
  423ac2:	stos   DWORD PTR es:[edi],eax
  423ac3:	xchg   edx,eax
  423ac4:	dec    edi
  423ac5:	xor    bh,BYTE PTR [esi]
  423ac7:	push   ss
  423ac8:	and    al,0x93
  423aca:	outs   dx,DWORD PTR ds:[esi]
  423acb:	jle    0x423a89
  423acd:	int    0x7e
  423acf:	jmp    0x759d:0x29305987
  423ad6:	nop
  423ad7:	cmp    esi,DWORD PTR [edi+eax*8-0x3aa7391a]
  423ade:	cli    
  423adf:	and    eax,0x2b7507da
  423ae4:	xor    BYTE PTR gs:[eax],ah
  423ae7:	ins    BYTE PTR es:[edi],dx
  423ae8:	je     0x423b12
  423aea:	mov    ds:0x7098e258,eax
  423aef:	inc    ebx
  423af0:	clc    
  423af1:	cmp    DWORD PTR [esi+0xbc00b85],ebx
  423af7:	xor    al,0xc2
  423af9:	jl     0x423ac5
  423afb:	add    BYTE PTR [esp+eax*4+0x3d],ah
  423aff:	repnz mov bl,0x68
  423b02:	popa   
  423b03:	push   0x6b0a961c
  423b08:	jbe    0x423abb
  423b0a:	out    dx,eax
  423b0b:	fnstsw WORD PTR [ebx+ebp*1]
  423b0e:	jno    0x423b7d
  423b10:	adc    ecx,DWORD PTR [eax-0x9e15c4]
  423b16:	mov    al,0x58
  423b18:	jge    0x423b60
  423b1a:	js     0x423aee
  423b1c:	xchg   esp,eax
  423b1d:	pop    DWORD PTR [edx-0x6c201597]
  423b23:	lea    ebp,[ecx]
  423b25:	jne    0x423b76
  423b27:	or     edx,DWORD PTR [esi]
  423b29:	and    DWORD PTR [edi+0x47c7e090],edi
  423b2f:	jnp    0x423b85
  423b31:	cmp    BYTE PTR [edx+0xe35d13f],cl
  423b37:	dec    edx
  423b38:	outs   dx,DWORD PTR ds:[esi]
  423b39:	add    al,0x2c
  423b3b:	cmc    
  423b3c:	call   0xe1e0b5b4
  423b41:	enter  0x18bc,0x54
  423b45:	adc    esi,DWORD PTR [ebp+0x11]
  423b48:	inc    esi
  423b49:	aaa    
  423b4a:	pushf  
  423b4b:	sbb    DWORD PTR [eax+0x271827a1],ebx
  423b51:	mov    al,ds:0x46f54722
  423b56:	push   0xffffffa7
  423b58:	in     al,dx
  423b59:	lahf   
  423b5a:	repnz lahf 
  423b5c:	xor    dh,BYTE PTR [ecx+eax*2]
  423b5f:	(bad)  
  423b61:	dec    eax
  423b62:	xor    eax,0xf7710dc8
  423b67:	hlt    
  423b68:	aam    0xbd
  423b6a:	dec    ecx
  423b6b:	and    eax,DWORD PTR [ebx]
  423b6d:	add    BYTE PTR [edx+ecx*8],bl
  423b70:	adc    DWORD PTR [edi-0x5d0e172],esp
  423b76:	scas   eax,DWORD PTR es:[edi]
  423b77:	sbb    eax,0x8d66ec9a
  423b7c:	or     dh,BYTE PTR [edx]
  423b7e:	ss inc ecx
  423b80:	jno    0x423bf0
  423b82:	leave  
  423b83:	scas   eax,DWORD PTR es:[edi]
  423b84:	jmp    0x4fc52a7e
  423b89:	mov    es,WORD PTR [ebx-0x216223f8]
  423b8f:	xor    BYTE PTR [ebx],dl
  423b91:	das    
  423b92:	ins    DWORD PTR es:[edi],dx
  423b93:	or     al,BYTE PTR [edi]
  423b95:	bound  edx,QWORD PTR [edx+0x1e]
  423b98:	ficomp DWORD PTR [ebx+0x5d]
  423b9b:	loop   0x423bef
  423b9d:	push   edi
  423b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b9f:	jle    0x423bfb
  423ba1:	(bad)  
  423ba3:	test   DWORD PTR [edi+0x42],esi
  423ba6:	sbb    edx,DWORD PTR [ebx+0x116406af]
  423bac:	fistp  WORD PTR [ebp-0x153f502f]
  423bb2:	shld   DWORD PTR [ebx-0x76],esi,0xfe
  423bb7:	inc    ecx
  423bb8:	jmp    0xd7e72a4d
  423bbd:	or     DWORD PTR [edx-0x10beb8f7],0x7219da
  423bc7:	inc    ecx
  423bc8:	hlt    
  423bc9:	imul   eax,esp,0xffffffcd
  423bcc:	clc    
  423bcd:	out    dx,al
  423bce:	push   0x47
  423bd0:	mov    ecx,0x8b514ef3
  423bd5:	adc    cl,BYTE PTR [eax]
  423bd7:	push   cs
  423bd8:	or     eax,0x9f4f6d8e
  423bdd:	pop    ebp
  423bde:	lds    esi,FWORD PTR [edx-0x5]
  423be1:	std    
  423be2:	add    al,0xe8
  423be4:	int3   
  423be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423be6:	test   DWORD PTR [ecx+0x51f8954b],esi
  423bec:	lods   al,BYTE PTR ds:[esi]
  423bed:	hlt    
  423bee:	(bad)  
  423bef:	mov    al,ds:0xe1f0702e
  423bf4:	ja     0x423bec
  423bf6:	div    BYTE PTR [ebx+edi*2-0x1eb0478f]
  423bfd:	push   edx
  423bfe:	add    ecx,DWORD PTR [edi-0x6e361d2a]
  423c04:	iret   
  423c05:	fcomp  DWORD PTR [eax+0x1f]
  423c08:	call   0x6506:0x471755b6
  423c0f:	shl    ch,0x97
  423c12:	loope  0x423bba
  423c14:	adc    dh,dl
  423c16:	loop   0x423c7a
  423c18:	cmp    al,bl
  423c1a:	inc    esp
  423c1b:	xchg   DWORD PTR [edi],esi
  423c1d:	push   esp
  423c1e:	mov    eax,ds:0xc00b7635
  423c23:	mov    ds:0xe901ecab,al
  423c28:	cmp    al,0xc9
  423c2a:	sbb    eax,0x9fb138c2
  423c2f:	dec    esi
  423c30:	push   eax
  423c31:	mov    ds:0xc1328dce,al
  423c36:	jno    0x423c68
  423c38:	shl    bh,cl
  423c3a:	imul   edi,DWORD PTR [esi+0x19a3615b],0xffffffcb
  423c41:	(bad)  
  423c42:	out    dx,al
  423c43:	push   ebp
  423c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c45:	jge    0x423c41
  423c47:	xor    ecx,ebp
  423c49:	xchg   edi,eax
  423c4a:	xchg   esp,eax
  423c4b:	rol    BYTE PTR [eax+0x6e],cl
  423c4e:	push   eax
  423c4f:	jl     0x423c88
  423c51:	shl    DWORD PTR [ebx],1
  423c53:	popa   
  423c54:	ins    DWORD PTR es:[edi],dx
  423c55:	and    cl,al
  423c57:	mov    ds:0xa8244bb7,al
  423c5c:	and    eax,0x4ebe02d9
  423c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c62:	fld    QWORD PTR [edx+0x264a9a2]
  423c68:	pop    ecx
  423c69:	add    eax,0xed689059
  423c6e:	xlat   BYTE PTR ds:[ebx]
  423c6f:	hlt    
  423c70:	aad    0xa5
  423c72:	and    cl,BYTE PTR [eax]
  423c74:	out    dx,eax
  423c75:	inc    eax
  423c76:	and    dh,al
  423c78:	mov    al,ds:0xc9cefacf
  423c7d:	jb     0x423c0f
  423c7f:	ja     0x423cf9
  423c81:	test   al,0x97
  423c83:	inc    edi
  423c84:	inc    edx
  423c85:	sub    al,0x2d
  423c87:	ja     0x423c37
  423c89:	pop    edi
  423c8a:	mov    WORD PTR [ebp-0x70deaddd],es
  423c90:	dec    eax
  423c91:	cmp    DWORD PTR [ecx],ecx
  423c93:	push   edx
  423c94:	mov    ds:0xc9cd6a23,al
  423c99:	retf   0xa409
  423c9c:	mov    bh,cl
  423c9e:	fwait
  423c9f:	stc    
  423ca0:	lods   al,BYTE PTR ds:[esi]
  423ca1:	mov    al,0x1c
  423ca3:	icebp  
  423ca4:	out    0xed,al
  423ca6:	or     BYTE PTR [ebx+0x495a0fd],ch
  423cac:	sub    al,0xa1
  423cae:	call   0xd6a6:0x8c8dcd29
  423cb5:	cdq    
  423cb6:	and    eax,ebx
  423cb8:	scas   al,BYTE PTR es:[edi]
  423cb9:	push   esi
  423cba:	(bad)  
  423cbb:	dec    eax
  423cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cbd:	push   esi
  423cbe:	out    dx,al
  423cbf:	xor    ch,BYTE PTR [eax-0x59]
  423cc2:	call   0xebac:0xd8e77051
  423cc9:	jl     0x423cd4
  423ccb:	adc    ebp,DWORD PTR [edx]
  423ccd:	std    
  423cce:	jbe    0x423c8a
  423cd0:	mul    DWORD PTR [edi]
  423cd2:	test   DWORD PTR ds:0x69898988,eax
  423cd8:	push   0x53
  423cda:	les    ecx,FWORD PTR [ebx-0xaa0d2ae]
  423ce0:	cmp    eax,esi
  423ce2:	aas    
  423ce3:	mov    ds:0x263c2f78,eax
  423ce8:	pushf  
  423ce9:	xchg   esi,eax
  423cea:	xor    al,0x79
  423cec:	add    BYTE PTR ds:0xcff796be,bl
  423cf2:	xchg   ebx,eax
  423cf3:	mov    bh,0x49
  423cf5:	ret    0x7ce0
  423cf8:	push   edx
  423cf9:	xor    BYTE PTR [eax+0x344b5c93],al
  423cff:	pop    es
  423d00:	jge    0x423d49
  423d02:	push   eax
  423d03:	out    0x2b,al
  423d05:	inc    bl
  423d07:	jg     0x423d44
  423d09:	jnp    0x423cd9
  423d0b:	(bad)  
  423d0c:	pop    ss
  423d0d:	into   
  423d0e:	add    DWORD PTR [ebp-0x7d],ebx
  423d11:	cmove  esp,DWORD PTR [eax]
  423d14:	adc    al,0xf9
  423d16:	sub    al,0xe7
  423d18:	stos   BYTE PTR es:[edi],al
  423d19:	imul   edx,DWORD PTR [ecx+0x23a9bd18],0x3360a365
  423d23:	mov    esi,0xd813946f
  423d28:	add    DWORD PTR ds:0x55b55847,ebp
  423d2e:	mov    edx,0x7d436c24
  423d33:	ss inc esi
  423d35:	mov    ebp,0xf933aa2a
  423d3a:	js     0x423cf3
  423d3c:	ja     0x423d09
  423d3e:	mov    ds:0x8f269c23,al
  423d43:	sub    al,0xa3
  423d45:	jp     0x423d12
  423d47:	push   cs
  423d48:	shl    BYTE PTR [ecx+0x11],1
  423d4b:	fnstsw WORD PTR [edx]
  423d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d4e:	pop    ds
  423d4f:	mov    dh,0x70
  423d51:	stc    
  423d52:	es add al,0x79
  423d55:	inc    edx
  423d56:	jae    0x423d51
  423d58:	div    esi
  423d5a:	and    BYTE PTR [edi-0x625c2ffc],cl
  423d60:	sub    DWORD PTR [edx],edi
  423d62:	lahf   
  423d63:	loopne 0x423d88
  423d65:	push   cs
  423d66:	xchg   BYTE PTR [ebx],dh
  423d68:	mov    ds:0x21d1075e,al
  423d6d:	xor    edx,eax
  423d6f:	(bad)  
  423d70:	call   0x62034cf4
  423d75:	push   cs
  423d76:	dec    ecx
  423d77:	mov    bh,0xbb
  423d79:	setae  dl
  423d7c:	icebp  
  423d7d:	cmp    BYTE PTR [eax+0x1e],cl
  423d80:	sbb    DWORD PTR [edi+0x55],eax
  423d83:	xor    ecx,DWORD PTR [ecx+0x3600282b]
  423d89:	data16 aad 0xfc
  423d8c:	fwait
  423d8d:	jg     0x423d66
  423d8f:	jp     0x423d61
  423d91:	in     al,dx
  423d92:	pusha  
  423d93:	push   edx
  423d94:	cmp    eax,0x9f77455f
  423d99:	xchg   edi,eax
  423d9a:	and    al,0xfc
  423d9c:	xchg   ebx,eax
  423d9d:	push   ecx
  423d9e:	pop    eax
  423d9f:	out    dx,eax
  423da0:	shr    BYTE PTR [eax-0x45],1
  423da3:	xchg   ecx,eax
  423da4:	sar    DWORD PTR [esi-0x49],0xe0
  423da8:	js     0x423df8
  423daa:	mov    ch,0x59
  423dac:	dec    ebx
  423dad:	add    al,0x56
  423daf:	retf   
  423db0:	repz cdq 
  423db2:	jb     0x423d62
  423db4:	ss pop ds
  423db6:	pop    ebx
  423db7:	sbb    al,dl
  423db9:	pushf  
  423dba:	xchg   ecx,eax
  423dbb:	es loopne 0x423e1e
  423dbe:	shl    BYTE PTR [ebx+0x7c],cl
  423dc1:	ss in  eax,dx
  423dc3:	pushf  
  423dc4:	mov    cl,0xec
  423dc6:	jecxz  0x423d69
  423dc8:	loopne 0x423e2a
  423dca:	mov    bh,0xd7
  423dcc:	mov    cl,0x74
  423dce:	adc    BYTE PTR [eax+0x32f109ea],dh
  423dd4:	jecxz  0x423e00
  423dd6:	pop    eax
  423dd7:	imul   BYTE PTR [edi+0x34]
  423dda:	add    ecx,DWORD PTR [edi*4+0x54beb560]
  423de1:	mov    ah,0xc9
  423de3:	mov    bl,0xcd
  423de5:	lea    ebx,[ebp+0x7d54e6b5]
  423deb:	mov    bh,0x95
  423ded:	lahf   
  423dee:	lea    eax,[ebx-0x6a]
  423df1:	out    0xbe,eax
  423df3:	jbe    0x423df4
  423df5:	or     eax,0xd901555
  423dfa:	ds ds adc eax,0x477cf1ea
  423e01:	mov    al,ds:0xa3eabe4e
  423e06:	jmp    0x423d89
  423e08:	cmp    dl,BYTE PTR [edx+0x3a]
  423e0b:	out    dx,al
  423e0c:	aas    
  423e0d:	adc    eax,0xeb35552f
  423e12:	leave  
  423e13:	add    al,0xe2
  423e15:	adc    ecx,DWORD PTR [ecx-0x7130776e]
  423e1b:	dec    esp
  423e1c:	loop   0x423e88
  423e1e:	jl     0x423e80
  423e20:	repz cmp eax,0x74e9201a
  423e26:	xchg   ebp,eax
  423e27:	mov    ds:0xfd6c46fc,eax
  423e2c:	xchg   ebx,eax
  423e2d:	adc    eax,0x950dfccc
  423e32:	or     al,0x8f
  423e34:	int    0x91
  423e36:	pop    ds
  423e37:	dec    ecx
  423e38:	mov    ch,0x93
  423e3a:	(bad)  
  423e3b:	cmp    ebp,DWORD PTR [ebp-0x1]
  423e3e:	js     0x423e6a
  423e40:	dec    ebx
  423e41:	mov    esp,DWORD PTR [ebx]
  423e43:	popf   
  423e44:	getsec 
  423e46:	sbb    al,al
  423e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e49:	lea    esp,[esp+eax*1-0x1a51db7e]
  423e50:	jb     0x423e0a
  423e52:	inc    ebp
  423e53:	push   DWORD PTR [ebp+0x3eb8914e]
  423e59:	sub    BYTE PTR [ecx-0x7ba9bb56],al
  423e5f:	mov    ds:0xebaf1108,al
  423e64:	pop    esi
  423e65:	(bad)  
  423e68:	sub    eax,0xe9c86993
  423e6d:	mov    cl,0x9f
  423e6f:	inc    ebx
  423e70:	out    dx,al
  423e71:	or     bh,BYTE PTR ds:0x23d48190
  423e77:	pop    ecx
  423e78:	sar    BYTE PTR [esi+0x69e96b41],cl
  423e7e:	xor    BYTE PTR [edx],dh
  423e80:	cmp    eax,0x8153c4e4
  423e85:	pushf  
  423e86:	xor    DWORD PTR ss:[eax],0x5b
  423e8a:	fs test al,0x4b
  423e8d:	pop    esp
  423e8e:	jl     0x423e1b
  423e90:	push   ecx
  423e91:	ret    0xc2c0
  423e94:	mov    al,0x53
  423e96:	pop    edi
  423e97:	dec    esp
  423e98:	adc    cl,BYTE PTR [edx]
  423e9a:	xchg   ecx,eax
  423e9b:	add    bh,BYTE PTR [edx-0x1965d9b0]
  423ea1:	mov    gs,WORD PTR [edx+0x55]
  423ea4:	cli    
  423ea5:	ins    DWORD PTR es:[edi],dx
  423ea6:	sti    
  423ea7:	test   eax,0x6f0cbe10
  423eac:	out    0x8d,eax
  423eae:	sar    BYTE PTR [ebx],1
  423eb0:	add    edx,DWORD PTR [esi+0x2b]
  423eb3:	jmp    0x6697:0xe194de7
  423eba:	nop
  423ebb:	(bad)  
  423ebc:	mov    al,ds:0x8317bc94
  423ec1:	pop    edx
  423ec2:	ss in  al,dx
  423ec4:	cli    
  423ec5:	xchg   DWORD PTR ds:0xd9af7f9e,ebx
  423ecb:	(bad)  
  423ecc:	lods   eax,DWORD PTR ds:[esi]
  423ecd:	mov    dl,0x85
  423ecf:	inc    edx
  423ed0:	out    dx,al
  423ed1:	and    eax,0xdae06ae7
  423ed6:	pop    ss
  423ed7:	das    
  423ed8:	lds    edx,FWORD PTR ds:0x676845e0
  423ede:	nop
  423edf:	and    DWORD PTR [eax],ebx
  423ee1:	sar    DWORD PTR [ecx+0x1be3f2e0],1
  423ee7:	adc    eax,DWORD PTR [ebx-0x3e74ff0d]
  423eed:	add    eax,0xfabdbecf
  423ef2:	adc    edi,0xffffffff
  423ef5:	xor    eax,0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	inc    eax
  4241e5:	mov    esi,0x6aa9f2ab
  4241ea:	call   0xc298e03b
  4241ef:	mov    ah,bh
  4241f1:	(bad)  
  4241f2:	jmp    0x42420d
  4241f4:	add    DWORD PTR [eax],eax
  4241f6:	add    BYTE PTR [eax],al
  4241f8:	inc    ebx
  4241f9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
