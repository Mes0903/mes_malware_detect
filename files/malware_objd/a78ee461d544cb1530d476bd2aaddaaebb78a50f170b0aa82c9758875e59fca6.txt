
a78ee461d544cb1530d476bd2aaddaaebb78a50f170b0aa82c9758875e59fca6.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    eax,0x830001a6
  411005:	push   eax
  411006:	sbb    al,ah
  411008:	adc    al,0x21
  41100a:	mov    BYTE PTR [esi],dl
  41100c:	mov    WORD PTR [edx],es
  41100e:	add    al,al
  411010:	bound  ecx,QWORD PTR [edx]
  411012:	adc    BYTE PTR [ecx+0x80a110],al
  411018:	or     eax,0x8a18204
  41101d:	add    BYTE PTR [edx],dh
  41101f:	sbb    al,BYTE PTR [eax]
  411021:	and    BYTE PTR ds:0x8413181,al
  411027:	xchg   esp,eax
  411028:	imul   eax,DWORD PTR [eax],0x8
  41102b:	add    BYTE PTR [ecx+0x20],dl
  41102e:	add    DWORD PTR [eax],esp
  411030:	int    0x18
  411032:	push   edx
  411033:	add    BYTE PTR [ecx],0xea
  411036:	adc    BYTE PTR [eax],al
  411038:	ins    BYTE PTR es:[edi],dx
  411039:	sbb    BYTE PTR [ecx-0x8],al
  41103c:	add    BYTE PTR [eax],dl
  41103e:	sub    al,BYTE PTR [eax+eax*1]
  411041:	ret    0x46
  411044:	add    al,0x9
  411046:	xor    BYTE PTR [eax+0x9000160],0x40
  41104d:	mov    ds:0x20400022,al
  411052:	mov    DWORD PTR [eax+0x20],ebx
  411055:	and    BYTE PTR [ecx],al
  411057:	adc    BYTE PTR [ecx+0x60],dl
  41105a:	add    DWORD PTR [eax-0x7f3fdedd],esp
  411060:	or     BYTE PTR [edx+0x22246801],dl
  411066:	nop
  411067:	or     al,0x9
  411069:	lods   al,BYTE PTR ds:[esi]
  41106a:	adc    al,0x76
  41106c:	or     al,BYTE PTR [eax+0x6]
  41106f:	and    bh,al
  411071:	adc    BYTE PTR [ebx],al
  411073:	add    BYTE PTR [edx-0x7d],ah
  411076:	add    bl,ch
  411078:	test   eax,0xd800c201
  41107d:	inc    eax
  41107e:	or     BYTE PTR [eax-0x40],ch
  411081:	rol    BYTE PTR [eax+0x2],1
  411084:	or     ebx,esi
  411086:	ins    BYTE PTR es:[edi],dx
  411087:	sbb    DWORD PTR [eax],0xa
  41108a:	add    BYTE PTR [eax+ebx*4+0x42834820],0x19
  411092:	add    DWORD PTR [eax],0x62800220
  411098:	inc    esi
  411099:	add    ah,ch
  41109b:	or     BYTE PTR [edx+ecx*2],al
  41109e:	mov    es,WORD PTR [eax]
  4110a0:	add    esi,DWORD PTR [ecx+0x52]
  4110a3:	or     eax,0x8089000
  4110a8:	add    BYTE PTR [eax],dl
  4110aa:	shl    BYTE PTR [edx+ebp*1+0x19a205a],0x1
  4110b2:	or     al,BYTE PTR [eax+0x1448542]
  4110b8:	add    BYTE PTR [esp+eax*1],cl
  4110bb:	and    BYTE PTR [ecx-0x78],ah
  4110be:	add    BYTE PTR [edi],dl
  4110c0:	dec    esi
  4110c1:	lock sbb BYTE PTR [ecx+0x2e],0x10
  4110c6:	shl    BYTE PTR [edx],1
  4110c8:	add    al,0x40
  4110ca:	or     BYTE PTR ds:[eax],0x0
  4110ce:	aaa    
  4110cf:	add    BYTE PTR [eax+0xb],0x11
  4110d3:	and    eax,DWORD PTR [ecx+0x2bd80802]
  4110d9:	add    BYTE PTR [eax+eax*4],dh
  4110dc:	or     BYTE PTR [eax],ah
  4110de:	add    DWORD PTR [eax+0x8],eax
  4110e1:	pop    esp
  4110e2:	push   ecx
  4110e3:	inc    esp
  4110e4:	mov    edx,0x30290200
  4110e9:	adc    BYTE PTR [eax],al
  4110eb:	add    DWORD PTR [eax+0x40503244],ebp
  4110f1:	add    al,0x28
  4110f3:	mov    al,BYTE PTR [edx]
  4110f5:	rcl    BYTE PTR [ecx],1
  4110f7:	and    al,0x60
  4110f9:	or     BYTE PTR [eax+eax*1],0x0
  4110fd:	add    DWORD PTR [eax-0x6eeece68],eax
  411103:	add    BYTE PTR [esi],al
  411105:	xor    BYTE PTR [ebx],al
  411107:	add    al,BYTE PTR [ecx]
  411109:	sub    DWORD PTR [eax],edx
  41110b:	add    BYTE PTR [eax],dl
  41110d:	add    cl,0x2
  411110:	add    BYTE PTR [ebx],al
  411112:	mov    WORD PTR [ecx+0x3c466024],es
  411118:	nop
  411119:	add    BYTE PTR [esi+0x30040021],0x20
  411120:	push   ecx
  411121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411122:	sbb    eax,0x2089083
  411127:	pusha  
  411128:	test   BYTE PTR [eax],ch
  41112a:	add    BYTE PTR [eax],ch
  41112c:	add    BYTE PTR [eax+0x0],dl
  41112f:	fs fchs 
  411132:	xor    DWORD PTR ds:0x1011108,eax
  411138:	ins    DWORD PTR es:[edi],dx
  411139:	and    BYTE PTR [ecx],ah
  41113b:	ror    DWORD PTR [edx],0x40
  41113e:	dec    eax
  41113f:	pushf  
  411140:	adc    al,0x84
  411142:	lds    ecx,FWORD PTR [edx+ecx*1]
  411145:	or     cl,al
  411147:	retf   0x18a2
  41114a:	add    BYTE PTR [edx+0x50480a62],cl
  411150:	inc    ebp
  411151:	mov    al,0x92
  411153:	and    al,BYTE PTR cs:[ecx+ecx*1]
  411157:	inc    eax
  411158:	inc    edx
  411159:	test   DWORD PTR [eax+0x410290],esi
  41115f:	add    BYTE PTR [ecx+0x1],ah
  411162:	mov    ebx,DWORD PTR [ecx]
  411164:	sub    DWORD PTR [eax+0x10546204],eax
  41116a:	mov    bl,0x81
  41116c:	push   es
  41116d:	inc    eax
  41116e:	add    BYTE PTR [eax+eax*4],ah
  411171:	add    BYTE PTR [ecx],0x89
  411174:	inc    eax
  411175:	mov    ds:0x4008100,al
  41117a:	add    BYTE PTR [esp+edx*4],ch
  41117d:	in     eax,0x22
  41117f:	xchg   edx,eax
  411180:	dec    eax
  411181:	cmp    BYTE PTR [edx],ah
  411183:	adc    DWORD PTR [ebx],eax
  411185:	and    BYTE PTR [ecx],bl
  411187:	icebp  
  411188:	adc    BYTE PTR [eax],al
  41118a:	add    dl,BYTE PTR [eax+0x0]
  41118d:	adc    DWORD PTR [eax+edx*8+0x6],eax
  411191:	or     DWORD PTR [edx+0x15],edx
  411194:	test   al,0x12
  411196:	add    BYTE PTR [eax+0x47],ah
  411199:	sub    dl,BYTE PTR [eax+0x80188d3]
  41119f:	daa    
  4111a0:	jns    0x411122
  4111a2:	or     DWORD PTR [ecx+0x44b22002],eax
  4111a8:	and    BYTE PTR [ecx+0x11],al
  4111ab:	sub    ecx,DWORD PTR [eax+0x0]
  4111ae:	add    BYTE PTR [eax],al
  4111b0:	add    DWORD PTR [edx+0x40],0x12cd0251
  4111b7:	mov    al,ds:0x42860441
  4111bc:	xchg   edx,eax
  4111bd:	mov    BYTE PTR [esp+esi*4],al
  4111c0:	or     dl,BYTE PTR es:[edx]
  4111c3:	inc    esp
  4111c4:	add    ch,bl
  4111c6:	add    BYTE PTR [esi+eax*2],al
  4111c9:	add    DWORD PTR [eax],eax
  4111cb:	push   es
  4111cc:	add    BYTE PTR [eax],dh
  4111ce:	pop    es
  4111cf:	aam    0x30
  4111d1:	enter  0x80,0x7
  4111d5:	inc    edx
  4111d6:	add    DWORD PTR [eax],esp
  4111d8:	add    dl,dl
  4111da:	add    BYTE PTR [ecx],al
  4111dc:	xor    BYTE PTR [eax],dh
  4111de:	jo     0x411200
  4111e0:	mov    ds:0x80294494,al
  4111e5:	or     BYTE PTR [eax+0x84030],0x11
  4111ec:	sub    cl,dl
  4111ee:	add    DWORD PTR gs:[edx],eax
  4111f1:	and    BYTE PTR [ebx+0x46],dh
  4111f4:	add    ah,cl
  4111f6:	add    al,BYTE PTR [ebp+0x44800416]
  4111fc:	and    BYTE PTR [eax],al
  4111fe:	add    al,BYTE PTR [eax]
  411200:	or     DWORD PTR [eax-0x70],eax
  411203:	push   eax
  411204:	add    al,BYTE PTR [edx+0x48]
  411207:	nop
  411208:	xor    BYTE PTR [eax+0x5280801],dl
  41120e:	add    BYTE PTR [eax],ah
  411210:	dec    eax
  411211:	inc    eax
  411212:	add    BYTE PTR [ecx],ah
  411214:	test   BYTE PTR [ecx],dl
  411216:	or     eax,0x6452022
  41121b:	add    BYTE PTR [eax+0x24],al
  41121e:	or     dl,BYTE PTR [eax+0x1024400]
  411224:	add    DWORD PTR [edx+0xa],0x280819
  41122b:	add    al,0x40
  41122d:	add    DWORD PTR [eax],eax
  41122f:	sub    BYTE PTR [eax+0x44],0x5
  411233:	sub    ah,BYTE PTR [eax]
  411235:	inc    eax
  411236:	sbb    eax,0x54205804
  41123b:	inc    eax
  41123c:	inc    eax
  41123d:	sub    al,0x30
  41123f:	inc    eax
  411240:	inc    ecx
  411241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411242:	dec    esp
  411243:	add    dl,BYTE PTR [edx+0x5e408111]
  411249:	adc    al,dl
  41124b:	add    BYTE PTR [eax],ah
  41124d:	or     BYTE PTR [esp+ebp*1],bl
  411250:	inc    esi
  411251:	sbb    DWORD PTR [ecx],eax
  411253:	sbb    DWORD PTR [ecx],edx
  411255:	loop   0x4111e1
  411257:	inc    eax
  411258:	mov    DWORD PTR [eax+0x4],eax
  41125b:	add    BYTE PTR ds:0x820030,0x21
  411262:	sub    DWORD PTR [eax],edx
  411264:	and    eax,0x1108940
  411269:	loopne 0x411271
  41126b:	add    DWORD PTR [eax],esp
  41126d:	or     BYTE PTR [ecx+eax*1+0x4ed02],0x40
  411275:	add    DWORD PTR [ecx+0x44ab00cc],eax
  41127b:	pusha  
  41127c:	add    BYTE PTR [edx],dh
  41127e:	adc    eax,0xc090010
  411283:	xchg   ecx,eax
  411284:	add    DWORD PTR [edx],esi
  411286:	add    eax,0x4091aa18
  41128b:	add    esi,eax
  41128d:	adc    BYTE PTR [eax+0x2c84506],al
  411293:	add    al,BYTE PTR [eax]
  411295:	adc    al,0x40
  411297:	add    cl,BYTE PTR [eax]
  411299:	pop    esi
  41129a:	rol    DWORD PTR [eax],0x88
  41129d:	or     BYTE PTR [eax+0x30],0x31
  4112a1:	add    BYTE PTR [edx],dl
  4112a3:	rol    BYTE PTR es:[eax],0x80
  4112a7:	test   DWORD PTR [edx],esp
  4112a9:	add    al,0xcc
  4112ab:	mov    eax,ds:0xb0387061
  4112b0:	xor    eax,DWORD PTR [ebp+0x20]
  4112b3:	add    BYTE PTR [ecx+0x2e5c0424],al
  4112b9:	add    BYTE PTR [eax-0x80],0x4
  4112bd:	and    DWORD PTR [eax],ecx
  4112bf:	ret    0xa119
  4112c2:	outs   dx,BYTE PTR ds:[esi]
  4112c3:	aam    0x5
  4112c5:	inc    ecx
  4112c6:	add    al,BYTE PTR [ebx]
  4112c8:	adc    BYTE PTR [eax],dl
  4112ca:	inc    eax
  4112cb:	add    BYTE PTR [eax+0x58813a01],al
  4112d1:	sub    eax,eax
  4112d3:	xor    BYTE PTR [eax+0x8500890],al
  4112d9:	and    DWORD PTR [eax],eax
  4112db:	sbb    al,BYTE PTR [eax+0x16a29020]
  4112e1:	cmp    BYTE PTR [eax+ecx*1],0x4
  4112e5:	add    BYTE PTR [eax],al
  4112e7:	mov    eax,0xa020c226
  4112ec:	add    DWORD PTR [ecx-0x80],edx
  4112ef:	xor    BYTE PTR [eax+0x54],al
  4112f2:	dec    eax
  4112f3:	ret    0x2840
  4112f6:	adc    DWORD PTR [eax+0x40],0x0
  4112fa:	push   eax
  4112fb:	add    BYTE PTR [eax],dh
  4112fd:	pusha  
  4112fe:	add    BYTE PTR [esi+0x8],0x0
  411302:	xchg   BYTE PTR [ebp+0x801971a],dh
  411308:	add    BYTE PTR [eax+0x40088300],0x81
  41130f:	xlat   BYTE PTR ds:[ebx]
  411310:	inc    edx
  411311:	ins    BYTE PTR es:[edi],dx
  411312:	cwde   
  411313:	push   edx
  411314:	add    al,0x52
  411316:	or     al,BYTE PTR [edx+0x40688c01]
  41131c:	add    BYTE PTR [edx],al
  41131e:	and    BYTE PTR [ecx+0x2168a0c0],ah
  411324:	out    0x82,al
  411326:	(bad)  
  411327:	test   eax,0x20a018
  41132c:	sub    BYTE PTR [eax+ebx*1],ah
  41132f:	mov    al,ds:0x40071008
  411334:	add    BYTE PTR ds:0x3086014,0x8
  41133b:	jo     0x4112c5
  41133d:	pusha  
  41133e:	or     al,0xa3
  411340:	add    BYTE PTR [edx],ah
  411342:	test   BYTE PTR [eax],al
  411344:	or     al,BYTE PTR [eax]
  411346:	sub    BYTE PTR [eax],0x21
  411349:	add    DWORD PTR [edx+0x420ca562],0x51811c88
  411353:	add    BYTE PTR [eax],al
  411355:	sbb    BYTE PTR [edx+0x49],al
  411358:	add    BYTE PTR [eax+0x40144346],al
  41135e:	or     ebx,DWORD PTR [eax+0x15023061]
  411364:	js     0x4113a7
  411366:	add    BYTE PTR [eax+ecx*2],ah
  411369:	add    BYTE PTR [eax],al
  41136b:	add    cl,BYTE PTR es:[eax+0x12]
  41136f:	adc    al,BYTE PTR [eax]
  411371:	push   es
  411372:	adc    BYTE PTR [ecx+0x1],0x0
  411376:	ret    0x2044
  411379:	push   ss
  41137a:	or     ah,ah
  41137c:	sbb    al,0x12
  41137e:	or     al,0x20
  411380:	sbb    BYTE PTR [eax-0x5e],dl
  411383:	add    BYTE PTR [eax-0x7c],dl
  411386:	add    al,0x20
  411388:	or     DWORD PTR [eax+ebp*1],eax
  41138b:	add    eax,DWORD PTR [ecx+eax*1]
  41138e:	sbb    DWORD PTR [eax+0x4489010],0x5840c102
  411398:	mov    al,ds:0x440090c
  41139d:	and    BYTE PTR [edx],dh
  41139f:	add    eax,0x21418020
  4113a4:	add    BYTE PTR [eax],0x40
  4113a7:	and    BYTE PTR [eax+eax*1],0x34
  4113ab:	push   eax
  4113ac:	and    BYTE PTR [eax],cl
  4113ae:	sbb    edx,DWORD PTR [eax+edx*4]
  4113b1:	add    DWORD PTR [ecx],eax
  4113b3:	inc    eax
  4113b4:	add    al,0x48
  4113b6:	add    al,0x1
  4113b8:	loopne 0x41140a
  4113ba:	or     cl,BYTE PTR [esi]
  4113bc:	inc    esp
  4113bd:	add    BYTE PTR [eax],dl
  4113bf:	enter  0x2,0x19
  4113c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113c4:	lds    eax,FWORD PTR [edi+edi*1]
  4113c7:	push   eax
  4113c8:	adc    BYTE PTR [edx+ebx*1+0x21],al
  4113cc:	add    eax,0xc904000a
  4113d1:	adc    dl,al
  4113d3:	adc    BYTE PTR [edi+0x32000402],dl
  4113d9:	add    cl,al
  4113db:	add    al,0xa4
  4113dd:	inc    edx
  4113de:	xor    al,0x20
  4113e0:	cvtpi2ps xmm0,QWORD PTR ds:0xa8e00003
  4113e7:	and    eax,DWORD PTR [ebx]
  4113e9:	or     DWORD PTR [eax-0x7f],ecx
  4113ec:	add    al,BYTE PTR [edx]
  4113ee:	arpl   WORD PTR [ebx+0x1081d872],ax
  4113f4:	adc    BYTE PTR fs:[ecx],dl
  4113f7:	dec    edx
  4113f8:	add    DWORD PTR [eax],edx
  4113fa:	push   es
  4113fb:	add    BYTE PTR [eax+0x16408411],ah
  411401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411402:	adc    BYTE PTR [ecx+ecx*2-0x757fb76f],al
  411409:	or     BYTE PTR [edx+0x62092400],cl
  41140f:	add    BYTE PTR [eax],al
  411411:	sbb    DWORD PTR [esi+edx*2],eax
  411414:	push   esp
  411415:	xor    bh,cl
  411417:	add    al,0x0
  411419:	or     BYTE PTR [ebx-0x7ffde700],0x88
  411420:	fwait
  411421:	add    BYTE PTR [edx-0x5f57f7dd],ah
  411427:	and    eax,0x12080c88
  41142c:	mov    al,ds:0x90002441
  411431:	call   0x3e:0x40400000
  411438:	sub    eax,DWORD PTR [ebx+edx*1+0x38]
  41143c:	add    BYTE PTR [eax-0x3d7abfc0],ch
  411442:	adc    al,0x93
  411444:	adc    al,0x41
  411446:	or     cl,ah
  411448:	and    DWORD PTR [ecx+edx*4],esp
  41144b:	pop    eax
  41144c:	add    ecx,DWORD PTR [eax+edx*1]
  41144f:	mov    BYTE PTR [ecx-0x4fffaa78],al
  411455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411456:	adc    ch,BYTE PTR [ecx+0x654210e]
  41145c:	add    BYTE PTR [ecx],al
  41145e:	and    BYTE PTR [ebp+0x4],cl
  411461:	add    BYTE PTR [ecx],cl
  411463:	add    BYTE PTR [ecx+0x0],ah
  411466:	jo     0x4114c6
  411468:	fadd   DWORD PTR [ecx]
  41146a:	or     eax,eax
  41146c:	pop    ebx
  41146d:	and    eax,0x2d81001
  411472:	adc    BYTE PTR [ecx+eax*1],ah
  411475:	or     BYTE PTR [eax-0x7ecb0000],0x3
  41147c:	add    BYTE PTR [ebx+edx*1+0x842218],0xb
  411484:	and    al,BYTE PTR [eax]
  411486:	add    al,0x40
  411488:	popf   
  411489:	adc    al,0x1a
  41148b:	adc    BYTE PTR [edx],0x8
  41148e:	add    al,BYTE PTR [eax]
  411490:	and    BYTE PTR [eax+0x10],bl
  411493:	adc    dh,BYTE PTR [eax+0xc]
  411496:	mov    ds:0x103a40,eax
  41149b:	sbb    BYTE PTR [eax+0x4],ch
  41149e:	shl    BYTE PTR [edx+eax*2+0x19],cl
  4114a2:	mov    al,ds:0x28a41801
  4114a7:	sub    BYTE PTR [edx],al
  4114a9:	pusha  
  4114aa:	add    al,0x42
  4114ac:	xor    BYTE PTR [eax-0x26],ah
  4114af:	add    BYTE PTR [eax-0x50],al
  4114b2:	add    DWORD PTR [ebx],0x22
  4114b5:	add    BYTE PTR [edx],cl
  4114b7:	inc    eax
  4114b8:	add    DWORD PTR [eax],esp
  4114ba:	add    dl,dl
  4114bc:	adc    DWORD PTR [ecx],edx
  4114be:	adc    esp,ecx
  4114c0:	add    al,0x56
  4114c2:	adc    ebx,eax
  4114c4:	xor    al,BYTE PTR [eax+0x0]
  4114c7:	cmp    al,BYTE PTR [esi+ecx*1]
  4114ca:	adc    al,BYTE PTR [eax+0x20]
  4114cd:	dec    eax
  4114ce:	adc    ah,ah
  4114d0:	sub    BYTE PTR [ecx],al
  4114d2:	add    al,0x0
  4114d4:	add    al,al
  4114d6:	dec    esp
  4114d7:	adc    al,0x81
  4114d9:	test   BYTE PTR [ecx],al
  4114db:	or     BYTE PTR [eax],al
  4114dd:	add    BYTE PTR [eax],0xa4
  4114e0:	or     BYTE PTR [eax+0x0],cl
  4114e3:	add    BYTE PTR [edx],0x2
  4114e6:	add    BYTE PTR [edx+0x4],dl
  4114e9:	add    al,0x10
  4114eb:	or     BYTE PTR [ebp+edx*1-0x6f],ah
  4114ef:	inc    eax
  4114f0:	inc    edx
  4114f1:	dec    ebx
  4114f2:	inc    eax
  4114f3:	and    BYTE PTR [edx+eax*2+0x3242854],cl
  4114fa:	add    al,0x84
  4114fc:	and    BYTE PTR [eax],al
  4114fe:	test   BYTE PTR [ecx],al
  411500:	adc    DWORD PTR [esp+eax*1],edx
  411503:	inc    ecx
  411504:	and    BYTE PTR [edx],al
  411506:	and    DWORD PTR [edx],esp
  411508:	add    al,0x48
  41150a:	inc    ecx
  41150b:	loope  0x41153d
  41150d:	test   BYTE PTR [eax-0x5dfbf0f8],al
  411513:	xor    BYTE PTR [ecx-0x77e7faf0],al
  411519:	add    DWORD PTR [eax+edx*2],ebp
  41151c:	or     DWORD PTR [eax+eax*1+0x8],esp
  411520:	xchg   edx,eax
  411521:	add    BYTE PTR [ecx+eiz*1],al
  411524:	add    BYTE PTR [eax],al
  411526:	add    BYTE PTR [eax+0x246c0310],ah
  41152c:	xor    al,0x2
  41152e:	add    al,0x48
  411530:	popa   
  411531:	mov    ecx,DWORD PTR [eax]
  411533:	adc    DWORD PTR [edx],0xffffff99
  411536:	inc    eax
  411537:	add    BYTE PTR [eax+edx*4],bl
  41153a:	adc    al,0x44
  41153c:	adc    BYTE PTR [eax+0x20ea23a],al
  411542:	sbb    BYTE PTR [edx],ah
  411544:	sub    al,0x0
  411546:	add    BYTE PTR [ecx],al
  411548:	add    DWORD PTR [eax],edx
  41154a:	jo     0x411564
  41154c:	and    BYTE PTR [edx],ah
  41154e:	sub    ebp,esi
  411550:	mov    ah,0xe
  411552:	xor    al,BYTE PTR [eax-0x3c6dfbe8]
  411558:	add    BYTE PTR [edx+edx*1+0x58],0x2
  41155d:	cwde   
  41155e:	and    BYTE PTR [esi+eax*2],al
  411561:	or     al,BYTE PTR [ebp-0x55fed6f8]
  411567:	and    BYTE PTR [ecx+0x1],cl
  41156a:	add    BYTE PTR [eax+0x39],al
  41156d:	add    DWORD PTR [ebp+0xc4e842],edi
  411573:	and    eax,DWORD PTR [edx]
  411575:	inc    ecx
  411576:	push   ecx
  411577:	add    BYTE PTR [edx+0x10],0x84
  41157b:	add    BYTE PTR [eax],al
  41157d:	jb     0x411593
  41157f:	rcr    DWORD PTR [eax],0xa1
  411582:	add    BYTE PTR [ecx],al
  411584:	sbb    al,0x22
  411586:	inc    edx
  411587:	test   DWORD PTR [ecx],esp
  411589:	push   es
  41158a:	inc    eax
  41158b:	ret    
  41158c:	xor    BYTE PTR [eax+0xb],ah
  41158f:	sbb    cl,al
  411591:	inc    edx
  411592:	inc    ecx
  411593:	add    al,0x0
  411595:	rol    BYTE PTR [eax],0x56
  411598:	or     BYTE PTR [edx],0x46
  41159b:	and    BYTE PTR [eax],bh
  41159d:	adc    eax,DWORD PTR [ecx]
  41159f:	push   es
  4115a0:	add    eax,DWORD PTR [eax]
  4115a2:	inc    eax
  4115a3:	inc    esp
  4115a4:	add    esp,DWORD PTR [eax]
  4115a6:	enter  0x4041,0xc6
  4115aa:	and    dl,BYTE PTR [edx+eax*1+0x100200]
  4115b1:	and    BYTE PTR [eax+0x2],al
  4115b4:	add    al,BYTE PTR [eax]
  4115b6:	ins    BYTE PTR es:[edi],dx
  4115b7:	mov    al,ds:0x10146052
  4115bc:	or     BYTE PTR [eax],al
  4115be:	inc    eax
  4115bf:	and    DWORD PTR [edx],0x2c22490
  4115c5:	inc    eax
  4115c6:	add    DWORD PTR [ecx],eax
  4115c8:	pusha  
  4115c9:	add    ah,BYTE PTR [eax+eax*1]
  4115cc:	nop
  4115cd:	add    bl,al
  4115cf:	or     BYTE PTR [eax+0x8],al
  4115d2:	mov    al,ds:0x60ca020
  4115d7:	add    BYTE PTR [eax+0x4010aa21],ah
  4115dd:	or     DWORD PTR [edx+0x15],ecx
  4115e0:	inc    esp
  4115e1:	sub    ecx,DWORD PTR [eax-0x6deb79df]
  4115e7:	or     DWORD PTR [eax-0x3d],esp
  4115ea:	adc    ah,ah
  4115ec:	add    ch,BYTE PTR [edx+0x29]
  4115ef:	mov    al,ds:0x40708630
  4115f4:	inc    esp
  4115f5:	add    BYTE PTR [eax],0x28
  4115f8:	les    edx,FWORD PTR [eax+0x4f420023]
  4115fe:	add    ch,al
  411600:	adc    BYTE PTR [edx+eax*4],dl
  411603:	add    DWORD PTR [eax+0x22002089],ebx
  411609:	and    DWORD PTR [eax+0x1d080844],0x801ed204
  411613:	cmp    DWORD PTR [esi],eax
  411615:	xchg   ecx,eax
  411616:	and    DWORD PTR [eax],eax
  411618:	xchg   edx,eax
  411619:	push   0x1
  41161b:	mov    BYTE PTR [esi+0x14],cl
  41161e:	or     BYTE PTR [edx],al
  411620:	and    BYTE PTR [eax+ebp*1],al
  411623:	or     BYTE PTR [edx],cl
  411625:	add    DWORD PTR [eax+esi*2+0x4004120],ecx
  41162c:	add    BYTE PTR [ecx+0x901045],0x40
  411633:	inc    eax
  411634:	dec    eax
  411635:	add    BYTE PTR [ebx],0x21
  411638:	add    al,0x32
  41163a:	sub    BYTE PTR [esi],0x3
  41163d:	add    eax,0x10803911
  411642:	inc    edx
  411643:	aam    0x20
  411645:	and    al,ah
  411647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411648:	add    BYTE PTR [ebx+0x4],0x0
  41164c:	sub    al,0x53
  41164e:	sbb    BYTE PTR [eax],0x50
  411651:	ret    0x1888
  411654:	add    DWORD PTR [ecx+0x44],eax
  411657:	leave  
  411658:	or     DWORD PTR [ecx],eax
  41165a:	test   DWORD PTR [eax],eax
  41165c:	inc    eax
  41165d:	and    DWORD PTR [eax],esi
  41165f:	add    DWORD PTR [eax],eax
  411661:	bound  edx,QWORD PTR [esi]
  411663:	add    al,dh
  411665:	ret    0x2a20
  411668:	xchg   BYTE PTR [edi+0x2c],cl
  41166b:	push   eax
  41166c:	test   DWORD PTR [edx],esi
  41166e:	push   esp
  41166f:	ret    0x20
  411672:	add    al,BYTE PTR [edx]
  411674:	add    BYTE PTR [ebx],ah
  411676:	xchg   edx,eax
  411677:	push   esp
  411678:	mov    al,ds:0x2c048096
  41167d:	xchg   esp,eax
  41167e:	adc    BYTE PTR [ecx+0x8133],al
  411684:	and    BYTE PTR [eax+0x6002c03],dh
  41168a:	je     0x4116b4
  41168c:	push   edx
  41168d:	or     eax,0x22281a42
  411692:	mov    BYTE PTR [edx+eax*1],cl
  411695:	mov    eax,ds:0x1808c63
  41169a:	inc    eax
  41169b:	add    DWORD PTR [eax],eax
  41169d:	push   es
  41169e:	add    edi,eax
  4116a0:	adc    ah,BYTE PTR [eax-0x6f1defff]
  4116a6:	and    ecx,DWORD PTR [eax+0x17]
  4116a9:	add    BYTE PTR [ecx],al
  4116ab:	xor    BYTE PTR [eax],ah
  4116ad:	or     BYTE PTR [eax],al
  4116af:	sbb    DWORD PTR [edx+eax*4+0x4d02002],esp
  4116b6:	add    BYTE PTR [edx],dl
  4116b8:	sbb    BYTE PTR [edx+0x10030081],0x12
  4116bf:	add    eax,0x18a41043
  4116c4:	add    al,BYTE PTR [esi+0x260112ac]
  4116ca:	add    dl,BYTE PTR [edx]
  4116cc:	(bad)  
  4116cd:	dec    ebp
  4116ce:	inc    eax
  4116cf:	and    BYTE PTR [edx],dl
  4116d1:	adc    BYTE PTR [ecx],ch
  4116d3:	pop    eax
  4116d4:	push   cs
  4116d5:	add    al,0x20
  4116d7:	mov    al,ds:0x40383500
  4116dc:	add    eax,0x8140088e
  4116e1:	add    BYTE PTR [eax],cl
  4116e3:	add    BYTE PTR [eax],al
  4116e5:	sub    BYTE PTR [ebx+0x180001e0],al
  4116eb:	or     DWORD PTR [ecx+eiz*4],0x80a12016
  4116f2:	rol    BYTE PTR [ebp+0x5c],1
  4116f5:	retf   
  4116f6:	mov    BYTE PTR [edi],dh
  4116f8:	add    cl,BYTE PTR [eax]
  4116fa:	add    BYTE PTR [ebp-0x7cfdff7b],0x40
  411701:	add    BYTE PTR [ecx+eax*1-0x74],dl
  411705:	pop    edx
  411706:	add    ah,BYTE PTR [eax+0x820000]
  41170c:	xor    al,0x4
  41170e:	dec    eax
  41170f:	add    DWORD PTR [edx],eax
  411711:	add    dh,BYTE PTR [edx]
  411713:	arpl   bp,sp
  411715:	and    DWORD PTR [ecx],ebp
  411717:	pusha  
  411718:	and    BYTE PTR [esi],al
  41171a:	dec    ecx
  41171b:	add    al,0x33
  41171d:	xchg   BYTE PTR [edx+0x11287a18],dl
  411723:	add    DWORD PTR [ecx],ecx
  411725:	inc    esp
  411726:	or     eax,eax
  411728:	push   edx
  411729:	mov    BYTE PTR [ecx+eiz*2],dl
  41172c:	add    BYTE PTR [eax],bl
  41172e:	pusha  
  41172f:	and    BYTE PTR [eax],ah
  411731:	cmp    BYTE PTR [eax+edx*1],dl
  411734:	mov    cr2,esp
  411737:	add    eax,0x420d14ac
  41173c:	or     al,BYTE PTR [eax+0x2a]
  41173f:	add    DWORD PTR ds:0xcc4095,eax
  411745:	adc    BYTE PTR [edx],al
  411747:	add    bl,BYTE PTR [edx-0x73]
  41174a:	and    DWORD PTR [eax],esi
  41174c:	or     DWORD PTR [eax+0xa],eax
  41174f:	xor    al,BYTE PTR [eax]
  411751:	pop    edx
  411752:	enter  0x2160,0xda
  411756:	push   ecx
  411757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411758:	adc    DWORD PTR [esi],ecx
  41175a:	bound  eax,QWORD PTR [eax+0x1]
  41175d:	add    ah,BYTE PTR [eax+eax*8-0x40]
  411761:	push   eax
  411762:	add    BYTE PTR [esi],al
  411764:	push   es
  411765:	inc    eax
  411766:	or     DWORD PTR [eax],0x99cc010
  41176c:	and    dh,BYTE PTR [edx+0x40]
  41176f:	test   BYTE PTR [eax],al
  411771:	cs jo  0x411701
  411774:	sub    dl,BYTE PTR [edx]
  411776:	inc    esp
  411777:	and    ah,BYTE PTR [eax-0x25d38000]
  41177d:	inc    eax
  41177e:	add    BYTE PTR [ecx],ch
  411780:	add    DWORD PTR [eax],0xc7a6080
  411786:	and    al,BYTE PTR [edx]
  411788:	and    BYTE PTR [edx],dl
  41178a:	mov    al,0x22
  41178c:	and    BYTE PTR [ebx+ebx*2+0x55],ah
  411790:	shl    BYTE PTR [edx],1
  411792:	adc    DWORD PTR [edx],ecx
  411794:	add    ebp,ecx
  411796:	js     0x4117fc
  411798:	and    BYTE PTR [eax],dl
  41179a:	push   ss
  41179b:	add    DWORD PTR [edx-0x7e],0x43a3a4c0
  4117a2:	or     dl,BYTE PTR [edx+0x30386181]
  4117a8:	add    BYTE PTR [eax],al
  4117aa:	add    DWORD PTR [edx+ecx*1+0x0],ebp
  4117ae:	or     cl,BYTE PTR [ecx+0x58042212]
  4117b4:	add    BYTE PTR [eax],dl
  4117b6:	add    DWORD PTR [eax-0x4db4d4f8],edx
  4117bc:	push   esp
  4117bd:	push   ss
  4117be:	shr    BYTE PTR [eax],0x81
  4117c1:	push   eax
  4117c2:	push   esp
  4117c3:	push   ds
  4117c4:	inc    edx
  4117c5:	adc    BYTE PTR [ecx+eiz*8+0x0],dl
  4117c9:	loopne 0x411823
  4117cb:	mov    al,ds:0x754104c0
  4117d0:	call   DWORD PTR ds:0x434b28
  4117d6:	push   es
  4117d7:	adc    edx,edx
  4117d9:	mov    BYTE PTR [ecx+0x44056282],al
  4117df:	and    eax,0x20900250
  4117e4:	mov    ds:0x41445034,al
  4117e9:	add    BYTE PTR [ebx+eax*8+0x2296853],cl
  4117f0:	add    DWORD PTR [ebx],esp
  4117f2:	cmp    BYTE PTR [edx],al
  4117f4:	add    DWORD PTR [esp+ecx*1+0x681030],eax
  4117fb:	inc    ebp
  4117fc:	add    BYTE PTR [esi-0x5d7efde0],al
  411802:	inc    esi
  411803:	lods   al,BYTE PTR ds:[esi]
  411804:	pop    ebp
  411805:	push   edx
  411806:	nop
  411807:	inc    edx
  411808:	dec    edx
  411809:	add    al,0x4b
  41180b:	add    BYTE PTR [edx],cl
  41180d:	add    DWORD PTR [ecx+ecx*4],ecx
  411810:	add    BYTE PTR [edi],al
  411812:	add    al,0x2
  411814:	mov    al,BYTE PTR [eax]
  411816:	sub    al,0x4
  411818:	inc    eax
  411819:	or     DWORD PTR [eax+eax*4+0x30],esi
  41181d:	push   eax
  41181e:	or     BYTE PTR [eax],ah
  411820:	push   es
  411821:	fcom   DWORD PTR [edx+0x0]
  411824:	mov    DWORD PTR [edx+0x30],edx
  411827:	xchg   esp,eax
  411828:	push   ss
  411829:	pusha  
  41182a:	xor    BYTE PTR [ecx],al
  41182c:	add    eax,0x8b008696
  411831:	inc    eax
  411832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411833:	push   ecx
  411834:	inc    edx
  411835:	nop
  411836:	dec    ebp
  411837:	add    eax,0x66888a09
  41183c:	bound  eax,QWORD PTR [eax]
  41183e:	add    al,BYTE PTR [ecx+0x62231188]
  411844:	and    BYTE PTR [edx],0x40
  411847:	add    BYTE PTR [eax+0x6002510a],al
  41184d:	test   DWORD PTR [edx],ecx
  41184f:	add    BYTE PTR [eax],0x2a
  411852:	inc    esp
  411853:	in     eax,0xe2
  411855:	inc    ecx
  411856:	adc    ch,BYTE PTR [ecx+0x20]
  411859:	or     BYTE PTR [eax+0x41],al
  41185c:	test   BYTE PTR [eax+0x2688e4],cl
  411862:	dec    eax
  411863:	xor    DWORD PTR [eax+0x4101645a],edx
  411869:	and    al,0x80
  41186b:	or     BYTE PTR ds:0x46002101,al
  411871:	clc    
  411872:	or     BYTE PTR [ebx+eax*1+0xa551209],0x62
  41187a:	add    cl,0x6
  41187d:	inc    esi
  41187e:	pusha  
  41187f:	add    DWORD PTR [eax],eax
  411881:	pusha  
  411882:	inc    edx
  411883:	and    eax,esp
  411885:	xor    BYTE PTR [eax],0x96
  411888:	ror    BYTE PTR [edx],0xc0
  41188b:	cwde   
  41188c:	adc    cl,BYTE PTR [ecx]
  41188e:	xor    al,0x12
  411890:	mov    ah,0x0
  411892:	inc    edx
  411893:	adc    BYTE PTR [eax+0x650cf08],al
  411899:	adc    BYTE PTR [ebx+0x20484090],0x21
  4118a0:	add    DWORD PTR [edx+edx*1+0x620940e0],0x400e0480
  4118ab:	pop    es
  4118ac:	add    DWORD PTR [ecx+eiz*1],0x86020860
  4118b3:	adc    al,BYTE PTR [ebp-0x70]
  4118b6:	xor    BYTE PTR [eax],dl
  4118b8:	test   BYTE PTR [ebx+0x22],dl
  4118bb:	sbb    BYTE PTR [edx],ah
  4118bd:	mov    DWORD PTR [ebp-0x79],esp
  4118c0:	add    dl,BYTE PTR [edx]
  4118c2:	mov    al,0x2
  4118c4:	mov    al,0x0
  4118c6:	and    BYTE PTR [eax],al
  4118c8:	les    ecx,FWORD PTR [eax+0x30]
  4118cb:	inc    ecx
  4118cc:	add    BYTE PTR [ecx],dl
  4118ce:	xchg   esi,eax
  4118cf:	lds    esp,FWORD PTR [edx+0x40]
  4118d2:	add    eax,0xa5a4220
  4118d7:	add    al,0xd1
  4118d9:	dec    edx
  4118da:	sub    al,0x4
  4118dc:	inc    esi
  4118dd:	inc    eax
  4118de:	adc    al,0xa
  4118e0:	add    eax,ecx
  4118e2:	add    BYTE PTR [eax+0x19],ch
  4118e5:	add    BYTE PTR [eax],0x88
  4118e8:	add    cl,BYTE PTR [ecx]
  4118ea:	and    BYTE PTR [eax+0x54],dh
  4118ed:	push   ecx
  4118ee:	xor    cl,BYTE PTR [edx]
  4118f0:	mov    BYTE PTR [ebx+ecx*4-0x7f],ah
  4118f4:	pusha  
  4118f5:	retf   0xa824
  4118f8:	and    DWORD PTR [eax+eax*1+0x40809020],esp
  4118ff:	inc    eax
  411900:	hlt    
  411901:	mov    ?,WORD PTR [edx]
  411903:	add    BYTE PTR [esp+eax*1+0xc],ch
  411907:	pusha  
  411908:	add    ah,dl
  41190a:	and    BYTE PTR [eax],al
  41190c:	adc    dl,BYTE PTR [ebx]
  41190e:	test   BYTE PTR [eax+0x48309088],cl
  411914:	add    BYTE PTR [ecx-0x7377fffa],ch
  41191a:	add    DWORD PTR [eax+edx*1],eax
  41191d:	add    BYTE PTR [ebx+eiz*1],ch
  411920:	mov    ch,BYTE PTR [eax]
  411922:	and    BYTE PTR [eax],cl
  411924:	add    BYTE PTR [ecx],cl
  411926:	add    BYTE PTR [ecx+0xb],al
  411929:	add    al,0x8
  41192b:	add    BYTE PTR [edx],al
  41192d:	or     BYTE PTR [ecx+0x400911],bl
  411933:	test   eax,ecx
  411935:	and    al,BYTE PTR [esi]
  411937:	add    BYTE PTR [eax],cl
  411939:	and    ch,ah
  41193b:	mov    ah,0x0
  41193d:	popa   
  41193e:	add    BYTE PTR [eax],0x11
  411941:	add    bh,BYTE PTR ds:0x23326046
  411947:	and    BYTE PTR [eax],al
  411949:	aam    0x88
  41194b:	and    BYTE PTR [eax+0x3],al
  41194e:	sub    cl,BYTE PTR [eax+0x68]
  411951:	and    BYTE PTR [eax],cl
  411953:	push   ss
  411954:	push   edx
  411955:	and    BYTE PTR [eax],0x90
  411958:	add    BYTE PTR [eax+0x310009c0],al
  41195e:	add    al,0x24
  411960:	inc    eax
  411961:	add    BYTE PTR [eax],0x12
  411964:	or     BYTE PTR [edx],al
  411966:	aam    0xa0
  411968:	or     DWORD PTR [eax],eax
  41196a:	pop    eax
  41196b:	mov    BYTE PTR [ecx],al
  41196d:	add    BYTE PTR [eax+0x10802535],dl
  411973:	adc    BYTE PTR [eax+0x802c408],bh
  411979:	or     al,BYTE PTR [eax+eax*1]
  41197c:	shr    BYTE PTR [eax],0x20
  41197f:	mov    BYTE PTR [edx],dl
  411981:	add    BYTE PTR [eax],ah
  411983:	adc    BYTE PTR [edx],0x52
  411986:	cmp    eax,0xc084210
  41198b:	add    al,cl
  41198d:	sahf   
  41198e:	shl    BYTE PTR [edx],0x10
  411991:	mov    eax,0x160e101
  411996:	adc    BYTE PTR [eax],al
  411998:	add    BYTE PTR [edx-0x797cd5f0],ah
  41199e:	add    al,BYTE PTR [edx+0x4066a004]
  4119a4:	sub    al,0x40
  4119a6:	mov    ds:0x4000829,al
  4119ab:	inc    eax
  4119ac:	inc    eax
  4119ad:	add    BYTE PTR [eax+0xe001e03],0x70
  4119b4:	add    dh,BYTE PTR [ebp-0x6f9bf7e7]
  4119ba:	push   cs
  4119bb:	test   DWORD PTR [eax],edx
  4119bd:	adc    eax,0x49e04a0
  4119c2:	and    BYTE PTR [eax+0x14],bl
  4119c5:	lods   al,BYTE PTR ds:[esi]
  4119c6:	add    BYTE PTR [ecx],al
  4119c8:	or     BYTE PTR [eax],al
  4119ca:	dec    eax
  4119cb:	sub    BYTE PTR [eax+0x58],al
  4119ce:	inc    esp
  4119cf:	add    BYTE PTR [ecx],0x82
  4119d2:	xor    al,0xc2
  4119d4:	add    DWORD PTR [edx],eax
  4119d6:	rol    BYTE PTR [eax+0x402228],0x84
  4119dd:	and    BYTE PTR [ecx+0x38],cl
  4119e0:	mov    al,0x80
  4119e2:	add    BYTE PTR [eax+0x11884812],cl
  4119e8:	bound  ecx,QWORD PTR [eax+0x272864cc]
  4119ee:	and    eax,0xc0050ac8
  4119f3:	adc    BYTE PTR [esp+edx*2],dh
  4119f6:	push   0xc690014c
  4119fb:	and    BYTE PTR [eax],dh
  4119fd:	add    BYTE PTR [eax+0x66],al
  411a00:	adc    al,BYTE PTR [eax]
  411a02:	nop
  411a03:	call   0x2105:0x6542110c
  411a0a:	mov    ah,BYTE PTR [edx]
  411a0c:	or     BYTE PTR [ecx],al
  411a0e:	les    eax,FWORD PTR [ecx]
  411a10:	or     ah,BYTE PTR [eax+eax*1+0x15]
  411a14:	add    al,0x42
  411a16:	popa   
  411a17:	or     al,BYTE PTR [ecx]
  411a19:	mov    al,0x4
  411a1b:	add    DWORD PTR [eax+0x26],esp
  411a1e:	adc    BYTE PTR [ecx],al
  411a20:	inc    esi
  411a21:	mov    al,ds:0x34279403
  411a26:	or     BYTE PTR [edx],cl
  411a28:	xor    BYTE PTR [eax+0x0],al
  411a2b:	aam    0x30
  411a2d:	and    BYTE PTR [edx],0x88
  411a30:	and    BYTE PTR [edx-0x80],0x0
  411a34:	repnz stos BYTE PTR es:[edi],al
  411a36:	inc    eax
  411a37:	add    BYTE PTR [eax+eax*2],al
  411a3a:	or     BYTE PTR [esi+edx*4+0x4476280],ah
  411a41:	dec    eax
  411a42:	add    BYTE PTR [ecx],al
  411a44:	inc    edx
  411a45:	sub    ch,BYTE PTR [eax]
  411a47:	or     BYTE PTR [edx],al
  411a49:	add    ebx,DWORD PTR [eax+0x3826009]
  411a4f:	add    DWORD PTR [ecx+esi*1],0x8701000
  411a56:	test   BYTE PTR [eax],dl
  411a58:	push   es
  411a59:	and    DWORD PTR [eax+eax*1+0x0],eax
  411a5d:	loopne 0x411a6c
  411a5f:	or     BYTE PTR [edx],al
  411a61:	add    BYTE PTR [edx-0x50],dl
  411a64:	mov    edx,0x44806f44
  411a69:	mov    eax,ds:0xb271210
  411a6e:	or     dl,BYTE PTR [eax]
  411a70:	and    DWORD PTR [ecx],0x20c30070
  411a76:	inc    ecx
  411a77:	xor    DWORD PTR [eax+0x49a15158],ebp
  411a7d:	js     0x411a23
  411a7f:	add    BYTE PTR [edx],0x20
  411a82:	inc    esp
  411a83:	inc    ebp
  411a84:	xchg   edx,eax
  411a85:	js     0x411a0c
  411a87:	add    DWORD PTR [esi-0x3fdded90],eax
  411a8d:	shr    DWORD PTR [edx+0x31],0xa3
  411a91:	push   ecx
  411a92:	or     BYTE PTR [eax],dl
  411a94:	inc    esp
  411a95:	inc    ecx
  411a96:	and    DWORD PTR [eax],0x8508110
  411a9c:	add    BYTE PTR [eax+0x8],cl
  411a9f:	push   cs
  411aa0:	push   eax
  411aa1:	mov    al,ds:0x4ee11188
  411aa6:	adc    BYTE PTR [ecx+0xe40a990],dl
  411aac:	cwde   
  411aad:	add    eax,0x50022961
  411ab2:	jo     0x411ad4
  411ab4:	add    BYTE PTR [edx],0x10
  411ab7:	push   ebp
  411ab8:	add    ebx,DWORD PTR [esp+eax*8+0x41]
  411abc:	add    al,0x86
  411abe:	retf   
  411abf:	add    eax,DWORD PTR [edx]
  411ac1:	add    BYTE PTR [ecx-0x75],ah
  411ac4:	add    DWORD PTR [eax],ecx
  411ac6:	add    al,BYTE PTR [edx+0x34]
  411ac9:	nop
  411aca:	add    al,BYTE PTR [eax]
  411acc:	xchg   ebx,eax
  411acd:	and    bl,BYTE PTR [ecx-0x7e]
  411ad0:	nop
  411ad1:	sub    al,0x40
  411ad3:	add    eax,DWORD PTR [esi+0xab0044]
  411ad9:	adc    BYTE PTR [ebx],dl
  411adb:	sub    BYTE PTR [edx+0x40904015],ah
  411ae1:	xor    DWORD PTR ds:0x10222604,eax
  411ae7:	add    BYTE PTR [eax],al
  411ae9:	add    BYTE PTR [esi+0x8],al
  411aec:	push   ecx
  411aed:	add    al,0x21
  411aef:	cmp    DWORD PTR [edx],eax
  411af1:	push   eax
  411af2:	add    eax,0x22002831
  411af7:	adc    BYTE PTR [ebx+0x44],bl
  411afa:	and    al,0xc8
  411afc:	and    BYTE PTR [eax],al
  411afe:	and    ch,BYTE PTR [edx+0x69]
  411b01:	stos   BYTE PTR es:[edi],al
  411b02:	and    al,0x88
  411b04:	add    BYTE PTR [esp+esi*1],dh
  411b07:	aam    0x1
  411b09:	sub    al,0x10
  411b0b:	mov    BYTE PTR [eax+0x4524022],dl
  411b11:	ret    
  411b12:	mov    WORD PTR [eax],ss
  411b14:	and    DWORD PTR [edx],eax
  411b16:	add    BYTE PTR [edx],cl
  411b18:	test   al,0xaa
  411b1a:	test   al,0xa
  411b1c:	dec    ecx
  411b1d:	add    DWORD PTR [eax+0x4220900c],eax
  411b23:	xchg   BYTE PTR [eax+esi*8],dl
  411b26:	xchg   BYTE PTR [eax+edx*1],al
  411b29:	and    al,0xa0
  411b2b:	push   eax
  411b2c:	inc    eax
  411b2d:	xchg   edx,eax
  411b2e:	or     BYTE PTR [edx+0x40160200],dl
  411b34:	ret    
  411b35:	add    edx,DWORD PTR [edx+0x2]
  411b38:	or     DWORD PTR [eax+0x4400004b],edx
  411b3e:	sub    al,0x24
  411b40:	and    DWORD PTR [eax],eax
  411b42:	add    BYTE PTR [eax],ah
  411b44:	and    DWORD PTR [ecx+0x1201400],0x312ab0
  411b4e:	inc    eax
  411b4f:	push   ecx
  411b50:	add    DWORD PTR [eax+0x19cf11],eax
  411b56:	adc    DWORD PTR [edx+eax*1],edx
  411b59:	add    eax,DWORD PTR [ecx+0x10]
  411b5c:	add    DWORD PTR [eax-0x5ded35f9],ebp
  411b62:	or     BYTE PTR [edx+eax*4],ah
  411b65:	mov    BYTE PTR [edx],ah
  411b67:	mov    al,0x98
  411b69:	and    DWORD PTR [esi+0x48f49a38],eax
  411b6f:	and    BYTE PTR [eax+0x8],ah
  411b72:	add    BYTE PTR [eax],0x28
  411b75:	adc    bl,al
  411b77:	pop    ss
  411b78:	rcr    DWORD PTR [eax],0x3
  411b7b:	or     BYTE PTR [ecx+0x3],al
  411b7e:	and    DWORD PTR [esi],eax
  411b80:	and    al,BYTE PTR [ecx+ebp*1]
  411b83:	and    BYTE PTR [eax],ch
  411b85:	add    al,0x50
  411b87:	add    DWORD PTR [eax],edx
  411b89:	add    al,0x4
  411b8b:	jno    0x411c05
  411b8d:	and    BYTE PTR [ecx+0x80120d1],ah
  411b93:	push   ecx
  411b94:	adc    al,0xa8
  411b96:	rcr    BYTE PTR ds:0x18808001,0x23
  411b9d:	inc    edx
  411b9e:	and    dl,al
  411ba0:	pusha  
  411ba1:	add    cl,ch
  411ba3:	sub    al,0x49
  411ba5:	inc    esp
  411ba6:	push   ss
  411ba7:	dec    eax
  411ba8:	xor    BYTE PTR [eax+0x24],cl
  411bab:	push   esp
  411bac:	add    eax,DWORD PTR [ebx+0x4]
  411baf:	push   es
  411bb0:	inc    eax
  411bb1:	inc    eax
  411bb2:	push   eax
  411bb3:	je     0x411bb5
  411bb5:	adc    BYTE PTR [edx],dl
  411bb7:	and    BYTE PTR [esi+0x802900c],al
  411bbd:	mov    BYTE PTR [edx+edx*2],cl
  411bc0:	add    BYTE PTR [eax-0x7affce6d],ah
  411bc6:	adc    BYTE PTR [edi],dl
  411bc8:	add    ah,BYTE PTR [ecx]
  411bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bcb:	add    al,0x42
  411bcd:	inc    edx
  411bce:	push   esp
  411bcf:	add    eax,edx
  411bd1:	mov    eax,0x41001080
  411bd6:	pusha  
  411bd7:	test   BYTE PTR [edx+0x21],dl
  411bda:	add    BYTE PTR [edx+eax*1-0x70],al
  411bde:	mov    edx,es
  411be0:	xchg   BYTE PTR [eax+0x2],bl
  411be3:	sbb    edx,DWORD PTR [eax]
  411be5:	add    al,0x62
  411be7:	sub    al,BYTE PTR [eax]
  411be9:	or     BYTE PTR [eax],al
  411beb:	jae    0x411bcd
  411bed:	add    BYTE PTR [edx],al
  411bef:	add    dl,BYTE PTR [eax+ebp*1+0x52]
  411bf3:	add    BYTE PTR [edx+0x118c410],0xc1
  411bfa:	or     BYTE PTR [eax+eax*4],cl
  411bfd:	and    BYTE PTR [eax],al
  411bff:	and    dl,BYTE PTR [edx+0x0]
  411c02:	add    DWORD PTR [eax],ebx
  411c04:	and    BYTE PTR [eax],dl
  411c06:	mov    BYTE PTR [ecx-0x70],dl
  411c09:	sbb    DWORD PTR [edx-0x72],eax
  411c0c:	add    al,0xc8
  411c0e:	add    BYTE PTR [ebx],ah
  411c10:	adc    BYTE PTR [ebp+0x4c0009],cl
  411c16:	ret    0x601
  411c19:	mov    BYTE PTR [edx],al
  411c1b:	adc    BYTE PTR [ecx],ah
  411c1d:	add    esi,DWORD PTR [esi+0x2c]
  411c20:	adc    al,0x82
  411c22:	add    DWORD PTR [ecx+0x4],eax
  411c25:	sbb    al,0x0
  411c27:	mov    eax,ds:0xc1b0292
  411c2c:	inc    eax
  411c2d:	add    eax,0x68ac0004
  411c32:	add    BYTE PTR [edx],ah
  411c34:	mov    al,ds:0x3e882000
  411c39:	add    BYTE PTR [eax],al
  411c3b:	add    BYTE PTR [eax],cl
  411c3d:	or     ch,BYTE PTR [ebx+0x6]
  411c40:	xor    DWORD PTR [eax],ecx
  411c42:	xchg   BYTE PTR [eax-0x3f],ah
  411c45:	ret    0xa120
  411c48:	sbb    al,0x88
  411c4a:	add    DWORD PTR [ecx+0x0],eax
  411c4d:	inc    eax
  411c4e:	push   eax
  411c4f:	and    BYTE PTR [ebx+0x0],al
  411c52:	add    DWORD PTR [ecx],eax
  411c54:	add    BYTE PTR [eax+0x60],al
  411c57:	and    BYTE PTR [edx+0xa],al
  411c5a:	jecxz  0x411ca0
  411c5c:	or     al,0x0
  411c5e:	adc    DWORD PTR [eax],eax
  411c60:	mov    al,ds:0x2212023d
  411c65:	add    BYTE PTR [eax+0x8b290ab],dl
  411c6b:	or     ebx,DWORD PTR [ecx+0x100f000a]
  411c71:	dec    eax
  411c72:	xchg   BYTE PTR [edx+0x68691091],cl
  411c78:	rcl    BYTE PTR [edx+edx*1+0x16e8a18],0xc0
  411c80:	or     al,0x1
  411c82:	js     0x411cd6
  411c84:	inc    eax
  411c85:	test   BYTE PTR [eax],cl
  411c87:	mov    BYTE PTR [ecx],al
  411c89:	test   al,0x12
  411c8b:	sbb    BYTE PTR [esi],dh
  411c8d:	bound  edx,QWORD PTR [esi]
  411c8f:	add    BYTE PTR [edx+0xa],dl
  411c92:	and    BYTE PTR [ecx+eax*8-0x37fff700],dh
  411c99:	inc    eax
  411c9a:	add    al,0xa
  411c9c:	xor    DWORD PTR [eax-0x7fcb7d80],eax
  411ca2:	add    al,BYTE PTR ds:0x10180300
  411ca8:	pop    es
  411ca9:	xchg   esi,eax
  411caa:	adc    BYTE PTR [ecx],ah
  411cac:	imul   eax,eax,0xe2142199
  411cb2:	push   ss
  411cb3:	or     BYTE PTR [eax],ch
  411cb5:	add    al,0x46
  411cb7:	ret    0x84
  411cba:	add    BYTE PTR [ecx-0x7dffb7e0],dl
  411cc0:	add    BYTE PTR [edi],0x1a
  411cc3:	add    BYTE PTR [edx+0x21e00c84],ah
  411cc9:	add    BYTE PTR [esi],al
  411ccb:	fisubr DWORD PTR [ecx+0x60]
  411cce:	test   BYTE PTR [ecx+esi*4],cl
  411cd1:	xor    bl,BYTE PTR [eax]
  411cd3:	push   es
  411cd4:	add    al,0x1
  411cd6:	inc    esp
  411cd7:	and    BYTE PTR [ecx],0x28
  411cda:	or     BYTE PTR [esi],al
  411cdc:	sub    BYTE PTR [ecx],al
  411cde:	cmp    BYTE PTR [eax],dl
  411ce0:	loopne 0x411cb2
  411ce2:	add    al,0x3
  411ce4:	add    BYTE PTR [edx+0x0],al
  411ce7:	sbb    DWORD PTR [ebx+0x23c28606],esp
  411ced:	dec    eax
  411cee:	inc    edx
  411cef:	push   edx
  411cf0:	add    BYTE PTR [eax],al
  411cf2:	add    dh,dl
  411cf4:	add    DWORD PTR [ecx],edx
  411cf6:	add    BYTE PTR [eax],al
  411cf8:	or     BYTE PTR [eax],cl
  411cfa:	add    BYTE PTR [edi+0x250844],dl
  411d00:	inc    ebx
  411d01:	adc    DWORD PTR [eax+0x110b0522],esp
  411d07:	inc    eax
  411d08:	je     0x411d54
  411d0a:	add    BYTE PTR [eax+0x48],al
  411d0d:	sbb    BYTE PTR [edx-0x7c7afdf8],al
  411d13:	inc    edx
  411d14:	test   al,0x28
  411d16:	test   DWORD PTR [ebx+0x680004e0],eax
  411d1c:	xchg   edx,eax
  411d1d:	and    BYTE PTR [eax+edx*4],ah
  411d20:	adc    BYTE PTR [esi+0x42460003],dl
  411d26:	add    eax,DWORD PTR [ecx+0x61]
  411d29:	and    BYTE PTR [edx],bl
  411d2b:	add    al,0xa
  411d2d:	and    BYTE PTR [edi+eax*2],cl
  411d30:	adc    DWORD PTR [eax+ecx*4-0x22],ebx
  411d34:	add    esi,DWORD PTR [ecx]
  411d36:	adc    BYTE PTR [eax+0x8200ab1],ah
  411d3c:	test   BYTE PTR [ecx],ah
  411d3e:	and    edx,DWORD PTR [ecx]
  411d40:	and    eax,0x134101c
  411d45:	xor    DWORD PTR [eax],edi
  411d47:	nop
  411d48:	and    ch,al
  411d4a:	or     al,BYTE PTR [eax]
  411d4c:	add    DWORD PTR [eax],eax
  411d4e:	push   esp
  411d4f:	add    BYTE PTR [edx],al
  411d51:	push   esp
  411d52:	or     eax,DWORD PTR [eax]
  411d54:	add    DWORD PTR [eax+eax*1+0x8],eax
  411d58:	add    ah,ah
  411d5a:	and    BYTE PTR [edx+eax*2+0x8],0x24
  411d5f:	and    DWORD PTR [eax+0x4],edx
  411d62:	and    al,0x88
  411d64:	add    al,0x79
  411d66:	or     al,0x4
  411d68:	adc    BYTE PTR fs:[ecx+eax*2],ah
  411d6c:	adc    al,0x10
  411d6e:	push   ds
  411d6f:	add    BYTE PTR [eax],al
  411d71:	inc    esp
  411d72:	nop
  411d73:	cmp    bh,BYTE PTR [edi+0x40690a8e]
  411d79:	add    eax,DWORD PTR [eax-0x7f9fb3fe]
  411d7f:	adc    BYTE PTR [eax-0x58],ah
  411d82:	add    BYTE PTR [ecx],bl
  411d84:	add    al,0xc
  411d86:	xor    BYTE PTR [ecx],0xc0
  411d89:	test   DWORD PTR [eax],eax
  411d8b:	daa    
  411d8c:	add    al,0x1
  411d8e:	cdq    
  411d8f:	add    DWORD PTR [ecx],eax
  411d91:	sbb    al,BYTE PTR [eax]
  411d93:	add    al,0xd0
  411d95:	or     BYTE PTR [ecx+0x9],bl
  411d98:	push   eax
  411d99:	push   0x7a00150c
  411d9e:	and    DWORD PTR [ebx-0x54],edx
  411da1:	sub    BYTE PTR [edx+0x4e087210],0x0
  411da8:	inc    ebp
  411da9:	xor    BYTE PTR [eax],al
  411dab:	add    DWORD PTR [eax],ecx
  411dad:	shl    BYTE PTR [ebx],0x1a
  411db0:	add    DWORD PTR [eax-0x77eef000],ecx
  411db6:	add    DWORD PTR [edx+0x1],ecx
  411db9:	mov    WORD PTR [eax],es
  411dbb:	sub    cl,BYTE PTR es:[edx]
  411dbe:	jo     0x411dc4
  411dc0:	and    al,0x31
  411dc2:	and    cl,BYTE PTR [eax+0x7905109b]
  411dc8:	cwde   
  411dc9:	cmp    DWORD PTR ds:0x800c6d80,ebp
  411dcf:	dec    edx
  411dd0:	adc    BYTE PTR [eax-0x40],cl
  411dd3:	add    DWORD PTR [ecx],ecx
  411dd5:	xor    ah,cl
  411dd7:	inc    ebp
  411dd8:	adc    DWORD PTR [eax+0x120d6d1],ecx
  411dde:	add    eax,DWORD PTR [eax]
  411de0:	xchg   ecx,eax
  411de1:	add    al,BYTE PTR [eax]
  411de3:	sbb    al,0x18
  411de5:	enter  0x4807,0xc
  411de9:	adc    eax,DWORD PTR [eax]
  411deb:	or     al,0xc2
  411ded:	add    BYTE PTR [ecx+0x262108],ch
  411df3:	add    BYTE PTR [eax],ah
  411df5:	and    al,BYTE PTR [eax]
  411df7:	dec    edx
  411df8:	shl    DWORD PTR [edx+eiz*2+0x11],0x43
  411dfd:	add    BYTE PTR [eax],al
  411dff:	add    BYTE PTR [eax+0x16],cl
  411e02:	and    DWORD PTR [eax+0x24920121],ebx
  411e08:	or     al,0x29
  411e0a:	add    ah,dh
  411e0c:	push   ecx
  411e0d:	rcl    BYTE PTR [ecx+edx*1],0x6
  411e11:	add    DWORD PTR [eax+0x13],esp
  411e14:	sub    dl,BYTE PTR [eax-0x7e]
  411e17:	xchg   ebx,eax
  411e18:	and    BYTE PTR [ecx-0x5fffffdf],al
  411e1e:	push   eax
  411e1f:	and    BYTE PTR [eax],al
  411e21:	inc    edx
  411e22:	inc    edx
  411e23:	add    al,0x8a
  411e25:	adc    DWORD PTR [ecx+0x21ed2515],eax
  411e2b:	mov    eax,DWORD PTR [ecx]
  411e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2e:	adc    al,0x93
  411e30:	add    DWORD PTR [eax+0x40408c33],eax
  411e36:	add    dl,BYTE PTR [ebp-0x40]
  411e39:	shl    BYTE PTR [edx],0x20
  411e3c:	add    BYTE PTR [ecx],al
  411e3e:	inc    eax
  411e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e40:	adc    BYTE PTR [esi],cl
  411e42:	add    ah,BYTE PTR [eax-0x40]
  411e45:	and    BYTE PTR [ecx+0x60102280],dl
  411e4b:	imul   esp,DWORD PTR [eax+0x8010a8],0x24180416
  411e55:	sub    dh,dh
  411e57:	cmp    al,BYTE PTR [eax+0x42]
  411e5a:	or     BYTE PTR [ecx],al
  411e5c:	adc    DWORD PTR [eax+edx*1+0x9454142],eax
  411e63:	popa   
  411e64:	loopne 0x411e2a
  411e66:	xchg   esp,eax
  411e67:	and    DWORD PTR [eax+ecx*1+0x58],edx
  411e6b:	shl    BYTE PTR [eax+0x6100c3],0x1
  411e72:	and    BYTE PTR [edx],ah
  411e74:	lods   al,BYTE PTR ds:[esi]
  411e75:	add    BYTE PTR [eax],cl
  411e77:	inc    eax
  411e78:	adc    dl,BYTE PTR [ecx+eiz*1]
  411e7b:	xor    al,BYTE PTR [edi]
  411e7d:	add    BYTE PTR [esp+eax*4],0x40
  411e81:	mov    ds:0x44140160,al
  411e86:	add    eax,DWORD PTR [eax+0x10402c60]
  411e8c:	add    DWORD PTR [edx+eax*1],esp
  411e8f:	add    al,0x15
  411e91:	mov    eax,ds:0x50ca200c
  411e96:	adc    BYTE PTR [eax],0x4e
  411e99:	add    al,0x0
  411e9c:	sub    BYTE PTR [eax],bl
  411e9e:	and    BYTE PTR [eax],al
  411ea0:	sbb    al,0x20
  411ea2:	mov    ds:0x84062444,al
  411ea7:	add    al,BYTE PTR [edx+0x40600423]
  411ead:	and    dh,BYTE PTR [ecx]
  411eaf:	xor    cl,BYTE PTR [eax+ebx*1+0x528113]
  411eb6:	dec    eax
  411eb7:	mov    ss,WORD PTR [eax-0x7a]
  411eba:	add    BYTE PTR [eax],al
  411ebc:	add    al,BYTE PTR [eax-0x6fdfbfd4]
  411ec2:	add    DWORD PTR [ecx],esp
  411ec4:	test   al,0x82
  411ec6:	xor    BYTE PTR [edx+0x314836c0],al
  411ecc:	push   es
  411ecd:	push   0x4040200
  411ed2:	pop    eax
  411ed3:	push   ecx
  411ed4:	sbb    BYTE PTR [ebx+0x20040b38],al
  411eda:	loopne 0x411efc
  411edc:	push   0x24006030
  411ee1:	nop
  411ee2:	or     ah,BYTE PTR [ecx]
  411ee4:	and    ebp,DWORD PTR [eax+0x24c02300]
  411eea:	sbb    al,BYTE PTR [ecx+0x4ea480]
  411ef0:	adc    BYTE PTR [eax+eax*1],ah
  411ef3:	inc    esp
  411ef4:	add    DWORD PTR [ecx],esp
  411ef6:	add    al,0x1
  411ef8:	add    BYTE PTR [eax],0xe
  411efb:	adc    BYTE PTR [eax-0x7d],bl
  411efe:	mov    cl,0x1
  411f00:	inc    ecx
  411f01:	or     BYTE PTR [ecx],ah
  411f03:	add    DWORD PTR [edx],eax
  411f05:	inc    ecx
  411f06:	and    BYTE PTR [eax+0x0],al
  411f09:	add    BYTE PTR [edx+0x7000004],ah
  411f0f:	xchg   edx,eax
  411f10:	add    esp,DWORD PTR [edx+eax*4]
  411f13:	add    edx,DWORD PTR [eax-0x6df9c9fc]
  411f19:	inc    ecx
  411f1a:	xchg   esp,eax
  411f1b:	inc    edi
  411f1c:	push   ss
  411f1d:	add    BYTE PTR [esi-0x17ffff60],bh
  411f23:	push   eax
  411f24:	push   es
  411f25:	cwde   
  411f26:	gs push ebp
  411f28:	inc    eax
  411f29:	add    BYTE PTR [eax],cl
  411f2b:	add    eax,0x81028082
  411f30:	add    BYTE PTR [eax+eax*1+0x50810098],ah
  411f37:	dec    ecx
  411f38:	add    eax,0x44c20006
  411f3d:	int    0x25
  411f3f:	inc    eax
  411f40:	inc    esi
  411f41:	and    DWORD PTR [eax],eax
  411f43:	rcl    BYTE PTR [esi-0x77ad57ec],0x2
  411f4a:	add    cl,0x6
  411f4d:	add    al,0xea
  411f4f:	pop    eax
  411f50:	test   DWORD PTR [ecx],eax
  411f52:	nop
  411f53:	pusha  
  411f54:	sbb    BYTE PTR [edx-0x7f],0xe1
  411f58:	add    DWORD PTR [eax],0x80012a2c
  411f5e:	push   ecx
  411f5f:	mov    al,BYTE PTR [esi+0x22436012]
  411f65:	inc    eax
  411f66:	or     eax,DWORD PTR [esp+eax*1+0x22]
  411f6a:	and    al,0x88
  411f6c:	and    eax,DWORD PTR [ecx+edx*1+0x120049a2]
  411f73:	add    BYTE PTR [eax],bl
  411f75:	push   eax
  411f76:	add    BYTE PTR [ecx+edx*2],ah
  411f79:	or     DWORD PTR [esi-0x62cc7b7e],0x0
  411f80:	add    eax,0x801031
  411f85:	inc    ecx
  411f86:	inc    esp
  411f87:	inc    eax
  411f88:	xchg   edx,eax
  411f89:	pusha  
  411f8a:	add    DWORD PTR [ebx+0x41],esp
  411f8d:	loope  0x411f8f
  411f8f:	add    DWORD PTR [eax],0x10a0040b
  411f95:	and    BYTE PTR [ebp+0x44008800],ah
  411f9b:	add    al,0x8e
  411f9d:	add    eax,DWORD PTR [eax]
  411f9f:	test   al,0x24
  411fa1:	push   eax
  411fa2:	add    dl,BYTE PTR [esi]
  411fa4:	add    al,0x0
  411fa6:	call   DWORD PTR ds:0x434b04
  411fac:	add    al,0xd
  411fae:	add    ah,BYTE PTR [eax]
  411fb0:	nop
  411fb1:	add    DWORD PTR [edx],esp
  411fb3:	add    BYTE PTR [ebx],al
  411fb5:	push   ecx
  411fb6:	or     BYTE PTR [esi],0xa0
  411fb9:	shl    DWORD PTR [eax+eax*1],1
  411fbc:	xor    DWORD PTR [eax+eax*1],esp
  411fbf:	xor    al,0x31
  411fc1:	sbb    ah,BYTE PTR [edx]
  411fc3:	inc    eax
  411fc4:	enter  0x808e,0x31
  411fc8:	nop
  411fc9:	add    BYTE PTR [eax],cl
  411fcb:	and    BYTE PTR [ecx-0x53],dl
  411fce:	mov    WORD PTR [eiz*1+0x1154c600],cs
  411fd5:	push   ebx
  411fd6:	adc    BYTE PTR [eax+0x4290701a],dl
  411fdc:	adc    BYTE PTR [eax-0x7d3dff52],al
  411fe2:	add    al,0x61
  411fe4:	and    esp,DWORD PTR [edx]
  411fe6:	mov    eax,ds:0x80072149
  411feb:	or     BYTE PTR [eax],dl
  411fed:	add    BYTE PTR [eax],cl
  411fef:	dec    esp
  411ff0:	test   BYTE PTR [eax+0x68],al
  411ff3:	dec    edx
  411ff4:	sbb    BYTE PTR [ecx-0x54],dl
  411ff7:	shl    BYTE PTR [eax+ebp*1],0x4
  411ffb:	xor    BYTE PTR [eax+0x68014c16],al
  412001:	imul   eax,DWORD PTR [eax],0x60413302
  412007:	add    BYTE PTR [eax+0x40220081],al
  41200d:	sbb    BYTE PTR [eax+ecx*4],ah
  412010:	jmp    0x2003:0x8a82040
  412017:	xor    ah,BYTE PTR [eax]
  412019:	adc    BYTE PTR [edx+0x31008441],al
  41201f:	test   DWORD PTR [eax],eax
  412021:	inc    eax
  412022:	inc    ecx
  412023:	adc    BYTE PTR [eax+ebx*1],cl
  412026:	and    cl,al
  412028:	add    BYTE PTR [eax],al
  41202a:	and    eax,DWORD PTR [eax+0x6]
  41202d:	adc    BYTE PTR [eax-0x55],dl
  412030:	and    eax,edx
  412032:	ss rol dh,0x1
  412036:	inc    eax
  412037:	mov    BYTE PTR [eax+0x29c00b],ah
  41203d:	add    BYTE PTR [eax],al
  41203f:	add    DWORD PTR [eax+0x220610d],0xd1858c2
  412049:	test   BYTE PTR [esp+eax*1],dl
  41204c:	adc    DWORD PTR [eax],esp
  41204e:	add    BYTE PTR fs:[esi+eax*1+0x60432180],dl
  412056:	and    BYTE PTR [edx],al
  412058:	add    BYTE PTR [eax+eax*2],al
  41205b:	sbb    BYTE PTR [edx],dl
  41205d:	and    BYTE PTR [ebx-0x537ffffc],al
  412063:	sub    eax,0x1010cb82
  412068:	and    cl,BYTE PTR [ecx]
  41206a:	add    BYTE PTR [edx+0x21001d5],cl
  412070:	xchg   BYTE PTR [ecx],al
  412072:	add    cl,BYTE PTR [ebx]
  412074:	add    BYTE PTR [edx+0x10021042],al
  41207a:	adc    dh,0xd
  41207d:	shl    DWORD PTR [edx],0x2b
  412080:	add    BYTE PTR [edx],al
  412082:	test   DWORD PTR [eax+0x6],eax
  412085:	and    DWORD PTR [edx+0x4000012],ebp
  41208b:	add    al,0x54
  41208d:	or     ah,BYTE PTR [ebx]
  41208f:	inc    eax
  412090:	add    DWORD PTR [eax+eax*1+0x20],eax
  412094:	add    BYTE PTR [eax],dl
  412096:	fiadd  DWORD PTR [ecx+ecx*1]
  412099:	loop   0x4120b3
  41209b:	add    dh,BYTE PTR [edx]
  41209d:	and    BYTE PTR [ecx+0x20],al
  4120a0:	pop    edx
  4120a1:	add    BYTE PTR [eax+0x210208],ah
  4120a7:	dec    ebx
  4120a8:	ret    0x40a1
  4120ab:	inc    eax
  4120ac:	and    eax,0x810040
  4120b1:	popa   
  4120b2:	jo     0x4120c9
  4120b4:	xor    al,0x23
  4120b6:	or     BYTE PTR [edi],ah
  4120b8:	pop    eax
  4120b9:	adc    al,0x88
  4120bb:	xor    DWORD PTR [eax],eax
  4120bd:	or     eax,0xa20a38fc
  4120c3:	and    DWORD PTR [edx],eax
  4120c5:	xchg   BYTE PTR [ecx],al
  4120c7:	add    eax,0xb0000028
  4120cc:	loop   0x41212e
  4120ce:	add    BYTE PTR [edx],al
  4120d0:	add    BYTE PTR [edx],dl
  4120d2:	scas   eax,DWORD PTR es:[edi]
  4120d3:	adc    BYTE PTR [eax-0x6aeffbdf],ah
  4120d9:	adc    BYTE PTR ds:[edx+0x29],al
  4120dd:	mov    ds:0xb0000009,al
  4120e2:	adc    BYTE PTR [ecx],dl
  4120e4:	aam    0x40
  4120e6:	or     al,BYTE PTR [eax]
  4120e8:	or     BYTE PTR [edx],al
  4120ea:	mov    DWORD PTR [ecx+eiz*1],eax
  4120ed:	xchg   eax,esp
  4120ef:	stos   BYTE PTR es:[edi],al
  4120f0:	or     BYTE PTR [edx+0x188220],dh
  4120f6:	pusha  
  4120f7:	and    eax,0x6164428
  4120fc:	and    BYTE PTR [eax+eax*1],dh
  4120ff:	or     BYTE PTR [eax],dh
  412101:	add    eax,DWORD PTR [ecx]
  412103:	add    BYTE PTR [eax],0x0
  412106:	and    BYTE PTR [eax+0x25d00a56],dl
  41210c:	arpl   WORD PTR [ebx+0x50],ax
  41210f:	adc    BYTE PTR [ecx],dh
  412111:	push   es
  412112:	or     BYTE PTR [ebx],bh
  412114:	jno    0x41212e
  412116:	pusha  
  412117:	mov    eax,ds:0x11848800
  41211c:	mov    es,WORD PTR [ecx-0x67]
  41211f:	adc    DWORD PTR [eax],eax
  412121:	add    BYTE PTR [eax+0x20c4800b],al
  412127:	inc    esi
  412128:	push   eax
  412129:	adc    al,0x68
  41212b:	push   ds
  41212c:	dec    esp
  41212d:	and    BYTE PTR [ebx],bl
  41212f:	sbb    BYTE PTR [esi],al
  412131:	jmp    0x80414178
  412136:	push   eax
  412137:	and    dl,BYTE PTR [eax+0x45]
  41213a:	adc    cl,BYTE PTR [eax+eiz*1]
  41213d:	and    BYTE PTR [ecx+ecx*1-0x5f4ffcf4],ah
  412144:	mov    BYTE PTR [ecx],al
  412146:	add    BYTE PTR [edx+0x20],ah
  412149:	or     BYTE PTR ds:0x8b62140d,bl
  41214f:	and    DWORD PTR [edx+0x44],eax
  412152:	add    al,0xc4
  412154:	xor    al,0x10
  412156:	xchg   BYTE PTR [ecx+0x46],al
  412159:	adc    BYTE PTR [eax],al
  41215b:	inc    eax
  41215c:	les    ebp,FWORD PTR [ecx]
  41215e:	xchg   DWORD PTR es:[eax+0x31],esp
  412162:	test   BYTE PTR [eax+0x8],bh
  412165:	add    BYTE PTR [edx+0x12],al
  412168:	mov    BYTE PTR [eax],al
  41216a:	adc    DWORD PTR [eax],0x50201058
  412170:	add    BYTE PTR [eax],ah
  412172:	test   al,0x0
  412174:	dec    eax
  412175:	and    BYTE PTR [eax],bl
  412177:	add    BYTE PTR [ecx+0x48],al
  41217a:	sbb    dl,ch
  41217c:	add    al,0x20
  41217e:	add    BYTE PTR [eax],al
  412180:	mov    ds:0x380442,al
  412185:	js     0x4121db
  412187:	add    BYTE PTR [eax-0x79fbfffc],dl
  41218d:	popa   
  41218e:	add    eax,0xa4082800
  412193:	add    esp,DWORD PTR [eax-0x77effefc]
  412199:	add    DWORD PTR [eax+0x0],edx
  41219c:	loopne 0x4121e2
  41219e:	push   eax
  41219f:	inc    eax
  4121a0:	add    BYTE PTR [ecx+0x20],cl
  4121a3:	add    BYTE PTR [esi+edx*1],ah
  4121a6:	dec    edx
  4121a7:	add    eax,0x940088
  4121ac:	adc    BYTE PTR [eax],bl
  4121ae:	adc    al,0xc0
  4121b0:	push   0x104e10ca
  4121b5:	add    BYTE PTR [eax+eax*1+0x20],dl
  4121b9:	leave  
  4121ba:	rcr    BYTE PTR [eax+0x0],0x4
  4121be:	add    BYTE PTR [ebx+edx*8],0x8
  4121c2:	or     BYTE PTR [eax],al
  4121c4:	mov    al,0x38
  4121c6:	inc    edx
  4121c7:	adc    al,0x27
  4121c9:	ins    BYTE PTR es:[edi],dx
  4121ca:	push   es
  4121cb:	add    BYTE PTR [eax+0x1],al
  4121ce:	add    edx,DWORD PTR [edx]
  4121d0:	adc    DWORD PTR [esi+eax*1+0x14],esp
  4121d4:	and    al,BYTE PTR [eax+eax*4+0x28]
  4121d8:	add    BYTE PTR [eax-0x7c],al
  4121db:	or     BYTE PTR [eax*2+0x68080008],ch
  4121e2:	add    edx,DWORD PTR [eax+ebx*1]
  4121e5:	and    BYTE PTR [eax],dl
  4121e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e8:	mov    al,0x22
  4121ea:	add    dl,BYTE PTR [eax+ebp*4]
  4121ed:	push   es
  4121ee:	add    BYTE PTR [edx+0x41],al
  4121f1:	sbb    DWORD PTR [eax],0x50
  4121f4:	add    BYTE PTR [eax+0xc600020],ah
  4121fa:	inc    eax
  4121fb:	add    al,BYTE PTR [ecx+0x48]
  4121fe:	shl    DWORD PTR [ecx+0x20c02020],0x0
  412205:	shl    BYTE PTR [ecx],1
  412207:	rol    BYTE PTR [ecx+0x4],0x30
  41220b:	rcl    BYTE PTR [edx+0x0],0x6
  41220f:	or     al,BYTE PTR [edx]
  412211:	and    eax,DWORD PTR [eax+0x0]
  412214:	adc    al,0x2
  412216:	ret    0x424a
  412219:	pusha  
  41221a:	adc    BYTE PTR [eax],al
  41221c:	add    BYTE PTR [eax],0x8
  41221f:	push   ebp
  412220:	hlt    
  412221:	mov    edx,DWORD PTR [eax]
  412223:	add    BYTE PTR [edx],dl
  412225:	xor    esp,DWORD PTR [ecx+0x45000502]
  41222b:	and    DWORD PTR [ebx],eax
  41222d:	nop
  41222e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41222f:	bound  edx,QWORD PTR [eax]
  412231:	add    BYTE PTR [eax+0x20109a],al
  412237:	and    BYTE PTR [edx],dl
  412239:	inc    eax
  41223a:	add    cl,BYTE PTR [edx]
  41223c:	or     BYTE PTR [eiz*4-0x7f67fc00],ah
  412243:	inc    edx
  412244:	dec    ebp
  412245:	or     al,0xc1
  412247:	add    BYTE PTR [eax],al
  412249:	and    BYTE PTR [ecx],al
  41224b:	rcl    eax,0xa0
  41224e:	add    eax,DWORD PTR [eax+0x31c1c049]
  412254:	sub    cl,BYTE PTR [edx]
  412256:	and    esp,DWORD PTR [eax+0x14148]
  41225c:	aad    0x9
  41225e:	add    al,0x69
  412260:	xchg   ecx,eax
  412261:	inc    ebx
  412262:	or     al,BYTE PTR [eax]
  412264:	add    ecx,DWORD PTR [eax]
  412266:	nop
  412267:	push   0x10
  412269:	adc    al,BYTE PTR [ecx-0x64]
  41226c:	adc    ah,al
  41226e:	and    BYTE PTR ds:0x216c802c,0x4
  412275:	add    BYTE PTR [edx],al
  412277:	or     cl,BYTE PTR [eax]
  412279:	add    BYTE PTR [eax],0x1
  41227c:	push   eax
  41227d:	and    BYTE PTR [esi],dl
  41227f:	or     al,BYTE PTR [eax-0x34]
  412282:	add    BYTE PTR [ebp+0x20620218],ah
  412288:	mov    BYTE PTR [eax+0x4009c010],bh
  41228e:	rol    BYTE PTR [eax+0x41],1
  412291:	adc    al,0x7
  412293:	popa   
  412294:	push   eax
  412295:	outs   dx,BYTE PTR ds:[esi]
  412296:	add    al,0x4c
  412298:	dec    eax
  412299:	sbb    eax,DWORD PTR [eax]
  41229b:	pusha  
  41229c:	mov    ebp,0x18900c58
  4122a1:	inc    esp
  4122a2:	and    BYTE PTR [eax+0x0],0x10
  4122a6:	add    BYTE PTR fs:[eax],al
  4122a9:	or     eax,0x80220211
  4122ae:	mov    BYTE PTR [edx],ch
  4122b0:	or     BYTE PTR [eax],al
  4122b2:	sbb    DWORD PTR [eax-0x70],edx
  4122b5:	or     eax,DWORD PTR [edx]
  4122b7:	ins    BYTE PTR es:[edi],dx
  4122b8:	add    al,BYTE PTR [eax]
  4122ba:	add    BYTE PTR [eax],dl
  4122bc:	add    DWORD PTR [ecx+0x5000004b],esp
  4122c2:	mov    DWORD PTR [eax],eax
  4122c4:	push   ss
  4122c5:	add    BYTE PTR [eax],ah
  4122c7:	push   es
  4122c8:	cmp    al,0x29
  4122ca:	add    BYTE PTR [eax+0x0],0x58
  4122ce:	add    DWORD PTR [edx+0x4b],0x7
  4122d2:	inc    ecx
  4122d3:	inc    edx
  4122d4:	rol    BYTE PTR [esi],1
  4122d6:	inc    eax
  4122d7:	sbb    BYTE PTR [eax-0x7b],0x0
  4122db:	xchg   edx,eax
  4122dc:	add    BYTE PTR [ecx+0x5c028202],al
  4122e2:	or     BYTE PTR [eax],ah
  4122e4:	add    BYTE PTR [eax+0x48232014],dl
  4122ea:	sbb    al,0xc0
  4122ec:	or     al,0x80
  4122ee:	inc    edx
  4122ef:	xchg   esp,eax
  4122f0:	inc    ebx
  4122f1:	cmp    BYTE PTR [esi],al
  4122f3:	or     BYTE PTR [ecx],al
  4122f5:	and    BYTE PTR [edi+0x5],dl
  4122f8:	inc    esp
  4122f9:	xor    BYTE PTR [eax],al
  4122fb:	add    ecx,DWORD PTR [eax+0x20a2500]
  412301:	dec    edx
  412302:	inc    eax
  412303:	js     0x412306
  412305:	adc    al,BYTE PTR [eax]
  412307:	add    BYTE PTR [ebx+0x2a],al
  41230a:	shl    BYTE PTR ds:0x4906802,1
  412310:	inc    ecx
  412311:	mov    BYTE PTR [eax+ecx*1],cl
  412314:	and    al,0x2
  412316:	mov    al,ds:0xc204c600
  41231b:	and    BYTE PTR ds:0x80005906,al
  412321:	add    BYTE PTR [eax],cl
  412323:	or     al,0x4
  412325:	and    DWORD PTR [eax+0x11],ecx
  412328:	mov    al,ds:0x8c2081c5
  41232d:	or     ecx,DWORD PTR [eax+0x1]
  412330:	adc    DWORD PTR [eax+0x1441088],ecx
  412336:	les    esp,FWORD PTR [ecx]
  412338:	ror    ah,0x64
  41233b:	and    eax,0x4024de08
  412340:	add    BYTE PTR [ecx-0x80],al
  412343:	adc    BYTE PTR [eax+0x61],al
  412346:	add    DWORD PTR ds:0x1b415884,eax
  41234c:	and    ah,BYTE PTR [ecx+0x52]
  41234f:	push   es
  412350:	jb     0x4122f4
  412352:	add    BYTE PTR [eax],ah
  412354:	and    DWORD PTR [edi],0x81070d4a
  41235a:	and    al,0x4
  41235c:	add    BYTE PTR [edx],al
  41235e:	add    DWORD PTR [edx],esp
  412360:	or     eax,0x852405b
  412365:	push   esp
  412366:	add    DWORD PTR [eax],eax
  412368:	push   edx
  412369:	adc    ah,BYTE PTR [eax-0x596faccf]
  41236f:	test   al,0x2
  412371:	mov    ds:0x1162640,eax
  412376:	pop    es
  412377:	mov    DWORD PTR [edi],esi
  412379:	sub    BYTE PTR [esi],0x6
  41237c:	mov    esp,0x9d1442c3
  412381:	or     cl,BYTE PTR [edx]
  412383:	push   ds
  412384:	push   eax
  412385:	and    BYTE PTR [edx+0x22802958],cl
  41238b:	or     dl,BYTE PTR [eax+eax*1+0x34]
  41238f:	adc    BYTE PTR [eax],cl
  412391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412392:	les    ecx,FWORD PTR [ecx+eax*8+0x0]
  412396:	inc    eax
  412397:	mov    DWORD PTR [eax+eax*1],eax
  41239a:	xor    BYTE PTR [ebx],ah
  41239c:	or     al,0x1
  41239e:	and    DWORD PTR [eax],eax
  4123a0:	add    DWORD PTR [eax+0x2a],ecx
  4123a3:	test   al,0x4
  4123a5:	add    DWORD PTR [eax],esp
  4123a7:	add    al,0x2a
  4123a9:	add    BYTE PTR [eax],al
  4123ab:	loope  0x4123be
  4123ad:	or     BYTE PTR [eax],0x90
  4123b0:	add    esp,DWORD PTR [eax]
  4123b2:	add    BYTE PTR [esi+0x12004000],0x91
  4123b9:	or     BYTE PTR [ebx-0x7f3b7ff0],0xa3
  4123c0:	add    BYTE PTR [eax],dl
  4123c2:	or     BYTE PTR [edi+0x2080048],dh
  4123c8:	adc    dl,BYTE PTR [edx+0xc804986]
  4123ce:	es and cl,BYTE PTR cs:[ecx+edx*1]
  4123d3:	add    BYTE PTR [eax],0x80
  4123d6:	or     BYTE PTR [eax],dl
  4123d8:	add    ah,BYTE PTR [eax]
  4123da:	and    DWORD PTR [eax+0x15],eax
  4123dd:	or     eax,DWORD PTR [ecx]
  4123df:	add    DWORD PTR [esi+0x40000300],edx
  4123e5:	dec    ebp
  4123e6:	inc    edx
  4123e7:	inc    ecx
  4123e8:	add    BYTE PTR [eax+0xd],0xaa
  4123ec:	inc    eax
  4123ed:	pusha  
  4123ee:	push   es
  4123ef:	add    al,BYTE PTR [edx+0x28]
  4123f2:	test   BYTE PTR [ecx+0x52],al
  4123f5:	add    DWORD PTR [esi+0x61],ecx
  4123f8:	or     al,BYTE PTR [eax]
  4123fa:	sub    ah,BYTE PTR [ecx+0x54]
  4123fd:	add    al,0x5
  4123ff:	xchg   esp,eax
  412400:	add    eax,0x40c040
  412405:	sub    BYTE PTR [eax+0x800d101],al
  41240b:	add    BYTE PTR [eax],al
  41240d:	add    BYTE PTR ds:0x88269,cl
  412413:	and    al,0x3
  412415:	add    eax,0x40261130
  41241a:	add    BYTE PTR [eax+0x71],bh
  41241d:	add    BYTE PTR [eax+0x0],al
  412420:	test   DWORD PTR [ecx+0x16001082],ecx
  412426:	or     eax,0x821420c0
  41242b:	and    BYTE PTR [ecx+esi*8],al
  41242e:	mov    dl,BYTE PTR [edx]
  412430:	and    al,0x62
  412432:	adc    DWORD PTR [ecx+ebx*2-0x62],ecx
  412436:	xor    al,cl
  412438:	addr16 loop 0x41243b
  41243b:	mov    al,ds:0xa28540
  412440:	add    al,cl
  412442:	and    DWORD PTR [eax],edx
  412444:	add    BYTE PTR [eax-0x7f],0x0
  412448:	inc    ebp
  412449:	or     BYTE PTR [ebx],al
  41244b:	loopne 0x41244d
  41244d:	cwde   
  41244e:	cwde   
  41244f:	add    DWORD PTR [eax*4-0x6ef77ffc],edx
  412456:	dec    esp
  412457:	inc    eax
  412458:	sub    ah,BYTE PTR [esi]
  41245a:	adc    dl,BYTE PTR [edi]
  41245c:	and    eax,DWORD PTR [eax+0x10]
  41245f:	adc    DWORD PTR [edx],ebx
  412461:	inc    eax
  412462:	inc    esp
  412463:	or     BYTE PTR [edx],al
  412465:	push   es
  412466:	push   edx
  412467:	or     BYTE PTR [eax+0xc0016],0x48
  41246e:	or     BYTE PTR [ecx],0x0
  412471:	or     BYTE PTR [eax+eiz*1],cl
  412474:	or     BYTE PTR [ecx],al
  412476:	push   edx
  412477:	adc    al,BYTE PTR [eax]
  412479:	push   eax
  41247a:	add    eax,0xc140001
  41247f:	add    BYTE PTR [ecx+0x1465402],al
  412485:	push   ss
  412486:	mov    ah,0x2
  412488:	and    eax,0x42884a40
  41248d:	add    BYTE PTR [eax],al
  41248f:	adc    BYTE PTR [edx+ecx*1],dl
  412492:	xor    BYTE PTR [eax],dh
  412494:	mov    BYTE PTR [eax+eax*1],dl
  412497:	dec    eax
  412498:	mov    al,0x22
  41249a:	test   BYTE PTR [ebx-0x6e],bl
  41249d:	push   es
  41249e:	or     dh,BYTE PTR [edi+0x6409c111]
  4124a4:	sbb    al,BYTE PTR [ebx+0x40]
  4124a7:	sub    al,0x8e
  4124a9:	and    al,BYTE PTR [eax-0x77b3d7df]
  4124af:	adc    BYTE PTR [eax+eax*1+0x2580c840],dl
  4124b6:	pop    eax
  4124b7:	jno    0x4124b9
  4124b9:	push   ds
  4124ba:	add    al,BYTE PTR [ecx]
  4124bc:	pusha  
  4124bd:	call   0xa103:0x8400450
  4124c4:	test   DWORD PTR [eax],edx
  4124c6:	adc    BYTE PTR [eax+0x40d22000],bl
  4124cc:	adc    BYTE PTR [eax+0xa40d],0x4
  4124d3:	dec    edx
  4124d4:	mov    ds:0x28084885,al
  4124d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124da:	and    BYTE PTR [eax],al
  4124dc:	(bad)  
  4124dd:	loope  0x4124bf
  4124df:	add    BYTE PTR [edx+0x8001182],al
  4124e5:	adc    eax,0x26001e40
  4124ea:	and    BYTE PTR [eax+0x24000a6f],al
  4124f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f1:	add    al,0xc8
  4124f3:	inc    eax
  4124f4:	ror    BYTE PTR [ecx+0x44034222],0x50
  4124fb:	xor    al,0x40
  4124fd:	add    al,0x0
  412500:	and    BYTE PTR [edx+edx*4-0x80],al
  412504:	inc    esi
  412505:	adc    BYTE PTR [eax+0xc86c29],al
  41250b:	bound  esp,QWORD PTR [eax+0x14]
  41250e:	add    dl,ch
  412510:	adc    al,0x21
  412512:	xchg   edx,eax
  412513:	and    al,0x30
  412515:	dec    ebx
  412516:	add    BYTE PTR [esp+edx*2],al
  412519:	lods   al,BYTE PTR ds:[esi]
  41251a:	add    BYTE PTR [edx+eiz*4],dh
  41251d:	sub    al,0x20
  41251f:	and    BYTE PTR [ecx+0x2800414],al
  412525:	push   0xc0cd011
  41252a:	dec    esp
  41252b:	and    BYTE PTR [eax+eax*8+0x26020644],ah
  412532:	and    dl,BYTE PTR [eax+0x5928018c]
  412538:	adc    DWORD PTR [eax],ebp
  41253a:	add    BYTE PTR [eax-0x7ccf3bdc],al
  412540:	add    DWORD PTR [eax+0x10],ebx
  412543:	add    BYTE PTR [edx+0x11],cl
  412546:	test   BYTE PTR [eax+0x41c2443c],ah
  41254c:	sbb    al,0x80
  41254e:	shl    BYTE PTR [eax+0x20],0x82
  412552:	and    BYTE PTR [ecx],al
  412554:	inc    eax
  412555:	sbb    ah,BYTE PTR fs:[esi]
  412558:	inc    ecx
  412559:	or     BYTE PTR ds:0x885002,0xb4
  412560:	add    BYTE PTR [eax],al
  412562:	loopne 0x41256c
  412564:	add    ch,al
  412566:	loope  0x412588
  412568:	test   DWORD PTR [ecx+0x122c0],eax
  41256e:	cwde   
  41256f:	pop    ss
  412570:	add    al,BYTE PTR [eax]
  412572:	jp     0x412594
  412574:	adc    BYTE PTR ds:0x81d50010,0x20
  41257b:	test   al,0x63
  41257d:	add    DWORD PTR [ecx+0x5a080080],eax
  412583:	xchg   ebx,eax
  412584:	and    BYTE PTR [edi],dl
  412586:	add    DWORD PTR [eax],esp
  412588:	test   al,0x6
  41258a:	inc    eax
  41258b:	add    al,0x4
  41258d:	sbb    BYTE PTR [edx],al
  41258f:	add    BYTE PTR [eax],0x0
  412592:	and    DWORD PTR [esi+0x49182c4d],ecx
  412598:	add    DWORD PTR [esi],eax
  41259a:	and    BYTE PTR [ecx],cl
  41259c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41259d:	xor    BYTE PTR [eax+0x2],dh
  4125a0:	add    bl,ah
  4125a2:	mov    al,ds:0x20c0809
  4125a7:	nop
  4125a8:	adc    BYTE PTR [eax+eiz*4],0x92
  4125ac:	pushf  
  4125ad:	shl    DWORD PTR [ecx+0x20],1
  4125b0:	push   eax
  4125b1:	pop    edx
  4125b2:	inc    eax
  4125b3:	pusha  
  4125b4:	and    ah,BYTE PTR [eax]
  4125b6:	inc    edx
  4125b7:	adc    BYTE PTR [edi-0x40],ah
  4125ba:	pushf  
  4125bb:	mov    ds:0x61443138,al
  4125c0:	mov    eax,ds:0x82000007
  4125c5:	and    BYTE PTR [eax],0x1b
  4125c8:	rol    DWORD PTR [esi-0x1debfff9],1
  4125ce:	dec    eax
  4125cf:	adc    BYTE PTR [ecx],ah
  4125d1:	add    BYTE PTR [ecx+0x1445810a],bl
  4125d7:	adc    BYTE PTR [esi+0x602c8000],al
  4125dd:	add    DWORD PTR [ecx],0x46918028
  4125e3:	imul   eax,DWORD PTR [edx],0x8038694
  4125e9:	inc    ecx
  4125ea:	or     BYTE PTR [eax+eax*1+0x46],ah
  4125ee:	add    BYTE PTR [eax],ah
  4125f0:	dec    eax
  4125f1:	inc    esp
  4125f2:	add    al,ah
  4125f4:	push   eax
  4125f5:	push   es
  4125f6:	add    al,al
  4125f8:	add    DWORD PTR [eax],eax
  4125fa:	lods   al,BYTE PTR ds:[esi]
  4125fb:	mov    dl,0xa1
  4125fd:	and    eax,0x25210690
  412602:	mov    cl,BYTE PTR [eax]
  412604:	bound  esp,QWORD PTR [edx+0x2]
  412607:	add    DWORD PTR [edi],0x900830
  41260d:	test   BYTE PTR [ecx],al
  41260f:	add    DWORD PTR [ecx+0x0],eax
  412612:	add    al,0x8
  412614:	add    BYTE PTR [ebx-0x337e7fc0],ch
  41261a:	rol    DWORD PTR [eax],cl
  41261c:	and    ah,BYTE PTR [edx+0x15]
  41261f:	inc    eax
  412620:	mov    eax,ds:0x33241010
  412625:	loopne 0x4125cb
  412627:	add    DWORD PTR [edx],eax
  412629:	add    BYTE PTR [edi+0x50541454],0x81
  412630:	or     al,0x26
  412632:	add    edx,DWORD PTR [ecx]
  412634:	sbb    eax,0x10489041
  412639:	add    BYTE PTR [edx],cl
  41263b:	add    BYTE PTR [eax],0x6
  41263e:	mov    al,ds:0xcc0a0008
  412643:	add    BYTE PTR [eax+0xa004d24],ah
  412649:	add    BYTE PTR [esi-0x7b7e1eae],dl
  41264f:	push   eax
  412650:	bound  ebp,QWORD PTR [edx]
  412652:	add    BYTE PTR [edx],al
  412654:	add    BYTE PTR ds:0x43010c1,ah
  41265a:	mov    al,0x0
  41265c:	sub    eax,DWORD PTR [edx+0x68040810]
  412662:	adc    BYTE PTR [eax],0x10
  412665:	and    al,0x99
  412667:	add    al,0x56
  412669:	add    eax,0x6115114
  41266e:	add    DWORD PTR [eax+0x13490d00],eax
  412674:	add    BYTE PTR [esi],al
  412676:	sahf   
  412677:	mov    eax,0x5a0100c8
  41267c:	and    al,0x80
  41267e:	mov    ah,BYTE PTR [eax]
  412680:	adc    BYTE PTR [edx-0x76],dl
  412683:	mov    al,ds:0x85206523
  412688:	add    al,0x8
  41268a:	add    al,0x24
  41268c:	sub    eax,0x88ec412
  412691:	dec    esp
  412692:	and    al,0x14
  412694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412695:	mov    al,ds:0x5001300
  41269a:	add    al,bh
  41269c:	inc    edx
  41269d:	or     BYTE PTR [ecx+0x30],bl
  4126a0:	or     DWORD PTR [esi+0x8],esp
  4126a3:	add    al,0x10
  4126a5:	sub    cl,BYTE PTR [eax]
  4126a7:	add    eax,eax
  4126a9:	jmp    0x340:0x50408d0
  4126b0:	inc    eax
  4126b1:	add    BYTE PTR [eax],dh
  4126b3:	inc    ecx
  4126b4:	mov    al,ds:0x1a080210
  4126b9:	ror    DWORD PTR [edi-0x7f7dff80],1
  4126bf:	push   cs
  4126c0:	adc    al,0x8
  4126c2:	add    ch,BYTE PTR [ecx]
  4126c4:	into   
  4126c5:	add    al,0x81
  4126c7:	add    al,0x0
  4126c9:	rol    BYTE PTR [eax],cl
  4126cb:	add    BYTE PTR [edx-0xa7f9f6a],al
  4126d1:	inc    eax
  4126d2:	push   eax
  4126d3:	les    eax,FWORD PTR [eax]
  4126d5:	xor    BYTE PTR [edx+0x14202022],ah
  4126db:	add    esp,DWORD PTR [eax+0x2]
  4126de:	mov    DWORD PTR [eax-0x3b67cbc0],0xb0188780
  4126e8:	add    ch,BYTE PTR [esi]
  4126ea:	test   BYTE PTR [eax],al
  4126ec:	test   DWORD PTR [ecx+0x10],eax
  4126ef:	and    BYTE PTR [eax],ah
  4126f1:	inc    edx
  4126f2:	or     eax,0xa8af51a0
  4126f7:	inc    ebx
  4126f8:	adc    BYTE PTR [eax],ah
  4126fa:	add    al,0xa4
  4126fc:	add    DWORD PTR [eax+0x21260411],esp
  412702:	xor    BYTE PTR [eax],cl
  412704:	and    DWORD PTR [eax+0x2d0c8008],0x48095f
  41270e:	push   esp
  41270f:	add    bl,BYTE PTR [eax+0x284801]
  412715:	in     eax,dx
  412716:	dec    eax
  412717:	adc    BYTE PTR [ecx],0x0
  41271a:	add    BYTE PTR [eax],cl
  41271c:	pop    eax
  41271d:	pusha  
  41271e:	inc    esp
  41271f:	add    BYTE PTR [ecx],al
  412721:	gs jb  0x412744
  412724:	add    BYTE PTR [eax+0x200613b2],al
  41272a:	add    BYTE PTR [edi],al
  41272c:	or     BYTE PTR [eax+edi*1-0x67bfefee],al
  412733:	add    BYTE PTR [ecx],ch
  412735:	inc    esi
  412736:	mov    edx,DWORD PTR [ecx]
  412738:	or     eax,0x6110a190
  41273d:	push   0x20
  41273f:	dec    eax
  412740:	cmp    BYTE PTR [eax+0x2e],dl
  412743:	add    BYTE PTR [ecx],ah
  412745:	adc    al,0xa3
  412747:	add    DWORD PTR [eax],edx
  412749:	xor    BYTE PTR [eax-0x76],dl
  41274c:	push   es
  41274d:	and    al,0x8
  41274f:	and    BYTE PTR [edx+0x1840c802],al
  412755:	add    BYTE PTR [ebx],ah
  412757:	and    dl,BYTE PTR [ecx+0x66c010d]
  41275d:	inc    eax
  41275e:	and    DWORD PTR [ecx+eax*1-0x60],esp
  412762:	test   al,0x12
  412764:	js     0x412796
  412766:	add    al,0x2a
  412768:	and    BYTE PTR [eax+0x0],al
  41276b:	add    al,0x66
  41276d:	xor    dh,BYTE PTR [eax-0x7f]
  412770:	add    BYTE PTR [ebp+0x2e140062],ah
  412776:	or     DWORD PTR [edx+0x4],esi
  412779:	mov    DWORD PTR [eax],edi
  41277b:	add    bh,bh
  41277d:	adc    eax,0x4349f8
  412782:	add    bl,al
  412784:	or     DWORD PTR [eax],edx
  412786:	and    BYTE PTR [eax],al
  412788:	adc    al,0xa0
  41278a:	or     al,BYTE PTR [edx]
  41278c:	or     BYTE PTR [eax],al
  41278e:	sub    al,al
  412790:	or     BYTE PTR [edx],al
  412792:	add    BYTE PTR [edx+eiz*4+0xf801189],cl
  412799:	inc    eax
  41279a:	or     al,0x28
  41279c:	inc    ecx
  41279d:	repnz add DWORD PTR [edx],0x31ac1401
  4127a4:	and    BYTE PTR [eax],0xa1
  4127a7:	adc    DWORD PTR [edx+0x18061402],0x220e1005
  4127b1:	add    ebx,DWORD PTR [ebx+0x8e01001]
  4127b7:	cli    
  4127b8:	sbb    al,0x40
  4127ba:	ins    DWORD PTR es:[edi],dx
  4127bb:	rol    BYTE PTR [edx],0x0
  4127be:	inc    eax
  4127bf:	add    BYTE PTR [eax+eax*4],ch
  4127c2:	adc    eax,0x8600202a
  4127c7:	add    al,0x22
  4127c9:	popa   
  4127ca:	add    DWORD PTR [edx+0x8622120],eax
  4127d0:	bound  ecx,QWORD PTR [ecx+0x70]
  4127d3:	or     BYTE PTR [eax+0x37],ah
  4127d6:	add    BYTE PTR [edx-0x80],al
  4127d9:	add    BYTE PTR [esi+0x32],dl
  4127dc:	dec    ebx
  4127dd:	and    BYTE PTR [esi],al
  4127df:	add    DWORD PTR [eax],esp
  4127e1:	test   DWORD PTR [eax],eax
  4127e3:	add    DWORD PTR [edi],ecx
  4127e5:	adc    BYTE PTR [ebp+0x2411110a],ch
  4127eb:	mov    WORD PTR [eax],fs
  4127ed:	adc    al,0x40
  4127ef:	cdq    
  4127f0:	and    DWORD PTR [eax],eax
  4127f2:	adc    BYTE PTR [edx+0x4403104],al
  4127f8:	add    BYTE PTR [eax+eax*1+0x3],0x0
  4127fd:	xor    al,BYTE PTR [ebp+0x24024961]
  412803:	add    al,BYTE PTR [ecx+0x69]
  412806:	nop
  412807:	loope  0x412849
  412809:	adc    BYTE PTR [eax],al
  41280b:	mov    al,ds:0x56002600
  412810:	sub    al,0x81
  412812:	push   eax
  412813:	add    BYTE PTR [eax],dl
  412815:	push   es
  412816:	sub    DWORD PTR [eax],esp
  412818:	add    BYTE PTR [eax],bl
  41281a:	and    al,0x80
  41281c:	sub    al,BYTE PTR [esi]
  41281e:	add    ch,BYTE PTR [eax+0x2084808]
  412824:	add    BYTE PTR [eax],al
  412826:	add    al,ah
  412828:	adc    ah,BYTE PTR [edx]
  41282a:	and    al,0x22
  41282c:	add    al,0x16
  41282e:	bound  eax,QWORD PTR [eax-0x7f]
  412831:	dec    esp
  412832:	mov    eax,DWORD PTR [ecx]
  412834:	inc    esp
  412835:	adc    dl,BYTE PTR [edx]
  412837:	inc    eax
  412838:	inc    eax
  412839:	loopne 0x412846
  41283b:	adc    dl,al
  41283d:	add    DWORD PTR [ebx],ebp
  41283f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412840:	nop
  412841:	add    al,0x40
  412843:	ret    0xc28
  412846:	nop
  412847:	add    BYTE PTR [ecx],dl
  412849:	xchg   edx,eax
  41284a:	jl     0x4127dc
  41284c:	sub    BYTE PTR [eax],bh
  41284e:	and    ah,BYTE PTR [ecx+eax*1+0x663700c0]
  412855:	or     esp,0x80090000
  41285b:	xchg   edi,eax
  41285c:	push   es
  41285d:	adc    eax,0x820d0526
  412862:	es inc esp
  412864:	adc    dl,BYTE PTR [eax+0x4902a6c3]
  41286a:	add    DWORD PTR ds:0x120084,esi
  412870:	or     DWORD PTR [edx+0x34038108],eax
  412876:	xchg   esi,eax
  412877:	adc    BYTE PTR [eax],al
  412879:	pop    eax
  41287a:	test   al,0x81
  41287c:	ror    BYTE PTR [edx-0x4fc9afaf],0xd0
  412883:	and    BYTE PTR [ecx],bl
  412885:	test   al,cl
  412887:	adc    al,0x48
  412889:	add    BYTE PTR [edx+eiz*4+0x26c06046],al
  412890:	add    BYTE PTR [esp+eax*4],0x68
  412894:	add    BYTE PTR [edx+ecx*4+0x14],cl
  412898:	mov    cl,0x40
  41289a:	mov    BYTE PTR [edx+eax*1],0x0
  41289e:	xchg   esp,eax
  41289f:	dec    ebx
  4128a0:	mov    ds:0xeba20850,al
  4128a5:	adc    eax,0x23602314
  4128aa:	mov    eax,ds:0x90108858
  4128af:	inc    eax
  4128b0:	add    ch,BYTE PTR [eax+0x8]
  4128b3:	add    eax,DWORD PTR [eax]
  4128b5:	xor    BYTE PTR [ecx],bl
  4128b7:	sub    BYTE PTR [ecx+0x2001524d],dl
  4128bd:	sub    al,0x40
  4128bf:	xor    BYTE PTR [eax-0x70],0x10
  4128c3:	mov    BYTE PTR [ecx],al
  4128c5:	or     BYTE PTR [eax-0x7b],cl
  4128c8:	adc    BYTE PTR [eax],al
  4128ca:	adc    eax,0x882102b9
  4128cf:	sbb    al,0x26
  4128d1:	push   eax
  4128d2:	jo     0x4128d4
  4128d4:	sub    BYTE PTR [eax],bh
  4128d6:	and    DWORD PTR [eax],edx
  4128d8:	push   edi
  4128d9:	add    DWORD PTR [edi],0x8600b22
  4128df:	and    DWORD PTR [ecx+0x608214e],eax
  4128e5:	add    BYTE PTR [eax+0x30101812],al
  4128eb:	test   al,0xd0
  4128ed:	mov    cl,0x0
  4128ef:	adc    BYTE PTR [eax+0x9110820],al
  4128f5:	rcl    dl,0x2e
  4128f8:	add    BYTE PTR [eax],cl
  4128fa:	adc    BYTE PTR [eax+0x20],dl
  4128fd:	popa   
  4128fe:	adc    DWORD PTR [eax+0x0],eax
  412901:	and    BYTE PTR [eax],al
  412903:	rol    BYTE PTR [esi+eax*4-0x76],0xe
  412908:	add    BYTE PTR [edx],cl
  41290a:	test   eax,0xccc118
  41290f:	xchg   BYTE PTR [eax+ecx*1+0x0],cl
  412913:	inc    edi
  412914:	add    eax,0x82c41000
  412919:	or     eax,0xa451840c
  41291e:	adc    al,0x84
  412920:	add    BYTE PTR [eax+0x8],al
  412923:	or     BYTE PTR [esp+edx*4+0x24],cl
  412927:	loopne 0x4128e9
  412929:	and    cl,BYTE PTR [eax+eax*4+0x30]
  41292d:	add    BYTE PTR [eax+0x900a60],cl
  412933:	add    ch,BYTE PTR [ecx]
  412935:	add    BYTE PTR [esi+ebp*4+0x25],cl
  412939:	bound  edx,QWORD PTR [eax]
  41293b:	sub    BYTE PTR [edx+0x4],ah
  41293e:	or     BYTE PTR [ecx+0x40],al
  412941:	add    DWORD PTR [ecx+0x1],0x164a100
  412948:	mov    eax,0x40404333
  41294d:	test   DWORD PTR [eax],esp
  41294f:	add    DWORD PTR [eax],eax
  412951:	or     BYTE PTR [ecx-0x7be5dbbf],ah
  412957:	inc    ecx
  412958:	les    ecx,FWORD PTR [edx+0x9060009]
  41295e:	dec    eax
  41295f:	mov    BYTE PTR [eax],bl
  412961:	inc    esi
  412962:	les    eax,FWORD PTR [edx]
  412964:	push   cs
  412965:	adc    BYTE PTR [esp+eax*1],cl
  412968:	add    al,0x4
  41296a:	and    DWORD PTR [eax],0x860d21
  412970:	add    DWORD PTR [eax+0x12],eax
  412973:	add    BYTE PTR [eax+ecx*1],dl
  412976:	xchg   edx,eax
  412977:	add    bh,BYTE PTR [edx]
  412979:	and    BYTE PTR [ecx],al
  41297b:	add    BYTE PTR [eax],cl
  41297d:	or     BYTE PTR [ebp-0x27fff9f0],cl
  412983:	add    DWORD PTR [eax+eax*1+0xc00400],eax
  41298a:	add    BYTE PTR [ebx],ah
  41298c:	and    al,0x21
  41298e:	and    BYTE PTR [eax+0x42c02],0x49
  412995:	inc    eax
  412996:	adc    BYTE PTR [ecx],al
  412998:	inc    esi
  412999:	inc    edx
  41299a:	cmp    BYTE PTR [edx],al
  41299c:	and    BYTE PTR [eax],al
  41299e:	or     al,0x29
  4129a0:	lods   eax,DWORD PTR ds:[esi]
  4129a1:	xchg   ecx,eax
  4129a2:	xor    BYTE PTR [ecx-0x5e],dl
  4129a5:	inc    eax
  4129a6:	push   eax
  4129a7:	imul   eax,DWORD PTR [eax+eax*4+0x41264011],0xa123018
  4129b2:	mov    WORD PTR [edi+0x18],es
  4129b5:	add    DWORD PTR [ecx],edx
  4129b7:	or     BYTE PTR [eax],al
  4129b9:	add    BYTE PTR [eax],al
  4129bb:	adc    BYTE PTR [eax],0x81
  4129be:	push   eax
  4129bf:	sbb    BYTE PTR [ecx],al
  4129c1:	and    ebp,DWORD PTR [eax+edx*4+0x8801c83]
  4129c8:	add    DWORD PTR ds:0x11a1010,ecx
  4129ce:	add    eax,0xa02420
  4129d3:	add    BYTE PTR fs:[eax],cl
  4129d6:	add    BYTE PTR [eax],al
  4129d8:	push   eax
  4129d9:	or     BYTE PTR [ecx+0x4c],dh
  4129dc:	and    DWORD PTR [eax],eax
  4129de:	pusha  
  4129df:	add    al,0x24
  4129e1:	xchg   esp,eax
  4129e2:	and    BYTE PTR [ebp+0x5de04468],ah
  4129e8:	inc    esp
  4129e9:	add    al,0x2
  4129eb:	and    BYTE PTR [ebx],al
  4129ed:	sub    al,cl
  4129ef:	add    dl,BYTE PTR [eax+eax*1]
  4129f2:	and    bl,dl
  4129f4:	add    bl,BYTE PTR [eax+0x18661067]
  4129fa:	and    BYTE PTR [edx],bl
  4129fc:	add    BYTE PTR [eax],ch
  4129fe:	and    BYTE PTR [esp+eax*1],al
  412a01:	adc    BYTE PTR [edx],0xe4
  412a04:	and    BYTE PTR [edx],al
  412a06:	rol    DWORD PTR [ebx],0x49
  412a09:	and    al,0x4a
  412a0b:	add    al,0xc
  412a0d:	and    BYTE PTR [eax-0x80],al
  412a10:	add    BYTE PTR [ecx],al
  412a12:	and    dh,BYTE PTR [edx]
  412a14:	dec    esp
  412a15:	or     BYTE PTR [eax+eax*1],al
  412a18:	add    BYTE PTR [ecx+0x12],0x55
  412a1c:	and    BYTE PTR [eax],dl
  412a1e:	inc    eax
  412a1f:	pushf  
  412a20:	or     al,BYTE PTR ds:0x8925830
  412a26:	imul   eax,DWORD PTR [edx],0x4489688e
  412a2c:	add    BYTE PTR [edi],dl
  412a2e:	rol    DWORD PTR [ebx],1
  412a30:	xor    DWORD PTR [edx-0x6c],0x82401408
  412a37:	push   eax
  412a38:	and    BYTE PTR [eax],al
  412a3a:	push   ss
  412a3b:	imul   esi,DWORD PTR [esi],0x60
  412a3e:	rol    edx,1
  412a40:	add    cl,BYTE PTR [eax]
  412a42:	push   eax
  412a43:	nop
  412a44:	mov    ah,0x7
  412a46:	adc    eax,0x81106c03
  412a4b:	dec    esp
  412a4c:	test   al,0xe3
  412a4e:	mov    ds:0x12800802,al
  412a53:	push   cs
  412a54:	or     DWORD PTR [edx+0x2a28212],ebx
  412a5a:	popa   
  412a5b:	shl    BYTE PTR [eax],0x24
  412a5e:	and    BYTE PTR [ebx],dl
  412a60:	adc    ah,al
  412a62:	mov    BYTE PTR [eax+0x48225400],dl
  412a68:	add    BYTE PTR [eax+0x12082091],0x10
  412a6f:	sub    BYTE PTR [eax],cl
  412a71:	and    cl,BYTE PTR [eax]
  412a73:	pusha  
  412a74:	or     BYTE PTR [eax-0x50],cl
  412a77:	add    al,BYTE PTR [eax]
  412a79:	imul   eax,DWORD PTR [eax+0x66],0x3
  412a7d:	adc    BYTE PTR [ebx],al
  412a7f:	dec    eax
  412a80:	adc    BYTE PTR [eax],0x82
  412a83:	add    BYTE PTR [edx+0x4801640],dl
  412a89:	add    eax,0x81122069
  412a8e:	inc    eax
  412a8f:	or     dl,BYTE PTR [edx+0x20051020]
  412a95:	sub    al,0x90
  412a97:	and    BYTE PTR [edx],al
  412a99:	adc    BYTE PTR [eax+eiz*4],bh
  412a9c:	shr    BYTE PTR [eax],0x11
  412a9f:	add    dl,BYTE PTR [eax+0x200032df]
  412aa5:	adc    BYTE PTR [eax+0x58a00c83],0x11
  412aac:	and    eax,0x8810280c
  412ab1:	xor    BYTE PTR [edx+0x12],al
  412ab4:	add    BYTE PTR [edx],ch
  412ab6:	adc    DWORD PTR [eax+eax*2],0xa1214110
  412abd:	inc    eax
  412abe:	mov    eax,DWORD PTR [eax+0x20]
  412ac1:	add    BYTE PTR [esi],0x70
  412ac4:	inc    eax
  412ac5:	add    al,BYTE PTR [eax+0x54f22f11]
  412acb:	push   es
  412acc:	or     BYTE PTR [eax+edx*1],al
  412acf:	test   al,0x0
  412ad1:	add    BYTE PTR [ecx+0x20a057],al
  412ad7:	cdq    
  412ad8:	sbb    bh,BYTE PTR [ecx+0x10306061]
  412ade:	push   es
  412adf:	push   eax
  412ae0:	sub    ebp,DWORD PTR [eax+eax*1]
  412ae3:	adc    BYTE PTR [ecx+0x13304614],al
  412ae9:	cld    
  412aea:	or     al,BYTE PTR [ecx-0x3f]
  412aed:	ror    BYTE PTR [eax],0x62
  412af0:	add    al,0xd4
  412af2:	add    eax,0x252c810
  412af7:	xor    al,0xd
  412af9:	sub    DWORD PTR [ecx+0x16a01140],edx
  412aff:	ror    BYTE PTR [ebp+0x1],1
  412b02:	adc    BYTE PTR [esp+ecx*2-0x74],ch
  412b06:	add    al,0x12
  412b08:	lsl    ebx,WORD PTR [esi]
  412b0b:	or     al,BYTE PTR [eax]
  412b0d:	xor    cl,BYTE PTR [esi+0x10]
  412b10:	inc    esp
  412b11:	mov    BYTE PTR [ebx],ah
  412b13:	nop
  412b14:	adc    BYTE PTR [eax+0x22],ah
  412b17:	mov    cl,al
  412b19:	add    al,BYTE PTR [ecx]
  412b1b:	add    cl,BYTE PTR [eax]
  412b1d:	sbb    al,0x0
  412b1f:	mov    cs,WORD PTR [eax]
  412b21:	mov    cl,0x5
  412b23:	test   BYTE PTR [eax],dl
  412b25:	and    BYTE PTR [edx+0x11020940],al
  412b2b:	adc    BYTE PTR [eax-0x5fcc6ff4],ch
  412b31:	add    BYTE PTR [ecx],cl
  412b33:	sub    DWORD PTR [ecx],ecx
  412b35:	pusha  
  412b36:	int3   
  412b37:	add    BYTE PTR [ecx+eax*8+0xf492401],al
  412b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3f:	add    DWORD PTR [eax],0x0
  412b42:	add    BYTE PTR [edx+0x0],al
  412b45:	dec    eax
  412b46:	add    al,0x1
  412b48:	mov    al,BYTE PTR [eax]
  412b4a:	push   es
  412b4b:	and    DWORD PTR [ecx-0x7b655f70],edx
  412b51:	adc    BYTE PTR [eax],al
  412b53:	push   cs
  412b54:	push   es
  412b55:	add    BYTE PTR ds:0x4801100a,al
  412b5b:	dec    eax
  412b5c:	dec    eax
  412b5d:	adc    BYTE PTR [ecx+0x4],0x50
  412b61:	pop    es
  412b62:	and    DWORD PTR [eax],0x38601802
  412b68:	adc    BYTE PTR [esp+edx*2],cl
  412b6b:	and    dl,al
  412b6d:	cmp    BYTE PTR [edx],ah
  412b6f:	add    BYTE PTR [eax],al
  412b71:	push   ss
  412b72:	add    BYTE PTR [ecx],al
  412b74:	inc    ecx
  412b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b76:	stc    
  412b77:	or     BYTE PTR [eax],dl
  412b79:	adc    al,0x34
  412b7b:	or     DWORD PTR [ecx+0x4],edx
  412b7e:	xor    BYTE PTR [edx-0x16d53f78],cl
  412b84:	and    al,al
  412b86:	or     BYTE PTR [eax+0x9],cl
  412b89:	push   es
  412b8a:	push   es
  412b8b:	pusha  
  412b8c:	add    al,BYTE PTR [ecx+ebp*1]
  412b8f:	adc    dl,BYTE PTR [edx]
  412b91:	add    DWORD PTR [ecx+eax*1],edx
  412b94:	add    BYTE PTR [ebp+eax*1+0x20],cl
  412b98:	and    al,0xc0
  412b9a:	mov    BYTE PTR [eax+0x1c],bh
  412b9d:	push   es
  412b9e:	add    BYTE PTR [eax-0x58ee5bc0],al
  412ba4:	add    al,0x1
  412ba6:	inc    eax
  412ba7:	cmp    BYTE PTR [eax],bl
  412ba9:	or     BYTE PTR [edx],0x8
  412bac:	add    BYTE PTR [ecx+0x240a880],0x84
  412bb3:	sahf   
  412bb4:	and    DWORD PTR [eax],edx
  412bb6:	cmp    al,BYTE PTR [eax+0x62268057]
  412bbc:	xchg   ecx,eax
  412bbd:	sub    BYTE PTR [eax+eiz*1],al
  412bc0:	add    DWORD PTR [eax+0x21242b0],esp
  412bc6:	add    bh,BYTE PTR [eax+eax*4]
  412bc9:	mov    WORD PTR [eax+eax*4+0x30],cs
  412bcd:	add    DWORD PTR [edx+0x5],esp
  412bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd1:	add    al,0xa5
  412bd3:	and    BYTE PTR [ebp+0x0],al
  412bd6:	jo     0x412c48
  412bd8:	adc    al,BYTE PTR [eax+0x38]
  412bdb:	add    ch,BYTE PTR [eax]
  412bdd:	adc    DWORD PTR [eax],0x5404
  412be3:	pusha  
  412be4:	inc    esp
  412be5:	and    eax,esp
  412be7:	pusha  
  412be8:	sbb    al,BYTE PTR [eax]
  412bea:	xor    DWORD PTR [ecx],ecx
  412bec:	adc    DWORD PTR [eax],0x184460
  412bf2:	add    al,0x82
  412bf4:	mov    cl,BYTE PTR [esi]
  412bf6:	jl     0x412bfe
  412bf8:	es dec esi
  412bfa:	add    BYTE PTR [eax+eiz*1],al
  412bfd:	add    al,BYTE PTR [esi]
  412bff:	nop
  412c00:	add    al,BYTE PTR [eax]
  412c02:	add    bl,BYTE PTR [ebp*1-0x5fdfd3f8]
  412c09:	xchg   DWORD PTR [eax],edi
  412c0b:	adc    BYTE PTR [eax],al
  412c0d:	test   BYTE PTR [eax+0x13014800],al
  412c13:	or     al,BYTE PTR [eax+eax*2+0x8]
  412c17:	or     BYTE PTR [ebx],al
  412c19:	add    BYTE PTR [edx+0x4],ah
  412c1c:	mov    WORD PTR [eax-0x60],ss
  412c1f:	or     cl,BYTE PTR [ecx+0x40208208]
  412c25:	add    al,0x10
  412c27:	xor    DWORD PTR [eax+0x30840],ecx
  412c2d:	or     DWORD PTR [ecx-0x7eddeefe],eax
  412c33:	add    BYTE PTR [edx-0x38],dl
  412c36:	mov    al,ds:0x1041917c
  412c3b:	or     BYTE PTR [eax+eax*1],cl
  412c3e:	add    eax,0x60a31c2
  412c43:	nop
  412c44:	inc    edx
  412c45:	and    bl,BYTE PTR [esi]
  412c47:	or     BYTE PTR [eax],al
  412c49:	add    cl,BYTE PTR [ecx]
  412c4b:	push   ds
  412c4c:	sbb    BYTE PTR [ecx],al
  412c4e:	and    eax,DWORD PTR [eax-0x2e]
  412c51:	xor    BYTE PTR [eax],al
  412c53:	adc    al,BYTE PTR [eax]
  412c55:	inc    eax
  412c56:	mov    eax,ds:0x20604812
  412c5b:	and    al,0x8
  412c5d:	cdq    
  412c5e:	and    BYTE PTR [ecx],ah
  412c60:	bound  ecx,QWORD PTR [ecx+0x43d20109]
  412c66:	add    BYTE PTR [esi],cl
  412c68:	and    eax,0x2128002
  412c6d:	pusha  
  412c6e:	in     eax,dx
  412c6f:	and    DWORD PTR [eax],ebp
  412c71:	jo     0x412c46
  412c73:	dec    ecx
  412c74:	add    BYTE PTR [eax],0x8c
  412c77:	inc    eax
  412c78:	nop
  412c79:	inc    ecx
  412c7a:	mov    gs:0x14c08400,eax
  412c80:	add    ah,BYTE PTR [eax]
  412c82:	adc    BYTE PTR [edi+esi*4+0x602c8246],al
  412c89:	adc    cl,BYTE PTR ds:0x60184801
  412c8f:	xchg   edx,eax
  412c90:	sub    BYTE PTR [edx],0x9c
  412c93:	push   cs
  412c94:	add    al,BYTE PTR [eax+0x23280205]
  412c9a:	and    DWORD PTR [eax],ebx
  412c9c:	or     BYTE PTR [eax-0x456ff398],dl
  412ca2:	or     WORD PTR [eax],sp
  412ca5:	add    DWORD PTR [edx+0x74990202],eax
  412cab:	add    al,0x3
  412cad:	push   0x0
  412caf:	or     bl,BYTE PTR [edx]
  412cb1:	inc    eax
  412cb2:	and    DWORD PTR [eax],0x8
  412cb5:	add    BYTE PTR [eax],cl
  412cb7:	and    BYTE PTR [eax+eiz*1],al
  412cba:	add    dl,BYTE PTR [eax+0x56]
  412cbd:	add    al,0x80
  412cbf:	push   eax
  412cc0:	add    BYTE PTR [eax],0x80
  412cc3:	add    DWORD PTR [eax],eax
  412cc5:	dec    ebp
  412cc6:	add    BYTE PTR [eax+0x4000840a],ch
  412ccc:	es add al,0x2
  412ccf:	pusha  
  412cd0:	add    BYTE PTR [eax],cl
  412cd2:	push   cs
  412cd3:	dec    eax
  412cd4:	add    BYTE PTR [esp+edx*8],0x4
  412cd8:	adc    DWORD PTR [esi+0x4058018],edx
  412cde:	add    BYTE PTR [ecx+0x30],al
  412ce1:	inc    esp
  412ce2:	adc    DWORD PTR [eax],eax
  412ce4:	and    ecx,DWORD PTR [eax]
  412ce6:	adc    cl,BYTE PTR [ecx+0x942c243]
  412cec:	add    al,BYTE PTR [esi-0x19]
  412cef:	xor    eax,eax
  412cf1:	xchg   esi,eax
  412cf2:	add    BYTE PTR ds:0x6a40418,al
  412cf8:	add    BYTE PTR [edx],bl
  412cfa:	adc    BYTE PTR ds:0xc0182400,al
  412d00:	cmp    al,BYTE PTR [eax+ebx*1-0x7f]
  412d04:	inc    eax
  412d05:	add    BYTE PTR [edx],ch
  412d07:	add    eax,0x88025970
  412d0c:	add    BYTE PTR [edx],ch
  412d0e:	leave  
  412d0f:	add    ah,BYTE PTR [ebx]
  412d11:	adc    eax,0x108d008
  412d16:	stos   BYTE PTR es:[edi],al
  412d17:	add    BYTE PTR [eax],ah
  412d19:	ins    BYTE PTR es:[edi],dx
  412d1a:	xchg   ecx,eax
  412d1b:	rol    DWORD PTR [eax],1
  412d1d:	add    BYTE PTR [esi],0x7
  412d20:	and    BYTE PTR [ecx],0x43
  412d23:	add    BYTE PTR [edi*2-0x5b9d5fae],bh
  412d2a:	lods   al,BYTE PTR ds:[esi]
  412d2b:	sbb    BYTE PTR [eax+0x24],dl
  412d2e:	and    BYTE PTR [edx],cl
  412d30:	add    BYTE PTR [ebp-0x3f],cl
  412d33:	inc    edx
  412d34:	pop    ecx
  412d35:	rol    BYTE PTR [eax+0x74],0x1
  412d39:	xchg   edx,eax
  412d3a:	push   0x48002002
  412d3f:	and    DWORD PTR [ebx],0x2d
  412d42:	shl    BYTE PTR [ecx+0x28],0x90
  412d46:	add    BYTE PTR [ecx],al
  412d48:	or     DWORD PTR [esp+eax*1],eax
  412d4b:	add    BYTE PTR [eax],dl
  412d4d:	add    BYTE PTR [edx],ah
  412d4f:	cwde   
  412d50:	add    BYTE PTR [esi+0x0],ah
  412d53:	nop
  412d54:	add    al,0xa4
  412d56:	add    DWORD PTR [edx],ebx
  412d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5a:	test   BYTE PTR [eax],dh
  412d5c:	add    al,BYTE PTR [eax]
  412d5e:	adc    al,BYTE PTR [eax]
  412d60:	add    BYTE PTR [ecx],al
  412d62:	add    DWORD PTR [eax],ecx
  412d64:	mov    al,ds:0x2ec00a00
  412d69:	add    al,0x2
  412d6b:	adc    BYTE PTR [eax],cl
  412d6d:	dec    esp
  412d6e:	add    BYTE PTR [eax-0x7c],bl
  412d71:	sub    al,BYTE PTR [eax+0x20]
  412d74:	loop   0x412db6
  412d76:	add    BYTE PTR [eax],ah
  412d78:	or     BYTE PTR [eax+0x4],al
  412d7b:	add    BYTE PTR [eax],0x55
  412d7e:	inc    eax
  412d7f:	enter  0x2711,0x0
  412d83:	cwde   
  412d84:	add    BYTE PTR [esi],cl
  412d86:	add    BYTE PTR [edi],dl
  412d88:	add    al,BYTE PTR [esi+0x388261c0]
  412d8e:	pusha  
  412d8f:	sbb    DWORD PTR [edx],edx
  412d91:	xchg   edx,eax
  412d92:	push   es
  412d93:	adc    al,0x1f
  412d95:	push   cs
  412d96:	inc    esi
  412d97:	add    BYTE PTR [eax],cl
  412d99:	test   BYTE PTR [eax],cl
  412d9b:	push   eax
  412d9c:	and    BYTE PTR [eax],al
  412d9e:	xor    BYTE PTR [eax+0x34d40842],al
  412da4:	sbb    BYTE PTR [edx],al
  412da6:	adc    DWORD PTR [eax+0x681294],eax
  412dac:	add    bh,BYTE PTR [edi]
  412dae:	or     BYTE PTR [ebx],cl
  412db0:	jne    0x412d84
  412db2:	add    al,0x40
  412db4:	and    DWORD PTR [edx+0xa],0x50b64086
  412dbb:	add    al,BYTE PTR [ecx]
  412dbd:	add    eax,DWORD PTR [eax+eax*8]
  412dc0:	inc    ecx
  412dc1:	inc    eax
  412dc2:	sbb    BYTE PTR [edx+0x29],al
  412dc5:	ss pop eax
  412dc7:	add    al,0x0
  412dc9:	add    BYTE PTR [eax+0x12420000],dh
  412dcf:	and    BYTE PTR [eax+0xc],dl
  412dd2:	or     BYTE PTR [eax+edx*1],0x52
  412dd6:	inc    eax
  412dd7:	or     BYTE PTR [eax],bh
  412dd9:	sub    DWORD PTR [edx+eax*1],0x81103888
  412de0:	add    al,0x88
  412de2:	adc    dl,BYTE PTR [eax]
  412de4:	sbb    DWORD PTR [ecx+0x2b0252a0],eax
  412dea:	add    eax,0x866119c0
  412def:	sbb    BYTE PTR [ebx-0x56],dl
  412df2:	inc    edx
  412df3:	push   cs
  412df4:	cmp    dh,BYTE PTR [ebx]
  412df6:	inc    ecx
  412df7:	and    BYTE PTR [edx],ah
  412df9:	add    BYTE PTR [eax+0xb084881],dh
  412dff:	and    al,0x60
  412e01:	add    al,0x1e
  412e03:	and    BYTE PTR [ecx],ah
  412e05:	sbb    BYTE PTR [edx],al
  412e07:	and    DWORD PTR [eax+0x6],0x0
  412e0b:	fimul  DWORD PTR [eax]
  412e0d:	add    BYTE PTR [eax],al
  412e0f:	add    BYTE PTR [eax+ecx*1+0xc8416a4],al
  412e16:	adc    BYTE PTR [ecx+0x20c00c00],0x0
  412e1d:	push   ebp
  412e1e:	shl    BYTE PTR [eax-0x58],0x25
  412e22:	xchg   ecx,eax
  412e23:	add    al,0x0
  412e25:	and    al,BYTE PTR [ebp+0x11]
  412e28:	es add al,0x80
  412e2b:	and    DWORD PTR [ebx+0x1ae80282],eax
  412e31:	or     dl,cl
  412e33:	test   BYTE PTR [eax+0x42],al
  412e36:	xchg   ecx,eax
  412e37:	add    BYTE PTR [eax],0x24
  412e3a:	or     BYTE PTR [esi+edx*2-0x7e],cl
  412e3e:	sub    al,cl
  412e40:	add    al,BYTE PTR [esi-0x7effb6bf]
  412e46:	inc    ebp
  412e47:	add    ah,BYTE PTR [eax]
  412e49:	in     al,0xe
  412e4b:	xor    DWORD PTR [edx],edi
  412e4d:	or     BYTE PTR [ebx+eiz*1],al
  412e50:	and    DWORD PTR [ebp+0x8198071],eax
  412e56:	mov    BYTE PTR [edx],ah
  412e58:	in     eax,dx
  412e59:	sub    BYTE PTR [ecx],al
  412e5b:	test   BYTE PTR [edx],ah
  412e5d:	add    eax,0x91c0000c
  412e62:	and    al,0x91
  412e64:	unpcklps xmm4,XMMWORD PTR [ebp-0x337f9f7e]
  412e6b:	rol    BYTE PTR [edx+0x2590060],cl
  412e71:	js     0x412e83
  412e73:	xchg   esi,eax
  412e74:	mov    eax,ds:0x2203200b
  412e79:	add    cl,BYTE PTR [eax+0x40]
  412e7c:	add    BYTE PTR [eax],dl
  412e7e:	add    al,0xa2
  412e80:	or     BYTE PTR [eax+0x28],al
  412e83:	xchg   ecx,eax
  412e84:	mov    cs,WORD PTR ds:0x10801c0
  412e8a:	test   DWORD PTR [eax],eax
  412e8c:	adc    BYTE PTR [ecx],al
  412e8e:	bound  esp,QWORD PTR [eax]
  412e90:	inc    eax
  412e91:	imul   edi,DWORD PTR [ecx+eax*1],0x1d020160
  412e98:	and    BYTE PTR [eax+0x15],dl
  412e9b:	sbb    al,BYTE PTR [eax+0x22e00c01]
  412ea1:	dec    ebx
  412ea2:	mov    ds:0x4121a240,al
  412ea7:	mov    al,ds:0x5300c970
  412eac:	inc    eax
  412ead:	shr    BYTE PTR [eax+0x230b1410],0x0
  412eb4:	xor    al,BYTE PTR [eax]
  412eb6:	adc    eax,0x10b00100
  412ebb:	push   cs
  412ebc:	add    DWORD PTR [ecx+eax*8],eax
  412ebf:	inc    esp
  412ec0:	add    BYTE PTR [eax],dl
  412ec2:	daa    
  412ec3:	add    ch,BYTE PTR [eax+edx*4]
  412ec6:	jmp    0x262b2efc
  412ecb:	and    al,0x80
  412ecd:	xor    BYTE PTR [eax],al
  412ecf:	test   al,0x14
  412ed1:	add    al,0x20
  412ed3:	enter  0x2,0x16
  412ed7:	add    al,0x9
  412ed9:	or     edx,eax
  412edb:	dec    esp
  412edc:	and    al,0xa0
  412ede:	loopne 0x412ea4
  412ee0:	inc    eax
  412ee1:	or     dl,al
  412ee3:	adc    BYTE PTR [ecx+edi*1],ah
  412ee6:	add    DWORD PTR [eax],edi
  412ee8:	mov    esp,0x421d281
  412eed:	pusha  
  412eee:	or     BYTE PTR [edi-0x6c],0x0
  412ef2:	inc    eax
  412ef3:	and    al,0xa2
  412ef5:	add    DWORD PTR [eax+eiz*1+0x22],ebp
  412ef9:	or     BYTE PTR ds:0x1cb20c80,al
  412eff:	rol    ch,0xb
  412f02:	adc    eax,0x6090660c
  412f07:	and    al,BYTE PTR [esp]
  412f0a:	push   cs
  412f0b:	and    al,0x3
  412f0d:	loopne 0x412e98
  412f0f:	add    BYTE PTR [eax-0x7e],al
  412f12:	or     cl,BYTE PTR [eax]
  412f14:	add    al,0x52
  412f16:	cmp    ah,BYTE PTR [eax+0x115828ac]
  412f1c:	add    dl,BYTE PTR [ecx]
  412f1e:	add    al,0x20
  412f20:	and    BYTE PTR [ecx],bl
  412f22:	and    ecx,eax
  412f24:	and    edx,DWORD PTR [ecx]
  412f26:	dec    edx
  412f27:	xor    eax,ecx
  412f29:	mov    WORD PTR [ecx+0x400042b1],fs
  412f2f:	dec    ecx
  412f30:	test   DWORD PTR [eax],eax
  412f32:	dec    esp
  412f33:	or     DWORD PTR [edx],eax
  412f35:	mov    eax,0xa0110266
  412f3a:	inc    edx
  412f3b:	sub    BYTE PTR [eax+0x4004a009],al
  412f41:	bound  ecx,QWORD PTR [eax]
  412f43:	dec    esp
  412f44:	or     DWORD PTR [edx-0x7857d6fe],ecx
  412f4a:	daa    
  412f4b:	add    al,ah
  412f4d:	or     eax,0x14808a8
  412f52:	call   DWORD PTR ds:0x434c68
  412f58:	adc    BYTE PTR [eax],ah
  412f5a:	add    BYTE PTR [eax],al
  412f5c:	add    al,0xa8
  412f5e:	add    DWORD PTR [eax+0x42],edx
  412f61:	shl    BYTE PTR [ecx],0xb2
  412f64:	add    al,0x12
  412f66:	inc    eax
  412f67:	and    al,0x0
  412f69:	ret    0x600c
  412f6c:	and    BYTE PTR ds:0xc30300b7,al
  412f72:	mov    ds:0x882670c9,al
  412f77:	aad    0x1
  412f79:	fwait
  412f7a:	add    eax,0x89421080
  412f7f:	add    edx,DWORD PTR [edx+0x24]
  412f82:	add    eax,0x61108441
  412f87:	inc    edi
  412f88:	aad    0x11
  412f8a:	add    DWORD PTR [eax],ebx
  412f8c:	sbb    BYTE PTR [eax],cl
  412f8e:	sbb    al,0x0
  412f90:	or     DWORD PTR [ebp+0x1300a422],esp
  412f96:	add    BYTE PTR [eax],0x80
  412f99:	add    al,0x6
  412f9b:	inc    edx
  412f9c:	add    BYTE PTR [eax],dl
  412f9e:	inc    edx
  412f9f:	sub    esi,DWORD PTR [ecx]
  412fa1:	aaa    
  412fa2:	add    BYTE PTR [ecx-0x7a],al
  412fa5:	test   DWORD PTR [edx],esp
  412fa7:	add    BYTE PTR [eax],al
  412fa9:	add    BYTE PTR [ecx],ah
  412fab:	fsub   DWORD PTR [edx]
  412fad:	add    BYTE PTR ds:0x6b08c8,al
  412fb3:	add    eax,0x8001036
  412fb8:	daa    
  412fb9:	cmp    BYTE PTR [ecx],al
  412fbb:	add    al,0x14
  412fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbe:	or     BYTE PTR [ebx],al
  412fc0:	adc    DWORD PTR [edx-0x7b6cbe3e],eax
  412fc6:	push   esp
  412fc7:	and    al,0x88
  412fc9:	add    BYTE PTR [ecx+0x44402240],0x50
  412fd0:	sub    BYTE PTR [edx+0x3],al
  412fd3:	sbb    al,0x1
  412fd5:	inc    esp
  412fd6:	add    al,0x40
  412fd8:	lods   eax,DWORD PTR ds:[esi]
  412fd9:	add    dl,BYTE PTR [ecx+0x10]
  412fdc:	sbb    DWORD PTR [ecx],eax
  412fde:	xor    DWORD PTR [edx],0x26d5
  412fe4:	add    BYTE PTR [eax+ecx*4+0x6],0xa4
  412fe9:	cmp    BYTE PTR [esi+0x43308484],0xc3
  412ff0:	add    ecx,DWORD PTR [eax]
  412ff2:	and    BYTE PTR [edx+0x60],al
  412ff5:	pushw  es
  412ff7:	xchg   esi,eax
  412ff8:	add    BYTE PTR [eax+0xc],al
  412ffb:	dec    esp
  412ffc:	or     DWORD PTR [edx],eax
  412ffe:	push   ds
  412fff:	fs dec eax
  413001:	add    BYTE PTR [esi],dh
  413003:	inc    edx
  413004:	inc    ebx
  413005:	add    eax,ebx
  413007:	mov    BYTE PTR [edx],ch
  413009:	inc    esi
  41300a:	add    BYTE PTR [eax],al
  41300c:	inc    ebp
  41300d:	add    BYTE PTR [eax],al
  41300f:	add    esp,DWORD PTR [ebp-0x1dff3cf0]
  413015:	sbb    al,BYTE PTR [eax+0x48]
  413018:	push   eax
  413019:	add    al,0x1
  41301b:	popa   
  41301c:	les    eax,FWORD PTR [ecx-0x37de5f60]
  413022:	xchg   edx,eax
  413023:	pop    ecx
  413024:	inc    esp
  413025:	inc    esp
  413026:	push   edx
  413027:	cmp    al,0x1
  413029:	fadd   DWORD PTR [ebp-0x7fbfbfd7]
  41302f:	xor    BYTE PTR [esi+0x0],al
  413032:	adc    DWORD PTR [edi+0x16],0x14200104
  413039:	dec    ebx
  41303a:	adc    al,0x12
  41303c:	add    BYTE PTR cs:[ecx],al
  41303f:	add    ecx,DWORD PTR [eax]
  413041:	add    BYTE PTR [edx],ah
  413043:	ret    0x604
  413046:	inc    edx
  413047:	add    BYTE PTR [edi],0x41
  41304a:	and    BYTE PTR [eax-0x40],al
  41304d:	add    DWORD PTR [eax],eax
  41304f:	adc    BYTE PTR [eax+0x4],dl
  413052:	or     BYTE PTR [eax],dl
  413054:	inc    eax
  413055:	add    BYTE PTR [eax],ah
  413057:	and    al,cl
  413059:	mov    es,WORD PTR [eax]
  41305b:	sbb    dl,BYTE PTR [ebx+0x3c]
  41305e:	add    BYTE PTR [esi-0x80],cl
  413061:	xor    DWORD PTR [edx],esi
  413063:	push   cs
  413064:	inc    esp
  413065:	or     eax,DWORD PTR [ecx+0x48602640]
  41306b:	inc    eax
  41306c:	add    al,BYTE PTR [eax]
  41306e:	push   eax
  41306f:	add    DWORD PTR [edx-0x79],ecx
  413072:	add    eax,DWORD PTR [eax]
  413074:	or     eax,0x2014208e
  413079:	xor    BYTE PTR [eax+ecx*1+0x44802212],al
  413080:	add    BYTE PTR [ebx],cl
  413082:	sbb    DWORD PTR [eax+0x4],esi
  413085:	and    BYTE PTR [eax+edx*2],dl
  413088:	add    bl,BYTE PTR [ebp+0x5]
  41308b:	add    BYTE PTR [ecx],0x40
  41308e:	or     DWORD PTR [edx+esi*1],edx
  413091:	add    al,BYTE PTR [ebx+eax*2]
  413094:	push   es
  413095:	mov    dl,0x4
  413097:	inc    edx
  413098:	and    al,0x19
  41309a:	mov    ds:0x61c8224c,eax
  41309f:	add    DWORD PTR [edx+0x10],eax
  4130a2:	or     al,BYTE PTR [edx]
  4130a4:	add    BYTE PTR [eax],dl
  4130a6:	and    BYTE PTR [eax],al
  4130a8:	push   es
  4130a9:	mov    dl,0x20
  4130ab:	add    DWORD PTR [ebx],ecx
  4130ad:	mov    cl,0x80
  4130af:	adc    ah,0x24
  4130b2:	add    BYTE PTR [esp+ebx*1+0x40],0x24
  4130b7:	and    al,0x8a
  4130b9:	inc    ebx
  4130ba:	add    al,0x81
  4130bc:	add    BYTE PTR [edi+0x58941442],ah
  4130c2:	add    al,al
  4130c4:	add    BYTE PTR [eax+0x788280cd],ah
  4130ca:	or     ah,BYTE PTR [eax]
  4130cc:	push   esp
  4130cd:	cmp    DWORD PTR [edx+0x438c2006],edx
  4130d3:	mov    BYTE PTR [edx],al
  4130d5:	mov    al,0x9
  4130d7:	push   esp
  4130d8:	add    BYTE PTR [eax],bl
  4130da:	inc    ecx
  4130db:	or     DWORD PTR [esi],ecx
  4130dd:	add    BYTE PTR [eax+eiz*1],al
  4130e0:	add    BYTE PTR [eiz*1+0x20409211],cl
  4130e7:	add    al,BYTE PTR [ecx]
  4130e9:	and    BYTE PTR [ecx+0x41],al
  4130ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ed:	inc    edx
  4130ee:	inc    esp
  4130ef:	add    BYTE PTR [eax],ah
  4130f1:	add    bl,BYTE PTR [eax]
  4130f3:	push   edx
  4130f4:	dec    eax
  4130f5:	inc    edx
  4130f6:	nop
  4130f7:	add    eax,DWORD PTR [eax+ecx*4+0x140c6010]
  4130fe:	pusha  
  4130ff:	mov    ah,BYTE PTR ds:0x218289c
  413105:	add    cl,BYTE PTR [edx]
  413107:	or     BYTE PTR [ebx],dh
  413109:	mov    al,ds:0x2839dc
  41310e:	add    BYTE PTR [eax+0x29040001],al
  413114:	or     BYTE PTR [eax],dl
  413116:	push   es
  413117:	sbb    al,al
  413119:	adc    DWORD PTR [ecx],eax
  41311b:	add    ah,BYTE PTR [ecx]
  41311d:	sbb    al,BYTE PTR [edi]
  41311f:	or     DWORD PTR [eax],eax
  413121:	add    al,0xd0
  413123:	ret    0x6a69
  413126:	adc    DWORD PTR ds:0x402c600,edx
  41312c:	push   edx
  41312d:	adc    al,BYTE PTR [edx]
  41312f:	add    BYTE PTR [eax],ah
  413131:	sbb    DWORD PTR ds:0x4b411010,eax
  413137:	push   ecx
  413138:	xor    cl,BYTE PTR [eax+0x0]
  41313b:	add    BYTE PTR [eax+0x861a014],ah
  413141:	and    BYTE PTR [ebx+0x44],ch
  413144:	adc    bl,BYTE PTR [eax]
  413146:	sub    BYTE PTR [eax+0x41048ce0],ah
  41314c:	add    BYTE PTR [eax],dl
  41314e:	pop    edx
  41314f:	inc    edi
  413150:	add    DWORD PTR [esi],ecx
  413152:	dec    esp
  413153:	dec    ecx
  413154:	add    BYTE PTR [eax],dl
  413156:	arpl   WORD PTR [eax],sp
  413158:	inc    edx
  413159:	adc    BYTE PTR [edx],al
  41315b:	loopne 0x4130de
  41315d:	and    BYTE PTR [ecx+eax*1],al
  413160:	xor    DWORD PTR [eax+0x28001201],edx
  413166:	sub    dh,BYTE PTR [edx]
  413168:	add    dh,BYTE PTR ds:0x420106
  41316e:	inc    ebx
  41316f:	add    BYTE PTR [eax+ecx*4],0x25
  413173:	or     BYTE PTR [edx+ecx*4],dl
  413176:	sub    al,0x25
  413178:	push   0x1c07220
  41317d:	adc    al,0x1
  41317f:	and    al,BYTE PTR [edx]
  413181:	add    DWORD PTR [ecx],esp
  413183:	push   es
  413184:	add    al,BYTE PTR [eax]
  413186:	push   edx
  413187:	add    edi,DWORD PTR [ebx]
  413189:	adc    BYTE PTR [edx-0x7bddfdd8],ah
  41318f:	xchg   ecx,eax
  413190:	sbb    dl,BYTE PTR [ebx+0x708d0118]
  413196:	add    eax,ecx
  413198:	add    BYTE PTR [edx],dh
  41319a:	jo     0x4131b4
  41319c:	add    esp,DWORD PTR [eax]
  41319e:	es inc eax
  4131a0:	add    BYTE PTR [eax],al
  4131a2:	add    BYTE PTR [eax],ah
  4131a4:	push   es
  4131a5:	add    al,0x64
  4131a7:	add    BYTE PTR [eax],ah
  4131a9:	inc    eax
  4131aa:	add    BYTE PTR [esp+eax*4],0x81
  4131ae:	add    BYTE PTR [ebp+0x3],bl
  4131b1:	inc    esp
  4131b2:	add    BYTE PTR [eax],0x91
  4131b5:	add    BYTE PTR [edx],dl
  4131b7:	and    DWORD PTR [eax],0xcb2ca008
  4131bd:	adc    BYTE PTR [ecx],dl
  4131bf:	or     al,0x2
  4131c1:	int3   
  4131c2:	and    BYTE PTR [eax],al
  4131c4:	dec    eax
  4131c5:	add    DWORD PTR ds:0x28802402,edx
  4131cb:	add    cl,BYTE PTR [edx]
  4131cd:	or     BYTE PTR [eax+0x6101000],dl
  4131d3:	xor    BYTE PTR [edx],dl
  4131d5:	add    BYTE PTR [eax],dl
  4131d7:	icebp  
  4131d8:	adc    BYTE PTR [edx],al
  4131da:	push   eax
  4131db:	cmp    eax,0x80c8549
  4131e0:	sub    BYTE PTR [ecx],al
  4131e2:	xor    DWORD PTR [eax+0x40041884],edx
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	add    BYTE PTR [ecx],bl
  4131ec:	adc    DWORD PTR [esi],0x11
  4131ef:	add    DWORD PTR [ecx],eax
  4131f1:	push   eax
  4131f2:	adc    BYTE PTR [ecx+0x5],ah
  4131f5:	sbb    DWORD PTR [edx-0x40],ebx
  4131f8:	mov    BYTE PTR [ebx],al
  4131fa:	jo     0x413205
  4131fc:	inc    ecx
  4131fd:	add    DWORD PTR [ecx],edx
  4131ff:	and    ah,BYTE PTR [edx]
  413201:	dec    esp
  413202:	or     ch,dl
  413204:	pusha  
  413205:	add    ah,dh
  413207:	test   DWORD PTR [ecx],eax
  413209:	or     DWORD PTR [eax+0x0],eax
  41320c:	add    BYTE PTR [esp+eax*4+0x58],bl
  413210:	add    al,BYTE PTR [edi]
  413212:	mov    al,BYTE PTR [ecx+0x40]
  413215:	xchg   edx,eax
  413216:	xor    BYTE PTR [eax+0x22438b42],dl
  41321c:	sbb    dl,BYTE PTR [ecx]
  41321e:	adc    BYTE PTR [ecx],al
  413220:	and    BYTE PTR [ecx+eax*1],0x41
  413224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413225:	inc    eax
  413226:	inc    edx
  413227:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413229:	mov    cl,BYTE PTR [ecx+0xb244e9]
  41322f:	xor    BYTE PTR [ecx-0x6ddfa5ee],dl
  413235:	dec    edx
  413236:	rcl    BYTE PTR [eax+0x46],cl
  413239:	cdq    
  41323a:	out    0x2,al
  41323c:	inc    eax
  41323d:	inc    edx
  41323e:	rol    dl,0xc1
  413241:	add    al,BYTE PTR [eax-0x78]
  413244:	or     ah,BYTE PTR [edx]
  413246:	add    BYTE PTR [eax+0xb000c1],bl
  41324c:	and    BYTE PTR [edi],al
  41324e:	and    al,0x28
  413250:	dec    eax
  413251:	push   eax
  413252:	or     ebx,0x80020180
  413258:	adc    ah,BYTE PTR es:[eax-0x7c]
  41325c:	or     BYTE PTR [eax+0x2b019520],al
  413262:	or     DWORD PTR [ecx+eax*4-0x7b],eax
  413266:	or     BYTE PTR [eax-0x20],ah
  413269:	leave  
  41326a:	xor    DWORD PTR [eax],ecx
  41326c:	inc    eax
  41326d:	adc    BYTE PTR ds:0x15006823,al
  413273:	sbb    bl,BYTE PTR [ebx+0x1c06280]
  413279:	or     BYTE PTR [eax+0x60],al
  41327c:	add    eax,DWORD PTR [esi+0x3]
  41327f:	adc    eax,0x8b662380
  413284:	xchg   ebp,eax
  413285:	and    BYTE PTR [eax+0x20],cl
  413288:	adc    BYTE PTR [eax],dl
  41328a:	push   es
  41328b:	dec    ecx
  41328c:	xor    BYTE PTR [eax+0x1],dh
  41328f:	inc    ebx
  413290:	sbb    BYTE PTR [eax+0x0],cl
  413293:	mov    WORD PTR [edx],ss
  413295:	inc    esi
  413296:	add    eax,DWORD PTR [ebp+0x4e000006]
  41329c:	add    cl,BYTE PTR [edx+0x60246a0]
  4132a2:	add    BYTE PTR [eax],ch
  4132a4:	add    al,0x82
  4132a6:	add    BYTE PTR [edx],ah
  4132a8:	loopne 0x4132c0
  4132aa:	nop
  4132ab:	and    ah,0x91
  4132ae:	(bad)
  4132b1:	adc    al,0x77
  4132b3:	xor    DWORD PTR ds:0xd0ac0020,eax
  4132b9:	and    al,0x46
  4132bb:	dec    eax
  4132bc:	add    DWORD PTR [eax+0x7],ecx
  4132bf:	add    BYTE PTR [edx+0xf004c08],cl
  4132c5:	add    DWORD PTR [edx],edx
  4132c7:	adc    BYTE PTR [eax+eax*4],al
  4132ca:	inc    eax
  4132cb:	xor    eax,0x20006008
  4132d0:	inc    eax
  4132d1:	add    cl,BYTE PTR [eax]
  4132d3:	or     DWORD PTR [eax-0x54],esp
  4132d6:	test   BYTE PTR [edx+edx*4],dl
  4132d9:	add    BYTE PTR [edx],al
  4132db:	test   BYTE PTR [ecx],dl
  4132dd:	xor    BYTE PTR [ecx],cl
  4132df:	and    DWORD PTR [eax-0x6f],edx
  4132e2:	add    BYTE PTR [eax],ah
  4132e4:	add    eax,0x41000480
  4132e9:	scas   al,BYTE PTR es:[edi]
  4132ea:	sbb    BYTE PTR [eax],al
  4132ec:	and    DWORD PTR [eax],ebx
  4132ee:	jnp    0x413300
  4132f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f1:	adc    BYTE PTR [eax-0x57ffe8da],dh
  4132f7:	sub    BYTE PTR [esi],0x0
  4132fa:	add    BYTE PTR [ecx+0x72000],0x4
  413301:	or     BYTE PTR [eax+0x10],bl
  413304:	adc    BYTE PTR [edx],cl
  413306:	enter  0xc019,0x0
  41330a:	and    esp,DWORD PTR [edi]
  41330c:	and    BYTE PTR [edx+eax*2],al
  41330f:	cs or  cl,ah
  413312:	add    BYTE PTR [edx],ch
  413314:	mov    bl,0x12
  413316:	dec    esp
  413317:	and    al,0x12
  413319:	adc    BYTE PTR [eax-0x3ff9e7fb],al
  41331f:	add    al,BYTE PTR [eax]
  413321:	pushf  
  413322:	and    BYTE PTR [eax],0x38
  413325:	add    al,0x14
  413327:	or     BYTE PTR [eax+0x10],cl
  41332a:	adc    BYTE PTR [ecx],dl
  41332c:	add    al,dl
  41332e:	cmp    BYTE PTR ds:0x606200,ch
  413334:	xchg   ebp,eax
  413335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413336:	add    BYTE PTR [eax+0x11],al
  413339:	sub    BYTE PTR [eax+0x45140008],al
  41333f:	add    BYTE PTR [eax],dh
  413341:	or     BYTE PTR [eax],al
  413343:	add    BYTE PTR [ecx+eiz*4-0x77],al
  413347:	add    DWORD PTR [edx],eax
  413349:	sub    eax,DWORD PTR [eax+0x8]
  41334c:	mov    BYTE PTR [eax+0x1],cl
  41334f:	sub    BYTE PTR ds:0x4438830,al
  413355:	add    BYTE PTR [ecx],0x14
  413358:	adc    dl,BYTE PTR [eax]
  41335a:	push   ebx
  41335b:	adc    eax,0x2400801
  413360:	add    BYTE PTR [eax+0x4008],bl
  413366:	add    cl,BYTE PTR [eax]
  413368:	dec    eax
  413369:	sbb    DWORD PTR [eax],edx
  41336b:	test   BYTE PTR [edx],dl
  41336d:	shr    BYTE PTR [ebx],0x14
  413370:	push   eax
  413371:	sbb    esp,edi
  413373:	ins    BYTE PTR es:[edi],dx
  413374:	sbb    DWORD PTR [eax],eax
  413376:	sbb    BYTE PTR [esi+0x0],ah
  413379:	add    BYTE PTR [ecx],al
  41337b:	rcl    BYTE PTR [eax+0x18040000],0xf4
  413382:	add    BYTE PTR [eax],al
  413384:	add    al,0x90
  413386:	adc    al,BYTE PTR [edx]
  413388:	nop
  413389:	and    ah,BYTE PTR [eax]
  41338b:	dec    eax
  41338c:	add    al,0xd
  41338e:	xor    BYTE PTR [edx],cl
  413390:	add    eax,0x30
  413395:	adc    al,BYTE PTR [esp+eax*1]
  413398:	add    dl,BYTE PTR [eax+0x58c010]
  41339e:	nop
  41339f:	add    BYTE PTR [eax+0x48],ah
  4133a2:	add    cl,BYTE PTR [eax-0x60]
  4133a5:	add    BYTE PTR [ebp+0x35000641],0xa9
  4133ac:	test   BYTE PTR [eax],cl
  4133ae:	push   es
  4133af:	inc    eax
  4133b0:	add    BYTE PTR [ecx],al
  4133b2:	add    DWORD PTR [eax+0x23],eax
  4133b5:	inc    edx
  4133b6:	mov    al,0x80
  4133b8:	pusha  
  4133b9:	mov    al,ds:0x18402011
  4133be:	add    edx,esp
  4133c0:	adc    al,0x29
  4133c2:	sbb    eax,0x28049364
  4133c7:	add    DWORD PTR [esi],esp
  4133c9:	and    DWORD PTR [eax+0x22066120],0xffffffc1
  4133d0:	inc    esp
  4133d1:	adc    cl,BYTE PTR [edi]
  4133d3:	adc    al,BYTE PTR [eax]
  4133d5:	push   es
  4133d6:	xchg   esp,eax
  4133d7:	repz add BYTE PTR [ebp+0x52804511],al
  4133de:	adc    ecx,DWORD PTR [eax]
  4133e0:	add    BYTE PTR [edx],al
  4133e2:	lds    ebp,FWORD PTR [ecx]
  4133e4:	inc    eax
  4133e5:	add    al,BYTE PTR [ecx-0x6f]
  4133e8:	into   
  4133e9:	adc    BYTE PTR [eax],0x0
  4133ec:	xchg   ebp,eax
  4133ed:	add    DWORD PTR [edx+0x10],0xffffffb8
  4133f1:	add    BYTE PTR [edx],cl
  4133f3:	call   0x49013489
  4133f8:	inc    eax
  4133f9:	push   es
  4133fa:	pusha  
  4133fb:	xor    DWORD PTR [eax+0x1],eax
  4133fe:	adc    ebx,eax
  413400:	push   eax
  413401:	dec    eax
  413402:	and    al,0x2
  413404:	add    eax,0x8d45000
  413409:	add    BYTE PTR [eax],dl
  41340b:	xchg   edx,eax
  41340c:	push   esi
  41340d:	inc    eax
  41340e:	add    al,0x20
  413410:	and    BYTE PTR [edx],dl
  413412:	and    BYTE PTR [ebx],dl
  413414:	mov    al,ds:0x10000502
  413419:	test   DWORD PTR [eax+0xd],edx
  41341c:	add    BYTE PTR [eax+eiz*1],al
  41341f:	add    DWORD PTR [edx],esp
  413421:	inc    eax
  413422:	inc    eax
  413423:	add    al,0x9
  413425:	and    BYTE PTR [eax],al
  413427:	and    DWORD PTR [ebx+0x80006c9],eax
  41342d:	inc    esi
  41342e:	add    DWORD PTR [eax],edx
  413430:	add    ah,BYTE PTR [ebp+0x40]
  413433:	or     BYTE PTR [ecx],al
  413435:	or     al,0x0
  413437:	nop
  413438:	adc    DWORD PTR [ebx],ebp
  41343a:	push   eax
  41343b:	adc    BYTE PTR [ebp+0x18],0x9
  41343f:	adc    BYTE PTR [eax-0x6f],al
  413442:	sbb    cl,BYTE PTR [eax+0xa00e208]
  413448:	mov    DWORD PTR [eax],eax
  41344a:	add    al,BYTE PTR ds:0x40f14202
  413450:	imul   eax,DWORD PTR [eax+0x18948c0],0x2100894
  41345a:	xor    ah,BYTE PTR [ebx-0x2f]
  41345d:	push   es
  41345e:	push   es
  41345f:	adc    ebp,DWORD PTR [eax]
  413461:	add    BYTE PTR [ebx],0x8
  413464:	rol    BYTE PTR [edx],0x28
  413467:	add    BYTE PTR ds:0x230320f6,dl
  41346d:	or     BYTE PTR [eax],dh
  41346f:	cwde   
  413470:	add    DWORD PTR ds:0x3724284,0x40
  413477:	jno    0x413479
  413479:	and    eax,DWORD PTR [eax+eiz*1+0x1]
  41347d:	push   cs
  41347e:	and    al,bh
  413480:	cmp    al,0x8
  413482:	add    ebp,DWORD PTR [ebx-0x6f5ffe78]
  413488:	or     BYTE PTR [ecx],al
  41348a:	or     BYTE PTR [eax],cl
  41348c:	pushf  
  41348d:	or     BYTE PTR [eax+eiz*1+0x12],al
  413491:	fs mov ebp,0x500e200
  413497:	inc    eax
  413498:	aam    0xd3
  41349a:	test   BYTE PTR [eax+0x5131d040],ah
  4134a0:	sbb    ecx,DWORD PTR [edx+0x100452c9]
  4134a6:	and    al,BYTE PTR [eax+eiz*1]
  4134a9:	xchg   ebx,eax
  4134aa:	add    BYTE PTR [eax],al
  4134ac:	push   ss
  4134ad:	or     esp,DWORD PTR [eax+0x7e28a00]
  4134b3:	jo     0x4134be
  4134b5:	adc    DWORD PTR [ecx],eax
  4134b7:	or     DWORD PTR [ecx],eax
  4134b9:	add    BYTE PTR [eax],ch
  4134bb:	(bad)  
  4134bc:	and    dh,dl
  4134be:	and    al,0x20
  4134c0:	sbb    BYTE PTR [ecx],al
  4134c2:	inc    esp
  4134c3:	add    DWORD PTR [ebx+edx*2-0x39ebfee6],eax
  4134ca:	or     BYTE PTR ds:0x17230300,al
  4134d0:	and    dl,BYTE PTR [eax+eax*2]
  4134d3:	lea    esp,[eax]
  4134d5:	xor    BYTE PTR [eax+0x201ab854],cl
  4134db:	push   ds
  4134dc:	adc    BYTE PTR [eax],al
  4134de:	add    DWORD PTR [eax-0x6abf76f0],esp
  4134e4:	xchg   BYTE PTR [ecx+0x80290a],cl
  4134ea:	or     DWORD PTR [ebx],esp
  4134ec:	add    BYTE PTR [esi],cl
  4134ee:	add    BYTE PTR [ecx+eax*1],al
  4134f1:	adc    DWORD PTR [ecx],edx
  4134f3:	inc    edx
  4134f4:	ret    
  4134f5:	add    DWORD PTR [ecx],esp
  4134f7:	add    dl,BYTE PTR [eax+0x1]
  4134fa:	add    BYTE PTR [edx+0x8],dl
  4134fd:	add    DWORD PTR [ecx+edx*1+0x32086803],eax
  413504:	es add dl,al
  413507:	or     DWORD PTR [eax+eax*4],ebx
  41350a:	adc    BYTE PTR [eax-0x7dffb7c0],cl
  413510:	adc    DWORD PTR [ecx-0x25fdfeee],ecx
  413516:	adc    BYTE PTR [eax],dl
  413518:	add    DWORD PTR [edx],eax
  41351a:	sub    BYTE PTR [edx-0x80],dl
  41351d:	and    al,BYTE PTR gs:[edx+eax*1]
  413521:	inc    ebp
  413522:	inc    eax
  413523:	and    BYTE PTR [eax],ah
  413525:	sub    al,BYTE PTR [eax]
  413527:	inc    esp
  413528:	add    DWORD PTR [eax],0x24060489
  41352e:	and    esp,DWORD PTR [esi]
  413530:	add    cl,BYTE PTR [esp+edx*2+0x0]
  413534:	inc    ecx
  413535:	inc    esp
  413536:	inc    ecx
  413537:	test   eax,0xa62c6c00
  41353c:	xor    DWORD PTR [eax+0x44],0x1932808
  413543:	xor    DWORD PTR [eax],esp
  413545:	call   0x8181354e
  41354a:	and    DWORD PTR [eax+edi*8],edx
  41354d:	mov    al,ds:0x58d00c1
  413552:	or     BYTE PTR [eax+eax*2],al
  413555:	add    ch,BYTE PTR [ecx]
  413557:	test   BYTE PTR [ebx+0x22194726],al
  41355d:	inc    eax
  41355e:	or     BYTE PTR [edx+0x50],0x2
  413562:	or     al,0x7
  413564:	add    BYTE PTR [eax-0x17737fd0],dl
  41356a:	or     BYTE PTR [eax],bh
  41356c:	inc    esp
  41356d:	in     al,0x34
  41356f:	add    al,0xd4
  413571:	dec    ecx
  413572:	add    DWORD PTR [esp+eax*2+0x2220a014],eax
  413579:	inc    eax
  41357a:	adc    BYTE PTR [eax],dl
  41357c:	and    DWORD PTR [eax],esi
  41357e:	add    BYTE PTR [eax],dl
  413580:	and    BYTE PTR [ecx+eax*8+0xa48039],ch
  413587:	add    BYTE PTR [esp-0x25b7bffe],0x0
  41358f:	xor    DWORD PTR [edx],ecx
  413591:	adc    DWORD PTR [eax+0x0],esp
  413594:	adc    BYTE PTR [ecx],ah
  413596:	dec    eax
  413597:	add    dl,BYTE PTR [edx+eax*4-0x3c]
  41359b:	adc    ebx,DWORD PTR [edx+ebx*1]
  41359e:	xor    BYTE PTR [eax+0x30a286],al
  4135a4:	and    BYTE PTR [edx],dh
  4135a6:	and    BYTE PTR [edx+0x30],0xab
  4135aa:	rol    BYTE PTR [esi+edx*1],cl
  4135ad:	dec    edx
  4135ae:	add    al,0x60
  4135b0:	push   esi
  4135b1:	mov    ds:0x5e600204,eax
  4135b6:	test   al,0x1a
  4135b8:	mov    ds:0xce209100,eax
  4135bd:	add    ah,BYTE PTR [eax]
  4135bf:	ret    
  4135c0:	sub    ah,BYTE PTR [edx+0x90a0166]
  4135c6:	add    DWORD PTR [eax+0x0],0x9c48052c
  4135cd:	lea    eax,[ebx+eax*1]
  4135d0:	xor    BYTE PTR fs:[eax],al
  4135d3:	xor    al,0x22
  4135d5:	adc    DWORD PTR [eax],0x1d02d1dd
  4135db:	pop    edx
  4135dc:	or     al,0x6
  4135de:	ret    0x8191
  4135e1:	xor    BYTE PTR [eax],al
  4135e3:	push   es
  4135e4:	add    al,0x0
  4135e7:	loopne 0x413580
  4135e9:	push   eax
  4135ea:	and    al,0x4
  4135ed:	or     BYTE PTR [edi+0x22],al
  4135f0:	adc    BYTE PTR [eax],al
  4135f2:	and    BYTE PTR [edx],al
  4135f4:	add    DWORD PTR [ebp+0xa4c0020],eax
  4135fa:	mov    bh,BYTE PTR [ecx]
  4135fc:	and    BYTE PTR [ecx],0xc1
  4135ff:	cmp    cl,BYTE PTR [ecx]
  413601:	push   edx
  413602:	inc    eax
  413603:	inc    esp
  413604:	inc    esi
  413605:	or     BYTE PTR [ebx],0x8
  413608:	lods   al,BYTE PTR ds:[esi]
  413609:	mov    dl,cl
  41360b:	and    al,0x40
  41360e:	mov    ds:0x14100082,al
  413613:	xor    BYTE PTR [eax+0x5001060c],cl
  413619:	or     BYTE PTR [edx],0x41
  41361c:	add    DWORD PTR [eax-0x7f],esi
  41361f:	add    eax,0xf2282454
  413624:	add    DWORD PTR [esi+eax*1],ecx
  413627:	push   eax
  413628:	adc    BYTE PTR [edx],ah
  41362a:	add    BYTE PTR [ecx+0x32],dl
  41362d:	adc    al,0x0
  41362f:	sbb    al,0x80
  413631:	shl    DWORD PTR [ecx+0x22],0x44
  413635:	inc    eax
  413636:	mov    DWORD PTR [edx],ebx
  413638:	xor    BYTE PTR [eax+0x48],0x12
  41363c:	add    BYTE PTR [eax],ch
  41363e:	and    BYTE PTR [eax+0x20700120],dl
  413644:	in     eax,0x29
  413646:	mov    al,BYTE PTR [edx+eiz*4]
  413649:	push   es
  41364a:	add    BYTE PTR [ecx],bl
  41364c:	add    DWORD PTR [eax],eax
  41364e:	add    ah,BYTE PTR [ecx]
  413650:	sub    al,0x94
  413652:	add    BYTE PTR [eax+0x1040d63],al
  413658:	push   ds
  413659:	adc    dl,BYTE PTR [eax]
  41365b:	add    BYTE PTR [eax],al
  41365d:	add    DWORD PTR [ebx],edx
  41365f:	add    DWORD PTR [ecx-0x2dab9ec0],eax
  413665:	and    BYTE PTR [edi],al
  413667:	inc    esp
  413668:	push   0x18
  41366a:	or     BYTE PTR [ebp+0x2],0x88
  41366e:	add    eax,0x4e55a081
  413673:	lea    edx,[edx+0x10]
  413676:	pusha  
  413677:	or     ah,BYTE PTR [eax]
  413679:	pusha  
  41367a:	and    BYTE PTR [eax],al
  41367c:	adc    BYTE PTR [edx+0x28],al
  41367f:	xor    dl,BYTE PTR [ecx]
  413681:	xchg   esi,eax
  413682:	test   BYTE PTR [eax+eax*1-0x7e],bl
  413686:	mov    ds:0xd2000700,al
  41368b:	add    BYTE PTR [eax],al
  41368d:	add    DWORD PTR [eax+0x8],0xa1004019
  413694:	add    dl,BYTE PTR [eax]
  413696:	adc    DWORD PTR [eax+eax*1],eax
  413699:	or     BYTE PTR [eax],cl
  41369b:	cmp    al,0x87
  41369d:	rol    dl,1
  41369f:	and    DWORD PTR [ecx],eax
  4136a1:	cmp    BYTE PTR [ecx+0x20],dh
  4136a4:	and    DWORD PTR [esi+0x54250404],ebx
  4136aa:	mov    BYTE PTR [edx],al
  4136ac:	mov    BYTE PTR [edx],cl
  4136ae:	shl    BYTE PTR [edx+0x10000815],1
  4136b4:	sbb    BYTE PTR [eax+ebx*1],dh
  4136b7:	mov    al,ds:0x30412088
  4136bc:	add    BYTE PTR [edx+eax*4+0x60000112],al
  4136c3:	xchg   esp,eax
  4136c4:	dec    esp
  4136c5:	xchg   BYTE PTR [eax],al
  4136c7:	inc    eax
  4136c8:	sub    BYTE PTR [ecx+eiz*1],al
  4136cb:	popf   
  4136cc:	or     BYTE PTR [eax],0xb4
  4136cf:	mov    WORD PTR [ecx],ss
  4136d1:	or     al,BYTE PTR [eax]
  4136d3:	or     BYTE PTR [ecx],al
  4136d5:	push   0x0
  4136d7:	mov    eax,ds:0x48004604
  4136dc:	add    DWORD PTR [ecx],0x21010e86
  4136e2:	push   esi
  4136e3:	test   al,0x10
  4136e5:	xor    ah,BYTE PTR [edx]
  4136e7:	add    BYTE PTR [esp],0x10
  4136eb:	dec    esp
  4136ec:	sub    BYTE PTR [edx],dl
  4136ee:	add    ch,BYTE PTR [eax+0x41016940]
  4136f4:	push   edx
  4136f5:	and    BYTE PTR [ecx],ah
  4136f7:	mov    ds:0xa6088283,eax
  4136fc:	nop
  4136fd:	sbb    al,cl
  4136ff:	adc    DWORD PTR [ebx+edx*2],ebp
  413702:	or     bl,BYTE PTR [esi+eiz*1]
  413705:	add    BYTE PTR [edx+0x214222],al
  41370b:	sbb    BYTE PTR [esi+0x52034152],bl
  413711:	pusha  
  413712:	nop
  413713:	add    BYTE PTR [eax+0x8],ah
  413716:	add    al,BYTE PTR [eax+0x40f15031]
  41371c:	add    DWORD PTR [ecx],eax
  41371e:	jo     0x413738
  413720:	jmp    0x9049:0x84087011
  413727:	add    bh,bh
  413729:	adc    eax,0x434d50
  41372e:	xor    BYTE PTR [eax+0xb140095],al
  413734:	rol    BYTE PTR [edx],cl
  413736:	add    al,0xa1
  413738:	or     al,BYTE PTR [edx]
  41373a:	and    al,al
  41373c:	or     al,0x9
  41373e:	xchg   esp,eax
  41373f:	add    BYTE PTR ds:0x29c2040d,dl
  413745:	push   es
  413746:	add    DWORD PTR [eax-0x653ef700],edx
  41374c:	adc    BYTE PTR [eiz*4+0x4060011],al
  413753:	or     DWORD PTR [eax+0xa0c000],0x40031941
  41375d:	add    al,0x6
  41375f:	push   0x20040e11
  413764:	lock adc DWORD PTR [ecx],eax
  413767:	or     DWORD PTR [eax+eax*1],edx
  41376a:	sub    al,0x8
  41376c:	and    dl,BYTE PTR [eax]
  41376e:	add    DWORD PTR [edi],ecx
  413770:	add    BYTE PTR [eax+0x140c],dl
  413776:	push   es
  413777:	add    al,BYTE PTR [ebx-0x77ccf9cc]
  41377d:	or     al,0x33
  41377f:	or     DWORD PTR [ecx-0x4a43def7],esp
  413785:	nop
  413786:	pop    eax
  413787:	or     BYTE PTR [ecx+0xa914000],al
  41378d:	push   esi
  41378e:	add    DWORD PTR ds:0xa000a01,edx
  413794:	push   cs
  413795:	cmp    BYTE PTR [eax+0x0],al
  413798:	dec    eax
  413799:	add    BYTE PTR [eax+0x8],al
  41379c:	adc    BYTE PTR [eax],al
  41379e:	sbb    al,BYTE PTR [ecx]
  4137a0:	push   edx
  4137a1:	mov    BYTE PTR [edx+0x3],al
  4137a4:	and    BYTE PTR [eax],ah
  4137a6:	or     al,0x8f
  4137a8:	add    BYTE PTR [edx+0x2],al
  4137ab:	and    al,al
  4137ad:	add    BYTE PTR [eax],al
  4137af:	or     BYTE PTR [ecx],ah
  4137b1:	inc    eax
  4137b2:	adc    DWORD PTR [eax],ecx
  4137b4:	or     al,al
  4137b6:	inc    eax
  4137b7:	add    BYTE PTR [eax],ch
  4137b9:	add    al,0xaa
  4137bb:	and    cl,dl
  4137bd:	xchg   esp,eax
  4137be:	pop    eax
  4137bf:	js     0x4137c2
  4137c1:	adc    BYTE PTR [eax+0x54500882],al
  4137c7:	push   0x84200620
  4137cc:	bound  edx,QWORD PTR [eax]
  4137ce:	adc    al,al
  4137d0:	add    al,0x13
  4137d2:	mov    BYTE PTR [eax+0x40],ch
  4137d5:	bound  eax,QWORD PTR [eax+edx*4]
  4137d8:	add    BYTE PTR [eax],al
  4137da:	push   es
  4137db:	pop    eax
  4137dc:	inc    esp
  4137dd:	and    BYTE PTR [ecx],al
  4137df:	add    BYTE PTR [eax],al
  4137e1:	add    BYTE PTR [eax+edx*1],cl
  4137e4:	shr    DWORD PTR [ecx],1
  4137e6:	adc    al,0x41
  4137e8:	or     al,0x4d
  4137ea:	push   edx
  4137eb:	add    al,BYTE PTR [eax]
  4137ed:	or     BYTE PTR [eax],cl
  4137ef:	adc    BYTE PTR [eax],dl
  4137f1:	add    al,BYTE PTR [eax]
  4137f3:	add    bl,BYTE PTR [esp+eax*1-0x7feefff3]
  4137fa:	adc    DWORD PTR [eax+0x8],esi
  4137fd:	add    dl,BYTE PTR [eax]
  4137ff:	or     al,0x21
  413801:	add    cl,BYTE PTR [eax+0xc4b184]
  413807:	test   BYTE PTR ds:0x252c4c60,cl
  41380d:	mov    DWORD PTR [ebp-0x7c],ecx
  413810:	and    BYTE PTR [eax],ch
  413812:	add    DWORD PTR [ebx],eax
  413814:	xor    BYTE PTR [ecx+eax*1],al
  413817:	ret    0x4010
  41381a:	add    BYTE PTR [eax+eiz*2+0x14],ch
  41381e:	test   BYTE PTR [eax+0x44],al
  413821:	add    DWORD PTR [ecx+0x52500e91],eax
  413827:	push   ecx
  413828:	add    BYTE PTR [eax],cl
  41382a:	and    BYTE PTR [esi+eax*2],al
  41382d:	or     BYTE PTR [esi+0x5004840],al
  413833:	mov    eax,ds:0x8083a0c
  413838:	sub    DWORD PTR [edx],edx
  41383a:	add    BYTE PTR [edx],al
  41383c:	xor    cl,dl
  41383e:	mov    edx,0x63020587
  413843:	sub    BYTE PTR [eax],cl
  413845:	add    DWORD PTR [ecx],esi
  413847:	cmp    DWORD PTR [eax],edx
  413849:	inc    ecx
  41384a:	mov    ah,BYTE PTR [esi+0x40]
  41384d:	and    BYTE PTR [eax],ch
  41384f:	add    al,0x10
  413851:	and    BYTE PTR [eax],0xc8
  413854:	inc    edx
  413855:	fs inc eax
  413857:	mov    BYTE PTR [ecx+0x24900084],dl
  41385d:	pusha  
  41385e:	or     BYTE PTR [eax],0x0
  413861:	add    dl,BYTE PTR [eax]
  413863:	add    eax,0x3190908
  413868:	adc    BYTE PTR [eax],dl
  41386a:	inc    ecx
  41386b:	inc    eax
  41386c:	nop
  41386d:	add    DWORD PTR [eax+ecx*2],esp
  413870:	nop
  413871:	dec    edi
  413872:	or     BYTE PTR [edx+0xd],al
  413875:	mov    ah,0x0
  413877:	mov    DWORD PTR [eax-0x7fbbbfdc],esp
  41387d:	add    al,0xd0
  41387f:	xchg   esp,eax
  413880:	and    eax,0x7c0a000b
  413885:	inc    ecx
  413886:	xor    BYTE PTR [edi+eax*1+0x40191051],0xa
  41388e:	or     al,0x0
  413890:	and    BYTE PTR [eax],al
  413892:	ror    BYTE PTR [esi-0x3f],0x40
  413896:	xor    BYTE PTR [esi+0x1],0x0
  41389a:	add    al,BYTE PTR [eax]
  41389c:	mov    eax,ds:0x1750004
  4138a1:	je     0x4138c3
  4138a3:	test   al,0x82
  4138a5:	add    BYTE PTR [eax],ah
  4138a7:	or     al,0x0
  4138a9:	push   ebp
  4138aa:	or     DWORD PTR [eax+eax*4+0x81022b8],ecx
  4138b1:	inc    esp
  4138b2:	lea    edx,[edx]
  4138b4:	add    eax,0xa008004
  4138b9:	and    DWORD PTR [esi-0x6f],0xffffff80
  4138bd:	dec    eax
  4138be:	sub    BYTE PTR [ecx],al
  4138c0:	sbb    BYTE PTR [eax],dl
  4138c2:	add    al,0x4a
  4138c4:	or     BYTE PTR [eax],ah
  4138c6:	inc    esp
  4138c7:	and    BYTE PTR [eax-0x79e7ed80],al
  4138cd:	push   es
  4138ce:	and    DWORD PTR [eax+eax*2],edi
  4138d1:	inc    eax
  4138d2:	add    BYTE PTR [eax],ah
  4138d4:	inc    esp
  4138d5:	or     BYTE PTR [eax],al
  4138d7:	add    DWORD PTR [eax],eax
  4138d9:	mov    al,BYTE PTR [eax-0x78]
  4138dc:	adc    BYTE PTR [eax],al
  4138de:	adc    eax,0x9088a85
  4138e3:	mov    es,WORD PTR [ecx+0x23]
  4138e6:	add    DWORD PTR [edx+0x13b510],edx
  4138ec:	sbb    DWORD PTR [eax],edx
  4138ee:	test   DWORD PTR [eax],esp
  4138f0:	add    dl,BYTE PTR [eax-0x40]
  4138f3:	or     al,0x20
  4138f5:	xchg   ecx,eax
  4138f6:	test   BYTE PTR [eax],al
  4138f8:	or     BYTE PTR [esi+0x0],al
  4138fb:	test   DWORD PTR [esi],esp
  4138fd:	inc    eax
  4138fe:	add    BYTE PTR [eax],al
  413900:	adc    al,0x80
  413902:	mov    ds:0xd0001662,eax
  413907:	xor    BYTE PTR [ebx-0x3c3eb66c],dl
  41390d:	push   edx
  41390e:	inc    ecx
  41390f:	and    BYTE PTR [ecx],al
  413911:	pusha  
  413912:	add    al,0x9
  413914:	sbb    BYTE PTR [esi],dl
  413916:	add    DWORD PTR [eax],edx
  413918:	xchg   ecx,eax
  413919:	add    BYTE PTR [eax+0x0],al
  41391c:	rol    DWORD PTR [ecx],cl
  41391e:	and    al,0x2
  413920:	add    BYTE PTR [edx],ah
  413922:	adc    DWORD PTR [eax+0x2061c031],eax
  413928:	and    al,BYTE PTR [ebx-0x6ffbfdfe]
  41392e:	or     DWORD PTR [eax-0x6f9be000],ecx
  413934:	dec    eax
  413935:	adc    DWORD PTR [eax],eax
  413937:	sbb    DWORD PTR [eax+0x48180081],edi
  41393d:	pop    esi
  41393e:	adc    BYTE PTR [edx+0x29000027],al
  413944:	adc    edx,DWORD PTR [ebp+0x47]
  413947:	pusha  
  413948:	add    BYTE PTR [eax+0x0],ch
  41394b:	add    DWORD PTR [edx+esi*4+0x2a],0xffffffa6
  413950:	adc    al,0x5f
  413952:	inc    eax
  413953:	or     al,0x8
  413955:	mov    al,ds:0x20086021
  41395a:	inc    esi
  41395b:	push   cs
  41395c:	or     al,al
  41395e:	test   al,0x28
  413960:	cdq    
  413961:	add    BYTE PTR [esi-0x7def257a],al
  413967:	test   BYTE PTR [eax],dl
  413969:	and    esp,DWORD PTR [eax+0x6]
  41396c:	inc    ecx
  41396d:	add    DWORD PTR [edi],edx
  41396f:	add    dl,dh
  413971:	adc    dl,BYTE PTR [edi]
  413973:	rcl    BYTE PTR [eax+0x22d18204],0x2
  41397a:	adc    BYTE PTR [ecx],0x22
  41397d:	and    DWORD PTR [edx],esp
  41397f:	xchg   BYTE PTR [eax],cl
  413981:	pusha  
  413982:	mov    BYTE PTR [eax+0x3090b02],bl
  413988:	or     BYTE PTR [eax],al
  41398a:	test   BYTE PTR [eax+0x6418641],ch
  413990:	cmp    BYTE PTR [edx],al
  413992:	test   BYTE PTR [eax],al
  413994:	adc    cl,BYTE PTR [eax]
  413996:	add    al,0xc0
  413998:	xor    esi,DWORD PTR [ecx]
  41399a:	sub    bl,BYTE PTR [edx+0x61000140]
  4139a0:	adc    BYTE PTR [ebx],cl
  4139a2:	push   es
  4139a3:	push   es
  4139a4:	add    al,al
  4139a6:	or     DWORD PTR [eax],eax
  4139a8:	add    dh,BYTE PTR [ecx]
  4139aa:	add    cl,ah
  4139ac:	add    BYTE PTR [eax],al
  4139ae:	repnz or BYTE PTR [edx],dl
  4139b1:	shr    DWORD PTR [eax+0x20000111],0x62
  4139b8:	pop    esp
  4139b9:	adc    ah,BYTE PTR cs:[ecx]
  4139bc:	push   eax
  4139bd:	ds adc al,cl
  4139c0:	jns    0x4139c6
  4139c2:	add    BYTE PTR [eax],dl
  4139c4:	xchg   edi,eax
  4139c5:	dec    ecx
  4139c6:	adc    al,0xe8
  4139c8:	and    BYTE PTR [eax],0xd4
  4139cb:	add    DWORD PTR [eax],0xffffff80
  4139ce:	push   eax
  4139cf:	and    BYTE PTR [eax],bl
  4139d1:	enter  0x8414,0x0
  4139d5:	or     DWORD PTR [edx+0x0],ecx
  4139d8:	add    BYTE PTR es:[esi+0x5],ch
  4139dc:	and    eax,0xd0047
  4139e1:	add    BYTE PTR [ecx],cl
  4139e3:	push   eax
  4139e4:	inc    esp
  4139e5:	mov    DWORD PTR [edx+0x420181e6],esp
  4139eb:	mov    cl,0x30
  4139ed:	mov    al,ds:0x4001020
  4139f2:	test   BYTE PTR [eax],al
  4139f4:	dec    eax
  4139f5:	inc    ecx
  4139f6:	mov    ch,BYTE PTR [eax]
  4139f8:	xor    DWORD PTR [eax],edx
  4139fa:	xchg   esi,eax
  4139fb:	or     cl,BYTE PTR [ecx+0x9]
  4139fe:	xchg   BYTE PTR [ecx],ah
  413a00:	xchg   DWORD PTR [eax],esp
  413a02:	add    BYTE PTR [ebx+esi*1],al
  413a05:	and    DWORD PTR [ecx+0xd100c81],ecx
  413a0b:	bound  eax,QWORD PTR [ecx+0x38]
  413a0e:	sub    al,BYTE PTR [edx]
  413a10:	add    al,0x74
  413a12:	add    BYTE PTR [eax],al
  413a14:	add    al,0x9
  413a16:	or     BYTE PTR [eax-0x10],ah
  413a19:	jo     0x413a27
  413a1b:	add    DWORD PTR [eax+0x0],ebx
  413a1e:	mov    WORD PTR [edx-0x78],es
  413a21:	xor    BYTE PTR [eax+ecx*2+0xa2381b8],ah
  413a28:	add    BYTE PTR [esp+ecx*4],0x20
  413a2c:	add    BYTE PTR [eax+0x25],0x0
  413a30:	sub    BYTE PTR [eax+0x2915000],al
  413a36:	add    al,0xd
  413a38:	add    BYTE PTR [edx+0x24],al
  413a3b:	push   0x50
  413a3d:	retf   0x4162
  413a40:	inc    esi
  413a41:	add    DWORD PTR [ecx+eax*4],eax
  413a44:	add    BYTE PTR [ecx+0x10009000],al
  413a4a:	sbb    BYTE PTR [esi],al
  413a4c:	adc    al,0x95
  413a4e:	xchg   ebp,eax
  413a4f:	and    ah,0xb0
  413a52:	add    BYTE PTR [ecx],al
  413a54:	or     BYTE PTR [esi],bh
  413a56:	add    DWORD PTR [eax],ecx
  413a58:	add    eax,0x380cd508
  413a5d:	mov    ds:0x8b03cc00,al
  413a62:	add    al,BYTE PTR [eax]
  413a64:	add    BYTE PTR [ecx],ah
  413a66:	or     al,BYTE PTR [eax+0x40020240]
  413a6c:	xor    al,0x96
  413a6e:	add    al,al
  413a70:	adc    al,BYTE PTR [eax-0x50]
  413a73:	add    al,0x5c
  413a75:	sub    BYTE PTR [ebp+0x10e545a],bl
  413a7b:	add    BYTE PTR [edx+eiz*4],cl
  413a7e:	sbb    BYTE PTR [ecx],ah
  413a80:	mov    DWORD PTR [eax],0x21a84085
  413a86:	inc    ecx
  413a87:	add    al,BYTE PTR [edx]
  413a89:	or     DWORD PTR [eax],edx
  413a8b:	cmp    eax,DWORD PTR [ecx+0x40]
  413a8e:	inc    eax
  413a8f:	xor    BYTE PTR [eax],ah
  413a91:	cwde   
  413a92:	dec    edx
  413a93:	adc    eax,0x802202a2
  413a98:	sub    BYTE PTR [eax],ch
  413a9a:	dec    eax
  413a9b:	and    al,BYTE PTR [eax+0x0]
  413a9e:	inc    esp
  413a9f:	adc    BYTE PTR [eax-0x4d5fdf80],bl
  413aa5:	adc    DWORD PTR [eax],ebp
  413aa7:	inc    eax
  413aa8:	mov    al,ds:0xc4828810
  413aad:	loopne 0x413abb
  413aaf:	pusha  
  413ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab1:	and    al,BYTE PTR [eax]
  413ab3:	adc    BYTE PTR [eax+0x64],dl
  413ab6:	adc    dl,BYTE PTR [ecx]
  413ab8:	add    dl,al
  413aba:	adc    al,0x40
  413abc:	sub    DWORD PTR [ecx+0x0],esp
  413abf:	pop    edx
  413ac0:	add    BYTE PTR [esi+0x4d81442],0x8
  413ac7:	push   ebx
  413ac8:	or     eax,0x81400004
  413acd:	leave  
  413ace:	add    al,BYTE PTR [edx+ebp*1+0x20]
  413ad2:	add    al,0x2
  413ad4:	add    eax,DWORD PTR [ecx+0x0]
  413ad7:	adc    DWORD PTR [eax+eax*1],eax
  413ada:	add    BYTE PTR [eax],ah
  413adc:	add    al,0x40
  413ade:	add    al,BYTE PTR [eax+eax*1+0x2a5140a0]
  413ae5:	jo     0x413b57
  413ae7:	sub    al,BYTE PTR [edx]
  413ae9:	inc    eax
  413aea:	test   BYTE PTR [eax],dl
  413aec:	inc    eax
  413aed:	add    BYTE PTR [ecx+edx*1],cl
  413af0:	cs pop eax
  413af2:	bound  eax,QWORD PTR [eax]
  413af4:	push   ss
  413af5:	dec    eax
  413af6:	and    eax,0xa4228409
  413afb:	inc    ecx
  413afc:	mov    al,ds:0x44010246
  413b01:	in     al,0x1
  413b03:	les    eax,FWORD PTR [eax+0x40]
  413b06:	jb     0x413b50
  413b08:	add    cl,BYTE PTR [eax+0x22]
  413b0b:	and    BYTE PTR [eax+0x48],dl
  413b0e:	adc    dh,BYTE PTR [eax]
  413b10:	and    DWORD PTR [esi+0x40a08842],eax
  413b16:	add    al,BYTE PTR [eax+ecx*1]
  413b19:	sbb    DWORD PTR [eax],ecx
  413b1b:	xchg   esi,eax
  413b1c:	pusha  
  413b1d:	adc    BYTE PTR [eax-0x3a],al
  413b20:	add    BYTE PTR [ecx+0x20080008],cl
  413b26:	add    BYTE PTR [ebp+0x1],dl
  413b29:	add    BYTE PTR [eax+0x4824411],al
  413b2f:	adc    ah,BYTE PTR [edx]
  413b31:	and    al,al
  413b33:	or     BYTE PTR [ecx+0x32036350],ah
  413b39:	loopne 0x413afd
  413b3b:	add    BYTE PTR [esi],dl
  413b3d:	xor    al,0x18
  413b3f:	sbb    BYTE PTR [eax+0x30c029],al
  413b45:	test   BYTE PTR [eax+0xca85010],al
  413b4b:	and    al,0x21
  413b4d:	mov    ds:0x10853,al
  413b52:	push   es
  413b53:	inc    eax
  413b54:	cwde   
  413b55:	add    BYTE PTR [eax],cl
  413b57:	push   esi
  413b58:	add    BYTE PTR [edx],dl
  413b5a:	dec    eax
  413b5b:	adc    DWORD PTR [eax+0x1],ebx
  413b5e:	inc    ecx
  413b5f:	push   esp
  413b60:	inc    eax
  413b61:	and    eax,eax
  413b63:	or     BYTE PTR [edx+0x41186486],al
  413b69:	add    BYTE PTR [edx+0x22],dl
  413b6c:	nop
  413b6d:	pop    esp
  413b6e:	or     BYTE PTR [eax-0x70],0x2
  413b72:	sub    ah,BYTE PTR es:[ebx+0x39]
  413b76:	add    BYTE PTR [edx],0x0
  413b79:	add    eax,0x6808102b
  413b7e:	push   eax
  413b7f:	add    al,0x6
  413b81:	adc    BYTE PTR [eax+0x21099308],dl
  413b87:	adc    ah,BYTE PTR [edx+eax*1]
  413b8a:	inc    esp
  413b8b:	inc    eax
  413b8c:	imul   edx,DWORD PTR [eax],0x11
  413b8f:	stos   BYTE PTR es:[edi],al
  413b90:	add    BYTE PTR [eax+0x46d8210c],al
  413b96:	enter  0x9482,0xc2
  413b9a:	add    al,0x0
  413b9c:	les    ecx,FWORD PTR [edx]
  413b9e:	and    al,0x20
  413ba0:	push   ss
  413ba1:	jo     0x413b23
  413ba3:	fwait
  413ba4:	add    DWORD PTR [eax],esp
  413ba6:	and    ch,0xd0
  413ba9:	les    eax,FWORD PTR [eax]
  413bab:	or     BYTE PTR [eax+0x20],ah
  413bae:	and    DWORD PTR [eax],edx
  413bb0:	or     DWORD PTR [ecx+0x63],eax
  413bb3:	add    esi,DWORD PTR [ecx]
  413bb5:	push   ss
  413bb6:	inc    ebx
  413bb7:	add    al,0x81
  413bba:	add    BYTE PTR [edx],al
  413bbc:	push   es
  413bbd:	push   eax
  413bbe:	or     ebx,DWORD PTR [eax]
  413bc0:	inc    ebp
  413bc1:	mov    BYTE PTR [eax],al
  413bc3:	dec    ecx
  413bc4:	add    BYTE PTR [edx],dh
  413bc6:	mov    es,WORD PTR [eax-0x7b]
  413bc9:	or     ebx,DWORD PTR [edi+edx*1]
  413bcc:	adc    BYTE PTR [eax],dl
  413bce:	test   BYTE PTR [edx],al
  413bd0:	adc    al,BYTE PTR [ecx]
  413bd2:	or     al,BYTE PTR [ecx]
  413bd4:	mov    es,WORD PTR [esi]
  413bd6:	dec    eax
  413bd7:	adc    BYTE PTR [edx],al
  413bd9:	sub    al,BYTE PTR [esp+eax*1]
  413bdc:	and    BYTE PTR [ebp-0x4e],cl
  413bdf:	dec    eax
  413be0:	inc    eax
  413be1:	bound  eax,QWORD PTR [edx]
  413be3:	add    eax,edx
  413be5:	or     ah,BYTE PTR [eax]
  413be7:	xor    al,0x20
  413be9:	add    BYTE PTR gs:[ebx+eax*1],al
  413bed:	add    DWORD PTR [eax],0x72020139
  413bf3:	mov    BYTE PTR ds:0x90880100,cl
  413bf9:	add    DWORD PTR [edx],0x18a08080
  413bff:	xchg   ecx,eax
  413c00:	and    BYTE PTR [ecx],bh
  413c02:	call   0x9a04:0x10248150
  413c09:	jb     0x413c25
  413c0b:	adc    al,0x4c
  413c0d:	adc    BYTE PTR [edx+0x1],al
  413c10:	inc    edx
  413c11:	add    dh,BYTE PTR [edx+0xd008269]
  413c17:	sub    DWORD PTR [ecx],eax
  413c19:	jbe    0x413c4b
  413c1b:	add    al,BYTE PTR [ebx]
  413c1d:	mov    eax,ds:0x814020
  413c22:	ror    BYTE PTR [eax],cl
  413c24:	add    BYTE PTR [eax],dl
  413c26:	inc    esp
  413c27:	dec    eax
  413c28:	es nop
  413c2a:	inc    ecx
  413c2b:	add    DWORD PTR [edx+edx*1],edx
  413c2e:	add    BYTE PTR [edx],al
  413c30:	or     al,0x0
  413c32:	and    DWORD PTR [ecx-0x3fff9ef3],eax
  413c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c39:	add    cl,BYTE PTR [eax]
  413c3b:	sub    BYTE PTR [ecx+0x0],0x0
  413c3f:	and    BYTE PTR [eax+0x45],0x28
  413c43:	pusha  
  413c44:	push   cs
  413c45:	and    esp,0x8aa4c000
  413c4b:	adc    DWORD PTR [esi+ebx*2],eax
  413c4e:	sbb    BYTE PTR [eax],bl
  413c50:	add    BYTE PTR [eax+0x813826],ah
  413c56:	and    ah,BYTE PTR [eax+0x2]
  413c59:	xchg   DWORD PTR [esi+0x6],ecx
  413c5c:	push   es
  413c5d:	bound  esp,QWORD PTR [edx+eax*8+0x5001308a]
  413c64:	mov    ds:0x82483114,al
  413c69:	es ret 
  413c6b:	sub    BYTE PTR [edx+eiz*1],cl
  413c6e:	add    al,0x80
  413c70:	add    al,BYTE PTR [eax]
  413c72:	add    DWORD PTR [edx],esp
  413c74:	and    eax,0x80091981
  413c79:	add    DWORD PTR fs:[edx+0x4b],eax
  413c7d:	popa   
  413c7e:	adc    ah,BYTE PTR [edx+0x45c00c34]
  413c84:	nop
  413c85:	lock les eax,FWORD PTR [ecx]
  413c88:	and    BYTE PTR [eax-0x75ffdf56],al
  413c8e:	adc    BYTE PTR [eax],ch
  413c90:	cmp    dl,ch
  413c92:	adc    DWORD PTR [ecx+eax*2+0x53],eax
  413c96:	ret    0x1009
  413c99:	add    BYTE PTR [edx],al
  413c9b:	inc    edx
  413c9c:	popf   
  413c9d:	add    DWORD PTR [eax],ecx
  413c9f:	inc    eax
  413ca0:	and    BYTE PTR fs:[edx+0x40],al
  413ca4:	and    DWORD PTR [esi+0x18220240],edx
  413caa:	sub    DWORD PTR cs:[ebx-0x63affe79],edx
  413cb1:	adc    BYTE PTR [eax],cl
  413cb3:	inc    esi
  413cb4:	inc    si
  413cb6:	test   BYTE PTR [ecx+0x7464440],dl
  413cbc:	sbb    BYTE PTR [esp+edx*1+0x48810a35],al
  413cc3:	add    al,BYTE PTR [ecx+eax*1+0x28]
  413cc7:	add    al,al
  413cc9:	popa   
  413cca:	add    BYTE PTR [eax+0x0],al
  413ccd:	sub    al,0x6
  413ccf:	push   es
  413cd0:	and    BYTE PTR [eax+0x30],al
  413cd3:	add    cl,BYTE PTR [ecx-0x5efe9bb7]
  413cd9:	ins    BYTE PTR es:[edi],dx
  413cda:	adc    eax,0x4400002
  413cdf:	dec    ebx
  413ce0:	rol    BYTE PTR [eax],0x0
  413ce3:	add    DWORD PTR [edx+0x4096801],0xc81262
  413ced:	add    eax,0x851663a5
  413cf2:	mov    es,WORD PTR [eax]
  413cf4:	inc    eax
  413cf5:	adc    DWORD PTR [edi+edx*2],esp
  413cf8:	repnz add DWORD PTR [esp+eax*1+0x0],eax
  413cfd:	add    eax,0x328004a0
  413d02:	adc    BYTE PTR ds:0x50021841,dl
  413d08:	add    al,ah
  413d0a:	inc    edx
  413d0b:	arpl   WORD PTR [eax],ax
  413d0d:	and    al,0xa1
  413d0f:	and    eax,0x8c810ba8
  413d14:	bound  edx,QWORD PTR [edx+edx*1]
  413d17:	adc    cl,al
  413d19:	sbb    ecx,DWORD PTR [edx]
  413d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d1c:	add    al,0x4a
  413d1e:	shl    BYTE PTR [esi],0x1
  413d21:	rol    BYTE PTR [ebp+0x10552020],cl
  413d27:	inc    edx
  413d28:	mov    eax,ds:0x2800354
  413d2d:	sbb    BYTE PTR [ebx+0x20803604],bl
  413d33:	and    BYTE PTR [ecx-0x7ff777fd],dl
  413d39:	add    BYTE PTR [eax+eax*1],ah
  413d3c:	sub    al,0x22
  413d3e:	adc    DWORD PTR [eax+0x4],eax
  413d41:	mov    al,BYTE PTR [esi]
  413d43:	rol    BYTE PTR [eax],0x10
  413d46:	push   0xe184a043
  413d4b:	or     DWORD PTR [eax],eax
  413d4d:	add    cl,BYTE PTR [eax+edx*1]
  413d50:	mov    al,ds:0xc056020
  413d55:	adc    al,cl
  413d57:	test   BYTE PTR [eax+0x20842000],al
  413d5d:	nop
  413d5e:	add    ah,BYTE PTR [eax]
  413d60:	mov    ds:0x91409040,al
  413d65:	in     eax,dx
  413d66:	adc    BYTE PTR [eax+0x49],ah
  413d69:	xchg   BYTE PTR [eax],al
  413d6b:	add    al,BYTE PTR [eax+0x22]
  413d6e:	or     BYTE PTR [eax+0x3],cl
  413d71:	enter  0x8071,0x11
  413d75:	mov    BYTE PTR ds:0x92d0011a,al
  413d7b:	pop    es
  413d7c:	and    al,0x61
  413d7e:	xchg   ecx,eax
  413d7f:	sub    BYTE PTR [eax],dl
  413d81:	mov    BYTE PTR [ecx+0x4021149c],al
  413d87:	jbe    0x413d91
  413d89:	and    ah,BYTE PTR [eax]
  413d8b:	add    ah,BYTE PTR [eax+edx*2]
  413d8e:	xchg   cl,bh
  413d90:	add    al,0x4
  413d92:	rol    DWORD PTR [eax],0x82
  413d95:	and    BYTE PTR [eax],al
  413d97:	enter  0x120d,0x4a
  413d9b:	mov    eax,ds:0x24c82920
  413da0:	dec    edx
  413da1:	add    BYTE PTR [eax+eax*1+0x6],cl
  413da5:	push   edx
  413da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da7:	and    eax,0x8b180a28
  413dac:	or     DWORD PTR [ebp-0x7effded8],ecx
  413db2:	adc    eax,0x188e9213
  413db7:	ror    BYTE PTR ds:0x88887014,cl
  413dbd:	xchg   BYTE PTR [eax+0x31f51098],dh
  413dc3:	sub    BYTE PTR ds:0x2013d260,ch
  413dc9:	add    BYTE PTR [edx+0x5],0x1
  413dcd:	add    al,BYTE PTR [eax]
  413dcf:	xchg   esp,eax
  413dd0:	add    al,0x82
  413dd2:	cmp    BYTE PTR [ecx+eiz*2],bh
  413dd5:	sar    DWORD PTR [esi],0x80
  413dd8:	and    BYTE PTR [ecx],al
  413dda:	or     al,BYTE PTR [edx+0x100804]
  413de0:	adc    DWORD PTR [ebx],eax
  413de2:	xchg   BYTE PTR [ebx+0x8],cl
  413de5:	aam    0x91
  413de7:	add    BYTE PTR [eax+eax*1],0x88
  413deb:	inc    eax
  413dec:	adc    DWORD PTR [edx],ecx
  413dee:	add    al,BYTE PTR [eax+eiz*1-0x7f9f9f7e]
  413df5:	add    eax,0x10228a34
  413dfa:	add    dl,BYTE PTR [esi+ebp*4]
  413dfd:	mov    eax,ds:0xe140109
  413e02:	dec    eax
  413e03:	nop
  413e04:	adc    ah,BYTE PTR [edx+ecx*1]
  413e07:	add    al,0x1
  413e09:	xor    BYTE PTR [eax+esi*1+0x9],ah
  413e0d:	or     DWORD PTR [eax+eax*4],eax
  413e10:	and    BYTE PTR [edx-0x74f9ef77],al
  413e16:	xor    BYTE PTR [edx],0x1
  413e19:	popa   
  413e1a:	inc    ebx
  413e1b:	push   es
  413e1c:	inc    esp
  413e1d:	or     al,0x81
  413e1f:	dec    ecx
  413e20:	add    ah,BYTE PTR [ecx+0x86ba648]
  413e26:	and    dh,BYTE PTR [ecx+ecx*4]
  413e29:	or     BYTE PTR ds:0x81f81243,ch
  413e2f:	add    eax,DWORD PTR [edx-0x30]
  413e32:	add    eax,0x490300c1
  413e37:	and    BYTE PTR [eax+eax*1],ah
  413e3a:	add    al,BYTE PTR [eax]
  413e3c:	pop    ss
  413e3d:	push   eax
  413e3e:	add    BYTE PTR [ecx+0x21008248],al
  413e44:	or     al,0x42
  413e46:	sub    BYTE PTR [eax+0x6],dl
  413e49:	adc    BYTE PTR [ecx],al
  413e4b:	sub    BYTE PTR [ecx+0x0],dl
  413e4e:	and    BYTE PTR [eax],ah
  413e50:	rcl    DWORD PTR [ecx-0x73fbfdd8],0x86
  413e57:	or     ah,BYTE PTR [eax]
  413e59:	mov    al,ds:0x4c0929
  413e5e:	add    BYTE PTR [ecx+0x22120113],cl
  413e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e65:	or     DWORD PTR [eax],ecx
  413e67:	add    BYTE PTR [edx+0x9221230],al
  413e6d:	xchg   edx,eax
  413e6e:	rol    BYTE PTR [ecx],1
  413e70:	add    edx,DWORD PTR [eax]
  413e72:	and    BYTE PTR [eax+eax*4+0x0],al
  413e76:	push   eax
  413e77:	inc    edx
  413e78:	add    BYTE PTR [eax],bl
  413e7a:	or     eax,0xffffffc0
  413e7d:	inc    esp
  413e7e:	mov    ds:0xeb14200,eax
  413e83:	push   eax
  413e84:	add    ebp,DWORD PTR [eax+0x45]
  413e87:	add    BYTE PTR [esi],dh
  413e89:	add    BYTE PTR [edx],dl
  413e8b:	ror    edi,1
  413e8d:	add    BYTE PTR [eax],dl
  413e8f:	(bad)  
  413e90:	rol    DWORD PTR [esp+eax*4+0x500b400],1
  413e97:	xor    BYTE PTR [ebx],dl
  413e99:	push   edi
  413e9a:	dec    ecx
  413e9b:	add    al,0x5
  413e9d:	sub    esp,DWORD PTR [ecx-0x30]
  413ea0:	inc    ebx
  413ea1:	mov    eax,ds:0x50483236
  413ea6:	and    DWORD PTR [ebx],ebp
  413ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ea9:	int3   
  413eaa:	add    BYTE PTR [edx+0x6043089],al
  413eb0:	mov    DWORD PTR [eax+eiz*1],eax
  413eb3:	mov    WORD PTR [eax],es
  413eb5:	add    BYTE PTR [edx+0x0],0xc9
  413eb9:	popa   
  413eba:	mov    al,ds:0x1046008a
  413ebf:	add    al,0x43
  413ec1:	inc    ecx
  413ec2:	add    BYTE PTR [edx],al
  413ec4:	push   0xffffffb1
  413ec6:	jo     0x413ee0
  413ec8:	and    BYTE PTR [eax],al
  413eca:	and    edx,DWORD PTR [edx]
  413ecc:	mov    cl,0x49
  413ece:	adc    al,0x4
  413ed0:	add    BYTE PTR [eax],0xe
  413ed3:	or     BYTE PTR [edx],0x4
  413ed6:	adc    BYTE PTR [ecx],ch
  413ed8:	add    BYTE PTR [eax+0x8],cl
  413edb:	or     BYTE PTR [eax],cl
  413edd:	inc    eax
  413ede:	or     edi,DWORD PTR [edx]
  413ee0:	sahf   
  413ee1:	pusha  
  413ee2:	xor    al,0x40
  413ee4:	adc    eax,0x3303
  413ee9:	sbb    edx,DWORD PTR [eax]
  413eeb:	adc    DWORD PTR [edx],eax
  413eed:	and    al,0x16
  413eef:	and    BYTE PTR [eax],al
  413ef1:	add    BYTE PTR [ecx],cl
  413ef3:	add    DWORD PTR [edx+0x1926004],esi
  413ef9:	mov    ds:0x300c1118,al
  413efe:	call   DWORD PTR ds:0x434c60
  413f04:	adc    BYTE PTR [ecx],cl
  413f06:	sbb    cl,dl
  413f08:	jmp    0x128b:0x20098ca4
  413f0f:	and    BYTE PTR [ecx],dh
  413f11:	push   esp
  413f12:	and    ah,BYTE PTR [eax]
  413f14:	sbb    BYTE PTR [eax+eax*1],al
  413f17:	adc    dh,BYTE PTR [edx+0x30228013]
  413f1d:	mov    ds:0x4822207,eax
  413f22:	adc    BYTE PTR [edx-0x5ffc6cc0],bh
  413f28:	add    DWORD PTR [ecx+0x30909400],eax
  413f2e:	add    BYTE PTR [ecx+0x6001464],ah
  413f34:	xchg   BYTE PTR [eax-0x7e7fdbc0],cl
  413f3a:	adc    BYTE PTR [edx+0x1b484813],ah
  413f40:	enter  0xa201,0x51
  413f44:	pusha  
  413f45:	add    al,BYTE PTR [eax]
  413f47:	ret    0x908
  413f4a:	push   es
  413f4b:	add    DWORD PTR [ecx],eax
  413f4d:	and    dl,BYTE PTR [eax]
  413f4f:	inc    esi
  413f50:	(bad)  
  413f51:	xor    bl,BYTE PTR [edx]
  413f53:	daa    
  413f54:	add    eax,0x1828888
  413f59:	push   es
  413f5a:	add    BYTE PTR [eax-0x73d3d4de],al
  413f60:	xor    BYTE PTR [edx+0x8692010],ah
  413f66:	cmp    BYTE PTR [edi+0x74008100],0x22
  413f6d:	nop
  413f6e:	add    BYTE PTR ds:0x50805009,0x81
  413f75:	push   ss
  413f76:	mov    WORD PTR [edx],es
  413f78:	movups XMMWORD PTR [ecx],xmm0
  413f7b:	add    al,0x20
  413f7d:	xchg   ecx,eax
  413f7e:	popa   
  413f7f:	inc    edx
  413f80:	or     BYTE PTR [ebx],cl
  413f82:	adc    DWORD PTR [eax-0x4f],edx
  413f85:	push   eax
  413f86:	jo     0x413f89
  413f88:	adc    BYTE PTR [edx+0x10],dl
  413f8b:	add    eax,0x51130226
  413f91:	repz and BYTE PTR [eax],ah
  413f94:	and    dl,BYTE PTR [eax]
  413f96:	add    BYTE PTR ds:0x126008a,bh
  413f9c:	add    BYTE PTR [edx+eax*2],ah
  413f9f:	inc    esp
  413fa0:	dec    eax
  413fa1:	les    edx,FWORD PTR [ebp+0x63186024]
  413fa7:	add    al,0x8
  413fa9:	sbb    BYTE PTR [eax+eiz*2],al
  413fac:	adc    BYTE PTR [edx+0x2b],0x58
  413fb0:	pop    ecx
  413fb1:	add    BYTE PTR [eax],dh
  413fb3:	sub    dl,al
  413fb5:	dec    eax
  413fb6:	adc    al,al
  413fb8:	add    al,BYTE PTR [eax+ecx*2]
  413fbb:	loopne 0x413ffd
  413fbd:	add    BYTE PTR [edx+0x40],cl
  413fc0:	and    BYTE PTR [eax],0x0
  413fc3:	pop    eax
  413fc4:	sub    BYTE PTR [eax],dh
  413fc6:	or     BYTE PTR [ebx+0x9],al
  413fc9:	(bad)  
  413fca:	mov    WORD PTR [eax+0x4c1800a9],es
  413fd0:	les    eax,FWORD PTR [edx]
  413fd2:	adc    cl,BYTE PTR [eax+eax*2+0x28]
  413fd6:	add    BYTE PTR [eax+0x4020a38],ch
  413fdc:	push   eax
  413fdd:	or     eax,0x26010244
  413fe2:	add    BYTE PTR [esi+0x1044019],al
  413fe8:	add    BYTE PTR [esi-0x57afef3c],cl
  413fee:	sbb    cl,BYTE PTR [eax+ebp*8]
  413ff1:	test   al,0x12
  413ff3:	rol    BYTE PTR [ecx],1
  413ff5:	mov    al,ds:0x4204b405
  413ffa:	add    al,0x7
  413ffc:	mov    ebp,0x424a106
  414001:	add    BYTE PTR [edx+0x44865262],0x3
  414008:	push   es
  414009:	add    BYTE PTR [eax+0x0],ch
  41400c:	inc    esi
  41400d:	and    eax,0x82420988
  414012:	and    BYTE PTR [ecx-0x6b779fa8],ah
  414018:	rol    BYTE PTR [edx],0x54
  41401b:	call   0xc6502b
  414020:	ror    dl,0x78
  414023:	retf   0x592d
  414026:	(bad)  
  414028:	ror    BYTE PTR [eax-0x7f9ffbfa],0x1
  41402f:	or     ah,al
  414031:	retf   0x90cb
  414034:	add    al,0x4
  414036:	dec    ecx
  414037:	pop    edi
  414038:	xor    al,0x80
  41403a:	adc    BYTE PTR [eax],al
  41403c:	adc    ecx,DWORD PTR [eax]
  41403e:	adc    ebp,ecx
  414040:	and    eax,DWORD PTR [edx+0x41]
  414043:	adc    BYTE PTR [ebx+0x41801258],ah
  414049:	mov    eax,ds:0x408801eb
  41404e:	add    BYTE PTR [edx],ah
  414050:	test   al,0x11
  414052:	add    BYTE PTR [eax+edx*1],dl
  414055:	ret    
  414056:	dec    eax
  414057:	and    BYTE PTR [eax],al
  414059:	add    BYTE PTR [eax-0x6fbffdd8],dh
  41405f:	add    BYTE PTR [eax+0x14220058],dh
  414065:	and    BYTE PTR [eax+0x20a0252c],0xb1
  41406c:	inc    ecx
  41406d:	and    BYTE PTR [edx+0x6],0x0
  414071:	sbb    dl,BYTE PTR [eax]
  414073:	add    DWORD PTR [eax+0x0],eax
  414076:	mov    dh,BYTE PTR ds:0x48220c00
  41407c:	sub    BYTE PTR [eax],0x6
  41407f:	cmp    al,0x51
  414081:	out    0x20,al
  414083:	add    BYTE PTR [edi-0x2e],cl
  414086:	add    DWORD PTR [ebx+eax*2+0x10],eax
  41408a:	adc    BYTE PTR [eax],0x11
  41408d:	add    DWORD PTR [ecx],0xa
  414090:	inc    ecx
  414091:	pop    esp
  414092:	sub    eax,DWORD PTR [edx]
  414094:	nop
  414095:	nop
  414096:	or     ch,BYTE PTR [ecx]
  414098:	dec    eax
  414099:	dec    ecx
  41409a:	add    DWORD PTR [eax],0x102101a0
  4140a0:	inc    esp
  4140a1:	push   cs
  4140a2:	and    BYTE PTR [edx],0x10
  4140a5:	and    al,0x14
  4140a7:	dec    ecx
  4140a8:	xor    ah,BYTE PTR [edx+0x40]
  4140ab:	add    BYTE PTR [eax],al
  4140ad:	cmp    dh,BYTE PTR [eax]
  4140af:	or     BYTE PTR [edx+0x30],ah
  4140b2:	add    al,0x44
  4140b4:	push   edx
  4140b5:	add    DWORD PTR [eax+edx*1],esp
  4140b8:	dec    ecx
  4140b9:	inc    ebp
  4140ba:	and    BYTE PTR [ecx+0x45222404],0x0
  4140c1:	push   cs
  4140c2:	sub    BYTE PTR [esp+eax*2+0x5],al
  4140c6:	and    al,0x32
  4140c8:	dec    eax
  4140c9:	xchg   BYTE PTR [eax],cl
  4140cb:	mov    al,ds:0x8e448082
  4140d0:	and    eax,0x1082000
  4140d6:	shl    DWORD PTR [ecx],0x18
  4140d9:	push   eax
  4140da:	test   al,0x90
  4140dc:	and    BYTE PTR [eax],al
  4140de:	lock adc DWORD PTR [ecx+0x81a004],eax
  4140e5:	sub    dh,ah
  4140e7:	inc    edx
  4140e8:	and    BYTE PTR [eax],ch
  4140ea:	add    BYTE PTR [ecx],dh
  4140ec:	add    al,BYTE PTR [eax]
  4140ee:	bound  eax,QWORD PTR [eax]
  4140f0:	daa    
  4140f1:	push   eax
  4140f2:	add    ebp,DWORD PTR [edi+0x28]
  4140f5:	imul   esp,DWORD PTR [eax+edx*1],0x10c23d1d
  4140fc:	mov    cl,al
  4140fe:	push   0x10882d10
  414103:	add    BYTE PTR [ebx],0x0
  414106:	add    DWORD PTR [eax],0x1351808
  41410c:	adc    BYTE PTR [eax+0x42],al
  41410f:	dec    eax
  414110:	or     DWORD PTR [ecx+0x2c],esi
  414113:	dec    esi
  414114:	lock and BYTE PTR [edx+0x52090042],al
  41411b:	mov    eax,ds:0x2422801a
  414120:	add    BYTE PTR [eax],ah
  414122:	add    al,BYTE PTR [eax]
  414124:	or     eax,0x400a6602
  414129:	add    al,0x80
  41412b:	add    al,0x8
  41412d:	add    BYTE PTR [ecx+eax*1+0x28422220],0x34
  414135:	cdq    
  414136:	add    BYTE PTR [eax],ch
  414138:	sub    DWORD PTR [eax],edx
  41413a:	(bad)  
  41413b:	adc    BYTE PTR [eax],cl
  41413d:	fs push es
  41413f:	add    DWORD PTR [eax],eax
  414141:	add    eax,0x8801146
  414146:	or     BYTE PTR [esi],dl
  414148:	dec    eax
  414149:	sbb    al,0x18
  41414b:	push   ss
  41414c:	adc    BYTE PTR [edx-0x7fdfca92],al
  414152:	add    al,al
  414154:	or     ch,BYTE PTR [ebx+0x32178827]
  41415a:	cmp    BYTE PTR ds:0x20b290c,cl
  414160:	add    al,0x22
  414162:	loopne 0x414164
  414164:	inc    edx
  414165:	adc    al,0x20
  414167:	jno    0x414169
  414169:	xchg   BYTE PTR [eax+0x5a],al
  41416c:	add    DWORD PTR [esi+0x10],eax
  41416f:	inc    edx
  414170:	pop    es
  414171:	adc    BYTE PTR [ecx],al
  414173:	push   eax
  414174:	and    BYTE PTR [edx],al
  414176:	arpl   WORD PTR [esi+0x36],sp
  414179:	or     eax,0x38a88680
  41417e:	and    BYTE PTR [eax+0x4290105],dh
  414184:	sub    al,BYTE PTR [edx]
  414186:	and    DWORD PTR [edx+0x1940402],eax
  41418c:	sbb    DWORD PTR [eax],eax
  41418e:	add    al,BYTE PTR [eax+0x22]
  414191:	inc    eax
  414192:	and    al,BYTE PTR [eax+0x3e1212]
  414198:	xor    BYTE PTR [eax],0xd2
  41419b:	pop    ecx
  41419c:	or     al,0x4
  41419e:	adc    BYTE PTR [eax+0x6b000005],al
  4141a4:	(bad)  
  4141a5:	enter  0x4a,0xc
  4141a9:	mov    al,ds:0x20026432
  4141ae:	add    BYTE PTR [eax-0x34],dl
  4141b1:	add    BYTE PTR [eax+0xc],ch
  4141b4:	add    BYTE PTR [eax+0x10208e8],0x82
  4141bb:	adc    DWORD PTR [edx],ebx
  4141bd:	add    al,0xc
  4141bf:	sub    DWORD PTR [eax],edx
  4141c1:	and    BYTE PTR [eax],ah
  4141c3:	push   eax
  4141c4:	sbb    BYTE PTR [eax+0x400c188],al
  4141ca:	sub    esp,DWORD PTR [ecx]
  4141cc:	add    BYTE PTR [ebx+0x20043441],al
  4141d2:	add    BYTE PTR [eax+ecx*4],ch
  4141d5:	stos   DWORD PTR es:[edi],eax
  4141d6:	mov    eax,0x5e0001
  4141db:	or     dh,al
  4141dd:	add    BYTE PTR [eax],al
  4141df:	add    BYTE PTR [eax],0x0
  4141e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e3:	push   ecx
  4141e4:	inc    esi
  4141e5:	add    edx,DWORD PTR [eax]
  4141e7:	push   ss
  4141e8:	add    eax,0x2f8d2680
  4141ed:	add    DWORD PTR [eax],eax
  4141ef:	or     BYTE PTR [edx+ebx*1],dh
  4141f2:	add    BYTE PTR [edx+0x50],ah
  4141f5:	aaa    
  4141f6:	push   edx
  4141f7:	sub    BYTE PTR [ecx],dl
  4141f9:	inc    eax
  4141fa:	mov    al,0x22
  4141fc:	inc    eax
  4141fd:	add    al,BYTE PTR [eax+0x1]
  414200:	dec    edx
  414201:	add    BYTE PTR [eax+0x1],0x62
  414205:	add    DWORD PTR [edi],eax
  414207:	push   es
  414208:	add    BYTE PTR [eax],ah
  41420a:	add    eax,0xe50950
  41420f:	add    BYTE PTR [edx+0x3],dl
  414212:	sbb    ah,BYTE PTR [edx+0x30840081]
  414218:	xor    BYTE PTR [edx+0x48005018],ch
  41421e:	add    BYTE PTR [edx],al
  414220:	or     BYTE PTR [eax],al
  414222:	push   es
  414223:	adc    BYTE PTR [esp+ecx*1],al
  414226:	inc    esi
  414227:	add    DWORD PTR [ecx+0x23],eax
  41422a:	inc    eax
  41422b:	or     BYTE PTR [edx+0x2048125],ch
  414231:	or     al,BYTE PTR [eax]
  414233:	add    BYTE PTR [edx+0x3450c8a0],0x21
  41423a:	and    al,BYTE PTR [edx+0x1000508]
  414240:	mov    eax,ds:0x402a0a40
  414245:	add    al,0x10
  414247:	add    al,0x23
  414249:	add    BYTE PTR [edx],ch
  41424b:	push   es
  41424c:	test   BYTE PTR [ebp+0x20],cl
  41424f:	and    al,0x3a
  414251:	add    al,0xe
  414253:	xchg   edx,eax
  414254:	or     al,BYTE PTR [ecx]
  414256:	mov    al,ds:0x2200002a
  41425b:	add    al,BYTE PTR [ebx]
  41425d:	push   es
  41425e:	add    eax,DWORD PTR [eax+eax*2]
  414261:	dec    eax
  414262:	sub    BYTE PTR [eax],al
  414264:	mov    al,ds:0x10c8a804
  414269:	adc    al,0x49
  41426b:	add    BYTE PTR [eax],al
  41426d:	add    al,0xc0
  41426f:	add    al,0x31
  414271:	add    BYTE PTR [ecx+0x8c44882],ah
  414277:	or     al,0xf3
  414279:	enter  0x144,0x3
  41427d:	add    al,0xa0
  41427f:	adc    BYTE PTR [eax],ah
  414281:	or     BYTE PTR [ebx-0x5def0000],al
  414287:	mov    DWORD PTR [eax+ecx*1],edx
  41428a:	or     BYTE PTR [ecx],0x1
  41428d:	or     al,0x45
  41428f:	inc    eax
  414290:	or     BYTE PTR [ecx],cl
  414292:	xor    BYTE PTR [ecx],0x10
  414295:	sbb    al,0x6
  414297:	and    al,BYTE PTR [ebp+0x2b8a6a40]
  41429d:	or     BYTE PTR [eax-0x5c],ah
  4142a0:	sbb    BYTE PTR [ebx+0x10c80124],al
  4142a6:	mov    cl,0xc9
  4142a8:	sub    al,BYTE PTR [eax+eax*2-0x59dd5eba]
  4142af:	and    BYTE PTR [eax-0x4ebd8dd9],al
  4142b5:	adc    dh,BYTE PTR [edx+esi*8]
  4142b8:	dec    ebp
  4142b9:	add    al,0x0
  4142bb:	or     cl,BYTE PTR [edx+eax*1]
  4142be:	and    DWORD PTR [ecx+0x4],ebp
  4142c1:	add    BYTE PTR [eax],al
  4142c3:	rcl    BYTE PTR [edx],0x22
  4142c6:	and    BYTE PTR fs:[ecx],al
  4142c9:	add    eax,0x23200181
  4142ce:	and    DWORD PTR [eax-0x3a],eax
  4142d1:	nop
  4142d2:	and    DWORD PTR [eax+0x31],eax
  4142d5:	add    DWORD PTR [ecx+0x11],eax
  4142d8:	adc    BYTE PTR [edx],0x2
  4142db:	add    BYTE PTR [ecx],ah
  4142dd:	add    BYTE PTR [ebx],al
  4142df:	add    ch,BYTE PTR [edx]
  4142e1:	add    al,0x6e
  4142e3:	fld    DWORD PTR [ecx+0xb04732a]
  4142e9:	sub    BYTE PTR [ecx],bh
  4142eb:	cmp    BYTE PTR [edx],al
  4142ed:	mov    WORD PTR [eax+0x40],cs
  4142f0:	add    al,0xa0
  4142f2:	dec    eax
  4142f3:	sub    BYTE PTR [ecx+0xd982006],al
  4142f9:	xor    BYTE PTR [ecx],al
  4142fb:	pusha  
  4142fc:	inc    esi
  4142fd:	mov    ebx,0xcd410004
  414302:	add    BYTE PTR [esi],bl
  414304:	or     dh,BYTE PTR [eax]
  414306:	add    BYTE PTR [eax],ch
  414308:	fs cwde 
  41430a:	add    ch,BYTE PTR [eax]
  41430c:	or     al,0x10
  41430e:	or     al,BYTE PTR [ecx]
  414310:	lea    eax,[edx]
  414312:	inc    ecx
  414313:	push   es
  414314:	inc    edx
  414315:	add    BYTE PTR [eax+0x20],cl
  414318:	inc    ecx
  414319:	add    DWORD PTR ds:0x241822d8,eax
  41431f:	mov    al,ds:0x28601847
  414324:	sub    BYTE PTR [eax],0x80
  414327:	push   eax
  414328:	add    BYTE PTR [eax],dl
  41432a:	add    cl,bl
  41432c:	add    al,BYTE PTR [edx+0x60]
  41432f:	add    al,0x8
  414331:	pusha  
  414332:	inc    edx
  414333:	add    DWORD PTR [eax],ebp
  414335:	sbb    DWORD PTR [ecx],eax
  414337:	sub    DWORD PTR [edx],edx
  414339:	xchg   edx,eax
  41433a:	pop    eax
  41433b:	add    BYTE PTR [eax+0x3],ah
  41433e:	pop    eax
  41433f:	add    BYTE PTR es:[ebx+eiz*1+0x34c128b],al
  414347:	rol    BYTE PTR [eax],1
  414349:	or     BYTE PTR [edx],ch
  41434b:	or     BYTE PTR [eax],al
  41434d:	xor    DWORD PTR [eax],0x21
  414350:	inc    eax
  414351:	xor    al,0x40
  414353:	add    al,0x88
  414355:	adc    dl,BYTE PTR [ecx]
  414357:	popa   
  414358:	mov    eax,ds:0xc5005c20
  41435d:	add    al,0x31
  41435f:	adc    BYTE PTR [eax+0x20c20900],cl
  414365:	sbb    DWORD PTR [bx+si],ecx
  414368:	lds    esi,FWORD PTR [eax+0x1]
  41436b:	pop    esp
  41436c:	add    al,BYTE PTR [ecx-0x7c]
  41436f:	adc    BYTE PTR [edx+eax*4],bl
  414372:	add    DWORD PTR [edx],ecx
  414374:	push   eax
  414375:	add    cl,BYTE PTR [eax+0x14]
  414378:	and    BYTE PTR [eax+eiz*1+0x48],al
  41437c:	cmp    BYTE PTR [ecx+0x4],cl
  41437f:	add    DWORD PTR [ecx-0x6e],eax
  414382:	adc    al,0x38
  414384:	and    BYTE PTR [ecx],cl
  414386:	or     BYTE PTR [eax],cl
  414388:	add    al,0x1
  41438a:	xor    BYTE PTR ds:0x1005145,dl
  414390:	loopne 0x4143bc
  414392:	add    al,0x30
  414394:	cli    
  414395:	and    DWORD PTR [eax],edx
  414397:	add    al,ch
  414399:	or     BYTE PTR [eax],0x10
  41439c:	and    BYTE PTR [edx+0x11],dl
  41439f:	add    al,0x0
  4143a1:	mov    al,0x0
  4143a3:	sub    edx,DWORD PTR [eax]
  4143a5:	dec    eax
  4143a6:	and    al,0x0
  4143a8:	mov    BYTE PTR [ecx+eax*1],al
  4143ab:	or     DWORD PTR [ebp+ebx*4+0x8],esp
  4143af:	push   ds
  4143b0:	cmp    BYTE PTR [edx],ah
  4143b2:	inc    eax
  4143b3:	adc    BYTE PTR [eax+edx*1+0x0],al
  4143b7:	nop
  4143b8:	add    DWORD PTR [eax],0xe1118c01
  4143be:	add    BYTE PTR [edx-0x7dbefbf6],al
  4143c4:	adc    BYTE PTR [edi],ah
  4143c6:	aaa    
  4143c7:	add    al,BYTE PTR [eax+0x13610aa]
  4143cd:	and    DWORD PTR [edx-0x779fcf98],ebp
  4143d3:	or     al,0x1
  4143d5:	bound  eax,QWORD PTR [eax]
  4143d7:	xor    BYTE PTR [ecx-0x7dfbb8e0],dl
  4143dd:	add    al,al
  4143df:	xchg   edi,eax
  4143e0:	xor    ah,al
  4143e2:	push   edx
  4143e3:	adc    DWORD PTR [eax+0x1080aa],esp
  4143e9:	sub    BYTE PTR ds:0x11002317,al
  4143ef:	mov    DWORD PTR [esi+0x4009228],edx
  4143f5:	add    BYTE PTR [eax+eax*1],ch
  4143f8:	add    esp,esp
  4143fa:	and    DWORD PTR [ecx],0x48009054
  414400:	dec    ecx
  414401:	inc    ecx
  414402:	and    al,0xca
  414404:	inc    eax
  414405:	xor    cl,BYTE PTR [eax]
  414407:	add    DWORD PTR [esp+edx*2+0x27724900],eax
  41440e:	add    eax,DWORD PTR [eax-0x8]
  414411:	add    DWORD PTR [eax],esi
  414413:	adc    BYTE PTR [eax],ah
  414415:	and    ah,BYTE PTR [ecx]
  414417:	or     BYTE PTR [eax-0x5c],ch
  41441a:	xchg   BYTE PTR [eax+0x50],dl
  41441d:	or     cl,BYTE PTR [esi+0x124001d]
  414423:	enter  0x4020,0x10
  414427:	and    al,0x81
  414429:	add    DWORD PTR [ecx+ebp*2],esp
  41442c:	and    BYTE PTR [eax+eax*2],0x84
  414430:	or     esp,DWORD PTR [edx+edx*1+0x12]
  414434:	add    al,0x0
  414436:	add    esp,DWORD PTR [eax+ecx*1-0x6bbdfc00]
  41443d:	add    al,0x22
  41443f:	xor    DWORD PTR [ecx-0x60],edx
  414442:	push   0x8
  414444:	or     ebp,DWORD PTR [eax]
  414446:	inc    eax
  414447:	inc    eax
  414448:	cmp    al,BYTE PTR ds:0x400e2290
  41444e:	xchg   BYTE PTR [eax],ah
  414450:	rol    DWORD PTR [edx],0x44
  414453:	sub    BYTE PTR [edx],al
  414455:	and    al,BYTE PTR [eax]
  414457:	leave  
  414458:	and    DWORD PTR [eax],0x40
  41445b:	push   ecx
  41445c:	add    DWORD PTR fs:[esp+edx*1],eax
  414460:	fsubr  DWORD PTR [eax]
  414462:	sub    al,0x90
  414464:	dec    eax
  414465:	add    BYTE PTR [eax+0x2],al
  414468:	add    edx,DWORD PTR [eax]
  41446a:	add    BYTE PTR [eax],ah
  41446c:	xchg   ecx,eax
  41446d:	add    DWORD PTR [eax],ebp
  41446f:	test   BYTE PTR [esp+eax*1],al
  414472:	adc    eax,0x33b4a078
  414477:	push   esi
  414478:	or     al,BYTE PTR [eax+eax*4]
  41447b:	inc    eax
  41447c:	and    al,0x1
  41447e:	add    dh,BYTE PTR [ebx]
  414480:	add    BYTE PTR [eax-0x6c],bl
  414483:	je     0x414499
  414485:	add    DWORD PTR [edx+eax*4-0x5d77fd6f],esp
  41448c:	or     BYTE PTR [edx],al
  41448e:	add    eax,0x20680ac7
  414493:	add    BYTE PTR [eax+0x1c],0xc
  414497:	push   ecx
  414498:	dec    edx
  414499:	add    BYTE PTR [ecx+eax*2+0x6a22221],ah
  4144a0:	inc    edx
  4144a1:	je     0x4144e8
  4144a3:	loope  0x414523
  4144a5:	inc    eax
  4144a6:	add    BYTE PTR [eax+0x20401800],bl
  4144ac:	or     BYTE PTR [eax+0x19405420],dh
  4144b2:	push   ebp
  4144b3:	inc    esp
  4144b4:	adc    BYTE PTR [eax+0x48],cl
  4144b7:	and    DWORD PTR [eax-0x746ff7f6],eax
  4144bd:	and    BYTE PTR [eax-0x1c],dh
  4144c0:	mov    al,BYTE PTR [eax]
  4144c2:	or     al,0x4
  4144c4:	add    DWORD PTR [eax],eax
  4144c6:	adc    BYTE PTR [edx+0xc528082],0x8d
  4144cd:	adc    DWORD PTR [esp+eax*1+0x1],edx
  4144d1:	bound  ebp,QWORD PTR [edx-0x7c]
  4144d4:	mov    BYTE PTR [edx],ah
  4144d6:	or     DWORD PTR [eax],esi
  4144d8:	add    DWORD PTR [eax],eax
  4144da:	add    al,BYTE PTR [eax+0x23]
  4144dd:	and    BYTE PTR [eax-0x5bfeff7c],al
  4144e3:	test   BYTE PTR [edx],al
  4144e5:	xchg   BYTE PTR [eax],al
  4144e7:	adc    BYTE PTR [eax],al
  4144e9:	es enter 0xe86,0xb0
  4144ee:	ins    BYTE PTR es:[edi],dx
  4144ef:	and    bh,ch
  4144f1:	mov    al,0x0
  4144f3:	xchg   ebx,eax
  4144f4:	add    BYTE PTR ds:0x12021c4f,ah
  4144fa:	push   0x10b80402
  4144ff:	or     edx,eax
  414501:	pop    edx
  414502:	inc    eax
  414503:	adc    cl,BYTE PTR [eax+ecx*1]
  414506:	adc    BYTE PTR [ecx],0x50
  414509:	and    ah,BYTE PTR [edx]
  41450b:	inc    edx
  41450c:	mov    al,ds:0x2048017
  414511:	or     DWORD PTR [edi+0x12],ecx
  414514:	add    DWORD PTR [esi],eax
  414516:	add    BYTE PTR [edx+eax*1-0x7c],al
  41451a:	add    BYTE PTR [eax+0x10028000],bl
  414520:	int    0x54
  414522:	and    BYTE PTR [edx+eiz*2-0x263fbffe],al
  414529:	add    al,BYTE PTR [edx]
  41452b:	push   eax
  41452c:	or     BYTE PTR [eax],ah
  41452e:	adc    al,0x2
  414530:	sbb    al,0xc
  414532:	inc    eax
  414533:	ss xchg ecx,eax
  414535:	test   BYTE PTR [edx-0x7eb7f7df],ah
  41453b:	or     eax,0xbc58418
  414540:	add    al,BYTE PTR [eax-0x5e]
  414543:	inc    eax
  414544:	add    eax,0x27c28104
  414549:	sbb    al,0x82
  41454b:	or     BYTE PTR [eax-0x6d],al
  41454e:	push   eax
  41454f:	xchg   DWORD PTR [eax],esp
  414551:	add    al,0x2a
  414553:	add    DWORD PTR [edx-0x78],0x3300420
  41455a:	add    DWORD PTR [esi],edx
  41455c:	add    al,0xa5
  41455e:	push   cs
  41455f:	inc    edx
  414560:	add    BYTE PTR ds:0x38a284a1,ah
  414566:	add    al,0x1a
  414568:	inc    edx
  414569:	sbb    eax,0x8a894080
  41456e:	add    BYTE PTR ds:0xa8a085,al
  414574:	and    BYTE PTR [edx+0x2840800b],ch
  41457a:	inc    ebx
  41457b:	add    al,0x80
  41457d:	in     al,dx
  41457e:	lock add DWORD PTR [eax],ebp
  414581:	add    BYTE PTR [eax],al
  414583:	or     DWORD PTR ds:0x10508220,eax
  414589:	add    eax,0x1c695884
  41458e:	adc    al,0x2
  414590:	test   BYTE PTR [ecx+0x620c4070],ah
  414596:	or     al,0x16
  414598:	or     DWORD PTR [eax],0x81a98088
  41459e:	enter  0xc812,0x9
  4145a2:	or     DWORD PTR [edx+ebp*4],eax
  4145a5:	or     al,0x26
  4145a7:	add    BYTE PTR [ecx+0x57],cl
  4145aa:	mov    al,0x81
  4145ac:	add    BYTE PTR [edx],dl
  4145ae:	add    BYTE PTR [ecx],al
  4145b0:	add    BYTE PTR [eax-0x7fedf21b],0x90
  4145b7:	or     BYTE PTR [eax+eax*2+0x9],al
  4145bb:	pusha  
  4145bc:	and    BYTE PTR [eax],0x8
  4145bf:	xor    BYTE PTR [eax+0x20],bl
  4145c2:	adc    DWORD PTR [eax],0x82a0054e
  4145c8:	inc    ebx
  4145c9:	sbb    DWORD PTR [eax-0x7f],0x421146b7
  4145d0:	mov    ah,BYTE PTR [eax]
  4145d2:	inc    ebp
  4145d3:	test   al,0x12
  4145d5:	adc    DWORD PTR [eax],edx
  4145d7:	dec    eax
  4145d8:	add    DWORD PTR [eax],eax
  4145da:	and    al,0x2b
  4145dc:	jo     0x414560
  4145de:	mov    dl,cl
  4145e0:	sbb    BYTE PTR [ecx+edx*2],al
  4145e3:	and    al,0x84
  4145e5:	adc    al,0x2
  4145e7:	inc    ecx
  4145e8:	pushf  
  4145e9:	mov    al,ds:0x811a0a04
  4145ee:	sub    BYTE PTR [edx],0x54
  4145f1:	or     BYTE PTR [eax],al
  4145f3:	and    bl,ah
  4145f5:	out    0x10,al
  4145f7:	test   al,0x2
  4145f9:	adc    al,BYTE PTR [eax]
  4145fb:	jno    0x4145dd
  4145fd:	add    BYTE PTR [eax],ch
  4145ff:	add    al,0x50
  414601:	add    BYTE PTR [ebp+0x55],al
  414604:	add    al,0x14
  414606:	cmp    al,BYTE PTR [eax]
  414608:	mov    dl,BYTE PTR [ecx+eax*8+0x410986]
  41460f:	sbb    al,BYTE PTR [eax]
  414611:	push   0x480a0448
  414616:	adc    al,bl
  414618:	ret    0x111a
  41461b:	and    DWORD PTR [eax+0x20e40440],eax
  414621:	and    DWORD PTR [eax+0x449250],edx
  414627:	enter  0x30d,0x83
  41462b:	add    DWORD PTR [ecx],eax
  41462d:	sub    eax,0x52844000
  414632:	ret    
  414633:	and    cl,dl
  414635:	inc    eax
  414636:	or     esp,DWORD PTR [eax+0x47a12447]
  41463c:	push   ecx
  41463d:	and    al,0x0
  41463f:	cs loopne 0x414643
  414642:	add    BYTE PTR [eax],cl
  414644:	push   edx
  414645:	add    BYTE PTR [ecx],al
  414647:	dec    ecx
  414648:	nop
  414649:	mov    al,al
  41464b:	adc    BYTE PTR [esi],bl
  41464d:	mov    BYTE PTR [eax],al
  41464f:	add    BYTE PTR [eax],al
  414651:	add    eax,0x2cbd0005
  414656:	adc    BYTE PTR ds:0x79800,dl
  41465c:	add    al,0x40
  41465e:	sub    BYTE PTR [eax],dh
  414660:	or     dl,al
  414662:	inc    ecx
  414663:	mov    BYTE PTR [eax],al
  414665:	fmul   DWORD PTR [edx]
  414667:	(bad)  
  414669:	inc    eax
  41466a:	add    BYTE PTR [ecx],al
  41466c:	add    BYTE PTR [edi+0x10],cl
  41466f:	sub    BYTE PTR [eax+0x63],dh
  414672:	imul   esp,DWORD PTR [eax],0x2
  414675:	adc    al,0x10
  414677:	sbb    ch,BYTE PTR [ecx+0x14185000]
  41467d:	push   ss
  41467e:	add    BYTE PTR [eax+0x0],al
  414681:	add    BYTE PTR [eax],0x4
  414684:	add    al,BYTE PTR [edx-0x28]
  414687:	adc    al,0x20
  414689:	xor    BYTE PTR [edx],dl
  41468b:	mov    ecx,0x204000d
  414690:	add    eax,DWORD PTR [ebx]
  414692:	pusha  
  414693:	push   ss
  414694:	and    BYTE PTR [ebp+0x0],cl
  414697:	nop
  414698:	and    esi,ecx
  41469a:	add    BYTE PTR [eax-0x6fd376c0],al
  4146a0:	rol    DWORD PTR [edx],0xc
  4146a3:	add    BYTE PTR [edx+0x10],dl
  4146a6:	mov    BYTE PTR [eax+0x2],ah
  4146a9:	add    BYTE PTR [edx],bl
  4146ab:	bound  eax,QWORD PTR [edx]
  4146ad:	rcl    BYTE PTR [eax+0x3],cl
  4146b0:	mov    ds:0x83049000,al
  4146b5:	add    BYTE PTR [eax+0x31],al
  4146b8:	and    eax,DWORD PTR [ecx]
  4146ba:	add    DWORD PTR [eax+0x41],edx
  4146bd:	add    BYTE PTR [ebx],0x0
  4146c0:	and    BYTE PTR [edx+0x20],0x2
  4146c4:	adc    BYTE PTR [eax+0x2040d31c],cl
  4146ca:	xor    DWORD PTR [edx],edi
  4146cc:	add    al,0x81
  4146ce:	rol    dh,0x14
  4146d1:	add    BYTE PTR [eax],ah
  4146d3:	or     edi,edi
  4146d5:	adc    eax,0x434a1c
  4146da:	and    edx,DWORD PTR [ebx-0x40]
  4146dd:	adc    al,cl
  4146df:	adc    al,ah
  4146e1:	shl    eax,cl
  4146e3:	mov    cl,al
  4146e5:	add    al,BYTE PTR [eax+0x42222194]
  4146eb:	sbb    BYTE PTR [edx+0x11],al
  4146ee:	or     dl,BYTE PTR [ecx+0xc0009c0]
  4146f4:	mov    ds:0xc0b0004c,al
  4146f9:	adc    al,BYTE PTR [ecx]
  4146fb:	adc    al,0x20
  4146fd:	adc    al,0xc8
  4146ff:	and    BYTE PTR ds:0x620960,cl
  414705:	cmp    bl,ch
  414707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414708:	test   BYTE PTR ds:0xc0256061,al
  41470e:	add    DWORD PTR [edi+ecx*4],0x804048
  414715:	add    dl,BYTE PTR [ecx]
  414717:	or     BYTE PTR [ebx],cl
  414719:	sub    eax,DWORD PTR [eax+0x1]
  41471c:	and    BYTE PTR [esi+0x20],cl
  41471f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414720:	adc    al,0x9
  414722:	add    al,0x10
  414724:	and    BYTE PTR [ecx],al
  414726:	add    DWORD PTR [edx],ebp
  414728:	dec    eax
  414729:	add    al,0x0
  41472b:	inc    ecx
  41472c:	or     BYTE PTR [eax+0x1003238b],dh
  414732:	adc    al,0x88
  414734:	mov    ds:0xf0000b8c,eax
  414739:	inc    eax
  41473a:	ret    0x1026
  41473d:	add    DWORD PTR [eax],esi
  41473f:	or     ch,BYTE PTR [eax]
  414741:	inc    eax
  414742:	les    eax,FWORD PTR [ecx]
  414744:	mov    ecx,0x8a00833
  414749:	cld    
  41474a:	add    BYTE PTR [eax],al
  41474c:	retf   0xc011
  41474f:	add    eax,0x80b00000
  414754:	nop
  414755:	pop    eax
  414756:	xchg   al,al
  414758:	or     BYTE PTR [eax],al
  41475a:	and    al,BYTE PTR [eax+0x28401011]
  414760:	ret    0xa042
  414763:	inc    esp
  414764:	sub    BYTE PTR [ecx+0x0],cl
  414767:	dec    ecx
  414768:	adc    al,0x82
  41476a:	adc    BYTE PTR [edx],0x0
  41476d:	push   cs
  41476e:	add    BYTE PTR [esi+0x24],dl
  414771:	push   es
  414772:	mov    al,ds:0x28242011
  414777:	add    al,0x24
  414779:	push   cs
  41477a:	cwde   
  41477b:	add    BYTE PTR [ecx-0x7cddfe80],al
  414781:	pop    ss
  414782:	add    DWORD PTR [eax],0xffffffe4
  414785:	and    BYTE PTR [edx],al
  414787:	and    eax,0xc0064f78
  41478c:	add    al,al
  41478e:	add    BYTE PTR [edx+eax*1],al
  414791:	add    ah,BYTE PTR ds:0x40084c4
  414797:	add    ch,BYTE PTR ds:0xf0000001
  41479d:	adc    BYTE PTR [edx+0x10],cl
  4147a0:	sbb    BYTE PTR [eax+0x2],al
  4147a6:	nop
  4147a7:	add    BYTE PTR [eax+ebx*4+0x8],ah
  4147ab:	nop
  4147ac:	inc    eax
  4147ad:	sbb    BYTE PTR [eax+eiz*1+0x42],al
  4147b1:	add    DWORD PTR [eax],eax
  4147b3:	add    BYTE PTR [eax],dl
  4147b5:	sub    al,0xbc
  4147b7:	and    DWORD PTR [eax],eax
  4147b9:	inc    eax
  4147ba:	and    dl,BYTE PTR [ecx+eax*1]
  4147bd:	add    ah,BYTE PTR [edx]
  4147bf:	inc    eax
  4147c0:	add    BYTE PTR [edx],0xc6
  4147c3:	add    BYTE PTR [edx],0x80
  4147c6:	add    BYTE PTR [ebx+eiz*8],ch
  4147c9:	adc    ebp,DWORD PTR [edx]
  4147cb:	add    ah,BYTE PTR [eax+ebx*1]
  4147ce:	add    DWORD PTR [eax-0x7f],eax
  4147d1:	xor    ecx,DWORD PTR [ecx]
  4147d3:	push   es
  4147d4:	inc    eax
  4147d5:	adc    DWORD PTR [eax+0x4c0c9600],eax
  4147db:	add    eax,0x3314151
  4147e0:	or     DWORD PTR [ecx],esp
  4147e2:	add    BYTE PTR [eax+0x0],cl
  4147e5:	inc    edx
  4147e6:	daa    
  4147e7:	inc    edx
  4147e8:	nop
  4147e9:	add    BYTE PTR [eax],dl
  4147eb:	add    BYTE PTR [eax],al
  4147ed:	rcr    BYTE PTR ds:0x2da40281,0xe0
  4147f4:	mov    al,ds:0x20480024
  4147f9:	add    al,0x81
  4147fb:	add    BYTE PTR [eax],dh
  4147fd:	add    BYTE PTR [eax],al
  4147ff:	jno    0x414782
  414801:	push   ss
  414802:	sub    dl,BYTE PTR [eax+0x1]
  414805:	or     al,BYTE PTR [eax]
  414807:	and    BYTE PTR [ecx+0x202026b],al
  41480d:	pop    es
  41480e:	test   DWORD PTR [eax],ecx
  414810:	add    BYTE PTR [edx],ah
  414812:	cdq    
  414813:	add    BYTE PTR [ecx],0x64
  414816:	ins    BYTE PTR es:[edi],dx
  414817:	push   cs
  414818:	pusha  
  414819:	add    al,0x81
  41481b:	add    BYTE PTR [edx+eax*1+0x222f0280],al
  414822:	xor    dl,al
  414824:	mov    al,ds:0x4104440e
  414829:	shl    BYTE PTR [ecx+eax*1+0x100b1c80],1
  414830:	sbb    BYTE PTR [ebx],0x0
  414833:	inc    esp
  414834:	adc    BYTE PTR [eax+0x125e3e1],al
  41483a:	add    BYTE PTR [eax],al
  41483c:	inc    ecx
  41483d:	add    ah,BYTE PTR [eax]
  41483f:	or     BYTE PTR [eax],0x70
  414842:	push   es
  414843:	push   ebp
  414844:	add    al,BYTE PTR [eax]
  414846:	add    DWORD PTR [eax],ebp
  414848:	and    BYTE PTR [edx],0xd0
  41484b:	or     al,0xa2
  41484d:	adc    DWORD PTR [esi+0x10548a0a],edx
  414853:	add    BYTE PTR [esp+ebp*1+0x0],al
  414857:	xor    BYTE PTR [edx],dl
  414859:	pop    es
  41485a:	add    al,0x98
  41485c:	scas   al,BYTE PTR es:[edi]
  41485d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41485e:	add    ah,BYTE PTR [eax+0x2660b408]
  414864:	and    al,0x22
  414866:	adc    BYTE PTR [eax+eax*4+0x4021013f],al
  41486d:	push   0x2001403
  414872:	adc    BYTE PTR [ecx],0xac
  414875:	add    BYTE PTR [eax+0x2b13c054],al
  41487b:	sub    BYTE PTR [edx],al
  41487d:	inc    edx
  41487e:	fs add cl,cl
  414881:	add    DWORD PTR [eax],eax
  414883:	adc    BYTE PTR [ecx],dh
  414885:	pop    eax
  414886:	or     al,0x90
  414888:	inc    ebp
  414889:	popa   
  41488a:	and    al,0xc3
  41488c:	in     eax,dx
  41488d:	add    BYTE PTR [eax],bl
  41488f:	xor    ah,ah
  414891:	inc    eax
  414892:	add    al,0x94
  414894:	mov    al,0x9
  414896:	stos   BYTE PTR es:[edi],al
  414897:	mov    BYTE PTR [ecx],0x8e
  41489a:	xor    al,0x3
  41489c:	adc    BYTE PTR [eax+eax*1+0x13],0x11
  4148a1:	mov    ds:0x60001881,al
  4148a6:	and    dl,BYTE PTR ds:0x1c825240
  4148ac:	add    BYTE PTR es:[eax],ah
  4148af:	jo     0x4148b1
  4148b1:	add    DWORD PTR [eax],0x4268041
  4148b7:	je     0x41487d
  4148b9:	ret    0x24c8
  4148bc:	pop    eax
  4148bd:	dec    eax
  4148be:	jb     0x41488e
  4148c0:	dec    edx
  4148c1:	inc    eax
  4148c2:	or     DWORD PTR [eax],ecx
  4148c4:	add    DWORD PTR [esi],esp
  4148c6:	pop    eax
  4148c7:	xor    eax,0xc2089800
  4148cc:	sbb    al,dh
  4148ce:	pusha  
  4148cf:	add    cl,BYTE PTR [eax+0x642a06]
  4148d5:	add    BYTE PTR [eax+0x44901450],dl
  4148db:	adc    BYTE PTR [edx],0x22
  4148de:	gs (bad) 
  4148e0:	adc    BYTE PTR [ebp+0x24a4401],al
  4148e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e7:	add    DWORD PTR [ecx-0x38],eax
  4148ea:	inc    ecx
  4148eb:	adc    BYTE PTR [edx],al
  4148ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ee:	adc    BYTE PTR [eax],ah
  4148f0:	or     al,BYTE PTR [ebx]
  4148f2:	adc    BYTE PTR [eax+0x30],dh
  4148f5:	or     al,0x0
  4148f7:	and    BYTE PTR [esp+eax*1],al
  4148fa:	adc    eax,0x9d80b8
  4148ff:	test   BYTE PTR [ebx],ah
  414901:	loopne 0x414965
  414903:	add    al,BYTE PTR [esi]
  414905:	mov    eax,ds:0x101011
  41490a:	mov    eax,0xa0a024
  41490f:	nop
  414910:	add    BYTE PTR [eax-0x2d],al
  414913:	dec    edx
  414914:	inc    edx
  414915:	add    eax,0xa0042440
  41491a:	or     BYTE PTR [eax+0x2204],cl
  414920:	and    BYTE PTR [eax+0x229821c1],al
  414926:	mov    esp,DWORD PTR [eax+0x4e041003]
  41492c:	mov    al,ds:0x22a8a08
  414931:	mov    DWORD PTR [ecx+eiz*1+0x44052088],eax
  414938:	sub    DWORD PTR [ecx-0x3fc6fdc8],esi
  41493e:	mov    al,ah
  414940:	and    dh,ah
  414942:	test   eax,0x42c40542
  414947:	add    DWORD PTR ds:[eax],0x44ca4680
  41494e:	sbb    al,0x54
  414950:	adc    BYTE PTR [ebx],dl
  414952:	xchg   edx,eax
  414953:	push   eax
  414954:	sub    BYTE PTR [eax],dl
  414956:	dec    eax
  414957:	xchg   esp,eax
  414958:	or     al,al
  41495a:	add    BYTE PTR [ecx+eiz*1],bh
  41495d:	add    DWORD PTR [eax+0x48],ebx
  414960:	mov    cl,0x2
  414962:	mov    al,ds:0x42d95080
  414967:	adc    BYTE PTR [ebx],al
  414969:	add    BYTE PTR [edx+0x48],al
  41496c:	or     al,BYTE PTR [eax+edi*1+0x32]
  414970:	sub    BYTE PTR [ecx],dh
  414972:	and    DWORD PTR [esi+0x40018cc0],eax
  414978:	lods   eax,DWORD PTR ds:[esi]
  414979:	mov    eax,ds:0x49602a43
  41497e:	adc    BYTE PTR [edx+ecx*2],cl
  414981:	add    BYTE PTR [eax],0xa4
  414984:	xor    BYTE PTR [esp+ebx*8+0x6],al
  414988:	pop    DWORD PTR [edx+esi*2+0x14040808]
  41498f:	mov    WORD PTR [eax],es
  414991:	mov    al,0x7
  414993:	mov    dl,0x13
  414995:	rcl    DWORD PTR [edx+0xd280a4],0x14
  41499c:	and    BYTE PTR [ebx],dl
  41499e:	stos   BYTE PTR es:[edi],al
  41499f:	les    ebx,FWORD PTR [esp+ecx*1+0x22]
  4149a3:	adc    al,0x25
  4149a5:	push   esp
  4149a6:	mov    ds:0x19c41313,al
  4149ab:	add    al,BYTE PTR [ecx]
  4149ad:	adc    al,ah
  4149af:	add    BYTE PTR [eax],al
  4149b1:	inc    edx
  4149b2:	add    ah,BYTE PTR [bp+si]
  4149b5:	test   BYTE PTR [edx-0x4fff3ed0],al
  4149bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149bc:	add    eax,0x14809c
  4149c1:	adc    cl,BYTE PTR [esp+eax*1-0x5bfda9dd]
  4149c8:	sbb    al,0x1
  4149ca:	inc    eax
  4149cb:	sbb    BYTE PTR [edx+0x1],al
  4149ce:	ror    edx,1
  4149d0:	xchg   BYTE PTR [eax],dl
  4149d2:	sbb    DWORD PTR [edx],eax
  4149d4:	sub    ecx,DWORD PTR [eax]
  4149d6:	or     al,BYTE PTR [ecx]
  4149d8:	mov    BYTE PTR [eax+0x10],al
  4149db:	es dec esi
  4149dd:	add    BYTE PTR ds:0x4112d3a,dl
  4149e3:	inc    ecx
  4149e4:	adc    eax,0x45284
  4149e9:	loope  0x4149f3
  4149eb:	and    DWORD PTR [eax],esp
  4149ed:	push   0xd0088028
  4149f2:	and    BYTE PTR [eax+0x2214224],0x9a
  4149f9:	rol    BYTE PTR [esi+0x8016418],1
  4149ff:	bound  esp,QWORD PTR [esi+eax*2]
  414a02:	test   ah,al
  414a04:	add    al,0x4
  414a06:	xor    eax,0x84a40148
  414a0b:	or     BYTE PTR [eax],al
  414a0d:	inc    eax
  414a0e:	mov    BYTE PTR [eax],al
  414a10:	add    al,0x80
  414a12:	add    BYTE PTR [edx],al
  414a14:	inc    ebx
  414a15:	add    BYTE PTR [ecx+0x64],cl
  414a18:	test   BYTE PTR [eax],al
  414a1a:	pusha  
  414a1b:	or     BYTE PTR [eax+ebp*8+0xe],bl
  414a1f:	dec    eax
  414a20:	ret    0x8106
  414a23:	inc    eax
  414a24:	add    ah,BYTE PTR [edx]
  414a26:	add    BYTE PTR [ecx],0x0
  414a29:	add    BYTE PTR [ebx],al
  414a2b:	inc    eax
  414a2c:	add    BYTE PTR [ebx+0x10],ch
  414a2f:	xor    BYTE PTR [ebp+0x2603c04],al
  414a35:	cwde   
  414a36:	push   ss
  414a37:	mov    ds:0x41111850,al
  414a3c:	add    BYTE PTR [eax-0x3e],0x33
  414a40:	xor    BYTE PTR [ecx+0x40],al
  414a43:	or     esp,DWORD PTR [eax]
  414a45:	pusha  
  414a46:	add    al,0x80
  414a48:	mov    ah,0x45
  414a4a:	inc    esp
  414a4b:	add    ah,BYTE PTR [edx]
  414a4d:	adc    al,0x20
  414a4f:	add    al,0x2
  414a51:	and    BYTE PTR [eax+edx*4-0x7c],bl
  414a55:	add    al,BYTE PTR [eax+edx*1+0x28222220]
  414a5c:	lds    ecx,FWORD PTR [edx]
  414a5e:	sub    BYTE PTR [edx],al
  414a60:	rol    BYTE PTR [eax],0x8
  414a63:	xor    BYTE PTR [esi+0x1],al
  414a66:	sub    BYTE PTR [eax],dl
  414a68:	and    BYTE PTR [edx-0x7d],ch
  414a6b:	inc    ecx
  414a6c:	push   esp
  414a6d:	and    al,0x1
  414a6f:	sub    DWORD PTR [eax],ebp
  414a71:	push   cs
  414a72:	add    BYTE PTR [ecx],dl
  414a74:	and    BYTE PTR [edx],bh
  414a76:	sbb    dl,BYTE PTR [ecx+eiz*1]
  414a79:	or     al,al
  414a7b:	xchg   ebx,eax
  414a7c:	push   ss
  414a7d:	or     al,0x11
  414a7f:	and    DWORD PTR [eax],edx
  414a81:	add    BYTE PTR [edx-0x777dffb1],al
  414a87:	xchg   ebx,eax
  414a88:	add    al,0x25
  414a8a:	addr16 add cl,cl
  414a8d:	dec    eax
  414a8e:	xchg   edx,eax
  414a8f:	inc    eax
  414a90:	adc    DWORD PTR [edi],ecx
  414a92:	les    ecx,FWORD PTR [edx]
  414a94:	or     DWORD PTR [eax],0x4c109040
  414a9a:	add    al,BYTE PTR [edx]
  414a9c:	cmp    BYTE PTR [edx+eax*1-0x7bffcb78],al
  414aa3:	push   eax
  414aa4:	inc    edx
  414aa5:	adc    DWORD PTR [ecx+0x10505023],eax
  414aab:	dec    ebp
  414aac:	or     esp,DWORD PTR [eax]
  414aae:	or     ecx,DWORD PTR [eax+0x10238018]
  414ab4:	das    
  414ab5:	pusha  
  414ab6:	push   ebp
  414ab7:	or     al,0xc0
  414ab9:	pop    eax
  414aba:	lock cmp eax,DWORD PTR [ebp-0x7f]
  414abe:	sbb    BYTE PTR [edx+edx*1],al
  414ac1:	xchg   BYTE PTR [eax+ebx*1+0x1],dl
  414ac5:	inc    edx
  414ac6:	add    BYTE PTR [edx],ch
  414ac8:	inc    edx
  414ac9:	jo     0x414acb
  414acb:	add    BYTE PTR [eax+0x12204048],ch
  414ad1:	push   cs
  414ad2:	add    ah,ah
  414ad4:	ror    BYTE PTR [eax*1+0x4c0a1851],0x8
  414adc:	sbb    BYTE PTR [esp+eax*1],al
  414adf:	xchg   ecx,eax
  414ae0:	cwde   
  414ae1:	add    DWORD PTR [esp],ecx
  414ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae5:	mov    DWORD PTR [ecx],eax
  414ae7:	shl    DWORD PTR [eax+0x20],1
  414aea:	dec    esi
  414aeb:	add    BYTE PTR [eax+eiz*1+0x0],dl
  414aef:	adc    al,BYTE PTR [ecx]
  414af1:	inc    esi
  414af2:	add    ch,BYTE PTR [eax+eax*1+0x3600a211]
  414af9:	and    BYTE PTR [eax+0x4c00c809],bl
  414aff:	mov    DWORD PTR [eax+0x8ef400],eax
  414b05:	and    bl,BYTE PTR [edi]
  414b07:	dec    eax
  414b08:	add    DWORD PTR [eax],eax
  414b0a:	or     ah,BYTE PTR [eax-0x7f1fbcfe]
  414b10:	sub    al,0x10
  414b12:	add    BYTE PTR [eax-0x7efbc000],al
  414b18:	adc    BYTE PTR [edx],dl
  414b1a:	or     BYTE PTR [edx],cl
  414b1c:	lods   eax,DWORD PTR ds:[esi]
  414b1d:	pop    eax
  414b1e:	xadd   BYTE PTR [edx],cl
  414b21:	dec    esp
  414b22:	add    BYTE PTR [eax],ch
  414b24:	add    BYTE PTR [edx],ah
  414b26:	ror    al,1
  414b28:	add    BYTE PTR [ecx],dh
  414b2a:	rol    BYTE PTR [eax],0x80
  414b2d:	and    BYTE PTR [esp+eax*2-0x5e],al
  414b31:	push   cs
  414b32:	call   0x101633a
  414b37:	xor    DWORD PTR [eax+0x41],0xffffff82
  414b3b:	and    DWORD PTR ds:0xc7a12420,esi
  414b41:	or     DWORD PTR [eax+0x5af4a132],0x90598c8
  414b4b:	or     DWORD PTR [eax],eax
  414b4d:	add    BYTE PTR [eax+0x6],ah
  414b50:	add    BYTE PTR [esi],al
  414b52:	dec    ebp
  414b53:	add    al,0x0
  414b55:	(bad)  
  414b56:	xor    DWORD PTR [eax],edx
  414b58:	add    BYTE PTR [eax],ah
  414b5a:	adc    BYTE PTR [ebx],al
  414b5c:	add    BYTE PTR [edx],ah
  414b5e:	xor    BYTE PTR [ecx],0x24
  414b61:	and    BYTE PTR [eax+eax*1],0x6
  414b65:	add    BYTE PTR [eax+0x4],dl
  414b68:	add    BYTE PTR [eax],al
  414b6a:	and    dl,al
  414b6c:	add    DWORD PTR [ecx-0x7e],eax
  414b6f:	inc    eax
  414b70:	add    eax,0x72808810
  414b75:	sub    dl,BYTE PTR [ebx]
  414b77:	adc    esp,DWORD PTR [ecx+ebx*2]
  414b7a:	inc    edi
  414b7b:	or     al,BYTE PTR ss:[edx]
  414b7e:	or     al,0x22
  414b80:	and    eax,0x2b092b26
  414b85:	and    al,0x18
  414b87:	push   0x10848212
  414b8c:	adc    ch,BYTE PTR [edx]
  414b8e:	add    BYTE PTR [eax-0x54],al
  414b91:	or     BYTE PTR [eax+0x23102502],ch
  414b97:	jb     0x414bb9
  414b99:	cmp    eax,0xf1a014d1
  414b9e:	or     BYTE PTR [edx+0x8],ah
  414ba1:	shl    BYTE PTR [eax+0x1],0x14
  414ba5:	or     ah,BYTE PTR [edx]
  414ba7:	add    BYTE PTR [eax+0x41003a08],0x44
  414bae:	add    DWORD PTR [eax],ebx
  414bb0:	add    al,BYTE PTR [eax]
  414bb2:	lock add al,BYTE PTR [eax]
  414bb5:	sub    cl,BYTE PTR [edx]
  414bb7:	call   0xa4584bdc
  414bbc:	inc    esp
  414bbd:	dec    eax
  414bbe:	and    BYTE PTR [edi],al
  414bc0:	test   BYTE PTR [eax],ah
  414bc2:	adc    BYTE PTR [eax+eax*1],al
  414bc5:	adc    BYTE PTR [eax],dl
  414bc7:	adc    BYTE PTR [eax],dl
  414bc9:	add    DWORD PTR [eax+0x36],esp
  414bcc:	add    BYTE PTR [eax],al
  414bce:	or     BYTE PTR [ebx+0x64ed2302],0x2
  414bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd6:	inc    ecx
  414bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bd8:	add    al,dh
  414bda:	add    BYTE PTR [edx],0x42
  414bdd:	cwde   
  414bde:	rcl    BYTE PTR [esi-0x80],0x33
  414be2:	add    DWORD PTR ds:0x30010402,eax
  414be8:	dec    ecx
  414be9:	jo     0x414b8c
  414beb:	add    BYTE PTR [ecx+edx*1+0x2c64002],dl
  414bf2:	ss add al,0xc
  414bf5:	or     al,0x4
  414bf7:	or     al,0x16
  414bf9:	add    BYTE PTR [ecx],al
  414bfb:	or     eax,0x40004008
  414c00:	and    BYTE PTR [edx],cl
  414c02:	and    DWORD PTR [eax],0x3c
  414c05:	mov    eax,ds:0x840920
  414c0a:	add    BYTE PTR [esi+0x1],al
  414c0d:	add    BYTE PTR [eax],0xe6
  414c10:	cli    
  414c11:	add    BYTE PTR [esi],ah
  414c13:	mov    al,BYTE PTR [edx+0x64]
  414c16:	nop
  414c17:	cwde   
  414c18:	add    al,0xa8
  414c1a:	add    eax,DWORD PTR [ebx+0x12]
  414c1d:	daa    
  414c1e:	dec    eax
  414c1f:	sbb    DWORD PTR [ecx],eax
  414c21:	and    DWORD PTR [eax+0x24202080],eax
  414c27:	inc    eax
  414c28:	add    eax,0x602a062
  414c2d:	sbb    DWORD PTR [ecx+0x30],eax
  414c30:	add    BYTE PTR [ebx-0x75dc6fff],al
  414c36:	and    DWORD PTR [eax-0x3b637b00],0x49051400
  414c40:	and    DWORD PTR [eax],edx
  414c42:	daa    
  414c43:	inc    ebx
  414c44:	add    al,0x39
  414c46:	and    al,BYTE PTR [eax]
  414c48:	or     BYTE PTR [ecx],al
  414c4a:	add    al,0x35
  414c4c:	adc    eax,0xae0
  414c51:	call   0x6aa:0x2022c943
  414c58:	adc    BYTE PTR [eax+0x61],al
  414c5b:	and    BYTE PTR [eax-0x1d95f950],cl
  414c61:	add    al,0x61
  414c63:	mov    BYTE PTR [ecx+eax*4],al
  414c66:	mov    BYTE PTR [eax],al
  414c68:	xor    DWORD PTR [eax+0xb],esi
  414c6b:	and    al,0x1
  414c6e:	nop
  414c6f:	adc    eax,DWORD PTR [edx]
  414c71:	push   eax
  414c72:	xor    bh,BYTE PTR [eax]
  414c74:	add    al,BYTE PTR [esi]
  414c76:	sbb    al,0x70
  414c78:	add    BYTE PTR [ecx],cl
  414c7a:	add    dl,bl
  414c7c:	shl    BYTE PTR [edx],1
  414c7e:	nop
  414c7f:	and    BYTE PTR [esi],0x9c
  414c82:	adc    BYTE PTR [edx+eiz*2+0xf340570],al
  414c89:	add    DWORD PTR [eax],0xc004b8c9
  414c8f:	inc    eax
  414c90:	mov    BYTE PTR [eax],al
  414c92:	or     eax,DWORD PTR [eax]
  414c94:	xor    BYTE PTR [ecx+eax*4+0x62dce040],dl
  414c9b:	nop
  414c9c:	and    BYTE PTR ds:0x8008,dl
  414ca2:	mov    BYTE PTR [edx+0x28],dh
  414ca5:	push   es
  414ca6:	add    al,0x34
  414ca8:	add    BYTE PTR [ebx*4+0x21908e8c],0x91
  414cb0:	inc    ecx
  414cb1:	jo     0x414cb7
  414cb3:	adc    BYTE PTR [eax],0x19
  414cb6:	sub    eax,0xda8a4a29
  414cbb:	into   
  414cbc:	add    esp,DWORD PTR [ebx+0x80316c]
  414cc2:	push   ecx
  414cc3:	add    BYTE PTR [eax-0x7fad9df8],al
  414cc9:	inc    eax
  414cca:	add    BYTE PTR [edx+eax*2-0x7c],cl
  414cce:	add    BYTE PTR [ecx+eiz*2+0x74],ah
  414cd2:	adc    DWORD PTR [esi+0x0],edx
  414cd5:	inc    esp
  414cd6:	mov    al,0x24
  414cd8:	add    DWORD PTR [eax+0x14],edx
  414cdb:	sbb    BYTE PTR [eax+0x24],dl
  414cde:	xchg   ecx,eax
  414cdf:	test   BYTE PTR [eax+0x2c003],al
  414ce5:	cmp    BYTE PTR [eax],dh
  414ce7:	add    BYTE PTR [eax+0x10],0x6
  414ceb:	sub    BYTE PTR [eax+0xf64d00],ch
  414cf1:	sub    al,0xa0
  414cf3:	xchg   esp,eax
  414cf4:	and    al,0xb
  414cf6:	add    al,BYTE PTR [ecx+0x2]
  414cf9:	add    al,BYTE PTR [eax+0x0]
  414cfc:	xchg   BYTE PTR [eax],ah
  414cfe:	inc    ecx
  414cff:	or     dl,BYTE PTR [ecx]
  414d01:	add    DWORD PTR [eax+0x40c81824],esp
  414d07:	adc    DWORD PTR [eax],eax
  414d09:	and    eax,esp
  414d0b:	or     bl,BYTE PTR [eax]
  414d0d:	cs inc eax
  414d0f:	add    esp,esi
  414d11:	add    ecx,DWORD PTR [ecx+0x0]
  414d14:	or     eax,ecx
  414d16:	js     0x414d21
  414d18:	and    BYTE PTR [ecx],0xc4
  414d1b:	adc    DWORD PTR [eax+eiz*4],0x410409
  414d22:	push   eax
  414d23:	rol    BYTE PTR [eax],0xcc
  414d26:	xor    BYTE PTR [eax+0x0],0xa1
  414d2a:	add    DWORD PTR [ebp-0x58],0xffffff86
  414d2e:	dec    edx
  414d2f:	and    ebx,DWORD PTR [eax]
  414d31:	inc    esp
  414d32:	popa   
  414d33:	add    DWORD PTR [eax+0x5],ecx
  414d36:	dec    edx
  414d37:	and    BYTE PTR [eax-0x55dffd40],al
  414d3d:	enter  0x4b4,0x0
  414d41:	add    ah,BYTE PTR [edx+0x18100502]
  414d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d48:	push   0x22
  414d4a:	inc    edi
  414d4b:	add    ah,cl
  414d4d:	or     BYTE PTR [esp+eax*1],cl
  414d50:	dec    edi
  414d51:	adc    eax,0x84004
  414d56:	add    BYTE PTR [ebp-0x7fdfaf4e],cl
  414d5c:	push   es
  414d5d:	mov    al,ds:0xda00009b
  414d62:	arpl   WORD PTR [esi],cx
  414d64:	or     al,BYTE PTR [eax+0x50]
  414d67:	xor    edx,ebp
  414d69:	add    dl,BYTE PTR [eax]
  414d6b:	mov    al,BYTE PTR [eax]
  414d6d:	inc    ebx
  414d6e:	add    eax,0x251120
  414d73:	add    BYTE PTR [eax+0x1b938482],cl
  414d79:	imul   eax,DWORD PTR [eax],0xffffff80
  414d7c:	and    BYTE PTR [edx+0x528200c4],dl
  414d82:	add    BYTE PTR [edx+0x5664004],ah
  414d88:	inc    eax
  414d89:	adc    BYTE PTR [eax],ah
  414d8b:	sub    al,0x46
  414d8d:	pusha  
  414d8e:	or     BYTE PTR [ebx+0x201086cd],cl
  414d94:	popa   
  414d95:	sub    al,BYTE PTR [eax+0x44d244c]
  414d9b:	or     al,BYTE PTR [ebx]
  414d9d:	es push ecx
  414d9f:	pusha  
  414da0:	and    BYTE PTR [eax+0xa60042],al
  414da6:	or     BYTE PTR [eax-0x78],0x41
  414daa:	sub    eax,0x80288420
  414daf:	or     BYTE PTR [esi],dl
  414db1:	add    eax,0x7681a40
  414db6:	cmp    BYTE PTR [edx+0x20b48481],ah
  414dbc:	or     BYTE PTR [eax],ch
  414dbe:	add    al,BYTE PTR [edx+0x20200008]
  414dc4:	or     DWORD PTR [eax],ebp
  414dc6:	adc    cl,BYTE PTR [ecx]
  414dc8:	add    al,0xa8
  414dca:	inc    ecx
  414dcb:	pushf  
  414dcc:	add    BYTE PTR [eax],dh
  414dce:	push   ss
  414dcf:	inc    esp
  414dd0:	xchg   esp,eax
  414dd1:	add    al,0x10
  414dd3:	or     DWORD PTR [eax],ecx
  414dd5:	add    al,0xe1
  414dd7:	xor    al,BYTE PTR [eax+0x21]
  414dda:	add    BYTE PTR [ebx],ah
  414ddc:	dec    eax
  414ddd:	and    BYTE PTR [eax-0x5f3efdfc],ah
  414de3:	add    BYTE PTR [edi],0x44
  414de6:	push   eax
  414de7:	inc    ecx
  414de8:	add    BYTE PTR [eax],dl
  414dea:	add    ch,BYTE PTR [ecx+eax*1]
  414ded:	(bad)  
  414dee:	sub    DWORD PTR [esi],edx
  414df0:	add    BYTE PTR [edx+0x482002d3],al
  414df6:	and    al,ah
  414df8:	mov    al,ds:0x23401684
  414dfd:	and    edx,0xc0190822
  414e03:	add    al,BYTE PTR fs:[ebx]
  414e06:	add    BYTE PTR [edx+0x808a598],al
  414e0c:	lods   al,BYTE PTR ds:[esi]
  414e0d:	adc    al,al
  414e0f:	add    al,0x13
  414e11:	add    BYTE PTR [edx+0x60101005],0xa0
  414e18:	and    BYTE PTR [edx],al
  414e1a:	sbb    BYTE PTR [eax],0x18
  414e1d:	dec    eax
  414e1e:	adc    BYTE PTR [ecx+0x40c40868],dl
  414e24:	or     eax,DWORD PTR [eax+0x52]
  414e27:	xchg   ebx,eax
  414e28:	add    cl,cl
  414e2a:	rol    BYTE PTR [esi],0x4
  414e2d:	and    al,dl
  414e2f:	add    eax,DWORD PTR ds:0xb2028900
  414e35:	add    BYTE PTR [edx],dl
  414e37:	ret    0x1800
  414e3a:	dec    esi
  414e3b:	nop
  414e3c:	mov    eax,0xc000281
  414e41:	inc    eax
  414e42:	out    dx,al
  414e43:	add    DWORD PTR ds:0x860622,eax
  414e49:	pusha  
  414e4a:	add    BYTE PTR [eax+0x2],cl
  414e4d:	(bad)  
  414e4e:	add    ah,BYTE PTR [eax+0x24421121]
  414e54:	xchg   esp,eax
  414e55:	push   edx
  414e56:	nop
  414e57:	imul   eax,DWORD PTR [eax],0x17001646
  414e5d:	dec    eax
  414e5e:	cmp    BYTE PTR [eax],ch
  414e60:	inc    esp
  414e61:	add    bl,BYTE PTR [edx]
  414e63:	mov    dh,BYTE PTR [eax+0xf]
  414e66:	push   ss
  414e67:	add    BYTE PTR [esp],ah
  414e6a:	dec    edx
  414e6b:	mov    BYTE PTR [eax+0x0],al
  414e6e:	xchg   BYTE PTR [eax],ch
  414e70:	sub    cl,BYTE PTR [edx+0x10]
  414e73:	sub    BYTE PTR [eax+0x7c46150],dl
  414e79:	adc    eax,DWORD PTR [eax]
  414e7b:	add    ebp,DWORD PTR [eax]
  414e7d:	mov    al,0x2
  414e7f:	add    DWORD PTR [eax+0x16],ecx
  414e82:	add    al,BYTE PTR [eax+0x436c2442]
  414e88:	add    BYTE PTR es:[ebx],cl
  414e8b:	or     BYTE PTR [eax+0x3d404a0],al
  414e91:	inc    eax
  414e92:	add    DWORD PTR [edx],0x22122100
  414e98:	add    BYTE PTR [edx+0x2],bl
  414e9b:	cmp    ecx,DWORD PTR [eax+0x1900084a]
  414ea1:	jo     0x414ee7
  414ea3:	and    al,BYTE PTR [eax]
  414ea5:	inc    eax
  414ea6:	adc    BYTE PTR [edx],al
  414ea8:	add    al,0x19
  414eaa:	call   DWORD PTR ds:0x434a84
  414eb0:	sub    DWORD PTR [eax],eax
  414eb2:	and    BYTE PTR [edx],0x8c
  414eb5:	add    BYTE PTR [ecx+0x68],cl
  414eb8:	add    DWORD PTR [edi+0x10049c00],eax
  414ebe:	loopne 0x414ec0
  414ec0:	fsubr  DWORD PTR [ecx+eax*4+0x51]
  414ec4:	add    BYTE PTR [eax+eax*1-0x80],0x28
  414ec9:	and    ah,BYTE PTR [ebx+0xbcba420]
  414ecf:	pusha  
  414ed0:	or     al,BYTE PTR [eax-0x7f]
  414ed3:	xor    BYTE PTR [ecx+0x1],ch
  414ed6:	cmp    BYTE PTR [eax],al
  414ed8:	add    esp,DWORD PTR [eax+edx*1+0x1a048dca]
  414edf:	ror    BYTE PTR [ecx],0x8a
  414ee2:	add    BYTE PTR [eax],al
  414ee4:	adc    BYTE PTR [ebp+0x2043402],al
  414eea:	or     cl,BYTE PTR [ebx]
  414eec:	adc    cl,bl
  414eee:	add    BYTE PTR [eax-0x66],cl
  414ef1:	enter  0x2220,0x80
  414ef5:	add    BYTE PTR [eax],dl
  414ef7:	loop   0x414ebd
  414ef9:	dec    esp
  414efa:	in     al,0x0
  414efc:	jl     0x414e88
  414efe:	sub    DWORD PTR [esp+ecx*1],eax
  414f01:	or     al,BYTE PTR [esp+ebp*4-0x80]
  414f05:	xor    bl,al
  414f07:	and    DWORD PTR [ecx+0x1],0xd140840
  414f0e:	inc    edx
  414f0f:	rcl    BYTE PTR [eax],1
  414f11:	add    BYTE PTR [eax],al
  414f13:	inc    eax
  414f14:	xor    BYTE PTR [esp+eax*1+0x6d28a880],0x84
  414f1c:	mov    al,ds:0x2442092
  414f21:	inc    esp
  414f22:	sub    DWORD PTR [eax],ecx
  414f24:	or     BYTE PTR [eax+0x18],al
  414f27:	jo     0x414f52
  414f29:	add    BYTE PTR [eax+0x0],0x48
  414f2d:	add    DWORD PTR [ecx],0x2e898501
  414f33:	adc    dl,BYTE PTR [edx]
  414f35:	add    DWORD PTR [edx],0xa08645b2
  414f3b:	inc    edx
  414f3c:	add    al,0x60
  414f3e:	and    DWORD PTR [edx+0xa],eax
  414f41:	add    BYTE PTR ds:0x4100000,0x4
  414f48:	and    BYTE PTR [eax],0x28
  414f4b:	add    BYTE PTR [eax-0xe2ff400],dl
  414f51:	and    DWORD PTR [esi+0x44],eax
  414f54:	xchg   BYTE PTR [eax],bl
  414f56:	add    BYTE PTR [eax],al
  414f58:	sub    DWORD PTR [ebx-0x7effff31],0x1d80060
  414f62:	add    eax,0x3c92a408
  414f67:	and    BYTE PTR [edx],ah
  414f69:	xor    al,BYTE PTR [ecx+ecx*1+0x40]
  414f6d:	xor    bl,BYTE PTR [ebp+0x10]
  414f70:	inc    eax
  414f71:	sub    BYTE PTR [eax+0x2a],0x4d
  414f75:	inc    ecx
  414f76:	loopne 0x414fc8
  414f78:	add    al,BYTE PTR [ecx+0x24]
  414f7b:	shl    BYTE PTR [ebp+0x32],0x91
  414f7f:	sbb    BYTE PTR [edx+0x23],cl
  414f82:	dec    edx
  414f83:	add    cl,dl
  414f85:	mov    edx,0xc3080526
  414f8a:	mov    BYTE PTR [eax],dl
  414f8c:	dec    ecx
  414f8d:	add    al,BYTE PTR [ecx]
  414f8f:	add    DWORD PTR [edx],eax
  414f91:	nop
  414f92:	sub    BYTE PTR [eax],al
  414f94:	dec    ecx
  414f95:	add    ebp,DWORD PTR [edx+0x58052102]
  414f9b:	add    cl,BYTE PTR [edx]
  414f9d:	cmp    DWORD PTR [edx],edx
  414f9f:	and    esp,DWORD PTR [eax]
  414fa1:	adc    BYTE PTR gs:[edx],al
  414fa4:	inc    eax
  414fa5:	add    eax,0x147cd11a
  414faa:	in     al,0x10
  414fac:	and    BYTE PTR [esp+edx*8-0x80],cl
  414fb0:	add    al,0xd
  414fb2:	add    al,BYTE PTR [eax]
  414fb4:	push   edx
  414fb5:	push   es
  414fb6:	or     al,0x5
  414fb8:	or     al,0x23
  414fba:	pop    edx
  414fbb:	add    al,0x80
  414fbd:	rcl    BYTE PTR [edx],cl
  414fbf:	or     BYTE PTR [edx+0x16],cl
  414fc2:	or     cl,al
  414fc4:	dec    esp
  414fc5:	add    BYTE PTR [edx+0x40c042],bl
  414fcb:	dec    ecx
  414fcc:	inc    eax
  414fcd:	and    BYTE PTR [ecx-0x1eaf6fb6],dl
  414fd3:	adc    BYTE PTR [ebp-0x18],bl
  414fd6:	xchg   DWORD PTR [eax-0x80],esi
  414fd9:	and    eax,DWORD PTR [eax]
  414fdb:	push   0xd02a
  414fe0:	test   BYTE PTR [edx-0x7b],ch
  414fe3:	or     al,0x0
  414fe5:	and    BYTE PTR [edx+eax*1],dl
  414fe8:	add    al,BYTE PTR [eax]
  414fea:	xchg   esi,eax
  414feb:	add    eax,0x541f048
  414ff0:	mov    ds:0x94105020,al
  414ff5:	push   esi
  414ff6:	and    BYTE PTR [esi+0x8],al
  414ff9:	or     cl,BYTE PTR [eax+0x4a442002]
  414fff:	sub    BYTE PTR [ebp+0x2c4a04],cl
  415005:	add    DWORD PTR [ebx],eax
  415007:	add    dl,al
  415009:	add    DWORD PTR [edx+0x40],eax
  41500c:	inc    eax
  41500d:	pop    es
  41500e:	add    BYTE PTR [eax+eax*2+0x40],al
  415012:	and    al,0x13
  415014:	shl    BYTE PTR [ecx],1
  415016:	add    al,BYTE PTR [eax+0x82c1400]
  41501c:	or     BYTE PTR ds:0x1c120146,0x40
  415023:	add    esp,DWORD PTR [eax]
  415025:	lods   eax,DWORD PTR ds:[esi]
  415026:	sbb    BYTE PTR [ebx],0x9
  415029:	and    DWORD PTR [eax],eax
  41502b:	add    BYTE PTR [ecx],al
  41502d:	or     BYTE PTR [eax],0x21
  415030:	adc    BYTE PTR [ebx],0x40
  415033:	add    BYTE PTR [edx+edx*1],0x4
  415037:	xor    BYTE PTR [ecx],al
  415039:	add    DWORD PTR [eax],ebp
  41503b:	push   esp
  41503c:	loop   0x4150ac
  41503e:	push   0xc800201
  415043:	pusha  
  415044:	js     0x415047
  415046:	call   0xa10c:0x23801610
  41504d:	enter  0x1809,0x34
  415051:	adc    BYTE PTR [esp+ecx*1+0x42],dl
  415055:	push   ss
  415056:	nop
  415057:	add    al,0x4b
  415059:	adc    BYTE PTR [eax],ah
  41505b:	loop   0x415003
  41505d:	add    BYTE PTR [ecx+0x1100b2c0],dh
  415063:	add    al,0x50
  415065:	add    BYTE PTR [eax],al
  415067:	adc    eax,0x4101a008
  41506d:	add    al,0x1
  41506f:	add    cl,BYTE PTR [eax+eax*1]
  415072:	xor    eax,0x40005003
  415078:	and    al,0x81
  41507a:	sbb    eax,0xd100004
  41507f:	mov    al,ds:0xb50
  415084:	add    al,0x0
  415086:	push   cs
  415087:	dec    edx
  415088:	or     DWORD PTR [ecx+0x44],eax
  41508b:	sbb    BYTE PTR [eax],dl
  41508d:	inc    edi
  41508e:	sub    dh,BYTE PTR [ebp-0x3a]
  415091:	dec    eax
  415092:	add    al,BYTE PTR [eax-0x78]
  415095:	sbb    al,BYTE PTR [eax]
  415097:	push   eax
  415098:	push   edx
  415099:	and    BYTE PTR [ecx],dl
  41509b:	add    BYTE PTR [esi],al
  41509d:	add    BYTE PTR [edx+eax*1],ah
  4150a0:	rol    BYTE PTR [esp+ecx*1+0x12008e80],0x8c
  4150a8:	xor    DWORD PTR [esi],0x32c0324
  4150ae:	mov    al,ds:0x60042
  4150b3:	add    al,0x40
  4150b5:	xchg   ebx,eax
  4150b6:	push   es
  4150b7:	js     0x4150ba
  4150b9:	adc    BYTE PTR [edx+ecx*2],0x9
  4150bd:	or     eax,DWORD PTR [ecx]
  4150bf:	adc    cl,al
  4150c1:	add    al,0x14
  4150c3:	or     BYTE PTR [eax+0x8],al
  4150c6:	adc    DWORD PTR [eax],0x80630882
  4150cc:	add    DWORD PTR [eax],esp
  4150ce:	add    BYTE PTR [edi],cl
  4150d0:	sbb    cl,BYTE PTR [ebp+ebx*1+0x77e10220]
  4150d7:	sub    dl,BYTE PTR [edx]
  4150d9:	and    BYTE PTR [eax+edx*1],al
  4150dc:	add    BYTE PTR [eax],ch
  4150de:	adc    cl,BYTE PTR [edx]
  4150e0:	sbb    DWORD PTR fs:0x2a204104,eax
  4150e7:	mov    al,ds:0x67a8e102
  4150ec:	or     al,0x8
  4150ee:	adc    al,BYTE PTR [edi]
  4150f0:	inc    esp
  4150f1:	add    BYTE PTR [edx],al
  4150f3:	add    BYTE PTR [eax+0x5],al
  4150f6:	push   es
  4150f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f8:	adc    al,0x4c
  4150fa:	or     BYTE PTR [esp+eax*2+0x2810c00],ah
  415101:	adc    dl,BYTE PTR [eax]
  415103:	add    al,BYTE PTR [eax+0x310001c]
  415109:	mov    ds:0x9204001,al
  41510e:	inc    eax
  41510f:	dec    ebx
  415110:	nop
  415111:	push   ebx
  415112:	or     BYTE PTR [eax+eiz*1+0x400bb0],al
  415119:	and    BYTE PTR [ecx],0x34
  41511c:	adc    BYTE PTR [ebx-0x7b],dl
  41511f:	or     DWORD PTR [ebx+0x3603480],esp
  415125:	push   esp
  415126:	xchg   ebp,eax
  415127:	sub    BYTE PTR [edx],al
  415129:	inc    edx
  41512a:	adc    DWORD PTR [ecx+0x0],ecx
  41512d:	rol    BYTE PTR [eax],1
  41512f:	sub    al,0x22
  415131:	push   edx
  415132:	push   ss
  415133:	or     al,0x83
  415135:	pop    es
  415136:	and    BYTE PTR [eax+0x30108200],dl
  41513c:	dec    eax
  41513d:	mov    al,0x10
  41513f:	inc    eax
  415140:	and    al,BYTE PTR [eax]
  415142:	adc    dl,BYTE PTR [ecx]
  415144:	add    BYTE PTR [eax+0x36],dl
  415147:	pusha  
  415148:	sub    BYTE PTR [eax],cl
  41514a:	push   0x50
  41514c:	add    al,0x5
  41514e:	add    DWORD PTR [eax-0x7f9b7e00],0x94080211
  415158:	add    al,0x20
  41515a:	xor    BYTE PTR [ebx],0x80
  41515d:	or     BYTE PTR [ecx],al
  41515f:	xor    dl,BYTE PTR [edx]
  415161:	add    BYTE PTR [eax],al
  415163:	rol    BYTE PTR [edi],1
  415165:	and    ecx,DWORD PTR [ecx-0x80]
  415168:	dec    esp
  415169:	mov    cl,0x30
  41516b:	scas   al,BYTE PTR es:[edi]
  41516c:	and    cl,BYTE PTR [ecx]
  41516e:	and    eax,eax
  415170:	cwde   
  415171:	and    DWORD PTR ds:0xb0800000,esp
  415177:	and    BYTE PTR [edx],bl
  415179:	call   0x481:0x988400c0
  415180:	pusha  
  415181:	retf   0x950c
  415184:	add    BYTE PTR [edx+eiz*4+0x58745208],al
  41518b:	add    BYTE PTR [eax],al
  41518d:	imul   eax,DWORD PTR [edx+0x42],0x61881294
  415194:	and    BYTE PTR ds:0x5c0020,cl
  41519a:	and    BYTE PTR [eax],al
  41519c:	add    eax,DWORD PTR [ebx+0x0]
  41519f:	test   BYTE PTR [eax],al
  4151a1:	or     BYTE PTR [esi],bh
  4151a3:	inc    ebp
  4151a4:	and    BYTE PTR [esi-0x7567f9ee],al
  4151aa:	or     al,0x94
  4151ac:	add    BYTE PTR [ecx+0x4],dl
  4151af:	nop
  4151b0:	inc    eax
  4151b1:	add    DWORD PTR [ebp+0x14498408],0xffffff80
  4151b8:	and    BYTE PTR [eax+0x1],al
  4151bb:	or     ah,BYTE PTR [ecx-0x7e]
  4151be:	adc    DWORD PTR [ecx-0x7b],eax
  4151c1:	and    DWORD PTR [eax-0x77ecbbf0],0xa0045805
  4151cb:	inc    eax
  4151cc:	inc    esi
  4151cd:	dec    eax
  4151ce:	loopne 0x4151d0
  4151d0:	adc    edx,DWORD PTR [eax+0x8]
  4151d3:	sub    eax,DWORD PTR [edx+0x14022010]
  4151d9:	inc    edx
  4151da:	jb     0x4151dd
  4151dc:	add    esp,DWORD PTR [edx+0x18]
  4151df:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4151e1:	and    al,0x23
  4151e3:	add    al,0xa
  4151e5:	and    eax,eax
  4151e7:	add    cl,BYTE PTR [eax]
  4151e9:	add    BYTE PTR [ecx-0x77],bl
  4151ec:	or     BYTE PTR [eax+0x30],ah
  4151ef:	adc    al,BYTE PTR [esi]
  4151f1:	and    DWORD PTR [eax],esp
  4151f3:	add    BYTE PTR [eax+0x24201200],al
  4151f9:	push   esp
  4151fa:	ret    0x5001
  4151fd:	or     al,0x40
  4151ff:	inc    edx
  415200:	sbb    al,BYTE PTR [eax+eax*2+0x28]
  415204:	inc    ebp
  415205:	dec    edx
  415206:	adc    DWORD PTR [edx],edx
  415208:	inc    ax
  41520a:	inc    esi
  41520b:	pop    eax
  41520c:	mov    eax,ds:0x24889908
  415211:	cmp    BYTE PTR [eax+0xc08402],dh
  415217:	inc    esp
  415218:	sub    DWORD PTR [eax+eax*2+0x600044e0],eax
  41521f:	xchg   ebp,eax
  415220:	inc    eax
  415221:	or     BYTE PTR [edx+0x2],al
  415224:	add    eax,DWORD PTR [ecx+0x48d0900]
  41522a:	mov    al,ds:0xb960a9d
  41522f:	sbb    dl,BYTE PTR [eax+0x41]
  415232:	xchg   esi,eax
  415233:	or     BYTE PTR [eax],al
  415235:	push   eax
  415236:	inc    esp
  415237:	add    DWORD PTR [edx+0x9],0xc4100680
  41523e:	add    BYTE PTR [eax+0x1],cl
  415241:	adc    BYTE PTR [edx],0xe0
  415244:	sbb    BYTE PTR [eax-0x7c],0x80
  415248:	add    DWORD PTR [ebx],eax
  41524a:	repnz test DWORD PTR [eax],eax
  41524d:	adc    eax,0x40200018
  415252:	pusha  
  415253:	adc    DWORD PTR [eax],esp
  415255:	sbb    BYTE PTR [ecx-0x6f],al
  415258:	sub    DWORD PTR [eax+0x0],eax
  41525b:	shl    DWORD PTR [ecx],0x1
  41525e:	inc    eax
  41525f:	lds    esi,FWORD PTR [eax]
  415261:	adc    BYTE PTR [edx],ah
  415263:	add    BYTE PTR [ecx],al
  415265:	rcl    BYTE PTR [esp+eax*1],1
  415268:	add    BYTE PTR [eax+eax*1],al
  41526b:	rol    BYTE PTR [eax],0x8
  41526e:	or     al,0x4
  415270:	lea    eax,[edi]
  415272:	mov    al,ds:0x980ad04
  415277:	bound  eax,QWORD PTR [ebx]
  415279:	shl    BYTE PTR [eax+0x482f0201],0x39
  415280:	fisub  DWORD PTR [eax]
  415282:	xor    BYTE PTR [ecx-0x70],bh
  415285:	add    eax,DWORD PTR [eax]
  415287:	adc    BYTE PTR [ebp-0x79fdfeb0],ah
  41528d:	pusha  
  41528e:	add    BYTE PTR [ecx-0x7e],al
  415291:	cmp    BYTE PTR [esi],al
  415293:	add    al,BYTE PTR [eax]
  415295:	push   ss
  415296:	push   edx
  415297:	add    BYTE PTR [eax],0x42
  41529a:	add    BYTE PTR [edx],al
  41529c:	pop    esi
  41529d:	add    BYTE PTR [eax],al
  41529f:	adc    DWORD PTR [eax],0x91120230
  4152a5:	add    al,0xc
  4152a7:	or     dl,al
  4152a9:	inc    eax
  4152aa:	inc    ecx
  4152ab:	fsubr  DWORD PTR [ecx+0x2]
  4152ae:	or     al,BYTE PTR [esi]
  4152b0:	call   0x90672d5
  4152b5:	sbb    BYTE PTR [ebx],0x10
  4152b8:	adc    BYTE PTR [esi],dl
  4152ba:	mov    al,0x20
  4152bc:	rol    BYTE PTR [edx+0x5],0x48
  4152c0:	inc    edx
  4152c1:	mov    al,ds:0x88d04400
  4152c6:	or     BYTE PTR [ecx+eax*2-0x7e],cl
  4152ca:	xor    al,0x40
  4152cc:	sub    DWORD PTR [ecx+0x0],eax
  4152cf:	or     al,0x20
  4152d1:	adc    BYTE PTR [eax],al
  4152d3:	pushf  
  4152d4:	call   0x85d31e
  4152d9:	or     BYTE PTR [eax+0xa],ah
  4152dc:	and    BYTE PTR [eax],al
  4152de:	add    DWORD PTR [edx+0x6004052a],eax
  4152e4:	enter  0x1401,0x2
  4152e8:	add    eax,0x80289350
  4152ed:	adc    al,BYTE PTR [edx-0x7e]
  4152f0:	add    al,0x14
  4152f2:	inc    eax
  4152f3:	add    al,0x1e
  4152f5:	and    al,0xd
  4152f7:	dec    esp
  4152f8:	jbe    0x41533b
  4152fa:	bound  eax,QWORD PTR [esi+0x1]
  4152fd:	and    al,0x50
  4152ff:	inc    ecx
  415300:	inc    esp
  415301:	push   eax
  415302:	pop    es
  415303:	add    DWORD PTR [eax],0x89020280
  415309:	and    DWORD PTR [eax],0x22e001
  41530f:	push   eax
  415310:	add    eax,0xf9400a
  415315:	add    eax,0x30080304
  41531a:	adc    BYTE PTR [eax],dl
  41531c:	adc    BYTE PTR [eax+eiz*1],0x4
  415320:	shl    BYTE PTR [edx+0x223206],1
  415326:	mov    ch,BYTE PTR [edx]
  415328:	rol    BYTE PTR [edx],1
  41532a:	adc    BYTE PTR [esi],ah
  41532c:	add    DWORD PTR [eax+0x33],eax
  41532f:	adc    BYTE PTR [ebx],al
  415331:	enter  0x8100,0x10
  415335:	push   ds
  415336:	adc    BYTE PTR [ebx],al
  415338:	mov    eax,ds:0x8140808
  41533d:	inc    ebx
  41533e:	or     ah,al
  415340:	sbb    DWORD PTR [eax],eax
  415342:	push   es
  415343:	inc    eax
  415344:	add    DWORD PTR [edx],ecx
  415346:	xor    BYTE PTR [eax],al
  415348:	add    bh,BYTE PTR [ecx+0x222024ca]
  41534e:	add    esi,DWORD PTR [edx]
  415350:	add    bl,BYTE PTR [eax]
  415352:	dec    esp
  415353:	nop
  415354:	add    al,0x12
  415356:	cmp    BYTE PTR [ebx],dl
  415358:	and    al,BYTE PTR ds:0x148023
  41535e:	dec    eax
  41535f:	or     DWORD PTR [ecx],0x2bb10020
  415365:	add    BYTE PTR [edx-0x7f],ch
  415368:	mov    ds:0xe1230459,al
  41536d:	mov    eax,ds:0x48e61970
  415372:	inc    eax
  415373:	pusha  
  415374:	add    al,0x0
  415376:	pusha  
  415377:	shl    BYTE PTR [esi-0x777fff70],1
  41537d:	mov    ah,BYTE PTR [eax]
  41537f:	adc    BYTE PTR [ebx],cl
  415381:	popa   
  415382:	add    al,0x12
  415384:	or     al,0x10
  415386:	push   0xa28308
  41538b:	add    BYTE PTR [eax+0x65],dh
  41538e:	push   ss
  41538f:	add    cl,BYTE PTR [eax]
  415391:	adc    BYTE PTR ss:[eax],dl
  415394:	add    BYTE PTR [eax],ah
  415396:	add    al,0x10
  415398:	or     BYTE PTR [edx],ch
  41539a:	mov    DWORD PTR [edx+0x11040403],esp
  4153a0:	add    ah,dl
  4153a2:	or     BYTE PTR [esi+0x1],dl
  4153a5:	sbb    BYTE PTR es:0x224ac65,al
  4153ac:	loopne 0x4153d8
  4153ae:	add    esi,DWORD PTR [ecx]
  4153b0:	add    DWORD PTR [eax+0x0],eax
  4153b3:	add    ah,dl
  4153b5:	add    DWORD PTR [eax+0x200202a0],eax
  4153bb:	(bad)  
  4153bc:	aam    0x80
  4153be:	push   esi
  4153bf:	or     BYTE PTR [eax+0x41900a30],cl
  4153c5:	add    dl,BYTE PTR [edx]
  4153c7:	add    BYTE PTR [edx+0x208ac002],cl
  4153cd:	add    al,BYTE PTR [eax]
  4153cf:	adc    BYTE PTR [eax-0x7fbdeff4],cl
  4153d5:	or     BYTE PTR [edx+eiz*2-0x3fbdbafe],cl
  4153dc:	imul   eax,DWORD PTR [ecx+0x50],0x30
  4153e0:	push   esp
  4153e1:	or     al,0x11
  4153e3:	dec    esp
  4153e4:	shl    BYTE PTR ds:0x41850111,0x12
  4153eb:	push   esi
  4153ec:	call   0xb2:0x82c31200
  4153f3:	inc    eax
  4153f4:	mov    ch,0x9
  4153f6:	or     BYTE PTR [eax],al
  4153f8:	and    DWORD PTR [edi],eax
  4153fa:	add    DWORD PTR [eax+0x10],ebx
  4153fd:	sbb    BYTE PTR [ebp+0x52],al
  415400:	or     al,0x22
  415402:	and    BYTE PTR [ecx],dh
  415404:	push   eax
  415405:	xor    DWORD PTR [eax+0x52],ebp
  415408:	push   edx
  415409:	dec    eax
  41540a:	or     BYTE PTR [eax],cl
  41540c:	adc    BYTE PTR [eax+0x50],al
  41540f:	add    BYTE PTR [eax+0x6242014b],dl
  415415:	adc    BYTE PTR [eax+0x41412b9],0xb0
  41541c:	dec    eax
  41541d:	pusha  
  41541e:	inc    eax
  41541f:	inc    eax
  415420:	adc    cl,BYTE PTR [ebp+eax*4+0x20]
  415424:	xchg   edx,eax
  415425:	jo     0x415427
  415427:	sbb    al,BYTE PTR [edx]
  415429:	sub    BYTE PTR [ebp+0x8],al
  41542c:	mov    al,ds:0x1120002
  415431:	add    eax,0x84000025
  415436:	sub    eax,DWORD PTR [eax+0x44]
  415439:	and    cl,BYTE PTR [eax-0x7eefd200]
  41543f:	add    BYTE PTR [eax],al
  415441:	lds    ebx,FWORD PTR [ecx-0x20]
  415444:	inc    ecx
  415445:	add    BYTE PTR [eax-0x80],al
  415448:	add    BYTE PTR ds:0x226a9060,0xf1
  41544f:	add    ah,BYTE PTR [ecx+0x42842180]
  415455:	icebp  
  415456:	push   eax
  415457:	add    dl,BYTE PTR ds:0x20a1109c
  41545d:	repnz add BYTE PTR [eax],cl
  415460:	inc    ebp
  415461:	push   eax
  415462:	adc    DWORD PTR [eax],eax
  415464:	inc    esp
  415465:	or     DWORD PTR [eax+0x13],0x8262000a
  41546c:	inc    esp
  41546d:	add    BYTE PTR [eax],cl
  41546f:	loope  0x415471
  415471:	and    BYTE PTR [ecx+0x21],dl
  415474:	inc    esp
  415475:	inc    eax
  415476:	adc    al,0xa1
  415478:	add    BYTE PTR [edx+esi*1],ah
  41547b:	xor    DWORD PTR [ebp-0x60],esi
  41547e:	adc    BYTE PTR [eax],al
  415480:	xor    BYTE PTR cs:[edx],cl
  415483:	and    eax,0x21b22c2
  415488:	and    BYTE PTR [eax],0xb0
  41548b:	jo     0x4154a7
  41548d:	inc    eax
  41548e:	sbb    al,0x26
  415490:	pop    ecx
  415491:	dec    edx
  415492:	or     bl,BYTE PTR [ebx+0x0]
  415495:	add    DWORD PTR [edx],eax
  415497:	inc    eax
  415498:	enter  0x22,0x90
  41549c:	and    BYTE PTR [edx+0x18],cl
  41549f:	and    BYTE PTR [edx],ah
  4154a1:	add    DWORD PTR [ecx],eax
  4154a3:	push   esi
  4154a4:	ret    
  4154a5:	add    cl,BYTE PTR [eax+eax*4]
  4154a8:	push   cs
  4154a9:	mov    al,BYTE PTR [edx]
  4154ab:	outs   dx,BYTE PTR ds:[esi]
  4154ac:	push   es
  4154ad:	enter  0x4343,0xd
  4154b1:	add    DWORD PTR [ecx],eax
  4154b3:	and    eax,0x10400
  4154b8:	or     BYTE PTR [ecx+eax*1],cl
  4154bb:	and    BYTE PTR [edx+0x19800230],al
  4154c1:	push   cs
  4154c2:	and    DWORD PTR [eax+0x0],esp
  4154c5:	add    BYTE PTR [eax],ah
  4154c7:	add    BYTE PTR [edx],cl
  4154c9:	add    dl,BYTE PTR [edx+0x3f4080b]
  4154cf:	stos   DWORD PTR es:[edi],eax
  4154d0:	add    BYTE PTR [eax+0x2],ah
  4154d3:	fs adc al,0xa
  4154d6:	mov    al,0x10
  4154d8:	add    al,0x28
  4154da:	mov    WORD PTR [eax],cs
  4154dc:	add    al,0x60
  4154de:	push   esp
  4154df:	loop   0x4154e2
  4154e1:	add    al,0x0
  4154e3:	xor    al,BYTE PTR [ecx+eiz*1]
  4154e6:	and    al,BYTE PTR [eax+0x44ea0]
  4154ec:	adc    DWORD PTR [eax],ecx
  4154ee:	mov    ds:0x13118c08,al
  4154f3:	inc    edx
  4154f4:	pop    eax
  4154f5:	inc    eax
  4154f6:	nop
  4154f7:	inc    eax
  4154f8:	in     al,0x3
  4154fa:	lea    edx,[eax]
  4154fc:	loopne 0x415500
  4154fe:	xor    BYTE PTR [eax],al
  415500:	add    al,BYTE PTR [eax]
  415502:	or     al,BYTE PTR [eax+0x9213c00]
  415508:	or     al,0x0
  41550a:	call   0x8892:0x8821021
  415511:	dec    esi
  415512:	add    DWORD PTR [eax+eax*1],edx
  415515:	push   esp
  415516:	add    dl,BYTE PTR [ebp+0x52]
  415519:	and    BYTE PTR [eax+0x20],0x1
  41551d:	inc    edx
  41551e:	sub    BYTE PTR [eax+eax*1+0x60001820],dl
  415525:	add    ecx,DWORD PTR [eax]
  415527:	adc    DWORD PTR [ebx],ebx
  415529:	add    DWORD PTR [esi],ecx
  41552b:	push   esi
  41552c:	add    DWORD PTR [edx+0x42],esp
  41552f:	add    eax,DWORD PTR [ebp+ecx*4-0x347dbfff]
  415536:	or     BYTE PTR [eax+ecx*4],al
  415539:	jae    0x415543
  41553b:	add    dl,BYTE PTR [ecx]
  41553d:	and    BYTE PTR [edx+0x0],al
  415540:	or     BYTE PTR [esi],al
  415542:	add    BYTE PTR [eax],0x41
  415545:	add    DWORD PTR [eax],esp
  415547:	push   esi
  415548:	loope  0x4154d8
  41554a:	push   eax
  41554b:	xor    dl,al
  41554d:	sbb    DWORD PTR [edx+eax*2],0x80e221
  415554:	es push ss
  415556:	or     eax,0xd0a4322
  41555b:	sub    BYTE PTR [eax-0x7d],dl
  41555e:	or     BYTE PTR [eax],cl
  415560:	adc    al,BYTE PTR [eax-0x78]
  415563:	add    cl,BYTE PTR [eax+edx*1]
  415566:	adc    DWORD PTR [ecx+0x2],eax
  415569:	add    eax,0x4048c041
  41556e:	call   0xd96b9777
  415573:	and    ah,bl
  415575:	cwde   
  415576:	and    BYTE PTR [esi+eax*1+0x8c127a3],bl
  41557d:	or     al,0x98
  41557f:	sbb    BYTE PTR [ecx],dh
  415581:	push   edx
  415582:	push   ds
  415583:	add    dh,BYTE PTR [ecx+0x7004082a]
  415589:	inc    edx
  41558a:	inc    ebx
  41558b:	imul   edx,DWORD PTR [eax],0xffffff80
  41558e:	add    DWORD PTR [eax+0x40000086],0x401a
  415598:	adc    al,0xd1
  41559a:	or     BYTE PTR [eax+0x40],dl
  41559d:	popa   
  41559e:	or     al,0x85
  4155a0:	or     BYTE PTR [eax],al
  4155a2:	adc    BYTE PTR [edx],dl
  4155a4:	add    al,0x30
  4155a6:	or     BYTE PTR [ebx],al
  4155a8:	xchg   DWORD PTR [ebp+0x45420005],ecx
  4155ae:	loopne 0x4155be
  4155b0:	adc    BYTE PTR [eax-0x3b],0x40
  4155b4:	inc    eax
  4155b5:	fdiv   DWORD PTR [eax+0x0]
  4155b8:	mov    WORD PTR [edx],es
  4155ba:	xor    BYTE PTR [eax-0x46],al
  4155bd:	or     BYTE PTR [eax],al
  4155bf:	std    
  4155c0:	add    BYTE PTR [edx+0x0],dl
  4155c3:	or     BYTE PTR [eax-0x5f],al
  4155c6:	add    al,0x7c
  4155c8:	add    al,BYTE PTR [eax+0x1]
  4155cb:	push   ecx
  4155cc:	or     BYTE PTR [edi+eax*4-0x3d],dl
  4155d0:	cmp    BYTE PTR [edx],ah
  4155d2:	inc    ebx
  4155d3:	add    BYTE PTR [ebx+0x5],ah
  4155d6:	or     DWORD PTR [ecx],eax
  4155d8:	or     bl,BYTE PTR [eax-0x64]
  4155db:	mov    BYTE PTR [eax],al
  4155dd:	push   ebp
  4155de:	xchg   ecx,eax
  4155df:	adc    DWORD PTR [eax+eax*1+0x0],eax
  4155e3:	and    cl,BYTE PTR [ecx]
  4155e5:	xor    al,BYTE PTR [ebp+0x42]
  4155e8:	xor    BYTE PTR [bx+si+0x2c],al
  4155ed:	add    DWORD PTR [edx+0x1c623321],eax
  4155f3:	and    BYTE PTR ds:0x144b016,al
  4155f9:	add    BYTE PTR [edx],ch
  4155fb:	adc    al,BYTE PTR [eax]
  4155fd:	adc    BYTE PTR [edx],ah
  4155ff:	mov    al,ds:0x88805061
  415604:	add    al,0x95
  415606:	add    DWORD PTR [eax],esp
  415608:	add    al,0x44
  41560a:	push   edx
  41560b:	and    al,0x10
  41560d:	add    BYTE PTR [eax+0x2a000c9],cl
  415613:	les    edx,FWORD PTR [ebx]
  415615:	pusha  
  415616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415617:	retf   
  415618:	adc    DWORD PTR [eax],eax
  41561a:	add    BYTE PTR [eax],ah
  41561c:	add    al,BYTE PTR [edx+0x0]
  41561f:	pop    edx
  415620:	mov    BYTE PTR [edx],al
  415622:	add    al,BYTE PTR [eax+ebp*1-0x7a]
  415626:	or     ah,BYTE PTR [eax]
  415628:	adc    BYTE PTR [eax+0x31ca9040],al
  41562e:	adc    BYTE PTR [ecx],al
  415630:	xchg   esp,eax
  415631:	add    BYTE PTR [edx+eax*1],al
  415634:	inc    eax
  415635:	add    BYTE PTR [eax-0x7f],al
  415638:	adc    BYTE PTR [eax],cl
  41563a:	add    al,BYTE PTR [eax-0x2fdeb5ff]
  415640:	inc    ecx
  415641:	xchg   edx,eax
  415642:	inc    ecx
  415643:	add    DWORD PTR [eax],eax
  415645:	or     eax,DWORD PTR [eax+0x0]
  415648:	or     BYTE PTR [eax],dl
  41564a:	or     BYTE PTR [ebp-0x80],al
  41564d:	add    eax,0x118b4800
  415652:	mov    eax,ds:0x20404802
  415657:	add    al,0x0
  415659:	xchg   ebx,eax
  41565a:	add    BYTE PTR ds:0xb1848218,0x21
  415661:	pusha  
  415662:	or     eax,DWORD PTR [eax+0x40]
  415665:	dec    edx
  415666:	push   eax
  415667:	add    ebx,DWORD PTR [eax]
  415669:	and    BYTE PTR ds:0x204ae100,ah
  41566f:	add    BYTE PTR [eax+eiz*2],ah
  415672:	or     al,0x94
  415674:	and    DWORD PTR [eax],eax
  415676:	mov    al,ds:0x1cc38c03
  41567b:	mov    DWORD PTR [edx-0xafffa0],ebp
  415681:	adc    eax,0x434c84
  415686:	add    ecx,DWORD PTR [ecx+0x1e006820]
  41568c:	mov    BYTE PTR [eax+esi*4],dl
  41568f:	add    al,BYTE PTR [ebx+0x8100048]
  415695:	add    dl,BYTE PTR [ecx+0x6a090610]
  41569b:	adc    al,dl
  41569d:	fisub  DWORD PTR [eax]
  41569f:	or     BYTE PTR [eax],cl
  4156a1:	add    al,0x18
  4156a3:	push   eax
  4156a4:	inc    esp
  4156a5:	ror    BYTE PTR [edx-0x80],0x8e
  4156a9:	or     DWORD PTR [eax*2+0x322202],eax
  4156b0:	inc    ecx
  4156b1:	sub    DWORD PTR [ecx-0x57de4d56],eax
  4156b7:	nop
  4156b8:	mov    al,ds:0xe01800
  4156bd:	or     DWORD PTR [eax],eax
  4156bf:	push   ecx
  4156c0:	push   eax
  4156c1:	jp     0x4156cd
  4156c3:	push   esi
  4156c4:	add    al,0x4
  4156c6:	les    ebx,FWORD PTR [ecx]
  4156c8:	push   ecx
  4156c9:	fsub   DWORD PTR [edx]
  4156cb:	add    al,BYTE PTR [edx+0x40128018]
  4156d1:	inc    eax
  4156d2:	xor    BYTE PTR [edx],ah
  4156d4:	dec    eax
  4156d5:	add    DWORD PTR ds:0xe880961c,edx
  4156db:	add    DWORD PTR [esp+eax*4-0x71],ebp
  4156df:	mov    ds:0x1104e15,al
  4156e4:	adc    al,0x9
  4156e6:	ror    DWORD PTR [eax+0x1f],cl
  4156e9:	add    ah,BYTE PTR [eax+0x746320]
  4156ef:	add    eax,0xcaba0027
  4156f4:	and    eax,DWORD PTR [edx+0x20]
  4156f7:	leave  
  4156f8:	xor    BYTE PTR [eax],cl
  4156fa:	adc    BYTE PTR [esi+0xfa000c0],dl
  415700:	and    BYTE PTR [eax],ah
  415702:	pusha  
  415703:	test   BYTE PTR [eax-0x60],cl
  415706:	add    al,0x88
  415708:	add    BYTE PTR [eax+0x10069411],bl
  41570e:	sub    al,BYTE PTR [ecx+eiz*4+0x40]
  415712:	or     al,0x19
  415714:	nop
  415715:	or     BYTE PTR [ecx+0x47c60142],cl
  41571b:	js     0x41569f
  41571d:	push   eax
  41571e:	nop
  41571f:	add    DWORD PTR [eax+0x240201c],0x4800930
  415729:	and    DWORD PTR [ecx],ebp
  41572b:	test   BYTE PTR [ebp+0x48],dh
  41572e:	add    BYTE PTR [ebx+0x45],ah
  415731:	or     BYTE PTR [eax+ecx*4],al
  415734:	inc    edx
  415735:	push   ss
  415736:	add    BYTE PTR [eax],al
  415738:	push   ecx
  415739:	adc    dh,al
  41573b:	add    BYTE PTR [ecx],0xa2
  41573e:	adc    BYTE PTR [edi+0x280a37a],al
  415744:	add    DWORD PTR [ecx],ebx
  415746:	mov    al,ds:0xa010246
  41574b:	test   ah,ch
  41574d:	les    edx,FWORD PTR [eax+0x54]
  415750:	ret    0x4
  415753:	sbb    DWORD PTR [ebp+0x20200247],eax
  415759:	pop    es
  41575a:	sbb    dl,al
  41575c:	ins    BYTE PTR es:[edi],dx
  41575d:	adc    BYTE PTR [edi],dl
  41575f:	lock and DWORD PTR [edx],0x1c084118
  415766:	add    DWORD PTR [eax],edx
  415768:	sub    BYTE PTR [ecx+0x0],al
  41576b:	mov    BYTE PTR [eax+ecx*1+0x0],al
  41576f:	adc    al,0x81
  415771:	bound  ebp,QWORD PTR [ecx+eiz*2+0x28]
  415775:	popa   
  415776:	sbb    BYTE PTR [eax],al
  415778:	sub    al,ah
  41577a:	push   es
  41577b:	add    BYTE PTR [eax],al
  41577d:	pop    ecx
  41577e:	push   0x4
  415780:	add    BYTE PTR [eax],ch
  415782:	dec    ecx
  415783:	push   eax
  415784:	or     BYTE PTR [edx+0x54],al
  415787:	or     al,0x80
  415789:	or     dl,BYTE PTR [eax+edx*2]
  41578c:	or     al,0x0
  41578e:	push   esp
  41578f:	push   esi
  415790:	test   al,0x3c
  415792:	inc    esp
  415793:	bound  ebp,QWORD PTR [eax-0x7ffd9bb8]
  415799:	xor    BYTE PTR [eax],ah
  41579b:	or     BYTE PTR [ebx],al
  41579d:	or     BYTE PTR [eax],al
  41579f:	push   0x40a0054a
  4157a4:	add    ecx,DWORD PTR [ebx+0xa210a48]
  4157aa:	mov    ds:0xda502508,al
  4157af:	inc    ecx
  4157b0:	and    eax,0xce4460c0
  4157b5:	inc    eax
  4157b6:	les    ebx,FWORD PTR [edx+0x30]
  4157b9:	sub    BYTE PTR [ecx+0x15000980],al
  4157bf:	inc    edx
  4157c0:	add    DWORD PTR [edx],esi
  4157c2:	or     BYTE PTR [ebx],0xd7
  4157c5:	pusha  
  4157c6:	pusha  
  4157c7:	nop
  4157c8:	or     dl,BYTE PTR [edx]
  4157ca:	sbb    BYTE PTR [esi+edx*1-0x7b7fffbe],al
  4157d1:	or     DWORD PTR [eax-0x78],eax
  4157d4:	pushf  
  4157d5:	or     al,BYTE PTR [edx]
  4157d7:	or     BYTE PTR [eax+0x400204],al
  4157dd:	inc    esp
  4157de:	sub    eax,0xd41c6880
  4157e3:	cwde   
  4157e4:	or     BYTE PTR [eax+0x80c9aac],0x0
  4157eb:	inc    edx
  4157ec:	add    al,0x11
  4157ee:	inc    esp
  4157ef:	call   0x80a8:0x1e680800
  4157f6:	add    BYTE PTR [eax+0x0],cl
  4157f9:	popa   
  4157fa:	popa   
  4157fb:	sbb    BYTE PTR [edx-0x5c],cl
  4157fe:	add    ch,bl
  415800:	and    BYTE PTR [eax],al
  415802:	add    BYTE PTR [ecx+0x21],dl
  415805:	rcl    BYTE PTR [eax+0x42],0x10
  415809:	add    dl,BYTE PTR [eax]
  41580b:	xor    al,0xb8
  41580d:	sbb    BYTE PTR [eax],ah
  41580f:	add    DWORD PTR [eax],edx
  415811:	and    al,BYTE PTR [eax]
  415813:	push   edi
  415814:	dec    edx
  415815:	xor    BYTE PTR [eax],0x60
  415818:	or     BYTE PTR [eax+0xa20a401],al
  41581e:	mov    BYTE PTR [eax],bl
  415820:	inc    eax
  415821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415822:	add    BYTE PTR [eax+0x20024834],al
  415828:	and    BYTE PTR [ecx],al
  41582a:	inc    ecx
  41582b:	inc    eax
  41582c:	inc    eax
  41582d:	adc    dh,BYTE PTR [ebp+0x10301940]
  415833:	add    BYTE PTR [eax-0x37dcd238],dh
  415839:	popa   
  41583a:	adc    BYTE PTR [ebx],dl
  41583c:	push   ds
  41583d:	adc    BYTE PTR [eax],al
  41583f:	test   BYTE PTR [eax],al
  415841:	inc    eax
  415842:	mov    BYTE PTR [eax+0x40],dl
  415845:	add    bl,BYTE PTR [eax]
  415847:	inc    esi
  415848:	push   ss
  415849:	loope  0x4157cb
  41584b:	add    BYTE PTR [eax-0x5e],dl
  41584e:	inc    eax
  41584f:	add    BYTE PTR [ecx+0x41],al
  415852:	cmp    DWORD PTR [eax],ebx
  415854:	inc    eax
  415855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415856:	add    ah,BYTE PTR [ebx+eax*1+0xd04e081]
  41585d:	add    DWORD PTR [eax],eax
  41585f:	add    BYTE PTR [eax],dl
  415861:	test   al,0x0
  415863:	or     bh,BYTE PTR [eax]
  415865:	add    BYTE PTR [eax-0x80],al
  415868:	add    al,BYTE PTR [eax]
  41586a:	jno    0x4157ff
  41586c:	add    dl,BYTE PTR [eax-0x7f]
  41586f:	sbb    al,BYTE PTR [eax+eax*1+0x65]
  415873:	and    BYTE PTR [eax+0x1],0xaa
  415877:	add    DWORD PTR [eax],edx
  415879:	inc    eax
  41587a:	add    BYTE PTR [eax],bl
  41587c:	push   ecx
  41587d:	sbb    DWORD PTR [eax],ebx
  41587f:	call   0x1a8:0x419a4591
  415886:	in     al,dx
  415887:	add    BYTE PTR [eax+eax*4],al
  41588a:	adc    BYTE PTR [eax],dl
  41588c:	and    DWORD PTR [edx+0x134264c0],eax
  415892:	or     DWORD PTR [ecx-0x7f],ebx
  415895:	mov    BYTE PTR [eax],al
  415897:	add    cl,BYTE PTR [edx]
  415899:	push   eax
  41589a:	add    al,0xb
  41589c:	call   0x8242ce24
  4158a1:	push   ss
  4158a2:	add    BYTE PTR [esp+eiz*8],al
  4158a5:	test   DWORD PTR [eax-0x1b],eax
  4158a8:	add    dl,cl
  4158aa:	xor    BYTE PTR [edx],al
  4158ac:	add    al,BYTE PTR [eax]
  4158ae:	or     BYTE PTR [edx+eax*4],al
  4158b1:	add    al,0x0
  4158b3:	(bad)  
  4158b4:	fs dec esp
  4158b6:	add    BYTE PTR [edx-0x7b],ah
  4158b9:	xchg   BYTE PTR [edx],bl
  4158bb:	add    BYTE PTR [eax],bl
  4158bd:	add    BYTE PTR [eax+0x4650040],al
  4158c3:	jb     0x415868
  4158c5:	and    BYTE PTR [eax+0x2d10402],dl
  4158cb:	adc    al,0xb5
  4158cd:	add    BYTE PTR [eax],al
  4158cf:	or     BYTE PTR [eax],0x4
  4158d2:	xor    DWORD PTR [eax+0x4a],ecx
  4158d5:	sub    BYTE PTR ds:0x8165211,ch
  4158db:	add    BYTE PTR [ebx+ecx*1],0x1
  4158df:	inc    edx
  4158e0:	add    DWORD PTR [esi-0x171fd600],0x300c640
  4158ea:	adc    DWORD PTR [edx-0x7f],ebp
  4158ed:	add    BYTE PTR [eax],cl
  4158ef:	adc    dl,BYTE PTR [eax+0x8343dac]
  4158f5:	mov    al,ds:0x96210a21
  4158fa:	xor    BYTE PTR [ecx+0xa],ah
  4158fd:	or     DWORD PTR [edi],eax
  4158ff:	lea    eax,[eax+0x14]
  415902:	push   ecx
  415903:	inc    ecx
  415904:	enter  0x9942,0x18
  415908:	xchg   ecx,eax
  415909:	adc    dl,al
  41590b:	test   BYTE PTR [eax],dl
  41590d:	cmp    dl,BYTE PTR [ecx]
  41590f:	and    esp,DWORD PTR [edx]
  415911:	or     BYTE PTR [eax+ebx*8+0x3a],bl
  415915:	or     BYTE PTR [edx],al
  415917:	jno    0x41595a
  415919:	cmp    eax,0xc06009cb
  41591e:	inc    esp
  41591f:	lea    esp,[eax]
  415921:	push   eax
  415922:	pop    edx
  415923:	adc    BYTE PTR [eax+0x10204411],dh
  415929:	add    al,BYTE PTR [eax]
  41592b:	push   esp
  41592c:	sub    ch,BYTE PTR [edx+0x0]
  41592f:	add    DWORD PTR [eax],0x6ab74
  415935:	add    BYTE PTR [edx],cl
  415937:	adc    BYTE PTR [esi],ah
  415939:	inc    eax
  41593a:	nop
  41593b:	nop
  41593c:	push   cs
  41593d:	cmp    BYTE PTR [ecx+0x51],al
  415940:	adc    eax,0x11010
  415945:	add    BYTE PTR [esi],ah
  415947:	icebp  
  415948:	push   es
  415949:	push   es
  41594a:	xor    DWORD PTR [eax],0xe0228a0
  415950:	mov    es,WORD PTR [ebx+0x11]
  415953:	cmp    eax,0x11709180
  415958:	nop
  415959:	add    DWORD PTR [eax+0x0],esp
  41595c:	adc    BYTE PTR [edx+0xc],0x20
  415960:	xor    DWORD PTR [eax+0x4a813801],eax
  415966:	adc    BYTE PTR [eax+0x12],dl
  415969:	or     ebp,DWORD PTR [esi]
  41596b:	or     DWORD PTR [eax*2+0x7040432],edx
  415972:	or     BYTE PTR [eax+0xa],al
  415975:	xchg   ebx,eax
  415976:	and    BYTE PTR [ecx+0x50829094],0x1
  41597d:	test   BYTE PTR [eax+0xc012488],al
  415983:	add    BYTE PTR [eax],dl
  415985:	add    al,BYTE PTR [eax+0x2692d510]
  41598b:	sbb    eax,DWORD PTR [ecx]
  41598d:	mov    DWORD PTR [eax+eax*2],eax
  415990:	and    ebp,DWORD PTR [eax+0x40]
  415993:	mov    BYTE PTR [eax+eax*2],cl
  415996:	inc    eax
  415997:	inc    eax
  415998:	mov    cs,WORD PTR [ebx+0x48]
  41599b:	add    ch,BYTE PTR [ecx]
  41599d:	or     BYTE PTR [ecx+0x201100a0],al
  4159a3:	mov    al,bl
  4159a5:	add    DWORD PTR [ecx],0x61c0c4a
  4159ab:	inc    esi
  4159ac:	push   ss
  4159ad:	or     al,0x80
  4159af:	add    BYTE PTR fs:[edx],al
  4159b2:	push   eax
  4159b3:	push   es
  4159b4:	in     al,0xa0
  4159b6:	sub    al,0x20
  4159b8:	and    BYTE PTR [eax+0x2149130],ah
  4159be:	pusha  
  4159bf:	adc    al,BYTE PTR [ecx-0x7dcfe77e]
  4159c5:	cwde   
  4159c6:	mov    eax,ds:0x2200146
  4159cb:	add    BYTE PTR [eax],ah
  4159cd:	je     0x415a0f
  4159cf:	sbb    BYTE PTR [eax+ecx*4],0x82
  4159d3:	add    al,0x3a
  4159d5:	add    al,0x80
  4159d7:	lods   al,BYTE PTR ds:[esi]
  4159d8:	and    BYTE PTR [esi+ecx*2],al
  4159db:	inc    eax
  4159dc:	sub    DWORD PTR [eax+0x20],eax
  4159df:	or     BYTE PTR [eax],0x0
  4159e2:	inc    eax
  4159e3:	adc    BYTE PTR [edx],dl
  4159e5:	add    eax,DWORD PTR [esi+0x4405e8]
  4159eb:	adc    BYTE PTR [eax],dl
  4159ed:	and    bl,BYTE PTR [eax]
  4159ef:	rol    BYTE PTR [ecx],1
  4159f1:	inc    eax
  4159f2:	and    BYTE PTR [edx+0x3020040],0x1
  4159f9:	xor    dl,0x10
  4159fc:	adc    al,al
  4159fe:	inc    esi
  4159ff:	sbb    eax,0x1a06c00a
  415a04:	sbb    al,al
  415a06:	or     BYTE PTR [eax+0x18885a00],dl
  415a0c:	lods   al,BYTE PTR ds:[esi]
  415a0d:	xor    DWORD PTR [edx+eax*1],ecx
  415a10:	and    BYTE PTR [ecx],al
  415a12:	jmp    0x2004:0x71c04a0a
  415a19:	sbb    bl,al
  415a1b:	add    BYTE PTR [esi],ch
  415a1d:	push   esp
  415a1e:	test   DWORD PTR [bp+si],eax
  415a21:	inc    ecx
  415a22:	and    BYTE PTR [edx],cl
  415a24:	dec    eax
  415a25:	inc    ebx
  415a26:	inc    eax
  415a27:	mov    esp,0xc0480401
  415a2c:	adc    BYTE PTR [ecx+eax*4],al
  415a2f:	push   eax
  415a30:	lea    esp,[eax*1+0x2da030a2]
  415a37:	push   eax
  415a38:	add    BYTE PTR [edx+0x6e],dl
  415a3b:	sub    BYTE PTR [ecx],al
  415a3d:	add    BYTE PTR [ecx+0x16],0x14
  415a41:	dec    esi
  415a42:	add    al,dl
  415a44:	add    BYTE PTR [edi+eax*4+0x400aa80],cl
  415a4b:	dec    ecx
  415a4c:	adc    BYTE PTR [edx+0x0],al
  415a4f:	sbb    BYTE PTR [eax+0x40220811],dl
  415a55:	adc    DWORD PTR [eax],eax
  415a57:	push   0x82008010
  415a5c:	add    BYTE PTR ds:0x9012180,cl
  415a62:	mov    BYTE PTR [esp+ebp*4+0x3141011d],dh
  415a69:	add    BYTE PTR [eax+ebp*2],cl
  415a6c:	push   ecx
  415a6d:	and    DWORD PTR [eax],edx
  415a6f:	or     al,0xa8
  415a71:	mov    DWORD PTR [ebp+edx*4+0x21905810],eax
  415a78:	adc    BYTE PTR [eax+0x42080200],al
  415a7e:	push   es
  415a7f:	mov    bl,0x6
  415a81:	add    al,dl
  415a83:	add    BYTE PTR [edx],al
  415a85:	and    cl,BYTE PTR [edx+0x212234]
  415a8b:	add    al,0x22
  415a8d:	adc    BYTE PTR [ecx+0x0],al
  415a90:	add    BYTE PTR [edx],al
  415a92:	adc    eax,0xe47605d4
  415a97:	and    BYTE PTR [eax+eax*1],ah
  415a9a:	adc    cl,BYTE PTR [ecx]
  415a9c:	enter  0x9090,0x40
  415aa0:	inc    eax
  415aa1:	add    al,BYTE PTR [edx]
  415aa3:	adc    al,BYTE PTR [ebp-0x3c]
  415aa6:	add    DWORD PTR [esi-0x5a77fff8],esp
  415aac:	xor    BYTE PTR [eax+eax*1],ah
  415aaf:	inc    ecx
  415ab0:	or     BYTE PTR [eax-0x1fbff7b8],ah
  415ab6:	repnz add BYTE PTR [eax],0x40
  415aba:	add    BYTE PTR [eax],ah
  415abc:	jb     0x415a86
  415abe:	push   cs
  415abf:	arpl   cx,ax
  415ac1:	call   0x1a08:0x4021090c
  415ac8:	push   esi
  415ac9:	rol    BYTE PTR [eax],0x0
  415acc:	or     eax,DWORD PTR [eax+eax*2+0x20005820]
  415ad3:	push   cs
  415ad4:	add    al,0x8a
  415ad6:	add    BYTE PTR [ecx+0x8],cl
  415ad9:	add    DWORD PTR [ecx],eax
  415adb:	push   esp
  415adc:	add    eax,0x2103210
  415ae1:	add    al,0x21
  415ae3:	dec    eax
  415ae4:	dec    eax
  415ae5:	adc    dl,dl
  415ae7:	inc    ecx
  415ae8:	and    DWORD PTR [edx-0x80],0x0
  415aec:	inc    ecx
  415aed:	mov    al,0x3c
  415aef:	add    eax,0x4e040c00
  415af4:	add    BYTE PTR [eax],al
  415af6:	cmp    al,0x54
  415af8:	add    BYTE PTR [edx],ah
  415afa:	add    BYTE PTR [ecx],al
  415afc:	ror    BYTE PTR [eax],0x1
  415aff:	mov    BYTE PTR [edx+eax*1],dl
  415b02:	sbb    al,BYTE PTR [eax]
  415b04:	inc    eax
  415b05:	add    BYTE PTR [eax],0x3
  415b08:	test   BYTE PTR [esp+edx*2],al
  415b0b:	add    BYTE PTR [esi-0x1bfffbb0],dh
  415b11:	dec    edx
  415b12:	adc    al,BYTE PTR [ecx]
  415b14:	mov    BYTE PTR [eax+0x24282a10],al
  415b1a:	inc    edx
  415b1b:	add    bl,BYTE PTR [eax+0xb0288]
  415b21:	add    DWORD PTR [eax+0x12582823],ebp
  415b27:	cdq    
  415b28:	sbb    BYTE PTR [eax],al
  415b2a:	sbb    al,0x80
  415b2c:	xchg   BYTE PTR [edx],al
  415b2e:	xor    cl,dl
  415b30:	or     BYTE PTR [esp+eax*2],al
  415b33:	push   ds
  415b34:	or     DWORD PTR [edx],edx
  415b36:	add    BYTE PTR [edx-0x80],al
  415b39:	rol    BYTE PTR [eax+0x3a04100],0x40
  415b40:	add    al,0x0
  415b42:	add    DWORD PTR [eax],eax
  415b44:	push   eax
  415b45:	adc    BYTE PTR [ebp-0x77],0x1e
  415b49:	xchg   ecx,eax
  415b4a:	and    BYTE PTR [ebx+0x52],cl
  415b4d:	les    edx,FWORD PTR [esi-0x5c67d5df]
  415b53:	inc    esi
  415b54:	cmp    BYTE PTR [eax+edx*1+0x340a10b],dh
  415b5b:	pop    edx
  415b5c:	or     BYTE PTR [eax],ah
  415b5e:	adc    DWORD PTR [ecx],0xa3063636
  415b64:	adc    cl,al
  415b66:	add    dh,BYTE PTR [esp+esi*1]
  415b69:	and    eax,0xf440a20c
  415b6e:	xor    DWORD PTR [ebx+0x4428706],eax
  415b74:	and    al,0x0
  415b76:	dec    ecx
  415b77:	xchg   BYTE PTR [eax],al
  415b79:	sbb    BYTE PTR [edx],cl
  415b7b:	and    ch,BYTE PTR [ecx]
  415b7d:	push   ecx
  415b7e:	and    cl,BYTE PTR [esp+eiz*2+0x28]
  415b82:	add    BYTE PTR [ebx],al
  415b84:	add    BYTE PTR [ebx],cl
  415b86:	xchg   esp,eax
  415b87:	adc    BYTE PTR [ecx+0x2ab12200],al
  415b8d:	pusha  
  415b8e:	add    BYTE PTR [edx+0x20],bl
  415b91:	push   ss
  415b92:	inc    eax
  415b93:	loopne 0x415b99
  415b95:	add    cl,BYTE PTR [eax+0x6012028]
  415b9b:	xchg   edx,eax
  415b9c:	add    eax,DWORD PTR [ebx+0x20100692]
  415ba2:	xchg   edx,eax
  415ba3:	or     eax,0x1986a10
  415ba8:	add    eax,DWORD PTR [esi]
  415baa:	or     al,BYTE PTR [eax]
  415bac:	push   es
  415bad:	sub    al,0x1
  415baf:	add    al,0x20
  415bb1:	sbb    BYTE PTR [eax],ch
  415bb3:	or     BYTE PTR [eax+0x8227200],al
  415bb9:	sub    BYTE PTR [eax+0x242608e6],0x0
  415bc0:	mov    BYTE PTR [eax-0x40],cl
  415bc3:	ret    0x8509
  415bc6:	add    al,BYTE PTR [eax]
  415bc8:	test   BYTE PTR [edx],cl
  415bca:	add    DWORD PTR [edx],eax
  415bcc:	inc    edx
  415bcd:	mov    al,ds:0x4112c002
  415bd2:	adc    BYTE PTR [edx],al
  415bd4:	add    eax,DWORD PTR [eax]
  415bd6:	sub    al,0x1c
  415bd8:	add    bl,BYTE PTR ds:0x88b02ac
  415bde:	and    al,BYTE PTR [eax]
  415be0:	or     DWORD PTR [eax+0x250860a2],0x90406124
  415bea:	rcl    BYTE PTR [edx],1
  415bec:	hlt    
  415bed:	loope  0x415c31
  415bef:	add    BYTE PTR [eax],dl
  415bf1:	add    BYTE PTR [ebx-0x74],0x0
  415bf5:	mov    dl,0x48
  415bf7:	add    dl,BYTE PTR [edx]
  415bf9:	or     BYTE PTR [edx],0x82
  415bfc:	adc    cl,BYTE PTR [eax+0x4f]
  415bff:	add    BYTE PTR [ecx],ah
  415c01:	dec    eax
  415c02:	add    BYTE PTR [esi],al
  415c04:	pop    ss
  415c05:	inc    eax
  415c06:	pusha  
  415c07:	and    cl,BYTE PTR [ecx+eax*1]
  415c0a:	and    BYTE PTR [eax+0x2a],0xc4
  415c0e:	mov    esi,0x45201724
  415c13:	push   esp
  415c14:	add    BYTE PTR [edi-0x45],al
  415c17:	or     BYTE PTR [eax],bh
  415c19:	adc    BYTE PTR [edx+ecx*1],al
  415c1c:	and    BYTE PTR [eax+0x440290],dl
  415c22:	xchg   esp,eax
  415c23:	push   es
  415c24:	add    al,0x9
  415c26:	inc    esp
  415c27:	mov    cl,BYTE PTR [ecx]
  415c29:	jo     0x415c2e
  415c2b:	add    BYTE PTR [eax],0xa
  415c2e:	dec    ebp
  415c2f:	cmp    DWORD PTR [eax],eax
  415c31:	jmp    0x10875c36
  415c36:	mov    BYTE PTR [ecx],0x0
  415c39:	adc    BYTE PTR [eax],cl
  415c3b:	adc    eax,0x26320221
  415c40:	and    BYTE PTR [edx],al
  415c42:	or     cl,BYTE PTR [edx+eax*1]
  415c45:	add    al,bl
  415c47:	adc    BYTE PTR [esi+0x18d8082],al
  415c4d:	add    DWORD PTR [eax],esp
  415c4f:	adc    BYTE PTR [ebx],ah
  415c51:	inc    eax
  415c52:	or     BYTE PTR [eax],ch
  415c54:	sbb    BYTE PTR [ecx+eax*1],0x0
  415c58:	add    DWORD PTR [eax],ecx
  415c5a:	inc    eax
  415c5b:	xchg   BYTE PTR [edx],al
  415c5d:	inc    eax
  415c5e:	je     0x415c85
  415c60:	inc    edx
  415c61:	mov    ebx,0xa0840008
  415c66:	and    BYTE PTR [eax],ch
  415c68:	add    BYTE PTR [edx+0x82023],al
  415c6e:	or     eax,DWORD PTR [eax]
  415c70:	inc    eax
  415c71:	adc    BYTE PTR [ecx+eax*8-0x7bfffed6],ah
  415c78:	add    BYTE PTR [esi],dl
  415c7a:	pusha  
  415c7b:	and    BYTE PTR ds:0x40140446,al
  415c81:	dec    eax
  415c82:	add    dh,BYTE PTR [ecx+eax*1+0x0]
  415c86:	add    BYTE PTR [eax],0x51
  415c89:	mov    BYTE PTR [eax],ch
  415c8b:	fs add al,0xa5
  415c8e:	mov    BYTE PTR [eax],bl
  415c90:	xchg   esp,eax
  415c91:	and    BYTE PTR [eax],ah
  415c93:	add    BYTE PTR [edx],cl
  415c95:	or     BYTE PTR [eax+0x10a0a940],dl
  415c9b:	cs and eax,0x341bc8
  415ca1:	or     BYTE PTR [eax],al
  415ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca4:	add    DWORD PTR [eax+0x18],edi
  415ca7:	and    DWORD PTR [eax],ecx
  415ca9:	push   ds
  415caa:	add    BYTE PTR [ebx],0xc4
  415cad:	cwde   
  415cae:	add    DWORD PTR ds:0x2220c242,esi
  415cb4:	inc    ebp
  415cb5:	sub    al,0x72
  415cb7:	add    eax,0x820a2002
  415cbc:	add    dl,BYTE PTR [ecx]
  415cbe:	or     al,0x84
  415cc0:	xor    BYTE PTR [edx],0x0
  415cc3:	dec    eax
  415cc4:	add    BYTE PTR [eax],bl
  415cc6:	or     BYTE PTR [eax+eax*1],al
  415cc9:	mov    al,ds:0x44094040
  415cce:	add    eax,0x23011a14
  415cd3:	or     BYTE PTR [edx+eax*4],cl
  415cd6:	cmp    DWORD PTR [edx],edi
  415cd8:	add    BYTE PTR [eax],al
  415cda:	mov    DWORD PTR [edx+edi*1-0x1c2fefb8],eax
  415ce1:	adc    al,0x0
  415ce3:	xor    ah,BYTE PTR [eax]
  415ce5:	add    eax,0x9c888282
  415cea:	mov    bl,0x21
  415cec:	xor    DWORD PTR [ecx],esp
  415cee:	or     al,0xa9
  415cf0:	add    BYTE PTR [ecx-0x6bfbd77c],al
  415cf6:	inc    ebp
  415cf7:	and    BYTE PTR [edx],al
  415cf9:	and    al,0x4
  415cfb:	add    dl,BYTE PTR [edx+eax*1]
  415cfe:	cwde   
  415cff:	xchg   esi,eax
  415d00:	add    BYTE PTR [eax+0x4c0c2900],al
  415d06:	daa    
  415d07:	add    al,0x0
  415d09:	sub    BYTE PTR [ecx+eax*1],dl
  415d0c:	add    DWORD PTR [esi],eax
  415d0e:	add    BYTE PTR [ecx],0xa5
  415d11:	or     BYTE PTR [eax+0x1108a880],al
  415d17:	xor    cl,al
  415d19:	mov    al,0x8
  415d1b:	push   eax
  415d1c:	or     BYTE PTR [ebx-0x78],dl
  415d1f:	and    BYTE PTR [esp],0x41
  415d23:	add    al,BYTE PTR [ecx]
  415d25:	add    BYTE PTR [eax],cl
  415d27:	add    al,BYTE PTR [eax]
  415d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2a:	or     al,0x5e
  415d2c:	adc    eax,DWORD PTR [ecx]
  415d2e:	sbb    BYTE PTR [ebx+0x8],ah
  415d31:	adc    BYTE PTR [ebx],dl
  415d33:	jb     0x415d5b
  415d35:	retf   0x42a
  415d38:	mov    ss,WORD PTR [edx-0x54]
  415d3b:	add    al,0x14
  415d3d:	adc    eax,0x310a378a
  415d42:	add    al,0x28
  415d44:	adc    BYTE PTR [eax+0x4],0x8b
  415d48:	add    al,0x4c
  415d4a:	adc    al,BYTE PTR [eax]
  415d4c:	pusha  
  415d4d:	adc    BYTE PTR [edx],al
  415d4f:	nop
  415d50:	or     BYTE PTR [eax],ah
  415d52:	add    al,0x23
  415d54:	push   0xc10940
  415d59:	add    esp,edi
  415d5b:	add    ebx,DWORD PTR [eax]
  415d5d:	add    al,0x31
  415d5f:	and    al,0x20
  415d61:	inc    edx
  415d62:	add    dl,BYTE PTR [ebx+0x18]
  415d65:	add    al,BYTE PTR [edx+0x10]
  415d68:	add    eax,0x8a24a07
  415d6d:	add    BYTE PTR [ebp+esi*1+0x52],al
  415d71:	xor    ecx,DWORD PTR [esi+0x8]
  415d74:	add    BYTE PTR [ebx],dl
  415d76:	add    BYTE PTR [ecx+esi*8+0x0],dh
  415d7a:	ret    0x10
  415d7d:	or     dl,BYTE PTR [eax]
  415d7f:	sub    BYTE PTR [eax],ah
  415d81:	or     al,0xa
  415d83:	or     dl,BYTE PTR [ebx-0x7a]
  415d86:	sub    al,0xc3
  415d88:	add    dl,BYTE PTR [eax]
  415d8a:	pusha  
  415d8b:	or     BYTE PTR [edx],dl
  415d8d:	push   es
  415d8e:	add    BYTE PTR [ecx+0x21020066],al
  415d94:	add    DWORD PTR [edx+eiz*1],0x852434
  415d9b:	adc    BYTE PTR [eax],0xa0
  415d9e:	add    DWORD PTR [eax],eax
  415da0:	add    BYTE PTR [eax+0x46],0x85
  415da4:	add    BYTE PTR [eax],al
  415da6:	sub    BYTE PTR [eax],dh
  415da8:	sub    al,0x58
  415daa:	inc    edx
  415dab:	sub    edi,DWORD PTR [eax]
  415dad:	and    eax,0x1540c0ca
  415db2:	push   ss
  415db3:	mov    BYTE PTR [ecx+0x1],cl
  415db6:	add    BYTE PTR [eax],ah
  415db8:	push   0x12123020
  415dbd:	add    DWORD PTR [ecx+eax*2],eax
  415dc0:	bound  esp,QWORD PTR ds:0x100a07
  415dc6:	rol    BYTE PTR [ecx-0x77bf7f75],0x40
  415dcd:	or     DWORD PTR [eax],eax
  415dcf:	push   eax
  415dd0:	add    al,dl
  415dd2:	dec    edx
  415dd3:	and    BYTE PTR [edx-0x69ffffbe],0x2
  415dda:	add    al,BYTE PTR [ecx+0xa81]
  415de0:	and    BYTE PTR [ecx],dh
  415de2:	add    BYTE PTR [ecx*2+0x3c486901],ch
  415de9:	and    BYTE PTR [eax+0x4],al
  415dec:	or     al,BYTE PTR cs:[eax-0x7effffc0]
  415df3:	sub    al,BYTE PTR [esp+ebp*1]
  415df6:	pusha  
  415df7:	and    DWORD PTR [edx+0x30103004],esp
  415dfd:	test   al,0x20
  415dff:	add    al,al
  415e01:	and    BYTE PTR [eax+0x2008022],cl
  415e07:	adc    DWORD PTR [edx+0x42],esp
  415e0a:	add    al,al
  415e0c:	push   esp
  415e0d:	and    ah,BYTE PTR [edx+0x26000212]
  415e13:	add    BYTE PTR [esi],al
  415e15:	add    BYTE PTR [ecx],ah
  415e17:	xchg   edx,eax
  415e18:	add    BYTE PTR [eax],cl
  415e1a:	adc    BYTE PTR [ecx],al
  415e1c:	cmp    BYTE PTR [esp+eax*1+0x4884a2],dl
  415e23:	push   esp
  415e24:	add    BYTE PTR [edx+0x52825880],0x41
  415e2b:	add    BYTE PTR [esi],cl
  415e2d:	xor    ebx,DWORD PTR [edx+eax*4]
  415e30:	or     DWORD PTR [ebx+ecx*1],eax
  415e33:	pop    esp
  415e34:	repnz inc edx
  415e36:	add    al,0x8
  415e38:	add    BYTE PTR [esp+eax*1],al
  415e3b:	xchg   edx,eax
  415e3c:	or     DWORD PTR [eax],eax
  415e3e:	add    al,0x4
  415e40:	or     DWORD PTR [eax],eax
  415e42:	or     DWORD PTR [ebx-0x80],0x1d450024
  415e49:	nop
  415e4a:	inc    ecx
  415e4b:	push   0x58
  415e4d:	xor    al,BYTE PTR [ebx]
  415e4f:	sub    eax,DWORD PTR [eax]
  415e51:	jo     0x415e53
  415e53:	add    DWORD PTR [edx+0x18000056],eax
  415e59:	sbb    al,0x0
  415e5b:	adc    dl,BYTE PTR [ebp+0x200409]
  415e61:	or     BYTE PTR [eax],ah
  415e63:	add    al,0x80
  415e65:	xor    BYTE PTR [ecx],al
  415e67:	bound  esp,QWORD PTR [eax]
  415e69:	add    BYTE PTR [eax],cl
  415e6b:	adc    eax,0x4cf05310
  415e70:	mov    esp,0x1400100
  415e75:	add    al,BYTE PTR [ecx+0x30]
  415e78:	rcl    BYTE PTR [eax],0x0
  415e7b:	rol    BYTE PTR [eax],cl
  415e7d:	adc    al,BYTE PTR [eax]
  415e7f:	add    cl,BYTE PTR [eax+edx*8]
  415e82:	add    BYTE PTR [eax+0x43],dl
  415e85:	add    DWORD PTR [ebx],eax
  415e87:	add    DWORD PTR [esi+eax*1],eax
  415e8a:	add    DWORD PTR [ecx+0x20],eax
  415e8d:	add    BYTE PTR [eax],al
  415e8f:	add    BYTE PTR [ecx],ah
  415e91:	add    DWORD PTR [eax],eax
  415e93:	add    BYTE PTR [eax],dl
  415e95:	and    BYTE PTR [eax],al
  415e97:	inc    ebx
  415e98:	sub    dl,al
  415e9a:	loope  0x415edc
  415e9c:	dec    esp
  415e9d:	add    BYTE PTR [eax-0x7b5753c0],al
  415ea3:	rol    al,0x0
  415ea6:	mov    BYTE PTR [eax],al
  415ea8:	or     BYTE PTR [edx+eax*2],dl
  415eab:	and    DWORD PTR [ecx],eax
  415ead:	add    DWORD PTR [eax],ecx
  415eaf:	add    al,BYTE PTR [eax]
  415eb1:	and    BYTE PTR [eax+0x8040445],0x1
  415eb8:	push   cs
  415eb9:	cmp    DWORD PTR [eax],eax
  415ebb:	inc    esi
  415ebc:	sub    BYTE PTR [edx+0x60],0x48
  415ec0:	and    BYTE PTR [edx],ah
  415ec2:	test   ecx,esp
  415ec4:	inc    eax
  415ec5:	add    dl,al
  415ec7:	adc    BYTE PTR [eax],cl
  415ec9:	xchg   edx,eax
  415eca:	add    DWORD PTR [eax],eax
  415ecc:	add    esi,DWORD PTR [eax+eax*1]
  415ecf:	inc    edx
  415ed0:	rcl    BYTE PTR [ebx],0xc5
  415ed3:	add    BYTE PTR [ecx+0x40],al
  415ed6:	push   es
  415ed7:	or     BYTE PTR [edx+eax*1],ah
  415eda:	add    BYTE PTR [ecx+eax*1],bh
  415edd:	mov    esp,0xa000254
  415ee2:	lds    esi,FWORD PTR [eax]
  415ee4:	and    BYTE PTR [edx],ah
  415ee6:	add    BYTE PTR [eax+0x4230420a],ah
  415eec:	pusha  
  415eed:	mov    BYTE PTR [eax+0x41],ah
  415ef0:	or     BYTE PTR [eax],al
  415ef2:	add    BYTE PTR [eax+eax*4],dl
  415ef5:	sbb    al,BYTE PTR [eax+0x480000]
  415efb:	add    DWORD PTR [edx],eax
  415efd:	sub    BYTE PTR [edx+0xc],al
  415f00:	and    BYTE PTR [eax],al
  415f02:	add    BYTE PTR [edx],al
  415f04:	adc    al,0xa
  415f06:	adc    eax,DWORD PTR [ebx]
  415f08:	and    BYTE PTR [eax],al
  415f0a:	add    BYTE PTR [eax],al
  415f0c:	pop    eax
  415f0d:	jo     0x415f33
  415f0f:	adc    BYTE PTR [edx],al
  415f11:	add    BYTE PTR [eax+eax*1],al
  415f14:	dec    eax
  415f15:	add    al,0x0
  415f17:	add    BYTE PTR [eax],dl
  415f19:	add    DWORD PTR [eax],eax
  415f1b:	push   es
  415f1c:	or     BYTE PTR [esi-0x2c6efe00],al
  415f22:	adc    cl,BYTE PTR [eax+0x2004003]
  415f28:	or     BYTE PTR [eax+edx*2],bl
  415f2b:	add    BYTE PTR [eax+0x0],al
  415f2e:	add    BYTE PTR [eax],al
  415f30:	add    BYTE PTR [eax+0x2],al
  415f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f34:	adc    DWORD PTR [eax],esi
  415f36:	add    DWORD PTR [ecx+0x40],esp
  415f39:	add    dh,BYTE PTR [edx+0x0]
  415f3c:	inc    edx
  415f3d:	sahf   
  415f3e:	mov    BYTE PTR [eax],al
  415f40:	add    dl,cl
  415f42:	add    BYTE PTR [ebx+0x21005000],al
  415f48:	add    bl,BYTE PTR [eax+0x14531860]
  415f4e:	add    BYTE PTR [eax],al
  415f50:	and    BYTE PTR [eax],cl
  415f52:	mov    BYTE PTR [ebx],ch
  415f54:	add    ah,BYTE PTR [ecx]
  415f56:	sbb    al,0x2
  415f58:	push   ecx
  415f59:	mov    BYTE PTR [esi-0x35fffc00],dl
  415f5f:	add    BYTE PTR [edx],al
  415f61:	or     BYTE PTR [eax],al
  415f63:	adc    DWORD PTR [edx+0x60800001],eax
  415f69:	pusha  
  415f6a:	ret    0x141
  415f6d:	add    al,0x8
  415f6f:	add    DWORD PTR [edx-0x52],0x38000420
  415f76:	adc    DWORD PTR [eax],edx
  415f78:	inc    ebx
  415f79:	and    BYTE PTR [edx],ah
  415f7b:	inc    edx
  415f7c:	add    al,0x4c
  415f7e:	lods   al,BYTE PTR ds:[esi]
  415f7f:	adc    BYTE PTR [eax],al
  415f81:	inc    eax
  415f82:	add    DWORD PTR [ecx],eax
  415f84:	add    al,BYTE PTR [eax]
  415f86:	ins    DWORD PTR es:[edi],dx
  415f87:	add    BYTE PTR [eax+0x44],al
  415f8a:	add    ah,BYTE PTR es:[esi+0x20]
  415f8e:	and    DWORD PTR [eax],eax
  415f90:	add    al,0x0
  415f92:	and    BYTE PTR [eax+0x40000100],dl
  415f98:	dec    eax
  415f99:	and    BYTE PTR [eax],al
  415f9b:	dec    esi
  415f9c:	add    BYTE PTR [eax+ecx*1],ch
  415f9f:	ret    0xb0c2
  415fa2:	or     al,0x7
  415fa4:	popa   
  415fa5:	add    BYTE PTR [edx],al
  415fa7:	sub    DWORD PTR [eax+0x718008],ecx
  415fad:	add    DWORD PTR [eax+0x304],eax
  415fb3:	and    DWORD PTR [eax],ebx
  415fb5:	add    bh,BYTE PTR [eax+0xa]
  415fb8:	push   esp
  415fb9:	or     BYTE PTR [ecx+0x30220052],dl
  415fbf:	inc    edx
  415fc0:	inc    esp
  415fc1:	add    dl,BYTE PTR [eax]
  415fc3:	inc    edx
  415fc4:	inc    edx
  415fc5:	add    BYTE PTR [eax+0x22020202],ch
  415fcb:	add    BYTE PTR [eax+0x46415000],cl
  415fd1:	inc    ecx
  415fd2:	ret    
  415fd3:	add    BYTE PTR [ebx+0x31],cl
  415fd6:	add    al,0x2
  415fd8:	add    ah,BYTE PTR [eax-0x6edfdeff]
  415fde:	add    DWORD PTR [eax],eax
  415fe0:	or     al,BYTE PTR [edx]
  415fe2:	in     al,0xdc
  415fe4:	test   DWORD PTR [eax+0x80],eax
  415fea:	mov    BYTE PTR [ecx-0x7cffdc00],ah
  415ff0:	or     DWORD PTR [ebp+0x62882022],0x40
  415ff7:	add    BYTE PTR [ebx],cl
  415ff9:	add    BYTE PTR [eax-0x5e],al
  415ffc:	add    bl,BYTE PTR [eax]
  415ffe:	test   DWORD PTR [eax+0x9a90005],edx
  416004:	adc    BYTE PTR [eax],al
  416006:	or     al,0x0
  416008:	and    eax,0x80401010
  41600d:	add    BYTE PTR [esi+0x60002003],bl
  416013:	xor    BYTE PTR [edi+edx*2+0x8401041],0x55
  41601b:	es jnp 0x41606a
  41601e:	add    DWORD PTR [eax],eax
  416020:	inc    edx
  416021:	and    BYTE PTR [edx],al
  416023:	or     al,0x51
  416025:	and    al,BYTE PTR [ecx+eax*2+0x9]
  416029:	inc    edx
  41602a:	rol    DWORD PTR [ecx],0x0
  41602d:	and    BYTE PTR [eax+0x62],al
  416030:	and    BYTE PTR [eax],ah
  416032:	add    al,0x2
  416034:	and    al,BYTE PTR [ecx]
  416036:	add    DWORD PTR [eax],0x412247c4
  41603c:	mov    BYTE PTR [eax],0x9
  41603f:	add    BYTE PTR [ecx],al
  416041:	inc    eax
  416042:	nop
  416043:	and    BYTE PTR ss:[ecx+0x48],al
  416047:	jo     0x416049
  416049:	adc    BYTE PTR [ebx+0x3],al
  41604c:	push   ss
  41604d:	and    al,0x0
  41604f:	and    al,BYTE PTR [edx+0x11800000]
  416055:	retf   
  416056:	loope  0x416062
  416058:	and    al,BYTE PTR [edx+ebx*2]
  41605b:	and    DWORD PTR [eax],ebx
  41605d:	or     DWORD PTR [eax],0x81051408
  416063:	add    BYTE PTR [edx],al
  416065:	or     ebx,DWORD PTR [eax]
  416067:	sub    al,BYTE PTR [edx+0x42]
  41606a:	adc    BYTE PTR [eax-0x45febea0],0x41
  416071:	xor    BYTE PTR [esi+0x1410000],ah
  416077:	inc    eax
  416078:	push   ss
  416079:	adc    ah,BYTE PTR [eax-0x6f]
  41607c:	or     DWORD PTR [edx+0x42a28000],edx
  416082:	rol    BYTE PTR [edx],cl
  416084:	add    DWORD PTR [ecx],esi
  416086:	add    BYTE PTR [eax+0x42150303],dl
  41608c:	add    BYTE PTR [eax],0x0
  41608f:	dec    esi
  416090:	xor    al,BYTE PTR [eax]
  416092:	mov    al,ds:0x91564051
  416097:	add    BYTE PTR [eax+0x0],dh
  41609a:	and    eax,DWORD PTR [edx]
  41609c:	sbb    al,BYTE PTR [eax+0x0]
  41609f:	and    ah,BYTE PTR [edx+0x0]
  4160a2:	add    BYTE PTR [eax],al
  4160a4:	or     BYTE PTR [ecx],al
  4160a6:	inc    ecx
  4160a7:	adc    BYTE PTR [eax],al
  4160a9:	inc    edx
  4160aa:	inc    edi
  4160ab:	adc    BYTE PTR [ebx],ah
  4160ad:	add    DWORD PTR [eax],edx
  4160af:	or     DWORD PTR [ecx+0x5],esi
  4160b2:	add    BYTE PTR [eax-0x23],cl
  4160b5:	add    bl,BYTE PTR [eax]
  4160b7:	or     al,BYTE PTR [edx+0x1440008]
  4160bd:	or     DWORD PTR [ecx+0xa],eax
  4160c0:	mov    BYTE PTR [eax+0x918c],0x4
  4160c7:	add    ah,BYTE PTR [ecx]
  4160c9:	inc    edx
  4160ca:	add    al,BYTE PTR [edx]
  4160cc:	add    DWORD PTR [edx-0x6ff7fe9c],edx
  4160d2:	add    DWORD PTR [eax],eax
  4160d4:	ror    BYTE PTR [ebx+0x40],0x4
  4160d8:	or     BYTE PTR [eax],al
  4160da:	mov    dl,0x91
  4160dc:	jo     0x4160ee
  4160de:	mov    al,ds:0x866d2
  4160e3:	pusha  
  4160e4:	add    BYTE PTR [eax+0x4001820],cl
  4160ea:	add    BYTE PTR [edx+eax*2+0x485c],bl
  4160f1:	inc    ecx
  4160f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f3:	inc    esi
  4160f4:	repnz add BYTE PTR [eax],al
  4160f7:	or     ecx,DWORD PTR [eax]
  4160f9:	add    BYTE PTR [edx+0x5400004e],dh
  4160ff:	xchg   edx,eax
  416100:	adc    al,BYTE PTR [eax-0x5d]
  416103:	add    BYTE PTR [eax],al
  416105:	pusha  
  416106:	add    BYTE PTR [eax],al
  416108:	pop    es
  416109:	adc    BYTE PTR [edx],dh
  41610b:	push   ax
  41610d:	rol    DWORD PTR [edx],0x42
  416110:	add    BYTE PTR [ecx+esi*1+0x1040500],al
  416117:	add    al,BYTE PTR [eax+0x10]
  41611a:	adc    BYTE PTR [eax],cl
  41611c:	inc    eax
  41611d:	pop    ebx
  41611e:	add    al,BYTE PTR [eax+0x2190000]
  416124:	add    BYTE PTR [ecx],al
  416126:	add    DWORD PTR [ecx+0xc40022],ecx
  41612c:	add    BYTE PTR [eax],al
  41612e:	push   eax
  41612f:	dec    eax
  416130:	push   ecx
  416131:	inc    edx
  416132:	add    BYTE PTR [ecx+0x2],al
  416135:	add    DWORD PTR [ecx],esp
  416137:	push   0x206a0100
  41613c:	add    BYTE PTR [eax],al
  41613e:	xchg   ecx,eax
  41613f:	add    BYTE PTR [eax],al
  416141:	mov    al,ds:0x30402a0
  416146:	push   esp
  416147:	or     BYTE PTR [eax],al
  416149:	and    BYTE PTR [eax],0x50
  41614c:	add    al,0xa0
  41614e:	add    al,BYTE PTR [edx+0xca302b]
  416154:	add    BYTE PTR [ecx],ah
  416156:	pusha  
  416157:	add    BYTE PTR [eax],ch
  416159:	add    BYTE PTR [ecx+edx*4],0x0
  41615d:	sub    eax,0x4438a900
  416162:	dec    esp
  416163:	popa   
  416164:	add    esp,DWORD PTR [eax]
  416166:	and    DWORD PTR [eax],edx
  416168:	adc    DWORD PTR [edx],esp
  41616a:	add    eax,DWORD PTR [eax]
  41616c:	pusha  
  41616d:	add    BYTE PTR [eax],al
  41616f:	pusha  
  416170:	add    BYTE PTR [eax+0x28],ah
  416173:	inc    edx
  416174:	adc    esp,DWORD PTR ds:0x808200c
  41617a:	rol    DWORD PTR [eax],0x0
  41617d:	add    bl,BYTE PTR [edx]
  41617f:	inc    eax
  416180:	and    DWORD PTR [eax],ecx
  416182:	adc    BYTE PTR [eax],al
  416184:	mov    al,al
  416186:	xor    BYTE PTR [eax],dl
  416188:	add    BYTE PTR [eax],al
  41618a:	inc    edx
  41618b:	inc    eax
  41618c:	ins    BYTE PTR es:[edi],dx
  41618d:	inc    ebp
  41618e:	or     BYTE PTR [eax],al
  416190:	sub    BYTE PTR [edx],al
  416192:	xchg   edx,eax
  416193:	xor    al,BYTE PTR [eax+0x45021004]
  416199:	bound  ebx,QWORD PTR [eax]
  41619b:	or     eax,0xa2408140
  4161a0:	sub    BYTE PTR [eax-0x75fbbdf0],al
  4161a6:	sub    DWORD PTR [eax],eax
  4161a8:	inc    eax
  4161a9:	and    al,BYTE PTR [eax]
  4161ab:	inc    ecx
  4161ac:	add    cl,BYTE PTR [ebx+0xc]
  4161af:	adc    BYTE PTR [edx-0x7d7efd5e],cl
  4161b5:	test   eax,0x10038010
  4161ba:	inc    edx
  4161bb:	mov    al,ds:0x40a0188
  4161c0:	add    BYTE PTR [eax+ecx*1],0x84
  4161c4:	and    BYTE PTR [edx],al
  4161c6:	or     BYTE PTR [ecx+0x8a11060],al
  4161cc:	add    BYTE PTR [eax],al
  4161ce:	xchg   BYTE PTR [edx],al
  4161d0:	or     BYTE PTR [eax+eax*4+0x30],al
  4161d4:	rcl    BYTE PTR [eax],0x0
  4161d7:	add    BYTE PTR [ecx],cl
  4161d9:	and    BYTE PTR [eax],dl
  4161db:	add    BYTE PTR [ebp-0x6f5b800],al
  4161e1:	xor    al,0x80
  4161e3:	and    DWORD PTR [edx+0x4100081],eax
  4161e9:	inc    eax
  4161ea:	xchg   edx,eax
  4161eb:	inc    esp
  4161ec:	add    BYTE PTR [eax],dl
  4161ee:	add    BYTE PTR [edx+0x0],al
  4161f1:	and    BYTE PTR [edx],0xd0
  4161f4:	add    BYTE PTR [eax],ah
  4161f6:	add    eax,0x18000420
  4161fb:	add    BYTE PTR [eax+0x22200],dl
  416201:	add    BYTE PTR [ebp+eax*1+0x43],dl
  416205:	add    BYTE PTR [eax-0x7d],al
  416208:	add    BYTE PTR [eax+0x66],0x1e
  41620c:	add    BYTE PTR [ecx+0x108d001],dl
  416212:	and    BYTE PTR [ebx+0x40],al
  416215:	add    ah,BYTE PTR [eax]
  416217:	add    al,0x5c
  416219:	adc    BYTE PTR [eax],al
  41621b:	add    al,0x2
  41621d:	add    BYTE PTR [eax],al
  41621f:	adc    BYTE PTR [esp+eiz*4],al
  416222:	add    DWORD PTR [ecx+0x21401084],0x4
  416229:	add    BYTE PTR [eax],ah
  41622b:	inc    ecx
  41622c:	add    BYTE PTR [ecx-0x7efe0000],bl
  416232:	and    al,0x40
  416234:	and    cl,BYTE PTR [edx+0x44002106]
  41623a:	mov    BYTE PTR [eax],0x82
  41623d:	add    BYTE PTR [ecx+0x20],al
  416240:	ss pop esp
  416242:	adc    bl,BYTE PTR [eax]
  416244:	add    BYTE PTR [eax],al
  416246:	mov    eax,ds:0x46806a30
  41624b:	add    al,BYTE PTR [edx+0x22]
  41624e:	add    DWORD PTR [ecx],eax
  416250:	add    BYTE PTR [ebx],al
  416252:	add    BYTE PTR [eax],al
  416254:	add    al,0x20
  416256:	add    al,0x65
  416258:	add    BYTE PTR [edx],al
  41625a:	add    BYTE PTR [ebx],ah
  41625c:	loopne 0x41625e
  41625e:	add    cl,BYTE PTR [eax-0x6ea6fb3e]
  416264:	add    BYTE PTR [edx+ecx*8],ah
  416267:	add    al,BYTE PTR [eax]
  416269:	add    al,0x0
  41626b:	add    BYTE PTR [edx-0x38],al
  41626e:	cmp    BYTE PTR [ebx],al
  416270:	leave  
  416271:	mov    al,ds:0x600012
  416276:	push   es
  416277:	add    BYTE PTR [edx+0x10],bl
  41627a:	add    al,0x42
  41627c:	add    BYTE PTR [esi+0x4004],dl
  416282:	add    BYTE PTR [eax-0x7e],al
  416285:	and    BYTE PTR [eax],dl
  416287:	add    al,BYTE PTR [eax-0x76]
  41628a:	adc    BYTE PTR [eax+0x9],al
  41628d:	add    BYTE PTR [eax],0x0
  416290:	ret    0x4750
  416293:	add    DWORD PTR [eax+0x52],eax
  416296:	add    BYTE PTR [eax],al
  416298:	add    DWORD PTR ds:0x48a0180,eax
  41629e:	and    BYTE PTR [edx],0x0
  4162a1:	add    BYTE PTR [ecx+ecx*1+0x42],al
  4162a5:	or     ah,al
  4162a7:	jae    0x4162b1
  4162a9:	add    BYTE PTR [edx],al
  4162ab:	adc    al,BYTE PTR [eax-0x5ff3a70c]
  4162b1:	add    BYTE PTR [eax-0x7ffefef6],al
  4162b7:	inc    ecx
  4162b8:	sub    al,BYTE PTR [ecx]
  4162ba:	je     0x4162bc
  4162bc:	add    al,0x2
  4162be:	sub    BYTE PTR [eax],ch
  4162c0:	add    BYTE PTR [eax],al
  4162c2:	test   DWORD PTR [eax],esi
  4162c4:	mov    BYTE PTR [eax+eiz*1+0x8],al
  4162c8:	add    BYTE PTR [ecx],al
  4162ca:	inc    eax
  4162cb:	and    DWORD PTR [eax-0x3c],0x1042200
  4162d2:	add    DWORD PTR [eax],edx
  4162d4:	sbb    BYTE PTR [eax],dl
  4162d6:	add    al,0x12
  4162d8:	and    BYTE PTR [edx+0x2],dl
  4162db:	adc    BYTE PTR [eax],ah
  4162dd:	adc    BYTE PTR [edx],dl
  4162df:	adc    ah,BYTE PTR [ecx-0x7dbbff1e]
  4162e5:	mov    al,ds:0x60a68098
  4162ea:	repz adc DWORD PTR [ecx],eax
  4162ed:	inc    eax
  4162ee:	add    DWORD PTR [eax+ecx*4+0x42],eax
  4162f2:	add    BYTE PTR [edx],al
  4162f4:	inc    edx
  4162f5:	add    BYTE PTR [eax],ah
  4162f7:	push   es
  4162f8:	add    ah,BYTE PTR [eax]
  4162fa:	add    BYTE PTR [ebp-0x6bafb1f8],al
  416300:	add    al,0x8
  416302:	adc    DWORD PTR [eax+0x60],eax
  416305:	adc    BYTE PTR [ecx+eax*4],al
  416308:	popa   
  416309:	popa   
  41630a:	popa   
  41630b:	inc    ecx
  41630c:	add    BYTE PTR [esi],dl
  41630e:	mov    ds:0x2104210,al
  416313:	add    al,0x0
  416315:	call   0xc321:0x41900008
  41631c:	add    BYTE PTR [eax],cl
  41631e:	lods   eax,DWORD PTR ds:[esi]
  41631f:	lds    eax,FWORD PTR [edx]
  416321:	inc    esp
  416322:	xchg   ebx,eax
  416323:	ret    
  416324:	add    DWORD PTR [esi],ecx
  416326:	add    BYTE PTR [ecx+0x20],dl
  416329:	rcl    BYTE PTR [ebx],0x0
  41632c:	add    BYTE PTR [eax+0x40840140],cl
  416332:	sbb    BYTE PTR [eax],ah
  416334:	add    BYTE PTR [edx],al
  416336:	add    DWORD PTR [eax],eax
  416338:	add    al,0xc1
  41633a:	bound  esp,QWORD PTR [eax+edx*1+0x0]
  41633e:	xchg   al,ah
  416340:	inc    ecx
  416341:	add    BYTE PTR [ebp+0x0],dl
  416344:	add    BYTE PTR [edx],al
  416346:	push   ebp
  416347:	add    al,0x4a
  416349:	add    BYTE PTR [eax],al
  41634b:	add    al,0x0
  41634d:	add    al,0x0
  41634f:	add    DWORD PTR [eax],edx
  416351:	add    BYTE PTR [eax+0x1202210],al
  416357:	or     edx,DWORD PTR [ecx-0x7f]
  41635a:	mov    ds,WORD PTR [edx-0x39]
  41635d:	add    BYTE PTR [eax-0x36],dl
  416360:	and    BYTE PTR [eax+0x4a],al
  416363:	add    BYTE PTR [eax],al
  416365:	add    BYTE PTR [ecx],0xe
  416368:	and    al,0x41
  41636a:	or     BYTE PTR [ecx+0x20],ah
  41636d:	dec    edx
  41636e:	add    BYTE PTR [ecx+0x60],0x90
  416372:	add    BYTE PTR [eax+0x61ea0400],dl
  416378:	inc    eax
  416379:	and    bl,al
  41637b:	inc    esi
  41637c:	add    DWORD PTR [eax],ecx
  41637e:	or     BYTE PTR [eax+0x2a0b4000],al
  416384:	inc    ebp
  416385:	add    BYTE PTR [eax],0x42
  416388:	add    BYTE PTR [edx+ebx*4],dl
  41638b:	mov    ah,0x0
  41638d:	add    ah,BYTE PTR [eax]
  41638f:	and    BYTE PTR [edx],cl
  416391:	mov    al,0x50
  416393:	inc    edi
  416394:	and    BYTE PTR [eax+0x0],0x6
  416398:	add    DWORD PTR ds:0x46000086,eax
  41639e:	or     BYTE PTR [ebx],ah
  4163a0:	push   eax
  4163a1:	leave  
  4163a2:	sbb    al,al
  4163a4:	dec    eax
  4163a5:	add    al,BYTE PTR [eax]
  4163a7:	and    esp,DWORD PTR [edx+0x40004]
  4163ad:	or     al,0x10
  4163af:	rcl    BYTE PTR [eax],0xc8
  4163b2:	or     BYTE PTR [edx+0x8],ah
  4163b5:	push   cs
  4163b6:	add    al,BYTE PTR fs:[eax]
  4163b9:	or     al,0x80
  4163bb:	and    DWORD PTR [eax+0x30490000],eax
  4163c1:	adc    al,0x40
  4163c3:	adc    BYTE PTR [eax],0xc
  4163c6:	add    BYTE PTR [eax+eax*4],cl
  4163c9:	adc    BYTE PTR [eax],al
  4163cb:	and    BYTE PTR ds:0x1044480,al
  4163d1:	mov    BYTE PTR [ecx+0x30208400],dl
  4163d7:	inc    ebp
  4163d8:	xor    al,BYTE PTR [eax]
  4163da:	add    BYTE PTR [eax],dl
  4163dc:	test   DWORD PTR [eax],edx
  4163de:	add    BYTE PTR [eax+0x0],al
  4163e1:	add    BYTE PTR [ecx],0x71
  4163e4:	and    BYTE PTR [eax],al
  4163e6:	add    BYTE PTR [eax],al
  4163e8:	add    BYTE PTR [ecx+0x2e8],ah
  4163ee:	jb     0x41641c
  4163f0:	and    al,BYTE PTR [ebx]
  4163f2:	add    BYTE PTR [eax+0x1a],0x1
  4163f6:	adc    BYTE PTR [edx],bl
  4163f8:	lock dec eax
  4163fa:	enter  0x5b00,0x0
  4163fe:	lea    ebp,[eax]
  416400:	ror    DWORD PTR [edx],1
  416402:	add    BYTE PTR [eax],al
  416404:	cmp    BYTE PTR [eax-0x7ffff5e0],0x18
  41640b:	and    BYTE PTR [ecx+0x4],0x8
  41640f:	and    BYTE PTR [ecx],0x0
  416412:	or     DWORD PTR [edx+0x6000b056],eax
  416418:	add    BYTE PTR [eax],ah
  41641a:	add    BYTE PTR [eax+0x4a],dl
  41641d:	add    BYTE PTR [ecx],dh
  41641f:	add    BYTE PTR [ecx],al
  416421:	inc    eax
  416422:	pusha  
  416423:	add    al,BYTE PTR [edi-0xc]
  416426:	jno    0x41642a
  416428:	and    ecx,DWORD PTR [eax+eax*2]
  41642b:	inc    eax
  41642c:	add    ch,BYTE PTR [eax]
  41642e:	xchg   ecx,eax
  41642f:	ins    BYTE PTR es:[edi],dx
  416430:	or     DWORD PTR [eax+0x38],0x9c51c100
  416437:	add    BYTE PTR [eax+eax*1],ah
  41643a:	add    BYTE PTR [eax],al
  41643c:	add    BYTE PTR [eax-0x6fbebef6],bh
  416442:	add    DWORD PTR [edx],eax
  416444:	add    BYTE PTR [eax+eiz*1+0x40012c00],al
  41644b:	add    ah,BYTE PTR [eax]
  41644d:	and    BYTE PTR [eax],ch
  41644f:	add    BYTE PTR [eax],al
  416451:	add    BYTE PTR [ecx+0x50],0x8
  416455:	adc    BYTE PTR [eax+0x0],al
  416458:	pusha  
  416459:	adc    al,BYTE PTR [ecx+0x2]
  41645c:	adc    BYTE PTR [eax+0x10],al
  41645f:	adc    BYTE PTR [edx+eax*2],0x20
  416463:	add    DWORD PTR [ecx],eax
  416465:	add    BYTE PTR [eax+0x10],al
  416468:	or     BYTE PTR ds:0x94000000,al
  41646e:	add    BYTE PTR [eax],al
  416470:	adc    al,0xa2
  416472:	add    al,0xa8
  416474:	add    BYTE PTR [edx+0x22009044],ah
  41647a:	add    al,0x0
  41647c:	or     BYTE PTR [ecx+eax*1+0x58104a],al
  416483:	add    DWORD PTR [eax+0x110010],esp
  416489:	les    eax,FWORD PTR [eax]
  41648b:	mov    ds:0xc5010000,al
  416490:	add    al,0x20
  416492:	and    BYTE PTR [eax],0x40
  416495:	sub    al,0x4
  416497:	add    al,0x81
  416499:	push   ebp
  41649a:	add    BYTE PTR [eax],al
  41649c:	inc    ecx
  41649d:	add    BYTE PTR [edx-0x7cd33e00],ah
  4164a3:	dec    ecx
  4164a4:	and    BYTE PTR [ecx+0x52],ah
  4164a7:	xor    cl,0xa0
  4164aa:	add    al,BYTE PTR [eax+0x0]
  4164ad:	adc    BYTE PTR [ecx+0x41],al
  4164b0:	test   BYTE PTR [edx],al
  4164b2:	push   esp
  4164b3:	add    BYTE PTR [edx],al
  4164b5:	add    BYTE PTR [eax],cl
  4164b7:	inc    ecx
  4164b8:	and    BYTE PTR [eax+0x3],ah
  4164bb:	test   eax,0x4104d70
  4164c0:	adc    DWORD PTR [edx+0x30a20014],esp
  4164c6:	inc    ecx
  4164c7:	or     ah,BYTE PTR [ecx+0x8]
  4164ca:	add    BYTE PTR [eax+0x2],al
  4164cd:	add    al,0x30
  4164cf:	push   es
  4164d0:	bound  ecx,QWORD PTR [eax]
  4164d2:	add    BYTE PTR [ecx],ah
  4164d4:	or     BYTE PTR ds:0xc080182,dl
  4164da:	add    BYTE PTR [esi],cl
  4164dc:	add    eax,0x800060
  4164e1:	add    BYTE PTR [ecx],al
  4164e3:	adc    BYTE PTR [eax],al
  4164e5:	enter  0x8ca0,0x31
  4164e9:	add    BYTE PTR [ecx],al
  4164eb:	and    BYTE PTR [eax],al
  4164ed:	add    al,0x60
  4164ef:	jno    0x4164b8
  4164f1:	add    BYTE PTR [ebx],al
  4164f3:	add    al,0x33
  4164f5:	jae    0x4164f7
  4164f7:	add    BYTE PTR [ecx],ah
  4164f9:	and    ecx,DWORD PTR [eax]
  4164fb:	xchg   esp,eax
  4164fc:	sub    DWORD PTR [ecx],esp
  4164fe:	test   BYTE PTR [eax],cl
  416500:	and    BYTE PTR [ebx],al
  416502:	add    BYTE PTR [eax+0xc12040],0x0
  416509:	and    BYTE PTR [eax],al
  41650b:	call   0x1838:0xe041010
  416512:	or     DWORD PTR [edx],eax
  416514:	add    DWORD PTR [eax],eax
  416516:	popa   
  416517:	add    ah,BYTE PTR [eax]
  416519:	add    DWORD PTR [edx],0x2401102c
  41651f:	add    DWORD PTR [eax],edx
  416521:	inc    eax
  416522:	mov    ds:0xc7130,eax
  416527:	mov    dl,BYTE PTR [eax+0x5200]
  41652d:	and    ebx,DWORD PTR [eax]
  41652f:	and    al,0xc0
  416531:	pusha  
  416532:	mov    al,0x41
  416534:	test   BYTE PTR [ecx],al
  416536:	mov    ds:0x40219100,al
  41653b:	inc    eax
  41653c:	inc    esp
  41653d:	add    al,0x42
  41653f:	adc    BYTE PTR [eax],al
  416541:	add    eax,0x1909040
  416546:	imul   edx,DWORD PTR [eax],0x8090042
  41654c:	add    BYTE PTR [eax],0xd8
  41654f:	and    al,BYTE PTR [edi+0x0]
  416552:	and    BYTE PTR [ecx],al
  416554:	and    BYTE PTR [ebx-0x7fefdfbd],dl
  41655a:	rol    BYTE PTR [ecx-0x7f],0xc9
  41655e:	add    BYTE PTR [edx],cl
  416560:	xor    esi,DWORD PTR [edx]
  416562:	add    BYTE PTR [eax],cl
  416564:	add    BYTE PTR ds:0x8a9,al
  41656a:	inc    esp
  41656b:	push   ecx
  41656c:	mov    al,ds:0x50400010
  416571:	add    ah,al
  416573:	add    ah,BYTE PTR [eax+0x68414]
  416579:	sub    BYTE PTR [ecx],cl
  41657b:	add    al,0x80
  41657d:	and    edx,ebx
  41657f:	adc    BYTE PTR [ecx+0x4],al
  416582:	rcr    DWORD PTR [ebp-0x7fede7dc],0x2
  416589:	rol    DWORD PTR [eax],cl
  41658b:	add    BYTE PTR [eax+0x41],al
  41658e:	add    BYTE PTR [ebx+0x79],0x22
  416592:	adc    BYTE PTR [eax],0x6
  416595:	dec    esi
  416596:	add    cl,BYTE PTR [eax-0x7e]
  416599:	add    al,0x40
  41659b:	inc    eax
  41659c:	add    BYTE PTR [eax+0x40],al
  41659f:	add    BYTE PTR [eax-0x6bffe880],dl
  4165a5:	and    BYTE PTR [edx],dl
  4165a7:	mov    eax,0x80410141
  4165ac:	cmp    al,al
  4165ae:	add    BYTE PTR [eax],ch
  4165b0:	add    BYTE PTR [eax+0x40],0x40
  4165b4:	or     BYTE PTR [eax+eax*1+0x21],0x0
  4165b9:	add    BYTE PTR es:[eax],cl
  4165bc:	add    BYTE PTR [eax+0x5d],al
  4165bf:	add    BYTE PTR [esi+ecx*1+0x1],ah
  4165c3:	adc    BYTE PTR [eax],al
  4165c5:	add    BYTE PTR [eax+0x42840],al
  4165cb:	add    ch,BYTE PTR [eax]
  4165cd:	add    ah,BYTE PTR [eax+eax*2]
  4165d0:	mov    al,ds:0x1812002a
  4165d5:	push   eax
  4165d6:	add    al,0x68
  4165d8:	inc    edx
  4165d9:	mov    al,ds:0x644009a
  4165de:	and    BYTE PTR [eax+0x1182430],al
  4165e4:	push   es
  4165e5:	adc    BYTE PTR [eax],al
  4165e7:	or     DWORD PTR [ecx+0x14],ecx
  4165ed:	popa   
  4165ee:	add    al,0x20
  4165f0:	push   eax
  4165f1:	mov    WORD PTR [eax],fs
  4165f3:	add    eax,0x50c5a008
  4165f8:	inc    eax
  4165f9:	add    BYTE PTR [eax+0x0],al
  4165fc:	and    BYTE PTR [eax+0xa],ch
  4165ff:	add    BYTE PTR [ebx],al
  416601:	add    DWORD PTR [eax+0x200d80c],eax
  416607:	or     DWORD PTR [ecx+0x100080],esp
  41660d:	add    BYTE PTR [edx+0x7c],al
  416610:	add    DWORD PTR [eax],eax
  416612:	mov    ecx,0x8818c00
  416617:	add    BYTE PTR [eax],cl
  416619:	mov    ds:0x94e26a,al
  41661e:	add    BYTE PTR [eax-0x3f],ch
  416621:	inc    esp
  416622:	add    BYTE PTR [edx],ch
  416624:	add    cl,BYTE PTR [ecx]
  416626:	add    DWORD PTR [eax],eax
  416628:	add    BYTE PTR [eax+0x80141],dh
  41662e:	add    BYTE PTR [esi],ah
  416630:	rol    DWORD PTR [esi],0x0
  416633:	mov    al,ds:0x1814a00
  416638:	or     ah,BYTE PTR [eax+eax*2+0x40c2a042]
  41663f:	sub    DWORD PTR [ecx+0x29c02686],eax
  416645:	and    BYTE PTR [edx+ecx*1],dl
  416648:	test   al,0x34
  41664a:	xchg   edx,eax
  41664b:	adc    al,BYTE PTR [edx]
  41664d:	inc    ecx
  41664e:	dec    eax
  41664f:	add    DWORD PTR [ecx],ebp
  416651:	and    BYTE PTR [edx],ah
  416653:	add    BYTE PTR [eax+0x8e0200],al
  416659:	add    al,BYTE PTR [esi]
  41665b:	or     BYTE PTR [ecx-0x70],al
  41665e:	or     BYTE PTR [ebx+eax*2],al
  416661:	inc    eax
  416662:	add    dl,BYTE PTR [eax]
  416664:	rol    BYTE PTR [eax],0x44
  416667:	or     al,0x4b
  416669:	add    BYTE PTR [edx+0x20],al
  41666c:	add    BYTE PTR [edx],dl
  41666e:	add    al,BYTE PTR [ecx+0x40]
  416671:	push   ebx
  416672:	add    BYTE PTR [edx],al
  416674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416675:	inc    edx
  416676:	add    BYTE PTR [eax],0x99
  416679:	add    BYTE PTR [edx-0x7dfeb834],ch
  41667f:	inc    ebx
  416680:	nop
  416681:	inc    eax
  416682:	and    DWORD PTR [eax-0x3f],ebx
  416685:	or     dl,BYTE PTR [edx+0x10083821]
  41668b:	and    BYTE PTR [esi],al
  41668d:	add    BYTE PTR [ebp+0x0],al
  416690:	add    BYTE PTR [eax],al
  416692:	add    al,0x0
  416694:	add    al,0x0
  416697:	inc    eax
  416698:	add    DWORD PTR [eax],eax
  41669a:	dec    eax
  41669b:	xor    DWORD PTR [eax+0x2000c06a],0x6a1ccc04
  4166a5:	pusha  
  4166a6:	add    BYTE PTR [eax+0x2041185],al
  4166ac:	add    DWORD PTR [eax],0x4
  4166af:	inc    ecx
  4166b0:	add    DWORD PTR [eax+eax*1],esp
  4166b3:	and    al,BYTE PTR [ebx+0x10]
  4166b6:	inc    ecx
  4166b7:	rol    BYTE PTR gs:[esi],0x7a
  4166bb:	test   BYTE PTR [ecx],dl
  4166bd:	add    ah,BYTE PTR [eax+eax*1+0x60]
  4166c1:	add    BYTE PTR [ebx],0x31
  4166c4:	add    eax,DWORD PTR ds:0x20c08412
  4166ca:	add    DWORD PTR [eax+0x10124000],eax
  4166d0:	and    BYTE PTR [eax],al
  4166d2:	adc    al,dl
  4166d4:	add    BYTE PTR [eax],0x21
  4166d7:	add    al,0x4
  4166d9:	mov    al,ds:0x1884e23
  4166de:	and    BYTE PTR [eax],al
  4166e0:	rol    DWORD PTR [eax],0x46
  4166e3:	push   ecx
  4166e4:	inc    ecx
  4166e5:	popa   
  4166e6:	inc    ecx
  4166e7:	(bad)  
  4166e8:	mov    WORD PTR [edx+ecx*1],ds
  4166eb:	and    BYTE PTR [eax+edx*1-0x6f],0x1
  4166f0:	push   esp
  4166f1:	inc    ebp
  4166f2:	or     cl,BYTE PTR [esi]
  4166f4:	shl    BYTE PTR [ecx],0x1
  4166f7:	add    BYTE PTR [ebx+ebx*4],al
  4166fa:	sub    BYTE PTR [eax],al
  4166fc:	add    DWORD PTR [esp+edx*2],ecx
  4166ff:	and    BYTE PTR [eax],0xc1
  416702:	and    BYTE PTR [eax+0x49],0x5
  416706:	and    DWORD PTR [ecx],ebx
  416708:	add    BYTE PTR [eax],0x4
  41670b:	and    BYTE PTR [edx],cl
  41670d:	sub    DWORD PTR [esi],eax
  41670f:	test   eax,0x4100
  416714:	adc    BYTE PTR [eax],al
  416716:	or     eax,0x863c080
  41671b:	adc    BYTE PTR ds:0x84480402,cl
  416721:	add    BYTE PTR [eax+0x103ce0],cl
  416727:	cwde   
  416728:	adc    al,0x48
  41672a:	adc    eax,0x5021a982
  41672f:	and    BYTE PTR [edi-0x7b7dcbff],dl
  416735:	add    BYTE PTR [ecx],al
  416737:	add    al,0x2
  416739:	adc    al,0x10
  41673b:	mov    BYTE PTR [eax],al
  41673d:	mov    eax,ds:0x21041
  416742:	xchg   BYTE PTR [edx-0x80],al
  416745:	add    BYTE PTR [eax+0x4010000],ah
  41674b:	cmp    BYTE PTR [ebx+eax*2],bl
  41674e:	add    BYTE PTR [eax+eax*4],0xa1
  416752:	and    BYTE PTR [eax],0x3
  416755:	mov    eax,ds:0xc8148100
  41675a:	push   0x443a694d
  41675f:	or     BYTE PTR [eax+0x50],al
  416762:	or     BYTE PTR [edx],cl
  416764:	add    cl,BYTE PTR [eax]
  416766:	or     BYTE PTR [edi+0x51],dl
  416769:	add    BYTE PTR [eax],ch
  41676b:	add    BYTE PTR ds:0xc3080288,ah
  416771:	push   es
  416772:	and    al,0xc8
  416774:	mov    al,ds:0x23100031
  416779:	add    DWORD PTR [eax],ecx
  41677b:	add    BYTE PTR [esi+esi*1],cl
  41677e:	add    DWORD PTR [ecx],edx
  416780:	add    ah,BYTE PTR [eax+eax*4]
  416783:	pop    es
  416784:	add    al,BYTE PTR [eax]
  416786:	adc    ecx,DWORD PTR [eax+ecx*1]
  416789:	or     BYTE PTR [ebx-0x78],0x0
  41678d:	and    al,0x0
  41678f:	xor    al,0x0
  416791:	es pop eax
  416793:	nop
  416794:	and    al,0xca
  416796:	pop    edx
  416797:	adc    edx,DWORD PTR [eax]
  416799:	and    BYTE PTR [eax+0x1042140],al
  41679f:	add    al,BYTE PTR [eax+0x2]
  4167a2:	add    BYTE PTR [eax],0x54
  4167a5:	add    BYTE PTR [eax+0x0],al
  4167a8:	add    cl,BYTE PTR [eax+0x64]
  4167ab:	inc    ecx
  4167ac:	int    0x0
  4167ae:	or     BYTE PTR [eax],ch
  4167b0:	dec    edx
  4167b1:	inc    eax
  4167b2:	sub    al,0x1
  4167b4:	add    ah,BYTE PTR [ecx]
  4167b6:	push   eax
  4167b7:	test   BYTE PTR [edx],bl
  4167b9:	add    al,BYTE PTR [eax+0x20]
  4167bc:	add    BYTE PTR [eax],al
  4167be:	inc    ecx
  4167bf:	add    DWORD PTR [eax],eax
  4167c1:	add    DWORD PTR [ecx],esp
  4167c3:	add    al,0x82
  4167c5:	and    al,0x1
  4167c8:	add    BYTE PTR [edx+0x41002080],al
  4167ce:	add    dh,BYTE PTR [esi+0x2801a42]
  4167d4:	add    BYTE PTR [eax],cl
  4167d6:	inc    eax
  4167d7:	or     BYTE PTR [eax],cl
  4167d9:	add    DWORD PTR [eax+0x8182004],ebp
  4167df:	and    dl,BYTE PTR [eax]
  4167e1:	inc    esi
  4167e2:	add    BYTE PTR [ebx],0xc
  4167e5:	mov    al,BYTE PTR [edx]
  4167e7:	add    al,0xb0
  4167e9:	ret    0x608
  4167ec:	and    eax,0x1000805
  4167f1:	or     BYTE PTR [eax],bh
  4167f3:	add    BYTE PTR [ecx],al
  4167f5:	add    BYTE PTR [eax],cl
  4167f7:	inc    ecx
  4167f8:	jb     0x41678b
  4167fa:	or     BYTE PTR [ebp-0x78],al
  4167fd:	add    DWORD PTR [eax],eax
  4167ff:	inc    ecx
  416800:	shl    BYTE PTR [ebx],0x0
  416803:	add    BYTE PTR [eax],0xf
  416806:	add    BYTE PTR [ecx+eax*1+0x24200421],0x8
  41680e:	or     al,0x21
  416810:	inc    ecx
  416811:	adc    BYTE PTR [eax],ah
  416813:	add    al,BYTE PTR [ebp+eax*1+0x10]
  416817:	and    BYTE PTR ds:0x6800020,ah
  41681d:	add    BYTE PTR [edx],dl
  41681f:	nop
  416820:	inc    ecx
  416821:	test   BYTE PTR [ebx-0x7feafb66],bl
  416827:	add    BYTE PTR [eax+edi*1],dl
  41682a:	xor    BYTE PTR [eax+ebx*1],al
  41682d:	inc    esp
  41682e:	push   ecx
  41682f:	inc    edx
  416830:	add    al,0x11
  416832:	mov    ds:0x81c2102,al
  416837:	add    al,0x0
  416839:	xchg   edx,eax
  41683a:	and    al,0x40
  41683c:	add    BYTE PTR [esi],ah
  41683e:	bound  eax,QWORD PTR [eax]
  416840:	add    DWORD PTR [eax],edx
  416842:	add    DWORD PTR [eax-0x73],eax
  416845:	ret    0x8
  416848:	inc    ebp
  416849:	add    DWORD PTR [eax],eax
  41684b:	adc    eax,0x61202c20
  416850:	add    BYTE PTR [eax+0x2d],ch
  416853:	and    DWORD PTR [ecx+0x64],esp
  416856:	and    BYTE PTR [ecx],cl
  416858:	or     BYTE PTR [eax],al
  41685a:	bound  ebx,QWORD PTR [edx]
  41685c:	and    BYTE PTR [eax],al
  41685e:	cmp    al,0x42
  416860:	add    dl,dl
  416862:	mov    dl,0x50
  416864:	xor    BYTE PTR [edi+0x10],0x8
  416868:	add    BYTE PTR [edx+0x12430881],al
  41686e:	add    BYTE PTR [eax+ecx*2],al
  416871:	adc    BYTE PTR [esi],0x0
  416874:	or     BYTE PTR [esi],al
  416876:	add    DWORD PTR [eax],eax
  416878:	nop
  416879:	adc    BYTE PTR [ecx],0x1
  41687c:	fs add eax,0x20863008
  416882:	mov    ds:0x884141,al
  416887:	add    cl,BYTE PTR [eax]
  416889:	add    BYTE PTR [ecx+0x48090041],al
  41688f:	adc    BYTE PTR [eax-0x7c],bh
  416892:	pop    edx
  416893:	jb     0x41689d
  416895:	and    BYTE PTR [ecx+0x41],al
  416898:	and    DWORD PTR [ecx],eax
  41689a:	add    ah,BYTE PTR [eax]
  41689c:	dec    eax
  41689d:	pusha  
  41689e:	or     BYTE PTR [edx],0x18
  4168a1:	or     DWORD PTR [edx],ebx
  4168a3:	mov    BYTE PTR [ecx+eax*2-0x7e],al
  4168a7:	or     ch,BYTE PTR [ecx+0x1]
  4168aa:	imul   ecx,DWORD PTR [eax+eax*1+0x59],0x4008331
  4168b2:	inc    ebx
  4168b3:	pop    ecx
  4168b4:	add    BYTE PTR [eax],cl
  4168b6:	or     ah,ch
  4168b8:	add    DWORD PTR [edx+0x20],eax
  4168bb:	mov    dh,0x4
  4168bd:	inc    ebp
  4168be:	add    BYTE PTR [eax],ch
  4168c0:	adc    BYTE PTR [eax+eax*1],cl
  4168c3:	add    BYTE PTR [eax],cl
  4168c5:	or     BYTE PTR [edi+0x40e20040],0x0
  4168cc:	test   al,0x4
  4168ce:	add    BYTE PTR [ecx-0x12],dh
  4168d1:	inc    eax
  4168d2:	arpl   WORD PTR [ecx+0x1500c002],bp
  4168d8:	and    al,BYTE PTR [eax]
  4168da:	add    BYTE PTR [eax],al
  4168dc:	add    al,BYTE PTR [eax+eax*1]
  4168df:	add    BYTE PTR [edx+0x4],ah
  4168e2:	inc    edx
  4168e3:	inc    ecx
  4168e4:	sbb    dl,dh
  4168e6:	clc    
  4168e7:	mov    eax,ds:0x66811205
  4168ec:	rcr    esp,0x0
  4168ef:	adc    BYTE PTR [eax],0x48
  4168f2:	add    BYTE PTR [eax+0x22d1000],al
  4168f8:	and    eax,0x880001
  4168fd:	xor    al,0x91
  4168ff:	inc    edx
  416900:	outs   dx,DWORD PTR ds:[esi]
  416901:	add    BYTE PTR [edx+0xa],0x70
  416905:	adc    BYTE PTR [ecx-0x59],0x20
  416909:	mov    ch,0x4d
  41690b:	add    BYTE PTR [eax],cl
  41690d:	add    al,0x89
  41690f:	push   esp
  416910:	inc    esp
  416911:	add    cl,BYTE PTR [ecx+eax*8]
  416914:	add    eax,0x3000040
  416919:	nop
  41691a:	add    DWORD PTR [eax],eax
  41691c:	push   ecx
  41691d:	add    dl,BYTE PTR [eax]
  41691f:	pop    eax
  416920:	rcl    BYTE PTR [eax+0x41400418],1
  416926:	or     BYTE PTR [ecx],al
  416928:	add    DWORD PTR [edx+0x12],0x2a080402
  41692f:	adc    BYTE PTR [esi+0x43040402],dl
  416935:	push   es
  416936:	xchg   BYTE PTR [eax],cl
  416938:	add    BYTE PTR [eax],al
  41693a:	adc    cl,BYTE PTR [eax]
  41693c:	push   esp
  41693d:	add    BYTE PTR [eax],al
  41693f:	add    DWORD PTR [ecx+0x20],eax
  416942:	add    al,0x2
  416944:	sbb    al,0x32
  416946:	or     al,0x20
  416949:	add    DWORD PTR [eax],esi
  41694b:	add    ah,BYTE PTR [eax]
  41694d:	and    BYTE PTR [eax-0x3f],bl
  416950:	add    BYTE PTR [edx+0x0],dl
  416953:	ret    
  416954:	inc    eax
  416955:	add    BYTE PTR [eax],ch
  416957:	inc    eax
  416958:	and    DWORD PTR [edx],ecx
  41695a:	add    BYTE PTR [ebx+ecx*2],al
  41695d:	sub    BYTE PTR [eax],al
  41695f:	add    DWORD PTR [edx],eax
  416961:	add    BYTE PTR [edx+0x43434008],dl
  416967:	xor    DWORD PTR [ecx+0x411a04],esp
  41696d:	add    DWORD PTR [edx],0x0
  416973:	add    al,0x11
  416975:	add    BYTE PTR [eax+eax*1+0x20810000],ch
  41697c:	add    BYTE PTR [edx],dl
  41697e:	add    DWORD PTR [edx-0x78],esp
  416981:	add    eax,0x4204006
  416986:	add    BYTE PTR [eax],ah
  416988:	or     al,0x0
  41698a:	les    eax,FWORD PTR [eax]
  41698c:	add    cl,BYTE PTR [eax]
  41698e:	or     BYTE PTR [edx],ah
  416990:	add    BYTE PTR [eax],ah
  416992:	inc    edx
  416993:	inc    ecx
  416994:	ins    BYTE PTR es:[edi],dx
  416995:	mov    al,BYTE PTR [eax]
  416997:	and    al,BYTE PTR [eax]
  416999:	rol    DWORD PTR [eax],0x40
  41699c:	add    BYTE PTR [eax],al
  41699e:	add    BYTE PTR [edx+0x0],dh
  4169a1:	xchg   BYTE PTR [eax+0x20],bh
  4169a4:	add    DWORD PTR [eax+0x8902108],eax
  4169aa:	adc    al,0x2
  4169ac:	sub    BYTE PTR [eax+0x20],al
  4169af:	sub    DWORD PTR [eax],ecx
  4169b1:	test   BYTE PTR [eax],dl
  4169b3:	add    BYTE PTR [eax],bh
  4169b5:	or     al,0x81
  4169b7:	add    BYTE PTR [eax],al
  4169b9:	add    BYTE PTR [eax+eax*2],al
  4169bc:	inc    eax
  4169bd:	add    DWORD PTR [eax],eax
  4169bf:	cdq    
  4169c0:	add    BYTE PTR [eax-0x7affbc00],cl
  4169c6:	add    cl,BYTE PTR [ecx+0x18]
  4169c9:	adc    BYTE PTR [eax],bl
  4169cb:	add    BYTE PTR [eax],al
  4169cd:	add    BYTE PTR [ecx+0x41000142],ch
  4169d3:	and    ah,BYTE PTR [edi+0x2000a162]
  4169d9:	adc    BYTE PTR ds:0x8342208,ch
  4169df:	push   es
  4169e0:	add    cl,BYTE PTR [ecx]
  4169e2:	inc    eax
  4169e3:	add    BYTE PTR [ebx],al
  4169e5:	adc    BYTE PTR [esi+0x24],dh
  4169e8:	and    al,0x0
  4169ea:	add    BYTE PTR [eax],al
  4169ec:	adc    BYTE PTR [eax+edx*4+0x61],0x40
  4169f1:	add    BYTE PTR [eax],cl
  4169f3:	or     BYTE PTR [edx-0x7b],dl
  4169f6:	add    al,BYTE PTR [ecx]
  4169f8:	add    BYTE PTR [eax],al
  4169fa:	add    BYTE PTR [eax],al
  4169fc:	add    DWORD PTR [edx+0x10],eax
  4169ff:	adc    DWORD PTR [eax+0x160301],esp
  416a05:	test   BYTE PTR [eax+ecx*1+0x0],al
  416a09:	add    dl,BYTE PTR [eax+0x7108054]
  416a0f:	add    BYTE PTR [ebp+0x10],al
  416a12:	add    DWORD PTR [ecx-0x775d5fe0],eax
  416a18:	and    cl,BYTE PTR [eax]
  416a1a:	add    BYTE PTR [eax],cl
  416a1c:	or     BYTE PTR [eax+0x2214060],0xd
  416a23:	add    BYTE PTR [eax+0x1900000],dl
  416a29:	ror    BYTE PTR [eax-0x7b],0x73
  416a2d:	and    al,0x3
  416a2f:	or     BYTE PTR [eax],al
  416a31:	mov    BYTE PTR [eax],0x0
  416a34:	ret    0x8100
  416a37:	rol    BYTE PTR [eax],0x80
  416a3a:	add    BYTE PTR [eax+0x554110],cl
  416a40:	adc    BYTE PTR [eax],cl
  416a42:	inc    ecx
  416a43:	add    dl,al
  416a45:	add    BYTE PTR [ebx+0x22022800],al
  416a4b:	mov    al,0x91
  416a4d:	mov    al,0x44
  416a4f:	inc    edx
  416a50:	jmp    0x416a52
  416a52:	add    DWORD PTR [eax],esp
  416a54:	ret    0x5006
  416a57:	sbb    DWORD PTR [eax],ecx
  416a59:	add    DWORD PTR [edx],ebx
  416a5b:	and    BYTE PTR [eax],al
  416a5d:	mov    al,BYTE PTR [eax]
  416a5f:	add    BYTE PTR [eax],0x0
  416a62:	pop    eax
  416a63:	mov    BYTE PTR [ecx-0x3e],dl
  416a66:	pop    eax
  416a67:	add    BYTE PTR [eax],al
  416a69:	add    BYTE PTR [ebx+0x148000],dl
  416a6f:	add    al,BYTE PTR [ebx+eax*2+0x4418200]
  416a76:	dec    eax
  416a77:	xchg   edx,eax
  416a78:	add    BYTE PTR [eax],al
  416a7a:	add    ah,BYTE PTR [ecx]
  416a7c:	inc    eax
  416a7d:	inc    ecx
  416a7e:	pushf  
  416a7f:	add    al,0x0
  416a81:	add    dh,BYTE PTR [edx]
  416a83:	or     DWORD PTR [ebx-0x80],eax
  416a86:	inc    eax
  416a87:	or     BYTE PTR [edx+esi*2],cl
  416a8a:	adc    ah,BYTE PTR [edx]
  416a8c:	or     BYTE PTR [eax],al
  416a8e:	add    BYTE PTR [ecx+0x2],0x89
  416a92:	add    ecx,DWORD PTR [eax+0x22092200]
  416a98:	and    al,0x12
  416a9a:	add    BYTE PTR [eax],al
  416a9c:	inc    esp
  416a9d:	add    al,ch
  416a9f:	add    BYTE PTR [edx],al
  416aa1:	push   es
  416aa2:	add    BYTE PTR [eax],al
  416aa4:	inc    ebp
  416aa5:	adc    BYTE PTR [ecx],0x28
  416aa8:	adc    eax,DWORD PTR [eax+0x0]
  416aab:	push   esi
  416aac:	add    BYTE PTR [ecx+0x2],al
  416aaf:	add    ah,BYTE PTR [eax+eiz*1]
  416ab2:	mov    eax,ds:0x31070a
  416ab7:	add    BYTE PTR [edx+0x0],al
  416aba:	add    ebx,DWORD PTR [edx+0x400000a1]
  416ac0:	add    BYTE PTR [eax+eax*1],0x0
  416ac4:	inc    ebp
  416ac5:	and    ah,BYTE PTR [eax-0x773ebfa8]
  416acb:	add    eax,0xc044
  416ad0:	add    BYTE PTR [eax+eax*2],cl
  416ad3:	add    DWORD PTR [eax],eax
  416ad5:	push   es
  416ad6:	push   eax
  416ad7:	add    BYTE PTR [eax],al
  416ad9:	or     BYTE PTR [eax],bl
  416adb:	adc    BYTE PTR [eax],cl
  416add:	or     al,dl
  416adf:	inc    ecx
  416ae0:	add    DWORD PTR [edx],0x24011200
  416ae6:	adc    al,0x0
  416ae8:	sub    eax,0xa1ba2401
  416aed:	inc    edx
  416aee:	adc    BYTE PTR [ecx+0x0],al
  416af1:	add    ah,BYTE PTR [eax]
  416af3:	dec    edx
  416af4:	call   0x4:0x24e000e4
  416afb:	mov    edx,?
  416afd:	add    DWORD PTR [edx],0x40000f00
  416b03:	or     ch,BYTE PTR [ebx-0x7ffec000]
  416b09:	or     BYTE PTR [eax],ch
  416b0b:	nop
  416b0c:	add    BYTE PTR [eax],cl
  416b0e:	add    DWORD PTR [edx],eax
  416b10:	or     BYTE PTR [ecx+0x24d8220],ch
  416b16:	push   edx
  416b17:	add    BYTE PTR [edx],al
  416b19:	in     al,0x0
  416b1b:	or     BYTE PTR [eax-0x22],ah
  416b1e:	adc    BYTE PTR [ecx+0x5283],0x35
  416b25:	adc    DWORD PTR [edx+0x41108b22],eax
  416b2b:	add    BYTE PTR [eax+0x2],0x2
  416b2f:	add    al,BYTE PTR [edx]
  416b31:	mov    al,ds:0x486400
  416b36:	add    BYTE PTR [ecx],al
  416b38:	inc    edx
  416b39:	mov    ds:0x22080088,al
  416b3e:	and    dl,BYTE PTR [eax]
  416b40:	add    DWORD PTR [esi+0xa],eax
  416b43:	inc    ecx
  416b44:	add    BYTE PTR [esi],dh
  416b46:	and    BYTE PTR [eax],0x8b
  416b49:	test   al,0xa
  416b4b:	pushf  
  416b4c:	xor    eax,0x28081008
  416b51:	push   es
  416b52:	or     BYTE PTR [eax],ah
  416b54:	add    ah,BYTE PTR [ebx]
  416b56:	popa   
  416b57:	add    bl,bl
  416b59:	add    BYTE PTR [eax],al
  416b5b:	add    BYTE PTR [ecx],dl
  416b5d:	push   ecx
  416b5e:	add    BYTE PTR [eax+eiz*1+0x410000a2],dl
  416b65:	push   cs
  416b66:	inc    eax
  416b67:	and    BYTE PTR [eax+0xe00021],cl
  416b6d:	add    BYTE PTR ds:0x20054508,ah
  416b73:	adc    al,0x5a
  416b75:	adc    BYTE PTR [ecx+ecx*1],al
  416b78:	leave  
  416b79:	sub    dl,BYTE PTR [ebx]
  416b7b:	add    BYTE PTR [eax],al
  416b7d:	add    BYTE PTR [eax+eiz*1],dl
  416b80:	int    0x0
  416b82:	add    al,0x84
  416b84:	and    al,0x7
  416b87:	or     al,BYTE PTR [esi]
  416b89:	and    al,BYTE PTR [ecx]
  416b8b:	and    BYTE PTR [eax],al
  416b8d:	or     al,BYTE PTR [eax]
  416b8f:	and    BYTE PTR [eax],ah
  416b91:	add    BYTE PTR [edx],al
  416b93:	add    BYTE PTR [eax],cl
  416b95:	add    BYTE PTR [eax],al
  416b97:	or     BYTE PTR [eax-0x75f5f000],cl
  416b9d:	add    ch,BYTE PTR [edx+0x8]
  416ba0:	xchg   esi,eax
  416ba1:	add    al,dl
  416ba3:	and    dl,BYTE PTR [eax]
  416ba5:	add    BYTE PTR [eax],bh
  416ba7:	pusha  
  416ba8:	or     dl,BYTE PTR [eax]
  416baa:	or     BYTE PTR [eax],al
  416bac:	add    BYTE PTR [edx+edx*1-0x6f],al
  416bb0:	into   
  416bb1:	add    al,BYTE PTR [eax]
  416bb3:	push   ecx
  416bb4:	inc    esp
  416bb5:	add    DWORD PTR [eax],0x70025041
  416bbb:	add    eax,0x1000a4
  416bc0:	pusha  
  416bc1:	add    BYTE PTR [edx+eax*1],al
  416bc4:	adc    BYTE PTR [eax+0x43],ah
  416bc7:	or     al,0x80
  416bc9:	or     BYTE PTR [eax],al
  416bcb:	or     BYTE PTR [eax],al
  416bcd:	add    BYTE PTR [ecx+0x45],dh
  416bd0:	mov    eax,ds:0xc7908028
  416bd5:	add    ah,BYTE PTR [eax-0x80]
  416bd8:	or     BYTE PTR [ebx],al
  416bda:	inc    ebx
  416bdb:	add    cl,al
  416bdd:	and    BYTE PTR [eax],al
  416bdf:	rol    BYTE PTR [eax],0x0
  416be2:	or     BYTE PTR [eax],ah
  416be4:	and    BYTE PTR cs:[ebx+eax*4+0x1042047],cl
  416bec:	add    BYTE PTR [ebx+eax*2],al
  416bef:	adc    BYTE PTR [ecx+eax*1+0x3],dl
  416bf3:	dec    ebp
  416bf4:	add    al,0x44
  416bf6:	add    al,BYTE PTR [ebx+0x10228259]
  416bfc:	mov    al,ds:0x480000
  416c01:	mov    BYTE PTR [eax],al
  416c03:	inc    eax
  416c04:	or     BYTE PTR [esp+eax*4],al
  416c07:	and    ch,BYTE PTR [eax+0x8604231]
  416c0d:	inc    ecx
  416c0e:	dec    edx
  416c0f:	add    BYTE PTR [edx],0x8c
  416c12:	add    BYTE PTR [ecx+0x0],al
  416c15:	and    eax,DWORD PTR [eax+0x20022]
  416c1b:	add    DWORD PTR [edx+0x880008c],ebp
  416c21:	inc    ecx
  416c22:	xchg   ecx,eax
  416c23:	add    BYTE PTR [ecx-0x7f],al
  416c26:	inc    edx
  416c27:	dec    ebp
  416c28:	add    BYTE PTR [ecx+eax*2],al
  416c2b:	adc    BYTE PTR [eax+0x20],al
  416c2e:	inc    ecx
  416c2f:	push   es
  416c30:	sub    BYTE PTR [ecx+0x2114600],0x22
  416c37:	add    BYTE PTR [esi+0x110000],al
  416c3d:	add    eax,0x90801008
  416c42:	and    DWORD PTR ds:0x1280889,0x84012022
  416c4c:	add    BYTE PTR [eax],al
  416c4e:	mov    eax,ds:0x1262000
  416c53:	or     esi,DWORD PTR [edx]
  416c55:	and    BYTE PTR [edx],dl
  416c57:	add    BYTE PTR [eax],ah
  416c59:	mov    al,ds:0x694bd050
  416c5e:	mov    eax,ds:0x2b080094
  416c63:	inc    eax
  416c64:	jp     0x416c88
  416c66:	adc    DWORD PTR [ecx],eax
  416c68:	or     al,0x24
  416c6a:	add    BYTE PTR [eax],0x2
  416c6d:	add    BYTE PTR [edx],0x40
  416c70:	add    BYTE PTR [eax],al
  416c72:	inc    esp
  416c73:	add    BYTE PTR [ebx+0x41704100],al
  416c79:	add    al,0x1
  416c7b:	ret    
  416c7c:	sbb    BYTE PTR [eax],al
  416c7e:	add    al,BYTE PTR [eax]
  416c80:	add    BYTE PTR [eax],ah
  416c82:	add    BYTE PTR [eax],ah
  416c84:	add    BYTE PTR [edx],ch
  416c86:	add    BYTE PTR [eax],cl
  416c88:	inc    ebx
  416c89:	add    ah,BYTE PTR [edx]
  416c8b:	adc    al,BYTE PTR [eax]
  416c8d:	add    BYTE PTR [eax],al
  416c8f:	adc    cl,BYTE PTR [edx]
  416c91:	test   al,0x21
  416c93:	add    BYTE PTR [eax+0x40040510],dl
  416c99:	add    dl,BYTE PTR [ecx]
  416c9b:	inc    ebx
  416c9c:	inc    ebx
  416c9d:	lods   eax,DWORD PTR ds:[esi]
  416c9e:	and    BYTE PTR [ebx+0x0],dl
  416ca1:	and    BYTE PTR [ecx],al
  416ca3:	inc    edx
  416ca4:	add    BYTE PTR [eax],al
  416ca6:	add    BYTE PTR [edx+0x4816417],al
  416cac:	pushf  
  416cad:	add    BYTE PTR [eax],al
  416caf:	add    DWORD PTR ds:0xc40c1600,eax
  416cb5:	dec    eax
  416cb6:	and    dl,BYTE PTR [edx]
  416cb8:	inc    esp
  416cb9:	adc    DWORD PTR [eax+0x0],0x15001049
  416cc0:	fild   DWORD PTR [ecx]
  416cc2:	add    BYTE PTR [eax+0x4],dl
  416cc5:	add    BYTE PTR [eax],ah
  416cc7:	inc    eax
  416cc8:	add    BYTE PTR [ecx+0x24440601],0x48
  416ccf:	inc    eax
  416cd0:	add    BYTE PTR [ebp+0x10100498],ah
  416cd6:	and    BYTE PTR [eax],dl
  416cd8:	enter  0xc129,0x0
  416cdc:	add    BYTE PTR [ecx],al
  416cde:	inc    ecx
  416cdf:	in     al,0x10
  416ce1:	inc    ecx
  416ce2:	xor    al,0x0
  416ce4:	add    BYTE PTR [eax],0x68
  416ce7:	add    cl,BYTE PTR [edx+0x0]
  416cea:	and    DWORD PTR [ecx],esp
  416cec:	xor    BYTE PTR [eax],al
  416cee:	add    DWORD PTR [eax],edx
  416cf0:	xor    DWORD PTR [ecx],0x4820004
  416cf6:	inc    ebp
  416cf7:	inc    eax
  416cf8:	adc    al,0x2
  416cfa:	add    BYTE PTR [ecx+0x0],cl
  416cfd:	or     DWORD PTR [eax+0x12300620],eax
  416d03:	add    BYTE PTR [eax+eax*2-0xe9dbfee],ah
  416d0a:	mov    al,BYTE PTR [eax]
  416d0c:	adc    BYTE PTR [eax-0x1dfdffd7],al
  416d12:	add    BYTE PTR [eax],al
  416d14:	inc    ecx
  416d15:	rol    BYTE PTR [eax],0x22
  416d18:	add    BYTE PTR [eax],0x8
  416d1b:	adc    BYTE PTR [eax],bl
  416d1d:	inc    esp
  416d1e:	and    BYTE PTR [esp+eax*2],0x20
  416d22:	imul   esi,DWORD PTR [edx],0x241c52
  416d28:	or     BYTE PTR [eax],al
  416d2a:	add    BYTE PTR [eax],al
  416d2c:	add    al,BYTE PTR [eax]
  416d2e:	add    BYTE PTR [ecx+0x904047],0x0
  416d35:	add    BYTE PTR [eax],dl
  416d37:	add    BYTE PTR [edi],bl
  416d39:	add    DWORD PTR [eax],edx
  416d3b:	add    BYTE PTR [eax],ah
  416d3d:	add    al,BYTE PTR [eax]
  416d3f:	add    BYTE PTR [eax],0x80
  416d42:	add    BYTE PTR [ebx],al
  416d44:	or     BYTE PTR [eax],ch
  416d46:	add    BYTE PTR [eax],0x22
  416d49:	add    al,0x51
  416d4b:	add    BYTE PTR [eax],al
  416d4d:	and    BYTE PTR [eax+0x1020a],cl
  416d53:	mov    BYTE PTR [eax],al
  416d55:	add    BYTE PTR [eax+0x848010],0x1
  416d5c:	add    BYTE PTR [eax],al
  416d5e:	add    DWORD PTR [eax+0x42],0x4100001d
  416d65:	and    al,0x88
  416d67:	inc    ebx
  416d68:	add    al,BYTE PTR [ecx+eax*4-0x2d77f6f0]
  416d6f:	and    DWORD PTR [eax],ecx
  416d71:	add    BYTE PTR [ecx-0x7f],cl
  416d74:	inc    edi
  416d75:	lock cmp eax,0x4208080c
  416d7b:	cmp    BYTE PTR [esi+0x53c02041],dh
  416d81:	and    BYTE PTR [eax+0x408884],cl
  416d87:	or     BYTE PTR [eax],al
  416d89:	and    al,BYTE PTR [eax+eiz*1]
  416d8c:	add    BYTE PTR [eax],al
  416d8e:	add    BYTE PTR [edx],dl
  416d90:	add    al,BYTE PTR [eax]
  416d92:	mov    al,ds:0x9020d306
  416d97:	ds nop
  416d99:	add    dl,BYTE PTR [eax]
  416d9b:	dec    ecx
  416d9c:	mov    BYTE PTR [eax+0x20000040],ah
  416da2:	rol    DWORD PTR [ebx],0x10
  416da5:	add    BYTE PTR [eax],cl
  416da7:	and    eax,0x6400c0a0
  416dac:	adc    BYTE PTR [eax+0x0],dl
  416daf:	add    BYTE PTR [edx+edi*8-0x23],dl
  416db3:	mov    edx,DWORD PTR ds:0x97a748d0
  416db9:	(bad)  
  416dba:	test   DWORD PTR [eax-0xda10253],0x6d0562e2
  416dc4:	push   ebx
  416dc5:	pop    ebp
  416dc6:	push   edi
  416dc7:	xchg   edx,eax
  416dc8:	mov    DWORD PTR [ebp+0x7f03632f],ecx
  416dce:	fstp   TBYTE PTR [esi]
  416dd0:	jmp    0xf7826082
  416dd5:	jge    0x416db8
  416dd7:	dec    edx
  416dd8:	stc    
  416dd9:	jle    0x416db1
  416ddb:	push   ebx
  416ddc:	mov    ch,bh
  416dde:	xchg   ebp,eax
  416ddf:	stos   DWORD PTR es:[edi],eax
  416de0:	mov    cl,BYTE PTR [esi]
  416de2:	mov    ds:0x78d53e5,al
  416de7:	stos   DWORD PTR es:[edi],eax
  416de8:	mov    ch,BYTE PTR [edi+ecx*1+0x55]
  416dec:	nop
  416ded:	lea    ebp,[edi]
  416def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416df0:	mov    dh,BYTE PTR [esi-0x34]
  416df3:	push   ebx
  416df4:	hlt    
  416df5:	push   0xb3b894d3
  416dfa:	retf   
  416dfb:	inc    ecx
  416dfc:	test   BYTE PTR [ebp+0x71ee59d5],0xd3
  416e03:	jg     0x416df3
  416e05:	jno    0x416dda
  416e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e08:	fist   WORD PTR [esi]
  416e0a:	push   ebx
  416e0b:	inc    esi
  416e0c:	mov    ecx,0x927bb9cd
  416e11:	push   ss
  416e12:	hlt    
  416e13:	mov    eax,ds:0x9bdbd5c1
  416e18:	adc    DWORD PTR [edi],eax
  416e1a:	xchg   ebp,eax
  416e1b:	pop    ebx
  416e1c:	xchg   DWORD PTR [edx-0x46],edx
  416e1f:	loope  0x416dd2
  416e21:	xlat   BYTE PTR ds:[ebx]
  416e22:	pop    ebp
  416e23:	idiv   BYTE PTR [eax-0x6deb0e71]
  416e29:	fcom   QWORD PTR [esi+0x55]
  416e2c:	(bad)  
  416e2d:	mov    eax,0xf042250f
  416e32:	fs (bad) 
  416e35:	(bad)  
  416e36:	push   eax
  416e37:	ret    0xdd7d
  416e3a:	mov    bh,0x6a
  416e3c:	scas   al,BYTE PTR es:[edi]
  416e3d:	mov    eax,ds:0x9548ded0
  416e42:	das    
  416e43:	jnp    0x416e56
  416e45:	icebp  
  416e46:	scas   eax,DWORD PTR es:[edi]
  416e47:	jmp    0xcaea:0xd1660382
  416e4e:	stos   DWORD PTR es:[edi],eax
  416e4f:	into   
  416e50:	test   BYTE PTR [edx],al
  416e52:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e54:	mov    cl,BYTE PTR [ebp-0x69f8dad1]
  416e5a:	das    
  416e5b:	mov    eax,ds:0xa62f2a0e
  416e60:	mov    dl,BYTE PTR [esi]
  416e62:	fcomp  QWORD PTR [ebp-0x2ed0bfe9]
  416e68:	test   DWORD PTR [edx],eax
  416e6a:	test   al,0xa6
  416e6c:	mov    ecx,DWORD PTR [ebp+0x4cc6022f]
  416e72:	loope  0x416e1b
  416e74:	(bad)  
  416e75:	fisub  WORD PTR [bp+di-0x124a]
  416e7a:	cwde   
  416e7b:	pushf  
  416e7c:	dec    edx
  416e7d:	jns    0x416eb7
  416e7f:	pop    edi
  416e80:	xchg   ebp,eax
  416e81:	or     DWORD PTR [ecx+0x5a8d8aa6],esi
  416e87:	leave  
  416e88:	pop    ss
  416e89:	cmp    BYTE PTR [edi],ch
  416e8b:	rol    DWORD PTR [ebp+0x9d01a02],1
  416e91:	add    dh,BYTE PTR [eax]
  416e93:	pop    eax
  416e94:	stc    
  416e95:	ja     0x416ec6
  416e97:	js     0x416f0b
  416e99:	jbe    0x416f01
  416e9b:	rol    DWORD PTR [ebp-0x7b2d53ec],1
  416ea1:	add    ah,BYTE PTR [esi+0x4a]
  416ea4:	adc    DWORD PTR [eax-0x727559e1],ebx
  416eaa:	mov    edx,0x1169674
  416eaf:	mov    ds:0xa859e711,al
  416eb4:	adc    DWORD PTR [edi+0x53fef52a],ebx
  416eba:	mov    edx,0xa410ba54
  416ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ec0:	test   DWORD PTR [edx],eax
  416ec2:	jp     0x9e53
  416ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ec8:	xchg   ecx,eax
  416ec9:	sti    
  416eca:	fidivr DWORD PTR [ebp+0x672330ec]
  416ed0:	clc    
  416ed1:	mov    esp,DWORD PTR [ebx]
  416ed3:	ins    BYTE PTR es:[edi],dx
  416ed4:	std    
  416ed5:	(bad)  
  416ed6:	adc    eax,esi
  416ed8:	xor    BYTE PTR [edi+0x548f5a6f],dl
  416ede:	(bad)  
  416ee0:	jno    0x416ed9
  416ee2:	mov    bl,0x1b
  416ee4:	mov    al,BYTE PTR [edx]
  416ee6:	shl    WORD PTR [ecx-0x742e4dfd],1
  416eed:	jnp    0x416f5b
  416eef:	cmp    al,0x8a
  416ef1:	pop    ebx
  416ef2:	push   edi
  416ef3:	mov    bh,0x85
  416ef5:	add    ah,BYTE PTR [esi-0x73]
  416ef8:	smsw   WORD PTR [ebp-0x2f]
  416efc:	test   DWORD PTR [eax-0x64],edi
  416eff:	sbb    eax,0x2bb8a5c8
  416f04:	add    BYTE PTR [ebx],0x66
  416f07:	shr    ebx,1
  416f09:	push   ss
  416f0a:	lods   al,BYTE PTR ds:[esi]
  416f0b:	into   
  416f0c:	test   BYTE PTR [edx],al
  416f0e:	data16 fisttp WORD PTR [eax-0x77]
  416f12:	das    
  416f13:	jnp    0x416f26
  416f15:	icebp  
  416f16:	and    esi,esp
  416f18:	jmp    0xba57:0xfe9decc4
  416f1f:	jae    0x416eb3
  416f21:	mov    cs,WORD PTR [edx]
  416f23:	xchg   edx,eax
  416f24:	adc    DWORD PTR [esi-0x19],esp
  416f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f28:	out    0x95,eax
  416f2a:	mov    edx,0xdc8eaa55
  416f2f:	popf   
  416f30:	mov    ecx,0xa27529df
  416f35:	jle    0x416f57
  416f37:	add    ecx,DWORD PTR [ecx-0x75c3c8b8]
  416f3d:	pop    ebp
  416f3e:	push   edi
  416f3f:	jmp    0x416ec5
  416f41:	add    ah,BYTE PTR [esi-0x71]
  416f44:	iret   
  416f45:	xchg   ecx,eax
  416f46:	(bad)  [eax+ecx*8+0x68f74df6]
  416f4d:	mov    es,WORD PTR [edx]
  416f4f:	mov    cl,BYTE PTR [ecx+0x3da13758]
  416f55:	(bad)  
  416f56:	jo     0x416f1e
  416f58:	mov    BYTE PTR [esi+0x4889b1f2],cl
  416f5e:	aaa    
  416f5f:	sbb    eax,0x9dec8e8a
  416f64:	adc    ecx,DWORD PTR [ecx+0xb]
  416f67:	mov    dl,0xeb
  416f69:	aam    0x70
  416f6b:	sahf   
  416f6c:	mov    bl,BYTE PTR [eax-0x46]
  416f6f:	ret    0x7885
  416f72:	xor    edx,ecx
  416f74:	call   DWORD PTR [ebp+0x2852e57]
  416f7a:	data16 fisttp WORD PTR ds:0xce290b89
  416f81:	test   eax,0x8d8ee437
  416f86:	cld    
  416f87:	sbb    al,0x76
  416f89:	push   cs
  416f8a:	imul   eax,edx,0xffffffea
  416f8d:	cmc    
  416f8e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416f90:	mov    cl,BYTE PTR [ebp+0x1fae82b0]
  416f96:	inc    edx
  416f97:	data16 mov ah,BYTE PTR [esi-0x4c]
  416f9b:	and    eax,0xa5ef9c84
  416fa0:	(bad)  
  416fa2:	ret    
  416fa3:	rol    BYTE PTR [ebp-0x799447fe],1
  416fa9:	jne    0x417029
  416fab:	push   esi
  416fac:	cs mov edx,0xf5865b66
  416fb2:	add    edx,ecx
  416fb4:	test   DWORD PTR [edx],eax
  416fb6:	mov    eax,0xf975826b
  416fbb:	ss sbb eax,0x865b65fa
  416fc1:	cmc    
  416fc2:	repz rol BYTE PTR [ebp+0x7e6bb802],1
  416fc9:	push   ss
  416fca:	in     al,dx
  416fcb:	ror    DWORD PTR [ecx+0x3da1234d],1
  416fd1:	pop    ebp
  416fd2:	cmp    esp,DWORD PTR [ebx]
  416fd4:	into   
  416fd5:	pop    DWORD PTR [edi+0x1d]
  416fd8:	ficom  DWORD PTR [ecx+0x14867b32]
  416fde:	cld    
  416fdf:	aad    0x89
  416fe1:	pop    ebp
  416fe2:	aas    
  416fe3:	pop    ds
  416fe4:	fcomip st,st(1)
  416fe6:	mov    ecx,0xdc167653
  416feb:	aad    0xc1
  416fed:	cli    
  416fee:	fimul  DWORD PTR [edx+0x36]
  416ff1:	rcl    DWORD PTR [edi+0x5b],0x7d
  416ff5:	push   ss
  416ff6:	sub    eax,0x2bbdce23
  416ffb:	(bad)  
  416ffc:	iret   
  416ffd:	add    eax,0xad43c1dc
  417002:	das    
  417003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417004:	mov    dl,BYTE PTR [eax]
  417006:	std    
  417007:	rcl    al,cl
  417009:	imul   esi,DWORD PTR [eax-0x246b0f74],0xffffffa9
  417010:	push   0xd0ee59fb
  417015:	or     eax,0xa5ffbe29
  41701a:	mov    edx,0xf3108b5c
  41701f:	mov    dh,0x8f
  417021:	(bad)  
  417022:	hlt    
  417023:	aad    0xf8
  417025:	xchg   ecx,eax
  417026:	sub    ah,BYTE PTR [ebx+0x76]
  417029:	jle    0x417059
  41702b:	(bad)  
  41702c:	xlat   BYTE PTR ds:[ebx]
  41702d:	stc    
  41702e:	fisub  DWORD PTR [ebx-0x734fb88f]
  417034:	sbb    bl,BYTE PTR ds:0x9bfe36bf
  41703a:	mov    edx,0x5efdafa4
  41703f:	(bad)  
  417040:	jp     0x417002
  417042:	push   DWORD PTR [ebp-0x26]
  417045:	pop    ebp
  417046:	fsub   QWORD PTR [edi-0x429a78f6]
  41704c:	dec    BYTE PTR [eax-0x30f615a6]
  417052:	sub    dl,cl
  417054:	pop    eax
  417055:	ins    BYTE PTR es:[edi],dx
  417056:	js     0x41703c
  417058:	mov    cs,WORD PTR [ebp+0x6d761cfc]
  41705e:	mov    edx,0xe416965b
  417063:	popf   
  417064:	xchg   BYTE PTR [edi],bh
  417066:	scas   eax,DWORD PTR es:[edi]
  417067:	xchg   ebp,eax
  417068:	popa   
  417069:	sub    DWORD PTR [edx+0x2f7072a4],esp
  41706f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417070:	mov    bh,BYTE PTR [esi+0x5d]
  417073:	xchg   ebp,eax
  417074:	push   ebx
  417075:	cmc    
  417076:	retf   0x8aa5
  417079:	(bad)  
  41707a:	loop   0x41702d
  41707c:	mov    ecx,0x8a6d56cd
  417081:	lea    ebp,[edi]
  417083:	push   ebp
  417084:	test   eax,0x3a67313e
  417089:	popf   
  41708a:	push   edi
  41708b:	popa   
  41708c:	mov    cl,BYTE PTR [ebp+0x7e4ab42f]
  417092:	pop    esi
  417093:	pop    ebx
  417094:	lds    esi,FWORD PTR [edi]
  417096:	pop    edx
  417097:	cli    
  417098:	jb     0x4170ea
  41709a:	das    
  41709b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709c:	mov    dh,BYTE PTR [esi-0xa65a486]
  4170a2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a4:	mov    cl,BYTE PTR [ebp-0x23c981a6]
  4170aa:	push   esi
  4170ab:	pop    edx
  4170ac:	xlat   BYTE PTR ds:[ebx]
  4170ad:	sahf   
  4170ae:	js     0x41706d
  4170b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170b1:	sbb    al,0xf7
  4170b3:	out    0x6a,al
  4170b5:	xchg   ebp,eax
  4170b6:	xchg   ebx,eax
  4170b7:	mov    esi,0xa62f8db6
  4170bc:	(bad)  
  4170bd:	(bad)  
  4170be:	in     al,0xa5
  4170c0:	mov    bh,BYTE PTR [esi+0x39]
  4170c3:	xchg   BYTE PTR es:[eax+0x509a7e2],cl
  4170ca:	out    0x58,al
  4170cc:	mov    BYTE PTR [eax+esi*8+0x3a],cl
  4170d0:	adc    eax,ecx
  4170d2:	mov    eax,ds:0x5e16dca7
  4170d7:	jge    0x417153
  4170d9:	dec    BYTE PTR [edx+0x31137170]
  4170df:	hlt    
  4170e0:	dec    DWORD PTR [eax-0x60334747]
  4170e6:	and    ebp,0xbdefd4b9
  4170ec:	je     0x4170f0
  4170ee:	rcr    WORD PTR [ecx-0x7a36a92c],1
  4170f5:	add    ah,BYTE PTR [esi+0x54]
  4170f8:	js     0x4170c8
  4170fa:	sbb    DWORD PTR [edx-0x52],edx
  4170fd:	mov    ch,0xb8
  4170ff:	push   edx
  417100:	scas   al,BYTE PTR es:[edi]
  417101:	mov    eax,ds:0x9548ded0
  417106:	das    
  417107:	jnp    0x41711a
  417109:	icebp  
  41710a:	mov    cl,0xea
  41710c:	jp     0x41717b
  41710e:	mov    edx,0x2fa8926b
  417113:	(bad)  
  417114:	test   DWORD PTR [edx],eax
  417116:	int    0x26
  417118:	ret    0x950
  41711b:	pop    ebx
  41711c:	cdq    
  41711d:	push   ss
  41711e:	call   DWORD PTR [ecx-0x49d0f8f5]
  417124:	mov    cl,BYTE PTR [ebp+0xcec9de2]
  41712a:	and    esp,DWORD PTR [edx+ebx*8-0x485724b8]
  417131:	lea    edi,[edi]
  417133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417134:	mov    dh,dh
  417136:	test   DWORD PTR [edi],ebx
  417138:	iret   
  417139:	xchg   ebp,eax
  41713a:	push   edi
  41713b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41713c:	mov    cl,BYTE PTR [ebp-0x5649d8d1]
  417142:	es mov ebx,0x230a8dca
  417148:	or     esp,edi
  41714a:	aas    
  41714b:	data16 mov bl,BYTE PTR [ebp+0x57]
  41714f:	(bad)  
  417150:	xchg   BYTE PTR [edx],al
  417152:	popw   ds
  417154:	iret   
  417155:	std    
  417156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417157:	jle    0x4170e5
  417159:	lea    ebp,[edi]
  41715b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715c:	adc    eax,esp
  41715e:	aas    
  41715f:	data16 mov dl,BYTE PTR [esp+esi*8]
  417163:	int    0xf0
  417165:	dec    ebp
  417166:	xlat   BYTE PTR ds:[ebx]
  417167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417168:	mov    edx,0xf0772f8d
  41716d:	(bad)  
  41716e:	xlat   BYTE PTR ds:[ebx]
  41716f:	pop    ebx
  417170:	xchg   edi,eax
  417171:	shl    DWORD PTR [edi],cl
  417173:	sar    edi,1
  417175:	std    
  417176:	push   esi
  417177:	aam    0x87
  417179:	add    ah,BYTE PTR [esi+0x1f]
  41717c:	iret   
  41717d:	add    DWORD PTR [ebp+edx*1-0x5a1063b6],esi
  417184:	adc    DWORD PTR [eax+0x5d71d63],eax
  41718a:	xor    dh,cl
  41718c:	mov    cl,0xe3
  41718e:	popa   
  41718f:	or     dl,BYTE PTR [edi]
  417191:	push   cs
  417192:	(bad)  
  417193:	mov    ebx,0xc6668dca
  417198:	pop    ss
  417199:	ds push edi
  41719b:	mov    ecx,0x15668dca
  4171a0:	addr16 pushf 
  4171a2:	out    dx,eax
  4171a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a4:	fdivr  st(5),st
  4171a6:	add    al,0xd2
  4171a8:	test   DWORD PTR [edx],eax
  4171aa:	sub    ah,BYTE PTR ds:0xa5ef9c6b
  4171b0:	xchg   ebp,eax
  4171b1:	or     BYTE PTR [edx],dl
  4171b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b4:	mov    cl,BYTE PTR [ebp-0x6390ea9a]
  4171ba:	out    dx,eax
  4171bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171bc:	lock dec ebp
  4171be:	xlat   BYTE PTR ds:[ebx]
  4171bf:	xchg   esi,eax
  4171c0:	inc    BYTE PTR [ecx-0x1a]
  4171c3:	sar    bh,1
  4171c5:	std    
  4171c6:	push   esi
  4171c7:	add    al,0x87
  4171c9:	add    ah,BYTE PTR [esi+0x1f]
  4171cc:	iret   
  4171cd:	stc    
  4171ce:	cmp    esi,esp
  4171d0:	xchg   ebp,eax
  4171d1:	or     DWORD PTR [edx],esi
  4171d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171d4:	mov    cl,BYTE PTR [ebp+0x5adcceba]
  4171da:	push   edi
  4171db:	dec    ebp
  4171dc:	test   BYTE PTR [edx],al
  4171de:	lea    cx,[ecx]
  4171e1:	call   0x92cbd825
  4171e6:	lods   al,BYTE PTR ds:[esi]
  4171e7:	ror    BYTE PTR [ebx-0x2289d073],0xf5
  4171ee:	cmp    al,0xd2
  4171f0:	test   DWORD PTR [edx],eax
  4171f2:	sub    ah,BYTE PTR ds:0xa5ef9c73
  4171f8:	xchg   ebp,eax
  4171f9:	or     BYTE PTR [edx-0x45727559],cl
  4171ff:	pop    ebx
  417200:	xchg   edx,eax
  417201:	push   ss
  417202:	in     al,0xd9
  417204:	inc    ebx
  417205:	shr    DWORD PTR [edi],0xa6
  417208:	mov    al,ah
  41720a:	xor    ecx,DWORD PTR [edi+0xa628ff8]
  417210:	adc    DWORD PTR [eax+0x37],edi
  417213:	sbb    eax,0x5131fa07
  417218:	(bad)  
  417219:	mov    ds,ebp
  41721b:	xchg   ecx,eax
  41721c:	in     al,dx
  41721d:	push   ss
  41721e:	in     eax,dx
  41721f:	mov    bh,0xec
  417221:	adc    al,0xee
  417223:	mov    bh,0x11
  417225:	push   eax
  417226:	pop    ebx
  417227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417228:	rol    ecx,cl
  41722a:	fldenv [ebp-0x2f108822]
  417230:	sti    
  417231:	pop    ebp
  417232:	pop    bx
  417234:	xchg   edx,eax
  417235:	jne    0x41724d
  417237:	inc    ecx
  417238:	mov    WORD PTR [ebp-0xa85a49a],ds
  41723e:	sbb    ebx,edx
  417240:	test   DWORD PTR [edx],eax
  417242:	pop    es
  417243:	sbb    eax,0x5bba9607
  417248:	jle    0x417260
  41724a:	jne    0x4171f1
  41724c:	aam    0xc1
  41724e:	mov    edx,0x8afede5f
  417253:	sbb    eax,0x6d3295e7
  417258:	(bad)  
  417259:	xchg   edx,eax
  41725a:	sahf   
  41725b:	pop    ebp
  41725c:	mov    WORD PTR [edx+0x109e559e],ss
  417262:	fld    TBYTE PTR [edi+0x1d005ba2]
  417268:	pop    es
  417269:	xchg   esi,eax
  41726a:	xor    dl,BYTE PTR [eax-0x6a]
  41726d:	push   ss
  41726e:	cmc    
  41726f:	popf   
  417270:	adc    DWORD PTR [esi+0x27],ecx
  417273:	pop    esi
  417274:	mov    ebp,edx
  417276:	pop    ebp
  417277:	imul   BYTE PTR [ecx-0x7740902b]
  41727d:	mov    esi,0x1631d56f
  417282:	cmc    
  417283:	mov    ch,0x11
  417285:	xor    DWORD PTR [ebx],0x1d
  417288:	cld    
  417289:	cdq    
  41728a:	xor    bl,BYTE PTR [ebx+0x7e]
  41728d:	mov    fs,esp
  41728f:	popf   
  417290:	jns    0x4172bb
  417292:	or     BYTE PTR [eax+0x9],dh
  417295:	retf   
  417296:	push   ss
  417297:	les    edx,FWORD PTR [esi+0x2]
  41729a:	(bad)  
  41729c:	repnz and BYTE PTR [ebp+0x3d],al
  4172a0:	jmp    0x73174ea7
  4172a5:	leave  
  4172a6:	(bad)
  4172ab:	sub    cl,BYTE PTR [edx-0xe3ad073]
  4172b1:	push   ss
  4172b2:	retf   0x8a26
  4172b5:	lea    ebp,[edi]
  4172b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b8:	out    0x95,eax
  4172ba:	mov    edx,0x5d969655
  4172bf:	pop    edx
  4172c0:	loope  0x417250
  4172c2:	fcomp  QWORD PTR [ebp-0x33180a24]
  4172c8:	test   DWORD PTR [edx],eax
  4172ca:	cmp    ah,dh
  4172cc:	call   FWORD PTR [edi+0x40173dfd]
  4172d2:	jo     0x417265
  4172d4:	test   DWORD PTR [eax+0x5f],edi
  4172d7:	mov    esi,0xd166011b
  4172dc:	xchg   ecx,eax
  4172dd:	int    0xda
  4172df:	cwde   
  4172e0:	adc    ebp,ebx
  4172e2:	mov    ecx,0x22169a4d
  4172e7:	popf   
  4172e8:	jl     0x417362
  4172ea:	xor    DWORD PTR ds:0x9ddc8e7d,ebx
  4172f0:	mov    DWORD PTR [eax-0x326efcc9],eax
  4172f6:	fidiv  DWORD PTR [eax-0x4ea0b86b]
  4172fc:	clc    
  4172fd:	mov    BYTE PTR [edx],dh
  4172ff:	imul   edx,DWORD PTR [edx-0x258c10b3],0x5f
  417306:	xlat   BYTE PTR ds:[ebx]
  417307:	shl    BYTE PTR [ebp-0x2e877f],1
  41730d:	std    
  41730e:	push   esi
  41730f:	ins    BYTE PTR es:[edi],dx
  417310:	xchg   BYTE PTR [edx],al
  417312:	data16 ins BYTE PTR es:[edi],dx
  417314:	xor    esi,esi
  417316:	and    BYTE PTR ds:0x305a9949,0x11
  41731d:	pop    eax
  41731e:	aaa    
  41731f:	sbb    eax,0x6d3295e7
  417324:	(bad)  
  417325:	mov    dh,0x2
  417327:	call   0x6e40:0xa0cd5dfe
  41732e:	cmp    eax,0xb255f8a6
  417333:	or     eax,0xa62f8d2e
  417338:	mov    bh,BYTE PTR [ecx+0x26]
  41733b:	sbb    eax,0x153295ff
  417340:	sub    cl,BYTE PTR [ebp-0x3cee59d1]
  417346:	xor    dl,BYTE PTR [ebx-0x6e]
  417349:	push   ss
  41734a:	cmc    
  41734b:	test   eax,0xf736f409
  417350:	jae    0x417340
  417352:	or     eax,0x946b3703
  417357:	dec    eax
  417358:	xor    ecx,DWORD PTR [ebp-0x576da5e1]
  41735e:	mov    ax,ds:0xba308d8a
  417364:	ret    0x54ef
  417367:	sbb    eax,0x253295cf
  41736c:	sub    cl,BYTE PTR [ebp+0xe89a62f]
  417372:	mov    esp,DWORD PTR [esi-0x29d57276]
  417378:	clc    
  417379:	xlat   BYTE PTR ds:[ebx]
  41737a:	mov    ecx,0x2f8d4e1d
  41737f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417380:	imul   edx,DWORD PTR [ebp-0xa6da49a],0x285cd62
  41738a:	retf   
  41738b:	push   es
  41738c:	mov    edx,0x11a62f8d
  417391:	dec    ebp
  417392:	xor    ebx,DWORD PTR ds:0x5eba91ca
  417398:	mov    ds:0xc39dfc16,al
  41739d:	pop    ebp
  41739e:	inc    edi
  41739f:	pop    edx
  4173a0:	xchg   ebx,eax
  4173a1:	push   ss
  4173a2:	das    
  4173a3:	(bad)  
  4173a4:	shl    BYTE PTR [ebp-0x4d8e2624],cl
  4173aa:	mov    edx,0xf48eb25d
  4173af:	popf   
  4173b0:	adc    edx,DWORD PTR [ebp+0x43]
  4173b3:	pop    ds
  4173b4:	xlat   BYTE PTR ds:[ebx]
  4173b5:	mov    DWORD PTR [esi+0x66],ebp
  4173b8:	stos   BYTE PTR es:[edi],al
  4173b9:	mov    WORD PTR [edi],gs
  4173bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173bc:	mov    ch,BYTE PTR [ebx+0x5e]
  4173bf:	gs pushf 
  4173c1:	lea    ecx,[edi]
  4173c3:	pop    ebx
  4173c4:	(bad)  
  4173c5:	retf   0xb5eb
  4173c8:	mov    cl,BYTE PTR [ebp+0x494da62f]
  4173ce:	or     esi,DWORD PTR [edx-0x59d07276]
  4173d4:	jmp    0x4173aa
  4173d6:	jo     0x417382
  4173d8:	mov    dh,BYTE PTR [edi+0x2f]
  4173db:	ds push esi
  4173dd:	sbb    bh,BYTE PTR [edi]
  4173df:	mov    eax,DWORD PTR [ebp+0xfbe5f78]
  4173e5:	push   es
  4173e6:	rcl    di,1
  4173e9:	lds    ecx,FWORD PTR [ecx]
  4173eb:	ss ret 0xcd8e
  4173ef:	mov    ds:0xd0e0948e,eax
  4173f4:	or     eax,DWORD PTR [ebp+0x71]
  4173f7:	aaa    
  4173f8:	mov    ecx,DWORD PTR [ebp+0x71]
  4173fb:	mov    ebx,0xb238054c
  417400:	xchg   esp,eax
  417401:	mov    ds:0x398acea9,al
  417406:	cmp    bl,ah
  417408:	stos   DWORD PTR es:[edi],eax
  417409:	inc    ebp
  41740a:	xor    BYTE PTR [edx+0x4a],ah
  41740d:	xchg   edi,eax
  41740e:	sti    
  41740f:	cmp    eax,0xa00f7ef3
  417414:	cli    
  417415:	jg     0x4173ed
  417417:	dec    eax
  417418:	in     eax,dx
  417419:	ins    BYTE PTR es:[edi],dx
  41741a:	aam    0x28
  41741c:	jmp    0xd5f2496b
  417421:	jns    0x417471
  417423:	inc    esp
  417424:	out    dx,eax
  417425:	xor    dh,BYTE PTR [esi+0x5b]
  417428:	in     eax,0x25
  41742a:	fsub   DWORD PTR [edi+0x74e552ce]
  417430:	mov    DWORD PTR [eax-0x2a],esi
  417433:	dec    ecx
  417434:	out    dx,eax
  417435:	mov    bl,0x34
  417437:	pop    ds
  417438:	nop
  417439:	test   eax,0x8c8d69f3
  41743e:	enter  0xe3d2,0x4e
  417442:	addr16 xor al,0x90
  417445:	sub    ebp,DWORD PTR gs:[esi-0x3c]
  417449:	push   0x95e57c33
  41744e:	jecxz  0x4173dd
  417450:	leave  
  417451:	iret   
  417452:	and    al,0x8f
  417454:	test   al,0x75
  417456:	jb     0x5c2ebd70
  41745c:	mov    esi,0xd79e400d
  417461:	xchg   ebp,eax
  417462:	xor    BYTE PTR [esi-0x383d4667],cl
  417468:	mov    dl,0x4
  41746a:	scas   al,BYTE PTR es:[edi]
  41746b:	mov    dh,0x45
  41746d:	in     eax,0xae
  41746f:	jmp    0x417448
  417471:	push   edx
  417472:	pop    ds
  417473:	xchg   ebx,eax
  417474:	adc    BYTE PTR [ebp+0x4f060d37],dl
  41747a:	icebp  
  41747b:	xchg   BYTE PTR [ebp-0x16c0fef1],dl
  417481:	jne    0x41743a
  417483:	inc    esi
  417484:	inc    esi
  417485:	pop    ebp
  417486:	jmp    FWORD PTR [edx+0xa]
  417489:	push   ecx
  41748a:	xor    BYTE PTR [esi-0x78],dl
  41748d:	xchg   edi,eax
  41748e:	pop    esi
  41748f:	(bad)  
  417491:	push   edx
  417492:	cmp    ebp,edx
  417494:	push   0xc
  417496:	cmp    DWORD PTR [edi+0x693ed691],esp
  41749c:	jp     0x417427
  41749e:	cmp    al,0xc8
  4174a0:	mov    WORD PTR [ecx-0x69b848b8],ds
  4174a6:	aas    
  4174a7:	in     al,0xae
  4174a9:	mov    cl,bh
  4174ab:	xchg   si,ax
  4174ad:	dec    eax
  4174ae:	xor    DWORD PTR [ebx-0x640f736c],esp
  4174b4:	xchg   edx,eax
  4174b5:	jge    0x4174c2
  4174b7:	es xchg esi,eax
  4174b9:	dec    eax
  4174ba:	shl    BYTE PTR [edx],1
  4174bc:	add    ecx,DWORD PTR [ecx+0x5e77b0ee]
  4174c2:	xor    al,0x8e
  4174c4:	mov    ds:0xc6a19895,eax
  4174c9:	out    dx,al
  4174ca:	pop    edx
  4174cb:	aas    
  4174cc:	stc    
  4174cd:	ins    DWORD PTR es:[edi],dx
  4174ce:	ror    BYTE PTR [edi-0x5e],0xad
  4174d2:	aas    
  4174d3:	popa   
  4174d4:	shr    esp,cl
  4174d6:	or     BYTE PTR [edi+0x5a43b386],ah
  4174dc:	out    dx,eax
  4174dd:	test   DWORD PTR [eax+0x23],ebx
  4174e0:	pop    ds
  4174e1:	xchg   ecx,eax
  4174e2:	shr    BYTE PTR [ebx],0x80
  4174e5:	mov    DWORD PTR [esi+ecx*1],ebx
  4174e8:	mov    BYTE PTR [ebp+0x53de93f2],bl
  4174ee:	cmp    DWORD PTR [edi-0x56],ebx
  4174f1:	xchg   esi,eax
  4174f2:	xor    eax,0xf97ef880
  4174f7:	inc    esp
  4174f8:	xchg   edi,eax
  4174f9:	cwde   
  4174fa:	iret   
  4174fb:	or     DWORD PTR [esi],esp
  4174fd:	pushf  
  4174fe:	or     DWORD PTR [edi-0x4d64767c],esi
  417504:	mov    dl,0xb6
  417506:	xor    BYTE PTR [ecx+0x62],dl
  417509:	(bad)  
  41750a:	adc    DWORD PTR [esi-0x6f],0x4a9c1651
  417511:	mov    bh,0x91
  417513:	in     al,dx
  417514:	sti    
  417515:	imul   ebp,DWORD PTR [edi],0xffffffd1
  417518:	mov    bh,0x23
  41751a:	scas   al,BYTE PTR es:[edi]
  41751b:	jbe    0x417594
  41751d:	mov    ebx,0x3999b157
  417522:	mov    esp,0x909a791
  417527:	out    0x3b,al
  417529:	cmp    bh,BYTE PTR ds:0x2f176e43
  41752f:	daa    
  417530:	dec    esp
  417531:	mov    bl,0xd1
  417533:	xor    eax,0x5122c4c5
  417538:	aad    0xc5
  41753a:	test   BYTE PTR ds:[edx-0x20e17156],cl
  417541:	pop    esp
  417542:	aam    0xfe
  417544:	xchg   ebp,eax
  417545:	mov    edi,0xed9ef324
  41754a:	into   
  41754b:	mov    ch,0xb2
  41754d:	outs   dx,DWORD PTR ds:[esi]
  41754e:	xor    DWORD PTR [esi-0x224a557f],esp
  417554:	inc    esi
  417555:	xlat   BYTE PTR gs:[ebx]
  417557:	pushf  
  417558:	mov    DWORD PTR [eax],edi
  41755a:	adc    al,0x33
  41755c:	shl    DWORD PTR [ecx],cl
  41755e:	nop
  41755f:	sbb    eax,0xab88dd94
  417564:	jmp    0xb346:0xeeba868e
  41756b:	loopne 0x41758f
  41756d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41756e:	jns    0x41758f
  417570:	mov    al,BYTE PTR [edx]
  417572:	fdivr  DWORD PTR [eax]
  417574:	dec    esp
  417575:	xor    BYTE PTR [edi+0x328da0a8],dh
  41757b:	xor    al,0x34
  41757d:	pop    ebp
  41757e:	jl     0x4175be
  417580:	add    al,0xa5
  417582:	iret   
  417583:	pop    eax
  417584:	inc    edx
  417585:	mov    cl,0x65
  417587:	imul   ecx,DWORD PTR [eax],0xf48d018d
  41758d:	js     0x417547
  41758f:	mov    ebp,0x87ea266b
  417594:	mov    al,bh
  417596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417597:	pop    DWORD PTR [edx]
  417599:	inc    edi
  41759a:	lock inc esp
  41759c:	push   es
  41759d:	test   eax,edx
  41759f:	iret   
  4175a0:	mov    ecx,0x4aa682e9
  4175a5:	imul   ebx,DWORD PTR [esi-0x75],0xffffffb4
  4175a9:	les    eax,FWORD PTR [eax]
  4175ab:	mov    dl,0x6c
  4175ad:	fisttp DWORD PTR es:[esi-0x5c]
  4175b1:	jbe    0x41757f
  4175b3:	out    0xa,al
  4175b5:	cmc    
  4175b6:	popf   
  4175b7:	scas   eax,DWORD PTR es:[edi]
  4175b8:	cmp    BYTE PTR [edi-0x7c9d5968],al
  4175be:	pop    esp
  4175bf:	sbb    ecx,DWORD PTR [eax]
  4175c1:	sahf   
  4175c2:	(bad)  
  4175c3:	jl     0x417633
  4175c5:	shr    BYTE PTR ds:0x64a867a5,cl
  4175cb:	mov    eax,ds:0xbe3c29cb
  4175d0:	jle    0x4175ec
  4175d2:	fsubr  DWORD PTR [edi-0x59e9db57]
  4175d8:	sub    eax,0xbb473e9e
  4175dd:	mov    dh,0x2f
  4175df:	es pop ebp
  4175e1:	mov    ch,0x8
  4175e3:	in     eax,0x7
  4175e5:	jno    0x417642
  4175e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e8:	cmp    dh,BYTE PTR [esi]
  4175ea:	add    eax,0xd0492422
  4175ef:	or     BYTE PTR [edx+0x46ddd0e8],0x24
  4175f6:	int3   
  4175f7:	lds    esp,FWORD PTR [esi]
  4175f9:	lea    eax,[ecx-0x17ea24a5]
  4175ff:	inc    ebp
  417600:	adc    al,0xdd
  417602:	mov    WORD PTR cs:[ebp+0xe126e07],?
  417609:	dec    eax
  41760a:	test   eax,0x144dccb0
  41760f:	in     eax,0xbd
  417611:	(bad)  
  417612:	mov    esi,0xfdb152b2
  417617:	or     cl,BYTE PTR [edx-0x206cc342]
  41761d:	dec    edi
  41761e:	push   ebp
  41761f:	test   DWORD PTR [eax],edx
  417621:	(bad)  
  417622:	cmc    
  417623:	xchg   ecx,eax
  417624:	inc    ebp
  417625:	push   0xd0e1ed49
  41762a:	cs or  al,0xed
  41762d:	mov    eax,0xd2549a05
  417632:	jb     0x417686
  417634:	and    cl,BYTE PTR [ebp+0x215a128]
  41763a:	lea    esp,[edx+0xa]
  41763d:	push   eax
  41763e:	das    
  41763f:	sbb    DWORD PTR [ecx+0x7c],0x4d
  417643:	mov    ebx,0xa5d3fddf
  417648:	jbe    0x4176c7
  41764a:	out    dx,eax
  41764b:	xchg   ebp,eax
  41764c:	inc    ecx
  41764d:	pop    ecx
  41764e:	outs   dx,BYTE PTR ds:[esi]
  41764f:	push   ebx
  417650:	mov    al,bl
  417652:	cmc    
  417653:	push   0x9
  417655:	and    ecx,ecx
  417657:	push   ds
  417658:	call   0x5855:0x1bfb1a8d
  41765f:	pop    es
  417660:	dec    esp
  417661:	mov    DWORD PTR [edi],ebp
  417663:	xchg   ebp,eax
  417664:	jnp    0x4176ae
  417666:	jae    0x417616
  417668:	xchg   ecx,esp
  41766a:	in     al,0x53
  41766c:	ins    DWORD PTR es:[edi],dx
  41766d:	lea    eax,[ebp-0x5a127986]
  417673:	dec    edx
  417674:	outs   dx,BYTE PTR ds:[esi]
  417675:	call   0xb2a:0x2a8d272f
  41767c:	hlt    
  41767d:	test   al,0xd8
  41767f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417680:	fwait
  417681:	sub    edx,ebx
  417683:	call   0x992aa9c7
  417688:	add    DWORD PTR [ebp-0x3c394dad],eax
  41768e:	jl     0x4176b6
  417690:	or     bh,BYTE PTR [ebp+0x32]
  417693:	sub    eax,0xa69417ce
  417698:	or     esi,esi
  41769a:	push   ebx
  41769b:	adc    al,0xb3
  41769d:	xor    cl,BYTE PTR [ecx+0x40]
  4176a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176a1:	ret    
  4176a2:	push   ss
  4176a3:	dec    esp
  4176a4:	mov    ch,bh
  4176a6:	pop    ebx
  4176a7:	inc    esp
  4176a8:	adc    esi,DWORD PTR [esi-0x1f18597b]
  4176ae:	adc    al,0xf9
  4176b0:	sti    
  4176b1:	pop    ebp
  4176b2:	mov    ebp,0x9408c642
  4176b7:	sub    DWORD PTR [esi],ebx
  4176b9:	adc    DWORD PTR [ecx-0x283015f2],ebx
  4176bf:	test   DWORD PTR [ecx+0x485b98d],0x6d5996d9
  4176c9:	in     al,0x44
  4176cb:	dec    edx
  4176cc:	push   ds
  4176cd:	mov    al,0xaf
  4176cf:	adc    DWORD PTR [ebp+ebx*8-0x754f81ee],ebp
  4176d6:	(bad)  
  4176d7:	ds dec eax
  4176d9:	pop    ebx
  4176da:	sub    dh,BYTE PTR [esi]
  4176dc:	jg     0x41774f
  4176de:	aad    0xef
  4176e0:	mov    dl,BYTE PTR [edi]
  4176e2:	gs das 
  4176e4:	xor    DWORD PTR [ecx+0x61],edx
  4176e7:	clc    
  4176e8:	bound  ecx,QWORD PTR [ebp+0x213b196d]
  4176ee:	add    BYTE PTR cs:0xa99f3074,dl
  4176f5:	adc    al,0x7e
  4176f7:	mov    cl,0x2b
  4176f9:	ror    DWORD PTR [ebx-0xa],0xd
  4176fd:	(bad)  
  4176fe:	loop   0x4176ea
  417700:	mov    dl,0xf9
  417702:	mov    ds:0xbfa9dd7a,al
  417707:	adc    cl,BYTE PTR [edx+0x20d4f516]
  41770d:	mov    al,ds:0x8d1a1307
  417712:	(bad)  
  417713:	les    edx,FWORD PTR ds:0xac6ae79e
  41771a:	pop    ebp
  41771b:	xchg   ebx,eax
  41771c:	mov    al,BYTE PTR [ebp+esi*8+0x66]
  417720:	outs   dx,DWORD PTR ds:[esi]
  417721:	xchg   DWORD PTR [esi+ebx*4],ebx
  417724:	ins    BYTE PTR es:[edi],dx
  417725:	lea    edi,[eax-0x3879d02]
  41772b:	sub    eax,0x752f6587
  417730:	and    esi,esp
  417732:	mov    esi,0x1264bbf0
  417737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417738:	ror    ebp,1
  41773a:	sub    dh,BYTE PTR [edx-0x6d8735c2]
  417740:	mov    al,BYTE PTR [ebx]
  417742:	xor    eax,0x12ff31e5
  417747:	clc    
  417748:	(bad)  
  417749:	ror    BYTE PTR [ebx-0x15],0xa
  41774d:	push   ecx
  41774e:	ret    0x8e69
  417751:	mov    al,0xd9
  417753:	aam    0x89
  417755:	aad    0xd
  417757:	sbb    ebx,DWORD PTR [eax+0x18e682bf]
  41775d:	bound  ebx,QWORD PTR [ebp-0x59]
  417760:	fcmovne st,st(2)
  417762:	xor    ebp,DWORD PTR [ebp+0x56753c37]
  417768:	ret    0x2f12
  41776b:	das    
  41776c:	stos   BYTE PTR es:[edi],al
  41776d:	fs xor al,dh
  417770:	xor    edx,ebx
  417772:	daa    
  417773:	mov    esi,0x87f18aba
  417778:	push   edx
  417779:	mov    eax,0x5ac1e6ba
  41777e:	loope  0x417713
  417780:	mov    ds:0xba0154eb,al
  417785:	xor    eax,DWORD PTR [esi+eiz*4]
  417788:	in     al,0xd8
  41778a:	mov    bh,dl
  41778c:	stos   DWORD PTR es:[edi],eax
  41778d:	and    eax,DWORD PTR [ecx]
  41778f:	sub    ecx,DWORD PTR [edx-0x6d9e2d7f]
  417795:	fimul  WORD PTR [ecx-0x1]
  417798:	lahf   
  417799:	(bad)  
  41779a:	fnstcw WORD PTR [edx-0x36]
  41779d:	mov    edx,0x529cd557
  4177a2:	imul   ebp,DWORD PTR [eax-0x766c9d76],0xbb2a1f03
  4177ac:	and    ecx,DWORD PTR [ebp-0x5ecb86b7]
  4177b2:	stc    
  4177b3:	sub    al,0x54
  4177b5:	hlt    
  4177b6:	cs int3 
  4177b8:	aam    0xe0
  4177ba:	pop    esi
  4177bb:	add    al,0x8f
  4177bd:	inc    esp
  4177be:	retf   
  4177bf:	test   al,0x74
  4177c1:	test   BYTE PTR [edi-0x25a3960e],0x2
  4177c8:	sbb    ecx,ecx
  4177ca:	jnp    0x4177fa
  4177cc:	mov    ah,BYTE PTR [eax]
  4177ce:	sbb    al,0xd6
  4177d0:	xchg   ecx,eax
  4177d1:	(bad)  
  4177d3:	stc    
  4177d4:	dec    DWORD PTR [ebp+0x5ebbb07e]
  4177da:	sub    bh,BYTE PTR [esi+0x6b]
  4177dd:	imul   DWORD PTR ds:0xe3c8c0c0
  4177e3:	enter  0xed29,0x2a
  4177e7:	out    dx,al
  4177e8:	mov    ecx,0xcfa5efa3
  4177ed:	mov    dl,0xd1
  4177ef:	outs   dx,BYTE PTR ds:[esi]
  4177f0:	sub    dl,ah
  4177f2:	fdivr  QWORD PTR [edx-0x27f5e13a]
  4177f8:	lea    edx,[ecx-0x6cb65620]
  4177fe:	inc    esi
  4177ff:	push   es
  417800:	or     bl,dh
  417802:	cli    
  417803:	mov    ch,0x6d
  417805:	lea    edi,[ebx]
  417807:	lahf   
  417808:	sub    eax,0xb5a7153c
  41780d:	pushf  
  41780e:	cs dec ebp
  417810:	test   BYTE PTR [esi],al
  417812:	out    0x89,eax
  417814:	push   0x50
  417816:	pop    edi
  417817:	adc    eax,0xd5908de9
  41781c:	inc    ebp
  41781d:	loope  0x41783e
  41781f:	fcom   QWORD PTR [ecx-0x3ca7b47c]
  417825:	xor    esp,DWORD PTR [ebx+0x1df611a6]
  41782b:	nop
  41782c:	pop    esi
  41782d:	fisttp WORD PTR [esi]
  41782f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417830:	pop    edi
  417831:	pop    eax
  417832:	adc    eax,0x5b5c036a
  417837:	in     al,dx
  417838:	mov    DWORD PTR [ecx],eax
  41783a:	(bad)  
  41783c:	or     BYTE PTR [ebx],0x77
  41783f:	out    dx,al
  417840:	out    dx,al
  417841:	pop    es
  417842:	mov    WORD PTR [esi+0x1b6ae907],fs
  417848:	or     ebx,DWORD PTR [ebx]
  41784a:	xchg   esp,eax
  41784b:	imul   ecx,DWORD PTR [edx-0x50984865],0x67fc8667
  417855:	mov    WORD PTR [ebp-0x3c531d64],ds
  41785b:	fmulp  st(4),st
  41785d:	int    0x59
  41785f:	jecxz  0x4177eb
  417861:	push   edx
  417862:	cmp    BYTE PTR [esi-0x38df2ecc],0xa0
  417869:	lea    edx,[esi-0x25dc8780]
  41786f:	cmc    
  417870:	rol    DWORD PTR [edx-0x682d54d1],cl
  417876:	ror    DWORD PTR [ebp+0x4c],1
  417879:	dec    esp
  41787a:	(bad)  
  41787b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41787c:	popa   
  41787d:	popa   
  41787e:	inc    esp
  41787f:	mov    eax,0xccff6e11
  417884:	jp     0x417875
  417886:	xchg   DWORD PTR cs:[ebx+0x79],esi
  41788a:	mov    al,0xef
  41788c:	xor    eax,0x9bb34e95
  417891:	and    al,0x2e
  417893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417894:	enter  0x4720,0x43
  417898:	shl    BYTE PTR [ebx],cl
  41789a:	das    
  41789b:	gs aad 0x64
  41789e:	mov    edi,0xf2cc58ba
  4178a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a4:	stos   DWORD PTR es:[edi],eax
  4178a5:	xchg   BYTE PTR [eax+edi*8],ch
  4178a8:	fst    QWORD PTR [ebp+eax*1+0x32]
  4178ac:	mov    bl,al
  4178ae:	adc    eax,0xc3e4ee3f
  4178b3:	xor    eax,0x7f7aa2b4
  4178b8:	pop    ss
  4178b9:	int    0x61
  4178bb:	add    dl,BYTE PTR [ebp-0x2c]
  4178be:	out    dx,eax
  4178bf:	jmp    0x4178bc
  4178c1:	mov    cl,0x2f
  4178c3:	sbb    dl,ah
  4178c5:	addr16 and eax,0xd8bba953
  4178cb:	mov    cl,0x45
  4178cd:	or     DWORD PTR [ebp+0x27],ebx
  4178d0:	mov    eax,ds:0x23685e1c
  4178d5:	aad    0xa9
  4178d7:	lock mov bh,BYTE PTR ds:0xda09022a
  4178de:	mov    ?,WORD PTR [ecx+0x29e6924b]
  4178e4:	and    BYTE PTR [ebx+esi*4+0x2de4ea74],dh
  4178eb:	pusha  
  4178ec:	lock cmp BYTE PTR [ebp+ebp*2-0x56],al
  4178f1:	les    ebx,FWORD PTR [bx-0x7fc9]
  4178f6:	mul    BYTE PTR [esi+0x5586440]
  4178fc:	int3   
  4178fd:	lds    eax,FWORD PTR [edx-0x7aee151c]
  417903:	adc    ecx,DWORD PTR [edx+0x7a0d6ea3]
  417909:	adc    esi,edi
  41790b:	cmp    bh,cl
  41790d:	lea    edx,[ecx]
  41790f:	test   DWORD PTR [eax+eiz*8+0x3b],edi
  417913:	cmp    eax,0x995b8817
  417918:	les    ecx,FWORD PTR [ebp+0xe]
  41791b:	jbe    0x41797f
  41791d:	and    BYTE PTR [ecx],ch
  41791f:	cli    
  417920:	mov    cl,0xa
  417922:	sbb    BYTE PTR [edi],0x5
  417925:	jmp    0xe0677f58
  41792a:	mov    al,0xa6
  41792c:	test   eax,0x907a6aa8
  417931:	mov    bh,0xd2
  417933:	loope  0x4178ca
  417935:	aad    0x82
  417937:	mov    ebp,0xee0d37
  41793c:	hlt    
  41793d:	fwait
  41793e:	push   ss
  41793f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417940:	int3   
  417941:	fnstenv [edx]
  417943:	push   cs
  417944:	mov    ebp,0x7acf71e7
  417949:	jge    0x417932
  41794b:	hlt    
  41794c:	mov    esp,eax
  41794e:	test   eax,0x9e6e72b5
  417953:	neg    BYTE PTR [edi+0x3fa963f8]
  417959:	dec    edx
  41795a:	jnp    0x417976
  41795c:	mov    esp,0x207fefa2
  417961:	les    edx,FWORD PTR [eax-0x1195a09]
  417967:	pop    esp
  417968:	retf   0xa2f
  41796b:	jo     0x4179b3
  41796d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41796e:	inc    edi
  41796f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417970:	test   eax,0x97d7a8fa
  417975:	sbb    DWORD PTR [edx+0x1d],ebx
  417978:	mov    ebx,DWORD PTR [ecx+0x57]
  41797b:	(bad)
  41797e:	or     ch,BYTE PTR [edi]
  417980:	bound  edx,QWORD PTR [edx+0x57eea682]
  417986:	imul   edi,DWORD PTR [ecx+0x7eba49a2],0xa5b5d38a
  417990:	push   0x434cefc3
  417995:	mov    ?,edx
  417997:	sub    eax,0xcbc819ac
  41799c:	cmp    bh,BYTE PTR [edi+0x738be0dd]
  4179a2:	xlat   BYTE PTR ds:[ebx]
  4179a3:	jne    0x4179ef
  4179a5:	cmc    
  4179a6:	cwde   
  4179a7:	(bad)  
  4179a8:	jmp    0x417986
  4179aa:	out    dx,al
  4179ab:	sbb    BYTE PTR [ecx-0x51a52f4a],dl
  4179b1:	xchg   edx,eax
  4179b2:	imul   esp,eax,0x94f94c4
  4179b8:	mov    esp,esi
  4179ba:	mov    ecx,0x52d28ab3
  4179bf:	div    ecx
  4179c1:	es inc ecx
  4179c3:	push   esp
  4179c4:	adc    eax,0xa9a2cc4
  4179c9:	cli    
  4179ca:	lea    esp,[edi]
  4179cc:	in     al,0xd
  4179ce:	(bad)
  4179d3:	mov    cl,0x7e
  4179d5:	dec    esi
  4179d6:	outs   dx,DWORD PTR ds:[esi]
  4179d7:	std    
  4179d8:	pop    esp
  4179d9:	sub    eax,0xc0a70a59
  4179de:	out    0x7a,al
  4179e0:	mov    dl,BYTE PTR [ecx-0x74e77fb1]
  4179e6:	push   esi
  4179e7:	arpl   WORD PTR [edx-0x36c39d8],cx
  4179ed:	dec    eax
  4179ee:	lahf   
  4179ef:	frstor [edx-0x6487d74]
  4179f5:	(bad)  
  4179f7:	pusha  
  4179f8:	push   eax
  4179f9:	stc    
  4179fa:	popf   
  4179fb:	js     0x417992
  4179fd:	jecxz  0x417a5c
  4179ff:	ror    ebp,0xcd
  417a02:	dec    esp
  417a03:	push   cs
  417a04:	mov    ah,0x7e
  417a06:	jno    0x4179ae
  417a08:	ret    0x989d
  417a0b:	jnp    0x417a28
  417a0d:	sahf   
  417a0e:	in     al,dx
  417a0f:	dec    ebx
  417a10:	jge    0x4179f7
  417a12:	mov    esp,0xe1518ae2
  417a17:	pop    eax
  417a18:	or     al,0x76
  417a1a:	jle    0x4179ea
  417a1c:	in     eax,0x8d
  417a1e:	xor    BYTE PTR [ebx],ch
  417a20:	mov    DWORD PTR [eax],edx
  417a22:	xchg   BYTE PTR [edi],bl
  417a24:	pop    ds
  417a25:	jns    0x417a59
  417a27:	dec    edx
  417a28:	cmc    
  417a29:	int3   
  417a2a:	or     al,0xb6
  417a2d:	sub    al,0x1
  417a2f:	inc    ebp
  417a30:	cli    
  417a31:	adc    BYTE PTR [esi],al
  417a33:	push   ss
  417a34:	pusha  
  417a35:	lea    ebp,[edx]
  417a37:	sar    eax,0xb9
  417a3a:	pop    ecx
  417a3b:	aad    0xbc
  417a3d:	leave  
  417a3e:	inc    ebp
  417a3f:	out    0x97,al
  417a41:	shr    DWORD PTR [edi+0x2f],0x10
  417a45:	jle    0x417a93
  417a47:	adc    eax,0x62a78db5
  417a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a4d:	loope  0x417aaf
  417a4f:	cmp    BYTE PTR [edx-0x46f6ca9a],bh
  417a55:	scas   eax,DWORD PTR es:[edi]
  417a56:	or     al,0x4b
  417a58:	mov    eax,ds:0xbbb5b0aa
  417a5d:	mov    al,0x67
  417a5f:	pop    ds
  417a60:	test   BYTE PTR [ebp-0x4616ea2a],0x2d
  417a67:	(bad)  
  417a69:	push   esi
  417a6a:	das    
  417a6b:	rol    BYTE PTR [ebx-0x3],1
  417a6e:	pop    ds
  417a6f:	scas   eax,DWORD PTR es:[edi]
  417a70:	into   
  417a71:	lods   eax,DWORD PTR ds:[esi]
  417a72:	jp     0x417a1a
  417a74:	in     al,dx
  417a75:	arpl   WORD PTR [edx],dx
  417a77:	add    eax,0x5d0d4c23
  417a7c:	mov    bl,ch
  417a7e:	iret   
  417a7f:	loopne 0x417a60
  417a81:	xlat   BYTE PTR ds:[ebx]
  417a82:	dec    ebp
  417a83:	stos   BYTE PTR es:[edi],al
  417a84:	fwait
  417a85:	(bad)  
  417a86:	iret   
  417a87:	dec    DWORD PTR [eax+eiz*1-0x4c09a0da]
  417a8e:	das    
  417a8f:	adc    ebp,DWORD PTR [esi]
  417a91:	cmp    eax,0xa02fecef
  417a96:	test   al,0x6e
  417a98:	dec    edx
  417a99:	sub    ch,BYTE PTR [edi]
  417a9b:	add    al,0xcb
  417a9d:	mov    dl,0x1d
  417a9f:	lods   eax,DWORD PTR ds:[esi]
  417aa0:	sbb    BYTE PTR [ebx],ah
  417aa2:	sub    esi,DWORD PTR [ebx]
  417aa4:	addr16 xchg esi,eax
  417aa6:	and    ah,BYTE PTR [ebx+0x3609f10a]
  417aac:	push   0x89a198d
  417ab1:	pop    eax
  417ab2:	call   0x36c6f01a
  417ab7:	mov    dl,0x74
  417ab9:	jmp    0x408c243c
  417abe:	bound  edx,QWORD PTR [eax]
  417ac0:	call   ebp
  417ac2:	mov    al,ds:0x42613cc2
  417ac7:	dec    edi
  417ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac9:	jne    0x417b2f
  417acb:	es pop edi
  417acd:	cdq    
  417ace:	fisubr DWORD PTR [ecx-0x6]
  417ad1:	mov    ebp,0x556e5b2f
  417ad6:	pop    ecx
  417ad7:	and    eax,DWORD PTR [edx+ebp*8+0x501da616]
  417ade:	js     0x417a71
  417ae0:	add    ah,BYTE PTR ds:0xfc892d9f
  417ae6:	xor    al,0xd5
  417ae8:	(bad)  
  417ae9:	std    
  417aea:	out    dx,eax
  417aeb:	in     eax,dx
  417aec:	dec    eax
  417aed:	out    dx,eax
  417aee:	sbb    ah,BYTE PTR [ebp+0x64ee166d]
  417af4:	dec    esi
  417af5:	add    BYTE PTR [edi+0xd024715],cl
  417afb:	rcr    BYTE PTR [ecx+0x55],0x36
  417aff:	jbe    0x417b61
  417b01:	lods   eax,DWORD PTR ds:[esi]
  417b02:	ficom  WORD PTR [edx-0x3b]
  417b05:	shl    esi,cl
  417b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b08:	jecxz  0x417ac4
  417b0a:	inc    eax
  417b0b:	outs   dx,BYTE PTR ds:[esi]
  417b0c:	das    
  417b0d:	push   eax
  417b0e:	in     eax,0x77
  417b10:	mov    ch,BYTE PTR [ebx]
  417b12:	sar    DWORD PTR [ecx-0x4deb4805],0xa9
  417b19:	lea    esi,[edx+0x42aa64ba]
  417b1f:	shl    BYTE PTR [eax-0x2956d0db],0xf8
  417b26:	xor    eax,0xfbcab72b
  417b2b:	test   al,0x90
  417b2d:	dec    esp
  417b2e:	(bad)  [ebp+eiz*1-0x73]
  417b32:	jp     0x417ba7
  417b34:	das    
  417b35:	scas   eax,DWORD PTR es:[edi]
  417b36:	das    
  417b37:	jne    0x417b94
  417b39:	dec    ecx
  417b3a:	pop    eax
  417b3b:	sbb    bh,BYTE PTR [ecx+ebx*8]
  417b3e:	mov    bl,0xa6
  417b40:	jo     0x417b30
  417b42:	lock sub ecx,ebx
  417b45:	ficomp DWORD PTR [ebp-0x596e7237]
  417b4b:	rcr    BYTE PTR [ecx+0x63],cl
  417b4e:	jg     0x417b34
  417b50:	dec    ebx
  417b51:	push   0x81d7a5ce
  417b56:	cmp    DWORD PTR [eax],ecx
  417b58:	jnp    0x417ae9
  417b5a:	aam    0x11
  417b5c:	mov    al,BYTE PTR [edx+0x4f]
  417b5f:	push   es
  417b60:	mov    bl,0x1c
  417b62:	retf   0xd0b1
  417b65:	lea    edi,[ebx+eax*4-0x634d24e8]
  417b6c:	(bad)
  417b6f:	fst    QWORD PTR [edx]
  417b71:	cmp    ebx,edi
  417b73:	add    eax,0xa6ca4b3b
  417b78:	out    dx,al
  417b79:	and    al,0x1d
  417b7b:	and    al,0xbd
  417b7d:	shl    edx,cl
  417b7f:	dec    ebx
  417b80:	mov    ah,ah
  417b82:	sahf   
  417b83:	jne    0x417b5d
  417b85:	xor    ah,BYTE PTR [eax]
  417b87:	in     eax,dx
  417b88:	mov    cs,WORD PTR [ebp+0x15c5cd39]
  417b8e:	adc    al,0x76
  417b90:	sub    DWORD PTR [edi+0x2f],0xffffffb1
  417b94:	add    BYTE PTR [ecx],dl
  417b96:	test   DWORD PTR [esi+0x2a],eax
  417b99:	cmc    
  417b9a:	adc    al,0xa6
  417b9c:	sub    DWORD PTR [ecx],ecx
  417b9e:	mov    eax,ds:0x64bbb25c
  417ba3:	popf   
  417ba4:	mov    bl,BYTE PTR [edi-0x1e]
  417ba7:	push   ss
  417ba8:	jae    0x417c0e
  417baa:	retf   
  417bab:	sub    al,BYTE PTR [edi-0x73]
  417bae:	or     al,0x4e
  417bb0:	add    ebp,DWORD PTR [edi]
  417bb2:	push   esi
  417bb4:	adc    DWORD PTR [ebx+eiz*1],ecx
  417bb7:	push   eax
  417bb8:	mov    al,ds:0x4568df0d
  417bbd:	jae    0x417bdf
  417bbf:	imul   edi,DWORD PTR ds:0xe132739a,0xffffff9f
  417bc6:	jno    0x417b6e
  417bc8:	imul   ebx,esp,0x90dc872b
  417bce:	das    
  417bcf:	fidiv  DWORD PTR [esi+0x1d]
  417bd2:	adc    edx,DWORD PTR [edx-0x606e8361]
  417bd8:	sbb    ecx,DWORD PTR [esi-0xc75638e]
  417bde:	stos   DWORD PTR es:[edi],eax
  417bdf:	adc    al,ch
  417be1:	push   ss
  417be2:	das    
  417be3:	add    eax,0x7edee4a2
  417be8:	mov    ah,0xaa
  417bea:	pop    es
  417beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bec:	inc    ecx
  417bed:	loope  0x417c0a
  417bef:	pop    edi
  417bf0:	fst    QWORD PTR [eax]
  417bf2:	cmp    DWORD PTR [esi-0x75c9ec34],edx
  417bf8:	sbb    BYTE PTR ds:0x9a1d0659,al
  417bfe:	mov    ds:0x228a2149,eax
  417c03:	rcl    DWORD PTR [ecx],cl
  417c05:	clc    
  417c06:	and    esi,0x6a05e76c
  417c0c:	mov    ah,BYTE PTR [edi+0x38aacdac]
  417c12:	mov    WORD PTR [eax+0x4e],cs
  417c15:	xchg   edx,eax
  417c16:	ss sbb al,0x15
  417c19:	add    dl,BYTE PTR ds:0xaf51959a
  417c1f:	sub    eax,0x43bd09cf
  417c24:	mov    ch,BYTE PTR [edi-0x5]
  417c27:	movq   mm6,QWORD PTR [esp+esi*2]
  417c2b:	mov    esi,0xf0ad8a8e
  417c30:	sbb    ah,BYTE PTR [edx-0x1e4979bc]
  417c36:	shr    DWORD PTR ds:0xe260e4a6,cl
  417c3c:	retf   0xb6f6
  417c3f:	mov    eax,0x8ec851db
  417c44:	dec    DWORD PTR [edi+ebp*1+0x7]
  417c48:	je     0x417c00
  417c4a:	cmp    DWORD PTR [ecx-0x9],esi
  417c4d:	xor    esi,DWORD PTR [eax]
  417c4f:	push   edx
  417c50:	mov    ecx,0x706ac761
  417c55:	lahf   
  417c56:	jae    0x417c77
  417c58:	sub    ecx,DWORD PTR [ebp+0x2de9e300]
  417c5e:	xchg   edi,eax
  417c5f:	inc    esp
  417c60:	mov    esp,0x6c2a2fc1
  417c65:	int3   
  417c66:	mov    dh,0x79
  417c68:	jno    0x417ca4
  417c6a:	push   0xb4749ea6
  417c6f:	aaa    
  417c70:	nop
  417c71:	jg     0x417c78
  417c73:	mov    DWORD PTR [edx-0xf70fcef],ecx
  417c79:	(bad)  [eax]
  417c7b:	inc    eax
  417c7c:	bts    DWORD PTR [esi],eax
  417c7f:	sub    eax,0x97b5923d
  417c84:	dec    edx
  417c85:	and    ch,0x58
  417c88:	mov    WORD PTR [edx-0x7dc979d1],ds
  417c8e:	jge    0x417c75
  417c90:	push   es
  417c91:	inc    ebx
  417c92:	adc    DWORD PTR [esi+0x24],ecx
  417c95:	ret    0x780b
  417c98:	or     dl,BYTE PTR [edi+0x7b2004a8]
  417c9e:	or     al,0xdb
  417ca0:	mov    bh,BYTE PTR [ecx+edi*2-0x22]
  417ca4:	fldenv [ebx+0x42]
  417ca7:	push   es
  417ca8:	xchg   DWORD PTR [ebp+0x4445b5fe],ecx
  417cae:	xchg   BYTE PTR [ebp+edi*1-0x5a6fc969],bh
  417cb5:	xor    edi,esi
  417cb7:	test   DWORD PTR [edx+0x122990a4],esp
  417cbd:	lea    esi,[eax+0x6b]
  417cc0:	retf   0xf324
  417cc3:	into   
  417cc4:	jb     0x417c94
  417cc6:	cs repnz in al,0x71
  417cca:	jecxz  0x417c90
  417ccc:	dec    eax
  417ccd:	gs out 0xb1,eax
  417cd0:	mov    al,0x52
  417cd2:	lock in eax,0x8e
  417cd5:	out    0x5d,eax
  417cd7:	test   eax,0xbe6751e5
  417cdc:	mov    edi,ebp
  417cde:	mov    edx,0xf4e94f86
  417ce3:	adc    al,0x5a
  417ce5:	jge    0x417c9f
  417ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce8:	sub    dh,BYTE PTR [edi-0xbfb64ff]
  417cee:	ss add eax,0x10dc778a
  417cf4:	(bad)  
  417cf5:	mov    edi,0x8d8ddd75
  417cfa:	pop    ds
  417cfb:	xchg   edi,eax
  417cfc:	sub    BYTE PTR [ebx-0xddd43ba],0x2e
  417d03:	xchg   edx,eax
  417d04:	jecxz  0x417d2f
  417d06:	nop
  417d07:	and    DWORD PTR [ecx-0x74],edi
  417d0a:	data16 mov ch,0xf0
  417d0d:	outs   dx,BYTE PTR ds:[esi]
  417d0e:	push   es
  417d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d10:	mov    cl,al
  417d12:	loop   0x417cb1
  417d14:	xchg   ebp,eax
  417d15:	aaa    
  417d16:	ss aaa 
  417d18:	aam    0x5e
  417d1a:	mov    al,ds:0x7221c22a
  417d1f:	adc    bl,cl
  417d21:	aad    0x49
  417d23:	std    
  417d24:	ins    DWORD PTR es:[edi],dx
  417d25:	cmp    eax,0x90eea5de
  417d2a:	mov    bl,0x90
  417d2c:	pop    ss
  417d2d:	sbb    edx,DWORD PTR [ebx+0x5d1495a8]
  417d33:	xchg   esp,eax
  417d34:	sub    ebp,0xce665ab4
  417d3a:	bound  ebx,QWORD PTR [edi+0x7d0ba298]
  417d40:	mov    ch,BYTE PTR [edi]
  417d42:	shl    DWORD PTR [ecx],cl
  417d44:	cmc    
  417d45:	cdq    
  417d46:	inc    esp
  417d47:	inc    ebx
  417d48:	imul   ebx,DWORD PTR [ebp+0x76],0x958d4532
  417d4f:	mov    fs,ecx
  417d51:	mov    ds:0x9faea99f,eax
  417d56:	and    al,0x88
  417d58:	test   al,0xae
  417d5a:	dec    eax
  417d5b:	push   ecx
  417d5c:	dec    edx
  417d5d:	sbb    edx,DWORD PTR [edi-0x434575d4]
  417d63:	or     DWORD PTR [eax],edi
  417d65:	(bad)  [ebp-0x72]
  417d68:	or     al,0x8d
  417d6a:	fs jge 0x417ced
  417d6d:	pop    DWORD PTR [ecx]
  417d6f:	mov    ds:0xb236519a,al
  417d74:	jp     0x417d2f
  417d76:	out    dx,al
  417d77:	in     eax,0xf2
  417d79:	mov    BYTE PTR [esi-0x6c],ch
  417d7c:	xchg   WORD PTR [ecx-0x3000ff5a],sp
  417d83:	add    eax,0x713e1218
  417d88:	mov    ah,BYTE PTR ds:0x96ac0d1a
  417d8e:	sub    eax,0xdb8d100f
  417d93:	rol    DWORD PTR [ecx],0x2
  417d96:	fdivp  st(0),st
  417d98:	int    0x6c
  417d9a:	das    
  417d9b:	inc    esp
  417d9c:	push   edi
  417d9d:	inc    ebp
  417d9e:	mov    ebp,0xf5c9bebe
  417da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417da4:	clc    
  417da5:	xor    eax,0xafd88d29
  417daa:	sub    ebp,DWORD PTR ds:0x26f2a1a6
  417db0:	or     al,BYTE PTR [eax+0x60]
  417db3:	xor    dl,BYTE PTR [edx]
  417db5:	mov    BYTE PTR [ebp-0x1e55c64c],ah
  417dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dbc:	add    BYTE PTR [ecx],dh
  417dbe:	xchg   edi,eax
  417dbf:	popf   
  417dc0:	outs   dx,BYTE PTR ds:[esi]
  417dc1:	adc    ch,BYTE PTR [edi]
  417dc3:	xchg   edx,eax
  417dc4:	push   ebp
  417dc5:	fwait
  417dc6:	mov    al,ds:0x644e6da7
  417dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dcc:	daa    
  417dcd:	sbb    ah,dl
  417dcf:	jge    0x417df7
  417dd1:	fld    QWORD PTR [esp+edi*8]
  417dd4:	mov    dl,0xcb
  417dd6:	outs   dx,DWORD PTR ds:[esi]
  417dd7:	cmp    DWORD PTR [edx+0x6e1fd75b],ecx
  417ddd:	push   ss
  417dde:	pushf  
  417ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de0:	cmc    
  417de1:	xchg   esi,eax
  417de2:	bound  esp,QWORD PTR [edx-0x64503b2c]
  417de8:	push   ebx
  417de9:	cs fwait
  417deb:	mul    BYTE PTR [esi-0x754a3875]
  417df1:	popf   
  417df2:	pop    ds
  417df3:	push   ebx
  417df4:	leave  
  417df5:	out    dx,al
  417df6:	inc    esi
  417df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417df8:	xlat   BYTE PTR ds:[ebx]
  417df9:	inc    ebx
  417dfa:	mov    cl,0x46
  417dfc:	xchg   ecx,eax
  417dfd:	mov    ch,0x6d
  417dff:	xchg   edx,eax
  417e00:	mov    al,BYTE PTR [edx+0x4d]
  417e03:	cdq    
  417e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e05:	jno    0x417e6c
  417e07:	jmp    0xf69a421f
  417e0c:	mov    dh,BYTE PTR [ebx+0x4c]
  417e0f:	mov    cl,0xaa
  417e11:	(bad)  
  417e12:	cmp    dh,cl
  417e14:	mov    dh,BYTE PTR [esp+edx*8-0x6b654e11]
  417e1b:	das    
  417e1c:	inc    edi
  417e1d:	lea    ecx,[eax+0x3f538793]
  417e23:	add    eax,0x91273449
  417e28:	fmul   DWORD PTR [ebp-0x7b103c7a]
  417e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2f:	push   ebp
  417e30:	add    eax,0xcb52a78e
  417e35:	in     al,dx
  417e36:	pusha  
  417e37:	mov    esp,0xcf2f335b
  417e3c:	mov    ecx,0x3397970d
  417e41:	aam    0xa7
  417e43:	rol    BYTE PTR [esi+ecx*4],1
  417e46:	pop    ds
  417e47:	jmp    0xfc5e7bf3
  417e4c:	stos   DWORD PTR es:[edi],eax
  417e4d:	pop    esi
  417e4e:	das    
  417e4f:	xor    BYTE PTR [ebx-0x13b2041a],dh
  417e55:	ins    DWORD PTR es:[edi],dx
  417e56:	jmp    DWORD PTR [ebp+0x210879d3]
  417e5c:	adc    edx,DWORD PTR [eax+eiz*2-0x6be7579]
  417e63:	jbe    0x417e42
  417e65:	ins    BYTE PTR es:[edi],dx
  417e66:	mov    eax,ds:0x5b8d7620
  417e6b:	daa    
  417e6c:	add    al,BYTE PTR [ebp+edx*1+0x2ee173ba]
  417e73:	push   es
  417e74:	cld    
  417e75:	inc    edi
  417e76:	je     0x417eab
  417e78:	sub    eax,0xcda5ec7f
  417e7d:	fbld   TBYTE PTR [esi+0x5d]
  417e80:	xor    ebx,esp
  417e82:	push   esi
  417e83:	add    esi,DWORD PTR [esi-0x75fceb5e]
  417e89:	ret    0x6ed1
  417e8c:	pop    esp
  417e8d:	xchg   esi,eax
  417e8e:	xor    DWORD PTR [esi+0x2680cc98],esp
  417e94:	xchg   DWORD PTR [ebx-0x357568ca],ecx
  417e9a:	pop    eax
  417e9b:	cdq    
  417e9c:	enter  0xc2de,0xea
  417ea0:	or     eax,0xd601948d
  417ea5:	ja     0x417eb1
  417ea7:	ins    BYTE PTR es:[edi],dx
  417ea8:	dec    ebx
  417ea9:	fsubr  QWORD PTR [esi]
  417eab:	and    dh,bl
  417ead:	cli    
  417eae:	stc    
  417eaf:	(bad)  
  417eb0:	and    al,0x0
  417eb2:	push   ecx
  417eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb4:	aad    0xde
  417eb6:	in     eax,dx
  417eb7:	mov    ch,0x62
  417eb9:	and    ch,BYTE PTR [edi+0x52e98a82]
  417ebf:	inc    ebp
  417ec0:	mov    esp,0xcc8fd92c
  417ec5:	lea    eax,ds:0xf45e385e
  417ecb:	sub    ecx,DWORD PTR [esi+0x59]
  417ece:	inc    ebp
  417ecf:	adc    ah,BYTE PTR [ebx-0x25]
  417ed2:	cs sti 
  417ed4:	inc    eax
  417ed5:	fwait
  417ed6:	ret    0x2f67
  417ed9:	lea    ebx,[edi]
  417edb:	pop    ss
  417edc:	call   0x2f48:0xa5d652a
  417ee3:	add    BYTE PTR [edi+ebp*4],dl
  417ee6:	jg     0x417f5a
  417ee8:	popf   
  417ee9:	sub    DWORD PTR [edx-0x55],eax
  417eec:	jl     0x417ef9
  417eee:	xor    BYTE PTR [edi-0x9],ch
  417ef1:	or     eax,0xedd193f8
  417ef6:	sub    eax,0xab7e0ab2
  417efb:	into   
  417efc:	push   0x1d
  417efe:	jmp    0xe6d4dfe9
  417f03:	jb     0x417f5b
  417f05:	dec    bl
  417f07:	rcr    dh,cl
  417f09:	or     eax,0xaecd8985
  417f0e:	inc    ebp
  417f0f:	dec    eax
  417f10:	jo     0x417eef
  417f12:	cs clc 
  417f14:	ss jg  0x417f27
  417f17:	jecxz  0x417f78
  417f19:	lea    eax,[ebp-0x54]
  417f1c:	inc    eax
  417f1d:	and    DWORD PTR [ebx],ebx
  417f1f:	inc    edx
  417f20:	fidiv  WORD PTR [edi]
  417f22:	xor    BYTE PTR [edi-0xf],ah
  417f25:	xchg   ecx,eax
  417f26:	lea    esp,[ebx]
  417f28:	sub    cl,BYTE PTR [ecx]
  417f2a:	push   edi
  417f2b:	or     eax,0xc3e42542
  417f30:	mov    ds:0xbfb5928d,eax
  417f35:	cmp    BYTE PTR [ecx+0x31f194e0],0x6b
  417f3c:	push   ebx
  417f3d:	in     al,0xd3
  417f3f:	fidivr DWORD PTR [ebp+eax*2-0x76154cd7]
  417f46:	sbb    al,0x3
  417f48:	sub    BYTE PTR [ebx+ecx*1-0x6205e31b],ah
  417f4f:	xor    ax,WORD PTR [ebx+0x5]
  417f53:	das    
  417f54:	xchg   esp,eax
  417f55:	add    esi,DWORD PTR [ebp-0x7b]
  417f58:	shr    esi,0x75
  417f5b:	cmp    DWORD PTR [edx+0x5],esi
  417f5e:	mov    dh,0xca
  417f60:	xor    al,0xc4
  417f62:	and    bh,BYTE PTR [edi+0x7ecaa109]
  417f68:	push   esp
  417f69:	stc    
  417f6a:	pop    ebp
  417f6b:	xchg   ebp,eax
  417f6c:	sub    esp,esp
  417f6e:	xchg   esi,eax
  417f6f:	push   edx
  417f70:	cld    
  417f71:	lods   al,BYTE PTR ds:[esi]
  417f72:	xor    BYTE PTR [ecx],ch
  417f74:	jmp    0x673b:0xc9c102f7
  417f7b:	cdq    
  417f7c:	(bad)  
  417f7d:	lea    ebp,[ebx+0x1e]
  417f80:	aaa    
  417f81:	scas   al,BYTE PTR es:[edi]
  417f82:	pop    esp
  417f83:	pushf  
  417f84:	sub    dh,BYTE PTR [ebx]
  417f86:	das    
  417f87:	scas   al,BYTE PTR es:[edi]
  417f88:	lea    eax,[edi+0x4d411b72]
  417f8e:	jmp    0x2fd4:0x2a07dda5
  417f95:	cmp    eax,0xf08af4f5
  417f9a:	adc    BYTE PTR [eax],bl
  417f9c:	pop    ebx
  417f9d:	icebp  
  417f9e:	test   ebp,eax
  417fa0:	jl     0x417f2f
  417fa2:	(bad)  
  417fa3:	and    ecx,esp
  417fa5:	jbe    0x417f57
  417fa7:	fucomp st(2)
  417fa9:	fldcw  WORD PTR [esi]
  417fab:	mov    DWORD PTR [ecx-0x73c827f5],0x92b087ef
  417fb5:	mov    cl,0x1f
  417fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb8:	push   esp
  417fb9:	or     dl,0x1e
  417fbc:	sar    DWORD PTR [edi+ebp*1-0x45],cl
  417fc0:	iret   
  417fc1:	inc    esp
  417fc2:	sub    BYTE PTR [esi+0x45],dl
  417fc5:	sbb    eax,0x66ffa6ae
  417fca:	mul    BYTE PTR [ebx+0x27]
  417fcd:	(bad)  
  417fce:	js     0x417fdb
  417fd0:	mov    dh,dh
  417fd2:	jecxz  0x417f97
  417fd4:	cmp    BYTE PTR [ecx],dh
  417fd6:	jno    0x417f7c
  417fd8:	or     DWORD PTR [ebp+0x1a5c0dce],0xfb307fa2
  417fe2:	sub    eax,0x4eb7719b
  417fe7:	scas   eax,DWORD PTR es:[edi]
  417fe8:	sbb    ch,ch
  417fea:	adc    DWORD PTR [esi],ebp
  417fec:	ja     0x417fd6
  417fee:	pop    edx
  417fef:	repz (bad) 
  417ff1:	lea    ebx,[ebx+0x24]
  417ff4:	loop   0x417f98
  417ff6:	cld    
  417ff7:	into   
  417ff8:	pop    es
  417ff9:	(bad)  
  417ffa:	das    
  417ffb:	cmp    dl,BYTE PTR [eax-0x71]
  417ffe:	nop
  417fff:	mov    esi,0xa67ebc16
  418004:	and    ah,BYTE PTR [ecx-0x56cf1711]
  41800a:	adc    esp,DWORD PTR [edx-0x76]
  41800d:	lods   eax,DWORD PTR ds:[esi]
  41800e:	ins    DWORD PTR es:[edi],dx
  41800f:	sahf   
  418010:	mov    ch,0x3a
  418012:	add    DWORD PTR [ebp-0x73],ebx
  418015:	mov    ds:0x93637ec4,al
  41801a:	and    DWORD PTR [eax],0xa7ef760a
  418020:	jnp    0x417fbf
  418022:	das    
  418023:	(bad)  
  418025:	(bad)  
  418026:	scas   eax,DWORD PTR es:[edi]
  418027:	mov    edi,0x90f8bbc4
  41802c:	(bad)  
  41802d:	imul   BYTE PTR [edi-0x3f85c934]
  418033:	cmp    esi,esi
  418035:	int    0x5e
  418037:	aas    
  418038:	mov    edx,edi
  41803a:	push   ss
  41803b:	loop   0x418050
  41803d:	out    dx,eax
  41803e:	sti    
  41803f:	and    eax,0xa69c42ae
  418044:	fst    DWORD PTR [ecx]
  418046:	push   esi
  418047:	xchg   ebp,eax
  418048:	mov    ds:0x8ae61f4c,eax
  41804d:	popf   
  41804e:	fadd   DWORD PTR [esi-0x24d6c0d5]
  418054:	dec    ecx
  418055:	lea    ebp,[ebp+0x32]
  418058:	xor    DWORD PTR [ebp+0x7d],edi
  41805b:	sbb    ebx,eax
  41805d:	xchg   DWORD PTR [edi],ebp
  41805f:	mov    al,0xd7
  418061:	cmp    eax,ebx
  418063:	xchg   edi,eax
  418064:	mov    ebx,0xb4a6ad32
  418069:	ja     0x41801c
  41806b:	xor    al,0xcc
  41806d:	stos   BYTE PTR es:[edi],al
  41806e:	daa    
  41806f:	scas   eax,DWORD PTR es:[edi]
  418070:	mov    esp,DWORD PTR ds:0x1b9eeba8
  418076:	mov    ecx,DWORD PTR [esi+0x52]
  418079:	std    
  41807a:	or     esp,DWORD PTR [esi-0xa6ca4a3]
  418080:	cld    
  418081:	mov    ch,0x3c
  418083:	into   
  418084:	mov    dl,bl
  418086:	repnz xchg ebx,eax
  418088:	mov    bh,0x43
  41808a:	mov    esi,0x198d31ec
  41808f:	test   BYTE PTR [eax],dh
  418091:	add    ecx,DWORD PTR [esi+0x2f3e6cca]
  418097:	sti    
  418098:	ja     0x41802f
  41809a:	add    cl,BYTE PTR cs:[esi-0x415a2120]
  4180a1:	mov    eax,0x2fc14768
  4180a6:	in     al,0x5e
  4180a8:	mov    al,BYTE PTR [ecx+0xe]
  4180ab:	inc    ebx
  4180ac:	(bad)  
  4180ad:	popf   
  4180ae:	cmp    ecx,ebp
  4180b0:	std    
  4180b1:	pop    es
  4180b2:	inc    ebp
  4180b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180b4:	ja     0x4180b3
  4180b6:	jg     0x418067
  4180b8:	(bad)  
  4180b9:	hlt    
  4180ba:	(bad)  
  4180bc:	shl    BYTE PTR [edx+0x32eaa6c3],cl
  4180c2:	out    0x17,al
  4180c4:	dec    esp
  4180c5:	iret   
  4180c6:	jb     0x41805a
  4180c8:	arpl   WORD PTR [ebx-0x51],sp
  4180cb:	int3   
  4180cc:	std    
  4180cd:	(bad)  
  4180ce:	and    cl,BYTE PTR [ecx+edi*2]
  4180d1:	jmp    0x13ec1c04
  4180d6:	call   0xc3a5:0xdfbe0112
  4180dd:	aaa    
  4180de:	or     al,0x44
  4180e0:	jl     0x41809e
  4180e2:	mov    edi,0xdc688a78
  4180e7:	fcmovnb st,st(4)
  4180e9:	in     al,0xad
  4180eb:	inc    ecx
  4180ec:	cmp    cl,BYTE PTR [ebp-0xf5cf101]
  4180f2:	inc    edx
  4180f3:	sbb    edi,DWORD PTR ds:0x8fe53605
  4180f9:	mov    eax,ebp
  4180fb:	xchg   dh,dl
  4180fd:	xchg   ebp,eax
  4180fe:	and    eax,DWORD PTR [esp+edx*2]
  418101:	dec    esi
  418102:	arpl   WORD PTR [esi-0x22b74f5a],sp
  418108:	or     bh,bh
  41810a:	arpl   bx,bp
  41810c:	(bad)  
  41810d:	test   al,0x20
  41810f:	es and al,0xb7
  418112:	setle  bh
  418115:	mov    esi,edx
  418117:	or     eax,0xb9aec697
  41811c:	mov    DWORD PTR [esi+ecx*1],edx
  41811f:	loop   0x41814f
  418121:	stc    
  418122:	scas   al,BYTE PTR es:[edi]
  418123:	pop    ebp
  418124:	sbb    eax,0xa257357a
  418129:	inc    ecx
  41812a:	aam    0x5
  41812c:	pop    esi
  41812d:	or     eax,0x7862cd26
  418132:	xchg   edx,eax
  418133:	stos   DWORD PTR es:[edi],eax
  418134:	mov    bh,0x2a
  418136:	in     eax,0xdf
  418138:	dec    BYTE PTR [ebp-0x66e50394]
  41813e:	cld    
  41813f:	mov    edi,0xa43712c1
  418144:	enter  0x1a2f,0xfb
  418148:	mov    bh,0xcc
  41814a:	xlat   BYTE PTR ds:[ebx]
  41814b:	xchg   edx,eax
  41814c:	or     bl,BYTE PTR [ebp+0x92367d1]
  418152:	jmp    0x418160
  418154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418155:	mov    eax,ds:0x9fcb4de6
  41815a:	in     al,dx
  41815b:	xchg   esi,eax
  41815c:	push   0xffffffd7
  41815e:	jbe    0x4181c3
  418160:	aad    0x8d
  418162:	jbe    0x418125
  418164:	loope  0x4181c8
  418166:	ret    
  418167:	sub    BYTE PTR [edx+0x61],dh
  41816a:	inc    ebx
  41816b:	fcom   DWORD PTR [esi]
  41816d:	scas   eax,DWORD PTR es:[edi]
  41816e:	lock adc bl,BYTE PTR [ecx+ecx*4-0xe054b95]
  418176:	mov    esp,DWORD PTR [esi+0x2a4027ab]
  41817c:	cmc    
  41817d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41817e:	(bad)  
  41817f:	sbb    BYTE PTR ds:[ebx],0x2f
  418183:	adc    al,0xf3
  418185:	pop    edi
  418186:	adc    eax,0x315cd12e
  41818b:	push   edi
  41818c:	adc    al,0x79
  41818e:	pop    ebx
  41818f:	jle    0x418179
  418191:	popf   
  418192:	xchg   DWORD PTR [edi-0x62e58996],esp
  418198:	sbb    BYTE PTR [edi],ch
  41819a:	mov    dl,0xe2
  41819c:	sub    DWORD PTR [eax],esi
  41819e:	das    
  41819f:	mov    ebp,0x91426251
  4181a4:	xor    cl,BYTE PTR [esi+ebx*2-0x5a]
  4181a8:	push   edx
  4181a9:	or     eax,0xaab6765d
  4181ae:	xor    BYTE PTR [edx+eax*4-0x365d0d7],dh
  4181b5:	push   ds
  4181b6:	mov    bh,0x22
  4181b8:	scas   eax,DWORD PTR es:[edi]
  4181b9:	mov    BYTE PTR [eax-0x5a],al
  4181bc:	xlat   BYTE PTR ds:[ebx]
  4181bd:	sub    bl,BYTE PTR ds:0x692404e5
  4181c3:	test   al,0x8a
  4181c5:	jne    0x4181bf
  4181c7:	mov    bl,0xd6
  4181c9:	lds    esp,FWORD PTR ds:0xf58d3e14
  4181cf:	ss ins DWORD PTR es:[edi],dx
  4181d1:	inc    edx
  4181d2:	lock (bad) 
  4181d4:	out    0xb8,al
  4181d6:	inc    esp
  4181d7:	je     0x418257
  4181d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181da:	scas   eax,DWORD PTR es:[edi]
  4181db:	mov    bh,0x2a
  4181dd:	add    edi,eax
  4181df:	int    0x6c
  4181e1:	int    0xee
  4181e3:	imul   esi,DWORD PTR ds:0x8afab857,0xffffffd2
  4181ea:	outs   dx,BYTE PTR ds:[esi]
  4181eb:	push   ecx
  4181ec:	add    al,0x37
  4181ee:	add    ebx,0x3c528d23
  4181f4:	mov    al,ds:0xd92fd0e5
  4181f9:	mov    ah,0xe8
  4181fb:	xor    DWORD PTR [ebp+0x657482af],edx
  418201:	lods   eax,DWORD PTR ds:[esi]
  418202:	(bad)  
  418203:	mov    bh,0xcf
  418205:	jne    0x4181ea
  418207:	xchg   edx,eax
  418208:	test   eax,0xd9a4db57
  41820d:	mov    esi,0xe2896f00
  418212:	outs   dx,DWORD PTR ds:[esi]
  418213:	repz xor edx,ebp
  418216:	test   DWORD PTR [edi-0x73],0x596db8e3
  41821d:	xchg   edx,eax
  41821e:	das    
  41821f:	out    0x2a,al
  418221:	and    DWORD PTR [eax+0x25a03ca6],eax
  418227:	add    al,BYTE PTR [edx-0x68]
  41822a:	push   edi
  41822b:	test   al,0x95
  41822d:	add    BYTE PTR [esi+edi*8+0x7c916d2c],bh
  418234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418235:	xchg   esi,eax
  418236:	and    BYTE PTR [esi-0x69d754bc],0xab
  41823d:	sbb    al,0xc
  41823f:	adc    DWORD PTR [ebx+0x70065671],edx
  418245:	lea    esi,[esi]
  418247:	es pusha 
  418249:	fst    DWORD PTR [esi+eiz*4]
  41824c:	xchg   ebp,eax
  41824d:	inc    ebx
  41824e:	push   ebx
  41824f:	add    eax,0xcdb4dbce
  418254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418255:	mov    ecx,esp
  418257:	push   edx
  418258:	retf   0xfd25
  41825b:	or     bh,BYTE PTR [eax-0x2e569e35]
  418261:	or     al,BYTE PTR [esp+edx*2-0x64]
  418265:	jge    0x418223
  418267:	loope  0x41828d
  418269:	push   cs
  41826a:	das    
  41826b:	xor    edi,DWORD PTR [esi+0xec3a19a]
  418271:	pop    edx
  418272:	call   0xb840461a
  418277:	push   esp
  418278:	push   es
  418279:	inc    edx
  41827a:	outs   dx,DWORD PTR ds:[esi]
  41827b:	sar    ah,0xe5
  41827e:	xor    DWORD PTR [edi+ebx*1-0x7cc1ce13],ebp
  418285:	sub    eax,0x8e015559
  41828a:	sub    eax,0x27becc31
  41828f:	stc    
  418290:	jmp    FWORD PTR [edx-0x890ed1]
  418296:	push   0x1e9f73c9
  41829b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41829c:	call   0x2d0ee77d
  4182a1:	test   eax,0xd38a5ceb
  4182a6:	scas   eax,DWORD PTR es:[edi]
  4182a7:	inc    edx
  4182a8:	mov    ds:0x8fc01cda,eax
  4182ad:	(bad)  
  4182ae:	loop   0x418305
  4182b0:	test   DWORD PTR [ebp-0xc],ebx
  4182b3:	(bad)  
  4182b4:	xor    eax,esi
  4182b6:	xor    al,BYTE PTR [esi+0x30]
  4182b9:	call   0xcf359d1c
  4182be:	and    al,bh
  4182c0:	jae    0x418340
  4182c2:	arpl   WORD PTR [ebp-0x19],ax
  4182c5:	lea    ebp,[ebp-0x5a0976a8]
  4182cb:	test   DWORD PTR [esi],ebx
  4182cd:	push   esi
  4182ce:	das    
  4182cf:	cmp    al,0x5b
  4182d1:	mov    bl,0x51
  4182d3:	or     al,0xe4
  4182d5:	(bad)  
  4182d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182d8:	ss clc 
  4182da:	add    BYTE PTR [edx+edx*1-0x4a],ah
  4182de:	jae    0x418339
  4182e0:	(bad)  
  4182e1:	sti    
  4182e2:	pop    ebx
  4182e3:	rcl    BYTE PTR [esi],cl
  4182e5:	mov    ecx,0x308a7767
  4182ea:	jle    0x4182f2
  4182ec:	xor    dh,BYTE PTR [eax+0x2b]
  4182ef:	js     0x4182d9
  4182f1:	lea    edx,[edx-0xac16d9f]
  4182f7:	add    esi,DWORD PTR [esi-0x12bad078]
  4182fd:	xor    BYTE PTR [edi-0x1bd65bf2],al
  418303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418304:	iret   
  418305:	fsub   DWORD PTR [eax]
  418307:	(bad)  
  418308:	imul   esi,DWORD PTR [edx+0x29],0x31
  41830c:	pop    DWORD PTR [ecx]
  41830e:	add    edx,DWORD PTR [esp+ebx*1+0x5f]
  418312:	outs   dx,DWORD PTR ds:[esi]
  418313:	cmp    DWORD PTR [ecx+0x2a74c56],ebx
  418319:	mov    ebx,0x4688c7fe
  41831e:	or     eax,0x2fcf5956
  418323:	push   ds
  418324:	jne    0x418382
  418326:	inc    ecx
  418327:	sub    al,al
  418329:	lds    ebp,FWORD PTR [ebx+0x7d]
  41832c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832d:	lea    eax,[ebp+0x2d]
  418330:	lods   eax,DWORD PTR ds:[esi]
  418331:	retf   0x32d3
  418334:	cld    
  418335:	add    ch,BYTE PTR [edi]
  418337:	nop
  418338:	sbb    BYTE PTR [ebp+0x3c],bl
  41833b:	xchg   BYTE PTR [eax-0x1259e8f1],dh
  418341:	es adc al,0xa0
  418344:	or     al,0xb2
  418346:	jo     0x4183c0
  418348:	mov    al,dl
  41834a:	pop    edx
  41834b:	jmp    0x2528:0x2cba0a41
  418352:	rol    DWORD PTR ds:0x8276c50b,1
  418358:	lods   eax,DWORD PTR ds:[esi]
  418359:	adc    eax,0xfae2a65b
  41835e:	mov    ah,0x6b
  418360:	and    DWORD PTR ds:0x3dea982f,0x55
  418367:	arpl   WORD PTR [esi+0x39],si
  41836a:	push   eax
  41836b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41836c:	jae    0x4183c1
  41836e:	inc    ecx
  41836f:	cmp    al,0x34
  418371:	jle    0x418392
  418373:	add    bh,bl
  418375:	jmp    0x4183a6
  418377:	xchg   bh,al
  418379:	xor    BYTE PTR [esi-0x5f],dl
  41837c:	push   ebx
  41837d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41837e:	push   ebx
  41837f:	ror    BYTE PTR [edx],cl
  418381:	mov    WORD PTR [esi],cs
  418383:	fnstenv [edi-0x9]
  418386:	pushf  
  418387:	adc    ebx,eax
  418389:	cli    
  41838a:	cs out dx,al
  41838c:	(bad)  
  41838d:	xchg   esi,eax
  41838e:	dec    esp
  41838f:	test   al,0x4f
  418391:	out    dx,al
  418392:	pop    edx
  418393:	fsubr  DWORD PTR [ebx+0x32e8493]
  418399:	pop    edx
  41839a:	das    
  41839b:	scas   al,BYTE PTR es:[edi]
  41839c:	add    al,0x7
  41839e:	imul   esp,DWORD PTR [esi-0x73],0xffffff92
  4183a2:	xchg   ebp,eax
  4183a3:	mov    esi,?
  4183a5:	or     eax,0xc510777f
  4183aa:	xor    al,0x4f
  4183ac:	stc    
  4183ad:	jl     0x4183dc
  4183af:	test   eax,0x3c71a419
  4183b4:	cmp    bl,BYTE PTR [ebp-0x73]
  4183b7:	mov    al,ds:0xbc2f6196
  4183bc:	pop    esi
  4183bd:	sti    
  4183be:	dec    edi
  4183bf:	retf   0x63e2
  4183c2:	adc    esp,DWORD PTR [esi+0x5ce75274]
  4183c8:	sub    DWORD PTR [edx+0x188a1d0d],0x94280a3a
  4183d2:	ins    DWORD PTR es:[edi],dx
  4183d3:	jo     0x4183ec
  4183d5:	(bad)  
  4183d6:	icebp  
  4183d7:	fstp   DWORD PTR [edx+0x5a6d9e14]
  4183dd:	int3   
  4183de:	sub    eax,0x847bf0b3
  4183e3:	sar    BYTE PTR [edx],1
  4183e5:	int    0x33
  4183e7:	mov    DWORD PTR [edi],eax
  4183e9:	data16 ds mov cl,BYTE PTR es:[ebp-0x6d]
  4183ef:	mov    edx,0x9b454c7f
  4183f4:	mov    al,BYTE PTR [eax]
  4183f6:	dec    edx
  4183f7:	(bad)  
  4183f8:	mov    ecx,0x5f1481a7
  4183fd:	(bad)  
  4183fe:	jp     0x418412
  418400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418401:	test   eax,0xdcad4cf
  418406:	call   0x5e2d:0xb2878aeb
  41840d:	cld    
  41840e:	out    0x75,al
  418410:	pop    edi
  418411:	(bad)  
  418412:	call   0xdbb3b9e5
  418417:	pop    edi
  418418:	mov    bl,0x4d
  41841a:	xchg   BYTE PTR ss:[ebp+eiz*2+0x27],dl
  41841f:	xchg   BYTE PTR [esi+0x67],ch
  418422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418423:	push   cs
  418424:	and    BYTE PTR [ebp+0x29eb4e1d],cl
  41842a:	cmp    al,0xd9
  41842c:	in     al,0x38
  41842e:	ss push edi
  418430:	outs   dx,DWORD PTR ds:[esi]
  418431:	sbb    BYTE PTR [edx],al
  418433:	xor    BYTE PTR es:[edx-0x31],0xbe
  418438:	out    dx,al
  418439:	out    dx,eax
  41843a:	lea    esp,[ebp+0x89f9ca5]
  418440:	dec    ebp
  418441:	das    
  418442:	(bad)  
  418443:	das    
  418444:	fcomp  QWORD PTR [ecx-0x1756218]
  41844a:	ds retf 
  41844c:	xor    eax,0x4e34a5f8
  418451:	stc    
  418452:	push   edx
  418453:	test   eax,0x82c80571
  418458:	call   0xde1e761a
  41845d:	fsubr  QWORD PTR [esi]
  41845f:	xchg   ebx,eax
  418460:	nop
  418461:	ret    0xf8b1
  418464:	test   eax,0x19a69290
  418469:	in     eax,dx
  41846a:	fist   DWORD PTR [ebp+edx*8-0x752c0f31]
  418471:	pop    edx
  418472:	inc    ebp
  418473:	push   esi
  418474:	outs   dx,DWORD PTR ds:[esi]
  418475:	arpl   bp,cx
  418477:	cdq    
  418478:	sbb    eax,0xc3a440ff
  41847d:	cmp    DWORD PTR [ebp+0x24],ecx
  418480:	das    
  418481:	test   al,0xef
  418483:	push   0x10
  418485:	loop   0x4184cc
  418487:	mov    bl,0xe1
  418489:	jnp    0x4184fa
  41848b:	push   ebp
  41848c:	(bad)  
  41848d:	fnstsw WORD PTR ds:0x898dda66
  418493:	lea    eax,[esi+0x3a]
  418496:	ja     0x4184d6
  418498:	outs   dx,BYTE PTR ds:[esi]
  418499:	dec    eax
  41849a:	xor    BYTE PTR [esi+ecx*8+0x57],ah
  41849e:	inc    esp
  41849f:	jmp    0x26ea:0x784cc1b9
  4184a6:	aam    0xa5
  4184a8:	dec    edi
  4184a9:	inc    ebp
  4184aa:	adc    dl,dh
  4184ac:	and    al,0x9a
  4184ae:	mov    al,0xec
  4184b0:	xchg   ebx,eax
  4184b1:	xchg   ebx,eax
  4184b2:	fnstcw WORD PTR [ebx-0x6b397267]
  4184b8:	xcrypt-ecb 
  4184bb:	mov    ?,WORD PTR [esi+0x6]
  4184be:	das    
  4184bf:	push   0xffffffca
  4184c1:	dec    ebx
  4184c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c3:	jmp    0xd870cfbc
  4184c8:	jnp    0x418545
  4184ca:	call   0xf81fe4fa
  4184cf:	mov    eax,0xa693053b
  4184d4:	sbb    eax,0xd229cda0
  4184d9:	gs (bad) 
  4184dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184dd:	mov    eax,esp
  4184df:	call   0x2503e6e
  4184e4:	sar    bl,1
  4184e6:	sbb    eax,0xec6de9a6
  4184eb:	dec    edx
  4184ec:	pop    eax
  4184ed:	popf   
  4184ee:	fstp   QWORD PTR [edx+0x7a2ed970]
  4184f4:	sub    DWORD PTR [edx],0xaba135a3
  4184fa:	cld    
  4184fb:	jno    0x418512
  4184fd:	jmp    0xb9ab:0x5aa68a2e
  418504:	cdq    
  418505:	cld    
  418506:	cs cs jno 0x41849f
  41850a:	scas   al,BYTE PTR es:[edi]
  41850b:	dec    ebx
  41850c:	cmp    BYTE PTR [esi-0x7a],al
  41850f:	mov    al,0x34
  418511:	jne    0x418543
  418513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418514:	dec    esi
  418515:	jb     0x418534
  418517:	and    al,0x70
  418519:	add    eax,0xb18de7c7
  41851e:	bound  edx,QWORD PTR [edi-0x3a70ceac]
  418524:	daa    
  418525:	sbb    bh,BYTE PTR [esi]
  418527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418528:	jb     0x418579
  41852a:	nop
  41852b:	cld    
  41852c:	div    DWORD PTR [ecx-0x2f]
  41852f:	dec    ecx
  418530:	mov    bh,BYTE PTR [esi-0x56]
  418533:	jmp    0x407c2b88
  418538:	stos   DWORD PTR es:[edi],eax
  418539:	xchg   edx,eax
  41853a:	pop    ebp
  41853b:	jne    0x418520
  41853d:	dec    esi
  41853e:	out    dx,eax
  41853f:	sub    DWORD PTR [edi+0x22841af8],esi
  418545:	(bad)  
  418546:	das    
  418547:	or     al,0x83
  418549:	shl    DWORD PTR ds:0x2581754c,1
  41854f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418550:	sub    al,0x5c
  418552:	push   es
  418553:	xchg   esp,eax
  418554:	sbb    eax,0x8b0d27a1
  418559:	dec    edx
  41855a:	call   DWORD PTR [ebp-0x27]
  41855d:	icebp  
  41855e:	out    dx,al
  41855f:	bound  ebx,QWORD PTR [esi-0x34]
  418562:	add    al,0xa6
  418564:	push   ss
  418565:	nop
  418566:	jp     0x41856d
  418568:	ret    0xa0d
  41856b:	mov    bh,0x8a
  41856d:	cwde   
  41856e:	adc    edi,DWORD PTR [ebx]
  418570:	dec    edx
  418571:	test   dl,bh
  418573:	lods   al,BYTE PTR ds:[esi]
  418574:	pop    esp
  418575:	xchg   esp,eax
  418576:	dec    ebx
  418577:	iret   
  418578:	xor    ch,ah
  41857a:	scas   al,BYTE PTR es:[edi]
  41857b:	and    ah,BYTE PTR [ecx]
  41857d:	pusha  
  41857e:	inc    esi
  41857f:	xchg   esp,eax
  418580:	mov    ch,BYTE PTR [edi]
  418582:	sub    bl,BYTE PTR [esi-0x3d1b632a]
  418588:	mov    ebp,0x8c0cb78d
  41858d:	std    
  41858e:	or     BYTE PTR [esi+edx*4+0x7],dl
  418592:	das    
  418593:	mov    ebx,0x408036a3
  418598:	jb     0x418609
  41859a:	jg     0x418542
  41859c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41859d:	inc    esi
  41859e:	int3   
  41859f:	fidivr DWORD PTR [eax-0x72]
  4185a2:	pop    ebx
  4185a3:	sbb    BYTE PTR [edx-0x4543b174],cl
  4185a9:	sub    eax,DWORD PTR [edi]
  4185ab:	adc    DWORD PTR [esi+0xa956dc1],esp
  4185b1:	or     eax,0x188e18ee
  4185b6:	arpl   WORD PTR [eax-0x76],dx
  4185b9:	lock shl BYTE PTR [ecx],cl
  4185bc:	ds and bl,cl
  4185bf:	cld    
  4185c0:	jo     0x41854f
  4185c2:	inc    esp
  4185c3:	ss xchg ebp,eax
  4185c5:	adc    al,0x53
  4185c7:	(bad)  
  4185c8:	sahf   
  4185c9:	shr    DWORD PTR [esi],1
  4185cb:	sbb    eax,0x128975bc
  4185d0:	das    
  4185d1:	psraw  mm3,QWORD PTR [edi+0xa136445]
  4185d8:	stos   BYTE PTR es:[edi],al
  4185d9:	push   edx
  4185da:	enter  0xc8f4,0xeb
  4185de:	cs sub al,0x29
  4185e1:	jle    0x418608
  4185e3:	push   esi
  4185e4:	dec    ecx
  4185e5:	and    al,BYTE PTR [esi+eiz*4+0xa312f64]
  4185ec:	shl    BYTE PTR [ecx+0x52],0x24
  4185f0:	or     BYTE PTR [eax+0x17c2e336],0xc4
  4185f7:	out    0xab,al
  4185f9:	sbb    esp,DWORD PTR [ebx+ebx*4+0x3d]
  4185fd:	fwait
  4185fe:	mov    BYTE PTR [ecx],dl
  418600:	sbb    eax,0xc17e298c
  418605:	test   eax,0xb93cc39c
  41860a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41860b:	push   edx
  41860c:	mov    cl,al
  41860e:	dec    ecx
  41860f:	in     al,0x99
  418611:	nop
  418612:	pop    ebx
  418613:	jmp    0x453e1255
  418618:	lahf   
  418619:	xchg   ecx,eax
  41861a:	or     ecx,esi
  41861c:	stc    
  41861d:	lods   eax,DWORD PTR ds:[esi]
  41861e:	cmc    
  41861f:	cmp    ecx,DWORD PTR [edx-0x104b9ff1]
  418625:	fidiv  WORD PTR [ebx]
  418627:	mov    ebp,0x74178de8
  41862c:	or     eax,0x54dcfff0
  418631:	pop    es
  418632:	das    
  418633:	xor    DWORD PTR [ebp+ebp*4+0x72002df1],edi
  41863a:	push   cs
  41863b:	mov    eax,ds:0xbf3b8403
  418640:	retf   0xab9e
  418643:	out    dx,al
  418644:	fisttp WORD PTR [edx+0x32]
  418647:	mov    eax,ds:0xc8815765
  41864c:	(bad)  
  41864d:	fnstsw WORD PTR [ebp+0x8aa638]
  418653:	jne    0x4186b3
  418655:	retf   
  418656:	mov    DWORD PTR [esi-0xa8ee665],edx
  41865c:	jb     0x4186c8
  41865e:	das    
  41865f:	(bad)  
  418660:	aam    0x9d
  418662:	inc    BYTE PTR ss:[edx+0x15]
  418666:	dec    esp
  418667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418668:	mov    esi,0x68375978
  41866d:	fistp  QWORD PTR fs:[edi-0x76]
  418671:	mov    edx,0xc3237428
  418676:	xchg   esi,eax
  418677:	or     al,0x7c
  418679:	lea    edi,[ecx-0x6f9af655]
  41867f:	(bad)  
  418680:	cmp    al,0x66
  418682:	das    
  418683:	or     bl,dh
  418685:	add    eax,0xbd601ce3
  41868a:	push   0xe282a5a6
  41868f:	inc    DWORD PTR [eax+eax*1+0xca6e3be]
  418696:	push   ds
  418697:	pop    edx
  418698:	daa    
  418699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869a:	arpl   WORD PTR [esi],sp
  41869c:	inc    ebp
  41869d:	jg     0x4186c8
  41869f:	dec    eax
  4186a0:	sbb    BYTE PTR [eax-0x10],bh
  4186a3:	scas   eax,DWORD PTR es:[edi]
  4186a4:	add    ecx,eax
  4186a6:	push   esi
  4186a7:	data16 mov ch,0x49
  4186aa:	xlat   BYTE PTR ds:[ebx]
  4186ab:	popa   
  4186ac:	in     eax,0xad
  4186ae:	xor    BYTE PTR [esi-0x47],bh
  4186b1:	arpl   WORD PTR ds:0x5ed45804,bp
  4186b7:	out    0x19,eax
  4186b9:	mov    ch,BYTE PTR [ebp-0x64]
  4186bc:	xchg   esi,eax
  4186bd:	loop   0x4186c7
  4186bf:	push   esi
  4186c0:	es jge 0x41868d
  4186c3:	rcl    DWORD PTR [ecx+0x5898de31],0x8c
  4186ca:	lock test eax,0xa6eef2a
  4186d0:	scas   al,BYTE PTR es:[edi]
  4186d1:	lea    esi,[edx+0x45]
  4186d4:	faddp  st(5),st
  4186d6:	or     BYTE PTR [edi-0x29],dl
  4186d9:	mov    dl,0x2f
  4186db:	push   esp
  4186dc:	lea    esi,[ebx-0x27568c94]
  4186e2:	adc    ebx,DWORD PTR [ebx-0x58ece10d]
  4186e8:	(bad)  
  4186e9:	push   edi
  4186ea:	sub    BYTE PTR [edx+0x43990c6b],al
  4186f0:	mov    ch,0xf3
  4186f2:	mov    esp,0x6226ba77
  4186f7:	push   ss
  4186f8:	jns    0x4186fb
  4186fa:	lds    esp,FWORD PTR [esi+0xa90f68f]
  418700:	lock (bad) [ebp+eiz*4-0x77]
  418705:	adc    ecx,DWORD PTR [edi+0x6456c95e]
  41870b:	fiadd  WORD PTR [esi-0x3]
  41870e:	push   ecx
  41870f:	mov    dl,0x21
  418711:	xor    esi,DWORD PTR [esi+0x6c7e0b26]
  418717:	das    
  418718:	add    al,0x2d
  41871a:	das    
  41871b:	pop    ss
  41871c:	mov    eax,ds:0x84260fe9
  418721:	xchg   ecx,eax
  418722:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418724:	mov    edi,0x92a05d96
  418729:	shl    BYTE PTR [edi],cl
  41872b:	dec    ebx
  41872c:	mov    esi,ebx
  41872e:	xor    eax,0x547e35f8
  418733:	mov    bh,0x6a
  418735:	outs   dx,BYTE PTR ds:[esi]
  418736:	sbb    esp,DWORD PTR [esi+0x27f26f7b]
  41873c:	icebp  
  41873d:	inc    BYTE PTR [ebp-0x39985988]
  418743:	mov    ds:0xda5718a,eax
  418748:	xchg   edx,eax
  418749:	push   eax
  41874a:	add    ah,BYTE PTR [edi+0x59f6bb52]
  418750:	push   esi
  418751:	push   esi
  418752:	adc    esi,esi
  418754:	imul   ecx,DWORD PTR [eax],0x2f
  418757:	xchg   ebp,eax
  418758:	fnsave [edi+0x37e3ac00]
  41875e:	sbb    ebx,DWORD PTR [edi-0xaf8661c]
  418764:	or     dl,BYTE PTR [edi+ebp*8+0x69]
  418768:	mov    WORD PTR [edi+0x2f],?
  41876b:	prefetch BYTE PTR [ebx+esi*1+0x42dbacb5]
  418773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418774:	mov    ebp,0x3ba6fe06
  418779:	ins    BYTE PTR es:[edi],dx
  41877a:	imul   ebp,DWORD PTR [ebx],0xffffffa5
  41877d:	xchg   esp,eax
  41877e:	pop    ecx
  41877f:	push   0xa
  418781:	xor    eax,0xb7909b2d
  418786:	xor    edx,eax
  418788:	or     BYTE PTR [ebp-0x4e9b89ae],0xd9
  41878f:	sub    al,0xf7
  418791:	mov    eax,ds:0xe22b522f
  418796:	pop    eax
  418797:	das    
  418798:	add    bl,dh
  41879a:	dec    ebp
  41879b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41879c:	jp     0x418726
  41879e:	(bad)  
  41879f:	mov    eax,0x8dacfc6a
  4187a4:	les    esi,FWORD PTR [esi+0x52]
  4187a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a8:	cs mov ebx,0xe63579b2
  4187ae:	xchg   esi,eax
  4187af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b0:	nop
  4187b1:	mov    ds:0x619ef04b,al
  4187b6:	cmc    
  4187b7:	sbb    eax,0xab20a48a
  4187bc:	shr    DWORD PTR [esi-0x728e2378],cl
  4187c2:	mov    ch,0x6c
  4187c4:	add    ch,ch
  4187c6:	iret   
  4187c7:	jecxz  0x418777
  4187c9:	xchg   BYTE PTR [edi],ch
  4187cb:	mov    ebx,?
  4187cd:	sbb    DWORD PTR [ebx+0x5935dfe5],ebp
  4187d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d4:	or     cl,bl
  4187d6:	push   cs
  4187d7:	cmp    ebx,ebx
  4187d9:	les    esi,FWORD PTR [ecx]
  4187db:	mov    ds:0x26365dc4,eax
  4187e0:	mov    ecx,0xea48b965
  4187e5:	imul   ecx,DWORD PTR [edx-0x5a],0x56d0bf93
  4187ec:	cmc    
  4187ed:	les    ebx,FWORD PTR [edx+0x5f]
  4187f0:	(bad)  
  4187f1:	sbb    dl,dl
  4187f3:	stos   BYTE PTR es:[edi],al
  4187f4:	frstor [esi+eax*2]
  4187f7:	sub    DWORD PTR [edx],ecx
  4187f9:	cmp    eax,0x8cc132ba
  4187fe:	adc    ebx,DWORD PTR [ecx-0x645289f6]
  418804:	mov    BYTE PTR [ebp-0x71],cl
  418807:	imul   esp,DWORD PTR [ebp+0x7b],0xb4727a35
  41880e:	pop    ss
  41880f:	out    0xf3,al
  418811:	jp     0x41887d
  418813:	test   eax,0xe1058d0c
  418818:	mov    edx,0x202b4093
  41881d:	fnsave [esi+eax*2]
  418820:	sahf   
  418821:	lds    ecx,FWORD PTR [eax-0x7a]
  418824:	cdq    
  418825:	mov    dh,0x20
  418827:	pop    ss
  418828:	out    0x8c,al
  41882a:	fstp   TBYTE PTR [ecx-0x35]
  41882d:	aad    0x5d
  41882f:	int3   
  418830:	(bad)  
  418831:	cmc    
  418832:	and    ecx,DWORD PTR [eax]
  418834:	mov    al,BYTE PTR [eax+ebx*1+0x44552148]
  41883b:	leave  
  41883c:	pushf  
  41883d:	lea    edx,[edx]
  41883f:	dec    edx
  418840:	mov    ebp,0x616bfada
  418845:	pop    esp
  418846:	das    
  418847:	cpuid  
  418849:	dec    ecx
  41884a:	and    DWORD PTR [edx-0x5a45977f],ebp
  418850:	inc    ecx
  418851:	jge    0x4188a6
  418853:	cwde   
  418854:	dec    eax
  418855:	adc    DWORD PTR [edi+0x2ef21700],eax
  41885b:	pushf  
  41885c:	push   eax
  41885d:	in     eax,dx
  41885e:	pop    esp
  41885f:	pop    edi
  418860:	and    DWORD PTR [ebp+0x19],ebp
  418863:	and    ah,0x81
  418866:	std    
  418867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418868:	push   ecx
  418869:	cmp    eax,0x621cd490
  41886e:	das    
  41886f:	sub    al,0x65
  418871:	aaa    
  418872:	mov    eax,0xdff1a14d
  418877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418878:	mov    ecx,0x92e2205b
  41887d:	loope  0x4188fd
  41887f:	add    bl,0x2
  418882:	jbe    0x41889a
  418884:	iret   
  418885:	mov    ch,0x7a
  418887:	adc    esp,eax
  418889:	xchg   ebx,eax
  41888a:	(bad)  
  41888b:	loopne 0x4188ce
  41888d:	or     edi,0x6a8258b8
  418893:	add    cl,BYTE PTR [edx+0x18da1ea2]
  418899:	and    eax,0x8a0b5670
  41889e:	test   bh,al
  4188a0:	cmp    BYTE PTR [esi+0x6057a60c],0xad
  4188a7:	das    
  4188a8:	push   0x6
  4188aa:	and    eax,0xbc8f9a38
  4188af:	(bad)  
  4188b0:	mov    al,ds:0x44e61283
  4188b5:	addr16 daa 
  4188b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b8:	push   cs
  4188b9:	imul   esi,DWORD PTR [edx],0xffffffd8
  4188bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188bd:	sbb    eax,0x967ec6ba
  4188c2:	das    
  4188c3:	std    
  4188c4:	aas    
  4188c5:	enter  0x6848,0xcb
  4188c9:	retf   
  4188ca:	mov    bl,0xa6
  4188cc:	cwde   
  4188cd:	add    eax,0xac9025e4
  4188d2:	int3   
  4188d3:	mov    ds:0xd640918a,al
  4188d8:	test   BYTE PTR [ebx-0x7531140b],al
  4188de:	loope  0x4188b6
  4188e0:	fistp  QWORD PTR [ecx+esi*8+0x5]
  4188e4:	dec    edi
  4188e5:	or     BYTE PTR [edi+0x4d],bh
  4188e8:	mov    dl,BYTE PTR [eax+0x2d]
  4188eb:	pop    es
  4188ec:	add    ch,ch
  4188ee:	or     eax,0xa08dde06
  4188f3:	mov    al,0xdb
  4188f5:	sbb    BYTE PTR [esp+edx*2+0x332eed0c],0xec
  4188fd:	sub    DWORD PTR [ecx],esp
  4188ff:	scas   al,BYTE PTR es:[edi]
  418900:	jno    0x418958
  418902:	retf   
  418903:	xor    eax,0xd710934a
  418908:	je     0x4188c7
  41890a:	iret   
  41890b:	cmp    BYTE PTR [ecx],dh
  41890d:	mov    esp,0x628a1762
  418912:	sbb    eax,ecx
  418914:	pop    eax
  418915:	jbe    0x4188fd
  418917:	les    eax,FWORD PTR [edi-0x3]
  41891a:	shl    BYTE PTR [ebp+0x42dd6b80],1
  418920:	ror    BYTE PTR [edi-0x6d],cl
  418923:	repz mov esp,DWORD PTR ds:0x11a5dab9
  41892a:	arpl   WORD PTR cs:[ebx+0x76de7c98],ax
  418931:	and    cl,BYTE PTR [esi-0x5a]
  418934:	bound  ebx,QWORD PTR [ebp+0x5f]
  418937:	es ret 
  418939:	push   ebp
  41893a:	pop    eax
  41893b:	scas   eax,DWORD PTR es:[edi]
  41893c:	mov    dl,BYTE PTR [esi-0x680026ca]
  418942:	push   0x66
  418944:	lds    eax,FWORD PTR [edi]
  418946:	and    esp,edx
  418948:	mov    gs,WORD PTR ds:[esi-0x37]
  41894c:	adc    al,0x76
  41894e:	cwde   
  41894f:	popa   
  418950:	das    
  418951:	int    0xde
  418953:	inc    edx
  418954:	add    BYTE PTR [edx],ch
  418956:	das    
  418957:	add    BYTE PTR [esi+0x25491c79],ah
  41895d:	or     eax,0x8d67d0b8
  418962:	mov    edi,DWORD PTR ds:[ebp+0x11]
  418966:	ja     0x346d88dc
  41896c:	add    esp,eax
  41896e:	imul   ebp,DWORD PTR [ebx-0x4c35aaf6],0xb
  418975:	lea    edx,[eax+0x31]
  418978:	push   0xe60ac1d7
  41897d:	jmp    0x4189ad
  41897f:	inc    esp
  418980:	pop    es
  418981:	ret    0x4331
  418984:	arpl   WORD PTR [ebp+0x70],bp
  418987:	mov    cl,0xe5
  418989:	push   0xffffff9e
  41898b:	sub    DWORD PTR [esi-0x44],ebx
  41898e:	ret    
  41898f:	out    0x4d,al
  418991:	cli    
  418992:	loopne 0x4189ab
  418994:	mov    cl,BYTE PTR [eax]
  418996:	test   eax,ecx
  418998:	retf   
  418999:	add    ch,BYTE PTR [eax+esi*1]
  41899c:	jp     0x4189c3
  41899e:	mov    fs,WORD PTR [esi+0x169c66bb]
  4189a4:	jle    0x4189a2
  4189a6:	cmp    ch,BYTE PTR [edx]
  4189a8:	mov    ah,BYTE PTR [eax+ebp*2]
  4189ab:	and    al,0x3b
  4189ad:	test   al,0xe8
  4189af:	je     0x418a07
  4189b1:	(bad)  
  4189b2:	mov    ebx,0x3f923ca6
  4189b7:	mov    ds:0x954d8cda,al
  4189bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189bd:	jno    0x418a1c
  4189bf:	outs   dx,BYTE PTR ds:[esi]
  4189c0:	retf   0x2c1
  4189c3:	sub    al,cl
  4189c5:	push   ebx
  4189c6:	pop    ebx
  4189c7:	xchg   ecx,eax
  4189c8:	int    0x1a
  4189ca:	scas   eax,DWORD PTR es:[edi]
  4189cb:	jno    0x418971
  4189cd:	rcl    edi,cl
  4189cf:	mov    ebp,0x592f633a
  4189d4:	sbb    eax,DWORD PTR [ebx]
  4189d6:	(bad)  
  4189d7:	cmp    BYTE PTR [ecx],bh
  4189d9:	test   DWORD PTR [ecx],edi
  4189db:	mov    WORD PTR [ecx-0x34],gs
  4189de:	cs jb  0x418a0d
  4189e1:	pop    esi
  4189e2:	jbe    0x418a08
  4189e4:	mov    WORD PTR [ebx+0x2f],?
  4189e7:	popa   
  4189e8:	int3   
  4189e9:	retf   
  4189ea:	call   0xb1a6:0x47422041
  4189f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189f2:	mov    edx,DWORD PTR [ebx-0x1cbb3bc6]
  4189f8:	mov    eax,DWORD PTR [esi+0x56e97133]
  4189fe:	cdq    
  4189ff:	sbb    eax,0xa6579cea
  418a04:	fmulp  st(0),st
  418a06:	xchg   BYTE PTR [esi-0x27],ah
  418a09:	push   cs
  418a0a:	sub    al,0x1a
  418a0c:	imul   ebp,ecx,0x5c
  418a0f:	dec    edi
  418a10:	mov    bl,cl
  418a12:	leave  
  418a13:	loope  0x4189ab
  418a15:	and    al,0xe6
  418a17:	pop    esp
  418a18:	pop    ebx
  418a19:	lea    ecx,[ebx]
  418a1b:	lahf   
  418a1c:	loop   0x418a3b
  418a1e:	outs   dx,DWORD PTR ds:[esi]
  418a1f:	mov    edx,0xa33d6b6a
  418a24:	(bad)  
  418a26:	das    
  418a27:	rcl    BYTE PTR [eax-0x45],cl
  418a2a:	xchg   BYTE PTR [edi],ah
  418a2c:	adc    cl,BYTE PTR [ebp+0x22317df2]
  418a32:	imul   ecx,DWORD PTR [ebx],0x1c
  418a35:	(bad)  
  418a36:	das    
  418a37:	push   cs
  418a38:	add    bl,dl
  418a3a:	ret    
  418a3b:	inc    ebx
  418a3c:	jecxz  0x418abc
  418a3e:	fbld   TBYTE PTR [ebp-0x70afd9f9]
  418a44:	jmp    0x418a80
  418a46:	enter  0xc55a,0xe4
  418a4a:	in     eax,dx
  418a4b:	mov    dl,0xb4
  418a4d:	push   ebx
  418a4e:	das    
  418a4f:	jae    0x418a1f
  418a51:	and    DWORD PTR [esi-0x6887346f],ebp
  418a57:	mov    ch,BYTE PTR [edi+edi*2-0x6a765864]
  418a5e:	mov    al,ds:0x59d974fd
  418a63:	sbb    DWORD PTR [edx-0x554b2656],ecx
  418a69:	mov    bl,0xd0
  418a6b:	ss pop ss
  418a6d:	lea    ebx,[ebx+0x76]
  418a70:	pop    esi
  418a71:	ds inc edi
  418a73:	cmp    edi,esi
  418a75:	mov    dh,0x2f
  418a77:	xor    eax,0xfb7ffde9
  418a7c:	cwde   
  418a7d:	and    BYTE PTR [ebp+0x259890a5],dh
  418a83:	xlat   BYTE PTR ds:[ebx]
  418a84:	jae    0x418a8e
  418a86:	scas   eax,DWORD PTR es:[edi]
  418a87:	xchg   esi,eax
  418a88:	jmp    0x45a2:0x56a83682
  418a8f:	inc    esi
  418a90:	leave  
  418a91:	push   ecx
  418a92:	fidivr DWORD PTR [ecx+eiz*2+0x7e]
  418a96:	mov    ds:0x97d954a6,eax
  418a9b:	push   ebx
  418a9c:	(bad)  
  418a9d:	jno    0x418aa5
  418a9f:	jmp    0x418a2b
  418aa1:	sub    BYTE PTR [eax],bh
  418aa3:	jnp    0x418a48
  418aa5:	daa    
  418aa6:	or     edx,DWORD PTR [esi-0x19]
  418aa9:	xchg   esi,eax
  418aaa:	fldenv [edi+0x3daf703b]
  418ab0:	xchg   ebp,eax
  418ab1:	rcl    BYTE PTR [edi],cl
  418ab3:	aad    0x8d
  418ab5:	sub    BYTE PTR [edi-0x70],dl
  418ab8:	mov    ds:0x4d61bf1b,al
  418abd:	popa   
  418abe:	fisub  DWORD PTR [ebp-0x67991966]
  418ac4:	dec    ecx
  418ac5:	(bad)  
  418ac7:	mov    BYTE PTR [edx+0x6fac620d],cl
  418acd:	dec    esp
  418ace:	fs call 0x5e42:0xa5db0186
  418ad6:	inc    ebp
  418ad7:	push   ebx
  418ad8:	sbb    ebp,DWORD PTR ds:0xd58ab6c5
  418ade:	dec    edx
  418adf:	rcr    DWORD PTR [edi+0x287d66a8],0x8d
  418ae6:	sbb    BYTE PTR [esp+eax*2],bh
  418ae9:	xor    ebp,esp
  418aeb:	les    edi,FWORD PTR [eax]
  418aed:	and    DWORD PTR [edi],ebp
  418aef:	sahf   
  418af0:	aam    0x13
  418af2:	xchg   ah,cl
  418af4:	lds    eax,FWORD PTR [esi-0x161359bc]
  418afa:	pop    ebx
  418afb:	mov    ah,0xe5
  418afd:	sar    DWORD PTR [eax],cl
  418aff:	xchg   edi,eax
  418b00:	mov    bl,BYTE PTR [esi-0x7cc11b74]
  418b06:	push   cs
  418b07:	pop    eax
  418b08:	fisttp DWORD PTR [ebp+0x26a09e91]
  418b0e:	or     ebx,ecx
  418b10:	xchg   DWORD PTR [edi],esi
  418b12:	out    0x21,al
  418b14:	xchg   esp,eax
  418b15:	js     0x418af1
  418b17:	out    dx,al
  418b18:	cmp    al,0xad
  418b1a:	mov    ds:0xf59becf3,eax
  418b1f:	xchg   ecx,eax
  418b20:	or     eax,0x5779af01
  418b25:	cli    
  418b26:	and    eax,0x23814d99
  418b2b:	shl    esp,0xa2
  418b2e:	jne    0x418b40
  418b30:	dec    edx
  418b31:	xchg   BYTE PTR ds:0xa6e827f1,dl
  418b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b38:	sti    
  418b39:	aas    
  418b3a:	sbb    bx,WORD PTR cs:[edi]
  418b3e:	cli    
  418b3f:	xor    dh,al
  418b41:	sub    dl,BYTE PTR ds:[ebx]
  418b44:	cmp    cl,BYTE PTR ds:0x53239f96
  418b4a:	ins    BYTE PTR es:[edi],dx
  418b4b:	cwde   
  418b4c:	mov    ecx,0xc9936305
  418b51:	jnp    0x418b02
  418b53:	inc    esi
  418b54:	sub    al,0xbc
  418b56:	(bad)  
  418b57:	out    0x76,al
  418b59:	sahf   
  418b5a:	das    
  418b5b:	mov    WORD PTR [edi],ds
  418b5d:	aad    0xeb
  418b5f:	xchg   ecx,eax
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	jae    0x418b75
  418b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b64:	int    0x47
  418b66:	dec    eax
  418b67:	pop    ebp
  418b68:	shl    DWORD PTR [edi*1-0x3c8175a5],cl
  418b6f:	cs mov eax,0xfc629f4b
  418b75:	mov    bh,BYTE PTR [edx-0x43adbb9b]
  418b7b:	xchg   esi,eax
  418b7c:	ins    DWORD PTR es:[edi],dx
  418b7d:	xchg   ebp,eax
  418b7e:	mov    edx,?
  418b80:	mov    dl,BYTE PTR [ecx+eiz*4+0x59]
  418b84:	mov    bl,0x64
  418b86:	mov    dh,0x13
  418b88:	xor    bh,0xa7
  418b8b:	xchg   ebx,eax
  418b8c:	inc    eax
  418b8d:	clc    
  418b8e:	scas   al,BYTE PTR es:[edi]
  418b8f:	mov    bh,0xe0
  418b91:	jns    0x418b65
  418b93:	jg     0x418bc1
  418b95:	cmp    dh,BYTE PTR [eax]
  418b97:	fist   WORD PTR [edi-0x369910f7]
  418b9d:	inc    edx
  418b9e:	scas   eax,DWORD PTR es:[edi]
  418b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba0:	jae    0x418bca
  418ba2:	and    DWORD PTR [esi],esi
  418ba4:	adc    eax,0xbc912f54
  418ba9:	mov    esp,0x780c904d
  418bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418baf:	mov    esi,0xa62e7f3c
  418bb4:	adc    ch,BYTE PTR [esi]
  418bb6:	and    eax,eax
  418bb8:	(bad)  
  418bba:	push   ds
  418bbb:	sbb    al,0x8a
  418bbd:	adc    al,0xa4
  418bbf:	clc    
  418bc0:	mov    cl,0xcd
  418bc2:	dec    cx
  418bc4:	inc    edx
  418bc5:	inc    ebp
  418bc6:	mov    edx,0x9aaa7b2
  418bcb:	stos   DWORD PTR es:[edi],eax
  418bcc:	push   esi
  418bcd:	or     eax,0x6bc125dc
  418bd2:	add    BYTE PTR [eax],dh
  418bd4:	mov    bl,BYTE PTR [edi+0x6]
  418bd7:	jo     0x418be5
  418bd9:	mov    edx,0xa2291a17
  418bde:	arpl   WORD PTR [ecx+0x15888e78],dx
  418be4:	mov    edx,0x840caf37
  418be9:	xor    eax,0x6628aa30
  418bee:	fisttp WORD PTR [eax-0x2e30c227]
  418bf4:	dec    ebp
  418bf5:	(bad)  
  418bf6:	int    0x68
  418bf8:	push   ecx
  418bf9:	xchg   ecx,eax
  418bfa:	(bad)  
  418bfb:	mov    bp,0x2f04
  418bff:	je     0x418bd4
  418c01:	lahf   
  418c02:	enter  0x944c,0x1b
  418c06:	outs   dx,DWORD PTR ds:[esi]
  418c07:	mov    bl,0xb0
  418c09:	fcom   st(7)
  418c0b:	or     BYTE PTR fs:0xd04a14a4,cl
  418c12:	sbb    ecx,esp
  418c14:	mov    bh,BYTE PTR [eax]
  418c16:	cmp    ah,ah
  418c18:	xor    esp,0xa0f955ea
  418c1e:	fwait
  418c1f:	xchg   edi,edx
  418c21:	setp   ah
  418c24:	add    ah,al
  418c26:	scas   eax,DWORD PTR es:[edi]
  418c27:	and    eax,0xaa41d657
  418c2c:	mov    al,BYTE PTR [ebx-0x2ae509dd]
  418c32:	stc    
  418c33:	das    
  418c34:	out    dx,al
  418c35:	xchg   BYTE PTR [edx],ch
  418c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c38:	aas    
  418c39:	xor    BYTE PTR [edx-0x629c7af5],0x3c
  418c40:	mov    dh,cl
  418c42:	jmp    0x6733:0xba98fd5e
  418c49:	lea    esp,[eax-0x7e]
  418c4c:	adc    ebx,DWORD PTR [ebx+0x5d]
  418c4f:	add    dl,bh
  418c51:	xor    eax,0xd531932f
  418c56:	push   0x36
  418c58:	sbb    BYTE PTR [ebx],0xb2
  418c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c5c:	lock mov cl,0xe1
  418c5f:	in     al,0xaf
  418c61:	jno    0x418c84
  418c63:	xchg   edi,eax
  418c64:	mov    bl,ah
  418c66:	arpl   WORD PTR [edi-0x45561278],ax
  418c6c:	aad    0x8c
  418c6e:	into   
  418c6f:	push   ds
  418c70:	repz leave 
  418c72:	mov    dl,0x47
  418c74:	xchg   ebx,eax
  418c75:	or     eax,0x774d321d
  418c7a:	dec    ebp
  418c7b:	sbb    DWORD PTR [edx+ecx*4],ebx
  418c7e:	inc    ecx
  418c7f:	cmp    esp,esp
  418c81:	daa    
  418c82:	cmp    al,0xb6
  418c84:	mov    eax,ds:0x8ae267ae
  418c89:	xor    ah,0xc4
  418c8c:	sar    BYTE PTR [ecx+eiz*1-0x31],1
  418c90:	icebp  
  418c91:	lea    ebx,[ecx-0x10]
  418c94:	sbb    DWORD PTR [edi],0x4adeba2a
  418c9a:	xor    bh,BYTE PTR [ebx-0x70]
  418c9d:	sbb    eax,0x3da9654f
  418ca2:	jmp    0x50e8:0x7b8d2639
  418ca9:	push   es
  418caa:	lock xchg BYTE PTR [edi+ebp*4+0x7b6d302f],cl
  418cb2:	fidivr WORD PTR [eax]
  418cb4:	add    bl,BYTE PTR [ecx-0x1]
  418cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cb8:	xor    eax,0x3daa89ef
  418cbd:	mov    bh,0xee
  418cbf:	int    0x8a
  418cc1:	nop
  418cc2:	out    dx,eax
  418cc3:	into   
  418cc4:	cs call 0x8d7bb8ad
  418cca:	mov    dh,0xdb
  418ccc:	retf   
  418ccd:	xchg   edi,eax
  418cce:	and    DWORD PTR [ebx],edx
  418cd0:	xor    DWORD PTR [esi+0x44],ecx
  418cd3:	cwde   
  418cd4:	mov    ah,0x6
  418cd6:	outs   dx,DWORD PTR ds:[esi]
  418cd7:	es jge 0x418d16
  418cda:	lahf   
  418cdb:	aad    0x62
  418cdd:	lea    ebx,[esi]
  418cdf:	(bad)  
  418ce0:	mov    dl,0x92
  418ce2:	mov    DWORD PTR [ebx+0x10],esi
  418ce5:	arpl   WORD PTR [edx],si
  418ce7:	or     DWORD PTR [ecx-0x57],eax
  418cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ceb:	xchg   esi,eax
  418cec:	pop    ecx
  418ced:	in     eax,dx
  418cee:	icebp  
  418cef:	push   eax
  418cf0:	mov    eax,0xa8a6adf3
  418cf5:	retf   
  418cf6:	xchg   ecx,eax
  418cf7:	lods   al,BYTE PTR ds:[esi]
  418cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf9:	mov    edx,ss
  418cfb:	bound  ecx,QWORD PTR [edx+0x90cb3f5]
  418d01:	jp     0x418ca1
  418d03:	scas   al,BYTE PTR es:[edi]
  418d04:	fimul  WORD PTR [ebp+0x41bc87d0]
  418d0a:	imul   ebx,DWORD PTR [ecx+ecx*2-0x7200ce14],0x9f1868a3
  418d15:	sbb    eax,0x6109339b
  418d1a:	xlat   BYTE PTR ds:[ebx]
  418d1b:	adc    BYTE PTR [edi+0x42fb1e91],cl
  418d21:	push   cs
  418d22:	push   edi
  418d23:	push   edi
  418d24:	sbb    dh,dl
  418d26:	sub    eax,0x45378a44
  418d2b:	cmp    esi,ebx
  418d2d:	daa    
  418d2e:	adc    bh,BYTE PTR [ebx]
  418d30:	imul   ecx,DWORD PTR [ebp+0x5b0c8e5f],0xffffffee
  418d37:	pop    ss
  418d38:	aas    
  418d39:	mov    ch,BYTE PTR [edi]
  418d3b:	out    0x15,eax
  418d3d:	pop    ss
  418d3e:	jmp    0x5bb5bd26
  418d43:	mov    eax,ds:0x846e956f
  418d48:	in     al,0xe3
  418d4a:	cld    
  418d4b:	inc    cx
  418d4d:	cli    
  418d4e:	out    0xa3,eax
  418d50:	fs loope 0x418ce4
  418d53:	inc    ecx
  418d54:	lea    eax,[edx]
  418d56:	add    edx,eax
  418d58:	pop    es
  418d59:	jmp    0xa0cf:0xc2020935
  418d60:	xchg   ecx,eax
  418d61:	and    DWORD PTR [ebx],esi
  418d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d64:	ja     0x418d14
  418d66:	cmp    al,0xed
  418d68:	adc    BYTE PTR [esi-0xe],bl
  418d6b:	add    DWORD PTR [edx],eax
  418d6d:	nop
  418d6e:	inc    ebx
  418d6f:	sub    dh,0xf6
  418d72:	fmul   QWORD PTR cs:[ecx-0x57]
  418d76:	cdq    
  418d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d78:	add    ecx,DWORD PTR [esi-0x7109b70f]
  418d7e:	(bad)
  418d82:	das    
  418d83:	push   0x1d
  418d85:	out    0xda,al
  418d87:	scas   al,BYTE PTR es:[edi]
  418d88:	pop    ebx
  418d89:	push   cs
  418d8a:	xchg   edx,edi
  418d8c:	loop   0x418d1b
  418d8e:	rcr    DWORD PTR [edi+0x200b6177],0x9a
  418d95:	lods   eax,DWORD PTR ds:[esi]
  418d96:	das    
  418d97:	xchg   ecx,eax
  418d98:	xchg   ch,dl
  418d9a:	gs xchg edx,eax
  418d9c:	pop    esp
  418d9d:	fadd   QWORD PTR [ecx-0x5a]
  418da0:	pushf  
  418da1:	test   DWORD PTR ds:0x78692687,esp
  418da7:	xchg   BYTE PTR [ecx+0x6f6ffefc],cl
  418dad:	outs   dx,BYTE PTR ds:[esi]
  418dae:	int3   
  418daf:	aad    0x88
  418db1:	xchg   esp,eax
  418db2:	push   ebx
  418db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db4:	xchg   DWORD PTR [edx+eiz*8+0x2d56d56],edi
  418dbb:	mov    ah,0x2
  418dbd:	mov    ds:0x38639e32,eax
  418dc2:	push   ecx
  418dc3:	inc    edi
  418dc4:	les    eax,FWORD PTR ds:0x8d5aac90
  418dca:	popa   
  418dcb:	imul   ebp,esi,0xffffffbd
  418dce:	cli    
  418dcf:	pop    ebx
  418dd0:	mov    dh,0x1f
  418dd2:	das    
  418dd3:	ds ret 
  418dd5:	fadd   DWORD PTR [ebx-0x6a50045b]
  418ddb:	bound  ebp,QWORD PTR ds:0xfbb2ed2
  418de1:	outs   dx,BYTE PTR ds:[esi]
  418de2:	retf   
  418de3:	mov    bh,0x81
  418de5:	retf   0x6d2e
  418de8:	retf   0xd561
  418deb:	fist   DWORD PTR [eax]
  418ded:	or     al,0xba
  418def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df1:	repnz cmp ah,bl
  418df4:	adc    esp,DWORD PTR [edi+0x218a0ef6]
  418dfa:	adc    DWORD PTR [ecx+0x6b259032],edi
  418e00:	pop    edi
  418e01:	lea    ecx,[eax+edx*1-0x2932baf4]
  418e08:	mov    al,0xdf
  418e0a:	sub    bl,BYTE PTR [edi]
  418e0c:	sub    ecx,DWORD PTR [esi-0x44]
  418e0f:	dec    DWORD PTR [edx]
  418e11:	jmp    0x89a6:0x8d0bbbba
  418e18:	sbb    eax,0x50eeba58
  418e1d:	fild   QWORD PTR [esi]
  418e1f:	push   0xad13bce4
  418e24:	pop    ds
  418e25:	and    ah,dh
  418e27:	xchg   ecx,eax
  418e28:	jmp    0x4ca5:0xdcdf3044
  418e2f:	mov    bh,ch
  418e31:	cmc    
  418e32:	sub    dh,BYTE PTR [ebp+0x442eab70]
  418e38:	pop    eax
  418e39:	test   BYTE PTR ds:0x721aea87,ch
  418e3f:	jl     0x418eba
  418e41:	xchg   ebx,eax
  418e42:	push   ebx
  418e43:	mov    eax,0xd8302cc1
  418e48:	(bad)  
  418e49:	rcr    esi,1
  418e4b:	icebp  
  418e4c:	jp     0x418e1e
  418e4e:	das    
  418e4f:	and    al,0xc
  418e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e52:	stc    
  418e53:	not    dh
  418e55:	jmp    0x8094a028
  418e5a:	jns    0x418e02
  418e5c:	push   es
  418e5d:	fs xchg ebx,eax
  418e5f:	xchg   ebx,eax
  418e60:	and    DWORD PTR [edx-0x4d759d13],eax
  418e66:	mov    esi,0x2a44fff5
  418e6b:	out    dx,eax
  418e6c:	push   ss
  418e6d:	(bad)  
  418e6e:	repz or ecx,DWORD PTR ss:[edi+0x3a]
  418e73:	inc    ecx
  418e74:	xor    eax,0xccdf2f84
  418e79:	stos   BYTE PTR es:[di],al
  418e7b:	mov    ebp,0xa68b1998
  418e80:	jmp    0x418ef0
  418e82:	mov    ebp,0x1a3cf60
  418e87:	jge    0x418e13
  418e89:	test   DWORD PTR [eax],ecx
  418e8b:	fmul   QWORD PTR [ebp-0x2a979af7]
  418e91:	lea    edi,[eax*4+0x6596317d]
  418e98:	mov    ch,dl
  418e9a:	xor    ebx,edi
  418e9c:	and    DWORD PTR [ecx+0x0],esp
  418e9f:	xor    esp,edx
  418ea1:	and    eax,0x8cb4b9fb
  418ea6:	aad    0xb6
  418ea8:	mov    edi,0xef266aa2
  418ead:	loope  0x418eab
  418eaf:	int    0x8a
  418eb1:	scas   al,BYTE PTR es:[edi]
  418eb2:	push   0xbfcb8f68
  418eb7:	cmp    al,0x53
  418eb9:	xchg   ebx,eax
  418eba:	or     eax,0xaeca71af
  418ebf:	cmc    
  418ec0:	test   al,0x83
  418ec2:	and    al,0x3
  418ec4:	jb     0x418e5d
  418ec6:	xor    al,BYTE PTR [eax-0x1b]
  418ec9:	loope  0x418e80
  418ecb:	sbb    esp,eax
  418ecd:	sbb    eax,0xe9c2a4e4
  418ed2:	stos   DWORD PTR es:[edi],eax
  418ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed4:	(bad)  
  418ed5:	loopne 0x418ebe
  418ed7:	call   0xcf8a:0x8567f593
  418ede:	cmp    dh,BYTE PTR [eax+esi*1-0x604248ab]
  418ee5:	lea    esi,[edx]
  418ee7:	mov    cl,0x3b
  418ee9:	jae    0x418f12
  418eeb:	add    esp,esp
  418eed:	jmp    0x92ae:0x3591b22e
  418ef4:	push   cs
  418ef5:	or     DWORD PTR [ebx-0x4d],0xe777b18e
  418efc:	ficomp WORD PTR [edx]
  418efe:	shr    BYTE PTR [ebx+0x34],cl
  418f01:	in     eax,dx
  418f02:	hlt    
  418f03:	push   edi
  418f04:	mov    dl,BYTE PTR [edx+0x1559b36b]
  418f0a:	push   0x7e8d0c0b
  418f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f10:	xchg   DWORD PTR [eax+0x6e],eax
  418f13:	cs call 0x3875c9dd
  418f19:	test   ecx,esi
  418f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1c:	ins    DWORD PTR es:[edi],dx
  418f1d:	pop    ebp
  418f1e:	or     ebx,eax
  418f20:	leave  
  418f21:	add    DWORD PTR [eax-0x60],ebp
  418f24:	in     eax,dx
  418f25:	sbb    BYTE PTR [ecx+0x7812aada],dh
  418f2b:	jae    0x418f9f
  418f2d:	imul   ebp,DWORD PTR [edi],0xffffffd1
  418f30:	jo     0x418f4d
  418f32:	or     ebx,DWORD PTR [esp+ebp*1-0x4]
  418f36:	cmc    
  418f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f38:	or     DWORD PTR [edx-0x7d],ebx
  418f3b:	or     eax,0x8c3a60ef
  418f40:	mov    eax,ebx
  418f42:	sbb    al,0x89
  418f44:	(bad)  
  418f45:	je     0x418f94
  418f47:	push   cs
  418f48:	inc    esp
  418f49:	mov    ds:0x75a1a67f,eax
  418f4e:	(bad)  
  418f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f50:	leave  
  418f51:	jno    0x418eef
  418f53:	ret    
  418f54:	mov    DWORD PTR [edx+0x14],esi
  418f57:	rol    DWORD PTR [ecx+0x2f],1
  418f5a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418f5c:	ds xchg ecx,eax
  418f5e:	sti    
  418f5f:	xchg   ebp,eax
  418f60:	out    0x1c,eax
  418f62:	pusha  
  418f63:	dec    DWORD PTR [edx+0x5bac88a6]
  418f69:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  418f6b:	imul   esi,DWORD PTR [edx],0x9179768a
  418f71:	aam    0xa9
  418f73:	jbe    0x418fd5
  418f75:	retf   
  418f76:	rcr    DWORD PTR [edx+ecx*4],cl
  418f79:	add    eax,0xc8a23aff
  418f7e:	retf   
  418f7f:	pop    edi
  418f80:	add    DWORD PTR [ebx-0x6ebe4a4f],ecx
  418f86:	sahf   
  418f87:	cmp    eax,ebx
  418f89:	cmp    eax,0x813005c6
  418f8e:	popa   
  418f8f:	jecxz  0x418f1b
  418f91:	add    esi,esi
  418f93:	hlt    
  418f94:	hlt    
  418f95:	mov    ah,0xf3
  418f97:	ret    
  418f98:	mov    al,0x8a
  418f9a:	lds    ebx,FWORD PTR [edx-0x59369070]
  418fa0:	std    
  418fa1:	mov    esp,0x1b8ae275
  418fa6:	pushf  
  418fa7:	and    bh,BYTE PTR [esi-0x6f]
  418faa:	jg     0x418f54
  418fac:	ja     0x418f41
  418fae:	into   
  418faf:	jb     0x418faa
  418fb1:	cmc    
  418fb2:	scas   al,BYTE PTR es:[edi]
  418fb3:	pop    esp
  418fb4:	lods   eax,DWORD PTR ds:[esi]
  418fb5:	dec    ebp
  418fb6:	xor    eax,0x6b212a39
  418fbb:	mov    ah,0x8a
  418fbd:	sbb    al,0x6c
  418fbf:	popf   
  418fc0:	mov    ebp,0x4c026d6
  418fc5:	les    ecx,FWORD PTR [eax+0xf]
  418fc8:	mov    ch,BYTE PTR [edi+0x77]
  418fcb:	fsubr  st,st(4)
  418fcd:	retf   
  418fce:	pushf  
  418fcf:	lods   al,BYTE PTR es:[esi]
  418fd1:	pop    edi
  418fd2:	mov    bl,ch
  418fd4:	mov    bl,BYTE PTR [ecx-0x41]
  418fd7:	aas    
  418fd8:	cmp    esi,ecx
  418fda:	cwde   
  418fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fdc:	and    eax,0xe60e371f
  418fe1:	mov    bh,0xab
  418fe3:	dec    BYTE PTR [edx-0xff60ee7]
  418fe9:	ficom  DWORD PTR [ecx-0x1b]
  418fec:	clc    
  418fed:	lea    esi,ds:0xb42128bd
  418ff3:	xchg   DWORD PTR [esi],edx
  418ff5:	xor    al,BYTE PTR [ebp-0x2b]
  418ff8:	stc    
  418ff9:	stos   BYTE PTR es:[edi],al
  418ffa:	out    dx,eax
  418ffb:	iret   
  418ffc:	or     DWORD PTR [eax],0x8d1b6b46
  419002:	mov    eax,?
  419004:	mov    edx,DWORD PTR [edi-0x42abe7a4]
  41900a:	das    
  41900b:	mov    ebx,0xf320f75d
  419010:	push   es
  419011:	out    0x39,eax
  419013:	rcl    BYTE PTR [ecx],1
  419015:	(bad)  
  419016:	iret   
  419017:	xchg   esi,eax
  419018:	daa    
  419019:	xor    eax,edi
  41901b:	cmp    eax,0x19444325
  419020:	aad    0xda
  419022:	add    dl,BYTE PTR [edx-0x76]
  419025:	sbb    BYTE PTR [ecx-0x15864931],ch
  41902b:	retf   
  41902c:	fmul   QWORD PTR [ebp+0x56d6dc54]
  419032:	xchg   ebp,eax
  419033:	dec    edi
  419034:	sbb    ah,BYTE PTR [edx-0x2a758899]
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	pusha  
  41903c:	pop    ebp
  41903d:	mov    edi,0x966b0fe7
  419042:	cs xor eax,0x712eea6a
  419048:	or     BYTE PTR [ecx],0xd0
  41904b:	and    BYTE PTR [esi-0x75e523a6],dh
  419051:	rcr    ecx,1
  419053:	xor    BYTE PTR [edi],ch
  419055:	mov    cl,0xa1
  419057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419058:	mov    edx,0x22eebd13
  41905d:	cwde   
  41905e:	push   es
  41905f:	fimul  DWORD PTR [edx+0x4ea480ad]
  419065:	popa   
  419066:	sbb    edx,DWORD PTR [ebp-0x6e]
  419069:	lea    esp,[eax+0x2c]
  41906c:	inc    eax
  41906d:	add    cl,BYTE PTR [edi+eax*4]
  419070:	sbb    ecx,esi
  419072:	das    
  419073:	mov    eax,0x5c64e34c
  419078:	mov    WORD PTR [ebp-0x51],?
  41907b:	imul   eax,DWORD PTR cs:[esi],0xffffffd6
  41907f:	test   DWORD PTR [ebx+0x10e42f9a],ebp
  419085:	aad    0xec
  419087:	in     eax,0x26
  419089:	add    ecx,DWORD PTR [esp+ecx*4-0x395111ca]
  419090:	sti    
  419091:	dec    ebp
  419092:	mov    dh,0xa4
  419094:	inc    ebp
  419095:	xlat   BYTE PTR ds:[ebx]
  419096:	cs in  eax,dx
  419098:	std    
  419099:	mov    dh,0x63
  41909b:	inc    ecx
  41909c:	je     0x419063
  41909e:	adc    esp,DWORD PTR [esi+0x1445ffa6]
  4190a4:	mov    ds:0x8a940ca3,eax
  4190a9:	pop    eax
  4190aa:	inc    esp
  4190ab:	aad    0x90
  4190ad:	dec    ecx
  4190ae:	(bad)  
  4190af:	stos   BYTE PTR es:[edi],al
  4190b0:	(bad)  
  4190b1:	(bad)
  4190b4:	lea    edi,[ebx]
  4190b6:	ins    DWORD PTR es:[edi],dx
  4190b7:	adc    edi,DWORD PTR [ebp+ecx*4+0x3368ae0f]
  4190be:	das    
  4190bf:	push   ss
  4190c0:	out    0x7e,al
  4190c2:	retf   0x668f
  4190c5:	stos   BYTE PTR es:[edi],al
  4190c6:	ins    BYTE PTR es:[edi],dx
  4190c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c8:	inc    eax
  4190c9:	jp     0x4190d3
  4190cb:	cs jne 0x4190ae
  4190ce:	mov    ah,0xfc
  4190d0:	mov    al,BYTE PTR [ebp+ecx*2+0x7f545342]
  4190d7:	shl    BYTE PTR [esi-0x73],cl
  4190da:	aaa    
  4190db:	push   ebx
  4190dc:	push   ds
  4190dd:	sub    cl,BYTE PTR [ecx+0x320ee3e5]
  4190e3:	mov    dl,0xcf
  4190e5:	mov    ebx,0xd51c13dd
  4190ea:	rcl    esp,1
  4190ec:	loope  0x41907b
  4190ee:	mov    ebx,0xa997a79d
  4190f3:	daa    
  4190f4:	sbb    eax,0x733f2f24
  4190f9:	inc    eax
  4190fa:	add    edi,DWORD PTR [ebp-0x597b6f17]
  419100:	mov    bl,0x15
  419102:	jmp    0x8aeb:0xfb55d036
  419109:	sar    BYTE PTR [esp+edx*1],cl
  41910c:	cmp    al,0xb5
  41910e:	pop    esi
  41910f:	xchg   ecx,eax
  419110:	das    
  419111:	lea    edi,[edi]
  419113:	(bad)  
  419114:	ja     0x419107
  419116:	dec    edi
  419117:	xlat   BYTE PTR ds:[ebx]
  419118:	inc    edx
  419119:	mov    ds:0x13aa3644,al
  41911e:	das    
  41911f:	jo     0x41916a
  419121:	and    BYTE PTR [edx+0xaf1b23b],ah
  419127:	stos   BYTE PTR es:[edi],al
  419128:	mov    edx,0x541057dc
  41912d:	or     eax,0xf38ce48e
  419132:	das    
  419133:	cli    
  419134:	sbb    DWORD PTR [eax-0x150058c1],ebp
  41913a:	pop    esi
  41913b:	push   ss
  41913c:	imul   ecx,DWORD PTR [ebp+0x4f7a51b5],0x1db35f3e
  419146:	das    
  419147:	sub    eax,0xf0d133da
  41914c:	jg     0x4190fd
  41914e:	fstp   DWORD PTR [edx-0x57]
  419151:	(bad)  
  419152:	mov    bl,0xcc
  419154:	or     al,BYTE PTR [edi-0x2d]
  419157:	mov    ebx,0xb49fd5d4
  41915c:	lea    ebx,[ebx]
  41915e:	lods   al,BYTE PTR ds:[esi]
  41915f:	aas    
  419160:	adc    DWORD PTR [ebp+0x5789dcaf],esi
  419166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419168:	iret   
  419169:	stc    
  41916a:	sti    
  41916b:	iret   
  41916c:	out    dx,eax
  41916d:	or     cl,BYTE PTR [ecx-0x3e]
  419170:	mov    cl,BYTE PTR [esi]
  419172:	out    dx,al
  419173:	xlat   BYTE PTR ds:[ebx]
  419174:	adc    ebp,DWORD PTR [ebx+0x1]
  419177:	fstp   TBYTE PTR [edx-0x73]
  41917a:	imul   eax,DWORD PTR [esi],0x5550bb14
  419180:	nop
  419181:	sbb    esp,esp
  419183:	gs (bad) 
  419185:	mov    ah,0x22
  419187:	or     dl,al
  419189:	xor    DWORD PTR [eax],0x6c6cf471
  41918f:	fs xchg dl,bh
  419192:	inc    ebx
  419193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419194:	leave  
  419195:	pusha  
  419196:	popa   
  419197:	dec    edx
  419198:	sbb    eax,0x8a3374f1
  41919d:	cs jb  0x419134
  4191a0:	cmp    cl,BYTE PTR [eax-0x6ce31636]
  4191a6:	dec    esp
  4191a7:	xchg   ebp,eax
  4191a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a9:	mov    ah,0xef
  4191ab:	xor    eax,0x3813744
  4191b0:	mov    bh,dl
  4191b2:	pop    esp
  4191b3:	jl     0x419178
  4191b5:	mov    cl,0x9d
  4191b7:	push   0xffffffb1
  4191b9:	lea    esp,[ecx+0x3ee1cfce]
  4191bf:	xchg   edx,eax
  4191c0:	sbb    DWORD PTR [edi+0x2f],ebx
  4191c3:	rol    DWORD PTR [edi+ebp*2-0x4c],0x6d
  4191c8:	cmp    DWORD PTR [edi+0x69],esi
  4191cb:	mov    fs,WORD PTR [ecx+ebp*4]
  4191ce:	mov    al,0x52
  4191d0:	into   
  4191d1:	inc    edx
  4191d2:	mov    ebx,0x3df9ddb2
  4191d7:	out    dx,al
  4191d8:	mov    ah,BYTE PTR [edx]
  4191da:	inc    edx
  4191db:	or     DWORD PTR [ecx+0x34],0x5b
  4191df:	rcl    BYTE PTR [ecx],0x9e
  4191e2:	pop    eax
  4191e3:	out    dx,eax
  4191e4:	jp     0x419173
  4191e6:	mov    al,0xf8
  4191e8:	aas    
  4191e9:	dec    ebp
  4191ea:	aad    0x2d
  4191ec:	out    0xbb,eax
  4191ee:	dec    esi
  4191ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f0:	inc    ecx
  4191f1:	or     eax,0x3c129635
  4191f6:	loop   0x419252
  4191f8:	push   esi
  4191f9:	(bad)  
  4191fa:	xlat   BYTE PTR ds:[ebx]
  4191fb:	test   ecx,edx
  4191fd:	inc    eax
  4191fe:	adc    al,0xa7
  419200:	mov    al,ds:0x8ab0dd03
  419205:	leavew 
  419207:	mov    ds:0xa914df61,al
  41920c:	dec    DWORD PTR [ebp-0x386bbf3b]
  419212:	or     eax,0x2f417ace
  419217:	jmp    0xc100:0x56dbb8cc
  41921e:	xchg   edx,eax
  41921f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419220:	xchg   ebp,eax
  419221:	xor    edi,0xcb8c2161
  419227:	js     0x4191b6
  419229:	mov    dl,0x3
  41922b:	hlt    
  41922c:	push   edi
  41922d:	push   edi
  41922e:	fisttp WORD PTR ds:0xa61eb748
  419234:	push   edx
  419235:	xor    BYTE PTR [edx],cl
  419237:	fnsave [edi-0x75ad749b]
  41923d:	pushf  
  41923e:	lods   eax,DWORD PTR ds:[esi]
  41923f:	enter  0x6c82,0x99
  419243:	mov    al,ds:0x233a8d85
  419248:	mov    esi,0x19bb1695
  41924d:	xor    esi,edi
  41924f:	mov    bh,0xa
  419251:	lea    ecx,[eax]
  419253:	fwait
  419254:	out    dx,al
  419255:	jge    0x4192c8
  419257:	clc    
  419258:	adc    ecx,DWORD PTR [ebp+0x3c80876b]
  41925e:	fsub   DWORD PTR [esp+eax*1+0x75182f7a]
  419265:	xchg   esp,eax
  419266:	xor    DWORD PTR [eax-0x59ed3067],ebp
  41926c:	xchg   edx,eax
  41926d:	mov    eax,0x2ad61435
  419272:	pop    ebp
  419273:	mov    ds:0x87ee6ca7,eax
  419278:	dec    edx
  419279:	xchg   DWORD PTR [edi],edx
  41927b:	push   edi
  41927c:	es inc ebx
  41927e:	dec    esp
  41927f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419280:	dec    esp
  419281:	ds pushf 
  419283:	es xchg ebp,eax
  419285:	loopne 0x419257
  419287:	test   DWORD PTR [edx-0x66ebfade],0xc45eb96a
  419291:	lea    eax,[eax]
  419293:	lods   eax,DWORD PTR ds:[esi]
  419294:	inc    ecx
  419295:	xor    DWORD PTR [eax+0x30862dbf],0xe9d35b0
  41929f:	enter  0x3e90,0x1f
  4192a3:	cs test eax,0xaf7ff78d
  4192a9:	jb     0x419234
  4192ab:	or     eax,0x732edc0d
  4192b0:	mov    eax,ds:0xa6d2d940
  4192b5:	sbb    BYTE PTR [ebx],dh
  4192b7:	rcl    BYTE PTR [ebp+ecx*4+0x48],cl
  4192bb:	lahf   
  4192bc:	mov    edx,0xdb39baf5
  4192c1:	mov    gs,WORD PTR [edi]
  4192c3:	or     bh,BYTE PTR [edi-0x629531ae]
  4192c9:	jmp    0x41931f
  4192cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192cc:	mov    eax,ds:0xeba76a64
  4192d1:	scas   eax,DWORD PTR es:[edi]
  4192d2:	and    DWORD PTR [ebx],ebx
  4192d4:	mov    bl,BYTE PTR [esi]
  4192d6:	popf   
  4192d7:	stos   DWORD PTR es:[edi],eax
  4192d8:	push   es
  4192d9:	aas    
  4192da:	or     eax,0x8c8d35c2
  4192df:	dec    esp
  4192e0:	dec    edi
  4192e1:	mov    al,ds:0xcbc53689
  4192e6:	cs iret 
  4192e8:	sti    
  4192e9:	add    eax,0xcc0d4104
  4192ee:	(bad)  
  4192f0:	fs dec esp
  4192f2:	ret    0xf601
  4192f5:	out    dx,eax
  4192f6:	jecxz  0x4192c2
  4192f8:	mov    ch,BYTE PTR [eax-0x45]
  4192fb:	and    ah,BYTE PTR [edi]
  4192fd:	pop    es
  4192fe:	shl    ah,1
  419300:	in     eax,0x8d
  419302:	enter  0x4ace,0xe6
  419306:	xchg   edx,eax
  419307:	test   eax,0x1b2ed91f
  41930c:	cmc    
  41930d:	sahf   
  41930e:	pop    ss
  41930f:	icebp  
  419310:	xor    eax,0x4ba5d53a
  419315:	shl    DWORD PTR [eax],cl
  419317:	and    al,0xe9
  419319:	ins    DWORD PTR es:[edi],dx
  41931a:	mov    esi,0xc26f8abb
  41931f:	outs   dx,DWORD PTR ds:[esi]
  419320:	mov    dh,0xd4
  419322:	xor    esp,DWORD PTR [ebp-0x2ff87200]
  419328:	fmul   DWORD PTR [ecx-0x61]
  41932b:	mov    ah,BYTE PTR [edx]
  41932d:	test   dl,ch
  41932f:	(bad)  
  419330:	mov    ebx,DWORD PTR [ecx-0x51]
  419333:	shl    DWORD PTR [eax],1
  419335:	imul   edi,ebp,0x59
  419338:	dec    esi
  419339:	xor    BYTE PTR [ebp-0x5b],al
  41933c:	cmp    eax,0x8b4686ea
  419341:	cmp    al,0x9e
  419343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419344:	fsubrp st(3),st
  419346:	and    BYTE PTR [edx-0x375e4875],al
  41934c:	(bad)  
  41934d:	add    al,0x6c
  41934f:	jmp    0x2df6:0xb191c45a
  419356:	mov    edx,0x4689faf1
  41935b:	sub    al,0x69
  41935d:	int3   
  41935e:	std    
  41935f:	enter  0xf5cb,0xe4
  419363:	inc    edx
  419364:	loop   0x41938c
  419366:	sbb    BYTE PTR [ebp-0x5f6738f6],0x17
  41936d:	ins    DWORD PTR es:[edi],dx
  41936e:	(bad)  
  41936f:	in     eax,dx
  419370:	data16 and dh,BYTE PTR [edi-0x2c7780ca]
  419377:	int3   
  419378:	sbb    eax,0x42e6a660
  41937d:	pop    eax
  41937e:	lods   al,BYTE PTR ds:[esi]
  41937f:	pop    ebp
  419380:	dec    dh
  419382:	xor    al,0xef
  419384:	mov    ebx,DWORD PTR [edx-0x31]
  419387:	lds    esp,FWORD PTR [ecx+0x6c64401f]
  41938d:	push   ebp
  41938e:	enter  0x8a87,0x9e
  419392:	cdq    
  419393:	lahf   
  419394:	cmp    esi,DWORD PTR [ecx+0x28]
  419397:	mov    cs,WORD PTR [edx-0x5db4271e]
  41939d:	in     eax,0x1e
  41939f:	in     eax,0x5b
  4193a1:	(bad)  
  4193a2:	fcomp  QWORD PTR [eax-0x6e]
  4193a5:	push   esp
  4193a6:	shr    BYTE PTR [esi-0x48],0x90
  4193aa:	or     edx,DWORD PTR [ecx+ebx*8+0x5c]
  4193ae:	cs (bad) 
  4193b1:	cmp    bh,BYTE PTR [edi-0x7b]
  4193b4:	fidiv  DWORD PTR [ecx+ecx*1]
  4193b7:	jb     0x419401
  4193b9:	scas   al,BYTE PTR es:[edi]
  4193ba:	xor    al,BYTE PTR [esi-0x10]
  4193bd:	(bad)  
  4193be:	jnp    0x4193d3
  4193c0:	cmp    ebx,DWORD PTR [ecx+edx*8]
  4193c3:	xchg   ebp,eax
  4193c4:	in     al,dx
  4193c5:	and    esi,DWORD PTR ds:0x3483d6f4
  4193cb:	out    0x51,al
  4193cd:	aam    0xde
  4193cf:	push   ecx
  4193d0:	mov    ss,sp
  4193d3:	mov    fs,WORD PTR [eax+0x7292de74]
  4193d9:	ror    DWORD PTR [ebx],0x66
  4193dc:	jl     0x41937e
  4193de:	xor    bh,BYTE PTR [ebx+0x4b]
  4193e1:	fld    QWORD PTR [esi+0x70217df7]
  4193e7:	outs   dx,BYTE PTR ds:[esi]
  4193e8:	imul   ebx,DWORD PTR [edi+ebx*2],0xffffffae
  4193ec:	add    BYTE PTR [ebx],0xfe
  4193ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193f0:	inc    ebp
  4193f1:	cld    
  4193f2:	or     ecx,DWORD PTR [ebp-0x2c]
  4193f5:	xchg   esp,eax
  4193f6:	scas   al,BYTE PTR es:[edi]
  4193f7:	mov    ecx,0xa61fa4c3
  4193fc:	pop    eax
  4193fd:	(bad)  
  4193fe:	jle    0x41944e
  419400:	jge    0x4193d6
  419402:	jg     0x4193aa
  419404:	outs   dx,BYTE PTR ds:[esi]
  419405:	outs   dx,BYTE PTR ds:[esi]
  419407:	inc    edx
  419408:	pop    esi
  419409:	in     eax,dx
  41940a:	adc    eax,0xdf09a559
  41940f:	ds retf 0x5ce7
  419413:	inc    eax
  419414:	pop    ecx
  419415:	jne    0x419496
  419417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419418:	call   0xf770:0xe488c2bb
  41941f:	bound  ecx,QWORD PTR [ecx+0x41a36c85]
  419425:	call   0xb51f:0x7a00e74b
  41942c:	retf   0x6184
  41942f:	jbe    0x419417
  419431:	sbb    eax,DWORD PTR ds:0x8a4dff46
  419437:	pushf  
  419438:	loope  0x4193df
  41943a:	pop    edi
  41943b:	repz jbe 0x41948e
  41943e:	dec    ebp
  41943f:	in     al,0x4
  419441:	test   eax,0xbc470c2f
  419446:	cmc    
  419447:	outs   dx,BYTE PTR ds:[esi]
  419448:	stos   DWORD PTR es:[edi],eax
  419449:	cmp    al,0x90
  41944b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944c:	cdq    
  41944d:	dec    edx
  41944e:	lock fcomp DWORD PTR [eax-0x7f74eedb]
  419455:	ret    0x19dd
  419458:	mov    dl,BYTE PTR [ecx-0x18d6101c]
  41945e:	push   es
  41945f:	pop    esp
  419460:	lock lea eax,[ecx+0x7b]
  419464:	fcmovnb st,st(6)
  419466:	lods   eax,DWORD PTR ds:[esi]
  419467:	ficomp WORD PTR [ecx]
  419469:	xlat   BYTE PTR ds:[ebx]
  41946a:	xor    BYTE PTR [esi-0x4d],ah
  41946d:	mov    dh,0x98
  41946f:	clc    
  419470:	xchg   esp,eax
  419471:	in     eax,dx
  419472:	xor    eax,0x618aea51
  419477:	push   edx
  419478:	lods   al,BYTE PTR ds:[esi]
  419479:	jnp    0x41947c
  41947b:	jbe    0x419452
  41947d:	inc    ecx
  41947e:	sub    edx,DWORD PTR [eax-0x77]
  419481:	retf   0x6b5b
  419484:	mov    DWORD PTR [ebx+esi*1-0x50229bf3],edx
  41948b:	outs   dx,DWORD PTR es:[esi]
  41948d:	add    ebx,DWORD PTR [ebx-0x1063fe5a]
  419493:	addr16 in eax,dx
  419495:	push   ebp
  419496:	xlat   BYTE PTR ds:[ebx]
  419497:	mov    ah,0x8a
  419499:	pushf  
  41949a:	xor    eax,0x2b600e19
  41949f:	mov    al,0xd3
  4194a1:	lea    edx,[edx+0x7a]
  4194a4:	cwde   
  4194a5:	popa   
  4194a6:	push   cs
  4194a7:	cdq    
  4194a8:	inc    eax
  4194a9:	ja     0x4194da
  4194ab:	xchg   esi,eax
  4194ac:	adc    BYTE PTR [edi],dh
  4194ae:	adc    DWORD PTR [edi-0x5a1b0ae5],esp
  4194b4:	and    al,0xad
  4194b6:	mov    DWORD PTR [ebx-0x26ca8ac2],ebx
  4194bc:	mov    al,BYTE PTR [esi-0x64]
  4194bf:	dec    ebp
  4194c0:	out    dx,al
  4194c1:	mov    cl,0xf1
  4194c3:	jo     0x419531
  4194c5:	mov    ?,WORD PTR [ebp-0x3d]
  4194c8:	test   BYTE PTR [ebx],ah
  4194ca:	mov    ebx,0xf6ee85ff
  4194cf:	stos   DWORD PTR es:[edi],eax
  4194d0:	adc    eax,0xe6d692ea
  4194d5:	jmp    0x81cc8285
  4194da:	call   0xb320e9f8
  4194df:	dec    ebp
  4194e0:	cmc    
  4194e1:	xchg   esi,eax
  4194e2:	imul   ebx,ecx,0xffffff84
  4194e5:	int3   
  4194e6:	xor    DWORD PTR [edx+0x3d],edx
  4194e9:	sub    al,0x4f
  4194eb:	inc    edi
  4194ec:	cmp    bh,BYTE PTR [edx-0x736756d1]
  4194f2:	pushf  
  4194f3:	das    
  4194f4:	cmp    DWORD PTR [eax+0x445da5c2],ebp
  4194fa:	call   0x65ec:0xafd9f218
  419501:	icebp  
  419502:	mov    DWORD PTR [esi+0x5014fe8a],edi
  419508:	(bad)  
  419509:	ja     0x4194bb
  41950b:	fwait
  41950c:	push   es
  41950d:	fwait
  41950e:	and    edx,ebx
  419510:	repz lea ebx,[esi+0x6d]
  419514:	or     al,0xdc
  419516:	int3   
  419517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419518:	mov    edx,DWORD PTR [edx-0x4d]
  41951b:	push   ds
  41951c:	sbb    al,ah
  41951e:	mov    eax,ds:0x1049fa7b
  419523:	fcmovb st,st(5)
  419525:	mov    cl,0x7e
  419527:	adc    edx,DWORD PTR [esi-0x73]
  41952a:	popf   
  41952b:	aas    
  41952c:	ror    DWORD PTR [eax-0x573f72a2],cl
  419532:	sbb    al,0x29
  419534:	in     eax,dx
  419535:	ins    DWORD PTR es:[edi],dx
  419536:	fcmovnbe st,st(4)
  419538:	stos   BYTE PTR es:[edi],al
  419539:	sub    al,0x12
  41953b:	ins    DWORD PTR es:[edi],dx
  41953c:	xchg   esp,eax
  41953d:	mov    al,ds:0xae5f056
  419542:	pop    esi
  419543:	jg     0x41955a
  419545:	std    
  419546:	fwait
  419547:	jp     0x419562
  419549:	xchg   esp,eax
  41954a:	pop    edi
  41954b:	dec    edx
  41954c:	mov    dh,ch
  41954e:	mov    bh,0xe5
  419550:	jl     0x4195b5
  419552:	add    BYTE PTR [edi-0x68de72db],0x7a
  419559:	jg     0x4195be
  41955b:	test   DWORD PTR [eax],eax
  41955d:	sbb    bl,BYTE PTR [ebp+0x45]
  419560:	xchg   ebx,eax
  419561:	mov    BYTE PTR [esi+0x128e050c],0x7d
  419568:	sbb    BYTE PTR [edi],0x60
  41956b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41956c:	inc    ebp
  41956d:	hlt    
  41956e:	scas   eax,DWORD PTR es:[edi]
  41956f:	and    dh,BYTE PTR [edx+ebx*4]
  419572:	cmp    al,0xf6
  419574:	pop    esp
  419575:	rol    DWORD PTR [edx-0x49],1
  419578:	or     ax,0xe0ef
  41957c:	cmp    DWORD PTR [ebp+ecx*2-0x73],eax
  419580:	mov    esp,0x2e6b4b8d
  419585:	and    eax,0xb71d87c2
  41958a:	inc    ebx
  41958b:	in     eax,dx
  41958c:	adc    ebx,ecx
  41958e:	outs   dx,BYTE PTR ds:[esi]
  41958f:	jns    0x4195cf
  419591:	xchg   edi,eax
  419592:	daa    
  419593:	adc    eax,0xf55d9384
  419598:	cdq    
  419599:	xchg   ebx,eax
  41959a:	das    
  41959b:	scas   eax,DWORD PTR es:[edi]
  41959c:	pop    ss
  41959d:	clc    
  41959e:	xchg   ebx,eax
  41959f:	or     al,0x8a
  4195a1:	shl    DWORD PTR [edi*8-0x2238af82],0x83
  4195a9:	mov    eax,ds:0x4d79ce5d
  4195ae:	lods   eax,DWORD PTR es:[esi]
  4195b0:	test   eax,0x8ac5a832
  4195b5:	enter  0x248d,0xc
  4195b9:	mov    al,ds:0x8a751aab
  4195be:	and    al,0x87
  4195c0:	add    ah,BYTE PTR [edx-0xb]
  4195c3:	in     eax,0x96
  4195c5:	fisub  WORD PTR [eax-0xba475b7]
  4195cb:	jge    0x4195be
  4195cd:	pop    eax
  4195ce:	inc    ecx
  4195cf:	mov    edx,0xb23925c5
  4195d4:	mov    ebx,0x4322a44
  4195d9:	dec    esi
  4195da:	clc    
  4195db:	xor    DWORD PTR [ebp+0x66],esp
  4195de:	pop    edx
  4195df:	jp     0x419575
  4195e1:	retf   0x3104
  4195e4:	ja     0x4195d3
  4195e6:	adc    BYTE PTR [edi+0x5c],bh
  4195e9:	jg     0x419613
  4195eb:	test   eax,0x46fc35e0
  4195f0:	push   ebx
  4195f1:	std    
  4195f2:	mov    ds:0x2f1a5ed0,al
  4195f7:	jmp    0x4195a6
  4195f9:	adc    DWORD PTR [edx+0x58],edx
  4195fc:	(bad)  
  4195fd:	rol    bh,cl
  4195ff:	popf   
  419600:	mov    al,ds:0xa9bc765
  419605:	xlat   BYTE PTR ds:[ebx]
  419606:	and    al,0x71
  419608:	sbb    esp,esp
  41960a:	mov    esi,0x3207012b
  41960f:	jmp    0x41963a
  419611:	jecxz  0x41968d
  419613:	jge    0x419665
  419615:	adc    eax,0xa0a76b33
  41961a:	mov    al,ds:0xdc8d742b
  41961f:	mov    esp,0xf032b086
  419624:	mov    ah,BYTE PTR [ebx+0x250acf4b]
  41962a:	and    eax,0xed8de5f4
  41962f:	rol    DWORD PTR [ebx+0x43],cl
  419632:	in     eax,0xc7
  419634:	fcomp  DWORD PTR [edi+ebp*1]
  419637:	icebp  
  419638:	lahf   
  419639:	mov    ah,0x10
  41963b:	in     eax,0xbe
  41963d:	or     eax,0x781aa5f2
  419642:	inc    ebp
  419643:	stos   BYTE PTR es:[edi],al
  419644:	loope  0x4196c2
  419646:	mov    dl,0x67
  419648:	add    BYTE PTR [esi+0x30],ch
  41964b:	xor    BYTE PTR [esp+ebx*1+0x53c58a33],dh
  419652:	dec    edi
  419653:	push   eax
  419654:	pop    ecx
  419655:	in     al,dx
  419656:	jne    0x419666
  419658:	xchg   edi,eax
  419659:	ret    
  41965a:	mov    ebp,0x4e5442a6
  41965f:	mov    dh,0x79
  419661:	and    ch,BYTE PTR [ecx-0x14]
  419664:	mov    bh,BYTE PTR [eax+0x23]
  419667:	pushf  
  419668:	fidiv  DWORD PTR [ebp+0x7ce42ca4]
  41966e:	(bad)  
  41966f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419670:	cmp    al,0x21
  419673:	sbb    BYTE PTR ds:[esi+0x3e8f5bbc],bl
  41967a:	in     eax,0x4e
  41967c:	sbb    eax,0x89c96f55
  419681:	popf   
  419682:	loop   0x419629
  419684:	inc    esi
  419685:	sbb    DWORD PTR [edx-0x10],edx
  419688:	fwait
  419689:	jb     0x419689
  41968b:	inc    esi
  41968c:	mov    dl,BYTE PTR [ecx]
  41968e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968f:	pop    es
  419690:	mov    eax,ds:0x874c70b
  419695:	lea    ebx,[esp+edx*8-0x1c]
  419699:	xor    DWORD PTR [edx+0x2f472988],eax
  41969f:	mov    cl,0xed
  4196a1:	sub    cl,bh
  4196a3:	lock jno 0x4196c1
  4196a6:	pop    ebp
  4196a7:	mov    esi,0x56ca9308
  4196ac:	ss out dx,al
  4196ae:	scas   al,BYTE PTR es:[edi]
  4196af:	in     al,dx
  4196b0:	sub    ebp,DWORD PTR [eax-0x78]
  4196b3:	or     eax,0x9e731f8b
  4196b8:	jne    0x4196d1
  4196ba:	mov    edx,0xa4e08aa3
  4196bf:	mov    dl,0x8f
  4196c1:	cmp    eax,0x855186f3
  4196c6:	outs   dx,DWORD PTR ds:[esi]
  4196c7:	jmp    0x2c33:0x2e0bc415
  4196ce:	lahf   
  4196cf:	fsqrt  
  4196d1:	and    BYTE PTR [eax+0x64f360a6],bh
  4196d7:	sub    DWORD PTR [edi+edx*4+0x4b8ae8a0],ebx
  4196de:	dec    ebp
  4196df:	cmc    
  4196e0:	aam    0x2b
  4196e2:	mov    edx,0x3c8d38cc
  4196e7:	mov    dl,0xb9
  4196e9:	test   edi,ebx
  4196eb:	aad    0x78
  4196ed:	inc    ebx
  4196ee:	das    
  4196ef:	fistp  DWORD PTR [ebx]
  4196f1:	aad    0x1a
  4196f3:	xor    BYTE PTR [edx],ch
  4196f5:	mov    cl,0x87
  4196f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f8:	icebp  
  4196f9:	stos   DWORD PTR es:[edi],eax
  4196fa:	mov    ebp,0x9f340997
  4196ff:	outs   dx,BYTE PTR ds:[esi]
  419700:	mov    bl,BYTE PTR [esi]
  419702:	xchg   ebx,eax
  419703:	test   BYTE PTR [ebp+0x28],dl
  419706:	dec    edx
  419707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419708:	jecxz  0x419694
  41970a:	sub    eax,esi
  41970c:	pop    ecx
  41970d:	iret   
  41970e:	aad    0x58
  419710:	mov    ds:0x49c8b5d,al
  419715:	xchg   edx,eax
  419716:	das    
  419717:	add    ebp,DWORD PTR [esi+0x38]
  41971a:	int    0x44
  41971c:	stc    
  41971d:	aad    0x40
  41971f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419720:	dec    esi
  419721:	pusha  
  419722:	mov    dl,0xa1
  419724:	push   cs
  419725:	sbb    al,0xa7
  419727:	cwde   
  419728:	out    dx,eax
  419729:	jmp    0x2953:0xdc7a5f39
  419730:	fdivr  DWORD PTR [esi]
  419732:	mov    edi,0x24d61ce7
  419737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419738:	jle    0x419719
  41973a:	mov    edi,0xb802c0c8
  41973f:	sub    DWORD PTR [edx-0x28f25d8],ecx
  419745:	aaa    
  419746:	or     eax,0xd18e0cdb
  41974b:	out    0x8,al
  41974d:	fwait
  41974e:	mov    al,ds:0xa3128222
  419753:	xor    BYTE PTR [edx+0x47646f5],cl
  419759:	les    ebp,FWORD PTR [edi-0x5b9e827f]
  41975f:	mov    BYTE PTR [edx+0x23ebf184],cl
  419765:	(bad)  
  419766:	adc    DWORD PTR [esi-0x197ea876],esi
  41976c:	sbb    ah,BYTE PTR [edi+eiz*1-0xb70ffd2]
  419773:	jae    0x41973f
  419775:	sbb    BYTE PTR [ebp+0x7d],cl
  419778:	cmp    dh,BYTE PTR [ebx]
  41977a:	sub    DWORD PTR [ebx+0x15d9758f],ebp
  419780:	sahf   
  419781:	retf   0x2d6e
  419784:	jne    0x419782
  419786:	inc    esi
  419787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419788:	mov    ecx,0xc8e8a8af
  41978d:	shl    al,0xb6
  419790:	mov    cl,BYTE PTR [ebx-0x39db0e22]
  419796:	jge    0x419807
  419798:	inc    eax
  419799:	xchg   ebx,edi
  41979b:	mov    al,0x9a
  41979d:	dec    ebp
  41979e:	xchg   BYTE PTR [esi+0x29],ah
  4197a1:	rol    edi,1
  4197a3:	mov    dl,0xbe
  4197a5:	sbb    eax,0xa91e6930
  4197aa:	push   edx
  4197ab:	xchg   edx,eax
  4197ac:	jge    0x4197f7
  4197ae:	iret   
  4197af:	in     eax,0x5b
  4197b1:	mov    BYTE PTR [esi+0x7],al
  4197b4:	sub    eax,esp
  4197b6:	das    
  4197b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197b8:	or     al,BYTE PTR [esi]
  4197ba:	add    ch,BYTE PTR [eax-0x3d0691f]
  4197c0:	sbb    BYTE PTR [eax],0x7
  4197c3:	lock mov ebp,0xc0a63b60
  4197c9:	xchg   ecx,eax
  4197ca:	mov    ds:0xf0a3cdf7,al
  4197cf:	xor    eax,0x48ad938a
  4197d4:	test   DWORD PTR ds:0x8dd45cd6,esp
  4197da:	fcmovbe st,st(7)
  4197dc:	(bad)  
  4197dd:	cmp    al,0xbe
  4197df:	sub    eax,0xbf2f1882
  4197e4:	xlat   BYTE PTR ds:[ebx]
  4197e5:	outs   dx,BYTE PTR ds:[esi]
  4197e6:	stos   DWORD PTR es:[edi],eax
  4197e7:	mov    ch,0x6b
  4197e9:	inc    eax
  4197ea:	test   BYTE PTR [esi-0x16ea7190],ah
  4197f0:	or     DWORD PTR [edi-0x1475e362],edx
  4197f6:	or     esi,DWORD PTR [edx]
  4197f8:	mov    esi,0x8c6a4de5
  4197fd:	lea    ebp,[eax+ebx*8-0x7]
  419801:	and    bl,cl
  419803:	shl    ah,1
  419805:	std    
  419806:	xor    esp,esi
  419808:	dec    esi
  419809:	cmp    BYTE PTR [edi-0x61c26108],0x28
  419810:	xchg   esp,eax
  419811:	(bad)  
  419812:	cmc    
  419813:	(bad)  
  419814:	xchg   esi,eax
  419815:	sbb    bl,dl
  419817:	fcmovnbe st,st(3)
  419819:	aam    0x2e
  41981b:	adc    al,BYTE PTR [esi+0x5ab737e2]
  419821:	in     al,0xa6
  419823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419824:	das    
  419825:	dec    esp
  419826:	sub    esi,ebp
  419828:	jmp    0x419826
  41982a:	outs   dx,BYTE PTR ds:[esi]
  41982b:	mov    eax,ds:0x8691f98a
  419830:	(bad)  
  419831:	neg    bh
  419833:	jecxz  0x419829
  419835:	(bad)  
  419836:	in     eax,dx
  419837:	jg     0x4197c9
  419839:	sub    BYTE PTR [edi+0x42fa23f1],ch
  41983f:	pusha  
  419840:	mov    ch,0x3f
  419842:	out    dx,eax
  419843:	mov    edi,0x930682ce
  419848:	push   esp
  419849:	mov    bl,0xd2
  41984b:	out    dx,al
  41984c:	scas   eax,DWORD PTR es:[edi]
  41984d:	(bad)  
  41984e:	das    
  41984f:	daa    
  419850:	or     al,0xb0
  419852:	xchg   esi,eax
  419853:	aas    
  419854:	dec    edx
  419855:	ret    
  419856:	das    
  419857:	jmp    0x9eed:0x4e2e9732
  41985e:	out    0xa5,al
  419860:	pop    edx
  419861:	cli    
  419862:	rcr    edi,0x1a
  419865:	push   DWORD PTR [esi-0x5fb575ba]
  41986b:	mov    al,0xa2
  41986d:	xchg   ecx,eax
  41986e:	popf   
  41986f:	in     eax,0xa0
  419871:	mov    BYTE PTR [ecx+0x75eb0d68],0x6e
  419878:	(bad)  
  41987a:	inc    edx
  41987b:	xor    edi,ecx
  41987d:	in     al,0x2e
  41987f:	ficomp DWORD PTR ds:0x1528a391
  419885:	adc    ebp,DWORD PTR [ecx-0x230a4160]
  41988b:	in     eax,0x4a
  41988d:	repz fstp TBYTE PTR [edi]
  419890:	clc    
  419891:	pop    edi
  419892:	das    
  419893:	outs   dx,DWORD PTR ds:[esi]
  419894:	pop    ebx
  419895:	sub    DWORD PTR [ebx+0x9],0x45
  419899:	repnz mov bh,0xa6
  41989c:	mov    DWORD PTR [ebx+0x3f],ebp
  41989f:	scas   al,BYTE PTR es:[edi]
  4198a0:	pop    esi
  4198a1:	das    
  4198a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a3:	sbb    BYTE PTR [edi+0xbb75bcd],cl
  4198a9:	mov    esp,0x60cbb36f
  4198ae:	and    DWORD PTR [ebp+0x12355580],esp
  4198b4:	in     eax,dx
  4198b5:	sub    edi,eax
  4198b7:	inc    esp
  4198b8:	in     al,dx
  4198b9:	mov    ch,0x2f
  4198bb:	xor    DWORD PTR [edx],ecx
  4198bd:	mov    edx,0xa8665f8f
  4198c2:	push   ebx
  4198c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c4:	stos   DWORD PTR es:[di],eax
  4198c6:	jmp    0x4198af
  4198c8:	and    eax,ebp
  4198ca:	jmp    ebp
  4198cc:	mov    dh,BYTE PTR [esi+0x7d]
  4198cf:	out    dx,al
  4198d0:	jp     0x4198f1
  4198d2:	jnp    0x4198d2
  4198d4:	in     al,dx
  4198d5:	jle    0x41994f
  4198d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d8:	pop    edx
  4198d9:	pop    edi
  4198da:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198dc:	rol    BYTE PTR ds:0xa38a7334,cl
  4198e2:	dec    eax
  4198e3:	out    0xfc,eax
  4198e5:	js     0x4198f3
  4198e7:	and    dh,bl
  4198e9:	lahf   
  4198ea:	ins    DWORD PTR es:[edi],dx
  4198eb:	adc    ecx,ecx
  4198ed:	lea    esi,[edx-0x6]
  4198f0:	(bad)  
  4198f1:	loope  0x4198a4
  4198f3:	add    eax,0x489edb8a
  4198f8:	mov    al,0x27
  4198fa:	rcr    cl,cl
  4198fc:	ja     0x41988c
  4198fe:	in     al,dx
  4198ff:	pavgb  mm2,QWORD PTR [edi+0x1c7a4113]
  419906:	xlat   BYTE PTR ds:[ebx]
  419907:	add    DWORD PTR [bx+di],edx
  41990a:	sub    ebx,ebp
  41990c:	inc    ecx
  41990d:	or     eax,0xafc2efc4
  419912:	ror    esi,cl
  419914:	fmul   DWORD PTR [ebp+0x2e896a7a]
  41991a:	push   ss
  41991b:	jo     0x4198ec
  41991d:	inc    edi
  41991e:	fist   WORD PTR [edx+0x19f7218a]
  419924:	cdq    
  419925:	aas    
  419926:	jg     0x4199a0
  419928:	fisttp WORD PTR [ebp-0x7e97389e]
  41992e:	jnp    0x419991
  419930:	clc    
  419931:	sbb    eax,0x689eab32
  419936:	sbb    DWORD PTR [ecx],eax
  419938:	add    cl,BYTE PTR [esi-0x3be778bb]
  41993e:	mov    ebp,0x35d6b3b9
  419943:	stos   BYTE PTR es:[edi],al
  419944:	jmp    0xe65484d7
  419949:	xchg   edi,eax
  41994a:	das    
  41994b:	pop    ebx
  41994c:	sbb    DWORD PTR [esp+ecx*2-0x12732c72],ebx
  419953:	push   edi
  419954:	bound  esi,QWORD PTR [ebx]
  419956:	hlt    
  419957:	mov    esp,0xd975f9ae
  41995c:	cdq    
  41995d:	jae    0x419907
  41995f:	sahf   
  419960:	mov    ch,BYTE PTR [edx-0x38b93bc7]
  419966:	test   edi,edx
  419968:	push   edi
  419969:	repz push cs
  41996b:	outs   dx,DWORD PTR ds:[esi]
  41996c:	push   eax
  41996d:	(bad)  
  41996e:	shr    DWORD PTR [ecx+ebx*1+0x47c12a0],1
  419975:	cmp    eax,0x35734a2f
  41997a:	sti    
  41997b:	pop    ebp
  41997c:	pop    ebp
  41997d:	idiv   DWORD PTR ds:0x485ee0b8
  419983:	mov    eax,ds:0x148f2022
  419988:	scas   al,BYTE PTR es:[edi]
  419989:	(bad)  
  41998a:	sahf   
  41998b:	add    DWORD PTR [ebp+0x4dec9f65],ecx
  419991:	jp     0x419932
  419993:	icebp  
  419994:	pop    ecx
  419995:	adc    eax,0x8bdfa96c
  41999a:	test   al,0x7d
  41999c:	xor    BYTE PTR [eax],ch
  41999e:	in     al,dx
  41999f:	in     eax,0xfb
  4199a1:	push   esi
  4199a2:	adc    esp,ebx
  4199a4:	mov    bl,BYTE PTR [ecx+0x7]
  4199a7:	adc    dh,BYTE PTR [esi-0x1a]
  4199aa:	inc    edi
  4199ab:	mov    DWORD PTR ss:[eax-0x773e8227],esp
  4199b2:	jae    0x419a29
  4199b4:	dec    esp
  4199b5:	int    0x3e
  4199b7:	or     edi,DWORD PTR [ecx]
  4199b9:	jge    0x4199ed
  4199bb:	xchg   edx,eax
  4199bc:	sub    BYTE PTR [ebx-0x73a6d7c5],ah
  4199c2:	out    0xd,eax
  4199c4:	push   edi
  4199c5:	adc    dh,ch
  4199c7:	mov    al,0xaf
  4199c9:	aad    0xc1
  4199cb:	bound  ecx,QWORD PTR [edx+0x5ef30b48]
  4199d1:	jne    0x419969
  4199d3:	mov    ecx,eax
  4199d5:	sbb    eax,0x372aa622
  4199da:	je     0x4199fb
  4199dc:	mov    esp,0xc571104d
  4199e1:	mov    bl,0x27
  4199e3:	test   eax,0xbaf2f5e3
  4199e8:	sub    al,bl
  4199ea:	test   al,0xbd
  4199ec:	call   0x58907e7e
  4199f1:	jmp    0x8c2e:0xfd2b4cc9
  4199f8:	add    edx,eax
  4199fa:	test   edi,edx
  4199fc:	maskmovq mm4,(bad)
  4199fd:	mul    DWORD PTR [ebp-0x5a]
  419a00:	mov    BYTE PTR [ecx-0x22],dl
  419a03:	and    eax,0x77a2d368
  419a08:	shl    DWORD PTR [esi-0x6f5b598d],0x3e
  419a0f:	(bad)  
  419a10:	icebp  
  419a11:	pop    edx
  419a12:	jmp    DWORD PTR [ebp+0x6c9bdfca]
  419a18:	out    0x4e,al
  419a1a:	loope  0x419a95
  419a1c:	mov    dl,ch
  419a1e:	dec    ebp
  419a1f:	(bad)  
  419a20:	pop    esp
  419a21:	data16 jne 0x419a9b
  419a24:	test   eax,0x25849d8d
  419a29:	or     dl,dl
  419a2b:	xor    al,BYTE PTR [esi-0x31ffd0b3]
  419a31:	lods   al,BYTE PTR ds:[esi]
  419a32:	cmp    al,0xa2
  419a34:	push   es
  419a35:	push   0xffffff8e
  419a37:	test   eax,0x1990f843
  419a3c:	push   ecx
  419a3d:	sub    eax,0x455b645
  419a42:	das    
  419a43:	pop    esi
  419a44:	mov    eax,ds:0x7257a6b2
  419a49:	cli    
  419a4a:	test   eax,0xd4a37acc
  419a4f:	fmul   st(3),st
  419a51:	dec    ebp
  419a52:	ret    0x584d
  419a55:	inc    ebx
  419a56:	cmp    DWORD PTR [ecx-0x5af5a576],ebx
  419a5c:	mov    al,0x99
  419a5e:	or     ebx,DWORD PTR [ebp*4+0x4d0e7782]
  419a65:	lea    esi,[edi+ecx*8-0x15]
  419a69:	rcr    ebp,1
  419a6b:	adc    eax,0x222f782b
  419a70:	pop    ebx
  419a71:	sub    BYTE PTR ds:0xcd72ee2c,cl
  419a77:	adc    eax,0x728a8a86
  419a7c:	imul   ecx,DWORD PTR [edi+0x36dc0698],0x578a2088
  419a86:	push   es
  419a87:	iret   
  419a88:	stos   BYTE PTR es:[edi],al
  419a89:	(bad)  
  419a8b:	push   ebx
  419a8c:	push   esi
  419a8d:	(bad)  
  419a8e:	rcr    DWORD PTR [edi-0x5f],cl
  419a91:	cwde   
  419a92:	imul   esp,esp,0x4f2f0d33
  419a98:	xor    BYTE PTR [edx+0x2b8897b7],ah
  419a9e:	add    BYTE PTR [esi-0x22253f36],ah
  419aa4:	call   0x70b5:0x8a6a122a
  419aab:	jb     0x419ab0
  419aad:	jns    0x419abe
  419aaf:	adc    edi,DWORD PTR [ecx]
  419ab1:	lea    edi,[edi+0x23]
  419ab4:	xor    BYTE PTR [esi],dl
  419ab6:	bound  ebp,QWORD PTR [esi]
  419ab8:	ror    BYTE PTR [edi+0x2e],1
  419abb:	jge    0x419a73
  419abd:	retf   
  419abe:	icebp  
  419abf:	(bad)  [edx+0x53]
  419ac2:	out    0x7e,eax
  419ac4:	mov    edi,0x6ba20c7e
  419ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aca:	pushf  
  419acb:	or     dl,BYTE PTR [esi+0x1f183aca]
  419ad1:	inc    edx
  419ad2:	xchg   ecx,eax
  419ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad4:	shl    esp,1
  419ad6:	sbb    eax,0x1ed17fff
  419adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419adc:	lahf   
  419add:	jmp    0xe4384882
  419ae2:	arpl   cx,si
  419ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae5:	int    0xe4
  419ae7:	inc    edx
  419ae8:	or     edx,DWORD PTR [ebx]
  419aea:	out    0x2f,eax
  419aec:	lea    ecx,[eax+edx*8]
  419aef:	outs   dx,BYTE PTR ds:[esi]
  419af0:	or     dl,BYTE PTR [edi]
  419af2:	jecxz  0x419b4f
  419af4:	js     0x419b1a
  419af6:	data16 mov cs,WORD PTR [edx-0x7050b1a0]
  419afd:	arpl   WORD PTR [edx-0x1e],sp
  419b00:	mov    ds:0xe987788d,al
  419b05:	mov    DWORD PTR [esi+0x2fa0046c],esi
  419b0b:	inc    ebx
  419b0c:	rcl    DWORD PTR [ebp+0x7e3ce7dd],0xef
  419b13:	mov    ebp,0xddc48d9f
  419b18:	jl     0x419adc
  419b1a:	jno    0x419add
  419b1c:	inc    esp
  419b1d:	mov    BYTE PTR [edi],ch
  419b1f:	or     al,0xc1
  419b21:	push   eax
  419b22:	push   esp
  419b23:	pop    esp
  419b24:	inc    esi
  419b25:	mov    edi,0x86848cd3
  419b2a:	scas   eax,DWORD PTR es:[edi]
  419b2b:	push   ebx
  419b2c:	push   edx
  419b2d:	mov    ah,0x61
  419b2f:	sar    DWORD PTR [eax],cl
  419b31:	and    DWORD PTR [eax],esi
  419b33:	pop    ds
  419b34:	stos   BYTE PTR es:[edi],al
  419b35:	daa    
  419b36:	cmp    ch,0xe9
  419b39:	scas   eax,DWORD PTR es:[edi]
  419b3a:	iret   
  419b3b:	mov    cl,0xd8
  419b3d:	mov    WORD PTR [ecx+0x6f7883a2],cs
  419b43:	aas    
  419b44:	dec    edi
  419b45:	in     eax,0xbf
  419b47:	inc    esp
  419b48:	mov    ch,BYTE PTR [esi+0x4450384b]
  419b4e:	xchg   DWORD PTR [ecx],ebx
  419b50:	enter  0xb68d,0xd6
  419b54:	jecxz  0x419ba3
  419b56:	sub    ebx,DWORD PTR ds:0x7130c5cb
  419b5c:	stc    
  419b5d:	cwde   
  419b5e:	xchg   esi,eax
  419b5f:	or     eax,0x5272cb10
  419b64:	xchg   ecx,eax
  419b65:	lea    ecx,[ebx]
  419b67:	jne    0x419bb7
  419b69:	cdq    
  419b6a:	pextrw edi,(bad),0xc5
  419b6c:	mov    esp,0xffb22efe
  419b71:	mov    eax,DWORD PTR [ecx+0x7d6633a9]
  419b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b78:	sbb    BYTE PTR ds:[esi-0x54],dh
  419b7c:	push   ecx
  419b7d:	sub    eax,0x448a5e35
  419b82:	popa   
  419b83:	mov    dh,0x50
  419b85:	sahf   
  419b86:	call   0xce49:0xca8d4636
  419b8d:	adc    ah,BYTE PTR [eax+0x14]
  419b90:	or     ebp,DWORD PTR [esi+0x32]
  419b93:	mov    ds:0x55d94233,al
  419b98:	(bad)  
  419b99:	xor    eax,0x8d7fefba
  419b9e:	out    0x3a,eax
  419ba0:	or     eax,0x46b435c3
  419ba5:	adc    BYTE PTR [eax],dh
  419ba7:	call   0x62f55764
  419bac:	mov    cl,0x1a
  419bae:	outs   dx,DWORD PTR ds:[esi]
  419baf:	fld    DWORD PTR [edx-0x4c184f73]
  419bb5:	inc    esp
  419bb6:	shl    ecx,1
  419bb8:	sub    DWORD PTR [esi],ecx
  419bba:	das    
  419bbb:	and    BYTE PTR [eax+0x54],0x24
  419bbf:	mov    eax,0xa73de448
  419bc4:	lahf   
  419bc5:	ficom  DWORD PTR [edi-0x54]
  419bc8:	popa   
  419bc9:	pushf  
  419bca:	lods   al,BYTE PTR ds:[esi]
  419bcb:	xchg   BYTE PTR [edi-0x6c5ed043],dh
  419bd1:	shl    DWORD PTR [esi-0x54c4bc14],1
  419bd7:	mov    eax,ds:0x5519c58f
  419bdc:	dec    edx
  419bdd:	and    DWORD PTR [edx-0x2e],esi
  419be0:	cld    
  419be1:	out    dx,eax
  419be2:	data16 mov BYTE PTR [edx-0x3cc8147d],cl
  419be9:	pop    edi
  419bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419beb:	cmc    
  419bec:	sti    
  419bed:	(bad)  
  419bee:	fistp  WORD PTR ds:0x82fd882d
  419bf4:	iret   
  419bf5:	push   esp
  419bf6:	das    
  419bf7:	sbb    BYTE PTR [esi],ch
  419bf9:	ins    BYTE PTR es:[edi],dx
  419bfa:	shl    DWORD PTR [eax],0x91
  419bfd:	jmp    0xb19171cc
  419c02:	js     0x419bb6
  419c04:	lock xchg ebx,eax
  419c06:	(bad)  
  419c07:	test   al,0x67
  419c09:	shr    BYTE PTR [edi+0x1f0b86fe],0xa
  419c10:	stos   BYTE PTR es:[edi],al
  419c11:	cmp    eax,0x2552bc2f
  419c16:	in     al,0x42
  419c18:	(bad)  
  419c19:	push   eax
  419c1a:	fmul   DWORD PTR [ebx+0x7d]
  419c1d:	(bad)  
  419c1e:	enter  0xf6ab,0x15
  419c22:	or     BYTE PTR [ecx],0x73
  419c25:	in     al,0xdc
  419c27:	in     al,0x8b
  419c29:	and    eax,0xde463c86
  419c2e:	and    DWORD PTR [esi+ebp*2+0x79d179c],ebx
  419c35:	fistp  DWORD PTR [edx-0x2a]
  419c38:	or     ebx,DWORD PTR [esi-0x42f3d369]
  419c3e:	sub    al,0xb2
  419c40:	jl     0x419c52
  419c42:	ss sbb al,0x74
  419c45:	fcomp  st(6)
  419c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c48:	mov    eax,0xa4ce98cc
  419c4d:	mov    bl,0xcc
  419c4f:	das    
  419c50:	rcl    DWORD PTR [edi-0x72b22fe2],0xce
  419c57:	aam    0xb9
  419c59:	rcl    BYTE PTR [ebx+0x6e7d8a90],1
  419c5f:	out    dx,al
  419c60:	xor    eax,0x439b1f50
  419c65:	push   ecx
  419c66:	mov    BYTE PTR [ebx],ah
  419c68:	mov    bl,BYTE PTR [ecx+ebx*1-0x3ccb196b]
  419c6f:	and    al,0x7e
  419c71:	cmp    DWORD PTR [edi],ebp
  419c73:	ret    
  419c74:	fstp   st(4)
  419c76:	sub    DWORD PTR [eax],eax
  419c78:	dec    ebx
  419c79:	push   esp
  419c7a:	jmp    0x6bff:0xb666eca5
  419c81:	sahf   
  419c82:	retf   
  419c83:	test   DWORD PTR [edx-0x2efc14e6],0xcb1b09b3
  419c8d:	fwait
  419c8e:	xchg   ebx,eax
  419c8f:	xlat   BYTE PTR ds:[ebx]
  419c90:	jns    0x419cdf
  419c92:	inc    edi
  419c93:	cs push ax
  419c96:	mov    al,0x3a
  419c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c99:	shl    DWORD PTR [ecx+0x2f759dc2],0x9b
  419ca0:	mov    ecx,0x4d8733cf
  419ca5:	cmc    
  419ca6:	mov    ds:0x5a8d6c58,al
  419cab:	jecxz  0x419c5b
  419cad:	xor    BYTE PTR [edi-0x14],dl
  419cb0:	div    BYTE PTR [ebx]
  419cb2:	pop    es
  419cb3:	or     DWORD PTR gs:[ebp+0x54499cf],0x7a
  419cbb:	mov    ecx,0xa09b851b
  419cc0:	cmp    BYTE PTR [edx-0x40150193],ch
  419cc6:	call   0x865a:0x36706303
  419ccd:	hlt    
  419cce:	cmp    al,0xc6
  419cd0:	test   BYTE PTR [esi+eax*8+0x773d1db5],bl
  419cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cd8:	shl    DWORD PTR [ebx+ecx*1-0x3a],cl
  419cdc:	lods   al,BYTE PTR ds:[esi]
  419cdd:	dec    ebx
  419cde:	nop
  419cdf:	(bad)  
  419ce0:	mov    al,BYTE PTR [ecx-0x58]
  419ce3:	dec    ecx
  419ce4:	imul   esi,DWORD PTR [edi-0x7259be4f],0x68b73c36
  419cee:	adc    BYTE PTR [ebx*2+0x7a33587],0x44
  419cf6:	aaa    
  419cf7:	mov    ecx,DWORD PTR es:[edx-0x38715c15]
  419cfe:	xlat   BYTE PTR ds:[ebx]
  419cff:	fimul  WORD PTR [edx-0x61afb4ec]
  419d05:	add    ecx,esi
  419d07:	retf   
  419d08:	mov    edi,DWORD PTR [edi+0x68]
  419d0b:	ret    0x859a
  419d0e:	and    cl,bl
  419d10:	stos   BYTE PTR es:[edi],al
  419d11:	ja     0x419d87
  419d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d14:	enter  0xa4f5,0x2c
  419d18:	sub    bh,BYTE PTR [edx+0x408a22eb]
  419d1e:	fadd   QWORD PTR [ebp+ebp*2-0x31]
  419d22:	int3   
  419d23:	stos   BYTE PTR es:[edi],al
  419d24:	pop    ds
  419d25:	lea    esi,[edx+0x5a]
  419d28:	sahf   
  419d29:	rol    esi,cl
  419d2b:	stc    
  419d2c:	cmp    eax,0x50bc2f00
  419d31:	mov    ebx,0x8a8e4e06
  419d36:	ret    
  419d37:	jb     0x419d12
  419d39:	(bad)  
  419d3b:	mov    ds:0x10b08dd1,al
  419d40:	mov    eax,ds:0x810d3c1d
  419d45:	scas   eax,DWORD PTR es:[edi]
  419d46:	das    
  419d47:	pop    ebx
  419d48:	add    DWORD PTR [edi+0x35],edi
  419d4b:	stos   DWORD PTR es:[edi],eax
  419d4c:	call   0xb86a:0x18a61e94
  419d53:	mov    eax,0x74a76cb2
  419d58:	mov    dh,BYTE PTR [eax+0xc]
  419d5b:	inc    eax
  419d5c:	add    cl,ch
  419d5e:	push   esp
  419d5f:	push   ss
  419d60:	leave  
  419d61:	xchg   ebx,eax
  419d62:	test   bh,bh
  419d64:	ss mov esi,0xab607d6f
  419d6a:	(bad)  
  419d6b:	and    eax,0x6a63a48a
  419d70:	dec    edi
  419d71:	in     al,0xc0
  419d73:	xchg   ebx,eax
  419d74:	sbb    bh,ch
  419d76:	add    al,0xa6
  419d78:	and    BYTE PTR ds:0xead89976,al
  419d7e:	lahf   
  419d7f:	adc    BYTE PTR [ecx+0xe75de81],cl
  419d85:	mov    al,ds:0xcb8fce5b
  419d8a:	aas    
  419d8b:	mov    eax,ds:0xe568cc24
  419d90:	imul   esp,DWORD PTR [esi-0xe],0x9ee351eb
  419d97:	cmp    al,cl
  419d99:	add    al,0x25
  419d9b:	or     DWORD PTR [esi-0x73],ecx
  419d9e:	fild   WORD PTR [eax+0x2c00f2db]
  419da4:	mov    dh,0x8f
  419da6:	jb     0x419db3
  419da8:	mov    ebp,0x4a6d2a38
  419dad:	(bad)  
  419dae:	cld    
  419daf:	js     0x419d3b
  419db1:	shr    BYTE PTR [esi+0x78],0xf8
  419db5:	mov    dh,0x63
  419db7:	jmp    0x61de:0x50dc8d35
  419dbe:	push   edi
  419dbf:	in     al,0xbb
  419dc1:	adc    eax,0xfe073a2f
  419dc6:	mov    dl,0x32
  419dc8:	retf   
  419dc9:	rcl    BYTE PTR [ebx-0x59],cl
  419dcc:	enter  0xcc8f,0xa7
  419dd0:	and    ebx,ebp
  419dd2:	xchg   edx,eax
  419dd3:	xchg   esi,eax
  419dd4:	mov    DWORD PTR [ecx-0x20530fd1],0x7d522eb
  419dde:	(bad)  
  419de0:	aas    
  419de1:	pop    DWORD PTR [esi-0x512737]
  419de7:	mov    cl,dl
  419de9:	sbb    BYTE PTR [eax+ebx*8-0x5a],bh
  419ded:	les    edx,FWORD PTR [ecx-0x47e9b51a]
  419df3:	call   0xa61:0xa682dca2
  419dfa:	mov    bh,0xe3
  419dfc:	les    ecx,FWORD PTR [edx+0x13]
  419dff:	retf   0xafa6
  419e02:	xchg   edx,eax
  419e03:	xchg   BYTE PTR [edx-0x20],cl
  419e06:	xchg   esp,eax
  419e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e08:	mov    ebx,0x5da56bbd
  419e0d:	pop    edi
  419e0e:	sub    DWORD PTR [edi],ecx
  419e10:	call   0x1c60:0xdb26ae5d
  419e17:	add    al,0x8b
  419e19:	xchg   edi,eax
  419e1a:	cdq    
  419e1b:	inc    edi
  419e1c:	stos   BYTE PTR es:[edi],al
  419e1d:	sahf   
  419e1e:	mov    ds:0x17486adc,al
  419e23:	push   esp
  419e24:	jbe    0x419db3
  419e26:	jae    0x419dfe
  419e28:	sahf   
  419e29:	pop    ebp
  419e2a:	outs   dx,BYTE PTR ds:[esi]
  419e2b:	xchg   ecx,eax
  419e2c:	out    0xa6,al
  419e2e:	push   eax
  419e2f:	ret    0xc68b
  419e32:	das    
  419e33:	sub    bl,BYTE PTR [esi+0x1d]
  419e36:	fs pop esi
  419e38:	xor    BYTE PTR [ebx+0xffe87f6],bl
  419e3e:	add    ah,BYTE PTR [eax+edx*1]
  419e41:	cs pop eax
  419e43:	mov    ebx,0xd6bfebeb
  419e48:	rcr    DWORD PTR ds:0x25202d36,cl
  419e4e:	xchg   edi,eax
  419e4f:	push   es
  419e50:	pusha  
  419e51:	add    esi,ecx
  419e53:	clc    
  419e54:	icebp  
  419e55:	lea    ebx,[ebx-0x47]
  419e58:	(bad)
  419e5b:	inc    DWORD PTR [ecx+0x3a]
  419e5e:	das    
  419e5f:	dec    di
  419e61:	fdiv   DWORD PTR [esi-0x2f]
  419e64:	pop    edx
  419e65:	push   esi
  419e66:	cmp    DWORD PTR [edi+0x2a13caf9],esp
  419e6c:	adc    BYTE PTR [ecx+ebx*2-0x16],0xa1
  419e71:	sub    DWORD PTR [edi],0x3
  419e74:	xor    al,0x2a
  419e76:	mov    ah,0x78
  419e78:	adc    bh,BYTE PTR [eax]
  419e7a:	and    ebx,DWORD PTR [ebp-0x480a99d9]
  419e80:	(bad)  
  419e81:	rol    DWORD PTR [edx],0x5
  419e84:	shl    ch,0x8e
  419e87:	into   
  419e88:	mov    ds:0x31ef457c,eax
  419e8d:	ret    0xd2f
  419e90:	or     BYTE PTR [edi-0x4d],ch
  419e93:	push   0xf9af8d4d
  419e98:	jne    0x419eb3
  419e9a:	mov    eax,ds:0xdbc18858
  419e9f:	mov    bl,0x8a
  419ea1:	pop    esp
  419ea2:	std    
  419ea3:	rcr    DWORD PTR [esi-0x102368fa],0x8d
  419eaa:	jb     0x419e39
  419eac:	leave  
  419ead:	in     al,dx
  419eae:	in     eax,0xa2
  419eb0:	and    ch,BYTE PTR ds:0x2c8a575b
  419eb6:	push   ebx
  419eb7:	pop    ds
  419eb8:	adc    ch,dl
  419eba:	inc    edx
  419ebb:	pop    edi
  419ebc:	loopne 0x419e4b
  419ebe:	arpl   WORD PTR [ebp+ebp*1-0x1c],dx
  419ec2:	out    0x58,al
  419ec4:	pop    ecx
  419ec5:	arpl   WORD PTR [edi],bp
  419ec7:	lds    edx,FWORD PTR [esi]
  419ec9:	xchg   ebp,eax
  419eca:	cdq    
  419ecb:	repz les esi,FWORD PTR [ebx-0x50dd56d4]
  419ed2:	sub    esp,DWORD PTR [edx-0x135b21e]
  419ed8:	sar    BYTE PTR [ecx+0x2f],1
  419edb:	adc    eax,0x827ec666
  419ee0:	xchg   ebx,eax
  419ee1:	or     BYTE PTR [ebp-0x5a],cl
  419ee4:	mov    ecx,0x54772655
  419ee9:	sbb    eax,0xa80605dc
  419eee:	popa   
  419eef:	mov    ds:0xe1068590,al
  419ef4:	inc    eax
  419ef5:	es das 
  419ef7:	(bad)  
  419ef8:	or     ebx,DWORD PTR [esp+eiz*4+0x538c75cb]
  419eff:	es mov bl,0x9f
  419f02:	pop    ebx
  419f03:	sbb    al,0x4f
  419f05:	jmp    0x66cef48b
  419f0a:	mov    edi,0x9f75697d
  419f0f:	inc    edx
  419f10:	aad    0x14
  419f12:	aad    0xa4
  419f14:	inc    eax
  419f15:	into   
  419f16:	loopne 0x419ea0
  419f18:	arpl   WORD PTR [eax-0x61],cx
  419f1b:	arpl   si,bx
  419f1d:	fs (bad) 
  419f1f:	and    al,0x8a
  419f21:	mov    eax,ds:0x2a5c0a34
  419f26:	inc    esi
  419f27:	push   eax
  419f28:	sub    DWORD PTR [ebp-0x4ebb396a],ecx
  419f2e:	into   
  419f2f:	pop    esp
  419f30:	scas   al,BYTE PTR es:[edi]
  419f31:	pop    eax
  419f32:	xor    al,cl
  419f34:	ret    
  419f35:	retf   
  419f36:	inc    ecx
  419f37:	pop    ss
  419f38:	or     eax,0x66d39f3c
  419f3d:	data16 (bad) 
  419f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f40:	pop    edi
  419f41:	fild   WORD PTR ds:0xfb6ab9d0
  419f47:	das    
  419f48:	mov    dl,BYTE PTR [ebx+0x3e]
  419f4b:	sbb    edi,ecx
  419f4d:	jmp    0x2621:0x8d796a33
  419f54:	cmp    esi,DWORD PTR [ebx]
  419f56:	in     al,dx
  419f57:	popf   
  419f58:	pushf  
  419f59:	(bad)  
  419f5a:	cmp    esi,DWORD PTR [ebp+edi*1+0x14]
  419f5e:	mov    ds:0x34d794b2,eax
  419f63:	neg    ch
  419f65:	lods   eax,DWORD PTR ds:[esi]
  419f66:	jne    0x419fdd
  419f68:	clc    
  419f69:	rcr    DWORD PTR ss:[ebp-0x33],cl
  419f6d:	ss das 
  419f6f:	mov    BYTE PTR [ebp+0x9e8c41b],cl
  419f75:	mov    ebp,0xb5a72d2a
  419f7a:	xor    dh,BYTE PTR [edi]
  419f7c:	push   0x75
  419f7e:	das    
  419f7f:	shl    cl,cl
  419f81:	push   esi
  419f82:	pop    edi
  419f83:	push   ebx
  419f84:	aas    
  419f85:	fcomp  QWORD PTR [ebp+0x1662bea7]
  419f8b:	test   al,0x54
  419f8d:	fs aam 0xe1
  419f90:	popf   
  419f91:	jmp    0x86a14dc5
  419f96:	cmp    eax,edi
  419f98:	and    al,0x2d
  419f9a:	iret   
  419f9b:	into   
  419f9c:	pushf  
  419f9d:	jp     0x419f5f
  419f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa0:	pop    ebx
  419fa1:	and    bh,BYTE PTR [edx-0x10]
  419fa4:	fistp  WORD PTR [edi+0x298a039e]
  419faa:	add    esp,DWORD PTR [eax]
  419fac:	mov    bl,0xc5
  419fae:	pushf  
  419faf:	jne    0x419f80
  419fb1:	lea    edx,[edx-0x5f]
  419fb4:	ror    DWORD PTR [edi+0x76529295],1
  419fba:	das    
  419fbb:	bound  ebx,QWORD PTR [edi]
  419fbd:	fs jno 0x419fd1
  419fc0:	retf   
  419fc1:	ror    al,1
  419fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc4:	xlat   BYTE PTR ds:[ebx]
  419fc5:	push   cs
  419fc6:	sbb    BYTE PTR [esi+0x8],0xc
  419fca:	cmp    al,0x5
  419fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fcd:	imul   ecx,DWORD PTR [ebx+0x1b],0xf0adba8e
  419fd4:	or     al,BYTE PTR [esi+edx*4]
  419fd7:	call   0x5de0:0x60698af4
  419fde:	jp     0x41a025
  419fe0:	xor    al,0xbe
  419fe2:	push   0x46f5c553
  419fe7:	and    al,0xa7
  419fe9:	loop   0x419fac
  419feb:	data16 aad 0x3e
  419fee:	mov    bh,0x6
  419ff0:	xchg   edi,eax
  419ff1:	pop    ds
  419ff2:	dec    ecx
  419ff3:	pop    esi
  419ff4:	dec    edi
  419ff5:	ret    
  419ff6:	sub    BYTE PTR [edx+ecx*4-0x76],0x5
  419ffb:	xchg   ecx,eax
  419ffc:	adc    al,0xa3
  419ffe:	jne    0x419fc6
  41a000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a001:	aas    
  41a002:	nop
  41a003:	mov    dl,0x40
  41a005:	lea    ebx,[ebx+0x29b264ff]
  41a00b:	and    DWORD PTR [ebp+ecx*4-0x1bd029ac],edi
  41a012:	and    BYTE PTR [ebx],ah
  41a014:	mov    ecx,0xcf1d2f76
  41a019:	cdq    
  41a01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a01b:	sbb    al,0xa2
  41a01d:	or     eax,0x3875a6b6
  41a022:	add    eax,0xbee1df9e
  41a027:	outs   dx,BYTE PTR ds:[esi]
  41a028:	xchg   esp,eax
  41a029:	or     DWORD PTR [eax+ebp*4-0x24],ecx
  41a02d:	int    0x18
  41a02f:	mov    dl,0xe7
  41a031:	rol    BYTE PTR [ebx],0xa6
  41a034:	fst    DWORD PTR [eax+edx*1+0x39dfea98]
  41a03b:	in     eax,dx
  41a03c:	mov    ah,BYTE PTR [edi]
  41a03e:	call   0xfa56d0c8
  41a043:	mov    BYTE PTR [ebp-0x2c481b73],dl
  41a049:	pushf  
  41a04a:	rcl    DWORD PTR [ebp-0x31],1
  41a04d:	loopne 0x41a07d
  41a04f:	pop    ecx
  41a050:	mov    bl,0x3d
  41a052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a053:	inc    edx
  41a054:	adc    al,0x27
  41a056:	fs retf 0x8d91
  41a05a:	(bad)  
  41a05b:	icebp  
  41a05c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a05d:	repnz jecxz 0x41a04f
  41a060:	jge    0x419feb
  41a062:	das    
  41a063:	ins    DWORD PTR es:[edi],dx
  41a064:	adc    ecx,DWORD PTR [ecx]
  41a066:	pusha  
  41a067:	ficomp DWORD PTR [edi+eax*8]
  41a06a:	popa   
  41a06b:	mov    BYTE PTR [edi+0x76a5d687],dl
  41a071:	add    al,0x11
  41a073:	clc    
  41a074:	(bad)  
  41a075:	aam    0x2e
  41a077:	loop   0x41a0ce
  41a079:	ret    0x2a2d
  41a07c:	cs test al,0x43
  41a07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a080:	enter  0xde5c,0x28
  41a084:	and    eax,0x8a830f4b
  41a089:	rol    BYTE PTR [ebx+0x75ed9299],0xd2
  41a090:	dec    esp
  41a091:	mov    ebx,?
  41a093:	inc    esi
  41a094:	cmp    eax,0x39b8d3c9
  41a099:	loope  0x41a091
  41a09b:	in     al,dx
  41a09c:	mov    dh,BYTE PTR [esi]
  41a09e:	pop    ebp
  41a09f:	xor    eax,0x721844c4
  41a0a4:	xchg   esp,eax
  41a0a5:	(bad)  
  41a0a6:	leave  
  41a0a7:	lds    eax,FWORD PTR ds:0x8d340ee3
  41a0ad:	xchg   esi,eax
  41a0ae:	outs   dx,DWORD PTR cs:[esi]
  41a0b0:	popf   
  41a0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b2:	gs loop 0x41a11f
  41a0b5:	pushf  
  41a0b6:	and    eax,0x278db2d4
  41a0bb:	leave  
  41a0bc:	cmc    
  41a0bd:	or     DWORD PTR [ecx+0x24],edx
  41a0c0:	addr16 mov ds:0x2b38,eax
  41a0c4:	not    BYTE PTR [esp+ebx*4+0x26]
  41a0c8:	mov    edi,0x52f97f15
  41a0cd:	lea    ebp,[eax]
  41a0cf:	push   ebx
  41a0d0:	fwait
  41a0d1:	xor    esi,ecx
  41a0d3:	mov    al,0xbf
  41a0d5:	xor    eax,0x84ef2442
  41a0da:	xor    BYTE PTR [esi],dl
  41a0dc:	cld    
  41a0dd:	sahf   
  41a0de:	inc    ebx
  41a0df:	aas    
  41a0e0:	jle    0x41a0c2
  41a0e2:	fisub  DWORD PTR [ebx+edi*1+0x7f39bef3]
  41a0e9:	mov    bl,0x5b
  41a0eb:	and    al,0xd9
  41a0ed:	gs out dx,eax
  41a0ef:	(bad)  
  41a0f0:	sbb    BYTE PTR [ebx],dh
  41a0f2:	fistp  DWORD PTR [edx+ecx*4]
  41a0f5:	add    BYTE PTR ds:[edi+ebx*4],ch
  41a0f9:	adc    al,0x6
  41a0fb:	jb     0x41a085
  41a0fd:	lea    ebp,[esi+0x21]
  41a100:	int3   
  41a101:	in     al,dx
  41a102:	jecxz  0x41a104
  41a104:	imul   esi,DWORD PTR [edx+0x2f],0xb171ed08
  41a10b:	pop    esi
  41a10c:	das    
  41a10d:	cwde   
  41a10e:	pushf  
  41a10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a110:	jmp    0xe61bb871
  41a115:	mov    ebx,0xa11239cf
  41a11a:	addr16 xchg ebx,eax
  41a11c:	mov    cl,BYTE PTR [ebx]
  41a11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a11f:	arpl   WORD PTR [edi],cx
  41a121:	scas   eax,DWORD PTR es:[edi]
  41a122:	cmp    eax,0xa28a532c
  41a127:	push   0xffffffaa
  41a129:	jno    0x41a111
  41a12b:	and    eax,0x49f1a700
  41a130:	mov    ah,BYTE PTR [ebx-0x58235e7b]
  41a136:	mov    esp,0x7b8dfb77
  41a13b:	sbb    ch,BYTE PTR [eax+0x47592316]
  41a141:	adc    al,0x2f
  41a143:	pop    es
  41a144:	sbb    al,0xe
  41a146:	lock fild WORD PTR [ebp-0x1a]
  41a14a:	fs push ebx
  41a14c:	fmul   QWORD PTR [ebp+0x5489032d]
  41a152:	and    al,0x5d
  41a154:	adc    eax,0x8a79dae9
  41a159:	cli    
  41a15a:	lahf   
  41a15b:	dec    eax
  41a15c:	lods   al,BYTE PTR ds:[esi]
  41a15d:	xchg   DWORD PTR [ecx+eax*1-0x280072d4],ecx
  41a164:	inc    eax
  41a165:	cmp    dl,ah
  41a167:	inc    esp
  41a168:	scas   eax,DWORD PTR es:[edi]
  41a169:	jle    0x41a1ad
  41a16b:	mov    DWORD PTR [ebx-0x24],ecx
  41a16e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a170:	and    bl,BYTE PTR [ecx]
  41a172:	jg     0x41a14a
  41a174:	cmc    
  41a175:	lea    ebx,[ecx+0x63]
  41a178:	(bad)  
  41a179:	cmc    
  41a17a:	mov    edi,0x43d0ef49
  41a17f:	fld    QWORD PTR [esi]
  41a181:	xchg   ebp,eax
  41a182:	das    
  41a183:	ja     0x41a163
  41a185:	push   cs
  41a186:	jmp    0xe4cf9c58
  41a18b:	inc    esi
  41a18c:	out    dx,al
  41a18d:	push   0xffffffde
  41a18f:	dec    esp
  41a190:	jnp    0x41a1ed
  41a192:	das    
  41a193:	inc    ebx
  41a194:	mov    dh,0x22
  41a196:	inc    edi
  41a197:	or     DWORD PTR [ecx+edx*2],0xa2c7a5fa
  41a19e:	outs   dx,BYTE PTR ds:[esi]
  41a19f:	cwde   
  41a1a0:	daa    
  41a1a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a2:	dec    esp
  41a1a3:	dec    ebp
  41a1a4:	shl    ecx,0x21
  41a1a7:	and    eax,0xc0f101e9
  41a1ac:	aam    0xe5
  41a1ae:	xchg   ecx,eax
  41a1af:	cmp    BYTE PTR [bp+si-0x7be7],cl
  41a1b4:	push   esi
  41a1b5:	cmp    DWORD PTR [eax-0x691795bb],edi
  41a1bb:	xchg   ebp,eax
  41a1bc:	fbld   TBYTE PTR [eax-0x5fd55d09]
  41a1c2:	daa    
  41a1c3:	(bad)
  41a1c7:	inc    edx
  41a1c8:	xlat   BYTE PTR ds:[ebx]
  41a1c9:	sub    eax,0xfb7938c4
  41a1ce:	inc    ecx
  41a1cf:	nop
  41a1d0:	ins    BYTE PTR es:[edi],dx
  41a1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d2:	das    
  41a1d3:	push   ss
  41a1d4:	repnz sub dh,ah
  41a1d7:	test   esp,ecx
  41a1d9:	pop    ds
  41a1da:	das    
  41a1db:	mov    ebx,0x72473c9
  41a1e0:	pop    ss
  41a1e1:	push   eax
  41a1e2:	jmp    DWORD PTR [ebp+0x39fd20ae]
  41a1e8:	aaa    
  41a1e9:	jl     0x41a17a
  41a1eb:	jno    0x41a177
  41a1ed:	cwde   
  41a1ee:	inc    eax
  41a1ef:	jnp    0x41a230
  41a1f1:	mov    dl,0x6a
  41a1f3:	mov    edi,0xf74db14e
  41a1f8:	mov    ebp,0xec8a888e
  41a1fd:	cmp    DWORD PTR [eax+0x5e6d935c],ebx
  41a203:	lea    ebp,ss:[edx]
  41a206:	jno    0x41a248
  41a208:	test   ebx,0x1392e66e
  41a20e:	jbe    0x41a1c4
  41a210:	jo     0x41a1d0
  41a212:	or     ah,BYTE PTR [eax-0x32b04976]
  41a218:	mov    dh,0x7d
  41a21a:	aad    0xce
  41a21c:	cdq    
  41a21d:	cmc    
  41a21e:	xor    DWORD PTR [ebx-0x76],edi
  41a221:	pusha  
  41a222:	dec    ebp
  41a223:	pop    edx
  41a224:	loopne 0x41a25b
  41a226:	jle    0x41a1ce
  41a228:	scas   al,BYTE PTR es:[edi]
  41a229:	imul   edi,DWORD PTR [edi],0x7da52650
  41a22f:	loope  0x41a1bb
  41a231:	push   ebx
  41a232:	jae    0x41a268
  41a234:	stos   BYTE PTR es:[edi],al
  41a235:	jb     0x41a251
  41a237:	aad    0xce
  41a239:	lea    ebp,[ebx+0x56]
  41a23c:	(bad)
  41a240:	mov    ch,0x89
  41a242:	das    
  41a243:	push   0x3862fc42
  41a248:	xlat   BYTE PTR ds:[ebx]
  41a249:	cmp    dl,0xa5
  41a24c:	pop    edi
  41a24d:	xor    esi,ebp
  41a24f:	sub    BYTE PTR [eax],0x8b
  41a252:	xchg   BYTE PTR [esi],dh
  41a254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a255:	sub    eax,0x97017268
  41a25a:	xor    edx,DWORD PTR [eax+ebx*8]
  41a25d:	or     eax,0xd35b7a6
  41a262:	mov    WORD PTR [esi-0x6e721567],fs
  41a268:	adc    dl,dl
  41a26a:	add    DWORD PTR [ebx],0xffffffa6
  41a26d:	arpl   WORD PTR [edx+0x13914d9e],ax
  41a273:	lods   eax,DWORD PTR ds:[esi]
  41a274:	mov    ebx,0x5600182f
  41a279:	ds inc ecx
  41a27b:	mov    cl,0x8d
  41a27d:	repnz inc edi
  41a27f:	out    0xbf,al
  41a281:	and    ch,BYTE PTR ds:0xe4d9ef0c
  41a287:	mov    bh,0x5
  41a289:	enter  0xd62f,0x79
  41a28d:	and    eax,0xd4df1db3
  41a292:	jl     0x41a246
  41a294:	cwde   
  41a295:	mov    esp,es
  41a297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a298:	mov    WORD PTR [eax+0xb829801],?
  41a29e:	ror    ah,1
  41a2a0:	mov    bl,BYTE PTR [edx-0x4de29285]
  41a2a6:	mov    dh,0x73
  41a2a8:	sbb    BYTE PTR [ebp+0xdba933b],cl
  41a2ae:	jb     0x41a26d
  41a2b0:	jb     0x41a2b3
  41a2b2:	sub    esi,DWORD PTR [esi]
  41a2b4:	scas   al,BYTE PTR es:[edi]
  41a2b5:	stos   DWORD PTR es:[edi],eax
  41a2b6:	idiv   esp
  41a2b8:	dec    edx
  41a2b9:	sbb    al,0xc5
  41a2bb:	int    0xad
  41a2bd:	(bad)  
  41a2be:	std    
  41a2bf:	xchg   esi,eax
  41a2c0:	(bad)  
  41a2c1:	cmp    dl,BYTE PTR [eax]
  41a2c3:	and    al,0xe3
  41a2c5:	mov    cl,0x2f
  41a2c7:	dec    esi
  41a2c8:	jnp    0x41a296
  41a2ca:	mov    ah,0x37
  41a2cc:	ret    0x17e8
  41a2cf:	mov    al,ds:0x641586da
  41a2d4:	stos   BYTE PTR es:[edi],al
  41a2d5:	loope  0x41a28e
  41a2d7:	inc    edx
  41a2d8:	(bad)  
  41a2d9:	hlt    
  41a2da:	inc    ebp
  41a2db:	sti    
  41a2dc:	xchg   edi,eax
  41a2dd:	cwde   
  41a2de:	scas   eax,DWORD PTR es:[edi]
  41a2df:	out    dx,al
  41a2e0:	jmp    0xd87c354c
  41a2e5:	xchg   ebx,eax
  41a2e6:	jmp    0x4f9f18bb
  41a2eb:	sub    DWORD PTR ds:0x8a796445,esi
  41a2f1:	ins    BYTE PTR es:[edi],dx
  41a2f2:	rcl    DWORD PTR [ebp+ebp*8-0x77],cl
  41a2f6:	clc    
  41a2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2f8:	sti    
  41a2f9:	lea    ebp,[esi+0x24]
  41a2fc:	call   0x2fa9:0x8b050a84
  41a303:	inc    edi
  41a304:	pop    esi
  41a305:	mov    ds:0xdfe84bbd,eax
  41a30a:	out    dx,al
  41a30b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a30c:	test   BYTE PTR [edi+0x66],bh
  41a30f:	adc    al,0x72
  41a311:	pop    ds
  41a312:	or     bh,BYTE PTR [edx-0x76]
  41a315:	jno    0x41a343
  41a317:	mov    al,0x67
  41a319:	inc    esi
  41a31a:	or     cl,ch
  41a31c:	mov    dh,0x7a
  41a31e:	or     esp,DWORD PTR [esi-0x22313012]
  41a324:	or     BYTE PTR [ecx+0x728a1a3d],bl
  41a32a:	and    BYTE PTR [eax+0x71],al
  41a32d:	daa    
  41a32e:	lods   eax,DWORD PTR ds:[esi]
  41a32f:	int    0xba
  41a331:	lea    ebp,[eax+0x71c94d9]
  41a337:	fst    QWORD PTR ss:[edx+0x2f]
  41a33b:	icebp  
  41a33c:	cmp    al,0xb4
  41a33e:	out    dx,al
  41a33f:	sub    DWORD PTR [ebx+0x6a6ac51],eax
  41a345:	es and eax,0xf4c2cb94
  41a34b:	adc    eax,0x7a6fb88a
  41a350:	popf   
  41a351:	data16 jne 0x41a38b
  41a354:	or     ecx,DWORD PTR [edi-0x515b66b]
  41a35a:	add    al,BYTE PTR [edi+0x6a]
  41a35d:	sti    
  41a35e:	es scas al,BYTE PTR es:[edi]
  41a360:	mov    dl,BYTE PTR [ebp-0x39a5bf20]
  41a366:	xchg   esp,eax
  41a367:	jmp    0x8e46:0x4d75836f
  41a36e:	fadd   st(5),st
  41a370:	fiadd  WORD PTR [ebx+0x375a2ce2]
  41a376:	call   0xb625:0xe3cdc77b
  41a37d:	repz inc ebx
  41a37f:	fimul  DWORD PTR [ebx+0x53]
  41a382:	xor    eax,0x9f2d6a6
  41a387:	cmp    dl,BYTE PTR [eax]
  41a389:	and    DWORD PTR [edx],ebp
  41a38b:	inc    ecx
  41a38c:	mov    al,BYTE PTR [ebx+0x38]
  41a38f:	jmp    0x2f88f2e6
  41a394:	lock sti 
  41a396:	repz mov edi,0xaa758cea
  41a39c:	fstp   DWORD PTR gs:[esi+0x56]
  41a3a0:	adc    BYTE PTR [ebp-0x5f],ch
  41a3a3:	dec    DWORD PTR [edx+0x46298bad]
  41a3a9:	das    
  41a3aa:	pop    ebp
  41a3ab:	xchg   esi,eax
  41a3ac:	ja     0x41a33b
  41a3ae:	dec    esi
  41a3af:	call   0xa29f:0xd371e148
  41a3b6:	das    
  41a3b7:	iret   
  41a3b8:	and    ecx,edi
  41a3ba:	xor    ecx,ebx
  41a3bc:	push   es
  41a3bd:	push   edi
  41a3be:	xchg   DWORD PTR [esi-0x781b9fd1],esp
  41a3c4:	add    dl,BYTE PTR [ebx-0x24e574b0]
  41a3ca:	cs call 0x5c627ac5
  41a3d0:	dec    edi
  41a3d1:	addr16 mov cl,0xa6
  41a3d4:	neg    BYTE PTR [edi+0x64]
  41a3d7:	cmp    al,0x71
  41a3d9:	inc    esi
  41a3da:	mov    al,ds:0x95df8a04
  41a3df:	imul   esi,DWORD PTR [edx],0x6f203cae
  41a3e5:	lea    ecx,[edi+eiz*1-0x63d34f45]
  41a3ec:	in     eax,0x73
  41a3ee:	das    
  41a3ef:	gs mov ah,0x3a
  41a3f2:	ja     0x41a3c5
  41a3f4:	fistp  QWORD PTR [esi-0x72]
  41a3f7:	push   edx
  41a3f8:	cwde   
  41a3f9:	lea    edx,[edi-0x49]
  41a3fc:	fcom   QWORD PTR [ecx+0x6c8d5bd4]
  41a402:	das    
  41a403:	mov    dh,dh
  41a405:	aad    0x92
  41a407:	mov    cs,WORD PTR [ebp-0x18]
  41a40a:	push   cs
  41a40b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a40c:	shr    ecx,cl
  41a40e:	fcomp  st(6)
  41a410:	jl     0x41a3dd
  41a412:	test   ch,bl
  41a414:	mov    DWORD PTR [eax+0x15],esp
  41a417:	and    al,0xb3
  41a419:	fisttp DWORD PTR [ebx+0x29612ad6]
  41a41f:	scas   al,BYTE PTR es:[edi]
  41a420:	pop    edx
  41a421:	rcr    cl,cl
  41a423:	std    
  41a424:	inc    edi
  41a425:	popf   
  41a426:	inc    ebp
  41a427:	stos   BYTE PTR es:[edi],al
  41a428:	mov    dh,0x25
  41a42a:	out    dx,eax
  41a42b:	jbe    0x41a404
  41a42d:	data16 jnp 0x41a3be
  41a430:	jo     0x41a41b
  41a432:	mov    bh,0xa6
  41a434:	jns    0x41a457
  41a436:	mov    ebp,0xdb9dcdf6
  41a43b:	aad    0x98
  41a43d:	ds lock push es
  41a440:	mov    ecx,DWORD PTR [eax-0x56c7653f]
  41a446:	push   edi
  41a447:	sbb    dl,cl
  41a449:	xchg   edx,eax
  41a44a:	fild   WORD PTR [eax]
  41a44c:	push   gs
  41a44e:	out    dx,eax
  41a44f:	add    dl,BYTE PTR [esi+0x5d]
  41a452:	jne    0x41a425
  41a454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a455:	or     edi,DWORD PTR [edx+0x45]
  41a458:	sub    BYTE PTR [bp+di],bh
  41a45b:	mov    ebp,0x60918d7b
  41a460:	mov    ?,WORD PTR [ecx]
  41a462:	(bad)  
  41a463:	pop    ecx
  41a464:	fmul   DWORD PTR [ebp+0x224878a4]
  41a46a:	xchg   BYTE PTR [edi-0x7cc23dc5],ah
  41a470:	les    bp,DWORD PTR [edi]
  41a473:	mov    bl,0x51
  41a475:	mov    ds:0x8d43dc39,eax
  41a47a:	xchg   ebp,eax
  41a47b:	scas   al,BYTE PTR es:[edi]
  41a47c:	add    ah,BYTE PTR gs:[ebx-0x58f041db]
  41a483:	mov    WORD PTR [ecx+0x3abb7e42],ss
  41a489:	in     eax,dx
  41a48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48b:	into   
  41a48c:	stos   DWORD PTR es:[edi],eax
  41a48d:	lea    ecx,[edx-0x53439146]
  41a493:	rol    BYTE PTR [ecx-0x7221b461],cl
  41a499:	xchg   ebx,eax
  41a49a:	pop    ebx
  41a49b:	mov    eax,ebx
  41a49d:	mov    cl,0x86
  41a49f:	inc    edi
  41a4a0:	xlat   BYTE PTR ds:[ebx]
  41a4a1:	mov    ds,WORD PTR [edx-0xf]
  41a4a4:	jp     0x41a4b2
  41a4a6:	jne    0x41a44e
  41a4a8:	push   edi
  41a4a9:	out    dx,eax
  41a4aa:	sbb    eax,0x4443ce05
  41a4af:	dec    esi
  41a4b0:	lea    esp,[edx+0x5d783114]
  41a4b6:	pop    ds
  41a4b7:	adc    BYTE PTR [eax-0x4254cb8c],0x99
  41a4be:	xor    eax,0xb38d418f
  41a4c3:	out    0x56,al
  41a4c5:	mov    ds:0x8a4af3,eax
  41a4ca:	pop    eax
  41a4cb:	test   DWORD PTR [edi+0x68b886e0],esi
  41a4d1:	(bad)  
  41a4d2:	cmc    
  41a4d3:	jp     0x41a511
  41a4d5:	xchg   esp,eax
  41a4d6:	adc    DWORD PTR [edx+0x589f4719],ebx
  41a4dc:	mov    dl,ah
  41a4de:	test   DWORD PTR [edx-0x11],ebp
  41a4e1:	js     0x41a54f
  41a4e3:	jmp    0x8d58:0xcd08a226
  41a4ea:	ds xchg edx,eax
  41a4ec:	fsub   st(0),st
  41a4ee:	(bad)  
  41a4ef:	(bad)  [edx-0x6ef2b08d]
  41a4f5:	xor    eax,DWORD PTR [esi-0x697261b4]
  41a4fb:	add    cl,BYTE PTR [eax]
  41a4fd:	adc    eax,0xc07acfca
  41a502:	das    
  41a503:	lock inc edx
  41a505:	aam    0xd4
  41a507:	(bad)  
  41a508:	push   ds
  41a509:	clc    
  41a50a:	out    dx,eax
  41a50b:	mov    ah,0x3c
  41a50d:	mov    ebp,0xdc7fa627
  41a512:	inc    eax
  41a513:	sbb    edi,DWORD PTR [eax-0x3e]
  41a516:	das    
  41a517:	aaa    
  41a518:	or     eax,0x68a5229d
  41a51d:	fsub   st,st(6)
  41a51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a520:	xchg   edi,eax
  41a521:	pushf  
  41a522:	sti    
  41a523:	cdq    
  41a524:	xor    dl,BYTE PTR [edi+ecx*4]
  41a527:	fcmovu st,st(7)
  41a529:	jmp    0xe6a4:0x54c28135
  41a530:	lods   eax,DWORD PTR ds:[esi]
  41a531:	pop    ds
  41a532:	jo     0x41a590
  41a534:	jge    0x41a4c3
  41a536:	repz sbb esi,DWORD PTR [edx+eiz*1]
  41a53a:	lods   al,BYTE PTR ds:[esi]
  41a53b:	cmp    eax,0x47479ee3
  41a540:	(bad)  [edi]
  41a542:	fstp   TBYTE PTR ds:0x5f87a376
  41a548:	xchg   esi,eax
  41a549:	dec    ebp
  41a54a:	mov    DWORD PTR [eax+0x711ce6ae],edx
  41a550:	mov    esi,eax
  41a552:	test   al,0xf6
  41a554:	mov    ebx,DWORD PTR [eax]
  41a556:	shl    BYTE PTR [ebp+0x4611a7ee],1
  41a55c:	cs pusha 
  41a55e:	jnp    0x41a587
  41a560:	mov    bh,BYTE PTR [edx+0x62ccf199]
  41a566:	jge    0x41a4fc
  41a568:	jg     0x41a4f7
  41a56a:	pop    ebx
  41a56b:	mov    bl,0x9b
  41a56d:	xchg   edi,eax
  41a56e:	sub    DWORD PTR [edi-0x5fd11b86],edi
  41a574:	repnz push edx
  41a576:	scas   eax,DWORD PTR es:[edi]
  41a577:	scas   al,BYTE PTR es:[edi]
  41a578:	std    
  41a579:	push   esi
  41a57a:	ins    BYTE PTR es:[edi],dx
  41a57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a57c:	pushf  
  41a57d:	repnz mov ebx,0x295c1671
  41a583:	mov    esi,0x2b2e47ad
  41a588:	dec    ecx
  41a589:	loopne 0x41a58f
  41a58b:	push   0x419fc41a
  41a590:	in     al,dx
  41a591:	std    
  41a592:	pushf  
  41a593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a594:	repz jle 0x41a5dd
  41a597:	pop    ebp
  41a598:	outs   dx,BYTE PTR ds:[esi]
  41a599:	ror    DWORD PTR [ebx+0x79],1
  41a59c:	mov    ah,BYTE PTR [esi]
  41a59e:	add    DWORD PTR ds:0x6d8e1674,edi
  41a5a4:	ffreep st(7)
  41a5a6:	in     eax,0xde
  41a5a8:	lea    ebx,[ebp+0x1e]
  41a5ab:	sbb    edi,esp
  41a5ad:	std    
  41a5ae:	sub    BYTE PTR [ebp+0x15],al
  41a5b1:	jp     0x41a5e2
  41a5b3:	fwait
  41a5b4:	xchg   ecx,eax
  41a5b5:	gs dec esp
  41a5b7:	loop   0x41a61b
  41a5b9:	sbb    eax,0x2d57a66d
  41a5be:	iret   
  41a5bf:	xchg   esp,eax
  41a5c0:	dec    edi
  41a5c1:	adc    al,0xa9
  41a5c3:	mov    ebx,0xb31e568f
  41a5c8:	xchg   ebp,eax
  41a5c9:	jo     0x41a57a
  41a5cb:	mov    eax,0xa639fe27
  41a5d0:	adc    eax,0x26e4b1f
  41a5d5:	and    eax,0x9795dc2a
  41a5da:	out    dx,al
  41a5db:	aad    0x93
  41a5dd:	lea    ecx,ds:0xbb81c5c7
  41a5e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5e4:	push   esi
  41a5e5:	imul   eax,DWORD PTR [edi+0x48de9442],0x6c318a73
  41a5ef:	iret   
  41a5f0:	adc    al,0x99
  41a5f2:	std    
  41a5f3:	ins    DWORD PTR es:[edi],dx
  41a5f4:	mov    ebp,0x2ca69ee1
  41a5f9:	sti    
  41a5fa:	or     ebx,DWORD PTR [edi]
  41a5fc:	cmp    eax,0x27582558
  41a601:	les    ebx,FWORD PTR [esi+eiz*1]
  41a604:	cli    
  41a605:	fidiv  WORD PTR [ebx-0x45bed970]
  41a60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a60c:	lock xchg edx,eax
  41a60e:	sub    DWORD PTR [esi-0x5a],ecx
  41a611:	cld    
  41a612:	xor    edx,esp
  41a614:	mov    dl,ch
  41a616:	push   edx
  41a617:	outs   dx,BYTE PTR ds:[esi]
  41a618:	adc    eax,0xffd5097
  41a61d:	lea    esp,[edi+0x6a]
  41a620:	sbb    al,0x91
  41a622:	fst    QWORD PTR [esi+0x75]
  41a625:	fisubr DWORD PTR [esi]
  41a627:	adc    esi,DWORD PTR [edi-0x61]
  41a62a:	inc    edi
  41a62b:	mov    esp,0xa617ad4f
  41a630:	(bad)  
  41a631:	push   ebx
  41a632:	mov    edx,0x8cf39daf
  41a637:	dec    ebx
  41a638:	mov    dh,0x75
  41a63a:	mov    bl,0x42
  41a63c:	lea    esi,[edi-0x50]
  41a63f:	and    BYTE PTR [edx-0x26],cl
  41a642:	dec    edi
  41a643:	cmc    
  41a644:	jns    0x41a683
  41a646:	cli    
  41a647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a648:	retf   
  41a649:	ror    BYTE PTR [ebp-0x2403cde4],cl
  41a64f:	ret    0x7b8a
  41a652:	dec    ecx
  41a653:	xor    BYTE PTR [eax+0x0],cl
  41a656:	std    
  41a657:	mov    ds:0x85b392d3,eax
  41a65c:	xchg   ecx,eax
  41a65d:	mov    dh,0x56
  41a65f:	scas   al,BYTE PTR es:[edi]
  41a660:	or     bh,BYTE PTR [edi-0x7e5be0c3]
  41a666:	ss pusha 
  41a668:	pop    ebx
  41a669:	add    edx,DWORD PTR [edi-0x1634c2ba]
  41a66f:	outs   dx,DWORD PTR ds:[esi]
  41a670:	sbb    BYTE PTR [ebp-0x6835a3a],cl
  41a676:	or     ecx,DWORD PTR [ebp-0x1bb465d8]
  41a67c:	mov    ah,BYTE PTR [edi]
  41a67e:	into   
  41a67f:	(bad)  
  41a680:	xchg   ecx,eax
  41a681:	sub    DWORD PTR [edi+edi*8-0x346c3b9b],0xb
  41a689:	sbb    BYTE PTR [edx-0x60],ch
  41a68c:	mov    ds:0x2dd1f5dc,eax
  41a691:	sub    BYTE PTR ds:0xe6ddd465,dh
  41a697:	test   DWORD PTR [esi+0xa],esi
  41a69a:	fsubrp st(2),st
  41a69c:	(bad)
  41a69f:	xor    BYTE PTR [edx],cl
  41a6a1:	inc    ebx
  41a6a2:	data16 in al,dx
  41a6a4:	outs   dx,DWORD PTR ds:[esi]
  41a6a5:	pop    ds
  41a6a6:	cmp    ch,BYTE PTR [edi]
  41a6a8:	(bad)  
  41a6a9:	cld    
  41a6aa:	dec    ebp
  41a6ab:	(bad)  
  41a6ac:	cmp    al,0x32
  41a6ae:	outs   dx,DWORD PTR ds:[esi]
  41a6af:	bnd jns 0x41a6da
  41a6b2:	in     al,0xaf
  41a6b4:	cmp    DWORD PTR [edx+0x3c1a66a1],ecx
  41a6ba:	test   eax,0x2fc5a189
  41a6bf:	jns    0x41a716
  41a6c1:	test   DWORD PTR [ebx],esi
  41a6c3:	sar    DWORD PTR [edx],0xd1
  41a6c6:	sub    ah,BYTE PTR [esi+0x3d29e9e6]
  41a6cc:	mov    dh,0x39
  41a6ce:	dec    esp
  41a6cf:	jmp    0xa0bf2998
  41a6d4:	mov    dl,0x56
  41a6d6:	mov    ch,0xc6
  41a6d8:	xchg   esp,eax
  41a6d9:	pop    edi
  41a6da:	(bad)  
  41a6db:	cmp    dh,BYTE PTR [edx]
  41a6dd:	lea    edi,[ebp+0x6eec9649]
  41a6e3:	mov    cl,0x66
  41a6e5:	cs das 
  41a6e7:	inc    ebp
  41a6e8:	sbb    dl,dl
  41a6ea:	leave  
  41a6eb:	ret    0xea14
  41a6ee:	add    esi,DWORD PTR [ecx-0x32f007dc]
  41a6f4:	mov    DWORD PTR ds:0x3232759b,edx
  41a6fa:	(bad)  
  41a6fb:	cld    
  41a6fc:	sbb    BYTE PTR [edx+0xfce402f],ch
  41a702:	pop    esi
  41a703:	or     eax,0xa7c67a2f
  41a708:	sahf   
  41a709:	xchg   DWORD PTR [ebx+0x1cff28a3],esp
  41a70f:	es pop eax
  41a711:	lods   eax,DWORD PTR ds:[esi]
  41a712:	push   ss
  41a713:	rcl    DWORD PTR [eax],0x61
  41a716:	sbb    al,0x4d
  41a718:	imul   ecx,DWORD PTR [ebp-0x240ea33a],0xfa1b3013
  41a722:	fist   DWORD PTR [edx+ecx*4]
  41a725:	dec    esi
  41a726:	mul    DWORD PTR [eax]
  41a728:	aad    0x28
  41a72a:	dec    edx
  41a72b:	and    eax,0x8810c06d
  41a730:	or     al,BYTE PTR [esi+eiz*2+0x5f0c861a]
  41a737:	test   DWORD PTR [edx+0x1f6a6189],ecx
  41a73d:	out    dx,eax
  41a73e:	fnsave [edx-0xa]
  41a741:	mov    fs,WORD PTR [ebx+edx*4+0x1f3ba5a]
  41a748:	push   edx
  41a749:	adc    bh,bh
  41a74b:	mov    cl,0x8a
  41a74d:	xor    dh,BYTE PTR ds:0x3438caa4
  41a753:	inc    esi
  41a754:	pop    es
  41a755:	xchg   esp,eax
  41a756:	xchg   edi,eax
  41a757:	mov    dl,BYTE PTR [ecx+0x19]
  41a75a:	das    
  41a75b:	test   BYTE PTR [ebp+0x7f],cl
  41a75e:	xchg   DWORD PTR ds:0xa76949a4,ebx
  41a764:	dec    edx
  41a765:	mov    dl,0xc5
  41a767:	arpl   WORD PTR [ecx-0x7b],si
  41a76a:	jno    0x41a6fd
  41a76c:	aaa    
  41a76d:	adc    BYTE PTR [esi+0x30edb1de],ch
  41a773:	(bad)  
  41a774:	sub    ebx,DWORD PTR [ebp-0x1a]
  41a777:	add    eax,0xcc5e5f8d
  41a77c:	imul   ecx,DWORD PTR [edx+0x1f],0x40
  41a780:	adc    BYTE PTR [esi],ah
  41a782:	ret    
  41a783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a784:	loopne 0x41a7b1
  41a786:	inc    ecx
  41a787:	pusha  
  41a788:	adc    esp,ebx
  41a78a:	jbe    0x41a76c
  41a78c:	mov    ah,BYTE PTR [ebx+0x19dfc00c]
  41a792:	and    al,0x98
  41a794:	xor    BYTE PTR [ebp-0x37184a2e],cl
  41a79a:	fnstenv [ecx-0x4a]
  41a79d:	repnz cs xchg ecx,eax
  41a7a0:	ret    
  41a7a1:	jge    0x41a767
  41a7a3:	ins    BYTE PTR es:[edi],dx
  41a7a4:	cs loopne 0x41a821
  41a7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7a8:	rol    DWORD PTR [ecx-0x31],0x64
  41a7ac:	mov    bl,0x36
  41a7ae:	outs   dx,DWORD PTR ds:[esi]
  41a7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b0:	mov    edx,0xd8443028
  41a7b5:	daa    
  41a7b6:	rol    BYTE PTR [edx+0x5187c158],cl
  41a7bc:	jle    0x41a74b
  41a7be:	bound  ecx,QWORD PTR [edx]
  41a7c0:	hlt    
  41a7c1:	mov    ds:0x9515cfa4,al
  41a7c6:	inc    esp
  41a7c7:	loopne 0x41a7c3
  41a7c9:	pop    ebp
  41a7ca:	scas   eax,DWORD PTR es:[edi]
  41a7cb:	jmp    0x8d30:0x921d65d7
  41a7d2:	addr16 mov eax,0xd5098777
  41a7d8:	mov    ch,0x89
  41a7da:	sub    al,0xe8
  41a7dc:	xor    ebp,DWORD PTR [ecx+0x2a]
  41a7df:	xchg   BYTE PTR [edx-0x53],cl
  41a7e2:	mov    eax,ds:0x238d1cfa
  41a7e7:	and    dh,ah
  41a7e9:	rcr    DWORD PTR [ebx+0x2f9f1047],cl
  41a7ef:	pop    ds
  41a7f0:	xchg   ebp,eax
  41a7f1:	inc    edx
  41a7f2:	call   0xbca6:0xc774423d
  41a7f9:	neg    DWORD PTR [ecx]
  41a7fb:	dec    ebp
  41a7fc:	inc    ecx
  41a7fd:	dec    ecx
  41a7fe:	xor    DWORD PTR [esi],edx
  41a800:	mov    ch,BYTE PTR [eax]
  41a802:	and    BYTE PTR [esi],0xf
  41a805:	jl     0x41a886
  41a807:	pop    es
  41a808:	jbe    0x41a797
  41a80a:	jle    0x41a7af
  41a80c:	(bad)  
  41a80d:	adc    DWORD PTR [ebx],0x7e
  41a810:	mov    eax,ds:0xb4cb2f6c
  41a815:	dec    ebx
  41a816:	inc    esi
  41a817:	shl    DWORD PTR [ebx-0x255a161d],cl
  41a81d:	ins    DWORD PTR es:[edi],dx
  41a81e:	bound  edi,QWORD PTR ds:0x90044e62
  41a824:	(bad)  
  41a825:	or     BYTE PTR [eax],0xa6
  41a828:	and    DWORD PTR [edi+0x64],edx
  41a82b:	dec    ebx
  41a82c:	mov    ebx,0xa6afcaf8
  41a831:	adc    dl,ah
  41a833:	in     eax,0x9c
  41a835:	push   ebp
  41a836:	push   edi
  41a837:	adc    BYTE PTR [ebx-0xfced0a2],al
  41a83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a83e:	into   
  41a83f:	and    ebp,eax
  41a841:	sub    ebx,ebx
  41a843:	nop
  41a844:	or     DWORD PTR [eax],edx
  41a846:	das    
  41a847:	add    eax,0x6394c564
  41a84c:	sub    al,0xff
  41a84e:	cs xchg edx,eax
  41a850:	jl     0x41a8c1
  41a852:	ret    0x273a
  41a855:	xchg   edi,eax
  41a856:	arpl   WORD PTR [ebp-0x1850f5b4],cx
  41a85c:	dec    edx
  41a85d:	sub    ebx,esp
  41a85f:	ror    BYTE PTR [ebx*4+0x300eb32f],0x69
  41a867:	and    edi,esp
  41a869:	aas    
  41a86a:	push   es
  41a86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a86c:	xchg   esp,eax
  41a86d:	aam    0x98
  41a86f:	aas    
  41a870:	mov    al,ds:0x8aeca6c9
  41a875:	cmc    
  41a876:	scas   al,BYTE PTR es:[edi]
  41a877:	push   eax
  41a878:	cli    
  41a879:	or     al,0x7b
  41a87b:	sti    
  41a87c:	aam    0x92
  41a87e:	and    al,0x52
  41a880:	shr    BYTE PTR [edi+ecx*8],0x2c
  41a884:	cmpxchg al,cl
  41a887:	cld    
  41a888:	mov    bl,BYTE PTR [ebp+0x49]
  41a88b:	jmp    0x7254a903
  41a890:	stos   BYTE PTR es:[edi],al
  41a891:	lea    ecx,[edx+0x3e]
  41a894:	jmp    0x41a880
  41a896:	mov    ch,0xf2
  41a898:	push   0xfffffff8
  41a89a:	or     dl,BYTE PTR [esi-0x50d1200b]
  41a8a0:	leave  
  41a8a1:	inc    ebp
  41a8a2:	add    eax,0xfa8d2610
  41a8a7:	out    dx,al
  41a8a8:	xor    eax,0xec61bc15
  41a8ad:	int3   
  41a8ae:	cs daa 
  41a8b0:	jmp    0x8e719971
  41a8b5:	cli    
  41a8b6:	hlt    
  41a8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b8:	out    dx,eax
  41a8b9:	stc    
  41a8ba:	xchg   DWORD PTR [edi-0x60],eax
  41a8bd:	mov    ds:0x698a59ab,eax
  41a8c2:	pop    eax
  41a8c3:	rol    bh,cl
  41a8c5:	xor    edx,edx
  41a8c7:	sub    al,0x3d
  41a8c9:	mov    ch,bh
  41a8cb:	push   es
  41a8cc:	add    DWORD PTR [edx],0x75af6646
  41a8d2:	jns    0x41a941
  41a8d4:	outs   dx,BYTE PTR ds:[esi]
  41a8d5:	scas   al,BYTE PTR es:[edi]
  41a8d6:	(bad)  
  41a8d8:	jl     0x41a8cf
  41a8da:	cs daa 
  41a8dc:	pop    ds
  41a8dd:	xor    al,al
  41a8df:	jmp    0x9069:0xa6830757
  41a8e6:	lds    esp,FWORD PTR [ebp+0x6a]
  41a8e9:	sbb    eax,0xce8a34cc
  41a8ee:	je     0x41a95a
  41a8f0:	jmp    DWORD PTR [edi]
  41a8f2:	sahf   
  41a8f3:	scas   eax,DWORD PTR es:[edi]
  41a8f4:	or     BYTE PTR [esi+0x3d134961],cl
  41a8fa:	in     eax,0xcf
  41a8fc:	or     esi,DWORD PTR [eax]
  41a8fe:	lock xlat BYTE PTR ds:[ebx]
  41a900:	jmp    0xc6dc:0x8af548de
  41a907:	nop
  41a908:	stos   DWORD PTR es:[edi],eax
  41a909:	xchg   ecx,eax
  41a90a:	nop
  41a90b:	outs   dx,DWORD PTR ds:[esi]
  41a90c:	cwde   
  41a90d:	xchg   esp,eax
  41a90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a90f:	into   
  41a910:	gs out 0x31,al
  41a913:	mov    es,WORD PTR [edi]
  41a915:	jg     0x41a97e
  41a917:	and    al,0x86
  41a919:	mov    ebp,DWORD PTR [edi]
  41a91b:	jp     0x41a8ee
  41a91d:	jnp    0x41a95b
  41a91f:	outs   dx,BYTE PTR ds:[esi]
  41a920:	mov    DWORD PTR [ebp-0x5226728c],eax
  41a926:	das    
  41a927:	pop    edi
  41a928:	mov    bl,0xa3
  41a92a:	add    eax,0x2fc0eed7
  41a92f:	mov    esi,ss
  41a931:	sbb    cl,BYTE PTR [ebx]
  41a933:	add    esp,DWORD PTR [ecx]
  41a935:	loope  0x41a94c
  41a937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a938:	out    0x78,al
  41a93a:	iret   
  41a93b:	pop    ebx
  41a93c:	xor    bh,cl
  41a93e:	shr    BYTE PTR [esi-0x1],1
  41a941:	jg     0x41a972
  41a943:	add    dl,bh
  41a945:	sub    al,BYTE PTR [esi-0x23]
  41a948:	aas    
  41a949:	scas   eax,DWORD PTR es:[edi]
  41a94a:	add    DWORD PTR [ecx+0x77],edx
  41a94d:	lea    eax,[ebx+0x6d]
  41a950:	gs or  eax,0x67f0170c
  41a956:	das    
  41a957:	cs push ds
  41a959:	cwde   
  41a95a:	push   es
  41a95b:	cmp    eax,DWORD PTR [ebp+eiz*8-0x73]
  41a95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a960:	cmp    BYTE PTR [bx+di],dh
  41a963:	stc    
  41a964:	push   esi
  41a965:	repnz mov ecx,0xa4958917
  41a96b:	jo     0x41a909
  41a96d:	dec    ebp
  41a96e:	popf   
  41a96f:	mov    esi,0xa5d4cc62
  41a974:	or     eax,0x39a972a6
  41a979:	push   esp
  41a97a:	and    BYTE PTR [ecx],0x8a
  41a97d:	mov    ebp,0x59505cea
  41a982:	xchg   dl,al
  41a984:	lahf   
  41a985:	mov    bh,BYTE PTR [edx-0x2e]
  41a988:	jmp    0xb467dd6a
  41a98d:	or     DWORD PTR [esi],edx
  41a98f:	cmp    DWORD PTR [ebx+0x249b5176],edx
  41a995:	or     eax,0x60d116dd
  41a99a:	fbld   TBYTE PTR [esi-0x1d6cc61e]
  41a9a0:	in     eax,dx
  41a9a1:	xchg   ebx,eax
  41a9a2:	inc    ebx
  41a9a3:	out    dx,al
  41a9a4:	aaa    
  41a9a5:	popf   
  41a9a6:	xor    al,BYTE PTR [edi]
  41a9a8:	into   
  41a9a9:	inc    edx
  41a9aa:	sbb    ah,BYTE PTR [esi-0x59]
  41a9ad:	std    
  41a9ae:	jns    0x41a942
  41a9b0:	call   0x2ae2e631
  41a9b5:	and    eax,0xf2ca5248
  41a9ba:	out    0xe4,eax
  41a9bc:	jmp    0xbc52:0xcb3e36a1
  41a9c3:	inc    esi
  41a9c4:	inc    ebx
  41a9c5:	or     BYTE PTR [ebp-0x3b723fbb],ah
  41a9cb:	test   al,0x31
  41a9cd:	dec    eax
  41a9ce:	xor    eax,0x2f388b22
  41a9d3:	clc    
  41a9d4:	and    al,0x2d
  41a9d6:	mov    ebx,0x5ce44ad6
  41a9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9dc:	jo     0x41a9fb
  41a9de:	test   eax,0x7c352219
  41a9e3:	xchg   esi,eax
  41a9e4:	outs   dx,BYTE PTR ds:[esi]
  41a9e5:	jp     0x41aa2b
  41a9e7:	ret    0x6035
  41a9ea:	outs   dx,DWORD PTR ds:[esi]
  41a9eb:	cmp    BYTE PTR [esi+0xd7f9355],bh
  41a9f1:	lea    esp,[eax]
  41a9f3:	jo     0x41aa16
  41a9f5:	jo     0x41a9c0
  41a9f7:	mov    DWORD PTR [ecx-0x62c829],esi
  41a9fd:	dec    ebx
  41a9fe:	bound  esp,QWORD PTR [esi-0x7b992b21]
  41aa04:	dec    ebx
  41aa05:	jle    0x41aa31
  41aa07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa08:	outs   dx,DWORD PTR ds:[esi]
  41aa09:	add    DWORD PTR [edi],ebx
  41aa0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa0c:	enter  0x1529,0x8b
  41aa10:	mov    dl,BYTE PTR [eax-0x68729ad8]
  41aa16:	in     eax,dx
  41aa17:	xchg   DWORD PTR [edx],eax
  41aa19:	lea    edi,[eax-0x1a]
  41aa1c:	lods   eax,DWORD PTR ds:[esi]
  41aa1d:	xchg   ecx,eax
  41aa1e:	add    eax,0xc4c9e8e1
  41aa23:	xchg   edi,eax
  41aa24:	(bad)  
  41aa25:	jle    0x41aa95
  41aa27:	nop
  41aa28:	cmp    cl,BYTE PTR ds:0x228b3df3
  41aa2e:	inc    esp
  41aa2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa30:	add    BYTE PTR [esi+0x2929f9e5],cl
  41aa36:	push   edx
  41aa37:	fadd   QWORD PTR [ecx-0x43]
  41aa3a:	sub    DWORD PTR [esi],ebx
  41aa3c:	xchg   ecx,eax
  41aa3d:	call   0x9405:0xa18af627
  41aa44:	pop    esp
  41aa45:	push   eax
  41aa46:	adc    eax,0x7288a2a6
  41aa4b:	jmp    0x3e8a:0x2a60d92
  41aa52:	xchg   esp,ebp
  41aa54:	dec    ebx
  41aa55:	push   ebp
  41aa56:	add    DWORD PTR [edx+0x76e88d37],0xffffffca
  41aa5d:	cwde   
  41aa5e:	in     al,dx
  41aa5f:	sbb    ch,bh
  41aa61:	cli    
  41aa62:	cs sahf 
  41aa64:	add    al,BYTE PTR [ebx+eax*8]
  41aa67:	mov    ecx,0xa6597fea
  41aa6c:	(bad)  
  41aa6d:	cmp    edi,DWORD PTR [edi]
  41aa6f:	dec    edi
  41aa70:	into   
  41aa71:	push   ds
  41aa72:	xchg   ebp,eax
  41aa73:	xchg   DWORD PTR [edx-0x68e8c936],ecx
  41aa79:	lods   eax,DWORD PTR ds:[esi]
  41aa7a:	mov    edi,0xe725894e
  41aa7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa80:	xor    BYTE PTR [esi],0xd4
  41aa83:	daa    
  41aa84:	scas   eax,DWORD PTR es:[edi]
  41aa85:	adc    BYTE PTR ds:[esi+0xc],dl
  41aa89:	mov    eax,0x8a8ab8e2
  41aa8e:	adc    eax,0xc867dba1
  41aa93:	pop    ebp
  41aa94:	fisttp QWORD PTR [ebp-0x105723f8]
  41aa9a:	aas    
  41aa9b:	dec    esi
  41aa9c:	xchg   edx,eax
  41aa9d:	xor    al,0x26
  41aa9f:	mov    ebx,0xd8500ca9
  41aaa4:	xchg   ebp,eax
  41aaa5:	fild   DWORD PTR [ebx]
  41aaa7:	out    0x7a,al
  41aaa9:	push   edx
  41aaaa:	mov    dh,0xa6
  41aaac:	jae    0x41aabe
  41aaae:	(bad)  
  41aaaf:	sub    eax,0x7c63c7b9
  41aab4:	mov    bl,BYTE PTR [ebp+0x4b62242e]
  41aaba:	jg     0x41aa6e
  41aabc:	ror    DWORD PTR [esp+esi*2+0x6b140e4e],1
  41aac3:	xor    ch,cl
  41aac5:	leave  
  41aac6:	ror    eax,0xac
  41aac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaca:	addr16 adc eax,0xadde5c8a
  41aad0:	jge    0x41aac5
  41aad2:	fidivr WORD PTR [ebp-0x19577205]
  41aad8:	inc    edx
  41aad9:	sbb    edi,DWORD PTR [edi]
  41aadb:	fsub   DWORD PTR [eax]
  41aadd:	mov    dh,0x2f
  41aadf:	outs   dx,DWORD PTR ds:[esi]
  41aae0:	sub    eax,0x4ebb9c12
  41aae5:	lss    eax,FWORD PTR ss:[esi+0x725e5ba]
  41aaed:	adc    al,0xb4
  41aaef:	sahf   
  41aaf0:	mov    ss,edi
  41aaf2:	cs in  al,0x68
  41aaf5:	mov    cl,0xc8
  41aaf7:	sub    edx,eax
  41aaf9:	shl    eax,1
  41aafb:	test   al,0x12
  41aafd:	ja     0x41aac0
  41aaff:	sbb    edi,DWORD PTR [ebx+0x20adf37d]
  41ab05:	cmp    eax,0x928af651
  41ab0a:	fdiv   DWORD PTR [ebp+edx*2+0x2751b904]
  41ab11:	test   eax,esi
  41ab13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab14:	sub    al,0x4f
  41ab16:	or     ebp,DWORD PTR [eax]
  41ab18:	mov    ah,0xfa
  41ab1a:	daa    
  41ab1b:	je     0x41aaa7
  41ab1d:	out    dx,eax
  41ab1e:	setp   BYTE PTR [eiz*4-0x3eb25a4e]
  41ab26:	scas   al,BYTE PTR es:[edi]
  41ab27:	ror    BYTE PTR [edx],0x5a
  41ab2a:	stos   DWORD PTR es:[edi],eax
  41ab2b:	daa    
  41ab2c:	lods   eax,DWORD PTR ds:[esi]
  41ab2d:	sahf   
  41ab2e:	sub    ch,BYTE PTR [ebp+0x78]
  41ab31:	jb     0x41ab70
  41ab33:	sbb    BYTE PTR [esi],0xee
  41ab36:	mov    ds:0xdeea8a5d,al
  41ab3b:	fld    QWORD PTR [ebp+0x11]
  41ab3e:	imul   edi,DWORD PTR [ebx+0x3490848a],0xfffffff3
  41ab45:	push   es
  41ab46:	adc    DWORD PTR [esi],edi
  41ab48:	mov    ch,0x8d
  41ab4a:	xor    ecx,eax
  41ab4c:	jg     0x41ab1e
  41ab4e:	das    
  41ab4f:	mov    ecx,0x873a9c12
  41ab54:	ret    
  41ab55:	out    0x18,al
  41ab57:	es nop
  41ab59:	xchg   edi,eax
  41ab5a:	aas    
  41ab5b:	push   edx
  41ab5c:	lea    edi,[bx+di-0x46]
  41ab60:	cmp    DWORD PTR [eax+0x630dbef7],edx
  41ab66:	cmp    BYTE PTR [ecx],al
  41ab68:	add    edi,DWORD PTR fs:[eax+0x5f4de326]
  41ab6f:	push   es
  41ab70:	push   edx
  41ab71:	mov    ds:0x4d6c8ab0,al
  41ab76:	shl    DWORD PTR [edi+0x51],1
  41ab79:	call   0x52c7:0x9f8afa00
  41ab80:	add    ecx,DWORD PTR [eax+ebx*2+0x2c8d7bd8]
  41ab87:	clc    
  41ab88:	in     eax,dx
  41ab89:	aaa    
  41ab8a:	dec    edi
  41ab8b:	ins    DWORD PTR es:[edi],dx
  41ab8c:	jb     0x41ab72
  41ab8e:	sbb    DWORD PTR cs:[edx-0x901f7b3],0xffffffd1
  41ab96:	lahf   
  41ab97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab98:	add    DWORD PTR [ecx+0x5a],eax
  41ab9b:	sahf   
  41ab9c:	inc    ebp
  41ab9d:	push   ds
  41ab9e:	popa   
  41ab9f:	adc    al,0x8a
  41aba1:	sbb    ebx,DWORD PTR [edi]
  41aba3:	jg     0x41abca
  41aba5:	retf   0xaf53
  41aba8:	sbb    eax,0xb9c8db8d
  41abad:	(bad)  
  41abae:	cld    
  41abaf:	cmc    
  41abb0:	sub    al,BYTE PTR [ebx]
  41abb2:	xor    edx,esp
  41abb4:	popa   
  41abb5:	inc    esi
  41abb6:	jns    0x41ac35
  41abb8:	shr    BYTE PTR [ebp-0x38],0xb7
  41abbc:	inc    edx
  41abbd:	mov    cs,WORD PTR [eax-0x5a21c84d]
  41abc3:	jmp    0xb45a:0xc150ae35
  41abca:	jmp    0x41ab59
  41abcc:	xchg   ebp,eax
  41abcd:	cmp    DWORD PTR [esp+eiz*8+0x1a],ebx
  41abd1:	lods   al,BYTE PTR ds:[esi]
  41abd2:	xchg   cx,ax
  41abd4:	adc    BYTE PTR [esi+0x4f],0x11
  41abd8:	add    edi,0x248aaf1a
  41abde:	mov    al,0xbb
  41abe0:	sbb    BYTE PTR [ebx+0x228a49a1],cl
  41abe6:	or     DWORD PTR [ebx+ebx*4+0x1d],ebx
  41abea:	add    DWORD PTR [edi],0xcc1a8e06
  41abf0:	dec    esp
  41abf1:	cmp    al,0x2
  41abf3:	sbb    al,0x18
  41abf5:	sub    ebx,esp
  41abf7:	pop    edx
  41abf8:	sub    cl,BYTE PTR [eax]
  41abfa:	retf   0x8a0e
  41abfd:	repz xchg edi,eax
  41abff:	sub    DWORD PTR [edx],esp
  41ac01:	(bad)  
  41ac02:	sub    ebx,esi
  41ac04:	inc    eax
  41ac05:	(bad)  
  41ac06:	enter  0x9087,0xb5
  41ac0a:	(bad)  
  41ac0b:	int    0xc6
  41ac0d:	or     BYTE PTR [ebx-0x3],al
  41ac10:	ins    BYTE PTR es:[edi],dx
  41ac11:	inc    ebx
  41ac12:	outs   dx,DWORD PTR ds:[esi]
  41ac13:	in     al,dx
  41ac14:	dec    ebp
  41ac15:	mov    dh,0x28
  41ac17:	div    ecx
  41ac19:	(bad)  
  41ac1a:	fsub   DWORD PTR [edi+0x4fe0274f]
  41ac20:	jp     0x41ac5c
  41ac22:	das    
  41ac23:	push   es
  41ac24:	jge    0x41ac34
  41ac26:	mov    esp,0x910dd81
  41ac2b:	popf   
  41ac2c:	mov    bh,0xa2
  41ac2e:	cmc    
  41ac2f:	nop
  41ac30:	mov    DWORD PTR [ecx],esp
  41ac32:	ret    0x2238
  41ac35:	out    0x57,al
  41ac37:	call   0x9db9:0x292efdfd
  41ac3e:	inc    edi
  41ac3f:	shl    DWORD PTR [edi+0x74a6af5e],0x5c
  41ac46:	xor    eax,0xd58fad8
  41ac4b:	sub    eax,0xe753fe8a
  41ac50:	mov    edi,0xc344ce9f
  41ac55:	or     BYTE PTR [esi-0x45f7ce5b],0x6d
  41ac5c:	adc    eax,0x3d7f4fae
  41ac61:	fsubr  DWORD PTR [edi]
  41ac63:	ds sub ah,ch
  41ac66:	inc    ecx
  41ac67:	rol    BYTE PTR [ecx+0x7fe1efc4],1
  41ac6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac6e:	call   0xacaca918
  41ac73:	lods   al,BYTE PTR ds:[esi]
  41ac74:	lock popf 
  41ac76:	repnz push ebp
  41ac78:	mov    ah,bh
  41ac7a:	jle    0x41ac16
  41ac7c:	das    
  41ac7d:	gs icebp 
  41ac7f:	inc    eax
  41ac80:	loope  0x41ac0c
  41ac82:	stos   DWORD PTR es:[edi],eax
  41ac83:	pop    edx
  41ac84:	jmp    0x41ac99
  41ac86:	jge    0x41ac5e
  41ac88:	push   edi
  41ac89:	sub    ebp,DWORD PTR [edx]
  41ac8b:	mov    bl,0x8a
  41ac8d:	das    
  41ac8e:	push   ebx
  41ac8f:	mov    dh,BYTE PTR [eax-0x6a]
  41ac92:	popf   
  41ac93:	jl     0x41acb4
  41ac95:	mov    WORD PTR [esi],?
  41ac97:	and    DWORD PTR [esi],esp
  41ac99:	adc    esp,DWORD PTR [edx+0x53]
  41ac9c:	cmp    ch,bh
  41ac9e:	loop   0x41ac6c
  41aca0:	mov    ah,bl
  41aca2:	pop    ds
  41aca3:	inc    eax
  41aca4:	and    dl,dl
  41aca6:	pop    edx
  41aca7:	sub    DWORD PTR [ecx],0x5ec8338c
  41acad:	jb     0x41ac5b
  41acaf:	stc    
  41acb0:	in     eax,dx
  41acb1:	mov    ebp,0x6e8a6121
  41acb6:	fst    DWORD PTR [eax-0x47]
  41acb9:	fs sbb eax,0x3a8f1937
  41acbf:	stos   DWORD PTR es:[edi],eax
  41acc0:	fst    DWORD PTR ds:0xc7c973a7
  41acc6:	pop    edi
  41acc7:	lea    esi,[esi+0x9]
  41acca:	das    
  41accb:	mov    ecx,0x3d49125a
  41acd0:	rcr    BYTE PTR [ecx-0x5f],0x53
  41acd4:	push   edx
  41acd5:	(bad)  
  41acd6:	jmp    0x86720fe2
  41acdb:	mov    ch,0x34
  41acdd:	in     eax,dx
  41acde:	cs call 0xa0a24296
  41ace4:	mov    ebx,0xbdcbfd43
  41ace9:	lea    edi,[esp+ebp*8-0x7d8294ff]
  41acf0:	xor    edx,eax
  41acf2:	das    
  41acf3:	mov    bh,0x2f
  41acf5:	or     eax,0x4d7431bf
  41acfa:	sbb    ah,BYTE PTR [ecx+0x45a2d897]
  41ad00:	int    0x63
  41ad02:	mov    dl,0xa6
  41ad04:	aad    0x7d
  41ad06:	xlat   BYTE PTR ds:[ebx]
  41ad07:	jecxz  0x41ac93
  41ad09:	(bad)  
  41ad0a:	cdq    
  41ad0b:	gs es ins BYTE PTR es:[edi],dx
  41ad0e:	cmp    edi,DWORD PTR [edx]
  41ad10:	ror    DWORD PTR [esp+edi*1+0x6c0431b8],1
  41ad17:	adc    dl,bl
  41ad19:	aad    0x5c
  41ad1b:	mov    ah,BYTE PTR es:[edi+0x14b486a3]
  41ad22:	and    BYTE PTR [edi-0x53],0xc5
  41ad26:	repnz mov ah,0xa7
  41ad29:	dec    edx
  41ad2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad2b:	xchg   bp,ax
  41ad2d:	pop    ds
  41ad2e:	pusha  
  41ad2f:	icebp  
  41ad30:	data16 fsubr QWORD PTR [esi]
  41ad33:	in     eax,0x53
  41ad35:	jnp    0x41ad9b
  41ad37:	xor    DWORD PTR [eax-0x35],esp
  41ad3a:	cmp    DWORD PTR [esi+0x66f9ca90],esp
  41ad40:	pop    ss
  41ad41:	sar    BYTE PTR [esi+0x6a],cl
  41ad44:	mov    bh,BYTE PTR [edx+0x6b]
  41ad47:	nop
  41ad48:	pop    eax
  41ad49:	add    eax,DWORD PTR [esi-0x5766d0df]
  41ad4f:	cld    
  41ad50:	xchg   esp,eax
  41ad51:	mul    ebx
  41ad53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad54:	and    al,0x75
  41ad56:	or     DWORD PTR [edi+0x18e07ef7],0xffffff89
  41ad5d:	push   eax
  41ad5e:	add    edx,esp
  41ad60:	add    ah,BYTE PTR [ebx]
  41ad62:	(bad)  
  41ad63:	sbb    eax,0xcaa002a9
  41ad68:	push   ds
  41ad69:	lea    eax,[esi-0x32]
  41ad6c:	enter  0x7552,0x75
  41ad70:	popf   
  41ad71:	cmp    DWORD PTR [edi],ebp
  41ad73:	(bad)  
  41ad74:	mov    edx,0x9c8cf97c
  41ad79:	xchg   esp,eax
  41ad7a:	xor    al,0xd2
  41ad7c:	jmp    0x1e7df78
  41ad81:	rcl    ebx,cl
  41ad83:	adc    DWORD PTR [ecx-0x6],esi
  41ad86:	mov    ah,0x2d
  41ad88:	mov    ah,BYTE PTR [ecx]
  41ad8a:	clc    
  41ad8b:	mov    eax,ds:0x95ffc10c
  41ad90:	dec    edx
  41ad91:	lea    ebp,[ebx]
  41ad93:	lds    edi,FWORD PTR [ebx]
  41ad95:	lahf   
  41ad96:	ins    DWORD PTR es:[edi],dx
  41ad97:	pop    ds
  41ad98:	ret    
  41ad99:	(bad)  
  41ad9a:	cs clc 
  41ad9c:	in     eax,0x47
  41ad9e:	ja     0x41adcf
  41ada0:	xor    DWORD PTR [ebx-0x1cfa5984],esi
  41ada6:	xchg   esp,eax
  41ada7:	aam    0x1c
  41ada9:	rcr    DWORD PTR [edx],1
  41adab:	cmp    al,0x8a
  41adad:	or     eax,0x17d73f
  41adb2:	mov    eax,ds:0x788df359
  41adb7:	pop    esp
  41adb8:	sbb    eax,0x901e9187
  41adbd:	jo     0x41ae1c
  41adbf:	call   0xc770fac3
  41adc4:	add    eax,0xc58f3b2c
  41adc9:	jge    0x41ad88
  41adcb:	mov    cl,0x52
  41adcd:	sub    eax,0xf16f66b8
  41add2:	nop
  41add3:	sbb    bl,BYTE PTR ds:0x36163029
  41add9:	sbb    BYTE PTR [edx+0x76],bl
  41addc:	sbb    cl,dh
  41adde:	jb     0x41ae0d
  41ade0:	pop    edi
  41ade1:	lea    ecx,[edx+0x7196863a]
  41ade7:	imul   edi,DWORD PTR [esi+0x77],0x34a75b2f
  41adee:	sub    BYTE PTR [esi+esi*1],cl
  41adf1:	xchg   ecx,eax
  41adf2:	hlt    
  41adf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adf4:	fwait
  41adf5:	push   0x9878a4be
  41adfa:	popf   
  41adfb:	mov    esp,0xe4b6338a
  41ae00:	retf   0x81c9
  41ae03:	and    DWORD PTR [ebp-0x74],0x10
  41ae07:	mov    esi,0x5dafb4fc
  41ae0c:	mov    dh,0xc9
  41ae0e:	leave  
  41ae0f:	lahf   
  41ae10:	xchg   ebp,eax
  41ae11:	mov    edx,0x2c9012b6
  41ae16:	enter  0x8910,0xe6
  41ae1a:	bound  edi,QWORD PTR [ecx+0x74ba8f3d]
  41ae20:	mov    al,0x89
  41ae22:	imul   ecx,DWORD PTR [esi+0x6a],0x94d66a4c
  41ae29:	xchg   ebx,eax
  41ae2a:	adc    ch,dl
  41ae2c:	cs in  eax,dx
  41ae2e:	fistp  DWORD PTR [esi+eiz*2-0x605a2e36]
  41ae35:	add    DWORD PTR [eax-0x2d],0xfffffff2
  41ae39:	adc    esp,DWORD PTR [edx+0x6f818a4c]
  41ae3f:	xchg   ebp,eax
  41ae40:	pop    es
  41ae41:	pop    es
  41ae42:	dec    edx
  41ae43:	xchg   esp,eax
  41ae44:	xor    cl,BYTE PTR [ebp-0x77dd8a9e]
  41ae4a:	push   ss
  41ae4b:	push   ebp
  41ae4c:	out    0x79,al
  41ae4e:	cmp    dl,BYTE PTR cs:[ecx-0x29]
  41ae52:	rol    edi,1
  41ae54:	mov    edx,0x59ca31b8
  41ae59:	sti    
  41ae5a:	or     DWORD PTR [edi-0x166ec991],ebx
  41ae60:	mov    ah,BYTE PTR [esi+0x35c07b66]
  41ae66:	sub    edx,DWORD PTR [edi-0x7e]
  41ae69:	push   esp
  41ae6a:	repnz sbb DWORD PTR [edx],ecx
  41ae6d:	std    
  41ae6e:	mov    ah,0x51
  41ae70:	pop    esi
  41ae71:	lea    ecx,[esi]
  41ae73:	dec    ecx
  41ae74:	push   0x7b
  41ae76:	scas   al,BYTE PTR es:[edi]
  41ae77:	mov    cl,0x6e
  41ae79:	iret   
  41ae7a:	cs das 
  41ae7c:	mov    edi,0x5ac51a90
  41ae81:	mov    esp,esp
  41ae83:	lahf   
  41ae84:	mov    eax,ds:0x4a4894da
  41ae89:	push   ecx
  41ae8a:	and    dh,cl
  41ae8c:	into   
  41ae8d:	xchg   ebp,eax
  41ae8e:	xor    eax,0xd34cde6e
  41ae93:	add    eax,0x5f8e0e27
  41ae98:	icebp  
  41ae99:	mov    al,ds:0x8dc1fda0
  41ae9e:	cmp    BYTE PTR [ebp-0x1a],ah
  41aea1:	lods   al,BYTE PTR ds:[esi]
  41aea2:	loopne 0x41aed1
  41aea4:	mov    bh,BYTE PTR [edx+0x60]
  41aea7:	mov    cl,0x59
  41aea9:	in     eax,dx
  41aeaa:	jo     0x41ae40
  41aeac:	xor    eax,0x28787d8d
  41aeb1:	pop    ds
  41aeb2:	push   0xffffff80
  41aeb4:	fistp  QWORD PTR [esi-0x670124d1]
  41aeba:	mov    dh,0x33
  41aebc:	fucomi st,st(1)
  41aebe:	xchg   DWORD PTR [eax+0x26946685],esi
  41aec4:	sbb    eax,0xc1fb34de
  41aec9:	cmp    al,0x2f
  41aecb:	scas   eax,DWORD PTR es:[edi]
  41aecc:	xlat   BYTE PTR ds:[ebx]
  41aecd:	cmp    eax,DWORD PTR [edx]
  41aecf:	mov    ?,WORD PTR [esi+0x4c]
  41aed2:	mov    ds:0x67e05a9d,al
  41aed7:	cmp    al,0xa
  41aed9:	int    0xc1
  41aedb:	mov    DWORD PTR [esi+0x7],edx
  41aede:	inc    ecx
  41aedf:	lock pusha 
  41aee1:	sub    ebp,DWORD PTR [edi]
  41aee3:	aaa    
  41aee4:	int    0x9d
  41aee6:	adc    BYTE PTR [ebp-0x1e8d7239],0xd5
  41aeed:	and    cl,dh
  41aeef:	retf   
  41aef0:	outs   dx,DWORD PTR ds:[esi]
  41aef1:	mov    gs,WORD PTR [edi]
  41aef3:	add    eax,0x6fdef4a1
  41aef8:	loope  0x41aea5
  41aefa:	ja     0x41aea5
  41aefc:	sbb    DWORD PTR [ecx],esp
  41aefe:	pop    esp
  41aeff:	xchg   edx,eax
  41af00:	mov    esi,0x33cb380d
  41af05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af06:	das    
  41af07:	mov    bh,0x2c
  41af09:	push   ss
  41af0a:	or     BYTE PTR [edx+0x56],ah
  41af0d:	cmp    DWORD PTR [esi],eax
  41af0f:	(bad)  
  41af10:	ror    BYTE PTR [ebp-0x7738f9c5],cl
  41af16:	xlat   BYTE PTR ds:[ebx]
  41af17:	xor    BYTE PTR [edi+0x49],dh
  41af1a:	das    
  41af1b:	xor    esp,DWORD PTR [eax]
  41af1d:	in     al,0xf9
  41af1f:	test   al,0xb7
  41af21:	dec    edx
  41af22:	mov    WORD PTR [bp+si-0x50b1],?
  41af27:	imul   ecx,DWORD PTR [esi+0x14],0x22
  41af2b:	loope  0x41af27
  41af2d:	(bad)  
  41af2e:	xor    BYTE PTR [ecx+eax*2+0x1050b55d],al
  41af35:	mov    ebx,DWORD PTR [edx+edx*1+0x61]
  41af39:	xor    eax,0x96d98830
  41af3e:	aam    0xb9
  41af40:	in     al,dx
  41af41:	pop    ds
  41af42:	das    
  41af43:	aas    
  41af44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af45:	pop    edi
  41af46:	and    cl,BYTE PTR [esi+0x263dc38a]
  41af4c:	pusha  
  41af4d:	sbb    ah,BYTE PTR [esi+0x32]
  41af50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af51:	mov    ?,WORD PTR [edi+0x41]
  41af54:	and    al,0x8f
  41af56:	mov    bh,0x34
  41af58:	dec    ebp
  41af59:	mov    ebp,0xeec5718d
  41af5e:	cmp    eax,0x2edad753
  41af63:	bound  ebp,QWORD PTR ds:[ecx+esi*1]
  41af67:	mov    DWORD PTR [ebx-0x74],ebp
  41af6a:	mov    ecx,0x867be63a
  41af6f:	popa   
  41af70:	(bad)  [ebp-0x7575321d]
  41af76:	jmp    0x4d5bf4c8
  41af7b:	mov    DWORD PTR [eax-0x2fd3646c],edx
  41af81:	repnz cs xor eax,0xd304d7f0
  41af88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af89:	imul   edx,ebx,0xfac1cae2
  41af8f:	xor    DWORD PTR [edi-0x2556b5c7],esi
  41af95:	mov    edx,0xedca0452
  41af9a:	inc    esi
  41af9b:	test   DWORD PTR [edi+0x6ba42f55],eax
  41afa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa2:	adc    al,0x23
  41afa4:	lahf   
  41afa5:	stos   BYTE PTR es:[edi],al
  41afa6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa8:	fst    DWORD PTR [edi+edx*8+0x43730d91]
  41afaf:	repz mov al,BYTE PTR [edi+0x2a9aaa93]
  41afb6:	fst    DWORD PTR [esi]
  41afb8:	or     DWORD PTR [ebp-0xd1d4298],ecx
  41afbe:	lds    ebp,FWORD PTR [edx]
  41afc0:	adc    DWORD PTR [ebx],edi
  41afc2:	das    
  41afc3:	bound  esp,QWORD PTR [ebp-0x7f]
  41afc6:	out    0x7a,al
  41afc8:	fldenv [ebx]
  41afca:	mov    cl,0xa4
  41afcc:	ins    DWORD PTR es:[edi],dx
  41afcd:	std    
  41afce:	add    eax,0x4fa97ee2
  41afd3:	adc    ah,BYTE PTR [ecx-0x7dddd0eb]
  41afd9:	(bad)  
  41afda:	push   cs
  41afdb:	les    edx,FWORD PTR [ebp-0x28]
  41afde:	xchg   edx,eax
  41afdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe0:	sahf   
  41afe1:	jae    0x41affe
  41afe3:	xor    BYTE PTR [ebp+0x52],cl
  41afe6:	arpl   WORD PTR [eax],sp
  41afe8:	mov    cl,BYTE PTR [edi*1+0x4d8711eb]
  41afef:	sub    edi,eax
  41aff1:	pop    es
  41aff2:	fisub  DWORD PTR [ebp+0x7a8fabe3]
  41aff8:	sti    
  41aff9:	scas   eax,DWORD PTR es:[edi]
  41affa:	call   0xf9a9:0x2ee57c00
  41b001:	mov    esp,0xf1fdd96c
  41b006:	push   ebx
  41b007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b008:	in     eax,dx
  41b009:	inc    esp
  41b00a:	inc    ebx
  41b00b:	(bad)  
  41b00c:	sahf   
  41b00d:	shl    DWORD PTR [edx-0x18b5071b],1
  41b013:	fbld   TBYTE PTR [edx+esi*4+0x1c8aee29]
  41b01a:	dec    esp
  41b01b:	popa   
  41b01c:	aam    0x2b
  41b01e:	cmp    al,0xa6
  41b020:	mov    cl,0xca
  41b022:	std    
  41b023:	dec    ebx
  41b024:	adc    al,0x61
  41b026:	dec    esi
  41b027:	add    al,0xc4
  41b029:	sbb    dh,BYTE PTR [ecx+0x21471ba6]
  41b02f:	into   
  41b030:	push   ecx
  41b031:	ror    ch,cl
  41b033:	leave  
  41b034:	mov    esp,0xe2d2808c
  41b039:	xchg   edx,eax
  41b03a:	outs   dx,DWORD PTR ds:[esi]
  41b03b:	fwait
  41b03c:	or     DWORD PTR [ebp+0x28af646],ebp
  41b042:	xor    DWORD PTR [eax],ecx
  41b044:	pop    ecx
  41b045:	iret   
  41b046:	mov    dl,0x72
  41b048:	retf   
  41b049:	pop    es
  41b04a:	dec    ecx
  41b04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b04c:	push   edi
  41b04d:	inc    ebx
  41b04e:	mov    DWORD PTR [esp+edx*4-0x751b0bff],eax
  41b055:	push   cs
  41b056:	(bad)  
  41b057:	dec    edi
  41b058:	fadd   DWORD PTR [eax+0x2b]
  41b05b:	xor    dl,BYTE PTR [ebx-0x72]
  41b05e:	fild   DWORD PTR [edx-0x1381bebb]
  41b064:	or     bl,BYTE PTR [esi-0x66be6fd]
  41b06a:	(bad)  
  41b06b:	int3   
  41b06c:	lock ins DWORD PTR es:[edi],dx
  41b06e:	jge    0x41affe
  41b070:	sbb    bh,ch
  41b072:	xchg   edi,eax
  41b073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b074:	xchg   edi,eax
  41b075:	ins    BYTE PTR es:[edi],dx
  41b076:	ja     0x41b07c
  41b078:	in     eax,0x8f
  41b07a:	or     DWORD PTR [ebp-0x73],eax
  41b07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07e:	stc    
  41b07f:	add    ah,dl
  41b081:	and    eax,0xb38b5ddf
  41b086:	adc    al,0xa5
  41b088:	jg     0x41b088
  41b08a:	xor    al,0x8a
  41b08c:	xchg   esi,eax
  41b08d:	sub    ebx,DWORD PTR [edi+0x18]
  41b090:	shl    edi,cl
  41b092:	sub    eax,0x6e30d49e
  41b097:	adc    cl,BYTE PTR [edx]
  41b099:	add    al,0x51
  41b09b:	imul   esi,DWORD PTR [ebp-0xc93eb73],0x89ec75a9
  41b0a5:	xor    ch,BYTE PTR [edi]
  41b0a7:	out    0x9f,al
  41b0a9:	mov    ah,bh
  41b0ab:	sub    ch,BYTE PTR [esi-0x7f]
  41b0ae:	push   edi
  41b0af:	mov    al,ds:0x9f769d25
  41b0b4:	retf   0x2b1d
  41b0b7:	pop    ss
  41b0b8:	mov    dh,0x1
  41b0ba:	popa   
  41b0bb:	push   esi
  41b0bc:	xchg   ebp,eax
  41b0bd:	jp     0x41b04e
  41b0bf:	inc    ecx
  41b0c0:	ret    
  41b0c1:	ins    DWORD PTR es:[edi],dx
  41b0c2:	push   ebp
  41b0c3:	dec    ebp
  41b0c4:	push   ds
  41b0c5:	push   cs
  41b0c6:	fsubr  DWORD PTR [eax+0x481db8d7]
  41b0cc:	mov    DWORD PTR ds:0x36cb82e5,ebp
  41b0d2:	das    
  41b0d3:	pop    edi
  41b0d4:	and    eax,0x306d2299
  41b0d9:	fist   DWORD PTR [edx-0x5f]
  41b0dc:	or     al,0x40
  41b0de:	mov    BYTE PTR [esi-0x6f820c76],dl
  41b0e4:	sbb    eax,0xd9e42efb
  41b0e9:	and    ch,BYTE PTR ds:0xd26f34f6
  41b0ef:	xor    eax,0x37d98dc5
  41b0f4:	enter  0x6f53,0xd9
  41b0f8:	mov    eax,0xb5232fc3
  41b0fd:	cwde   
  41b0fe:	xchg   ecx,edx
  41b100:	or     ah,cl
  41b102:	and    BYTE PTR [esi-0x21ab8cd],0xcc
  41b109:	sbb    dl,BYTE PTR [eax+eax*1+0x7bdee8a7]
  41b110:	dec    ecx
  41b111:	mov    esi,0x15754599
  41b116:	push   ebx
  41b117:	(bad)  
  41b118:	fimul  WORD PTR [ebp+0x36ba08dc]
  41b11e:	and    DWORD PTR [eiz*1-0x6b8bb4d7],0x30
  41b126:	lahf   
  41b127:	cli    
  41b128:	or     eax,0xa61e896d
  41b12d:	adc    bl,BYTE PTR [ecx-0x59]
  41b130:	fldenv [edx+eiz*8]
  41b133:	push   edx
  41b134:	not    ah
  41b136:	jmp    0xc00f1d81
  41b13b:	mov    ds:0xf268a48a,eax
  41b140:	test   eax,0xef406122
  41b145:	lea    ecx,[edx]
  41b147:	mov    esp,0xb1557ff3
  41b14c:	jl     0x41b0df
  41b14e:	push   ebp
  41b14f:	mov    BYTE PTR [edx-0x3bcd5527],cl
  41b155:	jnp    0x41b191
  41b157:	punpckhwd mm1,QWORD PTR [ebp+0x7d536c87]
  41b15e:	loop   0x41b113
  41b160:	(bad)  
  41b162:	inc    esp
  41b163:	cmc    
  41b164:	js     0x41b1e0
  41b166:	scas   eax,DWORD PTR es:[edi]
  41b167:	mov    dl,0xbe
  41b169:	xchg   edx,eax
  41b16a:	lea    esp,[ebx]
  41b16c:	xchg   BYTE PTR [ecx],al
  41b16e:	ds mov ch,ah
  41b171:	gs jo  0x41b11a
  41b174:	and    eax,0x39e50d21
  41b179:	cmp    ch,BYTE PTR [edi]
  41b17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b17c:	or     ecx,DWORD PTR [esi-0x387a3fb7]
  41b182:	call   0x6c0ee42c
  41b187:	sar    DWORD PTR [ecx+edi*8-0x6f],0x43
  41b18c:	lea    edi,[edx-0x3e2078c9]
  41b192:	mov    al,0xac
  41b194:	pop    eax
  41b195:	jne    0x41b20a
  41b197:	ins    DWORD PTR es:[edi],dx
  41b198:	pop    edi
  41b199:	mov    eax,ds:0x21c58bf0
  41b19e:	out    dx,eax
  41b19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a0:	fisttp DWORD PTR [ebx+0xe68dcd5]
  41b1a6:	das    
  41b1a7:	inc    edx
  41b1a8:	fwait
  41b1a9:	hlt    
  41b1aa:	loopne 0x41b1fe
  41b1ac:	loope  0x41b1e0
  41b1ae:	pop    es
  41b1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b0:	imul   esi,DWORD PTR [esi+0x4e05d6b3],0xffffffd8
  41b1b7:	mov    WORD PTR [edx+0x5e5c4443],cs
  41b1bd:	sub    BYTE PTR [ecx+eiz*1+0x66],dl
  41b1c1:	(bad)  
  41b1c2:	into   
  41b1c3:	push   esp
  41b1c4:	push   edx
  41b1c5:	sbb    eax,0x7633d308
  41b1ca:	cs aas 
  41b1cc:	mov    edi,0xaa1329f5
  41b1d1:	outs   dx,DWORD PTR ds:[esi]
  41b1d2:	inc    ebp
  41b1d3:	ror    WORD PTR [ebp-0x7bdb3115],cl
  41b1da:	shl    DWORD PTR [edx-0x80],cl
  41b1dd:	adc    DWORD PTR [edi],esp
  41b1df:	test   BYTE PTR [ebp-0x55],0x53
  41b1e3:	jnp    0x41b16e
  41b1e5:	push   0x2a561db8
  41b1ea:	outs   dx,DWORD PTR ds:[esi]
  41b1eb:	inc    ecx
  41b1ec:	inc    esi
  41b1ed:	pop    esp
  41b1ee:	jns    0x41b199
  41b1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1f1:	iret   
  41b1f2:	adc    esp,edx
  41b1f4:	xchg   BYTE PTR ds:0x9c84a923,ch
  41b1fa:	inc    esp
  41b1fb:	out    0x55,al
  41b1fd:	xor    BYTE PTR [edi-0x35aced5e],ch
  41b203:	hlt    
  41b204:	jnp    0x41b1f7
  41b206:	or     eax,0xa83617b2
  41b20b:	or     al,0x94
  41b20d:	pop    ds
  41b20e:	jl     0x41b243
  41b210:	stos   BYTE PTR es:[edi],al
  41b211:	cmp    DWORD PTR ds:0x454b41f7,edi
  41b217:	pop    es
  41b218:	fs adc al,0x85
  41b21b:	sbb    dl,cl
  41b21d:	inc    edx
  41b21e:	adc    eax,0x9759a9a3
  41b223:	xchg   ecx,eax
  41b224:	inc    ebx
  41b225:	sub    ebp,DWORD PTR [edi]
  41b227:	cld    
  41b228:	dec    esp
  41b229:	cmp    dh,dh
  41b22b:	sbb    ah,0x25
  41b22e:	das    
  41b22f:	lods   eax,DWORD PTR ds:[esi]
  41b230:	xchg   ebp,eax
  41b231:	mov    cl,BYTE PTR [esi]
  41b233:	jne    0x41b1e3
  41b235:	fwait
  41b236:	push   ebp
  41b237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b238:	jne    0x41b28f
  41b23a:	daa    
  41b23b:	cmp    BYTE PTR [edi+0x78e95fc4],ah
  41b241:	sbb    BYTE PTR [edi-0x1149123],cl
  41b247:	jecxz  0x41b29b
  41b249:	xchg   BYTE PTR [eax],bh
  41b24b:	mov    esi,0xa6c066aa
  41b250:	jo     0x41b2ab
  41b252:	call   0x9cb9:0x3f845ff3
  41b259:	push   cs
  41b25a:	push   es
  41b25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b25c:	pop    ss
  41b25d:	leave  
  41b25e:	add    ecx,DWORD PTR [ecx+0x5b]
  41b261:	mov    al,0xe2
  41b263:	mov    ebp,0xafa79091
  41b268:	test   DWORD PTR ds:0xfe197b8e,ecx
  41b26e:	das    
  41b26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b270:	xor    al,0x42
  41b272:	retf   
  41b273:	nop
  41b274:	mov    al,0xf8
  41b276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b277:	lods   eax,DWORD PTR ds:[esi]
  41b278:	mov    cl,BYTE PTR [esi]
  41b27a:	inc    edi
  41b27b:	pop    ebp
  41b27c:	lods   al,BYTE PTR ds:[esi]
  41b27d:	cs push es
  41b27f:	push   es
  41b280:	sub    eax,ecx
  41b282:	scas   eax,DWORD PTR es:[edi]
  41b283:	xor    al,0x47
  41b285:	push   ds
  41b286:	scas   eax,DWORD PTR es:[edi]
  41b287:	cmp    al,0xe0
  41b289:	adc    BYTE PTR [esi],dh
  41b28b:	push   edi
  41b28c:	clc    
  41b28d:	das    
  41b28e:	das    
  41b28f:	sbb    al,0xab
  41b291:	fldcw  WORD PTR [esp+ebp*8+0x37]
  41b295:	std    
  41b296:	sub    BYTE PTR [ecx+0x1875c3ff],ah
  41b29c:	mov    ecx,edi
  41b29e:	mov    dl,0x5c
  41b2a0:	xor    ch,BYTE PTR [edx+eax*4-0x37]
  41b2a4:	jbe    0x41b26b
  41b2a6:	das    
  41b2a7:	sbb    eax,DWORD PTR ds:0xdcbfbb4b
  41b2ad:	push   ds
  41b2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2af:	pop    ebx
  41b2b0:	and    BYTE PTR [ebp-0x121785c4],cl
  41b2b6:	popa   
  41b2b7:	clc    
  41b2b8:	cdq    
  41b2b9:	jb     0x41b2ea
  41b2bb:	pusha  
  41b2bc:	add    DWORD PTR [esi-0x39],esi
  41b2bf:	(bad)  
  41b2c0:	sar    dl,cl
  41b2c2:	inc    ebp
  41b2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2c4:	fldz   
  41b2c6:	mov    bh,BYTE PTR [edi+0x60]
  41b2c9:	xchg   edi,eax
  41b2ca:	push   es
  41b2cb:	or     BYTE PTR [edx-0x6f82f41],0xfe
  41b2d2:	addr16 ss push edi
  41b2d5:	lea    eax,[ebp-0x7b]
  41b2d8:	xor    edi,edx
  41b2da:	adc    al,0x91
  41b2dc:	arpl   WORD PTR [edi],cx
  41b2de:	das    
  41b2df:	lea    edx,[edx+0x60c96dc7]
  41b2e5:	xor    cl,BYTE PTR [eax]
  41b2e7:	ret    0x8d37
  41b2ea:	mov    bh,0x1f
  41b2ec:	int3   
  41b2ed:	hlt    
  41b2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ef:	mov    eax,ds:0x29441c98
  41b2f4:	sbb    BYTE PTR [eax-0x5245cfd1],bh
  41b2fa:	jg     0x41b334
  41b2fc:	xchg   esp,eax
  41b2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2fe:	xchg   ebp,eax
  41b2ff:	jns    0x41b368
  41b301:	shl    DWORD PTR [ebp+eiz*4-0x59],cl
  41b305:	popa   
  41b306:	push   edi
  41b307:	stos   BYTE PTR es:[edi],al
  41b308:	int    0xa7
  41b30a:	xor    bl,ah
  41b30c:	arpl   WORD PTR ds:0x7bfab9b7,cx
  41b312:	shl    BYTE PTR [ebp-0x7a363137],1
  41b318:	bswap  ecx
  41b31a:	lds    esp,FWORD PTR [edi]
  41b31c:	mov    al,BYTE PTR [edx-0x41087f83]
  41b322:	push   edx
  41b323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b324:	mov    cl,0x8d
  41b326:	test   DWORD PTR ds:0x323ca56b,0x152edcfa
  41b330:	mov    WORD PTR [esp+edx*2-0x31d91d56],ss
  41b337:	lds    ecx,FWORD PTR [ecx]
  41b339:	jp     0x41b333
  41b33b:	mov    esp,gs
  41b33d:	pop    eax
  41b33e:	mov    al,0xaf
  41b340:	xor    dh,bh
  41b342:	fistp  DWORD PTR [ebp+0x521605a2]
  41b348:	mov    dh,BYTE PTR [edx+edi*4]
  41b34b:	in     eax,dx
  41b34c:	sub    eax,0x9c22fe08
  41b351:	jg     0x41b3ab
  41b353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b354:	fwait
  41b355:	inc    ebx
  41b356:	xchg   esp,eax
  41b357:	jmp    0xe9c1:0xa12ad55c
  41b35e:	icebp  
  41b35f:	xchg   ecx,eax
  41b360:	push   ebx
  41b361:	call   0x1acb:0xd58a207c
  41b368:	loopne 0x41b2ec
  41b36a:	aaa    
  41b36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b36c:	mov    esp,0x55bff62a
  41b371:	add    al,0x45
  41b373:	out    dx,al
  41b374:	jno    0x41b36e
  41b376:	cs mov dl,0xd9
  41b379:	mov    ch,0x7d
  41b37b:	rol    DWORD PTR [ecx-0x1a],cl
  41b37e:	pop    es
  41b37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b380:	and    DWORD PTR [ebx+ebp*4],edx
  41b383:	pusha  
  41b384:	xlat   BYTE PTR ds:[ebx]
  41b385:	jne    0x41b30e
  41b387:	xchg   ebx,eax
  41b388:	mov    ah,BYTE PTR [edx]
  41b38a:	or     edx,DWORD PTR [eax-0x5]
  41b38d:	and    ebp,DWORD PTR [ebx*4+0x65638c37]
  41b394:	mov    BYTE PTR [esp+edx*2+0x7173f052],dh
  41b39b:	inc    esi
  41b39c:	mov    edx,0xaf35cb6e
  41b3a1:	push   edi
  41b3a2:	std    
  41b3a3:	test   al,0x89
  41b3a5:	mov    ds:0xbf6f9af2,eax
  41b3aa:	push   edi
  41b3ab:	sub    al,0x6a
  41b3ad:	mov    al,0x7c
  41b3af:	in     eax,dx
  41b3b0:	mov    dl,BYTE PTR [ecx-0x55]
  41b3b3:	mov    es,WORD PTR ds:0x17dcb2a5
  41b3b9:	xchg   edx,eax
  41b3ba:	out    dx,eax
  41b3bb:	ret    0x7668
  41b3be:	sub    al,0x18
  41b3c0:	inc    edi
  41b3c1:	int    0x1d
  41b3c3:	in     eax,0x7d
  41b3c5:	outs   dx,DWORD PTR ds:[esi]
  41b3c6:	xor    eax,0x1a7d4d12
  41b3cb:	xchg   BYTE PTR [edx-0x55fe79c9],dh
  41b3d1:	(bad)  
  41b3d2:	in     al,0x68
  41b3d4:	push   0xffffff96
  41b3d6:	push   ebx
  41b3d7:	xor    DWORD PTR [ebx+0x7a301633],esp
  41b3dd:	jge    0x41b36d
  41b3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e0:	iret   
  41b3e1:	mov    dh,0x51
  41b3e3:	(bad)  ds:0x8ae5474d
  41b3e9:	sub    BYTE PTR [eax+0x241065d4],dl
  41b3ef:	fsub   st(3),st
  41b3f1:	(bad)  
  41b3f2:	sti    
  41b3f3:	xor    ebp,DWORD PTR [ecx+0x7f9e7d7e]
  41b3f9:	xchg   DWORD PTR [ebx],ebp
  41b3fb:	adc    dl,dl
  41b3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3fe:	jno    0x41b42e
  41b400:	or     cl,BYTE PTR [esi-0x6]
  41b403:	push   ss
  41b404:	mov    al,ds:0x1e715a8d
  41b409:	rol    ecx,0xd4
  41b40c:	imul   eax,esi,0xd11032a
  41b412:	in     eax,0x7b
  41b414:	fsubr  DWORD PTR [ebx-0x38990979]
  41b41a:	cs ins DWORD PTR es:[edi],dx
  41b41c:	or     dl,dh
  41b41e:	pop    ds
  41b41f:	in     eax,0xc4
  41b421:	adc    esi,DWORD PTR ds:0x7b048a3e
  41b427:	mov    ?,WORD PTR [ebx+0x398a6ba3]
  41b42d:	push   ecx
  41b42e:	inc    eax
  41b42f:	popa   
  41b430:	mov    dh,ch
  41b432:	sahf   
  41b433:	sar    BYTE PTR ds:0xfc0e6e4d,1
  41b439:	inc    edi
  41b43a:	cs int 0x63
  41b43d:	push   0x6e9a0a28
  41b442:	sub    edi,DWORD PTR [ebx]
  41b444:	sbb    eax,0xf028f78d
  41b449:	mov    ch,0xe0
  41b44b:	aad    0x80
  41b44d:	xchg   edi,eax
  41b44e:	xor    eax,0xeef6d18c
  41b453:	enter  0xe9ba,0x5d
  41b457:	popa   
  41b458:	sub    dl,ah
  41b45a:	sbb    dh,dl
  41b45c:	dec    DWORD PTR [ebp+0x69e98fda]
  41b462:	popa   
  41b463:	and    ebp,DWORD PTR [eax+eax*2]
  41b466:	das    
  41b467:	clc    
  41b468:	(bad)  
  41b469:	test   BYTE PTR ds:0x984a10cf,0xa6
  41b470:	and    al,0xc5
  41b472:	aaa    
  41b473:	(bad)  
  41b474:	jmp    0x597e:0x8a01bea5
  41b47b:	lods   al,BYTE PTR ds:[esi]
  41b47d:	and    dh,0x37
  41b480:	repz stc 
  41b482:	jns    0x41b413
  41b484:	xchg   bl,cl
  41b486:	cs mov bl,0x50
  41b489:	dec    esi
  41b48a:	pop    ss
  41b48b:	inc    ecx
  41b48c:	jmp    0x41b49a
  41b48e:	das    
  41b48f:	enter  0x96b5,0xa5
  41b493:	pop    es
  41b494:	jle    0x41b4f2
  41b496:	scas   eax,DWORD PTR es:[edi]
  41b497:	mov    ecx,0xa6b66383
  41b49c:	popf   
  41b49d:	outs   dx,BYTE PTR ds:[esi]
  41b49e:	inc    esp
  41b49f:	call   0x6c711083
  41b4a4:	imul   ebp,DWORD PTR [edx-0x9676d14],0x8d2a51cd
  41b4ae:	mov    al,dh
  41b4b0:	cld    
  41b4b1:	add    DWORD PTR [edi-0x3a],ebp
  41b4b4:	outs   dx,DWORD PTR ds:[esi]
  41b4b5:	adc    ebp,DWORD PTR [edi]
  41b4b7:	cmp    ch,BYTE PTR [edi]
  41b4b9:	fimul  WORD PTR [esi]
  41b4bc:	pop    eax
  41b4bd:	and    DWORD PTR [edx+0x78e521a6],ecx
  41b4c3:	push   eax
  41b4c4:	push   edi
  41b4c5:	dec    BYTE PTR [edi]
  41b4c7:	enter  0xbd89,0xfc
  41b4cb:	ror    DWORD PTR [esi+0x2c67a39],cl
  41b4d1:	cmp    edi,ebx
  41b4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4d4:	nop
  41b4d5:	and    eax,0xb200637c
  41b4da:	shl    DWORD PTR [edi-0x76],0x14
  41b4de:	inc    edi
  41b4df:	les    esp,FWORD PTR [ecx]
  41b4e1:	arpl   WORD PTR [ecx],bp
  41b4e3:	pop    esi
  41b4e4:	mov    edx,0xadccc08d
  41b4e9:	ins    DWORD PTR es:[edi],dx
  41b4ea:	loope  0x41b542
  41b4ec:	xor    ebp,esp
  41b4ee:	arpl   WORD PTR cs:[ebx+0x68a9b93f],si
  41b4f5:	xor    ah,ah
  41b4f7:	push   ebx
  41b4f8:	jle    0x41b4f3
  41b4fa:	leave  
  41b4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4fc:	cmp    al,0x2
  41b4fe:	mov    WORD PTR [edx+eax*1],fs
  41b501:	fnstenv [edi+0x45]
  41b504:	mov    bl,BYTE PTR [esi+0x48c2c0]
  41b50a:	pusha  
  41b50b:	(bad)  
  41b50c:	mov    ecx,0xf0a6b145
  41b511:	fcmovnbe st,st(3)
  41b513:	cdq    
  41b514:	pop    edx
  41b515:	call   0x1684:0x85887207
  41b51c:	ins    BYTE PTR es:[edi],dx
  41b51d:	repz push 0xc78c89c6
  41b523:	stos   DWORD PTR es:[edi],eax
  41b524:	xor    eax,0x5402ad83
  41b529:	cdq    
  41b52a:	xchg   ebx,eax
  41b52b:	in     al,dx
  41b52c:	mov    bh,BYTE PTR [ecx+0x21108ab3]
  41b532:	outs   dx,BYTE PTR ds:[esi]
  41b533:	lods   eax,DWORD PTR ds:[esi]
  41b534:	sahf   
  41b535:	push   ds
  41b536:	es mov esp,0xaad3a219
  41b53c:	dec    edx
  41b53d:	add    BYTE PTR [edi-0x6d989878],dl
  41b543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b544:	mov    al,0x22
  41b546:	fst    DWORD PTR [ebx-0x21dad95d]
  41b54c:	mov    cl,ch
  41b54e:	icebp  
  41b54f:	lea    ecx,[ecx-0x78dbbf88]
  41b555:	jl     0x41b568
  41b557:	jbe    0x41b580
  41b559:	inc    esi
  41b55a:	sub    eax,0x9086bdb2
  41b55f:	popf   
  41b560:	test   DWORD PTR [bx],ebp
  41b563:	fs jnp 0x41b583
  41b566:	and    al,0x4a
  41b568:	mov    cl,bh
  41b56a:	pusha  
  41b56b:	pop    ebp
  41b56c:	fldenv [ebp+0x17]
  41b56f:	mov    esi,DWORD PTR [ebp+ecx*4+0x439db318]
  41b576:	in     eax,0x78
  41b578:	jbe    0x41b588
  41b57a:	das    
  41b57b:	retf   0x3ac0
  41b57e:	imul   esi,DWORD PTR [edi+ebx*8],0xfffffffc
  41b582:	or     BYTE PTR [esi+0x60f29616],ah
  41b588:	test   DWORD PTR [edi-0xc],edi
  41b58b:	adc    cl,BYTE PTR [eax-0x1564549b]
  41b591:	dec    esp
  41b592:	ret    
  41b593:	ds jp  0x41b609
  41b596:	add    eax,0xbce078a6
  41b59b:	mov    eax,ds:0xba0446dc
  41b5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a1:	jp     0x41b5ce
  41b5a3:	xchg   esi,eax
  41b5a4:	or     eax,0x2adb850e
  41b5a9:	jl     0x41b614
  41b5ab:	push   cs
  41b5ac:	pushf  
  41b5ad:	xchg   ebx,eax
  41b5ae:	or     al,0x8a
  41b5b0:	jb     0x41b628
  41b5b2:	sbb    ah,ch
  41b5b4:	or     cl,BYTE PTR [esi]
  41b5b6:	js     0x41b633
  41b5b8:	jmp    0x2c46de9f
  41b5bd:	mov    ?,WORD PTR [ebx+eax*4-0x7]
  41b5c1:	mov    dl,0x6e
  41b5c3:	mov    esi,0xa69c82c6
  41b5c8:	ror    ah,0x94
  41b5cb:	jmp    0x41b5a9
  41b5cd:	in     al,dx
  41b5ce:	stc    
  41b5cf:	cli    
  41b5d0:	cwde   
  41b5d1:	sbb    ebx,ecx
  41b5d3:	mov    al,ds:0x6f76894
  41b5d8:	lods   eax,DWORD PTR ds:[esi]
  41b5d9:	stc    
  41b5da:	jns    0x41b5d3
  41b5dc:	dec    edx
  41b5dd:	adc    eax,0x6f81a613
  41b5e2:	add    eax,0x68b87c34
  41b5e7:	cmp    DWORD PTR [ecx-0x465a9e0e],ecx
  41b5ed:	xor    eax,0x3326c62a
  41b5f2:	int3   
  41b5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f4:	mov    al,ds:0xbe47730d
  41b5f9:	mov    esp,0xf2fe543b
  41b5fe:	sub    eax,0x4b80bd85
  41b603:	ret    0x235a
  41b606:	xchg   edi,esi
  41b608:	dec    edi
  41b609:	icebp  
  41b60a:	out    dx,al
  41b60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60c:	sub    al,0x99
  41b60e:	push   0xe9c16542
  41b613:	push   eax
  41b614:	mov    ch,BYTE PTR [edx-0x2]
  41b617:	je     0x41b5e0
  41b619:	mov    dh,0xeb
  41b61b:	pop    esi
  41b61c:	and    cl,BYTE PTR [esi+0x198db9ed]
  41b622:	mov    BYTE PTR ds:[edx-0x35],cl
  41b626:	mov    eax,ds:0x95fc8ddb
  41b62b:	mov    al,0xcb
  41b62d:	and    edi,DWORD PTR [edi-0x26]
  41b630:	xchg   ebx,eax
  41b631:	dec    esi
  41b632:	sub    esp,DWORD PTR [esi-0x1893ad96]
  41b638:	mov    eax,0x6e7ef97f
  41b63d:	push   0x32
  41b63f:	stos   DWORD PTR es:[edi],eax
  41b640:	dec    esp
  41b641:	pop    ss
  41b642:	push   0x98f5b972
  41b647:	scas   eax,DWORD PTR es:[edi]
  41b648:	aaa    
  41b649:	lea    eax,[esi+edx*1]
  41b64c:	mov    BYTE PTR [edx+eiz*4+0x2fb6bb25],0xca
  41b654:	xor    eax,0xf7999241
  41b659:	pop    ecx
  41b65a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41b65c:	pop    eax
  41b65d:	out    0x40,eax
  41b65f:	push   cs
  41b660:	sti    
  41b661:	sub    esp,ebx
  41b663:	enter  0xcd89,0x69
  41b667:	(bad)  
  41b668:	stc    
  41b669:	mov    ah,BYTE PTR [edi]
  41b66b:	xor    DWORD PTR [esi+0x3e],ebx
  41b66e:	scas   eax,DWORD PTR es:[edi]
  41b66f:	push   esp
  41b670:	out    dx,eax
  41b671:	and    al,0x33
  41b673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b674:	mov    bl,0xf4
  41b676:	scas   eax,DWORD PTR es:[edi]
  41b677:	adc    eax,DWORD PTR [edi]
  41b679:	pushf  
  41b67a:	add    cl,BYTE PTR [ebp-0x76]
  41b67d:	jno    0x41b60a
  41b67f:	jno    0x41b6e7
  41b681:	enter  0x3945,0xe3
  41b685:	shl    DWORD PTR [ecx],0xa5
  41b688:	lea    ebx,[eax]
  41b68a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b68b:	pusha  
  41b68c:	es jecxz 0x41b63d
  41b68f:	pop    es
  41b690:	(bad)  
  41b691:	fldcw  WORD PTR [ecx-0x25]
  41b694:	mov    al,ah
  41b696:	fstp   TBYTE PTR [eax+0x75250f0f]
  41b69c:	xchg   DWORD PTR [ebp-0x6d126c26],ecx
  41b6a2:	jmp    0x41b6e8
  41b6a4:	cli    
  41b6a5:	pop    eax
  41b6a6:	das    
  41b6a7:	(bad)  
  41b6a8:	fs into 
  41b6aa:	pop    ss
  41b6ab:	sahf   
  41b6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ad:	and    al,0xfd
  41b6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b0:	add    edx,DWORD PTR [eax+0x1d]
  41b6b3:	mov    DWORD PTR [esi],esp
  41b6b5:	retf   
  41b6b6:	cmp    BYTE PTR [edi-0x72439b76],dl
  41b6bc:	xchg   ecx,eax
  41b6bd:	or     dh,BYTE PTR [ebp+0x798dfda7]
  41b6c3:	jecxz  0x41b681
  41b6c5:	cs leave 
  41b6c7:	ror    DWORD PTR [edi+0x46],0xc7
  41b6cb:	in     al,dx
  41b6cc:	mov    ch,BYTE PTR [esi-0x2]
  41b6cf:	mov    dh,0x90
  41b6d1:	std    
  41b6d2:	xchg   BYTE PTR [ecx-0x7d7728e],dh
  41b6d8:	and    eax,0x3b725181
  41b6dd:	stc    
  41b6de:	adc    al,0x23
  41b6e0:	and    BYTE PTR [edx+0x2b],bh
  41b6e3:	aad    0xe5
  41b6e5:	add    cl,BYTE PTR [edi+0xc]
  41b6e8:	cmp    al,0x93
  41b6ea:	out    0x26,al
  41b6ec:	call   0x4743:0xfdbcf88
  41b6f3:	pop    es
  41b6f4:	add    eax,0x71b82fa3
  41b6f9:	inc    edx
  41b6fa:	out    0x3f,eax
  41b6fc:	ja     0x41b6e2
  41b6fe:	mul    DWORD PTR [ebp+0x7a7748f9]
  41b704:	mov    fs,WORD PTR [ecx]
  41b706:	shl    BYTE PTR [edx+ecx*4+0x6],1
  41b70a:	call   0x31d1d642
  41b70f:	scas   eax,DWORD PTR es:[edi]
  41b710:	test   DWORD PTR [ebp+0x650e4540],0x144b0833
  41b71a:	xor    BYTE PTR [esi-0x10],dh
  41b71d:	aas    
  41b71e:	stc    
  41b71f:	mov    ah,BYTE PTR [esi-0x4c]
  41b722:	sbb    DWORD PTR [eax+eax*1],0xffffff8e
  41b726:	and    BYTE PTR [ecx+0x2],dl
  41b729:	push   0x4aeb94fc
  41b72e:	ds inc esi
  41b730:	fdiv   DWORD PTR [esi-0x367c92cf]
  41b736:	xor    eax,0x6fae8747
  41b73b:	sub    BYTE PTR [ebx-0x4c59bb85],bh
  41b741:	pop    ds
  41b742:	xor    eax,0x40a356b6
  41b747:	jo     0x41b6d3
  41b749:	leave  
  41b74a:	ss scas eax,DWORD PTR es:[edi]
  41b74c:	iret   
  41b74d:	cdq    
  41b74e:	lods   al,BYTE PTR ds:[esi]
  41b74f:	push   edi
  41b750:	cmp    eax,0x8a8361c4
  41b755:	and    esi,esp
  41b757:	adc    al,0x11
  41b759:	out    0xd6,eax
  41b75b:	add    BYTE PTR [edx-0x18beb569],cl
  41b761:	aad    0xee
  41b763:	mov    esi,0x43068d41
  41b768:	(bad)  
  41b769:	xlat   BYTE PTR ds:[ebx]
  41b76a:	sub    al,0x2f
  41b76c:	sbb    BYTE PTR [eax+esi*1-0x678b2129],al
  41b773:	mov    esp,DWORD PTR [eax+0x5a]
  41b776:	iret   
  41b777:	and    esi,0xaa81158d
  41b77d:	rcl    ebp,cl
  41b77f:	dec    esi
  41b780:	addps  xmm5,XMMWORD PTR [eax]
  41b783:	in     eax,0x76
  41b785:	or     al,0xb6
  41b787:	jne    0x41b7b5
  41b789:	(bad)  
  41b78a:	dec    edx
  41b78b:	sub    DWORD PTR [ebx+0x6d],0xf
  41b78f:	imul   esi,DWORD PTR [ebx-0x71],0x6a
  41b793:	and    cl,BYTE PTR [eax+0x89b07f9]
  41b799:	icebp  
  41b79a:	addr16 or eax,0xe62ee77a
  41b7a0:	cmp    BYTE PTR [edx+0x42],bl
  41b7a3:	fcom   QWORD PTR ds:0x25a6358f
  41b7a9:	mov    bl,0xd
  41b7ab:	jmp    0x41b733
  41b7ad:	jno    0x41b753
  41b7af:	mov    bl,0x8a
  41b7b1:	pushf  
  41b7b2:	sysenter 
  41b7b4:	(bad)  
  41b7b6:	lea    ebx,[edi]
  41b7b8:	or     al,0x8d
  41b7ba:	mov    edi,0xcde652c1
  41b7bf:	cmp    edi,DWORD PTR [ebx-0x755021f4]
  41b7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c6:	ficom  WORD PTR [edx+0x411b6fa8]
  41b7cc:	jbe    0x41b761
  41b7ce:	or     DWORD PTR [ebp+0x31cf1a0d],0xab76ef3c
  41b7d8:	les    edx,FWORD PTR [ecx-0x587d564]
  41b7de:	retf   0xaf6
  41b7e1:	push   0xffffffd3
  41b7e3:	or     edi,DWORD PTR [ecx]
  41b7e5:	lea    esi,[ebp-0x6beae944]
  41b7eb:	xor    DWORD PTR [eax-0x4f49cf94],esp
  41b7f1:	aam    0x6a
  41b7f3:	test   al,0xb4
  41b7f5:	pop    edi
  41b7f6:	pop    edi
  41b7f7:	imul   ebp,ebp,0xfffffffb
  41b7fa:	jecxz  0x41b7a2
  41b7fc:	jb     0x41b844
  41b7fe:	test   DWORD PTR [eax],edx
  41b800:	jae    0x41b833
  41b802:	int    0x45
  41b804:	data16 or ch,BYTE PTR [edi]
  41b807:	div    DWORD PTR [edi+0x5c]
  41b80a:	in     eax,dx
  41b80b:	into   
  41b80c:	mov    WORD PTR [ecx-0x6a],?
  41b80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b810:	mov    cl,0x35
  41b812:	jne    0x41b837
  41b814:	and    ecx,DWORD PTR [edx-0x6d9e48b1]
  41b81a:	das    
  41b81b:	dec    edi
  41b81c:	mov    al,0xcc
  41b81e:	mov    eax,ds:0x139ba84d
  41b823:	dec    esi
  41b824:	ret    0xca79
  41b827:	cs mov ebp,0xe1be3f8d
  41b82d:	mov    BYTE PTR [edx+0x2fbe1198],dh
  41b833:	sysret 
  41b835:	xchg   esi,eax
  41b836:	sub    eax,0xfcf7c3fd
  41b83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b83c:	cld    
  41b83d:	in     eax,0xc5
  41b83f:	in     eax,0xf4
  41b841:	pop    ecx
  41b842:	cmp    BYTE PTR [edx+ecx*4+0x60],dl
  41b846:	scas   al,BYTE PTR es:[edi]
  41b847:	cld    
  41b848:	add    ah,BYTE PTR [edi-0x7ece4e0b]
  41b84e:	inc    eax
  41b84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b850:	adc    eax,0x50487b23
  41b855:	or     al,0x0
  41b857:	jle    0x41b813
  41b859:	test   DWORD PTR [edi-0x61251860],0x5cc0dda6
  41b863:	sub    al,BYTE PTR [edi-0x23]
  41b866:	out    dx,eax
  41b867:	xor    ecx,DWORD PTR [edx+0x34c78dcd]
  41b86d:	xor    BYTE PTR [ebx],dh
  41b86f:	leave  
  41b870:	jnp    0x41b8c3
  41b872:	frstor [ecx+0x0]
  41b875:	mov    ss,WORD PTR [edx]
  41b877:	ficom  DWORD PTR [ebx+eax*1-0x17802b58]
  41b87e:	cs jbe 0x41b889
  41b881:	aam    0x9c
  41b883:	idiv   cl
  41b885:	mov    gs,WORD PTR ds:0xf1a1dca7
  41b88b:	sub    BYTE PTR [ebx],0xae
  41b88e:	push   ebp
  41b88f:	(bad)  
  41b890:	ins    DWORD PTR es:[edi],dx
  41b891:	push   cs
  41b892:	das    
  41b893:	repz sahf 
  41b895:	(bad)  
  41b896:	jle    0x41b90c
  41b898:	mov    ch,0x57
  41b89a:	jge    0x41b829
  41b89c:	jmp    0x9149e7e7
  41b8a1:	into   
  41b8a2:	(bad)  [edi-0x41]
  41b8a5:	aaa    
  41b8a6:	das    
  41b8a7:	add    BYTE PTR [ecx+eax*1-0x2d9f738f],0x66
  41b8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8b0:	dec    edx
  41b8b1:	sbb    ebx,DWORD PTR [eax+0x3]
  41b8b4:	jnp    0x41b884
  41b8b6:	(bad)  
  41b8b8:	(bad)  
  41b8b9:	not    BYTE PTR [ecx]
  41b8bb:	daa    
  41b8bc:	idiv   BYTE PTR [esi-0x3f]
  41b8bf:	add    al,BYTE PTR [esi-0x23f1ac4b]
  41b8c5:	lea    ecx,[ecx-0x617f5ab4]
  41b8cb:	cli    
  41b8cc:	test   dh,ch
  41b8ce:	xor    edi,eax
  41b8d0:	(bad)  
  41b8d1:	int    0xfa
  41b8d3:	fadd   DWORD PTR [ebx+0x15]
  41b8d6:	hlt    
  41b8d7:	ror    DWORD PTR [ebp-0x73],1
  41b8da:	inc    esp
  41b8db:	add    bp,si
  41b8de:	mov    bl,0x7c
  41b8e0:	adc    esi,DWORD PTR [eax]
  41b8e2:	inc    ebx
  41b8e3:	push   es
  41b8e4:	dec    ebx
  41b8e5:	mov    ch,dh
  41b8e7:	xlat   BYTE PTR ds:[ebx]
  41b8e8:	pop    edx
  41b8e9:	in     eax,dx
  41b8ea:	leave  
  41b8eb:	sub    esi,edi
  41b8ed:	out    dx,al
  41b8ee:	stos   BYTE PTR es:[edi],al
  41b8ef:	mov    al,ds:0x8c339b49
  41b8f4:	jmp    0x2f15:0x31c26d52
  41b8fb:	push   edi
  41b8fc:	lds    esi,FWORD PTR [ebx]
  41b8fe:	jg     0x41b881
  41b900:	push   ecx
  41b901:	jno    0x41b93b
  41b903:	les    esi,FWORD PTR [edx+0x233e5d8c]
  41b909:	sub    cl,0x3a
  41b90c:	cld    
  41b90d:	mov    ebp,0xd0fef8b5
  41b912:	xor    bl,BYTE PTR cs:[edi-0xb3655]
  41b919:	jns    0x41b972
  41b91b:	test   eax,0xb8772fd
  41b920:	pop    edx
  41b921:	fst    QWORD PTR [ecx+0x1b]
  41b924:	jmp    0xb234:0xc45d4503
  41b92b:	sbb    BYTE PTR [eax],bl
  41b92d:	mov    ds:0xd069cc5,eax
  41b932:	cmp    eax,0xd48d3504
  41b937:	xchg   ecx,eax
  41b938:	test   eax,0x8aa4d273
  41b93d:	add    al,0x4a
  41b93f:	inc    esi
  41b940:	mov    dl,0x8c
  41b942:	loopne 0x41b9c2
  41b944:	pop    ds
  41b945:	lea    esp,[edi+0x1c]
  41b948:	arpl   WORD PTR [eax],bp
  41b94a:	fucomi st,st(0)
  41b94c:	fild   QWORD PTR gs:[esi]
  41b94f:	inc    ecx
  41b950:	scas   al,BYTE PTR es:[edi]
  41b951:	nop
  41b952:	scas   al,BYTE PTR es:[edi]
  41b953:	retf   0x1a1b
  41b956:	ret    
  41b957:	mov    eax,0xa58449ef
  41b95c:	adc    al,0x35
  41b95e:	dec    ecx
  41b95f:	ja     0x41b993
  41b961:	lods   eax,DWORD PTR ds:[esi]
  41b962:	loop   0x41b930
  41b964:	lea    edx,[esi+0x7f]
  41b967:	inc    ebx
  41b968:	std    
  41b969:	in     eax,dx
  41b96a:	ds jo  0x41b9d1
  41b96d:	mov    ds:0x982aa654,al
  41b972:	int3   
  41b973:	ja     0x41b9c1
  41b975:	cdq    
  41b976:	ss mov al,0x8a
  41b979:	push   esp
  41b97a:	adc    edi,DWORD PTR [esi-0x55585f2]
  41b980:	int    0x8d
  41b982:	adc    edx,ebx
  41b984:	cmp    eax,0x2aa8a77
  41b989:	(bad)  
  41b98a:	das    
  41b98b:	xor    eax,0xac0937a3
  41b990:	leave  
  41b991:	shl    BYTE PTR [edi+eiz*4],cl
  41b994:	clc    
  41b995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b996:	or     eax,0xd3213721
  41b99b:	fld    QWORD PTR [ecx-0x5f]
  41b99e:	das    
  41b99f:	test   al,0x86
  41b9a1:	xor    eax,0xaa0bd850
  41b9a6:	test   BYTE PTR [ecx-0x594d69e9],dh
  41b9ac:	out    0x16,eax
  41b9ae:	shl    al,1
  41b9b0:	mov    eax,0xc18edde7
  41b9b5:	repnz (bad) 
  41b9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b8:	mov    fs,WORD PTR [esi]
  41b9ba:	sub    bh,BYTE PTR [ecx+edi*1-0x7c4dfe4e]
  41b9c1:	jmp    0x41b983
  41b9c3:	es lahf 
  41b9c5:	mov    ds:0x88b1f094,eax
  41b9ca:	das    
  41b9cb:	dec    eax
  41b9cc:	add    bh,bh
  41b9ce:	pop    ebx
  41b9cf:	pusha  
  41b9d0:	pop    ebx
  41b9d1:	push   esi
  41b9d2:	push   0xf3cfb7a7
  41b9d7:	mov    ebx,0xeec52025
  41b9dc:	sbb    al,0x38
  41b9de:	xor    BYTE PTR [edi+0x47],bl
  41b9e1:	ins    BYTE PTR es:[edi],dx
  41b9e2:	mov    DWORD PTR [esi+0x77],0x73f64b14
  41b9e9:	lea    ebx,[esi-0x1e]
  41b9ec:	lds    ebx,FWORD PTR [esi+edx*1]
  41b9ef:	mov    ebp,ebp
  41b9f1:	or     al,0xe0
  41b9f3:	or     BYTE PTR [edx-0x392b79da],0x38
  41b9fa:	ja     0x41b9ce
  41b9fc:	mov    dh,0x8c
  41b9fe:	add    bl,BYTE PTR [edi-0x4]
  41ba01:	jecxz  0x41b9db
  41ba03:	or     BYTE PTR [ebp+ecx*2-0x7e],cl
  41ba07:	ins    DWORD PTR es:[edi],dx
  41ba08:	and    bl,BYTE PTR [eax]
  41ba0a:	inc    esi
  41ba0b:	mov    ah,0xde
  41ba0d:	inc    edi
  41ba0e:	outs   dx,DWORD PTR ds:[esi]
  41ba0f:	xor    al,0x8e
  41ba11:	jle    0x41ba75
  41ba13:	fcom   QWORD PTR [eax]
  41ba15:	adc    DWORD PTR [edi],0x940f7fa6
  41ba1b:	cmc    
  41ba1c:	js     0x41b9c0
  41ba1e:	(bad)  
  41ba1f:	and    ecx,DWORD PTR [edx-0x2b3e3f7d]
  41ba25:	xchg   ebp,eax
  41ba26:	ret    0x81e8
  41ba29:	lea    ebx,[edi]
  41ba2b:	xchg   ebx,eax
  41ba2c:	icebp  
  41ba2d:	sub    bl,BYTE PTR [edi+0x46685dd3]
  41ba33:	(bad)  
  41ba34:	mov    eax,0x1b182ef7
  41ba39:	inc    edi
  41ba3a:	inc    eax
  41ba3b:	push   esp
  41ba3c:	lds    ecx,FWORD PTR [esp+esi*8+0x74845967]
  41ba43:	ins    BYTE PTR es:[edi],dx
  41ba44:	pop    ebx
  41ba45:	add    DWORD PTR [eax+0x53c490a8],edi
  41ba4b:	push   edx
  41ba4c:	adc    edx,edi
  41ba4e:	cs repz pop eax
  41ba51:	stos   BYTE PTR es:[edi],al
  41ba52:	shr    DWORD PTR [ebp+0x6c5a8d0d],cl
  41ba58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba59:	pop    esi
  41ba5a:	add    DWORD PTR [ecx+edi*4],ecx
  41ba5d:	std    
  41ba5e:	cs jmp 0x9eee4bbe
  41ba64:	or     al,0x7c
  41ba66:	pop    ss
  41ba67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba68:	xchg   esp,eax
  41ba69:	mov    eax,0xba2da8fe
  41ba6e:	xchg   ecx,eax
  41ba6f:	in     eax,0x8a
  41ba71:	push   ss
  41ba72:	cmp    ah,BYTE PTR [edx+0x71]
  41ba75:	cmp    ah,BYTE PTR [eax-0x32]
  41ba78:	add    eax,0x8a35a8c7
  41ba7d:	jl     0x41bac4
  41ba7f:	icebp  
  41ba80:	mul    BYTE PTR [esi+0x59]
  41ba83:	(bad)  [esp+ebp*1-0x5f756414]
  41ba8a:	mov    ebp,0x36e6c584
  41ba8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba90:	mov    ch,0xd4
  41ba92:	das    
  41ba93:	hlt    
  41ba94:	sub    al,ch
  41ba96:	pop    edx
  41ba97:	sbb    ah,BYTE PTR [ebx+esi*1+0x6c4ac410]
  41ba9e:	jmp    0xbf54ed4a
  41baa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa4:	xchg   edx,eax
  41baa5:	sbb    dl,dh
  41baa7:	push   edi
  41baa8:	rcr    ecx,0x65
  41baab:	fnstenv [eax-0x13]
  41baae:	push   ds
  41baaf:	sub    DWORD PTR [ecx+ebx*2],ebp
  41bab2:	push   0x46
  41bab4:	add    eax,0xb185768e
  41bab9:	cld    
  41baba:	je     0x41bafc
  41babc:	inc    edi
  41babd:	push   0x2f
  41babf:	cs lock mov bl,0x20
  41bac3:	adc    cl,0x58
  41bac6:	fist   DWORD PTR [esi+edx*1-0x73]
  41baca:	and    BYTE PTR [esi],0xa4
  41bacd:	sub    edi,DWORD PTR [eax-0x8]
  41bad0:	jge    0x41ba69
  41bad2:	das    
  41bad3:	sar    BYTE PTR [edi],1
  41bad5:	outs   dx,DWORD PTR ds:[esi]
  41bad6:	dec    esp
  41bad7:	scas   al,BYTE PTR es:[edi]
  41bad8:	push   edx
  41bad9:	ss mov al,0xa9
  41badc:	into   
  41badd:	dec    esi
  41bade:	xor    DWORD PTR [ebx],eax
  41bae0:	mov    edx,0x93d61b2d
  41bae5:	xchg   BYTE PTR [esi],ch
  41bae7:	in     eax,0xd7
  41bae9:	test   BYTE PTR [ebx-0x4318954f],dl
  41baef:	test   eax,0xf3d793eb
  41baf4:	mov    al,ds:0xb039ef7c
  41baf9:	in     eax,0x1b
  41bafb:	push   0xfffffffb
  41bafd:	into   
  41bafe:	cs push 0x58e14730
  41bb04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb05:	rcl    BYTE PTR [esi+eiz*4+0x67],1
  41bb09:	out    0x68,al
  41bb0b:	popa   
  41bb0c:	or     esp,DWORD PTR [ebx+0x5c]
  41bb0f:	dec    esi
  41bb10:	mov    ch,BYTE PTR [ebp+0x3dfb2f60]
  41bb16:	add    DWORD PTR [esi],0xffffffcd
  41bb19:	jl     0x41bb4d
  41bb1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb1c:	add    BYTE PTR [eax-0x6bdd4028],dh
  41bb22:	mov    dh,0x90
  41bb24:	mov    ah,BYTE PTR [eax-0x1e9c8929]
  41bb2a:	xchg   ebx,eax
  41bb2b:	or     eax,0xbe996dfa
  41bb30:	pusha  
  41bb31:	test   DWORD PTR [esi+0x5b],edx
  41bb34:	jp     0x41bb47
  41bb36:	xor    cl,dh
  41bb38:	mov    dl,0xba
  41bb3a:	mov    BYTE PTR fs:[esi-0x74c48c8a],cl
  41bb41:	(bad)  
  41bb42:	not    dh
  41bb44:	mov    ah,BYTE PTR [ebp-0x4f]
  41bb47:	repnz pushf 
  41bb49:	xchg   DWORD PTR [edi-0x7ae57581],ebp
  41bb4f:	sar    DWORD PTR [edi-0x6c],cl
  41bb52:	xlat   BYTE PTR ds:[ebx]
  41bb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb54:	icebp  
  41bb55:	mov    edx,cs
  41bb57:	sbb    eax,0xb3f149de
  41bb5c:	call   0x300f:0x2ed5ffec
  41bb63:	add    ebx,ecx
  41bb65:	inc    edx
  41bb66:	retf   
  41bb67:	iret   
  41bb68:	or     DWORD PTR [eax-0x7227d97d],0x72
  41bb6f:	and    eax,0x9aa59b71
  41bb74:	stos   DWORD PTR es:[edi],eax
  41bb75:	popf   
  41bb76:	push   edi
  41bb77:	mov    edx,0x633228a
  41bb7c:	xchg   DWORD PTR [eax-0x724cd775],eax
  41bb82:	cli    
  41bb83:	jge    0x41bb6b
  41bb85:	inc    esi
  41bb86:	in     eax,dx
  41bb87:	sub    al,0xf2
  41bb8a:	cs test bh,dh
  41bb8d:	shr    dl,cl
  41bb8f:	mov    WORD PTR [edi],ss
  41bb91:	(bad)  
  41bb92:	cs push ss
  41bb94:	ret    
  41bb95:	(bad)  
  41bb96:	(bad)  
  41bb97:	xor    bh,al
  41bb99:	je     0x41bbf4
  41bb9b:	or     DWORD PTR [ebx-0x5217ca06],ebp
  41bba1:	sbb    esp,ebp
  41bba3:	gs xor al,0x9b
  41bba6:	into   
  41bba7:	loopne 0x41bbb3
  41bba9:	std    
  41bbaa:	xchg   ecx,eax
  41bbab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbac:	inc    edx
  41bbad:	icebp  
  41bbae:	cmp    ebx,DWORD PTR [eax+0x51358ada]
  41bbb4:	xchg   ebx,eax
  41bbb5:	(bad)  
  41bbb6:	int    0x33
  41bbb8:	ror    DWORD PTR [ebp-0x7eacc048],cl
  41bbbe:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41bbc0:	add    DWORD PTR [edx+0x79563b62],ebp
  41bbc6:	das    
  41bbc7:	and    dh,BYTE PTR [ebx+eiz*8+0x44]
  41bbcb:	out    dx,al
  41bbcc:	adc    BYTE PTR [esi+ebp*1+0x58d6cd2],cl
  41bbd3:	out    dx,eax
  41bbd4:	aaa    
  41bbd5:	and    BYTE PTR [esi+0x2f4b5ddb],0xea
  41bbdc:	xchg   ebx,eax
  41bbdd:	popa   
  41bbde:	hlt    
  41bbdf:	or     ecx,ebp
  41bbe1:	sub    al,0xc6
  41bbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbe4:	sub    bh,BYTE PTR fs:[edx-0x3]
  41bbe8:	(bad)  
  41bbe9:	iret   
  41bbea:	enter  0xa63f,0x21
  41bbee:	dec    edi
  41bbf0:	mov    ch,BYTE PTR [ebx-0x80]
  41bbf3:	adc    edx,DWORD PTR [ebx+0x3da66aa1]
  41bbf9:	xchg   DWORD PTR [ebx],ecx
  41bbfb:	hlt    
  41bbfc:	(bad)  
  41bbfd:	sub    al,0x89
  41bbff:	jmp    0x4629b28e
  41bc04:	test   DWORD PTR [esi-0x39],edx
  41bc07:	test   al,0x11
  41bc09:	mov    WORD PTR [esi-0x41],?
  41bc0c:	or     DWORD PTR [edx],esp
  41bc0e:	repnz push esp
  41bc10:	addr16 int 0x7c
  41bc13:	aam    0x8a
  41bc15:	or     al,0xa2
  41bc17:	cmp    eax,0x4e6f884e
  41bc1c:	inc    esi
  41bc1d:	mov    ebp,0xd5bc88a1
  41bc22:	es or  al,0x8a
  41bc25:	mov    ebx,0x7e2243b4
  41bc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc2b:	(bad)  
  41bc2c:	mov    eax,0x48f6e9a1
  41bc31:	imul   esi,DWORD PTR [edx],0x7eab64a6
  41bc37:	jge    0x41bc2f
  41bc39:	imul   ebx,ebx,0xffffff86
  41bc3c:	mov    dh,cl
  41bc3e:	or     DWORD PTR [esp+edx*1-0x57],esp
  41bc42:	and    cl,BYTE PTR [esi+ebp*8]
  41bc45:	(bad)  
  41bc46:	into   
  41bc47:	out    dx,eax
  41bc48:	sbb    eax,0xb5e54a96
  41bc4d:	pop    es
  41bc4e:	das    
  41bc4f:	ds std 
  41bc51:	jg     0x41bbe4
  41bc53:	push   0xa69efc94
  41bc58:	lods   eax,DWORD PTR ds:[esi]
  41bc59:	pusha  
  41bc5a:	jecxz  0x41bc16
  41bc5c:	pop    ss
  41bc5d:	push   esi
  41bc5e:	mov    bh,0xc4
  41bc60:	mov    al,BYTE PTR [esi]
  41bc62:	inc    esp
  41bc63:	xor    dl,al
  41bc65:	call   0x4ef:0x8dcba129
  41bc6c:	adc    DWORD PTR [ebx+0x30],0xffffff87
  41bc70:	xchg   ecx,eax
  41bc71:	int3   
  41bc72:	ficom  DWORD PTR [ebx-0x76]
  41bc75:	out    0x48,eax
  41bc77:	pop    ebx
  41bc78:	imul   ecx,edx,0xffffffef
  41bc7b:	(bad)  
  41bc7d:	xchg   ebx,eax
  41bc7e:	repz imul ebx,DWORD PTR [ecx+0x63],0xffffffcf
  41bc83:	push   es
  41bc84:	not    DWORD PTR [ebp+0x4872683a]
  41bc8a:	das    
  41bc8b:	or     edi,DWORD PTR [eax-0x2a2a221d]
  41bc91:	adc    al,0xc2
  41bc93:	mov    al,0xd
  41bc95:	nop
  41bc96:	ja     0x41bce4
  41bc98:	mov    al,al
  41bc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc9b:	cmp    DWORD PTR [esi-0x7503a18a],ebp
  41bca1:	ja     0x41bcdd
  41bca3:	data16 jo 0x41bcdb
  41bca6:	enter  0xb0e4,0x8d
  41bcaa:	retf   
  41bcab:	ror    ah,1
  41bcad:	call   0xa176435b
  41bcb2:	and    ecx,DWORD PTR [eax]
  41bcb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb5:	lea    eax,[ecx]
  41bcb7:	xchg   ecx,eax
  41bcb8:	and    al,BYTE PTR [edx-0x7239853b]
  41bcbe:	mov    eax,ds:0xee63b624
  41bcc3:	xchg   esp,eax
  41bcc4:	cmp    eax,0xd0002ed8
  41bcc9:	lahf   
  41bcca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bccb:	xchg   edi,eax
  41bccc:	adc    esp,edi
  41bcce:	jo     0x41bc76
  41bcd0:	jns    0x41bd1d
  41bcd2:	pop    ebx
  41bcd3:	aas    
  41bcd4:	mov    dl,0xf4
  41bcd6:	inc    ebx
  41bcd7:	xor    cl,BYTE PTR [edx+0x6b5ca8f8]
  41bcdd:	cmp    al,0xde
  41bcdf:	retf   0x8d55
  41bce2:	adc    dh,dh
  41bce4:	aam    0xed
  41bce6:	jg     0x41bd21
  41bce8:	add    bl,bh
  41bcea:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41bcec:	add    BYTE PTR [ecx],0x51
  41bcef:	sbb    eax,DWORD PTR [edi+edx*4-0x72c83799]
  41bcf6:	je     0x41bce7
  41bcf8:	push   esi
  41bcf9:	dec    esi
  41bcfa:	aas    
  41bcfb:	outs   dx,BYTE PTR ds:[esi]
  41bcfc:	dec    edx
  41bcfd:	dec    eax
  41bcfe:	popa   
  41bcff:	sub    al,0x95
  41bd01:	cmp    al,0xb4
  41bd03:	stos   DWORD PTR es:[edi],eax
  41bd04:	cmc    
  41bd05:	mov    cl,BYTE PTR [eax-0x42]
  41bd08:	retf   0xa938
  41bd0b:	mov    cl,0xfe
  41bd0d:	xchg   edx,eax
  41bd0e:	dec    ebp
  41bd0f:	ins    BYTE PTR es:[edi],dx
  41bd10:	aad    0x2
  41bd12:	scas   eax,DWORD PTR es:[edi]
  41bd13:	rcr    DWORD PTR [esi],0x36
  41bd16:	jmp    0x3382478e
  41bd1b:	call   0xcb9a8122
  41bd20:	mul    BYTE PTR ds:0xc9d9a62b
  41bd26:	cmp    DWORD PTR [esi+eiz*2+0x7e],0x7b67ea
  41bd2e:	mov    bl,0xc2
  41bd30:	out    dx,al
  41bd31:	xchg   DWORD PTR [edi],ebp
  41bd33:	ror    DWORD PTR [eax],0x15
  41bd36:	test   BYTE PTR [ebp-0x79],ch
  41bd39:	(bad)  
  41bd3a:	cld    
  41bd3b:	stos   BYTE PTR es:[edi],al
  41bd3c:	mov    dh,0x59
  41bd3e:	dec    ebp
  41bd3f:	ret    
  41bd40:	outs   dx,BYTE PTR ds:[esi]
  41bd41:	into   
  41bd42:	jp     0x41bd48
  41bd44:	push   0x1d
  41bd46:	lods   eax,DWORD PTR ds:[esi]
  41bd47:	sub    cl,BYTE PTR [edx+0x24486750]
  41bd4d:	mov    edi,0x9b3932d6
  41bd52:	cmc    
  41bd53:	and    al,BYTE PTR [edx+0x45]
  41bd56:	sub    DWORD PTR [esi+0x5571065e],esp
  41bd5c:	lock or DWORD PTR [edi-0x5a],eax
  41bd60:	imul   ebx,DWORD PTR [edx],0x4a
  41bd63:	jno    0x41bd1f
  41bd65:	and    bl,BYTE PTR [edx+eax*2]
  41bd68:	mov    bl,BYTE PTR [edi+0x2844edcf]
  41bd6e:	xchg   ebp,eax
  41bd6f:	push   es
  41bd70:	adc    ecx,DWORD PTR [ebp-0x16fcd665]
  41bd76:	and    BYTE PTR [ebp-0x41],al
  41bd79:	mov    al,0x2f
  41bd7b:	dec    esp
  41bd7c:	inc    edi
  41bd7d:	mov    al,ds:0x1d3abc66
  41bd82:	jae    0x41bd2a
  41bd84:	xchg   ebx,eax
  41bd85:	mov    ds:0xfbf467c0,al
  41bd8a:	into   
  41bd8b:	pop    ebp
  41bd8c:	mov    dh,BYTE PTR [edi-0x187c4038]
  41bd92:	dec    esi
  41bd93:	ss inc ebp
  41bd95:	(bad)  
  41bd96:	out    0x25,eax
  41bd98:	ds jo  0x41bde9
  41bd9b:	inc    eax
  41bd9c:	test   eax,0x8a1c4b7c
  41bda1:	in     eax,0x52
  41bda3:	repz jmp 0xe38d:0x33837277
  41bdab:	pop    ebx
  41bdac:	in     eax,0xfc
  41bdae:	in     eax,0x14
  41bdb0:	outs   dx,BYTE PTR ds:[esi]
  41bdb1:	retf   
  41bdb2:	cs (bad) 
  41bdb5:	sub    eax,0xbfc95eb5
  41bdba:	mov    ebx,0x667328a6
  41bdbf:	push   edx
  41bdc0:	mov    al,ds:0x566ce8a
  41bdc5:	or     eax,0xa202be2f
  41bdca:	gs dec ebx
  41bdcc:	stc    
  41bdcd:	add    BYTE PTR [esi+eiz*4-0xb296d3e],0xde
  41bdd5:	jl     0x41bdaf
  41bdd7:	mov    ds:0xf5b9090,eax
  41bddc:	add    ebp,edi
  41bdde:	xor    DWORD PTR cs:[ebx-0x4262ed80],esp
  41bde5:	lea    esp,[esi+0x173ea21d]
  41bdeb:	call   0x5304:0x675b9bc9
  41bdf2:	pop    ebp
  41bdf3:	dec    esp
  41bdf4:	mov    dh,BYTE PTR [eax+eiz*4-0xe]
  41bdf8:	jb     0x41bdbf
  41bdfa:	push   ecx
  41bdfb:	mov    BYTE PTR [esi+ecx*4],0x92
  41bdff:	in     al,dx
  41be00:	das    
  41be01:	test   eax,0x780f0f7a
  41be06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be07:	lea    ecx,[edx+0x424781c6]
  41be0d:	mov    dl,0x71
  41be0f:	sub    eax,0xfba98d15
  41be14:	jl     0x41bdce
  41be16:	mov    al,0x37
  41be18:	imul   esi,DWORD PTR [esi+0x2f],0x53d335a0
  41be1f:	jbe    0x41be1c
  41be21:	or     ah,dl
  41be23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be24:	repz mov ecx,DWORD PTR [eax]
  41be27:	ins    BYTE PTR es:[edi],dx
  41be28:	stos   BYTE PTR es:[edi],al
  41be29:	ins    DWORD PTR es:[edi],dx
  41be2a:	jmp    0x7aa6:0x7552e2ab
  41be31:	xchg   edx,eax
  41be32:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be34:	sub    eax,DWORD PTR [edx+0x4e]
  41be37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be38:	pusha  
  41be39:	sbb    eax,0x3d408675
  41be3e:	out    dx,al
  41be3f:	lds    esi,FWORD PTR [ebx]
  41be41:	sub    DWORD PTR [edi],ebp
  41be43:	test   eax,0x80a371c4
  41be48:	jb     0x41be6b
  41be4a:	jae    0x41be22
  41be4c:	out    dx,eax
  41be4d:	mov    bh,BYTE PTR [edi]
  41be4f:	fiadd  WORD PTR [eax-0x32]
  41be52:	xchg   esp,eax
  41be53:	or     ax,0xd626
  41be57:	jge    0x41bde3
  41be59:	xchg   ecx,eax
  41be5a:	mov    cl,bl
  41be5c:	imul   ebp,DWORD PTR [esi-0x721eb2bf],0xc2af9f05
  41be66:	jnp    0x41be13
  41be68:	fistp  WORD PTR [edx-0x7283c709]
  41be6e:	jg     0x41be9d
  41be70:	mov    ecx,0xa2ff8676
  41be75:	mov    al,BYTE PTR [ebp-0x7d]
  41be78:	mov    al,ds:0x59f5d26d
  41be7d:	sub    al,0x85
  41be7f:	sub    ecx,DWORD PTR [edx+0x4b650d26]
  41be85:	or     eax,0x8df6eac0
  41be8a:	mov    ebp,0x7e5fabd7
  41be8f:	lea    ebp,[edx-0x66]
  41be92:	out    0x44,al
  41be94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be95:	mov    ecx,0xe90a7be9
  41be9a:	cmp    bl,BYTE PTR [esi+0x59e87aaf]
  41bea0:	lahf   
  41bea1:	(bad)  
  41bea2:	jo     0x41be9d
  41bea4:	lds    ecx,FWORD PTR [edi+0x100a8a27]
  41beaa:	cdq    
  41beab:	(bad)  
  41beac:	(bad)  
  41bead:	jnp    0x41be58
  41beaf:	pop    edi
  41beb0:	mov    ds:0x3aef5308,al
  41beb5:	or     eax,0x8d10c285
  41beba:	jo     0x41be57
  41bebc:	mov    gs,WORD PTR [edi-0x52cebb09]
  41bec2:	sub    esi,DWORD PTR [esi]
  41bec4:	adc    DWORD PTR [ebx],eax
  41bec6:	retf   0xa7d
  41bec9:	push   edi
  41beca:	xchg   ebx,eax
  41becb:	xchg   ebx,eax
  41becc:	ror    DWORD PTR [ebp-0x515bb201],cl
  41bed2:	popf   
  41bed3:	rol    edx,1
  41bed5:	les    esi,FWORD PTR [ecx]
  41bed7:	mov    al,ds:0x3f43059a
  41bedc:	mov    dh,0x6d
  41bede:	mov    edi,0xf88daa50
  41bee3:	sub    esp,DWORD PTR ds:0xc56885cf
  41bee9:	loopne 0x41bf53
  41beeb:	xor    BYTE PTR [edx-0x885d36d],cl
  41bef1:	fucom  st(3)
  41bef3:	int3   
  41bef4:	push   0xffffff8d
  41bef6:	inc    esp
  41bef7:	ror    BYTE PTR [esi+0x2e],1
  41befa:	pop    esp
  41befb:	mov    ebx,0x2546872a
  41bf00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf01:	lds    eax,FWORD PTR [ebx]
  41bf03:	push   ebp
  41bf04:	retf   0xd108
  41bf07:	xlat   BYTE PTR ds:[ebx]
  41bf08:	fdivp  st(7),st
  41bf0a:	push   0xffffffa6
  41bf0c:	and    esi,DWORD PTR [ebx]
  41bf0e:	sub    BYTE PTR [edi],bl
  41bf10:	dec    ebx
  41bf11:	in     al,0xbe
  41bf13:	dec    esi
  41bf14:	mov    al,dh
  41bf16:	jmp    0xa07c:0x4e4c24c4
  41bf1d:	(bad)  
  41bf1e:	in     al,dx
  41bf1f:	sub    eax,0x7377315f
  41bf24:	jg     0x41bf7d
  41bf26:	das    
  41bf27:	out    dx,eax
  41bf28:	inc    eax
  41bf29:	sbb    DWORD PTR [edi-0x12],esp
  41bf2c:	cwde   
  41bf2d:	dec    esi
  41bf2e:	ret    
  41bf2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf30:	sbb    cl,BYTE PTR [eax+0xf19859d]
  41bf36:	fs mov al,BYTE PTR fs:[ecx+0x354aa25a]
  41bf3e:	push   es
  41bf3f:	mov    WORD PTR [ebp-0x73],gs
  41bf42:	ss push ss
  41bf44:	mov    eax,0xf12e39ca
  41bf49:	sbb    dh,BYTE PTR [esi]
  41bf4b:	mov    eax,0xc68b8eb9
  41bf50:	push   ebx
  41bf51:	push   ds
  41bf52:	adc    al,0xfc
  41bf54:	scas   al,BYTE PTR es:[edi]
  41bf55:	lea    eax,[ebx]
  41bf57:	cmp    al,0x33
  41bf59:	push   ebp
  41bf5a:	data16 fwait
  41bf5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf5d:	and    DWORD PTR [esi+0x3d],eax
  41bf60:	aas    
  41bf61:	xchg   edi,eax
  41bf62:	pop    ds
  41bf63:	inc    esi
  41bf64:	mov    al,ds:0x64a61712
  41bf69:	enter  0xd350,0xe9
  41bf6d:	xor    dl,BYTE PTR [ecx+eiz*4]
  41bf70:	mov    bl,BYTE PTR [ebx-0x6fa56cfe]
  41bf76:	jno    0x41bf5a
  41bf78:	scas   al,BYTE PTR es:[edi]
  41bf79:	mov    al,ds:0xc5ddc208
  41bf7e:	das    
  41bf7f:	je     0x41bf57
  41bf81:	jne    0x41bf5c
  41bf83:	in     eax,dx
  41bf84:	ds mov dl,0xe6
  41bf87:	test   eax,0x5df59bc6
  41bf8c:	mov    ebp,0x10e6db8d
  41bf91:	push   0x9334bf20
  41bf96:	mov    ebp,0x8ed64a62
  41bf9b:	call   0xcaff:0xc801ddc
  41bfa2:	sub    eax,0xb3ab0943
  41bfa7:	sbb    al,0xfa
  41bfa9:	sahf   
  41bfaa:	fcmovnb st,st(6)
  41bfac:	inc    ecx
  41bfad:	jl     0x41bfa1
  41bfaf:	sahf   
  41bfb0:	pop    ds
  41bfb1:	aas    
  41bfb2:	pop    edx
  41bfb3:	pop    eax
  41bfb4:	or     ah,BYTE PTR [edi-0x74887949]
  41bfba:	das    
  41bfbb:	add    BYTE PTR [eax],dh
  41bfbd:	xchg   ebx,eax
  41bfbe:	(bad)  
  41bfbf:	xchg   ecx,eax
  41bfc0:	loope  0x41bfc0
  41bfc2:	imul   esp,DWORD PTR [esi-0x153a98bd],0x50
  41bfc9:	push   es
  41bfca:	pop    esi
  41bfcb:	test   ebx,eax
  41bfcd:	scas   eax,DWORD PTR es:[edi]
  41bfce:	mov    dh,0xc
  41bfd0:	jno    0x41c013
  41bfd2:	mov    cl,0x26
  41bfd4:	test   BYTE PTR [ebp+0x52c3e861],bl
  41bfda:	icebp  
  41bfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfdc:	sbb    DWORD PTR [ecx+0x69],esi
  41bfdf:	fadd   QWORD PTR [edi-0x72e1d26b]
  41bfe5:	mov    ebp,0xcc0eeec9
  41bfea:	sbb    eax,0xa8a43af9
  41bfef:	gs scas eax,DWORD PTR es:[edi]
  41bff1:	lahf   
  41bff2:	mov    DWORD PTR [ebp+edx*4+0x4d2418d],ebx
  41bff9:	sbb    ebx,0xffffff99
  41bffc:	mov    ecx,DWORD PTR [ebp+0x26]
  41bfff:	loopne 0x41bff1
  41c001:	push   es
  41c002:	bound  ecx,QWORD PTR [ebp+0x72]
  41c005:	or     eax,0x8df6d6a7
  41c00a:	inc    esp
  41c00b:	sti    
  41c00c:	adc    DWORD PTR [eax+0x63457e7e],0x2f
  41c013:	push   es
  41c014:	popa   
  41c015:	aaa    
  41c016:	push   edx
  41c017:	inc    ecx
  41c018:	sub    eax,0x9371f453
  41c01d:	shl    BYTE PTR [esi],cl
  41c01f:	dec    esi
  41c020:	mov    ah,BYTE PTR [edi-0x2b]
  41c023:	or     eax,0xe82fd7db
  41c028:	xchg   ebp,eax
  41c029:	cmp    bl,bl
  41c02b:	fwait
  41c02c:	cli    
  41c02d:	dec    ebp
  41c02e:	leave  
  41c02f:	add    dl,ch
  41c031:	sub    BYTE PTR [edi-0x3f0cf95a],cl
  41c037:	mov    cl,0x4f
  41c039:	and    eax,0xd8b2b71
  41c03e:	test   eax,0x9daaa1b0
  41c043:	xchg   DWORD PTR [edx+0x2da9435a],eax
  41c049:	add    BYTE PTR [edx-0x6f2225d3],bh
  41c04f:	or     bh,BYTE PTR [ebx-0x3d17a88b]
  41c055:	sar    esp,0xa5
  41c058:	mov    gs,WORD PTR ds:0x8c629b3f
  41c05e:	sahf   
  41c05f:	enter  0x8dc9,0xa7
  41c063:	pop    ecx
  41c064:	pop    ebx
  41c065:	in     al,0x6d
  41c067:	mov    WORD PTR [edi],ds
  41c069:	in     al,dx
  41c06a:	xor    DWORD PTR [eax+0x2a51741a],ecx
  41c070:	mov    ebp,0x457b6ee0
  41c075:	fcom   QWORD PTR [ebx]
  41c077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c078:	daa    
  41c079:	nop
  41c07a:	loope  0x41c053
  41c07c:	jmp    0x9d8568a6
  41c081:	out    dx,eax
  41c082:	cmp    ah,BYTE PTR [ebx-0x76]
  41c085:	sub    dh,BYTE PTR [eax]
  41c087:	or     bh,bh
  41c089:	test   al,0xa2
  41c08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c08c:	iret   
  41c08d:	in     eax,dx
  41c08e:	mov    bh,0x0
  41c090:	push   ebx
  41c091:	mov    ecx,0x1f8b2581
  41c096:	or     eax,0xc845dc33
  41c09b:	mov    eax,0xa7621056
  41c0a0:	dec    ebp
  41c0a1:	ins    BYTE PTR es:[di],dx
  41c0a3:	push   eax
  41c0a4:	jge    0x41c0bc
  41c0a6:	sbb    al,0x46
  41c0a8:	ficomp WORD PTR [eax-0x6a7577b5]
  41c0ae:	xchg   esp,eax
  41c0af:	(bad)
  41c0b2:	dec    esi
  41c0b3:	cwde   
  41c0b4:	pop    esi
  41c0b5:	mov    dh,BYTE PTR [edi-0x1cb3a654]
  41c0bb:	push   eax
  41c0bc:	sub    dl,BYTE PTR [edx]
  41c0be:	ret    0xfce3
  41c0c1:	(bad)  
  41c0c2:	das    
  41c0c3:	imul   BYTE PTR [esi-0x4a44674a]
  41c0c9:	or     DWORD PTR [ecx+0x210ecaa6],esi
  41c0cf:	ds mov ah,0xfa
  41c0d2:	xchg   ebp,eax
  41c0d3:	mov    WORD PTR [edx+0x3d0ef124],cs
  41c0d9:	loope  0x41c0e3
  41c0db:	(bad)  
  41c0dc:	add    cl,BYTE PTR [esi-0x348b33e7]
  41c0e2:	pop    eax
  41c0e3:	pop    ds
  41c0e4:	xchg   edi,eax
  41c0e5:	xor    al,0x28
  41c0e7:	imul   ebx,DWORD PTR [eax],0xffffff81
  41c0ea:	pop    ss
  41c0eb:	gs fwait
  41c0ed:	aaa    
  41c0ee:	pop    ebp
  41c0ef:	jae    0x41c07b
  41c0f1:	push   ebx
  41c0f2:	add    BYTE PTR [ebx-0x6fb3993e],dh
  41c0f8:	ins    DWORD PTR es:[edi],dx
  41c0f9:	mov    ch,ch
  41c0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0fc:	cmp    al,0xe7
  41c0fe:	mov    al,ds:0x77baf5e5
  41c103:	cmp    al,0xae
  41c105:	xlat   BYTE PTR ds:[ebx]
  41c106:	in     eax,0x99
  41c108:	mov    dh,BYTE PTR [edx+0x5965be59]
  41c10e:	lahf   
  41c10f:	pop    ss
  41c110:	mov    bh,0x8d
  41c112:	jge    0x41c12f
  41c114:	jmp    0x41c127
  41c116:	ins    BYTE PTR es:[edi],dx
  41c117:	cmp    esp,edi
  41c119:	repz cs mov cl,0x9a
  41c11d:	cmp    edi,DWORD PTR fs:[ebx-0x5a1bc469]
  41c124:	or     dl,bh
  41c126:	jmp    0x4112ae36
  41c12b:	jbe    0x41c1a3
  41c12d:	sub    dh,BYTE PTR [ecx]
  41c12f:	sahf   
  41c130:	sbb    eax,0xd41353c7
  41c135:	in     eax,dx
  41c136:	fwait
  41c137:	mov    ebx,0x6fc88de6
  41c13c:	(bad)  
  41c13d:	mov    dh,0x7
  41c13f:	cmc    
  41c140:	jns    0x41c0f6
  41c142:	inc    esi
  41c143:	test   al,0x3c
  41c145:	add    al,0x6f
  41c147:	addr16 (bad) 
  41c149:	jge    0x41c1a2
  41c14b:	jecxz  0x41c17f
  41c14d:	lea    esp,[eax]
  41c14f:	add    ebx,DWORD PTR [esi+0x1fe2c65b]
  41c155:	mov    ds:0x44fa4ebf,eax
  41c15a:	xor    bh,ch
  41c15c:	int3   
  41c15d:	paddusw mm1,QWORD PTR [edi+0x61634e71]
  41c164:	pop    ecx
  41c165:	lea    esp,[ebx]
  41c167:	ja     0x41c13f
  41c169:	retf   0xe2e1
  41c16c:	adc    eax,0xcc82e09
  41c171:	jns    0x41c124
  41c173:	add    dl,bl
  41c175:	xlat   BYTE PTR ds:[ebx]
  41c176:	mov    ebx,0x308a5b04
  41c17b:	test   BYTE PTR [ecx],al
  41c17d:	out    dx,al
  41c17e:	adc    BYTE PTR [esi],0x2c
  41c181:	xchg   esp,eax
  41c182:	scas   al,BYTE PTR es:[edi]
  41c183:	call   0xb00e:0xea8e0d47
  41c18a:	xchg   DWORD PTR [esi-0x1821d166],esp
  41c190:	jle    0x41c19f
  41c192:	cwde   
  41c193:	bound  ecx,QWORD PTR [ebx+0x5d1473d8]
  41c199:	ja     0x41c1df
  41c19b:	pop    edi
  41c19c:	push   esi
  41c19d:	mov    bh,0x4d
  41c19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a0:	int    0xc
  41c1a2:	test   al,0xd9
  41c1a4:	xchg   ebx,eax
  41c1a5:	jl     0x41c1b1
  41c1a7:	(bad)  
  41c1a8:	mov    al,BYTE PTR [ebp+ecx*8+0x4bd2cf40]
  41c1af:	fidiv  DWORD PTR [edi]
  41c1b1:	lea    esp,[esi-0x22]
  41c1b4:	arpl   WORD PTR [esi],si
  41c1b6:	mov    al,ds:0x2fa4f865
  41c1bb:	sbb    ecx,DWORD PTR [ebp+0x2b64858e]
  41c1c1:	or     eax,0xad71a699
  41c1c6:	lea    edi,[esi]
  41c1c8:	inc    eax
  41c1c9:	(bad)  
  41c1ca:	jge    0x41c1bb
  41c1cc:	shl    BYTE PTR [eax-0x7a],0xa6
  41c1d0:	sub    dh,BYTE PTR [edx-0x75]
  41c1d3:	add    esi,ebp
  41c1d5:	fidiv  WORD PTR [edi-0x242aa58a]
  41c1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1dc:	fdivr  st,st(0)
  41c1de:	call   0xe356d7e1
  41c1e3:	xor    DWORD PTR [edx-0x6b9288f4],ecx
  41c1e9:	icebp  
  41c1ea:	out    dx,eax
  41c1eb:	aad    0x4d
  41c1ed:	mov    gs,WORD PTR [eax-0x59]
  41c1f0:	xchg   edi,eax
  41c1f1:	(bad)  
  41c1f2:	in     eax,dx
  41c1f3:	and    DWORD PTR [edx+0x5f],ebp
  41c1f6:	cs xchg ebp,eax
  41c1f8:	mov    bh,BYTE PTR [ebx]
  41c1fa:	mov    ebx,0x2be9a744
  41c1ff:	and    edi,DWORD PTR [eax]
  41c201:	lea    esi,[edi+0x4fba0f43]
  41c207:	out    dx,eax
  41c208:	or     al,0x3
  41c20a:	out    0x82,al
  41c20c:	mov    cl,BYTE PTR [edx+0x6d]
  41c20f:	ins    BYTE PTR es:[edi],dx
  41c210:	sbb    ch,BYTE PTR [ebx-0x6b]
  41c213:	push   ebp
  41c214:	add    cl,BYTE PTR [ebp-0x191a53a7]
  41c21a:	fisttp DWORD PTR [ecx+0x7f]
  41c21d:	dec    ebp
  41c21e:	(bad)  
  41c21f:	or     dh,BYTE PTR [esi]
  41c221:	fs das 
  41c223:	mov    ecx,0x5e720262
  41c228:	jle    0x41c1ba
  41c22a:	daa    
  41c22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c22c:	stos   DWORD PTR es:[edi],eax
  41c22d:	cs mov edx,0x36b271c3
  41c233:	xchg   ebx,eax
  41c234:	mov    edi,DWORD PTR [esi-0x4920f610]
  41c23a:	sub    al,BYTE PTR [edi]
  41c23c:	jmp    0x11c5:0x53a59d6e
  41c243:	jns    0x41c1fc
  41c245:	xchg   ebp,eax
  41c246:	scas   eax,DWORD PTR es:[edi]
  41c247:	call   0x2070dbb3
  41c24c:	mov    WORD PTR [ecx],ss
  41c24e:	mov    cl,BYTE PTR [eax-0x5966251b]
  41c254:	call   0xdb63:0xcccb4ff5
  41c25b:	add    al,0xf8
  41c25d:	add    DWORD PTR [edx],esi
  41c25f:	mov    edi,0x853160fc
  41c264:	sub    al,0xd5
  41c266:	jp     0x41c2d6
  41c268:	lods   eax,DWORD PTR ds:[esi]
  41c269:	(bad)  
  41c26a:	in     eax,dx
  41c26b:	dec    ecx
  41c26c:	mov    esp,0x39d862a6
  41c271:	bound  eax,QWORD PTR [ebx-0x23]
  41c274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c275:	push   esi
  41c276:	das    
  41c277:	pushf  
  41c278:	sti    
  41c279:	popa   
  41c27a:	jmp    0xf9f1:0x1b8d0f1c
  41c281:	in     al,dx
  41c282:	les    eax,FWORD PTR [ecx+0x612fb691]
  41c288:	jge    0x41c273
  41c28a:	cmp    al,0x31
  41c28c:	push   ebp
  41c28d:	ret    
  41c28e:	imul   esp,DWORD PTR [esi+0x365380d9],0x5fbfd764
  41c298:	lea    esi,[ecx-0x3a00e799]
  41c29e:	mov    edi,0x42cb7c1e
  41c2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a4:	clc    
  41c2a5:	mov    ecx,0xf40dcc7d
  41c2aa:	ror    DWORD PTR [esi-0x67c56276],1
  41c2b0:	lds    eax,FWORD PTR ds:0x8d17a14d
  41c2b6:	nop
  41c2b7:	les    esp,FWORD PTR ds:0x369f1b2b
  41c2bd:	mov    bl,0x2f
  41c2bf:	mov    bh,bh
  41c2c1:	cmp    eax,0xbab88e23
  41c2c6:	inc    edx
  41c2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2c8:	scas   eax,DWORD PTR es:[edi]
  41c2c9:	inc    ebx
  41c2ca:	cmc    
  41c2cb:	jmp    0x8f8a:0x6b05df2b
  41c2d2:	(bad)  
  41c2d3:	jns    0x41c2ed
  41c2d5:	add    al,0x29
  41c2d7:	cs loopne 0x41c267
  41c2da:	(bad)  
  41c2db:	jl     0x41c2d8
  41c2dd:	and    DWORD PTR [ebp+edi*2-0x3acd629b],0x4e1bd45d
  41c2e8:	push   ecx
  41c2e9:	cmc    
  41c2ea:	push   ebx
  41c2eb:	push   0x2e
  41c2ed:	fwait
  41c2ee:	sti    
  41c2ef:	sbb    BYTE PTR [edi-0x78585a73],0xbf
  41c2f6:	ins    BYTE PTR es:[edi],dx
  41c2f7:	into   
  41c2f8:	lds    eax,FWORD PTR [ebp+0x4e]
  41c2fb:	outs   dx,BYTE PTR ds:[esi]
  41c2fc:	rcl    BYTE PTR [ebx-0x12281eb7],cl
  41c302:	lods   eax,DWORD PTR ds:[esi]
  41c303:	and    al,0xdd
  41c305:	shr    DWORD PTR [edi-0x5a],1
  41c308:	fistp  QWORD PTR [edx]
  41c30a:	inc    esi
  41c30b:	xchg   edi,eax
  41c30c:	fwait
  41c30d:	xchg   ebp,eax
  41c30e:	cwde   
  41c30f:	or     DWORD PTR [ebp+0xecece0e],0x4e
  41c316:	fbld   TBYTE PTR [esi-0x5975e219]
  41c31c:	pop    edx
  41c31d:	clc    
  41c31e:	jg     0x41c2ab
  41c320:	call   0xac4:0xc677dae8
  41c327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c328:	fbld   TBYTE PTR [ebx+ecx*4-0xd]
  41c32c:	xchg   edi,eax
  41c32d:	in     eax,0xb1
  41c32f:	fadd   DWORD PTR [ebp+0x4751818d]
  41c335:	out    dx,eax
  41c336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c337:	add    ebp,esp
  41c339:	cmp    BYTE PTR [edi+0x43],ah
  41c33c:	jp     0x41c389
  41c33e:	das    
  41c33f:	push   eax
  41c340:	lods   al,BYTE PTR ds:[esi]
  41c341:	ins    DWORD PTR es:[edi],dx
  41c342:	test   DWORD PTR [ecx-0x5957d568],ebp
  41c348:	pusha  
  41c349:	mov    esp,DWORD PTR [ecx+0x73]
  41c34c:	add    ch,al
  41c34e:	cli    
  41c34f:	push   ecx
  41c350:	mov    cl,bh
  41c352:	out    dx,eax
  41c353:	sbb    eax,0x4ca01e4
  41c358:	call   0x6de9659a
  41c35d:	(bad)  
  41c35e:	into   
  41c35f:	dec    esp
  41c360:	mov    ds:0x697705d,al
  41c365:	repnz cmp eax,0x9f178a95
  41c36b:	jo     0x41c369
  41c36d:	(bad)
  41c370:	xchg   ecx,eax
  41c371:	test   bh,dh
  41c373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c374:	mov    ds:0xd88593bc,al
  41c379:	pop    ebx
  41c37a:	adc    DWORD PTR [esi-0x76],ebp
  41c37d:	and    eax,0x91ec5154
  41c382:	cmp    DWORD PTR [ecx-0x74],eax
  41c385:	mov    ecx,es
  41c387:	sub    cl,bh
  41c389:	xlat   BYTE PTR ds:[ebx]
  41c38a:	imul   esp,DWORD PTR [esi],0xffffffb2
  41c38d:	in     eax,0x70
  41c38f:	mov    bl,0x89
  41c391:	stos   DWORD PTR es:[edi],eax
  41c392:	push   ss
  41c393:	inc    esp
  41c394:	jbe    0x41c33c
  41c396:	or     ebp,esi
  41c398:	mov    esi,0x3fa0b898
  41c39d:	aaa    
  41c39e:	les    esp,FWORD PTR ds:0xa8a9af0a
  41c3a4:	push   esi
  41c3a5:	call   0x8e05349c
  41c3aa:	in     eax,0xf2
  41c3ac:	jne    0x41c368
  41c3ae:	cmp    eax,0x8abd72dc
  41c3b3:	call   0x84c3e934
  41c3b8:	mov    dh,BYTE PTR [ebp-0x26bef783]
  41c3be:	dec    edx
  41c3bf:	jge    0xc8f2c252
  41c3c5:	cmp    BYTE PTR [eax+ebp*8-0x70],ah
  41c3c9:	mov    dh,0x2f
  41c3cb:	daa    
  41c3cc:	xchg   ecx,eax
  41c3cd:	ret    0xc27e
  41c3d0:	aad    0x39
  41c3d2:	add    al,0xa6
  41c3d4:	scas   al,BYTE PTR es:[edi]
  41c3d5:	pop    ds
  41c3d6:	push   ecx
  41c3d7:	inc    dh
  41c3d9:	(bad)  
  41c3db:	or     BYTE PTR [edx+0x7010d2f0],0xe3
  41c3e2:	xchg   edi,eax
  41c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e4:	xchg   DWORD PTR [ebx+0x1c1e067a],edx
  41c3ea:	iret   
  41c3eb:	mov    dl,0x31
  41c3ed:	jbe    0x41c3bc
  41c3ef:	pop    esp
  41c3f0:	mov    al,BYTE PTR [esi]
  41c3f2:	scas   al,BYTE PTR es:[edi]
  41c3f3:	fild   WORD PTR [ecx+0x6d]
  41c3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f7:	iret   
  41c3f8:	xchg   ebx,eax
  41c3f9:	std    
  41c3fa:	jg     0x41c3a2
  41c3fc:	pop    es
  41c3fd:	mov    ch,0x61
  41c3ff:	scas   al,BYTE PTR es:[edi]
  41c400:	jecxz  0x41c477
  41c402:	neg    BYTE PTR [ebp-0x34c8b4e]
  41c408:	add    ebx,DWORD PTR [ebp-0x44bebabd]
  41c40e:	scas   eax,DWORD PTR es:[edi]
  41c40f:	std    
  41c410:	fcomp  st(5)
  41c412:	pop    ss
  41c413:	mov    dl,0x6
  41c415:	(bad)  
  41c419:	cli    
  41c41a:	pop    ecx
  41c41b:	lods   eax,DWORD PTR ds:[esi]
  41c41c:	dec    edx
  41c41d:	push   ss
  41c41e:	loope  0x41c43b
  41c420:	loop   0x41c44a
  41c422:	jmp    0xfafa2c7
  41c427:	lds    esp,FWORD PTR ds:0x6ef6792c
  41c42d:	imul   edx,DWORD PTR [edi],0xc3c03f51
  41c433:	or     al,0x8b
  41c435:	xchg   BYTE PTR [ecx],bh
  41c437:	cwde   
  41c438:	dec    BYTE PTR [edi+0x30ec27f]
  41c43e:	das    
  41c43f:	sbb    BYTE PTR [ecx+eax*2-0x29],ah
  41c443:	lods   al,BYTE PTR ds:[esi]
  41c444:	mov    al,ds:0x82a5d8f5
  41c449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44b:	xchg   DWORD PTR [edi+edi*4-0x6875b728],edi
  41c452:	xor    BYTE PTR [ecx+0x16],al
  41c455:	add    BYTE PTR [ecx-0x67],ch
  41c458:	(bad)  
  41c459:	icebp  
  41c45a:	inc    esi
  41c45b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c45c:	(bad)  
  41c45e:	hlt    
  41c45f:	sbb    esp,DWORD PTR [esi]
  41c461:	mov    bh,0x8
  41c463:	enter  0x42c7,0x1f
  41c467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c468:	pop    ebp
  41c469:	cmp    BYTE PTR ds:0x89a0ca8b,0xa7
  41c470:	and    DWORD PTR [edi],ebx
  41c472:	arpl   WORD PTR [edx],si
  41c474:	out    0x78,al
  41c476:	mov    al,0xce
  41c478:	daa    
  41c479:	test   eax,0x418aa4e9
  41c47e:	sar    DWORD PTR [edx-0x60],1
  41c481:	push   edi
  41c482:	push   es
  41c483:	nop
  41c484:	mov    bl,0x8d
  41c486:	pop    ecx
  41c487:	push   ds
  41c488:	popa   
  41c489:	xchg   BYTE PTR [edx+0x5e],ah
  41c48c:	push   ss
  41c48d:	xor    BYTE PTR [edx],dh
  41c48f:	test   BYTE PTR [edi],ch
  41c491:	retf   0xc526
  41c494:	test   BYTE PTR ds:0x8d112d5e,dh
  41c49a:	icebp  
  41c49b:	ror    DWORD PTR fs:[ebx+0x610c5b5d],0x2f
  41c4a3:	sub    al,0x3d
  41c4a5:	xor    eax,eax
  41c4a7:	enter  0x8af8,0xdf
  41c4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ac:	cmp    BYTE PTR [ebx+esi*2-0x48a4224f],cl
  41c4b3:	cld    
  41c4b4:	and    dl,al
  41c4b6:	cs loopne 0x41c46c
  41c4b9:	cmp    eax,DWORD PTR [eax]
  41c4bb:	rol    BYTE PTR [edi-0x67],1
  41c4be:	loop   0x41c468
  41c4c0:	push   0xffffff8a
  41c4c2:	and    BYTE PTR [esi+0x33],0x8d
  41c4c6:	fwait
  41c4c7:	mov    ch,0x49
  41c4c9:	pop    ds
  41c4ca:	das    
  41c4cb:	ret    0xe714
  41c4ce:	in     eax,0x41
  41c4d0:	pop    ss
  41c4d1:	pop    edi
  41c4d2:	jno    0x41c479
  41c4d4:	push   edi
  41c4d5:	xchg   ecx,eax
  41c4d6:	enter  0x7850,0xa3
  41c4da:	mov    al,ds:0x4af5d1f6
  41c4df:	arpl   WORD PTR [esi-0x35943945],sp
  41c4e5:	xchg   ebp,eax
  41c4e6:	jge    0x41c4dc
  41c4e8:	add    ebp,DWORD PTR [ebp+0x75c7a9b8]
  41c4ee:	(bad)  
  41c4ef:	out    0x66,eax
  41c4f1:	jge    0x41c4b1
  41c4f3:	push   edi
  41c4f4:	push   0x9559e7f5
  41c4f9:	add    edi,DWORD PTR [esi]
  41c4fb:	(bad)  
  41c4fd:	in     eax,dx
  41c4fe:	inc    eax
  41c4ff:	lds    edx,FWORD PTR [edi+eiz*4-0x76]
  41c503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c504:	jnp    0x41c53d
  41c506:	jl     0x41c494
  41c508:	pusha  
  41c509:	imul   DWORD PTR [ebx]
  41c50b:	scas   al,BYTE PTR es:[edi]
  41c50c:	mov    ch,BYTE PTR [esi-0x41]
  41c50f:	shr    BYTE PTR [edi+0x70],cl
  41c512:	stos   BYTE PTR es:[edi],al
  41c513:	mov    ds:0x8f918eda,al
  41c518:	push   ss
  41c519:	fbstp  TBYTE PTR [ebx]
  41c51b:	test   DWORD PTR [edx],edx
  41c51d:	into   
  41c51e:	sahf   
  41c51f:	data16 mov bl,BYTE PTR [edi]
  41c522:	or     BYTE PTR [ecx-0x20],bh
  41c525:	pcmpeqd mm7,QWORD PTR [esi+0x19588d1e]
  41c52c:	scas   al,BYTE PTR es:[edi]
  41c52d:	push   0xffffffbe
  41c52f:	cwde   
  41c530:	lock je 0x41c562
  41c533:	jl     0x41c5aa
  41c535:	mov    eax,0x2d5a5ed7
  41c53a:	push   0x91c157a6
  41c53f:	inc    edx
  41c540:	jae    0x41c51b
  41c542:	dec    esp
  41c543:	mov    bh,BYTE PTR cs:[edx-0x735a5c26]
  41c54a:	sub    eax,0xbd8d1a9a
  41c54f:	mov    ah,bh
  41c551:	mov    esp,0x2ed16e85
  41c556:	das    
  41c557:	bound  edx,QWORD PTR [ecx-0x25a017f3]
  41c55d:	clc    
  41c55e:	aas    
  41c55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c560:	sub    BYTE PTR [esi],bl
  41c562:	mov    cl,0x7b
  41c564:	adc    DWORD PTR ss:[edx+0x1e],ecx
  41c568:	xchg   esp,eax
  41c569:	jp     0x41c543
  41c56b:	dec    esp
  41c56c:	and    cl,BYTE PTR [edx-0x2095ac01]
  41c572:	xchg   DWORD PTR [esi-0x664e722e],edi
  41c578:	cmc    
  41c579:	dec    ebx
  41c57a:	js     0x41c536
  41c57c:	cmp    eax,0xa9002f41
  41c581:	aas    
  41c582:	and    eax,DWORD PTR [edi-0x2dcb6ba1]
  41c588:	adc    DWORD PTR [esi+ecx*8-0x7c54217b],ecx
  41c58f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c591:	aad    0x52
  41c593:	jnp    0x41c596
  41c595:	jl     0x41c556
  41c597:	call   0x5fd:0x20ead78b
  41c59e:	mov    ebp,0x54e05e4e
  41c5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a4:	ret    
  41c5a5:	ds dec ebx
  41c5a7:	or     DWORD PTR [ebx-0x4d47d552],edi
  41c5ad:	(bad)  
  41c5ae:	xor    BYTE PTR [edx+ecx*4],al
  41c5b1:	loop   0x41c5d9
  41c5b3:	test   eax,0x6fd948e7
  41c5b8:	cmp    DWORD PTR [ebp+0x6fca22d0],ecx
  41c5be:	(bad)  
  41c5bf:	sbb    bh,al
  41c5c1:	sub    edx,DWORD PTR [ebx]
  41c5c3:	and    BYTE PTR [ebp+0x27cf2ecc],bh
  41c5c9:	jle    0x41c56d
  41c5cb:	pop    esi
  41c5cc:	popa   
  41c5cd:	lea    esi,[ecx+0xad50225]
  41c5d3:	inc    edi
  41c5d4:	js     0x41c57d
  41c5d6:	pop    DWORD PTR [ecx]
  41c5d8:	xchg   ecx,eax
  41c5d9:	jno    0x41c60a
  41c5db:	mov    ch,0xbd
  41c5dd:	ss inc esi
  41c5df:	mov    bh,0xed
  41c5e1:	call   0x802c:0x85b6512b
  41c5e8:	fsubr  QWORD PTR [ecx-0x11]
  41c5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5ec:	in     eax,0xc9
  41c5ee:	test   eax,0x2f50273b
  41c5f3:	stc    
  41c5f4:	jne    0x41c61a
  41c5f6:	and    BYTE PTR [edi],0x22
  41c5f9:	stos   BYTE PTR es:[edi],al
  41c5fa:	sbb    edx,DWORD PTR [edx-0x1950ef80]
  41c600:	mov    ds:0x1673f4d5,al
  41c605:	add    BYTE PTR [ebx],0xef
  41c608:	xchg   al,al
  41c60a:	sbb    al,0xa6
  41c60c:	icebp  
  41c60d:	or     DWORD PTR [ecx+0x78027f75],0xbb8399a6
  41c617:	dec    ecx
  41c618:	mov    WORD PTR [edx+0x52740963],es
  41c61e:	das    
  41c61f:	xor    BYTE PTR [esi+0x333bdfe6],ah
  41c625:	inc    ebp
  41c626:	cmp    al,0xa6
  41c628:	mov    esp,edx
  41c62a:	pop    edx
  41c62b:	int    0x59
  41c62d:	call   0xf902:0x328ad8c6
  41c634:	nop
  41c635:	xor    bh,ah
  41c637:	aam    0xaf
  41c639:	(bad)  
  41c63a:	retf   0xada8
  41c63d:	pop    es
  41c63e:	jmp    0x2fb21d7f
  41c643:	dec    edi
  41c644:	mov    eax,0x430231a5
  41c649:	fist   DWORD PTR [edx+0xe]
  41c64c:	les    ecx,FWORD PTR [ebp-0x64daab4c]
  41c652:	ret    0x67fa
  41c655:	(bad)  
  41c656:	das    
  41c657:	outs   dx,BYTE PTR ds:[esi]
  41c658:	jb     0x41c679
  41c65a:	adc    ah,cl
  41c65c:	mov    bh,0x6b
  41c65e:	je     0x41c609
  41c660:	push   esi
  41c661:	(bad)  
  41c662:	(bad)  
  41c663:	jo     0x41c656
  41c665:	popf   
  41c666:	rcr    DWORD PTR [ebp-0x2c],cl
  41c669:	es jmp 0x95d2512e
  41c66f:	sti    
  41c670:	ret    
  41c671:	cmp    eax,0x8f38c71b
  41c676:	sbb    dh,BYTE PTR [edi+0x2c]
  41c679:	xor    dh,BYTE PTR [ecx]
  41c67b:	cmp    eax,0x52f9d2ea
  41c680:	mov    ah,BYTE PTR [edx]
  41c682:	pop    es
  41c683:	push   ss
  41c684:	rcr    dh,1
  41c686:	mov    ebx,DWORD PTR [ebx]
  41c688:	pop    ebx
  41c689:	lea    edi,[ecx]
  41c68b:	and    DWORD PTR [edi+edi*8-0x5c],esp
  41c68f:	push   esp
  41c690:	mov    bh,0xca
  41c692:	cs xchg ebx,eax
  41c694:	push   edx
  41c695:	sbb    DWORD PTR [esi],esp
  41c697:	addr16 cwde 
  41c699:	lock inc ecx
  41c69b:	mov    eax,0xa6010034
  41c6a0:	xor    eax,0x406a34fb
  41c6a5:	pop    eax
  41c6a6:	ficom  WORD PTR [eax]
  41c6a8:	mov    bl,al
  41c6aa:	cwde   
  41c6ab:	into   
  41c6ac:	mov    ecx,0x74013ee7
  41c6b1:	jnp    0x41c67d
  41c6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6b4:	or     eax,0x4234e6c5
  41c6b9:	mov    DWORD PTR [ebx+0x67],ecx
  41c6bc:	push   0x86db3027
  41c6c1:	jo     0x41c6ac
  41c6c3:	push   es
  41c6c4:	cmp    ecx,eax
  41c6c6:	bound  ecx,QWORD PTR [eax-0x2f71738f]
  41c6cc:	xor    eax,0xe2b8fdef
  41c6d1:	enter  0x8699,0xb0
  41c6d5:	(bad)  
  41c6d7:	mov    BYTE PTR [edx-0x2bf0cbff],cl
  41c6dd:	je     0x41c6ec
  41c6df:	fwait
  41c6e0:	popa   
  41c6e1:	mov    al,BYTE PTR [eax+0x5a]
  41c6e4:	in     eax,0xac
  41c6e6:	mov    ds:0xb1dca6e7,al
  41c6eb:	mov    bl,BYTE PTR [ebp+0x22232ef5]
  41c6f1:	jg     0x41c684
  41c6f3:	adc    BYTE PTR [ebx+0x53],0x3c
  41c6f7:	ret    
  41c6f8:	stos   BYTE PTR es:[edi],al
  41c6f9:	jecxz  0x41c715
  41c6fb:	test   eax,0xb8844f16
  41c700:	into   
  41c701:	int    0xd
  41c703:	(bad)  
  41c704:	jl     0x41c6fa
  41c706:	cs dec eax
  41c708:	add    DWORD PTR [esp+eax*8-0x1671471c],eax
  41c70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c710:	imul   edx,DWORD PTR [esi-0x1eb608e9],0x3
  41c717:	sub    ah,BYTE PTR [ebx+edi*2-0x1175349c]
  41c71e:	push   edx
  41c71f:	fld    st(0)
  41c721:	jmp    0x3b31:0x75ffa934
  41c728:	pop    edx
  41c729:	or     eax,0x89e93138
  41c72e:	das    
  41c72f:	mov    ds:0xce6f7bf7,al
  41c734:	imul   edi,DWORD PTR [ecx-0x5e72594e],0x69
  41c73b:	cli    
  41c73c:	cmp    al,BYTE PTR [ecx-0x356ac910]
  41c742:	jl     0x41c726
  41c744:	dec    esi
  41c745:	rol    eax,cl
  41c747:	xchg   BYTE PTR [ebp+0x63b550a3],dh
  41c74d:	(bad)  
  41c74e:	ret    0x84b7
  41c751:	jmp    0x41c6ec
  41c753:	jle    0x41c752
  41c755:	cli    
  41c756:	out    0x3f,eax
  41c758:	mov    dh,dh
  41c75a:	sar    BYTE PTR [eax-0x27b4d5b7],0xd3
  41c761:	mov    al,BYTE PTR [edx+edi*2-0x566a1b48]
  41c768:	ss int 0xab
  41c76b:	pop    edx
  41c76c:	pop    es
  41c76d:	inc    edx
  41c76e:	cs dec edi
  41c770:	daa    
  41c771:	retf   
  41c772:	dec    esp
  41c773:	sub    dl,bl
  41c775:	jne    0x41c749
  41c777:	loopne 0x41c7b0
  41c779:	lea    esp,[esi]
  41c77b:	mov    edx,0x56189126
  41c780:	sbb    edx,DWORD PTR [edi]
  41c782:	xor    BYTE PTR [edx],bh
  41c784:	lahf   
  41c785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c786:	jmp    0x41c735
  41c788:	mov    edi,es
  41c78a:	pop    esi
  41c78b:	div    ah
  41c78d:	mov    ebx,0xcdfa76b
  41c792:	adc    cl,BYTE PTR [edx-0x52]
  41c795:	cdq    
  41c796:	fist   DWORD PTR es:[ebx-0x53]
  41c79a:	aam    0x5d
  41c79c:	add    DWORD PTR [ebp-0x23100ace],esp
  41c7a2:	daa    
  41c7a3:	rcl    BYTE PTR [edi],0xdd
  41c7a6:	add    ebp,ecx
  41c7a8:	mov    ebx,0x44bca6f1
  41c7ad:	mov    BYTE PTR [edx-0xf658c9a],cl
  41c7b3:	and    eax,0xa35b84bb
  41c7b8:	mov    dl,BYTE PTR ds:0xda605c87
  41c7be:	inc    ebp
  41c7bf:	mov    edx,0x43488dd3
  41c7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c5:	pop    ss
  41c7c6:	xor    eax,0x4268d83b
  41c7cb:	ror    BYTE PTR [eax-0x33],1
  41c7ce:	cs aaa 
  41c7d0:	jl     0x41c7ed
  41c7d2:	mov    ds:0x7e8de630,eax
  41c7d7:	push   edx
  41c7d8:	sbb    DWORD PTR [eax-0x15012dbd],eax
  41c7de:	cmp    WORD PTR [edx+0xbf401c],cx
  41c7e5:	jae    0x41c801
  41c7e7:	sti    
  41c7e8:	fadd   QWORD PTR [ebp+0x1d]
  41c7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ec:	cmp    BYTE PTR [eax+0x3d],bl
  41c7ef:	jecxz  0x41c799
  41c7f1:	cmp    DWORD PTR [ebx+0x26],0x78ee77a9
  41c7f8:	mov    dh,BYTE PTR ds:0x605899a6
  41c7fe:	push   cs
  41c7ff:	fisub  WORD PTR ds:0xc0c7b78c
  41c805:	dec    ecx
  41c806:	aam    0xa9
  41c808:	and    al,0x7d
  41c80a:	fcmovnu st,st(7)
  41c80c:	mov    edi,ecx
  41c80e:	cld    
  41c80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c810:	ror    DWORD PTR [ecx],1
  41c812:	dec    edi
  41c813:	(bad)  
  41c814:	xor    edi,DWORD PTR [ecx+0x2525b340]
  41c81a:	and    ebp,ecx
  41c81c:	jl     0x41c80d
  41c81e:	repnz inc ebp
  41c820:	in     eax,dx
  41c821:	stc    
  41c822:	inc    esp
  41c823:	aad    0x8a
  41c825:	loope  0x41c7e1
  41c827:	jo     0x41c83e
  41c829:	sub    BYTE PTR ds:0x8e889fc1,bh
  41c82f:	arpl   bp,ax
  41c831:	add    BYTE PTR [edi-0x1a],ch
  41c834:	xchg   DWORD PTR [eax-0x33],edi
  41c837:	arpl   WORD PTR [edx-0x64696128],cx
  41c83d:	sub    DWORD PTR [ecx-0x15721511],0x1a
  41c844:	stos   BYTE PTR es:[edi],al
  41c845:	mov    cl,0x5
  41c847:	int3   
  41c848:	repnz adc al,bh
  41c84b:	fisttp WORD PTR [ebx+0x41f4ce9e]
  41c851:	sbb    al,0x9
  41c853:	sub    eax,0xa42acdea
  41c858:	cmp    ecx,DWORD PTR [edx+0x7f154695]
  41c85e:	iret   
  41c85f:	out    dx,al
  41c860:	dec    eax
  41c861:	(bad)  
  41c862:	xor    eax,0x8c08ba80
  41c867:	push   es
  41c868:	and    DWORD PTR [ebp-0x728ce6c1],eax
  41c86e:	adc    al,0x17
  41c870:	xchg   ebx,eax
  41c871:	or     ecx,DWORD PTR [eax]
  41c873:	test   al,0x8f
  41c875:	(bad)  cs:[ecx-0x1d759171]
  41c87c:	pop    esp
  41c87d:	push   ecx
  41c87e:	scas   eax,DWORD PTR es:[edi]
  41c87f:	jno    0x41c8af
  41c881:	out    0x27,eax
  41c883:	test   eax,0xc5eb57c7
  41c888:	mov    edi,0x5fbeafc6
  41c88d:	out    0x93,al
  41c88f:	pop    ebp
  41c890:	xchg   esi,eax
  41c891:	jae    0x41c8c1
  41c893:	pop    esi
  41c894:	gs aad 0x8
  41c897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c898:	jae    0x41c88d
  41c89a:	sbb    al,0x53
  41c89c:	out    0xc9,al
  41c89e:	pop    ds
  41c89f:	loopne 0x41c82a
  41c8a1:	cld    
  41c8a2:	push   eax
  41c8a3:	pop    esp
  41c8a4:	lock pop edx
  41c8a6:	mov    cl,0x1e
  41c8a8:	dec    ecx
  41c8a9:	inc    ebp
  41c8aa:	mov    ss,WORD PTR [eax-0x54513539]
  41c8b0:	rcr    cl,cl
  41c8b2:	or     DWORD PTR [ebx],esp
  41c8b4:	pop    ds
  41c8b5:	inc    ecx
  41c8b6:	das    
  41c8b7:	jle    0x41c862
  41c8b9:	add    dl,cl
  41c8bb:	mov    esi,eax
  41c8bd:	adc    ebx,0xffffff92
  41c8c0:	lsl    ebp,WORD PTR [edi+0x59179221]
  41c8c7:	addr16 xchg esp,eax
  41c8c9:	das    
  41c8ca:	das    
  41c8cb:	add    ah,BYTE PTR [esp+eax*8+0x484cd713]
  41c8d2:	sbb    DWORD PTR [eax-0x79f91d54],esp
  41c8d8:	or     al,0xdf
  41c8da:	dec    esp
  41c8db:	dec    esi
  41c8dc:	mov    dl,BYTE PTR [eax+0x226376f4]
  41c8e2:	ins    BYTE PTR es:[edi],dx
  41c8e3:	and    BYTE PTR [eax+0x192a738d],dh
  41c8e9:	cwde   
  41c8ea:	or     al,0x69
  41c8ec:	mov    ds:0x323a2fb5,eax
  41c8f1:	add    eax,0x7bd2b74
  41c8f6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41c8f8:	mov    ss,ecx
  41c8fa:	mov    cl,0x58
  41c8fc:	test   eax,0x8ac5bc50
  41c901:	out    0x29,al
  41c903:	push   ecx
  41c904:	out    0xd8,al
  41c906:	or     DWORD PTR [esi],edi
  41c908:	push   es
  41c909:	mov    gs,WORD PTR [ebx-0xd0f986b]
  41c90f:	(bad)  
  41c910:	sbb    DWORD PTR [ebp+0x3896e42f],eax
  41c916:	fwait
  41c917:	in     eax,dx
  41c918:	test   DWORD PTR [ebp+0x7cdda62c],edi
  41c91e:	xchg   esi,eax
  41c91f:	leave  
  41c920:	jl     0x41c8fa
  41c922:	pop    ebx
  41c923:	xor    eax,edx
  41c925:	das    
  41c926:	dec    esp
  41c927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c928:	adc    ebx,eax
  41c92a:	cld    
  41c92b:	push   eax
  41c92c:	jno    0x41c94b
  41c92e:	hlt    
  41c92f:	popf   
  41c930:	dec    ecx
  41c931:	lea    ebx,[edi-0x42]
  41c934:	push   esp
  41c935:	aaa    
  41c936:	sub    DWORD PTR [esi-0x33],edi
  41c939:	or     BYTE PTR [edx],dh
  41c93b:	sbb    ebp,0xffffffa5
  41c93e:	out    0x8d,eax
  41c940:	out    dx,al
  41c941:	sub    eax,0xc6cadabd
  41c946:	mov    ebx,0xe38f09e6
  41c94b:	add    DWORD PTR [edi],ecx
  41c94d:	inc    esi
  41c94e:	push   edi
  41c94f:	and    cl,BYTE PTR [ecx+0xef2bb1]
  41c955:	mov    eax,ds:0x8d446890
  41c95a:	jecxz  0x41c912
  41c95c:	add    esi,DWORD PTR [ebx-0x9]
  41c95f:	test   DWORD PTR [edi],eax
  41c961:	cmp    eax,0x7c022e2f
  41c966:	dec    ebp
  41c967:	shl    bl,1
  41c969:	repnz push 0x82a45a6
  41c96f:	(bad)  [edi]
  41c971:	xor    ebx,DWORD PTR [esp+ecx*1]
  41c974:	push   es
  41c975:	cs das 
  41c977:	mov    bh,0x90
  41c979:	aad    0xe9
  41c97b:	(bad)  
  41c97c:	xor    BYTE PTR [eax+0x595b8082],ch
  41c982:	rcr    DWORD PTR [edi+0x79b65662],1
  41c988:	dec    edx
  41c989:	das    
  41c98a:	loopne 0x41c928
  41c98c:	adc    DWORD PTR [ecx-0x16c20d1],ecx
  41c992:	daa    
  41c993:	mov    ?,WORD PTR [ebx-0x7a4d9c55]
  41c999:	cmp    BYTE PTR ds:0xf162dda6,dh
  41c99f:	repz cwde 
  41c9a1:	sbb    ebp,DWORD PTR [edi]
  41c9a3:	cmp    esi,DWORD PTR [esi+0x48]
  41c9a6:	out    dx,al
  41c9a7:	in     al,0x86
  41c9a9:	sar    DWORD PTR [eax+0x5a6446a6],1
  41c9af:	mov    dl,0xa4
  41c9b1:	ja     0x41c946
  41c9b3:	fbld   TBYTE PTR [edi-0x75ccb578]
  41c9b9:	add    esp,ebp
  41c9bb:	scas   al,BYTE PTR es:[edi]
  41c9bc:	stos   DWORD PTR es:[edi],eax
  41c9bd:	mov    edi,DWORD PTR [esi-0x4f]
  41c9c0:	outs   dx,DWORD PTR ds:[esi]
  41c9c1:	inc    edx
  41c9c2:	shl    DWORD PTR [esi+0x740b5bcd],0x9e
  41c9c9:	dec    ecx
  41c9ca:	sub    al,BYTE PTR [ebx+0x6ddb8dbb]
  41c9d0:	xor    al,0x59
  41c9d2:	ret    0x3223
  41c9d5:	ret    
  41c9d6:	icebp  
  41c9d7:	cmp    BYTE PTR [edx],cl
  41c9d9:	push   ebx
  41c9da:	pop    eax
  41c9db:	cwde   
  41c9dc:	fmul   st(3),st
  41c9de:	test   ebp,eax
  41c9e0:	mov    DWORD PTR [esi-0x7c5cb15c],ecx
  41c9e6:	jbe    0x41c9ee
  41c9e8:	retf   
  41c9e9:	sub    DWORD PTR [ebx+0x51],esp
  41c9ec:	cmp    DWORD PTR [ebp-0x1e12521c],ecx
  41c9f2:	jmp    0x41c989
  41c9f4:	sub    DWORD PTR ds:[esi],0xfacb292d
  41c9fb:	sti    
  41c9fc:	or     DWORD PTR [edx],ecx
  41c9fe:	aaa    
  41c9ff:	idiv   BYTE PTR [ebx-0x80]
  41ca02:	rol    bh,cl
  41ca04:	lds    ecx,FWORD PTR [ebp+0x7b8f22d]
  41ca0a:	xchg   BYTE PTR [ebx+0x1de04647],ch
  41ca10:	rol    ah,cl
  41ca12:	dec    esi
  41ca13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca14:	push   esi
  41ca15:	and    DWORD PTR [edi],ecx
  41ca17:	dec    edx
  41ca18:	fbld   TBYTE PTR [eax+ebx*4]
  41ca1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca1c:	ficomp WORD PTR [ecx]
  41ca1e:	loopne 0x41ca3f
  41ca20:	jecxz  0x41c9ab
  41ca22:	test   edi,ebp
  41ca24:	(bad)  
  41ca27:	loop   0x41ca91
  41ca29:	mov    bl,0xa4
  41ca2c:	in     al,dx
  41ca2d:	fnsave [ebx-0xd92881f]
  41ca33:	cwde   
  41ca34:	pushf  
  41ca35:	lea    edi,[eax]
  41ca37:	popf   
  41ca38:	out    dx,al
  41ca39:	or     al,0x71
  41ca3b:	call   FWORD PTR [ebx+ebp*2+0x2f]
  41ca3f:	stos   BYTE PTR es:[edi],al
  41ca40:	sub    al,0x20
  41ca43:	sar    cl,cl
  41ca45:	pop    edi
  41ca46:	enter  0x7792,0x5b
  41ca4a:	das    
  41ca4b:	icebp  
  41ca4c:	xor    DWORD PTR [ebx+0x64ba3822],ebp
  41ca52:	das    
  41ca53:	sub    DWORD PTR [eax],eax
  41ca55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca56:	inc    esp
  41ca57:	adc    ebp,edx
  41ca59:	pop    ecx
  41ca5a:	popa   
  41ca5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5c:	sbb    edx,DWORD PTR [eax+0x25]
  41ca5f:	shl    BYTE PTR [edi-0x5c74708a],cl
  41ca65:	cmp    DWORD PTR [edi],ebp
  41ca67:	call   0x11694e79
  41ca6c:	fld    TBYTE PTR [edx-0x48]
  41ca6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca70:	mov    ebp,0xfdaa7d33
  41ca75:	or     eax,0x709462ab
  41ca7a:	out    dx,eax
  41ca7b:	hlt    
  41ca7c:	test   DWORD PTR ds:0x88115e02,ebp
  41ca82:	mov    ?,WORD PTR [ecx-0x5a15cf43]
  41ca88:	aam    0xf7
  41ca8a:	pop    ebp
  41ca8b:	mov    bh,0x98
  41ca8d:	xor    eax,0x610767ea
  41ca92:	das    
  41ca93:	out    dx,eax
  41ca94:	mov    dl,0x8
  41ca96:	sub    eax,0x7fe326dd
  41ca9b:	ss cdq 
  41ca9d:	lea    ecx,[eax+ebp*8]
  41caa0:	dec    edi
  41caa1:	iret   
  41caa2:	mov    fs,WORD PTR [edx-0x28d0ce59]
  41caa8:	or     eax,0x6c4254d8
  41caad:	repnz cli 
  41caaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab0:	repnz rcl DWORD PTR [ecx-0xd],1
  41cab4:	mov    ds:0xa7a0aab6,eax
  41cab9:	mov    edx,0xcf49828d
  41cabe:	fnsave [ebx]
  41cac0:	stos   BYTE PTR es:[edi],al
  41cac1:	or     eax,0x8dc68efb
  41cac6:	aaa    
  41cac7:	xchg   edi,eax
  41cac8:	ss out dx,eax
  41caca:	imul   edi,DWORD PTR [esi+0x412f4a38],0x5a
  41cad1:	cmp    dh,BYTE PTR [edi+0x2f]
  41cad4:	(bad)  
  41cad5:	pop    esp
  41cad6:	jmp    0x41ca87
  41cad8:	jae    0x41cab2
  41cada:	push   edx
  41cadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cadc:	in     al,0xf2
  41cade:	adc    al,0x97
  41cae0:	cmp    al,0xd2
  41cae2:	bound  ebp,QWORD PTR cs:[ebx]
  41cae5:	add    BYTE PTR [edx+esi*4-0x3],al
  41cae9:	push   ebp
  41caea:	sbb    ah,BYTE PTR [edx+eiz*8-0x60cb6ca0]
  41caf1:	and    ch,bh
  41caf3:	add    eax,0x87386f3b
  41caf8:	lds    esp,FWORD PTR [eax]
  41cafa:	jns    0x41caa2
  41cafc:	(bad)  
  41cafd:	gs out dx,eax
  41caff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb00:	push   ebx
  41cb01:	mov    ?,WORD PTR [ecx]
  41cb03:	cdq    
  41cb04:	ins    DWORD PTR es:[edi],dx
  41cb05:	inc    ebp
  41cb06:	push   ebx
  41cb07:	test   eax,0xf0aa265a
  41cb0c:	jl     0x41cad2
  41cb0e:	push   ecx
  41cb0f:	popa   
  41cb10:	mov    bh,BYTE PTR [esi+0x1c]
  41cb13:	xor    edx,DWORD PTR [edx-0x19]
  41cb16:	hlt    
  41cb17:	jbe    0x41caf6
  41cb19:	lea    esi,[eax]
  41cb1b:	icebp  
  41cb1c:	xor    dl,BYTE PTR [esi-0x4f12a111]
  41cb22:	xor    BYTE PTR [edx-0x19],al
  41cb25:	shl    DWORD PTR [eax+0x5f8f0145],cl
  41cb2b:	int    0x4b
  41cb2d:	lea    ecx,ds:0x2e64d28c
  41cb33:	pop    ebp
  41cb34:	(bad)
  41cb37:	ss in  eax,0xdf
  41cb3a:	stos   BYTE PTR es:[edi],al
  41cb3b:	call   0xa6e5edfa
  41cb40:	push   ebp
  41cb41:	fiadd  DWORD PTR [edi-0x465370c6]
  41cb47:	jp     0x41cad3
  41cb49:	sub    eax,0x5758a18c
  41cb4e:	sahf   
  41cb4f:	dec    ebx
  41cb50:	dec    edx
  41cb51:	ret    0x3318
  41cb54:	mov    ah,BYTE PTR ds:0x95ecb539
  41cb5a:	sbb    dl,dh
  41cb5c:	mov    bl,BYTE PTR [ecx+edx*2-0x51e6a473]
  41cb63:	add    DWORD PTR [edx-0x73],ebx
  41cb66:	jnp    0x41cb4b
  41cb68:	dec    ecx
  41cb69:	sahf   
  41cb6a:	retf   
  41cb6b:	xor    eax,0x972f103d
  41cb70:	jmp    0x6667:0x979a586f
  41cb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb78:	and    eax,0x83dd5e89
  41cb7d:	adc    al,0xfb
  41cb7f:	fwait
  41cb80:	sbb    dl,0x2e
  41cb83:	jne    0x41cb45
  41cb85:	jbe    0x41cb8f
  41cb87:	push   ds
  41cb88:	iret   
  41cb89:	cmp    al,0x84
  41cb8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb8c:	stc    
  41cb8d:	test   DWORD PTR [edx+0x52cf77d2],eax
  41cb93:	outs   dx,BYTE PTR ds:[esi]
  41cb94:	mov    dh,BYTE PTR [eax]
  41cb96:	retf   0x8857
  41cb99:	mov    ebx,0x8d5f954a
  41cb9e:	and    eax,esi
  41cba0:	dec    esi
  41cba1:	push   eax
  41cba2:	sbb    al,0x73
  41cba4:	int    0xa5
  41cba6:	das    
  41cba7:	mov    bl,0xf5
  41cba9:	sti    
  41cbaa:	call   0x6df2726c
  41cbaf:	test   eax,0x40753a42
  41cbb4:	push   eax
  41cbb5:	ins    DWORD PTR es:[edi],dx
  41cbb6:	hlt    
  41cbb7:	test   BYTE PTR ds:0x628f359d,bl
  41cbbd:	xchg   esi,eax
  41cbbe:	mov    ah,BYTE PTR [esi]
  41cbc0:	in     eax,dx
  41cbc1:	fcomp  DWORD PTR [esi-0xf]
  41cbc4:	outs   dx,DWORD PTR ds:[esi]
  41cbc5:	test   BYTE PTR [ecx],bl
  41cbc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbc8:	repz rol DWORD PTR [ebx],0x5b
  41cbcc:	fsubrp st(7),st
  41cbce:	sbb    ebx,ebx
  41cbd0:	mov    al,BYTE PTR [ecx+0x637548b7]
  41cbd6:	sub    bl,BYTE PTR [esi-0x2f4772b5]
  41cbdc:	add    BYTE PTR [ebx],dh
  41cbde:	cwde   
  41cbdf:	mov    ecx,0x392f6273
  41cbe4:	js     0x41cb6c
  41cbe6:	or     eax,0x85478770
  41cbeb:	test   eax,0x92420f5f
  41cbf0:	fidivr WORD PTR [ebp-0x1b]
  41cbf3:	cwde   
  41cbf4:	bound  ecx,QWORD PTR [edi+ebp*1-0x180740e6]
  41cbfb:	ss icebp 
  41cbfd:	shl    BYTE PTR [ecx-0x5a],1
  41cc00:	(bad)  
  41cc01:	mov    ds:0xadf970b5,al
  41cc06:	push   0x60f18ab9
  41cc0b:	not    DWORD PTR [esi+ebx*1-0x3daf29c6]
  41cc12:	dec    eax
  41cc13:	inc    eax
  41cc14:	mov    bh,BYTE PTR [edi]
  41cc16:	lahf   
  41cc17:	aaa    
  41cc18:	mov    bh,0x14
  41cc1a:	xchg   cl,dl
  41cc1c:	lea    ecx,ds:0x99dcce46
  41cc22:	scas   eax,DWORD PTR es:[edi]
  41cc23:	push   cs
  41cc24:	aaa    
  41cc25:	xlat   BYTE PTR ds:[ebx]
  41cc26:	or     al,0xa6
  41cc28:	adc    DWORD PTR [ebp+0x4cdb3f39],0xffffffbf
  41cc2f:	ret    0x7b07
  41cc32:	das    
  41cc33:	push   edi
  41cc34:	ss jb  0x41cbb7
  41cc37:	stos   DWORD PTR es:[edi],eax
  41cc38:	in     al,dx
  41cc39:	aas    
  41cc3a:	and    al,0xa6
  41cc3c:	mov    eax,ds:0xffebff01
  41cc41:	push   0xf58b5f9e
  41cc46:	cld    
  41cc47:	or     eax,esi
  41cc49:	jp     0x41cbd9
  41cc4b:	enter  0xf6fb,0xee
  41cc4f:	and    ebp,DWORD PTR [ecx]
  41cc51:	aam    0xd7
  41cc53:	mov    DWORD PTR [ecx],esi
  41cc55:	ins    BYTE PTR es:[edi],dx
  41cc56:	arpl   WORD PTR [esi+0x4c20d271],sp
  41cc5c:	xchg   edi,eax
  41cc5d:	repz xor DWORD PTR [edi],edx
  41cc60:	mov    ah,0xc
  41cc62:	aam    0x58
  41cc64:	les    edx,FWORD PTR ds:0x8dc0c882
  41cc6a:	inc    ebx
  41cc6b:	push   ds
  41cc6c:	adc    al,0xc1
  41cc6e:	out    dx,eax
  41cc6f:	or     BYTE PTR [ebp+0x6c],dh
  41cc72:	das    
  41cc73:	mov    edx,DWORD PTR [edi+0x3cfb8fcf]
  41cc79:	repz mov edx,DWORD PTR [ebx+0x3a]
  41cc7d:	mov    DWORD PTR [ebx-0x30],edi
  41cc80:	xor    cl,0x8c
  41cc83:	es inc ebp
  41cc85:	ficom  WORD PTR [eax-0x4013758b]
  41cc8b:	mov    edx,DWORD PTR [esi+0x6e]
  41cc8e:	pop    ebp
  41cc8f:	test   al,0xbf
  41cc91:	lea    edi,[esi+0x27]
  41cc94:	sahf   
  41cc95:	add    BYTE PTR [ebp+0x54],0xd3
  41cc99:	add    eax,0x8dc26423
  41cc9e:	cmp    dl,bl
  41cca0:	push   eax
  41cca1:	fwait
  41cca2:	xor    BYTE PTR [eax],ah
  41cca4:	lea    ebp,es:[esi+ebx*1]
  41cca8:	dec    eax
  41ccaa:	sti    
  41ccab:	cld    
  41ccac:	fcomp  QWORD PTR [esi]
  41ccae:	das    
  41ccaf:	fsub   st,st(0)
  41ccb1:	mov    eax,ds:0x70661600
  41ccb6:	mov    dh,0xd6
  41ccb8:	add    DWORD PTR [ecx-0x32f64659],esp
  41ccbe:	adc    DWORD PTR [eax+0xf],edx
  41ccc1:	inc    ebx
  41ccc2:	push   esp
  41ccc3:	test   BYTE PTR [edx-0x5d2dfac8],cl
  41ccc9:	xchg   edx,eax
  41ccca:	jp     0x41cd00
  41cccc:	cmp    BYTE PTR ds:0x66e7a97a,0xee
  41ccd3:	cmp    eax,0x28aad68
  41ccd8:	jo     0x41cc72
  41ccda:	das    
  41ccdb:	test   al,0x44
  41ccdd:	pop    ebp
  41ccde:	push   edi
  41ccdf:	and    al,0x2e
  41cce1:	or     al,0xab
  41cce3:	mov    BYTE PTR [ecx-0x5c],cl
  41cce6:	jg     0x41cc85
  41cce8:	adc    BYTE PTR [esi],bh
  41ccea:	das    
  41cceb:	or     eax,0xd4bac1b9
  41ccf0:	mov    dh,BYTE PTR ds:0x949fecef
  41ccf6:	scas   eax,DWORD PTR es:[edi]
  41ccf7:	push   ebp
  41ccf8:	(bad)  [ebx-0x2a19135]
  41ccfe:	test   BYTE PTR [edx],cl
  41cd00:	loopne 0x41cd1e
  41cd02:	das    
  41cd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd04:	mov    ch,0xe0
  41cd06:	pop    ecx
  41cd07:	in     eax,dx
  41cd08:	xor    edx,DWORD PTR [eax+0x480a6a8]
  41cd0e:	sub    ah,bh
  41cd10:	ja     0x41cd53
  41cd12:	inc    esp
  41cd13:	inc    ebp
  41cd14:	mov    ecx,DWORD PTR [edi-0x1c]
  41cd17:	loope  0x41cd54
  41cd19:	pop    ebp
  41cd1a:	cmp    al,0x6e
  41cd1c:	pop    edx
  41cd1d:	ret    0x585b
  41cd20:	inc    ebp
  41cd21:	mov    ss,ebp
  41cd23:	mov    ebx,0xe75e36a6
  41cd28:	or     ah,BYTE PTR [esi-0x686ae4ee]
  41cd2e:	mov    edi,DWORD PTR [ebx-0x3d]
  41cd31:	dec    ebp
  41cd32:	jae    0x41ccd5
  41cd34:	add    esi,DWORD PTR [ecx-0x1015595f]
  41cd3a:	(bad)  
  41cd3b:	scas   al,BYTE PTR es:[edi]
  41cd3c:	sbb    al,BYTE PTR [eax-0x375c80e]
  41cd42:	shl    DWORD PTR [esi+0x7a7ec320],1
  41cd48:	(bad)  
  41cd49:	lea    ebp,[ecx+0x7b]
  41cd4c:	(bad)  
  41cd4e:	retf   0xf0a1
  41cd51:	fst    DWORD PTR [edx+0x24]
  41cd54:	mov    ebx,esi
  41cd56:	daa    
  41cd57:	mov    ds:0xed836049,eax
  41cd5c:	jb     0x41ccf5
  41cd5e:	mov    ebp,0x1bf74ea6
  41cd63:	xchg   esi,eax
  41cd64:	call   0xe995:0x95f3f24b
  41cd6b:	dec    ebp
  41cd6c:	add    al,0xcb
  41cd6e:	in     eax,0x90
  41cd70:	pop    edx
  41cd71:	add    ch,BYTE PTR [esi+esi*1-0x51]
  41cd75:	lea    edi,[edx-0x7dd12ac9]
  41cd7b:	retf   0x6c48
  41cd7e:	das    
  41cd7f:	mov    eax,ds:0x67151305
  41cd84:	bound  esi,QWORD PTR [ecx+ecx*1]
  41cd87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd88:	cli    
  41cd89:	mov    dh,0x5a
  41cd8b:	xchg   BYTE PTR [ebp-0x7418b7bf],ch
  41cd91:	loopne 0x41cdba
  41cd93:	cdq    
  41cd94:	fs call 0x3db6f47a
  41cd9a:	mov    cl,0xb1
  41cd9c:	stos   BYTE PTR es:[edi],al
  41cd9d:	xchg   edx,eax
  41cd9e:	mov    gs,WORD PTR [esi*4-0x6035f20e]
  41cda5:	fstp   st(6)
  41cda7:	pop    ecx
  41cda8:	out    0x3,eax
  41cdaa:	das    
  41cdab:	or     eax,0x51ba2c68
  41cdb0:	xor    BYTE PTR [ecx+ebx*1-0x56d2bc5a],0x36
  41cdb8:	sbb    al,0x1a
  41cdba:	cmc    
  41cdbb:	or     BYTE PTR [edx+0x6d45e4e2],cl
  41cdc1:	xchg   esi,eax
  41cdc2:	xor    ebx,ebx
  41cdc4:	adc    al,0x8d
  41cdc6:	jns    0x41ce05
  41cdc8:	mov    ds:0x20e5b377,eax
  41cdcd:	add    ebp,DWORD PTR [edi]
  41cdcf:	xor    ah,BYTE PTR [ecx]
  41cdd1:	sub    ebp,DWORD PTR ds:0x6c6b5b6d
  41cdd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdd8:	adc    ch,BYTE PTR [esi+0x32]
  41cddb:	(bad)  
  41cddc:	sti    
  41cddd:	sbb    bl,dh
  41cddf:	test   DWORD PTR [edx-0x5f684e1b],0x979254cf
  41cde9:	mov    ds:0xcae876fc,eax
  41cdee:	lods   al,BYTE PTR ds:[esi]
  41cdef:	push   0x39
  41cdf1:	inc    ebx
  41cdf2:	dec    edi
  41cdf3:	les    esp,FWORD PTR [eax+0xe]
  41cdf6:	jbe    0x41ce0a
  41cdf8:	mov    ah,cl
  41cdfa:	ins    BYTE PTR es:[edi],dx
  41cdfb:	dec    ecx
  41cdfc:	in     eax,0x26
  41cdfe:	leave  
  41cdff:	out    0x50,al
  41ce01:	mov    esp,es
  41ce03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce04:	ret    
  41ce05:	inc    ebp
  41ce06:	dec    ebx
  41ce07:	aaa    
  41ce08:	mov    ds:0x8a723b02,al
  41ce0d:	stc    
  41ce0e:	mov    ch,0xa0
  41ce10:	cmp    BYTE PTR [eax-0x72178c84],0xe3
  41ce17:	jne    0x41ce65
  41ce19:	add    ebp,eax
  41ce1b:	outs   dx,BYTE PTR ds:[esi]
  41ce1c:	inc    ebp
  41ce1d:	dec    ecx
  41ce1e:	sub    eax,esi
  41ce20:	(bad)  
  41ce21:	jmp    0x41ce5c
  41ce23:	mov    eax,0xbb956b0a
  41ce28:	or     DWORD PTR [edx+eax*2-0x4713586f],ecx
  41ce2f:	jae    0x41ce26
  41ce31:	add    DWORD PTR [edi+0x8],ecx
  41ce34:	xchg   esp,eax
  41ce35:	int    0x5c
  41ce37:	scas   eax,DWORD PTR es:[edi]
  41ce38:	jno    0x41ce07
  41ce3a:	in     al,dx
  41ce3b:	push   ebx
  41ce3c:	cld    
  41ce3d:	mov    ecx,0x553b2a2
  41ce42:	xor    ah,BYTE PTR [esi]
  41ce44:	jecxz  0x41cde9
  41ce46:	jmp    0x41cdf5
  41ce48:	icebp  
  41ce49:	call   0xc069:0x75b1832e
  41ce50:	retf   0xc16c
  41ce53:	ret    0x8d47
  41ce56:	mov    esi,DWORD PTR [eax]
  41ce58:	scas   al,BYTE PTR es:[edi]
  41ce59:	shl    DWORD PTR [ecx],cl
  41ce5b:	into   
  41ce5c:	jmp    0xd60904ff
  41ce61:	(bad)  
  41ce62:	call   0x19040e6c
  41ce67:	fimul  WORD PTR gs:[ebp+0x6270e4fc]
  41ce6e:	je     0x41ce9f
  41ce70:	loopne 0x41ce9a
  41ce72:	xor    ecx,DWORD PTR [eax-0x6940856a]
  41ce78:	mov    ds:0x5cc6738e,eax
  41ce7d:	xor    eax,0x3e33c705
  41ce82:	mov    es,WORD PTR [esi-0xaca36af]
  41ce88:	stc    
  41ce89:	outs   dx,DWORD PTR ds:[esi]
  41ce8a:	into   
  41ce8b:	add    eax,0x26dd41d9
  41ce90:	sti    
  41ce91:	jge    0x41ce47
  41ce93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce94:	sahf   
  41ce95:	icebp  
  41ce96:	mov    dh,0x94
  41ce98:	loope  0x41cead
  41ce9a:	scas   eax,DWORD PTR es:[edi]
  41ce9b:	nop
  41ce9c:	mov    bh,BYTE PTR [edx+0x3]
  41ce9f:	retf   
  41cea0:	inc    ecx
  41cea1:	jge    0x41ce36
  41cea3:	addr16 inc esi
  41cea5:	(bad)  
  41cea6:	fadd   DWORD PTR [esi-0x2c]
  41cea9:	mov    al,ds:0xb6c12df4
  41ceae:	cmp    bl,BYTE PTR ss:[edi-0x8]
  41ceb2:	jmp    0xeeef49b6
  41ceb7:	push   cs
  41ceb8:	xor    BYTE PTR [eax+0x37],al
  41cebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebc:	fimul  WORD PTR [esi+eiz*8+0x4f07d74d]
  41cec3:	rcr    DWORD PTR [edx+eiz*8],cl
  41cec6:	cs pop eax
  41cec8:	pop    edx
  41cec9:	retf   
  41ceca:	mov    esi,0x2aa4f2fd
  41cecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced0:	push   ecx
  41ced1:	inc    esp
  41ced2:	in     al,dx
  41ced3:	push   esp
  41ced4:	rcr    dl,cl
  41ced6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced7:	add    al,ch
  41ced9:	xor    eax,0x326a422
  41cede:	loopne 0x41cf35
  41cee0:	sbb    al,0x4d
  41cee2:	mov    esi,0x1c8fa86e
  41cee7:	jnp    0x41ce76
  41cee9:	pop    ebp
  41ceea:	rcl    DWORD PTR [edx+0x69],cl
  41ceed:	xor    BYTE PTR [edx-0x35],0xa
  41cef1:	loope  0x41ceb8
  41cef3:	arpl   WORD PTR [edx+0x6ecf4fb5],cx
  41cef9:	popf   
  41cefa:	shl    BYTE PTR [eax+0x671e8d9b],1
  41cf00:	jle    0x41cf5d
  41cf02:	dec    ecx
  41cf03:	push   edx
  41cf04:	inc    ebp
  41cf05:	xchg   edi,eax
  41cf06:	das    
  41cf07:	mov    esi,cs
  41cf09:	fadd   st(3),st
  41cf0b:	and    al,0xfa
  41cf0d:	sub    DWORD PTR [ebx],edx
  41cf0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf10:	and    ch,dl
  41cf12:	push   0x82cd28ea
  41cf17:	jmp    0xe22f:0x2ecc3a
  41cf1e:	div    DWORD PTR [edi]
  41cf20:	xchg   DWORD PTR [ebx-0x78],eax
  41cf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf24:	imul   esi,DWORD PTR [eax-0x3df40129],0x38
  41cf2b:	retf   0xaa8a
  41cf2e:	pushf  
  41cf2f:	hlt    
  41cf30:	icebp  
  41cf31:	sbb    BYTE PTR [ebx+0x628d1793],cl
  41cf37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf38:	push   0xffffffbd
  41cf3a:	xchg   esi,eax
  41cf3b:	shl    DWORD PTR [edi+0xdb630ba],1
  41cf41:	sub    dh,BYTE PTR [esp+edx*2]
  41cf44:	mov    esi,0x52456ea
  41cf49:	mov    cs,edx
  41cf4b:	cmp    BYTE PTR [edx-0x4fcd6f51],dl
  41cf51:	aam    0x31
  41cf53:	pop    edi
  41cf54:	cmp    al,0x63
  41cf56:	lods   eax,DWORD PTR ds:[esi]
  41cf57:	dec    esi
  41cf58:	repnz in eax,0xb1
  41cf5b:	sub    DWORD PTR [ecx-0x134d4173],esp
  41cf61:	in     al,0x1b
  41cf63:	in     eax,0x61
  41cf65:	aam    0xbe
  41cf67:	jns    0x41cfd5
  41cf69:	shr    BYTE PTR [esi],1
  41cf6b:	data16 outs dx,BYTE PTR ds:[esi]
  41cf6d:	(bad)  
  41cf6e:	jnp    0x41cfaa
  41cf70:	sub    al,0xbe
  41cf72:	adc    al,0xa6
  41cf74:	push   ebp
  41cf75:	mov    ds:0xd5da180d,al
  41cf7a:	dec    edi
  41cf7b:	lds    ecx,FWORD PTR [ebx+0x3b7e1cad]
  41cf81:	inc    edx
  41cf82:	lods   al,BYTE PTR ds:[esi]
  41cf83:	jp     0x41cf07
  41cf85:	or     al,0x4e
  41cf87:	(bad)  
  41cf88:	std    
  41cf89:	xor    ebp,DWORD PTR [esi]
  41cf8b:	xor    DWORD PTR [esi],ecx
  41cf8d:	or     eax,0xbeee966a
  41cf92:	pop    edx
  41cf93:	dec    ebp
  41cf94:	xchg   ebp,eax
  41cf95:	mov    ah,dh
  41cf97:	cmp    al,0x97
  41cf99:	int3   
  41cf9a:	sub    eax,0xcf628e55
  41cf9f:	ds stos DWORD PTR es:[edi],eax
  41cfa1:	lea    ebx,[ebx-0x71db0b7d]
  41cfa7:	jnp    0x41d025
  41cfa9:	in     eax,0x31
  41cfab:	(bad)  
  41cfac:	(bad)  
  41cfad:	mov    bh,0xd3
  41cfaf:	sbb    BYTE PTR [ebx-0x58dfd3fb],bh
  41cfb5:	repz and esp,DWORD PTR [ebp+0x29026366]
  41cfbc:	in     al,dx
  41cfbd:	xchg   BYTE PTR [edi-0x14],ah
  41cfc0:	stos   BYTE PTR es:[edi],al
  41cfc1:	dec    esi
  41cfc2:	das    
  41cfc3:	xchg   DWORD PTR [ecx],ebp
  41cfc5:	mov    dl,BYTE PTR [edi-0x76a013b]
  41cfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfcc:	js     0x41d03e
  41cfce:	dec    edi
  41cfcf:	push   ss
  41cfd0:	dec    edi
  41cfd1:	sar    BYTE PTR [edx+esi*4-0x56fa9176],0xf6
  41cfd9:	(bad)  
  41cfda:	sub    ch,BYTE PTR [ebp+0x1b]
  41cfdd:	lea    edi,ds:0xfcfcd3fc
  41cfe3:	lahf   
  41cfe4:	cwde   
  41cfe5:	xchg   esi,eax
  41cfe6:	das    
  41cfe7:	dec    esp
  41cfe8:	int    0x6f
  41cfea:	int3   
  41cfeb:	mov    edx,0xa5f6d261
  41cff0:	mov    ah,0x78
  41cff2:	adc    al,0x72
  41cff4:	push   edx
  41cff5:	and    eax,0x5d78e961
  41cffa:	das    
  41cffb:	bound  edx,QWORD PTR [edi+0x35]
  41cffe:	mov    ds:0xe79a51b,eax
  41d003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d004:	jb     0x41cfe9
  41d006:	shl    DWORD PTR [eax*2-0x75b15f8c],0x76
  41d00e:	push   eax
  41d00f:	jne    0x41d055
  41d011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d012:	push   esp
  41d013:	in     eax,0xe4
  41d015:	ret    
  41d016:	dec    esp
  41d017:	in     al,dx
  41d018:	or     ah,BYTE PTR [edx]
  41d01a:	and    al,0x35
  41d01c:	scas   al,BYTE PTR es:[edi]
  41d01d:	les    ebp,FWORD PTR [esi+0x4c]
  41d020:	mov    bl,BYTE PTR [eax-0x646b53c9]
  41d026:	rol    BYTE PTR [edi],1
  41d028:	add    dl,BYTE PTR [edi+edx*2+0x43285e13]
  41d02f:	out    0xe1,al
  41d031:	jmp    0x142f:0xb9e9f298
  41d038:	(bad)  
  41d039:	cmp    edx,esp
  41d03b:	cmc    
  41d03c:	in     al,dx
  41d03d:	jb     0x41d08f
  41d03f:	fsubr  DWORD PTR [eax+0x74caf68d]
  41d045:	jl     0x41d0b2
  41d047:	retf   0x34cc
  41d04a:	das    
  41d04b:	dec    edi
  41d04c:	lods   al,BYTE PTR ds:[esi]
  41d04d:	mov    WORD PTR [ecx-0xd],ds
  41d050:	sbb    DWORD PTR [edx-0x66],0xffffffa6
  41d054:	jbe    0x41d06c
  41d056:	jb     0x41d05f
  41d058:	imul   esi,DWORD PTR [esi-0x32],0x6a
  41d05c:	xchg   ecx,eax
  41d05d:	mov    eax,0x8d875fe0
  41d062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d063:	mov    dh,0x71
  41d065:	retf   
  41d066:	ret    
  41d067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d068:	and    edi,DWORD PTR ds:0xfc49a444
  41d06e:	jns    0x41d03e
  41d070:	mov    bl,al
  41d072:	or     al,0x1a
  41d074:	sub    eax,0x5b7291de
  41d079:	shl    BYTE PTR [ecx-0x43],0x8a
  41d07d:	jbe    0x41d038
  41d07f:	inc    eax
  41d080:	push   es
  41d081:	lahf   
  41d082:	mov    bh,0xdc
  41d084:	lds    ebx,FWORD PTR [esi]
  41d086:	mov    bl,0xa1
  41d088:	test   DWORD PTR [edi-0x41f054d5],eax
  41d08e:	inc    esi
  41d08f:	pop    ds
  41d090:	mov    ah,BYTE PTR [edx+ebp*4+0x7f]
  41d094:	mov    ah,0x6e
  41d096:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41d098:	out    dx,eax
  41d099:	into   
  41d09a:	mov    esi,0x4e4aa27e
  41d09f:	test   DWORD PTR [edx-0x740e61be],0x92d24115
  41d0a9:	lea    edx,ds:0x6f9d94af
  41d0af:	xor    eax,0x5d2a6ad4
  41d0b4:	mov    eax,ds:0x1268047
  41d0b9:	xor    DWORD PTR [edx-0x5852eb90],ebp
  41d0bf:	les    edi,FWORD PTR [eax+0x7c]
  41d0c2:	leave  
  41d0c3:	enter  0x8a3b,0x3f
  41d0c7:	inc    eax
  41d0c8:	mov    ch,0x4d
  41d0ca:	cli    
  41d0cb:	lds    esi,FWORD PTR [esi-0x615501db]
  41d0d1:	cmc    
  41d0d2:	sbb    ah,BYTE PTR [ebp+0x7e]
  41d0d5:	lea    ebp,[ebx-0x271eee74]
  41d0db:	es inc edi
  41d0dd:	(bad)  
  41d0de:	(bad)  
  41d0df:	jmp    0x9fea5df9
  41d0e4:	stc    
  41d0e5:	sbb    DWORD PTR [edx+ebp*4-0x33d6f5e7],esi
  41d0ec:	inc    edx
  41d0ed:	or     eax,0xd33a44f4
  41d0f2:	fcom   QWORD PTR [esi-0x37]
  41d0f5:	xchg   edx,eax
  41d0f6:	cdq    
  41d0f7:	fwait
  41d0f8:	or     BYTE PTR [ebx],al
  41d0fa:	outs   dx,DWORD PTR ds:[esi]
  41d0fb:	pusha  
  41d0fc:	fldenv [esi+0x2a]
  41d0ff:	loop   0x41d0a6
  41d101:	das    
  41d102:	scas   al,BYTE PTR es:[edi]
  41d103:	call   0x9f0cd7d2
  41d108:	inc    ebx
  41d109:	sbb    eax,0x4808b0c5
  41d10e:	push   ecx
  41d10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d110:	adc    BYTE PTR [ebp-0x27],dl
  41d113:	mov    dl,0x82
  41d115:	sbb    ch,BYTE PTR [ebx]
  41d117:	push   cs
  41d118:	mov    ah,BYTE PTR [ecx+0x1f150bfa]
  41d11e:	test   BYTE PTR ss:[edi+0x49f3a88d],cl
  41d125:	(bad)  
  41d127:	xchg   BYTE PTR ds:0x78c12f59,al
  41d12d:	imul   edx,DWORD PTR [edi+edx*1-0x4],0xffffffcd
  41d132:	or     DWORD PTR [esi+0x31a9247d],esp
  41d138:	sub    ah,BYTE PTR [edx-0x32]
  41d13b:	adc    ecx,DWORD PTR [edx+0x2f3e51f9]
  41d141:	pop    edi
  41d142:	add    bl,BYTE PTR [edi-0x77]
  41d145:	imul   DWORD PTR [ebp+0x373de3a6]
  41d14b:	mov    dh,0x64
  41d14d:	sub    esi,DWORD PTR [esi]
  41d14f:	out    0x8a,eax
  41d151:	or     eax,DWORD PTR [ebp+edx*1-0x75]
  41d155:	jno    0x41d144
  41d157:	lods   eax,DWORD PTR ds:[esi]
  41d158:	retf   0xa98d
  41d15b:	add    eax,0x2917a4f8
  41d160:	shr    eax,0x34
  41d163:	pop    ds
  41d164:	dec    edi
  41d165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d166:	dec    ebp
  41d167:	std    
  41d168:	mov    BYTE PTR [ebp-0x386c0ddf],cl
  41d16e:	lods   eax,DWORD PTR ds:[esi]
  41d16f:	ret    0x8e06
  41d172:	mov    ds:0xdc5be6a8,al
  41d177:	sbb    cl,bl
  41d179:	enter  0x4b2e,0xc7
  41d17d:	xchg   ebp,eax
  41d17e:	adc    al,0x63
  41d180:	push   esi
  41d181:	pop    ds
  41d182:	pop    edi
  41d183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d184:	push   ebx
  41d185:	pushf  
  41d186:	scas   eax,DWORD PTR es:[edi]
  41d187:	mov    ?,WORD PTR [ecx-0x26]
  41d18a:	xor    DWORD PTR ds:0xb63d7a68,0x6332b6a2
  41d194:	add    DWORD PTR [eax],esp
  41d196:	aad    0xd
  41d198:	add    esp,DWORD PTR [edx+0x7bc8a670]
  41d19e:	adc    eax,0x121da730
  41d1a3:	mov    bh,0x8a
  41d1a5:	jb     0x41d17b
  41d1a7:	or     eax,0x274b1b26
  41d1ac:	jl     0x41d228
  41d1ae:	sbb    BYTE PTR [esi+0x1b19c24a],ah
  41d1b4:	mov    ch,0x6d
  41d1b6:	and    DWORD PTR [edx+ecx*4+0x449fe62a],0x99fb3922
  41d1c1:	mov    ds:0xcdfc7e2e,eax
  41d1c6:	add    cl,al
  41d1c8:	sbb    BYTE PTR [ebx+0x4f],ch
  41d1cb:	ret    0x9d8a
  41d1ce:	rol    BYTE PTR [edi-0xa2a8b53],cl
  41d1d4:	cmp    eax,0x4366c38d
  41d1d9:	(bad)  
  41d1da:	jmp    0x2f6229c3
  41d1df:	int3   
  41d1e0:	and    esp,DWORD PTR [esi-0x3a]
  41d1e3:	out    0xf4,eax
  41d1e5:	sbb    ah,BYTE PTR [edi]
  41d1e7:	test   eax,0x786a388c
  41d1ec:	xor    eax,edi
  41d1ee:	bound  esp,QWORD PTR [esi+0x541b21aa]
  41d1f4:	fwait
  41d1f5:	jecxz  0x41d225
  41d1f7:	aas    
  41d1f8:	mov    ds:0x3e916e9f,eax
  41d1fd:	repz gs (bad) 
  41d200:	retf   
  41d201:	aam    0x22
  41d203:	mov    dh,0x8b
  41d205:	push   esi
  41d206:	fisttp DWORD PTR [ebp-0x6968b855]
  41d20c:	shl    DWORD PTR [eax+0x32],1
  41d20f:	dec    esi
  41d210:	adc    al,BYTE PTR es:[ebx]
  41d213:	ret    0x58c
  41d216:	ror    DWORD PTR [ecx-0x2c6a72c7],1
  41d21c:	pop    esi
  41d21d:	pushf  
  41d21e:	shr    DWORD PTR [edi],0xfe
  41d221:	dec    ebx
  41d222:	das    
  41d223:	cwde   
  41d224:	jl     0x41d1e3
  41d226:	pop    ss
  41d227:	xor    DWORD PTR [ecx+0x74a92ab3],edi
  41d22d:	arpl   di,dx
  41d22f:	push   esp
  41d230:	add    eax,0x31eda6ee
  41d235:	cs or  al,0x17
  41d238:	(bad)  
  41d239:	dec    ebp
  41d23a:	xchg   ebx,eax
  41d23b:	dec    ecx
  41d23c:	sbb    DWORD PTR [ebp+0x20b1e822],ecx
  41d242:	aas    
  41d243:	cmp    ecx,0xfffffffa
  41d246:	cs mov edi,0x64d8a62c
  41d24c:	loopne 0x41d200
  41d24e:	jle    0x41d1f6
  41d250:	in     al,0x28
  41d252:	pop    ebx
  41d253:	mov    DWORD PTR [edi+0x13],edx
  41d256:	push   ds
  41d257:	mov    ds:0xf693fd8a,eax
  41d25c:	test   eax,0xccea03fc
  41d261:	js     0x41d2cf
  41d263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d264:	mov    BYTE PTR [ecx],bl
  41d266:	iret   
  41d267:	push   0x606649ad
  41d26c:	mov    al,BYTE PTR [ecx-0x5b]
  41d26f:	jbe    0x6b9fd839
  41d275:	lea    esi,[edi+0x16]
  41d278:	leave  
  41d279:	mov    ah,0xd3
  41d27b:	imul   BYTE PTR [ebp-0x50]
  41d27e:	das    
  41d27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d280:	popf   
  41d281:	jbe    0x41d289
  41d283:	stos   DWORD PTR es:[edi],eax
  41d284:	pop    esi
  41d285:	mov    esi,0x5e34a63c
  41d28a:	leave  
  41d28b:	and    dl,BYTE PTR [ebp-0x5b]
  41d28e:	mov    edx,0x32fa8a99
  41d293:	popa   
  41d294:	jp     0x41d246
  41d296:	mov    dh,0x54
  41d298:	cmp    BYTE PTR [ebp-0x530979f8],cl
  41d29e:	sub    esp,DWORD PTR [edi]
  41d2a0:	dec    esi
  41d2a1:	xlat   BYTE PTR ds:[ebx]
  41d2a2:	cs call 0x70e4:0x51ac9098
  41d2aa:	add    BYTE PTR [esi+0x75c42912],ah
  41d2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2b2:	mov    esp,cs
  41d2b4:	mov    edi,DWORD PTR [edi+0x6c]
  41d2b7:	add    al,BYTE PTR [ebx-0x4]
  41d2ba:	push   ebx
  41d2bb:	sub    dh,cl
  41d2bd:	lea    ebx,[ecx+esi*1]
  41d2c0:	sbb    cl,BYTE PTR [ebx-0x9]
  41d2c3:	sti    
  41d2c4:	mov    ch,ah
  41d2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c7:	xchg   ebx,eax
  41d2c8:	jp     0x41d26e
  41d2ca:	mov    ebp,0xaf8d985f
  41d2cf:	add    dl,ch
  41d2d1:	sahf   
  41d2d2:	mov    gs,WORD PTR [eax]
  41d2d4:	push   eax
  41d2d5:	pushf  
  41d2d6:	das    
  41d2d7:	in     eax,dx
  41d2d8:	inc    ebp
  41d2d9:	adc    ebp,DWORD PTR [esi+0x69d5a68a]
  41d2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e0:	or     DWORD PTR [ecx+0x54],esi
  41d2e3:	lea    edi,[edi+0x4c]
  41d2e6:	dec    ecx
  41d2e7:	fisttp WORD PTR [ecx+0x47dcaf69]
  41d2ed:	cmp    DWORD PTR [esi-0x3c],esp
  41d2f0:	mov    esi,0x9f9b2ee2
  41d2f5:	mov    bl,0x2d
  41d2f7:	xchg   esp,eax
  41d2f8:	sbb    ch,bh
  41d2fa:	cs cdq 
  41d2fc:	mov    DWORD PTR ds:0x23bb33b9,ebx
  41d302:	inc    ecx
  41d303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d304:	jnp    0x41d35f
  41d306:	pop    es
  41d307:	push   ss
  41d308:	xchg   ecx,eax
  41d309:	push   ebx
  41d30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d30b:	jge    0x41d2b3
  41d30d:	dec    DWORD PTR [edi-0x1b]
  41d310:	or     DWORD PTR [edi-0x2a5a836e],esp
  41d316:	sbb    dh,BYTE PTR [eax]
  41d318:	mov    edi,0x14be6c8d
  41d31d:	add    esi,DWORD PTR [edi]
  41d31f:	mov    bl,0xea
  41d321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d322:	cs or  ecx,edx
  41d325:	mov    al,0x77
  41d327:	jge    0x41d35e
  41d329:	sub    BYTE PTR [edi+0x9d2e98],0x8c
  41d330:	inc    esp
  41d331:	(bad)  
  41d332:	cmc    
  41d333:	inc    ecx
  41d334:	xchg   esi,eax
  41d335:	inc    esi
  41d336:	(bad)  [ecx+0x5a5fba08]
  41d33c:	mov    ebx,DWORD PTR [esi+0x33edfc62]
  41d342:	imul   dl
  41d344:	sti    
  41d345:	mov    BYTE PTR [edi-0x61],dl
  41d348:	dec    ebp
  41d349:	lea    eax,[edi+0x28]
  41d34c:	adc    eax,0x91c079a2
  41d351:	aad    0x2e
  41d353:	loop   0x41d382
  41d355:	dec    DWORD PTR [ebx+0x2]
  41d358:	or     edi,eax
  41d35a:	lea    ecx,[edi+0x4e2f7384]
  41d360:	push   ds
  41d361:	sbb    BYTE PTR [ecx+0x56eef185],dl
  41d367:	loopne 0x41d2f3
  41d369:	push   0xf0fce8cf
  41d36e:	push   0xff8daae3
  41d373:	js     0x41d37e
  41d375:	push   ecx
  41d376:	mov    BYTE PTR [ebx],dl
  41d378:	xor    DWORD PTR [ecx-0x334b75d2],edi
  41d37e:	popa   
  41d37f:	sub    DWORD PTR [edx-0x2ca28dc4],0xf8b9b18d
  41d389:	hlt    
  41d38a:	push   ds
  41d38b:	rol    esi,0xf9
  41d38e:	sbb    DWORD PTR cs:[eax],ebx
  41d391:	retf   0x9c72
  41d394:	pop    ds
  41d395:	or     eax,DWORD PTR [edi-0x5a]
  41d398:	adc    dl,BYTE PTR [eax-0x1ba2bc5d]
  41d39e:	fcom   QWORD PTR [ebx+0x1c81888a]
  41d3a4:	sahf   
  41d3a5:	sbb    esp,DWORD PTR [edx]
  41d3a7:	aas    
  41d3a8:	mov    esp,DWORD PTR ds:0xb6769d41
  41d3ae:	(bad)  
  41d3af:	fimul  WORD PTR [edx+0x25f82d53]
  41d3b5:	inc    ecx
  41d3b6:	xor    ah,BYTE PTR [edx-0x1501a31d]
  41d3bc:	xor    cl,BYTE PTR ds:0x8cc56653
  41d3c2:	pusha  
  41d3c3:	into   
  41d3c4:	gs inc eax
  41d3c6:	sbb    bh,ah
  41d3c8:	mov    ecx,0x7d82a70d
  41d3cd:	jmp    0x8e1689d1
  41d3d2:	call   0x4fe0aaf5
  41d3d7:	popa   
  41d3d8:	in     eax,dx
  41d3d9:	add    eax,0xbb8a6fe7
  41d3de:	in     eax,0x3d
  41d3e0:	pop    edi
  41d3e1:	popa   
  41d3e2:	arpl   bx,bp
  41d3e4:	out    0x8a,eax
  41d3e6:	call   0xe3bab3f4
  41d3eb:	and    eax,0xa191cc24
  41d3f0:	ret    
  41d3f1:	icebp  
  41d3f2:	xchg   ebp,eax
  41d3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f4:	je     0x41d473
  41d3f6:	jno    0x41d41b
  41d3f8:	fucomi st,st(5)
  41d3fa:	ins    DWORD PTR es:[edi],dx
  41d3fb:	lods   al,BYTE PTR ds:[esi]
  41d3fc:	push   eax
  41d3fd:	xchg   ebx,eax
  41d3fe:	and    al,0x67
  41d400:	inc    eax
  41d401:	cdq    
  41d402:	pinsrw mm3,edx,0xa6
  41d406:	sbb    eax,0x1038af0
  41d40b:	cmp    esp,DWORD PTR [ecx+0x4d]
  41d40e:	(bad)  
  41d40f:	dec    eax
  41d410:	inc    esp
  41d411:	lea    ecx,[ecx-0xd866b83]
  41d417:	cs jae 0x41d448
  41d41a:	jecxz  0x41d436
  41d41c:	mov    al,dh
  41d41e:	es push 0xc4f17265
  41d424:	push   es
  41d425:	mov    gs,WORD PTR [ebx]
  41d427:	std    
  41d428:	fsub   st,st(3)
  41d42a:	mov    gs,WORD PTR [ecx-0x79]
  41d42d:	je     0x41d40a
  41d42f:	fmul   QWORD PTR [edi+0x409bc1d4]
  41d435:	fld    TBYTE PTR [edi-0x26]
  41d438:	imul   DWORD PTR [ebx]
  41d43a:	push   eax
  41d43b:	lea    ebp,[edx-0x2659ac84]
  41d441:	test   al,0x75
  41d443:	jbe    0x41d452
  41d445:	fimul  DWORD PTR [edi+0x7b]
  41d448:	mov    ah,ah
  41d44a:	rcr    BYTE PTR [ecx+0x486f000b],0x99
  41d451:	not    DWORD PTR [edx+0x47]
  41d454:	xchg   edx,eax
  41d455:	jge    0x41d4d2
  41d457:	adc    eax,DWORD PTR [esi+ebp*4]
  41d45a:	js     0x41d429
  41d45c:	jb     0x41d4c7
  41d45e:	das    
  41d45f:	push   cs
  41d460:	pop    ebp
  41d461:	or     BYTE PTR [ebx-0x5956b5ab],dl
  41d467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d468:	rcr    BYTE PTR [ebp+0x56],0x46
  41d46c:	mov    al,ds:0x8ad054a2
  41d471:	pop    esp
  41d472:	pop    es
  41d473:	xor    ch,BYTE PTR [eax]
  41d475:	push   ebp
  41d476:	ss cs inc esp
  41d479:	(bad)  
  41d47a:	(bad)  
  41d47b:	and    BYTE PTR [edi-0x78],dl
  41d47e:	mov    ebx,0x2edcb737
  41d483:	sbb    eax,0x19afc0f3
  41d488:	cld    
  41d489:	dec    dx
  41d48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d48c:	imul   BYTE PTR [ebx]
  41d48e:	bound  ebp,QWORD PTR [edi+0x67]
  41d491:	mov    ebp,0x7a89c413
  41d496:	sub    dl,BYTE PTR [ecx+ecx*1+0x416b7cb]
  41d49d:	(bad)  
  41d49e:	int3   
  41d49f:	rol    DWORD PTR [ebp-0x73],1
  41d4a2:	sub    eax,0x9fe58ff0
  41d4a7:	jo     0x41d43f
  41d4a9:	cs das 
  41d4ab:	push   edi
  41d4ac:	add    BYTE PTR [edx],0xdc
  41d4af:	mov    bl,0xd3
  41d4b1:	pushf  
  41d4b2:	int3   
  41d4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4b4:	and    BYTE PTR [edx+0x1d3cf698],cl
  41d4ba:	mov    eax,ds:0xc5e48ad7
  41d4bf:	retf   
  41d4c0:	lods   al,BYTE PTR ds:[esi]
  41d4c1:	xchg   ebp,eax
  41d4c2:	sbb    edi,DWORD PTR [edx-0x23ae72d7]
  41d4c8:	sub    BYTE PTR [ebx-0x2c3d0866],dh
  41d4ce:	cs aad 0xfb
  41d4d1:	xor    DWORD PTR [ebp-0x3d0060a2],ecx
  41d4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d8:	or     DWORD PTR [esi-0x78],edx
  41d4db:	rcr    BYTE PTR [ebx],1
  41d4dd:	and    ebp,DWORD PTR [eax+0xf058a9d]
  41d4e3:	cdq    
  41d4e4:	inc    esp
  41d4e5:	mov    esi,0xab6a1239
  41d4ea:	scas   al,BYTE PTR es:[edi]
  41d4eb:	addr16 popf 
  41d4ed:	mov    ds:0xb5c3a64e,eax
  41d4f2:	mov    fs,WORD PTR [ebp-0x41]
  41d4f5:	icebp  
  41d4f6:	cs aaa 
  41d4f8:	jmp    0x41d4c6
  41d4fa:	push   ecx
  41d4fb:	dec    ebp
  41d4fc:	and    BYTE PTR [ecx-0x41b95a19],dl
  41d502:	ja     0x41d549
  41d504:	mov    ah,0xcd
  41d506:	xchg   ecx,eax
  41d507:	fs mov ah,0x3e
  41d50a:	xor    cl,cl
  41d50c:	mov    ch,ch
  41d50e:	stos   DWORD PTR es:[edi],eax
  41d50f:	fild   DWORD PTR [edi]
  41d511:	pop    ss
  41d512:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d514:	imul   edx,DWORD PTR [ebp+eax*8+0x5c],0xffffffa9
  41d519:	stos   DWORD PTR es:[edi],eax
  41d51a:	stos   DWORD PTR es:[edi],eax
  41d51b:	jg     0x41d4a7
  41d51d:	adc    BYTE PTR [ebx-0x73eb271d],dl
  41d523:	mov    ecx,0x5b478da8
  41d528:	es (bad) 
  41d52a:	mov    dl,0xc8
  41d52c:	xchg   ebp,eax
  41d52d:	sbb    DWORD PTR [edi],ebp
  41d52f:	jno    0x41d59a
  41d531:	sbb    eax,0xde5f7d2a
  41d536:	or     al,0xa6
  41d538:	and    eax,0x4d13bfd1
  41d53d:	jmp    0x41d521
  41d53f:	popf   
  41d540:	cmp    bh,BYTE PTR [ecx+0x44]
  41d543:	dec    esi
  41d544:	fdivr  st,st(4)
  41d546:	cs jns 0x41d5bc
  41d549:	jo     0x41d5b7
  41d54b:	xchg   ebp,eax
  41d54c:	popa   
  41d54d:	lea    ecx,[edi]
  41d54f:	retf   
  41d550:	repnz pop ebp
  41d552:	add    ebx,DWORD PTR [edx-0x68d1312d]
  41d558:	jbe    0x41d5b0
  41d55a:	aad    0x82
  41d55c:	mov    ds:0x3da50007,al
  41d561:	ins    DWORD PTR es:[edi],dx
  41d562:	mov    ds:0x8efd4b4f,al
  41d567:	jns    0x41d543
  41d569:	dec    esi
  41d56a:	ds push edx
  41d56c:	fwait
  41d56d:	push   ebx
  41d56e:	das    
  41d56f:	vmwrite eax,DWORD PTR [esi]
  41d572:	test   DWORD PTR [esi],ebp
  41d574:	pop    edi
  41d575:	lea    edi,[ebp-0x63e8cb2f]
  41d57b:	lods   eax,DWORD PTR ds:[esi]
  41d57c:	neg    ebx
  41d57e:	xor    eax,0x7afbe81e
  41d583:	test   eax,0xef5ef7e7
  41d588:	(bad)
  41d58d:	sbb    eax,0xd5afc311
  41d592:	push   es
  41d593:	mov    bl,0xab
  41d595:	mov    ss,ebx
  41d597:	sti    
  41d598:	xor    esp,DWORD PTR [ecx-0x146ef17b]
  41d59e:	inc    eax
  41d59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a0:	push   ss
  41d5a1:	add    esp,ecx
  41d5a3:	cmc    
  41d5a4:	int    0x75
  41d5a6:	dec    eax
  41d5a7:	xor    edi,ebx
  41d5a9:	mov    edx,0xd08a769f
  41d5ae:	push   edx
  41d5af:	jb     0x41d606
  41d5b1:	mov    edi,0x8d39c435
  41d5b6:	loopne 0x41d5fd
  41d5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b9:	xchg   edx,eax
  41d5ba:	daa    
  41d5bb:	bnd jne 0x41d623
  41d5be:	das    
  41d5bf:	mov    cl,0x49
  41d5c1:	jle    0x41d5e9
  41d5c3:	jnp    0x41d54e
  41d5c5:	cmp    ebx,DWORD PTR [ecx-0x5a]
  41d5c8:	inc    ebp
  41d5c9:	push   eax
  41d5ca:	mov    dl,BYTE PTR [edx]
  41d5cc:	cwde   
  41d5cd:	xlat   BYTE PTR ds:[ebx]
  41d5ce:	in     eax,dx
  41d5cf:	sub    eax,0xc47b28a
  41d5d4:	jp     0x41d5b2
  41d5d6:	xchg   ebx,eax
  41d5d7:	aaa    
  41d5d8:	ficom  DWORD PTR [edx-0x453e5d95]
  41d5de:	outs   dx,DWORD PTR ds:[esi]
  41d5df:	lods   al,BYTE PTR ds:[esi]
  41d5e0:	lds    esi,FWORD PTR [ebx-0x1e]
  41d5e3:	dec    edi
  41d5e4:	mov    bh,BYTE PTR ds:0xcb28db45
  41d5ea:	fsubr  QWORD PTR [edi]
  41d5ec:	pop    es
  41d5ed:	mov    ?,ebp
  41d5ef:	repz int 0xb5
  41d5f2:	outs   dx,BYTE PTR ds:[esi]
  41d5f3:	shr    DWORD PTR [esp+edi*2+0x2f],cl
  41d5f7:	and    eax,0x482cb792
  41d5fc:	adc    eax,0x38a621e8
  41d601:	das    
  41d602:	imul   edx,DWORD PTR [esi-0x25d6cdbf],0xffffff86
  41d609:	clc    
  41d60a:	inc    esp
  41d60b:	inc    DWORD PTR [esi]
  41d60d:	int3   
  41d60e:	outs   dx,BYTE PTR ds:[esi]
  41d60f:	js     0x41d653
  41d611:	adc    al,0x81
  41d613:	mov    dl,0x77
  41d615:	mov    ch,BYTE PTR [esi+0x2]
  41d618:	popf   
  41d619:	mov    al,BYTE PTR [ebp-0x5392cfb7]
  41d61f:	cmp    al,0xeb
  41d621:	mov    bl,0x2f
  41d623:	aaa    
  41d624:	rcr    DWORD PTR [edx],0xb8
  41d627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d628:	mov    WORD PTR [ecx],es
  41d62a:	call   0xd21025d5
  41d62f:	ror    eax,cl
  41d631:	scas   eax,DWORD PTR es:[edi]
  41d632:	mov    esp,0x2f5277da
  41d637:	aad    0x72
  41d639:	sub    al,0x7a
  41d63b:	jb     0x7b09b95d
  41d641:	lea    ecx,[edx+ebx*2]
  41d644:	dec    ebp
  41d645:	fadd   st(7),st
  41d647:	in     eax,0x4f
  41d649:	push   cs
  41d64a:	xor    bh,BYTE PTR [ebx+edi*4]
  41d64d:	mov    DWORD PTR [esi-0xe],edi
  41d650:	out    dx,al
  41d651:	aad    0xbd
  41d653:	ret    0x93b9
  41d656:	in     eax,0xa8
  41d658:	das    
  41d659:	fild   WORD PTR [ebp-0x1a]
  41d65c:	mov    BYTE PTR [eax+0x7b800358],al
  41d662:	das    
  41d663:	mov    ebx,DWORD PTR [edx-0x4812ab33]
  41d669:	or     BYTE PTR [ebx+0x13a3fad6],bh
  41d66f:	clc    
  41d670:	adc    DWORD PTR [edx-0x25],edx
  41d673:	xchg   BYTE PTR [edx-0x7a301f18],ch
  41d679:	das    
  41d67a:	xor    bl,bh
  41d67c:	mov    ch,0x11
  41d67e:	add    ebx,esi
  41d680:	pop    es
  41d681:	ds ds cli 
  41d684:	lea    esp,[bp+si+0x77]
  41d688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d689:	push   edi
  41d68a:	dec    edx
  41d68b:	mov    eax,ds:0xe8dfcf06
  41d690:	mov    ch,BYTE PTR [eax]
  41d692:	xor    ebx,ebx
  41d694:	mov    cl,ch
  41d696:	cmc    
  41d697:	mov    ecx,0x12468df1
  41d69c:	fcomp  DWORD PTR [ebx-0x62]
  41d69f:	cmc    
  41d6a0:	xor    eax,0x9f492f27
  41d6a5:	inc    esi
  41d6a6:	cli    
  41d6a7:	ins    DWORD PTR es:[edi],dx
  41d6a8:	adc    ecx,esi
  41d6aa:	jno    0x41d70e
  41d6ac:	call   0x54b3:0xbe2f2f5c
  41d6b3:	ror    DWORD PTR [edx],cl
  41d6b5:	daa    
  41d6b6:	pop    es
  41d6b7:	cmp    DWORD PTR ds:0xa74dba3,edx
  41d6bd:	fistp  QWORD PTR [ecx+eiz*4-0x5f]
  41d6c1:	aas    
  41d6c2:	popa   
  41d6c3:	push   ecx
  41d6c4:	(bad)  
  41d6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c6:	lea    esp,fs:[esi-0x7b]
  41d6ca:	lods   eax,DWORD PTR ds:[esi]
  41d6cb:	out    0x40,al
  41d6cd:	dec    ebx
  41d6ce:	das    
  41d6cf:	call   0x9d32b96f
  41d6d4:	mov    al,0xa8
  41d6d6:	in     al,dx
  41d6d7:	lea    esi,[ebp-0x49ddd0a6]
  41d6dd:	cmc    
  41d6de:	inc    BYTE PTR [ebp-0x29d04fb7]
  41d6e4:	xchg   DWORD PTR [esp+esi*4],edx
  41d6e7:	fcmovnb st,st(5)
  41d6e9:	enter  0xa67d,0x36
  41d6ed:	retf   0x8b40
  41d6f0:	daa    
  41d6f1:	mov    ds:0x2c8b6794,eax
  41d6f6:	sub    bh,BYTE PTR [edi]
  41d6f8:	mov    ah,0x69
  41d6fb:	not    DWORD PTR [esi-0x7c]
  41d6fe:	out    0xa9,eax
  41d700:	das    
  41d701:	adc    edx,DWORD PTR [ecx-0x63]
  41d704:	std    
  41d705:	int    0xc8
  41d707:	or     dh,cl
  41d709:	mov    al,0x2f
  41d70b:	inc    ecx
  41d70c:	daa    
  41d70d:	inc    ebp
  41d70e:	shl    bl,0x36
  41d711:	or     esi,DWORD PTR [ebx+0x5f4de2a6]
  41d717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d718:	in     eax,dx
  41d719:	mov    dh,0xea
  41d71b:	xchg   esp,eax
  41d71c:	xchg   ebp,eax
  41d71d:	sahf   
  41d71e:	push   ebp
  41d71f:	jb     0x41d6e7
  41d721:	imul   eax,DWORD PTR [edx+esi*4],0xe9de549
  41d728:	int3   
  41d729:	adc    ebx,DWORD PTR [esi+eiz*4]
  41d72c:	std    
  41d72d:	jb     0x41d6da
  41d72f:	cmp    eax,0xdf0c1c77
  41d734:	mov    ah,BYTE PTR [edi]
  41d736:	pusha  
  41d737:	out    0xf,al
  41d739:	jmp    0x8dc1d8c2
  41d73e:	gs xor eax,0xf5efa9f3
  41d744:	push   ebp
  41d745:	imul   ebp,DWORD PTR [edi],0xc64b17f8
  41d74b:	(bad)  
  41d74d:	(bad)  
  41d74e:	push   cs
  41d74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d750:	repnz das 
  41d752:	mov    esp,0xe804eb6b
  41d757:	fst    QWORD PTR [ebx+0x3db32f42]
  41d75d:	xchg   ecx,eax
  41d75e:	mov    WORD PTR [ebx+0x4e],fs
  41d761:	shl    DWORD PTR [ebp-0xab3704d],0x65
  41d768:	mov    edx,edx
  41d76a:	sub    eax,0x2b45fbe3
  41d76f:	adc    ch,bh
  41d771:	lods   al,BYTE PTR ds:[esi]
  41d772:	pop    edi
  41d773:	or     BYTE PTR [edx+0x59],0xd0
  41d777:	push   ebp
  41d778:	jno    0x41d7df
  41d77a:	xor    ecx,edi
  41d77c:	mov    edi,DWORD PTR [edi+ebp*4]
  41d77f:	or     eax,0xf275ea92
  41d784:	pop    es
  41d785:	xchg   ebx,eax
  41d786:	imul   esi,DWORD PTR [edx+ecx*4-0x38799677],0x1c6eaaee
  41d791:	test   edi,eax
  41d793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d794:	push   es
  41d795:	mov    al,0x4e
  41d797:	aas    
  41d798:	xchg   esi,eax
  41d799:	xchg   ebp,edi
  41d79b:	xor    eax,edx
  41d79d:	sub    al,0x17
  41d79f:	es in  eax,0x1
  41d7a2:	add    DWORD PTR [edx],ebx
  41d7a4:	mov    DWORD PTR [esi-0x1e2670d9],ebx
  41d7aa:	cs aaa 
  41d7ac:	iret   
  41d7ad:	adc    esi,DWORD PTR [ebx+0x2f2a8fe2]
  41d7b3:	pop    ecx
  41d7b4:	in     eax,0x6d
  41d7b6:	mov    edx,0x5e821d56
  41d7bb:	nop
  41d7bc:	arpl   WORD PTR fs:[edi],bp
  41d7bf:	aaa    
  41d7c0:	arpl   WORD PTR [eax-0x47],si
  41d7c3:	push   0x462f43a7
  41d7c8:	aam    0x5
  41d7ca:	fldenv [ebx-0x33]
  41d7cd:	cld    
  41d7ce:	adc    ecx,0x7a
  41d7d1:	cmp    al,0x3d
  41d7d3:	mov    WORD PTR [ecx-0x3f],gs
  41d7d6:	xor    BYTE PTR [edx+ecx*8],bl
  41d7d9:	cmp    al,BYTE PTR [edi-0x750a2a76]
  41d7df:	mov    esp,0xf1447f8a
  41d7e4:	xor    eax,0xcc7d272e
  41d7e9:	lea    edx,ds:0x6128f1bd
  41d7ef:	pop    ebp
  41d7f0:	push   0x55
  41d7f2:	xor    eax,0x9d52619b
  41d7f7:	out    0xa8,al
  41d7f9:	std    
  41d7fa:	rol    WORD PTR [eax-0x74],0xa8
  41d7ff:	pop    ebx
  41d800:	xor    BYTE PTR [esi+0x2e],ch
  41d803:	je     0x41d84b
  41d805:	shl    DWORD PTR [edi-0x67],1
  41d808:	mov    dl,cl
  41d80a:	sbb    BYTE PTR [ebp+0x12],0x99
  41d80e:	(bad)  
  41d80f:	sub    dh,ah
  41d811:	lea    esi,[ebx-0x3a31a6cb]
  41d817:	xlat   BYTE PTR ds:[ebx]
  41d818:	icebp  
  41d819:	sub    ebp,DWORD PTR [edx]
  41d81b:	fiadd  WORD PTR ds:0xafdf7b95
  41d821:	lea    esp,ds:0x438c07da
  41d827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d828:	push   cs
  41d829:	loop   0x41d7b8
  41d82b:	jle    0x41d888
  41d82d:	ja     0x41d869
  41d82f:	and    ecx,DWORD PTR [edx-0x6ce5bfbd]
  41d835:	sub    edx,DWORD PTR [ebx-0x13c60ba]
  41d83b:	xchg   edx,eax
  41d83c:	or     al,BYTE PTR [edi+0x7d76f228]
  41d842:	je     0x41d802
  41d844:	xchg   esi,eax
  41d845:	mov    bh,0xe7
  41d847:	inc    edx
  41d848:	bound  edi,QWORD PTR [ecx+0x6867a6b0]
  41d84e:	into   
  41d84f:	sbb    eax,0x9e9332d8
  41d854:	mov    bl,BYTE PTR [eax-0x3485e23d]
  41d85a:	and    BYTE PTR [ecx+0x1bc89242],cl
  41d860:	cld    
  41d861:	push   DWORD PTR [ecx]
  41d863:	mov    esp,0xa171bc82
  41d868:	call   0x4e71043d
  41d86d:	or     eax,0x12ae3070
  41d872:	das    
  41d873:	lahf   
  41d874:	stos   BYTE PTR es:[edi],al
  41d875:	sahf   
  41d876:	inc    eax
  41d877:	(bad)  
  41d878:	lods   al,BYTE PTR ds:[esi]
  41d879:	sub    eax,0x1c12a6dd
  41d87e:	push   0x2a
  41d880:	jl     0x41d848
  41d882:	dec    esp
  41d883:	stc    
  41d884:	inc    ecx
  41d885:	cli    
  41d886:	dec    esi
  41d887:	inc    ebp
  41d888:	pop    ebx
  41d889:	retf   
  41d88a:	xor    al,0xcc
  41d88c:	add    al,0x9c
  41d88e:	or     eax,DWORD PTR [esi]
  41d890:	(bad)  
  41d891:	jp     0x41d8a2
  41d893:	imul   ecx,DWORD PTR [eax-0x73],0xffffffa0
  41d897:	add    al,0x11
  41d899:	sbb    ebp,DWORD PTR [edx]
  41d89b:	ror    ch,1
  41d89d:	fild   QWORD PTR [edx]
  41d89f:	jae    0x41d884
  41d8a1:	loope  0x41d91d
  41d8a3:	adc    cl,BYTE PTR [edx+0x32]
  41d8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8a7:	fisttp WORD PTR [ebp+ecx*4-0x24]
  41d8ab:	js     0x41d8f5
  41d8ad:	xchg   edx,edx
  41d8af:	sub    al,0xf3
  41d8b1:	pop    ebp
  41d8b2:	das    
  41d8b3:	ins    DWORD PTR es:[edi],dx
  41d8b4:	je     0x41d8d4
  41d8b6:	in     al,dx
  41d8b7:	xor    al,BYTE PTR [eax-0x565a08f0]
  41d8bd:	xor    al,0x62
  41d8bf:	push   0x3112c990
  41d8c4:	mov    al,BYTE PTR [ebx+0x75ca7803]
  41d8ca:	sbb    edx,0x56
  41d8cd:	lea    esp,[ecx+0x4e]
  41d8d0:	and    DWORD PTR [esi-0x18b231f1],0x3fa4292e
  41d8da:	cmc    
  41d8db:	(bad)  
  41d8dc:	adc    edi,DWORD PTR [eax-0x5a8a59a7]
  41d8e2:	sub    BYTE PTR es:[ebx-0x6edeab10],bh
  41d8e9:	add    bh,BYTE PTR ds:0x6c8de238
  41d8ef:	aaa    
  41d8f0:	ret    0x18c8
  41d8f3:	mov    esp,0x3b8d8e8e
  41d8f8:	add    DWORD PTR [edx],edi
  41d8fa:	jnp    0x41d8e3
  41d8fc:	bound  ebx,QWORD PTR [edx]
  41d8fe:	call   0x83866377
  41d903:	or     al,0xf5
  41d905:	push   cs
  41d906:	push   esp
  41d907:	aas    
  41d908:	jo     0x41d897
  41d90a:	jae    0x41d982
  41d90c:	popa   
  41d90d:	cli    
  41d90e:	call   0x23c12dd3
  41d913:	xchg   ecx,eax
  41d914:	inc    ecx
  41d915:	lea    ebx,ds:0x8ead4227
  41d91b:	cmc    
  41d91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d91d:	(bad)  
  41d91e:	out    0x6b,eax
  41d920:	jp     0x41d8d0
  41d922:	push   ecx
  41d923:	add    BYTE PTR [ebx-0x63],ah
  41d926:	pop    edi
  41d927:	cld    
  41d928:	xchg   ebp,eax
  41d929:	xchg   DWORD PTR [ebp+0x5f],eax
  41d92c:	mov    edx,0xa6b240d
  41d931:	and    BYTE PTR ds:0xbb74eaa6,bh
  41d937:	xor    al,0x72
  41d939:	test   eax,0x658aa0aa
  41d93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d93f:	scas   eax,DWORD PTR es:[edi]
  41d940:	mov    eax,0x837583e
  41d945:	lea    esi,[ecx]
  41d947:	ret    
  41d948:	or     BYTE PTR es:[ebx],dl
  41d94b:	(bad)  
  41d94c:	and    DWORD PTR [ecx+0x796232],esp
  41d952:	inc    esp
  41d953:	fs fwait
  41d955:	or     eax,0xc575e9fa
  41d95a:	(bad)  
  41d95d:	test   al,0xd5
  41d95f:	daa    
  41d960:	jno    0x41d9c1
  41d962:	adc    al,0xb6
  41d964:	mov    ch,BYTE PTR [esi+0x4c91916f]
  41d96a:	push   ebp
  41d96b:	or     ecx,DWORD PTR [eax]
  41d96d:	lea    eax,[esi+ecx*1+0x7f40e549]
  41d974:	jmp    0xd9ba:0x4fb12f00
  41d97b:	or     al,0x90
  41d97d:	cdq    
  41d97e:	push   ebx
  41d97f:	mov    cl,0x18
  41d981:	aad    0xcb
  41d983:	and    eax,0x4f93f330
  41d988:	ret    0x2ee7
  41d98b:	ss jg  0x41d916
  41d98e:	xchg   ecx,eax
  41d98f:	(bad)  [esp+edi*4-0x3c]
  41d993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d994:	mov    ah,0xa1
  41d996:	dec    esi
  41d997:	push   ss
  41d998:	in     al,dx
  41d999:	cld    
  41d99a:	mov    esi,esp
  41d99c:	mov    ch,BYTE PTR [ebx+ecx*4]
  41d99f:	enter  0x4d1f,0xb6
  41d9a3:	or     DWORD PTR [esi],esi
  41d9a5:	mov    ?,WORD PTR [ecx]
  41d9a7:	jae    0x41d9bf
  41d9a9:	(bad)  
  41d9aa:	sub    al,0x16
  41d9ac:	jno    0x41d931
  41d9ae:	lahf   
  41d9af:	cmc    
  41d9b0:	sbb    BYTE PTR [eax],dl
  41d9b2:	sub    al,0x77
  41d9b4:	mov    WORD PTR [edi+0xf],ds
  41d9b7:	push   es
  41d9b8:	or     dh,BYTE PTR [ebx]
  41d9ba:	loopne 0x41d94a
  41d9bc:	in     al,0x8d
  41d9be:	mov    edx,DWORD PTR [ebx-0x47387715]
  41d9c4:	jl     0x41d9f6
  41d9c6:	pop    eax
  41d9c7:	push   esi
  41d9c8:	jmp    0xdf9:0xd71930a9
  41d9cf:	xchg   esp,eax
  41d9d0:	pop    ecx
  41d9d1:	enter  0xba0e,0x44
  41d9d5:	mov    ss,WORD PTR [ecx]
  41d9d7:	mov    edx,0x1b351cdf
  41d9dc:	sub    ch,BYTE PTR [esi+0x7f]
  41d9df:	stos   BYTE PTR es:[edi],al
  41d9e0:	mov    ah,BYTE PTR ds:0x3fd66e88
  41d9e6:	ins    BYTE PTR es:[edi],dx
  41d9e7:	aam    0x8c
  41d9e9:	mov    cl,BYTE PTR [ecx-0x36f02d54]
  41d9ef:	cmc    
  41d9f0:	out    0x7b,eax
  41d9f2:	xchg   DWORD PTR [ebx+0x64e8aeef],esp
  41d9f8:	mov    al,ch
  41d9fa:	jl     0x41da5b
  41d9fc:	aas    
  41d9fd:	and    al,BYTE PTR [ecx-0x7e]
  41da00:	push   ebx
  41da01:	lea    edi,[esp+eiz*8]
  41da04:	pop    ebx
  41da05:	out    dx,eax
  41da06:	bound  esp,QWORD PTR [edi]
  41da08:	adc    eax,ebp
  41da0a:	and    bl,cl
  41da0c:	jbe    0x41da1b
  41da0e:	pop    eax
  41da0f:	jnp    0x41d9a0
  41da11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da12:	fs mov esi,0xa0078da0
  41da18:	mov    edx,DWORD PTR [ecx-0xe22c873]
  41da1e:	xor    DWORD PTR [edi+0x65465d3d],ecx
  41da24:	mov    ebp,0xee969eea
  41da29:	dec    ebp
  41da2a:	addr16 mov bl,0x27
  41da2d:	pop    esp
  41da2e:	js     0x41da15
  41da30:	mov    ds:0x7ae9f550,eax
  41da35:	ja     0x41da69
  41da37:	xor    DWORD PTR [edx+0x3],edi
  41da3a:	das    
  41da3b:	sbb    dh,BYTE PTR [ebp-0x2d5cd49b]
  41da41:	int3   
  41da42:	popa   
  41da43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da44:	(bad)  
  41da46:	ins    DWORD PTR es:[edi],dx
  41da47:	xchg   edi,eax
  41da48:	add    ecx,eax
  41da4a:	push   ebx
  41da4b:	mov    ds:0x61328f07,al
  41da50:	add    BYTE PTR [edx+0x5e],bh
  41da53:	or     cl,dh
  41da55:	xor    eax,0x8d12e1a9
  41da5a:	fwait
  41da5b:	arpl   WORD PTR [ebx-0x257e610e],si
  41da61:	dec    ebx
  41da62:	das    
  41da63:	fild   WORD PTR ds:0x8b449326
  41da69:	int    0x31
  41da6b:	xchg   edx,eax
  41da6c:	and    BYTE PTR [ebp+0x2f],bh
  41da6f:	push   0x16
  41da71:	outs   dx,BYTE PTR ds:[esi]
  41da72:	sbb    ah,BYTE PTR [edx+0x732efe99]
  41da78:	and    DWORD PTR [ecx+0x71816e4b],eax
  41da7e:	xchg   ebp,eax
  41da7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da80:	nop
  41da81:	(bad)  
  41da82:	push   ds
  41da83:	jnp    0x41dac4
  41da85:	loopne 0x41da55
  41da87:	push   cs
  41da88:	mov    ebp,DWORD PTR [ebx-0x651833e2]
  41da8e:	addr16 stc 
  41da90:	cli    
  41da91:	cs loope 0x41da39
  41da94:	rol    DWORD PTR [esp+eiz*8],1
  41da97:	mov    fs,WORD PTR [ebx-0x3]
  41da9a:	out    0x83,eax
  41da9c:	mov    dl,ch
  41da9e:	cmc    
  41da9f:	adc    DWORD PTR [esi*8-0x7a7f78e7],ecx
  41daa6:	in     eax,dx
  41daa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa8:	das    
  41daa9:	(bad)  
  41daaa:	mov    bl,0x8d
  41daac:	dec    edi
  41daad:	ret    
  41daae:	inc    esp
  41daaf:	in     eax,dx
  41dab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dab1:	jae    0x41da6c
  41dab3:	test   DWORD PTR [eax+edx*4],esp
  41dab6:	outs   dx,DWORD PTR ds:[esi]
  41dab7:	cmp    bl,BYTE PTR [edi+0x675477b9]
  41dabd:	les    ecx,FWORD PTR [ebx+0x1]
  41dac0:	mov    al,BYTE PTR [edx+edx*2]
  41dac3:	dec    ebp
  41dac4:	add    esi,DWORD PTR [edx-0x2f75f26b]
  41daca:	mov    eax,ds:0x487b0e0a
  41dacf:	out    dx,eax
  41dad0:	and    al,0xf1
  41dad2:	jl     0x41da7b
  41dad4:	sbb    DWORD PTR [edx+0x30b4a483],ebx
  41dada:	inc    esp
  41dadb:	mul    DWORD PTR [ebp-0x75f14723]
  41dae1:	pop    ebp
  41dae2:	repz pop ebp
  41dae4:	popa   
  41dae5:	nop
  41dae6:	xchg   ecx,eax
  41dae7:	fcom   QWORD PTR [edi-0x73]
  41daea:	enter  0xbab9,0xde
  41daee:	pop    ss
  41daef:	push   esp
  41daf0:	xchg   DWORD PTR [ebx+eax*2-0x50dae077],ebx
  41daf7:	add    BYTE PTR [eax+0x2f5f83bc],bl
  41dafd:	lea    ebx,[edx+eiz*8+0x496757cd]
  41db04:	xor    eax,0x23162ed4
  41db09:	cmp    eax,DWORD PTR [ebx+0x3]
  41db0c:	mov    ch,0x9f
  41db0e:	inc    edi
  41db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db10:	cmc    
  41db11:	call   0xd780:0xf7da0a7f
  41db18:	(bad)  
  41db19:	dec    ebx
  41db1a:	jae    0x41dabc
  41db1c:	jb     0x41dadc
  41db1e:	or     DWORD PTR [ecx-0x432d4376],edx
  41db24:	push   ds
  41db25:	jnp    0x41db1a
  41db27:	or     eax,0x86b68ee4
  41db2c:	sar    BYTE PTR [edx-0x7b],cl
  41db2f:	push   ds
  41db30:	push   0x90aaefa0
  41db35:	lahf   
  41db36:	das    
  41db37:	push   ebp
  41db38:	ja     0x41db0d
  41db3a:	xchg   esi,eax
  41db3b:	clc    
  41db3c:	pop    ebx
  41db3d:	mov    BYTE PTR [esi-0x69388b5a],ch
  41db43:	loope  0x41db31
  41db45:	(bad)  
  41db46:	jnp    0x41dae9
  41db48:	xchg   ecx,eax
  41db49:	jae    0x41db14
  41db4b:	out    dx,al
  41db4c:	inc    eax
  41db4d:	or     eax,0x362a5604
  41db52:	inc    ecx
  41db53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db54:	mov    esi,fs
  41db56:	mov    ebp,0x1a76a529
  41db5b:	cwde   
  41db5c:	mov    cl,BYTE PTR [ecx+eiz*1-0x5756c8bf]
  41db63:	cmp    BYTE PTR [edi-0x53915303],ch
  41db69:	enter  0x112e,0xa6
  41db6d:	xchg   esi,eax
  41db6e:	idiv   DWORD PTR [eax]
  41db70:	fdiv   QWORD PTR [edi+ebp*1-0x6fc66179]
  41db77:	add    DWORD PTR [ebx-0x6659bf77],eax
  41db7d:	fdivr  QWORD PTR [esi]
  41db7f:	cmp    eax,0x8b723078
  41db84:	mov    dh,ah
  41db86:	out    dx,eax
  41db87:	cmc    
  41db88:	lea    edi,[edx+0x4d]
  41db8b:	loopne 0x41db42
  41db8d:	lea    ecx,[esi]
  41db8f:	in     eax,dx
  41db90:	pop    ss
  41db91:	mov    eax,ds:0x19c244a3
  41db96:	das    
  41db97:	into   
  41db98:	or     dh,BYTE PTR [esi]
  41db9a:	sbb    al,0xd8
  41db9c:	push   edx
  41db9d:	scas   eax,DWORD PTR es:[edi]
  41db9e:	ss mov ecx,0xa6c4e33c
  41dba4:	mov    ebp,0xc2eee091
  41dba9:	sub    BYTE PTR [edi],0xd2
  41dbac:	bound  edi,QWORD PTR [edx-0x24]
  41dbaf:	rcr    DWORD PTR [edi+0x77b34e08],cl
  41dbb5:	inc    edx
  41dbb6:	mov    dh,0x66
  41dbb8:	sub    eax,0x288d743d
  41dbbd:	mov    bh,0x2f
  41dbbf:	inc    esp
  41dbc0:	mov    edx,0xded9b6a
  41dbc5:	mov    edx,0xeb90a60d
  41dbca:	cld    
  41dbcb:	jb     0x41dbfe
  41dbcd:	jb     0x41dbde
  41dbcf:	add    al,0x8a
  41dbd1:	sub    ah,BYTE PTR [edi+0x79]
  41dbd4:	sar    DWORD PTR [eax-0x750593a5],cl
  41dbda:	mov    ebp,0x6c28e167
  41dbdf:	push   ss
  41dbe0:	stos   BYTE PTR es:[edi],al
  41dbe1:	pop    eax
  41dbe2:	adc    DWORD PTR [edi-0x59422e3e],0x7
  41dbe9:	add    edi,DWORD PTR [ebx]
  41dbeb:	aam    0x70
  41dbed:	ss xchg ebp,eax
  41dbef:	dec    esi
  41dbf0:	and    ecx,DWORD PTR [edi+edi*4+0x356ab02c]
  41dbf7:	mov    cl,ch
  41dbf9:	jge    0x41db9d
  41dbfb:	imul   eax,ebx,0xffffff8e
  41dbfe:	inc    ebx
  41dbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc00:	pcmpeqd mm4,QWORD PTR [eax+ebx*1+0x61]
  41dc05:	mov    bh,0xc5
  41dc07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc08:	stos   BYTE PTR es:[edi],al
  41dc09:	out    dx,eax
  41dc0a:	push   edx
  41dc0b:	jnp    0x41dc0e
  41dc0d:	adc    al,0x6b
  41dc0f:	mov    bh,0x8a
  41dc11:	xor    al,BYTE PTR [edi-0x75b80ec5]
  41dc17:	cdq    
  41dc18:	jae    0x41dba6
  41dc1a:	bound  ebp,QWORD PTR [edx-0x16f7d2b0]
  41dc20:	push   edx
  41dc21:	fldenv [ecx+0x2dd67609]
  41dc27:	repz and eax,0x4a4d25ab
  41dc2d:	and    BYTE PTR [esi-0x40],al
  41dc30:	pop    ss
  41dc31:	jmp    0x41dc37
  41dc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc34:	js     0x41dc2c
  41dc36:	jl     0x41dc8e
  41dc38:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41dc3a:	push   ss
  41dc3b:	cmp    cl,BYTE PTR [edx-0x6fd1b350]
  41dc41:	aam    0x8d
  41dc43:	test   BYTE PTR [ecx-0x73],al
  41dc46:	xor    BYTE PTR [eax-0x63],0xe6
  41dc4a:	push   esp
  41dc4b:	cdq    
  41dc4c:	jle    0x41dc46
  41dc4e:	fsubr  DWORD PTR cs:[eax-0x2a]
  41dc52:	xor    edi,ebx
  41dc54:	icebp  
  41dc55:	pusha  
  41dc56:	mov    ebx,0xd14479a6
  41dc5b:	mov    dl,BYTE PTR [ebx]
  41dc5d:	icebp  
  41dc5e:	dec    ebx
  41dc5f:	add    esp,esi
  41dc61:	or     BYTE PTR [edi-0x56],bl
  41dc64:	sbb    dh,BYTE PTR [eax+0x11]
  41dc67:	adc    cl,BYTE PTR [edx+0x1d]
  41dc6a:	pop    ss
  41dc6b:	aam    0x2d
  41dc6d:	(bad)  
  41dc6e:	std    
  41dc6f:	(bad)  
  41dc70:	mov    esi,0x43eb920e
  41dc75:	imul   DWORD PTR [esi]
  41dc77:	sub    al,0x60
  41dc79:	hlt    
  41dc7a:	pop    ss
  41dc7b:	push   0xa651e6d4
  41dc80:	loope  0x41dc92
  41dc82:	mov    eax,0xf9a0da1
  41dc87:	xor    ah,BYTE PTR [ebp+edx*1+0x9892d8e]
  41dc8e:	test   eax,0x4a05da4a
  41dc93:	add    eax,0x39888a16
  41dc98:	adc    ebp,DWORD PTR [ecx-0x2a027a0f]
  41dc9e:	pusha  
  41dc9f:	push   esi
  41dca0:	mov    dl,0xb9
  41dca2:	sub    al,0x8
  41dca4:	mov    ah,BYTE PTR [ebp-0x3545745b]
  41dcaa:	js     0x41dcf5
  41dcac:	retf   0x388d
  41dcaf:	push   0x5a
  41dcb1:	mov    bl,0x27
  41dcb3:	sub    DWORD PTR [ebx-0x7b],edx
  41dcb6:	xor    ch,BYTE PTR [esi-0x2]
  41dcb9:	mov    dl,0x72
  41dcbb:	jp     0x41dcb6
  41dcbd:	sbb    eax,0x8dc47db1
  41dcc2:	or     DWORD PTR [ebx+0x78],ecx
  41dcc5:	sti    
  41dcc6:	mov    dl,0x39
  41dcc8:	mov    edx,0x87112f3f
  41dccd:	inc    edi
  41dcce:	cmp    BYTE PTR [edx+0x2d],bl
  41dcd1:	lods   eax,DWORD PTR ds:[esi]
  41dcd2:	fsub   QWORD PTR [ebp-0x55573a51]
  41dcd8:	in     al,dx
  41dcd9:	fisttp WORD PTR [ebp-0x67]
  41dcdc:	lea    eax,[ecx-0x46d3e5d8]
  41dce2:	jo     0x41dd02
  41dce4:	jmp    0x9ce12832
  41dce9:	lea    ebx,[edi+0x7fff0d95]
  41dcef:	out    0x72,eax
  41dcf1:	addr16 das 
  41dcf3:	sub    BYTE PTR [eax-0x19],dl
  41dcf6:	imul   edx,DWORD PTR [edx-0x58cf6800],0x3d
  41dcfd:	sbb    eax,DWORD PTR [ebx]
  41dcff:	jmp    0xc672cf29
  41dd04:	call   0x2e0c:0x3fb2fa2
  41dd0b:	nop
  41dd0c:	fwait
  41dd0d:	xor    eax,0x21bfa5bf
  41dd12:	loop   0x41dcd0
  41dd14:	push   edi
  41dd15:	push   0x5f
  41dd17:	arpl   WORD PTR ds:0x4353351e,dx
  41dd1d:	stc    
  41dd1e:	(bad)  ds:0x3dd67fe9
  41dd24:	mov    ebp,0xcbdcef5d
  41dd29:	lea    edi,[ecx-0x10]
  41dd2c:	ins    BYTE PTR es:[edi],dx
  41dd2d:	scas   eax,DWORD PTR es:[edi]
  41dd2e:	mov    ch,0xc0
  41dd30:	(bad)  
  41dd31:	lahf   
  41dd32:	and    al,0xef
  41dd34:	jnp    0x41dcc3
  41dd36:	xchg   ecx,eax
  41dd37:	adc    eax,0x45681b4c
  41dd3c:	push   ecx
  41dd3d:	mov    al,BYTE PTR [esi-0x1e]
  41dd40:	dec    edi
  41dd41:	xor    esi,DWORD PTR [edx]
  41dd43:	imul   bh
  41dd45:	dec    ebp
  41dd46:	cdq    
  41dd47:	mov    ecx,0xfa00b28d
  41dd4c:	sbb    ebp,DWORD PTR [ecx]
  41dd4e:	and    BYTE PTR [esi],al
  41dd50:	and    al,0x88
  41dd52:	ja     0x41ddcf
  41dd54:	jno    0x41dce3
  41dd56:	fnstcw WORD PTR [esi]
  41dd58:	dec    edi
  41dd59:	pushf  
  41dd5a:	or     al,0xbc
  41dd5c:	or     al,0xa5
  41dd5e:	xor    eax,0xc32245c0
  41dd63:	out    0xc8,al
  41dd65:	jns    0x41dd5e
  41dd67:	sub    BYTE PTR [edi+0x5d],ch
  41dd6a:	pop    ebx
  41dd6b:	psubusw mm1,QWORD PTR [ebp+0x3a6cfe35]
  41dd72:	cmp    BYTE PTR ds:[ecx+0x10bc3065],0x76
  41dd7a:	push   0xffffff98
  41dd7c:	and    DWORD PTR [edi],0x5b
  41dd7f:	mov    DWORD PTR [ecx-0x65],0x8e2594b2
  41dd86:	sbb    ch,BYTE PTR [ebp+0x36]
  41dd89:	push   ebp
  41dd8a:	push   edi
  41dd8b:	shr    DWORD PTR [edi+0x73b226c9],0xd
  41dd92:	clc    
  41dd93:	jge    0x41dd3a
  41dd95:	mov    edx,0x8fdf5bf2
  41dd9a:	lea    ebp,[ebx]
  41dd9c:	hlt    
  41dd9d:	nop
  41dd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd9f:	add    cl,BYTE PTR [edx]
  41dda1:	cmp    dl,BYTE PTR [ecx+edi*4+0x41311809]
  41dda8:	outs   dx,DWORD PTR ds:[esi]
  41dda9:	test   eax,0x6d63bd81
  41ddae:	adc    eax,0xe18e0304
  41ddb3:	add    al,0xb2
  41ddb5:	(bad)  
  41ddb6:	cld    
  41ddb7:	sub    BYTE PTR [eax],al
  41ddb9:	cmp    al,0x2f
  41ddbb:	sub    eax,0x95badc45
  41ddc0:	outs   dx,BYTE PTR ds:[esi]
  41ddc1:	sub    esp,DWORD PTR [eax]
  41ddc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddc4:	(bad)  
  41ddc5:	cmp    al,0x31
  41ddc7:	dec    edx
  41ddc8:	test   al,0xfd
  41ddca:	(bad)  
  41ddcb:	in     eax,dx
  41ddcc:	mov    bl,BYTE PTR [ebp+0x36]
  41ddcf:	pop    ecx
  41ddd0:	jmp    0x528d:0xe31e0d19
  41ddd7:	in     eax,0x1b
  41ddd9:	jno    0x41dd6e
  41dddb:	mov    bl,0x2b
  41dddd:	push   esp
  41ddde:	das    
  41dddf:	mov    al,ds:0xb2c5a62f
  41dde4:	jbe    0x41ddb9
  41dde6:	jnp    0x41dd91
  41dde8:	mov    ds:0xea039635,eax
  41dded:	retf   0x3685
  41ddf0:	ins    DWORD PTR es:[edi],dx
  41ddf1:	add    DWORD PTR [ebx+esi*4-0x2ed08886],esp
  41ddf8:	inc    esi
  41ddf9:	or     eax,0x95dc33c1
  41ddfe:	and    BYTE PTR [ecx+0x3d],bl
  41de01:	lea    ecx,[ebp+0x504c3251]
  41de07:	or     ch,al
  41de09:	hlt    
  41de0a:	or     DWORD PTR cs:[esi],ecx
  41de0d:	mov    ah,0xf7
  41de0f:	jb     0x41de23
  41de11:	clc    
  41de12:	add    BYTE PTR [esi-0xe],bl
  41de15:	repz cs cmp eax,0xd2164cab
  41de1c:	cmp    ebx,DWORD PTR ds:0x7b8baedb
  41de22:	enter  0xa860,0x2b
  41de26:	sbb    bh,bl
  41de28:	push   esi
  41de29:	xchg   ebp,eax
  41de2a:	fwait
  41de2b:	nop
  41de2c:	xchg   ebx,eax
  41de2d:	inc    esi
  41de2e:	and    eax,0xf37e885f
  41de33:	les    ecx,FWORD PTR [edx+esi*8]
  41de36:	out    dx,al
  41de37:	fadd   QWORD PTR [ebp+edx*2-0x19]
  41de3b:	jge    0x41ddc7
  41de3d:	clc    
  41de3e:	into   
  41de3f:	and    eax,0x2e795b9d
  41de44:	aas    
  41de45:	lea    ecx,[ebp+edi*4-0x1cebe8b8]
  41de4c:	test   al,0x4
  41de4e:	das    
  41de4f:	test   esi,0xc0013d36
  41de55:	mov    ebp,0x8d9fd3db
  41de5a:	pushf  
  41de5b:	dec    ecx
  41de5c:	ja     0x41dec5
  41de5e:	xchg   edi,eax
  41de5f:	aad    0x72
  41de61:	jecxz  0x41de91
  41de63:	call   0x7923:0x3a927e51
  41de6a:	cwde   
  41de6b:	push   ebx
  41de6c:	push   0xffffff8d
  41de6e:	rcr    DWORD PTR [esi-0x7fd01ee5],cl
  41de74:	mov    DWORD PTR [ecx],edi
  41de76:	das    
  41de77:	sub    eax,0xbe9f6d8c
  41de7c:	inc    esp
  41de7d:	mov    al,ds:0xef7495d7
  41de82:	and    BYTE PTR [edi],0x6f
  41de85:	adc    DWORD PTR [edx],esi
  41de87:	(bad)  
  41de88:	xor    bl,BYTE PTR [edx]
  41de8a:	add    eax,0x48e57e1c
  41de8f:	xchg   ecx,eax
  41de90:	pop    ecx
  41de91:	lea    ebp,[edx+0x55181eab]
  41de97:	jae    0x41dee2
  41de99:	js     0x41deca
  41de9b:	pop    es
  41de9c:	icebp  
  41de9d:	test   DWORD PTR [edi],esi
  41de9f:	(bad)  
  41dea1:	loope  0x41de96
  41dea3:	test   al,0x22
  41dea5:	push   ecx
  41dea6:	pop    esi
  41dea7:	push   eax
  41dea8:	scas   al,BYTE PTR es:[edi]
  41dea9:	lea    ebp,[ecx]
  41deab:	retf   
  41deac:	iret   
  41dead:	sbb    eax,DWORD PTR [ecx-0x2d]
  41deb0:	les    esi,FWORD PTR ds:0xf3affc2f
  41deb6:	mov    ch,0x37
  41deb8:	sub    al,0x8d
  41deba:	push   edx
  41debb:	sti    
  41debc:	push   ebp
  41debd:	(bad)  
  41debe:	sbb    dh,ah
  41dec0:	pop    esi
  41dec1:	bound  ebp,QWORD PTR [edi]
  41dec3:	xchg   edi,eax
  41dec4:	outs   dx,DWORD PTR ds:[esi]
  41dec5:	shl    DWORD PTR [edx+0x6e],cl
  41dec8:	push   ss
  41dec9:	lock lahf 
  41decb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41decc:	xor    bh,BYTE PTR [eax+0x604abce9]
  41ded2:	rol    cl,cl
  41ded4:	mov    al,BYTE PTR [ecx-0x7d]
  41ded7:	sbb    ch,BYTE PTR [eax]
  41ded9:	imul   eax,DWORD PTR [eax+0x7efe7eaf],0xffffff81
  41dee0:	inc    edi
  41dee1:	mov    ds:0xcd4b4214,al
  41dee6:	inc    ecx
  41dee7:	(bad)  
  41dee8:	fld    DWORD PTR [ecx-0x47755462]
  41deee:	fstp   st(3)
  41def0:	cwde   
  41def1:	dec    esp
  41def2:	cli    
  41def3:	(bad)  
  41def4:	ror    BYTE PTR [ebp+0x66a23485],1
  41defa:	pushf  
  41defb:	cmp    eax,0xcb31ee8b
  41df00:	fiadd  DWORD PTR [edi+0x3a]
  41df03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df04:	xchg   ebx,eax
  41df05:	cmp    eax,0x88268032
  41df0a:	fdivr  QWORD PTR [esp+esi*1+0x792633a0]
  41df11:	aaa    
  41df12:	rol    BYTE PTR [eax-0x76],0x63
  41df16:	fs imul ebx,edi,0xffffffa3
  41df1a:	sbb    eax,0xc8dbbaf
  41df1f:	dec    esi
  41df20:	inc    ebx
  41df21:	xor    edx,DWORD PTR [edx+0x2f3b5ae5]
  41df27:	mov    eax,0xa4ba1d3f
  41df2c:	std    
  41df2d:	pushf  
  41df2e:	mov    eax,ds:0x18fd9aa6
  41df33:	in     eax,dx
  41df34:	pop    edi
  41df35:	cmp    ch,BYTE PTR [edx]
  41df37:	mov    DWORD PTR [edx-0x4e65b9f5],ecx
  41df3d:	jecxz  0x41df1c
  41df3f:	sbb    esp,DWORD PTR [esi-0x73]
  41df42:	and    BYTE PTR [ecx+0x36056e23],0x55
  41df49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df4a:	xor    ecx,edx
  41df4c:	add    BYTE PTR ds:[edx-0x5172d22c],bh
  41df53:	mov    bl,0x8e
  41df55:	jb     0x41df7b
  41df57:	mov    dx,0x2ef6
  41df5b:	sbb    BYTE PTR [edx],ch
  41df5d:	lahf   
  41df5e:	adc    bl,BYTE PTR [ecx-0x5acd644a]
  41df64:	xor    ch,bh
  41df66:	jb     0x41df75
  41df68:	xor    eax,0x2086506f
  41df6d:	loope  0x41dfde
  41df6f:	pop    edx
  41df70:	mov    al,BYTE PTR [edi+0x1b814e25]
  41df76:	jnp    0x41df1d
  41df78:	std    
  41df79:	lea    ebp,[ecx]
  41df7b:	jp     0x41df0b
  41df7d:	sub    dh,ah
  41df7f:	outs   dx,DWORD PTR ds:[esi]
  41df80:	sbb    edi,esp
  41df82:	cs push ds
  41df84:	push   ebx
  41df85:	or     esi,eax
  41df87:	sub    DWORD PTR [eax],edx
  41df89:	mov    ebx,0x8da6da5d
  41df8e:	in     al,dx
  41df8f:	adc    al,0x85
  41df91:	test   al,0xca
  41df93:	enter  0x5969,0x2f
  41df97:	in     al,dx
  41df98:	xor    BYTE PTR [ebp+0x69ca461],bh
  41df9e:	and    BYTE PTR [esi-0xd1390a9],0x6f
  41dfa5:	in     eax,0xac
  41dfa7:	mov    edx,0x1264cf88
  41dfac:	pop    ss
  41dfad:	jo     0x41df56
  41dfaf:	(bad)  
  41dfb0:	outs   dx,DWORD PTR ds:[esi]
  41dfb1:	xchg   cx,ax
  41dfb3:	mov    eax,ds:0xf9e39e7d
  41dfb8:	stos   BYTE PTR es:[edi],al
  41dfb9:	scas   eax,DWORD PTR es:[edi]
  41dfba:	xchg   esi,eax
  41dfbb:	push   es
  41dfbc:	out    0x96,al
  41dfbe:	inc    esp
  41dfbf:	or     edi,esp
  41dfc1:	jg     0x41df71
  41dfc3:	inc    ebx
  41dfc4:	push   edi
  41dfc5:	cmc    
  41dfc6:	sahf   
  41dfc7:	sbb    BYTE PTR [eax+0x46],dl
  41dfca:	(bad)  
  41dfcb:	xlat   BYTE PTR ds:[ebx]
  41dfcc:	and    eax,0x2d833c8d
  41dfd1:	pop    esi
  41dfd2:	or     DWORD PTR [edi-0x39],esi
  41dfd5:	xchg   ebx,eax
  41dfd6:	das    
  41dfd7:	in     eax,dx
  41dfd8:	mov    DWORD PTR [edx-0x66],ebp
  41dfdb:	fdivr  DWORD PTR [edi+0x32a5d6e3]
  41dfe1:	add    ebp,ecx
  41dfe3:	adc    al,0x13
  41dfe5:	jae    0x41e05f
  41dfe7:	int    0x8a
  41dfe9:	stos   BYTE PTR es:[edi],al
  41dfea:	les    ebx,FWORD PTR [edx]
  41dfec:	dec    edx
  41dfed:	fdivr  QWORD PTR ds:0xce8dc762
  41dff3:	pushf  
  41dff4:	aam    0x26
  41dff6:	pop    eax
  41dff7:	sub    al,0xab
  41dff9:	in     eax,dx
  41dffa:	mov    es,WORD PTR cs:[edi-0x16]
  41dffe:	in     eax,0x32
  41e000:	(bad)  
  41e001:	push   esi
  41e002:	and    DWORD PTR [esi-0x2f6d6cd8],esp
  41e008:	ret    
  41e009:	jl     0x41e04b
  41e00b:	shufps xmm3,XMMWORD PTR [eax+0x1d],0x26
  41e010:	rcr    BYTE PTR [edx-0x4b8bc627],1
  41e016:	mov    ecx,0x4756bfa6
  41e01b:	outs   dx,BYTE PTR ds:[esi]
  41e01c:	js     0x41dfc2
  41e01e:	inc    esi
  41e01f:	pop    eax
  41e020:	mov    eax,DWORD PTR [eax]
  41e022:	push   ds
  41e023:	js     0x41e04f
  41e025:	sahf   
  41e026:	or     edi,esp
  41e028:	retf   0xf30
  41e02b:	clc    
  41e02c:	popa   
  41e02d:	lea    edx,[esi]
  41e02f:	call   0xb3104519
  41e034:	fld    DWORD PTR [eax+0x2f]
  41e037:	add    BYTE PTR [esp+edx*8],0xba
  41e03b:	jmp    0x612e:0xa64a7341
  41e042:	mov    edx,0xd885ef2b
  41e047:	(bad)  
  41e04a:	cs out dx,al
  41e04c:	popf   
  41e04d:	or     ecx,DWORD PTR [esi+edi*8-0x7d]
  41e051:	dec    esi
  41e052:	cli    
  41e053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e054:	cs jb  0x41dfda
  41e057:	add    bl,ch
  41e059:	ror    dh,cl
  41e05b:	cli    
  41e05c:	mov    dh,cl
  41e05e:	adc    al,0x6d
  41e060:	inc    eax
  41e061:	and    dl,0xab
  41e064:	jge    0x41dff3
  41e066:	mov    ebx,0xef4b725a
  41e06b:	cmp    DWORD PTR [edi],0xffffffd8
  41e06e:	xor    eax,0x1ad47c59
  41e073:	retw   
  41e075:	mov    dl,0x89
  41e077:	mov    al,0xc8
  41e079:	lea    edx,[edi]
  41e07b:	xor    eax,0x74267eb0
  41e080:	push   ss
  41e081:	(bad)  
  41e082:	xor    bl,BYTE PTR [edi+esi*8]
  41e085:	cli    
  41e086:	sub    eax,0xdd0d748a
  41e08b:	jmp    0xeaac:0xb6ef8f53
  41e092:	mov    DWORD PTR [ecx],eax
  41e094:	or     bl,bl
  41e096:	fwait
  41e097:	clc    
  41e098:	dec    esi
  41e099:	mov    ebp,0x2e8a2c57
  41e09e:	aaa    
  41e09f:	adc    al,0xab
  41e0a1:	mov    ebx,0x8daa05d4
  41e0a6:	in     eax,dx
  41e0a7:	in     al,0x3a
  41e0a9:	pop    edi
  41e0aa:	call   0x848b:0x2f1d9865
  41e0b1:	xchg   ebx,eax
  41e0b2:	xor    al,0x8e
  41e0b4:	dec    ebp
  41e0b5:	adc    eax,0x7c0ab57a
  41e0ba:	fisub  DWORD PTR [esi+eax*4+0x3a7980b2]
  41e0c1:	test   BYTE PTR [ebx+0x33],cl
  41e0c4:	out    0x1,al
  41e0c6:	leave  
  41e0c7:	push   eax
  41e0c8:	clc    
  41e0c9:	(bad)  
  41e0ca:	das    
  41e0cb:	jle    0x41e059
  41e0cd:	sub    eax,0xd6bb61cf
  41e0d2:	sti    
  41e0d3:	stos   BYTE PTR es:[edi],al
  41e0d4:	ret    0x7a3
  41e0d7:	push   ebp
  41e0d8:	bound  ecx,QWORD PTR ds:0xe32952bc
  41e0de:	test   DWORD PTR cs:[esi-0x2266fe4a],ebx
  41e0e5:	mov    ?,WORD PTR [edi]
  41e0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0e8:	mov    WORD PTR [ebx+esi*1],es
  41e0eb:	or     ebx,DWORD PTR [ebx-0x72340ca4]
  41e0f1:	call   0xdb2f:0x2f4cb0ba
  41e0f8:	push   0xc8a66c0c
  41e0fd:	hlt    
  41e0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ff:	out    dx,al
  41e100:	sbb    WORD PTR [ebp-0x3c847578],bx
  41e107:	inc    ebx
  41e108:	cmp    DWORD PTR [edx-0x6],esp
  41e10b:	fbstp  TBYTE PTR [edx-0x659aff73]
  41e111:	call   DWORD PTR [edi+0x44a43628]
  41e117:	jmp    0x41e0d6
  41e119:	push   ecx
  41e11a:	jb     0x41e18b
  41e11c:	jmp    0xa9787e0f
  41e121:	sub    DWORD PTR [ecx+0x1bce7da6],edi
  41e127:	mov    WORD PTR ds:0xc689a301,es
  41e12d:	pop    esi
  41e12e:	bound  esp,QWORD PTR [esi]
  41e130:	data16 loop 0x41e14f
  41e133:	sbb    DWORD PTR [ebx-0x1],edx
  41e136:	jle    0x41e16e
  41e138:	mov    edx,0x69d1658f
  41e13d:	daa    
  41e13e:	mov    ds:0x38234a11,eax
  41e143:	lods   eax,DWORD PTR ds:[esi]
  41e144:	mov    ebx,eax
  41e146:	adc    eax,esi
  41e148:	adc    al,0xf8
  41e14a:	shr    BYTE PTR [esi-0x16],cl
  41e14d:	mov    bh,0xb0
  41e14f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e150:	sbb    eax,0xdba3534e
  41e155:	arpl   ax,cx
  41e157:	out    0x8e,al
  41e159:	outs   dx,DWORD PTR ds:[esi]
  41e15a:	loope  0x41e156
  41e15c:	xor    ebp,DWORD PTR [ebx]
  41e15e:	mov    dl,0xf4
  41e160:	outs   dx,BYTE PTR ds:[esi]
  41e161:	or     eax,0x8dc39e80
  41e166:	push   eax
  41e167:	lock loop 0x41e184
  41e16a:	sar    cl,1
  41e16c:	enter  0x655e,0x4
  41e170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e171:	stc    
  41e172:	sub    ebx,esp
  41e174:	mov    bl,bh
  41e176:	mov    WORD PTR [edx],fs
  41e178:	lods   eax,DWORD PTR ds:[esi]
  41e179:	cmp    al,0x64
  41e17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e17c:	lds    esp,FWORD PTR [eax+0x31]
  41e17f:	loopne 0x41e13d
  41e181:	and    eax,0x798ac81a
  41e186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e187:	pushw  es
  41e189:	addr16 xchg ebp,eax
  41e18b:	mov    edi,0x1fdf8ded
  41e190:	test   al,0x4b
  41e192:	bound  ecx,QWORD PTR [edi-0x36d5c9db]
  41e198:	cwde   
  41e199:	xchg   esi,eax
  41e19a:	sbb    al,0x67
  41e19d:	lea    edx,[eax]
  41e19f:	cs int 0x8a
  41e1a2:	adc    DWORD PTR [esi+0x71eabdb8],esp
  41e1a8:	pop    esp
  41e1a9:	or     dl,BYTE PTR [esi]
  41e1ab:	out    dx,al
  41e1ac:	lea    esi,[edi-0x46227336]
  41e1b2:	das    
  41e1b3:	push   ecx
  41e1b4:	jmp    0x41e20f
  41e1b6:	aas    
  41e1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b8:	shl    BYTE PTR [edx-0x69095abe],cl
  41e1be:	enter  0x8ac9,0xa1
  41e1c2:	div    BYTE PTR [esi+0x26]
  41e1c5:	data16 sub BYTE PTR [esi+eax*8-0x3b],dl
  41e1ca:	sub    cl,BYTE PTR [ecx+0x25]
  41e1cd:	fistp  QWORD PTR [ecx+eiz*4+0x26cf2562]
  41e1d4:	lock mov edi,0x888a6feb
  41e1da:	test   DWORD PTR [ebp+0x52fb0520],ebx
  41e1e0:	mov    DWORD PTR [ebp+0x70cd28cb],ecx
  41e1e6:	push   edx
  41e1e7:	xchg   edx,eax
  41e1e8:	dec    ebx
  41e1e9:	jno    0x41e21a
  41e1eb:	pop    ds
  41e1ec:	rcl    DWORD PTR [edx-0x63],cl
  41e1ef:	xor    eax,0xa8ef37e2
  41e1f4:	jb     0x41e21d
  41e1f6:	sub    BYTE PTR [ebx-0x52],bl
  41e1f9:	mov    edx,0x43f6b69a
  41e1fe:	pop    edi
  41e1ff:	mov    eax,ds:0x1bf420c0
  41e204:	lods   al,BYTE PTR ds:[esi]
  41e205:	ins    BYTE PTR es:[edi],dx
  41e206:	cmp    esp,DWORD PTR [edx]
  41e208:	mov    bl,BYTE PTR [esp+ecx*1]
  41e20b:	add    ebp,esp
  41e20d:	sub    ch,cl
  41e20f:	dec    ebx
  41e210:	xchg   BYTE PTR [ebp-0x4cdc5c],cl
  41e216:	sbb    DWORD PTR [ebx],edi
  41e218:	jbe    0x41e243
  41e21a:	das    
  41e21b:	jp     0x41e276
  41e21d:	(bad)  
  41e21e:	iret   
  41e21f:	sbb    al,0x58
  41e221:	sti    
  41e222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e224:	arpl   ax,bx
  41e226:	dec    eax
  41e227:	std    
  41e228:	mov    edi,0x5b56b425
  41e22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22e:	das    
  41e22f:	add    ebx,ecx
  41e231:	and    cl,ah
  41e233:	retf   0x8c5a
  41e236:	sbb    eax,0x66e302a6
  41e23b:	dec    ebx
  41e23c:	repz xor DWORD PTR ds:0x68658bc7,0x2e
  41e244:	ja     0x41e1ea
  41e246:	push   ebp
  41e247:	mov    esi,0xa64c42aa
  41e24c:	out    0x87,al
  41e24e:	inc    esi
  41e24f:	fiadd  DWORD PTR [ebp+0x2744b216]
  41e255:	pop    ebp
  41e256:	iret   
  41e257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e258:	add    dh,BYTE PTR [edi]
  41e25a:	xor    cl,ch
  41e25c:	repnz fnstcw WORD PTR [ebp+0x2bc29776]
  41e263:	bound  ecx,QWORD PTR [edx+0x85a90ca]
  41e269:	sahf   
  41e26a:	pop    edi
  41e26b:	sbb    ecx,DWORD PTR [esi-0x9]
  41e26e:	dec    eax
  41e26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e270:	jnp    0x41e268
  41e272:	jne    0x41e28b
  41e274:	mov    eax,ds:0x8295dc55
  41e279:	mov    ds:0x56b93b2f,al
  41e27e:	xor    BYTE PTR [esi+0x8],ch
  41e281:	call   0xa087:0xbc5ba6c3
  41e288:	adc    bl,BYTE PTR [edi+0x2d]
  41e28b:	mov    eax,0xa1608fd2
  41e290:	outs   dx,BYTE PTR ds:[esi]
  41e291:	js     0x41e2bf
  41e293:	push   es
  41e294:	fstp   st(0)
  41e296:	hlt    
  41e297:	sub    DWORD PTR [esi],ebp
  41e299:	in     eax,dx
  41e29a:	and    eax,0xa61002a6
  41e29f:	daa    
  41e2a0:	repnz dec esp
  41e2a2:	lods   eax,DWORD PTR ds:[esi]
  41e2a3:	inc    ecx
  41e2a4:	mov    bh,BYTE PTR [esi]
  41e2a6:	add    dh,dh
  41e2a8:	pop    ds
  41e2a9:	mov    eax,ds:0x8d6d1b6d
  41e2ae:	push   es
  41e2af:	push   ecx
  41e2b0:	xchg   edi,eax
  41e2b1:	js     0x41e25f
  41e2b3:	or     BYTE PTR [edi+0x54fc2f85],dh
  41e2b9:	mov    bh,0x65
  41e2bb:	push   0xffffff91
  41e2bd:	mov    esp,0x5a72a7a2
  41e2c2:	mov    al,ds:0x65fee907
  41e2c7:	push   edi
  41e2c8:	jnp    0x41e2c2
  41e2ca:	ficom  WORD PTR [ebp-0x481fb4ef]
  41e2d0:	cld    
  41e2d1:	xchg   esi,eax
  41e2d2:	das    
  41e2d3:	jns    0x41e2ec
  41e2d5:	call   0xafd6:0x1161ef2b
  41e2dc:	dec    edi
  41e2dd:	or     eax,0x95a2a6b9
  41e2e2:	push   ecx
  41e2e3:	add    eax,0xf35a4b3b
  41e2e8:	into   
  41e2e9:	jmp    FWORD PTR [esi+0x7d]
  41e2ec:	out    0x55,eax
  41e2ee:	adc    eax,DWORD PTR ss:[ebx]
  41e2f1:	mov    ebx,0x4a1d269e
  41e2f6:	call   0xd83:0xd78ddc7b
  41e2fd:	fcomp  DWORD PTR [ebp-0x75]
  41e300:	push   ss
  41e301:	cld    
  41e302:	cs dec ebx
  41e304:	cmp    DWORD PTR [ecx],eax
  41e306:	jge    0x41e35b
  41e308:	ret    0x9f88
  41e30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e30c:	add    ebx,ebx
  41e30e:	xchg   edi,eax
  41e30f:	jg     0x41e2cf
  41e311:	mov    WORD PTR [eax],fs
  41e313:	ins    DWORD PTR es:[edi],dx
  41e314:	mov    DWORD PTR [ebp+0x242909f8],edi
  41e31a:	inc    ecx
  41e31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31c:	xchg   edx,eax
  41e31d:	or     al,0x25
  41e31f:	fcomp  DWORD PTR [ebx+0x57]
  41e322:	aam    0x5c
  41e324:	mov    ebp,esp
  41e326:	or     al,0x59
  41e328:	frstor [ebx-0x2b]
  41e32b:	or     bl,BYTE PTR [edx+0x43]
  41e32e:	xor    DWORD PTR [esi+0x549e0e1b],esp
  41e334:	mov    cl,0x67
  41e336:	dec    edi
  41e337:	retf   
  41e338:	mov    bl,BYTE PTR [eax]
  41e33a:	inc    edx
  41e33b:	rcr    eax,1
  41e33d:	leave  
  41e33e:	shr    DWORD PTR [edx],0x36
  41e341:	(bad)  
  41e342:	jmp    0x41e38f
  41e344:	xor    eax,0xc2ab7e91
  41e349:	jg     0x41e37a
  41e34b:	repnz repz mul BYTE PTR [esi-0x39]
  41e350:	sub    al,0xba
  41e352:	pop    es
  41e353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e354:	call   0xa88a:0xcb5c9593
  41e35b:	cmp    edx,DWORD PTR [ebp-0x633d56ae]
  41e361:	xor    al,0x87
  41e363:	sub    ebp,esi
  41e365:	mov    esi,0xae6b5f3f
  41e36a:	push   0xffffffb1
  41e36c:	xchg   BYTE PTR [esi-0x70],ah
  41e36f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e370:	test   BYTE PTR [ebx+0x69bb3fa9],cl
  41e376:	das    
  41e377:	and    eax,0xea760827
  41e37c:	adc    DWORD PTR [edi+0x1d],edi
  41e37f:	stos   BYTE PTR es:[edi],al
  41e380:	sti    
  41e381:	rol    BYTE PTR [ebp+0x12cfb809],0xd8
  41e388:	std    
  41e389:	in     eax,dx
  41e38a:	mov    ds:0x28d1ccb,eax
  41e38f:	add    al,0x4f
  41e391:	xchg   ebx,eax
  41e392:	sbb    al,0xba
  41e394:	xchg   ebx,eax
  41e395:	hlt    
  41e396:	and    bh,bh
  41e398:	aam    0x2b
  41e39a:	adc    al,0x73
  41e39c:	mov    dl,cl
  41e39e:	stos   BYTE PTR es:[edi],al
  41e39f:	andps  xmm6,XMMWORD PTR ds:[edi-0x5a]
  41e3a4:	and    eax,DWORD PTR [edx]
  41e3a6:	test   eax,0x16af8921
  41e3ab:	out    0x8a,eax
  41e3ad:	scas   al,BYTE PTR es:[edi]
  41e3ae:	mov    bh,0x34
  41e3b0:	mov    cl,0x7b
  41e3b2:	rcl    BYTE PTR [esi+0x34fc8d3e],0x31
  41e3b9:	daa    
  41e3ba:	nop
  41e3bb:	jae    0x41e349
  41e3bd:	shr    DWORD PTR [edi],cl
  41e3bf:	enter  0x7ed0,0xd9
  41e3c3:	jae    0x41e3b6
  41e3c5:	data16 fild QWORD PTR [edi-0x1ccd7547]
  41e3cc:	pop    ss
  41e3cd:	or     edx,DWORD PTR [edi+0x1e246]
  41e3d3:	sbb    DWORD PTR [edx-0x614d0eb4],ecx
  41e3d9:	dec    ecx
  41e3da:	adc    edx,eax
  41e3dc:	imul   ecx,DWORD PTR [ebp+0x6fb7c736],0x9b26fd21
  41e3e6:	das    
  41e3e7:	fsub   QWORD PTR [edi-0x74]
  41e3ea:	mov    ecx,0x8bf1a529
  41e3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3f0:	jno    0x41e406
  41e3f2:	xchg   esi,eax
  41e3f3:	in     eax,0x40
  41e3f5:	or     al,0x64
  41e3f7:	mov    cl,BYTE PTR [edx+0x4ecb5879]
  41e3fd:	pop    ss
  41e3fe:	mov    DWORD PTR [edx],edi
  41e400:	stos   BYTE PTR es:[edi],al
  41e401:	lea    esi,[ebx-0xf]
  41e404:	mov    eax,ds:0x7fa21d78
  41e409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e40a:	das    
  41e40b:	clc    
  41e40c:	ss mov cl,BYTE PTR es:[esi+0x7d]
  41e411:	cmp    al,0x75
  41e413:	mov    al,ds:0x3ef2b0d4
  41e418:	or     ch,BYTE PTR [eax]
  41e41a:	dec    ebx
  41e41b:	les    eax,FWORD PTR [ebp-0x164cd0d6]
  41e421:	sub    DWORD PTR [ecx-0x2fcded98],edx
  41e427:	pop    ebp
  41e428:	jo     0x41e41e
  41e42a:	inc    ebp
  41e42b:	jecxz  0x41e43b
  41e42d:	sbb    edx,DWORD PTR [edi]
  41e42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e430:	sbb    BYTE PTR [ebx],bh
  41e432:	mov    edx,0x2fa95480
  41e437:	leave  
  41e438:	or     al,0xf6
  41e43a:	push   edx
  41e43b:	push   edi
  41e43c:	lock and eax,0xb51aa923
  41e442:	arpl   WORD PTR [ecx],bp
  41e444:	std    
  41e445:	popf   
  41e446:	ror    DWORD PTR [edx],cl
  41e448:	(bad)  
  41e449:	or     BYTE PTR [esi],dh
  41e44b:	inc    esi
  41e44c:	scas   eax,DWORD PTR es:[edi]
  41e44d:	jbe    0x41e4c6
  41e44f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e451:	mov    al,0xa1
  41e453:	jg     0x41e4c3
  41e455:	lea    ecx,[edx+eiz*8+0x50]
  41e459:	jne    0x41e48f
  41e45b:	scas   eax,DWORD PTR es:[edi]
  41e45c:	lahf   
  41e45d:	inc    esp
  41e45e:	inc    ecx
  41e45f:	lea    esi,[eax]
  41e461:	sub    BYTE PTR [eax],dh
  41e463:	sub    DWORD PTR [eax],esp
  41e465:	or     cl,dl
  41e467:	ss dec esi
  41e469:	pop    es
  41e46a:	dec    esi
  41e46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e46c:	stos   DWORD PTR es:[edi],eax
  41e46d:	xor    al,0xb1
  41e46f:	xchg   ecx,eax
  41e470:	aaa    
  41e471:	cdq    
  41e472:	dec    edx
  41e473:	ret    0x2a1f
  41e476:	fdiv   st(2),st
  41e478:	mov    DWORD PTR [ecx-0x406b66d3],edx
  41e47e:	mov    DWORD PTR [edx+0x68],ebx
  41e481:	xchg   edx,eax
  41e482:	mov    ebx,0x11eab2d0
  41e487:	sub    BYTE PTR [edx],bh
  41e489:	les    esi,FWORD PTR [esi]
  41e48b:	push   es
  41e48c:	inc    ebx
  41e48d:	xchg   edi,eax
  41e48e:	xchg   DWORD PTR [esi+0x59],eax
  41e491:	inc    ebp
  41e492:	stc    
  41e493:	xor    al,0xa
  41e495:	lea    esi,[ecx]
  41e497:	sub    eax,0x7bdab139
  41e49c:	mov    esp,0x896a2415
  41e4a1:	add    BYTE PTR [edi],ch
  41e4a3:	aad    0x61
  41e4a5:	imul   edx,edx,0x6e
  41e4a8:	add    ebp,DWORD PTR [esi*4-0x34f58d5a]
  41e4af:	fbld   TBYTE PTR [edi]
  41e4b1:	mov    esp,0xf8a6b88
  41e4b6:	nop
  41e4b7:	mov    ch,0x18
  41e4b9:	and    DWORD PTR [esi],eax
  41e4bb:	arpl   WORD PTR [ecx*4-0x282435df],si
  41e4c2:	ja     0x41e4e7
  41e4c4:	mov    BYTE PTR [ebx],ch
  41e4c6:	xor    ecx,edx
  41e4c8:	pop    ebx
  41e4c9:	rcr    DWORD PTR [ebx],cl
  41e4cb:	fs sub ch,0x3b
  41e4cf:	scas   al,BYTE PTR es:[edi]
  41e4d0:	sub    DWORD PTR [ebp-0x24d51395],ecx
  41e4d6:	mov    ch,0x6c
  41e4d8:	out    0xc4,al
  41e4da:	cs stos BYTE PTR es:[edi],al
  41e4dc:	push   ebx
  41e4dd:	inc    eax
  41e4de:	es pop ebp
  41e4e0:	iret   
  41e4e1:	in     eax,dx
  41e4e2:	jo     0x41e4c7
  41e4e4:	adc    cl,ch
  41e4e6:	into   
  41e4e7:	imul   BYTE PTR [edi-0x73]
  41e4ea:	mov    esi,0xb3d523b4
  41e4ef:	cmp    dl,BYTE PTR [ebx]
  41e4f1:	shl    BYTE PTR [esp+esi*8],cl
  41e4f4:	loop   0x41e548
  41e4f6:	arpl   WORD PTR [esi+0x14ac2fc1],sp
  41e4fc:	cdq    
  41e4fd:	lea    edx,ds:0x11a14c4
  41e503:	fisttp DWORD PTR [edx+0x5e]
  41e506:	repz dec ecx
  41e508:	loop   0x41e557
  41e50a:	lea    eax,[ecx]
  41e50c:	rcl    BYTE PTR [edi+0xa],0xb1
  41e510:	call   0x15e7ca91
  41e515:	(bad)  
  41e516:	xor    DWORD PTR [esi],eax
  41e518:	jne    0x41e4c1
  41e51a:	jg     0x41e4ab
  41e51c:	daa    
  41e51d:	imul   BYTE PTR [esi]
  41e51f:	xchg   BYTE PTR [edx-0x5a],ah
  41e522:	inc    eax
  41e523:	in     eax,dx
  41e524:	dec    esp
  41e525:	adc    DWORD PTR [edi],ebp
  41e527:	mov    edi,ebp
  41e529:	sahf   
  41e52a:	mov    edi,0x1fdf0fb
  41e52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e530:	push   0x25477f3e
  41e535:	xor    bh,bh
  41e537:	pop    ebp
  41e538:	mov    al,BYTE PTR [ecx-0x587f72df]
  41e53e:	out    0xc2,al
  41e540:	dec    ebp
  41e541:	and    BYTE PTR ds:0x812dfca6,0xf8
  41e548:	mov    ah,0x10
  41e54a:	lock clc 
  41e54c:	mov    dh,BYTE PTR [ecx]
  41e54e:	add    BYTE PTR [ebp+0x2f],cl
  41e551:	jns    0x41e599
  41e553:	(bad)  
  41e554:	in     eax,0xa0
  41e556:	cld    
  41e557:	cmp    DWORD PTR [esi+0x4c],ebp
  41e55a:	sbb    DWORD PTR ds:0xf63006d0,edx
  41e560:	jno    0x41e5d2
  41e562:	das    
  41e563:	inc    esp
  41e564:	mov    bl,0x49
  41e566:	lods   eax,DWORD PTR ds:[esi]
  41e567:	adc    BYTE PTR [edx],bl
  41e569:	add    ecx,DWORD PTR [ecx-0x59]
  41e56c:	sub    al,0x2c
  41e56e:	add    esp,DWORD PTR [edi]
  41e570:	sbb    esp,DWORD PTR ds:0x34e3ce2a
  41e576:	das    
  41e577:	lods   eax,DWORD PTR ds:[esi]
  41e578:	rcr    BYTE PTR ds:[ecx+0x66928e17],cl
  41e57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e580:	jo     0x41e5ba
  41e582:	push   es
  41e583:	fimul  WORD PTR [ecx-0x17]
  41e586:	into   
  41e587:	mov    BYTE PTR [eax+0x620636ab],cl
  41e58d:	inc    ebp
  41e58e:	jg     0x41e5f7
  41e590:	sub    DWORD PTR [ecx-0x7fa5dd27],0x5924a663
  41e59a:	adc    eax,0x8afe656a
  41e59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a0:	mov    dh,ch
  41e5a2:	mov    dl,0x33
  41e5a4:	push   edx
  41e5a5:	clc    
  41e5a6:	pop    ds
  41e5a7:	(bad)  
  41e5a8:	add    al,0x8e
  41e5aa:	outs   dx,DWORD PTR ds:[esi]
  41e5ab:	out    dx,al
  41e5ac:	test   DWORD PTR ds:0x6d156ea7,eax
  41e5b2:	das    
  41e5b3:	or     BYTE PTR [eax],cl
  41e5b5:	mov    ch,0x5b
  41e5b7:	jge    0x41e5d0
  41e5b9:	fisubr WORD PTR [edi-0x5a]
  41e5bc:	shl    esp,0x88
  41e5bf:	sub    dl,al
  41e5c1:	inc    edi
  41e5c2:	inc    esp
  41e5c3:	mov    DWORD PTR [ebx],0x9e3f2f31
  41e5c9:	fldz   
  41e5cb:	add    eax,0xa1bddedf
  41e5d0:	or     al,cl
  41e5d2:	imul   edx,DWORD PTR [ebx],0xaa9a1b8a
  41e5d8:	mov    edi,0xff4c2f93
  41e5dd:	and    BYTE PTR [eax],bl
  41e5df:	stos   DWORD PTR es:[edi],eax
  41e5e0:	jo     0x41e657
  41e5e2:	fist   WORD PTR [edx+0x1]
  41e5e5:	mov    ?,WORD PTR [esi+0x220607ec]
  41e5eb:	test   BYTE PTR [esp+ebx*1+0x3992cc2f],bh
  41e5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5f3:	push   0xa627fccf
  41e5f8:	inc    ebx
  41e5f9:	lods   eax,DWORD PTR ds:[esi]
  41e5fa:	sbb    al,0x6e
  41e5fc:	mov    ch,0x89
  41e5fe:	int    0x86
  41e600:	cld    
  41e601:	add    BYTE PTR [eax],dh
  41e603:	mov    ch,0x3a
  41e605:	call   0xfe5e:0x508cf3b6
  41e60c:	(bad)  
  41e60d:	dec    ecx
  41e60e:	mov    esi,0x8cfb79a6
  41e613:	clc    
  41e614:	mov    ecx,0xa7184e71
  41e619:	inc    esi
  41e61a:	xor    eax,0x2520caf0
  41e61f:	in     eax,dx
  41e620:	dec    esi
  41e621:	dec    esp
  41e622:	ret    
  41e623:	stos   BYTE PTR es:[edi],al
  41e624:	mov    esp,0xcaab5f76
  41e629:	or     eax,0x6d4d695d
  41e62e:	das    
  41e62f:	or     al,0x8e
  41e631:	sub    esi,edi
  41e633:	pop    eax
  41e634:	dec    eax
  41e635:	es or  edx,esp
  41e638:	lds    ecx,FWORD PTR [ebp+0x5e98a0ae]
  41e63e:	sub    BYTE PTR [ebx],al
  41e640:	add    esi,ecx
  41e642:	mov    DWORD PTR cs:[edi+eiz*1-0x7a],esi
  41e647:	mov    cl,0xb5
  41e649:	push   es
  41e64a:	out    dx,al
  41e64b:	leave  
  41e64c:	push   esp
  41e64d:	(bad)  
  41e64e:	fdivr  st(6),st
  41e650:	or     eax,0x140a262
  41e655:	add    al,0x24
  41e657:	or     eax,edx
  41e659:	lea    edx,[esp+ebx*4]
  41e65c:	jecxz  0x41e684
  41e65e:	(bad)  
  41e65f:	cdq    
  41e660:	jmp    0xdc8bcdf1
  41e665:	aam    0x66
  41e667:	adc    eax,0x4c42e17a
  41e66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e66d:	stos   DWORD PTR es:[edi],eax
  41e66e:	or     BYTE PTR ds:0x1c1d63ca,al
  41e674:	(bad)
  41e677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e678:	je     0x41e629
  41e67a:	xor    dh,BYTE PTR [ebx+0x25623a25]
  41e680:	xchg   ebp,eax
  41e681:	ins    BYTE PTR es:[edi],dx
  41e682:	jb     0x41e60b
  41e684:	loope  0x41e632
  41e686:	sbb    eax,0x7f8a4e9a
  41e68b:	jae    0x41e6a7
  41e68d:	lea    ebx,[ecx+0x5feca551]
  41e693:	mov    eax,ds:0x572f485f
  41e698:	ret    0xe82d
  41e69b:	xor    al,0x11
  41e69d:	out    0xfd,eax
  41e69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a0:	jl     0x41e6d1
  41e6a2:	ret    
  41e6a3:	push   ds
  41e6a4:	inc    ecx
  41e6a5:	dec    ebp
  41e6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6a7:	push   edx
  41e6a8:	sti    
  41e6a9:	xchg   ebp,eax
  41e6aa:	das    
  41e6ab:	outs   dx,DWORD PTR ds:[esi]
  41e6ac:	or     eax,0x6643f1cf
  41e6b1:	stos   BYTE PTR es:[edi],al
  41e6b2:	outs   dx,BYTE PTR ds:[esi]
  41e6b3:	mov    al,ds:0xa47ccd16
  41e6b8:	cs push eax
  41e6ba:	cli    
  41e6bb:	and    eax,0x4223ea1e
  41e6c0:	mov    cl,BYTE PTR [edi-0x79]
  41e6c3:	fnstenv [edx+0x2f]
  41e6c6:	or     esp,DWORD PTR [eax+0x4fe88d33]
  41e6cc:	jbe    0x41e6ce
  41e6ce:	dec    ebx
  41e6cf:	test   eax,0xf41f48c9
  41e6d4:	add    dl,dh
  41e6d6:	push   edi
  41e6d7:	xor    DWORD PTR [ebx],ebx
  41e6d9:	lea    ecx,[ecx+0x1e75de8d]
  41e6df:	loop   0x41e6fd
  41e6e1:	fldenv [edx-0x6c]
  41e6e4:	mov    ebp,edi
  41e6e6:	jecxz  0x41e734
  41e6e8:	dec    edi
  41e6e9:	mov    ebx,DWORD PTR [edi-0x38c1b557]
  41e6ef:	mov    al,0xed
  41e6f1:	pop    ds
  41e6f2:	gs out 0xaa,al
  41e6f5:	dec    edi
  41e6f6:	daa    
  41e6f7:	mov    esp,ebp
  41e6f9:	(bad)  
  41e6fb:	jg     0x41e6bd
  41e6fd:	cmp    DWORD PTR [esi+eiz*4-0x478bcd9e],esp
  41e704:	cmp    DWORD PTR [edx],ebx
  41e706:	stos   BYTE PTR es:[edi],al
  41e707:	mov    eax,ds:0xe05377da
  41e70c:	inc    esi
  41e70d:	int3   
  41e70e:	ja     0x41e78c
  41e710:	pop    ebx
  41e711:	pop    ebx
  41e712:	test   eax,0x3a6f65da
  41e717:	retf   0xe33a
  41e71a:	push   esp
  41e71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e71c:	adc    DWORD PTR [eax+0x56],edx
  41e71f:	sbb    al,0xf6
  41e721:	xchg   edx,eax
  41e722:	push   ecx
  41e723:	pop    esi
  41e724:	sub    DWORD PTR ds:0x8dfac004,ebx
  41e72a:	xor    DWORD PTR es:[ebx-0x754f99ca],ebx
  41e731:	call   0x73c9d6d8
  41e736:	aam    0xb0
  41e738:	jmp    0x41e6c7
  41e73a:	pop    ds
  41e73b:	jnp    0x41e784
  41e73d:	in     al,dx
  41e73e:	fld    TBYTE PTR [ecx+0x7d]
  41e741:	shl    edx,cl
  41e743:	leave  
  41e744:	mov    ah,BYTE PTR [ebp+0x57e03d91]
  41e74a:	sub    eax,0xa48aeae7
  41e74f:	sub    esp,esi
  41e751:	mov    es,WORD PTR [esi]
  41e753:	(bad)  
  41e754:	xor    eax,0xa52d7fc0
  41e759:	(bad)
  41e75c:	push   esp
  41e75d:	repz mov eax,0x539d1aa6
  41e763:	je     0x41e79b
  41e765:	mov    WORD PTR [edi-0x6c],ss
  41e768:	(bad)  
  41e769:	fidivr DWORD PTR [ecx-0x49]
  41e76c:	test   DWORD PTR ds:0x8a8a2d0d,eax
  41e772:	in     al,dx
  41e773:	xchg   esi,eax
  41e774:	push   ss
  41e775:	loopne 0x41e724
  41e777:	push   ebx
  41e778:	jg     0x41e706
  41e77a:	mov    ds:0xeee4a757,eax
  41e77f:	shr    dl,cl
  41e781:	aam    0xd0
  41e783:	loope  0x41e7bb
  41e785:	or     DWORD PTR [edi],ebp
  41e787:	aas    
  41e788:	and    DWORD PTR [ecx],edx
  41e78a:	mov    dl,BYTE PTR [eax]
  41e78c:	add    al,0x99
  41e78e:	(bad)  
  41e78f:	mov    al,0x1a
  41e791:	pusha  
  41e792:	add    DWORD PTR [edx+ecx*4],ecx
  41e795:	out    0xd1,eax
  41e797:	repnz dec eax
  41e799:	in     al,0x51
  41e79b:	dec    edx
  41e79c:	mov    al,BYTE PTR [edi+ebx*2-0x5c6ff823]
  41e7a3:	jb     0x41e76e
  41e7a5:	mov    WORD PTR [ecx+0x4e],cs
  41e7a8:	fwait
  41e7a9:	fwait
  41e7aa:	imul   esp,DWORD PTR [edi],0xffffffeb
  41e7ad:	jmp    0x91ccaad8
  41e7b2:	sbb    DWORD PTR [edi+0x25796ae7],edi
  41e7b8:	lods   eax,DWORD PTR ds:[esi]
  41e7b9:	mov    ch,dh
  41e7bb:	stos   DWORD PTR es:[edi],eax
  41e7bc:	call   DWORD PTR [ecx+0x74]
  41e7bf:	push   esi
  41e7c0:	pop    es
  41e7c1:	(bad)  
  41e7c2:	push   ebp
  41e7c4:	mov    ds,WORD PTR [edx+0x4b]
  41e7c7:	cmp    ecx,DWORD PTR [esi-0x475a4da1]
  41e7cd:	std    
  41e7ce:	xchg   ebx,eax
  41e7cf:	inc    ecx
  41e7d0:	inc    edx
  41e7d1:	jle    0x41e794
  41e7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d4:	cld    
  41e7d5:	push   cs
  41e7d6:	fidiv  WORD PTR [ecx-0x670f4221]
  41e7dc:	les    esi,FWORD PTR [ebx-0x184959a8]
  41e7e2:	xor    DWORD PTR [esi-0x591196dc],0xffffff92
  41e7e9:	lods   al,BYTE PTR ds:[esi]
  41e7ea:	adc    al,0x96
  41e7ec:	dec    edi
  41e7ed:	mov    al,BYTE PTR [ebx+0x2fbfb096]
  41e7f3:	mov    bh,0xe9
  41e7f5:	popf   
  41e7f6:	sahf   
  41e7f7:	mov    ecx,0xb0005f1c
  41e7fc:	fiadd  DWORD PTR [eax-0x39753327]
  41e802:	ins    DWORD PTR es:[edi],dx
  41e803:	sub    esp,DWORD PTR [ebx-0x6a98a385]
  41e809:	and    al,0x27
  41e80b:	adc    ecx,esi
  41e80d:	sub    eax,0x26072a6
  41e812:	xchg   esi,eax
  41e813:	mov    al,ds:0x74e691f2
  41e818:	or     bl,BYTE PTR [edi+0x58]
  41e81b:	adc    cl,ch
  41e81d:	(bad)  
  41e81e:	mov    edi,0x2f403a5a
  41e823:	scas   al,BYTE PTR es:[edi]
  41e824:	xlat   BYTE PTR ds:[ebx]
  41e825:	xchg   edx,eax
  41e826:	xchg   ebp,eax
  41e827:	iret   
  41e828:	pop    esp
  41e829:	rol    BYTE PTR [esi-0x15cac85a],cl
  41e82f:	dec    ecx
  41e830:	cmp    cl,ah
  41e832:	jbe    0x41e89e
  41e834:	mov    bl,cl
  41e836:	cmp    al,0x51
  41e838:	or     edx,esp
  41e83a:	pop    ebp
  41e83b:	(bad)  [ebp+ecx*4+0x6d7e20c]
  41e842:	icebp  
  41e843:	out    0x21,eax
  41e845:	cmp    eax,0x162a3038
  41e84a:	(bad)  [ecx-0x4d]
  41e84d:	lea    ebp,[edx]
  41e84f:	in     eax,0x67
  41e851:	(bad)  
  41e852:	adc    BYTE PTR [esp+edx*4],ah
  41e855:	sbb    ch,BYTE PTR [eax+0x14b28c29]
  41e85b:	push   es
  41e85c:	cwde   
  41e85d:	xor    esi,DWORD PTR [edi]
  41e85f:	loope  0x41e844
  41e861:	(bad)  
  41e862:	rcl    esp,1
  41e864:	inc    ecx
  41e865:	cmp    al,0x9b
  41e867:	lods   eax,DWORD PTR ds:[esi]
  41e868:	inc    esp
  41e869:	cmp    ebp,DWORD PTR [esi]
  41e86b:	cli    
  41e86c:	aad    0xaa
  41e86e:	iret   
  41e86f:	pop    edx
  41e870:	sub    esi,DWORD PTR [eax-0x34]
  41e873:	mov    ah,0x5e
  41e875:	jmp    0x41e889
  41e877:	lahf   
  41e878:	xchg   edx,eax
  41e879:	dec    esi
  41e87a:	in     al,0x31
  41e87c:	or     cl,BYTE PTR [esi]
  41e87e:	ds das 
  41e880:	pop    esp
  41e881:	pop    edx
  41e882:	out    0x99,eax
  41e884:	xchg   esp,eax
  41e885:	add    BYTE PTR es:[eax],dh
  41e888:	(bad)
  41e88b:	fs aam 0x69
  41e88e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e88f:	push   edx
  41e890:	push   0xffffffa3
  41e892:	xor    DWORD PTR [edi],esp
  41e894:	in     al,dx
  41e895:	or     eax,0x66d647a6
  41e89a:	aam    0xc9
  41e89c:	push   es
  41e89d:	jb     0x41e8ce
  41e89f:	loopne 0x41e895
  41e8a1:	fdiv   QWORD PTR [ebp-0x40f54a35]
  41e8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8a8:	icebp  
  41e8a9:	push   ebp
  41e8aa:	sub    al,0x93
  41e8ac:	and    bh,BYTE PTR [edx]
  41e8ae:	push   eax
  41e8af:	aaa    
  41e8b0:	mov    al,BYTE PTR [ebp-0x73]
  41e8b3:	push   0x58
  41e8b5:	aaa    
  41e8b6:	pop    edi
  41e8b7:	test   esi,eax
  41e8b9:	lea    esi,[eax]
  41e8bb:	sub    ch,BYTE PTR [eax+0x69]
  41e8be:	and    DWORD PTR [esi+0x2ac6cca1],ebp
  41e8c4:	mov    bh,BYTE PTR [edi]
  41e8c6:	or     DWORD PTR [ebp+0x15d7e7f7],edx
  41e8cc:	inc    DWORD PTR [ebp+0x5edfa635]
  41e8d2:	sbb    DWORD PTR [edi+0x417bce7b],0xffffffc4
  41e8d9:	fwait
  41e8da:	push   0x26
  41e8dc:	retf   0xb0af
  41e8df:	add    DWORD PTR [esi+0xa],edi
  41e8e2:	int3   
  41e8e3:	mov    al,0x87
  41e8e5:	cmp    eax,0x25796b1b
  41e8ea:	mov    eax,ds:0x319ca526
  41e8ef:	fmul   DWORD PTR [edx+0x69cd56af]
  41e8f5:	das    
  41e8f6:	mov    ebx,0x2d91319a
  41e8fb:	xchg   ecx,eax
  41e8fc:	jge    0x41e8e8
  41e8fe:	sub    al,0x4f
  41e900:	mov    cl,BYTE PTR [eax-0x191133f7]
  41e906:	fwait
  41e907:	scas   al,BYTE PTR es:[edi]
  41e908:	mov    ah,0x8d
  41e90a:	call   0xd4ce:0xe0866746
  41e911:	dec    eax
  41e912:	das    
  41e913:	xor    edi,DWORD PTR [esi+0x6230d19f]
  41e919:	sbb    eax,0x93c5cc02
  41e91e:	lock (bad) 
  41e920:	mov    BYTE PTR [esi+0x54d20e6f],ah
  41e926:	shl    BYTE PTR [edx+ecx*4+0x46],1
  41e92a:	std    
  41e92b:	pop    ds
  41e92c:	cld    
  41e92d:	xchg   esp,eax
  41e92e:	pushf  
  41e92f:	and    al,0xc6
  41e931:	mov    ds:0xde6d4e3,al
  41e936:	dec    edi
  41e937:	pop    esi
  41e938:	int3   
  41e939:	inc    esp
  41e93a:	inc    eax
  41e93b:	add    al,0x8a
  41e93d:	mov    ah,0x6d
  41e93f:	xchg   DWORD PTR [ebp+0x8],ecx
  41e942:	call   0xb9cf010f
  41e947:	popf   
  41e948:	xor    bl,BYTE PTR [ebx-0x5d143c01]
  41e94e:	das    
  41e94f:	cld    
  41e950:	or     al,BYTE PTR [ecx]
  41e952:	adc    ebx,DWORD PTR [ecx-0x59f30e41]
  41e958:	cld    
  41e959:	lahf   
  41e95a:	(bad)  
  41e95b:	int    0xe5
  41e95d:	div    ebp
  41e95f:	adc    DWORD PTR [ebx+0x455a0378],ecx
  41e965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e966:	lahf   
  41e967:	xor    ebp,DWORD PTR [esi+0x15]
  41e96a:	xor    ah,BYTE PTR [eax+0xfaa7793]
  41e970:	out    dx,eax
  41e971:	mov    dl,0x57
  41e973:	out    0x52,al
  41e975:	nop
  41e976:	mov    ecx,0x65437635
  41e97b:	mov    DWORD PTR [ebx-0x10492174],ecx
  41e981:	pop    ebp
  41e982:	stos   DWORD PTR es:[edi],eax
  41e983:	cmp    dl,cl
  41e985:	iret   
  41e986:	mov    BYTE PTR [ebx+0x35],ah
  41e989:	lea    ebp,[eax+0x72]
  41e98c:	lahf   
  41e98d:	sbb    eax,0xdd6926e
  41e992:	and    eax,0x560da61e
  41e997:	sbb    ebp,DWORD PTR ds:0x57e5c9e2
  41e99d:	push   es
  41e99e:	pop    ds
  41e99f:	loope  0x41e922
  41e9a1:	mov    al,ds:0xcd47665c
  41e9a6:	add    al,0x6
  41e9a8:	push   ss
  41e9a9:	dec    esp
  41e9aa:	not    DWORD PTR [edi-0x2f]
  41e9ad:	gs push eax
  41e9af:	xchg   ebp,eax
  41e9b0:	data16 jae 0x41e96d
  41e9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b4:	or     BYTE PTR [ecx],bh
  41e9b6:	out    dx,al
  41e9b7:	ins    BYTE PTR es:[edi],dx
  41e9b8:	jecxz  0x41e969
  41e9ba:	push   ebp
  41e9bb:	inc    ebx
  41e9bc:	mov    dl,cl
  41e9be:	xor    BYTE PTR ds:0x3c48d54d,0x6b
  41e9c5:	xchg   edx,eax
  41e9c6:	test   BYTE PTR [edx],bh
  41e9c8:	or     al,0x15
  41e9ca:	scas   eax,DWORD PTR es:[edi]
  41e9cb:	(bad)  
  41e9cc:	mov    bh,0x96
  41e9ce:	fwait
  41e9cf:	and    al,0x91
  41e9d1:	mov    ecx,0x8c265b0d
  41e9d6:	push   ebx
  41e9d7:	lods   eax,DWORD PTR ds:[esi]
  41e9d8:	cmp    BYTE PTR [ebp-0x79],cl
  41e9db:	imul   DWORD PTR [edi]
  41e9dd:	mov    ds:0x63ae02e2,al
  41e9e2:	push   es
  41e9e3:	out    0x74,al
  41e9e5:	xchg   ebp,eax
  41e9e6:	popa   
  41e9e7:	sub    esp,DWORD PTR ss:[edi+ebp*1]
  41e9eb:	jmp    0x41e999
  41e9ed:	rol    DWORD PTR [ebp+eax*4+0xe057f79],0x29
  41e9f5:	mov    ds:0x42e57c55,al
  41e9fa:	les    eax,FWORD PTR [edx]
  41e9fc:	mov    ecx,0x9a0b960d
  41ea01:	ss push esp
  41ea03:	lea    edx,ss:[ebx-0x45]
  41ea07:	sbb    ch,dh
  41ea09:	(bad)
  41ea0c:	addr16 sub esi,eax
  41ea0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea10:	loopne 0x41e9de
  41ea12:	lods   eax,DWORD PTR ds:[esi]
  41ea13:	popf   
  41ea14:	stos   DWORD PTR es:[edi],eax
  41ea15:	or     eax,0x4d8aecf9
  41ea1a:	nop
  41ea1b:	mov    ecx,0x652a6e2a
  41ea20:	ins    BYTE PTR es:[edi],dx
  41ea21:	(bad)  
  41ea22:	jmp    0x41ea27
  41ea24:	jl     0x41e9f8
  41ea26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea27:	xchg   ebx,eax
  41ea28:	pop    ecx
  41ea29:	dec    eax
  41ea2a:	push   ecx
  41ea2b:	xchg   ch,al
  41ea2d:	mov    dl,0xa2
  41ea2f:	and    eax,0xdb6c6e29
  41ea34:	imul   ecx,DWORD PTR ds:0x7b4e2d7e,0xd0d3a5cb
  41ea3e:	add    al,0xd7
  41ea40:	js     0x41e9d5
  41ea42:	scas   al,BYTE PTR es:[edi]
  41ea43:	add    DWORD PTR [eax-0x752a251b],0xffffffe0
  41ea4a:	lock bound ecx,QWORD PTR [ebp+0x5e]
  41ea4e:	(bad)  
  41ea4f:	(bad)  
  41ea50:	aad    0x1d
  41ea52:	adc    eax,0xf52557b2
  41ea57:	in     eax,0x87
  41ea59:	fbstp  TBYTE PTR [esi-0x36]
  41ea5c:	cs pop es
  41ea5e:	das    
  41ea5f:	pop    edi
  41ea60:	icebp  
  41ea61:	hlt    
  41ea62:	int    0xd1
  41ea64:	sub    ebx,esp
  41ea66:	and    DWORD PTR [edi-0x1a76cc1e],0xbe7961b2
  41ea70:	bound  edi,QWORD PTR [ebx]
  41ea72:	das    
  41ea73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea74:	gs jp  0x41eabc
  41ea77:	adc    BYTE PTR [ebx-0x3],dl
  41ea7a:	das    
  41ea7b:	rcl    ah,0x8d
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	neg    DWORD PTR [eax-0x5c]
  41ea82:	fist   WORD PTR [eax-0x18d11df9]
  41ea88:	push   es
  41ea89:	adc    BYTE PTR [ebx+ebx*1-0x599e0ba3],ah
  41ea90:	mov    esp,0xa8275f78
  41ea95:	fbld   TBYTE PTR [eax-0x3d]
  41ea98:	mov    cl,ch
  41ea9a:	int3   
  41ea9b:	stos   BYTE PTR es:[edi],al
  41ea9c:	add    eax,0x75563091
  41eaa1:	lea    ebp,[esi]
  41eaa3:	cmp    DWORD PTR [eax],eax
  41eaa5:	sub    BYTE PTR [ebx],al
  41eaa7:	pop    ebp
  41eaa8:	mov    ds:0x380c2fa4,al
  41eaad:	jp     0x41eaa0
  41eaaf:	ret    0x1cb0
  41eab2:	push   edx
  41eab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab4:	push   es
  41eab5:	cld    
  41eab6:	push   cs
  41eab7:	shl    BYTE PTR [edi],1
  41eab9:	mov    ?,WORD PTR [eax-0x78]
  41eabc:	xchg   BYTE PTR [eax+0x6f8b9adb],bl
  41eac2:	ins    DWORD PTR es:[edi],dx
  41eac3:	sub    ax,0xddaa
  41eac7:	xchg   ebx,eax
  41eac8:	jle    0x41ea7d
  41eaca:	xor    BYTE PTR [esi+0x4b627c1f],ah
  41ead0:	dec    eax
  41ead1:	cmp    DWORD PTR [esi],0xfffffffe
  41ead4:	xchg   ecx,eax
  41ead5:	sbb    dl,bl
  41ead7:	jne    0x41eaaa
  41ead9:	push   cs
  41eada:	(bad)  
  41eadd:	int    0x15
  41eadf:	push   cs
  41eae0:	out    dx,eax
  41eae1:	lea    esi,[eax+esi*4+0x2f]
  41eae5:	xchg   esp,eax
  41eae6:	add    esi,DWORD PTR [ebp-0x246087e8]
  41eaec:	mov    bh,BYTE PTR [ebp+0x63]
  41eaef:	fs xchg esp,eax
  41eaf1:	cmp    DWORD PTR [esi+0x538dc3cf],esp
  41eaf7:	imul   eax,DWORD PTR [edi-0x6ccdc9a3],0xffffffc1
  41eafe:	das    
  41eaff:	dec    ecx
  41eb00:	(bad)  
  41eb02:	mov    dl,0xca
  41eb04:	xchg   edi,eax
  41eb05:	mov    dh,0x86
  41eb07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb08:	and    eax,0x6af9ca1e
  41eb0d:	ror    BYTE PTR [esi+0x2eb4296a],cl
  41eb13:	push   esi
  41eb14:	retf   
  41eb15:	cmp    eax,0x425b51c0
  41eb1a:	mov    al,ds:0xda15baf8
  41eb1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb20:	cld    
  41eb21:	sbb    eax,DWORD PTR [edx+0x259d9c4b]
  41eb27:	test   eax,0xe3d9698a
  41eb2c:	xor    al,0x91
  41eb2e:	xchg   esi,eax
  41eb2f:	lods   al,BYTE PTR ds:[esi]
  41eb30:	and    ah,al
  41eb32:	adc    BYTE PTR [ecx+ecx*1-0x78343bd6],al
  41eb39:	mov    dh,0x5f
  41eb3b:	inc    ecx
  41eb3c:	mov    al,0x97
  41eb3e:	das    
  41eb3f:	cmp    eax,0x5bead6b8
  41eb44:	popf   
  41eb45:	cmp    BYTE PTR [esi+ebp*4-0x39],ch
  41eb49:	arpl   WORD PTR [eax+0x2fad2e48],ax
  41eb4f:	aad    0xc1
  41eb51:	xchg   esp,eax
  41eb52:	test   esi,esi
  41eb54:	popa   
  41eb55:	out    dx,al
  41eb56:	or     esp,DWORD PTR [esi-0x5b0ad13c]
  41eb5c:	or     cl,BYTE PTR [eax+0x5b]
  41eb5f:	mov    cl,BYTE PTR ds:[eax-0x7668dda1]
  41eb66:	leave  
  41eb67:	ret    0x879a
  41eb6a:	sbb    DWORD PTR [ebp-0x4db63d13],esp
  41eb70:	mov    ds:0x8c7d6fc0,eax
  41eb75:	hlt    
  41eb76:	outs   dx,BYTE PTR cs:[esi]
  41eb78:	xor    DWORD PTR [eax-0x7e55d43e],ebp
  41eb7e:	fisub  DWORD PTR [ebp+0x5b724868]
  41eb84:	jmp    0x4df9e2a
  41eb89:	sub    eax,0x2022222f
  41eb8e:	push   edi
  41eb8f:	mov    DWORD PTR [ecx],ebp
  41eb91:	sti    
  41eb92:	xchg   BYTE PTR [edi-0x34a483e9],ah
  41eb98:	sbb    al,0x3e
  41eb9a:	leave  
  41eb9b:	cli    
  41eb9c:	mov    esp,esi
  41eb9e:	pop    esi
  41eb9f:	(bad)  
  41eba0:	mov    bh,BYTE PTR [ecx+0x1d1109ed]
  41eba6:	pusha  
  41eba7:	jmp    0x41eb47
  41eba9:	lea    ebp,[esi]
  41ebab:	ds and ebp,edi
  41ebae:	cdq    
  41ebaf:	mov    cl,0xfb
  41ebb1:	mov    dh,0x2f
  41ebb3:	and    DWORD PTR [ebx+eax*4+0x3f6141c3],0x4b
  41ebbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebbc:	pop    ebx
  41ebbd:	inc    BYTE PTR [edi+0x55]
  41ebc0:	pop    esp
  41ebc1:	cli    
  41ebc2:	hlt    
  41ebc3:	out    dx,al
  41ebc4:	mov    dl,BYTE PTR [ebp+ebp*8+0x6c]
  41ebc8:	adc    edx,eax
  41ebca:	into   
  41ebcb:	lds    edx,FWORD PTR [esi+0x7967358d]
  41ebd1:	test   BYTE PTR [ebp+esi*8+0x82f2dfb],bh
  41ebd8:	aas    
  41ebd9:	lahf   
  41ebda:	push   0xe5bdd98b
  41ebdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe0:	fs test eax,0x1d4cad5a
  41ebe6:	into   
  41ebe7:	and    BYTE PTR [edx+0x4ed36f47],cl
  41ebed:	stos   DWORD PTR es:[edi],eax
  41ebee:	sbb    al,BYTE PTR [esi+eax*1+0x21e97090]
  41ebf5:	cdq    
  41ebf6:	push   ebx
  41ebf7:	pusha  
  41ebf8:	dec    edx
  41ebf9:	sub    edi,ebx
  41ebfb:	sti    
  41ebfc:	std    
  41ebfd:	jne    0x41ec2e
  41ebff:	push   0x74f27f08
  41ec04:	sbb    ebx,DWORD PTR [esi]
  41ec06:	inc    esi
  41ec07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec08:	jae    0x41eb9f
  41ec0a:	lahf   
  41ec0b:	retf   0x2b4e
  41ec0e:	and    BYTE PTR [eax+ecx*4],cl
  41ec11:	rol    DWORD PTR [edi],1
  41ec13:	mov    eax,0x26010e22
  41ec18:	das    
  41ec19:	int    0x5c
  41ec1b:	or     eax,0x5afe8daa
  41ec20:	push   0x38
  41ec22:	pusha  
  41ec23:	mov    bh,BYTE PTR [ebp-0x3b]
  41ec26:	xor    dh,dl
  41ec28:	pop    ss
  41ec29:	aas    
  41ec2a:	popf   
  41ec2b:	xor    BYTE PTR [esi-0x1b],bh
  41ec2e:	sti    
  41ec2f:	arpl   WORD PTR [ebp+0x19a698f1],ax
  41ec35:	mov    ebx,0xafa29e41
  41ec3a:	fdivr  QWORD PTR [esp+edx*4-0x47234edc]
  41ec41:	lods   eax,DWORD PTR ds:[esi]
  41ec42:	ins    DWORD PTR es:[edi],dx
  41ec43:	in     al,0x58
  41ec45:	int3   
  41ec46:	sti    
  41ec47:	sub    eax,0xa80fb1cf
  41ec4c:	adc    BYTE PTR [ebx+esi*8+0x2211da79],cl
  41ec53:	div    ah
  41ec55:	fidiv  WORD PTR [ecx]
  41ec57:	jae    0x41ecbe
  41ec59:	fld    st(7)
  41ec5b:	add    al,0xdf
  41ec5d:	adc    eax,0x84447e0f
  41ec62:	jmp    0x74bee50c
  41ec67:	mov    bl,0xf9
  41ec69:	dec    esp
  41ec6a:	retf   
  41ec6b:	cs and bl,ch
  41ec6e:	xor    eax,edx
  41ec70:	sub    al,0x85
  41ec72:	jne    0x41ecde
  41ec74:	(bad)  
  41ec76:	lods   al,BYTE PTR ds:[esi]
  41ec77:	push   edx
  41ec78:	js     0x41ec07
  41ec7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec7b:	mov    ds:0x92cde8ab,al
  41ec80:	pop    edi
  41ec81:	and    al,BYTE PTR [ebx+0x27]
  41ec84:	push   edi
  41ec85:	and    ebp,DWORD PTR [edi-0x1880e8e9]
  41ec8b:	jnp    0x41ec93
  41ec8d:	mov    cs,WORD PTR [edi]
  41ec8f:	cmp    eax,0x434fe537
  41ec94:	arpl   WORD PTR [ebp-0x1d],si
  41ec97:	or     eax,0x9b5fb28a
  41ec9c:	psubsb mm1,QWORD PTR [ecx+0x29]
  41eca0:	mov    al,ds:0xbe22198d
  41eca5:	mov    bl,0xba
  41eca7:	adc    ah,BYTE PTR [eax+0x77]
  41ecaa:	call   0x62da9361
  41ecaf:	mov    bh,0xa
  41ecb1:	lods   al,BYTE PTR ds:[esi]
  41ecb2:	idiv   BYTE PTR [ebx+ebp*8+0x31a67ca8]
  41ecb9:	add    al,0x30
  41ecbb:	push   ds
  41ecbc:	dec    ebx
  41ecbd:	out    0xfd,al
  41ecbf:	jno    0x41ec86
  41ecc1:	outs   dx,DWORD PTR ds:[esi]
  41ecc2:	ret    
  41ecc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	shl    DWORD PTR [eax-0x38],1
  41ecc8:	mov    esp,0xd6a64097
  41eccd:	sahf   
  41ecce:	retf   
  41eccf:	aad    0x15
  41ecd1:	cmp    ebx,DWORD PTR [ebx-0x11]
  41ecd4:	add    dl,BYTE PTR ds:0x56701e2f
  41ecda:	stos   BYTE PTR es:[edi],al
  41ecdb:	fild   WORD PTR [edi+0x68]
  41ecde:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece0:	cld    
  41ece1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece2:	sbb    eax,0x7e0f9784
  41ece7:	jae    0x41ec73
  41ece9:	inc    esp
  41ecea:	icebp  
  41eceb:	aad    0x71
  41eced:	push   cs
  41ecee:	mov    ds:0x728d9b4c,al
  41ecf3:	fcom   st(0)
  41ecf5:	stc    
  41ecf6:	mov    eax,fs
  41ecf8:	das    
  41ecf9:	jl     0x41ed2a
  41ecfb:	gs dec ebp
  41ecfd:	cmp    eax,0x73d251a1
  41ed02:	hlt    
  41ed03:	mov    al,ds:0xe9ea9c5e
  41ed08:	jmp    0x5b54:0x2ad3598
  41ed0f:	mov    ds:0x42d2758f,al
  41ed14:	es jmp 0x36f4cfc8
  41ed1a:	(bad)  
  41ed1b:	nop
  41ed1c:	adc    eax,0x16593548
  41ed21:	mov    cl,0x4f
  41ed23:	jae    0x41ed9f
  41ed25:	sub    ah,BYTE PTR [ebp+0x28818a90]
  41ed2b:	jnp    0x41ed89
  41ed2d:	out    dx,al
  41ed2e:	add    BYTE PTR [ecx+0x29],dl
  41ed31:	(bad)  
  41ed32:	repz push edx
  41ed34:	fidivr WORD PTR [ebp+0x1765dfc4]
  41ed3a:	das    
  41ed3b:	scas   al,BYTE PTR es:[edi]
  41ed3c:	inc    ecx
  41ed3d:	jbe    0x41ed68
  41ed3f:	and    al,0xf6
  41ed41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed42:	pop    esi
  41ed43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed44:	inc    ebp
  41ed45:	in     al,dx
  41ed46:	jne    0x41ed3f
  41ed48:	pop    ss
  41ed49:	out    0xbf,eax
  41ed4b:	in     al,0xc4
  41ed4d:	add    eax,0x6dc72651
  41ed52:	push   es
  41ed53:	sub    edx,DWORD PTR es:[esi+eax*2-0x5a]
  41ed58:	mov    ah,0x48
  41ed5a:	gs and al,0xe3
  41ed5d:	dec    ebp
  41ed5e:	xchg   BYTE PTR [ecx],cl
  41ed60:	mov    bh,al
  41ed62:	fld    TBYTE PTR [eax]
  41ed64:	int3   
  41ed65:	inc    eax
  41ed66:	sti    
  41ed67:	in     eax,0x6e
  41ed69:	sbb    dh,dl
  41ed6b:	or     eax,0xb9a78d5f
  41ed70:	sbb    BYTE PTR [eax+0x2c23395d],dh
  41ed76:	das    
  41ed77:	call   0xd35344ce
  41ed7c:	or     ebx,DWORD PTR ds:0xf939a7b5
  41ed82:	or     al,0x45
  41ed84:	mov    edi,DWORD PTR [ebx+esi*2]
  41ed87:	repnz and eax,ebx
  41ed8a:	adc    al,0xaf
  41ed8c:	call   0x6e9a1cea
  41ed91:	test   al,0x5c
  41ed93:	sub    eax,ebp
  41ed95:	lea    edx,[eax+0x7a]
  41ed98:	xchg   esi,eax
  41ed99:	mov    cl,0xb7
  41ed9b:	call   0x118c:0xb42f4336
  41eda2:	(bad)  
  41eda3:	ds mov bl,0x8f
  41eda6:	shl    DWORD PTR [ebp-0x377c76b9],1
  41edac:	stc    
  41edad:	pop    ebx
  41edae:	mov    al,ds:0x809b8a47
  41edb3:	(bad)  
  41edb5:	lock cmp BYTE PTR [ebx+0x75f8b370],0x7c
  41edbd:	lea    esi,[esi+edi*2]
  41edc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc1:	fidivr WORD PTR [esi]
  41edc3:	enter  0x588a,0x6a
  41edc7:	(bad)  
  41edc9:	add    BYTE PTR [edi],bl
  41edcb:	rol    eax,0x8d
  41edce:	out    0xa6,eax
  41edd0:	(bad)  
  41edd1:	js     0x41ee49
  41edd3:	test   al,0x19
  41edd5:	ins    DWORD PTR es:[edi],dx
  41edd6:	das    
  41edd7:	rcr    esp,1
  41edd9:	les    ecx,FWORD PTR [ebp+0x7af1c865]
  41eddf:	xchg   ecx,eax
  41ede0:	sbb    ah,BYTE PTR [edx]
  41ede2:	test   BYTE PTR es:[ebx],0x41
  41ede6:	push   eax
  41ede7:	je     0x41ed6e
  41ede9:	(bad)  
  41edea:	cld    
  41edeb:	push   ebp
  41edec:	pop    ds
  41eded:	adc    DWORD PTR ds:0x36fdb238,esi
  41edf3:	out    0xcf,al
  41edf5:	adc    BYTE PTR [edi-0x6e5e9e53],cl
  41edfb:	retf   
  41edfc:	mov    ds:0x632667ca,eax
  41ee01:	int    0x4f
  41ee03:	fwait
  41ee04:	addr16 dec esi
  41ee06:	das    
  41ee07:	push   0x1c
  41ee09:	push   edi
  41ee0a:	mov    es,WORD PTR [edi+0x48]
  41ee0d:	push   esi
  41ee0e:	jmp    DWORD PTR [esi-0x73de7fda]
  41ee14:	in     eax,dx
  41ee15:	xlat   BYTE PTR ds:[ebx]
  41ee16:	cli    
  41ee17:	mov    ebp,0x482f5ae0
  41ee1c:	stos   BYTE PTR es:[edi],al
  41ee1d:	out    dx,al
  41ee1e:	ins    BYTE PTR es:[edi],dx
  41ee1f:	addr16 clc 
  41ee21:	add    edx,DWORD PTR [ebx+0x397d0ba6]
  41ee27:	outs   dx,BYTE PTR ds:[esi]
  41ee28:	jo     0x41ee12
  41ee2a:	repz inc ecx
  41ee2c:	mov    al,BYTE PTR [ebx+0x63]
  41ee2f:	push   0x445e286b
  41ee34:	cdq    
  41ee35:	mov    bl,0x97
  41ee37:	xchg   BYTE PTR [edi+0x14b898d],bl
  41ee3d:	fidiv  DWORD PTR [edx-0x211176f0]
  41ee43:	jle    0x41ee40
  41ee45:	sar    DWORD PTR [esi+esi*1-0x6cb4fe04],0x43
  41ee4d:	arpl   WORD PTR [ecx],si
  41ee4f:	daa    
  41ee50:	imul   si,cx,0xffac
  41ee54:	retf   0x4087
  41ee57:	jns    0x41eec9
  41ee59:	xchg   DWORD PTR [edi],ebp
  41ee5b:	add    al,0xe1
  41ee5d:	ror    al,cl
  41ee5f:	fsub   QWORD PTR [ebx+0x58]
  41ee62:	jg     0x41ee0a
  41ee64:	xor    al,BYTE PTR [edi+0x11]
  41ee67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee68:	cmp    dl,BYTE PTR ds:0x968a1d39
  41ee6e:	es push 0x634bb0ce
  41ee74:	pop    edx
  41ee75:	mov    cl,BYTE PTR [eax]
  41ee77:	in     al,0x4d
  41ee79:	cmp    dh,ch
  41ee7b:	inc    ebp
  41ee7c:	add    BYTE PTR [edx],bh
  41ee7e:	add    DWORD PTR [edi],esp
  41ee80:	lea    edx,[esi]
  41ee82:	sub    edx,DWORD PTR [esi+0x1338e9ef]
  41ee88:	mov    ah,BYTE PTR [eax+0x119797fb]
  41ee8e:	sub    ah,BYTE PTR [edx-0x26]
  41ee91:	or     eax,0xb4577b2f
  41ee96:	inc    ebx
  41ee97:	jge    0x41eeef
  41ee99:	push   ss
  41ee9a:	inc    esi
  41ee9b:	or     ebp,esp
  41ee9d:	mov    ch,BYTE PTR [edi-0x76]
  41eea0:	sub    ecx,DWORD PTR [edx+0x7c]
  41eea3:	xchg   ebx,eax
  41eea4:	pop    eax
  41eea5:	lea    eax,[edx]
  41eea7:	xchg   ecx,eax
  41eea8:	leave  
  41eea9:	and    ebx,DWORD PTR [edx]
  41eeab:	and    BYTE PTR [ebx-0x1de4d06a],bh
  41eeb1:	push   ebx
  41eeb2:	pop    edx
  41eeb3:	rol    cl,cl
  41eeb5:	shl    DWORD PTR [edx+0x1ec2b6a6],0x18
  41eebc:	add    BYTE PTR [edx+0x73],dh
  41eebf:	xchg   BYTE PTR [ecx-0x75eda916],bl
  41eec5:	ret    
  41eec6:	jbe    0x41eeca
  41eec8:	pop    ebp
  41eec9:	out    0xfd,eax
  41eecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eecc:	sbb    al,0xc0
  41eece:	adc    DWORD PTR [ebx],0xfffffff8
  41eed1:	xor    DWORD PTR [edx],0x3b
  41eed4:	xchg   esp,eax
  41eed5:	cmp    BYTE PTR [esi],cl
  41eed7:	aas    
  41eed8:	sub    ch,ch
  41eeda:	inc    edi
  41eedb:	mov    esp,0xa5cbe6aa
  41eee0:	js     0x41ef39
  41eee2:	mov    ds:0xa1b3bd73,eax
  41eee7:	call   0xf2d28976
  41eeec:	jp     0x41ee87
  41eeee:	bound  esp,QWORD PTR [ebp-0x17]
  41eef1:	not    DWORD PTR [esi-0x5a]
  41eef4:	call   0x24834ca2
  41eef9:	push   eax
  41eefa:	sar    BYTE PTR [esi+edx*8+0xf],0x78
  41eeff:	nop
  41ef00:	les    ecx,FWORD PTR [edx+0x35b2b016]
  41ef06:	das    
  41ef07:	ret    
  41ef08:	shl    BYTE PTR [esi],1
  41ef0a:	lahf   
  41ef0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0c:	test   eax,0x3bba477a
  41ef11:	xor    bl,BYTE PTR [ebp-0xa]
  41ef14:	stos   BYTE PTR es:[edi],al
  41ef15:	(bad)  
  41ef16:	xor    eax,0x6d6624a1
  41ef1b:	push   es
  41ef1c:	pop    ss
  41ef1d:	dec    ebx
  41ef1e:	leave  
  41ef1f:	js     0x41ef69
  41ef21:	lea    ecx,[edi+edx*2-0x2f]
  41ef25:	cld    
  41ef26:	cmp    ebx,ebp
  41ef28:	fsubr  DWORD PTR [edx+esi*1-0x67855db1]
  41ef2f:	in     eax,dx
  41ef30:	mov    ch,0xf5
  41ef32:	in     eax,dx
  41ef33:	pop    ebx
  41ef34:	inc    ecx
  41ef35:	(bad)  
  41ef36:	in     eax,0x9a
  41ef38:	fldcw  WORD PTR [ecx+ebx*4-0x15]
  41ef3c:	or     ah,BYTE PTR [edx-0x59b807d0]
  41ef42:	or     al,0xf0
  41ef44:	push   cs
  41ef45:	test   DWORD PTR [edi-0x46],ecx
  41ef48:	adc    al,0x8d
  41ef4a:	mov    cl,0x55
  41ef4c:	xchg   esp,eax
  41ef4d:	xor    bh,BYTE PTR [esi+0x3e64df9b]
  41ef53:	pusha  
  41ef54:	shl    ebp,1
  41ef56:	cs ins BYTE PTR es:[edi],dx
  41ef58:	ss js  0x41ef5c
  41ef5b:	sar    DWORD PTR [esi-0x4406c55e],cl
  41ef61:	int    0x14
  41ef63:	fistp  DWORD PTR [ebp-0x59130284]
  41ef69:	sti    
  41ef6a:	sahf   
  41ef6b:	lods   eax,DWORD PTR ds:[esi]
  41ef6c:	dec    edx
  41ef6d:	push   0x3675ac2c
  41ef72:	(bad)  [esi+0x690d9fbf]
  41ef78:	aam    0xcd
  41ef7a:	mov    ds:0x7dfc42f9,eax
  41ef7f:	fist   DWORD PTR [esi+edx*8+0x717db853]
  41ef86:	xchg   edx,eax
  41ef87:	(bad)  
  41ef88:	rcl    DWORD PTR [edx+0xb16b2db],cl
  41ef8e:	outs   dx,DWORD PTR ds:[esi]
  41ef8f:	retf   
  41ef90:	(bad)  
  41ef91:	shl    dl,cl
  41ef93:	jmp    0x41ef1f
  41ef95:	iret   
  41ef96:	aaa    
  41ef97:	pushf  
  41ef98:	int3   
  41ef99:	xor    edx,esp
  41ef9b:	mov    gs,esi
  41ef9d:	(bad)  
  41ef9e:	ror    al,1
  41efa0:	or     BYTE PTR [edi+0x13],ah
  41efa3:	test   DWORD PTR [esi-0x21],esp
  41efa6:	cs jge 0x41efa5
  41efa9:	cli    
  41efaa:	jno    0x41f01d
  41efac:	int    0x9a
  41efae:	leave  
  41efaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb0:	sbb    al,0x12
  41efb2:	bound  edi,QWORD PTR [edi-0x10]
  41efb5:	lods   al,BYTE PTR ds:[esi]
  41efb6:	pop    edi
  41efb7:	lods   al,BYTE PTR ds:[esi]
  41efb8:	scas   al,BYTE PTR es:[edi]
  41efb9:	lock push eax
  41efbb:	sti    
  41efbc:	mov    dl,dl
  41efbe:	or     al,0xe3
  41efc0:	loopne 0x41efa2
  41efc2:	dec    ecx
  41efc3:	js     0x41ef4e
  41efc5:	lea    esp,[eax+eax*2]
  41efc8:	xchg   ecx,eax
  41efc9:	mov    ch,0x15
  41efcb:	jno    0x41efe7
  41efcd:	pop    esi
  41efce:	inc    ebx
  41efcf:	loope  0x41efe1
  41efd1:	inc    edx
  41efd2:	out    dx,eax
  41efd3:	leave  
  41efd4:	(bad)  
  41efd6:	ds pop edi
  41efd8:	push   eax
  41efd9:	(bad)  
  41efda:	jmp    edx
  41efdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efdd:	mov    cl,0x68
  41efdf:	cmp    al,BYTE PTR [edi+0x4bee2582]
  41efe5:	or     eax,0x8b52443a
  41efea:	inc    esp
  41efeb:	lds    eax,FWORD PTR [edi+0x6d]
  41efee:	sbb    ch,BYTE PTR [ecx+eiz*4-0x75ba5762]
  41eff5:	shr    al,cl
  41eff7:	and    BYTE PTR [edi-0x67c25c52],ch
  41effd:	(bad)  
  41effe:	fcomp  QWORD PTR [edi]
  41f000:	inc    ebp
  41f001:	xchg   BYTE PTR [ecx-0x27],dh
  41f004:	int3   
  41f005:	fldcw  WORD PTR [esi]
  41f007:	in     eax,dx
  41f008:	or     ecx,DWORD PTR [edi+0x71d18845]
  41f00e:	xchg   esi,eax
  41f00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f010:	cmp    al,0x13
  41f012:	test   eax,0x2653a6da
  41f017:	mov    eax,ds:0x6adc0f8b
  41f01c:	jg     0x41f05b
  41f01e:	or     DWORD PTR [ecx-0x46],0x4fa90564
  41f025:	repnz clc 
  41f027:	aas    
  41f028:	sbb    BYTE PTR [esi+ecx*1-0x511cfd85],cl
  41f02f:	jge    0x41f06d
  41f031:	sbb    cl,BYTE PTR [edx+edx*8+0x22]
  41f035:	pop    esp
  41f036:	sub    ebp,DWORD PTR [ecx]
  41f038:	ja     0x41f061
  41f03a:	sbb    DWORD PTR [edi-0x655ac0b6],0xffffffa3
  41f041:	lea    ebp,[edx+0x730f09c7]
  41f047:	rol    DWORD PTR [edi+0x19],cl
  41f04a:	das    
  41f04b:	(bad)  [esi+0x204f0b53]
  41f051:	sahf   
  41f052:	add    al,0xa6
  41f054:	(bad)  
  41f055:	mov    bl,ah
  41f057:	mov    ebx,0xef9662f0
  41f05c:	mov    dh,BYTE PTR [ecx]
  41f05e:	inc    BYTE PTR [edx-0x55628920]
  41f064:	dec    esi
  41f065:	(bad)  
  41f066:	in     eax,dx
  41f067:	xchg   ecx,eax
  41f068:	aaa    
  41f069:	adc    esi,esp
  41f06b:	fisub  DWORD PTR [ebp-0x5037c9c4]
  41f071:	jmp    0x601e:0xca5ec730
  41f078:	xchg   DWORD PTR [edx-0x71fc407d],esi
  41f07e:	dec    ebx
  41f07f:	inc    ebp
  41f080:	clc    
  41f081:	in     al,dx
  41f082:	pop    ds
  41f083:	mov    ch,0x5a
  41f085:	mov    bh,0x2f
  41f087:	mov    dh,0xda
  41f089:	enter  0xa749,0xf1
  41f08d:	jge    0x41f02b
  41f08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f090:	pop    ds
  41f091:	out    0x66,eax
  41f093:	jnp    0x41f027
  41f095:	call   0xf087:0x2893e11e
  41f09c:	ret    
  41f09d:	or     eax,0xa07133c
  41f0a2:	lahf   
  41f0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a4:	jo     0x41f043
  41f0a6:	xchg   BYTE PTR [esi-0x72],bl
  41f0a9:	sahf   
  41f0aa:	dec    ebx
  41f0ab:	lea    ecx,[edx+0x52c4d704]
  41f0b1:	mov    ds:0x9367a2cf,eax
  41f0b6:	fld    TBYTE PTR [esi]
  41f0b8:	mov    ebx,0x5fb6f98
  41f0bd:	(bad)  
  41f0be:	aad    0x56
  41f0c0:	mov    al,BYTE PTR [ebp-0x5a]
  41f0c3:	sbb    al,0x1c
  41f0c5:	pop    ebp
  41f0c6:	or     dh,BYTE PTR [ecx]
  41f0c8:	clc    
  41f0c9:	icebp  
  41f0ca:	out    dx,al
  41f0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0cc:	sub    DWORD PTR [esi],esi
  41f0ce:	and    al,0x3b
  41f0d0:	call   0x6d52:0x948c61aa
  41f0d7:	sub    edi,DWORD PTR [ecx+0x1b92908d]
  41f0dd:	nop
  41f0de:	xchg   ebx,eax
  41f0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e0:	scas   al,BYTE PTR es:[edi]
  41f0e1:	addr16 jo 0x41f103
  41f0e4:	pop    ebp
  41f0e5:	ror    DWORD PTR [ebx-0x267775db],1
  41f0eb:	cdq    
  41f0ec:	xchg   esp,eax
  41f0ed:	fisttp QWORD PTR [ebx-0x7a]
  41f0f0:	pusha  
  41f0f1:	sahf   
  41f0f2:	add    eax,0x6bed6860
  41f0f7:	lea    edx,[eax+ebp*2+0x2d5b33b9]
  41f0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ff:	jmp    0x2d83:0x83b68d01
  41f106:	scas   eax,DWORD PTR es:[edi]
  41f107:	pop    ecx
  41f108:	fs in  eax,dx
  41f10a:	xor    al,0x8c
  41f10c:	mov    ds:0x5c3a3ff4,al
  41f111:	imul   DWORD PTR [edi-0x18119a5a]
  41f117:	xor    DWORD PTR [ebx-0x7504a1ec],edi
  41f11d:	in     eax,dx
  41f11e:	cdq    
  41f11f:	fs mov esp,esp
  41f122:	push   ebx
  41f123:	loopne 0x41f10e
  41f125:	mov    ds:0x8d58bd02,eax
  41f12a:	(bad)  
  41f12b:	test   al,0x69
  41f12d:	or     ah,BYTE PTR [edi+ebx*2]
  41f130:	mov    ch,BYTE PTR [edi-0x2261319f]
  41f136:	je     0x41f14b
  41f138:	in     al,dx
  41f139:	(bad)  
  41f13a:	hlt    
  41f13b:	sahf   
  41f13c:	sbb    BYTE PTR [eax],cl
  41f13e:	inc    ebx
  41f13f:	addr16 jmp 0x5d7f:0x8a5fdfbf
  41f147:	ds mov ebp,0xc06ea54
  41f14d:	xor    DWORD PTR [ecx+0x78ac74a7],0x37349390
  41f157:	out    dx,al
  41f158:	lods   eax,DWORD PTR ds:[esi]
  41f159:	out    dx,eax
  41f15a:	jmp    0x90b17a72
  41f15f:	(bad)  
  41f161:	std    
  41f162:	jmp    0x18af4944
  41f167:	test   eax,0x8f07dacd
  41f16c:	fucomp st(5)
  41f16e:	add    eax,0xf5f40bea
  41f173:	and    BYTE PTR [esi-0x7bd0cdcc],al
  41f179:	dec    edi
  41f17a:	xchg   esp,eax
  41f17b:	dec    eax
  41f17c:	pop    edx
  41f17d:	sub    BYTE PTR [esi],dl
  41f17f:	mov    ?,WORD PTR [edx-0x10]
  41f182:	cs push esp
  41f184:	iret   
  41f185:	es je  0x41f1f8
  41f188:	pusha  
  41f189:	jbe    0x41f1f8
  41f18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f18c:	scas   al,BYTE PTR es:[edi]
  41f18d:	cwde   
  41f18e:	arpl   bx,di
  41f190:	jne    0x41f20b
  41f192:	pushf  
  41f193:	lahf   
  41f194:	ret    
  41f195:	fstp   QWORD PTR [esi+0x26]
  41f198:	xchg   DWORD PTR [ebx+ebp*1-0xe2f1e17],esp
  41f19f:	mov    cl,0x6a
  41f1a1:	jecxz  0x41f19e
  41f1a3:	and    eax,0x8d248bf4
  41f1a8:	xlat   BYTE PTR ds:[ebx]
  41f1a9:	adc    ah,dl
  41f1ab:	repz mov dh,BYTE PTR ds:0x45106d94
  41f1b2:	out    dx,al
  41f1b3:	add    DWORD PTR [ebx-0x74],edi
  41f1b6:	xor    eax,0x7a48087f
  41f1bb:	and    DWORD PTR [esi-0x7],esp
  41f1be:	dec    esp
  41f1bf:	js     0x41f183
  41f1c1:	int3   
  41f1c2:	jb     0x41f1ea
  41f1c4:	cdq    
  41f1c5:	dec    edx
  41f1c6:	retf   0x3543
  41f1c9:	test   BYTE PTR [eax],0xd8
  41f1cc:	mov    al,ds:0x89e9fc8d
  41f1d1:	lods   eax,DWORD PTR ds:[esi]
  41f1d2:	push   edi
  41f1d3:	inc    BYTE PTR [esi]
  41f1d5:	mov    ebp,0xac952e2f
  41f1da:	and    eax,0xaa378de7
  41f1df:	xchg   ebx,eax
  41f1e0:	leave  
  41f1e1:	repz cs jge 0x41f235
  41f1e5:	pop    esp
  41f1e6:	xchg   edi,eax
  41f1e7:	sub    DWORD PTR [ebx],eax
  41f1e9:	inc    edx
  41f1ea:	das    
  41f1eb:	xchg   ebx,eax
  41f1ec:	cmp    BYTE PTR [eax-0x2b377016],cl
  41f1f2:	dec    ebx
  41f1f3:	mov    ah,0x87
  41f1f5:	sub    cl,BYTE PTR [edx-0x74c8415a]
  41f1fb:	jnp    0x41f203
  41f1fd:	cmp    al,BYTE PTR [esi+esi*1-0x6a]
  41f201:	xor    ebp,DWORD PTR [edi-0x55]
  41f204:	mov    ss,edi
  41f206:	out    dx,eax
  41f207:	adc    al,0x37
  41f209:	mov    dh,BYTE PTR ds:0xd158bc20
  41f20f:	jne    0x41f228
  41f211:	dec    ebp
  41f212:	inc    edx
  41f213:	or     BYTE PTR [eax],al
  41f215:	sub    BYTE PTR [edi],0xd6
  41f218:	push   edx
  41f219:	push   ebx
  41f21a:	sti    
  41f21b:	retf   
  41f21c:	and    ecx,edx
  41f21e:	and    eax,0x96a0a8b2
  41f223:	mov    al,0x27
  41f225:	retf   0xbd29
  41f228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f229:	pop    ebp
  41f22a:	sub    ebp,edi
  41f22c:	std    
  41f22d:	retf   
  41f22e:	aaa    
  41f22f:	call   0x8d16:0xd278e5a4
  41f236:	fnstenv ds:0xb3f9567e
  41f23c:	push   0x8ad45183
  41f241:	mov    ah,0x24
  41f243:	and    bh,BYTE PTR [ecx+0x3b00be70]
  41f249:	mov    WORD PTR [edx-0x1e],cs
  41f24c:	es dec edx
  41f24e:	mov    esp,0xf7dcb770
  41f253:	stc    
  41f254:	cmp    bl,0xe4
  41f257:	bound  ecx,QWORD PTR [edx+0x5f3e4f14]
  41f25d:	adc    eax,0x8d389463
  41f262:	ficomp DWORD PTR [edi+0x40b3d246]
  41f268:	sahf   
  41f269:	fild   QWORD PTR ds:0x1f183e51
  41f26f:	(bad)  
  41f270:	ficomp DWORD PTR ds:0x8c526ab1
  41f276:	or     dl,BYTE PTR [edx+0x5309dfb]
  41f27c:	loop   0x41f256
  41f27e:	jg     0x41f27b
  41f280:	inc    eax
  41f281:	add    eax,0x8f8a52bd
  41f286:	sahf   
  41f287:	lods   al,BYTE PTR ds:[esi]
  41f288:	mov    dl,BYTE PTR [si+0x71]
  41f28c:	jo     0x41f21b
  41f28e:	and    eax,0xa791c001
  41f293:	mov    ds:0x9d2f3834,eax
  41f298:	mov    ebx,0x82be164b
  41f29d:	jae    0x41f295
  41f29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a0:	or     DWORD PTR [eax-0x89636ec],eax
  41f2a6:	mov    ebp,ebx
  41f2a8:	mov    al,BYTE PTR [esi-0xb0f5b41]
  41f2ae:	adc    al,bl
  41f2b0:	mov    al,0x8d
  41f2b2:	imul   esi,esi,0xffffffa5
  41f2b5:	mov    WORD PTR [ebx+0x322f9a2e],?
  41f2bb:	leave  
  41f2bc:	retf   
  41f2bd:	or     BYTE PTR [esp+ebx*2-0x431122f2],cl
  41f2c4:	mov    WORD PTR [ebp-0x35ee2f36],cs
  41f2ca:	adc    ebp,DWORD PTR [edi]
  41f2cc:	sti    
  41f2cd:	jo     0x41f2ff
  41f2cf:	into   
  41f2d0:	and    eax,0xeb075e0a
  41f2d5:	loop   0x41f34d
  41f2d7:	pushf  
  41f2d8:	ja     0x41f27a
  41f2da:	sbb    BYTE PTR [eax+ebp*1+0x63609b8d],al
  41f2e1:	mov    ebx,0x2a756c6
  41f2e6:	sub    ah,cl
  41f2e8:	retf   0x8304
  41f2eb:	data16 stos BYTE PTR es:[edi],al
  41f2ed:	push   0xaeaba5e3
  41f2f2:	pop    ss
  41f2f3:	in     eax,dx
  41f2f4:	hlt    
  41f2f5:	fcom   st(2)
  41f2f7:	jmp    0x13:0xf6110a89
  41f2fe:	je     0x41f2fe
  41f300:	xlat   BYTE PTR ds:[ebx]
  41f301:	leave  
  41f302:	cmp    DWORD PTR [ecx+0x7d3bd1fc],ebp
  41f308:	pusha  
  41f309:	fdivr  QWORD PTR [ecx+0x2a6db510]
  41f30f:	mov    al,0x8a
  41f311:	mov    esi,0x4850cff6
  41f316:	in     al,0x4d
  41f318:	jl     0x41f2a4
  41f31a:	adc    DWORD PTR [eax+0x5e],edx
  41f31d:	adc    BYTE PTR [ecx+0x6],ah
  41f320:	jne    0x41f361
  41f322:	pop    eax
  41f323:	cld    
  41f324:	mov    cl,BYTE PTR [edi]
  41f326:	and    al,0xc7
  41f328:	and    eax,0xec8bc0ea
  41f32d:	mov    ds:0x8d9981ed,al
  41f332:	and    DWORD PTR [edi-0x312bc552],esp
  41f338:	mov    cl,BYTE PTR [ecx-0x7415da64]
  41f33e:	mov    ?,WORD PTR [edx]
  41f340:	mov    al,ds:0xba5f77f
  41f345:	ret    0xb30f
  41f348:	or     BYTE PTR [edx-0x366a8855],0x69
  41f34f:	sub    BYTE PTR [ebp-0x6ca84793],0x1b
  41f356:	outs   dx,DWORD PTR ds:[esi]
  41f357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f358:	fs cld 
  41f35a:	daa    
  41f35b:	lds    esp,FWORD PTR [esi+0x4b]
  41f35e:	sar    DWORD PTR [ecx-0x76],cl
  41f361:	mov    WORD PTR [ecx-0xd838d00],?
  41f367:	lahf   
  41f368:	jmp    0x5be94d92
  41f36d:	data16 mov BYTE PTR [esi-0x99dd355],dl
  41f374:	pushf  
  41f375:	jg     0x41f3a6
  41f377:	daa    
  41f378:	xchg   ecx,eax
  41f379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f37a:	xlat   BYTE PTR ds:[ebx]
  41f37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f37c:	cmp    BYTE PTR [edx+0x4b45a693],bl
  41f382:	jbe    0x41f3c9
  41f384:	fiadd  DWORD PTR [ebx+0x718a3763]
  41f38a:	jo     0x41f360
  41f38c:	push   ecx
  41f38d:	fadd   st,st(3)
  41f38f:	repnz push esp
  41f391:	lea    edi,[ecx+0x17356ab1]
  41f397:	enter  0x36db,0x4f
  41f39b:	sub    DWORD PTR [edx+0x49865142],ecx
  41f3a1:	outs   dx,BYTE PTR ds:[esi]
  41f3a2:	and    DWORD PTR [ebp+ebx*4-0x7a59d903],ebp
  41f3a9:	cs popf 
  41f3ab:	test   eax,0xbd0aaecd
  41f3b0:	mov    dh,al
  41f3b2:	mov    dl,0xf9
  41f3b5:	push   ds
  41f3b6:	sbb    al,0x92
  41f3b8:	in     eax,0x8d
  41f3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3bb:	enter  0x4727,0x5c
  41f3bf:	mov    ah,0xb5
  41f3c1:	mov    eax,ds:0x9255b46
  41f3c6:	scas   eax,DWORD PTR es:[edi]
  41f3c7:	loop   0x41f357
  41f3c9:	mov    bl,0x8
  41f3cb:	jge    0x41f3cb
  41f3cd:	mov    ?,WORD PTR [edi-0x6aa08cfa]
  41f3d3:	rcr    DWORD PTR [edx+0x51],cl
  41f3d6:	push   ebp
  41f3d7:	fimul  WORD PTR [edx+0x7a9616e1]
  41f3dd:	idiv   BYTE PTR [ebx+0x62801227]
  41f3e3:	mov    eax,ds:0x96f410e9
  41f3e8:	dec    edx
  41f3e9:	imul   ebx,DWORD PTR [ebp+0x5f],0xffffffe1
  41f3ed:	mov    esi,0xbf0f212c
  41f3f2:	into   
  41f3f3:	fimul  WORD PTR [edx-0x5f]
  41f3f6:	or     bl,ah
  41f3f8:	outs   dx,BYTE PTR ds:[esi]
  41f3f9:	shl    BYTE PTR [edx-0x58],0x8a
  41f3fd:	push   esi
  41f3fe:	cmp    DWORD PTR [edx+0x3836052],edi
  41f404:	mov    ch,BYTE PTR [ecx]
  41f406:	jno    0x41f38c
  41f408:	sbb    eax,0xaa40f27f
  41f40d:	mov    WORD PTR [esi],?
  41f40f:	push   0xffffffd3
  41f411:	xchg   ebp,eax
  41f412:	mov    ecx,0xf3d9814b
  41f417:	jbe    0x41f3a6
  41f419:	aaa    
  41f41a:	xchg   ebp,eax
  41f41b:	(bad)  
  41f41c:	pop    edi
  41f41d:	mov    DWORD PTR [edi],edi
  41f41f:	rcr    ah,0x57
  41f422:	cmp    ebx,DWORD PTR [edi-0x1e00109]
  41f428:	mov    ebp,DWORD PTR [esi-0x1e31beae]
  41f42e:	push   0xe
  41f430:	mov    al,BYTE PTR [esi+0xbbcaaef]
  41f436:	inc    esi
  41f437:	sti    
  41f438:	push   edi
  41f439:	mov    cl,0x6e
  41f43b:	mov    eax,ds:0x8dcda320
  41f440:	lea    esi,[edi+eax*8]
  41f443:	add    bh,BYTE PTR [edi]
  41f445:	sub    eax,0x89b00641
  41f44a:	push   ds
  41f44b:	bound  edx,QWORD PTR [edx]
  41f44d:	adc    edi,DWORD PTR [edi-0x14c3b9fc]
  41f453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f454:	xor    al,0x5e
  41f456:	cli    
  41f457:	mov    dh,0xde
  41f459:	jns    0x41f473
  41f45b:	inc    ebp
  41f45c:	lea    ebx,[eax+0x2c]
  41f45f:	cmp    DWORD PTR [ebp-0x5c],esi
  41f462:	out    dx,eax
  41f463:	out    dx,eax
  41f464:	cli    
  41f465:	cli    
  41f466:	cld    
  41f467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f468:	push   cs
  41f469:	arpl   WORD PTR [edx-0x18],cx
  41f46c:	fiadd  DWORD PTR [edi-0xc]
  41f46f:	jb     0x41f4eb
  41f471:	shr    DWORD PTR [edi],0xc8
  41f474:	scas   al,BYTE PTR es:[edi]
  41f475:	pop    ecx
  41f476:	in     al,0xef
  41f478:	mov    ds:0xe6a64165,al
  41f47d:	dec    ebp
  41f47e:	stc    
  41f47f:	jmp    FWORD PTR [edi+eax*8-0x6d79e425]
  41f486:	fnstsw WORD PTR [esi]
  41f488:	mov    ch,BYTE PTR [ecx-0x46]
  41f48b:	dec    edi
  41f48c:	loope  0x41f4d2
  41f48e:	sbb    DWORD PTR [ecx+0x6b],esp
  41f491:	lea    eax,[edi]
  41f493:	(bad)  
  41f494:	mov    edi,DWORD PTR [ebp+ebp*2+0x52]
  41f498:	xor    ah,ah
  41f49a:	xor    DWORD PTR [esi-0x13c5989c],ebp
  41f4a0:	out    0x35,al
  41f4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a3:	push   ecx
  41f4a4:	aam    0x8d
  41f4a6:	mov    ah,BYTE PTR [ecx]
  41f4a8:	jmp    0x17ba8c15
  41f4ad:	aaa    
  41f4ae:	das    
  41f4af:	mov    ch,0x82
  41f4b1:	add    DWORD PTR [esi+0x3aca694d],ecx
  41f4b7:	(bad)  
  41f4b8:	and    BYTE PTR [ebp+0x5bf6cdc3],cl
  41f4be:	fcomi  st,st(0)
  41f4c0:	test   eax,0xf9233518
  41f4c5:	imul   esi,DWORD PTR [eax-0x3a],0xf49dfb03
  41f4cc:	jecxz  0x41f48f
  41f4ce:	mov    bh,BYTE PTR [esi+0x24]
  41f4d1:	retf   
  41f4d2:	and    BYTE PTR [esi-0x44],0xf1
  41f4d6:	in     eax,dx
  41f4d7:	cli    
  41f4d8:	hlt    
  41f4d9:	imul   ecx
  41f4db:	xchg   esp,eax
  41f4dc:	mov    es,WORD PTR [ebx]
  41f4de:	rcr    BYTE PTR [ebp+0x7f6eec25],0xe8
  41f4e5:	scas   eax,DWORD PTR es:[edi]
  41f4e6:	int    0xb0
  41f4e8:	rol    BYTE PTR [ecx],cl
  41f4ea:	clc    
  41f4eb:	in     eax,0xde
  41f4ed:	and    al,0xfe
  41f4ef:	jne    0x41f4a8
  41f4f1:	xor    BYTE PTR [edi],ch
  41f4f3:	and    eax,0x7c9cc119
  41f4f8:	and    eax,0xfba64892
  41f4fd:	test   al,0xc1
  41f4ff:	xchg   ebp,eax
  41f501:	popa   
  41f502:	addr16 inc edx
  41f504:	(bad)  
  41f505:	pushf  
  41f506:	fsubr  st,st(2)
  41f508:	cmp    ecx,DWORD PTR [eax+0x45]
  41f50b:	xor    eax,0xf720764b
  41f510:	xor    BYTE PTR [ebp+0x4c],al
  41f513:	push   ss
  41f514:	jb     0x41f4d3
  41f516:	mov    ds:0x51d9e982,eax
  41f51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51c:	ins    DWORD PTR es:[edi],dx
  41f51d:	pop    es
  41f51e:	sub    esi,ecx
  41f520:	mov    ecx,0x12f32f0f
  41f525:	dec    edi
  41f526:	jmp    0x41f57b
  41f528:	jbe    0x41f4ac
  41f52a:	cmp    DWORD PTR [ecx+0x25d3639f],esi
  41f530:	icebp  
  41f531:	and    eax,0x704c88c3
  41f536:	popa   
  41f537:	xor    esi,DWORD PTR [eax+0x35]
  41f53a:	xor    DWORD PTR [eax+eax*8],ebp
  41f53d:	(bad)  [eax-0x3d]
  41f540:	cld    
  41f541:	outs   dx,BYTE PTR ds:[esi]
  41f542:	shl    BYTE PTR ds:0xa6234066,1
  41f548:	push   ss
  41f549:	push   0xffffffc6
  41f54b:	js     0x41f53b
  41f54d:	inc    ebp
  41f54e:	push   ds
  41f54f:	(bad)  
  41f550:	pushf  
  41f551:	mov    edx,DWORD PTR [edi+eax*1-0x59a35e7f]
  41f558:	add    edi,DWORD PTR [esi-0x107ef406]
  41f55e:	cs sub ecx,esp
  41f561:	mov    bh,0x1c
  41f563:	pop    ds
  41f564:	sahf   
  41f565:	sbb    al,BYTE PTR [edx+0x5aff61ba]
  41f56b:	iret   
  41f56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f56d:	xchg   ebx,eax
  41f56e:	mov    ebp,0x21186e6
  41f573:	inc    edx
  41f574:	xchg   esi,eax
  41f575:	push   ebx
  41f576:	das    
  41f577:	pop    es
  41f578:	or     ah,cl
  41f57a:	adc    BYTE PTR [ebx-0x599956a8],ch
  41f580:	xor    ch,BYTE PTR [ebp+0x24]
  41f583:	and    esi,0x31
  41f586:	cdq    
  41f587:	push   ebx
  41f588:	mov    al,BYTE PTR ds:0xf0b5b305
  41f58e:	mov    al,ds:0x1f8dcdfd
  41f593:	lods   eax,DWORD PTR ds:[esi]
  41f594:	sbb    DWORD PTR [ebp+0x29],0xffffff9a
  41f598:	pop    ss
  41f599:	mov    al,0x46
  41f59b:	add    DWORD PTR [edx],ecx
  41f59d:	cdq    
  41f59e:	das    
  41f59f:	sbb    ch,BYTE PTR [edx+0x2a7ec891]
  41f5a5:	lea    ebp,[eax]
  41f5a7:	lahf   
  41f5a8:	ret    0x70cc
  41f5ab:	jmp    0x2870c81a
  41f5b0:	jecxz  0x41f606
  41f5b2:	imul   BYTE PTR [eax-0xb]
  41f5b5:	push   cs
  41f5b6:	push   es
  41f5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b8:	pop    esp
  41f5b9:	fwait
  41f5ba:	(bad)  
  41f5bd:	jnp    0x41f5a2
  41f5bf:	adc    esp,DWORD PTR [esi+0x4aeeeb5d]
  41f5c5:	pop    ss
  41f5c6:	test   esp,esi
  41f5c8:	push   0xfffffff7
  41f5ca:	cmp    DWORD PTR [esi+0x75187d40],esp
  41f5d0:	xor    ch,BYTE PTR [edi+eiz*1-0x6f]
  41f5d4:	mov    bh,dl
  41f5d6:	retf   0xbebe
  41f5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5da:	cmp    DWORD PTR [edx+0x72],esp
  41f5dd:	(bad)  
  41f5de:	in     al,0x1e
  41f5e0:	add    DWORD PTR [edi],ecx
  41f5e2:	idiv   bl
  41f5e4:	push   esp
  41f5e5:	repnz sbb ah,BYTE PTR cs:[ecx+0x3ba2f04b]
  41f5ed:	pop    esp
  41f5ee:	mov    ecx,0x3823d4a6
  41f5f3:	and    al,0x9c
  41f5f5:	out    dx,eax
  41f5f6:	adc    esp,eax
  41f5f8:	jb     0x41f5d0
  41f5fa:	inc    esp
  41f5fb:	mov    ah,0x40
  41f5fd:	inc    ecx
  41f5fe:	lods   al,BYTE PTR ds:[esi]
  41f5ff:	stos   BYTE PTR es:[edi],al
  41f600:	out    0xfc,al
  41f602:	cdq    
  41f603:	out    0xc3,al
  41f605:	add    BYTE PTR [ecx+0x79228b90],dl
  41f60b:	cli    
  41f60c:	repnz cwde 
  41f60e:	inc    esp
  41f60f:	push   ds
  41f610:	jge    0x41f5ef
  41f612:	fdivrp st(2),st
  41f614:	pop    ss
  41f615:	cmp    ah,0x7f
  41f618:	dec    ecx
  41f619:	sahf   
  41f61a:	jmp    0x112:0x3a28f5a5
  41f621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f622:	xor    BYTE PTR [ebp-0x4b],dl
  41f625:	xor    al,0x3d
  41f627:	or     eax,0xae0eed71
  41f62c:	outs   dx,DWORD PTR ds:[esi]
  41f62d:	lea    ecx,[eax-0x4e7069e1]
  41f633:	lock jg 0x41f61c
  41f636:	cs push ds
  41f638:	mov    ch,0xfb
  41f63a:	add    esp,DWORD PTR [edi]
  41f63c:	out    dx,eax
  41f63d:	pop    edi
  41f63e:	out    0x8b,al
  41f640:	mov    ah,0x36
  41f642:	mov    al,0x2d
  41f644:	or     BYTE PTR [eax+0x75],0x44
  41f648:	test   eax,0x8addeed9
  41f64d:	rol    BYTE PTR [edi],1
  41f64f:	in     al,0x77
  41f651:	les    eax,FWORD PTR [edx+esi*4]
  41f654:	dec    esp
  41f655:	lea    edi,[ebp+0x559d9439]
  41f65b:	mov    ch,0x2a
  41f65d:	or     eax,0x811f0a2f
  41f662:	add    eax,esp
  41f664:	jno    0x41f66c
  41f666:	push   0x24e0c9a6
  41f66b:	mov    ebx,0x8cc276aa
  41f670:	mov    dl,BYTE PTR [ebx+0x0]
  41f673:	inc    edx
  41f674:	mov    ds:0x13e3a821,eax
  41f679:	sahf   
  41f67a:	scas   al,BYTE PTR es:[edi]
  41f67b:	fstp   QWORD PTR [edx+eiz*4+0x3b]
  41f67f:	out    0xc8,al
  41f681:	repnz add eax,0xddcd0213
  41f687:	and    ah,BYTE PTR [edi+0xa4849fe]
  41f68d:	cmp    dh,BYTE PTR [edi]
  41f68f:	clc    
  41f690:	lahf   
  41f691:	xchg   esp,eax
  41f692:	call   0x44c3:0x3ecf9ca6
  41f699:	jno    0x41f689
  41f69b:	jl     0x41f717
  41f69d:	pop    ebx
  41f69e:	das    
  41f69f:	mov    al,0xa1
  41f6a1:	jmp    0xa63a:0xbdd621df
  41f6a8:	jp     0x41f674
  41f6aa:	out    dx,al
  41f6ab:	mov    eax,0xae6ba286
  41f6b0:	mov    esi,edx
  41f6b2:	ret    0x361
  41f6b5:	xchg   ebp,eax
  41f6b6:	xor    dh,ah
  41f6b8:	pop    ecx
  41f6b9:	inc    edx
  41f6ba:	xchg   ebx,eax
  41f6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6bc:	pop    es
  41f6bd:	push   ss
  41f6be:	mov    esi,0xaa592576
  41f6c3:	mov    esi,0x23eb02ea
  41f6c8:	mov    ds:0xe1a09fdf,eax
  41f6cd:	jge    0x41f700
  41f6cf:	inc    ebp
  41f6d0:	mov    dl,BYTE PTR [esi-0x3b80f34]
  41f6d6:	or     al,0x2f
  41f6d8:	mov    WORD PTR [edx+0x35],es
  41f6db:	shl    DWORD PTR [eax],0xd
  41f6de:	and    al,0x5a
  41f6e0:	mov    DWORD PTR [ecx],edx
  41f6e2:	pop    ds
  41f6e3:	leave  
  41f6e4:	push   edx
  41f6e5:	(bad)  
  41f6e6:	sub    al,0xaa
  41f6e8:	iret   
  41f6e9:	inc    DWORD PTR ds:0x50cd2bc8
  41f6ef:	scas   eax,DWORD PTR es:[edi]
  41f6f0:	mov    DWORD PTR [edi+0x4605722f],0xa0dd67ce
  41f6fa:	xor    dl,BYTE PTR [eax+edx*4-0x73]
  41f6fe:	ficom  DWORD PTR [esi+0x63]
  41f701:	xchg   esi,eax
  41f702:	icebp  
  41f703:	fadd   st(6),st
  41f705:	sbb    DWORD PTR [edi],ebp
  41f707:	mov    ds:0xed53702e,al
  41f70c:	sbb    eax,0x1ba59b2b
  41f711:	nop
  41f712:	jmp    0x41f707
  41f714:	add    esi,DWORD PTR [ebx]
  41f716:	ja     0x41f6cc
  41f718:	shl    eax,0x31
  41f71b:	dec    esi
  41f71c:	aaa    
  41f71d:	cdq    
  41f71e:	fs (bad) 
  41f720:	sub    al,0xea
  41f722:	cs int 0x80
  41f725:	sar    DWORD PTR [ecx-0x5e6b955a],1
  41f72b:	pop    ebx
  41f72c:	repnz mov bl,0xad
  41f72f:	or     BYTE PTR [edx-0x707260e6],0x3a
  41f736:	scas   eax,DWORD PTR es:[edi]
  41f737:	lods   eax,DWORD PTR ds:[esi]
  41f738:	inc    edi
  41f739:	and    eax,0xf058a6ce
  41f73e:	aas    
  41f73f:	aam    0x14
  41f741:	or     bh,bh
  41f743:	rcl    DWORD PTR [eax+0x11482ee2],0xaa
  41f74a:	fisttp WORD PTR ds:0xa5f660a2
  41f750:	ss cmp eax,0xaf25b7f7
  41f756:	icebp  
  41f757:	fimul  DWORD PTR [edx+0x397df440]
  41f75d:	xor    eax,0x8d16ae57
  41f762:	bound  ecx,QWORD PTR [ecx-0x3e]
  41f765:	pop    DWORD PTR [eax+0x4bad3b09]
  41f76b:	xor    ebp,DWORD PTR [ecx-0x53]
  41f76e:	mov    bh,0x1f
  41f770:	outs   dx,BYTE PTR ds:[esi]
  41f771:	add    dh,BYTE PTR ds:0xfa845f73
  41f777:	enter  0x6e59,0x9f
  41f77b:	push   eax
  41f77c:	pop    ds
  41f77d:	push   edi
  41f77e:	(bad)  
  41f77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f780:	(bad)  
  41f781:	or     BYTE PTR [ebx+ebp*4+0x48],bl
  41f785:	arpl   WORD PTR [edi+eax*2-0x76],si
  41f789:	dec    esp
  41f78a:	pop    ebx
  41f78b:	fld1   
  41f78d:	lahf   
  41f78e:	(bad)  
  41f78f:	out    dx,al
  41f790:	xor    eax,0x4def5a5d
  41f795:	test   edx,esp
  41f797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f798:	lods   al,BYTE PTR ds:[esi]
  41f799:	and    DWORD PTR [ebp+0x4f91eb85],ecx
  41f79f:	(bad)  
  41f7a0:	xor    cl,al
  41f7a2:	call   0x946e8398
  41f7a7:	cmp    cl,0x99
  41f7aa:	mov    BYTE PTR [esi],dh
  41f7ac:	jmp    0x467b:0x60a02443
  41f7b3:	xchg   edx,eax
  41f7b4:	dec    edx
  41f7b5:	xchg   ebx,eax
  41f7b6:	inc    eax
  41f7b7:	or     edx,DWORD PTR [esi-0x3a]
  41f7ba:	or     eax,0x2f304d4b
  41f7bf:	mov    ah,0xdc
  41f7c1:	add    eax,0x8c8ba84f
  41f7c6:	ss xor al,0xe4
  41f7c9:	push   esp
  41f7ca:	adc    ebp,DWORD PTR [esi-0x3f]
  41f7cd:	(bad)  [edx+0x4cc48a73]
  41f7d3:	mov    ch,0x98
  41f7d5:	repz es das 
  41f7d8:	push   esp
  41f7d9:	mov    eax,ds:0xda2f123b
  41f7de:	mov    cl,0xab
  41f7e0:	xor    ah,al
  41f7e2:	aam    0x25
  41f7e4:	pop    eax
  41f7e5:	sti    
  41f7e6:	xor    esp,esi
  41f7e8:	mov    cl,BYTE PTR [edi-0x7c82d3d7]
  41f7ee:	ins    BYTE PTR es:[edi],dx
  41f7ef:	pop    es
  41f7f0:	test   BYTE PTR [ebp+0x200e1435],cl
  41f7f6:	out    0x40,eax
  41f7f8:	inc    edi
  41f7f9:	comiss xmm1,xmm4
  41f7fc:	cmp    dh,BYTE PTR [edx]
  41f7fe:	test   DWORD PTR [edx+0x50],ebp
  41f801:	mov    al,ds:0x69dfa5f8
  41f806:	adc    ebx,DWORD PTR [edx+0x32588af9]
  41f80c:	pop    DWORD PTR [ebx+0x5c]
  41f80f:	retf   0x8071
  41f812:	lods   al,BYTE PTR ds:[esi]
  41f813:	adc    ecx,DWORD PTR [edx]
  41f815:	sti    
  41f816:	cmp    esi,ecx
  41f818:	fisttp WORD PTR [ebp-0x1904b3ba]
  41f81e:	stos   DWORD PTR es:[edi],eax
  41f81f:	shl    BYTE PTR [edx-0x58],1
  41f822:	ss jecxz 0x41f830
  41f825:	jb     0x41f7b4
  41f827:	xchg   BYTE PTR [esi+0x5f489d42],dl
  41f82d:	mov    ds:0xd3d9dcf,eax
  41f832:	mov    WORD PTR [esi-0x51bf6bd9],?
  41f838:	aad    0xbe
  41f83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f83b:	mov    ecx,DWORD PTR [ebx+0x142f766]
  41f841:	aas    
  41f842:	popa   
  41f843:	repnz leave 
  41f845:	and    DWORD PTR [edi],ebp
  41f847:	das    
  41f848:	jp     0x41f7ff
  41f84a:	jmp    0xeb309a50
  41f84f:	shl    DWORD PTR [ebx-0x73b0256e],cl
  41f855:	sub    eax,0x64799a4f
  41f85a:	xchg   esi,eax
  41f85b:	out    0x8a,eax
  41f85d:	add    al,0xa9
  41f85f:	test   DWORD PTR [edi+0x7ee47f7a],eax
  41f865:	lea    ecx,[ebx-0xbe14a94]
  41f86b:	aas    
  41f86c:	mov    dh,0x4e
  41f86e:	sub    ecx,edi
  41f870:	popf   
  41f871:	add    ebx,ecx
  41f873:	and    BYTE PTR [ecx],cl
  41f875:	stos   DWORD PTR es:[edi],eax
  41f876:	lods   eax,DWORD PTR ds:[esi]
  41f877:	out    dx,al
  41f878:	xor    BYTE PTR [edi-0x55b24f10],al
  41f87e:	and    DWORD PTR [edi-0x6a],0x5df6c71
  41f885:	fidivr DWORD PTR [ebp-0x9]
  41f888:	mov    dl,BYTE PTR [eax+eiz*8+0x6707629d]
  41f88f:	adc    al,0x8e
  41f891:	(bad)  
  41f892:	retf   
  41f893:	fisub  DWORD PTR [ebx+0x9]
  41f896:	fstp   DWORD PTR [ecx+0x1e]
  41f899:	mov    BYTE PTR [eax],bh
  41f89b:	loopne 0x41f893
  41f89d:	fldcw  WORD PTR [esi+eiz*4+0x59]
  41f8a1:	xchg   ecx,eax
  41f8a2:	add    edi,DWORD PTR [ebx-0x1c997231]
  41f8a8:	icebp  
  41f8a9:	inc    esp
  41f8aa:	xor    eax,0x462d9c3e
  41f8af:	sbb    edi,0x1a62795
  41f8b5:	push   ss
  41f8b6:	mov    BYTE PTR [edx-0x59543b55],ah
  41f8bc:	sbb    eax,0x8e29a2bf
  41f8c1:	data16 and dh,dl
  41f8c4:	mov    bl,BYTE PTR [ecx+0x1e332476]
  41f8ca:	les    esp,FWORD PTR [edx+0x4965925a]
  41f8d0:	xchg   ebx,eax
  41f8d1:	repz out dx,al
  41f8d3:	pop    ebp
  41f8d4:	mov    gs,WORD PTR [esi+0x228a9958]
  41f8da:	add    edx,DWORD PTR [esp+edi*8-0x3629ca9b]
  41f8e1:	jmp    0x7fca9f5f
  41f8e6:	fs cs rol edx,0x10
  41f8eb:	arpl   WORD PTR [edx],bx
  41f8ed:	sti    
  41f8ee:	(bad)  
  41f8ef:	xchg   esp,eax
  41f8f0:	cmp    DWORD PTR [edx+0x36],esp
  41f8f3:	mov    edi,?
  41f8f5:	inc    esi
  41f8f6:	inc    edi
  41f8f7:	add    DWORD PTR [ebx-0x62948b33],esp
  41f8fd:	bswap  esi
  41f8ff:	test   al,0x22
  41f901:	sub    al,0xe0
  41f903:	jge    0x41f8c1
  41f905:	mov    bl,0x6f
  41f907:	and    BYTE PTR [esp+eiz*2+0x26],bl
  41f90b:	or     DWORD PTR [edx-0x3e0fd678],0x60
  41f912:	adc    eax,0xcd8904a1
  41f917:	xchg   esi,eax
  41f918:	arpl   WORD PTR [eax+eiz*2+0x64350a0c],cx
  41f91f:	xchg   DWORD PTR [edx+0x33b5a194],edi
  41f925:	imul   BYTE PTR [edi]
  41f927:	lods   eax,DWORD PTR ds:[esi]
  41f928:	inc    edx
  41f929:	cwde   
  41f92a:	gs loop 0x41f8f3
  41f92d:	or     DWORD PTR [edi],ebp
  41f92f:	inc    ebx
  41f930:	jae    0x41f8d9
  41f932:	push   es
  41f933:	(bad)  
  41f934:	int3   
  41f935:	mov    esp,0x156a5cc
  41f93a:	popa   
  41f93b:	and    BYTE PTR [edi],0x35
  41f93e:	pop    esp
  41f93f:	aas    
  41f940:	push   0x154615c0
  41f945:	daa    
  41f946:	das    
  41f947:	int    0x4b
  41f949:	inc    ecx
  41f94a:	push   ds
  41f94b:	rol    DWORD PTR [eax-0x6e],cl
  41f94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f950:	fwait
  41f951:	add    ecx,DWORD PTR [edi]
  41f953:	mov    esi,0xf50931d4
  41f958:	call   FWORD PTR [ebx+0x2a]
  41f95b:	xor    esp,DWORD PTR [edi+0xd]
  41f95e:	xchg   ebp,eax
  41f95f:	arpl   cx,cx
  41f961:	pop    edi
  41f962:	lds    esi,FWORD PTR [ecx-0x59f21093]
  41f968:	sub    DWORD PTR [esi+0xfeb220c],esp
  41f96e:	es das 
  41f970:	loop   0x41f9d7
  41f972:	xor    BYTE PTR [esi+0x719a46f9],ah
  41f978:	sbb    ebx,ebx
  41f97a:	jmp    0x41f922
  41f97c:	ficomp WORD PTR [ebx]
  41f97e:	ret    
  41f97f:	sub    al,0x85
  41f981:	inc    edx
  41f982:	cdq    
  41f983:	iret   
  41f984:	sub    eax,0xdabb63e9
  41f989:	les    eax,FWORD PTR fs:[edx+0x17d85d8b]
  41f990:	jno    0x41f9fd
  41f992:	stos   BYTE PTR es:[edi],al
  41f993:	sub    ebx,DWORD PTR [esi-0x5a]
  41f996:	xor    esp,DWORD PTR [esi-0x22a1f151]
  41f99c:	pushf  
  41f99d:	repz xchg edx,eax
  41f99f:	aam    0x8a
  41f9a1:	inc    edi
  41f9a2:	nop
  41f9a3:	imul   esi,DWORD PTR ds:0xda62c889,0x5f4e7e8a
  41f9ad:	cs push edi
  41f9af:	push   esi
  41f9b0:	inc    edi
  41f9b1:	mov    dh,BYTE PTR [ebx+0x19]
  41f9b4:	xchg   esp,eax
  41f9b5:	jp     0x41fa10
  41f9b7:	mov    DWORD PTR [ecx-0xf3d4173],eax
  41f9bd:	aam    0x88
  41f9bf:	les    eax,FWORD PTR [edi-0x307f9f80]
  41f9c5:	call   0xe2b29aaf
  41f9ca:	scas   eax,DWORD PTR es:[edi]
  41f9cb:	lea    esp,ds:0x1edab701
  41f9d1:	out    dx,al
  41f9d2:	fisubr WORD PTR cs:[edi+0x6ead69d9]
  41f9d9:	fdiv   QWORD PTR [esi+edi*4]
  41f9dc:	cld    
  41f9dd:	(bad)  
  41f9de:	cmp    DWORD PTR [ebx+0x9],edi
  41f9e1:	fwait
  41f9e2:	mov    edi,0x4ee7bf0e
  41f9e7:	fsubr  DWORD PTR [ecx+0x12132e55]
  41f9ed:	lds    ebp,FWORD PTR [edx+edi*2]
  41f9f0:	retf   
  41f9f1:	sbb    BYTE PTR [esi-0x2cda7dfc],al
  41f9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f8:	jg     0x41f9ef
  41f9fa:	aam    0xa0
  41f9fc:	mov    dl,0x41
  41f9fe:	fwait
  41f9ff:	add    cl,BYTE PTR [edx-0x37b5f703]
  41fa05:	cmp    dh,BYTE PTR [esi+0x248de461]
  41fa0b:	aam    0xbb
  41fa0d:	into   
  41fa0e:	sbb    al,0xdd
  41fa10:	xchg   edx,eax
  41fa11:	cmp    ebp,DWORD PTR [edi]
  41fa13:	mov    ds:0x53e84a19,al
  41fa18:	mov    ds:0x69a602da,eax
  41fa1d:	fld    DWORD PTR [ecx+ebp*1+0x7619fc67]
  41fa24:	mov    bh,BYTE PTR [ebp+eiz*8-0x44d81a3d]
  41fa2b:	aam    0xa7
  41fa2d:	xchg   ebx,eax
  41fa2e:	mov    bl,0x93
  41fa30:	cs stos DWORD PTR es:[edi],eax
  41fa32:	das    
  41fa33:	fld    DWORD PTR [ebx]
  41fa35:	xchg   DWORD PTR [eax+0x77],ecx
  41fa38:	cdq    
  41fa39:	add    BYTE PTR [eax],bh
  41fa3b:	cmp    eax,0x3fa2d38a
  41fa40:	xor    al,0xd1
  41fa42:	dec    edi
  41fa43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa44:	(bad)  
  41fa45:	in     eax,0x97
  41fa47:	mov    al,0x8f
  41fa49:	xchg   ebx,eax
  41fa4a:	mov    cl,0x30
  41fa4c:	mov    dh,0x1e
  41fa4e:	xor    ebp,DWORD PTR [edi+ecx*4]
  41fa51:	(bad)  
  41fa53:	sub    eax,0x6a79ff89
  41fa58:	pop    ebp
  41fa59:	cmp    eax,0x8d9d3c74
  41fa5e:	sbb    BYTE PTR [ebx-0x4b],dh
  41fa61:	into   
  41fa62:	add    DWORD PTR [esi],edx
  41fa64:	enter  0x2fbb,0xaf
  41fa68:	sahf   
  41fa69:	ret    0xedc0
  41fa6c:	add    dh,bh
  41fa6e:	std    
  41fa6f:	nop
  41fa70:	sub    edx,DWORD PTR [edx+esi*4+0x78d3867d]
  41fa77:	sub    al,0x72
  41fa79:	repnz sub BYTE PTR [eax-0x4a],dh
  41fa7d:	mov    ebp,0xfeae5670
  41fa82:	cs fld st(5)
  41fa85:	div    DWORD PTR [ecx-0x505f0e09]
  41fa8b:	sahf   
  41fa8c:	sbb    BYTE PTR [ebp-0x79],cl
  41fa8f:	ins    DWORD PTR es:[edi],dx
  41fa90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa91:	cld    
  41fa92:	nop
  41fa93:	loop   0x41fa1f
  41fa95:	out    0x6a,eax
  41fa97:	pushf  
  41fa98:	jmp    0x41faff
  41fa9a:	inc    eax
  41fa9b:	cs push es
  41fa9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa9e:	or     ebx,DWORD PTR [ebx+0x30]
  41faa1:	into   
  41faa2:	and    al,0xb5
  41faa4:	mov    ss,WORD PTR [ecx+0x96c975f]
  41faaa:	imul   esi,DWORD PTR [edx+ecx*4],0x16a3aef
  41fab1:	jg     0x41faa5
  41fab3:	cdq    
  41fab4:	lahf   
  41fab5:	lea    eax,[ebx]
  41fab7:	test   eax,0xccd6543a
  41fabc:	call   0x941f29c6
  41fac1:	cld    
  41fac2:	fwait
  41fac3:	daa    
  41fac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac5:	sbb    al,ah
  41fac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac8:	xlat   BYTE PTR ds:[ebx]
  41fac9:	outs   dx,BYTE PTR ds:[esi]
  41faca:	sbb    ebp,DWORD PTR [edi-0x3b134c56]
  41fad0:	mov    bh,BYTE PTR [ebx-0x7ec313f5]
  41fad6:	js     0x41fa90
  41fad8:	or     DWORD PTR [esi+ebp*4-0x40f8df20],0x2c05d53d
  41fae3:	and    DWORD PTR [eax+0x64],esi
  41fae6:	loope  0x41fa94
  41fae8:	mov    al,ah
  41faea:	mov    ch,0x79
  41faec:	xchg   edx,eax
  41faed:	xchg   edi,eax
  41faee:	or     al,BYTE PTR [esi+esi*2-0x5ae74173]
  41faf5:	hlt    
  41faf6:	or     BYTE PTR [edx+0x50],dl
  41faf9:	loop   0x41fb29
  41fafb:	lahf   
  41fafc:	add    ebp,eax
  41fafe:	inc    ebx
  41faff:	sbb    al,0x5
  41fb01:	inc    ebp
  41fb02:	lods   eax,DWORD PTR ds:[esi]
  41fb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb04:	adc    esp,DWORD PTR [eax]
  41fb06:	jb     0x41fb38
  41fb08:	add    bh,BYTE PTR [ebp-0x487b9c0b]
  41fb0e:	das    
  41fb0f:	icebp  
  41fb10:	fdiv   QWORD PTR [ebx]
  41fb12:	mov    bh,0xcb
  41fb14:	sti    
  41fb15:	xor    eax,0x1d5116b9
  41fb1a:	cld    
  41fb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb1c:	daa    
  41fb1d:	xor    BYTE PTR [ecx-0x52],ah
  41fb20:	ret    0x6843
  41fb23:	mov    ebx,0x4a30fd8a
  41fb28:	push   es
  41fb29:	dec    ebp
  41fb2a:	push   0xffffffc3
  41fb2c:	mov    ch,0x8d
  41fb2e:	aas    
  41fb2f:	cld    
  41fb30:	cld    
  41fb31:	pop    ecx
  41fb32:	mov    eax,0x305d1470
  41fb37:	enter  0xa1d,0xa2
  41fb3b:	mov    edx,0xb553285d
  41fb40:	(bad)  
  41fb41:	lea    esi,[ecx-0x68]
  41fb44:	dec    edx
  41fb45:	fist   WORD PTR [edx]
  41fb47:	rol    BYTE PTR [edx+0x168f2f46],cl
  41fb4d:	mov    ah,0x5c
  41fb4f:	arpl   WORD PTR [esi],di
  41fb51:	push   esi
  41fb52:	in     al,0xa5
  41fb54:	mov    DWORD PTR [edi],0xab7d3079
  41fb5a:	inc    esi
  41fb5b:	in     al,0x9d
  41fb5d:	push   edi
  41fb5e:	dec    esp
  41fb5f:	ins    DWORD PTR es:[edi],dx
  41fb60:	mov    DWORD PTR [eax],edx
  41fb62:	pop    esp
  41fb63:	add    BYTE PTR [ebx],bh
  41fb65:	sbb    eax,0xc35b724b
  41fb6a:	ja     0x41fb74
  41fb6c:	ss (bad) 
  41fb6e:	mov    ebp,0xca0b0ea6
  41fb73:	mov    WORD PTR [eax],es
  41fb75:	retf   
  41fb76:	cs xchg ebp,eax
  41fb78:	fs div al
  41fb7b:	dec    ecx
  41fb7c:	push   esi
  41fb7d:	ja     0x41fb87
  41fb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb80:	jae    0x41fb04
  41fb82:	mov    al,ds:0xcd3a0cce
  41fb87:	sub    eax,0xb32f4d07
  41fb8c:	dec    edi
  41fb8d:	repnz cmp ch,BYTE PTR fs:[ebx]
  41fb91:	xchg   edx,eax
  41fb92:	pop    edx
  41fb93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb94:	push   ecx
  41fb95:	adc    edi,edi
  41fb97:	mov    eax,0xa9fc34a2
  41fb9c:	xchg   ebp,eax
  41fb9d:	dec    ebp
  41fb9e:	or     dl,BYTE PTR [ebp-0x47cc72b6]
  41fba4:	mov    dh,0x73
  41fba6:	dec    esi
  41fba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fba8:	mov    edi,0x811a6449
  41fbad:	pop    ss
  41fbae:	xchg   edi,eax
  41fbaf:	mov    BYTE PTR [edx+0x7becbfc],cl
  41fbb5:	jo     0x41fb9f
  41fbb7:	lahf   
  41fbb8:	jbe    0x41fb47
  41fbba:	sub    al,0x4c
  41fbbc:	fadd   QWORD PTR [edx+ebx*4]
  41fbbf:	pop    ebp
  41fbc0:	das    
  41fbc1:	jge    0x41fbf3
  41fbc3:	lods   eax,DWORD PTR ds:[esi]
  41fbc4:	sahf   
  41fbc5:	cmp    al,0x1b
  41fbc7:	fist   WORD PTR [esi-0x39cba51d]
  41fbcd:	lea    eax,[edi-0xc]
  41fbd0:	rcl    ebx,0x69
  41fbd3:	jo     0x41fbae
  41fbd5:	mov    eax,ds:0xca05864b
  41fbda:	lods   al,BYTE PTR cs:[esi]
  41fbdc:	dec    ebx
  41fbdd:	nop
  41fbde:	dec    ebx
  41fbdf:	call   0x3fc1:0xa6826867
  41fbe6:	jp     0x41fbf8
  41fbe8:	lock mov ss,ebx
  41fbeb:	outs   dx,DWORD PTR ds:[esi]
  41fbec:	(bad)  
  41fbed:	push   ss
  41fbee:	mov    al,0xd2
  41fbf0:	ror    ah,0xee
  41fbf3:	and    eax,0x2bd4fe07
  41fbf8:	lods   al,BYTE PTR ds:[esi]
  41fbf9:	mov    cl,BYTE PTR [ecx]
  41fbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbfc:	push   ecx
  41fbfd:	jl     0x41fbc1
  41fbff:	cmp    DWORD PTR [eax+0x3e],esp
  41fc02:	push   ebp
  41fc03:	nop
  41fc04:	mov    cl,BYTE PTR [esi+esi*8+0x6eb26973]
  41fc0b:	adc    BYTE PTR [esi],dh
  41fc0d:	mov    eax,ds:0x132a8aae
  41fc12:	fwait
  41fc13:	ret    
  41fc14:	sub    BYTE PTR [ecx+0x2a0a5425],dl
  41fc1a:	mov    al,ds:0x2f938bed
  41fc1f:	inc    DWORD PTR [ecx+eax*1]
  41fc22:	pop    esp
  41fc23:	pushf  
  41fc24:	fisub  WORD PTR [ebp-0x42fe5693]
  41fc2a:	loopne 0x41fc58
  41fc2c:	pop    ebp
  41fc2d:	dec    ebp
  41fc2e:	sbb    ch,bh
  41fc30:	(bad)  
  41fc31:	jae    0x41fc77
  41fc33:	(bad)  
  41fc34:	or     eax,0x9144ab03
  41fc39:	fild   QWORD PTR [esi+0x4f]
  41fc3c:	in     eax,dx
  41fc3d:	nop
  41fc3e:	js     0x41fbe6
  41fc40:	and    edx,DWORD PTR [edi+0x4ade55e8]
  41fc46:	jbe    0x41fc04
  41fc48:	ins    BYTE PTR es:[edi],dx
  41fc49:	imul   ebp,DWORD PTR [edi],0xf8551f5a
  41fc4f:	cli    
  41fc50:	or     bl,BYTE PTR [edx-0x7e]
  41fc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc55:	(bad)  
  41fc56:	cli    
  41fc57:	repnz add DWORD PTR [edx-0x5755e8d],ebx
  41fc5e:	jo     0x41fbed
  41fc60:	(bad)  
  41fc62:	xchg   ebx,eax
  41fc63:	xchg   esi,eax
  41fc64:	inc    edx
  41fc65:	popa   
  41fc66:	hlt    
  41fc67:	or     BYTE PTR [edx-0x5dfc5e7],0x97
  41fc6e:	push   es
  41fc6f:	jb     0x41fbfb
  41fc71:	fisttp QWORD PTR [ecx+edi*8-0x7d]
  41fc75:	popf   
  41fc76:	sub    ah,BYTE PTR [ebx+0x61458daf]
  41fc7c:	xchg   ebx,eax
  41fc7d:	ins    BYTE PTR es:[edi],dx
  41fc7e:	sub    ebp,DWORD PTR [edx-0x7b]
  41fc81:	adc    BYTE PTR [edi],ch
  41fc83:	push   cs
  41fc84:	mov    ds:0x522a9546,eax
  41fc89:	pop    esi
  41fc8a:	and    eax,0xbc4d53a0
  41fc8f:	push   ebp
  41fc90:	or     bl,al
  41fc92:	aaa    
  41fc93:	and    al,bl
  41fc95:	fsubr  QWORD PTR ds:0x85682742
  41fc9b:	or     BYTE PTR [edx+0x8],ch
  41fc9e:	fbstp  TBYTE PTR [ebp+0x46]
  41fca1:	(bad)  
  41fca2:	jmp    0x2dc:0x510e5804
  41fca9:	mov    dl,0x24
  41fcab:	xor    al,BYTE PTR [ebx-0x72]
  41fcae:	lods   eax,DWORD PTR ds:[esi]
  41fcaf:	sub    bl,BYTE PTR [esi]
  41fcb1:	fisubr WORD PTR [edi]
  41fcb3:	(bad)  
  41fcb4:	aam    0x91
  41fcb6:	shl    BYTE PTR [ebp-0x52639207],cl
  41fcbc:	arpl   bp,si
  41fcbe:	pop    ecx
  41fcbf:	jp     0x41fc7b
  41fcc1:	shl    eax,cl
  41fcc3:	dec    edi
  41fcc4:	cmc    
  41fcc5:	adc    al,BYTE PTR [esi-0x5a]
  41fcc8:	pushf  
  41fcc9:	jge    0x41fc6e
  41fccb:	jne    0x41fcb6
  41fccd:	push   edi
  41fcce:	xchg   ebx,eax
  41fccf:	jb     0x41fd3b
  41fcd1:	daa    
  41fcd2:	xor    dl,ah
  41fcd4:	cwde   
  41fcd5:	sub    ebx,esi
  41fcd7:	or     eax,0xf10e35cc
  41fcdc:	(bad)  
  41fcdd:	lea    ebp,[ebp+0x44]
  41fce0:	cmp    DWORD PTR [edx-0x23],esi
  41fce3:	mov    dl,0xc
  41fce5:	adc    BYTE PTR [edi],ch
  41fce7:	mov    ds:0x1a92fe7,eax
  41fcec:	(bad)  
  41fced:	sbb    BYTE PTR [edi-0x7ab5745a],dh
  41fcf3:	pop    esi
  41fcf4:	sbb    dh,BYTE PTR [ebx]
  41fcf6:	add    esi,DWORD PTR [esi+0x3]
  41fcf9:	inc    ebp
  41fcfa:	das    
  41fcfb:	je     0x41fd69
  41fcfd:	mov    bl,0xaf
  41fcff:	cmp    cl,dh
  41fd01:	punpcklbw mm6,DWORD PTR [edx-0x5a2b053a]
  41fd08:	inc    ebp
  41fd09:	sub    eax,0xc57a49e5
  41fd0e:	jecxz  0x41fcc3
  41fd10:	lods   al,BYTE PTR ds:[esi]
  41fd11:	or     ebp,DWORD PTR [ecx]
  41fd13:	push   cs
  41fd14:	mov    dh,bl
  41fd16:	adc    ch,ah
  41fd18:	mov    esp,0x9aa69107
  41fd1d:	cwde   
  41fd1e:	js     0x41fd82
  41fd20:	xchg   ebx,eax
  41fd21:	xchg   edi,eax
  41fd22:	cmp    DWORD PTR [ebx],0x78
  41fd25:	mov    ah,0x2f
  41fd27:	fs mov dl,0x6d
  41fd2a:	loop   0x41fcfe
  41fd2c:	jae    0x41fcd3
  41fd2e:	pushf  
  41fd2f:	jbe    0x41fd8d
  41fd31:	xor    eax,0xf01a5d3
  41fd36:	jmp    0x84b2d9ff
  41fd3b:	es mov dh,bh
  41fd3e:	aad    0xf4
  41fd40:	sub    eax,0x4d86bbf1
  41fd45:	lea    esi,[edx+0x34]
  41fd48:	jmp    0xa4a539c8
  41fd4d:	jae    0x41fd7e
  41fd4f:	xchg   ebp,eax
  41fd50:	fdivr  QWORD PTR ds:0x8455ad20
  41fd56:	push   eax
  41fd57:	pop    edx
  41fd58:	std    
  41fd59:	ret    
  41fd5a:	xchg   ebp,eax
  41fd5b:	inc    esi
  41fd5c:	ret    0x44c2
  41fd5f:	clc    
  41fd60:	out    0x21,al
  41fd62:	sbb    BYTE PTR [ebp-0x6dcd319d],0x5e
  41fd69:	xlat   BYTE PTR ds:[ebx]
  41fd6a:	xor    DWORD PTR [ebp-0x16d9197c],esp
  41fd70:	add    ch,BYTE PTR [esi]
  41fd72:	in     al,0x31
  41fd74:	pop    edi
  41fd75:	rcr    BYTE PTR [esi+0x5c],0xa6
  41fd79:	xchg   edx,eax
  41fd7a:	retf   
  41fd7b:	gs retf 0x40cd
  41fd7f:	ret    0x63f2
  41fd82:	das    
  41fd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd84:	push   edx
  41fd85:	dec    esp
  41fd86:	mov    DWORD PTR [ecx-0x599b66e6],ecx
  41fd8c:	adc    al,dl
  41fd8e:	push   esi
  41fd8f:	add    eax,0xb4f55f9c
  41fd94:	mov    ds,WORD PTR [eax]
  41fd96:	xchg   DWORD PTR [edx+0xf],edi
  41fd99:	nop
  41fd9a:	scas   eax,DWORD PTR es:[edi]
  41fd9b:	fsub   DWORD PTR [esi-0x22]
  41fd9e:	xor    al,0xb9
  41fda0:	sbb    BYTE PTR [ecx],ch
  41fda2:	fcom   QWORD PTR [esi]
  41fda4:	dec    esi
  41fda5:	cmc    
  41fda6:	js     0x41fdf4
  41fda8:	lea    edi,[edi]
  41fdaa:	cwde   
  41fdab:	inc    edx
  41fdac:	and    ebp,DWORD PTR [esi-0x71]
  41fdaf:	xor    edi,ecx
  41fdb1:	mov    WORD PTR [edx],gs
  41fdb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb4:	lahf   
  41fdb5:	jbe    0x41fda2
  41fdb7:	jbe    0x41fe19
  41fdb9:	push   cs
  41fdba:	mov    ebp,0xb5653d01
  41fdbf:	mov    ch,0x66
  41fdc1:	or     al,0x79
  41fdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc4:	es out dx,eax
  41fdc6:	ror    esp,0x93
  41fdc9:	or     eax,0x481e912f
  41fdce:	and    BYTE PTR [ebx],bl
  41fdd0:	out    dx,al
  41fdd1:	lock sti 
  41fdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdd4:	fsub   DWORD PTR ds:0x24ce7718
  41fdda:	ret    0xc0ab
  41fddd:	push   ebx
  41fdde:	loopne 0x41fe05
  41fde0:	jmp    0x41fe30
  41fde2:	popa   
  41fde3:	dec    esp
  41fde4:	jmp    0xb7c5:0x91a68479
  41fdeb:	and    DWORD PTR [esp+edi*8],ebp
  41fdee:	inc    esi
  41fdef:	fmul   DWORD PTR [edx+0x7ff1a3d9]
  41fdf5:	(bad)  
  41fdf6:	or     eax,0x4d8ae5f2
  41fdfb:	loop   0x41fda2
  41fdfd:	cdq    
  41fdfe:	aad    0xd5
  41fe00:	stc    
  41fe01:	repnz or cl,BYTE PTR [ecx]
  41fe04:	mov    ch,BYTE PTR [edi+0x7a0a5aef]
  41fe0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe0b:	lock ds jge 0x41fd99
  41fe0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe10:	mov    dh,0xc1
  41fe12:	or     DWORD PTR [ebx+0x4f],0x74aa4f3e
  41fe19:	int3   
  41fe1a:	das    
  41fe1b:	arpl   sp,bp
  41fe1d:	lock sbb ch,BYTE PTR [esi-0x47]
  41fe21:	fstp   QWORD PTR [esi-0x2c]
  41fe24:	sbb    eax,0x65213e8d
  41fe29:	sahf   
  41fe2a:	pop    eax
  41fe2b:	je     0x61d82db4
  41fe31:	imul   eax,DWORD PTR [edi+0x0],0x7a
  41fe35:	rcl    DWORD PTR [edx],cl
  41fe37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe38:	pop    esi
  41fe39:	xchg   DWORD PTR [eax-0x6f37375e],esp
  41fe3f:	je     0x41fdcb
  41fe41:	imul   ebx,DWORD PTR [esp+edi*4],0xcf8d8c88
  41fe48:	jb     0x41fdd6
  41fe4a:	inc    esi
  41fe4b:	shl    BYTE PTR [ebp+0x38],cl
  41fe4e:	push   edx
  41fe4f:	out    0x8f,al
  41fe51:	in     al,0xec
  41fe53:	rcl    ebx,0x22
  41fe56:	das    
  41fe57:	sbb    ch,BYTE PTR [esi-0x6f]
  41fe5a:	inc    esp
  41fe5b:	mov    DWORD PTR ds:0x52a61d58,esi
  41fe61:	push   ecx
  41fe62:	or     BYTE PTR [esp+ebp*1-0x7a],0xdb
  41fe67:	xor    eax,0xf116f68a
  41fe6c:	pop    edi
  41fe6d:	and    DWORD PTR [ecx-0x5c1668e2],edi
  41fe73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe74:	hlt    
  41fe75:	jno    0x41fe43
  41fe77:	cmp    eax,0x2f0c5aee
  41fe7c:	mov    ch,BYTE PTR [esi]
  41fe7e:	inc    ecx
  41fe7f:	lods   al,BYTE PTR ds:[esi]
  41fe80:	stc    
  41fe81:	rcr    DWORD PTR [ebx-0x1f],cl
  41fe84:	sub    eax,0x9d58058d
  41fe89:	jg     0x41feec
  41fe8b:	mov    bl,BYTE PTR ds:0x23782f40
  41fe91:	xor    DWORD PTR [eax],edi
  41fe93:	xor    BYTE PTR [eax],bh
  41fe95:	lds    esi,FWORD PTR [edx-0x5a]
  41fe98:	(bad)  
  41fe99:	jns    0x41ff06
  41fe9b:	sub    al,BYTE PTR [ebx-0x6b]
  41fe9e:	cs dec edx
  41fea0:	mov    ebx,DWORD PTR [esi+0x5760f99c]
  41fea6:	adc    eax,0x3fe57123
  41feab:	adc    esi,DWORD PTR [edi]
  41fead:	lea    esp,[ebp+0x25e2ef21]
  41feb3:	cmp    DWORD PTR [eax+0x54],0x2f
  41feb7:	in     al,dx
  41feb8:	pop    es
  41feb9:	lds    ebp,FWORD PTR [edx+ebp*4]
  41febc:	bound  ebp,QWORD PTR [eax]
  41febe:	shl    DWORD PTR [esi+ebp*8+0x71a5e059],0x0
  41fec6:	addr16 stc 
  41fec8:	mov    dl,0x21
  41feca:	das    
  41fecb:	pop    es
  41fecc:	dec    edx
  41fecd:	das    
  41fece:	inc    ebp
  41fecf:	push   ebp
  41fed0:	and    ch,BYTE PTR [edi-0x17]
  41fed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fed4:	mov    ah,0x8c
  41fed6:	adc    bh,BYTE PTR [ebp+0x657ef96b]
  41fedc:	mov    bl,bl
  41fede:	add    edi,DWORD PTR [ebp-0x77]
  41fee1:	fist   WORD PTR ds:0xdda02140
  41fee7:	nop
  41fee8:	sbb    dl,BYTE PTR [ebx+0x360a6fcd]
  41feee:	and    ecx,ebx
  41fef0:	or     al,BYTE PTR [eax+0x678a5d4b]
  41fef6:	data16 mov WORD PTR [ebp+0x6f],es
  41fefa:	dec    edi
  41fefb:	mov    cl,BYTE PTR [ecx*4+0x8b73204]
  41ff02:	ins    DWORD PTR es:[edi],dx
  41ff03:	sbb    edx,DWORD PTR [ecx+0x7f]
  41ff06:	add    ebp,ebp
  41ff08:	fmul   QWORD PTR [ebp+0x5ffde42c]
  41ff0e:	jbe    0x41ff21
  41ff10:	ins    BYTE PTR es:[edi],dx
  41ff11:	lea    ebx,[esi-0x6c]
  41ff14:	sub    dl,BYTE PTR [eax]
  41ff16:	mov    ebx,0x2eda2926
  41ff1b:	mov    ah,0x8d
  41ff1d:	movq   mm4,QWORD PTR [edi-0x5a029ffb]
  41ff24:	push   edi
  41ff25:	retf   
  41ff26:	push   eax
  41ff27:	outs   dx,BYTE PTR ds:[esi]
  41ff28:	and    bh,BYTE PTR [ebx+0x66]
  41ff2b:	add    DWORD PTR [ebp-0x1c883cee],ecx
  41ff31:	jmp    0xfb5ded24
  41ff36:	pushf  
  41ff37:	(bad)  
  41ff38:	push   ebp
  41ff39:	lea    esp,[esi]
  41ff3b:	inc    esp
  41ff3c:	je     0x41fec4
  41ff3e:	gs inc ebp
  41ff40:	rcr    ebp,0x2e
  41ff43:	(bad)  [esi-0x27f21357]
  41ff49:	pop    es
  41ff4a:	jmp    0xf7469bf4
  41ff4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff50:	hlt    
  41ff51:	idiv   BYTE PTR [edx+0x4ee68a95]
  41ff57:	dec    esi
  41ff58:	(bad)  
  41ff59:	sub    dl,BYTE PTR [edx+esi*4+0x22]
  41ff5d:	mov    gs,WORD PTR [esi]
  41ff5f:	and    DWORD PTR [esi+ebp*1-0xb],edx
  41ff63:	push   cs
  41ff64:	adc    bh,bh
  41ff66:	pop    ecx
  41ff67:	mov    ch,0x89
  41ff69:	div    DWORD PTR [ecx-0x9]
  41ff6c:	daa    
  41ff6d:	clc    
  41ff6e:	jb     0x41ff4e
  41ff70:	sbb    esp,ecx
  41ff72:	nop
  41ff73:	mov    ah,0x31
  41ff75:	and    eax,0x5e90aa7c
  41ff7a:	mov    cl,0x1
  41ff7c:	dec    edx
  41ff7d:	or     eax,0x7fa96878
  41ff82:	sbb    ch,BYTE PTR [esi+0x3e]
  41ff85:	and    esp,DWORD PTR fs:[ecx]
  41ff88:	push   ds
  41ff89:	jae    0x41ff7f
  41ff8b:	fmul   DWORD PTR [edx+0x2150ee7c]
  41ff91:	jmp    0x13cc496d
  41ff96:	sbb    al,0x1a
  41ff98:	jae    0x41ff82
  41ff9a:	push   ebp
  41ff9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff9c:	mov    dh,0x8d
  41ff9e:	xchg   BYTE PTR ds:0xff3c4135,cl
  41ffa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa5:	nop
  41ffa6:	das    
  41ffa7:	and    BYTE PTR [esi+edi*2-0x7b18535f],al
  41ffae:	xchg   edx,eax
  41ffaf:	scas   eax,DWORD PTR es:[edi]
  41ffb0:	mov    ch,0x17
  41ffb2:	js     0x41ffae
  41ffb4:	dec    ebp
  41ffb5:	mov    ebp,0xf58a1fb2
  41ffba:	in     al,dx
  41ffbb:	(bad)  
  41ffbc:	cld    
  41ffbd:	xor    BYTE PTR [edx],bl
  41ffbf:	lds    eax,FWORD PTR [ecx-0x5ddb605e]
  41ffc5:	lea    edi,[ecx+edx*2]
  41ffc8:	and    al,0x29
  41ffca:	xor    BYTE PTR [edi],dl
  41ffcc:	mov    cl,BYTE PTR [ecx+0x7ee00f07]
  41ffd2:	xor    ebx,esp
  41ffd4:	fcmovnb st,st(1)
  41ffd6:	pop    ebp
  41ffd7:	sbb    ecx,DWORD PTR [edx]
  41ffd9:	das    
  41ffda:	mov    BYTE PTR [eax+0x7373dcaf],0x8a
  41ffe1:	sar    DWORD PTR [ebx],1
  41ffe3:	sar    DWORD PTR [ecx-0x65],1
  41ffe6:	scas   al,BYTE PTR es:[edi]
  41ffe7:	lock mov al,0xb5
  41ffea:	pop    ebx
  41ffeb:	pop    es
  41ffec:	cmp    BYTE PTR [ebp+0x770c75f9],cl
  41fff2:	(bad)  [ecx+0x71]
  41fff5:	inc    eax
  41fff6:	das    
  41fff7:	xchg   esi,eax
  41fff8:	jg     0x42003e
  41fffa:	push   ebp
  41fffb:	or     DWORD PTR [eax+0x61a60d71],ebx
  420001:	lods   eax,DWORD PTR ds:[esi]
  420002:	cmp    BYTE PTR [edi+0x4d03beef],dh
  420008:	mov    cl,ch
  42000a:	fadd   QWORD PTR [esi]
  42000c:	dec    edi
  42000d:	jbe    0x42000a
  42000f:	and    eax,0x12668da5
  420014:	call   0x2f56:0x74807a09
  42001b:	inc    ebx
  42001c:	lea    edi,[ebp-0x22c3b03a]
  420022:	and    ah,BYTE PTR [esi-0x783d2144]
  420028:	dec    edx
  420029:	xor    dl,ch
  42002b:	out    0x8a,al
  42002d:	lds    esi,FWORD PTR [eax]
  42002f:	and    al,BYTE PTR [edi]
  420031:	jns    0x42007f
  420033:	ja     0x42000c
  420035:	xchg   BYTE PTR [esi+eiz*4],bh
  420038:	inc    esp
  420039:	sub    eax,0xbc4d3237
  42003e:	inc    edi
  42003f:	je     0x41ffcb
  420041:	and    ebp,DWORD PTR [eax+0xa]
  420044:	out    0xfa,al
  420046:	fiadd  DWORD PTR [ecx+0x51128d8e]
  42004c:	mov    ecx,0xff05da86
  420051:	or     BYTE PTR [edi],ch
  420053:	(bad)  
  420054:	sub    al,0x16
  420056:	xlat   BYTE PTR ds:[ebx]
  420057:	dec    esi
  420058:	jne    0x42003f
  42005a:	jno    0x420002
  42005c:	sub    DWORD PTR [ebx],edi
  42005e:	pop    edx
  42005f:	test   DWORD PTR [ecx],edi
  420061:	dec    ecx
  420062:	push   ebx
  420063:	dec    ebx
  420064:	ins    BYTE PTR es:[edi],dx
  420065:	xlat   BYTE PTR ds:[ebx]
  420066:	cs push esi
  420068:	mov    ebp,0xb5772352
  42006d:	mov    cl,0x5
  42006f:	xchg   ecx,eax
  420070:	pushf  
  420071:	(bad)  
  420072:	scas   eax,DWORD PTR es:[edi]
  420073:	cmp    al,0xe5
  420075:	push   eax
  420076:	je     0x420020
  420078:	jmp    0x420045
  42007a:	cs out 0xfb,al
  42007d:	popf   
  42007e:	dec    esi
  42007f:	imul   ebx,DWORD PTR [esi+0x7f],0xffffffa8
  420083:	xchg   edx,eax
  420084:	pusha  
  420085:	nop
  420086:	lds    ebx,FWORD PTR [ecx+0x64]
  420089:	dec    ebp
  42008a:	icebp  
  42008b:	or     cl,cl
  42008d:	cmp    ah,BYTE PTR [edx-0x570375c3]
  420093:	pop    esp
  420094:	inc    ebx
  420095:	pop    edi
  420096:	dec    edi
  420097:	push   ds
  420098:	imul   ecx,DWORD PTR [ebp-0x4301229e],0x483cb150
  4200a2:	das    
  4200a3:	cmp    BYTE PTR [esi],ah
  4200a5:	outs   dx,BYTE PTR ds:[esi]
  4200a6:	xor    ch,BYTE PTR [ebx]
  4200a8:	scas   al,BYTE PTR es:[edi]
  4200a9:	push   ebx
  4200aa:	push   edx
  4200ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200ac:	std    
  4200ad:	popa   
  4200ae:	xchg   edx,eax
  4200af:	in     al,0x34
  4200b1:	xchg   DWORD PTR [ebx+0x7e],ebp
  4200b4:	mov    DWORD PTR [edi+0xe],esp
  4200b7:	jno    0x420127
  4200b9:	add    BYTE PTR [edi-0x4e],0x28
  4200bd:	lods   al,BYTE PTR ds:[esi]
  4200be:	adc    esi,esp
  4200c0:	stos   BYTE PTR es:[edi],al
  4200c1:	inc    esp
  4200c2:	mov    ch,BYTE PTR [ecx-0x24]
  4200c5:	fbstp  TBYTE PTR [eax]
  4200c7:	fdivr  DWORD PTR [ecx]
  4200c9:	mov    eax,ds:0xcc2661e2
  4200ce:	push   cs
  4200cf:	mov    ecx,DWORD PTR [esi+0x13]
  4200d2:	push   esp
  4200d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200d4:	inc    edx
  4200d5:	push   es
  4200d6:	adc    DWORD PTR [edi],ebx
  4200d8:	pop    es
  4200d9:	pop    ecx
  4200da:	cmp    ecx,DWORD PTR [ebx]
  4200dc:	mov    ds:0xcc93e11b,al
  4200e1:	jbe    0x42012d
  4200e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200e4:	stos   BYTE PTR es:[edi],al
  4200e5:	mov    ch,0x26
  4200e7:	aam    0xe5
  4200e9:	test   eax,0x7989ec1a
  4200ee:	jo     0x4200b1
  4200f0:	sbb    esi,DWORD PTR [edx+0x522f2e00]
  4200f6:	fsub   DWORD PTR [ebp+0x1776d8ba]
  4200fc:	(bad)  
  4200fe:	mov    dh,0x78
  420100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420101:	cmp    BYTE PTR ds:0x741c89a9,0xc0
  420108:	cdq    
  420109:	sbb    bl,BYTE PTR [edi+0x40d8ccf2]
  42010f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420110:	lahf   
  420111:	push   0x2bc9952d
  420116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420117:	mov    ecx,0xbdf3a8a
  42011c:	sahf   
  42011d:	sbb    DWORD PTR [ebp-0x472a3a7],0xdb2acabd
  420127:	add    ebp,ebx
  420129:	xlat   BYTE PTR ds:[ebx]
  42012a:	sub    al,0x75
  42012c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012d:	loope  0x4200d4
  42012f:	jno    0x4200f1
  420131:	lea    esi,[ecx+0x4d]
  420134:	jnp    0x420140
  420136:	cmp    DWORD PTR [ebx],eax
  420138:	and    edx,0x2e
  42013b:	mov    bl,0xf2
  42013d:	push   ebx
  42013e:	fadd   QWORD PTR [ebx]
  420140:	mov    ebx,edi
  420142:	imul   esp,DWORD PTR [ebp-0x7d02844d],0x69bfb86d
  42014c:	sti    
  42014d:	sub    DWORD PTR [edi],ebp
  42014f:	xlat   BYTE PTR ds:[ebx]
  420150:	pop    eax
  420151:	shl    BYTE PTR [esi+0x2bd4eaf8],0xa6
  420158:	loope  0x4201bf
  42015a:	mov    esi,0x191408c5
  42015f:	lock mov dh,BYTE PTR [esp+edi*2+0x39bb2403]
  420167:	push   ss
  420168:	xchg   edi,eax
  420169:	mov    WORD PTR [esp+eiz*2-0x74],?
  42016d:	jp     0x420155
  42016f:	sub    eax,0x6a01ed55
  420174:	mov    dh,BYTE PTR [ebx-0x2e]
  420177:	daa    
  420178:	jl     0x4200fe
  42017a:	mov    dl,0x3f
  42017c:	add    edx,ebp
  42017e:	shl    BYTE PTR [esi-0x5634f262],0xf
  420185:	call   0xd40:0xa18a117a
  42018c:	add    esp,DWORD PTR ds:0x8de939bf
  420192:	imul   edi,esi,0x7c150f0d
  420198:	hlt    
  420199:	clc    
  42019a:	cs jns 0x4201a1
  42019d:	add    eax,0x4746adac
  4201a2:	les    esp,FWORD PTR [esi+0x6824e224]
  4201a8:	mov    edi,0x8ad2651f
  4201ad:	sbb    BYTE PTR [esi+0x2ac46418],bl
  4201b3:	call   0x2c048fb9
  4201b8:	jle    0x4201fc
  4201ba:	xor    BYTE PTR [esi+0x2e],0xc9
  4201be:	cs pop ebp
  4201c0:	(bad)  
  4201c1:	pop    esp
  4201c2:	xchg   edi,eax
  4201c3:	add    eax,0x59837ab6
  4201c8:	sub    cl,BYTE PTR [ebp+0x51688b53]
  4201ce:	add    al,0xaa
  4201d0:	loope  0x4201f9
  4201d2:	das    
  4201d3:	cmp    al,0x1d
  4201d5:	jno    0x420188
  4201d7:	mov    ch,0xad
  4201d9:	push   ds
  4201da:	mov    bl,0xa6
  4201dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201dd:	mov    al,0x8
  4201df:	mul    DWORD PTR [ebx]
  4201e1:	nop
  4201e2:	mov    eax,ds:0xed37a7e8
  4201e7:	or     ecx,DWORD PTR [edx+0x215acedf]
  4201ed:	popf   
  4201ee:	xchg   ebx,eax
  4201ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201f0:	or     al,0xe1
  4201f2:	inc    ecx
  4201f3:	pop    es
  4201f4:	xor    ah,0x93
  4201f7:	pop    ax
  4201f9:	shl    DWORD PTR [eax],cl
  4201fb:	mov    ah,BYTE PTR cs:[esi-0x178ec159]
  420202:	push   esp
  420203:	pushf  
  420204:	xor    ecx,eax
  420206:	fs dec ebx
  420208:	or     cl,ah
  42020a:	jne    0x420202
  42020c:	(bad)  
  42020d:	pop    ss
  42020e:	xchg   esi,eax
  42020f:	sar    ch,cl
  420211:	out    0x16,eax
  420213:	lods   al,BYTE PTR ds:[esi]
  420214:	sbb    eax,0xc3d2f37
  420219:	fild   WORD PTR ds:0xb2c4395
  42021f:	dec    ebp
  420220:	repnz mov es,WORD PTR [ebp+0x62de6d92]
  420227:	xchg   ebx,eax
  420228:	pop    ecx
  420229:	imul   esi,DWORD PTR [edi+0x17],0x3c2e3063
  420230:	jns    0x4201eb
  420232:	sti    
  420233:	mov    eax,0xb85db78a
  420238:	icebp  
  420239:	mov    ss,WORD PTR [edi]
  42023b:	lods   eax,DWORD PTR ds:[esi]
  42023c:	stos   DWORD PTR es:[edi],eax
  42023d:	xor    al,BYTE PTR [eax+0x4c]
  420240:	push   0xffffffee
  420242:	mov    ds:0xfe198a86,eax
  420247:	add    al,0xd6
  420249:	arpl   WORD PTR [edx+0x75],ax
  42024c:	mov    esp,0x9307a08d
  420251:	mov    ebp,0x5974594
  420256:	das    
  420257:	aaa    
  420258:	push   ebx
  420259:	inc    ebx
  42025a:	outs   dx,BYTE PTR ds:[esi]
  42025b:	sbb    eax,0xa6f75cfa
  420260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420261:	lahf   
  420262:	push   ebp
  420263:	or     BYTE PTR [ebp-0x20],bh
  420266:	mov    ebp,0x2f82fc86
  42026b:	es call 0x338f67aa
  420271:	dec    edi
  420272:	jl     0x42021a
  420274:	mov    esi,0x26f9c4a
  420279:	xor    al,dl
  42027b:	int    0x8a
  42027d:	mov    esp,0x9ef6689f
  420282:	dec    esi
  420283:	js     0x4202a1
  420285:	lea    eax,[edi]
  420287:	sub    bh,BYTE PTR [esi-0x2d]
  42028a:	es mov edi,0xd32f527d
  420290:	cmp    al,0xbb
  420292:	cld    
  420293:	inc    edi
  420294:	push   ds
  420295:	popf   
  420296:	inc    edx
  420297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420298:	dec    ecx
  420299:	in     al,0xf
  42029b:	ins    DWORD PTR es:[edi],dx
  42029c:	(bad)  
  42029d:	jno    0x4202c5
  42029f:	aad    0x8d
  4202a1:	pusha  
  4202a2:	xor    al,0x4c
  4202a4:	jg     0x420270
  4202a6:	(bad)  
  4202a7:	pop    edx
  4202a8:	sahf   
  4202a9:	outs   dx,DWORD PTR ds:[esi]
  4202aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ac:	fwait
  4202ad:	jmp    0x4202f7
  4202af:	mov    esi,?
  4202b1:	shl    BYTE PTR [esi],0xee
  4202b4:	mov    DWORD PTR [edi],esp
  4202b6:	xor    esi,edi
  4202b8:	xchg   ecx,eax
  4202b9:	cwde   
  4202ba:	rcl    BYTE PTR [esi],0x31
  4202bd:	push   esp
  4202be:	dec    esp
  4202bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c0:	cmp    esp,0x1
  4202c3:	mov    esp,eax
  4202c5:	in     al,dx
  4202c6:	in     al,dx
  4202c7:	dec    ebx
  4202c8:	mov    ebp,DWORD PTR [esi+ebx*1]
  4202cb:	outs   dx,DWORD PTR ds:[esi]
  4202cc:	sub    DWORD PTR [edx-0x7c],ecx
  4202cf:	sub    al,0xc4
  4202d1:	in     eax,dx
  4202d2:	aad    0x92
  4202d4:	shl    BYTE PTR [ecx-0x3d9e5985],cl
  4202da:	and    eax,0x25cbfd1
  4202df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e0:	mov    ebp,eax
  4202e2:	xor    BYTE PTR [eax+ebx*4-0x6],0xc1
  4202e7:	and    DWORD PTR [edx],edi
  4202e9:	dec    edi
  4202ea:	das    
  4202eb:	cmc    
  4202ec:	adc    esp,ebp
  4202ee:	test   eax,0x9fbd706b
  4202f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202f4:	jl     0x42027b
  4202f6:	adc    ebp,ecx
  4202f8:	adc    BYTE PTR [esi+0x788acd1a],bh
  4202fe:	call   0x351c330c
  420303:	lock add BYTE PTR [esi+0x2dd74105],cl
  42030a:	xor    al,0xc6
  42030c:	xchg   BYTE PTR [esi+0x2f],bh
  42030f:	fimul  DWORD PTR fs:[edi+esi*1]
  420313:	jge    0x4202e7
  420315:	fs push edx
  420317:	mov    BYTE PTR [ecx],0x8e
  42031a:	xchg   ecx,eax
  42031b:	or     eax,0xb352267
  420320:	fs push ebx
  420322:	inc    esp
  420323:	cmc    
  420324:	dec    ebx
  420325:	jmp    0x2628adac
  42032a:	or     eax,DWORD PTR [ebx]
  42032c:	mov    dl,cl
  42032e:	push   es
  42032f:	(bad)  
  420330:	stc    
  420331:	clc    
  420332:	xchg   ebx,eax
  420333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420334:	jo     0x420346
  420336:	arpl   si,si
  420338:	sub    al,0x39
  42033a:	sbb    DWORD PTR [edx-0x3e],ecx
  42033d:	pop    ebx
  42033e:	jno    0x4202e6
  420340:	xor    al,0x64
  420342:	jo     0x42033d
  420344:	repnz daa 
  420346:	dec    ebx
  420347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420348:	jb     0x4203c4
  42034a:	lahf   
  42034b:	pop    ebp
  42034c:	dec    ecx
  42034d:	mov    ebp,DWORD PTR [esp+eax*4+0x3419300]
  420354:	dec    esp
  420355:	and    al,0x35
  420357:	arpl   WORD PTR [ecx-0x73],si
  42035a:	adc    cl,BYTE PTR [eax-0x59cf6964]
  420360:	or     eax,0x1c70ffb0
  420365:	cli    
  420366:	out    dx,eax
  420367:	pop    ebp
  420368:	mov    esp,DWORD PTR ds:0x8fa4cc0a
  42036e:	jecxz  0x4203d9
  420370:	pop    esi
  420371:	or     esp,DWORD PTR [edx]
  420373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420374:	pop    esi
  420375:	adc    eax,0x2782393d
  42037a:	and    BYTE PTR [eax-0x76],al
  42037d:	leave  
  42037e:	mov    ebp,DWORD PTR [edi+0x2d820c47]
  420384:	out    0x8d,eax
  420386:	test   BYTE PTR [ebp+0x68],bl
  420389:	dec    ebp
  42038a:	sbb    eax,0x2f736ae4
  42038f:	and    eax,0x9c871057
  420394:	clc    
  420395:	test   al,0x2
  420397:	pop    esi
  420398:	sbb    eax,0x84a5e67a
  42039d:	dec    ebx
  42039e:	lahf   
  42039f:	popa   
  4203a0:	sub    al,0x92
  4203a2:	js     0x420341
  4203a4:	mov    ah,BYTE PTR [edi]
  4203a6:	icebp  
  4203a7:	adc    DWORD PTR [ebx],ecx
  4203a9:	out    0x1b,eax
  4203ab:	cld    
  4203ac:	jb     0x42033a
  4203ae:	push   es
  4203af:	mov    ds:0x81bfb3c2,eax
  4203b4:	dec    edx
  4203b5:	add    eax,0x9b8a721d
  4203ba:	sahf   
  4203bb:	out    0x82,eax
  4203bd:	mov    cl,0x1c
  4203bf:	imul   eax,DWORD PTR [esp+eax*8-0x73],0x7f
  4203c4:	mov    ch,ch
  4203c6:	xlat   BYTE PTR ds:[ebx]
  4203c7:	(bad)  
  4203c8:	out    dx,al
  4203c9:	(bad)  
  4203ca:	mov    ds:0x489c8a50,al
  4203cf:	leave  
  4203d0:	mov    al,0x24
  4203d2:	popf   
  4203d3:	mov    esp,0x20f39226
  4203d8:	or     al,0xa7
  4203da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203db:	mov    bl,0x1e
  4203dd:	pusha  
  4203de:	mov    ebp,0x164d05a5
  4203e3:	mov    ecx,0x4f384182
  4203e8:	lea    ecx,[edi]
  4203ea:	push   esp
  4203eb:	(bad)  
  4203ed:	jmp    0xb66b:0xb8e1762f
  4203f4:	scas   al,BYTE PTR es:[edi]
  4203f5:	(bad)  
  4203f6:	enter  0x9441,0xb0
  4203fa:	jecxz  0x4203fa
  4203fc:	and    al,0xe1
  4203fe:	cs sbb cl,0xfc
  420402:	mov    ch,BYTE PTR [ebx-0x5f208a1c]
  420408:	ss loop 0x420451
  42040b:	test   eax,0xaf84338a
  420410:	push   cs
  420411:	out    0x2f,eax
  420413:	aas    
  420414:	xlat   BYTE PTR ds:[ebx]
  420415:	lods   al,BYTE PTR ds:[esi]
  420416:	cmp    ecx,DWORD PTR [ecx+edi*2-0x18]
  42041a:	jbe    0x42040b
  42041c:	inc    edx
  42041d:	lea    ecx,[edx-0x73]
  420420:	cwde   
  420421:	call   0x973d:0xe711240
  420428:	push   es
  420429:	loopne 0x42046c
  42042b:	jecxz  0x4203b7
  42042d:	jb     0x420443
  42042f:	in     al,0x45
  420431:	push   es
  420432:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  420434:	mov    BYTE PTR [edi],bh
  420436:	rcl    DWORD PTR [ecx+0x1a],0xe9
  42043a:	dec    esi
  42043b:	push   ds
  42043c:	push   cs
  42043d:	into   
  42043e:	cs sar ecx,0x14
  420442:	jp     0x4203cb
  420444:	out    0x71,al
  420446:	cwde   
  420447:	push   ebp
  420448:	mov    cs,WORD PTR [ebp+0x79f78e48]
  42044e:	mov    bl,0xe0
  420450:	mov    fs:0xcd22d02f,eax
  420456:	pop    ecx
  420457:	mov    edx,DWORD PTR [ebx-0x5f59578d]
  42045d:	ss repnz mov edx,0x94aced4d
  420464:	mov    dh,ah
  420466:	(bad)  
  420467:	cld    
  420468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420469:	dec    ebx
  42046a:	in     al,0x9e
  42046c:	ror    BYTE PTR [ebp+0xaf2d183],cl
  420472:	jp     0x420482
  420474:	rcr    BYTE PTR [edx-0x729aa2dc],1
  42047a:	sub    BYTE PTR [ebx-0x34],ch
  42047d:	repz addr16 push ecx
  420480:	mov    al,ds:0x92f8ab8d
  420485:	ins    DWORD PTR es:[edi],dx
  420486:	sbb    BYTE PTR [esi],cl
  420488:	and    al,0x2d
  42048b:	jmp    0x2459:0x6b512b58
  420492:	sti    
  420493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420494:	into   
  420495:	adc    DWORD PTR [ebp-0x42],eax
  420498:	mov    eax,0x8af5fd3b
  42049d:	int3   
  42049e:	mov    ebx,0x15063a81
  4204a3:	cwde   
  4204a4:	or     eax,0x87880d05
  4204a9:	pop    ecx
  4204aa:	dec    ebp
  4204ab:	test   eax,0x76a371a8
  4204b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b1:	aad    0x46
  4204b3:	pop    ss
  4204b4:	mov    cl,BYTE PTR [ebx]
  4204b6:	shl    ch,1
  4204b8:	xchg   BYTE PTR [esi],bh
  4204ba:	inc    esi
  4204bb:	xor    al,0xc8
  4204bd:	mov    ds:0xcdea767,al
  4204c2:	aas    
  4204c3:	popf   
  4204c4:	dec    esi
  4204c5:	and    edx,DWORD PTR [eax-0x60b8150c]
  4204cb:	xor    cl,BYTE PTR [edx-0x683e1168]
  4204d1:	jne    0x420462
  4204d3:	fcom   DWORD PTR [ebp+0x7c]
  4204d6:	mov    esi,0x5e5e4ea6
  4204db:	xchg   BYTE PTR [ecx+0x68],cl
  4204de:	jecxz  0x4204fb
  4204e0:	mov    dh,0xc6
  4204e2:	ds cwde 
  4204e4:	mov    ah,ch
  4204e6:	sbb    bh,al
  4204e8:	pop    ebp
  4204e9:	jmp    0x92bc:0x9d4f7eab
  4204f0:	outs   dx,DWORD PTR ds:[esi]
  4204f1:	and    dh,BYTE PTR [eax+0x596373c]
  4204f7:	push   cs
  4204f8:	fdiv   st,st(5)
  4204fa:	sub    DWORD PTR [edx],0xffffff8a
  4204fd:	cwde   
  4204fe:	adc    eax,0xdef68c11
  420503:	pop    ecx
  420504:	loopne 0x420493
  420506:	mov    edx,0x7acb61cd
  42050b:	(bad)  
  42050c:	dec    ecx
  42050d:	stc    
  42050e:	test   BYTE PTR [eax],0x83
  420511:	lea    esi,[eax+0x3444b621]
  420517:	sub    edi,ebx
  420519:	(bad)  
  42051a:	shr    BYTE PTR [ebp-0x18],cl
  42051d:	(bad)
  420520:	pop    ecx
  420521:	shr    DWORD PTR [esi],0x6b
  420524:	add    BYTE PTR [esp+esi*8+0x47212a6e],0x94
  42052c:	dec    eax
  42052d:	mov    dl,BYTE PTR [esi+0x30410430]
  420533:	xchg   BYTE PTR [ecx-0x79],al
  420536:	call   0x72ae8f55
  42053b:	pop    ebx
  42053c:	mov    edi,0xb27f0808
  420541:	mov    BYTE PTR [esi],cl
  420543:	add    ebx,ebx
  420545:	addr16 jo 0x42056e
  420548:	adc    ch,BYTE PTR [esi+eiz*4]
  42054b:	or     al,0x8a
  42054d:	nop
  42054e:	sbb    eax,0x44fd5d23
  420553:	mov    dl,0x14
  420555:	lea    esi,[edi+0xef992e5]
  42055b:	cmc    
  42055c:	ds cmc 
  42055e:	cs inc ebp
  420560:	in     al,dx
  420561:	sbb    cl,0xa7
  420564:	cdq    
  420565:	inc    ebp
  420566:	jmp    0x42050d
  420568:	(bad)  
  420569:	addr16 addr16 adc al,0xf1
  42056d:	push   esp
  42056e:	scas   eax,DWORD PTR es:[edi]
  42056f:	mov    BYTE PTR [edx+0x432ded2],cl
  420575:	das    
  420576:	ret    
  420577:	sbb    dh,dh
  420579:	xchg   BYTE PTR [esi+eiz*4-0x639b0cbb],ch
  420580:	repnz in al,dx
  420582:	cmp    eax,0xef608a9b
  420587:	mov    bh,0x41
  420589:	mov    al,ds:0x9f989ddf
  42058e:	dec    ecx
  42058f:	push   cs
  420590:	xchg   ebx,eax
  420591:	xchg   ebx,eax
  420592:	xor    eax,0x70d1abcd
  420597:	in     al,dx
  420598:	adc    ah,0xdc
  42059b:	loope  0x42054b
  42059d:	bound  ebp,QWORD PTR [edi]
  42059f:	(bad)  
  4205a0:	dec    ebx
  4205a1:	jae    0x4205f2
  4205a3:	loopne 0x4205a9
  4205a5:	and    al,0x11
  4205a7:	stos   DWORD PTR es:[edi],eax
  4205a8:	or     eax,0x959ff3e5
  4205ad:	or     eax,0x531a200b
  4205b2:	das    
  4205b3:	inc    esp
  4205b4:	daa    
  4205b5:	aaa    
  4205b6:	adc    eax,0x7f68f214
  4205bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205bc:	loopne 0x420636
  4205be:	and    eax,0xa5cb5113
  4205c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c4:	mov    dh,BYTE PTR [ecx-0x6bf21668]
  4205ca:	push   ebp
  4205cb:	fcomp  DWORD PTR [eax+0x35687f8d]
  4205d1:	sub    dh,bh
  4205d3:	aas    
  4205d4:	jle    0x42056e
  4205d6:	das    
  4205d7:	rol    DWORD PTR [ebp+0x6b4cd8fa],cl
  4205dd:	mov    bl,0x9d
  4205df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e0:	jmp    0xb90c:0xcef13b4c
  4205e7:	sub    ecx,DWORD PTR [edx-0x6a62f370]
  4205ed:	ficom  DWORD PTR ss:[ebx]
  4205f0:	and    eax,0xab19758d
  4205f5:	push   ds
  4205f6:	scas   eax,DWORD PTR es:[edi]
  4205f7:	push   cs
  4205f8:	mov    cl,0xec
  4205fa:	cs ds (bad) 
  4205fd:	out    0x47,eax
  4205ff:	xor    DWORD PTR [ebp-0x3b],0xd8d75eb7
  420606:	cs dec ebp
  420608:	test   BYTE PTR [ebx],bl
  42060a:	mov    eax,ds:0xe26ac944
  42060f:	das    
  420610:	mov    dl,BYTE PTR [ecx]
  420612:	ror    dh,cl
  420614:	je     0x42065b
  420616:	fadd   st(6),st
  420618:	(bad)  
  420619:	jg     0x4205dd
  42061b:	popf   
  42061c:	stos   BYTE PTR es:[edi],al
  42061d:	sub    DWORD PTR [edi],esp
  42061f:	(bad)  
  420620:	mov    dh,BYTE PTR [edi]
  420622:	sbb    ebx,edx
  420624:	jne    0x4205a8
  420626:	xor    eax,0xcc6905a
  42062b:	es dec edx
  42062d:	inc    ebp
  42062e:	sbb    BYTE PTR [ecx-0xcbe73f5],ch
  420634:	ja     0x420696
  420636:	push   ecx
  420637:	outs   dx,BYTE PTR ds:[esi]
  420638:	add    dl,dh
  42063a:	mov    bh,0xac
  42063c:	js     0x4205d0
  42063e:	loopne 0x4205fe
  420640:	xchg   esp,eax
  420641:	pop    ds
  420642:	pop    esi
  420643:	dec    esi
  420644:	cmp    al,0xa9
  420646:	cmp    cl,0xa
  420649:	and    BYTE PTR [ebx-0x37],al
  42064c:	and    al,0x8d
  42064e:	xchg   DWORD PTR [edi-0x3c150704],edx
  420654:	aad    0xca
  420656:	cs int3 
  420658:	inc    edi
  420659:	cmp    ah,dl
  42065b:	bnd call 0x34919cd4
  420661:	lea    ebp,[edi-0x30]
  420664:	pusha  
  420665:	dec    ebp
  420666:	inc    eax
  420667:	ins    BYTE PTR es:[edi],dx
  420668:	and    dh,BYTE PTR [esi]
  42066a:	das    
  42066b:	xchg   ebp,eax
  42066c:	mov    dl,0xb
  42066e:	pop    esi
  42066f:	sti    
  420670:	xlat   BYTE PTR ds:[ebx]
  420671:	jnp    0x42065a
  420673:	stos   BYTE PTR es:[edi],al
  420674:	fdivr  st(5),st
  420676:	pop    ss
  420677:	mov    ebp,0xe2560d91
  42067c:	or     BYTE PTR [ebp+0x2a],ch
  42067f:	inc    edx
  420680:	(bad)  
  420681:	lea    eax,[ebx-0x25b89821]
  420687:	mov    ebp,0x9bd68d6e
  42068c:	das    
  42068d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068e:	sbb    bl,bl
  420690:	xor    ebx,DWORD PTR [edi+ebp*1]
  420693:	xchg   edx,eax
  420694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420695:	adc    esp,edx
  420697:	and    al,0x4
  420699:	aam    0xf4
  42069b:	xchg   ebp,eax
  42069c:	push   0x359f7f1d
  4206a1:	sub    eax,0xd00f1e2e
  4206a6:	lods   al,BYTE PTR ds:[esi]
  4206a7:	jb     0x4206e3
  4206a9:	fidivr DWORD PTR [esi]
  4206ab:	and    edi,DWORD PTR [edx-0x4e95dc73]
  4206b1:	lods   eax,DWORD PTR ds:[esi]
  4206b2:	push   ecx
  4206b3:	loope  0x4206b1
  4206b5:	mov    dl,0x5b
  4206b7:	ret    0xd08a
  4206ba:	out    0x74,eax
  4206bc:	pop    ebp
  4206bd:	repz call 0xa7ec:0x32a2d5c7
  4206c5:	into   
  4206c6:	popa   
  4206c7:	add    BYTE PTR [esi],dh
  4206c9:	test   eax,0x4a5772af
  4206ce:	inc    esp
  4206cf:	mov    ecx,0x48af4bdf
  4206d4:	xchg   esi,eax
  4206d5:	aam    0xb4
  4206d7:	test   eax,0x905e8dac
  4206dc:	cmp    BYTE PTR [edi-0x4a6c351],ch
  4206e2:	cs aas 
  4206e4:	inc    edx
  4206e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206e6:	mov    dl,0xf0
  4206e8:	adc    BYTE PTR [edi+0x78eea4e0],0xa2
  4206ef:	jno    0x420727
  4206f1:	stos   BYTE PTR es:[edi],al
  4206f2:	jg     0x42068f
  4206f4:	ficom  WORD PTR [eax]
  4206f6:	xor    dh,BYTE PTR [ebx+0x0]
  4206f9:	jmp    0x348c810
  4206fe:	das    
  4206ff:	hlt    
  420700:	or     BYTE PTR [ebp+0x59],dl
  420703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420704:	cmp    esi,DWORD PTR [ebx]
  420706:	shl    DWORD PTR [ebp-0x61],cl
  420709:	lods   eax,DWORD PTR ds:[esi]
  42070a:	xor    eax,0xf8f98db1
  42070f:	in     al,0x54
  420711:	cmc    
  420712:	mov    esi,0x86e7e544
  420717:	mov    eax,ds:0x98081965
  42071c:	shr    DWORD PTR [eax+0x2f],cl
  42071f:	cmp    ebx,DWORD PTR [esi+ebp*1-0x61]
  420723:	pop    ds
  420724:	mov    ah,bl
  420726:	loop   0x42076d
  420728:	mov    ebp,0xc427fdc6
  42072d:	lea    esi,[ecx]
  42072f:	dec    ebx
  420730:	out    dx,al
  420731:	inc    BYTE PTR [eax]
  420733:	and    eax,0xac32320a
  420738:	scas   al,BYTE PTR es:[edi]
  420739:	xlat   BYTE PTR ds:[ebx]
  42073a:	xchg   esi,eax
  42073b:	retf   0xf59a
  42073e:	xor    cl,cl
  420740:	push   cs
  420741:	lea    edx,[edx]
  420743:	xchg   edi,eax
  420744:	fbld   TBYTE PTR [ebx-0xb]
  420747:	scas   al,BYTE PTR es:[edi]
  420748:	stos   DWORD PTR es:[edi],eax
  420749:	aaa    
  42074a:	das    
  42074b:	js     0x4207a3
  42074d:	push   es
  42074e:	pop    esp
  42074f:	fwait
  420750:	mov    bh,0xad
  420752:	dec    ecx
  420753:	mov    edx,0xe265a20
  420758:	mov    cl,BYTE PTR [ebx]
  42075a:	xor    eax,DWORD PTR [edi+0x78]
  42075d:	cmp    esi,DWORD PTR [edi+0x3a]
  420760:	scas   al,BYTE PTR es:[edi]
  420761:	push   0x63
  420763:	jge    0x4206ef
  420765:	xor    DWORD PTR [edi-0x29fa2589],eax
  42076b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42076c:	into   
  42076d:	push   ss
  42076e:	cmp    DWORD PTR [edi+0xd],0xc9469bff
  420775:	loop   0x4207a5
  420777:	push   esi
  420778:	lea    ebx,[ebp-0x5ddb9ca4]
  42077e:	xsha1  (bad)
  42077f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420780:	dec    ebx
  420781:	mov    dl,0x87
  420783:	loop   0x4207b2
  420785:	jg     0x42077c
  420787:	and    al,0x8b
  420789:	addr16 add al,0xca
  42078c:	loop   0x420745
  42078e:	and    al,0xf8
  420790:	(bad)  
  420791:	sti    
  420792:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  420794:	arpl   WORD PTR [esi-0x3c072c33],cx
  42079a:	sbb    eax,0x4b4e8aeb
  42079f:	sbb    cl,BYTE PTR [eax]
  4207a1:	inc    ebx
  4207a2:	sub    BYTE PTR [eax],bl
  4207a4:	mov    al,ds:0xbf42ff8d
  4207a9:	inc    eax
  4207aa:	mov    WORD PTR [eax+0x4],fs
  4207ad:	addr16 xor eax,0x2c7e0207
  4207b3:	out    0xf2,al
  4207b5:	pusha  
  4207b6:	and    ebp,DWORD PTR [ecx-0x41e372db]
  4207bc:	xor    eax,0x88a20bef
  4207c1:	ds das 
  4207c3:	mov    eax,0xab481e16
  4207c8:	fadd   QWORD PTR [esi]
  4207ca:	shl    DWORD PTR [ebp+0xa4d8b1b],1
  4207d0:	fld    QWORD PTR [ebx+0x438abb69]
  4207d6:	mov    ?,WORD PTR [esi+0x2d47fa7]
  4207dc:	xor    DWORD PTR [edx+0x32b2ee65],ecx
  4207e2:	cmc    
  4207e3:	aad    0x98
  4207e5:	mov    BYTE PTR [edi+0x6a],al
  4207e8:	mov    bh,BYTE PTR [ebx+ebx*4]
  4207eb:	mov    ebp,0x660b82dc
  4207f0:	mov    cs,WORD PTR [edx+ebp*8+0x45251737]
  4207f7:	cmc    
  4207f8:	vpsubusw ymm2,ymm0,ymm0
  4207fc:	mov    esi,ecx
  4207fe:	cwde   
  4207ff:	adc    eax,0xe170ffbf
  420804:	jmp    0x42082c
  420806:	jae    0x42082c
  420808:	push   esp
  420809:	(bad)  
  42080a:	(bad)  
  42080b:	mov    bl,BYTE PTR [ebx-0x8]
  42080e:	test   eax,0x2f95c964
  420813:	jae    0x420889
  420815:	cmp    cl,ch
  420817:	mov    ah,0xb7
  420819:	inc    ebp
  42081a:	xor    al,ah
  42081c:	add    BYTE PTR [ebx+0x4c4fafd9],0xb
  420823:	loopne 0x420832
  420825:	mov    eax,ds:0xb270d8ef
  42082a:	into   
  42082b:	loop   0x4207b7
  42082d:	loope  0x420813
  42082f:	ss out dx,al
  420831:	xchg   ebp,eax
  420832:	jg     0x42082d
  420834:	mov    bl,0xc1
  420836:	les    ecx,FWORD PTR es:[edx+0x34aa3361]
  42083d:	iret   
  42083e:	add    DWORD PTR [edx-0x590f3976],edx
  420844:	push   edi
  420845:	sbb    bh,0x81
  420848:	les    ecx,FWORD PTR [ecx+eax*4+0xceb7eb3]
  42084f:	sbb    DWORD PTR [ebx-0x4],ebx
  420852:	(bad)  
  420853:	aad    0xc2
  420855:	cli    
  420856:	sub    eax,0xe3c7e3fe
  42085b:	push   esi
  42085c:	lods   eax,DWORD PTR ds:[esi]
  42085d:	out    dx,eax
  42085e:	out    dx,eax
  42085f:	adc    eax,0x50df5203
  420864:	xor    BYTE PTR [ebx+0x4d521b54],ah
  42086a:	sub    eax,0xdb7a7e
  42086f:	das    
  420870:	lea    ecx,[edi-0x7f3efa4f]
  420876:	das    
  420877:	(bad)  
  420878:	jge    0x420896
  42087a:	mov    ch,0xa6
  42087c:	dec    esp
  42087d:	cdq    
  42087e:	fadd   QWORD PTR [ebp+0x4]
  420881:	out    0xad,al
  420883:	pop    ss
  420884:	mov    ch,BYTE PTR [edx+eiz*1-0x79]
  420888:	sub    eax,0xde76d991
  42088d:	mov    fs,WORD PTR [edx+edx*4+0x6af11acc]
  420894:	jp     0x420862
  420896:	dec    esp
  420897:	add    DWORD PTR [ebp-0x6e8a0917],edx
  42089d:	int    0x41
  42089f:	inc    eax
  4208a0:	stos   DWORD PTR es:[edi],eax
  4208a1:	cwde   
  4208a2:	or     eax,0x574684a5
  4208a7:	mov    bl,0x70
  4208a9:	mov    ds,WORD PTR [ecx-0x4aab154e]
  4208af:	mov    eax,0xe6819e8a
  4208b4:	sub    BYTE PTR [edi-0x72a15576],0x6c
  4208bb:	ds jl  0x4208e6
  4208be:	into   
  4208bf:	sub    esp,edi
  4208c1:	cmp    BYTE PTR ds:0x2fbc1cd2,dl
  4208c7:	adc    dl,ah
  4208c9:	jno    0x420885
  4208cb:	inc    ebp
  4208cc:	je     0x42085b
  4208ce:	add    BYTE PTR [esi-0x6d],bl
  4208d1:	ret    0x4912
  4208d4:	or     cl,BYTE PTR [esi-0x26894bd2]
  4208da:	jne    0x4208f1
  4208dc:	jmp    0x6db5:0x3d74a0b4
  4208e3:	shl    BYTE PTR [ecx-0x73],cl
  4208e6:	addr16 jbe 0x42086e
  4208e9:	dec    edi
  4208ea:	mul    DWORD PTR ds:0x52fc0bc
  4208f0:	and    DWORD PTR [eax],esi
  4208f2:	mov    cl,0xc8
  4208f4:	push   eax
  4208f5:	popf   
  4208f6:	ja     0x42089e
  4208f8:	shl    esi,cl
  4208fa:	inc    ecx
  4208fb:	jne    0x42088e
  4208fd:	push   ecx
  4208fe:	lods   al,BYTE PTR ds:[esi]
  4208ff:	lock jp 0x4208ac
  420902:	in     eax,0xdf
  420904:	mov    al,BYTE PTR [edi-0x75]
  420907:	shr    DWORD PTR [esi+0x1a],1
  42090a:	scas   eax,DWORD PTR es:[edi]
  42090b:	push   ebp
  42090c:	cdq    
  42090d:	call   ecx
  42090f:	ins    BYTE PTR es:[edi],dx
  420910:	ja     0x42093f
  420912:	cmp    eax,0xd3698a04
  420917:	add    edx,ebp
  420919:	jae    0x420916
  42091b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42091c:	es xchg ebx,eax
  42091e:	lds    edx,FWORD PTR [ecx-0x54b04199]
  420924:	add    eax,0x8bd2a3e0
  420929:	add    BYTE PTR [ebx+0x16],al
  42092c:	pop    esi
  42092d:	ja     0x4209a9
  42092f:	icebp  
  420930:	gs sbb eax,0x92d61b5b
  420936:	cli    
  420937:	retf   
  420938:	pop    ds
  420939:	xchg   ebp,eax
  42093a:	iret   
  42093b:	imul   ebp,eax,0x11
  42093e:	test   BYTE PTR [esi+0x12e36c8a],dh
  420944:	lea    ecx,[eax-0x64]
  420947:	not    DWORD PTR [ebx-0x6d]
  42094a:	dec    esi
  42094b:	inc    eax
  42094c:	dec    eax
  42094d:	pop    ds
  42094e:	(bad)  
  42094f:	push   cs
  420950:	inc    eax
  420951:	cmp    eax,0x83955fc6
  420956:	adc    cl,BYTE PTR [edx-0xa905ceb]
  42095c:	sub    ebp,edi
  42095e:	sub    DWORD PTR [edx+0x5d],eax
  420961:	xchg   DWORD PTR [ecx],ebp
  420963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420964:	inc    bx
  420966:	repnz adc cl,BYTE PTR [ecx-0x754c862e]
  42096d:	xchg   ebx,eax
  42096e:	cwde   
  42096f:	or     esi,DWORD PTR [ebx+0x16]
  420972:	xchg   edx,eax
  420973:	pop    es
  420974:	arpl   WORD PTR [ebp-0x1610489e],cx
  42097a:	daa    
  42097b:	sub    BYTE PTR [esi+0xb622ff6],0x15
  420982:	pop    es
  420983:	lods   al,BYTE PTR ds:[esi]
  420984:	jg     0x42099a
  420986:	cmpxchg8b QWORD PTR [edx]
  420989:	lea    ebx,[eax-0x1e768a30]
  42098f:	fst    QWORD PTR [eax+0x71612e62]
  420995:	ret    0xa982
  420998:	or     bh,BYTE PTR [ebx-0x6c0d47df]
  42099e:	sub    al,0xad
  4209a0:	add    DWORD PTR [edx-0x6ce8e2f1],edx
  4209a6:	jecxz  0x420930
  4209a8:	mov    esi,ebx
  4209aa:	dec    esp
  4209ab:	je     0x4209bf
  4209ad:	mov    ebx,0x734f3d78
  4209b2:	imul   ecx,DWORD PTR [edx],0xffffff9e
  4209b5:	lea    ebx,[esi+ebp*1-0x38]
  4209b9:	pop    DWORD PTR [edi]
  4209bb:	or     BYTE PTR [ebp+0x3fec4434],bh
  4209c1:	xor    eax,0x70dc462f
  4209c6:	cmp    al,0xb9
  4209c8:	push   edx
  4209c9:	lea    edi,[ebp+0x2ec58585]
  4209cf:	out    dx,al
  4209d0:	adc    DWORD PTR [edx+0x32],edi
  4209d3:	add    BYTE PTR [ebx+0x4a],ah
  4209d6:	mov    esp,0xb35bded
  4209db:	addr16 in eax,0x93
  4209de:	cmp    DWORD PTR ds:0x8875f74f,edx
  4209e4:	push   esp
  4209e5:	in     eax,0x2e
  4209e7:	jmp    0x108a:0x3182fac8
  4209ee:	inc    edi
  4209ef:	or     DWORD PTR [ecx],edx
  4209f1:	xchg   edx,eax
  4209f2:	retf   
  4209f3:	dec    ebx
  4209f4:	cdq    
  4209f5:	mov    WORD PTR [eax],gs
  4209f7:	int3   
  4209f8:	or     esi,DWORD PTR [edx+0x3c]
  4209fb:	std    
  4209fc:	rol    DWORD PTR [esi],0x2f
  4209ff:	ss test eax,0x3224e571
  420a05:	das    
  420a06:	sub    BYTE PTR [esi+0x3a],dh
  420a09:	neg    bl
  420a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a0c:	(bad)  
  420a0d:	pop    esp
  420a0e:	jb     0x4209fc
  420a10:	stos   BYTE PTR es:[edi],al
  420a11:	or     ch,bh
  420a13:	dec    eax
  420a14:	mov    ch,BYTE PTR [edi-0x6ce9d52c]
  420a1a:	xchg   edi,eax
  420a1b:	(bad)  
  420a1c:	fmul   DWORD PTR [ebp+0x67da3779]
  420a22:	xchg   ebp,eax
  420a23:	push   ecx
  420a24:	jno    0x420a2a
  420a26:	inc    esp
  420a27:	add    al,BYTE PTR [edx+0x7a70af91]
  420a2d:	aam    0xa1
  420a2f:	pop    ebp
  420a30:	mov    dh,0x8d
  420a32:	jmp    0x420a78
  420a34:	push   ecx
  420a35:	inc    ebx
  420a36:	imul   edi,DWORD PTR [ecx-0x59],0xffffffc6
  420a3a:	das    
  420a3b:	sub    ah,bh
  420a3d:	sub    al,0x9d
  420a3f:	mov    ds,WORD PTR ds:0x18a5ffdd
  420a45:	xlat   BYTE PTR ds:[ebx]
  420a46:	sbb    eax,0x65dc0733
  420a4b:	push   0xe891d89
  420a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a51:	mov    eax,ds:0xeeade655
  420a56:	pop    ebx
  420a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a58:	fsubr  DWORD PTR [ebx+0x23]
  420a5b:	xchg   ebx,eax
  420a5c:	dec    edi
  420a5d:	aam    0x52
  420a5f:	push   esi
  420a60:	mov    ah,BYTE PTR [ebx+0x48]
  420a63:	leave  
  420a64:	aam    0xd6
  420a66:	jno    0x4209f5
  420a68:	inc    ebp
  420a69:	lea    eax,[esi]
  420a6b:	pop    esp
  420a6c:	push   es
  420a6d:	mov    ch,0x98
  420a6f:	add    bh,ah
  420a71:	retf   
  420a72:	xor    ebx,ebp
  420a74:	adc    ebx,ebx
  420a76:	inc    eax
  420a77:	or     DWORD PTR [esi+0x2cc3381d],edi
  420a7d:	(bad)  
  420a7e:	loopne 0x420aec
  420a80:	push   es
  420a81:	cld    
  420a82:	xor    BYTE PTR [eax],ah
  420a84:	aas    
  420a85:	imul   ebp,DWORD PTR [edi],0xffffffcf
  420a88:	add    al,0xbb
  420a8a:	ror    DWORD PTR ds:0xa6632313,0x6d
  420a91:	mov    ebx,0xc2649d50
  420a96:	push   ss
  420a97:	pop    edi
  420a98:	mov    ch,bl
  420a9a:	std    
  420a9b:	adc    DWORD PTR [ecx-0x17],edi
  420a9e:	mov    al,0xa0
  420aa0:	mov    edx,0x30e4cc8d
  420aa5:	pop    esi
  420aa6:	adc    bh,ch
  420aa8:	pop    es
  420aa9:	xchg   ebp,eax
  420aaa:	das    
  420aab:	push   ds
  420aac:	fild   WORD PTR [edx+0x7c]
  420aaf:	leave  
  420ab0:	inc    ecx
  420ab1:	adc    ch,BYTE PTR [esi]
  420ab3:	xchg   edx,eax
  420ab4:	out    dx,eax
  420ab5:	jp     0x420a6c
  420ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ab8:	jnp    0x420af5
  420aba:	iret   
  420abb:	jns    0x420ab0
  420abd:	xchg   ecx,eax
  420abe:	fwait
  420abf:	imul   ecx,DWORD PTR [ebp-0x76d739b9],0x7c
  420ac6:	scas   eax,DWORD PTR es:[edi]
  420ac7:	lahf   
  420ac8:	pop    edx
  420ac9:	push   0xbc60a615
  420ace:	data16 jbe 0x420a9c
  420ad1:	xlat   BYTE PTR ds:[ebx]
  420ad2:	jne    0x420b07
  420ad4:	mov    bl,BYTE PTR [edi+0x1e8230cb]
  420ada:	in     eax,dx
  420adb:	cs into 
  420add:	test   DWORD PTR [ecx+0x58db8ce],edi
  420ae3:	sub    BYTE PTR [ecx],0x6d
  420ae6:	jecxz  0x420b58
  420ae8:	(bad)  
  420ae9:	(bad)  
  420aea:	xor    cl,bl
  420aec:	call   0xe003a273
  420af1:	mov    ebp,0x8ea6ac4f
  420af6:	jmp    0xf7e75cfa
  420afb:	sbb    eax,0xe71b7d4a
  420b00:	js     0x420ae8
  420b02:	cs add ecx,eax
  420b05:	sar    edx,1
  420b07:	or     eax,0xa5e985cf
  420b0c:	fsubr  st,st(7)
  420b0e:	mov    ds:0x6e1bca26,eax
  420b13:	mov    bl,BYTE PTR gs:[ebp+ecx*1+0x3f]
  420b18:	imul   eax,DWORD PTR [ebx],0xffffffac
  420b1b:	push   es
  420b1c:	fmul   QWORD PTR [ebp+0x7d49b01d]
  420b22:	adc    eax,0x2f3d805a
  420b27:	(bad)  
  420b28:	pop    ebx
  420b29:	loope  0x420b70
  420b2b:	add    ecx,DWORD PTR [ebx+0x36]
  420b2e:	xchg   esi,eax
  420b2f:	cs dec esp
  420b31:	stc    
  420b32:	and    BYTE PTR [esp+edx*8+0x5f197cfb],0x0
  420b3a:	jb     0x420aec
  420b3c:	sbb    eax,0xd6319a1d
  420b41:	and    DWORD PTR [edi],ebp
  420b43:	call   0xa1cfea28
  420b48:	ins    DWORD PTR es:[edi],dx
  420b49:	jp     0x420aeb
  420b4b:	mov    ch,0x6e
  420b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b4e:	dec    edi
  420b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b50:	lea    esi,[eax-0x1f]
  420b53:	shl    BYTE PTR [edi],1
  420b55:	daa    
  420b56:	das    
  420b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b58:	jmp    0xffc2:0x9b97570b
  420b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b60:	sub    ebp,DWORD PTR [ebx+edx*2-0x3b]
  420b64:	push   ebx
  420b65:	cld    
  420b66:	jmp    0x9e1c:0x56bb8acd
  420b6d:	out    dx,eax
  420b6e:	cdq    
  420b6f:	out    0x33,al
  420b71:	lea    esp,[eax]
  420b73:	ds stc 
  420b75:	mov    esp,esi
  420b77:	cmp    DWORD PTR [esp+edx*2],esp
  420b7a:	ss je  0x420b64
  420b7d:	fs jbe 0x8190a562
  420b84:	pop    es
  420b85:	mov    ss,WORD PTR [edi-0x3b]
  420b88:	sbb    al,bl
  420b8a:	pop    edx
  420b8b:	mov    cl,0xed
  420b8d:	and    al,0x2f
  420b8f:	shr    DWORD PTR [ebx-0x38],0x7c
  420b93:	pusha  
  420b94:	xlat   BYTE PTR ds:[ebx]
  420b95:	imul   esp,DWORD PTR [ebp-0x5a],0xffffffca
  420b99:	in     eax,0xd
  420b9b:	pop    ecx
  420b9c:	loop   0x420c13
  420b9e:	xchg   esp,eax
  420b9f:	xchg   esi,eax
  420ba0:	inc    edx
  420ba1:	lds    esi,FWORD PTR [esi]
  420ba3:	stc    
  420ba4:	test   al,0xf0
  420ba6:	dec    esi
  420ba7:	inc    esi
  420ba8:	call   0x72d104ce
  420bad:	mov    ?,ebx
  420baf:	or     bh,al
  420bb1:	pop    DWORD PTR [ebx+ebp*4]
  420bb4:	and    cl,BYTE PTR [esi+ecx*8+0x9ebc309]
  420bbb:	mov    BYTE PTR [eax],al
  420bbd:	jb     0x420bee
  420bbf:	mov    al,ds:0xbc45205e
  420bc4:	scas   al,BYTE PTR es:[edi]
  420bc5:	lea    esi,[esi-0xf]
  420bc8:	enter  0xc15a,0x5f
  420bcc:	fild   DWORD PTR [eax+0xbf3b32f]
  420bd2:	into   
  420bd3:	mov    edi,0x6e7e4812
  420bd8:	cmp    esi,DWORD PTR [esi+0x2f]
  420bdb:	push   edx
  420bdc:	mov    al,ds:0x71297477
  420be1:	repnz cs lahf 
  420be4:	icebp  
  420be5:	push   ebp
  420be6:	enter  0xe48c,0xe5
  420bea:	mov    WORD PTR [esi+0x5317183e],fs
  420bf0:	or     esi,DWORD PTR [ebx-0x34]
  420bf3:	fimul  WORD PTR [ebp+0xd920633]
  420bf9:	jl     0x420c1b
  420bfb:	es push esi
  420bfd:	pop    ebp
  420bfe:	pop    edi
  420bff:	fdivr  QWORD PTR [edx-0x73]
  420c02:	hlt    
  420c03:	int    0xf3
  420c05:	fucom  st(3)
  420c07:	jmp    0x420c81
  420c09:	imul   ebp,DWORD PTR [edi],0x574ad92c
  420c0f:	and    dl,bh
  420c11:	mov    dl,0xf6
  420c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c14:	out    0x24,eax
  420c16:	xchg   eax,esp
  420c18:	cmp    DWORD PTR [edx+0x5],ebp
  420c1b:	inc    ebp
  420c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c1d:	add    DWORD PTR [edi+0x64c9cadb],ecx
  420c23:	jle    0x420be5
  420c25:	bound  esi,QWORD PTR [ebx-0x5a]
  420c28:	adc    al,0xc0
  420c2a:	sahf   
  420c2b:	aam    0x91
  420c2d:	xor    DWORD PTR [edi-0x47],esi
  420c30:	mov    edx,DWORD PTR [esi]
  420c32:	hlt    
  420c33:	sti    
  420c34:	dec    eax
  420c35:	jmp    0xa17e:0x17760cfc
  420c3c:	ret    0xbebe
  420c3f:	inc    edi
  420c40:	mov    ah,BYTE PTR [edi+0x3e354bed]
  420c46:	das    
  420c47:	sub    eax,0xd7976ac7
  420c4c:	hlt    
  420c4d:	sub    ebx,esi
  420c4f:	stos   BYTE PTR es:[edi],al
  420c50:	mov    edi,edi
  420c52:	je     0x420c5f
  420c54:	pop    eax
  420c55:	retf   0xe640
  420c58:	aad    0x71
  420c5a:	mov    eax,ds:0x72048a81
  420c5f:	out    dx,eax
  420c60:	sub    BYTE PTR [ebx-0x7147512b],dl
  420c66:	call   DWORD PTR [ebx+0x71]
  420c69:	cdq    
  420c6a:	addr16 cmc 
  420c6c:	or     ebp,DWORD PTR [eax+0x2387ee96]
  420c72:	das    
  420c73:	push   es
  420c74:	mov    eax,ds:0xbe6c6121
  420c79:	jmp    0x87408b22
  420c7e:	popa   
  420c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c80:	fnstenv [eax-0x93bb346]
  420c86:	in     al,0x4e
  420c88:	mov    bl,bl
  420c8a:	dec    ecx
  420c8b:	add    al,0x5f
  420c8d:	inc    edx
  420c8e:	fimul  WORD PTR [ebp+esi*1+0x3]
  420c92:	ins    DWORD PTR es:[edi],dx
  420c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c94:	jp     0x420c6f
  420c96:	(bad)  
  420c97:	icebp  
  420c98:	(bad)  [edx+0x66]
  420c9b:	es clc 
  420c9d:	mov    ebx,DWORD PTR [edx]
  420c9f:	mov    BYTE PTR [esp+esi*8-0x8],dh
  420ca3:	or     eax,0x1a51b34b
  420ca8:	sahf   
  420ca9:	lea    ebx,[ebp+0xb9eaf4a]
  420caf:	daa    
  420cb0:	mov    bh,BYTE PTR [ecx-0x1db75fe1]
  420cb6:	inc    edi
  420cb7:	loop   0x420c8a
  420cb9:	(bad)  
  420cba:	out    0xc1,al
  420cbc:	not    eax
  420cbe:	fucom  st(7)
  420cc0:	mov    BYTE PTR fs:[ebx],ah
  420cc3:	test   DWORD PTR [ecx-0x73],edx
  420cc6:	test   al,0xec
  420cc8:	xchg   esi,eax
  420cc9:	adc    bh,BYTE PTR [ecx-0x4b726665]
  420ccf:	in     eax,0xdc
  420cd1:	and    DWORD PTR [ebp-0x5c],edi
  420cd4:	cmp    esp,DWORD PTR [edx+0x53]
  420cd7:	sbb    DWORD PTR [edx+0x7ee4094d],ecx
  420cdd:	ss push esp
  420cdf:	inc    edx
  420ce0:	jns    0x420c6f
  420ce2:	cli    
  420ce3:	into   
  420ce4:	xor    eax,0x42285c9a
  420ce9:	mov    cl,0x5b
  420ceb:	loopne 0x420c76
  420ced:	add    ebp,DWORD PTR [edi-0x22]
  420cf0:	jae    0x420d06
  420cf2:	fmul   QWORD PTR ds:0xa5cd3625
  420cf8:	xchg   edx,eax
  420cf9:	mov    eax,fs
  420cfb:	fsubr  st(6),st
  420cfd:	icebp  
  420cfe:	pop    es
  420cff:	jp     0x734ba1c7
  420d05:	out    0x98,al
  420d07:	pop    ds
  420d08:	scas   eax,DWORD PTR es:[edi]
  420d09:	lea    esp,[ebp-0x31f064a]
  420d0f:	shl    BYTE PTR [eax+0x773b2f1b],cl
  420d15:	imul   ebx,esp,0x19
  420d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d19:	rcl    BYTE PTR [eax],0xa6
  420d1c:	push   edi
  420d1d:	dec    ebp
  420d1e:	aas    
  420d1f:	hlt    
  420d20:	rcr    esp,cl
  420d22:	inc    ecx
  420d23:	retf   
  420d24:	(bad)  
  420d25:	outs   dx,DWORD PTR ds:[esi]
  420d26:	sub    BYTE PTR [esi],ah
  420d28:	add    BYTE PTR [esp+ebx*1],ch
  420d2b:	adc    DWORD PTR [ecx],0xa2a5f3e6
  420d31:	sbb    BYTE PTR [edx-0x4a9a1290],ch
  420d37:	jbe    0x420cc3
  420d39:	pop    ss
  420d3a:	xor    esp,esi
  420d3c:	xchg   edx,eax
  420d3d:	mov    bh,0xca
  420d3f:	popa   
  420d40:	jns    0x420ccf
  420d42:	iret   
  420d43:	xor    DWORD PTR [ecx],edi
  420d45:	mov    WORD PTR [ebx+0x3094e700],cs
  420d4b:	inc    eax
  420d4c:	mov    bh,0xdd
  420d4e:	mov    bl,0x25
  420d50:	jp     0x420d7e
  420d52:	push   ebx
  420d53:	out    0x44,al
  420d55:	lea    edx,[ecx+0x1b0999f0]
  420d5b:	cmp    al,0x2
  420d5d:	xchg   edx,eax
  420d5e:	das    
  420d5f:	in     al,0x1
  420d61:	stos   DWORD PTR es:[edi],eax
  420d62:	mov    eax,0xbe61b193
  420d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d68:	in     al,dx
  420d69:	scas   eax,DWORD PTR es:[edi]
  420d6a:	sub    al,0x96
  420d6c:	push   cs
  420d6d:	arpl   WORD PTR fs:[ebx],di
  420d70:	cmp    dl,BYTE PTR ds:0xbbe9172f
  420d76:	cdq    
  420d77:	mov    bh,0xaa
  420d79:	ja     0x420d3d
  420d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d7c:	in     al,dx
  420d7d:	cmc    
  420d7e:	sbb    DWORD PTR [edi+edi*1],ebp
  420d81:	out    0x31,al
  420d83:	mov    al,0x8a
  420d85:	cmp    eax,DWORD PTR ds:0x4867bc57
  420d8b:	outs   dx,BYTE PTR ds:[esi]
  420d8c:	dec    edx
  420d8d:	mov    ds:0xd6fc000,eax
  420d92:	(bad)  
  420d93:	pushf  
  420d94:	xor    BYTE PTR [ecx+0x1a8a143b],0xd
  420d9b:	mov    eax,0x177f683f
  420da0:	dec    ebx
  420da1:	mov    eax,DWORD PTR [edx+ecx*8]
  420da4:	into   
  420da5:	stc    
  420da6:	mov    bl,BYTE PTR [edx+0x125157a7]
  420dac:	dec    edx
  420dad:	jne    0x420db5
  420daf:	or     DWORD PTR [eax+0x73],0x3
  420db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db4:	xor    ebx,eax
  420db6:	not    BYTE PTR [ecx-0xa]
  420db9:	jmp    0x45cc952f
  420dbe:	scas   eax,DWORD PTR es:[edi]
  420dbf:	dec    ecx
  420dc0:	and    cl,BYTE PTR [eax+0x79]
  420dc3:	dec    esi
  420dc4:	lahf   
  420dc5:	mov    eax,ecx
  420dc7:	dec    ebp
  420dc8:	test   DWORD PTR [ebx+0x5b],edx
  420dcb:	es dec esp
  420dcd:	mov    ?,WORD PTR [eax+0x4a148a8e]
  420dd3:	mov    dl,0xb6
  420dd5:	mov    al,0xe9
  420dd7:	jge    0x420e0e
  420dd9:	(bad)  
  420dda:	(bad)  
  420ddb:	xchg   ecx,eax
  420ddc:	jmp    0x5a17ef16
  420de1:	sub    DWORD PTR [edi],0xf1e4a32e
  420de7:	jl     0x420e0f
  420de9:	push   es
  420dea:	mov    dh,0xa6
  420dec:	and    eax,0x356d8c69
  420df1:	sub    al,BYTE PTR [ebx+0x12b18f83]
  420df7:	adc    DWORD PTR [di],edi
  420dfa:	scas   eax,DWORD PTR es:[edi]
  420dfb:	popa   
  420dfc:	inc    edi
  420dfd:	stc    
  420dfe:	mov    ebp,0xb6fd94a6
  420e03:	pshufw mm3,QWORD PTR [edi-0x2f],0xd6
  420e08:	(bad)  
  420e09:	(bad)  
  420e0a:	xchg   esi,eax
  420e0b:	(bad)  
  420e0c:	arpl   WORD PTR [edx],dx
  420e0e:	fprem  
  420e10:	fisubr WORD PTR ds:0x4b817fb4
  420e16:	in     al,0xa8
  420e18:	xlat   BYTE PTR ds:[ebx]
  420e19:	xchg   edx,eax
  420e1a:	push   ebp
  420e1b:	out    0x86,eax
  420e1d:	mov    ds,WORD PTR [ecx-0x5799ed12]
  420e23:	cmp    cl,BYTE PTR [edx-0x51b8ee77]
  420e29:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420e2b:	das    
  420e2c:	or     BYTE PTR [ebp+0x38df181],cl
  420e32:	popf   
  420e33:	addr16 cli 
  420e35:	xor    BYTE PTR [bp+0x73],bh
  420e39:	pop    ebx
  420e3a:	push   ebp
  420e3b:	and    eax,DWORD PTR [edi+eiz*4]
  420e3e:	shufps xmm7,XMMWORD PTR [ebx-0x1d8d6473],0x84
  420e46:	dec    eax
  420e47:	xchg   ecx,eax
  420e48:	sbb    eax,0x7b662f70
  420e4d:	mov    ecx,0x32ff95af
  420e52:	cmp    eax,0x5b3db2a0
  420e57:	dec    edi
  420e58:	mov    esp,esi
  420e5a:	pop    ebp
  420e5b:	xor    BYTE PTR [edx-0x13],bl
  420e5e:	pop    ecx
  420e5f:	scas   al,BYTE PTR es:[edi]
  420e60:	mov    al,BYTE PTR [edx+0x4847fd7d]
  420e66:	pusha  
  420e67:	sbb    DWORD PTR [eax],ecx
  420e69:	mov    eax,ds:0xcd3c8287
  420e6e:	cld    
  420e6f:	aas    
  420e70:	push   0x89a358a3
  420e75:	retf   0x901b
  420e78:	aam    0xf7
  420e7a:	adc    al,0xce
  420e7c:	mov    bl,0x21
  420e7e:	xor    DWORD PTR [esi+0x76],ecx
  420e81:	(bad)  
  420e82:	jmp    0xa2922e0b
  420e87:	not    edx
  420e89:	mov    esi,0xc76deb2f
  420e8e:	mov    ch,0x0
  420e90:	inc    esi
  420e91:	jge    0x420e8d
  420e93:	xchg   esi,ecx
  420e95:	iret   
  420e96:	inc    esi
  420e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e98:	call   0x2f21:0xd29a93
  420e9f:	loop   0x420e79
  420ea1:	xor    BYTE PTR [ebp+0xa],cl
  420ea4:	nop
  420ea5:	mov    dl,0x75
  420ea7:	into   
  420ea8:	(bad)  
  420ea9:	mov    ss,WORD PTR [ecx+0x7c616b63]
  420eaf:	push   ebx
  420eb0:	cs int 0xc8
  420eb3:	cmp    BYTE PTR [esi+0x2462f76],cl
  420eb9:	hlt    
  420eba:	popa   
  420ebb:	cmp    edi,0x44a5ee2e
  420ec1:	cmp    eax,0x13627103
  420ec6:	xlat   BYTE PTR ds:[ebx]
  420ec7:	add    DWORD PTR [ebx],0x43
  420eca:	inc    ebp
  420ecb:	int    0xfb
  420ecd:	and    ch,BYTE PTR [edi+0x26]
  420ed0:	xchg   ebp,eax
  420ed1:	jecxz  0x420eb6
  420ed3:	fbld   TBYTE PTR [esi-0x73]
  420ed6:	cmc    
  420ed7:	xchg   edi,eax
  420ed8:	xchg   BYTE PTR [esi],dl
  420eda:	out    dx,al
  420edb:	mov    ds:0x92eddb3,al
  420ee0:	dec    edx
  420ee1:	jno    0x420f50
  420ee3:	gs cwde 
  420ee5:	or     eax,0x9278ba53
  420eea:	inc    ebp
  420eeb:	adc    cl,BYTE PTR [edx-0x5c7a3c03]
  420ef1:	loope  0x420f2c
  420ef3:	hlt    
  420ef4:	mov    bl,BYTE PTR [ebp-0x6]
  420ef7:	in     eax,dx
  420ef8:	fcom   st(1)
  420efa:	fld    DWORD PTR [edx]
  420efc:	sub    DWORD PTR [edx+0x47dba6fe],ecx
  420f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f03:	xchg   esi,eax
  420f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f05:	sahf   
  420f06:	dec    ecx
  420f07:	iret   
  420f08:	xchg   esp,eax
  420f09:	stc    
  420f0a:	add    edx,DWORD PTR [esi]
  420f0c:	into   
  420f0d:	int3   
  420f0e:	mov    esp,0x534fbc75
  420f13:	sub    BYTE PTR [ebx],ah
  420f15:	(bad)  
  420f16:	out    dx,eax
  420f17:	or     DWORD PTR [eax+edx*4-0x77],0x2eb74834
  420f1f:	jmp    DWORD PTR [ebx+0x1af89daf]
  420f25:	loop   0x420f98
  420f27:	dec    esi
  420f28:	ja     0x420eb8
  420f2a:	sar    BYTE PTR [ebp+0x69ac68df],1
  420f30:	dec    edx
  420f31:	xchg   esi,eax
  420f32:	xlat   BYTE PTR ds:[ebx]
  420f33:	fidiv  WORD PTR [edx-0x751b19bf]
  420f39:	mov    ds:0x69cf1702,al
  420f3e:	xchg   edx,eax
  420f3f:	les    ecx,FWORD PTR [esi]
  420f41:	lea    eax,[edx-0x39b12c6b]
  420f47:	iret   
  420f48:	cwde   
  420f49:	shr    DWORD PTR [edi],0xb7
  420f4c:	xchg   DWORD PTR [edi],ebp
  420f4e:	call   0xa086b3ff
  420f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f54:	pop    ebx
  420f55:	mov    BYTE PTR [edx+ebx*4],ah
  420f58:	xchg   esp,eax
  420f59:	pop    ecx
  420f5a:	push   0xffffffa1
  420f5c:	lea    esi,[ecx+esi*4+0x653f06fd]
  420f63:	out    0xc,al
  420f65:	imul   edi,DWORD PTR [ecx-0x364712f],0xfb8dcd76
  420f6f:	fsub   st(1),st
  420f71:	mov    al,ds:0xb791c570
  420f76:	shr    bh,0x3b
  420f79:	or     eax,0x57a36b6d
  420f7e:	fwait
  420f7f:	mov    dl,0x24
  420f81:	sbb    bl,dl
  420f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f84:	loope  0x421005
  420f86:	(bad)  
  420f87:	inc    esp
  420f88:	es mov al,0x59
  420f8b:	aaa    
  420f8c:	rcr    BYTE PTR [edx+eiz*4+0x31],0xcd
  420f91:	cdq    
  420f92:	jne    0x420f55
  420f94:	call   0x2fe83fcf
  420f99:	retf   
  420f9a:	les    esi,FWORD PTR [ecx+0x37]
  420f9d:	(bad)  
  420f9e:	jmp    0x420f56
  420fa0:	cwde   
  420fa1:	inc    ecx
  420fa2:	cmc    
  420fa3:	je     0x420f8b
  420fa5:	adc    bh,BYTE PTR [eax]
  420fa7:	jnp    0x420fe7
  420fa9:	mov    ds:0x202325db,al
  420fae:	cmp    DWORD PTR [edi-0x2f307290],edx
  420fb4:	enter  0xe772,0xf
  420fb8:	and    eax,0xd0492ec9
  420fbd:	xlat   BYTE PTR ds:[ebx]
  420fbe:	jbe    0x421038
  420fc0:	adc    al,0x45
  420fc2:	xor    esp,DWORD PTR [esi+0x28bb5e2c]
  420fc8:	(bad)  
  420fc9:	jmp    0xdbcc4d6b
  420fce:	scas   eax,DWORD PTR es:[edi]
  420fcf:	jge    0x420f92
  420fd1:	jp     0x420fc3
  420fd3:	or     eax,0x3b578ddd
  420fd8:	mov    WORD PTR [esi+esi*2+0x62],fs
  420fdc:	pusha  
  420fdd:	sahf   
  420fde:	das    
  420fdf:	mov    cl,0xa7
  420fe1:	ds push ebp
  420fe3:	call   0xa6c07a84
  420fe8:	out    0xd7,eax
  420fea:	mov    bh,0xd0
  420fec:	xor    al,BYTE PTR [esi-0x4c74d867]
  420ff2:	ret    
  420ff3:	adc    dh,BYTE PTR ss:[eax+0x1f]
  420ff7:	frstor [edx-0x67]
  420ffa:	inc    eax
  420ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ffc:	fisubr DWORD PTR ds:0xdebfb139
  421002:	jl     0x420fdb
  421004:	mov    dl,BYTE PTR [ebp+0x4f]
  421007:	shr    DWORD PTR [eax-0x6c97d649],0xa1
  42100e:	daa    
  42100f:	lods   al,BYTE PTR ds:[esi]
  421010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421011:	mov    gs,WORD PTR [ebx-0x7093b206]
  421017:	jecxz  0x42104f
  421019:	mov    WORD PTR [edi],gs
  42101b:	mov    eax,ds:0xea40e612
  421020:	aaa    
  421021:	mov    edx,0xe925a0c4
  421026:	pusha  
  421027:	inc    ecx
  421028:	or     bl,BYTE PTR [edi]
  42102a:	mov    esi,0x2f2e64ba
  42102f:	mov    ecx,0x948f6eb5
  421034:	loop   0x42109c
  421036:	in     eax,dx
  421037:	(bad)  
  421038:	and    BYTE PTR [ebp-0x8e81d83],cl
  42103e:	repz cmp esi,DWORD PTR [edi+ebp*4]
  421042:	das    
  421043:	repz add ebx,ebx
  421046:	jnp    0x421049
  421048:	dec    ebx
  421049:	jl     0x42107f
  42104b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42104c:	and    BYTE PTR [edi+0x3a7e6cb0],dh
  421052:	jmp    0x86a6:0xa13bc1e8
  421059:	(bad)  
  42105a:	push   ss
  42105b:	int    0x5b
  42105d:	shl    edx,0xa5
  421060:	add    al,0xcd
  421062:	pop    ebx
  421063:	(bad)  
  421064:	jmp    0xd3dd:0x958eb171
  42106b:	rcl    eax,1
  42106d:	and    ebp,DWORD PTR [edi+0x12c4d2af]
  421073:	int    0x3a
  421075:	mov    eax,ds:0x4d0bd356
  42107a:	shr    BYTE PTR [eax+0x5e],1
  42107d:	jge    0x4210d0
  42107f:	cmp    al,0x95
  421081:	loopne 0x42106f
  421083:	loope  0x421086
  421085:	sub    eax,0xe328036
  42108a:	pop    edi
  42108b:	sbb    BYTE PTR [eax-0x73],dl
  42108e:	sahf   
  42108f:	xor    bh,BYTE PTR [edx+0x62c4f4da]
  421095:	inc    edx
  421096:	cs pop ebx
  421098:	lods   eax,DWORD PTR ds:[esi]
  421099:	adc    eax,0xbfeb5986
  42109e:	shl    BYTE PTR [ebx-0x5947ae8e],0x73
  4210a5:	je     0x421097
  4210a7:	arpl   cx,ax
  4210a9:	loopne 0x4210b4
  4210ab:	or     al,0x8a
  4210ad:	div    DWORD PTR [edi-0x78]
  4210b0:	pop    ebp
  4210b1:	add    DWORD PTR [esi+0x4b],eax
  4210b4:	pop    edi
  4210b5:	mov    ch,BYTE PTR [ebp+0x2c]
  4210b8:	dec    eax
  4210b9:	sbb    ch,BYTE PTR [ecx-0x1b]
  4210bc:	sar    cl,cl
  4210be:	xchg   ecx,eax
  4210bf:	test   al,0x7a
  4210c1:	inc    esp
  4210c2:	lods   eax,DWORD PTR ds:[esi]
  4210c3:	cmc    
  4210c4:	mov    eax,DWORD PTR [edx+0x3527e984]
  4210ca:	push   0xa17e4a46
  4210cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d1:	test   BYTE PTR [edi+0x1bf4b8b7],al
  4210d7:	enter  0xa8a,0xc2
  4210db:	sar    ebx,1
  4210dd:	push   ebp
  4210de:	mulps  xmm7,XMMWORD PTR [ebx-0x45829d73]
  4210e5:	add    BYTE PTR [eax+0x2fa7b038],0x53
  4210ec:	cmp    edi,DWORD PTR [edi+0x2394eb6f]
  4210f2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210f4:	xchg   esi,eax
  4210f5:	mov    bl,0xff
  4210f7:	fisttp DWORD PTR [ecx+0x21]
  4210fa:	sub    BYTE PTR [edx],bh
  4210fc:	mov    dh,BYTE PTR ds:0x69337a5
  421102:	xor    BYTE PTR [esi+0xe],cl
  421105:	ret    0x1b7c
  421108:	or     al,BYTE PTR [edx+eax*8]
  42110b:	scas   al,BYTE PTR es:[edi]
  42110c:	xor    eax,0x8ec63ffa
  421111:	mov    bl,0x3a
  421113:	aas    
  421114:	fdivr  DWORD PTR [esi-0x55d61e91]
  42111a:	or     BYTE PTR [edi+0x675167f4],ah
  421120:	(bad)  
  421121:	das    
  421122:	ficom  DWORD PTR [ebp-0x26]
  421125:	out    0x30,al
  421127:	iret   
  421128:	std    
  421129:	xchg   esi,eax
  42112a:	in     eax,dx
  42112b:	lock inc ebp
  42112d:	ins    DWORD PTR es:[edi],dx
  42112e:	jle    0x4210c7
  421130:	call   0x410a1692
  421135:	lea    esi,[edx+edx*2]
  421138:	or     ebp,DWORD PTR [ecx-0x16904da3]
  42113e:	cs mov ecx,0x71a49e68
  421144:	shl    ebp,0x8
  421147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421148:	pushw  0x33
  42114b:	out    0x70,eax
  42114d:	fbld   TBYTE PTR [edi]
  42114f:	push   0xc668ca8a
  421154:	call   0x42ee6a0c
  421159:	lea    eax,[eax-0x77]
  42115c:	or     DWORD PTR ds:0x7ff2c2f7,ebp
  421162:	das    
  421163:	dec    ecx
  421164:	sbb    esi,DWORD PTR [ebp-0x143f3ff0]
  42116a:	dec    eax
  42116b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42116c:	popa   
  42116d:	leave  
  42116e:	sub    eax,0xe04a4b61
  421173:	clc    
  421174:	mov    ch,BYTE PTR [ecx-0x6079ce41]
  42117a:	adc    esp,DWORD PTR [ebx-0x4d]
  42117d:	mov    ah,BYTE PTR ds:0x4b78649e
  421183:	(bad)  
  421184:	hlt    
  421185:	pop    eax
  421186:	jnp    0x4211ea
  421188:	mov    edx,DWORD PTR [ebx+ebx*4-0x15ee2609]
  42118f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421190:	retf   0x22e9
  421193:	mov    ds:0x51068e94,eax
  421198:	inc    ebp
  421199:	adc    BYTE PTR [ecx+0x3abb22b6],bl
  42119f:	push   ebx
  4211a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a1:	cwde   
  4211a2:	aaa    
  4211a3:	aas    
  4211a4:	push   ebp
  4211a5:	add    esi,DWORD PTR [ecx+0x2c686825]
  4211ab:	out    dx,al
  4211ac:	push   es
  4211ad:	mov    eax,ds:0x69f9a643
  4211b2:	lock lock xchg BYTE PTR [edi-0x14fe9c69],ch
  4211ba:	xor    al,0xa3
  4211bc:	lahf   
  4211bd:	or     al,0x8c
  4211bf:	out    0x6c,al
  4211c1:	pop    ebp
  4211c2:	pop    eax
  4211c3:	cs mov esi,0x8df8a3a1
  4211c9:	(bad)  
  4211ca:	repz sub bh,ch
  4211cd:	mov    cs,WORD PTR [esi-0x70a375e9]
  4211d3:	cmc    
  4211d4:	int3   
  4211d5:	aam    0x1d
  4211d7:	sbb    al,al
  4211d9:	lea    edx,[ebp+edx*4+0x700be09d]
  4211e0:	mov    edi,DWORD PTR [edx]
  4211e2:	ss adc eax,0x2668d266
  4211e8:	jecxz  0x421207
  4211ea:	cmp    eax,DWORD PTR [edi]
  4211ec:	std    
  4211ed:	xchg   edx,eax
  4211ee:	push   ecx
  4211ef:	mov    eax,ds:0x924ec9b1
  4211f4:	int    0x49
  4211f6:	push   es
  4211f7:	or     DWORD PTR [ebp-0x1bdb3f51],0x96f3cf23
  421201:	cmp    BYTE PTR [edi-0x3e],0x14
  421205:	(bad)
  421208:	adc    al,0xa8
  42120a:	sbb    cl,BYTE PTR fs:[edx-0x55465d39]
  421211:	shl    BYTE PTR [edi],cl
  421213:	sub    ah,bh
  421215:	mov    ?,WORD PTR [ebx-0x1d042c5b]
  42121b:	mov    ebp,0xc6b5d1c5
  421220:	add    ecx,DWORD PTR [esi-0x1377569b]
  421226:	iret   
  421227:	stos   DWORD PTR es:[edi],eax
  421228:	(bad)  
  421229:	in     al,0x2e
  42122b:	out    dx,al
  42122c:	pusha  
  42122d:	inc    edi
  42122e:	add    ebx,DWORD PTR [ecx-0x593e6131]
  421234:	xor    al,0xa9
  421236:	mov    ebp,0x5af5d4d
  42123b:	pop    ss
  42123c:	mov    BYTE PTR [edx+0x579531f4],dh
  421242:	sbb    edi,DWORD PTR [ecx+0x4a]
  421245:	loopne 0x4212b9
  421247:	lea    ecx,[edx-0xcaee5e4]
  42124d:	hlt    
  42124e:	popf   
  42124f:	out    dx,eax
  421250:	mov    WORD PTR [edx-0x70],?
  421253:	mov    bl,0x14
  421255:	popf   
  421256:	(bad)  
  421257:	out    0xdd,al
  421259:	push   ebp
  42125a:	xchg   BYTE PTR [edi+esi*2-0x5258d041],ch
  421261:	lods   eax,DWORD PTR ds:[esi]
  421262:	mov    eax,0x4e433caa
  421267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421269:	mov    ds:0xe928c6d7,eax
  42126e:	and    al,0x3a
  421270:	mov    ch,bl
  421272:	clc    
  421273:	mov    esi,0xd7fedabe
  421278:	push   edx
  421279:	mov    ds:0xd8f451e,al
  42127e:	dec    ecx
  42127f:	mov    WORD PTR [esi],gs
  421281:	or     edi,DWORD PTR [edi]
  421283:	or     eax,0xec098a8a
  421288:	cmp    BYTE PTR [eax],dh
  42128a:	xor    BYTE PTR [ebx-0x49],0x8d
  42128e:	and    ah,BYTE PTR [edi+0x17]
  421291:	ins    DWORD PTR es:[edi],dx
  421292:	leave  
  421293:	sub    esp,edx
  421295:	add    al,0x3b
  421297:	retf   0xd25f
  42129a:	xchg   esi,eax
  42129b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42129c:	sub    ebx,edx
  42129e:	nop
  42129f:	jae    0x42125b
  4212a1:	cmp    eax,0x8d209df2
  4212a6:	lods   al,BYTE PTR ds:[esi]
  4212a7:	aas    
  4212a8:	xor    eax,0x971e006b
  4212ad:	ss das 
  4212af:	lods   al,BYTE PTR ds:[esi]
  4212b0:	adc    eax,0xe0701d68
  4212b5:	pop    edx
  4212b6:	test   DWORD PTR [esi-0x2629e172],esp
  4212bc:	lds    eax,FWORD PTR [ebp+0x5d]
  4212bf:	test   BYTE PTR [edx+0x4902d3bd],0x37
  4212c6:	inc    edi
  4212c7:	fs pop esp
  4212c9:	lea    esi,[ebx-0x39e40684]
  4212cf:	xlat   BYTE PTR ds:[ebx]
  4212d0:	cwde   
  4212d1:	repnz sub ah,BYTE PTR [ebx+0x73]
  4212d5:	dec    eax
  4212d6:	xchg   ecx,eax
  4212d7:	inc    ebx
  4212d8:	or     ch,dh
  4212da:	cli    
  4212db:	or     esp,DWORD PTR [ebp-0x76]
  4212de:	jnp    0x4212dc
  4212e0:	bsr    esp,DWORD PTR [edx-0x3c]
  4212e4:	jno    0x421291
  4212e6:	out    dx,eax
  4212e7:	mov    al,0x4c
  4212e9:	mov    bl,0x2f
  4212eb:	aam    0x4d
  4212ed:	(bad)  
  4212ee:	xchg   edx,eax
  4212ef:	and    BYTE PTR [ebx],ch
  4212f1:	(bad)  
  4212f2:	lahf   
  4212f3:	fcmovb st,st(2)
  4212f5:	xchg   ebx,eax
  4212f6:	pop    eax
  4212f7:	add    eax,0xd6cf23ce
  4212fc:	xchg   DWORD PTR [edx+0x6a],esp
  4212ff:	daa    
  421300:	mov    ebx,DWORD PTR ds:0x4798647c
  421306:	cwde   
  421307:	mov    BYTE PTR [esi+0x6ba6bd02],0x41
  42130e:	mov    ebx,0x5174cbb0
  421313:	ss jle 0x42135c
  421316:	das    
  421317:	and    ecx,ebp
  421319:	push   ss
  42131a:	test   eax,0xa3888fe
  42131f:	test   eax,0xa7a78a9b
  421324:	dec    ebx
  421325:	or     ch,BYTE PTR [edx+0x46]
  421328:	mov    ds:0x8a4c2511,al
  42132d:	and    edx,DWORD PTR [ebp-0x42]
  421330:	push   eax
  421331:	mov    DWORD PTR [esi+0x42],0x13f28af3
  421338:	call   0xa368d364
  42133d:	rol    BYTE PTR [edx+edi*8],1
  421340:	inc    edx
  421341:	popf   
  421342:	das    
  421343:	jle    0x42133f
  421345:	cwde   
  421346:	gs dec esi
  421348:	sbb    eax,0x91b92374
  42134d:	imul   eax,esi,0xffffffa6
  421350:	stc    
  421351:	int    0x30
  421353:	mov    gs,WORD PTR [ecx+0x435d2fa7]
  421359:	cmc    
  42135a:	pop    ebx
  42135b:	mov    al,dh
  42135d:	dec    edx
  42135e:	or     BYTE PTR [esi-0x4a188cef],ah
  421364:	cmp    DWORD PTR [ebx+0x4e],edx
  421367:	pop    ecx
  421368:	sub    BYTE PTR ds:0x199d874f,0xcd
  42136f:	add    al,0x89
  421371:	cmpxchg DWORD PTR [ebx+edx*1-0x1c42a4e3],edi
  421379:	(bad)  
  42137a:	call   0x429a64e2
  42137f:	call   0x1a6bf7b6
  421384:	dec    edx
  421385:	lea    esi,[esi+ecx*4]
  421388:	push   esi
  421389:	sbb    ecx,edi
  42138b:	pop    ebp
  42138c:	xchg   esp,eax
  42138d:	(bad)  
  42138e:	rcr    DWORD PTR [edi-0x10bca283],0xb8
  421395:	xchg   ebp,eax
  421396:	inc    esp
  421397:	(bad)  
  421398:	in     al,dx
  421399:	lods   eax,DWORD PTR ds:[esi]
  42139a:	repnz dec edi
  42139c:	mov    dl,0x25
  42139e:	dec    ebp
  42139f:	ss rcl ecx,1
  4213a2:	jbe    0x42135d
  4213a4:	inc    ecx
  4213a5:	scas   eax,DWORD PTR es:[edi]
  4213a6:	xor    esp,DWORD PTR [ebp-0x50c07fa2]
  4213ac:	dec    edx
  4213ad:	fiadd  WORD PTR [ebp+0x23]
  4213b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b1:	imul   edi,DWORD PTR [edx],0x15838894
  4213b7:	xchg   ebp,eax
  4213b8:	out    0xcd,al
  4213ba:	in     eax,0x4e
  4213bc:	cld    
  4213bd:	popa   
  4213be:	xor    al,0xb4
  4213c0:	mov    cl,bh
  4213c2:	dec    esi
  4213c3:	pushf  
  4213c4:	inc    eax
  4213c5:	stc    
  4213c6:	push   ds
  4213c7:	daa    
  4213c8:	mov    bh,ah
  4213ca:	in     al,0x6f
  4213cc:	cli    
  4213cd:	lods   al,BYTE PTR ds:[esi]
  4213ce:	pop    ecx
  4213cf:	jnp    0x4213bd
  4213d1:	(bad)  
  4213d2:	rcr    ebx,1
  4213d4:	push   0x27
  4213d6:	sbb    ch,ch
  4213d8:	pop    edx
  4213d9:	fs das 
  4213db:	loop   0x421441
  4213dd:	mov    bh,0x93
  4213df:	and    eax,0xa66ea9fd
  4213e4:	pop    ss
  4213e5:	jl     0x4213d3
  4213e7:	lods   al,BYTE PTR ds:[esi]
  4213e8:	cmp    esp,esp
  4213ea:	(bad)  
  4213eb:	cmp    DWORD PTR [edx+0x3542671f],ecx
  4213f1:	(bad)  
  4213f2:	sub    eax,0x448db30d
  4213f7:	adc    dl,BYTE PTR [ecx-0x57]
  4213fa:	inc    edx
  4213fb:	retf   
  4213fc:	xor    DWORD PTR [edi+0x2f],ebp
  4213ff:	push   esp
  421400:	cmp    al,0xff
  421402:	rcl    eax,cl
  421404:	and    eax,0xf5a5dc26
  421409:	ret    
  42140a:	sub    esi,edx
  42140c:	cld    
  42140d:	retf   
  42140e:	xchg   bl,ah
  421410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421411:	fistp  DWORD PTR [edx-0x3ef3b5ce]
  421417:	push   eax
  421418:	fsub   st(0),st
  42141a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42141c:	xchg   esi,eax
  42141d:	dec    ebp
  42141e:	loopne 0x4213c3
  421420:	stos   DWORD PTR es:[edi],eax
  421421:	mov    ebp,0x78675587
  421426:	das    
  421427:	sub    cl,BYTE PTR [edi-0x6b054ae3]
  42142d:	add    al,0xd2
  42142f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421430:	or     edx,edi
  421432:	(bad)  
  421433:	addr16 mov bh,0x9b
  421436:	inc    ecx
  421437:	dec    esp
  421438:	mov    dl,BYTE PTR ds:0xb8dbf7ea
  42143e:	jne    0x42145a
  421440:	call   0x70b9ead1
  421445:	jbe    0x4213c8
  421447:	mov    al,ds:0xd2147c86
  42144c:	xor    edi,DWORD PTR [ebp+0x2b]
  42144f:	int    0x72
  421451:	mov    DWORD PTR [ecx],eax
  421453:	pushf  
  421454:	dec    edx
  421455:	cmp    al,BYTE PTR [ebp+0x1d]
  421458:	inc    ecx
  421459:	lea    edi,[esi-0x152f9723]
  42145f:	js     0x4213e6
  421461:	jmp    0x4214a7
  421463:	mov    eax,ds:0xa56fe714
  421468:	fwait
  421469:	lock je 0x4213fc
  42146c:	or     dl,0xe0
  42146f:	xchg   ebp,eax
  421470:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  421472:	inc    ebx
  421473:	cmp    al,0x85
  421475:	jmp    0x24f367a8
  42147a:	in     eax,dx
  42147b:	pop    esi
  42147c:	iret   
  42147d:	mov    bh,0x72
  42147f:	rcr    BYTE PTR [edx-0x73],0x86
  421483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421484:	mov    esp,0x39e729a9
  421489:	pop    ds
  42148a:	das    
  42148b:	inc    esi
  42148c:	fbld   TBYTE PTR [eax-0x19]
  42148f:	fwait
  421490:	cld    
  421491:	jg     0x42146e
  421493:	push   ebp
  421494:	dec    esi
  421495:	mov    dh,BYTE PTR [edx+0x53920161]
  42149b:	jbe    0x4214cc
  42149d:	enter  0x6b81,0x8a
  4214a1:	ja     0x42145d
  4214a3:	dec    esp
  4214a4:	arpl   di,bp
  4214a6:	cmp    DWORD PTR [eax-0x7b847245],esi
  4214ac:	into   
  4214ad:	jo     0x42148d
  4214af:	and    dh,BYTE PTR [eax+0x704d2fa2]
  4214b5:	sbb    eax,0x5199375c
  4214ba:	jns    0x421466
  4214bc:	ret    
  4214bd:	jne    0x4214c9
  4214bf:	std    
  4214c0:	or     eax,0xeee6640d
  4214c5:	dec    ebx
  4214c6:	das    
  4214c7:	sbb    eax,0x7770c206
  4214cc:	cdq    
  4214cd:	pop    es
  4214ce:	hlt    
  4214cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214d0:	mov    esi,0xb5709130
  4214d5:	and    edx,DWORD PTR [esi+eiz*8]
  4214d8:	(bad)  
  4214d9:	(bad)  
  4214da:	and    eax,0xbfb74059
  4214df:	stos   DWORD PTR es:[edi],eax
  4214e0:	loop   0x4214fe
  4214e2:	shl    DWORD PTR [ebp-0x49bd9beb],1
  4214e8:	mov    ah,0xce
  4214ea:	dec    ecx
  4214eb:	scas   eax,DWORD PTR es:[edi]
  4214ec:	mov    ah,BYTE PTR [edx]
  4214ee:	inc    esp
  4214ef:	push   cs
  4214f0:	retf   
  4214f1:	xchg   esp,eax
  4214f2:	push   ebp
  4214f3:	xor    al,0x20
  4214f5:	ret    
  4214f6:	in     eax,dx
  4214f7:	or     esp,eax
  4214f9:	in     al,dx
  4214fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fb:	adc    cl,BYTE PTR [edx]
  4214fd:	sub    ebp,DWORD PTR [ecx+0x30]
  421500:	jo     0x421537
  421502:	arpl   WORD PTR gs:[edx+0x5a01b0ba],cx
  421509:	fdivrp st(6),st
  42150b:	cmp    al,0xf3
  42150d:	lea    eax,[esi-0x40685228]
  421513:	or     edi,DWORD PTR ds:0xeb9e2eee
  421519:	bswap  edx
  42151b:	xor    al,0xb7
  42151d:	in     eax,0x20
  42151f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421520:	xor    DWORD PTR ds:[ecx+0x31],esi
  421524:	lahf   
  421525:	repz fmulp st(1),st
  421528:	xchg   esp,eax
  421529:	mov    edx,0xce028895
  42152e:	push   edx
  42152f:	cmp    ecx,DWORD PTR gs:[ebp+0x4a]
  421533:	(bad)  
  421534:	dec    esi
  421535:	call   DWORD PTR [ecx+ebp*4]
  421538:	out    dx,al
  421539:	mov    ch,0xdc
  42153b:	lock mov esp,0x82f2e8ce
  421541:	push   esi
  421542:	nop
  421543:	scas   eax,DWORD PTR es:[edi]
  421544:	mov    ch,BYTE PTR [ebx+edx*8-0x4b]
  421548:	arpl   WORD PTR [ebx],si
  42154a:	imul   esp,DWORD PTR ds:0x9ac9918e,0xffffffdc
  421551:	hlt    
  421552:	jo     0x42155e
  421554:	mov    bl,BYTE PTR [edi+0x5a]
  421557:	(bad)  
  421558:	sub    al,0x40
  42155a:	sub    eax,0xd88d8fec
  42155f:	stc    
  421560:	rol    BYTE PTR [ebp+0x23],0x32
  421564:	mov    DWORD PTR [ecx+0x44],edi
  421567:	mov    ah,0xb7
  421569:	adc    DWORD PTR [edi-0xf],ebp
  42156c:	jnp    0x421514
  42156e:	cmp    DWORD PTR [ebx+edx*8-0x73],ecx
  421572:	xor    eax,0xcc18dc87
  421577:	stc    
  421578:	sbb    eax,DWORD PTR [esi]
  42157a:	ss push 0x8659fa0f
  421580:	and    BYTE PTR [ebx+0x7c537ee2],ch
  421586:	inc    edx
  421587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421588:	cmp    BYTE PTR [edi+edi*4+0x1a8951cf],bh
  42158f:	pop    edx
  421590:	mov    cl,BYTE PTR [eax+0x11]
  421593:	ins    BYTE PTR es:[edi],dx
  421594:	(bad)  
  421595:	test   al,0x80
  421597:	inc    edx
  421598:	ror    BYTE PTR [ebp-0x710a4f78],0x39
  42159f:	or     cl,BYTE PTR [esi]
  4215a1:	push   esp
  4215a2:	push   edi
  4215a4:	or     ebp,DWORD PTR [edi+ebp*1]
  4215a7:	out    dx,al
  4215a8:	add    ecx,DWORD PTR [eax-0x3a9f72a9]
  4215ae:	inc    esi
  4215af:	push   ebx
  4215b0:	push   ebp
  4215b1:	lea    esp,[eax+0x4]
  4215b4:	popf   
  4215b5:	imul   ebp,DWORD PTR [esi],0x20
  4215b8:	push   edx
  4215b9:	dec    ecx
  4215ba:	and    ebp,DWORD PTR [edi+edi*4]
  4215bd:	lea    ebp,[ebp-0x5cd4dafe]
  4215c3:	mov    dl,0x91
  4215c5:	lea    eax,[esi-0x35]
  4215c8:	rol    bl,0xa6
  4215cb:	in     al,dx
  4215cc:	repz xor BYTE PTR [eax],0x26
  4215d0:	xchg   esi,eax
  4215d1:	sbb    ah,BYTE PTR [ebx-0x42]
  4215d4:	rcl    DWORD PTR [ebp-0x5fdec19d],cl
  4215da:	jno    0x421629
  4215dc:	fs (bad) 
  4215de:	shl    DWORD PTR [edx+ebx*2-0x6bcb72f3],cl
  4215e5:	icebp  
  4215e6:	mov    ds:0x216da5ef,al
  4215eb:	leave  
  4215ec:	out    dx,eax
  4215ed:	or     bl,al
  4215ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215f0:	cwde   
  4215f1:	das    
  4215f2:	test   BYTE PTR ds:0x9633ae9d,ch
  4215f8:	and    al,BYTE PTR [ecx]
  4215fa:	and    BYTE PTR ss:[ebx],al
  4215fd:	adc    WORD PTR [edx],0x4a
  421601:	mov    esp,0x5295841a
  421606:	inc    ebx
  421607:	mov    eax,ds:0xb9f0de4
  42160c:	xchg   ebp,eax
  42160d:	jge    0x4215be
  42160f:	mov    ds:0x53c39108,eax
  421614:	mov    DWORD PTR [ebx],ebp
  421616:	xor    eax,0xf7834a92
  42161b:	aad    0xf6
  42161d:	scas   al,BYTE PTR es:[edi]
  42161e:	gs shr cl,1
  421621:	mov    gs,WORD PTR [esp+ecx*8+0x58]
  421625:	mov    dh,0xed
  421627:	mov    DWORD PTR [edx+0x41],esi
  42162a:	push   0xffffff80
  42162c:	mov    dh,BYTE PTR [edx*2-0x30f903c]
  421633:	iret   
  421634:	push   ds
  421635:	mov    dl,BYTE PTR [edi]
  421637:	add    eax,0x63a4352
  42163c:	pop    ss
  42163d:	neg    DWORD PTR [ecx]
  42163f:	push   0xffffffc1
  421641:	mov    DWORD PTR [ebx],0xebf94c26
  421647:	sbb    dh,BYTE PTR [esi+ebx*4-0x500359ae]
  42164e:	data16 je 0x4215de
  421651:	in     eax,0x74
  421653:	xor    ebp,DWORD PTR [edi+ecx*8+0x528b6591]
  42165a:	not    DWORD PTR [esi]
  42165c:	stc    
  42165d:	jno    0x42166f
  42165f:	iret   
  421660:	bound  ecx,QWORD PTR [ecx+0x35ca9f38]
  421666:	mov    ebp,DWORD PTR [ecx]
  421668:	or     bh,BYTE PTR ds:0x57ebc960
  42166e:	xor    eax,0x1d2c0041
  421673:	jno    0x42167f
  421675:	mov    DWORD PTR [esi+0x2ea4200d],0x4092caa6
  42167f:	rol    BYTE PTR [ebx],1
  421681:	in     al,0x34
  421683:	cmp    DWORD PTR [edx-0x5bed94e7],ecx
  421689:	adc    al,0x3c
  42168b:	aas    
  42168c:	cmp    edx,DWORD PTR [edx+0x56b3f0fb]
  421692:	iret   
  421693:	leave  
  421694:	jnp    0x421676
  421696:	jp     0x4216d5
  421698:	mov    dl,BYTE PTR [edx-0x56]
  42169b:	mov    al,ds:0x6229f4b5
  4216a0:	mov    ds:0x5772c48d,al
  4216a5:	cwde   
  4216a6:	mov    ebp,0x2f806163
  4216ab:	in     al,0x31
  4216ad:	or     ebx,DWORD PTR [ecx]
  4216af:	lahf   
  4216b0:	xadd   BYTE PTR [esi-0x79b50d5c],cl
  4216b7:	push   esi
  4216b8:	shl    al,0x6e
  4216bb:	mov    dh,0x9b
  4216bd:	jmp    0x4216ed
  4216bf:	jns    0x42167e
  4216c1:	fldcw  WORD PTR [ebx]
  4216c3:	mov    cl,ch
  4216c5:	popf   
  4216c6:	retf   
  4216c7:	dec    ebp
  4216c8:	add    eax,0xff7c9a8e
  4216cd:	mov    ecx,0x34fbbb8a
  4216d2:	xor    dh,BYTE PTR [edx]
  4216d4:	jo     0x4216d8
  4216d6:	lds    esp,FWORD PTR [ebx-0x3c522627]
  4216dc:	sub    DWORD PTR ds:0x2fd0e76f,esi
  4216e2:	js     0x4216ac
  4216e4:	jmp    0x85c8:0xfa5fab1
  4216eb:	mov    al,0xa5
  4216ed:	popf   
  4216ee:	std    
  4216ef:	clc    
  4216f0:	mov    bl,BYTE PTR [edx+edi*2]
  4216f3:	and    edx,esi
  4216f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216f6:	shr    DWORD PTR [ebp-0xf],1
  4216f9:	(bad)  
  4216fa:	loopne 0x4216cf
  4216fc:	adc    al,0x4d
  4216fe:	sahf   
  4216ff:	push   esp
  421700:	mov    al,0x5
  421702:	cmp    al,BYTE PTR [ebp+0x59cb90bf]
  421708:	sub    DWORD PTR [ebp+0x68a04fd7],ecx
  42170e:	test   al,0xb8
  421710:	mov    ebx,DWORD PTR [esi+eax*8]
  421713:	popa   
  421714:	bound  ebx,QWORD PTR [eax-0x69]
  421717:	cdq    
  421718:	xchg   dh,cl
  42171a:	pushw  es
  42171c:	dec    esi
  42171d:	ins    BYTE PTR es:[edi],dx
  42171e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42171f:	mov    al,ds:0xb79ceec5
  421724:	imul   esp,DWORD PTR [edi-0x43619b19],0xffffffeb
  42172b:	rcl    DWORD PTR [edi+0x4dae2f1c],0x62
  421732:	mov    ss,edx
  421734:	push   0xeca60282
  421739:	cmc    
  42173a:	jle    0x421753
  42173c:	and    ebp,DWORD PTR [edi+0x74]
  42173f:	popf   
  421740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421741:	arpl   WORD PTR [edx-0xd],cx
  421744:	int    0xf1
  421746:	loop   0x4217b4
  421748:	dec    edx
  421749:	retf   
  42174a:	mov    dh,0x59
  42174c:	hlt    
  42174d:	rcl    BYTE PTR [esp+edx*8-0x77],0x58
  421752:	push   ds
  421753:	clc    
  421754:	mov    es,WORD PTR ds:0x9a43ad8f
  42175a:	das    
  42175b:	fprem  
  42175d:	adc    eax,0xc83513dd
  421762:	mov    eax,ds:0x8fa2d3a6
  421767:	int3   
  421768:	mov    ecx,0x8a39952a
  42176d:	sub    ecx,ecx
  42176f:	xchg   esi,eax
  421770:	(bad)  
  421771:	repnz push es
  421773:	mov    esp,0xd94e8da1
  421778:	out    0xbc,al
  42177a:	call   0xc90d:0x2f9bef09
  421781:	icebp  
  421782:	or     eax,0x8c31fce8
  421787:	mov    al,0xec
  421789:	shl    BYTE PTR [edi+0x10d67de6],cl
  42178f:	imul   edx,ebp,0x8a5fdd8f
  421795:	call   0x1611546a
  42179a:	cmp    esi,DWORD PTR [edx-0xea672c7]
  4217a0:	sar    BYTE PTR [ebp+ebx*8-0x74],0x4f
  4217a5:	or     eax,0x82cd52f
  4217aa:	xchg   ebp,eax
  4217ab:	popf   
  4217ac:	xor    ch,BYTE PTR [esi-0x6e4b5a31]
  4217b2:	push   0x71
  4217b4:	sub    bl,bh
  4217b6:	(bad)  
  4217b7:	stc    
  4217b8:	(bad)  
  4217bb:	or     BYTE PTR [edi+0x30bb2f8e],bh
  4217c1:	sub    BYTE PTR [ecx],0xdc
  4217c4:	daa    
  4217c5:	jl     0x421769
  4217c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217c8:	mov    edx,0xa0f7f091
  4217cd:	inc    esp
  4217ce:	loopne 0x4217a9
  4217d0:	xchg   esp,eax
  4217d1:	sub    esp,ebx
  4217d3:	mov    ebp,0x78134d6b
  4217d8:	push   ebx
  4217d9:	pusha  
  4217da:	idiv   DWORD PTR [edi-0x26]
  4217dd:	imul   edx,DWORD PTR [edi-0x4d],0x73
  4217e1:	mov    ch,0xb3
  4217e3:	aam    0xa7
  4217e5:	lea    ebp,[ecx+0x7db5c999]
  4217eb:	dec    ebx
  4217ec:	fs ins DWORD PTR es:[edi],dx
  4217ee:	cmp    cl,BYTE PTR [ecx+0x26b5f9c7]
  4217f4:	mov    cl,0x27
  4217f6:	mov    dh,BYTE PTR [esi+0x63]
  4217f9:	(bad)  
  4217fa:	loopne 0x421806
  4217fc:	call   0x35b4:0x44404989
  421803:	lahf   
  421804:	mov    ebx,0x6c5e25a
  421809:	out    0xb5,al
  42180b:	test   al,0xe
  42180d:	ret    
  42180e:	fild   QWORD PTR [esi+0xa]
  421811:	fwait
  421812:	xchg   edx,eax
  421813:	(bad)  
  421814:	mov    ?,WORD PTR [edi]
  421816:	pmuludq mm1,QWORD PTR [edx-0x61cb6288]
  42181d:	or     ah,BYTE PTR [esi]
  42181f:	cmp    edi,DWORD PTR [eax-0x73]
  421822:	scas   eax,DWORD PTR es:[edi]
  421823:	or     al,0x76
  421825:	pop    esi
  421826:	dec    esi
  421827:	mov    ch,0x92
  421829:	jno    0x42181e
  42182b:	mov    eax,0xf9758d05
  421830:	jmp    0xe9ad:0x5edb31fe
  421837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421838:	dec    edx
  421839:	adc    ch,BYTE PTR [ecx-0x19624a5e]
  42183f:	mov    BYTE PTR [ebp+0x4a4183f6],ah
  421845:	add    al,0xed
  421847:	data16 sti 
  421849:	iret   
  42184a:	xchg   edx,eax
  42184b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42184c:	adc    cl,BYTE PTR [edi+edx*1-0x59a6bf47]
  421853:	pop    esp
  421854:	shl    DWORD PTR ds:0x6310a6bb,0xe9
  42185b:	add    bl,BYTE PTR [ebp+0x58]
  42185e:	and    esp,DWORD PTR [esi+0x2ca797a]
  421864:	cs cld 
  421866:	mov    bh,0xc1
  421868:	mov    ch,dl
  42186a:	loopne 0x42181f
  42186c:	pop    ds
  42186d:	pop    ebp
  42186e:	and    BYTE PTR [esi-0x5afd04d6],al
  421874:	cmp    BYTE PTR [ebx-0x1d4d9547],0x76
  42187b:	test   DWORD PTR [edi+edi*4],edi
  42187e:	xor    dl,dh
  421880:	aad    0xdd
  421882:	in     eax,0x5e
  421884:	(bad)
  421888:	mov    edi,0x24b6678d
  42188d:	mov    esp,0x5a4dc1e4
  421892:	inc    ebp
  421893:	mov    esp,0xe02be671
  421898:	ret    0x99dd
  42189b:	out    0x2c,al
  42189d:	adc    DWORD PTR [edx],edx
  42189f:	imul   eax,edi,0x41a7469c
  4218a5:	lea    ecx,cs:[ecx-0x4211288b]
  4218ac:	add    eax,0xe5a76cd5
  4218b1:	loopne 0x421915
  4218b3:	jmp    0x42188e
  4218b5:	dec    ebx
  4218b6:	inc    edi
  4218b7:	ret    0xe818
  4218ba:	cs inc ebp
  4218bc:	dec    ebp
  4218bd:	jns    0x42193d
  4218bf:	fldenv [esi-0x2f]
  4218c2:	xlat   BYTE PTR ds:[ebx]
  4218c3:	sahf   
  4218c4:	mov    cl,0xc5
  4218c6:	stc    
  4218c7:	add    DWORD PTR [edx],ecx
  4218c9:	repnz (bad) 
  4218cb:	mov    cl,0xbf
  4218cd:	pop    ebx
  4218ce:	das    
  4218cf:	lea    ebp,[ecx]
  4218d1:	jmp    0x9f3b:0x2a323a56
  4218d8:	test   DWORD PTR ds:0x10ab7c9,0xa2c16a8d
  4218e2:	sub    ecx,esi
  4218e4:	arpl   WORD PTR [ebp-0x609b9812],cx
  4218ea:	push   ecx
  4218eb:	fadd   DWORD PTR [ebp-0x35b35c73]
  4218f1:	lds    edi,FWORD PTR [ebp+ebp*8-0x58f1fe71]
  4218f8:	and    ch,cl
  4218fa:	mov    ch,0x6e
  4218fc:	fdivr  DWORD PTR ds:0x5b82dafa
  421902:	or     esp,DWORD PTR [esi-0x4453c6d0]
  421908:	nop
  421909:	rcl    DWORD PTR [ebp-0x25],0x8a
  42190d:	shl    ch,1
  42190f:	rol    BYTE PTR [edi+0x65e19076],1
  421915:	lea    ebx,[ecx-0x5fb2c0a]
  42191b:	push   0x62
  42191d:	dec    esp
  42191e:	das    
  42191f:	adc    al,0x9d
  421921:	dec    ebx
  421922:	sbb    BYTE PTR [esi+0x7b],0xc
  421926:	jae    0x4218da
  421928:	xor    DWORD PTR [eax+0x53],0x5b410a90
  42192f:	clc    
  421930:	and    ch,BYTE PTR [eax+0x8]
  421933:	jle    0x42192d
  421935:	xor    ch,BYTE PTR [edi]
  421937:	mov    ch,0x6d
  421939:	(bad)  
  42193a:	aas    
  42193b:	pop    ebp
  42193c:	mov    ebp,0x308d776f
  421941:	inc    ecx
  421942:	scas   eax,DWORD PTR es:[edi]
  421943:	jl     0x421932
  421945:	mov    DWORD PTR [esi],esp
  421947:	clc    
  421948:	and    eax,0x8b9c0711
  42194d:	mov    gs,WORD PTR [esi-0x5c]
  421950:	repz push ebp
  421952:	dec    ebx
  421953:	(bad)  
  421954:	mov    ecx,?
  421956:	into   
  421957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421958:	ss dec eax
  42195a:	aaa    
  42195b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42195c:	retf   0x2fc7
  42195f:	sub    BYTE PTR ss:[ecx+0x5d4ffd6a],ch
  421966:	int3   
  421967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421968:	(bad)  [edx-0x5b1f5395]
  42196e:	or     eax,0x6ead75c8
  421973:	sub    BYTE PTR [ebx-0x497eb0fc],cl
  421979:	fadd   DWORD PTR [ebx]
  42197b:	mov    edx,0x164e0067
  421980:	sub    bh,BYTE PTR [ebx-0x7291e9da]
  421986:	mov    edx,DWORD PTR [edi+0x6c]
  421989:	dec    edi
  42198a:	mov    al,0xae
  42198c:	outs   dx,BYTE PTR ds:[esi]
  42198d:	mov    al,ds:0xaf8e4f2f
  421992:	push   edi
  421994:	mov    edi,0x169beef6
  421999:	test   eax,0x8d71f442
  42199e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4219a0:	jmp    0x42194f
  4219a2:	ss pop edi
  4219a4:	mov    edx,esi
  4219a6:	mov    edi,0xebcb806a
  4219ab:	loop   0x421a0f
  4219ad:	mov    bh,0xb3
  4219af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219b0:	retf   
  4219b1:	rcr    BYTE PTR [edi-0x2f],0x1
  4219b5:	cmp    ecx,edx
  4219b7:	aad    0xc6
  4219b9:	inc    edi
  4219ba:	shl    DWORD PTR [edx],cl
  4219bc:	imul   esp,edx,0x9cce25ae
  4219c2:	mov    ds:0x798d35e0,al
  4219c7:	jmp    0x10303c71
  4219cc:	dec    eax
  4219cd:	xchg   esi,eax
  4219ce:	das    
  4219cf:	dec    ebx
  4219d0:	loop   0x421a3d
  4219d2:	xor    ah,BYTE PTR [edx]
  4219d4:	sahf   
  4219d5:	jl     0x421961
  4219d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219d8:	rep outs dx,BYTE PTR ds:[esi]
  4219da:	jmp    0xc7bf:0x24f5d993
  4219e1:	popa   
  4219e2:	pop    edi
  4219e3:	xor    esi,DWORD PTR es:[esi-0x2c]
  4219e7:	mov    ds:0xb408dda1,al
  4219ec:	mov    ebp,0x84a6273c
  4219f1:	out    0xb9,eax
  4219f3:	add    esp,edi
  4219f5:	xlat   BYTE PTR ds:[ebx]
  4219f6:	cmp    eax,0x2ed8ffc9
  4219fb:	jb     0x4219e7
  4219fd:	push   edx
  4219fe:	jbe    0x421a68
  421a00:	push   edx
  421a01:	lea    esi,[edi]
  421a03:	into   
  421a04:	cmp    ah,dl
  421a06:	test   BYTE PTR [ebx],0x25
  421a09:	cs das 
  421a0b:	push   ds
  421a0c:	(bad)  
  421a0d:	bound  esp,QWORD PTR [esp+eiz*2-0x594ddb58]
  421a14:	sbb    al,0x97
  421a16:	mov    ebx,0xe5cbc023
  421a1b:	cmp    al,0x2
  421a1d:	les    ebp,FWORD PTR [edi]
  421a1f:	sub    esi,DWORD PTR ds:0xba8a53fd
  421a25:	jo     0x421a1b
  421a27:	adc    eax,0x55838dd6
  421a2c:	xchg   DWORD PTR [ebp-0x6cc57f05],edx
  421a32:	das    
  421a33:	ret    0x9d62
  421a36:	bound  ebp,QWORD PTR [ebp-0x568e2f85]
  421a3c:	aam    0xb3
  421a3e:	push   esp
  421a3f:	mov    fs,WORD PTR [edi-0x1ba28fa3]
  421a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a46:	das    
  421a47:	dec    ecx
  421a48:	mov    ebx,0x27baaa28
  421a4d:	push   cs
  421a4e:	xchg   edi,eax
  421a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a50:	sbb    bh,cl
  421a52:	fdivr  QWORD PTR ds:0x67b51b1b
  421a58:	(bad)  
  421a59:	shl    BYTE PTR [ecx+0x42],1
  421a5c:	int    0x2a
  421a5e:	dec    edi
  421a5f:	stc    
  421a60:	adc    ecx,DWORD PTR ds:0x9d87a605
  421a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a67:	adc    eax,0x39aa6be6
  421a6c:	mov    dl,bh
  421a6e:	mov    esp,0x49503d33
  421a73:	xchg   esi,eax
  421a74:	stos   DWORD PTR es:[edi],eax
  421a75:	mov    ebx,esi
  421a77:	div    eax
  421a79:	imul   edi,DWORD PTR [esi+eiz*1+0x59],0x8af04588
  421a81:	cmp    BYTE PTR [ebx+0x37037918],bh
  421a87:	sbb    DWORD PTR [edi+0x58736b8d],esp
  421a8d:	ja     0x421a1a
  421a8f:	push   ebx
  421a90:	mov    bl,0x93
  421a92:	das    
  421a93:	adc    eax,0xfab0e2b6
  421a98:	imul   ebx,edx,0x76
  421a9b:	or     BYTE PTR [edx],0x8a
  421a9e:	addr16 mov eax,ds:0x42b4
  421aa2:	out    dx,eax
  421aa3:	mov    eax,ds:0xb21063be
  421aa8:	inc    BYTE PTR ds:0x3df44e2f
  421aae:	js     0x421abf
  421ab0:	out    dx,eax
  421ab1:	mov    ?,WORD PTR [eax-0x5a441c4d]
  421ab7:	sbb    DWORD PTR es:[ecx],0x487cfb60
  421abe:	das    
  421abf:	jl     0x421af6
  421ac1:	(bad)  
  421ac2:	retf   0xc120
  421ac5:	jg     0x421abd
  421ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac8:	lods   al,BYTE PTR ds:[esi]
  421ac9:	or     ebp,eax
  421acb:	dec    edi
  421acc:	add    bh,ch
  421ace:	pop    ecx
  421acf:	imul   esp,DWORD PTR [edx+ebp*1+0xe0306ea],0xffffffbf
  421ad7:	and    ebp,ebp
  421ad9:	lods   eax,DWORD PTR ds:[esi]
  421ada:	aas    
  421adb:	(bad)  
  421adc:	rol    DWORD PTR [ebx+0x7bd7a5fb],1
  421ae2:	fbstp  TBYTE PTR [esi+0x5a]
  421ae5:	sbb    DWORD PTR [edx],0x38008ae8
  421aeb:	jno    0x421b64
  421aed:	pop    ss
  421aee:	(bad)  
  421aef:	enter  0x8d59,0x59
  421af3:	inc    edi
  421af4:	mov    edi,ds
  421af6:	jbe    0x421adf
  421af8:	fwait
  421af9:	adc    eax,0xe7292b38
  421afe:	mov    bl,0x26
  421b00:	mov    ch,BYTE PTR [ecx]
  421b02:	cmc    
  421b03:	push   esi
  421b04:	lds    eax,FWORD PTR [eax+0xb77a650]
  421b0a:	jg     0x421ae3
  421b0c:	ret    0xd393
  421b0f:	lods   al,BYTE PTR ds:[esi]
  421b10:	mov    dl,bh
  421b12:	mov    ah,0xa4
  421b14:	(bad)  
  421b15:	fidivr WORD PTR [esi+0x308da9fa]
  421b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b1c:	lock sbb BYTE PTR [eax],ah
  421b1f:	out    dx,al
  421b20:	addr16 xor eax,0xa3ccb42f
  421b26:	xchg   DWORD PTR es:[esi],edx
  421b29:	mov    ebp,0x60bca694
  421b2e:	addr16 dec ecx
  421b30:	ret    
  421b31:	jbe    0x421b8d
  421b33:	mov    cl,BYTE PTR [edx+0x291411de]
  421b39:	or     al,0xd9
  421b3b:	sbb    eax,0x9088db7
  421b40:	and    eax,0xb22d45cf
  421b45:	jae    0x421b77
  421b47:	adc    ch,BYTE PTR [ebp+ecx*2-0x2d6b10e6]
  421b4e:	push   esi
  421b4f:	pop    es
  421b50:	adc    al,0x8d
  421b52:	(bad)  
  421b53:	(bad)  
  421b54:	cdq    
  421b55:	(bad)  
  421b56:	xchg   ebx,eax
  421b57:	lahf   
  421b58:	add    BYTE PTR [edi+ebp*1+0x6b4ba844],bl
  421b5f:	xchg   ecx,eax
  421b60:	aas    
  421b61:	dec    ebp
  421b62:	inc    edi
  421b63:	mov    bl,0xa6
  421b65:	pusha  
  421b66:	dec    ebx
  421b67:	and    BYTE PTR [esi],ch
  421b69:	fld    DWORD PTR [edx]
  421b6b:	out    0x3,al
  421b6d:	scas   eax,DWORD PTR es:[edi]
  421b6e:	sbb    ah,cl
  421b70:	mov    DWORD PTR [ebx+0x30],edi
  421b73:	sahf   
  421b74:	scas   eax,DWORD PTR es:[edi]
  421b75:	(bad)  
  421b78:	pop    ebx
  421b79:	outs   dx,BYTE PTR ds:[esi]
  421b7a:	jae    0x421b54
  421b7c:	inc    edx
  421b7d:	lea    edi,[edx-0x47ee59ae]
  421b83:	jmp    0x49e1:0xe12ede89
  421b8a:	cmp    ah,dl
  421b8c:	aad    0xac
  421b8e:	sbb    BYTE PTR [esi-0x13ff8ff],ah
  421b94:	cmp    ah,BYTE PTR [edx+0x7]
  421b97:	ret    0x938b
  421b9a:	mov    al,0x52
  421b9c:	into   
  421b9d:	nop
  421b9e:	into   
  421b9f:	mov    dl,0x86
  421ba1:	jne    0x421bd5
  421ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ba4:	mov    ds:0x3f413052,al
  421ba9:	mov    ah,BYTE PTR [ebp+0x24]
  421bac:	xchg   ebp,eax
  421bad:	out    dx,eax
  421bae:	out    dx,al
  421baf:	pop    ebx
  421bb0:	fldcw  WORD PTR [ebp+0x5f]
  421bb3:	push   cs
  421bb4:	xor    BYTE PTR [edi-0x72],bh
  421bb7:	mov    eax,ds:0xb5ebbbe5
  421bbc:	jmp    0x594f:0xea4f157c
  421bc3:	dec    esi
  421bc4:	mov    dl,BYTE PTR [eax+0x62acffb4]
  421bca:	dec    edi
  421bcb:	outs   dx,DWORD PTR ds:[esi]
  421bcc:	retf   
  421bcd:	lea    edi,[esi]
  421bcf:	mov    dl,BYTE PTR [esi-0x36]
  421bd2:	mov    esi,0x2db8f644
  421bd7:	mov    cl,0xaf
  421bd9:	push   ebp
  421bda:	add    cl,BYTE PTR [edx]
  421bdc:	xchg   BYTE PTR [ebp+0x30facf6c],cl
  421be2:	xchg   BYTE PTR ds:0x702b2461,bl
  421be8:	sub    dh,BYTE PTR [edi-0x3]
  421beb:	hlt    
  421bec:	dec    edx
  421bed:	sbb    al,BYTE PTR [ecx]
  421bef:	ja     0x421b9c
  421bf1:	lea    ecx,[edi]
  421bf3:	pop    ecx
  421bf4:	xchg   esi,eax
  421bf5:	cmp    eax,0x3722d569
  421bfa:	das    
  421bfb:	aam    0x2e
  421bfd:	bound  ebx,QWORD PTR [ebp+0x2315cb0d]
  421c03:	mov    esi,0x79d28c2d
  421c08:	or     esi,DWORD PTR [eax+eax*8-0x2d42234e]
  421c0f:	arpl   WORD PTR [esi+0x73],si
  421c12:	cmp    BYTE PTR [edi-0x5b411fc3],cl
  421c18:	xchg   DWORD PTR [ecx-0x70],eax
  421c1b:	(bad)  
  421c1c:	mov    esp,0x43a5e248
  421c21:	dec    ebx
  421c22:	mov    BYTE PTR [edi-0x70072e01],bl
  421c28:	mov    cl,BYTE PTR [edi+0x7c7241ae]
  421c2e:	or     esi,edx
  421c30:	jno    0x421bbf
  421c32:	jmp    0x3bbb946d
  421c37:	adc    al,0x99
  421c39:	or     eax,0x469a842f
  421c3e:	rcr    DWORD PTR ds:0xc414b8f2,cl
  421c44:	cmc    
  421c45:	shl    BYTE PTR [esp+ebp*2+0xa],0x3c
  421c4a:	outs   dx,BYTE PTR ds:[esi]
  421c4b:	fld    DWORD PTR [ebp-0x729bd365]
  421c51:	pop    eax
  421c52:	inc    edx
  421c53:	jg     0x421c7d
  421c55:	inc    eax
  421c56:	xchg   edx,eax
  421c57:	dec    edi
  421c58:	imul   ebp,esp,0x7a
  421c5b:	adc    al,0xba
  421c5d:	dec    ebx
  421c5e:	lea    edx,ds:[edx]
  421c61:	inc    ecx
  421c62:	scas   eax,DWORD PTR es:[edi]
  421c63:	pop    ss
  421c64:	sbb    DWORD PTR [ecx-0x6d],0x73
  421c68:	mov    ss,WORD PTR [ecx+0x1ed4c32f]
  421c6e:	lea    edx,ds:0xa0855628
  421c74:	in     al,dx
  421c75:	dec    esp
  421c76:	mov    ch,BYTE PTR [eax]
  421c78:	stos   BYTE PTR es:[edi],al
  421c79:	jle    0x421ca6
  421c7b:	test   eax,0x2e387215
  421c80:	(bad)  
  421c81:	or     eax,0xec732622
  421c86:	dec    edx
  421c87:	xchg   BYTE PTR [ebx-0x4d],bl
  421c8a:	or     BYTE PTR [ecx+0x4b159316],cl
  421c90:	leave  
  421c91:	iret   
  421c92:	mov    ebp,0x98c85a7d
  421c97:	daa    
  421c98:	mov    ah,al
  421c9a:	sbb    dh,ch
  421c9c:	dec    edx
  421c9d:	add    edx,DWORD PTR [ecx+0x34a0fb18]
  421ca3:	pop    ecx
  421ca4:	adc    eax,0x29666ea2
  421ca9:	mov    bl,0x94
  421cab:	scas   al,BYTE PTR es:[edi]
  421cac:	jmp    0xd79a46eb
  421cb1:	lds    eax,FWORD PTR [ebx]
  421cb3:	es pop edi
  421cb5:	mov    al,ds:0xf9dcefde
  421cba:	mov    DWORD PTR [ecx-0x48d4bc0a],ebp
  421cc0:	jb     0x421c8a
  421cc2:	xchg   esi,esp
  421cc4:	(bad)  
  421cc5:	or     DWORD PTR ds:[ebp+0xf2f0e76],esi
  421ccc:	xchg   ecx,edx
  421cce:	dec    edx
  421ccf:	(bad)  
  421cd0:	stc    
  421cd1:	smsw   WORD PTR [esi-0xcf304f6]
  421cd8:	mul    DWORD PTR [edx+0x788d56e4]
  421cde:	inc    ebx
  421cdf:	xchg   esi,eax
  421ce0:	outs   dx,BYTE PTR ds:[esi]
  421ce1:	nop
  421ce2:	ret    0x5925
  421ce5:	test   al,0x47
  421ce7:	add    eax,0x36385a04
  421cec:	mov    al,ds:0x9550ab13
  421cf1:	les    edx,FWORD PTR [edi-0x1a40d0ba]
  421cf7:	ror    BYTE PTR [ebp+ecx*4-0x45],1
  421cfb:	scas   al,BYTE PTR es:[edi]
  421cfc:	cs mov esi,0x988f870e
  421d02:	addr16 mov cl,0x84
  421d05:	arpl   bx,si
  421d07:	int3   
  421d08:	fimul  WORD PTR [ebp-0x265f8c06]
  421d0e:	dec    esp
  421d0f:	add    al,0x12
  421d11:	lea    edx,[ecx+ecx*4-0x1a5989fd]
  421d18:	pop    ss
  421d19:	cdq    
  421d1a:	das    
  421d1b:	(bad)  
  421d1c:	cmp    eax,0x5598cb9e
  421d21:	mov    ebp,esp
  421d23:	sub    esp,0x64
  421d26:	push   0x19
  421d28:	call   0x424dc9
  421d2d:	add    esp,0x4
  421d30:	push   ebx
  421d31:	push   0xaac4ce00
  421d36:	push   0xb83b7300
  421d3b:	call   0x4258b5
  421d40:	add    esp,0x8
  421d43:	push   esi
  421d44:	push   0x78262300
  421d49:	push   0xd6e5f500
  421d4e:	call   0x42502a
  421d53:	add    esp,0x8
  421d56:	push   0x5843d600
  421d5b:	push   0xffffffed
  421d5d:	push   0xea06f900
  421d62:	call   0x4255d6
  421d67:	add    esp,0xc
  421d6a:	push   edi
  421d6b:	call   0x425172
  421d70:	push   0x27
  421d72:	push   0x9aaa6500
  421d77:	push   0x19
  421d79:	push   0x5f
  421d7b:	call   0x4253cd
  421d80:	add    esp,0x10
  421d83:	push   0x380e9900
  421d88:	push   0xf299e500
  421d8d:	push   0xea626b00
  421d92:	push   0xffffff87
  421d94:	call   0x4248b2
  421d99:	add    esp,0x10
  421d9c:	push   0x50
  421d9e:	push   0x7eb40400
  421da3:	call   0x42502a
  421da8:	add    esp,0x8
  421dab:	call   0x4254dd
  421db0:	push   0xffffffeb
  421db2:	call   0x424b5c
  421db7:	add    esp,0x4
  421dba:	add    eax,eax
  421dbc:	push   0xffffff94
  421dbe:	push   0xe2e99400
  421dc3:	call   0x4248b2
  421dc8:	add    esp,0x8
  421dcb:	push   0xf6b96000
  421dd0:	call   0x42574b
  421dd5:	add    esp,0x4
  421dd8:	push   0xbaece200
  421ddd:	push   0xffffff92
  421ddf:	call   0x42574b
  421de4:	add    esp,0x8
  421de7:	push   0x6
  421de9:	call   0x4248b2
  421dee:	add    esp,0x4
  421df1:	push   0xe6bfd000
  421df6:	push   0xc824a800
  421dfb:	push   0xaf58700
  421e00:	push   0xffffffb1
  421e02:	call   0x424b5c
  421e07:	add    esp,0x10
  421e0a:	push   0xffffffcc
  421e0c:	push   0xc8272200
  421e11:	call   0x425172
  421e16:	add    esp,0x8
  421e19:	cmp    eax,0x7d62
  421e1e:	jne    0x421e2a
  421e20:	push   0x27
  421e22:	call   0x424a3d
  421e27:	add    esp,0x4
  421e2a:	call   0x42502a
  421e2f:	push   0xa2ec3e00
  421e34:	call   0x4255d6
  421e39:	add    esp,0x4
  421e3c:	push   0x2ee81500
  421e41:	push   0xffffffff
  421e43:	push   0x74
  421e45:	push   0xea94f000
  421e4a:	call   0x42502a
  421e4f:	add    esp,0x10
  421e52:	cmp    eax,DWORD PTR [ebp-0x28]
  421e55:	je     0x421e5c
  421e57:	add    eax,eax
  421e59:	mov    DWORD PTR [ebp-0x4c],eax
  421e5c:	push   0xffffffdc
  421e5e:	push   0x8ede8900
  421e63:	push   0xffffffa0
  421e65:	push   0x3844cf00
  421e6a:	call   0x42574b
  421e6f:	add    esp,0x10
  421e72:	call   0x42502a
  421e77:	push   0x55
  421e79:	push   0x4a4fc300
  421e7e:	push   0xffffffec
  421e80:	call   0x424dc9
  421e85:	add    esp,0xc
  421e88:	cmp    eax,0x10
  421e8b:	je     0x421ea2
  421e8d:	mov    ecx,DWORD PTR ds:0x43706c
  421e93:	push   0x4e
  421e95:	push   0x9853a600
  421e9a:	call   0x425172
  421e9f:	add    esp,0x8
  421ea2:	push   0xde8eac00
  421ea7:	call   0x424ef0
  421eac:	add    esp,0x4
  421eaf:	test   eax,0xfa
  421eb4:	je     0x421eca
  421eb6:	push   0xffffffe3
  421eb8:	push   0xea75b000
  421ebd:	push   0x6da6100
  421ec2:	call   0x4253cd
  421ec7:	add    esp,0xc
  421eca:	push   0x5ef3dd00
  421ecf:	push   0xea1cdc00
  421ed4:	push   0xffffff95
  421ed6:	push   0xffffffe4
  421ed8:	call   0x42574b
  421edd:	add    esp,0x10
  421ee0:	mov    esi,eax
  421ee2:	push   0x18
  421ee4:	push   0x4a6d9700
  421ee9:	push   0xde9c8200
  421eee:	push   0x2ee44c00
  421ef3:	push   0xffffffa3
  421ef5:	call   0x4255d6
  421efa:	add    esp,0x14
  421efd:	push   0xbeb63600
  421f02:	push   0x127c8600
  421f07:	push   0xceaa9700
  421f0c:	push   0xfaa09900
  421f11:	push   0x8877ec00
  421f16:	call   0x4255d6
  421f1b:	add    esp,0x14
  421f1e:	push   0xffffff91
  421f20:	push   0x8af12600
  421f25:	push   0x76
  421f27:	push   0xea2c6600
  421f2c:	call   0x4248b2
  421f31:	add    esp,0x10
  421f34:	push   0x78353f00
  421f39:	push   0x98390500
  421f3e:	push   0x6aa53800
  421f43:	push   0xffffffd1
  421f45:	push   0xbea1f800
  421f4a:	call   0x42574b
  421f4f:	add    esp,0x14
  421f52:	cmp    esi,DWORD PTR [ebp-0x28]
  421f55:	je     0x421f78
  421f57:	mov    eax,0xfe
  421f5c:	add    esi,esi
  421f5e:	mov    ebx,eax
  421f60:	and    ebx,esi
  421f62:	push   0x5f
  421f64:	push   0xffffffc9
  421f66:	push   0x4a2e3600
  421f6b:	call   0x424dc9
  421f70:	add    esp,0xc
  421f73:	or     ebx,eax
  421f75:	mov    DWORD PTR [ebp-0x2c],ebx
  421f78:	mov    edi,0x958d
  421f7d:	mov    ecx,0x82
  421f82:	push   0xffffffbf
  421f84:	push   0xffffffcd
  421f86:	call   0x424ef0
  421f8b:	add    esp,0x8
  421f8e:	sub    edi,eax
  421f90:	cmp    edi,DWORD PTR [ebp-0x4]
  421f93:	jne    0x421ffb
  421f95:	push   0x2a96f00
  421f9a:	call   0x424dc9
  421f9f:	add    esp,0x4
  421fa2:	xor    ebx,ebx
  421fa4:	push   0xaed43400
  421fa9:	push   0xfffffff3
  421fab:	push   0x4a190400
  421fb0:	call   0x42574b
  421fb5:	add    esp,0xc
  421fb8:	mov    edx,0xe6a
  421fbd:	cmp    eax,DWORD PTR [ebp-0x58]
  421fc0:	je     0x421ffb
  421fc2:	push   0xffffffee
  421fc4:	push   0xab72900
  421fc9:	push   0x6a589c00
  421fce:	call   0x425172
  421fd3:	add    esp,0xc
  421fd6:	push   0x6a4fe200
  421fdb:	push   0x7eb40400
  421fe0:	push   0xffffff9d
  421fe2:	push   0xffffffac
  421fe4:	call   0x4254dd
  421fe9:	add    esp,0x10
  421fec:	sub    edi,ebx
  421fee:	push   0xffffffd2
  421ff0:	call   0x4248b2
  421ff5:	add    esp,0x4
  421ff8:	mov    DWORD PTR [ebp-0x24],edi
  421ffb:	call   0x424dc9
  422000:	push   0x8ec3e900
  422005:	push   0xffffffda
  422007:	push   0xd85de600
  42200c:	call   0x42502a
  422011:	add    esp,0xc
  422014:	mov    DWORD PTR [ebp-0xc],edi
  422017:	sub    DWORD PTR [ebp-0xc],ebx
  42201a:	mov    ebx,DWORD PTR [ebp-0xc]
  42201d:	mov    eax,DWORD PTR [ebp-0xc]
  422020:	call   0x425172
  422025:	push   0xffffffc2
  422027:	push   0xb6ec0200
  42202c:	push   0x16b4fb00
  422031:	push   0xc8238e00
  422036:	push   0x4a51b600
  42203b:	call   0x424b5c
  422040:	add    esp,0x14
  422043:	add    ebx,esi
  422045:	call   0x42574b
  42204a:	or     ebx,esi
  42204c:	push   0xffffffd3
  42204e:	push   0x682b3100
  422053:	push   0xa8680f00
  422058:	call   0x42574b
  42205d:	add    esp,0xc
  422060:	cmp    ebx,DWORD PTR ds:0x43706c
  422066:	jne    0x42227e
  42206c:	push   0xffffffd4
  42206e:	push   0x73
  422070:	push   0xba8dfb00
  422075:	call   0x4248b2
  42207a:	add    esp,0xc
  42207d:	mov    eax,edi
  42207f:	push   0xffffffcd
  422081:	push   0x28621600
  422086:	push   0x2a
  422088:	push   0xffffffc3
  42208a:	push   0x12156f00
  42208f:	call   0x424b5c
  422094:	add    esp,0x14
  422097:	mov    ecx,DWORD PTR [ebp-0xc]
  42209a:	push   0x829b5900
  42209f:	push   0x78713d00
  4220a4:	push   0xd2201600
  4220a9:	push   0xd831e900
  4220ae:	call   0x4255d6
  4220b3:	add    esp,0x10
  4220b6:	push   0x65
  4220b8:	push   0x3817b700
  4220bd:	call   0x424b5c
  4220c2:	add    esp,0x8
  4220c5:	push   0xffffff86
  4220c7:	push   0xffffff8a
  4220c9:	call   0x4248b2
  4220ce:	add    esp,0x8
  4220d1:	push   0x49
  4220d3:	call   0x42502a
  4220d8:	add    esp,0x4
  4220db:	push   0x524e4900
  4220e0:	push   0x18256800
  4220e5:	push   0xffffffdd
  4220e7:	push   0x6a2fc500
  4220ec:	call   0x4248b2
  4220f1:	add    esp,0x10
  4220f4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4220f7:	je     0x42227e
  4220fd:	cmp    ebx,DWORD PTR [ebp-0x2c]
  422100:	je     0x42227e
  422106:	add    ebx,edi
  422108:	sub    ebx,edi
  42210a:	push   0x10
  42210c:	push   0x6a613400
  422111:	push   0xffffffcb
  422113:	push   0xea79ff00
  422118:	push   0x7e
  42211a:	call   0x425172
  42211f:	add    esp,0x14
  422122:	push   0xea04dc00
  422127:	push   0xfffffff4
  422129:	push   0x5877f700
  42212e:	call   0x424a3d
  422133:	add    esp,0xc
  422136:	push   0x4e
  422138:	push   0x0
  42213a:	push   0xc2926f00
  42213f:	push   0x92693b00
  422144:	push   0x66a06600
  422149:	call   0x4254dd
  42214e:	add    esp,0x14
  422151:	cmp    ebx,DWORD PTR ds:0x437070
  422157:	je     0x42227e
  42215d:	push   0x769e1f00
  422162:	push   0x71
  422164:	push   0xffffff83
  422166:	call   0x424dc9
  42216b:	add    esp,0xc
  42216e:	cmp    ebx,DWORD PTR ds:0x437070
  422174:	jne    0x42227e
  42217a:	push   0x8837ac00
  42217f:	push   0x5e
  422181:	push   0xbe9d3000
  422186:	call   0x4255d6
  42218b:	add    esp,0xc
  42218e:	push   0xeeeee700
  422193:	push   0xffffffb3
  422195:	push   0x5b
  422197:	push   0x3a
  422199:	call   0x4254dd
  42219e:	add    esp,0x10
  4221a1:	call   0x42574b
  4221a6:	mov    esi,DWORD PTR ds:0x437064
  4221ac:	push   0xfecc8900
  4221b1:	push   0x6a2aeb00
  4221b6:	call   0x425172
  4221bb:	add    esp,0x8
  4221be:	push   0x62803700
  4221c3:	push   0x8afc6f00
  4221c8:	call   0x4258b5
  4221cd:	add    esp,0x8
  4221d0:	mov    eax,DWORD PTR [ebp-0xc]
  4221d3:	push   0xffffffee
  4221d5:	push   0x32ab9f00
  4221da:	call   0x4248b2
  4221df:	add    esp,0x8
  4221e2:	cmp    edi,0x2e
  4221e5:	jne    0x42227e
  4221eb:	push   0xffffffbd
  4221ed:	push   0xc2c40700
  4221f2:	push   0xe
  4221f4:	call   0x42574b
  4221f9:	add    esp,0xc
  4221fc:	push   0x74
  4221fe:	push   0x13
  422200:	push   0x36e16000
  422205:	call   0x425172
  42220a:	add    esp,0xc
  42220d:	mov    ecx,0xab
  422212:	and    ecx,ebx
  422214:	add    DWORD PTR [ebp-0xc],ecx
  422217:	mov    edi,DWORD PTR [ebp-0xc]
  42221a:	push   0xffffffc2
  42221c:	push   0xea0fb100
  422221:	push   0xffffffa7
  422223:	push   0x187d9100
  422228:	call   0x42502a
  42222d:	add    esp,0x10
  422230:	push   0x782fc700
  422235:	push   0xfffffffd
  422237:	push   0x2a9a9b00
  42223c:	push   0x4a34f300
  422241:	call   0x42574b
  422246:	add    esp,0x10
  422249:	add    edi,eax
  42224b:	add    DWORD PTR [ebp-0xc],eax
  42224e:	cmp    ebx,0xffffffe0
  422251:	jne    0x42227e
  422253:	mov    eax,DWORD PTR [ebp-0xc]
  422256:	xor    ecx,ecx
  422258:	call   0x424b5c
  42225d:	push   0xdede4800
  422262:	push   0xffffffef
  422264:	push   0x1e
  422266:	push   0x88341600
  42226b:	call   0x4248b2
  422270:	add    esp,0x10
  422273:	sub    DWORD PTR [ebp-0xc],edi
  422276:	call   0x4253cd
  42227b:	sub    DWORD PTR [ebp-0xc],esi
  42227e:	push   0x53
  422280:	push   0x52563600
  422285:	call   0x42574b
  42228a:	add    esp,0x8
  42228d:	push   0xffffffac
  42228f:	push   0x52
  422291:	push   0x4a6e7800
  422296:	push   0x13
  422298:	call   0x4258b5
  42229d:	add    esp,0x10
  4222a0:	push   0x437070
  4222a5:	call   DWORD PTR ds:0x434a88
  4222ab:	add    ebx,ebx
  4222ad:	add    DWORD PTR [ebp-0xc],ebx
  4222b0:	mov    DWORD PTR [ebp-0x1c],eax
  4222b3:	push   0x16d52500
  4222b8:	push   0x56de0d00
  4222bd:	call   0x425172
  4222c2:	add    esp,0x8
  4222c5:	call   DWORD PTR ds:0x434a24
  4222cb:	mov    ebx,DWORD PTR [ebp-0xc]
  4222ce:	and    ebx,edi
  4222d0:	mov    edx,ebx
  4222d2:	cmp    edx,DWORD PTR [ebp-0x34]
  4222d5:	jne    0x4222ea
  4222d7:	add    edx,edx
  4222d9:	sub    edx,ebx
  4222db:	mov    esi,edx
  4222dd:	cmp    esi,DWORD PTR ds:0x437064
  4222e3:	je     0x4222ea
  4222e5:	and    esi,edx
  4222e7:	sub    DWORD PTR [ebp-0xc],esi
  4222ea:	mov    DWORD PTR [ebp-0x8],eax
  4222ed:	mov    esi,DWORD PTR [ebp-0xc]
  4222f0:	test   esi,0x2ae7
  4222f6:	jne    0x42236d
  4222f8:	push   0xffffffed
  4222fa:	push   0x16e9af00
  4222ff:	push   0x56
  422301:	push   0x3a
  422303:	push   0xffffffd6
  422305:	call   0x42574b
  42230a:	add    esp,0x14
  42230d:	push   0x36f74d00
  422312:	push   0xffffff82
  422314:	push   0x386f1f00
  422319:	push   0x53
  42231b:	call   0x424687
  422320:	add    esp,0x10
  422323:	push   0xffffffdb
  422325:	push   0x6
  422327:	call   0x424687
  42232c:	add    esp,0x8
  42232f:	cmp    esi,0xfffffff0
  422332:	je     0x42236d
  422334:	push   0xcaa11e00
  422339:	push   0x29
  42233b:	push   0x8233300
  422340:	push   0xffffffb2
  422342:	call   0x4258b5
  422347:	add    esp,0x10
  42234a:	add    esi,edi
  42234c:	mov    ebx,0xdf
  422351:	call   0x424a3d
  422356:	push   0xffffffdc
  422358:	push   0x86e02a00
  42235d:	push   0xfffffffb
  42235f:	call   0x42502a
  422364:	add    esp,0xc
  422367:	sub    DWORD PTR [ebp-0xc],ebx
  42236a:	xor    DWORD PTR [ebp-0xc],esi
  42236d:	call   0x4248b2
  422372:	push   0x70
  422374:	push   0x0
  422376:	call   DWORD PTR ds:0x434a90
  42237c:	mov    edx,0x12225001
  422381:	xor    ecx,ecx
  422383:	sub    ecx,esi
  422385:	test   ecx,0x2c
  42238b:	je     0x4223af
  42238d:	mov    ebx,DWORD PTR [ebp-0xc]
  422390:	mov    edx,0xd
  422395:	sub    ebx,edi
  422397:	mov    DWORD PTR [ebp-0x18],ecx
  42239a:	sub    DWORD PTR [ebp-0x18],ebx
  42239d:	add    edx,ecx
  42239f:	add    edx,eax
  4223a1:	add    edx,edx
  4223a3:	sub    edx,eax
  4223a5:	add    edx,ecx
  4223a7:	add    DWORD PTR [ebp-0x18],ebx
  4223aa:	or     edx,eax
  4223ac:	sub    DWORD PTR [ebp-0x18],edx
  4223af:	test   eax,0x2152
  4223b4:	jne    0x4225d9
  4223ba:	push   0x2af9e100
  4223bf:	push   0x86bc5900
  4223c4:	push   0xfffffff2
  4223c6:	push   0xfffffffa
  4223c8:	call   0x42574b
  4223cd:	add    esp,0x10
  4223d0:	mov    eax,DWORD PTR ds:0x437070
  4223d6:	mov    DWORD PTR [ebp-0x50],ebx
  4223d9:	cmp    edi,DWORD PTR ds:0x437060
  4223df:	je     0x42248b
  4223e5:	cmp    edi,0x1c
  4223e8:	je     0x42248b
  4223ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4223f1:	cmp    ecx,DWORD PTR ds:0x43706c
  4223f7:	jne    0x42248b
  4223fd:	test   ecx,0x6c
  422403:	jne    0x42248b
  422409:	mov    ebx,DWORD PTR [ebp-0x50]
  42240c:	add    ebx,esi
  42240e:	cmp    ecx,0xffffff9f
  422411:	je     0x42248b
  422413:	mov    edi,0xa1
  422418:	mov    edx,ecx
  42241a:	cmp    ebx,0xffffffe2
  42241d:	je     0x42248b
  42241f:	mov    ecx,DWORD PTR ds:0x437088
  422425:	add    DWORD PTR [ebp-0x50],edx
  422428:	xor    DWORD PTR [ebp-0xc],edx
  42242b:	mov    esi,DWORD PTR [ebp-0x50]
  42242e:	or     DWORD PTR [ebp-0x50],edi
  422431:	add    ecx,ebx
  422433:	sub    DWORD PTR [ebp-0x50],esi
  422436:	cmp    ecx,0xffffff89
  422439:	je     0x42248b
  42243b:	or     DWORD PTR [ebp-0xc],ebx
  42243e:	mov    esi,DWORD PTR [ebp-0xc]
  422441:	cmp    ecx,DWORD PTR [ebp-0x4c]
  422444:	jne    0x42248b
  422446:	xor    edi,edi
  422448:	mov    edx,0xe8
  42244d:	add    DWORD PTR [ebp-0x50],esi
  422450:	cmp    ecx,esi
  422452:	jne    0x42248b
  422454:	sub    DWORD PTR [ebp-0xc],eax
  422457:	and    DWORD PTR [ebp-0xc],ecx
  42245a:	xor    ebx,ebx
  42245c:	xor    esi,esi
  42245e:	cmp    ecx,ebx
  422460:	jne    0x42248b
  422462:	add    esi,edi
  422464:	sub    esi,ebx
  422466:	xor    edi,edi
  422468:	xor    DWORD PTR [ebp-0x50],esi
  42246b:	mov    ebx,0xaea9
  422470:	and    ebx,eax
  422472:	sub    DWORD PTR [ebp-0x50],ebx
  422475:	add    edi,esi
  422477:	and    edi,edx
  422479:	sub    DWORD PTR [ebp-0x50],ebx
  42247c:	add    ebx,ecx
  42247e:	add    ebx,edx
  422480:	add    ebx,eax
  422482:	add    DWORD PTR [ebp-0x50],ebx
  422485:	or     DWORD PTR [ebp-0xc],ecx
  422488:	sub    DWORD PTR [ebp-0xc],edi
  42248b:	mov    edx,DWORD PTR ds:0x437060
  422491:	mov    ebx,DWORD PTR [ebp-0x50]
  422494:	and    DWORD PTR [ebp-0xc],edx
  422497:	sub    ebx,ecx
  422499:	mov    esi,eax
  42249b:	sub    esi,edi
  42249d:	xor    DWORD PTR [ebp-0xc],esi
  4224a0:	mov    DWORD PTR [ebp-0x50],ebx
  4224a3:	sub    DWORD PTR [ebp-0xc],ebx
  4224a6:	sub    edx,eax
  4224a8:	mov    edi,DWORD PTR [ebp-0x50]
  4224ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4224ae:	add    ecx,edx
  4224b0:	add    ecx,esi
  4224b2:	add    DWORD PTR [ebp-0x50],eax
  4224b5:	sub    DWORD PTR [ebp-0x50],ecx
  4224b8:	and    edi,esi
  4224ba:	and    DWORD PTR [ebp-0x50],edi
  4224bd:	and    DWORD PTR [ebp-0x50],ecx
  4224c0:	sub    edx,eax
  4224c2:	and    esi,ebx
  4224c4:	or     esi,eax
  4224c6:	xor    ebx,ebx
  4224c8:	or     esi,ecx
  4224ca:	sub    ebx,ecx
  4224cc:	add    esi,ecx
  4224ce:	add    esi,esi
  4224d0:	cmp    ebx,ecx
  4224d2:	jne    0x4225ae
  4224d8:	mov    eax,DWORD PTR [ebp-0x50]
  4224db:	add    DWORD PTR [ebp-0x50],edx
  4224de:	cmp    ebx,DWORD PTR ds:0x437070
  4224e4:	jne    0x4225ae
  4224ea:	mov    edi,DWORD PTR [ebp-0x50]
  4224ed:	sub    ebx,ecx
  4224ef:	mov    ecx,edx
  4224f1:	add    DWORD PTR [ebp-0x50],esi
  4224f4:	sub    DWORD PTR [ebp-0xc],ebx
  4224f7:	add    ecx,edx
  4224f9:	mov    DWORD PTR [ebp-0xc],ecx
  4224fc:	sub    DWORD PTR [ebp-0x50],ebx
  4224ff:	sub    DWORD PTR [ebp-0xc],eax
  422502:	cmp    esi,DWORD PTR [ebp-0x38]
  422505:	jne    0x4225ae
  42250b:	mov    eax,DWORD PTR [ebp-0xc]
  42250e:	add    eax,esi
  422510:	add    eax,ebx
  422512:	cmp    eax,DWORD PTR [ebp-0x64]
  422515:	jne    0x4225ae
  42251b:	cmp    edi,0x59
  42251e:	jne    0x4225ae
  422524:	cmp    eax,DWORD PTR [ebp-0x60]
  422527:	je     0x4225ae
  42252d:	mov    ebx,DWORD PTR [ebp-0x50]
  422530:	mov    ecx,edx
  422532:	or     DWORD PTR [ebp-0xc],ebx
  422535:	or     eax,ecx
  422537:	cmp    ebx,0xd25b
  42253d:	jne    0x4225ae
  42253f:	mov    ecx,eax
  422541:	test   ecx,0x7d
  422547:	je     0x4225ae
  422549:	mov    ebx,esi
  42254b:	cmp    ecx,DWORD PTR ds:0x437070
  422551:	je     0x4225ae
  422553:	mov    esi,DWORD PTR [ebp-0xc]
  422556:	mov    eax,edx
  422558:	cmp    ebx,0x3437
  42255e:	jne    0x4225ae
  422560:	add    DWORD PTR [ebp-0xc],eax
  422563:	add    esi,edx
  422565:	and    DWORD PTR [ebp-0x50],ebx
  422568:	add    DWORD PTR [ebp-0xc],edx
  42256b:	mov    eax,0x46
  422570:	mov    ebx,DWORD PTR [ebp-0xc]
  422573:	sub    DWORD PTR [ebp-0x50],ecx
  422576:	add    esi,edx
  422578:	and    eax,edi
  42257a:	mov    DWORD PTR [ebp-0xc],eax
  42257d:	or     DWORD PTR [ebp-0xc],ebx
  422580:	cmp    esi,DWORD PTR [ebp-0x4c]
  422583:	jne    0x4225ae
  422585:	add    esi,edx
  422587:	cmp    esi,ebx
  422589:	je     0x4225ae
  42258b:	sub    esi,edi
  42258d:	xor    edi,edi
  42258f:	add    DWORD PTR [ebp-0xc],esi
  422592:	mov    ebx,edx
  422594:	add    DWORD PTR [ebp-0xc],ebx
  422597:	or     edi,ecx
  422599:	cmp    edi,DWORD PTR ds:0x437064
  42259f:	je     0x4225ae
  4225a1:	test   edi,0x30
  4225a7:	je     0x4225ae
  4225a9:	add    edi,eax
  4225ab:	sub    DWORD PTR [ebp-0xc],edi
  4225ae:	sub    DWORD PTR [ebp-0xc],esi
  4225b1:	mov    DWORD PTR [ebp-0x14],edx
  4225b4:	push   0x4ec8da00
  4225b9:	push   0xffffff8b
  4225bb:	push   0xffffffdf
  4225bd:	call   0x424ef0
  4225c2:	add    esp,0xc
  4225c5:	push   0x76dac100
  4225ca:	push   0x20
  4225cc:	push   0x2e921d00
  4225d1:	call   0x4255d6
  4225d6:	add    esp,0xc
  4225d9:	mov    DWORD PTR [ebp-0xc],esi
  4225dc:	call   0x4255d6
  4225e1:	push   0x125f3800
  4225e6:	push   0x28387b00
  4225eb:	call   0x4248b2
  4225f0:	add    esp,0x8
  4225f3:	push   0x927a7900
  4225f8:	push   0x3ad0e300
  4225fd:	push   0xea150600
  422602:	push   0x5a
  422604:	push   0xa854f300
  422609:	call   0x424b5c
  42260e:	add    esp,0x14
  422611:	call   DWORD PTR ds:0x434a74
  422617:	mov    ebx,DWORD PTR [ebp-0xc]
  42261a:	mov    ecx,DWORD PTR [ebp-0x50]
  42261d:	or     DWORD PTR [ebp-0xc],ebx
  422620:	sub    ecx,ebx
  422622:	cmp    ecx,0x9403
  422628:	jne    0x42262d
  42262a:	sub    DWORD PTR [ebp-0x50],ecx
  42262d:	mov    DWORD PTR [ebp-0x64],eax
  422630:	push   0xfeda1300
  422635:	call   0x424687
  42263a:	add    esp,0x4
  42263d:	push   0x429c1300
  422642:	push   0x10
  422644:	push   0xef44800
  422649:	push   0xffffff9b
  42264b:	push   0x68
  42264d:	call   0x424ef0
  422652:	add    esp,0x14
  422655:	call   0x4253cd
  42265a:	cmp    eax,edi
  42265c:	jne    0x422670
  42265e:	push   0x4a0eef00
  422663:	push   0x7ed61800
  422668:	call   0x42502a
  42266d:	add    esp,0x8
  422670:	mov    edi,DWORD PTR [ebp-0x50]
  422673:	push   0x1f
  422675:	push   0x3d
  422677:	push   0xeec52100
  42267c:	call   0x424687
  422681:	add    esp,0xc
  422684:	push   0x78154000
  422689:	push   0xaec77300
  42268e:	call   0x4254dd
  422693:	add    esp,0x8
  422696:	call   0x4254dd
  42269b:	call   0x424687
  4226a0:	push   0xfef52800
  4226a5:	push   0x42f5f400
  4226aa:	push   0xc8489300
  4226af:	push   0xffffffa0
  4226b1:	push   0x839de00
  4226b6:	call   0x4254dd
  4226bb:	add    esp,0x14
  4226be:	mov    ebx,DWORD PTR [ebp-0x50]
  4226c1:	push   0xffffff9d
  4226c3:	push   0x51
  4226c5:	push   0xffffffab
  4226c7:	call   0x42574b
  4226cc:	add    esp,0xc
  4226cf:	call   0x424ef0
  4226d4:	call   0x42574b
  4226d9:	sub    DWORD PTR [ebp-0xc],edi
  4226dc:	cmp    eax,0x68c7
  4226e1:	jne    0x4227ff
  4226e7:	push   0xeab9bd00
  4226ec:	call   0x424687
  4226f1:	add    esp,0x4
  4226f4:	push   0x2a
  4226f6:	push   0x926f4d00
  4226fb:	push   0x2f
  4226fd:	push   0x2a941700
  422702:	push   0x4852bc00
  422707:	call   0x424ef0
  42270c:	add    esp,0x14
  42270f:	push   0x6a7b2d00
  422714:	call   0x4255d6
  422719:	add    esp,0x4
  42271c:	push   0x92bcb200
  422721:	push   0x58241c00
  422726:	call   0x424b5c
  42272b:	add    esp,0x8
  42272e:	sub    ebx,esi
  422730:	sub    ebx,eax
  422732:	mov    esi,ebx
  422734:	push   0xe87aed00
  422739:	push   0x8ee1c300
  42273e:	push   0xfffffff3
  422740:	push   0x6a516900
  422745:	push   0x6afee00
  42274a:	call   0x42502a
  42274f:	add    esp,0x14
  422752:	push   0xffffffb3
  422754:	push   0x5212a200
  422759:	push   0x9ebd9900
  42275e:	push   0xffffffb1
  422760:	call   0x4254dd
  422765:	add    esp,0x10
  422768:	cmp    esi,DWORD PTR ds:0x437070
  42276e:	jne    0x4227ff
  422774:	mov    ebx,DWORD PTR [ebp-0xc]
  422777:	push   0xf812a500
  42277c:	push   0xfaecc200
  422781:	push   0xffffffba
  422783:	push   0xffffffa4
  422785:	push   0x4a1c5f00
  42278a:	call   0x424dc9
  42278f:	add    esp,0x14
  422792:	cmp    esi,0xffffff99
  422795:	jne    0x4227ff
  422797:	push   0x4a290c00
  42279c:	push   0x4a63f700
  4227a1:	push   0x39
  4227a3:	push   0x63
  4227a5:	push   0xfffffffb
  4227a7:	call   0x425172
  4227ac:	add    esp,0x14
  4227af:	mov    ecx,DWORD PTR ds:0x437070
  4227b5:	push   0x9
  4227b7:	push   0xfffffff4
  4227b9:	push   0xd21ac400
  4227be:	push   0x42f63300
  4227c3:	call   0x4248b2
  4227c8:	add    esp,0x10
  4227cb:	push   0xffffffcd
  4227cd:	push   0xffffff94
  4227cf:	push   0xfffffff4
  4227d1:	push   0x923f1a00
  4227d6:	call   0x424dc9
  4227db:	add    esp,0x10
  4227de:	push   0xc2832400
  4227e3:	push   0x4a3bab00
  4227e8:	push   0xf2a30600
  4227ed:	push   0xf857bd00
  4227f2:	call   0x4258b5
  4227f7:	add    esp,0x10
  4227fa:	or     esi,ebx
  4227fc:	sub    DWORD PTR [ebp-0xc],esi
  4227ff:	and    eax,ebx
  422801:	add    DWORD PTR [ebp-0x50],eax
  422804:	push   0xffffffd1
  422806:	push   0xffffffeb
  422808:	push   0x9a8d6400
  42280d:	push   0x1c
  42280f:	push   0x1c
  422811:	call   0x4255d6
  422816:	add    esp,0x14
  422819:	xor    eax,eax
  42281b:	cmp    esi,0xffffffdf
  42281e:	je     0x422839
  422820:	push   0xc82e1c00
  422825:	push   0xffffffbb
  422827:	push   0x3ecaa800
  42282c:	push   0x5ab57000
  422831:	call   0x424a3d
  422836:	add    esp,0x10
  422839:	push   0x981ead00
  42283e:	push   0xc6fcf500
  422843:	push   0xe8739200
  422848:	push   0x15
  42284a:	push   0xbea12e00
  42284f:	call   0x424b5c
  422854:	add    esp,0x14
  422857:	mov    ebx,DWORD PTR [ebp-0xc]
  42285a:	push   0x8ae6c400
  42285f:	call   0x424a3d
  422864:	add    esp,0x4
  422867:	mov    esi,edi
  422869:	push   0x487ad800
  42286e:	push   0x41
  422870:	push   0x75
  422872:	push   0x4
  422874:	push   0x383e9700
  422879:	call   0x4253cd
  42287e:	add    esp,0x14
  422881:	sub    esi,edi
  422883:	cmp    esi,0x9386
  422889:	jne    0x42293d
  42288f:	push   0x1ecbdf00
  422894:	push   0xffffffa1
  422896:	push   0x886e5900
  42289b:	push   0x22a9d900
  4228a0:	push   0x3e
  4228a2:	call   0x4254dd
  4228a7:	add    esp,0x14
  4228aa:	sub    DWORD PTR [ebp-0x50],ebx
  4228ad:	cmp    esi,DWORD PTR ds:0x437070
  4228b3:	jne    0x42293d
  4228b9:	mov    edx,DWORD PTR [ebp-0x50]
  4228bc:	test   edx,0xd3
  4228c2:	jne    0x42293d
  4228c4:	add    esi,edi
  4228c6:	push   0x40
  4228c8:	push   0x18265500
  4228cd:	push   0x3d
  4228cf:	push   0x5ed96000
  4228d4:	call   0x424dc9
  4228d9:	add    esp,0x10
  4228dc:	push   0x23
  4228de:	call   0x424dc9
  4228e3:	add    esp,0x4
  4228e6:	push   0xc874c200
  4228eb:	push   0x68090000
  4228f0:	call   0x424687
  4228f5:	add    esp,0x8
  4228f8:	cmp    ebx,0x34
  4228fb:	jne    0x42293d
  4228fd:	mov    eax,edi
  4228ff:	xor    DWORD PTR [ebp-0xc],eax
  422902:	push   0xf2c8c700
  422907:	push   0x482a2a00
  42290c:	push   0xaec3d600
  422911:	push   0x4eac6300
  422916:	call   0x424dc9
  42291b:	add    esp,0x10
  42291e:	mov    edx,0x46
  422923:	sub    edx,esi
  422925:	push   0x16
  422927:	push   0x62d2d500
  42292c:	push   0xffffff87
  42292e:	push   0x33
  422930:	push   0xd2f20e00
  422935:	call   0x424ef0
  42293a:	add    esp,0x14
  42293d:	cmp    esi,0x22
  422940:	jne    0x42294c
  422942:	push   0x76
  422944:	call   0x42574b
  422949:	add    esp,0x4
  42294c:	cmp    eax,0xe24c
  422951:	jne    0x4229a2
  422953:	mov    ebx,DWORD PTR ds:0x437060
  422959:	push   0x628c3900
  42295e:	push   0x6e9a3a00
  422963:	call   0x4255d6
  422968:	add    esp,0x8
  42296b:	call   0x42502a
  422970:	push   0xf2ee0c00
  422975:	push   0x51
  422977:	push   0x18209f00
  42297c:	push   0x9a8dbd00
  422981:	call   0x4254dd
  422986:	add    esp,0x10
  422989:	add    DWORD PTR [ebp-0xc],eax
  42298c:	push   0x56
  42298e:	push   0xffffffac
  422990:	push   0x12
  422992:	push   0x46b99300
  422997:	call   0x425172
  42299c:	add    esp,0x10
  42299f:	or     DWORD PTR [ebp-0x50],ebx
  4229a2:	call   0x424ef0
  4229a7:	or     DWORD PTR [ebp-0xc],esi
  4229aa:	call   0x424dc9
  4229af:	sub    DWORD PTR [ebp-0xc],esi
  4229b2:	call   0x424b5c
  4229b7:	push   0xfffffffb
  4229b9:	push   0x5b
  4229bb:	push   0xaa9c3400
  4229c0:	call   0x42574b
  4229c5:	add    esp,0xc
  4229c8:	sub    ebx,esi
  4229ca:	push   0x7e
  4229cc:	push   0xdacf4600
  4229d1:	push   0xfffffff9
  4229d3:	push   0xc2992400
  4229d8:	call   0x424a3d
  4229dd:	add    esp,0x10
  4229e0:	call   0x424dc9
  4229e5:	mov    eax,DWORD PTR [ebp-0x50]
  4229e8:	and    ebx,eax
  4229ea:	call   0x4254dd
  4229ef:	or     ebx,edi
  4229f1:	mov    esi,DWORD PTR [ebp-0x50]
  4229f4:	push   0xa
  4229f6:	push   0x2f81300
  4229fb:	call   0x424687
  422a00:	add    esp,0x8
  422a03:	and    esi,ebx
  422a05:	push   0x48594200
  422a0a:	call   0x424687
  422a0f:	add    esp,0x4
  422a12:	push   0x92168300
  422a17:	push   0xdece4500
  422a1c:	call   0x424ef0
  422a21:	add    esp,0x8
  422a24:	and    esi,ebx
  422a26:	push   0x2ed21500
  422a2b:	push   0xffffffc8
  422a2d:	push   0x4b
  422a2f:	push   0x78
  422a31:	push   0x2
  422a33:	call   0x425172
  422a38:	add    esp,0x14
  422a3b:	cmp    esi,0x75
  422a3e:	je     0x422ae3
  422a44:	call   0x4254dd
  422a49:	push   0x21
  422a4b:	push   0x20
  422a4d:	call   0x42574b
  422a52:	add    esp,0x8
  422a55:	cmp    esi,0xf8ec
  422a5b:	je     0x422ae3
  422a61:	mov    edx,DWORD PTR [ebp-0xc]
  422a64:	push   0xc6fca900
  422a69:	push   0x1a
  422a6b:	push   0xffffffb4
  422a6d:	call   0x4255d6
  422a72:	add    esp,0xc
  422a75:	cmp    esi,0xb
  422a78:	jne    0x422ae3
  422a7a:	push   0x4685ac00
  422a7f:	push   0x12143900
  422a84:	push   0x56cc2500
  422a89:	push   0xffffffad
  422a8b:	call   0x424687
  422a90:	add    esp,0x10
  422a93:	mov    ecx,DWORD PTR [ebp-0x50]
  422a96:	mov    ebx,0xf0
  422a9b:	push   0xffffffba
  422a9d:	push   0xfffffff5
  422a9f:	call   0x424687
  422aa4:	add    esp,0x8
  422aa7:	or     DWORD PTR [ebp-0xc],ebx
  422aaa:	push   0xffffff8c
  422aac:	push   0x481db900
  422ab1:	push   0x3d
  422ab3:	call   0x4255d6
  422ab8:	add    esp,0xc
  422abb:	add    esi,esi
  422abd:	push   0xffffffea
  422abf:	call   0x424a3d
  422ac4:	add    esp,0x4
  422ac7:	sub    esi,edi
  422ac9:	push   0xd22a4300
  422ace:	push   0xd257a800
  422ad3:	push   0x92053f00
  422ad8:	call   0x4248b2
  422add:	add    esp,0xc
  422ae0:	and    DWORD PTR [ebp-0xc],esi
  422ae3:	cmp    esi,edi
  422ae5:	je     0x422b00
  422ae7:	sub    esi,ebx
  422ae9:	push   0xe2d8d100
  422aee:	push   0x6a318c00
  422af3:	push   0xffffff81
  422af5:	call   0x4253cd
  422afa:	add    esp,0xc
  422afd:	add    DWORD PTR [ebp-0xc],esi
  422b00:	push   0x92ee5200
  422b05:	call   0x424ef0
  422b0a:	add    esp,0x4
  422b0d:	sub    DWORD PTR [ebp-0x50],ebx
  422b10:	and    DWORD PTR [ebp-0x50],esi
  422b13:	add    DWORD PTR [ebp-0xc],eax
  422b16:	push   0x22a35800
  422b1b:	call   0x424dc9
  422b20:	add    esp,0x4
  422b23:	mov    ecx,DWORD PTR [ebp-0x50]
  422b26:	push   0x2f
  422b28:	push   0xa6ab0800
  422b2d:	push   0x483f6e00
  422b32:	call   0x42502a
  422b37:	add    esp,0xc
  422b3a:	push   0x582d4e00
  422b3f:	call   0x4248b2
  422b44:	add    esp,0x4
  422b47:	push   0xffffffda
  422b49:	push   0xffffff82
  422b4b:	push   0xea68e800
  422b50:	push   0x2ab3b800
  422b55:	push   0x13
  422b57:	call   0x4253cd
  422b5c:	add    esp,0x14
  422b5f:	sub    ebx,edi
  422b61:	sub    ebx,eax
  422b63:	mov    ecx,DWORD PTR [ebp-0x50]
  422b66:	push   0xffffffa6
  422b68:	push   0x5d
  422b6a:	push   0x1ae84d00
  422b6f:	push   0xffffffdb
  422b71:	call   0x42574b
  422b76:	add    esp,0x10
  422b79:	mov    ecx,0x86
  422b7e:	push   0xfffffff8
  422b80:	push   0x485d9700
  422b85:	call   0x42574b
  422b8a:	add    esp,0x8
  422b8d:	push   0x68
  422b8f:	push   0xffffffaa
  422b91:	call   0x4253cd
  422b96:	add    esp,0x8
  422b99:	push   0xffffffe1
  422b9b:	push   0x7
  422b9d:	push   0xfffffffa
  422b9f:	push   0x4abb4b00
  422ba4:	push   0x2f
  422ba6:	call   0x4255d6
  422bab:	add    esp,0x14
  422bae:	push   0xdeb0f400
  422bb3:	push   0x4a40d800
  422bb8:	push   0xffffffd3
  422bba:	push   0x1
  422bbc:	push   0x4f
  422bbe:	call   0x4254dd
  422bc3:	add    esp,0x14
  422bc6:	add    DWORD PTR [ebp-0xc],ebx
  422bc9:	push   0xae9ea200
  422bce:	push   0xffffffbf
  422bd0:	push   0x62b8bd00
  422bd5:	push   0xf865f600
  422bda:	call   0x42574b
  422bdf:	add    esp,0x10
  422be2:	lea    edx,[ebp-0x54]
  422be5:	cmp    esi,DWORD PTR [ebp-0x58]
  422be8:	jne    0x422c2c
  422bea:	mov    ebx,DWORD PTR [ebp-0x50]
  422bed:	mov    ecx,DWORD PTR [ebp-0xc]
  422bf0:	sub    ecx,eax
  422bf2:	cmp    ebx,esi
  422bf4:	je     0x422c2c
  422bf6:	mov    DWORD PTR [ebp-0x5c],ecx
  422bf9:	and    DWORD PTR [ebp-0x50],eax
  422bfc:	mov    eax,0xbf
  422c01:	mov    edi,DWORD PTR [ebp-0x50]
  422c04:	cmp    ebx,esi
  422c06:	je     0x422c2c
  422c08:	and    eax,esi
  422c0a:	cmp    ebx,edx
  422c0c:	je     0x422c2c
  422c0e:	mov    ecx,DWORD PTR [ebp-0x50]
  422c11:	sub    ecx,eax
  422c13:	add    DWORD PTR [ebp-0x50],ecx
  422c16:	sub    DWORD PTR [ebp-0x5c],edx
  422c19:	cmp    edi,0xdfea
  422c1f:	je     0x422c2c
  422c21:	sub    DWORD PTR [ebp-0x5c],ebx
  422c24:	cmp    edi,0x26
  422c27:	jne    0x422c2c
  422c29:	add    DWORD PTR [ebp-0x50],edi
  422c2c:	add    edi,ecx
  422c2e:	cmp    edi,0xffffffa9
  422c31:	jne    0x422c3b
  422c33:	cmp    edi,DWORD PTR [ebp-0x28]
  422c36:	jne    0x422c3b
  422c38:	and    DWORD PTR [ebp-0x50],edi
  422c3b:	push   edx
  422c3c:	mov    ebx,DWORD PTR [ebp-0xc]
  422c3f:	cmp    ebx,0x61
  422c42:	jne    0x422c6c
  422c44:	cmp    ebx,esi
  422c46:	je     0x422c6c
  422c48:	mov    eax,0xcd
  422c4d:	push   0x52254d00
  422c52:	call   0x425172
  422c57:	add    esp,0x4
  422c5a:	push   0xffffffb3
  422c5c:	push   0xdee78600
  422c61:	call   0x42574b
  422c66:	add    esp,0x8
  422c69:	or     DWORD PTR [ebp-0xc],ebx
  422c6c:	push   0x884acefe
  422c71:	push   0xffffffb6
  422c73:	call   0x424687
  422c78:	add    esp,0x4
  422c7b:	push   0x96370e00
  422c80:	push   0x26
  422c82:	push   0x9a03bb00
  422c87:	call   0x424a3d
  422c8c:	add    esp,0xc
  422c8f:	call   0x4233b9
  422c94:	or     ebx,edi
  422c96:	mov    edi,DWORD PTR [ebp-0xc]
  422c99:	push   0xea6bab00
  422c9e:	push   0x1c
  422ca0:	push   0xffffff95
  422ca2:	call   0x424687
  422ca7:	add    esp,0xc
  422caa:	sub    DWORD PTR [ebp-0x50],ebx
  422cad:	push   0xce1e7d00
  422cb2:	push   0xfffffffe
  422cb4:	push   0xe26d0100
  422cb9:	push   0xa27d0400
  422cbe:	push   0xffffffe3
  422cc0:	call   0x42574b
  422cc5:	add    esp,0x14
  422cc8:	push   0xc884bc00
  422ccd:	call   0x4253cd
  422cd2:	add    esp,0x4
  422cd5:	sub    DWORD PTR [ebp-0xc],esi
  422cd8:	push   0xffffffef
  422cda:	push   0x92a29600
  422cdf:	push   0x68b11c00
  422ce4:	call   0x4253cd
  422ce9:	add    esp,0xc
  422cec:	and    DWORD PTR [ebp-0xc],edi
  422cef:	push   0x6e
  422cf1:	push   0xffffff84
  422cf3:	push   0x12880c00
  422cf8:	push   0xd2864900
  422cfd:	call   0x42574b
  422d02:	add    esp,0x10
  422d05:	mov    edi,DWORD PTR [ebp-0x54]
  422d08:	push   0x6e076200
  422d0d:	push   0x68e69f00
  422d12:	push   0x8a5efb00
  422d17:	push   0x4b
  422d19:	push   0xd2bd5600
  422d1e:	call   0x4253cd
  422d23:	add    esp,0x14
  422d26:	push   0xffffffff
  422d28:	push   0xb899bf00
  422d2d:	push   0x6a0aa100
  422d32:	push   0x51
  422d34:	push   0xffffffa0
  422d36:	call   0x4258b5
  422d3b:	add    esp,0x14
  422d3e:	shr    edi,0x10
  422d41:	and    ebx,esi
  422d43:	push   0xfffffff2
  422d45:	push   0x4aea1b00
  422d4a:	call   0x425172
  422d4f:	add    esp,0x8
  422d52:	mov    ecx,DWORD PTR [ebp-0x50]
  422d55:	mov    esi,0xdc69
  422d5a:	push   0xffffffb4
  422d5c:	push   0x761be100
  422d61:	call   0x42574b
  422d66:	add    esp,0x8
  422d69:	push   0xffffff9c
  422d6b:	push   0x18d55b00
  422d70:	push   0x3260be00
  422d75:	push   0xffffffd4
  422d77:	call   0x424a3d
  422d7c:	add    esp,0x10
  422d7f:	and    esi,ebx
  422d81:	push   0x1a7f2100
  422d86:	call   0x42574b
  422d8b:	add    esp,0x4
  422d8e:	push   0xffffffa1
  422d90:	push   0x4d
  422d92:	push   0xc8ccd400
  422d97:	push   0xca7c5e00
  422d9c:	push   0xffffffda
  422d9e:	call   0x42502a
  422da3:	add    esp,0x14
  422da6:	push   0x79
  422da8:	push   0x46497e00
  422dad:	push   0x42676800
  422db2:	push   0xffffffeb
  422db4:	call   0x4255d6
  422db9:	add    esp,0x10
  422dbc:	push   0x6d
  422dbe:	push   0x4adc9400
  422dc3:	push   0x28fb1b00
  422dc8:	push   0x77
  422dca:	push   0xffffff97
  422dcc:	call   0x4258b5
  422dd1:	add    esp,0x14
  422dd4:	call   0x424b5c
  422dd9:	push   0xffffff91
  422ddb:	push   0xffffffa7
  422ddd:	call   0x42574b
  422de2:	add    esp,0x8
  422de5:	cmp    esi,DWORD PTR [ebp-0x4]
  422de8:	jne    0x422df9
  422dea:	mov    edx,esi
  422dec:	mov    eax,0xa3
  422df1:	xor    DWORD PTR [ebp-0x50],edi
  422df4:	call   0x424ef0
  422df9:	push   0x467b2700
  422dfe:	push   0xc2410c00
  422e03:	push   0x1e
  422e05:	push   0x29
  422e07:	push   0x86019f00
  422e0c:	call   0x4253cd
  422e11:	add    esp,0x14
  422e14:	cmp    edi,0x3227
  422e1a:	jne    0x42325d
  422e20:	push   0x9e7e0f00
  422e25:	push   0x55
  422e27:	push   0x52dfe400
  422e2c:	push   0xffffff9e
  422e2e:	push   0xe
  422e30:	call   0x42502a
  422e35:	add    esp,0x14
  422e38:	mov    edi,0x3269f519
  422e3d:	call   0x424a3d
  422e42:	push   0xffffff9d
  422e44:	call   0x4253cd
  422e49:	add    esp,0x4
  422e4c:	sub    edi,DWORD PTR [ebp-0x54]
  422e4f:	cmp    edi,0xffffffb6
  422e52:	jne    0x422e6d
  422e54:	push   0x6abb3a00
  422e59:	push   0xeadf4000
  422e5e:	push   0xe21c1000
  422e63:	push   0xffffffde
  422e65:	call   0x4253cd
  422e6a:	add    esp,0x10
  422e6d:	push   0x3f
  422e6f:	push   0xffffffa6
  422e71:	push   0xfffffff9
  422e73:	push   0x2e253c00
  422e78:	push   0x52d39300
  422e7d:	call   0x42574b
  422e82:	add    esp,0x14
  422e85:	call   edi
  422e87:	sub    DWORD PTR [ebp-0xc],esi
  422e8a:	mov    DWORD PTR [ebp-0x40],eax
  422e8d:	xor    eax,eax
  422e8f:	push   0x4aa3cd00
  422e94:	call   0x4248b2
  422e99:	add    esp,0x4
  422e9c:	mov    edi,0x423b3c
  422ea1:	mov    esi,0xbd
  422ea6:	push   0x43
  422ea8:	push   0xffffffe5
  422eaa:	push   0x58
  422eac:	push   0xffffffe0
  422eae:	push   0xffffffbd
  422eb0:	call   0x42502a
  422eb5:	add    esp,0x14
  422eb8:	mov    eax,DWORD PTR ds:0x437060
  422ebe:	sub    DWORD PTR [ebp-0xc],esi
  422ec1:	push   0xffffffef
  422ec3:	push   0xffffff94
  422ec5:	push   0x60d2b00
  422eca:	push   0xb26e3300
  422ecf:	call   0x425172
  422ed4:	add    esp,0x10
  422ed7:	push   0x7e67e400
  422edc:	push   0xaa7e9300
  422ee1:	call   0x4253cd
  422ee6:	add    esp,0x8
  422ee9:	push   DWORD PTR [ebp-0x54]
  422eec:	push   0x32292298
  422ef1:	push   DWORD PTR [ebp-0x40]
  422ef4:	call   edi
  422ef6:	mov    ebx,DWORD PTR [ebp-0x50]
  422ef9:	mov    eax,DWORD PTR ds:0x437040
  422eff:	add    edi,edi
  422f01:	push   0x1e5e5e00
  422f06:	call   0x4258b5
  422f0b:	add    esp,0x4
  422f0e:	sub    DWORD PTR [ebp-0xc],ebx
  422f11:	or     DWORD PTR [ebp-0xc],edi
  422f14:	add    DWORD PTR [ebp-0x40],0x10
  422f1b:	and    eax,esi
  422f1d:	mov    ecx,0xd4
  422f22:	add    ecx,esi
  422f24:	and    eax,edi
  422f26:	add    eax,eax
  422f28:	mov    edi,DWORD PTR [ebp-0xc]
  422f2b:	add    DWORD PTR [ebp-0x50],ecx
  422f2e:	push   0x58cf6100
  422f33:	push   0x92c59d00
  422f38:	push   0xe27d5c00
  422f3d:	call   0x4253cd
  422f42:	add    esp,0xc
  422f45:	and    edi,eax
  422f47:	push   0x63
  422f49:	push   0xffffffe2
  422f4b:	call   0x424dc9
  422f50:	add    esp,0x8
  422f53:	add    edi,ebx
  422f55:	push   0xfffffff2
  422f57:	call   0x424a3d
  422f5c:	add    esp,0x4
  422f5f:	push   0xf8efed00
  422f64:	call   0x4253cd
  422f69:	add    esp,0x4
  422f6c:	xor    DWORD PTR [ebp-0xc],edi
  422f6f:	push   0xd2f64c00
  422f74:	push   0x52
  422f76:	push   0xe2b4000
  422f7b:	push   0xffffffba
  422f7d:	call   0x424dc9
  422f82:	add    esp,0x10
  422f85:	mov    eax,DWORD PTR [ebp-0x40]
  422f88:	cmp    eax,0xffffffcb
  422f8b:	je     0x423081
  422f91:	mov    ecx,0x5
  422f96:	cmp    eax,0x32
  422f99:	jne    0x423081
  422f9f:	mov    esi,DWORD PTR [ebp-0xc]
  422fa2:	cmp    esi,DWORD PTR ds:0x437070
  422fa8:	je     0x423081
  422fae:	add    esi,edi
  422fb0:	cmp    eax,DWORD PTR ds:0x437070
  422fb6:	je     0x423081
  422fbc:	mov    edi,0x4c
  422fc1:	add    DWORD PTR [ebp-0x50],ebx
  422fc4:	add    edi,ecx
  422fc6:	or     edi,eax
  422fc8:	mov    ecx,ebx
  422fca:	cmp    ecx,DWORD PTR ds:0x437064
  422fd0:	je     0x423081
  422fd6:	mov    edx,edi
  422fd8:	mov    ebx,DWORD PTR [ebp-0xc]
  422fdb:	and    ebx,ecx
  422fdd:	sub    DWORD PTR [ebp-0xc],ebx
  422fe0:	test   ebx,0x6b
  422fe6:	jne    0x423081
  422fec:	add    edx,ecx
  422fee:	mov    ecx,DWORD PTR [ebp-0x50]
  422ff1:	and    edx,ecx
  422ff3:	sub    esi,eax
  422ff5:	mov    ebx,DWORD PTR [ebp-0x50]
  422ff8:	add    DWORD PTR [ebp-0x50],ebx
  422ffb:	cmp    ecx,DWORD PTR ds:0x43706c
  423001:	jne    0x423081
  423003:	or     edx,ebx
  423005:	and    DWORD PTR [ebp-0x50],edi
  423008:	or     DWORD PTR [ebp-0xc],edx
  42300b:	add    DWORD PTR [ebp-0x50],ecx
  42300e:	and    esi,edi
  423010:	cmp    edx,0xfffffff3
  423013:	je     0x423081
  423015:	sub    esi,edx
  423017:	cmp    edi,DWORD PTR ds:0x437088
  42301d:	je     0x423081
  42301f:	xor    edx,edx
  423021:	and    edx,ecx
  423023:	mov    ebx,DWORD PTR [ebp-0x50]
  423026:	cmp    edx,0xffffffda
  423029:	jne    0x423081
  42302b:	cmp    esi,DWORD PTR ds:0x43706c
  423031:	je     0x423081
  423033:	mov    edi,DWORD PTR [ebp-0xc]
  423036:	mov    ecx,0xa1
  42303b:	add    ecx,ebx
  42303d:	or     esi,ebx
  42303f:	add    ecx,ebx
  423041:	test   esi,0xb3
  423047:	jne    0x423081
  423049:	cmp    edx,0x52
  42304c:	jne    0x423081
  42304e:	mov    ebx,DWORD PTR ds:0x43706c
  423054:	add    edx,edx
  423056:	sub    ecx,esi
  423058:	cmp    edi,0xffffffab
  42305b:	jne    0x423081
  42305d:	mov    esi,0xa3e0
  423062:	add    ebx,edi
  423064:	sub    DWORD PTR [ebp-0x50],edx
  423067:	test   ecx,0x94
  42306d:	jne    0x423081
  42306f:	sub    esi,edx
  423071:	mov    edi,DWORD PTR [ebp-0x50]
  423074:	mov    edx,ebx
  423076:	add    DWORD PTR [ebp-0xc],edx
  423079:	add    edi,ecx
  42307b:	and    DWORD PTR [ebp-0x50],edi
  42307e:	and    DWORD PTR [ebp-0xc],esi
  423081:	call   eax
  423083:	mov    ecx,eax
  423085:	sub    DWORD PTR [ebp-0x50],ecx
  423088:	push   0x62
  42308a:	push   0x6e
  42308c:	push   0x77
  42308e:	push   0x17
  423090:	call   0x425172
  423095:	add    esp,0x10
  423098:	push   0x3602ad00
  42309d:	call   0x424dc9
  4230a2:	add    esp,0x4
  4230a5:	push   0xa247b900
  4230aa:	push   0x1e
  4230ac:	push   0xd2160300
  4230b1:	push   0xc
  4230b3:	push   0x4af7e600
  4230b8:	call   0x4253cd
  4230bd:	add    esp,0x14
  4230c0:	mov    ebx,esi
  4230c2:	push   0xffffffe1
  4230c4:	push   0x5a
  4230c6:	push   0xffffff9f
  4230c8:	push   0x88fa7b00
  4230cd:	push   0xffffffd0
  4230cf:	call   0x424dc9
  4230d4:	add    esp,0x14
  4230d7:	cmp    ebx,0xa814
  4230dd:	je     0x42325d
  4230e3:	call   0x4254dd
  4230e8:	push   0x62113a00
  4230ed:	push   0x161d8000
  4230f2:	push   0x7a53f900
  4230f7:	push   0xffffffc3
  4230f9:	push   0xffffffd3
  4230fb:	call   0x42502a
  423100:	add    esp,0x14
  423103:	push   0xc8812000
  423108:	push   0xfffffff4
  42310a:	push   0x9e25d600
  42310f:	push   0x4b
  423111:	push   0x47
  423113:	call   0x425172
  423118:	add    esp,0x14
  42311b:	mov    edi,eax
  42311d:	cmp    ebx,0xfffffff9
  423120:	jne    0x42325d
  423126:	push   0x4e3fe000
  42312b:	push   0x31
  42312d:	push   0xa8cfe500
  423132:	push   0xc8e0b500
  423137:	call   0x424dc9
  42313c:	add    esp,0x10
  42313f:	cmp    ebx,0x1a
  423142:	jne    0x42325d
  423148:	push   0xffffffe1
  42314a:	push   0xffffffcb
  42314c:	call   0x4255d6
  423151:	add    esp,0x8
  423154:	push   0xba457d00
  423159:	push   0xd2fc1c00
  42315e:	push   0x1a671300
  423163:	push   0xffffffb6
  423165:	push   0xca5ed800
  42316a:	call   0x4253cd
  42316f:	add    esp,0x14
  423172:	cmp    ebx,eax
  423174:	je     0x42325d
  42317a:	push   0x3c
  42317c:	push   0x96205300
  423181:	push   0x389bd000
  423186:	call   0x424dc9
  42318b:	add    esp,0xc
  42318e:	mov    ecx,DWORD PTR ds:0x437088
  423194:	add    DWORD PTR [ebp-0x50],ebx
  423197:	push   0x2
  423199:	push   0x2e7d8100
  42319e:	push   0x5c
  4231a0:	push   0x41
  4231a2:	push   0xae63b300
  4231a7:	call   0x4253cd
  4231ac:	add    esp,0x14
  4231af:	call   0x424b5c
  4231b4:	call   0x42502a
  4231b9:	push   0xea820500
  4231be:	push   0x14
  4231c0:	push   0xffffffc8
  4231c2:	push   0xa20ada00
  4231c7:	call   0x4254dd
  4231cc:	add    esp,0x10
  4231cf:	mov    edx,ebx
  4231d1:	push   0x6a85d700
  4231d6:	push   0xffffffe6
  4231d8:	push   0xc8ce6f00
  4231dd:	push   0xe251e600
  4231e2:	push   0x49
  4231e4:	call   0x42574b
  4231e9:	add    esp,0x14
  4231ec:	push   0x2634a00
  4231f1:	call   0x424dc9
  4231f6:	add    esp,0x4
  4231f9:	sub    edi,eax
  4231fb:	call   0x4253cd
  423200:	push   0x22
  423202:	push   0xffffffb1
  423204:	push   0x3d
  423206:	push   0x71
  423208:	push   0xd2b07a00
  42320d:	call   0x4253cd
  423212:	add    esp,0x14
  423215:	sub    edi,esi
  423217:	push   0xffffffbf
  423219:	push   0xffffffea
  42321b:	call   0x424ef0
  423220:	add    esp,0x8
  423223:	push   0xd8d44f00
  423228:	push   0xd2619f00
  42322d:	call   0x4253cd
  423232:	add    esp,0x8
  423235:	push   0x8b52500
  42323a:	push   0xffffffb5
  42323c:	call   0x42574b
  423241:	add    esp,0x8
  423244:	or     edi,ebx
  423246:	or     edi,esi
  423248:	add    DWORD PTR [ebp-0xc],esi
  42324b:	push   0x76
  42324d:	call   0x4253cd
  423252:	add    esp,0x4
  423255:	call   0x424dc9
  42325a:	mov    DWORD PTR [ebp-0x50],edi
  42325d:	mov    edx,DWORD PTR [ebp-0x50]
  423260:	push   0x866e2500
  423265:	push   0xffffff93
  423267:	push   0x128f4900
  42326c:	call   0x424b5c
  423271:	add    esp,0xc
  423274:	mov    esi,DWORD PTR [ebp-0x50]
  423277:	mov    ebx,DWORD PTR [ebp-0x50]
  42327a:	call   0x42574b
  42327f:	push   0x264eb800
  423284:	push   0x8ed6e00
  423289:	push   0x4af78d00
  42328e:	push   0xffffffce
  423290:	push   0xffffffe3
  423292:	call   0x4258b5
  423297:	add    esp,0x14
  42329a:	push   0xffffff91
  42329c:	call   0x42574b
  4232a1:	add    esp,0x4
  4232a4:	push   0xffffff99
  4232a6:	call   0x424b5c
  4232ab:	add    esp,0x4
  4232ae:	push   0xea9d5200
  4232b3:	push   0xffffffab
  4232b5:	push   0xffffff9c
  4232b7:	push   0xffffff8a
  4232b9:	call   0x424a3d
  4232be:	add    esp,0x10
  4232c1:	push   0x9a1e5100
  4232c6:	push   0x8e185600
  4232cb:	push   0xa8bb6100
  4232d0:	push   0xea71d500
  4232d5:	call   0x42574b
  4232da:	add    esp,0x10
  4232dd:	add    DWORD PTR [ebp-0x50],ebx
  4232e0:	push   0x6e
  4232e2:	push   0xffffffda
  4232e4:	push   0x2a045500
  4232e9:	push   0xffffffac
  4232eb:	call   0x42574b
  4232f0:	add    esp,0x10
  4232f3:	test   esi,0xcf
  4232f9:	je     0x4232fe
  4232fb:	or     DWORD PTR [ebp-0xc],esi
  4232fe:	or     ebx,esi
  423300:	push   0x3a
  423302:	push   0x88e66200
  423307:	push   0x48a6db00
  42330c:	push   0xffffff95
  42330e:	call   0x424ef0
  423313:	add    esp,0x10
  423316:	push   0xffffffe2
  423318:	push   0xc8d3c300
  42331d:	push   0x1d
  42331f:	push   0x567b9100
  423324:	push   0x21
  423326:	call   0x424687
  42332b:	add    esp,0x14
  42332e:	mov    esi,edi
  423330:	mov    edi,DWORD PTR [ebp-0xc]
  423333:	push   0x6
  423335:	push   0x1e65b700
  42333a:	call   0x42502a
  42333f:	add    esp,0x8
  423342:	sub    edi,esi
  423344:	push   0x64
  423346:	push   0xffffffa5
  423348:	push   0x68efb800
  42334d:	call   0x4248b2
  423352:	add    esp,0xc
  423355:	add    edi,ebx
  423357:	call   0x4258b5
  42335c:	and    edi,esi
  42335e:	cmp    eax,DWORD PTR ds:0x437070
  423364:	jne    0x423385
  423366:	xor    edx,edx
  423368:	push   0xd2b90500
  42336d:	push   0x27
  42336f:	call   0x424687
  423374:	add    esp,0x8
  423377:	cmp    edi,0xffffffa2
  42337a:	jne    0x423385
  42337c:	mov    edx,DWORD PTR [ebp-0x50]
  42337f:	mov    DWORD PTR [ebp-0xc],edx
  423382:	add    DWORD PTR [ebp-0x50],edi
  423385:	pop    edi
  423386:	sub    eax,edi
  423388:	sub    DWORD PTR [ebp-0xc],eax
  42338b:	pop    esi
  42338c:	call   0x424ef0
  423391:	pop    ebx
  423392:	call   0x42574b
  423397:	push   0xfa1e2200
  42339c:	push   0xb647e600
  4233a1:	push   0xffffffde
  4233a3:	push   0xffffffb7
  4233a5:	push   0x4ae81d00
  4233aa:	call   0x4258b5
  4233af:	add    esp,0x14
  4233b2:	leave  
  4233b3:	ret    
  4233b4:	int3   
  4233b5:	int3   
  4233b6:	int3   
  4233b7:	int3   
  4233b8:	int3   
  4233b9:	push   ebp
  4233ba:	mov    ebp,esp
  4233bc:	sub    esp,0x34
  4233bf:	mov    eax,0x7e
  4233c4:	push   0xd2114600
  4233c9:	call   0x42502a
  4233ce:	add    esp,0x4
  4233d1:	push   ebx
  4233d2:	push   0x52f42300
  4233d7:	push   0xf659b700
  4233dc:	push   0x17
  4233de:	push   0x6a7f5500
  4233e3:	push   0x4e
  4233e5:	call   0x424687
  4233ea:	add    esp,0x14
  4233ed:	push   esi
  4233ee:	mov    eax,0x23
  4233f3:	xor    ecx,ecx
  4233f5:	push   0x48c6ff00
  4233fa:	push   0x56643e00
  4233ff:	push   0x8a600e00
  423404:	call   0x4248b2
  423409:	add    esp,0xc
  42340c:	push   edi
  42340d:	push   0xffffffa5
  42340f:	push   0x6a
  423411:	push   0x47
  423413:	push   0x221f4f00
  423418:	call   0x4255d6
  42341d:	add    esp,0x10
  423420:	push   0x389c3b00
  423425:	push   0xffffffb3
  423427:	call   0x424a3d
  42342c:	add    esp,0x8
  42342f:	mov    edx,eax
  423431:	call   0x42502a
  423436:	push   0xffffffd5
  423438:	push   0xd8f07500
  42343d:	call   0x424dc9
  423442:	add    esp,0x8
  423445:	mov    DWORD PTR [ebp-0x34],0xe817980f
  42344c:	mov    ecx,0x5c
  423451:	sub    ecx,eax
  423453:	and    ecx,eax
  423455:	xor    edx,edx
  423457:	mov    DWORD PTR [ebp-0x8],ecx
  42345a:	push   0xbe5ad400
  42345f:	call   0x4248b2
  423464:	add    esp,0x4
  423467:	call   0x42502a
  42346c:	call   0x4239ec
  423471:	add    DWORD PTR [ebp-0x8],eax
  423474:	mov    DWORD PTR [ebp-0x28],eax
  423477:	push   0xd8dd9400
  42347c:	push   0x88853e00
  423481:	call   0x424a3d
  423486:	add    esp,0x8
  423489:	push   0x78910000
  42348e:	push   0x5292a000
  423493:	call   0x4253cd
  423498:	add    esp,0x8
  42349b:	call   0x4239ec
  4234a0:	mov    ecx,0xe423
  4234a5:	or     DWORD PTR [ebp-0x8],eax
  4234a8:	sub    DWORD PTR [ebp-0x8],ecx
  4234ab:	mov    DWORD PTR [ebp-0x24],eax
  4234ae:	call   0x4255d6
  4234b3:	push   0x2b
  4234b5:	push   0xc8d8c400
  4234ba:	push   0x4c
  4234bc:	push   0x12db5800
  4234c1:	call   0x424dc9
  4234c6:	add    esp,0x10
  4234c9:	call   0x4239ec
  4234ce:	cmp    eax,0xe6e7
  4234d3:	jne    0x4234db
  4234d5:	mov    edi,DWORD PTR [ebp-0x8]
  4234d8:	sub    DWORD PTR [ebp-0x8],edi
  4234db:	mov    DWORD PTR [ebp-0x30],eax
  4234de:	call   0x424687
  4234e3:	push   0x6ad9f700
  4234e8:	push   0xffffff80
  4234ea:	push   0x78d5bc00
  4234ef:	push   0xfffffff2
  4234f1:	push   0xffffffce
  4234f3:	call   0x4254dd
  4234f8:	add    esp,0x14
  4234fb:	mov    edi,DWORD PTR [ebp-0x24]
  4234fe:	sub    eax,edi
  423500:	or     DWORD PTR [ebp-0x8],eax
  423503:	sub    edi,DWORD PTR [ebp-0x28]
  423506:	push   0xd
  423508:	push   0x9e08f900
  42350d:	push   0xffffff8c
  42350f:	call   0x424ef0
  423514:	add    esp,0xc
  423517:	push   0x18
  423519:	push   0xfffffff7
  42351b:	call   0x424dc9
  423520:	add    esp,0x8
  423523:	xor    edi,0x7ea3d0eb
  423529:	and    eax,edi
  42352b:	add    eax,edi
  42352d:	push   0x4c
  42352f:	push   0xf8ed5c00
  423534:	push   0xffffffa3
  423536:	push   0xfffffff9
  423538:	push   0x7b
  42353a:	call   0x4254dd
  42353f:	add    esp,0x14
  423542:	mov    ecx,DWORD PTR [ebp-0x30]
  423545:	add    DWORD PTR [ebp-0x8],ecx
  423548:	sub    ecx,DWORD PTR [ebp-0x24]
  42354b:	mov    esi,DWORD PTR [ebp-0x8]
  42354e:	cmp    eax,0xffffff98
  423551:	jne    0x423577
  423553:	mov    eax,DWORD PTR [ebp-0x8]
  423556:	sub    DWORD PTR [ebp-0x8],eax
  423559:	mov    edx,edi
  42355b:	cmp    ecx,edi
  42355d:	je     0x423577
  42355f:	or     edx,ecx
  423561:	mov    ebx,DWORD PTR [ebp-0x8]
  423564:	add    DWORD PTR [ebp-0x8],esi
  423567:	sub    DWORD PTR [ebp-0x8],ebx
  42356a:	mov    eax,DWORD PTR [ebp-0x8]
  42356d:	sub    edx,esi
  42356f:	sub    edx,edi
  423571:	sub    DWORD PTR [ebp-0x8],eax
  423574:	sub    DWORD PTR [ebp-0x8],edx
  423577:	xor    ecx,0x7ea3d0ee
  42357d:	add    DWORD PTR [ebp-0x8],eax
  423580:	cmp    edi,ecx
  423582:	je     0x4236c6
  423588:	cmp    esi,edi
  42358a:	jne    0x4235a4
  42358c:	push   0xffffff85
  42358e:	push   0xc6362f00
  423593:	push   0x14
  423595:	push   0xffffff8e
  423597:	push   0x92b94d00
  42359c:	call   0x4255d6
  4235a1:	add    esp,0x14
  4235a4:	push   0x43708c
  4235a9:	call   DWORD PTR ds:0x434a50
  4235af:	and    esi,ebx
  4235b1:	mov    edx,0xc3
  4235b6:	mov    edi,DWORD PTR [ebp-0x8]
  4235b9:	sub    DWORD PTR [ebp-0x8],edi
  4235bc:	add    DWORD PTR [ebp-0x8],esi
  4235bf:	mov    DWORD PTR [ebp-0x8],edx
  4235c2:	or     eax,eax
  4235c4:	je     0x4236c6
  4235ca:	and    edx,edi
  4235cc:	sub    DWORD PTR [ebp-0x8],edx
  4235cf:	add    DWORD PTR [ebp-0x34],0xdaa0e043
  4235d6:	mov    esi,DWORD PTR [ebp-0x8]
  4235d9:	cmp    ebx,0x5af4
  4235df:	jne    0x4235e4
  4235e1:	add    DWORD PTR [ebp-0x8],esi
  4235e4:	lea    ecx,[eax+0xe94]
  4235ea:	sub    eax,ebx
  4235ec:	add    DWORD PTR [ebp-0x8],eax
  4235ef:	inc    ecx
  4235f0:	mov    edi,0xf9
  4235f5:	and    edi,eax
  4235f7:	sub    DWORD PTR [ebp-0x8],ebx
  4235fa:	mov    edx,DWORD PTR [ebp-0x8]
  4235fd:	cmp    ecx,ebx
  4235ff:	je     0x423631
  423601:	mov    esi,DWORD PTR [ebp-0x8]
  423604:	add    edx,ecx
  423606:	add    DWORD PTR [ebp-0x8],ebx
  423609:	cmp    esi,0x5e
  42360c:	jne    0x423631
  42360e:	cmp    edx,0xb164
  423614:	je     0x423631
  423616:	cmp    esi,DWORD PTR [ebp-0x4]
  423619:	jne    0x423631
  42361b:	add    DWORD PTR [ebp-0x8],edx
  42361e:	add    DWORD PTR [ebp-0x8],edi
  423621:	sub    DWORD PTR [ebp-0x8],ebx
  423624:	mov    edi,DWORD PTR [ebp-0x8]
  423627:	cmp    edi,ebx
  423629:	jne    0x423631
  42362b:	sub    DWORD PTR [ebp-0x8],edi
  42362e:	add    DWORD PTR [ebp-0x8],esi
  423631:	mov    edx,DWORD PTR [ecx]
  423633:	mov    edi,DWORD PTR ds:0x43708c
  423639:	add    DWORD PTR [ebp-0x8],ebx
  42363c:	and    DWORD PTR [ebp-0x8],edx
  42363f:	sub    DWORD PTR [ebp-0x8],edi
  423642:	sub    edx,0x76f0309a
  423648:	cmp    edx,0x66d3
  42364e:	je     0x4236ab
  423650:	mov    esi,edx
  423652:	mov    edi,DWORD PTR [ebp-0x8]
  423655:	or     esi,eax
  423657:	sub    esi,ebx
  423659:	cmp    esi,ecx
  42365b:	je     0x4236ab
  42365d:	add    DWORD PTR [ebp-0x8],esi
  423660:	add    edi,eax
  423662:	mov    esi,DWORD PTR [ebp-0x8]
  423665:	sub    edi,ecx
  423667:	cmp    esi,DWORD PTR ds:0x43708c
  42366d:	jne    0x4236ab
  42366f:	test   edi,0xa4
  423675:	je     0x4236ab
  423677:	add    edi,eax
  423679:	cmp    esi,0xf21
  42367f:	je     0x4236ab
  423681:	cmp    edi,DWORD PTR [ebp-0x14]
  423684:	jne    0x4236ab
  423686:	sub    DWORD PTR [ebp-0x8],edi
  423689:	xor    edi,edi
  42368b:	sub    esi,edi
  42368d:	mov    edi,DWORD PTR ds:0x437054
  423693:	sub    esi,edx
  423695:	and    esi,ebx
  423697:	sub    esi,ebx
  423699:	add    esi,ecx
  42369b:	sub    DWORD PTR [ebp-0x8],edi
  42369e:	add    esi,ebx
  4236a0:	test   esi,0xa8
  4236a6:	jne    0x4236ab
  4236a8:	sub    DWORD PTR [ebp-0x8],esi
  4236ab:	cmp    edx,0x49439267
  4236b1:	jne    0x4235ea
  4236b7:	mov    edx,DWORD PTR [ebp-0x8]
  4236ba:	sub    DWORD PTR [ebp-0x8],edx
  4236bd:	mov    edx,DWORD PTR [ecx+0x4]
  4236c0:	mov    DWORD PTR [ebp-0x8],ebx
  4236c3:	sub    DWORD PTR [ebp-0x34],edx
  4236c6:	push   0x28d46c00
  4236cb:	push   0x2a
  4236cd:	push   0xf2264300
  4236d2:	push   0xffffff90
  4236d4:	call   0x42574b
  4236d9:	add    esp,0x10
  4236dc:	push   0x7a3b2c00
  4236e1:	push   0x12
  4236e3:	call   0x4255d6
  4236e8:	add    esp,0x8
  4236eb:	mov    ebx,DWORD PTR [ebp+0xc]
  4236ee:	and    DWORD PTR [ebp-0x8],esi
  4236f1:	push   0x24
  4236f3:	push   0xffffffac
  4236f5:	call   0x424ef0
  4236fa:	add    esp,0x8
  4236fd:	mov    ecx,DWORD PTR [ebp-0x34]
  423700:	sub    esi,eax
  423702:	cmp    ecx,0x55
  423705:	je     0x423748
  423707:	mov    edx,DWORD PTR ds:0x43708c
  42370d:	mov    edi,0xfd
  423712:	cmp    ebx,DWORD PTR ds:0x43708c
  423718:	jne    0x423748
  42371a:	mov    eax,DWORD PTR [ebp-0x8]
  42371d:	cmp    esi,DWORD PTR ds:0x43708c
  423723:	jne    0x423748
  423725:	add    DWORD PTR [ebp-0x8],edi
  423728:	and    eax,ebx
  42372a:	add    DWORD PTR [ebp-0x8],edx
  42372d:	and    eax,ecx
  42372f:	sub    DWORD PTR [ebp-0x8],esi
  423732:	cmp    eax,0x66
  423735:	jne    0x423748
  423737:	xor    edi,edi
  423739:	add    edi,esi
  42373b:	add    edi,ebx
  42373d:	add    DWORD PTR [ebp-0x8],eax
  423740:	xor    edx,edx
  423742:	sub    DWORD PTR [ebp-0x8],edx
  423745:	or     DWORD PTR [ebp-0x8],edi
  423748:	mov    DWORD PTR [ebx+0x0],ecx
  42374b:	mov    edx,0xb2000050
  423750:	cmp    edi,DWORD PTR ds:0x43708c
  423756:	jne    0x423778
  423758:	sub    edx,ebx
  42375a:	push   0x78c13600
  42375f:	push   0x18ea7500
  423764:	push   0xffffffff
  423766:	push   0x98ba7b00
  42376b:	push   0x12b05800
  423770:	call   0x424687
  423775:	add    esp,0x14
  423778:	push   0xb8ab1100
  42377d:	push   0x17
  42377f:	push   0xfffffff9
  423781:	push   0x466c5e00
  423786:	push   0x52518600
  42378b:	call   0x425172
  423790:	add    esp,0x14
  423793:	add    DWORD PTR [ebp-0x8],esi
  423796:	pop    edi
  423797:	sub    DWORD PTR [ebp-0x8],edi
  42379a:	pop    esi
  42379b:	and    ebx,eax
  42379d:	push   0x92f5e700
  4237a2:	push   0x4274be00
  4237a7:	push   0x52282200
  4237ac:	push   0x52984000
  4237b1:	push   0x54
  4237b3:	call   0x424a3d
  4237b8:	add    esp,0x14
  4237bb:	push   0xfa1acd00
  4237c0:	push   0x78
  4237c2:	call   0x4254dd
  4237c7:	add    esp,0x8
  4237ca:	push   0x58c9f500
  4237cf:	push   0xe277fd00
  4237d4:	call   0x42574b
  4237d9:	add    esp,0x8
  4237dc:	call   0x42574b
  4237e1:	mov    edx,DWORD PTR ds:0x437068
  4237e7:	call   0x424a3d
  4237ec:	push   0xfffffff0
  4237ee:	push   0x660f4c00
  4237f3:	call   0x4255d6
  4237f8:	add    esp,0x8
  4237fb:	cmp    esi,0xffffffc8
  4237fe:	je     0x4239ce
  423804:	push   0xd2192400
  423809:	push   0x9e195600
  42380e:	push   0xfffffffb
  423810:	push   0xffffff93
  423812:	push   0x68deb400
  423817:	call   0x424a3d
  42381c:	add    esp,0x14
  42381f:	mov    edx,0x83fa
  423824:	push   0xe25fd00
  423829:	push   0x4aa6de00
  42382e:	push   0x4d
  423830:	call   0x4248b2
  423835:	add    esp,0xc
  423838:	push   0x2f
  42383a:	push   0x266d2b00
  42383f:	push   0x1a
  423841:	push   0x24
  423843:	push   0xbe0d0800
  423848:	call   0x424a3d
  42384d:	add    esp,0x14
  423850:	mov    ecx,0xe
  423855:	push   0xc2640700
  42385a:	push   0xffffffce
  42385c:	push   0xda47e100
  423861:	push   0x7a
  423863:	call   0x424dc9
  423868:	add    esp,0x10
  42386b:	push   0x78920700
  423870:	call   0x4248b2
  423875:	add    esp,0x4
  423878:	cmp    ebx,edi
  42387a:	je     0x4239ce
  423880:	mov    edx,0x3f9b
  423885:	push   0x265f8a00
  42388a:	push   0x4a9b9d00
  42388f:	push   0xffffffeb
  423891:	push   0xea20ff00
  423896:	push   0x720a8b00
  42389b:	call   0x4254dd
  4238a0:	add    esp,0x14
  4238a3:	xor    ecx,ecx
  4238a5:	add    ebx,esi
  4238a7:	call   0x424ef0
  4238ac:	push   0xa786d00
  4238b1:	push   0xc8e3d700
  4238b6:	push   0xffffffb2
  4238b8:	push   0xffffffe7
  4238ba:	call   0x4248b2
  4238bf:	add    esp,0x10
  4238c2:	test   ebx,0xb2f5
  4238c8:	je     0x4239ce
  4238ce:	sub    ebx,eax
  4238d0:	cmp    edi,0x2b
  4238d3:	jne    0x4239ce
  4238d9:	mov    ecx,DWORD PTR ds:0x437054
  4238df:	add    ebx,ecx
  4238e1:	test   ebx,0x55
  4238e7:	jne    0x4239ce
  4238ed:	cmp    eax,DWORD PTR ds:0x437068
  4238f3:	jne    0x4239ce
  4238f9:	push   0xffffff8a
  4238fb:	push   0xd2d76800
  423900:	push   0x6ab41d00
  423905:	call   0x4253cd
  42390a:	add    esp,0xc
  42390d:	push   0x3d
  42390f:	push   0x48beb100
  423914:	push   0xd216da00
  423919:	push   0xfffffff3
  42391b:	call   0x4254dd
  423920:	add    esp,0x10
  423923:	call   0x4248b2
  423928:	push   0x6ab8ae00
  42392d:	call   0x4248b2
  423932:	add    esp,0x4
  423935:	push   0x15
  423937:	push   0xea909e00
  42393c:	push   0x61e8100
  423941:	push   0xf67b6400
  423946:	call   0x424a3d
  42394b:	add    esp,0x10
  42394e:	push   0x4f
  423950:	push   0xffffffb9
  423952:	push   0x1f
  423954:	push   0xe8d2cd00
  423959:	call   0x424dc9
  42395e:	add    esp,0x10
  423961:	add    ebx,esi
  423963:	cmp    ebx,edi
  423965:	jne    0x4239ce
  423967:	push   0x52003d00
  42396c:	push   0xffffff83
  42396e:	push   0x44
  423970:	call   0x424a3d
  423975:	add    esp,0xc
  423978:	cmp    esi,0x586a
  42397e:	je     0x4239ce
  423980:	mov    ecx,0x7a
  423985:	push   0x48f53300
  42398a:	push   0x8a3a5700
  42398f:	push   0x6a81b400
  423994:	call   0x4255d6
  423999:	add    esp,0xc
  42399c:	and    ebx,esi
  42399e:	push   0x12512700
  4239a3:	push   0x51
  4239a5:	push   0x6e
  4239a7:	push   0xffffff9a
  4239a9:	push   0xb
  4239ab:	call   0x425172
  4239b0:	add    esp,0x14
  4239b3:	call   0x4258b5
  4239b8:	push   0xffffffac
  4239ba:	call   0x42502a
  4239bf:	add    esp,0x4
  4239c2:	mov    eax,DWORD PTR ds:0x437054
  4239c8:	add    DWORD PTR [ebp-0x8],ebx
  4239cb:	and    DWORD PTR [ebp-0x8],eax
  4239ce:	pop    ebx
  4239cf:	call   0x4248b2
  4239d4:	push   0xa23e6800
  4239d9:	push   0x5e
  4239db:	call   0x425172
  4239e0:	add    esp,0x8
  4239e3:	leave  
  4239e4:	ret    0x8
  4239e7:	int3   
  4239e8:	int3   
  4239e9:	int3   
  4239ea:	int3   
  4239eb:	int3   
  4239ec:	push   ebp
  4239ed:	mov    ebp,esp
  4239ef:	sub    esp,0x2c
  4239f2:	xor    eax,eax
  4239f4:	mov    edx,eax
  4239f6:	push   0xd2923500
  4239fb:	push   0x7a211400
  423a00:	push   0x78d88b00
  423a05:	push   0x121e3500
  423a0a:	call   0x4248b2
  423a0f:	add    esp,0x10
  423a12:	push   ebx
  423a13:	cmp    eax,0xb3f
  423a18:	je     0x423a1f
  423a1a:	xor    eax,eax
  423a1c:	mov    DWORD PTR [ebp-0x20],eax
  423a1f:	push   esi
  423a20:	push   0x88e45700
  423a25:	push   0x5a
  423a27:	push   0x19
  423a29:	push   0x58869400
  423a2e:	call   0x4254dd
  423a33:	add    esp,0x10
  423a36:	push   edi
  423a37:	mov    DWORD PTR [ebp-0x14],eax
  423a3a:	push   0x28865a00
  423a3f:	call   0x4254dd
  423a44:	add    esp,0x4
  423a47:	push   0xba296500
  423a4c:	push   0x6e69e800
  423a51:	push   0x38e36100
  423a56:	push   0xffffffae
  423a58:	push   0x58
  423a5a:	call   0x42502a
  423a5f:	add    esp,0x14
  423a62:	push   0x15
  423a64:	push   0x522f1a00
  423a69:	push   0xde7d8700
  423a6e:	push   0xeaa02900
  423a73:	call   0x4248b2
  423a78:	add    esp,0x10
  423a7b:	push   0x2b
  423a7d:	push   0x61
  423a7f:	push   0xffffff85
  423a81:	push   0x38c49c00
  423a86:	push   0xffffffbb
  423a88:	call   0x4254dd
  423a8d:	add    esp,0x14
  423a90:	rdtsc  
  423a92:	mov    ecx,eax
  423a94:	mov    edi,eax
  423a96:	sub    ecx,eax
  423a98:	sub    ecx,edx
  423a9a:	add    edi,ecx
  423a9c:	add    DWORD PTR [ebp-0x14],edi
  423a9f:	and    edx,ecx
  423aa1:	sub    edx,edi
  423aa3:	mov    ecx,edx
  423aa5:	mov    esi,DWORD PTR [ebp-0x14]
  423aa8:	sub    ecx,esi
  423aaa:	add    ecx,esi
  423aac:	add    ecx,eax
  423aae:	xor    DWORD PTR [ebp-0x14],ecx
  423ab1:	mov    edx,DWORD PTR [ebp-0x14]
  423ab4:	add    DWORD PTR [ebp-0x14],edx
  423ab7:	pop    edi
  423ab8:	mov    ebx,0xe7
  423abd:	mov    esi,edi
  423abf:	sub    esi,edi
  423ac1:	cmp    esi,DWORD PTR [ebp-0x24]
  423ac4:	je     0x423ae4
  423ac6:	mov    edx,DWORD PTR [ebp-0x14]
  423ac9:	mov    ecx,edi
  423acb:	cmp    ecx,esi
  423acd:	jne    0x423ae4
  423acf:	sub    DWORD PTR [ebp-0x14],edi
  423ad2:	sub    edx,esi
  423ad4:	and    edx,eax
  423ad6:	sub    edx,eax
  423ad8:	sub    ecx,edx
  423ada:	add    ecx,esi
  423adc:	add    ecx,ebx
  423ade:	sub    DWORD PTR [ebp-0x14],esi
  423ae1:	add    DWORD PTR [ebp-0x14],ecx
  423ae4:	pop    esi
  423ae5:	cmp    esi,0xffffffc6
  423ae8:	je     0x423b0d
  423aea:	mov    ecx,0x1b
  423aef:	mov    ebx,0xe7e5
  423af4:	test   esi,0x9
  423afa:	je     0x423aff
  423afc:	add    DWORD PTR [ebp-0x14],esi
  423aff:	add    ebx,esi
  423b01:	or     ecx,esi
  423b03:	add    ebx,eax
  423b05:	sub    DWORD PTR [ebp-0x14],ebx
  423b08:	add    ecx,edi
  423b0a:	xor    DWORD PTR [ebp-0x14],ecx
  423b0d:	pop    ebx
  423b0e:	cmp    esi,0x23f5
  423b14:	jne    0x423b35
  423b16:	sub    edx,esi
  423b18:	cmp    edx,DWORD PTR [ebp-0x2c]
  423b1b:	je     0x423b35
  423b1d:	mov    ecx,0x9709
  423b22:	cmp    ebx,eax
  423b24:	je     0x423b35
  423b26:	xor    DWORD PTR [ebp-0x14],ecx
  423b29:	mov    ecx,DWORD PTR [ebp-0x14]
  423b2c:	sub    DWORD PTR [ebp-0x14],ebx
  423b2f:	add    DWORD PTR [ebp-0x14],edx
  423b32:	add    DWORD PTR [ebp-0x14],ecx
  423b35:	leave  
  423b36:	ret    
  423b37:	int3   
  423b38:	int3   
  423b39:	int3   
  423b3a:	int3   
  423b3b:	int3   
  423b3c:	push   ebp
  423b3d:	mov    ebp,esp
  423b3f:	sub    esp,0x3c
  423b42:	push   0xffffffc8
  423b44:	call   0x4258b5
  423b49:	add    esp,0x4
  423b4c:	push   ebx
  423b4d:	push   0x58eed800
  423b52:	push   0x12b31400
  423b57:	call   0x424dc9
  423b5c:	add    esp,0x8
  423b5f:	push   esi
  423b60:	mov    DWORD PTR [ebp-0x18],eax
  423b63:	push   edi
  423b64:	push   0xa6616500
  423b69:	push   0xffffff8c
  423b6b:	push   0xeaefc200
  423b70:	push   0xffffff90
  423b72:	call   0x42574b
  423b77:	add    esp,0x10
  423b7a:	call   0x42574b
  423b7f:	push   0xffffffb7
  423b81:	call   0x42574b
  423b86:	add    esp,0x4
  423b89:	mov    edx,DWORD PTR [ebp+0x10]
  423b8c:	cmp    edx,0xffffffa0
  423b8f:	je     0x423bed
  423b91:	mov    esi,DWORD PTR [ebp-0x18]
  423b94:	test   edx,0x9f
  423b9a:	jne    0x423bed
  423b9c:	cmp    edx,0x48
  423b9f:	je     0x423bed
  423ba1:	mov    eax,DWORD PTR [ebp-0x18]
  423ba4:	sub    eax,edx
  423ba6:	mov    ebx,0x3944
  423bab:	test   eax,0xc
  423bb0:	je     0x423bed
  423bb2:	or     DWORD PTR [ebp-0x18],ebx
  423bb5:	add    esi,ebx
  423bb7:	mov    ebx,esi
  423bb9:	xor    edi,edi
  423bbb:	or     edi,esi
  423bbd:	cmp    ebx,0xc8f1
  423bc3:	jne    0x423bed
  423bc5:	test   edx,0xd5
  423bcb:	jne    0x423bed
  423bcd:	test   esi,0xe94b
  423bd3:	je     0x423bed
  423bd5:	mov    ecx,DWORD PTR [ebp-0x18]
  423bd8:	add    DWORD PTR [ebp-0x18],ebx
  423bdb:	or     edi,ecx
  423bdd:	mov    esi,0xd2
  423be2:	add    DWORD PTR [ebp-0x18],esi
  423be5:	sub    eax,ecx
  423be7:	add    DWORD PTR [ebp-0x18],eax
  423bea:	add    DWORD PTR [ebp-0x18],edi
  423bed:	mov    eax,DWORD PTR [ebp+0x8]
  423bf0:	and    ebx,esi
  423bf2:	mov    esi,0x72ea
  423bf7:	add    DWORD PTR [ebp-0x18],eax
  423bfa:	and    DWORD PTR [ebp-0x18],ebx
  423bfd:	mov    edi,DWORD PTR [ebp-0x18]
  423c00:	add    edi,edi
  423c02:	add    DWORD PTR [ebp-0x18],ebx
  423c05:	test   edi,0x1e5a
  423c0b:	je     0x423c44
  423c0d:	cmp    edi,DWORD PTR [ebp-0x10]
  423c10:	jne    0x423c44
  423c12:	cmp    edi,edx
  423c14:	je     0x423c44
  423c16:	mov    ecx,DWORD PTR [ebp-0x18]
  423c19:	mov    ebx,DWORD PTR [ebp-0x18]
  423c1c:	cmp    ebx,0x2
  423c1f:	jne    0x423c44
  423c21:	and    esi,edx
  423c23:	sub    DWORD PTR [ebp-0x18],edi
  423c26:	and    ebx,esi
  423c28:	sub    ecx,ebx
  423c2a:	add    ecx,edx
  423c2c:	cmp    esi,0x23
  423c2f:	jne    0x423c44
  423c31:	mov    DWORD PTR [ebp-0x18],eax
  423c34:	add    ecx,ecx
  423c36:	sub    ecx,edi
  423c38:	sub    DWORD PTR [ebp-0x18],edx
  423c3b:	cmp    ecx,edx
  423c3d:	jne    0x423c44
  423c3f:	add    ecx,ebx
  423c41:	or     DWORD PTR [ebp-0x18],ecx
  423c44:	cmp    DWORD PTR [ebp+0xc],edx
  423c47:	je     0x423cc0
  423c49:	add    edi,edi
  423c4b:	or     edi,ecx
  423c4d:	mov    ecx,DWORD PTR [ebp-0x18]
  423c50:	cmp    ebx,0xffffffb6
  423c53:	jne    0x423c62
  423c55:	add    DWORD PTR [ebp-0x18],ecx
  423c58:	cmp    edi,0x41
  423c5b:	jne    0x423c62
  423c5d:	and    edi,edx
  423c5f:	or     DWORD PTR [ebp-0x18],edi
  423c62:	dec    DWORD PTR [ebp+0xc]
  423c65:	mov    edi,DWORD PTR [ebp-0x18]
  423c68:	test   edi,0x5d
  423c6e:	je     0x423c79
  423c70:	cmp    edi,eax
  423c72:	je     0x423c79
  423c74:	sub    edi,ecx
  423c76:	mov    DWORD PTR [ebp-0x18],edi
  423c79:	add    DWORD PTR [eax],0x120d82e6
  423c7f:	mov    edi,DWORD PTR ds:0x437050
  423c85:	sub    DWORD PTR [ebp-0x18],edi
  423c88:	add    DWORD PTR [eax],edx
  423c8a:	cmp    ecx,edi
  423c8c:	je     0x423c94
  423c8e:	mov    edi,DWORD PTR [ebp-0x18]
  423c91:	or     DWORD PTR [ebp-0x18],edi
  423c94:	xor    DWORD PTR [eax],0xea64c582
  423c9a:	cmp    eax,0x82182980
  423c9f:	je     0x423ca9
  423ca1:	mov    edi,0x11
  423ca6:	mov    DWORD PTR [ebp-0x18],edi
  423ca9:	add    eax,0x4
  423cac:	mov    edi,DWORD PTR [ebp-0x18]
  423caf:	or     edi,eax
  423cb1:	cmp    edi,0x4
  423cb4:	je     0x423cbb
  423cb6:	and    edi,edx
  423cb8:	mov    DWORD PTR [ebp-0x18],edi
  423cbb:	jmp    0x423bf0
  423cc0:	push   0xfffffffc
  423cc2:	push   0x0
  423cc4:	push   0x54
  423cc6:	call   0x425172
  423ccb:	add    esp,0xc
  423cce:	mov    ebx,DWORD PTR [ebp-0x18]
  423cd1:	call   0x424b5c
  423cd6:	call   0x424ef0
  423cdb:	mov    eax,0x8
  423ce0:	push   0x4a5d4f00
  423ce5:	push   0xffffffbb
  423ce7:	push   0xffffffd1
  423ce9:	push   0x78aec300
  423cee:	call   0x42574b
  423cf3:	add    esp,0x10
  423cf6:	push   0x7e12e200
  423cfb:	push   0x4af50d00
  423d00:	push   0x4a993300
  423d05:	push   0x320edc00
  423d0a:	push   0xa228de00
  423d0f:	call   0x4254dd
  423d14:	add    esp,0x14
  423d17:	push   0xffffff95
  423d19:	push   0x82653700
  423d1e:	push   0x4f
  423d20:	call   0x4258b5
  423d25:	add    esp,0xc
  423d28:	cmp    ebx,DWORD PTR ds:0x437050
  423d2e:	je     0x423f22
  423d34:	push   0x821e4100
  423d39:	push   0xffffffbc
  423d3b:	call   0x4258b5
  423d40:	add    esp,0x8
  423d43:	push   0x12ed0300
  423d48:	push   0xffffffe9
  423d4a:	push   0x44
  423d4c:	push   0x4a924d00
  423d51:	push   0xffffffce
  423d53:	call   0x424a3d
  423d58:	add    esp,0x14
  423d5b:	mov    esi,DWORD PTR [ebp-0x18]
  423d5e:	cmp    esi,DWORD PTR [ebp-0x34]
  423d61:	jne    0x423f22
  423d67:	or     DWORD PTR [ebp-0x18],esi
  423d6a:	cmp    ebx,0xffffff93
  423d6d:	jne    0x423f22
  423d73:	mov    eax,0xb2
  423d78:	push   0xffffffaa
  423d7a:	push   0x63
  423d7c:	push   0xffffffd8
  423d7e:	push   0x44
  423d80:	call   0x424dc9
  423d85:	add    esp,0x10
  423d88:	add    DWORD PTR [ebp-0x18],eax
  423d8b:	call   0x4253cd
  423d90:	mov    edi,DWORD PTR [ebp-0x18]
  423d93:	call   0x424b5c
  423d98:	call   0x424ef0
  423d9d:	push   0x6213ba00
  423da2:	push   0xffffff95
  423da4:	push   0x6abbda00
  423da9:	push   0xe8caaf00
  423dae:	call   0x425172
  423db3:	add    esp,0x10
  423db6:	push   0xffffffa1
  423db8:	push   0x76
  423dba:	call   0x4255d6
  423dbf:	add    esp,0x8
  423dc2:	call   0x4248b2
  423dc7:	push   0x68ccb800
  423dcc:	push   0xffffff90
  423dce:	push   0x5a011400
  423dd3:	push   0xffffff88
  423dd5:	call   0x424ef0
  423dda:	add    esp,0x10
  423ddd:	push   0x3209d400
  423de2:	push   0x10
  423de4:	push   0xffffffe4
  423de6:	push   0x4aec2600
  423deb:	call   0x4248b2
  423df0:	add    esp,0x10
  423df3:	push   0x7a37cc00
  423df8:	call   0x4258b5
  423dfd:	add    esp,0x4
  423e00:	cmp    ebx,DWORD PTR ds:0x437050
  423e06:	je     0x423f22
  423e0c:	mov    DWORD PTR [ebp-0x30],ebx
  423e0f:	push   0x48
  423e11:	call   0x425172
  423e16:	add    esp,0x4
  423e19:	push   0xb88f2200
  423e1e:	push   0x8cef900
  423e23:	push   0x4224ab00
  423e28:	push   0x10
  423e2a:	call   0x425172
  423e2f:	add    esp,0x10
  423e32:	push   0x52c77300
  423e37:	push   0x58e83400
  423e3c:	push   0xfffffff7
  423e3e:	push   0x61
  423e40:	push   0x92b03700
  423e45:	call   0x42502a
  423e4a:	add    esp,0x14
  423e4d:	add    edi,esi
  423e4f:	mov    eax,DWORD PTR [ebp-0x30]
  423e52:	push   0xffffffa1
  423e54:	push   0xffffffe3
  423e56:	push   0xfffffffb
  423e58:	push   0x9e1f5600
  423e5d:	call   0x4248b2
  423e62:	add    esp,0x10
  423e65:	push   0x220ae400
  423e6a:	call   0x4255d6
  423e6f:	add    esp,0x4
  423e72:	mov    edx,ebx
  423e74:	call   0x42502a
  423e79:	push   0x889af800
  423e7e:	push   0xffffffa1
  423e80:	push   0x53
  423e82:	push   0x488b8c00
  423e87:	call   0x4255d6
  423e8c:	add    esp,0x10
  423e8f:	push   0x1649c900
  423e94:	push   0x4a8eb400
  423e99:	push   0x6a3c2100
  423e9e:	push   0x71
  423ea0:	call   0x425172
  423ea5:	add    esp,0x10
  423ea8:	add    edi,esi
  423eaa:	push   0x28f91b00
  423eaf:	push   0xffffffea
  423eb1:	push   0x49
  423eb3:	push   0x8
  423eb5:	call   0x4255d6
  423eba:	add    esp,0x10
  423ebd:	cmp    edi,0xffc
  423ec3:	jne    0x423f22
  423ec5:	mov    edx,0x56
  423eca:	push   0xffffffe6
  423ecc:	push   0x76363f00
  423ed1:	push   0xffffffcc
  423ed3:	call   0x424ef0
  423ed8:	add    esp,0xc
  423edb:	push   0xffffff8e
  423edd:	push   0x3663ad00
  423ee2:	push   0x48828900
  423ee7:	push   0xffffffd3
  423ee9:	push   0xe8846700
  423eee:	call   0x424dc9
  423ef3:	add    esp,0x14
  423ef6:	mov    ecx,ebx
  423ef8:	push   0xffffff8f
  423efa:	push   0x2a757700
  423eff:	call   0x4253cd
  423f04:	add    esp,0x8
  423f07:	test   ebx,0x1
  423f0d:	je     0x423f22
  423f0f:	push   0xffffffba
  423f11:	call   0x4254dd
  423f16:	add    esp,0x4
  423f19:	sub    edi,ebx
  423f1b:	cmp    edi,eax
  423f1d:	jne    0x423f22
  423f1f:	add    DWORD PTR [ebp-0x30],edi
  423f22:	mov    edi,DWORD PTR ds:0x437050
  423f28:	mov    ecx,DWORD PTR [ebp-0x18]
  423f2b:	push   0xd8f80100
  423f30:	push   0xbe3b8800
  423f35:	push   0xf8f04f00
  423f3a:	push   0xffffffde
  423f3c:	call   0x4258b5
  423f41:	add    esp,0x10
  423f44:	push   0xd2dee000
  423f49:	push   0x7
  423f4b:	push   0x56019000
  423f50:	call   0x424687
  423f55:	add    esp,0xc
  423f58:	push   0x63
  423f5a:	push   0xffffff82
  423f5c:	push   0x98b16d00
  423f61:	push   0xffffffec
  423f63:	push   0xb8e31900
  423f68:	call   0x424b5c
  423f6d:	add    esp,0x14
  423f70:	push   0xffffffec
  423f72:	call   0x4255d6
  423f77:	add    esp,0x4
  423f7a:	call   0x424687
  423f7f:	sub    edi,esi
  423f81:	call   0x424b5c
  423f86:	cmp    edi,0x1e
  423f89:	je     0x423faf
  423f8b:	push   0xae540700
  423f90:	push   0xae777000
  423f95:	push   0xfffffffe
  423f97:	push   0x8641fc00
  423f9c:	call   0x4253cd
  423fa1:	add    esp,0x10
  423fa4:	test   edi,0xa925
  423faa:	jne    0x423faf
  423fac:	add    DWORD PTR [ebp-0x18],edi
  423faf:	pop    edi
  423fb0:	mov    edx,edi
  423fb2:	mov    ecx,DWORD PTR [ebp-0x18]
  423fb5:	push   0x3d
  423fb7:	push   0xeabfbf00
  423fbc:	push   0x52c41000
  423fc1:	push   0x4a190400
  423fc6:	push   0x5e6e8900
  423fcb:	call   0x4253cd
  423fd0:	add    esp,0x14
  423fd3:	pop    esi
  423fd4:	call   0x424a3d
  423fd9:	pop    ebx
  423fda:	cmp    esi,DWORD PTR ds:0x437050
  423fe0:	jne    0x423ffe
  423fe2:	mov    edx,DWORD PTR ds:0x437044
  423fe8:	push   0xffffffae
  423fea:	push   0xf2089300
  423fef:	push   0xffffffe1
  423ff1:	push   0x5894cb00
  423ff6:	call   0x42502a
  423ffb:	add    esp,0x10
  423ffe:	leave  
  423fff:	ret    0xc
  424002:	int3   
  424003:	int3   
  424004:	int3   
  424005:	int3   
  424006:	int3   
  424007:	push   ebp
  424008:	mov    ebp,esp
  42400a:	sub    esp,0x34
  42400d:	push   0x4ab41f00
  424012:	push   0xffffffcb
  424014:	push   0xd2eee800
  424019:	push   0xffffff83
  42401b:	push   0x46726100
  424020:	call   0x4248b2
  424025:	add    esp,0x14
  424028:	push   0x4
  42402a:	push   0x45
  42402c:	call   0x425172
  424031:	add    esp,0x8
  424034:	push   ebx
  424035:	push   0x2a
  424037:	push   0xffffff8b
  424039:	push   0xffffffc3
  42403b:	push   0x988cb100
  424040:	push   0xc
  424042:	call   0x424a3d
  424047:	add    esp,0x14
  42404a:	push   0xffffffa8
  42404c:	push   0xffffffac
  42404e:	push   0x4afcf300
  424053:	push   0x78dd1d00
  424058:	call   0x424ef0
  42405d:	add    esp,0x10
  424060:	push   esi
  424061:	push   0xd
  424063:	push   0x92b1f800
  424068:	call   0x425172
  42406d:	add    esp,0x8
  424070:	push   edi
  424071:	push   0x163d3500
  424076:	push   0x4f
  424078:	push   0xffffffa1
  42407a:	call   0x4258b5
  42407f:	add    esp,0xc
  424082:	xor    edx,edx
  424084:	mov    ecx,0x12
  424089:	push   0xffffff8a
  42408b:	push   0x5286af00
  424090:	call   0x42502a
  424095:	add    esp,0x8
  424098:	mov    ebx,0xc6984560
  42409d:	mov    esi,0x89
  4240a2:	mov    ecx,DWORD PTR ds:0x43704c
  4240a8:	add    esi,esi
  4240aa:	call   0x4248b2
  4240af:	call   0x424687
  4240b4:	push   0xd2025700
  4240b9:	call   0x424ef0
  4240be:	add    esp,0x4
  4240c1:	push   0x5290fd00
  4240c6:	push   0xd8b8e400
  4240cb:	call   0x4248b2
  4240d0:	add    esp,0x8
  4240d3:	push   0x7a
  4240d5:	push   0x48c88300
  4240da:	push   0x4afb7600
  4240df:	push   0x62
  4240e1:	call   0x424687
  4240e6:	add    esp,0x10
  4240e9:	push   0xa8d79400
  4240ee:	push   0x27
  4240f0:	push   0xfffffffd
  4240f2:	push   0x60
  4240f4:	push   0x5b
  4240f6:	call   0x4258b5
  4240fb:	add    esp,0x14
  4240fe:	push   0x66
  424100:	push   0xffffffb4
  424102:	push   0xe494a00
  424107:	call   0x424dc9
  42410c:	add    esp,0xc
  42410f:	push   0xffffffa0
  424111:	push   0x9a11ca00
  424116:	push   0x4a95b400
  42411b:	push   0xffffffef
  42411d:	push   0xfffffffe
  42411f:	call   0x4254dd
  424124:	add    esp,0x14
  424127:	push   0xc880eb00
  42412c:	push   0x92c20100
  424131:	push   0x98c4d300
  424136:	push   0x4a998600
  42413b:	call   0x4255d6
  424140:	add    esp,0x10
  424143:	mov    DWORD PTR [ebp-0x20],eax
  424146:	push   0x4ab2af00
  42414b:	call   0x42574b
  424150:	add    esp,0x4
  424153:	push   0xea59a900
  424158:	call   0x4258b5
  42415d:	add    esp,0x4
  424160:	push   0x28840000
  424165:	push   0xffffffa6
  424167:	push   0xa8b00a00
  42416c:	call   0x424ef0
  424171:	add    esp,0xc
  424174:	push   0x7c
  424176:	push   0xa8abc600
  42417b:	push   0xf8d4d500
  424180:	push   0xfffffff0
  424182:	call   0x4255d6
  424187:	add    esp,0x10
  42418a:	call   0x424b5c
  42418f:	xor    DWORD PTR [ebp-0x20],ebx
  424192:	or     esi,eax
  424194:	cmp    esi,0xb595
  42419a:	jne    0x4241c7
  42419c:	mov    ecx,DWORD PTR [ebp-0x20]
  42419f:	xor    edi,edi
  4241a1:	push   0xffffff87
  4241a3:	call   0x4248b2
  4241a8:	add    esp,0x4
  4241ab:	sub    edi,eax
  4241ad:	push   0x4e4f0500
  4241b2:	push   0xffffffee
  4241b4:	call   0x424dc9
  4241b9:	add    esp,0x8
  4241bc:	and    DWORD PTR [ebp-0x20],esi
  4241bf:	call   0x42574b
  4241c4:	add    DWORD PTR [ebp-0x20],edi
  4241c7:	push   0x56
  4241c9:	push   0x920bd300
  4241ce:	push   0xffffff9e
  4241d0:	push   0xffffffd5
  4241d2:	call   0x424b5c
  4241d7:	add    esp,0x10
  4241da:	sub    ebx,0xc6984520
  4241e0:	push   0x36340c00
  4241e5:	call   0x4255d6
  4241ea:	add    esp,0x4
  4241ed:	push   0xb8904b00
  4241f2:	call   0x4254dd
  4241f7:	add    esp,0x4
  4241fa:	push   ebx
  4241fb:	push   0x4a92a900
  424200:	call   0x424dc9
  424205:	add    esp,0x4
  424208:	mov    edi,0xd22b2a5b
  42420d:	push   0x28b52700
  424212:	push   0x2
  424214:	call   0x42574b
  424219:	add    esp,0x8
  42421c:	add    edi,0x2dd505a5
  424222:	push   0x4ad84500
  424227:	push   0xffffff88
  424229:	push   0xde4dea00
  42422e:	push   0x78
  424230:	push   0x2a53c000
  424235:	call   0x42574b
  42423a:	add    esp,0x14
  42423d:	push   edi
  42423e:	push   0xffffffc0
  424240:	call   0x4258b5
  424245:	add    esp,0x4
  424248:	push   0xc2171900
  42424d:	push   0xf8fb1a00
  424252:	call   0x4254dd
  424257:	add    esp,0x8
  42425a:	push   0x67866
  42425f:	push   0xa8de1400
  424264:	push   0xffffff96
  424266:	push   0xaa5f6100
  42426b:	push   0x58f9c200
  424270:	call   0x42574b
  424275:	add    esp,0x10
  424278:	push   0xce4e9400
  42427d:	push   0xbe007300
  424282:	push   0x7e
  424284:	push   0x425ab800
  424289:	push   0xfffffff5
  42428b:	call   0x425172
  424290:	add    esp,0x14
  424293:	push   0x0
  424295:	push   0x962b9700
  42429a:	push   0xffffffa6
  42429c:	push   0x10
  42429e:	push   0xfe0d2700
  4242a3:	push   0x75
  4242a5:	call   0x424ef0
  4242aa:	add    esp,0x14
  4242ad:	push   0x4a89b400
  4242b2:	call   0x4253cd
  4242b7:	add    esp,0x4
  4242ba:	mov    ebx,0x3b0e5c11
  4242bf:	mov    edx,DWORD PTR [ebp-0x20]
  4242c2:	sub    edx,edi
  4242c4:	sub    edx,ebx
  4242c6:	push   0x36
  4242c8:	push   0x51
  4242ca:	push   0x129e2200
  4242cf:	push   0xffffffba
  4242d1:	push   0xffffffee
  4242d3:	call   0x42574b
  4242d8:	add    esp,0x14
  4242db:	sub    ebx,0x3acb11a9
  4242e1:	push   0x4acd6f00
  4242e6:	push   0x68853100
  4242eb:	push   0xea07e100
  4242f0:	push   0xffffff97
  4242f2:	push   0x789d2c00
  4242f7:	call   0x4248b2
  4242fc:	add    esp,0x14
  4242ff:	push   0xffffffab
  424301:	push   0x1e
  424303:	push   0x966a9f00
  424308:	push   0x4aea3200
  42430d:	push   0x68df7600
  424312:	call   0x424b5c
  424317:	add    esp,0x14
  42431a:	call   DWORD PTR [ebx]
  42431c:	mov    esi,edi
  42431e:	add    ebx,ebx
  424320:	mov    ebx,DWORD PTR [ebp-0x20]
  424323:	or     esi,eax
  424325:	sub    DWORD PTR [ebp-0x20],ebx
  424328:	add    DWORD PTR [ebp-0x20],esi
  42432b:	mov    DWORD PTR [ebp-0xc],eax
  42432e:	mov    edx,DWORD PTR [ebp-0x20]
  424331:	push   0xfffffff3
  424333:	push   0xffffffe4
  424335:	push   0x2a36e000
  42433a:	push   0xffffffbc
  42433c:	call   0x4248b2
  424341:	add    esp,0x10
  424344:	mov    ebx,0xf87c74d0
  424349:	push   0xf2079f00
  42434e:	push   0x12186800
  424353:	call   0x424b5c
  424358:	add    esp,0x8
  42435b:	push   0xe66d3100
  424360:	call   0x4258b5
  424365:	add    esp,0x4
  424368:	add    ebx,0x7c6fb30
  42436e:	mov    esi,DWORD PTR [ebp-0x20]
  424371:	push   0xffffffe0
  424373:	push   0x4c
  424375:	push   0x3a
  424377:	call   0x424ef0
  42437c:	add    esp,0xc
  42437f:	call   0x424b5c
  424384:	mov    ecx,0x60
  424389:	push   0x7a6aff00
  42438e:	push   0xc630b600
  424393:	push   0xffffffb2
  424395:	push   0xffffffb3
  424397:	push   0x38
  424399:	call   0x4248b2
  42439e:	add    esp,0x14
  4243a1:	sub    DWORD PTR [ebp-0x20],ebx
  4243a4:	push   0xffffff81
  4243a6:	push   0xffffffb1
  4243a8:	push   0x7e434c00
  4243ad:	push   0x4f
  4243af:	push   0x6c
  4243b1:	call   0x4254dd
  4243b6:	add    esp,0x14
  4243b9:	push   0xffffff99
  4243bb:	push   0xee564300
  4243c0:	push   0xc6345400
  4243c5:	push   0x6ac2be00
  4243ca:	call   0x42574b
  4243cf:	add    esp,0x10
  4243d2:	sub    esi,ebx
  4243d4:	add    DWORD PTR [ebp-0x20],esi
  4243d7:	push   0x28bd9d00
  4243dc:	push   0x38c06500
  4243e1:	push   0x3e0c5000
  4243e6:	call   0x4248b2
  4243eb:	add    esp,0xc
  4243ee:	mov    DWORD PTR [ebp-0x1c],ebx
  4243f1:	push   0x9e0cd300
  4243f6:	push   0xffffff9a
  4243f8:	call   0x42574b
  4243fd:	add    esp,0x8
  424400:	mov    edi,DWORD PTR [ebp-0xc]
  424403:	push   0x626d9900
  424408:	push   0xe8806900
  42440d:	push   0xffffff9a
  42440f:	call   0x424dc9
  424414:	add    esp,0xc
  424417:	push   0x61
  424419:	push   0xca487c00
  42441e:	push   0x560d2000
  424423:	push   0x1c
  424425:	push   0xd2e1a500
  42442a:	call   0x4254dd
  42442f:	add    esp,0x14
  424432:	mov    ecx,0xcc51
  424437:	add    ecx,ecx
  424439:	mov    ebx,esi
  42443b:	push   0xffffffa1
  42443d:	push   0xc8c34a00
  424442:	call   0x42574b
  424447:	add    esp,0x8
  42444a:	add    DWORD PTR [ebp-0x20],ebx
  42444d:	mov    edx,DWORD PTR [ebp-0x1c]
  424450:	sub    esi,edi
  424452:	mov    ebx,0x74
  424457:	mov    eax,0xde2e
  42445c:	add    DWORD PTR [ebp-0x20],edx
  42445f:	and    esi,edx
  424461:	sub    eax,esi
  424463:	sub    eax,ebx
  424465:	add    DWORD PTR [ebp-0x20],ebx
  424468:	xor    DWORD PTR [ebp-0x20],eax
  42446b:	mov    esi,DWORD PTR [edx]
  42446d:	mov    ecx,DWORD PTR [ebp-0x20]
  424470:	cmp    ecx,edi
  424472:	jne    0x424495
  424474:	mov    eax,DWORD PTR [ebp-0x20]
  424477:	and    ecx,eax
  424479:	mov    eax,0x43
  42447e:	sub    ecx,edi
  424480:	or     DWORD PTR [ebp-0x20],esi
  424483:	add    eax,edx
  424485:	sub    DWORD PTR [ebp-0x20],ecx
  424488:	add    eax,ecx
  42448a:	test   edx,0x60
  424490:	je     0x424495
  424492:	mov    DWORD PTR [ebp-0x14],eax
  424495:	mov    ecx,DWORD PTR [edx+0x4]
  424498:	mov    ebx,0xed
  42449d:	mov    edx,DWORD PTR [ebp-0x20]
  4244a0:	sub    DWORD PTR [ebp-0x20],ebx
  4244a3:	sub    edx,ebx
  4244a5:	sub    DWORD PTR [ebp-0x20],ecx
  4244a8:	sub    DWORD PTR [ebp-0x20],edi
  4244ab:	sub    edx,ebx
  4244ad:	sub    DWORD PTR [ebp-0x20],edi
  4244b0:	or     edx,esi
  4244b2:	cmp    edx,0xfffffffa
  4244b5:	jne    0x4244ec
  4244b7:	add    edx,ecx
  4244b9:	add    edx,ebx
  4244bb:	add    edx,eax
  4244bd:	add    edx,eax
  4244bf:	add    edx,edx
  4244c1:	cmp    ecx,0x2aa3
  4244c7:	je     0x4244ec
  4244c9:	xor    ebx,ebx
  4244cb:	mov    eax,DWORD PTR [ebp-0x20]
  4244ce:	and    edx,ecx
  4244d0:	sub    ebx,esi
  4244d2:	or     DWORD PTR [ebp-0x20],esi
  4244d5:	cmp    ebx,0xa
  4244d8:	jne    0x4244ec
  4244da:	mov    DWORD PTR [ebp-0x20],ebx
  4244dd:	sub    DWORD PTR [ebp-0x20],ebx
  4244e0:	add    edx,ecx
  4244e2:	add    edx,ebx
  4244e4:	sub    eax,esi
  4244e6:	sub    DWORD PTR [ebp-0x20],eax
  4244e9:	sub    DWORD PTR [ebp-0x20],edx
  4244ec:	or     esi,esi
  4244ee:	je     0x424568
  4244f0:	add    eax,eax
  4244f2:	mov    ebx,0xe
  4244f7:	mov    edx,DWORD PTR [ebp-0x20]
  4244fa:	cmp    edx,0x41
  4244fd:	jne    0x42452a
  4244ff:	mov    ebx,DWORD PTR [ebp-0x20]
  424502:	add    eax,ecx
  424504:	xor    DWORD PTR [ebp-0x20],ebx
  424507:	cmp    eax,0x9706
  42450c:	je     0x42452a
  42450e:	mov    ebx,DWORD PTR [ebp-0x20]
  424511:	cmp    ebx,0xffffffee
  424514:	jne    0x42452a
  424516:	or     ebx,edx
  424518:	sub    DWORD PTR [ebp-0x20],eax
  42451b:	cmp    ebx,DWORD PTR [ebp-0x4]
  42451e:	je     0x42452a
  424520:	mov    edx,DWORD PTR [ebp-0x20]
  424523:	and    edx,ecx
  424525:	and    edx,ebx
  424527:	sub    DWORD PTR [ebp-0x20],edx
  42452a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42452c:	push   0xffffffb4
  42452e:	push   0xffffff8b
  424530:	push   0x6c
  424532:	call   0x424b5c
  424537:	add    esp,0xc
  42453a:	push   0xf268b500
  42453f:	push   0xd215d200
  424544:	push   0x48d9ea00
  424549:	call   0x424a3d
  42454e:	add    esp,0xc
  424551:	add    DWORD PTR [ebp-0x1c],0x8
  424555:	push   0x32
  424557:	push   0xffffffb1
  424559:	push   0x2a
  42455b:	call   0x4254dd
  424560:	add    esp,0xc
  424563:	jmp    0x424403
  424568:	push   0x18bafa00
  42456d:	call   0x4258b5
  424572:	add    esp,0x4
  424575:	push   0xfffffff9
  424577:	push   0x6acee900
  42457c:	push   0x62099500
  424581:	call   0x424ef0
  424586:	add    esp,0xc
  424589:	push   0x1
  42458b:	push   0xf
  42458d:	push   0x4ac68300
  424592:	push   0xffffffdd
  424594:	call   0x424b5c
  424599:	add    esp,0x10
  42459c:	mov    eax,DWORD PTR [ebp-0xc]
  42459f:	and    DWORD PTR [ebp-0x20],eax
  4245a2:	sub    DWORD PTR [ebp-0x20],eax
  4245a5:	pop    edi
  4245a6:	cmp    eax,0x6b
  4245a9:	jne    0x4245ae
  4245ab:	mov    DWORD PTR [ebp-0x20],edi
  4245ae:	pop    esi
  4245af:	mov    ebx,0x71
  4245b4:	sub    ebx,esi
  4245b6:	xor    ecx,ecx
  4245b8:	and    ebx,edi
  4245ba:	add    ecx,esi
  4245bc:	cmp    ecx,0xffffffcb
  4245bf:	je     0x42463d
  4245c1:	cmp    ebx,0xffffffd6
  4245c4:	jne    0x42463d
  4245c6:	cmp    edi,0x7733
  4245cc:	je     0x42463d
  4245ce:	mov    DWORD PTR [ebp-0x20],esi
  4245d1:	mov    edx,0x15
  4245d6:	sub    DWORD PTR [ebp-0x20],ecx
  4245d9:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4245dc:	jne    0x42463d
  4245de:	mov    ecx,DWORD PTR [ebp-0x20]
  4245e1:	xor    DWORD PTR [ebp-0x20],ebx
  4245e4:	cmp    ecx,DWORD PTR ds:0x43704c
  4245ea:	jne    0x42463d
  4245ec:	or     ecx,edi
  4245ee:	and    edx,eax
  4245f0:	mov    ebx,0x53
  4245f5:	and    DWORD PTR [ebp-0x20],ecx
  4245f8:	cmp    edx,esi
  4245fa:	jne    0x42463d
  4245fc:	add    DWORD PTR [ebp-0x20],ebx
  4245ff:	mov    ebx,DWORD PTR [ebp-0x20]
  424602:	sub    ebx,edi
  424604:	mov    ecx,0x45
  424609:	test   edx,0xe4
  42460f:	jne    0x42463d
  424611:	xor    ecx,ecx
  424613:	cmp    ebx,0x62c2
  424619:	jne    0x42463d
  42461b:	add    DWORD PTR [ebp-0x20],eax
  42461e:	sub    DWORD PTR [ebp-0x20],edx
  424621:	test   ebx,0x3
  424627:	jne    0x42463d
  424629:	mov    edx,DWORD PTR ds:0x43705c
  42462f:	cmp    ebx,DWORD PTR [ebp-0x2c]
  424632:	jne    0x42463d
  424634:	sub    DWORD PTR [ebp-0x20],edx
  424637:	add    DWORD PTR [ebp-0x20],ebx
  42463a:	mov    DWORD PTR [ebp-0x28],ecx
  42463d:	pop    ebx
  42463e:	mov    ecx,DWORD PTR [ebp-0x20]
  424641:	add    DWORD PTR [ebp-0x20],ebx
  424644:	mov    edx,0xe6
  424649:	cmp    eax,DWORD PTR ds:0x43704c
  42464f:	je     0x424680
  424651:	add    DWORD PTR [ebp-0x20],edx
  424654:	mov    edx,DWORD PTR ds:0x43705c
  42465a:	sub    edx,eax
  42465c:	cmp    ecx,0x10
  42465f:	je     0x424680
  424661:	add    ecx,eax
  424663:	add    DWORD PTR [ebp-0x20],edx
  424666:	sub    ecx,edi
  424668:	cmp    ecx,DWORD PTR ds:0x43705c
  42466e:	jne    0x424680
  424670:	mov    edx,ecx
  424672:	mov    ecx,DWORD PTR ds:0x43705c
  424678:	sub    DWORD PTR [ebp-0x20],edx
  42467b:	sub    ecx,ebx
  42467d:	sub    DWORD PTR [ebp-0x20],ecx
  424680:	leave  
  424681:	ret    
  424682:	int3   
  424683:	int3   
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	push   ebp
  424688:	mov    ebp,esp
  42468a:	sub    esp,0x34
  42468d:	push   0x39
  42468f:	push   0x71
  424691:	push   0xffffffa2
  424693:	push   0xbe645000
  424698:	call   0x424dc9
  42469d:	add    esp,0x10
  4246a0:	push   0xffffffc3
  4246a2:	push   0xfa180c00
  4246a7:	push   0xf203d500
  4246ac:	push   0x33
  4246ae:	push   0x42084700
  4246b3:	call   0x424b5c
  4246b8:	add    esp,0x14
  4246bb:	push   ebx
  4246bc:	xor    eax,eax
  4246be:	mov    ebx,0x57
  4246c3:	push   0xf2486d00
  4246c8:	push   0xffffffc3
  4246ca:	call   0x4254dd
  4246cf:	add    esp,0x8
  4246d2:	call   0x425172
  4246d7:	push   0xffffffe2
  4246d9:	push   0xa8b24200
  4246de:	call   0x4258b5
  4246e3:	add    esp,0x8
  4246e6:	push   0xd2d30400
  4246eb:	push   0x1a
  4246ed:	push   0x4e36e600
  4246f2:	push   0x4aa95100
  4246f7:	call   0x424ef0
  4246fc:	add    esp,0x10
  4246ff:	push   0xffffff8b
  424701:	push   0xffffffe2
  424703:	push   0x226c1400
  424708:	push   0x92bed600
  42470d:	push   0x4ad11300
  424712:	call   0x424ef0
  424717:	add    esp,0x14
  42471a:	call   0x42502a
  42471f:	push   0x6
  424721:	push   0x1288cd00
  424726:	call   0x4254dd
  42472b:	add    esp,0x8
  42472e:	and    ebx,eax
  424730:	sub    ebx,eax
  424732:	push   0x42
  424734:	push   0xfe1e1900
  424739:	call   0x4253cd
  42473e:	add    esp,0x8
  424741:	sub    ebx,eax
  424743:	push   0x92cde000
  424748:	push   0x1a377500
  42474d:	push   0x5293c300
  424752:	push   0xfffffff2
  424754:	call   0x424ef0
  424759:	add    esp,0x10
  42475c:	push   0x5206b700
  424761:	push   0x3
  424763:	push   0xf8f16e00
  424768:	push   0x7e149100
  42476d:	call   0x4258b5
  424772:	add    esp,0x10
  424775:	push   0x1289d400
  42477a:	push   0x4e206c00
  42477f:	call   0x424dc9
  424784:	add    esp,0x8
  424787:	push   0x3c
  424789:	push   0xffffff90
  42478b:	push   0x6e45fb00
  424790:	push   0xfa2d5100
  424795:	call   0x42574b
  42479a:	add    esp,0x10
  42479d:	call   0x4254dd
  4247a2:	mov    DWORD PTR [ebp-0x1c],ebx
  4247a5:	push   esi
  4247a6:	push   0xda4b6200
  4247ab:	push   0xffffffdf
  4247ad:	push   0xea99e800
  4247b2:	push   0xffffffc7
  4247b4:	call   0x4255d6
  4247b9:	add    esp,0x10
  4247bc:	push   edi
  4247bd:	push   0xeaa64000
  4247c2:	push   0x4a82d300
  4247c7:	push   0x9e0cf100
  4247cc:	push   0xffffffc9
  4247ce:	call   0x4253cd
  4247d3:	add    esp,0x10
  4247d6:	push   0xffffffd1
  4247d8:	push   0x7b
  4247da:	call   0x424b5c
  4247df:	add    esp,0x8
  4247e2:	push   0xffffff8f
  4247e4:	push   0xffffff89
  4247e6:	call   0x4254dd
  4247eb:	add    esp,0x8
  4247ee:	push   0xe8e71900
  4247f3:	push   0x4c
  4247f5:	call   0x4255d6
  4247fa:	add    esp,0x8
  4247fd:	push   0x2e2c7a00
  424802:	push   0xa8fe0e00
  424807:	call   0x424dc9
  42480c:	add    esp,0x8
  42480f:	push   0x58f8dd00
  424814:	push   0xa8c1d200
  424819:	call   0x4253cd
  42481e:	add    esp,0x8
  424821:	push   0x8cec700
  424826:	push   0x723ef700
  42482b:	push   0xffffff9b
  42482d:	call   0x424ef0
  424832:	add    esp,0xc
  424835:	push   0x5a7c3200
  42483a:	push   0xa064b00
  42483f:	push   0x78
  424841:	call   0x4255d6
  424846:	add    esp,0xc
  424849:	call   0x4258b5
  42484e:	push   0x5d
  424850:	push   0xb2063e00
  424855:	push   0x53
  424857:	push   0x4af22500
  42485c:	call   0x4258b5
  424861:	add    esp,0x10
  424864:	pop    edi
  424865:	push   0x62399a00
  42486a:	call   0x424b5c
  42486f:	add    esp,0x4
  424872:	pop    esi
  424873:	or     eax,edi
  424875:	push   0x53
  424877:	push   0xeac1ed00
  42487c:	push   0xffffffa7
  42487e:	push   0xbe6b2700
  424883:	call   0x424dc9
  424888:	add    esp,0x10
  42488b:	push   0x1a057800
  424890:	push   0x8e50bc00
  424895:	push   0xaa291500
  42489a:	push   0xce46b000
  42489f:	call   0x4258b5
  4248a4:	add    esp,0x10
  4248a7:	pop    ebx
  4248a8:	mov    DWORD PTR [ebp-0x1c],eax
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	int3   
  4248ae:	int3   
  4248af:	int3   
  4248b0:	int3   
  4248b1:	int3   
  4248b2:	push   ebp
  4248b3:	mov    ebp,esp
  4248b5:	sub    esp,0x40
  4248b8:	mov    edx,0xb8
  4248bd:	push   0xf62eee00
  4248c2:	push   0x92a22f00
  4248c7:	push   0xffffffd5
  4248c9:	call   0x4255d6
  4248ce:	add    esp,0xc
  4248d1:	push   0x12
  4248d3:	push   0x8dcb300
  4248d8:	push   0x9
  4248da:	push   0x6e
  4248dc:	push   0x2e419b00
  4248e1:	call   0x42574b
  4248e6:	add    esp,0x14
  4248e9:	push   ebx
  4248ea:	mov    DWORD PTR [ebp-0x38],eax
  4248ed:	push   esi
  4248ee:	xor    esi,esi
  4248f0:	sub    esi,eax
  4248f2:	mov    ecx,DWORD PTR [ebp-0x38]
  4248f5:	push   0xffffff88
  4248f7:	push   0x4adaeb00
  4248fc:	push   0x92deee00
  424901:	push   0xfffffffa
  424903:	call   0x424dc9
  424908:	add    esp,0x10
  42490b:	push   0x36
  42490d:	push   0x5f
  42490f:	call   0x424ef0
  424914:	add    esp,0x8
  424917:	call   0x4258b5
  42491c:	test   esi,0x6d4a
  424922:	je     0x424935
  424924:	mov    eax,esi
  424926:	push   0x42
  424928:	push   0xd67b3500
  42492d:	call   0x42502a
  424932:	add    esp,0x8
  424935:	push   edi
  424936:	cmp    esi,DWORD PTR [ebp-0x30]
  424939:	je     0x42494c
  42493b:	push   0xffffffc7
  42493d:	push   0xffffff8b
  42493f:	push   0x12f8c800
  424944:	call   0x42574b
  424949:	add    esp,0xc
  42494c:	mov    esi,DWORD PTR [ebp-0x38]
  42494f:	push   0x7f
  424951:	push   0x52ad5900
  424956:	push   0xf60bd900
  42495b:	push   0x4ab48700
  424960:	call   0x42574b
  424965:	add    esp,0x10
  424968:	call   0x4253cd
  42496d:	mov    ebx,esi
  42496f:	push   0x9e404d00
  424974:	push   0x92ce8f00
  424979:	push   0xffffff97
  42497b:	call   0x425172
  424980:	add    esp,0xc
  424983:	and    DWORD PTR [ebp-0x38],ebx
  424986:	push   0x6f
  424988:	push   0xb8c42000
  42498d:	call   0x424b5c
  424992:	add    esp,0x8
  424995:	push   0xffffffe6
  424997:	push   0xe2562000
  42499c:	push   0xffffffe3
  42499e:	push   0xd2b1cc00
  4249a3:	push   0xfe6b3700
  4249a8:	call   0x42574b
  4249ad:	add    esp,0x14
  4249b0:	push   0x78a9d400
  4249b5:	push   0x4a640700
  4249ba:	push   0x46168e00
  4249bf:	push   0xa
  4249c1:	call   0x42502a
  4249c6:	add    esp,0x10
  4249c9:	push   0xe8c62000
  4249ce:	push   0x6e329e00
  4249d3:	push   0x18c84200
  4249d8:	push   0xffffffe5
  4249da:	call   0x4255d6
  4249df:	add    esp,0x10
  4249e2:	push   0xffffff9b
  4249e4:	push   0x424aa800
  4249e9:	call   0x4254dd
  4249ee:	add    esp,0x8
  4249f1:	call   0x4255d6
  4249f6:	push   0x2c
  4249f8:	push   0xffffffc2
  4249fa:	push   0xfffffffc
  4249fc:	push   0x38f25700
  424a01:	call   0x4255d6
  424a06:	add    esp,0x10
  424a09:	pop    edi
  424a0a:	push   0x21
  424a0c:	push   0x8e313600
  424a11:	push   0x77
  424a13:	call   0x424b5c
  424a18:	add    esp,0xc
  424a1b:	pop    esi
  424a1c:	call   0x4253cd
  424a21:	call   0x4258b5
  424a26:	pop    ebx
  424a27:	push   0x5e210500
  424a2c:	push   0x2b
  424a2e:	call   0x4255d6
  424a33:	add    esp,0x8
  424a36:	leave  
  424a37:	ret    
  424a38:	int3   
  424a39:	int3   
  424a3a:	int3   
  424a3b:	int3   
  424a3c:	int3   
  424a3d:	push   ebp
  424a3e:	mov    ebp,esp
  424a40:	sub    esp,0x20
  424a43:	call   0x424dc9
  424a48:	push   ebx
  424a49:	add    eax,eax
  424a4b:	cmp    eax,0x47c7
  424a50:	je     0x424a6a
  424a52:	push   0xfffffffc
  424a54:	push   0x89e0d00
  424a59:	push   0x22
  424a5b:	push   0x12c53500
  424a60:	push   0x4
  424a62:	call   0x4253cd
  424a67:	add    esp,0x14
  424a6a:	push   esi
  424a6b:	push   0xd8a1bf00
  424a70:	push   0x56716e00
  424a75:	call   0x424dc9
  424a7a:	add    esp,0x8
  424a7d:	push   edi
  424a7e:	mov    DWORD PTR [ebp-0x4],eax
  424a81:	push   0x92b83f00
  424a86:	call   0x4258b5
  424a8b:	add    esp,0x4
  424a8e:	mov    eax,0x9e
  424a93:	call   0x424dc9
  424a98:	push   0xfffffffc
  424a9a:	call   0x424ef0
  424a9f:	add    esp,0x4
  424aa2:	push   0xffffffcb
  424aa4:	push   0x8e457400
  424aa9:	push   0xd2d04400
  424aae:	call   0x4253cd
  424ab3:	add    esp,0xc
  424ab6:	push   0x6f
  424ab8:	call   0x424b5c
  424abd:	add    esp,0x4
  424ac0:	mov    edx,DWORD PTR ds:0x437058
  424ac6:	push   0xd2af6600
  424acb:	push   0xca469500
  424ad0:	push   0x1b
  424ad2:	push   0x6aefff00
  424ad7:	push   0x3a
  424ad9:	call   0x42502a
  424ade:	add    esp,0x14
  424ae1:	push   0xffffff88
  424ae3:	call   0x424dc9
  424ae8:	add    esp,0x4
  424aeb:	push   0xd6499a00
  424af0:	call   0x42574b
  424af5:	add    esp,0x4
  424af8:	push   0x38dd6000
  424afd:	push   0xae6c8000
  424b02:	call   0x4255d6
  424b07:	add    esp,0x8
  424b0a:	pop    edi
  424b0b:	push   0xffffffd1
  424b0d:	push   0x5d
  424b0f:	push   0x12d38000
  424b14:	push   0x6aae4c00
  424b19:	call   0x424ef0
  424b1e:	add    esp,0x10
  424b21:	push   0xee33e600
  424b26:	push   0xffffffde
  424b28:	push   0x79
  424b2a:	call   0x4255d6
  424b2f:	add    esp,0xc
  424b32:	pop    esi
  424b33:	push   0x12a4b200
  424b38:	push   0xffffffc7
  424b3a:	call   0x424dc9
  424b3f:	add    esp,0x8
  424b42:	push   0xf60f6500
  424b47:	push   0xffffffaa
  424b49:	call   0x4254dd
  424b4e:	add    esp,0x8
  424b51:	pop    ebx
  424b52:	xor    DWORD PTR [ebp-0x4],edi
  424b55:	leave  
  424b56:	ret    
  424b57:	int3   
  424b58:	int3   
  424b59:	int3   
  424b5a:	int3   
  424b5b:	int3   
  424b5c:	push   ebp
  424b5d:	mov    ebp,esp
  424b5f:	sub    esp,0x20
  424b62:	xor    edx,edx
  424b64:	mov    DWORD PTR [ebp-0x1c],edx
  424b67:	push   ebx
  424b68:	push   0x19
  424b6a:	push   0x165b1e00
  424b6f:	push   0x4aa39100
  424b74:	call   0x42502a
  424b79:	add    esp,0xc
  424b7c:	push   esi
  424b7d:	push   0x40
  424b7f:	call   0x4253cd
  424b84:	add    esp,0x4
  424b87:	push   edi
  424b88:	push   0x69
  424b8a:	call   0x4258b5
  424b8f:	add    esp,0x4
  424b92:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b95:	push   0x7e1bb300
  424b9a:	call   0x42574b
  424b9f:	add    esp,0x4
  424ba2:	push   0xffffffea
  424ba4:	push   0xc8f4fb00
  424ba9:	push   0x58926c00
  424bae:	push   0x12c4b000
  424bb3:	call   0x4255d6
  424bb8:	add    esp,0x10
  424bbb:	push   0x3e5d4d00
  424bc0:	push   0x74
  424bc2:	push   0x88a57b00
  424bc7:	call   0x4255d6
  424bcc:	add    esp,0xc
  424bcf:	push   0xee66b700
  424bd4:	push   0x6d
  424bd6:	push   0x2a
  424bd8:	push   0xea7dc500
  424bdd:	push   0x92c84600
  424be2:	call   0x42574b
  424be7:	add    esp,0x14
  424bea:	xor    edi,edi
  424bec:	and    edi,eax
  424bee:	push   0xfffffff7
  424bf0:	push   0xe8f37700
  424bf5:	push   0xffffffd8
  424bf7:	push   0xffffffd3
  424bf9:	push   0x12
  424bfb:	call   0x4253cd
  424c00:	add    esp,0x14
  424c03:	mov    eax,DWORD PTR [ebp-0x1c]
  424c06:	cmp    edi,0x3a
  424c09:	je     0x424d72
  424c0f:	push   0x926f8500
  424c14:	push   0x4a817300
  424c19:	push   0xea141700
  424c1e:	call   0x42502a
  424c23:	add    esp,0xc
  424c26:	mov    edx,DWORD PTR [ebp-0x1c]
  424c29:	sub    edi,eax
  424c2b:	add    edi,edi
  424c2d:	push   0x4ae46d00
  424c32:	push   0xf23d9100
  424c37:	push   0xffffff85
  424c39:	push   0x6afc7700
  424c3e:	push   0x427add00
  424c43:	call   0x424ef0
  424c48:	add    esp,0x14
  424c4b:	push   0x44
  424c4d:	call   0x42574b
  424c52:	add    esp,0x4
  424c55:	push   0x92e20a00
  424c5a:	push   0xd2c8ea00
  424c5f:	call   0x4258b5
  424c64:	add    esp,0x8
  424c67:	test   edi,0x79
  424c6d:	je     0x424d72
  424c73:	push   0xaa6f4d00
  424c78:	push   0xffffff8e
  424c7a:	call   0x4255d6
  424c7f:	add    esp,0x8
  424c82:	mov    esi,DWORD PTR [ebp-0x1c]
  424c85:	push   0x8e634d00
  424c8a:	push   0xce5e5000
  424c8f:	call   0x4258b5
  424c94:	add    esp,0x8
  424c97:	push   0x38b1d900
  424c9c:	call   0x424ef0
  424ca1:	add    esp,0x4
  424ca4:	and    esi,edi
  424ca6:	xor    ecx,ecx
  424ca8:	call   0x424ef0
  424cad:	push   0x67
  424caf:	push   0x3895e100
  424cb4:	push   0x3a
  424cb6:	push   0x4aeb3300
  424cbb:	push   0xc8e30600
  424cc0:	call   0x42574b
  424cc5:	add    esp,0x14
  424cc8:	push   0xffffffeb
  424cca:	push   0x9285ac00
  424ccf:	push   0x73
  424cd1:	push   0xa23bbc00
  424cd6:	push   0x7f
  424cd8:	call   0x4255d6
  424cdd:	add    esp,0x14
  424ce0:	push   0x88b83500
  424ce5:	push   0xfe11a600
  424cea:	call   0x425172
  424cef:	add    esp,0x8
  424cf2:	cmp    esi,edi
  424cf4:	je     0x424d72
  424cf6:	push   0xeaf4c700
  424cfb:	push   0xfffffff7
  424cfd:	call   0x425172
  424d02:	add    esp,0x8
  424d05:	push   0x27
  424d07:	push   0xffffffe8
  424d09:	call   0x424ef0
  424d0e:	add    esp,0x8
  424d11:	mov    eax,0x39
  424d16:	and    DWORD PTR [ebp-0x1c],esi
  424d19:	mov    ebx,DWORD PTR ds:0x437048
  424d1f:	push   0x44
  424d21:	push   0xd8a71400
  424d26:	call   0x4253cd
  424d2b:	add    esp,0x8
  424d2e:	sub    ebx,esi
  424d30:	and    ebx,esi
  424d32:	and    ebx,esi
  424d34:	sub    ebx,edi
  424d36:	push   0x69
  424d38:	push   0x7273d700
  424d3d:	push   0x2558700
  424d42:	push   0x8e7ea200
  424d47:	push   0xba1ae900
  424d4c:	call   0x42574b
  424d51:	add    esp,0x14
  424d54:	push   0x3e
  424d56:	call   0x424ef0
  424d5b:	add    esp,0x4
  424d5e:	add    ebx,edi
  424d60:	push   0x6a900100
  424d65:	push   0xffffffeb
  424d67:	call   0x4255d6
  424d6c:	add    esp,0x8
  424d6f:	sub    DWORD PTR [ebp-0x1c],ebx
  424d72:	push   0x5a0b3200
  424d77:	call   0x424ef0
  424d7c:	add    esp,0x4
  424d7f:	pop    edi
  424d80:	call   0x4253cd
  424d85:	pop    esi
  424d86:	push   0x38f91100
  424d8b:	push   0xffffff8b
  424d8d:	push   0xffffffc3
  424d8f:	call   0x42502a
  424d94:	add    esp,0xc
  424d97:	pop    ebx
  424d98:	mov    edx,esi
  424d9a:	push   0x55
  424d9c:	push   0xffffff86
  424d9e:	push   0x2e415b00
  424da3:	push   0x4a665700
  424da8:	call   0x42502a
  424dad:	add    esp,0x10
  424db0:	push   0x38f96600
  424db5:	push   0xea162400
  424dba:	call   0x424ef0
  424dbf:	add    esp,0x8
  424dc2:	leave  
  424dc3:	ret    
  424dc4:	int3   
  424dc5:	int3   
  424dc6:	int3   
  424dc7:	int3   
  424dc8:	int3   
  424dc9:	push   ebp
  424dca:	mov    ebp,esp
  424dcc:	sub    esp,0x2c
  424dcf:	mov    ecx,0xc60f
  424dd4:	push   0x51
  424dd6:	push   0x2046c00
  424ddb:	push   0xa616a800
  424de0:	call   0x42574b
  424de5:	add    esp,0xc
  424de8:	push   0x18dde200
  424ded:	push   0xae43b400
  424df2:	push   0x2c
  424df4:	push   0x1891c800
  424df9:	push   0x34
  424dfb:	call   0x425172
  424e00:	add    esp,0x14
  424e03:	push   ebx
  424e04:	push   0xffffff97
  424e06:	push   0x15
  424e08:	push   0xffffff96
  424e0a:	push   0xffffffb7
  424e0c:	push   0x2c
  424e0e:	call   0x42574b
  424e13:	add    esp,0x14
  424e16:	push   esi
  424e17:	push   0x16772700
  424e1c:	push   0x7f
  424e1e:	call   0x425172
  424e23:	add    esp,0x8
  424e26:	push   0x71
  424e28:	push   0x72021800
  424e2d:	call   0x425172
  424e32:	add    esp,0x8
  424e35:	push   edi
  424e36:	push   0x2c
  424e38:	push   0x5a4e1000
  424e3d:	push   0x189b3d00
  424e42:	call   0x424ef0
  424e47:	add    esp,0xc
  424e4a:	add    eax,eax
  424e4c:	call   0x4258b5
  424e51:	xor    edx,edx
  424e53:	mov    DWORD PTR [ebp-0x4],eax
  424e56:	call   0x4258b5
  424e5b:	push   0x78fb4f00
  424e60:	push   0x6c
  424e62:	push   0x7
  424e64:	push   0xffffffac
  424e66:	push   0xeaa48500
  424e6b:	call   0x424ef0
  424e70:	add    esp,0x14
  424e73:	mov    ecx,DWORD PTR [ebp-0x4]
  424e76:	push   0x1c
  424e78:	push   0x18ecd000
  424e7d:	push   0x56291300
  424e82:	push   0xffffff86
  424e84:	push   0x67
  424e86:	call   0x4255d6
  424e8b:	add    esp,0x14
  424e8e:	pop    edi
  424e8f:	and    DWORD PTR [ebp-0x4],edi
  424e92:	push   0x760fa200
  424e97:	push   0x4aff2d00
  424e9c:	push   0x4645bd00
  424ea1:	push   0x38e69200
  424ea6:	push   0xffffff92
  424ea8:	call   0x425172
  424ead:	add    esp,0x14
  424eb0:	pop    esi
  424eb1:	push   0x28c08200
  424eb6:	push   0xb
  424eb8:	push   0xfffffff9
  424eba:	push   0xffffffd3
  424ebc:	push   0x2b
  424ebe:	call   0x425172
  424ec3:	add    esp,0x14
  424ec6:	call   0x4258b5
  424ecb:	pop    ebx
  424ecc:	cmp    esi,0xffffffcc
  424ecf:	jne    0x424ee4
  424ed1:	push   0x56
  424ed3:	push   0x34
  424ed5:	push   0x58916700
  424eda:	push   0xffffffe6
  424edc:	call   0x425172
  424ee1:	add    esp,0x10
  424ee4:	call   0x42502a
  424ee9:	leave  
  424eea:	ret    
  424eeb:	int3   
  424eec:	int3   
  424eed:	int3   
  424eee:	int3   
  424eef:	int3   
  424ef0:	push   ebp
  424ef1:	mov    ebp,esp
  424ef3:	sub    esp,0x28
  424ef6:	call   0x42574b
  424efb:	push   0x8a6f0b00
  424f00:	push   0x71
  424f02:	push   0xffffffa4
  424f04:	call   0x4255d6
  424f09:	add    esp,0xc
  424f0c:	push   ebx
  424f0d:	mov    DWORD PTR [ebp-0x20],eax
  424f10:	call   0x4258b5
  424f15:	push   esi
  424f16:	sub    DWORD PTR [ebp-0x20],eax
  424f19:	push   0x12d0be00
  424f1e:	call   0x4255d6
  424f23:	add    esp,0x4
  424f26:	push   edi
  424f27:	mov    edi,eax
  424f29:	push   0x72436500
  424f2e:	push   0x2e
  424f30:	call   0x4255d6
  424f35:	add    esp,0x8
  424f38:	mov    eax,DWORD PTR ds:0x437080
  424f3e:	push   0xfffffffa
  424f40:	push   0xa26efd00
  424f45:	push   0x46
  424f47:	push   0xffffff98
  424f49:	push   0x7f
  424f4b:	call   0x42574b
  424f50:	add    esp,0x14
  424f53:	call   0x4255d6
  424f58:	mov    DWORD PTR [ebp-0x20],edi
  424f5b:	push   0xc
  424f5d:	call   0x4258b5
  424f62:	add    esp,0x4
  424f65:	push   0x6e
  424f67:	call   0x42574b
  424f6c:	add    esp,0x4
  424f6f:	push   0xffffff88
  424f71:	push   0x361a8400
  424f76:	push   0xc8e65800
  424f7b:	push   0x12b30400
  424f80:	push   0xffffffe9
  424f82:	call   0x4258b5
  424f87:	add    esp,0x14
  424f8a:	mov    ecx,DWORD PTR ds:0x437080
  424f90:	push   0xfffffff3
  424f92:	push   0x4e
  424f94:	push   0x58fda500
  424f99:	push   0x47
  424f9b:	push   0x48
  424f9d:	call   0x4255d6
  424fa2:	add    esp,0x14
  424fa5:	push   0xffffff9b
  424fa7:	push   0x18b8d000
  424fac:	push   0xfffffff3
  424fae:	push   0x4b
  424fb0:	push   0x4a7c9700
  424fb5:	call   0x42574b
  424fba:	add    esp,0x14
  424fbd:	push   0xba1dae00
  424fc2:	call   0x42574b
  424fc7:	add    esp,0x4
  424fca:	push   0x7e11ab00
  424fcf:	push   0xffffff87
  424fd1:	push   0x5e19eb00
  424fd6:	push   0x4a8b4e00
  424fdb:	call   0x4258b5
  424fe0:	add    esp,0x10
  424fe3:	pop    edi
  424fe4:	xor    ecx,ecx
  424fe6:	call   0x4258b5
  424feb:	push   0x52da0900
  424ff0:	push   0x5673f000
  424ff5:	push   0xa2737000
  424ffa:	call   0x4255d6
  424fff:	add    esp,0xc
  425002:	pop    esi
  425003:	push   0x4623d800
  425008:	push   0xffffffb0
  42500a:	push   0xffffffbf
  42500c:	call   0x42574b
  425011:	add    esp,0xc
  425014:	pop    ebx
  425015:	push   0x5b
  425017:	push   0x7f
  425019:	push   0x21
  42501b:	call   0x4255d6
  425020:	add    esp,0xc
  425023:	leave  
  425024:	ret    
  425025:	int3   
  425026:	int3   
  425027:	int3   
  425028:	int3   
  425029:	int3   
  42502a:	push   ebp
  42502b:	mov    ebp,esp
  42502d:	sub    esp,0x28
  425030:	xor    edx,edx
  425032:	mov    eax,0x57
  425037:	call   0x4258b5
  42503c:	push   0xe8bd9a00
  425041:	call   0x4258b5
  425046:	add    esp,0x4
  425049:	push   ebx
  42504a:	push   0x6d
  42504c:	push   0x6c
  42504e:	call   0x42574b
  425053:	add    esp,0x8
  425056:	push   esi
  425057:	push   0xea216400
  42505c:	push   0x6aa7f700
  425061:	push   0xffffffe1
  425063:	push   0xffffffd4
  425065:	call   0x4255d6
  42506a:	add    esp,0x10
  42506d:	push   0xffffff83
  42506f:	push   0xde33de00
  425074:	push   0x48c64400
  425079:	call   0x4255d6
  42507e:	add    esp,0xc
  425081:	push   edi
  425082:	mov    eax,0x2e
  425087:	mov    DWORD PTR [ebp-0xc],eax
  42508a:	call   0x42574b
  42508f:	cmp    eax,0x254
  425094:	je     0x425099
  425096:	sub    DWORD PTR [ebp-0xc],eax
  425099:	push   0x12e09f00
  42509e:	push   0x4abca500
  4250a3:	push   0x50
  4250a5:	push   0xffffff90
  4250a7:	push   0xffffffcf
  4250a9:	call   0x4255d6
  4250ae:	add    esp,0x14
  4250b1:	cmp    eax,0xc059
  4250b6:	je     0x4250ce
  4250b8:	push   0xffffff87
  4250ba:	push   0xc225bf00
  4250bf:	push   0x527f2a00
  4250c4:	push   0xffffff93
  4250c6:	call   0x4255d6
  4250cb:	add    esp,0x10
  4250ce:	push   0x12a0da00
  4250d3:	push   0xc6337c00
  4250d8:	push   0xffffffa8
  4250da:	call   0x42574b
  4250df:	add    esp,0xc
  4250e2:	push   0x88b5ec00
  4250e7:	call   0x4258b5
  4250ec:	add    esp,0x4
  4250ef:	push   0x12d10e00
  4250f4:	push   0x0
  4250f6:	push   0xf242a900
  4250fb:	push   0xc89c4c00
  425100:	push   0xc6479700
  425105:	call   0x4258b5
  42510a:	add    esp,0x14
  42510d:	pop    edi
  42510e:	and    eax,edi
  425110:	cmp    eax,DWORD PTR [ebp-0x14]
  425113:	je     0x425118
  425115:	sub    DWORD PTR [ebp-0xc],eax
  425118:	push   0xf24bc000
  42511d:	push   0x36
  42511f:	push   0x23
  425121:	push   0x17
  425123:	push   0x6279b700
  425128:	call   0x42574b
  42512d:	add    esp,0x14
  425130:	pop    esi
  425131:	push   0x6a0e3700
  425136:	push   0x78eedd00
  42513b:	push   0xffffffd1
  42513d:	call   0x4255d6
  425142:	add    esp,0xc
  425145:	push   0xffffffb6
  425147:	push   0x30
  425149:	call   0x4255d6
  42514e:	add    esp,0x8
  425151:	pop    ebx
  425152:	cmp    ebx,0x38b9
  425158:	je     0x42516b
  42515a:	mov    ecx,0x25
  42515f:	and    ecx,esi
  425161:	push   0xffffffd9
  425163:	call   0x42574b
  425168:	add    esp,0x4
  42516b:	leave  
  42516c:	ret    
  42516d:	int3   
  42516e:	int3   
  42516f:	int3   
  425170:	int3   
  425171:	int3   
  425172:	push   ebp
  425173:	mov    ebp,esp
  425175:	sub    esp,0x20
  425178:	call   0x4255d6
  42517d:	push   ebx
  42517e:	push   0x52d43800
  425183:	call   0x42574b
  425188:	add    esp,0x4
  42518b:	push   0x26
  42518d:	push   0x58ab7800
  425192:	push   0xffffffa0
  425194:	push   0x6a938a00
  425199:	call   0x4255d6
  42519e:	add    esp,0x10
  4251a1:	push   esi
  4251a2:	xor    edx,edx
  4251a4:	xor    ebx,ebx
  4251a6:	sub    edx,ebx
  4251a8:	sub    edx,ebx
  4251aa:	push   0xffffffb2
  4251ac:	push   0xa89fc300
  4251b1:	push   0x56
  4251b3:	push   0x18
  4251b5:	call   0x4255d6
  4251ba:	add    esp,0x10
  4251bd:	push   0x4a06e600
  4251c2:	push   0x36
  4251c4:	push   0x6e14eb00
  4251c9:	push   0x6f
  4251cb:	call   0x4258b5
  4251d0:	add    esp,0x10
  4251d3:	push   edi
  4251d4:	cmp    eax,0x6886
  4251d9:	je     0x4252c2
  4251df:	mov    edi,0x5021
  4251e4:	push   0xffffffa4
  4251e6:	push   0xeacbed00
  4251eb:	push   0xfffffff3
  4251ed:	push   0x13
  4251ef:	push   0x4e07b600
  4251f4:	call   0x42574b
  4251f9:	add    esp,0x14
  4251fc:	push   0x1c
  4251fe:	push   0xffffffb0
  425200:	push   0x52794b00
  425205:	call   0x4255d6
  42520a:	add    esp,0xc
  42520d:	mov    eax,0x64f3
  425212:	mov    DWORD PTR [ebp-0x4],eax
  425215:	push   0x46
  425217:	push   0xffffffd8
  425219:	push   0xc67cc700
  42521e:	call   0x42574b
  425223:	add    esp,0xc
  425226:	push   0xd2dc9c00
  42522b:	push   0xfffffff8
  42522d:	push   0xfffffff3
  42522f:	call   0x4258b5
  425234:	add    esp,0xc
  425237:	push   0x1883e600
  42523c:	call   0x4255d6
  425241:	add    esp,0x4
  425244:	and    edi,ebx
  425246:	push   0x22623100
  42524b:	push   0x39
  42524d:	push   0xe
  42524f:	call   0x4255d6
  425254:	add    esp,0xc
  425257:	push   0x66
  425259:	push   0x1e5d0a00
  42525e:	call   0x42574b
  425263:	add    esp,0x8
  425266:	push   0xa8a68600
  42526b:	push   0x52befa00
  425270:	call   0x4258b5
  425275:	add    esp,0x8
  425278:	push   0xffffffd5
  42527a:	push   0x1
  42527c:	push   0x866c5000
  425281:	push   0xd6261200
  425286:	push   0xa65e1a00
  42528b:	call   0x42574b
  425290:	add    esp,0x14
  425293:	push   0xffffff85
  425295:	push   0x75
  425297:	push   0x1e0ad700
  42529c:	push   0xd8d1c700
  4252a1:	push   0x8a557700
  4252a6:	call   0x42574b
  4252ab:	add    esp,0x14
  4252ae:	push   0xffffff9c
  4252b0:	push   0xd
  4252b2:	push   0xce69cd00
  4252b7:	call   0x42574b
  4252bc:	add    esp,0xc
  4252bf:	sub    DWORD PTR [ebp-0x4],edi
  4252c2:	sub    edi,eax
  4252c4:	test   edi,0xf7
  4252ca:	jne    0x425309
  4252cc:	push   0xd2c0dd00
  4252d1:	push   0x425eb100
  4252d6:	call   0x42574b
  4252db:	add    esp,0x8
  4252de:	push   0x32
  4252e0:	push   0xffffffb1
  4252e2:	push   0xffffffce
  4252e4:	push   0xffffffe9
  4252e6:	push   0xffffffe5
  4252e8:	call   0x4258b5
  4252ed:	add    esp,0x14
  4252f0:	mov    edx,edi
  4252f2:	push   0x823d1f00
  4252f7:	push   0x58862700
  4252fc:	push   0x262bfb00
  425301:	call   0x42574b
  425306:	add    esp,0xc
  425309:	xor    esi,esi
  42530b:	push   0x7c
  42530d:	push   0x6ad53700
  425312:	push   0x34
  425314:	push   0x58e88500
  425319:	push   0x4e
  42531b:	call   0x4255d6
  425320:	add    esp,0x14
  425323:	mov    eax,edi
  425325:	mov    DWORD PTR [ebp-0x1c],esi
  425328:	push   0x3a2c3500
  42532d:	push   0x4ae06a00
  425332:	push   0xca629800
  425337:	push   0x16
  425339:	call   0x4258b5
  42533e:	add    esp,0x10
  425341:	call   0x4255d6
  425346:	push   0xd2f9a300
  42534b:	push   0xffffff91
  42534d:	push   0x9a0f4d00
  425352:	push   0x1
  425354:	call   0x4255d6
  425359:	add    esp,0x10
  42535c:	push   0xffffff8e
  42535e:	push   0x2e532100
  425363:	push   0xffffffaf
  425365:	push   0x2e372d00
  42536a:	push   0xffffff8f
  42536c:	call   0x4258b5
  425371:	add    esp,0x14
  425374:	pop    edi
  425375:	and    eax,esi
  425377:	push   0x2e52b800
  42537c:	push   0xfa65b700
  425381:	call   0x42574b
  425386:	add    esp,0x8
  425389:	pop    esi
  42538a:	sub    eax,edi
  42538c:	push   0x9672ce00
  425391:	push   0xffffff91
  425393:	push   0x2a
  425395:	push   0x46692f00
  42539a:	call   0x4255d6
  42539f:	add    esp,0x10
  4253a2:	pop    ebx
  4253a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4253a6:	push   0x529de500
  4253ab:	push   0x13
  4253ad:	call   0x4258b5
  4253b2:	add    esp,0x8
  4253b5:	push   0xffffff81
  4253b7:	push   0xffffffb9
  4253b9:	push   0xea864d00
  4253be:	call   0x4258b5
  4253c3:	add    esp,0xc
  4253c6:	leave  
  4253c7:	ret    
  4253c8:	int3   
  4253c9:	int3   
  4253ca:	int3   
  4253cb:	int3   
  4253cc:	int3   
  4253cd:	push   ebp
  4253ce:	mov    ebp,esp
  4253d0:	sub    esp,0x20
  4253d3:	push   0xffffff86
  4253d5:	push   0x38
  4253d7:	push   0xe235000
  4253dc:	call   0x4255d6
  4253e1:	add    esp,0xc
  4253e4:	call   0x4258b5
  4253e9:	push   ebx
  4253ea:	test   eax,0xf8
  4253ef:	je     0x425405
  4253f1:	push   0x4abaca00
  4253f6:	push   0x7d
  4253f8:	push   0xe88c7300
  4253fd:	call   0x4255d6
  425402:	add    esp,0xc
  425405:	call   0x4255d6
  42540a:	push   esi
  42540b:	push   0xba242600
  425410:	push   0xde202200
  425415:	push   0x78d66000
  42541a:	push   0x4ad23100
  42541f:	push   0x72
  425421:	call   0x4258b5
  425426:	add    esp,0x14
  425429:	push   edi
  42542a:	push   0xa8f5e300
  42542f:	push   0xa245ac00
  425434:	push   0x35
  425436:	call   0x4255d6
  42543b:	add    esp,0xc
  42543e:	push   0x68
  425440:	push   0x42
  425442:	push   0xffffffba
  425444:	call   0x4255d6
  425449:	add    esp,0xc
  42544c:	push   0x2a12a900
  425451:	push   0xffffffa6
  425453:	push   0x866a3400
  425458:	push   0x20
  42545a:	push   0xffffffd9
  42545c:	call   0x4255d6
  425461:	add    esp,0x14
  425464:	push   0x46
  425466:	push   0x1e
  425468:	push   0xffffffc6
  42546a:	push   0x69
  42546c:	push   0x1
  42546e:	call   0x4258b5
  425473:	add    esp,0x14
  425476:	push   0xffffffd0
  425478:	push   0xd22af800
  42547d:	push   0x33
  42547f:	call   0x4258b5
  425484:	add    esp,0xc
  425487:	push   0xb8c55f00
  42548c:	push   0xffffffa6
  42548e:	push   0x40
  425490:	call   0x42574b
  425495:	add    esp,0xc
  425498:	mov    DWORD PTR [ebp-0x18],eax
  42549b:	xor    edi,edi
  42549d:	push   0x7e23d500
  4254a2:	push   0xffffffbf
  4254a4:	call   0x4255d6
  4254a9:	add    esp,0x8
  4254ac:	sub    DWORD PTR [ebp-0x18],edi
  4254af:	pop    edi
  4254b0:	sub    DWORD PTR [ebp-0x18],edi
  4254b3:	pop    esi
  4254b4:	call   0x4258b5
  4254b9:	pop    ebx
  4254ba:	add    DWORD PTR [ebp-0x18],esi
  4254bd:	push   0x88950900
  4254c2:	push   0xae637300
  4254c7:	push   0xa4fdb00
  4254cc:	push   0x32
  4254ce:	call   0x42574b
  4254d3:	add    esp,0x10
  4254d6:	leave  
  4254d7:	ret    
  4254d8:	int3   
  4254d9:	int3   
  4254da:	int3   
  4254db:	int3   
  4254dc:	int3   
  4254dd:	push   ebp
  4254de:	mov    ebp,esp
  4254e0:	sub    esp,0x18
  4254e3:	push   0xffffffca
  4254e5:	push   0xffffff8e
  4254e7:	push   0xffffff99
  4254e9:	push   0xd2b08d00
  4254ee:	call   0x4258b5
  4254f3:	add    esp,0x10
  4254f6:	push   0xffffffb3
  4254f8:	call   0x4258b5
  4254fd:	add    esp,0x4
  425500:	push   ebx
  425501:	push   0x8
  425503:	push   0x62
  425505:	push   0x8d8c100
  42550a:	push   0xda146d00
  42550f:	push   0xa201e700
  425514:	call   0x42574b
  425519:	add    esp,0x14
  42551c:	push   esi
  42551d:	push   0x92b29a00
  425522:	push   0x36
  425524:	call   0x4255d6
  425529:	add    esp,0x8
  42552c:	push   0x6b
  42552e:	push   0x31
  425530:	push   0x9a327c00
  425535:	call   0x42574b
  42553a:	add    esp,0xc
  42553d:	push   edi
  42553e:	push   0xffffff9d
  425540:	call   0x4255d6
  425545:	add    esp,0x4
  425548:	push   0xffffff9c
  42554a:	push   0x8
  42554c:	push   0x12baad00
  425551:	push   0xffffff9c
  425553:	push   0x68fa4b00
  425558:	call   0x4258b5
  42555d:	add    esp,0x14
  425560:	mov    DWORD PTR [ebp-0x18],eax
  425563:	call   0x42574b
  425568:	push   0x4acaa600
  42556d:	push   0x3c
  42556f:	push   0xfffffff5
  425571:	call   0x42574b
  425576:	add    esp,0xc
  425579:	call   0x4258b5
  42557e:	pop    edi
  42557f:	and    DWORD PTR [ebp-0x18],edi
  425582:	push   0x8a26ab00
  425587:	call   0x42574b
  42558c:	add    esp,0x4
  42558f:	pop    esi
  425590:	mov    ecx,0x4
  425595:	add    ecx,eax
  425597:	push   0x73
  425599:	push   0xd8baa100
  42559e:	push   0xffffffeb
  4255a0:	call   0x4258b5
  4255a5:	add    esp,0xc
  4255a8:	pop    ebx
  4255a9:	push   0x5e5b2a00
  4255ae:	push   0xfe0f2a00
  4255b3:	call   0x42574b
  4255b8:	add    esp,0x8
  4255bb:	push   0xa63e5600
  4255c0:	push   0xffffffa0
  4255c2:	push   0xc8dd1800
  4255c7:	call   0x42574b
  4255cc:	add    esp,0xc
  4255cf:	leave  
  4255d0:	ret    
  4255d1:	int3   
  4255d2:	int3   
  4255d3:	int3   
  4255d4:	int3   
  4255d5:	int3   
  4255d6:	push   ebp
  4255d7:	mov    ebp,esp
  4255d9:	sub    esp,0x40
  4255dc:	mov    ecx,0x45d5
  4255e1:	mov    ecx,0xab41
  4255e6:	mov    DWORD PTR [ebp-0x8],ecx
  4255e9:	push   ebx
  4255ea:	mov    ecx,DWORD PTR [ebp-0x8]
  4255ed:	sub    DWORD PTR [ebp-0x8],ecx
  4255f0:	push   esi
  4255f1:	test   ecx,0xffe9
  4255f7:	jne    0x4255fc
  4255f9:	or     DWORD PTR [ebp-0x8],ecx
  4255fc:	push   edi
  4255fd:	add    ecx,ecx
  4255ff:	cmp    ecx,0xfffffffd
  425602:	jne    0x425676
  425604:	test   ecx,0x70
  42560a:	je     0x425676
  42560c:	cmp    ecx,0x6a
  42560f:	je     0x425676
  425611:	mov    esi,DWORD PTR [ebp-0x8]
  425614:	mov    ebx,DWORD PTR [ebp-0x8]
  425617:	test   ecx,0x13ec
  42561d:	jne    0x425676
  42561f:	cmp    ebx,0x42
  425622:	je     0x425676
  425624:	mov    eax,DWORD PTR [ebp-0x8]
  425627:	and    esi,ebx
  425629:	cmp    ebx,0x1e
  42562c:	je     0x425676
  42562e:	and    DWORD PTR [ebp-0x8],ebx
  425631:	xor    DWORD PTR [ebp-0x8],esi
  425634:	add    ecx,ebx
  425636:	mov    esi,DWORD PTR [ebp-0x8]
  425639:	add    DWORD PTR [ebp-0x8],eax
  42563c:	mov    ebx,DWORD PTR [ebp-0x8]
  42563f:	sub    esi,ecx
  425641:	cmp    esi,0x9ff4
  425647:	je     0x425676
  425649:	mov    edx,DWORD PTR [ebp-0x8]
  42564c:	cmp    esi,0xffffffb6
  42564f:	je     0x425676
  425651:	mov    edi,DWORD PTR [ebp-0x8]
  425654:	add    DWORD PTR [ebp-0x8],edi
  425657:	sub    DWORD PTR [ebp-0x8],esi
  42565a:	mov    eax,edx
  42565c:	sub    DWORD PTR [ebp-0x8],ebx
  42565f:	cmp    eax,0xffffffc5
  425662:	je     0x425676
  425664:	mov    ecx,0x8f
  425669:	mov    esi,DWORD PTR [ebp-0x8]
  42566c:	add    esi,eax
  42566e:	mov    DWORD PTR [ebp-0x8],esi
  425671:	sub    ecx,edx
  425673:	sub    DWORD PTR [ebp-0x8],ecx
  425676:	add    DWORD PTR [ebp-0x8],edi
  425679:	add    DWORD PTR [ebp-0x8],edx
  42567c:	add    eax,ebx
  42567e:	mov    edi,ecx
  425680:	mov    ebx,ecx
  425682:	test   eax,0x43
  425687:	jne    0x4256bc
  425689:	sub    edi,edx
  42568b:	and    edi,edx
  42568d:	mov    edx,edi
  42568f:	and    eax,ebx
  425691:	xor    edi,edi
  425693:	sub    edi,ebx
  425695:	sub    edi,edx
  425697:	add    DWORD PTR [ebp-0x8],edi
  42569a:	cmp    edx,edi
  42569c:	jne    0x4256bc
  42569e:	cmp    eax,0xffffff99
  4256a1:	jne    0x4256bc
  4256a3:	add    DWORD PTR [ebp-0x8],esi
  4256a6:	mov    ebx,DWORD PTR [ebp-0x8]
  4256a9:	mov    DWORD PTR [ebp-0x8],ebx
  4256ac:	mov    edi,0xa0
  4256b1:	sub    eax,esi
  4256b3:	add    DWORD PTR [ebp-0x8],eax
  4256b6:	add    DWORD PTR [ebp-0x8],ebx
  4256b9:	add    DWORD PTR [ebp-0x8],edi
  4256bc:	pop    edi
  4256bd:	mov    edx,DWORD PTR [ebp-0x8]
  4256c0:	cmp    edx,0x2f
  4256c3:	je     0x42573c
  4256c5:	add    edx,esi
  4256c7:	and    DWORD PTR [ebp-0x8],edi
  4256ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4256cd:	sub    ebx,edi
  4256cf:	cmp    edx,0xa
  4256d2:	jne    0x42573c
  4256d4:	mov    eax,esi
  4256d6:	add    DWORD PTR [ebp-0x8],edx
  4256d9:	or     DWORD PTR [ebp-0x8],eax
  4256dc:	cmp    ebx,esi
  4256de:	je     0x42573c
  4256e0:	cmp    ebx,0xc689
  4256e6:	je     0x42573c
  4256e8:	cmp    ebx,0xffffff94
  4256eb:	jne    0x42573c
  4256ed:	mov    ecx,DWORD PTR [ebp-0x8]
  4256f0:	add    DWORD PTR [ebp-0x8],ecx
  4256f3:	cmp    eax,DWORD PTR [ebp-0x20]
  4256f6:	jne    0x42573c
  4256f8:	mov    esi,edx
  4256fa:	xor    DWORD PTR [ebp-0x8],ebx
  4256fd:	mov    ecx,0xb8
  425702:	and    DWORD PTR [ebp-0x8],edx
  425705:	cmp    edx,0xffffffec
  425708:	je     0x42573c
  42570a:	mov    eax,DWORD PTR [ebp-0x8]
  42570d:	cmp    eax,0x10a66881
  425712:	je     0x42573c
  425714:	sub    eax,edx
  425716:	test   esi,0xab
  42571c:	jne    0x42573c
  42571e:	cmp    eax,0x1c
  425721:	jne    0x42573c
  425723:	add    esi,eax
  425725:	mov    ebx,DWORD PTR [ebp-0x8]
  425728:	add    DWORD PTR [ebp-0x8],edx
  42572b:	xor    DWORD PTR [ebp-0x8],esi
  42572e:	mov    esi,ecx
  425730:	cmp    ebx,0xffffffac
  425733:	jne    0x42573c
  425735:	and    ebx,edx
  425737:	add    esi,ebx
  425739:	and    DWORD PTR [ebp-0x8],esi
  42573c:	pop    esi
  42573d:	add    DWORD PTR [ebp-0x8],esi
  425740:	pop    ebx
  425741:	sub    DWORD PTR [ebp-0x8],ebx
  425744:	leave  
  425745:	ret    
  425746:	int3   
  425747:	int3   
  425748:	int3   
  425749:	int3   
  42574a:	int3   
  42574b:	push   ebp
  42574c:	mov    ebp,esp
  42574e:	sub    esp,0x3c
  425751:	xor    edx,edx
  425753:	mov    DWORD PTR [ebp-0x38],edx
  425756:	push   ebx
  425757:	add    DWORD PTR [ebp-0x38],edx
  42575a:	push   esi
  42575b:	mov    edx,DWORD PTR [ebp-0x38]
  42575e:	cmp    edx,DWORD PTR [ebp-0x2c]
  425761:	je     0x42579e
  425763:	mov    esi,DWORD PTR [ebp-0x38]
  425766:	add    DWORD PTR [ebp-0x38],esi
  425769:	sub    edx,esi
  42576b:	and    DWORD PTR [ebp-0x38],esi
  42576e:	mov    esi,DWORD PTR [ebp-0x38]
  425771:	cmp    esi,edx
  425773:	je     0x42579e
  425775:	cmp    esi,0xc
  425778:	je     0x42579e
  42577a:	or     esi,edx
  42577c:	cmp    esi,0xffffffae
  42577f:	je     0x42579e
  425781:	mov    edx,DWORD PTR [ebp-0x38]
  425784:	cmp    esi,edx
  425786:	je     0x42579e
  425788:	mov    ebx,DWORD PTR [ebp-0x38]
  42578b:	add    ebx,edx
  42578d:	cmp    ebx,edx
  42578f:	jne    0x42579e
  425791:	mov    DWORD PTR [ebp-0x38],ebx
  425794:	sub    esi,ebx
  425796:	mov    ebx,DWORD PTR [ebp-0x38]
  425799:	and    esi,ebx
  42579b:	or     DWORD PTR [ebp-0x38],esi
  42579e:	push   edi
  42579f:	mov    eax,DWORD PTR [ebp-0x38]
  4257a2:	sub    DWORD PTR [ebp-0x38],edx
  4257a5:	cmp    eax,0xfffffffc
  4257a8:	je     0x42583e
  4257ae:	add    eax,ebx
  4257b0:	mov    esi,DWORD PTR [ebp-0x38]
  4257b3:	mov    ecx,DWORD PTR [ebp-0x38]
  4257b6:	add    esi,esi
  4257b8:	add    DWORD PTR [ebp-0x38],eax
  4257bb:	cmp    ecx,0x6a
  4257be:	jne    0x42583e
  4257c0:	add    DWORD PTR [ebp-0x38],ecx
  4257c3:	cmp    esi,0x77
  4257c6:	jne    0x42583e
  4257c8:	mov    ecx,DWORD PTR [ebp-0x38]
  4257cb:	add    esi,edx
  4257cd:	cmp    edx,0xffffffa6
  4257d0:	jne    0x42583e
  4257d2:	mov    eax,0xae7f
  4257d7:	sub    ecx,ebx
  4257d9:	and    esi,eax
  4257db:	xor    eax,eax
  4257dd:	add    ecx,ecx
  4257df:	cmp    ecx,DWORD PTR [ebp-0x8]
  4257e2:	jne    0x42583e
  4257e4:	sub    ecx,ebx
  4257e6:	mov    ebx,edx
  4257e8:	mov    edx,DWORD PTR [ebp-0x38]
  4257eb:	or     ecx,esi
  4257ed:	and    eax,ecx
  4257ef:	or     eax,esi
  4257f1:	cmp    eax,esi
  4257f3:	je     0x42583e
  4257f5:	mov    esi,DWORD PTR [ebp-0x38]
  4257f8:	sub    esi,ebx
  4257fa:	cmp    edx,ecx
  4257fc:	jne    0x42583e
  4257fe:	add    DWORD PTR [ebp-0x38],edx
  425801:	add    eax,eax
  425803:	cmp    esi,eax
  425805:	jne    0x42583e
  425807:	mov    edi,DWORD PTR [ebp-0x38]
  42580a:	test   edi,0xc811
  425810:	jne    0x42583e
  425812:	sub    DWORD PTR [ebp-0x38],esi
  425815:	mov    esi,DWORD PTR [ebp-0x38]
  425818:	add    edi,ebx
  42581a:	add    DWORD PTR [ebp-0x38],eax
  42581d:	mov    ecx,0xda
  425822:	sub    ecx,edi
  425824:	add    DWORD PTR [ebp-0x38],ecx
  425827:	cmp    esi,0xffffff81
  42582a:	je     0x42583e
  42582c:	add    esi,ecx
  42582e:	mov    ecx,0xec
  425833:	add    ecx,esi
  425835:	mov    edi,DWORD PTR [ebp-0x38]
  425838:	mov    DWORD PTR [ebp-0x30],ecx
  42583b:	sub    DWORD PTR [ebp-0x38],edi
  42583e:	mov    edx,DWORD PTR [ebp-0x38]
  425841:	mov    ecx,eax
  425843:	and    ecx,edi
  425845:	sub    ecx,ebx
  425847:	mov    DWORD PTR [ebp-0x38],ecx
  42584a:	cmp    esi,ebx
  42584c:	je     0x425851
  42584e:	add    DWORD PTR [ebp-0x38],edx
  425851:	add    ebx,edi
  425853:	test   eax,0x8e
  425858:	jne    0x425899
  42585a:	cmp    ebx,0x6e76
  425860:	je     0x425899
  425862:	mov    edi,DWORD PTR [ebp-0x38]
  425865:	cmp    edi,0x4c
  425868:	je     0x425899
  42586a:	mov    edx,0x3159
  42586f:	mov    esi,0x9a
  425874:	or     edx,ecx
  425876:	xor    DWORD PTR [ebp-0x38],edx
  425879:	cmp    edi,eax
  42587b:	je     0x425899
  42587d:	mov    ecx,DWORD PTR ds:0x437084
  425883:	mov    DWORD PTR [ebp-0x38],edi
  425886:	mov    esi,0xb1
  42588b:	sub    DWORD PTR [ebp-0x38],esi
  42588e:	sub    DWORD PTR [ebp-0x38],ebx
  425891:	sub    esi,ebx
  425893:	sub    DWORD PTR [ebp-0x38],ecx
  425896:	or     DWORD PTR [ebp-0x38],esi
  425899:	mov    ecx,DWORD PTR [ebp-0x38]
  42589c:	add    DWORD PTR [ebp-0x38],ecx
  42589f:	add    DWORD PTR [ebp-0x38],ebx
  4258a2:	pop    edi
  4258a3:	add    DWORD PTR [ebp-0x38],edi
  4258a6:	pop    esi
  4258a7:	sub    DWORD PTR [ebp-0x38],esi
  4258aa:	pop    ebx
  4258ab:	sub    DWORD PTR [ebp-0x38],ecx
  4258ae:	leave  
  4258af:	ret    
  4258b0:	int3   
  4258b1:	int3   
  4258b2:	int3   
  4258b3:	int3   
  4258b4:	int3   
  4258b5:	push   ebp
  4258b6:	mov    ebp,esp
  4258b8:	sub    esp,0x44
  4258bb:	xor    ecx,ecx
  4258bd:	add    ecx,ecx
  4258bf:	mov    DWORD PTR [ebp-0x30],ecx
  4258c2:	push   ebx
  4258c3:	mov    ebx,DWORD PTR [ebp-0x30]
  4258c6:	mov    edx,DWORD PTR [ebp-0x30]
  4258c9:	and    edx,ebx
  4258cb:	cmp    edx,DWORD PTR [ebp-0x40]
  4258ce:	je     0x4258d3
  4258d0:	add    DWORD PTR [ebp-0x30],edx
  4258d3:	push   esi
  4258d4:	sub    DWORD PTR [ebp-0x30],edx
  4258d7:	push   edi
  4258d8:	add    ecx,ecx
  4258da:	add    ecx,ecx
  4258dc:	add    ecx,ecx
  4258de:	mov    edi,DWORD PTR [ebp-0x30]
  4258e1:	mov    esi,ebx
  4258e3:	or     esi,ecx
  4258e5:	cmp    ebx,0x22
  4258e8:	je     0x4258fc
  4258ea:	and    esi,ebx
  4258ec:	sub    edi,edx
  4258ee:	add    DWORD PTR [ebp-0x30],esi
  4258f1:	test   edi,0x50
  4258f7:	jne    0x4258fc
  4258f9:	sub    DWORD PTR [ebp-0x30],edi
  4258fc:	or     edi,esi
  4258fe:	sub    edi,edx
  425900:	or     DWORD PTR [ebp-0x30],edi
  425903:	add    edx,edx
  425905:	sub    edx,edi
  425907:	test   edx,0x64ca
  42590d:	je     0x425928
  42590f:	cmp    edi,0xf8ff
  425915:	je     0x425928
  425917:	xor    eax,eax
  425919:	xor    ecx,ecx
  42591b:	or     DWORD PTR [ebp-0x30],ecx
  42591e:	and    edx,ecx
  425920:	and    edx,ebx
  425922:	and    DWORD PTR [ebp-0x30],edx
  425925:	sub    DWORD PTR [ebp-0x30],eax
  425928:	cmp    edi,DWORD PTR [ebp-0x24]
  42592b:	je     0x4259a9
  42592d:	cmp    edx,DWORD PTR [ebp-0x10]
  425930:	je     0x4259a9
  425932:	mov    ebx,0xd5
  425937:	mov    ecx,0xd6
  42593c:	sub    ebx,esi
  42593e:	add    ecx,eax
  425940:	cmp    edi,DWORD PTR [ebp-0x3c]
  425943:	jne    0x4259a9
  425945:	add    ebx,ecx
  425947:	mov    edx,DWORD PTR [ebp-0x30]
  42594a:	cmp    esi,DWORD PTR [ebp-0x44]
  42594d:	jne    0x4259a9
  42594f:	cmp    edx,DWORD PTR [ebp-0x14]
  425952:	je     0x4259a9
  425954:	add    ebx,ebx
  425956:	mov    ecx,DWORD PTR [ebp-0x30]
  425959:	sub    DWORD PTR [ebp-0x30],ecx
  42595c:	test   edx,0x35
  425962:	jne    0x4259a9
  425964:	test   ebx,0x1f
  42596a:	je     0x4259a9
  42596c:	sub    DWORD PTR [ebp-0x30],edx
  42596f:	xor    edx,edx
  425971:	sub    DWORD PTR [ebp-0x30],edx
  425974:	cmp    ecx,0x7c
  425977:	je     0x4259a9
  425979:	test   ebx,0x33
  42597f:	je     0x4259a9
  425981:	xor    edx,edx
  425983:	mov    esi,DWORD PTR [ebp-0x30]
  425986:	sub    ebx,esi
  425988:	sub    edx,ebx
  42598a:	add    DWORD PTR [ebp-0x30],ecx
  42598d:	cmp    edx,eax
  42598f:	je     0x4259a9
  425991:	add    edx,eax
  425993:	add    DWORD PTR [ebp-0x30],esi
  425996:	mov    esi,0xfa19
  42599b:	test   edx,0xa8
  4259a1:	jne    0x4259a9
  4259a3:	sub    DWORD PTR [ebp-0x30],edx
  4259a6:	sub    DWORD PTR [ebp-0x30],esi
  4259a9:	pop    edi
  4259aa:	mov    ebx,DWORD PTR [ebp-0x30]
  4259ad:	test   edi,0x1d
  4259b3:	jne    0x425a06
  4259b5:	sub    ebx,ecx
  4259b7:	xor    ecx,ecx
  4259b9:	sub    DWORD PTR [ebp-0x30],eax
  4259bc:	mov    esi,DWORD PTR [ebp-0x30]
  4259bf:	add    esi,esi
  4259c1:	cmp    esi,ecx
  4259c3:	je     0x425a06
  4259c5:	add    ecx,ebx
  4259c7:	mov    edx,DWORD PTR [ebp-0x30]
  4259ca:	sub    DWORD PTR [ebp-0x30],edi
  4259cd:	mov    ebx,DWORD PTR [ebp-0x30]
  4259d0:	add    esi,edx
  4259d2:	mov    DWORD PTR [ebp-0x30],ecx
  4259d5:	cmp    esi,0x29a4
  4259db:	jne    0x425a06
  4259dd:	mov    ecx,DWORD PTR [ebp-0x30]
  4259e0:	xor    eax,eax
  4259e2:	mov    DWORD PTR [ebp-0x8],edx
  4259e5:	add    DWORD PTR [ebp-0x30],esi
  4259e8:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4259eb:	jne    0x425a06
  4259ed:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4259f0:	je     0x425a06
  4259f2:	mov    edx,DWORD PTR [ebp-0x30]
  4259f5:	and    ecx,ebx
  4259f7:	or     ecx,esi
  4259f9:	cmp    ecx,edi
  4259fb:	je     0x425a06
  4259fd:	add    DWORD PTR [ebp-0x30],eax
  425a00:	add    DWORD PTR [ebp-0x8],ecx
  425a03:	add    DWORD PTR [ebp-0x30],edx
  425a06:	pop    esi
  425a07:	cmp    esi,DWORD PTR [ebp-0x30]
  425a0a:	je     0x425a0f
  425a0c:	add    DWORD PTR [ebp-0x30],esi
  425a0f:	pop    ebx
  425a10:	add    edx,edi
  425a12:	mov    ecx,0xb29f
  425a17:	cmp    edx,DWORD PTR [ebp-0x18]
  425a1a:	je     0x425a82
  425a1c:	cmp    ebx,DWORD PTR [ebp-0x3c]
  425a1f:	jne    0x425a82
  425a21:	or     DWORD PTR [ebp-0x30],ebx
  425a24:	mov    eax,DWORD PTR [ebp-0x30]
  425a27:	sub    DWORD PTR [ebp-0x30],edx
  425a2a:	add    ecx,ecx
  425a2c:	cmp    edx,0xffffffb0
  425a2f:	jne    0x425a82
  425a31:	mov    edx,DWORD PTR [ebp-0x30]
  425a34:	add    DWORD PTR [ebp-0x30],edx
  425a37:	add    ecx,edx
  425a39:	sub    eax,edi
  425a3b:	sub    DWORD PTR [ebp-0x30],eax
  425a3e:	cmp    ecx,DWORD PTR [ebp-0x38]
  425a41:	je     0x425a82
  425a43:	cmp    ecx,0x51
  425a46:	jne    0x425a82
  425a48:	mov    eax,0x90
  425a4d:	sub    eax,ebx
  425a4f:	mov    edx,DWORD PTR [ebp-0x30]
  425a52:	add    eax,edx
  425a54:	add    DWORD PTR [ebp-0x30],ebx
  425a57:	cmp    edx,0x67
  425a5a:	je     0x425a82
  425a5c:	sub    DWORD PTR [ebp-0x30],ebx
  425a5f:	sub    ecx,edx
  425a61:	cmp    ecx,0xffffffc0
  425a64:	je     0x425a82
  425a66:	sub    DWORD PTR [ebp-0x30],ecx
  425a69:	test   eax,0x6b
  425a6e:	jne    0x425a82
  425a70:	sub    eax,esi
  425a72:	mov    edx,DWORD PTR [ebp-0x30]
  425a75:	cmp    edx,DWORD PTR [ebp-0x20]
  425a78:	jne    0x425a82
  425a7a:	sub    DWORD PTR [ebp-0x30],edx
  425a7d:	add    eax,esi
  425a7f:	sub    DWORD PTR [ebp-0x30],eax
  425a82:	leave  
  425a83:	ret    
